push
mov
sub
mov
mov
jmp
adcb
shrl
fs
jle
outsl
jge
jle
xlat
cmp
rol
pop
add
add
rdpmc
xadd
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
dec
sbb
scas
lods
cld
loopne
test
scas
or
shlb
push
sub
sub
les
xchg
ret
test
fxch
les
and
cltd
popa
rcll
mov
cli
imulb
pop
out
sbbb
push
das
mov
iret
and
divl
sahf
push
push
xchg
mov
insl
lret
mov
cwtl
adc
loope
cwtl
pop
mov
pushf
adc
push
push
popa
mull
jns
aaa
js
cmpb
push
dec
dec
dec
and
jg
adc
adc
push
mov
adc
inc
mov
test
inc
cli
outsb
add
sbb
sbb
stc
cltd
fsubs
sarb
mov
lret
in
cmp
imul
mov
nop
mov
push
jecxz
lock
mov
lea
hlt
scas
cmp
cwtl
mov
gs
subb
inc
sub
leave
or
loop
ljmp
lock
pop
xor
push
out
jge
xchg
sub
cmp
sub
popa
add
sbb
test
xchg
scas
ds
pop
add
adc
push
xchg
dec
movsb
inc
cmp
and
inc
inc
out
sarl
movsb
les
and
scas
mov
leave
dec
pop
shl
xchg
jnp
add
jno
or
pop
arpl
sub
imul
mov
inc
cwtl
inc
outsl
mov
das
pop
fiaddl
mov
mov
push
add
fistpl
xor
push
dec
xor
xchg
push
mov
dec
daa
push
out
inc
mov
push
ficomps
jae
sbb
iret
dec
sub
sbb
xlat
scas
lret
sbb
lcall
mov
mov
bound
les
ret
push
sub
enter
sub
lea
lahf
scas
push
pop
aaa
mull
ja
rorl
repnz
inc
leave
in
and
sub
xlat
inc
jmp
mov
xor
shrl
sbb
aaa
mov
adc
lret
incb
mov
sbb
jo
fcoml
mov
outsb
shlb
dec
dec
mov
xchg
cli
jp
mov
mov
orb
addr16
mov
cmp
push
cmpsb
cmp
mov
das
je
mov
pop
mov
push
xchg
idiv
repnz
jg
addr16
sbb
mov
fimuls
lret
inc
jmp
sub
and
sub
aad
push
lods
lods
mov
int3
xor
bound
lods
incb
sbb
je
sub
dec
mov
jno
notb
dec
push
adc
sub
pusha
dec
sahf
aam
stos
and
and
rcrb
add
leave
pop
pop
and
outsb
pop
add
or
mov
jne
insb
and
push
pop
xor
or
jmp
ja
and
icebp
mov
mov
movl
adc
movl
adc
mov
mov
mov
or
push
push
sbb
mov
movzbl
sbb
xor
and
push
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
jmp
xchg
mov
push
mov
push
out
xor
jge
jle
jge
jle
or
or
les
iret
daa
addb
sub
xchg
xchg
popf
mov
xchg
shll
mov
jnp
cmpsb
dec
cmp
pop
push
lods
push
test
inc
xor
jl
ret
out
jb
lods
push
movsl
hlt
insb
mov
cltd
stos
bound
addl
sbb
scas
inc
sbb
int
aam
mov
in
jl
or
mov
inc
mov
adc
dec
mov
aam
leave
roll
pop
sub
and
mov
aam
cmp
bnd
mov
or
mov
push
data16
adc
daa
jmp
mov
subps
stc
sbb
xor
ret
shr
lods
jle
clc
lret
mov
nop
sbb
sub
daa
fiadds
push
add
and
and
daa
bound
repnz
mov
or
loope
sub
cltd
xchg
arpl
mov
mov
andb
mov
mov
out
adc
xchg
xchg
sub
sbb
xor
and
les
aaa
adc
push
fidivrs
sub
pusha
mov
sbb
mov
ljmp
dec
dec
sbb
jns
jl
ja
xchg
pop
call
jg
inc
adc
sub
cmc
pop
pop
mov
rcll
arpl
scas
stc
dec
mulb
repz
pop
jae
movsb
xchg
stos
dec
aas
jo
lcall
mov
scas
sub
inc
or
les
outsb
scas
xorl
in
xchg
or
hlt
gs
insb
gs
and
das
and
inc
xchg
hlt
push
cmpsl
push
in
and
push
and
pusha
orl
lods
fcomp
lods
jmp
inc
arpl
bound
mov
xlat
adc
rcr
psubb
aad
cli
cwtl
cmp
lock
sub
push
fwait
out
insw
aad
pop
stos
rcrb
into
lds
xchg
stos
jmp
inc
and
jg,pt
mov
add
cmpsl
and
lahf
sti
mov
jmp
inc
pop
mov
jp
push
sub
popf
lea
sbb
jg
movsl
imul
out
test
push
mov
xor
shll
sbb
cmc
cs
ss
fbld
std
lcall
lea
out
or
jns
bound
movsb
sti
push
mov
add
and
std
mov
add
cmpsl
insl
xor
pop
rcrb
xchg
lahf
mov
sbb
cmp
cmpsb
inc
sub
inc
mov
jnp
pusha
sub
jae
in
stos
add
xchg
cmp
lds
movsb
xor
mov
icebp
in
mov
adc
jne
mov
push
mov
lahf
dec
rorb
rcl
and
mov
sub
pop
sub
popa
xchg
iret
in
push
mov
sub
and
sub
pop
push
dec
lods
add
jecxz
fisttpl
or
push
les
pop
lret
or
and
stc
aad
repz
mov
testb
pop
mov
lock
cmp
add
mov
cmp
add
or
xchg
cmc
lret
mov
ljmp
psrlw
popa
fcmovb
xor
mov
fldenv
pop
add
mov
call
inc
sahf
xor
aam
mov
or
bound
andb
and
mov
test
add
push
loopne
cli
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
movl
movl
or
movl
add
movl
xor
mov
xor
xor
add
mov
movl
sbb
movb
subl
mov
xor
add
sbbl
mov
mov
xor
xorl
add
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
xor
add
not
mov
sub
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
jmp
mov
mull
cmp
pushf
mov
jle
jge
jle
je
rorl
outsl
sahf
fdivrs
sub
and
mov
xchg
nop
mov
aaa
xchg
dec
iret
cwtl
mov
ljmp
addr16
push
jbe
ljmp
add
cmp
cmp
stc
testl
in
pop
cmpsb
adc
scas
add
test
insb
clc
fisubl
jnp
pop
outsb
je
xchg
jmp
lret
cli
add
stos
jbe
addr16
insl
pop
cmp
jns
movsb
dec
adc
rorb
sub
popa
push
std
push
mov
fcoml
adc
mov
rolb
ret
add
dec
xchg
push
push
sub
jbe
pop
jnp
or
loop
xchg
jge
push
bound
pop
mov
xor
mov
in
jle
iret
or
out
lds
mov
pop
in
mov
test
push
cmc
pushf
mov
add
pop
movsb
imul
test
ljmp
xchg
push
push
sub
jno
and
test
dec
in
lods
int
mov
add
and
adc
repnz
inc
in
scas
inc
fwait
dec
jmp
cmc
fnstenv
cmc
xor
dec
pop
mov
adc
xlat
adc
iret
push
adc
cmp
mov
idiv
dec
sub
jg
repz
ds
add
sub
add
push
sarl
into
shll
dec
popf
test
adcb
fisttpll
cmpsb
pop
lds
xor
pop
sub
push
or
data16
and
lods
xor
sub
sti
push
adc
adc
xor
sbb
movb
icebp
aas
sub
or
lret
mov
iret
pop
mov
xor
pop
xchg
xchg
mov
jp
xchg
cmp
jl
or
je
loopne
mov
fsubrl
pushf
jne
adc
popa
in
idivl
xor
fcompl
les
mov
pop
xchg
mov
cld
outsl
fwait
pop
fsubrp
fsubl
lea
xor
out
and
inc
roll
lea
fidivs
xor
ret
sbb
test
dec
mov
inc
aaa
out
inc
mov
xchg
add
push
repnz
int3
ret
pushf
fcmove
sub
xchg
in
rcr
ss
dec
dec
dec
rcl
and
test
xchg
lods
adc
xor
ficoml
dec
mov
pop
lea
arpl
adcb
fcoms
fs
jnp
jmp
xlat
out
ficomps
jno
jns
cmp
outsb
fldcw
jb
sub
pop
sbb
jae
xchg
fwait
mov
sbb
dec
insb
ret
addl
jno
dec
xchg
mov
cmp
and
mov
loop
or
push
add
inc
neg
jp
lea
js
mov
shrb
es
inc
jecxz
sahf
mov
mov
cmc
push
mov
aad
out
push
insl
leave
add
imul
clc
sbb
mov
repnz
loopne
popf
sub
lods
mov
pop
inc
inc
sbb
push
mov
cmp
pop
shrb
jo
and
push
outsl
and
sbb
or
into
lea
jb
mov
aad
pusha
adc
xchg
xor
in
rcl
pop
fcomp
popf
clc
movsl
leave
insl
xchg
or
push
or
push
in
cmp
lock
jns
xor
add
dec
mov
or
push
aaa
mov
sub
int
int3
jne
les
pusha
ja
mov
adc
scas
dec
xlat
out
iret
daa
add
dec
mov
push
mov
test
loope
pop
dec
and
ljmp
or
inc
add
add
lret
add
mov
mov
mov
xor
jmp
lahf
in
leave
decl
imul
das
pop
or
dec
add
jle
loope
clc
add
inc
mov
add
repz
jne
sbb
mov
cmc
subl
sbb
jmp
shlb
mov
loopne
rcrl
xor
punpckhdq
shlb
mov
cltd
xlat
jecxz
in
and
je
jle
movsl
mov
push
test
jnp
stos
fimuls
dec
push
and
add
mov
iret
es
lods
sbb
pop
mov
and
gs
dec
icebp
aam
out
sti
out
mov
ret
test
pop
jl
push
sub
mov
pop
push
popa
dec
cmp
fstps
iret
daa
xchg
adc
add
xor
sub
jmp
sahf
pop
inc
insl
sub
imul
bound
pop
jns,pt
popa
or
inc
cwtl
test
jno
inc
ficompl
push
test
jbe
rolb
mov
or
jg
mov
pop
cwtl
dec
pop
loopne
pusha
rcll
adc
dec
sbb
inc
push
gs
ffree
sub
dec
movsb
sub
xor
adc
int
jne
push
xchg
inc
and
add
sub
fs
inc
and
aas
sbbl
outsb
mov
sahf
dec
jg
cmp
mov
mov
popa
xorb
lahf
cmpsb
push
jp
push
push
mov
and
mov
xor
roll
lahf
loop,pt
jecxz
lret
ljmp
sub
mov
sub
mov
addr16
push
mov
cmc
andl
jp
movsl
repz
bound
jnp
pop
out
shr
ss
xchg
jnp
das
mov
push
push
and
data16
sbb
fwait
iret
cmp
inc
or
mov
cwtl
ss
pop
xchg
pop
push
and
and
out
and
sti
adc
std
daa
nop
lea
add
ljmp
mov
lea
add
call
xchg
push
pop
mov
xchg
out
cld
mov
into
inc
pop
jmp
jp
jge
stos
in
lods
push
test
mov
insl
dec
xchg
outsb
stos
push
clc
lock
std
call
mov
xchg
outsl
mov
jp
int3
and
mov
cli
ret
inc
mov
jge
ljmp
popa
jno
mov
adc
mov
gs
enter
xor
and
lods
inc
lods
ja
popa
cmp
inc
xchg
xor
push
lds
pop
pushf
add
ret
mov
mov
sbb
arpl
mov
popa
adc
adc
mov
scas
inc
and
add
sub
mov
sbb
lahf
in
lcall
lcall
add
mov
mov
lods
sub
test
inc
push
push
or
cmpsl
mov
imull
dec
aam
shlb
xchg
je
out
mov
and
push
icebp
add
and
jle
dec
in
fcoms
bound
inc
sub
jno
xchg
mov
paddusb
lock
fidivrl
gs
inc
jg
hlt
stc
fstl
pop
push
out
aad
fistl
sbbb
ret
mov
mov
sub
jecxz
add
inc
mov
scas
movsl
inc
add
push
lret
insb
mov
mov
daa
xor
rclb
mov
loope
xor
lahf
cmp
movsb
push
test
incl
inc
clc
mov
xor
mov
not
mov
or
mov
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
or
mov
xor
add
orl
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
jmp
rorb
dec
inc
push
push
push
sbb
std
cmp
jge
jle
add
je
push
mov
jg
repz
test
in
adc
nop
cwtl
aam
fs
imul
dec
mov
jg
rcll
and
mov
sub
and
add
cmpsl
es
scas
mov
push
xor
mov
aam
jno
push
push
mov
out
pop
adc
bound
lahf
sbb
fwait
js
cmp
cltd
mov
or
test
hlt
xchg
sub
int
mov
ret
jb
sbb
xor
pushl
out
or
leave
stos
or
sub
push
mov
outsl
stos
or
push
loope
sbb
fs
stc
mov
insb
xor
imul
xchg
div
test
rcr
sbb
mov
in
movsl
sahf
aaa
lea
jmp
cmpsb
pop
nop
jbe
lods
cli
inc
inc
aad
jg
and
mov
mov
push
mov
mov
and
lret
aas
test
insl
adc
clc
sbb
out
jmp
and
jbe
loope
shll
lret
push
movsb
out
mov
jns
shrb
out
stos
dec
int
push
insb
fildl
insb
add
sbb
xchg
fs
pop
inc
stc
pop
test
pop
in
ret
xor
ss
leave
stos
xor
xchg
aam
pop
mov
rorb
loopne
sbb
mov
xor
mov
ror
add
js
sbb
iret
orb
into
in
add
mov
cwtl
mov
dec
inc
outsb
test
fcom
add
cmc
cli
dec
add
inc
push
adc
inc
je
adc
mov
popf
test
push
movsb
xchg
push
repnz
mov
fcomi
lock
inc
inc
sbb
xlat
lea
cmpsl
shll
push
sub
je
in
add
enter
dec
push
das
add
bound
sahf
test
mov
xchg
test
mov
push
stos
mov
jge
mov
je
std
or
rep
mov
clc
fldl2e
push
aam
push
pop
cwtl
push
push
adc
xchg
insb
in
addr16
hlt
sub
test
jb
mov
int3
insb
lods
jnp,pt
gs
jge
lret
in
repz
int3
pop
xchg
push
inc
dec
xlat
pop
xor
xchg
lcall
out
xor
mov
jns
jmp
imul
xor
adc
or
xor
mov
jmp
and
sbb
rorl
sbb
dec
lds
xorl
addl
adc
add
movsb
daa
xlat
xchg
mov
mov
add
sbb
fstp
pushf
push
imul
or
mov
test
jmp
je
sbb
cld
ja
jp
out
cmpsb
cmp
dec
jb
dec
xchg
arpl
imul
fidivl
push
xchg
shll
sub
aad
mov
dec
adcl
mov
mov
daa
xor
les
jl
mov
add
and
push
and
sti
imul
pop
mov
pop
mov
fstl
add
insl
cwtl
dec
and
and
cmp
lds
loope
cmc
push
pop
nop
inc
mov
mov
sbb
push
hlt
not
cmp
and
aam
mov
ja
mov
cmpsl
mov
lret
mov
std
stos
sbb
push
lods
lods
pop
sti
dec
dec
out
scas
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
jmp
xor
mov
mov
mov
sbb
adc
stos
or
jle
arpl
das
pop
inc
sub
roll
das
ljmp
std
cld
xchg
xor
mov
clc
hlt
push
push
addr16
or
sub
cli
stos
shll
imul
xor
bound
fldt
pop
cmc
dec
inc
mov
imul
pop
rcl
adc
xlat
pop
jp
xor
adc
aas
xchg
int
sbb
ror
dec
lods
popa
mov
add
mov
scas
data16
mov
adc
lods
mov
repnz
ja
jae
pop
ret
sti
pop
mov
jno
dec
sub
int3
std
xchg
pop
ret
jl
out
icebp
call
pop
cli
jbe
pop
mov
or
cmp
int
jne
icebp
xchg
and
iret
dec
xchg
dec
mov
outsl
sbb
lcall
inc
pop
in
xchg
lret
pop
jge
sbb
outsl
daa
insl
jnp
cmp
xor
pop
outsb
scas
cmpsb
cmp
das
sub
mov
sub
mov
push
xchg
bound
cmp
cmp
xor
mov
ret
mov
cmp
xchg
xchg
jg
or
int
test
jae
jnp
js
dec
ret
mov
sub
xchg
adc
testb
cld
cmp
jnp
inc
sarl
inc
dec
xor
repz
mov
dec
sahf
mov
lret
cmp
mov
add
xor
stos
hlt
stos
jns,pt
shr
frstor
xor
in
cmp
jg
cmpl
movsb
push
lret
dec
mov
notl
popf
mov
test
nop
fs
mov
insl
sub
test
rcrl
push
in
clc
add
cmp
mov
lods
push
lret
push
mov
and
test
pusha
out
int
notb
orl
fwait
sub
ret
add
sub
lahf
fcomi
imul
insl
sub
or
repnz
push
cwtl
outsb
and
fisttpll
cmp
lea
xor
nop
mov
and
mov
andps
std
pop
jb
xor
js
fstp
mov
aaa
pop
jmp
lahf
and
mov
adc
cmp
es
mulb
cmpsb
push
cltd
mov
pop
loop
sub
roll
in
mov
dec
mov
dec
mov
add
or
or
jb
cmp
xor
stc
inc
and
mov
pop
mov
je
das
xchg
in
dec
adc
inc
adc
enter
dec
sahf
pop
scas
push
and
pop
sub
lods
jns
cmp
or
push
inc
dec
ss
fwait
jmp
jns
faddp
in
dec
pushf
or
cmp
and
in
mov
out
push
shlb
js
sub
jae
shl
jne
jl
rcrl
mov
sbb
or
dec
xor
and
rdmsr
mov
cmp
fucomp
jno
stc
lahf
push
sbb
std
jno
and
in
lahf
fcmovnb
or
sub
jb
pop
leave
gs
ret
aaa
fwait
cmp
xchg
cmpsb
add
ret
lea
iret
fld
cmp
fadds
lea
test
cmp
loopne
xor
sbb
ljmp
movsl
lods
jl
inc
fcoml
jbe
in
cmp
pop
loope
sbb
sub
enter
lods
leave
fcmovnb
int
int
addr16
cmpsb
pop
rol
xor
lahf
cmp
xlat
xchg
ds
or
mov
xor
fisubrs
icebp
and
mov
add
add
inc
call
add
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
stos
addr16
in
loope
jno
jo
fs
jp
mov
outsl
jge
jle
cmp
js
and
jl
mov
mov
push
pop
pop
sbb
out
sub
mov
ror
lret
addr16
or
stc
xor
call
xchg
sbb
lods
icebp
xchg
mov
rcl
ficomps
clc
sbb
out
or
mov
xor
lea
sbb
jne
mov
mov
adc
push
adc
push
mov
mov
adc
arpl
test
jne
push
adc
outsb
loop
jl
inc
push
sbb
sbb
dec
jp
pmaxsw
xchg
lahf
loopne
out
jge
dec
idivb
cmp
shlb
dec
cmp
or
ret
pop
fdiv
xchg
pop
inc
mov
in
pop
repnz
data16
loop
arpl
jnp
fildl
sub
adc
loope
xchg
inc
mov
mov
sahf
popf
inc
or
push
adc
pop
sub
ss
add
stc
push
in
test
in
popf
cli
mov
mov
sbb
or
lret
adc
sbb
xchg
push
sbb
out
mov
sbb
jl
xchg
mov
imul
xor
es
pop
sub
cmp
pop
dec
dec
lea
xor
sarl
repz
test
mov
xor
hlt
jbe
pop
mov
sbb
sub
mov
push
rcrb
imul
sahf
cmp
arpl
movsb
push
or
jle
adc
outsb
jmp
ret
cli
fnsave
mov
sbb
pop
inc
mov
shl
mov
or
test
out
decl
lds
fwait
mov
popa
out
xor
fabs
push
fs
mov
sbb
mov
mov
jg
adc
dec
leave
add
icebp
dec
fsubrs
mov
pop
ror
mov
leave
dec
jge
mov
inc
jmp
inc
sbb
shrl
lret
pop
shl
mov
aas
push
movsb
mov
loop
shlb
outsb
cld
push
js
pop
aas
xor
dec
fcmove
dec
ffree
jo
out
iret
test
cmp
mov
mov
jp
dec
and
cmc
sub
stos
mov
loopne
fnstsw
and
test
mov
push
mov
movhps
lods
sbb
adc
push
pop
push
cwtl
or
orb
mov
sub
inc
iret
scas
inc
adc
mov
sub
aas
pop
popa
cmpsb
cmpb
add
jno
std
into
dec
fdivs
stc
or
sbb
enter
cwtl
mov
add
bound
sub
add
sbb
jg
cmp
lea
pusha
xor
cmp
out
jo
inc
dec
sbb
push
pop
inc
adc
fs
inc
pop
lret
cmpsl
add
lds
test
imul
or
arpl
ret
stos
and
dec
adc
sub
and
stos
mov
stos
mov
sub
mov
test
scas
xchg
dec
les
xchg
jns
push
add
mov
xchg
jnp
fmuls
or
lods
dec
dec
xor
roll
loopne
mov
add
jns
push
test
ret
inc
pop
pop
xor
mov
mov
sbb
aad
or
pusha
push
sbb
daa
out
dec
out
sbb
sbb
xchg
stos
jl
ss
xorb
xchg
mov
xchg
sbb
mov
mov
jae
outsl
loopne
cmp
jmp
cmp
sti
scas
xchg
push
bound
popf
sub
es
push
jb
sub
mov
fucomp
adc
dec
push
pop
ret
inc
sahf
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
jno
mov
cs
mov
mov
jle
outsl
jge
jle
mov
subl
hlt
call
cmc
adc
mov
ja
push
mov
sbb
xlat
es
xchg
cmp
std
loop
xchg
push
int
sbb
movsl
lock
push
gs
out
cltd
into
pushf
push
hlt
nop
mov
pop
insl
ffreep
mov
int3
shll
xchg
pop
adc
fxch
xor
add
stc
jl
jmp
pushf
popf
insb
xor
fcmovnb
rcrl
adc
pop
mul
dec
sarb
bnd
or
test
dec
push
sbb
addr16
mov
jmp
jmp
mov
pop
mov
cmpsb
mov
adc
xchg
cli
out
mov
sub
and
pop
loope
aas
std
jmp
lret
aam
int
jle
adc
and
jnp
pushf
mov
enter
insb
sub
jno
je
pop
lahf
pop
clc
and
in
in
fcomps
or
int
or
xor
pushf
pop
ljmp
bound
push
scas
stos
xchg
dec
ljmp
shll
xor
mov
iret
inc
adc
sub
jge
xchg
in
cli
dec
pop
mov
mov
pop
pop
inc
inc
mov
sbb
shr
push
mov
ljmp
movsb
outsb
adc
les
cmc
stc
mov
iret
clc
pop
push
mov
ficoms
movsb
mov
in
rcrl
and
push
push
mov
sti
adc
sahf
prefetcht0
push
insl
cmpsl
sub
cmpsb
xchg
leave
sub
mov
das
lret
or
inc
cmp
and
in
stc
xchg
popa
insb
int
movsb
stos
sub
jb
xor
adc
push
int3
mov
jp
fxch
cmp
mov
jno
or
adc
in
ret
fisubl
adc
xor
fistpl
sahf
loopne
mov
idiv
std
insl
mov
movsb
cltd
mov
movsb
cmp
xor
cmp
sarb
mov
lret
test
aas
je
out
ds
xlat
ds
cld
mov
cmp
adc
jno
dec
aad
shl
mov
std
pop
jp
cmpsb
shl
mov
add
pop
daa
arpl
fiadds
lods
sti
dec
hlt
pop
cmpl
lea
mov
jno
pop
sbbl
out
cwtl
out
lret
pop
in
out
and
iret
mov
pop
xchg
repz
push
popf
in
int
mov
out
adc
dec
insb
leave
stos
and
dec
test
lock
xchg
repz
cmp
adc
test
icebp
lcall
xchg
push
pushf
les
pop
ja
lea
clc
push
jge
push
jge
jnp
ss
mov
movsb
outsl
or
pop
jle
pop
fwait
popa
fisttpl
aaa
lods
dec
aam
mov
xchg
push
cmc
stos
aas
aas
sub
push
pop
xor
push
mov
nop
sbb
mov
jb
in
mov
xchg
rorl
and
arpl
xor
daa
insl
mov
xor
ds
testl
xor
sub
test
mov
aad
xor
xchg
jg
out
jmp
fwait
xlat
lea
sub
mov
fiaddl
lock
fucomp
xor
lret
pand
xor
test
cmp
fcmovne
mov
xor
mov
add
bnd
mov
cltd
ja
je
cltd
test
pop
pop
jb
out
lock
jecxz
pop
ds
scas
push
popa
call
andb
or
inc
adc
test
mov
jne
mov
xor
add
jmp
in
adc
ret
icebp
xor
xchg
sbb
fprem
jns
xchg
jle
outsl
jge
jle
adc
sti
aad
add
xor
mov
repnz
pop
icebp
jne
scas
notl
mov
add
cmc
cmp
xchg
cmp
stos
cld
sub
scas
aas
sub
nop
jp
test
out
sbb
and
cmp
bound
inc
shr
or
jo
mov
dec
sub
ret
mov
roll
pop
adc
or
xchg
fsubr
pop
outsl
cld
lret
stos
out
or
xchg
mov
sbb
loope
mov
adc
aas
bound
test
test
xchg
add
xlat
jle
sub
add
inc
rclb
stos
push
cmp
mov
popa
es
mov
rcr
inc
and
iret
mov
mov
fiadds
pop
imul
sbb
fistpl
xchg
cmpsb
lcall
dec
xor
xor
pop
inc
inc
jp
orb
xchg
mov
jg
mov
xchg
rcrb
in
cmp
fisttpll
pop
dec
jge
pop
insb
test
mov
xchg
pop
daa
xchg
xlat
and
inc
and
cmp
inc
ja
daa
rclb
sub
test
pusha
pop
cmp
stos
adc
adc
inc
sbb
inc
stos
xchg
cld
mov
cmp
mov
cmp
cmp
out
movsb
std
mull
sar
sub
aas
dec
adc
outsb
pop
sbb
pop
mov
clc
mov
mov
mul
shlb
push
arpl
dec
push
sbb
bound
out
pop
pop
addl
push
mov
loop
shll
loop
in
int3
scas
push
cmp
add
mov
xor
cwtl
arpl
pop
pop
add
lea
lret
test
xchg
data16
in
sub
mov
push
xor
scas
or
xor
lret
xchg
push
or
jno
or
inc
aam
daa
or
ret
jge
xor
jl,pt
fsubl
lods
sbb
xor
adc
repnz
xchg
mov
popa
push
xor
and
pusha
jo
cmpsb
icebp
movsb
imul
dec
mov
push
call
outsl
les
shrb
jno
fwait
int3
and
movsl
clc
cs
pcmpgtw
test
mov
popa
pop
push
pop
aaa
sahf
pusha
mov
sti
jmp
scas
pop
ds
mov
add
dec
xchg
pop
mov
imul
mov
das
mov
lock
lahf
xor
add
xchg
push
mov
pop
dec
sbb
or
rorb
and
jbe
cmp
sbb
pop
cmp
cmpsb
mov
fadds
jp
xchg
icebp
mov
movsl
cmpsb
popa
ds
add
xor
xor
pusha
enter
scas
mov
stos
xchg
dec
inc
xchg
push
jo
sti
popa
inc
iret
jl
pusha
sarb
jnp
out
frstor
cmc
pop
and
andb
lods
push
or
daa
cmp
add
stc
mov
push
or
inc
inc
shll
inc
scas
fpatan
push
cld
push
mov
pushf
ljmp
lock
andb
cs
je
rep
cmpsl
sbb
pop
mov
rcrb
sbb
bound
sbb
imul
outsl
in
int3
les
fidivrl
orb
mov
sarl
push
sbb
jbe
out
ja
pop
out
cmp
jae
or
nop
ficompl
shll
jle
ss
pop
shll
rorb
ss
add
call
inc
in
movb
push
mov
add
push
mov
mov
pushl
jmp
push
js
repnz
jno
call
cltd
stos
loop
negl
jle
sbb
add
sbb
jg
rorl
adc
aad
mov
xlat
gs
mov
mov
test
ficomps
xchg
cmp
js
sbb
push
adc
jl
cmp
add
out
or
push
test
push
dec
stos
popa
ret
inc
push
xlat
jl
mov
addr16
imul
dec
sub
call
outsl
and
add
xor
mov
cld
adc
push
shll
jp
push
pop
mov
or
aaa
hlt
xchg
pop
push
negb
sahf
inc
sarl
and
push
test
fidivrl
mov
mov
inc
cmp
fidivs
sub
pop
mov
add
es
xchg
jg
push
fwait
pop
scas
adc
pop
xor
dec
xchg
aam
jne
sub
adc
mov
out
clc
out
push
jl
pop
cmp
or
lret
lcall
es
cmpsl
loopne
cmp
inc
add
push
or
test
fstpt
mov
push
xchg
mov
je
mov
mov
pop
in
cli
push
inc
add
repnz
jnp
ljmp
jl
or
movsb
ret
push
pop
scas
cmp
pop
rorb
pop
xor
push
xchg
add
jb
pop
xor
mov
push
or
das
xor
jecxz
sub
adc
cs
pop
add
mov
loope
or
xor
dec
mov
and
stc
repnz
aam
das
fmuls
or
jge
cltd
pop
hlt
mov
movsb
mov
les
insb
idivb
daa
faddl
in
push
es
sub
sti
out
mov
nop
in
outsb
sbb
sbb
push
ds
aad
pop
xlat
cmp
inc
or
aaa
jae
xchg
pop
sub
cmp
dec
test
xor
sarl
cmpsb
xchg
movsb
sub
nop
xor
mov
outsl
stos
popa
adc
gs
and
xor
sbb
lods
js
test
cmp
dec
and
xor
dec
fldl2t
lcall
or
daa
push
sub
loope
data16
int
mov
lret
jns
and
dec
or
push
fadd
sbb
fwait
andb
out
mov
es
icebp
and
leave
pusha
xchg
nop
push
in
mov
dec
pop
in
cmp
repz
pop
fistl
adc
or
mov
jmp
lock
aam
mov
adc
shl
mov
jp
xchg
arpl
arpl
aad
popa
push
mov
jns
mov
out
inc
cmpsb
subb
hlt
jb
nop
xor
inc
jg
fucomp
xchg
inc
out
jno
xor
xchg
mov
push
cmp
add
sbb
or
sti
enter
mov
jg
sub
lods
sti
cwtl
xor
loope
sbb
repz
test
mov
cs
ret
dec
add
ret
inc
aad
js
mov
incb
mov
push
iret
ret
ja
aaa
ss
sub
pop
cld
out
sub
inc
fbld
in
sbb
clc
imul
sub
ss
je
sbb
jle
pusha
dec
imul
fadd
adc
mov
push
insl
rol
aaa
ljmp
lcall
or
mov
adc
hlt
in
sti
jg
dec
pop
testb
dec
movsb
jg
lahf
sbb
loope
iret
in
aaa
js
or
addb
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
jmp
dec
repz
insb
jno
in
sbb
sub
in
jle
outsl
jge
jle
ss
push
cltd
popa
jg
outsb
xlat
pushf
and
inc
ret
push
mov
xor
cmpsl
xor
jo
imul
inc
sti
hlt
shll
imull
sbb
lret
repnz
mov
bound
xchg
or
fxch
sbb
sub
jb
push
or
jae
pop
inc
jl
dec
repnz
adc
sub
push
aad
ror
xchg
data16
add
adc
ds
mov
popl
stos
sub
data16
lock
scas
in
jbe
and
adc
mov
jecxz
xchg
and
pmullw
xchg
sbb
scas
xor
mov
clc
xlat
cwtl
add
jb
aaa
jle
mov
sub
jecxz
lods
and
push
or
jg
cld
cmp
xor
sub
sbb
out
inc
jo
es
dec
xchg
vandps
aad
dec
cmc
rcr
pop
push
outsb
push
jecxz
repz
imul
push
inc
testl
and
or
out
sarb
das
cmp
sub
adc
add
lea
push
ret
xor
orb
bnd
cmp
insl
bnd
push
inc
pop
sbb
mov
mov
shrb
dec
mov
jnp
push
lods
xor
jns
push
cmp
or
in
push
nop
sbb
ret
aaa
adc
fistpl
jge
stos
inc
int
loope
test
jecxz
add
int
test
ret
or
dec
dec
daa
dec
mov
movzwl
push
dec
divb
lock
jge
lods
pusha
rcrb
imul
imul
pop
mov
sbb
cltd
xchg
pop
notl
in
adc
insb
addr16
and
push
cmp
jp
and
or
outsb
loop
sti
dec
mov
das
test
pop
lret
add
rolb
sbb
jge
out
xorb
and
xorb
cs
fnsave
aad
cli
in
jne
pop
inc
sub
push
cld
adc
insb
push
iret
pop
cmpsl
pop
add
push
lret
addr16
fisttps
jmp
mov
jle
mov
jmp
out
or
jb
sub
daa
inc
loopne
adc
sub
dec
pop
jo
int
cmp
aas
or
aam
mov
adcl
hlt
push
push
roll
out
imul
orl
rcll
push
loop
outsb
loop
notl
sub
add
cmc
outsl
test
adc
sub
pop
mov
imul
inc
ds
jno
ret
cltd
mov
push
sub
mov
jo
mov
pop
js
push
roll
push
xchg
sub
sbb
aam
sub
push
xor
dec
mov
mov
popa
shrl
out
mov
mov
leave
mov
and
or
pop
jo
lods
dec
ret
push
bound
idivl
popf
xchg
pop
push
stos
dec
inc
ljmp
mov
xchg
push
pushf
jnp
decb
daa
jae
push
ret
inc
in
data16
sbb
mov
flds
test
or
xchg
adc
sbb
leave
pop
scas
out
pop
mov
dec
lock
xlat
adc
shl
mov
ljmp
pop
or
cmpsl
and
mov
adc
mov
aaa
and
sbb
xor
bound
test
imul
aad
push
xor
push
inc
popa
mov
sar
or
jne
mov
mov
pushl
lea
pushl
lea
pushl
lea
jmp
out
sahf
mov
addr16
push
subl
mov
aad
jle
outsl
jge
jle
mov
loopne
xchg
mov
and
jge
stc
movsb
push
hlt
sub
leave
and
or
scas
dec
jbe
negl
test
test
push
loopne
jae
or
stos
outsl
jle
inc
jp
mov
in
rclb
mov
or
out
jmp
cmp
fst
stos
scas
push
or
into
push
sbb
lods
cmp
mov
call
mov
fisubrl
mov
cli
sbb
stc
adc
jne
call
sbb
nop
movsl
add
push
mov
or
popl
lock
xor
mov
mov
icebp
jnp
in
xchg
shll
lock
pop
sub
bound
dec
fistpl
jge
ds
fsub
jno
xchg
test
inc
lret
mul
push
jb
push
jae
push
dec
cmp
inc
jnp
inc
cmp
subl
mov
out
mov
jle
fidivl
icebp
js
outsl
stos
pop
into
adc
mul
leave
test
adc
fstpt
repz
das
sbb
cmp
pushl
add
flds
jne
bound
mov
std
scas
mov
mov
dec
cltd
jns
mov
cld
mov
addr16
xor
xor
imul
or
cmp
cmp
mov
push
mov
loopne
pop
xchg
push
dec
enter
pop
mov
or
dec
cs
jmp
jg,pt
jmp
dec
sub
sub
ficompl
cmpsb
jle
xlat
mov
lock
mov
lock
xchg
lcall
loop
in
inc
mov
adc
sbb
push
pop
mov
test
jl
cmp
cmpsb
xchg
icebp
adc
repz
jg
mov
dec
aam
aad
pop
mov
ja
inc
mov
bound
ret
je
in
xor
enter
hlt
mov
ret
inc
mov
sbb
cmp
lcall
sbb
push
sbb
je
addb
repz
ret
test
or
mov
or
pusha
inc
outsl
fists
pop
leave
mov
rol
xchg
je
int3
adc
inc
mov
flds
ljmp
mov
fidivs
pop
sbb
nop
mov
jb
mov
pop
test
iret
inc
mov
sub
inc
mov
add
sbb
imul
mov
mov
sub
sub
and
xor
mov
scas
aaa
filds
lea
jbe
cmc
jb
roll
packsswb
mov
pop
jns
aam
pop
imul
ja
mov
stc
jb
xchg
add
rcrl
push
dec
lcall
push
cltd
push
cmc
int3
out
jg
xchg
pushl
into
fstl
inc
fsubr
popl
pop
jae
adc
xor
scas
sbb
push
pusha
imul
ret
movsb
inc
and
add
xlat
mov
push
dec
xchg
mov
mov
fcoms
inc
addr16
cmpsb
sbb
mull
or
fucomi
lods
dec
jl
pushf
pop
jmp
add
sbb
pop
out
pushf
sub
inc
push
test
lods
push
ljmp
into
divb
mov
sub
pop
xchg
mov
adc
mov
jne
mov
rcll
les
pop
adc
sbb
test
dec
icebp
add
cmp
cltd
push
mov
cmp
pop
cltd
pop
scas
into
lret
and
mov
push
or
pushl
lea
pushl
xchg
inc
inc
push
pop
call
mov
mov
add
jmp
xor
mov
jne
xor
std
ret
jle
jge
jle
cmc
jno
stos
dec
xchg
js
rep
lret
or
call
add
lea
xor
insb
daa
push
mov
xchg
cmpsl
addr16
in
sbb
mov
inc
mov
jle
daa
xchg
lods
cltd
sub
popa
ret
cmc
test
jle
data16
and
bound
adc
lret
dec
lods
sbb
mov
lods
gs
aam
pushf
or
pop
push
loop
dec
ficoml
jmp
dec
lock
push
pop
fstpt
adc
cwtl
es
add
lods
pop
pop
sbb
add
inc
mov
mov
jno
out
xchg
add
pop
aas
xchg
icebp
notl
test
fidivrs
cld
movsl
mov
cmp
or
cmc
mov
jl
fsubr
lret
cmpsl
pop
fwait
cmp
das
xchg
nop
rolb
and
cmp
add
int3
and
dec
xchg
cmpsl
ficoml
ret
xchg
cmp
leave
and
sbbl
xchg
mov
xchg
fiadds
aad
ret
je
and
xchg
xchg
jmp
push
mov
int3
xor
scas
cs
inc
lds
loop
stos
sbb
mov
mov
jbe
shl
outsl
push
add
xor
mov
and
jle
ss
addr16
xor
cmpsl
divl
adc
ds
fcomps
call
mov
aad
or
ret
data16
loop
dec
mov
pop
sbb
leave
cmp
lds
adc
dec
dec
divb
lea
fsubrl
out
rcrl
add
scas
decl
mov
mov
movsb
add
and
cs
insb
addr16
aas
xor
fwait
pop
mov
pop
aaa
notb
push
pop
mov
call
sub
sbb
aaa
xchg
inc
loop
inc
add
mov
mov
sbbl
in
in
mov
push
or
movl
cmc
cltd
es
mov
sub
jno
cli
jno
out
jmp
jns
xchg
out
cli
push
cld
mov
dec
push
push
add
es
mov
mov
xchg
shl
or
xor
outsb
xor
jmp
or
adc
scas
addr16
jg
hlt
sbb
xor
dec
pop
outsl
adc
pop
cmp
rcrb
rorb
lock
xor
in
sub
in
and
mov
pop
pop
aas
xchg
sbb
movsb
daa
out
push
push
sbb
jge
mov
pop
sub
pushf
sbb
sti
sub
mov
xor
lea
mov
mulb
and
popf
jns
mov
in
jo
jge
stc
call
cmpsl
int3
rcrl
aaa
out
pop
xorb
push
add
test
mov
xor
cs
mov
and
scas
std
mov
xchg
push
xor
or
push
mov
mov
int
inc
mov
das
cmp
cld
or
ss
jecxz
or
dec
dec
mov
iret
out
jle
enter
and
mov
pop
xchg
test
rolb
dec
sub
data16
fdivs
mov
pop
dec
test
js
pop
loopne
adc
inc
je
mov
shrl
aas
xchg
adc
imul
mov
outsb
in
jl
bnd
mov
cmp
repz
cmp
psubb
or
fdivrs
pushf
fstpt
dec
pop
icebp
ss
repz
xchg
push
and
mov
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
adc
push
mov
mov
and
mov
adcl
mov
xor
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
push
mov
jno
insl
inc
filds
xor
jle
jns
mov
push
xchg
hlt
fwait
mov
mov
mov
xchg
int3
add
aas
jle
rorb
xor
sub
jnp
adc
nop
sbb
sub
addr16
outsb
lock
std
lods
orb
cmpsl
pop
addl
out
push
sbbl
ret
jg
mov
data16
sahf
pushl
in
outsb
pop
xorl
and
scas
roll
xchg
inc
inc
pop
in
enter
push
cvtdq2ps
repz
jmp
xchg
xlat
push
popa
adc
subl
push
ret
jae
clc
out
aas
xchg
push
cmpsb
aaa
dec
sbb
xor
fnsave
movsl
push
mov
loopne
mov
cmpsb
out
push
pop
xchg
inc
ret
xor
cmp
lret
fxam
dec
xchg
lcall
shrl
lock
mov
rorl
lds
fistpll
adc
loop
sbb
pop
hlt
shl
inc
pop
stos
and
lret
cmp
hlt
mov
mov
sbbl
push
and
ljmp
iret
fbld
js
std
mov
pop
fisubrs
std
pop
push
adc
xchg
sub
lods
cmc
addr16
jmp
add
mov
cmp
sbb
mov
add
jnp
or
mov
xchg
xchg
cmp
xchg
rcr
cmpsb
cmp
mov
mov
pop
iret
or
fsubs
jle
xlat
mov
rclb
cwtl
insl
xor
sbb
mov
int
push
shrl
iret
lods
ss
xchg
pop
aam
pop
xorb
testl
jle
movsl
ds
scas
outsb
jl
pop
outsl
and
jae
mov
pop
loopne
out
xor
pop
jne
out
mov
add
sti
dec
jo
add
lret
arpl
pop
mov
out
sub
push
aad
daa
addl
mov
sub
lret
sub
cltd
jge
test
call
adc
fcomi
dec
mov
fidivrs
int
mov
jnp
jp
lds
mov
insl
mov
sbb
fcomi
scas
mov
cmpsl
cwtl
fcoms
xchg
sahf
subl
jecxz
sub
xor
fcmovbe
mov
mov
or
divb
jp
jl
adc
add
lcall
jge
mov
test
push
aaa
jb
adc
mov
cmp
pop
into
out
mov
and
jmp
sub
rorl
mov
mov
rcr
nop
adc
iret
lods
xor
and
icebp
jae
je
push
mov
xor
push
imul
fsubrs
cmc
mov
pop
and
cmp
jge
testb
pop
cmc
pop
leave
test
mov
es
mov
fmul
mov
adc
mov
mov
xor
adcl
mov
mov
adc
add
neg
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbb
xor
sbb
add
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movl
xor
movl
movl
sbb
movl
adc
movl
movzwl
and
movl
dec
movl
mov
add
xor
add
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
add
add
mov
sub
mov
xor
add
movl
cmp
movl
jb
mov
mov
xor
incl
xor
notl
add
add
adc
imul
mov
mov
sbbl
sub
movl
cmp
movl
ja
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
sbbl
xor
xorl
jmp
cltd
jp
pushf
insl
imul
cltd
add
movsb
hlt
sub
xor
jle
pop
mov
fstpt
jg
sbb
jl
jecxz
aad
aad
es
push
or
outsl
sbb
cld
xor
stos
sysret
add
push
sysenter
cmp
xor
mov
jg
repnz
pushf
scas
adc
icebp
inc
loope
or
out
adc
cld
sarb
test
mov
xor
call
jnp
pop
sahf
lret
pop
cmp
sub
pop
inc
repnz
std
cmc
cmp
xor
xchg
xor
cmp
imul
adc
cmp
fbstp
or
inc
jle
sub
push
xchg
pop
ljmp
std
push
xor
or
dec
fadds
clc
ds
dec
xchg
xchg
es
inc
ss
adcl
lahf
imul
push
shl
jne
insb
fistpl
cltd
mov
push
lods
aaa
jl
aam
jne
sbb
mov
dec
cmp
sbb
popl
das
sub
imul
push
adc
sarl
sub
popf
std
jbe
cwtl
mov
stc
imul
push
sqrtps
sbb
out
push
jo
test
sub
das
out
aas
fists
aam
or
movsb
mov
jbe
pop
into
test
sbb
inc
xor
imull
dec
xor
into
pop
sub
pop
cmp
adc
cmpl
adc
mov
mov
jp
aad
andl
sub
add
je
add
and
sub
xchg
add
sub
and
loope
jne
imul
leave
faddl
lds
loope
jl
add
mov
in
inc
rorl
sub
les
mov
inc
inc
mov
lea
mov
push
test
sub
iret
cmpsb
lods
mov
enter
sub
repz
orb
ffree
ja
adc
sub
push
lods
sarl
add
mov
push
lret
mov
inc
std
pushf
add
adc
mov
jne
xor
in
xchg
lret
inc
roll
outsl
insb
inc
mov
mov
sbb
xor
xor
push
pop
mov
mov
inc
pop
aaa
cmp
insb
sar
jno
adc
scas
sub
xor
test
ret
jbe
cmp
les
stos
pop
aad
push
sbb
pop
and
shll
cmpb
or
imul
ret
inc
fcoml
xor
jle
or
das
mov
push
dec
fidivl
test
or
gs
in
xchg
inc
stc
cmp
add
lds
imul
inc
cmpsl
fwait
mov
pop
int3
cli
pop
jg
insl
inc
aaa
out
mull
mov
add
cwtl
jbe
arpl
dec
jns
movsl
pop
cs
inc
xor
cmp
sbb
lods
add
js
sub
dec
lods
inc
aas
fcomp
in
and
cmp
sub
shr
push
sldt
mov
mov
xor
movzbl
or
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
add
add
imul
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
push
call
cmpl
jb
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
pop
jne
loope
clc
cmpsb
dec
push
test
jge
jle
push
popa
pop
or
lcall
ljmp
sahf
push
iret
fadds
or
ret
add
and
lret
mov
test
ror
test
cmp
dec
fistps
aam
aad
arpl
shl
shll
dec
sbb
fcomps
hlt
enter
out
or
mov
andb
shrl
sahf
mov
push
jnp
rol
sub
mov
shll
lods
pop
test
stos
inc
pushf
sbb
xchg
sub
sub
out
fnsave
imul
or
dec
jnp
into
test
mov
xchg
scas
int
mov
fwait
sub
sbb
push
push
scas
inc
hlt
out
inc
sub
mov
into
add
push
push
xchg
test
popf
push
shrl
idivl
fidivl
cmp
ret
push
lds
dec
pop
and
lret
outsl
scas
mov
clc
or
mov
mov
enter
sub
pop
ds
int3
xchg
nop
fwait
lds
jno
or
push
push
inc
adc
call
lea
ret
mov
mov
scas
add
loope
push
dec
pop
sub
push
push
fsub
inc
push
dec
mov
add
xchg
sub
mov
fildll
mov
and
out
and
xrelease
pop
xor
in
cmpsb
xchg
xchg
add
sbb
pop
sub
hlt
fistpll
outsl
icebp
mov
sbb
push
push
iret
push
icebp
imul
cmp
xchg
stos
hlt
mov
mov
call
mov
sub
dec
loop
jg
adc
lock
jo
es
mov
mov
rorb
mov
cmpsl
sbb
jnp
ds
dec
repz
add
sarl
lea
idiv
dec
fidivs
sub
fmul
fcos
stos
push
fisubs
push
jl
mov
sbb
push
mov
aas
push
hlt
xor
cmp
or
and
sarb
push
mov
test
cmp
mov
mov
jne
or
filds
pop
or
addr16
movl
and
scas
mov
jecxz
scas
leave
cs
mov
pop
and
xchg
stos
lock
xor
shlb
fisttpll
pop
pop
and
xlat
mov
int3
loop
and
cmp
ret
mov
cmp
xor
or
xlat
and
ret
or
lret
inc
fwait
jbe
push
inc
pop
adc
cmp
cmp
aad
or
pop
vmwrite
pop
in
test
ds
repnz
jne
push
cmp
jmp
push
xor
loop
mov
xchg
cld
cld
mov
sarl
cmp
out
mov
mov
jno
sbb
enter
dec
push
pop
je
test
mov
push
shr
pop
or
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
push
outsb
adc
pusha
cli
sarb
test
xor
xor
jle
cmp
jmp
mov
es
pop
adc
outsb
je
nop
pushf
popf
dec
imul
loopne
mov
push
and
xchg
imul
push
mov
inc
jnp
or
or
xor
test
ret
jp
sbb
push
clc
pop
in
fildll
scas
rep
in
lods
mov
dec
jp
cmp
dec
sub
add
lods
fldenv
dec
jo
inc
push
sbb
sahf
jge
stc
push
jae
ds
mov
push
xchg
cmp
cmpsb
addb
pop
adc
pop
test
pop
mov
mov
stos
or
ds
les
jb
mov
dec
into
xor
mov
lahf
lock
and
pop
clc
mov
and
and
pop
cmc
push
add
lret
shr
loop
sub
aaa
subb
mov
sbb
mov
int
add
fiaddl
stc
bound
add
mov
xlat
adc
into
rcrb
sbb
and
ret
iret
mov
push
shlb
pop
jle
mov
cmpsl
mov
mov
mov
xor
pop
xchg
cmp
mov
out
or
loopne
pop
adc
dec
bound
mov
mov
call
insb
mov
bound
and
daa
lcall
sub
mov
sahf
inc
ret
into
movsb
sub
or
mov
outsb
mov
push
adc
mov
test
add
enter
jmp
jg
jl
pop
or
arpl
dec
or
mov
or
dec
mov
add
lret
add
lods
repnz
pop
push
mov
jge
pushf
jo
cmp
into
outsb
cli
pop
fadd
test
insb
lcall
dec
iret
pop
pop
gs
add
lock
stos
data16
inc
shll
dec
pop
lahf
xor
or
ret
arpl
push
push
xchg
cmp
fdivrs
mov
or
xchg
loope
dec
sbb
loop
daa
das
mov
push
dec
xchg
adc
adc
dec
jbe
js
sarl
inc
cwtl
cmp
ss
mov
cld
repz
push
push
sub
dec
dec
sub
addr16
fstps
or
or
cs
push
adc
out
sub
adc
mov
push
sub
outsl
mov
cmpsb
jge
lods
add
jns
xor
out
sbb
mov
dec
sti
inc
and
cmpl
pop
decb
in
pop
sub
push
and
add
pop
cli
jae
fsubs
or
sbb
out
cmp
pop
js
xchg
or
mov
dec
stc
ljmp
adcl
or
add
xrelease
mov
sbb
add
out
int3
shlb
mov
jecxz
jne
adc
subl
shll
lret
push
adc
int3
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
jmp
xor
les
adc
lret
jle,pt
xor
jle
pop
sub
loope
adc
lods
jno
push
xor
in
push
rorl
xor
or
movsl
fnstsw
cmpsb
mov
movsb
jo
and
mov
xchg
rcll
lods
in
lods
lods
sbb
jmp
out
adc
fwait
lret
in
push
gs
lret
jmp
mov
dec
mov
cmp
mov
mov
sbb
pop
cltd
scas
dec
dec
adc
mov
lahf
adc
pop
cmp
pop
daa
pop
mov
add
mov
stos
inc
mov
add
xchg
popf
mov
pop
std
fisubrs
adc
or
or
mov
addr16
addr16
sbb
scas
pop
or
mov
jns
mov
and
mov
mov
jno
pusha
inc
dec
jecxz
cmp
lea
inc
jmp
enter
pop
incb
cwtl
adc
and
mov
pop
xor
cmc
jnp
das
xchg
sbb
imul
and
popa
test
in
dec
std
push
xchg
lcall
mov
push
inc
ss
icebp
scas
push
aad
shll
mov
lods
or
insl
xor
es
adc
jl
ljmp
cmp
xchg
cmp
imul
dec
fs
nop
sarl
repnz
xchg
popa
or
inc
add
mov
cli
mov
mov
adc
outsl
cwtl
add
cs
xor
movsb
movsl
cmpsl
arpl
push
pop
and
jno
sub
cmp
add
mov
push
aaa
and
push
or
out
shrb
imul
sbbl
jmp
sahf
adc
xchg
fdivs
lret
pop
or
addr16
pop
clc
inc
cmp
add
clc
sub
dec
ficoms
ss
jge
sbb
dec
xchg
jle
clc
popf
imulb
cmp
mov
ss
xor
fcomp
inc
sbb
mov
data16
cwtl
jbe
inc
push
mov
int
or
inc
dec
movsb
and
sahf
cltd
inc
je
out
stc
mov
mov
bound
test
mov
cwtl
push
clc
cmpsb
xchg
push
sub
cmp
aam
cmp
cmp
les
push
sub
enter
int3
or
adc
jne
test
stos
es
mov
jecxz
insl
pop
mov
and
inc
outsl
popa
popa
or
and
jnp
push
jnp
leave
and
subl
cmp
rorb
sub
pop
pop
jb
cmp
dec
out
mov
outsb
js
sub
or
movsl
adc
adc
or
or
loopne
or
imul
or
push
sub
mov
jne
faddl
sub
ljmp
cmp
mov
cmpsl
jb
fdivrs
enter
add
test
jno
ja
shrb
push
into
xor
cmp
jle
fstpl
mov
lea
cmpl
loopne
sub
inc
or
lret
xor
and
gs
mov
fidivrs
std
bound
or
xchg
or
and
sbb
mov
add
jge
imul
xor
jg
loope
mov
mov
xchg
repnz
stc
dec
inc
test
cmc
shrl
incb
xor
mov
cmpsb
xlat
popa
mov
inc
sub
aaa
popa
aam
xchg
das
rep
sub
jp
dec
test
jnp
lds
push
mov
push
inc
repnz
sbb
hlt
int3
pusha
mov
out
in
fcoml
add
cld
ljmp
lcall
cmpsb
mov
push
int3
jmp
lds
fidivrl
notl
popa
int
clc
clc
imul
inc
sti
pushf
pushf
adc
lret
lahf
imul
sarl
mov
cwtl
out
jecxz
inc
out
scas
cwtl
mov
test
nop
dec
out
shl
fldcw
mull
mov
lods
ja
call
out
xchg
adc
call
out
out
test
nop
pop
xor
ret
popf
dec
mov
cmp
lods
movsl
xchg
cltd
cwtl
push
icebp
fmuls
jne
dec
loope
fcomip
sub
push
ljmp
xchg
and
and
addb
loopne
pop
add
xor
leave
jecxz
xchg
das
mov
mov
cltd
into
or
insb
pop
xchg
cmpsb
pop
insl
and
movsb
cmp
clc
inc
pop
xchg
xchg
es
fmull
imul
jg
in
test
cmp
adc
cmpb
in
fdivr
dec
sahf
rorb
mov
loop
xchg
sbb
push
push
imul
in
arpl
mov
jnp
inc
and
out
test
ljmp
and
test
sub
ja
into
pop
add
pop
and
or
cmpl
in
dec
inc
mov
pop
xchg
dec
ds
fnsave
xchg
add
jle
mov
jle
mov
gs
xchg
mov
push
or
es
das
sbb
pop
mov
scas
dec
je
testb
das
clc
bound
movsl
or
scas
les
xchg
rcll
cmc
js
faddl
leave
push
dec
and
mov
fstpl
jecxz
movsb
aam
rorb
jge
ret
cmpsl
icebp
sub
jg
divl
in
pop
popa
imul
xchg
loopne
adc
rcrl
bound
sahf
cmc
icebp
push
add
xor
mov
cs
pushf
pop
fcoml
pop
mov
or
fidivrl
cmp
xor
mov
sbb
mov
xchg
add
add
cld
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
jmp
pop
xlat
pop
jmp
jae
push
jmp
cmc
pop
xor
jae
movsl
cmp
xor
jle
dec
dec
aaa
fildl
jge
or
aam
pop
out
xor
lcall
stos
or
pop
stos
fldl
fldenv
lret
aaa
pop
or
xchg
mov
xchg
rorl
push
shll
sti
pop
and
test
jae
in
and
popf
cli
aad
cmp
sbb
sbb
popf
adc
or
call
enter
mov
push
movsb
fcmovne
cmpsb
sbb
test
cs
rorb
roll
push
into
push
jnp
inc
sub
or
test
lret
adc
insl
bound
dec
xor
icebp
popa
dec
dec
adc
xor
sbb
stos
aaa
test
insl
inc
outsl
imul
fdivrs
and
cmp
adc
testl
rorl
lret
xchg
sbb
je,pt
pop
sbb
dec
mov
push
outsb
and
icebp
in
mov
cmp
or
cmp
cmc
mov
sti
scas
insl
cs
push
test
lods
jle
in
cmpsl
popf
gs
inc
shlb
jp
xor
out
imul
sbb
cmp
out
jbe
adc
rcl
dec
pusha
ret
xchg
les
adc
jo
lcall
fs
incb
inc
stc
cwtl
mov
lods
cmc
ss
pop
cli
pop
cmp
outsl
mov
loope
addb
push
cmp
dec
lcall
xchg
lahf
aam
loop
inc
push
push
lods
js
enter
mov
push
test
xchg
lods
pop
sbb
dec
fcomps
jg
ds
mov
jbe
fnstenv
mov
mov
in
jg
jbe
andl
dec
xor
call
ja
jno
ss
fildl
adc
dec
dec
mov
xchg
mov
xor
insl
push
test
pop
add
pop
bound
rorb
int
jo
ficompl
mov
xlat
fildll
mov
out
or
fsub
inc
and
dec
inc
and
jmp
iret
stc
mov
mov
pop
xor
pop
stos
adc
and
insb
inc
int3
sbb
mov
sub
cltd
mov
and
mov
stc
rcrl
pop
nop
fstpl
inc
jae
xorl
inc
push
mov
sbb
and
cmp
in
daa
push
or
or
in
and
and
jns
inc
out
ja
or
cld
icebp
scas
loop
mov
cmpsb
test
mov
adc
cmp
adc
loope
decb
pop
jae
mov
sbb
mov
or
mov
test
sbb
subl
sbb
subl
xor
push
adc
push
xlat
cmp
shlb
xchg
mov
sub
sbb
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
mov
sub
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
xor
andl
add
movl
mov
movl
mov
movl
mov
push
movl
movl
mov
mov
movl
cmp
movl
je
andl
mov
xor
subl
xor
lea
xor
cmp
jne
jmp
add
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
jmp
gs
jns
dec
jno
xor
xor
jle
fistpll
imul
or
add
sbb
imul
mov
lds
daa
cmp
mov
int
pop
mov
dec
xchg
jl
mov
pop
inc
das
popa
popa
mov
lcall
lahf
sar
mov
sub
cmc
xor
inc
lods
sti
fstps
dec
in
gs
cmp
inc
cli
jbe
fsubrl
imul
ss
ror
fs
cmp
fsubrl
add
dec
dec
mov
scas
mov
nop
jg
pop
cwtl
dec
mov
in
arpl
loope
push
movsb
jae
imul
lds
cld
movsl
add
and
sbb
mov
or
add
jp
sbb
pusha
dec
loopne
sar
scas
push
inc
dec
addr16
cwtl
xor
cmp
jl
pop
testb
sub
cmp
shll
std
push
shll
sti
call
ja
and
repnz
std
push
and
mov
lea
cmpsl
sahf
popf
add
pop
lock
sbb
frstor
adc
into
and
or
les
dec
lea
ljmp
sti
repnz
cld
jnp
mov
and
jbe
setge
leave
mov
mov
pop
cwtl
cmpsl
sub
fcoml
icebp
lods
icebp
push
mov
fbstp
sbb
xchg
cmp
mov
nop
fcoml
movsl
sbb
sarb
or
jg
jne
mov
fldcw
and
push
mov
add
pop
je
cmp
sub
adc
inc
movsl
leave
push
or
shld
sub
xchg
loope,pt
inc
pop
mov
aaa
jp
xor
pusha
out
xchg
sbb
and
push
enter
or
insl
insl
ljmp
fucomip
outsl
push
test
test
mov
ljmp
or
jg
pop
inc
imul
je
loope
add
mov
mov
call
and
outsl
jae
scas
mov
in
push
loopne
sbb
inc
push
sub
imul
jbe
fs
add
add
xor
pushl
mov
pushl
mov
call
jmp
jmp
push
jo
es
mov
ds
mov
jle
cmc
into
jmp
mov
sbb
inc
push
lods
ljmp
sub
fmull
int
test
inc
mov
push
push
and
imul
mov
aad
pop
sbb
cmp
ljmp
sub
add
in
clc
cmp
sub
pop
stc
mov
insl
stc
leave
aas
cwtl
stc
sbb
jge
pop
jns
xchg
les
jl
mov
jl
outsb
leave
cmp
add
dec
sub
fld
jg
aam
lret
aaa
out
xchg
and
dec
lock
add
lods
mov
test
arpl
mov
ja
mov
pop
aad
dec
dec
pop
pop
jecxz
mulps
je
mov
sarb
ds
xor
push
jo
dec
roll
shlb
jnp
push
dec
aam
push
rcll
cltd
lods
push
mov
mov
stos
sbb
or
data16
in
loope
jnp
xchg
inc
pop
xchg
sub
adcl
add
dec
xor
mov
test
test
adc
lcall
mov
mov
add
gs
shll
icebp
aas
xor
lret
dec
pop
mov
stc
xor
enter
xchg
mov
and
adcl
pop
xchg
xor
mov
pop
lahf
mov
jge
push
xchg
and
push
adc
arpl
movb
mov
mov
pop
sub
iret
mov
rol
add
scas
sub
xor
pop
mov
push
or
push
push
and
in
movsb
cmp
mov
iret
mov
jg
xchg
and
scas
pop
clc
fadd
xor
lock
sbb
cwtl
test
xchg
test
mov
mov
xchg
pop
or
adc
pop
lods
sub
xchg
jmp
or
lret
mov
sahf
cwtl
mov
stc
test
aad
outsl
gs
push
push
in
add
jl
in
repnz
mov
xor
cmpsb
ljmp
scas
cmc
movsl
mov
xor
js
push
ss
insb
negl
repnz
imul
dec
clc
lret
mov
or
push
mov
sub
movl
push
call
cmpb
movl
je
andl
xor
jmp
push
addl
call
movl
cmp
movl
jl
add
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
movl
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbb
lea
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
xor
mov
lea
mov
adc
mov
mov
mov
xor
mov
orl
mov
sub
mov
addl
push
push
sub
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
xor
sub
push
xor
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
add
movl
mov
movl
mov
mov
cmp
mov
mov
je
mov
xor
add
imul
mov
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
mov
movzwl
mov
jmp
shll
sbb
inc
out
jle
inc
cmpsl
fwait
arpl
movsb
sarb
jge
jle
pop
test
fidivrl
dec
dec
test
lods
sub
dec
xor
outsb
jb
or
in
daa
inc
sti
fdivl
mov
pop
mov
lock
lods
into
movb
jnp
jg
and
sbb
and
lods
mov
lods
loop
lods
mov
push
xchg
pop
insb
in
aam
or
pop
cmp
jge
int3
sarb
sub
xchg
jae
loop
push
mov
sub
xchg
adc
dec
jmp
aam
lret
sti
mov
and
lods
pop
push
cmp
cmp
adc
cld
push
xchg
not
pop
loop
clc
in
push
cltd
ret
dec
lds
sub
sbb
in
imull
add
sbb
mov
decl
notl
lds
xchg
xor
repnz
popf
movsb
lock
out
or
lahf
and
mov
mov
mov
dec
icebp
or
dec
or
ret
jle
dec
xchg
movsb
or
mov
inc
insl
es
jbe
mov
dec
daa
pop
xor
sub
adc
jecxz
push
cwtl
or
sub
mov
loope
js
mov
loopne
mov
ja
bnd
mov
pop
cmp
pop
or
dec
jle
inc
jp
mov
cmp
in
loope
call
or
and
andl
jg
in
sbb
mov
and
add
mov
aaa
mov
into
sahf
aas
cwtl
sti
xchg
mov
ds
jle
dec
pushl
pusha
outsb
push
ret
sbb
fnstenv
out
rcrl
jge
loope
inc
jl
xor
cbtw
clc
nop
repz
mov
sbb
xor
out
loopne
add
inc
lods
mov
mov
or
dec
push
xchg
pusha
mov
xchg
xor
out
test
iret
inc
add
and
add
in
add
jne
push
aaa
cmpl
mov
mov
fisttps
into
clc
and
or
mov
repnz
push
popf
mov
pusha
pop
push
push
jp
lahf
push
cmp
outsb
jnp
fs
xchg
mov
les
into
aad
je
mov
xchg
sub
inc
push
shrl
xor
clc
lret
mov
ss
into
sbb
dec
pushf
cmp
jns
push
and
sbb
call
das
lret
nop
mov
call
mov
pop
stos
inc
pop
push
xor
rcll
test
jecxz
outsl
aam
sbb
int
adc
cmp
inc
cmp
test
xor
push
test
popf
stos
mov
dec
mov
int
addr16
out
arpl
lds
xchg
mov
loop
ficoms
fcmovnbe
ret
ljmp
mov
fidivs
test
pop
mov
enter
add
inc
xlat
push
lahf
fstpl
add
scas
sbb
inc
lret
mov
sbb
jle
icebp
popf
cmovbe
rclb
popa
into
mov
movl
movl
jmp
out
psubd
push
cmc
mov
loop
movsb
sbb
dec
push
iret
jle
and
jle
mov
mov
cli
sbb
jbe
dec
flds
cmp
jnp
std
mov
shrl
sbb
mov
bound
je
mov
dec
jno
shrb
pop
cmp
sarl
test
sahf
dec
mov
mov
cmp
jo
push
jne
nop
cmp
cmp
popf
fcomp
push
jb
enter
inc
xchg
dec
jae
sub
pop
aaa
mov
imul
repnz
mov
mov
outsl
aaa
lods
push
pop
adc
xor
rolb
fsubl
mov
sub
loop
loop
mov
jle
jns
or
push
pop
idivb
push
xor
loope
testb
lds
ret
dec
push
mov
ud2
jp
ss
jns
mov
adc
xor
jno
dec
les
outsb
jg
inc
mov
jnp
xor
arpl
dec
mov
lret
lret
repz
lcall
xchg
jge
mov
lods
das
mov
cmp
adc
lret
movd
or
cli
push
fdivrp
fists
nop
pop
call
les
outsb
dec
fistpl
cwtl
ret
in
adcb
xor
test
leave
mov
dec
ret
outsb
push
es
pop
cmc
cmp
adc
xchg
pushf
mov
test
int3
rcll
mov
mov
lods
jne
pop
leave
jo
idivb
xorl
jb
enter
das
int3
sub
add
jmp
sbb
inc
add
cmpsl
das
jg
scas
pop
dec
xchg
aam
js
dec
pushf
cs
insl
inc
int
rclb
jmp
dec
push
iret
xchg
xchg
aaa
movsl
mov
jecxz
vpsubw
dec
jbe
mov
lret
sub
in
lret
out
inc
nop
out
dec
add
outsb
aad
cwtl
test
dec
clc
sub
mov
mov
andl
adc
or
dec
jecxz
pusha
and
or
jmp
loope
shlb
sub
xor
xchg
jnp
cmp
jg
and
jo
in
dec
mov
xchg
mov
dec
and
cwtl
cmp
insb
pop
push
mov
jmp
sbb
rcl
lret
mov
orb
dec
scas
mov
out
cmp
cmc
push
dec
das
js
cmp
test
mov
sarl
pop
pop
dec
arpl
cs
in
data16
jl
mov
pop
dec
push
mov
dec
lea
add
xchg
sub
pop
out
lret
jns
fisttps
cli
testl
jecxz
std
mov
inc
jno
mov
jmp
jle
lcall
out
mov
out
push
jo,pt
out
lock
mov
clc
icebp
inc
sti
addr16
push
jge
fwait
and
mov
cmpsl
into
jmp
movb
add
inc
clc
xor
mov
subl
xor
mov
subl
add
mov
movzwl
andl
not
and
movl
mov
movl
mov
jmp
jmp
dec
sbb
jno
push
cwtl
mov
sbb
jle
jge
jle
icebp
outsb
xlat
fdivrs
sub
into
adc
xchg
mov
ja
adc
js
rcll
push
xchg
out
mov
scas
and
cmp
addr16
pop
xor
cmpsl
icebp
lret
aas
out
flds
in
xchg
je
scas
and
popf
ljmp
push
xchg
pop
adc
pop
and
xchg
jne
cmp
not
push
leave
xor
push
xor
cmp
nop
cmc
mov
imul
test
mov
xchg
jne
das
ficomps
cs
jl
outsl
cli
pop
sub
or
and
fmull
lret
dec
mov
fs
fwait
out
out
out
push
lahf
mov
push
iret
pop
inc
lahf
js
jne
dec
sti
add
mov
jne
insl
push
pop
pop
pop
xchg
test
popa
loop
or
cld
jno
sub
daa
mov
lret
push
imul
popf
pop
aad
fdivrs
sbb
push
pushl
iret
mov
lods
mov
cld
ret
mull
pop
adc
sbb
inc
sub
cmp
not
xorl
stos
xchg
add
lahf
sahf
daa
icebp
bound
add
jb
hlt
sbb
addr16
sub
add
test
add
adc
adc
push
or
popa
fwait
xchg
into
sub
mov
loopne
fistpll
mov
test
call
leave
xor
push
ret
insl
pop
aas
pop
xchg
addl
add
mov
fcomip
loopne
outsb
pushf
pop
idivb
xchg
pop
cwtl
cwtl
clc
loop
repnz
push
or
in
sub
mov
aas
mov
or
xchg
push
in
cmpsl
lock
pop
cmp
xor
ffreep
cmp
fidivl
leave
out
out
lock
push
fldpi
mov
xor
mov
and
or
push
push
sarb
pop
mov
and
xor
mov
pop
dec
adc
mov
out
jbe
inc
mov
and
jbe
jbe
jl
cmpsb
mov
data16
mov
fwait
lods
mov
add
xchg
push
loop
fwait
xchg
in
push
insb
jg
mov
ficoml
popf
dec
adcb
outsb
sbb
jns
xor
les
cld
jp
imul
push
sbb
lds
cmp
imul
lods
fs
mov
orb
je
leave
mov
cmpsl
dec
adc
push
push
xchg
mov
mov
cmp
sbb
inc
hlt
ljmp
je
mov
add
das
pop
pop
shl
sti
inc
sahf
xor
dec
js
iret
nop
ffreep
out
cmpsl
es
mov
mov
and
sub
mov
fucomi
test
mov
rcr
rorb
inc
jg
adc
in
pop
mov
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
or
jmp
outsl
cmpsb
insb
inc
jne
jne
push
push
mov
dec
adc
jle
jg
jle
xorl
cmpsb
add
fcomip
pusha
clc
jns
dec
cmp
insl
in
ret
je
stos
sub
out
cltd
mov
adc
fcmove
lock
adc
sbb
sub
lock
push
daa
dec
xor
rcll
push
pop
insb
push
sub
movq
scas
je
mov
push
push
jne
mov
cwtl
adc
mov
dec
push
dec
push
push
dec
fildl
add
mov
mov
dec
cmp
insl
mov
mov
inc
sbb
inc
sbb
xlat
cmpsb
inc
sbb
and
mov
mov
mov
mov
aad
mov
pushf
and
add
ret
jg
pop
fwait
clc
pop
add
pop
popf
in
movsb
sub
and
dec
aad
cld
xor
sbb
adc
xchg
jne
shlb
repnz
mov
in
cmc
push
mov
pop
cwtl
sub
jne
cmp
mov
xchg
or
fwait
sub
mov
int
dec
aaa
clc
fidivl
or
jge
push
sub
sbb
add
mov
mov
cmp
imul
sub
jg
jnp
andb
sbb
faddl
or
jo
xor
int
cltd
mov
inc
clc
xor
inc
in
xor
xchg
add
mov
xor
mov
incl
lea
mov
sbb
mov
mov
push
movzwl
add
mov
lea
mov
mov
and
push
or
push
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
movl
jmp
xor
inc
arpl
jae
aas
or
pop
nop
xlat
jle
in
jle
adc
fwait
mov
mov
dec
test
dec
fcoms
mov
dec
push
rorl
jmp
nop
and
orl
stos
xchg
dec
add
es
jge
or
pop
bound
jae
inc
leave
jle
clc
push
jle
or
ret
mov
mov
and
xchg
push
jns
mov
jno
into
cltd
test
aaa
arpl
fisubrs
add
fbld
push
gs
pushf
scas
sub
cs
fidivs
dec
loop
pushf
jp
es
dec
insl
pop
jle
arpl
xor
imul
inc
inc
mov
dec
scas
pop
dec
and
cmp
adc
lret
cmp
push
dec
or
and
add
pop
pop
mov
push
mov
mov
pop
test
neg
mov
adc
fndisi(8087
xchg
lret
adc
sbb
addb
cltd
or
push
jb
jb
jbe
sbb
rorl
iret
push
bound
add
or
loopne
mov
nop
test
scas
ja
fwait
add
mov
jp
inc
stc
push
dec
mov
sub
shr
gs
arpl
mov
lahf
out
jg
nop
xchg
repz
push
xor
lods
adc
push
inc
aas
or
pushf
adc
xor
andl
mov
addl
xor
xorl
xor
addl
add
add
div
movl
mov
movl
movl
movl
cmp
movl
jmp
or
add
aam
lret
imul
mov
push
aad
jle
jg
jle
clc
xor
or
jns
push
mov
add
loop
sbb
into
jle
arpl
fcompl
fiaddl
dec
jo
add
pop
je
pop
testl
xchg
sti
xchg
pop
scas
in
cmp
mov
or
and
xchg
and
mov
sarl
icebp
pop
add
xchg
mov
mov
push
adc
mov
push
dec
stos
bnd
jp
sub
jg
jns
or
xor
jl
or
push
fucom
pop
mov
daa
push
push
mov
dec
imul
xchg
repnz
mov
sbb
jle
mov
ljmp
sbbb
repnz
fisubs
mov
pop
mov
out
or
sub
cltd
int3
jle
push
lcall
repnz
pop
and
addr16
enter
inc
mov
add
jecxz
sub
jo
lret
adc
sub
shrb
pop
sbb
inc
pop
add
xor
cltd
leave
dec
pusha
pop
xlat
lahf
cmpl
add
sbbl
mov
daa
inc
mov
mov
sub
loopne
ret
xor
ljmp
lret
xor
in
xchg
cli
mov
arpl
cmpsb
cmc
mov
dec
or
add
fcmovb
inc
hlt
std
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
and
mov
inc
mov
imul
mov
mov
movl
cmp
je
sub
mov
sbb
orl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
jmp
xor
xor
outsb
fucomi
scas
ret
bnd
sarb
in
jle
lock
in
roll
shlb
ss
aad
pop
mov
ror
pop
cmp
test
add
mov
aam
sbb
adc
inc
cmp
leave
cmp
loop
xchg
mov
push
shlb
gs
mov
and
xor
sbb
mov
idiv
xchg
xchg
pop
pop
lds
push
adc
sbb
mov
or
leave
js
aaa
ja
imul
pop
mov
cmp
jmp
mov
mov
mov
mov
sbb
mov
push
aad
xchg
cltd
in
fisttpl
mov
sub
mov
test
pop
inc
dec
and
je
sbb
push
jmp
lea
xorl
push
rorb
and
push
pop
jnp
ffreep
mov
jb
and
jg
negb
loop
add
xchg
or
ds
cmc
dec
aad
push
sbb
bound
jle
and
movsb
js
mov
loop
lock
or
xchg
adc
jl
jns
outsb
lea
pop
push
test
pop
test
or
call
xchg
test
loope
addr16
xchg
ljmp
in
xor
inc
imul
push
out
fisttpl
add
jmp
adc
test
or
cwtl
in
push
sarl
in
jle
sbb
repnz
fcoml
es
repz
fisubrs
dec
pusha
enter
push
adc
aad
mov
fsubrp
ja
sbb
mov
ss
aaa
daa
scas
daa
aas
fildl
xchg
cwtl
movsb
jbe
outsl
test
jno
cmpsb
dec
add
repnz
jl
xor
imul
mov
rorl
cmp
jnp
fsubr
cmc
les
scas
gs
clc
push
fbld
lahf
bound
cli
add
push
xor
fcomps
rorl
mov
stos
in
mov
rol
inc
fsubs
ret
pop
lret
pop
in
in
lahf
push
lret
in
popa
loop
test
adc
push
mov
inc
iret
movsl
gs
ljmp
test
and
pop
or
mov
test
filds
sub
loope
mov
jl
stos
sub
loopne
mov
sahf
ds
mov
push
aas
ret
mov
or
imul
cmp
jb
mov
fs
lea
jmp
push
jns
lret
fwait
ret
push
outsl
call
jns
les
mov
or
and
cld
or
ja
sub
jl
xchg
sbb
dec
dec
pop
sbb
loope
jmp
pop
xchg
je
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
test
loope
jno
jmp
data16
sarl
in
jle
shrl
xor
pop
mov
shrb
xchg
inc
test
popa
dec
mov
repz
lods
add
pop
loopne
or
jecxz
mov
sahf
inc
or
aaa
cmp
push
js
sbb
mov
jmp
jnp
loope
mov
jp
and
sbb
inc
and
jge
inc
inc
sti
and
dec
xchg
xchg
and
movsb
not
push
push
test
and
lea
jl
stos
mov
fucomip
pop
xor
push
add
push
aas
mov
outsb
int
imul
xchg
jl
dec
in
push
fsub
lret
dec
jecxz
pop
pop
dec
jns
mov
mov
add
arpl
inc
inc
sub
jae
out
inc
es
arpl
adc
or
xchg
inc
ret
lret
leave
push
movb
pop
push
insb
lds
inc
mov
sbb
push
cs
and
sub
mov
shll
jnp
stc
js
pushf
orl
call
jge
or
mov
xchg
repz
clc
adc
dec
stos
mov
aam
aaa
daa
or
push
int
adc
pop
fimull
jge
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
push
adcb
sub
jmp
test
and
in
jle
clc
add
add
std
xor
ret
pop
iret
fdivrl
cmpsl
jae
inc
pop
aad
aas
inc
or
jb
addr16
notl
daa
repz
aam
arpl
sahf
jmp
mov
adc
sbb
cmp
jb
dec
mov
bound
inc
cmp
sarl
sbb
sbb
push
pushf
mov
push
mov
nop
jp
movsl
mov
addr16
jbe
fistps
or
cmc
xchg
and
add
xchg
mov
cli
mov
cwtl
cli
adc
sbb
dec
push
into
insb
imul
adc
cmp
sub
sbbl
xchg
pushf
jo
fs
push
lods
push
jnp
sti
mov
jbe,pt
push
push
test
in
mov
fcmovbe
cli
or
mov
mov
jge
and
repz
push
adc
mov
dec
mov
dec
out
cli
cmpsl
iret
in
push
jmp
jmp
out
push
pop
in
fldcw
mov
sbb
sbb
jno
mov
or
xchg
test
stc
jbe
enter
mov
pop
dec
cld
mul
sahf
xchg
cmp
push
mov
pop
jne
push
xor
cli
packsswb
add
lret
ss
out
cwtl
push
xchg
arpl
mov
imul
sub
mov
jmp
mov
mov
jmp
test
stc
test
sbb
in
pop
loope
fdivrl
in
jle
pop
and
mov
xlat
xor
pop
test
xchg
fnstenv
ja
addr16
mov
dec
test
add
mov
shr
movsl
daa
xchg
test
lret
dec
dec
sarb
out
fwait
dec
and
mov
sub
jne
cmpsl
sbb
or
pop
je
iret
jge
aaa
mov
inc
or
dec
adc
xorl
mov
jns
push
adc
mov
test
cmp
movsl
in
mov
int
dec
test
jge
out
scas
mov
ja
jg
shrb
xchg
ja
jmp
and
xchg
dec
cmpsb
pop
jbe
dec
test
mov
ds
push
push
cli
lret
lods
sbb
or
out
or
in
dec
pop
cmp
and
lds
xor
mov
cs
mov
mov
or
aas
xchg
in
mov
xacquire
movb
jmp
or
stos
dec
sahf
mov
push
and
sbb
pop
insl
mov
out
or
mov
outsl
andb
jns
mov
insl
insl
xchg
fldcw
inc
mov
stos
mov
ss
jnp
pop
mov
or
sahf
add
pop
pop
inc
cmp
xchg
adc
and
js
jae
arpl
dec
sub
jp
xchg
xor
es
test
stos
xor
mov
mov
ret
or
jp
test
decl
add
idiv
decl
add
add
xchg
xor
jmp
cli
fnstsw
in
jle
call
or
mov
mov
jns
cltd
sti
xor
dec
cltd
lea
and
pop
adc
cwtl
xor
jo
test
negl
shl
jnp
xchg
lds
test
add
jnp
cld
into
mov
inc
pushf
fiaddl
lret
ret
ljmp
sub
mov
and
leave
jae
mov
mov
xor
inc
aaa
push
shll
lahf
sub
pop
ljmp
inc
mov
lcall
add
mov
adc
lock
jge
inc
sbb
jo
inc
pop
outsb
push
sbb
pop
mov
pop
fisubrl
std
adc
loopne
pop
ds
jp
sub
mov
ljmp
test
mov
cli
dec
test
insl
push
pop
mov
js
fcmovnbe
inc
call
xor
pop
leave
lods
jb
and
arpl
pop
lds
mov
sub
xor
aaa
inc
sti
pop
hlt
out
fmul
jp
push
adc
shr
pop
and
out
xchg
dec
xor
cs
jne
jecxz
or
xchg
adc
xchg
mov
pop
xchg
lea
outsl
mov
loop
or
pop
test
shll
mov
cmp
je
mov
jmp
push
mov
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
and
mov
sbbl
push
xorl
push
mov
mov
sub
or
mov
xor
adcl
push
mov
and
add
mov
or
lea
mov
mov
mov
xor
sbb
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
negl
jmp
add
jmp
mov
pop
push
arpl
jp
jle
arpl
fldenv
scas
add
dec
jmp
mov
pop
and
insl
xor
aam
outsb
or
into
jle
xchg
ret
push
data16
outsb
ret
test
loopne
pop
jae
mov
pop
packssdw
jne
push
pop
cmp
mov
ret
mov
pushf
test
sti
test
icebp
imul
sbb
cmp
pop
iret
in
jecxz
jb
pop
pop
xchg
das
add
jns
test
adc
mov
stos
cmpsl
xor
adc
loop
mov
mov
fcoml
loop
mov
addr16
adc
loope
notl
push
pop
push
mov
jge
jno
adc
dec
sti
rorl
sbb
std
xchg
fiadds
mov
add
fwait
push
out
inc
jne
jae
xor
cmp
lcall
sbb
dec
sbb
push
push
mov
pop
push
test
adc
pop
lock
inc
push
mov
pop
rcr
adc
cltd
jl
ret
pop
in
inc
cmp
cmpsl
xor
in
ja
dec
inc
or
jecxz
or
in
stos
jb
aad
or
iret
mov
in
in
mov
pop
pop
les
mov
pop
sti
mov
or
aaa
sub
aas
lock
lock
add
xor
xor
nop
xor
inc
sub
sub
outsl
filds
loopne
xor
pop
out
sub
lcall
repnz
mov
push
sub
sub
out
aaa
lock
mov
icebp
ljmp
test
inc
ss
loopne
mov
sbb
cld
adcb
aas
push
adc
shlb
pop
stos
movsb
jns
jmp
or
adc
push
shll
xchg
inc
or
push
insl
test
in
push
mov
mov
push
daa
nop
mov
jnp,pn
cmc
dec
aam
dec
scas
cmp
daa
and
inc
jne
pop
dec
mov
mov
xchg
mov
cmc
adcb
xchg
xchg
cmp
sbb
loope
push
and
in
xor
xchg
push
xchg
out
in
jno
ret
lcall
sub
iret
mov
sub
add
mov
cmpsb
loopne
dec
mov
add
clc
lcall
or
movsl
adc
inc
dec
popa
xchg
mov
and
push
clc
xchg
imul
mov
mov
sbbl
inc
xor
or
bound
lds
lock
mov
incl
lds
movsl
jmp
sbb
mov
lret
mov
mov
push
clc
fcompl
bound
and
push
pop
fmuls
mov
jge
test
pop
movl
andl
xor
add
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
push
call
cmpl
jb
sub
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
mov
xor
and
add
sub
mov
or
mov
mov
mov
xorl
mov
andl
mov
jmp
jge
mov
mov
ds
sub
jle
jge
jle
lret
sbb
int3
pop
lods
cwtl
clc
push
mov
push
sub
xchg
jle
add
dec
stos
jb
mov
or
and
sahf
cmp
sbb
xchg
sti
and
les
rcrb
xor
push
mov
lock
es
lods
scas
call
outsl
clc
mov
push
mov
pop
out
ja
decl
imul
int3
push
fdivrl
movsb
mov
lock
push
insb
test
add
lcall
cmpsb
inc
cs
lret
push
das
pop
mov
mov
and
sbb
int3
into
aam
lods
ljmp
mov
sub
subl
and
insb
inc
sbb
pop
sbb
dec
shr
adc
shll
dec
mov
loop
adc
mov
or
pusha
push
adc
sbb
jl
push
dec
dec
push
stc
and
je
insb
out
jl
nop
in
arpl
or
inc
add
pop
scas
loop
das
daa
mov
mov
out
testb
orl
test
sub
sbb
xchg
ret
ljmp
stc
sarb
das
pop
popf
or
push
pop
cmp
push
or
pop
fwait
pop
mov
xor
adc
push
movsb
outsl
sub
push
sahf
in
pop
push
xchg
or
fs
daa
loop
pop
pushf
ja
xchg
fcomps
mov
mov
sbb
pop
xchg
sub
push
repnz
aam
cmp
out
insb
dec
out
pop
xchg
loopne
fcomi
jne
decl
or
testl
ljmp
cmp
aaa
xor
ficomps
or
cmp
or
lcall
mov
cli
imul
decl
cwtl
xor
push
or
into
mov
mov
out
ret
loope
adc
stos
dec
daa
outsb
xchg
imull
jmp
xchg
bound
pop
mov
jnp
cmpsl
sbb
or
push
pop
pop
pop
add
in
push
push
mov
imul
negl
pop
test
sarb
stos
adc
mov
loop
js
stos
dec
adc
mov
xlat
lods
push
cmpsb
adc
cmp
fldcw
jno
dec
xlat
fistpl
ret
aam
xchg
stos
and
ss
cmp
out
arpl
mov
adc
idivb
out
jnp
xchg
mov
dec
pop
js
pop
shl
test
or
fs
cmpb
and
mov
or
jo
scas
out
data16
test
test
aas
fimuls
sar
les
rcl
hlt
mov
pusha
fiaddl
leave
sbbl
add
adc
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
cmp
jmp
cmovbe
je
dec
cmc
xchg
pop
push
jge
jle
sub
scas
jmp
xchg
sahf
int3
je
adc
in
jle
mov
lods
loope
fmull
ja
bound
sub
addr16
movl
sbb
sub
rclb
pusha
jge
mov
ret
mov
jns
ds
or
xchg
and
xlat
je
movsl
bound
dec
sub
mov
dec
mov
orb
arpl
xor
adc
and
addr16
jns
jmp
and
mov
out
cwtl
shrb
loopne
add
lds
jno
xchg
fnstcw
push
pop
xorl
jg
xor
inc
in
fs
add
pop
sbbb
out
sub
jle
dec
subl
pop
adc
fcompl
mov
insb
cltd
clc
inc
sub
adc
cmp
inc
outsb
ss
ljmp
mov
adc
push
ja
lods
and
lea
ss
cmp
mov
shr
pop
rorb
sub
loopne
shll
int3
inc
mov
pop
adc
in
loope
cmc
dec
push
sbb
push
dec
fistl
ret
mov
aam
lcall
sbb
jae
hlt
movb
xchg
cmp
mov
les
add
dec
dec
aas
and
into
jl
clc
popf
mov
cld
lods
cmp
hlt
cmp
inc
mov
jbe
sbb
inc
xor
in
in
push
sub
mov
sti
enter
adcl
push
je
mov
mov
nop
xchg
mov
enter
mov
xor
xor
test
fsubrl
in
jmp
stos
cltd
stos
lds
lds
pop
sbb
and
je
cmp
mov
mov
repnz
sub
insb
dec
push
cmp
pop
sbb
jecxz
fadds
nop
dec
in
fiaddl
jp
lods
lods
mov
sbb
push
int3
xchg
pop
push
int
jp
inc
sbb
stc
lea
negl
leave
mov
cmpsl
push
sub
sbb
cld
shr
xlat
pop
jp
lock
in
lods
pop
ffree
jb
jno
int
push
dec
sbb
xchg
pop
leave
sbb
sub
sub
rcrb
outsb
pop
fs
push
fwait
xchg
das
sahf
popl
mov
es
pusha
mov
sbb
sbb
dec
mov
sbb
dec
into
scas
ss
jnp
sbb
push
pop
xchg
pop
xchg
out
xchg
cmp
movd
mov
lods
inc
xor
sub
fstl
xlat
xchg
push
mov
incl
adc
arpl
loopne
mov
dec
mov
lock
fstpt
add
jno
pop
or
cmp
shlb
out
lcall
xchg
jne
mov
mov
xor
add
cmp
jne
mov
jmp
inc
aad
shlb
push
out
push
stc
push
mov
jle
jge
jle
jae
and
ret
adc
sbb
xor
leave
mov
imulb
or
mov
add
mov
inc
leave
cmpsb
push
fiaddl
out
push
pop
or
dec
push
imul
in
ret
les
jne
inc
pop
mov
pop
mov
test
cmp
addr16
lods
dec
shll
cli
js
pop
adc
ret
outsl
and
ss
aad
sarb
ljmp
push
fld1
hlt
test
cmp
outsb
sub
xchg
add
adc
mov
out
int
push
or
loope
jns
fwait
imul
dec
pusha
add
and
roll
sti
js
jne
pop
jecxz
cmpsl
pop
cmp
outsl
pushf
cltd
outsb
sub
adc
ficoms
jnp
sbb
jns
fnstenv
rep
mov
xor
jb
pop
mov
cs
aad
sbb
and
outsb
cmp
repz
les
adc
or
loopne
cmp
cs
dec
ljmp
push
push
cmc
mov
dec
jge
rcrb
mov
inc
orb
mov
rorl
and
xchg
adc
and
rcl
add
in
enter
cmpsl
mov
xchg
sarl
push
outsb
mov
iret
mov
inc
cli
or
sub
sbb
inc
insl
mov
pop
xor
adc
mov
jb
dec
lea
pop
jno
cmpsl
mov
mul
jp
ffree
xchg
je
maxps
shl
inc
out
aad
mov
out
in
cmpl
mov
lret
insl
sub
out
int
stc
sbb
sub
fnstenv
inc
popa
sahf
jmp
mov
test
lds
pop
rorl
jmp
in
imul
adc
inc
ficoml
outsl
xlat
lock
dec
iret
mov
sbb
add
out
cwtl
lods
arpl
js
lods
sbb
ljmp
insl
inc
and
aam
hlt
popa
mov
mull
scas
jg
pushf
call
mov
clc
xor
pop
and
das
push
decb
or
jne
pop
shll
iret
dec
jbe
stos
dec
mov
sbb
push
out
xlat
add
push
add
adc
adc
sub
mov
mov
test
xorb
fs
pop
dec
shlb
iret
pop
std
cmp
lret
xor
sahf
ret
push
movsb
cmpl
mov
xchg
ds
pop
fs
das
add
sbbl
fldl
leave
mov
push
mov
movb
jbe
lods
inc
fstps
mov
lcall
mov
mov
mov
jmp
enter
enter
sbb
mull
xor
jle
jp
jle
dec
jmp
cld
xor
in
fildll
pop
pop
mov
xor
sbb
lcall
call
int3
sha1msg2
addr16
push
punpckhbw
in
push
sub
push
lcall
test
popf
sbb
arpl
icebp
hlt
pop
xchg
xchg
mov
add
fidivrs
add
add
inc
cwtl
lock
inc
sub
cwtl
ljmp
jp
fidivl
push
cmpsl
std
in
mov
mov
cmp
cmp
test
push
cs
or
mov
or
xor
stos
aam
lods
push
mov
lret
cmp
into
mov
pop
dec
sbbl
out
xchg
repnz
jno
movsb
fists
cmp
cmp
cmpsl
int3
inc
lods
push
mov
movsl
arpl
sbb
leave
jns
push
adc
sti
push
insb
xor
test
arpl
loop
fs
push
pop
nop
test
jnp
sub
cli
adc
ret
int
dec
fprem1
push
sbb
in
mov
mov
push
push
fs
lret
fstl
mov
dec
mov
mov
pop
stos
pop
pop
push
inc
dec
pop
push
cwtl
lret
ficomps
sub
mov
cwtl
dec
stc
and
call
inc
fidivl
mov
ja
cld
rcl
out
mov
jecxz
arpl
mov
pop
ja
cmp
pop
lds
imul
rorb
popa
add
addl
ror
pop
mov
sub
das
add
ficoml
mov
shll
xor
aam
mov
jg
lahf
icebp
icebp
std
cld
xchg
pop
aaa
mov
arpl
fmull
inc
lret
xorl
jecxz
aas
mov
sub
in
xor
xchg
je
nop
ja
ljmp
lahf
and
sbb
xor
ret
add
shrb
shl
sbb
aas
shll
sbbb
fwait
and
outsb
mov
loopne
and
out
aam
add
mov
xchg
dec
repz
test
inc
push
sbb
rcl
mov
cli
and
cmp
add
cmpb
dec
add
xchg
add
insb
cmp
or
add
int
out
ret
mov
enter
sbb
add
fwait
xor
jo
daa
adc
sub
jmp
add
add
adc
stc
mov
test
test
dec
jge
sbb
stc
scas
das
mov
inc
inc
sub
push
mov
xchg
inc
je
push
xor
mov
fcom
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
jmp
lret
out
icebp
jmp
inc
popf
xchg
mov
sub
ljmp
pusha
or
cwtl
push
nop
pop
sub
jg
int3
outsl
cwtl
add
movsb
cli
lahf
and
inc
pushf
std
test
cmp
add
outsl
pop
test
push
mov
or
repnz
jecxz
mov
stos
daa
xchg
adc
cmp
in
or
jp
pusha
idivb
or
jle
fisttps
xor
fldcw
dec
mov
fisttps
pop
loopew
ljmp
out
cmp
ja
orb
rolb
icebp
or
pop
fisubrl
inc
ljmp
in
lret
xchg
sbb
rcll
xor
in
xchg
xchg
lahf
in
sbb
inc
xchg
push
cmp
test
adc
in
adc
mov
mov
fistl
sbb
pop
imul
pusha
sbb
fsubr
aam
aas
in
arpl
pop
pop
xchg
ds
sbb
mov
and
xor
subl
add
adc
sub
pop
inc
testl
mov
stc
out
or
loop
pop
ret
repz
imul
mov
inc
popa
fdivs
mov
adc
rcll
fnstenv
fcmovnb
out
jne
mov
scas
cmp
shrb
xor
add
mov
lods
out
xor
mov
fists
into
in
test
pop
or
and
dec
mov
fsubr
fwait
rcr
and
xor
out
in
xchg
mov
sarl
pop
mov
imul
repz
xor
fdivs
mov
pop
and
dec
sbb
xchg
cmpsl
dec
jg
xlat
xchg
pusha
inc
cmp
xor
add
movsb
outsl
scas
movsb
mov
xor
cmpsl
aam
or
cli
jb
movsl
mov
ds
push
out
jle
loopne
dec
ret
or
and
mov
mov
mov
adc
jnp
fs
movsl
pop
inc
repz
push
loopne
fmuls
sub
mov
sbb
inc
add
dec
jecxz
or
xor
dec
dec
or
clc
pop
add
nop
cmp
mov
cwtl
shrb
push
cmp
imull
cltd
daa
fistpll
ret
shrl
icebp
aas
ds
xlat
rol
push
push
jne
adc
sub
pop
int
scas
int
fidivrs
lahf
sbb
insb
movsl
repz
sahf
inc
push
notb
push
push
xor
cmp
clc
bound
mov
aad
dec
push
movsl
ja
int
and
sahf
xchg
xchg
bound
shlb
mov
mov
lock
sbb
mov
xor
or
lds
or
pushf
mov
sbb
mov
add
jmp
in
notb
sub
mov
jle
jge
jle
pop
xchg
sbb
aad
inc
cmpsl
stos
pop
mov
pop
xchg
or
jno
scas
push
lock
sbb
out
push
cmp
insb
data16
jnp
pop
rcrb
sbb
shl
add
adc
mov
stos
stos
cmp
call
adc
fistl
lds
adc
in
mov
push
sub
pop
mov
loope
adc
mov
push
arpl
std
push
inc
stc
dec
out
mov
rcrl
and
into
mov
sbb
xor
aaa
push
add
add
mov
mov
push
cld
ss
push
lods
xchg
repnz
out
and
pop
or
andb
test
push
repnz
or
mov
mov
sub
movsb
pop
push
pop
push
mov
das
xchg
outsb
in
push
xor
dec
and
addr16
movsb
adc
xor
daa
push
pop
out
jns
add
jnp
mov
jg
into
jmp
out
jbe
push
movsl
push
mov
das
mov
fstl
sti
out
aas
aam
sub
mov
xor
cmp
in
aad
and
mov
sahf
das
push
repnz
adc
jne
cmc
test
jmp
lcall
or
daa
cmp
jns
mov
adc
js
push
mov
outsl
sub
dec
aas
and
clc
imul
push
xchg
dec
in
xchg
test
dec
jge
mov
repnz
mov
xor
xchg
push
ss
in
mov
test
jmp
pop
ljmp
sarl
dec
loope
mov
xchg
push
cmpsl
mov
loop
adc
jecxz
data16
xchg
push
ss
dec
dec
das
xchg
repnz
mov
cmp
and
cmpsb
push
xor
popa
aad
call
mov
scas
bound
sahf
and
jecxz
popf
sbb
push
fcomps
popa
and
loop
and
sub
daa
jmp
sbb
jne
loop
mov
in
xor
mov
cmpsl
call
sahf
push
cmp
or
adc
push
aad
fsts
fmul
call
add
xor
cmp
out
xchg
sbbb
or
mov
cmp
xor
stos
mov
inc
and
popa
ss
add
das
xchg
sbb
inc
xchg
xlat
addb
add
add
lret
dec
inc
imul
push
inc
sbb
sbb
push
loop
jnp
mov
mov
inc
stc
push
shll
or
dec
mov
cli
adc
xchg
inc
imul
test
adc
push
jge
jg
lret
pop
xchg
cmp
and
cmp
je
mov
mov
mov
mov
lea
jmp
dec
mov
pop
jno
nop
lret
add
hlt
jle
jp
jle
xchg
fs
mov
mov
es
mov
fildll
int
aas
enter
leave
push
testb
sti
rolb
adc
inc
dec
sub
xlat
shrd
pop
cmp
sub
dec
pop
into
in
outsb
loope
mov
or
rorb
pop
inc
imul
imul
loope
lcall
sub
in
lods
jae
mov
pop
jb
lods
mov
cs
xchg
xor
enter
pushf
push
ja
xchg
jge
aaa
hlt
in
loop
mov
add
add
inc
jle
test
and
dec
arpl
pushf
fmul
push
xlat
cwtl
out
cmc
mov
push
int
insl
out
loop
daa
or
movsl
shrb
lods
or
push
repnz
fdivl
push
add
shrd
push
sub
das
imul
das
xchg
aaa
push
dec
sub
or
sub
test
pusha
ja
imul
test
int
mov
lahf
insl
test
lds
mov
ds
cwtl
inc
fcmovbe
gs
icebp
les
addr16
xor
mov
push
mov
or
xchg
pop
sub
scas
sub
leave
pop
loope
mov
jns
or
pop
xlat
stos
ljmp
fs
out
xchg
jl
leave
jmp
mov
movsl
aas
inc
xor
ret
fdivr
mov
ret
and
push
negl
xor
ss
inc
repz
dec
stc
insl
cwtl
repz
push
jns
pop
sbb
sub
xlat
inc
aam
sarl
sub
mov
ds
fcmovu
seto
sti
xchg
popa
popa
xchg
xchg
push
mov
and
xorb
cmp
xchg
push
sub
inc
cld
leave
popf
sbb
inc
dec
or
or
mov
mov
inc
mov
and
scas
pop
leave
stc
test
dec
jle
jne
mov
movsl
inc
xchg
push
repz
inc
cltd
das
das
in
cmp
clc
aad
mov
data16
test
xchg
shrb
in
subl
imul
jge
insl
jnp
dec
lret
ret
sbb
mov
lods
outsb
add
add
or
mov
iret
jae
leave
jge
mov
insb
imull
ficoms
mov
mov
jle
jl
es
dec
cli
xlat
fsub
movsb
cmp
sub
mov
imul
aam
loopne
inc
lods
stos
aad
jo
je
inc
adc
dec
aad
cwtl
mov
mov
mov
fs
pop
pop
cmpsl
or
xlat
jne
sub
pop
sti
cmp
fisubrs
mov
add
int
add
sub
lahf
jo
sbb
pop
out
jl
dec
sbb
inc
cmpsb
je
cmp
in
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
jmp
adc
inc
sahf
popa
scas
icebp
jno
ficomps
xchg
repz
jp
jle
fmul
cmpsb
push
enter
scas
mov
push
mov
aas
repnz
cmp
adc
fwait
imul
fucomi
das
inc
push
std
cmp
pop
jg
dec
add
xchg
cs
rorb
hlt
inc
idiv
loope
in
jmp
je
popf
adc
and
jle
xor
mov
mov
lret
stc
cmp
mov
xchg
xor
fmuls
aas
add
pop
mov
inc
adc
aaa
sbb
jnp
jg
icebp
les
mov
lea
outsb
sub
stos
adc
xor
sub
rorb
sub
sub
rcl
push
cwtl
pop
xor
lret
xlat
mov
mov
sbb
andl
mov
sub
xor
cmpb
xchg
flds
sarb
mov
cmpsb
popf
xlat
addr16
and
push
inc
dec
out
mov
mov
nop
sub
outsl
jmp
outsl
js
add
imul
pop
jns
test
or
pop
xor
sti
pusha
add
fmul
fs
lcall
lret
pop
push
cmp
fwait
stos
pop
sahf
repnz
pushf
test
xor
or
jnp
sub
sub
outsl
pop
stos
stos
mov
dec
cmp
in
xor
adc
mov
pop
inc
insb
outsl
adc
pusha
xlat
data16
pusha
mov
lcall
inc
enter
loopne
xor
dec
movsl
cmp
xor
dec
sub
or
add
dec
push
out
aad
mov
das
outsb
shrb
xchg
jge
pop
pop
jmp
mov
pop
lret
data16
ljmp
es
fs
sub
fdivrp
dec
fidivrs
nop
cmpsl
inc
push
xchg
test
and
call
mov
or
adc
stos
mov
jmp
inc
push
data16
cmp
add
mov
push
xor
sbb
loope
cmc
loop
jb
pop
sbb
enter
adc
mov
sbb
push
cs
loope
addb
nop
mov
faddp
adc
call
je
stos
sbb
inc
lcall
and
add
push
lret
add
adc
leave
and
cld
scas
adc
jmp
push
push
rcrl
icebp
adc
jmp
pop
into
les
aas
ss
stos
push
lea
and
ljmp
xchg
xchg
in
mov
and
xor
and
mov
in
test
dec
push
int3
mov
push
mov
icebp
adc
rcrb
mov
pop
mov
mov
mov
mov
mov
add
xor
cmp
je
jmp
sarl
mov
mov
shrl
fsubrs
xlat
add
jle
jp
jle
and
stos
sbb
mov
aas
loopne
jbe
push
mulb
and
mov
xor
ja
mov
adc
outsl
orb
insl
lret
daa
cmc
xor
fisttpll
fists
add
shlb
push
mov
fdivs
mul
sbb
mov
cmp
roll
jb
bound
sbb
xchg
inc
adc
cmp
and
lds
sti
and
mov
dec
xor
or
mov
and
mov
jns
fisubl
sbb
jecxz
adc
xchg
imul
sbb
push
aaa
arpl
aas
shr
or
add
jecxz
push
jns
push
bound
mov
sub
mov
or
dec
xchg
in
lds
lods
cmp
dec
cld
movsl
aaa
out
push
cmpsb
mov
into
xchg
push
ss
add
int3
adc
cmp
in
inc
int
push
sbb
xchg
fbld
fadds
lret
push
cmpl
sbb
jl
data16
int3
test
fwait
sub
daa
out
clc
test
jmp
int
imulb
xor
shrl
dec
das
cmp
std
mov
sub
jbe
dec
lods
scas
jmp
jne
das
mov
in
sub
pop
jb
cmp
dec
jb
mov
adc
mov
in
fnsave
je
rcll
xchg
pop
jno
or
loope
outsb
arpl
fcomp
xor
push
sub
repnz
push
jbe
out
inc
dec
rorb
aas
pop
or
mov
add
movsb
mov
shrl
nop
dec
inc
mov
push
dec
sub
xchg
test
es
push
cs
jbe
stos
testl
lahf
or
insb
lock
xor
fwait
loope
cmp
scas
xchg
xor
sub
sbb
test
stc
cmp
loope
mov
cmc
outsb
push
xchg
jnp
or
pop
sub
xchg
and
jae
mov
call
hlt
int3
movsb
lret
test
lret
scas
inc
add
mov
or
adc
mov
lahf
repnz
lods
and
cmp
xchg
test
adc
jg
cmpsl
and
ret
mov
data16
push
insb
test
lcall
xchg
shlb
jb
or
jg
xchg
xor
pop
sbb
test
fisttpll
ja
xor
insb
das
lcall
pop
int3
sbb
and
sbb
cmp
mov
pop
cmp
adc
bound
mov
mov
lock
push
mov
cmpsl
das
dec
mov
mov
xor
add
jmp
and
jno
pop
xchg
sar
cmp
or
jle
jp
jle
xor
scas
je
jno
push
xor
lret
and
xor
lcall
push
xor
add
sti
xor
xor
loop
and
loopne
adc
mov
cmp
cmp
lods
xchg
hlt
sub
jl
mov
les
mov
fidivl
adc
or
repz
mov
push
pop
xchg
cmp
sub
cs
mov
inc
adc
cs
add
fistps
mov
mov
cmpb
dec
xchg
hlt
icebp
and
inc
cltd
sub
notl
sub
lahf
pop
lock
shrl
xor
add
frstor
pop
mov
inc
xchg
lret
xchg
jns
jp
fstpt
sub
jp
data16
ret
xor
adc
mov
test
aam
shlb
mov
cld
movsb
mov
pusha
xchg
lock
mov
dec
es
sti
out
sub
mov
daa
add
inc
or
mov
in
pop
jecxz
repnz
shrl
outsb
int3
int3
mov
cs
enter
hlt
ljmp
sahf
scas
and
and
test
rcl
stos
fidivs
dec
inc
sahf
cmpsl
popf
sub
jns
outsl
cmp
push
lods
push
ljmp
aam
dec
dec
cltd
cmpsl
andl
in
jnp
imull
dec
ja
rcl
out
pop
iret
repnz
mov
in
imul
ds
inc
mov
movsl
test
xor
sahf
xchg
mov
pushf
gs
test
or
push
add
les
aad
sbbl
insl
into
xchg
insb
outsl
lcall
lods
cmp
cli
cmp
sbb
cmpb
mov
or
lret
fdiv
cmp
cmp
push
or
lods
shll
dec
mov
outsl
les
pop
cs
adcb
dec
imul
jp
push
add
xor
data16
out
lahf
popa
and
mov
std
js
fs
and
cs
cmpsb
mov
sbb
pop
adc
fdivs
inc
jbe
dec
pusha
fwait
jae
and
mov
test
mov
xor
movb
push
sbb
dec
jmp
out
jnp
xor
or
jnp
incl
pop
and
sti
out
mov
cwtl
cmp
sarb
inc
repnz
fsubl
cld
add
xlat
cld
or
adcl
pop
or
int3
add
fisttpl
mov
ja
cmp
mov
mov
mov
or
xchg
mov
dec
inc
ret
pop
jmp
mov
jmp
xorl
jmp
jmp
and
jnp
cmp
and
jp
push
mov
outsb
sub
jle
jge
jle
pusha
pop
push
scas
dec
mov
cmc
push
push
jl
pop
cmpsb
dec
stos
cli
xchg
add
and
sti
or
test
scas
inc
in
daa
pop
rorb
cmp
pop
faddl
lods
adc
lret
popf
adc
ja
dec
sub
shll
test
inc
dec
fldl
pop
jno
push
fsubrl
iret
xchg
repnz
adc
or
mov
and
out
lret
je
out
dec
push
pop
lret
mov
and
adc
fcoml
or
andl
xor
xor
ficoms
jecxz
sbb
test
push
xchg
mov
add
push
jb
push
mov
outsb
push
and
std
dec
mull
pop
xchg
dec
xchg
repnz
push
insb
cld
inc
loopne
cmp
push
in
in
sbbl
test
lods
pusha
fdivrs
xchg
fnstenv
mov
inc
mov
jge
arpl
call
popa
mov
inc
pop
sbb
movsl
mov
ljmp
inc
stc
adc
test
mov
ds
dec
imul
test
cmp
int
mov
jne
int
and
pop
mov
xchg
and
out
out
and
mov
lds
and
imul
add
xor
insb
sub
push
je
add
cltd
inc
fisttpll
sub
mov
pop
arpl
mov
lods
scas
dec
lret
cli
xlat
mov
ret
mov
cs
xor
or
xor
ret
xchg
in
mov
aad
and
add
cmpsl
add
lcall
sub
adc
pop
mov
loop
mov
hlt
lret
or
mov
jl
mov
sub
in
pop
rorb
cltd
ret
es
das
pop
mov
rcrl
ss
push
mov
push
negl
les
in
sub
xchg
movsb
sbb
add
inc
shl
cli
dec
mov
out
jbe
pop
push
lds
aas
xor
xor
mov
aad
test
pop
clc
pop
xor
push
jg
les
sub
cld
lret
in
cld
ss
jp
mov
jmp
repz
cmpsl
dec
clc
clc
sbb
std
push
test
cmc
cmp
xchg
sbb
mov
add
nop
leave
sub
sub
pop
out
loope
mov
or
cmp
cmp
xlat
jnp
rolb
scas
and
les
or
adc
pop
into
test
cmp
pop
xor
hlt
pop
int3
xchg
cli
aas
inc
mov
lods
test
mov
jmp
xchg
jge
hlt
push
jne
pop
cld
into
inc
cmp
sbb
jp
jle
push
repz
pop
and
sahf
mov
mov
or
pop
test
inc
xor
dec
or
pop
push
sbb
js
pushf
in
xchg
pop
xchg
cmc
dec
std
xor
fcomps
test
out
popf
sub
bswap
stos
adc
ss
ss
xor
mov
xor
or
sbb
ljmp
das
adc
and
mov
pop
scas
push
push
push
jbe
sub
sahf
adc
sahf
gs
add
jo
add
push
addr16
xchg
stos
jle
lds
cwtl
jns
clc
pop
cmp
mov
sub
push
shll
and
jno
jo
movsb
adc
push
int
mov
ror
ja
cmp
out
mov
loop
fidivrl
sbb
mov
jecxz
ja
sarl
sub
mov
or
mov
add
jnp
pop
mov
les
fisubl
stos
cwtl
jmp
xchg
repnz
adc
rcrl
mov
xor
mov
call
sbb
hlt
call
inc
cmp
jb
out
mov
cltd
xor
fisubl
ret
jge
sub
inc
xchg
mov
sbb
lods
aam
clc
xor
add
push
sbb
jmp
and
movsb
mov
mov
mov
fbstp
push
ffree
ret
in
adc
pushf
mov
adc
ljmp
mov
mov
xchg
xor
jg
pop
sti
aas
add
fisttpl
fcomip
inc
mov
out
jbe
or
orb
xchg
cmpsl
xor
es
data16
push
fildll
jnp
xor
leave
sbb
add
and
dec
mov
cmp
push
push
mov
popf
inc
rorl
roll
mov
xorl
into
push
fildl
test
dec
adc
pop
iret
ss
push
shrb
cmpsb
fldenv
xor
cmp
loopne
rcrb
jno
jns
dec
fld1
in
imul
ret
sbb
push
dec
cmp
andl
shll
jp
fucomp
or
pop
lret
sbb
cs
cmp
loopne
stc
jns
in
mov
mov
add
pop
inc
flds
push
popf
jns
test
push
push
repnz
lret
icebp
js
daa
in
fcoms
daa
cs
das
and
repz
mov
and
in
jg
lods
icebp
dec
cwtl
xor
sahf
lods
repz
test
push
or
rorl
es
and
scas
push
inc
cmp
mov
js
jg
add
addr16
sub
lea
into
push
pop
xor
push
fisttpl
or
add
out
xor
mov
loop
into
xor
xchg
mov
mov
sbb
jle
jp
jle
adc
cmp
std
pop
inc
xor
out
adc
out
test
mov
jbe
fmull
xor
movb
push
mov
cwtl
shl
jbe
iret
call
pop
xchg
fs
or
fs
mov
and
les
push
fildll
outsl
bound
mov
push
dec
fs
addr16
out
xor
mov
xchg
in
fwait
aaa
inc
jmp
push
mov
mov
mov
cmp
je
xchg
imul
aam
add
cli
cmpsb
inc
ja
mov
dec
std
jecxz
outsb
in
arpl
cmp
popa
clc
out
lods
insb
fcomi
push
pop
mov
push
sbb
loopne
dec
or
ja
jl
jmp
inc
cmp
or
stc
pop
push
jae
or
sbb
pop
xchg
cmpb
lcall
int
push
clc
push
cmpb
dec
fdivs
jbe
push
fwait
cwtl
sub
jg
xor
sub
stc
or
sar
sub
daa
in
roll
jmp
out
jae
divb
lret
sub
pop
sbb
into
push
cmp
int3
in
nop
mov
sbb
ljmp
imulb
jb
and
xchg
outsl
into
ljmp
adc
cltd
lods
inc
mov
insb
pushf
sub
in
nop
add
sbb
inc
xor
hlt
ljmp
add
ja
push
mov
pop
rorb
clc
xchg
inc
jle
push
inc
sbb
mov
and
push
add
sub
js
push
das
mov
xor
test
mov
test
push
mov
loopne
jge
xlat
idiv
mov
imul
js
stc
ret
std
jmp
adc
test
xchg
pop
imul
rcl
ljmp
or
pop
xchg
ret
push
mov
aam
jl
in
arpl
insl
dec
jecxz
shl
test
jmp
mov
lds
lahf
pop
or
adc
mov
inc
mov
xchg
iret
xchg
repz
push
lret
push
cmp
loop
or
and
fmulp
iret
xor
mov
or
orl
push
movsb
add
mov
xlat
inc
or
cmp
in
addr16
cwtl
xlat
jne
icebp
push
push
daa
test
int3
imull
sti
mov
xor
out
add
jo
enter
xchg
pop
aaa
pop
jae
push
push
shlb
outsb
and
xchg
xor
aad
push
inc
imul
mov
scas
jecxz
cmp
sahf
orb
cmpsl
mov
pop
and
mov
or
jne
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
adc
movl
xor
or
and
movl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
push
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
xor
mov
add
mov
movzbl
xor
mov
orl
push
push
test
movl
je
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
mov
mov
adc
imul
mov
xor
or
sub
or
mov
mov
mov
sub
add
mov
and
mov
sbbl
xchg
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
sub
adc
xor
addl
mov
xor
mov
or
mov
mov
mov
addl
xor
andl
xor
xor
add
movl
mov
mov
mov
je
sbbl
mov
adcl
xor
sbbl
add
cmp
movl
jne
pushl
call
mov
adc
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
or
and
mov
mov
subl
xor
xorl
add
movl
cmp
je
andl
pushl
pushl
subl
call
sub
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
fs
mov
popf
iret
sbb
jle
jmp
mov
mov
cmp
pop
pop
int3
rcrb
in
fisttps
daa
and
xchg
loop
movb
adc
mov
lds
adc
adc
sub
mov
sbb
and
sub
mov
sub
loopne
xor
mov
jge
sahf
lds
loope
jl
add
pop
and
add
movsl
mov
cld
jnp
mov
cmp
pop
test
sub
xor
push
ja,pn
aad
jmp
inc
push
dec
and
cs
push
sbb
inc
or
sub
out
aam
xor
add
xor
fwait
add
addr16
repz
fcomip
jnp
mov
mov
or
adc
push
dec
push
mov
jbe
mov
loope
inc
std
inc
and
add
aas
push
dec
mov
mov
sbb
pusha
sarl
mov
adc
mov
scas
shrl
mov
xor
xlat
jecxz
and
mov
out
inc
or
adc
cwtl
lahf
out
jae
jae
outsl
fwait
ljmp
cmp
stos
shrl
push
in
sub
xchg
rsqrtps
mov
mov
in
pop
rcr
pusha
push
lret
push
add
jp
arpl
sub
pmaxsw
pushf
test
cltd
pop
mov
std
lock
sub
int
daa
fisttps
pop
push
pop
xchg
mov
add
mull
mov
movsl
iret
out
or
lahf
fsubrs
sbb
cmpsb
add
rclb
aaa
cmp
sbb
and
repz
xorb
cmpsl
pop
inc
push
or
call
hlt
addr16
push
aas
lods
mov
in
out
pop
mov
popa
inc
sub
xchg
ror
shrl
in
cmp
aad
pop
jecxz
insl
sbb
add
xor
icebp
add
insl
shl
inc
push
fcoml
stc
shlb
ss
inc
sahf
fcoms
pop
push
xchg
cs
scas
mov
ljmp
jg
dec
into
aad
stc
or
hlt
pop
push
mov
jne
sub
inc
fnstenv
call
pop
jmp
ret
add
adc
and
xchg
inc
data16
xor
clc
pop
rcll
fsts
mov
jbe
dec
dec
lret
mov
fildll
push
es
mov
adc
push
dec
insl
mov
shl
or
pop
and
shr
jne
lahf
push
fdivrl
inc
xchg
lret
aam
loop
sarb
push
mov
add
dec
push
or
arpl
jae
pop
mov
and
mov
mov
inc
sti
test
jecxz
sbb
cmpsl
call
dec
pushf
and
inc
in
mov
add
xor
mov
mov
mov
add
lea
mov
jmp
push
adc
shrl
cs
xor
mov
jle
jge
jle
lock
pop
cld
scas
mov
push
or
in
mov
pop
mov
xor
inc
sti
inc
xor
leave
xchg
xchg
lods
jnp
pop
or
push
lcall
xlat
stc
lds
lea
movsb
scas
shll
or
sub
mov
lods
ljmp
xchg
mov
xor
lret
arpl
prefetcht2
and
stc
lret
mov
sti
xchg
hlt
push
add
xchg
push
push
push
not
add
jno
rorl
cs
dec
inc
addr16
xor
push
jae
les
push
out
mov
fwait
push
xor
test
fbld
add
arpl
sbb
fcomp
or
pop
and
sub
dec
push
pop
out
jne
loop
les
loop
push
in
sub
imul
xchg
inc
mov
and
adc
pop
in
cmc
shrl
pop
lods
xchg
inc
xchg
rclb
mov
jmp
fidivl
ja
out
push
mov
xchg
mov
inc
cld
testb
inc
and
pop
test
mov
stos
push
push
or
imul
adc
lret
repnz
ljmp
out
jns
fimull
aad
xorb
mov
jnp
sbb
or
out
pushaw
lock
ja
aam
xchg
mov
push
pop
int
mov
push
vpminub
divps
pop
xchg
arpl
add
and
shll
mov
dec
repnz
mov
jb
sahf
or
mov
mov
mov
inc
ja
and
stos
fsts
xchg
sub
movsl
mov
ss
cmp
das
inc
sti
mov
sub
aad
insb
adc
cmpsb
cmp
mov
iret
mov
and
ja
mov
fstl
mov
stos
add
outsb
aas
ficompl
addl
cwtl
outsl
out
ja
inc
xorb
mov
xchg
xor
leave
jae
jl
jbe
imul
stc
std
insl
nop
inc
std
daa
sbb
loopne
in
adc
mov
add
leave
lods
int
in
aaa
cwtl
push
dec
or
insl
ja
adc
or
popa
pop
add
add
xor
cmpsb
sbb
in
pop
mov
arpl
xchg
mov
test
fisttps
fisubrl
test
test
ja
cmpsl
push
repnz
scas
jl
push
mov
pop
ja
pop
mov
dec
or
clc
pushf
js
outsl
repnz
roll
dec
push
sbb
scas
pop
lahf
pop
nop
adc
aad
adc
push
insl
test
sbb
out
push
in
lret
pop
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
xchg
adcl
and
jle
jns
or
push
sub
sbb
ss
lods
hlt
sub
pop
pop
loope
pop
dec
inc
lcall
rcl
xor
ret
xchg
fldcw
cwtl
or
sbb
daa
ss
pop
mov
inc
adc
sbb
dec
push
push
int3
add
daa
add
and
jmp
add
lret
shrl
fnstenv
push
xchg
jecxz
rcrl
and
push
dec
push
ja
lret
jae
xchg
push
sbbl
icebp
push
jg
add
das
imul
fnstcw
xor
test
loopne
pop
sahf
mov
lcall
xor
cli
cmp
push
pop
mov
jnp
lods
iret
aam
in
gs
fbstp
jmp
mov
or
push
ret
inc
mov
dec
mov
push
repz
in
xchg
and
xchg
dec
xor
in
dec
lds
xchg
fstps
mov
ss
mov
cmpl
imul
adc
push
arpl
je
cmpxchg
scas
in
test
push
lret
movsl
rorb
xchg
push
and
and
dec
jg
in
and
les
repz
jmp
and
ret
mov
mov
inc
jp
mov
dec
call
cmp
scas
mov
es
call
in
and
pop
lahf
je
mov
in
sbb
adc
and
scas
dec
icebp
jmp
or
ret
mov
fldcw
adcb
jb
sbb
dec
or
pop
test
cmc
fwait
pop
mov
and
jo
test
mov
fidivrs
push
test
mov
inc
fs
mov
add
pushf
jecxz
xchg
popa
adc
jecxz
or
push
or
insb
xorl
lret
daa
jg
outsl
test
push
inc
mov
push
pop
inc
push
mov
lock
aam
loop
lahf
sub
xchg
fcomip
push
sub
adc
arpl
stos
adc
push
cmp
pop
fs
push
hlt
testb
pop
jno
mov
cmp
pop
mov
mov
mov
cmp
inc
mov
adc
pop
pop
xchg
js
idivb
jg
dec
xor
xchg
adc
dec
test
mov
cmp
cmp
mov
insb
out
dec
mov
push
aaa
out
mov
mov
xchg
jl
and
test
fisttpll
pop
lods
xor
push
xchg
rorb
das
arpl
daa
loop
xchg
arpl
popf
sub
sub
popa
xchg
mov
popa
inc
pusha
jbe
leave
jge
inc
or
inc
or
in
rorb
push
add
mov
push
pop
push
dec
jmp
test
jnp
mov
xchg
rcr
cs
adc
xchg
jle
jge
jle
push
enter
jle
jo
loopne
lret
push
jp
and
cmp
or
incb
inc
aad
jl
and
xor
aaa
inc
fadds
ds
push
in
mov
xchg
xor
sub
test
rorl
mov
push
shll
mov
adc
jns
mov
test
movsb
sub
jecxz
xchg
aam
cs
stos
dec
push
insb
mov
std
subl
add
out
in
in
mov
or
jmp
inc
mov
out
cmp
pop
mov
xchg
fs
pop
inc
adc
mov
mov
stos
dec
scas
call
mov
in
lods
in
mov
sarb
cmc
xor
bound
dec
insl
mov
mov
pusha
imul
dec
mov
push
ja
sbb
mov
sbb
stos
xchg
dec
in
fyl2x
mov
dec
xor
shll
xchg
shlb
cmp
aam
mov
loop
mov
mov
add
cmp
sub
test
xor
pop
mov
les
inc
enter
jnp
adc
cmp
lds
or
adcb
clc
lret
inc
xor
test
out
jle
adc
fwait
movsb
jge
test
inc
and
ljmp
fisttpl
dec
shr
xor
xor
cltd
std
xchg
sbbb
stos
ret
dec
lahf
ds
ljmp
aad
or
loope
mov
cld
fcomps
dec
sbb
inc
cmp
fstpt
or
fs
adc
mov
cli
scas
in
movups
dec
mov
ja
fsubrs
mov
pop
js
adc
sbb
xchg
xor
lea
ja
stos
push
mov
orb
sbb
out
mov
mov
push
jmp
sub
cmpsb
das
dec
in
jne
sbb
jecxz
call
add
pushl
adc
push
cs
mov
leave
lock
inc
xchg
lods
mov
pushf
mov
xchg
fisttpll
push
sub
xchg
jp
xchg
insw
loop
pushf
jo
ja
push
mov
xchg
hlt
jne
jno
stos
sub
and
fdecstp
pusha
push
les
loop
pop
add
xchg
pushf
dec
lods
xchg
dec
lcall
les
mov
jg
inc
fmuls
in
idivl
ror
rcrb
push
pop
dec
leave
mov
fcoms
lahf
divb
mov
push
stos
xchg
mov
pusha
adc
mov
sbb
cwtl
sub
lock
cld
icebp
cli
mov
test
xor
pop
or
push
mov
js
jp
mov
in
fdivrl
out
pop
push
movsl
nop
cli
xor
add
lret
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
xor
xor
xor
pop
and
jle
jge
jle
mov
pop
mov
in
or
sbb
loopne
mov
loopne
inc
push
into
add
push
inc
mov
add
mov
push
mov
mov
jle
push
test
xchg
inc
jbe
mov
sqrtps
out
sbb
mov
fs
pop
inc
pop
push
or
stos
adc
mov
sbb
outsb
inc
fildl
push
mov
imul
mov
mov
popa
mov
dec
shlb
push
sub
cmpsl
cli
mov
std
add
pop
mov
out
outsb
sbb
sti
fs
or
lret
imul
inc
push
test
pop
sub
nop
or
jb
les
incb
mov
inc
loope
popa
outsb
xor
mov
or
mov
lret
lahf
fwait
mov
fadd
mov
xor
subb
add
cltd
dec
sbb
cmp
push
inc
adc
test
or
push
mov
xor
lock
ds
aaa
fld
es
inc
xchg
int3
pushf
shl
push
jp
cmc
incl
dec
and
cld
mov
add
sahf
xor
arpl
and
rcrb
leave
sub
push
test
lods
mov
les
loopne
repz
data16
lahf
int3
pop
or
sbb
rcrl
enter
push
add
cmp
fidivs
jnp
data16
stos
jg
out
jne
sbb
in
scas
inc
in
roll
or
imul
sbb
fs
mov
or
out
out
mov
mov
jg
imul
push
mov
sub
xor
dec
scas
into
dec
sub
sbb
hlt
into
ja
outsb
jg
jge
lea
jbe
lods
out
push
outsl
std
push
pop
out
cld
or
and
push
cmp
and
push
mov
sub
stc
fsub
fadds
or
push
aam
jmp
jle
scas
xchg
mov
out
fldcw
cltd
lods
mov
mov
mov
xor
inc
repz
mov
push
les
xchg
and
mov
mov
mov
adc
stos
loop
jl
dec
jo
rclb
pop
mov
pop
cmp
mov
sub
popa
jbe
ffree
or
fsubp
das
imul
jae
sub
cs
xchg
xor
sbb
and
cmpsb
mov
pop
lahf
shr
add
ds
scas
mov
popf
test
and
jbe
sub
out
inc
sub
imulb
lcall
add
scas
add
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
jmp
inc
stos
push
jmp
jae
mov
jo
jecxz
inc
ret
repz
jle
data16
mov
call
adc
pusha
xlat
xor
mov
pop
mov
bound
lahf
cli
push
sbb
stos
js
jbe
sbb
mov
or
add
mov
sub
dec
push
pop
push
pusha
sbb
ljmp
push
repz
mov
std
pop
xor
inc
loop
adc
jge
jmp
sub
xchg
pop
lcall
add
lret
sahf
and
sysexit
or
add
lock
pavgw
mov
daa
jns
lock
stc
rcll
jnp
push
mov
cwtl
inc
repz
sbb
mov
push
cwtl
incb
push
cld
xchg
mov
pop
xchg
cmc
fdivs
and
fs
sbb
shl
mov
add
daa
fisttps
sbb
iret
push
repnz
in
sbb
fs
and
adc
dec
sub
lock
add
in
fnstsw
adc
imulb
sbb
out
xor
mov
sbb
push
or
mov
pop
and
test
ljmp
fidivrs
add
imul
test
clc
cmp
fwait
ret
adc
rcr
insl
jl
std
divb
jmp
pop
in
adcl
mov
inc
js
mov
add
jg
push
push
fdivrl
lret
sbbb
in
sbb
sarb
ss
cwtl
mov
iret
jnp
xchg
sub
and
mov
mov
push
jp
xlat
dec
mov
jae
xor
adcl
ljmp
inc
or
divb
add
sahf
mov
pop
mov
ret
clc
les
rcll
pop
and
bound
dec
pop
dec
mov
ljmp
iret
inc
push
loope
jmp
cmp
mov
cmpsl
ljmp
mov
jae
jb
mov
mov
push
adc
dec
cmpb
xchg
pop
ja
jmp
aad
push
lea
or
inc
insb
shl
popa
stos
sub
or
negl
mov
push
pop
mov
outsb
inc
or
movsl
mov
xchg
popf
and
xor
addr16
pop
fnstcw
dec
out
add
or
jne
xchg
and
jns
mov
loope
ror
xchg
imul
pop
enter
ss
mov
xchg
arpl
push
cmp
sahf
test
call
ret
rcl
fisubrs
lods
or
out
fsubrl
or
data16
xor
in
xchg
leave
add
mov
aad
aas
inc
cmc
and
loop
lods
pusha
inc
fistl
or
mov
mov
pop
scas
insl
cmp
xor
lea
jmp
das
subb
mov
xor
and
jle
jge
jle
jb
cld
clc
int3
aas
insl
stos
mov
jp
hlt
fadds
out
fmuls
mov
jo
in
dec
push
and
jp
cmc
ss
out
push
pop
mov
xchg
add
shl
fcmovb
loope
push
ja
pop
xchg
pop
mov
or
cmp
xchg
xchg
je
push
sti
lods
jb
add
lcall
pop
mov
jae
adcb
insl
jns
sub
pusha
cmp
rorb
adc
sub
or
adc
xchg
out
test
push
mov
outsb
std
arpl
lahf
jo
inc
dec
in
xchg
or
cmp
mov
fdivl
dec
in
lea
jmp
mov
scas
push
mov
pop
out
test
adc
or
mov
arpl
xor
mov
inc
rcrb
inc
out
push
add
rol
jns
ds
jecxz
ljmp
lds
pop
dec
xlat
sbb
adc
xchg
cmc
mov
add
push
out
mov
orb
xor
or
jno
loopne
and
push
scas
aaa
push
jecxz
sbb
mov
cld
push
mov
push
pop
or
jb
push
pmovmskb
sbb
xor
nop
outsb
pop
push
adc
nop
andb
pop
jle
cmp
xor
dec
dec
pop
jmp
lahf
mov
imul
pop
mov
out
loopne
adcb
pop
dec
mov
xchg
fld
jmp
push
xor
test
or
xchg
fcoml
popf
cmpsl
stos
daa
rorb
add
jne
inc
and
aam
in
es
mov
fisttpll
xlat
mov
cs
jle,pt
int3
stos
cmc
inc
inc
mov
sarl
add
fisttps
dec
xor
mov
push
or
inc
rol
inc
inc
pushw
leavew
mov
jb
add
pop
dec
mov
cmp
scas
push
push
dec
mov
jae
dec
xor
mov
sbb
dec
es
subb
dec
xor
cmpsl
lret
push
shll
sub
xchg
fildl
jmp
mov
popf
xchg
lods
cwtl
fsts
leave
xchg
add
or
inc
adc
xchg
imul
inc
ja
mov
sbbl
mov
xchg
pop
or
add
mov
or
cltd
insb
int3
pop
das
fwait
pop
and
and
shrl
inc
and
js
test
and
lock
in
js
add
mov
jmp
push
lea
pop
les
mov
adc
lahf
and
jnp
outsl
call
mov
mov
jmp
repnz
adc
aad
fcoms
cltd
mov
jge
jle
xor
sbb
sub
push
rclb
push
and
add
add
mov
fidivrl
fnsave
and
sub
rolb
test
cmp
pop
add
xchg
repnz
push
sti
in
mov
pusha
push
mov
mov
pop
cmp
cli
ljmp
das
lods
mov
cmp
jg
scas
fnstenv
inc
sti
in
inc
xchg
shll
fists
dec
xchg
pop
pushf
addr16
and
adc
stc
xchg
stc
push
out
leave
ss
cli
and
in
popa
mov
pop
les
xchg
cmp
cmp
loope
add
jge
add
dec
inc
push
test
in
jne
or
pop
test
pop
jecxz
add
xor
dec
sub
xchg
cmp
lock
in
add
dec
imull
cld
lcall
push
inc
in
lock
loop
sbb
scas
sub
jg
fstpl
int3
and
fistpll
dec
jmp
lahf
leave
fstpt
fiaddl
ret
ret
js
mov
or
jecxz
icebp
xor
sub
mov
ljmp
mov
cmp
and
mov
shl
jae
mov
dec
hlt
fdivrs
xor
push
xchg
fdivrp
lods
push
adc
cwtl
pop
pop
mov
sub
lods
mov
pop
xchg
mov
dec
out
xor
pop
inc
fsts
lahf
push
dec
sub
push
int3
andl
imul
push
adc
xchg
sbb
push
icebp
pusha
and
xorb
and
rcrl
popf
xchg
push
mov
testl
mov
insb
dec
or
lock
jp
or
mov
lock
lods
mov
daa
jno
add
cmp
or
lods
pop
jecxz
mov
mov
pop
push
add
lcall
ja
jp
push
push
loopne
xchg
mov
pop
cmp
mov
stc
cmpsb
adc
xchg
fldl
out
mov
jl
stos
inc
ret
rcr
xchg
mov
iret
xor
push
test
fisubrl
adc
nop
leave
scas
adc
inc
and
fidivs
sub
sub
add
mul
andl
adc
ljmp
out
push
or
add
popf
add
sbb
pop
dec
push
pop
mov
or
out
mul
add
mov
ret
imul
lret
ss
pop
cmp
xchg
les
xor
aad
jecxz
jb
mov
mov
mov
mov
add
push
aam
insl
in
sbb
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
lods
and
xchg
jno
jno
add
lar
jle
jge
jle
sub
pop
outsb
repnz
xchg
shr
lds
cli
mov
ret
cmpsl
push
loop
insb
dec
insb
cmpsl
add
loop,pt
repnz
aas
lds
push
sub
jp
jnp
and
jmp
stos
in
push
ds
test
inc
xchg
mov
popl
or
cld
adc
mov
cs
adc
outsb
push
cmp
daa
das
mov
push
es
push
inc
cmp
push
popf
subb
addr16
outsl
jae
or
cmpsb
ret
lock
ljmp
and
mov
cmp
fwait
iret
mov
or
xor
outsb
cwtl
xlat
mov
ds
mov
ds
jo
out
push
xchg
mov
sahf
mov
fists
test
movsb
mov
cmp
push
cmpsb
ja
push
and
cmp
xchg
lock
mov
das
jg
or
sbb
add
or
mov
pop
xchg
inc
stos
roll
or
push
cmc
scas
into
xchg
addl
add
xchg
adc
fcompl
adc
jle
arpl
sub
mov
hlt
dec
leave
add
mov
ret
mov
cmp
out
fs
jle
sbb
pusha
repz
lret
hlt
sahf
mov
jb
test
and
lcall
sbb
jg
sbb
inc
in
and
es
push
fs
outsl
in
pusha
jo
mov
fnsave
pusha
lret
out
push
fldcw
sbb
mov
mov
xchg
jo
add
cld
call
adc
pushf
mov
sbb
adc
xchg
out
jp
sbb
cmc
jmp
addr16
sub
or
pop
dec
dec
push
pop
jbe
stos
clc
movsb
int3
dec
ret
roll
push
sbb
daa
jnp
mov
fsubs
je
push
mov
enter
sahf
ss
adc
ja
shll
adc
call
lahf
sti
std
cmp
test
aaa
pop
std
xor
inc
push
in
fwait
js
sbb
mov
addr16
inc
int
mov
stc
add
fimull
decb
push
fisubrl
cmp
imul
mov
or
dec
js
mov
cmp
shll
cmp
lret
addr16
or
and
mov
mov
push
cmpl
das
mov
cwtl
sub
shl
jae
pop
sbb
in
pop
mov
lret
aam
repz
out
andl
lock
out
xchg
subl
cld
jns
je
scas
fwait
sub
loopne
lea
cld
xchg
pop
xor
scas
outsb
sub
jbe
add
popa
lock
rorl
rolb
pop
hlt
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
movl
push
movzwl
mov
mov
movl
push
mov
not
mov
movl
cmp
movl
jmp
jecxz,pn
add
push
popf
dec
sub
jle
push
jg
jle
mov
or
adc
sbb
popf
aam
aas
mov
push
jmp
pushf
xchg
add
mov
xchg
ljmp
mov
mov
lock
fs
test
idivb
jle
fistl
and
notb
jge
pop
fs
cmpsl
jge,pt
rclb
jecxz
rolb
pushf
jp
xchg
mov
xchg
adc
cs
in
sub
fmul
loope
out
sbb
add
adc
xchg
in
jne
push
push
pop
jg
bound
iret
adc
call
pminsw
insl
xchg
push
and
fsts
adc
pushf
out
xchg
xor
rorl
jl
and
and
int
xor
mov
movb
lret
add
enter
loop
inc
repz
add
adc
mov
push
ret
insl
lods
in
js
and
push
and
lret
or
test
add
add
add
inc
cld
mov
xorl
xor
add
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
sub
xor
dec
add
push
adcl
pushl
or
pushl
mov
call
mov
mov
mov
mov
jmp
jmp
xor
fs
mov
sti
adc
into
and
movsl
jle
push
jg
jle
movsl
int
xchg
js
xchg
aaa
jle
test
push
inc
sti
leave
cmpb
jns
cmpsl
arpl
fld
sahf
nop
sbb
les
add
lret
xchg
mov
lods
pushf
xlat
xorl
add
sub
xchg
jl
pushf
roll
adc
stc
mov
fsincos
fwait
movl
xlat
testb
add
jbe
loopne
das
mov
xchg
inc
dec
test
mov
pushf
mov
add
mov
xchg
gs
negl
jnp
mov
push
sar
xchg
mov
cltd
imull
icebp
ljmp
cmpsb
cmp
adc
push
push
jp
andl
and
add
cmp
aam
mov
das
sbb
movsl
fstpl
loopne
daa
lock
pop
scas
jnp
lods
subb
outsl
nop
mov
inc
pop
xchg
bound
inc
jp
cltd
sub
ret
std
sarb
inc
cld
mov
xor
add
cmp
jne
mov
xor
add
jmp
xor
xor
mov
sbb
push
jg
jle
and
cmp
sub
mov
movsb
lea
pusha
popa
mov
and
mov
jo
imul
mov
add
inc
push
and
cmpsl
pop
pop
testl
fcompl
add
outsb
dec
jno
adc
mov
xor
mov
dec
scas
sti
mov
pusha
sbb
jmp
leave
xor
ss
fs
push
lret
adc
lds
test
arpl
xor
or
push
jo
add
clc
nop
mov
xor
mov
adc
in
fidivrs
ds
adc
jmp
pop
and
jo
repz
pop
jle
pop
clc
inc
cmp
mov
push
insl
or
and
int3
imul
outsl
or
insb
dec
rcrl
mov
call
inc
ja
push
outsb
lahf
mov
adc
pop
pavgw
jp
add
mov
cmpb
dec
insl
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
subl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
mov
xor
mov
add
andl
push
negl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbb
mov
xor
andl
movl
adcl
movl
subl
add
movl
jmp
cmp
jne
movzbl
mov
jmp
xchg
inc
jae
push
aaa
mov
mov
jle
push
jl
jle
sub
ds
mov
jno
sbb
repnz
lret
xchg
sbb
jle
mov
mov
pushf
inc
xor
inc
add
pop
jbe
mov
or
add
dec
adc
pop
rcll
lock
std
adcb
cmpsb
test
adc
adc
andl
out
sarl
popa
out
out
adc
sub
adc
mov
les
mov
jp
leave
bound
mov
or
loop
jmp
and
fwait
in
and
xor
xchg
inc
arpl
cmp
lods
sbb
lcall
enter
pop
mov
inc
divl
cmc
jle
in
add
clc
sub
and
out
into
push
jle
out
xchg
es
mov
xchg
stc
test
jnp
in
mov
in
jmp
fsubrl
pop
lahf
imul
add
xchg
fidivrs
xor
mov
ret
clc
xor
adc
sbb
adc
test
scas
sbbl
mov
out
cmpsl
loopne
shl
shlb
mov
paddq
outsl
dec
daa
out
dec
or
mov
cltd
dec
out
or
mov
add
fmulp
cld
loop
mov
sti
cmp
inc
mov
xchg
bound
shrl
sub
xchg
popf
popa
repnz
and
lods
mov
mov
movsb
popa
push
sub
mov
or
sub
mov
rorb
repz
xor
add
adc
adc
arpl
movsl
fidivrl
jge
xor
and
or
cmp
dec
xchg
xor
inc
test
fcoml
push
pop
fadds
outsl
add
jmp
jl
loop
push
stos
and
bound
scas
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
cmp
jne
andl
mov
sub
push
mov
add
push
jmp
es
gs
test
mov
jle
lock
jo
and
push
roll
sub
fildl
push
or
les
imul
sub
out
push
cld
pop
out
add
inc
imul
pop
dec
sti
fmulp
aas
lret
dec
hlt
icebp
mov
test
xchg
lcall
push
movsl
mov
dec
stos
push
or
xchg
pushl
xchg
dec
inc
adc
outsb
out
add
jge
push
cmp
lods
sub
outsl
push
test
sbb
loope
addr16
mov
sbb
fdivs
shrb
xor
and
xlat
in
clc
mov
jp
pop
shrl
xchg
clc
je
fstps
or
pop
mov
sub
loope
ja
sbb
rorl
mov
dec
pop
insl
out
shr
sbbl
mov
push
xchg
add
mov
push
nop
push
insl
imul
std
cltd
leave
mov
cld
test
xchg
scas
fs
or
sarb
adc
and
fcmovne
xchg
cmp
or
in
imul
pop
inc
sub
js
mov
enter
sub
scas
add
sub
popf
xor
sahf
sbb
add
pop
mov
stc
ljmp
xor
lcall
pop
dec
sti
add
fmul
mov
enter
pop
xchg
xchg
push
sbb
push
mov
pop
sub
testb
mov
jne
sub
fwait
fs
add
pop
push
inc
mov
or
daa
fsubrl
xor
mov
es
add
lret
test
mov
lahf
xor
jmp
shld
or
cmp
dec
inc
shll
bound
in
xor
enter
cli
in
jge
call
incl
cmpl
jb
jmp
jmp
lds
imul
scas
jle
push
jl
jle
inc
sbb
mov
adc
push
adc
pushf
cmpsb
xor
pop
aam
rclb
mov
fidivrs
pushf
gs
sti
xchg
mulb
adcl
mov
jle
sbb
sub
jmp
aaa
ffree
and
sbb
or
es
add
xchg
xorl
adc
xchg
dec
add
cmp
lret
ret
push
add
int
mov
lret
mov
or
jp
jecxz
mov
in
shll
cmpsl
imul
insb
xchg
outsl
pop
inc
mov
inc
mov
push
cld
cmpb
cmp
vhsubpd
sub
je
sub
out
scas
mov
push
and
dec
fbld
xchg
mov
and
cltd
and
imul
ficoml
fisttpll
cmp
jo
test
cltd
mov
mov
loope
fwait
xchg
adc
sub
cmp
jo
adc
push
jnp
xor
sbb
add
out
sub
push
push
dec
and
lds
xor
fld
jnp
mov
cmp
aad
sub
adc
aaa
movaps
out
jo
sub
inc
add
lock
imul
lcall
gs
mov
roll
ds
sub
bnd
add
adc
into
pop
lcall
sbb
lret
test
xchg
pop
inc
cld
xchg
inc
or
test
mov
mov
jp
push
ret
lgs
test
pop
pop
mov
inc
int3
vmovd
dec
ret
xchg
pop
mov
add
and
add
lock
adc
shl
sbb
lahf
movsb
out
adc
jp
inc
movsl
adc
inc
push
mov
mov
adc
mov
mov
andb
inc
ds
testl
push
out
dec
rol
adc
jmp
test
add
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
jmp
push
mov
jno
scas
out
lds
lahf
lods
jle
push
jl
jle
sti
gs
adc
fdivrs
sub
sti
mov
aaa
loopne
push
mov
xchg
cmp
mov
ja
push
fs
orb
js
inc
xchg
and
xchg
xchg
mov
lcall
adc
lahf
test
mov
and
gs
pop
ret
xchg
shr
shr
cmpsl
and
jae
popf
lret
inc
inc
jnp
jno
in
lea
adc
shl
add
cld
cld
mov
lea
inc
fimull
xchg
or
mov
lcall
nop
push
mov
daa
xchg
add
loop
mov
add
jne
add
scas
in
loope
pop
xchg
out
and
and
xor
stos
femms
lea
pop
xlat
loopne
jle
mov
push
in
iret
hlt
jp
mov
adc
sub
dec
mov
pop
cmp
jae
fisttps
nop
sbb
out
sbb
lods
adc
mov
jne
dec
cmpsb
sub
rol
dec
rcr
inc
jle
aaa
scas
xchg
pop
jbe
inc
mov
pop
ss
mov
inc
jbe
cld
inc
pop
dec
push
mov
rorl
lahf
jae
mov
dec
lcall
pop
pop
inc
xor
gs
pop
dec
pushf
mov
sbb
mov
pop
mov
outsb
lret
jg
testb
xchg
pop
pop
sub
cmp
inc
cmc
test
fsts
mov
mov
aas
sub
and
sbb
xor
movsl
and
cmp
repz
jb
xchg
adc
adc
loope
push
inc
ss
in
xchg
divl
imul
mov
sarl
inc
sarb
jmp
sbb
sarb
add
pop
leave
ret
push
mov
push
movl
push
xor
movl
jmp
lcall
push
inc
push
dec
movsb
or
jle
jl
jle
out
fwait
aam
mov
adc
xchg
vpermil2pd
xor
pop
sahf
sarb
sbb
xchg
fisttps
jns
repz
cmp
sbb
daa
mov
insb
loope
adc
int3
out
and
clc
fidivrs
lahf
addb
clc
sbb
lock
lds
bound
pop
add
ljmp
into
adc
lret
testb
testb
hlt
xor
shrl
notb
dec
sbb
cmp
sti
fs
cmp
xchg
lcall
pop
xorb
pop
and
sub
mov
mov
adc
sbb
iret
out
add
jecxz
mov
fsubl
lds
cmp
or
cmp
lret
scas
xchg
sbb
sub
in
cltd
cmp
lds
rorl
pop
pop
mov
pop
in
shll
repnz
aad
imul
sbb
jae
ss
clc
movsb
stos
mov
xorb
mov
leave
in
rcll
ficoml
jo
cwtl
sbb
jecxz
pushf
cmp
mov
push
add
sub
xchg
and
mov
push
or
loop
hlt
lret
lea
mov
cmc
or
testl
decb
mov
mov
in
fwait
sahf
and
lcall
outsl
dec
sahf
xlat
arpl
rclb
inc
cmpsl
mov
je
xchg
pop
sub
out
pop
or
jge
notb
dec
out
sbb
pushf
repz
in
xlat
pop
adc
cmc
pop
pop
in
repz
lds
jb
mov
push
and
jg
dec
test
inc
add
fsubl
test
cli
sub
enter
lahf
inc
pop
aaa
push
cmpb
into
dec
xchg
jge
xchg
fs
jle
dec
and
pop
repnz
inc
fidivrl
inc
inc
mov
es
inc
and
rep
lock
loope
aas
adc
push
fnsave
pop
xor
add
fimuls
cmpsb
leave
pop
loop
pop
ret
into
mov
cltd
xchg
and
test
lcall
fstps
arpl
sub
dec
or
push
cmp
fidivs
sub
xor
fxtract
jg
enter
imul
push
xchg
cmpsl
mov
out
mov
sub
mov
inc
cld
xor
daa
aaa
inc
add
add
mov
addl
jmp
insb
xchg
xchg
in
or
andl
jle
jl
jle
psubsw
pop
sub
mov
sbb
mov
sbb
es
imul
mov
jne
sbb
loop
dec
mov
pop
adc
mov
inc
inc
adc
leave
mov
cmp
test
shrl
add
mov
jb
mov
addl
and
and
inc
popf
out
es
test
outsb
sub
or
pop
sahf
sahf
insl
jle
imulb
cwtl
fmul
clc
es
jge
aas
daa
sbb
sub
popa
add
add
or
rcll
add
and
fcmovnu
std
adcl
xchg
cs
mov
daa
int3
fnstsw
mov
xchg
xlat
addr16
pop
xlat
xchg
adc
jae
lahf
pushf
decl
mov
into
sub
gs
seto
js
and
adc
xchg
inc
and
xchg
pop
jecxz
inc
aaa
jns
jae
jne
sbb
sbb
in
in
sub
adc
outsl
pop
call
jle
roll
cmp
mov
adc
aaa
cmp
decl
inc
mov
hlt
jbe
outsl
mov
sbb
daa
jno
arpl
lahf
dec
xor
ret
mov
outsb
fdivl
cld
fdivrs
sahf
movsl
sti
push
icebp
inc
lcall
jb
or
cltd
test
mov
pop
decl
je
repnz
sbb
or
lahf
add
xor
scas
pusha
rcrl
dec
mov
sar
xchg
pop
mov
jb
inc
pop
fs
push
icebp
js
mov
icebp
push
dec
jne
movswl
ss
mov
mov
icebp
pop
aam
add
enter
aad
dec
cltd
fwait
lods
push
paddw
test
xchg
or
adc
shlb
movsl
mov
mov
lds
enter
dec
ss
mov
xchg
loope
out
call
loope
in
sbb
push
push
jp
gs
lods
mov
pop
shlb
int
jge
inc
xor
jae
inc
inc
movsl
inc
sub
repz
pop
andl
adc
xor
shl
insb
xor
lock
dec
les
mov
pop
sub
dec
pop
cmpsl
jns
aas
mov
repz
mov
aaa
sahf
pop
mov
sub
ljmp
xor
dec
cmp
add
or
outsl
jno
mov
clc
ljmp
ja
inc
add
or
adc
mov
xor
xor
xor
mov
jmp
mov
jno
jb
inc
pop
outsl
xchg
jle
lods
jl
jle
andb
aam
ret
pop
mov
sahf
add
sub
loopne
pushf
sahf
jo
mov
sub
ds
dec
xchg
pop
leave
in
inc
loope
add
dec
jae
notb
push
repnz
push
stos
dec
xchg
jno
add
ret
and
sub
pop
inc
add
lret
les
pop
ds
cld
das
scas
sub
mov
mov
xchg
cmpsb
dec
pop
enter
xchg
stc
mov
pop
jns
loop
sub
lock
inc
mov
xchg
int
int3
int
adc
das
lods
dec
leave
movsb
add
es
inc
mov
mov
shll
cli
lds
insb
mov
flds
lods
fsubs
mov
imul
cld
adc
lock
jnp
or
fadds
mov
loopne
add
popa
push
fwait
pop
rcll
push
cmp
add
sbb
sbb
aaa
test
mov
cmp
xor
test
push
aad
rcrb
sahf
fdiv
or
test
sbb
lods
cmp
aad
sub
xor
scas
mov
push
fildll
pusha
jne
inc
dec
lret
dec
jmp
test
jo
pop
push
adc
stos
push
fimull
push
pop
cwtl
cmp
imul
push
shlb
lock
clc
insl
aad
dec
repnz
xchg
inc
rorl
imul
clc
push
ljmp
jae
and
add
jle
nop
pushf
cmp
mov
test
jmp
inc
pop
enter
outsl
and
orb
pop
int3
pop
in
and
mov
clc
dec
mov
jl
inc
ret
adc
out
dec
cmp
insl
insb
roll
xchg
mov
xlat
sub
pop
add
jg
cmp
lcall
jns
cld
inc
sub
cs
mov
enter
dec
cmp
aam
ds
std
ret
data16
mov
or
jo
je
sti
xor
out
mov
std
popa
mov
jl
xchg
lds
enter
test
stc
add
in
fisttpll
int3
add
int
add
sbbl
or
mov
mov
and
call
lahf
or
roll
cltd
dec
mov
mov
jne
aam
out
pop
ficoml
scas
and
push
or
ret
imul
les
aas
add
add
jmp
lock
arpl
sub
scas
ret
rorl
jle
lods
jl
jle
sbb
mov
lret
cmpsb
pop
dec
pop
stos
and
imul
std
fldl
test
inc
stos
pop
and
sbb
fstps
jmp
sti
je
xchg
addl
gs
mov
or
shl
insl
lods
out
int3
dec
loope
mov
and
fstpt
std
cmp
xor
clc
xorb
inc
inc
push
and
pop
xchg
mov
fisttpll
iret
sbb
dec
addr16
fst
pop
jl
stos
xlat
push
xchg
xchg
jmp
cld
int
and
jmp
out
loopne
faddl
sti
inc
jecxz
imul
mov
and
xor
je
repz
push
out
enter
mov
mov
inc
adc
push
movsl
sti
xor
fcomp
sbb
jl
mov
push
add
movsb
shrb
mov
cs
or
ret
jge
adc
imul
and
sti
shlb
sub
lods
icebp
lahf
push
add
pop
cmp
fwait
lcall
cwtl
dec
push
dec
mov
mov
dec
push
cmpsb
out
fistpll
cmc
adc
rcll
enter
mov
xchg
add
nop
idivb
gs
decb
idivb
jb
clc
data16
lret
jo
stos
mov
les
and
pop
test
lret
cmp
mov
leave
insb
sbb
mov
or
xchg
mov
ja
jnp
mov
push
insb
pop
mov
cmp
imul
rol
push
pop
cs
leave
mov
shlb
mov
pusha
idivl
aaa
push
cmovnp
xchg
pop
subb
ja
inc
popa
out
jmp
sbb
gs
fxch
sbb
adc
mov
cmp
mov
lea
roll
push
scas
les
sub
jl
hlt
test
int3
xchg
inc
imul
ja
add
add
iret
mov
mov
add
mov
mov
push
sbb
xchg
ljmp
add
xchg
mov
jecxz
icebp
mov
lds
sahf
sub
or
in
test
stc
or
fucomi
outsl
pop
pusha
lahf
push
jns
sbb
sub
inc
stos
jno
fldl
repnz
faddl
mov
call
cmpsl
sbb
pop
scas
sub
xor
cmp
cmpsl
shl
imul
mov
movl
cmp
jne
mov
sbbl
jmp
inc
sbb
test
add
das
pop
idivl
jle
iret
fstps
fwait
pop
mov
int
and
movsb
movb
addr16
arpl
ficomps
push
mov
repz
test
jmp
mov
aas
mov
adc
leave
xor
jl
cmc
aad
inc
mov
in
mov
fnstenv
inc
xor
sbb
insl
out
test
stos
cmp
pop
jbe
lcall
fidivrs
dec
pop
movsb
mov
js
xor
jnp
cwtl
or
imul
fstpt
outsl
push
in
sbb
add
push
mov
xor
dec
inc
insb
ds
push
jns
push
enter
sub
dec
decl
add
lahf
mov
ds
mov
stos
and
cli
mov
sbb
in
mov
je
pop
sub
aad
int3
or
adc
adc
cmp
xor
sbb
ljmp
inc
and
scas
push
or
repnz
lea
pop
mov
dec
lahf
and
popa
cmp
mov
movsb
cs
xor
mov
adc
lret
aas
call
into
pop
fidivrs
dec
inc
aam
hlt
or
rcll
or
jmp
daa
popa
or
jo
dec
sub
popf
out
mov
and
movsw
ficomps
cltd
ljmp
xchg
loop
push
pop
sub
ficoms
mov
lods
std
pushf
loop
and
xor
jg
adc
lahf
cwtl
inc
jg
call
push
dec
pop
dec
fs
mov
lods
mov
bound
dec
adc
jnp
jle
mov
daa
imul
shl
sbb
jp
shrl
test
loopne
faddl
sahf
and
dec
dec
pop
shrl
lret
cli
mov
mov
int3
mov
aam
mov
dec
and
movsl
in
mov
and
lcall
push
jg
mov
fisttpl
pop
mull
pop
fildll
sarl
lahf
add
sbb
xchg
or
loop
jo
xchg
jmp
lcall
rcll
push
orb
add
push
mov
movsb
rcl
cmp
sbb
sti
rolb
inc
scas
mov
fs
les
sbb
and
dec
out
cltd
add
lods
sbb
aas
push
push
imul
mov
movl
xor
xor
add
subl
add
imul
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
xor
push
addl
mov
or
mov
jmp
jne
dec
cs
xchg
or
and
jl
jle
jne
lahf
int
pop
pop
mov
clc
mov
cld
inc
pushl
repnz
dec
sbb
sub
in
xor
add
in
lahf
and
aaa
pop
mov
aad
mov
addl
push
mov
ds
pop
sub
mov
insb
jnp
xchg
ljmp
aas
mov
jne
sbb
scas
lcall
cmpsl
std
xchg
and
in
push
push
xchg
in
clc
imul
clc
pop
add
sub
jl
jae
mov
addr16
push
adc
in
rclb
cwtl
add
mov
push
ja
or
jae
or
mov
xor
neg
xorl
data16
xor
jbe
sub
cld
inc
dec
pop
dec
je
cwtl
leave
pusha
xor
mov
xor
mov
mov
in
sti
jne
jge
push
push
insl
ss
mov
aaa
mov
push
pusha
cmp
das
inc
dec
mov
shlb
xor
or
movsl
test
mov
fcomi
divl
seto
imul
cmpsl
xor
mov
into
jo
sub
mov
pop
scas
adc
mov
xor
jne
inc
mov
inc
add
xchg
movb
or
mov
lret
imul
inc
jmp
ljmp
dec
or
imul
pop
mov
mov
scas
fwait
jae
cwtl
xchg
push
pop
cmp
add
mov
cmp
sbb
cmp
inc
popa
push
popa
and
test
mov
scas
ret
cli
pop
pop
ret
cmp
mov
pop
cmp
lock
jo
push
lret
dec
jno
mov
leave
jmp
xor
push
lret
call
cld
cmp
adcl
lds
test
popa
jae
push
xor
add
rcrb
dec
shrl
repz
or
shrb
and
popa
lahf
xor
pusha
dec
jae
loope,pn
or
cmp
jmp
and
psubb
in
clc
push
sub
cld
and
movsb
movsb
loop
cmp
sbb
movl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
or
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
xor
mov
sbb
xor
mov
adcl
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
jmp
out
adc
adc
ja
orl
icebp
jmp
mov
jle
dec
xchg
jge
pusha
cltd
in
jo
xchg
push
leave
xchg
arpl
adc
mov
mov
dec
adc
inc
pop
pop
std
and
adc
repz
nop
inc
xorl
mov
out
or
lods
xor
push
loope
stos
fs
gs
inc
lods
ret
xchg
and
je
aam
je
mov
sbb
fs
add
mov
inc
push
mov
mov
or
in
pop
lret
movsl
xchg
xor
cltd
dec
fs
imulb
shl
mov
jge
stos
fisttpll
fiadds
mov
pop
hlt
aam
xchg
xor
loopne
mov
mov
sbb
inc
int
outsl
enter
outsl
push
add
movsl
ret
js
or
dec
mov
xchg
pop
daa
daa
or
jle
mov
cld
std
add
cli
out
and
xor
pushf
mov
sub
xor
and
lods
scas
lret
mov
ficomps
in
mov
or
mov
fisttps
lds
adc
pop
sub
add
mov
add
inc
adc
sbb
mov
stos
ds
mov
jp
fistps
xor
pop
aam
movups
mov
pop
gs
test
push
add
and
dec
arpl
sub
iret
dec
mov
jb
pushf
rol
adc
push
sbb
jg
outsl
sbb
fcmovne
data16
imul
arpl
fists
addr16
and
xchg
lcall
xchg
cmp
mov
ficoml
sub
fimuls
inc
negb
loopne
jnp
and
mov
pop
jo
lcall
mov
lret
push
xchg
out
xchg
jge
fmuls
pusha
insl
out
shl
fs
add
push
insb
push
lods
ret
dec
mov
mov
ja
loopne
icebp
lea
aad
sbb
leave
movsb
pop
ljmp
adc
test
sub
nop
sbb
inc
mov
cwtl
dec
xor
jns
int3
sbb
loopne
pop
es
outsb
or
dec
incl
sbb
ljmp
mov
test
jno
arpl
xor
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
xor
mov
movzwl
sbb
mov
mov
xor
andl
mov
add
andl
movzwl
xorl
mov
movb
adc
lea
mov
adc
mov
mov
xor
sub
adcl
mov
xor
xor
sbb
jmp
add
mov
cmpsl
rcr
lahf
xchg
jg
jle
pop
lea
fwait
test
orl
adcb
loopne
mov
insl
pusha
addb
mov
inc
icebp
faddl
test
mov
movsl
scas
pop
fbstp
jmp
mov
pop
into
xchg
mov
test
subl
aad
xchg
divps
mov
sub
cmp
fistl
lods
sbb
jmp
dec
pop
xchg
cmpsb
mov
loop
orl
loopne
movsb
xorl
out
bound
jle
in
insl
or
rol
or
sub
shll
call
mov
rclb
pop
iret
mov
aas
xchg
outsb
gs
dec
jbe
push
loope
push
adc
mov
cmp
lahf
out
pushf
sbb
mov
mov
and
mov
daa
movsb
outsb
adc
mov
insb
cwtl
pop
sub
call
adc
int3
shlw
mov
pop
pop
mov
or
sbb
mov
test
sub
in
inc
cli
sub
mov
sahf
mov
pop
out
pop
jge
mov
movsb
inc
scas
ljmp
xlat
sbb
daa
fiadds
cld
shr
mov
jnp
jg
out
ds
fcoms
test
rol
mov
repnz
jno
out
adc
jo
xchg
idivb
jp
sbb
or
ljmp
rol
inc
clc
xor
movl
mov
orl
mov
movl
push
xor
or
mov
add
jmp
mov
mov
movl
inc
movl
cmp
movl
jb
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
addl
xor
sbbl
add
movl
cmp
jmp
adc
in
in
jno
aad
dec
add
xchg
mov
jle
jg
jle
push
jmp
xlat
ljmp
es
jle
je
faddl
jecxz
mov
sahf
adc
sub
das
gs
mov
fsub
pop
jb
push
into
inc
test
dec
icebp
je
jl
mov
or
xor
add
in
mov
and
adc
or
mov
pop
mov
mov
pop
and
and
jnp
push
inc
and
addr16
push
jmp
jg
adc
sub
fs
sbb
decl
std
add
int
incb
xchg
imul
sbb
pop
cmp
mov
pop
inc
adc
xor
sahf
cltd
dec
push
lcall
in
push
jge
cmp
pop
sbb
loop
cmp
sub
xchg
jae
jle
sbb
insl
xor
out
jno
xchg
or
cltd
mov
push
adc
or
or
std
jl
subl
jl
sub
xchg
testb
out
sbb
clc
popf
mov
jge
lds
fwait
fs
cmpsb
js
scas
testl
std
stos
sub
mov
nop
out
adc
mov
ret
and
nop
mov
outsl
outsl
lds
xlat
je
xor
add
sub
push
sub
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
xor
jmp
mov
ja
jne
mov
insl
push
push
push
push
mov
cmovne
icebp
jg
jle
pop
ljmp
mov
iret
jp
cwtl
shrl
xchg
stos
ret
sub
sbb
push
cli
cmp
hlt
jae
mov
mov
outsl
mov
jg
mov
xchg
xchg
sbb
mov
or
out
ss
leave
test
loop
lret
jl
shll
popf
jg
scas
push
jo
dec
es
je
mov
pusha
in
mov
nop
daa
or
ret
pop
and
das
sub
clc
dec
fxch
jns
fwait
xor
movsl
or
sbb
das
sbb
sub
pfsubr
xor
cmp
push
sub
jo
adcl
inc
jle
adc
adc
idivl
mov
inc
insb
cs
call
jle
lods
cmp
mov
leave
leave
fstpt
andb
adc
mov
sbb
jae
jno
icebp
and
call
and
mov
xchg
sub
sbb
xor
aad
aas
adc
jmp
pop
fidivl
dec
test
scas
mov
xor
int
xchg
xchg
sti
out
stos
push
cltd
ficoml
dec
leave
popa
sbb
mov
add
mov
icebp
xchg
adc
mov
imul
fwait
stos
repz
addl
sbb
cltd
inc
lods
jl
loope
out
mov
push
pop
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
jmp
mov
adc
adc
imul
adc
and
icebp
jg
jle
fdiv
inc
jl
inc
push
out
mov
iret
jmp
rcrb
out
or
add
xchg
lcall
movsb
xchg
sti
in
out
mov
or
fsubrp
filds
outsb
jp
ret
sub
push
adc
inc
adc
or
xchg
mov
loope,pt
inc
push
mov
dec
cmpsb
popa
jne
push
lods
bound
leave
push
xor
out
lahf
mov
inc
movsl
test
sahf
jp
stc
outsl
test
cmp
aaa
dec
cmp
mov
das
gs
xchg
jl
jl
sub
cmp
pop
jnp
mov
lods
shrl
imul
mov
aad
and
dec
inc
cmpsl
stc
adc
pop
das
dec
and
rclb
movsl
cmp
dec
mov
jp
or
inc
pop
fwait
bswap
sbb
mov
subl
cmpsb
test
inc
mov
movsb
std
jmp
pop
push
push
nop
push
mov
arpl
push
mov
aad
sub
cltd
jmp
lds
movsl
or
sti
push
cmp
insb
sbb
cmp
jbe
and
stc
scas
adc
jg
pop
and
hlt
adc
leave
jg
out
int3
jb
sbb
xchg
popf
into
loope
insl
cmpsl
jb
jecxz
pop
mov
jbe
and
repz
push
notb
push
jo
pop
hlt
sti
ret
mov
mov
popf
lahf
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
jmp
sub
sub
test
pop
cld
add
in
add
jle
jg
jle
adc
outsl
fisubrl
jecxz,pt
lods
pop
inc
stos
test
jmp
or
jnp
cmp
push
lods
push
stos
js
lret
and
inc
int3
inc
jle
data16
mov
int3
pop
insl
in
mov
icebp
jmp
shrb
sbb
das
push
inc
stc
pop
insb
pop
xchg
sbb
pop
or
cld
jmp
stc
inc
push
rol
ret
mov
mov
xlat
push
mov
inc
mov
icebp
ret
and
or
and
ja
repnz
sub
jle
mov
inc
add
popa
pop
outsl
mov
ret
pop
add
ret
cli
int
sub
pop
lock
bound
loope
or
xchg
iret
dec
or
mov
ret
rorb
ljmp
rorl
mov
enter
push
and
data16
cltd
out
into
push
xchg
mov
cmpsb
fs
inc
movsb
jo
xchg
inc
lcall
shr
or
js
sahf
push
xor
push
bound
rcrb
xchg
push
or
mov
xchg
jb
fisubrl
loop
adc
jg
sbb
fildl
das
aaa
lods
jno
insl
mov
icebp
inc
inc
cmc
lret
and
popf
add
les
dec
imul
push
sti
cmpsb
fistpll
test
stos
sti
orb
or
pop
cld
decl
jmp
ljmp
jo
fidivs
leave
mov
sub
inc
jle
icebp
jg
jle
in
sub
adc
pop
adc
push
gs
jmp
or
sbb
adc
out
lock
shlb
mov
dec
mov
cmpb
mov
ds
scas
mov
stc
cmpsb
push
push
push
int
fildl
nop
xchg
mul
loopne
and
enter
nop
jae
dec
xchg
or
lret
cmp
inc
les
fcomi
dec
xor
pop
popf
aam
cmp
sub
jp
lods
int3
push
push
mov
arpl
lahf
lcall
pop
adc
xor
fimuls
ljmp
fsubr
orb
test
adc
ja
hlt
cmp
cmc
aaa
fildll
inc
scas
add
nop
stos
fs
loopne
popl
push
pushf
fdivrl
dec
sub
test
dec
push
fdivrs
out
or
aaa
mov
mov
xchg
rcll
fsubs
or
daa
out
or
push
in
and
and
adc
imul
and
rcr
push
in
cmpsb
mov
mov
test
or
jns
cltd
jne
clc
jmp
out
ret
in
adc
enter
xchg
cmp
pop
or
pusha
lods
lds
xor
imul
xchg
pop
sbb
fcmovne
loop
mov
add
mov
pop
leave
ret
push
mov
push
neg
movl
mov
adcl
mov
sbbl
add
xor
cmp
movl
jne
and
mov
xorl
mov
add
jmp
jo
sbbl
roll
push
sbb
add
jle
jl
jle
inc
sub
repnz
sub
fadd
dec
shrl
aas
aas
and
lcall
add
das
jge
das
adc
adc
or
push
imul
push
lock
jecxz
mov
psubd
lds
mov
mov
pop
imul
out
shr
mov
mov
sub
mov
cmpsb
or
neg
jo
cld
and
inc
cmovge
sti
lret
lret
imul
and
ficompl
or
sbb
addr16
icebp
movsb
in
jo
xlat
pop
shll
test
sahf
fsubrl
arpl
into
cs
divl
mov
sub
aas
pop
push
movsb
inc
punpckhdq
sub
ret
jge
fisubrs
xchg
add
iret
xchg
sahf
into
add
push
jge
xchg
adc
cli
xor
jb
pop
aad
js
mov
xchg
xor
cmp
jno
pop
inc
inc
add
js
cmc
mov
xor
xor
mov
mov
daa
mov
sbb
jle
lock
data16
mov
mov
sub
iret
pop
lahf
je
inc
push
sbb
in
ja
out
nop
in
ljmp
aas
jns
pushf
dec
ret
inc
orps
bound
push
cmpsb
mov
push
bound
push
or
ljmp
mov
mov
xchg
adc
mov
mov
out
call
mov
sbb
in
in
pop
test
sub
mov
sbb
adc
xchg
sbb
mov
fdivs
in
or
jne
push
stos
rolb
jge
or
ret
sbb
mov
mov
repnz
dec
cmp
orl
repz
cmpsl
and
addr16
pop
ja
jecxz
xchg
std
fldt
mov
pop
lret
mull
int3
sti
mov
mov
cwtl
popf
push
add
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
jmp
pop
pop
dec
pop
dec
xor
outsl
aam
popa
jp
and
jl
jle
pop
mov
scas
push
ror
fcoml
fdivrs
mov
mov
iret
into
inc
mov
rcr
inc
in
jle
push
lds
jae
cmpsb
xchg
js
push
int
push
repz
cs
xor
fbld
cmp
aas
fwait
addr16
adc
inc
insb
add
mov
setae
subb
ret
push
sub
in
dec
mov
fcomps
xlat
xor
mov
fnsave
xor
xchg
and
ja
test
fstpl
ljmp
sarb
lahf
insl
jnp
xchg
push
push
mov
or
in
data16
fwait
in
dec
lret
mov
nop
push
inc
cmc
pusha
add
add
xchg
rorl
mov
dec
sbb
pop
int3
stc
add
ret
cwtl
mov
aas
dec
or
sbb
in
add
adc
xor
ja
xor
loope
cmp
stos
clc
push
mov
lcall
jno
dec
sub
inc
test
pop
add
mov
fwait
mov
movsb
mov
loop
or
cmp
outsl
adc
pushf
pop
cld
or
xchg
mov
pop
loope
xor
loopne
mov
sub
clc
subb
loop
ss
jmp
mov
mov
sbb
lods
xor
insl
mov
mov
sbb
fwait
aam
xor
mov
popa
or
add
repz
add
imul
xlat
add
scas
or
clc
xchg
subl
xor
push
decb
fcompl
stc
ss
adc
insb
lret
aas
xchg
xchg
aas
aaa
imul
or
addr16
pop
dec
in
addr16
fs
in
cmp
xchg
cmp
xchg
pusha
mov
and
lock
jns
cwtl
mov
mov
ret
push
rcr
jbe
rcl
mov
fwait
iret
int
out
loope
push
push
mov
mov
add
jmp
mov
imul
jmp
adc
dec
jle
adc
inc
loope
and
mov
mov
mov
mov
or
aam
cmp
jecxz
fidivrl
xor
test
loope
jmp
jecxz
out
jle
ja
add
xchg
or
les
jl
or
jnp
andb
push
pop
enter
sub
inc
dec
xchg
lahf
add
sbb
xlat
aad
fnstsw
cmp
xchg
rcrl
arpl
gs
inc
cmp
pop
xor
or
insl
xor
inc
xchg
and
push
mov
insb
pusha
mov
rcrb
clc
mov
stos
mov
out
loope
shrl
mov
sbb
loopne
jmp
lock
das
movsl
xchg
out
adc
xor
sub
orl
or
xchg
jp
das
and
pop
and
adc
dec
xor
mov
push
or
jge
add
iret
mov
rcll
out
or
cmp
adc
pop
inc
xchg
mov
add
int
sti
mov
incb
and
jb
xchg
sbb
push
stc
cmc
pusha
fwait
movsb
or
les
popl
pushf
jmp
adc
xlat
out
int
mov
bound
mov
cmpl
sub
loope
fmuls
loope
mov
test
out
lret
jle
ja
popa
hlt
lret
hlt
and
jge
sub
or
rcrb
arpl
lcall
and
push
or
jae
or
fadds
das
jb
out
push
dec
sbb
ret
pop
mov
repnz
mov
dec
jno
dec
sarb
lods
pop
and
dec
pop
mov
cmpsb
push
lods
out
push
orl
push
xor
pop
xlat
out
push
push
dec
pusha
lahf
ret
lahf
subl
int3
xor
imul
cmp
adc
inc
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
subb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
ljmp
add
add
add
add
add
sub
add
test
add
jp
add
add
add
add
add
add
add
jo
add
je
add
js
add
je
add
mov
add
add
push
aaa
inc
inc
js
fs
data16
jo
aas
inc
outsb
gs
je
push
je
je
inc
inc
pop
inc
push
inc
dec
push
inc
inc
dec
dec
push
inc
inc
cmp
add
pop
and
add
add
add
enter
add
add
adc
add
pop
xor
add
daa
add
mov
and
add
daa
add
pushf
add
pushf
and
add
add
add
add
add
aaa
add
push
and
add
sub
add
cmp
add
add
add
cmp
add
and
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
imul
popa
jae
push
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
fs
imul
add
imul
jb
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
mov
imul
jae
bound
push
push
imul
add
push
imul
popa
bound
add
add
outsb
dec
arpl
add
stos
add
fs
jne
jae
jb
add
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
add
popa
jb
jo
gs
add
mov
imul
imul
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
insb
outsl
jae
inc
gs
je
jo
add
add
outsb
dec
outsb
jo
je
gs
je
jo
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
push
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
adc
gs
jae
inc
inc
add
popa
insb
imul
je
add
arpl
outsl
push
push
outsb
outsl
ja
add
insb
push
imul
imul
fs
gs
outsb
je
cmp
arpl
popa
imul
outsb
add
sahf
add
push
arpl
jo
jns
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
inc
jb
ja
outsb
jne
popa
jb
mov
push
popa
bound
fs
gs
dec
jne
push
add
or
inc
gs
inc
inc
js
jno
push
gs
imul
outsb
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
push
add
je
jb
jo
add
sti
add
dec
outsb
push
arpl
push
push
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
imul
jae
addr16
add
xor
jb
outsl
dec
gs
push
add
addb
outsb
data16
popa
je
push
arpl
add
ja
arpl
add
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
inc
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
fs
outsb
jo
je
mov
inc
gs
jb
insl
gs
jb
arpl
mov
inc
gs
imul
outsl
arpl
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
imul
popa
jae
inc
add
dec
add
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
inc
gs
jns
je
insl
dec
outsb
jne
mov
ja
je
je
push
add
loope
inc
imul
outsl
ja
add
inc
jb
popa
je
push
imul
inc
add
add
popa
bound
imul
cmp
inc
push
jo
jb
add
or
push
imul
je
gs
add
add
push
jae
push
imul
arpl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
jae
popa
addr16
outsl
js
js
add
inc
gs
outsl
jo
imul
dec
add
je
outsb
jne
loop
inc
imul
outsl
ja
js
add
fs
outsb
jne
add
add
jae
popa
addr16
outsl
js
add
add
jne
insb
push
arpl
add
outsb
imul
add
inc
gs
imul
js
dec
outsb
addr16
push
add
mov
push
imul
ja
add
add
je
insb
imul
jb
les
dec
popa
jo
imul
arpl
add
fs
je
imul
dec
imul
jne
je
insl
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
mov
dec
outsb
je
jb
arpl
arpl
add
je
outsl
jne
insb
gs
insb
imul
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
je
jae
outsb
arpl
jns
je
je
add
sub
inc
push
ja
jb
jne
push
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
popa
jb
outsl
ja
jb
add
and
inc
push
dec
outsb
jne
add
imul
outsl
ja
jo
popa
je
add
mov
imul
movl
imul
gs
js
add
pop
add
je
arpl
jo
jns
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jo
imul
imul
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
push
outsb
jne
popa
imul
add
push
gs
arpl
insb
insb
dec
outsb
outsw
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
lahf
add
jo
je
push
popa
addr16
add
sub
jb
gs
push
add
add
popa
insl
gs
arpl
add
data16
je
arpl
mov
dec
outsb
jbe
insb
imul
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
arpl
gs
imul
add
inc
push
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
pushf
add
dec
arpl
imul
gs
outsb
jne
je
imul
add
fs
outsb
jne
add
add
imul
outsb
outsl
ja
gs
popa
addr16
add
cmp
push
gs
jne
jae
jb
add
je
gs
popa
addr16
add
inc
outsl
jb
addr16
jne
fs
imul
add
gs
je
inc
imul
jb
insl
push
add
stc
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
push
xor
cs
insb
add
mov
push
gs
outsl
jbe
inc
imul
jns
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
pop
add
gs
imul
bound
gs
add
xchg
imul
jne
jb
add
mov
jo
jb
popa
je
add
or
gs
jne
jb
outsb
je
imul
jns
add
cmp
dec
jo
outsb
inc
jbe
outsb
je
add
dec
add
insb
outsb
inc
add
add
je
push
dec
outsl
arpl
add
push
outsb
push
gs
js
gs
imul
gs
add
je
popa
insb
inc
jb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
int
inc
jb
popa
je
inc
jbe
outsb
je
add
movsb
add
outsb
arpl
dec
outsl
add
outsl
add
outsb
insl
popa
jo
imul
insb
add
push
insb
gs
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
jb
arpl
fs
jae
add
addb
jb
gs
imul
rolb
inc
gs
popa
je
inc
outsl
jb
popa
je
add
outsl
add
je
imul
popa
je
add
jge
push
gs
data16
gs
imul
push
add
xchg
add
outsl
bound
push
gs
insb
insb
outsl
arpl
fildl
inc
jb
popa
je
dec
popa
imul
in
push
gs
outsl
insl
insl
push
imul
add
gs
jns
je
insl
push
imul
gs
jns
je
insl
inc
imul
jns
add
add
inc
popa
fs
gs
fs
je
add
mov
jo
insb
insb
outsl
arpl
and
inc
outsb
jne
push
gs
jne
arpl
jns
gs
add
push
add
fs
imul
js
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
gs
jb
outsl
jb
outsl
fs
out
inc
jb
popa
je
push
gs
outsl
je
push
push
add
popl
inc
insb
outsl
bound
inc
insb
popa
addr16
mov
popa
imul
insb
gs
bound
arpl
add
je
jne
bound
inc
outsl
jb
popa
je
add
xchg
add
imul
outsl
dec
jne
je
inc
jns
add
inc
gs
jns
je
insl
inc
gs
jne
je
dec
dec
popa
outsb
addr16
add
test
inc
gs
imul
imul
jns
add
jl
inc
fs
je
insl
inc
add
stos
add
gs
jb
outsl
insl
insl
inc
jb
outsl
jb
add
add
jae
jb
insl
jo
inc
add
add
gs
push
inc
outsl
outsb
je
js
add
repnz
gs
je
push
popa
imul
insl
gs
add
movb
je
arpl
imul
gs
je
inc
imul
imul
jae
jne
arpl
add
add
fs
imul
add
mov
inc
gs
inc
push
add
pop
add
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
push
inc
outsl
outsb
je
add
add
imul
add
add
je
jo
outsb
inc
imul
add
or
inc
imul
push
add
insl
fs
xor
cs
insb
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
insl
add
gs
add
pop
pop
arpl
insl
outsl
fs
mov
insl
bound
outsl
ja
jae
add
add
insl
jae
pop
gs
je
add
imul
add
outsb
imul
add
arpl
outsl
imul
xchg
add
popa
insb
outsb
jne
add
add
imul
ja
jae
popa
je
add
add
jb
jo
add
out
jae
jb
outsl
insb
insb
add
add
arpl
outsl
insl
bound
add
arpl
jb
jb
add
ljmp
jo
add
add
jb
push
add
ja
arpl
data16
insl
bound
gs
add
int3
add
outsl
jb
add
add
outsl
ja
outsl
ja
jb
add
insb
outsl
arpl
add
add
jns
je
insl
add
sub
ja
jae
bound
add
add
jae
jo
imul
pop
pop
arpl
inc
imul
jbe
jo
imul
add
jne
arpl
mov
insb
outsl
arpl
je
insl
add
data16
jne
push
ja
jae
push
add
js
je
pop
add
insb
insb
outsl
arpl
add
add
je
bound
add
jb
outsb
je
or
gs
add
cmp
arpl
outsl
jne
add
add
gs
je
add
bound
popa
jb
push
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
enter
je
push
push
push
inc
push
push
cs
insb
add
push
add
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
dec
insl
popa
addr16
imul
fs
insl
popa
addr16
add
adc
inc
jb
popa
je
push
jb
jo
jb
jns
push
popa
addr16
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
dec
arpl
add
dec
inc
push
dec
xor
cs
insb
add
les
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
gs
dec
jne
push
add
popa
je
dec
inc
push
add
bound
gs
outsb
add
mov
inc
gs
gs
inc
inc
add
inc
add
je
gs
arpl
popa
jo
add
add
je
imul
jae
movl
inc
inc
add
jne
inc
imul
addl
gs
gs
inc
js
outsb
je
outsl
imul
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
add
gs
je
inc
dec
inc
imul
add
gs
dec
bound
arpl
outsb
add
je
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
je
gs
dec
gs
imul
inc
jb
popa
je
inc
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
iret
add
insb
arpl
insb
gs
gs
add
jne
fs
arpl
add
gs
je
push
outsl
insb
imul
add
add
je
jne
jb
outsb
je
bound
arpl
stos
add
gs
je
push
arpl
outsb
add
add
je
bound
je
jb
arpl
add
add
insb
arpl
imul
add
gs
je
inc
outsl
outsb
je
add
add
jne
inc
outsl
outsb
je
push
add
dec
add
je
outsl
outsb
je
popa
je
add
gs
outsl
inc
js
add
gs
popa
insb
gs
gs
outsb
je
imul
gs
dec
jne
push
add
rolb
push
gs
imul
jae
movsb
add
je
insb
je
add
jae
je
imul
dec
jb
inc
js
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
push
gs
jp
push
popa
insb
gs
gs
add
je
jb
jae
dec
jb
inc
js
mov
jae
je
outsb
add
add
je
jne
inc
add
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
push
popa
je
inc
imul
outsb
jae
outsl
outsb
inc
add
push
dec
dec
push
inc
push
dec
cs
insb
add
popa
jns
pop
je
push
imul
lcall
add
or
dec
ja
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
data16
pop
cmp
add
inc
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
cmp
inc
add
cmp
mov
inc
add
ds
add
test
push
inc
add
or
inc
add
fisttpll
ss
add
inc
inc
cli
jne
in
incb
mov
cmp
add
xchg
pushf
clc
xor
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
add
pop
dec
imul
pushf
clc
sahf
jmp
add
push
cmp
pushf
or
jecxz
inc
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
dec
dec
imul
inc
dec
dec
inc
dec
jne
dec
dec
push
imul
imul
inc
imul
insb
imul
dec
push
inc
outsl
imul
dec
dec
inc
dec
dec
sub
inc
inc
add
add
fs
addr16
add
dec
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
mov
inc
add
shll
and
inc
push
outsl
push
dec
cmp
add
in
adc
inc
inc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
jns
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
popa
push
push
push
dec
je
push
bound
push
arpl
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
js
popa
inc
push
insb
pop
ja
je
add
insb
jb
inc
push
push
inc
insb
add
jbe
push
push
dec
imul
add
in
jnp
jnp
cmc
lcall
and
pop
or
xlat
add
add
add
adc
mov
xchg
ja
push
int
je
cmc
xchg
insb
add
test
push
xchg
sub
cmp
rcrl
scas
lock
lret
test
inc
lret
rcll
adc
test
fisubrl
leave
ljmp
leave
add
or
mov
jbe
pop
sub
xchg
and
mov
pslld
into
mov
repz
sub
add
dec
lea
lret
insb
sbb
jle
jnp
jno
stos
mov
mov
out
add
andb
jle
sub
pop
shll
mov
jae
in
ja
cmpb
add
jle
mov
mov
mov
inc
push
cmp
aas
sbb
cmp
xor
fstps
test
or
shrb
pop
xchg
or
or
mov
and
and
stc
movsb
pop
ficoml
in
jle
lcall
ret
add
add
add
out
xor
int3
popf
faddp
cmp
stc
movsb
adc
inc
test
cli
mov
ss
cmp
dec
dec
aaa
or
lcall
and
test
and
push
inc
add
iret
jp
add
xchg
adc
arpl
shlb
add
xor
mov
xor
mov
xor
add
xlat
sub
pop
jg
jne
cmp
pop
gs
inc
imul
dec
adc
loopne
pop
test
pop
pusha
lret
std
push
outsb
xchg
and
and
movsb
pop
popf
mov
sbb
dec
dec
cltd
fisubrl
jg
jle
in
mov
cmp
int
sbb
mov
loop
lret
or
es
jg
lods
sbb
icebp
pop
in
addr16
into
xchg
fs
dec
sti
xchg
cmpsb
andl
sub
pop
rcrl
and
or
add
add
adc
mov
mov
push
or
mov
add
add
add
fcomps
inc
iret
outsl
outsl
std
ljmp
mov
push
and
fisttpl
push
daa
aad
add
fidivrl
sti
stc
xchg
cmpl
or
cltd
test
rcrb
jg
pop
xor
icebp
jbe
loope
push
outsl
push
movsl
cmpsb
cmc
fldcw
cli
mov
nop
mov
sahf
sub
inc
dec
scas
nop
inc
andb
outsl
jge
mov
stos
jns
popf
cmpsb
daa
pop
jno
sbb
shrl
scas
xlat
lea
data16
cmp
arpl
dec
dec
mov
ds
mov
push
push
sti
shr
addr16
std
aam
lcall
adc
aaa
movsb
cmp
ss
jae
into
daa
pusha
sub
xchg
adc
sahf
outsl
sub
dec
jo
cmp
mov
leave
pop
loopne
popa
rorb
flds
adcl
add
add
mov
roll
movsb
stos
fnstenv
add
add
shlb
outsl
jl
adc
inc
mov
jne,pt
push
xchg
cltd
inc
xor
mov
nop
in
push
dec
jno
in
adc
jmp
push
jmp
adc
mov
pop
jbe
sub
sbb
aam
sub
cmp
mov
ja
lret
push
mov
xchg
shr
mov
jnp
outsb
xor
rclb
xchg
and
loope
les
arpl
ds
or
dec
push
nop
pop
cmp
pop
pop
inc
test
push
sbb
pop
mov
and
pop
test
out
push
push
scas
sub
ja
add
jmp
sub
shll
dec
xchg
mov
xchg
jnp
movlps
and
or
push
jp
add
inc
pop
push
mov
xor
lock
xchg
lods
out
or
fstpt
or
add
inc
or
pop
dec
or
xlat
fcmovb
fildl
add
add
add
add
jo
insl
ret
addr16
cltd
orl
cmpsb
or
cmp
lds
dec
movsl
fnsave
addr16
or
push
mul
leave
js,pn
add
test
dec
in
nop
out
xchg
mov
lea
inc
adc
or
int3
jmp
shrl
jnp
test
mov
mov
cwtl
scas
call
es
sub
xchg
popa
daa
lcall
mov
dec
sbb
push
pop
scas
jo
push
lea
fbld
fldl
jbe
mov
xchg
pop
sub
mov
mov
insl
pop
pop
and
jp
push
xchg
jb
xchg
sub
in
xor
mov
scas
xor
lock
jne
or
fwait
mov
and
xchg
insl
cmpsb
pop
movsl
xor
or
cmp
or
jg
cmc
insl
cmc
out
lcall
enter
int
dec
faddl
add
add
add
mov
cs
mov
stos
in
fwait
lock
lods
gs
testl
insl
xor
cmpsl
aas
daa
into
cli
mov
enter
lcall
fnstcw
xchg
adc
xchg
daa
cmp
outsl
add
stos
ret
xor
mov
push
sbb
imul
repnz
fwait
add
rolb
lock
inc
xchg
xchg
adc
sbb
movsl
sub
stos
fisubl
pop
pop
fucom
mov
sbb
jp
adc
mulb
pushf
and
sub
popf
inc
aad
jbe
insb
dec
jp
imul
inc
and
inc
cltd
add
sub
xchg
and
fs
mov
fimuls
js
sbbb
jl
cltd
std
cmpl
xchg
mov
insl
push
xchg
cmp
es
data16
jle
add
outsl
jle
aas
mov
cmp
fldl
add
add
add
rorl
mov
add
mov
aaa
adc
jns
shl
jecxz
test
mov
or
mov
scas
jae
xor
ja
cwtl
sahf
add
xchg
sbb
cwtl
jo
fcomps
pusha
or
test
adc
dec
fbld
jg
xor
or
ret
and
xchg
xchg
andb
out
daa
hlt
test
sub
icebp
std
inc
add
shll
mov
fistpll
pop
fcomp
in
test
xor
sub
or
dec
add
and
imul
sbb
mov
sub
xchg
pop
scas
push
imul
les
gs
push
add
int3
xor
loop
cmp
and
xor
rcll
out
aam
jg
stos
leave
xor
ds
push
aas
or
add
add
jle
and
scas
sti
jle
pop
push
pop
lods
adc
add
add
add
lret
pop
xor
enter
fimuls
mov
and
mov
int3
insb
fucom
mov
addl
add
je,pt
mov
push
outsb
mov
and
jmp
fwait
sub
mov
ja
add
sub
clc
cli
jne
or
xor
mov
andb
insb
cmc
or
push
push
cmp
push
ret
mov
pop
pop
mov
xchg
or
mov
push
xchg
inc
nop
inc
outsl
inc
pop
outsb
icebp
sub
in
sub
int
xchg
shrb
mov
movsb
add
lret
or
jp
das
aad
cmc
dec
lods
incb
leave
fistpll
push
fdivr
arpl
mov
aaa
subl
xor
popa
adc
jae
icebp
mov
xor
lock
lret
mov
xor
add
add
negl
arpl
xchg
push
add
add
add
mov
dec
mov
inc
ss
enter
mov
mov
jge
hlt
lret
lahf
jecxz
jp
dec
insl
loope
mov
hlt
ret
ljmp
inc
mov
mov
fwait
mov
outsl
add
xchg
xor
sub
xor
rcll
and
into
lods
into
rolb
stc
je
out
rolb
adc
cli
je
icebp
push
movb
pop
jno
and
mov
fnstenv
mov
popf
jbe
or
test
jmp
adc
iret
xchg
or
sbb
xchg
repz
jns
xchg
and
cmp
sub
push
idivb
test
pop
or
lods
fxch
lret
cmp
sbb
dec
adc
pushf
push
pop
rcrl
dec
lahf
sub
cli
inc
and
ss
inc
jae
push
ret
int
pop
mov
push
test
dec
xchg
xor
push
xor
push
jl
jle
insb
out
cs
xchg
and
loopnew
add
add
add
fsubs
xchg
mov
fildll
lcall
jne
les
push
jne
cmp
into
adc
jmp
cmp
push
bound
fucomip
inc
lret
pop
xchg
ss
xchg
mov
les
push
pop
popf
mov
cmpsb
rclb
xchg
jbe,pn
add
sahf
xchg
pop
push
and
inc
lea
pushf
xor
cmp
inc
cmc
stos
in
outsb
mov
popl
or
push
add
sahf
dec
adc
imul
movsb
hlt
jnp
lret
lret
rcrl
mov
mov
lods
and
xorl
lcall
jae
add
mov
out
jle
add
cmp
vmovaps
mov
ljmp
jb
sbb
les
enter
adc
pop
fwait
push
das
xor
adcb
push
iret
dec
cs
je
sub
add
mov
adc
in
xor
adc
loopew
add
add
add
pop
in
movsb
int3
adc
cwtl
adc
inc
outsb
popf
xor
lret
ret
pop
add
mov
mov
clc
mov
icebp
inc
xlat
cmp
rep
imul
cmpsl
stc
pop
mov
fisttpll
pop
stos
xchg
shrl
cmp
cld
out
pop
xchg
xchg
lret
jne
out
ss
or
adc
clc
xchg
dec
xor
xchg
lcall
outsl
cwtl
sub
das
arpl
cmp
inc
jl
cmpsb
popa
rorb
jg
lcall
mov
fidivrl
xchg
push
cpuid
mov
cwtl
pop
and
mov
sbb
dec
xor
std
imul
and
dec
push
xchg
jnp
push
sbbb
sbb
jae
cwtl
aad
jp
sbb
popf
std
ja
ret
idivb
push
pop
cli
mov
in
or
inc
push
clc
in
push
and
icebp
aaa
data16
jne
mov
lcall
add
add
add
addr16
push
lods
sbb
xchg
and
pop
call
jns
xchg
in
in
mov
xor
enter
test
cmc
mov
sbb
pusha
fimuls
add
cmpsb
std
or
mov
or
stos
or
xor
stc
les
mov
xlat
jns
js
lds
push
pop
inc
xchg
pop
mov
js
fsubrp
lods
ret
mov
or
mov
mov
sbb
mov
fidivs
stos
push
pop
jbe
cmp
pusha
push
rcrl
into
jno
cmp
push
pop
shr
dec
mov
rorb
push
insb
faddl
xor
dec
mul
imul
bound
push
leave
mov
mov
add
push
pushf
dec
mov
push
aad
push
cs
out
mov
inc
negl
scas
call
add
add
jnp
sti
xchg
lahf
mov
pop
stc
jcxz
add
add
add
dec
and
int3
lret
in
push
mov
push
sbb
push
mov
fstps
mov
pop
dec
jb
cmp
mov
jge
enter
pop
and
sbb
xor
xor
jle
ss
lret
inc
fimull
mov
aas
dec
xlat
and
imul
fwait
clc
or
fimuls
xorl
aas
lds
or
pop
fwait
xchg
or
jmp
jo
jne
enter
jo
jnp
sub
pop
es
mov
sbb
sbb
pop
cltd
mov
loopne
jg
inc
sarb
enter
cli
cmp
or
cmpsl
insb
mov
xor
popa
nop
bound
or
dec
mov
scas
adc
aam
loope
out
mov
adc
sub
ds
pop
rclb
mov
sub
pop
sarl
mov
sbb
in
add
add
add
enter
mov
cltd
gs
inc
in
idivl
scas
push
ret
in
xchg
jmp
mov
addr16
xor
inc
ficompl
sbb
jae
mov
mov
push
add
cltd
fisubrl
cs
out
sbb
pusha
scas
push
out
mov
in
push
jg
mov
test
repnz
lahf
adc
push
cmpsl
sahf
mov
fisubrl
loop
jge,pt
xchg
adc
ds
out
mov
jns
mov
fildl
aaa
jecxz
mov
pop
inc
mov
mov
jo
scas
adc
cs
xchg
in
xor
jmp
jbe
xor
loopne
int
and
fldl2t
dec
mov
mov
inc
mov
mov
fmuls
xlat
jns
mov
iret
add
out
outsb
leave
xchg
pop
lcall
jmp
movsl
mov
into
xor
jg
and
inc
xchg
in
aam
add
add
repz
std
repz
insb
xor
addr16
add
add
add
pop
pop
dec
or
pop
add
movsb
cmp
incb
inc
xchg
clc
sub
push
mov
lods
adc
ret
movsl
or
inc
fistps
test
out
mov
aam
mov
and
je
xchg
push
xchg
notb
jno
inc
xchg
outsb
rcrb
int3
mov
xor
dec
mov
pop
cmp
lea
rorb
in
sub
adc
xchg
repnz
xchg
scas
out
idivb
xchg
xor
shl
pushl
and
jge
push
inc
pop
pop
inc
dec
movsl
cmp
adc
jge
clc
mov
mov
inc
jmp
icebp
pop
aad
es
dec
push
cmp
xor
icebp
ss
scas
mov
fcmovnu
mov
mov
jo
adc
arpl
dec
and
mov
push
in
sub
cmp
arpl
je
movsl
dec
andb
add
add
add
xchg
cmc
and
daa
repnz
sbb
inc
and
fwait
arpl
sbb
pushf
andl
shll
add
test
fadd
test
fisubrl
andl
push
out
push
xchg
inc
push
enter
cmc
rorb
inc
pop
popl
dec
cmp
xchg
or
sub
movsl
mov
jmp
sbb
testb
jg
stos
push
sbb
mov
ljmp
push
cltd
add
aas
rcrl
and
int3
pop
adc
jb
lea
or
scas
in
sbb
jl
je
push
mov
mov
lock
repnz
fxch
outsl
addr16
inc
sbb
cmc
sbb
insl
in
pop
sbb
das
xor
dec
jge
lahf
shlb
andb
jl
cmp
jbe
ss
fstpl
je
push
jle
add
add
mov
mov
cld
xchg
sub
add
add
add
test
adc
xchg
adc
cwtl
leave
test
or
fistps
cltd
add
out
pushf
out
push
sbb
sbb
cmp
or
add
and
adc
movsb
dec
push
push
xchg
out
ffree
jae
andb
ds
fldenv
sub
fs
js
gs
dec
push
loope
push
fstpl
popf
inc
es
int3
pop
jne
test
xchg
cli
sbb
mov
cmc
in
pop
sti
lcall
aam
pop
jb
jbe
push
push
sub
inc
iret
lret
pop
out
call
ds
lods
lock
imul
inc
je
mov
pop
jge
roll
ja
cmp
pop
mov
mov
bnd
push
orl
jo
into
mov
adc
je
pop
int
addr16
pop
bnd
aam
xchg
icebp
leave
adc
lret
xchg
in
mov
incl
rorl
add
add
add
dec
pop
std
cli
add
xchg
xor
pop
popa
mull
cmp
ret
je
sub
mov
pop
pop
mov
dec
push
mov
jge
ds
xor
mov
cmp
aam
aam
fcompl
push
pop
enter
and
cmp
add
mov
or
cmc
inc
xchg
rcll
into
mov
or
jo
sub
pop
dec
sub
dec
icebp
into
hlt
sub
fnclex
popa
sub
inc
sub
mov
into
stos
adc
shrl
add
xchg
add
inc
jne
repnz
outsl
mov
aaa
inc
push
adc
sbb
dec
and
movzwl
adc
xchg
pop
enter
movsb
pop
adc
push
aam
mov
sbb
pop
jb
or
lcall
test
mov
sub
xchg
sbb
inc
mov
in
negl
sub
movsb
fadd
adc
addr16
add
sbb
or
mov
in
mov
lcall
sahf
sahf
fildll
mov
xor
fistps
mov
lret
lahf
jp
imul
in
and
sbb
shufps
idivb
fwait
cmp
cltd
cmp
clc
mov
xor
sbb
bound
pop
lret
pusha
push
xor
mov
cld
xor
pop
sbb
out
pop
inc
and
mov
jno
test
pop
sbb
inc
mov
inc
fdivrs
cmp
mov
sbb
or
adc
mov
mov
mov
inc
std
mov
adc
outsl
mov
sbb
fidivrs
mov
daa
sub
adc
addr16
mov
jne
fdivl
int3
movsb
push
push
dec
dec
ja
pop
aam
add
push
movsb
cltd
out
ret
das
jo
fistpll
stc
dec
push
dec
or
add
add
roll
push
or
adc
call
arpl
cmp
push
pop
aaa
in
fucomp
push
xor
flds
mov
std
and
into
push
sbb
sub
sarl
ja
aaa
lods
mov
mov
mov
push
pusha
arpl
fsubl
jae
lahf
clc
push
xchg
stos
adc
fiadds
sbb
arpl
jae
cmp
mov
fdivp
mov
insb
dec
cwtl
cmp
add
repnz
dec
mov
clc
cmp
sub
lods
pop
xchg
stc
jg
jb
and
sub
jecxz
or
repz
mov
xlat
adc
mov
cmp
out
repnz
les
dec
sbb
sbb
daa
xor
aad
add
into
mov
sub
mov
cmp
cmp
cmp
cmp
mov
in
int3
sbb
mov
cmp
mov
push
push
push
mov
imul
add
xchg
scas
pusha
cltd
popf
inc
mov
add
int
jns
jns
dec
adc
mov
pusha
fst
dec
xor
inc
mov
add
inc
mov
div
jo
or
mov
out
das
scas
push
leave
mov
push
add
movsb
test
add
mov
jg
in
adc
sahf
xorb
cmp
pop
stos
xchg
out
jl
out
add
sbb
mov
int
mov
inc
rcll
pop
sbb
out
ret
and
rcl
push
jne
sbb
scas
or
fnsave
xchg
je
dec
add
adc
lea
or
jg
mov
outsb
xchg
sbb
pop
pop
jo
and
insb
mov
iret
push
jbe
loope
aam
pop
lods
or
fmull
and
daa
adc
dec
or
mov
notb
add
add
repnz
add
pop
lcall
les
and
add
add
add
xchg
lahf
out
xchg
inc
icebp
outsb
out
imul
push
mov
jg
rcrb
insb
mov
cmc
sbb
and
andb
std
sub
jg
push
lods
xchg
les
push
cwtl
inc
inc
push
or
and
cs
movsb
and
sub
int3
aaa
adc
stos
jne
loopne
test
aas
sub
shll
dec
dec
fs
pop
dec
mov
adc
andl
enter
in
xchg
mov
lahf
imul
jbe
jno
mov
test
xor
sub
adc
adc
jp
adc
pop
leave
dec
cmp
add
repz
loopne
ss
push
sbb
add
mov
mov
loope
out
lods
cli
psllq
adc
cmpl
cmc
mov
scas
push
push
adc
cmp
stc
adc
jmp
push
jle
jbe
pop
mov
push
decl
mov
in
add
add
add
pop
jne
jle
xor
outsl
adc
inc
mov
inc
outsl
inc
cli
push
shll
mov
ds
loope
lock
js
push
cmp
in
mov
push
sub
in
fisttpl
testb
mov
iret
mov
sarb
mov
inc
stos
dec
mov
push
push
cmpsb
jecxz
push
cwtl
adc
repnz
addr16
add
or
cmp
gs
mov
push
pop
imul
sti
mov
mov
leave
jne
dec
fcompl
loopne
xor
mov
sub
or
daa
rcrb
xchg
ficompl
mov
and
arpl
mov
mov
repnz
stos
sbb
jae
jbe
xor
outsl
pop
cwtl
cmp
je
mov
sbb
insl
insl
cs
mov
imul
sbb
jns
jb
mov
std
lods
or
je,pn
cld
xlat
and
cmp
sti
fsubp
inc
push
sub
push
addr16
add
add
add
imul
sbb
in
push
xchg
nop
aam
out
pop
and
and
gs
imul
cmp
dec
insb
jo
pop
push
sbb
push
sub
dec
mov
push
cli
pushf
scas
stos
loope
mov
pop
xchg
mov
jecxz
fisttpll
cltd
xorl
push
push
sub
out
imul
inc
arpl
dec
arpl
xor
inc
inc
xor
cmp
sbb
aam
xchg
mov
sbb
pop
pop
cmp
das
or
add
and
xchg
sahf
fadd
mov
fs
int
sbb
mov
and
adc
xchg
lods
jnp
inc
inc
in
add
stc
mov
punpcklwd
aam
xor
xor
adc
mov
jnp
push
sub
push
mov
and
jbe
dec
pop
and
mov
add
outsb
xor
mov
lcall
out
add
add
add
cmp
push
mov
sahf
cltd
cmp
icebp
xchg
sbb
add
scas
push
cmp
or
insl
cmp
sbb
decl
popf
cmp
mov
in
cmp
sbb
xchg
jge
jbe
dec
push
mull
push
pop
inc
icebp
pop
cmp
fildll
jb
dec
scas
cmp
pop
daa
cs
cs
mov
sbb
sub
mov
sbb
adc
shll
and
lds
stos
fcmovb
in
adc
mov
jnp
stos
jl
and
fwait
mov
pop
cs
std
or
xchg
dec
ficoml
ss
inc
inc
and
call
push
jmp
mov
popf
aaa
pop
and
cld
mov
push
adcl
in
dec
call
or
add
repnz
ja
mov
jno
loope
stos
aas
cmpsb
scas
adc
dec
lcall
add
repz
ror
lock
jnp
xor
xchg
adc
mov
add
add
cmpl
pusha
test
fimuls
ret
pop
jg
sub
dec
sbb
pop
xchg
mov
mov
out
push
and
sub
xchg
arpl
lahf
pop
and
cmp
or
ret
push
out
test
mov
testl
lea
jns
cmc
shrb
sub
testl
cmp
xchg
pusha
lds
mov
addb
inc
mov
test
xchg
data16
inc
inc
ret
mov
and
loop
lret
and
sbb
jne
adc
loope
cmpsl
xor
cmpl
into
adc
pushl
imul
adc
add
arpl
lret
add
and
insl
in
and
push
or
rcrl
pop
dec
xchg
out
xor
scas
js
addb
in
pop
test
pop
mov
mov
or
mov
lahf
push
mov
add
repz
fisubs
ljmp
add
add
xchg
repnz
mov
movsl
jb
fldt
ljmp
push
pop
push
movsl
ret
adc
ljmp
in
cs
inc
nop
mov
push
lods
cmpsl
adc
xchg
mov
mov
out
inc
xlat
enter
mov
outsb
mov
inc
into
mov
inc
iret
iret
xor
and
iret
loopne
bound
imul
sbb
dec
rcl
jbe
pop
test
fidivrs
inc
add
pushf
cwtl
aas
adcl
movsb
mov
mov
fcoml
add
push
add
mov
test
pop
cmpsb
in
bound
lret
pop
and
push
and
or
mov
scas
mov
jnp
loope
cli
mov
mov
jle
scas
cmp
jb
insb
xor
sbb
xchg
call
or
outsb
lea
movsb
and
out
sbb
nop
movsl
clc
je
repnz
add
add
jp
xor
clc
xor
jbe
filds
jle
push
jle
pop
imul
loopne
popa
test
xor
notb
cmpb
gs
jo
cltd
mov
movsb
mov
sub
xlat
adc
inc
pop
mov
das
dec
leave
adc
sbb
insl
shlb
loop
push
mov
sub
jb
ds
xchg
xchg
pop
dec
dec
int3
fdivl
inc
mov
pushf
les
idivl
cmpsb
call
jne
mov
push
jne
sarl
inc
enter
jo
ror
or
dec
cmp
rcl
and
mov
inc
sbb
push
adc
lcall
das
mov
sbb
jmp
lods
scas
imul
leave
sub
mov
xchg
dec
dec
inc
ja
adc
mov
xchg
jae
in
adc
xchg
jae
sbb
cmc
mov
shrl
cmc
scas
sub
mov
repz
add
add
int
lods
ds
sarl
jne
std
enter
and
mov
mov
cmp
pop
jle
out
imul
and
ss
and
pop
scas
test
jo
fsubrp
sub
add
jecxz
push
ja
arpl
sub
push
pavgb
enter
ljmp
popf
xchg
push
sbb
pop
sbb
or
mov
and
push
cmpsb
outsl
jle
sub
popa
js
insb
scas
cltd
inc
dec
push
stc
fcompl
cmc
sbb
xchg
inc
dec
filds
mov
stos
mov
or
ficomps
sarl
xchg
jl,pt
mov
cltd
inc
push
mov
idivl
mov
or
pop
push
roll
add
jae
fisubl
or
xor
je
mov
xchg
mov
out
ficompl
shl
xor
notl
cli
in
out
and
xchg
adc
enter
lret
pusha
rorb
cmpsb
mov
adc
addr16
add
add
add
pop
push
sbb
xor
fldcw
xor
andb
in
push
jae
mov
sbb
sub
lock
pop
in
leave
pop
adc
test
data16
sub
repnz
mov
lcall
inc
cmc
add
jecxz
insb
xor
cmp
into
mov
and
cmp
rcll
adc
jnp
dec
mov
sbb
or
dec
stos
idivb
xor
add
lods
insb
add
jl
xchg
cmp
iret
ljmp
je
sarb
lret
xor
cmpsb
dec
lds
jg
xchg
roll
adc
into
sti
xchg
cmp
or
addr16
inc
xor
fmuls
ljmp
iret
sbb
pop
xchg
shl
mov
bound
xchg
mov
jmp
sbb
nop
sti
adc
mov
add
add
gs
testl
fs
addr16
add
add
add
sbb
mov
xor
push
js
decb
dec
pop
lods
fdivp
xchg
daa
dec
xchg
sbb
jg
mov
adc
addb
mov
mov
add
inc
cmc
adc
and
jae
jecxz
xchg
mov
outsb
fists
xor
fcomps
scas
xor
inc
test
outsb
lret
ss
adc
stos
xlat
stos
lock
add
shrl
sti
dec
lret
jmp
arpl
mov
add
xor
push
sarb
mov
dec
mov
adc
mov
adc
cmpsb
je
jo
in
pusha
and
pop
mov
arpl
xchg
pop
push
fcompp
jge
stos
into
cli
dec
inc
les
insl
sub
int
sbb
in
insb
shll
cmp
icebp
mov
nop
and
negl
mov
dec
int3
inc
dec
adc
cmc
out
daa
sbb
and
daa
lahf
mov
pop
das
xchg
sub
add
add
add
les
insl
fsubr
es
fdivs
add
sub
les
add
rcll
xchg
ret
gs
push
cwtl
mov
movsb
scas
cmp
mov
pop
jg
fs
mov
or
sbb
jno
sti
movsl
mov
cmp
push
mov
ljmp
nop
mov
lahf
cs
inc
mov
mov
pop
call
pop
fbstp
mov
aaa
push
popa
int3
jle
stc
les
cmp
out
pop
sub
cli
into
xchg
cmpsl
push
and
sub
cmpl
and
movsb
popa
repz
mov
daa
jns
jbe
xchg
stc
mov
rcll
push
and
ret
clc
cs
adc
jo
fs
subb
xchg
into
stos
insl
mov
sub
rcll
push
rol
and
mov
add
mov
fucomi
xor
test
testl
add
xchg
int
and
fidivs
fisttpll
out
fwait
test
dec
je
xchg
into
loopne
das
inc
hlt
add
mov
sub
das
ds
pushf
jecxz
and
aad
arpl
fsubs
push
xchg
lods
ja
sbb
xchg
mov
arpl
cltd
je
xlat
jmp
cmp
push
fsubrl
les
lods
rcrl
inc
mov
fdivs
outsl
mov
mov
pop
or
popa
adcl
cwtl
or
iret
adc
jmp
sub
insl
int3
add
bound
movsb
mov
mov
mov
inc
imull
lods
scas
das
nop
cmp
sub
lods
cmc
lods
mov
inc
ds
cltd
or
ret
repnz
movb
push
pop
mov
and
dec
cwtl
cmp
sbb
test
out
lods
mov
mov
and
push
push
in
pop
mov
jbe
push
inc
pop
jns
aas
loopne
sub
dec
or
clc
add
add
add
jle
ljmp
mov
pop
pop
loop
add
sub
ret
mov
push
sbb
xorl
xor
xor
inc
push
mov
xor
fimull
jno
push
test
mov
inc
ss
stc
xchg
dec
add
or
stc
inc
and
dec
xor
in
mov
out
jp
pop
inc
fstpt
mov
das
aad
pusha
xchg
aas
or
adc
sbb
cli
out
loop
push
and
ljmp
cmpsl
mov
add
mov
mov
pushf
imul
push
or
add
icebp
arpl
mulb
cs
fsubrs
xchg
inc
or
rcl
je
cwtl
fmuls
popa
daa
inc
in
les
jb
shrb
iret
push
loope
out
sarl
call
arpl
add
sub
cmpsb
sbb
jnp
mov
inc
mov
add
add
add
sub
js
insb
test
cmp
stos
cmp
sti
jl
jne
pop
push
cmp
xorb
loope
les
test
shll
mov
mov
hlt
inc
addr16
dec
cmp
mov
push
imul
or
cmp
xchg
mov
inc
xor
loopne
aaa
or
cmpsb
icebp
ficompl
mov
and
dec
jns
sub
push
cli
mov
icebp
test
das
pop
mov
out
inc
cmpl
ss
loope
ja
fwait
insb
pop
jp
cwtl
xchg
cmp
into
push
cld
gs
pop
mov
pop
jno
mov
xchg
mov
pop
sbb
cwtl
xchg
and
xchg
in
iret
bound
in
cmp
cmc
mov
pop
pop
mov
fiadds
lret
int3
add
fisttpll
shlb
inc
test
pop
xor
pop
xchg
aad
sub
repnz
test
adc
cmp
push
lret
mov
testb
imul
gs
cli
add
add
add
lods
ljmp
xchg
sbb
add
mov
in
mov
xor
cmpsl
dec
lcall
stos
fildl
in
lret
inc
pusha
into
mov
pop
or
pop
xchg
pop
inc
in
adcb
lods
fs
aad
and
xchg
push
or
subb
adc
push
cmp
bound
xor
jno
insl
sub
and
push
mov
ss
sub
cmp
cmp
xchg
jae
mov
mov
mov
mov
cmp
mov
jb
and
pop
jo
loope
je
cmp
and
gs
es
xor
sub
movsb
xor
lds
xchg
add
scas
or
addr16
aas
dec
and
pushf
sub
stc
movsb
lods
cmp
mov
xor
or
clc
push
sbb
lds
mov
xchg
mov
idivl
push
cli
xchg
imul
add
sub
cs
cmp
and
xchg
sbb
dec
test
into
adc
xor
arpl
cmpb
mov
xchg
movq
ljmp
aaa
push
mov
push
out
mov
sub
stos
pushf
int3
or
ret
push
fcompl
xor
int3
and
lret
sub
pop
jl
add
clc
fstpt
insb
idivb
daa
add
jb
jne
pop
mov
pop
push
lea
and
fcom
adc
mov
scas
fdivrl
popf
mov
mov
cmp
mov
ss
sub
pop
pop
mov
mov
in
xchg
ljmp
cltd
das
and
je
nop
add
mov
lds
js
fistpll
cmc
loope
pop
inc
sub
cmp
xchg
sub
repnz
lock
cmp
add
add
mov
lods
and
addr16
add
add
add
rcrb
data16
dec
mov
iret
outsb
push
mov
aaa
enter
fnsave
push
push
add
js
lods
pop
sbb
cmc
mov
jb
adc
stos
mov
shrb
push
pop
mov
lcall
mov
sarb
dec
inc
mov
dec
mov
push
into
data16
add
orb
out
mov
shll
jmp
icebp
push
out
jecxz
pop
cmp
add
mov
jp
insl
mov
shll
push
scas
mov
pushf
loope
xchg
das
and
ret
sahf
and
je
jmp
and
mov
repz
adc
mov
dec
out
jmp
dec
mov
mov
pop
imul
or
mov
shll
fs
sbb
icebp
jl
out
cmp
xlat
dec
push
push
jmp
imul
lahf
repnz
or
std
add
add
add
mov
mov
adc
pop
xchg
loope
adc
mov
add
mov
jl
dec
pusha
pop
out
push
xor
es
xlat
mov
cmp
pop
popf
and
inc
jb
xchg
mov
or
lods
and
ficoml
adc
fcoml
mov
sbb
or
mov
jns
pop
add
pop
xchg
lock
xorl
addl
fwait
nop
pushf
jae
loope
jp
xor
into
ret
lds
mov
loop
mov
push
sub
pushf
add
mov
or
testb
cmp
and
sarl
loopne
fwait
jecxz
xchg
movsb
push
arpl
inc
lock
sub
mov
sbb
push
in
iret
cs
inc
push
add
iret
test
mov
adc
test
nop
clc
mov
push
out
or
mov
fsts
mov
mov
mov
xchg
pop
inc
pop
lods
pop
cli
cmc
cmpsb
lret
pop
std
dec
lea
add
add
add
loop
pop
sub
das
and
repnz
add
sbb
pop
jmp
mov
shll
sarb
jmp
xchg
cmovae
push
inc
jle
loope
aaa
cmc
and
dec
bound
mov
mov
mov
mov
mov
fsubrs
pop
das
dec
xchg
sbb
clc
adc
and
pop
cltd
add
xchg
adc
cmp
jg
mov
es
sbb
add
orb
cmp
dec
test
and
push
pop
mov
jmp
xchg
mov
jns
mov
enter
fldenv
mov
enter
jle
clc
repz
bound
clc
sarb
push
add
mov
jns
int
or
loope
repz
lret
dec
rcrb
insb
sbb
ja
or
out
rorl
das
stos
cltd
inc
popf
jae
out
xor
incl
add
add
add
bound
mov
sub
orl
ds
sub
aad
fists
jns
or
pop
lret
push
sahf
shll
jne
lahf
xor
cmp
pop
test
mov
aad
leave
sbb
rcll
cmovl
cmc
or
mov
arpl
mov
sti
cwtl
add
sub
imul
jns
icebp
loopne
ja
out
lret
pushf
pop
faddl
cmp
das
daa
xchg
cmp
in
pop
xor
hlt
dec
adc
adc
enter
adc
roll
sub
shrb
int3
loop
stos
fmull
dec
loope
sub
inc
lret
and
xchg
stos
add
xor
jae
fldt
sbb
sub
ss
cmpsl
inc
dec
push
ffree
es
push
dec
fisttpl
incl
imulb
sub
fstpt
mov
nop
test
aam
int
aaa
das
aam
clc
mov
add
add
add
loop
add
outsl
mov
outsb
subb
lods
mov
mov
hlt
lea
icebp
mov
ss
aam
jb
xor
mov
gs
mov
push
xchg
xchg
jae
pop
into
inc
jle
mov
mov
sbb
aas
and
dec
cmp
lock
in
sbb
or
mov
vpshufhw
jno
pushf
insl
sbb
jbe
dec
add
jg
mov
mov
mov
pusha
test
mov
bound
mov
jecxz
rcr
add
outsl
das
popa
subl
push
cmp
sbb
mov
xor
mov
cwtl
cmp
adc
add
adc
add
jno
insl
dec
xchg
or
lahf
push
push
xchg
lods
xchg
inc
cli
pop
dec
in
imul
or
pop
imul
push
mov
adcl
pop
arpl
addr16
sub
inc
bound
add
add
add
and
rclb
adc
pop
mov
outsb
inc
test
shl
popa
xor
aam
ficoms
mov
clc
in
aad
cmp
or
ret
arpl
cwtl
xchg
sbb
xchg
fidivrl
movsl
das
sub
or
sbb
mov
dec
push
pop
std
rcll
mov
fsub
enter
jae
sbb
std
into
pop
sub
imul
add
hlt
shll
ret
enter
int
ret
popf
pushl
dec
outsb
sbb
iret
xchg
adc
xchg
add
add
in
mov
lock
sbb
loop
dec
cmpsl
xchg
fldlg2
lods
pop
jmp
inc
jp
shlb
inc
adc
fbstp
add
mov
cmp
rorb
xor
cmp
sbb
cmp
ss
out
cmp
cmp
pushl
xchg
xor
pop
or
add
add
add
pusha
mov
sbb
fimull
mov
mov
mov
decb
jmp
pop
sbb
pop
xor
fsubrs
lods
push
fisubrl
jle
xlat
sbb
pushf
shll
sub
in
adc
mov
adcb
mov
loope
push
jne
adc
lcall
cli
ret
ja
cmp
sbbl
push
jecxz
xor
and
jb
inc
aas
std
std
repnz
rcrb
add
ja
pop
jns
ret
sub
sub
mov
in
enter
in
inc
xor
jo
mov
add
je
and
add
mov
dec
mov
jp
xor
ss
out
or
push
test
adc
mov
or
repz
outsl
jp
lods
bound
lods
orb
js
jno
sub
push
dec
bound
add
add
push
scas
mov
je
popf
add
add
add
add
push
or
xchg
dec
js
in
enter
dec
in
cmp
rcrl
test
dec
dec
mov
pop
and
adc
mov
ljmp
js
int
adc
imulb
dec
cmp
stos
cmpsl
add
add
iret
icebp
pop
or
imul
inc
jl
mov
scas
add
test
mov
mov
mov
and
ficompl
jl
xchg
rorl
jge
mov
pop
mov
test
pop
mov
lods
jbe
mov
leave
mov
out
data16
pop
and
mov
lahf
test
icebp
fistpll
clc
cmp
cmp
or
jecxz
cmp
scas
cmp
iret
mov
jecxz
rcrl
imul
mov
bound
fldcw
in
pop
adc
imul
mov
das
mov
dec
shl
fstp
sbb
aaa
xchg
and
movsl
mov
mov
mov
js
addr16
add
add
add
mov
jnp
mov
mov
mov
sub
mov
ja
xchg
insb
mov
sbb
and
lret
shlb
adc
add
fs
mov
push
sub
lret
mov
leave
scas
sahf
jb
and
movsb
xor
jmp
xlat
mov
jp
aam
mov
or
sahf
daa
aaa
adc
adc
adc
pop
ret
loopne
mov
test
out
test
sbb
outsl
aaa
jbe
andl
lcall
jmp
fs
outsl
jo
jge
push
pop
lahf
aad
lea
stc
outsb
push
dec
mov
sub
fists
or
xchg
xor
and
sub
jg
mov
lds
xchg
push
lret
mov
push
mov
adc
mov
mov
enter
pop
loope
mov
mov
inc
popa
into
rcl
arpl
fdivl
mov
jle
sub
add
add
add
gs
aad
les
stc
inc
dec
xor
sahf
mov
push
sti
mov
iret
movsb
jbe
sub
push
ficomps
xchg
dec
xchg
test
outsb
int3
in
sub
mov
popf
cmp
iret
testb
ja
aad
roll
dec
jbe
inc
xlat
cmp
sti
int3
dec
loop
mov
aam
mov
fcomps
lock
adc
icebp
pop
stos
or
jmp
xchg
jno
ret
xchg
dec
push
out
outsl
stos
dec
imul
ret
sub
pushf
lods
ret
sub
mov
ret
push
negb
fisubl
add
repnz
ret
mov
lods
mov
das
pop
sbb
push
out
fadds
outsb
pusha
dec
js
cmp
add
fcomi
dec
pop
mov
lds
stos
scas
out
pop
repz
imul
mov
cmp
sub
jecxz
jno
aam
add
add
mov
mov
lods
imul
mov
add
add
add
jp
mov
stos
aam
mov
nop
mov
cmp
into
scas
mov
data16
enter
cmpsb
or
in
movsl
xor
dec
sbb
daa
into
push
popf
sbb
ret
cwtl
cmp
popf
jmp
mov
mov
rcrb
sub
sti
dec
ret
mov
xor
cmp
push
das
loope
sub
ss
jmp
insl
push
paddq
mov
clc
decl
cmpsb
add
xor
std
test
mov
pushf
inc
enter
push
pushf
pop
jmp
outsb
sbb
push
loopne
pop
jl
sbb
stos
push
insl
pop
adc
idivl
sbb
fstps
ss
lcall
je
adc
jge
enter
xlat
cmp
sbb
lahf
icebp
mov
mov
add
call
xor
out
cmpsl
xchg
sub
scas
or
cmp
fadds
add
add
add
imul
fisubl
test
cld
lret
std
push
jnp
inc
mov
outsl
int
cltd
faddl
mov
inc
rol
insb
xor
mov
mov
cmp
hlt
inc
mull
outsb
out
cli
out
push
sub
push
fs
sar
cld
xor
aaa
mov
and
mov
in
mov
lea
nop
dec
out
mov
cli
lret
xchg
es
mov
jl
mov
mov
xor
cltd
pop
je
push
outsb
push
xchg
loop
ds
fwait
xchg
jae
dec
aam
push
mov
and
xchg
xlat
mov
and
iret
pusha
lret
push
mov
outsb
cmp
mov
js
loope
pop
hlt
mov
shrb
stos
push
das
pusha
pop
adc
inc
cmp
adc
sarb
pop
daa
insl
jle
inc
lea
sbb
xlat
ss
mov
es
sbb
or
push
xchg
enter
push
fbld
test
or
add
add
add
ret
stos
mov
cmc
das
lods
inc
inc
jl
pop
cmp
adc
push
out
loope
mov
shrl
push
push
mov
cmp
js
mov
mov
orb
mov
push
movsl
jmp
jmp
jmp
lea
bound
jecxz
mov
js
cli
inc
mov
repz
rorb
std
enter
and
stc
movsl
cmp
xchg
push
xor
mov
fildl
adc
jp
lret
lock
enter
repz
fs
sarb
ret
mov
xchg
dec
and
mov
in
push
xchg
lods
fwait
push
arpl
cmp
out
pop
cld
int3
mov
add
adc
std
ret
mov
pop
outsl
movsl
cmp
sub
fnstenv
rclb
daa
filds
sbb
rcl
mov
xchg
jno
lods
cmc
mov
into
fwait
add
mov
sbb
add
add
add
test
dec
fs
aaa
inc
pop
lds
clc
push
xor
mov
jle
mov
cmp
mov
sub
xor
stos
aaa
xchg
push
cmc
addr16
cmp
push
add
call
int
mov
dec
or
js
dec
popf
cmp
or
int3
pop
gs
int
pop
pop
jno
pop
xchg
insb
int
in
fwait
leave
cmpl
in
scas
pop
cmc
popa
and
outsl
fdivrs
lods
mov
stc
cmp
pop
incb
cmpsl
je
jle
cli
or
aam
movsl
fs
adc
push
mov
iret
jno
in
lahf
mov
int
cmp
shll
push
adc
mov
mov
lea
ss
lahf
inc
xchg
add
popf
push
xchg
push
xor
imul
pushf
es
sbb
scas
pop
pusha
and
jl
test
out
mov
pop
sarb
in
fidivl
or
add
add
add
mov
std
test
in
mov
inc
mov
adc
rorw
ror
xchg
pop
mov
or
jb
xor
mov
xor
cmp
mov
jnp
sub
adc
mov
inc
mov
xchg
lods
movsl
dec
out
xlat
add
loop
cld
mov
sbb
xchg
mov
call
in
cld
push
test
dec
jge
push
test
jne
inc
shll
cmp
fisubs
push
xchg
jge
cld
inc
rcr
mov
in
int3
ljmp
icebp
fadds
adc
daa
mov
dec
sub
pop
jne
mov
sub
adc
jge
mov
arpl
cwtl
pushf
clc
pop
mov
adc
dec
pop
dec
cmp
mov
lods
inc
adc
xchg
or
and
fcomps
data16
adc
repz
xchg
add
add
inc
out
aas
mov
rcr
mov
inc
or
add
add
add
sbb
push
cmp
pop
fwait
dec
push
sub
scas
mov
mov
nop
pushf
mov
dec
cmp
notl
test
or
popa
dec
sbb
adc
jne
cmp
xlat
xchg
mov
pop
aas
nop
mov
in
lods
insb
pop
addl
add
loopne
and
cmp
jno
in
cltd
cltd
std
in
adc
fsub
cli
xchg
dec
fsts
xor
adc
addr16
and
cmp
pop
lret
sti
jecxz
xor
cmpsb
lods
xor
insb
fdivrl
decl
out
ret
sbb
cmp
test
icebp
jp
sub
add
lret
cmp
push
sbb
sbb
leave
xchg
in
out
stos
popf
push
shll
inc
inc
inc
insb
rcll
movsb
jnp
cmp
out
fs
cltd
leave
sub
xlat
push
bnd
dec
leave
and
mov
cmp
add
add
ret
mov
xor
out
add
sbb
dec
pop
lret
lcall
xchg
jnp
cs
stc
mov
lds
or
mov
int3
mov
jns
push
cmp
scas
xor
adc
xor
pminsw
push
call
sub
scas
mov
mov
sbb
test
inc
cltd
mov
and
int3
test
lcall
sub
xor
or
inc
sbb
push
cs
lods
dec
call
imul
imul
mov
or
sbb
cwtl
add
les
aam
push
into
xor
dec
jmp
mov
jnp
icebp
addb
sub
mov
das
push
sahf
imul
and
mov
jg
push
and
jno
cmp
movsl
test
ss
xchg
nop
mov
pop
mov
sbb
in
out
ja
filds
inc
jnp
addr16
add
push
mull
lods
gs
test
lock
int3
int
adc
pop
dec
lds
mov
push
add
pop
mov
ss
mov
xchg
sarl
mov
adc
ljmp
add
insb
and
mov
pop
jp
shrl
stos
mov
mov
mov
pop
jle
sub
mov
pop
jno
or
pop
and
das
data16
cli
sbb
jg
mov
jg
jnp
bound
xchg
push
lock
and
push
icebp
inc
mov
sbb
shlb
movsb
inc
jecxz
call
in
je,pt
pusha
mov
js
dec
das
dec
movlps
mov
mov
movzbl
push
mov
and
pop
pop
cmp
stos
push
pop
sti
cmpb
inc
or
mov
add
cmpsb
cld
aaa
add
lock
add
add
pop
in
inc
push
or
in
pop
addr16
add
add
add
xor
pop
dec
mov
jne
xor
leave
aaa
ficomps
loop
or
xor
outsb
inc
mov
addl
xchg
mov
xchg
test
mov
stos
mov
or
xchg
adc
sub
sbb
in
xchg
push
out
test
pusha
sbb
pop
xchg
sub
mov
lret
cmp
adc
les
movsb
out
fwait
jecxz
push
jmp
in
jae
faddl
sbb
leave
xchg
out
xor
outsl
push
je
sbb
fwait
sbb
or
inc
pop
ds
cmpsb
add
ret
mov
shl
mov
inc
and
lock
push
outsb
xchg
daa
sub
jmp
pop
filds
xchg
ljmp
sbb
jno
pop
jl
fldt
rcll
outsl
jl
cmpsl
jp
lods
mov
add
mov
jg
neg
pop
daa
inc
jle
sti
iret
sgdtl
add
add
mov
jmp
negl
push
mov
jle
dec
sti
xor
les
or
loop
repnz
mov
jb
jge
inc
dec
mov
adc
orl
and
mov
nop
into
jae
imul
lret
inc
xchg
push
cmp
cld
pop
push
mov
ljmp
ss
mov
add
fsubrs
jecxz
js
jmp
lods
pushf
mov
push
adc
in
mov
mov
sbb
fwait
aas
cli
push
jle
cwtl
movsl
jnp
clc
fiaddl
inc
outsb
cmpsl
push
sbb
daa
insb
push
sti
cmp
ret
repnz
sbb
xchg
pop
imul
rcrl
jle
push
cld
out
xor
mov
xlat
and
add
outsb
and
sbb
push
push
call
lret
mov
leave
imul
popf
mov
xorl
je
mov
scas
adc
add
add
cmp
sti
jg
cmp
je
testb
add
add
add
rcrb
cmp
into
pop
int
sahf
imul
xchg
in
xor
test
icebp
sbb
ss
js
sbb
or
imul
movb
cltd
and
jmp
xor
repz
cltd
int
jno
and
dec
fistps
rcrl
jle
xchg
lock
xor
or
dec
push
in
ss
sub
or
in
xchg
movsb
xor
add
in
fbld
jbe
jne
xlat
pop
mov
push
xor
imul
std
inc
rol
xor
jg
xchg
scas
daa
lock
or
mov
sbb
sbb
loope
pop
or
mov
iret
out
lret
addr16
dec
pop
out
scas
mov
sbb
mov
out
cmp
fsubrl
ss
rcll
add
scas
aam
jnp
fstp
fcompl
mov
add
add
add
jge
and
insl
jge
xchg
push
ret
adc
xor
jb
push
cmp
mov
pushf
dec
mov
add
sub
je
mull
cld
adc
mov
lds
jp
inc
push
pop
mov
dec
sub
sub
lds
dec
leave
push
cmp
shrb
clc
xchg
movsb
pop
mov
flds
je
xchg
shrl
loope
push
push
enter
inc
xchg
pop
inc
push
sub
stos
mov
xchg
add
cmp
lock
add
rorb
inc
lret
and
xlat
push
mov
mov
subb
jg
dec
insb
gs
mov
mov
push
jbe
adc
rcl
or
and
shll
insl
test
js
jbe
loope
fistpll
aam
in
lcall
dec
call
push
movsl
sub
xchg
pop
ljmp
out
mov
rclb
jmp
mov
jno
std
outsl
mov
add
repz
adc
add
add
add
test
call
add
cmp
mov
xchg
out
pop
faddp
test
cmpl
daa
psrlq
outsb
xor
push
dec
pushf
mov
cmp
add
aaa
push
and
add
adc
pop
inc
pop
fsubrl
or
fwait
clc
loope
mov
dec
jge
clc
mov
cs
shlb
jns
push
in
pop
push
mov
out
lret
sti
pop
sbb
popf
cmp
fcmovbe
mull
push
aaa
loop
adc
push
test
and
es
repnz
repz
aas
push
or
mov
xor
movsl
push
sbb
jmp
ja
push
int
sub
mov
jmp
cld
mov
inc
ljmp
test
mov
out
jne
mov
sub
fstps
and
push
or
sbbb
loope
jmp
fnsave
add
add
add
outsl
pop
stos
sbb
xchg
and
sub
aam
xor
mov
outsb
pop
cmp
out
and
pop
lahf
push
xchg
sbb
outsl
bound
flds
aaa
mov
and
mov
mov
ja
cld
lcall
xlat
fidivl
or
ret
or
shrl
jmp
push
pop
cmp
leave
add
push
popf
test
push
addb
addr16
push
fiadds
jae,pn
aad
cmp
cli
imul
dec
test
rcl
push
xchg
xchg
out
int3
jle
sub
and
scas
js
mov
pop
test
arpl
repz
mov
jno
jno
divb
mov
je
sbb
inc
adc
xchg
xor
cmp
cmpsb
js
mov
in
ror
push
mov
loop
fcom
adc
test
jb
fildll
xor
xchg
lds
rcll
mov
adc
add
add
add
std
xlat
sarb
test
cld
push
jo
and
cmp
addr16
or
jnp
stos
push
mov
mov
shl
jecxz
mov
loopne
xor
cmp
ret
cmp
xor
jne
cs
jg
xchg
out
jg
clc
push
inc
jge
adc
in
int3
push
loop
pop
out
subb
notl
dec
pop
push
jb
sbb
inc
inc
scas
jp
cmp
hlt
fs
js,pn
mov
sbb
mov
push
dec
scas
pop
int
pop
subb
jno
jge
fiaddl
inc
in
mov
subb
jb
std
fsubrp
dec
xchg
subb
mov
cwtl
xchg
mov
adc
push
pop
outsl
xchg
dec
clc
jp
mov
mov
dec
test
pop
mov
and
xor
je
jo
pop
mov
setnp
and
add
add
cli
inc
jg
int
xchg
lods
or
cld
sub
addr16
add
dec
shrl
outsb
mov
dec
arpl
jmp
sbb
insl
cld
mov
cltd
and
dec
aaa
add
jl
subl
js
pop
xor
movsb
rcrl
mov
push
push
shr
lret
shrb
out
jp
mov
push
rcrl
fimuls
inc
movsb
or
inc
inc
outsb
lret
add
mov
jg
add
cld
xchg
les
inc
mov
xchg
push
loope
push
dec
pop
or
mov
adc
mov
mov
or
jb
cmp
xchg
aad
test
lahf
inc
loope
rcr
test
outsl
aam
jle
xor
adc
addl
xchg
or
push
inc
out
lock
inc
jnp
loope
mov
loop
jmp
repnz
adc
addl
inc
daa
dec
mov
add
lock
std
cmp
jle
fistpll
ficoml
and
xchg
add
add
add
pop
ja
mov
mov
pop
mov
sbb
inc
ljmp
pusha
dec
rcrl
xor
adc
aad
pop
adc
push
xchg
jno
shlb
in
hlt
sbb
stos
rcll
test
adc
xor
push
inc
and
mov
mov
jb
inc
or
mov
adc
fists
jl
idivl
add
int
pushf
mov
and
add
and
scas
call
in
and
test
cmp
pushf
jp
js
push
push
shr
add
out
pusha
imul
test
or
icebp
cmp
dec
mov
loope
or
push
mov
xchg
or
dec
push
or
jmp
jns
dec
pop
out
iret
bound
popf
mov
test
xchg
mov
xor
mov
add
iret
xlat
ficompl
inc
push
add
pop
addr16
add
add
add
in
add
lods
cmpsl
lret
out
push
jo
sarl
andl
das
inc
test
dec
mov
icebp
outsl
cld
lret
inc
xchg
fs
push
mov
test
insb
inc
cmp
push
lahf
pop
xchg
jne
mov
push
fisttpll
clc
sti
icebp
dec
cmp
push
jae
add
je
pop
rorl
add
mov
lahf
cwtl
inc
dec
cmp
sbb
inc
or
and
push
jno
repz
lods
aam
iret
shll
add
sub
dec
pop
fcmovnu
mov
mov
out
inc
stos
xlat
jl
into
push
xrelease
pop
or
enter
pop
mov
popf
jp
lods
imul
push
rcr
insl
xor
jo
fstp
cli
jne
sbb
adc
lret
mov
push
imul
aaa
popf
das
fcmovnb
push
lods
daa
out
xchg
push
mov
and
enter
loopne
dec
jmp
dec
scas
iret
outsb
jmp
push
test
repnz
cltd
sbb
add
add
add
adc
rolw
pusha
test
iret
loope
sub
push
push
popa
cmp
das
bound
jne
orl
rcrb
or
pop
outsb
or
xor
ds
jnp
inc
aaa
mov
jg
jmp
mov
and
lret
jnp
fcmove
sbb
addr16
orl
push
enter
movsb
dec
icebp
inc
outsb
mov
repnz
sub
sbb
or
add
dec
or
fbld
xlat
adc
fcoml
pop
push
inc
mov
and
and
imull
scas
xor
mov
je
xchg
inc
xor
jg
sub
call
je
ficomps
insl
or
jg
sub
and
push
in
insb
cmc
aad
xchg
fdivrs
movsl
in
cmpsl
out
jp
fisubrs
mov
test
sbb
add
add
std
sbb
stc
cld
or
in
cmc
mov
add
add
add
mov
pop
fnstsw
pop
dec
mulps
fdiv
test
popa
or
pop
jnp
xor
repnz
push
aaa
mov
xchg
pop
push
mov
adc
xchg
mov
popf
sub
add
loope
lea
adc
ds
pop
imul
aam
push
mov
std
dec
cltd
ss
repnz
pop
fwait
popa
loopne
out
dec
mov
sbb
add
ljmp
mov
dec
bound
stc
rcrb
inc
jns
mov
xor
ret
rcr
sti
inc
cltd
mov
sbb
mulb
cmp
mov
sbb
push
jge
jle
mov
int
push
lahf
aas
cltd
icebp
dec
mov
stc
or
pop
out
es
push
ds
fwait
adc
push
jp
xchg
stos
outsl
js
inc
scas
inc
cmp
add
negl
adc
pop
xchg
cmpsb
jmp
sbb
add
add
add
sbb
jno
scas
lahf
clc
test
inc
xchg
cmp
test
push
dec
leave
xor
repnz
rcrb
or
arpl
lea
lcall
daa
test
ss
dec
pop
mov
add
and
icebp
push
dec
fcoms
jge
scas
xchg
jo
lahf
cmp
pop
cltd
in
or
shrb
aas
xlat
pop
cmp
je
sbb
lods
sti
fwait
bound
pop
outsb
or
lret
push
jg
mov
fcmovu
mov
idivl
push
cld
mov
mov
inc
ss
movsl
xlat
dec
in
mov
repnz
clc
xor
flds
arpl
jmp
movsb
sbb
rcll
pop
nop
imul
or
lret
shll
pushf
jle
pop
jb
jp
and
mov
push
fisubl
test
add
xcrypt-cbc
cmpsl
push
ljmp
push
mov
dec
pushl
mov
sbb
add
add
add
pushf
das
push
jl
adc
in
and
adc
stc
js
dec
push
movsl
or
jo
mov
ljmp
jle
sbb
aaa
rcrb
aad
cld
mov
xchg
sbb
inc
jmp
insb
add
mov
or
hlt
repz
cmp
cli
fwait
scas
leave
testl
incb
sbb
mov
adc
inc
add
popf
push
cmp
and
call
or
jnp
int
jmp
cmp
lods
xor
cmc
sub
jge
push
pop
push
mov
adc
xor
push
cmp
sbb
add
xchg
xor
jae
xor
xor
inc
jae
xchg
push
xor
fbld
jp
cmp
popw
inc
jns
and
and
adc
imul
aaa
mov
jns
and
mov
js
add
add
inc
ja
pop
aas
dec
push
das
ja
sbb
add
add
add
js
jg
sarb
jecxz
mov
pop
js
inc
fcomps
push
jge
jl
pop
adc
ds
movsb
arpl
jmp
leave
jmp
dec
icebp
adc
mov
or
test
dec
aam
add
stc
fiaddl
insb
dec
xchg
imul
roll
std
pop
je
xchg
mov
js
ss
movsb
xchg
adc
inc
mov
inc
lods
notb
dec
shrb
insl
les
in
loop
das
cmp
cmp
hlt
cmp
jbe
rclb
mov
mov
loop,pt
stos
jmp
jne
rcrl
or
fabs
xchg
pop
and
jecxz
outsb
test
push
inc
out
adc
push
and
aam
cwtl
sbb
push
sbb
call
dec
fwait
jmp
jp
jne
scas
inc
outsl
jo
or
repz
jae
ja
div
mov
jge
mulb
add
add
add
fsubp
xchg
jl
pop
mov
ret
pushf
jne
add
pusha
cld
scas
pop
ja
mov
fnop
dec
xor
and
shl
in
imul
daa
jbe
inc
push
not
movsl
xor
test
and
sbb
dec
mov
inc
imul
je
jmp
xchg
dec
sub
lret
enter
mov
jns
add
and
jo
orb
mov
inc
sub
nop
sbb
jp
adc
fisubl
xchg
pushf
mov
pop
dec
jo
sbb
sbb
mov
or
xor
adc
xchg
mov
or
inc
je
push
push
or
cwtl
jb
sbb
stos
cmp
adc
pop
xchg
cmc
mov
repnz
in
and
adc
inc
inc
lods
addr16
add
xor
enter
mov
xor
cli
std
jg
push
pushf
dec
scas
inc
sub
add
add
add
js
loop
stc
cmp
mov
xor
pop
add
sub
xchg
cmc
cmpsl
fldcw
mov
ja
js
nop
and
loop
arpl
js
loopne
push
jno
sti
hlt
fwait
rol
push
stos
cmc
insl
dec
div
outsb
ret
dec
inc
pushf
cmp
daa
pop
cmp
push
add
sub
test
xlat
push
dec
add
fwait
sub
arpl
test
fwait
sbb
jmp
push
sub
fbstp
cmp
cltd
aam
jl
pop
xchg
jo
stc
in
mov
ret
dec
out
stos
add
nop
push
aas
imul
mov
je
scas
out
rcl
adc
adc
loope
lock
xchg
out
sti
and
icebp
dec
sbbl
adc
pusha
std
sub
mov
ja
lods
sub
sahf
sti
add
leave
push
pusha
and
jne
notb
add
add
add
mov
std
incl
sbb
cwtl
add
add
add
add
and
pusha
xorl
push
je
in
push
enter
mov
push
aad
in
mov
rcrb
jl
in
scas
xchg
in
xchg
fstps
mov
cmp
or
jmp
leave
pushf
dec
stc
xchg
aaa
aaa
cmp
mov
popf
sub
inc
xchg
pop
shlb
adc
pop
inc
pop
and
sbb
sbbl
cwtl
sub
push
out
jb
sbb
mov
jp
ret
in
dec
in
dec
into
sbb
cmp
pop
std
adc
and
pop
xor
push
lods
aad
and
sbb
adc
push
xor
jp
lock
dec
stos
insl
xchg
iret
xchg
and
rcr
lcall
push
in
sbbb
add
mov
push
clc
and
fsubrs
lods
inc
outsl
daa
sbb
xor
push
es
jg
pop
or
xor
pop
leave
and
add
add
add
or
dec
cmp
ret
push
jecxz
mov
mov
loopne
rcrb
or
mov
and
shlb
add
sub
adc
sub
ss
ss
dec
push
adc
fs
popa
cmp
daa
mov
dec
bound
test
jecxz
pop
out
push
pusha
adc
jp
fistpl
and
push
pop
aaa
sysexit
xchg
jl
mov
fcmovu
dec
pop
pop
mov
pusha
fdivrp
leave
add
push
stc
jo
stc
xchg
sar
sub
rclb
jp
scas
adc
adc
mov
fimull
fimuls
loopne
lods
cmp
popf
sbb
xchg
jns
sahf
ja
test
push
inc
int3
mov
popa
xchg
std
test
sub
cld
xchg
test
and
adc
sub
adc
into
adc
scas
lea
push
dec
shlb
dec
cmpsl
push
aam
lea
sbb
hlt
and
mov
and
fcoms
cli
pop
push
clc
or
dec
push
cmp
and
add
add
add
popa
and
shlb
mov
imul
mov
repz
outsb
test
jg
push
xchg
cld
pusha
test
pushf
das
fcoml
jne
jg
add
mov
into
pop
adc
mov
mov
out
outsl
jb
pusha
xor
imul
lods
div
and
mov
into
loop
xor
fadd
sti
bound
pop
xchg
sahf
rcll
out
inc
xchg
imul
sbb
outsl
pop
shll
xchg
or
jl
cmp
jbe
out
repz
insl
dec
push
outsb
not
push
daa
mov
sbb
push
push
les
mov
mov
and
jno
in
les
in
in
loopne
xor
jle
xchg
stos
cltd
jle
adc
call
mov
imul
mov
mov
push
lret
mov
add
add
stc
lods
xor
mov
mov
and
add
add
add
sbb
loopne
inc
xlat
call
push
sbb
jns
and
fidivs
xlat
pop
cwtl
clc
arpl
out
mov
jle
clc
lds
orl
push
jbe
cmp
cltd
int3
fistpl
dec
xor
insb
in
adc
fbstp
cwtl
lods
sbb
dec
jo
daa
xor
or
dec
sbb
mov
lcall
dec
mov
fisttps
dec
in
ss
mov
mov
adc
dec
ds
fstp
pop
push
pop
or
jbe,pn
mov
push
xor
ret
rol
push
pop
test
pop
mov
negb
notl
push
lret
and
mov
jmp
xor
jle
les
dec
ret
ss
popw
gs
add
inc
xchg
repz
inc
ret
sbb
test
jmp
push
jle
jmp
jbe
ss
insl
cmp
inc
xorl
add
add
ficoms
stos
sbb
call
mov
and
add
add
add
add
insl
stos
mov
inc
fwait
push
les
cmpsl
jmp
dec
pop
shr
or
sbb
out
lret
dec
xor
sbb
lahf
cmc
cmp
jo
scas
test
mov
gs
out
dec
push
imull
inc
negb
adc
out
jne
sub
test
jo
lods
repz
xchg
sti
cmpsb
daa
jecxz
sub
xchg
jae
subb
sbb
test
lret
mov
pop
push
movsw
dec
mov
or
add
pop
aam
sbb
jl
inc
sub
into
out
dec
pusha
ja
mov
pop
push
sub
sbb
sbb
push
out
xor
xchg
loop
cmp
cmp
testb
imul
jle
mov
xchg
in
adc
push
mov
aam
incb
aam
ret
add
mov
out
stos
jge
or
ds
addr16
add
add
add
mov
mov
lcall
and
jl
push
mov
leave
addl
scas
push
mov
sub
xor
or
adc
jecxz
mov
fisubrs
pop
ja
stc
psubq
adcl
repnz
mov
daa
into
insl
loop
inc
repz
incl
pusha
add
mov
inc
scas
sbb
jecxz
test
scas
mov
push
jae
cmp
sar
movsl
test
repz
xchg
scas
xchg
pop
in
push
push
test
cmp
jmp
int3
enter
push
xchg
iret
sbb
add
es
or
nop
lea
mov
jo
dec
repz
sub
gs
inc
or
mov
inc
xor
push
mov
dec
in
sub
sti
sbb
cld
mov
xchg
jge
arpl
sub
std
filds
inc
popf
popa
fmuls
push
out
data16
add
dec
or
out
xchg
iret
push
aas
push
cmpsl
insl
push
addr16
add
and
ds
in
stos
inc
mov
shrb
sbb
pop
mov
push
cmp
mov
push
gs
add
and
xchg
rolb
push
mov
std
gs
pushf
mov
mov
pop
rcll
ja
int
xor
and
clc
push
inc
ret
mov
add
xchg
mov
mov
es
scas
sub
jmp
mov
fidivrl
mov
testl
sub
mov
jbe
daa
jno
movsb
cmpsb
loopne
in
lahf
push
inc
dec
push
mov
in
lods
xchg
ret
jo
add
cmp
pop
fisubl
sub
cmpsb
adc
fwait
add
sub
in
jo
xchg
out
aad
and
loop
mov
int3
push
sub
nop
incl
jg
jge
scas
xlat
adc
sub
pop
mov
dec
std
hlt
or
add
add
in
add
cmp
out
loope
jns
fidivs
add
add
add
les
leave
lret
inc
mov
cmc
adc
cmp
jae
test
dec
and
imul
jns
adc
add
mov
mov
jb
shll
xlat
pop
cmp
lcall
fldl
inc
ficoms
inc
push
mov
sbb
addr16
cmp
je
pop
hlt
scas
sahf
mov
repz
cmp
dec
cmp
cmc
xchg
and
rcr
cld
lret
stc
or
out
jmp
sub
addl
mov
cwtl
jo
faddl
dec
mov
push
xchg
jg
sub
das
inc
adc
pusha
shll
leave
pop
mov
and
inc
sti
movsb
inc
ds
xchg
js
jp
dec
test
cld
and
mov
lods
inc
sub
stc
sub
xor
shlb
mov
sub
inc
sub
mov
sti
bound
add
lods
jg
push
mov
iret
sti
xchg
daa
add
add
add
lods
clc
mov
dec
sbb
mov
sub
mov
push
test
push
pushf
std
sbbb
lock
sub
shrl
mov
mov
push
xor
mov
jbe
cltd
inc
push
or
cmp
mov
and
xchg
mov
lods
cmpsl
scas
shrb
mov
pop
push
sbb
roll
mov
fcoms
negb
in
sbb
mov
inc
daa
arpl
popl
inc
sbb
movsb
mov
add
and
cltd
mov
xor
inc
lods
loope
add
and
sbb
data16
add
pop
mov
lea
mov
lods
das
dec
nop
ffreep
jae
scas
push
testl
cmc
std
push
cwtl
and
mov
lock
addr16
cmp
mov
inc
outsb
movl
add
add
jg
cld
ret
add
cmp
add
add
add
ret
cmp
cltd
push
hlt
popf
jb
xor
jbe
jle
rcll
mov
pop
cmp
or
gs
jno
push
adc
and
add
cmp
xchg
shl
orb
adc
cmp
in
inc
in
adc
lods
addr16
sar
pop
sarl
push
inc
cld
into
sbb
xchg
xchg
dec
dec
mov
aas
test
push
mov
add
shrb
in
cmp
jecxz
mov
xchg
neg
sbb
popf
sub
xchg
mov
mov
leave
sbb
ja
dec
jp
mov
jmp
fdivrs
idivb
sti
scas
int
cmp
lods
enter
in
xchg
sub
adc
pusha
and
in
std
cltd
std
push
clc
and
sub
adc
lret
movsl
xor
leave
jmp
loope
loop
sbb
inc
sub
ret
inc
ret
mov
iret
mov
int3
xor
add
add
mov
dec
mov
pop
mov
jp
das
cmp
jmp
or
popa
cltd
lods
mov
stos
mov
arpl
cmc
add
xor
mov
ds
jge
loop
sarl
sbb
push
ret
adc
add
push
mov
xchg
out
mov
fwait
sti
jb
sti
cmp
ja
fwait
les
push
or
jno
and
jp
xlat
and
lods
sub
stos
inc
in
and
imulb
push
test
icebp
adc
jo
and
scas
push
or
mov
sbb
jnp
cli
mov
add
adc
inc
nop
mov
addr16
cli
sbb
shrl
ja
mov
cmp
in
pop
mov
inc
mov
mov
lret
insl
popf
es
mov
pop
test
stos
testb
add
or
jg
arpl
out
cmp
sub
add
add
add
mov
nop
push
mov
mov
or
sahf
jge
mov
lret
mov
bound
mov
jno
pop
lods
pop
icebp
shr
mov
sahf
sub
push
outsl
imul
stos
xor
and
int3
stos
jle
fdivrs
aad
adc
ljmp
mov
dec
mull
shll
cld
es
cs
jge
aas
inc
imul
xchg
aad
xor
lods
out
ss
cmp
xchg
pop
adc
mov
out
les
imul
stos
push
xchg
cmpsb
in
adc
or
mov
cmp
sub
xor
mov
adc
int
cs
jge
or
inc
out
push
mov
dec
in
mov
sub
fdivrs
dec
cmp
cmpsb
cmp
jg
inc
lretw
push
aad
lcall
add
add
xor
clc
cli
clc
sarb
sti
mov
rcl
sub
add
add
add
inc
xor
movups
sbb
pop
dec
jg
repnz
ds
inc
cmc
xchg
cli
dec
lds
xor
push
mov
xor
lcall
mov
out
inc
dec
or
lds
sbbb
mov
lds
in
out
push
into
sub
pop
or
dec
pop
adc
test
pop
shlb
inc
jae
fnstenv
jecxz
mov
movsb
lock
fcmovne
movsb
adcl
mov
adc
es
lods
sub
jns
push
push
jnp
inc
push
jnp
cltd
shr
fdivl
scas
jb
movsl
mov
mov
lds
xlat
jne
mov
adc
inc
jb
std
ds
jl
pushf
cmp
xchg
pop
mov
jnp
mov
lods
push
sbb
daa
cltd
jne
mov
push
scas
jl
add
lcall
out
xor
aam
test
ds
out
test
imul
mov
mov
add
add
add
outsb
mov
jae
jle
mov
xchg
fs
fmuls
ficompl
ljmp
fadd
mov
inc
das
cli
js
outsb
aam
scas
mov
sbb
cltd
mov
icebp
sahf
adc
lea
in
arpl
shlb
int
popl
xchg
and
pop
in
xor
add
push
inc
dec
cmp
cmp
jae
insl
mov
lea
enter
aam
movd
add
push
xchg
mov
cmp
pushf
and
sbb
adc
sbb
or
lahf
inc
sahf
or
jns
int3
push
add
cmp
fists
ss
dec
sbb
jb
bound
xchg
pop
stos
sbb
loope
out
mov
repz
jb
push
clc
inc
test
loop
cltd
adc
add
es
data16
insb
daa
mov
ss
out
ja
sub
add
adc
mov
sbb
insb
adc
aad
out
lcall
sub
push
dec
lret
pushf
test
ds
jb
mov
imul
test
ja
lcall
push
loop
mov
outsl
pushf
xorl
mov
adc
jmp
and
sub
daa
mov
fnstenv
push
clc
daa
sbb
repnz
push
adc
cmp
pop
dec
add
jmp
push
pop
cld
testb
hlt
fdivs
aam
dec
sbb
jne
xlat
xor
push
adc
xor
lret
sub
in
xchg
push
aas
negl
scas
xchg
daa
push
lret
cmp
pushf
ja
push
xor
xor
sub
xorl
loope
fwait
mov
popa
stos
repz
cmpsb
mov
mov
xchg
push
fwait
roll
or
adcb
int
clc
mov
fldcw
add
mov
add
add
push
lods
adc
loopne
arpl
bound
lret
or
cmpsl
nop
mov
mov
sub
movsl
out
push
mov
jmp
nop
push
push
inc
mov
popa
xchg
jge
mov
push
mov
xchg
scas
sub
push
loope
xchg
ss
cmp
cmp
adc
call
adcb
or
adc
pop
lock
enter
push
pop
ret
xchg
cmp
dec
pushf
std
jae
fildll
mov
push
mov
ja
fisttpll
mov
xchg
es
subb
imul
outsl
mov
ss
inc
or
sti
out
aam
mov
rcrb
pushf
jecxz
movsl
xadd
mov
outsl
jnp
loope
cmpsb
and
inc
lds
movsb
mov
sahf
sbb
or
fmull
ss
repz
push
sti
cmpsl
enter
sub
cmc
lock
add
add
add
int3
bound
test
xlat
out
stc
jns
fwait
sar
mov
xchg
push
lcall
mov
mov
stc
dec
sub
ret
iret
fdivrp
sbb
sbb
icebp
xchg
sbb
cltd
pop
mov
add
sti
jp
add
out
les
push
test
scas
pop
cs
scas
push
xchg
mov
mov
addr16
mov
jg
and
ficoml
push
outsl
popf
in
cld
mov
push
adc
dec
xchg
stos
mov
fwait
add
stos
into
xlat
pop
jl
jle
loope
sub
repnz
cmp
addr16
scas
sbb
or
imul
push
ret
push
stos
pop
mov
inc
fildl
sub
into
ds
es
addb
pop
lcall
outsb
adc
and
jle
mov
fistpll
pop
in
xchg
adc
jb
in
fyl2x
mov
sar
mov
xchg
inc
push
and
std
mov
dec
push
jp
je
xor
add
add
add
nop
jmp
outsb
movsl
jnp
jne
mov
daa
shlb
dec
xor
aaa
push
in
sbb
pop
push
xor
blsfill
sub
add
aas
in
ljmp
clc
xchg
mov
mov
push
jle
xor
lahf
push
add
imul
subb
fimuls
jg
add
movsb
stos
push
push
dec
cs
lret
scas
pushf
fstpt
lret
daa
dec
cmp
dec
jge
jns
pop
or
int
lcall
inc
jl
mov
call
std
iret
xor
mov
xchg
je
andl
add
cli
std
xor
addr16
inc
repz
shl
std
or
mov
scas
int
lock
fsts
and
fucomp
gs
out
stos
or
pusha
xchg
lds
xchg
and
inc
and
lcall
add
add
add
dec
lods
mov
and
fisubrs
ja
dec
cmp
out
ficompl
cmp
ficompl
lds
xchg
dec
push
mov
adc
pop
mov
pop
add
sbb
ds
dec
jecxz
out
mov
outsl
pushf
adc
jmp
xchg
fmull
inc
orb
stc
bound
js
adc
aam
xchg
clc
mov
mov
jmp
push
imul
jl
inc
jbe
inc
loop
enter
popa
repz
cmc
push
add
imull
sbb
fwait
cs
ja
pop
sbb
lds
push
dec
in
sub
pop
ret
mov
fs
dec
stc
neg
sbb
pop
push
rol
mov
iret
push
xlat
jb
dec
and
aam
mov
and
mov
insl
in
insb
es
lahf
loope
outsl
aad
ret
push
xchg
sub
sub
pop
inc
ret
mov
imul
add
add
add
xchg
ficomps
cmp
lahf
out
dec
adc
add
add
inc
es
lods
xor
xor
mov
ss
insb
or
faddp
add
les
insl
movsl
jg
scas
cmp
les
push
jae
mov
cmp
cli
push
sarl
test
rcrb
mov
sub
push
fstpt
rclb
popf
addr16
inc
cmpsl
insl
mov
loope
jae
ja
xchg
add
mov
iret
xchg
mov
inc
push
fldl2e
xchg
out
mov
lock
and
sbb
xchg
rclb
and
imul
mov
sub
fsub
push
cmp
in
and
cs
fstl
inc
rcrb
ja
pop
lcall
movsl
rcl
clc
imul
mov
int
mov
add
inc
popa
sbb
cmp
or
dec
jo
inc
repz
add
arpl
ja
sub
add
mov
sub
add
add
add
jns
sub
ljmp
sbb
jge
rcrl
incl
fs
push
cmp
mov
cmc
loope
pop
jnp
adc
lret
packuswb
std
dec
and
xchg
add
xchg
cli
sub
lret
movsb
addl
fs
pop
pop
int
jno
mov
call
or
cli
push
popa
xchg
out
sub
js
sarl
jge
xchg
push
loope
mov
jbe
push
out
shll
adc
inc
scas
mov
jb
inc
cmp
test
out
cltd
sbb
pop
orl
outsl
daa
sub
mov
pushf
pop
pusha
rorl
mov
mov
scas
pop
orb
adc
es
pop
push
push
xlat
jl
mov
dec
dec
cmp
inc
lods
mov
sub
jno
jae
jl
test
add
lret
mov
or
nop
jbe
inc
addr16
add
add
add
mov
icebp
testb
scas
test
push
nop
pop
push
cmp
int3
fs
lea
cmp
in
sub
sbb
repz
sbb
pop
add
scas
popa
not
mov
inc
sar
aad
addr16
jb
insl
jae
hlt
gs
mov
xchg
cli
xor
outsb
mov
test
mov
adc
icebp
stc
mov
int3
lret
cltd
push
add
ljmp
movsb
lcall
jns
loope
dec
or
loopne
ret
add
mov
jge
jo
jl
push
ja
inc
dec
adc
lods
mov
daa
push
xadd
xchg
jnp
push
into
cmp
and
or
cwtl
std
mov
pop
test
cmc
sbb
push
pop
pop
xchg
outsb
inc
nop
add
xor
push
popf
mov
repnz
fnstenv
cmc
and
xor
push
test
add
add
sti
pop
jge
neg
hlt
add
dec
addr16
add
and
jg
mov
cmp
xchg
int
push
push
pop
arpl
sub
pop
mov
sub
xchg
push
pop
and
add
hlt
xorl
jge
jmp
jne
cmp
subb
fcmovnu
adc
pop
sbb
outsb
shll
pop
push
mov
jno
hlt
mov
mov
mov
push
and
xor
in
gs
add
inc
jp
leave
inc
test
xchg
or
push
mov
insb
jne
repnz
pop
in
push
xchg
push
add
pop
ret
mov
jnp
int3
and
scas
or
pop
jge
js
xor
lods
and
adc
inc
xor
xchg
push
stos
ss
aam
out
and
stc
sbb
mov
lret
imul
mov
gs
sub
sbb
add
sbb
adc
add
fsub
std
in
popf
in
stc
jmp
mov
outsl
push
add
add
add
int
stos
roll
push
push
cmpsl
ret
repz
sub
out
test
insl
and
sub
scas
les
jp
add
orb
jge
aad
dec
loope
push
dec
sub
xchg
xchg
xor
fadds
divb
aas
push
add
ja
enter
rorl
push
outsl
inc
add
mov
push
aaa
popa
lds
clc
jle
adc
ja
mov
pop
cli
das
jecxz
inc
fwait
stos
push
je
cmp
jnp
aas
cli
sub
es
sbb
pop
aas
stos
inc
cli
jmp
sub
and
push
mov
flds
fwait
loopne
xchg
mov
add
loope
aas
xor
mov
push
rol
lcall
js
call
xchg
adc
xor
xchg
add
xor
notb
xchg
jae
jmp
adc
jo
add
add
jp
jnp
sti
xchg
jle
jp
lods
push
arpl
add
add
add
test
mov
jns
inc
cmpsb
or
adc
push
and
in
mov
clc
mov
lret
das
fucomip
or
negb
in
popf
xchg
loop
pop
sub
mov
inc
lret
lcall
push
jl
mov
sub
std
xchg
ljmp
jo
cmpb
bound
inc
lret
inc
add
add
stos
pop
sbb
mov
subb
popa
add
xchg
shl
push
or
jb
add
push
fimull
lret
idivl
jg
fiadds
pop
adc
clc
pop
dec
in
js
pop
sbb
dec
out
add
adc
ss
jl
xor
inc
jb
and
decb
adc
sbb
out
lcall
sbb
pop
out
jbe
int3
pop
or
movsb
xor
jmp
and
xor
inc
mov
dec
jg
adcb
add
mov
push
sti
decb
mov
in
cmp
add
add
add
jno
mov
stos
lcall
inc
add
jo
and
cmc
bound
popf
daa
insl
rcr
cmp
sub
adcl
mov
cmp
pop
mov
cmovb
ficoml
push
cmp
dec
inc
ja
lret
in
sub
nop
push
mov
and
fucom
in
mov
mov
andb
adc
add
rorb
inc
push
rcr
mov
cmp
pushf
fdiv
mov
gs
cmp
sarl
int3
dec
faddp
add
adc
inc
orl
aas
push
ret
pop
out
pop
mov
in
pop
scas
out
jns
mov
je
addr16
push
xlat
dec
mov
aas
push
out
or
outsb
fildll
lret
sub
call
push
inc
adc
iret
insl
addb
shrl
mov
sar
dec
pop
inc
movsb
shll
pminsw
pop
std
add
add
push
ret
cmp
xor
hlt
adc
pop
js
cmp
add
add
add
mov
ret
mov
mov
xchg
aaa
pushf
and
fs
jecxz
fstl
fnstsw
sub
daa
xor
dec
cmp
mov
or
pop
xor
fsubs
incb
xchg
jne
adc
scas
pop
sub
or
xchg
push
dec
mov
test
ljmp
mov
cltd
addr16
int3
push
hlt
and
sarb
aas
mov
push
adc
aaa
pop
movb
jb
les
inc
icebp
cltd
jle
pop
sub
rcll
jne
ret
sar
mov
push
rcrb
aas
adc
or
insl
inc
push
jge
lahf
das
or
xlat
jb
mov
cwtl
sbb
std
cmpsb
cs
pop
dec
ss
jl
int
cld
loop
lcall
addr16
repz
enter
dec
daa
mov
lds
cmp
scas
jle
incl
add
add
add
cmp
jge
stos
lea
shrb
dec
push
cmp
add
add
add
arpl
jecxz
add
pushf
or
pop
push
outsl
and
in
std
sbb
jge
inc
pusha
and
scas
std
sbbb
sub
adc
das
psrld
mov
xor
roll
mov
movsl
add
jnp
mov
mov
inc
aam
lret
mov
shr
lock
in
add
cmpsb
sbb
dec
das
push
push
shrl
call
jbe
adc
mov
cmp
dec
adc
iret
sub
pusha
lds
loope
cmp
int3
pop
scas
fwait
jp
das
or
jmp
cmc
xor
rol
cmpsl
cmpsl
mov
aaa
dec
rcrb
out
pop
inc
frstor
pop
or
sub
xor
rol
xor
adc
xchg
add
fdiv
or
sub
lahf
or
xchg
adc
push
sbb
and
lea
jecxz
pop
cmp
iret
and
mov
add
divb
rclb
nop
lcall
cmp
add
add
add
dec
push
out
daa
clc
je
cmpsl
jecxz
push
inc
inc
insl
jnp
push
lods
push
enter
in
mov
addr16
pop
scas
into
pop
or
enter
std
lahf
sti
int3
lods
mov
scas
hlt
mov
dec
or
lds
les
data16
add
lret
mov
int
push
add
je
xor
mov
ljmp
add
movsb
mov
lock
aaa
dec
scas
add
je
jne
loop
bnd
cli
inc
add
sti
cld
and
mov
inc
out
clc
pop
test
jne
dec
arpl
ficompl
scas
push
lahf
sbb
into
mov
popf
jnp
push
and
mov
cmp
add
cmp
add
jmp
iret
adc
imul
lret
lds
outsb
mov
std
int3
sub
inc
jns
dec
jl
dec
jbe
idivl
or
movsb
pop
scas
addr16
add
add
add
pop
jmp
add
xor
pop
ja
pop
das
push
aad
xor
jbe
mov
and
and
add
cmpsl
pop
xor
das
test
sub
dec
xchg
mov
mov
pop
mov
push
rclb
bound
adc
testb
movsl
mov
inc
insb
mov
leave
pop
cltd
add
pop
sub
dec
std
lahf
aad
or
xchg
lock
loop
aam
and
cltd
pop
dec
andb
jmp
iret
das
fildll
inc
fwait
pop
dec
sbb
cltd
cmc
lea
pop
lret
jge
add
jae
inc
out
test
add
xchg
cs
inc
js
push
lods
dec
cmp
mov
xor
dec
sub
push
xchg
imulb
fisttpl
pop
insb
pushf
or
sbb
aam
pop
sbb
and
js
adc
out
jmp
and
outsb
sub
stos
fs
jmp
leave
aas
lcall
add
add
add
lds
mov
fldenv
ljmp
ljmp
aaa
lret
pusha
sub
arpl
enter
mov
lret
cld
out
iret
xchg
sti
rolb
jg
lea
les
fistpl
stc
xor
inc
mov
add
mov
andb
jbe
lea
shrb
fcomip
dec
leave
jnp
pop
test
loop
mov
or
mov
popa
addl
aaa
mov
mov
cld
insb
jecxz
sbbb
insb
pushf
ret
or
shlb
mov
data16
push
sbb
and
dec
cmp
jmp
inc
je
call
jmp
add
adc
lds
enter
arpl
xor
dec
xchg
inc
push
pop
sbb
lret
ds
dec
push
add
xchg
sbb
add
out
movsl
mov
jmp
xchg
pop
les
scas
fistpll
outsl
gs
jecxz
add
add
add
lock
ds
cmp
or
pop
sub
push
nop
jb
inc
dec
cmpsl
sti
and
cmp
add
ljmp
mov
sti
int3
mov
and
divb
sti
jne
push
icebp
dec
pop
xor
imul
fdivr
decl
repnz
or
jmp
out
pop
in
xchg
fdivs
ror
jne
inc
loope
cmpxchg
push
push
lahf
pop
push
inc
sub
jp
loopne
cmp
int
lret
adc
mov
pop
out
ficompl
ja
dec
push
push
idivl
sub
lahf
adc
mov
push
out
dec
sub
mov
out
push
dec
jb
pop
fnstsw
lret
testl
dec
and
push
outsl
insb
sub
and
or
into
push
mov
xchg
pop
aas
sbb
add
add
sbb
jnp
jnp
cmp
movsb
push
sbb
lcall
add
add
xor
arpl
jnp
frstor
xchg
xchg
or
insl
pushf
xchg
add
push
sub
and
aad
andb
dec
popf
sahf
mov
add
shlb
push
lods
test
in
cmp
and
inc
aad
clc
data16
stos
stc
jmp
sbb
hlt
add
sbb
lock
int3
mov
sbb
sbb
je
push
xchg
enter
ret
adc
fmul
jecxz
mov
push
mov
iret
lods
pop
push
cmp
pop
mov
ret
xor
or
ficoml
repz
daa
xchg
loop
inc
xchg
pusha
mov
sbb
addb
fcomip
sarl
push
out
pop
stos
jns
hlt
pop
test
push
jmp
inc
lods
jne
mov
bound
jl
mov
call
cli
test
push
or
push
and
fldcw
add
add
outsl
lret
mov
out
jmp
push
cwtl
mov
add
add
cs
stos
dec
je
ss
xchg
ret
lods
pop
lret
jbe
xchg
jl
push
adc
cs
jg
xorps
orl
lods
adc
lods
pop
cltd
add
sub
test
fstpt
shll
and
out
scas
popa
lock
inc
sub
and
in
fbstp
in
pop
fldenv
shl
pop
pop
push
rorb
push
xchg
mov
add
lds
mov
in
jae,pn
sbb
js
dec
jbe
ret
arpl
dec
inc
daa
push
cmp
mov
cmp
arpl
cld
cmovs
xor
std
in
jo
push
fs
add
push
andb
push
sbb
push
test
fs
adc
mov
jge
pop
ficoml
jp
or
push
dec
pop
add
mov
jbe
aam
push
xchg
outsl
pusha
xor
cmpsl
scas
mov
mov
add
and
test
or
xlat
mov
xchg
pop
outsb
stc
xchg
sub
int3
in
add
add
repz
cmp
lods
repz
mov
testl
add
add
add
xchg
sbb
jnp
lret
adc
xor
cmp
lret
dec
push
pop
push
cmc
xchg
fidivs
xor
jmp
out
out
sarb
dec
and
jmp
jbe
cmp
mov
xor
push
inc
jge
cmpl
mov
add
popa
clc
imul
mov
imul
in
cmpsl
enter
cmp
xor
lret
loope
iret
push
mov
mov
mov
iret
or
arpl
mov
insl
jmp
addb
cwtl
or
xor
and
or
cmp
or
ffree
repnz
outsl
ja
jae
in
dec
mov
aad
lds
xor
lds
es
dec
repnz
call
pop
cli
jae
movsl
push
insl
subb
int3
aas
daa
push
cld
push
std
jmp
dec
push
out
adc
add
add
add
cmp
pop
and
xchg
inc
lods
testb
pushf
in
xor
cmp
jl
xor
push
mov
hlt
movsb
lods
in
das
adc
mov
xor
pop
inc
jns
pop
xor
shrb
inc
jns
mov
xorb
jecxz
dec
push
push
add
lret
jbe
pop
aaa
das
mov
orl
ljmp
jle
or
dec
cmp
add
pop
adc
pop
mov
adc
cwtl
jmp
sti
adc
mov
lods
add
sub
jno
lret
mov
adc
enter
jo
and
int3
mov
in
cld
xor
imul
into
sbb
pop
es
pop
or
decb
xlat
xchg
pop
shr
pop
jge
jmp
lods
stos
shrl
or
sbb
fsts
clc
mov
jb
sub
or
arpl
jne
push
and
dec
push
add
sbb
dec
push
out
aad
pop
iret
sbb
inc
add
add
add
mov
sbb
iret
push
cmp
aam
jg
dec
adc
cmpsl
and
mov
test
dec
xchg
push
dec
call
lods
insl
sbb
aam
push
inc
jo
clc
fdivr
and
inc
adc
scas
mov
push
in
pop
shrb
aaa
mov
sub
pushl
enter
ret
cmpsb
push
das
dec
repnz
mov
into
test
fnstcw
dec
enter
push
outsb
mov
or
les
pop
nop
iret
into
push
insb
pop
push
xchg
leave
pop
jno
mov
ret
ljmp
cmp
xchg
pop
cmp
mov
jno
repz
in
addr16
fxch
aas
hlt
jno
imul
inc
mov
push
jo
stc
jae
sub
out
adc
dec
stc
fs
mov
addr16
adcb
push
jmp
xchg
mov
and
lock
shrl
add
add
add
idivl
or
pop
es
addr16
add
add
add
cwtl
xchg
mov
mov
or
dec
out
xchg
jecxz
and
outsb
and
aas
jecxz
mov
jb
mov
dec
mov
inc
mov
in
in
sahf
jecxz
mov
pop
out
imul
mov
dec
add
lods
movsl
add
mov
mov
mov
add
or
lret
lock
stc
adc
lahf
lcall
cltd
mov
mov
sub
pop
daa
cld
xchg
adcb
mov
fwait
outsb
xlat
pop
and
mov
mov
popf
fldt
out
jno
push
or
push
push
flds
cmp
and
xor
jle
rolb
lock
pop
mov
popf
ret
imul
jmp
pop
jmp
call
dec
pop
jmp
stos
xchg
inc
pop
inc
es
test
daa
mov
jae
xlat
adc
mov
sti
lret
pop
mov
ja
jg
xchg
orl
bound
add
add
add
lcall
and
jae
mov
cwtl
adcb
xor
xchg
out
xchg
pop
mov
jae
cmovle
xchg
aas
dec
addr16
inc
pop
call
xor
jle
fldl
xchg
into
add
std
lcallw
xorb
popa
out
movsb
lret
adc
xor
loope
lret
lret
mov
or
xchg
pop
jns
pop
xlat
js
inc
or
clc
push
out
jg
out
dec
push
popa
sahf
stc
outsb
push
test
ret
xor
pop
sub
mov
clc
out
ja
loope
pop
mov
hlt
sbb
mov
adc
push
imul
mov
mov
popf
push
or
push
cs
adc
lcall
dec
iret
insb
and
pop
daa
add
shrb
arpl
dec
movsl
imul
adcb
adc
stc
adc
and
dec
lret
jmp
imul
aaa
je
mov
add
add
add
inc
xchg
sbb
sti
dec
push
in
xor
sub
mov
mov
inc
jl
sub
xor
pop
fcmovu
inc
cmp
inc
je
lret
cmp
cmp
pop
pop
or
xor
or
mov
stc
cltd
inc
mov
mov
adc
out
mov
int3
push
repz
mov
xor
in
out
and
lds
pop
in
ja
mov
repz
push
sbb
lea
mov
arpl
or
adc
adc
inc
enter
negl
inc
mov
sti
fcomps
mov
enter
cwtl
inc
dec
hlt
cmp
sub
jl
pop
cmc
mov
test
cmpsl
inc
scas
xchg
sub
jg
xchg
sarb
push
jns
mov
inc
mov
push
pusha
or
loopne
mov
lret
jbe
add
add
cwtl
loope
std
jge
cwtl
xchg
push
sub
insl
pop
adc
inc
add
add
add
outsb
call
std
and
xchg
mov
mov
imulb
pop
xchg
fisubs
jmp
in
sub
push
js
orl
out
cmp
gs
lods
xchg
int
cmp
test
test
jg
add
fisubl
dec
sti
loop
xchg
ss
movsl
push
dec
iret
js
jnp
mov
mov
inc
sub
aas
sbb
xchg
cmp
inc
aad
cmp
cmp
adc
mov
push
sahf
sub
and
sub
adc
pop
adc
loopne
or
xchg
push
jmp
cs
mov
loopne
inc
fucomp
sarb
push
test
das
sbb
jb
ljmp
faddl
mov
mov
daa
push
or
mov
xchg
xor
ljmp
add
sub
jns
xor
jg
std
mov
add
add
add
stos
mov
and
insb
jbe
repnz
ror
sub
cmpsl
add
sbb
xchg
or
sub
mov
sti
cmpsl
mov
cwtl
out
loope
movsb
push
out
inc
mov
mov
xchg
push
jg
arpl
jno
cwtl
xchg
movsl
jb
aaa
pop
jle
xchg
lods
js
repz
jl
sbb
xchg
sti
loop
lahf
stos
nop
or
mov
and
stos
in
lock
push
movsl
xor
daa
iret
cmp
push
push
subl
shrl
sbb
dec
pop
mov
js
cmpsl
dec
xor
mov
push
std
adc
loopne
xchg
xor
mov
je
xor
jl
imul
stos
movsb
and
js
or
andb
adc
mov
test
mov
adc
jecxz
out
adc
repnz
dec
jg
es
out
jbe
shlb
add
popf
pushf
jmp
js
ret
jg
decl
rol
jae
add
dec
add
add
add
popa
dec
jge
sbb
ja
fimull
scas
sub
mov
dec
mov
mov
nop
cmp
xor
dec
leave
aaa
rcl
pop
push
rorb
inc
lahf
mov
cwtl
aam
or
push
xchg
push
xchg
fs
jmp
cmpsl
test
dec
pop
or
shl
xor
xor
cmp
push
add
inc
test
pop
add
popf
test
sbb
push
inc
cwtl
daa
aaa
or
adc
push
inc
shll
jp
cltd
jae
mov
inc
fsubs
mov
pop
adc
nop
mov
add
cmp
mov
je
push
push
lret
mov
dec
std
inc
mov
shll
inc
or
pop
lcall
jns
fstl
mov
sub
inc
or
in
xor
add
fimuls
or
mov
out
sbb
sub
orb
add
adc
mov
out
aad
in
add
addr16
add
add
add
loope
bound
out
pop
and
or
push
sbb
push
addr16
addr16
sti
imul
dec
pop
repz
shrl
mov
sub
scas
icebp
imul
xor
add
jle
sbb
in
fnstcw
scas
cmp
test
dec
mov
mov
test
sub
xchg
gs
stos
or
scas
mov
cwtl
outsb
popf
xchg
push
pop
add
repnz
and
lret
fwait
push
test
inc
cmpsl
data16
scas
cmp
fdivrl
shl
add
mov
movsb
aaa
dec
cmp
add
sbb
les
movsb
jmp
inc
inc
repz
out
lret
sub
inc
test
dec
stc
movsl
pop
push
mov
pop
jb
pop
pop
bound
roll
and
sub
jecxz
ljmp
inc
icebp
hlt
gs
dec
adc
mov
add
add
add
mov
jecxz
outsl
xchg
mov
xchg
jle
mov
adcl
hlt
dec
outsl
fimuls
jae
inc
mov
loope
addr16
cmpl
or
in
addr16
sbb
outsl
adc
mov
mov
xor
repz
pop
stos
testb
xor
shrl
dec
fistpl
mov
in
sbb
adc
or
lret
jmp
push
xchg
in
cs
inc
sarl
mov
scas
gs
inc
sub
jbe
mov
pushf
pop
pop
pop
nop
subb
movsl
lret
xchg
popa
mov
push
xchg
add
test
jg
or
hlt
xor
xor
in
cmpsl
inc
in
or
aam
out
out
out
cmp
cmp
leave
shlb
add
aas
gs
pop
repnz
dec
add
add
add
push
pop
sahf
or
push
testb
dec
hlt
and
xchg
cmp
out
les
fcompl
daa
out
dec
in
adc
int3
data16
cmpsl
xchg
std
mov
cmpsb
mov
adc
pop
fwait
dec
mov
cmp
jmp
ljmp
mov
fs
sbb
repz
nop
popf
mov
lret
push
pop
sti
sub
jle
out
lods
push
insb
fcmovb
jmp
push
in
mov
ret
shl
mov
and
in
mov
bound
push
mov
insl
add
rcr
mov
test
movntps
sbb
popa
and
mov
jnp
jae
sbb
andl
mov
loop
flds
repz
or
insl
mov
mov
aaa
mov
sbb
stc
mov
out
fisttpll
lock
ret
add
add
add
nop
add
mov
in
mov
gs
mov
and
inc
iret
enter
repz
add
idivb
xor
test
fdivr
pop
ss
cmp
lock
sub
sub
sbb
pop
xlat
push
and
push
jp
cld
aas
or
xchg
push
sub
adc
fidivl
or
cwtl
fstps
ljmp
aas
pop
movlps
dec
addr16
cmp
fwait
add
mov
push
push
inc
jmp
jl
xor
jb
sbb
adc
sub
out
mov
hlt
xchg
pushf
adc
xchg
xchg
mov
sub
in
jno
adc
iret
stc
xor
xchg
stos
mov
sub
jno
dec
add
fiadds
dec
shl
movsb
push
jecxz
jno
outsl
jne
pop
repz
xor
cmpsb
lds
lods
fildll
mov
ljmp
add
add
add
cli
jecxz
xor
sub
movsl
cmp
cmc
adc
xchg
jbe
adc
cmp
and
mov
xor
xor
outsl
or
movzbl
pop
std
ret
and
insl
mov
mov
out
fidivrl
enter
inc
mov
mov
pop
adc
mov
lods
inc
rclb
out
pop
inc
outsl
push
int3
sub
in
mov
popf
mov
ret
clc
cmp
mov
insw
mov
xor
cs
xor
xchg
clc
jg
pop
sub
mov
cli
jecxz
sub
push
ljmp
loopne
lods
cltd
sub
mov
pop
cmp
stos
pushf
xchg
cmp
test
sub
push
push
jg
pop
add
mov
ds
pop
xor
stos
gs
andl
aam
mov
jns
scas
adc
loopne
outsb
sub
mov
push
sbb
jmpw
fnstcw
jo
sahf
jb
and
add
add
add
and
mov
mov
add
cmpsb
mov
ja
clc
in
lahf
sbb
mov
pop
or
add
jb
ss
inc
aaa
push
outsl
xchg
lods
std
pop
in
aam
shrl
mov
inc
ror
insb
push
mov
dec
push
adc
cli
je
dec
ljmp
sbb
mov
xor
sbb
aas
ret
inc
adc
push
xchg
lods
lret
jecxz
xchg
jo
fwait
jmp
jne
sbb
xchg
mov
push
cmp
push
das
xchg
lret
fistps
push
mov
lcall
shlb
push
pop
popa
outsl
pop
jecxz
jge
in
adc
add
ret
dec
inc
cmc
jle
mov
dec
stos
pop
cmpsl
mov
ret
test
sbb
ficoml
xchg
dec
sarl
ret
add
cmp
imul
out
mov
mov
mov
jnp
push
add
add
add
mov
ds
sarb
ret
push
cmp
movsl
jg
decl
dec
in
push
push
add
mov
test
xchg
pop
jns
outsb
lods
vorps
push
sub
dec
aam
jp
stos
add
test
sub
dec
pop
add
mov
add
imul
dec
leave
in
dec
xchg
popa
mov
mov
aas
cwtl
mov
mov
sahf
lods
leave
push
sti
xor
fldenv
insb
inc
in
push
add
mov
push
data16
lea
sar
pop
cmc
ja
mov
or
mov
fsubrp
xchg
xchg
xor
xlat
popf
pop
filds
loop
stos
cmp
push
shrl
iret
mov
lock
push
push
dec
cmp
cmp
add
cwtl
decb
in
fisttps
mov
test
fxam
fs
int3
popa
ja
and
jmp
inc
xor
js
add
dec
stc
mov
ljmp
addr16
add
add
add
ljmp
ss
mov
rcll
loope
sbb
shrl
inc
pushf
add
loop
mov
out
cli
jbe
cli
dec
jmp
mov
lods
push
push
leave
dec
push
mov
mov
and
sbb
sti
jle
dec
movsb
in
pop
sbb
mov
inc
adc
rorb
xchg
cmp
add
cmp
jp
dec
push
cmp
in
sub
arpl
loop
mov
jae
outsb
mov
in
adc
in
sti
xlat
jns
or
ds
mov
fwait
mov
gs
jmp
adc
andb
fsubl
imul
cmpsl
out
mov
ret
dec
into
jns
push
js
lds
out
jge
adc
popf
fcoms
jl
cs
cmpsb
jl
dec
fidivl
xchg
inc
loopne
das
pop
or
call
and
xor
lods
mov
add
add
jg
cld
lcall
shll
add
add
add
mov
lcall
out
scas
shll
pop
test
mov
jno
xor
jne
fsubs
cld
pop
mov
dec
shlb
pop
fsubl
jmp
push
push
js
dec
jno
jmp
xchg
and
mov
lods
addr16
dec
insb
aas
enter
push
aad
cmp
fbld
aad
lock
cmp
mov
or
popf
and
mov
push
cwtl
fcompl
out
and
stos
insl
lcall
stc
jae
je
in
sub
lock
fildll
mov
or
adc
and
arpl
rcr
inc
pop
cli
in
stc
mov
cmp
cmp
insb
fs
int
shll
outsl
pop
and
clc
adc
stos
mulb
jp
gs
sarb
xorl
ret
add
mov
xchg
mov
pop
adcl
add
leave
jne
fcoml
mov
mov
jmp
test
cmp
xchg
scas
nop
pop
xor
fsts
push
sub
pop
pop
and
xchg
in
inc
xor
testl
jmp
jle
or
or
push
jns
xorl
and
pop
movsl
lods
repnz
push
movsl
ds
repz
loope
repnz
lock
push
sbb
cltd
push
push
movsb
out
lret
fsubrl
data16
mov
scas
inc
daa
mov
adc
loope
daa
push
xchg
jns
xchg
pop
into
cli
cmpsl
jle
mov
mov
jl
aas
hlt
rcl
sub
cmp
movsb
lea
ds
inc
mov
sub
loope
rclb
xchg
test
ljmp
inc
insl
jp
mov
enter
sbb
fisttps
pop
sub
or
or
mov
and
adc
addr16
add
add
add
ja
inc
dec
into
adc
scas
mov
cs
pusha
add
sub
sti
mov
xor
insl
lret
push
dec
rcrl
ss
or
roll
xor
test
mov
pop
scas
lcall
imul
xor
pop
sahf
ja
sub
xor
push
mov
dec
inc
dec
push
pop
mov
outsl
jmp
dec
adc
loop
loopne
xor
call
sbb
push
mov
fwait
xchg
jle
adc
add
incb
into
sbb
inc
mov
push
mov
sbb
loop
stc
xor
sub
fs
cmp
xlat
sti
push
bound
ja
mov
jecxz
cmpsl
in
pop
mov
outsb
dec
xchg
stos
frstor
jo
jns
cmpsl
push
sub
daa
fs
mov
mov
aam
popf
jge
xchg
mov
push
mov
pop
in
insb
push
test
add
fsubrl
mov
out
cmp
ret
or
sbb
add
add
add
mov
push
sti
pop
out
in
scas
xor
outsl
icebp
scas
ljmp
lds
xor
lods
push
sbbl
in
xchg
roll
mov
push
and
ret
inc
addr16
roll
push
clc
sub
inc
out
and
inc
pop
lahf
ja
push
pushf
insb
inc
divb
xchg
insl
ljmp
sub
rcr
and
bound
dec
fdiv
jb
jbe
dec
fsubrs
push
push
aad
mov
iret
test
out
adc
loope
add
lds
test
push
add
or
dec
mov
xor
int3
repnz
sbb
sahf
inc
inc
in
mov
ds
ret
mov
jae
adc
xor
mov
cmp
sbb
mov
fwait
int3
mov
add
pop
xchg
inc
or
xchg
shll
cmc
sahf
xchg
out
loopne
sbb
and
dec
dec
mov
enter
cmp
sbb
add
add
push
shll
out
pop
pop
pushf
push
jl
pop
inc
addr16
add
add
add
popa
loope
outsb
xlat
int3
mov
sbb
and
test
popf
mov
shlb
fldcw
lds
dec
jg
pop
xlat
dec
imul
incb
test
xchg
jno
add
xor
aam
mov
pop
jp
jbe
paddusb
or
mov
mov
outsl
jle
rcrl
mov
dec
sub
rol
mov
mov
sti
loop
push
repnz
and
cmpl
and
or
arpl
adc
sbbl
push
jmp
adc
repz
mov
aad
ss
and
outsb
xchg
cmpb
pusha
das
addb
add
sbb
mulb
rorl
push
sti
jp
jl
ljmp
mov
adc
ljmp
add
add
out
lcall
hlt
mov
nop
movsl
mov
add
add
sti
pop
and
in
or
fcmovbe
outsb
cmp
aas
jns
in
inc
dec
xchg
push
pushf
xchg
sbbl
loope
in
jnp
sbb
pushf
and
or
idivb
aaa
fwait
pop
jp
sbb
cs
mov
std
sbb
mov
test
sub
sbb
hlt
mov
adc
xlat
dec
movsl
cmpsl
lods
mov
enter
push
inc
sbb
cmpsb
push
mov
xchg
mov
ret
sbb
mov
inc
add
xlat
push
pop
inc
inc
js
loop
jae
xor
dec
test
push
add
ficompl
jns
cmp
push
mov
add
ret
adc
sbb
subb
push
gs
dec
add
mov
push
das
xchg
enter
fwait
lret
loop
add
add
jbe
idiv
imul
sbb
test
add
add
stc
dec
sbb
mov
leave
xchg
xchg
int3
inc
ror
mov
outsl
jno
pop
mov
mov
mov
cmp
movsb
pop
push
xor
mov
les
pop
ja
or
rcll
dec
mov
push
push
out
pop
jnp
mov
adc
stos
mov
mov
pop
test
sbb
inc
jae
mov
repnz
in
std
out
dec
and
xlat
movsb
dec
int3
lods
es
stos
xchg
adc
inc
pop
xor
addr16
scas
inc
add
sbb
ss
mov
clc
mov
dec
fnstsw
jbe
lret
add
mov
lock
push
or
jge
sbb
pop
xchg
push
push
loope
xcrypt-ofb
cmpsl
stos
movb
mov
idivl
call
push
push
aas
sarb
jae
fwait
cmp
stos
sarb
addr16
add
add
add
pop
xor
jns
mov
mov
sub
rcll
fwait
sub
int3
fiadds
cmp
orb
xchg
push
jno
mov
test
hlt
pop
fwait
add
out
lret
pop
iret
pop
shlb
test
jmp
ss
mov
cmpsl
insl
jg
cli
adc
subb
test
or
push
hlt
pop
cmp
js
and
jns
nop
adc
push
inc
shlb
call
fidivrs
mov
shrl
jne
flds
cmp
pop
fsubs
pushf
sub
jmp
std
cmpsl
jnp
in
sub
or
out
mov
cmpsl
pop
cmp
mov
mov
adc
dec
mov
push
inc
cmp
jo
mov
jmp
ret
sbb
aaa
jecxz
rol
sub
cli
lret
loop
inc
push
clc
mov
and
hlt
xor
add
add
add
mov
jnp
imul
fcomps
daa
fldl
call
ss
fmulp
push
stc
or
pop
mov
std
pop
pop
sbb
mov
jnp
cmp
lock
lret
or
stos
inc
test
mov
jl
out
clc
adc
data16
cli
pop
xchg
mov
sub
pop
cmp
mov
divb
push
sub
cwtl
xor
lret
ret
mov
push
and
ret
adc
and
sbb
and
mov
test
mov
bound
adc
push
lea
fisttpl
sbb
adc
lret
sbb
mov
mov
and
xchg
add
mov
mov
push
dec
jmp
cmp
lock
outsb
les
pusha
out
inc
jne,pn
imulb
fimuls
es
pop
scas
test
mov
mov
mov
jge
hlt
adc
pop
scas
xchg
push
adc
out
mov
aad
push
xor
pop
add
add
add
inc
xor
pop
jp
mov
gs
lods
inc
lock
iret
cmp
jns
mov
cli
jne
mov
popl
jmp
jge
subl
add
test
pop
inc
les
pop
in
dec
jae
mov
xchg
fcomps
popf
add
les
in
inc
inc
movsb
cmp
pop
push
mov
jae
sbb
xchg
push
xchg
dec
sub
jl
pop
jbe
arpl
mov
scas
pop
popa
popa
xchg
cld
sbb
sub
xchg
pop
sub
inc
and
or
ret
add
inc
or
pop
cmp
xchg
lcall
xor
pop
out
sub
arpl
cmpsb
sysenter
mov
push
aam
or
test
test
sub
ljmp
mov
mov
daa
jno
add
add
mov
lds
aad
fldcw
add
add
add
loope
mov
sub
insl
add
mov
jle
or
in
push
shrl
mov
lahf
mov
icebp
inc
push
nop
pop
outsl
sbbb
pushf
les
inc
adc
mov
cmp
daa
pop
mov
add
mov
sbb
pop
imul
mov
es
es
xor
pop
jne
xorl
cltd
jmp
sbb
pop
pop
int
pop
pushf
cmpsb
and
ljmp
in
pushf
repnz
adcl
cmpsl
and
out
xor
cli
in
loope
cmp
adc
fwait
lcall
inc
xor
jnp
cmp
adc
lock
iret
mov
ljmp
in
hlt
stos
dec
lock
jno
xor
fs
je
dec
mov
mov
test
add
mov
pusha
popf
scas
ljmp
add
add
cmp
or
sub
rorb
xchg
popf
in
sub
adcb
mov
cmpsl
rcrl
and
push
jl
ds
das
inc
cmp
fcmovnbe
push
mov
or
rcrl
mov
or
cmpsl
add
adc
or
mov
jnp
push
pop
test
mov
cmp
mov
idiv
in
es
jge
movsl
out
add
mov
adc
arpl
adc
movl
lcall
popf
inc
clc
out
xchg
mov
sbb
xchg
dec
pop
lea
ret
xchg
in
push
inc
xor
adc
aad
nop
test
push
add
or
std
shr
mov
cld
fnstenv
pop
adc
mov
shll
jmp
jg
sbb
push
mov
in
and
add
add
movsb
jae
jnp
mov
ja
mov
in
aad
pop
add
add
add
decb
cmpsb
test
mov
adc
lcall
pop
inc
jle
push
out
add
lret
mov
insb
fninit
jns
push
ja
sub
mov
jg
jg
sub
mov
dec
jb
ja
dec
push
jo
dec
inc
or
orb
sbb
mov
lret
push
add
or
in
hlt
movsb
cmpsl
push
xor
add
shrl
scas
xor
and
cld
fsubr
sbb
int3
stos
xchg
mov
mov
inc
dec
mov
stc
scas
mov
scas
mov
pop
loope
jne
sbb
mov
add
xchg
popa
jae
xor
mov
leave
mov
cmp
cmc
jge
mov
pop
lods
loop
mov
cmp
mov
les
xchg
sub
inc
mov
rdmsr
mov
push
pop
sahf
push
dec
rclb
add
xor
xlat
out
cld
add
pop
lock
add
add
add
xlat
adc
mov
mov
or
dec
push
mov
pop
and
mov
into
fs
pop
cmp
test
xchg
push
dec
push
ds
pushf
sbb
push
cli
jl
push
sahf
daa
and
iret
cmpsl
sbb
loope
jp
add
insb
cmp
mov
add
shl
add
jno
lcall
rcll
push
mov
shr
mov
out
test
dec
jnp
sbb
rclb
xor
push
sbb
dec
jge
ljmp
mov
outsb
pop
in
fcoml
push
negb
cmp
ret
sub
loop
sbb
xchg
cmp
or
mov
xchg
adc
pusha
pop
sti
bound
pushf
repz
jns
iret
xchg
js
and
mov
and
rcrl
mov
mov
in
mov
add
add
add
mov
loop
lret
mov
imul
or
data16
xchg
xor
adc
add
mov
mov
je
sahf
pop
add
inc
int
sbb
aaa
rcrl
jmp
jl
jl
add
outsl
bound
sub
fsubrl
ret
filds
arpl
jb
push
sub
sbb
test
das
adc
hlt
xchg
mov
inc
lods
je
stc
mov
push
out
popa
inc
mov
mov
mov
mov
sub
cld
popf
test
pop
dec
xchg
jmp
inc
cmc
ficompl
push
mov
pop
repnz
push
and
mov
jmp
add
jns
imull
xchg
sub
cmp
or
mov
pop
add
aam
jmp
aas
les
inc
aam
leave
xchg
int
inc
stos
in
add
add
push
into
push
push
inc
lahf
mov
addr16
add
add
add
lods
fucom
add
out
shrl
das
dec
cltd
inc
daa
mov
pop
xchg
ret
sbbl
lret
push
popw
icebp
dec
loope
sub
addl
mov
test
lock
iret
out
jle
mov
daa
sub
sub
xchg
jecxz
lret
icebp
nop
cmpsl
mov
pop
nop
lock
xchg
or
xor
es
pop
aaa
fistps
ret
sbb
jns
push
iret
adc
mov
xlat
popf
mov
outsb
xor
add
mov
xor
cmc
add
lret
or
or
add
jns
fcompl
arpl
call
mov
mov
or
outsb
lods
and
fcomip
pop
xchg
xor
xchg
les
data16
adc
jg
inc
fiaddl
fstps
or
mov
mov
mov
bound
rol
inc
push
arpl
add
add
xchg
inc
shl
xlat
mov
jg
or
bound
add
add
add
outsb
popf
jmp
push
inc
fnstsw
mov
mov
inc
and
add
sbb
jmp
jle
mov
jge
rcll
pop
enter
cwtl
jno
jbe
movsb
repnz
and
push
dec
pop
mov
sub
jg,pn
xadd
clc
aas
cmc
push
jg
inc
dec
gs
addl
xchg
ret
scas
cltd
mov
xor
inc
cld
lds
mov
mov
push
repnz
ds
mov
add
loopne
push
push
xchg
lea
mov
xchg
inc
es
mov
movsl
pop
and
loope
frstor
xor
add
push
xor
mov
xor
test
xor
cwtl
in
in
mov
je,pn
nop
jmp
or
mov
jecxz
call
lret
inc
ss
inc
add
pop
icebp
out
push
add
pop
ja
sar
js
lahf
pop
fcmovb
fcmovnb
lahf
pop
cmpsl
jne
mov
arpl
add
add
add
xchg
sahf
or
sbb
mov
addr16
xchg
fldcw
ret
jnp
arpl
out
push
push
cmpsb
mov
fs
jg
lret
and
ljmp
test
lods
and
aam
cwtl
xor
stos
cltd
js
jle
ficoms
mov
and
addl
mov
pop
mov
dec
pop
push
hlt
jns
push
xor
js
lds
xor
adc
mov
rorb
adc
ret
clc
imul
jo
dec
or
or
fldl
in
jne
in
js
loopne
mov
xchg
fwait
push
push
hlt
lcall
xor
shrl
dec
outsb
aad
ds
scas
or
pushf
dec
test
cld
call
rolb
cmp
or
and
negb
lea
push
xor
push
or
sahf
pop
testl
dec
popl
add
add
add
sbb
test
js
mov
pop
push
mov
stos
xor
cli
adc
std
dec
dec
in
and
rcr
pop
add
and
pop
cmc
jle
inc
arpl
xchg
pop
cli
and
loop
je
lret
cmp
xchg
call
xchg
sahf
psubq
fimuls
jmp
mov
in
fcomps
sbb
mov
sub
stos
inc
pop
call
sbb
stos
pop
ficompl
add
into
mov
hlt
and
notl
push
stc
repz
pop
scas
mov
inc
call
or
jns
mov
fsubrl
xchg
out
setb
sahf
mov
jbe
int3
cmc
cmc
and
fs
push
in
popf
fdecstp
mov
dec
add
sub
nop
xchg
cwtl
inc
enter
xchg
ja
mov
mov
mov
inc
lods
cmpsl
insl
aas
popf
or
nop
hlt
shrl
add
add
pop
mov
fstps
xor
add
add
add
cltd
xchg
mov
imul
push
hlt
ss
pop
repnz
sbb
xchg
clc
mov
das
test
js
mov
les
add
pop
add
orl
mov
test
insb
lods
dec
iret
and
movsb
sbb
dec
divb
aad
pop
jge
adcl
mov
adc
fwait
je
sbbl
cmp
fs
mov
mov
mov
lcall
sbb
in
mov
xchg
lods
mov
pop
cwtl
push
pop
or
jg
std
push
daa
cmp
rolb
shlb
loopne
andb
and
cltd
xchg
cwtl
lahf
stos
add
ljmp
mov
and
adc
lea
mov
push
repz
pop
sbb
test
stc
add
repnz
movsb
jle
arpl
call
add
add
add
das
cmp
mov
addb
daa
pop
xchg
or
inc
icebp
mov
out
cmc
mov
imul
xlat
enter
je
loope
dec
sub
repz
adcl
jbe
xchg
mov
lret
fbld
dec
cmc
xor
inc
dec
repz
sbb
cmp
bound
xchg
mov
dec
int3
and
push
dec
xlat
sub
jns
pop
and
xor
jmp
add
test
push
dec
mov
mov
sub
dec
ljmp
test
call
mov
int3
les
inc
and
mov
push
sub
loopne
mov
push
add
xchg
xlat
nop
ret
xor
push
push
mov
push
fisttpl
lock
or
mov
mov
or
adc
divb
loop
inc
jp
sub
xchg
adc
jb
imul
inc
scas
cld
into
mov
stos
sub
stos
out
jmp
sub
repnz
add
addr16
add
add
sti
mov
loopne
and
cwtl
lcall
xchg
fstpt
mov
mov
gs
mov
call
in
enter
mov
cs
push
push
in
fcomps
ficomps
add
shlb
xchg
scas
arpl
add
dec
adc
push
sbb
inc
sbb
push
mov
cmpsl
adc
mov
cmc
shlb
jmp
jnp
mov
loop
cmp
pusha
xchg
ret
mov
dec
stc
inc
call
cwtl
push
xor
outsl
xchg
leave
int
and
mov
pop
inc
mov
sbb
xchg
or
mov
clc
popf
mov
in
push
push
nop
push
aam
push
neg
and
sbb
jp
dec
xchg
out
push
pop
lods
sub
outsl
mov
pop
movsb
repz
aaa
mov
dec
lahf
es
loop
incb
mov
add
add
mov
fnstenv
ja
orl
add
add
add
inc
shl
sub
mov
adc
in
clc
out
shrl
jge
fnstenv
repz
scas
inc
ss
pushf
test
mov
cmp
xor
shlb
jns
loopne
cmp
int
add
pop
inc
cld
int3
scas
pop
cmp
ds
into
jno
mov
shrb
icebp
aaa
lods
ja
stos
lock
and
jp
adc
cmp
cld
mov
dec
pop
outsl
icebp
test
add
and
xchg
mov
xchg
sub
fxch
pusha
je
mov
leave
pusha
insl
sbb
int3
dec
fs
test
pop
inc
stos
xor
or
test
xchg
dec
scas
sub
adc
call
lret
mov
orl
jl
cwtl
add
pop
add
jmp
std
scas
mov
int
mov
dec
jne
add
aam
outsb
sbb
mov
repnz
scas
je
je
sbb
cld
je
jbe
jns
sbb
mov
jo
imul
add
iret
dec
add
pop
testl
add
sbb
push
sahf
push
data16
ret
xor
sahf
insb
mov
lods
fs
push
mov
stos
cmp
jmp
and
loope
pop
sub
mov
jmp
shr
dec
xchg
mov
es
fldcw
in
sbb
and
mov
fstl
xchg
lock
dec
shr
xor
mov
mov
and
adc
out
xchg
sbb
mov
pushf
out
push
inc
dec
icebp
mov
adc
popf
popf
mov
mov
lret
mov
cmpsl
cmp
push
fstp
mov
mov
lods
sub
mov
pop
loopne
testl
pop
stos
add
jae
mov
popl
outsb
pop
pop
outsl
scas
divl
loope
xor
sub
adc
shr
imul
sub
imul
mov
jne
push
cltd
jmp
fildl
or
push
add
add
add
jae
xchg
insl
popa
xor
jmp
jae
mov
xor
sub
addr16
fnsave
fldt
and
ret
int
mov
sbb
pusha
mov
in
daa
leave
mov
iret
push
call
lret
cs
fsubp
push
aad
xchg
lcall
add
mov
sub
or
add
sbb
xchg
icebp
inc
cwtl
loop
add
ret
jp
pop
adc
repz
int3
adc
das
mov
loop
lret
dec
lods
xchg
push
cmp
cmp
test
xor
jae
in
fmul
sbb
filds
ljmp
jg
xchg
push
lcall
jne
je
cld
cld
das
pushf
cmp
cmpsl
aam
fs
cmpsl
popa
cmp
imul
les
sub
cltd
cmp
repnz
push
and
push
sti
mov
mov
push
jg
dec
xchg
dec
adc
imul
add
add
outsl
cs
add
jno
mov
bound
xlat
jbe
leave
in
aad
aam
enter
lret
sub
xlat
jp
int3
and
cmp
add
loope
mov
out
pop
or
gs
xchg
inc
pop
jnp
xchg
or
inc
cmp
xchg
idivb
xor
pop
gs
lea
mov
cmp
adcb
into
je
testb
lret
pop
lcall
jb
and
push
xchg
cvtps2pi
mov
xchg
cld
ss
cmp
jb
ljmp
movsb
adcb
mov
stos
data16
mov
lds
xchg
or
or
mov
std
fmuls
xor
hlt
loope
test
std
repnz
jge
jb
sbb
shlb
cmp
loope
in
inc
cmp
or
mov
vmwrite
mov
iret
mov
fucomip
push
insb
xor
cmp
clc
fisubl
add
add
add
fnsave
dec
sahf
addl
mov
outsl
or
mov
pushf
add
sbb
sub
and
decl
cmp
sarl
pop
ret
mov
stos
push
popf
inc
mov
lock
xlat
ljmp
pusha
mov
iret
sti
cld
mov
sub
rcrb
push
or
cmp
cmpsb
addl
imul
inc
outsl
repz
movsl
and
add
sub
gs
outsb
xlat
cld
pop
outsl
aas
jae
arpl
or
mov
and
push
sub
cmp
push
call
inc
lahf
xorl
clc
xorl
adc
cmp
es
aad
jle
add
cmp
mov
rcrb
fs
or
cld
ror
popl
jnp
pop
nop
loope
add
add
dec
out
iret
jmp
aas
in
push
data16
fildll
jg
insl
add
add
add
and
or
es
push
rorb
aad
inc
rorl
popf
inc
movsl
inc
scas
sbb
std
fwait
fwait
push
outsb
insl
stc
xor
aas
xchg
pop
add
xchg
js
add
sbb
lods
mov
inc
lea
movb
scas
jbe
movl
sti
jbe
or
mov
push
ja
test
faddl
int
mov
and
data16
pushf
aaa
lock
push
adc
cmc
xchg
jg
lea
add
mov
pushf
inc
push
bnd
jle,pn
lret
cmp
call
subl
add
repnz
arpl
push
cs
xchg
mov
and
loopne
or
inc
mov
inc
push
sbb
mov
scas
insl
jb
xor
pop
inc
add
mov
dec
or
mov
mov
xor
ficompl
add
cmpsb
push
jnp
std
cmpsb
pop
dec
sub
sub
inc
cli
push
outsb
add
add
add
out
mov
add
bound
or
fcomp
ss
push
faddl
daa
cmc
lret
sub
mov
jg
test
lods
jle
pop
daa
push
sbb
lea
cmp
jo
leave
into
xchg
ret
cwtl
jge
call
sbb
icebp
pop
mov
les
mov
test
inc
negl
mov
jg
mov
push
cmc
scas
mov
mov
daa
push
jbe
mov
cmp
xor
inc
push
lods
in
add
rcrb
jp
test
push
xchg
cmpsb
and
inc
stos
push
mov
test
ret
stos
bound
aas
addr16
and
sbb
pop
cmc
js
aas
pushf
dec
xor
in
mov
mov
out
inc
cltd
dec
inc
mov
inc
push
outsb
inc
daa
cltd
clc
out
adc
shl
jns
aas
mov
stos
into
pushl
filds
add
add
neg
std
sub
dec
in
aad
outsl
add
add
add
add
icebp
mov
les
and
xchg
sub
jo
stos
adc
jl
out
in
mov
lcall
int
fistl
cmpsb
and
fdivrp
fisubl
mov
loope
xor
into
test
or
xchg
xchg
aam
and
popa
fxch
ret
aad
sbb
or
in
aas
mov
mov
pop
rol
mov
lock
stc
enter
add
jmp
fdivrs
cmp
sbb
leave
loope
dec
and
dec
xchg
daa
dec
call
loop
mov
xlat
inc
lods
pop
mov
das
das
mov
repnz
rcrb
mov
aaa
ret
ja
ret
add
and
mov
dec
enter
add
jge
lods
out
xor
bound
jb
clc
inc
rcr
ja
loope
popa
pop
mov
iret
aaa
aaa
cmp
sub
addb
add
add
cs
xor
cltd
sub
mov
jo
add
add
add
mov
mov
je
aam
mov
lock
cltd
jg
pop
inc
aaa
shr
adc
aas
jae
sub
cmp
mov
xchg
or
imul
pop
out
and
sbb
mov
cmpsl
sbb
in
mov
push
enter
leave
mov
xor
pop
pusha
add
outsb
cmp
jl
cltd
mov
jo
jns
pop
mov
or
mov
subl
xlat
adc
pop
dec
cmp
es
jmp
mov
add
lret
insl
pop
fwait
xchg
mov
xchg
xchg
aaa
movsl
sbb
nop
and
pop
adc
clc
pop
xchg
sahf
cmp
mov
mov
movsl
movsb
andb
repnz
sub
in
and
jb
in
jne
and
cltd
dec
sub
pop
cmpsl
ret
push
insl
xchg
push
cmp
add
scas
xor
mov
xchg
aad
lcall
out
sbb
dec
shll
add
add
add
movb
or
popa
mov
lods
movsb
lds
xchg
es
adc
fildl
or
repnz
mov
icebp
popf
js
aam
fcmovnbe
jg
rcrb
xor
push
addl
cmpsl
push
or
xor
sub
mov
xor
movsl
loopne
loope
xor
mov
subb
add
xor
mov
filds
sub
xchg
sti
cmp
mov
adcb
in
cmp
iret
mov
divl
dec
mov
xchg
cmc
mov
fwait
xor
mov
das
je,pn
jecxz
out
jne
dec
jmp
hlt
push
cld
ret
jns
inc
xchg
ret
add
test
andl
popl
xchg
push
push
stc
dec
push
fsubp
out
lahf
and
add
fdivp
mov
out
andb
movsb
daa
sub
ja
mov
mov
add
add
add
and
dec
cwtl
mov
adc
fidivl
fisubrs
pop
pushf
icebp
adc
cmp
push
add
loopne
adc
rorb
inc
sbb
repnz
in
bound
and
and
mov
push
jecxz
sub
push
cmp
pop
mov
inc
inc
fcmovne
adc
bnd
mov
dec
cmpsb
aaa
mov
jne
lds
cld
stc
test
cmpsb
and
arpl
push
daa
clc
pop
cli
or
or
subb
int
das
mov
aas
or
arpl
mov
iret
test
push
sbb
mov
ret
or
cmp
fisttpll
rcl
pop
lret
je
inc
mov
fwait
add
cmp
push
jnp
xor
mov
jmp
dec
mov
mov
mov
lds
jle
je
ljmp
andl
sub
xchg
push
daa
rorb
add
cmp
jnp
outsl
cmpsb
loopne
dec
lret
lods
addr16
add
add
add
lods
lock
or
lock
jno
fadds
out
ret
popa
jbe
cmp
xor
shld
das
mov
bound
out
mov
adc
or
mov
insl
pop
popa
lcall
mov
xchg
sub
outsb
and
lret
and
test
in
push
adc
push
mov
xor
and
lret
xor
cmp
ljmp
add
test
sti
mov
mov
js
and
jne
notl
adc
and
cmp
xlat
dec
enter
ss
xor
and
nop
cmc
mov
push
and
std
rolb
lods
stc
ret
arpl
push
js
loope
test
sub
jo
mov
sub
addb
in
or
pop
lahf
cld
sbb
mov
mov
in
push
pop
push
pop
xchg
push
mov
cli
xchg
jle
push
je
pop
das
jmp
add
add
add
dec
int3
arpl
add
pop
call
shrb
and
mov
mov
scas
mov
cwtl
mov
in
mov
movsb
jecxz
cmp
push
pop
in
pop
loopne
or
das
sahf
and
inc
xchg
mov
into
subl
or
push
sbb
or
sub
mov
sub
pop
movsb
sub
add
ljmp
test
sbb
mov
shlb
pop
xor
inc
mov
ja
pushf
enter
mov
lods
push
psubsb
push
sbb
mov
jle
jbe
push
xchg
outsl
jl
adc
test
add
rorb
mov
ds
mov
pop
idivl
insl
dec
jnp
pop
clts
loop
ficoms
push
mov
add
fwait
jnp
aad
sbb
add
add
add
cli
pop
data16
cmp
mov
loop
jbe
push
lods
xchg
inc
ss
es
or
pop
or
in
loop
mov
inc
stos
test
xor
insl
cs
repnz
fucompp
adc
push
push
or
repz
decl
pop
ret
mov
mov
mov
lea
sub
xor
mov
ret
jp
dec
mov
imul
cmp
repnz
pop
ljmp
paddd
mov
mov
mov
gs
mov
sub
std
andb
pop
add
mov
mov
mov
daa
leave
hlt
mov
jecxz
adc
iret
mov
jae
jo
pop
jb
pop
add
xor
insl
and
pop
std
and
sbb
jg
sub
or
cmpsl
add
add
add
std
mov
sub
dec
xor
add
add
add
jecxz
das
push
pop
xchg
dec
mov
unpcklps
xchg
inc
popa
out
inc
mull
xchg
mov
inc
cmp
pusha
lret
jne
outsb
int3
gs
push
xchg
or
pop
push
jmp
in
arpl
push
lds
cmc
sbb
scas
cli
xchg
test
mov
popf
ret
loope
push
je
out
xor
scas
and
in
insl
cmp
and
outsl
mov
mov
jle
fwait
movsl
mov
femms
xorl
mov
popf
mov
stc
mov
mov
adc
sub
jmp
and
sarb
adc
mov
mov
push
jl
je
pusha
das
jbe
mov
mov
adc
jg
mov
pop
jns
adc
jmp
sbb
fucomp
clc
adc
mov
adc
repz
icebp
jbe
cld
mov
add
add
fstl
lret
sarb
ja
add
add
add
mov
gs
sahf
xchg
pop
rcrl
xor
fcomps
mov
int3
push
leave
in
lret
int3
push
push
lods
fdivl
mov
push
lods
add
movsl
pop
inc
ljmp
jmp
push
hlt
sbb
jo
lret
or
cmp
call
mov
ss
stos
popa
loopne
sahf
jmp
xor
lods
cmc
xlat
mov
clc
in
sbb
pop
ljmp
and
xchg
roll
in
int3
iret
loope
mov
jmp
pop
inc
and
scas
scas
push
adc
jle
sbb
stos
lods
sub
push
hlt
push
neg
and
and
dec
dec
arpl
pop
xor
jmp
loop
inc
add
popf
or
or
cs
imul
push
adc
mov
dec
hlt
lahf
pop
and
out
cwtl
or
fs
lret
jp
inc
in
mov
mov
out
sub
sbb
js
add
add
add
test
ja
mov
in
dec
add
mov
dec
aas
daa
jmp
bound
jno
add
xchg
mov
mov
push
pop
inc
hlt
addr16
lock
cwtl
lds
mov
scas
push
and
pop
repz
iret
aad
add
pop
mov
outsl
mov
fstpl
pop
sbb
rcrl
pushf
mov
repnz
out
aaa
xchg
sbb
insb
into
dec
mov
ljmp
ja
mov
xchg
jg
push
inc
lods
sti
mov
jmp
inc
jnp
pop
lea
imul
mov
fnstenv
adc
push
out
mov
jne
adc
add
loop
outsb
dec
popf
cli
fcoml
jl
orl
xorb
and
and
cmovbe
jo
fwait
lcall
cltd
jge
cwtl
fs
xchg
inc
dec
clc
pushf
mov
jns
divl
in
sub
addr16
add
add
add
std
xchg
push
cmp
fidivl
enter
addr16
pop
insl
inc
xorl
jmp
jns
aam
lcall
pop
outsb
fsubrs
inc
and
in
test
mov
fwait
aam
pusha
mov
cmp
or
icebp
xchg
jae
int
mov
nop
sarl
testl
pop
and
fcmove
mov
scas
push
or
mov
int3
loopne
sub
mov
jmp
fdivrs
ss
stc
push
inc
xor
std
sar
jmp
inc
test
movsb
into
loopne
add
cmp
daa
dec
xlat
mov
sub
sti
cmp
cmp
aas
pusha
xlat
mov
or
xor
hlt
jbe
adc
ror
enter
scas
xchg
mov
notl
push
push
mov
jno
imul
xor
icebp
data16
fstl
inc
sarl
test
or
add
add
fisubs
mov
mov
and
add
add
add
sub
js
cmp
cmpsb
adc
jmp
mov
mov
lock
ret
inc
dec
divb
xchg
add
dec
sub
test
xchg
adc
pop
dec
orl
mov
jne
xorb
lret
enter
mov
add
test
mov
xchg
push
add
push
dec
int3
ss
dec
in
js
sub
mov
adc
add
xchg
xlat
push
psubb
jbe
movsl
xchg
test
lock
sub
xor
fidivrs
call
ret
push
mov
fisubrs
cwtl
sbb
push
xchg
mov
add
add
cli
xchg
test
xchg
cmc
pop
sub
scas
subb
jg
xchg
dec
sub
and
and
pop
popf
mov
loope
sbb
icebp
aad
pop
shll
imul
nop
pop
les
pop
mov
shlb
mov
mov
jnp
add
add
add
sti
adc
mov
fdivrs
xor
jae
nop
jg
test
clc
adcb
scas
pop
in
sbb
mov
insb
xchg
outsb
and
mov
xor
data16
add
adc
pop
and
jno
aas
aam
mov
xchg
adc
repz
cwtl
pop
aaa
sub
roll
cld
add
fimuls
inc
idivb
insl
leave
jmp
cltd
jo
je
js
sbb
or
gs
push
mov
pusha
xchg
leave
insb
adc
jecxz
subb
cli
insb
std
jnp
dec
out
and
fs
pop
andl
ficoms
or
data16
adc
into
xchg
xchg
aam
inc
aam
adc
mov
testl
das
pop
rcrb
lods
jae
or
stos
in
dec
movsl
adc
mov
cmpsl
leave
mov
orb
ljmp
jl
pusha
adc
add
add
add
and
mov
mov
mov
filds
push
adcl
mov
pop
outsl
mov
filds
rol
adc
push
and
popf
subl
call
comiss
stc
mov
or
faddl
repnz
jl
mov
or
into
sbb
scas
mov
les
and
or
sahf
scas
movsb
push
xchg
and
adc
mov
xor
cmc
cmpsb
lcall
idivb
leave
mov
call
jmp
push
add
into
int
jae
rcr
xor
rorl
lahf
test
lock
fwait
lcall
test
lea
icebp
inc
ret
sub
pusha
cmp
ljmp
rorl
cs
adc
cmp
xlat
pop
sub
pop
pop
decb
sub
and
mov
adc
add
add
jo
ja
std
stos
sbb
ljmp
add
add
add
shll
pop
xchg
pop
pop
sub
outsl
aad
ja
pop
daa
jecxz
stos
push
rcr
dec
dec
ljmp
push
mov
sti
jle
xchg
cwtl
jnp
js
outsb
in
inc
std
fisubrs
mov
adc
push
xchg
lea
jb
dec
adc
push
sahf
pop
fldcw
arpl
roll
movsb
cmp
pop
lahf
out
movsb
cmp
mov
movsb
and
mov
cmpb
fsubrp
inc
repz
in
xchg
pop
stos
sarl
daa
movl
data16
mov
dec
jmp
mov
pop
hlt
cmp
cmp
sbb
push
add
ret
mov
rorb
xchg
mov
std
scas
out
xchg
or
fnstsw
adc
leave
sub
xor
xchg
shlb
repnz
jl
scas
sub
push
mov
outsb
popa
adc
test
loopne
add
add
cmpsb
push
sbb
push
insl
addr16
add
add
add
ja
mov
xchg
inc
mov
out
int3
jmp
pop
in
cmp
popf
fsub
lock
ret
mov
inc
mov
xchg
mov
stos
outsl
aad
int3
in
arpl
sbb
push
movsb
pushf
mov
inc
xchg
add
lret
test
jbe
lods
jb
dec
popf
lds
xchg
xchg
xchg
les
cmc
mov
hlt
xchg
xchg
dec
mov
lret
pop
mov
adc
jo
mov
xchg
test
cli
push
loop
int
aas
jg,pt
mov
xchg
shl
stc
test
inc
in
jb
lret
inc
inc
rorb
aam
lahf
and
stos
iret
or
test
add
stc
jno
mov
xchg
jb
sbb
jae
pusha
movl
aas
out
mov
aam
adc
aaa
jg
sbbb
dec
xor
sbb
ja
lret
xchg
fstpt
outsb
cltd
mov
pop
xor
cli
mov
cmpsl
push
outsb
andb
add
add
add
scas
or
ds
pop
ret
ret
arpl
ss
lcall
jns
sub
in
cmp
add
and
mov
sub
nop
cltd
mov
jmp
gs
popa
adc
dec
or
fcoml
dec
sbbb
ret
stc
stos
add
mov
stos
or
cs
adcb
in
test
push
lds
jb
lret
lds
cmp
lret
add
xor
cmc
leave
hlt
je
aas
and
or
ss
sub
cmp
loopne
divl
sbb
mov
push
pop
int
lret
or
sti
or
test
scas
std
pop
lea
mov
notl
and
mov
rcrl
add
mov
flds
jno
jne
pop
jo
and
test
gs
cltd
std
test
lcall
mov
out
addb
add
add
outsb
ss
loop
sbb
jbe
mov
call
push
add
in
push
lods
xchg
test
daa
and
inc
bound
mov
cmp
sbb
xor
mov
mov
or
mov
inc
push
xor
inc
in
fldl
or
mov
lods
lahf
adc
arpl
xchg
xchg
adc
mov
adc
push
mov
pop
xchg
lret
mov
lret
cmp
and
mov
and
push
and
sub
sbb
sahf
cmp
push
sub
mov
mov
fnstsw
in
sar
jle
jnp
das
xor
stc
push
les
shlb
lods
mov
jb
test
arpl
xchg
jge
or
ja
add
pop
jae
imul
imulb
cmp
add
add
testb
daa
mov
and
add
add
add
push
xchg
inc
mov
jmp
mov
push
loop
shrb
push
or
fidivrs
xchg
fistl
mov
dec
cmp
ja
push
clc
xlat
pusha
decl
pop
sbb
aas
out
scas
data16
jnp
adc
ss
js
adcl
and
fmuls
pop
shlb
fidivrl
push
add
out
loope
negl
data16
mov
inc
jnp
mov
call
je
out
xchg
mov
scas
les
pop
clc
mov
inc
lock
sbb
sub
push
std
xor
rclb
arpl
je
add
data16
push
mul
cmp
mov
outsl
out
in
mov
add
xchg
cmpsb
out
sbb
cmp
mov
popl
fnstenv
mov
sti
pop
mov
insb
mov
stc
push
sub
sbb
imul
or
mov
pop
scas
lcall
adc
sbb
inc
addb
add
add
lock
pop
cwtl
stos
jno
in
fisubrs
push
push
jmp
or
in
and
cmpsl
popa
iret
insl
or
jne
pop
pop
adc
rclb
out
or
popf
das
fwait
addl
inc
in
mov
rol
int3
pusha
adc
pop
push
insl
pop
pop
add
inc
push
jp
add
jmp
sbb
push
sahf
xchg
inc
mov
mov
adc
lcall
jae
cli
movsl
add
mov
inc
fldt
inc
mov
bound
pop
mov
aad
dec
movsl
push
aam
imul
fsts
jle
mov
ss
js
cmc
pop
mov
jecxz
imul
iret
enter
jmp
daa
and
xor
cmp
insb
out
cmp
movq
lret
out
inc
aas
repnz
iret
pop
xlat
das
bound
mov
pushf
daa
mov
imul
add
jl
cs
idiv
jne
iret
cmp
add
add
add
add
pop
insl
nop
jns
mov
lcall
pop
cmp
xchg
fidivrl
and
cmc
inc
clc
xchg
xlat
in
lods
sbb
mov
aam
call
je
lcall
outsb
imul
dec
xor
insl
push
data16
sbbb
adc
rorb
jl
imul
insb
sbb
jp
sbb
inc
jmp
out
notb
sub
and
add
lds
lods
imul
cmovns
jp
test
fldcw
pop
movsl
loopne
dec
dec
shlb
pop
inc
dec
xor
cmpsl
fisttps
mov
mov
out
jno
mov
xchg
and
loope
pop
lods
cmpsb
or
dec
mov
ret
loope
or
call
pop
xor
mov
inc
add
add
xchg
pushl
sub
rolb
test
add
add
add
dec
inc
bound
adc
das
movb
fstp
cltd
fwait
add
xchg
push
and
ud2
or
popl
and
xlat
movsl
leave
movsb
xchg
push
mov
cmpb
aaa
push
test
mov
std
dec
mov
sub
jns
mov
in
fs
in
mov
adc
adcb
pushf
push
push
dec
mov
inc
in
fildll
pushf
cltd
dec
add
push
xor
stc
int
dec
mov
add
shll
mov
xchg
mov
jne
cmp
pop
js
add
daa
cmp
mov
cmc
shrb
jle
popa
fsubrl
insl
mov
es
jno
cmp
ret
or
jmp
nop
pop
lret
jg
out
xor
imul
mov
inc
inc
push
je
mov
dec
adc
add
add
sti
iret
ss
push
jno
sbb
test
add
add
add
stc
adc
aas
xchg
mov
inc
mov
shll
sub
movsb
mov
adc
mov
cmpsl
popf
push
test
mov
stc
inc
dec
xchg
push
scas
add
movsb
aas
mov
fisubrs
cmc
sub
test
dec
cmpsl
cmp
ljmp
push
or
cmp
shll
stos
jae
cs
inc
inc
jle
lret
shlb
imul
js
push
test
aas
adc
mov
mov
lret
mov
mov
movsb
xor
jae
scas
fiadds
pop
shl
mov
jb
daa
mov
mov
daa
daa
rolb
jl
fisubl
pop
mov
out
sub
hlt
jp
rorl
bound
test
cmpsb
leave
fdivrs
lods
out
insl
pusha
int
ret
roll
add
outsl
xchg
inc
lahf
sti
hlt
out
dec
roll
pop
sub
add
add
add
inc
inc
push
pop
shlb
lret
rclb
sub
fs
call
ja
inc
push
out
mov
mov
sub
rcrl
and
pop
ja
add
addl
aas
mov
lds
adc
int
or
add
les
adc
xor
or
adc
lcall
stos
lods
add
jp
addl
mov
sub
and
cmp
dec
jnp
ja
ss
dec
daa
imul
jmp
stc
popa
fnstsw
nop
mov
dec
addr16
hlt
mov
and
xchg
fcmovu
jecxz
int3
cmpl
cs
icebp
mov
pop
push
lret
insb
mov
orb
dec
dec
mov
pusha
push
sbb
cli
cmp
xchg
push
stos
insl
lret
nop
mov
jp
ds
out
push
or
add
add
mov
mov
add
add
add
lea
jae
daa
mov
xlat
mov
lock
enter
pop
jbe
pop
mov
mov
popa
or
in
inc
movsl
jne
xchg
xchg
mov
mov
jle
push
push
call
mov
movsb
test
push
movsb
adc
mov
inc
sbb
dec
or
xchg
xor
cli
push
cmc
stos
rcrl
jb
pusha
int3
lock
dec
out
ljmp
push
or
sbb
insl
xchg
leave
in
jecxz
sub
into
mov
imul
add
adc
rcrl
dec
xorb
popf
xchg
mov
shlb
pop
cmp
sbb
loop
pop
js
notl
ljmp
mov
lret
sub
mov
clc
jmp
bound
mov
xchg
leave
mov
sbb
lret
xchg
dec
fldcw
pop
push
sbbl
fldl
add
add
pop
test
ljmp
lock
xchg
jg
ljmp
add
add
daa
test
xor
cmpsl
cwtl
ds
jae
addl
xchg
push
lock
fs
pop
and
test
imul
incb
jno
test
clc
outsl
int
aas
mov
fstpl
push
dec
jo
pop
jecxz
fs
lds
stos
gs
ds
jl
jle
or
out
fcom
les
imul
mov
jmp
cmpsl
jl
push
cli
jmp
lret
sub
loopne
xor
sahf
fs
cmp
xlat
leave
mov
stc
xchg
jno
shl
mov
mov
mov
jl
icebp
cmpsl
scas
enter
sbb
iret
outsb
pop
cmpsl
inc
dec
cmp
or
xchg
fldenv
xchg
adc
test
mov
andb
mov
pop
jge
mov
push
pop
pushf
and
adc
int
jmp
jnp
movsb
xor
lret
lock
mov
xchg
xchg
addr16
mov
adc
mov
add
add
arpl
jnp
sbb
push
xor
sbb
add
add
add
test
sub
or
stc
xor
rorl
or
pop
mov
rolb
jg
mov
pusha
add
xor
ljmp
cltd
or
sbb
in
add
ret
jnp
mov
aam
push
int
adc
jno
testl
push
mov
jo
shl
in
cmp
xor
fisttpll
ds
aas
dec
in
repz
xchg
push
inc
int3
into
push
dec
sbb
pop
dec
sar
pop
jge
push
push
fst
ss
xor
ds
fcomps
popa
jg
add
in
icebp
into
xor
xor
jg
loope
sub
pop
dec
enter
jmp
inc
decl
scas
mov
sarl
and
ja
int
into
adc
and
xchg
or
mov
cmpb
aam
sub
fimull
pop
divl
mov
add
aas
or
mov
dec
xor
add
add
add
xchg
adc
ja
rol
imul
cmp
insl
sub
sahf
mov
data16
test
lods
aas
loop
rcr
jge
test
pop
ja
cmp
loopne
cld
call
out
pop
test
and
cmp
hlt
ljmp
push
adc
sbb
daa
and
inc
mov
add
adc
and
mov
xchg
pop
adc
in
mov
dec
nop
sbb
les
push
loop
cwtl
hlt
lcall
inc
dec
cld
shll
mov
mov
xchg
dec
loop
pop
mov
aaa
out
jmp
ja
jne
jb
xor
cmpsl
scas
shlb
lock
xchg
in
test
jb
cld
or
mov
lods
cli
jecxz
jp
daa
and
insb
mov
fisubl
mov
fidivs
inc
sbb
sub
mov
insb
fidivl
bound
arpl
mov
add
add
add
xor
push
mov
sbb
mov
in
push
dec
cwtl
shlb
sarb
dec
mov
gs
cmp
push
mov
subl
xchg
fidivs
push
pop
cmc
ss
or
lods
xor
outsb
mov
sbb
stos
add
lock
xchg
add
jno
or
hlt
icebp
push
xor
fucomi
call
sahf
jo
jbe
inc
out
out
push
dec
ss
test
sbb
adc
mov
nop
push
jmp
rorb
hlt
push
fstpt
insb
sbb
pop
add
popf
nop
movsl
cmp
sbb
sbb
cmpsl
outsb
pop
mov
jg
lock
xchg
mov
test
jae
pop
lea
or
cli
inc
mull
adc
outsl
sbb
mov
mov
mov
sub
cli
xchg
dec
cmp
dec
xchg
jne
cmp
mov
jns
shll
mov
add
add
add
icebp
mov
push
fsubrl
fs
sbb
imul
jb
loopne
inc
pop
mov
pop
jns
das
xlat
and
lcall
enter
mov
bound
cltd
je
xlat
ja
mov
sbb
push
lods
loope
fldcw
aad
movsb
sub
or
fwait
push
test
cmp
pushf
xorb
dec
mov
push
aas
or
mov
dec
and
cmp
pop
fisttpll
out
xchg
lods
push
aad
dec
fbld
lret
sbb
xorb
lahf
jno
jo
scas
xor
ja
subb
dec
scas
es
in
sub
das
jae
shrb
xchg
test
jne
mov
in
das
pop
icebp
cli
adc
xchg
outsl
arpl
ljmp
mov
in
imul
and
dec
mov
int3
in
dec
or
call
dec
push
int
fstp
iret
push
cmpsb
fadd
dec
mov
lea
add
add
add
icebp
outsl
and
mov
test
repz
pusha
push
pop
sub
jmp
mov
decb
push
xor
jmp
mov
pusha
loopne
inc
rcll
pop
xchg
movntps
mov
xor
mov
push
ret
fstpl
pop
mov
pop
add
inc
test
lcall
sub
pop
in
fnsave
xchg
enter
sbb
imul
enter
jno
lret
jne
or
push
std
jge
in
aad
add
loop
lahf
mov
clc
push
inc
loopne
lds
out
mov
pop
pop
xchg
js
aas
iret
dec
xor
dec
cmovnp
xor
sub
xchg
xchg
out
pop
add
lods
out
or
outsl
jbe
ret
in
sub
out
nop
xchg
out
scas
lahf
aad
rcr
sbb
and
jp
jle
cwtl
push
adc
cli
ss
mov
lods
ficoms
lahf
and
scas
std
out
ljmp
mov
add
add
add
test
rcrl
cs
lods
leave
aas
and
mov
icebp
xchg
adc
push
lds
xchg
sar
lret
adc
sbb
adc
ljmp
out
cmpb
inc
mov
cmpsl
push
lods
xor
icebp
dec
icebp
adc
dec
mov
push
scas
push
pop
jge
repnz
cmpsl
scas
xchg
insb
in
push
push
xlat
iret
pop
push
sti
dec
mov
add
dec
cmpsl
add
lods
clc
pushf
mov
int3
add
fdivp
adc
xchg
sbb
test
sbb
into
inc
jp
mov
inc
dec
or
mov
sub
push
push
inc
es
or
jns
lods
xchg
lods
mov
or
lea
aaa
pop
fistpl
ror
push
arpl
aaa
add
bound
push
sbb
or
lods
les
jnp
mov
icebp
stos
sub
pop
popl
add
add
add
arpl
mov
call
jmp
xchg
enter
adc
mov
mov
xchg
cmp
push
aaa
fcos
jnp
mov
and
adc
ret
add
bound
aaa
mov
lahf
push
fs
mov
popa
scas
in
les
mov
cmp
mov
jno
ds
idivl
test
push
fisttpll
repnz
sub
push
inc
jge
push
and
push
int
out
aam
arpl
pop
and
adc
push
dec
mull
xor
mov
mov
inc
adc
xlat
dec
mov
sub
cmp
iret
dec
pop
dec
std
or
pop
into
add
addr16
push
call
push
jg
cmp
btr
loope
lods
inc
fstpl
and
mov
and
sub
fidivl
mov
pop
xchg
imul
movsb
push
mov
xchg
fldl
icebp
pop
mov
fcomps
dec
pop
inc
or
test
fcomps
add
fisubs
add
add
std
pop
pop
int
sarb
push
movsl
int
js
scas
pop
ficoml
je
sahf
adc
dec
jp
fwait
mov
dec
int
inc
mov
sbb
cltd
jbe
mov
fwait
or
pop
loopne
or
xor
jg
cs
cmpsb
jp
rorl
or
mov
dec
stos
sub
xchg
cs
xlat
jne
add
push
mov
scas
clc
sub
add
push
and
and
add
ss
flds
std
pop
xchg
xor
jno
ljmp
popf
ret
cmp
sbb
insb
xchg
jbe
ljmp
xor
das
dec
negb
pop
loope
call
jl
xchg
xchg
stos
sahf
jo
adc
xlat
stos
pop
adcl
mov
adc
mov
stc
jmp
jl
add
fs
stos
mov
lret
mov
and
ret
data16
shl
and
ljmp
dec
mov
cli
movsb
addr16
add
add
add
cmpsl
jle
or
mov
sbb
jl
popf
pop
mov
loop
into
lahf
jg
xor
hlt
pop
pop
fidivrl
xor
jnp
pop
sbb
xor
into
mov
jns
mov
push
mov
xchg
sbb
dec
int3
inc
dec
out
fcompl
mov
pushf
add
jmp
xlat
aas
cmp
clc
pop
int3
fdivrp
cltd
nop
xor
jp
aas
in
xor
in
pop
int
out
pop
pop
push
mov
test
ret
data16
add
roll
mov
mov
sub
pop
push
lcall
xor
and
movsl
push
sbb
push
jb
jo
push
jge
xor
jne
sbb
jb
in
jo
stos
mov
jmp
xchg
sub
ret
pushfw
rcrb
jnp
das
sub
pop
dec
divb
fwait
push
sbb
push
aaa
shlb
cmc
div
testl
scas
addr16
add
add
add
test
imul
xor
mov
pop
stos
lods
jno
fstl
imull
sbbb
xor
mov
adc
xor
data16
jmp
js
shlb
xchg
or
data16
mov
push
fdivrs
mov
push
mov
dec
stos
testb
aaa
push
imul
cmp
mov
test
shrl
test
popa
insl
gs
pop
mov
and
stos
int
xor
fbld
pusha
adc
insl
stc
jbe
loop
push
adc
jmp
jge
xchg
dec
outsl
das
popa
push
pop
fdivs
insb
dec
mov
ss
aaa
inc
ret
mov
inc
std
call
add
inc
rorb
addr16
lock
push
mov
cltd
dec
push
push
mov
out
dec
out
lret
shrb
notb
test
pop
push
nop
push
sahf
rcr
pop
adcb
push
mov
sbb
add
add
add
int
scas
and
xor
ss
imul
sub
mov
sbbl
jg
xor
stos
xor
notb
popf
adcl
inc
cmp
adc
sbb
jmp
xor
mov
out
mov
sub
mov
movsb
sub
or
sbb
repz
push
inc
jnp
test
and
lods
insb
or
shl
and
dec
inc
cmc
jle
sti
ss
popa
leave
inc
faddl
cmpsl
test
fsubrl
rcrl
add
or
sbb
pop
push
data16
fistl
movsb
arpl
dec
push
test
test
lock
leave
mov
pushf
and
fmull
xor
xchg
out
sub
xlat
lret
pop
ret
mov
inc
fldcw
xor
sub
add
add
arpl
cmpsb
jcxz
fimull
addr16
add
add
add
rcr
inc
xchg
inc
stos
mov
jno
jl
push
add
fidivs
jae
and
lods
sub
ja
mov
and
mov
mov
push
or
jae
imul
push
repz
out
dec
fwait
aaa
stc
gs
mov
or
clc
jle
dec
outsb
dec
nop
inc
in
and
fidivrs
add
sbb
aad
data16
fsubrl
ret
outsl
dec
adc
lods
push
loope
out
lcall
ror
cli
xor
add
je
testl
sbb
or
je
les
jge
in
push
clc
int
mov
sarl
pop
mov
jnp
mov
push
lds
sbb
xor
mov
mov
cmp
xchg
sarb
mov
dec
int
inc
adc
xlat
mov
inc
xchg
pop
xchg
rcll
subl
add
add
clc
jnp
jg
in
cli
enter
cmp
add
add
add
jo
stos
mull
repz
lock
out
dec
push
inc
and
pop
dec
cld
add
fildl
cmp
or
iret
in
add
fsubl
adcl
bound
loopne
pop
push
cmpb
pop
out
popf
pop
mov
loopne
ret
xor
lea
jg
and
sbb
xor
push
add
and
jmp
in
push
mov
imul
popf
push
fwait
mov
aam
mov
sahf
push
scas
addl
and
mov
es
idivl
neg
fidivrl
inc
ljmp
adc
pop
mov
adc
xchg
push
adc
pop
pop
cmp
mov
int3
hlt
xor
add
jg
push
jbe
mov
jge
repz
jns
jle
push
out
repnz
out
addb
cmc
mov
adc
ljmp
cld
gs
mov
addr16
add
add
add
ljmp
adc
jg
mov
imul
lcall
popa
mov
jo
mov
jnp
xchg
mov
hlt
sarb
mov
lods
cmp
lea
in
dec
ret
jl
scas
sbb
or
or
iret
adc
mov
dec
add
jbe
xchg
sbb
movsl
vmptrst
outsl
stc
nop
adc
adc
inc
cld
sbb
ficompl
push
dec
insb
scas
sbb
fsubs
lcall
mov
rolb
xchg
in
sbb
xlat
adc
cs
or
pop
push
pop
lea
shlb
xchg
add
popa
and
mov
ret
xor
cmp
add
addl
pop
sahf
bound
aam
jmp
mov
pop
inc
arpl
fcmovnu
and
jbe
xchg
sbb
jno
or
cmp
fstl
add
add
jl
sar
std
jle
pop
popf
scas
mov
xchg
add
add
add
mov
loopew
and
fisttpll
mov
dec
and
cmpsl
aaa
inc
jns
cmpsl
cmp
dec
xor
outsb
cmp
mov
and
pop
push
jns
add
or
push
popa
fdivrs
sub
jle
lds
inc
pusha
pusha
in
scas
mov
cmp
insl
or
ret
and
mov
negb
stos
das
jb
outsl
sub
jne
fstpl
fwait
rcll
cmpsl
fistpll
mov
scas
xchg
pop
jo
or
push
mov
xchg
adc
clc
fwait
or
or
xchg
pop
out
cltd
cmc
aas
xor
sbb
adc
push
add
fmul
repnz
jp
push
cmp
mov
negl
mov
cmp
mov
repz
push
cmpsb
jae
inc
out
es
outsb
push
fs
lea
xchg
mov
xchg
sbb
mov
pop
xorb
cmp
cmp
in
pop
negl
xchg
addr16
add
add
add
mov
pushf
shlb
fwait
mov
insb
imul
lret
dec
ss
adc
or
fcomip
call
push
xlat
lcall
mov
jmp
mov
mov
stos
rcll
adc
imul
leave
inc
push
sbb
xchg
sub
jnp
sahf
dec
bound
sarl
pop
xchg
mov
add
ljmp
cmp
int
add
loop
dec
jae
lds
cltd
insb
mov
lods
inc
call
cmp
ffreep
pop
pop
aas
sub
and
dec
xchg
lea
mov
inc
fdivs
or
lods
sub
mov
jb
mov
pop
add
push
mov
lods
dec
gs
adc
lea
inc
mov
sti
add
sahf
lret
cltd
lret
rep
dec
subb
out
lret
mov
in
inc
add
xchg
xor
in
loopne
sbbl
xlat
inc
faddl
add
add
outsl
sti
mov
mov
mov
inc
addr16
add
add
add
push
aaa
or
cwtl
mov
pop
mov
lcall
imul
mov
loop
pop
ljmp
pop
or
mov
mov
mov
ljmp
mov
cmpsb
cmp
loope
lcall
pop
xor
pop
push
sub
pop
add
xor
mov
imul
shlb
addr16
xchg
or
mov
adc
iret
icebp
xchg
pop
pop
xor
rcrb
les
pop
js
out
mov
lcall
mov
push
push
dec
subl
cmc
fs
ret
aam
ficoms
das
mov
pop
pop
loop
inc
cld
call
jne
mov
in
pop
xor
xlat
jo
dec
mov
mov
shll
push
fcmovb
hlt
cs
jbe
cmp
cmp
push
and
xlat
aas
dec
sbb
or
addr16
push
jp
mov
mov
inc
lds
pop
pop
aad
push
inc
movb
mov
and
mov
out
insb
mov
scas
dec
push
jns
mov
add
fwait
adc
je
push
jns
dec
pop
lds
addl
xor
jb
jns
push
cld
xor
cli
mov
push
loop
push
fldcw
jge
idivb
mov
add
fdivrl
or
inc
loop
pop
mov
dec
mov
loopne
stos
sbb
cmpsb
sub
push
dec
or
pusha
imul
call
and
aaa
fldcw
pop
pusha
test
xorb
cltd
fwait
pop
push
in
int3
nop
xchg
mov
icebp
std
xorb
int3
add
arpl
jle
dec
lcall
or
test
pop
pop
sbb
add
add
mov
mov
jmp
test
aas
jge
addr16
add
add
add
jg
ljmp
cmp
int
jg
mov
add
aas
jb
addl
test
scas
or
mov
sbb
popf
ja
sbb
add
iret
adc
mov
cwtl
mov
pop
lds
jp
clc
add
pop
rcrb
inc
mov
mov
push
std
scas
add
aam
test
sbb
gs
das
xchg
fwait
push
lock
sbb
mov
daa
adc
stc
and
fnstenv
sub
add
out
ror
mov
in
pop
mov
test
mov
shll
inc
ret
out
mov
push
push
inc
shlb
call
cmpsl
mov
mov
fs
push
out
inc
push
ret
pop
jl
and
not
push
jle
data16
leave
jns
xor
sbbb
inc
push
sbb
iret
popf
movsb
mov
ret
mov
add
add
lret
sbbl
popl
int3
hlt
addr16
add
add
add
lahf
mov
out
push
sbb
xchg
sub
push
int3
mov
cmp
dec
xchg
shrb
mov
fstps
out
fistl
mov
es
jbe
lret
sbb
adc
pop
adc
mov
js
test
shll
pushf
cmp
mov
jmp
dec
mov
adc
mov
mov
shl
jmp
repz
mov
mov
fwait
dec
jns
fucomp
es
insl
push
pop
push
aaa
mov
addr16
mov
and
xor
xchg
scas
sbb
xchg
cmpb
and
adc
cmpsb
adc
aaa
jb
push
jp
ret
lock
pop
xor
push
ret
push
int
or
mov
pop
enter
mov
fcomi
adc
mov
and
push
imul
mov
imul
movsb
and
mov
mov
addr16
add
add
add
add
jg
cmc
in
jmp
jns
or
rolb
or
outsb
sub
maskmovq
mov
push
pop
clc
lret
dec
mov
cmpsb
popa
xchg
mov
fsubrp
add
or
add
out
inc
push
fsubrs
pop
pop
pop
mov
lods
adc
loope
sarl
ss
dec
outsb
xor
sbb
fcompl
js
and
out
mov
jmp
shll
jnp
lock
lret
cmp
je
popa
mov
popf
inc
dec
call
hlt
or
out
cmpsl
jecxz
or
fwait
push
inc
jmp
mov
xchg
sbbl
loop
loopne
add
cld
das
call
les
jp
or
add
pushf
pusha
adc
adc
sbbb
repnz
and
push
mov
add
dec
ds
xlat
cmpsb
push
mov
mov
mov
inc
push
mov
jge
jg
ljmp
in
lahf
mov
xchg
addr16
add
add
add
add
sub
fldl
pop
or
jb
addr16
dec
icebp
mov
push
inc
and
ret
out
pop
test
pop
xor
sub
out
in
scas
pop
dec
js
mov
outsl
test
pop
int3
nop
or
jbe
cmpsb
cld
pop
daa
or
lcall
push
imul
cmp
cld
nop
sbb
sbb
rol
pop
test
fxch
in
jbe
adcl
stc
lret
mov
mov
cmc
nop
and
lock
lcall
jnp
fsts
jmp
sub
or
pop
mov
xor
cmp
cmp
sbb
into
fimuls
cmc
sbb
adc
xor
mov
cmp
push
xor
inc
and
xchg
sub
fnstsw
and
jmp
shrl
mov
pop
jnp
lahf
inc
outsl
mov
mov
xlat
push
add
cltd
sub
out
inc
sub
or
xchg
movsb
addr16
add
add
add
arpl
add
adc
cli
sbb
lods
ds
pop
sub
jnp
roll
daa
ja
sbb
loopne
in
testb
sbbl
mov
pop
sub
or
sti
and
in
xor
cmc
adc
jb
fwait
sbb
push
mov
xchg
mul
or
xor
pop
xchg
aam
js
in
jb
lods
iret
mov
stc
popa
xchg
jl
mov
inc
lahf
pop
lods
push
mull
inc
js
pushl
adc
lea
into
mov
adc
fistpll
inc
xchg
and
sarl
xor
and
cmp
imul
mov
jne
imul
inc
cmc
inc
jb
and
inc
xor
dec
sbb
lds
and
les
jo
in
fnstcw
nop
int3
or
mov
loop
test
mov
cld
mov
addr16
add
add
mov
imull
sub
insl
pop
mov
push
lock
popf
aaa
test
shrl
cmp
int3
pop
sarb
dec
pop
in
lods
mov
aaa
pop
or
xlat
fiaddl
inc
sbb
fsub
ret
push
lcall
push
inc
aad
inc
pop
inc
stos
cld
mov
aaa
inc
sbb
xor
into
xchg
loope
push
hlt
xchg
mov
cmp
pop
out
xchg
sbb
jecxz
cmp
fstl
push
push
fadds
push
repz
adc
jb
std
cli
lret
aad
xchg
imul
int3
cmp
aam
cmp
mov
and
and
rolb
cli
xchg
ja
pop
in
lods
xchg
je
inc
jmp
mul
negb
aad
xchg
inc
aam
cmpsb
sub
dec
pop
into
es
cmp
das
mov
in
out
lock
and
cmp
stc
lea
test
sub
or
lcall
insl
add
mov
add
cmp
pusha
pop
mov
push
or
pop
xor
xchg
jae
clc
mov
push
xor
jl
in
subl
pop
cli
int
fwait
and
dec
sbb
fisubs
cwtl
scas
mov
push
test
scas
sarl
pop
push
sbb
mov
or
xchg
jecxz
arpl
mulb
or
or
push
mov
into
xchg
sti
push
sbb
dec
addr16
shlb
stos
xchg
fmul
cmp
insl
fmuls
xor
sarl
pop
fiaddl
fsubl
mov
scas
pushf
stos
sub
cmp
lods
inc
shl
cs
add
test
negl
lcall
sbb
adcb
mov
es
sahf
popa
xchg
mov
mulb
inc
cmp
add
jmp
mov
mov
loop
or
popf
jmp
add
movsb
mov
mov
inc
inc
add
mov
add
fimull
insl
add
dec
mov
jb
ficomps
fstpl
ja
rorl
inc
push
popa
sarl
add
repz
rcl
mov
pop
mov
push
imul
sub
mov
cli
push
rolb
xor
fidivrs
int3
and
pop
fisttps
inc
push
ja
mov
sbb
cwtl
jae
bound
pop
mov
in
and
inc
roll
scas
stos
ficoms
sub
les
push
fisubs
sub
lcall
sub
inc
inc
mov
cmp
mov
es
xor
push
push
and
inc
leave
in
fisubs
dec
mov
mov
loope
mov
or
sub
out
and
stos
lds
dec
and
push
std
stos
adc
pushf
nop
cmp
adc
add
or
sbb
inc
mov
mov
add
add
add
sbb
or
test
test
push
pop
fcoms
test
xor
icebp
pop
lret
and
mov
add
pusha
jbe
std
mov
or
mov
enter
xchg
fcoms
test
in
push
fstpl
jg
test
xor
cmpsl
cmpsb
stc
jecxz
fstl
and
xor
loopne
insl
flds
xor
pop
push
or
adc
add
cltd
or
cmc
movl
fldenv
lea
push
shl
pop
sbb
nop
xor
add
sub
cmpsl
mov
test
cmp
xchg
pop
hlt
xor
rolb
inc
cmp
in
int
sub
dec
push
dec
hlt
adcl
mov
test
cmp
mov
dec
dec
push
inc
fdivl
push
dec
mov
movsb
add
add
add
push
popa
pusha
dec
inc
leave
sti
sub
mov
fs
jp
push
dec
mov
inc
jecxz
cs
je
ret
ret
jmp
add
clc
jae
mov
adc
ds
jl
mov
push
ret
dec
jno
jae
sbb
fcoml
cmp
jg
mov
out
cmp
mov
ja
cwtl
add
jmp
xor
adc
sub
sbb
out
daa
mov
clc
push
inc
nop
push
xchg
sub
test
lds
int3
lods
cltd
pushf
jp
arpl
outsb
push
fidivrs
adc
leave
push
push
mov
xchg
fs
xchg
mov
jle
adc
adc
dec
adc
shrb
stos
ror
pop
xlat
scas
and
inc
inc
cmp
jmp
adcb
sbb
inc
sbb
push
jo
lea
aas
ret
test
mov
adcb
add
sbb
mov
sbb
mov
movsl
add
add
add
repz
in
cmp
notb
adc
xor
popa
sbb
pop
push
jge
push
dec
iret
push
and
cltd
xor
pop
sub
out
mov
enter
cli
jb
rcl
sub
pop
insl
outsb
jns
cmp
adc
frstor
imul
test
jmp
inc
aad
push
aam
mov
addl
mov
push
xor
insl
jmp
cmpsb
xchg
add
gs
dec
fucomip
cld
fsubs
sub
xchg
mov
dec
xchg
stc
adc
sbb
add
fisttpll
mov
andb
daa
mov
aaa
mov
scas
mov
loop
cmp
cmp
int
call
or
mov
sub
jbe
mov
or
popa
sti
mov
mov
xchg
adc
js
xchg
test
jmp
mov
inc
adc
pop
test
stos
hlt
jmp
cmp
jbe
std
cmp
add
add
add
ret
push
mov
enter
out
in
adc
pop
sbb
dec
shr
outsl
ja
ret
xor
cwtl
in
push
jne
push
filds
push
hlt
sbb
jmp
pop
loop
faddl
or
xchg
pop
subl
and
xor
inc
sub
mov
popf
mov
jo
dec
cwtl
sti
push
pushf
stos
notl
adcl
xor
xchg
popa
or
aad
lock
fwait
ss
and
jae
popa
testb
js
xchg
or
in
xor
dec
pop
mov
rcll
xchg
mov
mov
and
out
fs
cli
imul
out
xor
call
pop
test
pop
mov
or
loope
psllw
icebp
cmp
push
and
pop
shlb
test
leave
pop
and
xorb
repz
add
add
push
nop
out
xlat
out
jg
in
xor
flds
inc
inc
sbb
add
add
add
orl
insb
dec
stos
inc
lea
ret
andb
dec
jecxz
dec
fbstp
mov
jge
inc
pop
mov
mov
sbb
sub
sbb
xchg
jbe
xor
jbe
jns
mov
jge
jbe
jb
dec
mov
mov
jp
test
mov
xchg
dec
cmp
and
push
mov
out
or
mov
flds
mov
dec
cmp
xchg
lret
call
into
push
es
das
das
stc
lcall
arpl
ret
mov
ja
data16
jno
sbb
xlat
sub
into
mov
adcl
sub
sub
addl
push
add
and
xchg
push
pop
mov
lock
notl
mov
je
dec
cltd
test
mov
jl
and
sbbb
test
clc
insb
mov
push
jle
add
add
mov
inc
fwait
lds
jo
fldl2e
out
and
add
add
add
fdivrl
push
in
cmp
mov
lods
xchg
adc
dec
mov
push
out
clc
lcall
lods
jmp
sbb
inc
xchg
mov
cmc
jl
add
mov
sbb
movsl
leave
mov
fwait
in
cmp
cmp
mov
and
lret
jae
aad
xchg
movsl
xchg
mov
cmp
push
cld
fwait
mov
lret
xchg
add
aas
dec
stos
dec
dec
inc
pop
sub
in
xor
mov
xchg
inc
lea
lcall
roll
xor
dec
cltd
std
jl
fwait
cmp
andb
xlat
jo
mov
or
sub
mov
out
xchg
faddl
inc
mov
subb
pop
sahf
int3
jbe
xchg
adc
into
pop
icebp
cmpsb
lock
xchg
les
nop
stos
aad
adc
cmp
sti
bound
test
lcall
std
inc
jne
xor
push
adc
add
add
add
stos
add
xchg
mov
outsl
int3
aad
fwait
incb
int3
insb
rcrl
aam
inc
stc
jg
mov
fldl
and
push
and
sub
fmuls
jnp
inc
out
fimuls
ss
iret
dec
outsl
fcmovbe
push
pop
sbb
lcall
fldt
lret
pop
sbb
sub
mov
lods
lds
xchg
xor
aas
pop
outsl
lock
add
and
mov
cmp
xchg
sbb
je
ljmp
lret
lcall
lods
xchg
insb
jp
sti
das
cmp
push
lret
add
jne
inc
pop
add
dec
add
outsb
pop
stc
cmp
mov
inc
inc
mov
nop
sysexit
lret
pop
lcall
mov
int
cmp
prefetchwt1
or
lods
xor
xor
adc
je
mov
cli
jge
pop
lret
jnp
sti
jmp
push
mov
not
popf
fsubl
stos
add
add
add
add
fdivrs
pop
lea
lcall
dec
xor
jbe
mov
pop
jle
sarb
fildl
jge
out
or
cmpsb
fldt
mov
ss
inc
cmc
adc
dec
mov
lds
sti
sbb
adcl
cmp
mov
sti
jge
pushf
xchg
add
outsb
mov
fisttpll
xor
push
or
mov
dec
cli
push
ljmp
roll
adc
lods
xor
mov
aas
popf
mov
mov
test
push
divl
sbb
or
shrb
sbb
aam
out
test
je
xchg
inc
mov
les
or
sub
push
jns
out
dec
push
push
jp
xchg
dec
push
jnp
cmp
fsubrs
lahf
jns
adc
outsb
int3
sahf
mov
jl
mov
add
add
jecxz
lock
lds
stos
add
add
add
cltd
cmp
pop
jne
imul
add
fidivrl
iret
ds
cmp
xor
mov
repz
enter
lret
mov
stc
cmp
dec
mov
loope
add
adc
inc
pop
mov
loope
and
in
jnp
jl
ret
mov
mov
ret
xchg
xchg
dec
ss
js
shrb
push
push
out
iret
addr16
and
mov
sub
imull
das
popa
in
lret
repz
xor
into
xchg
lahf
out
adc
xor
add
out
sub
pop
mov
je
xor
push
inc
movsl
aas
lods
mov
stc
xchg
nop
cmp
or
cwtl
loope
pusha
addr16
cwtl
push
mov
rcll
daa
push
xor
jns
mov
daa
or
gs
lcall
mov
cmp
in
addl
add
add
cld
mov
leave
push
xor
lods
add
add
add
aad
aas
test
push
or
xor
ret
adc
push
mov
imul
and
out
fcomip
jle
mov
stc
inc
jl
sahf
push
dec
ss
lret
add
sbb
xor
push
hlt
or
jae
and
insl
jno
movsb
jbe
adcb
hlt
iret
sarb
or
rorb
mov
sbb
xchg
stos
repnz
hlt
cmp
rcll
ret
or
movsb
lret
call
in
push
add
mov
xor
lcall
sub
mov
test
cltd
fmull
shrl
decb
stos
cmp
aam
push
mov
loop
ljmp
rcrb
rcll
mov
sbb
aam
mov
cmp
stos
add
mov
inc
cs
add
outsl
add
out
cmc
mov
mov
add
add
add
or
test
push
movsb
inc
fs
repz
push
adc
sti
je
jnp
mov
ret
rorb
push
mov
mov
mov
sarl
outsb
js
sbb
and
fdivrs
dec
jb
or
inc
cli
jae
xor
pop
enter
cmpsb
cmp
ret
xchg
jae
fwait
mov
dec
ss
clc
lcall
xchg
add
jb
dec
into
lahf
inc
bound
jmp
mov
xchg
mov
push
fcmovne
pushf
out
int
je
add
cld
cmpsb
fs
cmp
push
test
out
imul
adc
jl
vpcmpgtw
pop
xchg
aam
push
jae
xlat
adc
gs
xchg
push
les
lods
and
cmp
xchg
jae
int
sub
enter
orb
inc
cmp
icebp
lods
fucomip
std
dec
std
pop
lcall
xchg
pop
push
fsts
scas
add
add
add
add
push
push
xor
xor
test
std
in
inc
adc
and
cmp
fsubrp
sub
pop
pusha
gs
dec
test
fildll
pushf
std
rep
in
fidivs
aam
mov
xor
jg
in
ja
in
movsb
inc
jno
imul
ror
push
adc
pop
sub
insl
xchg
push
fcmovne
adc
dec
push
pop
pop
jp
pushf
xor
pop
in
sbb
out
xchg
jp
das
insb
into
push
in
fildll
movsb
movsl
adcl
testl
les
lods
testl
push
or
mov
mov
xchg
push
shlb
lds
testl
cwtl
and
cli
xor
mov
pop
xchg
push
cmp
in
rcl
push
scas
imul
cmp
adc
inc
mov
fidivs
loop
ljmp
aam
inc
dec
scas
add
add
add
popa
add
or
mov
fldenv
inc
jmp
pusha
fisubrl
jge
stos
imul
iret
cwtl
pop
mov
loope
push
sahf
in
pushl
jmp
sbb
out
cmp
mov
aam
dec
xchg
pop
push
iret
ljmp
lret
or
mov
mov
sti
ljmp
dec
rclb
shrl
cmp
fstl
das
inc
shl
xor
in
dec
cmp
mov
aaa
add
lret
ja
push
addl
test
ret
stos
pslld
fildll
xlat
xchg
or
cli
mov
mov
adc
xchg
outsb
loopne
mov
jae
imul
ljmp
insl
ds
inc
xchg
cmp
inc
popf
lods
jge
jne
sub
jmp
pop
push
push
xchg
jg
jmp
std
mov
and
addr16
add
add
add
mov
or
inc
popf
jle
mov
xor
cli
hlt
jle
filds
insl
xor
cmp
pop
test
dec
pop
xor
lret
fs
cld
sub
dec
cli
push
lcall
pop
xor
dec
xor
dec
jp
jb
push
cltd
ljmp
push
jno
mov
leave
pop
fwait
subl
arpl
jp
mov
mov
jl
jle
or
mov
jno
or
test
jmp
and
mov
or
cld
cmp
fnstenv
js
lods
jmp
dec
ror
cmp
push
xchg
push
add
jne
mov
inc
insl
clc
decl
sahf
and
dec
jbe
movb
push
repnz
cltd
out
and
in
lea
fnstcw
ss
lods
mov
fdivs
fstpl
xor
daa
ret
in
or
pop
xor
add
xor
inc
mov
fwait
adc
mov
add
add
add
inc
loope
outsl
or
mov
cli
inc
leave
and
fildll
repz
xchg
fisubs
ret
cmp
int
inc
xchg
in
add
and
cld
stos
push
loope
aas
ret
js
xchg
jne
jl
mov
into
cmp
inc
and
out
adc
enter
cmp
xchg
dec
sub
stos
sbb
and
lcall
inc
in
cwtl
xchg
outsl
icebp
push
inc
and
or
fwait
cmp
ds
pop
hlt
push
xchg
dec
lcall
shlb
int3
jg
in
lcall
mov
add
mov
ret
push
pop
sub
aad
add
lock
loopne
dec
lea
scas
push
push
orb
xchg
call
sbb
cmp
test
jl
fldenv
sub
shlb
stos
test
daa
pop
fidivrl
sub
or
pop
loopne
call
fwait
xor
and
ficompl
mov
add
xor
cmp
inc
call
mov
add
add
add
cmp
clc
or
jmp
insb
sti
loope
lcall
pop
push
mov
stc
mov
rclb
push
in
loope
push
das
sub
mov
xchg
adc
fcmovb
pop
mov
fs
mov
mov
and
push
jl
cmp
fs
dec
pop
cwtl
jns
mov
lcall
mov
aam
rcr
push
loop
mov
sub
popf
std
out
mov
shll
or
fcmovnu
cli
fists
lret
imul
shrl
es
test
and
test
sub
dec
adc
dec
int3
lret
sahf
sub
fisttps
sub
fsubrs
cld
mov
mov
and
mov
pop
imul
test
mov
dec
lock
gs
adc
add
add
jp
les
mov
arpl
pop
imul
add
add
add
iret
xor
push
mov
daa
inc
hlt
fs
adc
push
outsl
cld
loope
into
mov
dec
cmp
jno
cli
les
sub
add
js
jl
or
mov
nop
loope
jno
pop
movsl
cltd
xor
cmpsl
jne
mov
test
dec
mov
aaa
rclb
push
xor
push
leave
aas
push
jns
dec
jecxz
scas
xchg
aaa
sub
aad
scas
inc
xchg
mov
mov
push
ja
lock
jb
push
notl
cmp
int
mov
aam
cli
push
push
pop
push
fldenv
add
mov
pushf
push
ja
mov
ja
xor
lret
ja
hlt
mov
dec
push
aam
inc
in
inc
dec
sbb
jg
cmp
int
pop
mov
bound
cmp
je
movsl
jmp
xchg
jle
ja
in
scas
pop
push
mov
aas
ret
or
mov
aaa
add
test
add
add
clc
pop
stc
out
push
pop
bound
inc
addr16
add
add
add
sbb
mov
sbb
js
dec
fucomp
daa
and
insl
and
cmp
dec
rcr
sub
daa
mov
call
out
rclb
mov
rolb
addr16
movsb
inc
movsb
pop
mov
and
stos
pop
inc
testl
and
inc
push
ret
push
popa
sub
fisttpl
loope
push
mov
push
aas
movsb
push
outsb
dec
in
sti
addr16
aad
inc
mov
cmpsb
lds
adc
aam
daa
mov
mov
mov
or
mov
hlt
jne
add
jns
and
enter
cli
dec
cmp
adcl
pushf
xacquire
loop
addr16
loop
sub
pop
pop
and
mov
xchg
add
into
popa
or
adc
cld
push
out
jl
mov
jle
in
adc
mov
loopne
fs
jns
add
movhps
lds
cli
lcall
push
addr16
add
add
add
mov
jns
in
push
outsl
or
xchg
add
sub
and
xchg
or
mov
mov
test
xchg
movsl
xchg
or
mov
dec
aaa
cwtl
sbb
inc
push
in
loope
mov
dec
fs
and
sub
adc
shrl
test
fstps
mov
ljmp
mov
cmp
out
mov
pop
mov
dec
in
jecxz
sub
jne
dec
or
jle
stc
hlt
sbb
mov
add
or
lds
das
mov
mov
fmull
mov
fsubs
pop
fwait
pushf
rcrb
lds
inc
lods
push
scas
sub
or
mov
fcmovb
add
push
cmpsl
xor
js
int3
and
scas
popf
add
clc
sub
std
push
dec
jns
in
mov
xor
lcall
sbb
add
xorl
insb
lret
adc
add
add
icebp
and
in
je
cmp
add
lret
mov
adcb
dec
sub
sub
inc
cmp
push
mov
push
cli
push
xchg
adc
push
out
jo
push
pop
rcrb
dec
shll
and
jae
out
push
cmp
jo
testb
jecxz
out
pop
mov
cwtl
dec
mov
lods
dec
addr16
cmc
cs
mov
out
jge
xchg
ret
xchg
icebp
vmread
jne
sbb
mov
inc
mov
push
ljmp
xchg
sbb
pop
sub
push
mov
es
sbb
sahf
aaa
ja
sub
fbstp
out
mov
addr16
push
scas
jno
mov
insb
dec
add
adc
inc
inc
mul
iret
fdivrl
mov
mov
int
fisubrl
xchg
sub
stos
pop
test
xor
rclb
mov
jns
mov
in
jno
sbb
add
add
pop
sbbl
fstp
rorl
shrb
add
add
test
movsl
inc
inc
outsb
in
frstor
push
jb
xlat
sub
sub
and
push
lret
jae
das
add
fstpl
lods
ss
fimuls
mov
mov
aad
mov
gs
pop
dec
aas
inc
jmp
mov
or
std
push
jp
mov
lret
mov
subb
jbe
push
jl
add
inc
data16
fnstenv
mov
test
push
sub
std
into
sub
cmp
movsb
inc
cli
int
sub
sub
mov
mov
mov
mov
and
add
adcb
movsb
sbb
pop
dec
stos
cli
fmull
filds
call
in
icebp
dec
xchg
mov
mov
je
mov
lcall
out
inc
in
popf
pop
movsl
inc
and
ds
hlt
sbb
aaa
xor
mov
xchg
add
add
in
mov
jecxz
out
mov
mov
add
add
xlat
push
mov
sarl
ret
es
dec
pop
shll
mov
lods
or
push
cli
jns
enter
mov
daa
enter
pop
out
arpl
movsb
sbb
loope
and
inc
pop
jl
cmp
sbb
xchg
sub
xor
loop
adc
inc
push
mov
jbe
mov
jmp
and
sbb
and
test
xor
mov
xor
add
cmp
inc
lret
jle
mov
faddl
inc
mov
push
xor
pusha
cmpb
test
cmp
dec
adc
cmp
imul
clc
cmp
mov
out
push
jecxz
popf
in
pop
ret
insb
push
adc
aad
repnz
imul
push
push
sbb
dec
aad
jae
jp
lock
pusha
xchg
divb
fdivs
push
insl
push
xchg
test
jg
into
lret
orl
add
add
test
lahf
pop
sti
jno
fs
mov
push
pop
adc
lock
in
jne
push
es
lods
lods
jg
xchg
cltd
mov
mov
popf
push
cltd
add
insl
xor
dec
push
push
repnz
inc
mov
pusha
jge
sbb
push
pop
je
sbb
jecxz
fldl2t
push
adc
sub
adc
sti
data16
sbb
das
cmp
loop
jmp
hlt
cltd
faddl
rolb
and
pop
pop
enter
iret
out
sarl
pop
mov
scas
or
mov
popl
stos
xchg
int
pop
mov
cmpsl
lds
lcall
adc
mov
inc
adc
je
add
scas
outsl
push
pop
ficompl
xchg
dec
cmp
in
dec
notb
mov
sbb
xchg
jnp
lahf
jge
inc
and
daa
ds
push
add
ret
add
lock
in
lcall
jae
dec
mov
xor
lret
add
add
add
xor
rclb
push
jae
pushf
dec
icebp
fwait
cmp
int3
push
ret
loope
push
popa
and
pop
mov
push
adc
cmpsl
sbb
movsb
mov
mov
hlt
test
in
insb
test
jg
xor
mov
mov
outsl
dec
ficomps
mov
inc
imul
add
lret
divl
pop
int3
lret
push
pop
jp
loope
and
cmp
repz
test
insb
pop
shll
or
cltd
out
xor
clc
leave
add
aam
pop
je
cmp
jno
sbb
and
movsl
dec
or
jo
inc
push
ficompl
mov
mov
arpl
mov
out
jp
in
jne
loop
pop
dec
jo
or
call
mov
pusha
add
pop
shlb
jae
ret
ffree
aam
sbb
or
aam
cli
inc
sti
lret
add
dec
or
jg
dec
arpl
clc
addr16
add
pop
dec
fwait
repz
cmpsb
xchg
outsl
lret
test
shlb
push
xor
int3
dec
push
icebp
loop
push
push
and
sub
scas
data16
jno
jno
push
and
cltd
xchg
mov
stos
mov
out
insb
rcrb
push
lret
mov
push
leave
or
xchg
add
and
cmpl
mov
cmp
inc
fldl
adc
mov
add
fidivs
test
pop
test
aas
pushf
in
shr
inc
cmp
fldcw
sub
ret
mov
bound
nop
dec
mov
push
xchg
push
jecxz
inc
jno
jmp
xchg
mov
pop
jg
out
ds
lret
cmp
imul
iret
cmp
pushf
inc
aas
lret
cld
sbb
jg
in
stos
lds
movsl
adc
xchg
add
adc
dec
fldl
xchg
popf
stos
inc
insl
sbb
outsl
mov
push
cmp
addr16
add
add
mov
mov
movsl
scas
fnstcw
mov
adc
sbb
int
gs
xchg
add
mov
mov
mov
sbb
and
out
mov
or
mov
test
dec
cltd
mov
stos
sbb
inc
mov
mov
mov
jge
movsl
xchg
rorb
xlat
xchg
jp
push
push
std
fisttpll
ss
mov
out
sub
pop
lret
xchg
out
rol
sub
out
test
cmp
or
push
mov
xor
xchg
cmp
shrl
jnp
out
sub
xor
and
xor
push
movsl
inc
mov
push
pop
insl
add
ss
push
add
lea
loopne
adc
push
out
je
cltd
sub
xchg
arpl
std
fistpll
pop
xchg
sub
pop
cmp
mov
add
add
inc
fbld
mov
pop
ss
add
add
add
ds
mov
sbb
pushl
lret
pop
xor
pop
xor
popf
mov
lahf
cltd
daa
out
xchg
or
push
test
jne
inc
out
jae
or
xor
hlt
sub
stc
add
popf
jl
push
lods
loope
jle
mov
enter
int
shlb
stc
cmp
stos
push
mov
lahf
aas
inc
fisttpl
sub
xchg
add
scas
xchg
mov
cmc
imul
adc
jp
fadd
sbb
cmp
mov
fldl
xchg
mov
in
es
repnz
pop
xor
jbe
mov
mov
cmp
bound
xchg
adcl
fmuls
push
sbbl
sbb
push
sbb
in
into
push
pop
dec
dec
push
push
xor
ss
aad
jae
cmp
xor
icebp
loope
or
add
xlat
mov
add
add
fistpll
call
add
mov
add
out
pop
pop
pop
out
aad
push
add
int
fs
cld
cmp
sar
cs
cmpsb
into
int
xor
mov
aam
xor
sti
aam
lea
jne
mov
pusha
test
cld
adc
cmp
int
add
fsts
repnz
movsl
mov
and
mov
ret
hlt
xchg
fs
sbb
movsb
subb
or
repz
mov
call
imul
adc
xor
or
and
int3
insb
icebp
and
fsubrp
xchg
in
adc
dec
xchg
lds
or
xchg
popa
mov
and
pop
lret
shll
fwait
sub
dec
mov
inc
out
loopne
pop
insl
ret
out
scas
fidivrl
sarl
adc
loop
cmpsl
and
jecxz
pop
ss
cmp
in
push
jg
sbb
movsb
xchg
add
mov
cld
and
incb
add
add
std
sti
leave
sti
iret
jmp
xor
add
add
add
pop
pop
orl
jns
mov
sub
leave
pop
push
les
sub
mov
in
sub
lods
shlb
addr16
dec
xlat
inc
add
stc
jle
cmpb
mov
filds
test
orl
xchg
mov
movsb
add
dec
stc
jl
cltd
adc
mov
lea
push
lock
fscale
sub
mov
pop
ss
out
adc
mov
hlt
scas
ret
pop
mov
sub
jp
xor
sbb
add
aaa
cltd
and
rclb
cmpsl
add
mov
into
cmc
pusha
ljmp
add
out
subb
insl
cmp
cmp
add
insl
in
adc
mov
call
pusha
add
fwait
sbb
iret
fdivrl
xchg
scas
or
add
mov
mov
xor
call
add
add
add
mov
push
mov
in
xchg
fwait
movsb
cs
cmp
adc
or
add
sub
mov
negb
pop
push
ja
mov
aas
push
xchg
std
test
sbbl
lahf
mov
cld
push
pop
pop
iret
mov
into
scas
jecxz
or
cmp
mov
fwait
ret
int3
jecxz
jmp
jl
enter
fstl
int3
stc
pusha
mov
mov
js
cwtl
jne
loop
sti
fistpll
sti
inc
cs
loopne
fistpl
mov
inc
stc
mov
outsl
mov
pop
jecxz
cmc
mov
pop
ret
shl
fwait
sbb
int
out
ss
mov
mov
dec
jge
jge
repz
leave
push
jb
imul
sbb
pusha
xor
insl
dec
inc
inc
iret
and
dec
les
fwait
mov
or
jg
mov
sahf
loop
fcomip
mov
roll
add
add
and
lds
mov
mov
ret
push
jle
cmp
cmp
cld
push
clc
fistpl
push
clc
jns
cld
push
inc
ficompl
adc
jnp
or
data16
ss
push
push
out
mov
cmp
xchg
push
adc
jae
jle
mov
pop
addr16
inc
push
lods
sub
mov
xchg
sub
and
mov
inc
lods
jnp
mov
outsb
cli
andb
je
xchg
daa
imulb
sub
and
mov
stos
inc
dec
dec
in
in
inc
shr
divl
cmp
mov
shrl
rcll
mov
dec
sarb
rolb
push
push
repnz
pop
test
push
stc
pop
imul
mov
pop
popa
test
sbb
aam
add
aaa
aas
mov
iret
js
sub
std
mov
je
xor
int3
mov
addr16
call
add
inc
enter
pushl
cld
sbb
addr16
add
add
fldenv
stos
adc
mov
sti
sub
imul
xor
jne
sub
cmp
adc
fisttpl
ja
xchg
pop
notb
jo
in
mov
xchg
lods
jg
push
or
push
lcall
xlat
pop
out
jmp
rcrb
ja
in
sub
in
stc
push
sbb
jge
sbb
xchg
mov
mov
dec
outsl
movsb
pop
pop
in
shl
in
flds
jmp
call
aas
mov
cltd
call
add
inc
cld
in
and
test
push
sarl
mov
fidivrs
testb
inc
pop
and
bound
out
jns
cmpsb
jmp
sub
mov
sbb
fldcw
push
sub
mov
jmp
sar
scas
test
ds
iret
push
loop
adcl
add
add
pushf
shrb
lcall
mov
ret
add
add
add
dec
fsubrl
fbstp
pop
out
les
jg
mov
lret
scas
xlat
sbb
cmp
nop
mov
lret
sub
gs
dec
cmp
jl
enter
dec
shrb
push
int
inc
xor
add
jle
shl
leave
fdivs
pcmpeqw
or
ds
ret
mov
out
je
insb
mov
cmp
and
sub
pushf
imul
daa
add
or
inc
and
arpl
and
jne
scas
rolb
cmpsb
nop
repz
xchg
fstl
push
and
mov
stos
push
imul
sbb
clc
xchg
pop
pop
out
cli
dec
rorl
xchg
xor
std
xchg
xchg
pop
sbb
lods
mov
inc
mov
mov
je
aam
jns
dec
lret
dec
fildll
sub
scas
mov
aas
scas
fldcw
sub
add
add
dec
and
clc
lds
mov
movsl
ret
push
push
lret
stc
xor
out
jb
enter
adc
mov
out
mov
xor
mov
pop
cltd
xor
rclb
push
and
inc
mov
sarb
xchg
and
inc
pop
mov
je
mov
das
pushf
dec
pop
or
cmp
aas
push
xchg
dec
add
in
sbb
cs
jae
mov
cmc
inc
xor
push
cmp
popl
add
sub
imul
ffree
cs
dec
fcoms
cmp
pusha
push
push
movsl
sbb
fisubs
lret
sbbb
je
test
or
lcall
iret
lret
fildll
mov
ds
std
jmp
jmp
flds
popf
jns
mov
cmp
inc
dec
scas
out
ret
enter
ljmp
jg
jne
jne
jg
loop
mov
sbb
add
add
add
pop
les
cmpsb
pop
dec
mov
mov
mov
xchg
or
into
push
pusha
push
and
in
aaa
mov
pop
sbb
mov
dec
mov
mov
push
add
lahf
and
push
lahf
sarb
fistpl
pop
jmp
dec
imul
lds
mov
xchg
adc
mov
lret
add
cmpsl
lds
and
ds
xor
xchg
jb
out
mov
aam
in
push
lahf
in
push
mov
mov
jbe
in
dec
sar
cs
testl
sahf
cmp
mov
push
imul
jmp
test
rolb
push
jle
xor
lret
jno
addb
dec
sbb
call
mov
jp
inc
mov
xchg
orb
xchg
sbb
mov
cmc
mov
lods
movb
add
add
lods
xchg
leave
jmp
ss
insl
add
pop
dec
push
mov
mov
mov
fstpt
icebp
rcrb
jne
incb
mov
jnp
bnd
in
mov
push
and
push
repz
sbb
stos
enter
icebp
pop
aaa
push
push
popf
push
mov
rcr
dec
movsb
push
xchg
sub
into
pop
and
cmc
mov
hlt
jnp
xchg
jnp
jbe
inc
in
in
icebp
xchg
repnz
shrl
xchg
sub
pop
aas
cmpb
fidivrl
pop
and
mov
cmp
pop
jo
pop
insl
pop
sub
xor
sub
hlt
xor
inc
mov
cld
dec
jg
fdecstp
dec
jb
fucomip
jne
push
lcall
sbb
mov
push
adc
jmp
and
out
sub
pop
lahf
inc
push
push
push
js
imul
push
dec
inc
and
outsb
jle
lods
testl
movl
add
push
jno
les
stc
shlb
inc
nop
xor
mov
popf
sub
fld
loope
movsb
inc
arpl
or
ror
scas
jno
fsubrl
mov
sar
pop
loop
jecxz
adc
push
icebp
push
outsb
sbb
mov
adc
mov
mov
shl
pusha
cmp
negl
xorb
mov
add
push
xor
mov
add
addb
add
jne
xlat
fidivrl
and
inc
testl
das
or
notl
stos
pop
fcoms
dec
mov
mov
add
loop
push
cmpxchg
lock
push
add
scas
dec
mov
shlb
xor
adc
js
mov
pop
jmp
mov
lahf
lret
clc
in
jle
rcr
dec
sahf
pop
cmc
xchg
shrb
stos
cmc
xlat
lea
jns
in
inc
push
mov
jp
mov
mov
add
mov
mov
add
popf
aad
enter
add
add
movsl
xchg
dec
lods
icebp
mov
mov
and
push
out
fnstenv
out
mov
xchg
es
cltd
fcmovnbe
outsl
dec
jmp
mov
mov
orl
repz
dec
mov
into
cmp
adcb
mov
daa
add
into
sub
sti
push
dec
je
ljmp
les
dec
jne
xor
jl
and
sub
or
stos
inc
int
stc
repnz
xchg
cmp
jp
mov
daa
aaa
in
ljmp
into
out
loopne
iret
jb
mov
xor
mov
js
fadds
lret
push
test
pushf
push
fmulp
dec
mov
mov
sub
popa
loop
inc
lods
ds
mov
sbb
notb
fs
xchg
jecxz
in
jnp
jle
lods
cmp
add
add
out
sti
xlat
in
aad
ljmp
add
add
add
dec
fadds
mov
xor
sti
jp
jnp
aas
lret
jmp
in
rcrl
and
icebp
lahf
dec
xor
adc
aad
xchg
enter
push
loop
ds
adc
adcb
jmp
out
aas
out
xor
mov
ficomps
movsl
insb
pop
dec
mov
mov
jg
shrl
les
adc
sbb
ret
push
xchg
inc
fistps
xchg
dec
rorb
loopne
out
add
xor
or
aaa
inc
into
inc
iret
mov
or
inc
push
jne
negl
iret
sbb
sbb
icebp
inc
scas
cmp
mov
add
and
sbb
popl
popa
push
jecxz
adc
mov
mov
sbb
push
xor
add
add
push
sub
cmp
jg
and
mov
std
aad
addr16
add
add
or
lret
or
movb
outsl
outsl
jecxz
ss
adc
inc
insb
xchg
or
push
xchg
jg
push
cld
mov
outsb
lret
outsb
jno
fldenv
lods
or
sub
shrl
xchg
enter
pop
imul
or
fldl
xchg
xchg
je
mov
fwait
subb
pop
xchg
sti
jecxz
add
mul
or
xor
pop
jne
push
call
mulb
lret
mull
cltd
fstpt
dec
inc
loop
fdivr
fs
cli
test
sbb
inc
xor
test
repnz
push
add
mov
fsub
jmp
loopne
jns
sub
adc
rorl
in
shlb
mov
xchg
pop
mov
push
dec
lcall
aas
cmp
shlb
and
or
sbb
push
int3
mov
dec
hlt
call
cwtl
mov
add
jmp
ds
repz
fcoms
popa
xchg
add
add
add
dec
add
loop
outsb
insl
add
inc
inc
lods
cld
dec
mul
enter
jne
push
sbb
stos
inc
mov
arpl
lret
sti
adc
iret
shl
dec
test
in
mov
dec
gs
movsb
fsts
inc
xor
xor
add
lahf
hlt
inc
inc
push
cli
cmp
subb
add
add
xor
mov
out
inc
push
pop
add
and
push
or
jmp
mov
pop
loopne
jmp
ss
push
lods
xor
repz
add
je
sub
js
rcll
sub
popf
imul
gs
mov
movsb
jg
arpl
cmp
pop
addr16
cmpsl
sti
mov
shrl
or
rcll
mov
jb
test
jne
cmp
aaa
stc
out
movsl
test
shl
mov
test
in
ds
cmp
rcll
movsb
xorb
mov
mov
mov
jnp
cltd
jg
int3
add
add
add
cs
fisubs
sub
dec
clc
mov
sbb
scas
mov
jecxz
out
sub
xor
push
and
mov
xor
je
and
mov
push
fldt
pop
jnp
jecxz
lods
fwait
adc
mov
lock
and
popf
dec
push
mov
daa
cld
in
cmp
inc
dec
nop
sub
lret
jne
inc
dec
inc
mov
cmc
add
xchg
jns
orb
cmp
fnstenv
int3
in
push
aam
test
mov
addr16
mov
jp
jmp
xchg
sub
cli
inc
adc
cmp
mov
int3
mov
dec
mov
mov
and
xor
ret
pop
mov
dec
andl
in
stos
inc
bswap
mov
lds
lahf
mov
push
jb
nop
xchg
stc
enter
in
sbb
push
inc
mov
int
add
add
add
mov
std
push
mov
pop
jnp
int
lods
mov
jle
jle
add
nop
ss
sub
jns
mov
xchg
cmp
sbbb
xor
and
and
or
jnp
jo
adcb
cmpsl
jmp
es
stos
mov
stos
nop
sub
push
cld
xor
sbb
nop
dec
stos
roll
repnz
loopne
or
cmp
fmull
push
adc
popa
xchg
xchg
dec
sub
mov
xchg
fadds
call
call
inc
pop
mov
pop
xchg
mov
lea
stos
dec
sub
cmc
aad
dec
sbb
mov
ror
fdivs
mov
xchg
cwtl
ja
arpl
jle
push
mov
dec
test
movl
test
insl
enter
cmpl
add
cmp
jmp
mov
inc
lcall
jne
imul
cmc
call
inc
push
popa
and
dec
jnp
into
add
add
add
sti
pop
into
js
add
adc
movsb
lahf
lret
aaa
es
pop
lahf
cmpl
sub
adc
scas
repnz
sub
and
add
es
in
repz
nop
sahf
out
orb
clc
pop
pop
sbb
lcall
rcll
cmp
jae
dec
leave
xlat
dec
fstl
out
hlt
lret
insb
xchg
and
cs
sbb
cmc
adc
dec
dec
scas
cmovnp
pop
loope
sar
stos
mov
adc
mov
movsb
adc
fcoml
test
pop
fnstcw
out
je
daa
popf
lods
or
test
jae
pusha
xchg
sub
lret
fld1
xchg
ret
cmpsl
dec
pop
and
cmp
add
jne
sbb
jo
pop
and
xor
stos
mov
mov
pop
xor
xor
cmp
adc
and
mov
or
xchg
jno
add
add
ja
iret
sub
loop
cmp
add
add
add
and
orl
and
shll
jb
hlt
inc
inc
fmulp
nopl
adc
lds
fwait
jl
out
xchg
fchs
iret
data16
shl
fisttps
sahf
jge
pushl
add
subb
dec
or
mov
mov
test
imul
jge
cwtl
mov
pusha
jp
pop
rcll
jg
fwait
loopne
pop
pop
sub
xchg
pop
out
add
aad
inc
fnstcw
pop
in
mov
sbb
fxch
mov
int3
push
xchg
xchg
sub
sub
out
popf
add
or
loopne
xchg
sbb
dec
jae
mov
and
or
and
sub
xchg
test
movsb
test
es
adc
sahf
cmp
mov
or
ja
mov
pop
mov
sub
stos
lea
mov
out
out
out
into
gs
cld
test
test
add
add
add
push
push
enter
in
addl
sarb
movsb
lret
addl
lods
mov
add
adc
mov
mov
xchg
clc
jnp
ljmp
mov
dec
into
mov
or
jge
leave
mov
xchg
out
inc
icebp
dec
cmp
fdivp
mull
popa
lret
mov
movl
wbinvd
jns
jle
stos
pop
mov
int3
or
out
loope
fwait
dec
loope
mov
jbe
dec
sub
loopne
and
mov
test
cmp
je
adc
jmp
xchg
mov
repnz
xor
dec
ds
pop
ret
lret
stos
pop
jb
sub
scas
es
adc
and
cmc
sub
mov
sbb
jb
push
aam
push
xchg
pop
ds
adc
mov
std
xchg
pop
cmpsb
loopne
and
je
out
mov
fsts
mov
add
add
pop
insb
inc
mov
mov
adc
pop
lods
cwtl
inc
ret
fiaddl
jg
daa
jno
push
inc
xor
xchg
mov
push
leave
dec
inc
lret
int3
and
xchg
lret
out
fwait
push
jg
addr16
mov
pop
insb
mov
arpl
inc
outsl
imul
jno
pusha
xlat
stos
push
sbb
dec
aad
scas
or
aam
repz
jae
movsl
mov
lcall
out
and
pushf
out
dec
fistps
mov
mov
fstps
es
in
nop
cmp
rcll
pushf
push
xor
stc
cmp
popa
cs
inc
mov
clc
pop
sahf
push
sti
pop
das
mov
jl
pop
imull
push
std
ljmp
jge
sarb
das
fcomip
test
mov
mov
pop
stos
test
dec
and
xor
push
cmp
push
cld
movsb
sti
mov
ljmp
add
add
dec
daa
dec
das
outsb
imul
push
xchg
cmp
add
add
add
xor
sub
jp
jmp
ret
jle
xlat
add
outsl
jmp
enter
add
dec
stc
pop
rclb
mov
int3
mov
jb
dec
ljmp
cmpsl
cwtl
imul
pop
inc
fidivrs
mov
cmc
in
xor
pop
into
pop
sti
mov
nop
and
imul
mov
xchg
cmp
int3
xchg
and
enter
hlt
adc
jle
adc
cmpsb
xor
and
dec
adc
xorl
mov
pop
push
xor
mov
cwtl
dec
mov
xor
jb
clc
mov
mov
out
ficomps
icebp
xor
jae
ljmp
sarl
aad
inc
aam
imul
jmp
cmpl
push
shll
jg
pop
loopne
rol
cmp
aam
xchg
imul
out
pop
pushf
sbb
pop
push
ror
mov
cltd
call
out
lahf
ret
or
cmc
sti
pop
roll
add
add
add
mov
scas
dec
fistps
in
lods
adc
addr16
xchg
imul
and
mov
lret
call
xor
xor
and
std
jg
fwait
push
push
imul
shll
lods
jg
and
lret
ljmp
mov
mov
jge
rcrb
enter
out
ja
push
cmp
mov
sub
add
xchg
pop
mov
cmp
inc
out
or
mov
mov
repnz
popf
in
inc
dec
popa
jne
icebp
or
or
push
shl
ds
sbb
sarl
mov
cmp
inc
stos
xchg
inc
or
pushf
pop
cmp
inc
std
pushf
repnz
in
int
leave
ficoml
xchg
pop
lock
xor
enter
test
sub
push
sbbb
mov
mov
mov
pop
xchg
or
mov
add
add
add
jnp
adc
movsb
pop
addb
cli
or
clc
mov
pop
addr16
push
dec
lods
mov
xchg
xor
xor
sub
push
inc
jns
imul
test
jno
add
mov
dec
pop
or
fiadds
imul
fbstp
lahf
or
mov
pop
mov
popa
int3
cld
lret
push
cltd
adc
bound
dec
pop
ljmp
lahf
in
adc
mov
sbb
movsb
and
jl
insb
jge
inc
or
xchg
mov
pop
jo
fistpll
dec
or
mov
in
fnstsw
insb
pop
fwait
aas
movl
daa
push
mov
out
in
jns
and
cmc
xchg
sub
pop
jb
adc
lcall
dec
inc
mov
stc
insl
cmp
js
bound
lcall
xor
add
sbb
sub
dec
or
out
packuswb
add
add
add
sub
fs
mov
mov
scas
gs
pop
aas
lahf
jbe
and
jp
inc
add
fs
inc
hlt
js
sbb
outsb
and
and
jnp
cmpsl
cmp
xor
sub
mov
mov
repz
test
xor
sahf
pop
leave
or
shll
stos
testb
scas
cmc
add
rorb
dec
xchg
call
aad
dec
cmp
in
mov
int3
xor
or
and
mov
insb
and
jecxz
test
shll
stos
jl
inc
pusha
push
add
daa
cmp
stos
out
xchg
imul
add
xor
shrl
mov
fdivrl
add
sub
cmc
mov
das
int
and
out
xchg
popa
add
jge
mov
in
mov
nop
mov
lea
cmp
and
mull
sti
mov
rcrl
nop
nop
mov
pushf
adc
ds
jae
push
mov
add
add
add
rcrb
out
pop
xchg
pop
jbe
out
stos
test
jmp
push
xor
lahf
or
pop
es
cmpsb
js
cmp
shlb
push
cmp
inc
subl
sahf
xor
mov
iret
jmp
mov
fwait
sbb
inc
or
pop
std
fbld
ret
xchg
loop
xchg
mov
jp
lret
out
lods
rorl
mov
jl
hlt
inc
inc
ds
mov
mov
shrb
jns
icebp
daa
dec
es
leave
loop
add
hlt
mov
aad
fdivr
in
je
popf
adc
dec
jnp
and
xor
dec
mov
mov
imul
add
out
adc
jne
lock
mov
outsl
xchg
shlb
sub
xorb
and
inc
std
aaa
mov
xchg
and
idiv
lahf
insl
mov
mov
xlat
add
add
add
les
sti
test
mov
ljmp
outsl
int
loop
lret
cmpsl
push
mov
mov
sbb
aad
lret
mov
and
std
jmp
cmp
repz
add
pop
jo
and
xlat
jecxz
jo
sarb
or
mov
int
push
jae
ljmp
pop
je
out
pop
shll
aas
imulb
sbb
pop
data16
fnstsw
jae
lds
sbb
inc
mov
xor
adc
shl
add
out
xor
lods
divl
pop
inc
loopne
mov
insl
dec
fbstp
lods
jbe
and
cwtl
jae
adcb
sub
mov
inc
cli
add
int3
data16
icebp
pop
xchg
imul
mov
into
in
fidivrs
sbb
aas
in
out
sub
add
add
xchg
ja
push
jg
leave
or
es
pop
xchg
add
add
add
mov
int3
subb
fiaddl
int3
inc
lcall
mov
push
clc
fwait
sub
shrb
sub
and
pop
fidivrl
hlt
mulb
push
mov
xchg
fdiv
push
or
xchg
inc
add
iret
fimull
xchg
inc
mov
dec
ja
loope
cld
dec
sbb
sbb
inc
sti
sbb
sbb
in
orb
or
pop
sub
testl
jnp
xchg
xchg
add
add
repnz
mov
mov
xor
and
pop
adc
sub
pushf
add
adc
imul
mov
or
loope
test
fwait
movsl
ret
cmpsb
or
hlt
loope
and
loop
decb
iret
jns
rorl
inc
out
and
add
lahf
cmp
cmc
xchg
or
es
sbb
cwtl
imul
xchg
movsb
mov
lock
flds
add
add
add
and
mov
in
movsl
xor
loop
mov
or
push
xchg
mov
movsl
mov
fs
mov
test
lcall
fcoml
mov
adc
ss
mov
ret
mov
outsb
ljmp
mov
cwtl
pop
in
cmp
loopne
mov
or
pop
or
inc
cmp
scas
push
aad
jbe
jns
mov
clc
dec
out
sbb
pushf
pop
pop
cmp
sti
jae
mov
dec
pushf
cmc
loop
call
jb
pop
inc
out
insb
adc
dec
inc
and
lods
push
sub
or
roll
dec
pop
pop
aas
add
cli
clc
and
in
dec
out
jo
jge
dec
inc
in
or
jns
cli
push
inc
push
xor
inc
popa
ja
out
fldcw
push
in
sub
or
add
add
add
pop
cmp
in
and
dec
repnz
repz
js
xlat
jns
add
jo
lcall
mov
pop
fadd
cmp
fs
sbb
imul
cmp
mov
inc
push
push
xchg
push
mov
aad
mov
fldcw
test
arpl
or
inc
hlt
stc
addl
dec
mov
add
movsl
jbe
push
or
mov
push
and
pop
movsb
push
push
mov
xor
movsl
ret
test
pop
push
dec
sub
fistl
mov
jno
fiaddl
xor
imul
mov
mul
cmc
out
xor
movb
xchg
xor
pop
popa
gs
xor
int
mov
mov
ss
idiv
cli
inc
outsl
test
pop
ds
outsb
pop
push
addb
add
in
sbb
sahf
cmc
fsubrp
jnp
sti
enter
push
insl
fildl
add
add
add
rorl
inc
ret
inc
gs
clc
sbb
push
cmp
fxch
sbb
jg
pop
fidivl
and
loop
xor
push
sbb
sbb
lds
rcl
dec
sbb
ljmp
jmp
jg
es
cwtl
sbb
push
jge,pt
pushf
shr
fistpll
jmp
fs
bound
nop
add
das
and
mov
sarb
mov
ds
xchg
int
aas
lods
mov
xchg
lods
ljmp
sub
cld
and
jmp
fstpl
xchg
push
pop
pop
sets
loope
xchg
aaa
cltd
clc
cmp
fisubrs
mov
pop
imul
pmuludq
cmc
dec
mov
sub
dec
ficomps
sbbl
jb
xor
jae
out
jecxz
pusha
pop
sbb
pop
dec
jle
jg
std
fstpt
stos
push
lea
add
add
add
fidivs
sahf
addr16
int
sahf
mov
pusha
xor
xchg
and
ds
inc
lcall
outsb
jmp
loope
mov
and
mov
je
lock
jecxz
cwtl
aam
frstor
add
sbb
ret
ss
or
add
xchg
mov
rolb
test
call
shld
inc
or
cmp
cmp
test
fstps
jl
inc
push
xor
ss
mov
fisubs
sti
or
sbb
rcrb
leave
dec
sub
popf
xchg
add
xchg
std
mov
mov
ljmp
daa
lea
add
mov
pop
push
out
cmp
push
xor
sbb
rcll
push
lds
addr16
jb
push
pop
sbb
nop
adc
shll
cmp
ljmp
inc
xor
iret
fldl
add
add
add
lds
dec
and
inc
sti
repz
lcall
xchg
cmp
sbb
mov
push
adc
out
jne
fnstsw
pop
jo
pop
ret
mov
scas
inc
mov
lods
jmp
sbb
pop
adc
mov
xor
hlt
mov
stos
cwtl
mov
and
adc
cld
movsl
jg
xchg
dec
cmp
movsl
insb
add
hlt
into
shrl
jne
movsb
mov
or
mov
or
out
cltd
ret
aas
push
pop
cli
fcomp
jle
adc
mov
sub
mov
add
arpl
mov
clc
sbb
outsl
sub
lock
imul
in
daa
loope
inc
jl
stos
inc
mov
arpl
sub
outsl
adc
jge
nop
push
push
inc
sbbl
push
ds
push
addl
ja
adc
leave
jmp
scas
inc
call
fiadds
add
add
add
cld
jg
cwtl
lcall
addl
jo
fcomi
es
push
sbb
icebp
xor
sub
popf
jg
fidivl
mov
mov
or
imul
xchg
inc
adc
sti
cli
sub
jp
or
sbb
mov
fnstsw
in
jb
xor
in
sub
scas
dec
js
jns
jecxz
daa
mov
pop
xlat
lods
movsb
cli
cmc
cli
rcll
push
adc
xchg
outsb
push
cltd
ror
std
insl
faddl
dec
in
mov
or
mov
add
push
aad
or
dec
call
icebp
mov
pop
sbb
cmp
sbb
out
and
not
cmpsb
sub
lcall
lahf
nop
faddl
std
push
push
pop
sub
int
test
fadds
cwtl
pop
sbb
mov
xchg
and
mov
inc
xchg
cmpsl
fimull
faddl
mov
add
add
add
fmuls
add
into
xor
cs
andb
loope
and
insl
push
iret
imul
mov
lret
push
jo
pop
gs
mov
xchg
scas
xchg
inc
inc
dec
mov
adc
inc
push
dec
shll
dec
rolb
rol
out
sbb
xchg
jmp
xchg
lret
dec
cmpb
mov
test
push
mov
in
dec
lds
popa
jb
sbb
fsub
lcall
push
js
inc
call
push
lcall
push
and
clc
std
pushf
xchg
mov
loopne
push
inc
mov
push
and
push
jle
xchg
mov
aam
stos
ss
mov
push
and
js
cs
or
push
push
sti
mov
push
sbb
mov
jnp
xor
pop
pop
loop
add
and
mov
sar
jmp
stos
out
int3
push
lcall
add
jg
mov
lcall
fisttps
or
loopnew
add
add
add
fs
js
pop
lahf
fnstcw
xchg
ret
lahf
jp
fucomi
je
sbb
in
cmp
or
sbb
or
fs
inc
xlat
or
rorl
pop
ljmp
test
and
test
dec
add
or
andb
pushf
adc
push
ret
inc
cmp
rcl
das
lods
xchg
xchg
leave
aam
push
inc
and
push
sbbb
cs
rcl
cmp
mov
xor
push
loopne
mov
sub
inc
push
out
pop
dec
mov
rorl
loope,pt
filds
lea
dec
call
add
out
cltd
fstpl
add
flds
mov
cmp
sbb
or
push
jmp
cltd
sub
sti
loop
xor
push
movsl
sbb
cwtl
cmp
aad
pop
subl
and
sbb
jns
xchg
xchg
mov
loope
add
add
add
fdivp
jl
repnz
mov
push
xor
es
xor
push
cltd
jae
push
scas
imul
fadds
lret
inc
in
mov
out
repz
cmp
aas
cmc
iret
inc
outsb
pop
cld
push
stos
and
sub
pop
dec
xchg
frstor
nop
adc
sbbl
push
or
sub
fsubl
rolb
sub
xor
pop
ja
pop
xorl
fs
loopne
mov
jmp
dec
ljmp
mov
mov
jns,pt
add
or
cli
repnz
rorl
pop
and
jmp
sub
jo
fldenv
mov
popa
sub
insb
rclb
fs
sub
fwait
iret
aas
rorb
add
popl
dec
sti
jb
mov
mov
jmp
in
repz
sti
cli
inc
adc
lret
xor
xchg
jae
fadd
fsubp
jnp
or
cld
les
add
add
add
cmp
scas
push
dec
sar
push
inc
mov
call
push
mov
and
cmpsl
cmp
xor
mov
dec
fsubrl
and
mov
mov
mov
scas
pop
jg
add
push
cmp
xor
sbb
addb
jle
pop
scas
sub
cmp
pop
rolb
or
inc
adc
cli
into
repnz
pop
pop
mov
push
xor
cmp
push
in
mov
push
inc
pop
mov
add
sub
cwtl
dec
pop
xor
adc
xchg
jns
mov
data16
xchg
push
mov
xor
push
dec
je
inc
xchg
fimuls
add
jo
roll
sahf
mov
xor
xor
mov
jmp
lret
mov
cli
mov
notl
xchg
and
mov
lcall
mov
fstl
js
es
les
fadds
outsl
lret
add
push
cmp
sub
cld
cli
jle
dec
nop
xor
jge
xor
add
add
add
cmp
or
addr16
and
mov
nop
stc
dec
cmc
and
lcall
stos
mov
add
fisubl
adc
fsubrp
ficomps
sub
inc
loope
xchg
jnp
xor
mov
mov
pop
jl
fldcw
out
das
call
add
cmpsb
jl
add
push
xor
aaa
jecxz
loopne
push
mov
insl
pop
shl
inc
push
and
test
outsb
pop
imul
jecxz
fcom
cmp
fmul
jmp
pcmpgtw
je
xchg
sbb
lahf
addl
pop
push
add
inc
mov
inc
jno
xchg
aaa
ret
mov
pop
adcl
lods
ss
cmp
lods
pop
aas
jb,pn
js
dec
call
xchg
xor
aam
cmp
xor
push
lret
xchg
and
pop
int3
icebp
cltd
lret
loope
cs
call
inc
push
mov
lea
pop
jbe
ja
sti
aaa
out
ja
scas
addr16
add
add
add
add
movsb
fstps
lods
or
mov
pop
cmp
rorb
xor
arpl
inc
inc
sbb
ret
flds
ud0
out
pop
stos
popa
cld
push
xchg
test
xor
iret
int
imul
into
fsin
popf
into
adc
cwtl
dec
or
sti
dec
sti
outsl
inc
cs
popa
push
ficomps
int3
inc
ss
add
jle
call
jle
insb
clc
cmp
dec
inc
pop
sbb
mov
mov
and
mov
clc
loopne
xor
cmp
cmp
out
xor
adc
sarl
jp
icebp
or
mov
call
pusha
int3
shrl
add
rcll
sub
add
xchg
add
pop
sbb
mov
mov
adc
ror
cltd
outsl
mov
aaa
pushf
jnp
aam
addr16
add
add
add
push
mov
mov
mov
fadd
pop
mov
imul
int3
adc
sub
pop
lahf
stos
push
dec
repnz
mov
mov
adc
pop
mov
in
xor
sub
jnp
dec
test
xchg
mov
loopne
add
ficoml
inc
enter
dec
ret
je
rcrb
xchg
add
scas
or
inc
mov
mov
pusha
mov
out
sbb
and
enter
mov
xchg
jae
pop
cmp
inc
ss
clc
sub
mov
leave
and
add
lret
pop
pop
sbb
push
repnz
mov
test
or
iret
push
loope
jecxz
dec
mov
jp
shr
cmp
mov
movsb
inc
push
cltd
cmp
jecxz
add
call
cmc
inc
jp
rcl
scas
inc
ret
jp
mov
lret
sbb
add
cltd
cmc
adcb
fcos
pop
mov
cmp
add
add
add
add
mov
or
inc
aam
lds
xor
fistpl
fld
and
bound
jbe
xchg
sahf
lds
addr16
add
data16
xchg
inc
dec
mov
mov
cmc
mov
repz
pmulhw
jle
shlb
cmc
cwtl
ja
jmp
shll
cmc
decl
cwtl
pop
shr
test
iret
dec
data16
mov
lods
sub
int3
pop
shll
and
clc
mov
sar
cmp
les
push
dec
fiadds
mov
inc
xchg
xchg
ret
rorl
xor
sub
loop
pusha
ds
mov
hlt
adc
mov
add
dec
xlat
stc
xlat
push
and
popf
sub
mov
cmp
xchg
mov
sbb
pop
dec
test
mov
lcall
scas
clc
repz
lock
jg
in
and
cli
mov
out
add
add
add
fisttpll
loop
out
addl
rcrb
stos
mov
sahf
into
push
js
inc
dec
inc
data16
in
pop
and
dec
mov
xchg
push
ja
cld
jae
cmc
pop
sub
cmp
adc
jbe
sbb
sub
mov
push
cmpsl
push
cmp
and
mov
mov
dec
inc
das
lea
sbb
inc
dec
inc
push
insl
movsb
mov
mov
mov
je
mov
mov
add
mov
mov
push
insb
sub
addl
push
lret
jo
ja
dec
out
iret
dec
xchg
xlat
std
out
jmp
jo
or
mov
pop
jecxz
xchg
mov
hlt
jmp
mov
sbb
adc
mov
fimuls
jae
sub
out
dec
fisttpll
fidivl
inc
sbb
add
add
pop
xlat
fistpl
xor
add
add
add
pushl
das
or
xchg
ss
pop
loope
aaa
scas
dec
daa
jne
push
pop
push
adc
lock
cmc
repnz
cmc
jne
mov
fsubrs
xchg
mov
jl
decl
idivb
rcll
xor
lret
sahf
loope
lret
shlb
cmp
jne
or
fstps
sbb
jo
or
jle
mov
mov
cmp
in
jnp
mov
xchg
jl
mov
add
sbb
fildll
repnz
lock
sbb
sbb
in
pusha
cmpsl
adc
mov
ljmp
push
test
pop
out
adc
pop
push
sub
repnz
dec
or
adc
pop
int3
cmpsl
jecxz
sbb
lret
cmp
lds
stos
dec
das
in
repz
mov
xor
xor
adcb
aas
lahf
sub
enter
add
add
mov
dec
js
stc
mov
dec
int
cmp
jmp
add
push
popf
mov
std
fisttpll
std
dec
jne
movsl
jl
cmp
call
push
lahf
add
out
outsb
shl
iret
ja
loop
mov
mov
sub
cmpsb
push
adc
pop
xchg
inc
outsl
push
enter
push
js
jbe
or
adc
mov
push
lea
lahf
mov
and
mov
out
sub
sbb
cmpsb
ljmp
xor
jb
ficomps
push
test
xor
xchg
aas
imul
pop
scas
mov
xchg
sbb
data16
fistpl
fxch
xor
rorb
push
ds
add
or
cwtl
jns
xchg
sub
sahf
mov
inc
ret
jmp
adc
cmp
xchg
push
ss
jns
ss
add
add
shrl
in
gs
sbb
add
add
insl
repz
fwait
jns
jns
ror
jne
ljmp
xor
out
adc
cmpl
or
or
dec
lahf
cmp
lret
mov
faddp
lcall
sbb
pop
dec
cmc
pop
bound
js
subl
decl
sti
loope
movsb
andl
sahf
mov
loope,pt
mov
add
js
fstps
mov
push
int
mov
push
cmpsl
xchg
cwtl
cmpb
mov
fisttpll
add
mov
cltd
insb
cmp
or
xchg
les
lds
jne
fmull
fnsave
lods
cmp
mov
test
xor
je
mov
push
xchg
cltd
pop
popa
dec
adc
ja
mov
clc
leave
sbb
jg
dec
aam
imul
imulb
mov
test
dec
dec
mov
push
push
insl
gs
lock
dec
mov
cmp
jnp
adc
jne
xor
rcll
add
add
lea
dec
movsb
in
sbb
jl
outsb
push
pop
stc
and
xor
movsl
push
ret
lds
std
xor
adc
shll
adc
arpl
xchg
push
cmp
leave
mov
ljmp
lea
cld
and
pop
int
add
andl
lds
mov
fmul
inc
mov
repnz
jge
cld
jbe
add
push
inc
stos
and
loopne
sbb
pop
fmulp
loop
pop
xor
push
push
movsb
xor
push
cld
mov
xchg
sbb
aam
or
sub
daa
fs
insb
mov
sbb
mov
pop
cmp
mov
addr16
cmc
cltd
push
inc
push
pop
and
js
add
jbe
jb
clc
into
in
xchg
lds
sub
sbb
push
xor
push
xchg
mov
loope
shll
add
add
subb
fistl
das
lock
add
add
add
fildl
push
out
andl
inc
cmp
adc
push
push
pop
pop
testl
mov
adc
and
pop
jne
jmp
stos
mov
jp
outsl
mov
gs
in
mov
xor
pop
xor
pop
arpl
ds
aad
jle
lods
mov
pop
in
sbb
jbe
sti
orb
repz
push
mov
iret
scas
add
cmpb
movsb
and
and
sar
dec
cwtl
loope
test
push
or
orb
inc
inc
outsl
pop
mov
adc
test
fistpl
push
adc
repz
add
lret
lret
pop
lret
push
push
xor
xchg
sbb
sub
int
cmp
adc
jecxz
cmp
bound
dec
xchg
scas
fldenv
push
mov
mov
sbb
ja
mov
mov
lock
add
jb
scas
decb
fisttps
xchg
add
addr16
add
add
add
ja
mov
mov
les
cmp
mov
inc
push
notl
pop
dec
call
pop
repz
xor
hlt
add
pop
sub
push
loopne
jne
andl
bound
call
lret
cmp
sahf
fnstcw
leave
in
sbb
adc
adc
repz
xchg
movsl
fwait
loopne
mov
in
or
frstpm(287
lock
dec
cmp
loopne
fildll
ss
fs
orl
clc
push
cmp
push
push
pop
std
out
push
loopne
leave
xlat
pop
xlat
push
jmp
push
cli
or
xor
enter
cmpsb
adc
jg
sbb
add
pop
pop
dec
pop
mov
cmp
and
adc
das
xchg
mov
test
test
pop
mov
mov
repz
jl
pusha
jg
sbb
pop
xor
mov
jo
add
xchg
pop
shl
fisubrl
mov
xlat
mov
xchg
sbbb
adc
add
add
add
xchg
shrl
inc
xchg
cmp
stc
mov
cmc
das
loope
outsl
cmpsb
aaa
lea
icebp
cltd
sbb
mov
adc
mov
xchg
xchg
inc
cs
push
sub
dec
jne
hlt
mov
lret
or
ret
outsl
xor
mov
addr16
inc
inc
sub
mov
jb
sub
inc
fsts
hlt
aam
push
clc
mov
mov
popa
aam
js
pop
sbb
sarb
lea
pusha
pop
scas
lcall
jno
push
ret
sarl
push
insb
sub
jae
iret
fcoms
js
mov
jg
jl
pop
cmp
add
inc
mov
sti
pop
and
rcrb
js
ljmp
mov
mov
mov
adc
mov
arpl
cmc
add
dec
outsb
or
and
negb
movsb
loope
or
inc
add
pop
pop
xchg
and
imul
push
xchg
inc
inc
arpl
add
add
mov
aas
mov
dec
mov
add
add
add
cmpsl
lret
pop
xor
mov
data16
scas
sti
and
jl
and
rolb
or
mov
subb
and
fisttps
pusha
ljmp
jnp
jns
hlt
push
inc
push
data16
rcll
mov
jo
shll
notb
enter
or
mov
adc
adc
cli
mov
fcompl
jns
sti
mov
iret
and
xor
or
out
nop
mov
call
and
cmc
enter
js
push
popa
and
nop
jmp
ss
cltd
ss
lahf
push
xor
popa
dec
aam
mov
iret
mov
mov
pop
jle
inc
adc
popa
mov
push
jns
shl
xchg
movsl
aaa
lret
xchg
lret
mov
cli
fdivrl
lods
imul
je
faddl
sahf
movsl
mov
pop
test
sub
add
mov
sti
mov
insb
xor
lock
add
add
pop
rorb
dec
cmp
sbb
push
jmp
cmpsb
rorb
jge
stc
or
lods
push
sub
add
inc
test
lret
loope
test
fdivs
js
cmc
mov
dec
test
jb
mov
std
mov
mov
mov
movsl
pusha
testl
lock
sub
insl
push
push
xchg
bound
cmp
dec
clc
pop
jns
dec
mov
adc
fsubl
repz
jl
xchg
fwait
sub
add
in
movsl
test
fldenv
dec
mov
test
out
mov
popa
cld
mov
jmp
mov
xchg
leave
push
ss
jmp
jne
jno
in
roll
jp
imul
sbb
data16
rcl
dec
or
pop
shl
and
or
push
push
mov
cmp
scas
test
ds
outsb
lds
push
cmp
adc
neg
jge
xchg
jns
icebp
mov
addr16
add
add
add
or
test
inc
push
cmp
add
in
cmpsb
pop
out
sub
mov
fs
sub
dec
add
fsubl
or
xchg
lods
add
mov
test
aad
pop
mov
leave
sub
mov
cmpsb
ss
dec
inc
daa
lock
jo
in
mov
pushf
mov
push
test
jae
pop
mov
fs
repnz
les
jecxz
pop
adc
fistl
mov
pop
cwtl
int3
dec
arpl
orb
inc
mov
pop
sub
rcrl
jo
aam
out
sbb
cli
pop
jmp
xor
ss
jmp
in
repz
lahf
gs
imul
out
pop
dec
pop
int3
loopne
pop
jg
gs
jge
inc
jcxz
jns
imul
jns
movsb
mov
pusha
jmp
pop
cmp
outsl
jg
jg
sub
mov
or
add
add
add
push
loope
fbld
add
popa
mov
clc
dec
and
pop
pop
jg
mov
aas
pop
mov
ror
dec
dec
xor
imul
jne
add
arpl
out
jl
lret
sbb
and
adc
loopne
imul
scas
scas
ss
push
sub
mov
push
push
mov
repz
mov
sub
inc
fisubrl
repnz
test
xor
leave
out
aas
shrl
sub
xor
jnp
add
jp
and
and
mov
shrl
lock
sub
add
and
sarl
mov
mov
xor
mov
idivl
jno
es
pop
cmp
std
or
and
pop
sahf
addr16
jle
insb
scas
inc
jle
cmpb
inc
int3
pop
cmp
je
or
add
ja
and
aaa
divl
push
mov
repz
add
add
sbb
ret
fwait
mov
and
in
push
push
out
push
xchg
xchg
out
inc
test
inc
jle
faddl
mov
sbb
fs
cwtl
inc
negb
push
fistpll
je
dec
out
inc
lcall
ljmp
jbe
movsb
pop
xor
jle
sbb
je
cltd
sbb
xchg
jns
dec
repz
mov
lret
inc
das
or
loop
xchg
aam
and
cmp
push
xchg
xor
sbb
or
out
jmp
out
aaa
push
int
pop
std
lods
sbb
lret
movsb
pop
and
push
pusha
imul
add
mov
and
xchg
push
adc
decb
inc
dec
mov
lds
jp
fcmovnbe
aas
ja
xorl
inc
dec
fdivrs
out
test
and
jl
inc
ja
and
in
xchg
jecxz
jmp
mov
add
push
add
add
add
push
popa
xor
push
jno
sbb
inc
mov
mov
insb
add
or
mov
repz
sarl
sub
push
popf
in
mov
xchg
jne
sbb
fistpll
pop
and
mov
enter
nop
dec
pop
cmp
dec
pushf
dec
pop
mov
mov
inc
dec
movsl
orb
cmp
cmpsb
jg,pt
shrb
mov
mov
leave
popa
dec
stos
leave
cs
sub
cmp
sub
jge
cmpb
bound
mov
cmc
and
daa
movsb
adc
add
scas
and
pop
iret
dec
fsts
sbb
clc
jb
fucom
jmp
stos
mov
sub
movsl
fldt
sub
idivl
inc
dec
decl
imul
dec
lret
xchg
loope
into
mov
int
leave
pop
std
fldenv
cmp
fnstcw
jns
dec
ficoml
cmc
sub
add
add
jne
pusha
popf
pop
subl
add
cmpsb
cltd
mov
negl
rcll
shll
stos
or
dec
sub
add
jl
jp
stos
push
popf
dec
mov
int3
lods
jmp
push
popa
push
shl
mov
cmp
pop
sub
dec
add
ja
popl
dec
inc
xor
or
add
inc
mov
jnp
mov
adcl
push
push
push
push
mov
shrb
or
test
jne
pop
jbe
iret
dec
je
mov
inc
sbb
in
mov
lock
add
pusha
jge
nop
ret
jle
inc
cltd
push
xor
mov
loopne
xchg
lcall
out
and
mov
sahf
repnz
fists
test
lock
ds
notb
popa
jb
jo
sbb
and
sub
scas
fdivr
fnstcw
jecxz
test
testb
add
add
add
je
jmp
pop
imul
inc
and
insb
int
mov
movsb
test
addr16
decb
dec
loope
adc
adc
std
pop
xchg
sti
clc
in
jl
sbb
shlb
shll
lahf
shlb
sub
pop
mov
bound
and
sub
push
test
mov
mov
arpl
loop
hlt
jp
adc
std
xchg
mov
out
cmp
jo
jns
into
jmp
lcall
push
xor
hlt
repz
add
push
popf
jp
fsubrp
hlt
adc
xchg
movups
xor
cld
lods
mov
jne
dec
xor
fcompl
sahf
lcall
sub
mov
inc
xor
dec
cmp
pop
mov
inc
in
inc
dec
mov
xchg
in
mov
inc
int3
or
mov
icebp
enter
movsb
and
add
add
add
xor
jb
jae
xor
arpl
add
add
add
jbe
clc
xchg
inc
fmul
or
or
clc
dec
test
push
sub
push
dec
mov
push
fidivrl
out
sbb
pushf
out
rorb
add
adc
jg
xchg
jno
f2xm1
or
cmpsb
sti
aad
fwait
insb
imul
mov
pop
push
cmc
popf
push
stos
loop
sub
repz
out
xlat
xchg
push
or
data16
dec
jb
stos
daa
lret
sbb
push
sub
pop
lods
or
add
xchg
cmpsb
movups
sub
jbe
sbb
push
pop
push
imul
js
test
xchg
xchg
fnstenv
in
adcb
leave
mov
cmp
or
cmc
mov
lock
fidivrs
gs
dec
and
sbb
mov
stos
fisttpl
stos
leave
data16
lods
clc
adc
or
or
lods
xor
inc
push
idivl
xor
int
lret
sub
add
add
ds
in
idivl
js
mov
mov
arpl
addr16
add
add
add
adc
jbe
mov
inc
ds
test
lds
daa
lret
sub
das
or
ret
inc
call
and
inc
inc
xchg
pop
bound
push
in
mov
mov
roll
and
sbb
cmp
pop
adc
push
xchg
aam
lcall
rol
fisubl
push
mov
test
cwtl
fidivrl
pushf
scas
xchg
add
lret
pop
mull
icebp
ljmp
and
ss
pushf
fistl
testb
scas
inc
movsl
xlat
repz
in
pop
adc
rcrl
and
xor
jb
sbb
ljmp
inc
test
inc
pop
movsb
repnz
clc
lock
inc
adc
lea
pop
pop
lds
jno
inc
ficomps
hlt
cmp
jmp
adc
mov
mov
cwtl
and
cwtl
adcb
pop
es
inc
cli
aas
into
lret
test
add
add
add
pop
loopne
ja
mov
jl
sub
mov
test
jae
iret
xchg
inc
inc
xchg
pmovmskb
sub
cvttps2pi
repnz
sar
into
outsl
inc
mov
push
fadds
cmp
rorl
xchg
and
pushf
mov
lret
les
lret
sbb
cmp
in
andl
popf
xchg
mov
mov
lahf
es
adc
mov
test
stos
sbb
sbb
rdmsr
dec
andb
inc
insb
sar
sbb
cmc
test
jle
loope
lods
pop
mov
icebp
insl
hlt
mov
pop
jmp
dec
scas
mov
popa
add
xor
iret
dec
xor
inc
xor
ss
jbe
pushf
pop
stos
push
inc
push
in
xchg
xor
push
pop
cltd
arpl
mov
es
xchg
mov
add
mov
lcall
daa
push
aam
addr16
add
add
add
mov
sbb
sub
dec
sub
push
cli
movsb
les
cld
mov
mov
sub
ret
aad
and
fs
cwtl
push
sbb
jl
xor
pop
jp
xor
pop
into
lea
or
add
mov
pop
xor
fcompl
inc
daa
add
adc
mov
inc
cmp
pop
mov
xchg
cmp
out
fstps
adc
cli
lret
cld
lret
mov
fbstp
mov
xchg
movsl
popf
lret
cld
xor
pop
push
mov
sarl
sahf
ja
xlat
cltd
das
add
adc
inc
xor
add
jmp
loopne
sub
dec
mov
ja
lcall
out
mov
sbb
cmp
cs
jno
push
dec
out
fstps
popa
lahf
xchg
outsl
lods
mov
lods
ss
flds
aaa
jae
cltd
dec
mov
jno
and
andb
add
add
add
or
xor
insb
adc
jle
xor
adc
inc
mov
pusha
adc
into
into
rcrl
sbb
push
jnp
dec
mov
mov
add
xor
iret
fildll
add
xchg
aad
cmp
cmp
xchg
xor
cmp
jp
mov
or
mov
in
jnp
fstl
mov
fldl
out
out
cmp
xor
cltd
clc
stos
pop
mov
pop
das
mov
push
dec
push
pushf
cmp
ret
and
outsl
es
pop
sarl
popa
scas
mov
loope
cmp
enter
xor
fistl
mov
inc
imul
pop
jle
pushf
div
outsb
shr
mov
mov
push
dec
imul
adc
cmc
icebp
mov
jno
mov
add
or
sub
pop
push
dec
shlb
add
ds
into
nop
out
cwtl
jle
push
sub
dec
mov
aad
addr16
add
add
add
xlat
push
sub
xor
and
into
jle
mov
dec
xlat
icebp
dec
mov
mov
cmc
jns
mov
out
fcoms
rcll
popf
jp
mov
xor
jecxz
cmc
scas
mov
aad
mov
pusha
mov
inc
ret
jnp
xchg
clc
push
popl
fbstp
xchg
mov
aas
mov
and
sti
cs
and
lods
aad
push
ret
shrb
bound
imul
shrl
xlat
pop
rolb
lods
rorl
push
mov
imul
insb
dec
js
and
cmp
arpl
repnz
adc
pop
fisubrs
inc
scas
xchg
sub
das
shl
push
dec
xchg
sub
mov
mov
mov
call
adc
dec
aad
cmp
repnz
jg
add
scas
outsb
push
push
sub
jno
test
jg
push
pop
push
mov
addr16
add
add
add
push
fmuls
lods
daa
cmp
scas
inc
arpl
lret
sbb
sbb
fwait
inc
ds
mov
pop
cmp
gs
xchg
dec
imulb
jbe
sub
xor
push
mov
cmp
xchg
decl
push
andb
test
jl
push
xchg
adc
das
lds
cmp
xchg
lcall
aam
arpl
or
xchg
push
std
loop
rcrl
lret
add
cmpsl
inc
pop
sub
add
stc
ljmp
pop
inc
sub
scas
movsl
out
xor
lea
fidivl
shll
iret
in
add
imul
fs
imul
adc
daa
and
mov
sti
ljmp
movsl
xor
dec
or
imul
fiaddl
loopne
adcl
lods
mov
into
adc
rcll
xchg
lret
add
adc
movsb
push
in
cmc
jne
sbb
js
fimull
mov
add
add
outsb
jns
xchg
aad
and
lret
es
jns
cmp
scas
pop
xor
test
jl
push
sti
or
mov
sahf
jae
push
mov
push
mov
out
jno
jbe
push
divl
pop
cmpsl
enter
test
dec
or
lcall
aas
add
sbb
stos
inc
xorb
outsb
jmp
cltd
or
jbe
fldl
sarb
faddl
pop
std
adc
cltd
inc
cli
jnp
sbb
mov
mov
rorb
mov
hlt
repnz
jo
testl
std
insl
enter
rcrl
xlat
jecxz
mov
in
mov
cmp
outsb
out
clc
repnz
mov
flds
adc
and
mov
loopne
out
and
add
and
pop
dec
sbb
ret
cli
ret
leave
dec
and
sbb
adc
sbb
shlb
aas
out
int3
mov
inc
mov
add
add
add
jns
adc
scas
adc
cld
pop
ss
mov
adc
ret
pop
mov
mov
jmp
js
push
in
mov
and
add
push
sub
dec
or
sbb
mov
sar
or
jo
jnp
sbb
insl
js
cmp
lret
xchg
hlt
sub
hlt
push
gs
cmp
mov
pop
mov
loopne
in
adc
cmpsb
fldcw
mov
aad
setne
mov
cld
addr16
lret
mov
addr16
lods
mov
mov
adc
shlb
inc
push
stos
xchg
loop
jle
dec
pop
or
or
xor
add
in
add
sub
gs
je
aam
shl
lea
rcll
push
jno
iret
mov
popf
lds
mov
lahf
pop
jb
jp
shll
and
add
add
mov
lcall
cmp
add
add
loope
aam
int3
sbb
inc
test
jb
scas
jns
mov
fcoml
push
in
mov
inc
sbb
xor
push
je
inc
push
lods
mov
sbb
push
rorb
jp
cmc
pop
iret
test
add
scas
arpl
icebp
les
pop
dec
or
sub
adc
mov
aaa
dec
sbb
pop
inc
xchg
xchg
and
movl
ret
iret
sub
jo
sbb
sbb
sub
lea
into
lock
add
cmp
das
push
je
ljmp
mov
or
lret
lret
mov
sbb
lods
dec
repnz
cmp
cmpsl
or
mov
push
push
jle
rclb
jecxz
push
pop
es
jge
stos
and
cmp
cmp
jecxz
out
mov
sub
cltd
add
add
add
ret
bnd
cmc
inc
stos
repz
add
add
add
add
fdivrs
lret
cmp
cltd
push
aas
push
push
pop
dec
dec
sub
aas
aad
insl
mov
jge
daa
mov
cli
push
cmpsb
test
std
pop
fnstenv
sbb
stos
mov
pop
cs
mov
add
push
mov
dec
fbld
xchg
dec
xor
fdivl
xor
insl
push
mov
cmp
pop
add
mov
and
jecxz
pop
popa
cmc
lods
dec
dec
or
push
xchg
sbb
cltd
test
aad
dec
sarw
sub
pop
shll
cwtl
or
jmp
popa
call
pusha
andl
pop
jno
and
orl
lods
int3
xchg
and
ja
ffree
sub
lret
ds
xchg
pop
scas
jns
rorl
aaa
and
xlat
mov
es
bound
xchg
push
cmp
xchg
inc
in
jecxz
fcompl
adc
add
std
aaa
mov
shll
das
add
add
push
add
repnz
lods
test
cltd
adc
fdivrl
fsubs
cmpl
loope
orb
in
mov
sbb
arpl
jo
int
arpl
mov
lds
jg
xchg
dec
xchg
movsl
lcall
add
lret
cmp
and
sub
inc
adc
loope
in
mov
outsb
mov
ret
aam
arpl
push
pop
and
gs
pushf
push
outsl
or
jg
sub
imul
inc
xchg
aad
xlat
jl
adc
stos
jg
push
pushf
sahf
rolb
add
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
bound
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
call
add
add
test
wrmsr
ja
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
inc
push
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
dec
mov
mov
add
mov
test
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
sarb
sub
add
mov
inc
push
mov
shrb
ret
add
mov
cld
test
inc
xor
push
mov
inc
enter
mov
or
add
add
add
incl
cld
mov
mov
xor
and
sub
mov
test
add
xor
add
cmp
jne
mov
pushf
add
add
or
fwait
jne
xor
incl
add
orb
add
orl
gs
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
inc
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
sub
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
xor
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
fwait
clc
xor
inc
xor
pushf
mov
test
clc
dec
inc
mov
xchg
inc
inc
aas
mov
test
clc
pushf
inc
decl
push
movb
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
rorl
test
test
cmp
pushf
xor
add
inc
dec
mov
test
cmp
fdivl
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
fwait
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
fwait
lret
xor
mov
lea
xor
add
inc
dec
mov
gs
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
fwait
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
fwait
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
xor
shrb
clc
add
xor
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
addb
mov
cmp
je
incl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
pushf
movl
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
pushf
inc
push
movsb
jne
push
clc
test
lcall
test
cmp
pushf
add
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
xor
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
pushf
xor
rdmsr
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
fwait
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
fwait
xor
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
jmp
mov
mov
mov
clc
scas
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
scas
loopne
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
pop
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
call
and
call
addl
clc
pushf
decl
jmp
and
and
or
decl
and
pop
cli
in
ret
add
mov
or
jl
adc
dec
push
and
xor
mov
add
or
cmp
sbb
or
xor
or
test
dec
adc
adc
add
jae
add
pop
adc
fidivl
add
movups
popf
push
adc
insl
or
add
inc
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
cmp
add
adc
sub
adc
push
adc
mov
adc
adc
cmp
adc
addr16
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
adc
jle
adc
cld
dec
adc
add
adc
push
insl
adc
fs
add
jge
add
ss
add
ss
add
ss
add
ss
add
aas
adc
jne
adc
fldenv
adc
xchg
push
add
pop
adc
in
adc
leave
sbb
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
aaa
inc
add
adc
add
adc
dec
insl
adc
mov
adc
mov
adc
rorl
adc
pop
inc
adc
daa
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
inc
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
pop
add
add
push
add
dec
add
add
dec
add
xor
pop
add
dec
add
cmp
pop
add
cmp
add
push
add
push
add
dec
add
dec
add
inc
add
dec
add
add
add
push
add
pop
add
add
push
add
add
dec
add
pop
add
push
add
xor
xor
pop
add
add
add
add
add
pop
add
dec
add
dec
add
add
push
push
inc
push
mov
pop
inc
dec
xchg
inc
push
push
hlt
jle
inc
push
add
add
pop
js
insl
arpl
addr16
pop
inc
inc
dec
bound
popa
push
bound
popa
bound
jo,pn
bound
