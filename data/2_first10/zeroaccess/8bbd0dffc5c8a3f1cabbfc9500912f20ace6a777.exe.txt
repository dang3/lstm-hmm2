push
mov
sub
mov
mov
mov
sbbl
sub
push
mov
mov
mov
sbb
add
mov
orl
orl
mov
mov
inc
mov
adcl
mov
sub
mov
mov
sbb
xor
mov
adc
orl
orl
lea
mov
add
mov
mov
mov
xorl
add
xor
or
mov
and
jmp
and
xor
sbb
mov
pop
sub
add
push
inc
and
out
jle
inc
mov
dec
popf
mov
fadd
test
clc
es
lds
push
mov
testl
movsl
dec
sbb
xor
pop
cmp
dec
rcl
inc
inc
push
jl
pop
mov
dec
dec
dec
rorb
or
mov
daa
bound
scas
test
mov
pop
push
inc
fdivs
imul
mov
jecxz
add
cmpsb
inc
fucomp
loopne
mov
hlt
push
rcll
out
jmp
rol
lret
mov
xor
push
and
inc
fiaddl
icebp
xor
aaa
clc
xor
repnz
ret
daa
mov
into
push
outsb
loope
in
sbb
in
in
mov
testb
xchg
xchg
cmp
gs
pop
inc
outsl
adc
pop
adc
pop
inc
inc
jle
iret
jo
cmp
sbb
jb
addl
addr16
mov
popa
mov
repnz
lods
jno
subb
test
xchg
hlt
std
insl
mov
or
lret
lds
adc
or
xor
jge
aas
mov
xchg
imul
out
mov
shrl
sbb
loopne
mov
pushf
or
inc
push
jg
sbb
push
aaa
lret
out
insb
or
rcr
ds
or
cmp
test
mov
pop
xchg
dec
sbb
mov
gs
xor
js
xor
shlb
insb
scas
mov
ljmp
adc
lods
cmc
and
in
and
mov
sub
dec
loopne
pop
push
cli
in
into
sub
into
stos
and
mov
push
or
sbb
pop
xor
push
xlat
jg
fisubrs
fildll
mov
cmp
sub
adc
push
push
cmc
loope
pop
pop
or
int
jg
inc
jl
loope
addr16
cmpsb
add
sti
fs
sahf
and
lret
dec
jns
mov
inc
arpl
xchg
fs
arpl
or
test
inc
orl
push
or
mov
in
mov
jl
cli
outsb
testb
daa
subb
ss
pop
xchg
pop
add
jnp
mov
in
lret
insl
mov
popf
jo
jle
into
or
fs
add
inc
in
sub
xchg
adc
or
mov
and
scas
mov
jnp
daa
aas
rclb
or
push
xor
mov
cmp
or
rclb
add
out
mov
ret
jnp
and
ljmp
jne
mov
les
or
add
add
jno
insl
das
sub
cmpsb
movsl
push
loop
in
xchg
cmp
push
pop
test
inc
cmc
popa
sbbl
out
inc
stos
mov
sub
sbb
sub
xchg
push
cmp
xchg
pop
hlt
jecxz
dec
xor
test
sbb
mov
or
adc
scas
out
cmp
sar
mov
loopne
pop
testl
xchg
bound
jbe
cwtl
loope
pop
addr16
xor
dec
mov
iret
and
mov
xor
rcll
sub
fwait
or
lcall
loope
or
rcrb
and
and
mov
pop
cmpsb
std
bound
inc
out
xchg
jnp
or
adc
and
xor
adc
and
mov
mov
jnp
loop
out
jle
out
pop
rol
mov
dec
mov
out
dec
adc
lcall
hlt
mov
test
aaa
lahf
adcl
lods
test
faddl
pop
fstps
dec
cmp
sbb
std
xor
adc
adc
rorl
mov
and
xor
cli
pop
add
cmp
fwait
dec
inc
inc
mov
jmp
xor
movsb
cmc
test
pusha
inc
push
or
data16
push
dec
mov
call
bound
push
call
test
inc
and
pushf
lret
test
lock
jl
cmc
das
arpl
es
adc
mov
cmp
pop
mov
loop
aam
and
mov
std
aad
xorl
jb
negb
and
movsb
xchg
lret
pop
adc
fmull
fcomps
int3
js
fmul
sub
and
sub
sub
xchg
adc
jge,pt
jo
pop
outsl
rcr
leave
xchg
insl
jb
adc
sbb
ja
cmp
pop
push
and
lcall
lods
mov
mov
pop
stos
sub
jp
test
jne
data16
xor
sub
pop
and
ds
xchg
pop
rorb
xor
out
in
pop
stos
xchg
cmpl
jbe
fimull
push
sbb
outsl
adc
or
xchg
or
mov
xor
mov
add
mov
jmp
fdivrs
lds
xchg
pop
and
adc
outsb
cmp
add
push
add
sub
call
js
aaa
addr16
imull
or
pop
mov
xchg
or
movsb
rorb
or
out
jle
jno
dec
cmp
add
jp
pop
pop
mov
dec
leave
incl
in
cmp
int3
push
cmpsb
hlt
cmpsl
and
jae
inc
das
adc
push
data16
addr16
mov
inc
lahf
sub
fiaddl
mul
push
xor
popf
mov
repnz
mov
outsb
lock
dec
int
pop
fidivs
sub
pop
jle
cmc
and
sbb
mov
lcall
imul
enter
dec
inc
ret
ret
xchg
inc
insb
or
les
movsl
xlat
sbbl
pop
fisttpll
push
mov
popf
sub
dec
xchg
rorl
mov
push
mov
jo
fldt
cltd
scas
outsb
add
pop
fcoms
fsub
shlb
push
loopne
jno
icebp
ljmp
aaa
inc
clc
sub
sub
popf
xor
outsb
outsb
out
lock
jnp
push
scas
fstpl
adc
stos
lcall
test
es
adc
inc
adc
add
or
push
sub
mov
mov
adc
lahf
mov
mov
pushf
cmpsl
subb
xchg
popa
leave
lcall
cwtl
dec
pop
clc
leave
dec
mov
and
sahf
pusha
xchg
sbb
aam
adc
and
xor
outsb
pop
das
add
cmpsl
mov
pop
pop
inc
mov
fldt
mov
pop
mov
sarb
jae
mov
add
push
xchg
inc
loopne
add
pop
xor
iret
pusha
cmpsl
in
dec
add
lods
int3
pop
and
and
out
sub
add
mov
jb
adc
not
sub
adc
add
inc
cmp
xorl
enter
aad
pop
adc
in
cltd
call
dec
cmpsb
fimull
lds
jmp
clc
loope
int
mov
testb
mov
xor
cwtl
out
xor
aam
cwtl
ficoms
neg
stos
test
adc
lods
test
jl
sbb
or
fbstp
sub
xor
popa
push
sar
ss
lods
sub
test
loop
bound
sti
xchg
bound
hlt
cld
dec
scas
lret
jae
xor
out
mov
push
clc
jp
out
jb
xor
adc
vpsubusw
je
inc
int3
fs
mov
pop
stos
subl
iret
dec
lods
push
xlat
ss
pushf
sbb
xor
pop
adc
inc
push
cli
out
hlt
and
sbbb
or
mov
fcmovne
lods
xchg
cs
gs
clc
inc
push
ljmp
sbb
inc
lods
xlat
sti
xchg
les
push
lea
clc
aaa
xor
add
push
cmp
popa
xor
lock
mov
mov
sub
imul
cmpsl
cmp
push
push
test
out
out
pop
push
call
xor
push
sub
mov
inc
xchg
enter
mov
sbb
lock
out
ss
dec
scas
adcb
jae
xor
das
stos
leave
popf
mov
dec
push
push
mov
out
jne
sub
lret
push
es
adc
jmp
addl
add
aaa
popf
and
cld
mov
sbbb
mov
inc
shrl
inc
or
dec
xchg
pusha
pop
dec
int
lea
stc
inc
sbb
cwtl
stos
out
lods
fstl
sub
aaa
xor
mov
pop
imulb
sbb
clc
jp
into
mov
push
pop
call
jecxz
addr16
sub
cwtl
gs
mov
mov
rcrl
xchg
add
sub
push
push
outsl
or
lock
into
std
mov
jp
adc
xor
fsubs
cli
stc
xor
jbe
pop
xchg
xchg
lahf
sbb
push
mov
inc
std
lods
or
movsb
clc
clc
sub
mov
mov
fs
dec
cld
scas
out
jns
push
outsb
cwtl
mov
out
call
mov
jns
mov
adc
icebp
gs
nop
jp
js
imul
xor
jmp
enter
inc
mov
xchg
cmpsb
mov
rol
xchg
fcoml
movsb
into
sahf
push
mov
pop
push
cltd
insl
test
daa
mov
push
gs
int
adc
lods
and
imul
fldl
das
cltd
jo
test
sbb
push
push
mov
fsubr
and
test
mov
xchg
cmc
mov
nop
mov
mov
sub
fimull
clc
cmp
inc
cmp
push
imul
dec
sbb
lods
enter
add
rorb
push
sbb
movl
add
rol
add
mov
add
or
adcl
mov
neg
movl
movl
cmpl
movl
movl
movl
movl
jmp
movl
mov
je
push
pushl
call
andl
subl
and
orl
xorl
mov
sub
movl
movzbl
or
jmp
in
in
testl
xlat
data16
push
push
push
cmp
aad
ss
sub
fidivrs
hlt
sub
push
stos
int3
repz
sub
xchg
mov
arpl
sar
xor
add
pusha
mov
mov
mov
mov
lock
sub
mov
mov
mov
jae
cmp
dec
mov
hlt
cmp
call
push
int
mov
addr16
inc
cmpl
gs
icebp
imul
xchg
aas
pop
add
sbb
fcmovbe
out
adc
push
mov
push
or
cmc
mov
xor
mov
subl
inc
std
cmc
cmp
push
cmp
and
test
aad
xor
das
pop
fwait
ljmp
dec
mov
push
mov
add
pop
cmp
xchg
sub
adc
xor
inc
enter
pusha
lret
jmp
ds
mov
xchg
pop
call
mov
fwait
or
les
mov
sbb
dec
icebp
popf
push
lea
lret
xchg
push
rolb
push
scas
pop
jp
hlt
mov
add
adc
and
push
mov
cmp
jbe
mov
test
int
and
inc
outsb
pop
cmc
enter
rolb
shlb
or
dec
dec
push
or
jae
add
inc
push
lods
insl
sub
xor
call
decl
repnz
push
outsl
adc
mov
mov
push
mov
mov
lods
pop
sub
or
dec
mov
std
in
mov
inc
jmpw
jno
inc
ja
jns
add
repnz
aaa
and
enter
jno
mov
jl
sub
inc
xchg
sub
jno
mov
lahf
jo
je
shl
fcoml
pop
xor
test
and
jb
sar
aaa
xlat
mov
pop
loop
std
push
rcl
or
inc
cli
push
sbb
daa
fwait
fs
xchg
in
xor
jle
mov
inc
loopne
push
lcall
adc
sub
pop
cmc
sub
mov
add
xor
aaa
cmp
fwait
add
xchg
pop
jb
jge
mov
mov
add
or
test
shl
iret
push
mov
jbe
das
imul
jae
jno
iret
cmpsl
imul
stos
cli
aam
jne
push
push
xor
les
push
fs
cmp
repnz
in
lcall
in
loope
cmp
adc
adc
mov
in
hlt
mov
fstps
jge
cli
cmp
hlt
icebp
add
xor
inc
cli
sub
push
lahf
repnz
flds
mov
mov
xor
fwait
lret
fimull
dec
cmp
mov
mov
adc
dec
stos
sbb
ret
add
jnp
mov
sbb
mov
cmp
subl
push
inc
ljmp
xor
out
incb
filds
cmc
dec
mov
fcomps
mov
jmp
sub
mul
testl
stc
jmp
dec
push
fsubrp
daa
push
dec
push
stos
adc
sbb
add
mov
mov
push
sbb
iret
data16
clc
sbb
and
mov
inc
je
push
in
jbe
out
push
das
pop
scas
sti
lcall
movsb
int
mov
mov
jns
cmp
pop
push
cmp
adc
hlt
sub
mov
fwait
movsb
mov
testl
lcall
popa
xlat
mov
sti
test
cmp
jo
add
aad
std
xchg
mov
loope
adc
mov
pushf
push
lret
xchg
and
dec
outsl
test
stc
push
mov
ret
xchg
cltd
test
push
cmp
inc
push
int
aaa
fsubl
or
shll
inc
ficomps
add
push
or
fidivs
sbb
aam
test
push
inc
xchg
aam
mov
mov
dec
lods
popf
and
es
icebp
es
repz
clc
insb
inc
push
fdiv
sahf
sbb
lcall
andb
popa
outsl
lods
jp
dec
jnp
inc
out
aam
push
iret
lods
std
arpl
xchg
cmp
arpl
div
push
cmpsb
ret
cmp
sub
mov
scas
lods
or
xchg
test
mov
inc
out
or
fnstenv
aaa
pop
sbb
xchg
fstpt
lods
scas
add
sbb
in
add
repz
fists
je
jl
ret
cmc
pop
mov
add
jo
das
cwtl
into
fistpll
or
xchg
icebp
sahf
out
dec
inc
mov
stos
add
lahf
xchg
or
out
test
push
clc
jmp
xchg
adc
mov
daa
jae
jbe
xor
mov
add
movl
and
jmp
loope
mov
scas
sbb
dec
lret
adc
push
cmp
mov
push
jmp
sub
add
ja
sbb
int3
sbb
jb
mov
push
sbb
js
mov
lahf
stos
lods
ret
jb
cmp
mov
mov
rcl
and
repz
in
test
and
mov
jmp
push
add
lcall
lcall
movsl
shlb
fbstp
jno
test
mov
ss
sub
jmp
or
out
xchg
jno
popf
add
aas
xor
xchg
into
inc
mov
iret
stc
fmuls
and
loop
aad
dec
sub
mov
cld
not
sub
das
gs
cmp
and
fistpl
outsl
mov
xlat
mov
sub
cmp
jge
mov
das
and
pop
jne
int3
mov
rorl
sub
lcall
mov
mov
aas
dec
ds
mov
add
cltd
call
fistl
mov
lret
sahf
sub
xchg
cmp
ljmp
cmp
shrl
hlt
cwtl
and
mov
pushf
rcrb
repnz
dec
jmp
mov
add
sbb
mov
mov
xchg
icebp
dec
jg
push
rcll
insl
sbb
loop
or
cmpsl
lea
stos
push
cltd
push
add
rcrb
xchg
push
sbb
out
push
pop
lods
in
pusha
cmp
cmp
mov
pop
test
cmp
loopne
in
js
incb
arpl
scas
xchg
sub
mov
movsl
sahf
add
push
popa
imul
jae
mov
out
and
jno
dec
xor
xor
mov
dec
inc
inc
jnp
inc
jae
pop
lods
mov
xchg
jnp
cmp
push
adc
jge
aas
into
cld
int3
jmp
shlb
inc
mov
sbb
ljmp
aas
cmc
lahf
ffree
mov
xor
sbb
xchg
add
clc
fisubrs
mov
in
sbb
sub
lea
pop
inc
jecxz
inc
jmp
test
xchg
rorb
fimuls
hlt
imul
js
lahf
jmp
cmp
and
pop
dec
dec
add
push
fidivrl
sbb
mov
push
lret
xlat
lods
and
jno
fisubrl
sub
mov
aam
lods
xchg
mov
sbb
xor
and
ss
pop
imul
dec
sub
jg
or
mov
adc
pop
andl
lahf
in
pop
cmpsb
scas
sar
sbb
mov
adc
jge
lock
mov
xchg
aam
adc
pop
inc
jo
push
cmpsb
cli
enter
cld
mov
dec
pop
cmp
push
and
orl
cltd
insl
loopne
and
pop
xor
rorb
mov
sub
lahf
jp
xchg
cmp
and
mov
lcall
mov
and
mov
sti
stos
pop
lea
vpor
rcl
out
sbb
pop
jmp
int
imul
jb
out
adc
and
mov
jmp
jo
pop
mov
repz
in
ljmp
adc
jne
test
rcrb
mov
cmp
sub
push
aad
jp
int3
test
aaa
xchg
push
popa
repnz
xchg
push
les
in
cli
addr16
dec
loop
lcall
out
cli
sahf
std
xor
lea
mov
test
jl
fprem1
fs
std
sub
add
jp
mov
orb
adcl
push
adc
ss
loop
movsl
imul
xchg
jb
scas
popa
jmp
adc
aad
lret
dec
fdivrl
sbb
xor
sbb
lret
fbstp
push
outsl
add
dec
mov
imul
gs
dec
scas
fnstsw
mov
aad
std
insb
cmpsl
xchg
xchg
xchg
mov
mov
jne
repz
aaa
or
dec
fisttpll
fimull
and
cmp
push
add
lods
jmp
push
inc
xchg
bound
mov
sbb
pop
bound
adc
mov
sbb
lret
adc
in
cmp
jp
pop
lock
lret
fldl
pop
cmpb
cmp
mov
mov
test
adc
fildll
es
sub
inc
test
push
jne
sbb
xor
aaa
xor
mov
dec
orl
out
xor
bnd
mulb
sbb
mov
mov
pop
push
in
sbb
mov
stc
push
xchg
mov
xor
std
sbb
add
xchg
jno
repz
inc
loopne
or
nop
lret
dec
cmp
mov
sub
inc
lds
inc
xchg
movl
movl
cmpl
movl
movl
jmp
notl
jg
push
pushl
push
push
push
call
xorl
adcl
xor
or
or
sbb
movl
mov
add
mov
movl
sbb
movl
movl
movl
jmp
cmpsb
in
ficoml
adc
xor
inc
test
in
push
cmp
jl
pop
mov
push
filds
add
in
push
or
shll
push
pusha
loopne
cmp
imul
add
cmp
repnz
cmp
sti
add
xor
mov
ss
push
sahf
orb
jp
addb
imul
jl
add
push
jmp
jmp
mov
push
add
vpmaxub
out
aaa
shrb
mov
mov
inc
or
mov
and
xchg
dec
cltd
and
mov
sub
jmp
and
inc
jmp
jp
or
sbb
sub
mov
add
dec
xor
sbb
sti
gs
mov
add
rorb
lret
mov
cld
shl
loop
and
or
dec
shlb
insl
in
xor
sub
mov
inc
aas
out
iret
lock
into
jo
mov
fwait
lahf
aas
pop
and
ljmp
gs
sub
mov
add
sub
and
xchg
cltd
shrb
inc
into
jns
mov
in
and
divl
or
sub
mov
pop
inc
xor
cmp
arpl
sub
cmp
add
dec
lahf
pop
mov
jle
push
imul
sub
in
lds
fisubs
mov
repnz
inc
sbb
sbb
out
mov
fadds
xor
xor
int3
or
jns
mov
push
inc
stos
jl
mov
arpl
push
test
pusha
sahf
push
lock
xchg
pop
sbb
sbb
aam
mov
mov
data16
in
and
pop
addr16
fdiv
xlat
daa
jno
je
gs
jns
fsubl
xor
andl
or
sti
and
add
mov
jp
insl
negb
push
add
cld
push
outsb
dec
lock
dec
dec
mov
out
mov
cmp
insb
fdivr
andb
rcrb
pop
sub
push
mov
xor
xor
mov
iret
xor
inc
and
xchg
push
inc
hlt
out
jl
hlt
sbb
mov
sub
xchg
and
je
pop
mov
jno
jnp
sub
fwait
rolb
in
or
mov
or
or
jno
out
sbb
and
out
or
rorb
adc
adcb
shrl
dec
notb
gs
and
fsubr
dec
mov
dec
jge
add
add
jo
bound
lea
push
jo
stc
xchg
adc
cmpsb
push
icebp
lods
aad
mov
aaa
jno
lock
sub
mov
cld
mov
add
inc
inc
shrl
mov
cmp
mov
mov
cmpsl
xchg
fcmovbe
aaa
cli
fidivl
pop
mov
dec
out
std
cmc
inc
mov
in
cmp
test
pop
mov
jo
int3
mov
mov
cmp
cmpsb
lds
lds
jl
stc
lret
cmp
cmp
dec
int
mov
mov
jb
push
pop
cmpsl
in
add
lods
dec
xchg
test
sar
mov
sbb
leave
cli
call
dec
or
push
add
imul
mov
movsb
mov
push
mov
mov
add
ret
lods
pop
es
sahf
imull
iret
cmp
mov
lahf
inc
sub
aad
pop
testl
push
jg,pt
and
inc
jnp
enter
add
pop
and
fdivs
pop
mov
popf
dec
sbb
pop
xorl
bnd
das
xchg
mov
repz
imul
cmp
mov
mov
out
jge
sub
sarb
iret
pop
xchg
ds
mov
fiadds
loope
repnz
fisubl
cmpsb
mov
loopne
sbb
mov
or
repnz
out
adc
mov
mov
xor
pushf
cltd
jae
xor
dec
hlt
fstpt
lock
into
fs
ja
and
mov
fsub
xchg
or
dec
stos
adc
fwait
add
ret
idivl
orb
mov
jecxz
sbb
insl
ret
sub
lock
stos
push
or
and
stos
mov
sbb
xchg
push
iret
jns
mov
cwtl
movsl
movsl
add
push
xlat
lea
js
lcall
cmc
in
xlat
repnz
dec
sahf
cmp
pop
xchg
shll
bound
outsb
or
jmp
mov
pop
sarb
rcrl
repnz
pop
leave
cmp
pop
dec
mov
jmp
pop
or
int3
cmp
stos
popf
mov
push
sub
nop
xlat
andl
adc
dec
pusha
sub
mov
test
test
sahf
mov
in
ret
push
xchg
adc
jae
in
sar
movl
movl
movl
cmpl
movl
movl
jmp
movl
not
jne
push
call
add
addl
addl
subl
adcl
add
addl
sub
movl
movl
movl
movl
add
movl
movzwl
and
movl
xor
movl
inc
movl
movl
cmpl
mov
movl
jmp
movl
not
jne
push
pushl
pushl
call
xorl
orl
andl
and
addl
decl
xor
cmpl
movl
movl
movl
jmp
mov
movl
jge
push
call
addl
subl
addl
sub
orl
andl
cmpl
movl
movl
jmp
mov
movl
jl
call
xorl
andl
orl
xor
mov
shl
mov
andl
push
incl
push
push
push
addl
call
mov
addl
mov
subl
xor
not
mov
add
mov
sub
sub
cmpl
movl
mov
movzbl
mov
jmp
movl
mov
jl
push
push
pushl
call
xor
or
mov
sbb
sbb
mov
add
mov
sbb
movzbl
or
mov
mov
mov
mov
xor
lea
jmp
out
decb
lock
aam
hlt
loope
push
cmp
shl
adc
divb
das
popf
sbb
cmp
dec
mov
cld
nop
or
cmp
xor
xchg
sub
sbb
jmp
das
push
sahf
sahf
cmove
cmc
popf
daa
adc
mov
push
imul
xlat
movsb
stc
insb
or
test
ja
ja
fidivl
push
mov
cs
fwait
pop
xchg
push
data16
and
sbb
pop
movsl
stos
sub
into
xor
push
cmc
les
xor
mov
mov
sbb
rorl
into
push
shlb
mov
ds
mov
adc
ja
mov
ss
mov
jmp
outsb
cmpsl
cmc
repz
ds
mov
xor
insl
sub
movsb
lahf
adc
cmp
movsb
cld
pop
jne
or
fs
dec
push
mov
dec
es
sub
movsb
es
sbb
jb
andl
sahf
xor
cmc
aaa
and
inc
xor
cmpl
push
mov
xchg
inc
fdivl
je
stos
jg
sti
jbe
out
adc
mov
in
rcrb
test
push
inc
jnp
push
or
mov
dec
push
int
and
mov
push
xor
sarl
pop
mov
stc
mull
cltd
lods
and
push
je
clc
mov
adc
xor
or
pop
sub
push
or
xlat
inc
or
sub
dec
inc
jge
das
xorb
xchg
xor
push
and
stos
xorb
fbld
xchg
lea
sbb
ret
in
mov
mov
in
add
push
sti
dec
out
das
hlt
mov
cmpsl
int3
mov
stos
pop
mov
inc
sbb
and
or
add
push
ja
mov
es
ret
jp
xor
and
xchg
sbb
jo
push
add
repz
scas
sub
and
sbb
out
ficoms
mov
lahf
out
stc
or
mov
push
add
pop
cmp
mov
ret
sub
lds
jecxz
repnz
xor
iret
or
scas
mov
rcll
lret
push
mov
loopne
insl
xlat
cmp
jbe
cmp
rclb
shrl
bound
sbb
push
or
and
pop
add
or
mov
inc
xchg
sbb
add
jge
test
inc
aas
cmpsl
jp
icebp
mov
cwtl
push
cltd
cmp
ficoms
aam
test
pop
das
xor
mov
das
or
mov
add
insl
mov
mov
adc
sbb
push
mov
addr16
mov
xor
movsb
cmp
andb
or
inc
mov
or
jmp
stos
adc
imul
push
and
pushf
arpl
movsl
cmp
test
nop
dec
or
push
clc
lods
adc
fidivs
aam
iret
add
stos
adc
int
adc
cmp
pop
fiaddl
add
scas
lods
mov
inc
lods
or
lods
jge
in
inc
push
sub
xlat
xor
pop
repnz
addr16
lds
xchg
fs
adc
sbb
mov
fisubl
cmpsl
lret
movsb
jnp
ret
stos
mov
dec
mov
sub
ret
aad
jae
dec
imul
pop
jbe
pop
scas
sahf
mov
bound
mov
xorb
adc
xlat
hlt
fsubp
ficomps
pop
lods
popf
lret
fwait
mov
pop
in
mov
loope
push
dec
mov
jge
jge
mov
dec
stos
xchg
dec
inc
ds
out
jo
inc
jl
jne
xlat
orl
xchg
popf
inc
call
fwait
lock
adc
mov
out
push
sbb
ljmp
sti
jle
shlb
add
cmc
cli
xorl
pop
mov
insl
dec
lods
outsl
les
loope
nop
mov
mul
mov
mov
xchg
shl
cmc
aaa
out
ljmp
mov
repnz
sahf
arpl
clc
and
xchg
cmpsb
jmp
ja
jmp
inc
daa
xorl
lahf
and
push
sti
push
or
pop
mov
hlt
lock
inc
hlt
push
or
add
insl
call
fs
mov
shl
les
std
jno
repnz
lods
daa
gs
mov
fstpt
pop
jne
cmp
push
stos
stos
ja
cli
push
pop
pusha
aam
ret
mov
or
dec
xchg
mov
and
aam
ret
sub
mov
xor
out
pop
jle
lods
cmp
and
insl
cmpl
enter
add
clc
xchg
mov
lahf
popf
dec
es
and
stos
mov
outsb
mov
mov
jge
leave
sbb
call
pushf
dec
outsl
out
and
pop
push
jg
sub
divl
call
adc
cmp
add
adc
mov
movzwl
jmp
movl
jg
pushl
call
add
xor
subl
sub
or
xor
mov
orl
or
and
mov
adc
mov
mov
adcl
or
adcl
xor
cmp
jne
andl
mov
subl
mov
and
shrd
shr
sbb
mov
and
mov
shl
addl
xor
subl
jmp
add
sbb
sbb
clc
sbb
jb
insl
push
outsb
jb
xlat
push
push
cmp
lock
int3
ret
mov
movsb
jo
sub
add
arpl
sbb
aaa
jge
xor
cmp
sub
pop
cmpb
rcr
sti
mov
pusha
mov
out
pop
sub
sub
push
in
scas
stos
dec
xchg
mov
add
lock
jbe
xchg
adc
sub
inc
loop
pop
push
cmp
push
xor
bound
mov
jns
sbb
xchg
pop
loope
xchg
jne
aas
inc
fisttps
push
push
fstpl
fnstcw
push
cmp
les
xor
test
pop
mov
or
pop
repz
mov
cmp
aam
aaa
and
jns
or
mov
daa
nop
enter
ds
push
inc
mov
repz
rcrb
sbb
dec
xor
xchg
addr16
sbb
bound
aam
fdiv
or
test
add
push
mov
fildl
sete
xchg
xor
sbb
jae
cmpsb
xchg
arpl
inc
or
adc
inc
or
mov
test
sbb
fdivl
hlt
lods
es
ret
leave
dec
icebp
cmp
inc
inc
add
xchg
je
inc
inc
jo
mov
sub
xchg
mov
iret
jb
popf
int3
lret
sbb
push
xchg
outsl
push
test
jo
outsb
in
xchg
jns
fsub
daa
fidivrl
or
and
test
scas
cmc
jae
sub
sbb
mov
sbb
or
popa
scas
pusha
mov
or
in
outsl
push
cld
fsubrl
dec
mov
mov
dec
jnp
mov
push
push
or
in
push
lret
jge
mov
lds
clc
clc
cltd
pushf
fcmovb
sub
dec
push
in
xor
addr16
nop
pushf
jp
enter
add
add
jp
jnp
cmp
inc
insl
repnz
flds
nop
ficoms
dec
push
into
pop
shr
dec
into
inc
mov
cmp
pop
cmc
xchg
insl
shl
aam
push
ljmp
fwait
jne
xlat
and
aam
lock
lahf
enter
adc
addr16
shlb
jnp
dec
cltd
mov
cmpsb
out
andl
jecxz
imull
daa
dec
pop
xor
ror
pop
add
das
in
mov
xor
in
out
inc
push
xchg
jge
call
rorb
xchg
cltd
out
pop
out
push
mov
cmp
outsl
filds
jo
xchg
push
jnp
enter
push
stos
xchg
mov
inc
jns
andb
jp
xor
lret
lcall
pop
mov
rcrb
pop
inc
sbb
dec
cltd
into
jnp
addr16
inc
mov
or
add
dec
cmpsb
pop
push
dec
mov
sahf
inc
dec
and
fmull
addb
incb
or
lods
jno
fwait
dec
adc
push
cmp
cmpsl
movb
and
js
sbb
or
data16
lret
popf
push
loop
in
adc
pop
movsl
movsl
shrl
das
andl
or
xor
roll
call
mov
jmp
and
push
imul
push
adc
clc
sbb
das
test
iret
imul
out
enter
adcb
cmp
pop
test
popa
cld
xchg
mov
arpl
jmp
cltd
mov
cmpsl
pop
hlt
adc
or
inc
sbb
inc
sti
aas
xor
outsb
mov
ljmp
rcll
add
mov
and
aas
test
xor
pushf
cmp
mov
inc
xchg
push
inc
imul
aaa
test
xor
cwtl
and
pop
jle
add
setg
push
gs
std
movsb
push
cmp
add
jnp
mov
pop
pop
add
sahf
cmp
inc
test
andl
mov
adc
cmpsl
fdivs
or
std
lods
test
out
jge
jle
imul
and
or
fldt
lcall
fsubr
cmp
shll
add
xchg
push
imul
adc
cmpsl
or
jecxz
or
lcall
test
xchg
add
inc
jmp
bound
fnstenv
loop
xchg
adc
sbb
outsl
mov
and
push
push
xchg
loope
add
inc
cmp
or
lret
nop
push
xchg
sub
leave
ljmp
testl
clc
cmp
lcall
push
sub
xor
or
add
out
mov
inc
and
sub
push
jne
test
xor
bound
out
jae
testl
rolb
scas
add
add
shl
mov
inc
add
test
daa
cmp
sbb
pop
pop
scas
and
fisubrs
pop
lds
push
cmp
xor
out
divb
popa
push
push
cmp
inc
clc
inc
rorb
push
jmp
cmc
cmp
rclb
mov
loope
testb
xor
push
push
test
das
enter
mov
gs
adc
stc
xor
scas
test
je
stc
ljmp
jns
mov
imul
push
into
test
pop
pop
fistps
mov
in
gs
int
in
dec
sub
in
dec
xor
add
push
push
mov
xchg
repnz
xor
add
ss
adc
shr
ss
cmc
lret
jno
add
mov
cmpsb
dec
mov
inc
push
mov
mov
fisubrs
xchg
mov
dec
stos
jecxz
bound
es
nop
jp
mov
push
inc
in
out
xor
xlat
add
movsb
jmp
outsb
movsl
mov
ds
call
add
mov
daa
adc
add
mov
fidivl
mov
push
addr16
xchg
popf
das
ret
gs
data16
push
jmp
stc
movsb
mov
pusha
scas
fimuls
xchg
mov
pop
das
push
dec
les
orps
inc
push
cmp
pop
stos
mov
addr16
addr16
adc
inc
orb
int
inc
xor
jge
mov
jno
lret
shlb
mov
shlb
outsb
jae
mov
mov
aad
mov
mov
jl
mov
mov
xchg
repnz
sbb
sub
cmpsb
push
or
push
xlat
div
mov
test
stos
ds
cmc
adc
test
aad
or
xchg
rcrb
jge
push
add
pop
ja
std
mov
xchg
pop
cmp
mov
into
rorl
dec
cmp
xsavec
mov
mov
pop
loop
gs
fldl
mov
xor
inc
xchg
shl
aaa
xchg
mov
push
test
add
rcrb
pop
ret
je,pt
rol
jbe
adc
inc
mov
into
pop
mov
cld
and
std
mov
cwtl
xchg
mov
adc
mov
shll
adcl
adc
call
cli
in
sbb
mov
fwait
sbb
xchg
fwait
lret
pop
cmp
lea
iret
add
insb
jmp
scas
cwtl
adcl
lods
sub
divl
sbb
dec
mov
jg
sbbl
jae
mov
sarb
push
lret
ret
adc
ljmp
add
pop
pop
stc
stc
adc
push
inc
icebp
leave
jecxz
add
punpckhdq
push
repz
sti
or
dec
cwtl
dec
or
mov
adc
dec
aad
movsl
jg
mov
jecxz
fdivr
mov
ret
jecxz
add
jle
add
sub
sbb
inc
dec
xchg
sahf
rolb
aam
jns
mov
xor
dec
cmc
sbb
jmp
mov
imul
fisubs
arpl
and
add
mov
cltd
mov
jmp
push
jns
test
dec
add
adc
inc
jl
sub
jbe
fdivs
mov
sbb
idivb
xor
fldl
or
add
sbb
sub
cmpb
ljmp
fs
loop
sub
cli
cmp
js
ljmp
cmp
and
les
mov
cmp
loopne
xor
aaa
adc
insb
cs
enter
jmp
enter
leave
dec
stos
lods
or
mov
mov
sub
aaa
mov
push
mov
mov
and
out
fcomps
sub
insl
jnp
bound
mov
push
jb
imul
inc
sbb
daa
xchg
clc
dec
xchg
aad
add
pop
scas
mov
movsl
sbb
lea
nop
hlt
xchg
test
movsb
xchg
clc
jo
cmpsl
xchg
mov
cmpsl
cmpb
mov
mov
pop
push
mov
jne
push
mov
aas
sti
mov
mov
jb
arpl
add
push
pop
and
mov
ds
hlt
adc
mov
std
mov
lret
mov
xchg
adc
nop
mov
arpl
push
mov
andb
enter
loopne
or
test
pop
adc
pop
sbb
popa
adc
pop
dec
sbb
mov
shlb
arpl
fs
stos
xchg
mov
pop
pop
sbbb
fisubl
mov
pop
ret
mov
push
jns
push
rcrb
lods
loope
arpl
out
jne
in
clc
sbb
mov
outsl
orl
jmp
xlat
outsb
bound
sbb
mov
insb
in
mov
and
jns
or
xchg
insb
cmp
bound
lcall
add
add
add
loopne
add
jne
or
mov
cmpl
mov
not
jmp
movl
mov
jb
push
call
xor
adc
orl
mov
mov
sub
xor
mov
xor
or
sub
sub
movzbl
add
mov
movzwl
or
mov
xor
mov
mov
adcl
mov
shrd
andl
mov
add
mov
xor
sbbl
shr
mov
addl
xor
andl
or
addl
shl
cmpl
mov
movl
mov
mov
jmp
movl
movl
jl
pushl
call
or
xor
xorl
incl
add
not
sub
mov
mov
sbb
mov
add
mov
and
mov
mov
mov
or
mov
xor
jmp
xlat
mov
push
xor
es
xchg
push
push
cmp
pop
std
in
arpl
sub
hlt
pop
pop
fidivrs
insl
pop
std
jle
ret
add
xchg
arpl
clc
call
cmpsl
push
imul
jae
push
and
pop
int
cmp
lock
loopne
sbb
test
stc
dec
pop
hlt
mov
insb
xor
cmpb
cmp
pop
inc
das
popf
dec
fstpl
xchg
sbb
sbb
cmpsl
and
aas
add
pop
call
xchg
shll
aas
and
sub
mov
insl
lahf
loopne
movsb
dec
call
inc
add
jecxz
or
sbb
dec
int3
pop
add
sbbl
pop
arpl
imul
jmp
or
xchg
mov
mov
sbb
clc
sub
cmp
aam
gs
mov
je
insl
out
mov
jg
shrl
lock
repz
lahf
insb
lods
jge
push
push
xchg
jecxz
icebp
in
push
jl
push
adc
adc
and
add
lahf
push
push
ja
hlt
pop
jl
mov
adc
xor
jp
enter
int
sbb
pop
xor
in
fdivs
out
cmp
push
ss
adcb
cmpsb
cmp
dec
push
shlb
pop
shrl
add
dec
mov
ret
stos
ret
cmp
xchg
xor
ret
shl
pop
notl
test
pop
add
aaa
inc
rorl
jb
out
adc
push
daa
or
cmc
ret
es
push
shlb
inc
mov
movl
add
fsubl
into
xorb
cs
popf
les
xor
pop
iret
cli
push
and
push
lcall
hlt
add
stos
dec
jge
or
fldcw
lahf
hlt
ds
outsl
adc
lcall
out
xchg
fsubrl
outsl
cmp
dec
movsb
sub
jp
clc
jae
in
xlat
pop
leave
push
popf
dec
out
mov
cmp
xor
add
lods
add
sub
sub
mov
sti
lret
adc
mov
and
mov
mov
dec
pushf
sbb
mov
out
in
jle
and
push
dec
mov
mov
out
or
pop
movsb
les
flds
adc
mov
enter
icebp
pushf
popa
int3
dec
sbb
ljmp
pop
enter
jmp
jbe
push
fisttps
shl
jl
xchg
and
xchg
cmpsb
mov
arpl
shlb
mov
dec
push
sti
out
fnstcw
fadds
pop
shrb
je
out
shlb
jae
mov
mov
sbb
out
sub
push
pushf
sahf
imul
loope
andl
cmp
mov
cmp
pop
gs
repz
adc
out
movb
push
out
dec
cmp
push
movsb
mov
movsl
gs
sarb
ret
lds
inc
sbb
inc
add
mov
gs
mov
pavgw
push
lcall
xchg
sbb
addr16
pop
das
sti
subl
push
mov
loop
test
inc
push
xchg
arpl
jns
pushf
add
adc
out
jecxz
jb
pop
fs
loop
ja
jecxz
mov
dec
clc
leave
mov
mov
adc
ja
mov
fmull
add
mov
pop
jg
push
in
repz
pop
sub
shll
xor
rcrl
xorl
out
pop
jno
lahf
mov
js
xchg
test
int3
mov
pop
cmp
shrl
xadd
adc
fisubrs
cmp
out
icebp
std
xchg
jp
push
mov
push
icebp
push
sbb
mov
xor
movsl
sbb
and
xchg
xor
pop
in
out
jmp
push
cld
push
fcmovnb
xor
in
scas
cld
xor
xor
dec
ret
test
mov
flds
jge
lods
xchg
ljmp
mov
in
loope
sbb
push
cmpb
pop
pop
lahf
rorl
out
jb
leave
jp
inc
nop
cltd
insl
call
mov
stos
xchg
scas
addr16
dec
add
cmp
shrl
test
repnz
mov
scas
jns
cmp
mov
in
xchg
add
lret
dec
pop
xor
mov
and
jge
ja
fwait
mov
push
data16
ja
out
lret
mov
jnp
ret
inc
push
scas
mov
lcall
clc
xor
sub
xor
inc
fildll
dec
adc
cltd
cwtl
or
pop
out
cltd
sub
loope
aam
sbb
in
cs
mov
fwait
cmp
out
bound
mov
je
jne
loop
dec
sub
shrd
add
shr
mov
mov
xor
mov
andl
xor
shl
adcl
xor
or
jmp
xchg
fcomps
xor
insb
jp
mov
mov
push
cmp
jg
out
lea
dec
sub
jecxz
sub
clc
aas
xor
push
lods
aas
and
push
or
add
dec
andl
fidivs
movsb
sub
mull
mov
xor
fs
jno
xor
outsl
pop
jbe
pop
arpl
enter
jae
mov
les
add
sahf
lcall
mov
mov
fcoms
mov
in
mov
mov
pop
or
aad
popf
pop
push
push
jp
push
or
add
ja
add
mov
sub
movsl
push
out
mov
xor
andl
call
pop
mov
jge
imul
mov
pop
cmpl
xchg
ljmp
in
add
scas
mov
sub
lcall
mov
push
adc
inc
inc
inc
push
and
push
loope
icebp
shrb
mov
xor
lods
in
adc
sbb
es
cmpsb
aam
or
mov
stc
pop
dec
dec
fs
repnz
jne
dec
or
andl
xchg
pop
lods
pop
mov
fmull
sbb
test
sub
xchg
test
and
add
push
cmp
ret
insb
int
jns
mov
mov
dec
in
aad
jg
and
jmp
cs
mov
inc
mov
cmp
jecxz
xor
cmp
push
fdivs
or
nop
mov
push
daa
push
adc
mov
add
jb
xchg
js
jge
push
mov
cmpb
fmull
xchg
in
stc
xchg
pop
lret
hlt
in
int
scas
fisttps
dec
cmp
xchg
jle
je
or
add
cmp
icebp
mov
jo
pop
and
imul
jg
icebp
mov
adc
lock
jb
push
shrl
mov
call
cli
cmpsl
xchg
pop
sub
into
dec
lock
stc
or
shlb
cwtl
cmp
imul
out
mov
pushf
adc
xchg
loopne
sub
lds
jl
test
leave
mov
adc
xor
xchg
fisttpll
cmpsb
xor
sarl
fldt
adc
mov
lret
arpl
fisubs
cwtl
iret
mov
or
add
sbb
jae
insb
test
sbb
cs
xchg
shrl
dec
mov
or
mov
mov
test
test
enter
stc
pop
ljmp
mov
jno
sbb
sbb
in
sbb
mov
imul
lahf
push
mov
cmp
ret
and
pop
sbb
fdivrs
sub
mov
xor
sub
fisubrl
dec
cmp
xchg
xchg
jnp
test
sbb
movsl
push
or
mov
loopne
inc
jg
xchg
cmp
daa
xlat
jg
mov
xor
lcall
mov
jo
imul
mov
fdiv
jecxz
cmp
lods
aas
pop
testl
insl
jne
iret
pop
jne
cmp
imul
cmp
call
xor
dec
out
enter
push
scas
js
and
mov
in
clc
or
int
xorb
mov
sub
aaa
in
cld
add
sub
les
mov
or
das
sahf
jae
push
imul
push
or
adc
jp
enter
xchg
lea
lret
int3
cmp
sbb
mov
andb
sub
lds
and
sub
stos
inc
das
mov
or
fdivrp
xor
dec
sub
orl
arpl
add
dec
rorb
jmp
inc
loopne
ljmp
test
arpl
shlb
lret
jno
inc
in
mov
and
mulb
clc
aam
scas
loopne
push
push
push
movsb
outsb
lods
dec
fs
mov
test
xor
jae
mov
scas
jle
and
aam
adc
push
loopne
pop
lds
repz
inc
adc
ljmp
cmpsl
push
mov
inc
clc
xor
jg
push
adc
jbe
stos
sub
xor
mov
pop
arpl
hlt
cld
and
jnp
inc
inc
cmpsl
lea
test
cmp
imul
mov
rclb
jg
xor
cmp
pop
jge
inc
cld
inc
rorb
mov
call
pop
ss
sub
add
jecxz
scas
ret
push
aaa
mov
sub
xorl
pushf
popf
nop
push
ja
cmp
cs
and
arpl
cmp
push
push
and
lahf
imul
inc
dec
push
pop
jno
mov
cmp
xchg
sbb
aad
aam
es
subl
mov
cmpl
mov
mov
movl
jmp
movl
movl
jae
call
and
subl
add
mov
xor
xor
mov
shrd
shr
dec
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
push
push
call
mov
sbb
orl
or
adcl
xorl
or
mov
orl
xor
sbbl
xor
notl
or
orl
jmp
mov
inc
test
sub
fcomp
dec
int3
outsb
push
mov
push
push
cmp
sbb
int3
mov
andb
popa
add
je
ffreep
fildl
sbb
add
mov
ret
xchg
xchg
in
stos
adc
shll
sbb
out
stos
rorb
add
pushl
cs
outsl
push
push
lods
fs
adc
sub
sti
mov
cmp
dec
push
sbb
add
leave
aad
mov
xchg
ret
scas
xchg
pop
popf
inc
out
daa
imul
xchg
sahf
mov
pop
sbb
out
out
push
push
jmp
pop
int
cmp
push
adc
cltd
insl
in
xor
mov
push
into
inc
xorb
mov
in
or
pop
mov
push
xlat
negl
push
inc
sbb
and
dec
fnsave
stos
rcrb
jbe
les
pushf
cmp
std
lret
cmpsl
fimuls
xor
cmpsl
movsl
shrx
pop
fcmove
repz
scas
rorb
aam
out
inc
fildl
cmp
ret
ja
mov
pop
mov
sub
sbb
cli
jne
icebp
xchg
sub
adc
movsb
push
in
jae
push
adc
pop
sub
sahf
imul
and
inc
mov
insb
adc
push
lds
arpl
ja
out
mov
xchg
jo
mov
mov
pop
subb
mov
mov
lcall
test
imul
lcall
test
imul
xchg
mov
push
mov
repz
mov
dec
adc
fs
pushf
out
dec
jae
push
hlt
sub
inc
int
jbe
add
movsl
adc
lcall
inc
or
sub
pop
jo
lea
loop
cld
frstor
ljmp
cmpsl
xchg
jl
cmp
pop
xchg
push
das
push
sbb
inc
lcall
sub
movsl
and
mov
ret
jnp
nop
jp
or
popl
xchg
mov
pushf
xlat
mov
ljmp
ds
sub
lock
sub
or
or
dec
lods
sti
mov
aaa
and
inc
setne
pop
cltd
xchg
pop
pusha
dec
mov
sarb
xchg
push
mov
xor
mov
pop
in
clc
rcrl
in
pop
jb
inc
push
xchg
lcall
add
call
ret
push
add
into
sahf
push
pop
es
jecxz
or
in
bound
inc
pop
andb
aas
int
add
pusha
test
or
je
pop
cwtl
add
fs
or
leave
xchg
fs
xor
mov
dec
mov
enter
mov
push
popa
bound
inc
leave
jge
adc
mov
dec
pop
lret
rcll
sbb
mov
xchg
stos
mov
insl
stc
mov
add
into
cmc
and
mov
push
scas
shll
xor
in
inc
les
adc
or
fiadds
aad
push
shlb
and
test
mov
fidivs
xchg
iret
mov
xor
jo
mov
mov
push
mov
mov
pop
xchg
pop
mov
movsl
push
mov
xchg
mov
std
rcrb
es
xchg
dec
adc
or
cmp
or
lods
adc
aaa
push
jno
xlat
and
add
adc
stos
xchg
and
mov
aam
fldenv
pmulhw
and
stos
mov
sub
jno
cmpsl
cli
xchg
inc
add
mov
push
xchg
adc
jns
repnz
insl
pop
popf
jno
cs
pop
jg
adc
pushf
lretw
stc
in
scas
jg
jae
add
iret
imul
push
and
movsl
xchg
mov
mov
sti
sbb
cli
or
addr16
push
adc
push
jecxz
sbb
push
out
in
push
ja
sbb
aas
dec
xchg
cwtl
xor
dec
adc
pop
loope
pop
ja
mov
icebp
mov
and
push
and
jp
or
pop
dec
xchg
stos
sbb
xchg
dec
xchg
aad
int
mov
mov
cmc
xchg
push
sbb
and
pop
cmc
lcall
inc
rcrl
data16
lret
sub
jnp
or
enter
jg
pop
xchg
inc
mov
js
xlat
mov
daa
sbb
add
scas
stos
xchg
or
push
ret
fucomi
das
mov
cmc
mov
leave
mov
int3
xor
faddp
mov
inc
out
push
dec
and
add
jb
ss
xchg
data16
mov
push
push
mov
mov
fadd
outsb
into
lret
dec
rcll
outsl
sbbb
and
dec
adc
lea
test
push
or
lea
mov
movzwl
or
mov
mov
subl
shrd
shr
cmpl
mov
movl
movl
jmp
not
mov
jbe
push
push
call
mov
add
xor
or
add
orl
add
movl
add
not
mov
mov
or
mov
jmp
loope
adc
adc
push
fsubrs
adc
push
push
lret
pop
cltd
fdivl
andl
into
inc
inc
push
cmp
cmp
inc
hlt
call
mov
push
xor
clc
popa
icebp
pop
pop
dec
fwait
push
mov
not
jmp
xor
shlb
insb
push
jbe
sbb
loop
aad
sub
fwait
inc
roll
cmpsb
pop
sbb
in
lds
xchg
pop
and
pop
pop
inc
das
shll
pop
pusha
cmc
mov
mov
stos
out
int3
mov
test
sbb
jmp
and
push
stos
push
clc
sub
out
mov
mov
lock
mov
adc
rcll
test
insb
lock
out
fnstenv
mov
test
mov
fwait
out
neg
lods
subl
sub
pusha
inc
push
xorb
hlt
xchg
out
pop
in
mov
xlat
mov
push
or
ret
jno
sub
notb
inc
dec
popa
jl
stos
add
aas
push
imul
loop
lods
xor
lea
sub
lret
push
dec
fisubrs
mov
push
sbb
es
xchg
mov
adc
cwtl
insl
add
inc
cmp
push
ret
fidivrs
adcl
or
neg
in
sti
inc
sbbl
push
cmp
pop
lcall
roll
dec
adc
or
fcmovu
pop
sbb
shlb
jb
pop
push
in
mov
sbbb
xor
and
jo
das
bnd
mov
jo
jmp
and
inc
shlb
in
gs
test
adc
ss
xor
ficoml
mov
mov
mov
push
jl
sbb
arpl
jae
adc
adc
inc
pop
jne
pop
xlat
arpl
dec
push
addl
fwait
mov
into
cli
in
insl
or
dec
and
pop
ss
nop
aaa
push
std
mov
inc
push
fdivs
xor
inc
shr
icebp
lock
jns
repnz
push
xchg
arpl
mov
sbb
lret
shll
mov
mov
jecxz
dec
inc
jl
pop
jmp
pop
mov
faddl
push
mov
adc
mov
fs
and
mov
sti
sbb
add
clc
rcrl
sti
pop
in
push
dec
cwtl
ljmp
arpl
sbb
push
inc
cwtl
jp
pushf
stos
mov
inc
test
push
out
cmp
cmp
inc
ret
mov
or
lods
pop
pusha
jb
les
jle
insl
sahf
stos
dec
lods
and
xchg
mov
xchg
test
xchg
mov
sahf
xor
add
ret
loop
out
insl
cmp
pusha
sub
int
pop
inc
push
loope
mul
sbb
popf
and
push
cmp
add
cmp
frstor
arpl
punpcklwd
push
jo
xor
mov
inc
push
cmpsb
xchg
sbb
roll
jmp
cmp
fcomi
adc
adc
cmp
inc
lds
sbb
or
jne
jg
fucomip
push
mov
in
int3
mov
mov
sub
fdivrl
stos
sub
sub
outsl
aaa
test
push
bound
lea
mov
sub
xchg
adc
adc
mov
jne
loope
aaa
sbb
faddp
sti
jecxz
gs
push
mov
les
pop
jno
dec
stos
fiadds
and
inc
xlat
sub
dec
inc
ds
mov
ret
push
mov
push
mov
sub
roll
sub
push
sbb
xor
daa
call
or
stos
jb
ljmp
aad
mov
xchg
dec
imull
test
sbb
xor
stos
push
pusha
dec
ds
insl
push
pop
out
inc
push
cmp
fimull
adcl
push
movsl
lahf
xlat
push
sub
mov
push
adc
jp
aas
or
push
jl
js
jno
adc
insb
dec
add
xchg
lods
bound
dec
cmp
inc
sbb
and
xchg
scas
push
or
ret
loop
adc
nop
addb
push
mov
arpl
cmc
rolb
fidivrl
movsb
jmp
xor
cmpsl
outsb
loopne
add
subl
inc
mov
outsl
imul
nop
in
mov
adc
lcall
xor
scas
sarl
popf
in
loope
scas
xor
cmp
pushf
fldenv
enter
std
aam
pop
leave
add
lret
jmp
stos
call
daa
or
pop
xchg
hlt
mov
outsb
les
cmpsl
cmp
pop
lods
clc
lea
mov
push
rolb
inc
lret
test
mov
pop
push
or
adc
cmp
sbb
mov
cmpsb
mov
sbb
mov
mov
aam
xor
xor
sbb
mov
fdivrs
or
lods
mov
movzbl
sub
xor
mov
orl
xor
orl
or
shl
subl
imul
mov
mov
shrd
incl
mov
mov
xor
shr
and
mov
movzbl
or
mov
mov
addl
xor
andl
or
sbbl
shl
addl
sub
movl
mov
cmp
mov
mov
jg
xorl
mov
adc
mov
shrd
orl
mov
xorl
mov
xor
shl
xor
addl
or
xorl
shr
mov
mov
mov
or
mov
shrd
subl
jmp
fwait
push
dec
mov
xchg
sbb
inc
push
je
mov
push
cmp
cmc
movsb
adc
mov
sub
ret
push
iret
arpl
dec
mov
scas
or
arpl
in
dec
cltd
push
mov
mov
enter
cld
mov
ret
jg
mov
cmp
dec
leave
push
fdivrl
subb
push
dec
cmp
push
sub
loope
in
int
repz
and
mov
inc
js
pop
cmpsl
push
out
imul
into
mov
in
push
jne
pop
or
push
push
and
dec
mov
dec
and
cmp
rcrb
and
pop
or
inc
xchg
or
gs
jb
fcoml
pop
and
insl
xchg
pop
pusha
repnz
push
jecxz
push
or
out
add
cmp
push
mov
cmp
out
outsl
and
repz
int
sub
cmp
pop
shll
pop
sarl
inc
sub
sbb
xchg
in
jb
pushf
fsub
push
jge
out
stos
stos
and
and
jne
mov
add
mov
jnp
mov
daa
test
xor
cmp
pusha
xchg
popf
insl
inc
and
ret
pop
cwtl
lock
mov
sub
or
push
iret
aas
stos
push
iret
cmpl
imul
or
fisubrl
repnz
or
xchg
mov
xor
lods
rol
scas
sub
ret
and
shlb
jae
pushl
leave
pop
pop
loope
xor
xchg
addr16
push
rcl
jmp
ljmp
mov
jge
and
mov
idiv
inc
leave
and
pop
ret
je
fcoms
cmp
add
pop
adc
in
outsl
and
icebp
add
hlt
dec
shrl
das
leave
in
adc
int3
adc
pop
iret
jge
int
xor
xchg
ss
popf
xor
out
jge
out
scas
mov
mov
fs
leave
aas
mov
jp
js
push
adcb
mov
xor
gs
xor
sarl
pop
pushf
push
cmp
or
jb
pop
scas
addr16
push
push
js
jp
aaa
orl
push
sub
or
lahf
mov
addb
jne
mov
sub
lods
sbb
sbb
jle
mov
jns
push
pop
fwait
add
and
jb
cmpsl
and
xchg
nop
xorb
jb
push
push
xor
jno
sub
in
sti
pop
or
adc
inc
jno
mov
arpl
outsb
add
ret
add
jge
mov
adc
std
push
jmp
das
shl
loopne
xchg
iret
xchg
fcmovnu
mov
adc
pop
mov
inc
mov
pop
mov
divps
daa
xchg
sbb
aam
ror
mov
adcl
xchg
mov
gs
mov
cmp
cs
repz
rorl
ret
xorl
xchg
iret
cmp
mov
sbb
sub
iret
sub
pop
inc
adc
or
push
dec
int3
or
add
mov
push
in
fistpl
jle
push
jge
sti
jnp
inc
lock
and
insb
dec
xchg
call
iret
jecxz
jge
test
adcb
or
jge
pop
mov
in
repnz
in
fs
pop
mov
xchg
insl
xchg
stc
jle
sub
sub
dec
sub
popa
ds
gs
test
push
push
imulb
xor
lock
jae
fcompl
cmp
xchg
aam
jmp
mov
adc
mov
xchg
and
into
fisubrs
pop
cmp
bound
repz
adc
or
pushl
cmp
mov
push
lret
add
jns
enter
dec
data16
test
pop
lea
insl
adc
icebp
push
pop
sub
cmp
scas
mov
fs
je
pop
mov
test
mov
add
iret
xchg
adc
lods
cmp
push
jb
ficomps
adc
and
and
adc
jmp
ja
push
push
ss
pop
cmpsl
xchg
or
mov
pop
jae
pop
xchg
cltd
mov
push
out
sub
mov
adcb
out
nop
stos
popa
sub
mov
and
mov
push
es
in
mov
leave
cmp
add
mov
push
and
push
add
cli
fs
lret
adc
adc
in
pusha
add
je
es
fcomps
sahf
inc
xchg
xor
imul
sti
scas
mov
pop
dec
adc
push
daa
stos
test
mov
pop
fbld
fdiv
mull
mov
es
je
fnstsw
mov
cmp
jnp
je
xchg
pop
dec
xchg
enter
insl
mov
cmp
leave
sarb
add
jnp
imul
popf
div
enter
popa
fnsave
lea
stos
arpl
lods
bound
ljmp
add
scas
sub
mov
and
mov
xor
orl
xor
jmp
fisttpl
mov
xor
sbb
jo
je
adcl
cmp
push
out
fldl
push
pop
loop
lret
and
aaa
push
enter
sub
sbbb
pop
adc
jno
xor
mov
push
add
jecxz
clc
es
add
addr16
push
ss
popa
pop
inc
and
adc
sbb
and
jmp
xchg
xor
bound
pop
mov
xchg
in
xchg
jns
lahf
mov
mov
icebp
imul
dec
pop
cs
sahf
adc
add
jg
jp
push
sbb
call
pushf
jge
mov
ds
mov
cltd
out
push
sub
xchg
js
das
adc
adc
and
test
loope
lahf
insb
sti
rorb
imull
sub
adc
stc
stos
arpl
pop
outsl
mov
push
lea
push
pushf
sub
fsub
stos
jl
shll
mov
mov
mov
jns
xchg
cld
xchg
call
or
jbe
sub
aad
leave
sbb
mov
lret
test
scas
pushf
insb
jo
and
aaa
jnp
es
nop
jno
or
sub
push
out
push
cmp
orl
pop
das
push
ret
je
test
push
sub
inc
xor
or
mov
jns
and
rolb
pushl
pop
popf
je
add
cli
dec
aam
lahf
inc
dec
stos
and
test
repnz
mov
adc
jno
dec
lea
nop
out
and
xor
push
inc
mov
shlb
fsts
insl
mov
jge
mov
test
mov
cmp
pop
int3
insb
xor
fsubr
dec
adc
inc
jl
push
scas
mov
stc
jmp
xor
lret
pop
xchg
repnz
clc
push
cli
sub
addr16
dec
test
pop
jge
test
ss
lods
popa
clc
mov
mov
in
adc
aam
pop
test
aam
loop
pop
stos
and
cwtl
push
adc
adc
push
mov
in
sti
mov
xor
lds
adc
pop
and
mov
jmp
movsl
out
addr16
push
cmp
push
xchg
inc
or
xlat
sahf
push
nop
enter
sub
push
fisttpll
fistpll
out
xchg
pop
lcall
sbb
movsl
je
xlat
xor
mov
push
scas
pop
aaa
mov
xor
dec
mov
mov
ss
mov
movsl
sbb
ds
shr
jnp
in
mov
test
and
fwait
cli
jmp
or
xchg
xchg
dec
dec
add
xor
ja
scas
inc
pushf
jmp
popa
sub
test
pusha
iret
loope
and
lock
repz
xorl
in
sbb
mov
pop
sti
push
xchg
addr16
clc
repnz
out
jnp
flds
push
push
arpl
jb
xchg
cltd
inc
rorb
xchg
js
pop
shl
ffreep
sbb
std
add
aas
adcb
mov
call
test
inc
loop
inc
pusha
mov
pop
and
loope
lods
mov
jp
push
stc
sub
aad
fsubrs
jae
pop
cmp
inc
fidivs
inc
xor
iret
rol
push
sub
sbb
aad
aad
call
mov
popa
lods
aas
inc
jne
xchg
push
pusha
xchg
xor
mov
push
shrb
mov
es
inc
push
clc
push
inc
jae
mov
jnp
jge
movsl
xor
stc
ja
inc
ja
jmp
in
sbb
lds
or
mov
aaa
cmpsl
int3
jp
fidivl
jl
jne
rclb
push
and
xchg
pop
aas
repz
insb
lret
add
jg
out
cwtl
mov
and
test
mov
inc
sarl
sub
pushf
rolb
mov
cli
imul
jmp
pop
sub
cld
rcr
mov
ljmp
std
loope
mov
ror
mov
jl
push
jo
in
cld
inc
inc
push
jbe
dec
or
xchg
pusha
cmp
jo
mov
and
push
cs
dec
mov
push
sbb
xor
jmp
loopne
outsl
jno
or
rcrl
xchg
sub
mov
push
mov
rcrb
out
call
lcall
mov
pushf
xchg
pop
mov
mov
nop
sbb
std
mov
mov
addr16
push
stc
aas
fcompl
pushf
xor
pop
mov
test
rol
mov
dec
mov
and
ficoml
test
repnz
flds
mov
fcmovb
xor
addl
mov
leave
or
bound
jae
inc
and
mov
or
shl
subl
imul
sub
movl
jmp
sub
mov
mov
sbbl
shrd
mov
mov
xor
adcl
jmp
bound
imul
push
pop
fsts
std
mov
dec
add
push
cmp
jecxz
adc
xorb
cmp
and
leave
fucomi
out
test
inc
dec
cmp
cmp
in
xchg
fdivs
test
cltd
mov
rolb
ret
ljmp
mov
imul
fdivrs
cmp
mov
test
nop
pop
aaa
cmp
in
jp
in
mov
xor
sbb
xor
jle
or
testb
fwait
outsb
ds
bnd
int3
xchg
stos
push
scas
ljmp
xchg
adc
or
jecxz
call
cmp
cmp
sahf
sub
xchg
iret
mov
dec
mov
mov
or
mov
in
mov
cmp
fs
jecxz
sub
popf
sub
outsb
lret
orl
ja
sub
cltd
rep
push
cwtl
mov
xor
test
push
pop
mov
mov
push
and
adc
ljmp
in
lods
push
sahf
insl
aaa
divb
sahf
dec
cmp
inc
push
add
rcr
data16
ds
popa
les
sbb
fsubr
add
cmp
mov
jae
stos
add
adc
mov
cmp
test
int3
push
adc
in
xlat
sbb
mov
mov
and
jmp
rcll
pop
int3
lret
or
mov
or
push
adc
xlat
out
pop
mov
sahf
nop
leave
mov
mov
inc
inc
cltd
fwait
mov
add
pop
pop
or
mov
push
scas
ss
dec
mov
sub
inc
lret
pop
out
sub
mov
inc
mov
cltd
pusha
aas
test
inc
xchg
sahf
sbb
fsub
hlt
jl
push
sti
cs
push
dec
in
sub
or
subl
cmpb
stc
push
ds
lock
mov
in
push
lods
xchg
cmpsl
or
adc
idivl
mov
or
mov
movsl
mov
xchg
movsb
out
pop
mov
movsl
arpl
dec
cmp
mov
pusha
and
popl
xchg
std
mov
aam
ret
xor
push
lret
ss
insl
int
sbb
sub
xchg
leave
das
in
sbb
rcrl
cmp
mulb
pushf
jecxz
outsl
jb
dec
fldenv
mov
outsl
pop
ret
dec
pop
inc
and
int3
xor
xchg
xor
fdivrs
into
mov
das
sbb
adc
xor
pop
mov
mov
sub
pop
movsb
push
in
call
mov
pop
adc
adc
xchg
pop
mov
mov
in
mov
shll
popf
adc
mov
or
xor
or
xchg
nop
rcl
scas
in
out
mov
cwtl
cmp
inc
jecxz
mov
add
aas
mov
mov
jno
pop
jno
lods
xchg
shll
mov
push
inc
stos
cli
and
imul
out
leave
sub
mov
adc
sbb
ret
and
sti
cmp
enter
pop
out
addr16
mov
fisttpll
mull
and
jae
lahf
stc
inc
insb
xchg
xchg
repz
popf
jmp
xlat
int
inc
ret
sub
cmc
sbb
jge
xchg
lret
shrb
xchg
in
insb
imul
or
fcomps
pop
sub
scas
fsubl
mov
insl
shll
push
stos
arpl
cltd
push
jp
pop
xorb
aad
mov
add
arpl
pop
icebp
pop
scas
fimuls
pop
cltd
les
mov
pop
add
fs
ret
jle
into
mov
xchg
and
mov
ret
aas
shlb
jbe
imul
adc
enter
sbb
xchg
sub
sbb
cmpsb
das
divb
cltd
std
adc
js
lret
jne
xor
xor
ljmp
mov
daa
pop
movsb
negb
cmpsl
inc
cwtl
adcb
and
or
or
jo
test
imul
repz
notb
add
out
shll
mov
ret
cli
mov
stos
mov
into
movsb
stos
pop
loope
shrl
hlt
xchg
lds
nop
scas
iret
mov
test
adc
or
shr
daa
mov
add
xchg
push
xor
push
mov
add
cmpsb
iret
add
stos
add
mov
dec
aas
int3
sub
pop
push
sub
pop
add
getsec
das
mov
adc
loopne
dec
pop
lahf
adc
das
lahf
jae
fs
jecxz
adcb
testb
adc
stos
sarb
es
test
xor
or
sahf
mov
sub
loop
mov
insb
jnp
rdpmc
push
mov
push
dec
mov
lods
mov
iret
nop
das
adc
shl
xor
xorl
or
shr
xor
mov
mov
cmpl
movl
mov
mov
jmp
movl
je
push
call
xor
or
xor
add
inc
or
adcl
mov
cmpl
movl
movl
jmp
movl
jle
pushl
push
push
push
push
push
call
inc
dec
sbbl
sub
cmpl
mov
mov
not
jmp
movl
jae
push
push
call
add
xor
andl
sbbl
adc
xor
xor
add
mov
mov
shrd
addl
jmp
loope
ja
xor
pusha
pushf
sub
scas
jb
lock
push
push
cmp
insb
xor
push
imul
push
jns
jae
out
cmp
popf
xchg
int
jecxz
mov
std
sarl
ljmp
mov
stc
das
push
mov
xchg
mov
movsb
inc
lds
cwtl
inc
lods
xor
jg
lret
mov
test
push
pop
andl
cmp
mov
cmc
lret
push
push
push
mov
shrb
or
scas
movsb
and
dec
add
repnz
stos
adc
add
push
and
imul
arpl
or
push
push
mov
jecxz
add
in
pop
cmc
xchg
popa
imul
mov
lea
cld
pop
jg
in
outsl
das
insl
adc
lods
negb
xchg
and
pop
cli
xchg
dec
loope
nop
dec
or
lahf
fstpt
mov
dec
repnz
xchg
dec
push
loop
shrl
and
and
inc
mov
inc
shlb
or
fcomps
dec
push
cmovne
pop
push
test
sahf
sbb
xlat
push
das
jo
stos
repz
fisttps
dec
xor
repz
fidivrl
fstpl
cmp
adc
out
sub
add
in
jp
pop
or
dec
dec
vmovupd
popf
cli
out
and
push
sbb
xor
cmpsb
test
cs
icebp
xor
out
clc
dec
addl
mov
pop
xor
dec
add
movsb
xor
test
mov
sar
mov
fucom
sar
in
or
or
pop
pop
or
enter
mov
cmp
mov
dec
dec
inc
mov
mov
and
add
inc
icebp
lods
aam
mov
inc
mov
out
pop
mov
les
movsl
xchg
lea
pop
shrb
push
mov
xchg
or
lret
fs
scas
leave
repnz
jae
push
sub
sbb
pop
lods
cmpsl
rcll
stos
jno
inc
imul
mov
nop
jb
stos
sbb
sbb
xchg
out
add
sbb
sub
add
and
out
loop
jae
insl
pop
nop
insl
pop
cmp
xchg
add
cld
les
fidivs
testl
push
std
mov
loop
adc
xchg
mov
mov
dec
rorb
int
loopne
fdecstp
jl
sti
mov
or
mov
xorb
xor
ret
push
sar
push
aaa
jo
mov
notb
mov
xchg
call
in
dec
call
push
mov
mov
jbe
cmp
dec
test
dec
xor
inc
ja
js
push
jp
add
push
push
insb
mov
mov
or
std
lods
xor
lods
push
hlt
fsubs
lods
push
mov
xchg
loopne
pop
pop
cmp
xchg
out
popa
loop
dec
mov
or
aaa
and
mov
push
lods
jno
jb
mov
jl
mov
lcallw
dec
adc
jg
lret
out
sahf
aas
and
inc
lods
dec
xor
je
ret
sub
jge
sub
lcall
out
pop
push
sub
jg
lock
push
and
ret
xor
jmp
insb
push
pop
add
mov
paddb
pop
outsb
ficoms
mov
xor
scas
pop
ret
shrb
pop
in
mov
and
push
jmp
data16
inc
pop
std
inc
scas
or
gs
mov
test
cmp
xchg
and
pop
push
stc
pop
in
daa
add
ljmp
and
stos
daa
mov
jne
aas
mov
jmp
mov
mov
jecxz,pn
adc
or
iret
fsubr
loop
cmp
and
dec
inc
mov
cmpsb
sub
sub
repz
dec
mov
mov
movsl
xchg
xchg
bound
xchg
inc
std
repnz
sti
sub
push
cmp
insl
mov
test
fimull
cli
ficoms
fcmovnbe
xor
loope
xchg
fmul
inc
push
mov
and
dec
add
jb
fs
insl
push
sar
inc
and
or
clc
outsb
ss
mov
out
pop
jl
test
or
cmpb
movsl
pop
xchg
jns
popl
dec
cli
icebp
or
mov
and
inc
sub
adc
sub
pop
iret
push
pop
xlat
arpl
mov
insl
cltd
lds
pop
dec
fwait
scas
mov
mov
pop
mov
aaa
cmp
jb
mov
stos
fmuls
mov
jg
popf
push
sub
push
adc
roll
pusha
shlb
sbb
clc
mov
xchg
arpl
dec
cmpsl
sbb
ljmp
sbb
add
add
mov
orl
xor
orl
xor
or
orl
shl
decl
add
add
sbb
mov
sub
mov
movzbl
sub
mov
shrd
shr
sub
mov
cmpl
movl
mov
movl
jmp
movl
movl
jne
push
push
push
pushl
call
and
sub
inc
adcl
dec
mov
mov
xor
mov
xor
shl
xor
or
xor
add
adc
mov
jmp
jle
fucomp
sbb
test
mull
push
cmp
int
sub
xchg
pop
call
leave
mov
iret
cwtl
in
cmc
out
pop
adc
mov
adc
inc
cmp
insb
in
adc
out
mov
bound
aas
push
mull
lods
mov
jo
mov
inc
push
loopne
pop
ljmp
inc
lahf
or
xchg
ja
or
sbb
xchg
jnp
lods
cmp
mov
insb
add
jecxz
push
xchg
mov
test
mov
add
xlat
repnz
push
cmp
inc
adc
sbb
mov
cmp
int3
mov
inc
cld
imul
inc
push
jl
insl
cmpsl
or
or
xchg
ret
xchg
clc
and
pop
jp
mov
mov
push
cmpsl
js
andb
icebp
mov
aaa
pop
mov
push
sub
in
andb
mov
adc
and
aas
xchg
jo
or
les
add
int
sbb
out
push
pusha
mov
loop
and
cwtl
xor
or
out
push
cmp
rorl
sti
aas
xchg
sahf
pop
js
add
js
xorl
dec
sbb
in
mov
mov
mov
pop
stc
or
pushf
or
fistpl
sahf
cld
roll
xchg
lahf
inc
lcall
inc
mov
test
popf
in
mov
xor
push
xor
loope
mov
es
stc
xchg
cld
ja
jge
jmp
iret
and
ret
in
mov
mov
stc
cli
adc
out
test
mov
inc
sub
jl
clc
mov
xor
pop
xor
push
in
mov
js
out
mov
fisttpl
out
lea
mov
push
or
imul
pop
shrl
stc
inc
push
testl
push
mov
sbb
jo
je
rcl
xchg
test
push
and
cwtl
add
fwait
and
addr16
mov
pop
out
aas
and
or
jp
repnz
adc
jp
jle
sahf
cmc
icebp
xchg
fs
or
mov
imul
enter
iret
cmc
lods
or
cmp
ja
js
mov
xchg
enter
in
and
xor
movsb
nop
mov
lret
mov
lret
sbb
and
xor
mov
mov
jne
data16
orl
sti
inc
xchg
sbb
cmp
dec
in
test
or
inc
movl
jne
cmp
adc
test
repz
fidivrs
and
add
pop
push
mov
xor
cmp
or
add
subl
sti
pop
popa
xchg
mov
dec
fsubs
or
xchg
mov
inc
dec
sti
pop
popa
inc
das
push
arpl
lds
pop
cmp
imul
pop
and
ret
xor
fwait
and
outsb
pop
xlat
jmp
out
ret
mov
or
and
dec
xchg
push
xchg
cmp
or
loopne
cld
cmp
cmc
cmp
out
jb
shrl
sbb
hlt
ror
fwait
fwait
cmp
and
xchg
cmp
sbb
mov
mov
in
jno
push
mov
push
cmp
xlat
fildl
or
lock
xchg
mov
jae
jb
push
lock
nop
pop
mov
ret
pushf
movsb
repz
in
mov
push
inc
push
sbbl
test
lret
roll
or
dec
xor
inc
leave
push
mov
lock
and
rcrl
push
adc
mov
add
jecxz
mov
push
rolb
hlt
mov
pop
mov
ja
mov
pop
add
cmp
add
mov
popa
popf
aaa
add
dec
fildl
xchg
xlat
call
push
and
int3
lock
dec
fiadds
push
sbb
or
loop
mov
xor
sub
rorb
ret
loop
or
or
stc
out
inc
fwait
inc
cmp
popf
or
aas
pop
add
add
js
xchg
inc
sub
leavew
sub
call
xchg
dec
mov
out
into
push
xchg
or
aas
mov
das
add
cmp
ja
daa
pop
daa
sbb
pop
lock
imul
inc
and
pop
cmpsl
jo
cmp
ljmp
fucomp
jge
push
lahf
imul
aad
sub
pop
or
add
repz
movsb
xchg
adc
xchg
xor
cmp
leave
adc
add
add
push
lret
rcrb
mov
ds
int
cmpsl
mov
inc
and
mov
insb
cmpsl
scas
hlt
clc
gs
loopne
sahf
outsb
mov
lock
push
adc
cmp
int
mov
adc
ds
mov
movl
sbb
mov
or
mov
sub
movl
and
mov
movl
mov
movl
add
mov
sbbl
mov
xorl
jmp
mov
or
sbb
in
push
cmp
jp
push
bound
mov
xor
lahf
lods
aam
repnz
sub
cmpl
subl
xor
lret
sub
pop
add
fdivs
xor
or
sar
sbb
cmpsl
sub
cmp
adc
arpl
sub
lea
shr
stos
out
jl
addr16
cmc
imul
adc
ljmp
push
cli
or
movsb
sub
sub
ds
mull
gs
imul
leave
jmp
mov
cltd
sub
add
cmp
inc
and
or
popf
leave
mov
std
lods
sbb
sti
xchg
adc
push
xchg
movsb
jmp
iret
insb
push
aas
cmc
call
adc
cmp
loopne
fsubr
dec
dec
inc
fisttps
mov
aaa
cmp
dec
xchg
fs
cs
aam
pop
shlb
xor
outsb
add
repnz
ljmp
mov
jmp
mov
xor
mov
inc
or
aam
xorb
nop
clc
mov
std
sbb
aaa
bound
add
fs
call
dec
jg,pt
mov
push
push
inc
das
jmp
fnstsw
lods
xor
push
mov
sbb
pop
andl
add
movsb
adc
lret
inc
cld
je
in
mov
xor
add
fdecstp
push
mov
dec
pusha
negb
rorl
jo
add
add
loopne
imul
icebp
in
out
inc
push
addr16
lahf
jne
insb
into
frstor
fs
mov
cli
lret
or
sbb
jecxz
or
aad
push
inc
mov
cld
mov
jns
inc
stos
mov
ljmp
jmp
jmp
add
addr16
dec
ja
test
mov
test
inc
out
popa
test
mov
outsl
fdivrs
pop
push
pop
cs
lods
mov
cmp
lds
xor
mov
or
out
fnstcw
jbe
or
outsb
movsl
shll
aam
xor
jge
lods
in
test
dec
leave
mov
jmp
dec
adc
push
dec
xchg
and
insl
mov
les
mov
aaa
aas
inc
lea
push
cli
push
inc
aad
add
icebp
push
icebp
fidivrl
or
and
lea
test
mov
cmpsl
nop
push
das
cmpsb
imul
sbb
jmp
scas
mov
stos
add
inc
call
xor
jb
repz
lcall
jno
push
das
iret
xor
imul
push
dec
dec
les
xor
push
mov
inc
or
push
push
ret
out
push
push
inc
jno
push
iret
mov
lcall
and
std
jnp
cmp
icebp
mov
fs
dec
cmpsl
inc
stc
pop
and
adc
add
sbb
ljmp
xchg
lock
pusha
xchg
add
xor
in
mov
stc
mov
mov
dec
sbb
jl
test
sub
in
addr16
fidivs
sub
inc
jecxz
jl
pop
lahf
and
andl
aas
xchg
jp
dec
cwtl
jg
dec
push
and
adc
cmp
jae
hlt
mov
fistpl
mov
mov
cld
mov
sub
adc
push
adc
push
xchg
cwtl
lods
sub
adc
stos
clc
jmp
dec
pop
or
outsb
sarl
cmpsb
ja
std
xor
mov
stos
test
lahf
jmp
ret
pushf
in
mov
cltd
add
test
dec
aam
cmp
and
cs
iret
cmp
cmp
nop
mov
push
adcb
scas
jbe
mov
pop
hlt
mov
xor
xor
sbb
ja
sbbb
in
fbld
jmp
dec
mov
cmpsb
aaa
inc
ficoms
jg
jno
leave
das
shr
je
cmpsl
push
jns
jmp
rol
push
movsl
gs
push
xchg
jae
data16
aad
inc
mov
and
imul
sar
and
adc
push
mov
xchg
and
jnp
int3
aad
jmp
lcall
sub
in
movsb
add
inc
lcall
push
into
or
notl
mov
nop
jne
xlat
mov
xor
xchg
adcb
inc
cmp
xor
and
pop
aam
sub
out
sub
cltd
mov
jg
and
scas
adc
add
das
push
xchg
pop
mov
jg
pop
ja
movsb
insb
lahf
rclb
aaa
rclb
xchg
dec
inc
sub
push
call
nop
mov
inc
pop
mov
fists
pop
inc
pop
push
int
sti
stc
push
loop
mov
repnz
jne
push
packsswb
push
out
mov
pop
add
test
mov
mov
shrd
cmpl
movzwl
movl
movl
mov
jmp
movl
ja
push
push
push
push
call
adc
orl
movl
and
movl
mov
mov
sub
addl
shr
orl
mov
mov
xor
shl
and
xor
or
lea
sbb
mov
mov
mov
and
shrd
mov
sub
shr
or
jmp
xchg
xchg
pop
test
mov
mov
push
cmp
sbb
std
mov
inc
and
int
mov
call
addr16
push
pop
mov
xlat
sbb
jmp
in
jp
jecxz
mov
xor
ret
ret
jne
pop
xlat
jo
lea
scas
leave
outsl
loopne
in
es
cmp
popf
stos
imul
punpckhdq
or
mov
pop
std
test
shrb
pop
xor
pop
xor
jo
sbb
ja
jbe
pop
jo
stc
mov
cmp
arpl
enter
paddsw
xor
push
fdivrp
sahf
jmp
mov
loop
popa
jmp
push
xchg
xchg
fwait
sbb
cli
call
cmp
movsl
push
jmp
push
in
and
xchg
enter
flds
cli
cmc
stos
lds
scas
cmp
jl
jno
xor
or
fistpll
push
loop
iret
stos
cmp
dec
add
aad
mov
orb
psubusb
lds
xor
mov
stc
stc
sub
and
adc
decb
jbe
mov
inc
xchg
cmp
nop
or
pop
inc
jne
push
je
popf
dec
insl
imul
jbe
cmp
add
mov
pop
out
cmp
add
ret
jns
shll
mov
mov
cmpb
sub
dec
repz
add
sbb
cmp
lds
stos
adc
mov
add
pop
mov
cmp
sbb
jge
dec
roll
sbb
pop
pop
setb
pusha
icebp
ljmp
pop
xchg
idivl
inc
lods
inc
mov
imul
ret
dec
dec
xchg
enter
subb
lea
and
lods
xchg
inc
cwtl
cmp
sbb
push
push
aad
pusha
lds
xor
sbb
cmpsl
inc
lcall
sbb
adc
rclb
jne
dec
sbb
xor
jne
mov
add
cwtl
int3
cli
mov
roll
lock
xor
out
bound
sub
imul
repnz
cmpsl
mov
dec
out
pop
out
je
mov
pusha
push
adc
jp
repnz
sbb
imul
loopne
enter
pop
pop
fsubs
test
or
cmp
push
lds
sub
jo
xor
dec
pop
add
scas
mov
inc
test
push
iret
bsf
or
push
mov
jae
and
jns
dec
loope
fsubl
rolb
fs
cmpsl
imul
bound
stos
dec
sbb
mov
frstor
dec
sti
inc
js
lcall
repnz
cmp
mov
xor
mov
jo
leave
push
push
aad
orb
xchg
and
sahf
push
outsl
lods
jns
mov
and
hlt
mov
pop
out
pop
movsl
sub
imul
pop
inc
jno
sub
int3
or
test
cmc
pop
nop
into
in
nop
leave
cltd
cli
push
fldenv
pop
jp
in
push
inc
sub
mov
xorb
add
into
pop
je
add
or
inc
pop
pop
xchg
xchg
outsl
je
lret
xor
xor
or
sub
cmpsl
jae
shl
add
xchg
cmpb
fadd
xor
inc
pop
add
pop
sub
and
fcompl
popf
sti
test
insl
pop
addr16
or
in
repz
iret
int
popl
and
cltd
jne
jae
lcall
xchg
int
mov
mulb
cs
into
cltd
in
mov
inc
popa
adc
leave
cmp
mov
mov
inc
mov
xor
and
sub
sti
repz
cltd
jnp
inc
ret
cmp
cld
sahf
insl
data16
adc
sub
mov
pushf
sarb
pop
push
insl
adc
imul
test
roll
sbb
dec
mov
in
notb
pop
jns
and
es
mov
xor
cmp
sbb
inc
out
shll
jbe
fs
notb
iret
inc
pusha
popf
testl
test
or
stos
pop
or
enter
xor
clc
inc
dec
stos
aad
mov
sbb
outsb
or
sub
pushf
xor
mov
cmp
test
mov
adc
les
testl
arpl
das
jb
sub
xchg
adc
xchg
je
inc
adc
or
xor
out
shll
mov
ss
mov
lahf
dec
scas
movsb
sahf
inc
and
xchg
stos
std
imul
test
mov
aas
cmp
or
sub
add
imul
addr16
cmp
decb
pop
push
sub
cltd
jge
test
mov
push
or
test
mov
mov
adcl
shl
mov
xor
xor
sbbl
or
mov
mov
or
xor
mov
subl
jmp
in
imul
pop
je
pop
mov
push
and
push
push
cmp
xchg
cli
out
xchg
cmp
aad
pop
lods
rorb
pusha
xchg
addb
arpl
movsl
scas
fidivs
or
test
dec
pop
inc
inc
mov
cmp
mov
cwtl
jg
cmp
movsb
sti
clc
push
cmp
popa
mov
inc
icebp
outsl
rclb
out
lds
fistpl
adc
lret
cli
push
push
mov
loop
cmc
out
xor
mov
clc
pop
mov
decb
or
push
jp
inc
push
popa
pop
orb
push
lret
sbb
iret
push
xor
jmp
sub
loopne
mov
ja
cmp
cmpl
popl
notl
in
sub
add
sbb
mov
das
jne
lods
insb
ds
das
pop
jae
jno
add
sti
mov
stc
lock
cltd
cmpb
ret
test
inc
add
ficoml
sbbb
das
and
rcrl
push
push
lcall
cmp
gs
popa
sbb
fmull
xor
xor
fs
fsubrs
adc
mov
aas
jecxz
dec
ret
popf
stos
adc
sbb
leave
xor
or
jb
sti
add
std
and
dec
jmp
jle
jo
scas
mov
aad
inc
xchg
addr16
mov
jmp
aaa
inc
push
push
imulb
or
mov
int3
lea
fnsave
inc
cmpsb
dec
fmuls
imul
lock
xchg
rcrb
mov
ret
jl
fcmovu
insb
jae
sub
sub
jg
or
pushf
adc
add
rclb
pop
and
mov
mov
mov
stos
cmpl
push
cmpsl
cltd
push
mov
push
int3
pop
fisttps
inc
mov
test
pop
and
incl
movsb
pop
adc
push
call
shrl
sub
xorb
cmp
mov
sar
sub
dec
or
testl
pushf
jno
les
mov
out
xchg
dec
add
int
outsl
and
inc
loop
fmull
sbb
out
jo
mov
sbb
mov
out
es
mov
cmp
shrb
and
jmp
push
mov
mov
mov
sbb
xchg
xchg
ds
sbb
lock
ret
or
mov
mov
pushf
pop
push
outsb
jno
aas
test
cmp
shl
or
xor
and
mov
adc
inc
xchg
sahf
push
pop
inc
mov
movsl
jmp
lods
dec
cmp
je
push
test
mov
out
scas
dec
mov
push
es
aam
jp
hlt
out
inc
xchg
mov
mov
xlat
cwtd
fdiv
fs
push
sti
cmpsl
je
xor
inc
mov
mov
aaa
fisubl
or
insb
ror
cmc
sub
addr16
xchg
sbb
test
sbb
clc
dec
ss
inc
pop
setnp
mov
inc
cmp
xchg
fs
dec
mov
and
mov
leave
pop
pop
xchg
mov
aas
add
call
sahf
add
mov
sbbb
std
fldenv
scas
mov
addl
js
jl
lock
jg
stos
adc
cmpsl
outsb
mov
jge
lods
inc
cmp
fistps
loope
das
push
out
aad
jge
add
inc
add
jecxz
xor
add
ds
into
mov
and
movsb
dec
mov
sahf
adc
xchg
addr16
inc
push
scas
pop
cld
cmp
xor
hlt
fisubrs
and
sahf
pop
into
or
lea
xchg
sub
insl
bnd
into
enter
jo
cmovg
mov
call
xor
mov
jno
mov
jg
xchg
pushf
jnp
mov
adc
stos
cmp
jno
ljmp
testl
movsb
pop
cmp
push
inc
out
bound
sub
aam
imul
jl
jbe
inc
inc
push
fwait
lret
negb
dec
pop
and
aam
es
cmp
push
popl
aad
pop
ja
test
ret
clc
lcall
pusha
mov
divb
dec
daa
lods
pop
jbe
xor
mov
fistpll
in
cwtl
in
inc
std
mov
in
hlt
nop
push
loop
xlat
enter
pop
mov
test
jbe
sub
fnstenv
aaa
movsl
dec
jecxz
xor
or
int3
add
mov
or
add
bnd
call
cmp
stos
jns
sbbb
mov
jbe
jno
pop
or
mov
inc
dec
cmp
movsl
fisubrs
adc
loopne
and
insb
lods
mov
mov
mov
cmp
or
mov
and
shrd
xor
shr
addl
mov
xor
mov
xorl
xor
shl
sbb
xor
cmpl
mov
movl
mov
jmp
movl
jne
pushl
pushl
pushl
call
xor
add
and
mov
sub
add
xor
mov
or
adc
adcl
or
cmpl
movl
mov
jmp
movl
movl
je
pushl
pushl
push
pushl
call
sbbl
subl
add
sub
and
cmpl
movl
movzbl
mov
jmp
mov
movl
jge
pushl
pushl
call
xor
sbb
mov
mov
sub
sub
movzbl
or
mov
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
add
inc
and
xor
scas
aas
push
push
cmp
insl
add
loopne
and
lds
xor
fstps
mov
aad
xchg
andb
sbbb
mov
lret
cli
xchg
inc
outsl
or
or
xlat
scas
sti
push
call
mov
mov
mov
ret
mov
push
int
xor
add
mov
movsb
es
enter
lods
jno
out
repz
in
call
sub
sbb
out
xor
clc
and
xor
out
lds
cmp
push
push
and
into
pusha
adc
mov
in
ljmp
sbb
mov
pop
jo
jge
push
jo
dec
or
push
in
fisttps
jmp
xchg
cld
subl
sbb
xchg
gs
mov
idivb
sbb
enter
pop
cmp
pushf
jne
leave
mov
test
mov
push
dec
test
test
fwait
orl
lcall
flds
lcall
mov
jg
scas
sbb
xor
das
and
bound
inc
jmp
sub
ficompl
pusha
add
popf
pop
jne
push
shlb
lahf
out
and
xchg
xor
xchg
mov
mov
lds
repz
or
cld
int
cld
rcr
sbb
push
lret
out
pop
add
test
cmpsl
test
repnz
test
cltd
incb
std
ss
cmpxchg
jp
ficoms
mov
jecxz
push
insl
or
ja
add
add
jg
nop
jae
push
push
sub
int
mov
mov
or
xchg
inc
cmpl
pop
lea
inc
adc
out
jmp
sti
mov
cmp
nop
mov
fmuls
call
nop
sbb
test
in
mov
popa
movsb
push
movsl
imul
rclb
cmp
daa
mov
adc
mov
jl
imul
xlat
push
mov
jle
shr
lahf
cmp
cs
sub
in
ljmp
xchg
pop
int
out
sub
dec
jg
int
adc
cs
test
cli
movl
repnz
jle
add
dec
ds
add
xchg
pop
ss
jp
aam
push
mov
pop
lret
cmp
mov
jns
pop
rcrl
adc
test
jae
inc
notb
ljmp
je
dec
inc
pop
xchg
scas
sub
push
pop
push
shr
dec
and
lods
cmp
in
es
ficoms
lret
xor
push
adc
test
mov
lock
notl
mov
fsts
xchg
lea
inc
pop
pusha
stos
cld
movsb
lret
mov
mov
lret
jl
push
loopne
jae
push
pop
sub
cmp
inc
dec
in
xchg
mov
sti
mov
xchg
cmp
pusha
testl
lods
adc
test
mov
push
rorl
sub
jne
cmp
mov
jecxz
inc
pop
syscall
and
enter
shlb
mov
aad
sub
pushf
push
test
cmp
lods
leave
pop
sub
jbe
in
repz
pop
into
in
push
jmp
push
mov
sbb
testl
aaa
adc
lret
pop
and
pusha
pop
mov
hlt
mov
cld
jp
cmc
je
lods
cmp
xchg
jecxz
pop
sbb
cmp
sahf
data16
mov
sbb
dec
mov
dec
add
flds
jg
icebp
xor
loope
cs
aas
and
cmp
cmp
lea
push
push
pop
mov
sbb
scas
or
aad
sbb
inc
ret
cmp
nop
mov
je
call
add
mov
pop
lock
mov
dec
sub
and
dec
pop
fwait
push
mov
xchg
incb
dec
adc
and
lock
shl
inc
popf
mov
push
fistps
stc
pop
and
test
jnp
cmc
enter
insl
push
adc
push
fiadds
jecxz
xlat
mov
pushf
int3
mov
clc
popf
pusha
test
xlat
mov
push
xchg
out
push
pop
xchg
les
adc
jne
mov
fbstp
movsl
into
pop
call
adc
aad
adc
stos
pop
test
or
push
push
int3
das
daa
jno
ja
les
pop
cmp
push
out
dec
roll
mov
ret
jg
stc
arpl
jmp
sbb
sub
jmp
inc
sub
jne
imul
xor
pop
inc
and
and
arpl
iret
mov
das
sbb
sub
dec
jo
xor
xor
xor
mov
mov
cwtl
push
shl
mov
jmp
out
inc
mov
push
sahf
pop
sub
call
push
cmp
imul
push
cmpsb
ret
jge
shl
lds
sbb
dec
pop
xor
pop
pop
testb
enter
jo
out
into
push
test
addl
addr16
dec
in
stos
push
lret
lcall
xor
in
or
jge
sub
and
es
add
pop
adc
ret
and
dec
inc
fdiv
js
mov
cltd
iret
and
dec
fisubrs
add
jmp
adc
cli
pusha
ja
sub
rorb
jp
test
sub
mov
mov
or
xchg
sbbl
mov
out
or
popa
add
mov
cmp
cmp
inc
in
jns
rorb
rcll
loop
insl
rcl
xchg
popf
jmp
adc
adc
pushf
je
sub
add
mov
in
xchg
mov
lahf
ffreep
popf
in
xchg
mov
stc
rcrb
insb
pop
imul
xchg
lahf
pop
dec
adc
push
ss
cltd
int3
rcll
dec
jecxz
jl
xlat
imul
push
mov
push
addr16
mov
dec
mov
or
repnz
lods
popa
and
and
cli
sub
jl
cmp
and
decb
into
jo
or
or
inc
imul
dec
sbb
sub
arpl
fadd
addr16
add
lds
add
stos
mov
pop
sbb
add
jg
iret
mov
sbb
in
sbb
pop
in
add
pop
sbb
psadbw
insb
xor
das
lock
arpl
js
lods
mov
lahf
mov
int3
xor
out
ret
mov
mov
pop
sbb
bound
jne
mov
pop
int3
jo
enter
mov
out
push
mov
aas
pop
test
inc
and
cmp
jp
adc
stc
insl
and
push
xorl
lods
mov
sbb
popf
mov
ret
sbb
mov
divb
popa
jmp
mov
cmp
mov
xchg
icebp
push
push
sbb
jbe
xchg
adc
sbb
or
pusha
pop
xchg
xchg
popa
jns
movsl
das
xchg
mov
inc
xor
mov
lahf
loope
out
lcall
in
ss
pop
mov
dec
mov
popa
fst
inc
adc
mov
cmpsb
das
jle
rcll
jecxz
lods
iret
in
lods
pop
cmpsl
lea
iret
pop
stos
mov
lahf
test
ret
shl
add
mov
into
push
std
fisubrl
js
mov
mov
call
push
ss
sub
jmp
mov
sub
xchg
dec
add
sub
movsb
xor
push
cmp
leave
pop
push
adc
and
sub
push
xor
cmc
dec
data16
jnp
mov
jno
imul
ja
push
imull
stc
sahf
inc
push
and
jne
pop
lods
ds
test
andb
push
shrb
and
sub
push
pusha
jnp
cmc
popf
inc
or
lret
cmp
jae
aam
mov
sub
lock
call
movsb
icebp
decl
pop
movsl
aad
push
ret
testb
aaa
ljmp
repz
or
sub
dec
roll
divb
pop
bnd
inc
mov
and
out
and
add
adc
pop
or
int3
jge
mov
jg
arpl
xchg
lock
xchg
daa
add
cmpb
sbb
add
out
adc
sar
movsl
mov
xchg
jmp
das
jmp
insb
push
in
pop
rolb
mov
inc
cmp
inc
icebp
and
or
shlw
cltd
sti
sbb
cmp
cmp
mov
out
or
bound
ljmp
scas
xlat
add
and
and
pop
adc
and
sahf
xchg
cmp
lock
fs
je
dec
inc
out
add
shlb
icebp
inc
add
stos
shll
ss
add
loop
sbb
xor
push
xorb
push
lret
mov
out
out
insl
ret
jae
lock
mov
ret
pop
mov
sbb
shl
adc
pop
inc
lds
and
clc
mov
imul
leave
cmp
shlb
scas
pusha
out
inc
push
lods
sub
shrl
sub
sub
jae
dec
add
mov
int3
in
pop
lods
xor
testb
fmul
sub
dec
cmp
xor
and
rol
ds
cs
adc
push
aas
stos
mov
cmp
push
adc
sbb
push
lahf
dec
addl
xor
xor
jmp
into
icebp
test
dec
push
mov
repnz
mov
sub
push
cmp
les
sub
inc
add
pushf
jg
mov
push
mov
lahf
xchg
movsb
push
std
xchg
out
xlat
pop
xchg
dec
and
xchg
nop
insl
inc
sbb
outsl
fnstsw
adc
clc
pop
cs
xchg
iret
dec
cmp
lahf
aam
mov
lret
pop
mov
fwait
adc
cmpb
mov
inc
push
outsl
mov
jp
shl
xor
mov
vpminsw
inc
xchg
jmp
cmp
inc
scas
test
loope
ss
stc
xchg
je
clc
fidivrl
xorb
jle
ret
addl
test
xor
push
pop
das
mov
inc
or
push
repz
and
mov
sub
in
adc
xchg
imul
cmpsl
xlat
jnp
pop
sbb
push
fsubrl
and
add
mov
mov
xchg
sbb
sub
lock
push
xchg
mov
test
inc
or
stc
cmpsl
sub
sahf
fnstsw
sub
jl
mov
jno
fsts
les
iret
or
aam
jg
sub
loopne
and
xor
xchg
jnp
hlt
inc
int
pop
jo
xchg
dec
push
sub
push
fwait
ljmp
pop
dec
or
insb
mov
cmp
push
mov
dec
prefetchnta
clc
mov
inc
fidivs
add
stc
inc
mov
ficomps
inc
loope,pt
loope
in
repz
sahf
pop
out
or
dec
movsl
adc
icebp
hlt
imul
bnd
jne
movsb
sub
mov
mov
xchg
mov
add
push
les
sti
cmp
jbe
push
push
mov
xchg
mov
lahf
adc
in
inc
test
adc
js
leave
add
sbb
test
mov
jg
out
cmp
inc
aam
push
insl
mov
push
je
sub
inc
mov
fldcw
lahf
fcmovu
scas
mov
add
out
or
pop
daa
call
jb
shll
inc
cmc
lret
fcomi
inc
sbb
loope
xor
inc
cmpsl
xor
outsb
ret
inc
xor
stos
jne
adc
dec
bound
enter
cmc
cltd
push
cs
shll
sub
cmpsl
pop
inc
sub
call
out
fadd
in
es
and
and
dec
imul
enter
outsl
inc
or
inc
sbb
dec
aad
repz
cs
push
xchg
or
or
test
incb
das
inc
inc
iret
inc
andb
jg
add
hlt
pop
mov
roll
loop
cmp
push
or
add
int
and
jmp
in
adc
lea
jle
adc
sbb
adc
js
mov
lock
mov
pop
popa
test
xor
pop
cld
inc
sbb
ds
jl
popf
add
sub
sbb
es
mov
pop
xchg
shlb
lret
out
out
push
adc
clc
push
pusha
cmp
test
pop
pop
testl
push
inc
in
fidivl
movsl
pop
and
fstps
lret
jbe
test
negl
mov
mov
repz
es
pop
int3
iret
push
roll
push
shrb
out
jge
testl
mov
mov
pop
icebp
arpl
cmpsl
dec
sub
mov
in
jp
jno
adc
push
fcomps
scas
jne
mov
sbb
push
jno
pusha
or
push
out
mov
in
mov
test
je
mov
shl
xor
dec
push
push
sbb
andb
jge
int
rolb
ss
jl
inc
sub
sbb
fsubrl
push
movzwl
dec
cmp
fs
nop
outsb
add
add
ds
fwait
cmp
pop
mov
pop
shlb
pushf
and
test
outsb
cmpsl
fidivs
test
inc
xor
and
inc
cmpsl
ret
add
lret
imul
mov
dec
pop
sbb
lods
mov
js
mov
pop
sbb
arpl
cmp
popa
mov
lods
cmpsl
leave
shll
add
and
pop
cmp
fcmovnu
or
push
loope
fcoml
jb
xor
test
cmp
inc
lret
ljmp
movl
icebp
cmp
mov
inc
data16
addl
popa
adc
sub
lds
es
es
rcll
out
sbb
icebp
lret
xor
add
inc
xlat
daa
sahf
jge
push
faddl
jno
addr16
call
lcall
cmp
cmp
bound
push
std
sbb
loopne
mov
push
fiaddl
push
xor
jne
dec
adc
loope
outsb
push
mov
add
std
pop
out
hlt
inc
test
cmp
cmc
imul
or
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
jmp
sbb
push
sbb
mov
outsb
cmp
push
push
cmp
add
push
sub
aad
xor
das
shll
push
xchg
lock
enter
in
push
in
mov
fs
mov
mov
pusha
shrl
rclb
insl
xchg
dec
fiadds
xlat
jle
shll
jno
push
cmc
xor
xlat
test
inc
faddl
fadds
addb
pop
pop
addr16
add
decb
xchg
or
pop
js
inc
test
shlb
cli
lea
push
pop
cmp
inc
arpl
hlt
or
cmp
ljmp
stc
stc
push
push
jmp
pop
mov
mov
lods
mov
bswap
and
addb
test
pop
mov
fnsave
fistpl
fnstenv
mov
cmp
lret
ret
sbb
and
sahf
lea
sar
xchg
insl
insl
inc
ret
hlt
fldl
xchg
cs
push
pusha
outsl
cmp
scas
adc
push
addr16
add
scas
nop
push
and
mov
dec
rolb
jmp
or
mov
push
jbe
sbb
inc
cmc
pop
les
shlb
inc
mov
push
mov
push
add
lds
push
mov
mov
pop
fsts
fmuls
add
xchg
outsl
movsb
shrl
loop
ljmp
add
daa
dec
jg
out
push
jns
push
jo
adc
sahf
iret
mov
jo
je
bound
xchg
pop
sbb
fstl
sti
add
and
add
push
jecxz
sti
cmp
adc
ret
std
nop
and
push
add
arpl
add
jp
add
jnp
fldcw
fsubrl
mov
roll
sub
inc
jmp
xchg
dec
jo
test
pop
out
pop
rolb
loopne
enter
test
js
gs
push
insb
adc
mov
pop
scas
out
out
push
aaa
mov
andb
out
cmp
xor
ss
jnp
lret
inc
repz
data16
pop
aam
int
sbb
out
cmp
call
adcl
xchg
sub
xor
clc
push
inc
pop
fistpll
xlat
bts
dec
inc
xor
jp
and
mov
test
imul
sbb
mov
xor
int
int3
test
jnp
stos
pop
ret
inc
je
mov
mov
inc
sub
sub
pop
pop
inc
sbb
jl
push
in
jge
hlt
mov
add
orb
mov
sub
sbb
push
jge
pop
rsqrtps
pushf
mov
in
shlb
sti
adc
out
sub
add
xor
int
jno
pop
sub
imull
dec
pop
add
xchg
push
cld
xor
cmpsl
ja
jbe
imul
adc
in
adc
lahf
jo
fadd
sub
xchg
push
daa
mov
adc
stos
inc
les
int
push
test
add
push
fs
mov
out
icebp
lret
pop
bound
stos
xor
ror
dec
push
jb
dec
roll
sbb
mov
lret
rolb
sahf
fcoml
shlb
mov
insl
cmp
aad
jmp
pop
xor
adc
mov
out
testb
fstpt
pop
cmp
test
push
add
arpl
insl
adc
lret
stos
jb
jns
loop
xor
popf
out
fwait
test
add
jg
inc
jmp
ret
inc
scas
enter
data16
aas
fmull
add
adc
inc
adc
bound
sbb
lahf
setno
cmc
out
in
int3
xchg
mov
pop
xchg
jnp
fstpt
adc
hlt
mov
inc
lcall
imul
fsubp
mov
and
pusha
sarl
jae
xor
scas
add
mov
mov
in
sbb
cltd
sbb
inc
push
cmp
push
out
clc
icebp
fildll
pop
aam
jge
lods
je
lds
push
push
roll
pop
xor
dec
jno
add
push
push
mov
cs
shrl
arpl
sar
call
in
outsl
jecxz
xchg
or
pop
orps
sar
in
and
into
pop
pop
int3
jle
mov
rcrb
mov
cmpb
in
out
push
stos
jns
pop
xor
data16
inc
sahf
sbb
jl
and
xchg
cmpsl
ss
pop
fdivr
mov
jbe
dec
inc
fs
push
cmpsb
ja
or
xor
mov
cmc
popa
cmpsb
and
insl
xchg
enter
sub
jl
or
cmc
imul
xor
popf
pop
sub
jecxz
push
test
out
lahf
icebp
jmp
adc
sub
movsl
arpl
and
jbe
sbb
nop
and
es
sub
data16
pop
mov
push
inc
xchg
mov
lret
test
fdivrl
push
fidivl
leave
fwait
sub
mov
ss
mov
xor
shl
mov
xor
or
mov
mov
jmp
inc
dec
aad
fcoms
inc
loop
ds
or
cmp
push
push
out
clc
shl
pop
mov
inc
push
cwtl
cli
lock
call
xor
scas
ja
lret
mov
std
ss
push
daa
int3
mov
inc
mov
in
aaa
fldcw
hlt
add
bound
lds
mov
cmp
or
push
push
in
pop
je
push
cmp
lds
xor
add
pop
dec
cmpsl
mov
stos
fmull
sarb
xor
into
xor
sbb
mov
add
jnp
pop
add
lret
add
lods
outsl
push
mov
data16
xchg
icebp
mov
fidivrl
jmp
in
mov
test
and
mov
inc
ret
mov
stos
negb
sub
mov
dec
pop
xchg
add
or
push
jecxz
mov
mov
cli
adcb
int3
rcrl
cmpsb
orb
test
outsb
sti
xchg
sahf
sub
mov
ret
jmp
push
pushf
loope
inc
push
jb
mov
inc
jl
mov
fldenv
out
fisttps
mov
ret
ret
cwtl
cmp
xlat
sbb
aas
decb
mov
popa
jmp
pop
fmull
mov
pop
fidivs
pusha
lret
add
cmp
adc
jg
pop
ds
fs
ds
in
in
aam
xchg
sbb
xchg
test
and
inc
lods
fs
and
fnstcw
jle
test
add
and
in
movsb
je
dec
jbe
cld
subb
in
rorb
fbld
jo
insl
push
mov
jno
mov
jge
hlt
aam
aad
mov
fwait
push
xor
inc
jno
or
cmp
pop
push
cs
or
sub
dec
jno
fstpt
sub
sbb
iret
rcrb
sub
mov
or
sub
xor
into
test
dec
mov
nop
sub
mov
lods
call
push
inc
ficomps
mov
sbb
fidivs
data16
gs
mov
faddl
lret
dec
orl
mov
push
xorl
mov
stc
inc
popf
jecxz
mov
and
mov
sub
test
cmpsl
cwtl
addr16
mov
xor
das
jne
movsl
popa
cmp
pop
cld
aad
pop
cmp
aaa
loopne
aaa
outsl
dec
mov
rcll
jl
push
es
jno
rolb
jle
dec
lock
test
ljmp
scas
sub
mov
xchg
sbb
js
adc
test
push
ret
mov
xor
pop
fnsave
mov
inc
and
movsl
dec
dec
sbb
jnp
add
lea
mov
add
pushf
nop
jno
orl
clc
in
mov
fisubrl
enter
xchg
stos
jg
lcall
or
jns
lea
cmp
fwait
xrelease
mov
jge
add
out
lahf
push
inc
aad
jo
test
jno
pop
test
mov
xlat
adc
pop
addl
mov
sub
mov
xor
fistps
adc
gs
xchg
jno
std
icebp
jae
sbb
repz
ss
sti
xor
cmpsb
pop
and
xchg
fstl
out
xor
jle
cmpsl
cmp
xor
push
or
mov
mov
inc
subl
jns
imul
popa
mov
xchg
daa
mov
mov
je
imulb
inc
addr16
cmp
jnp
idivb
test
pop
inc
sbb
rol
push
mov
cwtl
inc
pop
add
mov
inc
or
inc
stos
movsb
mov
addr16
insl
sbb
xchg
mov
lcall
lcall
fldl
xor
xor
inc
inc
or
sub
insb
lds
cmp
data16
test
aas
push
mov
or
dec
inc
je
fwait
sub
out
loopne
int
data16
sbb
inc
mov
and
je
or
clc
xchg
dec
shrl
mov
leave
test
push
xchg
hlt
fmull
adc
pop
adc
repnz
sub
jmp
sarl
fmul
sahf
jmp
xchg
sbb
and
add
call
xor
pop
clc
inc
lret
inc
mov
stos
dec
xlat
cmp
xor
push
pop
pop
or
push
add
xchg
test
cmp
xchg
push
in
scas
xchg
das
das
push
jne
mov
cs
stos
cmpsb
shll
xchg
ret
test
shl
dec
ds
adc
inc
sbb
das
xor
cmp
adc
cmp
mov
inc
add
jb
mov
sub
and
add
xlat
aas
xchg
mull
mov
imul
add
mov
mov
shrd
shr
mov
mov
jmp
dec
adc
adc
xchg
inc
mov
jb
scas
lea
push
push
cmp
les
mov
ds
sub
hlt
pop
jbe
push
mov
fadds
inc
sub
mov
and
xchg
add
ljmp
xchg
cwtl
and
popa
mov
inc
mov
call
pop
jmp
es
in
out
leave
shll
jge
mov
shlb
cmpsl
cwtl
push
or
push
mov
ljmp
call
aam
xchg
dec
mov
push
dec
loopne
push
imul
mov
jnp
push
adc
push
cmp
pop
jno
sbb
sub
mov
or
add
lahf
rcl
xchg
in
loop
xchg
and
fdivl
mov
jb
mov
inc
addl
fcmovnu
cwtl
inc
add
je
int3
shl
daa
cmp
hlt
push
adc
lods
mov
cmp
in
iret
sbb
push
pop
lock
pop
lcall
xor
xchg
push
lds
out
add
or
fimull
lret
std
outsb
push
cmp
adc
clc
mov
sbb
fucomi
ljmp
movsb
in
inc
inc
xchg
push
mul
subl
std
dec
mov
sub
mov
push
push
mov
insl
lcall
add
js
mov
push
out
rcr
icebp
or
adc
jae
cmpsb
les
addr16
jge
mov
mov
mov
add
inc
into
lock
push
xor
lods
pusha
or
fmul
and
xchg
hlt
mov
in
movsb
jae
mov
cmp
dec
testb
movl
and
add
push
test
jecxz
mov
xor
mov
inc
xchg
or
or
ds
jg
stos
out
fldcw
sbb
enter
and
xchg
es
sar
rclb
sbb
ss
dec
push
pop
int
mov
dec
lcall
loopne
add
jns
pop
mov
ds
add
mov
pop
or
or
scas
jno
mov
jecxz
sarb
jge
rcrb
pusha
insb
jecxz
pop
pop
ret
sbb
push
imul
xor
hlt
and
sbb
icebp
push
dec
mov
enter
mov
ret
cmp
xor
xchg
add
jb
xchg
fwait
orl
push
cmc
sub
test
or
push
filds
call
outsl
adc
add
mov
push
mov
frstor
dec
stos
dec
xor
out
fs
mov
iret
xor
test
test
and
pop
xchg
mov
les
sub
adc
ret
pop
sub
inc
ret
push
rol
inc
into
mov
add
movsl
in
test
int
mov
push
sti
push
inc
push
adc
push
add
mov
loope
add
jp
fidivl
jp
inc
int
pop
lods
addr16
jns
dec
in
nop
inc
cmp
and
and
ret
jl
pop
inc
pop
sbb
into
sbb
popf
or
pop
push
fistpl
or
jp
dec
popf
add
push
cld
jae
sahf
enter
pop
mov
push
dec
rcrb
in
mov
int
addr16
nopl
pop
cmc
sbb
cs
mov
pushf
insb
repz
imul
jmp
fcomps
dec
pop
push
jae
fdivrp
iret
in
in
pop
or
sub
data16
pop
aam
jp
rorb
sahf
sub
mov
xchg
xchg
add
adc
push
mov
ds
rol
mov
sub
cli
std
mov
dec
pop
mov
dec
in
mov
push
cmc
cmp
stc
insl
movsb
test
and
fwait
push
lret
test
inc
loop
inc
movsl
cmc
lods
js
adc
loopne
cmp
dec
push
push
pop
cmp
repz
or
dec
push
bnd
mov
xor
mov
loope
jns
jns
js
mov
shlb
ret
stc
push
adc
mov
fxch
sub
and
in
lret
les
sub
xor
leave
xor
sahf
dec
pusha
jmp
ds
mov
dec
popf
cmpsb
and
shrb
adc
arpl
dec
cmp
nop
cmp
dec
pusha
hlt
pop
push
in
gs
cmp
movsb
test
call
jo
pop
push
loope
inc
lret
or
mov
jmp
add
add
dec
lcall
xchg
mov
lret
ret
pop
and
in
inc
xchg
mov
aam
sbb
pop
xchg
push
or
std
mov
xor
fdiv
lock
jo
rcrb
test
sbb
mov
enter
imul
jl
lret
icebp
int3
mov
inc
inc
cmp
xor
or
lea
jmp
dec
outsl
cltd
js
cmp
mov
mov
iret
mov
test
call
push
cmp
or
cmp
sbb
fcmovu
mov
bnd
mov
in
sbb
clc
and
test
add
call
hlt
mov
imul
xchg
mov
retw
sbb
clc
jmp
fisubs
push
cld
mov
arpl
loop
jbe
sub
xchg
mov
rolb
mov
xchg
cltd
das
or
pop
sub
dec
and
pop
not
sbb
test
aad
mov
ret
divb
shll
sarb
stos
xor
dec
mov
sbb
mov
push
add
adc
dec
icebp
in
mov
int3
movsl
hlt
cld
dec
aad
pop
test
repz
test
pop
xchg
in
and
lea
sub
cltd
std
push
mov
mov
inc
lcall
dec
ret
sahf
sbb
add
sti
mov
jne
inc
addr16
imul
loopne
movsb
hlt
or
mov
sub
imul
fisttpl
lods
adc
popa
test
jl
lods
movsl
mov
lds
cmp
movsb
sbb
pop
jbe
cli
iret
not
cld
fisubrs
and
push
xchg
mov
rclb
loopne
xlat
testl
sub
in
cltd
je
sbb
or
dec
out
lock
or
into
xchg
lret
mov
rolb
lret
push
fildl
addr16
xchg
sarl
mov
xor
mov
mov
jg
mov
rolb
pop
in
pop
pop
jnp
cltd
xor
mov
mov
and
sbb
pop
iret
mov
lods
stc
cld
xchg
mov
push
stos
notl
mov
subb
pushf
push
pusha
sti
add
mov
xchg
adc
cld
loop
les
adc
sahf
fldenv
push
sahf
cwtl
xor
rorl
mov
inc
aas
xchg
xchg
mov
loopne
dec
xchg
pop
iret
mov
mov
or
sbb
ret
push
ret
out
pop
inc
lock
pop
mov
adc
fcoml
bound
icebp
add
movlps
jg
cmpsl
mov
xchg
add
dec
sti
sub
xor
sub
jg
push
scas
add
or
sub
mov
push
adcl
psadbw
mov
sti
xchg
hlt
or
sub
mov
orb
jns
std
sbb
adc
push
icebp
loop
jl
or
jp
cwtl
xor
xor
sbb
pushf
stos
lea
ficoms
aam
mov
ror
icebp
dec
cltd
ds
and
pop
arpl
in
and
sub
sbb
xchg
mov
bndldx
lods
loope
adc
repnz
repnz
in
lahf
inc
inc
pop
fsubs
xchg
dec
or
roll
sbb
mov
add
dec
movsl
fimuls
daa
loope
adc
sbb
leave
fcomip
xchg
cli
ret
add
ljmp
in
popa
dec
push
adc
call
jo
aam
mov
or
repz
cmp
pop
mov
mov
pop
mov
mov
cli
cmpsb
aam
mov
push
adc
rolb
leave
or
rcrl
mov
lret
shrb
adc
push
movsl
mov
aad
je
xchg
repz
pop
popf
pop
xchg
insb
push
int3
mov
sub
in
fdivl
mov
das
dec
dec
movsb
sbb
push
movsb
mov
push
data16
andb
cmp
in
bound
jnp
popf
push
inc
lahf
lcall
popa
subl
hlt
xchg
jne
mov
cmp
je
or
outsb
mov
lods
push
sub
shrl
jns
aaa
adc
in
cmp
pop
push
ds
aas
cmpsl
imul
iret
enter
push
xor
cmpsl
pop
jne
in
movsb
lret
mov
sbb
fcomps
mov
aas
les
pop
imul
mov
pop
xor
jne
lods
lret
rorb
sbb
daa
negl
add
and
int3
popf
test
pop
jge
mov
jbe
push
mov
fbstp
jmp
jecxz
jmp
push
dec
xchg
inc
push
adc
stos
mov
lahf
sub
inc
das
inc
enter
xlat
inc
and
icebp
and
mov
mov
inc
daa
mov
mov
and
or
push
sbb
int
xchg
pop
cmpsl
lods
pusha
lods
add
call
jnp
inc
aam
lret
repnz
dec
lods
imul
xchg
cmp
icebp
rolb
fcomps
lcall
mov
jns
mov
adc
pop
or
orb
cmp
shl
int3
pop
cs
pop
loop
jnp
ret
and
cmp
mov
clc
fsincos
sbb
or
inc
cmpsb
enter
cs
inc
mov
dec
movsb
jmp
lret
movsb
cli
jo
sbb
and
insb
mov
jmp
add
push
cmp
sub
pop
push
mov
mov
divl
add
fcomps
mov
aas
xchg
stos
and
xchg
mov
mov
xor
pop
cmc
inc
stos
pop
push
cwtl
aad
mov
xchg
xchg
rorl
test
and
daa
ror
xorb
push
loopne
jnp
pop
lods
dec
fistl
cmp
outsb
sub
inc
push
imul
fwait
and
test
fs
push
add
lock
and
test
push
sti
or
shl
push
fldt
leave
lret
mov
lret
jae
push
inc
cld
idivl
icebp
imul
dec
xor
jbe
jae
jmp
and
dec
xor
inc
notl
es
push
push
pushf
insb
inc
divb
mov
mov
ss
js
jg
jne
lahf
xor
cmpsl
sub
adc
mov
add
iret
and
pop
lcall
loop
pop
out
mov
stos
stos
aaa
aaa
scas
loopne
cs
pop
inc
pop
lods
jecxz
dec
pop
sub
pusha
fbld
add
xchg
lret
jge
mov
aam
pop
xor
push
and
add
insb
xchg
mov
xchg
and
stc
jnp
fwait
mov
inc
or
dec
dec
ds
icebp
jp
jns
stos
mov
mov
xor
lcall
sti
and
and
xor
sahf
push
and
dec
in
scas
xor
mov
shll
sbb
xchg
cmpsl
fists
jmp
push
test
into
pop
lret
adc
cmpsl
outsb
mov
xchg
outsl
or
dec
cvtps2pd
ret
push
pop
mov
push
fcoms
clc
sub
test
scas
push
xchg
mov
jl
cmp
gs
shrl
mov
out
dec
mov
in
adc
xchg
dec
test
mov
divb
imul
fs
add
scas
adc
xchg
icebp
test
add
pop
mov
xchg
fmull
imul
addr16
cmpsb
sbb
jb
mov
icebp
repz
inc
leave
mov
inc
shl
scas
js
in
mov
lret
and
sbb
out
cs
adcl
xchg
das
scas
lods
dec
ds
inc
xor
push
sbb
in
push
movsb
pop
aaa
pop
sub
mov
pop
lea
mov
xchg
subb
jecxz
cmp
lock
sub
rdpmc
mul
hlt
or
xlat
lret
test
daa
mov
adc
mov
mov
cmp
arpl
sub
lea
push
aam
adc
aad
hlt
scas
sub
dec
or
jl
and
push
cmc
lea
xor
mul
js
mov
jmp
xchg
pusha
sarl
mov
addr16
scas
add
in
addr16
adc
add
jp
in
lock
and
push
test
into
insb
testl
xlat
nop
jp
or
mov
loope
adc
inc
imul
xchg
in
jae
test
mov
lret
adc
jg
pushf
or
mulb
lea
cltd
adc
mov
jl
mov
outsb
sahf
mov
lret
addb
add
mov
cmp
bound
cmc
loop
sarb
pop
mov
push
idivb
cld
add
ds
cwtl
xchg
sbb
stos
adc
sbb
addr16
movsb
decl
dec
stc
xchg
ret
inc
fmuls
mov
dec
movsb
push
push
sbb
xchg
sub
mov
jmp
icebp
ljmp
or
jp
clc
imul
pop
mov
fimull
mov
mov
inc
pop
xchg
inc
lods
dec
xor
inc
ret
out
outsl
dec
xchg
in
adc
mov
addr16
jecxz
jb
push
inc
fiadds
jnp
flds
pop
xchg
mov
into
cmp
ja
into
sarl
mov
pop
add
sbb
jbe
enter
call
push
outsl
cmc
mov
fistl
test
mov
jge
cmp
fucomi
or
movsl
insl
push
xchg
pusha
int3
mov
push
les
add
or
pop
hlt
insb
rcrb
sbb
mov
add
mov
cmp
shrd
rcr
adc
mov
mov
aam
cmpsb
stos
lret
inc
ret
cmp
cmpsl
dec
adcl
fcomip
adc
xchg
insb
push
loopne
adc
inc
ja
outsl
ror
pop
push
test
leave
add
inc
and
xchg
in
push
sbb
push
cmp
adc
xchg
andl
shrd
shr
mov
jmp
jge
orb
js
xor
outsb
pop
fstpl
test
call
push
push
and
pop
ret
mov
ds
sti
dec
add
xor
shll
lea
rcrb
pop
loopne
lds
jl
mov
loopne
adc
inc
xchg
jno
xor
mov
xchg
dec
push
loop
xlat
push
adcb
xor
dec
xchg
mov
repz
jecxz
mov
ror
in
stc
xchg
push
sub
mov
push
push
call
inc
mov
scas
fsubrl
shlb
lock
shll
xchg
or
push
mov
cmp
fwait
jne
repz
pushf
push
or
push
aad
into
pop
cmp
dec
dec
push
or
lcall
subl
or
inc
pop
in
insl
pop
sbb
pop
dec
fwait
daa
in
push
notl
mov
testl
sbb
cmp
scas
jmp
pusha
insl
mov
push
fcmovne
sarb
xchg
aas
dec
inc
jno
lds
fldcw
test
mov
arpl
int3
mov
and
pushf
jb
jno
or
cmp
fdivs
add
xor
clc
mov
stos
in
jle
les
fwait
adc
xchg
sbb
sahf
and
mov
add
push
pop
leave
add
daa
mov
mov
in
in
or
pushf
imul
test
jmp
inc
push
outsl
mov
mov
sarb
test
dec
dec
ds
test
fsts
sbb
mov
cmpsb
call
sti
cwtl
movsb
jmp
xor
xchg
mov
mov
jb
dec
or
fwait
mov
sti
lret
mov
add
inc
cmpsl
aaa
push
sub
adc
xchg
mov
and
jg
repz
movsl
jp
loopne
push
jge
test
sub
jecxz
jb
repz
mov
or
addr16
std
mov
les
aaa
jl
pop
int3
and
dec
xchg
outsb
ret
jg
ss
jle
and
cltd
imul
into
ret
fistpl
inc
imul
in
adc
and
mov
nop
pop
insb
adcl
xchg
sub
loope
pavgw
or
jne
cmpsb
cmp
jge
outsl
adc
sti
xor
dec
dec
mov
xchg
fsubrs
mov
xor
mov
das
mov
insl
add
adc
rorl
cmpsb
mov
call
loopne
mov
adcb
mov
dec
sbb
test
pop
les
inc
dec
xchg
inc
adc
out
xor
xchg
mov
or
nop
xchg
mov
xchg
mov
clc
es
lods
inc
hlt
and
or
cs
outsl
jns
aam
ret
inc
sub
push
cmpl
sub
lea
or
jp
lret
dec
scas
pop
adc
cmp
dec
or
add
pop
pop
push
dec
jae
fisttpl
sbb
xor
jns
pop
fcom
xor
cvttps2pi
pop
xchg
out
jle
cli
push
fs
enter
mov
fdiv
mov
rclb
cmp
mov
div
sub
mov
jle
iret
push
lods
insl
xchg
scas
dec
popl
mov
aam
dec
mov
dec
lea
lods
sbb
pop
cltd
jge,pn
mov
dec
aad
or
push
sub
cmp
or
pop
ja
insb
scas
lcall
mov
pop
into
gs
pop
xchg
and
sub
lea
push
bound
sbb
and
xchg
cmp
out
add
jb
std
mov
xchg
loop
shll
lods
insb
movl
popf
pushf
es
das
push
lods
ljmp
adc
cmp
sub
scas
inc
sarl
pop
xchg
cmp
and
pop
cwtl
daa
mov
stc
mov
loopne
mov
ret
shl
ds
sub
into
pop
sahf
fmuls
jge
add
sti
jle
sbb
or
xchg
and
inc
sub
pop
mov
push
cmc
mov
push
jnp
sub
push
dec
dec
mov
stc
sub
mov
call
mov
mov
mov
add
mov
dec
aam
cwtl
mov
dec
xchg
and
shlb
sahf
sub
lock
or
jnp
cmc
push
xor
adc
push
sbb
dec
cltd
scas
mov
jle
jne
adc
sbb
xor
in
aas
add
cmp
xchg
xchg
lock
xor
mov
pop
out
fwait
imul
or
stos
mov
lods
repnz
scas
hlt
jmp
inc
jae
jae
paddw
mov
xor
xor
or
mov
shl
jmp
sbb
adc
aad
into
sti
mov
xor
add
push
icebp
jae
out
dec
push
jbe
dec
mov
mov
loop
adc
push
shll
ss
fwait
scas
pop
repz
lcall
xlat
xor
jge
xchg
add
push
xor
je
fidivs
ret
out
dec
lcall
addr16
pop
or
outsb
and
movsl
jbe
jmp
cmp
pop
inc
jbe
sub
mov
pusha
mov
and
jae
lds
jp
cmp
out
adc
pop
test
push
mov
rcrb
jp
ljmp
data16
sub
imul
js
sbb
call
movsb
outsl
sbbl
mov
ficoml
push
stos
push
jae
cli
in
xchg
daa
mul
sub
pop
push
pop
popf
lods
xor
push
fs
pop
popf
fdivrl
popl
add
and
dec
stos
xchg
and
dec
sti
fnstenv
lods
test
adc
dec
outsb
mov
cltd
scas
out
and
enter
lods
out
sti
add
testb
lcall
jbe
or
mov
mov
jbe
sbb
out
fcomps
push
insb
dec
mov
mov
or
lock
jo
mov
mov
test
lods
scas
xchg
aad
jmp
mov
push
mov
enter
fs
movsl
xchg
push
je
jno
enter
mov
cli
lods
fstpt
dec
lahf
push
pop
pop
add
mov
dec
fadds
mov
hlt
bound
out
mov
or
pop
push
push
mov
jmp
repz
fisttps
mov
out
enter
mov
add
into
inc
xor
insb
xchg
add
inc
and
shlb
jp
sub
mov
cmpsw
and
add
fsubrs
int
stc
enter
shll
cltd
lret
lds
fisttpll
pop
loop
dec
lcall
ljmp
mov
sbb
in
out
lods
add
push
and
jl
and
cmp
out
in
cld
repnz
adc
jl
or
in
popf
mull
and
cmpsl
push
and
addb
mov
inc
jns
out
mov
ret
das
mov
incb
mov
pushf
mov
push
dec
inc
mov
jge
fwait
paddw
xchg
sub
popa
sbb
xchg
dec
outsl
bound
xor
lock
lahf
nop
mov
push
mov
or
stos
dec
push
inc
xchg
mov
sbb
flds
add
push
pushf
mov
sub
and
repz
js
and
adc
lock
les
dec
mov
xchg
mov
loope
or
sub
jns
sub
clc
aad
dec
aas
stos
mov
mov
repnz
mov
shrb
push
or
jl
in
jne
sub
testl
nop
xchg
repz
jle
cmp
sbb
mov
shl
jae
iret
js
sti
dec
aad
imul
xchg
xchg
inc
sub
scas
ds
fists
xchg
add
inc
and
pop
mov
ss
or
jbe
or
dec
ret
or
pop
cmp
mov
mov
dec
out
push
cmp
popa
jmp
pop
jae
daa
xlat
jnp
js
cmp
mov
ja
les
stc
push
cmp
or
fwait
insb
shr
leave
pop
mov
add
sbb
loope
aad
lods
or
imul
and
mov
xchg
aam
sbb
jge
jle
sahf
sub
imul
or
into
push
shrl
mov
dec
push
movsb
ja
sub
ja
rorb
fmull
ret
loopne
sub
push
mov
cmp
cmp
cmpsb
sub
push
jl
movsl
shrl
call
mov
sbb
movsb
sbb
dec
xchg
fstpt
test
scas
es
fistps
mov
rcll
shlb
pop
cld
out
pusha
subb
xchg
les
test
add
xchg
xor
mov
pusha
add
xchg
fwait
imul
cmp
cmp
mov
sbb
cmc
mov
sti
push
mov
dec
ret
ficompl
adcb
sar
add
mov
repz
push
fisubl
mov
int
xor
stos
sub
imul
enter
mov
mov
mov
bound
or
cmc
xchg
pop
mov
fimuls
insl
pop
or
data16
pop
fiaddl
in
jno
in
mov
mov
outsb
enter
movl
jl
and
sar
pusha
cmpsl
pop
mov
pop
daa
mov
jnp
dec
pop
xchg
xchg
aad
pop
push
std
push
cld
shr
sub
mov
lds
in
mov
mov
or
mov
mov
jmp
and
sbb
in
and
push
jae
push
push
cmp
shl
pop
push
stos
mov
in
lahf
push
mov
and
sbb
repz
sti
outsb
aaa
mov
pop
lea
jge
lea
jmp
hlt
idiv
lods
jecxz
insl
or
nop
sahf
jno
adc
add
mov
repnz
dec
push
rep
in
fnsave
jmp
mov
push
xchg
mov
int
inc
jecxz
and
or
mov
xchg
les
add
jge
mov
fbstp
sbb
gs
mov
gs
cmp
les
xchg
test
repnz
in
xchg
sbb
sbb
jbe
fcomps
mov
xchg
cmpl
leave
mov
dec
jo
jae
push
adc
subl
push
idivb
xchg
xchg
mov
pop
jl
push
sub
mov
and
xchg
test
mov
rorb
xchg
fcomps
cmp
inc
dec
in
pop
mov
je
into
fwait
mov
loope
push
pop
and
mov
cs
adc
cmp
push
xor
or
lods
leave
inc
pop
mov
fidivrl
sbb
push
inc
xchg
mov
mov
into
sbb
xchg
mov
lods
push
stc
mov
testl
add
xchg
cwtl
xchg
loope
push
or
test
test
cmp
popl
call
movsl
cld
add
cwtl
dec
cmpsl
outsl
mov
inc
leave
lea
bound
pop
scas
push
incb
js
shrl
push
repz
xor
das
mov
in
pop
adc
add
mov
inc
js
addr16
ss
fsubp
mov
dec
pop
cmpsb
int
mov
push
nop
dec
test
jge
mov
lahf
enter
inc
dec
xchg
and
je
mov
mov
or
in
jg
add
lds
fnstcw
mov
push
mov
add
dec
insb
das
es
push
lret
or
cmp
lock
dec
testl
aas
in
in
leavew
in
xlat
orl
inc
lods
sahf
fmuls
lahf
daa
fildll
xchg
imul
std
aaa
jecxz
imul
rorl
jmp
shl
in
mov
xor
or
xor
xlat
jno
repz
ret
testb
and
mov
sub
mov
push
jmpw
sub
mov
or
std
test
rcrl
scas
decl
jg
xor
ror
into
shlb
mov
shrl
or
adc
test
sbb
and
mov
or
cmpsl
sti
mov
ret
mov
adc
jmp
or
or
adc
add
mov
aam
cmpsl
lods
pop
pop
mov
xchg
xor
mov
fnsave
sbb
clc
inc
rorb
mov
subl
lock
ret
loopne
xchg
cmp
xor
imul
ss
bound
pop
gs
popa
xchg
and
inc
rclb
rcrl
xchg
adc
icebp
pop
jne
in
gs
arpl
mov
or
push
pop
lret
andl
mov
test
bound
mov
addr16
jecxz
and
and
or
push
inc
cs
pusha
push
test
adc
arpl
push
cmpsl
shr
mov
fadds
dec
lods
mov
loopne
aaa
lret
loopne
and
ja
mov
fnstenv
pop
xor
inc
mov
lahf
inc
pop
jge
test
xor
fidivl
arpl
fmull
rcr
out
cmpsb
cmpsb
inc
xchg
fimull
adc
ss
push
push
insl
and
fistpll
and
outsl
mov
push
outsl
lcall
push
movsl
or
mov
into
lods
or
xlat
dec
fstl
sub
jae
in
jmp
nop
and
push
scas
insl
cmpsl
int
jo
loope
mov
push
stos
aas
out
icebp
sub
cmpsb
ficomps
pop
shll
fs
fmull
lds
notl
andl
mov
adc
sbb
lahf
pop
sbb
mov
adc
xchg
decl
jl
popf
loop
jp
cli
call
addb
jns
out
lret
pop
add
push
jns
cmc
add
loope
lret
jmp
xchg
sti
sub
cmp
xchg
add
ret
xor
inc
xor
mov
xor
mov
inc
sti
pop
adc
repz
in
cmp
pop
fsubrl
icebp
adc
add
pusha
out
pusha
sahf
add
fbstp
call
dec
xchg
aam
sbb
and
sahf
mov
cmp
push
sbb
inc
xor
loop
shlb
jle
popf
push
dec
movsl
pop
test
addr16
ret
insl
outsl
sbb
fistps
fs
sbb
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
jmp
lock
mov
enter
push
mov
push
push
cmp
sub
adc
xor
sub
js
jp
and
and
jecxz
fucomip
test
cltd
mov
aam
xor
aam
mov
jns
fdivs
gs
aam
test
sbb
jg
and
jo
les
outsb
imul
fwait
xchg
push
scas
fadd
xor
scas
rcrb
adc
fs
cwtl
jb
bound
adc
lea
push
jns
jbe
cmpsb
cs
or
in
out
mov
mov
xchg
xchg
jl
lret
ret
jmp
lock
adc
insb
popa
shll
pop
nop
js
xor
aaa
in
scas
fistpl
sub
int3
and
mov
in
loope
dec
add
aam
dec
jp
sarl
jo
push
je
ret
ret
ret
or
mov
sub
lods
vsubss
rclb
fcomi
inc
inc
pop
ffree
insb
sub
outsb
arpl
lds
jmp
in
sbb
or
pop
mov
movsl
jo
lds
iret
adc
imul
repnz
inc
movsb
push
mov
cmp
aad
jnp
xor
iret
mov
xor
imul
test
xchg
add
adc
sub
dec
nop
xlat
jp
jo
stos
mov
cvtps2pi
call
xchg
sbb
sbb
loopne
or
shr
and
call
iret
mov
negl
mov
ds
mov
aas
arpl
jns
lret
es
cmp
jne
imul
mov
push
push
lods
dec
mov
jl
add
bound
dec
repnz
or
enter
inc
cmpsl
ret
sbbl
pop
mov
push
popa
dec
mov
ljmp
jge
ds
xchg
cwtl
ret
ja
xor
or
lds
leave
lods
mov
pushf
lds
sbb
or
dec
lret
daa
fstps
lea
scas
adc
pop
fstl
icebp
adc
lret
add
scas
mov
inc
adc
push
stos
fwait
cmp
jmp
test
std
mov
rorb
imul
stc
sahf
dec
jae
ss
repz
lahf
repz
ja
cli
pop
loopne
in
and
shlb
outsl
xor
cld
imul
xor
rcrl
repnz
outsl
push
jno
inc
mov
lods
push
aad
mov
dec
int3
xchg
or
insl
shll
std
into
dec
inc
pushf
xchg
push
adc
mov
out
push
adc
int
mov
xchg
mov
sbb
xchg
dec
sbb
bound
pushf
aaa
mov
dec
mov
inc
ljmp
mov
lds
mov
out
lods
jns
xchg
fnstcw
xchg
imul
or
lds
test
loope
push
lcall
mov
lret
and
cmc
out
inc
cmc
mov
lods
test
std
jne
xor
or
xchg
mov
jo
add
mov
xor
mov
mov
and
jne
mov
cli
adcl
loope
stos
mov
addl
enter
jae
int
shr
sbb
xorb
cmp
addb
cmpsl
fildll
cmpsl
mov
mov
mov
cmpb
pop
pop
mov
sub
inc
mov
in
cwtl
xor
xor
or
arpl
ficoms
fsubrs
dec
cmp
repz
jae
stos
and
jp
jmp
clc
dec
jp
dec
or
push
add
int
fcoml
mov
mov
cmc
jns
pop
popa
insl
lods
test
sbb
test
dec
outsl
int3
jl
loopne
dec
and
mov
js
mov
xor
pushf
daa
dec
inc
movsl
jnp
jg
push
pop
jecxz
dec
shr
push
xchg
sbb
dec
aad
jo
pusha
rcrl
push
inc
xchg
jge
lock
imul
es
inc
and
pop
test
fwait
lret
icebp
fnstcw
je
in
xchg
pop
mov
clc
xchg
js
scas
push
movsb
or
ljmp
cmp
lods
cmp
iret
gs
lods
push
mov
test
ss
mov
add
fs
adc
fnstcw
lock
dec
inc
pop
mov
add
sbb
sub
stos
daa
pop
movl
cmp
xchg
cld
fldenv
jmp
pop
mov
fst
in
imul
nop
mov
sbb
pusha
stos
inc
mov
hlt
js
mov
add
scas
mov
push
or
inc
repnz
pop
sbb
and
add
popf
popa
bound
inc
fimull
xchg
addr16
mov
movsl
xchg
mov
jne
into
jae
push
ret
mov
jmp
mov
sbb
cltd
cmovbe
dec
mov
mov
push
cmp
jecxz
fisttps
popf
add
fs
in
iret
jge
pop
int
popf
mov
xchg
adc
mov
mov
in
cmp
ja
lret
jg
add
mov
xor
jb
dec
notl
mov
or
js
icebp
inc
jge
shll
gs
fildll
pop
pushl
in
push
int3
push
or
sbb
iret
cs
ret
mov
push
sarl
xchg
or
test
loop
les
dec
gs
inc
mov
fidivrl
loop
movsb
mov
repz
xchg
mov
and
rcll
dec
pop
xorb
mov
dec
dec
push
sub
ljmp
les
fsubl
mov
sub
das
push
push
out
sbb
adc
testb
lds
sti
add
cmp
lret
sbbb
cmp
jbe
push
sbb
inc
or
jae
adcb
push
adc
jle
sub
test
mov
jmp
xchg
ret
popa
ljmp
aad
and
xchg
xchg
bnd
out
cmp
cmc
mov
lret
jg
je
inc
test
and
lods
enter
jl
and
das
stc
dec
pop
es
mov
fs
sub
ljmp
addr16
aam
push
cmp
loop
xor
mov
and
or
push
or
ja
in
bound
fcmovnb
push
icebp
jge
orl
in
sub
inc
mov
punpcklwd
jns
test
movsl
out
cmp
cs
jecxz
pop
outsl
sbb
and
fdivs
xor
call
mov
push
jl
dec
sahf
ljmp
pop
adc
fadds
xchg
iret
mov
out
sub
bnd
rclb
dec
mov
or
enter
push
xchg
ficoml
pop
mov
das
das
xchg
fucomp
test
cmp
pop
testb
cltd
mov
shll
mov
inc
lods
push
jle
push
or
cmp
lock
cmp
loope
xchg
cmpxchg
stc
and
sbb
cmpsb
xor
jbe
jns
fisttpll
push
inc
cld
xchg
sub
jle
sbb
popa
mov
in
xor
pop
dec
sub
push
xchg
dec
mov
dec
push
cmpsb
and
mov
inc
mov
mov
sub
rol
mov
or
test
cmpsb
cli
inc
pusha
pop
lds
or
rorl
adcb
dec
sbb
inc
sarl
enter
jmp
cs
dec
pusha
sar
fisubrs
mov
jnp
hlt
inc
mov
sbb
push
sbb
arpl
inc
adc
into
testb
ds
push
out
mov
mov
push
popa
insb
push
enter
outsb
push
sbb
jmp
loopne
ljmp
mov
pop
inc
lea
xchg
and
xchg
daa
std
inc
mov
sti
int3
out
lcall
xchg
mull
loopne
or
sbb
cmp
int
inc
cmp
adc
cmpsl
xor
ds
jmp
nop
repz
hlt
mov
and
add
movsb
add
aaa
lret
pop
cwtl
xor
pop
inc
ret
jge
mov
aad
lret
int
mov
sub
jge
xor
insb
add
mov
jp
popf
sub
negl
cmpb
mov
shrb
fimull
repnz
dec
loope
mov
repnz
adc
loopne
pop
mov
cmpsl
scas
adc
pop
mov
lcall
in
in
jge
pop
int
lock
lock
pop
fwait
aad
std
ret
imul
pushf
sbb
push
pop
cli
outsl
flds
popf
nop
mov
ja
pop
pop
push
lcall
int
mov
jecxz
xor
jge
pop
es
sbb
dec
jmp
lcall
xchg
xor
cmp
jle
lret
mov
jbe
repnz
lahf
xchg
loop
pop
ds
hlt
test
mov
icebp
mov
mov
andl
sub
test
rcl
cmpsb
xchg
or
in
mov
pop
aas
test
mov
les
dec
fnstsw
bound
lcall
mov
ljmp
jno
test
rcrl
mov
adc
mov
aad
pop
pop
xchg
cmc
out
cmc
aad
stos
mov
into
mov
or
mov
adc
jae
cmpsb
pop
mov
pop
lods
jmp
mov
out
mov
int
or
fcoms
and
cmp
lahf
std
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
jmp
sbbl
das
je
je
stos
push
push
cmp
cmp
pushf
popa
add
ja
add
and
adc
push
sub
shrb
cmp
mov
mov
and
aad
cmp
idivb
vpsubusw
in
mov
popa
jnp
outsb
inc
jae
xor
xor
xchg
push
mov
addl
pop
shll
cmp
arpl
sub
mov
add
sub
sbb
in
mov
and
or
dec
ds
pushf
push
nop
fisubs
cltd
xor
cmp
pop
out
lods
xor
out
rorb
sbb
fstps
jo
scas
out
and
mov
addl
fdivrs
push
scas
or
daa
cmpsb
sub
push
push
arpl
pop
lea
pop
or
dec
ret
cmp
pop
push
fstl
cmpsl
movsl
push
movsl
push
xlat
ss
sub
int
add
mov
outsl
cli
mov
inc
clc
mov
out
lock
and
shrb
int3
sub
jne
out
pop
das
mov
loopne
inc
neg
mov
fs
add
iret
icebp
pop
sub
jno
adc
cmp
sub
je
jmp
and
nop
mov
jp
fsubrl
xorl
xchg
stc
push
sub
pop
insb
sahf
out
cmp
aas
dec
loop
js
movaps
cltd
cmpsl
cmpsb
xor
fistps
ja
call
in
add
and
insl
stos
aad
jnp
adc
dec
sbb
punpcklbw
shrb
std
ds
fimull
das
lahf
push
test
stos
in
or
addb
sub
hlt
sub
pop
ja
sub
ret
nop
mov
mov
or
lcall
jb
and
sbb
inc
in
daa
jmp
out
insb
push
push
inc
push
xchg
loope
adc
or
gs
mov
mov
aas
xor
sub
arpl
leave
inc
mov
testl
fwait
xchg
mov
loope
mov
enter
cmpsb
imull
jo
sbb
pop
push
je
cmp
mov
adc
inc
xor
pop
jmp
push
mov
lahf
fnstenv
fcmovu
adc
popf
popa
jb
lret
jno
js
lds
cmpsb
lret
out
aad
pop
into
imul
ljmp
adc
sub
sub
mov
rcrl
adc
mov
mov
mov
push
xchg
cmp
inc
fmul
roll
mov
lret
call
push
adc
gs
push
leave
jl
js
inc
adc
xor
pushf
mov
and
mov
pop
adc
xchg
leave
jae
mov
add
cmp
xchg
fisubs
outsb
fcomps
jg
icebp
sbb
mov
fimull
pushf
cwtl
pop
sub
xchg
xor
fst
mov
mov
test
outsb
arpl
imul
xchg
inc
lret
xchg
mov
pop
pop
adc
mov
push
pusha
stc
inc
or
ja
bound
xor
scas
aaa
and
cmpsb
gs
xor
enter
push
pop
sarl
repz
std
mov
mov
mov
sbb
jnp
pop
adcb
dec
cs
sahf
push
mov
mov
insl
mov
aaa
mov
stos
outsl
sbb
jge
stc
jne
or
lcall
dec
adc
inc
push
iret
pusha
ds
mov
xchg
jge
xchg
mov
outsb
push
aam
sti
push
inc
loope
clc
rcll
movsl
in
jb
cmc
push
jns
aam
cs
scas
dec
mov
inc
stos
std
call
push
andl
stos
xchg
mov
in
ret
fwait
leave
push
ficompl
push
inc
mov
jno
enter
and
or
popf
stos
out
cmp
mov
jno
fcompl
mov
mov
imul
xchg
pop
fwait
pushf
rorb
mov
mov
mov
popa
repnz
int3
imul
push
push
pop
add
pop
inc
stc
mov
clc
push
shrb
or
inc
mov
test
mov
cld
loope
daa
out
pop
inc
sub
sub
mov
mov
mull
imul
or
repz
je
loop
inc
jmp
sbb
cmpsl
sub
rclb
push
in
imul
fildl
les
adc
mov
sub
mov
bound
pop
lahf
jb
dec
add
jo
xlat
cmpsb
dec
mov
jge
adc
nop
aam
xor
mov
lods
iret
sti
pop
or
les
jp
cs
lahf
or
stos
mov
sahf
aaa
and
lret
mov
lds
mov
dec
jb
arpl
orb
loopne
mov
or
mov
cmp
je
mov
sub
mov
mov
mov
jmp
push
cli
test
fs
pop
jb
shrl
sub
push
push
mov
push
out
bnd
lods
sbb
or
mov
push
roll
test
xchg
push
sub
xor
sahf
clc
push
jp
repnz
sub
and
mov
xchg
subl
loopne
mov
out
and
orb
mov
adc
mov
jg
mov
notl
mov
pusha
lock
mov
out
outsb
enter
rdpmc
rcll
lods
adc
arpl
mov
loop
mov
sbb
enter
lcall
mov
mov
arpl
adc
push
aas
cmp
push
lods
loop
loopne
into
mov
cli
cmp
push
cmp
arpl
pop
inc
js
push
pop
pop
jge
js
ret
mov
cmp
jecxz
addl
push
jns
jo
inc
aam
sub
push
sbb
leave
sub
sbb
daa
mov
scas
inc
dec
popa
mov
adcb
jge
push
mov
jp
cli
repz
pushf
call
and
adc
jg
pushf
rcrl
inc
rclb
icebp
jge
add
or
js
or
mov
out
popa
cli
dec
test
add
call
mov
xchg
rclb
pusha
jns
xor
push
lods
pop
cmp
push
pop
loop
xor
rorl
pop
cmp
mov
dec
movsl
sub
jne
popa
cmp
pop
insb
mov
cwtl
jecxz
pop
lret
mov
inc
jg
cwtl
ljmp
adcl
test
movsb
xchg
xchg
test
scas
movsb
repz
and
aas
dec
in
jge
imul
rcrb
psraw
pusha
mov
push
dec
xchg
incb
add
scas
adc
inc
push
test
xchg
addb
mov
andb
movsb
in
stc
ss
jb
dec
daa
sbb
stos
cld
or
xchg
popf
int
adc
ret
leave
or
rcl
sub
and
lahf
inc
pop
sbb
fadds
cmpsb
subl
mov
movsb
jge
jp
loope
pop
or
scas
sub
shrb
xor
addr16
xchg
push
imul
push
lret
call
and
xor
cmc
scas
dec
push
mov
arpl
test
pop
jns
outsb
fs
scas
inc
adcb
mov
mov
xchg
sub
dec
pop
cmc
repz
test
jle
dec
xlat
hlt
fisubl
fiaddl
jo
sub
cltd
cmp
test
jns
lahf
cmpsb
iret
outsw
xchg
fs
or
push
push
imul
into
movsb
mov
inc
mov
pushl
sbb
xchg
repz
hlt
sbb
insb
mov
jo
es
mov
je
lcall
add
jmp
dec
nop
cmp
add
scas
sub
jecxz
jno
xorb
rclb
cld
aas
repnz
outsb
dec
stos
cld
jecxz
inc
out
and
loopne
and
out
cmp
adc
aam
mov
mov
jge
pop
or
into
sub
fstpl
rcrl
fcmovnbe
dec
push
xchg
xchg
xchg
dec
adc
lock
gs
mov
jl
in
in
insb
inc
lret
mov
fistpl
xor
lods
fisubrl
and
jecxz
cmp
fmul
sarb
sbb
orl
and
mov
clc
mov
insb
push
pop
inc
es
cmp
aas
into
stos
ret
push
lods
pop
mov
dec
and
cmp
push
stc
push
std
jne
and
jbe
xor
mov
mov
fadd
sub
fcoml
adc
jg
scas
rcrl
ljmp
or
scas
shl
imul
jge
je
jbe
mov
cmc
adcb
add
mov
ss
nop
push
lods
lret
xchg
lret
aaa
or
leave
inc
orl
enter
iret
call
push
jecxz
jg
xor
movsl
cmpsl
int3
cmpsl
imull
dec
or
shll
cltd
nop
aas
cs
xchg
adc
lods
nop
inc
adc
jle
adc
add
roll
mov
lock
lret
or
test
cmc
test
sbb
test
insl
jb
insl
push
rclb
das
cmpsl
pop
cwtl
subl
inc
data16
std
lock
push
gs
mov
and
ror
mov
and
push
test
iret
or
fldt
rol
cmp
pop
mov
daa
mov
imul
lret
cmp
lret
cmp
pop
xor
push
fisubl
test
stos
jbe
jl
mov
push
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
jmp
sahf
or
jp
cmp
sub
mov
adc
test
xchg
push
push
cmp
dec
in
adc
shl
cltd
mov
and
loope
lods
xor
outsb
stc
cld
dec
add
cltd
or
add
scas
test
lahf
push
sbb
jns
loopne
in
and
mov
es
add
sub
adc
mov
sbb
test
ror
jns
cld
mov
fidivrs
fstpl
cli
adc
sub
nop
inc
sub
cmp
mov
cmc
lcall
filds
dec
push
rclb
xchg
popf
repz
pop
ljmp
popa
or
dec
mov
mov
sahf
mov
rclb
fidivl
dec
sub
sub
out
xchg
and
imul
or
push
ja
push
and
cmp
iret
dec
jl
push
inc
mov
or
enter
cld
mov
loop
repnz
or
dec
xor
inc
mov
ja
ja
and
insl
and
push
std
jl
adc
push
lock
lcall
pop
pop
mov
xchg
and
xchg
mov
pop
fdivl
pop
je
fwait
addl
lock
jge
pop
insl
or
sub
jns
je
jmp
in
xor
fs
std
ds
ret
subl
jne
aaa
cmpsl
cmp
or
xor
push
insb
pop
xchg
outsl
push
xchg
movsl
stos
das
das
stos
or
push
push
cmpsb
mov
loope
xchg
adc
fcoms
sub
push
sahf
fsub
sti
shlb
fcoml
fidivs
adc
lcall
jbe
jo
add
arpl
mov
jecxz
pop
sbb
mov
out
pop
xchg
add
ficomps
sbb
inc
arpl
fwait
sbb
or
xlat
stos
and
std
or
int3
out
dec
dec
pop
adc
mov
inc
movsb
imul
or
movsb
jg
lods
add
xlat
loop
mov
cld
mov
ds
insb
jno
pop
mov
xor
and
jecxz
pop
lock
stc
imul
mov
decb
sub
xor
pop
cwtl
xchg
pop
jns
ds
cwtl
fsubs
jne
dec
and
test
pop
bound
notl
fmuls
outsb
leave
pop
inc
cmpsb
repnz
xchg
out
iret
add
jl
scas
inc
dec
xchg
add
cmp
dec
sub
jns
mov
imul
add
add
mov
jne
lea
push
lahf
jno
clc
js
sub
call
jno
and
int3
addr16
jle
jno
pop
divb
int
int
dec
pop
push
cli
sbbb
pop
mov
jl
cld
std
pop
enter
les
rol
xchg
add
jb
push
lahf
inc
jp
sub
push
xor
cmp
out
scas
xorl
gs
cmp
in
adc
ja
or
aam
xchg
dec
pop
mov
fldt
test
adc
out
and
dec
mov
in
pop
jb
dec
aas
mov
lea
xchg
add
loop
pop
xchg
dec
xor
outsb
pop
or
or
mov
dec
cmp
fldt
adc
test
xchg
in
jge
adc
dec
pusha
orb
outsb
push
movl
enter
add
cmp
mov
mov
out
in
movsl
push
push
popf
dec
or
lock
insb
push
xchg
jno
jns
mov
cli
cmp
mov
enter
push
lods
mov
or
out
cmpsl
sbb
inc
cmp
sbb
cmpb
leave
push
in
mov
pop
mov
sbb
mov
daa
in
in
stos
in
bnd
pop
addr16
negb
xor
fsubrs
or
sbb
cmp
add
and
push
push
inc
or
ret
andl
repz
add
mov
in
jnp
out
repnz
cmp
xchg
jge
ret
in
xchg
dec
inc
pop
bound
daa
rcll
dec
lcall
arpl
stos
mov
sbb
mov
in
jl
push
loope
mov
hlt
mov
mov
daa
out
rcrb
xchg
leave
sub
ds
out
adc
mov
push
cli
dec
mov
sub
jne
xchg
scas
cmp
mov
mov
shrb
stos
dec
jl
fcoms
jp
popa
in
fsts
cmp
pop
ja
dec
dec
mov
cmp
popa
or
stc
push
outsb
jbe
push
ret
cltd
jns
xor
into
out
popa
jmp
orl
insb
imul
inc
movsl
arpl
popf
ret
lret
and
or
dec
or
jg
jmp
sarl
mov
push
mov
out
lcall
fstpl
fisubs
push
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
jmp
and
adc
xor
mov
pop
mov
mov
push
cmp
jns
out
addr16
mov
push
idiv
lahf
cmp
add
aam
jmp
adc
pop
push
cld
push
rorl
mov
sarl
xor
pop
sub
mov
adc
bound
jb
sub
stos
out
jb
or
andb
ljmp
loop
jle
xchg
or
mov
cmc
sub
pop
mov
mov
cmp
pushf
xor
jg
fcomps
xlat
aam
arpl
psraw
xchg
inc
sbb
arpl
cmpsb
cwtl
push
pop
dec
push
sbb
int3
ret
pop
mov
fcomp
sbb
mov
das
add
sar
pop
and
test
jl
adc
mov
cltd
leave
sarb
jg
ficoms
or
push
scas
mov
lods
pop
push
or
aaa
sbb
and
stos
imul
std
lret
jae
dec
add
and
in
fiaddl
xchg
sub
inc
es
inc
sbb
fucompp
and
mov
shrl
dec
loope
sub
add
sub
insb
push
gs
lcall
outsb
sub
jmp
push
popa
imul
sbb
inc
stos
push
shlb
out
xchg
out
push
inc
and
push
aad
jge
mov
sbb
xchg
orb
arpl
xor
jnp
fisubs
ret
inc
rcl
test
or
dec
clc
vpmaxsw
daa
js
mov
mov
xchg
cwtl
or
ss
cmpsl
bound
mov
scas
cmpl
jmp
test
popf
xlat
sbb
sbb
xlat
add
xor
sub
cs
cld
cmp
sbb
mov
sub
mov
les
insl
add
out
lret
out
or
dec
js
stos
xchg
or
mov
pop
ljmp
dec
xlat
add
decb
inc
rclb
jecxz
jne
jge
inc
sbb
ja
popa
xlat
and
add
xchg
sti
push
dec
ret
lods
add
jo
stos
dec
into
cli
mov
add
fs
je
sbb
outsl
cmp
in
mov
add
inc
push
sub
outsl
arpl
push
out
fsubrp
dec
test
ficompl
jno
adc
out
mov
dec
daa
lds
fisubrl
test
hlt
add
out
aas
scas
movsl
cmp
test
and
out
mov
dec
rclb
push
out
push
sub
xor
ds
aad
iret
jmp
mov
jbe
test
and
es
xor
cmp
inc
mov
xor
dec
ds
in
sub
cmp
sub
scas
movsb
jmp
pusha
pop
adc
jmp
insl
aas
xor
lods
sbb
sub
adc
xor
cmpb
inc
aam
out
mov
inc
cmpsb
add
and
fucom
sbb
sbb
cmpsl
xchg
push
sub
sbb
inc
sbb
xlat
imul
test
aaa
imul
and
jno
pop
mov
adc
lea
add
sub
xor
sar
jb
add
dec
dec
mov
scas
sub
inc
icebp
xchg
cwtl
sub
fs
cli
das
mov
jmp
test
jns
sub
cmp
xchg
hlt
movsb
fwait
cld
int
jo
and
inc
shr
out
or
gs
inc
js
xchg
faddp
in
jecxz
clc
sbb
mov
xor
cmp
stos
adc
sub
jo
xlat
or
imul
xchg
push
adc
cmp
les
or
andl
das
xchg
mov
and
popf
cmp
add
rorb
out
ja
cmp
js
insb
or
mov
stos
dec
pop
fsubrl
insl
scas
cmpb
mov
out
jno
cmp
aaa
jg
lcall
into
xor
int
pop
sub
pop
cmpb
adc
sysret
and
lea
stos
mov
xchg
and
push
cwtl
mov
test
mov
mov
mov
jmp
jno
jno
rcl
cmp
cmp
pop
adc
sub
xchg
add
ds
inc
sub
in
lret
scas
mov
cmp
fdivr
movsl
repz
popf
das
dec
cmp
idivb
stos
mov
scas
or
out
add
cmpsl
jg
lock
xchg
std
ret
fiaddl
fadd
cmp
pop
repz
js
mov
jns
cmp
cmpsl
and
fucom
adc
xor
xor
dec
mov
fs
mov
add
xor
adc
fwait
jb
aas
sarl
or
mov
adc
sub
adc
aam
aad
fs
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
jmp
mov
jle
sub
insb
cmpsb
outsb
mov
push
push
cmp
pusha
add
repnz
hlt
dec
in
pop
scas
jecxz
in
add
mov
jns
pop
push
mov
ljmp
gs
add
popa
lock
call
sbb
inc
or
jmp
mov
mov
insb
pop
push
sub
scas
jg
ror
in
lea
out
adc
or
mov
movsb
jl
lods
jp
movsl
or
call
lret
mov
sti
dec
addb
lcall
adc
and
outsl
rorl
out
cmp
cmpsl
cltd
mov
scas
xchg
cmpb
or
out
mov
iret
push
ficomps
push
or
adc
push
scas
arpl
xchg
aas
adcb
inc
in
or
mov
es
ja
popf
mov
test
imul
repnz
fnsave
mov
enter
and
aaa
std
mov
xchg
mov
arpl
sti
decl
dec
ss
jnp
notb
push
sahf
push
rolb
in
lock
add
decb
scas
jbe
xor
sub
cmp
hlt
and
cmp
mov
mov
cwtl
jmp
add
and
cmp
pushf
jb
add
xchg
fcoml
lea
aad
pushf
mov
pop
outsb
lcall
add
cs
cmp
ja
push
mov
mov
mov
fdivl
inc
adc
pop
in
lods
xchg
sti
adc
loop
mov
cmp
sub
or
mov
aad
pop
add
mov
test
out
and
fisubs
jmp
mov
jmp
ds
inc
lods
popf
sarb
test
aas
fwait
xchg
pushf
jge
cld
movhps
outsb
jmp
and
mov
push
inc
mov
bound
cmp
outsb
or
les
scas
lret
and
jecxz
out
cld
sbb
mov
cmpsb
and
mov
push
ja
mov
das
push
xchg
test
mov
xor
add
mov
push
and
stc
jl
xor
enter
shl
mov
call
daa
fwait
cmc
jecxz
andb
xor
cmp
popf
mov
mov
add
aam
cmp
call
aas
push
fisttpll
movsl
add
lahf
push
sub
mov
mov
cli
jecxz
jmp
aad
adc
push
out
mov
repz
dec
xchg
dec
add
mov
mov
in
sub
adc
stos
enter
mov
call
xchg
popf
outsl
mov
stos
pop
test
mov
jp
test
outsl
sub
xor
icebp
gs
das
shll
inc
lea
push
movsb
into
push
adc
push
xchg
cld
fstpt
inc
gs
xor
repz
adc
call
out
ja
xorb
xchg
jae
push
repz
xlat
outsb
sbb
jno
mov
in
imul
or
aas
rep
xor
mov
leave
mov
inc
pop
pop
ret
fmuls
test
frstor
roll
stos
wrmsr
lahf
sbbb
push
and
into
loopne
cwtl
dec
push
cmpsb
dec
pop
lods
js
ljmp
fistps
and
or
fwait
lret
stos
lahf
sbb
in
int
mov
nop
push
inc
jmp
test
jo
repz
les
mov
xchg
sti
inc
lret
lret
sbb
dec
imul
dec
daa
push
jp
mov
cltd
gs
xbegin
lods
cltd
pusha
sub
rorl
pop
pop
stos
pop
jl
cmpsl
push
jmp
data16
rcll
stos
jbe
test
das
mov
aam
sub
out
or
das
mov
add
inc
push
add
adcl
pop
cmp
xor
and
cwtl
push
enter
mov
xchg
inc
stos
icebp
out
movsb
out
adc
xchg
jns
cmp
nop
jp
inc
mov
fimull
cli
sub
stos
out
pushf
push
xchg
ss
push
xchg
jge
sub
push
add
add
shll
and
imul
fisttps
inc
aaa
cmpsl
dec
push
inc
lds
lods
pop
mov
aam
sub
adc
pop
cmpsl
add
xchg
dec
sahf
add
push
jmp
mov
cmp
movsb
mov
adcb
push
sub
jo
test
jns
filds
adc
pop
push
lret
lret
cld
repz
daa
shlb
movsb
mov
cltd
scas
mov
imul
js
xchg
cmp
aaa
rcll
jecxz
testb
fwait
cmp
sbb
shrd
mov
mov
xor
shr
mov
jmp
inc
jecxz
sbb
sub
mov
mov
push
push
cmp
mov
icebp
xchg
pusha
sarl
xor
xchg
outsb
mov
add
hlt
je
popa
pushf
lret
dec
gs
mov
pop
test
pop
jns
insb
sbb
jge
cmp
and
dec
stos
dec
nop
xor
in
pop
in
xchg
ljmp
ja
xor
test
pusha
pop
popl
add
es
movsb
test
test
adc
xchg
int
lds
push
add
mov
jg
push
or
fistps
mov
cmp
push
xchg
dec
mov
fldt
sub
add
rorl
test
ret
mov
xchg
addr16
rcll
into
fldl
or
loopne
outsl
adc
fbld
addl
mov
test
jo
jnp
in
jbe
mov
mov
sub
popa
jnp
pop
daa
cltd
decl
into
mov
and
lds
outsb
lock
xchg
jb
movsb
insl
ss
jo
sub
test
cmp
jmp
xor
outsb
cmp
cmp
ret
and
jns
imul
or
or
nop
dec
pusha
or
mov
dec
mov
add
pop
imul
sub
dec
xchg
data16
imul
es
push
push
in
sub
fimull
ret
lods
add
cltd
negb
jmp
sahf
add
test
insl
clc
or
mov
mov
notb
lock
xor
int
inc
movsl
pop
mov
mov
xor
inc
outsl
outsl
stos
or
lds
add
shlb
xor
mov
test
sbb
add
cmc
lea
data16
xchg
mov
testl
stc
mov
or
mov
out
xchg
jg
arpl
mov
ret
pop
sahf
xchg
push
jb
inc
push
sbb
or
aam
gs
jp
das
loope
cmc
mov
clc
xor
daa
mov
adcl
add
xlat
insl
inc
mov
xchg
cmp
std
fnsave
xchg
negb
andb
pop
scas
je
pop
es
push
jns
mov
rorb
js
sbb
shlb
in
in
sub
xchg
sbb
clc
dec
add
jg
fdivr
cs
xor
inc
jo
mov
call
dec
aam
jb
dec
icebp
mov
mov
push
in
push
out
mov
mov
adc
dec
mov
and
cwtl
mov
push
xor
jo
repnz
or
std
cmp
push
mov
mov
rorl
imul
sub
daa
pop
mov
lret
pop
jmp
pop
add
and
test
cltd
sbb
test
mov
push
test
and
icebp
xchg
cmp
push
adc
mov
xchg
dec
sub
pop
mov
mov
xchg
popa
and
mov
dec
clc
lret
cltd
pop
pop
outsl
mov
std
xchg
clc
or
insb
jnp
mov
inc
mov
ret
mov
add
push
scas
mov
pop
test
pop
mov
sbb
mov
cmpsl
out
fldt
jmp
and
movsb
fcomps
das
push
movsb
jg
add
xchg
inc
and
shll
mov
sti
nop
inc
or
cmp
pop
mov
or
popa
enter
xor
inc
jo
mov
dec
call
fisubrs
push
xchg
mov
test
and
lahf
lock
es
mov
mov
mov
cmp
cmp
cmp
pushf
cmpsb
iret
mul
dec
std
sti
out
cmp
push
jnp
fbstp
sbbb
out
sub
sbb
mov
xchg
sti
sti
stos
xor
cmpsb
sub
loopne
popf
aam
rorb
push
or
sbb
clc
mov
and
xchg
xor
sbb
fstps
in
ret
jns
add
mov
fbld
pop
test
insb
test
cmp
outsl
xchg
insl
data16
icebp
and
lods
lea
out
xor
xlat
or
or
sbb
faddl
in
jl
sub
rcrb
sbb
adc
sbb
sub
lahf
arpl
outsl
push
xor
sub
popf
js
pop
ror
inc
into
push
adc
scas
roll
imul
jmp
xchg
lret
dec
gs
push
aad
mov
and
repz
popa
cs
push
scas
scas
iret
sti
int
je
fucomp
inc
cmpsl
cmp
jb
xor
mov
mov
mov
into
mov
adc
ret
adc
or
dec
mov
inc
bound
paddb
xor
cmc
mov
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
jmp
shlb
and
and
test
arpl
test
push
push
cmp
test
adc
inc
stos
sbb
shlb
aas
cmc
cmpsl
jbe
pop
out
inc
aad
scas
sub
jp
nop
sbb
xor
jge
shrb
pop
xchg
sarb
push
cld
shlb
push
jb
movlhps
ljmp
popf
mov
call
sahf
aas
loopne
cli
divl
mov
and
xchg
data16
xor
pop
xchg
cmovns
lret
lds
push
rclb
dec
inc
inc
adc
cmp
ljmp
dec
push
ret
jno
loope
dec
clc
sti
addr16
cltd
mov
push
adc
js
incb
xor
push
xchg
data16
inc
add
pop
mov
std
inc
xchg
jb
pop
pop
push
sahf
outsb
xor
sub
into
xlat
test
mov
insl
test
movsl
jne
push
popf
cmp
mov
xchg
imul
adc
sarl
jbe
or
or
ljmp
add
popa
test
js
leave
dec
push
cmp
out
jecxz
sub
shl
out
imulb
xchg
sbb
mov
outsl
call
mov
fisttpl
das
mov
xchg
xchg
cwtl
hlt
out
iret
adc
pop
popf
test
inc
push
in
popa
out
out
movsb
mov
jmp
out
popf
popa
test
test
push
dec
scas
call
xchg
sub
sub
sub
out
cmc
adc
out
push
sbb
pop
jns
fsubs
in
mov
pop
repnz
jnp
out
loope
mov
cmp
pop
fidivrs
adc
cld
rcr
add
icebp
movsb
sub
mov
dec
or
lds
mov
shlb
addr16
sbb
es
add
adc
xchg
bound
mov
push
lds
pop
ds
jb
imul
or
inc
out
in
je
es
sbb
push
test
or
and
movsl
js
or
mov
xor
mov
mov
mov
stc
mov
das
lods
jle
rorl
xchg
dec
insb
stos
jo
test
scas
mov
pusha
mov
xchg
test
sar
arpl
xor
and
adc
out
das
clc
mov
lock
repnz
fldl
fs
mov
mov
xchg
and
std
adc
xor
loope
sahf
jb
inc
xchg
rorb
ret
inc
rclb
sbb
jbe
mov
sahf
jg
ljmp
shlb
dec
xor
lods
push
insb
sbb
jge
push
dec
outsl
mov
cmpsl
jle
mov
js
ss
lea
int3
adc
sbb
push
cmp
sub
jmp
stc
ljmp
out
add
fcomip
cltd
jmp
loopne
cmp
shlb
inc
mov
sub
int3
cld
lret
sahf
sbb
pop
inc
sub
mov
adc
mov
addr16
out
and
stc
imul
xor
std
mov
aad
shll
into
mov
xchg
mov
fxam
inc
mov
mov
lea
xor
ret
out
adc
xor
ljmp
adc
addr16
in
fstl
movsl
xor
and
xchg
dec
pusha
mov
xchg
and
or
movsb
jb
jb
xchg
in
xchg
iret
cmpsl
iret
dec
imul
ret
pop
popf
sbb
sahf
xchg
fucomp
jne
mov
mov
fwait
imulb
mov
repnz
sbb
out
add
pop
push
cld
xor
mov
aam
adc
sub
cltd
movsb
inc
out
icebp
imul
mov
mov
mov
pop
aaa
cmp
in
pop
sbb
ss
xchg
jmp
jns
sub
xchg
sbbb
lahf
sbb
sub
out
int3
adc
movl
xchg
adc
mov
mov
cmpsb
scas
mov
inc
mov
jb
cmp
xor
sub
fisubrs
sbbb
icebp
orb
iret
push
in
mov
mov
push
outsl
sbb
stos
imul
sbb
xchg
cli
into
into
push
outsb
aad
in
cmpl
push
jo
dec
mov
shrb
jmp
fld
push
and
out
les
push
jo
jmp
and
fadds
stos
cmp
xchg
sahf
and
pushf
popa
repnz
fcmovnbe
repz
shll
subl
daa
fs
add
hlt
fisubs
mov
in
mov
mov
xorb
dec
cltd
inc
imul
test
iret
addr16
mov
or
pusha
out
jg
mov
or
ja
jns
jno
sub
sub
daa
je
mov
jne
mov
icebp
push
adc
ljmp
add
xchg
pop
sub
rorl
test
push
add
mov
mov
mov
mov
mov
jmp
shr
ror
shlb
loopne
mov
sub
inc
pushw
push
cmp
dec
out
inc
or
push
mov
or
fildll
incl
insl
mov
xor
xchg
push
stc
dec
push
aaa
std
inc
cmp
mov
xchg
jmp
je
int
xchg
daa
daa
fs
cmc
ficoms
divl
lods
sub
call
push
ds
dec
clc
leave
sbb
sub
ret
test
push
sahf
sub
cwtl
bound
pop
in
push
sbb
xchg
je
add
outsb
lahf
jno
add
and
pop
int
sarb
sahf
fwait
xchg
and
mov
or
jmp
dec
lahf
push
je
and
push
or
adc
out
mov
leave
push
fimull
insl
lea
dec
mov
lock
mov
in
jbe
adc
mov
mov
and
jmp
push
int3
adcb
out
adc
sub
and
or
or
lahf
icebp
les
jno
sbb
test
jb
inc
and
lret
cmp
movsl
xor
lock
sbb
dec
add
xchg
jge
inc
sub
adc
shl
out
jb
sub
aam
imul
pop
xchg
dec
inc
leave
ja
jno
sub
loop
rorb
loopne
adc
cmpsl
xchg
das
dec
jle
xor
jg
jo
imul
fbld
cmp
inc
inc
pop
mov
es
or
imul
adc
mov
pop
out
ss
jl
xchg
xor
arpl
mov
jecxz
push
cs
cwtl
popa
xchg
and
xor
cmpsl
cld
inc
xchg
stos
mov
movsb
hlt
idivl
push
mov
xchg
mov
jns
fwait
sysenter
lods
jae
cltd
pop
push
nop
inc
dec
jno
push
movsb
inc
insb
mov
rcrb
repz
mov
addr16
jl
jg
lods
aam
shr
add
subl
add
mov
mov
cmp
sar
arpl
jmp
outsl
jp
xor
lds
test
cmp
mov
fcom
push
pop
cmc
xorb
and
inc
shl
cwtl
add
pop
test
inc
les
fs
movsb
and
push
mov
push
pop
sahf
jns
rcrb
and
mov
inc
sub
sbb
sub
inc
fildl
ret
sti
mov
fs
ds
xor
daa
or
adc
mov
fsubrp
lret
das
cs
mov
xor
pushf
cli
inc
push
push
cmpsl
push
dec
and
pusha
jnp
testb
andl
inc
into
rcrl
aad
pop
cmp
mov
imul
jns
xor
add
dec
aaa
pop
adc
push
cmp
adc
jno
or
cmp
add
outsl
fists
mov
add
pop
bound
dec
xchg
aaa
sti
into
sbb
pop
in
addl
cltd
imul
dec
push
pop
fwait
cmp
mov
cmp
adc
stos
faddl
loopne
test
dec
adc
cs
inc
jns
mov
jnp
xor
mov
push
int3
jmp
jmp
xor
jl
jg
sub
xchg
pop
rorb
fwait
mov
mov
cltd
mov
mov
pop
imul
or
mov
adc
in
push
pop
adc
add
mov
xlat
adc
fidivrs
leave
adc
sub
int
fwait
and
leave
sub
inc
pop
popf
test
mov
mov
cmp
push
cs
pop
adc
xchg
cmp
in
cmc
test
mov
arpl
out
xor
gs
ss
push
push
mov
xor
movb
and
pop
pop
jmp
sub
xchg
and
fwait
adc
in
pop
outsb
sbb
sbb
je
pop
mov
scas
dec
nop
shll
loopne
ficoml
inc
mov
push
or
pop
int3
mov
ret
inc
push
sub
fwait
outsb
fdivrs
lods
cld
ret
jmp
push
pop
inc
or
inc
mov
push
vphaddbd
push
cmp
leave
imul
rcr
sbbl
jge
xchg
jmp
cmp
test
mov
fsts
icebp
enter
dec
and
mov
or
inc
xchg
pop
dec
cmpsb
mov
adc
lret
lcall
cltd
int
sahf
in
lcall
jmp
mov
sub
jne
loop
push
cmp
dec
inc
out
push
jg
jne
xor
push
mov
xor
out
lcall
cvtpi2ps
rcrl
xor
addl
lret
cmp
pop
rcrl
fbstp
adc
push
mov
sarb
jo
stos
cmpsb
push
cli
fs
fldt
dec
jno
dec
mov
into
xor
shl
mov
jmp
mov
adc
sbb
cmp
jne
es
inc
shrb
add
push
xor
subl
sarb
pop
es
orl
cwtl
scas
popa
rorb
lods
in
cmp
mov
cmp
push
pop
dec
xor
call
insl
subl
jecxz
or
ret
into
xchg
mov
into
fwait
push
scas
clc
test
es
adc
in
in
mov
pop
mov
fs
jge
xchg
dec
mov
out
out
add
aas
rolb
cmp
js
dec
mov
xor
xchg
ror
and
pushf
mov
mov
ljmp
push
push
lods
xor
fstps
mov
int3
cmpsl
fwait
inc
test
out
mov
out
bnd
insb
pop
cmpsl
mov
sarl
stos
fmul
adc
iret
or
out
inc
sub
or
pop
stc
out
iret
adc
movb
notl
movl
jl
outsl
sub
loope
fldl
scas
mov
rcrl
inc
ja
inc
sahf
cld
dec
mov
mulb
lds
jge
add
movsl
cld
sbb
pop
add
ja
in
and
add
mov
pop
xor
pop
mov
popa
add
pop
fsubrs
in
ret
daa
dec
push
testb
mov
inc
and
popa
hlt
push
push
repnz
sub
mov
xchg
andl
fstl
sub
subl
call
test
xchg
xlat
xor
addr16
in
adc
xchg
rcrb
stos
pop
add
lret
int3
stc
insb
movsl
mov
push
or
and
push
loope
adc
je
adc
dec
or
lds
cmp
addr16
jge
dec
cmp
and
addr16
and
mov
pop
add
cld
and
sbb
jbe
aas
arpl
lea
bound
jg
pop
cli
xchg
xchg
in
rcrb
rorb
pushf
xchg
ja
inc
testb
xor
or
and
add
vandnps
fisttpll
clc
cmc
add
push
add
mov
sbb
sahf
inc
dec
and
mov
lock
sub
mov
push
jl
sub
push
mov
xchg
aaa
cld
shl
push
std
loop
clc
data16
les
stc
and
add
jmp
add
push
movsl
xchg
dec
and
jg
sbb
and
pop
fimull
fs
mov
cmp
int3
sub
mov
mov
xor
pop
mov
and
xor
sar
push
sbb
outsb
sbb
lret
sti
mov
rorb
add
xchg
stos
popf
pmulhw
mov
aad
mov
dec
mov
stc
pusha
mov
in
dec
je
mov
dec
mov
repnz
popa
ja
sub
add
sti
xor
dec
push
xor
outsl
testb
pop
cmp
dec
mov
movsb
xlat
scas
sbbl
xchg
addb
and
and
push
iret
insb
sub
ret
mov
push
fnsave
adc
pusha
mov
nop
dec
push
mov
mov
sub
pop
loopne
inc
es
mov
std
adc
inc
sub
shl
les
push
gs
les
fisttpll
sti
cmp
sbb
test
loopne
push
sbb
pop
jnp
movsl
add
lea
jae
test
lret
pop
cld
ds
cmc
mov
cmp
shlb
xor
lret
jmp
mov
repnz
popl
fstp
enter
mov
push
mov
xchg
inc
fnstcw
mov
cmpb
mov
ljmp
in
ljmp
mov
addr16
outsb
imul
lea
cltd
scas
push
and
in
test
xchg
mov
cwtl
add
xor
mov
scas
les
lahf
or
fisttpll
into
or
mov
mov
mov
adc
ficoms
add
rclb
dec
ret
pop
push
jmp
sbb
xor
pop
or
add
mov
sbb
inc
xchg
enter
fildl
add
out
push
cmc
mov
pop
out
idivb
jnp
into
shll
cmp
adc
arpl
lds
inc
daa
sti
sbb
fistpll
test
clc
in
fnstcw
jo
stos
test
movsl
cmpsl
sahf
jecxz
cmp
xor
push
cltd
push
cmpsb
std
aas
inc
pop
fdivl
xor
xchg
aas
xor
stos
jae
xor
mov
fcmovnb
mov
xor
fisttpll
mov
out
fs
frndint
out
int
add
dec
in
rorb
mov
jmp
push
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
jmp
ret
and
cmp
outsb
push
jecxz
je
push
push
push
cmp
test
in
adc
push
and
dec
call
sbb
jb
sbb
shrb
jns
xor
or
xor
push
push
pop
out
add
dec
fstps
jo
sti
rcll
xor
rcl
adc
mov
adcb
call
xchg
dec
das
mov
pop
dec
lcall
add
lahf
add
pop
negl
sub
and
mov
dec
add
mov
sbb
mov
inc
jb
or
sub
dec
push
pop
pop
push
pop
stc
test
imull
pop
std
adc
sbb
push
bound
jo
inc
jae
xor
insl
dec
jp
xchg
loop
lock
push
andl
push
cmc
jnp
pop
inc
stc
daa
xchg
mov
mov
insb
push
pop
jge
dec
out
aaa
inc
dec
pop
rol
ljmp
xlat
xchg
lds
call
repz
cld
cwtl
pop
mov
inc
je
ss
fidivl
push
pop
ret
andb
and
dec
ret
lahf
dec
loope
push
shrl
xor
and
mov
repz
pop
sbb
push
inc
stc
out
cli
dec
xchg
lods
lret
inc
push
pop
pop
xrelease
push
mov
xchg
mov
int3
cmpl
test
mov
test
mov
mov
lahf
push
pushf
mov
lods
les
inc
jg
ror
inc
dec
divb
loopne
stos
pop
sbb
push
push
popf
push
xor
ja
jno
pop
hlt
jno
push
xchg
imul
nop
add
mov
int3
cmp
and
imul
mov
inc
stos
jns
sbbb
negl
scas
fstpl
mov
cmp
xchg
pop
aas
pop
dec
cmp
ret
pop
sbbb
jecxz
push
cmpsb
adc
in
aam
stos
dec
or
scas
test
jmp
aas
adc
or
test
shll
add
push
insb
xchg
cmpsb
or
fwait
push
rcrl
mov
dec
xor
mov
sbb
pop
xchg
int3
push
xor
adc
push
xor
xchg
dec
cltd
bound
lahf
lea
or
ret
dec
in
ret
xor
and
iret
xchg
js
mov
aas
jbe
daa
sarb
jmp
data16
or
pop
lds
cmc
xor
push
or
add
sub
inc
test
popl
pop
std
testl
add
and
jg
dec
outsb
xchg
in
xor
mov
and
push
adc
mov
dec
pop
subb
aaa
push
or
sub
xchg
xor
and
adc
cmp
ja
fs
push
or
mov
div
adc
insl
push
nop
xchg
and
or
loope
sub
shlb
push
test
movsl
fstl
sbb
pushl
into
push
or
or
mov
adc
pusha
push
lods
fmull
pop
daa
psubd
mov
lock
pop
sbb
lods
test
test
or
cmc
jno
jnp
jb
jne
stos
mov
out
add
in
gs
cmc
cld
popa
outsl
sahf
sahf
lahf
add
jno
fimuls
gs
fcoml
mov
pop
inc
cmp
fs
push
iret
fcmovnb
or
icebp
movsl
sbb
ss
fsubrl
push
pusha
and
mov
push
inc
mov
cli
leave
dec
pusha
sbb
outsl
push
pusha
test
mov
aam
xchg
sahf
push
push
mov
mov
pushf
mov
and
test
pop
push
sub
push
sub
lock
sbb
movsb
mov
test
ss
gs
sub
mov
rclb
lret
cld
stc
jle
loope
int
imul
sbb
sub
lods
push
fnsave
mov
shr
mov
ret
test
bound
fisubl
mov
lahf
mov
imul
js
int3
stc
mov
std
mov
cld
push
into
adc
clc
cmpb
jns
inc
pusha
ret
push
les
arpl
test
test
pop
scas
xor
addb
jmp
jle
inc
adc
add
sbb
xor
mov
xorb
sub
pushf
adc
lahf
lret
stos
rcll
push
iret
push
xor
push
ret
dec
pop
push
int3
and
xchg
test
xchg
inc
in
ret
sub
imul
repnz
sub
mov
mov
sbb
pop
mov
mov
push
addl
repz
add
lret
test
bound
imul
movsl
aaa
in
js
jb
push
leave
mov
pop
cs
xlat
fistps
push
fcoms
mov
jae
lock
or
xor
push
xor
mov
jmp
jl
mov
inc
jmp
out
push
cmp
jnp
adc
aaa
shrb
testb
imul
or
mov
mov
cltd
mov
mov
stos
xchg
lret
loopne
xor
jp
fists
mov
outsl
mov
sbb
ljmp
mov
jne
test
dec
pop
mov
cmpsb
cmpsl
mov
jb
fsubrp
dec
fwait
ss
jo
stos
outsl
sbb
and
stos
mov
sahf
jno
mov
shlb
scas
xlat
xorl
add
inc
and
xchg
fmul
ss
mov
cmpb
or
leave
jp
pop
jp
add
popf
out
push
cmc
cmc
jbe
jge
aam
ds
fwait
mov
xor
neg
dec
clc
dec
lcall
fcomps
psubsb
push
pushf
and
push
xchg
or
cli
mov
clc
cli
adc
mov
enter
mov
sbb
sub
adc
mov
cltd
jb
fidivl
xor
ror
lcall
cltd
mov
lods
mov
inc
jno
push
inc
and
inc
pop
data16
xchg
mov
jne
call
xor
push
adc
cmp
add
aas
mov
sub
mov
je
cs
xor
xor
jae
jl
repnz
mov
or
les
dec
lea
xchg
addb
mov
or
icebp
out
xorl
cmp
jns
jmp
cmp
out
jl
adc
cmp
mov
outsl
add
pop
test
mov
pop
jbe
dec
lea
inc
inc
outsb
push
clc
ffreep
mov
xchg
arpl
mov
enter
or
mov
inc
sahf
xchg
pop
mov
and
jmp
sar
jno
cli
mov
repnz
mov
nop
lods
mov
pop
pusha
cli
sbb
inc
out
iret
repnz
jg
add
les
enter
lret
mov
cwtl
ja
insl
jo
and
inc
sbb
mov
adc
mov
jne
jmp
addr16
cli
rclb
adc
mov
getsec
js
ljmp
insl
add
sub
jnp
add
pop
mov
into
cltd
clc
xor
cwtl
popl
mov
and
stc
in
sub
pop
push
lahf
lods
std
dec
xchg
push
aad
mov
pop
out
or
enter
test
cmp
jp
and
sbb
cmp
movsb
xor
call
pop
call
sahf
iret
pop
pop
imul
push
in
xchg
mov
pop
xchg
je
dec
test
rorb
mov
int
push
fstps
in
pop
jecxz
lcall
aam
cmp
mov
push
mov
incb
sbb
jae
popf
adc
adc
xchg
adc
aas
loopne
xor
xchg
ds
mov
pop
push
sbb
pop
js
pop
cmc
test
add
aaa
orb
add
js
mov
shrl
gs
dec
not
insb
and
lods
mov
jmp
adc
sarb
repz
dec
test
rclb
adcb
sarb
xchg
aaa
js
xadd
loop
inc
dec
outsl
mov
pop
scas
cmp
mov
repz
mov
ja
adc
int3
mov
rcll
mov
repnz
lcall
sbb
or
sbb
or
xchg
addl
cmp
mov
int3
js
mov
shll
cmp
lds
mov
and
xor
push
cwtl
ja
aas
or
push
arpl
dec
push
push
push
push
pop
cvtps2pi
icebp
ror
lods
and
mov
iret
sbb
cmp
add
bound
out
je
mov
shlb
ds
push
lret
mov
cs
stos
pop
aas
or
sar
fbld
ja
jmp
mov
cmp
arpl
loopne
pop
les
lahf
dec
adc
enter
cld
and
fldcw
jns
out
ds
mov
sub
arpl
movb
repnz
inc
cmp
mov
or
hlt
mov
cmpsb
cmpsl
and
out
and
xchg
fcom
out
fisttpl
sbb
mov
mov
sbb
push
je
icebp
push
cs
loopne
cmp
push
mov
inc
iret
and
push
int3
daa
add
pop
shl
sbbb
dec
insb
mov
add
enter
push
hlt
mov
push
pusha
loopne
xor
lea
xchg
add
shl
cmp
imul
adc
jnp
sbb
add
sbb
xchg
push
cmp
jbe
jmp
push
adc
lock
xor
ljmp
add
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
jmp
jle
addr16
push
ds
dec
clc
pushf
outsb
mov
xor
push
cmp
pusha
adc
insb
into
add
dec
rcrl
xor
xchg
or
adc
and
subps
pusha
inc
jns
aam
mov
test
mov
xor
pop
xchg
xor
mov
stos
mov
pop
sub
push
or
shrl
mov
fiadds
sbb
jecxz
stc
ljmp
jge
ljmp
jno
mov
movl
jl
xchg
sti
lods
orl
dec
mov
pop
push
jmp
or
aad
add
in
cmpsl
jns
rol
loop
out
pop
loopne
push
dec
icebp
fiaddl
int3
or
jno
sbb
loope
inc
jns
nop
xor
fistps
adc
jge
cli
push
pushf
fdivl
fdivrs
mov
inc
ret
cmp
pop
pop
dec
scas
and
inc
in
test
adc
dec
stos
xor
inc
repnz
iret
vpsllq
or
xchg
push
outsl
sub
scas
sbb
cmc
add
fisttpll
dec
mov
shr
pop
sub
sub
test
cld
repz
add
imul
sub
xor
cmc
dec
scas
repnz
xor
loope
or
sub
push
ljmp
mov
int
cmp
fsubs
sbb
mov
out
andb
mov
movsb
mov
aas
and
test
or
adc
dec
mov
testb
xor
ja
sbb
adc
mov
loopne
mov
xchg
stos
and
mov
sub
lods
jl
mov
and
sub
cmp
xchg
out
mov
jno
out
mov
push
in
fisubl
cmp
and
mov
xchg
test
loop
mov
andl
repnz
out
popa
insb
cld
fadd
mov
lods
fldl
insb
jnp
out
add
add
push
push
mov
push
rorl
sahf
in
adc
or
gs
jne
add
aaa
ds
inc
sub
gs
ljmp
push
mov
and
jl
xlat
push
inc
fdivl
xor
fs
aas
addr16
mov
mov
imul
test
pop
pop
mov
sub
dec
jle
pop
mov
add
push
js,pn
fisttps
rol
bound
inc
mov
dec
dec
roll
stc
roll
int3
xchg
xchg
out
ffreep
inc
shr
faddp
and
cmp
sub
lods
adcb
pusha
sbb
xchg
mov
and
out
jg
lret
mov
stos
nop
jns
in
sbb
push
mov
out
dec
shrb
outsl
iret
cmp
sub
rorb
pop
or
stos
sbbl
push
pop
or
nop
pop
aam
bound
scas
loope
cmp
repz
sbb
adc
out
dec
fucom
mov
movsl
inc
rclb
and
add
lds
mov
xchg
cwtl
clc
mov
insb
mov
mov
clc
and
or
dec
push
sbb
cmc
mov
scas
xlat
push
clc
adc
lret
jb
pop
ds
inc
mov
xchg
mov
ds
add
dec
jns
cmp
sub
loope
fmull
cwtl
fildll
es
ja
sub
xchg
xor
dec
mov
cmp
sti
testb
mov
sarb
jbe
scas
mov
jge
or
xchg
mov
cmpsb
xchg
xor
jg
outsb
adc
cld
test
adc
je
dec
jo
sbb
lods
mov
sbb
out
clc
mov
ja
dec
in
stos
jae
popf
push
mov
imul
cmp
cmc
sbb
call
loope
test
arpl
jle
nop
push
sbb
loopne
mov
adc
xchg
xchg
in
pop
rclb
stc
dec
mov
test
xor
arpl
or
add
movb
cmp
push
idivb
adc
pop
or
or
or
cwtl
sbb
jmp
pop
xchg
xor
clc
in
pop
pop
push
or
notl
xchg
insl
cmp
push
rclb
les
jmp
mov
int
xor
or
lds
push
jmp
and
push
adc
pop
inc
out
push
sub
pop
adc
sub
outsb
jmp
mov
mov
insl
shlb
repnz
ja
clc
or
int3
adc
out
xchg
jb
jp
std
xchg
les
mov
jl
add
push
push
lret
repnz
xchg
push
and
loope
or
push
or
lea
cmp
jae
xchg
jbe
mov
call
mov
je
addr16
nop
je
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
jmp
repz
sbb
jmp
mov
push
cmp
sti
cld
sub
jmp
out
add
xor
sub
je
mov
pop
xlat
push
fmull
jl
iret
xchg
lahf
jge
mov
ja
pop
pop
jle
pop
mov
jnp
xor
icebp
pop
sti
mov
ja
bound
inc
sahf
jnp
mov
lcall
push
mov
imul
mov
in
inc
or
icebp
dec
push
stos
mov
pop
fmuls
shrl
dec
sub
xor
aad
shrl
rcrl
lods
loope
add
fucomip
das
jle
bound
cld
fbld
adc
pop
es
add
push
dec
sbb
sbb
repnz
dec
jp
mov
sbb
cmpsl
add
aam
xor
adcl
jb
loop
add
out
push
sarb
jo
int
mov
push
aas
movsb
cmp
in
insb
cmp
dec
fcmovb
cmp
push
and
add
add
lea
int
jecxz
inc
pop
nop
pop
inc
bound
add
dec
push
pop
shlb
sub
int
inc
xchg
aas
jmp
and
cmp
and
xchg
lcall
pushf
aas
cmpl
aad
xor
pop
ret
loopne
and
repz
mov
test
cmp
or
mov
jno
imul
cmc
dec
fnstenv
lahf
mov
stos
xor
nop
inc
add
mov
mov
xor
hlt
pop
mov
jle
jns
sti
mov
icebp
push
fdivs
out
adc
or
dec
or
outsb
inc
je
mov
add
cmpsb
fnstcw
or
nop
inc
mov
jge
mov
orps
in
enter
mov
jmp
sub
sbb
shll
pop
aaa
inc
mov
rolb
cltd
mov
sub
shll
pushf
outsl
popl
dec
cmp
xor
jae
aad
dec
loope
inc
rclb
les
dec
add
pop
ss
enter
jmp
repnz
scas
push
or
or
movsl
call
xchg
mov
call
adc
inc
push
pop
push
stc
lds
clc
mov
sarb
jle
iret
ljmp
icebp
jmp
jp,pt
stos
aaa
push
rcll
inc
push
pop
stc
xor
pop
adcb
les
push
jmp
pusha
dec
out
push
aad
inc
insb
or
fidivl
or
das
fldenv
insb
stos
in
jl
push
bound
mov
inc
movsb
repz
data16
nop
in
xchg
cs
daa
dec
pop
jae
xchg
or
cli
mov
xchg
pop
std
sbb
dec
mov
stos
xchg
daa
mov
testl
fidivrs
xchg
and
inc
cmp
inc
movsl
or
inc
sub
jge
data16
lods
and
pop
adc
add
mov
inc
jmp
ss
cmp
pop
sub
insb
ljmp
xchg
sub
add
fwait
imul
and
inc
sar
cmp
push
sbb
or
clc
pop
pusha
dec
bnd
jge
push
rcr
sbb
xchg
in
jmp
orb
pop
arpl
adc
xor
rcl
xchg
int3
mov
out
jb
cmpb
in
inc
mov
sbb
rorb
pop
mov
jb
imul
test
test
imul
lods
sbb
data16
push
push
out
in
imul
add
outsb
cmp
movsb
mov
int3
push
js
test
sahf
inc
das
incb
testl
cmpsb
and
adc
into
mov
rclb
icebp
ret
push
inc
push
push
xor
adc
push
push
xchg
push
mov
into
push
ja
push
sub
mov
lock
out
and
mov
das
mov
cmp
cmp
dec
movsb
xchg
push
call
push
nop
out
es
mov
mov
adc
imul
dec
aas
jg
jl
mov
cltd
leave
or
outsb
ss
sbb
adc
jl
push
sub
test
ljmp
dec
out
ret
icebp
xor
out
mov
int3
and
icebp
in
loopne
aaa
jnp
adc
push
add
jge
stos
add
ja
stos
imul
cmp
jno
pop
into
decb
mov
jmp
push
cmp
jecxz
push
cwtl
push
adc
add
lds
andl
pushf
shrl
jns
test
jo
mov
adc
movsb
mov
out
mov
xchg
fisubrs
popf
mov
mov
push
gs
shll
and
pop
inc
dec
int3
pop
loop
lds
mov
movl
mov
movl
mov
movl
mov
jmp
xchg
jbe
pop
adc
mov
pop
shrb
push
es
push
cmp
shll
push
fidivs
cmp
jmp
cmp
hlt
or
jmp
call
mov
push
addr16
push
sbb
sti
dec
adc
cmpsl
jl
aaa
push
dec
enter
mov
test
push
flds
mov
xchg
in
test
outsb
or
lahf
fwait
inc
pop
or
push
es
mov
pusha
mov
inc
js
andl
fyl2x
sub
cmp
xchg
int3
popa
in
mov
stos
lea
clc
pushf
inc
adc
push
add
xchg
test
outsb
testl
into
popf
popf
push
lock
mov
sbb
loop
xchg
pushl
in
mov
and
or
or
outsl
adc
jle
stc
ret
lods
and
pop
and
push
xor
xorb
adc
outsl
lcall
or
mov
repnz
jno
xchg
push
adc
int3
jge
sbb
mov
push
mov
mov
xchg
pop
and
pop
sub
cli
sbb
and
lahf
mov
pop
jne
stc
push
std
leave
in
push
push
dec
mov
xchg
bound
js
stc
sbb
lcall
xor
jno
xchg
mov
stos
std
jno
sub
dec
adc
push
lock
addr16
lods
or
mov
cltd
xchg
mov
mov
inc
lock
bound
lret
push
stc
test
and
inc
adc
insb
outsb
shrl
mov
enter
jecxz
popf
fsubr
sub
add
mov
in
cli
xchg
cs
stos
mov
or
sub
addr16
push
clc
ret
mov
ds
dec
mov
dec
fidivs
pop
cmp
xor
push
xor
xchg
test
lret
xchg
sti
sahf
int
std
cmpsb
movsb
pushf
dec
inc
out
add
ljmp
js
nop
dec
jne
movsb
adc
les
cmp
xchg
jp
movsl
xchg
inc
outsb
or
sub
or
xor
insb
push
push
sub
jge
repz
mov
sub
sub
push
shll
mov
pop
dec
push
inc
pusha
je
lret
orl
mov
pop
adc
mov
sub
aad
fldenv
jge
mov
adc
rolb
adc
mull
loopne
inc
cmpsl
push
mov
jbe
sbb
or
and
or
lods
sub
dec
dec
aas
subb
inc
lds
sub
xor
iret
bound
push
mov
push
ljmp
dec
adc
out
out
movsb
jle
es
xor
test
insb
mov
pop
lret
fmul
fstpt
cs
pop
jnp
orb
daa
dec
dec
ds
notb
or
or
insl
insb
ret
aaa
and
test
and
sub
fcmovb
pop
inc
xor
pop
mov
scas
sti
mov
sub
cltd
dec
xor
insl
cs
pop
or
push
sbb
out
sbb
lock
mov
outsl
jo
adc
jnp
sar
iret
lret
stc
push
addr16
pop
mov
jno
jo
je
push
cmp
sub
rcrl
nop
lock
std
pop
jle
imul
test
pop
push
mov
sbb
stos
mov
stc
enter
add
inc
inc
push
jb
adc
mov
insb
mov
xor
movsl
sub
bswap
mov
cmp
sub
mov
nop
call
ljmp
loope
add
push
cmp
mov
pop
jp
cld
mov
fwait
cs
repz
dec
sbb
test
dec
out
iret
push
mov
imul
fsubl
flds
orl
xchg
dec
pop
sbbl
test
das
cmpsb
out
insl
or
xchg
adc
sub
inc
ss
or
testb
xchg
pop
sarb
sbb
test
sbb
xor
es
cmp
inc
cwtl
adc
orb
lds
test
fdivr
sbb
adc
push
ja
cmpsl
cld
lds
fwait
pop
xchg
mov
fld
cmp
repnz
lea
lods
fldt
jns
adc
add
insb
ljmp
dec
popa
mov
inc
in
sbb
repnz
sbb
cmc
divb
sbb
std
dec
cmp
cmp
int3
into
out
xchg
inc
xchg
movsl
stc
xor
dec
mov
and
imul
jne
outsb
rcrl
or
cld
movsl
mov
ret
flds
lret
les
les
vcvtps2dq
in
test
mov
pop
mov
xchg
pop
lahf
insb
data16
add
lods
sub
mov
jae
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
jmp
xchg
lret
cs
push
adc
mov
aas
pop
push
mov
adc
push
cmp
sub
out
sbb
or
cmp
push
lock
add
sub
push
call
pusha
mov
sbb
and
inc
push
mov
lret
inc
in
sbb
jae
lods
and
pop
pushf
je
push
lcallw
inc
popa
aad
mov
mov
sbb
enter
loope
jecxz
hlt
pop
inc
out
and
stos
add
arpl
rcl
addr16
aas
mov
cwtl
inc
cmp
pop
insb
jo
add
sar
hlt
outsl
cltd
test
loopne
test
xor
test
icebp
sbb
popa
cs
mov
loope
scas
mov
inc
icebp
push
dec
xor
bound
jae
mov
jl
imul
xor
xchg
xchg
xor
loop
or
fcompl
and
mov
repnz
xor
imul
js
mov
xor
or
dec
std
clc
rolb
dec
add
cmp
xor
inc
xor
movb
xchg
inc
dec
dec
mov
and
loope
pop
sbb
loopne
test
popf
das
idivl
js
xlat
adcl
and
imul
mov
leave
loop
cmp
sub
jae
add
cli
arpl
or
xor
jl
lods
cld
outsl
xor
mov
dec
aas
repnz
xchg
dec
adc
test
ljmp
push
fstp
shll
xchg
scas
add
imul
cmpsl
imul
jo
push
push
dec
outsb
inc
xchg
push
sbb
fwait
les
shll
adc
jmp
std
sar
ds
shr
repnz
mov
insl
popa
or
shrb
stos
scas
mov
adc
mov
and
and
mov
cmc
outsb
shlb
fistpll
inc
cmp
cmpsb
outsl
ror
jbe
fidivrl
fisubl
inc
lcall
aad
sub
or
stos
icebp
rolb
iret
lods
test
in
aad
insl
repz
add
cmpb
xlat
or
push
xchg
pushf
sbb
fisttps
mov
sbb
sub
lahf
xchg
inc
push
jb
arpl
out
xchg
test
adc
jnp
dec
bound
jle
push
push
cmpsb
loop
cmp
in
mov
ds
ja
cmp
lods
outsl
jecxz
in
and
jb
push
pop
mov
mov
loope
and
xor
outsb
fwait
cmp
shll
std
int
loop
jne
std
or
or
mov
dec
push
sbb
mov
ss
ret
ds
cli
imul
mov
cmp
xlat
inc
pop
inc
outsl
jecxz
out
xchg
fwait
jmp
ja
xor
jnp
push
mov
lds
js
mov
int3
dec
int3
adc
aad
sub
mov
adc
roll
std
movsl
xor
in
jnp
int3
fistpll
push
shlb
cwtl
loopne
or
scas
add
aam
shrb
push
push
gs
or
repnz
ljmp
inc
or
and
sub
fsubp
out
push
sarb
cmp
push
popf
and
and
out
addb
cli
adc
cwtl
mov
jae
cmp
bound
add
cmpsb
in
sub
movb
fstl
je
scas
jbe
clc
mov
mov
faddl
xor
adc
test
xchg
xchg
adc
ds
pop
xchg
add
or
shll
scas
cwtl
and
pop
and
jns
repz
aas
imul
cmp
xor
sub
push
sub
xchg
ljmp
push
push
mov
dec
or
in
pop
cmp
lcall
inc
das
lahf
dec
mov
add
add
or
in
outsl
pop
pop
dec
mov
dec
loop
movsb
lea
sbb
push
test
fidivl
out
in
pop
loope
add
pop
incb
pop
fmuls
lret
cld
inc
lret
pop
push
lea
xchg
pop
sbb
aas
cmpsb
stc
iret
push
imul
test
mov
dec
sub
loope
ret
jne
ds
xor
mov
sub
test
jnp
test
xor
sbb
jo
inc
inc
nop
sbb
pop
adc
push
cmpl
dec
faddl
xchg
incl
jno
jmp
std
sbb
mov
adc
lret
pop
aas
fdivrl
dec
cs
xchg
mov
adc
mov
js
cli
aad
aam
xor
sub
and
movsl
inc
rcl
cmp
push
lods
push
push
pop
inc
ja
adc
mov
jle
lahf
test
jne
jecxz
sub
lcall
push
lahf
out
add
push
and
fimull
jecxz
enter
sub
xor
and
lds
shl
sub
pop
xor
jbe
xchg
or
cmpb
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
jmp
xchg
fadds
mov
out
shrb
mov
or
cmp
jge
push
aad
mov
add
or
inc
add
out
inc
sub
les
lds
or
dec
arpl
aas
mov
push
mov
pop
lcall
xor
fs
cmc
push
stos
popf
mov
sti
cmp
xchg
sarb
mulps
jmp
push
jg
mov
xlat
mov
jmp
popa
push
mov
xchg
imull
ljmp
adc
lods
test
notl
lea
mov
xchg
stc
inc
setg
clc
mov
adc
sti
add
mov
xorl
testb
sbb
lods
insl
and
fs
sub
jle
jle
dec
sbb
hlt
xchg
ret
rclb
hlt
or
cmpsb
fiaddl
mov
daa
aam
fsts
mov
cmpsl
xchg
ljmp
xlat
jecxz
mov
sub
cmp
sbb
push
cltd
inc
rorl
les
pop
or
mov
push
xor
iret
insb
mov
stc
or
or
fldcw
adc
add
jnp
and
jp
insl
inc
cmp
outsl
cld
xor
and
push
arpl
cld
nop
xchg
sub
rcll
xor
xchg
pop
add
mov
mov
mov
mov
and
add
xor
jle
es
pop
cmpsb
or
mov
cwtl
out
cmp
notb
andb
pop
ja
jns
mov
popa
andb
dec
pop
push
lea
cmc
pop
or
fdivl
mov
mov
inc
cmp
adc
jb
cmp
lret
inc
inc
jns
scas
popa
fs
xchg
outsl
add
jo
int
mov
xchg
push
inc
mov
sbb
aaa
mov
mov
dec
adc
ret
adc
add
cmp
xor
subl
adc
adc
fstpt
aam
mov
mov
pop
sub
imul
xchg
es
addr16
cwtl
lret
mov
or
sub
mov
mov
and
xchg
pusha
std
shl
lahf
jge
pop
add
in
test
jo
dec
ret
lahf
xor
addr16
pop
dec
and
mov
adc
les
cmp
jne
cmp
xchg
push
ja
das
push
ljmp
shl
xlat
inc
dec
mov
out
cmp
jg
sub
mov
popf
cmpsl
out
mov
ficoms
and
insb
jl
call
pop
dec
arpl
das
fldl
insb
dec
mov
fstl
insb
sahf
pop
mov
mov
out
das
xlat
in
dec
fstpt
aam
xor
pop
outsb
cmc
in
shlb
rol
sbb
pop
pop
sbb
call
jne
jmp
pushf
push
pushf
icebp
shr
inc
out
insl
pop
fbld
cs
std
cmc
shlb
jp
push
mov
jno
xor
or
aas
jbe
xlat
sub
push
scas
out
mov
xor
push
test
adcl
inc
and
or
sub
fists
mov
push
and
gs
daa
fdivp
bound
out
iret
sub
mov
xchg
mov
and
ficoms
mov
mov
mov
ss
mov
sbb
push
dec
js
rclb
sub
pushf
and
les
adc
push
mov
sub
dec
movsb
stos
add
shrl
and
pushf
out
add
or
addr16
jno
mov
subl
sbb
and
stos
or
lock
mov
inc
insb
mov
and
xchg
sbb
xchg
movb
jno
sub
sbb
sbb
xor
sar
clc
fcompl
sbb
popf
jg
lock
aad
add
imul
xor
inc
pop
or
xchg
mov
pushf
std
repz
dec
push
push
les
cli
mov
pop
dec
decb
std
xchg
pop
add
inc
jl
shrb
adc
pop
push
sahf
test
push
mov
andb
cmpsl
mov
mov
mov
xor
mov
lock
dec
adc
add
adc
mov
mov
lods
leave
push
mov
outsl
lahf
sub
pop
fsubrl
test
jbe
fs
adcl
and
movsl
pop
cmp
popa
and
hlt
adc
mov
inc
mov
pop
icebp
in
jp
xlat
xor
je
and
je
nop
jo
and
rcll
mov
invd
out
add
repz
mov
test
ljmp
dec
xor
mov
out
adc
lods
movsl
idivl
mov
cmpsl
sbb
es
mov
mov
lods
enter
add
mov
add
les
jle
nop
outsb
mov
sti
mov
cld
or
cmp
sti
jle
pop
jl
ja
jne
lcall
popa
stos
pop
and
jae
and
pop
sbb
movsb
fidivs
jnp
div
js
add
and
fmul
inc
xchg
mov
fdivrl
inc
fwait
jae
bound
outsb
shlb
dec
fcompl
dec
xchg
sub
mov
mov
mov
xor
gs
sbb
xchg
mov
mov
out
jge
mov
cmpsb
cli
add
mov
cltd
xor
mov
out
ret
jbe
mov
push
and
push
fistpl
mov
enter
push
inc
rol
or
scas
mov
shl
cmp
xchg
dec
mov
les
push
test
pushf
std
fisubrs
xorl
push
pop
lret
cmpsl
mov
mov
lahf
negb
xchg
test
ret
cmp
pop
cmp
sub
sub
cwtl
imul
xchg
xor
mov
outsb
push
push
and
cmpsl
cltd
rcl
xor
cmp
sbb
or
push
mov
mov
xor
adc
insl
fiadds
mov
pop
push
lods
das
fucomp
push
cmc
mov
pop
popa
mov
std
mov
idivl
mov
data16
aas
add
icebp
pop
out
testl
mov
sbb
or
xlat
pop
fldcw
es
sbb
jmp
dec
imulb
push
or
ficoml
leave
adc
adc
xchg
cmc
xor
js
cmpsl
xchg
rorl
das
cwtl
or
cmc
cmpsb
mov
aaa
dec
sub
rcrb
cmp
xchg
stc
lret
xchg
fsubl
jecxz
push
dec
cs
or
push
mov
loope
or
sbb
pop
test
mov
fwait
les
test
push
xchg
jmp
add
sarb
xchg
push
xchg
mov
insl
es
dec
or
xchg
pop
pop
rcr
enter
lahf
shrl
cmp
push
jo
cmp
cmp
mov
push
adc
fcomp
cs
cmpsl
sbb
pop
xchg
mov
and
add
mov
repz
and
sub
jnp
jmp
ror
xchg
push
call
cmpsb
and
cmovne
dec
test
mov
pop
mov
mov
int
pop
popa
xchg
stc
lds
cltd
jns
in
push
shll
jmp
jp
add
call
and
jae
cmp
ret
xlat
aad
sub
ja
mov
adc
popa
rcll
cmp
pop
lds
hlt
call
dec
add
dec
or
dec
mov
add
or
adc
loop
cmp
xor
pop
scas
push
mov
dec
mov
cmp
fistpll
jae
mov
xchg
mov
cmovb
ret
shrl
loope
xchg
push
aas
push
aaa
cmp
and
orl
or
mov
jge
imul
or
jnp
jae
jge
sti
icebp
push
adc
or
mov
ljmp
movsb
fnstenv
stc
dec
js
xchg
or
lods
sub
sub
dec
stos
cmp
mov
std
loop
xlat
push
push
jne
pop
dec
movsl
sub
imulb
or
cmpsl
scas
jmp
mov
scas
xchg
mov
lock
repz
cli
iret
sbb
and
jb
sti
mov
mov
jae
leave
pop
insl
lcall
mov
dec
dec
mov
call
cmp
inc
sub
fnstenv
mov
in
and
gs
lret
xlat
adc
sbb
push
adc
pop
popf
add
mov
test
imul
xor
fistpll
test
dec
sub
sarb
shl
mov
in
mov
inc
fdivrs
cmp
enter
mov
inc
dec
sbb
insb
fildl
xchg
pop
xchg
popa
mov
xor
pop
dec
push
jne
xor
jo
jl
jmp
sahf
pop
test
pop
mov
fldt
cmp
xchg
inc
inc
cld
dec
adc
mov
imul
into
add
dec
mov
ror
arpl
mov
dec
xchg
jl
cltd
dec
push
mov
movsl
inc
pop
mov
movsl
jae
loopne
lret
cld
pusha
mov
mulb
das
div
cli
movsb
push
movb
enter
mov
xchg
loope
test
add
push
js
pop
adc
pop
aam
dec
inc
addr16
mov
sbb
cmp
xor
fisubl
cmpsl
dec
int3
xor
insb
sbb
xchg
lea
adc
in
inc
sbb
std
sbb
pop
fdivr
cli
movsb
dec
push
jg
fadd
jb
iret
ljmp
cmp
pop
inc
mov
outsl
test
roll
cmp
stos
adc
stos
pop
pop
sbb
push
sub
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
jmp
sahf
push
sub
sbb
inc
adc
subb
repnz
cmp
mov
adc
and
dec
push
dec
dec
js
xchg
adc
inc
pop
lods
ficompl
add
push
jge
xchg
loope
insl
stc
xor
ljmp
cmc
mov
lcall
cmp
push
repnz
jmp
js
popa
fucomi
push
leave
clc
mov
mov
cli
repnz
mov
out
or
incb
xchg
cmp
in
jnp
dec
pop
cld
jno
add
ds
int
out
mov
dec
mov
fsubr
insl
and
and
mov
inc
mov
fnstenv
pusha
fdivrp
aad
or
cmc
ds
rcrl
xchg
ret
pop
repnz
hlt
loopne
out
lret
cli
arpl
or
cltd
je
ret
pop
jnp
aas
aad
mov
cmp
bnd
pop
test
sahf
iret
push
out
xchg
cmp
jnp
inc
xor
shlb
xchg
mov
cmp
cmc
lcall
xchg
push
cmpsb
mov
dec
sbbl
aam
cmc
and
dec
daa
and
mov
repnz
jbe
jnp
sahf
loopne
mov
lret
cltd
fdivl
cwtl
lock
sub
out
and
into
pop
add
test
or
test
rorl
pop
test
repz
push
mov
xchg
orl
cmp
aam
movsb
dec
push
iret
icebp
movsl
and
ja
jmp
test
rolb
add
andb
hlt
cmpsb
cmc
push
add
inc
jo
and
xchg
aas
test
or
movsb
movsb
fsubs
or
cmp
pop
out
scas
or
add
mov
imul
xor
mov
dec
cli
sahf
imul
mov
in
mov
and
mov
xchg
sarl
cmp
mov
cwtl
shrl
js
fsubs
aad
push
out
inc
jne
orl
mov
inc
enter
imull
shll
dec
sahf
addr16
push
push
pop
negl
aaa
fcompl
add
movsb
fwait
jl
out
xor
repnz
shl
pushf
sbb
dec
aas
mov
push
stos
add
mov
sbb
fisubl
mov
or
inc
mov
popf
scas
mov
mov
imul
cmp
lock
xlat
add
push
xor
jae
mov
inc
mov
popf
fistpl
js
ret
sub
or
js
adc
or
sub
lret
mov
icebp
adc
pusha
sahf
sarb
cmp
xor
mov
add
popf
mov
pop
cmc
pop
sarb
dec
daa
xor
not
mov
gs
mov
xchg
mov
cld
dec
mov
shll
cli
sbb
int3
mov
ja
dec
imul
in
insb
data16
loopne
shlb
aaa
push
pop
sarb
mov
test
orl
sbb
push
mov
add
inc
push
fmull
rcl
lods
mov
aam
imul
add
jne
popa
xchg
jp
push
cmp
fsubl
pop
cmpsl
jns
rorb
mov
pop
mov
mov
into
sbb
cwtl
in
out
out
ficompl
xchg
sarb
daa
xchg
xchg
loopne
and
mov
in
imul
insl
out
add
std
jne
jne
addb
repz
and
fs
mov
mov
push
in
pusha
stos
inc
add
jecxz
mov
xor
sub
sarb
rorb
stc
js
mov
out
mov
adc
push
test
lcall
push
push
mov
adc
mov
sub
cmp
push
or
test
dec
scas
es
loope
mov
lds
insl
jmp
les
clc
mov
loopne
mov
es
repz
mov
jb
fxch
jb
mov
aaa
mov
add
fdivrl
cwtl
sti
loopne
and
sub
cli
push
js
nop
shll
pop
and
adc
sbb
sub
ret
push
mov
call
call
into
pop
scas
adc
cltd
sbb
jmp
ret
mov
in
dec
movb
loopne
push
mov
addb
rcr
jmp
dec
aad
int
outsb
lods
push
leave
xor
into
insb
mov
mov
sub
or
imull
cltd
jae
push
xor
xchg
int
adc
and
xchg
mov
out
xor
cmp
iret
adc
cmp
or
xor
dec
scas
fisubs
add
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
jmp
jb
jecxz
sub
push
xchg
das
mov
outsb
inc
lock
cmp
mov
stos
outsl
inc
jg
adc
inc
xor
lock
gs
and
cmp
orl
xor
in
cmc
cmp
pop
shll
jbe
shrl
xor
jae
push
push
mov
xchg
pop
lret
xchg
add
in
mov
inc
sub
inc
repz
clc
mov
jp
xchg
cli
stos
sti
rcrb
jne
data16
cmpsb
sarl
fnstenv
cmpsl
movsb
push
mov
and
lret
mov
mov
adc
mov
jne
xor
int3
or
icebp
lahf
jno
hlt
loopne
push
jge
bound
sbb
mov
mov
out
jns
pop
fisttpll
jae
rolb
stos
and
jg
sahf
xchg
push
pop
lret
nop
idiv
mov
and
push
adc
nop
mov
push
jecxz
out
or
imul
clc
add
jns
sbb
jg
xchg
fcomps
cmpsb
dec
pop
adcl
sbb
pop
push
mov
icebp
cmp
inc
iret
pushf
adc
testb
jecxz
mov
push
cmpsl
std
nop
push
mov
aas
or
in
fwait
movsl
push
cmp
and
repz
pop
lahf
sub
mov
in
leave
sbb
cltd
adc
mov
out
mov
mov
std
xor
stos
loopne
outsl
iret
mov
push
push
cli
add
roll
jne
divl
mov
fs
jp
lret
adc
jne
ss
js
jb
xchg
fs
sarl
test
cmpsl
push
pop
aad
mov
xlat
idivl
mov
xchg
add
imul
fs
adc
orb
nop
mov
pop
arpl
out
jo
jp
or
les
jp
dec
push
aaa
ss
sub
ljmp
stc
mov
cmp
stos
lods
mov
mov
jnp
sarl
repnz
and
or
pop
movsb
out
out
sbb
or
jle
mov
push
pop
ret
push
jmp
divb
or
stos
inc
cmp
adc
mov
int
mov
movsl
mov
jge
idiv
les
jmp
mov
loopne
jp
addr16
pop
lock
fnstsw
mov
xor
inc
or
repz
or
mov
xchg
sub
data16
or
jl
push
popf
push
push
lea
inc
inc
xchg
mov
pop
setg
mov
pop
ss
push
mov
sbb
mov
dec
pop
jno
sbb
shll
push
cmp
scas
add
cltd
icebp
test
insl
fs
sub
fs
mulb
xor
frstor
mov
inc
call
jae
sbb
pop
jge
lods
das
clc
fisttpl
sbb
lock
lcall
ret
or
xor
fldl
inc
jnp,pt
ficomps
loopne
fcmovu
popf
pop
push
mov
test
lods
movsl
jmp
das
mov
das
add
push
xchg
push
out
push
xchg
testb
stos
xlat
cmc
adc
outsb
add
mov
xchg
andl
add
inc
bound
jmp
jo
aas
xorb
outsl
push
aam
pop
mov
les
das
mov
push
ret
popa
xchg
push
mov
rolb
adc
mov
xor
mov
int3
mov
imul
mov
sub
cmp
mov
sub
dec
test
ror
lret
mov
lcall
bound
cli
xchg
int3
sbb
std
mov
xor
repnz
sbb
pop
out
int
sbb
imul
pop
fcoml
test
lods
imul
ja,pn
scas
arpl
jge
mov
sbb
shlb
je
test
pop
pop
pop
add
div
out
roll
xor
sbb
inc
rol
out
loopne
leave
das
or
dec
rcrl
sarb
inc
adc
loop
and
pop
xchg
aam
mov
dec
sti
shrb
lock
push
and
push
pop
mov
daa
adc
ret
cmp
xor
add
cmp
ljmp
pop
pop
mov
or
into
roll
pop
jle
sub
xchg
lahf
dec
dec
iret
adc
or
or
rcll
enter
mov
sbb
frstor
inc
gs
mov
mov
adc
xchg
mov
stc
and
out
jo
mov
dec
ja
pop
ss
scas
push
push
sub
jge
dec
std
movb
out
cs
imulb
sbb
cmp
sbb
lret
out
into
adc
je
inc
cmc
loop
xorl
mov
popf
out
mov
out
into
arpl
pop
lods
int
and
sub
inc
shl
ja
sub
jmp
fstl
cmc
adc
aas
mov
mov
or
shl
mov
mov
jmp
arpl
and
stos
sub
scas
jecxz
inc
test
fisttpll
cmp
stos
sub
pop
xor
or
ret
jl
pop
push
not
inc
stos
xchg
xchg
sahf
lods
mov
xchg
mov
push
loopne
daa
ss
jecxz
pushf
add
jge
rcl
xchg
adc
imul
movswl
sti
cmp
int
ret
dec
push
fs
and
push
shrl
sbb
jo
add
push
cmpsb
in
push
mov
xchg
fidivrl
test
mov
das
adc
je
cmp
fstps
sub
push
aad
popf
fcomps
les
push
fbld
mov
or
mov
push
mov
jp
pop
jmp
cltd
movsl
std
mov
lcall
mov
insl
or
cmp
stos
jns
cs
cs
imul
jecxz
cltd
lea
adc
sbb
cmp
cmp
mov
mov
pop
lret
jecxz
inc
aas
pushf
cmpsl
xchg
lods
dec
mov
ljmp
mul
cmpsb
sbb
or
bound
loope
pop
das
pop
pop
push
gs
daa
int
rclb
fcompl
and
jno
cld
outsl
jmp
push
sbb
xor
lahf
iret
adc
push
or
daa
insb
daa
pop
mov
imul
fcomip
divl
rcrb
fs
lret
sahf
pop
outsl
icebp
xchg
add
cmp
xor
dec
xchg
dec
inc
fcompl
js
std
dec
push
inc
sti
inc
ss
dec
in
out
std
int3
in
pop
or
inc
out
jne
xor
xor
fsts
imull
mov
push
cltd
add
cmp
jg
mov
mov
jo
lock
pop
rcll
data16
enter
pop
pop
ret
aas
clc
dec
stc
dec
cmpsb
inc
pop
test
bound
push
sahf
push
adc
mov
nop
sti
adc
rcll
lcall
lods
xchg
in
dec
sbb
push
and
movsl
gs
clc
inc
mov
pop
out
mov
insb
lods
cmp
int
je
dec
pop
bnd
movsl
test
jmp
dec
rcrl
and
and
xlat
mov
fidivrs
dec
pusha
mov
mov
inc
mov
ljmp
xor
enter
sbb
cltd
fdivr
inc
or
stos
repz
ds
cmpl
push
outsb
jge
push
inc
jns
or
enter
sub
scas
cmp
sti
mov
div
fbstp
mov
add
lds
outsl
inc
sbb
mov
jp
aaa
aas
ds
push
and
mov
push
cld
movsb
pushf
lea
fs
cmp
out
push
adc
dec
and
sarb
lea
adc
in
jb
mov
std
push
fisttpll
and
and
ss
sbb
jecxz
jg
pop
xchg
lock
pop
sbb
xor
push
xchg
ret
pusha
fcomps
push
cltd
sbb
call
sub
lret
dec
or
insb
fsub
xchg
pop
push
inc
dec
in
test
rcll
push
xor
xchg
addr16
into
test
xchg
jge
sbb
loop
daa
test
mov
mov
xchg
pop
lahf
mov
pusha
je
sub
or
mov
mov
out
mov
jmp
stos
fucom
aam
mov
outsl
fxch
in
inc
mov
and
pop
xor
cmpsb
jo
push
pop
dec
test
into
mov
push
rcll
int
mov
cmp
cmpsb
mov
sub
lret
aad
sub
and
sub
jmp
das
mov
stos
pop
mov
add
loope
cwtl
xchg
pop
mov
push
rolb
das
inc
push
pop
neg
push
xchg
push
inc
mov
lret
test
xor
insl
mov
mov
xchg
jb
rcrl
and
lods
push
in
insb
mov
ja
mov
mov
jecxz
cmc
jp
pop
lea
or
mov
aam
call
mov
jmp
repnz
cmp
mov
lcall
mov
xchg
in
inc
leave
and
int3
lcall
pop
mov
push
mov
or
xchg
xor
pop
inc
push
iret
push
sub
das
cmpsb
mov
je
xchg
in
bound
jp
jl
lods
enter
inc
push
outsb
mov
mov
insl
insl
add
ret
pop
hlt
out
les
pushf
inc
test
jo
xor
cmpsb
ss
adc
lea
arpl
mov
call
ret
and
into
out
sub
je
pop
loop
xchg
push
inc
gs
fcoml
sub
adc
int
jmp
fmull
inc
aaa
cltd
pop
xchg
jne
ficompl
lods
shll
xchg
add
add
sahf
icebp
sarb
sbb
lock
xor
dec
loope
dec
pop
cwtl
or
mov
jmp
mov
xor
xor
xor
or
je
jns
jb
rorl
cmp
shlb
sahf
iret
mov
mov
cmp
add
mov
mov
sahf
jb
loop
das
sti
inc
pop
push
jbe
dec
cmp
ja
jbe
arpl
adc
stos
in
xchg
xlat
out
sbb
jbe
lock
cmpsb
mov
aad
andl
into
cmp
dec
and
fadds
and
dec
inc
jbe
repnz
cld
xlat
add
mov
mulb
leave
lock
jno
adc
adc
rcll
pop
enter
stos
int3
lcall
dec
add
xchg
lcall
cmp
fldcw
add
jmp
ljmp
fstpl
popa
jmp
sub
bound
in
insl
lea
cmpsl
push
pop
inc
mov
adc
add
test
jg
push
sbb
sbb
imul
lods
pop
jnp
xorl
ret
inc
lcall
out
negb
dec
mov
rcr
push
ds
lret
cmc
rcl
xor
test
jbe
loope
imul
out
mov
xlat
dec
adc
addr16
and
or
adcb
aad
nop
mov
inc
outsb
pop
jne
push
xchg
inc
jb
pop
mov
add
add
mov
push
lock
sbb
enter
dec
icebp
fsubrp
jno
fnstenv
xchg
fdivrl
std
and
inc
mov
dec
leave
aad
mov
sub
mov
push
sti
or
cmc
je
ficomps
sbb
js
je
test
fsubl
ss
adc
pusha
mov
inc
js
dec
lret
lcall
or
jae
ja
repnz
in
cld
je
mov
cwtl
stc
sbb
sbb
pop
sbb
roll
sub
prefetcht0
xchg
push
jno
cmp
dec
xchg
dec
pop
push
and
jno
in
push
push
push
jno
call
jp
sbb
ljmp
push
add
lret
sahf
sbb
adc
cmp
fs
push
adc
mov
ss
enter
mov
mov
mov
xchg
imul
movsb
add
add
dec
int3
adc
outsl
push
pop
adcl
xor
flds
mov
jge
inc
jbe
xchg
enter
lcall
notl
std
pop
mov
push
fildl
outsb
sti
sub
arpl
push
into
scas
jge
mulb
cld
add
push
fcmovnbe
xchg
out
iret
pop
sub
les
cld
inc
xor
je
and
add
test
mov
ljmp
popa
jns
sbb
fucomip
or
sbb
repnz
push
jbe
mov
push
daa
test
jae
xor
mov
cmc
cmp
retw
out
popf
aas
ja
dec
mov
xor
and
jbe
cmpsl
in
or
movl
push
add
mov
mov
push
jecxz
lcall
xor
and
mov
pop
out
aad
xor
adc
cmp
add
sbb
mov
sub
mov
das
jne
popa
dec
push
cmpsb
sti
in
mov
les
sbb
lret
dec
jmp
inc
in
push
jmp
push
ficoml
cmpsb
or
std
loope
ds
mov
loopne
scas
mov
pop
pop
in
or
jle
adc
addr16
mov
sub
rol
jb
pushf
xchg
cmpsl
repnz
cmpsb
sub
adc
add
popa
cmp
or
mov
sub
std
xor
xor
in
cmpsb
jnp
jae
mov
imull
stos
cmp
xchg
sarb
push
ds
mov
bnd
inc
mov
cmpsl
cmp
add
mov
fists
loope
std
dec
mov
dec
notb
fdivl
mov
in
add
mov
out
jmp
sub
cld
adc
jno
pop
js
pop
scas
mov
inc
inc
dec
mov
or
sahf
inc
dec
or
sahf
xor
int3
outsb
jb
enter
addr16
hlt
addl
loope
adc
fwait
daa
iret
sub
aas
inc
mov
gs
push
int3
adc
movsl
sbb
jbe
mov
adc
and
dec
ficompl
pop
mov
push
fcom
jg
hlt
cmp
mov
scas
inc
jo
mov
stc
movb
fdivrs
mov
dec
ljmp
sub
inc
push
pop
add
dec
fisubl
out
dec
mov
add
add
les
add
adc
std
xor
lds
hlt
ja
pop
insl
dec
icebp
jg,pn
test
dec
popf
jno
jns
pop
lods
out
xchg
mov
cli
insl
adc
or
dec
xchg
aaa
and
int3
xor
cmp
inc
mov
xor
mov
mov
mov
xor
jmp
movsb
outsl
test
movsb
ss
sahf
cmp
into
les
cmp
aaa
fisttpll
push
push
mov
adc
xor
and
cmp
lock
loop
scas
cmp
lret
arpl
repz
repnz
push
jns
ror
inc
mov
sub
dec
mov
je
fld
mov
imul
test
imul
inc
in
mov
push
xor
push
mov
fnstcw
daa
jle
aaa
jbe
cltd
cmpsl
adc
int
sub
inc
pop
ja
stos
add
cmp
call
sub
inc
repnz
sub
lods
pop
js
data16
fdivl
jl
and
cltd
les
cs
dec
push
mov
ret
xor
fwait
and
ds
add
jecxz
repnz
and
arpl
jnp
xor
sub
in
icebp
cmpsl
imul
pop
cmpsb
ret
xchg
jae
jl
and
call
mov
addb
in
pushf
out
pop
dec
rcrb
adc
mov
mov
jl
movsb
lahf
inc
ss
xor
lock
ss
cld
mov
cmc
jle
ret
repnz
and
push
sbb
adc
jmp
fsub
push
lret
in
xchg
push
aas
call
fnstenv
jno
mov
pop
push
mov
jecxz
sbb
dec
jno
push
mov
mov
les
adc
cmp
or
cs
ljmp
jecxz
cmp
lock
pop
imul
mov
fadds
pushl
push
inc
jne
xor
sbb
sbb
dec
mov
mov
jl
in
ja
pop
lds
lcall
mov
dec
rcrl
les
inc
inc
bound
cmovle
sbb
push
subl
xchg
stos
addr16
xchg
mov
push
dec
mov
xor
xchg
in
mov
repnz
mov
or
inc
mov
test
mov
add
dec
jg
dec
add
push
fdivl
sti
ja
mov
lret
je
sub
inc
cmp
xchg
sti
test
xor
pusha
inc
add
leave
pop
mov
pusha
sti
push
mov
cmp
xchg
dec
lahf
push
or
out
and
movsl
fisubs
mov
fistpl
cwtl
pop
imul
into
out
bound
sti
push
xor
and
fwait
push
and
mov
mov
fnsave
loope
out
adc
push
cmpsb
addl
push
in
mov
add
adc
jae
cltd
jg
outsb
insb
or
ja
rolb
lds
in
and
rorb
pop
es
inc
and
dec
pop
xchg
inc
lods
inc
in
inc
xchg
pop
repz
aaa
and
fwait
cli
inc
xor
lahf
std
mov
sub
pop
scas
jbe
push
or
not
lods
movsl
les
movsb
lret
xchg
or
gs
dec
leave
fldcw
sub
inc
push
pop
jns
lcall
popf
lahf
enter
jg
cmpsl
mov
xchg
lods
jge
dec
push
lods
insl
add
sub
jne
iret
loopne
mov
xchg
pop
lock
push
inc
pop
aaa
fwait
mov
jo
loop
rcrl
dec
hlt
cli
mov
inc
mov
sti
lcall
dec
add
and
push
aam
push
cs
aaa
lds
cs
inc
push
sarl
cmp
mov
shll
mov
add
scas
daa
and
pcmpeqb
dec
jle
into
or
sub
scas
or
mov
mov
andb
or
loop
push
mov
cwtl
mov
mov
jo
sub
dec
jp
loope
lds
push
add
out
push
orl
jle
leave
fsubs
mov
imul
cmpsl
and
lds
data16
mov
ljmp
clc
push
popa
mov
cltd
inc
mov
push
test
cmp
push
scas
cmp
add
and
ret
repz
rcrl
shl
call
ja
mov
lods
push
stc
fadd
xchg
mov
aas
popf
add
dec
repz
jne
stos
sub
out
pop
add
cmp
inc
cld
mov
cltd
mov
rolb
lock
aaa
call
cmc
clc
xchg
push
or
xor
es
movsb
pop
in
sbb
scas
sbb
iret
jb
in
adc
int3
popf
jmp
jmp
add
mov
dec
and
dec
gs
popa
clc
pushf
in
test
repz
pop
fildl
ds
lods
repz
int3
test
push
mov
and
movsb
pop
out
inc
jne
add
adc
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
jmp
scas
rcrb
and
ja
lods
scas
sbb
pusha
outsb
stc
mov
push
push
and
ss
pop
shll
gs
jg
je
sbb
call
popa
pop
js
subb
push
loope
fs
or
lds
aam
dec
ss
scas
outsl
mov
sub
push
adc
rol
mov
in
leave
push
ret
jecxz
popf
or
test
sub
pop
cmp
clc
xchg
dec
pop
decl
repz
jno
repnz
lret
and
int
push
mov
push
sub
cmp
cmp
in
inc
leave
je
jmp
xchg
add
or
sbb
loop
push
push
rcrl
xchg
dec
ss
inc
filds
pop
insl
imul
lea
pop
xchg
sub
xor
xacquire
or
mov
repz
fnsave
lahf
loope
xor
rcrl
dec
int3
sub
push
adc
sahf
xlat
jbe
lret
rcrl
pushf
sbb
insb
inc
sub
pusha
adc
pop
jecxz
adc
je
jo
mov
fidivrs
repnz
popa
adc
add
pop
repz
inc
insb
mov
sub
fildl
or
adc
repz
ret
pop
enter
xor
inc
jns
shrl
std
out
sbb
cmc
repz
inc
sub
push
rep
pop
fmuls
in
or
sbb
xchg
in
mov
outsl
cld
cmpsl
repz
imul
mov
fsubl
push
add
inc
inc
sbb
shlb
popw
fidivrs
sub
and
test
cmpl
enter
outsb
cmp
jp
cld
mov
sub
lahf
repz
pop
or
cltd
inc
sub
movsb
dec
aaa
add
sub
pop
inc
mov
nop
ret
mov
cld
xchg
push
add
jp
xchg
xchg
pop
xchg
dec
fistpll
push
movsb
mov
sbb
ret
push
push
or
scas
jns
mov
xlat
sbb
test
cmpsl
mov
jbe
mov
sub
jmp
fwait
pop
xor
xchg
xchg
push
ss
xor
mov
arpl
xchg
or
mov
or
in
or
adc
add
icebp
jnp
push
arpl
mov
dec
push
mov
pushf
inc
push
movsb
pop
test
sub
cmp
daa
adc
mov
jle
jno
lret
push
inc
jb
lcall
dec
notl
clc
ret
sarl
push
add
xchg
adc
ret
into
adc
push
pop
inc
mov
sar
mov
movsl
cmp
lock
fmul
inc
xor
cmc
adc
sti
rolb
cmp
xchg
adc
mov
pop
inc
and
mov
pop
push
add
popf
jb
inc
stos
push
mov
fwait
pop
xor
sub
into
arpl
or
xchg
or
out
cmp
mov
lcall
pusha
push
imul
dec
out
inc
test
fs
dec
mov
push
jno
push
and
and
mov
aam
loop
ret
stos
cwtl
and
xor
pusha
aam
mov
jmp
cmc
pop
mov
adcb
cmpsl
icebp
add
in
xchg
or
std
in
dec
lret
out
gs
jecxz
jne
cmc
popf
lods
cmpsb
ret
xor
jae
pop
xor
or
movsl
push
es
mov
inc
sarl
pop
or
mov
inc
in
hlt
outsl
pop
in
and
mov
push
pop
scas
ficoml
xorb
fcomps
cmp
ljmp
cmp
push
jns
jae
loope
xchg
insl
cmp
dec
add
inc
inc
mov
push
jns
idiv
add
xor
xchg
out
push
lret
xchg
lods
mov
xlat
pusha
pop
addb
ss
push
test
aad
rcll
stc
mov
add
mov
sbb
pushf
cmp
mov
cmc
fdivrl
xor
cli
pop
cmp
test
iret
mov
mov
lcall
scas
data16
add
inc
or
pop
gs
in
inc
aad
sbb
cmp
sub
clc
aad
sub
push
repz
stos
fistpll
jmp
and
mov
pop
cld
sti
xchg
push
cmpsb
test
cmp
daa
lods
int
push
les
test
sub
or
inc
pop
push
data16
sub
pop
dec
add
xchg
mov
das
cmp
xor
mov
push
in
cmc
fmuls
pusha
lcall
add
dec
pop
ret
lods
out
test
push
dec
fs
sbb
inc
jae
mov
fidivl
es
fs
inc
pusha
adc
add
mov
and
inc
xor
sbb
pop
mov
push
dec
je
mov
inc
add
imul
dec
adc
test
dec
cmp
inc
nop
scas
shl
inc
add
cmp
lods
push
ss
mov
add
push
int3
insl
in
fwait
subl
pop
mov
adc
or
sub
push
out
clc
test
call
fnop
jp
inc
lods
inc
push
lods
cmp
jmp
mov
jle
xchg
ss
fstps
push
test
dec
sub
push
fs
fisubs
ror
inc
stos
mov
hlt
test
popaw
idivb
jle
add
push
loope
cmp
mov
nop
jp
adc
jb
out
popa
and
mov
jae
aad
jp
mov
adcb
ds
dec
jne
mov
lds
hlt
pop
or
cwtl
je
sti
jmp
sbb
iret
or
rorb
push
cwtl
icebp
js
push
test
lret
test
daa
lods
fucomip
jmp
fbstp
mov
and
roll
inc
xchg
bound
xor
insb
xchg
lds
cmp
xor
fdivrl
js
adc
pop
cld
loope
lods
adc
fdivr
dec
pop
outsl
jge
push
mov
scas
arpl
push
ret
test
cmp
stos
xor
jp
mov
mov
jb
mov
cld
mov
fisubrl
xor
das
fidivs
dec
hlt
fmul
xchg
jnp
mov
and
pop
in
sbb
test
mov
rcl
movsb
xchg
push
push
inc
xor
mov
sbb
sbb
daa
sbb
loope
cli
pop
popl
xchg
subl
mov
jo
bound
test
mov
cltd
cwtl
fildl
fldenv
mov
decb
das
dec
xchg
xchg
andb
jl
icebp
shrl
leave
sub
add
xchg
jg
lods
sbb
in
mov
adc
dec
mov
arpl
fisubrl
aaa
cmp
popa
out
lcall
sub
and
into
sub
pop
testl
push
jp
mov
cld
sub
clc
mov
loope
test
pusha
arpl
ret
inc
jo
jno
push
arpl
jle
dec
fnstenv
fisubs
dec
sub
pop
mov
shr
dec
mov
das
lahf
push
or
in
int3
mov
or
imul
nop
popf
xor
lods
jmp
mov
cmp
pop
out
addl
jne
cwtl
or
sbb
insb
insb
mov
pop
push
and
bound
mov
xor
popf
ljmp
sbb
add
cmp
int3
lods
test
pop
sahf
movsl
adcl
nop
mov
sub
or
arpl
mov
push
mov
xlat
ret
inc
jg
ret
outsl
pop
ja
xchg
mov
sbb
in
sbb
sbb
loopne
insb
dec
js
or
mov
mov
pop
sbb
cmpb
shll
movsb
rolb
sbb
daa
jle
dec
enter
insl
cli
xlat
call
std
add
adc
mov
in
popa
jl
int
fimull
mov
enter
cmp
pop
pop
cmp
mov
pop
xor
insl
xor
cmp
hlt
lea
mov
psubb
or
mov
leave
aaa
and
fimuls
push
and
fs
cmp
xchg
icebp
ljmp
int
sbb
add
clc
cmpsb
xor
sbb
inc
lret
in
mov
xchg
test
cmp
shll
pusha
push
ja
aam
loope
add
nop
out
sub
dec
in
or
push
fdivrl
xor
xlat
movsl
jne
fs
pop
pop
adc
mov
aam
mov
sub
je
mov
inc
lret
outsb
test
repz
add
inc
push
stos
sahf
xlat
xor
fcmove
pushf
add
cmp
popa
addb
mov
jae
out
rol
ljmp
adc
add
ja
xchg
cmp
push
lret
push
xchg
mov
out
xchg
xor
sub
pop
fimull
push
jne
inc
loope
sub
add
and
popa
pushf
sub
xchg
shll
cs
or
pop
xchg
stos
repz
jns
mov
js
jg
lock
cmc
addr16
xchg
push
cmp
lds
inc
add
adc
adc
pop
data16
out
test
test
mov
cmp
cmpsl
xor
xchg
sbb
sbb
int3
mov
nop
dec
mov
sahf
pop
jae
inc
iret
lock
sti
jno
movsl
jl
push
inc
xor
dec
orb
and
jb
jmp
dec
sti
rorb
mov
mov
xchg
pushf
and
mov
insb
repz
fisttpll
fwait
ds
in
or
xor
mov
xchg
imul
and
lcall
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
jmp
and
mov
loopne
lods
scas
loope
jbe
dec
scas
or
cmp
add
aaa
pop
sbb
loope
jns
in
inc
es
mov
cld
sub
iret
stos
sub
mov
inc
divps
imul
inc
ss
int
push
pop
nop
push
int3
sub
adc
lret
jbe
cmp
movsl
mov
ret
arpl
sbb
movsl
mov
fistps
sbb
xchg
test
xor
mov
mov
repnz
mov
mov
pop
int
inc
in
aad
lret
cmpsl
cwtl
mov
test
jl
cmp
add
push
mov
jmp
push
fnstcw
ljmp
or
sahf
iret
faddp
movsl
shll
fwait
cs
dec
popa
lea
insl
add
inc
popf
push
arpl
adc
inc
push
out
lods
xchg
mov
pop
sub
cmc
int
cwtl
xchg
and
add
adc
and
mov
lods
out
mov
mov
in
sub
cmp
cmpsb
fisubrl
sub
mov
sub
popa
xor
fcmovb
pop
ja
pop
cmp
pop
and
lds
and
push
in
push
sarl
in
insl
sub
add
stos
loope
fdivs
pop
rclb
fiadds
inc
pop
push
mov
out
xchg
pop
dec
sti
xchg
lahf
daa
push
hlt
cli
repnz
mov
jne
add
je
mov
sbb
and
add
sub
cwtl
xchg
ss
xor
xchg
loope
inc
jge
xchg
dec
push
pop
jno
pop
pushf
jbe
jo
cmp
xor
jge
and
aad
mov
inc
out
or
sbb
popa
push
test
push
cltd
into
sbb
mov
jo
cmpsb
fs
stc
and
clc
sbb
das
jle
and
adc
mov
bound
lret
pop
add
stos
add
pop
pusha
aas
les
mov
fwait
insl
sar
pusha
out
jp
outsl
sub
ret
push
xchg
cmp
lds
add
add
cmp
and
mov
dec
sbb
mov
icebp
add
jmp
inc
jbe
push
xor
sbb
cmp
push
mov
xchg
mov
and
lret
rolb
jb
xchg
divb
fsubrp
fcmovne
frstor
stc
aas
and
ja
inc
ss
movsl
outsb
scas
sahf
mov
push
nop
mov
sub
xor
or
adc
or
dec
jo
or
mov
mov
mov
push
mov
lret
testb
repz
mov
jp
jae
mov
push
jge
jp
cmp
inc
pop
mov
stc
arpl
jl
jb
pop
insb
pop
sti
mov
scas
add
inc
xlat
leave
test
add
and
rorl
orl
decl
js
push
out
cltd
jle
rorl
push
lock
fidivl
mov
jbe
cmp
mov
dec
cmpl
insl
pushf
fadds
adc
out
sbb
inc
test
lret
int3
test
cmp
js
push
mov
xchg
jmp
jecxz
and
jno
adc
adc
dec
mov
and
mov
mov
sti
shll
cmc
test
and
mov
or
popf
pop
leave
clc
addr16
sub
es
sarl
adc
loope
loop
fildl
test
icebp
cmp
clc
xchg
repz
arpl
scas
jns
add
jecxz
sub
lahf
ja
adcl
lret
out
xchg
xorb
in
pop
das
sarl
xor
push
and
rol
scas
movsl
cmp
scas
pop
sub
mov
scas
cmpsl
xchg
outsb
addb
mov
fidivl
ja
pop
stc
dec
push
push
or
fildl
insb
sbb
iret
xor
int
data16
and
sub
in
xor
cmpsl
mov
mov
icebp
jecxz
js
ds
xor
addr16
shlb
xchg
mov
scas
clc
and
xchg
inc
lods
sar
jg
lods
mov
pop
sub
sbb
and
imulb
mov
xchg
and
mov
xchg
scas
test
xchg
dec
sti
add
xor
cmp
loope
jl
mov
cmpsl
push
fsubrp
sbb
mov
test
fisubrs
fsubrp
mov
adc
outsb
ret
stos
out
sahf
pop
jge
xor
ljmp
cld
test
push
pop
jo
pusha
insb
hlt
lcall
mov
inc
ret
aaa
sub
movsl
cmpsl
mov
sbb
push
scas
xor
push
fmull
mov
adc
dec
jg
jl
mov
cltd
ss
lock
cld
sbb
pop
add
dec
mov
pushf
das
cmpsl
mov
and
data16
push
orl
mov
xor
dec
sbb
sahf
xchg
jg
imul
xchg
fwait
sti
ds
pinsrw
shlb
rol
push
mov
mov
xor
mov
mov
jmp
or
jns
stc
repz
jp
or
cmp
cli
arpl
sub
mov
jb
push
xchg
jl
jbe
sti
mov
push
inc
push
sbb
stos
jmp
in
sub
jae
inc
dec
bnd
pusha
shrb
leave
dec
dec
xor
cld
sub
mov
movsb
inc
jmp
test
leave
jle
jp
loope
fnstsw
or
jo
nop
jl
cmc
mov
sbb
cmp
add
or
mov
sarb
lret
les
sub
ret
or
lods
xor
mov
pop
and
shlb
lret
clc
jns
mov
pushf
dec
add
push
and
jl
ret
cltd
in
pop
or
ja
int
jns
push
xchg
daa
pushf
inc
adc
jno
dec
clc
cmp
leave
int
xchg
jno
mov
jbe
leave
out
mov
mov
lods
outsb
jp
jg
sbb
push
daa
adc
bound
sub
ss
loop
xor
adc
cwtl
jge
sub
pop
mov
xor
pop
sbb
ja
xchg
loopne
mov
mov
popa
inc
jl
sub
dec
loopne
mov
imul
mov
gs
add
mov
or
jns
lahf
and
enter
push
ds
inc
push
lcall
orl
sbb
or
xor
jnp
mov
filds
rolb
push
stc
add
pop
adc
in
mov
or
and
jge
xchg
loopne
lahf
add
push
push
xchg
mov
test
cmp
lock
jle
adc
mov
mov
icebp
pop
adc
test
inc
or
mov
fiaddl
out
and
mov
pop
cmp
and
push
out
add
movsl
or
or
cmc
scas
push
cld
test
xchg
mov
sbb
pop
and
jns
push
iret
dec
sbb
dec
imul
jge
mov
or
xor
stc
mov
mov
cltd
addr16
push
fs
insl
xchg
lcall
xor
hlt
adc
ret
or
sbb
lahf
push
aam
inc
flds
or
dec
inc
mov
dec
add
push
add
inc
mov
xchg
jnp
enter
inc
mov
mov
inc
inc
adc
pushf
add
pop
or
iret
mov
enter
mov
jmp
movb
xchg
cmp
jg
add
pushf
lret
lods
imul
lahf
mov
add
push
fstpt
cmp
xor
int
mov
hlt
das
arpl
cld
pop
mov
rcll
mov
imul
ret
xchg
cmp
out
mov
ss
cwtl
testb
sub
bound
cmp
aad
das
xlat
int
insb
les
loop
pushf
ljmp
xorl
repz
dec
mov
sub
cmp
xor
or
popf
xor
ljmp
pop
jne
push
outsl
and
cmc
push
ret
sbb
imul
mulb
inc
or
test
xchg
xchg
enter
fwait
pop
dec
pop
das
push
cmpsb
imul
xor
push
xor
movsb
cmp
sahf
pop
std
test
pop
loope
out
pop
mov
scas
adc
das
xchg
mov
xchg
mov
addr16
fwait
pop
pop
xchg
sub
pop
add
aas
loope
lods
aaa
mov
xchg
data16
or
cmpb
push
push
arpl
push
jmp
aas
inc
mov
mov
push
push
pop
push
xchg
pusha
fldenv
ljmp
cwtl
fidivl
or
test
or
mov
outsl
and
cltd
lods
xor
xor
daa
jl
or
push
sahf
inc
adc
test
outsb
push
mov
xchg
in
fldcw
mov
lock
xor
out
inc
je
fsubrl
and
inc
out
rolb
cmpsl
fsubrs
push
mov
ret
mov
xor
insb
enter
xor
in
ss
mov
xchg
mov
andb
leave
cmp
into
out
jg
sbb
pop
jo
daa
icebp
dec
adc
in
push
adcb
test
xor
pop
pop
and
jno
ds
or
cwtl
loope
sub
aaa
imul
out
adc
imul
arpl
leave
cwtl
sub
push
cmp
stc
inc
dec
movsb
ret
adc
roll
cmp
xor
iret
fs
call
pop
test
iret
iret
sub
out
mov
sbb
scas
dec
cli
pop
inc
inc
inc
dec
rcrb
xchg
jl
cmp
cmp
inc
inc
cmp
cmp
sub
out
mov
xor
cli
pop
push
dec
jle
nop
leave
test
fimull
and
call
out
mov
aas
push
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
jmp
aaa
or
js
stc
sub
shl
push
cmp
mov
pop
sbb
push
js
mov
les
enter
mov
mov
icebp
and
fcomp
imul
jnp
mov
sbb
add
push
into
dec
inc
fnstsw
jmp
pop
lea
add
imul
sbb
mov
dec
xor
and
mov
cli
shrl
sub
popf
pop
ficompl
cmp
mov
push
push
cmpsb
xchg
pop
loopne
pop
pusha
pop
int3
orl
cmp
out
arpl
loope
inc
aad
push
add
out
lcall
and
cmp
push
mov
movsl
sub
imul
les
movsb
push
dec
push
cmp
xchg
xor
mov
pop
stos
or
scas
outsb
and
mov
adc
stos
in
pop
xchg
xchg
mov
inc
mov
outsb
cmp
lahf
mov
and
pop
repz
sbb
cmp
mov
sbb
push
push
fimuls
jg
lods
add
mov
cltd
mov
clc
sub
aaa
inc
lods
shlb
dec
xor
dec
leave
out
fxch
popf
clc
xor
cmpsl
das
fs
xor
cltd
sahf
es
fcmovu
jb
div
test
sub
inc
dec
jl
lcall
daa
lods
movsb
ss
dec
sti
movb
jecxz
ret
and
ret
imul
xor
or
or
daa
cmc
push
inc
lcall
add
add
inc
or
xor
dec
data16
call
imul
mov
and
pushf
pop
jnp
movsb
add
add
dec
pop
add
cld
adc
and
fistpl
dec
or
lea
xor
testl
pop
lock
ds
jae
xchg
out
sbb
adc
rorb
filds
js
adc
inc
pop
add
pop
lds
dec
pop
in
clc
pop
popf
mov
cli
jno
ja
es
outsb
push
scas
rorb
xchg
ja
xchg
movb
iret
inc
stos
cmpsb
pop
add
mov
ret
jmp
and
fldz
and
mov
lret
les
jo
xchg
push
imul
mov
mov
add
sub
ret
jb
in
loop
nop
jl
stos
cltd
outsb
mov
addr16
push
cli
subb
stos
pop
cmp
lock
test
push
or
ss
js
sarl
out
cmp
fwait
sarb
data16
sahf
xchg
mov
dec
add
jge
clc
std
adcl
dec
lret
sub
gs
out
mov
lods
jg
xchg
test
sti
inc
xor
pushf
cmc
out
test
lds
cwtl
cltd
mov
and
add
mov
mov
nop
sbb
xor
jl
movsb
ss
adc
sub
xor
inc
sbb
mov
outsl
and
daa
rcrl
out
pop
mov
dec
xchg
fisubs
cmc
pop
out
idivb
pop
mov
inc
aad
repz
das
cmp
addr16
insb
ljmp
push
shll
and
add
ret
add
andl
sbb
pop
cltd
mov
pop
stc
stos
dec
sbb
pop
lcall
test
adc
fldcw
pop
in
clc
push
jmp
call
and
jo
adcb
inc
adcl
insb
imul
das
or
dec
inc
mov
movsb
xchg
mov
add
and
fistl
jge
mov
push
mov
cld
xchg
cwtl
or
mov
shlb
mov
pop
dec
and
negb
jge
add
push
lahf
enter
mov
add
adc
popf
pop
cmpsl
cwtl
push
xor
adc
loop
sub
stc
mov
xor
in
testb
xor
roll
pop
pop
jge
jp
push
or
cmp
leave
add
mov
xchg
add
pop
dec
jo
in
sbb
cmp
and
or
or
or
pop
cmp
aam
in
ljmp
ja
dec
loopne
pushf
cmp
cmp
add
mov
sti
jne
jne
ret
popf
shll
in
xchg
in
adc
sub
mov
mov
mov
sbb
fildll
dec
orl
cmpl
arpl
test
pop
pop
inc
xchg
jecxz
push
jo
dec
pushf
xchg
aam
lea
lds
scas
jmp
fimuls
incb
aaa
sbb
cmp
push
call
mov
mov
shrd
shr
shr
xor
jmp
repnz
pop
loop
fsubrs
fimuls
push
push
jnp
stos
push
pop
fiadds
lret
cmpsb
outsl
pop
notl
push
jne
js
sub
xchg
pmaddwd
mov
jnp
mov
and
into
cmp
dec
lret
cmp
nop
dec
sbb
inc
pop
mov
adc
mov
push
dec
fidivrl
mov
add
out
icebp
xchg
lret
imul
add
mov
sbb
and
pop
popa
fldcw
xorb
fwait
xor
push
and
aas
pushl
pop
pop
push
pop
cmpsb
sbb
adc
hlt
nop
push
es
mov
sbb
int3
add
lods
sub
xchg
scas
sub
fs
mov
cmp
testl
insl
fstpl
mov
imul
sarb
movsb
mov
pop
mov
push
repz
jae
dec
inc
sub
fadd
loope
fsubp
popf
in
push
or
inc
adc
iret
jecxz
push
sbb
in
bound
jl
lahf
ret
loope
mov
inc
shrl
ljmp
xchg
push
and
xchg
or
std
xor
push
test
adc
pushf
stos
mov
push
inc
dec
jp
add
fs
jbe
mov
adc
insb
in
rclb
mov
test
popf
push
jne
xchg
mov
pop
and
clc
push
sbb
lahf
and
or
aas
roll
fidivs
fstpt
popf
lea
xor
fwait
notl
popa
dec
mov
jl
test
lret
mov
jle
les
bound
aam
cmp
clc
push
push
mov
dec
adc
aam
jle
inc
in
lods
pop
out
mov
sarl
lcall
test
popf
add
mov
mov
cmp
pop
and
pop
int
lods
mov
lods
mov
or
dec
sti
outsb
sbb
mov
insl
data16
adc
sub
mov
insl
jg
inc
push
popf
push
jnp
shrb
jbe
into
mov
icebp
ss
mov
push
lds
cmp
ret
leave
add
lods
ss
dec
or
call
adc
outsb
lods
mov
imul
fcmovb
xor
or
dec
ret
push
insb
nop
idivl
dec
sub
mov
ss
mov
mov
in
mov
adc
mov
mov
inc
lret
testl
mov
mov
adc
mov
outsl
in
aam
jp
cli
andb
jl
lret
add
mov
sti
sti
test
cmp
fucom
not
add
ret
pop
inc
jb
xlat
add
movsb
in
xlat
addr16
jae
adc
sbb
icebp
imul
addr16
jecxz
dec
cltd
mov
jnp
lds
push
scas
and
icebp
cmp
or
push
lcall
jns
test
pushl
mov
sbb
pop
insl
inc
les
mov
push
mov
push
jnp
sarb
jecxz
sahf
cmp
add
add
testb
sbb
and
add
stos
sub
fcmovnu
sbb
pop
push
cltd
inc
jl
les
mov
imul
sbb
adc
in
pusha
loop
sti
clc
movsl
jne
les
or
xor
xor
sub
dec
inc
add
sbb
loope
fstps
popf
add
les
wrmsr
cmp
ret
dec
adc
mov
mov
mov
mov
jp
mov
push
pop
cmp
movsl
mov
add
pop
adc
and
lods
xchg
lods
cmpsb
imul
jmp
aad
sti
arpl
inc
faddl
cmp
loopne
jo
jge
sbb
pop
jg
imulb
sbb
sub
mov
rorb
inc
pop
imul
das
imul
int
sub
cmp
clc
lret
sbb
lea
scas
mov
les
and
imul
fldenv
fstl
into
sub
out
and
scas
xchg
or
lcall
subb
and
adc
movsl
dec
adc
and
inc
sbb
orb
add
hlt
dec
pop
iret
adc
call
lds
mov
adc
sub
xor
xor
fnstsw
lret
testl
ljmp
call
and
repz
nop
loope
lahf
mov
mov
dec
repz
inc
lock
xchg
jl
das
jnp
mov
mov
repnz
mov
mov
addb
addb
push
lods
or
xor
outsl
cwtl
lods
fimuls
cmovnp
sub
fildll
scas
push
out
push
xor
mov
mov
jmp
in
and
dec
mov
xorb
jnp
push
cmp
mov
test
push
jp
pop
fdivrs
cmp
pop
or
int
mov
lret
xor
dec
sarl
ficompl
dec
sbb
push
andb
addr16
sub
mov
iret
lds
fstpt
into
leave
ljmp
subb
into
xor
adc
shrb
pop
movsl
adc
inc
xchg
clc
arpl
jbe
lcall
and
add
arpl
cmp
orb
ret
inc
inc
inc
mov
imul
adc
pop
cmc
pop
loopne
push
dec
and
das
test
insb
or
jbe
jmp
ret
lods
icebp
cmp
lds
scas
test
mov
orb
or
mov
sbb
sub
cwtl
pop
int
adc
cmpsb
xor
xor
aas
and
shrl
xchg
fst
sbb
hlt
xchg
cltd
dec
inc
pushf
mov
pop
xor
mov
xchg
xor
pop
fsubrl
into
sub
rcrl
dec
or
adc
jbe
jl
mov
jg
dec
cwtl
clc
xchg
pop
push
push
sub
stc
adc
sar
mov
test
inc
jmp
movsb
xchg
xor
movsl
lahf
cmp
adc
and
inc
call
mov
imul
in
cmc
xchg
xchg
push
or
out
lds
movsb
inc
ret
loopne
pusha
sub
xchg
add
add
ret
pop
jbe
ja
cli
pop
add
mov
vunpckhps
nop
jge
sahf
pop
enter
dec
xor
jns
jo
pop
push
xor
int
and
inc
pop
inc
aas
or
fildll
add
repnz
test
mov
adc
clc
jg
add
repnz
cwtl
push
xchg
arpl
ficomps
xchg
fadd
orl
std
mov
in
shl
aad
mov
stos
jg
jns
ficompl
lret
lret
or
jle
mov
imul
xchg
out
loop
cs
test
movsb
mov
and
lea
fisttps
mov
test
sbb
dec
cmpsb
roll
xor
xor
sbb
push
mov
lds
adc
hlt
add
jp
out
and
pop
adc
cltd
icebp
fisttps
mov
mov
pop
adc
adc
mov
jo
sti
mov
add
int
hlt
and
popf
mov
cmp
push
repnz
dec
rorb
das
dec
fsubr
xchg
rcll
je
imul
imul
mov
inc
stos
push
cmp
rorb
insl
lock
lock
pop
push
mov
or
bound
cwtl
shrb
add
lret
subl
or
jmp
xchg
adc
hlt
mov
xor
stos
push
addb
cmpsl
push
std
call
xchg
or
insl
push
lods
jp
sahf
dec
mov
cmpsb
cmc
adc
lods
sahf
jge
xor
sbb
sbb
call
ret
cmp
mov
sub
mov
dec
aad
xor
xchg
stos
scas
mov
rol
cmp
jl
pop
or
dec
xor
mov
int3
mov
adc
jmp
inc
lods
mov
mov
or
das
sub
inc
dec
mov
mov
test
arpl
imulb
popa
dec
int
repz
cmc
cmp
inc
mov
or
ss
stos
mov
lahf
xor
ss
sbb
ret
mov
repnz
out
add
hlt
insl
mov
cmc
mov
and
cmp
xchg
stos
jle
xor
addr16
dec
jns
mov
scas
or
in
push
add
out
test
addl
inc
into
sbb
mov
lret
aas
iret
sub
add
push
mov
hlt
jns
jbe
aas
popa
movsl
cmp
and
cmc
cmp
dec
outsl
fldl
mov
int3
push
jo
adcl
push
in
mulb
cld
repnz
pop
enter
xor
inc
lahf
mov
push
or
mov
fsubr
out
int3
or
xor
mov
sbb
imulb
cmp
push
test
lahf
or
pop
mov
cmp
rol
insb
fstpt
pop
pop
mov
movsb
movsl
push
xchg
sbb
sti
inc
xor
mov
cs
dec
aaa
stc
imul
pop
nop
out
xlat
mov
call
imul
dec
push
sub
adc
xor
pop
dec
nop
cmp
xor
pop
mov
dec
jne
push
or
cmpsl
mov
push
adc
scas
outsb
jo
ds
aaa
mov
push
push
push
call
shld
shl
jmp
lods
jecxz
sarb
sub
hlt
gs
je
lret
xor
push
cmp
jecxz
fmull
push
test
push
adc
imul
out
push
mov
push
mov
add
mov
mov
push
push
dec
sbb
jge
xchg
jmp
js
insb
xorb
and
inc
cmc
adcb
xor
mov
mov
xchg
call
lret
pop
mov
mov
ss
or
mov
adc
jmp
stos
fcoms
iret
jmp
cmc
jo
inc
adc
mov
cmp
and
or
movsb
fstp
mov
stos
orb
ja
push
in
and
shlb
mov
fnstcw
push
and
mov
lahf
sub
xchg
and
stc
dec
test
hlt
mov
outsb
outsb
leave
pop
push
and
xchg
pushf
mov
mov
or
xchg
jno
dec
insb
dec
mov
ret
nop
fcom
push
add
rolb
push
mov
push
inc
shll
dec
insb
sbb
leave
xor
dec
or
xor
jecxz
mov
insb
pop
jb
es
pop
jge
pop
test
fsubl
add
js
mov
dec
jg
je
pop
mov
loopne
pop
pushf
jno
or
jmp
sahf
int3
mov
dec
sti
insl
roll
rorl
adc
dec
mov
test
lret
mov
pushf
or
mov
push
push
inc
lock
hlt
das
mov
stos
cmp
cmp
out
sbb
lcall
stc
aam
fs
insl
lock
aam
loop
stos
lods
fsubrs
add
cmpsb
sub
mov
mov
add
add
jle
mov
push
imul
das
stos
push
inc
and
mov
leave
repz
or
pusha
cmp
in
mov
inc
ret
ljmp
push
push
adc
mov
sbb
push
mov
jne
xlat
adc
ret
pop
loopne
mov
andl
stos
pusha
dec
stos
mov
idivl
sar
jae
and
pop
ror
sub
ficompl
add
testb
clc
push
loop
and
sub
psraw
xor
iret
jl
outsl
adc
fldln2
pop
push
inc
into
fcmove
mov
mov
cli
push
repz
cltd
in
call
mov
or
sub
enter
jmp
leave
rcrb
lret
out
sub
cwtl
mov
mov
hlt
scas
repnz
push
cltd
or
jle
xchg
nop
mov
je
or
push
shrb
lods
lds
aam
xor
dec
lods
movsl
scas
push
je
sbb
bound
sub
jo
test
pop
aaa
pcmpgtd
dec
cmc
mov
addr16
rcll
xchg
sub
pusha
add
mull
mov
pop
dec
repz
dec
cmp
pop
xchg
adc
stos
stos
jnp
ret
cltd
xchg
xchg
test
ss
or
je
sub
lret
out
pop
jecxz
cmp
ss
adc
out
movsl
fs
jns
pop
sbb
dec
lock
lods
and
pop
push
movb
loop
lods
inc
lcall
ds
inc
add
mov
aad
and
mov
mov
xchg
or
ds
adc
hlt
ljmp
outsl
fistpll
cmp
enter
xchg
sbb
xor
lods
mov
inc
pop
dec
push
lcall
sub
lds
pop
je
adc
inc
xor
nop
add
adc
int3
pop
daa
sbb
xor
dec
jg
fbld
cmp
je
sub
repnz
mov
push
jmp
mov
mov
cmpsl
loopne
adc
jg
jecxz
add
testb
mov
push
adc
add
xchg
lret
lret
imul
jmp
push
sti
push
repnz
incl
ret
push
xchg
xchg
call
mov
xchg
loope
xlat
lcall
xor
and
mull
sbb
jle
movsb
fwait
xchg
adc
cmp
std
imull
pop
jl
dec
lock
pop
in
adc
ret
daa
lock
mov
lock
cmp
leave
sbb
push
pop
js
cmp
in
jnp
sbb
pop
sbb
fmull
insl
add
enter
cmp
adc
nop
sub
out
push
inc
sub
lds
jl
cs
ret
add
loop
sub
xorb
mov
dec
or
pop
xor
pop
add
mov
jns
pop
out
jne
sub
xlat
fisubrs
int3
sub
push
into
and
cld
pop
adc
pop
jle
cmp
or
mov
scas
mov
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
mov
or
mov
mov
mov
shl
xor
mov
mov
mov
jmp
testl
mov
test
outsl
or
cmp
mov
adc
push
xor
sbb
push
addr16
jg
sub
mov
into
cli
xor
mov
cld
movsl
add
jae
clc
xchg
jnp
inc
imul
sub
out
dec
or
push
mov
pop
jmp
nop
in
dec
add
lock
daa
mov
cmp
aad
loop
out
jg
imul
push
imul
sub
insb
pop
arpl
inc
std
and
sbb
cmp
shlb
data16
mov
jge
lret
pop
push
mov
loop
repnz
fld
jge
outsb
mov
jle
or
mov
test
pusha
xor
mov
dec
inc
fdiv
popa
cmc
clc
cld
push
dec
pop
mov
sub
outsb
lret
xor
mov
jne
outsb
outsb
ds
cmpsl
sbb
out
frstor
popf
inc
adc
xor
outsl
jl
stos
mov
adc
movsb
jp
add
sub
mov
sub
out
xor
or
cmp
ss
in
mov
adc
fcmove
pop
jp
or
jne
xchg
inc
cltd
jnp
test
movsl
adc
sbb
in
sahf
mov
in
mov
sub
inc
jge
stc
mov
jle
inc
push
push
jg
sub
push
ja
and
adc
cli
cmp
loope
sub
ds
jns
sbbb
and
orb
sti
jae
js
adc
into
aas
movsb
push
sub
icebp
inc
ljmp
jp
inc
sbb
push
jno
cmpsl
adc
subb
aas
fimull
insl
addl
pop
or
es
inc
sbbl
lret
cmp
ret
lds
cltd
ja
hlt
adc
mov
ljmp
inc
jbe
dec
dec
xor
push
adc
inc
loopne
mov
sahf
mov
or
inc
mov
cld
and
sarl
loopne
lds
cmp
adc
out
jmp
stos
fs
int3
repnz
mov
push
sub
divl
sub
push
push
cmp
ds
inc
outsb
out
xchg
xchg
pop
adc
into
add
jmp
pop
and
sbb
pop
cld
jl
pop
js
pop
iret
enter
dec
imul
inc
ret
fdivl
push
xchg
push
mov
xlat
jno
bound
jb
aad
rclb
aaa
jae
test
jmp
or
fistpl
iret
test
ljmp
adc
xchg
cmp
mov
mov
adc
mov
popa
dec
jecxz
mov
and
inc
mov
xor
sub
imul
roll
sti
fcomps
in
mov
dec
mov
sbb
shlb
mov
addr16
leave
movsb
imul
aaa
mov
in
push
pop
dec
test
cmp
mov
ret
mov
adc
xor
cmp
int3
arpl
out
fldenv
push
sub
ljmp
dec
leave
lret
js
mov
mov
sbb
daa
mov
add
dec
lcall
xchg
add
movsl
ljmp
inc
mov
out
cltd
iret
push
ljmp
les
push
je
outsl
jle
dec
push
stos
lret
sub
push
add
jne
cmp
shll
fiadds
lret
out
inc
inc
pop
int
adc
and
fcoms
rcr
and
cmp
jne
pop
push
movsb
fistps
out
imul
push
pop
bound
js
push
push
movsb
and
sub
negl
fimuls
dec
add
nop
sub
std
push
jb
push
and
jle
jle
ss
hlt
movsb
imulb
xor
mov
loope
fdivrp
cmp
aad
sarl
lahf
mul
or
and
fidivl
dec
jbe
mov
or
stos
inc
and
sub
test
mov
lea
lahf
sbb
lret
sub
ret
mov
pop
dec
addr16
or
jl
mov
les
inc
clc
cld
jbe
push
ja
push
loop
jns
mov
sti
into
les
cmc
or
pushf
xchg
arpl
iret
clc
cmp
outsl
mov
mov
or
inc
jmp
add
and
std
push
fcomps
popf
cmp
rcrl
shll
outsb
sub
jg
ret
pop
jge
cmp
popf
sbb
cmp
movsb
mov
ljmp
jnp
into
test
xchg
int3
push
fmull
enter
add
mov
mov
pushf
xor
shrd
jmp
xorl
mov
and
push
test
pop
or
cmp
xor
pop
and
jecxz
jl
mov
push
and
pop
sbb
ret
jns
or
jmp
adc
adc
aam
sbb
pop
ret
aam
cld
addb
add
cltd
xchg
mov
or
mov
sbb
test
sbb
das
cltd
lahf
out
loope
negl
leave
shrw
xchg
repz
bound
push
int
or
js
loope
sub
aaa
push
jbe
push
jmp
or
mov
xor
sub
inc
dec
outsl
notb
ss
stc
fdivrs
push
pop
and
icebp
hlt
call
sbb
and
or
xor
addr16
push
mov
outsb
sub
bound
fisttpll
sbb
or
xchg
jo
mov
or
or
inc
jle
inc
cld
mov
dec
inc
movsb
jg
sbb
mov
lods
dec
daa
leave
mov
inc
rcr
addr16
stos
xlat
lods
jge
movsl
stc
dec
and
push
mov
shrb
xchg
or
sbb
mov
ljmp
addr16
movsb
adc
jl
push
mov
pop
dec
icebp
and
clc
mov
jge
mov
std
mov
xor
out
fnstcw
mov
jecxz
jle
enter
and
mov
das
test
les
or
loop
push
xchg
jl
cwtl
iret
in
pushf
mov
test
fldt
in
ja
xchg
cltd
add
mov
xor
jl
aad
push
das
inc
jae
in
inc
mov
adc
dec
dec
mov
sub
push
loope
flds
cld
and
in
loope
pop
fmul
loopne
push
scas
and
push
in
es
dec
inc
push
into
adc
enter
cmpsb
jle
sbb
or
lea
test
arpl
xchg
cmpsb
pop
jecxz
xchg
ja
or
aaa
or
mov
mov
mov
sar
inc
adc
add
mov
push
fisubrl
cld
xchg
dec
rclb
pop
mov
sbb
imull
je
jge
add
mov
fcmovnb
fiadds
pop
pop
sub
xor
scas
mov
mov
pop
sub
pop
jecxz
xchg
js
jp
push
cmp
adc
pop
pop
sbbl
pop
rcr
gs
xor
cmpsb
mov
adc
loop
test
gs
pop
mov
push
hlt
add
cs
mov
test
ret
add
cmc
sbbb
ss
dec
mov
repnz
aas
lea
or
sbb
fcompl
xchg
and
mov
out
out
dec
cmp
mov
addr16
push
stos
jmp
pop
push
pop
mov
jp
mov
imul
and
mov
inc
int
test
or
pop
mov
mov
inc
xchg
mov
cmp
push
xchg
stc
mov
push
xor
pop
pop
push
and
push
xor
imul
insl
sub
xchg
fwait
in
jge
xchg
clc
aad
cs
cmp
inc
add
push
xlat
test
insl
jne
mov
adc
pop
cmp
push
adc
cltd
js
mov
popa
add
ja
add
push
add
xchg
ss
std
lea
mov
imul
aad
sub
push
xchg
mov
sahf
out
inc
out
arpl
outsl
adc
cmp
lods
push
mov
mov
pop
mov
pop
xchg
mov
sahf
push
sbb
mov
orl
push
hlt
push
and
cli
lods
push
test
shrb
xor
mov
adc
out
mov
mov
mov
out
call
mov
jo
addr16
add
and
xor
adc
mov
data16
std
dec
push
cmp
adc
mov
dec
stos
or
out
inc
test
mov
mov
fwait
clc
adc
ret
push
scas
test
mov
lret
fadds
call
mov
mov
mov
test
xchg
enter
push
inc
fs
sar
dec
loop
cwtl
add
sbb
lret
fisubrl
icebp
in
mov
xchg
fildll
cmpsl
mov
push
add
adc
sub
jmp
sarl
sbb
icebp
fmuls
xchg
inc
pop
test
push
hlt
push
inc
out
or
add
aad
cmp
sub
out
mov
xor
dec
jecxz
adc
cmpsb
add
xor
scas
inc
jns
xchg
clc
or
popa
add
and
adc
iret
fidivs
fwait
cmp
incb
fstl
in
push
jo
jnp
lea
scas
gs
fnsave
ret
push
aam
pop
cmc
push
mov
dec
push
int3
mov
adc
mov
shrl
out
add
jge
or
cmp
jne
cmp
jmp
arpl
cmpsb
adc
xchg
outsb
push
xor
or
cmp
mov
aam
xchg
insl
sub
pop
mov
call
add
adc
or
pop
dec
cmp
in
jmp
sub
jnp
cwtl
xchg
out
push
adc
enter
pushl
pop
cmp
add
pop
and
orb
mov
jg
popa
xchg
push
or
and
pushf
shlb
xchg
push
xchg
dec
xor
push
in
adc
xchg
mov
gs
jmp
and
lahf
pop
jecxz
js
into
divb
lret
xor
scas
arpl
push
push
add
adc
cmpsb
adc
push
nop
and
jl
ds
cmp
lea
sub
mov
stos
aaa
testl
mov
iret
in
jp
stos
jno
and
xor
mov
jle
in
dec
push
cmpsb
inc
and
or
mov
popf
xchg
fisttps
stos
lret
mov
pop
int3
ja
pop
pushf
repz
hlt
js
jne
xor
in
sbb
pop
adcl
add
cmpsb
jns
jle
enter
pop
cmpsl
pop
xor
inc
mov
and
mov
mov
scas
mov
loop
adc
out
inc
mov
mov
daa
frstor
xchg
pop
je
sub
cmp
dec
pop
mov
mov
xchg
mov
shlb
add
mov
lret
aad
loope
rorl
icebp
iret
out
lgdtl
inc
addr16
jp,pn
jbe
repnz
mov
mov
dec
dec
lret
roll
pop
js
nop
xor
mov
out
int
mov
push
cwtl
mov
and
rclb
or
lods
fwait
adc
push
loope
ljmp
jns
dec
mov
sub
fildll
push
xor
mov
cmp
data16
add
and
xchg
andl
and
loop
decl
push
push
xor
lcall
je
mov
loopne
mov
mov
fstps
jno
push
mov
push
shll
arpl
add
decb
lcall
sbb
lret
push
das
xchg
imul
push
mov
adc
xchg
imul
jbe
pop
addr16
jae
push
inc
aad
or
cmp
test
sti
loope
fnstenv
inc
les
gs
sub
inc
bound
out
rcrb
xchg
sahf
xor
insb
mov
sbb
pop
jg
xchg
ret
outsb
orl
xor
icebp
ss
cwtl
cli
or
pop
enter
adc
sarb
lahf
dec
popa
lods
loopne
std
shrb
push
or
test
or
jl
sbb
inc
les
add
xchg
cmpsl
jp
movsl
scas
xor
mov
xchg
xor
fldt
xor
jne
ret
addr16
pop
hlt
mov
pusha
push
rclb
sbb
pop
daa
clc
sub
push
pop
cli
mov
mov
enter
in
add
out
jnp
sahf
add
push
pusha
dec
or
pop
pusha
mov
cltd
or
or
mov
repz
cmp
mull
cmovnp
and
aas
pop
cmp
sub
lret
inc
push
cld
or
inc
leave
mov
and
add
cld
push
pop
mov
out
xchg
insl
or
int
cmpsb
hlt
mov
mov
pop
mov
fcomps
xor
fimuls
pop
aad
or
jl
push
popf
mov
cmp
fcompl
xchg
js
roll
xchg
and
mov
push
add
add
sbb
xchg
iret
sbb
inc
js
add
out
sbb
mov
mov
and
test
sub
xchg
cmpsl
mov
mov
push
push
xor
mov
jbe
jg
aam
cmp
test
add
into
test
sbb
cmp
adcb
jo
dec
test
idivb
imul
leave
xchg
in
mov
xor
fsts
dec
xor
pop
jl
test
add
dec
out
incb
xchg
push
inc
lock
jge
and
and
xlat
fmuls
pop
pop
arpl
push
xchg
arpl
xchg
mov
jnp
call
sub
xor
push
loop
add
icebp
jecxz
sub
xchg
mov
add
push
pop
mov
fnstcw
cmp
out
enter
les
adc
fwait
iret
or
inc
xchg
int
ss
icebp
mov
mov
dec
fmulp
pop
iret
xchg
cmp
lock
dec
loop
sbb
shrl
leave
cmp
pop
mov
in
xchg
std
mov
mov
test
xchg
insl
sub
fisttpll
push
mov
xchg
sbb
and
add
pushl
pushl
pushl
jmp
mov
push
inc
push
sbb
add
mov
push
sbb
ljmp
push
mov
adc
xor
push
gs
jmp
ret
jmp
adc
inc
inc
adc
cmp
lds
test
repz
push
subb
negb
adc
and
dec
sub
inc
push
mov
mov
gs
adc
dec
mov
pop
dec
dec
inc
xor
jo
shll
mov
lret
mov
xor
mov
test
inc
movsl
arpl
xchg
ja
xchg
ret
and
fcmove
push
test
scas
addr16
leave
dec
loop
arpl
mov
push
imul
fmul
ss
push
sub
into
sahf
in
out
mov
sbb
cmp
xchg
pop
xor
jle
in
daa
or
dec
adc
out
ret
or
inc
jl
icebp
sbb
push
mov
push
dec
jno
add
sbb
lcall
in
xchg
lret
stc
imul
popf
loopne
jno
lods
mov
xor
iret
adc
or
or
mov
jne
in
xchg
mov
and
sub
into
and
js
mov
out
xchg
xor
jae
mov
sub
cli
scas
je
xchg
mov
enter
int
lahf
test
das
adc
shll
shll
stos
push
lods
adc
cltd
add
cmp
sti
pop
mov
into
pop
lcall
cs
xchg
sub
dec
repnz
pop
xchg
rcl
bound
mov
dec
and
jl
pop
adc
into
into
inc
mov
or
add
adc
mov
or
xlat
mov
push
mov
ja
cmp
pop
lock
inc
test
xchg
lods
inc
and
xchg
call
aas
add
mov
outsb
push
lds
rcll
inc
mov
cmp
dec
pop
adcl
inc
pop
and
inc
sbb
aam
add
pop
add
fstpt
xlat
fwait
in
gs
ja
mov
fsts
aas
add
push
mov
idivb
cmpsb
out
add
out
jp
mov
pop
xchg
pop
test
xchg
dec
mov
popa
xchg
inc
sub
mov
clc
pop
cmp
popl
rorl
push
scas
push
dec
sub
and
inc
lret
ret
lods
test
vpunpcklbw
xorl
mov
in
pop
sbb
sbbb
leave
sarl
dec
clc
or
mov
ret
int
cmpsb
xchg
cmp
push
fstps
mull
jg
xchg
jb
mov
incl
adc
negl
pop
cltd
inc
adc
loop
or
add
mov
ss
test
mov
pop
cwtl
repz
add
push
adc
mov
push
inc
mov
xor
push
ds
mov
jmp
movsb
sbb
adc
cmc
hlt
xor
sub
addr16
fcmovnbe
mov
pop
enter
out
push
arpl
or
popa
add
sub
add
sub
sub
out
pop
movsl
cli
arpl
test
mov
jae
jecxz
call
jo
pop
mov
cmovl
pop
sub
xchg
in
fadds
and
jmp
repnz
pop
test
xor
fs
sti
orl
dec
popf
cmp
push
pushf
lcall
xchg
inc
out
mov
mov
pop
fs
arpl
arpl
pusha
inc
ja
lock
jne
loop
jg
cmpsl
inc
ret
andb
cld
std
rcrb
push
xchg
jne
dec
sti
pop
insl
pop
gs
dec
lods
push
pop
mov
pop
push
dec
dec
mov
add
popf
nop
sub
push
cmpsb
and
sarl
or
push
cmpsl
adc
je
call
pop
push
mov
lock
mov
adc
popf
sbb
pop
ds
add
and
mov
pop
pop
pop
or
aad
xor
scas
mov
sbb
xor
adc
xchg
mov
xchg
stos
scas
rcrb
fidivl
arpl
jne
movsl
jecxz
push
lret
mov
and
inc
stc
pop
int3
fcoms
xchg
shl
mov
sub
or
mov
pop
xor
bound
jns
in
sbb
and
push
cmc
xor
cld
cmp
or
mov
mov
outsb
and
je
jle
xor
call
push
sti
mov
clc
test
fwait
jns
jmp
jg
stos
xor
mov
adc
cwtl
leave
mov
aad
repnz
adc
test
iret
fwait
add
add
repz
ds
cmc
andl
enter
sar
out
divl
sar
mov
fistl
push
imul
lods
mov
cmp
add
cmp
push
push
jmp
in
inc
scas
sbb
push
mov
mov
or
cmp
stc
test
mov
leave
out
test
jg
js
dec
xor
gs
cli
and
cmp
xchg
adc
fstpl
push
jle
int3
jmp
adc
adc
cmpl
push
xchg
push
xchg
cmp
or
or
data16
add
movsl
out
fiadds
jbe
mov
add
mov
mov
fdivp
jnp
pop
icebp
or
test
das
int3
cmp
rcrl
jne
loopne
push
and
mov
sbb
push
shr
mov
int
in
mov
jl
pop
sbb
sub
clc
fbld
mov
stos
rcrb
mov
jae
je
enter
jne
xorl
in
stc
jl
and
jo
mov
sbb
fldt
jl
insl
mov
pop
mov
jnp
push
lcall
ret
and
push
jno
into
xchg
mov
loop
es
int
mov
mov
jno
and
pop
fistpll
mov
adc
shrl
pop
dec
push
push
stc
inc
cmp
in
outsb
sub
cmpsl
cmp
push
jmp
mov
dec
dec
jmp
popf
xor
shll
loope
std
stos
test
out
out
ret
outsl
insb
xchg
cmp
sbb
cmp
inc
ljmp
lahf
mov
insl
jg
roll
popa
cmovno
stos
mov
clc
xchg
lret
imul
sti
lock
cmpsb
push
adc
push
repnz
lock
getsec
inc
push
or
xorl
mov
loop
and
les
pop
mov
mov
xchg
sbb
sub
arpl
int3
bound
popa
in
push
dec
or
and
mov
pop
xchg
in
cli
popf
insb
mov
in
pop
lret
pop
jno
mov
sbb
les
cmc
inc
sarb
mov
testl
push
and
cmp
dec
sub
mov
cltd
sub
fxch
jge
fdivrs
pop
ret
mov
xchg
jmp
sahf
sbb
icebp
pop
sbb
adc
leave
mov
loopne
mov
inc
outsb
div
mov
xor
inc
lea
mov
or
addr16
sub
arpl
icebp
push
pop
pop
test
or
cwtl
mov
out
cmpsl
sub
mov
sar
push
adc
jnp
and
aaa
and
sub
inc
bound
das
outsb
mov
sarb
mov
cmpsb
fistpll
mov
sti
sub
sub
sub
pop
pop
cmp
push
pop
mov
fldenv
push
les
shlb
setno
std
xchg
bound
and
cmp
add
dec
test
push
xchg
les
mov
adc
int3
pushf
cmp
jmp
dec
shlb
cmpsb
cmp
inc
push
and
mov
jnp
iret
repz
popa
inc
dec
dec
shlb
hlt
cmp
insl
mov
scas
jne
xor
or
cltd
dec
xor
aas
dec
outsb
add
aas
arpl
inc
add
jge
loop
jmp
xchg
mov
pop
mov
cli
jp
jp
cmpb
into
xchg
pop
sub
mov
mov
mov
sarl
cs
mov
lret
lahf
push
in
jne
xor
dec
mov
insl
cmpsb
in
cmp
rolb
test
fcomps
inc
push
movsb
cmp
lret
in
int
int
sub
or
lcall
mov
adc
sub
int
ret
pusha
jecxz
jb
ret
mov
push
and
shl
xor
mov
fidivl
frstor
imul
pop
es
shlb
mov
test
test
jl
jne
cmpsl
movsl
xchg
mov
call
dec
inc
aad
fimull
lea
ja
cmc
sbb
pop
sbb
push
sbb
jne
mov
bound
xchg
jne
jl
mov
shrb
inc
adc
loop
lock
gs
and
mov
ret
mov
daa
pushf
push
ss
sub
push
and
pop
js
loopne
sbb
or
xor
cld
dec
jmp
loopne
sbb
jns
lret
adc
push
insb
mov
or
xor
mov
mov
fsubs
out
and
cmc
adc
xchg
cmp
call
sbb
lods
dec
dec
out
sbb
std
iret
fsubs
inc
sub
jp
outsb
negb
sbb
int
xor
pop
cmovb
mov
sti
jmp
or
mov
loopne
in
movsl
out
ret
dec
fadd
scas
mov
call
xor
fs
out
pop
lret
mov
stos
mov
jne
lock
pop
push
cltd
int3
imul
push
push
mov
push
sti
and
sbbl
xor
xchg
call
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shrd
movl
shr
ret
neg
mov
jmp
fldenv
inc
cmp
pop
adc
inc
xor
push
cmp
in
push
push
nop
xor
repnz
insb
sub
xlat
out
jge
xlat
pop
in
lret
je
ds
inc
out
push
xchg
fadds
seta
mov
xchg
fcmovnb
sub
jbe
pop
lret
pushl
jbe
jnp
push
adc
cwtl
sub
push
or
sbb
pop
fsubr
pop
lods
vmread
inc
lcall
idiv
xor
mov
int3
pop
lock
add
jge
mov
mov
cmp
cli
stos
push
dec
sbb
sub
div
push
iret
inc
sbb
add
jg
stos
pusha
jecxz
repnz
arpl
sbb
fwait
or
dec
sbb
add
rol
test
outsb
fnstenv
xchg
xlat
int3
or
push
add
mov
jo
push
jns
cltd
jp
adc
mov
mov
je
xchg
les
sbb
mov
xchg
inc
frstor
lea
xchg
cmp
lods
test
arpl
dec
mov
sub
out
or
jb
pop
cmp
mov
cs
sbb
mov
mov
adc
adc
mov
lods
jbe
negl
xor
shr
fcmovbe
into
cld
mov
mov
xor
clc
add
mov
lahf
xchg
movsl
cli
push
xchg
cmpsb
add
jbe
lea
cmp
and
or
xchg
push
mov
ret
ljmp
jno
repnz
mov
bound
ret
shr
lret
mov
mov
sbb
cld
mov
sub
add
mov
sbb
mov
sbb
xor
add
hlt
push
and
ret
mov
fmull
imul
sub
in
cmp
sbb
loop
mov
mov
ljmp
bnd
je
rorl
pop
loopne
cli
xor
xchg
data16
mov
inc
xchg
push
iret
test
dec
and
push
xor
popa
lret
stos
dec
lods
subl
cwtl
dec
jp
xchg
or
jle
es
push
pop
adc
xchg
shl
test
cs
add
jl
std
dec
inc
loope
sbb
cmp
push
in
mov
repnz
dec
or
pop
sbb
sub
mov
les
and
push
push
cmp
shlb
cmpsb
or
xor
or
add
aas
xor
push
add
lahf
mov
test
rcrl
sub
loop
outsl
or
test
dec
mov
push
pushf
stc
arpl
sub
insl
jnp
pop
inc
mov
xor
cmc
testl
dec
test
fimuls
mov
jmp
into
lret
lods
popf
loop
xor
rcl
in
xchg
mov
ss
or
addr16
cmp
mov
cmp
loop
fnsave
arpl
mov
add
cmpsl
insb
inc
adcl
sbbl
ret
pop
mov
and
ja
loopne
push
dec
mov
mov
cwtl
sahf
sarb
push
sbb
in
cltd
enter
jns
mov
out
outsl
mov
inc
aas
into
jnp
xor
adc
mov
adc
mov
push
pop
test
in
subl
repz
mov
xchg
mov
pop
outsl
clc
mov
push
inc
sub
cmp
nop
pop
dec
xor
sti
lret
cmp
js
adc
mov
cmpsb
pop
addr16
movsb
arpl
outsl
cmp
jno
mov
hlt
mov
inc
dec
bound
push
add
call
jno
fs
push
jb
inc
mov
mov
xchg
ficomps
push
add
xchg
inc
or
add
into
in
inc
imul
push
pop
mov
push
call
ficoms
and
add
dec
rcr
test
shll
xchg
mov
ja
add
adc
xchg
push
jo
divb
out
or
xchg
add
cmp
and
mov
movsb
pusha
inc
insb
stos
enter
jbe
push
xlat
js
popa
jg
out
pop
and
lret
adc
stos
or
pop
scas
xor
pop
xchg
mov
pop
idiv
sub
xchg
fisttps
mov
xchg
xchg
gs
push
push
xor
aas
gs
inc
notb
enter
push
jge
inc
imul
rolb
ret
xor
xor
ret
push
mov
sub
sub
movl
xor
mov
mov
sbb
mov
movl
sub
mov
sbb
movl
cmpl
mov
mov
mov
jmp
mov
jbe
pushl
call
subl
movzbl
and
mov
add
orl
sbb
sbb
sub
movl
xor
movl
cmpl
mov
mov
mov
jmp
mov
jne
push
call
adc
sub
xorl
dec
movl
movl
movl
mov
subl
mov
jmp
mov
dec
fdivs
adc
std
cs
mov
das
or
push
push
push
mov
cmp
xlat
mov
in
insb
lcall
push
cmp
sti
mov
sti
test
and
dec
or
jg
push
aas
pop
loopne
ja,pt
subl
or
into
sbb
lds
aam
xchg
jmp
pop
out
insb
imul
inc
mov
movsb
xchg
push
cmpsl
out
repz
mov
and
adc
cmpsl
push
jb
cmp
push
mov
push
dec
or
xchg
ds
adc
test
test
mov
xchg
mov
sarl
jmp
jle
jo
es
xlat
not
insb
dec
push
insb
mov
pusha
in
ret
fnsave
adc
push
mov
test
mov
inc
sub
aam
sti
scas
xor
loope
cmp
fwait
sbb
mov
test
dec
xlat
out
or
into
jbe
ljmp
sbb
fldcw
add
inc
mov
in
push
pop
or
dec
mov
lea
sub
push
cmc
idivb
in
aaa
mov
add
lods
scas
inc
lcall
dec
and
icebp
ror
sub
mov
aas
in
pop
test
jg
mov
push
pop
cld
roll
sbb
or
xor
out
sub
adc
imul
mov
sets
jae
adc
cmp
and
mov
mov
add
enter
inc
sub
add
pop
mov
incb
dec
fisubrl
rcll
jbe
sti
je
outsl
lods
fcomps
push
and
in
adc
aad
int3
push
icebp
sub
sub
sub
pop
push
enter
push
jecxz
lea
xor
inc
rep
rcrb
inc
sub
xor
jp
jns
inc
inc
or
sti
outsl
mov
jo
mov
jne
outsl
jnp
push
aas
out
adc
mov
xor
fmuls
xchg
shl
movnti
popf
nop
jmp
rcll
cmp
add
sti
mov
clc
adc
jmpw
sbb
jns
mov
fisttps
mov
int3
rolb
ret
aaa
push
or
dec
in
xchg
jne
lea
test
loopne
xchg
push
fstl
cmpsl
js
mov
dec
mov
mov
cmp
push
push
daa
lret
jae
xor
mov
or
cltd
and
imul
mov
repz
dec
icebp
stos
inc
push
pop
das
lret
test
in
fimuls
xor
sbb
lret
xor
or
ror
mov
mov
lret
sbb
mov
pop
mov
fdivr
out
cwtl
imul
dec
xchg
xchg
fnstsw
xor
mov
dec
adc
out
imul
xor
mov
movsb
insb
lods
push
dec
adc
xchg
pop
push
flds
xor
aas
js
mov
aam
mov
xlat
shrb
enter
out
sbb
pop
int3
aaa
imul
incl
aad
add
pop
jmp
call
imul
mov
or
cmpsb
notl
jbe
inc
cwtl
cmp
mov
sub
inc
add
das
xchg
bnd
sbb
push
fs
mov
clc
cmpsb
sbb
ds
xor
adc
inc
jb
lret
outsl
xchg
sbb
add
or
dec
mov
cmp
push
dec
push
jecxz
orb
cmp
std
outsb
push
orb
pusha
rcl
pop
jle
push
and
or
stc
int
mov
cld
mov
fsubl
cmp
test
ds
addl
sub
mov
push
mov
sbb
cmpl
mov
mov
mov
jmp
notl
jge
push
call
adc
xor
xor
and
sbb
mov
mov
sub
add
xor
xor
or
sbb
mov
mov
jmp
test
sub
cmp
cmc
push
int
or
push
push
push
push
jl
sub
jo
dec
inc
mov
mov
fldcw
cmp
cmp
daa
js
idivb
and
jp
decl
insl
add
hlt
stc
insl
adc
out
in
shlb
rsm
xlat
or
and
cmpsb
sar
icebp
pop
inc
jb
jnp
rcrb
mov
sub
mov
nop
lahf
test
das
push
push
inc
xchg
dec
nop
xor
inc
jno
mov
inc
cmp
push
mov
call
inc
test
jbe
repz
push
gs
rolb
xor
pop
insb
lcall
xor
lea
and
sarb
add
and
jmp
dec
lret
or
mov
jp
insl
pusha
mov
and
fwait
inc
xor
fists
outsb
insb
lods
mov
mov
mov
fcoms
sub
hlt
dec
fcmovbe
add
sbb
mov
xchg
lret
enter
inc
scas
lods
inc
mov
leave
pop
mov
push
jnp
sbb
mov
cmp
icebp
imul
jge
xor
adc
xchg
jae
in
adc
stc
sub
fidivrs
mov
out
int3
mov
mov
jb
cmp
test
in
fsubrs
and
xor
xchg
dec
fisubs
adc
or
sub
std
cmp
sub
jmp
push
add
fldenv
dec
jge
scas
popa
and
add
add
sub
cmpsb
or
xchg
rclb
ds
mov
xor
xor
das
jge
xchg
mov
pmaxsw
leave
pop
icebp
and
jecxz
mov
jnp
movsb
addr16
mov
sub
aas
jp
dec
outsb
out
cmpsb
daa
pop
dec
and
sub
cmpsb
clc
cmp
inc
movsl
sbb
pop
in
ljmp
dec
mov
daa
dec
xor
clc
xor
das
out
int3
jp
lahf
lods
pop
add
sub
aas
dec
push
pop
sub
push
movsb
xchg
mov
push
out
mov
loop
gs
push
mov
sbb
les
aam
hlt
mov
fisttpl
jnp
adc
mov
mov
ljmp
lods
mov
inc
push
add
push
movsb
mov
mov
and
outsl
xchg
or
push
iret
adc
xchg
push
das
sub
jo
mov
movsb
arpl
push
mov
loop
push
jns
scas
push
inc
pop
fimull
jge
mov
ret
leave
jae
mov
insl
jae
lret
daa
fistpll
or
sbb
mov
sub
add
inc
xorb
cli
sub
out
lahf
test
xor
dec
shrb
push
xchg
push
pop
and
lcall
inc
stc
xchg
pop
mov
insb
and
cli
sahf
push
mov
clc
aas
mov
push
scas
arpl
scas
cmc
aaa
lea
mov
nop
or
or
ds
jecxz
ljmp
mov
rcrb
pop
pop
inc
mov
insl
jno
mov
sbbb
test
push
cmp
sbb
loope
adc
pop
cmp
arpl
iret
stos
jnp
fldt
sbb
ja
or
push
jnp
add
movsb
add
mov
add
inc
jp
aas
adc
shl
stos
out
outsb
lods
inc
dec
jnp
dec
xchg
dec
sbb
clc
sub
adc
sahf
stc
leave
xor
dec
jmp
xchg
sbb
xchg
lcall
nop
lret
xchg
pop
and
fldt
daa
sbb
pushf
stos
cmpsb
imul
adc
add
jb
mov
and
lret
adcl
cs
and
pop
jo
cmpsl
jne
jecxz
mov
jg
mov
pop
push
xchg
xchg
jnp
insb
mov
cld
add
jl
scas
mov
sub
xchg
sub
push
xorl
push
jmp
xor
inc
or
xor
and
fwait
ds
jge
or
push
push
push
or
out
xor
fdivrs
jne
cmp
fistl
sub
inc
imul
inc
and
or
jle
pop
in
jg
mov
cli
icebp
loopne
sub
sbb
cmpsl
jnp
stos
imul
pop
dec
mov
mov
pop
mov
adc
adc
aas
fidivrl
dec
out
lret
loope
jge
push
or
cmp
jmp
jne
add
fmull
add
scas
or
test
jl
mov
je
dec
lcall
sbb
pop
int3
or
imul
pop
push
cmp
add
pop
cmc
cmpl
and
insb
addr16
popf
xor
jbe
imul
and
mov
insl
aaa
and
aam
loope
in
push
ss
add
pop
pop
xor
test
push
mov
jp
aas
lret
ret
aad
subl
mov
add
sarl
or
stc
cmpb
ja
jns
adc
push
pop
test
mov
in
cmp
icebp
ss
jb
sbb
orl
scas
aas
mov
pop
and
movsl
adc
rclb
in
test
flds
sarb
sahf
mov
pextrw
push
mov
frstor
mov
lods
in
insl
xchg
xchg
sbb
sub
add
sti
bswap
int
lock
sbb
aas
and
dec
mov
push
inc
int
dec
incb
cmp
loope
xor
stc
sahf
adc
loopne
imul
aam
repz
roll
dec
and
outsb
js
inc
call
ss
add
dec
add
enter
jnp
pop
sahf
add
std
or
fstp
mov
jl
xor
stc
sub
xchg
dec
es
stc
xor
les
andb
add
test
and
jne
xor
movsl
xor
jae
in
inc
je
sahf
call
sub
mov
mov
ljmp
nop
add
ficomps
data16
mov
mov
loop
or
xor
and
mov
pop
ror
je
cli
jl
mov
xor
rorb
mov
mull
cmp
cmp
std
test
lods
out
stos
xchg
add
imul
arpl
mov
pop
mov
mulb
imul
mov
push
mov
mov
push
push
cmp
xchg
mov
shlb
lds
or
icebp
repz
ja,pt
adc
shrb
cmc
dec
rcrl
sub
and
push
inc
les
lahf
je
mov
arpl
ja
sub
mov
and
xchg
addr16
xor
das
sub
cmc
repnz
mov
pop
jle
hlt
push
xchg
cmp
sbb
sub
call
jecxz
or
in
dec
rclb
push
pop
jnp
adc
lret
mov
sub
pop
jg
mov
js
repz
xchg
in
popa
scas
add
sbb
jle
cmp
dec
ret
das
testl
dec
sbb
pop
scas
sub
mov
ret
test
jmp
pop
ljmp
fadd
cs
lods
xor
sahf
lret
addr16
cld
mov
stos
orb
xchg
adc
sbb
or
les
daa
enter
jne
mov
mov
lods
sbb
loope
aas
in
sbb
lret
sub
xor
and
in
xor
xchg
dec
neg
sbb
add
data16
jp
pusha
jae
pushl
sub
add
inc
add
add
adcb
fs
and
outsl
inc
fisubrs
push
push
push
js
in
lods
ret
jns
ror
in
xchg
cmc
sub
jle
lret
cltd
pop
lahf
shlb
xor
xor
or
sub
mov
cli
and
jl
add
push
push
fisubs
cmp
hlt
mov
mov
movsl
negb
cmpsl
inc
mov
stos
add
mov
bound
xor
lret
xchg
inc
xchg
mov
fldl
sub
das
outsl
or
lods
pop
ss
sub
add
out
dec
jns
daa
test
nop
ss
lcall
inc
in
out
mov
jmp
and
outsb
mov
addr16
inc
and
popf
outsl
test
mov
cmp
jle
js
into
sbb
fisttpll
jecxz
shl
jne
sbb
jne
stos
scas
dec
dec
sahf
arpl
dec
outsb
push
mov
pop
add
or
test
ficomps
mov
mov
dec
es
ja
les
out
inc
dec
mov
add
xor
inc
lock
testl
push
mov
adc
or
cmp
jecxz
inc
lods
mov
fnstenv
ja
pop
cmc
push
adc
push
les
jbe
push
inc
xchg
dec
scas
popa
jge
scas
insb
pop
lahf
mov
cmp
in
into
cmp
push
add
fwait
push
sbb
aam
dec
bound
and
ror
arpl
loopne
daa
mov
dec
fiadds
lock
out
mov
jb
callw
test
sbb
aas
push
jae
mov
rcrb
loopne
push
movsb
cli
push
popf
je
push
sti
scas
fistl
dec
lods
add
movsl
adc
fmull
sub
xchg
mov
popf
add
cltd
dec
jne
mov
pop
or
arpl
call
sbb
fsubl
adc
ret
dec
push
mov
pop
jecxz
dec
cmp
ds
inc
push
flds
pop
lahf
push
xchg
iret
inc
or
mov
adc
jnp
cs
pop
or
into
rol
test
test
mov
pop
enter
fisubs
je
jg
inc
jge
mov
pop
jg
shlb
mov
add
mov
xchg
push
lahf
aad
cmp
pop
das
pop
out
out
outsb
jo
lcall
xor
push
or
test
pop
mov
popa
cmp
sarb
loopne
push
jecxz
pop
insb
add
addr16
das
xchg
jnp
test
sbb
sbb
xchg
inc
mov
xor
dec
fsubs
lret
xchg
mov
into
push
push
mov
call
in
ficoms
lea
mov
mov
es
fdivrs
dec
dec
orb
test
movsb
mov
leave
xchg
dec
xchg
push
lret
sarb
mov
sbb
sub
sbb
scas
arpl
test
mov
push
or
pop
xor
fildl
enter
xchg
ja
enter
jg
fiadds
xlat
jecxz
out
stos
cmp
lods
in
cmpsl
xor
dec
jge
ljmp
aaa
cli
jl
test
in
sbb
cmp
add
xchg
lret
sub
sbb
loopne
loop
sub
mov
jno
jb
jne
fwait
mov
push
sub
dec
push
pushf
sub
in
addb
scas
and
pop
add
inc
add
adc
and
push
mov
mov
std
xchg
cmp
push
adc
xor
pop
mov
push
xor
adc
div
mov
loopne
jnp
mov
pusha
in
rorl
lods
lods
and
and
fnstsw
stos
and
adc
or
xor
aad
sbb
fimull
jbe
inc
add
jne
xor
and
sbbl
xor
and
cmpl
mov
mov
jmp
movl
ja
pushl
pushl
call
sub
xor
adcl
and
adc
and
mov
and
cmpl
mov
mov
mov
jmp
mov
jle
push
call
movzwl
sbb
mov
andl
sub
sbb
sbb
mov
or
add
mov
movl
mov
mov
sub
and
movl
jmp
mov
or
and
pop
mov
push
faddl
push
push
jno
mov
enter
lods
ljmp
fldt
sbb
and
pop
and
enter
out
inc
mov
shl
cmpl
cmp
inc
xor
lock
mov
mov
mov
mov
bound
shrl
dec
adc
add
xchg
add
adc
add
dec
out
hlt
mov
lds
inc
cmpsl
loopne
popf
dec
mov
test
push
mov
adc
into
pop
test
out
mov
sub
mov
and
mov
jb
cmp
or
sub
push
pop
in
std
adc
pop
mov
aam
addr16
inc
jns
mov
pop
mov
lcall
cmp
pop
cmp
iret
or
lods
nop
push
cmpsb
inc
dec
jmp
lods
fisttpll
inc
mov
lock
jae
xchg
in
or
jecxz
out
stos
push
pop
xchg
jp
xor
pusha
pushf
dec
mov
pushf
jbe
lcall
call
ljmp
inc
mov
out
mov
jno
int3
xor
adc
icebp
push
xchg
aaa
jmp
xlat
jmp
cmp
jmp
fbld
pushf
mov
test
jl
push
mov
and
cmc
pop
iret
std
mov
adc
loopne
gs
ja
stos
into
cmp
es
mov
movsb
ss
int3
inc
cmp
cs
push
rcll
mov
mov
xchg
or
lcall
pop
scas
cmpsb
outsb
inc
call
dec
inc
cmpsl
or
rol
ss
and
out
dec
cmpsb
fdivrl
jle
mov
xchg
push
popf
fwait
add
decl
add
in
popa
les
inc
cmp
ficoms
cmpsl
push
out
sub
push
jge
rol
inc
fcomps
adc
movl
addl
mov
movl
mov
xor
mov
and
mov
add
push
adc
sbbl
push
negl
and
orl
and
subl
push
push
orl
call
movl
mov
mov
mov
cmp
ja
movl
jb
cmp
movl
jae
adc
movl
movl
sub
movl
cmpl
mov
not
jmp
not
jbe
pushl
push
pushl
push
push
push
push
call
sub
sub
sbbl
xorl
addl
mov
mov
sub
add
movl
xor
movl
movl
mov
cmpl
movl
mov
jmp
mov
mov
jl
push
call
sub
sbb
or
andl
sbbl
adc
mov
mov
mov
add
mov
adc
mov
or
or
add
adc
xor
xor
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
and
mov
and
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
add
mov
adc
mov
and
mov
and
mov
cmp
jne
cmp
je
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
xor
shr
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movb
movb
movb
movb
mov
movzbl
mov
movzbl
shl
cltd
idiv
mov
movzbl
movzbl
or
mov
movzbl
cltd
idiv
mov
movzbl
movzbl
cltd
idiv
movzbl
and
mov
movb
movb
mov
mov
add
add
mov
imul
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
xor
mov
mov
add
mov
shrd
xor
shl
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
mov
imul
mov
imul
xor
or
mov
mov
xor
mov
and
sub
xor
xor
add
div
mov
jmp
movl
mov
movl
movl
mov
mov
or
xor
mov
sub
xor
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
imul
sub
imul
xor
add
mov
mov
xor
mov
and
sub
xor
xor
mov
div
mov
sub
mov
add
xor
add
mov
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
or
push
sub
push
push
movzbl
and
mov
mov
shrd
cmpl
mov
mov
jmp
movzbl
jbe
push
pushl
call
and
mov
add
sub
subl
adcl
xor
or
mov
sub
add
shr
mov
mov
inc
xor
cmpl
mov
movl
mov
movl
jmp
mov
je
pushl
push
push
pushl
call
and
sub
mov
mov
sub
sub
sbb
not
mov
xor
cmpl
mov
movl
movl
mov
jmp
movl
movl
ja
push
push
call
sbb
mov
adc
xor
or
mov
adc
movl
and
sub
adc
movzbl
adc
mov
xor
or
sub
or
or
movl
mov
mov
or
shl
cmpl
mov
mov
movl
jmp
mov
mov
jae
pushl
pushl
call
mov
mov
sub
or
mov
sbb
mov
orl
adcl
mov
mov
sub
or
mov
xor
shrd
adc
xor
adc
shr
mov
inc
mov
xor
xor
or
sub
mov
mov
add
mov
xorl
mov
mov
sub
mov
mov
xor
xor
sub
and
mov
cmpl
mov
movl
jmp
mov
jl
push
call
decl
or
adcl
or
neg
sbb
mov
or
mov
orl
shl
subl
xor
adc
shld
cmpl
movzbl
movl
mov
movzbl
jmp
movl
movl
je
push
push
push
call
xor
add
mov
sub
xor
add
inc
movzbl
or
mov
movl
xor
add
and
mov
mov
shl
and
mov
or
xor
or
mov
xorl
xor
xor
movl
inc
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
mov
and
xor
shld
cmpl
not
movl
mov
jmp
movl
jl
pushl
call
mov
xor
add
andl
sub
xorl
sbb
sbbl
shl
xor
mov
cmpl
movl
mov
mov
mov
jmp
mov
jne
push
pushl
push
call
subl
incl
subl
movzbl
or
mov
sub
adcl
andl
mov
xor
movl
cmp
movl
jne
movl
cmp
je
cmpl
movl
movl
jmp
mov
movl
jg
push
pushl
push
push
call
mov
sbb
xorl
dec
sbb
mov
xor
xor
sub
add
mov
adcl
mov
neg
xor
shl
sbb
mov
xor
shr
orl
or
cmpl
movzwl
not
jmp
movl
je
push
call
sub
sub
mov
or
add
xor
adc
xor
xor
or
and
sbb
mov
xor
mov
mov
adc
mov
mov
xor
xor
sbb
mov
cmpl
movl
movzwl
jmp
movl
mov
jg
pushl
push
push
call
and
sub
adc
xorl
dec
addl
mov
and
mov
or
mov
cmpl
movl
mov
jmp
movl
jg
pushl
call
or
add
xor
dec
orl
mov
push
pop
sub
mov
add
mov
lea
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
inc
xor
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
movl
mov
xor
mov
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
xorl
or
not
mov
movl
jne
cmpl
notl
movl
movl
jmp
mov
jge
push
pushl
pushl
pushl
pushl
push
call
sbbl
xorl
orl
orl
orl
sbb
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
add
mov
mov
sub
imul
add
xor
div
mov
mov
jmp
movl
movl
movl
movl
mov
mov
or
mov
imul
add
xor
mov
div
mov
mov
xor
sub
mov
mov
mov
xor
sub
mov
sub
mov
add
mov
mov
sub
and
add
xor
mov
div
xor
add
mov
mov
sub
imul
add
div
mov
xor
mov
sub
mov
and
or
sub
xor
mov
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
pushl
pushl
call
test
jle
xor
jmp
movl
or
movl
adc
movl
movl
cmpl
mov
not
jmp
mov
jb
push
push
push
pushl
pushl
push
pushl
call
not
add
sbbl
or
add
sbbl
xor
xor
or
add
movl
cmpl
movl
mov
jmp
notl
movl
jbe
push
call
add
movzbl
and
and
xor
xor
or
add
xor
or
sub
movl
or
movl
xor
xor
mov
sub
and
push
cmpl
movl
mov
mov
jmp
mov
movl
ja
push
pushl
push
call
subl
xor
add
xor
mov
sub
mov
adc
orl
movl
mov
or
mov
push
subl
push
subl
push
call
sbbl
mov
mov
sub
mov
sbbl
push
sbbl
push
addl
push
push
sbbl
call
mov
sub
mov
subl
add
movl
mov
adc
mov
subl
xor
decl
mov
xor
mov
or
movl
movl
movl
xor
movl
cmpl
movl
mov
not
jmp
movl
mov
jle
push
push
pushl
push
pushl
push
call
adcl
or
sub
addl
or
movl
cmpl
mov
mov
jmp
not
je
pushl
push
pushl
push
call
sub
and
and
sub
adc
negl
push
not
movl
movzwl
and
mov
mov
or
mov
adcl
push
push
negl
push
notl
call
mov
movzbl
add
mov
mov
subl
push
orl
push
adcl
push
addl
push
movl
call
and
mov
cmpl
mov
mov
jmp
mov
movl
ja
push
pushl
pushl
push
push
call
orl
movzwl
add
mov
movzbl
add
sub
movzbl
sub
adc
mov
xor
add
mov
orl
xor
xor
mov
sbbl
xor
adcl
xor
cmp
jne
cmp
movl
jne
sbb
movl
andl
movl
dec
movl
mov
inc
imul
mov
mov
and
xor
sbb
mov
div
pushl
xor
adcl
and
xor
cmpl
mov
movl
mov
jmp
movl
movl
jbe
pushl
push
push
push
push
call
andl
xor
or
sbb
mov
sbb
subl
pushl
cmpl
mov
movl
movl
jmp
not
mov
jle
pushl
push
call
and
add
sbb
sbb
mov
push
pop
div
sub
mov
notl
sub
adcl
add
sbbl
imul
and
xor
pushl
addl
pushl
pushl
orl
pushl
pushl
xorl
call
not
movl
cmpl
mov
mov
not
jmp
notl
movl
jb
push
pushl
push
pushl
pushl
call
adcl
sbb
orl
sbb
add
or
movl
mov
sub
mov
xorl
sub
movzbl
sbb
mov
mov
xor
xorl
xor
orl
div
imul
incl
xor
sbbl
pushl
orl
pushl
sbbl
call
and
movl
cmpl
mov
movl
notl
jmp
movl
movl
jb
pushl
push
pushl
pushl
call
and
or
or
and
adcl
xor
xor
xor
xor
sub
add
sub
movzwl
and
movl
cmpl
movzbl
not
movl
jmp
mov
not
jg
push
push
push
call
and
dec
mov
or
mov
mov
or
mov
add
movzwl
and
mov
movl
cmpl
movl
mov
mov
mov
jmp
mov
mov
jb
push
pushl
pushl
push
call
movzbl
and
and
mov
mov
sub
sub
adc
xor
xor
adc
xor
movl
add
mov
adc
mov
mov
adc
mov
negl
push
subl
push
xor
xor
push
push
call
addl
add
mov
adc
mov
adc
movl
movl
cmpl
mov
mov
jmp
mov
jle
push
pushl
pushl
push
push
push
pushl
push
pushl
call
and
xor
xor
xor
or
mov
xor
decl
mov
mov
sub
add
movl
adc
movl
movl
mov
xor
mov
xorl
mov
sbbl
mov
addl
movl
andl
mov
call
lea
xor
or
sbb
mov
mov
mov
sub
and
lea
cmpl
movl
mov
jmp
mov
mov
jge
pushl
call
andl
sbb
mov
adc
mov
incl
adc
and
adcl
xor
mov
mov
and
mov
mov
sub
mov
cmpl
movl
mov
jmp
movl
jae
push
push
call
inc
sbbl
xor
sbb
movl
xor
xor
shl
movl
shr
xor
xor
or
or
mov
mov
sbb
mov
cmpl
movl
movl
jmp
movl
mov
jbe
pushl
pushl
push
pushl
call
sbb
mov
xor
add
mov
mov
adc
subl
sbb
negl
lea
addl
mov
or
mov
mov
mov
sub
shrd
shr
mov
adc
mov
adcl
xor
xor
orl
or
mov
orl
push
pushl
orl
lea
addl
push
shl
call
lea
xorl
push
andl
mov
sbbl
mov
lea
push
movl
mov
lea
sbbl
mov
subl
mov
addl
mov
push
notl
call
orl
push
adcl
push
orl
pushl
adcl
call
mov
adc
mov
add
mov
cmpl
movl
notl
jmp
mov
jle
pushl
call
neg
sbb
notl
not
adcl
mov
shr
shl
or
mov
xor
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
xor
mov
mov
or
mov
shl
xor
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
cmpl
movl
movl
movzbl
jmp
mov
ja
push
push
pushl
call
movzwl
sub
addl
xorl
mov
or
mov
sbb
sbbl
movl
sbb
push
and
push
movzwl
and
push
xor
movl
movl
movl
or
mov
cmpl
movl
movl
mov
movl
jmp
movzbl
mov
jae
pushl
push
pushl
push
pushl
push
pushl
push
push
pushl
pushl
call
movl
adc
adcl
adcl
cmpl
movl
movl
movl
movl
jmp
mov
jne
pushl
call
xorl
xorl
xorl
addl
subl
adcl
addl
xor
neg
mov
subl
xor
div
cmpl
mov
movl
mov
movl
jmp
movl
jb
push
call
sbbl
sbb
sub
and
or
add
adc
imul
cmpl
mov
movzwl
mov
jmp
mov
ja
push
pushl
pushl
call
movl
notl
sub
sub
adc
sub
mov
xor
sbb
and
mov
andl
xor
orl
div
addl
sub
mov
xor
mov
cmpl
mov
not
movzwl
jmp
not
jae
pushl
call
add
and
addl
and
negl
movl
or
movl
cmpl
movl
mov
mov
jmp
movl
mov
ja
push
call
andl
xor
add
add
mov
mov
xor
dec
subl
mov
sub
movl
movl
mov
adc
add
neg
xor
xor
xor
dec
imul
sub
mov
and
or
sub
andl
mov
movl
cmpl
movl
mov
movzbl
jmp
mov
jae
push
push
push
pushl
push
call
add
or
xorl
adc
sbb
not
movl
adcl
movl
cmpl
movl
mov
jmp
movl
mov
jle
push
call
or
adc
sub
dec
incl
adc
sub
movl
movzwl
sbb
mov
mov
imul
mov
and
imul
sbb
imul
mov
incl
and
sub
or
cmpl
mov
mov
mov
mov
jmp
movl
mov
ja
push
push
push
push
call
mov
adc
mov
not
xor
mov
mov
add
mov
and
movzwl
add
movzwl
xor
mov
mov
xor
addl
mov
mov
addl
lea
sub
mov
movl
movl
andl
movl
mov
xor
movzwl
or
mov
or
xorl
add
mov
addl
or
and
add
cmpl
movzwl
mov
mov
jmp
mov
movl
jb
pushl
pushl
push
push
push
push
pushl
push
call
mov
add
addl
add
sbb
add
sbbl
xor
mov
movl
sbb
movl
movl
mov
cmpl
movl
mov
movzwl
jmp
movl
je
pushl
call
add
and
add
xor
sub
add
mov
xorl
sub
cmpl
mov
mov
mov
jmp
movl
movl
jb
push
call
add
movzwl
add
and
sub
xor
xor
add
mov
movzwl
or
mov
xorl
lea
not
or
xor
sub
andl
mov
addl
movl
movl
mov
and
add
imul
mov
andl
imul
xor
and
mov
div
adcl
sub
cmpl
movl
mov
jmp
movl
notl
jbe
push
call
not
addl
andl
xor
adcl
mov
cmpl
mov
mov
movzwl
jmp
mov
mov
jbe
push
push
pushl
push
call
add
adc
movzbl
and
sub
mov
add
mov
movl
movl
movl
xor
add
add
mov
or
mov
xorl
xor
div
sub
imul
cmpl
movl
movl
movl
jmp
movl
jb
push
push
pushl
push
call
and
mov
xor
sbbl
notl
adc
cmpl
movl
mov
movl
jmp
movl
movl
je
call
or
adcl
negl
sub
or
adc
xorl
adc
add
dec
mov
sbbl
xor
movzwl
sub
mov
xor
mov
div
and
xor
mov
movl
movl
and
movl
xor
movl
mov
mov
orl
sub
dec
shr
sub
cmpl
movl
movl
jmp
mov
notl
jl
push
push
push
call
add
sub
and
adc
adc
add
addl
sub
mov
imul
xor
mov
xorl
and
mov
andl
sub
orl
mov
mov
sbb
movl
xor
movl
xor
mov
add
or
mov
subl
or
and
sub
mov
mov
adc
mov
movl
movl
not
movl
or
movl
movl
movl
movl
notl
mov
cmpl
mov
movl
movzwl
jmp
movl
jl
pushl
push
push
push
pushl
call
and
subl
subl
sub
inc
cmpl
mov
movl
mov
jmp
movzwl
jg
push
call
mov
sub
not
sub
sbb
mov
or
add
cmpl
mov
movl
movl
mov
jmp
movl
jge
call
xor
mov
or
mov
and
subl
add
and
adc
sub
andl
mov
subl
sub
mov
andl
imul
imul
neg
mov
andl
or
mov
lea
xorl
push
subl
call
neg
mov
mov
sub
imul
and
add
and
andl
sub
or
xor
mov
orl
div
xor
cmpl
mov
movl
mov
jmp
movl
jg
pushl
call
sub
sub
or
add
mov
mov
sub
imul
xor
cmpl
movl
mov
jmp
movl
jb
pushl
push
pushl
pushl
pushl
call
xor
adc
sub
xor
and
mov
mov
sub
xor
cmpl
mov
movzwl
mov
jmp
movl
movl
jb
pushl
pushl
call
adc
andl
or
xor
incl
and
add
mov
movl
inc
movl
xor
or
xor
movl
sbb
movl
movl
cmpl
not
movl
movl
mov
jmp
mov
mov
je
push
push
call
xorl
adc
adc
and
sbbl
add
movl
mov
mov
sub
movl
or
movl
movl
adcl
movl
xor
movl
movl
or
mov
adc
mov
mov
add
mov
xor
and
neg
sub
sub
or
imul
cmpl
mov
movl
mov
jmp
mov
mov
jb
pushl
call
sbb
xor
add
mov
sub
xor
and
decl
mov
lea
sub
mov
mov
andl
mov
mov
xor
cmpl
not
movl
jmp
movl
notl
jae
pushl
push
push
push
push
call
sbb
orl
sbb
neg
xor
add
sub
orl
add
adc
mov
lea
and
mov
cmpl
movl
mov
mov
jmp
mov
ja
push
push
push
call
adc
movzbl
xor
or
or
movzwl
sub
sub
add
mov
cmpl
movl
movl
movl
mov
jmp
not
mov
jae
push
push
push
push
pushl
pushl
push
call
adc
xor
orl
sub
xorl
movl
movl
movl
sbb
movl
or
mov
mov
mov
sbbl
xor
subl
xor
mov
call
cmpl
movl
mov
not
mov
jmp
movl
movl
jle
pushl
push
pushl
call
add
movzbl
add
and
inc
neg
xor
xor
mov
mov
and
mov
mov
xor
xor
mov
adcl
call
or
or
cmpl
mov
mov
not
mov
jmp
not
mov
jne
push
call
xorl
mov
mov
sub
adcl
sub
sbb
sbb
mov
neg
mov
subl
xor
sbbl
xor
mov
adcl
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
sub
push
mov
mov
add
push
inc
mov
or
movl
jne
mov
xorl
mov
mov
add
mov
xor
adcl
div
mov
mov
movl
div
mov
jmp
mov
movzwl
or
mov
mov
adc
mov
mov
sbbl
shr
movl
rcr
orl
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
je
and
add
mov
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
jae
cmp
movl
jae
shld
shl
ret
andl
mov
subl
xor
and
movl
shl
ret
xor
xor
ret
