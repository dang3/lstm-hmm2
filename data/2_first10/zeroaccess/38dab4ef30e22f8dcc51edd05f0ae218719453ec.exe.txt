push
mov
sub
push
lea
push
addl
push
subl
call
xorl
push
incl
xor
inc
movl
push
decl
push
andl
call
xorl
test
movl
je
xor
movl
jmp
push
xor
mov
incl
push
addl
push
call
andl
test
je
sbbl
lea
push
orl
call
jmp
push
inc
mov
push
adcl
push
push
orl
call
andl
test
movl
jne
mov
orl
push
sbbl
push
adcl
call
test
movl
je
orl
push
xorl
push
push
subl
call
adcl
test
jne
push
push
call
xorl
test
movl
jne
addl
push
orl
push
push
call
xorl
test
jne
andl
push
push
sbbl
call
movl
jmp
movl
add
mov
mov
movl
addl
movl
lea
mov
mov
sub
sub
mov
xor
lea
mov
xor
add
xor
mov
mov
movzbl
or
mov
mov
mov
mov
addl
xor
xor
mov
andl
add
mov
mov
cmp
jne
sbbl
mov
mov
inc
mov
xor
addl
add
mov
negl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
add
mov
mov
add
mov
mov
mov
mov
and
mov
mov
mov
sub
sub
mov
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
call
mov
dec
mov
jmp
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
adc
movl
movzwl
xor
mov
mov
xor
orl
add
movl
jmp
adc
mov
addl
xor
subl
lea
orl
push
negl
mov
xor
adcl
lea
orl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
pushl
adcl
call
movzbl
sbb
mov
adc
xor
sbb
lea
mov
add
mov
mov
adcl
xor
xorl
xor
add
xor
mov
sbbl
xor
lea
movl
cmp
jbe
mov
and
mov
mov
movl
mov
sbb
mov
neg
mov
sub
xor
movl
mov
mov
mov
movl
cmp
movl
jne
orl
push
xor
movl
inc
andl
push
push
adcl
call
orl
test
jne
xorl
push
push
xorl
call
test
jne
adcl
push
push
push
call
test
movl
jne
addl
push
negl
push
andl
call
orl
test
jne
sbbl
lea
subl
mov
lea
orl
mov
xor
mov
andl
test
je
xor
mov
mov
xorl
mov
andl
xor
add
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
movl
cmpl
je
cmpl
ja
jmp
push
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
pushl
pushl
call
xor
xor
dec
mov
jmp
cltd
mov
movl
cmpl
je
cmpl
ja
jmp
call
xor
add
dec
mov
jmp
mov
add
mov
adc
and
andl
xor
mov
mov
mov
and
mov
andl
xor
add
mov
movl
adcl
adcl
xor
subl
mov
mov
xor
mov
movl
cmp
movl
jne
mov
mov
cmp
movl
je
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
mov
dec
mov
jmp
mov
orl
mov
addl
mov
xor
add
adc
xor
xor
cmp
movl
jne
cmp
movl
jne
mov
orl
mov
sbbl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
call
jmp
mov
mov
mov
add
notl
mov
jmp
mov
movl
cmp
movl
je
xor
xor
adc
mov
mov
mov
xor
add
movl
cmp
movl
je
xorl
push
xor
inc
sbbl
push
subl
push
adcl
call
orl
test
movl
jne
movl
push
addl
push
call
test
jne
andl
push
push
push
sbbl
call
orl
test
movl
jne
push
addl
push
call
addl
test
jne
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
or
mov
mov
mov
pushl
movl
mov
pushl
movl
add
mov
orl
mov
movl
pushl
sbbl
call
mov
mov
movl
mov
jmp
adcl
push
adcl
xor
sbbl
inc
notl
push
push
call
orl
test
movl
jne
orl
push
addl
push
addl
call
addl
test
movl
jne
xorl
push
push
push
call
test
movl
jne
subl
push
push
call
test
movl
jne
andl
push
push
push
call
test
movl
jne
adcl
push
subl
push
call
notl
test
movl
jne
sbbl
push
push
subl
push
call
test
movl
jne
subl
push
adcl
push
sbbl
call
test
movl
jne
mov
andl
mov
inc
mov
cmpl
ja
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
decl
add
movl
cmp
jne
sbbl
mov
mov
andl
mov
xor
subl
add
cmp
jne
movzwl
and
mov
adcl
push
xor
add
adcl
push
decl
push
sbbl
pushl
andl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
xor
mov
inc
lea
mov
lea
mov
mov
test
je
push
push
push
call
test
jne
push
push
call
test
jne
push
push
push
call
test
je
lea
push
call
jmp
push
push
call
test
je
xor
jmp
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
inc
ret
push
mov
sub
mov
sbb
mov
mov
addl
mov
movl
movzwl
sub
mov
dec
jmp
sub
jae
xchg
xchg
pop
int3
bound
jl
pop
jl
adc
and
popa
pusha
or
insb
insl
xor
fdivrp
push
arpl
stos
jp
push
iret
pop
dec
cmp
dec
jg
mov
jmp
cld
imul
xor
mov
andl
push
mov
fldl
or
and
inc
push
and
mov
sub
mov
jbe
ret
sbb
jb
jnp
xchg
pop
cmpl
cwtl
je,pt
add
sub
push
sti
iret
mov
or
out
push
dec
push
cmp
xor
lods
inc
int3
cmpsl
dec
fiaddl
push
std
push
push
movsl
icebp
bound
push
into
xor
adc
movsl
mov
ja
mov
jl
xor
bound
imul
cmp
es
ret
lds
mov
out
cld
pushf
sbb
js
mov
rcrl
mov
mov
loope
out
in
hlt
hlt
int3
adc
push
loopne
pushl
fcom
fisttpl
jl
jns
sub
enter
ficomps
hlt
movb
mov
dec
sbb
insb
lea
and
in
push
insb
mov
sbb
and
and
fs
in
sbb
mov
pop
aaa
insl
aaa
in
outsb
cmp
iret
or
arpl
sub
inc
imul
icebp
mov
dec
lds
dec
jl
pop
stc
lods
pop
outsb
mov
pop
jge
jo
inc
mov
xchg
mov
xlat
add
jl
push
xchg
lea
data16
sahf
loopne
add
outsb
lcall
and
loope
pop
sub
xor
or
push
mov
movsb
shlb
jae
rcll
mov
fisttpll
mov
mov
mov
mov
imul
dec
xor
push
out
out
movsb
cmp
repz
push
mov
adc
sbb
out
test
xlat
rcrl
jnp
add
out
ucomiss
popf
sbb
and
sarb
push
dec
add
fbld
cltd
out
nop
mov
fnsave
stc
repz
and
js
push
or
inc
inc
sub
nop
adc
or
pop
push
mov
jbe
cld
jg
pmaxub
sub
fstps
push
out
rorb
movsb
data16
sbb
adc
xchg
dec
cmpsb
enter
adc
add
lcall
lods
pusha
outsb
fisubrs
pusha
sub
cld
int
jbe
mov
or
rcrb
data16
outsb
subl
adc
ret
imul
mov
fbld
or
clc
fstpl
cltd
shll
fcoml
stos
dec
in
jl
fcmovb
xchg
dec
dec
mov
sbb
sbb
imull
inc
insb
ret
push
add
or
dec
cmpsb
fstpl
cmp
in
cs
out
loopne
into
add
cwtl
ss
lahf
inc
clc
loop
push
sbb
push
xchg
mov
scas
jle
or
shll
pop
pop
test
stos
mov
pop
xchg
pop
pop
pop
jg
repnz
inc
addr16
jbe
mov
xchg
lods
mov
test
cmp
mov
mov
push
in
mov
push
cmc
arpl
and
lods
rcrl
push
inc
dec
cli
push
jns
fwait
xchg
push
jnp
mov
sub
lock
fsub
mov
jo
or
inc
hlt
mov
jbe
sub
push
int3
mov
rcl
jmp
jp
xchg
inc
loope
jp
testb
pop
std
ret
pop
dec
fldt
push
jge
ss
pop
add
dec
in
or
sub
ds
shll
and
in
push
test
or
rorl
shl
and
dec
gs
inc
clc
pop
idivb
fistpl
inc
jb
lea
fs
cli
cmpsb
add
inc
das
leave
std
sbb
ret
xor
in
and
in
pop
adcl
inc
mov
ds
jae
adcb
repz
das
adc
cmp
call
es
mov
mov
inc
mov
das
negl
inc
std
mov
inc
and
popa
sbbl
mov
jl
lcall
popa
add
dec
cmp
sub
ret
mov
mov
dec
call
or
rol
loopne
enter
cmp
addr16
sti
jl
inc
push
addr16
push
loopne
xchg
pop
out
lods
xor
jbe
jae
sub
mov
aad
push
adcb
and
fmul
cwtl
sub
into
jmp
inc
mov
mov
mov
jo
pop
movsl
hlt
imul
rolb
imul
loopne
aaa
lret
mov
lea
push
stos
repnz
pop
lahf
or
rolb
jns
push
cld
sbb
xchg
cltd
psubq
das
push
iret
inc
loope
je
xor
imul
sbb
cld
jb
sub
pop
sbb
lock
inc
loopne
cmp
adc
gs
scas
pushf
xchg
clc
pop
push
lds
mov
xor
int
shlb
int3
rcrb
sahf
jae
frstor
or
add
ljmp
test
test
jle
and
enter
lret
inc
jns
ret
push
jb
lds
xor
mov
mov
stos
mov
sbb
jge
ret
mov
inc
cmp
dec
sarb
mov
jecxz
lock
mov
sar
mov
xchg
and
adc
sub
push
mov
lcall
test
inc
sub
cmp
adc
push
cmc
dec
push
aas
and
pop
ss
push
add
pop
dec
leave
enter
cltd
lds
pop
push
fucomip
in
mov
cmp
test
out
pop
cmp
xor
sbbl
dec
jb
out
flds
repnz
test
adc
or
mov
add
outsb
add
enter
shrb
lds
cmpsb
stos
mov
adc
out
jns
jnp
push
out
push
fisttpl
ret
hlt
cmpsb
sbb
sbb
mov
xor
sub
addb
fnstenv
nop
test
fstpl
adc
xchg
mov
idivb
in
mov
popf
js
movsb
or
cmp
popf
data16
sahf
fdivs
xlat
fwait
pop
into
xchg
jnp
sub
cmc
add
movsl
aam
jp
ds
inc
mov
sbb
push
mov
or
pop
lret
dec
test
or
and
mov
push
jmp
stos
repnz
jge
jg
ljmp
rorb
cwtl
add
cld
adc
sahf
xor
and
lods
cmp
jle
mov
inc
jnp
xor
dec
inc
setne
push
cmpsb
jmp
add
lock
out
mov
jl
push
lret
cmp
jb
outsl
in
test
mov
call
cmpsl
incl
pop
sbb
add
push
adcb
add
das
mov
out
rorb
add
xchg
fcomip
orb
pop
mov
adc
ss
sub
jnp
or
aam
std
mov
jb
lods
pop
lock
mov
cwtl
inc
add
loop
test
xor
sbb
lret
dec
fildl
aam
or
sbb
add
ss
sub
lds
cli
mov
pop
shrl
hlt
in
fdivp
ret
lds
fmul
popa
cmpb
jno
push
in
push
push
lock
cmp
or
repz
xorb
mov
inc
jecxz
repz
cmp
pop
jmp
xchg
cmpsl
sbb
insl
call
cmp
jle
xchg
pop
mov
xchg
pop
mov
imull
push
add
mov
mov
or
loop
cs
mov
es
xor
cmpsb
xor
fsubl
or
push
sub
jnp
mov
xchg
ljmp
popa
pusha
enter
pop
pop
adcb
xor
mov
pop
cmp
cmp
fldt
adc
addr16
lds
jne
cltd
xchg
dec
cmp
aad
notb
xchg
clc
sbb
sbb
push
cmp
add
incl
hlt
or
cltd
in
xchg
push
mov
push
loopne
jp
outsl
adc
mov
pushf
push
pop
inc
orl
jle,pt
xlat
mov
and
insb
sbb
push
or
mov
cwtl
adc
fisubrl
jns
xor
outsl
and
scas
pop
int3
fidivrl
xchg
stos
in
jbe
cmc
aas
out
sub
addr16
xchg
mov
pop
xor
sub
pop
or
neg
jmp
cmc
push
jo
cmpsb
int
xor
out
inc
popa
dec
data16
jbe
sub
dec
dec
sbb
xchg
lods
out
insb
ja
xchg
ss
xchg
mov
jl
adc
mov
mov
insb
pop
stc
lcall
ret
in
dec
outsb
push
das
cli
lock
sub
adc
les
sbb
inc
or
jg
inc
lds
and
cmc
inc
rcl
sti
clc
std
bound
pusha
xor
lods
or
push
xchg
ds
mov
or
dec
push
mov
jnp
xor
mov
add
rorl
mov
cld
mov
fmul
scas
mov
repnz
pop
bound
scas
xchg
mov
pop
testl
sti
inc
stc
icebp
inc
push
vrsqrtps
cmp
test
iret
mov
fs
test
les
and
pop
mov
data16
rclw
sub
fs
inc
ret
sub
test
add
or
dec
movsb
cmp
mov
adc
xchg
push
mov
mov
adc
mov
sub
ret
xor
int3
dec
test
and
out
pushf
adc
jnp
xor
fs
ljmp
lock
jl
add
loop
frstor
mov
push
pop
out
cmp
push
inc
xor
xchg
xor
xchg
xchg
lahf
cmpsb
lods
testb
mov
sbb
inc
dec
push
jae
push
mov
out
sbb
in
mov
xor
push
and
bound
aad
call
dec
repnz
xlat
jecxz
push
scas
sub
lret
test
cmp
shl
sub
out
cmpsl
push
daa
lods
push
arpl
cs
mov
dec
jl
sar
iret
rep
aad
nop
push
cmp
xchg
ljmp
mov
mov
jb
aaa
fiaddl
jle
out
stos
inc
mov
cmp
xchg
sub
xchg
ljmp
mov
sti
das
outsl
inc
loopne
push
negl
dec
push
push
int
mov
stc
and
dec
adc
sahf
shl
leave
stos
and
lahf
pop
notl
or
and
dec
add
or
pop
or
mov
outsb
inc
fcoml
lds
rcl
cmpsl
jne
lret
scas
jo
xchg
es
dec
jb
pusha
iret
sbb
fisubs
cmp
sub
imul
je
loopne
sbb
dec
push
mov
es
setno
ds
aas
fcoms
xlat
outsb
aas
ficoms
lock
push
jle
pop
iret
inc
out
mul
sbb
or
push
aad
test
shl
filds
inc
xchg
inc
mov
xor
pop
or
dec
dec
inc
inc
push
mov
mov
xchg
ret
jecxz
jg
or
inc
es
out
cmp
into
sarl
popa
ljmp
push
fsubrs
dec
hlt
fidivrs
sbb
int3
cmpsb
push
sub
ficompl
lds
push
mov
push
sub
xchg
pop
pusha
dec
ds
pop
loopne
pop
adc
jne
shlb
loop
jns
xor
enter
shll
aad
adc
mov
popf
pop
test
or
out
out
popa
inc
push
sbb
pushf
inc
lret
lcall
mov
dec
call
lods
push
jae
mov
das
jne
fs
xor
bound
pop
mov
cmp
jb
imul
pop
js
push
push
push
lock
test
mov
imul
testl
sbb
dec
les
jmp
lcall
pop
sub
enter
add
mov
inc
mov
lahf
xchg
cmpsb
cmc
mov
jp
push
call
stos
mov
in
push
cmc
test
mov
adc
aaa
jl
cld
push
jno
out
loopne
sub
clc
stos
sbb
and
adcl
ja
adc
mov
dec
sub
pop
sbb
inc
dec
push
fmul
jmp
inc
push
push
mov
cmp
mov
jg
les
xor
iret
push
xor
jmp
je
mov
sbb
ja
jbe
cmp
int
leave
cmp
dec
das
jb
mov
invd
mov
and
and
and
fidivrs
mov
xor
push
ljmp
push
das
data16
or
insb
xor
cmp
jmp
inc
dec
dec
adc
loopne
xchg
cmp
inc
or
lret
stc
xchg
outsl
pop
test
inc
scas
nop
out
jbe
pop
jecxz
and
dec
inc
mov
lods
push
aad
ret
add
sub
mov
push
cld
notl
cmc
xchg
data16
dec
mov
jbe
test
aad
add
xor
ljmp
out
or
in
sub
cmpl
push
xor
mov
pop
adcb
xchg
test
loop
sbb
loope
out
sbb
lods
aaa
das
adc
mov
shlb
ret
outsb
xor
aad
mov
rcll
and
jp
push
out
mov
inc
push
or
imul
xchg
push
push
cwtl
loopne
xor
test
addl
adc
stos
inc
je
js
dec
xorb
sbb
test
sarl
cld
pop
arpl
movsl
inc
test
xchg
push
imull
add
stos
daa
inc
jle
insl
mov
bound
das
hlt
aas
and
cld
cld
jmp
sbb
xor
stos
sti
mov
dec
flds
cs
mov
xlat
repnz
cltd
cmp
mov
dec
dec
inc
dec
fsubrl
add
inc
call
push
fs
fnstcw
dec
xchg
aam
leave
inc
rolb
lea
stos
mov
les
andb
xor
jno
xchg
frstor
outsl
and
pop
imul
cmc
data16
fs
xor
repz
inc
push
stos
cmp
pushf
adc
roll
add
movsl
cmp
cmp
fisubl
dec
lods
cmp
and
fstps
push
sti
cmp
push
int3
inc
mov
pop
out
mov
cld
mov
dec
fnstcw
xchg
int
push
andl
inc
mov
aad
out
lret
js
cs
rol
test
inc
and
cld
or
jbe
xor
and
cmp
scas
aam
std
fnstenv
sub
imul
jb
push
cmc
mov
test
push
inc
xor
mov
pop
xchg
scas
jg
fmul
stc
imul
xlat
pop
dec
insl
mov
adc
ret
loope
scas
sbb
mov
mov
pop
xchg
jmp
jp
sbb
mov
mov
mov
fimull
push
dec
adc
and
stc
and
repz
mov
insb
push
xor
and
jmp
outsl
mov
lods
mov
icebp
inc
mov
daa
jo
push
xchg
jns
push
andb
mov
sub
and
jmp
push
mov
mov
jmp
les
fisubs
jecxz
ljmp
or
xchg
cmp
clc
mov
stos
hlt
pop
xchg
add
jo
lods
pusha
sub
ret
push
jle
mov
int
xchg
dec
pop
push
mulb
addr16
push
mov
dec
scas
mov
cs
jge
mov
decb
mov
repnz
and
dec
pop
mov
push
xlat
jbe
sub
mov
test
inc
enter
js
filds
jl
lahf
xor
faddl
stos
xor
outsb
push
mov
xchg
aad
push
xor
int
push
and
xlat
jecxz
mov
mov
push
iret
pop
jmp
aam
ret
xchg
xchg
enter
add
pop
cmpsb
or
xchg
xchg
sbb
inc
test
push
sbb
jmp
lods
dec
add
lahf
stos
xlat
les
aas
leave
aam
mov
cmpsl
xchg
movsb
ret
aas
xchg
hlt
cltd
repnz
jmp
mov
push
xchg
ret
pop
xchg
leave
push
pop
cmpsb
ljmp
inc
and
xor
mov
adc
shll
inc
sub
inc
dec
lahf
xchg
aas
cld
out
subl
sbb
jae
jl
add
sti
push
and
push
jmp
push
or
mov
xchg
mov
test
cmp
jp
inc
jmp
hlt
aas
fstpt
cmpsl
test
in
add
rcl
nop
test
lods
ret
jle
mov
pop
or
mov
arpl
test
popf
jno
xchg
pxor
adc
pop
xor
add
mov
sbb
lret
cmpb
jns
xchg
sbb
into
xor
mov
imul
popa
movl
es
xor
call
scas
jns
lods
cwtl
lahf
dec
ja
cmp
adc
adc
dec
ret
mov
cli
pop
mov
scas
clc
movsb
mov
sbb
or
into
mov
push
test
mov
cmp
mov
cwtl
inc
push
push
testb
imul
or
pop
inc
jg
jecxz
mov
mov
adc
add
lahf
data16
or
push
dec
xchg
push
jne
dec
fcmove
repz
scas
adc
jle
jo
pop
mov
pop
insb
das
jmp
mov
imul
push
clc
mov
adc
insb
and
data16
xlat
sub
xchg
mov
jno
scas
sub
mov
and
mov
xchg
imull
sbb
jge
dec
mov
xor
stc
sbb
es
xchg
pushf
mov
clc
jg
out
fnstsw
ret
dec
mov
mov
inc
daa
sbb
xchg
dec
push
mov
xchg
pop
xchg
and
outsb
jno
add
xor
push
js
push
push
xchg
mov
enter
or
xor
jmp
pop
sti
fmulp
sub
mov
in
movsb
jecxz
or
ja
mov
cmp
call
out
jns
lcall
push
mov
test
inc
push
mov
icebp
push
sti
jb
out
jmp
popa
lea
add
push
push
push
outsl
xchg
sbb
and
scas
scas
mov
mov
mov
mov
mov
mov
not
in
leave
cmc
div
mov
popa
test
mov
lcall
sbb
push
bound
jmp
popa
inc
ficoms
shrb
push
daa
pop
inc
mov
psubb
dec
lcall
pushf
add
inc
jg
xor
push
rolb
loopne
adc
imul
pushf
addl
or
mov
inc
mov
or
push
dec
mov
mov
aam
mov
leave
pop
push
mov
hlt
push
jnp
loopne
sti
arpl
insb
call
test
call
sub
mov
scas
outsb
fnstsw
cld
push
js
lods
popf
not
popf
add
jl
xchg
cltd
repz
insb
cmp
sbb
sarl
push
lret
shr
xchg
jb
lds
nop
daa
push
outsb
push
fimuls
xchg
nop
adc
stos
jle
pop
dec
push
sarl
or
fstpl
movsl
dec
fsubs
mov
pop
into
mov
mov
dec
std
fildll
das
and
cltd
lock
movsb
jbe
mov
mov
sbb
cmp
je
sahf
div
add
jmp
hlt
sub
xor
cld
sub
add
or
lret
call
xorl
cmpsb
stc
jmp
cmc
mov
mov
push
mov
pusha
push
xchg
test
push
into
in
lret
shrb
mov
repnz
out
sub
insl
and
das
and
xor
xchg
sti
inc
and
popf
add
cltd
cmp
xlat
ja
sub
mov
std
filds
insl
sbb
inc
and
jecxz
sbb
xchg
test
leave
mov
rcr
push
scas
stc
lea
shlb
pushf
out
cld
insb
mov
lods
ret
sub
ss
imul
pop
jb
fmulp
int3
mov
repnz
mov
sbb
stc
imul
out
cmpsb
inc
and
sahf
and
or
cmp
jbe
js
out
add
xor
cmpsl
repz
int
incl
push
cs
jae
shl
adc
inc
mov
popf
inc
sbb
testl
aad
jo
ret
shll
scas
add
xchg
sar
inc
in
aad
xchg
arpl
mov
aas
ja
mov
xchg
push
jle
insb
adc
xchg
mov
rcr
xor
cmc
repnz
bnd
mov
xor
mov
mov
test
sub
dec
inc
icebp
mov
aas
xchg
xor
jns
and
ret
pop
clc
xchg
not
pop
sub
inc
xlat
leave
imul
js
in
jmp
adcl
lcall
push
mov
cwtl
aas
lret
jle
test
repz
insl
lret
mov
std
push
andb
jecxz
dec
add
push
loopne
sbb
fwait
mov
ds
lock
outsb
ror
dec
cltd
or
fdivr
imulb
lcall
jno
inc
fwait
dec
jne
cmp
loop
fcmovu
mov
sub
sub
pop
pushf
cmp
jecxz
mov
pusha
mov
sbb
adc
and
mov
mov
jns
push
xor
xchg
rcll
sbb
push
repz
inc
mov
mov
push
cmc
stc
or
xchg
pop
cs
mov
xchg
ljmp
enter
jns
adc
mov
rcll
mov
inc
push
xchg
ret
dec
dec
adc
leave
scas
mov
sbb
sbbl
movsl
push
sti
sbb
xchg
fnsave
stc
mov
adc
in
sbb
inc
adc
cmpl
push
push
push
ficoml
inc
lods
cmp
stos
sub
popf
int3
sub
orl
cmp
push
js
shlb
fwait
mov
add
xchg
loopne
rcrl
mov
les
loop
imul
pop
loope
repnz
xlat
outsl
gs
mov
mov
and
mulb
xor
shr
add
lods
cmp
xchg
shrl
gs
adc
push
mov
and
aas
or
adc
nop
sub
and
inc
std
pusha
jmp
sub
les
cmpsl
mov
mov
loop
jp
jge
scas
jne
cmp
fistpl
sbb
xor
mov
xor
int
aas
inc
ds
push
aas
aaa
cmpb
pop
pop
and
add
cmp
push
cltd
push
in
xor
lcall
in
cli
arpl
lock
std
shr
xor
stc
cmc
pop
pushf
push
aas
xor
ja
in
clc
cltd
jnp
jecxz
sub
jno
dec
or
aaa
ss
pop
mov
in
mov
iret
addr16
jg
fidivrl
mov
xor
das
into
sub
daa
rclb
xchg
fisubs
xchg
imul
mov
cwtl
and
sahf
imul
pop
imul
xchg
ret
mov
enter
fdivs
or
inc
loope
push
je
push
gs
mov
xor
or
mov
das
imul
inc
lret
mov
aad
ret
mov
xor
clc
cltd
lods
cs
or
or
sub
popf
and
arpl
mov
mov
sub
icebp
sub
xlat
xor
testl
dec
shlb
mov
dec
dec
mov
mul
dec
xchg
mov
sbb
cld
out
dec
filds
xchg
loopne
or
sahf
pop
sub
mov
mov
nop
outsl
int
dec
inc
fcomp
jge
add
dec
mov
ret
mov
scas
sub
mov
call
fwait
push
lock
pop
movsl
and
pushf
xchg
inc
pop
and
cmpsl
mov
xor
pop
aam
mov
test
jo
dec
sbb
sub
sub
into
mov
xchg
outsb
movsl
pop
stc
aaa
xchg
in
repz
ficoms
or
sbb
ljmp
sbb
inc
rcrl
call
cmp
inc
sar
fdivrs
mov
popl
imul
movb
jg
push
ret
xor
and
test
fistpl
aaa
in
fidivl
int
sarb
add
push
fiaddl
in
add
in
sub
pop
fisubrl
jmp
push
mov
xor
xor
aam
mov
jp
cmp
stos
rorl
pusha
lods
outsl
pop
or
push
lods
mov
dec
dec
sbb
fwait
stos
mov
pop
rorb
pop
pop
jnp
call
mov
aad
add
aad
stos
mov
movsl
dec
or
or
jnp
cmp
movsl
xor
sahf
sahf
aam
hlt
mov
xor
cld
lahf
add
std
mov
fwait
mov
pop
mov
in
and
mov
mov
xlat
rcrb
adc
sub
xor
sbb
out
setns
push
jecxz
push
ljmp
cmp
bound
call
push
inc
and
out
xchg
xchg
jmp
outsl
xchg
imul
inc
lret
jge
aam
sub
pop
mov
xchg
in
mov
jecxz
lods
repnz
out
into
xor
js
lcall
ljmp
adcb
jne
std
aaa
push
aaa
xor
add
addr16
push
in
dec
cmp
pop
jl
call
adc
stos
dec
xchg
dec
mov
inc
nop
insl
dec
add
je
dec
ljmp
aas
and
pop
in
mov
xor
jae
add
cmpsl
shrl
loopne
mov
gs
lcall
sahf
das
ret
mov
lcallw
adc
xor
int3
push
push
test
jmp
int3
cmp
sbb
mov
mov
outsl
mov
push
stos
iret
pop
xor
dec
test
dec
dec
jne
adc
aas
adc
frstor
bound
and
xchg
lahf
imulb
lods
mov
add
in
cmpb
jae
xor
sbb
lea
cmpsb
sbb
jae
adc
jp
fwait
and
in
in
mov
fbstp
inc
inc
xorb
cmp
jecxz
pop
and
push
loop
push
push
cwtl
cwtl
loope
push
ljmp
cmp
loop
in
and
push
jne
imul
out
lahf
in
push
push
mov
add
adc
fcmovnb
jnp
mov
lods
ds
bound
mov
push
in
xor
sub
popa
adc
fiadds
out
ret
in
push
leave
xchg
shll
push
divb
movsb
push
ljmp
sbb
ret
imul
sbb
xor
add
jae
in
pop
or
outsl
pushf
push
jp
mov
pop
loopne
sub
xor
mov
add
dec
loope
xchg
lock
add
pop
adcl
mov
outsl
cmp
int3
inc
inc
outsl
ds
cmp
mov
mov
xchg
lds
inc
sbb
pop
lahf
outsl
pusha
add
cmpb
mov
inc
mov
nop
xorl
cmc
ss
push
sbbl
push
shlb
stos
out
mov
sub
xchg
les
jnp
cmp
fnstenv
mov
add
sub
repz
outsl
mov
jl
xchg
xor
ret
sti
stos
nop
push
mov
icebp
mov
rclb
in
adc
xchg
rolb
loopne
stos
inc
sar
div
xor
jne
imul
jo
mov
cwtl
and
iret
mov
les
add
stos
not
dec
jae
lcall
in
cmpsl
dec
daa
cmp
or
mov
push
fcoms
lock
or
call
imul
mov
aas
mov
jae
pusha
adc
pop
loop
dec
out
push
loope
sub
mov
outsb
outsb
hlt
in
xchg
iret
jns
sub
jnp
inc
push
mov
lahf
das
push
repz
inc
sub
lea
rcr
fadds
xchg
dec
pop
jnp
or
dec
mov
mov
push
mov
jns
shll
jne
addr16
ja
scas
or
ret
pop
jne
sti
out
xor
mov
mov
inc
sbb
in
add
inc
jb
mov
jo
push
inc
add
notl
ljmp
shl
push
or
add
stos
das
mov
outsb
fdivl
stc
addr16
sub
addr16
sub
cmp
mul
iret
xor
dec
popf
dec
xchg
sub
icebp
movsl
mov
sub
jge
dec
xlat
xor
in
insl
bnd
imull
dec
add
pop
xchg
stos
fstpt
pop
iret
jbe
xchg
push
pop
out
popf
shrl
xor
repz
mov
in
cwtl
imul
std
negl
loop
dec
clc
sub
call
jl
jg
lahf
cld
int3
aas
pop
loopne
push
notl
lods
sbb
add
popa
test
stos
outsb
pop
movsl
imull
jmp
clc
fwait
sarl
push
call
adc
aad
movsl
xchg
popf
outsl
clc
xchg
mov
mov
xchg
push
adc
jge
cld
aad
mov
push
and
xchg
jle
mov
loope
cltd
fadd
addr16
dec
push
repnz
int
cli
jmp
pop
mov
fucomp
cmc
push
pop
mov
and
fs
mov
test
jbe
ja
je
mov
or
jge
lods
test
roll
inc
mov
pop
cli
call
mov
out
shrl
lock
inc
aam
dec
pop
jbe
dec
in
and
mov
neg
sbb
test
inc
cmp
imul
leave
pop
in
notl
sub
push
ret
xor
popa
jo
add
loop
add
mov
push
incl
sbb
dec
test
mov
js
outsb
pop
xchg
fsubl
mov
adc
lahf
jns
mov
xor
mov
cli
pop
pop
jp
mov
in
lret
decb
in
push
jbe
jl
pop
jge
clc
ljmp
cld
and
sub
sbb
mov
stos
psrlq
adc
lds
jge
je
push
cld
popa
dec
mov
jmp
and
repnz
pop
in
pop
scas
xchg
iret
std
cmp
sarl
hlt
mov
push
and
repnz
push
or
mov
addl
xor
andl
xor
or
inc
mov
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
orl
push
add
mov
add
movl
cmp
movl
je
mov
sbb
mov
xor
xorl
xor
add
movl
add
adc
incl
xor
orl
mov
push
xor
adcl
xor
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
addl
movl
mov
movsbl
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
neg
sub
mov
xor
movl
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
orl
movl
mov
or
push
movl
adc
mov
xorl
push
xorl
mov
andl
xor
notl
push
mov
add
xorl
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
test
je
and
mov
andl
xor
add
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
mov
or
mov
orl
mov
adc
xor
xor
or
xor
add
mov
addl
mov
xor
add
and
xor
andl
xor
add
inc
mov
cmpl
jg
jmp
push
pushl
push
pushl
call
cmpl
jb
add
movzwl
sbb
mov
mov
mov
and
xor
add
addl
mov
sub
mov
subl
xor
sub
add
adcl
mov
xorl
sub
lea
xor
adcl
xor
movl
cmp
movl
je
andl
xor
or
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
subl
add
cmp
jne
adcl
pushl
adcl
call
mov
sub
mov
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
orl
xor
add
cmp
je
pushl
andl
pushl
xorl
call
sbbl
mov
or
mov
mov
or
mov
subl
xor
add
movl
cmp
je
movl
cmpl
je
cmpl
jb
jmp
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
sub
mov
adc
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
mov
or
mov
xorl
add
sbbl
mov
mov
mov
xor
mov
add
xor
add
xor
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
or
push
add
push
xor
mov
mov
orl
mov
or
mov
andl
add
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
mov
mov
sub
sub
mov
mov
mov
sub
xor
mov
sub
movzwl
and
mov
mov
xorl
sbbl
mov
movl
cmpl
je
cmpl
jge
jmp
call
xor
xor
dec
mov
jmp
mov
movzbl
xor
sub
mov
sub
orl
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
sub
or
mov
orl
sbb
mov
addl
mov
or
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
jmp
push
out
push
jae
jae
das
push
sbb
sbb
pop
jl
dec
pop
jl
fs
call
xchg
dec
test
cmc
adc
daa
imul
aas
push
cli
cwtl
sarl
int3
rolb
ror
cmp
lret
stos
mov
loop
xor
jecxz
bound
xor
cmp
lahf
xchg
push
adc
pop
movsl
not
cmpsb
pop
dec
das
and
pop
lret
jb
outsl
lods
iret
lret
mov
test
jge
les
xor
push
add
das
pop
jns
insl
insb
pushf
xor
dec
rcrb
rol
push
jnp
mov
mov
bound
mov
mov
jmp
scas
loop
pop
fldcw
ret
mov
int3
xor
and
movsb
cmp
cmpsb
sub
out
int3
xchg
cmp
push
mov
std
rcrb
cmpsb
inc
or
push
lea
faddl
jg
rcl
or
lret
push
xor
ret
frstor
add
mov
jle
mov
test
scas
lds
jecxz
lds
xchg
lock
ljmp
in
pusha
dec
loope
push
cmp
insb
les
mov
mov
dec
or
xchg
xchg
cwtl
loopne
fadd
ret
gs
dec
mov
and
sub
push
xlat
adc
xor
sub
shlb
jl
ret
imul
xchg
pop
testl
xor
in
int
je
xchg
fucomp
ds
sbb
sbb
jl
push
fwait
mov
mov
cmpsb
ret
mull
arpl
add
filds
pop
pop
add
iret
nop
cwtl
scas
into
je
cmp
xchg
mov
in
ja
das
arpl
xchg
ret
mov
push
call
mov
movsl
or
fwait
and
jmp
add
sub
addl
mov
dec
cltd
mov
out
inc
cmc
test
push
cwtl
icebp
inc
mov
sbb
jb
or
outsb
cld
pop
js
shrb
dec
lcall
daa
outsb
sub
add
loope
push
mov
mov
popf
out
inc
jg
sbb
mov
pop
fcoms
pop
scas
push
push
xchg
repz
mov
arpl
mov
das
mov
push
and
or
mov
add
outsl
mov
mov
add
insl
add
mov
pop
xchg
inc
inc
inc
popl
jle
mov
mov
add
mov
sub
or
push
ret
add
xor
mov
jp
lea
mov
cwtl
mov
sub
mov
adc
lods
jecxz
xchg
enter
sahf
jmp
push
nop
mov
aam
rcrl
cltd
fsub
pushf
ljmp
out
call
scas
cld
imul
stos
push
or
stos
int
les
aas
iret
inc
iret
fimull
sub
add
and
cmp
xchg
push
pop
aaa
cmp
xchg
inc
out
rorb
inc
jo
ss
das
mov
std
scas
add
aad
sbb
sbb
sub
mov
decb
ljmp
jle
jns,pt
jb
cmp
repz
movsl
js
insl
mov
mov
pop
dec
imul
test
lods
sub
test
mov
cmp
mov
push
stos
jle
repz
adc
cmp
and
andl
adc
lock
pop
jp
std
fcmovu
mov
mov
call
rcll
aam
sub
shl
inc
inc
enter
adc
sbb
mov
xor
sbb
xchg
test
pusha
xlat
pop
sbb
js
imul
xchg
push
push
sahf
add
inc
in
jg
xor
popa
xchg
std
xor
sarl
mov
inc
mov
xor
icebp
jbe
add
inc
push
jp
fcmovu
ja
push
in
xchg
mov
out
data16
jecxz
in
push
nop
add
setle
sub
adc
add
les
xor
fdivrs
in
push
push
cs
push
jbe
out
sbb
and
mov
pop
stos
mov
vmovaps
push
dec
cmpsb
hlt
mov
mov
pop
add
jecxz
aaa
fisttpll
jbe
imul
into
leave
add
add
stos
jg
mov
mov
shll
jmp
in
mov
out
dec
inc
sti
nop
fidivs
push
sub
sbb
push
subb
data16
movsb
dec
mov
and
mov
lcall
xor
push
sbb
test
adc
inc
mov
xchg
int3
and
lods
jne
sbb
jmp
cmpsl
and
add
jg
movl
in
call
outsl
inc
lods
nop
stos
movsb
mulb
xchg
push
in
cmpl
mov
push
sub
mov
insb
pop
cmovs
inc
repnz
push
pop
inc
fsubp
call
mov
push
inc
mov
in
xchg
mov
add
ds
cmp
jge
push
daa
mov
popa
mov
lock
fildl
sahf
clc
xchg
add
sub
mov
daa
out
inc
push
dec
xor
add
cmp
xchg
fwait
pop
out
je
rep
sub
ja
ret
pop
iret
push
ret
jmp
and
inc
arpl
in
daa
jae
sub
cs
fwait
jne
insl
aam
ds
mov
dec
out
shll
lcall
aaa
loope
cmp
push
mov
xor
aad
sub
arpl
dec
cltd
lcall
push
fstpt
pop
aad
jbe
icebp
xchg
push
mov
bound
stos
call
sbb
xchg
loopne
cld
mov
rcrl
adc
mov
push
les
and
test
sub
push
sarb
cmp
jbe
ja
push
sahf
adc
push
ds
mov
cmp
out
xor
or
add
mov
shll
hlt
frstor
cmpsl
lods
pop
inc
dec
and
sub
popa
fwait
notb
pop
xlat
pusha
loop
test
daa
call
inc
sub
push
loop
inc
jb
lock
test
subl
cmp
movsb
out
mov
dec
stc
lcall
inc
mov
jae
sbb
adc
jae
pop
in
out
mulb
jns
lods
cmp
jp
outsl
sarl
xchg
testl
xor
js
mov
rclb
xchg
dec
xchg
nop
test
fisubl
rclb
mov
cmc
push
push
dec
movhps
inc
repnz
mov
sbb
dec
out
popf
or
jbe
sbb
fsubrl
aam
adc
dec
xlat
dec
xor
xor
int
sbb
pop
adc
test
bswap
or
loopne
sub
loop
and
jne
ss
loop
pop
push
dec
sti
fwait
pop
sar
sub
jns
dec
push
pop
cmp
sub
inc
jle
in
push
icebp
sbb
mov
scas
xchg
mov
ret
nop
or
pop
push
dec
mov
mov
inc
mov
pop
adc
nop
shll
mov
add
mov
inc
inc
inc
or
popf
jp
xchg
iret
sbb
push
push
ret
pop
inc
aaa
pop
data16
das
xchg
dec
sub
inc
lret
daa
or
dec
xlat
lds
cmp
mov
leave
es
insl
lock
push
outsl
vmovddup
aas
mov
int
mov
clc
adc
lcall
add
test
or
aam
aad
xchg
inc
sbbb
int3
addr16
jb
pop
inc
add
imul
sahf
cwtl
mov
add
push
call
lret
divb
fnstenv
sbb
les
es
test
mov
outsl
fwait
xor
std
or
call
xchg
adc
outsb
roll
xor
lock
sub
xor
sub
mov
push
sub
decl
jo
out
aas
and
jmp
int
adc
bound
mulb
sbbl
jbe
ftst
data16
test
inc
fbld
mov
test
and
and
pop
das
lock
aas
popf
inc
hlt
adc
fs
mov
in
bound
es
orb
xchg
pushf
fs
sub
jns
cltd
lods
sbb
je
fwait
jae
add
xor
mov
int3
aam
jge
mov
push
sbb
lock
or
jl
or
push
cmpsl
push
test
mov
aaa
push
repnz
test
dec
je
add
cs
mov
jo
int3
daa
hlt
sub
packuswb
jbe
adc
rcrl
fcmovnu
inc
inc
cmc
mov
shll
push
lea
pop
dec
xor
nop
fcoml
jecxz
inc
sahf
mov
sub
cmpsl
dec
cld
add
pop
scas
xchg
dec
repz
mov
jnp
adc
fdivrl
cmc
inc
sbb
out
cwtl
mov
sub
push
xchg
dec
xor
xor
jb
mov
sub
adc
xchg
xchg
cmpxchg
mov
xchg
jb
enter
lahf
mov
lahf
dec
fidivrl
push
int
cli
and
daa
fs
push
mov
cmp
xor
cwtl
fldt
mov
lods
push
repz
pop
adcl
pop
scas
cmp
pop
sbb
out
loop
cmp
aam
mov
imul
or
iret
mov
pop
jbe
jle
and
push
in
je
dec
push
add
sbb
xchg
push
mov
nop
add
push
test
push
jmp
dec
outsl
push
inc
push
push
xchg
je
mov
pop
repz
mov
incl
and
insb
and
sub
iret
jae
dec
mov
lds
test
pop
push
sub
mov
sbb
aam
pop
iret
mov
aas
repnz
and
rclb
xchg
lret
xor
pushf
inc
mov
dec
div
sub
jmp
adcb
pop
fwait
gs
push
pop
or
sub
cld
in
jno
orl
xchg
icebp
cmp
mov
jbe
in
cmp
orl
leave
mov
insl
pop
or
sarl
xchg
lcall
xor
xor
mov
mov
add
add
adc
mov
adc
mov
loope
jb
xchg
add
aas
mov
dec
btc
jg
sbb
icebp
mov
outsb
lcall
jno
push
and
in
out
ficomps
xor
out
ja
push
js
lret
movsl
and
and
into
bound
shrl
dec
mov
push
repnz
bound
cmp
cwtl
lcall
jnp
popa
sbb
mov
hlt
sub
jmp
adc
imul
out
sbb
inc
fwait
cmp
data16
jae
imul
push
outsb
xor
and
jae
inc
cmp
aas
shll
mov
mov
jae
fstpl
mov
and
lahf
dec
outsl
sbb
loopne
push
out
inc
and
dec
xchg
lods
inc
cmpsb
add
mov
jno
sbb
and
arpl
sbb
pushf
fiadds
sub
daa
xchg
sub
out
fisttpl
ds
fs
sti
fsubrs
enter
sbb
xor
xchg
dec
adcb
in
pop
loope
cmc
sbb
lods
cwtl
and
push
adc
push
ret
jle
push
push
xlat
sbb
outsl
jbe
ror
rol
mov
jns
mov
xor
xchg
fs
sub
xchg
jae
test
dec
daa
movsl
sub
jbe
lcall
bound
loope
mov
testl
mov
jnp
imul
inc
jb
fcompl
cmpsb
xlat
and
outsb
or
mov
je
int
sub
fsubrs
and
jg
sbb
pop
ret
out
dec
psrld
inc
jge
jo
shrb
add
es
aad
mov
test
cmp
ficoml
fsub
xchg
test
adc
aam
or
arpl
mov
andl
xor
mov
ret
adc
push
xchg
test
pop
inc
je
add
mov
rcrb
sub
dec
mov
xor
and
movb
insl
pop
xchg
les
aas
enter
mov
push
sar
ja
arpl
shll
xchg
ljmp
outsl
fnstenv
inc
gs
xor
scas
xor
sbb
sahf
inc
scas
and
mov
mov
ljmp
insb
sbb
icebp
push
in
je
xchg
dec
inc
adc
mov
jae
insb
xor
aam
push
dec
inc
mov
lods
xor
pop
loop
outsl
push
dec
xchg
popa
cmp
scas
into
mov
rcl
lods
je
push
pop
push
jecxz
pop
add
int3
jecxz
jmp
mov
mov
mov
mov
int3
mov
pop
xchg
inc
fstp
out
inc
push
adc
pop
sub
mov
ja
aam
add
adc
in
push
mov
cmc
ds
sub
adc
sbb
add
xchg
or
mov
fisubrs
test
nop
push
lods
push
or
push
sub
xor
rolb
xor
jo
mov
dec
pusha
add
outsb
push
daa
cmpsb
xchg
or
enter
jecxz
insl
cwtl
cmp
adc
daa
cmc
mov
jns
dec
gs
in
aaa
jne
rcrl
sub
fstl
das
pop
jb,pn
jge
adc
dec
in
pop
pusha
mov
loope
es
jbe
inc
dec
loope
rcr
sahf
mov
pop
std
pop
fbstp
aad
js
push
repnz
xor
cmp
mov
lock
fdiv
jecxz
std
sub
leave
and
mov
push
xchg
mov
out
cmpsb
mov
loop
jns
push
movsb
push
mov
fucomi
shll
jmp
jne
inc
popf
arpl
jnp
fsubl
mov
mov
imul
aaa
fisubl
pop
push
mov
pop
shrl
jne
mov
or
movsl
dec
cwtl
push
cwtl
imul
push
leave
dec
sbb
rcl
push
xchg
sbb
ljmp
sahf
shll
xor
incb
clc
loop
mov
push
lods
loope
dec
or
pop
cmpb
repz
fs
jo
daa
sub
mov
mov
mov
push
mov
sub
js
ret
outsl
pop
adc
lahf
testb
dec
inc
inc
lds
adc
scas
out
dec
xlat
cmp
push
stos
cmp
movsb
out
adc
sti
fsub
sub
cmp
ljmp
les
js
dec
xor
lods
xor
inc
mov
insl
mov
adc
pusha
xchg
sbbb
ss
xchg
push
adc
xor
pop
sub
outsb
adc
jmp
es
pop
shrb
mov
test
aaa
hlt
bound
jmp
mov
fs
sbb
or
push
arpl
jo
stc
in
push
pop
add
data16
inc
and
add
adc
dec
lods
fs
imul
inc
cli
mov
fcomps
fs
lock
lods
decb
fistps
into
cmp
mov
add
movsb
lea
jge
punpcklwd
cmp
mov
std
jno
stos
mov
ja
adc
jecxz
das
shll
lret
hlt
jnp
jecxz
add
stos
sub
inc
inc
js
fistpl
aad
inc
subl
dec
enter
mov
fcmove
sub
mov
cmpsl
loope
fiadds
mov
adc
stos
mov
add
cltd
sub
test
adc
das
mov
mov
push
fstl
aaa
jno
cmpsl
fimull
aaa
adc
xchg
fcoml
ret
dec
xchg
arpl
mov
adc
fcomps
js
add
loop
lds
xor
jp
jno
loopne
je
pop
pop
dec
sub
loop
push
mov
mov
mov
dec
pushf
sub
imul
in
andb
pusha
dec
jnp
jge
rcr
pop
ljmp
inc
push
test
xor
adc
xchg
add
leave
or
mov
into
daa
imul
loope
pop
or
mov
sub
lret
pop
push
jmp
xchg
cltd
mov
out
fucomp
stos
leave
jmp
mov
jns
jo
sub
lds
sahf
ja
daa
sbb
cmp
dec
hlt
pop
andl
je
add
sub
cli
xchg
cld
daa
lock
aaa
mov
pop
cld
frstor
loop
dec
xchg
sbb
fdivrl
test
mov
mov
lret
adc
int
mov
add
out
repnz
js
lret
int
inc
mov
mov
mov
cwtl
notb
xchg
add
ss
jb
jae
and
out
mov
mov
xor
icebp
inc
lcall
mov
xor
test
cmpsl
cmc
sub
lahf
cmp
arpl
pusha
jbe
iret
or
mov
add
lds
lea
or
loop
fmuls
cld
inc
push
jae
sahf
lods
xor
mov
add
adc
mov
pusha
insb
sub
sti
or
cmp
loop
movsb
jb
test
addr16
sbb
popa
repnz
mov
jo
shrl
push
jb
push
push
or
xchg
out
cmp
inc
sti
and
sub
daa
and
jbe
cwtl
loop
mov
inc
push
data16
add
inc
in
lcall
mov
adc
jge
or
call
movsl
aam
adc
js
insb
pop
in
in
xchg
insb
into
das
push
or
sub
push
and
push
pop
pop
sub
test
xor
push
push
add
push
cmpsb
loop
pop
sub
push
ret
dec
pushf
jb
sub
imulb
jo
mov
repz
cld
lods
sti
neg
outsl
and
lds
dec
cld
ret
insb
fcomi
flds
enter
and
sub
imul
or
lock
insl
cwtl
mov
pushf
inc
cmp
pop
fnstenv
arpl
sbb
jno
cwtl
mov
pushl
jbe
inc
mov
jns
xor
sub
jb
aaa
jno
adc
fists
cmpl
jno
repnz
mov
fisubs
cmp
mov
xor
movsl
test
in
pop
mov
fcmovu
cmp
xchg
in
loop
mov
enter
lahf
ds
out
lods
fs
lods
mov
jmp
pop
push
sbb
in
ljmp
js
jg
mov
push
dec
sbb
dec
sub
and
xor
mov
or
jmp
cmp
push
inc
fcompl
int3
add
rcrb
mov
cmp
mov
mov
addb
or
cmp
xchg
jl
test
adc
pop
push
mov
jbe
mov
repz
push
cmpsl
mov
xchg
lahf
shl
xchg
add
out
inc
jno
add
mov
mov
lahf
mov
fwait
je
in
pop
jp
jge
sbb
push
and
add
testb
pusha
cmpsb
ret
scas
add
jg
loopne
insb
arpl
arpl
jl
test
xchg
xchg
xchg
adcl
xchg
or
andb
cmp
xchg
fsubrs
loope
rorl
push
clc
or
rcr
pop
outsb
enter
mov
repz
xor
mov
pop
subl
xor
imul
loopne
fdivl
inc
or
xor
in
rcll
test
adc
mov
jno
lahf
mov
sbb
mov
sbb
xchg
mov
mov
scas
fisttps
sbb
call
mov
nop
out
ljmp
cmc
lock
iret
outsb
ret
fisubrl
push
mov
xchg
dec
scas
mov
dec
insl
ds
xor
push
dec
lock
xor
fbld
je
ss
xchg
add
ret
adc
jecxz
cld
add
sahf
sub
lcall
push
imulb
adcl
inc
dec
pusha
or
adc
add
stc
pop
ja
in
lcall
jp
mov
imul
pop
mov
lahf
pop
sbb
out
sahf
adc
int3
cmp
je
xor
out
icebp
xorl
outsb
dec
pop
pmullw
std
shrl
jbe
enter
xchg
bound
scas
stos
add
inc
pop
push
push
insl
xchg
fwait
loope
xor
jo,pt
add
ret
lock
or
in
xchg
pop
clc
pop
pop
sbb
mov
fmuls
rcr
jnp
jns
fstl
ss
movsb
jmp
insb
pandn
outsb
inc
inc
stc
mov
pop
cmp
xchg
nop
orl
dec
jp
cmpsl
inc
outsl
or
or
enter
aad
cs
dec
pop
or
lock
mov
outsl
push
dec
sbb
add
js
repnz
and
xchg
or
or
fsub
scas
push
pop
std
jne
lds
addl
pop
xchg
mov
std
pop
jne
mov
inc
cmpsb
mov
fisttpll
jbe
sub
in
sub
nop
insb
dec
jns
ss
pop
inc
xor
sbb
inc
jno
jp
data16
scas
pop
movsb
orb
mov
xor
fisubl
inc
fwait
lea
lods
inc
dec
push
mov
add
sbb
sbb
dec
and
mov
xchg
sub
sti
js
ret
ss
sbb
ljmp
scas
and
push
adcl
jns
cmc
clc
insb
iret
outsb
test
cmpb
notl
movsl
das
aam
and
mov
fidivl
fucomp
mov
xor
clc
loopne
add
jge
lea
fldcw
pop
ret
jae
pop
sbb
les
leave
andb
aad
mov
push
push
imul
loop
aam
mov
orl
jmp
add
cltd
adc
popf
insb
call
out
push
adc
jbe
pop
adc
test
inc
iret
xchg
loop
jbe
cltd
addr16
add
mov
mov
hlt
rorb
and
jbe
push
je
rcrb
mov
dec
and
subb
or
mov
repnz
lret
mov
mov
outsb
scas
rolb
inc
push
sub
ja
mov
insl
pop
jb
stc
lock
pop
clc
daa
movsl
ret
loop
dec
and
out
xor
bts
dec
je
cmc
fisubrl
pop
sbb
cmc
pop
in
push
stc
test
mov
mov
mov
or
in
pusha
popf
shlb
cmp
imul
or
pop
push
pop
dec
ret
sbb
jg
lcall
insl
faddl
jg
xchg
stos
daa
jae
adc
add
xchg
loop
add
into
loop
mov
ret
cmp
lea
xor
mov
out
and
movsl
mov
fisttps
push
lret
pop
mov
bound
hlt
jmp
notb
and
jmp
sbb
mov
aaa
pop
push
cmp
fists
mov
out
add
dec
inc
cmpsl
cmpsl
and
nop
sub
and
test
popf
xor
cmpsl
or
pop
mov
ds
inc
mov
or
rol
pop
sbb
pop
xor
adc
dec
jmp
les
testb
pop
jo
xchg
dec
dec
imul
and
call
lret
cmpsl
jae
loop
xchg
xchg
cmp
add
test
pshufw
mov
push
push
outsl
cmpsl
mov
aad
movb
pop
inc
jns
je
jae
fistpl
xchg
inc
xchg
adc
adc
sbb
push
fs
jne
push
sti
les
xor
xor
mov
pop
loope
out
lock
jp
cmpb
mov
imul
ds
mov
lds
dec
jmp
or
pop
loopne
inc
mov
repz
mov
int
xchg
jns
jnp
or
loop
dec
sub
push
push
push
ret
scas
notl
insl
sbb
scas
push
incl
and
test
inc
inc
xor
mov
mov
fwait
xchg
int
rolb
cmpsb
xor
jp
ret
sbb
sub
cmp
xor
mov
fs
xlat
ficompl
ds
cwtl
pop
sub
js
cmpsl
rcr
and
and
or
push
adc
xchg
sarl
inc
and
pop
cmpsl
sbb
pushf
jg
in
mov
xchg
repz
xlat
cs
jbe
outsl
push
mov
rcrb
sahf
mov
push
xchg
push
and
push
dec
cmpsl
dec
lahf
lret
into
xor
inc
or
inc
outsb
lret
inc
mov
jecxz
stos
loop
faddl
gs
sahf
cmp
call
xor
jge
jge
in
add
outsl
div
xor
jecxz
cwtl
cmpsl
cmp
dec
in
popa
fisubl
insb
rcll
out
lea
mov
lret
test
xlat
aaa
mov
and
scas
inc
push
aam
pop
fcoml
push
xchg
jg
shlb
rcll
add
dec
leave
cmpsl
cmpsb
add
movsl
lahf
pop
aaa
or
and
leave
ret
bnd
lret
push
jb
jg
push
loope
sbb
mov
or
stos
repnz
daa
xchg
or
or
xchg
les
jg
mov
dec
lahf
mov
mov
arpl
insb
andb
jb
inc
mov
cmp
sbb
inc
xor
addb
jbe
or
sub
jno
mov
pop
cmc
jle
mov
xor
popf
lahf
xor
stos
jmp
subb
das
fimuls
adc
lods
lods
xchg
push
sbb
imul
inc
cld
or
ljmp
push
and
aas
sub
inc
into
inc
stos
add
add
xor
stc
lea
daa
push
or
cld
aad
cmp
xchg
mov
inc
int3
int3
inc
and
sbb
xor
hlt
lds
lahf
cmp
or
pop
mov
sub
fmull
cmp
clc
sub
sbb
push
mov
jne
jl
divl
and
or
rorl
fisubl
test
sbb
orb
test
fbstp
pop
clc
clc
imul
int
arpl
test
ret
inc
leave
jge
insb
cmp
or
cmpsb
and
sbb
fnstcw
movsl
sbbb
xchg
adc
jnp
sbb
dec
dec
sbb
push
js
and
jae
mov
jl
sub
shrb
call
xor
sarl
jnp
movaps
loopne
xchg
iret
into
test
dec
in
jns
ret
adc
pop
adc
xchg
test
aad
push
pop
jnp
pop
sbb
inc
shrl
adc
andl
faddl
jns
xchg
outsl
out
dec
or
int
addr16
push
cmc
daa
push
test
lods
sub
mov
imul
cltd
in
data16
or
mov
xchg
mov
jb
leave
and
mov
and
jae
je
sbb
rorl
sub
scas
cwtl
cmp
xor
dec
mov
je
or
cmpsl
mov
push
mov
outsb
push
stos
test
js
xchg
push
push
mov
adc
aaa
sbb
xchg
pop
sbb
push
mov
sbb
jns
cmp
add
xchg
adc
xchg
push
sarl
dec
arpl
jb
dec
push
ror
mov
movl
and
cmp
xchg
xor
aad
ret
pop
mov
mov
cmp
fcmovbe
adc
lcall
icebp
adc
mov
push
scas
adc
aad
rorl
push
mov
pop
mov
popa
xlat
pop
pop
cmp
push
sbb
andl
jle
push
mov
pushl
mov
pop
cwtl
mov
shlb
mov
lods
pusha
and
inc
outsl
mov
into
icebp
xchg
cmp
mov
movaps
cmp
sub
or
and
adc
outsl
data16
fwait
add
repnz
sub
out
push
jns
push
stc
push
ss
mov
mov
sbb
and
iret
adc
loop
xlat
dec
clc
xor
dec
inc
daa
and
xchg
andb
xor
xchg
iret
mov
xchg
les
or
or
push
sbb
or
cmc
dec
add
sub
push
and
dec
sbbl
lock
jo
stos
loope
mov
ja
pop
jns
rcl
pop
adc
scas
fldl
xchg
sarl
cmp
ret
out
cwtl
scas
repz
fcomi
aam
pop
adc
inc
shll
mov
dec
aas
inc
and
xchg
lret
xchg
lahf
push
pop
divb
int
fwait
mov
mov
dec
and
mov
out
ficompl
mov
xlat
dec
adc
sub
stos
test
dec
pop
push
fimuls
dec
repnz
push
pop
add
cmc
test
inc
into
insb
xchg
scas
or
fdivl
sub
cmpsl
stos
sub
adc
test
lods
scas
sbb
loop
test
mov
outsb
mov
xchg
or
mov
popl
shlb
dec
and
enter
push
cmpsl
push
jl
xor
xor
mov
xchg
push
jb
int3
movsl
sub
nop
fmul
xchg
notl
pop
in
xchg
mov
bound
or
pop
mov
pop
rcrl
popf
inc
sub
jno
stos
jmp
xchg
sub
xor
fcompl
cmp
fsubrs
push
sbb
rcrl
lds
inc
pushf
sbb
shrl
inc
sub
enter
insl
mov
pop
fcoms
movsl
mov
add
or
outsb
pop
mov
mov
fwait
adcl
arpl
push
hlt
push
jo
ss
cmp
xchg
clc
add
or
mov
data16
xor
pop
sub
inc
je
pop
and
test
mov
sbbb
cmp
hlt
xor
or
push
inc
mov
adc
cmp
mov
out
jns
inc
push
sub
lahf
hlt
and
test
adc
mov
dec
inc
into
mov
dec
ja
mov
fwait
shlb
sbb
or
cli
sbb
rcrb
mov
jge
push
mov
sub
xor
cld
in
xchg
dec
pop
cmpsl
test
push
mov
insb
mov
test
mov
xor
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
adc
mov
adc
push
xor
mov
xor
mov
lea
adc
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xor
add
adcl
mov
subl
mov
sbb
mov
orl
mov
addl
add
push
mov
mov
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
mov
adcl
xor
mov
add
movl
cmp
movl
je
movl
mov
movl
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
cmp
jne
sub
mov
xor
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
add
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
mov
or
mov
adcl
xor
adcl
add
xorl
imul
mov
andl
xor
sbbl
add
movl
cmp
mov
movl
push
movl
je
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
xor
mov
mov
andl
xor
addl
add
xorl
imul
movl
mov
jmp
movl
cmpl
je
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
jmp
lahf
xchg
jle
emms
xchg
ljmp
test
pop
jl
pushf
repnz
cmpsl
xor
pushf
add
pop
stos
sub
xchg
mov
sub
pop
lret
lock
xor
ds
shl
test
dec
pop
xchg
adc
sub
jae
fs
adc
outsb
shll
sbb
loop
loopne
fiadds
cmpb
jae
shlb
and
push
ret
push
push
lret
mov
loopne
cmpsl
roll
jle
mov
sti
dec
out
aaa
sub
jge
cwtl
stc
or
addr16
inc
pushf
fwait
jp
nop
hlt
or
lcall
push
inc
jns
push
push
stc
mov
jb
sub
xor
test
pop
popf
inc
and
js
and
xchg
dec
repz
ja
push
pop
jl
jae
jne
out
jo
pop
cmc
sub
lret
xor
inc
das
mov
or
shll
jae
movsl
shlb
call
mov
sub
sbbl
in
pop
test
or
pop
insb
xchg
jno
rcrb
in
pushf
adcl
dec
sbb
rcll
cwtl
sbb
mov
xchg
clc
in
xchg
sbb
jae
loop
scas
pop
loope
pushf
adc
jmp
and
jo
mov
inc
or
inc
adc
sbb
dec
jne
sbb
xlat
fsubrp
enter
popf
sub
add
out
addr16
xor
lods
out
pop
out
lcall
fs
loopne
shl
outsb
leave
lcall
xor
mov
pop
cwtl
pop
push
aas
daa
dec
andl
fildl
pop
sbb
mov
xchg
inc
jg
push
or
les
push
push
pop
jmp
les
or
xor
add
clc
pop
popa
jb
fbld
xchg
cmc
dec
lcall
movsl
cmp
movhps
sub
stc
push
sub
dec
clc
mov
push
cltd
pop
add
jne
lds
or
adc
int3
cwtl
add
pop
cmpl
cs
jbe
jg
mov
pop
and
push
out
cmpsl
test
xchg
mov
pop
mov
inc
mov
sbb
add
popa
mov
lea
push
pop
xchg
cmp
gs
adc
mov
sbb
mov
pop
mov
cmp
ss
addr16
test
mov
sbb
cmp
cmpsl
pop
sub
dec
inc
and
out
and
stc
mov
dec
xchg
jge
mov
sub
outsb
xchg
cltd
mov
cmp
addr16
nop
int3
ret
and
stos
fildl
loopne
mov
iret
lahf
sub
and
adc
xor
inc
fsubrp
les
lea
sbb
mov
inc
dec
cli
xor
cld
das
psllq
sahf
into
stos
pop
mov
ds
push
sbb
xor
xchg
je
imul
lret
or
cmp
fidivrs
out
xchg
psubusw
scas
sbb
sub
xchg
in
sbb
aas
ret
xchg
into
jbe
andl
fsubl
adc
pop
ss
mov
cmp
lea
aam
cwtl
xchg
mov
hlt
repz
dec
jp
or
and
les
sub
adc
xor
pop
cmp
mov
pop
out
jnp
aad
ficoml
sbb
test
or
mov
repnz
ds
push
dec
adc
shl
pushf
inc
pop
pop
dec
xchg
pop
mov
aaa
mov
pop
xor
jmp
jb
mov
xchg
cmp
rol
jnp
mov
or
cmp
rolb
or
rcrl
jl
sbb
aas
insb
sete
mov
aam
adc
cld
xchg
adc
dec
ja
push
test
adc
popa
jo
lahf
sahf
hlt
fwait
xchg
in
mov
aad
mov
adc
push
jns
xchg
arpl
ljmp
push
fdivrp
outsb
call
popf
xor
mov
cmc
sub
push
lea
sbb
jno
movsb
aaa
lea
pop
push
outsl
and
sbb
adc
lret
or
bound
nop
and
test
sub
mov
rorl
adcb
push
arpl
orb
inc
gs
and
and
bound
adc
fstps
fmull
test
inc
repz
orb
mov
cmp
cmp
or
gs
roll
pushf
pop
mov
mov
dec
popa
pop
push
mov
sub
pop
jns
inc
pop
call
mov
or
pop
adc
dec
push
gs
nop
idivb
data16
outsl
mov
mov
pop
jmp
pop
mov
mov
add
stos
xchg
repz
sbb
jne
js
add
ljmp
das
sub
cmc
dec
sbb
or
jl
cmp
cmp
push
push
ljmp
and
orl
loopne
mov
jl
iret
fistpl
push
sub
push
movsb
jno
mov
rcl
and
sub
dec
jo
inc
cmp
adc
das
cmp
popf
lea
cmpsb
push
das
stos
fstpl
adc
fadd
add
stc
pop
fcoms
xchg
pop
gs
mov
and
dec
pop
fdivs
ss
xchg
xchg
cmp
movsl
idivb
cwtl
in
lret
fistl
lahf
aad
scas
and
movsl
and
fs
and
popa
jmp
or
xchg
fwait
in
and
xchg
in
mov
fcompl
movsl
jecxz
xor
mov
add
lahf
jb
out
adc
std
and
clc
xchg
aas
push
pop
repnz
pusha
mov
cli
outsb
cwtl
or
aam
in
addb
dec
lods
or
mov
hlt
rol
imulb
ret
mov
mov
pop
sbb
daa
jp
xor
cmp
inc
cld
inc
shl
mov
movsb
cli
data16
nop
rcl
dec
mov
mov
push
xchg
mov
push
cli
addb
inc
mov
push
cmp
push
pushf
mov
sti
divl
push
sbb
jl
pop
adc
rcl
leave
jmp
movsb
mov
leave
push
inc
out
lock
ret
std
movsl
sbb
cmc
sahf
mov
mov
add
cmpsb
clc
push
mov
sub
fcmovbe
jmp
ja
pop
repz
ljmp
ffree
adc
gs
xchg
sbb
icebp
cmp
or
je
hlt
fisubl
fwait
jne
and
sahf
dec
stos
sti
icebp
mov
aaa
pop
js
lods
xchg
arpl
cmp
fdivrs
filds
push
mov
xchg
fdiv
jb
xchg
sub
xchg
test
dec
int
imul
mov
push
or
or
sbb
in
sub
xchg
push
fcomps
scas
shll
into
jb
stos
fdivrl
jl
mov
and
inc
mov
pop
jmp
lahf
cmp
stc
mov
lcall
add
and
scas
insb
inc
or
int
jno
mov
lock
jnp
xlat
xor
scas
es
xchg
lock
pop
mov
jbe
add
stc
adc
ss
mov
inc
inc
out
lcall
lahf
push
dec
or
loopne
dec
out
push
jbe
shlb
mov
pop
testb
dec
ss
lds
insb
cmp
aad
or
mov
iret
cmpsb
jne
pop
pop
mov
or
hlt
mov
pop
cmpl
jge
pop
je
adc
mov
mov
or
add
mov
lret
mov
adc
and
cmp
sbb
xor
jne
sahf
push
sub
and
lea
dec
ret
push
adc
insb
adc
cli
mov
in
sahf
dec
fildl
mov
scas
cmp
pop
aad
int
ds
mov
pop
sbbb
lods
loopne
xor
stos
jb
popf
test
out
xor
mov
inc
lods
xchg
inc
sarl
and
lcall
in
sbb
call
sbb
or
adc
or
enter
pusha
imul
ss
lods
mov
xchg
add
in
fisttps
push
test
pcmpeqd
mov
mull
sahf
pop
adc
xchg
loope
rorb
lea
add
xchg
daa
loopne
jbe
pushf
and
xchg
dec
icebp
add
xor
sub
mov
inc
or
dec
out
loope
and
jmp
testl
jp
aas
xchg
cmp
jae
push
test
js
mov
pushf
pop
jp
pop
int3
add
or
sub
fnstenv
push
arpl
push
mov
jno
push
in
in
xor
lret
popf
jo
xchg
sbb
cmp
ret
xchg
dec
push
scas
pop
sbb
test
lock
pop
inc
cs
xor
pop
mov
mov
cltd
push
and
mov
adc
fildll
out
jmp
lahf
xchg
xchg
repz
push
test
lds
aam
cwtl
xchg
mov
repnz
sbb
adc
cmp
mov
dec
lock
orb
jl
pop
jl
mov
xchg
lds
pop
leave
and
repz
push
aaa
mov
xchg
jp
xor
push
aas
mov
xor
fildll
sbb
push
inc
jne
or
je
scas
mov
add
jle
mov
outsl
or
xchg
lds
dec
jns
xchg
mov
lea
pop
loope
adc
dec
insl
leave
in
out
in
inc
shlb
out
sub
sub
inc
test
scas
test
mov
pusha
lds
rcl
cs
xchg
cld
add
inc
test
push
int3
pop
sbb
lcall
lahf
pop
xor
in
fwait
jo
mov
push
sbb
test
lods
mov
cmp
mov
aam
sub
add
sub
leave
loop
mov
sarb
lcall
xor
jne
lods
clc
cmp
push
sbb
xchg
les
sbbl
lock
adc
subb
push
test
test
and
mov
mov
sbb
mov
hlt
pop
or
cmp
popa
or
mov
adc
scas
mov
pop
mov
mov
add
cmc
dec
jge
mov
push
push
add
mov
test
add
mov
aam
insl
pop
mov
ss
add
stc
dec
mov
sbb
push
mov
cmpsb
nop
pop
and
outsb
push
in
xchg
and
stc
add
dec
es
fsts
mov
sbb
cs
out
and
mov
imul
pusha
rolb
xor
sub
insb
xchg
mov
sbb
sbb
ss
mov
movsb
mov
arpl
jmp
adc
sub
pop
xor
fisttpl
cwtl
fisubl
add
push
imul
xchg
jno
push
push
sub
out
or
lret
call
mov
mov
ficompl
fstpl
in
dec
inc
stos
in
scas
push
dec
pop
mov
cmpb
mull
repnz
inc
pop
aad
jo
imul
lds
leave
pusha
and
jle
cmc
or
out
pop
out
jmp
in
iret
sbb
out
or
pop
mov
jecxz
bound
addr16
push
jecxz
push
test
inc
pop
jle
icebp
rcrl
jne
mov
rclb
jle
repnz
xor
adc
or
push
or
jb
in
pop
ds
fbld
les
test
sbb
pop
mov
push
inc
mov
mov
jb
loope
mov
push
mov
mov
xchg
ret
sub
jno
pop
mov
xor
movsb
push
std
ljmp
xchg
les
push
sbb
pop
xchg
cwtl
cs
mov
aas
mov
jnp
and
add
mov
xor
sub
adc
add
pop
out
les
xor
and
xchg
xchg
jle
xor
movsb
lods
ja
sub
xchg
int3
or
mov
fwait
mov
lret
inc
xchg
mov
mov
sti
jo
cmp
dec
adc
add
push
daa
outsl
push
dec
lods
das
xchg
sbb
int3
bound
push
adc
popf
lods
repnz
frstor
roll
fsts
cmp
and
sbb
xor
je
adcb
rcll
add
aam
push
hlt
outsl
sub
loope
repnz
push
adc
jmp
call
addr16
lea
jecxz
ds
fs
pusha
std
pop
push
sbb
or
jns
shr
add
sub
shll
movsl
aaa
in
add
pop
filds
pop
enter
repnz
pop
outsl
call
mov
dec
out
mov
add
fsubs
sbb
mov
adc
xchg
dec
outsl
push
jae
lret
xchg
xchg
iret
pushf
and
or
testl
repz
pop
test
out
mov
pop
fildll
sub
adc
lods
sub
adc
mov
mov
ja
push
xchg
pop
pop
cmp
bound
sahf
mov
imul
insb
cmp
pop
cli
nop
push
xchg
xor
mov
int
jo
cmc
inc
test
sbb
ljmp
cmp
lock
mov
testl
or
adc
fistpll
out
out
popa
fnstsw
daa
add
clc
fimull
scas
js
mov
dec
jne
adc
loop
ljmp
jnp
xchg
pop
inc
mov
fs
leave
add
or
dec
cmp
shlb
sub
sbb
mov
adc
ja
addr16
sbb
sbb
push
pushf
xchg
pop
sbb
in
std
inc
out
pop
jns
cli
mov
in
cmp
and
push
and
and
mov
and
fcompl
mov
shll
mov
jns
sbb
push
inc
ret
xor
and
push
popa
stos
cmp
lea
imul
lahf
scas
rcrl
inc
cmpsb
dec
and
xor
in
adc
sbb
sbb
and
andl
fdiv
fidivs
fiaddl
hlt
arpl
xchg
daa
in
ja
adc
sub
subl
sub
fiaddl
imul
nop
jb
dec
out
or
rsqrtps
nop
mov
jl
lock
and
xchg
push
addr16
fsubr
lea
enter
jnp
adc
push
rol
lods
mov
add
pop
gs
jbe
adc
jecxz
add
push
jbe
mov
cli
mov
jnp
aas
fwait
das
mov
lds
jecxz
in
in
lahf
jle
pusha
scas
xchg
jg
sub
cmp
add
xor
lds
daa
inc
dec
push
mov
pop
pand
adc
push
in
mov
addb
adc
cmp
add
add
xor
xchg
sarl
mov
shrl
adc
adc
cwtl
lods
rorl
cmp
lcall
gs
inc
pushf
cwtl
and
mov
adc
std
push
mov
or
mov
mov
xor
jp
in
cmp
fistps
sbb
sub
test
mov
add
cs
adc
add
xchg
push
cmp
ds
aad
cmc
rcl
scas
dec
outsb
fildll
decb
popa
push
jne
mov
or
jb
jmp
call
sbb
or
rcrl
out
lods
inc
dec
aas
mov
into
mov
bound
out
dec
or
jnp
in
ja
xchg
adc
pop
push
jle
mov
jmp
in
lret
xchg
lahf
add
sbb
sbb
xchg
add
rcll
pop
dec
fwait
popa
nop
mov
fs
lock
jo
outsl
imul
rclb
loope
iret
nop
inc
cmc
mov
sub
xor
scas
adc
mov
gs
jge
loopne
les
xchg
aad
into
adc
sbb
fidivrs
lret
data16
mov
lds
sub
ljmp
adc
mov
cli
sub
cmp
repnz
movsl
add
xchg
mov
xchg
shlb
mov
call
rclb
fsub
std
ret
sub
push
cltd
push
push
inc
dec
pop
mov
andb
jle
in
enter
mov
sbb
add
inc
addl
dec
cmp
pop
dec
xor
adc
mov
or
cld
xchg
xchg
mul
sbb
or
popf
jne
imul
stos
mov
or
aam
xchg
in
push
dec
fbld
les
mov
mov
popa
mov
mov
rorl
cmp
inc
dec
movsl
cmpsl
push
dec
xchg
sti
and
sub
mov
jecxz
lahf
hlt
xor
pop
add
ljmp
fistpll
in
inc
push
add
lods
int3
icebp
es
cmpb
fisubrl
js
test
sub
or
push
into
cltd
or
xchg
pop
fistpl
jbe
mov
jae
in
out
cmpsl
cltd
jnp
inc
pop
xchg
loopne
xchg
mov
ss
stos
mov
clc
insb
outsl
sub
shll
cmp
scas
lea
fstps
sbb
jo
je
jb
ljmp
icebp
ffreep
sbb
mov
repz
loop
xchg
mov
push
movsb
inc
or
mov
push
pop
mov
iret
mov
rolb
pop
inc
enter
cmc
rcll
xchg
add
add
fsubr
mov
addl
xchg
mov
ja
lods
or
dec
dec
repnz
pop
mov
mov
adc
dec
retw
lcall
jl
aaa
push
clc
fs
out
es
mov
pop
das
pop
mov
movsl
jge
and
sbb
das
mov
out
push
enter
mov
insl
mull
mov
pop
inc
mov
sti
test
lahf
lcall
push
cmpsl
push
leave
adc
dec
mov
fildl
sbbb
mov
mov
jecxz
fcompl
sbb
sbb
enter
and
and
xor
ljmp
sarb
inc
hlt
arpl
arpl
movsl
adc
lea
clc
ja
shll
in
sub
adc
cli
or
cli
imul
pop
add
data16
mov
pop
push
inc
add
push
sbb
mov
and
and
clc
inc
js
mov
int3
popf
loope
push
mov
out
aas
cmpsl
pop
shll
out
push
mov
repz
dec
fcomp
test
mov
or
mov
cmp
loope
testb
cmp
jge
out
dec
xor
inc
mov
pop
cmp
lods
push
cmp
fcmovu
pop
js
push
xchg
and
scas
push
xor
sub
mov
nop
adc
repz
cmp
shll
jo
cmp
dec
fcmovb
rcll
add
xchg
mov
ret
addr16
ret
outsb
sbb
call
daa
addb
pop
movsb
push
inc
add
push
or
aas
cltd
jp
int
fbld
mov
loop
sub
mov
cmp
fbld
inc
jns
movsb
cwtl
add
xchg
cmp
cmp
xchg
pop
movsl
or
in
stos
std
pushf
idiv
movsb
shlb
inc
outsb
jnp
inc
add
out
xchg
mov
shll
inc
out
mov
jns
imulb
cmp
out
test
xor
xchg
sti
call
inc
pop
and
pop
mov
rcrl
jae
sbb
jge
cmc
lret
dec
sbb
jo
push
mov
fs
repnz
pop
ja
cltd
adc
out
add
stos
sub
loope
sti
repz
mov
mov
jecxz
test
jge
lcall
jb
scas
mov
push
inc
jns
inc
lret
push
lods
dec
loop
insl
popl
repnz
dec
mov
jnp
and
inc
int3
cs
sbb
inc
cmp
mov
mov
mov
rcrb
aas
mov
mov
adc
fwait
int3
cmp
addr16
mov
xlat
lahf
call
xor
fimuls
inc
arpl
dec
pusha
mov
mov
jb
or
sub
ret
sub
dec
notl
sub
or
test
cmp
or
lods
scas
jmp
xchg
shrl
pop
xor
jmp
shrl
pusha
fs
cmp
fstps
jp
aas
outsb
adc
cmpb
ret
fldl
pop
test
das
aas
sbb
bound
movsl
lret
pop
or
or
adc
adc
sti
lret
cwtl
iret
ja
xor
je
aas
inc
jmp
xor
jg
dec
push
ss
dec
dec
scas
and
cmp
add
lods
sub
int3
lahf
mov
cmp
sub
push
test
das
ds
lret
lret
test
aas
pop
gs
sub
adc
xchg
out
and
imul
jle
sub
icebp
mov
mov
test
jle
cmpsb
idiv
data16
jb
cmpsl
mov
xlat
push
mov
movsb
pop
fwait
push
push
icebp
pushf
cld
sub
or
sub
rorb
add
je
lds
cmp
xchg
push
cmp
lahf
stc
mov
insb
lcall
inc
mov
inc
jmp
test
mov
and
pop
add
fsubrl
inc
out
out
push
xchg
xor
sbb
cmc
push
rol
sarl
mov
lds
jno
push
aas
enter
xchg
mov
xorl
movsl
jb
or
pop
sbb
in
inc
mov
jge
dec
pop
jge
aam
jo
out
les
xchg
xchg
adc
iret
adc
addr16
mov
adc
hlt
loope
pop
and
lods
test
jb
jg
push
out
push
pusha
gs
sarb
test
sub
sub
add
inc
aad
hlt
loopne
stos
test
insb
dec
mov
xchg
dec
sbb
push
dec
lcall
outsl
inc
dec
sub
xchg
imul
mov
pop
mov
fcomps
xchg
loop
mov
sti
push
pop
in
add
inc
pop
jp
pop
or
xchg
popf
lds
sub
cwtl
into
repnz
ficomps
xchg
inc
fwait
mov
push
call
mov
jecxz
push
loop
xchg
sbb
addr16
popa
push
es
xlat
shrl
dec
imul
loope
push
cli
hlt
lret
pinsrw
inc
push
jns
adc
insl
or
and
jo
in
xchg
push
pop
add
lret
or
gs
adc
xlat
xor
push
and
pop
mov
cmp
or
addr16
scas
adc
stc
pop
fwait
sbb
les
xchg
push
cmpb
push
cld
jp
push
push
aad
jp
cwtl
jle
addr16
pop
jns
mov
mov
nop
in
or
pop
push
push
xchg
stos
xor
xor
loope
insl
fcomi
or
cmc
adc
jbe
int3
mov
fistpll
sahf
pop
leave
pop
popf
int3
xchg
cmp
leave
scas
das
ja
jnp
inc
pop
loopne
sbb
cs
adc
jg
adc
pop
cmpl
add
cmc
sub
adc
das
and
in
and
pop
cmpsl
sub
in
push
in
and
sbb
in
cmovg
lcall
mov
jle
inc
dec
shrd
and
xchg
dec
jns
rolb
gs
jle
adc
pop
orl
in
sub
inc
outsb
pushf
dec
or
pop
cmp
xchg
enter
lahf
sti
mov
cmp
in
pop
inc
xchg
and
cmpsl
push
inc
push
mov
cmp
out
or
lds
push
mull
dec
jecxz
scas
push
sub
aas
jecxz
cs
mov
mov
ljmp
and
jg
cltd
jmp
test
inc
loopne
cmp
dec
jmp
fildll
clc
or
cmc
add
insb
popf
pushf
outsl
out
push
add
inc
xchg
stos
aaa
mov
and
cwtl
fwait
pop
jno
adc
clc
subl
jno
push
adc
or
pop
dec
sbb
jp
out
jmp
icebp
pop
pop
xchg
sbb
xor
mov
lcall
bound
aad
hlt
inc
mov
js
insl
inc
jle
fld
fidivrs
inc
lods
pushf
sub
dec
jo
xchg
stos
dec
adc
or
adcb
push
lock
adc
push
jb
xchg
scas
lcall
cmp
outsl
cltd
insb
gs
jnp
sbbb
mov
lret
xchg
dec
adcb
jb
jmp
test
imul
cs
cmc
xor
bound
push
daa
sub
push
dec
out
incl
jp
dec
xorb
push
xchg
mov
bound
mov
jnp
leave
icebp
pop
imul
and
xlat
sbb
cwtl
outsl
mov
xor
xor
andl
in
ret
inc
xor
test
xchg
int3
pusha
mov
loopne
bound
mov
mov
add
sub
or
shll
cmc
and
popf
cld
sub
xrelease
pop
jg
pop
aas
and
push
inc
sub
inc
sub
loope
xchg
popa
jg
fcoml
sbb
mov
je
int
iret
adc
pushf
mov
and
aam
or
push
or
daa
cmp
loopne
cmc
mov
cmpsl
push
xchg
dec
xchg
dec
out
mov
jae
lock
jp
sbb
jle
xchg
and
push
lock
dec
daa
dec
push
daa
mov
fisttps
pop
lods
xchg
lea
adc
push
gs
iret
push
dec
in
mov
xor
in
pop
imull
leave
sbb
sbb
ret
test
sbb
xchg
test
xchg
cmp
xchg
iret
mov
subb
testl
or
stos
addr16
cli
iret
cmp
in
aam
lcall
pop
sbb
inc
and
dec
sbb
das
subl
xor
xor
and
and
stos
inc
stos
ret
push
cmpsb
dec
inc
pop
std
xor
fdivr
cmc
scas
cmp
sub
inc
xchg
popa
int
dec
addr16
int
fwait
jmp
mov
mov
loope
ds
adc
jmp
xchg
icebp
jne
mov
arpl
jle
fwait
cld
or
lds
stc
mov
xor
push
add
or
jns
sub
shrl
dec
test
mov
xchg
xor
jae
push
leave
jg
call
xchg
add
nop
out
jae
popa
sub
dec
enter
sbb
xchg
jnp
mov
js
sti
jns
std
sub
iret
mov
and
aad
xor
mov
push
fidivs
mov
add
fnstenv
les
mov
xlat
mov
push
fcom
pop
dec
xchg
mov
push
div
jl
sub
cmp
daa
nop
xor
adc
mov
jno
push
lods
out
mov
sbb
out
pop
mov
andb
pushf
push
loope
xchg
jge
lcall
or
gs
jbe
mov
pop
shlb
mov
out
jae
cmpsl
jbe
stc
lcall
jae
pop
loopne
orb
mov
test
dec
jne
push
mov
divl
int
sbb
sub
shll
jno
pop
outsl
push
mov
or
loopne
sbb
mov
fs
mov
push
andb
imul
sub
daa
mov
or
int
idiv
add
xor
mov
stos
cmp
sub
jle
fs
pop
cmp
aaa
dec
and
repz
lods
and
call
push
test
ljmp
cmpsb
mov
jnp
stc
sub
adc
or
lret
test
outsl
cwtl
add
xchg
sti
dec
movsb
cld
sub
inc
inc
leave
dec
ljmp
xor
into
lods
dec
mov
sarb
js
negl
push
popa
sub
pusha
mov
je
xor
js
hlt
and
icebp
xor
cli
gs
iret
jecxz
nop
inc
push
das
jl
cmp
xor
cmp
inc
push
push
or
les
iret
les
bound
orb
out
pop
movsb
pop
test
rcr
mov
loop
ret
add
push
cmp
outsb
pop
and
pop
push
ds
lock
notb
dec
push
mov
outsb
adc
lock
xchg
push
out
jnp
daa
cmp
jbe
lahf
xchg
sbb
cli
inc
jb
push
pop
mov
in
jecxz
call
cmp
pop
pop
dec
jmp
stos
daa
test
cld
out
in
out
inc
cmp
stos
xchg
pop
push
push
test
mov
divl
add
cmp
out
outsb
push
push
adc
jle
sub
pop
cmp
push
jle
adc
mov
pop
loope
nop
mov
xchg
pop
aam
pushf
jno
xor
adc
pop
xchg
add
mov
dec
jge
cmp
lock
jne
leave
in
inc
mov
lret
or
scas
imul
insb
notl
mov
aas
pop
add
dec
enter
push
dec
pop
fimull
imul
xchg
sub
mov
arpl
dec
add
sbb
inc
mov
mov
sub
jno
pop
dec
and
ds
js
dec
cs
les
pop
cwtl
cli
mull
rcr
ficoml
mov
repz
fcompl
sbb
sbb
adc
stos
popa
incl
sbb
mov
pop
dec
ja
jl
lods
nop
jg
sbb
repz
and
mov
inc
sbb
cmp
dec
out
call
dec
es
lods
mov
rorb
sbb
ljmp
push
adc
adc
xor
jae
xor
in
mov
icebp
fbstp
dec
fildll
pushf
xor
pop
addr16
jbe
xchg
subl
je
addr16
jg
pop
test
in
imul
aas
lcall
pushf
or
in
xchg
ja
push
movsl
mov
imul
shll
push
push
imul
negb
gs
xchg
jbe
inc
pop
inc
and
push
jae
jnp
add
cmp
inc
sbb
sub
sbb
lds
pop
ss
mov
xlat
scas
fs
or
dec
mov
add
push
add
pop
fistps
mov
sar
pop
adc
fstpl
into
add
mov
xor
jle
aaa
mov
mov
cmp
ret
mull
and
lcall
jge
jecxz
push
ror
cli
scas
cmp
or
xor
adc
xchg
fcompl
or
ret
pop
xchg
mov
push
jp
xor
xchg
jno
fnstsw
dec
jl
lahf
inc
and
mov
cld
cmp
js
test
in
add
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
sbbl
push
movl
cmpl
je
cmpl
ja
jmp
call
mov
dec
mov
jmp
mov
notl
mov
movl
push
mov
mov
mov
sub
imul
mov
mov
mov
movzwl
or
xor
adc
xor
and
mov
addl
add
subl
add
imul
mov
mov
cmp
je
and
mov
mov
mov
sub
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
add
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
mov
dec
mov
jmp
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
xor
mov
mov
xor
mov
add
mov
add
movzwl
mov
movb
sub
lea
mov
sub
mov
add
mov
andl
xor
andl
sub
orl
mov
movl
andl
mov
inc
mov
cmpl
jl
jmp
call
cmpl
jb
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
movl
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
xor
dec
mov
jmp
mov
push
and
mov
xor
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
subl
push
andl
add
movl
jmp
mov
movl
mov
movl
inc
cmp
movl
jb
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
xor
adcl
add
jmp
adc
mov
mov
sbb
mov
orl
xor
mov
add
movzwl
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
movzwl
incl
xor
orl
add
mov
mov
movl
mov
movl
inc
mov
movl
cmp
jne
inc
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
dec
add
add
mov
xor
or
mov
sub
or
mov
sub
xor
add
add
orl
mov
movl
and
movl
orl
movl
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
mov
xor
mov
orl
mov
xor
add
mov
mov
mov
je
mov
mov
xor
orl
xor
sbbl
sub
andl
sub
neg
xor
or
mov
decl
mov
mov
add
imul
mov
mov
mov
subl
add
or
or
mov
mov
mov
jmp
mov
xchg
mov
xbegin
push
jl
jmp
jl
cmp
outsb
jmp
xchg
mov
push
lds
add
push
cmp
das
out
out
xchg
push
jns
cmp
fwait
push
adc
lods
and
cli
adcb
sub
xor
inc
popf
mov
push
mov
dec
mov
dec
lret
fsubl
pusha
adc
inc
fdivrp
cltd
repnz
mov
cmpsb
mov
lret
mov
mov
adc
xchg
div
fidivrl
xor
imul
inc
fwait
cs
cld
sbb
cmp
dec
popa
call
mov
outsb
pop
inc
les
hlt
outsb
xchg
inc
fnstsw
popa
popa
dec
fwait
sahf
aam
or
scas
mov
lcall
mov
add
jns
cld
scas
adc
or
cld
sbb
mov
sub
rcl
sub
les
mov
dec
mov
xchg
enter
jae
dec
and
mov
jge
and
dec
pop
sub
xor
mov
outsl
push
clc
and
push
das
clc
orl
mov
in
mov
dec
xchg
cwtl
push
cmp
push
mov
cmp
out
push
jle
mov
loope
sub
sub
inc
sbb
ret
rcl
aaa
jae
in
scas
push
fld1
fildl
mov
ret
sub
dec
push
not
mov
mov
mov
cmp
lods
rcr
ror
fsubrp
incb
pop
push
sahf
sub
mov
leave
dec
jl
sub
scas
aaa
arpl
inc
stc
pop
push
mov
adc
sub
pop
mov
cli
push
jle
roll
adc
out
push
jns
push
adc
sbb
shlb
or
addr16
sub
icebp
sub
mov
xor
in
xor
pop
addb
xor
cmpsl
push
add
add
sar
fsubrp
mov
test
je
push
pop
xor
stos
mov
call
aad
mov
jecxz
test
pop
loop
gs
adc
call
adc
and
ds
outsb
fcomip
push
inc
pop
xchg
sbb
mov
das
leave
fiadds
sub
in
sbb
int
or
xchg
mov
stos
jge
or
pop
lahf
and
jp
fcomps
sbbb
js
push
push
pop
inc
lret
sub
cld
lcall
outsw
xor
cltd
pop
mov
jmp
push
into
fs
mov
dec
scas
xchg
push
pop
or
leave
imull
and
dec
push
lret
jmp
fbstp
jnp
shr
jno
xchg
xlat
ret
push
add
nop
mov
push
ljmp
mov
mov
out
xor
out
cli
jno
xor
or
xor
xchg
cmp
shl
push
jl
test
cmpsl
jns
xor
jne
adc
adc
dec
adc
pop
inc
jle
movsb
idiv
jp
inc
out
std
jmp
fmul
sbb
into
push
testl
out
add
mov
sub
repz
inc
push
rsqrtps
pop
aam
mov
mov
mov
imul
pushf
cmc
icebp
test
cmpsb
mov
push
hlt
fnstsw
xor
or
jge
xchg
inc
sbb
jb
lds
adc
jmp
mov
in
shrl
mov
sub
insb
mov
add
push
push
jo
mov
sbb
divb
popa
or
stc
adc
mov
xchg
lahf
lret
and
pop
cmc
rcl
and
movb
sbb
fnstenv
jne
push
testb
and
loope
roll
cwtl
push
and
repnz
fcomps
jge
dec
add
enter
in
dec
pop
inc
popf
test
fwait
mov
mov
mov
xchg
sbb
jge
mov
mov
add
cwtl
cmpsb
push
pop
test
dec
imul
roll
xlat
aaa
add
cmc
jnp
jg
sub
test
popf
rolb
mov
pop
pop
stos
ja
scas
adc
mov
push
sub
or
rorb
pop
push
and
mov
arpl
adc
cmp
dec
xchg
mov
test
std
jge
push
lock
loopne
inc
sub
orl
jle
mov
cmp
leave
in
dec
mov
popf
aas
insl
ret
adc
test
into
lock
and
es
sub
xchg
jns
jo
inc
daa
and
add
xor
add
scas
adc
outsl
xchg
in
movsl
mov
or
add
inc
mov
adc
pop
push
jb
xchg
fs
mov
popa
loopne
out
add
lds
cld
inc
or
jmp
scas
inc
xor
jge
mulb
xor
mov
pushf
mov
and
jne
push
xor
lods
mov
jecxz
popf
sub
sbb
jmp
movsl
faddl
pop
pusha
add
inc
sbb
jp
dec
adc
ja
cmp
jne
fdivs
movsl
mov
pop
mov
xor
cmpsl
ljmp
and
xchg
hlt
imul
mov
fwait
pushf
pop
insb
nop
push
sbb
bound
push
or
add
jo
out
arpl
test
fimuls
icebp
call
loopne
imul
dec
das
ja
cld
inc
and
mov
mov
inc
scas
pop
push
lods
push
lret
sub
cmp
in
inc
rclb
negl
fiadds
fidivs
cmp
call
lret
cmc
or
add
aas
sub
sub
repnz
mov
xchg
outsb
aaa
insl
fidivl
add
jp
mov
into
addl
fwait
sarl
inc
outsl
clc
lret
dec
xchg
ret
push
insb
cld
adcb
frstor
pop
cmpsb
mov
out
and
mov
jecxz
arpl
and
prefetchwt1
or
mov
scas
xor
inc
les
xor
out
mov
pop
push
loop
stos
icebp
mov
mov
idivl
jl
xchg
mov
mov
pop
mov
lods
mov
jnp
gs
add
pop
pop
scas
ret
mov
adc
sbb
mov
push
pop
ficompl
shrl
cld
loope
enter
lcall
mov
daa
push
fildll
sub
or
iret
fisttpl
push
hlt
arpl
cmpsb
and
std
xchg
sbb
mov
and
mov
int
jmp
and
pop
popf
out
cmp
jbe
fcomps
iret
movsl
cld
enter
iret
call
outsl
js
and
sahf
mov
mov
sub
push
or
push
in
in
lret
jno
js
jae
cmc
mov
cmp
into
xor
icebp
mov
jge
cmpxchg
pop
dec
ljmp
daa
mov
stos
dec
push
mov
in
mov
push
jb
std
es
add
enter
in
cld
xchg
enter
push
in
push
cmc
test
pusha
addl
testb
js
add
cmc
inc
cs
cmp
cwtl
int
movsl
mov
enter
adc
mov
dec
aam
inc
repnz
and
and
lahf
addr16
movsl
test
testb
push
push
dec
mov
stos
bound
cmc
lahf
push
push
sub
into
pop
inc
aas
arpl
jae
xchg
push
lcall
cmpsl
pop
adc
dec
xorl
mov
lret
xchg
jle
je
call
add
stos
fnstenv
scas
jno
inc
jge
sub
mov
mov
out
inc
xchg
or
pop
add
cwtl
xor
nop
or
sub
fimull
lea
out
sbb
js
inc
shr
inc
fwait
cmp
and
rclb
in
insl
or
pop
mov
adc
jns
xor
cmp
pop
gs
out
or
lahf
xor
ret
mov
xor
hlt
push
pusha
ja
jecxz
sbb
pop
ja
dec
jl
loope
push
arpl
in
out
ja
adc
scas
xor
cmp
les
lret
and
jge
adc
push
ret
push
jo
ljmp
stos
cmpsl
adc
imul
sbb
mov
lret
pop
aam
sbb
jns
loopne
adc
push
call
pop
sbb
mov
sub
ret
add
or
insb
cmp
inc
cwtl
or
dec
mov
push
rcr
add
pop
fcom
xor
cld
cmp
or
cmpb
outsl
dec
and
dec
fldenv
mov
push
lret
scas
int3
js
fsqrt
mov
ja
and
jmp
cld
cmp
mov
add
insl
cmc
add
xor
pop
cmp
push
test
add
adc
xor
fwait
pop
xorb
sbb
xor
insl
inc
and
in
xor
rolb
cli
sub
mov
call
or
and
push
mov
cmp
out
gs
mov
insb
add
push
cld
test
adc
movsb
aam
sbb
popf
jne
fwait
xor
mov
enter
jl
daa
ds
mov
jbe
mov
clc
int3
pusha
aad
out
xchg
fs
pusha
jbe
xchg
cmc
fnstcw
cmp
jecxz
push
std
lea
outsb
xchg
fisubrl
cmp
call
jp
pop
adc
imull
sub
mov
push
mov
sub
mov
cmpsb
push
test
inc
bound
or
test
dec
test
lock
repz
out
cmc
es
rcl
jo
dec
movsl
lea
fwait
pop
pop
mov
jno
cmp
lock
call
pop
test
jno
mov
int
push
scas
pop
fwait
push
push
test
loop
dec
inc
mov
sbb
xor
push
mov
add
jg
mov
jbe
sub
lods
outsb
data16
cmp
bound
or
mov
in
xchg
ss
shrl
dec
mov
cmpsl
xor
sbb
add
fwait
std
push
in
jae
jmp
dec
iret
jle
int3
mov
jmp
cmp
addr16
jle
std
adc
and
dec
pop
sub
lahf
rolb
subb
ret
daa
xchg
adc
sbb
jno
pop
repnz
dec
int
jmp
sbb
or
in
in
dec
pop
repnz
add
pop
mov
std
imul
cmc
cmpsl
dec
and
insb
dec
pop
lods
cmc
loop
sbb
xchg
stc
test
pop
mov
out
add
popa
idivb
test
ret
add
pop
push
mov
push
inc
or
sbb
push
mov
sarl
and
or
lret
xor
stc
xchg
mov
mov
out
xor
jmp
lret
iret
mov
ficomps
mulb
jae
lods
inc
or
repz
mov
divl
into
jmp
push
mov
mov
or
mov
xchg
cmc
orl
fwait
and
xlat
jbe
orl
push
sar
adc
enter
cs
add
cmpsb
mov
add
test
push
xor
iret
gs
subl
or
sbb
mov
jo
out
and
dec
or
push
cmp
mov
imul
push
jle
jne
sub
and
loop
outsl
xor
dec
jo
mov
in
out
clc
test
and
cli
sbb
and
jmp
xchg
mov
cwtl
jae
aam
je
dec
cmp
jp
mov
push
fnstsw
outsb
mov
or
test
xor
inc
pop
pushf
popf
movsb
sub
aam
add
mov
or
xor
sbb
jecxz
loopne
inc
pusha
mov
push
movsb
rorl
inc
rolb
xchg
ljmp
and
idivb
mov
mov
repnz
fidivs
scas
scas
dec
and
fdivrl
xor
cs
or
mov
xchg
cmpsb
dec
gs
sbb
sbb
sti
mov
xchg
imull
xor
inc
xchg
es
xor
lea
fs
mov
outsb
inc
mov
insb
in
adc
jnp
mov
mov
cs
cmp
fistl
cwtl
test
mov
movsb
mov
mov
sbb
inc
dec
loop
rorb
xchg
daa
push
aaa
sti
test
and
mov
sti
xchg
jl
call
int
mov
or
push
sbb
test
cli
stos
ja
jae
aas
fstps
jge
call
pop
or
cmp
xor
sti
adc
mov
aad
scas
cld
dec
addr16
nop
scas
mov
sahf
push
out
push
sub
xchg
cmovnp
mov
push
inc
sbb
cmp
clc
je
xchg
loope
loop
ret
cs
adc
push
fildl
cmp
ja
mov
and
push
insb
push
pop
incl
aaa
mov
push
leave
cmpl
jecxz
inc
pop
mov
pop
rclb
xor
adcb
repz
ficoml
std
adc
das
outsl
imul
pop
dec
cmp
aam
ja
cmc
pop
and
mov
mov
call
push
mov
data16
push
jo
fmuls
adcb
jne
dec
add
arpl
pushf
and
inc
adc
pop
jmp
bound
dec
jecxz
jmp
flds
sub
and
mov
dec
int3
jl
fcoms
push
pmaddwd
andl
shlb
mov
or
mov
into
leave
enter
inc
pushf
repnz
pop
cmpsb
mov
mov
scas
dec
sti
jmp
pop
xor
stc
mov
pop
xor
rolb
in
dec
test
xlat
jmp
cmp
lock
cmpsb
inc
and
adc
push
sub
lea
jl
pop
pop
fsubrs
jg
cwtl
in
xor
mov
sbb
fcompl
pop
or
xchg
mov
mov
and
or
mov
mov
sub
xchg
lret
xor
pop
out
mov
dec
decl
mov
jo
fldt
mov
xor
insl
mov
sti
idivl
cwtl
insb
cmp
in
hlt
loop
ficomps
mov
pop
add
pop
or
test
test
dec
or
push
subl
adc
fwait
movsl
push
jne
cmp
or
filds
mov
sub
inc
pusha
jmp
lea
pop
cmpsb
loop
ret
sub
bound
pop
jne
inc
test
and
push
hlt
adc
xor
es
sub
and
sti
iret
push
inc
pop
mov
and
xor
dec
iret
sub
inc
mov
fcompl
loope
push
scas
insl
mov
fsubp
orw
or
jl
lret
xchg
insl
mov
into
into
fs
xchg
pop
test
or
cld
insb
sbbb
dec
in
cmp
lret
in
xor
or
or
psubw
jo
repnz
push
fxch
orb
repz
cmc
inc
add
loop
loope
add
cmp
ror
fsubs
ljmp
in
scas
sub
into
pop
sbb
js
jle
lods
or
push
mov
rcr
icebp
hlt
mov
stc
mov
lods
leave
mov
mov
dec
mov
mov
or
push
xchg
sub
mov
out
mov
addr16
push
stc
pop
jmp
cltd
scas
xor
add
es
mov
stos
dec
sub
pop
xor
xchg
insb
pop
or
rcrl
fcoms
push
or
test
xchg
gs
cmpsl
pop
cmp
lahf
rolb
and
jecxz
aam
sbb
mov
lret
jl
scas
imul
inc
sar
incb
gs
push
aad
in
fmulp
push
xchg
xor
dec
movsl
pop
repz
jecxz
and
iret
mov
or
cmp
ret
ror
cmp
add
inc
mov
out
push
sub
jno
jbe
sub
sahf
xlat
mov
xchg
imul
data16
cmpsb
shll
jle
sbb
pop
test
lds
mov
mov
cs
pop
pop
int3
ja
cld
pop
mov
mov
fs
sub
push
test
cmp
loopne
jmp
adcb
out
inc
filds
xor
and
mov
in
jbe
sar
dec
dec
sahf
sub
inc
cmp
pop
negl
adc
call
cmc
and
psrad
jl
fisttps
sbbl
push
inc
gs
loop,pt
call
repz
cmpsb
mov
rorl
scas
xlat
out
fcomp
pop
mov
dec
sbb
ret
insb
mov
jne
ror
orl
mov
jo
movl
inc
cmp
lds
out
mov
push
shrl
ljmp
aam
loope
cli
push
dec
cmc
adc
or
push
add
fwait
subb
call
and
imulb
sub
fwait
xchg
andl
int3
imul
xor
pop
dec
rorl
aaa
lds
shrb
cmpl
jo
je
outsb
inc
lret
jl
jle
inc
js
imul
call
cmp
pop
cltd
clc
pop
scas
jne
xor
out
mov
xor
mov
mov
orb
xor
dec
das
loope
mov
scas
es
aas
movsl
imul
mov
iret
pop
arpl
pushf
fchs
fsubrs
scas
std
xchg
sbb
fbld
mov
dec
aad
xor
adc
roll
adc
inc
int
jne
ljmp
mov
sbb
jp
movsl
lahf
mul
pop
data16
lret
notb
pop
dec
add
xor
jge
int3
and
inc
sub
stos
mov
fstpl
incl
test
mov
loope
repnz
jb
push
out
pop
pop
pop
mov
movsl
xor
aad
imul
out
mov
jp
rcrb
sbb
mov
mov
jmp
push
xchg
int3
outsl
sbb
insb
popa
lds
pusha
mov
pop
popa
mov
cvtdq2ps
std
and
movsl
mov
testl
in
xchg
ds
lcall
mov
fs
sbb
mov
int
lods
mov
dec
push
xor
jne
fistps
add
jmp
imul
and
cs
pop
vmread
lock
aam
test
pushf
lcall
fwait
mov
testl
out
pop
adc
in
sti
rcrl
mov
pop
cmp
jmp
mov
fcomi
repnz
inc
dec
xchg
or
mov
cmp
out
push
sub
add
jg
es
mov
imul
cmp
xor
push
and
loope
lods
xor
fbstp
mov
aaa
sub
mov
movsl
sub
or
or
push
mov
pop
fs
mov
loopne
adc
int3
cmp
pushf
xchg
and
jl
iret
fcompl
sbb
mov
or
push
frstor
and
aas
aad
testl
loopne
imul
scas
cmp
dec
ss
and
test
rorl
fs
jge
imul
icebp
in
mov
fdivr
jns
cltd
jge
pop
and
movsl
xor
jae
cmp
xchg
movsb
mov
or
sub
cmpsl
push
mov
cmp
adc
jns
incb
lahf
jns
int
shrb
jmp
xchg
mov
fdivrs
leave
fsubrs
jmp
xchg
mov
sbb
mov
iret
pop
rolb
or
jno
sub
jo
pop
jmp
jle
cmpsb
call
pop
pop
xchg
enter
mov
sbb
jp
lcall
push
insb
outsb
xchg
aam
ret
pop
mov
gs
fs
imul
sub
sarl
push
xchg
pop
lds
ljmp
js
hlt
out
add
incb
cmp
push
mov
loop
data16
jns
mov
mov
jae
inc
xchg
dec
adc
insl
push
jp
fmull
xor
mov
and
cmovge
in
test
mov
loope
mov
dec
mov
out
lds
or
add
mulb
or
xchg
enter
mov
roll
fwait
movsb
movsl
into
jp
mov
and
sbb
in
call
ds
xchg
cwtl
fistpll
adc
adc
mov
call
repz
pop
testb
shr
call
mov
sbb
test
out
mov
insb
sub
mov
pop
mov
adc
test
lret
mov
sbb
sbb
mov
in
jge
popf
int
or
pop
pop
movsl
cld
subb
int
leave
pop
xchg
pusha
and
gs
gs
sbb
insb
add
inc
adc
inc
lods
imul
adc
jno
and
shll
iret
xchg
dec
jmp
cld
int
xor
imull
and
adcb
lret
out
xchg
add
daa
adc
sbb
cwtl
sub
aad
fcom
in
adc
jae
pop
movsb
inc
pushf
fidivrs
mov
jnp
pop
cltd
sar
jl
daa
loopne
pop
popa
ds
inc
pop
out
jae
dec
jns
adc
addr16
and
sbb
or
enter
mov
push
aas
lea
or
shl
and
mov
sbb
mov
jl
mov
incb
cmc
aam
inc
push
stos
inc
push
and
scas
jae
mov
push
out
movsb
mov
mov
in
aad
adc
and
call
nop
mov
mov
lahf
and
or
xor
jne
cmp
inc
in
and
loope
mov
lcall
jo
fwait
jecxz
adc
fucomi
aad
xchg
sbb
mov
sbb
inc
stos
xchg
call
add
lret
pop
out
and
cltd
mov
sbb
jno
sbb
adc
adc
mov
jb
aaa
adc
mov
stos
je
incl
jge
aas
push
in
adcb
and
cmp
mov
addr16
sbb
and
cs
or
in
in
sub
cmp
cmpsb
das
mov
pusha
xchg
adc
imul
xchg
fmuls
int3
jno
negl
and
adc
push
mov
int
frstor
and
scas
dec
arpl
pop
jnp
jno
inc
xor
push
or
arpl
mov
cwtl
sub
test
lods
mov
lcall
add
push
popa
mov
pop
mov
adc
adc
jae
jp
push
push
sbbl
xor
cmp
lahf
mov
xchg
test
pop
stos
cmc
shll
cmp
mov
stc
cmpsl
test
xor
arpl
in
hlt
mov
rcrb
sbb
repz
ror
and
idivb
fisubrs
jmp
cltd
or
test
mov
aaa
pop
jae
inc
jge
adc
mov
in
lcall
stos
testl
out
xlat
and
xchg
clc
push
jbe
push
add
push
and
sub
nopl
mov
notl
sub
enter
cmpsl
in
adc
lahf
popf
add
mov
dec
fwait
jno
and
leave
inc
lock
fsts
cmovbe
adc
inc
or
or
testl
mov
in
arpl
xchg
jbe
mov
lcall
xor
sbb
sub
notb
js
in
or
pop
push
xor
out
and
popa
test
mov
and
lds
cmp
mov
mov
insl
outsl
lock
jl
aas
aam
nop
iret
lock
xchg
fstpt
sub
jg
ja
ljmp
test
xor
and
mov
lret
and
push
bound
mov
xchg
les
push
add
mov
in
mov
lret
into
test
shlb
push
or
mov
imul
jge
dec
push
inc
lods
pop
fcmovbe
xchg
rcll
mov
push
lcall
mov
ds
mov
adc
inc
inc
movb
mov
and
test
or
movsl
mov
aam
dec
jg
lods
sub
scas
push
rcrl
and
stos
mov
jnp
jecxz
in
xchg
pop
mov
inc
jmp
mov
push
shrl
shll
cmp
fcompl
stos
decl
js
mov
push
sub
jo
cltd
push
stos
fistl
inc
aad
lret
fimull
repz
push
mov
mov
and
jo
push
popf
xlat
movsb
negb
mov
mov
xor
fndisi(8087
dec
pusha
rclb
fstpl
rclb
fwait
mov
enter
scas
sahf
and
mov
xor
dec
push
pusha
les
scas
stos
loopne
imul
out
add
loopne
rcll
aas
add
mov
jo
cvtps2pi
ss
mov
movsb
push
xor
scas
xor
out
movsb
pop
mov
loope
bound
lock
pop
mov
testl
pop
test
or
aam
stc
mov
cmp
ss
push
outsb
inc
mov
pop
jg
out
sub
dec
daa
inc
nop
mov
cmpsl
cltd
repnz
mov
nop
jb
cmp
or
or
push
int3
mov
jnp
test
cmp
jle
clc
imul
jecxz
mov
mov
adc
loopne
negb
imul
aam
aas
or
push
scas
xchg
or
mov
jle
cmp
push
add
mov
repz
pop
pushl
mov
pop
inc
sbbb
mov
mov
dec
pop
push
shl
shll
push
xor
cmc
fimull
sarl
sti
andb
mov
inc
push
mov
sbb
mov
je
mov
lods
jg
mov
test
imul
rorl
cmp
sahf
shll
dec
clc
pop
jae
ljmp
mov
ret
dec
jo
jl
pop
pop
pop
imul
cld
idivl
xor
jns
mov
adc
int
adc
gs
in
inc
mov
pop
cwtl
gs
les
and
xchg
cmp
sub
sahf
add
jns
cli
sbb
mov
vcvttss2si
xor
gs
das
xchg
xchg
int
dec
rolb
sbb
adc
cmp
sbb
pop
pop
jae
sub
xchg
insl
cmp
call
jbe
int3
add
sbb
mov
aas
mov
jmp
pushf
xchg
mov
pushf
and
addr16
stc
gs
jge
rcrb
ret
loop
in
gs
enter
clc
out
inc
hlt
inc
dec
mov
fnstenv
ret
es
fdivrl
inc
addb
ret
push
aas
sbb
aam
imul
jae
mov
hlt
cmpsb
xor
jmp
jae
test
adc
jmp
xchg
sbbb
outsb
ljmp
pop
inc
cltd
pusha
and
shrl
subl
xlat
jnp
fwait
inc
push
pusha
add
xchg
sub
dec
testb
and
xor
pop
imul
addr16
sar
pop
fsubrl
fistpll
mov
mov
cmp
jmp
xor
shlb
gs
jecxz
popf
std
bound
or
push
popa
mov
cmp
in
sub
jo
lea
push
fimuls
rol
in
aad
or
leave
cmp
pushf
outsl
movl
sbb
cmc
xchg
popa
sub
sbb
out
mov
and
scas
mov
out
dec
xor
gs
imul
mov
push
mov
cmp
leave
jne
mov
or
scas
pop
iret
fwait
pop
sub
loop
add
loop
cmpsl
js
push
sub
lods
mov
fidivrs
mov
push
jnp
popa
std
outsb
dec
adc
and
in
push
lcall
inc
mov
xchg
lcall
pop
adc
mov
dec
jae
rcll
lock
cmp
mov
add
jle
mov
cltd
jnp
jnp
nop
jmp
xor
jmp
lret
negl
loopne
lret
imul
mov
push
in
repnz
imul
popa
mov
insl
outsb
adc
fwait
mov
mov
sub
mov
rcll
ds
loopne
mov
cld
dec
fldcw
pop
outsb
xchg
pop
stc
jmp
out
jp
roll
in
sub
dec
test
aam
mov
int3
loop
or
inc
aam
inc
jo
ljmp
je
cmp
xor
xor
xchg
dec
inc
push
add
mov
cmc
stos
pop
push
je
sbb
xor
dec
lahf
pop
pop
mov
add
cmp
dec
mov
rcl
push
popf
orb
lods
inc
outsl
add
test
or
pop
mov
rcrb
pop
push
push
xor
pop
push
popf
sbb
and
dec
cs
rcll
ljmp
push
pop
mov
xchg
cmp
add
sub
xchg
stos
sbb
ret
pop
icebp
inc
mov
jns
mov
lret
shr
jmp
xorb
cmc
mov
add
push
sarl
lods
jb,pn
stos
addr16
movsb
fnstsw
clc
test
dec
insl
fbstp
jecxz
notl
or
jmp
sub
jge
lock
inc
mov
fwait
stos
mov
or
int3
add
fimuls
push
sbb
fwait
dec
mov
and
jbe
gs
jne
pop
stc
and
inc
xor
sahf
dec
mov
cmpsb
mov
ja
add
ror
imul
mov
push
inc
scas
pop
mov
nop
sub
inc
push
pusha
mov
dec
push
xor
inc
push
adc
popf
out
xor
int3
cmp
adc
testb
adc
shlb
scas
js
mov
fdivr
shlb
jae
lea
xlat
ret
xchg
imul
aad
jmp
out
mov
or
pop
pusha
scas
add
jg
cmp
xor
movsl
nop
or
and
sub
add
movsl
movsl
add
and
stos
mov
xor
test
mov
ss
pop
lcall
adc
movsb
xchg
jns
mov
inc
adc
xor
mov
or
mov
mov
mov
sbb
mov
jmp
movl
ret
xchg
cs
je
add
loop
jl
pop
jl
out
lods
dec
shrb
lea
imul
mov
add
inc
xchg
xor
mov
xchg
push
push
cwtl
jge
mov
add
xor
xchg
adc
out
hlt
aad
sahf
xchg
adc
cli
insl
in
push
pop
rcrb
outsl
adc
jne
jle
mov
dec
rorb
dec
xchg
ret
xor
add
mov
pop
addr16
mov
mov
and
dec
xchg
and
std
mov
xchg
adc
out
or
shr
fs
mov
clc
cli
mov
mov
sbb
test
add
rcr
push
mov
mov
jl
add
imul
jg
test
imull
xor
out
jbe
xchg
enter
inc
mov
nop
sub
mov
movsb
subb
sti
das
rcl
mov
test
add
sbb
mov
mov
mov
popf
rclb
mov
sarb
sub
sub
aaa
cmp
data16
fnstcw
loop
mov
std
cmc
gs
mov
mov
inc
imul
mul
fsts
sti
aaa
cmpsl
xchg
mov
xchg
fwait
mov
gs
sub
sbb
cmpsl
push
andl
inc
and
iret
out
in
in
mov
mov
and
out
loope
pop
xor
arpl
push
mov
stc
or
xor
dec
mov
mov
sub
xchg
loop
ror
jp
outsb
pop
mov
sub
daa
imul
fmul
jle
movsb
rcl
int
dec
add
sub
xchg
add
nop
cld
scas
pop
cld
sbb
pop
mov
jbe
imul
lds
gs
inc
cmp
pop
int3
sbbl
jecxz
cwtl
into
cmp
sub
push
test
push
xchg
shlb
insl
sbb
mov
cmc
ror
xchg
leave
cmpsb
jl
clc
adc
sub
adc
lcall
xchg
out
je
aam
lock
dec
jmp
or
sub
dec
test
lea
dec
jno
push
shlb
push
into
pop
pop
arpl
dec
shr
icebp
lret
in
stos
xchg
imul
jne
jns
ret
aad
push
lahf
cmc
sub
push
xchg
add
xchg
popa
into
xchg
out
aam
frstors
ss
mov
push
add
mov
or
pop
or
cmc
ljmp
in
insl
cs
enter
pshufw
add
jg
test
pop
repnz
test
fdivr
or
in
jne
pushf
adc
jg
mov
add
dec
das
mov
aam
imul
xor
pushf
popf
das
adc
sbb
in
pop
adc
pop
add
cmc
sbb
scas
int3
sahf
mov
das
pop
in
sbb
mov
sbb
push
lret
sub
sub
and
shl
jno
mov
sub
repz
xchg
rclb
inc
lock
adc
out
jg
pop
push
pop
fstpl
adc
aaa
push
sub
push
push
push
add
xchg
outsl
mov
push
fstl
movsl
je
xchg
repnz
mov
mov
test
jnp
inc
cltd
test
push
imul
push
mov
sub
mov
add
push
dec
jo
cmp
sti
and
jg
sub
iret
pop
pop
pushl
xor
insl
xchg
xchg
add
push
outsl
sbb
out
inc
scas
add
cmp
scas
jg
enter
add
sub
push
add
movsb
lock
xchg
xchg
pmaxub
das
mov
push
sub
jmp
rcl
jp
mov
stc
jl
push
cmp
lock
popf
or
fs
add
mov
imul
push
decb
cmp
mov
fstps
push
mov
int
xchg
and
fxrstor
mov
push
jae
aam
jnp
xchg
inc
and
push
mov
push
sbb
pop
push
xor
push
jno
mov
sub
and
rcrb
jmp
push
movsl
arpl
cmpsb
pop
or
aas
fiaddl
lods
or
into
and
pop
mov
jnp
xchg
xor
mov
mov
cli
mov
in
push
jmp
inc
fwait
imul
pop
xor
dec
pop
cmp
mov
divb
iret
inc
mov
test
mov
in
scas
push
int
pop
adcb
jge
sub
inc
pusha
xor
jmp
scas
scas
in
gs
pop
repnz
pushl
mov
shll
in
hlt
popa
subb
push
mov
push
int3
sub
xchg
outsb
aam
pop
push
sbb
mov
test
jo
js
movsl
inc
aaa
push
stos
call
cltd
mov
jecxz
jno
jecxz
cmc
ret
dec
add
jb
in
sub
cmp
mov
inc
add
outsb
jne
pop
fiaddl
sub
mov
add
cmp
inc
push
lods
lock
adc
hlt
stc
addr16
imul
sbb
js
aas
fimull
add
das
add
mov
mov
cwtl
mov
fwait
lcall
cwtl
ret
inc
and
ljmp
faddl
out
xchg
mov
es
xor
sub
in
mov
clc
adc
sub
mov
xchg
cmp
cmpsl
test
test
orl
out
cmp
arpl
jmp
mov
xor
pop
lret
push
mov
es
sub
jo
mov
xorl
pop
inc
test
xchg
push
pop
adc
bound
testb
insl
mov
aaa
adc
pop
push
xchg
loop
jecxz
aaa
inc
dec
add
pop
lods
inc
addl
fistl
stos
cmp
fstpt
call
or
sbb
out
mov
adc
test
push
add
or
loope
jno
popf
pop
sub
ss
fwait
and
pop
js
push
adc
add
ljmp
es
xchg
cmp
pop
cmc
sub
xor
cmc
pushf
pop
iret
adc
sbb
fstp
mov
in
out
arpl
mov
imulb
lods
dec
test
xor
add
xchg
jo
fnstcw
ljmp
lret
ret
dec
mov
and
and
icebp
aaa
or
cli
pop
inc
insl
adc
js
pop
dec
mov
call
pop
xchg
mov
add
pop
jne
jae
popa
pop
inc
jmp
leave
jp
dec
mov
xorb
nop
imulb
out
add
mov
dec
fadd
xchg
pop
loopne
xchg
sbb
sbbl
push
jp
daa
lret
ss
cmp
aas
sbb
movzwl
inc
cmc
mov
xchg
cltd
out
add
dec
sbb
jnp
inc
lret
pop
fcmovnu
dec
loopne
sti
data16
add
jno
xor
insl
sub
dec
or
xchg
notl
lahf
push
je
sub
push
mov
shl
cli
lea
pop
xchg
pop
aad
pop
je
adc
add
mov
repnz
dec
hlt
out
popa
xor
pop
lcall
cmp
cmp
in
insl
les
and
xorl
inc
daa
dec
int3
inc
inc
xlat
negb
xor
sti
pop
scas
sub
in
jb
cli
pop
fs
jg
or
push
stos
in
add
pop
cmp
in
sbb
mov
mov
movsl
ja
mov
js
sti
xchg
bound
outsb
mov
xchg
sbb
xor
ja
insb
lea
push
aad
scas
xor
cmp
mov
aam
test
dec
loop
scas
ret
mov
roll
dec
and
clc
push
enter
mov
adc
cwtl
pop
or
fstps
jp
inc
mov
jge
mov
jnp
or
cmpsl
pusha
xor
mov
icebp
pop
in
dec
push
lahf
test
push
lods
pop
aad
je
or
mov
jp
in
dec
or
sarl
imul
xchg
xchg
mov
xor
jo
test
ljmp
test
sbb
add
jmp
repz
dec
adc
or
loope
pop
sub
mov
lret
fnstenv
aas
int3
loopne
popf
jmp
jno
testb
enter
jge
mov
aas
adc
scas
les
or
mov
insl
push
dec
rorb
pop
cmp
dec
movb
je
sub
bnd
out
cmp
ss
les
pop
les
sub
mov
into
jle
pop
or
pop
xchg
int3
pop
lcall
and
xor
les
out
iret
xchg
pop
jmp
push
xchg
popa
jbe
mov
fldt
sub
dec
negb
ja
push
call
pop
aad
add
push
aad
call
and
or
inc
enter
icebp
lds
addl
cmp
mov
outsb
addr16
loopne
icebp
js
inc
lcall
ret
sarb
add
inc
mov
add
inc
incl
stos
and
mov
push
add
dec
lds
and
cmp
scas
dec
cmp
out
add
loop
insl
leave
and
mov
xor
loope
cwtl
sbb
dec
mov
mov
cld
sbb
mov
lahf
scas
cltd
adcb
outsl
lcall
pop
mov
push
lret
ret
subl
outsb
addr16
lods
push
pop
mov
adc
and
or
jae
repz
jne
fldcw
push
scas
test
je
test
inc
push
cmp
cltd
mov
imul
cli
add
pop
int
aam
shrl
mov
xor
xchg
sbb
sbb
mov
push
push
and
cs
cmpb
pop
push
jae
out
mov
arpl
or
notb
cli
ljmp
push
lods
ja
push
or
shr
into
mov
mov
fidivs
fidivrs
aad
push
mov
pop
mov
jp
jo
stc
fisttpll
cmp
sbb
test
jbe
mov
icebp
rcll
dec
in
mov
daa
dec
jge
mov
test
cltd
sub
sub
mov
in
mov
test
sub
insl
mov
fucomi
xor
cmp
aad
push
push
and
cltd
pop
cmp
cltd
or
pop
inc
icebp
fbld
mov
in
das
ja
xchg
cltd
sub
xlat
shll
jno
in
sub
xchg
repnz
cwtl
adc
xchg
xchg
ljmp
mov
jmp
jmp
les
jmp
cld
dec
imull
cmpsb
inc
jecxz
js
rcrb
je
daa
push
loopne
adc
cmpsb
mov
and
sub
aam
adc
fiadds
add
sub
sub
xor
mov
add
popa
arpl
push
addb
rolb
and
aam
rcl
xchg
cmp
lret
jecxz
dec
leave
xor
roll
insb
shr
add
xchg
jb
sti
inc
out
testb
jnp
dec
mov
fwait
inc
cli
cmp
and
inc
sbb
iret
out
and
dec
jae
jg
pop
push
push
sarl
test
cmpsb
pop
xor
roll
sbb
jmp
cmp
push
jbe
push
adc
push
test
sbb
clc
repz
mov
jae
adc
jnp
adc
enter
pop
rcrb
mov
sbb
mov
nop
push
mov
sub
test
jge
sub
cmpsb
pop
dec
sub
mov
rcrl
dec
loope
enter
jo
sbb
clc
fnstsw
test
je
push
inc
sub
mov
or
jnp
adc
hlt
imul
lods
int3
out
or
pop
dec
sub
in
addr16
shl
and
mov
clc
add
and
jns
int3
mov
mov
in
loopne,pn
pop
sbb
repnz
pop
in
pop
popa
fildll
cmpsb
mov
dec
push
add
lea
lahf
sbb
adc
push
leave
data16
mov
cmp
dec
cmp
mov
lods
jo
ret
lret
push
sbbb
xchg
xchg
out
push
addr16
gs
mov
mov
mov
outsb
push
in
in
push
js,pt
cs
xor
rol
mov
jmp
jo
out
xor
mov
sbb
shld
aaa
jp
dec
pop
inc
inc
lea
lds
rcrb
inc
jne
int
hlt
mov
push
or
cwtl
push
sub
pop
dec
sbb
loop
sbb
inc
pop
or
mov
cmp
out
outsl
test
insl
pop
shll
adc
and
xlat
mov
call
insb
insl
cmp
jle
push
xlat
xchg
add
inc
sub
in
xor
push
mov
notb
test
mov
mov
in
sub
ret
sub
and
std
jne
popa
rorl
jp
hlt
xor
nop
inc
stos
xor
gs
out
jnp
mov
cmpsb
insb
rolb
insb
out
test
jmp
mov
push
pop
adcl
adc
push
mov
sub
rcll
xlat
mov
in
pmulhw
mov
aaa
jae
pop
xchg
xchg
pushf
aaa
jbe
inc
std
mov
jmp
das
and
call
into
in
dec
call
mull
sbb
jmp
outsl
push
xor
into
rcrl
out
mov
add
test
sub
jg
xchg
push
rorb
push
add
cmpsl
xchg
inc
mov
outsb
popa
jle
fldt
shr
sbb
cli
pop
or
sahf
rcl
jb
pop
hlt
insl
adc
mov
out
xchg
dec
pop
mov
testb
in
outsl
mov
in
xchg
and
out
sbb
cli
jo
jmp
xchg
shlb
cmp
pop
fnstenv
mov
insl
or
movsb
movsb
nop
and
lret
or
inc
mov
adc
ds
stos
dec
testl
rcll
cmpsl
xlat
imul
and
jmp
out
pop
nop
mov
bound
mov
fcoml
xchg
sbb
pusha
enter
lock
xchg
and
mov
lds
mov
push
addb
dec
pop
into
or
cwtl
cmp
jnp
imul
mov
and
add
data16
ficomps
jns
fcoml
repnz
mov
enter
push
ds
jg
mov
mov
adc
mov
out
aaa
addr16
mov
cmp
jo
and
call
movsb
fcmovnbe
in
sub
pop
fsubp
add
cltd
lds
lret
or
cli
lods
pop
sbb
inc
push
jecxz
adc
add
jge
das
pop
cmpsl
fsubs
add
shrl
dec
sbb
inc
rep
aam
icebp
xchg
add
sub
mov
stos
push
push
outsb
or
dec
cli
in
push
bound
cmp
push
or
pop
imulb
cmp
mov
inc
icebp
xor
out
dec
sub
or
mov
das
mov
outsl
xor
mov
lods
mov
mov
gs
shlb
mov
rorl
inc
pop
lsl
pop
lods
in
imul
cmpsb
stc
cmp
dec
in
adc
jp
cmp
sub
hlt
inc
stos
push
cs
mov
jne
fsts
clc
add
inc
scas
and
xchg
stos
mov
jno
clc
call
icebp
lods
cld
pop
ret
pop
mov
or
dec
push
add
dec
cs
or
push
cmp
ljmp
fcomps
outsb
push
inc
and
fisttpl
outsb
cmp
mov
mov
insl
inc
imul
loopne
adc
pusha
push
and
push
pop
ret
in
xchg
xchg
std
jnp
adc
sub
push
xor
ret
or
es
mov
jmp
mov
ljmp
xchg
pop
dec
cmovle
mov
sub
shlb
jg
cmp
test
or
push
mov
cmpsb
ss
sbb
call
sub
sub
mov
das
or
cmp
insl
sahf
or
arpl
in
dec
add
lahf
mov
dec
popa
or
sub
sbb
popf
cmp
dec
xchg
lret
push
int3
aaa
into
ret
xor
pop
inc
cmp
pushf
incb
mov
sub
cmpsl
stos
push
push
xor
out
xor
xlat
mov
icebp
aad
jnp
push
imul
jb
imul
in
lcall
dec
cmpsl
or
in
and
das
gs
pop
inc
lds
pushf
push
and
cltd
inc
test
xchg
pop
insb
add
outsl
xchg
adc
xchg
or
mov
xlat
push
adc
inc
cmpsb
cltd
cld
inc
adc
cmp
push
push
adc
xchg
pushf
int
mov
jns
test
je
jecxz
mov
mov
aad
jle
xchg
enter
test
jns
or
stos
mov
std
fbstp
jns
shlb
ds
jp
dec
mov
lcall
xchg
iret
inc
sbb
jne
ja
jl
jae
shlb
jl
mov
hlt
mov
es
push
nop
fwait
mov
fldlg2
in
jecxz
fisttpl
or
aad
in
std
or
bound
es
push
testb
mov
cmp
loop
jge
nop
dec
mov
imul
mov
repnz
or
fcompl
rcl
push
into
push
add
in
xchg
jo
popf
sbb
dec
shl
mov
xchg
cmp
outsl
aad
repnz
push
sbb
adc
or
or
lea
and
mov
mov
sub
push
cltd
fwait
test
sub
add
xchg
daa
push
out
out
pop
andl
cmp
xor
xchg
or
xchg
cmp
pop
pop
fpatan
mov
adc
pop
repnz
iret
adc
add
add
sarb
hlt
xchg
out
imul
or
aad
pop
shrl
ljmp
sub
iret
mov
sub
mov
inc
sbb
ret
xor
mov
push
jge
push
ss
ljmp
fwait
inc
and
mov
cmp
pop
ret
int3
mov
xchg
int3
sbb
ror
push
sub
mov
inc
add
out
xchg
xchg
aaa
rorl
mov
in
mov
sub
cmp
cmpsb
cmpsb
pop
inc
jo
or
sub
ds
xor
test
popf
das
aam
int
jno
mov
and
pushf
add
jno
stos
je
xchg
sbb
inc
lods
mov
cmp
ret
cmp
and
ss
dec
test
aas
enter
adc
ja
pop
out
je
mov
paddd
jns
mov
adc
sub
push
inc
fistps
push
xchg
jb
aad
or
cmp
les
test
or
sti
call
and
adc
scas
dec
test
mov
out
jmp
xor
fldt
inc
xlat
pop
jae
push
sub
push
clc
sbb
and
mulb
mov
pop
jnp
insb
mov
pop
mov
xchg
push
jbe
lret
xor
pop
xor
xchg
lret
insl
out
sub
addl
es
push
loope
call
fwait
sub
or
fistl
mov
imul
arpl
aad
ja
cmp
hlt
cli
sbb
insb
mov
rcrl
fnsave
adc
xor
loope
mov
mov
ljmp
sub
dec
mov
xchg
dec
inc
push
cmpl
pop
push
lcall
cltd
xlat
cmc
es
pop
cltd
stc
leave
push
mov
or
ljmp
iret
push
or
dec
es
imul
sbb
mov
aas
and
push
dec
mov
pop
cltd
adc
xor
cltd
divl
cld
sahf
lcall
push
jne
mov
sbb
leave
repz
in
incl
pop
fwait
call
ss
xor
out
xor
xor
xchg
in
stos
call
mov
push
lods
mov
jge
xchg
mov
jmp
mov
mov
sbb
or
loope
inc
xor
xchg
int
push
imul
mov
sub
out
inc
jge
mov
jmp
xor
xor
ljmp
adc
mov
shr
jns
cmp
and
sub
cmp
mov
mov
add
mov
inc
insl
ret
test
dec
push
mov
je
cwtl
fiaddl
mov
jnp
out
movl
cmpsb
clc
adc
subb
jb
iret
clc
fildll
mov
or
cs
push
push
sub
mov
cmc
or
ret
push
mov
cli
and
xor
rclb
aad
inc
gs
or
les
mull
ds
inc
xor
mov
push
loopne
shr
cmpsl
adc
fdivp
popa
sti
sbb
mov
pusha
cmp
push
mov
push
and
ret
adc
enter
xchg
lcall
es
mov
mov
add
lahf
rcrb
mov
add
xchg
push
mov
mov
xor
jae
mov
scas
orl
outsb
scas
fadd
push
cli
popa
leave
mov
and
pop
imul
sub
push
pop
popf
sti
push
scas
xor
fdivs
sub
jb
js
jns
push
shlb
pop
mov
jne
outsb
cmp
in
pusha
jno
inc
and
pop
mov
popa
addb
fwait
xchg
inc
xchg
scas
mov
cs
sarb
fwait
arpl
pop
nop
jl
das
inc
push
push
mov
in
mov
add
mov
ds
xlat
movsl
mov
rcll
repnz
mov
inc
out
adc
xorl
mov
xor
add
lahf
lods
fwait
movsl
dec
mov
jbe
fsubp
jb
jae
js
in
js
int
sbb
ljmp
stos
xchg
lods
mov
fdivr
andb
xchg
in
nop
adc
cmp
xchg
xor
mov
pop
sub
mov
push
lea
cltd
mov
mov
cwtl
inc
adc
sahf
shll
fs
push
dec
fistpl
jb
push
mov
jno
test
test
add
inc
incb
jg,pt
test
int
xor
xchg
popa
mov
mov
push
jge
cmp
mov
test
jl
jbe
pop
jb
and
mov
test
sbb
ret
mov
call
jecxz
mov
or
or
xchg
cli
or
push
adc
lock
dec
sbb
or
out
dec
leave
inc
sbb
out
repz
add
shlb
or
test
mov
test
lret
add
mov
jp
ret
mov
insl
sbb
cmp
andl
cs
jno
fidivs
xchg
inc
xchg
push
adc
dec
xor
rcrb
pop
sub
aad
dec
icebp
add
push
jae
fmulp
call
fxch
mov
pop
and
xor
in
fs
fs
ret
pop
mov
sbb
insl
aas
or
sub
stc
and
fisttpl
and
jnp
imul
sub
mov
xchg
fs
cmp
out
sub
jp
fisubs
push
push
arpl
addb
sub
cld
mov
int
sahf
mov
add
out
jge
mov
loop
fs
ljmp
in
fimuls
jmp
push
in
pop
ss
dec
push
pop
stos
stos
loope
outsl
add
arpl
push
cmc
cmpsb
insb
outsl
pop
sbb
int3
mov
daa
loop
repz
adc
cvtps2pi
cmp
pop
mov
or
adc
mov
in
pushf
les
shrl
stos
stc
imul
ljmp
ja
data16
test
or
push
sti
jp
rorl
cmc
add
or
jb
push
fwait
gs
jl
idivl
ljmp
lret
clc
movsb
lret
rcll
inc
jb
sub
mov
aad
add
dec
cmc
adc
fs
repz
sub
push
mov
jbe
mov
test
sahf
xchg
push
xor
ss
lds
int
cmc
and
out
push
mov
imul
xchg
mov
ret
mov
ret
inc
jne
jg
in
mov
cmp
aaa
pop
xor
push
sub
jns
flds
imul
repz
out
movsb
mov
xor
inc
jnp
xchg
inc
xchg
xchg
mov
xchg
fldt
xor
pop
sub
outsl
or
movsl
movsb
inc
stos
jbe
insb
mov
adc
push
inc
imul
stos
lahf
push
jg
ds
addr16
mov
pop
adc
add
icebp
fdivl
pop
push
aad
sbb
jp
out
ljmp
psllw
icebp
cwtl
sbb
sahf
fs
les
nop
aad
push
les
aam
add
xor
xchg
icebp
dec
inc
inc
add
cli
sub
adc
add
adc
cmp
hlt
mov
repnz
cmp
mov
cmp
lods
clc
cmp
repz
test
xchg
scas
sub
add
jo
outsb
fldcw
and
ljmp
in
push
xor
push
xchg
aam
xchg
xor
aad
cmpb
add
pop
add
mov
cltd
or
mov
test
or
pop
sbb
dec
xor
ficoms
pop
sub
adc
xor
or
add
add
mov
outsl
hlt
add
movsb
lcall
and
test
aaa
shrl
cmpsl
push
icebp
popa
cld
jp
mov
fwait
scas
sbb
cmpsb
add
adc
andl
push
shr
inc
mov
mov
lock
dec
jge
stc
add
or
or
pop
je
push
push
xor
into
mov
lea
fwait
ja
jge
jns
jge
lock
mov
loope
or
test
adc
pusha
push
into
jne
fwait
daa
faddl
push
jo
mov
inc
sub
pop
es
cmc
shll
pusha
add
stos
mov
push
shl
jbe
jecxz
inc
fsubl
jmp
shrl
jnp
xchg
into
ss
mov
je
jne
sbb
dec
clc
ljmp
push
xor
xorl
lret
fildll
lret
add
ss
adc
sub
jmp
aad
leave
sti
mov
xor
jl
jmp
and
daa
cmc
mov
jg
xchg
xchg
xchg
lods
dec
pop
and
sbb
jmp
js
mov
frstor
cmp
xor
inc
cmp
pop
enter
addr16
test
xor
cmp
popf
fdivs
aad
xchg
sbb
adc
enter
repnz
in
mov
add
mov
add
or
dec
and
stos
push
adc
pop
push
mov
mov
call
jmp
inc
nop
jmp
leave
or
xorb
insl
mov
jle
mov
jns
mov
movsl
mov
mov
ja
sbb
imul
insl
push
andb
xor
roll
adc
rclb
adc
or
ds
fidivrs
test
jl
push
pop
inc
and
push
int3
ficoms
sub
jecxz
adc
mov
xchg
in
push
movsb
adc
pushf
sub
add
test
xor
insb
mov
or
jb
shl
lods
mov
ffree
cmp
adc
push
test
jns
fwait
and
sahf
jle
cs
fldenv
jnp
xchg
ret
es
scas
dec
dec
cwtl
mov
xor
jmp
dec
divl
dec
test
test
push
out
and
cmp
out
repz
push
mov
sbb
aaa
aad
ret
cwtl
loope
test
lahf
or
jg
and
pop
xor
stos
fimull
ret
mov
or
mov
fcompl
mov
inc
arpl
in
fimull
sbbb
mov
jno
clc
add
dec
std
shrb
sbb
add
fwait
idivb
mov
aas
clc
pusha
lcall
in
or
sbb
test
mov
lahf
cs
inc
je
and
xchg
fcmovb
adc
mov
add
and
movsb
push
jbe
test
lock
pop
and
pushf
xor
pop
jecxz
mov
movsl
push
adc
in
outsb
adc
incl
jbe
movsb
daa
daa
and
mov
xchg
cli
out
out
sbb
adcb
sti
and
imul
dec
dec
jp
fildll
shrb
test
mov
xchg
pop
mov
aam
add
out
nop
pop
ficompl
cld
js
pop
pushf
lea
mov
pop
or
test
sub
enter
mov
jnp
xorb
mov
popa
jno
pop
jmp
mov
mov
xor
cmc
out
bswap
lea
pop
jmp
mov
cld
mov
or
nop
pushf
push
and
das
cltd
out
in
lods
xor
out
mov
sub
sub
lcall
mov
testl
ljmp
add
cmp
jnp
aas
sar
js
dec
iret
sbb
pop
xchg
or
cmp
out
lock
mov
adc
xchg
idiv
sti
jmp
mov
push
and
mov
sar
jb
adc
push
pmulhuw
mov
mov
test
sbb
cmp
loop
xchg
mov
xor
mov
or
jecxz
dec
and
cmc
cmp
out
outsl
fisttpl
rorb
mov
jbe
add
mul
leave
fdivs
std
jbe
in
lock
cmp
add
add
daa
mov
lds
loope
inc
std
push
mov
pusha
mov
adc
fldz
jae
or
fcmovne
popf
mov
xor
in
lods
or
lods
hlt
or
daa
mov
jno
mov
enter
push
sbb
pop
push
cli
mov
fstpt
out
xlat
cmp
xchg
shrl
pop
pop
repz
pop
mov
test
data16
lods
mov
mov
pop
loopne
push
fldenv
leave
inc
sti
xchg
add
inc
daa
xchg
pop
mov
jo
loop
jb
jne
loopne
xor
and
xor
rcll
lods
mov
fmuls
mov
pushf
xor
pop
sahf
xchg
jmp
in
outsl
mov
ret
ss
mov
insb
jp
aas
pop
outsl
cli
add
xor
dec
dec
subl
add
jl
mov
repnz
lods
fwait
mov
lret
nop
call
cmpsb
jecxz
dec
jle
sub
aas
xchg
pop
ds
insb
add
sahf
popa
inc
scas
shr
test
call
nop
iret
in
xchg
pop
ja
ja
xlat
orl
and
mov
sbb
mov
and
mov
andl
lea
movzbl
and
mov
and
mov
mov
sub
orl
add
mov
mov
xor
orl
add
movl
jne
jmp
movl
cmpl
je
cmpl
jl
jmp
pushl
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
negl
sub
xor
mov
mov
mov
orl
xor
xor
adcl
sub
andl
sub
xor
mov
movl
mov
movl
mov
jmp
movl
cmpl
je
cmpl
jb
jmp
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
adcl
xor
subl
xor
sub
sub
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movzwl
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
jmp
mov
sbb
mov
add
adcl
imul
mov
adc
mov
mov
xor
mov
adcl
add
or
mov
mov
adc
mov
add
adcl
xor
adcl
mov
adcl
mov
mov
andl
add
addl
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
jmp
ficomps
xchg
mov
int
jl
pop
jl
movsw
in
loope
ficoml
or
or
pop
add
test
push
xor
out
out
cmp
lods
jge
in
pusha
incl
dec
int3
pop
rorl
add
pop
sbb
sbb
add
and
sbb
decb
jl
int3
aam
mov
or
xchg
int
test
insb
lret
add
mov
inc
mov
imul
addl
popf
movsl
pop
push
into
and
or
mov
cs
pop
inc
insb
adc
fwait
mov
stc
gs
cmc
loopne
out
shr
jmp
out
pop
mov
sbb
mov
inc
xor
pushf
fstpl
mov
aam
testb
xchg
mov
push
enter
enter
sbb
pop
test
sub
aaa
cmp
pop
mov
adc
ficoms
loope
cmp
sub
fnsave
stos
sub
in
test
pop
xor
mov
fs
push
addr16
js
jmp
xchg
mov
or
lock
xchg
push
in
lods
enter
cwtl
push
cmp
ficompl
mov
movsl
cltd
xchg
cwtl
jnp
imul
dec
scas
mov
lods
jnp
scas
nop
fdivr
sahf
xchg
pop
hlt
daa
push
enter
ljmp
scas
jb
pop
push
int
pushf
push
data16
add
popf
and
jb
pop
dec
rclb
enter
push
sbb
lret
inc
int3
xlat
into
cmp
mov
push
lahf
hlt
jl
ret
lods
push
pusha
adc
pop
mov
sub
into
or
jecxz
loopne
fiadds
lods
sbb
adc
out
js
pop
bound
sbb
test
in
outsl
cmc
cltd
mov
mov
bound
sbb
adc
jo
mov
insb
repz
jae
incl
xor
iret
cmp
repnz
imul
pushf
cmpl
rcrl
adc
cmp
cmp
or
mov
mov
gs
lds
inc
jne
dec
negb
pop
fdivl
cmp
jecxz
loopne
or
push
out
enter
out
hlt
in
mov
fmull
sbb
dec
mov
das
push
inc
lods
mov
push
dec
sti
imul
popa
adc
fwait
xor
xor
and
pusha
addr16
lds
hlt
fildll
cmp
adc
jae
jge
xor
std
mov
fdivs
add
jl
sub
mov
int3
xor
add
scas
xor
mov
inc
decl
jb
push
lret
fsub
cwtl
aad
adc
scas
xor
rorb
cli
getsec
inc
ljmp
imul
cmc
push
ss
int3
icebp
and
idivl
add
and
daa
cld
or
mov
rclb
outsl
addb
cli
in
jns
inc
not
xchg
sub
inc
mov
add
je
popa
inc
adc
jmp
pop
adc
in
into
repz
xor
xor
adc
inc
jno
ds
xchg
jecxz
jmp
add
fsubrl
imul
inc
dec
fwait
xor
test
inc
fwait
into
jp
mov
pop
xor
ret
shlb
xchg
enter
push
sub
dec
lock
pop
fistpll
sub
in
sbb
out
movsl
add
hlt
insl
push
mov
push
adc
mov
test
loope
imul
cltd
test
jp
inc
sti
pop
popl
mov
lret
ret
push
pop
adc
xchg
out
jecxz
or
inc
pop
lcall
data16
pop
mov
add
les
mov
add
dec
jp
jb
xor
outsb
outsb
call
insl
lahf
lds
dec
mov
mov
mov
dec
insl
xor
pop
lret
push
js
inc
mov
shr
int3
lods
dec
je
movsl
mov
jg
cwtl
les
cmpl
adc
push
lret
mulb
arpl
bound
pop
in
adc
aad
aas
bound
adc
les
push
jg
jns
pusha
leave
cmpl
mov
cltd
dec
into
cmpsl
shlb
shlb
add
mov
push
loopne
and
mov
cs
aad
repz
mov
push
ror
mov
cmpb
imul
jge
add
dec
pop
pop
stc
imul
jo
mov
fwait
mov
insb
jmp
pop
pop
es
pusha
test
pop
sbb
push
das
out
push
gs
cmp
ss
insb
mov
or
cmp
dec
mov
xor
xchg
clc
push
inc
add
mov
ret
int3
cmp
ja
subl
cmpb
or
fmull
mov
or
out
mov
mov
xchg
mov
add
mov
outsl
sti
jp
pop
or
popa
enter
lcall
dec
add
mov
jb
push
dec
scas
pop
push
sbb
iret
lea
mov
sbb
pop
sti
xchg
imul
dec
push
sub
mov
push
or
test
imul
xchg
pop
pop
nop
shll
or
insl
sub
pop
cmp
and
inc
jecxz
jle
or
stc
xchg
xchg
clc
or
sbb
push
cmp
jp
cmpsl
pop
cwtl
sbb
xchg
push
stc
sub
cmp
outsb
xchg
pop
pusha
dec
invd
pop
pop
push
fldcw
cmp
rcrb
fs
lret
adc
xlat
adc
jge
mov
sarb
lcall
pop
push
stc
movsl
test
sub
test
push
fadds
bound
cs
cs
pop
mov
mov
test
mov
das
inc
rcll
cltd
fwait
mov
bound
aaa
xchg
mov
push
lods
dec
lds
xor
data16
pushf
je
sbb
jo
dec
xchg
pop
mov
cmp
pop
jae
aad
fidivrl
stos
popf
aad
mov
or
inc
das
pop
ss
mov
and
das
jle
test
lret
and
movsb
rorb
sahf
les
lret
jno
jle
repz
inc
test
and
outsb
and
shl
shlb
pushl
adc
out
andl
mov
nop
adc
mov
pop
gs
push
push
leave
subb
icebp
mov
popa
lahf
add
mov
push
dec
aaa
or
mov
mov
mov
pop
dec
popf
adc
xlat
sub
sub
pop
cltd
dec
mov
mov
loop
cld
sbb
jg
mov
push
in
lds
push
mov
xlat
mov
inc
loop
mov
xchg
jne
std
aaa
repz
in
mov
xlat
mov
ja
das
push
sarb
popa
int
push
subb
push
ret
sub
jmp
loop
movsl
iret
mov
ror
aaa
or
xor
test
pop
adc
push
movsl
mov
stc
and
mov
xchg
addr16
or
pop
xchg
dec
dec
in
ret
popa
mov
and
out
mov
adc
jecxz
aas
ja
stc
bsr
sbb
repnz
lock
xchg
mov
repnz
sbbl
lahf
xchg
adc
jle
lret
mov
sbb
jnp
pop
xchg
fs
dec
jbe
in
pop
cmp
jmp
adc
mov
push
pushf
pop
fsts
jle
lods
pop
or
mov
idivb
mov
jg
mov
pop
add
pop
lea
xor
pop
pop
pop
pop
mov
decb
sub
mov
jae
pop
es
into
pop
fs
xchg
sbb
and
adc
jp
push
std
push
into
aaa
mov
fstps
jbe
mov
pop
push
outsl
adcl
and
in
jle
bound
mov
es
rorl
dec
inc
mov
cs
cmp
mov
int3
fcompl
fwait
mov
mov
repnz
xchg
sbb
jp
rorl
inc
mov
and
into
rclb
jb
or
std
mov
cmp
in
adc
mov
js
add
fiadds
in
cli
sbb
and
adc
addr16
lahf
es
shrl
test
stos
inc
adc
xchg
ds
inc
xor
popf
jmp
loope
xor
loope
scas
fs
decb
add
adc
cmc
nop
adc
bound
add
cmp
mov
popf
xchg
jmp
imul
mov
gs
cmp
lcall
idivl
cmp
cmpb
ds
pop
int
mov
mov
add
adc
mov
and
out
shrb
out
xchg
sbb
ds
int3
lds
addr16
mov
mov
out
or
js
mov
fdivr
add
gs
push
int3
ds
xchg
sti
mov
les
popa
mov
push
out
xor
je
loope
in
shr
mov
aad
aaa
mov
fldl
out
sbb
je
inc
cmpsl
xchg
cmp
xor
nop
cli
sahf
cmp
scas
divl
clc
loopne
icebp
lret
inc
jnp
xchg
mov
inc
jns
push
dec
push
and
fnsave
cli
adc
rcll
jg
lcall
mov
in
push
stos
or
aam
add
add
mov
and
lds
mov
nop
int3
dec
dec
test
cwtl
mov
aas
pushf
shrl
arpl
sub
mov
dec
add
mov
dec
xchg
addr16
repz
dec
push
push
in
sub
jno
iret
test
shrb
jnp
repnz
push
adc
jle
ret
dec
inc
arpl
mov
pop
jbe
xchg
int
int
stc
or
adc
mov
and
stc
inc
xchg
call
mov
cs
sub
sub
imul
mov
mov
outsb
clc
cli
into
testb
jle
sub
jno
push
xor
orl
mov
add
aad
lock
out
jp
mov
dec
adc
xor
das
mov
jb
stos
dec
inc
cmpb
dec
adc
in
mov
sarl
dec
ljmp
cmp
fs
lock
movsb
pushf
je
mov
enter
inc
in
push
fldenv
fwait
rcl
es
stc
mov
mov
dec
cmpsl
lahf
stc
lret
dec
out
lcall
jl
mov
js
aam
push
cs
sbb
push
and
test
mov
xchg
out
mov
jbe
lcall
out
add
cmp
jg
add
add
in
mov
nop
inc
or
stos
cs
dec
jl
mov
lcall
pop
mov
leave
jmp
and
dec
jge
dec
sub
inc
shrb
sbb
cmpsb
sbb
aaa
jb
push
jecxz
inc
addb
fcoms
mov
cmpsl
add
and
add
add
xor
lods
in
xorl
and
adc
jnp
mov
mov
fs
in
jg
cltd
push
leave
fs
pop
sarb
sbb
adc
pop
and
ret
mov
sub
lock
pop
stc
mov
mov
subb
mov
pushf
repz
push
lcall
mov
ljmp
xchg
adc
add
dec
dec
addr16
dec
and
test
popf
xchg
xor
jmp
in
push
adc
and
cwtl
lods
sbb
and
jp
std
xchg
jl
aas
lods
inc
inc
push
lds
leave
ljmp
lret
fsubl
pop
outsl
mov
mov
iret
outsl
stos
pop
addr16
xchg
test
shrl
mov
dec
jo
push
pushl
pushf
mov
mov
jbe
popf
xlat
xor
idivb
mov
xor
pop
dec
or
test
mov
cmpsb
in
cmc
cmp
cs
mov
insl
in
mov
or
jne
xor
sub
pop
shl
xor
mov
push
arpl
mov
testl
adc
daa
es
popa
stos
push
push
aad
scas
cwtl
sub
shll
clc
and
lahf
cltd
sar
movsl
xchg
insb
cmpsb
dec
pop
gs
loopne
mov
ret
push
pop
out
and
pop
data16
cmc
inc
mov
adc
mov
aam
stos
sub
add
jecxz
adc
in
stos
add
xchg
dec
add
imul
fnsave
leave
imul
lds
sub
add
adc
ret
subb
les
and
out
movsb
in
push
repnz
mov
dec
sbb
sbb
into
in
call
sbb
xchg
lods
lahf
repz
call
repnz
jl
adc
in
add
dec
mov
mov
or
ret
xor
jp
jnp
in
and
mov
xchg
or
xor
pop
and
push
jle
pushf
add
lods
mov
lock
adc
popa
in
add
jnp
sub
adc
cmp
lret
out
mov
fiaddl
dec
pushf
jmp
xchg
rdmsr
jp
mov
mov
mov
hlt
fisubrs
push
xchg
call
lret
sarl
add
imul
es
fdivp
sbb
stc
aaa
add
in
mov
loop
fs
out
enter
xor
add
in
xor
sarl
xor
into
inc
aas
int
push
iret
out
add
test
test
cmp
mov
lahf
mov
lahf
cltd
test
xor
push
js
and
push
pop
xor
push
push
notl
fmulp
cmp
cmp
fwait
dec
arpl
loopne
mull
jae
lods
xlat
hlt
mov
sub
or
push
mov
stc
cmc
push
dec
sbb
std
test
lret
mov
or
sub
les
jmp
xchg
xchg
enter
adc
cmpsl
dec
dec
lsl
push
fiaddl
cmp
xchg
jae
dec
cs
cmp
insl
int
outsb
sbb
sub
into
jp
lret
inc
test
mov
or
sub
xchg
push
and
cmp
icebp
mov
je
inc
jmp
popa
cli
mov
jne
push
xor
repnz
ret
loope
fwait
xlat
dec
push
jnp
cmp
filds
adc
pop
mov
push
fiaddl
vcvtpd2dqy
adc
xor
inc
add
add
adc
add
cld
xchg
inc
jae
call
les
pop
daa
mov
movsl
push
adc
mov
das
in
test
inc
sbb
fdivl
jbe
fs
cmp
xchg
mov
push
xor
divl
push
pop
push
pushf
push
vphaddubd
mov
jns
jp
adc
negl
push
xchg
xor
outsl
mov
pop
outsl
mov
xor
out
add
fdivrp
push
mov
xor
lret
inc
jnp
movsb
js
push
mov
jp
iret
push
cmp
cmp
xor
xchg
lret
loopew
mov
das
out
xchg
adc
mov
dec
mov
lea
jae
mov
out
fcoms
pop
xchg
adc
shlb
push
fcomps
sub
xchg
in
sub
mov
xchg
bound
andb
adc
adc
jo
sahf
jae
xchg
xor
fmul
push
sarl
pop
cli
xor
push
add
aam
dec
icebp
test
ljmp
loope
daa
mov
jae
arpl
fildll
dec
inc
filds
sbb
sub
xchg
mov
fldt
movsl
adc
lods
mov
in
cmp
jecxz
scas
scas
sbbb
inc
es
ret
xchg
pushf
jbe
fsubrl
lods
or
in
es
hlt
xor
nop
or
dec
add
icebp
xchg
imul
mov
hlt
cs
in
xlat
push
sarl
fwait
inc
aas
or
jg
imul
std
xor
sbb
jns
sub
lods
mov
sub
mov
cmp
loopne
pop
push
aam
lds
mov
popf
loopne
pushf
test
std
mov
leave
mov
stos
sbb
mov
prefetch
or
sub
xor
out
in
mov
in
aaa
fiaddl
pop
mov
adc
cli
mov
push
pop
movsl
aas
out
sbb
ljmp
adc
addb
ret
in
xrelease
push
dec
pop
stc
mov
aaa
or
pop
push
mov
add
rcl
sti
cmc
in
fs
ffreep
mov
aad
aas
xchg
pop
repnz
and
xchg
adc
pop
inc
aas
xor
lahf
inc
or
sbb
in
pop
mov
mov
pusha
mov
dec
mov
jb
or
lea
aas
loop
icebp
loop
test
int3
fnstcw
or
loope
xchg
stos
test
inc
sub
je
xor
or
jecxz,pt
fcoms
adc
fstpl
inc
sbb
adc
jae
jmp
push
jl
stc
lea
xor
jmp
fwait
cmpsl
xchg
jecxz
pop
fldenv
mov
or
pop
xlat
xor
dec
mov
movsl
pop
or
out
shl
add
push
icebp
jbe
dec
mov
or
icebp
rclb
sbb
notl
scas
adcl
loop
lock
sahf
movsb
jns,pn
mov
push
shll
jo
lods
jno
mov
outsl
or
mov
mov
cli
cmp
jno
pop
das
pop
sarb
inc
mov
cmp
sbbb
std
dec
cmp
leave
pop
cmpb
movsl
test
cmpsb
lahf
sahf
in
mov
xchg
pop
addr16
mov
hlt
testb
xor
jae
out
in
xchg
pop
jae
and
adc
fbstp
dec
in
push
sbb
cmp
add
movsl
sarl
jns
or
pop
add
adc
cwtl
mov
lret
add
fadds
adc
xchg
and
dec
pop
or
jo
inc
sbb
ljmp
xor
mov
jl
insb
or
popf
push
push
mov
mov
aaa
in
roll
stos
xor
or
lcall
iret
sub
inc
sbb
or
in
popa
xchg
or
rorb
mov
mov
adc
out
fildl
rcrb
orb
cmp
les
lea
inc
cmp
and
into
mov
pop
or
sbb
lea
lds
or
imul
sar
aaa
mov
dec
mov
mov
negl
add
sbb
xchg
mov
inc
mov
jl
cmpl
jp
scas
lret
leave
maxps
jecxz
add
fsts
push
fwait
jo
adc
pop
outsl
lret
sub
push
shll
mov
pmaxsw
outsl
sbb
sarl
xchg
test
adc
xor
mov
daa
jecxz
fsubrl
fs
xchg
les
xor
mov
sub
push
jnp
or
fdivp
fisttpl
mov
shll
int
adc
mov
push
jl
push
adc
ljmp
lods
shr
cmp
mov
add
sub
xchg
mov
test
nop
aas
pop
xorb
addr16
imul
sbbb
ret
shrl
pop
mov
test
sbb
fadd
xchg
addr16
dec
bound
sbb
fsubr
push
mov
adc
or
mov
add
popa
jmp
and
push
or
ss
mov
mov
push
pop
outsl
jnp
dec
pop
and
pop
mov
inc
pop
jge
pop
or
mov
enter
clc
sbb
call
das
movsb
xor
jo
add
shl
shlb
std
adc
pop
shl
ret
adc
shrb
sub
push
add
jmp
inc
gs
sub
testb
icebp
mov
int3
out
add
das
adc
add
pop
sbb
pop
fsub
or
ficomps
pop
xor
mov
cmpsl
xchg
add
mov
adc
jb
add
cmp
in
nop
mov
lods
xorl
scas
fs
fstps
sbbl
sbb
rdpmc
pop
int3
mov
inc
cmp
fisubrs
popa
fdivl
jno
mov
stos
filds
cmp
iret
pop
cmp
mov
jmp
mov
jecxz
shll
leave
jnp
negb
jnp
inc
add
mov
mov
push
cmp
sub
add
push
pushf
movsl
xchg
xchg
stc
mov
test
aaa
adc
ret
sbb
cwtl
inc
adc
xor
xor
dec
faddl
mov
mov
and
push
ljmp
fisubl
adc
lds
dec
adc
call
leave
out
mov
jnp
cmp
popf
fiadds
jmp
pop
mov
sbb
pop
mov
insb
data16
movsb
jmp
cmpsl
insb
das
jg
xchg
ret
fwait
sti
stos
out
cmpl
jns
or
fimuls
fldl
mov
lret
push
cli
and
stos
outsb
mov
in
cmp
mov
mov
rep
dec
jne
jbe
push
pop
fwait
mov
pop
sub
push
insl
mov
out
sar
hlt
cmp
mov
jge
cmp
push
daa
and
xchg
psadbw
icebp
push
xchg
addr16
rcrb
loopne
dec
std
mov
jno
xchg
addb
xchg
mov
dec
mov
icebp
cmp
loopne
mov
data16
sub
in
insb
cmp
aaa
cltd
mov
or
pop
add
push
adc
rcl
cmp
scas
lcall
push
mov
into
pushf
xchg
lock
dec
or
jge
mov
popf
mov
hlt
jmp
adc
decb
sbb
sbb
dec
add
pop
loop
inc
sti
shr
mov
dec
xor
pop
mov
fs
jp
adc
movsl
pop
icebp
movl
nop
jp
shlb
jle
push
loopne
bound
imul
shlb
xor
mov
out
mov
or
xchg
std
outsl
add
xor
outsl
xlat
andl
sti
cmp
fwait
jge
ret
xchg
push
out
sbb
cmpsl
shll
dec
push
in
sbb
in
pop
pop
xchg
xor
data16
sti
jge
int3
jne
test
pop
arpl
xlat
cmp
rclb
movb
into
xor
dec
cmc
je
push
xchg
xor
or
les
das
inc
roll
ficoms
stos
int
dec
popa
stos
daa
push
icebp
jmp
or
dec
cmp
push
cmp
mov
push
push
sahf
mov
rorl
lea
ret
std
fincstp
or
fwait
sub
nop
bound
jo
or
push
adc
sub
mov
push
cmp
mov
insl
pusha
test
sub
jmp
jns
mov
es
xchg
scas
call
in
adc
fimull
es
push
jnp
add
aas
fistl
xchg
fcompl
push
into
xchg
mov
sbbl
mov
out
leave
xlat
cmp
cmp
push
adc
nop
mov
pusha
fidivl
sbb
subb
cwtl
mov
test
and
xchg
loopne
lods
or
lcall
fistpl
pop
dec
lret
cmp
add
pop
dec
dec
xor
xchg
cmc
mov
mov
cmp
pop
dec
notl
in
or
pop
pop
mov
mov
xchg
ret
pop
out
adc
invd
lret
push
cmp
jne
push
cltd
je
jae
andl
ss
or
cmp
mov
lcall
jecxz
popf
jmp
out
ljmp
imul
mov
arpl
scas
jge
fsubl
loopne
leave
or
add
sub
sahf
aad
rolb
pop
push
das
cwtl
inc
pop
outsl
out
xchg
and
aas
jno
xor
pop
pop
xchg
fildl
daa
mov
daa
bound
test
cmpsb
mov
sbb
and
inc
sub
jo
movsb
push
pushf
in
cmp
sar
shll
or
rclb
inc
scas
or
add
int3
test
jg
push
dec
data16
loopne
sahf
mov
cld
pop
fstl
sbb
jbe
add
movsb
jnp
pop
test
and
push
or
xor
std
push
mov
pop
movsb
in
mov
cwtl
xchg
hlt
insb
pop
andl
popf
xchg
xor
imul
mov
fwait
aaa
add
fbstp
jmp
fistl
sbb
push
test
ret
subb
fistpl
cltd
add
in
jns
repz
sbb
mov
xchg
mov
inc
sbb
mov
arpl
cmp
dec
call
mov
jnp
es
dec
xorb
daa
add
or
je
dec
pusha
jb
out
mov
in
cmc
inc
stos
lahf
xor
addl
popf
sub
jae
pinsrw
cwtl
push
inc
movb
jne
sarl
out
cmpsb
jl
das
or
push
push
ljmp
push
imul
xor
icebp
les
decl
sbb
and
mov
insl
jb
cmp
jmp
adc
mov
gs
fcomps
fistpll
bound
shll
cmp
cli
push
sbb
mov
dec
xchg
jo
test
add
in
mov
sbbl
imul
lret
push
loop
movsb
fisttps
xchg
and
test
flds
shlb
jg
add
cmp
cwtl
jbe
div
xor
stc
xor
pop
mov
imul
and
dec
ficompl
add
ja
jne
cmc
add
pop
ret
idiv
push
add
dec
stos
scas
sbb
test
repz
ja
imul
mov
imul
loop
outsb
sub
popa
rolb
test
loope
aas
push
add
push
cmc
dec
mov
dec
out
cwtl
daa
popf
push
mov
stc
out
sub
ja
stos
jmp
cld
out
add
aaa
pop
shlb
insb
xchg
das
sbb
daa
lea
pop
cli
rcr
cmpsb
shlb
int3
icebp
or
cmp
cmp
and
sbb
mov
jae
or
into
imul
dec
xchg
lahf
stos
test
sub
xor
jmp
cwtl
aas
ret
pop
push
xchg
mov
test
call
and
lahf
mov
stos
arpl
popa
loope
fucomp
lods
test
insb
push
stos
cld
lods
fs
in
test
dec
pop
in
das
xchg
dec
iret
or
mov
xchg
dec
fs
adc
xor
jle
inc
lret
inc
scas
or
sub
push
test
popa
cmp
in
leave
lret
mov
daa
dec
adc
repz
rcrb
dec
ret
nop
sti
cmp
mov
pusha
mov
xor
notl
or
movsb
or
adc
xor
sbb
orl
push
pop
cmp
sub
pop
xor
jbe
xor
mov
push
inc
sbb
out
xor
xor
pop
addr16
cmp
sub
mov
xchg
enter
call
movsb
cs
xor
loope
shrb
mov
jbe
ja
stos
ljmp
stos
loopne
and
mov
jle
or
cmc
fwait
or
dec
dec
mov
int
ds
and
xchg
scas
push
cmp
pusha
repz
cmp
lds
add
mov
das
mov
cmp
or
xchg
cmc
out
add
cltd
pop
jmp
push
lret
push
pusha
or
enter
pop
ficomps
movsb
sbb
add
push
or
xor
adc
arpl
pop
push
popf
xorl
xor
addr16
rcl
lret
test
loope
testb
inc
insl
icebp
test
inc
cmp
imul
cmp
and
dec
das
inc
push
cmc
aas
inc
cmpsl
jp
cwtl
pop
dec
test
or
sahf
pop
mov
pop
popa
inc
sbb
push
and
jp
xor
sub
and
mov
ljmp
jnp
adc
lds
inc
push
inc
xor
fwait
or
adc
outsl
adc
or
loop
dec
xchg
dec
xor
sbb
sbb
rcr
imul
jmp
xor
inc
or
std
lods
test
jne
jno
push
pop
imul
loop
cmp
cs
mov
adc
inc
cmpsb
sub
test
les
into
cs
dec
popa
mov
pusha
sub
test
push
push
inc
lods
adc
mov
or
faddp
xchg
out
scas
xor
inc
jae
mov
mov
cld
cmp
fwait
cwtl
dec
jl
rorb
jb
add
inc
sub
arpl
lods
adcl
sbb
fwait
or
lret
jp
mov
mov
jb
pop
push
fldenv
xor
dec
sub
xor
fwait
cmp
and
mov
es
jnp
mov
nop
testb
mov
add
ljmp
mov
mov
jmp
inc
xchg
cmp
adc
fstpt
stc
outsb
loope
and
js
out
cld
pop
in
push
cmp
cmp
insb
jg
data16
inc
divb
xorl
jns
mov
ret
ja
adcb
inc
cs
xchg
je
sti
sbb
or
jg
adc
pop
lcall
xchg
mov
or
sub
mov
pop
test
adc
fcoms
adc
pop
cmp
mov
xchg
mov
gs
outsb
or
mov
aaa
out
data16
inc
aad
iret
xchg
pop
jns
inc
aas
push
and
sti
mov
stc
fdivl
es
or
mov
pop
and
cltd
xchg
and
mov
loope
bound
jecxz
cmc
clc
pop
je
enter
jb
jne
stc
inc
push
popa
mov
dec
int
sub
pop
jle
or
lcall
push
cmp
jl
ret
mov
pop
xchg
mov
hlt
pop
cmpsl
push
lock
xor
jmp
and
inc
inc
in
adc
clc
mov
out
xor
fcomp
ja
adc
pop
dec
or
ret
ret
pop
das
add
aaa
mov
mov
push
xchg
dec
ja
aad
dec
scas
dec
in
adc
xchg
mov
xor
out
mov
imul
lret
dec
lcall
or
pop
xchg
cmp
xchg
mov
rol
pop
mov
xchg
lret
pop
or
jmp
dec
fs
sbb
mov
mov
sti
inc
push
pop
jmp
btr
mov
cmp
xor
in
out
loope
cmp
or
cmpsl
fisttps
ret
test
ss
pop
fwait
int3
pop
nop
sbb
mov
pop
ret
iret
sub
pop
adc
out
mov
out
insl
es
mov
pop
push
xor
stc
pop
movsb
cmp
jo
mov
sbb
inc
dec
loop
shll
inc
mov
fcoml
imul
lcall
bound
call
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
jmp
rcrb
and
rorl
fists
jl
jmp
jl
into
cmpsb
xchg
adc
xor
popa
inc
sbb
jl
mov
adc
aam
sbb
mov
rcr
pop
add
fwait
xchg
aas
ret
mov
stos
jmp
xchg
leave
jmp
outsl
jge
pop
loop
test
xchg
addl
imul
out
outsl
neg
xchg
adc
repnz
mov
xor
dec
movsb
sbb
inc
sub
and
in
and
pop
push
jne
mov
xor
sub
mov
jo
jo
xor
sbb
or
add
dec
pop
dec
nop
ret
stos
mov
pop
test
pushf
xor
negl
shll
add
sub
scas
adc
mov
and
adc
sti
imul
lods
cmc
call
nop
popa
and
ss
jg
mov
lock
xchg
mov
imul
jbe
ljmp
push
sub
push
mov
ja
out
push
cvttps2pi
xor
repnz
out
cmpsl
pop
mulb
stc
lds
shr
xor
repnz
xchg
mov
testl
jl
cwtl
lret
popa
cmp
xchg
movsl
pop
hlt
stos
cmp
cmp
sarb
lret
mov
push
jo
cli
movsb
adc
push
ds
mov
xor
cmpsl
jl
cwtl
inc
nop
ja
and
lcall
iret
gs
or
or
out
add
adc
inc
push
test
data16
mov
stos
je
sbb
outsl
ds
push
stc
lds
mov
xchg
fldenv
add
pmulhw
push
roll
out
lds
xchg
fisttps
popf
rol
xchg
or
pushf
add
pop
and
mov
xchg
push
or
sbb
imul
pop
cmpsl
test
scas
push
lods
sub
lcall
loopne
inc
out
or
add
addr16
jb
roll
sbb
mov
out
fisttpll
jo
cmpsb
aaa
add
daa
mov
pusha
popa
pop
cmp
lods
lods
mov
pop
cs
rcrl
shrl
cmpsl
daa
hlt
fimull
bound
adc
das
dec
and
and
out
fdivr
push
cwtl
cli
popa
les
xor
sub
xchg
push
scas
mov
lcall
ss
push
lock
hlt
sbb
mov
mov
fstps
in
cs
sub
sub
scas
test
xor
pop
mov
add
iret
adc
inc
ss
cmp
cmp
insb
dec
jle
mov
mov
notl
mov
lods
or
daa
mov
cmp
xor
std
rcrl
jnp
inc
in
inc
pop
insb
in
sub
xor
or
lahf
out
inc
cmc
or
test
stos
add
push
inc
scas
inc
icebp
mov
outsl
cmpsl
lret
inc
repz
pushf
pop
xor
push
ja
rcr
fldln2
stos
xor
out
jb
xchg
or
jbe
lret
xor
stos
fldenv
stc
xchg
dec
or
push
mov
in
mov
fiaddl
lods
push
push
lcall
dec
addb
in
fldl
add
jg
dec
push
in
loop
adc
push
adc
inc
aaa
xlat
imul
and
movl
cmc
xchg
mov
mov
rcl
mov
xchg
jo
mov
xchg
dec
xchg
mov
les
push
in
mov
dec
loopne
push
test
mov
cld
sub
pop
mov
cmpb
dec
push
adc
stos
xchg
mov
mov
das
push
mov
push
lcall
sbb
sub
mov
adc
jno
push
mov
mov
jecxz
cmp
fstps
xor
sbb
add
adc
cmp
in
cmp
sub
xlat
imul
inc
lcall
push
fs
xchg
xchg
dec
inc
ret
xorb
mov
xchg
out
pop
punpckhdq
and
test
mov
stos
mov
xchg
ret
xor
scas
inc
ja
cwtl
popf
fsubl
nop
xchg
mov
pop
rcr
loopne
outsb
inc
mov
out
loope
sbb
jg
cmp
cmp
adc
shr
push
cmpsb
lcall
xor
out
aas
cwtl
dec
mov
xchg
shrb
stc
stos
pop
pusha
pop
inc
les
movsl
add
int3
mov
clc
cmp
jge
cmpsl
and
mov
push
sub
push
insl
in
dec
or
sub
xchg
dec
add
xchg
stc
pop
int
test
add
aam
andl
jae
sbb
imul
lods
and
fists
dec
xor
fsts
lahf
or
arpl
cmp
cmp
pop
aaa
sbb
ds
sub
sub
mov
adc
fdivrp
imul
cmp
stos
sbb
cmp
jbe
add
insb
outsl
and
mov
add
cs
hlt
sub
jp
jecxz
outsb
orb
pop
jmp
cmc
shll
test
fsincos
and
scas
dec
dec
loope
xchg
push
shl
shrl
jp
sbbl
xchg
and
inc
std
insl
pop
into
pushf
sub
lret
inc
lcall
arpl
lcall
pop
stos
sub
xor
aaa
jmp
das
sbb
adc
jecxz
sub
pop
insb
push
repnz
mov
xchg
sub
out
push
enter
xor
clc
jns
movzwl
and
add
or
pushf
pop
dec
push
cmp
cltd
cmp
out
push
cs
mov
int3
scas
xchg
int3
sub
je
out
ja
jecxz
sbb
insl
push
add
lods
pop
decl
dec
sub
outsl
in
xchg
jg
loop
xchg
mov
loop
gs
push
into
pop
sbb
into
pop
ja
sbb
stos
jne
iret
orb
shll
mov
push
dec
xor
push
fsubs
shlb
inc
movsl
lahf
xchg
xchg
testb
bound
and
test
jb
push
mov
push
cwtl
lds
mov
invlpg
sub
add
mov
push
dec
add
fildl
pushf
mov
mov
mov
out
xor
xchg
push
test
xchg
loope
sub
and
jnp
div
jp
scas
jb
cmpsl
leave
out
or
outsb
cld
movsl
mov
or
sbb
pop
sarl
repz
es
add
addr16
into
push
seto
mov
cmc
and
cli
int
pushf
es
sarb
xchg
repz
sub
pop
sub
cmp
test
jo
mov
sbbl
cmp
pop
sub
ret
icebp
ret
popf
dec
xor
lods
iret
pop
cmp
negl
out
sbb
push
xor
cmc
shll
lcall
jne
clc
rorb
xchg
mov
je
stos
mov
fmull
stc
orl
lods
jmp
pop
ret
leave
sti
pop
addr16
dec
mov
fimuls
mov
int3
in
mov
add
pop
movsb
std
dec
loope
xor
out
cltd
fldt
xchg
stc
adc
or
xchg
dec
cmc
xchg
mov
jle
dec
pop
and
loop
push
popa
xchg
cmpsb
nop
enter
repnz
mov
into
sub
sub
jno
lahf
test
fstps
pop
xor
xchg
test
fwait
push
call
xor
jae
shll
jg
xor
xorl
dec
sbb
and
sbb
sarb
xlat
adc
jg
inc
loope
pop
jmp
mov
jns
push
xlat
bound
iret
inc
int
jmp
inc
shll
and
addr16
xor
fs
xchg
loopne
dec
aad
add
push
adc
push
enter
insb
out
ret
cltd
or
push
stc
inc
in
dec
cmp
dec
aam
daa
adc
movsl
inc
stos
and
mov
cmc
pop
lahf
ret
xor
dec
in
out
and
pop
flds
out
push
dec
mov
and
outsl
mov
cmp
dec
in
push
inc
dec
mov
ret
jae
shlb
cmc
in
mov
cmp
and
aad
mov
test
push
rolb
push
or
pop
in
or
fisubl
sub
jp
lock
push
cld
daa
popa
jb
repz
add
push
dec
and
xor
enter
jnp
cmp
fdivl
mov
into
mov
in
sub
iret
jno
iret
sbb
or
pop
scas
js
jno
fidivrl
or
push
xchg
loop
fidivs
loop
insl
gs
mov
pop
js
out
lahf
mov
repz
lret
push
sub
imul
push
out
test
cs
data16
pop
push
adcb
insl
jno
out
jnp
dec
sbbl
mov
pop
dec
rcll
inc
adc
sub
in
int
test
pusha
jbe
xlat
sahf
scas
jb
adc
call
and
inc
mov
xchg
jo
fstps
hlt
aam
sub
fiadds
mov
pop
lret
cmpb
orl
or
adc
inc
cli
jmp
addr16
mov
mov
pop
test
adc
pusha
mov
dec
cs
in
gs
inc
and
out
sbb
neg
in
divb
cmc
dec
movsl
pop
xor
lods
mov
xchg
add
daa
and
jmp
iret
and
cmp
loopne
cmpsl
inc
cltd
sub
movsl
decb
pop
adc
mov
sbb
push
cmpsl
add
cltd
addr16
mov
sub
sub
daa
test
aam
push
sbb
pop
or
mov
add
xchg
sub
sub
or
pop
popa
cmc
mov
or
cs
jae
jne
test
sbb
stos
jp
je
aam
xor
aad
fisttpl
shr
xor
shlb
or
xchg
std
sub
filds
inc
nop
cld
xor
mov
jp
mov
pop
fstl
lret
add
mov
repz
pop
jb
test
xchg
sbb
aaa
cld
lcall
addl
test
add
push
or
xchg
cmp
xchg
fldt
push
js
jbe
ljmp
cmp
mov
repnz
roll
push
push
out
mov
push
add
push
test
ret
add
pusha
lods
cmp
dec
outsb
dec
lods
sub
movsl
out
jl
push
fnstenv
or
mov
lret
mov
std
out
sub
sbb
mov
xor
ds
jns
or
sbb
repnz
imul
mov
stos
push
jecxz
inc
cmp
sub
adc
inc
jmp
popf
stos
arpl
ljmp
nop
jmp
dec
adc
or
sub
and
enter
outsb
pushl
repnz
std
subl
push
adc
jbe
fidivl
pop
adc
adc
iret
cmp
cli
or
push
scas
mov
jp
sub
cmp
add
aas
xchg
pop
xchg
cltd
cltd
scas
pop
sub
ret
cmp
cld
shl
lods
lret
ret
lret
xor
and
test
dec
fwait
jle
xchg
popa
loopne
pop
test
fstps
lds
push
push
jne
pop
jge
xor
mov
xchg
and
daa
dec
in
add
or
sub
dec
test
call
push
xor
in
lahf
mov
in
inc
test
xor
sbb
enter
jnp
fstl
and
jp
jno
idivb
lock
or
mov
sbb
cmp
inc
mov
jle
inc
hlt
ds
lds
fcoms
pop
daa
es
and
int3
xchg
adcb
jns
jo
dec
mov
xor
push
cmp
lea
pop
mov
jo
lods
jno
push
add
xor
mov
sti
xor
divl
int
cld
mov
sub
inc
sbb
or
cmp
pop
xor
push
out
jno
cmp
movsb
adc
leave
leave
xor
jecxz
jp
inc
cmp
idiv
test
lea
sub
add
add
or
arpl
rclb
push
into
push
cld
fildl
xor
lret
shrl
jl
repz
dec
adc
xchg
add
xor
mov
mov
or
push
icebp
movsl
das
fisttpl
mov
sti
iret
jne
and
shrb
aaa
test
inc
cmpsl
adc
xchg
jae
sarl
mov
and
popa
mov
pop
sbb
enter
or
testl
cmc
sbb
pop
shrb
out
push
in
cwtl
shlb
rep
and
nop
adc
gs
inc
ret
fdivl
insb
mov
cmp
adc
sub
mov
fcmovb
imul
dec
add
inc
out
push
cmp
shll
cmp
push
movsb
mov
push
idivl
mov
xor
stos
outsb
out
arpl
push
sti
mov
lods
mov
rcrl
push
push
sbb
lcall
repnz
push
xor
jecxz
xor
jns
andb
fldenv
cmc
pusha
xor
pop
adc
dec
and
sti
mov
xchg
mov
int3
fs
or
mov
adc
jl
push
mov
xchg
loope
ret
lret
stc
xor
sub
jbe
jo
cli
push
js
ret
pop
sbb
dec
movsl
iret
jno
add
aad
popa
shl
xor
mov
mov
lret
adc
mov
pop
jns
shll
out
arpl
cli
cwtl
xor
push
xchg
jecxz
jne
dec
out
cmpsb
xor
xchg
mov
scas
repz
add
jmp
or
outsb
dec
ret
mov
push
repnz
popf
xor
cmp
push
aas
mov
iret
cs
sub
mov
cmp
ljmp
dec
sbb
jp
outsb
push
andb
xchg
inc
push
adc
dec
xor
call
pop
cmp
hlt
push
jno
in
das
mov
sub
sbb
das
mov
sbb
jp
and
dec
pop
mov
pop
cmp
data16
mov
fstpl
push
stos
adc
pop
jecxz
dec
std
pop
jle
test
mov
ud0
ss
jns
sbbb
adc
mov
jp
lret
insl
sahf
sarl
mov
jg
xchg
insb
das
xchg
sub
sub
sbb
jae
fcomps
inc
aaa
aam
cmpl
ja
pop
out
sbb
lods
stos
and
dec
mov
loope
sbb
incl
inc
loopne
inc
aad
scas
lods
xchg
pop
cmp
dec
fmull
ja
or
popf
ret
inc
insb
or
pop
rorb
out
das
int3
outsb
aam
fisttpl
roll
pop
xor
gs
dec
rorb
lret
ljmp
pop
pop
push
add
scas
dec
jnp
lods
popf
bound
pop
mov
loope
movsb
add
xor
xchg
dec
add
jo
mov
cs
shlb
xor
dec
int3
adc
mov
jle
ficomps
loopne
insb
loop
push
aaa
es
enter
fimuls
xor
cmp
mov
std
cwtl
mov
mov
inc
lcall
cli
mull
negb
xchg
es
sub
sbb
and
std
insl
mov
aad
sub
or
les
imul
adc
push
cs
sub
je
enter
sbb
pop
inc
xchg
rolb
mov
fdivs
add
add
push
sti
sbb
mov
push
pop
pop
xlat
clc
push
add
rcl
lea
xor
inc
sub
rorb
ss
gs
sub
mov
push
and
xchg
jae
jae
pusha
ret
push
mov
push
or
add
jp
sub
push
adc
in
imul
xchg
or
iret
adc
pop
xor
sub
and
sub
punpcklbw
sbbl
mov
cmp
and
dec
in
cli
push
sbb
pushl
pop
sub
clc
test
fadd
fnstsw
mov
fwait
in
shrb
jge
repnz
mov
iret
or
fldt
into
jge
jne
inc
or
pop
test
cmpsb
cmp
mov
shrb
imull
ficoml
dec
cmp
imul
sub
jns
mov
xor
cmp
fidivrs
lahf
cmpsb
xorl
in
je
pop
scas
inc
neg
mov
or
lcall
in
mov
ja
adc
xor
push
adc
imul
sub
pop
jo
fcmovbe
fists
sbb
js
pop
xchg
pop
cmp
fsubl
dec
cwtl
xchg
sub
ret
mov
jecxz
ret
test
loope
int3
outsl
ret
sahf
adc
mov
outsl
sbb
in
ret
aas
xchg
ret
xchg
mov
pop
test
sbb
ds
fs
aam
movd
add
imull
shl
xor
push
popf
push
andb
int3
fsts
mov
call
rcr
or
test
and
fadds
filds
lds
sbb
mov
pop
add
pop
jg
inc
test
outsb
jno
fwait
pop
xor
pop
push
jb
dec
ret
push
push
sbbl
xor
cmp
cmp
pop
mov
xlat
out
mov
mov
les
inc
mov
cs
mov
add
iret
mov
xor
push
xchg
scas
popa
lret
mov
inc
mov
fbstp
mulb
popf
pop
std
jge
je
mov
jg
xchg
xchg
out
inc
add
xchg
es
and
std
xchg
int
ja
cwtl
push
push
dec
dec
aaa
js
mov
pop
arpl
mov
xorl
jg
dec
adc
dec
jl
xor
dec
mov
jo
sub
insl
pop
fs
mov
mov
popl
shll
mov
xor
adc
daa
movsb
and
pop
pushf
mov
sbb
test
movsb
dec
outsb
adc
push
xchg
lret
enter
insb
lods
dec
xchg
push
and
sbb
adcb
pop
pop
push
push
outsl
inc
push
add
jbe
ret
je
lret
inc
mov
les
out
icebp
jns
push
bound
lods
pop
pushf
jmp
dec
xchg
xchg
mov
or
mov
mov
sub
or
adc
push
add
mov
cmp
inc
cmp
cmpsl
adc
adc
push
loop
add
addr16
dec
shr
push
mov
subb
aas
bnd
push
or
out
ja
pop
pop
pop
xor
xlat
les
mov
pop
fadds
mov
or
pusha
push
rcrb
pushl
loope
pop
or
inc
pop
lahf
mov
nop
mov
and
mov
cwtl
sub
jecxz
clc
aas
insb
call
jno
pop
fbstp
dec
lcall
xchg
lcall
mov
inc
and
stos
mov
sub
vmread
push
out
xor
mov
adc
ret
mov
ret
pushf
sbb
sub
inc
jae
loope
jnp
insl
loopne
xor
cmpsl
pop
lea
xchg
imul
push
xor
stos
aad
dec
into
je
xor
popf
popf
je
push
xor
or
add
jmp
out
lds
jnp
or
mov
jle
mov
xor
xchg
or
jle
arpl
outsl
jecxz
dec
fildll
loope
int3
dec
icebp
inc
test
or
add
movb
in
leave
fldcw
or
in
out
loopne
mov
and
stos
call
in
and
adc
lret
movsl
scas
scas
jecxz
lret
jnp
fisubl
testl
stc
dec
addr16
and
in
cld
mov
sti
test
sbb
in
mov
movsl
call
mov
in
sub
mov
orb
sub
cwtl
ficoms
or
jae
ljmp
jno
add
xchg
jae
dec
xchg
pop
add
cltd
lret
out
inc
out
dec
pop
dec
aaa
and
dec
lcall
insb
jbe
jp
xor
mov
push
add
sbb
ret
dec
jl
shll
and
mov
pop
cmc
jo
xchg
in
xchg
rorl
xlat
push
or
mov
int
jae
loopne
push
push
pop
push
mov
fwait
into
inc
andb
mov
icebp
mov
mov
pushf
ret
mov
lods
dec
adcl
xor
xchg
test
sbb
rorb
mov
iret
sahf
imul
inc
add
add
mov
xlat
dec
lcall
add
outsb
iret
fprem1
ss
sahf
jbe
fsubr
test
test
adc
nop
jl
sti
pop
je
call
mov
sub
push
out
test
cmp
cld
jo
daa
rcrl
pusha
pusha
dec
push
xor
adc
mov
inc
sbb
leave
mov
cld
and
mov
cmpsl
std
mov
inc
cmpsl
jecxz
cmpsl
stos
aad
mov
jns
dec
and
and
bound
add
je
cmc
xchg
push
cmpsb
and
pop
mov
popl
movsl
arpl
xchg
aam
fwait
pusha
ret
inc
stos
insb
adc
leave
push
and
jle
or
pop
fidivrl
jnp
pop
fisttps
rorb
inc
call
dec
scas
add
mov
mov
mov
fimull
hlt
xor
mov
iret
mov
gs
mov
outsb
test
incl
or
mov
cltd
adc
or
jnp
adc
adc
dec
aas
jne
jne
imul
push
dec
xchg
dec
dec
pop
test
or
das
cmp
mov
mov
cmpsb
xchg
jbe
mov
inc
pop
add
sbb
pop
xor
je
dec
mov
pavgw
mov
das
mov
push
sbb
mov
dec
int3
int3
or
fs
mov
dec
mov
xlat
push
leave
mov
pop
push
mov
cmp
adc
mov
xchg
xchg
popf
xchg
and
push
adc
adc
dec
test
loopne
xor
mov
xor
rclb
pop
test
adc
lret
popa
push
ret
jno
jb
cmpl
push
push
imulb
cmp
xchg
sub
and
test
jle
adc
arpl
sti
cmp
jns
cmp
jne
enter
ljmp
jp
add
adcb
push
jbe
pushf
ljmp
pop
dec
popf
int
into
jge
mov
jno
outsl
clc
adc
aad
test
sbb
lock
mov
ljmp
mov
and
cmp
dec
pop
and
add
mov
outsb
cltd
out
cli
loop
fdivrs
dec
xchg
fistl
cmc
push
scas
jp
xor
jne
dec
out
scas
adc
cmp
or
lcall
jecxz
mov
adc
push
clc
xchg
bswap
lds
mov
mov
xor
imulb
fildl
outsl
outsb
sub
xchg
std
pop
into
sub
dec
add
insb
inc
pop
add
test
ret
pop
repnz
mov
jge
in
mov
mov
loopne
popa
push
mov
popa
xor
sbb
movsl
pop
dec
add
je
mov
dec
jl
push
adc
mov
inc
fisttpl
in
xor
loop
mov
mulb
popa
iret
push
xor
xor
adc
insb
call
or
les
out
fnstsw
mov
inc
or
mov
imul
cltd
and
sub
out
mov
xchg
fmul
dec
stc
mov
jmp
arpl
pop
xchg
mov
shll
inc
ret
mov
pop
mov
jb
stos
sub
iret
outsb
jle
add
pusha
xor
mov
add
int
ja
lea
lret
cmp
mov
and
adc
stos
aaa
xchg
sub
movsb
imul
rolb
out
and
mov
xor
sub
xor
jle
je
xor
lret
lret
in
insl
cmp
inc
clc
addr16
mov
and
stos
pusha
jae
sub
jecxz
sbb
test
jno
pop
push
pushf
cmpsb
push
movsl
mov
adc
test
jae
add
push
movsl
nop
movsl
int
push
cmp
bound
jl
ljmp
mov
xor
test
insb
pop
cmpsl
mov
mov
fidivrs
mov
jg
test
mov
sti
aam
out
pop
and
add
jnp
inc
cmpsl
aas
sarb
mov
push
lods
hlt
push
mov
fwait
sbb
shl
push
xchg
movsb
dec
pop
stos
in
xchg
mov
jp
leave
movsl
dec
dec
mov
xchg
movsb
pop
xor
or
stc
lds
jge
lahf
mov
mov
or
ror
imul
xor
xchg
xchg
or
mov
jl
sahf
jp
jne
xorl
test
pusha
add
fwait
xchg
and
cld
pmuludq
mov
bound
cwtl
cmp
inc
daa
std
jg
sub
cwtl
push
xor
cmp
and
mov
pop
adc
mov
cmp
inc
fisttpl
adc
lret
mov
or
jge
sbbb
sbb
outsb
icebp
rolb
sbb
jle
mov
std
repz
not
xchg
dec
jmp
push
sbb
xor
test
inc
rolb
rcll
shr
movsb
mov
xor
lret
dec
aam
movsl
jb
sbb
inc
in
daa
insb
mov
or
xchg
aam
lcall
and
pop
xor
xchg
pushf
lock
jp
loop
stos
rorb
mov
int3
scas
mov
cmp
jl
xchg
mov
mull
out
sub
inc
and
lods
pusha
ror
out
mov
sbb
ret
mov
rcll
adc
xchg
scas
sub
jno
pop
mov
xor
gs
repz
fisubs
pop
in
adc
sbb
stos
fimull
dec
mov
loop
lds
sbb
inc
xchg
jl
sbb
pop
subl
cs
mov
lahf
outsl
pop
imull
push
mov
pop
aad
mov
mov
cmp
sbb
jg
pop
cmp
movsl
js
adc
add
shlb
in
addr16
mov
mov
hlt
mov
and
mov
cmp
xlat
dec
push
loopne
jb
sti
in
lret
jp
fs
jmp
push
push
and
sub
mov
or
add
das
mov
push
ds
and
aad
or
add
sub
cltd
xlat
push
sbb
or
mov
adc
push
loope
loope
push
nop
mov
dec
xchg
xor
add
xchg
and
movsl
daa
lds
pop
es
fwait
mov
xchg
pop
jge
in
adc
les
push
bound
adc
sbb
sahf
push
push
das
push
loope
mov
icebp
in
arpl
jb
rcrl
in
add
out
sub
and
adc
sbb
pop
cwtl
sbb
out
xchg
shlb
loope
mov
xor
xor
in
xchg
dec
imul
add
out
stos
ret
mov
push
daa
xchg
and
ljmp
mov
icebp
lods
jno
addl
xor
xchg
cmpsb
popa
loop
mov
cwtl
cmc
mov
imul
shl
pop
mov
push
pop
pusha
mov
lods
xchg
int3
lret
push
frstor
aaa
movsb
or
pop
adc
adc
fs
push
cmp
lds
adc
mov
and
push
repnz
and
push
cli
jae
ret
incl
pop
out
xor
jae
repz
add
mov
xchg
ret
mov
les
xchg
sub
sub
es
sahf
das
mov
int3
js
adc
inc
jp
ret
vpsadbw
cmp
jne
fistpll
adc
or
dec
xor
jbe
push
add
in
add
xchg
daa
ffreep
mov
cmpb
jle
cmp
shlb
shlb
or
add
js
or
push
cs
mov
movsb
cmp
lcall
je
dec
aad
sub
test
xchg
pop
addr16
aam
mov
pop
xchg
adc
adc
adc
pop
fldcw
sbb
hlt
lods
fwait
lret
repnz
mov
call
mov
pop
sbb
daa
xor
shrl
adc
out
push
jg
imul
and
inc
dec
std
and
pop
stos
cmc
adc
inc
inc
push
loop
mov
call
fldl
into
out
add
and
jne
push
adc
sub
jp
imul
jg
sbb
cli
inc
loope
inc
mov
and
adc
mov
out
pop
xchg
xor
push
in
out
enter
jl
sbb
inc
push
cmp
add
pop
push
xchg
mov
mov
xchg
mull
popa
je
pop
adcl
xchg
sub
pop
cld
mov
push
and
push
xor
mov
daa
js
out
ljmp
lret
adc
jne
cmp
loope
gs
jo
imul
push
mov
inc
sti
or
inc
aad
adcb
loope
dec
mov
out
add
int3
mov
daa
popa
mov
xor
test
or
mov
sub
xor
jge
sub
lods
aaa
cs
test
fcoml
cmp
cmc
rep
call
sub
xchg
lods
inc
push
mov
inc
mov
sbb
or
aaa
jl
mov
pop
pop
aas
iret
jle
xchg
scas
bound
test
jae
or
in
sub
and
xcrypt-cbc
cmpsl
adc
lea
js
out
imul
stos
loope
imul
ljmp
adc
sbb
pop
and
fs
jmp
pop
test
mov
div
jmp
mov
fidivrl
mov
jecxz
inc
mov
out
int3
xchg
mov
mov
scas
sbb
test
xchg
cmp
sbb
adc
mov
dec
ret
xchg
mov
andps
imul
add
adc
xchg
stc
jecxz
rcll
pop
xor
aaa
cmpsl
inc
out
mov
mov
cli
repnz
pop
insb
imul
inc
sti
rclb
and
mov
jmp
sub
xchg
les
sti
xchg
sbb
arpl
xor
jp
subl
pop
jo
icebp
call
cmpsl
lret
popa
mov
pop
clc
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
jmp
scas
shlb
jno
scas
mov
xor
sub
add
pop
jl
dec
mov
dec
xchg
test
hlt
pop
push
out
push
les
add
ret
add
push
mov
sbb
ret
xchg
inc
add
xchg
movsl
and
jge
bound
shll
mov
repz
xchg
cmp
rcr
pusha
mov
fidivs
ret
mov
orb
xchg
out
rcrb
je
repnz
jle
sahf
add
repz
or
adc
cmpsl
xor
adc
inc
pop
sub
fdivr
inc
xchg
sarl
sbb
cs
push
jp
mov
dec
bound
wbinvd
data16
mov
mov
dec
push
mov
pushf
in
in
mov
arpl
iret
adc
adc
sti
mov
push
and
leave
bound
mov
and
mov
pushf
jp
or
mov
mov
nop
xchg
pushf
xor
pop
add
sbb
sbb
shrl
and
inc
add
add
xor
jg
or
adc
fiaddl
sti
mov
or
loopne
mov
testb
ds
or
and
shl
sub
push
or
jl
data16
sbb
lea
add
daa
pop
scas
fdiv
js
and
fstl
jnp
pop
inc
pop
or
add
sub
xchg
rorb
inc
pusha
lods
cmp
aaa
inc
mov
sub
negb
scas
into
cmc
int
mov
loope
jle
cltd
push
aas
lea
clc
xchg
lea
or
popa
mov
jle
fidivrl
pop
roll
cmp
dec
pop
icebp
sub
sbb
cmp
xor
xor
loopne
stos
in
stos
bnd
fadds
lsl
loopne
mov
sub
lods
jg
cmpsb
mov
inc
aad
lahf
fdivrl
lret
ret
and
outsb
push
popl
mov
xor
mov
push
jp
fcmovnb
sbb
inc
fsubrp
iret
jl
out
cli
dec
in
mov
repz
mov
ret
sbb
cmpl
pushf
lods
sbb
out
in
aas
mov
repnz
mov
mov
mov
loopne
add
stos
jno
dec
test
dec
or
sbb
iret
mov
es
dec
mov
jp
push
sbb
popa
inc
push
dec
mov
inc
fwait
dec
pop
lods
rcrb
jmp
stos
xchg
or
add
and
mov
cmp
pop
cmp
sub
rcrb
fists
inc
mov
lcall
cwtl
mov
cwtl
or
pop
xchg
jne
pop
sbb
fstl
dec
adc
or
push
jo
mov
xchg
mov
or
push
ror
clc
out
mul
mov
lret
adc
lods
mov
cmp
test
push
jle
inc
xchg
inc
dec
lahf
lods
loop
cmp
adc
out
out
cmc
mov
mov
aas
in
add
add
inc
xchg
imul
sahf
cs
mov
sub
cmp
movsb
xor
iret
iret
xor
mov
aas
pop
pop
inc
push
and
jge
sub
sub
fsubrl
call
cmp
sub
pop
mov
and
adc
lods
test
or
and
sub
lods
scas
mov
loopne
push
test
xor
sub
xchg
jmp
fucomp
pop
mov
ret
loopne
ret
sub
arpl
scas
test
push
inc
xchg
mov
scas
pusha
lds
fs
mov
push
or
push
or
mov
std
es
pop
addr16
add
test
jns
xchg
lcall
sub
dec
and
xchg
jecxz
dec
cltd
iret
push
mov
in
ds
sar
outsl
loop
js
pop
mov
fcoml
fldcw
dec
outsl
add
call
and
sbb
scas
pop
mov
inc
into
das
cs
outsl
mov
sub
lahf
jmp
jge
cmc
mov
call
in
aad
lock
aaa
jns
jp
pop
xor
fbld
xchg
std
sbbl
fsubrs
mov
mov
push
popf
push
in
jno
enter
mov
xchg
push
sbb
mov
lods
sub
cwtl
int
dec
pop
loop
cmp
inc
data16
dec
loope
mov
dec
mov
xchg
jnp
sbb
mov
stos
fcomps
jnp
sahf
or
out
loop
add
addr16
pop
std
loop
ja
adc
push
add
je
shrl
repz
sbb
gs
cwtl
cwtl
in
pop
inc
push
mov
jmp
dec
les
jnp
inc
cmp
mov
xor
aas
js
shlb
xor
fcoml
rorl
xstore-rng
cmpsl
inc
xchg
cmpsb
mov
lcall
ss
push
sarl
mov
inc
cltd
or
jae
mov
jge
push
mov
and
add
mov
xor
dec
mov
sbb
je
dec
pop
add
test
shr
pop
mov
rolb
inc
dec
scas
mov
jg
and
sbb
push
lock
sbb
pop
xchg
repz
loop
and
sbb
push
and
cmc
fcompl
mov
adc
mov
mov
push
and
or
cmp
xchg
iret
mov
jp
mulb
repz
pop
xor
jbe
scas
std
dec
into
nop
test
mov
pushf
in
mov
scas
cli
jmp
xor
inc
xor
gs
jle
lods
mov
cmp
or
pushf
je
and
mov
cltd
pop
and
mov
mov
push
subl
jb
or
mov
cmp
ja
adc
mov
xchg
cmp
movsl
test
lret
and
xor
rcl
xchg
aad
sbb
or
stos
rcll
mov
jge
mov
xor
push
jo
enter
sbb
sbb
xor
rcll
mov
popa
lret
aas
inc
mov
push
mov
pop
nop
shlb
cmc
or
and
add
std
push
insb
ret
mov
shll
xchg
popa
xchg
ret
scas
add
hlt
push
mov
xchg
scas
rorl
jno
jae
shlb
mov
fistl
sti
mov
push
jno
add
cmp
lock
pop
loopne
xor
insb
cs
push
mov
ss
xor
pop
mov
mov
aad
repz
mov
test
sub
cs
mov
xor
outsb
arpl
int3
pop
sub
mov
or
xor
mov
jne
cltd
in
mov
xchg
daa
jns
aam
push
mov
pop
jns
mov
mov
sub
stos
int3
or
sbb
dec
jge
add
push
out
mov
fdivr
xchg
call
outsl
test
fdivs
nop
in
pusha
mov
xor
sub
mov
push
inc
and
sbb
cmp
loop
mov
dec
jo
ja
adc
ret
call
dec
cltd
shlb
inc
or
cltd
pop
bound
push
fidivl
jne
adc
insl
push
lret
lea
into
xchg
aaa
mov
dec
push
call
sahf
pop
or
int
xor
movsb
stos
add
inc
das
je
pop
fstpt
sahf
imul
mov
mov
movsl
dec
mov
push
mov
adc
push
xchg
xchg
or
out
popa
inc
mov
lret
xchg
mov
sub
call
test
add
jg
scas
mov
push
add
adc
sahf
xchg
aaa
enter
and
cmp
cmp
outsl
cmp
hlt
neg
mov
mov
jbe
out
enter
data16
cmc
mov
cmp
jae
loopne
addr16
sbb
mov
lret
cmp
jno
jp
cmpsl
mov
inc
mov
das
mov
xchg
nop
cld
jmp
stos
jno
jne
and
lcall
int3
std
outsb
shll
jne
jle
and
xchg
std
fmuls
icebp
push
cmc
xor
dec
lds
sub
pop
xchg
imul
add
in
nop
cmp
imul
mov
in
jmp
add
repz
mov
xchg
push
sub
pop
mov
mov
mov
test
mov
lods
mov
stos
mov
adc
mov
cmp
vorps
push
roll
inc
arpl
xor
ficoms
outsb
dec
dec
imul
rcrb
mov
ret
mov
dec
pop
enter
push
push
push
mov
addr16
gs
je
frstor
ja
popa
and
jecxz
repnz
adc
imul
mov
pusha
jno
mov
jno
aam
xor
fwait
rcrb
jp
jl
or
xchg
mov
cwtl
fisttpll
data16
xor
test
cs
pop
fildl
lret
push
push
push
cltd
stos
and
push
mov
loopne
imul
pop
aaa
cs
ficoms
rorb
cmpsl
xor
dec
fisubl
mov
std
dec
xlat
pop
cld
insb
sti
cmp
push
repz
int
decl
out
or
lret
rcrl
or
movsl
push
dec
fisttpll
push
mov
xor
pop
int3
ret
mov
jle
jb
push
test
mov
faddl
cs
pop
in
push
test
and
mov
add
movsb
popl
bound
insl
mov
pop
add
and
out
push
inc
cwtl
mov
dec
jb
test
repnz
aaa
cmovge
adc
push
mov
stc
movsb
pop
inc
aas
mov
mov
sbb
push
cmp
mov
xor
xlat
sbb
inc
movsl
push
fucom
jb
xorl
sub
cmc
pop
mov
loope
repnz
bound
jle
lea
adc
ljmp
mov
ret
das
cmpsl
inc
mov
stc
cs
sbb
enter
js
ret
push
jg
jnp
mov
pop
int3
pop
adc
fnstsw
fucomp
mov
mul
push
xor
insl
xorl
xor
outsb
dec
inc
std
dec
lods
add
aas
mov
mov
repnz
in
and
movsb
and
lods
lret
cmp
out
push
sbb
sub
mov
rorl
pushf
lock
mov
inc
call
jp
xchg
mov
jbe
sbb
cld
hlt
xor
adc
mov
xlat
test
push
addr16
pushf
repz
lcall
pop
hlt
and
pushf
jbe
test
fnstsw
ds
sub
lock
dec
and
xchg
and
jo
pusha
pop
and
mov
xchg
sub
adcl
test
jge
push
int3
pushf
data16
insl
sbb
jae
push
xor
rclb
mov
insl
xor
or
test
pop
xchg
pushf
jo
dec
filds
lcall
nop
or
sbb
ret
adc
pushf
jo
enter
xor
sbb
loope
sbb
add
jge
adcb
lret
clc
fdivs
sub
lret
push
dec
sub
in
and
cli
insb
push
or
daa
cmp
sbb
sub
inc
lcall
fwait
cltd
cmp
sti
mov
mov
mov
sbb
jns
outsl
orl
mov
out
cld
insl
ret
mov
sbb
ret
push
adc
xchg
test
js
cld
push
mov
stc
daa
jne
fildl
cmp
mov
out
xor
pop
aas
les
bound
cmp
cmc
psubw
pop
arpl
pusha
pop
bound
adc
xchg
fimuls
test
xchg
imul
cmp
jecxz
das
test
or
sub
ljmpw
or
pop
test
jbe
add
lock
jmp
sub
mov
xchg
faddp
add
xor
xchg
lgs
push
xor
xlat
pop
cmp
xchg
inc
insb
dec
lock
popl
out
jp
mov
inc
in
ljmp
inc
pop
inc
lcall
imul
fs
or
xor
push
mov
ljmp
xchg
add
inc
ret
out
int
imul
mov
xlat
test
sub
in
mov
or
js
hlt
in
sub
cltd
or
lea
ret
aas
adc
xchg
mov
jo
cmp
pusha
clc
adc
sub
into
xchg
mov
cwtl
push
pusha
add
subl
mov
cmp
xchg
sti
sbb
das
dec
jge
arpl
jl
outsb
xor
stos
or
pop
outsb
aam
pop
mov
arpl
mov
ret
mov
jmp
cmc
lahf
mov
pop
cmp
mov
xor
xchg
jo
mull
fcoms
add
sbb
xlat
push
lahf
mov
nop
pop
push
fnstcw
out
insb
or
ss
mov
and
mov
pop
jnp
sbb
repnz
mov
xchg
arpl
test
and
fisttpl
push
dec
or
leave
adc
pop
orb
dec
movsb
jnp
cmp
test
aad
mov
sub
lahf
int3
pop
insb
sub
cld
out
icebp
cmpsl
inc
popa
loop
cmc
mov
in
ffree
lock
mov
mov
fldcw
std
stos
mov
in
pusha
les
dec
adc
and
hlt
mov
or
mov
jnp
cmp
fdivrs
outsb
mov
lods
cli
mov
mov
lock
mov
mov
imul
data16
pop
js
pop
and
sub
xlat
pop
push
ja
inc
imul
cmp
adc
inc
jne
cmp
add
stos
lods
sbb
pop
sub
fcmove
loop
mov
hlt
adc
test
pop
xor
xlat
inc
aas
or
stos
or
adc
mov
lods
lret
mov
cmp
sub
xor
jl
lods
ficoms
outsl
insl
jecxz
orb
int3
fdivrl
enter
gs
mov
in
pushf
mov
mov
call
and
pop
and
out
xor
ss
push
dec
jo
lahf
das
pop
test
jge
xor
ret
xor
jmp
dec
outsb
out
dec
push
push
ffree
add
push
fmuls
mov
mov
std
lahf
hlt
sbb
aaa
in
jmp
cmp
and
in
push
sahf
cmp
decb
rclb
cli
addb
inc
sbb
push
adc
imulb
sbb
ret
mov
pop
fbstp
out
jmp
adc
fisubrs
pop
sbbb
jns
pop
sub
or
in
xor
mov
cmp
shll
in
pop
pop
jp
adc
icebp
jb
sbb
push
sub
outsl
push
int3
jae
adc
dec
or
popf
xchg
add
call
aam
fsubrs
jecxz
enter
and
jns
in
rcl
mov
mull
xor
jbe
cmpsl
cmp
rorl
pop
mov
dec
sbb
aaa
mov
jmp
imull
imul
mov
mov
icebp
or
test
push
insl
cmpsl
or
jp
test
inc
push
lcall
fwait
or
dec
leave
iret
mov
cmp
das
mov
cmc
out
mov
xor
lret
xchg
lods
sbb
mov
xor
ret
insb
and
mov
fisttpl
sub
mov
sahf
popa
sbb
popf
adc
int
and
sbbl
int
jno
imul
int3
lods
push
cwtl
loope
dec
imul
adc
dec
stos
loope
int
dec
mov
xchg
testl
mov
nop
add
sub
leave
mov
adc
mov
dec
push
sbb
jno
jno
or
mov
dec
popa
xchg
repnz
or
outsb
arpl
scas
stos
sub
arpl
and
ja
dec
jns
jae
out
sub
mov
cltd
insl
adc
test
adc
push
ffreep
cmp
jecxz
sub
cmc
fs
mov
mov
adc
and
sbb
ror
insb
and
adc
push
mov
outsl
loop
mov
outsl
aaa
pop
icebp
fadds
int3
fildl
adc
push
daa
jp
add
std
pop
cmpsl
repnz
es
jne
call
call
out
hlt
push
inc
pop
shrb
jae
in
cld
in
jge
ret
xor
int
lods
es
fmul
sahf
inc
push
fsts
aam
in
mov
stos
outsl
jb
xchg
and
faddl
fists
hlt
jp
enter
mov
lods
pushf
or
notb
xchg
imul
mov
mov
ljmp
push
sub
xlat
or
sub
cltd
lcall
jp
jl,pt
icebp
outsl
ljmp
punpcklbw
jns
push
mov
addr16
ret
mov
sub
es
add
ja
les
mov
fwait
arpl
test
or
out
adc
push
lea
lret
mov
xchg
insl
pop
out
or
insl
xchg
jmp
pusha
and
add
adc
and
cs
add
stos
adc
adc
mov
adc
orl
rcrb
incb
xchg
shlb
jno
sbb
cmpsb
jno
insb
push
mov
in
ret
push
setne
jge
outsb
imul
loop
push
out
andb
in
les
cmp
gs
xor
int
dec
icebp
dec
insb
push
leave
push
pop
pop
lahf
jnp
lea
ffree
push
scas
fsts
xor
pop
call
or
jnp
jnp
les
jb
lock
movsl
sbb
dec
push
loope
out
insb
les
dec
pop
sbb
stos
out
add
data16
es
push
mov
push
mov
daa
aaa
push
enter
sub
xor
hlt
dec
add
lahf
sbb
push
push
sbb
stos
sub
inc
movsb
xlat
fdivrl
adc
sub
mov
aam
ja
pushf
mov
pop
nop
push
insb
cmp
into
mov
mov
and
pop
add
mov
lahf
pop
push
mov
pop
mov
mov
mov
dec
mov
jp
cmp
movsb
pop
adc
and
adc
xchg
adc
rcr
push
lcall
fwait
mov
gs
cmp
pop
add
add
scas
pop
sub
and
inc
lcall
rcl
sbb
jle
xchg
cld
xchg
test
std
cmp
pop
cli
movsb
xchg
ss
mov
push
mov
adc
sbb
pop
sub
xchg
adc
cwtl
and
push
lahf
jl
jg
pop
es
mov
jmp
sbb
stos
in
mov
test
push
gs
add
mov
mov
and
push
xlat
stos
ljmp
aas
pop
imul
imul
jbe
idivl
insb
pop
lods
push
sbb
jmp
dec
in
in
pop
call
dec
xor
icebp
les
repz
mov
pushw
inc
inc
xor
out
mov
scas
and
popa
add
iret
es
mov
cmp
in
and
cmp
jne
imull
cmc
add
dec
insb
xchg
xchg
fmull
jmp
in
in
xchg
sub
xor
lds
cltd
mov
xchg
adc
cmp
adc
pop
jae
dec
inc
arpl
inc
sarl
mov
xchg
sbb
pop
and
aam
iret
jns
pusha
add
sahf
and
repnz
pop
sub
lea
mov
add
lods
outsb
mov
es
ret
int
insb
negb
add
aas
jle
mov
aad
inc
push
repnz
and
pop
sti
shll
xchg
adc
sub
add
inc
push
xchg
fisubs
aam
sbb
test
jl
adc
fcmove
mov
outsl
cmc
jnp
and
cmp
aas
jne
out
jg
jmp
pop
dec
fisttps
adc
add
out
cmp
dec
pop
mov
inc
out
mov
jb
inc
jb
fdivr
fsubrl
adc
push
jecxz
jnp
ret
pop
scas
mov
das
sti
push
orb
and
cli
fnstcw
mov
push
xchg
push
icebp
cmp
mov
je
test
jg
inc
in
or
or
leave
add
dec
mov
cwtl
sub
mov
enter
push
test
mov
int3
popa
in
ror
xchg
pop
or
or
daa
mov
mov
pop
int3
bound
fsts
xor
dec
pop
sbb
ror
xchg
xchg
cwtl
loopne
sub
lahf
rcl
and
arpl
frstpm(287
push
cwtl
mov
in
test
stc
jnp
adc
mov
dec
mov
ja
xor
mov
add
arpl
mov
dec
mov
jo
into
adc
insb
mov
push
jge
push
std
mov
inc
fwait
lds
dec
mov
push
dec
and
imul
out
pop
addr16
pushf
mov
rcl
cmp
divb
fists
add
xchg
cmp
xor
inc
sbb
aam
mov
adc
scas
cmp
shll
ds
sub
loope
in
adc
sbb
cmp
sbb
aad
xchg
repnz
in
xor
sti
and
rcll
mov
fimull
sub
xchg
mov
aam
ja
jae
hlt
mov
setnp
sub
inc
out
stos
dec
aam
insl
inc
repz
test
loope
cmpsl
les
xchg
popa
popf
adc
call
adc
pushf
add
loop
fwait
push
and
fwait
sbb
loope
cmp
cmp
mov
jge
add
mov
jbe
sarb
movsb
adc
outsb
ja
inc
add
sbb
mov
push
sbb
add
adc
push
adc
hlt
test
push
mov
cmpsb
sbb
mov
jnp
sbb
test
icebp
movsb
push
mov
or
ffree
aam
movsb
jnp
les
int3
lock
cmp
xchg
in
fmull
int3
or
ljmp
and
push
mov
das
cmp
mov
add
ljmp
xchg
sub
daa
or
jb
nop
push
call
popl
mov
ja
pop
dec
mov
movsl
jo
cmova
xchg
mov
in
add
fidivs
mov
ss
lahf
pop
stos
inc
aam
xor
das
sar
mov
adc
sub
pop
outsl
sbb
push
in
cwtl
cmp
jne
push
jge
or
out
fisubrl
or
jg
test
test
sbb
lret
mov
loopne
xchg
cmp
mov
mov
les
xchg
push
and
and
fidivl
aas
fsub
mov
xor
inc
xor
xor
js
mov
loop
mov
and
or
stos
jecxz
popf
xor
icebp
jmp
jle
push
aas
out
mov
sarb
fnstenv
ja
mov
pop
and
outsb
stc
add
push
mov
ja
mov
jg
leave
inc
sbb
stos
xchg
or
shr
push
cs
aam
adc
loop
push
std
push
test
push
push
inc
jae
test
adc
xchg
cmp
jl
mov
xchg
fnstenv
push
sbb
inc
mov
jge
mov
movsl
mov
pop
add
cmovp
or
arpl
arpl
push
add
dec
repz
cmc
dec
cwtl
out
adc
dec
pop
cmp
or
ret
inc
jbe
iret
adc
and
imull
popa
fistl
jmp
push
sub
dec
out
sbb
cltd
push
cli
mov
es
push
int3
add
pop
inc
sub
cmp
or
and
cltd
icebp
xor
cmp
add
sbb
sbb
andb
lahf
mov
lea
sub
xor
fs
ss
shl
xchg
stos
inc
call
push
xor
bound
and
push
cmpsl
mov
aaa
mov
ja
or
shrb
cmc
sub
adc
dec
pop
sbb
xchg
mov
gs
jmp
dec
or
inc
cmp
addb
mov
je
lock
in
icebp
mov
cld
stos
mov
mov
test
xor
mov
sub
adc
cmp
sbb
movsb
dec
sbb
or
lret
fsubrp
sub
mov
jns
jecxz
sbb
imul
add
and
jne
in
repz
sbb
cmpsb
fwait
ret
jb
sub
jne
scas
mov
xchg
in
rolb
ljmp
test
cmp
pop
cmpl
popl
sti
loopne
and
hlt
xor
je
lock
cwtl
sbb
outsb
xchg
ret
orl
jle
mov
jmp
test
and
add
call
in
addl
ret
mov
xchg
std
lods
or
nop
xchg
fbstp
les
out
sarl
mov
adc
inc
add
adc
sahf
das
std
sbb
nop
fs
fstpl
divl
gs
dec
jbe
mov
es
add
lahf
outsb
push
dec
adc
sub
dec
xor
pusha
aam
or
into
popa
pop
and
push
int
mov
lret
mov
in
xchg
enter
xchg
mov
and
clc
pop
fisubs
pop
push
add
stc
xor
jmp
sti
mov
orb
sub
jecxz
mov
push
sub
xor
and
sbb
jae
out
sahf
push
adc
inc
jno
adc
iret
jmp
mov
pop
rorb
mov
mov
push
pop
cmpsb
or
rorl
jo
push
rolb
mov
hlt
cwtl
rol
cmp
jp
movsl
std
data16
leave
cmp
mulb
es
xor
adc
aam
sbb
xlat
and
xor
fildl
xchg
pop
pop
mov
or
sub
fwait
stos
and
mov
push
pop
loopne
outsb
cwtl
daa
mov
push
mov
int
fdiv
cmpsb
je
psllw
sbb
and
fildl
aas
aas
ffreep
xchg
cmp
pushf
inc
push
add
add
mov
bound
pop
cld
jg
sbb
lods
cmpsb
cli
push
jnp
iret
ds
aas
aaa
push
fdivrl
sbb
mov
add
iret
bnd
shrl
cmpsl
lret
push
adc
xchg
xchg
sarb
jbe
cwtl
cwtl
fdivs
add
dec
pop
fildl
push
push
inc
jne
xor
inc
dec
jge
js
cmpsl
jg
stc
inc
daa
gs
cmp
int
dec
loop
or
out
cmp
cmpsb
push
mov
xchg
adc
adcb
adc
mov
ret
andb
dec
pushl
and
vpsraw
cmc
shrb
mov
add
sbb
sbb
xor
and
gs
movsb
dec
mull
xchg
mov
insl
test
lret
int3
clc
push
mov
bound
mov
xor
dec
cmpsl
shrd
scas
enter
mov
inc
sar
rolb
sar
pop
ja
and
fs
mov
shll
push
cmp
test
aad
dec
inc
idivl
and
xor
inc
push
mov
stos
xor
push
fdiv
inc
adc
in
dec
mov
and
mov
inc
mov
push
bound
nop
fsts
jo
lahf
adc
out
jp
fcoml
xchg
mov
addr16
and
mov
fmull
xchg
pop
sbb
jae
xchg
push
jp
daa
cs
or
out
jbe
jb
fiaddl
in
push
pop
xor
rcrb
or
adc
jle
dec
imul
inc
cmp
xlat
movntq
sub
adc
ss
sbb
sbb
inc
dec
mov
adc
ds
dec
jbe
pushf
or
and
rcrb
repnz
inc
and
movb
cltd
rol
out
jae
ret
loopne
sub
mov
and
and
pop
ljmp
push
mov
sub
mov
and
popf
or
das
fisttps
jbe
dec
push
xor
data16
aas
bound
js
and
iret
das
outsl
or
sbb
inc
call
sub
adc
pop
out
sarl
mov
push
pop
sti
xor
cmp
mov
and
xchg
or
in
adc
mov
cmpsb
or
xchg
sbb
cld
jne
repnz
sbb
pop
fs
adc
lods
mov
pop
sbb
mov
pop
shll
sub
mov
sbb
cmp
and
fsts
fiadds
cmpsb
cs
mov
mov
push
rorl
insl
mov
scas
andb
pop
push
jb
ljmp
fisubl
iret
cmp
pop
test
lcall
mov
dec
ficompl
lret
andb
xor
pop
adc
jno
shlb
insb
roll
movsb
adc
or
sbb
je
inc
inc
mov
pop
mov
mov
push
xor
outsl
fyl2x
in
ds
insl
test
lods
std
push
dec
pop
mov
jns
sti
stos
lret
lret
cmp
push
jbe
cmp
sbb
jno
addr16
cmpsb
jmp
minps
test
lds
imul
or
and
mov
adc
test
adc
pop
inc
nop
jae
filds
xchg
cmp
testb
add
pop
fisttpll
cmp
divb
bound
jecxz
bound
das
jecxz
xchg
fdivrs
xlat
sysret
mov
adc
inc
int
out
jno
icebp
gs
stos
in
imul
flds
stos
outsb
pop
inc
int3
and
jmp
cmc
sub
scas
push
movsb
rorb
jle
lcall
fdivrp
mov
inc
mov
clc
jp
sub
aad
or
jnp
or
sub
jns
cltd
mov
mov
sbb
push
jp
inc
add
sbb
clc
mov
sub
cmc
int
jg
aaa
cmc
bound
mov
lods
mov
jns
je
mov
pause
push
outsl
dec
cmp
or
cmpsl
sub
and
test
test
jne
mov
xchg
inc
dec
push
jb
pushf
das
sbb
call
rorl
or
andb
aam
cmc
jo
loop
addr16
mov
mov
out
out
insb
imul
jnp
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
add
add
into
xor
add
add
add
add
add
rcrb
add
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
add
add
inc
push
push
sbb
cmp
lods
mov
add
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
dec
inc
mov
pop
xchg
andl
gs
add
xchg
insb
mov
xchg
pop
push
mov
push
es
and
cli
and
mov
or
pop
cltd
or
inc
and
popf
push
lret
fmuls
mov
stos
cmp
add
and
fwait
mov
push
repz
movaps
pop
aam
pop
int3
sbb
xchg
loop
scas
adc
insb
je
outsb
test
mov
and
mov
or
data16
cltd
cmp
lahf
pushf
xchg
mov
cli
push
or
or
or
jo
stc
pop
or
aas
dec
pop
xchg
mov
mov
sbb
jns
push
and
jb
icebp
lods
into
test
les
mov
adc
mov
add
or
and
mov
mov
cmpsb
jb
pop
mov
add
fwait
lock
xor
mov
andb
adc
fldcw
adc
inc
call
xor
movsl
divl
xor
enter
push
mov
popf
pushf
xor
mov
dec
lahf
fwait
pop
dec
out
out
incb
imul
sbb
xor
into
xchg
popf
int
inc
fstpl
imul
push
sbb
rorb
lds
aas
out
loope
dec
lahf
fldl
sbb
shrl
adc
mov
push
leave
mov
inc
outsb
and
xchg
lret
rcrl
pop
or
mov
dec
mov
movsl
xor
cltd
data16
or
test
clc
mov
nop
xchg
push
stc
xchg
mov
in
xchg
outsb
jle
xor
mov
sti
push
das
scas
cmc
xchg
nop
mov
in
mov
add
sbb
addr16
fidivrl
pushf
andl
daa
imul
ds
fsubr
arpl
xor
stos
sbb
cltd
and
pop
mov
add
or
xchg
cmp
cwtl
int
out
imul
sbb
mov
test
or
or
rcll
cmp
sbb
lods
jmp
push
cltd
mov
adcl
add
incb
sub
sub
lods
aas
cltd
leave
lock
aas
stos
sbb
les
pop
lret
push
cmpsl
shlb
lea
test
sub
fcomp
cld
mov
mov
and
std
cmc
or
pushf
or
pop
jecxz
or
jle
xchg
and
stc
push
xchg
lods
shll
lea
in
test
imul
loope
stos
nop
add
sub
mov
in
lock
das
push
fwait
adc
subl
sbb
das
test
sbb
push
lds
lods
inc
enter
fcomip
imul
mov
cs
out
xchg
pop
sub
lcall
xorl
adc
rclb
gs
xor
dec
int3
or
push
mov
mov
cmp
pop
mov
rcr
icebp
enter
mov
push
pop
and
mov
cmp
sub
and
mov
int
daa
lods
ret
pop
imul
aaa
mov
sbb
test
xchg
and
cli
ds
fistps
dec
push
push
xchg
sarl
dec
rcl
xchg
pusha
push
sub
mov
nop
aas
mov
fbstp
add
add
add
jmp
or
in
cmpsl
or
stos
add
add
dec
fidivl
jno
imul
movsb
out
mov
jno
iret
pop
add
add
loope
add
mov
scas
xor
pushf
push
inc
mov
ret
cmp
in
fistl
mov
call
push
orps
dec
outsl
insl
test
loope
in
insl
xlat
aam
sub
mov
mov
mov
pop
xor
out
mov
repz
mov
sbb
fsub
add
int3
ja
ret
aad
cmc
into
xchg
jnp
push
pusha
dec
notl
test
std
jo
aaa
cli
cmp
adc
mov
data16
jmp
cwtl
and
daa
lds
iret
sahf
outsl
das
xor
push
fs
mov
arpl
inc
ret
push
inc
outsb
lahf
enter
add
jo
shl
jl
imul
pushf
mov
fsubr
jecxz
inc
rcrb
mov
fdivrs
or
shl
adc
and
fisttpl
push
hlt
pop
je
mov
sub
stc
cmpsb
int3
scas
xor
xchg
xor
ss
int
lcall
and
jae
xchg
inc
jle
push
cmpsl
jg
sahf
fnstenv
js
test
jp
or
jmp
popa
std
je
mov
movsl
mov
push
pop
aad
pop
mov
xchg
mov
add
mov
inc
xor
cmp
adc
imul
inc
cltd
cmp
jl
cmp
or
lret
push
adc
sub
insb
aad
xor
sub
cmp
add
add
hlt
popf
add
fdivl
test
adc
pop
scas
mov
pop
aad
push
dec
aad
xchg
aaa
inc
add
jp
mov
loope
inc
mov
push
pop
imul
mov
xor
cld
add
cmpsl
mov
xor
pop
dec
adc
jmp
out
std
int
cmp
xor
cmp
xor
fldenv
dec
pop
orb
or
lock
mov
or
ret
and
fisubrl
jge
jo
fcoms
inc
aad
inc
das
aaa
scas
cmp
ja
xchg
rcrl
test
push
cmp
fadds
pusha
aas
xchg
mov
mov
es
lods
outsl
or
popa
scas
cmp
and
xor
outsb
mov
pop
push
ja
push
fnstenv
xchg
aaa
cmp
test
jp
inc
or
lret
scas
test
sbb
adc
mov
hlt
rorl
loopne
mov
and
sbb
ds
fcoml
xchg
jno
lahf
out
mov
xor
stos
pop
push
mov
lods
dec
pop
xchg
mov
sbb
mov
pushf
and
gs
push
arpl
pop
push
jne
inc
mov
mov
pop
or
mov
es
mov
or
pushf
pop
and
ja
mov
mov
fldenv
mov
shlb
push
mov
sub
aas
enter
inc
fcompl
lahf
jns
mov
xor
jp
fisubrl
in
sub
xchg
leave
in
roll
push
pop
ror
jmp
data16
mov
jg
repz
lahf
jmp
or
out
mov
xor
aad
repz
loopne
push
testb
push
ret
daa
jmp
xchg
mov
cmp
jae
in
nop
add
in
sbb
dec
adc
daa
repnz
push
mov
mov
lcall
add
add
mov
or
lcall
and
add
push
sub
int3
shll
shr
lcall
xchg
bound
xlat
or
popa
push
out
push
sub
shlb
pop
sbb
imul
pop
adc
dec
pop
inc
inc
bound
shrl
ja
mov
in
xchg
xchg
movsl
cmp
push
fidivl
in
or
loopne
stc
mov
testl
aad
inc
dec
push
cmpb
fnstenv
lret
pop
nop
or
cmp
pop
pop
mov
sbb
ljmp
pop
add
xlat
push
jge
out
pushf
popf
insl
rcl
pop
fwait
push
negb
xor
imul
mov
adc
mov
mov
bnd
jne
pop
cmp
mov
or
mov
and
sub
xor
ds
test
fdivr
sbb
ret
sbb
inc
cmp
mov
xchg
jecxz
push
mov
jg
cmp
mov
les
inc
lret
pop
or
test
xchg
inc
stos
out
jne
lock
xor
scas
pop
sbb
xchg
cmp
pop
movsl
adc
test
pop
lds
dec
int
sbb
popf
mov
fs
jg
cmpsb
test
imul
aad
and
push
cmp
leave
pushf
xchg
dec
idiv
or
pop
mov
xchg
nop
das
or
jle
pop
enter
fcmovbe
and
std
mov
int3
insb
xchg
mov
int3
nop
loopne
jmp
out
add
insl
push
fistl
dec
in
loopne
les
dec
jb
mov
adc
xchg
in
fldt
sarb
out
out
jne
rcrl
dec
mov
sub
dec
xor
pushl
movsl
pushf
loope
dec
lock
mov
es
scas
push
adc
jae
jnp
rcrl
dec
push
fildl
cmp
aam
xor
hlt
or
jle
daa
push
daa
js
movsl
and
out
sahf
shr
sbb
fcoml
mov
inc
sub
mov
int3
fildll
repz
cld
adc
jnp
stc
outsb
movsl
pop
jnp
icebp
shrl
jb
or
add
inc
hlt
push
adc
test
pop
mov
adc
and
js
cmp
inc
cmpsb
aaa
push
aaa
js
jo
jbe
mov
mov
and
test
xchg
mov
imul
stos
sub
imul
and
jge
mov
js
pushf
test
incb
push
popa
mov
jmp
loop
idivb
stc
pop
aaa
pushf
mov
adc
inc
mov
fs
pusha
mov
nop
shrl
push
outsl
out
xchg
inc
xchg
pop
or
dec
mov
mov
jecxz
pop
dec
sub
cld
jo
xor
mov
cmpsb
pushf
lods
xchg
decb
rcl
lea
jns
or
xor
insl
std
xor
lds
cmpsb
or
out
cs
mov
sub
sub
das
stos
in
aam
movsl
jp
lods
xchg
rcrl
pop
xor
cmc
pop
pop
push
mov
je
mov
or
adc
mov
call
insb
aam
jne
call
push
insl
rolb
jp
call
cmp
jp
add
gs
popf
jg
mov
dec
sahf
mov
pop
mov
stos
add
add
test
sub
out
ss
daa
adc
test
xor
repnz
stos
fwait
mull
popa
fstl
rorl
pop
pop
cmp
inc
ds
rol
insb
aad
rcrl
out
jae
lods
adc
outsb
jge
xor
out
xlat
add
lds
ljmp
aad
js
jo
repnz
dec
shlb
cmp
mov
jecxz
aad
or
lock
or
mov
mov
pop
xlat
icebp
cs
repnz
fnstenv
jae
icebp
mov
rcr
test
ret
dec
loope
xchg
insb
sbb
xor
shlb
cld
push
mov
mov
aas
mov
xchg
adc
jns
xchg
mov
les
sarb
adc
lahf
insl
pop
sub
popa
repz
mov
inc
mov
add
push
cmpsl
jno
sub
in
jge
test
sub
imul
hlt
push
and
mov
sbb
fs
out
pusha
popa
push
lock
inc
test
or
mov
adc
test
vpminub
lea
push
outsb
aad
inc
push
ss
sub
test
cli
and
adc
or
out
push
add
lea
movsl
push
fisubs
push
mov
pop
sub
mov
js
xchg
arpl
movsb
out
xor
cmpsb
xor
popf
stc
xchg
lret
das
inc
or
mov
and
jbe
shrl
xchg
dec
sub
xchg
xor
push
jp
std
inc
push
push
jle
inc
jp
push
jg
xor
xchg
jl
pop
daa
andb
inc
test
jne
pop
aam
cmp
lret
sub
fistps
sub
call
inc
jnp
sub
push
mov
js
imul
shrl
lods
push
ds
add
inc
sub
ret
and
sub
imul
sub
xor
das
add
cmpb
leave
mov
dec
mov
test
mov
push
popf
pop
jmp
xchg
add
cli
fwait
xchg
xor
adc
decb
insb
fwait
mov
insl
and
shlb
mov
push
aad
mov
mov
rorl
popf
out
in
mov
jmp
test
aam
xor
sbb
jb
mov
pop
mov
jbe
bnd
xchg
out
cld
mov
push
add
fstps
jno
mov
loope
mov
and
inc
rolb
cli
jecxz
push
inc
ja
out
xor
jne
in
adc
movsl
add
lods
xor
out
push
sbb
jp
mov
testb
cmp
out
mov
aam
mov
mov
ss
and
pop
jmp
mov
dec
or
cmp
inc
mov
and
in
jecxz
and
test
cmp
pushf
enter
mov
push
cmp
divb
inc
add
clc
sub
pop
fstpl
in
bts
movsl
lret
movsl
outsl
push
hlt
iret
stos
in
sub
stos
cmp
in
lock
add
cmpsl
imul
popa
inc
cld
push
sbb
dec
push
or
push
mov
jae
gs
into
sbb
add
sbbb
dec
imul
sub
add
rcl
mov
mov
mov
scas
mov
fidivs
push
mov
adc
test
xchg
loopne
cmc
les
cs
mov
lea
adc
mov
xor
rcr
aad
stos
push
push
aam
push
and
and
add
int3
push
stc
test
mov
out
jge
push
ss
pop
lods
shll
inc
insb
test
or
into
and
push
xchg
fdivs
xchg
inc
push
clc
xlat
in
pcmpgtb
ja
push
mov
cmp
leave
arpl
or
iret
jns
xchg
push
dec
dec
clc
mov
xchg
sbb
add
inc
inc
jl
jb
mov
movsb
inc
out
scas
xor
jl
cli
jmp
dec
mov
icebp
loope
adc
subb
mov
mov
testl
xchg
adc
jl
push
xchg
and
aaa
stc
add
fcmovu
xor
ja
lds
jne
jecxz
xchg
pusha
jge
mov
lea
mov
mov
shll
mov
pop
dec
or
push
scas
cs
add
fiadds
sub
fsubs
imul
inc
push
cwtl
insl
pop
repnz
movsb
sbb
jb
imul
int3
pcmpgtw
dec
jb
and
or
test
pop
inc
mov
xchg
and
lods
sub
test
push
pop
cmp
push
xchg
mov
or
es
rcl
push
dec
inc
push
cmp
mov
sbb
push
mov
leave
push
and
pop
adc
pop
push
adc
sbb
in
int3
xchg
add
adc
fnstenv
pop
add
pop
arpl
add
das
adc
js
jnp
iret
sub
jge
test
adc
fldt
push
cld
lret
mov
bound
lods
xchg
scas
test
int
xchg
mov
mov
sti
adc
xchg
fcmovnb
repnz
das
fnsave
movsl
cmp
inc
and
jecxz
or
adc
dec
mov
int
in
dec
inc
adc
pop
or
cmp
xlat
add
and
sti
lds
or
mov
gs
pop
mov
dec
inc
inc
insl
dec
push
mov
mov
jmp
pop
mov
mov
jge
pushf
pop
mov
aad
inc
orl
mov
leave
mov
sub
bound
jp
lds
enter
les
pop
sbb
xor
vucomisd
mov
sub
scas
push
ret
dec
dec
scas
fistpll
fs
loop
loopne
inc
mov
jo
cltd
or
adc
pop
push
dec
pop
sbb
imul
pop
and
adc
jbe
shll
cmpsb
icebp
fwait
mov
sahf
and
sarb
xor
jecxz
or
adc
cmp
movsb
jle
xchg
push
adc
xchg
jns
pop
ljmp
pop
jb
pop
sbb
xchg
and
add
mov
adc
testl
lods
sub
stos
push
add
aam
test
dec
lahf
sub
notb
jecxz
nop
rcrb
dec
shr
into
shr
add
stos
add
add
xor
dec
lods
lods
jne
add
les
dec
aad
fildll
jne
sbb
jbe
sub
push
rorb
js
not
shlb
xchg
es
fs
sbb
aaa
and
cmpsb
mov
aaa
lods
out
mov
inc
call
mov
or
pop
cli
mov
xchg
cmp
ffree
mov
pop
cld
inc
shr
movsb
das
out
and
pop
icebp
xchg
sti
insl
sub
insl
jl
ret
xorl
add
mov
fsubs
add
mov
jnp
enter
cmc
adc
sub
insl
dec
inc
pop
lcall
mov
mov
cli
jnp
mov
xchg
mov
or
fiaddl
jo
pusha
popa
imul
popf
adc
cmp
sbb
scas
inc
lcall
push
fistpl
xor
jg
xchg
inc
push
cld
cld
pop
jae
sbb
inc
hlt
testb
cmpsl
sub
add
cltd
push
sub
sub
pop
testb
inc
cmp
jp
ficoml
sarb
dec
jo
push
gs
xchg
mulb
dec
sarl
dec
adc
xchg
add
fwait
test
mov
mov
bound
mov
fs
sub
je
fmull
xor
mov
in
or
and
cmp
pop
mov
add
push
pop
decl
push
mov
pop
daa
lea
insb
xor
arpl
mov
mov
mov
mov
test
adc
nop
add
lods
int
sbb
fiaddl
clc
push
insl
sub
mov
inc
std
pop
xor
inc
mov
int
dec
gs
mov
lret
push
jo
xor
shr
sbb
sahf
xor
jns
pop
pop
mov
shll
cmpb
insb
cld
out
fsts
adc
pop
cmc
xchg
in
loope
sbb
mov
scas
add
sub
shr
xlat
adc
mov
mov
lahf
pop
mov
push
adc
inc
cwtl
movsb
push
loop
mov
mov
movsb
lock
add
mov
or
stos
add
push
push
insb
jg
mov
and
mov
inc
mov
pop
lods
in
adc
pop
in
sbb
push
jns
xchg
lods
mov
mov
lods
xchg
xlat
sbb
nop
ds
dec
mov
aaa
xlat
xor
mov
pop
cmpsl
nop
std
dec
dec
pop
ja
inc
bound
or
add
pop
mov
movsl
mov
cmp
mov
je
in
and
push
sub
fldl
loope
in
pop
insb
cmp
sub
ss
xchg
pop
aaa
mov
adc
mov
cld
mov
adc
int3
cmp
mov
sub
cmp
lods
lock
dec
push
mov
fsubl
aaa
fcomps
inc
andl
add
inc
mov
sub
shll
xorl
cmpsb
out
xor
sub
xor
inc
mov
jmp
adc
jae
push
sbb
shrb
jg
sub
pushf
sbb
popf
jno
push
in
dec
mov
cmpsb
leave
orl
jbe
xor
sbb
add
data16
lods
cld
mov
hlt
xor
xor
add
out
mov
sbb
push
jle
pop
sbb
aad
jp
add
and
sub
inc
aad
inc
int
pop
mov
dec
xchg
xor
add
xchg
lcall
cmp
outsb
sbb
sub
push
aaa
or
inc
xor
lods
test
mul
lock
test
les
xor
es
addb
lcall
shlb
aad
leave
es
jp
xchg
add
push
push
sbb
inc
mov
or
loopne
dec
mov
sub
xchg
sar
dec
add
xchg
xor
sbbb
push
mov
mov
out
in
jecxz
adc
adc
push
ficomps
gs
cwtl
neg
stos
nop
add
mov
or
aad
pushf
cmp
test
mov
aam
mov
mov
jecxz
pop
outsb
loope
adc
xor
mov
test
ret
sti
push
movsl
fisttpll
and
jne
ret
clc
imul
loop
jle
iret
pusha
inc
mov
add
xlat
mov
adc
cltd
ret
xchg
insb
jmp
adc
pop
hlt
in
stc
cmpsb
adc
enter
pop
test
pusha
jge
mov
sub
mov
inc
mov
push
and
adc
in
movsl
dec
jge
imul
push
cmpb
out
mov
xor
loope
pop
mov
ret
int
add
lods
dec
shlb
add
dec
fsubs
fcoml
mov
ret
shll
repz
out
daa
mov
inc
ror
test
jle
mov
xchg
jns
es
xchg
xchg
ja
push
xor
rolb
iret
clc
dec
lods
into
addl
wbinvd
out
jl
test
xchg
and
mov
push
inc
les
fst
out
xor
sub
mov
out
xor
mov
mov
adc
out
xorl
fs
jae
mov
test
hlt
mov
dec
sub
cmp
testb
outsb
xor
popf
push
cmpb
dec
fnstenv
sbb
idivl
inc
mov
xor
out
lcall
or
jp
leave
jbe
mov
movsl
in
xlat
mov
jecxz
xlat
xchg
xor
jb
jne
mov
mov
call
insb
cmp
sbbb
dec
mov
out
inc
pop
inc
push
mov
call
jg
roll
fnstsw
mov
fs
xchg
into
sub
and
cld
push
mov
mov
xor
daa
and
hlt
jno
push
inc
inc
std
mov
jno
movsl
pop
push
ret
jbe
mov
test
adc
push
mov
push
mov
insl
inc
push
push
add
pop
cli
ret
and
jbe
or
sbb
sbb
cmpsb
cld
scas
push
mov
jbe
xor
imull
out
sub
mov
fs
cmp
mov
cmovp
jno
movsb
xchg
mov
or
or
inc
test
mov
lahf
or
aam
shll
dec
popa
sub
push
fs
ljmpw
sbb
or
aas
sub
scas
inc
leave
int3
push
pop
les
out
das
inc
mov
xchg
out
adc
neg
jmp
cli
and
xchg
std
int3
adc
add
stos
add
add
jmp
lock
sub
sbb
bound
movl
jl
ret
in
pop
xchg
jb
mov
adc
idivl
push
add
ss
daa
push
xchg
js
mov
test
sub
jecxz
xor
or
mov
add
mov
adc
push
daa
mov
inc
xchg
add
stos
jbe
movsb
sbb
cld
js
push
movsl
jg
xor
in
cmp
and
aaa
xor
dec
jae
cmp
lret
pop
jl
out
dec
dec
pop
pop
sbb
fildll
in
out
popa
lods
movsl
jle
shr
mov
jg
mov
scas
loopne
sbb
enter
sub
inc
ret
jno
dec
or
mov
pushf
sub
jl
sbb
aaa
sub
imul
pop
mov
xor
mov
add
add
and
fstpl
incl
cmp
push
loopne
mov
int
mov
clc
push
sub
xor
rep
lcall
icebp
fisubl
iret
loop
outsb
pusha
sbb
jae
pop
xchg
loop
inc
fwait
adc
fidivs
and
mov
jl
xor
rclb
lcall
jge
or
test
xchg
ret
cli
jbe
xor
aaa
xchg
xlat
fists
cmp
shr
movsl
adc
scas
mov
mov
cmp
jle
dec
rol
xor
das
cmp
sbb
es
cli
cmp
icebp
hlt
adc
xchg
mov
sub
adc
push
pop
fnstcw
loope
fwait
gs
shr
rolb
and
mov
clc
insb
xlat
dec
bound
xchg
pop
movsb
insb
cmp
xchg
and
mov
out
aam
xchg
fdivr
insw
fnstcw
inc
xor
push
cmp
adc
xor
daa
pop
icebp
xchg
les
je
jb
push
rolb
cltd
inc
pusha
inc
and
add
les
pop
xor
mov
adc
sub
mov
pop
shl
mov
sbb
and
sarb
clc
and
mov
push
clc
icebp
pop
sub
dec
xor
dec
sub
fs
inc
xlat
fld
fistpl
mov
and
mov
xchg
ret
lock
in
in
push
mov
jno
ret
xchg
sbb
inc
outsb
ljmp
xor
or
mov
pop
cmp
out
dec
xor
xor
stos
inc
cli
stos
mov
sbb
jne
lock
jg
popf
int3
dec
sub
rcr
shll
fwait
mov
pop
sub
push
fldenv
imul
sbb
lods
mov
sub
mov
lret
push
xchg
adc
sub
pop
test
subb
popa
ret
jg
popa
leave
mov
dec
adc
sub
inc
movl
mov
lods
push
pushf
andb
ljmp
mov
mov
jnp
mov
lea
adc
jae
daa
push
jno
daa
insb
or
inc
fstpt
nop
pop
inc
nop
fld1
ds
push
mov
inc
mov
cmp
push
sbb
and
pop
icebp
in
mov
sbb
andl
jae
dec
std
inc
icebp
jno,pn
jp
cmp
leave
mov
add
lds
mov
sub
add
mov
and
jmp
adc
push
das
mov
add
add
subb
mov
jns
sbb
call
mov
jae
mov
es
imul
mov
loopne
fistps
jl
icebp
js
dec
fidivl
aad
mov
jno
ja
loope
imul
or
mov
mov
ja
mov
add
ficoml
jl
jle
push
lcall
inc
movups
xchg
jnp
xchg
push
add
mov
in
dec
gs
jge
sbb
orb
daa
movsb
sbb
pop
inc
jae
push
dec
es
mov
filds
cmp
psubsw
scas
mov
xchg
mov
inc
push
mov
sbb
scas
mov
mov
or
aam
pop
xlat
pop
addb
insl
mov
mov
iret
push
add
and
inc
lea
fwait
stos
sarb
add
mov
pop
jle
xchg
incl
iret
xchg
iret
ljmp
cmp
addr16
mov
dec
jmp
add
icebp
rcr
into
sub
jne
ds
push
adc
push
movsb
cmp
pusha
sqrtps
xlat
lret
hlt
icebp
int3
add
jge
or
dec
xchg
lcall
dec
pop
lahf
add
inc
jnp
jno
jg
xchg
test
push
popf
xchg
mov
sub
and
outsb
mov
jb
pusha
cld
jmp
aad
sub
cmpsb
dec
mov
out
sub
mov
in
test
jb
mov
jle
xchg
movsb
sahf
cld
pop
mov
addl
std
cwtl
sbb
sti
xchg
pop
sub
xchg
fs
in
aad
inc
adc
pop
lcall
test
jg
jne
push
jg
dec
dec
lea
stc
pop
xor
push
rcl
pusha
scas
dec
addr16
out
inc
mov
std
fs
xor
and
add
and
cs
outsb
sahf
lret
rol
jbe
jge
push
mov
add
in
jnp
test
jmp
inc
int3
push
mov
cld
cmp
les
xchg
popa
cmp
out
fildll
dec
jo
jae
ret
cmp
loop
mov
fldt
nop
aam
sbb
adc
sub
lods
stc
jecxz
mov
ret
jbe
les
dec
fwait
jbe
cli
jle
lea
lock
mov
movsb
add
sbb
popf
js
xchg
lcall
cmpsl
sub
leave
lret
push
and
pushf
push
sbb
lock
jmp
jp
inc
add
mov
ds
jle
xchg
xchg
sbb
adc
les
xchg
sub
jns
push
or
sbb
mov
and
dec
lret
fildll
inc
cmp
fcmovnbe
jae
jle
mov
pop
imul
xchg
mov
mov
xchg
sub
mov
mov
sub
adc
push
inc
xor
rorl
sub
cmp
int
sub
scas
aam
imul
div
stos
jb
loope
imul
xchg
cmp
sbb
fisttps
xchg
xchg
mov
adc
inc
cld
loopne
xchg
push
mov
push
and
sub
push
mov
adc
andb
jecxz
push
sbb
add
test
sbb
dec
fisubl
xchg
push
add
add
lcall
push
test
sbbl
push
rcrl
push
cmpsl
mov
stos
loopne
mov
divl
aaa
lea
mov
sbb
js
std
in
push
push
jge
lahf
adc
vpunpckhqdq
cmp
cs
pop
roll
inc
addr16
ds
jle
pop
push
loope
dec
adc
fsts
pop
in
push
jmp
push
movsb
add
lods
inc
inc
fs
jecxz
lret
imul
mov
imul
xchg
push
push
push
mov
movsl
mov
push
inc
and
mov
jle
cmp
sbb
or
xchg
mov
cmpb
and
cltd
sub
in
dec
or
mov
ss
ljmp
ja
insb
scas
push
push
scas
sbb
add
adc
mov
xor
gs
call
std
push
sub
add
sbb
dec
xchg
fildll
lret
fistl
inc
or
or
mov
pop
fbstp
iret
out
mov
add
push
in
inc
aad
push
fs
mov
xor
mov
test
lret
hlt
mov
je
push
xor
fidivrl
test
sti
mov
cli
adc
js
icebp
mov
outsl
in
loopne
pop
pop
test
sbbb
lsl
mov
sub
cmp
jmp
pop
pop
mov
out
or
out
fisubrs
out
loop
push
out
mov
push
dec
pop
xchg
cmpl
mov
dec
xchg
aad
adc
int3
std
in
addb
sbb
loopne
sbb
mov
in
out
call
push
clc
mov
or
push
repnz
mov
loop
shrb
mov
dec
ljmp
int3
adc
xor
mov
in
adc
gs
movsb
xchg
test
push
xchg
popa
lods
lcall
or
xor
cli
jb
sub
pop
or
insl
pop
jmp
pavgw
sbb
jge
lcall
notl
or
rcrl
cltd
test
pop
push
mov
popf
or
icebp
push
mov
stos
cld
stos
cmp
push
mov
imul
jecxz
rorb
jb
cmp
and
pop
push
mov
or
add
dec
mov
mov
mov
pushf
into
mov
push
xchg
ljmp
push
in
lret
sub
dec
sub
mov
enter
jp
jo
movsl
popf
loope
cli
in
jp
test
loop
int3
jbe
pushl
enter
and
sahf
lcall
fidivl
ja
xchg
cmp
dec
adc
aam
xor
cli
adc
sti
call
fs
add
subl
test
mov
gs
pop
out
cmp
xor
sub
aad
shlb
push
xor
adc
aad
xchg
jo
orl
sub
loope
jnp
pusha
ret
cmp
fcmove
lods
sub
cmp
out
push
or
mov
nop
out
int
ds
inc
movsb
cmc
or
xor
int3
mov
add
out
inc
dec
add
ficoml
inc
add
stos
add
add
pop
or
call
adc
mov
data16
xor
push
add
mov
mov
jp
xchg
adc
and
sbb
sub
adc
jno
sub
xorl
pop
lods
xchg
push
test
out
mov
mov
aam
mov
jo
xor
pop
mov
std
push
adc
lds
in
rcrl
in
pop
jmp
mov
aaa
lret
jmp
dec
adc
cmp
mov
jno
jmp
aam
sbb
loope
lock
dec
daa
xchg
leave
dec
push
std
jns
mov
sbbb
insb
movsb
pop
movsl
popa
xchg
leave
fadds
lock
in
es
iret
ret
or
xchg
out
and
dec
xor
arpl
fwait
rcrb
test
xor
push
mov
out
adc
rclb
pushf
hlt
ds
add
sahf
inc
movsb
mov
nop
or
jp
mov
xchg
icebp
mov
loope
mov
cmpsb
push
lea
push
lahf
in
xchg
or
and
fsubs
xchg
and
pop
sub
xchg
xchg
inc
cmp
dec
xchg
inc
and
push
adc
test
adc
je
fimuls
or
aas
pop
inc
insl
mov
loope
jae
in
push
pop
xchg
jge
xchg
xchg
sti
add
call
mov
outsl
xchg
nop
sarl
cmpsb
ja
outsl
xchg
cltd
cmp
xorb
outsl
leave
xor
push
push
add
cli
and
cmp
push
inc
int
arpl
rol
ja
fnstcw
jbe
mov
adc
js
mov
stos
bound
mov
aas
aad
sub
inc
int
cwtl
loop
lahf
push
or
pop
test
sbb
pop
ficomps
push
xchg
mov
out
lock
test
test
mov
jo
out
cmp
int3
sar
mov
xor
or
rorl
test
jns
addl
jnp
enter
and
imul
out
adc
fcompl
popa
sub
imul
jbe
push
js
ret
pop
and
icebp
jle
popa
out
push
mov
shll
add
xchg
imul
nop
jl
xchg
mov
aaa
mov
fsubr
mov
cli
ror
dec
aas
jae
sub
xchg
cmc
and
mov
or
mov
jnp
jmp
fistpl
jl
xchg
test
fisubl
mov
mov
loop
mov
adc
jns
xchg
sub
gs
stc
cmp
std
push
call
stos
push
mov
mov
cwtl
cmp
jo
jge
je
mov
jne
jb
xor
add
add
or
or
scas
mov
pop
dec
lods
or
push
lds
push
or
cmpsl
mov
dec
and
movsl
xchg
test
scas
sti
rcr
or
loopne
rorl
xchg
repnz
cs
loop
int
add
adc
jno
adc
popa
and
test
movsb
mull
test
sbb
lock
aam
insl
xchg
loope
cmpsb
insl
jne
popf
icebp
pop
add
leave
or
add
or
add
add
pushf
mov
fdivl
aaa
iret
ret
add
pop
mov
mov
repnz
mov
lahf
jge
adc
sub
jne
sahf
inc
push
sar
adc
jne
inc
outsb
mov
or
push
in
cltd
outsb
pushf
cmc
lret
inc
out
xor
arpl
sub
bound
test
sub
outsl
cmpb
jbe
enter
inc
cs
sti
lcall
frstor
aam
insl
xchg
xchg
je
cli
cmp
adc
dec
mov
adc
jno
xor
leave
or
push
shl
push
mov
and
dec
mov
mov
pop
or
nop
int3
and
lds
xor
stos
or
xor
xchg
jge
push
int
jnp
xor
clc
lret
mov
jg
jb
sbb
in
iret
lock
push
ss
dec
scas
lods
out
mov
xlat
inc
aad
sub
sub
enter
int
xor
sub
sbbb
dec
int
nop
lret
cld
in
push
or
inc
test
fdiv
mov
adc
push
or
push
pop
cmp
lods
xchg
or
push
adc
mov
adc
pop
int3
cmp
jnp
add
std
dec
jmp
inc
jmp
sbb
das
ja
sub
and
imul
scas
ret
pop
lods
xor
sbb
cwtl
add
pop
inc
jns
add
jmp
insl
aam
xor
insl
ret
lods
loopne
rclb
cmp
adcb
loop
and
cmp
dec
inc
mov
cltd
dec
push
lahf
sub
shl
and
fistpll
add
nop
mov
push
addr16
xchg
cmp
lcall
fs
adc
mov
xor
jp
pop
and
lret
lock
test
sti
dec
cmp
nop
cmc
and
push
mov
test
je
out
sub
stc
andl
sbb
mov
xchg
jo
int3
pusha
test
ljmp
pop
sbb
mov
pop
mov
push
popa
sbb
and
scas
cmc
stos
ss
shrl
ficompl
sbbb
inc
adc
or
jnp
iret
fldl
jecxz
je
arpl
jge
insb
enter
push
inc
fadds
mov
mov
out
cmp
xchg
fstpl
in
xchg
scas
shll
pop
xor
dec
push
iret
fwait
dec
dec
in
pop
sub
dec
pop
xor
fsubrp
gs
fsubrs
negl
jnp
jmp
stos
jne
mov
xchg
push
daa
mov
mov
rcll
jo
dec
xchg
mov
cmp
sbb
xchg
add
cmp
movsl
lret
popa
cmpsl
fwait
jns
mov
lcall
mov
dec
push
add
fnstenv
into
lods
cs
and
jg,pn
sti
pop
iret
or
sbb
sarl
loop
add
repz
jp
mov
dec
xchg
mov
in
icebp
fldcw
sbb
jo
lods
imull
or
nop
pop
popf
mov
icebp
jo
and
mov
gs
aaa
jg
rolb
cltd
ja
out
out
cltd
ja
daa
xor
imul
add
xchg
sahf
sbb
and
xor
adc
cltd
rorl
add
or
mov
cmc
xchg
ret
sbb
push
jbe
cli
and
out
out
out
inc
rcll
imul
xchg
dec
sub
nop
pop
nop
cmpl
movsl
repz
stos
in
outsl
movsl
pop
xor
push
dec
jb
jbe
fwait
lcall
das
xor
jbe
arpl
add
fsincos
sti
psrlw
or
pop
cld
inc
jae
sub
pop
pop
jp
mov
jl
aad
aaa
push
sarb
into
dec
icebp
dec
cwtl
dec
stos
jg
add
ficomps
stc
add
jae
or
rcrl
sbb
push
addr16
aam
xor
repz
lret
out
stos
push
inc
addr16
dec
mov
sbb
sbb
jmp
popa
int3
xor
push
popa
xor
sahf
inc
mov
and
lret
pop
inc
cmpsb
lds
mov
sub
dec
fstl
cld
rcrl
cmc
xchg
stc
lods
shlb
sbb
dec
pop
inc
mov
adc
fwait
lahf
dec
fwait
mov
adc
cmp
enter
push
in
loop
mov
jmp
push
fbld
jmp
loopne
cmp
and
fiadds
outsb
dec
popa
hlt
add
and
out
xchg
mov
xchg
ljmp
sub
jne
dec
xchg
pop
xchg
mov
test
cmp
out
fistl
push
mov
pop
mov
lret
lds
orb
jmp
mov
dec
push
ret
dec
fidivl
xorb
xchg
mov
adc
mov
sbb
mov
cmp
jp
ret
mov
lret
movsb
inc
popa
es
adc
mov
or
mov
jno
add
add
scas
and
pop
inc
xlat
in
negb
shlb
jne
push
push
aam
pop
adc
jns
sub
adc
mov
ret
loopne
mov
or
or
movl
inc
loope
cwtl
or
cmc
cmp
inc
xor
loopne
sbb
loopne
aam
jl
push
add
dec
fcompl
jg
inc
adc
sbb
jl
xor
push
xor
cwtl
fadds
mov
movsb
out
out
sub
adc
jl
jb
jle
mov
test
mov
movsl
jge
fisubrs
xchg
add
mov
fildl
push
push
adc
out
xchg
arpl
aas
push
mov
inc
jl
or
std
enter
inc
mov
mov
clc
mov
and
mov
lret
mov
xchg
jns
xor
adc
fimull
push
aaa
out
inc
divl
ret
jbe
xor
mov
push
out
jle
or
mov
gs
aam
mov
fcomps
cs
and
mov
push
pop
sub
push
cmp
mov
cmp
in
loopne
xor
jl
mov
add
jg
mov
jns
and
jnp
data16
inc
movsl
push
mov
ss
out
mov
xchg
inc
mov
loop
aad
push
loopne
stos
adc
add
stos
add
add
inc
xor
add
out
les
or
rol
pusha
jge
jmp
popf
lock
je
pop
mov
hlt
add
shll
ss
and
shlb
in
add
mov
jl
mov
in
aaa
sbb
cmpsl
call
fcmovne
lds
xchg
mov
mov
popw
push
pop
movsl
divl
dec
cmpsl
add
cmpb
mov
ss
dec
inc
sahf
pop
sub
or
jl
xchg
in
adc
jo
mov
lret
cmp
movsb
fwait
js
mov
cmp
add
mov
mov
pop
lret
mov
mov
loopne
addr16
das
insb
mov
inc
pop
or
in
aad
push
lock
lds
jge
aam
cmc
cli
jmp
sbb
cli
repnz
js
shlb
jle
daa
jae
add
xchg
mov
dec
cwtd
pop
ret
fcmovbe
xchg
cmp
fnstsw
addb
jae
int
dec
pop
adc
push
cmp
neg
fs
dec
js
pop
ret
stos
lcall
push
cmp
aad
sbb
test
pop
insl
push
bound
subb
cmp
insl
movsl
maxps
outsl
and
pop
xchg
xor
jb
leave
push
clc
pop
in
icebp
or
dec
jl
pop
jno
xchg
jbe
out
movsl
ret
inc
sub
pushf
movsb
mov
or
andb
cmp
repz
imull
push
pop
jb
pop
push
push
push
jbe
mov
xor
scas
test
jge
push
or
adc
sbb
push
loop
sub
pop
in
aam
shll
cmp
mov
enter
inc
pop
or
or
in
cmp
fcoms
xchg
out
dec
mov
add
jns
dec
iret
pop
pop
fidivrs
test
mov
jp
lcall
cmpsl
xor
gs
enter
stos
pop
mov
test
cmp
mov
stc
imulb
jg
movsb
out
cmovne
xor
xchg
push
dec
mov
mov
je
mov
mov
loope
and
ret
ljmp
test
inc
cmc
cmp
es
pop
sti
subl
pop
or
jge
mov
testl
sub
test
sbb
popf
jp
xlat
xorb
stos
or
pop
xor
mov
pop
and
pop
movsl
mov
sub
push
jbe
and
or
aas
into
sbb
lret
out
xor
out
jbe
adc
in
fs
in
ror
lcall
repz
xchg
fs
test
mov
test
and
pusha
sbb
mov
ret
or
mov
lahf
mov
ja
sahf
mov
sub
loopne
js
cmp
mov
pop
mov
mov
xchg
sti
pop
mov
dec
lcall
xchg
popa
jns
insl
mov
jbe
cmp
rolb
je
push
add
add
mov
mov
pop
popa
int3
xchg
jbe
out
je
ljmp
push
push
xchg
mov
sub
ss
std
or
add
pop
movsb
mov
mov
inc
push
mov
shlb
mov
push
cmp
mov
add
stc
mov
stos
lahf
out
pop
mov
add
add
push
loopne
in
lods
xor
mov
ds
push
push
bound
sti
push
push
sub
nop
push
les
pop
ljmp
popa
sbb
add
repnz
adc
cmp
xchg
or
cmc
cmc
clc
add
mov
punpckhbw
sbb
es
adc
movsl
inc
xor
jg
cmpsl
or
dec
push
mov
mov
jl
cltd
xchg
hlt
daa
cli
adc
and
sub
sub
dec
mov
sub
aam
mov
lahf
fidivs
xchg
cwtl
cmp
xor
les
fidivrl
shl
sub
mov
fwait
and
xorl
xor
jno,pt
ret
das
orl
xor
xchg
cmpsb
inc
js
push
bound
testb
sbb
xchg
stos
mov
xor
cli
inc
push
cmp
sbbl
pusha
adc
gs
add
repnz
fisubl
pop
xor
data16
jle
lods
push
mov
cwtl
mov
imul
clc
sahf
popf
xchg
rorb
or
out
cmpsl
cli
mov
scas
fidivrs
sbb
mov
jmp
adc
add
ret
and
dec
jl
pop
dec
push
push
dec
ret
or
mov
mov
leave
and
es
mov
mov
imul
jb
sbb
cmp
dec
cmp
xchg
or
ficomps
loop
xor
fstps
dec
rcll
push
sbb
inc
test
outsl
out
pop
stos
lods
jo
movl
mov
lcall
jge
dec
and
aad
outsb
scas
popf
adc
mov
inc
adc
movsl
test
push
jno
shrl
inc
cld
stc
in
push
dec
dec
mov
push
mov
rolb
std
and
sti
leave
fsubrs
push
or
xchg
cmpb
insl
pop
aaa
mov
sub
pop
mulb
jge
filds
inc
stos
push
sti
fdivrp
xor
sar
xor
push
jno
pop
lock
dec
cmp
out
icebp
test
fs
in
sub
js
lret
aam
mov
pop
pop
test
and
add
loop
fisttps
jl
daa
jne
push
rcll
cld
sahf
xorb
push
fwait
inc
pop
cmp
push
sbb
jns
bound
or
mov
jae
fistpll
xor
lods
fwait
outsl
and
jb
jae
dec
add
push
incb
test
cmp
jg
jmp
cmp
sub
fildll
pop
lahf
push
aas
loop
jne
es
js
or
mov
inc
mov
filds
lock
mov
stos
mov
cmp
push
cmp
or
movsb
lds
mov
aad
scas
and
popa
and
or
push
out
rcrl
xor
gs
lea
add
and
cmp
adc
popa
imul
inc
add
imul
mov
das
mov
hlt
and
pop
inc
mov
cmp
dec
xchg
push
rolb
les
jne
test
data16
and
cltd
jb
das
data16
xor
add
xlat
dec
call
adc
iret
and
stos
add
add
out
push
and
sub
ret
sahf
out
outsl
jae
xor
fwait
cmp
mov
jg
pop
sbb
test
fwait
lret
out
xchg
push
ss
or
push
lret
call
mov
mov
jo
lock
pop
in
mov
adc
ret
pop
loope
inc
pop
jge
dec
cmpsb
cwtl
clc
ret
fs
sub
jae
syscall
push
stos
mov
mov
cmp
test
sub
ffreep
mov
test
loopne
inc
lret
bound
adc
into
cs
cmp
pop
jmp
pop
mov
xchg
in
cmp
pop
fs
orl
out
push
mov
and
jo
test
mov
in
mov
ss
pop
jle
pop
mov
or
add
jecxz
jo
cs
js
imul
mov
orb
jmp
lahf
mov
fldenv
sbbb
test
inc
sbb
pop
ja
dec
mov
std
hlt
jne
popa
test
dec
mov
mov
pop
filds
adc
std
adc
ret
add
ja
lret
xor
xchg
mov
push
pop
stos
lods
repnz
sub
test
fists
pop
mov
out
sbb
cmp
and
sub
xchg
jae
or
inc
and
xor
pop
mov
pop
stos
incb
pop
bound
cwtl
cmp
xchg
faddl
rcll
sbb
pop
mov
movsl
rcr
insb
int3
adc
imul
outsb
ret
mov
xlat
decl
fwait
adc
or
incb
xchg
or
daa
test
leave
pcmpgtd
cmpsl
lods
rol
pop
aam
mov
stos
arpl
dec
push
sti
dec
cltd
orl
stc
sbb
outsl
pushw
xchg
xchg
dec
inc
cmp
cmp
dec
ds
push
in
je
scas
das
jno
xor
popf
mov
dec
jbe
ja
stc
xor
fmul
pop
or
aad
pop
das
or
stos
imul
mov
sahf
jns
arpl
cmp
ja
adc
cmp
mov
aaa
shlb
popa
icebp
or
add
fldcw
add
psllq
int
mov
repnz
mov
sbb
push
pop
aas
insl
cmp
mov
cmpsl
out
and
arpl
je
adc
mov
in
push
ficoms
dec
lret
jns
loopne
pop
int3
mov
sahf
aam
rorl
rcrb
js
sub
repnz
outsl
cmp
mov
xor
adc
aaa
aas
pop
enter
ret
inc
fidivl
cmp
fwait
into
mov
jp
aas
pusha
bnd
lret
lea
lret
mov
cwtl
mov
lret
mov
les
popa
aaa
dec
sub
out
sbb
push
inc
sub
and
sahf
imul
cmc
aaa
ja
fcmove
aaa
mov
and
ret
int
fwait
push
out
mov
sbb
jb
sub
fdiv
mov
sbb
inc
fimull
loopne
xor
xchg
jbe
mov
mov
shlb
loop
dec
and
ljmp
push
add
ljmp
test
repz
das
cmp
ds
mov
pop
lds
add
add
add
jnp
mov
cmp
fstl
add
add
adcl
push
add
outsb
and
lea
adc
out
test
sub
sti
add
mov
xchg
jns
in
sbb
clc
inc
xor
test
jecxz
lods
mov
jecxz
stos
es
cmpsb
out
mov
jl
dec
cli
jne
iret
stos
jo
popf
pop
int
in
sub
cmp
shlb
addr16
xchg
or
imul
out
mov
dec
jmp
xchg
and
sbb
imul
aaa
stos
pop
std
jns
adc
jns
push
je
in
xlat
mov
dec
xor
popw
std
ja
lcall
inc
dec
and
and
xor
stos
xchg
les
dec
dec
aas
popa
movsb
mov
mov
xor
or
jle
rcll
sbb
in
pop
jbe
mov
insb
push
ds
or
or
cmc
into
inc
push
xchg
nop
pop
lods
push
jnp
lcall
mov
lahf
xor
jmp
mov
lock
sahf
lcall
sub
stos
cmp
adc
pop
adc
hlt
xor
push
in
pushf
movhps
ret
inc
push
test
stos
sbb
cmp
mov
or
gs
mov
loope
ficoml
jmp
loopne,pt
out
and
mov
mov
jno
dec
int
adc
jns
int3
xorb
xchg
into
pop
dec
push
mov
inc
jnp
movups
repnz
xor
pusha
push
mov
out
ret
fstp
mov
popa
mov
mov
mov
cmp
mov
mov
add
push
push
outsl
sbb
arpl
pop
repnz
pop
and
mov
sbb
pop
adc
inc
pop
jae
pusha
movsl
inc
push
jmp
hlt
pop
aad
dec
mov
jmp
outsl
insb
fstp
dec
subl
in
sbb
xor
rcrb
js
add
jmp
cmp
sbb
gs
lea
mov
jnp
enter
sub
fimuls
mov
and
notl
mov
xchg
sahf
jecxz
pop
out
iret
mov
fists
nop
fists
and
mov
sbb
imul
mov
icebp
jb
or
insl
inc
jmp
mov
or
push
mov
aam
loop
hlt
mov
popa
mov
fldenv
push
dec
outsl
mov
adc
adc
adc
and
addr16
jbe
mov
cmp
loope
lahf
pop
dec
cmpsl
notl
and
push
xchg
push
pop
enter
popf
sub
mov
repz
pushf
xchg
shll
ljmp
sarb
mov
fisttpll
push
pop
ret
mov
test
inc
push
or
shrl
jns
mov
aas
push
sub
incb
push
and
xchg
xchg
leave
sti
jmp
inc
and
mov
jle
loop
inc
xchg
pop
xchg
sbb
es
hlt
mov
loop
repz
popa
test
cwtl
mov
insl
ja
jne
pop
jl
inc
addr16
sub
dec
push
mov
jns
xorb
fldcw
jle
movsl
pop
in
int
mov
add
adc
add
jg
jns
pop
adcb
add
stos
add
add
ss
in
push
mov
mov
aas
mov
xor
jns
scas
in
and
lret
jg
repz
loope
mov
cld
aad
insb
sub
add
pop
pop
push
jo
in
ss
sub
pop
sub
jns
cli
call
stos
sub
pop
insb
and
repnz
cmc
out
insb
in
jae
cmp
inc
cld
pop
das
into
repnz
mov
jmp
xchg
in
cwtl
sbb
lea
cmp
pop
lcall
and
add
mov
sub
into
fldl2e
push
imul
inc
in
fstpl
push
sbb
shlb
or
cwtl
leave
mov
push
fmuls
outsb
jo
mov
xchg
jnp
fistps
and
dec
roll
mov
nop
lds
ljmp
negl
into
in
sbb
lods
jle
mov
pushf
xor
or
sti
jnp
outsl
mov
sub
pusha
mov
and
add
xchg
jns
fwait
jae
repnz
pop
shl
cmp
and
pop
jmp
in
jno
push
sub
mov
or
push
mov
push
fstpt
outsb
rol
jge
sub
cmp
addr16
cmpsl
mov
mov
cmpsb
mov
fisttpl
loopne
push
xchg
std
pop
stos
jno
pop
arpl
cmp
loope
divb
ret
jle
iret
mov
out
insl
test
inc
adc
xor
dec
xchg
or
stos
clc
dec
je
rorl
xchg
adc
dec
hlt
in
cmp
push
lahf
xor
aas
mov
push
jg
xchg
ret
fnsave
js
imul
out
mov
jbe
push
pop
ja
fimuls
dec
ret
pop
out
inc
push
jns
cwtl
xchg
test
jle
push
xchg
stos
mov
pop
push
jbe
xchg
addl
jo
cmpsb
les
push
xchg
mov
lret
jnp
or
insb
pop
and
outsl
pop
xchg
mov
pop
ret
das
cmp
dec
int
shll
mov
std
stc
out
xchg
cmpb
into
insb
test
cmp
dec
mov
mov
filds
out
daa
add
inc
xchg
pop
hlt
inc
int
sahf
imul
push
ss
movsl
xor
pop
lcall
je
cmp
std
stos
scas
push
push
popl
cmc
ljmp
movb
sbb
subl
pop
das
int3
xchg
xor
push
fistpl
xchg
pop
gs
jg
cmp
pusha
popf
fwait
shlb
pop
or
lods
rcl
loope
arpl
fistps
jg
add
xor
sub
icebp
fildl
stos
in
add
push
shrb
into
pop
sar
jecxz
jmp
clc
ret
cli
je
inc
lock
mov
mov
push
movsl
jmp
inc
mov
test
mov
mov
lds
pop
in
jle
and
mov
inc
sbb
lahf
fisttpl
out
enter
out
jmp
das
addb
and
leave
mov
push
mov
outsb
cmp
fiadds
xchg
lods
test
sbb
pop
mov
int3
test
and
adc
xchg
adc
jmp
movsl
cmp
dec
sbb
add
mov
notl
pop
cmpsb
fistl
jne
pop
add
stos
add
add
inc
and
jmp
or
pop
std
ret
idivl
push
ljmp
inc
inc
dec
add
xrelease
add
adc
xchg
ffreep
jae
push
test
ds
lods
sub
ss
mov
mov
lods
sbb
sahf
adc
pushf
mov
loopne
cmp
cwtl
xchg
imul
pop
aaa
lods
cmp
popa
jp
stc
out
sbb
lds
jge
mov
out
in
inc
pop
icebp
cmpsl
inc
ret
and
rcrl
je
push
xchg
jecxz
mov
or
loop
dec
push
xor
lcall
jg
sbb
into
and
mov
mov
cld
call
rclb
cmpsl
cmp
or
adc
sub
negb
mov
test
cmp
dec
or
lods
sar
pop
mov
aam
mov
mov
rolb
adc
rcrb
jb
leave
xchg
xor
mov
jo
pop
mov
lahf
pop
push
jne
call
clc
cwtl
into
outsl
lds
je
shll
addb
mov
addr16
lea
aam
mov
dec
inc
pop
rolb
push
mov
jbe
lds
scas
repz
pushf
imul
jg
cltd
push
scas
ja
test
pop
movsb
and
push
cmp
int3
outsl
and
mull
negl
mov
pop
insl
cmp
inc
sub
adc
xor
das
mov
pop
jne
sbb
out
jnp
push
sbb
les
and
dec
ss
scas
bt
ret
clc
jb
pushf
ret
jb
pop
in
cmp
push
add
pushf
fildl
cmp
stos
mov
aad
es
cmp
pop
mov
andl
fcom
and
jno
or
jle
outsb
fs
push
gs
ret
sti
lahf
shlb
adc
enter
pop
sbb
arpl
cmp
adc
or
mov
mov
int3
test
cmp
pop
jl
mov
cmp
lods
inc
mov
and
out
mov
push
jb
out
jbe
in
dec
rcrb
pop
out
xchg
xchg
mov
cmpsb
jo
fsub
movsl
in
push
xchg
sbbl
cld
xchg
mov
inc
jnp
out
in
test
out
orl
addr16
dec
clc
imul
scas
inc
jl
out
mov
or
imul
clc
jne
adc
popa
sbb
lahf
dec
in
sub
scas
jo
fcoms
sbb
out
out
gs
jnp
daa
push
xor
roll
jmp
push
jnp
fisubrs
stos
and
cmc
adc
fnsave
pop
mov
mov
gs
sarb
or
sbb
mov
sub
sbb
fs
aas
push
inc
sbb
out
fdivrp
sub
lods
or
popf
out
andl
jp
sti
xor
xchg
xchg
roll
stos
mov
dec
adc
mov
push
mov
mov
out
lret
hlt
int
test
fsubr
cmp
idiv
push
mov
adc
sbb
push
shll
xchg
stos
xorl
sbb
push
mov
cmpsl
out
ret
mov
push
and
add
sti
lods
or
jmp
adc
bound
add
sbb
fdiv
popa
pop
jae
popf
xchg
out
nop
rcrb
dec
sarb
push
xchg
xor
xor
or
lmsw
ds
sub
add
inc
pop
sub
test
mov
push
cltd
push
sahf
mov
pop
mov
xor
cmp
mov
shr
cmpsb
cmp
lret
aam
push
cmp
and
aas
cmp
pop
jg
push
mov
icebp
imul
nop
jl
hlt
mov
xchg
pop
ret
nop
xor
mov
lret
aas
or
leave
or
out
inc
add
jae
cmp
or
sbb
add
jmp
jae
ss
in
add
pop
fisubrs
nop
xchg
inc
xor
mov
dec
aaa
jo
data16
cli
push
cmc
mov
mov
or
adc
test
stos
pop
push
fdivs
lods
lock
xor
fldz
arpl
fcoms
sub
imul
out
add
test
ret
jbe
pop
push
xor
sti
xlat
shlb
cmp
xor
mov
pusha
or
data16
insb
xchg
jns
daa
ds
cmpsb
add
imul
cmp
xchg
fcomi
ret
leave
fists
inc
dec
mov
add
push
xchg
mov
or
mov
push
add
xchg
mov
fiadds
loopne
test
stos
cmp
jg
add
xchg
adc
out
fiaddl
fildl
out
rorb
sbb
cmc
scas
push
clc
testb
clc
jbe
sub
add
adc
cmp
xor
call
cmp
repz
enter
clc
icebp
sahf
fwait
jno
xor
mov
or
ret
inc
mov
fsubrl
mov
jle
rcr
jns
es
das
js
lahf
test
mov
sbb
mov
aaa
sbb
outsb
clc
inc
fmull
dec
pop
push
adc
mov
andl
ja
pop
jp
sbb
je
jnp
stos
stc
lods
shll
push
ds
cmp
js
mov
je
negl
scas
popa
mov
out
adc
inc
mov
xchg
clc
insl
xor
ret
pmaddwd
mov
leave
int
cmp
sti
sbb
and
punpcklbw
test
xchg
jnp
repz
cmpsb
cmp
pop
mov
or
push
jmp
cmpsb
ljmp
xorl
addr16
or
sub
inc
pusha
xlat
mov
aas
jecxz
pop
adc
inc
jbe
pop
rcll
sarb
popf
test
mov
add
or
xchg
jbe
unpcklps
and
hlt
and
js
or
movsl
fnstcw
scas
in
adc
or
movsl
pop
out
push
and
mov
mov
lcall
mov
or
cmc
clc
jmp
cmp
push
ljmp
rclb
lock
repz
sbb
aas
or
and
adc
jle
inc
stos
fisubl
cmp
imul
scas
xor
aaa
pop
iret
mov
int3
pop
push
xchg
ds
mov
and
mov
popa
mov
movsb
add
in
push
cld
cs
repnz
add
xor
rcr
int
add
stos
add
add
or
jo
inc
mov
pop
lea
jg
dec
sbbb
xchg
ljmp
jg
xchg
add
add
stc
stc
cmp
out
negb
inc
int
pop
js
pop
xchg
fstl
lcall
dec
xlat
and
lcall
inc
leave
xchg
xor
push
fwait
jo
mov
push
adc
jg
push
les
lock
aas
push
sbb
dec
std
adc
movsl
sub
adc
mov
cmp
pop
jp,pt
lret
xlat
shrl
int
xor
push
arpl
xor
xchg
sbb
imul
dec
loopne
ret
es
lret
inc
cmp
pop
jns
js
mov
xchg
lcall
dec
pop
mov
fildll
push
out
rorb
lret
jge
loopne
mov
add
rclb
inc
addb
and
inc
cli
sub
inc
mov
stos
aam
dec
jae
inc
xchg
sarb
pop
ret
mov
or
jge
push
mov
les
idivb
jle
mov
aad
shl
test
sbb
ss
cmp
dec
insl
inc
sub
xchg
andl
jmp
pushf
je
stos
push
mov
lret
icebp
inc
insl
xchg
jg
je
xor
cwtl
int3
mov
jp
ds
fwait
ss
sbb
mov
mov
aam
inc
mov
adc
insl
jo
aaa
cmp
mov
ss
mov
loopne
stc
subb
addb
in
mov
and
or
adc
cmpsl
mov
xlat
test
in
repnz
call
inc
xor
jo
insb
sub
sub
dec
movsl
fwait
aas
jno
int
mov
mov
cmp
mov
nop
data16
mov
pop
cmp
ret
xchg
outsl
sarb
mov
sbb
or
inc
adc
ja
subl
push
mov
jno
push
mov
out
jmp
jp
ja
mov
test
and
mov
add
push
mov
aad
dec
sub
pop
outsb
into
aas
or
push
inc
push
xchg
popw
dec
mov
and
add
dec
repz
cmp
andb
add
mov
adcl
lret
sbb
adc
popa
mov
dec
mov
cmpsb
or
out
jl
lock
imul
aaa
daa
out
ficompl
decl
test
int3
sub
fmul
and
mov
imul
add
pushf
movsb
sahf
lcall
cmp
jg,pt
sub
icebp
imul
fs
int
imul
dec
cmc
pushw
inc
mov
fstps
push
add
mov
and
shll
int
and
aam
daa
out
in
lret
inc
or
mov
lods
and
cmp
std
jecxz
adc
out
das
lds
adc
test
jecxz
push
mov
mov
cmp
inc
xor
mov
and
sbb
mov
fistps
addr16
loopne
aas
jmp
xor
insb
pop
xchg
mov
out
insl
mov
nop
add
iret
cmp
jnp
pop
pop
add
mov
ret
push
sbb
add
add
imul
or
mov
out
in
adc
pop
jne
ds
cld
sarb
outsl
arpl
test
pop
fisubs
outsl
shll
jle
mov
lea
mov
cmpsl
sub
inc
pop
push
and
cmp
insl
xor
push
js
test
lret
stc
je
mov
sbb
shl
out
jae
push
and
mov
test
mov
sub
shr
add
sbb
dec
jne
lods
adc
push
jl
loope
stc
sti
mov
xchg
sbbl
repz
mov
pop
ljmp
out
dec
jecxz
nop
incb
lret
addr16
subb
rclb
or
xchg
push
in
and
sbb
sbb
and
js
pop
jle
daa
pop
push
popf
fistpl
insl
add
loopne
xchg
mov
jno
sbb
fdivr
in
shrl
xchg
jb
cmp
inc
jp
dec
pop
and
pop
aaa
addr16
mov
pop
ret
mov
loop
repnz
xchg
pushf
add
lods
or
je
dec
int3
nop
mov
push
lock
xchg
or
xor
pop
insl
jno
popl
loope
cmc
and
add
mov
push
jecxz
mov
xchg
or
xor
mov
push
lret
int3
mov
mov
out
loop
movsb
dec
int
jmp
mov
idivl
adc
les
mov
daa
loop
inc
cmp
jns
push
sub
nop
xor
gs
leave
dec
or
insl
mov
aaa
addl
mov
aaa
dec
nop
cmp
mov
pop
aad
inc
addps
int3
xchg
lcall
out
xchg
loop
mov
jge
ja
and
add
sbb
adc
sti
mov
dec
movsb
stc
outsl
je
xchg
in
cltd
pop
mov
mov
pop
aas
mov
pusha
daa
adc
aaa
icebp
xchg
jge
add
test
jmp
cmp
arpl
aas
pop
mov
call
negl
sbb
inc
add
lret
lock
add
mov
cli
sub
or
jp
dec
stos
push
push
mov
out
sub
les
cmp
lods
and
pop
pop
cmp
sbb
pop
fadds
sarb
pop
cmp
pushf
cmp
std
fcmovnb
and
mull
pop
test
pop
xor
mov
cmp
cmp
push
lock
in
xchg
lds
pop
dec
jl
mov
jnp
iret
mov
xchg
inc
fisttps
push
sub
xor
dec
adc
cli
pop
jnp
aaa
not
roll
inc
lahf
imul
cmpsl
sbb
fs
xchg
mov
fisttpll
push
mov
lret
adc
and
dec
jmp
jl
xchg
rcrl
push
push
xor
jge
daa
pop
adc
cmp
push
out
lahf
mov
rclb
in
inc
int
cmc
dec
sub
add
aaa
iret
and
push
leave
or
mov
dec
push
dec
movsl
aad
and
pop
jg
adc
in
lods
nop
pop
mov
mov
fcomi
and
enter
dec
arpl
mov
in
jl
gs
push
clc
inc
mov
movsl
sub
icebp
enter
ja
icebp
fldcw
pop
das
add
ret
repz
fcmovnb
pop
sbb
cmp
add
stos
add
add
cmp
test
insl
scas
out
cmpsb
adc
call
mov
xchg
pop
pop
xchg
jge
jmp
mov
push
jmp
shl
pop
popa
cltd
push
mov
mov
dec
mov
shrb
shll
lahf
mull
leave
das
stos
dec
inc
xchg
jl
push
adc
mul
ds
ret
adc
ss
mov
push
sbb
lods
negb
sub
jae
or
cli
push
pop
out
loopne
scas
and
repz
shll
inc
mov
loope
jecxz
inc
sahf
mov
enter
pop
dec
push
xchg
push
addr16
sete
and
xchg
adc
mov
loope
aaa
push
je
dec
imul
xorb
insb
cmc
popa
or
push
fsubs
xchg
fcoms
aas
test
rcrl
pop
das
out
movlps
or
shll
ljmp
jnp
mov
sahf
push
icebp
imul
ret
pop
in
pop
test
int3
js
inc
or
push
stos
and
leave
adc
shrb
or
mov
cwtl
or
mov
ficomps
add
hlt
push
es
sub
icebp
rorl
xor
outsb
cmpsl
cld
outsb
mov
int3
jae
adc
cmpsl
addr16
push
lret
daa
ja
adc
pop
cmpsb
imul
insb
rclb
sbb
sbb
cmpsl
fldcw
inc
dec
or
jb
adc
lock
pop
mov
inc
and
adc
popa
inc
movsb
ds
jg
push
addr16
lret
cmp
dec
xor
out
incb
adc
dec
lret
xor
sbb
mov
scas
add
leave
test
sub
out
sti
pop
pop
sbb
shll
dec
pop
sbb
outsl
cmpl
sub
sub
inc
mov
repnz
jae
lret
adcl
in
jnp
loop
xor
add
cmpsl
pushl
popf
loope
fcmovu
cmpsb
leave
push
xor
dec
stc
cmp
inc
sub
nop
mov
inc
dec
jae
mov
lret
iret
roll
jo
jnp
jnp
push
negb
inc
dec
push
adc
movsb
into
jecxz
subb
push
jge
push
sbb
addr16
pop
test
in
divl
pop
xchg
bound
mov
sub
inc
xchg
and
rcrl
jo
mov
xchg
psubsb
ja
lret
xlat
mov
push
jecxz
addr16
daa
jo
and
jae
push
lds
xchg
test
testb
iret
fildll
xor
jecxz
dec
inc
or
jne
loope
test
in
stos
stos
mov
pop
inc
xor
mov
mov
sub
and
mov
ljmp
sbb
push
xlat
and
xchg
inc
jo
sbb
jge
xor
cwtl
cld
mov
sahf
ret
test
movsl
ret
cli
jmp
fldl
test
xor
into
push
rol
imul
repnz
inc
addr16
adc
xchg
aam
lret
jno
mov
jle
jb
xor
insb
imul
cmpb
sbb
adc
inc
add
and
gs
daa
sti
mov
push
adc
jmp
add
push
insb
xchg
adc
enter
add
arpl
fcompl
psrlw
push
xor
pop
cmpsl
cmp
inc
bound
sub
cmp
cmp
pop
jmp
mov
cwtl
mov
dec
icebp
ret
packsswb
addr16
and
out
push
sbb
mov
xchg
popa
cmp
or
jle
mov
push
mov
and
mov
or
daa
fsubl
test
mov
rcrb
add
sub
addb
mov
and
xchg
mov
push
mov
and
and
mov
ja
fbld
jb
stos
ja
cwtl
sub
add
es
inc
adc
mov
imul
mov
jecxz
xchg
ds
rorb
sbbl
jecxz
inc
jp
enter
and
inc
fildl
cmpl
dec
sub
mov
lock
pop
pop
mov
push
std
mov
push
mov
jo
sub
mov
fstps
lea
push
jbe
xor
xchg
sbb
lahf
dec
push
add
xchg
sub
ret
popf
push
adc
sub
cmp
adc
cwtl
dec
bound
xor
fdivr
rcrl
pop
inc
std
push
dec
add
push
aad
xchg
das
xor
or
adc
shll
cmp
out
pop
lahf
mov
outsb
lcall
int3
ret
cli
xchg
sbb
mov
or
jnp
clc
stc
lds
xor
push
out
or
cmpsl
mov
add
or
fistl
jne
gs
pop
lods
dec
cmpsl
insl
repnz
cld
cmpl
adc
sbb
and
rorl
inc
ljmp
insb
fmull
or
and
mov
data16
mov
stos
es
or
xlat
inc
xchg
push
pop
mov
les
scas
pop
mov
mov
sub
jae
push
sub
mov
mov
shr
xchg
sub
leave
pop
cld
int3
mov
pop
out
fnstcw
inc
lret
into
xchg
daa
xchg
lcall
mov
mov
add
xor
or
daa
js
adc
lcall
pop
scas
cmp
push
fstpt
les
imul
and
sbb
push
sub
xor
aaa
lret
lcall
cmp
push
pop
lods
popa
in
jne
mov
sbb
mov
push
out
ljmp
cmp
ss
jo
testb
rcr
sahf
mov
sub
out
cmp
xlat
insl
imul
push
mov
jbe
inc
ljmp
jge
mov
inc
add
inc
push
sarl
lahf
mov
xlat
adc
pop
hlt
pop
xchg
and
mov
ret
imulb
add
std
push
mov
pushf
sbb
icebp
jecxz
testb
mov
sub
fnstsw
mov
fnstenv
popa
cli
push
fwait
or
push
lret
fwait
sub
cwtl
xchg
cld
or
test
push
addr16
lods
sahf
rorb
fisttpll
jo
mov
push
mov
xchg
jg
sub
mov
mov
aas
sysexit
pop
push
xchg
mov
dec
insl
je
add
sub
cwtl
pop
int
ret
sbb
jmp
test
jnp
rol
inc
fnstsw
jge
cltd
fidivrs
or
pop
jo
or
cltd
int3
test
movsl
mov
clc
jmp
gs
add
scas
jno
adc
lds
xchg
aas
rclb
sub
sbb
in
xchg
push
adc
push
mov
xor
inc
repz
cmp
sub
in
pop
lea
call
mov
ss
pop
dec
icebp
jge
ret
rcr
inc
stos
sub
shlb
adc
in
sbb
xor
inc
push
daa
push
jp
popa
bound
outsb
mov
mov
xor
xchg
dec
and
pop
iret
mov
adc
inc
fisttpl
pop
push
mov
xchg
jb
or
je
ret
adc
ret
call
into
imul
je
add
aas
adc
mov
xor
or
adc
and
xor
pusha
into
or
aaa
or
popa
leave
jmp
xor
add
sub
mov
pop
mov
stc
fs
mov
sub
pushf
xchg
inc
shl
mov
sbb
shr
pop
xor
insl
xor
mov
out
pcmpgtb
stc
inc
inc
mov
rcrl
dec
lds
add
outsb
and
sub
xchg
sub
cmp
pop
add
lea
jns
push
iret
push
cmc
mov
int3
ret
lods
mov
push
inc
jae
xchg
rcr
lock
lods
and
dec
int
enter
mov
push
jmp
pop
dec
dec
loopne
pmaddwd
push
fs
ss
insl
lahf
xor
test
std
clc
scas
nop
xor
inc
test
lock
mov
fs
dec
inc
les
cmp
cmp
push
inc
pop
xor
mov
add
mov
pop
jmp
cmc
dec
xchg
repz
ja
ljmp
mov
jp
mov
loop
add
adc
push
lret
js
adc
xchg
aas
out
out
cltd
pop
divps
mov
dec
pop
shlb
cwtl
adc
call
insb
insb
cmp
aas
jmp
in
sbb
cmc
inc
jg
stos
repz
cmpsb
cltd
xor
dec
pop
nop
jl
jle
pop
adc
adc
sahf
sbb
and
xchg
cmc
fadd
aad
lds
lea
addr16
push
push
pop
mov
sahf
jg
add
mov
push
stos
jns
ret
sbb
push
daa
int
addl
dec
xor
sbb
push
xchg
xor
data16
repz
rclb
faddp
stos
push
mov
test
lgs
daa
rorb
inc
loope
testb
ror
enter
adc
repnz
xor
mov
adc
rclb
sub
ret
mov
mov
ss
mov
push
cmp
xor
data16
in
push
adc
mov
cltd
cmp
fstpl
cmp
enter
push
enter
insl
jle
sub
pop
jp
push
xchg
dec
jo
frstor
adcl
add
add
add
add
repz
push
cmp
loop
sbb
sbb
add
repnz
rcll
cmp
shlb
mov
mov
dec
xchg
push
int
and
xchg
adcb
inc
sarl
sbb
mov
icebp
ret
fldt
insb
mov
dec
push
stos
outsl
add
movsl
notb
rcll
data16
jbe
xlat
lods
insb
mov
sub
jmp
lock
filds
daa
not
adc
inc
lds
push
xlat
sub
xchg
lock
shrb
aad
mov
sti
inc
out
dec
clc
push
adc
arpl
sbb
ds
sub
jnp
cltd
mov
and
cmp
fimuls
add
xchg
or
and
xchg
outsl
cmp
enter
xchg
push
loop
mov
mov
inc
xchg
shlb
shll
es
popa
fiaddl
mov
add
cmp
inc
daa
jp
mov
mov
loop
loop
test
leave
lods
rcrl
xchg
jg
mov
cmpsl
push
int
jl
adc
jno
jecxz
push
push
aad
adcb
add
or
jnp
push
lock
jno,pn
in
das
sahf
es
scas
iret
in
roll
ja
inc
test
cmc
fisttps
and
pop
fiaddl
and
dec
push
sub
out
and
es
and
nop
int3
push
add
sti
inc
inc
inc
mov
sarb
dec
pop
sbb
fdivl
lods
inc
scas
jnp
fcmovbe
jg
pop
loop
xlat
insb
adc
pop
insl
ret
pop
iret
outsl
pop
sub
stos
and
movsl
and
mov
cmp
lds
fbstp
in
push
jle
lcall
and
test
jns
shll
dec
call
lods
sub
icebp
mov
std
outsb
sbb
jbe
push
stc
mov
push
cmc
shlb
fadds
lahf
pop
lock
and
inc
xchg
pop
cmpsb
pop
mov
mov
gs
pop
jl
inc
andl
sub
mov
shl
sub
xchg
adc
mov
mov
aas
sbb
push
into
ljmp
leave
out
add
aad
fiaddl
sbb
in
mov
sub
sub
sub
xor
out
mov
stos
adc
sbb
mov
mov
cmpsl
orl
fldl
push
lock
inc
in
aam
sbbl
adc
in
and
nop
cmp
popa
clc
nop
outsl
adc
push
frstor
sub
rorl
cmp
arpl
dec
sbb
jg
xchg
add
dec
inc
outsl
mov
inc
shll
js
popl
mov
xor
inc
add
mov
std
dec
jno
push
xor
daa
out
pop
dec
stc
adc
aad
mov
pop
dec
cs
sbb
test
in
shl
inc
sub
mov
popf
mov
inc
sarl
and
pop
sbb
dec
cwtl
cli
pop
movl
mov
and
dec
or
jg
movl
jb
icebp
aas
or
add
dec
decl
sti
rolw
fmuls
sbb
rcll
cwtl
mov
push
in
ds
xchg
pop
nop
or
scas
push
scas
in
inc
jb
out
out
mov
adc
lcall
push
outsb
inc
imul
pop
cs
and
cli
xor
add
add
add
xchg
lcall
mov
ret
jnp
add
jbe
in
mov
setge
lret
sub
mov
pop
xchg
or
cmpsb
mov
cld
out
cmp
daa
fidivrl
push
xchg
pop
push
enter
lahf
js
iret
int3
jae
mov
push
insl
lock
ror
xchg
mov
stc
cmp
cmp
sub
mov
scas
xlat
cld
popf
ret
mov
mov
in
jb
or
or
lea
sub
sbb
add
push
mov
push
cld
scas
push
cmp
cwtl
ret
push
dec
adc
cmpsb
pop
sbb
lods
lds
jle
insb
int3
jns
ret
pop
leave
insb
jnp
xchg
cwtl
test
js
cld
gs
das
ja
or
daa
xchg
out
push
inc
daa
adc
pop
outsb
and
sub
mov
mov
sbb
loop
std
lcall
inc
inc
sti
arpl
cld
test
cmp
or
inc
cmpsb
sarb
xor
enter
test
jbe
sti
inc
mov
lahf
stos
sub
jg
jg
bnd
std
mov
jae
test
sahf
cmp
lahf
icebp
inc
mov
lock
in
adc
pop
mov
clc
clc
or
pushf
cmp
xlat
add
and
pop
dec
fiaddl
mov
outsl
jmp
mov
jb
gs
mov
inc
leave
fs
mov
and
sub
sti
popf
es
xor
or
jnp
fnstcw
out
sbb
cmc
push
das
xor
jnp
mov
mov
movsl
mov
gs
fsubl
fmul
sbb
mov
adc
pop
adc
sbb
scas
pop
dec
movsl
shrl
adc
xor
rolb
test
lret
sbb
pop
mov
push
fsubrl
cmp
jns
cmp
jmp
icebp
jmp
shlb
and
insb
cmp
aaa
sti
aam
call
sub
add
repnz
mov
out
int3
aad
es
push
aaa
mov
push
jne
mov
mov
fwait
dec
mov
imul
cmc
xchg
sbb
jmp
paddq
inc
icebp
mov
addr16
xor
xor
inc
push
inc
xor
lods
push
mov
mov
mov
stos
ret
ret
pop
lahf
ret
data16
dec
jb
pop
push
jge
mov
and
dec
cmpsl
pop
push
xchg
outsl
inc
sub
pop
lcall
fiadds
aas
popa
shll
xlat
in
mov
xchg
mov
xchg
pop
mov
fiaddl
out
fs
and
push
test
xchg
ds
repz
leave
xor
loopne
pop
jno
sbb
adc
in
adc
aas
adc
bound
jns
cmp
sbb
mov
pushf
out
xchg
xchg
lea
cltd
cmp
pop
mov
stos
mov
popl
sti
sbb
in
or
xchg
pop
dec
add
out
cmp
cmpsl
xchg
push
mov
xor
cmp
xchg
push
inc
lahf
lret
scas
retw
loop
jmp
bound
aam
into
test
push
out
mov
dec
dec
mov
nop
outsl
jo
repz
jle
pop
mov
jne
inc
popa
add
call
jmp
and
pusha
aas
pop
outsb
jg
add
stc
out
mov
fistps
xchg
mov
xor
pop
xchg
in
popa
dec
xchg
push
ficompl
ss
loopne
push
or
in
fcoml
enter
fistps
or
xor
jge
cmpsb
insb
or
js
xor
add
js
popa
andl
push
into
scas
push
inc
mov
jecxz
hlt
add
rolb
add
push
jg
or
in
fwait
push
dec
dec
subps
mov
das
jl
mov
cmp
xor
mov
rolb
lret
pop
xor
push
mov
out
sub
mov
or
dec
xchg
dec
sub
xchg
push
es
push
std
or
lods
cmpsl
jne
mov
sub
add
pop
cmp
adc
pop
and
adc
add
jecxz
mov
mov
int3
sti
aam
hlt
adcl
and
mov
sub
popf
xor
in
mov
adc
lahf
sbb
cli
jge
les
push
push
mov
or
jo
ficoml
out
xchg
add
jae
adc
cmp
adc
scas
fdiv
dec
mov
xor
shll
cwtl
cmp
adc
addb
cld
xchg
jne
push
xor
xlat
add
and
test
xor
pop
jo
cmpsl
stos
push
pop
test
or
setbe
into
mov
cmp
out
and
xchg
lock
andl
and
in
jne
mov
out
lods
lds
pop
dec
fsts
sub
adc
sbb
push
add
sbb
mov
outsb
mov
cmc
adc
xchg
push
lea
jno
push
sbb
push
gs
pmulhw
or
mov
xor
rorl
int
pop
imul
pop
jl
mov
test
daa
sahf
add
stos
adc
outsl
or
call
mov
data16
mov
cmp
xor
sarl
sub
call
or
sub
push
push
sub
mov
inc
out
sbb
mov
lock
rol
push
nop
jno
push
mov
andb
cmp
aad
push
xor
lret
pop
push
nop
sarb
bound
jmp
loopne
pushaw
movsl
shrl
scas
sar
push
mov
pop
push
cmp
cmp
pop
mov
inc
sub
xchg
adc
sub
or
rorb
fistps
mov
rol
sbb
pop
int
addr16
push
movsl
mov
xor
inc
jl
and
mov
add
ffreep
call
and
and
pusha
xchg
mov
pop
pop
mov
or
push
loopne
pop
lret
add
jne
es
mov
in
outsb
ss
imul
sbb
cmp
xorb
sub
sbb
cmp
xchg
dec
cli
xor
lock
mov
adc
xchg
std
fnsave
mov
jns
sub
fs
loop
fisubl
sbb
ret
es
sub
cmp
sbb
scas
dec
cmp
arpl
adc
idivl
mov
mov
roll
outsb
cmp
xchg
pusha
vpsllw
lret
pop
in
sbb
add
dec
test
in
std
pop
rcrb
addl
stos
add
add
cmp
jg
cltd
ret
add
in
imul
lds
sub
test
mov
cmc
fiaddl
mov
jnp
stos
xor
xchg
movl
mov
xor
pusha
jbe
xor
push
js
jge
les
sub
out
arpl
bound
jmp
lods
outsb
mov
lock
dec
dec
rcrb
jno
adc
gs
int
mov
outsb
cld
stc
mov
std
cmpsl
pushf
and
push
cmp
or
pop
ficompl
or
sub
push
imul
inc
or
pop
dec
mov
leave
out
adc
out
fisubrl
lods
loopne
gs
mov
jnp
inc
inc
addr16
int3
add
or
xchg
imul
sbb
xchg
push
push
and
xorl
shlb
mov
call
imul
push
cmp
inc
in
cld
arpl
xor
aam
sub
cs
jns
movsl
cmp
jo
sub
rcr
mov
xor
movsb
mov
add
jg
push
xchg
push
outsb
lds
pop
jmp
or
push
lret
cld
das
clc
ss
mov
fisubrl
mov
in
lcall
frstor
outsb
xchg
jle
jno
xchg
mov
sub
push
xor
fsubr
adc
lods
cmpsl
push
loopne
add
imul
xchg
test
je
and
cwtl
scas
jecxz
lahf
xchg
insb
andl
popf
push
dec
and
outsl
shlb
dec
mov
mov
inc
jmp
and
es
mov
mov
sahf
dec
dec
fdivr
or
icebp
mov
fadds
stos
clc
xchg
stos
dec
xchg
jg
inc
dec
stc
lcall
subb
sahf
daa
mov
or
test
das
cmc
outsl
mov
in
inc
fwait
mull
lods
lahf
std
adc
in
data16
rcrl
inc
push
lcall
dec
sahf
bound
cltd
dec
adc
dec
add
pop
les
xor
bound
cmp
jae
notb
sbb
lods
ja
mov
jecxz
mov
mov
cltd
repnz
int
idivl
jns
cmpsb
xchg
clc
scas
das
lret
push
outsb
mov
shrb
neg
xchg
mov
cmp
jg
stos
jecxz
adc
pop
out
icebp
lret
dec
ret
adc
add
mov
cmpsl
inc
xor
sbb
cmpsl
jae
fwait
repnz
hlt
jecxz
fwait
das
push
ret
add
hlt
lahf
stc
bound
les
ds
push
out
push
aas
out
sahf
mov
sbb
add
rolb
repz
fwait
clc
out
test
or
lods
ds
inc
repz
or
xchg
cmpsl
ret
pop
sahf
pusha
stos
icebp
insl
loop
pmullw
xlat
cltd
jae
ror
cmpl
addr16
adc
lods
js
cld
shr
mov
cmp
shl
ss
out
push
push
shlb
daa
aad
data16
mov
incb
inc
andl
sbb
pop
repz
test
and
jl
jmp
in
push
push
pop
mov
mov
fwait
cmp
add
es
cmpsb
mov
cmc
aaa
pop
out
les
add
dec
or
decl
mov
repnz
mov
in
xor
push
lock
out
insb
idivb
imul
movsb
insl
jbe
or
push
cmp
mov
rclb
jnp
pushf
fwait
push
sbb
mov
stos
fcompl
shlb
add
cmpsb
flds
outsb
pop
inc
punpckhdq
scas
loopne
jg
sbb
test
mov
shlb
out
inc
nop
notb
ljmp
outsl
aas
negb
in
push
and
test
pop
fucomip
jb
dec
inc
nop
arpl
gs
xchg
ret
leave
jmp
mov
mov
into
pusha
stos
loopne
je
mov
inc
jl
test
pop
arpl
stos
gs
leave
or
fmull
sub
ret
lahf
push
imul
cld
aam
mov
icebp
rorl
push
cmc
push
jb
aam
aas
mov
cmp
sbb
and
inc
inc
sub
dec
mov
in
pop
cmp
push
push
mov
cmp
push
dec
sub
inc
add
ret
and
aad
in
into
test
or
out
mov
lahf
hlt
stos
pushf
push
push
and
filds
xor
les
fstps
les
cmpsb
and
mov
stc
iret
ret
xchg
inc
xchg
xlat
sbb
cmc
adc
dec
stos
sub
lret
fists
cli
jmp
cmc
xchg
adc
xor
pop
xchg
sbbl
pop
and
mov
push
lret
or
in
dec
xor
arpl
inc
mov
jmp
cmp
jp
or
xchg
mov
hlt
xor
js
aad
cltd
sub
loopne
insl
sti
addr16
sub
and
pop
push
int3
or
das
inc
xchg
test
jmp
in
push
lock
mov
outsb
push
sub
pop
arpl
into
mov
jnp
fs
cmp
sbb
cmpsb
out
sbb
sti
fistl
fcoml
inc
scas
inc
jo
pop
and
push
mov
push
insb
popa
sbb
test
aam
sub
je
rclb
ja
pop
add
jmp
dec
inc
mov
scas
mov
mov
sub
mov
dec
andb
xchg
testl
add
stc
js
and
rol
stos
push
lock
inc
in
popa
imul
jb
mov
out
sbb
xor
jnp
pop
cs
addb
cld
jns
imul
stc
jecxz
and
push
sbb
xor
pop
pop
inc
popl
mov
or
and
cs
push
notl
dec
aam
inc
xchg
scas
push
cmpsl
icebp
jl
jmp
mov
and
call
push
scas
jne
fwait
sbb
sub
das
cmp
cmpsl
dec
icebp
dec
dec
test
ret
push
xor
pop
fnstsw
sbb
push
rorl
pop
pop
push
in
aas
xchg
xor
cltd
jp
enter
cmp
add
sbb
in
enter
fdivs
mov
inc
jns
popa
pop
cmp
sbbb
out
add
pop
mov
jbe
test
je
mov
sarb
clc
lds
sub
je
sbbl
rolb
lahf
pop
add
fdivrs
out
jbe
outsl
cmp
mulb
add
stos
add
add
outsl
fs
xchg
iret
inc
ja
sbb
xchg
icebp
cltd
xor
fiaddl
arpl
loopne
jo
and
jp
fcomip
imul
jg
jmp
int3
or
out
cmp
mov
mov
mov
nop
sbb
int
inc
mov
or
or
dec
adc
int
aas
ret
je
movsl
inc
in
mov
test
cs
cmp
sub
cmp
outsl
out
jge
push
fldt
clc
pop
adc
dec
xor
in
cmc
into
mov
push
or
pop
adc
cltd
push
ja
leave
int
outsl
pop
jl
dec
sub
mov
adc
push
dec
int
call
test
mov
sbb
lds
sar
repnz
cmp
mov
dec
mov
sub
lock
add
ds
xchg
mov
mov
xchg
cmp
mov
repnz
fdivr
fiaddl
mov
mov
cmp
cltd
mov
pop
push
stos
xchg
dec
bound
loop
popf
xchg
aam
inc
dec
pop
or
testl
data16
into
mov
add
in
fistpll
inc
addr16
mov
xor
xlat
pop
jae
cmp
add
sbb
out
shll
xor
dec
mov
mov
in
jns
adc
lret
lods
inc
outsb
iret
cmp
add
pop
in
mov
jl
sub
aas
flds
mov
clc
je
inc
sub
mul
ret
or
xchg
stos
out
pop
jae
sub
sarb
mov
jae
xchg
xor
add
clc
out
adc
out
cmpsl
pushf
mov
dec
stos
mov
sarb
xchg
test
fs
push
imull
aaa
jle
pop
jge
jnp
mov
jae
fstp
cmp
add
fsubl
xor
fbstp
push
mov
aam
incl
mov
sbb
getsec
sub
pop
sub
or
fiaddl
fldt
aam
fs
andl
push
jmp
push
cmpsl
jae
stos
lods
out
daa
shlb
push
jne
dec
xchg
movsb
add
sub
test
cmp
adc
call
cltd
mov
lret
cmp
loope
xor
rorb
sbb
mov
test
test
xor
jnp
dec
xchg
in
outsb
push
push
jecxz
enter
andb
mov
je
jecxz
push
cwtl
jo
decb
pop
call
jge
sbb
xor
ret
aaa
jl
popf
cmp
ror
in
frstor
inc
pop
adc
and
pop
pop
push
pusha
cmpl
jp
adc
mov
or
and
into
jg
int
je
hlt
mov
push
fsubp
sbb
lret
push
push
jp
aad
mov
out
pusha
sbb
cld
stc
push
push
cmc
bnd
adc
pop
xchg
jne
movsb
mov
jmp
and
push
sbb
and
cwtl
jae
mov
and
shlb
and
and
xor
add
mov
push
push
mov
mov
scas
movsb
cmp
mov
clc
dec
mov
xlat
dec
ret
inc
enter
push
xchg
fldl
fstpl
repnz
outsl
sbb
add
mov
mov
scas
test
mov
push
popa
hlt
movsl
xor
jl
inc
xchg
xchg
pop
sub
jecxz
shll
push
cmpsl
mov
jo
pop
call
jo
lods
pusha
es
cli
mov
inc
cmp
decb
movsl
call
jmp
jno
inc
push
shlb
cmpl
xor
sub
or
adc
bound
push
pop
add
call
pop
xor
shl
inc
daa
test
mov
inc
push
aas
push
jno
mov
test
mov
push
shrl
lds
fwait
icebp
dec
aad
adc
mov
dec
lahf
or
lret
add
sbb
fdivr
nop
lret
jo
jbe
addr16
dec
sbb
movsb
xchg
cld
push
popa
jg
sti
and
jmp
xor
cmp
mov
lahf
repz
xor
test
icebp
add
in
cmp
into
mov
and
and
shrb
scas
push
sti
rcr
pusha
movb
das
inc
inc
jg
mov
fnstsw
pusha
jl
cmp
sub
mov
test
out
mov
shlb
adc
sub
xorb
js
daa
xlat
cmpsb
mov
pop
xchg
nop
aas
stos
add
add
dec
dec
pop
out
pushf
scas
sbb
out
popa
inc
ss
stos
andl
scas
or
and
lret
adc
adc
xchg
out
fcmovne
arpl
insl
arpl
push
gs
jnp
and
test
insl
add
xchg
inc
sbb
sub
pop
xorl
orl
cwtl
inc
int3
fmul
xor
mov
leave
andw
mov
jns
inc
xor
aas
inc
and
cwtl
rcrl
leave
cli
xor
push
fdivrl
mov
pusha
and
repz
sub
pop
sub
dec
adc
cmpsl
xor
jne
not
mov
and
inc
adc
mov
inc
dec
rorl
jecxz
mov
mov
xor
mov
rolb
in
cmp
pop
and
cmp
fisubrl
xlat
mov
sar
cld
sub
pop
aad
pop
call
and
aad
push
add
lahf
pop
mov
dec
sub
and
xor
les
in
push
sub
imul
imul
cli
lods
rolb
loopne
pop
insb
mov
lret
push
sbb
adc
test
bnd
iret
lods
cltd
repz
inc
mov
xor
mulb
cmc
jne
stos
test
inc
jb
push
in
fwait
in
mov
iret
aad
push
mov
push
mov
adc
jb
pusha
fstp
pushf
pop
mov
add
xchg
mov
loope
mov
mov
mov
nop
add
bound
pop
xchg
xlat
push
jg
jne,pt
xchg
xor
lds
xchg
aaa
iret
ds
sar
loopne
mov
dec
ret
lahf
adc
push
sarl
pop
jmp
jb
pop
rcl
imul
filds
add
push
stc
imul
xlat
mov
fs
mov
mov
pop
je
jp
adc
push
add
mov
movsb
ljmp
test
ds
dec
mov
popa
dec
push
sbb
xchg
add
stos
add
add
cmp
jns
or
adc
mov
roll
xor
cld
push
cmp
mov
pusha
ret
pop
pop
into
inc
scas
outsb
inc
mov
popa
cs
loope
mov
sub
push
data16
jno
push
mov
pop
icebp
add
lds
mov
cli
cmp
test
cmp
inc
pop
sub
cmp
push
mov
roll
push
ret
sti
mov
xchg
call
mov
in
out
lahf
jg
inc
fwait
mov
mov
mov
sub
cmp
pop
mov
int3
mov
or
andb
cwtl
outsl
ror
and
hlt
mov
mov
pop
arpl
cmp
movsb
mov
mov
cmp
lret
mov
mov
push
jns
xlat
aam
dec
pop
cmpsb
mov
pusha
jecxz
add
fadds
pop
dec
insl
shl
or
sbb
mov
mov
pushf
xchg
or
les
jecxz
loop
addb
insl
push
mov
fwait
sbb
pop
stos
dec
enter
shll
pop
push
cmp
mov
xchg
or
xchg
sbb
int
xor
inc
ljmp
rcl
dec
stos
jp
loop
sub
mov
movsl
xchg
popa
imul
cld
xor
lret
or
mov
add
je
push
js
push
bound
cmp
daa
cmp
roll
or
pop
add
inc
pop
ret
mov
xchg
xor
bnd
or
loopne
je
mov
inc
lock
dec
fcmovb
push
enter
pop
mov
sbb
lock
scas
xor
leave
mov
mov
xor
ja
sbb
pop
outsb
cmc
pusha
leave
and
jns
je
sbb
pop
cwtl
push
xchg
divl
lret
xlat
and
jmp
sub
ret
repz
adc
and
bound
outsl
in
lods
out
movsb
ret
cmpsb
repz
cltd
js
pop
ljmp
sbb
xlat
jno
aad
in
xlat
pop
inc
andb
mov
lods
adc
in
lods
sub
pop
cld
in
ja
das
add
mov
mov
std
mov
sbb
fsubrl
aad
mov
inc
movsl
fcmove
adc
inc
xchg
rcr
push
push
inc
and
mov
xchg
or
lahf
rorb
icebp
mov
loop
loopne
mov
sub
adc
stos
xor
bound
cmp
cltd
in
or
add
sbb
ror
outsb
mov
jle
cmpsb
or
mov
lea
mov
mov
cmp
cmp
push
insl
push
cwtl
jbe
mov
dec
inc
shrb
aas
xchg
adc
pop
adc
std
adc
jns
pop
outsb
mov
mov
repnz
mov
jg
xlat
loop
mov
mov
shl
das
fsts
orl
out
xor
or
sub
pop
or
arpl
mov
ss
lods
jnp
in
xor
out
inc
push
aaa
addr16
mov
cltd
scas
push
js
arpl
cmp
fnstsw
std
ljmp
cmc
pop
loopne
insl
push
cmpsb
xor
movsl
add
xlat
and
aaa
std
out
and
cld
push
and
add
stos
add
add
leave
ljmp
xchg
in
sahf
lret
cmp
arpl
add
and
lahf
cmp
incb
add
push
insb
mov
int3
clc
or
cmp
lds
push
push
std
jne
inc
shl
cld
popf
push
out
fsub
mov
cmp
scas
out
dec
add
test
popf
inc
lcall
daa
inc
loopne
push
scas
lock
push
mov
xchg
xchg
dec
jecxz
inc
adc
cwtl
and
movsb
xchg
enter
mov
mov
and
test
and
js
roll
inc
mov
add
fistpl
jb
movsb
movsbl
jl
push
aad
pop
jmp
lods
insb
test
jns
fsubl
mov
and
out
xchg
xor
call
sahf
jl
add
fistps
sub
dec
push
cmp
getsec
xor
cld
pop
push
aam
movsb
cs
mov
inc
push
xchg
daa
sub
mov
add
std
pusha
fsubrs
shlb
bound
bound
mov
in
test
xchg
pushf
push
xchg
and
sub
aam
fwait
mov
dec
or
sbb
xchg
loop
adc
inc
cld
fdiv
popa
mov
aam
sbb
enter
cmpsl
jno
fisubrl
and
mov
aad
mov
pop
inc
and
jnp
sub
lock
sub
leave
xchg
sbb
lret
aaa
pop
bound
xchg
shl
enter
mov
in
cltd
in
scas
pop
repz
fldcw
pop
inc
push
or
mov
pushf
in
jae
sub
stos
cmc
lret
sub
mov
sbb
insb
out
bound
dec
or
xor
fldenv
lret
sbb
into
push
shrl
adc
call
dec
mov
push
jecxz
sbb
aad
lods
mov
bnd
fnstsw
shl
pop
stc
adc
jmp
dec
aad
mov
loopne
gs
ret
cmp
imul
js
lcall
push
push
test
in
lods
ficoms
push
dec
leave
repnz
or
movsb
mov
xchg
jae
pop
or
negl
ror
pop
mov
dec
hlt
iret
xchg
cmc
das
pop
jno
enter
pop
or
xchg
lds
dec
je
dec
shll
aad
xchg
loopne
sbb
adc
pop
out
xlat
mov
mov
jmp
cmp
lret
inc
xlat
adc
pop
call
mov
lds
mov
es
aad
sub
or
jmp
insl
sarl
jp
js
push
out
jbe
sbb
addr16
jno
ret
js
sbb
pop
add
insl
pop
mov
ret
repz
xchg
add
xchg
push
mov
movsl
lret
xchg
cmpb
xorb
jp
inc
jno
andl
repz
repz
jmp
add
shll
sub
inc
inc
pop
gs
push
inc
inc
xchg
rolb
pop
faddl
xor
lods
and
jne
xlat
cmpsb
mov
sub
sarb
shrl
icebp
push
push
int3
adc
and
xor
outsb
addr16
add
jbe
jle
lds
scas
outsb
roll
inc
dec
nop
int3
popf
fistps
lea
jmp
push
sbb
add
add
repnz
bound
imul
jbe
mov
and
idivb
aas
xchg
lds
jmp
xchg
loope
scas
imul
lods
cmc
das
rcll
inc
jb
fs
mov
or
mov
les
push
in
loope
ljmp
or
add
out
cmp
lock
pop
xchg
lea
loope
data16
dec
lods
repz
xchg
jnp
scas
iret
add
sbb
in
fmuls
push
shlb
push
popa
in
adc
xchg
aam
test
or
je
mov
mov
inc
xchg
daa
adc
and
aas
pop
inc
lock
mov
add
ljmp
pop
pop
adc
scas
sub
fs
js
movsb
stc
push
fisttpl
in
sbb
mov
add
mov
clc
out
rorl
push
push
pop
cwtl
subl
sbb
cltd
xchg
push
nop
add
adcl
add
loope
or
movsl
xor
mov
sub
and
movsl
mov
push
insb
rcr
sub
popf
loopne
scas
xchg
adc
xor
or
mov
cs
decb
iret
aaa
inc
dec
cld
gs
hlt
sbb
test
push
in
or
dec
enter
je
fldenv
and
cwtl
xor
ja
jl
fdivs
push
sarl
aam
notl
push
add
cmpl
inc
repz
sbb
nop
stos
pop
adc
dec
aam
shll
stos
aaa
jle
daa
mov
outsb
adc
push
sbb
push
imul
daa
in
sahf
daa
xchg
loop
push
push
test
cwtl
jbe
push
mov
outsl
insb
cmp
xadd
cmpl
push
repz
jmp
adc
bound
cmpb
dec
push
sub
pop
pop
popf
cmp
add
and
in
je
fdivrp
sbb
lret
enter
mov
jb
mov
or
sbb
enter
ret
ret
out
test
int
incl
adc
or
mov
int3
xchg
and
and
cmc
sub
dec
and
push
emms
sub
leave
jno
in
mov
lea
sbb
cmp
popa
jle
test
lret
or
mov
xor
test
cmpsl
inc
sub
or
or
jp
push
adc
or
clc
pop
and
mov
inc
or
add
mov
add
stos
jns
enter
pop
push
mov
mov
loope
ret
adc
push
inc
mov
pop
sbb
mov
bound
mov
cmp
movsb
add
shrl
jo
and
test
pop
and
ss
dec
aad
mov
mov
cmp
cld
mov
cld
adc
cmc
jbe
cmpsl
add
pop
lret
mov
in
repnz
add
mov
out
xorb
cli
xchg
adc
outsb
xchg
in
xchg
mov
push
xor
push
fdiv
mov
aaa
arpl
cli
pop
es
push
fidivs
jb
ss
cwtl
add
push
movsl
push
sub
mov
adc
xchg
sbb
insl
orl
rolb
imul
mov
dec
clc
add
andl
add
data16
mov
pop
mov
cmc
mov
add
stos
add
add
pusha
jmp
mov
cmp
ljmp
dec
sbb
decb
mov
xor
and
jae
cmp
mov
push
xorb
adc
test
cmp
jmp
das
mov
repz
orb
fbld
mov
xor
pop
ret
psllw
push
and
cltd
cmp
ret
cmp
mov
mov
mov
xchg
jmp
push
movsl
jge
dec
mov
sbb
pop
jmp
xlat
and
aam
inc
mov
popf
push
ds
pop
stos
in
dec
ds
dec
xor
fcompl
pop
adc
mov
scas
lea
inc
inc
sbbb
mov
push
sub
xchg
bound
call
dec
push
lds
or
in
mov
xchg
xor
adc
sub
lea
shrb
mov
popa
aas
cwtl
lea
les
movsb
test
daa
mov
and
adc
mov
cmc
insl
movsl
pop
sbb
rcll
xchg
pop
aam
aam
insl
aad
add
pop
dec
inc
xchg
jg
push
ja
and
add
inc
or
mov
rorb
inc
sbb
add
push
fwait
outsl
xor
in
mov
lahf
loopne
ret
inc
xorb
dec
xchg
rcl
inc
pop
sbb
adc
and
addr16
mov
pop
adc
fbld
push
mov
and
sub
out
push
test
ffreep
push
stc
cltd
loop
inc
aaa
sub
in
xchg
decb
je
mov
sub
repz
dec
sbb
mov
jnp
inc
pop
dec
lock
test
sub
lods
jge
aad
mov
stos
rolb
pop
addb
iret
and
adc
pop
ffree
mov
into
dec
dec
and
cmp
notl
mov
or
bound
sbb
das
sub
pop
jmp
sbb
xchg
jge
cmpsl
hlt
add
cltd
push
lds
xchg
mov
add
sub
sub
fnstsw
es
insb
mov
cld
es
imulb
enter
in
or
dec
fcmovnb
ljmp
dec
loope
ss
xor
push
bswap
push
mov
ret
fsubs
cld
ja
pop
loop
movsl
mov
mov
jno
xlat
dec
out
das
sbb
jmp
call
jp
rcll
in
pop
lcall
test
cmpsb
push
pop
mov
sub
mov
out
cld
pop
mov
repnz
jno
fwait
mov
cwtl
xor
test
rclb
hlt
dec
cli
mov
fidivs
cltd
and
std
cmp
xor
sbb
add
je
jns
rcll
xchg
push
seto
cltd
hlt
lcall
aas
out
pop
mov
in
inc
and
mov
adc
jmp
scas
mov
nop
addr16
ja
fsubl
rorb
adc
adc
sub
daa
cmp
movsb
lret
int
push
lock
mov
les
out
stos
in
inc
dec
add
int3
inc
fdivrp
out
ja
or
pop
les
add
stos
add
add
mov
in
call
xor
je
or
mov
inc
xchg
inc
sub
fidivl
xchg
test
inc
mov
lret
outsl
push
negb
hlt
fnstsw
push
idiv
cltd
les
push
pop
mov
push
or
jp
clc
pop
in
xorb
mov
sahf
jp
jecxz
mov
xor
es
pop
jnp
sarb
js
shr
push
pop
cmpb
cmp
sarl
mov
cmp
imul
sbb
lret
fstpt
mov
mov
sbb
xchg
out
shl
enter
push
inc
mov
push
or
and
andb
xchg
and
add
sub
sub
stc
mov
fists
add
sub
sbbl
stc
mov
mov
jnp
dec
insl
jnp
jle
xchg
sahf
jle
mov
jl
and
mov
dec
sti
fwait
sub
cli
ret
test
sub
arpl
xchg
adc
pop
xchg
jns
push
aam
jae
call
adc
sub
dec
pop
cmpsl
lds
mov
xor
mov
mov
movsl
pusha
mov
xchg
cmp
movsb
out
mov
and
pop
sbb
or
dec
ja
ja
orb
jecxz
push
ja
insb
enter
push
xchg
jmp
loopne
lcall
andl
mov
aas
xor
cwtl
rorb
mov
rclb
imul
push
xor
xchg
push
mov
mov
test
add
lret
jb
and
inc
lret
movsl
gs
movq
cmp
test
and
les
mov
outsl
mov
push
xchg
cwtl
loope
xor
inc
lea
inc
popf
push
mov
jb
les
cmpl
pop
adc
push
sbb
sub
pop
imul
mov
adc
mov
mov
leave
aaa
dec
adc
adc
int
repz
fidivl
clc
pop
adc
or
xor
outsl
and
insb
out
adcl
cltd
inc
mov
ficomps
inc
outsl
sbb
test
jge
push
clc
loop
je
mov
inc
pop
out
xlat
push
div
sbb
cli
mov
mov
cmp
shlb
cmp
sbb
jge
cmp
dec
subb
add
test
fldenv
inc
or
jbe
jmp
jbe
inc
or
xchg
mov
aad
in
std
mov
insl
sbb
inc
shlb
sub
call
ret
push
inc
mov
push
aas
jmp
adc
incl
sub
jge
add
push
pop
and
sbb
push
add
inc
adc
es
mov
lret
mov
ja
sti
jbe
stos
push
pop
xor
scas
fs
scas
iret
scas
xchg
jns
pop
adc
dec
push
loop
xchg
mov
inc
dec
xor
mov
sbb
xchg
lea
mov
jp
dec
iret
mov
push
sbb
mov
lods
loope
cli
mov
mov
mov
push
push
mov
pop
pushf
mov
ret
inc
push
cmp
movsb
cmp
ret
lods
inc
dec
mov
loope
iret
xchg
movb
add
add
cltd
mov
xor
insl
sub
add
insl
adc
pushf
dec
out
dec
fldl
cmpsl
mov
sub
lahf
xchg
es
or
or
push
pop
and
xor
pusha
sub
je
fidivl
xchg
xchg
and
sub
push
out
lcall
inc
js
push
xor
cwtl
sbb
jae
adc
pop
xor
jno
out
movsb
mov
icebp
fcmovu
xlat
nop
cltd
ret
and
add
js
cmp
xlat
ljmp
mov
dec
push
or
jg
cmc
sti
fists
popa
mov
inc
icebp
lods
xchg
cltd
pop
xchg
scas
pop
pop
dec
and
xchg
xchg
push
jo
aas
pop
fmulp
notl
xchg
mov
mov
cmc
psraw
or
jmp
mov
push
dec
push
and
lret
outsb
jbe
pop
xchg
sub
fmull
adc
pop
xchg
and
and
jmp
mov
fidivrs
dec
push
xchg
repnz
sbb
cltd
ja
test
aaa
xchg
faddl
dec
leave
stos
mov
jg
fdivr
aaa
sbb
sbb
and
jns
cld
lret
shrl
ret
int3
xchg
fs
push
dec
push
push
daa
into
or
xor
je
scas
in
jns
mov
sub
lret
mov
fnstenv
cmpsl
pop
inc
adc
xor
cltd
mov
pop
xchg
mov
add
and
pop
push
lret
cld
fcoml
pop
pop
jns
jbe
fisubrl
lret
or
cmp
mov
fidivs
jle
mov
flds
push
and
ja
mov
jmp
jl
clc
rcr
es
mov
mov
scas
mov
sahf
daa
dec
cmp
aas
dec
mov
mov
cmp
adc
jb
mov
xor
sbbl
sub
xlat
call
leave
aaa
pop
hlt
push
cmp
outsb
stos
jge
push
cld
dec
mov
sti
scas
jns
sbb
and
icebp
sti
add
push
stc
fimull
sbb
xchg
sti
sub
shr
lods
add
cmp
xchg
jmp
fistpll
xor
sbb
sbb
test
test
add
xor
fcompl
mov
mov
mov
pop
das
cli
fnstsw
scas
or
mov
in
mov
in
dec
das
add
or
rcr
scas
inc
or
mov
lahf
xchg
shll
inc
mov
clc
data16
push
or
inc
fcmovne
pop
jg
push
and
push
pop
lds
inc
ljmp
dec
push
xor
push
aas
cmpsl
lds
mov
dec
add
repz
and
dec
addr16
std
mov
adc
imul
push
ret
test
mov
sti
in
imul
pop
mov
jl
shll
xchg
mov
aaa
jno
sub
pop
mov
out
mov
ja
push
fstpl
xor
sub
stos
and
push
repz
fsub
sbb
push
int3
sub
lahf
adc
lahf
add
subl
ret
and
enter
das
cmp
add
mov
mov
fsubrp
mov
mov
add
stos
add
add
scas
inc
out
jle
cmp
adc
sbb
pop
ret
ret
mov
pop
ret
jp
xor
cmpsb
inc
movsb
rol
inc
cltd
add
pushf
in
push
cld
loopne
cmpsl
jo
out
adc
cmp
mov
lret
and
bound
aad
pop
xor
cwtl
mov
sub
fdiv
or
testb
fnstsw
or
pop
jmp
cmp
xchg
sahf
mov
mov
in
and
lods
sbb
inc
cmp
or
mov
adc
pop
xor
or
imul
pop
fwait
or
xor
imul
xor
push
divl
mov
fs
mov
dec
jge
imul
lret
or
dec
mov
push
add
or
lds
push
xchg
sub
mov
mov
pop
repz
loopne
je
cmpsb
aam
inc
out
jns
test
out
mov
jae
cmpsl
int
shll
mov
dec
popa
pop
xchg
das
and
fsubrl
stc
loopne
pop
lret
mov
adc
in
push
cmp
pop
int
les
cmp
mov
es
int3
mov
xor
adc
push
pusha
cmpsl
cs
hlt
daa
aad
inc
xor
cmpsl
enter
jno
in
add
jnp
pop
repz
jecxz
jmp
adc
cli
xor
fildll
xchg
nop
fwait
xchg
adc
mov
jp
sbb
push
out
inc
sahf
mov
les
add
ret
dec
inc
rclb
jne
aaa
vrsqrtss
jbe
lods
push
imul
adc
or
in
push
out
into
data16
xchg
dec
pushl
sub
fiadds
aam
xchg
ror
ss
xor
mov
xor
push
test
cmp
mov
sarb
call
or
push
loope
xchg
mov
push
ret
out
lret
push
scas
in
push
test
xchg
adc
pusha
scas
loope
mov
ljmp
adc
cmpsl
cmp
push
pop
add
add
dec
push
push
orl
lods
xchg
jmp
pop
add
fidivl
and
out
dec
insl
movsl
inc
movsb
sbb
dec
and
pushf
mov
outsl
add
into
je
add
mov
inc
mov
xlat
push
jle
or
sub
lret
sbb
jp
andb
cmpsl
clc
ss
das
in
mov
or
aad
insb
xchg
mov
imulb
imul
sub
frstor
push
divl
fisttpll
popa
rcll
ljmp
out
sbb
dec
dec
sahf
aaa
add
ret
or
andb
imul
jmp
cld
mov
adcl
fisttpll
pop
and
mov
lods
and
ret
call
sub
test
dec
xor
xchg
cs
or
mov
sbb
in
sti
sub
test
jp
add
pop
arpl
mov
pushf
popa
cmpsl
mov
insb
fbld
mov
lods
add
push
cmp
sbb
sbb
adc
hlt
int3
test
rcrb
mov
jg
test
mov
adc
mov
mov
add
cli
dec
push
ret
mov
jge
cmp
in
xchg
add
adc
popf
in
sub
fs
imul
lahf
jne
dec
add
push
mov
es
arpl
dec
jmp
call
int3
ja
xchg
jge
cmpb
push
sbb
inc
xor
mov
adc
out
mov
call
rolb
cmp
shll
imul
mov
mov
pusha
lods
sub
int3
inc
sbb
out
dec
pop
nop
or
pop
and
adc
fisubl
addb
repz
lret
fstpl
push
mov
movl
mov
outsb
sub
call
sarb
pusha
sbb
mov
jo
pop
add
dec
ds
adc
cmpsb
dec
aaa
fldl
inc
push
lahf
mov
sub
setge
xor
ja
dec
mov
fiadds
sahf
pusha
fstps
xchg
or
lret
out
in
in
sti
in
roll
inc
daa
movsb
xor
mov
rcr
add
loope
sbb
jb
arpl
jg
xor
test
clc
xor
pusha
into
sbb
xchg
outsl
fcmovnbe
cmpl
xor
pop
cmc
pop
data16
dec
or
jl
sbb
jnp
pop
mov
inc
icebp
pop
sbb
jbe
mov
stos
data16
mov
dec
sbb
ja
lret
sub
popa
mov
inc
sbb
cmpsb
push
sub
push
mov
pop
imul
cmp
jno
cli
pop
jnp
jnp
sbb
out
cmp
push
mov
pop
loope
xchg
jge
out
mov
testl
mov
in
jl
lds
xchg
jmp
loope
arpl
leave
scas
clc
outsl
imul
mov
fnsave
xchg
enter
movups
mov
mov
push
mov
lods
das
xchg
clc
int3
jb
and
or
xchg
pop
add
in
lret
cmp
mov
jnp
popa
aad
out
mov
lahf
loop
dec
pusha
loopne
mov
xchg
sub
in
movsb
aas
add
out
or
adc
sub
loopne
mov
dec
repz
dec
je,pt
mov
rolb
jge
movntps
xor
add
push
outsl
mov
fstps
inc
mov
std
mov
push
sub
mov
inc
fisubrs
hlt
jmp
jns
jns
pop
repz
test
stc
mov
out
mov
add
dec
je
out
and
push
mov
xchg
out
fldenv
lret
add
jo
or
test
push
sub
xor
out
imull
mov
cmp
scas
push
jno
add
insb
jle
shl
adc
in
xor
movsb
push
in
sahf
insl
and
addr16
and
out
xchg
inc
loopne
pop
pushf
pop
cmc
and
inc
cmp
dec
push
xlat
popf
push
xchg
das
ds
ljmp
xor
ljmp
mov
adc
popa
into
dec
test
mov
dec
cs
stos
divb
push
ds
xchg
in
shl
mov
aad
pusha
insl
ljmp
shr
mov
inc
push
mov
add
sbb
in
jmp
lahf
jle
stos
xchg
sbb
add
add
mov
sub
and
loope
mov
fadd
call
xchg
loopne
jle
and
outsb
add
shlb
icebp
and
lods
or
sub
add
push
mov
pusha
cmp
and
outsl
sbb
inc
inc
sub
or
xor
mov
out
inc
adc
mulb
mov
insl
jns
es
cmp
add
jge
adc
movsl
mov
adc
or
sbb
or
cli
ljmp
mov
cs
fisttpll
mov
out
mov
jbe
iret
ret
adc
in
out
xchg
or
sbb
pop
xchg
sahf
addr16
ret
or
mov
and
sub
js
std
loopne
out
push
mov
mov
add
pop
jl
or
test
loop
lahf
cltd
aad
xchg
rcrb
leave
jno
fsubs
mov
fstpl
inc
or
mov
xchg
leave
dec
fwait
xor
and
fistps
mov
xlat
jmp
ret
or
aam
xor
aad
mov
outsl
push
xor
call
jmp
les
stc
fucomp
xor
push
mov
in
dec
pushf
jl
out
pop
mov
jae
movsl
lret
sbb
int
movsb
cmc
fdivrs
mov
cmc
inc
in
dec
add
or
lods
jno
leave
nop
cmpb
les
dec
test
ret
sahf
aam
popa
in
adc
cmovl
pop
lds
cmp
push
push
xchg
or
or
jbe
jp
push
mov
insb
or
aam
push
ja
int
or
lea
xchg
sti
or
loop
lret
stc
push
jnp
sbb
push
sub
adc
xor
repz
daa
pop
adc
ljmp
dec
xor
dec
mov
mov
adc
cmpsb
push
ds
sub
idivl
movsl
add
mov
add
ljmp
out
into
imul
dec
aad
and
jecxz
push
repz
jmp
mov
dec
push
xchg
pop
fisubs
fistpl
into
or
scas
xor
xor
jl
dec
iret
outsl
movsb
add
into
lahf
mov
aas
sbb
mov
sub
fisttpll
sahf
in
pop
and
inc
mov
in
lock
pop
mov
pop
mov
out
cmp
sbb
inc
pop
cmpsb
aad
loope
mov
daa
mov
jno
aam
sub
ljmp
xchg
cld
and
or
lods
sbb
popa
cmpsl
sbb
dec
jae
cmc
add
xchg
sub
xor
dec
pop
jo
push
inc
cmpsb
sbb
fcoms
jne
xchg
mov
xor
cmp
push
mov
mov
lea
inc
fdivl
andb
mov
mov
add
dec
cwtl
cmp
dec
xchg
test
adc
cmp
cmp
sub
sahf
cmc
es
bound
stc
pop
pop
ja
cltd
sti
fs
jnp
xor
pop
push
inc
mov
popf
cltd
add
out
pop
mov
pop
int
js
add
jns
jbe
xchg
mov
pop
mov
and
repz
lock
cmpsb
dec
xchg
aaa
in
lret
mov
add
mov
decl
mov
adc
add
stos
add
add
and
stos
mov
jp
les
sub
inc
mov
in
or
pop
mov
mov
jg
cmpsb
test
sbb
mov
fidivl
stc
subb
jl
repnz
jns
mov
inc
dec
mov
js
xor
int
push
and
jno
mov
negb
call
adc
adc
popa
std
inc
adc
lret
rep
stos
loop
xchg
mov
cmpsb
xor
jns
mov
cwtl
mov
jle
repz
ja
xchg
mov
in
test
adc
decb
pop
xchg
mov
js
push
xchg
inc
push
mov
and
lret
add
les
in
xchg
sub
cmp
hlt
xor
outsl
jbe
jae
loopne
mov
cmp
je
mov
jge
and
test
adc
addb
addr16
xchg
fildll
mov
mov
pop
nop
inc
add
dec
lock
push
mov
xchg
inc
pop
xorb
add
push
insb
mov
mov
inc
insl
fs
addr16
sbb
popf
mov
ljmp
sub
dec
adc
adc
das
cmpsl
pop
insb
leave
rclb
inc
inc
aaa
xchg
rorb
fsubrl
xchg
dec
or
mov
sub
inc
pop
pop
lret
xlat
cltd
dec
ss
outsb
arpl
es
imul
jbe
out
imul
int3
jmp
xor
sbb
int3
aas
enter
fidivl
aaa
aad
mov
pop
dec
imul
out
cwtl
cmp
mov
xchg
rcll
or
xchg
cli
xlat
lods
xchg
scas
es
mov
int3
mov
add
xchg
cld
adc
ja
lret
lret
pop
pop
gs
imul
sub
mov
jp
sbb
cwtl
leave
ss
je
xchg
jle
push
out
adc
jle
jl
ficomps
mov
fcmovbe
mov
mov
and
add
les
notb
popf
sub
dec
and
nop
movb
sbb
cwtl
mov
push
jb
sub
dec
push
push
add
inc
data16
stc
repz
inc
hlt
sbb
add
stos
inc
rcrb
fnsave
cmp
xchg
fwait
xor
push
int
insl
scas
sub
mov
out
dec
fsubrl
dec
mov
pop
nop
push
push
in
push
mov
or
popw
nop
xchg
test
aaa
mov
fbstp
inc
lods
pushf
rcrl
aam
fcompl
scas
inc
sti
das
hlt
dec
fisubrl
inc
mov
sub
les
adc
sub
push
arpl
pop
dec
mov
or
xor
leave
popa
mov
fstp
jb
mov
mov
icebp
mov
out
mov
imul
sahf
push
xor
pop
sub
mov
test
addb
mov
jnp
mov
xchg
sbb
addl
mov
sub
mov
leave
inc
mov
data16
inc
fdivs
mov
cltd
js
fsubrp
or
xchg
jb
mov
mov
push
mov
mov
pop
popa
cli
push
jg
fbld
jmp
out
add
lret
xorb
icebp
lret
aam
imul
dec
out
jae
add
stos
add
add
add
add
sbb
and
mov
rol
fisttps
rcr
leave
and
jbe
popf
movsb
dec
aad
add
pop
fistpll
negl
pop
push
ss
xchg
pushf
in
js
jae
bound
or
jo
rorl
rclb
mov
repnz
stc
jae
outsb
call
imul
leave
pop
xchg
pop
in
or
xchg
gs
fucomi
pop
ffreep
lods
jo
repnz
inc
sub
pushl
rorl
mov
inc
fdivr
cs
pop
mov
sub
mov
cmp
insb
push
cmp
and
sub
mov
cwtl
xchg
loopne
nop
mov
xor
add
add
fwait
inc
cmpsb
out
jnp
push
pushf
rolb
jmp
in
decl
fistpll
int3
cmpsb
aad
dec
dec
das
jno
xchg
xor
sbb
push
xlat
insb
icebp
mov
enter
imul
pop
clc
insl
add
xlat
jp
out
cmp
xor
dec
loop
and
jno
ror
es
xor
sub
lock
sub
mov
sti
cmp
in
dec
mov
inc
xchg
sbb
jl
jmp
ds
inc
stc
inc
out
lcall
mov
call
incl
jns
inc
inc
xchg
cwtl
xchg
fwait
and
jb
xchg
sub
fisttpl
shrl
jnp
add
arpl
xchg
mov
push
lds
inc
lcall
xchg
mov
enter
pop
fnstsw
ja
pop
hlt
fmull
subl
jp
call
in
mov
mov
aad
mov
repnz
mov
loope
in
fidivrl
inc
lods
sbb
nop
pop
je
pop
loopne
ja
adc
int3
add
int
mov
stos
scas
lods
jle
add
cmp
mov
pop
sti
ja
xchg
fdivrs
xchg
jg
scas
sub
jp
jae
ds
xor
push
popf
fwait
lds
ds
add
fcomps
sbb
or
inc
and
mov
jle
mov
dec
sbb
xchg
sbb
hlt
ja
jae
xchg
shll
out
mov
imul
cmpsb
pushf
sub
imul
in
clc
lahf
push
dec
js
lods
scas
pop
xchg
sbb
xchg
sbb
mov
xor
pusha
push
leave
outsb
ss
shl
dec
sub
pushf
ljmp
test
loope
xchg
cli
pop
and
xchg
subb
adc
cli
adc
repnz
jge
bound
pop
add
mov
inc
jl
and
mov
and
fidivl
lods
jmp
fldl
rorl
mov
in
xor
lret
adc
pusha
xor
mov
and
add
xchg
mov
jmp
dec
xlat
clc
pushf
jp
dec
dec
insl
mov
loop
add
jp
movsl
movsl
jmp
aas
xchg
insb
jmp
sub
adcl
int3
daa
les
push
mov
mov
cmp
xor
cmp
mov
lcall
ret
pop
mov
and
rcrb
inc
push
add
add
rclb
mov
gs
and
jmp
cmp
lds
jle
repnz
mul
lahf
jp
jp
in
sarl
test
stos
add
add
sti
jp
inc
push
jb
xlat
pop
cmp
xor
jg
jecxz
jp
or
out
dec
arpl
cwtl
mov
mov
sub
cmp
sbbb
test
adc
mov
ret
mov
adc
mov
push
add
mov
into
stc
fwait
inc
call
cs
lods
das
jle
push
mov
jne
sbb
sub
dec
sub
sub
dec
in
push
push
adc
add
xlat
jnp
jmp
push
ja
jp
lret
mov
jae
xlat
add
fldl
ret
repz
jge
shr
adc
cmp
je
mov
dec
iret
push
mov
or
js
add
dec
fmuls
pop
lds
and
inc
bound
data16
aam
or
call
movsl
dec
popf
icebp
add
pop
loop
add
aam
cmp
sbb
gs
and
lret
int
in
xchg
jmp
pop
das
lcall
out
cld
bound
xchg
xchg
hlt
push
push
mov
cld
pop
jns
sbb
fsubl
hlt
lea
arpl
enter
xlat
and
dec
xor
ret
and
loope
leave
cmc
inc
sbb
lahf
and
stos
outsl
sbb
cmp
jecxz
pop
sbb
mov
std
fidivrs
sbb
or
mov
mov
push
out
cmp
sub
mov
rolb
dec
sbb
lods
add
test
sub
cmp
in
ljmp
ds
jbe
jge
jbe,pt
testl
xchg
les
sbb
cmpsl
sbb
popf
inc
bound
add
dec
imul
movsl
fisttps
incl
xchg
add
push
lds
xchg
sbb
mov
insl
inc
mov
insl
mov
pop
xor
loopne
sub
in
jo
in
sbb
hlt
lock
scas
push
xchg
mov
mov
outsl
pop
popa
dec
or
call
xor
sahf
add
fisttps
mov
pop
jns
inc
jbe
icebp
mov
adc
mov
adc
mov
mov
xchg
mov
into
jecxz
scas
je
bnd
call
stc
icebp
sbb
imul
lock
ss
pop
mov
ds
mov
stos
inc
out
loope
dec
popf
in
clc
pop
ffreep
insb
out
cmp
out
lock
mov
movsl
xchg
shl
push
cli
stos
fs
xor
sbb
sub
cmp
hlt
mov
mov
sub
and
lds
inc
ds
fdivs
out
test
mov
fimuls
pcmpeqw
or
sarb
mov
and
xchg
mov
clc
in
push
repz
popa
pop
xor
inc
mov
movsb
pushf
mov
mov
bound
lods
int
jbe
nop
push
je
sahf
lods
pop
je
and
and
xchg
jl
and
dec
mov
cmp
jmp
jmp
sahf
xchg
mov
das
nop
shlb
shrb
gs
int3
adc
call
mov
mov
test
xchg
imul
stos
lods
inc
xor
mov
mov
imul
lahf
push
jl
dec
lea
ljmp
add
scas
out
arpl
mov
fcoml
flds
clc
xor
shll
out
and
xchg
and
mov
mov
dec
sti
mov
testb
rcl
popa
hlt
xchg
int
mov
seto
push
fmul
stos
jecxz
dec
icebp
ficoml
cmpsb
pop
jmp
xchg
push
ret
dec
arpl
js
ror
add
mov
adc
lcall
mov
add
out
jae
sbb
call
pop
xchg
movsl
int3
mov
insl
nop
mov
scas
adc
jnp
push
into
loop
cmp
ljmp
push
xchg
xor
scas
mov
cmpsl
add
sbb
cmpsl
les
cwtl
pop
roll
lcall
les
pushf
and
mov
enter
sbb
lret
rorl
fwait
sbb
out
push
inc
sub
and
pop
cld
inc
lcall
jp
adcl
cmc
andl
sti
scas
xchg
dec
roll
jbe
xor
xchg
movsl
sbb
add
idivl
roll
pop
mov
test
adc
icebp
jno
mov
cmpsl
movsl
pop
bound
pop
imul
or
and
inc
mov
out
jae
jmp
movsb
adc
mov
inc
or
sub
test
push
loope
adc
cmp
inc
jo
int3
in
dec
mov
mov
test
rolb
repz
fcoms
jo
add
jo
dec
jg
sbb
adc
sub
pusha
fidivrs
ljmp
enter
and
insb
insb
jno
test
data16
ret
clc
add
adc
aad
inc
jg
stos
mov
adc
aad
and
and
int3
inc
dec
divl
test
push
sbb
push
andb
push
add
mov
mov
cmp
push
in
push
xor
mov
pop
push
adc
xchg
insb
stos
ret
imul
loop
sub
ljmp
jmp
xor
sub
scas
sub
dec
addb
mov
aad
pusha
int
cmpsl
mov
subb
inc
pop
mov
lea
adc
popf
mov
int
inc
sbb
adc
sbb
add
sub
std
int3
push
sub
sub
push
cmp
pop
push
adc
icebp
mov
lods
inc
mov
mov
das
data16
mov
dec
ficoml
mov
jle
pushf
ds
jl
jbe
aaa
and
mov
pop
out
aas
addl
test
jae
jo
inc
push
cmp
pusha
mov
roll
mov
pop
lock
aam
into
nop
jnp
xlat
ljmp
jmp
int
popa
push
xchg
add
fucom
add
in
jecxz
in
add
inc
insl
dec
sub
sbb
test
mov
pushf
lods
pop
insl
lea
test
gs
mov
jae
insl
out
mov
lret
pop
mov
dec
mov
pop
mov
dec
inc
sub
xchg
stc
out
xchg
fidivrs
mov
push
int
pop
mov
push
push
ljmp
mov
xchg
arpl
mov
jg
adc
addr16
add
jp
enter
cmp
cli
ficompl
add
push
push
mov
mov
cmp
mov
roll
stos
add
add
neg
jo
out
xor
xor
or
aas
shll
push
jle
imul
orb
test
ds
adc
xchg
pushf
ss
vmovntps
mov
fsts
mov
ljmp
inc
jg
cmpsb
xchg
loop
cmp
inc
stc
lcall
mov
movsl
sub
in
add
scas
push
jle
test
dec
int
or
cmp
or
std
test
fstp
lock
aam
out
sbb
jmp
inc
jne
jmp
cmpl
adc
enter
mov
inc
fildll
push
mov
in
push
push
roll
xor
cmp
adc
jno
adc
push
vandnpd
mov
pop
repz
fcmovbe
fstpt
inc
dec
scas
sbb
jecxz
pushf
jl
mov
aas
mov
repz
jmp
rcll
mov
js
das
test
mov
std
pop
je
xchg
fimull
sub
mov
mov
pop
mov
ja
cmc
sub
enter
jmp
aas
xor
fbld
xchg
aad
int3
das
jmp
sub
inc
test
shll
ficompl
jno
fwait
mov
jnp
mov
jg
lds
mov
arpl
and
sahf
inc
js
lcall
adc
out
outsl
jne
jb
mov
push
fucomip
sub
lahf
scas
xchg
dec
cmp
ficoml
je
mov
das
push
mov
dec
sub
inc
sub
lret
and
pop
lret
inc
jg
pop
xchg
test
xchg
jp
pop
rclb
std
pop
movsl
rclb
fsts
sti
lock
roll
mov
xchg
push
sbb
jns
inc
mov
xlat
daa
clc
rcll
mov
outsl
outsl
pop
das
pop
in
arpl
int3
idivl
pop
jns
mov
lock
or
pop
mov
mov
add
fiadds
adc
mov
push
mov
jne
sbb
shrb
push
lods
add
mov
jo
in
push
out
inc
add
aam
xchg
aad
push
mov
in
sbb
push
nop
fucom
cmp
add
mov
jnp
sbb
daa
adc
push
inc
outsl
aad
lock
lcall
data16
leave
cmp
or
fnstsw
sub
cmpsb
pusha
ret
mov
pop
push
xor
sbb
scas
mov
das
enter
dec
sbb
adc
xlat
leave
push
jmp
gs
out
xchg
mov
movsb
inc
pushl
out
pop
push
cmp
cld
test
jb
mov
pop
movsl
mov
imul
mov
aad
push
addr16
cmp
mov
mov
mov
inc
mov
cmpsb
aas
bound
mov
adc
adc
std
gs
out
mov
push
lahf
cmc
sahf
push
imul
cli
test
mov
fwait
subb
movsb
sarb
xchg
jecxz
mov
stos
inc
sarb
iret
imul
push
hlt
jmp
lret
pop
bsf
out
add
loop
sbb
pop
push
xchg
push
imul
sub
fsts
mov
into
sub
add
repz
jecxz
pop
sbb
jnp
movsl
lret
sbb
add
mov
mov
xor
lds
add
test
jne
das
aas
jb
lahf
xorl
jo
lds
lods
mov
gs
inc
mov
lock
or
push
push
cmp
sbbb
ret
fistps
cld
sub
mov
fidivl
ret
pop
mov
add
mov
add
pop
movsl
jg
add
or
xor
insl
cmp
pop
inc
inc
sti
sub
mov
adc
ja
aam
orl
xchg
movsb
mov
xor
cmp
test
outsl
jns
movsl
xchg
mov
mov
js
push
fimuls
cli
sub
and
add
je
cltd
push
xchg
dec
jl
adc
mov
xor
inc
inc
test
xchg
test
or
stos
repz
mov
push
jb
iret
idivb
out
into
dec
shll
or
push
cmp
dec
adc
mov
aas
jp
mov
ficompl
and
fsubrl
pop
xchg
and
inc
jbe
cmpsl
cwtl
jl
sbb
xor
sbb
sbb
mov
sub
sar
inc
pop
pop
lock
mov
int3
or
outsl
mov
mov
push
sub
mov
inc
int3
mov
xor
xchg
mov
xor
sbb
xor
enter
dec
icebp
fidivl
lret
mov
lea
inc
mov
add
add
lock
lock
aas
int3
repnz
std
push
xor
inc
enter
pop
push
out
push
jb
test
jno
or
cmpsl
fistps
and
jmp
adc
rcll
mov
or
cld
in
adc
es
mov
sub
repnz
pop
and
xor
cmp
inc
adc
pushf
push
pop
push
lret
mov
fildll
pop
test
loopne
fildll
ret
ds
lea
stc
sub
inc
push
xor
mov
aam
lret
adc
addl
xchg
das
stos
xchg
push
jae
outsl
cld
and
sbb
ss
inc
xchg
pop
adc
add
fisubrs
mov
mov
dec
ljmp
in
push
loop
not
lret
dec
lods
shrb
mov
aad
mov
push
mul
push
push
and
jle
jge
adc
cmp
lahf
mov
mov
int
xorb
adc
push
jle
mov
dec
ja
adc
pushf
aad
scas
inc
popf
dec
dec
mov
mov
xchg
sbb
pusha
bound
mov
jp
inc
pop
pop
and
and
dec
pop
cmp
sahf
mov
mov
sbb
inc
pop
cs
es
and
fnstsw
loopne
pushf
daa
sbb
daa
ljmp
push
lds
loope
sub
mov
fidivrs
outsl
inc
adc
repz
sarb
mov
fstpl
push
and
cmp
js
mov
sbb
push
mov
mov
sub
sbb
das
mov
mov
mov
lahf
enter
xor
jmp
in
mov
ss
and
jmp
pop
push
fs
lds
in
inc
xchg
pushf
lock
inc
adc
xor
jo
imul
dec
pop
push
inc
lods
or
enter
add
add
mov
mov
leave
dec
jns
jecxz
sub
lods
imul
jg
inc
outsb
and
add
int
sub
bound
fidivrl
push
call
inc
leave
sbb
nop
dec
mov
std
aaa
leave
les
push
pop
scas
out
push
sub
mov
mov
dec
stos
xor
push
push
add
aam
in
mov
sub
fs
hlt
mov
test
insb
outsl
cmp
jmp
adc
inc
push
adc
jo
add
ja
cmp
scas
decb
scas
and
dec
movsl
xlat
sbbl
and
test
xor
rolb
sub
sti
and
fucomi
push
cmc
add
rep
push
cmc
pop
scas
cs
jnp
pop
xor
adc
iret
jbe
adc
fwait
xor
mov
mov
mov
inc
mov
and
out
mov
iret
jbe
fstpl
andl
jns
mov
cli
or
imul
jl
xor
push
daa
repnz
pop
xchg
mov
push
mov
or
mov
xchg
stos
mov
push
imul
push
dec
dec
push
adc
incl
loopne
dec
push
xor
pusha
jne
jno
cmp
pop
int
insb
cmp
popa
adc
loopne
imul
leave
addb
dec
inc
nop
xor
out
mov
mov
pop
inc
mov
lret
push
ss
repz
lods
jo
dec
cltd
push
inc
lahf
repnz
cmc
into
lcall
jae
ret
xchg
fst
fwait
rorl
jbe
les
mov
adc
cltd
hlt
in
jle
sbb
mov
cmc
adc
js
pushf
and
inc
pusha
loope
in
in
notl
sti
xchg
jo
dec
mov
sarl
jae
pop
push
inc
rorl
int
das
ds
pusha
and
ret
out
mov
mov
shl
mov
mov
jno
cs
inc
sub
cmpsl
sub
jmp
push
inc
xchg
mov
or
cmpsl
in
or
jmp
aam
popf
sahf
mov
sti
lock
lods
jmp
push
mov
jmp
cmp
repnz
ficoms
dec
xchg
lret
xor
xchg
sbb
cltd
jl
push
or
rorb
repnz
push
nop
fidivl
ljmp
add
pushl
sbb
in
lahf
in
outsl
or
mov
lret
mov
and
lods
ds
push
pop
inc
popa
dec
nop
adc
mov
rcrb
push
mov
dec
push
xor
inc
mov
les
fxch
adc
je
and
sbb
ljmp
mov
mov
mov
lret
in
push
dec
pusha
xchg
xchg
add
cmp
out
jbe
imul
pushf
or
lcall
cmp
mov
add
popf
les
xor
jae
shld
pop
aad
cmp
jbe
fcomps
or
lcall
pop
incl
adc
push
dec
inc
out
pop
sub
mov
xchg
xor
lds
std
pop
xor
adc
movsb
hlt
inc
mov
push
movsl
inc
out
lods
sldt
add
add
dec
or
scas
jmp
popa
mov
or
add
stos
add
add
mov
xchg
clc
imul
popa
test
pop
ffree
push
inc
inc
mov
lcall
cmp
mov
xchg
cmp
push
push
or
fidivl
xchg
dec
jnp
inc
inc
imul
insl
fwait
lret
dec
lods
dec
fs
jecxz
sti
sub
xchg
cmpsb
pushf
sahf
sbb
push
push
mov
mov
jle
and
mov
fisubrl
ror
mov
int3
adc
test
adc
push
sbb
adc
incb
xchg
sbb
jmp
cld
mov
mov
stc
jae
cmp
add
push
add
inc
or
jo
and
dec
fcompl
xlat
js
lret
popa
adc
jae
imulb
mov
sub
stc
or
imul
bound
mov
cmpl
push
out
pop
jno
fnstcw
xchg
adc
sbb
xchg
jb
sbbl
into
mov
jnp
jge
ja
xor
jl
push
out
mov
testb
stos
jno
loope
sub
dec
dec
xor
daa
cld
stos
sub
pop
xchg
xorl
fs
negl
fistpll
mov
outsb
scas
inc
rclb
jle
icebp
jg
mull
mov
fistps
shl
rcrb
aaa
jecxz
je
and
xor
sbb
jbe
clc
jle
add
fwait
and
inc
jle
dec
aam
stos
hlt
push
cwtl
xlat
cli
in
jns,pn
fidivrl
xlat
incl
xchg
mov
pop
xchg
mov
push
es
jo
pushf
std
mov
push
pop
inc
jno
inc
push
out
pushf
pavgb
cmp
jecxz
mov
push
inc
sub
fwait
and
cmp
mov
imul
mov
rcll
outsl
sbb
nop
ds
and
fsubrs
stos
xchg
and
adc
clc
mov
dec
inc
sarl
repnz
or
inc
aaa
rdmsr
dec
arpl
repz
dec
jno
clc
fisttpll
lret
xor
gs
icebp
cld
pop
outsb
and
or
ds
push
lcall
test
mov
adc
lahf
ljmp
mov
inc
and
vcvttss2si
jb
mov
faddp
or
shlb
pop
inc
rsm
adcb
cmpsb
jne
mov
cmp
movsl
jp
inc
fstps
inc
push
test
mov
hlt
rcrl
hlt
arpl
and
je
cmpsb
mov
out
out
sar
rorl
dec
and
cmpsl
sub
or
shrl
mov
inc
enter
pop
imul
adc
icebp
ret
in
adc
out
add
jno
push
jg
stos
xchg
pop
jo
out
jne
lret
sti
movsl
mov
lcall
ret
loope
mov
inc
lock
sbb
cmp
and
and
jae
pop
test
js
inc
insb
cmpsb
cmc
movl
daa
dec
cmp
sub
mov
movsl
cmpl
add
xor
push
lea
and
or
cltd
sti
cmp
les
es
ljmp
mov
fisubs
fstl
dec
mov
fistps
mov
add
dec
sarb
sub
nop
jns
in
test
push
cld
mov
and
add
stos
add
add
insl
jmp
push
fcmovu
loopne
sbb
subl
mov
mov
xchg
repnz
fdivrs
sbb
xchg
loop
mov
mov
mov
sbb
sarb
js
imul
rcrl
push
nop
aam
mov
xchg
mov
mov
js
add
sub
jnp
pop
lret
jecxz
or
in
daa
testl
dec
mov
push
bound
push
cmp
add
scas
imul
and
xchg
enter
mov
mov
cltd
sar
cs
pop
cld
push
into
std
jbe
jg
sahf
mov
mov
scas
cmpsb
mov
mov
bndldx
fimull
ljmp
enter
add
cmp
xor
subb
fisubrl
add
in
lea
mov
daa
or
movsl
lret
pushf
es
or
or
dec
arpl
and
adc
cmp
int
leave
daa
mov
insb
push
lcall
dec
outsb
mov
mov
rclb
stc
in
enter
and
cmpsl
mov
xchg
sub
in
inc
dec
adc
cmp
xchg
add
inc
pop
mov
lret
dec
and
mov
fnsave
ret
dec
in
sahf
push
or
cld
in
or
mov
pop
add
jmp
inc
test
cmp
jo
out
add
stos
fwait
push
add
daa
inc
pop
push
fwait
les
jae
cmc
push
in
les
stc
or
dec
in
inc
movb
cmp
popa
mov
insb
hlt
xor
mov
dec
sbb
stc
repz
mov
jmp
mov
jecxz
pop
or
and
pop
loop
sbb
lods
stos
mov
stos
cmpsl
push
test
popa
jle
jle
gs
mov
cmp
stos
mov
inc
cmpsb
xlat
fisubrs
rcll
push
jns
cmp
sarb
or
fldcw
aad
sahf
mov
jnp
mov
mov
loopne
lret
gs
push
stos
push
aaa
inc
push
mov
mov
stc
sub
filds
fcom
cmp
mov
pop
lcall
test
xor
cmc
cmp
cmc
adc
push
inc
jg
mov
sbbb
ret
and
clc
aas
lock
pop
sbb
imul
popf
or
xor
cmp
push
popf
aaa
adc
fwait
push
or
xchg
xor
insl
movsl
jg
aam
popf
and
in
sahf
xchg
rcrb
ljmp
int
and
mov
and
addr16
sub
mov
stc
jns
cmc
mov
mov
call
dec
jecxz
mov
int
cmp
dec
std
in
mov
lock
stc
sbb
xchg
out
adc
fcomps
and
fdivs
je
xor
push
push
inc
pushf
mov
cmp
test
push
pushf
mov
cwtl
mov
lods
arpl
push
adc
xor
cmp
test
pop
lods
adc
inc
push
mov
mov
addr16
mov
push
adc
das
add
lcall
pushf
shlb
in
dec
xchg
adc
sub
xchg
adc
add
pop
push
leave
popf
lret
popf
pop
xlat
loope
fs
roll
add
cmp
data16
fs
dec
xchg
mov
xchg
das
movsl
cmp
pop
lea
jge
imul
and
or
fldl
int3
fwait
fwait
push
sub
call
xchg
popf
adc
cltd
adc
inc
das
mov
loopne
addb
test
outsl
insl
or
add
js
mov
adc
push
sub
cmp
shll
mov
adc
pop
data16
insb
cmp
fiaddl
cmpsl
and
test
arpl
aam
enter
dec
jl
sbb
enter
popa
fldcw
xchg
mov
in
push
push
sahf
push
popf
adc
mov
sub
into
out
inc
jle
mov
ljmp
lret
dec
into
xchg
and
andl
sbb
sub
xchg
jns
sbb
test
rorb
cli
lret
cmc
sbb
mov
xchg
imul
jne
fisttpll
test
xchg
or
stos
pop
test
add
fadds
stc
push
pop
push
testl
push
sbb
sti
out
cmc
xlat
iret
add
fwait
add
adc
xor
mov
mov
test
xor
in
cmc
sub
arpl
inc
sti
ficoms
jmp
in
jno
int3
scas
rolb
pop
sub
xor
ss
pop
xchg
sarb
insl
jno
add
dec
int
jg
mov
xor
mov
js
xor
repnz
add
mov
mov
cmpsb
scas
mov
inc
shl
les
std
in
jle
lret
insl
div
leave
mov
fists
mov
mov
pop
jnp
push
popf
idivb
lods
dec
xor
xchg
cmpsb
and
mov
mov
js
push
sbb
dec
enter
addr16
xor
xchg
adc
cltd
xor
cmp
xchg
jp
push
pop
loope
je,pn
icebp
mov
aad
sbb
fcomp
push
dec
imul
mov
fs
adc
fchs
jnp
mov
enter
frstor
jno
adc
inc
addr16
insb
or
push
out
add
mov
mov
cmp
pop
xor
inc
cmp
mov
in
or
push
daa
mov
mov
outsb
pop
fidivs
call
and
out
ljmp
fnsave
cltd
ss
sbb
sbb
xor
adc
fmul
pop
xor
stos
out
rorb
xchg
in
adc
or
idiv
mov
das
xchg
sbb
add
xchg
mov
out
ret
and
arpl
dec
shl
fwait
clc
clc
mov
fnstcw
push
bound
in
dec
mov
outsl
xchg
xor
je
jo
faddl
xchg
jnp
push
repz
sbb
pop
ja
push
fwait
iret
in
and
xchg
mov
cmpl
push
jbe
push
mov
test
jp
icebp
mov
push
addr16
cmc
mov
adc
pop
lret
sub
or
push
mov
stos
and
or
ret
adc
push
mov
dec
add
mov
push
divb
pop
pushf
loop
sub
insb
mov
clc
or
jl
lods
shrl
shrl
shll
add
call
pop
out
dec
pop
popa
sub
stos
outsl
jbe
add
stos
add
add
into
mov
cmpsb
push
mov
stc
mov
loop
sub
lds
ja
rcl
add
js
addb
add
ljmp
fisubrl
or
or
movsl
testb
clc
movl
sahf
xor
jns
sub
aam
push
dec
inc
int3
xchg
mov
or
stos
xorl
aam
jno
push
sbb
mov
mov
jl
jle
in
out
jnp
lret
xchg
in
mov
inc
sbbb
lock
add
mov
and
push
and
sub
or
jp
jb
inc
mov
pop
mov
hlt
mov
mov
cmpl
cli
aas
pop
fisttps
adc
push
cmp
rorb
xor
mov
out
xchg
lcall
xchg
call
jbe
movsb
inc
rorl
or
push
pop
dec
add
js
push
adcl
dec
push
xor
xlat
adc
addl
mov
pop
std
popa
in
mov
or
push
lea
inc
ret
test
lock
mov
sub
je
movsl
cmp
roll
jno
or
outsl
and
sub
bnd
and
or
roll
mov
pushf
call
and
fiaddl
push
lds
or
xor
mov
pop
movsl
imul
rclb
mov
push
inc
stos
movsl
loop
mov
pop
sar
subps
mov
repnz
frndint
rcll
in
imul
testl
or
daa
movsb
dec
les
enter
psrlw
inc
and
pop
cmpsl
cmpsl
push
cli
outsw
mov
inc
je
or
push
aas
push
inc
lods
enter
into
jnp
loopne
out
mov
shll
std
cli
aas
bound
inc
jp
cmp
outsb
xor
inc
lods
aad
mov
rcrl
aas
mov
ret
xchg
cli
xchg
outsl
fst
inc
xor
pop
loopne
icebp
test
sbb
cmp
adc
xor
clc
jmp
je
xchg
dec
sub
mov
sbb
cmp
daa
and
out
or
cmp
loope
and
adc
aam
lds
dec
adc
insl
ret
rcrb
aam
cwtl
bound
ret
mov
iret
aaa
mov
and
jns
call
fsubrs
xor
fiaddl
jns
push
push
cwtl
xchg
xchg
pushf
pop
push
inc
mov
popa
push
ret
dec
inc
int
cmpsl
cmp
xor
xor
sbb
jp
cmp
jge
aam
mov
pop
aad
out
sub
aam
add
dec
or
mov
and
stc
push
inc
sbb
ljmp
ljmp
mov
dec
inc
fs
pop
pushf
pop
dec
lcall
in
rolb
subb
mov
out
ja
cs
sub
lock
imul
popf
es
mov
cmp
mov
pop
outsl
arpl
push
or
and
or
lea
pop
test
mov
loopne
add
xor
cwtl
roll
cmp
aaa
ljmp
adc
popf
notb
sarb
jo
dec
xor
lahf
mov
fidivrs
loop
push
data16
decl
std
or
lods
andb
add
stos
add
add
sub
aas
fcompl
dec
mov
iret
push
test
nop
lahf
xchg
dec
xchg
insb
mov
jno
movsb
xchg
xchg
jl
subb
sub
jp
sub
add
loopne
push
mov
ret
addr16
fs
xor
clc
adc
inc
inc
jle
dec
or
in
scas
bound
mov
or
mov
inc
mov
stc
or
mov
insb
lcall
mov
jge
gs
jno
cmpsb
push
mov
mov
inc
aaa
mov
or
je
iret
mov
dec
cmp
out
pop
inc
jno
outsb
cltd
sbb
mov
push
xor
add
out
sbbb
test
ret
daa
xchg
sub
es
sub
std
shl
shlb
lret
aaa
or
and
cmc
sbb
imulb
pop
lret
loop
addb
adc
xchg
das
sarl
lahf
insb
xchg
cli
aad
or
push
sahf
and
and
ret
pop
mov
mov
popf
cmc
add
adc
or
mov
loop
mov
sbb
mov
jnp
add
mov
loopne
daa
push
sbb
fldcw
jg
pop
cmpsb
es
scas
cld
insb
push
mov
cmp
adc
mov
dec
imul
ret
int
loopne
cmp
dec
pmaddwd
and
clc
hlt
adc
inc
jo
pop
mov
xor
cmpsb
jns
aam
add
arpl
shlb
fisubs
outsb
inc
mov
fisubl
gs
jbe
sbb
icebp
loopne
adc
cs
lret
push
and
pop
loop
sbb
jae
call
xor
pop
xchg
sbb
xchg
loopne
popl
mov
pop
xlat
enter
pop
fwait
push
dec
lea
stc
lds
imulb
into
jno
xchg
jne
jne
jno
movsb
rcl
inc
adc
dec
sbb
rclb
hlt
mov
sbb
mov
pop
scas
fldl
xchg
ljmp
ss
mov
loopne
mov
mov
das
sub
lods
mov
sbb
jecxz
cmp
dec
inc
push
arpl
inc
cmp
jo
xor
pop
mov
rol
mov
jb
jl
mov
mov
and
movb
movsl
adc
mov
xlat
dec
mov
insb
cmp
adc
out
sub
iret
mov
cs
or
add
cmp
cmpsl
jb
lods
fisttpl
mov
mov
add
fildll
pop
xchg
outsb
shll
pop
pop
mov
icebp
les
jns
cltd
fidivrs
movsl
imul
sbb
push
cmp
cmp
lcall
push
inc
test
jg
cwtl
lods
lret
xlat
js
inc
fidivrl
fwait
in
cmp
jno
cmp
jns
int3
sub
xchg
test
das
or
push
mov
pop
pop
lods
xor
in
or
lret
neg
jge
rorb
stos
sbb
sbb
lahf
or
ret
lret
cmc
jmp
inc
imulb
iret
insl
sub
movsl
jmp
sarl
inc
dec
insb
mov
sarl
fyl2x
daa
cmp
jecxz
ss
add
out
push
leave
sbb
xchg
mov
mov
add
into
psrld
rcr
fistpll
push
call
fiadds
add
mov
mov
jmp
sbb
cmp
and
testl
test
xchg
or
je
pop
arpl
jnp
icebp
decb
int3
xchg
aam
jbe
dec
jo
xchg
push
xchg
sub
cmp
jb
ja
adc
nop
test
stos
and
adc
hlt
mov
and
pop
xor
or
pushf
jne
sbb
lock
notl
mov
hlt
into
or
jmp
ja
inc
xchg
jbe
cmp
pusha
jge,pn
mov
aas
lods
fs
in
ficoms
dec
popa
or
insl
cmp
mov
inc
xorb
dec
sahf
or
jp
mov
jmp
clc
dec
outsb
ret
in
sbb
pop
xor
rcl
jae
and
popf
pop
mov
push
and
push
pop
xchg
push
repnz
stos
sbb
rorl
mov
jl
mov
cli
mov
lods
inc
lahf
mov
movsl
push
mov
out
popf
scas
dec
push
or
xchg
dec
and
outsl
xor
repnz
mov
ljmp
sbb
cmpb
imul
pop
lock
jbe
xor
insl
add
fsubrp
aaa
inc
gs
and
inc
adcl
mov
repz
ffree
jmp
hlt
sub
jb
mov
add
pop
js
fistpll
jo
sbb
pop
ja
mov
xchg
mov
mov
loopne
add
pushf
jp
test
aas
jae
movsb
mov
and
fcoms
xor
adcb
push
mov
dec
cmp
sub
mov
cltd
hlt
test
cmp
dec
scas
lcall
push
fnsave
into
decl
aam
push
shrb
test
fs
clc
sub
lds
leave
iret
out
cmpsl
adc
ja
insb
fwait
shlb
icebp
mov
add
enter
fcomps
xor
jnp
bound
inc
aad
adc
scas
jo
lds
sbb
add
outsb
das
pusha
imul
pop
dec
xchg
mov
adc
negl
leave
and
idivl
jns
push
sbb
outsb
sub
mov
sub
cs
scas
jb
lods
ljmp
cmpsb
pop
das
lahf
fmuls
movsb
mov
andl
sbb
and
and
jns
out
out
fnsave
int3
inc
jo
insl
fstpl
inc
or
xchg
call
mov
inc
pop
popa
cmpsl
into
addr16
xlat
jmp
pusha
or
ss
js
movsb
push
add
and
lret
dec
xchg
shll
mov
add
shll
jae
push
rorl
push
dec
stos
lcall
and
inc
push
movsl
cmc
push
jnp
stos
push
dec
mov
jmp
fistps
cld
mov
int
lret
push
loopne
out
jbe
adc
add
jnp
icebp
popf
xor
push
aas
mov
test
popa
xor
inc
dec
rorl
jge
inc
fildll
xorb
sub
push
dec
jecxz
push
push
mov
in
pop
xchg
or
mov
xchg
add
cwtl
sbb
je
int3
or
mov
dec
in
addr16
jge
pop
mov
sbb
dec
in
pop
add
add
lock
pushf
pusha
pushf
cld
cld
push
dec
lock
loop
add
test
scas
mov
sbb
cwtl
xchg
aaa
loope
out
cld
fidivrl
jns
xchg
aad
movsb
cmp
inc
loope
sahf
shrb
xchg
push
sbb
inc
mov
and
fldcw
xor
sub
cmpsb
out
lea
mov
into
dec
mov
mov
enter
test
repz
or
push
add
pop
and
cmp
jmp
pop
mov
inc
pop
dec
out
out
insl
dec
push
or
or
js
mov
pop
mov
ss
dec
mov
stc
mov
or
movsb
mov
cmp
pop
stos
inc
jo
enter
pop
xor
incl
ds
stos
test
xorb
out
inc
add
inc
pusha
fistl
jns
xor
mov
dec
lea
inc
cmp
pop
aam
jge
lret
push
clc
in
dec
adc
in
pop
cmp
fnstcw
jbe
ficompl
or
xor
stos
sbb
push
iret
inc
mov
in
inc
ret
flds
mov
aad
xchg
sbb
cmpsl
nop
lret
loope
imul
fwait
aaa
roll
imul
fwait
popf
pop
fisttpll
divl
fisubs
addb
xchg
dec
push
push
xchg
mov
sub
call
stc
das
cmp
dec
inc
pop
sbb
add
cmp
mov
xchg
negb
pop
imul
or
ja
lahf
cld
mov
mov
or
adc
adc
icebp
pop
fdivs
lret
leave
scas
aas
push
and
and
inc
mov
push
mov
sub
push
pop
push
int
cmp
fadds
sub
mov
inc
insl
adc
aad
push
lods
push
out
aam
aam
adc
mov
cmpsb
pop
int
stos
push
xchg
dec
mov
xchg
mov
inc
bnd
pop
into
stos
incb
mov
sahf
jae
pop
jns
pop
push
out
cmp
push
cmp
call
mov
mov
xor
lcall
or
test
jbe
pop
xchg
xor
in
fndisi(8087
roll
add
inc
dec
lcall
and
les
stos
pusha
xchg
inc
jg
mov
fadd
scas
mov
enter
push
pop
inc
inc
loopne
mov
xor
fcmove
loope
push
xchg
adc
je
lods
pop
adc
or
les
mov
rcrb
ja
imulb
lods
test
inc
out
in
mov
mov
dec
out
push
or
sub
mov
pop
data16
loop
pusha
and
push
data16
mov
jo
pusha
outsb
incb
jmp
or
aaa
sub
cmpsl
xchg
shrl
cmp
pusha
clc
inc
mov
or
std
sub
lods
dec
xor
add
addr16
adc
adc
jg
mov
inc
scas
sarb
sbb
mov
jmp
gs
cli
pusha
lret
add
cmpsb
fldt
call
pop
es
xor
imul
push
ficompl
hlt
sbbb
xchg
rcrb
xchg
cld
sub
mov
and
xor
push
jbe
in
bound
xor
sbb
jo
push
sub
or
stc
insb
cmpsl
jb
sbb
add
inc
gs
jg
mov
shrb
out
add
cmpsl
sub
cwtl
jg
mov
cmp
xchg
cmpsl
bound
scas
dec
imul
mov
addr16
test
jmp
mov
clc
xchg
ret
repnz
xor
jl
pop
or
jg
pop
push
fdivl
mov
and
fadds
pop
jmp
scas
mov
push
inc
sbb
pop
enter
cmovo
xor
ret
fnstsw
mov
xlat
in
adc
in
imul
scas
js
pop
mov
mov
xlat
fld
inc
sub
int
sub
in
rcl
push
cmpsl
imul
dec
les
stc
dec
pusha
out
fcmovnbe
fcompl
and
or
aas
push
arpl
cld
xchg
push
mov
push
mov
loope
sbb
xor
cltd
lret
andl
dec
mov
mov
in
leave
in
or
clc
ficoms
sbb
inc
xchg
mov
rcrl
xor
cmp
mov
mov
add
aam
pop
cmpsb
out
out
sbb
mov
aaa
das
out
aam
iret
cli
lock
pop
addr16
rorl
mov
xor
cmc
incl
movsb
dec
loope
sub
or
or
xlat
pop
jae
mov
xlat
dec
dec
xlat
ret
lds
lods
xchg
cwtl
scas
add
xchg
lods
adc
pushf
mov
cmp
xchg
les
repnz
push
lret
pusha
pop
cli
loopne
ljmp
mov
cmpsl
pop
pushf
jle
pusha
addr16
fldl
enter
data16
xchg
movsb
pop
mov
sbb
cmp
jp
dec
add
add
mov
popf
jo
mov
xchg
outsl
test
mov
sub
sbb
movsb
loopne
jl
scas
nop
sub
and
dec
inc
lahf
inc
adc
fxtract
dec
movsl
sahf
jmp
popf
jnp
xchg
inc
aaa
mov
adc
pop
je
aas
dec
pop
mov
and
xchg
hlt
mov
dec
xchg
dec
mov
outsb
jo
hlt
fnstcw
lock
ror
mov
dec
popf
rcr
jbe
xchg
push
jbe
scas
and
sub
jnp
pop
sahf
push
mov
fmull
sbb
pusha
jl
shrb
mov
outsb
jl
mov
mov
mov
pushf
dec
mov
repnz
push
pop
dec
mov
and
sub
dec
test
inc
sbbb
add
sti
aaa
pop
dec
mov
addr16
push
pop
xchg
jle
or
pushf
sub
sahf
fwait
pop
daa
inc
push
sub
mov
lock
fsub
push
in
mov
loop
stos
sbb
xchg
push
mov
xchg
add
cmp
leave
sub
push
fdivrp
idivl
subb
call
jnp
inc
test
xchg
push
mov
call
sbb
push
push
fstl
mov
or
cwtl
cmpsl
sub
sar
jb
subb
nop
or
cmp
adc
cmp
cmp
pop
lret
fcmovbe
xchg
and
scas
jecxz
movsl
fs
orl
loop
dec
mov
or
cmc
out
dec
and
add
cmp
mov
jb
fnsave
lods
mov
ret
lret
push
ja
xchg
xchg
call
jbe
fistpll
mov
add
add
inc
xchg
dec
xchg
mov
shlb
int
add
stos
add
add
fs
negl
popa
stc
inc
mov
mov
subb
int
lock
or
mov
popa
lret
cmp
push
mov
lret
in
rclb
adc
lea
fstpt
jae
push
xchg
push
jmp
bndstx
les
mov
xchg
hlt
gs
stc
in
push
adc
xor
setne
sbbb
icebp
out
out
cld
into
aaa
out
loop
addr16
push
jbe
add
mov
cmp
std
and
dec
pushf
int3
adc
push
mov
push
add
mov
ljmp
and
adcb
cld
jge
into
sbb
add
push
dec
mov
jne
lret
addr16
adc
insb
mov
lds
mov
fildll
cwtl
push
test
clc
in
fisubrs
cmpsb
loope
ja
lcall
cld
pop
push
sub
pop
cltd
test
in
and
jnp
into
mov
aas
pop
and
incl
pop
dec
cmp
mov
int3
push
nop
insb
add
cwtl
hlt
imulb
cld
shll
jp
mov
mov
out
sub
mov
roll
xor
ja
das
fidivrs
jns
cmp
sbb
pop
out
dec
mov
int
pop
leave
xchg
pop
lret
mov
movb
outsl
in
icebp
and
mov
xchg
loop
pop
adc
push
mov
test
and
mov
adc
scas
mov
out
mov
pop
cmp
repz
stos
test
pop
aad
adc
sti
fucomip
daa
and
mov
jnp
insl
stos
mov
cli
jle
sbbb
rcr
nop
mov
jp
loop
xchg
mov
and
mov
repnz
push
sbb
push
shl
adc
inc
or
sub
std
sbb
dec
xchg
out
or
lock
pop
cmp
adc
cmp
cli
pop
fdivl
add
call
shl
cmpsb
imulb
sti
sbb
sbbl
jnp
incb
aad
dec
aas
ret
insb
aad
cmpsl
jecxz
sti
pop
xchg
inc
pop
xor
xchg
push
xchg
mov
adc
push
out
imul
pushf
mov
cs
lahf
cmp
icebp
pop
lret
cmp
adc
std
jbe
shl
loope
sbb
dec
insl
inc
push
bound
sbb
xchg
daa
fwait
mov
pop
iret
pop
dec
ljmp
out
ret
mov
mull
lock
or
leave
mov
push
jecxz
and
push
mov
jl
mov
ss
pop
aam
int
movsb
pop
jg
dec
mov
bound
push
aad
cmp
or
sbb
pop
pop
mov
or
imul
adc
lods
mov
cmp
xchg
mov
stc
out
adc
fnstsw
jmp
cmp
insb
icebp
dec
cs
fsub
jbe
jne
ljmp
inc
fimuls
icebp
leave
sbb
cmpb
ljmp
fstpt
flds
push
fsts
lea
sbb
and
fsts
movsb
inc
xchg
adc
jbe
add
stos
aaa
out
xor
pusha
into
daa
push
shr
jge
mov
add
sub
and
jg
push
adc
pop
mov
stos
add
add
dec
dec
mov
dec
adc
and
dec
mov
rcrb
ret
test
and
jecxz
out
mov
dec
push
push
push
ds
aas
xchg
mov
xchg
dec
add
stos
mov
rcrl
and
cli
xor
dec
mov
and
inc
xchg
pusha
orl
cmp
cmp
fldl
test
test
insl
pop
mov
out
je
lcall
xchg
pop
loope
or
repnz
int
xchg
xor
mov
fldt
std
xor
outsb
sbb
scas
xor
pop
xor
mov
sbb
mov
je
jne
pop
mov
int3
sbb
test
xchg
xor
mov
push
mov
out
mov
sub
jg
jg
out
xchg
inc
pop
ja
dec
test
jbe
insb
mov
mov
add
imull
dec
xor
and
adc
dec
add
repnz
fdivrs
mov
mov
or
sbb
inc
cli
pusha
mov
insl
dec
jecxz
add
arpl
in
lcall
cmpsb
adc
adc
imul
push
dec
cbtw
mov
lcall
or
rcll
or
jl
leave
movsb
ficompl
lds
or
adc
hlt
lea
and
mov
xchg
and
imul
inc
movsb
dec
sub
loop
mov
inc
insb
js
cmp
jp
fstpt
mov
loopne
popa
outsb
test
xchg
cld
add
jle
mov
adc
pop
lcall
jo
mov
stc
je
xchg
divb
ja
sbb
mov
mov
pop
aam
insl
ljmp
es
mov
addl
and
fistpll
in
int
fistps
jno
mov
out
sti
cmc
lcall
leave
leave
je
pop
inc
dec
enter
into
mov
pusha
adc
jle
sub
jmp
dec
mov
cmpsl
stos
pushf
adc
and
pusha
mov
mov
pop
mov
pop
daa
jb
hlt
flds
das
adc
stos
jg
mov
pusha
adc
aas
mul
and
shr
sti
pop
aad
in
imul
ss
arpl
mov
sbb
push
push
add
sub
pop
jmp
pop
mov
cmp
fnsave
add
cmp
jne
sbb
aaa
and
mov
lret
xor
mov
fsubr
leave
cltd
aad
jnp
inc
shlb
cmp
xlat
call
cmp
xor
push
inc
cwtl
cmp
push
cmpsl
popa
add
jecxz
mov
pop
stos
scas
pushf
out
bound
shrd
andl
aam
jno
push
lret
mov
in
pusha
cmp
xor
outsl
fnstcw
gs
loope
xchg
jnp
out
lcall
insb
cltd
mov
fcomps
xchg
mov
loopne
mov
aad
fcmovb
inc
ja
rcrb
call
int3
les
shrb
aas
push
outsl
fs
sbb
outsl
jmp
dec
dec
stc
xchg
mov
mov
adc
and
mov
add
pop
shl
nop
mov
and
scas
push
push
pop
jae
out
jp
fcomps
sub
jnp
sti
mov
aaa
mov
sbb
and
add
stos
add
add
fstpl
in
xchg
inc
pushf
out
movsl
adc
insl
sbb
pop
out
push
in
lret
fcoml
lods
add
sarl
andb
sbbb
shl
inc
dec
inc
fcomps
mov
jo
test
cwtl
cs
test
stos
popa
sub
jg
sbb
lret
cld
insb
mov
imul
out
fmull
pop
inc
inc
xchg
mov
cltd
push
sub
dec
sbb
scas
push
outsb
push
xchg
add
push
ss
mov
mov
sbb
test
ds
mov
push
push
scas
lods
loope
enter
xchg
pop
imul
adc
and
pop
adc
jb
pop
lods
dec
xchg
mov
pop
movsl
inc
push
std
mov
pushf
sub
cmpsl
cs
cltd
scas
add
jle
inc
bound
push
pusha
jae
adc
push
les
or
lret
push
add
sbb
pop
add
mov
lcall
lcall
rcll
pop
pushf
lcall
lahf
xor
and
sbb
push
adc
mov
cmp
fidivl
jnp
xchg
mov
jl
sbb
repnz
test
shrb
or
or
shl
cmc
shrb
or
lret
arpl
sbb
fnstenv
sbb
xchg
dec
sbb
mov
cs
clc
dec
jb
lahf
into
mov
mov
pop
sbb
pop
repnz
scas
sahf
aas
adc
pop
sahf
sbb
sarb
xchg
push
push
repz
cld
mov
es
lock
sub
or
dec
fcomip
rcrl
or
iret
nop
lock
sub
movsb
js
loopne
sub
add
or
pop
lret
or
js
push
pop
in
mov
movsb
push
orb
pop
addb
cmpb
fists
xorb
jbe
inc
fwait
mov
cwtl
jge
pop
push
shll
sub
jb
lret
add
je
mov
mov
lahf
and
jp
jmp
mov
jle
and
xchg
xchg
cwtl
ud0
cmp
jmp
pop
lds
call
in
push
ss
test
fwait
out
in
push
mov
ss
andb
dec
inc
dec
pop
jle
lcall
mov
dec
pop
ret
push
out
mul
ret
loopne
mov
sub
ds
je
fnstenv
xor
sbb
fwait
dec
les
jge
pop
in
dec
sbb
xlat
pop
mov
movsl
xchg
sbb
dec
hlt
cmc
dec
loop
mov
pop
outsl
and
into
dec
mov
mov
xchg
adc
stos
mov
add
popa
jmp
shll
insl
sub
xor
in
aam
mov
or
push
jl
popl
loopne
jge
cmp
fsubrp
sbbl
dec
fnstenv
pop
lret
and
inc
test
int
dec
adc
mov
out
std
push
mov
sub
xchg
stos
add
lahf
push
lcall
into
clc
out
jnp
pop
mov
xor
ljmp
mov
xchg
mov
aas
adc
sub
pop
jge
xchg
inc
xor
jnp
and
sbb
shr
jp
pop
jecxz
sbb
add
mov
add
mov
xor
in
hlt
add
test
jb
scas
pop
xchg
mov
push
imul
bound
mov
cltd
inc
jns
ja
js
aam
movsb
bound
test
fs
sbb
mov
push
push
iret
jle
cltd
jbe
in
push
sbb
mov
jg
mov
fisttpl
mov
mov
scas
icebp
aas
sahf
stos
imul
sub
test
dec
sbb
divb
jp
or
insb
xchg
jae
mov
mov
jmp
xor
add
jge
add
cmp
les
adc
jnp
aas
pushf
mov
jbe
xchg
mov
push
test
gs
arpl
cmc
xchg
lds
dec
jge
jns
push
or
js
repnz
xor
scas
jle
adc
jp
dec
clc
outsl
ja
lret
and
mov
gs
sub
jl
xchg
xor
mov
add
cmpsb
xchg
jp
cs
mov
mov
arpl
sub
das
test
add
pop
xor
dec
pop
lret
dec
add
fdivrs
les
pop
das
pop
mov
insb
ljmp
repz
daa
mov
insb
ja
cs
in
mov
pop
lock
imul
mov
cltd
mov
in
sbb
pushf
push
stos
jno
xor
scas
cmp
pushf
int
mov
dec
loope
xor
addr16
loopne
push
lea
in
dec
test
out
push
sahf
mov
mov
fld
nop
xchg
iret
push
rorb
jg
sbb
rolb
mov
mov
mov
xchg
push
sbb
and
iret
cltd
popf
or
push
adc
mov
fwait
adc
sub
pop
and
ljmp
dec
movsl
inc
mov
iret
pop
add
adc
repnz
mov
cmp
mov
sbb
hlt
inc
pop
call
pop
jle
out
addl
lahf
jbe
int3
or
pusha
cmpsb
sar
adc
mov
fyl2xp1
cmpsb
adc
hlt
in
mov
cmp
cmp
insl
mov
push
aam
rol
push
cmp
mov
cwtl
js
enter
sahf
xchg
inc
jmp
jae
sbb
sub
je
push
sti
adc
movb
push
mov
add
rcrb
pop
cmp
push
adc
outsb
div
das
push
dec
jne
lock
jns
cld
and
mov
sub
pop
add
jno
jp
push
es
jmp
push
cmp
push
xchg
lods
sti
and
xlat
cmp
les
push
insb
cld
mov
xchg
xlat
out
and
inc
adc
cmp
les
test
cmp
cmp
ljmp
xchg
mov
cmpsl
sahf
or
int3
mov
mov
nopl
jl
dec
push
mov
mov
push
push
jmp
sbb
mov
aas
mov
mov
repnz
fisttpll
movsb
int
xor
push
mov
and
and
lcall
jl
loop
lea
jae
xor
jne
lods
xchg
xor
cmp
cmp
arpl
jg
push
and
xor
pop
pop
addl
mov
ljmp
mov
cld
pop
sub
and
enterw
