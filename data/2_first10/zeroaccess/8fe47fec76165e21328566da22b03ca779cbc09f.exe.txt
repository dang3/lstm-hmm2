push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
add
mov
mov
mov
mov
mov
sbbl
push
sbb
jmp
ret
aas
ret
aad
aad
mov
aaa
jle
jle
or
jle
fld
fcom
enter
leave
cld
icebp
fmulp
sar
rcl
mov
nop
fsub
nop
cld
jmp
leave
ss
xor
neg
aad
int
fnsetpm(287
lock
in
cli
sti
jmp
xchg
in
cli
fxch
out
leave
icebp
idiv
iret
ds
lock
repz
enter
out
fildl
ret
sub
shl
xlat
fdiv
stc
aas
adc
call
fmuls
repz
mul
ret
into
jmp
loopne
iret
lock
in
repnz
into
sub
sti
ljmp
int
into
out
rorb
fimull
div
aam
hlt
cmc
aad
ss
int3
rcl
rol
idivb
icebp
les
out
sti
xchg
ljmp
ljmp
hlt
icebp
shl
shl
faddp
imul
mov
rcl
into
jecxz
out
repz
out
cmp
jmp
div
cmc
out
fdivr
clc
in
mov
repz
fprem
roll
cld
ret
ror
testl
in
fadd
lock
aaa
jmp
into
cmp
out
rcr
loopne
mov
lret
orb
in
in
xlat
xor
call
loope
aam
testb
clc
out
loop
leave
jmp
xor
rcr
iret
int
in
lock
lret
mov
mov
in
lret
repnz
ljmp
cmp
sar
idiv
in
decb
mov
cmp
les
cmp
shr
cmp
aas
addb
in
in
loope
in
shr
lret
rol
iret
rcr
int
loope
rcl
out
xlat
out
hlt
ljmp
repz
loope
aaa
jmp
neg
shl
aaa
fmul
into
xlat
clc
push
xor
jmp
rol
ror
rcr
fcmovnu
mov
add
or
jle
idiv
ret
xlat
cld
aam
fmul
mov
frstpm(287
nop
xor
hlt
out
cli
lret
repnz
int3
aad
fdiv
ds
sbb
sar
leave
fdivrp
in
fstp
loope
ret
jmp
test
rcr
out
ret
aad
int3
clc
loop
leave
in
repnz
jecxz
cli
cmp
std
imul
jmp
ror
repnz
ror
aad
fld1
ret
std
jmp
cmp
out
shll
clc
in
int3
ljmp
cmp
icebp
sar
cld
cld
out
test
hlt
out
out
rol
icebp
cmp
fst
stc
jmp
lret
mov
lea
clc
cmp
das
icebp
loop
cmp
cmp
out
xlat
out
in
into
jmp
fcmovbe
idiv
call
stc
loopne
jmp
rolb
repnz
mov
sti
ret
nop
loope
xchg
loop
out
xor
out
idiv
aam
int
stc
icebp
rol
repz
cli
out
fsts
into
aam
leave
xor
cmp
in
lock
jmp
rol
fst
stc
out
loope
jmp
xor
ss
idiv
cmp
incb
jmp
fildl
lea
xor
aam
cmp
lret
int3
aas
rcr
in
mov
loop
fcomp
jmp
fsubp
int3
jmp
not
imul
in
cmp
xor
hlt
rcl
cmp
decl
adcl
sub
fdivr
idivl
aad
jmp
into
in
fld
cld
test
xchg
test
lret
jecxz
jmp
cmc
test
lock
jecxz
ret
mov
mov
hlt
nop
mov
ror
aam
idiv
stc
out
xor
imul
int
lock
stc
ljmp
add
rcr
fadd
aad
cmp
repz
cmp
xchg
dec
into
jecxz
xchg
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
xor
jmp
ret
leave
aad
fcmovnu
sub
cmp
sbb
jle
or
jle
notb
cmp
fcomp
rcr
cli
repz
adc
test
hlt
sar
loopne
fdiv
call
in
loop
sub
xor
repz
aad
mul
iret
shl
rcr
mov
ljmp
icebp
hlt
xor
out
fcmovnu
cmp
imul
loop
loop
dec
loop
mov
leave
loopne
loope
cs
xlat
int3
fmul
aaa
rcr
fiadds
fchs
xlat
fmul
and
adc
clc
icebp
fldcw
cmp
cmp
fst
rcl
sti
lret
mul
in
fcomp
xchg
mov
rcr
hlt
ljmp
adc
shl
aam
jmp
mul
out
lea
xor
icebp
cmp
fcmovbe
sti
iret
imul
addl
out
loope
aad
mov
mov
jmp
call
hlt
fnstcw
fmulp
xlat
ret
fcmovu
cli
in
fiadds
shr
test
int3
in
fdivp
ss
fidivrs
adc
cmc
ljmp
addl
cmp
icebp
aam
xor
imul
roll
jmp
xchg
mov
jmp
lock
lret
aaa
sti
aad
cmp
in
in
lock
fmull
std
out
testb
xor
fstp
fnstsw
out
loop
out
call
ljmp
jecxz,pn
cmc
sarb
iret
out
ljmp
out
hlt
loope
jmp
lret
sti
lret
shl
leave
cli
xor
cmp
ds
shl
into
flds
sti
xchg
loope
int3
out
xchg
out
in
lock
jmp
cmp
cmp
sbb
cli
fiaddl
repz
jmp
lret
repnz
repnz
ret
cmc
fxch
in
fucomp
lret
popl
lret
out
xor
xlat
lock
mov
sub
add
andl
mov
sub
jmp
vaddsubpd
rcr
pop
push
xchg
adc
sub
jle
add
sarl
in
lds
jecxz
faddl
lock
mov
out
fmul
cmp
cmp
cmp
loope
repz
loopne
cmpl
leave
enter
in
fsubr
hlt
fcmove
jmp
out
enter
sub
mov
cmc
fdivr
roll
into
cmp
lret
repz
ljmp
enter
mov
addl
out
jecxz
fidivl
shr
shl
fcmove
repnz
hlt
cmp
roll
cld
sar
repnz
cmc
hlt
clc
xlat
lret
repz
cmc
ror
jecxz
test
call
leave
lret
filds
shl
int
out
fdiv
xor
cmc
cmp
icebp
cmp
clc
into
jecxz
fmull
xor
ss
repnz
cmp
hlt
cmp
aam
mov
xlat
out
loope
mov
repnz
cmc
call
cli
int
idivb
mul
loope
rcr
div
addb
lret
jmp
xor
fmul
fistpll
cmp
in
loopne
out
out
rorl
mov
cmp
std
out
lret
fdivrs
sti
div
shl
mov
in
fcmove
cli
into
cli
sti
test
mov
sti
clc
rol
cmp
in
cmp
loope
repz
jmp
rolb
hlt
jecxz
xlat
not
xor
aas
fcmovnu
adc
out
call
loope
cmc
shr
xor
leave
out
neg
int3
sar
shl
lock
not
loope
orb
rorl
aaa
xor
in
roll
rorb
mov
ljmp
xor
cmp
in
hlt
repz
test
ljmp
test
enter
cld
in
ss
fsqrt
rol
rcr
repnz
and
decb
cmp
mov
jmp
rcl
fcom
fcom
fstp
outsb
push
mov
fisubrs
jle
add
out
std
mov
lock
out
ljmp
xacquire
cmp
mov
in
int
nop
loopne
repnz
imul
fxch
cmp
lret
sarb
incb
lret
mov
call
xor
loope
aam
sarb
hlt
cmp
out
cmp
sarl
cmp
ret
jmp
out
int3
repz
out
int3
ror
lock
stc
rcr
int
cmp
loop
hlt
shl
or
mov
mov
out
hlt
loop
test
not
jmp
lock
std
cmc
clc
xchg
fcmovnb
mov
leave
fsubr
faddp
in
inc
into
aas
shl
in
rol
int3
clc
aad
repnz
add
loop
nop
enter
repnz
out
test
in
xor
in
iret
int
lds
fcomip
fcmovb
mov
into
in
xor
aaa
imul
iret
shlb
repnz
aad
rcr
incl
xchg
enter
ljmp
ljmp
repnz
fmuls
mov
into
int3
int3
loope
cmc
ljmp
filds
mov
fcmovu
cld
xchg
xchg
aam
xor
cmp
in
repnz
aad
lret
testb
in
out
jmp
xor
icebp
aas
jmp
mul
lds
stc
in
ljmp
sarb
clc
xlat
aaa
stc
shl
jecxz
bnd
enter
in
int
addl
in
jmp
cmp
icebp
and
stc
loopne
fdivp
imul
or
xchg
orb
aaa
leave
shrb
int
cmp
cmp
jecxz
neg
stc
cmp
adc
adc
ljmp
cmc
sti
shl
cmp
ret
loopne
xchg
loopne
mov
mov
aad
shll
rorl
lock
xor
orl
add
xor
add
mov
add
mov
movl
mov
xor
mov
lea
and
mov
mov
mov
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
sub
mov
mov
and
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
add
jmp
ret
fstp
ret
frstor
mov
sbb
jle
or
jle
jmp
cmp
cld
cmp
fucom
aam
and
stc
in
in
in
lock
loop
xor
cli
ret
fucomi
clc
hlt
cli
xor
roll
cld
jecxz
out
out
ljmp
ror
std
xor
jecxz
ret
loope
fcmovu
cld
into
lock
in
repz
in
cmpb
in
jmp
loope
test
test
ss
clc
int
lock
ffreep
std
in
loope
testb
call
cmc
out
ljmp
in
clc
add
cmp
cli
addl
ret
sarl
lock
in
cld
in
into
icebp
cli
mov
imul
out
jecxz
std
cmc
lock
shll
xor
aam
rol
jmp
mul
loopne
enter
call
loope
icebp
int3
out
das
ror
lret
cmc
shll
cli
repz
aad
sbb
and
mov
int
rcl
ret
int
xor
cmp
in
int
not
xchg
cld
cmc
test
jmp
lret
shr
ljmp
ds
aad
cli
hlt
cld
repnz
fmulp
mov
int3
orl
lock
fdivs
out
std
fnstsw
ror
repnz
test
xchg
std
out
jmp
shlb
out
repnz
jmp
loop
cmc
out
sarb
aad
jecxz
test
mov
fsub
repnz
sti
in
fimull
shl
xchg
mov
in
ss
cmc
xor
loope
cmc
in
in
loope
int3
xchg
xchg
mov
repz
aad
leave
cmp
in
rolb
xchg
sub
vpaddsb
ljmp
fdiv
std
rcl
loopne,pt
jecxz
fcmovnb
mov
ja
add
add
mov
mov
mov
mov
adcl
movzwl
andl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
and
mov
and
mov
mov
xor
add
jmp
aam
fistl
xchg
clc
stc
rorb
jle
or
jle
in
clc
xchg
into
shr
in
out
into
cmc
cmp
push
sar
fdiv
fadd
aam
aad
std
test
xchg
fcmovnu
out
leave
icebp
fsubr
clc
sti
sarb
add
into
cmp
fmull
movl
into
lret
cmp
lret
aas
out
cmp
cmp
mul
cli
in
cmc
cli
mov
test
rol
fnstcw
fdivr
iret
aaa
imul
clc
rcr
in
test
ret
testb
stc
mov
ret
jmp
fsubr
std
cmp
aad
loopne
mov
cli
call
int3
out
jmp
cmp
aaa
std
lock
out
hlt
fstp
out
int
std
repz
in
repnz
fdivs
rcl
out
cmc
aam
lret
repnz
mul
out
ret
cli
repz
jmp
xchg
cmc
int3
stc
xor
icebp
lret
into
cli
sti
hlt
rcr
xchg
in
std
iret
mov
loopne
inc
call
lret
call
fnstsw
or
clc
sar
mov
sub
ficoms
ror
sti
cmp
cmp
cmp
ret
test
incl
ds
fadds
xchg
xchg
in
fxch
iret
in
jmp
sar
aas
neg
test
leave
flds
addl
cmp
jmp
fstp
addb
lret
loopne
xchg
lock
xor
test
repnz
cmp
stc
fld
xchg
loopne
fcmovu
lock
fcomip
xor
ss
cmp
out
aam
aas
xlat
out
stc
ffreep
xchg
in
test
xchg
stc
das
int
out
lret
clc
fcmovnbe
cmp
rol
fadds
fmul
fdivr
ror
xchg
xchg
dec
int
xor
test
lret
aad
aam
enter
stc
xchg
test
add
add
add
fcom
fstp
je
xchg
or
loopne
jle
or
jle
xor
ss
iret
loope
icebp
sti
cmp
aas
std
jmp
enter
into
fcomi
loope
lock
cmp
aas
clc
cmp
loope,pt
and
roll
into
repnz
ret
lret
aam
xor
std
in
fadd
sti
repnz
fyl2x
xchg
hlt
aaa
aam
in
repnz
aam
aad
cmp
out
shr
iret
hlt
test
in
xor
rcl
repz
out
cmp
movl
in
aam
aad
das
int
xor
iret
cmp
roll
fsubr
jmp
repz
sar
jmp
jmp
rcl
cmp
icebp
cld
ljmp
call
loop
fcmovnb
sti
int
stc
bnd
out
icebp
out
mov
mov
lock
mov
int
cmc
xor
lret
repz
cmp
aas
fsub
icebp
repz
mov
call
xchg
mov
aaa
repz
enter
rolb
jmp
ljmp
aam
call
idivl
cmp
rcr
hlt
aam
ss
ret
aad
or
mov
mov
into
jmp
fsub
rolb
in
hlt
loopne
ljmp
sti
iret
loope
jmp
xor
cmp
int
cmpb
ror
repz
mov
mov
xchg
out
lret
xlat
out
out
lock
ror
ror
roll
clc
int3
enter
mov
notb
not
not
out
cmp
cmp
fcomi
fdivp
sbb
repnz
into
int3
iret
vcvtdq2pd
out
leave
std
aaa
lret
sar
xor
testl
loopne
fcmove
sarl
hlt
int3
cmp
iret
incl
add
mov
mov
xor
add
cmp
jne
mov
mov
jmp
int
rol
fst
lcall
add
push
jle
or
jle
ret
mov
loop
test
mov
aaa
cld
sar
cmp
cli
rolb
mov
jmp
into
rorl
out
shl
sub
lret
cmp
leave
aas
cmp
not
fmul
test
aad
rol
lock
xor
jecxz
int
ret
sti
fldl
jecxz
xchg
in
in
int
shr
xor
shr
int
in
aad
test
filds
adcl
rcr
cmp
in
cld
cmp
addb
int
aam
in
icebp
out
shr
cld
filds
cmp
xchg
fimuls
int3
sub
cmc
jmp
out
fnstcw
div
std
testl
xchg
jmp
loop
lret
fcmove
aaa
fidivrs
out
enter
fsub
jecxz
repz
iret
or
xchg
aas
stc
lret
cmp
clc
rcl
shl
mov
out
testl
divl
cli
aad
iret
cmp
xor
sarb
aam
mov
fsubr
fucomi
test
iret
loop
cmc
jmp
fcmovnu
ss
in
cld
lock
lock
aas
ret
ret
std
lret
std
int
lea
ret
call
into
iret
aas
sarb
cmp
in
in
neg
in
enter
adc
int
lret
xor
into
xorb
into
addl
sti
lret
repz
repz
cmp
fdivr
leave
sub
repnz
fsubrp
repnz
mov
in
jecxz
icebp
mov
in
xor
cmp
fstpt
int
fsubr
into
xlat
cmc
xor
in
lret
idiv
out
sub
call
xor
sti
cmp
cmc
sti
sarb
loopne
jmp
fdivl
movb
mov
mov
mov
jmp
leave
ret
int
int
mov
lret
cld
adc
or
jle
roll
xor
out
fdivr
in
add
mov
aam
or
rclb
repz
icebp
cmc
aas
iret
fcomip
and
fcmove
out
loop
fxam
call
out
int
ds
cld
out
aam
loop
cmp
ljmp
mov
ljmp
aam
fucomp
call
fdivrl
fsubp
test
int3
out
xchg
adc
jmp
fucomp
cmc
cmp
test
clc
mov
mul
mov
loop
int
shl
hlt
fcmovbe
xlat
rcr
out
ljmp
sbb
aad
fisttpll
xchg
iret
nop
cmc
nop
cmp
fcmovne
ffree
fst
sbb
lock
stc
testb
loopne
repz
loopne
jmp
out
fdivrl
sub
adc
xchg
rcl
std
out
in
loop
aaa
leave
cmp
adc
mul
fdivr
cld
jmp
test
fmull
shrb
xlat
int
cmp
lret
cmp
aad
fsub
in
fcomi
int3
out
fcmovne
in
repz
int3
icebp
xor
hlt
shl
ds
div
fiaddl
fadd
stc
lock
mov
in
xchg
test
cmp
aad
das
xor
repnz
fdiv
cli
call
in
jmp
icebp
nop
lock
std
int
int3
std
lret
into
or
rolb
out
mov
xchg
xor
in
jmp
repnz
lock
ljmp
out
int
jmp
ljmp
fnsave
aam
cmp
rol
jecxz
fsts
into
shl
xor
loop
fcmovne
jmp
sti
loopne
test
hlt
cmp
mov
repz
shl
mov
repz
jecxz
sti
aam
cmp
ret
jmp
aam
mov
push
pop
lea
add
test
cmp
cmp
fsub
addb
iret
in
lret
xor
iret
hlt
in
fst
fcmovne
xlat
fsub
xchg
cld
fsubrp
test
std
not
ljmp
lock
in
fdivr
cmp
icebp
out
in
push
aam
or
flds
fiadds
xor
div
hlt
div
cld
cmp
iret
rolb
loope
int3
cli
xchg
hlt
loop
in
ret
jmp
cmp
enter
roll
fildl
incl
repnz
ror
xor
sti
clc
cmp
into
sti
push
icebp
loop
fdiv
aam
hlt
cld
lret
xchg
out
int
lret
out
ror
aam
repnz
cmp
ljmp
iret
xchg
test
xor
xor
cmc
cmc
lock
loopne
cmp
icebp
aaa
std
test
cmp
out
cli
mov
jecxz
xchg
in
xchg
aaa
aam
xlat
std
sarl
icebp
mul
fst
fdivrp
sti
fmull
fcomi
xchg
ror
into
xor
cli
xlat
cmp
cmp
cmp
call
xchg
divb
jmp
push
fstp
sti
xor
cli
xlat
loope
add
jecxz
xchg
ror
lret
ljmp
fdivl
loopne
loope
mul
add
test
mov
lock
enter
divl
jmp
in
cmp
clc
cmc
repnz
ret
mov
leave
ror
test
repnz
aaa
out
shl
into
cmp
lret
fsubrp
cld
hlt
std
xchg
loopne
filds
xchg
rcl
out
into
clc
clc
xor
ljmp
into
out
ds
inc
test
stc
fisttpl
mov
out
sub
sar
cmp
ds
stc
idiv
repnz
enter
stc
fstp
in
test
fsubr
ss
lock
clc
loopne
testb
mov
cld
mov
sub
add
mov
mov
jmp
xlat
rol
xlat
enter
push
rcr
adc
add
jmp
loopne
in
ss
ljmp
loopne
call
rolb
and
repz
fnsave
out
cmp
jecxz
out
repnz
fucomi
out
xchg
leave
shr
lock
xor
aam
test
neg
repnz
call
leave
jecxz
rorl
aad
xor
fcmovne
cmp
in
rcl
ror
loopne
faddp
out
test
mov
int3
xor
int
xor
lret
aas
lock
roll
in
mov
in
fucom
loopne
enter
aam
cmp
fdivp
rolb
call
icebp
jecxz
loope
stc
sti
ss
fst
aaa
cmp
test
rcl
xchg
rorl
lret
int3
lock
out
ss
int3
repz
cmp
out
dec
call
fcmovu
ret
ret
fsub
xchg
leave
stc
enter
lret
loopne
out
shl
ss
cli
ljmp
mov
repz
jmp
xchg
ret
out
in
repnz
fcmovb
in
cli
loopne
loopne
in
into
mov
lret
fcomp
xor
ror
ds
test
aas
jecxz
loopne
loopne
inc
xchg
jmp
cmp
cmp
sbb
stc
ds
xbegin
repz
repz
xlat
icebp
out
xor
fdivrl
repz
cld
loop
hlt
call
sbb
out
iret
decl
ror
xor
fmul
cld
cmc
cld
shl
xor
rol
testl
repz
aam
enter
xor
fbstp
lock
aad
mov
int3
xchg
fst
testb
ss
shl
rol
fcmovu
fcmovnu
test
mov
in
into
ss
hlt
xor
out
mov
jmp
into
ror
fxch
fst
cmc
mov
mov
cmpsb
push
jle
or
jle
repnz
fsin
aam
loope
ffree
ret
jmp
mov
xchg
xor
in
iret
cmp
test
shl
xchg
sar
jmp
int
std
jmp
test
fsub
lret
repnz
sti
cmp
push
std
add
into
fldl
ret
repz
loopne
rcl
ss
fcomp
stc
faddl
jecxz
or
divl
ljmp
stc
cmp
shl
filds
fxch
faddl
call
repnz
test
test
sarl
aam
lret
aad
iret
loope
std
xchg
hlt
repnz
ss
fcom
cmp
in
aad
aas
repz
mov
cli
jmp
hlt
adcl
icebp
cmp
ds
jecxz
sti
dec
test
idiv
in
in
iret
nop
rorl
ljmp
flds
cmp
shr
xchg
inc
incb
out
stc
sarl
xlat
clc
fmul
icebp
cli
repnz
out
rcr
fsub
leave
lret
decl
in
ror
shl
das
std
repnz
fadds
xchg
mov
shl
loopne
aam
call
repz
clc
add
cmp
aas
cld
repz
mov
clc
xor
out
aaa
shll
jmp
fcmovnu
repnz
rolb
jmp
aad
test
lock
rcl
xchg
fmul
divb
shl
iret
aas
out
out
sarb
cli
idivb
fsubp
call
test
loope
xchg
into
xchg
ljmp
shl
out
cmp
cmp
repz
in
xchg
sarb
icebp
cli
ss
in
lret
out
jecxz
in
loop
movl
xbegin
jmp
out
stc
testb
cmp
add
mov
jmp
ret
rol
rcl
rcl
sar
and
adc
mov
out
mov
jle
or
jle
cmc
enter
out
lret
in
xchg
sub
xor
not
into
fcom
fld
fidivrl
jmp
out
loope
out
test
int3
out
sti
icebp
hlt
out
iret
stc
sar
cmp
ror
into
clc
cmp
hlt
aaa
fdiv
adc
mov
int3
ror
in
fst
icebp
hlt
in
jmp
jmp
into
ss
fdivp
loop
mov
xchg
std
incl
xchg
in
ss
in
out
idivl
aaa
aas
aam
test
out
leave
ret
jmp
xchg
in
shlb
out
xor
in
cs
cld
cli
clc
loope
clc
not
loop
repz
jecxz
out
lock
sub
xchg
call
cmc
leave
clc
fcmovu
cmc
loop
aas
fucomi
cli
test
out
fmull
jmp
repz
cmp
fsubr
leave
adc
out
test
fadd
cmc
ljmp
jecxz
test
out
aaa
std
sub
into
repz
adc
mov
xchg
hlt
shll
xor
repnz
xor
lock
mov
loopne
int3
mov
aaa
aaa
cmp
repz
sar
shl
in
div
incl
fucomip
mov
xlat
call
fnstsw
in
out
sarl
mov
cld
out
lret
xor
int3
rcr
fucomp
repnz
lock
stc
out
aam
adc
in
std
fmul
loop
ljmp
aaa
cld
shr
loop
fdivrl
not
dec
call
add
jmp
cmc
faddp
aam
in
stc
cli
fidivl
lock
aas
fnstsw
ss
stc
fsub
loopne
cmp
ljmp
xchg
iret
shr
into
vpminub
ds
fxch
loope
xlat
add
aam
aam
test
xchg
out
cmp
idiv
add
in
cmpb
enter
stc
lret
rorb
test
mov
mov
xor
add
jmp
rcl
rcl
fstp
rcr
cld
cmp
jmp
sub
pop
inc
sbb
or
jle
in
not
out
cmp
loop
int3
xlat
into
mov
test
test
sar
in
test
iret
lock
shr
cmp
out
cmp
clc
cmp
mov
dec
out
mov
out
ljmp
out
rcr
fld
xchg
mov
sub
shr
cmp
cmp
lret
and
jecxz
ds
in
mov
cld
test
xor
loopne
ss
ret
shl
lret
fxch
sar
xor
repz
sub
fcoml
jecxz
xor
cli
fdivp
shr
fcmovbe
jecxz
xchg
fsub
mov
clc
fprem1
faddp
fucomi
xchg
repz
hlt
xchg
repz
fmul
repz
loop
cmp
lock
int
fucom
icebp
loop
adc
hlt
repz
cmc
hlt
add
loope
aas
test
int3
int3
in
sub
shl
jecxz
int
cli
xor
std
xlat
shr
rcr
orb
test
incl
out
iret
leave
rcl
shl
test
cld
icebp
aam
rcl
or
in
in
fsubp
xchg
aam
in
aam
jmp
aas
iret
clc
adc
xchg
fsubp
fsubr
out
out
out
out
jecxz
fldln2
cmp
sti
out
into
ds
flds
std
sti
not
in
jmp
lret
mov
xor
enter
out
fistpll
cmp
repz
jecxz
out
mov
jmp
in
dec
test
int
aaa
mov
cmp
cmp
shr
fidivl
vpsadbw
mul
mov
loop
cld
in
repnz
repz
ss
ds
mov
xor
xchg
int
test
int
aad
xor
out
lret
sarb
clc
aas
add
cli
cld
loop
stc
call
out
xor
lret
neg
int
leave
loop
sbb
loopne
xor
sub
mov
jmp
int3
enter
lret
int
stos
test
decl
and
jle
or
jle
jmp
loopne
test
addb
stc
in
int
int
xlat
loop
repz
iret
repz
addl
icebp
mov
out
xor
cli
int3
clc
jmp
call
loop
clc
aas
jmp
jecxz
out
mov
das
lock
fildl
addb
stc
fmull
lock
out
in
rcr
repnz
repz
cld
test
rolb
test
out
ljmp
enter
shl
cmp
fst
rcl
test
out
std
jecxz
cmp
loopne
cs
cmp
fcmovne
sti
lret
aaa
aam
les
cmp
out
sti
out
jecxz
out
shl
xchg
in
fucom
repnz
jecxz
call
out
int3
sti
ror
movb
and
fucomip
fimuls
test
enter
loopne
aad
stc
rolb
fmul
int3
in
out
test
iret
loope
out
out
xor
and
out
std
shl
ffreep
hlt
cmp
into
clc
mov
rolb
ret
sarl
cld
fabs
sti
test
stc
test
test
lret
cli
in
fdivrp
into
loop
fincstp
fucomi
aam
rcr
cmp
out
rcr
jecxz
fildl
clc
addl
cli
jecxz
enter
sti
repz
loopne
aad
sar
ret
ds
int3
out
shr
ror
mov
cmp
cli
lret
into
jmp
out
iret
loope
loop
clc
fstp
xchg
shl
lea
div
clc
ss
hlt
loope
cmp
test
int3
into
cmc
into
cli
in
out
fcomi
cld
in
cmp
std
sti
aad
xchg
aam
enter
sti
in
int3
xchg
adcl
sti
icebp
cld
loopne
ds
rolb
in
jecxz
in
shr
fcoml
sub
cmp
mov
movzwl
jg
xor
jmp
int
rcl
fcmovu
int
xchg
daa
ljmp
push
jle
or
jle
rcl
xbegin
shl
aaa
rcr
idivb
rcr
test
lret
std
fdivrp
call
out
out
fcmovbe
aaa
xlat
fld
cmp
ret
test
in
icebp
fst
jecxz
ret
xlat
idivb
fucomp
fnstcw
stc
aam
cld
aam
stc
faddp
fdivp
mov
shr
lret
sub
loope
repnz
fdiv
into
cmc
out
cmp
add
shl
int
clc
fmul
jmp
mov
aam
clc
lock
xor
hlt
repz
out
ret
hlt
fcmovnb
out
lock
test
orl
loopne
out
xor
repnz
rcr
xor
cmp
loop
jmp
mov
vpslld
shr
aad
fsub
iret
fnstcw
repz
sar
cmc
fiaddl
iret
or
int3
fnstenv
aad
cmp
enter
testb
aam
mov
fdivrp
jmp
xchg
nop
out
shr
shl
fidivrl
push
shl
aas
in
test
fsubp
shl
loopne
lret
sbb
test
xor
clc
aas
std
rcl
mov
not
enter
out
mov
lock
in
test
not
ret
repnz
leave
call
nop
ss
xor
into
out
leave
aaa
leave
sub
fldl
enter
cli
repnz
mov
hlt
rol
cmp
icebp
lret
aam
fcomip
hlt
repz
in
test
mov
shl
xor
cmp
fidivrl
int3
adc
rol
icebp
ror
stc
loopne
fcmovb
lock
out
repz
fld
in
repz
and
adc
in
in
iret
rcr
enter
ljmp
shl
stc
rcl
cmp
cmp
lret
jecxz
fdivr
mov
jmp
xor
xlat
int3
sub
sub
mov
jmp
xor
jmp
mov
fst
fxch
jg
lods
loop
pop
jb
insb
and
or
jle
std
cmc
repz
out
iret
sar
in
aad
xbegin
out
neg
out
call
cmc
fsub
xlat
inc
shr
clc
out
into
in
stc
mov
repz
sub
neg
icebp
cmp
out
rcr
repnz
mov
clc
rolb
xchg
enter
cmp
xlat
lret
hlt
fstpt
out
cld
roll
out
or
loop
fucomp
ljmp
cmp
shlb
testl
stc
test
mov
xchg
mov
into
fucomi
fcomi
int
repnz
mov
sti
add
lret
leave
mov
nop
lret
das
repz
xor
shl
mov
jmp
and
ljmp
rcr
xor
aaa
lret
aam
icebp
cmp
div
repz
mov
clc
mov
in
loopne
clc
out
out
in
fucomip
fidivl
sti
rolb
neg
std
orl
ror
loope
in
ljmp
add
sar
xlat
xlat
mov
ficoms
divb
sub
fst
repz
fdivrl
les
iret
test
loopne
aam
enter
mov
loop
xor
rol
hlt
ss
ds
cmpb
hlt
in
cmp
test
repz
out
iret
out
lock
ret
neg
sar
sarb
cli
in
rol
call
in
int
mov
mov
sarl
cmp
repnz
mul
testb
fisttps
lock
icebp
addl
cmp
jmp
loop
in
loopne
xlat
lea
fxtract
cli
out
cld
aad
fucomip
fcomip
filds
fstp
enter
xchg
rolb
vpavgw
out
cmp
fcmovbe
in
in
in
mov
testb
or
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
jmp
rol
lret
aad
mov
jle
and
or
jle
jmp
in
in
lret
fcmovnbe
jmp
loope
fiadds
jmp
cmp
in
mov
call
cmp
ss
in
int
ds
ret
flds
int3
mov
into
int
xchg
leave
int
ror
iret
not
cld
aaa
sarb
adc
fcmovnbe
sti
out
fsub
out
repz
cmc
in
enter
jmp
in
sub
clc
fiaddl
int3
ret
xlat
xor
cld
fxch
aas
icebp
in
in
fdivrl
cmc
fcmovne
mov
sar
xchg
xchg
out
ret
int3
xlat
xlat
incb
cld
mov
fucomip
loopne
leave
shr
into
repnz
int3
shr
xor
call
rcl
shl
div
mov
mov
loopne
out
xchg
icebp
xor
rol
jmp
leave
rcr
lock
shl
iret
aam
sub
sbb
sbb
lret
and
xor
shl
out
in
cmp
ljmp
idiv
mov
out
test
leave
orb
call
shl
loop
faddp
shl
fmul
sti
xlat
call
shr
cs
lock
out
cmp
repz
ret
rcr
idiv
fldl
ljmp
call
in
in
cmp
cmp
aam
cmp
in
cli
mov
shl
in
int3
ficoms
cs
fcmove
iret
leave
xlat
hlt
shl
clc
cmp
rol
cli
les
sti
out
into
fdivrp
lret
loopne
aam
cmp
rcl
stc
stc
into
test
cmp
loope
fadds
hlt
mov
shl
out
call
xlat
cmp
xchg
cmp
jmp
cld
in
xor
fld
icebp
fldz
das
hlt
int
ror
cmp
loopne
aas
stc
rolb
out
icebp
iret
mov
hlt
in
cmp
add
test
adc
add
add
add
ror
aad
fldt
sbb
or
jle
out
xor
iret
ret
mov
rcr
lea
shl
std
inc
divb
shl
stc
out
cli
cmp
ds
jecxz
cmp
sti
out
jecxz
lock
sar
shl
xchg
xor
shll
hlt
hlt
in
fucomp
cmp
int3
shl
sti
call
aas
mov
fcmovnu
nop
hlt
cmc
test
int3
aaa
fidivl
ret
jmp
sar
rcr
out
aam
ljmp
out
xchg
mov
loope
lret
out
int3
call
xlat
ds
aas
ret
call
fucompp
mov
jmp
lock
xor
int3
fstpt
out
idiv
adc
xor
mov
jecxz
rcr
into
jmp
jmp
stc
sbb
rol
enter
fimuls
ljmp
ror
rcl
into
int3
cmp
movb
call
xchg
sub
xor
aam
cmp
leave
sbb
shl
fsubrp
in
out
sub
int
repnz
xchg
loop
lds
leave
xor
in
aad
aad
loope
fcmovnb
ds
hlt
mov
in
fstp
icebp
rclb
jecxz
neg
std
shll
sti
rcl
int3
rol
ffreep
test
mov
repnz
xor
jmp
leave
int3
cli
cmp
xchg
in
cld
xlat
fcmovnb
cli
test
loope
das
cmp
int
call
fcomi
cmc
out
rcl
aad
xchg
iret
jmp
rcr
int
call
fistpll
cmc
fst
in
aas
aad
fstp
call
sti
decl
test
out
lds
jecxz
aaa
call
loop
incl
mov
loopne
xchg
jmp
out
lret
ffree
fld
xlat
shl
enter
roll
jmp
int3
ror
in
cs
cmp
ret
mov
cli
out
mov
mov
jmp
aam
iret
int3
fst
outsl
fmull
dec
test
push
daa
jle
or
jle
fdivrp
test
in
fst
ljmp
cli
xor
jmp
lds
lret
out
lret
xchg
test
xor
div
ljmp
xchg
mov
fsubp
cld
out
test
rcr
lock
icebp
shr
shr
out
hlt
xor
fcmovne
rcl
hlt
in
aam
sar
std
mov
imul
lea
int
in
cmc
xor
out
repz
ret
loop
mov
enter
testl
xor
test
cmc
into
call
icebp
out
stc
sti
icebp
out
aas
loope
mov
int
aam
xor
in
rol
in
ljmp
rcr
loop
hlt
mov
stc
lret
mov
stc
mov
aam
shr
xor
lret
in
cmp
roll
call
loopne
into
repnz
aad
in
int3
int3
sarl
out
stc
cmp
loop
loope
leave
testl
rcl
icebp
jmp
out
loop
in
iret
xlat
loop
shl
aad
fildl
call
cmp
lds
cmp
xor
fistpll
cmp
inc
aad
mov
nop
mov
aam
enter
jmp
aam
cmp
int3
jmp
out
ror
rol
cld
ret
testb
ljmp
jmp
ds
jecxz
sti
rolb
jmp
mov
and
out
ds
fucomp
fdivp
repz
cmc
lret
mov
enter
fisttpll
int
jmp
rcl
cmc
cmp
in
rcr
sti
clc
ljmp
dec
jmp
bnd
cmp
cmp
repnz
in
rorb
iret
ficoms
fsubr
icebp
std
stc
out
cmp
lock
fcmovbe
xchg
and
mov
fiadds
loop
ret
mov
mov
jmp
ret
xlat
int
fstp
cltd
sbb
andb
jle
add
aam
cmp
neg
faddl
in
call
jmp
into
enter
fnstsw
xor
sar
cmp
aas
in
and
lret
cld
in
call
xlat
stc
ds
and
repz
test
lds
popl
stc
xor
das
clc
addb
repz
test
icebp
in
loop
icebp
mul
call
ss
cmpb
fdiv
out
aas
sbb
not
cli
out
mov
out
jecxz
repz
out
into
cmp
std
out
cmpb
lds
out
orl
rol
loop
in
clc
aad
loopne
fmul
aas
cli
xchg
sti
loopne
fucomip
lock
mov
xchg
fucom
lock
xor
jmp
int
xlat
xlat
ret
hlt
fstp
in
jmp
addl
decb
out
xor
aas
aas
loopne
test
repnz
out
mov
stc
loope
icebp
loop
shr
into
cli
stc
cmp
imul
call
cmp
cmc
iret
repnz
xchg
shl
orl
ds
sti
lret
ds
loopne
stc
jmp
mov
nop
std
in
xchg
xor
lock
repz
stc
fcmovu
loopne
in
rorl
mov
jmp
xor
leave
iret
cmp
cmp
cmp
cmp
rorb
ljmp
int
mov
out
out
cmp
cmp
cmp
aaa
std
ret
cmp
fndisi(8087
sti
xlat
leave
test
xor
leave
shl
fdiv
cmp
aam
test
clc
leave
mul
cmp
mov
fdivr
in
jmp
cmp
iret
shlb
and
call
ret
mov
ljmp
rol
cmp
aad
enter
xor
rcl
rcl
in
lea
add
mov
mov
mov
jmp
rol
xlat
int
arpl
mov
jbe
push
cmp
sub
or
jle
repz
out
sub
mov
std
shl
cmc
sar
stc
call
sarl
in
rcl
xlat
mov
and
fildl
ret
in
out
cmc
cld
lret
add
aad
fcmovnu
test
call
in
rol
ret
clc
jmp
fndisi(8087
leave
cmp
clc
into
repnz
loopne
mov
in
in
out
int3
int
shlb
neg
imul
fnstsw
jecxz
aaa
repz
leave
fadd
test
fiadds
xchg
sub
in
iret
aam
loop
rcr
out
std
test
call
fucomi
loop
out
nop
fsubrp
repnz
xor
ror
xor
iret
neg
fildl
in
ljmp
jecxz
xor
out
leave
lret
jmp
shl
shl
sub
lret
into
fsub
int
aam
aaa
jecxz
idivl
cmp
aam
rcl
in
neg
sbb
aam
leave
fucomi
loopne
nop
rcr
jecxz
aad
stc
lret
fucomp
icebp
out
cmp
cli
loopne
in
mov
loop
rol
cld
lock
fpatan
cmp
loope
sar
cmp
inc
std
mov
cmc
mov
fisttps
ror
loop
ss
repnz
fsubr
sti
les
in
int3
leave
xabort
int
in
loop
cs
divl
cmp
fdivrp
lock
ds
test
mov
mov
mov
xchg
iret
lret
lds
shr
rol
hlt
idiv
call
add
filds
jmp
fmul
out
icebp
cmp
stc
repz
aad
enter
in
loopne
leave
ror
mov
int
cmp
out
out
out
into
sarb
rcr
fdivr
test
lock
mov
mov
mov
xchg
fyl2xp1
hlt
fucomi
lret
cli
sti
xor
xlat
fcmovbe
clc
cmp
cli
out
aas
into
std
in
fimull
int3
call
add
add
enter
ret
xorb
scas
shrb
jle
into
in
xor
cld
xor
in
ret
imul
pop
jmp
fnstsw
int
xor
stc
in
int3
cli
in
loop
aas
jecxz
in
xchg
mov
xchg
test
enter
cmp
aad
fistpll
loope
in
rorl
int3
int3
cld
out
xchg
mov
cmp
fdiv
rcl
cmp
out
out
xlat
clc
mov
fmul
jmp
lret
lret
cmp
leave
cmp
hlt
in
shl
fildl
mov
fmul
int3
cld
loopne
out
xor
lret
out
fdivs
in
fcmovnu
xchg
fcmovbe
mov
addl
int3
out
xor
jmp
repz
int3
loopne
test
cli
fabs
enter
icebp
call
ret
xor
test
fcom
jecxz
ret
std
fcmovb
jmp
sti
xchg
aad
aad
rol
iret
xor
cmp
cmp
mov
ljmp
mov
in
fcmovbe
out
into
icebp
xlat
cmp
xchg
test
jecxz
loopne
mov
repz
out
mov
cmp
into
call
enter
stc
cmp
enter
out
cmp
xchg
in
int
cmp
lret
aad
fiadds
std
cli
int3
sub
ljmp
clc
icebp
xor
iret
int3
ljmp
icebp
cmp
loopne
fdivrp
xlat
int
into
jmp
filds
sar
stc
int
int
neg
inc
incl
xchg
iret
call
out
sti
sti
into
repz
ret
cli
hlt
icebp
xlat
test
mov
ret
incl
mov
shl
cmp
shr
rolb
shl
repnz
loope
std
test
icebp
in
jmp
in
mov
rcl
iret
fldpi
cmp
fmulp
loope
orl
add
add
lret
xchg
aaa
cmp
lret
jle
or
jle
xor
neg
filds
out
sti
xor
into
sarb
clc
cmp
ss
loopne
ret
cmc
int3
xchg
loopne
xchg
iret
loope
out
xor
lret
idiv
loopne,pt
int
loop
loop
test
test
shl
ror
lret
fcmovnu
fdiv
stc
iret
ret
mov
ljmp
sub
rol
fxch
ret
ret
lret
fdivr
in
leave
shlb
int3
in
xlat
mov
in
test
jmp
xorl
in
in
cmp
aas
sti
hlt
clc
cli
loopne
out
test
in
stc
call
in
xlat
lock
iret
fcmovu
loop
out
faddp
ds
loopne
addl
lret
lret
fucomip
jecxz
lock
shr
repnz
mov
xchg
out
loop
out
xchg
test
icebp
in
clc
call
stc
stc
dec
in
sti
cmp
incb
loop
iret
repz
cmp
leave
out
not
cmp
cmp
out
cmp
mov
std
rorb
lock
repnz
addl
rclb
xor
in
ss
enter
out
cmp
addl
movl
rol
out
into
clc
cmp
in
aas
std
jmp
fisttpl
mov
lret
imul
cmp
int3
in
and
les
cli
repnz
fstpt
mov
repnz
ljmp
iret
sarl
cmp
fstpt
repz
cld
fsubr
int3
cld
test
cmc
adcb
out
cmc
jmp
fistpll
ret
repz
std
ret
icebp
test
loop
fsubr
out
repnz
adcl
sti
out
cmp
call
out
out
repnz
test
xchg
fsubr
call
loopne
inc
or
add
cmp
je
mov
mov
add
mov
mov
mov
mov
jmp
into
lret
fcmovne
into
fistpl
adcl
fdivl
jle
or
jle
mov
les
cmp
stc
lret
jmp
int3
cmpb
xlat
rcr
jmp
fdiv
test
call
out
fadd
cmc
int
aas
cmp
aam
ds
cmp
les
xchg
ror
xchg
sub
fdivrl
loope
ffreep
xchg
xchg
loopne
in
mov
in
aad
repnz
ljmp
cld
fdivrp
inc
sar
ret
fucom
mov
mov
ljmp
call
dec
int
xlat
fcomi
fmulp
lock
std
call
xchg
add
dec
test
sar
cli
jmp
imul
aas
xchg
cld
call
std
lret
in
aam
ss
icebp
in
fidivl
testb
aam
cmp
cmp
cli
stc
call
aad
call
neg
cmc
aaa
stc
aad
repnz
and
enter
lret
jmp
xchg
xor
fldcw
loopne
cmp
fld1
or
ljmp
cmp
lret
lret
cmp
cmp
icebp
mov
cmp
loopne
mov
out
mov
lret
cmp
cmp
xor
into
dec
jecxz
test
cmp
fsub
fldlg2
cmp
out
jmp
fmul
shl
neg
ljmp
and
xchg
mov
imul
in
push
mov
std
out
call
xlat
xor
fidivrs
loop
shl
test
fninit
fcmovu
enter
xchg
xchg
lret
ljmp
into
shl
clc
rol
fucom
repz
sbb
lock
vmaskmovdqu
neg
stc
ljmp
ret
roll
lret
in
or
out
jecxz
leave
out
cmc
xor
addb
dec
add
ljmp
fadd
idivb
sti
div
fldl
add
add
jmp
ret
enter
int
aas
icebp
jg
jg
and
or
jle
repz
ffree
cmp
add
out
cld
jecxz
fists
lock
iret
out
xor
out
xlat
fnsetpm(287
mov
vpavgw
test
ret
clc
cs
shr
enter
ss
fadd
xchg
int
sti
repz
ret
lret
in
cli
shlb
cmp
xor
adc
cmp
sub
rcr
leave
out
shl
int3
nop
into
xor
icebp
lret
fsub
int
cli
fxam
fldl
loopne
mov
decb
xor
repz
vpsllq
std
cmp
incl
jmp
mov
sub
xor
in
cld
int
shlb
rolb
les
addl
mul
sar
icebp
ds
loop
iret
hlt
fiaddl
hlt
hlt
out
sti
xchg
adcb
loopne
int
in
out
fiadds
rcr
repnz
aas
fucom
xchg
jmp
fsubr
in
lret
xlat
call
cmp
mov
ljmp
ljmp
lds
in
rcl
rcl
lock
movl
fstp
icebp
int3
in
cmc
rol
rcl
in
int3
aad
imul
xlat
cmp
addb
lea
xor
into
aaa
in
into
iret
idivl
mul
fcmovbe
div
hlt
rol
rorl
addl
hlt
int
call
cmp
cmc
stc
fadd
repz
test
shr
lds
in
enter
cmc
into
icebp
aas
aaa
loopne
loopne
cli
jecxz
jmp
xchg
rclb
aad
xor
aam
in
xlat
xlat
ret
add
loop
enter
fsub
in
ficoms
idiv
ror
call
std
int
ds
shl
cld
mov
cmp
inc
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
jmp
rcl
rcl
rcl
aad
xchg
stos
gs
mov
clc
xor
jle
cmp
jmp
in
lret
xor
sar
int3
std
ret
cli
rcr
testb
rcl
xchg
div
int
cmc
ljmp
std
sti
sti
shl
xlat
cmc
xor
mov
fcmovu
fadds
in
shrl
iret
ss
xor
sarl
cmp
lret
mov
int3
call
das
out
repz
cmp
repnz
cmc
clc
fptan
test
addb
popl
xor
iret
iret
fcomi
cmp
fmul
int3
aas
xchg
repnz
jmp
cld
repz
icebp
icebp
ss
cmc
out
sti
cmp
jmp
lock
in
jecxz
jecxz
lret
fcom
aam
aas
flds
cmp
shl
aam
out
inc
fisttps
xchg
lret
lret
cmp
xor
fdiv
loop
enter
or
in
xor
ljmp
xor
sarl
loope
clc
fcomp
and
out
stc
jmp
out
xlat
out
lret
into
fmul
ljmp
in
cmc
cli
ret
shl
out
stc
in
fsub
loop
mov
out
shl
aam
icebp
enter
aam
incl
fcmovne
in
clc
iret
out
jmp
lret
fsubr
das
out
clc
icebp
fldl
hlt
in
fcmovnbe
lock
cli
loope
in
xor
lret
int3
lret
aaa
fcmovne
icebp
loope
hlt
in
aad
xchg
ffree
in
std
leave
jmp
into
enter
int
out
ljmp
inc
movl
into
mov
int3
out
lret
fsincos
lret
ret
aad
rcr
fdivr
loopne
mov
cmp
orb
jmp
jmp
into
out
in
icebp
out
aas
aaa
test
testb
out
out
out
xorl
xor
fmul
cmp
mov
mov
mov
mov
pushl
call
mov
jmp
enter
int
int
repz
xchg
jle
or
jle
call
rolb
jecxz
clc
mov
int3
jmp
iret
lret
xor
xor
cmp
out
sti
out
out
test
shl
leave
sub
cli
xlat
mov
xchg
fiadds
into
out
sar
das
lret
sarl
dec
rcl
loopne
not
sbb
enter
stc
xchg
xchg
test
iret
int3
xor
rcl
hlt
sarb
rol
into
cli
fistpll
xchg
loopne
lret
lret
filds
iret
ss
cmp
lock
cmpb
ds
cmc
repz
fsubr
lret
aad
jecxz
cmp
out
fdivr
in
cmp
int
xor
jecxz
ret
fcmovnb
lock
icebp
lret
mov
aam
idivb
clc
sti
cmp
std
cld
cld
stc
fildl
cld
enter
div
sub
out
icebp
rcl
div
rcl
test
lds
jmp
ljmp
repz
repnz
rol
cmc
mov
test
ror
incl
icebp
iret
out
out
cmc
repz
clc
ffree
loopne
sar
aad
loopne
cli
out
nop
and
iret
addb
xlat
cmp
fnstsw
fiaddl
mov
in
xchg
loop
enter
fcom
ffree
cmc
aam
stc
stc
in
loopne
jecxz
fxtract
out
std
lea
fbstp
in
cmp
aaa
xor
aas
shr
repz
lock
shl
in
mov
ror
out
xchg
xor
cmp
rol
rcl
aas
aam
sti
fdivrs
cld
aas
test
or
ljmp
in
shl
jmp
cld
aam
fcomip
hlt
idiv
lret
int3
fildl
orl
into
out
fdivrs
fcom
aam
ss
in
fdivrp
sar
mov
mov
xchg
nop
rcl
iret
aam
lret
sar
out
mul
ror
sar
hlt
clc
idivb
ret
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
mov
movl
mov
movzwl
xor
mov
jmp
aad
aas
fst
int3
aad
adc
stos
es
mov
jle
lret
int
addl
cmp
les
xlat
in
aad
cmp
out
fnstsw
ret
fcmovu
sti
out
fsubrp
adc
repnz
xor
fucomi
int
fdivrs
jecxz
cmp
not
fld1
in
testb
sub
jecxz
cmp
lret
rcr
cld
aaa
clc
in
lock
xor
fdivr
or
repnz
out
mov
in
aaa
ret
repz
out
ror
cld
test
fcomip
add
cld
addb
int
out
fstp
shl
aam
jecxz
call
loop
lret
iret
in
int3
aaa
xlat
sar
cmp
faddl
iret
out
cli
loope
mov
and
cld
std
into
dec
out
xlat
sti
fdivl
aaa
cmp
stc
add
fcmovnbe
jmp
int
icebp
loopne
xchg
fucomip
jmp
in
repz
stc
sarb
loopne
cmp
std
dec
dec
icebp
iret
into
in
repnz
lock
cli
clc
std
ffree
fdivrs
mov
jecxz
lret
leave
in
out
jmp
loop
int
std
not
cmp
sti
out
sbb
mov
in
int
xchg
loopne
and
int
out
ljmp
jecxz
idivb
iret
hlt
xchg
call
incb
xchg
shl
in
hlt
xor
fcmovne
idiv
loopne
fsubr
xlat
cmp
sarb
out
in
loop
into
out
test
out
ror
icebp
sti
xlat
aad
in
icebp
test
loope
cmp
leave
xchg
loopne
in
out
nop
mov
lret
std
rol
or
shl
in
leave
out
mov
jmp
aas
xlat
cmc
div
std
cmp
aad
cmp
fdivp
xlat
loopne,pt
ljmp
orb
sub
call
aas
cmp
fdivrs
ds
xlat
lret
les
into
lret
leave
xor
aam
iret
ss
iret
hlt
loope
aas
push
hlt
std
in
loopne
out
leave
into
into
ror
iret
ljmp
in
aaa
sbb
push
rcl
ret
or
xorl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
xorl
xor
cmp
je
mov
mov
sub
add
mov
andl
mov
sub
andl
xor
jmp
into
int
fstp
aam
or
pop
lock
cmp
cmp
jle
in
ljmp
leave
lock
shl
aaa
out
cmp
cmc
loop
stc
sti
loop
ret
mov
cld
xchg
out
into
sub
bnd
not
ror
shl
out
shl
rcr
mov
sti
test
in
xchg
lret
aaa
loop
cmp
cli
aaa
cmc
rcl
in
out
fsub
fdivr
out
mov
loopne
adcb
repz
cmc
shl
rcr
loop
lock
in
leave
sbb
into
mov
rcll
stc
shl
fidivrs
out
cmc
shl
out
les
xchg
into
test
in
mov
xor
cs
ljmp
cld
mov
stc
out
out
lea
nop
out
xlat
ljmp
aas
cld
cmp
cmp
jecxz
call
in
in
in
shl
aaa
shl
out
into
cli
ds
fmul
sti
xchg
fdivr
repnz
loop
mov
int3
out
xchg
xchg
rcr
out
call
cmp
repz
jmp
sub
cld
cld
cmp
fadd
sar
sar
mov
xchg
xchg
nop
xor
jmp
cmp
shl
cmp
movb
sbb
mov
into
repnz
das
out
out
iret
jmp
cmp
lret
cmc
xlat
idivb
cld
cmp
mov
xchg
hlt
loope
not
aad
sarb
sti
iret
xor
cli
ret
mov
test
mov
repnz
enter
in
lock
ljmp
ret
mov
loop
mov
mov
test
cmc
lock
icebp
xor
fcmovnu
cli
cmc
aaa
sti
fstp
icebp
aam
jmp
int
cld
loope
in
in
jecxz
int3
fstp
in
fcomip
aas
faddp
lock
loope
test
fmuls
adc
ret
fidivl
out
fnstsw
fdiv
xor
fsub
mov
fimuls
out
aam
in
int
xor
cli
shr
fldln2
shr
lock
repnz
adc
inc
ja
add
test
add
mov
subl
jmp
leave
rol
ret
int
cwtl
stos
cltd
fs
int
adc
jle
cmp
jle
ret
enter
dec
mov
int
xchg
cmc
xlat
ror
fmul
idiv
aaa
rcl
filds
lret
sub
addl
fucomi
fidivrl
loope
aad
ret
loope
ljmp
mov
in
mov
xor
int3
lock
fdecstp
into
xlat
rcl
test
enter
ljmp
fidivs
int3
shl
sub
cmp
adc
shl
roll
and
xchg
int
shlb
aam
rcl
loopne
jecxz
shl
ljmp
ljmp
jmp
ss
cmp
in
in
aad
jmp
fadd
lret
sbb
loopne
rolb
cmc
sti
aam
cmc
ljmp
neg
ffree
or
vpaddusw
xchg
hlt
int3
shl
aaa
lret
cmp
fmulp
sbb
fcmovu
test
mov
loop
adc
in
ret
iret
leave
jmp
out
ret
int3
and
cmp
stc
mov
lret
jmp
mov
in
in
repz
xor
int3
sti
hlt
lret
jecxz
addb
enter
sti
xchg
xchg
filds
out
shlb
sti
out
sbb
shl
cli
test
mov
iret
aad
lret
in
das
lret
iret
ret
fsubp
ds
xchg
enter
loopne
int3
mov
popl
ror
out
cli
out
fyl2x
idiv
and
ds
jmp
mov
int
lret
divl
jmp
hlt
cmp
fnstsw
out
in
rolb
std
ffree
std
out
jmp
jmp
sub
in
repnz
repz
not
fdivr
ror
call
mov
fsts
lock
hlt
imul
div
cmc
fmul
fdivrl
fstp
mov
lea
cmp
int3
mov
cmp
shl
clc
cmp
test
xlat
div
test
jmp
ljmp
aam
cmp
aam
cmp
ss
add
movl
jmp
mov
incl
xor
jmp
into
into
rol
rol
rcl
mov
or
inc
fldenv
cmp
jle
sti
rcl
aam
test
enter
orb
out
cmp
divb
lock
xchg
loopne,pt
ret
mov
out
incb
in
xlat
lret
lret
cld
cmp
loop
clc
fcomp
jmp
shr
cmc
das
cs
aaa
in
fdiv
int
fcmovnbe
lret
loop
loope
xchg
xlat
in
mul
test
fisttps
shr
out
sti
cld
fadd
xor
ds
test
loop
ret
mov
lret
lret
shl
xlat
xor
clc
iret
fnsave
iret
aaa
iret
cmp
roll
ret
cld
cli
sub
dec
lret
lret
leave
fdivr
lock
pushl
xchg
in
ljmp
xchg
xchg
lock
fcos
lock
fldl
int
xchg
int3
xchg
xor
idiv
shr
cmp
fldl
hlt
iret
ret
sar
call
roll
ror
jmp
rcl
out
aad
jmp
cmc
fsin
std
sarb
loopne
cld
leave
in
test
sti
cmp
sar
test
aaa
aam
jecxz
clc
fcmove
into
stc
into
int
xchg
call
cli
leave
lret
fmul
loope
hlt
shlb
shr
fidivl
in
cmp
aam
addl
out
ffreep
out
rcll
out
ljmp
repnz
fdecstp
rolb
xor
cld
mov
leave
iret
repz
hlt
aam
call
aaa
ds
cmp
loopne
fdivrp
testb
xchg
xchg
repnz
hlt
xor
icebp
cmp
jmp
into
test
xchg
mov
mov
mov
xchg
out
sar
fidivrl
icebp
jmp
aaa
cld
loop
jecxz
cld
faddl
lret
std
ljmp
ret
sti
repz
xor
hlt
aad
sar
jecxz
int3
in
rcll
idivb
lock
loop
aam
hlt
jecxz
jmp
sub
sbb
xchg
lret
das
int
cmp
int3
ss
hlt
add
mov
jmp
ret
leave
lret
aad
flds
in
dec
jle
div
roll
test
or
fildl
in
int3
jmp
aaa
iret
cmp
ljmp
orl
test
int
int
lock
xlat
out
cmp
loope
cmp
aam
in
or
jmp
iret
fiadds
sub
xor
xlat
out
fdivrl
jecxz
cli
rol
std
aad
call
mov
jecxz
sub
out
hlt
in
fcomi
into
stc
jecxz
icebp
sti
in
mov
xor
loop
lock
lret
out
fucom
std
lret
sti
lret
stc
std
fsub
cmp
cmp
lret
lock
loop
out
xchg
xchg
das
ror
xor
fsubr
cmc
lret
into
sti
fmul
iret
xchg
bnd
addb
mov
repnz
jmp
out
ss
into
repnz
ds
faddp
cli
cmp
loop
in
lret
out
repnz
lret
adc
loope
loop
cmp
shl
int3
out
jmp
aas
xlat
out
mov
orb
mov
lock
hlt
leave
out
sti
lret
rol
aas
clc
repz
cli
int
in
int3
std
shr
loopne
loope
xor
test
std
repnz
fnsetpm(287
jecxz
test
add
mov
mov
in
sar
lock
xor
xor
cmp
sti
in
stc
test
xor
test
lret
fidivl
icebp
out
into
cli
in
call
fdivr
mov
incb
jecxz
in
stc
cmp
cld
lock
cli
out
aas
aad
lret
fcomip
in
test
sbb
repnz
aas
aaa
ljmp
iret
hlt
out
in
into
repz
std
call
mov
or
cmp
into
push
ror
jmp
iret
addl
test
in
shr
call
ss
leave
fdivr
ss
out
xlat
not
xchg
mov
addl
cmp
in
into
aam
aas
rcl
fcmovnb
aam
jecxz
faddp
clc
in
ret
in
mov
shrb
ret
xor
fsub
fistpll
cmp
mov
jmp
iret
fmul
aad
clc
sub
mov
dec
les
cmp
jle
in
cmp
mul
ds
cld
test
cld
repnz
div
out
aam
repnz
call
iret
out
out
test
in
call
xor
aad
jmp
cmp
dec
aad
out
ds
lds
call
ljmp
ljmp
neg
out
cli
sbb
xchg
shl
std
in
enter
into
cmp
xor
aas
aaa
cmp
sti
cmc
fiadds
int3
mov
out
repnz
enter
in
hlt
shl
roll
jmp
out
out
ret
and
aad
ss
leave
test
jmp
in
loop
fst
jmp
fisttps
ljmp
int
ss
stc
out
repz
xchg
mov
into
call
jmp
enter
fdivr
ds
in
loop
xor
sar
fimull
aam
idiv
lret
into
sti
shr
xlat
icebp
enter
mov
loop
in
int3
sbb
xchg
hlt
shl
shr
repnz
xor
cld
cmp
int
rol
in
call
cli
ror
jmp
in
into
repnz
repnz
fmul
sti
rcr
loop
out
idivb
cmp
in
loope
lret
xchg
xor
aam
sub
repnz
fidivrs
loope
faddl
ljmp
int3
xchg
mov
out
fsub
cmp
aaa
ss
fiaddl
in
test
or
ljmp
enter
int3
fcmovnu
imul
xor
and
int3
jecxz
mov
call
int3
loope
cmp
lret
out
repnz
into
fnop
aad
out
cld
addl
xor
das
out
in
cmp
fstpt
cmc
ds
flds
cli
enter
loopne
test
out
int
cmp
cmp
fdiv
hlt
out
shl
lock
orb
loop
fisttps
out
ss
aam
xor
add
mov
jmp
mov
mov
jmp
rcl
xlat
fcmovnu
rcr
in
repnz
insl
jo
sub
jle
cmp
jle
jecxz,pt
cmp
shl
shr
loop
mov
jmp
loop
leave
shl
aaa
int3
lock
repnz
call
sbb
cmp
xchg
xchg
das
out
xor
cmpb
bnd
ret
loopne
lret
inc
orb
lret
aad
jmp
std
out
into
std
clc
lock
ljmp
xor
out
in
sar
in
ror
cmp
call
repz
out
out
in
loopne
test
xchg
fimuls
cmc
leave
in
aam
lret
cmp
out
roll
mov
cli
in
int3
int3
xchg
mov
cmp
fdivp
repnz
stc
sar
imul
sar
lds
xchg
xchg
fsubr
enter
fdivr
call
cmp
icebp
test
sar
enter
xchg
test
repnz
into
in
ss
fdivr
cmp
cmp
mov
fiadds
aaa
cmp
xlat
cmp
ljmp
icebp
mov
mov
in
in
mov
fsub
xchg
out
icebp
xor
jecxz
xlat
ffree
stc
fdiv
fucom
fxtract
cmc
std
test
mov
xchg
test
sar
cli
test
sti
repnz
ds
jmp
loope
imul
xchg
mov
jmp
loope
in
repnz
clc
fcmovbe
fstp
cmc
sarl
xlat
addb
mov
fimuls
fsubr
out
sti
std
fnop
ret
repz
fcomp
cmp
loopne
int3
jmp
int
leave
stc
fincstp
shl
rcl
test
cli
xchg
fsqrt
in
in
addb
call
cmc
out
fidivs
lret
aas
aam
and
or
stc
shl
int
mov
aad
out
int3
ss
fxch
icebp
cld
jmp
into
ds
sbb
fcomp
out
lret
hlt
into
xlat
stc
mov
lret
cli
out
jmp
repnz
div
shr
out
rcr
mov
shlb
xor
inc
or
add
enter
fcmovnbe
fcomp
insb
jae
ficomps
shlb
leave
jle
cmp
jle
fsubrp
icebp
cmp
cld
stc
and
std
test
int
std
iret
xchg
jmp
shlb
ss
rcl
loopne
cld
repz
mov
fldlg2
mov
fmulp
xor
int
shr
clc
rcr
adc
test
and
ljmp
lret
out
cmp
sarb
cld
in
fimull
or
out
xchg
mov
aaa
int
shl
jmp
int3
rol
ret
ret
cld
mov
test
in
loop
jecxz
ret
fcmovne
leave
iret
cmp
loopne
loop
cmp
rol
fcmovne
enter
loop
sti
into
jecxz
repz
shl
loopne,pt
lret
fiaddl
aam
cmp
xor
repnz
das
dec
lret
idivl
in
cmp
clc
call
and
clc
in
into
repz
out
fcmovne
fdivp
cmp
xlat
sti
in
loope
fsub
ret
out
fdivr
pause
out
icebp
out
ret
aam
xor
iret
clc
repz
fdivr
cmp
rol
mov
out
in
int
leave
xchg
mov
out
in
lock
fmul
loop
clc
cmpb
not
cli
cmp
loope
mov
icebp
out
aam
fcmovu
ljmp
in
loope
fadd
int3
ljmp
xchg
inc
clc
in
ss
call
into
aad
ret
aad
testl
cld
xchg
xlat
clc
call
repz
stc
les
enter
inc
jecxz
xor
out
leave
in
cmp
fnsave
divb
addb
mov
ret
xchg
out
std
roll
repz
in
cmp
stc
shl
cmp
add
int
stc
lock
xchg
xchg
ret
hlt
cmp
enter
out
ret
icebp
aas
clc
dec
sti
enter
enter
loop
xchg
mov
sub
out
lret
rcl
sar
into
repnz
clc
std
and
stc
call
out
xchg
in
aam
out
aad
les
or
add
pop
jmp
aas
lret
ror
lahf
jmp
mov
test
jle
cmp
jle
out
int
aas
repnz
icebp
cld
add
cmc
mov
sti
clc
loopne
int3
decb
repnz
test
cli
rol
cmp
loop
fnstsw
stc
sub
xchg
xchg
lret
and
xchg
in
repz
divb
cmp
xlat
cmp
test
rol
aam
mov
lea
ret
mov
cmp
sti
repz
and
cli
roll
in
xchg
call
jecxz
hlt
repnz
lret
cld
fsubr
mov
rolb
out
in
test
xor
stc
in
cmp
cmp
out
jecxz
sbb
imul
fmul
out
in
rorb
aad
int3
int
out
cmp
rol
loope
mul
xchg
in
mov
mov
icebp
stc
lock
int
rol
test
cmpl
in
sbb
xchg
out
fnstsw
loope
stc
shl
ss
cmp
cmp
rcl
std
fimull
fdivp
in
jmp
cmp
int3
icebp
bnd
jmp
leave
nop
xchg
int
iret
fdivp
fxch
and
fsub
cmc
icebp
in
out
jecxz
fxch
lock
rol
divl
in
int3
aam
jmp
sti
clc
loopne
rcl
call
and
out
out
icebp
das
hlt
into
int
cmp
sti
cmp
test
mov
orl
in
int3
in
leave
cld
xor
div
cmc
ftst
out
cli
int
out
test
int3
adcl
hlt
fcomp
std
in
std
cmp
cmp
dec
cmp
test
cli
in
icebp
mov
rcl
hlt
hlt
out
jecxz
mul
xor
fcmovu
jecxz
rolb
test
sub
aam
jecxz
ret
in
mov
lock
cmp
aas
loopne
shl
imul
mov
faddl
xchg
out
jmp
hlt
shr
aaa
cmp
fcmovbe
cmc
xchg
fsts
xor
out
pop
ret
push
mov
mov
xor
mov
jmp
ror
aas
fstp
int3
fisttpl
dec
shrl
inc
int
jle
add
idivl
cli
std
fcomip
hlt
ret
xchg
fcmovnbe
stc
cld
fdivrp
fadds
ljmp
jmp
lds
cmp
roll
fsubr
leave
xchg
rolb
cmp
repnz
std
testb
jecxz
nop
jmp
shlb
aaa
ss
ss
clc
jmp
enter
repnz
cld
ret
and
mov
fimuls
xor
lret
xor
hlt
fdiv
lret
jecxz
div
fcmovb
enter
mov
rolb
sub
cld
rcl
out
adc
lock
xchg
fldl
aam
enter
out
xlat
iret
ljmp
icebp
fld
xlat
lret
xchg
xchg
iret
shl
repnz
in
cmp
std
fdivrs
int3
idiv
loop
roll
sti
leave
jecxz
out
adcb
iret
test
in
icebp
loope
lds
jmp
std
enter
iret
mov
out
ljmp
cld
sarl
fcmovnbe
lock
cli
mov
std
test
not
fsub
into
hlt
xor
xor
int
xor
out
cmp
in
ljmp
adc
out
out
jmp
loop,pn
jecxz
cmp
out
sbb
jmp
test
rcll
fcmovnb
lock
call
ret
incb
stc
std
jecxz
mov
into
repz
lock
imul
xlat
int3
cmc
testl
neg
test
lea
cmp
cmc
lret
cmp
test
sti
ret
mov
int
xchg
aam
jmp
jecxz
vpsrlw
fcomip
aam
out
test
sub
enter
xchg
icebp
hlt
in
lret
xlat
fstp
idiv
not
aad
out
jmp
fists
icebp
cli
repnz
cmp
icebp
clc
into
in
fidivrl
shl
sbb
cld
std
mov
pop
out
hlt
xchg
icebp
in
in
icebp
mov
and
or
jmp
ret
ret
rcl
aad
sbb
das
add
jle
cmp
jle
lret
stc
clc
ffreep
repz
std
sti
in
lock
lea
aam
in
leave
cmp
fsubr
int3
and
sti
in
not
sti
lret
in
in
fmull
ror
clc
lret
lret
cmp
loope
lock
clc
shl
out
mov
int3
lret
rol
icebp
aaa
out
ljmp
addb
mov
out
fisttpll
hlt
nop
icebp
loop
fidivrl
shrb
enter
lret
faddl
orb
xchg
std
or
out
aam
shr
hlt
sti
sbb
fadds
orb
enter
xchg
test
ss
in
clc
cmp
rcr
test
shr
test
sarb
ljmp
int
in
xchg
shr
iret
ret
iret
cmp
out
fildl
aad
cmc
in
mov
out
xchg
cmc
ret
sarl
in
jecxz
mov
mov
cli
jecxz
sti
lret
fcmovnb
into
test
xor
cld
out
aas
icebp
test
aaa
aam
jecxz
fadds
mov
or
int3
in
loope
in
stc
std
fdivs
not
cmc
aam
leave
out
int3
int
leave
xchg
icebp
cmp
into
xor
div
test
aad
rcr
jmp
in
icebp
enter
mov
in
cli
into
int
into
shr
cmp
shl
stc
clc
in
loopne
int3
test
nop
rol
fists
in
repnz
out
shl
clc
loope
clc
rcr
fadd
cmc
fstp
lret
jmp
xchg
loope
lret
stc
repz
sti
out
roll
out
not
out
aam
aas
out
lock
lret
fimuls
aad
fdiv
cmp
aaa
into
div
lock
in
enter
test
or
in
out
iret
xor
clc
stc
cmp
aaa
int3
rol
vpslld
hlt
jmp
rorl
jmp
rcl
aam
std
fmul
shll
aas
sar
xlat
fcomip
icebp
loop
or
call
sbb
push
mov
jmp
lret
aad
int
ss
rcll
in
sarb
adc
jle
out
ret
lret
int3
icebp
out
cmp
in
aam
xchg
test
xchg
cmc
test
clc
xor
cmp
xlat
sar
aam
lret
in
call
lock
shr
out
jmp
fdiv
xor
dec
in
fnstcw
loope
or
xlat
cli
addb
icebp
divl
xor
xor
jmp
cmp
not
xor
test
cmp
test
jmp
cld
xchg
leave
sub
fsubr
fmul
icebp
ljmp
fcomp
cli
jecxz
ret
ljmp
nop
int
rcl
aad
fdivl
aam
cmp
iret
std
xlat
shl
adc
in
fstl
xor
aaa
lock
out
repnz
aas
ret
test
aam
cmc
repz
clc
loope
enter
in
ljmp
rol
ret
lret
out
fucomp
clc
icebp
ds
xchg
xchg
std
xchg
jecxz
loope
sub
in
not
aas
in
sti
fcmovb
into
loope
cmp
stc
test
clc
int
out
in
shr
out
out
stc
fdivl
testl
addb
xchg
int
xor
out
imul
idiv
sarl
cli
lock
std
div
fmul
cli
fisttpl
icebp
into
aad
neg
rcr
rol
out
cmp
jecxz
cld
in
loope,pt
out
cmp
int3
test
hlt
iret
shl
in
fxch
in
repnz
ss
loopne
int3
loope
xchg
test
icebp
fcmovu
jmp
lret
ljmp
aam
stc
cmp
sar
div
in
leave
leave
iret
in
repnz
clc
mov
jmp
xchg
icebp
leave
shl
call
fcmovu
ffreep
cmp
xlat
shl
loop
lret
int
fcmovu
lret
iret
int
cmc
xchg
lock
in
jmp
not
rcl
in
cmp
test
repnz
div
call
cld
sar
xchg
shl
in
ss
cmp
std
rcr
div
shl
jmp
jecxz
sub
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbbl
jmp
ret
ror
int
outsb
xor
rcl
jle
adc
jle
repnz
test
jmp
sub
out
call
ss
hlt
rol
testb
mov
out
fsubr
into
int
enter
fcmovb
stc
div
aam
and
aaa
incl
loop
xlat
jecxz
jmp
mov
cli
out
fdiv
shl
out
neg
test
out
rcr
std
aam
rorb
aad
repz
icebp
in
aad
cmc
fcmovu
shr
loope
mul
std
sar
xchg
nop
jmp
repnz
out
fsqrt
mul
enter
std
vcmpps
cmp
stc
mov
clc
lret
fcom
out
lret
xlat
cmp
ret
mov
mov
out
mov
mov
repnz
shl
cmc
xlat
sub
loopne
fsub
test
rcr
loope
in
loope
sbb
rcl
cmp
stc
fnsave
lret
loop
icebp
and
fldl
xchg
mov
lock
not
loopne
fbstp
iret
ret
stc
aad
mov
testl
in
shlb
lds
xlat
clc
xor
addb
shl
mov
out
cli
lret
push
jecxz
aad
stc
cmc
jmp
lret
ds
or
cmp
cmp
in
fucom
jmp
in
ror
fstl
fsubr
lret
enter
hlt
stc
jmp
ljmp
repz
shr
sarl
xlat
fsqrt
test
fldl
dec
in
fcomp
loopne
test
mov
in
rcl
lret
icebp
aas
ror
rcr
xor
test
enter
test
rcl
ret
cmc
fucomp
cmp
sti
aam
loopne
leave
fcmovbe
int3
out
sub
in
ss
ds
in
sar
shl
stc
fst
cld
stc
into
fisttps
int
lret
ret
cmc
xlat
mov
adcl
xor
mov
adcl
add
jmp
fcom
xlat
push
xlat
outsb
sarb
jle
adc
jle
fcomp
xor
cmp
rorl
mov
decb
xor
iret
jmp
out
fxtract
aam
fcmovbe
hlt
iret
loopne
incb
in
jecxz
fmull
xor
imul
test
fcmovnb
fcmovnbe
icebp
test
jmp
loop
out
in
loopne
fmulp
int
ret
enter
cmp
call
in
div
xchg
in
in
mov
nop
call
nop
fcomip
rcl
xor
int3
cmpb
cmp
hlt
jmp
out
std
repz
hlt
shl
xor
xor
repz
fsubr
lret
int
cmp
in
fdivr
std
loope
repnz
jmp
jecxz
into
out
shl
rcr
test
test
clc
aam
into
movl
in
xor
lock
cmp
cmp
icebp
loope
addl
out
out
in
loop
cmp
fcomi
xor
aad
in
in
cmp
mov
xchg
sub
mov
into
aam
xor
clc
lock
into
out
cmp
lock
testl
mov
xlat
rcr
in
hlt
fdivrl
rcl
sar
fcmovu
fdivp
in
fxch
jmp
mov
ror
out
in
jmp
out
icebp
std
std
fcmovnb
mov
test
mov
ljmp
cmp
in
leave
sarl
fsubp
cmc
fcmovb
out
ret
ror
xchg
mov
repz
cmp
into
lret
div
cld
fildl
cli
mov
ret
out
out
lret
out
hlt
mov
loop
repnz
repnz
xorb
sti
jecxz
shl
jecxz
int3
fstp
fdivrp
ljmp
shll
cmp
xlat
out
cmp
cli
in
jmp
cli
xchg
hlt
call
loope
jecxz
int
icebp
shl
fcmovu
clc
iret
clc
clc
cmp
stc
fucomp
fimuls
inc
hlt
and
movb
lea
mov
jmp
rcl
rol
rol
rcl
mov
out
xchg
aaa
neg
jle
adc
jle
loop
xchg
cmc
hlt
xchg
loope
repnz
xor
cmp
cmp
test
sbb
lret
decb
ror
cld
into
lret
xor
test
ret
incl
incl
rcll
icebp
ss
sti
cmc
in
repz
cmp
icebp
repnz
sti
out
orb
out
test
out
in
cmc
shl
sbb
cmp
aam
out
call
xchg
xor
xor
aaa
fdiv
ror
aas
sar
lock
mov
out
test
clc
sar
ljmp
cmc
enter
cmp
std
shl
loopne
shl
jecxz
sbb
xchg
fucomi
sub
hlt
icebp
xor
sub
ljmp
lock
ljmp
enter
mov
out
sub
les
shr
xor
cmp
testb
lret
mov
lret
out
xchg
sbb
xor
lret
rcr
rcl
lret
fpatan
in
fadd
shl
sar
stc
mov
jecxz
mov
repz
mov
xchg
aad
out
fstpt
fidivrl
aas
cld
cmp
jecxz
fstp
xlat
in
mov
lret
ret
int
loopne
out
sar
repnz
not
ljmp
hlt
test
cmp
fcmovnbe
int3
call
in
test
lret
lock
fidivs
loope
cmp
xchg
div
jmp
mov
sbb
out
nop
mov
adc
cmc
jmp
jmp
int
fnstsw
stc
loopne
icebp
shl
call
cli
fsubr
out
jecxz
rcl
leave
iret
aaa
sti
int
cmp
cmp
ret
cmp
fldl
call
xchg
in
out
xor
enter
cmp
into
cmp
ljmp
mov
into
shr
xchg
hlt
jecxz
rcl
jmp
fnstenv
aaa
in
idivl
aam
sti
xlat
leave
mov
lret
loop
out
lret
jmp
out
lret
sarb
incl
add
add
add
or
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
push
push
push
call
jmp
mov
movl
xor
addl
sub
mov
sbb
movl
not
movl
andl
mov
mov
push
jmp
into
mov
fmul
iret
fucomp
sub
inc
dec
call
jle
adc
jle
hlt
fadds
xchg
xchg
iret
cmc
mov
loop
shll
aaa
lret
shll
cmp
shl
fcmovu
out
icebp
call
lret
imul
lret
hlt
cmc
xor
sti
ret
jmp
xlat
cli
xor
loop
out
inc
testl
ljmp
imul
xor
fmulp
neg
sar
rorl
xor
xor
xor
shl
iret
cli
xlat
rcl
rolb
test
icebp
cmc
iret
shrb
in
cmp
cmp
aam
fsin
out
addb
cld
ljmp
in
rcl
leave
div
out
jmp
fdivr
out
loop
ret
in
test
loopne
fdecstp
imul
cmc
out
call
xlat
loop
loop
cli
xchg
mov
out
cli
cmc
lret
aam
std
cmp
cmp
std
loope
mov
out
cli
incb
ret
fsub
aaa
ds
cmp
addl
fucom
xchg
int
or
lock
fsubr
xor
out
aad
xor
in
fdivr
xchg
mov
xchg
xor
into
xor
lock
icebp
lret
out
sub
aad
aas
call
out
mov
addb
loop
sti
xor
out
repz
rolb
enter
adc
loopne
xor
into
cmp
xlat
clc
iret
sbb
cld
cld
xchg
xlat
cld
lock
out
test
xlat
in
cmp
fucom
ror
cmp
xor
mov
fmulp
jmp
loope
loope
into
fsubr
ret
cmp
sti
ror
hlt
mul
cmp
loope
loopne
loop
aam
mul
mov
test
aad
cld
cmpb
repnz
fildl
loopne
loop
xlat
fdiv
icebp
loope
lock
decl
mov
movl
add
jmp
movl
mov
mov
movl
inc
jmp
ret
xlat
rcl
lret
xchg
push
sbb
adc
add
in
loope
xor
xor
cmp
fistpll
out
ds
and
mov
or
xchg
fidivs
xor
xor
das
mov
hlt
rcl
fsubp
std
xchg
call
iret
nop
loopne
jmp
loop
fcmovbe
fcmovne
rolb
aas
faddl
sub
ror
repz
int
cmp
xlat
fcompp
int3
jmp
roll
out
sti
in
loopne
leave
mov
out
cmp
iret
iret
repnz
cmp
ret
test
loop
lret
cli
fmulp
repnz
mov
fld
ret
repnz
fld
cld
loope
std
out
enter
mov
sti
std
ret
out
repnz
xor
sti
ds
aad
cmp
fsub
fmul
cmp
fcmovb
shl
div
idivb
ss
out
cmp
in
aas
add
fcomp
sti
loope
xchg
std
fildl
icebp
incb
not
hlt
cmp
rcr
repnz
cmp
shl
testl
xchg
iret
into
xor
fcmovbe
or
fsqrt
out
adc
mov
std
decl
out
xchg
clc
ror
enter
lret
jmp
inc
fnstcw
jecxz
ret
in
jecxz
jmp
out
lock
repnz
xor
testb
ds
sbb
jecxz
std
fisttps
sub
cli
stc
jmp
fdiv
iret
f2xm1
cld
cmpl
int3
xchg
xchg
fcmovnb
xchg
into
out
cmc
xor
leave
lret
cld
int
sarb
cmp
loop
sti
fdivp
in
test
out
jmp
movl
into
cld
or
aad
fdivr
shl
in
mov
jmp
in
repz
fucomi
out
icebp
fmul
loop
fdiv
ret
ret
ret
mov
out
in
loope
shl
out
ret
out
out
xor
loopne
cmp
rcr
cmp
movl
jb
dec
jmp
aam
fadd
fstp
pusha
shl
subl
jle
adc
jle
in
ret
mov
out
mov
out
xchg
out
mov
xlat
out
sbb
cli
shr
call
out
lock
iret
shl
out
in
ljmp
clc
ds
cmp
in
mov
xlat
xchg
mov
hlt
cmp
mov
lret
cli
out
jecxz
clc
int3
mov
ljmp
test
out
xor
icebp
cmp
ss
fistpll
in
hlt
leave
loope
add
out
mov
or
cli
stc
std
int
fdivr
cmp
loopne
adc
ffreep
test
jmp
notl
xchg
in
out
lret
xor
out
sti
lret
cli
icebp
out
cmp
in
loopne
loopne
jmp
cmp
xchg
mov
aam
ss
sbb
in
loope
fadds
lds
mov
xor
shl
cmc
sar
iret
idiv
cld
sti
iret
fcmovbe
enter
and
fcmovne
addl
stc
int
cld
div
cmp
ds
in
std
test
int
out
mov
hlt
loopne
aam
test
sarl
ds
aas
repnz
clc
xlat
cmp
fxch
std
repnz
lock
fsubr
rol
sar
cmc
jmp
test
std
in
enter
fucom
test
iret
div
ss
loopne
xlat
fdiv
out
out
lret
out
jmp
ror
leave
idiv
aad
xor
cmp
faddp
fsubp
clc
rolb
test
xchg
xchg
mov
xor
fcmovnb
shl
aad
aam
cli
out
fcmovnbe
xchg
ret
repz
jmp
nop
lret
shr
shl
xor
icebp
out
out
ds
sar
aad
loop
repz
aam
mov
sti
in
ljmp
ss
fsubp
adc
fmull
into
cmp
out
cmc
xor
push
clc
sbbl
mov
addl
jmp
fcomp
fistps
je
jae
dec
inc
loopne
jle
add
repz
rcl
out
ret
shl
jmp
test
nop
xchg
loopne
out
jmp
ljmp
hlt
int
aad
cmp
testl
xchg
lock
ljmp
enter
fstp
loope
ret
xchg
jecxz
clc
in
fcmovu
addb
xor
out
xlat
idivb
and
roll
jmp
xchg
mov
xor
xor
out
cmp
loop
bnd
ljmp
xchg
fcomip
jmp
jmp
div
repz
loope
xor
cmp
sti
stc
fcomi
test
in
test
in
xchg
loope
xor
neg
aam
idiv
cmp
addb
jmp
ret
xchg
shr
call
xlat
out
jmp
lock
in
cmp
sarl
fcmovu
out
fisttpll
repnz
fidivs
cmp
aaa
out
neg
xlat
xor
rorl
in
or
test
icebp
in
in
std
call
xor
int
in
repnz
jmp
fcomip
sub
fcom
ljmp
std
mov
xlat
enter
out
repnz
iret
test
hlt
decb
out
mov
lock
hlt
div
loope
shl
in
lret
ds
lret
filds
jmp
loopne
mov
in
or
in
das
call
loopne
addb
loop
ret
div
leave
jecxz
lret
int
sar
xor
xor
lret
ret
into
std
sbb
mov
loop
lea
not
div
iret
in
call
lock
stc
repz
fmul
hlt
test
sti
out
cld
out
xchg
jmp
ljmp
into
cmp
xor
inc
cmp
mov
in
test
xchg
sarb
idiv
cmp
fidivrs
out
loope
int
ret
ret
lds
xor
add
movl
cmp
movl
jmp
iret
aas
aas
ror
rcl
ret
pushf
mov
xorl
jle
add
out
fdivr
loope
shl
aam
out
lret
out
ss
jmp
aaa
cmc
call
int3
sub
xchg
ret
out
in
xlat
cmp
ds
in
mov
in
int
in
in
jmp
rcr
ret
hlt
xor
hlt
ljmp
std
fidivrl
out
icebp
xchg
xchg
lret
jecxz,pn
clc
fcomi
out
fucomp
stc
fidivrs
lock
test
ljmp
int
out
jmp
in
icebp
xor
in
out
std
lock
sti
rcr
sub
jmp
fsubrp
out
shrl
test
into
mov
in
fsubr
add
flds
sti
repz
jmp
in
call
mul
loope
ret
call
int3
sbb
shr
cmp
icebp
jecxz
in
xor
shl
sti
icebp
hlt
idiv
std
jmp
addb
fsub
fyl2x
ss
cmp
cmp
cmp
rolb
mov
lret
int3
jmp
iret
fstp
fcomip
xlat
test
div
ret
mov
mov
cmp
lock
lret
aas
int
idiv
mul
fmull
jmp
test
in
repnz
aaa
in
call
in
hlt
cmpl
jecxz
cmp
rol
ljmp
fcmove
mov
loop
xor
fldl
jecxz
test
div
fxam
addb
int3
xor
into
out
ss
repnz
ret
rorb
or
test
ljmp
cmp
leave
aas
rol
cmp
ds
repz
in
dec
loope
iret
jecxz
mov
int3
aaa
aam
fmul
fstp
stc
shr
aas
loope
in
les
lock
lea
shr
sti
fdivrl
int3
je
adc
jmp
int3
rol
aad
pop
pop
movsb
or
dec
lods
add
adc
jle
ljmp
fcmovb
ffree
fsqrt
in
frstpm(287
lret
nop
loopne
aad
xor
xlat
idivb
repz
in
lock
lret
sti
icebp
jecxz
shl
lret
cmp
xor
fcmovnbe
ffreep
fcomip
aad
fldl
in
in
out
aam
xor
cmc
aad
cmp
xlat
rcl
cld
sti
clc
aad
xchg
mov
rol
xor
aad
in
rol
std
stc
loop
xor
inc
ljmp
loopne
xchg
jmp
enter
repz
out
repnz
xor
icebp
adc
neg
div
fdivrs
ret
fcmovne
filds
int3
cs
sub
cmp
xor
hlt
iret
sarb
mov
addl
mov
loop
xor
in
aad
fiadds
repnz
cli
loope
jmp
mov
hlt
leave
leave
xor
sti
cmc
cmp
hlt
sar
in
jmp
call
xchg
lock
ss
call
not
xlat
loop
clc
sar
loopne
sbb
jmp
xchg
xor
fcom
std
into
into
cmpb
repnz
mov
loope
test
out
mov
out
divl
lock
in
jmp
xor
stc
cmp
xlat
enter
mov
ljmp
jecxz
xor
jmp
out
idiv
out
cmc
xchg
mov
test
rolb
fisubrs
ljmp
jmp
loop
cmp
aaa
roll
incb
aam
aam
stc
xlat
sti
ljmp
fdivr
std
fmull
out
int3
mov
aam
divb
repnz
shr
aaa
cmp
repz
fdivrp
and
out
in
repz
vcmpss
out
sti
out
cmp
cld
call
xchg
loopne
loopne
les
pop
ja
add
add
add
shlb
pop
ja
add
pop
ja
add
add
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
mov
jmp
ret
into
sarl
rol
rcl
ja
sbb
leave
jl
jle
adc
jle
xchg
xor
into
rcl
lret
std
loop
ds
fidivrl
fsubp
shl
fmul
mov
jmp
enter
fucomi
repnz
lret
rcr
rcl
lock
leave
leave
rcr
test
loope
in
test
xchg
lock
xor
xorb
in
jecxz
aas
aam
test
aam
aam
loop
int3
xor
ficoms
stc
fcomi
hlt
rcl
rol
aaa
sti
aas
cmp
mov
in
fsincos
repnz
xchg
xor
out
xor
iret
clc
xor
in
aam
add
enter
nop
mov
xor
aad
int3
fidivrs
enter
jecxz
cmp
fst
mov
icebp
xchg
aam
jmp
hlt
cmp
aaa
add
flds
call
enter
adcb
cmc
std
xor
iret
lock
out
cld
icebp
fcmovb
hlt
loope
out
loope
out
xchg
clc
in
int
call
iret
cmp
div
test
loope
in
in
out
xchg
shl
int3
addb
lock
cmp
ljmp
fidivrl
loop
fcmovne
lret
in
repnz
in
out
shr
in
ljmp
int3
cmp
mov
repz
loop
loop
icebp
jecxz
xchg
or
ret
sub
cmc
cmp
div
fstp
shl
sti
push
xchg
lret
jecxz
cli
enter
xchg
jecxz
fidivrl
lret
int3
repz
rcl
jmp
cld
in
roll
sub
fucomi
jmp
sti
out
rcr
ds
mov
fisttpl
xor
in
cli
sar
fldl
cli
decb
loop
leave
mov
in
out
into
rcr
clc
clc
sti
stc
cmc
loope
in
ret
mov
out
call
fdiv
int3
enter
fcmovne
cli
ds
xor
mov
add
movzwl
mov
jmp
leave
aad
movsb
inc
jb
pop
out
dec
psubsw
adc
jle
cmpb
fmuls
cli
jmp
xchg
imul
repnz
lret
cmp
enter
cmp
add
aad
mov
ret
mov
ljmp
imul
fcom
aad
ror
int
repnz
xchg
fisttpl
iret
mov
divb
jmp
cmp
fstp
ret
repnz
fdivr
nop
push
mov
out
mov
xor
cmp
xor
fdiv
sti
aas
cmp
cli
sub
icebp
in
xchg
loope
icebp
int
cld
rol
iret
in
shl
ret
ret
sti
jmp
mov
xlat
clc
leave
ffreep
int
shl
aam
shl
sti
jecxz
in
mov
xchg
shl
aad
aad
idivl
cld
enter
clc
cmp
in
imul
leave
out
nop
sub
xchg
out
f2xm1
cmc
cmp
cmc
repnz
rol
sarl
lret
les
sar
das
sar
enter
xor
cld
addb
in
cld
call
addb
out
cmp
repnz
cmp
push
test
xlat
xlat
std
hlt
aad
mov
out
or
out
out
out
shlb
cli
neg
shll
xlat
out
leave
out
call
xchg
fdivs
xor
repnz
ds
xor
fucom
movl
xchg
xchg
into
aad
cmp
shl
cmp
clc
cld
int3
cmp
fldl
jmp
lea
divb
jmp
aam
int
cli
add
repnz
jecxz
aad
int
lret
cld
adc
repz
in
in
int
iret
xor
ret
std
test
fadd
fisttpl
xchg
into
aam
hlt
cmp
out
aad
out
fpatan
cmp
fdivr
add
les
test
mov
out
xor
add
xor
add
jmp
ret
into
aam
aad
fst
stc
hlt
stos
xchg
push
xor
jle
add
leave
cld
repnz
lret
shl
cmc
iret
in
repnz
and
xchg
shl
repnz
lret
out
out
xor
shl
out
fcmovnu
fxtract
out
in
out
into
int
out
addb
aam
clc
int
leave
ret
ret
xchg
fdivr
aad
fdivr
mov
xchg
out
sub
lret
fptan
rcr
ret
lock
jmp
cmc
orb
xchg
fadd
test
cli
rcr
aam
jmp
lea
xchg
shr
fcmovbe
cld
fstpt
xor
hlt
hlt
rcr
mov
jecxz
in
inc
lock
jmp
xchg
jmp
fld
hlt
dec
std
cli
fmul
cmp
repz
loope
sbb
xchg
clc
fisttpll
jmp
enter
shl
repnz
mov
fcmovu
leave
fcmovu
mov
lock
repz
in
into
div
in
shr
into
cld
out
aad
cli
rol
aad
out
fcomi
jmp
nop
xchg
loop
nop
xchg
in
ror
out
das
lock
out
cmp
out
out
fidivrs
rolb
fsubrp
xacquire
hlt
rcl
repz
ss
rcr
aam
xchg
test
jecxz
out
out
xchg
lock
sti
cmp
incl
test
cld
call
xchg
jecxz
loop
mov
cmc
ret
call
shl
cmp
stc
mul
aad
decl
sub
out
rol
div
fbstp
fadd
iret
and
shl
icebp
out
out
decl
int3
rorl
clc
in
shr
leave
fdiv
cmp
aad
sti
test
test
mov
xorb
clc
ljmp
fnstcw
out
test
xchg
mov
xacquire
icebp
out
icebp
lock
rcr
stc
repz
xchg
out
jecxz
leave
enter
mov
jmp
aam
aad
fstp
movsb
ficomps
std
xor
add
int
stc
loope
lock
cmc
loopne
ljmp
iret
stc
fcmovne
cmp
lock
ret
in
jmp
in
in
loope
enter
les
cmp
stc
lret
aaa
lret
cmp
sti
sti
jecxz
mov
int
lock
out
lret
rol
sti
in
repnz
cld
std
cmp
cld
rolb
fsubr
xchg
call
out
jmp
loopne
jmp
lock
jmp
enter
mov
xor
ret
out
in
fnstcw
cli
cmp
jecxz
xchg
cmp
clc
mov
repz
out
cli
out
shl
fcomi
into
xlat
fidivrl
repnz
fsubrp
fmull
jmp
enter
xabort
xor
rcr
into
cmc
repnz
jecxz
cmc
sbb
loop
int
xchg
xchg
out
int
aad
fucomi
cmp
ss
clc
out
jecxz
cld
xchg
call
das
int3
cmp
aas
jecxz
cmp
out
fscale
fisttpl
mov
repz
fbstp
rcl
fstpt
cmp
cli
ljmp
shl
test
xlat
lret
and
sub
test
test
ror
cmp
ss
cmc
aam
ss
std
shl
out
sar
sub
fiadds
out
jmp
jecxz
shr
sti
fcmovbe
int3
jmp
xor
in
lea
mov
in
repnz
fxch
in
cld
clc
cmp
enter
aam
aad
rolb
in
int3
jmp
xchg
out
xchg
call
cmc
into
out
in
jmp
loope
xlat
flds
nop
fcompp
sti
repnz
in
lds
xlat
in
repz
in
stc
cli
loopne
clc
leave
sub
rcll
in
in
aad
int3
cmp
aam
stc
xlat
sarl
cmp
cli
xlat
fmul
lret
ljmp
loop
xor
imul
ljmp
inc
hlt
jmp
ret
lret
enter
int
cltd
movsb
imul
xchg
enter
out
jle
adc
jle
cmp
sar
test
xlat
test
aad
jecxz
xchg
lret
out
fdivrs
cmp
iret
faddp
ret
cli
shl
fcmovu
adc
in
xlat
call
out
mov
xor
cmp
out
jmp
cmp
sti
xlat
addl
sbb
in
out
std
lea
cli
xor
jmp
cmp
loopne
sti
lret
jecxz
les
enter
enter
xchg
mov
int3
into
leave
aaa
aas
out
xlat
sar
test
fst
repnz
loope
fcmove
xchg
aam
in
fdivrp
idiv
hlt
fcmovnbe
call
imul
loopne
fisttpl
ficoml
xchg
in
div
in
leave
leave
idiv
sarb
mov
mov
fcomp
mov
xchg
loope
ss
fnsave
cmp
lock
idiv
xlat
repnz
fsubp
ret
mov
loope
fxch
rolb
ss
sub
xor
sarl
cld
push
out
clc
ret
mul
mov
mov
ret
lock
out
fucomp
jmp
cmp
rol
xlat
aas
adc
stc
fcomi
mov
mov
out
das
div
fcom
cmp
int
incl
aad
clc
mov
repnz
in
test
loope
fcmovu
int3
hlt
ljmp
std
flds
hlt
xlat
stc
leave
mov
out
nop
jmp
fcomip
lret
vpextrw
repnz
repz
fimuls
addl
out
shl
int
lret
cmp
jmp
into
out
mov
jmp
xor
cmp
ror
repz
fnclex
sarl
fcmovnb
clc
mov
jmp
cmc
aam
out
repnz
ror
xor
xlat
aam
lret
loop
shl
icebp
loopne
out
xlat
jecxz
jmp
out
fstl
cli
into
lock
sarl
xchg
aad
into
nop
mov
add
add
ror
fcmovnu
out
mov
fcomi
jle
adc
jle
hlt
jmp
enter
out
xor
cmp
sti
cli
cli
xchg
rolb
int3
out
iret
fisttpl
cmp
shr
out
cmp
int3
stc
rcr
test
aad
idiv
xlat
in
out
std
loopne
out
ror
xor
cmc
xlat
xor
sar
fnstcw
cmp
ret
cmp
fsubp
test
lret
fcmovu
int
fsubr
repnz
shll
into
fcomi
rcr
repz
add
call
mov
jecxz
loope
imul
repz
rcl
sti
jmp
int3
ret
xrelease
nop
in
mov
test
mov
icebp
xor
icebp
ljmp
fchs
repnz
fiaddl
enter
mov
jecxz
lret
out
in
ret
xor
repz
aad
adc
and
and
fcmove
mov
leave
jmp
loopne
shr
xor
stc
hlt
stc
stc
rcr
xor
test
test
or
xchg
faddl
hlt
repnz
int3
iret
cmp
lret
ror
ss
ret
aam
repz
loope
stc
xchg
shl
sub
aam
fcomi
cld
lret
sti
xlat
out
ror
test
xchg
xor
das
divl
cli
out
leave
cmp
fcmove
in
in
xor
filds
repz
out
mov
in
lret
hlt
stc
cmp
repz
addl
call
xchg
jecxz
out
icebp
sti
fsub
std
fneni(8087
lret
rol
adc
mov
xchg
addl
repnz
aaa
icebp
xor
rcl
aad
test
cmp
mov
jmp
rcr
cmpb
sarl
fstp
repnz
fldl
sub
repnz
cmp
rcl
cmp
clc
in
ret
les
loopne
loopne
adcl
in
jmp
lret
fscale
ret
ret
cmp
jne
pop
jmp
int3
into
fmul
fsubrl
in
jecxz
add
out
repz
adc
jle
repz
jecxz
cmc
xchg
sbb
int3
lock
out
fdivrp
cmp
std
cmp
in
sti
sarl
loop
cld
sti
icebp
lock
lret
aad
out
vpmullw
ror
in
cmpb
aad
mov
shl
clc
cli
ret
call
jecxz
ss
xlat
ss
xor
test
sti
out
test
and
enter
test
jmp
call
rcl
std
jecxz
fiadds
loopne
cli
out
int
loop
repz
in
loop
mov
aas
int3
aad
in
loopne
mov
ret
mov
lret
into
fiaddl
rol
xlat
in
lock
int3
in
aas
lret
addl
loop
mov
loope
xor
jmp
call
aam
cmc
aad
call
loop
enter
std
repnz
iret
fadd
das
in
xlat
fdivl
cmp
cmpb
idivl
ljmp
inc
xchg
in
fldl
cmp
lock
loop
xchg
aam
clc
sbb
sti
int
xchg
testb
out
enter
in
lock
test
sub
jecxz
cld
enter
loop
cmp
cmc
enter
xor
ds
clc
aam
xlat
mov
mov
movl
repnz
call
sarl
stc
fcmovb
aad
loope
jecxz
out
enter
addb
aad
in
out
loopne
sarl
sbb
xchg
ljmp
fmulp
jmp
lock
lock
jecxz
sbb
addl
into
test
lret
shl
icebp
cmp
div
cmp
lret
icebp
fsubr
cmp
xlat
lock
ret
fcmovu
incb
xor
call
sar
cmp
cmpb
cld
hlt
mov
in
jmp
repnz
jecxz
pop
jmp
ret
ror
aam
mov
pop
push
adc
jle
jecxz
enter
into
cmp
clc
xchg
ret
in
xchg
fdivrp
loop
cmc
shr
cmp
iret
in
stc
call
rcr
ret
xchg
cli
ljmp
ret
rol
int
std
neg
fdivr
cmp
sar
test
std
movb
ffreep
mov
jecxz
out
out
int
jmp
out
rcr
dec
jmp
loopne
sub
sti
orl
or
repz
shl
fmul
aas
xlat
stc
icebp
in
cld
cld
fcmovnbe
cmp
jmp
nop
in
xchg
clc
loope
aaa
cmp
out
leave
std
stc
into
loope
out
in
fmuls
repnz
mul
cmp
std
ds
cmpb
iret
aad
cmc
mov
mov
fisttps
in
icebp
aam
cmc
cli
aad
ror
neg
cld
test
repz
shl
std
aad
enter
jmp
lret
out
out
xor
cs
lock
shl
jmp
sbb
xchg
out
lret
sub
lret
out
xchg
ror
nop
fildll
shl
aam
cli
shr
in
cli
rolb
ret
in
loop
mov
in
out
ljmp
out
fcmovne
cld
cmpb
repz
xchg
call
test
fists
cmp
cli
stc
out
jmp
cmp
icebp
sti
xchg
lret
leave
lret
loop
fstp
mov
in
hlt
xor
not
jmp
cmp
out
test
loop
in
xchg
int3
incl
in
cmp
repnz
stc
out
repnz
loope
fcmovb
rcl
xchg
xlat
lret
out
fcmovnbe
lret
mov
sub
jecxz
in
fcomi
sti
sti
hlt
neg
test
add
fisttpll
sti
out
repnz
ss
xor
xor
cmc
sarl
sarb
out
jmp
sti
mov
iret
int3
lret
orl
ss
cmp
idiv
jmp
in
aas
rolb
in
mov
mov
jmp
xlat
lret
aad
aad
int
jle
and
xchg
idivl
adc
jle
call
jmp
mov
loopne
lock
int3
rcl
xlat
aam
cli
rcr
aam
std
ljmp
into
rcr
xchg
out
into
mov
lret
xlat
fdiv
int
fcmovbe
xor
aam
rol
out
fdivr
call
mov
sti
hlt
ficoms
fxam
sti
out
idiv
clc
fdiv
addl
jecxz
addb
int
shrb
ror
leave
into
cmp
cmp
in
fsub
cmp
in
jecxz
sub
in
cli
mov
in
out
leave
in
ret
cli
out
in
enter
test
loope
mov
ljmp
rol
in
int3
enter
cmp
shl
rcl
repz
jecxz
mov
in
repnz
hlt
int3
out
ljmp
std
in
std
cmp
repnz
leave
enter
clc
in
in
in
mov
lret
sti
enter
in
call
sarb
mov
inc
rolb
xchg
aaa
stc
in
rcr
fcomp
cmc
cmp
in
loop
fucomi
test
fmull
leave
enter
mov
cmp
ror
cli
sbb
std
test
lret
sbb
iret
clc
sarb
rol
loope
hlt
in
in
sti
out
sbb
xchg
loop
sarl
fcomi
clc
cli
in
icebp
lock
std
in
fcmovnu
fldpi
in
clc
xchg
and
jmp
not
out
test
cmc
cld
xor
fimuls
std
jmp
rolb
enter
aam
dec
fucomp
shr
cmp
ljmp
xchg
orl
sub
xlat
loop
cmp
cmc
clc
hlt
in
std
ret
cmp
fucom
shl
mov
loope
in
std
xor
aaa
ss
cmp
fdiv
cli
fiaddl
fadds
aam
leave
xor
clc
fstp
shr
xor
add
mov
mov
xor
add
jmp
lret
rcr
aad
fsubr
xor
stc
jle
adc
jle
iret
hlt
rcl
rol
roll
in
lret
lret
into
fsubrp
out
out
xor
aas
imul
icebp
iret
or
stc
movl
les
fsub
out
in
xlat
rcr
cmp
hlt
cmpb
aam
fiaddl
int3
xchg
lret
jecxz
lret
rol
lock
xchg
repz
sti
clc
cmc
xchg
fdivp
test
in
xor
ss
hlt
cmp
inc
out
aam
fucomi
cmc
mov
shr
jmp
aad
lret
out
aad
int
out
repnz
test
mov
hlt
call
clc
repz
cmp
int
inc
and
xchg
add
repz
xor
enter
dec
neg
repnz
cmp
test
lret
fmulp
out
in
fists
fucomi
out
into
repz
xchg
out
adc
leave
stc
lret
mov
mov
in
xor
rcl
stc
cld
aas
jmp
fyl2x
ds
fcmovne
ljmp
loope
jmp
ret
out
lret
aas
fcom
not
cmp
jmp
fildl
jmp
in
cmp
cmp
iret
aad
clc
hlt
push
in
in
call
mov
cmp
vpmaxsw
rolb
fimull
cli
cld
shl
jmp
int
cmp
icebp
xor
repz
rcr
iret
fcom
shl
aad
cli
xchg
ret
mov
popl
repnz
out
int
aam
xlat
loop
test
loope
enter
loopne
lret
loop
out
adcl
into
cli
out
ror
std
cld
ret
mov
cld
mov
mov
lret
ljmp
int
xlat
clc
out
rol
into
sarl
mov
test
xchg
mov
mov
jmp
ret
iret
enter
int
xchg
cmpsb
push
ja
and
pop
mov
add
sti
std
cmp
int
idivl
xlat
fnclex
std
roll
call
in
out
or
lock
shr
xlat
neg
aad
in
rcl
hlt
ss
faddl
sbb
ljmp
imulb
lret
cmp
das
xlat
fnstenv
lret
in
loop
shl
aam
stc
jecxz
loope
dec
jecxz
out
repz
ror
lret
fdivrs
testl
std
addl
aaa
lret
icebp
aaa
aad
cmp
xlat
lret
rolb
stc
aas
in
cli
lock
jecxz
aam
out
int
out
ss
jmp
lret
add
cmp
fcomi
out
ret
icebp
repz
xor
jmp
jmp
fdivr
fcomp
mov
jecxz
mov
shr
xlat
in
cli
jmp
lret
xlat
and
fucomp
cmp
mov
lret
xor
std
xchg
in
loope
ljmp
call
aaa
fildl
cmp
mov
clc
nop
nop
filds
shlb
cli
rcr
lret
aam
cli
hlt
test
aas
imul
out
lret
decb
in
in
out
jmp
cli
loope
lret
clc
cli
test
and
testl
xor
xor
cmp
shr
fcmovnbe
cmp
add
ljmp
nop
jecxz
out
idivb
jmp
call
repz
cld
fst
test
jmp
xchg
ljmp
call
cmp
call
rorb
int3
loopne
mov
mov
hlt
icebp
xor
lret
repnz
cmc
ffreep
out
clc
cmc
out
loope
test
jmp
fldl
out
neg
fcmovnbe
aad
in
icebp
fst
sarb
ljmp
out
loop
out
jecxz
aad
aad
aad
clc
std
sti
fistpll
rolb
test
push
cmp
jmp
lret
fst
int
test
cmp
dec
std
jle
adc
jle
ds
sti
fcomp
in
out
out
xchg
xchg
loop
clc
xor
call
cmp
xlat
vpmullw
cli
fucom
lret
hlt
mov
out
stc
fincstp
fdivrp
in
cmp
xlat
test
ljmp
fdivp
out
xchg
in
rcl
in
les
hlt
aaa
sti
cmp
in
hlt
fadd
cmp
and
jecxz
int
out
ljmp
enter
cmp
fdivr
xor
cmp
lock
test
jmp
in
orb
leave
in
leave
int
cmp
aam
fcmovnbe
in
aad
jecxz
aad
lret
std
cli
nop
fisttpll
xor
lret
leave
cmp
in
clc
cmp
repz
jmp
cli
repz
xchg
xchg
xor
cli
rcr
in
enter
int
fsubr
out
stc
cmp
xchg
vaddsubpd
hlt
ljmp
xor
xlat
loopne
sbb
cli
aam
aad
in
loope
test
jecxz
aam
fcom
cmp
rcr
in
shl
fcomp
cmp
test
out
out
leave
lret
lock
adcl
xlat
std
cmp
loop
jecxz
rol
cli
movb
loope
mov
sub
xor
cmp
ror
cmp
cmc
fcom
faddp
in
fucomp
out
int3
call
mov
xor
cmp
icebp
fadd
rol
sti
faddp
mov
orb
out
xor
cmc
cmp
repnz
fsub
fcmovu
lret
int
test
mov
ljmp
ds
rcr
loop
hlt
aas
xlat
sti
incb
int3
rol
into
xor
cmp
ljmp
xchg
roll
cld
cld
enter
lret
in
repnz
ss
aam
fdiv
into
rcr
in
leave
jmp
cmc
mov
add
mov
mov
mov
jmp
xlat
into
rcl
aad
fadd
mov
adc
jle
adc
jle
enter
shr
out
push
ret
in
xchg
lret
fldl
xchg
xchg
jecxz
shl
in
out
aad
cmp
jecxz
aad
aad
in
xchg
mov
ljmp
rcl
int
loope
xor
roll
rcll
out
in
lock
out
xlat
loopne
lret
rcr
cld
mov
lret
out
rorb
fadd
out
repz
ds
faddp
ds
leave
fdivrp
enter
rcr
call
xor
repnz
cmp
fdivrp
xor
cld
shl
icebp
leave
rol
lret
incb
incl
cmp
sti
out
clc
in
hlt
test
neg
clc
ret
repnz
fcmovu
fxch
ljmp
aad
jecxz
xor
cli
iret
cmp
lret
aad
xlat
cmp
fdivp
hlt
fiadds
fsub
shl
fldl
cld
neg
repnz
cmp
out
icebp
fcmovnb
test
addb
cli
aam
ljmp
shl
adc
call
stc
lock
rol
int3
out
cmp
icebp
sar
loop
test
cli
fists
in
into
call
aam
cmp
fdivrl
loop
add
call
fcmovu
lret
call
out
mov
rcr
clc
test
xlat
shl
sub
stc
out
orb
int3
hlt
xor
clc
cmp
cli
fmul
cmp
lret
neg
into
shl
fcomp
cmp
not
faddl
ljmp
xlat
cmp
in
fcmovnbe
shr
int
cld
aad
fsubr
lds
xchg
lock
int3
test
div
xlat
ret
xor
repnz
leave
cmp
clc
ret
xchg
ret
cmp
test
lret
mov
xor
aam
in
ljmp
cmp
cmp
cmp
jmp
ror
enter
lret
add
mov
jae
jle
adc
jle
fsub
mov
fmul
lret
rorb
out
xlat
fistpll
cld
icebp
faddp
lock
jmp
in
xchg
mov
mov
ret
jmp
ljmp
in
stc
loopne
loopne
dec
in
ret
or
xlat
cmp
cmp
fcomp
aad
out
out
in
hlt
cmc
ror
mov
in
cld
fcmovne
repnz
xor
rcr
call
jmp
fdivp
ret
mov
enter
lock
xchg
loopne
in
out
aam
sti
repnz
imul
out
or
fmul
jmp
stc
clc
mov
icebp
fimuls
clc
cmp
repnz
out
into
idivb
cmp
aam
cli
loop
std
ret
cmp
out
jmp
xchg
iret
sub
iret
lock
lret
cmp
int3
in
loop
in
sar
fimuls
incl
in
clc
lock
leave
repz
sar
sar
fcom
idiv
ret
fcmovb
mov
in
repnz
xlat
sti
rcl
fcmovb
loopne
ds
idiv
clc
jmp
fisttpl
shl
lock
stc
in
cmp
shr
icebp
cmp
repz
cmp
cli
fdivrp
aad
stc
inc
fldl
cmc
sub
sub
ss
fucomip
fcomp
aas
sti
xor
jmp
fldln2
loope
int3
xchg
cmc
in
fcmovu
aam
idivl
lock
clc
cli
rcl
mov
test
call
hlt
jmp
out
aaa
aad
neg
aam
shlb
in
fdiv
jecxz
fsub
sbb
out
out
fld
iret
div
cmp
leave
fcmovnu
inc
rolb
cmp
out
std
lret
call
mov
shr
lret
int
ret
rcl
cli
rcl
repz
loopne
fisttpl
out
in
mov
xchg
in
rcl
stc
into
test
std
or
cmp
test
sti
loop
test
jecxz
aad
jne
mov
mov
movsbl
xor
add
jmp
int3
enter
into
push
mov
push
das
ficompl
test
adc
jle
cmp
lret
cmp
std
cmc
mov
hlt
fadd
std
out
mov
jmp
int3
aas
out
fcmovb
sar
hlt
xor
ds
ljmp
or
fcmovb
cli
jmp
xor
sar
ret
lret
loop
jecxz
jmp
out
call
ss
repnz
sar
cmp
lret
int3
cli
ljmp
test
xlat
cli
sarl
int
lock
cmp
aam
test
jmp
testb
in
aad
aaa
loopne
xor
xor
aad
hlt
cmp
sar
loop
neg
repz
out
xabort
int3
test
cmc
neg
out
lock
lock
fucomip
ret
testl
loop
jmp
aad
xor
aam
loopne
rolb
fucomip
ror
mov
cmc
jmp
sub
xor
imul
repz
sti
in
clc
ret
mov
int
fucomi
lock
jecxz
fxtract
ret
int3
das
call
out
sti
neg
iret
loop
loopne
ret
fcmove
out
jmp
xchg
lret
mov
sub
sti
cmp
ret
in
mov
test
xlat
clc
popl
out
out
stc
cmc
cmp
cmp
fnstsw
lret
loop
icebp
cld
decb
in
loopne
cld
repnz
test
aad
int
jmp
aam
loopne
fneni(8087
loope
aas
fld
fdivr
in
mov
lret
rclb
jmp
icebp
fldl
fld
orl
xchg
ss
aaa
xor
shl
fnstenv
div
out
fidivrl
repz
hlt
xlat
fdivr
fcomp
loop
ljmp
in
int3
xor
xor
lock
xlat
into
mov
cld
mov
nop
mov
jecxz
ret
int
repnz
cli
lret
cmp
div
cli
sti
mov
in
test
fnstsw
rorb
test
push
add
movl
lea
jmp
sarl
aam
aam
fcmovne
inc
cwtl
sbb
sbb
jle
fsubr
shl
enter
jecxz
clc
rcl
enter
out
int
aam
fdivr
ljmp
mov
fucomip
rcl
in
out
call
in
sar
std
cli
in
test
cli
leave
xchg
out
das
div
ljmp
out
fst
loop
mov
ret
loopne
in
test
iret
test
repnz
enter
cmp
ljmp
std
mov
loope
enter
rcll
div
cmp
std
loopne
iret
cld
lock
xchg
sti
fcomp
sti
fstp
cli
int
test
aad
out
out
repz
cmp
ds
repnz
jecxz
std
xchg
mov
call
ret
xor
fdivs
idivl
leave
enter
cli
fcmovb
shl
mov
lock
lea
into
shr
jmp
aad
cmpb
fcom
cmp
repz
out
clc
push
fsub
int
in
jmp
out
sti
leave
in
cli
neg
sar
iret
idiv
clc
shr
test
mov
int3
fucomp
leave
ljmp
in
cmc
cmp
ret
sbb
cld
mov
nop
int
mov
enter
out
cmp
xor
cmp
out
xchg
sar
hlt
loopne
fsubp
clc
out
sub
xchg
int
hlt
xor
xor
fcomi
fcmovbe
fcomp
cli
fsin
sar
stc
mov
lea
repnz
xor
aas
sar
repz
lds
cld
cli
addl
xor
fdivrs
fcmovne
rcr
out
fiadds
jecxz
xchg
idiv
ret
test
mov
sub
fmul
in
out
repz
in
hlt
fxch
cmp
jecxz
loopne
shl
int
xchg
ror
aaa
enter
div
aam
repz
decb
mov
in
jecxz
fidivs
out
bnd
shl
clc
mov
mov
addl
jmp
int
fcmove
fstp
adc
js
js
adc
jle
adc
jle
sbb
mov
sti
xchg
xchg
mov
out
repz
cmp
int
out
cmp
jmp
into
cmp
cmc
xlat
fucomi
in
in
repnz
out
jmp
fucomp
cmp
cld
fidivs
addl
loope
mov
fiadds
out
sti
cmp
fcmovne
lock
in
sarb
mov
in
cmp
loop
in
mov
fsubr
clc
dec
into
xor
aam
sar
rol
roll
leave
lock
xor
rcl
aad
std
call
aad
xchg
idiv
int3
enter
sar
test
enter
idivl
xlat
fadd
stc
jmp
in
leave
cld
rorb
lock
iret
sti
fcom
out
hlt
lret
fidivrs
or
aad
mov
mov
fcmovnu
rcll
fcom
clc
in
lock
shl
out
rol
mov
in
int3
mov
repnz
in
lret
in
not
call
sbb
aad
aad
stc
add
mul
xlat
loop
lock
lret
xor
in
leave
jmp
iret
xor
icebp
incl
xchg
jmp
cmc
add
idivb
cli
sarl
into
out
repnz
loopne
fsubrp
in
lea
sub
aas
cmp
fsubp
icebp
mov
call
test
xchg
loop
ljmp
sarl
fcomp
inc
test
test
jmp
leave
jmp
mov
xchg
aas
ret
xlat
mul
sti
fcmovnu
aaa
fmul
sub
clc
adc
jecxz
fimull
in
int3
repz
xor
xlat
sbb
hlt
cmp
aam
sti
in
call
sub
nop
xor
xor
ljmp
fadds
std
call
jmp
xchg
in
xor
inc
lock
xor
lea
jmp
into
aam
enter
fsubl
dec
pop
xor
das
popf
aas
mov
adc
jle
fdiv
not
call
hlt
cmp
cmc
test
clc
faddl
into
sub
loope
enter
int3
hlt
ror
shl
rcl
ror
push
xlat
nop
mov
rolb
xor
xor
out
fprem1
icebp
enter
idiv
ret
fld1
test
fimuls
rclb
lock
iret
sti
xor
or
lock
rol
mov
jmp
std
lea
lret
into
lock
int3
cmp
in
repnz
cmc
aam
std
test
loopne
loopne
repz
stc
jmp
jmp
aam
aad
stc
lea
int
repz
ss
repz
fdivrp
clc
fildl
ljmp
imul
cmp
loopne
cld
cmc
or
std
inc
fucomi
int
in
lret
xor
loope
rcr
stc
xor
ljmp
loopne
mov
cmc
call
ret
in
out
or
ljmp
jmp
cmp
icebp
repnz
rcr
jmp
std
sub
fucomp
call
sub
cli
rcr
cmpb
fcom
or
xchg
ljmp
jmp
aad
cli
cmp
stc
test
loop
ret
aad
orl
cmc
in
fcom
fdivs
fadd
cli
in
out
xor
rcr
add
jmp
fstp
lret
fucomip
xchg
int3
call
int
out
icebp
aaa
aam
sarb
loope
in
cmp
cli
fnstcw
and
repz
shl
stc
sar
aad
hlt
jmp
aam
lock
cmc
sbb
call
int
in
xchg
test
cmp
aad
rcr
ret
loop
fsub
jecxz
movb
jecxz
in
enter
icebp
ret
xor
lret
cmpb
std
out
xchg
inc
or
inc
or
pop
out
decl
mov
add
mov
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
push
jmp
int3
rol
xlat
fstp
fst
mov
mov
cwtl
rorb
jle
filds
out
out
or
ss
fucom
sub
icebp
and
jecxz
enter
in
loopne
rcl
int
test
jmp
xor
out
test
out
cmc
in
sbb
test
cli
fucomip
stc
test
ljmp
aad
in
fdivrs
neg
clc
jecxz
shl
ret
mov
fimuls
mov
cmc
cmc
call
out
cmp
or
fsub
mov
ljmp
jecxz
ret
loopne
mul
xor
fsubrp
ror
cmp
rol
iret
xchg
fucom
fucomp
dec
int3
out
lock
enter
out
fidivrs
ftst
jecxz
aam
add
mov
cmp
iret
std
xor
xor
lret
ljmp
cld
fcmovnbe
enter
call
xchg
mul
repnz
xor
bnd
cli
sar
xchg
jecxz
lock
cmp
testb
fsubr
repnz
clc
ljmp
xlat
mov
in
out
out
loopne
int
int3
clc
ret
xor
enter
fldl
fcomp
test
test
clc
jmp
fst
out
xchg
out
sar
ss
cmp
sub
in
and
loop
int
mov
sub
add
ljmp
in
cli
iret
xor
jmp
xabort
stc
xchg
mov
icebp
mov
shr
das
in
into
jmp
in
rcr
jmp
int3
aas
imul
repz
fiaddl
fneni(8087
leave
test
aad
xor
idiv
cmp
addb
loop
jecxz
int3
mov
lret
loope
jecxz
xchg
ret
repz
cld
cmc
loope
int3
cmpl
fdivrl
loop
lret
mov
xchg
hlt
out
inc
hlt
rcr
hlt
lret
ljmp
les
cmc
call
fldl
out
lret
div
aaa
lret
std
repz
xchg
testl
xchg
mov
xchg
icebp
int
cli
aad
cld
cmp
lock
in
test
flds
sti
repnz
int
out
sti
sar
call
faddl
std
clc
ljmp
repz
repz
in
fcom
cld
rcr
fcomp
stc
stc
aas
fsubp
loopne
jecxz
inc
in
leave
std
in
xchg
fsub
out
stc
ret
call
shr
fdivr
fsubp
jecxz
ret
cld
fmull
nop
shl
aaa
iret
xor
stc
cmp
stc
icebp
std
lock
ds
repz
out
inc
clc
and
mov
add
add
add
fadd
fcom
fld
pop
into
shll
adc
jle
lds
in
ficoml
xchg
lock
cs
cld
aad
cmp
loop,pt
cmc
shl
jecxz
test
lret
rolb
loopne
in
ror
aad
call
into
fisttps
mov
decb
in
xor
lret
out
aaa
aam
hlt
in
ret
in
shl
clc
mov
and
ljmp
in
xor
lret
fneni(8087
incl
mov
out
mov
frstpm(287
fsubp
ss
ret
in
clc
fucomip
cmc
cli
xor
fadds
incb
rolb
call
hlt
fdivl
cli
sar
fadd
filds
ljmp
orl
lock
loopne
out
cmp
testl
out
ror
fcomip
into
cmp
cmp
into
lock
lret
into
icebp
sti
or
call
iret
cmc
fstp
aaa
into
imul
sbb
out
mov
mov
enter
in
lock
aas
int
repz
sarl
into
sarl
cli
std
cli
aas
aad
mov
fucom
rcl
loope
jmp
xor
iret
ror
cld
jmp
test
rcl
aam
flds
sar
repnz
shl
cmp
sti
hlt
call
cmc
xlat
xchg
xchg
fsubp
cli
out
call
xchg
aas
rcl
cli
idiv
iret
fcmove
sti
fdivrs
orl
out
mov
rcr
std
icebp
sbb
rolb
mov
mov
cli
ljmp
not
out
ljmp
aam
div
rolb
loop
in
shr
test
iret
cmp
in
ss
neg
xor
cmp
cli
ffreep
vpsubd
int
rcr
ljmp
lock
int3
cmp
cli
leave
fst
fcomp
cli
xchg
jecxz
ljmp
jmp
xchg
mul
iret
stc
xor
idivl
clc
aam
fld
cmp
shl
cmp
mov
fucompp
into
nop
loopne
xchg
fdiv
sar
repnz
fscale
repnz
sti
cmp
aam
inc
sbb
stc
cmc
in
jmp
lret
roll
ret
lret
shl
aas
sbb
fsub
test
imul
fdivr
fdivr
cmp
rcll
in
divl
jmp
neg
lock
rcl
shr
ljmp
or
aam
xchg
cs
fxch
cli
mov
lock
cmp
inc
cld
daa
test
inc
add
add
add
rolb
and
add
and
add
add
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
mov
jmp
aas
sarl
fcmovnbe
fcmovb
loope
add
scas
pop
int
dec
xchg
jle
mov
fucom
out
cld
mov
xchg
int
iret
in
out
lock
sti
cmp
ds
test
xchg
test
rcl
rcr
loopne
jmp
shl
loopne
jmp
out
call
test
std
mov
ror
cmp
int
sarl
out
leave
cmp
fisttpll
lret
jmp
jmp
rol
jecxz
out
fcmovnbe
lock
shl
ret
clc
mov
shl
in
iret
icebp
int
icebp
out
repnz
shl
ss
fdivr
out
sarb
call
mov
jmp
xchg
out
shl
hlt
shl
xor
lock
cmp
clc
call
cld
cld
out
shl
nop
lret
xchg
out
test
ljmp
cmp
test
into
xchg
call
loop
icebp
icebp
jmp
xchg
nop
fsubp
imul
cli
enter
idivl
int3
sar
fadd
clc
sar
loope
test
cmp
ror
out
in
out
cmc
jmp
enter
in
out
repz
in
lret
int3
in
lret
xchg
fucomip
int3
in
int
xor
jecxz
repz
shl
roll
cli
mov
lea
xor
rolb
aam
test
testl
loop
xor
enter
cmp
cmp
std
cmpl
enter
incl
mov
into
into
xor
ljmp
adc
icebp
xchg
ljmp
in
lret
repnz
aam
not
std
int
cmp
fcmovb
jecxz
out
mov
in
enter
in
stc
cli
aaa
aaa
iret
int
cmp
jecxz
out
jmp
in
icebp
lret
repnz
xchg
hlt
xor
int3
xor
loope
fldl
call
xchg
mov
in
jmp
sar
jmp
aad
cmpl
repz
in
or
mov
iret
jecxz
ljmp
fcmovu
iret
lock
int3
out
out
ds
shl
leave
mov
mov
jmp
in
enter
fstp
fmulp
roll
mov
loope
fsubrp
jmp
test
in
xor
icebp
fcom
xchg
call
fdivr
test
mov
in
repnz
icebp
mul
clc
int3
out
ds
fsub
aad
in
xchg
lret
out
rcl
aam
fcmovbe
int3
iret
fimuls
les
add
or
push
inc
mov
movl
jmp
into
aas
ror
rcl
sarl
xchg
lods
mov
mov
jle
hlt
cmp
out
jmp
int3
fucomp
iret
jecxz
xchg
ret
ss
ss
cmp
hlt
in
cmc
jecxz
stc
shl
mov
jecxz
call
call
xlat
lock
sar
imul
fcom
filds
out
jecxz
iret
adcb
xor
test
aas
loop
in
out
imul
mov
xchg
mov
lret
xlat
repz
fdivrl
lret
clc
int3
in
orb
out
xchg
mov
xchg
xor
shl
imul
out
out
int3
icebp
clc
fmul
shl
xchg
leave
sti
cli
call
repz
lds
in
idivl
fsubr
cmp
loop
enter
in
xchg
mov
in
into
aad
xor
cmp
iret
cmp
fdiv
fdiv
lock
sub
enter
mov
int
aam
jmp
lret
jmp
roll
int3
int3
mov
and
lret
fdivl
sar
xor
loopne
cmp
jmp
xlat
xchg
jecxz
call
sti
jecxz
shr
cmp
cmpl
mov
into
sub
xor
faddp
jecxz
xlat
out
call
loop
fadd
add
loop
std
ror
aad
jecxz
bnd
cld
call
incb
stc
fneni(8087
std
loop
mov
jecxz
fimuls
enter
icebp
out
out
in
repz
stc
fld1
loop
testb
into
int
aad
shl
hlt
fsincos
icebp
lock
cmp
sar
call
xchg
mov
fcoms
out
xchg
cs
xor
cmp
sar
lock
out
in
push
shl
ret
xlat
clc
call
call
ret
xor
xor
sar
loope
xlat
xor
fiadds
xchg
jecxz
in
jecxz
icebp
in
out
cmp
lret
ljmp
sti
xlat
test
fcomp
xlat
nop
fimuls
out
into
sar
xor
in
aad
int3
call
ret
into
out
aad
cmp
in
loopne
nop
repz
in
lock
hlt
out
shr
jmp
sti
out
stc
adc
loope
xchg
aas
mov
in
repnz
fucom
lock
cli
sarb
rcl
cmp
out
sti
lds
in
clc
clc
jmp
xchg
fcmovu
repnz
jecxz
xor
xor
cmp
shr
loopne
idiv
fdivr
aam
in
std
rcr
cld
jecxz
out
in
rol
divl
xor
cmp
mov
jmp
rcl
aad
aad
shll
std
xchg
xor
xchg
jle
mov
std
adc
xlat
ret
in
ffree
fadd
mov
xchg
nop
mov
out
aad
aaa
into
enter
repnz
int
xlat
ret
mul
ret
lock
out
lock
into
lock
in
stc
jmp
repz
loop
sti
rcr
loop
sub
idiv
sbb
jmp
jmp
in
icebp
icebp
in
int3
sti
aaa
cmp
loopne
icebp
cmc
xchg
in
in
out
rorb
in
cmc
ret
fdiv
fcomp
fcomi
hlt
rcl
fst
enter
int3
cli
loope
loop
in
loopne
ljmp
fmul
sti
cmp
cmpb
cmp
lds
repnz
call
in
out
int
cld
sar
sarl
cld
repz
in
out
cld
loope
into
repnz
fcomi
aam
in
idiv
rolb
cli
mul
jmp
xchg
iret
rcl
jecxz
into
rcl
cld
ljmp
filds
idiv
mov
ror
xchg
cmp
repz
into
repz
repnz
test
std
mov
fdivrp
into
adc
lea
int
xor
loopne
ror
test
mov
sub
mov
testb
rcl
divl
hlt
aaa
repz
dec
in
mov
mov
lret
fcmovne
ljmp
xor
mov
lea
ljmp
ret
cs
fdivrp
fucomp
cmp
aam
out
cld
in
and
xchg
aas
aaa
stc
sub
out
std
fcmovu
lret
idivl
aas
idiv
repz
xchg
cld
repz
xor
rcl
xlat
cs
fstpt
mul
iret
cmp
rcl
ret
xchg
cld
leave
fdiv
cmc
int
jecxz
vpslld
cmp
int
xor
adc
fcmovu
in
ret
les
out
std
fcomip
aaa
repz
int3
rolb
cli
in
aas
fsubrp
xchg
fcmovnbe
sub
repz
aad
in
cmp
call
aad
in
ret
loope
iret
xchg
mov
call
aad
in
in
icebp
aad
std
out
fadd
test
test
call
xor
cmp
ss
iret
sbb
rcr
xchg
out
shr
and
test
fucomi
aam
stc
ljmp
ret
jmp
fisttps
sub
xor
xor
in
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
add
imul
mov
cmp
jmp
int3
rol
aad
aad
fpatan
int3
and
adc
and
lcall
in
shlb
call
ljmp
icebp
out
lret
jecxz
ror
out
jmp
out
sarl
aas
out
idivl
test
or
hlt
aam
xlat
mov
stc
mov
lock
icebp
shl
rol
repz
shl
aam
cld
fadd
in
sti
test
fsubrp
xchg
xlat
into
jmp
in
cli
aas
aam
xlat
test
fcmovu
ror
mov
std
mov
repz
adc
loop
rcl
cmp
aam
inc
xlat
std
stc
shl
fcomi
rcl
xlat
fmull
shr
fstl
xlat
cmp
icebp
ss
lock
iret
call
in
nop
mov
xor
rcl
ds
hlt
xor
fiadds
stc
cld
fimuls
cmc
shl
ret
fadd
in
fidivl
iret
cmp
loope
loopne
fdivrp
loopne
mov
mov
mov
mov
aad
clc
ret
std
call
in
jecxz
shl
aam
mov
incb
hlt
call
fdivs
std
jmp
xchg
test
loop
addl
jmp
in
fdiv
loope
rcl
testb
in
loope
sti
xchg
xor
divb
ffree
idivb
cmp
fdivr
into
in
fcmovne
movl
ljmp
loopne
loopne
ret
loope
cmc
sar
test
adc
xchg
out
bnd
aad
in
out
shr
sti
jmp
cmc
loop
imul
xlat
aad
xchg
nop
ror
int3
in
lret
rcl
fxch
shl
cmc
sbb
out
test
mov
shr
fcomip
repnz
jecxz
in
xlat
lret
ds
cmp
sarb
repz
fsubr
sti
xchg
xchg
ljmp
clc
clc
cmp
sar
cmpb
mov
in
nop
repnz
in
jmp
ss
in
aas
idiv
aam
fdivrp
mov
mov
lock
icebp
lock
xlat
shr
cmc
rcr
loope
ffreep
fcmovbe
out
in
test
mov
int3
out
out
mov
shlb
int
div
cmp
stc
ss
repnz
rcr
fadd
add
jmp
jecxz
xchg
lock
cmp
leave
jmp
loop
ret
cmp
aad
loop
idiv
test
in
mov
repnz
sarl
aas
cmc
int
add
fnclex
inc
mov
jecxz
fdiv
in
out
xchg
mov
into
iret
lock
fisttpll
test
add
add
clc
xor
xor
add
add
imul
jmp
mov
mov
mov
jmp
into
rol
fcomp
fcomps
xchg
je,pn
pushf
jle
mov
loopne
jecxz
fadd
std
jecxz
and
in
out
sti
lret
shr
in
iret
ret
das
cmp
fidivrs
lret
aam
ret
shl
call
lret
xor
xchg
xor
cmp
fst
cld
cmp
cmp
sarl
enter
idiv
int3
stc
cmc
out
shll
jecxz
clc
in
cli
int
aaa
aam
cmp
lds
or
lret
ljmp
leave
loop
ror
out
iret
xor
repnz
cli
ret
loop
shl
in
mul
fildl
nop
call
ret
shl
cld
cmp
cmp
ret
dec
call
mov
test
clc
hlt
dec
sti
xchg
lret
xchg
fsubr
loop
xchg
in
mov
ss
lds
fmul
ds
xchg
repz
leave
shr
decb
stc
shr
call
ljmp
cmp
xlat
loopne
mov
cld
in
leave
out
std
fimuls
sti
cmp
out
loopne
loopne
idivl
fpatan
out
stc
xchg
xchg
sub
jmp
in
repz
in
xlat
fadd
add
cli
shl
add
jecxz
nop
sti
in
out
test
mov
aaa
aam
repz
sti
aad
into
loop
and
xlat
ret
int
nop
fcmove
sbb
shr
cli
out
cmp
fsub
aad
incb
loopne
fucomp
out
cmc
jecxz
in
mul
loop
jmp
aaa
icebp
std
fdivrp
cmc
shl
mov
mov
jmp
jecxz
jecxz
loop
test
cmp
ljmp
xlat
loope
add
add
loope
out
cld
loop
shr
stc
in
xor
shr
iret
aad
cmp
incl
fsubr
test
mov
in
shlb
jecxz
lret
shr
out
cmp
loope
shl
add
decl
repz
mov
in
enter
fdivp
repz
ret
cld
in
leave
std
cli
lock
out
enter
mov
sub
lock
cli
leave
int
cmp
sti
rcr
fdivr
les
mov
xor
into
enter
shl
cmp
lock
rcr
fsub
xchg
and
fucom
jmp
jmp
xchg
xor
lock
cli
lret
cmp
sarl
out
loope
fadd
enter
fildl
hlt
xchg
xor
ljmp
sti
cmp
cmp
rolb
neg
in
jmp
loope
test
fimull
clc
jmp
rcl
rcr
fstp
aam
cmp
lods
in
cs
lahf
jle
mov
sarl
std
cmp
sti
ret
cmp
ds
in
in
in
repz
into
out
lret
fcmovbe
in
clc
cmp
ret
rol
mov
test
fcmove
lret
jmp
ljmp
cli
cmp
ds
clc
xlat
fsubrp
in
out
ffree
out
sbb
hlt
neg
ret
fpatan
lret
into
stc
in
sar
fmulp
or
lret
lret
test
out
iret
int
cmc
aam
leave
rolb
aas
fnstsw
repz
mov
leave
out
jmp
rcl
cmp
out
in
icebp
iret
sub
xlat
mov
vmovntdq
shl
fidivs
aaa
xor
in
lret
out
cld
xlat
jecxz
clc
jmp
shr
jecxz
inc
vpmullw
call
loop
cmp
fld
loope
lea
std
nop
in
loopne
ss
icebp
hlt
rcr
imul
div
cmc
xlat
icebp
rcr
in
testb
icebp
cli
loope
repnz
test
sti
xor
loope
sbb
ds
fisttps
repz
repz
aam
repnz
lret
sub
loope
ljmp
xchg
cmc
xor
leave
cmc
sar
call
ret
hlt
std
sar
stc
int
leave
lret
std
xchg
enter
lret
clc
cmp
call
ds
rcl
repnz
jmp
mov
in
fucom
fsubr
lret
cmc
jecxz
fnstenv
aas
out
aam
cld
cmp
sbb
cmp
out
jmp
fcomi
int3
sar
rol
std
sti
leave
cld
loope
std
in
dec
leave
iret
mov
ret
rcl
fst
cmp
in
fdivp
in
out
icebp
hlt
clc
mov
sar
enter
iret
ror
loopne
xchg
xor
jmp
cli
repnz
cmc
out
aas
cmc
sarl
fxch
std
mov
int
enter
xchg
xor
repz
xlat
int3
out
leave
cmp
cmp
stc
in
ret
shl
test
xchg
xchg
out
in
int
cli
hlt
xor
xor
jmp
icebp
ret
roll
int
repnz
fucom
shl
imul
loop
out
cmp
aaa
icebp
not
out
cld
faddl
in
mov
mov
mov
mov
out
vcmpsd
fdivr
ror
repz
add
ret
leave
vpand
nop
out
xchg
cld
addb
mul
repnz
aad
cmc
shl
test
fabs
jecxz
decl
decl
jmp
call
repnz
add
imul
jmp
sarl
ret
ffree
in
jns
pusha
xchg
xor
mov
jle
ret
ss
aam
les
flds
test
mov
loope
cs
jmp
fcmovne
ds
shl
icebp
sti
jecxz
lock
testb
fildl
lock
cmp
call
cmp
out
idiv
std
enter
in
ret
jecxz
loop
in
ss
in
std
repz
cmp
jecxz
loopne
sti
fsubr
fimull
int3
in
jmp
dec
xor
fsubr
in
cmp
stc
repnz
out
jmp
fimuls
in
repz
in
cmp
shr
ss
ljmp
cmc
out
fsub
leave
fmull
xchg
out
aaa
rcl
jecxz
in
cli
cmp
incl
call
fcomp
or
ror
ret
into
lret
ds
int
rcl
out
jecxz
xor
xchg
cmp
fst
and
xor
icebp
xor
int
cmc
ds
ret
in
enter
loope
in
out
repz
out
ljmp
shl
lock
xor
mul
neg
loopne
xchg
loope
lock
xor
repz
xor
xor
shl
xlat
sub
icebp
rol
icebp
jecxz
into
aaa
clc
out
cmp
lock
repz
test
fsubr
lret
repnz
and
into
xor
aam
icebp
rcl
cmc
out
loope
fdivrp
test
xchg
rorl
leave
lret
mov
ret
sar
ss
cld
fcmovnu
cmc
aad
fadd
loopne
fcmovu
loope
out
out
loop
mov
shll
rcl
fcmovu
jmp
sti
adc
loopne
loop
decl
in
and
in
ror
fldpi
rcr
int3
xchg
loope
cmp
std
cli
out
lret
ljmp
jmp
adc
aam
test
repz
fsubr
call
fcomip
enter
les
out
iret
fdivr
in
or
fidivrl
out
in
fdivrp
flds
rorl
leave
in
repnz
rcr
clc
cmp
jecxz
lret
int
out
ret
test
loope
xchg
in
out
cmc
fsubr
sti
sar
fnstcw
int
icebp
loopne
clc
out
fmul
rcr
mov
aad
lret
fmul
lock
cld
sarl
sbb
loop
leave
loopne
mov
sub
test
call
ret
lret
clc
rcr
clc
clc
aas
cli
loopne
cmp
xchg
enter
sti
shr
xchg
ficoms
or
lock
rcl
aad
rcrl
into
push
mov
hlt
jmp
cmp
lock
loopne
xchg
mov
out
incb
lret
in
enter
out
repz
icebp
fildl
add
jmp
rcl
mul
int3
lds
xor
faddl
addl
xchg
lret
xor
enter
cmp
aas
faddp
xlat
icebp
rol
out
fcmove
and
xchg
ffreep
loope
jmp
into
fcomp
adc
shl
fidivrl
enter
fstp
out
mov
mov
fcom
cli
sti
fmul
ss
xlat
icebp
sti
hlt
addb
test
fimuls
lds
cmp
incl
loopne
mov
int
out
int
repnz
aaa
aam
ss
sbb
shl
dec
aam
clc
out
int3
mov
loop
cmp
into
out
aam
out
repnz
sti
cld
incl
testl
cmpb
shl
lret
icebp
fucomip
xlat
in
aas
std
ret
repnz
int3
jecxz
mov
mov
cmp
icebp
iret
fndisi(8087
sar
shl
xchg
nop
fiaddl
out
out
jmp
shl
in
fxch
cmp
cmp
fadd
fcmovnbe
call
lret
jecxz
jmp
repnz
ss
cli
imul
adc
ds
ds
call
test
iret
into
sbb
xor
cmp
neg
out
aas
ds
shl
shl
std
faddl
ljmp
xor
xor
int3
fcom
clc
xor
cmc
cmp
cmp
jmp
mov
in
into
mov
xor
clc
aas
into
int3
sar
cld
addb
int3
mov
in
iret
ret
sti
imul
out
rcl
loope
jecxz
roll
into
int3
in
enter
loopne
jmp
cmp
repz
loop
std
cmc
ret
mov
mov
xchg
mov
divb
in
stc
xlat
leave
leave
fyl2x
ljmp
cmp
aad
in
mov
jecxz
rcr
into
sub
jmp
aaa
in
aaa
cmc
xor
loope,pt
fcmovbe
leave
fimuls
mov
lock
int3
out
fdivr
fidivl
sarb
xor
jecxz
and
mov
lret
mov
out
in
out
iret
xor
cmc
testl
neg
fildl
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
push
mov
mov
mov
not
jmp
leave
xlat
rcr
mov
cwtl
push
mov
xchg
sti
mov
add
aam
ljmp
rcl
int
hlt
xor
repz
enter
jmp
rorb
int3
fucomp
fidivrl
cli
fcom
out
out
fisttpl
loop
shl
iret
les
in
hlt
out
ds
test
cli
int3
mov
mov
loope
iret
ret
rol
cs
cmp
cli
cld
add
test
mov
in
xchg
mov
xchg
xor
fincstp
ss
cld
aam
aam
xor
fdivp
aad
fiaddl
imul
icebp
loopne
in
test
jmp
xor
cmp
loope
cmc
in
rcr
fdivrp
fucomi
fadds
nop
testb
xor
jmp
faddp
jmp
cmc
xchg
mov
call
in
xchg
lret
aam
icebp
aaa
fidivrl
in
out
jmp
fyl2xp1
loope
lret
jmp
adcb
xor
lock
incl
repz
xchg
mov
in
loop
nop
nop
shl
stc
cmp
shr
xor
ljmp
icebp
incb
and
xchg
ror
loop
mul
in
in
cmp
cld
fcmove
sbb
aas
out
fcom
jecxz
lret
loope
xchg
ljmp
lret
int3
cld
rcl
cld
iret
shl
cld
ret
jecxz
stc
mov
xchg
aaa
rcl
xor
icebp
cmp
repnz
clc
sarl
loop
cmp
ret
int
repnz
xchg
test
mov
loope
not
sti
leave
shr
fcmovnbe
lock
cld
loop
enter
icebp
jmp
xor
test
cmp
loope
out
test
iret
hlt
out
xor
out
call
loope
aaa
xor
int
fst
ffree
xor
out
lret
fmulp
cli
out
out
mov
repz
repnz
aam
in
aas
shl
mov
fcomp
fimull
out
xchg
add
mov
add
movl
cmp
movl
jmp
mov
fstp
enter
imul
jle
sbb
jle
ljmp
clc
repz
leave
ljmp
neg
lret
test
out
out
enter
jmp
das
icebp
leave
fdivrs
in
repnz
test
rolb
lret
stc
loope
jmp
xor
rcr
shr
out
or
roll
testl
add
rcr
aaa
hlt
into
cmp
cmp
loop
xchg
mov
fadds
sar
rol
loop
int
fcmovne
cmp
ds
test
loopne
repz
clc
enter
mov
xlat
cmp
fcmovne
cld
sar
cmp
lock
xlat
sar
aad
leave
ror
sti
xchg
shr
call
lret
sub
cmp
fsubr
fucom
rol
in
fdivr
in
out
loop
xchg
test
shrl
shrb
call
loope
out
lock
ret
xchg
xlat
cmc
int3
nop
loop
ror
mov
cmp
xor
neg
ds
lock
loope
clc
repz
clc
jecxz
mov
clc
int
in
aad
lret
iret
ret
xor
cmp
jmp
loop
xchg
cld
leave
mov
mov
test
in
in
xchg
test
out
out
out
cld
icebp
ds
aas
sti
in
aas
loopne
imul
add
mov
enter
lret
fldcw
fmulp
in
sti
cld
shl
icebp
repz
cmp
stc
sub
std
lret
loope
int3
int
ret
xor
neg
stc
cmp
and
cld
xchg
mov
fimull
lret
repnz
lock
sti
fxch
lret
aaa
cmp
std
test
ret
xchg
ljmp
and
test
repz
div
enter
out
cmc
fiaddl
ljmp
out
in
int3
loope
in
iret
shl
lret
cmp
iret
lock
sbb
jmp
in
xor
in
dec
ss
fdivrs
aam
rcl
fprem
cmp
fcom
addb
loop
xchg
add
andl
jmp
lret
aas
fst
fcmove
fidivrs
mov
jp
jle
sbb
jle
ljmp
jmp
idivl
into
lret
leave
cmp
ss
ret
fnsetpm(287
xchg
xchg
in
int
test
in
in
xor
int3
aad
int
jmp
cmc
sbb
rcr
cmp
xlat
sub
xchg
mov
cmc
jmp
aas
xlat
clc
std
cmp
fiaddl
out
icebp
lock
and
shll
in
cmp
iret
fstp
aad
lock
sar
call
sbb
xchg
loop
fsubrp
enter
cmp
fcmovnbe
in
flds
decb
xor
cmp
fprem
das
aam
fsubr
cmp
mov
pop
loopne
repnz
out
fcmove
enter
cmp
in
shl
fdivr
sti
fsub
in
mov
int
fmulp
sub
in
jecxz
xor
cmp
fcomp
iret
imul
test
cmp
mov
loopne
add
fmul
test
in
xor
clc
call
in
lret
leave
out
out
int
lock
fsubr
std
lret
into
sub
push
mov
lret
ljmp
rcr
filds
mov
xchg
icebp
repz
xor
into
cmp
in
loope
hlt
cmpl
loope
loope
orl
xchg
add
imul
int3
cmp
cmp
cmc
sbb
imul
leave
cld
mov
cld
cld
repz
sub
test
shll
in
iret
in
fbstp
cmc
fucom
lret
fimull
shl
mov
fprem
in
cli
cs
cmp
ret
cld
movb
test
cmc
fucomip
out
in
into
rcr
jmp
cmp
iret
aad
fcmovbe
aad
loop
mov
add
jecxz
loopne
iret
aad
shlb
aam
enter
sar
out
repnz
cmc
sub
jmp
mov
into
xor
sub
fadd
jecxz
fdivr
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
jmp
aam
aas
ret
lret
fst
fnstenv
lods
pop
inc
test
scas
jle
sbb
jle
cli
enter
loopne
ss
xor
adc
fdivr
idiv
out
adc
out
into
in
out
int
shll
call
cmc
fsubr
repz
repnz
ret
fimull
int
loope
ss
lret
imul
clc
sub
fdivr
fstp
out
fcomip
fdivr
ret
mov
popl
out
lds
cmp
jmp
rolb
mul
ljmp
ror
out
xor
jmp
iret
cmp
fadd
out
ret
mov
sar
cld
loop
mov
iret
leave
cli
xor
cmp
cmp
cmp
sar
lock
repnz
int3
adcl
out
lret
ds
fxtract
in
xchg
in
int3
faddl
sub
shlb
in
iret
int
cli
into
repz
repnz
stc
testb
sbb
in
xchg
xchg
jmp
icebp
hlt
cmp
out
ds
clc
jecxz
ds
lds
sti
jmp
and
fcom
cld
in
xlat
aam
in
int3
lret
int
std
cmp
out
out
lret
mov
nop
ljmp
jmp
xor
idivb
aam
ljmp
jmp
clc
xchg
mov
mul
int3
test
fucomi
cmp
loope
repz
jmp
ret
jecxz
mov
rcr
std
repnz
ret
idivb
enter
ror
test
testl
xchg
jecxz
int
out
xor
cmp
sar
aam
sub
lds
xchg
cli
enter
repz
iret
das
out
xlat
out
lret
fnstenv
int3
repnz
out
jecxz,pt
repz
adc
jmp
test
mov
loopne
shl
lret
jecxz
out
lret
sti
xor
ds
xchg
rcr
test
leave
lret
into
cmp
call
ret
lock
idiv
jmp
idivb
xor
mov
add
mov
movzwl
jmp
rcl
xlat
fcom
push
outsl
bound
dec
mov
sbb
jle
xchg
xchg
icebp
shl
icebp
shlb
cmp
aaa
loopne
in
xlat
cmp
call
test
ljmp
ret
out
ljmp
cmc
in
sub
mov
out
int
fucomp
repz
out
xor
stc
ljmp
xor
sarl
sbb
cld
out
loope
lret
fucomip
inc
ror
leave
repz
call
out
neg
orb
rorb
iret
shl
repz
sti
fcmove
cmp
rcr
iret
xchg
icebp
aam
loope
addb
jecxz
add
cli
sti
lret
xor
cmp
into
rol
xor
les
in
jmp
aaa
cmc
loope
enter
cmc
aam
repnz
call
lock
icebp
fsub
aad
xlat
rol
fiadds
test
fimull
rcr
xchg
xor
int3
lds
cmp
aas
shl
rol
test
rcr
jmp
int
loope
mov
or
out
into
repnz
repz
loope
int
fistpll
add
iret
int3
and
jmp
in
repnz
cmp
loope
out
rol
clc
out
test
lret
int
sub
enter
xchg
aas
xor
cld
ror
ss
loopne
fdiv
jecxz
mov
int3
sbb
icebp
fistl
shll
xor
fidivrl
inc
lret
cmp
fcmovb
loopne
ljmp
sti
stc
mov
in
out
shr
divl
loopne
cmc
roll
std
orb
leave
cld
cmc
in
shl
aad
out
fdiv
shr
xor
rcr
test
add
std
test
nop
or
lret
out
jmp
repnz
fsubr
fdivr
add
ret
cli
loope
jmp
loope
in
mov
xchg
loop
loope
clc
out
std
fsubr
call
cmpl
ds
testb
jmp
aam
enter
aad
cmp
and
mov
jle
add
lret
or
loopne
jmp
lret
call
sar
aam
cmp
aam
fadd
ljmp
xchg
xchg
xchg
in
in
shr
cmp
call
icebp
ss
mov
mul
out
out
rcll
aam
in
cmc
shll
rcl
icebp
jmp
ret
fsubr
xlat
leave
stc
lret
mov
xchg
fbstp
xor
jecxz
cmp
shll
ds
xlat
test
xlat
jmp
ljmp
ljmp
fmulp
int3
cmp
shll
sbb
xor
enter
fstp
hlt
ss
xor
ljmp
ds
iret
loop
dec
into
leave
cld
fneni(8087
nop
call
xor
ljmp
fucom
in
in
icebp
loopne
flds
in
les
xor
sti
ljmp
neg
iret
adc
enter
jmp
xlat
cli
mov
icebp
repz
aam
repz
fcom
cmp
fsubrp
fdivrp
fmul
ds
incb
out
decb
in
cmp
lock
cmp
cmp
std
cmc
ret
in
loop
loope
in
in
adcb
fstp
ljmp
cmp
clc
jecxz
testl
mov
nop
lock
clc
aam
repz
cmp
cli
jmp
repz
test
sbb
mov
out
loop
orl
cmp
leave
stc
ret
iret
loope
loopne
mul
orb
lret
out
ror
int
cli
int3
cli
cld
stc
into
int
cmp
leave
out
fstp
testl
hlt
cmp
in
fsubrp
xor
add
ljmp
repz
stc
hlt
out
fnstcw
imul
loope
int3
out
cmc
mov
out
lret
jmp
rorl
aam
in
icebp
fidivl
loopne
aad
sti
xor
or
add
xorl
mov
jmp
rcl
enter
fcmovne
fdivl
mov
jle
add
mov
fcomip
out
jecxz
out
loop
cmp
cld
cld
ds
cmp
test
clc
in
std
ljmp
lock
rcl
ss
imul
shlb
int3
xlat
cmp
cmp
out
jecxz
ret
xlat
xchg
fsubrp
lock
repz
out
cli
cmc
cmp
cld
in
lds
addb
test
aaa
xor
cmc
in
das
stc
aas
shl
std
repnz
cld
addl
xchg
iret
bnd
lock
sarb
fidivrl
call
repnz
xor
into
in
sub
repnz
xor
cmp
hlt
cmp
loopne
xchg
aas
aam
lret
sub
repnz
xor
lret
cmp
cmp
neg
test
cmp
sti
test
xlat
aad
stc
mov
rorb
int
call
cmp
xlat
cmp
int
aad
ret
enter
add
ror
xchg
xchg
hlt
loope
int
fidivrs
xlat
ss
ds
cmp
aas
lock
loope
lock
test
iret
rcl
xor
int3
repz
out
rcl
cmp
loope
lret
call
lock
xchg
loop
icebp
ret
jmp
fsqrt
shl
iret
aaa
shl
cmc
repnz
mov
fadd
xchg
lock
ljmp
cmp
loop
fsincos
cli
xchg
out
aad
in
fiadds
xchg
out
int
aaa
ss
aas
jmp
int
test
aas
rcr
std
ljmp
out
out
iret
ret
ss
not
icebp
imul
fldlg2
aas
repnz
clc
mul
mov
std
incb
shr
aaa
fmul
fmul
repz
mul
fadds
stc
and
icebp
sti
mov
test
out
fst
cmp
xlat
aam
rcr
repz
addb
les
jmp
ljmp
sti
add
lock
call
test
je
leave
ret
push
mov
sub
movl
movl
incl
mov
add
jmp
leave
ror
xlat
fstp
fst
pop
push
inc
dec
or
jle
ret
jle
rcr
jmp
mov
xchg
int3
ljmp
cmp
xor
mov
lret
addb
fsubrs
out
xor
ror
out
repnz
clc
fucom
repz
ljmp
int3
jecxz
in
xchg
add
hlt
in
lock
lock
cmp
idivb
fxam
mov
out
mov
xor
test
hlt
aam
in
add
aad
aam
out
fucompp
mov
fiadds
stc
rcl
out
das
xor
cli
loope
aam
in
out
cld
in
testl
enter
fstpt
loopne
in
lret
fcompp
aam
fiaddl
fcmovne
fsub
xchg
enter
cli
out
lock
lock
lock
hlt
shl
fsub
loopne
jmp
cmc
stc
iret
xor
out
icebp
fadds
fistpll
add
out
mov
out
test
xchg
loopne
icebp
ror
cld
fdivr
xor
leave
int3
repz
out
ds
rol
test
lock
mov
fcmovne
int
out
idivb
cmc
cmp
fadd
mov
lock
nop
hlt
into
int
int
stc
sti
std
out
cmp
sti
icebp
sarb
loopne
hlt
aas
rorl
out
out
lock
test
repz
aaa
clc
into
jmp
hlt
fdivrl
mov
into
enter
jmp
loopne
hlt
cmp
out
cmp
icebp
xlat
test
rol
cli
int3
enter
in
mov
not
leave
jmp
xor
cmp
cli
loopne
test
ds
mov
mov
jecxz
xchg
enter
jmp
ror
in
int3
cmp
not
aas
in
ss
fnstcw
test
jecxz
rcl
mov
into
ror
cld
clc
cmp
neg
xlat
test
lds
xchg
shl
in
iret
repz
sti
cmp
iret
repz
fdiv
int3
stc
inc
jmp
sub
xchg
xchg
into
enter
fcmovb
cmc
idiv
in
ljmp
out
lret
std
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
adc
lea
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
lea
and
jmp
mov
into
lret
rcr
xlat
nop
aaa
dec
out
in
imul
push
mov
jle
mov
ficoms
shl
loopne
enter
clc
hlt
aad
loop
std
shr
test
test
mov
sub
leave
int3
fucomip
jmp
xor
in
ss
std
cmp
cmp
in
jecxz
cld
fcmovbe
cli
fmul
loop
in
test
out
out
in
xor
rcl
rcl
fdivrp
out
iret
rcr
std
aas
out
cld
aam
or
xlat
and
lret
rcl
cs
cmp
lret
cmc
int3
sarl
hlt
in
shl
aam
mov
cli
fisttpl
mov
lock
cmp
jmp
cmp
aad
rol
ljmp
nop
in
orb
call
shl
std
in
flds
aam
and
fdivr
icebp
iret
out
fidivl
int3
lret
aam
sti
adc
mov
cld
lea
repnz
rorl
lret
aam
jmp
repnz
loope
shl
or
stc
lret
out
lock
xchg
std
aad
repnz
ret
lock
xlat
cli
fucomip
rcl
cmp
cmpb
mov
sub
hlt
mov
xchg
xor
lret
fidivrs
shl
shr
ss
cmc
xor
cli
in
jmp
test
shl
xor
xlat
enter
xor
and
hlt
aad
stc
cld
sti
int3
orb
xor
lock
vcvttpd2dq
aaa
repz
repnz
fucomip
stc
decl
ror
in
iret
ss
leave
out
fucom
cmp
rcl
rol
cmc
test
leave
test
loope
call
shlb
test
cmc
fdivr
cmp
cmc
testb
loop
out
lock
clc
leave
out
sti
cmp
enter
out
fdivr
iret
out
out
fcmovb
hlt
aam
mul
test
in
addb
divb
imul
cmp
std
lret
fsub
in
leave
fldl2e
adc
loop
fucomp
jmp
jecxz
aam
rcr
idiv
out
jmp
in
fdivp
mov
hlt
in
sbb
into
nop
in
xchg
fdivs
xor
lock
aad
aas
xlat
cli
call
neg
out
inc
in
inc
in
adc
push
mov
mov
mov
sbb
jmp
rol
rcl
aad
addr16
sbb
jle
leave
fcmovne
or
rol
mov
xor
clc
repz
faddp
cli
mov
fucom
in
jecxz
jecxz
rolb
lret
aam
int3
iret
into
icebp
int
aaa
cmc
call
loopne
iret
ret
xchg
lock
rol
lds
repnz
lret
jmp
cld
in
fildl
call
mov
jmp
ret
hlt
cmc
in
aaa
int3
aaa
and
out
shr
ret
rolb
sti
sti
sti
in
nop
lock
xor
rcr
repz
cmc
ftst
in
and
icebp
test
loope
in
test
into
in
out
std
incb
out
clc
in
cmp
ljmp
mov
loopne
leave
int
lret
ret
loop
xchg
xor
sti
int3
fprem
lock
shr
jecxz
stc
les
fsubp
out
mov
fimuls
ljmp
lock
cli
jecxz
out
neg
xchg
int3
xchg
xchg
aam
xor
idiv
cmp
fiaddl
xchg
loopne
int3
cld
jecxz
lock
lock
xor
rol
in
xlat
call
jecxz
loope
in
nop
in
int
iret
xor
fincstp
fmul
fnstenv
into
cmp
test
ret
jmp
in
stc
out
or
jmp
idivb
fcom
fcmovb
int
lock
mov
mov
clc
in
in
fsubrp
xchg
shl
xlat
cld
out
sarl
aam
cmp
hlt
in
rol
fcmovnu
xchg
incl
xchg
xchg
jecxz
iret
jmp
xor
aam
lret
sti
jecxz
cmp
std
in
cmp
into
int3
filds
mov
cmp
fmul
clc
loop
iret
hlt
shr
repnz
xchg
fisttpll
jmp
jmp
sub
icebp
ds
shl
fprem1
rcr
rcr
fcom
cli
enter
ret
lret
jmp
hlt
aam
into
call
fst
ret
cmp
ret
in
loopne
cld
bnd
aam
cli
test
loopne
cmp
sar
test
repnz
int
in
loop
xchg
xchg
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jb
mov
or
mov
jmp
ror
into
fcmovne
out
je
sub
jle
ret
jle
repz
in
xor
rcr
lock
clc
fildl
clc
mov
loop
xchg
fimull
imul
shl
clc
jmp
repz
out
loop
in
add
orl
ss
jmp
or
and
faddp
and
test
xor
in
out
lret
ror
cmp
iret
repz
loope
cmc
std
jmp
leave
loope
mov
mov
aam
xor
cld
out
out
cmp
cmc
aam
cmp
jecxz
jmp
leave
mov
xchg
in
in
lock
enter
sti
cmp
not
into
repz
loope
hlt
fcmovnu
sti
orl
leave
clc
shr
lret
cmp
aad
sarl
cli
rorl
loope
jmp
out
iret
cs
fcmovbe
cmp
lret
cmp
aas
cmp
loopne
loope
lret
jecxz
xor
shr
test
cmc
in
fmul
call
aam
not
in
aas
lds
aad
lds
out
jecxz
out
into
leave
repnz
fdiv
cmp
hlt
cmp
in
std
cmc
fucomi
sti
iret
xchg
add
aad
out
cmp
cmp
imul
rcl
xlat
std
rcr
loope
fstp
push
adc
out
out
fcmovb
ss
clc
flds
cmp
rol
fidivrl
or
repz
shr
lret
in
leave
out
call
repnz
cld
jmp
hlt
jmp
rol
out
test
iret
in
sarl
call
ret
fcmovbe
mov
movb
rclb
xor
rcl
idiv
cmpb
aas
rcr
fucompp
jmp
call
out
into
lock
shll
repz
call
sti
int3
test
loopne
xchg
rolb
aam
aaa
ss
hlt
cli
incb
stc
fisttpl
fdivrp
in
decl
shl
fucomi
fld
in
cmp
clc
clc
aam
xlat
cli
adc
in
sub
hlt
out
xlat
xor
mov
adcl
xor
adcl
xor
adcl
add
add
div
mov
movl
cmp
jmp
lret
leave
aas
int3
leave
stos
jb
push
inc
xchg
out
mov
add
stc
aam
ror
hlt
neg
stc
repnz
addb
loopne
out
clc
lret
iret
int
ljmp
out
sar
ljmp
cmp
and
test
addb
cld
test
hlt
loopne
ret
aam
enter
leave
jmp
out
xchg
sub
ret
int3
in
cmc
aas
icebp
in
fsubp
mul
rorb
out
nop
mov
jecxz
stc
fprem1
cmc
fcmovu
lret
into
lret
sar
mul
ret
int3
in
xchg
test
in
out
shl
xor
sarl
fucom
into
cmp
fst
out
aam
ret
cmc
sti
ljmp
subb
jecxz
xor
rcr
ljmp
fcmovu
mov
fucom
stc
mov
fadds
jmp
loopne
int3
lret
out
hlt
cmp
sti
aam
rcr
xlat
cmp
aad
roll
out
out
cmp
cmc
ss
icebp
int3
in
int
iret
add
stc
mov
in
sbb
jmp
call
fcomi
fmul
cmp
sbb
mov
xchg
ljmp
xor
in
sti
aam
lret
in
loope
shl
fcomip
hlt
decb
cld
out
leave
repz
out
ret
rcr
ljmp
aas
loop
ret
hlt
aam
in
fmull
xchg
iret
ret
out
in
xor
leave
aam
cmp
ret
sti
out
adc
rorb
out
fxch
cmp
out
hlt
sarl
sarb
sar
jmp
test
lret
fldl
loope
out
jmp
cmp
std
rcr
loope
jmp
xlat
xchg
jmp
mov
cmc
enter
ss
int3
int3
lret
xlat
ffreep
fildl
in
call
in
faddl
repz
in
call
dec
testb
fcomip
call
sbb
lret
into
rcl
cmc
jmp
fsubrp
aad
rol
lock
fucom
test
loope
rolb
nop
xor
in
out
fimull
test
add
movl
lea
jmp
iret
iret
ror
ror
xlat
fstps
pop
loope
hlt
inc
fs
jle
ret
jle
lret
sub
repnz
out
ljmp
enter
div
aad
xor
jmp
cmp
fucomi
xchg
loopne
ljmp
fmull
out
repz
ret
icebp
icebp
fstpt
shr
cmc
shl
fcmovu
mov
sti
in
call
in
out
mov
icebp
xor
out
xor
iret
out
fcomp
jecxz
xchg
test
fdivr
out
loope
xor
out
shr
aam
push
lock
cmpb
icebp
cmc
loop
call
ljmp
call
fidivl
ljmp
neg
in
ret
ljmp
repz
xor
aaa
ret
xor
xor
cmp
hlt
or
addb
xchg
loopne
in
xor
leave
ret
cmp
ljmp
addl
icebp
and
int
in
mov
ss
rol
testb
jmp
cli
lock
mov
out
iret
rcl
call
aaa
sti
in
cmp
cmp
fcmovb
mov
out
or
hlt
iret
lock
cmp
sarb
cmc
jmp
loopne
clc
xchg
std
aam
jmp
in
call
mov
call
aam
repnz
ljmp
test
test
mov
sti
test
xchg
loope
xchg
int3
rol
clc
lock
fiaddl
xor
ret
aas
xchg
jmp
xchg
mov
icebp
into
out
xlat
call
ror
fmulp
cmp
rcl
out
cmp
ds
jmp
out
hlt
shr
rcr
mov
cmp
clc
loopne
fadd
mov
mov
fistl
into
ret
cmc
int3
lret
in
fsubr
cmp
ret
loope
jmp
test
std
mov
lock
rcl
call
repz
repnz
mov
cmc
out
xlat
fmul
mov
decl
sar
into
into
in
ds
aad
adc
cli
test
jecxz
fstp
int
cld
xchg
out
xchg
into
loop
in
lock
jmp
inc
lock
mov
jmp
lret
ret
int
lret
in
aad
scas
and
sub
ret
jle
aas
fxch
hlt
xchg
enter
cli
out
sti
fldln2
push
xchg
aam
xor
cmp
iret
rcr
leave
aaa
fadd
in
loopne
fdivrp
clc
hlt
sbb
ret
out
mov
loop
xor
cli
out
jmp
out
aaa
std
xlat
rcr
cmp
ljmp
call
shrl
mul
aaa
in
ds
cmp
cmc
repnz
icebp
iret
std
repz
cld
in
rcr
jmp
xor
cmp
idivb
sar
cmpb
ret
test
fucomi
xchg
lock
out
fstp
icebp
ss
iret
out
in
in
in
fiadds
test
loop
leave
div
hlt
fldl2t
aaa
fptan
sar
xchg
jecxz
in
out
loope
jecxz
testb
in
xor
repnz
out
rcr
out
mov
into
test
rol
out
ss
fstp
ffreep
jecxz
hlt
std
and
mov
xchg
repnz
xor
ljmp
rcr
movb
jmp
and
int
ret
hlt
shl
test
cmp
cli
test
out
xchg
in
repz
repz
ljmp
out
in
in
lret
mov
in
xchg
or
loop
in
iret
aaa
aaa
cmc
cli
clc
repz
fcmove
test
ret
rcr
cli
xchg
leave
out
out
call
fcomp
cmc
hlt
in
loope
sti
stc
ret
out
addb
mov
repz
xlat
cmp
rcl
fmul
ret
xlat
cmp
loopne
fstp
test
in
jmp
xor
loop
xor
aam
lret
loopne
rolb
jmp
loop
addl
repz
cmp
call
loope
lock
mov
cmc
iret
out
in
call
xlat
fstp
ret
test
xchg
shl
aad
ljmp
xchg
ljmp
sarl
clc
cmp
mov
mov
cmp
je
jmp
rcl
mov
aad
sti
adc
in
inc
jle
ret
jle
repnz
icebp
out
fisttpl
rcll
xlat
rol
icebp
xor
cmc
enter
loopne
shl
bnd
in
in
cld
mov
xor
int
shr
fmulp
cmc
cmp
cld
cmpb
lret
shl
iret
xchg
enter
call
ljmp
jecxz
loop
enter
cmp
xchg
lea
ret
in
sti
cmp
sarb
add
test
mov
fsubr
jmp
call
ljmp
cmp
rcl
roll
xlat
loop
sbb
xchg
cs
out
rcr
int3
enter
lret
rcl
repnz
cli
fcomi
mov
hlt
in
rol
aad
loopne
shl
aas
xlat
ret
ret
clc
loop
stc
aad
fiaddl
rcl
ljmp
xor
repz
cmp
adc
addl
hlt
test
lock
rcl
int3
xor
sub
test
shr
xchg
xchg
lea
in
ljmp
fsub
repz
add
rcr
into
leave
fisttpl
icebp
xor
call
test
cmc
ljmp
jmp
lret
loope
lock
jmp
lret
fdiv
into
cmp
hlt
cli
xchg
test
and
in
in
in
ret
shr
fcom
stc
repnz
clc
cmc
xchg
cmc
mov
in
aam
leave
out
leave
lock
in
fcmovnbe
aad
and
xchg
ljmp
repnz
loope
lock
ss
fdivr
neg
rol
add
or
in
into
cli
xor
fsubp
in
rol
jmp
sub
cmp
in
cli
ret
fprem
loope
test
lret
lret
aad
ljmp
imul
cmpl
cmp
out
enter
xchg
leave
fmull
cmp
lret
fcom
lret
clc
icebp
in
repz
mov
orl
mov
xor
add
jmp
rol
lret
fstp
aad
dec
jns
inc
ds
or
ret
jle
cld
and
lret
mov
out
dec
hlt
out
fprem1
stc
cmp
xor
faddp
xchg
testb
int3
loopne
addb
xlat
xor
in
icebp
loopne
int
fdivr
out
aas
call
fucomi
loop
loope
in
int
div
xor
out
out
std
shl
adc
incb
call
repz
ret
xor
hlt
cmc
cmc
sarb
out
cmc
int
xlat
fdivrp
repz
mov
nop
in
out
icebp
mov
rol
xlat
loope
xlat
cmc
neg
divl
cmp
out
ret
test
fildl
nop
shr
out
shlb
rol
cmp
leave
addb
ret
xchg
fadd
orb
sub
and
sarl
fidivrl
lret
cmp
xchg
rcl
shr
flds
xchg
repz
les
fcmovne
iret
addl
fmul
in
out
mov
hlt
fidivrl
in
fcomp
neg
lret
cmp
fst
jecxz
leave
test
leave
in
shl
mov
div
into
leave
repnz
fcmove
lret
leave
xor
cmp
fst
sbb
mov
xor
into
rcl
icebp
ss
call
in
sar
incb
mov
loopne
nop
out
into
repnz
out
sub
fidivs
aaa
in
repz
xor
xlat
rol
hlt
leave
stc
fimuls
ret
out
out
out
aam
stc
std
clc
lock
fcmovu
out
rol
fcomi
in
ljmp
into
xchg
call
call
fsubr
xlat
loop
cmp
in
movb
std
xchg
loope
xchg
and
fprem
not
fdivrs
call
in
cld
fdivrp
mov
out
out
loope
shl
lret
icebp
icebp
int
loop
sti
cmp
fiaddl
leave
fimuls
nop
int3
rcll
repnz
loopne
fcom
int
neg
test
aad
lret
cmc
fsub
cld
out
loop
cmp
cs
std
aad
ljmp
mov
out
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
jmp
fmul
into
ror
fstp
int
dec
je
mov
stos
push
ret
jle
faddl
mov
test
icebp
cmp
out
jmp
stc
rcl
out
cmp
fstpt
out
jmp
xchg
out
xor
lock
out
lock
jmp
iret
repnz
in
fildl
jecxz
enter
leave
xchg
neg
in
cmp
loope
xlat
fld
shl
aas
stc
cli
clc
clc
vpmaxub
test
ss
ljmp
int3
test
rcr
cmp
xchg
lret
jmp
out
mov
test
rcl
not
out
cmp
std
shl
mov
loopne
out
lock
xchg
xchg
in
in
in
jmp
into
in
xor
hlt
lret
std
and
in
in
decl
mov
ret
xor
fldl
in
add
cld
sub
fmull
fst
roll
leave
stc
cmp
cld
rolb
mov
fcmovu
int
lock
mov
jecxz
lock
cmp
iret
aad
leave
icebp
fdivrp
lock
rolb
in
cli
mov
ffreep
ret
xchg
mov
jecxz
enter
shlb
rol
in
cmc
clc
jmp
cli
adc
loop
xchg
xchg
ror
sar
cmp
jmp
push
hlt
int
iret
mov
rcr
mov
xlat
fmull
lock
aam
aad
iret
cmp
ror
fdiv
cmp
test
out
ret
mov
sbb
mov
std
add
lock
fcmovb
sarl
cmp
sarl
add
ret
clc
loope
std
xbegin
dec
lock
xchg
into
loopne
clc
cmp
lock
fdiv
loope
stc
fcmovnbe
aad
clc
loop
loopne
fstp
fiaddl
into
in
iret
jecxz
hlt
jmp
out
fdiv
rol
sar
ret
jmp
ret
stc
orl
xlat
int
iret
fdivp
imul
xlat
fcmovnu
fld
jmp
fsin
movb
leave
ret
lock
aam
cmp
ds
fstpt
shl
mov
ljmp
out
loop
xor
cld
cmp
lret
call
cmc
in
test
mov
add
rol
rcr
and
add
add
out
jmp
sub
out
cmp
aas
out
lock
in
aad
aam
enter
test
out
fisttps
in
loope
int
lret
in
icebp
cmp
not
aam
ds
ret
xchg
sub
ror
test
cli
out
cmp
lret
cli
cli
stc
fldz
fcom
aas
ret
in
lret
lock
shl
xor
ret
cmp
sti
cmc
shl
stc
cmp
test
lds
orb
rclb
lds
fdiv
fsub
iret
or
call
fdivr
mov
in
shl
iret
shl
into
fsubr
cmp
sti
das
xlat
sbb
roll
leave
fsubr
xlat
testb
test
add
out
aad
xor
xor
clc
std
fcomi
clc
ror
jecxz
shl
cli
cmc
jecxz
in
lock
test
loop
leave
repnz
dec
repz
fcomi
mov
sti
jecxz
int
std
test
fisttps
sub
int3
out
ds
ret
filds
repz
loopne
sbb
xchg
loop
mov
loopne
ljmp
aam
aam
test
rol
in
in
in
fiaddl
loopne
int
call
sar
cmpb
cmp
aad
loop
testl
xlat
jecxz
not
in
repz
addb
xchg
flds
sbb
into
nop
lea
test
xor
out
int3
fcmove
ret
out
std
ret
xor
call
fildl
sub
hlt
cmpb
fcmove
rcl
std
sti
inc
in
imul
jmp
lret
xchg
xchg
in
aam
xor
jmp
cli
out
lret
sar
fadd
adc
fiadds
jmp
xor
cmp
sar
int
cmp
faddl
les
xchg
cmc
xor
not
sti
aaa
ror
cmp
cld
fdivrl
sbb
loope
cli
in
xchg
sti
fsin
in
iret
roll
ljmp
cmp
xlat
loope
sarb
stc
cli
xchg
iret
mov
jmp
fadd
lret
fstp
aad
mov
cmp
out
cwtl
mov
ret
jle
xchg
xor
repz
int
xlat
loop
in
jmp
mov
xchg
xchg
cmc
enter
cmc
jmp
sarb
out
jmp
cmp
in
not
fcmovnu
mov
imul
sti
mov
xchg
cmp
cmp
ljmp
aam
in
ret
lret
fdivr
lret
xchg
out
mov
lret
cld
xlat
cmp
xlat
loopne
out
fimuls
stc
out
jmp
xchg
adcl
lret
cmc
das
int
lock
cli
clc
cmp
fldl
std
mov
fists
jecxz
xor
int
out
cmp
fadd
xlat
test
cmp
adc
incl
mov
rcl
lock
cmp
fcmovb
shr
cmpl
test
leave
out
mov
rcr
cmp
aas
xor
ljmp
shl
clc
xor
fnsetpm(287
jecxz
mov
or
jmp
repnz
jmp
shl
cmp
icebp
in
lds
addb
loopne
ret
aaa
int3
aaa
xor
fst
in
fdivrp
inc
loopne
filds
mov
fbstp
fnstenv
lret
call
not
in
aaa
orb
testb
orl
aam
sti
ljmp
iret
fdivr
mov
xchg
mov
call
fdivp
jecxz
aaa
aam
into
in
clc
cmp
aaa
idivb
shl
sti
out
aad
cld
fstp
jmp
mov
out
lock
clc
cmp
ljmp
xor
xchg
faddl
and
xchg
in
xchg
ljmp
aad
leave
shl
int
testl
clc
test
dec
adc
loopne
fcom
cmp
ljmp
add
mov
xchg
call
jecxz
aaa
icebp
cli
xor
in
cld
addl
aad
loope
test
addb
out
sti
lock
sti
in
cmp
xlat
ret
in
xchg
mov
mov
out
loop
xor
mov
add
cmp
je
mov
xor
jmp
ror
ror
mov
cmp
mov
ret
jle
enter
repz
loope
sarb
stc
cmp
loop
fadd
mov
cld
dec
sti
ljmp
xlat
in
aaa
leave
lret
aaa
cmc
fidivrl
sar
fidivrs
add
in
xchg
out
icebp
repz
lret
call
repnz
std
out
aas
ret
cmp
sar
ret
out
lret
shr
rorb
aad
ss
call
iret
in
loopne
sti
loopne
mov
decl
in
jmp
in
jmp
cmp
fsubr
sti
test
cmp
fcmove
out
in
into
into
test
sar
in
repz
fnstenv
test
rcr
mov
clc
clc
test
in
out
xchg
mov
xchg
xor
stc
fcmovnu
stc
int
aas
icebp
into
jecxz
rcr
rol
stc
out
int
xchg
out
cld
mov
loopne
in
out
shll
roll
fiaddl
nop
mov
out
test
mov
int3
ret
int3
fdivs
fnsave
rcr
fadd
sti
mov
call
test
in
shrl
aad
rcl
fdivr
out
cmc
aam
aad
in
icebp
stc
test
aad
mov
cmc
ljmp
adc
loope
lret
icebp
fstp
cmp
in
test
fldl
fadd
dec
ret
into
shl
jmp
ror
jecxz
imull
cld
fucomip
icebp
in
into
cmp
in
cli
repnz
std
iret
test
int
into
fsubr
cmp
cmp
and
repnz
and
test
loope
xchg
mov
int3
shl
cmc
neg
enter
cld
lret
aam
into
mul
loopne
stc
mov
mov
and
jmp
clc
in
repz
repz
in
lock
loope
hlt
hlt
aad
lret
test
repz
mov
out
ret
rcr
cmp
call
cmc
ds
rorl
out
lock
xor
xor
out
cmp
ljmp
test
mov
mov
shll
ret
enter
repz
std
xchg
int3
jecxz
jmp
rolb
enter
add
jmp
xlat
into
ror
fxch
flds
jp
pop
ja
sbb
add
jle
ret
jle
xor
leave
fcmovu
int3
cld
shr
test
leave
hlt
xlat
fdivrp
iret
icebp
xchg
in
into
loopne
loop
cli
aaa
cld
roll
ds
loop
ljmp
in
cld
orl
aaa
int3
clc
stc
icebp
div
ds
in
jecxz
leave
cld
in
fisttpl
xchg
xor
cmp
cmp
shl
aam
ljmp
ljmp
out
xchg
out
in
mov
ror
int
xor
out
xor
int
loop
test
mov
xchg
iret
in
lret
into
sar
cmp
aad
rcl
call
loop
lock
sub
loope
in
orb
leave
fmul
aam
lret
out
fistpll
idivl
sbb
out
clc
fcomp
loopne
mov
loopne
rcr
lret
jmp
jmp
adc
fabs
fdivrp
loop
test
jmp
jmp
rcl
jmp
sub
cmp
clc
addb
sti
cld
shl
or
xchg
into
aam
lds
mul
sub
int
cli
out
test
testl
in
xor
ret
cmp
fldl
xlat
ret
loop
rcr
in
add
xor
cli
in
xor
fadds
out
stc
xor
jecxz
out
jecxz
repnz
or
repz
call
fsub
shl
ret
hlt
rcr
loope
test
iret
icebp
testb
cmp
shl
repnz
neg
ret
clc
cmp
or
shr
fcmovb
stc
sarb
int3
xlat
xlat
stc
out
roll
call
out
int
lea
into
hlt
hlt
xor
rolb
clc
fsub
or
xchg
std
out
stc
decb
shll
out
lret
int
ljmp
sar
in
std
mov
mov
or
xlat
jmp
cmp
cmp
testb
mov
fimull
fxtract
xor
std
in
mov
jmp
lret
leave
int3
aam
aad
fnstcw
ficompl
push
test
push
ret
jle
loope
out
cmp
call
jmp
lret
into
rcl
out
sar
shll
fcomi
addl
fdivrp
cld
fcmove
mov
xchg
cmc
out
out
aad
std
xor
rol
idiv
fsubr
loop
xlat
jecxz
out
mov
fidivs
xor
fcmovnbe
sarb
into
lret
cmp
fstpt
in
mov
and
jmp
in
icebp
sarb
div
jecxz
fdiv
ds
rorl
mov
shl
call
xlat
rol
ss
ljmp
rcl
cli
out
cli
add
iret
ror
lret
fmul
cld
xor
cmp
and
leave
jmp
int3
std
call
shl
xchg
das
call
enter
fsubr
fcmovnbe
in
ret
leave
fisttps
cld
out
mov
stc
cmp
lret
lret
neg
sar
cmp
call
lea
int3
out
and
xor
repnz
out
cmp
int3
test
test
loopne
stc
ljmp
xlat
xor
out
int3
in
cli
aas
cmp
cmp
loopne
xchg
lret
mov
xchg
jmp
lret
aam
int
aas
rcr
loop
fsub
cld
test
test
xor
mov
aas
ss
testl
fdecstp
cmp
mov
hlt
ljmp
addl
ret
fdivr
sbb
lock
int
fnop
shr
xlat
sar
stc
in
xchg
call
fisttpll
into
shl
in
fidivrl
hlt
repz
loop
mov
les
lock
aad
out
xlat
sub
lock
ret
std
fiaddl
neg
lock
loopne
xchg
xchg
jecxz
loope
cmp
icebp
stc
ljmp
sti
ror
aam
leave
out
mov
in
ljmp
cmc
aad
out
cmc
leave
sbb
inc
fsubr
pop
add
add
ret
int3
fmul
aad
mov
dec
fimull
mov
jle
add
lock
ffree
hlt
ror
int3
mov
into
cld
repnz
shl
aas
sub
fmul
xor
call
hlt
ror
fdivr
jmp
mov
fsub
repnz
icebp
hlt
ret
aam
out
rcr
sti
cld
out
cld
add
out
fildl
out
in
jmp
ret
vpsubd
call
sti
std
loope
fdiv
test
ret
fcmovne
idiv
jmp
rolb
cmp
cmc
fcmovne
into
test
sar
shl
div
xlat
out
out
mov
lret
int3
addb
cmp
lret
aam
test
sarl
stc
mov
loopne
lret
rolb
mov
cmp
xor
in
lock
xlat
cld
out
clc
out
fcompp
loop
int
mov
xchg
rcll
hlt
lret
shl
cld
int3
aas
iret
adc
icebp
jmp
fldlg2
loop
fcomip
sar
repz
int
jmp
icebp
fdiv
in
imul
fimull
test
loop
fmul
sub
pop
aaa
out
lret
lret
ljmp
jecxz
rorl
test
loop
divb
int3
repz
xor
ss
stc
xchg
cmp
loopne
cmc
lret
cld
mov
test
shr
clc
cli
iret
addb
mov
fcmove
xchg
xchg
repnz
aad
out
aaa
lock
cmp
lock
sar
xlat
call
dec
cld
aas
sti
fisttps
xchg
enter
jmp
fdivrp
rcl
aad
repnz
xlat
xlat
fisttpl
stc
in
enter
ljmp
aam
fmul
icebp
cmp
cmp
loope
cld
xlat
in
int3
loopne
xchg
sub
out
icebp
aad
out
lock
enter
in
stc
iret
flds
int
mov
repnz
cmp
sarl
call
filds
xchg
mov
lea
xchg
loop
ljmp
shr
fnstsw
loop
std
sti
in
in
mov
aam
aaa
ret
in
ss
in
fsubp
loope
stc
jecxz
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
jmp
aas
into
iret
ror
rol
shr
movsb
lock
pop
jle
ret
jle
cld
repz
mov
lea
xchg
mov
repnz
imul
fmulp
lret
loope
hlt
in
test
movb
enter
jecxz
xor
stc
cmp
or
sar
out
fimuls
in
loope
in
icebp
out
mul
in
out
jecxz
cmp
lret
lret
shl
and
fadd
loope
call
leave
idiv
sbb
loopne
loope
int3
repnz
int3
xor
jmp
lret
cmp
fiaddl
test
loopne
adc
shl
ret
repz
lock
repz
jecxz
cld
not
out
test
in
xchg
lret
xchg
rcl
aad
aad
xor
repz
lds
addb
mov
xchg
mov
lret
lret
cmp
repz
lock
in
cli
lds
mov
aad
lock
cli
dec
fmulp
into
in
stc
div
in
std
aas
cmc
ret
ffreep
icebp
test
fstl
xlat
aaa
ret
xlat
aaa
ror
push
iret
aad
iret
xchg
mov
out
xchg
xchg
lock
iret
divb
int3
cmp
in
cmp
rolb
lret
fxch
out
mov
xor
out
enter
int
loop
cmp
fcmovnbe
mov
enter
adcl
ss
ljmp
lds
sti
in
imul
fsubp
std
test
fisttps
int3
int
lret
loopne
cmp
loopne
icebp
fildl
mov
sti
cli
icebp
nop
cmc
sbb
cs
lds
xlat
aaa
repnz
loope
int3
stc
jecxz
fildl
fsin
loope
lock
in
loopne
out
fnstenv
in
div
in
cmp
loope
stc
cld
div
clc
sti
mov
mov
lret
icebp
in
cmp
xor
hlt
cmc
ljmp
ret
mov
add
out
rolb
iret
xchg
ss
shl
out
repz
lock
ret
out
sti
repz
adc
into
int3
cli
mov
jmp
icebp
clc
jecxz
jmp
out
cmc
cmp
ror
cmp
fldl
xchg
jge
jmp
into
aad
vpaddusw
aad
js
jg
pop
cwtl
jmp
ret
jle
testl
shl
sti
lock
enter
lret
int
push
stc
in
xchg
mov
xchg
enter
in
and
xlat
enter
aam
fidivl
aam
into
testl
mov
sti
sti
add
aam
out
in
out
out
iret
hlt
call
fcmovu
xchg
cmc
cmc
fdivr
out
xlat
iret
fsub
call
loope
mov
xor
int
out
xor
out
ret
cmp
iret
call
cmc
jmp
cmp
cmp
icebp
sarb
rol
test
fldl
lret
in
loope
xor
ret
xor
out
leave
xor
dec
clc
aam
in
xchg
fptan
xchg
ss
cmp
and
stc
cld
call
out
xchg
in
int3
mov
xor
das
rcl
leave
cmp
loop
test
addl
repnz
ror
sub
ss
cmc
clc
int
fcomip
aaa
rcr
aam
aam
in
in
fsubrp
into
xchg
jecxz
out
test
lret
into
in
fcomip
iret
cmp
and
lret
lret
fdivr
mov
in
and
ss
int3
shl
lock
loope
repnz
xlat
repnz
test
clc
out
lock
cmc
mov
jecxz
cli
neg
ror
leave
leave
stc
cmp
rcr
loop
sbb
xchg
lret
mov
loope
xor
ljmp
out
idivb
idiv
std
test
test
rolb
repnz
in
repnz
test
ret
out
out
shl
fmull
sti
int3
orl
iret
enter
into
jmp
mul
in
enter
aad
in
xchg
popl
out
repz
hlt
stc
out
fiaddl
movl
jmp
in
shl
divb
ljmp
iret
cmp
adc
mov
lret
in
jecxz
aad
cmp
out
xor
ret
out
lock
mov
leave
neg
mov
xor
add
imul
sub
jmp
aad
int3
fmul
fnstsw
fistl
fcomps
jle
add
mov
aad
cmp
xlat
test
loopne
rcr
stc
sarl
cmc
cmp
in
xor
xchg
rorb
ss
loopne
sti
ret
xlat
cld
cli
fcmovu
out
leave
mov
xchg
fldlg2
xor
xlat
cmp
or
jmp
jecxz
out
testb
iret
lret
in
test
test
xor
into
lret
fsubr
in
and
xchg
cld
in
fdivrp
into
nop
xchg
ljmp
repz
clc
clc
neg
clc
addl
lds
jmp
xor
lock
cld
shl
aaa
fidivrl
cmc
shl
fxam
in
stc
mov
lock
addl
xor
std
sti
test
xchg
repnz
in
in
lock
in
jecxz
rcl
lock
out
fsubr
rcl
loopne
fcomip
xchg
call
icebp
aad
repz
fprem
in
dec
sarl
mov
leave
lock
repz
iret
icebp
fsubr
cmp
adc
fdivrp
sbb
lret
in
test
xor
out
int
repz
rcl
rol
sbb
mov
int3
out
jmp
xchg
mov
icebp
cmp
xlat
iret
fdivrl
loop
cmc
mov
xchg
in
int
xor
call
xlat
shr
cmp
repz
xor
neg
xor
ror
ror
aad
enter
repz
cmp
shl
ds
cld
faddp
loopne
sti
int3
cli
lock
fcomip
divb
sub
ljmp
aad
test
lds
xchg
int
int3
xchg
enter
ss
hlt
fcomi
sar
in
in
ffreep
loope
mov
loopne
out
test
cld
shl
out
cmp
jmp
repnz
jecxz
ljmp
ror
mov
lret
out
cld
xor
cmp
in
out
xor
loopne
xchg
loop
icebp
mov
jmp
mov
mov
jmp
int
iret
rcl
fcmovne
fnstcw
xlat
pop
sbb
jle
aam
loope
xor
fdiv
into
aaa
out
call
out
shl
repz
les
loopne
ror
aas
xlat
xlat
fnstenv
out
lds
xor
cmc
cli
jmp
fstp
mov
jmp
xchg
jmp
fcmovnbe
cmp
lock
jecxz
icebp
rcr
xchg
cli
mov
out
in
lock
shl
ss
cli
iret
std
cmp
cmp
cmp
cmp
lret
jecxz
loop
loope
xor
cmp
hlt
cmp
leave
in
in
aas
loop
roll
mov
jecxz
mov
fnstenv
cld
aam
ret
icebp
aad
fmull
test
call
sub
cs
call
loopne
xlat
iret
xchg
mov
ficoml
test
out
iret
xor
int3
div
jecxz
fdivrs
repz
repz
lret
fucomp
cli
fsubrp
out
sub
stc
jmp
aas
cli
iret
cmc
rolb
rolb
lock
call
not
cmp
fcomp
rcr
clc
sar
movb
xchg
test
int3
in
icebp
std
icebp
cmp
out
lock
mov
shl
ret
ror
rorb
xor
repnz
xor
aam
out
cmp
out
test
and
test
decl
rcl
sub
shr
clc
ror
ljmp
in
xlat
loope
fadd
fmul
sti
call
popl
xor
fcmovne
cmp
cmp
bnd
fneni(8087
shl
xchg
jmp
xchg
enter
xchg
lock
leave
hlt
cli
cld
in
repnz
rcl
hlt
fsub
cli
in
nop
test
out
cmp
xor
repnz
in
ljmp
ljmp
enter
int3
fdiv
jmp
ds
cmp
cmp
rcr
xchg
mov
lret
test
int3
xor
fsubrp
clc
aas
out
clc
cmp
ds
std
loope
hlt
testl
rol
xor
cmp
jmp
int
int3
int
cmc
inc
cwtl
pop
mov
mov
jle
ret
jle
in
out
fcmovne
xor
cld
rcr
xlat
sbb
cmc
or
loop
xchg
out
in
ljmp
jmp
cmp
jmp
rcr
xrelease
jmp
jmp
mul
xor
xor
idivb
jmp
into
rolb
test
cmc
testb
xchg
mov
stc
out
cmp
sar
xchg
icebp
cli
fcomi
stc
orl
or
sar
int3
in
cmp
shl
aam
out
ljmp
mov
in
in
in
mov
loope
cmp
cmpb
rcl
aad
xor
fdivp
orl
out
das
call
fcmovnbe
loop
in
ds
cmp
test
jmp
xchg
jmp
mov
jmp
out
iret
fdivrs
cmp
fnstcw
adc
push
fadds
mov
in
rcl
loop
shll
repnz
out
xor
in
repnz
in
nop
clc
cmp
nop
mov
ret
repz
out
cmp
ds
loopne
rcr
in
mov
jmp
mov
xchg
out
rcl
lret
sar
in
cmp
cmp
repz
fld
aam
in
in
and
mov
xor
fstpt
std
cli
aas
loope
loopne
ret
jmp
sti
fstp
int3
lret
repnz
ror
cmp
in
cmp
cmp
int
cli
cmp
sti
repnz
stc
in
ret
jecxz
lret
iret
ljmp
into
in
xor
loope
loopne
stc
aam
cli
lret
ljmp
into
lret
mul
fadd
cmp
int
cmp
loop
addl
ror
sub
enter
lret
hlt
ss
leave
jmp
cmp
aad
add
aas
out
or
fsubp
out
xor
fsubr
shl
loopne
adc
rcr
shl
stc
stc
imul
xor
in
aam
test
fcmovnbe
in
iret
leave
aam
aam
div
enter
filds
rolb
fsubr
cli
je
mov
jmp
rol
int
fcmovnbe
mov
or
and
jle
ret
jle
out
sar
stc
shlb
repnz
out
xlat
fucomp
rorb
sbb
fidivrl
in
leave
int
cmp
out
clc
aam
rcl
mov
jmp
out
das
call
clc
clc
fcmove
in
icebp
iret
mul
aam
fadd
out
int
out
fldl
xor
cmp
cld
lret
in
lock
incb
xchg
fst
lret
jmp
repz
xor
repz
fnstsw
fxch
imul
rol
hlt
stc
sub
loope
xchg
call
hlt
cmp
cmc
aaa
ds
sar
in
test
in
loop
lock
in
fimuls
ret
lock
out
lret
aad
loope
aas
cmc
fsub
in
or
nop
sti
out
nop
mov
aam
clc
repz
not
ljmp
xchg
into
or
mov
lret
out
jmp
sti
fiadds
stc
test
in
call
lock
mov
jmp
ljmp
add
cld
shl
call
fucomp
int
lock
mov
jecxz
iret
cmp
aam
ljmp
sarl
loope
in
in
idiv
loopne
fsubrp
fsub
hlt
in
out
xor
out
int
cmp
stc
repz
out
lret
enter
roll
out
cmc
xor
out
cmp
xchg
cmpl
xchg
clc
xor
int
cmp
cmp
mov
loopne
in
xchg
in
into
sub
xor
aaa
int3
cmp
hlt
jecxz
rcl
jmp
test
out
fildl
xlat
ljmp
rcl
cmp
test
ret
xchg
clc
enter
sti
xchg
cmc
imul
in
ss
stc
ljmp
loope
xchg
fucompp
ljmp
int
enter
clc
jmp
test
idivl
ret
in
mov
addb
out
lds
fildl
pop
jmp
mov
jmp
ret
int
fstl
mov
data16
push
jle
cmp
ret
std
jmp
jmp
sti
loop
fstl
in
in
shll
cli
ror
loope
aam
jmp
cld
fsubrp
in
jecxz
cmc
ret
hlt
shl
lret
clc
push
fsub
int
rcl
cmp
div
addl
test
xor
aaa
shl
cli
stc
sarb
call
out
mov
loopne
jecxz
stc
iret
orl
cmp
ljmp
fcomip
hlt
std
test
mov
ret
shr
xchg
out
out
out
repnz
sbb
aad
and
sti
cmc
xlat
rcr
rclb
out
hlt
shr
cmp
jmp
sarl
fildl
addb
mov
nop
ret
loope
sar
in
ds
aad
jecxz
ret
repnz
sti
inc
in
test
cli
nop
fiadds
xor
loop
cmp
sti
sti
icebp
xlat
jmp
ds
and
fmul
stc
loopne
loop
jecxz
mov
xlat
fmul
xlat
repnz
iret
std
fmulp
sarb
lret
leave
mov
cld
fisttpll
sub
iret
in
lock
lock
cmp
imul
clc
in
inc
lock
xor
out
sarl
enter
cli
cmp
icebp
icebp
dec
cmp
leave
test
out
leave
icebp
stc
repz
repnz
out
iret
rcl
loope
rol
sti
hlt
stc
in
std
ljmp
jmp
ror
div
xlat
sar
aam
sar
cli
aad
loope
out
fldln2
ret
xor
mov
aad
shl
icebp
stc
cmp
rcr
in
and
loope
int
out
ljmp
clc
cmc
fsub
faddp
ljmp
std
out
cli
call
fucomp
fldl2t
loop
hlt
aad
xor
cmp
rcr
lock
clc
fdiv
test
xchg
fcmovne
fildl
cld
xchg
xchg
in
out
int3
div
clc
aaa
neg
jmp
hlt
divb
loop
xchg
ljmp
xchg
xor
cmp
cmp
cmp
je
jmp
int3
ret
int
mov
pusha
das
pusha
mov
jle
ret
jle
cmp
test
out
aad
jmp
fsubrp
xchg
shl
xchg
rcl
lds
std
enter
test
loope
sarl
out
xchg
jecxz
out
xchg
ljmp
cmp
idiv
sarl
div
test
jmp
test
loop
lret
call
aad
jmp
in
rolb
out
lock
mov
out
shlb
cmp
xlat
not
jmp
aad
fdiv
jmp
sbb
in
lea
int3
in
ror
stc
clc
int
int3
std
icebp
aam
in
sar
test
out
mov
mov
out
out
lock
icebp
out
sti
cmc
cmp
filds
loopne
mov
test
jecxz
out
std
out
call
cli
ss
cmp
xor
xlat
out
ds
xchg
enter
mov
icebp
fucom
out
addl
int
cli
repnz
clc
roll
repnz
hlt
ret
in
lock
test
loopne
xlat
loopne
idiv
decl
aad
ror
sti
cmp
fnstenv
xchg
in
jmp
sti
jecxz
xchg
nop
iret
out
ljmp
rcl
fsubp
cmp
fstpt
cmc
div
ds
flds
clc
jmp
adc
ljmp
leave
iret
out
in
out
cli
faddl
mov
into
mul
repnz
repnz
aam
in
imul
sar
rcl
fildl
xchg
in
loop
xchg
aam
ret
shr
jmp
repnz
test
into
out
jecxz
xchg
ljmp
loop
mov
clc
ljmp
fsin
out
cmp
aas
ret
icebp
sbb
xchg
cli
ljmp
enter
hlt
repz
hlt
leave
loop
in
nop
mov
rcl
in
clc
cmp
jmp
iret
repnz
aas
shl
out
lret
sar
sub
int
lock
into
xlat
aam
ljmp
xlat
lahf
sbb
sub
call
in
jmp
aad
iret
aas
rol
aad
push
inc
push
out
sbb
jle
test
jle
jecxz
in
loope
out
rcr
repz
in
lock
in
out
or
lock
ljmp
call
loop
xor
divl
into
std
lret
xlat
cmc
add
test
vpsubw
out
or
aad
sarb
lret
shr
out
aad
cmp
sarb
xlat
out
stc
test
sti
loopne
div
repnz
lret
xor
lret
in
ljmp
xchg
cld
idiv
fadd
ret
fstp
std
std
stc
lock
mov
out
rcl
loop
shr
xor
aas
into
out
cmp
fld
loope
out
hlt
into
loop
ret
div
iret
jmp
sub
ds
icebp
ljmp
into
loop
test
clc
enter
aaa
stc
hlt
repnz
hlt
aam
cmp
test
shr
mov
fildll
idiv
aad
cmp
cmp
rcr
rcl
out
test
mov
enter
out
fmul
shr
in
icebp
aaa
aaa
fcmovu
jmp
repnz
out
rcl
jmp
mov
mov
addl
enter
fiadds
out
mov
fcmovu
sbb
fmulp
shr
adc
ret
xor
ljmp
rcr
add
orb
rolb
lock
cli
in
jmp
hlt
lock
rol
decl
dec
out
jecxz
out
repz
ljmp
lret
aam
fcmovnbe
ds
test
std
lret
mov
xchg
ljmp
fcmovnbe
cmp
and
repnz
ret
jmp
xchg
aad
int
out
aad
fidivrs
fidivrl
aas
call
lret
lret
loopne
loope
xlat
jmp
ljmp
aas
cld
stc
fsub
repz
ffree
in
test
jmp
loope
int
xor
shr
xor
test
ret
fcmovu
jmp
mov
loop
in
rclb
fisubrl
fdivr
clc
in
flds
ljmp
in
sti
iret
xchg
mov
repz
in
lret
lret
int3
sarb
aam
div
rol
fcom
lret
hlt
lret
icebp
cld
mov
call
jmp
hlt
fstpt
cmp
repnz
fscale
out
decb
repz
out
idiv
jmp
cli
lret
cli
ss
lock
in
loop
in
std
xchg
sub
jmp
aas
into
lret
leave
aam
dec
jo
in
pop
mov
add
addb
cmc
into
inc
cmp
repnz
sbb
aad
fcomi
or
shr
mov
in
ss
sar
in
call
shl
faddp
addb
into
mov
xchg
xor
enter
shr
out
shlb
fadds
hlt
fisttpll
xchg
xchg
loope
loop
sti
fcmovnb
xor
ljmp
cmc
fcom
stc
fcmove
enter
adc
mov
call
rcr
aad
sbb
std
out
jecxz
faddl
test
mov
mov
and
leave
mul
ljmp
sbb
sti
xlat
out
lret
mov
mov
xchg
hlt
clc
iret
in
hlt
cmp
sar
adc
roll
jmp
out
int3
fucom
repz
sub
sti
aam
call
test
out
aas
fucom
sti
out
mov
ljmp
call
out
cmc
cld
clc
in
sub
loopne
into
call
lret
xlat
fcmovne
out
cmp
cld
rcr
loope
ret
out
idiv
loopne
lret
jecxz
in
rcl
aas
ror
xor
in
std
cmp
cmp
lret
sbb
std
call
ret
repnz
clc
mov
fildl
call
cmp
int
fcmovb
rcr
clc
repnz
out
cmp
not
and
cld
out
jecxz
int3
enter
test
ret
loop
fcmovbe
leave
mov
fiaddl
mov
xchg
dec
cmc
xor
fxtract
call
div
loopne
xlat
clc
rcr
ret
cld
jecxz
out
out
jmp
mov
lea
aam
call
shr
sti
and
fadd
fcmovnu
sti
aam
mov
fcompp
in
lret
lock
repz
in
int
cmp
into
int
and
aas
out
ret
fisttpll
out
test
xor
lret
fdivr
enter
cmp
fnstsw
in
idiv
and
leave
call
cmc
xor
clc
xor
ljmp
in
ds
xlat
out
test
int3
int
xchg
loope
out
aaa
jmp
repz
cmp
cmp
rcr
icebp
imul
fdivr
fcmovnu
xchg
xorb
hlt
shl
jmp
lock
addb
fsubrp
call
int3
xchg
cmc
lret
shl
sar
std
lock
fstp
neg
incb
int
orl
lock
xor
push
jmp
int3
ret
int3
int3
sahf
pushf
pslld
aam
jb
jle
add
xor
std
cmc
clc
xchg
aas
and
jmp
call
cs
ss
aad
repz
lock
repz
cmc
xlat
addl
leave
sbb
orb
cmp
cmp
fnstcw
out
aam
hlt
roll
in
shl
xchg
xchg
ror
ss
call
fdiv
aas
int
xor
out
sti
stc
mov
lret
shl
test
idivl
shr
ss
lret
cld
lret
inc
cmp
in
ljmp
lret
jecxz
sarb
enter
sarl
ret
test
lds
adcl
cld
aad
ss
hlt
sti
test
les
int3
iret
into
xor
out
call
int
rcr
cmp
stc
xor
loope
fcmovnu
sub
mov
cmc
xor
cmp
jmp
shl
out
jmp
mov
in
ljmp
hlt
ss
lock
stc
aas
cmp
test
cmp
fimull
in
out
loop
aam
xor
shr
cli
sarl
std
xlat
in
test
aad
out
xchg
mov
ljmp
xor
out
int
cmpb
aam
sti
fmuls
std
int
aad
ret
in
xor
out
fdivp
roll
cmc
xchg
loop
fadd
loope
mov
out
cmp
int3
aad
cmp
cli
xchg
stc
sti
mov
cli
adcb
test
lock
cmp
cmp
cmc
loopne
aam
cmp
mov
mov
imul
ss
enter
out
aam
cmp
lock
fxch
loope
ret
mov
mov
jmp
idiv
out
std
aam
hlt
not
jmp
lock
ret
cmp
clc
test
orb
mul
cmp
repnz
in
cmp
call
incl
mov
jmp
cmc
cld
imul
shlb
idivb
cmp
cmp
cld
mov
in
clc
mov
in
out
cmp
cmp
ljmp
adc
fcomi
sub
testb
xor
aam
loop
stc
neg
xor
xor
test
fsubrp
orl
or
mov
xor
in
int3
jmp
out
stc
fstpt
sarl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
pushl
call
jmp
adc
jmp
lret
into
fst
fstp
bound
sbb
jle
test
jle
cmp
inc
loopne
cli
std
clc
in
int
xchg
popl
cmp
into
fcomi
out
fcmovnu
int
testl
nop
int
orl
lret
fmul
xor
in
out
fdivr
orb
into
in
int
jecxz
fcmovne
push
out
or
aas
cmp
ljmp
nop
xchg
sub
xor
lret
neg
enter
loope
sbb
sub
xchg
add
lea
jmp
fsubr
fnsave
shl
incl
ljmp
mov
jecxz
shr
xor
lock
aam
cld
into
iret
icebp
adc
test
clc
jmp
enter
popl
fldz
out
into
cld
out
cmp
rcr
call
lret
out
in
lock
out
std
xor
into
test
in
fidivrl
ffreep
test
jmp
loop
adcl
xor
jmp
rcl
hlt
sbb
hlt
xchg
loop
lret
call
mov
into
cmc
fiaddl
frndint
ret
ljmp
jmp
cli
repz
in
out
out
std
loop
not
int
fiadds
rolb
int3
xchg
xor
fxch
xor
icebp
in
loop
out
fadd
clc
in
fcmovne
repnz
test
repnz
xor
fmulp
cld
loopne
loope
ffreep
lock
rolb
sti
mov
idiv
in
into
stc
fcmovnbe
jmp
test
fsubrp
lret
ljmp
out
rcl
loope
xor
ror
ror
xchg
lret
fxam
filds
xchg
sub
clc
iret
in
xor
stc
out
iret
std
cli
lock
cmp
ret
stc
mov
stc
in
int3
out
roll
shr
out
sti
call
rcl
aam
and
aad
out
and
fists
ror
in
jmp
in
cmp
out
idiv
test
idiv
flds
cmp
repz
iret
out
shr
rol
aam
int
repnz
cmp
movb
stc
xchg
iret
fmulp
mov
xor
in
cs
cli
aas
into
xlat
clc
repnz
rcr
ljmp
clc
into
into
xor
jmp
aam
xor
std
aam
fneni(8087
vpsubusb
ret
add
aam
rcl
aad
inc
xor
mov
ja
jle
add
ljmp
ret
cmc
repnz
fmulp
cmpb
repz
ds
in
xchg
or
in
fyl2x
cli
icebp
cld
cmc
loop
stc
fld
in
leave
jmp
ds
fdivr
in
std
out
stc
mov
in
loope
fmul
cs
cmc
icebp
xlat
cmp
fnstsw
out
cli
loope
std
fmuls
call
xlat
rol
ljmp
imul
repnz
hlt
cld
dec
and
rcr
mov
iret
sarl
xor
lock
sub
in
xchg
test
loop
out
ror
aad
hlt
aam
jecxz
cli
ror
cmp
cmp
clc
std
stc
fcmovbe
fucom
filds
mov
lock
call
les
mov
cld
leave
loop
xchg
aad
lock
shl
call
fsubrp
iret
ret
out
fimuls
lret
out
nop
rorl
stc
xlat
fucomi
test
rol
ds
repz
loope
in
in
out
aam
shr
lock
stc
in
jmp
cmp
fsubp
inc
rcr
incl
lock
addl
fdiv
sti
lret
in
cmp
push
cmp
rcl
sbb
mov
loop
jecxz
sbb
cmc
xor
xor
int
xbegin
rcl
lock
fptan
ljmp
out
in
into
repz
out
cmp
xor
cmp
iret
xlat
in
xchg
fisttpll
test
cmp
jmp
shl
call
cli
test
mov
repnz
int3
ret
repz
fbstp
in
sti
in
repz
repnz
in
call
in
icebp
out
int
jmp
cmp
call
cmp
decl
in
mov
int
cmc
int
into
int
shr
cmp
lock
loope
in
ror
loopne
cld
fimuls
rolb
xor
out
lock
fsubrp
loopne
in
les
decb
and
ror
xor
icebp
vaddsubps
not
xlat
repz
out
mov
xchg
test
xlat
out
aaa
loop
rol
flds
aam
call
ror
shr
in
loope
out
ss
cmp
stc
lret
aam
loop
adc
into
mov
loope
ljmp
xor
adcl
add
jmp
mov
fcmovnu
or
sub
dec
jne
ret
jle
add
jecxz
not
cmp
cld
int
cmp
repnz
in
fmull
ljmp
sti
int
shr
ret
cld
xlat
xlat
add
xchg
ret
in
xchg
xchg
mov
in
cmp
in
enter
push
cmp
in
mov
out
fdivr
call
int3
call
in
fcmove
clc
out
clc
cli
ret
orl
in
leave
fdiv
imul
vpsrlw
xor
loope
rcl
cmc
and
cli
xchg
call
iret
lock
fdivrl
out
xor
cmp
icebp
jmp
out
and
xchg
xchg
xor
int3
fdivs
std
fnstsw
ds
or
aam
rcl
addb
lock
loope
test
leave
xor
rcl
xlat
fistpll
fucomp
in
mov
repz
out
out
icebp
lret
in
imul
int3
sti
dec
sti
fcmovnu
shl
aas
mov
sti
test
loop
jmp
mul
lret
ret
stc
lret
cmpb
xor
and
in
test
in
clc
out
aaa
ss
std
jmp
rcl
ret
aas
stc
cli
lret
clc
mov
jecxz
xchg
xchg
xor
out
out
fnstsw
repz
mul
in
and
xlat
out
std
jmp
nop
cld
int
loope
aad
loop
fcmovb
leave
call
out
stc
shl
cld
fstp
testl
sub
mul
xor
int
cmc
into
into
ret
sarl
cli
shr
mov
mov
icebp
xchg
in
aam
in
leave
shl
neg
lret
cmp
aas
xchg
roll
out
stc
in
leave
xchg
xchg
xor
aad
rcl
fdiv
in
ret
clc
testb
call
in
leave
ljmp
jmp
jmp
mov
repnz
sti
out
xchg
loop
mov
aam
xchg
repz
in
jmp
xor
cmp
loope
lret
cli
leave
fsts
lret
aam
cmp
xlat
aas
lock
test
hlt
in
fsub
jecxz
std
mov
jmp
jmp
test
sarl
cmp
cli
ffree
filds
aam
loope
out
xrelease
jmp
ds
roll
sti
xchg
enter
std
fisttps
out
xchg
aad
xlat
cmp
ror
int
in
int3
cld
push
not
mov
xor
mov
adcl
xor
movl
jmp
iret
lret
rcr
aad
int
jge
ja
dec
test
insb
jl
jle
add
repz
clc
neg
stc
lea
mov
out
cmc
in
stc
clc
enter
sar
shl
sar
test
lret
rolb
aam
call
cmc
incb
mov
sbb
fxch
out
test
xchg
mov
shlb
cmc
int3
repz
call
clc
loope
xchg
rcr
aam
idiv
incb
xor
icebp
xlat
in
cmp
loop
incb
int
call
xchg
out
xor
cmp
fdiv
in
leave
fcmovu
rcl
shr
loope
rcl
out
xchg
into
xchg
test
fcom
xor
fucomp
cli
ljmp
incb
into
cli
clc
cli
loopne
repz
shr
into
ss
cmp
cld
in
repnz
rol
xchg
enter
fcomip
lock
aad
cs
roll
aad
mov
mov
in
mov
xchg
shr
ret
fsub
lret
lds
repz
repz
loop
loop
test
fcmovu
aam
mov
out
ret
shr
out
fistpll
jmp
and
ljmp
lret
mov
out
out
hlt
int3
out
repz
xlat
cli
loope
int3
test
rcr
jmp
out
fcmove
in
loop
xchg
push
ror
repz
call
xlat
out
rcr
cmpb
int3
in
lock
lock
or
ss
in
in
xor
cmp
out
xor
fdivr
loope
test
cli
sti
loop
into
leave
repz
rcl
test
out
jmp
aas
repz
mov
jmp
out
jmp
out
lret
aaa
jmp
fucomp
cmp
leave
test
ljmp
out
in
mov
out
aam
in
lock
aam
fmul
ret
cmc
fsub
mov
cmc
lret
jmp
orl
jecxz
aad
fsubr
cmp
loop
cmp
cld
loope
aam
mov
jmp
test
lock
call
cmp
out
cld
test
int
mov
out
shrb
ss
aas
hlt
ret
enter
or
lret
jmp
aam
call
cmp
roll
sti
cmc
decb
out
loop
out
shl
in
aaa
fadd
adc
jecxz
xchg
jmp
movl
add
movl
jmp
jmp
enter
int
int3
lret
xlat
ja
shrl
movsb
xchg
jg
jle
add
ror
fimull
cli
loop
in
leave
repnz
rcl
cmp
loope
stc
test
call
shr
repnz
out
cmp
fdivl
jmp
jmp
icebp
neg
mov
fmull
mov
ss
xor
shl
neg
aam
add
fld
leave
mov
jmp
mov
int
out
lret
icebp
out
ror
aam
std
out
ret
inc
incl
xchg
ret
out
jmp
into
cmp
neg
aas
int
aas
rol
testb
and
shl
in
fnstcw
into
int3
jmp
cmp
cmp
ret
out
add
lret
icebp
in
xchg
jecxz
out
mov
lret
in
out
xlat
aaa
call
leave
shl
jecxz
out
repz
test
mov
icebp
int3
ljmp
sti
sar
shl
test
leave
ret
lret
in
out
xchg
enter
loopne
cs
fcom
xor
repz
call
or
repnz
enter
div
lret
test
aam
into
sub
lret
lret
jmp
aaa
xor
cmp
out
lock
std
xchg
jmp
out
ljmp
out
in
idivb
sar
jecxz
loope
in
shl
stc
jmp
loop
mov
test
shl
out
out
xor
rcr
into
in
cld
sar
and
iret
loop
test
in
hlt
xor
int
leave
ror
idiv
out
loopne
in
sti
loop
in
mov
cmc
xor
shr
aad
fnstsw
jmp
in
lock
aam
loopne
out
in
aad
mov
stc
in
roll
xor
imull
aad
shl
int
aad
jecxz
rolb
int3
into
in
call
fnstenv
fdivrs
cmp
divb
shl
fiaddl
ret
stc
cmc
enter
mov
repnz
jmp
repz
lret
xlat
icebp
into
imul
cmp
cli
rcr
xchg
loop
mov
jecxz
out
shll
xor
aam
cmp
loop
rcl
loop
repz
in
fcmovb
cld
in
lret
in
shl
jmp
ss
dec
out
int
rol
loope
addl
loope
faddl
xor
clc
fucompp
xor
call
or
and
call
repnz
out
lret
xor
call
sarl
test
filds
xchg
in
nop
movl
add
mov
mov
mov
movl
mov
mov
mov
mov
notl
jmp
rol
lret
ffree
aam
mov
mov
lods
rol
add
test
jle
mov
aad
int
repz
sar
fdivrp
sbb
ds
stc
iret
flds
test
xor
sti
fnstcw
repz
fcmovu
vpmaxub
out
enter
fsubrp
loop
div
les
fxch
cmp
aas
jecxz
ds
cld
cld
loop
out
fsqrt
jmp
out
xchg
into
cmp
lret
out
fdiv
shl
shl
leave
add
loope
out
jecxz
xchg
shl
aam
lds
ss
jmp
ret
cmp
shr
mov
loopne
mov
out
jmp
loop
sub
les
cmp
xor
fidivrs
jecxz
test
in
call
stc
xchg
mov
ljmp
lret
repz
mul
xlat
in
cli
testb
lret
loopne
iret
or
ret
in
stc
sti
in
cmp
in
fdivrp
loope
out
test
cld
out
cli
mov
mov
shr
xor
out
imul
xlat
cmp
test
cmc
fcmovnb
fadds
jecxz
in
lock
aaa
xlat
ljmp
test
cmp
in
mov
fmulp
xchg
in
call
aaa
aaa
repz
cmp
cmp
ret
loopne
hlt
sar
mov
loop
in
popl
in
in
rcl
cmp
xor
out
ret
repz
cmc
fadds
lret
ficoms
ret
int3
vpaddusw
aam
rcl
cmc
jecxz
xchg
in
lret
mov
mov
ljmp
out
out
cld
in
rcl
std
ror
xlat
rcl
div
mov
mov
shl
aad
in
neg
aaa
int
aam
aas
cmc
jecxz
fcmovb
sar
ret
xlat
sti
fadd
loop
test
decb
xor
int
into
cmp
cmp
aad
sarl
in
ret
add
int3
addl
xor
in
fdivrs
lret
xor
in
repnz
aas
fsub
hlt
test
mov
out
into
not
repz
fmul
cld
rcr
loope
xlat
clc
hlt
test
mov
jmp
call
jmp
ljmp
std
aas
out
mov
jmp
fiaddl
in
aaa
call
clc
sti
cmp
repnz
loop
cmc
enter
mov
lock
out
out
repz
hlt
fucomi
aad
cmp
int
icebp
and
stc
mov
xor
mov
sti
enter
fsubp
fdiv
mov
jmp
cmp
jmp
into
int
xlat
sbb
mov
jg
test
jle
addb
ret
int3
loopne
repnz
loop
jmp
int
jmp
not
cmp
aad
ljmp
decb
jmp
shlb
std
jmp
les
sub
in
jecxz
jecxz
loopne
repz
aad
aam
hlt
sub
lret
cmp
fucomip
lret
lret
addb
ss
in
out
rol
aam
iret
neg
loope
cmp
div
or
loop
xchg
lret
out
in
loop
out
ss
fdivr
pushl
add
fsubr
cmc
xlat
cli
add
xchg
in
xor
cmp
pushl
int3
icebp
cmp
rcr
sar
jmp
mov
cmc
lock
cmp
imul
adc
fucom
in
bnd
addl
shr
fcom
fpatan
call
ss
ret
cmp
loopne
loopne
int3
xor
test
enter
test
neg
fisttpll
fcmovnbe
leave
std
xchg
repz
xor
jmp
in
shl
add
leave
fsqrt
jmp
or
leave
fxch
lret
push
out
shr
jecxz
xor
aad
xchg
lret
loopne
fiadds
xor
sti
cmp
shr
in
jecxz
cld
fldl
int3
rol
xor
sti
div
ljmp
cmp
test
in
nop
cld
adcl
icebp
cmc
aaa
shr
jecxz
repnz
fdivr
and
xchg
fdivr
out
in
in
jmp
loope
xor
sbb
rcr
test
hlt
out
ss
out
neg
in
add
ds
xlat
and
fsubr
test
cld
out
fisttpll
in
cmp
xor
idiv
loop
stc
iret
lock
fcmovnb
call
cli
mov
repz
ret
cmp
shl
into
lret
aas
cmpl
rolb
sti
xchg
out
cmc
into
xor
call
jmp
out
jecxz
into
fcmovbe
sbb
test
in
faddl
ljmp
ljmp
sar
cmp
fcom
incl
xor
jmp
cmp
cmp
enter
cmpl
sti
cld
sbb
jmp
add
sbb
andl
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jb
xorl
jmp
ret
int3
int
ret
leave
pop
cs
xchg
pop
jg
test
jle
fcom
mov
lock
leave
cmc
in
fstp
lret
aad
fcmovnbe
hlt
aad
leave
cli
dec
ret
fucomi
mov
loopne
sti
cmp
jecxz
out
stc
xchg
loop
jmp
fadd
clc
sti
cli
xchg
loope
cmc
out
xlat
ss
fucomip
sar
lock
clc
mov
orl
xchg
xchg
ret
into
ss
into
fnsave
fst
jmp
fst
aam
addb
sti
iret
loopne
xchg
subl
aam
cmp
loop
mul
out
inc
in
idiv
ljmp
lock
fdivs
out
out
std
rol
aad
aam
fmul
cmc
lret
loop
test
ljmp
into
idivb
shl
test
loop
test
into
adcb
shrb
lret
xor
fdivrl
fsubr
out
icebp
mov
ret
mul
lret
repz
xor
call
sbb
roll
ret
mov
fucomp
sub
repnz
jmp
into
test
sar
shl
stc
test
leave
xchg
lock
cmp
out
lret
cmp
xlat
sarb
cmp
cli
rol
mov
mov
mov
adc
hlt
fld
jmp
xor
leave
jmp
sar
mov
mov
mov
ljmp
lock
rcr
div
repz
rol
mov
fiadds
in
jmp
enter
xor
std
sar
test
mov
lret
fildl
cmc
in
jmp
hlt
clc
adc
in
cli
out
mov
rorl
xor
loop
out
out
xor
cmp
repz
rcl
sti
jecxz
lret
lret
out
iret
jmp
cmp
int3
xor
out
ds
les
std
sbb
enter
idiv
clc
xor
ret
call
mov
xchg
in
mov
xchg
ret
repnz
xor
sarl
aas
lock
fadd
lds
repnz
hlt
xor
cmp
aaa
fdiv
loopne
lock
vmovq
cld
mov
std
rcl
orb
in
enter
lock
fxch
sti
xor
aam
mov
mov
stc
leave
xor
mov
or
mov
add
inc
or
or
pushf
ja
add
ret
add
int3
ror
fcomp
aam
aas
idivb
cmpl
jg
test
jle
xor
das
xor
cs
cmp
aaa
iret
hlt
cmp
movb
ret
hlt
hlt
iret
or
stc
in
xlat
repz
aas
cli
rolb
ret
or
mov
xchg
ss
jmp
xor
iret
std
fidivrs
vpand
cld
std
xchg
rolb
in
aam
ror
cmc
out
lret
or
out
and
fildl
incb
mov
clc
in
cmp
shl
roll
loop
mov
nop
enter
and
int3
out
enter
repnz
rolb
test
mov
mov
ror
repnz
xor
repz
in
stc
stc
icebp
cli
mov
idiv
push
aad
stc
idiv
cmp
xlat
aad
cmp
cmp
std
cld
mov
cli
mov
out
leave
repz
xchg
vpaddsb
rol
icebp
out
hlt
div
int3
out
ffree
filds
into
cld
xchg
jmp
repz
xor
into
enter
cmp
clc
rol
loopne
test
mov
cli
xchg
cmc
jmp
cmp
dec
clc
fnstsw
in
shl
add
clc
testb
into
cmp
in
fxch
out
ss
out
faddp
jmp
mov
ljmp
mov
loop
jmp
in
leave
iret
loop
in
into
stc
loope
jmp
xlat
cli
fcmovnu
mov
lock
lock
shlb
fdivrl
cmp
call
shl
out
repnz
mov
test
test
fldl
lret
ror
aam
in
shll
cmpl
roll
fstp
std
xchg
icebp
lock
xor
call
fsubp
in
xchg
repnz
into
sar
fsubp
xorb
rol
enter
aas
into
stc
add
aad
mov
mov
flds
jecxz
jmp
ror
cmp
out
testl
mov
into
cld
int3
repz
jecxz
lret
sti
shl
repz
loope
rcl
cmc
and
std
or
repz
fdivp
rcr
loop
cli
cmp
ljmp
out
out
repnz
test
decb
xor
aaa
sti
cld
rcl
test
aam
ret
xchg
mov
xlat
xlat
ljmp
shl
lock
into
int
not
aas
mov
sbbl
add
push
call
incl
jmp
ret
rcl
aam
ret
sarl
pop
outsb
push
add
int
clc
stc
xlat
xchg
xlat
orl
leave
cmc
aas
call
cli
lret
repnz
idivl
out
into
ds
xchg
loope
xchg
das
ljmp
fnstcw
lock
in
loop
out
in
test
in
orb
icebp
in
cmp
cli
hlt
testl
fdivr
int3
out
rorl
out
cmp
out
xor
in
lret
in
in
cmc
xor
aad
lret
fcmovu
sti
call
out
imul
cli
xor
out
lock
testb
test
out
loopne
out
std
enter
in
xor
jmp
call
xlat
int
loope
call
shr
leave
mov
cs
xor
ljmp
icebp
fstp
add
into
cmp
leave
shr
test
aam
cld
cmp
roll
ljmp
enter
adcb
jmp
xlat
jmp
loope
jecxz
out
mov
leave
test
mov
xchg
adc
lret
fdivrl
int
fcom
lret
fldl
addb
orl
aam
lock
into
clc
stc
cmp
test
repz
push
repz
testb
out
jmp
stc
int
aam
fstp
shr
xchg
aad
out
mov
push
test
lret
fdivp
lock
fdiv
loopne
fsubrp
fxch
jecxz
out
loop
cld
xor
lret
out
jecxz
fcom
xor
cld
stc
repz
or
fmul
ror
mov
jmp
shr
fcmovnu
out
hlt
int3
xlat
in
clc
std
in
fildl
std
cli
call
xor
aaa
fpatan
fnstsw
sub
std
stc
aam
loopne
in
mov
out
cld
out
xor
out
ljmp
int
lret
add
testb
loope
in
sti
lret
lock
out
xchg
out
enter
leave
sti
icebp
cmp
div
loope
loop
cld
enter
sbb
in
faddl
aad
jecxz
std
cli
loopne
fcmovu
addl
std
cld
fdivr
mov
iret
xchg
adcb
fld
enter
hlt
fmulp
sbb
out
test
ret
decb
call
loopne
out
int
fstpt
aad
repz
sbb
rcr
rcr
cmpl
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
jmp
sarb
ret
enter
fldl
jge
pop
sbb
jg
test
jle
in
aad
int3
out
out
mov
iret
aaa
repz
in
lock
rcl
cli
in
hlt
in
repnz
fucomi
leave
clc
cmp
out
adcl
ss
shl
repz
shl
test
fsub
enter
jmp
cld
orb
das
jmp
fnstsw
jmp
in
sbb
loop
ljmp
xor
jecxz
fstpt
idiv
fsub
xchg
dec
mov
sti
std
aam
lock
into
divl
ss
aam
repz
div
lock
addl
jmp
out
rorb
int
cmp
out
cmp
aaa
rcr
sar
xchg
fimuls
loopne
in
aam
aad
repz
icebp
ret
shl
loopne
xor
std
movb
mov
int
xor
into
into
lret
fadd
int
cld
ds
cli
in
jmp
stc
and
out
in
in
aam
in
fstp
cmc
int3
repnz
cmc
cmp
test
out
enter
iret
mov
out
ljmp
call
hlt
xor
xor
leave
test
std
fdivr
incb
call
cmp
dec
cli
ret
xchg
leave
hlt
cmp
stc
xchg
roll
in
shr
xor
iret
out
xlat
test
sti
xlat
jecxz
fcmovnu
inc
lret
loopne
jmp
cmc
iret
int3
cld
cmp
stc
and
xchg
sti
jmp
in
test
int
repnz
shl
int
cmp
ret
in
ffree
test
aad
ret
sbb
std
mov
rcr
das
jmp
das
in
lret
sarb
xor
enter
enter
call
or
xor
icebp
cli
out
fucomi
fcomip
div
fdivr
addb
fcmovu
std
and
iret
xchg
loope
enter
into
aad
leave
loope
cmpl
icebp
std
fdivrp
in
xlat
fdivp
lret
addl
repnz
cmp
fidivl
in
clc
ret
div
fmuls
out
mov
xchg
enter
call
in
fsub
jmp
out
xchg
hlt
fcomi
mov
cld
enter
in
aam
in
repnz
out
aad
loopne
shl
ret
shr
lock
neg
ljmp
call
aam
lret
out
cmp
fdivr
loope
cld
cld
mov
incb
xor
add
mov
lea
mov
mov
xor
add
jmp
ror
fmul
fcomp
fcmovnb
aad
jp
in
mov
jle
add
int
xor
int
cli
hlt
jmp
cld
int
fld
cmc
in
cmp
les
enter
in
icebp
sub
jmp
into
ss
fcmove
lret
sar
addb
fdivrp
leave
xchg
fcom
ljmp
aas
cmp
loopne
ret
rol
mov
or
mov
call
xor
fsubrp
shl
iret
std
fcmovu
fadd
in
cld
sti
cld
cmp
fcomip
cmc
ret
repz
lret
int
int
cmp
in
mov
out
ljmp
out
aaa
rcr
out
loopne
out
jecxz
repnz
idiv
stc
out
cmp
leave
fstp
decl
rol
aam
jmp
dec
fcmovbe
shl
clc
addb
or
iret
fmulp
repnz
jecxz
out
repnz
into
cmp
repnz
out
hlt
sar
jmp
int3
loopne
fildl
vshufps
rol
ss
aam
cmpb
cmc
ret
xchg
xchg
xchg
jmp
xor
xlat
iret
sarl
sti
sti
cmp
aas
test
fcmovnu
clc
icebp
sub
repnz
xor
enter
rcr
in
loope
faddp
ds
neg
mov
xchg
popl
leave
jmp
jmp
aas
rcl
hlt
clc
cli
fninit
cli
call
shl
repnz
int
xbegin
cli
and
sar
testb
shr
hlt
out
cmpl
into
fmul
loope
in
cmp
ret
stc
shl
stc
leave
fdivr
dec
xchg
xchg
iret
lret
aam
enter
cld
xor
fdiv
cld
stc
mov
aam
lret
int3
xchg
dec
in
xor
f2xm1
hlt
lret
repnz
out
idivb
hlt
fildl
in
ret
in
call
xor
jmp
cmp
fnstsw
shl
iret
ffree
test
in
in
mov
out
mov
loope
xlat
aaa
into
shlb
xor
test
addl
ret
xchg
call
in
into
int
in
sti
aaa
cmp
fstp
repnz
shl
xchg
mov
mov
lock
icebp
xor
sarl
leave
hlt
fdivr
shl
ret
loop
ffree
test
mov
fsubr
xor
leave
ret
int3
vpminsw
cli
int3
loopne
cmp
aad
aad
ljmp
adc
xchg
jmp
cmp
mov
lea
push
mov
xor
jmp
int3
int
fstp
cmp
pop
pushf
mov
pop
shll
jg
test
jle
in
call
in
cld
in
ljmp
mov
mov
sti
xlat
leave
lret
out
cmpl
call
filds
fldl
aad
xlat
stc
out
std
shr
flds
out
fistpll
mov
leave
jmp
mov
xor
enter
jmp
aas
repnz
icebp
xchg
in
ffree
ljmp
stc
sarl
xor
loop
test
rorb
in
icebp
mov
stc
fcmove
lock
shl
lret
fdivr
clc
lock
leave
leave
sar
std
out
xchg
sub
sub
ret
sarb
hlt
stc
fildl
idivl
jecxz
fisttpl
mov
mov
call
in
aad
loopne
cmp
clc
in
jecxz
xchg
xchg
mov
lock
into
adc
repz
lret
repnz
idivl
divb
cmp
cmc
sti
aad
cld
sub
mov
cld
lret
std
mov
iret
aad
cmp
out
repz
in
jecxz
ds
jecxz
loop
iret
div
hlt
in
shll
xor
int3
loop
aam
fisttpl
fcomp
fisttps
shl
xor
jmp
jmp
aad
lock
stc
fmuls
cld
in
lret
aad
test
aas
loop
out
rcr
ret
faddl
ror
mov
out
sar
cs
cmc
jmp
addl
aad
test
int3
fadds
lock
cld
out
fcmovbe
cmc
clc
std
fst
rcr
stc
out
hlt
in
fsubr
mov
out
in
ss
repz
fldpi
out
repz
jmp
stc
cli
stc
xor
xlat
jmp
mov
xchg
loopne
xchg
mov
fnstenv
fidivl
leave
stc
cmp
fsubr
out
lock
out
mov
icebp
loop
in
iret
cli
hlt
leave
xor
int3
aas
ret
shl
cmc
mov
xchg
xchg
icebp
in
jecxz
ljmp
int
ds
hlt
cld
fmulp
mov
out
icebp
cmc
xlat
das
lock
ljmp
repnz
cld
ret
sub
loopne
lock
loope
repz
cmp
cmc
cmp
sti
cmp
sarb
std
enter
aam
sbb
repnz
xor
lret
call
cli
iret
xchg
add
push
jmp
iret
xlat
rcl
rcr
lret
push
cmp
aad
push
cmc
je
pop
jg
test
jle
call
jmp
into
xchg
loop
divb
ret
fprem1
xor
int
adc
call
lock
aam
lock
xlat
cmp
fucomip
sar
int
aam
ljmp
clc
ret
jmp
imul
jmp
aaa
lret
std
fdivr
cli
shl
out
aad
clc
mov
nop
mov
aad
out
in
out
sti
int3
repnz
xlat
loope
loop
jmp
dec
xchg
loope
cmp
call
xor
in
shl
call
and
out
sbb
std
sar
fcomp
cmc
fiadds
iret
in
ror
xor
xor
fprem
iret
lock
shr
rolb
call
std
mov
fimuls
cmp
int
fmul
fsubr
hlt
loope
and
icebp
bnd
lds
xchg
xchg
clc
xor
in
aam
hlt
repnz
in
sti
rcr
movl
jmp
sar
ds
repz
xor
fiaddl
cmp
lock
call
sar
fdivr
lret
int
std
std
roll
out
call
out
ror
cmp
clc
lret
jmp
repnz
ret
sti
rol
movl
mov
sub
aad
out
leave
enter
aad
sbb
loopne
cli
xchg
loope
cld
leave
sbb
ror
test
aad
aam
cld
in
aad
stc
cmp
in
in
rolb
shr
out
lret
divl
std
in
in
or
sub
icebp
xchg
ljmp
rol
lret
int
repz
loopne
enter
out
fmuls
aam
loopne
lret
cmp
repz
in
jmp
test
std
icebp
std
cli
sbb
out
mov
mov
sbb
out
das
ret
xor
aaa
jmp
clc
repnz
fcmovu
cli
aas
mov
icebp
sub
repz
in
fdivrp
fcmovnu
jmp
fcmovbe
repz
out
mov
call
loopne
rclb
iret
repnz
cmp
into
aas
in
cmp
and
out
cli
mov
out
jmp
hlt
out
ror
xor
ljmp
xchg
xlat
loope
xchg
lret
int3
rolb
in
ss
out
jecxz
ret
out
repnz
xchg
enter
in
lret
add
sti
inc
add
xor
call
fcoml
add
jmp
rol
into
xlat
rcr
fcmovne
lret
pop
xlat
adc
mov
call
test
jle
xchg
incb
out
ss
das
fidivrl
in
int
in
and
out
clc
ljmp
ror
out
jecxz
cmp
cli
cli
add
repnz
enter
int
in
ljmp
into
xor
ljmp
fdiv
cmc
fld
test
sti
jecxz,pt
nop
popl
icebp
shl
xor
aam
call
sar
cmp
shl
mov
ret
ljmp
rcl
clc
sub
xor
repz
out
fnstenv
lock
xchg
adc
out
clc
out
iret
call
loope
cmp
test
cmp
jmp
jecxz
adc
xlat
fdivr
enter
call
std
hlt
mov
xor
lret
repz
add
enter
ficoms
in
div
in
aam
jmp
xor
cmp
cmp
hlt
idiv
fcmovb
testl
into
mov
int
xor
enter
fsubp
test
iret
cld
add
stc
ror
test
lret
icebp
icebp
fsubr
cmp
shl
int
les
ljmp
repz
not
jmp
roll
ret
leave
ret
test
rcll
fcmove
cli
jmp
ftst
ret
jecxz
lds
into
add
jmp
cmp
cli
lret
aam
icebp
rol
shl
ret
test
mov
les
jmp
cmp
in
fucomip
out
test
out
hlt
fsubr
xor
stc
aaa
loop
out
in
mov
mov
out
dec
shl
out
cmc
cmp
in
into
std
sti
shl
iret
loope
movl
repz
out
aad
rcl
sti
std
fucomi
aam
icebp
repnz
div
jmp
loopne
loop
jecxz
cld
orb
hlt
out
fucomi
cli
int
cmp
shl
fucom
cmc
incb
mov
shr
call
aam
clc
ds
out
loop
out
xchg
out
into
fst
int
int
lret
in
fdiv
iret
call
fdivrp
loope
icebp
testb
int
sti
decb
shlb
jmp
rcl
repnz
ljmp
sti
aam
sbb
leave
out
mov
cmp
cmp
add
test
push
add
jmp
enter
rcr
adc
lock
stos
int3
sub
jle
add
cmp
cmp
out
loop
sbb
out
faddl
in
orb
repz
cmp
in
cmp
std
sti
addl
shl
test
out
fisttps
xor
sarl
cmp
xlat
aad
std
cmp
jecxz
loop
int3
ljmp
lret
fdivr
repnz
lret
in
out
xchg
mov
in
test
out
sub
fdivr
cmp
loopne
ret
fdivrl
shl
jecxz
clc
icebp
lret
out
into
aam
jecxz
call
lret
aas
jmp
fsubp
call
in
cli
and
jmp
ret
jmp
icebp
repz
repz
jecxz
test
fxch
enter
mov
test
into
shll
xor
sti
into
cmp
shl
test
fmul
call
xchg
in
aam
into
int
fcmovnbe
ret
sar
testl
int3
in
out
in
in
in
jmp
flds
iret
hlt
loope
loopne
in
lret
push
ret
sub
xlat
int3
cmpb
rolb
mov
leave
into
adc
loopne
sub
xor
in
neg
shr
ss
into
clc
cld
hlt
div
fcmovne
mov
orl
jmp
repnz
stc
cmc
test
hlt
cmc
in
sbb
xlat
ret
icebp
ljmp
fnstenv
in
out
clc
stc
jecxz
aad
test
leave
imul
mov
out
out
xor
cmp
ss
call
in
iret
decl
testl
xor
fucomi
enter
ret
in
in
sub
testl
out
lds
cmp
sti
int
sti
out
lock
out
std
test
ret
mov
mov
xchg
nop
roll
fcomi
lds
jmp
ljmp
rol
in
fmuls
sti
or
enter
rcl
aam
rcl
cmp
out
fcomp
jmp
out
hlt
sbb
cli
cmp
aad
xor
test
jecxz
fld
cld
std
loopne
movb
xchg
leave
cmc
test
in
aas
cmp
repz
orb
iret
out
out
push
and
mov
xor
add
jmp
rcl
rcl
aad
mov
fisubl
jg
test
jle
aas
clc
mov
int3
into
into
jmp
out
xchg
rcll
rol
cmp
sar
in
xor
repnz
mov
mov
ljmp
xchg
out
stc
ret
stc
cld
not
icebp
cmc
fcmovne
cmc
loop
fadds
clc
into
mov
ljmp
shl
aaa
icebp
ffree
fld
aad
leave
lret
in
xor
mov
enter
aaa
test
in
fcmovnu
std
repnz
enter
lret
enter
sub
mov
div
fxch
hlt
jmp
cld
in
cmp
fsubp
fsqrt
ret
sbb
stc
fcomp
xchg
loopne
shl
mov
shl
jmp
out
rcr
test
aam
mov
cmp
in
fiadds
xlat
in
aad
aam
dec
hlt
shl
cmp
fdivr
rol
hlt
fldln2
cli
dec
fiaddl
xlat
cmc
shl
fxch
fdivrs
cmp
loop
test
in
lret
jmp
mov
repz
jmp
fidivrl
cmp
repz
fmul
cli
fldz
sti
fldz
xchg
lock
aas
out
clc
repnz
fmulp
sarb
fmulp
stc
in
out
xlat
in
into
fsubrp
xchg
loope
ror
ret
aaa
jmp
leave
fstp
loope
cmp
cli
fnclex
lds
addl
xor
cmp
shl
loopne
div
fdivr
std
or
aam
lret
decl
inc
in
cmp
int
out
fdiv
jmp
out
repz
jecxz
xchg
repz
fidivrs
jmp
ds
ffree
fsub
lret
fmull
loop
call
cld
cmp
aaa
cmp
stc
imul
rol
ret
loopne
ret
loop
ljmp
test
iret
in
ror
fmul
cmp
aad
rolb
out
testl
in
ror
int
fcmove
into
repnz
shr
loop
out
mov
fsub
icebp
faddl
ss
std
hlt
ss
fadds
sar
out
int
in
fmull
xor
icebp
ljmp
jmp
loope
shl
aam
test
jmp
sti
leave
loope
int
out
fsqrt
iret
out
in
hlt
clc
repnz
incb
loop
ljmp
hlt
loop
iret
icebp
out
icebp
les
ror
out
hlt
rcl
sar
cmp
fucomip
int
rorb
add
add
xlat
int
fstp
rcr
ficoms
cmp
jg
test
jle
xchg
bnd
cmc
fdecstp
jecxz
xor
fxch
sub
hlt
test
adc
lret
xchg
iret
in
in
xchg
out
xor
xor
sarb
lret
stc
fdiv
fucompp
jecxz
aam
mov
xchg
sti
orl
ljmp
dec
xchg
rcr
loope
fld
out
ror
int3
test
testl
sub
ret
in
nop
into
mov
vcmppd
in
push
lret
repnz
addb
cli
mov
loopne
and
mov
test
repz
cmp
fldln2
xor
ret
rcr
in
fstp
shl
nop
shl
shl
shl
stc
xor
idivl
incl
xchg
xchg
in
leave
cld
mov
add
mov
jmp
cli
fdivrp
loopne
icebp
xorb
out
cmp
mov
std
mov
fucomp
leave
out
fstp
aas
lock
cmp
or
in
addb
std
fsubrp
in
mov
shl
cld
shl
iret
into
cli
idiv
aaa
aam
aad
std
fucompp
mov
test
in
ljmp
clc
fst
ffreep
in
aam
test
mov
and
call
clc
cmp
xor
std
loope
frndint
lock
fildl
mov
fdivs
cmp
aaa
out
fdivrp
div
iret
repnz
jmp
and
jecxz
orl
lock
fnstsw
fcomi
hlt
out
clc
out
fmul
jecxz
rcl
inc
stc
enter
fmulp
repz
xlat
clc
shl
aad
rcr
jmp
filds
sti
repz
rol
iret
ret
sti
enter
jmp
jmp
ret
loope
fadd
mov
test
mov
shr
cld
call
stc
out
cli
out
cmpb
int3
lock
std
loop
cmp
addl
aad
out
iret
cs
ljmp
rol
repz
shl
in
int3
rcr
out
xor
repz
cmp
fnstcw
sar
test
les
mov
cmp
leave
xor
iret
sarl
xor
repnz
repz
hlt
sar
ret
jecxz
mov
iret
in
int
enter
stc
int3
cmp
fxch
out
lret
loop
fsub
fstpt
rolb
mov
out
loopne
decb
stos
sti
inc
add
in
mov
mov
push
jmp
leave
ror
rcl
jecxz
in
jmp
fsubs
test
jle
icebp
shl
cld
aam
shr
rcl
ret
repnz
fsubp
out
fcmovu
int
mov
int3
in
nop
xlat
repnz
cmp
cmp
fnstcw
lret
int
sti
aad
mov
mov
repz
xchg
xchg
iret
cmc
xlat
in
fmul
test
cmp
sti
cmp
cli
out
nop
in
shl
sti
jmp
out
cmc
cmp
div
loopne
inc
cmp
mov
les
xor
cli
xlat
jmp
ds
adc
loop
mov
xchg
cld
jmp
loop
in
xor
cmp
int3
sti
aad
fstp
into
std
sti
xlat
mov
in
jmp
mov
in
icebp
cmp
fcmovne
cld
icebp
aas
cld
cmc
xlat
and
std
cmp
in
call
repz
loope
icebp
hlt
loop
aad
fsubrp
lock
sbb
aam
enter
mov
loope
mov
loopne
ret
sti
cmp
enter
lock
in
out
shl
aad
mov
loop
out
cld
in
call
sarl
cld
fcmovbe
fcmovu
rolb
mov
rcl
enter
icebp
cmp
lret
shr
hlt
ffreep
ret
in
int3
xchg
xchg
into
ss
leave
out
out
cmp
std
ss
addb
xchg
xchg
sti
jecxz
int3
loope
into
lret
mul
shl
ss
idivb
icebp
cmp
cmp
hlt
loope
in
stc
in
enter
roll
leave
in
stc
enter
ss
ror
rcl
cld
mul
fcomip
mov
lea
sar
xor
sarl
lock
sti
repnz
ror
shl
lds
sti
icebp
call
sti
cmp
aad
clc
repnz
call
jmp
mov
std
stc
orb
in
aam
int3
aaa
lret
int3
jmp
fiaddl
ret
out
or
loop,pn
aam
repz
xor
cmp
into
sar
rcl
jmp
lret
in
out
fcoml
int3
imul
out
call
fcmovnu
cld
ret
loopne
xlat
jmp
cli
mov
rcr
hlt
rcl
in
into
out
fisubrl
clc
std
in
shl
repz
rolb
test
leave
in
rorl
ret
fcmovbe
cmp
out
jmp
aad
fucom
cmp
mov
cld
ljmp
clc
xor
fcmovne
out
iret
leave
clc
fcmovbe
pop
jmp
into
iret
xlat
xlat
into
xlat
fwait
in
mov
daa
jg
test
jle
aad
in
loope
lret
mov
mov
xchg
xor
xor
shr
sar
iret
xor
filds
out
call
fucompp
lret
out
leave
jecxz
stc
fdiv
aad
xor
hlt
int
shl
mov
mov
decb
nop
adc
sub
ror
lock
loopne
cmc
ljmp
std
std
leave
std
mov
out
lock
out
out
fmul
in
rcr
into
test
xlat
jmp
loope
mov
xchg
in
jmp
aad
stc
jmp
xor
cmp
leave
ret
in
orb
loop
ret
xor
cld
cmc
fcomip
cmpl
out
fadds
jmp
out
jmp
loope
in
fdiv
hlt
repnz
out
aaa
cld
cmp
fcomip
fmull
testl
xor
cld
cmp
aam
out
aad
aad
fadd
xchg
mov
fyl2xp1
out
out
in
aam
ljmp
fdiv
lret
xor
imul
in
xchg
jecxz
hlt
aam
leave
xor
enter
out
ljmp
xchg
rol
fdivrp
lea
xchg
lea
lret
cli
ror
repnz
lret
repz
repnz
inc
lret
rorl
aam
in
cmp
cmp
ret
shl
mov
mov
mov
fimull
out
int
lret
div
das
icebp
cmp
idivb
test
out
div
ffree
leave
lret
mov
mov
out
cli
int3
aaa
call
icebp
rol
and
test
mov
xchg
aad
into
ss
lret
loopne
cmp
cmp
cmc
rcr
xchg
call
xchg
mov
icebp
mov
xlat
aam
das
ds
fmulp
repz
testb
fdivr
loopne
in
adc
mov
in
shr
int3
cmp
shl
sar
iret
cmp
cmp
loop
shl
cli
ret
fiadds
std
in
fists
jmp
cld
cmp
fcomip
xlat
mul
out
sar
shl
hlt
mov
in
loopne
mov
rcr
jecxz
loope
shl
das
fdivs
lret
fcomp
test
aam
aad
enter
rorl
out
aad
hlt
cmp
adc
adc
mov
xchg
int3
jmp
jecxz
idiv
lock
fucomp
stc
sar
shr
rcl
cmp
out
shr
lds
dec
call
inc
or
lea
jmp
leave
aad
xlat
fcmovnu
ret
pop
lock
test
mov
test
jle
flds
int
xor
stc
iret
jecxz
out
ds
loopne
lock
repnz
aad
rcr
aam
cli
sub
mov
shl
fsincos
leave
fcomp
aaa
ds
cmp
cmc
jmp
loope
jmp
in
in
xor
xor
ret
cmp
aad
aad
cmp
faddp
inc
adc
aam
mov
in
out
fdiv
out
rcl
lock
loopne
in
sti
clc
cli
cli
hlt
out
testl
aam
out
cmp
fadd
hlt
aad
shr
xchg
les
loop
out
out
iret
leave
xchg
in
call
aaa
xor
cmp
fsub
fstpt
ret
fsubp
std
fdivr
std
or
aam
xchg
ljmp
std
aam
cmp
rcr
xchg
in
jecxz
mov
cli
in
loop
iret
in
fcmovu
int3
shlb
in
sti
ds
fildl
aad
fmul
xchg
into
xchg
loope
mov
xor
repz
in
aas
jmp
fdivr
icebp
sub
call
or
subb
rcl
iret
leave
sar
in
adc
rcr
fimull
xchg
inc
shlb
out
lock
cmp
out
sbb
mov
mov
out
xchg
das
into
lret
aad
fdivrp
shr
out
xor
rol
aas
loopne
neg
aas
testb
mov
call
out
iret
cmp
fmul
aam
cmc
frndint
jecxz
roll
xchg
out
xchg
mov
lret
rcr
cmc
lret
ds
icebp
addl
stc
fucomi
xchg
ror
ljmp
icebp
fucompp
not
aas
loop
in
shl
ret
stc
clc
std
int
mov
xor
aaa
icebp
into
cmp
aas
sti
neg
adc
leave
out
rcr
out
in
lock
lock
out
ljmp
fst
test
ljmp
int3
out
mov
xor
clc
into
neg
neg
icebp
aad
aas
cld
repz
out
xchg
out
sti
xchg
repz
fcom
aam
int3
fucomp
out
call
cmp
ds
xlat
in
lret
ljmp
lea
jecxz
hlt
cmc
cmp
repnz
out
inc
ret
sti
neg
out
mov
loopne
into
in
divb
aaa
leave
out
in
cmc
repz
ret
lds
in
in
cmp
jne
mov
pop
jmp
ror
ret
int
movsb
inc
push
and
mov
test
jle
test
fmul
shl
test
aad
aas
cld
fsubrp
mov
test
xchg
ss
jmp
aas
rcl
rcl
rorl
test
lret
test
rcl
fldcw
jmp
fcmovnb
fadd
lds
mov
icebp
ret
xchg
repz
lret
rol
xor
rcl
out
out
clc
repz
loope
sub
addl
repnz
movl
sbb
sub
xchg
out
xor
lock
cli
int
xlat
cmpl
test
jmp
call
divl
fadd
cmp
std
in
cli
xlat
neg
cmp
les
shl
out
jmp
test
shr
shl
xor
bnd
in
jecxz
inc
loopne
fmulp
loope
in
orb
cld
test
sub
cmp
into
out
iret
xchg
out
cmc
enter
cmp
loopne
xchg
ffreep
das
shl
aaa
fcompp
fnstsw
jmp
rcr
loope
xchg
filds
and
loopne
out
sarb
xor
hlt
fnsave
cmp
aas
fcmovu
test
cmc
fdivr
aas
test
movl
aaa
in
ror
cmp
sarl
in
fadds
xor
mov
std
call
icebp
loop
lret
call
leave
xlat
in
sarb
iret
rorl
hlt
cli
mov
jmp
xchg
int3
int3
loop
rcr
xor
jmp
fnstsw
cld
repnz
cmp
ret
out
loope
leave
cld
adcl
out
cmp
cli
cmp
idivb
xlat
loope
ljmp
enter
in
div
xor
clc
ljmp
idivb
fst
repz
cmc
lds
faddl
enter
xor
fcomi
out
out
int3
int3
fldl
xor
loopne
iret
fstp
in
mov
in
ror
int
aad
shlb
rcr
aad
in
icebp
in
in
fucomp
test
icebp
xchg
call
xlat
cmc
cmc
in
xor
xor
inc
aad
rol
out
cmp
mov
lret
xchg
sub
loop
lret
aaa
rol
shl
xor
mov
push
enter
lock
hlt
xlat
aad
int
fdivrs
fcomi
loop
mov
test
in
add
divb
cmp
ss
jmp
jmp
ret
int3
rcl
ret
fldl
into
cmp
das
jg
test
jle
iret
shl
out
test
fdivrp
loop
mov
fsubr
in
loope
test
iret
aam
fnstcw
icebp
fiaddl
leave
cli
fadds
and
in
out
xor
aaa
aad
stc
repz
cld
lret
clc
icebp
loopne
test
fabs
nop
ret
xor
fst
sbb
jecxz
out
std
loope
fcom
sbb
test
shr
out
fcmovnbe
in
out
lret
xlat
aam
sarl
aas
cli
jmp
movb
into
cmp
out
clc
enter
std
in
cli
cmc
lds
jmp
sar
into
lret
ljmp
lret
shl
aas
ds
cld
in
neg
loop
fldl
fucomip
jecxz
into
icebp
jmp
shrl
call
call
stc
hlt
loop
mov
bnd
xchg
in
in
rorb
stc
clc
aaa
xor
repnz
in
out
out
repz
and
in
into
fisttpll
cli
stc
cs
ss
in
bnd
shl
lret
ret
dec
sub
loop
shll
out
std
call
cld
std
cmp
shr
xchg
fldl
shll
out
aam
cmp
aad
add
ret
std
sbb
addl
icebp
call
rcl
fdivr
aam
cmc
loope
sti
call
fsub
int3
mov
xchg
out
jmp
out
out
cld
ss
rcl
roll
lret
mov
jmp
out
repnz
repz
fbstp
lock
aaa
lret
cmp
int
fstpt
xlat
std
fmull
jmp
jmp
out
mov
rcl
in
fucomp
leave
into
out
iret
shl
aad
lret
fisttpll
in
jmp
out
xabort
ljmp
cmp
in
fcmovnu
mov
stc
fcoml
loope
ret
enter
lret
loop
aam
sub
cmp
test
cmp
rcl
rcl
ror
out
ret
iret
fsubrp
iret
fcmovnbe
cmp
fcomi
loope
loope
fsub
std
clc
stc
ret
int3
rcl
jmp
cmp
in
lret
cmc
jmp
in
fdivrp
fst
mov
neg
in
shl
iret
xchg
lock
cmp
iret
leave
xlat
flds
repnz
dec
ds
addl
ss
cmp
xor
cli
fstp
rcl
out
fmul
pop
add
jmp
fadd
aam
fst
fcoms
sbb
jg
bound
jle
add
std
testl
out
int
fidivrl
repz
ret
xor
test
in
enter
shl
xchg
enter
xor
sti
shl
rcr
ds
testb
fcmovne
fadd
jmp
hlt
repnz
hlt
lret
out
loop
repz
test
fcmovnu
fcmovnu
fimull
iret
fxch
repz
fcmovne
in
fnsave
cmp
jmp
rol
ds
ljmp
int3
int3
int3
shll
xor
fst
not
leave
xorb
and
aam
loop
lock
sub
lret
enter
ror
icebp
icebp
in
mov
lock
into
repnz
cmc
cmc
in
xlat
out
in
aam
repnz
clc
loope
out
out
in
repz
xchg
ss
fsubr
out
leave
rcl
hlt
shr
test
ret
and
fsubr
imul
int3
into
loope
xchg
enter
loop
xor
lock
ret
cli
jecxz
jecxz
clc
cli
test
enter
aam
inc
in
into
shlb
iret
cld
cld
hlt
fdivrp
iret
jecxz
rcr
in
repz
clc
xchg
lret
rcll
out
aaa
jmp
iret
out
out
fmul
rcl
icebp
mov
jecxz
neg
call
lret
subb
sarb
into
icebp
xor
ds
cld
xchg
out
out
cli
in
orb
lock
out
repz
stc
filds
hlt
loop
testl
fsubp
in
iret
leave
ret
idivb
out
aad
lret
cmp
rcl
iret
mov
addl
into
lret
ljmp
leave
int
fsubp
test
fdivp
loopne
jmp
mov
lock
xor
into
jmp
lret
aaa
cmp
cld
ror
clc
ljmp
std
lock
out
xor
aad
cmp
xor
clc
in
sti
fsubp
inc
leave
lret
nop
in
loopne
loopne
not
rcl
xlat
int3
out
ror
cmp
out
fcmovnb
rcl
fndisi(8087
in
into
out
call
loop
loop,pn
rcl
fmulp
iret
aas
jecxz
fstp
sub
loope
fld1
int
call
int3
repz
lret
mul
xor
rcl
in
idivl
sar
cmp
sar
in
ds
xchg
lret
test
fsub
iret
cmp
call
out
xchg
fisttps
fildl
out
pop
leave
ret
push
mov
sub
xorl
jmp
int
int
leave
push
hlt
cltd
loope
inc
in
cmp
fiaddl
jle
loopne
out
into
repnz
aad
idiv
cmp
in
cld
jmp
mov
call
jecxz
clc
repnz
fdivr
sarl
aam
cld
int3
test
lds
icebp
mov
lock
jmp
leave
div
enter
jmp
ds
cld
fcmovnb
or
fsubr
cmp
repz
aaa
cs
jmp
in
repz
ss
lock
stc
cli
xchg
stc
fsub
dec
into
in
jmp
mov
rcl
les
cli
leave
int
aaa
loopne
xor
addl
int3
iret
fst
int
int
out
rol
lret
int3
cmp
aas
lock
test
jecxz
stc
lea
addl
out
rcr
jmp
div
roll
enter
enter
xchg
xchg
clc
xor
stc
mul
lds
ds
stc
repz
addb
cmc
out
jmp
loope
jmp
in
test
into
repz
test
xchg
cmp
mov
fld
dec
test
in
lock
in
sti
vpaddd
in
cli
fdivrl
in
fdivrp
sar
aad
test
cli
out
loop
aaa
out
into
fldz
xor
std
fsubrp
into
sti
in
mov
aad
lds
shl
hlt
loope
fdiv
out
aam
fnstcw
ljmp
cmp
ffreep
leave
leave
int
ljmp
xor
xor
fmulp
cli
out
cmp
int3
loope
and
sti
ret
movl
loop
stc
lret
shlb
clc
cmp
fcomip
test
fcmovb
fucom
test
mov
cli
iret
xchg
addb
fxch
int3
cmp
aas
in
fst
mov
ret
movl
imul
fdivl
fcmovne
repz
aad
shl
sarb
cmc
rol
fmulp
in
mov
hlt
ss
sub
jmp
cmc
in
out
add
aam
ror
aas
movl
shr
xor
ljmp
div
cmp
ljmp
loope
lds
clc
shlb
test
cmp
cmp
jmp
neg
leave
dec
lret
or
mov
add
mov
mov
incl
jmp
int
ret
rol
fcmovnu
jecxz,pn
loope
push
aas
cmp
jg
fiaddl
jle
int
out
out
stc
hlt
rcl
shll
repz
fcmovnb
rcl
neg
xchg
test
fisttps
jecxz
lock
ss
cmp
loop
aad
jmp
cli
lret
in
loope
out
loop
xchg
int
divb
iret
out
cmp
xlat
fcmovnb
loop,pt
out
rcr
cli
out
sbb
int3
int3
lea
cmp
in
xor
fdiv
repz
aad
in
loope
cli
iret
iret
icebp
jmp
shrl
in
leave
stc
icebp
sti
cmp
fnstsw
aam
shl
ret
in
mov
iret
enter
aad
repnz
idiv
out
fcomp
into
aaa
not
into
fdivp
loop
icebp
cmc
sti
cmp
call
faddl
call
cmc
cmp
and
in
ret
sti
in
fdiv
mov
icebp
fcomp
vpmovmskb
ljmp
cli
fcom
cmp
fisttpl
into
call
enter
xor
cmp
cmp
sti
loope
jecxz
jmp
fmull
int3
ljmp
out
cmp
into
aam
fadd
aam
xchg
fcos
out
mov
lret
rcl
leave
into
lret
xlat
fcmovbe
shr
aad
test
clc
xchg
mov
lret
in
jmp
enter
shl
cmp
int
in
test
in
rol
mov
in
cli
mov
xchg
loope
hlt
shlb
clc
leave
shll
int3
out
aaa
int3
loop
aam
aad
cmc
fmul
jmp
mov
fstp
fimuls
repnz
ljmp
repnz
fnop
clc
jmp
fmulp
in
int3
mov
repz
xor
aam
cmp
sarb
jmp
xchg
call
lock
cmc
into
rol
in
fldl2e
xor
or
fadds
mov
xchg
fucom
in
in
enter
ss
lock
loope
loope
rorl
mov
int3
ror
aaa
shl
hlt
rcr
fst
xor
rcr
inc
clc
call
lret
jmp
out
fmul
fcomp
cli
rcl
xor
out
roll
and
loopne
test
inc
add
add
cli
xor
mov
add
jmp
int
ret
aam
fstp
fstl
fmull
sbb
pop
xchg
cmp
fiaddl
jle
ljmp
xchg
in
leave
shl
mul
ds
icebp
in
shl
lds
xchg
loop
or
aaa
repnz
enter
stc
cmp
rol
sar
mov
inc
addl
fcom
cli
iret
std
shl
stc
rcl
aad
mov
sub
out
out
jecxz
xchg
fcomip
lock
idiv
ds
out
sar
fimuls
in
mov
fdiv
out
lea
int3
fdivrs
cmp
iret
rol
std
roll
ljmp
out
xchg
fucomip
ljmp
jmp
cmc
shl
in
repnz
mov
fucom
jecxz
xchg
aad
sub
fldz
cmp
rcl
fucomi
cli
roll
jecxz
test
xlat
in
in
in
ror
ror
xor
iret
cmp
into
shl
ljmp
aam
xchg
cld
std
clc
jmp
shr
in
sar
cld
sti
repz
xlat
xor
hlt
iret
ds
ljmp
addl
cmc
lock
rcr
loope
fcmovu
stc
ljmp
and
hlt
ror
in
xor
div
int
hlt
fstp
sti
sub
repz
stc
jecxz
xlat
loope
in
lock
in
mov
int3
div
repnz
ss
into
int
loope
fadds
loope
cld
decl
xchg
iret
xor
in
jmp
in
sar
cli
cli
lock
call
sti
lret
xchg
jmp
hlt
cmc
out
xor
xbegin
fst
fistpll
inc
cmp
call
mov
sti
rcr
stc
sarl
aas
ret
sar
rol
ljmp
into
xchg
iret
in
mov
repz
hlt
cmp
int3
int3
jecxz
adc
ret
ret
sti
mov
repnz
xor
cmc
out
lock
in
aas
fninit
shl
std
xchg
out
fcomp
mov
loope
in
jmp
shl
xor
jmp
cmp
aam
xlat
sar
test
out
cld
call
loop
sub
call
loopne
lret
hlt
ffree
fisttpll
or
or
mov
xor
mov
movzwl
or
mov
add
mov
mov
decl
xor
add
sub
mov
xor
add
adc
jmp
rcl
rcl
dec
mov
notb
iret
mov
fiaddl
jle
sti
xchg
xchg
xchg
mov
xor
vpsrld
fxch
clc
sti
in
fdiv
sar
sti
cmc
rorb
mov
xchg
nop
lock
xor
xor
cmp
fcmovne
ret
loop
div
std
repz
fisttpll
int3
int3
fdivrp
aam
shl
xor
shr
fadds
cmp
xchg
int
loopne
xchg
fiaddl
call
fdivr
repz
cld
fcmovnu
in
push
ljmp
icebp
mov
shl
out
cmp
idivl
fucomip
iret
not
testb
shl
fisttpll
fsubr
jmp
int3
in
int3
iret
loop
in
and
out
hlt
fidivrs
aas
cli
loope
rcll
clc
lret
cmp
out
in
std
cmp
aas
incl
enter
ret
loopne
repnz
jmp
lock
lret
icebp
ret
faddl
cmp
cld
test
cmc
hlt
iret
fcmovbe
fcomp
cmp
loope
ffree
hlt
shl
adc
in
out
enter
iret
rol
jmp
cld
cmp
push
loopne
out
into
aaa
div
test
call
into
fisttps
mov
rcl
xlat
sti
out
int3
sar
xor
out
faddl
int3
sti
out
xchg
leave
jmp
fidivrl
adc
into
fdiv
ret
clc
leave
call
mov
jecxz
jmp
sti
xlat
and
cmp
out
or
div
fiaddl
iret
xor
not
lock
roll
call
xchg
call
iret
cmp
repnz
sar
hlt
std
loop
call
std
nop
sti
mov
mov
aaa
lret
in
int3
in
xor
filds
sar
shr
fsub
int3
loope
int3
loop
loopne
xor
cmc
cmp
loopne
fsub
cmp
test
inc
ds
out
fsubrp
ficoms
sar
aam
dec
stc
shl
aam
mov
in
flds
in
in
icebp
shll
jecxz
leave
call
cmp
out
out
inc
cld
rolb
cmp
sub
jmp
ror
rcr
ror
js
cmp
pop
sub
jg,pt
fiaddl
jle
adc
decl
lret
lret
cmp
hlt
jmp
enter
clc
ds
in
test
jecxz
call
loop
into
repz
int3
sti
aaa
xor
enter
in
in
test
rcr
aad
lret
mov
aam
enter
cld
int3
cmp
cmp
fdivrp
out
fldl
loop
mov
ret
nop
loope
jecxz
out
xor
in
xlat
ror
xor
xlat
xor
sti
leave
sti
in
shl
jmp
out
ss
icebp
cmp
cmp
cmp
std
xor
test
test
in
out
loope
lret
sub
call
jmp
lret
in
idiv
ds
xlat
test
rcr
xchg
xor
vpsubb
icebp
sbb
test
test
xlat
clc
movl
aam
in
into
xor
rcl
cmp
hlt
fcomi
fildl
lret
mov
in
mov
xchg
hlt
enter
cli
fcomp
rol
lret
cmp
fidivrs
shl
fcmovnu
leave
call
jmp
out
rorb
sti
stc
xor
lock
cmp
out
hlt
loope
icebp
aas
fsubp
out
lret
mov
int3
sti
mov
ljmp
repnz
lret
repnz
clc
in
ret
test
out
in
mov
xchg
nop
lea
ljmp
stc
loop
rcr
aas
ljmp
lret
fninit
repnz
hlt
neg
shr
xor
fstpt
leave
loopne
out
fucomp
repnz
sar
cld
rorl
lock
ljmp
out
sti
loopne
loop,pt
cmc
stc
testl
mov
xchg
xchg
int
xor
fdivrl
aas
jmp
fsub
out
cld
aas
call
hlt
mov
xlat
test
in
in
ljmp
clc
test
dec
stc
sbb
fdivr
xor
loop
test
sub
fsub
into
cmp
out
sar
cli
cli
sti
addb
mov
loop
in
out
int
in
ljmp
cmp
fdecstp
rcr
mov
addl
xchg
ret
icebp
out
call
fsubs
test
add
movl
movzbl
xor
movl
mov
add
mov
movl
movl
movl
adcl
mov
mov
sub
xor
mov
addl
jmp
lret
aas
ret
aad
fldenv
fcmovbe
jb
sarb
add
lock
ret
fcmovnb
xchg
call
iret
vpmaxsw
hlt
rcr
loopne
ljmp
aas
hlt
out
in
int3
int
fcomip
xchg
test
cld
fcmovbe
out
clc
icebp
aam
roll
shr
int3
sti
nop
cli
aam
int
xor
lret
fidivrl
ss
lock
hlt
icebp
aas
sar
out
mov
ljmp
xchg
ss
cmp
fldz
in
fucom
out
cmp
fisttpl
fucomi
std
nop
loopne
sar
jecxz
into
ljmp
fabs
and
rolb
mov
in
ss
ss
into
not
or
ret
xlat
std
adc
fsubr
lea
add
xor
cli
cli
xor
fildl
loope
xor
sti
stc
fsub
loop
fcomi
into
rcl
xor
aam
ljmp
lock
inc
in
loop
idiv
call
ficoms
xor
enter
xlat
cmp
into
neg
rcr
jecxz
loopne
fisttpll
jmp
rcr
jmp
xor
fsubr
xchg
rol
out
int3
lret
fimuls
xor
out
xor
out
aad
aad
flds
lret
clc
sub
xchg
ss
xor
sarb
fiaddl
inc
rorl
mov
lret
out
in
lock
cmp
enter
cmp
flds
mov
mov
loop
sub
in
in
xlat
lret
icebp
xlat
cmp
loopne
rcl
cmpb
add
lock
into
mov
rcl
out
icebp
hlt
sarb
cmpl
aad
ret
sti
filds
enter
rcl
into
in
clc
repz
in
mov
cld
ljmp
into
shl
in
fcmovbe
aaa
fmul
repz
cmp
out
shl
mov
lret
fst
out
xor
aam
clc
in
std
cli
int3
lock
fadds
out
jmp
faddl
rol
add
push
sbb
add
cli
movl
je
push
movl
jmp
mov
mov
andl
sub
orl
mov
xor
add
jmp
rcl
lret
fcmovnbe
lods
pop
mov
testb
jg
fiaddl
jle
fcomp
iret
loopne
in
test
ret
stc
lock
lock
aad
xor
aaa
jmp
lret
ss
clc
std
adc
lock
mov
xchg
repnz
xlat
xor
stc
xor
fcomip
test
rcr
xchg
sti
call
out
test
mov
out
xor
in
in
out
stc
aam
addb
cld
mov
ret
lret
lret
ret
repnz
fchs
out
in
cmp
stc
sti
out
out
or
in
iret
int
fxch
out
cmp
icebp
loopne
aam
cmp
out
fxch
addb
jmp
std
call
cmc
ljmp
ds
fcmovnbe
fcmovb
rcr
leave
fisttps
loope
out
into
cs
leave
into
out
aam
fdivrs
out
icebp
cmp
jmp
out
ffree
rorb
out
shlb
aam
xor
cmc
out
icebp
out
in
add
mov
repz
nop
repnz
fadd
imul
aam
out
stc
stc
out
in
ret
xchg
cmp
mov
hlt
ret
fdiv
cmp
loope
cmp
std
sar
xchg
ret
jecxz
fcmovbe
mov
lret
int
loope
loop
xor
int3
cmc
sti
hlt
std
xor
test
in
repnz
rolb
fucom
nop
jecxz
in
icebp
aad
not
xor
rcr
std
sbb
and
fprem1
loope
jmp
mov
call
xor
xor
cmp
lock
in
in
xlat
neg
test
xchg
xchg
dec
test
call
out
out
cmp
repnz
out
std
ffree
cmc
std
leave
clc
nop
fmul
mov
icebp
rcr
aad
cmp
shl
aaa
lock
loope
hlt
cmc
xchg
loopne
shl
mov
aad
xor
loopne
in
fcmovu
cmp
fcomp
and
lret
in
call
lock
lret
iret
aad
clc
fsub
fadd
sti
icebp
sar
mov
sti
enter
xchg
out
jecxz
xlat
int
fcmove
lret
loope
cmp
out
sti
test
out
int
int3
lock
loopne
xor
cmp
jmp
fcom
rcr
fstp
fnstsw
fmull
dec
xchg
stos
or
fiaddl
jle
mov
shl
cmp
jmp
into
idiv
loope
out
in
into
jmp
jmp
jecxz
enter
repz
in
sti
test
fsub
enter
clc
xchg
lock
nop
hlt
ljmp
iret
cmc
push
fsubr
clc
icebp
test
xlat
jmp
decb
xor
rcr
xlat
hlt
ss
cld
rcl
jmp
fsubp
fucomp
xchg
enter
out
aaa
aad
lret
cmpb
aad
mov
loopne
sti
in
mov
in
xlat
jmp
fcmovbe
repz
stc
div
lock
add
lret
fimull
hlt
aam
cmc
in
lock
aad
jmp
hlt
loop
and
sub
xchg
popl
loop
icebp
in
out
cmc
out
fcomp
fdiv
int
fildl
call
jmp
rcl
imul
in
divl
ds
fdecstp
aad
loope
mov
test
cld
int
fucomip
shr
fnstcw
icebp
std
into
aaa
idivb
test
testb
mov
in
decl
into
sub
int
out
int3
cmp
cmp
les
mov
movb
xchg
jmp
shr
into
div
in
call
in
fdiv
shl
sti
cld
fstp
loop
shl
loopne
xor
test
cmp
xor
div
idiv
out
rcl
jmp
clc
cli
fmull
out
jecxz
cld
xor
jmp
lret
fucom
xor
rol
and
mov
imul
lds
cli
jecxz
jmp
rcr
fdiv
out
ret
stc
stc
stc
out
mov
test
mov
int
fcomip
aad
leave
int3
cmc
repnz
rcl
call
sar
xchg
test
stc
fnstenv
iret
lock
in
fdivrl
cmp
fcomp
aad
sbb
sar
xchg
hlt
roll
jmp
cmp
fxch
repz
stc
out
sarl
jmp
repz
in
loop
roll
in
aam
cmc
in
not
cld
in
std
ret
fcomi
neg
enter
jb
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
jmp
ror
aam
frstor
rcll
jae
je
mov
add
in
jecxz
lret
xor
repnz
hlt
repz
loope
fadds
loope
out
lret
nop
imul
jmp
in
sarl
lret
in
cmp
fildl
stc
in
lret
fadds
out
out
lret
icebp
in
stc
out
fsubr
int
fsubr
and
cmc
cmp
mov
ret
in
mov
decb
cmc
call
imul
sti
test
aas
fcomip
repnz
cli
int
out
int
xor
repnz
filds
clc
fxch
shr
iret
xchg
xchg
shr
ljmp
enter
aam
loopne
shl
mov
ret
aam
mov
jmp
test
jmp
neg
rcr
out
sbb
fildl
ret
fadd
iret
enter
orb
call
hlt
aam
cmp
cld
cmp
out
out
loopne
or
fldl
cmp
icebp
lret
out
in
stc
std
cmp
shl
fucom
shl
xbegin
in
mov
cs
in
enter
rcl
sub
in
cmp
and
orl
repz
shr
cli
hlt
leave
std
out
fcomp
cmp
test
jecxz
loop
sub
call
xor
rcr
cmp
cmp
cli
fiaddl
cld
fiadds
lret
cmc
mov
lret
cmp
idiv
incb
aam
cld
fldln2
call
mov
not
aad
shr
sar
ror
rcr
ret
clc
testb
test
in
xchg
jmp
cmp
div
hlt
aad
enter
and
std
ret
jmp
lea
loope
test
cmp
cld
test
cmp
lret
xchg
lret
addb
in
clc
sub
shl
add
out
add
loopne
mov
rolb
iret
ret
xlat
enter
loopne
in
aaa
cld
addb
idiv
fucomi
ljmp
in
in
aaa
in
cmp
jmp
cmpl
repz
loopne
jmp
imul
int
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
xor
xor
add
adcl
add
imul
mov
or
mov
sbb
mov
jmp
rol
aam
aad
aad
xchg
mov
push
mov
jg
fiaddl
jle
mov
mov
cmp
int3
int3
hlt
hlt
sar
jecxz
jecxz
shl
lret
mov
rcl
cmc
xor
jecxz
das
ds
int
cmpl
test
fdivr
loopne
sti
mov
into
xor
in
fmul
aaa
incl
cli
cmp
cmp
ds
fcmovnu
into
in
mov
into
repnz
out
call
test
push
xor
repz
jmp
iret
in
in
cmc
cmp
rcl
ret
std
cmp
call
fld
test
jecxz
jecxz
ljmp
push
aam
fdivrp
fld
call
fimull
lret
cmc
lret
repz
cmp
cmc
fcomip
testl
jmp
mov
int3
mov
nop
icebp
in
xor
cli
cmp
jmp
stc
shr
out
shl
neg
mov
jecxz
xchg
xchg
mov
cs
ret
fisubrl
fcom
out
lret
repz
stc
into
stc
xchg
jmp
call
xor
into
fiaddl
out
sbb
cli
addl
call
lret
cmp
rol
in
loope
repnz
loopne
addb
call
aad
jmp
ds
repz
fcmovnbe
in
ret
repz
clc
mov
loop
lock
in
test
xor
out
fnstcw
aad
repnz
jmp
sti
cld
shl
dec
cli
sbb
in
xchg
mov
repnz
clc
cmp
out
fmul
cmp
int3
cld
int
xchg
repnz
in
les
repz
rol
lock
cmp
fnstsw
out
adc
fadd
test
test
out
repz
icebp
int
in
aaa
repz
fld
lock
out
fimull
sub
cmp
cli
ljmp
les
jecxz
xchg
call
cs
div
divl
ror
ljmp
rcr
mov
in
xchg
call
cmp
aad
lret
faddp
loope,pt
fcomi
imul
ret
leave
sub
cmp
movl
jmp
rcl
ret
fucomp
insb
fstps
in
push
xchg
test
jle
add
fmul
xchg
fstl
hlt
stc
fcmovne
int
xor
fcmovne
out
loopne
loopne
fdivr
xchg
std
les
mov
out
lret
cmc
idivb
vpsubusw
xlat
in
jmp
int
filds
test
enter
ret
xchg
mov
jmp
ds
out
test
loope
cld
fcmovb
mov
xchg
out
lock
shl
fcmovne
int3
cmp
loop
repz
xchg
fucom
mov
fpatan
aam
into
rcl
cmp
aad
test
aam
icebp
enter
fcmovnu
test
in
repz
xor
iret
fldln2
cmp
fdiv
testl
icebp
in
mov
fucomi
out
sar
divl
fidivrl
stc
sbb
jmp
mov
out
in
jmp
jmp
out
rcl
sar
aam
orl
repz
in
divl
call
shl
jecxz
std
ret
cld
in
mov
jmp
loopne
xor
hlt
out
shlb
sar
clc
fnsetpm(287
out
out
fimuls
fnclex
test
rclb
rol
out
out
rcl
lret
sarb
cmc
cmp
aad
cld
aad
ljmp
loop
xchg
in
int3
das
ret
into
ss
fcomp
cmc
idivb
aas
clc
aaa
test
ret
shr
stc
mov
nop
rcl
cld
lret
nop
clc
out
xor
int3
cmp
hlt
ret
ds
cmp
fildl
xchg
xor
shll
imul
mul
fucom
in
adc
lock
leave
aam
mov
xchg
adcl
aam
fmul
sti
xlat
fsub
test
ret
sti
lret
in
in
ljmp
not
jmp
xor
jmp
std
out
loope
loop
aaa
shl
mov
int
decl
icebp
aad
icebp
icebp
int
ror
in
in
ffree
cmp
fdivrp
in
leave
std
jecxz
fucom
or
loope
ljmp
shr
lret
repnz
out
cmp
out
xchg
cld
mov
xchg
int
ljmp
out
aad
vpsubd
ljmp
sti
decb
xchg
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
orl
xor
add
movl
jmp
mov
notl
mov
xor
xor
add
add
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
sub
add
add
imul
jmp
into
ret
rcl
aad
aad
push
pop
movsl
and
push
into
jg
fiaddl
jle
enter
mov
fst
loope
jecxz
int3
sarl
aam
hlt
in
shl
cmp
out
leave
aam
loope
cli
in
fimuls
int3
idivb
xor
ror
cmp
mul
fiaddl
mov
int3
flds
ret
stc
aad
cmp
sarl
xlat
rcl
div
mov
test
out
ret
fcmovnbe
in
loope
into
cmp
call
in
std
shl
ds
xlat
fmulp
in
fucomip
mov
sti
fucomi
out
fucomp
in
ret
ror
clc
jmp
cmp
idivb
aas
adc
fiadds
xor
in
aaa
int
hlt
icebp
and
repz
fstp
sub
xlat
sbb
lock
in
xor
cmp
std
repz
out
neg
ret
sbb
xchg
hlt
repnz
xor
hlt
cmp
divl
xor
repnz
add
ljmp
mov
incb
stc
ss
lock
sti
sti
fcmovbe
cmp
cli
shl
xchg
aad
loope
in
sar
loope
cmc
repnz
das
aam
in
lret
loopne
into
ds
fucom
fildl
ljmp
call
in
into
fidivl
lret
fsub
shl
test
rolb
sti
sub
xchg
out
jecxz
vshufps
std
cmpb
rol
faddl
jmp
lret
loope
out
imulb
clc
fprem
ss
cli
cmp
test
out
or
lock
call
in
cmc
sar
or
testb
ficoms
sub
repnz
lret
cmp
xlat
int
xlat
rcl
cmp
in
xchg
test
lock
in
into
rcr
cmp
cld
jmp
cmp
std
in
fsubr
sti
adc
int3
fsubrp
faddl
xor
std
xorb
xorb
add
flds
in
xlat
shl
xor
sarb
ror
ljmp
test
hlt
lret
mov
in
cld
lret
icebp
ljmp
out
xor
repnz
aam
jge
add
jmp
rcl
aad
loop
pop
sbb
xor
sarl
fiaddl
jle
test
shr
enter
int
and
loop
fidivs
loope
aam
icebp
xor
lret
out
call
mov
xlat
int3
std
and
leave
fld
hlt
cmp
out
xor
cmc
cmp
faddp
call
leave
fcmovne
loope
jecxz
xchg
lret
xor
fyl2xp1
leave
in
out
int
ss
stc
adc
xlat
cld
mov
ficoms
out
loope
in
sub
in
out
fdiv
add
shl
add
sbb
ret
lret
call
in
in
fcom
lret
fmulp
in
fcomip
int
out
in
aad
lock
repnz
loope
lret
cmc
jmp
int
cmp
fsub
rcr
add
in
test
clc
out
fcoml
sub
cmp
aad
cmp
repz
out
loope
loop
loop
loop
jmp
jmp
into
out
cmp
in
rol
enter
fcomp
in
mov
or
call
xor
fsubrp
fadd
ljmp
jecxz
xchg
orb
sti
in
lock
and
xchg
call
std
rorb
lds
hlt
das
ds
fcomi
cmp
sar
fiaddl
shr
mov
out
enter
cld
iret
aaa
fcmovbe
lock
fdivr
sti
fadd
fsubrp
loopne
lock
lock
int3
mov
aas
ret
cmpb
ffree
lret
test
test
cld
xchg
shl
aam
into
out
icebp
cmp
lock
in
cmc
aas
sbb
orb
repnz
xor
clc
repz
xlat
lock
into
sarl
lock
rcr
in
mov
loope
aam
enter
into
repnz
rcr
fucomip
flds
aam
in
out
adcl
xchg
ljmp
roll
out
adc
cmc
lea
into
hlt
loopne
lock
repnz
cmp
cld
stc
fcomi
cli
shr
inc
clc
movl
rcl
decb
hlt
aaa
xor
lret
pop
lock
jmp
enter
fstp
int
inc
dec
orl
lret
sarl
fiaddl
jle
cmpb
mov
enter
addb
lock
int
call
repz
repz
les
int3
loopne
lret
fucom
ljmp
ss
fistpll
rol
fiadds
stc
in
xchg
loope
adcb
enter
aam
in
repz
mov
xchg
ret
in
cmc
ror
ffreep
loope
xor
fyl2xp1
out
ljmp
ret
xlat
rol
mov
int
enter
xchg
aad
lret
cmc
repnz
std
aaa
sti
not
xchg
mov
mov
sbb
test
xchg
call
xlat
leave
shl
out
lock
cmp
sti
and
ljmp
xchg
adc
out
xlat
jmp
icebp
cmc
aas
cmp
out
cmp
enter
xchg
cmp
call
jecxz
enter
iret
out
xor
sbb
rorl
stc
leave
lea
mov
jmp
xor
cld
ror
fmul
loopne
fcmovnu
sti
aad
rcr
out
fimull
xchg
rcl
out
hlt
stc
cld
fadd
cmp
ds
stc
test
in
fdivrp
mov
out
loopne
aad
int3
test
in
fcomi
loopne
int
fdivrp
loope
fptan
lret
faddl
jmp
loope
cmp
push
loop
lock
mov
rcr
out
inc
xor
in
stc
xor
fninit
idivl
inc
sti
std
loopne
jecxz
test
std
lock
sar
into
hlt
int
ss
lock
repz
cmp
cmp
addl
fisttpll
aam
xor
cmp
into
aam
aas
idiv
roll
out
xchg
stc
iret
in
in
jmp
jmp
int
cmp
cli
fstp
fadd
leave
loopne
test
fbstp
fadd
jmp
ljmp
xlat
aad
sti
aam
mov
int
xchg
repz
das
fcmovnu
leave
iret
leave
mul
adc
loop
sarl
enter
testb
repnz
xor
imul
sub
cmp
movl
ja
movl
mov
jmp
mov
adc
mov
mov
movl
jmp
aas
mov
fnstcw
jae
or
mov
aad
jle
add
cmp
repnz
out
shl
loop
xchg
lret
enter
in
repnz
repz
fsub
rcl
std
xlat
xlat
xchg
fdivr
int
mov
hlt
int
into
cmp
xor
ss
shl
and
imul
xlat
xlat
addl
mov
loope
mul
fmulp
cmp
aam
lret
rol
in
clc
loope
fdivp
loop
xchg
in
in
in
in
leave
lock
cli
sti
test
fnstcw
cmc
orl
rcl
ret
xor
std
fistpll
idiv
lock
ret
test
mov
jecxz
mov
shl
cmc
xor
stc
jmp
int
repnz
stc
ret
ret
cld
out
decl
test
xor
cmp
xor
out
cmp
in
ret
xlat
loope
aas
inc
shl
mov
int
div
repz
out
cmc
enter
sti
icebp
ds
in
in
int3
jmp
repnz
out
cmc
leave
mul
int
out
cmp
in
ffreep
lock
cmp
fxch
mov
enter
mov
aam
out
fmul
sarl
rcr
shll
icebp
out
test
test
ret
les
push
out
out
xor
iret
jmp
std
sti
std
fadd
clc
stc
shl
fsubp
aad
lret
in
fsubr
faddp
loopne
iret
xchg
into
jecxz
out
iret
ror
lock
rcl
cmpb
fldl
ljmp
lock
lret
xor
cmp
repz
sti
aad
sti
leave
loop
mov
fldl
out
stc
in
cmp
and
les
faddl
hlt
xchg
lock
ret
int3
leave
leave
icebp
into
cmp
cmpb
addb
cmp
xchg
shl
xchg
in
not
clc
sti
cmp
cmp
leave
cmc
jmp
ret
test
test
loope
loopne
roll
xor
out
cld
rcr
jmp
roll
test
in
lea
int3
in
jmp
xor
into
shl
clc
into
leave
lret
repz
fdiv
mov
fimull
loope
iret
out
into
icebp
xor
xorl
xor
jmp
aam
mov
int
rol
repnz
add
sub
fdivrs
fiaddl
jle
shl
aaa
clc
iret
int
stc
fld
fnclex
fimuls
fldlg2
out
nop
out
mov
loop
lret
leave
lret
lret
idiv
shl
out
out
sti
out
xlat
sbb
xchg
xlat
aaa
jmp
fucomi
cli
fdecstp
aaa
aas
sub
into
std
xchg
call
lret
loope
repnz
lret
lds
int
ljmp
adc
enter
xchg
in
mov
aaa
ljmp
shll
enter
cli
out
loope
jmp
sarb
cmp
out
cli
ss
cmp
in
ss
hlt
cli
sbb
test
jecxz
fmul
mov
xchg
aaa
out
cmp
lock
repz
cmp
loope
fcoml
in
aam
enter
fcmovnb
sti
cli
cli
int
cmp
test
rcr
addb
enter
jmp
in
rcr
repnz
loope
hlt
neg
cmc
loop
faddp
sub
cmp
xor
das
idiv
fxch
call
ret
jecxz
fadd
std
ret
cli
fmulp
ljmp
in
xlat
hlt
in
icebp
cli
aaa
loope
ror
cmp
ffree
sti
cmp
in
shl
into
lret
shr
out
call
cmp
cld
cmc
stc
ljmp
mov
xor
xchg
out
lock
aad
fdivrp
int
cmp
fsqrt
inc
lds
hlt
in
out
mov
test
xchg
iret
rcl
loop
enter
std
jmp
ss
into
aad
ret
mov
in
out
fimuls
cmc
xor
dec
xlat
jmp
repnz
cmc
lds
faddl
out
sar
jmp
fucomip
lret
std
xor
in
add
stc
les
icebp
repz
jecxz
xor
xor
xor
std
icebp
shr
ret
fst
fadds
stc
mov
ljmp
out
xlat
out
in
in
int3
fchs
cld
sar
ret
clc
ljmp
sti
loopne
mov
rorl
cmp
div
in
or
icebp
rcl
idiv
jmp
loope
loopne
int
iret
repz
stc
xor
or
sub
add
mov
or
imul
mov
mov
sub
cmp
movl
ja
mov
jmp
xor
jmp
ror
iret
leave
fstp
popa
test
mov
stos
cmp
add
call
cmp
ss
aas
in
into
ffreep
fdivr
loope
mov
fadd
and
repnz
sar
rcr
in
cld
divb
loopne
aam
jecxz
aas
hlt
in
neg
into
lea
clc
ret
cld
ss
out
stc
test
sar
cmc
std
and
fadd
jecxz
nop
fmulp
out
das
in
cmp
xor
and
fnclex
fcomip
xor
cmp
mov
out
mov
lret
call
out
cld
icebp
cmp
aad
in
inc
in
leave
std
jecxz
mov
lock
cmp
ds
test
roll
fmul
xchg
repnz
ljmp
fcmovu
lock
fmul
out
loopne
fisttpll
lea
in
hlt
xor
cmp
in
out
out
out
icebp
shl
lret
fiadds
xchg
std
div
clc
xlat
out
cli
cmp
in
aad
faddp
iret
movl
iret
lds
imul
idivl
cmp
aas
cli
out
repz
iret
stc
sbb
incb
and
out
cmc
lret
fstpt
cmp
jmp
les
loopne
loopne
fmull
std
lock
icebp
repnz
cs
shll
fcmove
shr
rcl
out
test
mov
mov
rol
xor
fdivrl
cmp
sar
aam
fnstsw
adc
mov
clc
roll
shl
into
in
fnsetpm(287
cmc
xor
sar
loop
hlt
sti
or
jmp
xchg
fiaddl
out
cmp
leave
neg
enter
stc
fucomp
xchg
out
shr
jmp
lock
cli
iret
loopne
repnz
xor
out
sti
out
cmp
jmp
std
lock
roll
sbb
call
xchg
in
fcomip
rcl
into
shl
test
repnz
aas
sti
sti
orl
out
in
rcl
jecxz
lds
xor
fdivr
in
test
out
xchg
jecxz
stc
call
xchg
lret
xor
fidivs
cmp
icebp
clc
cld
test
test
cld
movzwl
sub
mov
xor
xor
jmp
rcl
into
aad
fcmovu
add
pop
pop
inc
mov
jle
add
out
mov
ror
cmp
lock
ds
out
cld
clc
in
xor
in
repnz
in
jmp
in
lret
lock
filds
sti
ret
jmp
in
in
out
clc
aam
cmp
cmp
jmp
int3
test
cli
call
test
repz
orb
lret
shl
call
lock
in
lret
into
std
cmp
roll
mov
mov
lret
in
repz
out
xlat
fmul
call
call
sar
repnz
leave
int3
in
aam
aam
cmc
int3
out
imul
into
dec
loopne
cli
fcom
rol
xlat
mov
loopne
call
ljmp
into
rcl
in
in
shl
xor
aam
fildl
rorb
hlt
icebp
call
repnz
fcmove
repnz
ss
rolb
lret
rclb
aad
xlat
stc
std
into
ljmp
loop
fildl
call
xor
repz
stc
in
into
cli
adc
repnz
loope
aam
jecxz
enter
loope
in
shl
xchg
xor
hlt
repz
xor
aad
loop
clc
sti
in
fisttpll
push
call
ljmp
fcmovbe
icebp
test
flds
ret
test
ljmp
rol
in
enter
cmpb
repnz
in
sar
loope
sti
fucomi
in
mov
xchg
lds
repnz
test
ret
loope
xor
jmp
mov
ljmp
sti
xor
aam
cmc
incb
mov
mov
out
repnz
xchg
dec
loopne
loop
int3
std
leave
stc
repz
shl
in
xchg
lock
mov
aad
mov
int3
icebp
mov
loopne
in
shl
repnz
aam
repnz
aad
cli
out
fsubrp
rolb
mov
out
vpcomw
aaa
sarl
lret
aad
rcr
sarb
ret
fsubp
mul
in
mov
lret
jmp
mov
shl
in
into
jmp
hlt
neg
jecxz
mul
fucom
hlt
ds
add
adc
add
jmp
aad
ret
int
fistpl
jae
mov
fistpll
fiaddl
jle
fisttpl
int3
out
icebp
in
xor
in
sar
enter
in
ret
test
test
movl
aad
repz
sarl
lret
call
cmp
add
rcl
addb
fdiv
test
out
xchg
xor
lds
in
repnz
addl
out
loopne
into
fmul
call
out
into
jecxz
cmp
sti
repz
addb
mov
incb
bnd
xor
loop
xor
sar
cmc
loope
int
mov
fildll
out
cmp
fmulp
lret
out
jecxz
repz
jecxz
fldl
jmp
test
fdiv
shl
cmc
rcr
cli
cmp
and
xchg
in
loope
out
std
into
jmp
jmp
fnstsw
aaa
cld
rcr
cli
fcomp
cmc
in
int
lds
mov
out
call
xor
into
hlt
in
fdivrl
fstp
cli
stc
jmp
xchg
in
mov
repz
cmp
in
repnz
rolb
jmp
mov
xchg
cmp
aad
cmp
call
int3
in
out
xchg
testl
int3
ljmp
hlt
std
xlat
fnstsw
fst
loope
std
test
cmc
sti
lret
in
out
in
test
loopne
xor
in
incl
in
rol
loope
aad
aas
in
decb
sub
out
ljmp
fstp
in
out
loop
jmp
fidivs
imull
out
jmp
rcr
adc
rcl
test
shl
orb
mov
xchg
jecxz
fmul
fcmovnu
xlat
cmc
leave
call
fcmovnu
fld
sbb
lock
jecxz
test
xor
iret
hlt
cmp
shl
std
cmc
stc
enter
leave
std
ljmp
rol
xor
idiv
cli
fcmove
cli
std
adc
xor
xlat
xchg
in
xchg
in
ljmp
int3
aad
icebp
xor
aas
fsub
fimuls
scas
xlat
xor
xor
sub
mov
mov
jmp
rcl
rcr
aam
fstp
lods
pushf
inc
outsb
ss
cmc
mov
add
stc
test
add
in
nop
std
xchg
lock
xor
out
int
loopne
cmp
fadd
std
jmp
fimuls
sub
sarl
fidivl
cmp
fabs
hlt
rcl
rol
leave
not
cli
cmp
in
cli
fdivp
jmp
shr
in
fucomi
int
cld
fdivrp
fiaddl
fcmove
loopne
in
lock
out
xchg
jmp
xor
stc
xlat
cmp
call
cmp
aas
cmp
shl
hlt
fcmovnb
loop
nop
orb
divl
cmp
leave
rol
out
cmp
fadd
out
xlat
lret
mov
fimuls
mov
aaa
in
jmp
cmp
out
and
fcomi
iret
rcr
xlat
sbb
and
out
cli
lret
xchg
ret
in
cli
fdivrl
cmp
repnz
hlt
aas
cld
sub
mov
xchg
xlat
ror
int
stc
cmp
sbb
sar
sar
incb
fiaddl
aad
in
shl
shl
xor
lret
loope
std
shl
cmc
leave
sub
fdivrp
repnz
xchg
aaa
ret
in
ljmp
test
out
cmp
ret
jecxz
or
in
iret
in
xchg
hlt
fxch
fdiv
enter
stc
testl
jmp
clc
iret
loope
out
mov
int3
fadd
lret
into
stc
div
iret
cli
repnz
std
roll
sti
test
xchg
fisttps
xor
xor
in
ljmp
cmp
rcr
xchg
addl
nop
in
subl
sub
ret
ss
iret
cmc
in
int3
xlat
stc
in
fcmovbe
clc
enter
in
int3
rolb
cli
repnz
out
loop
icebp
inc
icebp
stc
mov
in
aad
fsub
int
loopne
shl
lret
into
jecxz
xlat
fxch
cmp
in
stc
ret
fadd
repnz
jecxz
mov
sti
mov
cld
int3
hlt
rcl
imul
ret
idiv
ss
aas
icebp
xchg
test
popl
test
cmp
repnz
out
cmp
out
add
xabort
test
icebp
icebp
shl
lret
fldl2e
fdivs
shlb
int3
test
xchg
cmp
jmp
sarl
rol
js
pusha
mov
push
in
jle
add
icebp
clc
ror
xchg
fcomp
lock
ss
xor
ss
lock
jmp
aad
out
mov
mov
loopne
repnz
aam
fcmovu
jmp
stc
xlat
ds
aam
aad
icebp
iret
in
movl
fmulp
lock
leave
div
in
lret
shl
ss
fndisi(8087
hlt
mov
xchg
enter
in
loope
mov
les
in
ret
fdivr
dec
idivb
loop
icebp
shl
clc
div
mov
loopne
and
in
loop
icebp
jecxz
fsubrp
xor
cli
jmp
filds
mov
fadds
rcr
mov
xor
aam
icebp
hlt
jecxz
or
addb
in
test
rol
in
cmp
aad
xlat
cmp
loopne,pt
rcr
lret
xchg
out
fxam
test
loope
hlt
cmp
icebp
cmp
clc
sti
loop
rol
mov
fdiv
lock
call
in
aam
shr
stc
cmp
repz
test
mov
ret
fucomi
xchg
fsubp
aaa
cmp
cmp
out
cmp
into
out
fadds
sbb
in
jmp
xlat
leave
xor
ss
shr
mov
incl
ljmp
leave
out
loopne
rcr
sar
addl
xchg
roll
xor
jmp
cmp
out
loopne
in
in
ret
shl
sbb
orl
mov
in
xor
int
lock
cmp
lret
neg
fucom
xor
cli
in
fmull
jmp
in
in
clc
cmc
cmp
in
fcmovbe
out
fmul
cmc
imul
hlt
cmc
fdiv
ljmp
fcmovne
xchg
mov
in
ss
iret
fmulp
cmc
std
in
rorb
ljmp
xchg
call
leave
int
stc
jmp
xlat
fstp
sbb
sub
out
lds
xchg
shl
enter
lock
int3
fincstp
cld
fstp
cli
loopne
in
out
xchg
repz
in
loope
int
cld
call
fstpt
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
fcom
rol
fcom
add
push
cmp
ljmp
jle
jecxz
roll
in
in
dec
hlt
test
enter
aas
out
xlat
cmp
and
fdivrp
call
ret
loope
lret
xchg
shr
int3
cli
into
mul
rol
fcmovbe
cmp
loope
sbb
in
ljmp
jmp
jmp
ljmp
sti
add
out
mov
mov
repnz
fcmovb
out
ljmp
fadd
test
ffreep
fadd
mov
cld
loop
xchg
mov
hlt
jmp
cs
xor
sarb
int3
into
ret
cmp
stc
in
ret
out
out
loope
xchg
lock
ss
out
fdiv
fcomi
idiv
cmp
loopne
loop
sti
std
std
out
ret
rol
hlt
xchg
lret
mov
cmp
sarb
repz
ret
rcr
ret
les
out
jecxz
not
cmp
jmp
cmp
cmp
ret
hlt
clc
fimull
mov
incl
enter
cld
jmp
clc
mov
out
ret
mov
out
xchg
iret
shr
icebp
shlb
fucomi
in
sti
iret
cmp
test
ret
enter
leave
sub
lock
ljmp
loopne
out
sti
sbb
out
not
enter
cli
testl
xor
aaa
int3
aad
cmp
cli
aas
aad
div
jecxz
fstp
xlat
mov
out
xchg
int3
xor
cmp
addl
test
cld
mov
xor
in
cmp
hlt
div
bnd
xchg
ljmp
aam
sar
test
xor
in
loop
mov
jmp
out
mov
in
lret
xchg
repnz
xor
rcl
jmp
clc
fnstcw
aad
fdivr
call
nop
sub
test
xor
aaa
clc
xor
cmp
ljmp
ret
lret
fiaddl
or
clc
divl
in
out
fcomi
loope
in
sti
jmp
ret
ljmp
iret
repz
xor
jmp
add
jmp
int3
int
loope
sub
call
jle
repnz
out
out
or
neg
loopne
not
cmp
fcmovne
fimuls
lds
jecxz
sti
cld
sti
cmp
loopne
iret
jecxz
hlt
out
not
imul
mov
fsub
ljmp
fmulp
neg
fucomip
int
loope
xor
les
fsubrp
rcr
xchg
ret
cmp
aaa
loope
icebp
in
cmp
mov
test
jecxz
test
icebp
ffreep
idiv
fmul
out
fdivrp
shl
cmc
cmp
mov
cld
div
fsubrp
roll
rcr
in
xor
fcmovnb
cld
fidivrs
cli
fsubr
out
cli
xor
cld
imul
fsubp
in
into
xchg
into
shll
aam
ss
std
ror
in
cmp
icebp
sar
leave
repz
into
cmp
in
test
out
into
lret
cli
iret
xor
sti
cmpb
aas
rcl
in
sti
mov
xchg
shrb
sti
aam
test
jecxz
fst
idivb
repz
xlat
sti
fstp
xchg
xor
in
call
fnstsw
cmp
shl
add
into
test
xchg
subl
cmp
leave
in
call
cmp
cmpl
xchg
loop
xor
xlat
ret
aaa
xor
rcl
ret
fcmovbe
sar
icebp
ljmp
fmull
xor
fcomp
out
in
repz
ds
sarb
addl
iret
lret
xor
loop
icebp
out
leave
cmp
aam
lret
sar
lock
mul
rorb
nop
rcl
jecxz
lret
in
cmp
cmp
xor
rol
cmpl
in
xchg
mov
mov
fst
lock
test
in
in
hlt
fst
mov
jecxz
in
in
xchg
int3
leave
in
lret
out
clc
fcmovbe
sarb
hlt
ss
in
jecxz
mov
into
loope
jecxz
xor
lret
cmp
cli
shr
stc
sar
loope
out
call
jecxz
rorb
sub
in
int3
in
xor
aas
shr
xor
cmc
cmp
std
mov
iret
icebp
lret
stc
jmp
enter
fstp
int3
shl
scas
imul
or
jg
fiaddl
jle
jmp
fsubr
fcomi
loop
xlat
xlat
leave
in
loope
call
enter
xor
rcl
icebp
ds
repz
shl
stc
xchg
xchg
xchg
decl
cmp
cmp
std
iret
loop
iret
fdivp
fcomi
xchg
loope
fnstsw
out
fcoml
rcl
ret
iret
clc
xor
xor
fdivrl
loop
filds
lret
out
xor
aad
xor
fcmovne
rolb
loope
mov
lret
ljmp
xchg
nop
jmp
in
xlat
ljmp
cmc
rol
shl
fiadds
incb
lock
cmp
repz
stc
in
xor
in
std
movb
out
int
in
ror
xor
hlt
not
lock
iret
fsub
jecxz
std
test
test
cli
rolb
lret
shl
icebp
aaa
push
lock
lock
out
lret
call
fcoml
cld
jmp
sbb
iret
roll
decl
out
inc
loope
fcmovb
cmc
hlt
iret
aas
cmp
loop
aad
jmp
lret
roll
aam
cmp
cmp
sti
in
mov
stc
mov
int3
leave
out
nop
out
icebp
cmc
ret
ss
leave
cmp
sti
clc
in
test
sbb
enter
xlat
lret
mov
iret
call
aad
lret
out
xor
xlat
div
xlat
in
in
dec
ret
sbb
int
sub
not
div
icebp
rcl
out
fsubp
lret
icebp
shl
adc
cmp
call
out
faddl
xor
lret
in
enter
out
in
cmp
jecxz
ljmp
xchg
out
call
cmc
lret
iret
xlat
loopne
std
cli
fdivp
out
clc
loope
or
call
aaa
fcmovnbe
xor
fcmovnbe
in
fsub
xlat
fdecstp
rolb
test
lea
jmp
xlat
ljmp
out
jecxz
fistpll
xchg
loopne
in
fiadds
jmp
lret
ror
aas
ffree
fcmovnu
out
jmp
sub
in
jg
fiaddl
jle
jmp
lret
rol
into
xlat
cli
hlt
fsubr
rol
icebp
repnz
decl
repz
std
xchg
jmp
repnz
idiv
cmp
cmp
not
and
rorb
loopne
leave
fldz
ss
out
lret
fscale
leave
fdivp
jecxz
sarb
cli
xchg
in
repz
out
jmp
out
aam
into
divb
faddp
stc
test
sti
ds
inc
in
out
lock
loop
lock
shl
into
in
enter
xlat
cmc
ret
int3
cmp
call
cld
xchg
xchg
test
cmp
cmp
shl
jmp
aad
fsubr
xchg
aad
out
fsubp
mov
leave
ss
ss
clc
repnz
xchg
sbb
shl
lret
loope
mov
clc
rcr
out
lret
ljmp
out
aad
fldl
jecxz
lea
shl
stc
jecxz
jmp
repnz
shl
leave
xchg
mov
std
iret
std
into
in
xchg
test
fcom
xor
aad
cmp
cmp
shl
rcl
mov
xchg
faddl
jmp
out
sub
jmp
add
cmc
mov
lret
addb
ror
sti
cli
fcmovu
jmp
ds
aam
repz
or
test
jmp
in
ror
icebp
call
jecxz
rolb
call
clc
xchg
icebp
icebp
xor
ret
xor
shr
in
clc
fadd
div
not
aas
rol
loope
fadds
rol
fimuls
in
call
cmp
cli
repnz
cmc
incb
sar
loop
cmc
lea
in
fidivrl
repz
hlt
int3
aad
sarb
fildl
testb
rcl
int3
xor
in
fcom
in
test
fstp
cld
aas
sbb
shl
sbb
fst
in
icebp
nop
call
iret
enter
int3
sub
ss
hlt
stc
rol
enter
fcmove
enter
out
xor
int
rcl
aam
cmp
into
loope
into
testl
orb
mov
sub
cmp
mov
jbe
jmp
lret
ret
in
call
mov
movsb
mov
fiaddl
jle
faddl
hlt
fcomi
aas
leave
cmp
aad
rol
jecxz
ret
hlt
adc
ljmp
xchg
shll
mul
idivb
aad
lock
cli
xor
fimuls
sbb
repz
repnz
cmc
xor
shll
fcmovu
jmp
testl
mov
jmp
jmp
leave
in
stc
ror
roll
lret
cmp
and
aam
repz
cli
cld
jmp
sarl
les
out
mov
loop
pause
cmc
rol
fcomi
ss
fldl
shl
vpmulhuw
test
sub
lret
mul
shr
aam
cmp
idiv
aad
shl
std
xor
std
idiv
ror
cmc
aam
loop
fstpt
repnz
xor
out
mul
fcmovnu
in
loopne
fucom
stc
xchg
hlt
out
fisttpll
fcomp
into
imul
enter
rcl
cmc
cmp
repnz
in
fsubrp
or
int
int
ret
into
cmp
in
jmp
shr
cmp
rcl
xor
test
loopne
mov
mov
out
loop
int
xor
lret
out
iret
cmp
repz
ret
in
rorl
mov
loopne
aam
out
out
lock
cmp
into
cmpb
sti
stc
int
sti
incb
repnz
in
clc
out
cli
fstp
in
in
cli
sub
fsubr
mov
call
xor
out
rcr
ds
fdivr
sbb
hlt
repz
call
and
cli
mov
int3
iret
repz
xor
cmp
int
int
cmc
aad
rcl
cmc
xchg
icebp
leave
xchg
clc
in
stc
sti
xor
in
ljmp
loope
fcmove
mov
sbb
mov
fisttpl
jecxz
imul
cmp
jmp
fcomi
xchg
in
leave
lret
std
xor
mov
fcomi
aaa
cmp
xlat
int3
fdivr
cmp
in
neg
call
loope
fcmovnu
mov
sub
aaa
icebp
aad
aad
inc
int3
fadds
jecxz
clc
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
jmp
ret
rcl
rol
rorl
sbb
jg
fiaddl
jle
int
fxch
in
shl
xchg
jecxz
rol
cld
out
idivb
out
sarb
les
ror
out
mov
fmulp
in
fsubp
mov
xor
jmp
idiv
neg
fisttpl
loopne
cli
mov
lret
fucomp
mov
repnz
cmp
out
aad
stc
test
into
cld
fdivrs
div
in
jmp
xor
in
lock
ljmp
loope
add
imul
fcomi
aad
loop
test
out
lock
sar
xlat
fldz
jecxz
enter
cmp
rcl
fadd
orl
int
div
icebp
xor
ror
icebp
sarb
faddl
aam
fscale
mov
out
out
mov
in
cmp
out
aad
cmp
fdivrs
fcompp
mov
lock
icebp
icebp
jecxz
sub
xor
repnz
ljmp
sar
stc
clc
mov
mov
out
xchg
and
loopne
stc
repnz
iret
cmc
loope
rolb
aad
loop
idiv
decb
imul
lock
sti
repnz
lock
in
cld
repz
movb
fists
xor
in
idiv
call
repnz
repnz
mov
mov
xchg
fdivr
int3
jmp
aaa
in
cmp
stc
out
fadds
sti
in
aad
xlat
rcr
lret
repz
out
fbstp
test
cmp
xchg
mov
fxch
fucomip
in
leave
in
iret
in
call
out
enter
lock
rcl
clc
in
sti
sbb
roll
loopne
xor
lret
fucompp
cli
std
sub
and
fdivrl
clc
fmul
sti
in
in
out
not
int3
xlat
cmc
ss
int
stc
loopne
fidivrs
cmp
xchg
call
cmc
ljmp
lock
fcmovu
loope
ret
rcr
fcmovb
hlt
fucomi
out
leave
call
into
shlb
in
fxch
out
sti
aad
fucom
out
in
cmp
jmp
sbb
shr
out
loop
shrb
in
int3
ror
aam
roll
fadd
decl
add
add
xlat
mov
rcr
xlat
sub
mov
jle
add
fisttpl
mov
loope
xchg
xor
out
fdivp
lret
hlt
idiv
lock
imul
in
ret
test
ror
ret
aam
iret
fdivrl
fdivr
lret
aad
ret
cmp
sti
int
sti
orb
aad
enter
iret
jmp
repz
not
jecxz
fdivrs
stc
stc
decb
jmp
in
in
shr
cmp
out
shlb
repnz
aam
out
adc
lock
ss
shll
aam
std
in
or
rcr
fcmovnbe
lret
jmp
nop
xchg
cmc
fbstp
int
cli
icebp
out
xor
aas
inc
aad
test
stc
clc
lret
mov
loop
test
lret
repz
xor
shl
jmp
out
aas
cmp
test
iret
fdivr
mov
lret
fsubrp
std
mov
jmp
cmp
cld
icebp
sti
in
xor
cmp
call
test
ljmp
cli
out
enter
rol
cmp
aas
cli
shl
xchg
stc
and
ror
clc
leave
in
cld
shl
iret
fcomp
into
fcomip
sar
xor
xchg
jmp
rolb
sub
cmp
lock
in
shr
loopne
mov
shl
xor
icebp
leave
into
shl
xor
fnstcw
lret
rcll
sub
ss
xor
in
loope
fdivrs
fnstsw
ret
hlt
rcl
lds
out
ljmp
fsub
fucomp
in
call
inc
aas
rcr
fstp
sti
and
filds
out
cmc
fadd
div
stc
cmp
faddl
loopne
repnz
out
call
loop
jmp
repnz
fidivrl
cmp
in
cmc
not
rcl
faddp
fucom
sti
inc
into
std
ljmp
clc
into
in
call
cli
icebp
push
ret
fucom
mov
xlat
fsubr
int3
in
out
fsubp
out
lock
aad
shll
int3
enter
out
cmp
loop
ds
mov
decl
enter
repz
aam
jmp
idivb
cld
xorb
jmp
lret
xlat
aas
rcr
int
in
push
int
sbb
jg
fiaddl
jle
xchg
leave
jecxz
out
fcmovne
lock
xchg
iret
out
jecxz
cmp
icebp
cmp
fcomip
cmp
in
std
leave
fdivr
jmp
loope
lret
lock
call
fidivrs
out
cld
imul
leave
lret
fsubrp
lock
leave
div
jmp
repnz
test
mov
out
xchg
jecxz
fsubrs
rol
cmc
out
call
loope
ss
sarl
orl
iret
int3
or
les
hlt
int3
std
fcmovnu
fucompp
cmp
ret
cmp
cld
jecxz
fadd
int
mov
cmp
ror
cmc
into
cmp
int3
cmp
push
ror
shl
iret
idiv
loope
fnclex
testl
loope
call
aaa
aaa
ds
shl
testl
loopne
shr
loop
cmp
fcmovb
int
lret
ds
xchg
rolb
in
repnz
repnz
shr
xor
fyl2x
int3
not
repnz
addl
ljmp
test
cs
stc
out
fmul
cmp
fptan
ds
ret
call
test
xor
rcr
ror
out
std
cmp
cmp
cmp
in
repz
fxam
xchg
imul
jecxz
lret
call
ret
lret
xor
cli
fsubr
loope
ss
aam
adc
loop
cmp
std
aad
int3
mul
xor
aaa
into
shl
jmp
cmp
cmc
incl
loopne
cmp
idivb
int
lret
neg
jmp
out
ret
idiv
fdivrp
ljmp
out
in
in
xlat
lret
jmp
aas
cmp
aad
clc
test
mov
in
add
sub
cld
in
icebp
clc
call
fadds
in
fdivrp
fcmovne
mov
aas
out
in
not
neg
imul
fscale
div
hlt
fadd
repnz
stc
cld
mov
ljmp
das
ror
out
in
int
cmp
test
rcr
fadd
mov
in
mov
repnz
cli
neg
leave
lret
out
addb
jmp
jmp
lret
fst
mov
addr16
mov
stc
jg
fiaddl
jle
int
xchg
addb
mov
mov
aad
cmp
in
aad
cmp
hlt
cld
lock
loope
vpsubsw
jmp
xchg
into
jmp
int
lds
jmp
das
fcmove
std
iret
sbb
cli
clc
mov
cld
roll
out
mov
test
loop
ljmp
idivb
clc
repz
xchg
hlt
jmp
sub
in
out
cld
sub
int
ret
into
fcomi
xor
fcmovbe
stc
clc
ret
xchg
add
in
loop
addl
cli
enter
int3
rol
aas
loopne
ds
ror
fsub
into
xchg
fninit
xchg
out
icebp
iret
not
out
lret
shl
repz
repnz
in
in
aad
ljmp
loopne
fnstsw
repz
fisttpl
test
jmp
divb
fidivl
cmp
fdivr
sub
cli
fnclex
ret
mov
loopne
xchg
lret
loope
xlat
jmp
jmp
stc
cmp
xchg
cli
loope
loopne
in
int
lock
int
mov
jmp
shl
cmp
std
shl
xchg
sbb
mov
inc
ret
in
out
or
int
sti
out
in
xlat
test
loopne
mov
shl
cmc
xor
jmp
sti
cmp
fsubrp
jecxz
and
ds
test
test
mov
out
in
jmp
xor
cmp
shl
cmc
shl
aas
out
roll
xor
int3
in
out
jmp
in
lock
cmp
fnstsw
fcomp
in
out
enter
lret
sbb
aam
out
leave
ljmp
rol
icebp
xlat
aad
out
in
repz
clc
sti
orb
loop
das
iret
cmc
xor
xlat
cmp
cmp
aas
lret
ret
test
cmc
and
xchg
mov
fucomip
in
xor
xor
fcmovne
not
cmp
addb
hlt
fcomp
aad
ljmp
jmp
in
ljmp
xchg
loope
fcmovne
idiv
int3
ljmp
out
sti
cld
fdivrp
mov
xor
add
mov
mov
mov
mov
xor
add
jmp
aam
ret
aam
push
inc
loop
int
sti
jg
fiaddl
jle
sti
xlat
idiv
push
aam
in
xchg
loopne
xor
loope
mov
lock
leave
lock
sub
std
aad
sti
lret
stc
loopne
in
mov
int3
nop
loope
int
out
ljmp
rcl
jmp
mov
loop
jmp
xchg
mov
out
xor
idiv
filds
call
sti
mov
rcl
out
aad
int
fcomp
ds
repnz
hlt
in
test
enter
lock
loope
shl
aad
sti
cld
aaa
in
repz
sbb
rcl
mov
lret
clc
mov
mov
ss
aaa
fnstenv
fldpi
lret
sbb
fdivp
clc
in
fxch
fld
faddl
mov
hlt
not
xor
loope
fildl
rcr
in
jecxz
decl
jmp
fadd
iret
jmp
fdivp
into
int3
cli
aad
sti
rcr
out
fxch
in
lret
enter
loopne
ss
enter
fstpt
shl
clc
cli
out
repnz
xlat
aam
fadds
int
ljmp
cmp
shl
aad
aas
sar
ss
aam
testl
iret
xchg
fiadds
jmp
int
clc
test
cmc
in
mov
ret
cld
sti
test
lock
shl
in
xor
and
xlat
std
xchg
aam
xlat
loop
mov
sub
repz
into
clc
aad
clc
shr
in
fsub
loop
cmp
sti
in
lret
jmp
adc
in
out
out
aad
ret
in
sarb
jmp
fdivr
cmp
neg
mov
jmp
call
mov
loopne
call
fistpll
jmp
in
ds
xlat
loopne
out
mov
loope
repnz
cmp
in
out
fisttps
loope
in
fmull
aam
ret
enter
shr
xor
aad
jecxz
shl
xor
xchg
into
mov
repz
xor
call
iret
cli
icebp
iret
divl
loop
out
fxch
ret
jecxz
mov
xchg
xchg
test
in
xchg
cmp
push
or
je
add
lret
ret
fcmovu
fucomi
pop
test
mov
xchg
jg
fiaddl
jle
jmp
cmp
clc
loopne
loopne
aad
ds
mov
fmulp
jmp
loope
leave
mov
xchg
loop
ret
cli
ss
out
loop
xor
ffreep
sarb
fadds
jmp
xchg
shl
loopne
ret
xor
in
into
lret
cmp
into
cmp
lret
xchg
jmp
cli
shr
cs
out
lock
fnstsw
xchg
out
fiaddl
mov
lret
xchg
test
neg
repnz
xlat
ds
ds
icebp
out
mov
ds
xchg
lret
icebp
xchg
jmp
shr
sar
cmp
xor
in
fcmovnu
lock
loope
fdivrp
cld
cld
cli
out
xchg
loope
jecxz
xor
in
fdivr
leave
ror
icebp
int3
xlat
mul
repnz
cld
out
iret
int3
in
in
out
xor
fidivl
shr
rcl
cmp
cld
fadds
into
cld
fucomip
xchg
in
xchg
int
xor
fdivs
div
aam
clc
fst
ffree
test
lock
cli
mov
cld
out
rclb
rcr
cmc
int
int3
repz
out
add
repnz
aad
shl
stc
in
in
nop
out
in
lret
std
out
cli
out
cmp
iret
clc
stc
loope
rcr
in
add
sti
sti
stc
xchg
repz
ror
in
out
jmp
jecxz
rol
out
clc
fpatan
cld
mov
fcmovne
jmp
mov
ljmp
cmp
fidivrs
cmp
adc
aas
aad
mov
xchg
mov
xor
fidivrs
leave
repnz
cmp
or
mov
vpaddd
out
xchg
out
shrl
cmc
xor
ss
in
adc
test
test
mov
loope
call
shlb
call
aam
fucompp
add
orl
repz
shr
loop
shl
call
jmp
ret
test
out
std
aad
in
std
mov
lret
out
in
repz
rcl
out
int3
rolb
fnstcw
roll
lret
xchg
in
out
out
loopne
ret
test
in
int
ret
cli
loopne
clc
xlat
stc
incb
xchg
hlt
jmp
leave
aas
ret
vpcmpeqw
andl
fiadds
jle
int
xor
aaa
or
stc
aam
sar
rcr
in
cmp
sbb
in
fcomip
lds
lock
xlat
cmp
aas
add
cmp
lds
repnz
roll
xlat
fcmovb
int
fcomi
aam
ds
neg
xlat
fcmovnu
hlt
in
mul
fucomip
int3
in
int
aad
sub
out
fcmovbe
in
rcl
shl
stc
test
mov
enter
dec
icebp
into
mov
lret
stc
clc
fsubrp
or
fucomip
aam
repnz
mov
loope
leave
rolb
ror
fsub
sti
xor
lret
hlt
jmp
fistpll
jecxz
ds
repz
testb
test
test
das
fdiv
in
lock
cmp
cmc
cmp
std
cld
and
loop
fisttpll
int3
shr
sub
fidivl
cmp
cmc
lock
shl
fiaddl
fdivp
icebp
fucom
shl
xor
aam
icebp
out
rcr
aam
loope
rcr
mov
fsubp
ret
in
fucomp
int3
mov
loope
mov
sarb
les
in
divl
divb
icebp
cmc
adc
mov
lds
fcmovu
rcl
rorb
in
std
ss
lock
out
shl
test
aam
out
out
incb
out
shl
ljmp
adc
in
out
stc
cmp
ljmp
test
ljmp
cmp
xor
cmp
fdivrl
addb
mov
in
and
xchg
leave
lock
cld
ljmp
div
std
jmp
fimull
xor
cld
clc
cli
aad
aam
jecxz
aad
sar
fisttpll
in
int3
loop
test
xchg
das
icebp
jecxz
in
rcr
fcmovnbe
hlt
cmp
aas
ds
inc
or
into
enter
test
loopne
xor
shr
lock
iret
aam
inc
rol
sti
jmp
clc
clc
jmp
shlb
jmp
sti
cmp
clc
test
sar
rorl
in
fistl
ret
cmp
cli
lock
clc
ljmp
xlat
stc
xchg
in
fsubrp
cmp
jmp
int3
ret
lret
ret
int
int3
int
adc
inc
inc
mov
add
out
xchg
out
ror
das
sarb
fcomi
cmp
in
aas
aad
add
xchg
fsubrp
xchg
in
aam
stc
stc
leave
xor
cmc
aad
sar
aas
fnstcw
movb
jmp
filds
in
pushl
cli
in
shl
iret
in
repnz
sarl
rolb
in
enter
out
ljmp
cli
int3
call
into
int
aaa
shl
in
out
clc
cld
lret
in
xchg
int3
in
int
ror
repnz
inc
ds
aad
mov
icebp
into
icebp
aam
sub
xor
cs
cmp
leave
xor
loopne
xor
test
sti
fisttps
aas
stc
jecxz
icebp
ss
sti
leave
ror
filds
xlat
loope
jmp
repz
out
xor
in
cmc
lret
dec
cmp
div
fst
aam
fsub
in
mov
int
cld
in
aam
ret
out
cli
aaa
leave
call
aaa
cmp
ffree
fcomp
xor
and
in
adc
into
icebp
in
aam
sti
cmp
shl
sti
rcl
mov
int3
fmulp
mov
in
shr
mov
shlb
in
ror
std
ror
stc
cmp
rcl
fcmovnbe
enter
out
mov
std
nop
adc
cmp
xor
aad
imul
cmp
lret
aas
addb
fmuls
in
in
loop
in
repz
clc
aam
fbstp
fdivrs
ds
ret
iret
repnz
mov
in
icebp
ljmp
aaa
cmp
leave
cmc
cld
stc
loope
clc
out
test
test
loopne
out
or
into
mov
ret
not
out
cld
iret
cmp
out
cmp
in
lret
loope
mov
and
fbstp
hlt
cmc
jmp
leave
hlt
cmp
shr
ret
fisttps
test
call
fmul
sar
cmp
std
stc
std
loope,pt
decb
iret
sti
mov
test
xor
xor
jmp
ljmp
sbb
mov
test
test
mov
fdivs
bnd
into
cmc
fsub
cmp
ljmp
jmp
ror
aas
roll
ljmp
test
fiaddl
jle
jmp
and
rcl
das
rol
fstp
cli
loopne
loop
sti
cmp
cmp
loopne
fpatan
lret
mov
out
xchg
xchg
or
lret
lret
ret
sti
out
icebp
sar
ret
out
fcmovnb
xchg
out
enter
cmp
in
cmp
loopne
shl
not
stc
shr
loop
mov
jmp
test
repz
lock
icebp
int3
clc
sti
cmp
hlt
fsubp
loopne
in
fimuls
mov
out
call
out
in
repz
repnz
test
mul
in
in
orb
out
int3
fucomip
aam
in
std
fcmovb
jmp
mov
rorb
shl
fidivs
cmp
std
xor
ds
jecxz
fsubp
fsubp
ret
jmp
in
std
mov
lock
jecxz
fstp
fucomip
cld
xor
cmp
into
xchg
clc
addl
repnz
leave
in
cs
into
icebp
ds
aas
ds
not
lea
lret
in
out
int
clc
fldl2t
ss
cmp
hlt
aad
cmp
rcr
call
orb
xor
xor
roll
add
lds
mov
int
clc
iret
ret
test
cmc
in
sarb
in
ret
enter
ljmp
lock
xlat
cli
icebp
xor
hlt
cmc
fabs
aas
ret
sti
mov
in
fldl2e
iret
fdivr
xchg
inc
fsubp
sub
cmp
out
jmp
neg
lock
fdivrl
shl
cmp
cli
test
inc
shr
repz
lret
cmc
repnz
aas
filds
out
int
and
out
fdivr
clc
iret
cmp
cld
add
sar
out
out
in
jmp
aam
int3
out
out
leave
ds
cmc
ret
stc
fstp
fcomp
leave
mov
xchg
xchg
repnz
leave
mov
xchg
rol
cmp
cmp
repnz
clc
cmp
aas
test
mov
jecxz
call
iret
fsubr
lret
imul
ret
cld
mul
mov
mov
mov
jmp
into
aam
fmul
dec
cmp
cmp
xchg
fiaddl
jle
cld
in
out
lret
mov
call
testl
xchg
in
fdivrp
lock
sub
in
into
aad
std
lock
int
fstpt
fdiv
jecxz
or
in
icebp
repz
sub
xor
aaa
lret
ret
out
out
aam
aam
cmc
fmull
fstp
lock
xor
xor
cmp
cmp
cld
cmc
hlt
loopne
aas
jmp
adc
lret
lret
in
repz
faddp
xchg
jmp
lock
aad
roll
and
aam
sbb
test
loop
int3
cs
aam
leave
cmp
jmp
cmp
sti
out
aad
int
jmp
xchg
int3
sub
out
sar
fcmovnu
rolb
les
ffreep
fmulp
lret
out
test
idiv
ss
idivl
out
call
sbb
xchg
aad
addb
in
iret
fucomip
out
xor
jmp
in
loope
fucomp
repz
inc
loop
roll
shr
lret
cmc
das
rcr
xor
in
cld
aas
cld
loop
cmp
addl
out
out
xchg
jecxz
icebp
fdivrs
out
idiv
lret
in
into
shr
aaa
hlt
iret
call
leave
rorb
cmp
loopne
jecxz
fidivrs
aas
int3
sbb
out
roll
loope
std
roll
call
int
cld
aam
int
fdivr
aam
stc
shl
fstp
xchg
fprem
lock
loopne
aam
loope
repnz
lock
ss
jecxz
jecxz
fmulp
mov
decb
lret
aad
call
enter
jecxz
ret
ret
hlt
rol
lret
fdivrp
cld
xchg
cmp
fldln2
ror
shl
repz
les
faddl
and
pause
aad
fld
in
repz
hlt
out
xor
sar
loopne
roll
sti
xor
in
orl
in
cmp
jmp
cmp
ret
loopne
out
mov
test
in
cld
xchg
jecxz
xor
cmp
cmp
std
out
in
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
lret
enter
int3
rorb
push
cmp
mov
fiaddl
jle
loop
loopne
xchg
in
mov
loope
jmp
sub
out
out
sar
cmp
in
ss
adc
jmp
out
jecxz
xchg
and
xlat
iret
fcmovne
xor
fcmovnbe
xor
ds
ffreep
out
ljmp
aas
ret
call
aad
div
std
ret
loope
shr
in
in
decb
icebp
xor
jmp
clc
cmp
jmp
std
aad
xlat
hlt
xchg
rol
cmp
jmp
icebp
lret
ret
icebp
cmp
in
cmc
int
fstp
cmp
fsubp
in
xchg
call
hlt
ljmp
hlt
sarb
cmp
repz
mov
into
leave
lret
iret
jmp
aaa
fldln2
call
into
fsubrp
cmpb
incb
mov
xchg
lret
incb
fcmovb
in
leave
fsub
repz
addb
or
orl
fucomi
imul
repnz
loop
int
cmp
loopne
addl
aam
divb
ret
bnd
loop
sti
out
fdivr
jecxz
lret
out
out
cld
ljmp
into
test
cmc
cmp
cli
cmc
in
in
fiadds
idivl
fcmovbe
cld
nop
mov
int3
aaa
mul
in
sar
clc
call
iret
and
aam
out
clc
clc
int3
mov
loop
xchg
jmp
in
out
aaa
in
jecxz
int
stc
repnz
test
icebp
lret
enter
not
in
fucomi
fxch
int3
jecxz
fcomip
rorl
fiaddl
hlt
jmp
leave
rol
shlb
cmp
iret
rcl
cmp
shr
jmp
fnclex
repz
lea
out
das
rcr
idiv
leave
into
ljmp
fldl
faddl
in
in
das
ss
repnz
cmp
ds
loopne
rolb
ljmp
mov
xchg
lret
shl
xor
cmp
int3
fmul
in
out
xlat
cmp
out
repz
call
mov
fucom
mov
repz
enter
lret
repz
out
add
jmp
ror
rcl
stos
sub
insl
gs
std
test
fiaddl
jle
in
fdivp
out
add
fiaddl
test
ret
in
hlt
lret
repz
fdivrs
fmul
xchg
ret
fsubr
in
in
loopne
into
test
out
cli
xor
lret
div
idiv
sar
test
rcl
xchg
jmp
ret
fnsetpm(287
jecxz
fiadds
leave
stc
ds
ds
shl
ds
ljmp
sub
xor
aaa
cmc
fucomp
lock
hlt
jecxz
out
addl
sbb
fiadds
icebp
stc
cli
xor
movl
loopne
decb
ret
xchg
in
iret
ss
cmp
cmp
loopne
fadds
mov
orl
out
fucomip
in
in
icebp
ds
flds
out
cld
test
in
leave
enter
cld
icebp
sarl
leave
mov
mov
test
repz
cmp
int
fstpt
ljmp
leave
jecxz
mov
into
incl
loop
leave
shll
int
cmp
call
fcom
mov
testl
int3
xchg
xor
jmp
into
lret
ljmp
cmc
sti
cmp
in
clc
lret
in
cld
sbb
ljmp
fnstenv
call
xlat
sti
idiv
cmp
test
ljmp
out
ret
int
out
dec
incb
test
mov
adc
call
into
int
shl
std
fstp
cmp
fmuls
fsubr
fimuls
out
hlt
cmc
shr
repnz
cli
lret
xlat
fucomp
xlat
xor
cli
xchg
stc
test
out
out
mov
fisubrs
lret
iret
lock
repnz
out
test
repz
lret
mov
int
mov
fmul
icebp
jecxz
fmul
in
out
out
ljmp
aas
xchg
cld
movb
mov
ljmp
clc
icebp
fdivrp
rol
rol
aad
in
int3
sar
mov
out
out
repnz
leave
ret
shlb
sti
cmp
mov
mov
mov
xor
add
jmp
aam
lret
rcr
scas
cld
cmp
xchg
jle
stc
cmp
adc
addb
movb
mov
fcomip
sarl
xlat
std
lret
ds
loope
ret
lock
xchg
fcmove
std
mov
ficoms
neg
xor
in
cmp
xchg
fdiv
cmp
in
xchg
loop
loope
xchg
ljmp
out
std
incl
in
aas
and
sti
fmull
mov
xor
rcl
fsubr
jmp
cmp
sti
test
jecxz
std
test
into
nop
call
fcmovnbe
cmp
repz
ret
lock
ret
loope
loop
lret
int3
mov
in
mov
aad
fidivrl
repnz
ljmp
adc
not
lret
jecxz
adcb
ret
xor
in
lret
out
cmc
fadds
test
in
test
clc
cld
cld
xchg
in
cmc
lret
shl
shr
mul
stc
testb
enter
in
lret
orb
jmp
cli
loopne
shl
cmp
cli
filds
lret
clc
mov
mov
in
cmc
aaa
xor
in
out
aam
fdivrl
cld
and
stc
inc
loope
test
jecxz
push
mul
jmp
shr
lret
sti
out
shl
cmp
mov
out
std
int3
ljmp
sub
lock
shl
cmc
cmp
rorl
xchg
xchg
adcl
cmp
cmp
cld
fucomp
cmp
addl
xchg
xchg
fsubp
call
stc
cmp
in
ds
jmp
test
loop
rorl
out
out
xchg
repz
lock
in
stc
xor
sti
shl
test
loope
fsubp
lock
sti
sub
fidivrs
sar
sti
repz
jmp
fsub
loope
in
ljmp
enter
fld1
lret
cld
div
and
cli
ret
lret
shl
iret
xchg
xor
xor
fxch
ss
neg
fdivrp
ret
aam
cmc
out
mov
test
in
repz
rcl
in
rorl
scas
xlat
mov
xor
sub
mov
mov
jmp
ret
enter
int
leave
mov
fcmovne
lcall
jle
aam
aad
fyl2xp1
in
fcomp
stc
idivb
sti
ret
shr
orl
das
clc
cmc
jecxz
out
leave
int3
aaa
loope
loope,pt
roll
std
ljmp
cs
int
shll
stc
fadd
into
test
add
lret
fisttpll
mov
cmc
lret
ss
out
repz
fadd
sti
fcomip
in
clc
mov
mov
cmp
int3
aam
out
repnz
out
inc
fcmovbe
enter
orb
test
xor
repnz
shr
cmp
fcomi
hlt
cmc
fucomi
xchg
mov
mov
and
xchg
mul
int3
lret
iret
fnstenv
xor
in
repnz
testb
mov
lret
leave
jmp
aam
xchg
lock
out
call
rcl
aas
ds
icebp
out
xchg
icebp
fucomip
loopne
xor
aam
sti
aam
shll
in
rcr
cmp
hlt
ljmp
shl
aam
jecxz
cmp
bnd
int3
rol
adc
inc
orl
ffreep
lock
xor
std
jmp
repz
fimuls
int3
repnz
lock
int3
in
iret
rol
lret
repz
rcl
xlat
jecxz
in
rcl
enter
sti
fisttpll
jecxz
jmp
repnz
shr
out
cmc
das
cmp
lock
lock
push
sarb
add
cmc
jecxz
fldl
into
idiv
out
sti
fmul
lret
in
fst
vcmpps
rcr
out
xchg
xchg
in
in
xor
ss
cmp
aad
cmp
xchg
mov
out
test
rolb
repnz
not
cmp
in
lret
fucomp
shl
xor
lret
clc
orl
xor
xor
hlt
clc
cmp
in
icebp
into
fildl
rcl
out
addl
mov
ret
int
sti
stc
sar
xlat
ljmp
ds
xchg
out
testb
mov
int
lock
aaa
into
cmp
cli
addl
ret
fsubrp
cli
cli
loop
fmulp
int
xor
jmp
enter
fcmovne
fst
or
pop
mov
xor
xchg
jg
fiaddl
jle
iret
rcl
cmp
in
xor
xlat
stc
xlat
int
hlt
fprem
roll
jmp
in
loopne
xchg
lret
lds
fsincos
xor
fcomip
out
in
aam
sti
fstp
test
int
iret
loope
xchg
in
loop
cmc
cmc
repz
in
aam
cmc
testb
cld
leave
xchg
ljmp
aad
out
out
cmp
xor
int3
test
cmp
leave
mov
xchg
fldcw
in
cmp
fldz
fdivrl
sar
sarl
loope
test
fadds
sub
repnz
out
enter
idivl
xor
stc
cmc
in
aam
fsub
idiv
fst
cli
rolb
call
aad
fnstcw
loop
test
filds
fldl
mov
cmc
clc
xor
idiv
in
roll
add
test
xchg
out
test
ss
fdiv
clc
cmp
test
ret
mov
lret
clc
cld
call
xchg
rclb
jmp
lret
in
xor
addl
xchg
jecxz
in
les
aaa
xlat
jmp
xlat
repz
loope
cmp
repz
jmp
mov
or
loopne
lret
int3
cld
xor
icebp
cld
clc
shl
inc
ljmp
out
xor
xor
cmp
aaa
aad
shl
in
fimuls
loope
stc
xchg
test
incl
ret
int
xor
repz
aad
rol
cld
addl
testl
in
in
xor
fstpt
ljmp
out
xlat
orb
incb
shrb
cmp
sti
xor
hlt
sarl
or
fcomp
ret
loop
call
cld
in
out
lret
xchg
int3
lret
xor
out
clc
sarb
lock
aad
faddp
fimull
call
mov
loop
out
fst
cmp
out
cmc
rcr
out
sti
add
call
int
in
jmp
iret
lea
cmp
clc
xor
ret
xchg
repz
or
fmul
jmp
add
imul
mov
xor
sub
jmp
ret
fmul
ret
int
dec
filds
pop
lcall
jle
out
int
shl
int3
rcl
lds
loopne
cmp
sbb
loope
mov
orb
cmp
xlat
out
rolb
in
xlat
xchg
loopne
out
loop
mov
xor
rcl
cmp
cld
repnz
cli
xchg
cli
shl
cld
call
stc
xlat
in
cmp
sti
rcr
cmp
std
repz
fiadds
cli
in
icebp
mov
shl
call
fistpll
std
mov
jmp
nop
loopne
int
into
out
out
aam
repz
shrl
xor
fdivrs
cmc
aas
jecxz
fyl2x
fdiv
test
lret
in
in
shl
in
cmp
repnz
push
iret
into
cmp
cmp
test
xchg
lock
lret
leave
shl
out
in
fscale
repnz
cmp
iret
add
lret
aad
fldl2t
mov
lret
out
fdiv
iret
ror
sar
cmpb
in
incb
lret
lea
hlt
leave
fcmovnu
into
fprem
rol
test
rcl
ljmp
xor
call
xor
xor
out
ret
shl
aam
test
enter
in
enter
clc
mul
aas
loope
clc
incl
rcl
in
mov
jecxz
sub
aas
ret
into
aaa
cli
int
icebp
fucom
out
in
out
cmc
xlat
repz
aam
xchg
enter
cmp
cmp
fsub
rcl
cmc
and
in
fsubr
out
leave
loop
adc
fdivr
sti
fildl
cmp
mov
fmull
sub
mov
sub
xlat
call
jmp
lock
lock
dec
incb
xor
icebp
cli
clc
fdivrl
shr
fsubr
stc
ljmp
in
call
clc
xor
repnz
iret
in
aam
stc
loope
ret
jecxz
jmp
lret
mov
jmp
jmp
repnz
repz
sar
and
les
jb
add
cli
jbe
mov
mov
jmp
rcl
into
test
mov
test
jg
fiaddl
jle
ficoms
aam
xor
out
movl
cmc
out
shr
jmp
ficoms
ror
int3
fucomi
fcmovnu
cmp
repz
xor
iret
les
leave
out
out
into
jecxz
lock
hlt
out
fcomp
cmc
cmp
fdivrs
fdivl
cmpb
repz
fcmovb
imul
fdivr
stc
jmp
in
out
jecxz
xor
cli
repz
cmp
test
shl
rcr
in
jmp
xchg
ljmp
jmp
out
sarb
lret
rcl
in
hlt
stc
and
f2xm1
leave
into
les
out
out
out
xor
cmp
loop
jecxz
call
cli
fsubr
out
call
out
leave
into
sti
repz
int
out
add
out
fucomip
loopne
mov
out
repnz
sub
xor
les
xor
shl
stc
idivl
aad
shl
out
call
sti
cld
ljmp
xchg
in
aam
clc
xor
in
cmp
fistpll
cld
div
ret
idiv
xchg
adc
lea
fcmove
sar
lret
ds
jecxz
fldl
jmp
mov
ficoms
lret
mul
into
xor
call
ret
in
jmp
xchg
test
cli
test
loop
iret
xchg
fadd
jecxz
leave
xor
stc
mul
loop
sbb
test
ljmp
jmp
mov
enter
sti
aas
aad
int
aad
aas
mov
out
std
sti
fmulp
loopne
int3
xor
aaa
lock
xor
loopne
xlat
lret
aas
call
flds
jecxz
xchg
rolb
jmp
fidivrl
ljmp
fdivr
test
mov
mov
stc
out
mov
repz
iret
jecxz
call
lock
iret
icebp
fldz
repnz
test
out
cld
out
mov
fdivr
loopne
shl
ss
loop
fadds
test
add
std
in
ret
jmp
fdivs
rcl
out
idivl
fcomp
leave
out
test
jecxz
in
mov
lret
out
mov
int
out
hlt
lret
aaa
int3
cmp
cmp
loopne
faddp
loop
rolb
rorl
scas
xlat
mov
xor
jmp
rcl
leave
int
aad
or
out
pop
sarb
popf
rcrb
jle
mov
loopne
enter
sti
int3
filds
in
xlat
aam
aaa
loope
hlt
xlat
fcmovb
ret
lds
xchg
mov
xchg
jecxz
cmc
jmp
hlt
fdivs
cli
int3
aad
aaa
lret
test
aam
shl
ds
addl
out
int3
test
imul
leave
fyl2x
in
out
ffree
out
cli
stc
jmp
fscale
rorb
loop
cmp
xor
xor
sti
cmp
ret
jecxz
fsubr
int3
std
loope
fimuls
in
cmp
ret
jmp
leave
hlt
cmp
rcr
aas
cld
fucomp
fimuls
jmp
mov
stc
out
aam
cmp
sti
stc
shr
idiv
out
aad
fcmovnbe
out
xchg
int3
repnz
ret
xor
shl
cmp
std
inc
ret
int3
call
out
fildll
cs
ds
in
xlat
xchg
aad
lret
iret
test
mov
out
mov
xor
cmc
int3
fstp
xor
fidivrs
xor
clc
shl
clc
jmp
mov
in
xchg
leave
loopne
hlt
mov
fcomip
lret
iret
cmp
fadd
aam
in
cli
filds
int3
xchg
mov
out
in
lock
lret
iret
xlat
lock
lock
ljmp
std
lret
mov
xchg
xor
iret
xor
repz
call
shl
fldl
leave
mov
mov
test
ss
stc
fmul
xlat
lret
out
icebp
repz
hlt
stc
out
fstp
repnz
cmc
in
aas
shl
ret
in
fidivs
clc
lret
clc
in
mul
orl
jmp
fmul
rcl
cmp
lock
cmp
mul
loopne
xchg
test
xchg
loope
std
lock
adcb
call
ljmp
ds
xchg
int3
jmp
int
jecxz
leave
jmp
cmp
hlt
out
in
lock
loop
loopne
repnz
aam
xlat
ror
hlt
repz
rcl
repz
mov
call
sti
std
rolb
loop
vaddsubpd
aas
testl
clc
lea
mov
mov
jmp
rcl
iret
aad
cmp
loop
jmp
jle
add
rol
hlt
fxch
fmuls
xchg
jmp
rol
icebp
in
std
aaa
sbb
int3
or
mov
in
or
repz
mov
jmp
out
in
fptan
into
icebp
adc
loopne
mov
loop
out
mov
or
xchg
loope
les
repnz
cmp
rol
add
clc
fcmovne
cld
loope
fists
das
ret
fsub
ss
mul
in
shl
faddl
mov
les
jecxz
ret
cmp
ss
ds
int
xlat
add
ljmp
loopne
ljmp
in
fcmove
cli
enter
xor
cmp
test
loop
jmp
mov
fmuls
xchg
ljmp
shl
fsubr
fsubp
loope
fildl
std
int3
fsubrp
aas
cmc
out
ljmp
cli
and
lock
shl
cld
mov
inc
nop
in
nop
in
aaa
lret
xor
xlat
sarl
aas
leave
repz
in
rol
fsin
xchg
ljmp
int
roll
xor
repz
idiv
rcr
shl
out
aad
ror
xchg
out
xor
jmp
mov
leave
out
shr
out
repnz
ret
xchg
lock
loope
xchg
xchg
hlt
mul
repnz
icebp
xor
sarl
into
jecxz
stc
test
cli
cmc
call
out
jecxz
lret
std
icebp
mov
int3
fdivr
xlat
icebp
lock
sti
hlt
lock
cmc
loope
mov
test
cld
adc
in
mul
clc
out
int
xlat
sarl
cli
testb
xchg
xchg
nop
xchg
sub
call
out
shl
cmp
fprem
stc
xchg
and
fdivp
cmc
icebp
ss
shlb
repz
lret
cmp
fcmovnbe
mov
cli
lret
fmulp
in
les
out
cmp
out
cmp
loopne
cmpb
lret
cld
leave
jmp
int
repz
in
aaa
das
fdivr
std
ds
ret
mul
aam
testb
out
cld
std
mov
xchg
mov
cmc
xor
cmp
aam
xorl
jmp
iret
ret
rcr
fxch
in
incl
jecxz
or
jle
loopne
in
loope
in
xchg
in
out
mov
xchg
in
xchg
hlt
shll
xor
int
div
cmc
leave
cmp
idiv
fildl
loopne
int3
iret
mov
out
aad
xor
in
jmp
fdivrl
clc
hlt
test
in
xchg
lock
int3
out
out
int3
xor
in
int
lret
aaa
xor
rol
iret
sar
test
div
leave
into
stc
jecxz
sub
xor
out
cmp
cmc
jmp
in
addl
incl
xchg
iret
in
aam
call
sarb
rcl
cmp
hlt
mov
mov
repnz
shl
loop
ljmp
fucomi
fcmovnb
shl
idiv
std
fdivrp
leave
ficoml
clc
clc
sub
cmp
fnstsw
aas
stc
shl
and
in
ljmp
int3
icebp
test
xlat
out
rolb
in
test
mov
cld
cmc
jecxz
loopne
loope
xchg
test
ret
cmp
lret
iret
fstp
aam
adc
fdivrp
out
pop
out
mov
xor
in
cld
aad
fucom
fcmovnb
ds
cmp
loope
jmp
jmp
call
in
les
rcl
loope
icebp
test
faddl
lret
mov
test
shl
xor
xor
in
aad
shl
shl
mul
sarb
fcmovnu
int3
frndint
sbb
lock
out
xchg
xor
cld
xor
not
cmp
stc
fcmovb
fstp
shl
into
repnz
test
int
xor
lret
fcmovne
aam
std
in
fdivr
fcmovb
jecxz
cld
leave
fldl2e
enter
mov
int3
lret
lret
and
in
aas
aad
fiaddl
int
std
rolb
into
fucomi
cmp
out
lret
hlt
rcr
in
std
aam
int3
sti
out
into
mov
int3
mov
in
stc
repnz
cli
stc
cmc
or
lds
in
mov
mov
ret
out
sub
and
xlat
cli
cmp
repnz
xlat
sti
sbb
fsub
lret
addl
repz
lret
out
fistpll
jmp
aam
fstp
fcmovnbe
push
cltd
sahf
mov
out
jg
fiaddl
jle
lock
aam
sarl
test
jecxz
ljmp
iret
sar
xchg
mul
xor
in
in
cli
ror
cmp
out
jecxz
in
call
ficoms
lock
out
idivl
in
repnz
icebp
test
xchg
cmc
jmp
int3
repnz
shr
fld
jmp
cmp
cmp
xor
icebp
fsub
jmp
shl
enter
mov
stc
int
fisttpll
aam
into
lret
lret
cmc
cli
cmc
rcl
enter
std
xchg
shl
xchg
xor
lret
call
lock
cmp
in
xchg
test
in
leave
int3
xchg
test
loopne
in
ret
idiv
cmp
movl
rcr
test
int3
fisttps
test
xchg
lret
leave
out
int
ss
fnstenv
test
sar
mov
loope
shl
loopne
mov
xor
hlt
cmc
lret
sbb
loopne
rcl
neg
cmp
in
fucom
fldl
rcl
icebp
shl
hlt
shr
ds
into
fmul
loop
fcmovne
mov
filds
ljmp
cli
cld
fmul
cmp
fdivp
sar
loopne
ret
in
xlat
loope
repz
xchg
xchg
iret
icebp
in
out
lock
cmp
aaa
ljmp
xlat
rol
fstp
orb
lret
in
int3
out
xor
repnz
out
lock
stc
rcl
aad
xlat
hlt
rcr
hlt
loop
out
test
call
cmc
xor
ss
repz
std
sti
rcl
cmc
shl
stc
sti
cli
in
sub
lret
mov
out
repnz
clc
out
hlt
aam
cmp
iret
addb
jmp
in
adcb
int
out
in
cmc
rcr
xor
aas
lds
out
lret
out
lock
out
shl
in
in
fucomi
iret
shlb
aaa
fsubr
hlt
cmc
cld
out
incl
test
int
lret
call
aaa
in
stc
out
in
lock
flds
push
out
cmc
cli
loop
addb
repz
call
lret
jmp
out
std
mul
jmp
out
stc
jmp
xchg
in
idivl
aam
cli
jmp
leave
rcr
fcomp
cmc
pop
fildl
xchg
sub
inc
mov
jle
ror
ljmp
testl
testb
std
loop
das
cmp
hlt
cmp
enter
rcr
loop
std
cld
loope
call
xchg
rorb
in
fidivrs
in
out
ret
shl
sub
mov
mov
out
jmp
aam
repnz
aad
aad
ret
test
call
sti
int3
out
mov
in
int3
rol
ror
aaa
cmp
sti
clc
incl
in
sti
fsub
fiaddl
fiaddl
in
shr
cmp
icebp
icebp
in
ret
sar
loopne
stc
out
dec
ret
jmp
jmp
enter
aam
roll
cmp
frndint
repz
cmc
out
out
mov
jmp
call
cmp
fdivrp
lret
int
cld
in
icebp
enter
xor
enter
jmp
enter
aaa
adc
mul
test
addl
xlat
in
lret
mov
xchg
ss
int
cmp
fcmovu
loope
repnz
mov
loop
cli
sti
roll
jmp
hlt
fcmovne
fsubr
idivl
cmp
fdivrs
fsub
sbb
std
int3
rcll
fdiv
sub
ss
lock
mov
loop
mov
cs
ror
stc
rcl
jmp
aas
cmp
testb
leave
mov
test
icebp
orb
imul
aad
fstp
cmp
sarb
out
shl
clc
faddl
mov
filds
lret
ss
aam
lret
fsubp
out
and
out
enter
fldl
out
rol
int3
std
ds
xlat
ljmp
cmc
icebp
lret
lret
loopne
xchg
divl
jmp
hlt
in
lret
out
xlat
out
shl
aam
addb
in
aad
in
rol
xor
xor
iret
fucom
faddp
sbb
stc
enter
int3
mov
jecxz
cmc
out
icebp
into
enter
lret
sti
shl
ret
leave
aam
test
rolb
shl
add
jmp
rcl
iret
aam
aad
sarl
cmp
and
cmpsb
jg
fiaddl
jle
aas
repz
lret
clc
lret
cmc
rcr
fstpt
jmp
lret
lret
mov
ficoml
call
hlt
ss
shl
neg
aas
cld
rcr
aam
fldl
stc
mov
into
xchg
shl
shlb
cmp
ret
ror
fadd
xchg
loop
in
fdiv
les
in
aaa
cli
jmp
aas
div
cmp
fucom
jmp
fcomip
mov
aam
iret
loope
cmp
icebp
in
fdivr
cld
fidivrs
sbb
and
clc
lret
mov
into
iret
jmp
xor
cli
leave
out
int3
sti
cmp
stc
loopne
cld
icebp
roll
not
sub
loope
hlt
nop
nop
cmc
jmp
lret
lock
cmp
inc
repz
aad
loopne
hlt
idiv
mov
xchg
lret
lret
mov
ss
div
ljmp
shl
in
cmc
addb
and
lea
cmp
aaa
iret
lret
fabs
ret
shl
xchg
in
xchg
sti
mov
loopne
lret
les
fstp
ss
div
cmc
cmp
cmpb
call
shr
shrb
cmp
std
leave
cli
lret
cmp
ret
cmc
cld
xlat
xchg
xchg
aad
jecxz
loope
les
aaa
xor
cmp
div
xor
int3
std
aas
repnz
std
loop
std
in
jecxz
xchg
int
xchg
xchg
out
stc
out
into
sti
lret
hlt
cmp
into
out
jmp
test
call
fcmovnu
icebp
call
int3
ss
out
divl
cmp
loop,pt
loop
xlat
clc
test
in
mov
test
lock
jmp
cld
ret
ds
cmp
xlat
in
cli
out
into
iret
int
test
cli
not
in
ror
in
ror
out
flds
std
in
lret
enter
adcl
cmp
aad
cmp
rolb
mul
orb
xchg
test
repz
shr
aaa
fsubrp
repz
faddp
std
loope
fcomip
xlat
in
lret
test
repz
out
shr
repnz
out
aam
add
int
aaa
into
add
stc
enter
call
pop
clc
xor
add
jmp
rcl
aad
aad
fstp
aam
xor
fistpll
lret
jg
fiaddl
jle
or
in
in
enter
xor
loopne
stc
aad
in
clc
fcomip
in
adcl
repz
hlt
shl
aad
repnz
fsub
loope
out
lret
fimuls
cmc
rcr
shl
sar
ds
stc
fdiv
iret
addb
fcmovu
loope
test
jmp
xchg
jmp
loopne
rcr
cs
sub
sar
fnstsw
repz
jecxz
cmc
fsqrt
ret
in
std
in
out
iret
fcomi
icebp
out
sbb
rcr
out
jmp
out
leave
cld
repz
jecxz
in
cmp
clc
aam
iret
cmpb
cmpl
cmc
stc
leave
fisttpl
test
xor
iret
call
fistpll
aam
in
fsin
mov
sti
test
mov
jmp
xor
aam
enter
fldz
sti
cld
ret
cld
sbb
iret
out
rclb
idiv
cmp
iret
fcmovnb
iret
cmp
int3
aas
cmp
hlt
aad
test
sbb
call
shr
cmc
cmp
rolb
cld
icebp
out
stc
in
iret
xchg
mov
iret
aaa
out
cmp
leave
fmulp
fucom
cmp
xor
not
test
xchg
jmp
fimull
out
lret
icebp
xlat
aam
std
test
xlat
rorl
call
xchg
loopne
loop
fxch
int3
in
aam
jecxz
adc
ret
jecxz
enter
loop
out
xchg
in
icebp
sub
hlt
std
in
loope
aam
aas
test
xchg
loop
in
jmp
lret
ss
std
shr
jecxz
sti
loopne
fsub
jecxz
in
std
loope
xlat
jmp
xor
sar
ror
fcomip
aam
fsubp
aam
lret
sbb
fsubp
out
mov
repz
in
xor
out
repnz
fildl
enter
loopne
lock
ficoms
aas
rol
xor
fidivrl
aam
not
fsub
icebp
orl
in
loope
jmp
aaa
sti
cli
cmp
clc
sti
ds
loope
cmp
ret
cmp
aam
fmuls
scas
shr
je
add
rol
lret
ror
int
aam
mov
test
jle
add
cmp
jmp
hlt
in
mov
lret
call
cmp
cli
loop
fsubrp
cld
test
sbb
mov
cs
in
ss
xor
cld
sarb
fstp
and
incb
lret
std
repnz
fdivr
hlt
xor
jmp
std
jecxz
div
xchg
in
int3
in
in
xor
out
ljmp
repnz
iret
aas
cmp
loopne
aad
orl
hlt
repnz
ljmp
neg
fnstsw
test
jecxz
into
out
fxch
lret
call
lock
clc
cmp
fadds
fldl2t
add
mov
jmp
into
jmp
loope
sub
fcomi
int
lock
shr
testl
jmp
cmp
leave
out
fcomp
fstp
out
icebp
test
out
std
lea
aad
jecxz
leave
out
call
xlat
shr
in
ret
shr
icebp
cli
aam
mov
lock
mov
fmul
xor
jmp
xlat
loopne
int
fldl
frndint
loope
or
jmp
lock
cmp
xor
testb
rol
out
ljmp
decb
fldcw
sub
aam
out
mov
mov
in
xor
leave
fdiv
into
aaa
lret
div
ffree
xchg
xchg
cmp
fmuls
fucomp
xchg
lret
repnz
aaa
in
in
lret
ds
sti
cmp
rcr
mov
loopne
incb
hlt
xor
jmp
lock
sarl
repnz
adc
leave
in
test
les
fadd
aad
xor
cmp
cmc
iret
lret
out
hlt
cmpl
clc
ret
aam
call
cmp
sar
aam
cmc
aad
aad
int
in
clc
stc
in
loop
sti
fldl
out
loopne
rorb
lret
mul
fdivr
cmp
cmp
rol
rcr
out
test
in
lea
lret
lret
xor
clc
test
cmp
jbe
jmp
int
lret
lret
int
mov
es
lods
jg
fiaddl
jle
mov
in
leave
test
test
mov
test
xlat
out
xor
aaa
xor
clc
stc
shl
fildl
fcmovne
enter
repnz
out
rcl
hlt
fnstenv
hlt
cld
rol
ss
fucomip
lret
stc
jmp
enter
lock
in
cli
int3
int
ljmp
aam
fcom
hlt
fcmovbe
aam
iret
sti
flds
ss
aad
cld
ljmp
idiv
cmp
neg
shl
leave
orl
xor
lret
out
fdivp
rol
or
cld
fsub
sarl
in
addb
not
out
out
ror
fistpll
ss
ror
aam
std
shl
ljmp
loope
into
nop
not
lock
leave
das
ljmp
cmp
sbb
in
jmp
in
lock
aad
neg
ljmp
ret
ret
lret
lock
jecxz
out
out
sub
xlat
cmp
ror
fcmovne
fstp
in
fst
in
aad
shl
aad
ljmp
mov
call
rol
in
cli
std
ds
jecxz
lock
ret
cld
into
out
leave
xor
test
das
mov
rol
in
clc
iret
aam
aad
std
lret
jmp
int3
mov
mov
icebp
sub
hlt
cmp
cmp
xlat
loope
int3
cli
repnz
xchg
test
iret
out
xchg
fucomp
div
sarl
int
int3
in
repnz
icebp
loop
icebp
rcl
test
fcmove
testb
ror
ljmp
clc
sar
cmc
div
dec
fucomip
shl
fstp
xlat
xchg
xor
int3
in
iret
xor
xor
aas
ds
iret
in
fsubrp
fisttpll
in
mov
test
int
xlat
in
int3
out
xor
int3
lock
xlat
cmp
repnz
idiv
ret
jecxz
out
repnz
aad
in
fcmovnbe
test
sti
int
cmp
fsub
fnstcw
std
test
fsubrp
clc
and
and
decl
cmp
cmp
lock
ret
in
fsub
enter
lret
fmulp
in
ss
lret
aad
fcmove
shr
xchg
je
add
ror
ror
aad
inc
push
xchg
mov
jle
sarb
enter
cli
enter
out
icebp
loope
aad
jecxz
cmp
divb
out
fldl
cld
hlt
loop
aam
int3
in
test
in
lock
in
sub
cli
out
sarl
out
repnz
sar
mov
in
loopne
fcomip
ror
rcr
ss
dec
cmp
fcomp
adc
repz
call
ljmp
shll
cld
fdivrp
cmp
shl
mov
loop
fidivrs
int3
xchg
mov
in
out
xor
xor
sarl
in
fdivrp
aad
ror
loop
std
incl
out
out
rorl
loop
ror
aad
lret
iret
fadd
cmp
test
jecxz
call
loopne
nop
icebp
lret
out
not
xor
ds
xorb
rol
mov
mov
std
test
cs
out
in
cmp
sti
hlt
out
sar
lds
shr
mov
in
mov
loope
test
call
out
enter
cmp
shl
and
clc
into
out
cli
loop
repnz
in
loop
divb
jmp
lret
loop
rcr
out
in
sbb
sti
cli
cmc
lock
fmul
sar
jmp
sti
xlat
cmc
repnz
rcr
aas
ret
test
lea
test
hlt
xor
xor
xor
imul
cmp
rol
rcl
fdivrs
fiadds
fucomip
rclb
out
fdivs
cmp
cld
out
in
cmp
fnstsw
rcl
lds
int
int
mov
mov
call
rol
fcmovu
xor
fnsave
aam
int
div
aad
cmp
xchg
decl
icebp
in
fnstenv
cmp
lock
ljmp
std
movl
cld
hlt
push
aad
lret
lret
dec
sti
cld
loop
ds
into
repnz
enter
jecxz
icebp
fildl
imul
cmc
ret
ljmp
cmp
shl
movb
out
xacquire
xor
int3
in
xor
fcomp
in
rolb
aad
cmp
leave
cli
or
jecxz
xchg
fldcw
fstpt
ss
fnstenv
clc
sar
pop
leave
ret
push
mov
sub
addl
push
andl
push
addl
push
push
addl
push
call
mov
andl
test
movl
je
andl
lea
push
andl
push
xorl
call
addl
push
addl
call
mov
test
je
movl
mov
jmp
mov
movl
jmp
push
push
push
movl
call
movl
mov
mov
movl
cmp
movl
jne
pushl
push
adcl
push
push
orl
call
inc
movl
cmp
jb
movl
inc
movl
cmp
jb
sbbl
push
call
orl
movl
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
sub
sub
movl
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
lea
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
lea
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
inc
mov
xor
xor
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jb
add
mov
movl
mov
cmp
movl
mov
mov
movl
je
mov
xorl
xor
subl
add
imul
movl
mov
movl
jmp
mov
adc
xor
and
add
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
push
call
cmpl
jb
mov
add
xor
add
add
movzbl
and
mov
orl
mov
xor
mov
adcl
xor
xorl
add
cmp
jne
subl
push
orl
pushl
andl
pushl
call
xorl
mov
notl
mov
mov
negl
mov
mov
or
mov
mov
sub
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
orl
xor
add
jmp
sbb
mov
xor
sbb
lea
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movzwl
xor
lea
mov
mov
neg
mov
add
movl
adc
mov
sbb
movl
or
mov
dec
mov
xor
orl
add
movl
cmp
movl
je
xor
mov
xor
add
sub
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sub
mov
sub
add
movl
mov
cmp
ja
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
fmul
ret
ror
fst
repz
adc
popa
jbe
mov
jle
add
in
roll
leave
aam
lea
mov
xchg
ror
into
loop
fmul
xlat
icebp
out
cmp
loop
fst
jecxz
leave
rcr
ljmp
in
xchg
mul
into
das
lret
cmp
cmp
call
shl
fcmovnbe
in
idiv
xlat
incb
in
cmc
icebp
enter
div
clc
cli
fcmovu
repnz
xlat
repnz
mov
not
jecxz
out
test
hlt
sar
mov
sub
lret
aaa
sti
fdivr
cmp
fnstsw
shl
xor
out
fldpi
in
call
iret
rol
rcl
fdiv
iret
xlat
sti
cmp
in
ret
fucomip
loop
flds
mov
lret
xchg
in
ret
ret
cld
aad
in
div
lret
clc
test
mov
fmull
loop
in
shrl
idivb
fmul
sarl
int3
neg
addl
xchg
std
fucomi
lock
int
out
int
leave
xor
cmp
stc
shl
icebp
loopne
les
xchg
leave
out
aad
int
xor
jmp
jmp
call
faddp
clc
std
mov
fsub
stc
leave
fucomip
repnz
sub
jmp
jmp
cld
repz
cmp
idiv
enter
in
addl
aaa
in
jmp
fcomi
cmp
fcomip
call
neg
fsubr
rolb
rcl
int
stc
cmp
ljmp
stc
rcr
sti
lret
mov
in
addb
cli
fmul
loopne
loope
aas
cli
les
std
jmp
xlat
leave
clc
call
call
jmp
cmc
cmp
xchg
cld
rolb
loope
ficoml
xchg
icebp
sub
jmp
clc
into
leave
hlt
fcmovbe
cmp
fyl2xp1
shl
orb
xchg
enter
cmp
ror
int
cmp
cli
aam
test
jmp
popl
cmc
shr
aaa
iret
repz
cmc
hlt
shl
sub
enter
xlat
mov
in
in
in
ljmp
aad
aad
sti
cmp
fiadds
loope
cmc
or
add
out
in
shr
mov
lock
call
cmp
ret
aad
loop
call
mov
into
out
in
in
jecxz
xor
out
out
repz
cmp
loope
neg
aas
adc
xchg
loope
in
xchg
repnz
out
out
ljmp
aaa
fdiv
sti
adc
hlt
stc
cmpb
in
fucomp
fucomp
mov
hlt
jmp
out
lret
jmp
imul
jmp
sub
xlat
call
std
ret
fmull
shl
int3
jecxz
lret
enter
mov
movl
mov
push
jmp
rcl
leave
leave
fst
fsubrl
std
sub
iret
lahf
and
pop
add
fcomi
idiv
in
cmp
hlt
filds
out
fldl
jmp
jecxz
rol
aad
rcl
loop
cld
cli
lock
vpcomb
ljmp
cmp
jecxz
out
aas
xchg
into
loopne
int3
xchg
iret
out
loop
rol
repz
lret
loope
fadds
fdivp
test
lds
not
out
sti
call
xchg
lock
decl
mov
in
fxch
lret
xor
ror
into
ret
fmul
loop
aad
ljmp
in
rorl
repnz
xor
in
fdivs
jmp
ret
icebp
test
fmuls
xchg
shl
in
cmp
rol
lret
sti
cmp
xlat
sub
cmc
ret
repz
lret
int
rol
sub
fucomi
ds
shr
repnz
ds
fmul
mov
test
xlat
fucomi
loop
repz
into
rol
xor
out
out
xlat
loopne
lock
in
decl
fmulp
xchg
cli
lock
fmul
fstp
cmpb
call
in
mov
mov
out
mov
out
repz
aas
shr
xor
call
std
rolb
movl
jmp
divl
hlt
lret
lret
lret
rcr
fincstp
in
filds
xchg
cld
xchg
fcoml
xor
sarl
aaa
cmp
ret
sti
xlat
loope
fstl
decb
int3
fcomp
ror
xor
fdivp
shr
dec
hlt
out
icebp
xchg
shrl
enter
out
ljmp
fidivrs
roll
ret
mov
fiadds
lret
int
lock
std
jmp
test
fcmovb
out
mov
mov
xor
cmp
fst
int
repnz
icebp
call
in
mov
fcmovb
xchg
in
out
xchg
repnz
sub
cmp
out
call
inc
fdivr
in
jmp
testb
leave
into
ljmp
aad
icebp
aas
out
fcmovu
call
out
nop
in
in
in
not
lock
icebp
sti
out
cmp
aas
shl
in
rorl
lret
in
call
out
ret
in
shlb
cli
in
aad
sti
call
fmuls
orb
repz
repz
fyl2xp1
fcmovbe
out
std
xchg
mov
repnz
test
sub
fld
icebp
mov
jmp
int3
iret
xlat
ffree
fst
loope
sub
or
bound
jle
jmp
lret
cmc
test
flds
idiv
in
jmp
loop
jmp
fyl2xp1
hlt
sti
int
adc
test
incb
loopne
fcmove
iret
in
repz
clc
loope
aam
stc
repz
jmp
orb
ror
jecxz
fstpt
lret
lret
ret
cli
out
std
aad
cmp
call
and
in
lret
rcr
not
shlb
aad
fucomp
xlat
add
push
dec
clc
addb
loope
xor
jmp
ror
cmp
int3
ret
stc
rcl
jmp
fcmovnu
fsub
fldl
lock
cmp
cmp
hlt
cmp
aad
jecxz
icebp
fst
mov
sub
jmp
loopne
out
shl
out
mul
rcr
aam
jmp
sti
call
clc
out
test
clc
fildl
cmc
icebp
ret
in
shr
test
test
fiaddl
out
call
iret
loop
fcmovb
mov
mov
aaa
call
xor
in
sar
jecxz
call
sub
fildl
shl
iret
int
repnz
out
cmp
in
lock
fsub
aad
xlat
filds
jmp
loop
ss
cmp
ror
std
stc
aad
cld
testb
ljmp
loope
lret
in
out
out
repz
divb
out
lock
cmp
fiaddl
test
call
lret
fcmovbe
cmp
addb
ljmp
xor
mul
ljmp
cmpl
stc
cmc
adc
int
fadds
out
aas
cmp
out
cmp
lock
std
std
rol
addl
sti
into
int
fisttps
shl
sar
fcom
ljmp
ret
leave
leave
jmp
in
loope
xchg
out
in
lret
cmp
mov
add
out
stc
mov
lret
in
cmc
out
jmp
clc
hlt
rcl
in
repz
xlat
loop
out
enter
ljmp
shlb
xorl
test
in
aam
int
loop
orb
xor
ljmp
repnz
int3
in
ret
cld
fxch
call
cli
out
orb
xor
leave
ds
icebp
cmp
cli
out
out
sar
out
std
loop
fstp
xchg
or
ret
fucomi
xor
int3
clc
icebp
out
loop
loopne
mov
in
dec
mov
lret
repz
push
not
jmp
ret
ror
aad
and
sbb
cmpl
aaa
out
leave
lock
lock
in
xlat
in
xlat
enter
mov
std
loope
out
leave
jecxz
int3
lret
hlt
cmp
incl
shl
test
icebp
mov
les
aam
ss
in
ds
loop
repz
in
out
mov
lock
aam
jecxz
jmp
std
inc
loopne
into
repz
into
out
test
repz
ret
cmp
fcmovne
enter
sti
in
adc
fstp
lret
enter
adcb
ljmp
in
hlt
fmul
repnz
jecxz
rcr
fldl
jmp
leave
xchg
mov
jmp
xor
aad
icebp
rcr
xor
test
std
clc
clc
shr
leave
out
lock
lret
xchg
in
out
shl
mov
xor
cmp
xchg
fdivp
leave
nop
sti
lea
into
icebp
cmp
into
cmp
shr
iret
xor
jecxz
sar
loope
std
mov
xchg
in
xchg
xchg
hlt
ret
fcmovbe
rcr
int3
std
fldl2e
fcmovnb
out
rcr
mov
lock
in
xchg
adcb
out
enter
lock
hlt
div
iret
hlt
sar
fcmovu
fdivr
in
add
iret
rcr
fsincos
int
rcl
enter
test
out
testb
into
pop
xchg
shr
repnz
cmc
rcl
aaa
cmp
in
in
cmpb
aad
mov
in
or
shl
rcl
clc
fnstenv
ljmp
in
fadds
cli
fmul
loop
jmp
neg
lock
in
rcl
ds
aam
repnz
clc
movb
in
in
rol
leave
call
call
lock
sar
xor
cmc
out
in
fucompp
lret
ffreep
das
lock
sti
fbstp
out
inc
icebp
iret
fcomp
hlt
in
out
fcomi
fisttpl
aad
fnstenv
in
xlat
fdivrs
jecxz
sti
loope
int3
sti
jecxz
adcb
into
out
sti
call
stc
int3
in
iret
shl
xlat
call
rorl
in
shl
out
in
fcomip
lret
in
iret
test
fcmovbe
cmp
fmul
lret
jmp
int3
test
in
in
cmp
out
icebp
out
aam
loop
call
roll
mov
cld
in
jmp
vphadduwd
out
shll
ss
leave
cld
aam
repz
hlt
inc
xchg
xchg
xchg
test
rcr
jmp
rcl
out
repz
aam
repnz
xchg
fmul
ror
xchg
out
loope
dec
or
movl
mov
jmp
leave
int3
rcl
aad
int
mov
xchg
xor
jo
mov
jle
not
sub
into
iret
aad
cmp
sarb
stc
cli
test
cmp
div
out
enter
and
jecxz
in
jmp
sub
aam
in
lret
xlat
test
test
into
int3
jecxz
mov
xchg
hlt
and
sub
sub
clc
fnstsw
cli
aam
fdivrp
jecxz
mov
jmp
nop
cld
iret
repnz
cmp
jecxz
loopne
clc
clc
cld
mov
out
repnz
fidivl
loop
clc
xlat
fsub
cld
fucomip
in
stc
loopne
out
aam
xchg
jecxz
shrb
sti
std
out
loopne
adc
test
repnz
repnz
int3
int
loopne
fisttpll
ret
stc
out
fst
cmp
clc
fadds
enter
std
mov
out
jmp
aaa
ds
cmp
test
cmp
fsubr
leave
into
enter
in
in
fdiv
ss
cmp
in
faddp
sti
sub
out
test
loopne
loope
xor
stc
sub
fcmovbe
aam
int
aam
jmp
fmul
xlat
lock
call
icebp
ljmp
faddl
lds
clc
test
fdivp
cld
test
loop
loop
aad
xlat
cmp
iret
enter
loopne
sbb
sar
cli
fsub
loopne
fstl
test
out
ror
aam
iret
aas
fcmovbe
rol
aas
fcmovnb
stc
in
in
out
test
mov
not
int
ljmp
shl
xor
fscale
int
mov
ljmp
xor
stc
in
test
orl
mov
xor
ror
cld
std
enter
clc
cmp
cli
cmp
mov
mov
orl
in
in
in
repz
das
cmc
in
fsubrp
repz
fildl
in
mul
xlat
fmul
xchg
in
xchg
test
xlat
call
rcr
xchg
faddp
lret
sti
incl
cmc
enter
aam
out
xor
fucom
int3
iret
addl
jmp
call
lret
fdivrs
shl
lret
fbstp
xlat
lock
fcomi
jmp
repnz
mov
or
int3
jecxz
stc
aaa
rcl
jecxz
repnz
add
addl
das
leave
clc
out
out
cmp
fidivrs
cmp
shl
rolb
jecxz
jmp
sbb
enter
cmp
ror
cli
cmp
enter
enter
xchg
add
scas
push
add
jmp
aas
aam
aas
aad
iret
aam
adc
mov
pop
xorb
add
repz
in
xor
cmp
lret
xor
in
icebp
sti
sub
loope
loope
fcomip
xlat
frstpm(287
lret
fucom
int3
sub
in
xor
repz
out
repnz
int
iret
and
fadd
sti
ret
lret
loop
lret
mov
xlat
imul
cli
clc
out
sarb
cmc
fdivr
out
into
std
faddp
icebp
ljmp
loop
lret
mov
aam
fptan
cmc
rcr
cmp
stc
cld
fildl
loop
iret
ljmp
xor
sar
in
enter
fstp
addl
shl
decb
rorb
int
fdivrl
aaa
out
jmp
aam
clc
out
in
test
rcl
hlt
fsubrp
fcmovnb
lock
adc
cmc
shlb
ljmp
cli
int
fdivp
icebp
cmp
ljmp
mov
incb
cmc
lock
cmp
fucom
mov
in
mov
mov
in
fdivr
xlat
cmp
leave
out
ret
stc
out
cmc
cli
fmul
test
sti
fcoml
xor
in
sarl
sbb
icebp
cli
aam
jmp
int3
les
int3
ror
hlt
ror
cmp
sti
out
ror
cmp
repz
lret
test
int
xor
sti
idiv
out
aam
ffreep
ds
ret
enter
leave
int
cmp
mul
jmp
fcmovbe
repz
repz
fucomp
cmc
out
fsubp
mov
call
cmp
bnd
cli
loop
in
leave
jmp
jmp
fimuls
lock
fnstcw
out
aad
fadds
roll
enter
ljmp
repnz
cmp
hlt
in
cmp
out
ljmp
jmp
loop
cmp
cmp
ljmp
lock
jmp
mov
fmulp
int
in
xor
out
cmc
repnz
call
fxtract
enter
test
xchg
call
hlt
aam
hlt
ss
in
cmp
addl
and
out
in
fldl
out
cs
cmp
sarb
in
shl
stc
loope
fimull
in
jecxz
fsubr
mov
iret
hlt
rcr
sar
xlat
cmp
cli
fsubr
lds
in
xchg
fcmovnbe
std
int3
aas
icebp
ljmp
aam
adc
sbb
cld
repnz
int3
in
mov
lret
shl
out
fldt
enter
fcom
test
fiaddl
mov
mov
inc
cld
mov
incl
xor
add
movl
cmp
movl
je
jmp
lret
rcr
fstp
fisttpll
inc
mov
sbb
jle
add
lret
shl
mov
lock
in
ffree
jmp
clc
out
xor
xlat
out
enter
jmp
xchg
not
xor
sti
hlt
aas
sti
jmp
sar
ret
jmp
loope
int
in
into
lock
cmp
out
cmc
jmp
cmc
cmp
out
std
add
fsub
lock
repnz
iret
and
into
iret
stc
in
leave
enter
cli
sti
ret
ds
fsubr
out
in
call
loope
in
repz
call
ss
fcmovne
imul
repnz
dec
cli
int
into
xchg
mov
std
ljmp
out
aam
sti
cld
icebp
frndint
xlat
in
ljmp
in
roll
cmc
ret
rcl
lock
iret
ds
aad
shl
mov
jecxz
mov
repnz
out
in
ror
cmp
aas
cmc
roll
mov
lret
int3
jecxz
rcl
repz
into
fstp
neg
loope
fidivrs
mov
in
out
lret
test
shr
in
out
shl
xor
out
testl
enter
jecxz
fcmovnu
cld
shl
jecxz
icebp
call
lret
and
rcl
cmp
aam
xchg
loopne
ret
lret
fndisi(8087
test
xor
stc
enter
sarb
test
fsub
jmp
clc
fstl
rcl
ret
hlt
fdivrs
cmp
in
jecxz
ljmp
into
jmp
xchg
ret
jmp
neg
cmp
enter
in
cld
xchg
mov
cli
cmp
lret
int3
repnz
test
xor
clc
fsubr
cmp
into
xor
fiadds
lret
cld
test
xchg
out
repz
jmp
into
cmp
out
or
jecxz
xchg
int
fnsetpm(287
lret
xor
xchg
test
in
int3
icebp
xor
cmp
fdiv
sti
loopne
cmc
xor
jmp
out
mov
hlt
into
xor
ret
cmp
int
sar
loop
hlt
fiadds
test
stc
out
call
jmp
in
aam
imul
jmp
cld
shl
out
roll
out
enter
mov
xorb
leave
aas
loope
cmp
repnz
add
dec
fimuls
xlat
lret
aad
ljmp
sar
aad
ljmp
mov
xor
jecxz
int3
xlat
iret
in
fsubp
lock
jecxz
in
aad
xchg
out
out
sar
xor
xor
int
neg
mov
xor
mov
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
add
add
orl
push
xor
jmp
rcl
aad
aad
fstp
jns
fwait
mov
jne
jg
pop
add
lret
popl
ffreep
aad
in
fcmove
mul
sub
ljmp
in
fucompp
test
ror
iret
fsubrp
lret
lock
out
in
cmp
aam
ret
out
xchg
xchg
in
push
rorl
fcom
cmp
sarb
aas
rolb
out
addb
out
icebp
icebp
call
aaa
aad
jmp
fmulp
repnz
mov
jmp
out
aad
loop
cmc
xor
fcomp
jmp
fdiv
ds
adc
sar
mov
test
lea
in
lret
jmp
cmpb
hlt
std
enter
lds
hlt
adc
fcmovbe
int3
into
cmp
fcmovnu
cmp
cmc
repz
cmc
sar
out
fiadds
loope
in
shl
xor
in
sar
aas
hlt
cmc
enter
out
enter
rcl
out
stc
lock
fcomi
cmp
cmp
in
std
aam
lock
cld
loopne
jmp
fdivr
stc
mov
rcr
shl
loope
cmc
ss
into
enter
cmp
sbb
fsubr
cli
mov
sti
ljmp
call
xor
fmul
loopne
add
repnz
cmc
sti
cld
loopne
loopne
mov
in
cld
fsubr
iret
fdiv
shl
in
out
int
repnz
testb
xchg
fiadds
lret
aad
out
fucomi
cmp
lret
aam
iret
sar
testb
loopne
in
rorl
jecxz
call
cmp
fadds
rolb
cli
into
in
repz
out
loop
in
ljmp
sti
fdivr
xlat
cmp
enter
out
int
jmp
lret
xlat
cmp
cmp
ds
jmp
cmp
out
cmc
add
mov
incb
sub
cld
out
cmp
aas
fmulp
in
std
ffree
mov
mov
fiaddl
lret
fmul
out
fcmove
cld
ds
cmp
lret
hlt
cmp
fiaddl
out
test
aam
ret
out
cmp
rcr
aam
repz
into
rolb
xlat
stc
loopne
xchg
mov
in
sar
lret
repnz
test
lret
int3
jmp
out
mov
aad
shrb
jmp
lret
cli
cli
cli
cmp
sti
ret
incb
enter
lock
aad
lds
enter
fucomi
fneni(8087
in
cmpb
sbb
lret
fisttpl
fmulp
icebp
int3
loope
xlat
fidivrl
shl
cmp
out
cld
aam
xlat
icebp
xlat
aad
jne
pushl
mov
jmp
rcl
int3
lret
fst
fstl
cmp
jg
pop
add
lret
fucom
xchg
jmp
jmp
fucomip
fabs
repz
cmp
enter
mov
shl
in
loope
in
loop
enter
sarl
cmp
aas
rcl
cli
jmp
mov
mov
repnz
into
lret
leave
out
out
xor
loope
xlat
flds
fisttpll
int
jecxz
lret
out
xor
aad
idiv
shl
sbb
fiadds
out
xchg
icebp
loopne
enter
in
aaa
repz
loope
iret
ffreep
aam
ret
ljmp
icebp
out
out
dec
in
cld
shr
call
std
lds
lock
imul
xlat
loopne
mov
out
ljmp
fstpt
xor
stc
jecxz
call
decl
jmp
cmp
stc
cmpb
mul
fcomp
clc
enter
into
out
mov
xor
xlat
iret
lret
sti
cmp
leave
out
xchg
in
leave
out
icebp
loop
jecxz
into
xor
icebp
test
ds
ds
sti
xchg
mov
rcr
enter
out
aas
xor
cmc
aad
clc
cld
cmp
jmp
push
test
clc
stc
leave
aad
fucomi
jmp
out
shr
ljmp
icebp
jmp
xor
xor
repnz
enter
decl
loopne
lret
ss
div
iret
cmp
cmp
repnz
out
fadd
aam
sub
loope
test
cmp
xchg
out
lock
call
cmp
jmp
hlt
iret
out
aad
xchg
cld
std
loopne
shl
mul
call
ss
leave
loope
repnz
hlt
xlat
hlt
in
hlt
jecxz
out
enter
call
fxch
lock
iret
hlt
int3
rcl
loop
ret
sti
mov
testl
jmp
xor
leave
call
stc
not
rol
xor
jecxz
in
test
decl
out
jecxz
iret
in
fsubrp
aaa
in
into
sar
out
sti
ret
loope
out
loop
mov
out
mov
mov
clc
iret
in
int3
icebp
out
sar
lret
rcr
shll
loopne
xchg
inc
stc
int3
jmp
int
int3
in
aad
lret
ror
sar
cmc
roll
xchg
xlat
into
lock
fsubr
rcll
out
idiv
aaa
fistpll
cld
in
idivl
mov
call
shl
xchg
jecxz
cs
ret
hlt
enter
loope
loopne
cmp
call
out
cld
out
roll
fcmovnb
repnz
in
hlt
loope
jecxz
test
daa
add
jmp
aad
fnstsw
repz
pop
int
scas
dec
jg
pop
add
ret
fmull
in
fldl
out
rcr
jmp
aaa
cmp
cli
rcr
shl
lock
ljmp
mov
mov
out
vaddsubps
fmulp
out
cmc
lret
shr
cmp
cli
mov
ds
lea
mov
out
xor
enter
jmp
adc
mov
leave
sti
sub
in
in
rcl
iret
jmp
fstp
in
cmp
sar
rol
cli
ljmp
iret
in
icebp
xchg
repz
in
cmp
out
out
lock
enter
leave
jecxz
decl
iret
cs
shlb
fnstcw
repnz
xor
div
fcmovbe
ret
test
enter
mov
into
das
in
fsubr
lret
hlt
leave
into
int3
aas
in
and
xlat
clc
cmp
in
fcomip
in
rol
out
leave
aad
call
repnz
fcom
in
test
mov
int
call
int
int3
or
fst
cmp
jecxz
in
jecxz
call
enter
xor
leave
xor
in
clc
faddl
incl
jmp
ror
out
cmp
out
cmp
aam
test
fstp
rcr
test
ret
out
test
shl
shl
loope
leave
xor
fidivrl
xlat
aaa
sar
loopne
cmp
in
jecxz
repz
and
in
into
out
div
call
enter
ret
icebp
les
lret
out
ljmp
clc
int3
fabs
fst
fcmovu
cmc
repnz
shl
out
or
iret
mov
in
in
out
jmp
clc
shlb
cld
hlt
cmp
iret
aaa
cmp
or
mov
sar
enter
nop
out
xlat
int
shl
int3
ds
lock
test
ret
nop
into
repz
in
loope
shl
cmc
aam
int3
into
ljmp
aam
mov
clc
cmp
test
test
leave
les
loop
in
out
enter
in
in
out
lds
call
call
out
shlb
xor
sarl
out
cmp
out
sbb
lea
ljmp
lock
cmp
cmp
hlt
fcmovnb
cld
les
mov
jecxz
lret
xchg
shll
cmc
fldpi
cmp
xor
cmp
test
rcl
enter
jmp
lret
out
aad
fsub
xor
int
testl
call
push
sti
mov
aam
sub
lret
cld
fcmovbe
enter
sar
cmc
mov
jmp
iret
aam
aas
aad
iret
aam
ljmp
push
pop
mov
jle
add
fiaddl
loopne
addb
mov
call
xor
ljmp
and
in
clc
in
out
and
iret
repnz
out
fcomp
int3
rcl
test
in
out
lret
lock
out
sar
cld
lock
stc
cmpb
xchg
icebp
fimull
lret
int3
call
repz
stc
iret
cmp
cmp
rol
mov
loop
fsubp
fiaddl
mov
xchg
ljmp
fnstsw
iret
icebp
out
loopne
repnz
testb
sti
out
out
shlb
ror
cld
fcmovbe
rcr
shl
iret
loope
cld
loopne
std
mov
jmp
call
sub
icebp
into
iret
fdivrs
jecxz
icebp
int
jecxz
fcmovnu
cmc
add
std
fcmovnbe
mov
in
dec
call
aam
out
sti
hlt
out
xorl
shl
loope
sti
repz
or
push
lret
xchg
xor
lock
in
fcomip
roll
cld
sar
aam
neg
fisttpl
ljmp
fdivr
shr
cmp
shl
cmc
fsubr
enter
mov
mov
repnz
into
das
out
icebp
int
lret
aam
addb
in
mov
rorb
jecxz
loopne
shr
imull
test
loopne
fxam
shr
testb
call
leave
vpsrlw
sti
lret
cmp
lock
xlat
aam
fcomp
xchg
icebp
rolb
int3
aam
lret
lret
in
ss
int
test
icebp
mov
cld
fadd
ljmp
xchg
int3
divb
out
out
in
loopne
in
stc
cmp
cmc
mov
hlt
add
sbb
jmp
rcl
ljmp
out
ljmp
jecxz
cld
cmp
idiv
fcmove
icebp
cld
mov
mov
int
test
cmp
aas
in
add
mov
in
lret
xchg
jmp
into
in
enter
loopne
aas
rcl
bnd
div
addb
hlt
int
iret
ror
fincstp
xlat
fdivrp
out
fdivrl
in
test
into
in
fisttpl
jmp
iret
mov
xor
cld
int
call
stc
cmp
inc
mov
test
out
xchg
icebp
loop
icebp
in
enter
aas
in
cmp
fstp
fimuls
xchg
aam
loope
out
in
ss
rcl
incl
sub
jecxz
mov
leave
out
call
test
cmc
in
hlt
jmp
lock
mov
mov
mov
jmp
mov
jmp
fmul
aas
xlat
aad
fmul
ss
loope
addl
jle
cli
ret
in
mov
cmc
add
int3
stc
mov
mov
iret
cmp
ret
call
fnop
test
clc
ds
jmp
lret
and
in
jecxz
loop
in
call
aas
sbb
sar
cli
ret
xlat
int
xchg
mov
mov
hlt
icebp
loop
lret
fldl2e
out
cmp
in
aas
sbb
jmp
stc
xlat
faddl
xchg
lret
xor
out
iret
loopne
icebp
rol
stc
ds
cmp
out
rorb
jecxz
int
out
out
aad
jmp
in
aad
jmp
ffree
out
xor
faddp
nop
test
out
ljmp
in
repnz
fmul
fsubr
fcmovu
fcomip
cli
mov
fcmovb
mov
in
nop
in
int
subb
lret
enter
fsubr
fadd
ret
loopne
ds
push
ljmp
and
orb
int3
fcom
imul
fiaddl
loopne
ret
loopne
neg
sbb
int3
jecxz
fucomp
mov
jecxz
xlat
in
in
sarb
not
and
mov
shr
ret
loopne
lock
shr
mov
sub
int
cld
hlt
jmp
xor
vpmovmskb
testl
clc
shr
xor
aam
call
cli
cld
fmuls
mov
in
mov
into
das
loop
cli
out
call
cli
cmp
cmp
sar
cmc
sti
hlt
cld
clc
out
mov
mov
rcl
xor
jmp
xor
sarl
ret
cmp
cmc
out
clc
fcmove
mov
lock
aam
aam
cmp
cld
test
icebp
rcr
fimuls
call
mov
stc
fidivl
stc
fst
in
icebp
icebp
lock
sar
std
mov
addb
sub
aad
cmp
iret
in
shr
ret
cmp
xor
xchg
in
xchg
icebp
icebp
neg
aaa
fdivrp
repnz
addb
das
hlt
out
in
stc
aam
stc
into
loopne
int3
sar
shl
add
mov
xchg
loopne
mov
out
int3
int
out
aas
cmp
std
mul
in
cmp
decb
xorl
enter
repnz
repnz
ds
icebp
xchg
lret
loopne
mov
xchg
jecxz
aad
leave
lret
divb
int
cmp
cli
in
out
rcl
cli
hlt
aad
test
int
xchg
lock
xchg
in
test
and
xchg
ret
mov
in
jecxz
xchg
jmp
hlt
jecxz
out
fisttps
add
add
ror
fst
mov
fbld
pop
add
iret
loopne
in
in
cli
fdivr
fxch
aad
ret
ret
call
xchg
xchg
out
divl
stc
div
sarb
hlt
repnz
and
cld
out
fmul
loope
icebp
xchg
lret
icebp
xchg
rol
imul
rcr
cmp
xlat
cmp
cmp
cmp
fsubr
ffreep
mov
ljmp
out
lret
fnsave
cmp
add
sar
test
jecxz
out
loop
enter
rcl
cmc
clc
fcmovnbe
fldl2e
ljmp
into
ret
mov
in
lret
into
ficoms
ror
aad
lret
out
ds
xchg
test
repz
ljmp
jmp
ss
lret
ror
lret
cli
in
out
in
enter
ret
loop
ljmp
lret
out
std
cli
ss
out
call
fsub
out
call
ljmp
cmc
in
roll
out
out
mov
xchg
mov
test
out
out
aam
hlt
lock
iret
clc
test
std
int3
in
cmp
adcl
cmp
leave
xor
test
jmp
out
cld
out
xchg
rol
into
aaa
std
out
aam
cmpl
cmpl
std
jmp
xor
ss
sar
cld
xor
in
repnz
fdivr
test
loop
ret
hlt
xor
imul
out
fcmovnbe
out
test
idivl
loop
into
icebp
std
aam
ljmp
out
lock
icebp
shl
sarl
out
adcb
fcmovbe
aam
clc
shl
sti
shl
loope
cmp
jmp
test
test
iret
cmc
loope
ror
into
fcom
iret
out
aad
loope
leave
loopne
lret
fabs
xchg
xchg
sti
lock
xchg
imull
in
jmp
iret
into
aas
ror
cmp
icebp
jecxz
xchg
in
test
in
lret
lret
repz
std
out
not
cmp
clc
fcmovu
fdivr
aam
lret
xchg
into
mov
jmp
nop
sub
xor
ljmp
aam
icebp
rcr
lret
xchg
cli
and
subb
in
aaa
cmp
into
std
rol
sti
xchg
mov
mov
cli
fsqrt
xor
call
imul
xor
clc
in
cmc
ljmp
xchg
aam
repnz
testb
std
iret
loop
ret
xor
ljmp
fsub
filds
lret
sar
loope
iret
int
loopne
xor
movl
test
or
add
cmc
add
add
aad
aad
int
jge
in
and
jno
mov
pop
add
lds
in
out
aad
cmp
jmp
mov
xchg
call
cmc
icebp
cmp
clc
lret
xlat
lock
rcl
in
fcmovne
fcoml
repz
int3
in
out
out
out
out
lret
cmc
aam
loope
hlt
and
in
nop
ljmp
loop
lret
fdivs
out
enter
fsub
xchg
aad
neg
in
lea
xlat
ljmp
out
in
loop
sti
clc
loope
stc
adc
mov
clc
loop
fcmovnu
mov
enter
stc
shl
out
fcmovnbe
sarb
icebp
clc
out
cmp
cmc
cli
or
mov
fcmove
out
jmp
ljmp
ss
sar
cmp
out
out
popl
fmul
aam
cmp
loop
ret
stc
loop
in
in
sbb
leave
in
in
loop
div
stc
repnz
jmp
cmp
loopne
ret
repnz
in
shl
decl
ret
stc
fdivrp
loope
ret
repz
lds
lret
nop
nop
xchg
imulb
xlat
into
lret
cmp
cmp
out
and
idiv
cmpl
mov
xchg
rcl
int3
in
enter
aam
shr
hlt
cld
mul
aad
mov
add
test
iret
xchg
int3
testb
not
cmp
ffree
into
cmp
stc
cld
loope
in
out
repz
divb
repz
lret
enter
shl
hlt
cmp
mov
hlt
lret
sti
out
xchg
out
shl
leave
jecxz
imul
iret
fnstenv
out
call
stc
iret
sbb
fsub
loopne
nop
decb
shl
sti
cmp
loop
icebp
cld
in
in
aad
call
shl
fucom
shl
out
fsub
call
int3
lret
neg
xlat
test
leave
lock
ffreep
out
ret
lret
ss
fcmovne
rol
xlat
jmp
in
lret
test
in
fisttps
idivb
int
enter
fucomi
ret
roll
ror
mov
into
iret
aad
icebp
in
jmp
ljmp
ror
bnd
sar
in
test
xchg
xor
lock
aaa
cmp
ffree
out
xchg
xchg
xchg
call
shl
jmp
call
repz
fdivrs
out
lret
enter
adc
xchg
and
xor
cmp
fcmovb
sti
cmp
dec
div
aaa
shl
jmp
in
fsubr
addb
xor
inc
cld
xor
jmp
ret
les
je
push
jo
push
ltr
jle
add
int3
int3
cmp
fmulp
in
aam
rcr
loopne
or
in
sti
into
add
xchg
out
loopne
ss
cmp
out
cmp
aaa
rcl
fistpll
sub
fmul
addb
out
call
lock
lret
iret
cmp
adc
mov
mov
cld
fneni(8087
loopne
sar
in
out
in
cmp
cmp
lret
call
fucomi
cld
mov
mov
fdivr
lret
enter
out
f2xm1
cmp
aaa
in
iret
cli
xor
in
aad
enter
ljmp
jecxz
iret
cli
xor
cmp
addl
jmp
xchg
cld
xchg
xchg
xchg
mov
into
ljmp
hlt
cmp
fsubrp
fiadds
mov
cld
cmp
int3
icebp
enter
leave
int3
fcmovu
jmp
rol
int3
rol
fsub
aam
in
fmul
mov
rorl
xlat
cmp
lock
repnz
out
dec
cmp
rcr
leave
shl
mov
fistl
cmc
cmc
aaa
sub
xor
ror
cmp
test
into
xchg
rorl
fldlg2
fimull
out
fcmovbe
lret
call
sti
cmp
cld
lock
test
ds
out
std
cld
loope
ror
out
int
int3
sti
sti
cmp
fldl
cli
rorb
loope
enter
hlt
lock
xchg
ret
in
leave
int3
xlat
lret
cli
loop,pt
jecxz
ret
repnz
in
les
out
not
xlat
shl
idiv
leave
std
int
in
rcr
fidivrl
mov
out
lret
in
loopne
repz
ljmp
jmp
cld
cmp
shl
loopne
flds
fsubr
iret
in
call
hlt
xor
fnsave
xlat
ljmp
cld
cld
incl
out
shl
in
iret
loope
in
jmp
aaa
sti
cld
aad
jmp
cli
adc
jmp
jmp
repnz
jmp
out
cmp
sti
sti
clc
ljmp
fstpt
hlt
stc
addl
leave
cmp
ljmp
xchg
test
int
jmp
decl
das
aad
cmp
xlat
repnz
loop
xor
repnz
fiaddl
in
xchg
loop
repz
rcl
in
hlt
incl
xlat
jecxz
sti
loopne
mov
fdivp
test
xchg
xor
iret
ljmp
xor
xlat
in
cli
test
dec
loopne
in
sub
lret
out
xor
cmp
sarl
cmp
cmp
fcmovb
cmp
jecxz
or
rcr
sar
mov
mov
mov
jmp
rol
rol
rcl
aad
add
jl
push
pop
pop
jg
pop
add
enter
jmp
sar
ds
in
std
ds
repz
mov
loop
fstp
sub
xchg
cmc
int
xor
sti
cmp
hlt
shl
sti
jmp
xlat
fsub
or
out
stc
fcmove
in
fdivr
loope
shl
aad
aam
hlt
xchg
out
jmp
shl
rol
loopne
cmp
fldln2
lock
clc
ret
rcl
sbb
cmc
mov
mov
xor
xlat
in
shll
test
roll
cmp
mov
fimull
vpsllq
cs
clc
stc
iret
ljmp
sti
call
addl
idiv
test
hlt
std
jmp
in
ret
sti
leave
jecxz
mov
fsubrp
adc
loopne
xor
leave
repz
fst
cmp
aad
cmc
jmp
mov
loopne
loope
in
repz
stc
stc
test
std
int3
fmulp
clc
aas
loope
hlt
test
fsubrp
fisttpl
in
xor
repz
clc
lret
clc
in
faddp
testl
enter
subl
cmc
iret
fxch
xlat
fnstcw
sti
cld
sub
lret
loope
fcoml
xor
sub
rcr
fcomi
aaa
cld
jecxz
cmc
sti
cld
fcmovnu
xlat
call
mov
out
int
mov
icebp
leave
shlb
ss
ds
into
jecxz
sar
jecxz
cli
loop
cmp
xlat
fxch
leave
jmp
in
loope
rol
cmp
cmp
repnz
cli
add
loopne
testl
into
xchg
xor
rcl
div
fxch
out
cmp
test
repz
xchg
loope
jecxz
stc
int3
in
out
in
jecxz
cmp
cld
fidivs
xor
repnz
in
mov
xchg
repz
int3
ror
cmp
fucomi
out
rcl
in
into
iret
xlat
xchg
sti
out
loop
enter
xchg
xlat
cs
fsubr
aaa
cmp
imul
lret
loope
cld
shl
sti
ljmp
std
in
test
repz
rcr
aad
sarb
out
cmp
out
cld
in
fucomip
out
mov
in
cmp
fnsave
cmc
std
or
loopne
aam
cld
ds
stc
int
fcmovne
mov
hlt
clc
iret
shr
fcmovu
repz
cld
xor
shr
cmc
jecxz
ret
into
loop
and
loope
fmul
cmp
icebp
aaa
cmp
testb
xchg
into
mov
jmp
cmc
shl
shr
jmp
out
jmp
fnstcw
rcr
out
jecxz
test
loopne
loope
sti
iret
fidivs
movl
inc
add
jne
pushl
call
mov
jmp
leave
ret
int
leave
iret
ror
shlb
call
jle
add
lea
stc
repnz
in
xor
cmc
rcr
aas
sti
out
loope
jecxz
cli
int3
in
icebp
in
xchg
loop
out
iret
lock
ss
loopne
aam
ds
adc
aad
clc
test
test
fldl2t
call
dec
cmc
f2xm1
repz
rcr
fimull
test
hlt
push
aam
xor
fyl2xp1
shr
icebp
div
fucomip
aaa
iret
cmp
xlat
fucomip
ror
dec
int3
int
aam
lock
aam
xorb
jmp
hlt
loop
fistpll
repnz
jecxz
mov
mov
lds
stc
out
shl
out
jmp
cli
cli
ret
jecxz
in
fabs
out
mov
xchg
int3
xor
xor
idivb
fldlg2
icebp
fsubrp
loopne
enter
loope
jecxz
fdivp
nop
loopne
fcomip
loope
lret
lock
out
rcr
in
fdivr
int3
cmp
loopne
fimull
out
icebp
rorl
repnz
ljmp
cmpl
div
mov
test
fsub
fmull
in
fld
lret
cld
rcl
cmp
and
ret
sbb
repnz
stc
fdivp
and
repnz
test
out
fcmovnbe
aam
aas
hlt
std
int
aam
cmp
loope
mov
mov
jmp
test
into
loope
and
fadd
jmp
nop
cli
stc
ljmp
loope
out
leave
out
int
roll
faddl
stc
cmp
orl
vpslld
fldln2
cmc
neg
cmp
stc
cmpl
vpmulhuw
test
fildl
call
not
jmp
fucom
testl
mov
add
int3
in
cmp
lret
aad
fsubr
clc
test
addl
mov
rcl
out
fbstp
ror
out
aad
shr
aam
cmp
out
std
cld
xchg
testb
fiadds
lock
xor
ljmp
loop
cmp
mov
loopne
xchg
addb
cmp
rcl
jmp
loope
jecxz
repz
leave
out
fsubp
loopne
loope
mov
sbb
xor
repz
shr
cmp
cmp
fcos
into
cmc
shl
ljmp
or
call
in
iret
out
jmp
sti
fcomi
sti
div
call
out
loopne
jecxz
out
or
in
hlt
fstp
jmp
loopne
loope
vpsubw
out
in
in
mov
fiadds
mul
std
out
cli
lock
in
test
jmp
in
xor
jmp
xlat
ror
fld
and
test
scas
sbb
xchg
bound
pop
add
test
xchg
fsubr
jecxz
into
lret
lret
in
ss
flds
ret
enter
test
jmp
mov
leave
xlat
ds
ljmp
jecxz
roll
leave
xchg
fldl
in
std
idiv
into
sti
cld
cmp
rol
fucom
jecxz
call
in
rolb
xor
lds
out
repz
cld
lds
clc
test
loope
not
repz
aad
int3
cmp
rcr
sar
in
hlt
xlat
and
in
sub
loop
call
call
xlat
fidivrs
std
repnz
rcl
add
decb
leave
fcomip
xchg
lret
cmc
loope
into
shl
leave
in
into
aad
fcomi
jecxz
stc
aam
ret
test
cmc
loope
out
not
jmp
cmp
addl
out
fisttps
repnz
repnz
ret
ljmp
xor
clc
cld
mov
sub
leave
lret
jecxz
lret
fcomi
shr
in
ljmp
loopne
ds
aam
aam
jmp
out
repz
sub
xor
cmp
fxch
cmc
icebp
out
rol
mov
lock
mov
out
out
ss
int3
out
loop
xchg
les
lret
enter
mov
xor
call
stc
out
and
out
xlat
hlt
out
int3
mov
lret
iret
ror
lret
into
cmc
fcmovbe
xlat
iret
iret
adc
rol
jecxz
fldl
mov
out
mov
jmp
xor
rcr
shl
stc
mov
in
in
std
add
int3
xchg
in
xor
das
cmp
cli
cmp
fsubr
fnsave
rolb
loop
orb
shll
cli
lock
ret
ret
lock
mov
fld
loop
loope
rcl
in
ss
xor
lret
cmp
rcl
out
rcl
rol
inc
std
mov
fcomi
lret
aad
xor
out
fdivrp
clc
cmc
fcmovbe
loop
fadds
fsubr
fildl
xchg
repz
xor
hlt
cli
in
cmp
loopne
cmp
test
ljmp
int
repz
ljmp
hlt
cld
stc
std
jecxz
loop
ffreep
test
std
jmp
xor
out
int
cmp
in
cli
cmp
xor
imul
hlt
loopne
xchg
addb
test
aaa
ljmp
cli
shl
xor
in
fstps
jmp
fcom
xlat
fstp
int3
fstpl
sbbb
adc
jle
add
test
fdivr
in
shl
hlt
fsubrp
hlt
lds
rcl
rol
clc
shlb
ret
loopne
ds
ret
inc
xchg
jmp
xchg
icebp
out
aam
ljmp
jmp
rcl
fyl2x
out
cmp
fmulp
mov
loopne
jmp
sar
int3
sarb
aad
fst
xchg
loope
fadds
nop
in
xchg
xor
int3
repnz
stc
cmp
cld
dec
movl
std
fcmove
and
jmp
int
out
fdiv
fcmovnbe
stc
repz
aam
enter
ljmp
icebp
cmc
xchg
out
in
xlat
in
cmp
cmp
cmp
repz
out
cmp
leave
lret
fsub
adcl
aam
into
sub
neg
jmp
fnstcw
xbegin
test
test
in
jmp
out
xor
cmp
lret
cli
fdiv
cmpl
jmp
aam
fdiv
leave
out
mov
leave
aaa
ljmp
ljmp
repz
in
lock
rolb
ret
cmp
repz
ds
neg
shl
icebp
and
xor
jecxz
repz
repnz
iret
aaa
aad
int3
xchg
call
cli
cmp
int3
in
sbb
icebp
fidivrl
call
sbb
std
fld
faddl
mov
jmp
out
not
clc
aad
icebp
sti
cmc
cmp
in
xlat
out
loopne
repnz
out
sub
filds
xlat
sarl
in
shr
out
adc
int3
lock
repnz
aam
jmp
fmulp
fmulp
ror
mov
loop
into
xor
ss
ds
lock
cmc
into
std
aam
cmc
mov
mov
adcl
sar
stc
xor
neg
out
ret
aam
out
repnz
in
jecxz
loop
sti
repnz
in
shr
call
test
repnz
clc
into
mov
std
orl
cmp
cmp
jecxz
faddl
fucom
and
rorb
ljmp
int3
cmp
test
rcl
or
addl
xchg
shl
jmp
std
std
iret
leave
stc
hlt
icebp
loop
out
lock
fadd
out
jecxz
out
mov
jmp
out
into
repnz
int
in
enter
clc
xor
cmp
in
idiv
cli
enter
cmc
cli
enter
fmulp
lea
jmp
clc
cli
ss
out
sti
ljmp
shl
mov
xlat
enter
loope,pt
in
fcomip
filds
ret
push
mov
push
movl
mov
mov
add
orl
xor
movl
jmp
rol
int3
rcr
fxch
ss
insl
sub
pop
mov
jle
add
movb
fucomp
cld
int
mov
xlat
out
cmc
out
lock
hlt
in
fdiv
fcmovb
xchg
leave
leave
xchg
fmul
test
shr
nop
div
idiv
ljmp
sbb
idiv
fadds
cli
in
sar
jmp
shl
lret
out
fucomi
rcr
ret
repnz
ffree
test
mov
stc
xchg
ror
lret
jmp
ljmp
jecxz
std
sbb
test
leave
cmp
orl
xor
aam
aam
sar
cmc
stc
in
in
jecxz
sar
in
mov
loop
shlb
bnd
shl
ret
sub
flds
fstl
int3
icebp
xor
int
cmp
shl
xlat
cld
hlt
loop
add
xchg
addb
cmc
ret
ror
xor
rcl
shl
cmp
ljmp
leave
int3
lret
mov
hlt
jmp
hlt
cli
int
fcomip
out
loope
ror
cli
cmp
fcmovb
int3
in
fmul
ljmp
icebp
ljmp
imul
jmp
lret
test
jmp
sar
lret
fsub
in
loopne
out
jmp
mov
iret
loop
loopne
clc
out
jmp
fdiv
int3
cmp
test
xchg
sti
jmp
nop
out
ljmp
out
std
imul
cld
and
rcl
xchg
fsubp
aad
fst
jmp
divl
das
repz
in
cli
cmp
cmp
test
filds
test
nop
jmp
jmp
rol
xor
int
fadds
repnz
std
test
xchg
mov
in
lock
enter
hlt
loopne
hlt
in
mov
repnz
enter
mov
jmp
leave
divb
shl
repnz
ds
clc
cmc
test
movl
jne
mov
mov
mov
add
add
sbb
mov
add
mov
jmp
ror
ret
fcmovnu
fisttpl
mov
sbb
in
push
jle
add
xchg
mov
ljmp
jmp
xchg
inc
mov
ss
cmp
std
cmp
aad
xchg
mov
cli
sub
into
jmp
jmp
fldz
repz
loop
lock
into
sbb
call
sarb
shr
in
pushl
lock
out
ds
mov
cmc
ds
movl
out
cmp
enter
jmp
loope
in
fiadds
and
out
in
jmp
cli
jmp
fmulp
xor
rcr
addb
int
sub
lock
int3
xchg
aam
xor
ljmp
rcr
fnclex
orb
fucomp
cmc
xchg
das
das
ror
into
iret
int3
jmp
hlt
aas
loop
sar
out
loopne
fcmovu
out
sti
loope
ljmp
stc
repnz
ljmp
sar
repnz
into
xlat
cmc
sti
repz
lret
fucompp
fucomi
iret
rol
aad
aaa
xor
stc
cmp
cmc
ljmp
repz
out
xlat
in
faddl
repnz
stc
jmp
fsubr
aas
sarb
fimuls
fmuls
faddl
hlt
icebp
ljmp
sbb
ds
stc
test
lds
in
in
in
sti
cmc
jmp
xlat
aad
sar
cmp
mov
into
in
sub
icebp
cmp
loopne
stc
ret
shl
faddl
jmp
and
shll
out
lret
aas
cmc
shl
loope
ror
stc
xchg
nop
mov
rcl
xor
enter
fildl
mov
fmulp
testb
repnz
lock
loop
repz
cmc
cmp
jmp
aas
into
repnz
out
xor
jmp
or
subl
lock
into
cld
loop
inc
cld
xor
xorl
push
or
mov
mov
add
movl
cmp
pop
movl
je
mov
jmp
jmp
lret
xlat
lret
rcr
rcr
xlat
test
inc
sub
cld
orl
jle
sar
not
rolb
in
shl
icebp
xchg
adcb
out
in
clc
in
std
xlat
aas
lock
loope
or
mov
mov
dec
loop
mov
out
xor
in
sbb
rolb
mov
xchg
mov
call
clc
shl
fcmovnu
jmp
cmp
loop
std
mov
flds
xor
cmc
out
jmp
shl
repnz
mov
cmp
shl
into
lret
int3
repnz
rcr
out
fcom
sar
loope
out
rcr
out
test
test
xchg
lock
jmp
aam
clc
cli
shl
lock
cmc
loopne
shl
hlt
enter
out
mov
out
mov
into
xor
vpsubsb
cld
aaa
cmc
stc
aas
rol
ret
loope
xchg
test
test
loopne
in
xlat
stc
lret
lret
fcmove
cli
rol
rcl
test
mov
mov
cs
loope
sarb
cmp
xor
jecxz
aad
ret
std
fcmovnu
out
cmp
loopne
cmc
cs
enter
aaa
cmp
fcos
shl
fdivrl
repnz
fcmovbe
mov
sti
out
in
repnz
lret
repz
icebp
in
lock
loopne
cmc
repnz
imul
mov
mov
xchg
out
loope
ljmp
rol
lds
shl
sti
xor
fdivrp
xchg
int
leave
aaa
out
in
out
cmp
shr
test
repnz
and
sti
mov
and
repz
aad
hlt
cmp
cmp
fdivp
fdivrs
ffree
filds
repz
filds
sub
call
shll
cmc
lret
repz
in
in
enter
loopne
stc
loope
out
ljmp
sub
cmp
lock
jmp
cld
aad
sar
xlat
fcmovnu
mov
mov
mov
fcmove
out
repnz
vpsubd
mov
jmp
ror
aas
int
int
jbe
repnz
jg
sbb
jle
xor
stc
jecxz
lds
ret
and
out
fcmovu
into
out
aas
into
into
shl
imul
cmp
shl
loopne
fcmovnb
loop
orb
mov
in
lock
in
jmp
int
in
out
call
repnz
xchg
rcr
incb
xchg
orb
aad
cmp
xlat
lret
in
std
lds
mov
in
mov
test
xor
divl
divl
jmp
cmp
in
f2xm1
xor
out
cld
sti
int
sti
out
xchg
faddp
rcl
aam
cmp
sti
fmul
cmp
xchg
out
or
mov
out
shr
icebp
int
fcmovne
in
lock
repnz
in
flds
add
cmc
fisttps
int3
cmp
repnz
repnz
and
fcmovb
div
or
in
into
test
or
iret
int
xor
lret
sar
cmp
std
ss
fildl
xchg
in
test
shl
aad
ljmp
jmp
ffree
and
test
ret
sti
xchg
call
shr
xor
shlb
xor
lock
jmp
loopne
icebp
out
les
test
aas
jecxz
cmp
cmp
aam
loopne,pt
fsub
xor
in
fmuls
ljmp
call
aad
ror
int3
test
shr
fsubrp
mov
lret
out
fcmovbe
repz
fcomip
shrb
in
sub
push
iret
sti
aas
fiaddl
lret
stc
sub
mov
stc
rcr
idiv
rcr
fyl2xp1
shr
cmp
cli
icebp
out
not
sbb
addl
xor
int3
iret
cmp
cmp
shl
fcmovbe
fcmovnu
test
mov
call
out
ss
clc
ljmp
sti
jecxz
test
call
lock
ret
jmp
mov
xor
add
leave
ret
push
mov
push
or
jmp
ret
ret
fst
int3
xlat
fs
test
inc
jo
jle
add
jmp
repnz
test
fmul
xlat
cmc
jecxz
fld
mov
in
clc
out
jecxz
repz
loop
loop
shl
fdivrs
hlt
xchg
call
loop
nop
cli
in
ljmp
iret
test
in
ffreep
loop
and
ljmp
cmc
cmp
loop
fldlg2
idivl
lock
sar
cmp
in
mov
int
nop
test
lock
enter
sarl
repnz
repz
ljmp
lret
sti
xchg
lret
into
cmc
hlt
aad
xor
call
cmp
stc
sar
jmp
stc
popl
jmp
int
lock
cmp
fstpt
xlat
and
fcompp
lret
testl
iret
fnop
cld
aad
aad
ljmp
faddl
in
lea
loop
iret
int3
in
xlat
fnstenv
fsqrt
cmpl
fabs
cmc
xchg
fldl
leave
or
jmp
jecxz
xor
sub
clc
fcmove
in
ret
xchg
cld
in
mov
lret
out
div
ss
xor
cli
cld
xlat
cmp
cmpb
ds
out
cmp
icebp
hlt
in
imul
cli
in
in
fucomp
int3
fmull
sub
std
ljmp
fsub
fdivrs
xlat
ret
test
fsubrp
cli
xchg
ror
out
enter
cli
in
out
call
loopne
cmc
loop
mov
leave
repz
test
orb
xor
ss
fdivs
cmp
incl
cmc
sub
loopne
mov
xchg
test
shl
ss
jmp
in
aam
loope
shl
mov
fscale
fsubp
fisttps
int3
int
aam
cmp
lret
dec
vpsrld
loop
loope
imul
out
test
cld
ljmp
icebp
ret
jmp
sti
fcom
aas
not
test
loopne,pt
or
mov
hlt
jmp
out
cli
iret
xor
out
lret
in
stc
xor
std
aam
aam
div
enter
lock
sbb
shr
in
les
clc
repnz
fcmovb
fsubrp
cld
mul
cld
loopne
xchg
iret
in
fcmovne
cld
icebp
out
shl
rcr
cmc
lret
aam
shl
fdivrp
std
rolb
into
ljmp
xor
aam
cli
cmp
fcmovne
shl
cmp
rol
fildl
call
xchg
jmp
ret
enter
cmp
ret
les
mov
xor
sbbl
add
movl
mov
movl
movl
movl
movl
mov
movl
push
movl
movl
mov
cmp
movl
jmp
rcl
enter
fsubl
frstor
jle
add
loopne
clc
jmp
test
test
mul
xor
int
aaa
int
cli
fidivrl
shl
cmp
loopne
int
nop
cld
xchg
sub
stc
ret
jmp
sti
fsin
cmp
cmpl
jmp
in
shl
test
out
xor
call
les
aad
rcr
enter
xchg
fisttpll
repz
fidivrs
lret
or
fld
xchg
xchg
faddp
mov
loopne
in
mul
aad
out
cmp
fidivrl
sti
mov
loope
cmp
in
std
sub
loope
clc
cmp
cmp
out
loopne
jmp
in
icebp
lock
sti
int
sti
mov
fsubr
fcomp
fdivrl
stc
in
cmc
loopne
clc
inc
enter
and
repz
div
hlt
in
shr
jmp
leave
clc
out
loopne
int3
hlt
lock
ret
loopne
test
fst
jmp
enter
out
shr
ljmp
ret
cld
test
xlat
test
sbb
aam
fcom
lock
aas
cmp
jecxz
lock
cld
or
mov
hlt
stc
out
jecxz
ss
xor
int
cmp
shl
fld1
fsqrt
xchg
call
sti
sti
loope
mov
icebp
neg
into
ljmp
mul
test
jmp
out
in
out
fcmovnbe
int
int3
cmc
stc
into
out
aam
enter
rol
inc
aam
jmp
fcmove
loope
xchg
adc
in
loop
shl
repz
loop
lret
ss
cmp
test
cmp
into
mov
xor
jmp
jmp
into
cmp
int3
xlat
out
fcmovnu
fimuls
ffreep
in
std
xchg
int
loop
ss
fcmovnu
int
div
fnsetpm(287
iret
les
fisttpl
in
fldl
fsubr
xor
cmp
ds
fildl
loopne
adcl
xor
aaa
idiv
xor
lock
fstpt
mul
in
lret
xabort
stc
xchg
mov
in
clc
aad
int
call
cmp
lock
hlt
stc
mov
sub
xchg
test
out
shl
rol
ljmp
into
ffreep
fcomp
mov
fucomi
ljmp
movl
cld
jmp
repnz
call
lret
fucomi
jmp
shlb
test
xor
mov
xor
jmp
aas
leave
fmul
fcom
fld
cli
jae
mov
jbe
jle
add
in
sti
aam
into
aas
shr
idiv
addb
test
dec
xrelease
rol
clc
into
hlt
cmp
std
repnz
ret
xchg
vpaddb
mov
in
loope
shl
cmp
rcl
rcr
xlat
lock
cld
fscale
hlt
add
loope
cld
cld
loop
jmp
xchg
aas
xor
jmp
fidivrl
std
fld
loope
idivb
ret
fadd
jmp
fdivrp
faddl
aas
sub
iret
fcmovne
enter
cmp
jecxz
rcr
cmp
jmp
test
xlat
rcr
into
jmp
ss
icebp
in
sarb
out
ss
cmp
in
xchg
std
lret
into
incl
ret
loop
repz
imul
ror
xlat
std
in
icebp
fsubp
rcl
fimull
jecxz
rcl
call
aaa
cmp
fidivrs
sti
shr
aad
les
xchg
in
std
repnz
lock
sti
ljmp
les
cmp
mov
out
test
enter
xchg
out
out
loopne
cld
in
idivl
repz
sarl
lret
in
mov
xchg
hlt
mov
ss
aam
cmp
fistpll
repnz
ds
sti
cmp
test
enter
xchg
out
mov
sub
aam
out
xor
clc
ror
repnz
test
shl
aam
out
divl
out
fcmovne
leave
lret
xor
loope
sti
fst
inc
test
leave
in
fdivp
call
shl
lock
enter
lock
lds
fadds
lret
imul
fildll
repnz
shll
ds
fsincos
rcr
hlt
clc
cli
icebp
fld
out
xchg
xchg
adc
repnz
cmc
jmp
in
repnz
xor
icebp
test
orl
icebp
ss
cs
fldlg2
out
repnz
push
and
lret
fimull
out
mov
iret
mul
rcr
rcr
aas
fucomp
xlat
std
mov
xchg
jmp
rcl
fcompp
ljmp
aas
movl
mov
ret
out
rcr
lret
stc
xor
xlat
fadd
fcom
mov
sub
fucomp
in
adcl
ss
sarb
repnz
enter
mov
lret
stc
cli
into
ficoms
ss
cld
jmp
in
aad
xor
jmp
lret
aam
aam
rcl
cmpsl
dec
js
jle
add
ret
ret
out
fcomip
std
loop
lret
call
icebp
lock
out
hlt
int
rcr
xlat
sti
cmp
call
fisttps
fstl
jmp
lret
call
sti
fdivrs
aas
ds
loopne
call
out
std
icebp
orl
in
leave
ljmp
fdiv
cmp
lock
aad
fucomip
xchg
leave
xchg
in
ret
int
out
icebp
stc
in
idiv
leave
ds
stc
int
aam
roll
mov
out
int
aad
divl
enter
ds
xlat
fmul
ffree
hlt
out
lret
jmp
in
std
jecxz
xchg
repz
in
idiv
test
leave
leave
xlat
cmp
stc
sar
loope
mov
loopne
out
in
xchg
into
aam
repnz
test
repnz
cmp
enter
loopne
out
mov
call
ljmp
into
cmp
stc
clc
sarl
lret
xchg
sbb
mov
ljmp
into
addb
mov
ljmp
jmp
xor
in
out
aaa
in
hlt
aaa
repnz
roll
rcr
repnz
loop
lret
out
shlb
in
sti
cmp
std
loope
shl
cmc
imul
aad
cmp
addl
stc
repnz
mul
stc
aas
addl
fisttpll
test
xor
fdivs
xor
jecxz
fildl
incl
fstl
out
repnz
call
fsincos
aam
ret
in
in
mov
decl
jmp
fsubr
fidivrs
out
in
sub
cmp
loop
neg
loopne
in
mov
into
ss
xor
hlt
std
cmp
fcomi
test
mov
fdivrp
cli
mov
hlt
xchg
jecxz
fcom
out
shl
into
fcomip
roll
idiv
loopne
cmp
nop
call
out
fbstp
lret
in
aad
hlt
out
fdivp
cmp
out
les
out
fldl2t
shr
fsubp
ss
into
enter
call
rcl
lds
lret
cld
enter
test
ror
lock
xlat
fdivr
shr
xor
hlt
rolb
mov
int3
iret
sub
xor
icebp
in
lock
cmc
sub
lock
fcmovbe
sar
ret
leave
xlat
cld
jecxz
nop
mov
lea
orl
jmp
int3
ror
int
lds
imulb
jnp
jle
add
ljmp
aam
iret
lret
neg
rcr
fcmovnu
out
filds
mov
out
sub
aad
in
out
repz
stc
clc
or
fcmove
out
out
out
shlb
lret
cmp
in
cmp
repnz
std
in
out
test
add
out
out
lock
cmc
cmp
cmp
cmc
flds
cli
int
fsts
aam
aaa
clc
cld
out
out
xor
in
cli
fprem
sarl
cmp
in
popl
icebp
cmp
aas
out
lret
into
fcmovu
mov
testb
mov
xchg
sub
iret
in
in
into
cli
cmc
adc
aaa
sar
cli
jmp
cld
int3
jecxz
mov
aaa
shl
ss
repz
in
fucomip
fst
out
loop
mov
call
mov
xchg
call
xor
idivl
lock
aaa
cli
xor
fcomp
mov
and
in
xor
int3
shl
aas
repz
loope
aad
xchg
out
sti
cmp
in
loop
xchg
xchg
in
lret
call
ljmp
ret
aad
ljmp
jmp
enter
sti
ror
enter
sarl
cmp
loop
fcmovu
cld
std
xchg
mov
idiv
cmp
icebp
rol
clc
int
xlat
cld
out
fsub
out
out
mov
std
std
decl
xlat
in
idivb
in
icebp
ds
idiv
aam
leave
xlat
fimuls
xchg
out
imul
stc
xor
int
into
aaa
repnz
out
loopne
lret
xor
stc
loope
loope
lea
fcom
jmp
jmp
int
fcmovnb
lds
fnsetpm(287
nop
jmp
decl
xor
int
cmp
cmp
fisttps
sti
call
in
test
xchg
repz
cli
rol
cmp
ljmp
ret
les
test
lret
ret
mov
loopne
rcr
xor
sti
std
cmc
jmp
test
jmp
cli
call
xchg
div
sub
shl
cmp
cld
roll
in
enter
leave
xchg
mov
sar
out
fidivrl
cmp
aad
ror
stc
fdivr
lea
loop
nop
icebp
shll
enter
fcmovnbe
aam
fdivr
xor
cmp
jne
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
add
mov
jmp
ror
vpsrld
jl
push
push
mov
das
shrb
jle
add
les
fiaddl
enter
xchg
rcl
repnz
cs
out
rcr
shl
ret
shl
sti
out
ror
in
xchg
cli
xchg
fildl
out
xor
bnd
loop
rol
clc
aad
les
sti
int
fmulp
rol
rol
jmp
fcmovu
enter
shl
call
out
ds
fxch
enter
in
test
ljmp
xor
sar
inc
sti
loop
std
loop
mov
clc
lret
out
ffreep
sub
xabort
aaa
lock
ror
xor
call
jecxz
test
dec
in
sub
ljmp
xor
cmp
ds
rcl
out
clc
jmp
out
out
out
call
fdivrs
cmp
repz
icebp
out
loope
lret
cli
nop
rcl
addl
loopne
icebp
clc
in
xchg
repz
fsub
out
int
jmp
call
ret
xor
xor
in
into
cld
shl
sarb
hlt
fdivrl
movl
out
in
xchg
loop
xor
cmp
fdiv
out
repnz
xlat
lock
out
cli
ljmp
out
mov
nop
out
lret
out
idivl
lock
cmp
adc
or
cld
hlt
ret
mov
in
and
div
xor
rcr
fiadds
and
cmp
repz
in
mov
aaa
cmp
dec
fcmovnu
fcom
out
cmp
addl
out
lea
cmp
rcl
idivl
cld
test
sar
rcr
ret
repnz
out
aad
shl
cmp
icebp
cmp
out
out
in
in
loop
std
fneni(8087
out
enter
fdivrp
mov
cmc
cmp
sti
cmp
in
sti
cld
fadd
loop
sti
lea
lret
cmp
fmul
xlat
cmp
out
fst
in
fucomi
sbb
mov
nop
xchg
cmc
xor
ljmp
cmp
cmp
rol
fcomp
out
xchg
mov
in
not
in
aas
xlat
int3
fsincos
and
xlat
add
sti
leave
shr
out
jecxz
lret
ror
enter
icebp
std
xor
cld
cld
les
cld
jecxz
std
lock
loopne
sub
call
fcmovu
div
or
stc
call
cmp
fbstp
lock
aad
lret
enter
fcmovnu
push
icebp
ret
mov
jle
add
mov
enter
icebp
icebp
int3
cmc
std
cld
cmc
idivb
lock
test
fildl
ljmp
ret
jmp
cli
fcmovne
shr
stc
icebp
int
cmc
into
ret
in
xor
jmp
addb
out
sar
not
aas
cmp
sti
sar
cmp
leave
hlt
aam
sti
out
jmp
iret
xchg
repz
xor
jmp
aaa
loope
ds
ds
in
sar
mov
fmulp
fucomi
in
repz
cmp
sarb
loope
sar
repz
jmp
fabs
int3
loopne
lret
aam
div
das
ss
cld
cmp
aad
hlt
sar
testl
shl
xchg
or
sub
ljmp
aaa
rcl
ffreep
lds
ret
orb
xchg
in
cmc
lock
iret
in
leave
std
std
repz
lock
ret
out
sar
incl
rcl
adc
mov
xor
xor
jmp
cmp
loopne
fcomp
out
loopne
xor
loopne
out
ret
aaa
lret
repz
fmul
in
std
out
fldl
fisttpl
icebp
ror
shr
fucom
fadd
int
hlt
xor
neg
ljmp
mov
mul
out
aad
out
int3
cld
ljmp
ljmp
fsubrp
out
iret
mov
icebp
fsubrs
xor
int
fdiv
rol
out
fcmovnb
repnz
test
shr
call
out
lock
repnz
std
cmp
cmp
into
fadd
fadd
leave
loope
cmc
fadds
call
icebp
clc
in
hlt
leave
xlat
ljmp
fiaddl
out
loop
mov
repz
xor
cmp
iret
hlt
test
not
faddl
testb
fisttpll
test
into
in
cli
clc
cmp
std
sti
std
xlat
repnz
stc
out
fldl
fmulp
out
sub
aam
fidivrl
fdivr
in
lock
testb
mov
loop
in
lret
mov
shl
cmp
cli
cmp
and
sti
sub
xchg
hlt
ret
repnz
shr
ljmp
mov
stc
ljmp
lock
xlat
int
cmp
ret
test
cmc
fsqrt
fmul
loopne
mov
xchg
loop
fsubrs
fdiv
xor
cmc
sarb
cmp
or
or
icebp
jmp
enter
int
enter
push
add
inc
cmc
mov
add
add
ret
out
std
test
rol
fdivr
int
jmp
enter
out
cmc
lret
cmp
in
int3
stc
hlt
ds
fnsave
hlt
test
xchg
in
out
test
into
icebp
imul
in
aam
cmp
cli
aad
rol
rol
shl
test
adc
int3
ror
xor
out
cmp
cld
cld
ss
flds
testb
iret
cmp
in
out
cli
ss
out
icebp
flds
std
int
std
mov
adcb
aaa
cmc
fsubr
sti
cmp
idiv
repz
cmp
ljmp
mov
shl
rcl
not
repz
jmp
stc
clc
loopne
aas
repz
call
int3
nop
out
jmp
loope
int3
int
out
iret
fnsave
shr
ret
cmp
icebp
in
rcl
out
lret
out
mov
repz
lock
ds
cmp
neg
mov
aam
leave
lret
test
jmp
mov
out
shl
int
enter
sar
in
int
aad
sarb
cld
call
decb
or
icebp
out
into
out
roll
cli
xchg
xchg
std
loop
rorl
shlb
repz
ss
sti
fmul
in
ret
filds
loopne
leave
out
cld
std
loop
loopne
fcom
loope
lret
in
in
fdivs
icebp
sar
cli
shl
in
hlt
lret
shl
leave
cld
fucomp
sub
not
lock
lret
stc
filds
fincstp
fsubp
cld
xchg
xchg
cmp
rol
in
aad
aas
cmc
fdiv
std
aad
sti
xchg
xchg
clc
sbb
fnsetpm(287
xchg
or
leave
lock
aad
ljmp
aas
cmp
cmc
cmc
faddl
xchg
into
repz
cmp
neg
sub
std
stc
into
mov
cmc
test
lock
idiv
shr
sti
shl
sbb
call
flds
rcl
aad
cli
aad
iret
enter
rcl
jecxz
fsub
in
cmp
fdivr
aam
add
xor
cmp
in
out
hlt
test
repnz
jmp
and
int3
lret
in
out
int
not
enter
int
rcl
xchg
jmp
lret
out
jmp
int
out
int
in
call
ljmp
fcomi
inc
std
in
loopne
lea
lock
aas
lret
fcmovnu
xlat
aad
jno
cmp
add
add
shl
int
mov
in
test
xor
fmulp
std
test
leave
mov
lock
fsubrp
xchg
aad
sub
imull
fidivrs
aas
xorb
test
stc
ljmp
ljmp
lock
xlat
lock
aam
icebp
lock
std
ret
cld
fmul
lret
iret
call
hlt
lock
fstpt
in
roll
mov
fcomp
and
fstp
in
in
cmp
out
xor
ljmp
sti
fld
ret
call
shr
in
xchg
int
loopne
fbstp
xor
cmp
in
cmp
cmpb
ret
cmpl
add
out
fdivr
fisttpl
test
cmc
out
iret
lret
repz
shr
stc
flds
xchg
mov
sbb
mov
aam
fldz
leave
or
cmp
fcomip
jecxz
mov
mov
leave
jecxz
aad
hlt
cmc
xor
icebp
enter
aad
test
xlat
int3
loope
fsubrp
lret
ror
ret
xlat
aaa
xlat
xor
jmp
iret
rolb
sbb
test
ljmp
xchg
ror
iret
leave
dec
cld
fsub
loopne
out
aas
ret
xchg
ds
int
xchg
jmp
xlat
ret
fadd
cld
ds
not
loopne
test
frstpm(287
loope
cmc
hlt
fisttpll
repz
mov
jmp
stc
enter
cmp
repz
shl
fucomp
leave
jmp
iret
xchg
jecxz
lret
lret
mov
out
out
iret
idiv
icebp
sarl
cmpl
mov
in
xor
out
lret
xor
shl
xor
loopne
jecxz
fildl
out
lret
mov
shll
rcl
shr
cld
hlt
sarb
loopne
cmc
rorb
out
in
xchg
jmp
lret
repnz
out
std
int3
fdivs
shr
aad
fcmovnbe
enter
aas
call
jmp
fsubrp
loopne
aam
out
loop
ret
ret
out
jmp
sti
mov
in
in
aam
xor
cmp
iret
in
stc
stc
cmp
fdivr
aam
rcr
sar
addb
out
jmp
xor
hlt
fmul
xlat
ds
in
ds
rcl
xlat
lret
jmp
fucomip
shr
xchg
int3
mov
into
xor
in
fcmovnu
cmp
stc
loope
cmp
lds
ficoms
mov
hlt
cmp
xor
jmp
cld
lret
adcb
movl
into
rcr
int3
fwait
outsb
mov
add
int3
push
add
rcr
loopne
cld
mov
fsub
test
lea
lock
xchg
xor
ror
clc
cmp
xlat
stc
cmp
xchg
fldl
call
xchg
ret
iret
icebp
int
fdivr
call
out
lock
test
stc
cli
out
nop
repz
loop
loopne
not
lret
rcl
out
push
incl
sarl
ret
int3
xchg
fcmovu
iret
call
lret
into
xor
call
aas
cmc
cmp
cmc
out
test
mov
lock
repnz
cmp
cld
into
in
lret
in
out
sti
lock
test
mov
xchg
and
aam
out
ror
call
iret
call
mov
int
mov
loope
loopne
not
into
ror
fcmovnu
fnstcw
iret
sbb
fdivp
in
jmp
mov
std
fsubrp
jmp
in
jmp
lret
into
iret
repnz
in
cmc
cli
sti
adc
xchg
lret
repnz
std
in
call
hlt
fstp
lret
mul
rcr
ds
std
aam
idiv
enter
sar
jmp
repnz
out
enter
int
idivb
ret
lds
incb
rclb
aam
out
xor
lret
hlt
aam
test
fcomip
loopne
jecxz
lock
jmp
in
out
shl
xlat
sarb
xor
std
lret
fscale
loopne
cmp
loop
mov
xchg
repz
fldcw
cmp
lret
shll
ds
rol
cld
aad
loopne
in
out
xchg
xchg
xchg
ljmp
cmp
cmp
out
roll
cmc
xlat
and
mov
repz
repz
cmp
clc
cmp
std
cmp
xor
idivl
shr
xchg
out
stc
in
loope
out
ljmp
out
sar
call
rol
sti
mov
repz
sar
jecxz
xchg
nop
shl
clc
rol
ss
sarl
mov
mov
mov
sti
lea
loopne
loope
ss
lret
xor
cli
cmp
ret
ret
xchg
test
decl
cmp
fdivr
sbb
in
xlat
aad
loope
iret
int3
in
out
xchg
test
cmp
lret
fsub
ljmp
adc
in
sti
idiv
mov
jmp
out
fmul
cmp
loop
fdivr
ret
cmp
mov
inc
cmp
movl
int3
into
fstp
pushf
mov
decb
or
jle
add
xchg
enter
shl
aaa
aaa
in
int3
xlat
aam
std
cmp
rcl
xacquire
xchg
sar
cld
mov
bnd
into
loop
lret
xlat
aas
cmp
shl
out
rol
test
clc
mov
out
shl
ljmp
aas
cmp
aad
rcr
incb
jmp
jmp
ljmp
out
iret
leave
ss
int3
fstp
repz
aam
aad
call
cli
rcr
in
sar
lret
stc
aad
idiv
incb
sti
sar
incb
sub
aad
ret
int
ror
ss
loop
iret
rolb
cmc
mov
cld
mov
lret
cmp
fdivrp
cmpb
loop
int3
test
call
jmp
mov
cld
ror
jmp
jecxz
fdivr
ljmp
fcomp
aad
loop
jmp
into
call
jmp
sar
icebp
xor
into
ret
jecxz
addb
xlat
mov
fisttps
sar
fnstenv
int
out
ss
stc
shl
roll
mov
int3
popl
in
not
iret
ret
lret
stc
cmp
int
test
mov
ret
fimuls
iret
int3
nop
and
xor
xor
std
fcmovnb
ffreep
in
stc
fdivr
lret
xchg
flds
sub
xlat
aaa
lret
idivl
aad
fdecstp
and
test
sti
fcmovnbe
fcmovu
loop
xchg
rorb
jmp
fucomi
aad
cmp
idiv
loope
aad
cmp
lret
cld
test
out
ljmp
jmp
cli
xchg
test
sbb
loope
jecxz
icebp
in
lret
xor
ss
shl
out
rcl
aam
ret
repz
mov
iret
mov
out
enter
out
in
aam
aaa
xorb
cld
fsub
xlat
mov
xchg
fsubrp
icebp
aam
aam
shr
cmc
lds
lock
jmp
test
cmc
mov
out
std
int3
out
les
xor
in
in
cli
cmp
loopne,pt
roll
test
in
out
sar
lock
jmp
int
fprem1
jecxz
fdivrp
mov
roll
icebp
out
in
repnz
jmp
xlat
lret
shlb
hlt
cmpb
cli
repz
mul
leave
fucompp
in
lret
jmp
repz
sti
repnz
jmp
mov
add
mov
mov
jmp
rcr
int3
ror
fcmovnu
arpl
jb
push
add
add
ljmp
aas
test
cld
xchg
lret
testl
cmc
ljmp
cld
cmp
in
loope
fcmovb
clc
call
sti
ret
shr
rclb
out
icebp
cmp
int
cli
icebp
xor
mov
mov
jmp
fstl
int3
lret
stc
out
idivb
cmp
not
cli
fiaddl
addb
ljmp
in
rol
adc
test
mov
sbb
loopne
fucomi
test
clc
xor
cmc
into
xlat
jmp
clc
hlt
fcomp
cmp
out
fimuls
in
out
sub
int
ror
aam
icebp
out
in
loop
faddp
enter
loop
out
fstl
xor
xor
in
stc
cmp
xor
fidivrl
rol
in
adc
ds
rcr
mov
sub
loopne
enter
call
cld
aam
std
adc
addb
test
shlb
cmp
out
jmp
xchg
mov
test
mov
iret
sub
in
ljmp
shl
test
jmp
out
jecxz
jmp
decl
repz
fidivl
loop
shl
ret
cmp
jmp
ret
xchg
fadd
enter
int
repnz
clc
enter
fadd
out
xchg
fsubp
in
std
sti
out
or
aad
lret
fdiv
cmp
icebp
lret
xlat
imul
fldl
call
fdivr
into
icebp
iret
out
idiv
repz
rcr
ss
loop
into
flds
lret
xchg
int3
xchg
jmp
rol
std
clc
out
int
xor
ror
fld
jecxz
jmp
enter
ljmp
jmp
aam
lock
ds
icebp
rcr
lock
mov
loopne
nop
xchg
in
shl
shr
aam
ljmp
hlt
fdivr
cmp
mov
mov
in
mul
xor
cs
icebp
sti
aaa
cmp
cmc
ret
clc
loope
call
cli
in
icebp
shl
jmp
iret
out
shl
fidivrs
sti
sar
ds
loopne
fiadds
lock
call
out
clc
aad
aaa
fnstsw
out
ret
loop
mov
in
leave
mov
xchg
int3
lret
loop
aad
ret
leave
out
jmp
in
clc
std
xor
out
ror
ret
inc
adc
movl
iret
into
aad
leave
fnsave
cmp
les
add
add
addl
rcl
sub
std
in
aaa
jmp
repnz
cli
in
mov
call
lock
rcl
out
jmp
rcl
fcom
ret
loope
sti
out
cmp
and
cli
lock
into
xchg
rcr
ss
lds
sti
cmc
xor
std
repnz
out
adc
fdivr
fdivr
lock
int3
roll
xor
lret
iret
std
out
fdivr
clc
aas
cmp
fildl
sub
hlt
loope
xlat
in
iret
fnstcw
clc
leave
icebp
dec
in
loope
out
cli
in
loope
out
cli
xchg
std
fmull
repnz
cs
sti
in
aas
repnz
jecxz
out
iret
shl
out
enter
in
lret
int
xchg
rol
xor
xor
in
aas
aad
ret
sarb
fcmovu
call
or
enter
xchg
in
hlt
in
sub
iret
lret
aam
repz
and
nop
fucomp
leave
lret
in
lds
repnz
aaa
int
out
dec
cli
shl
ffreep
fsubp
jecxz
hlt
int
loope
fucom
shl
iret
pop
test
call
fucompp
jecxz
cmc
clc
xlat
lret
cmp
in
call
out
repz
aaa
fnstcw
repnz
call
ret
sbb
fucomp
rcr
sbb
stc
stc
div
iret
aam
repz
ffreep
sub
stc
sti
fstp
jmp
in
cmc
xchg
ror
jmp
aaa
in
ljmp
ss
out
mul
test
in
jmp
icebp
call
rcl
aas
cmp
cld
aam
in
jmp
ffree
mul
mov
mov
jmp
hlt
aad
xlat
ret
cmp
in
mov
cmc
cmc
mov
cld
ficoms
idiv
aam
xbegin
out
loopne
leave
test
test
stc
fstl
call
div
out
ss
loopne
out
aam
imul
imul
jecxz
test
test
jmp
sub
cs
ljmp
xor
icebp
faddl
cli
in
sbb
call
xor
jmp
std
call
cli
test
cmp
xchg
loope
enter
lock
mov
jmp
lret
lret
cmp
aam
xor
out
imul
nop
test
out
aam
ret
stc
in
sti
rcr
cld
into
in
ret
roll
mov
lock
rcl
out
fadd
ret
stc
pop
test
je
jmp
mov
int
sub
movsb
adc
jle
add
hlt
iret
jmp
shl
lock
ljmp
call
ljmp
cmp
fdivrl
ljmp
cmc
not
ret
cmp
mov
dec
cli
fildl
out
xor
ljmp
aad
adc
xor
lret
fsub
fimull
ret
repnz
sti
ds
push
decl
mov
fsubp
mov
ror
in
sub
shll
out
clc
xor
or
clc
xchg
xabort
lret
ffree
orl
shl
into
lret
int3
lret
cmp
std
rol
call
enter
mov
xor
aam
icebp
out
cmp
fmulp
loop
loopne
lock
aas
xchg
enter
leave
hlt
int3
sub
aam
xor
sarb
cmp
cmp
test
lret
loope
ljmp
shr
lret
into
cmp
shl
sub
shl
out
testl
sub
lret
out
aaa
xor
aas
int3
rolb
loop
in
xchg
lock
std
cmp
int3
dec
cmp
out
ds
test
loopne
hlt
idiv
int3
icebp
leave
sub
jmp
in
clc
cmp
cmc
iret
loope
std
mov
fsubp
lret
repz
mov
sarl
fld
xor
xor
cli
sarl
rcr
rcr
hlt
repz
mov
xchg
ret
call
icebp
fistpll
fcmovbe
in
loop
stc
fdivp
loop
fxch
fsub
call
icebp
in
hlt
fmul
std
hlt
leave
cmp
faddl
jecxz
loop
jmp
jmp
repz
repz
shl
in
rolb
in
rorl
loop
xlat
das
divl
into
ljmp
fnstsw
test
idiv
sti
leave
in
xor
int
hlt
cmc
leave
cmp
call
aam
out
clc
in
std
testb
repz
int
ret
cmp
cld
imul
shl
div
jecxz
mov
enter
and
in
ror
lds
repnz
cmp
test
test
hlt
jmp
test
jmp
int
out
ljmp
jecxz
cmp
lret
in
in
fdivr
in
fdiv
xchg
leave
cmp
out
loope
int3
cmp
test
sar
xor
pushl
mov
pushl
mov
call
jmp
jmp
lret
rcr
lret
fstpl
into
rcll
add
add
jecxz
call
out
shr
in
repnz
xor
loop
and
clc
fucomip
in
leave
icebp
xchg
int3
mov
aad
repnz
fmul
loope
fmulp
aam
push
hlt
mov
test
lret
fists
leave
rcl
ds
leave
aam
rcl
out
fcom
shl
jmp
cli
call
xor
lock
out
out
hlt
aad
lret
icebp
cmp
ret
mov
lret
in
sub
jecxz
xor
cmp
aad
hlt
cld
xchg
loop
aam
int3
int
lret
popl
cmp
lock
hlt
xlat
lds
std
jmp
sti
in
xchg
sarl
in
fsub
fmulp
jmp
loopne
sarb
xchg
cmc
jmp
out
enter
int3
xlat
cli
cmp
iret
cmp
mov
mov
in
addb
enter
cld
ljmp
fldl
aad
stc
fucomip
addb
fsubr
lret
cmc
shlb
lret
ror
cmp
cli
in
cmp
fucomp
out
xchg
aad
int
ss
ljmp
cmc
aam
cli
std
clc
std
enter
loopne
iret
loope
repz
aad
icebp
xlat
cmp
ds
inc
cmc
call
sub
addb
mov
cmp
ret
fadd
ret
out
clc
out
jmp
out
int
mov
cli
vpmovmskb
div
fdivs
jmp
aad
in
ret
mov
enter
ss
xlat
sti
hlt
dec
cli
in
cmc
cmp
repz
or
shl
shl
hlt
imul
xor
cmp
hlt
xlat
sub
jmp
test
mov
xor
repz
ss
ds
shr
rcr
cmp
push
fcomp
into
loop
out
loope
aad
xor
int3
sar
cli
int3
fcompp
xlat
ret
fdivrp
jecxz
lret
call
xchg
shl
ljmp
cmp
ds
cmpl
clc
clc
jmp
repnz
in
cmp
aaa
cmc
cmp
sar
not
in
out
in
loopne
lret
lret
std
loope
xchg
into
out
leave
aad
fucomp
fistpll
leave
not
fcmovb
ds
xchg
into
lret
mov
icebp
les
xor
or
push
mov
sub
decl
movl
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
jmp
leave
aad
fst
leave
fldl
cli
sbb
add
jle
add
aam
leave
icebp
aam
into
sarb
flds
leave
out
xchg
mov
icebp
lret
out
sar
cmp
cmc
fidivrs
cmp
inc
out
loop
fdivr
test
cmp
rcl
test
into
loope
repz
fcmovne
leave
aad
push
in
mov
fsub
filds
decb
fadd
in
xlat
xor
fucomp
cmp
lock
add
enter
cmc
jmp
sbb
test
aas
shl
enter
shlb
lock
hlt
into
aad
addb
orb
out
ljmp
aad
fcmovu
fldl
movb
jmp
in
rcr
loop
ljmp
int3
repnz
ret
xor
rcl
leave
aam
faddl
xchg
mov
xor
fsubr
cli
out
in
rcl
lret
iret
lock
clc
in
fisttpll
icebp
ret
lea
cmc
sub
cmc
rcl
fdivrs
iret
loop,pt
shr
incl
loop
ljmp
rcl
not
fdiv
icebp
shr
repz
xchg
mov
std
int
jmp
fucom
xor
cmc
icebp
cmp
call
loop
idiv
hlt
fincstp
ds
stc
fcmovnu
into
int3
fists
fidivrl
out
repnz
cli
fcomp
sarl
ret
jmp
into
repz
sub
aam
enter
cmp
fstpt
sub
out
loopne
ficoms
iret
rcl
cmc
shl
fmul
ds
cld
sar
fcmovu
xchg
fmul
in
into
lea
fnstenv
jmp
iret
in
jmp
shl
ds
in
fcomi
fsubp
in
xchg
lea
repz
aam
cld
fmul
cmp
loope
call
addl
mov
mov
aaa
cli
out
in
clc
rcl
sti
fdiv
not
out
test
hlt
repnz
ljmp
std
ljmp
in
xchg
lea
subl
jmp
rcl
enter
fldl
push
xchg
lcall
jle
add
into
nop
out
clc
rol
repz
and
aad
faddp
sbb
xchg
mov
stc
ss
out
shll
aas
aad
in
in
cld
rolb
mov
loopne
ror
cmp
aaa
out
out
sar
jmp
out
cmp
loopne
loopne
iret
lock
and
fldln2
fstpt
stc
xlat
aam
cmp
out
test
shr
lret
decb
ljmp
ljmp
rcl
sub
call
mov
fisttpl
mov
cmc
jmp
in
cmp
fidivrs
in
call
enter
test
leave
in
nop
lret
shl
repz
in
ds
std
fdivr
loop
test
jmp
stc
sti
stc
xchg
lock
hlt
xor
not
repnz
stc
std
cmp
std
test
out
aad
lret
jmp
jmp
loopne
ror
repnz
in
out
out
out
cli
aas
lock
out
rcl
out
mov
in
fmul
xchg
shlb
xor
cmp
cmp
fdecstp
sar
repz
out
jmp
jecxz
dec
in
sbb
into
enter
fsubr
icebp
jmp
cmp
xchg
mov
aas
jmp
int
shr
jmp
jecxz
xor
aad
aam
ds
rol
cmp
mov
orb
into
rorl
ss
in
cmp
leave
ds
out
jmp
jecxz
fdiv
into
cld
nop
mov
adc
repz
ret
lret
out
iret
cmp
aas
ret
icebp
roll
test
jecxz
jmp
fimull
call
aam
cmp
lock
fcmovu
rcl
aas
xchg
mov
jmp
xchg
repnz
aam
ljmp
lret
iret
cld
inc
call
les
jmp
ljmp
aad
icebp
int3
xor
cmp
fmull
clc
loop
incb
aam
in
enter
int3
rcl
loopne
sbb
cli
les
xor
adc
mov
andl
add
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
pushl
call
jmp
adc
mov
push
addl
push
test
je
mov
mov
xor
mov
sbb
jmp
xlat
aad
ror
cmpsb
xchg
jg
into
outsl
or
cmp
jle
xlat
into
mov
iret
aaa
call
sbb
aas
incl
fadds
in
shll
in
in
xor
cld
rcl
aas
shl
out
lret
jmp
ljmp
ss
aam
in
fidivrs
int3
clc
repnz
ret
xlat
enter
in
mov
shl
xor
cmp
rcr
int3
rcr
out
fcmovnu
lock
ljmp
in
into
sar
cli
out
fcomp
cmp
shr
aam
push
lds
sub
sti
mov
cld
in
mov
lret
int3
cmp
call
cmp
fldpi
clc
adc
loopne
jecxz
call
jmp
call
sar
jmp
std
fcmovnbe
test
loop
mov
cmc
out
loopne
out
xor
jmp
in
xor
fstpt
loopne
add
test
nop
or
xlat
hlt
ss
repnz
loop
xor
shr
mov
jmp
mov
cld
cmc
stc
out
sti
lock
ds
shl
loop
out
out
int3
jmp
in
loope
iret
xor
fxch
iret
jecxz
iret
fdivp
xchg
xchg
int3
test
repz
not
in
repnz
cmp
fmul
in
out
fadd
ds
jmp
xchg
ljmp
cli
lock
fcomi
cmp
xchg
xchg
clc
in
in
jecxz
xchg
mov
in
lret
fnstsw
in
cmp
lret
out
int3
leave
in
xchg
or
ljmp
iret
fdivrs
and
into
rol
fsubr
add
sar
xchg
fldl
enter
loope,pt
sar
out
cld
cmp
mov
call
hlt
jmp
out
loopne
fdecstp
aas
jecxz
sar
enter
mov
jmp
stc
stc
lea
in
xlat
ret
idiv
xor
adc
rcl
fmull
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jb
sub
mov
add
add
sbb
jmp
int3
fstp
int
ficoml
fstps
mov
add
add
cli
ret
test
loope
sub
mov
xor
fnop
cld
clc
fcom
repnz
shr
test
test
cmp
and
rcr
nop
lret
call
aam
in
cli
lret
into
rcr
cmp
ret
idivb
loope
fcomp
or
dec
xchg
in
in
shl
out
jmp
rcr
sti
rcl
test
shl
ret
neg
sbb
popl
cli
cmp
stc
ljmp
std
xlat
rcl
jmp
mov
iret
lret
mov
iret
rcl
call
cli
aam
repnz
xor
and
sti
lret
jmp
test
cli
leave
sar
jmp
rcl
std
fsincos
faddp
cmc
idiv
jmp
loopne
loopne
clc
aad
clc
clc
leave
div
aas
out
cli
shr
stc
test
enter
jmp
and
cld
loop
test
ror
into
sarl
fidivl
call
ljmp
xor
ret
fnstenv
clc
shl
fsubrp
aad
cli
aam
mov
int3
mov
call
cs
call
cli
or
repz
xchg
call
mov
leave
cld
in
ds
into
test
cmp
loopne
in
in
rolb
mov
cmc
jmp
out
cmp
in
iret
addl
loopne
les
in
out
fdivr
out
hlt
lock
xor
aaa
jmp
xor
in
fcmovu
in
ljmp
out
lock
in
xlat
ret
repnz
fcmove
shr
int3
out
test
mov
xlat
aam
jecxz
jmp
adcl
out
idiv
cmp
jmp
shl
icebp
cld
fimull
cmc
lret
addl
shr
lret
std
aaa
cld
loope
in
loop
faddl
xchg
and
jecxz
xchg
xchg
cld
lret
out
xor
sti
ret
mul
stc
xchg
test
lret
loop
ljmp
iret
ss
aas
fidivl
fnstcw
mov
sbb
jmp
rol
xlat
lret
rcr
push
adc
lds
mov
cmp
jle
repnz
xchg
in
loopne
out
cli
xchg
sti
icebp
into
jecxz
div
repnz
ss
lret
aam
test
fst
rcr
test
xchg
out
call
int
in
call
std
in
fdivs
aad
out
in
roll
or
mov
divb
leave
stc
lret
fxch
rorl
cld
lret
xchg
in
ror
icebp
cmp
das
iret
cmc
xorl
rcl
addl
dec
nop
sub
cmc
xor
fpatan
add
repnz
shl
lds
xchg
aam
repz
in
out
idiv
out
cmc
out
in
loope
ret
out
enter
iret
jecxz
rcl
in
in
shlb
inc
call
loop
shl
lock
fdivr
mov
call
int3
jmp
enter
sarb
stc
out
cmp
cmp
jecxz
repnz
fucompp
clc
xchg
loop
xchg
in
decb
cmp
out
sarb
fidivrl
ljmp
std
test
fistl
aad
shl
std
in
std
cmp
hlt
rcr
icebp
repnz
jmp
ljmp
loop
icebp
in
xor
stc
fcomi
xor
fst
std
in
aam
fiadds
xchg
loopne
icebp
repz
iret
div
cmp
fcmovnbe
iret
int3
aad
ret
out
loopne
rorl
lret
test
int3
icebp
xchg
out
xor
in
repz
rcr
shlb
fmulp
call
push
jecxz
in
in
sub
repnz
ss
icebp
shl
fildl
cli
or
in
mov
adc
in
mov
loopne
aaa
out
hlt
ds
fildl
xor
leave
sti
testb
decl
xor
out
in
sar
cmp
loopne
xor
repz
jecxz
xchg
repnz
jmp
fdiv
jmp
xor
out
cmp
call
jmp
xchg
cmc
fmulp
ljmp
push
adc
adc
sub
xor
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
movzwl
add
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
mov
mov
xorl
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
jmp
iret
lret
rcr
aad
enter
mov
and
add
add
cmp
div
idivb
cmp
icebp
fcom
fadds
out
loop
std
xchg
xchg
loope
loope
jecxz
neg
jmp
enter
lock
fdivrs
ret
jmp
fiaddl
ljmp
int3
shl
cmp
fucomip
iret
int3
ljmp
ret
mov
sti
jmp
roll
sub
cmp
das
sarb
cmp
xchg
into
out
fucomip
loopne
xchg
jmp
out
aaa
cmc
cmc
cmp
mov
test
ret
int
add
jmp
ror
shr
fsubrs
fcomi
repz
in
loop
shl
out
clc
call
lret
cld
int3
lea
imul
enter
rcr
clc
repz
jmp
mov
xchg
xor
cmp
xor
loope
jecxz
hlt
cmp
cld
incl
fstp
orl
cmp
das
jmp
shr
test
mov
aam
decl
dec
iret
nop
in
out
fsubr
std
shlb
out
shl
in
in
rcl
imul
jmp
sti
out
out
mov
aam
rcr
cs
div
rcr
shl
test
stc
aas
shl
ljmp
sub
adcl
fdivs
ljmp
repz
xlat
jecxz
lock
leave
jmp
lret
loopne
cmp
fcomi
icebp
rcl
fucomi
aad
cli
decb
mov
nop
repnz
mov
sbb
rol
ss
lret
div
sarl
aad
test
shl
faddl
inc
fsub
xor
cmp
loop
rcl
ret
loope
cmp
lea
repnz
out
std
xor
std
xlat
in
hlt
clc
not
xchg
leave
addb
jecxz
repz
xor
fcomp
div
loop
std
fcmovnbe
xlat
cld
rorl
loopne
xor
cmp
jmp
jmp
xor
out
cmc
cld
jmp
sti
loope
out
lock
add
mov
mov
movl
je
movl
cmpl
je
cmpl
jne
pushl
push
call
xor
add
dec
mov
jmp
adcl
mov
xor
decl
jmp
rol
xlat
aad
fstp
lds
fimuls
js
outsb
dec
fisubs
add
add
fsubrs
in
f2xm1
int3
neg
out
cmp
cli
out
aad
les
lock
repnz
xchg
repnz
aam
repnz
fidivrl
fdivr
std
faddp
rcl
in
ljmp
out
xchg
sar
in
out
hlt
cmp
ss
cmp
rolb
mov
mov
into
in
int3
int3
fmull
int3
fxam
icebp
lret
rcr
testl
addl
icebp
ljmp
out
ss
aad
cld
test
roll
fldl
xchg
xor
rol
iret
cmp
aad
fcmovnu
cli
fcom
imul
mov
add
testl
xor
icebp
xor
xor
int
aad
fcmovnbe
cmp
fsub
test
loopne
mov
loop
out
test
into
enter
repz
fptan
rol
loope
and
mov
into
in
in
loop
ss
lret
enter
ljmp
sar
mov
mov
lret
lret
xor
jmp
hlt
into
neg
ss
mul
addb
stc
jmp
in
sub
leave
call
ror
ljmp
rcl
shl
out
fxch
fcomp
xchg
sar
call
fdiv
loope
into
test
jecxz
stc
cld
int3
jmp
xchg
loopne
clc
shr
lret
into
jmp
into
aad
in
xchg
sub
stc
lea
xor
jmp
cmp
aam
out
shr
cmc
fsub
test
cmc
leave
leave
xchg
lret
int3
test
out
out
int3
xor
xlat
lock
cli
testb
clc
jmp
xchg
in
loopne
lds
xor
jmp
aas
hlt
xchg
rolb
ljmp
aam
fld
xor
repz
clc
fcomip
int3
lret
out
loope
test
cld
jmp
leave
out
mov
repz
out
in
jmp
sub
lret
icebp
aas
iret
clc
std
repz
jecxz
call
movl
cmp
movl
jne
andl
pushl
xorl
call
mov
xor
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
xor
add
cmp
je
pushl
pushl
call
jmp
aam
fadd
fst
aam
add
jle
inc
mov
inc
cwtl
sub
jle
add
xchg
jecxz
int
xchg
in
sar
fdiv
clc
loopne
test
stc
test
test
orl
out
sub
int
out
enter
rcr
into
hlt
loopne
std
fucomp
in
stc
lret
jecxz
iret
shl
mov
repnz
xor
in
icebp
test
cmc
fmuls
xchg
subb
out
into
cmp
loop
out
xchg
clc
clc
mov
iret
ljmp
in
iret
xor
icebp
cmp
ror
in
in
mov
jmp
call
fists
fdivs
fcmove
cld
shl
cmp
cmc
sbb
stc
jecxz
out
in
iret
int3
test
xor
ljmp
cmp
adc
mov
loop
xchg
icebp
loopne
loope
out
into
int
ds
icebp
aad
in
movb
ret
out
addb
in
out
ljmp
iret
aas
aam
add
aad
cld
lret
clc
loope
enter
aam
out
out
xor
hlt
cmp
sarl
enter
fmul
fsub
and
loope
hlt
aaa
cmp
enter
fdivrp
cmp
int
icebp
jmp
mov
repz
jmp
out
loope
cmp
xor
aas
fcos
fcomi
sar
in
clc
cmp
xlat
jmp
out
lock
in
hlt
lret
icebp
sar
iret
aad
testb
test
fmull
aam
in
leave
aam
cmp
in
cmp
xlat
shl
jecxz
ftst
movb
dec
ljmp
ror
ror
cmp
out
out
ds
clc
loop
loope
jmp
shr
out
clc
aad
idivl
loope
fsub
in
xchg
xlat
cmp
jmp
jecxz
shl
cmp
loopne
cmp
cmp
xchg
fld
loope
addl
xor
cli
out
icebp
out
int
ds
aas
cli
aam
shl
fmuls
cld
mov
xor
add
jmp
rcl
int
ffree
fstpl
lret
and
cmp
jle
call
in
jmp
xchg
and
not
out
sar
cmp
div
fucom
xor
incb
decb
xchg
roll
cmp
int
cli
cmc
cmp
cmp
repnz
mul
fxch
fucomp
cld
jmp
fdiv
ljmp
add
cmp
ds
cld
fucomp
out
push
xchg
addl
cld
cmp
iret
fcmovu
repz
out
jecxz
rol
enter
cli
test
mov
in
loop
lret
into
cmp
in
loope,pt
sbb
mul
ljmp
test
testb
clc
aaa
out
ljmp
ret
call
orl
test
xor
shl
hlt
out
xor
sarl
xor
cld
leave
cmp
int3
std
xchg
enter
addb
fcom
in
idivb
int
rolb
enter
cli
int
out
xchg
les
ret
lock
cld
add
shl
jmp
testb
jmp
xor
shl
fcomp
xor
cmp
cld
loopne
sub
int3
rorb
shrl
jecxz
clc
lret
fcom
loope
fdivrs
repnz
out
clc
faddl
sti
fldl
lock
out
xor
cmp
test
fmulp
repnz
fldl2e
clc
out
in
repz
jmp
in
leave
ror
fdiv
loope
loop
cli
ret
enter
mov
mov
jmp
int3
repz
lock
ret
ret
mov
test
test
lock
sub
lret
in
fldz
shl
ljmp
mov
xlat
aad
out
cli
xchg
xorl
call
shr
icebp
loop
loopne
rcr
icebp
repnz
xchg
lock
cs
into
lret
in
ds
cmp
ret
test
lret
mov
jecxz
int3
mov
loop
call
leave
shl
sarl
cmpl
jg
add
mov
mov
jmp
int3
aas
rol
fst
fadd
ljmp
mov
cmp
jle
fdivp
vpaddusw
nop
leave
xor
lea
xor
out
xor
cmp
fadds
in
xlat
in
int3
xchg
in
loopne
out
loop
ror
cmp
out
lock
ret
and
hlt
int3
mov
int
into
test
out
leave
fsubr
xor
cmc
icebp
out
std
iret
loopne
shl
cmp
jecxz
cld
loop
sub
xchg
loopne
out
cmc
aad
stc
cmp
in
loope
cmc
out
xlat
ret
out
fisttps
cld
mov
das
aaa
sub
repnz
cli
call
int3
in
in
loopne
xchg
lock
cmp
in
repz
rcr
loope
xchg
cld
mov
lock
ss
jmp
aad
testb
sub
fmull
int3
out
stc
stc
repnz
out
imul
rcr
clc
fcomip
out
test
aad
enter
lock
lret
repz
not
repnz
cld
in
fdiv
loop
mov
lret
int
aam
xor
cmp
loop,pt
and
mov
rol
fcmovnbe
call
in
jecxz
cmp
cmp
clc
fnstcw
fadds
out
cld
push
clc
xchg
lret
nop
in
xor
xor
imul
ret
ret
call
ds
cmc
aam
in
in
cmp
xabort
lret
cld
fsub
loop
incb
std
fcmovu
stc
leave
fisttpll
imul
sar
out
test
hlt
aad
in
ds
cmp
clc
std
mov
test
jecxz
cld
mov
shl
neg
fucomi
into
cli
fstp
cmc
fmul
rcr
xchg
lret
enter
sti
orl
fldln2
in
cmp
sti
out
fdiv
aas
ret
fstpt
test
repnz
lret
out
out
test
xor
fcmovb
ss
neg
into
xlat
fdivr
aam
and
test
fld
xchg
in
aam
ljmp
leave
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
jmp
aas
ror
fcomp
fnstcw
dec
int
inc
stos
cwtl
mov
das
add
add
fdiv
std
xlat
flds
loopne
call
fmul
xchg
shl
lock
jmp
fadd
in
out
cmp
xchg
cld
xchg
mov
out
int
jecxz
hlt
in
fcomp
cld
aaa
xor
icebp
cmp
test
xrelease
add
xlat
mov
aad
loop
int
cmp
lock
iret
in
testb
test
int
fists
sub
lock
cmc
cmp
stc
ret
out
loope
test
adcb
into
cli
aaa
idivl
rol
cld
call
ds
clc
jmp
int
das
int3
repz
ljmp
loopne
loopne
ret
clc
cli
fneni(8087
out
and
int3
test
out
ret
cmc
icebp
ror
sub
out
out
cli
fdivrp
call
int
enter
loop
loop
xlat
xor
out
repz
cli
out
idiv
out
ret
ljmp
mov
in
xor
cmp
fsubp
fiaddl
loope
addl
addb
aam
hlt
xor
cmc
faddl
cmc
ret
fcmovb
ret
hlt
loop
jecxz
in
loope
shl
in
xlat
lock
sarl
cmc
incl
shl
sar
mov
sti
imul
nop
fsubr
xchg
out
das
sti
aad
enter
fdiv
loop
aaa
lock
out
loop
iret
nop
rorl
aam
in
rcr
repnz
fdiv
cmp
loop
fiaddl
xlat
test
nop
int3
loope
loop
fld1
ss
xor
jecxz
stc
stc
in
fucomip
test
cld
ret
cli
mov
cli
fldl
xlat
in
into
cmp
aam
ljmp
test
cmc
in
sti
neg
cld
enter
aam
call
cmp
sarb
out
ffreep
xor
bnd
ret
out
enter
in
out
nop
not
cmp
stc
div
cmp
mul
fiadds
in
or
fadd
mov
cmc
ror
mul
mov
mov
jmp
aas
xlat
xlat
rcl
ror
fld
cs
and
stc
es
xor
jle
add
in
xor
int
cmp
cmp
cmp
xor
ffree
fadd
jmp
lret
repz
out
repnz
cmp
std
shl
aam
mul
stc
mov
loopne
in
lret
mov
in
ret
lret
in
into
hlt
int
cmp
fdiv
std
and
loop
xchg
in
movl
repnz
cld
out
fdiv
cmp
std
cmp
clc
std
cli
ret
enter
in
cmc
xchg
xlat
icebp
ljmp
xlat
neg
in
fldl
sti
in
in
ljmp
aaa
aaa
cmp
clc
cld
and
cmp
jmp
iret
sti
mov
nop
fsubr
mov
ljmp
icebp
in
jmp
shl
stc
out
aad
xchg
into
and
cmp
out
cli
lret
call
loopne
clc
fsub
call
cld
leave
test
div
xor
xor
std
in
cmp
loopne
sbb
fdivrp
xchg
repz
cmc
roll
xor
cmp
cli
out
cld
rcr
test
out
out
rolb
icebp
ss
int
xlat
ss
faddl
xor
imul
fiaddl
call
in
lock
lret
aas
std
aad
loopne
loope,pt
loop
out
mov
jecxz
loope
shlb
out
rol
out
rcr
clc
adc
cli
xlat
lret
sti
ret
lock
call
test
hlt
std
ret
xlat
test
jmp
lret
enter
repnz
sbb
hlt
lret
int
sub
clc
cmp
ds
test
xchg
cli
int
into
aam
out
out
in
rcl
int
neg
lret
stc
or
mov
fldl
fmul
mov
xor
aaa
out
shr
lock
flds
std
ret
out
lock
test
lock
aaa
out
sarb
fcmovbe
cmc
out
movb
clc
decl
jmp
into
aam
xlat
int3
fcmovnbe
frstor
nop
jmp
pop
mov
add
mov
mov
out
clc
aaa
iret
jmp
loop
lret
int3
cmc
hlt
fcompp
sbb
fisttpll
std
mov
lret
call
hlt
rcl
shr
jecxz
loop
in
ret
call
mov
sub
sub
cmp
xor
div
out
cld
mov
filds
cld
in
loope
sub
not
stc
stc
cld
sbb
rol
mov
imul
ljmp
fidivrs
sarl
sar
out
lock
sti
fucomi
aam
aas
xchg
jecxz
xchg
std
lret
xchg
xchg
jecxz
aam
sarb
cmp
jmp
add
fst
leave
faddp
out
in
std
xchg
rcl
lock
aaa
fcomp
fdivrp
cmp
ds
sti
fcomip
xlat
loope
mov
lock
repz
shl
idivl
aad
aad
faddl
fcomp
mov
addl
xor
into
lret
xor
shl
out
ret
in
not
rcr
div
imul
mov
xchg
test
out
jmp
icebp
xlat
aam
leave
div
iret
cmp
fcmovnu
std
add
aad
cmp
in
std
hlt
in
lock
fdivr
cmp
aam
sbb
jmp
jmp
cld
rcl
aad
rcr
hlt
lret
stc
sar
xor
out
stc
xlat
int
stc
cmp
fldl
xchg
repnz
enter
cmc
cmp
aam
addl
fmul
rolb
xor
sub
test
out
ljmp
test
test
std
out
sti
sbb
out
sar
int
lock
fucom
loop
repz
out
std
in
ljmp
fidivrs
mov
lock
repnz
iret
xor
aam
rcl
iret
in
fprem
loopne
int
mov
test
out
lret
in
leave
cli
ss
iret
cmp
sti
out
xlat
stc
mov
int3
xchg
add
test
sti
leave
ljmp
iret
xacquire
inc
clc
mov
push
pushl
pushl
call
jmp
lret
rcl
fstp
xchg
sti
inc
in
lods
cld
cmp
je
add
add
fmul
lock
loope
loop
int
mov
lret
lock
faddl
add
fldl
xchg
out
out
ljmp
cmp
jecxz
shl
jmp
xlat
loop
mov
sti
loopne
loop
fcom
in
jmp
ljmp
shl
cmp
test
cmp
xabort
ffreep
call
mov
xlat
int
fmul
aad
jecxz
xchg
ljmp
mov
lret
adc
ss
call
std
sar
repnz
out
repz
ds
mov
fldz
sub
jecxz
out
lds
out
xor
aam
fstp
cmc
rcr
cmp
mov
fcmovne
fldl
out
in
test
cmp
fsub
shl
repz
in
lock
out
xor
shl
iret
loope
lock
clc
test
sbb
jecxz
sar
neg
std
fdiv
cmp
in
roll
loopne
fadd
ljmp
xor
ljmp
ss
aas
shl
aad
repnz
loopne
int3
test
int3
mov
int3
mov
lret
int
test
cmc
aas
mov
call
call
xchg
in
ret
in
out
ss
rcl
jecxz
xchg
rolb
xchg
mov
dec
ss
div
ljmp
shl
mov
testb
mov
ljmp
cmp
inc
in
cmp
mov
fimull
ss
into
fdivs
fmul
sub
cmp
xchg
xlat
out
xchg
ret
cld
lock
cmp
fnstsw
hlt
ret
out
clc
fadds
in
fcmovnu
mov
test
xor
xor
into
leave
xor
out
shl
out
fsubp
frndint
hlt
jecxz
jmp
into
xchg
fsub
out
fcmovne
divl
repz
f2xm1
fadd
loop
inc
cld
jmp
vshufpd
ror
adc
push
mov
cmp
jle
add
test
call
orb
orb
lret
cmp
fsub
xchg
test
sar
xchg
hlt
loope
cli
aad
cmc
cmp
hlt
fmul
out
int
xchg
fndisi(8087
fisttps
lret
orb
cld
xor
std
fistpll
aad
leave
ljmp
call
loope
ret
cli
call
repz
loopne
stc
stc
sti
lret
sti
mov
call
test
jecxz
into
xor
std
cmp
clc
out
int3
out
fdivr
ret
repz
jecxz
xchg
int3
filds
jecxz
lret
jmp
jmp
or
cld
test
call
rcr
ss
cmp
cld
repz
fdiv
adc
call
fldl
mov
jmp
icebp
iret
leave
cli
sti
std
shl
dec
test
roll
mov
nop
fdiv
sarb
test
cmp
div
fnop
add
xchg
iret
fsubr
loop
iret
shl
icebp
icebp
aad
cmp
cmp
loop
fdiv
imul
std
and
test
orb
call
fidivrs
sti
icebp
cmpl
loope
stc
loop
out
out
repz
fcmove
stc
ss
aas
clc
cli
loope
loop
rol
rol
les
lret
call
lret
ds
sub
jecxz
cld
rcr
sti
sti
mov
jecxz
mov
xor
out
aad
repz
repz
fcomi
sti
in
les
test
int3
out
shr
in
call
fcmovnbe
ds
clc
jmp
sub
call
test
fdivr
cmpl
hlt
ret
out
sbb
in
mov
xchg
call
int
div
leave
icebp
jecxz
fistpll
loop
rol
clc
dec
loopne
std
lret
sub
ret
fucomp
rcl
mov
xor
jmp
int3
aas
ret
sbb
roll
jae
call
add
fmul
bnd
sar
ret
mov
int3
in
in
aad
into
in
cmc
aaa
lock
cmp
stc
xchg
lret
mov
mov
fld
cmp
cld
fdiv
sti
int3
loop
clc
aas
xchg
sbb
enter
int
int3
xor
repz
call
out
sub
lock
fmull
jmp
shr
nop
in
jmp
shl
repnz
ljmp
fisttpll
fcmovnb
enter
leave
lret
rcl
xlat
hlt
xor
cmp
cmp
fucom
rol
shl
test
in
fmul
fsub
icebp
xchg
out
call
sarb
jmp
ret
loopne
jmp
jmp
lret
cmp
adc
test
ss
rcr
cli
loopne
sti
sarb
mov
lret
jecxz
nop
loop
in
jmp
fsqrt
and
in
ret
fcmove
lret
mov
out
int
xchg
aam
in
ret
lret
enter
int
sti
bnd
dec
into
ds
loope
sti
flds
nop
std
test
ss
idiv
fdivr
cmpl
rol
std
mov
xchg
into
lret
jmp
out
cmp
xlat
sar
cmp
fptan
std
rcl
rol
in
orb
mul
in
xor
out
xor
lret
std
cmc
loop
cmc
cmc
add
cld
hlt
test
fcmovnb
mov
mov
hlt
shlb
shl
repnz
test
fdivrl
test
cli
cld
int3
iret
sti
jecxz
int
shl
hlt
stc
xor
hlt
call
sar
int
aad
shl
leave
fscale
mov
xchg
xchg
fdiv
in
fldlg2
repnz
stc
cld
aaa
loop
in
test
shl
out
cli
test
lock
sub
in
fxch
leave
fmul
sub
in
les
in
testl
jmp
jmp
aam
shr
loop
sar
loop
loopne
cmp
out
mov
out
not
flds
ret
cmp
jmp
rol
rcl
rol
aad
sahf
xor
scas
cld
cwtl
in
cmp
jle
add
fcmovnbe
cld
enter
cmp
sti
adc
orb
sbb
iret
xor
xor
ds
int3
aaa
mul
aas
in
movl
mov
fndisi(8087
fists
out
bnd
aas
iret
std
into
mov
in
faddp
enter
xchg
lock
xor
out
icebp
fpatan
icebp
fsub
in
cmc
cmp
rolb
fildl
ret
in
repz
cmp
call
xor
repz
sbb
in
fimull
xchg
out
icebp
xor
in
cli
div
fistpll
in
aas
rolb
enter
loop
shr
aad
into
fcomp
out
stc
fildl
aad
mov
mov
fiadds
repz
rcl
int3
ljmp
ds
cmc
fsubp
in
mov
addb
int3
neg
icebp
fidivrl
jmp
fxch
cmp
jmp
fcmovne
sub
mov
shl
lret
cld
xor
cmp
jmp
out
into
aad
fcmovb
in
loopne
xlat
test
in
xor
xor
ss
into
icebp
and
and
in
jmp
out
jecxz
in
loopne
xor
ret
in
ret
cmp
xor
aaa
jmp
cmp
shl
jmp
mov
shl
xlat
jecxz
out
cmp
loope
sar
xchg
mov
ret
adc
in
leave
fsin
rorb
aad
fcmovnbe
in
cmp
cld
aad
aam
fsubp
std
mov
std
stc
xchg
loop
sti
mov
int
xor
aaa
cmp
cmp
jmp
add
movb
xchg
cld
call
cmp
sub
sar
lret
lock
loop
loope
or
ljmp
leave
lret
addb
test
sub
fisttpll
in
xor
call
loop
cli
test
cli
and
rol
in
int
loop
mov
int
jne
jmp
aad
mov
mov
sbb
pop
add
add
icebp
out
xor
aaa
neg
fld
push
icebp
jmp
sti
call
jmp
xor
rcr
lret
xor
in
in
out
jmp
in
stc
sti
out
mov
fsubp
xchg
mov
lret
stc
repnz
divb
xor
adc
xlat
neg
in
out
lret
loop
mul
cmp
cld
lock
sti
ret
icebp
addl
in
sar
xchg
rcl
lock
iret
in
enter
jecxz
lret
testb
xchg
jmp
aas
lret
out
loop
shr
clc
out
cmp
cmp
fdiv
sarl
aam
aam
faddl
repnz
out
lret
shlb
xlat
xor
lret
int3
rcl
aad
repnz
movl
sbb
aad
fxtract
cli
icebp
xor
cmp
shl
enter
vphaddubd
xchg
xor
cli
divl
cld
jmp
fucomi
in
fcmovb
sti
out
cld
mov
test
int
loopne
ljmp
xor
cmp
iret
repnz
shl
jecxz
repnz
lret
int
int
mov
repnz
idiv
into
fildl
mul
div
ffree
sti
mov
in
jmp
cmc
xlat
in
cmp
in
out
sar
out
sti
out
fadd
iret
rolb
mov
xchg
call
shl
in
aaa
lret
into
fsubr
shr
cmp
xchg
xchg
into
loope
repnz
out
jecxz
cmp
aaa
cmp
out
idiv
shl
shl
jmp
call
xchg
test
clc
enter
fsubr
iret
rol
xlat
fnstcw
in
jmp
icebp
mov
mov
int
iret
cmc
xor
cmp
fdivp
fst
dec
roll
jecxz
call
hlt
iret
iret
idivl
ss
in
testb
aam
mov
lret
fldl
cmc
aam
xor
hlt
clc
icebp
enter
mul
ret
fadds
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
jmp
leave
aam
aad
int
fisttpll
scas
mov
lcall
add
fildl
aam
jecxz
mul
aad
fucom
cmp
lock
imul
mov
out
xchg
call
aaa
sti
cmp
int3
cli
test
loopne
ret
repnz
ret
fld1
mov
shl
fiaddl
fdivs
aam
shl
cmp
ror
dec
cmc
incb
lret
std
iret
out
std
int
mov
int
jmp
ror
fsin
lock
clc
rcr
ss
call
sti
std
aad
loop
fldz
in
aam
in
loop
clc
xor
vpsubusb
ds
loope
aad
fdiv
cmp
fucomi
out
fst
aad
fdivs
cmp
xor
cmp
out
fcmovnb
cmp
jecxz
fdiv
in
loop
int3
fcoml
int
xlat
aaa
xlat
repnz
int3
cmp
cmp
roll
int3
in
or
lock
ror
jmp
cmp
int3
cmp
int
out
lock
hlt
xor
jmp
loope
cld
xchg
iret
out
repz
cmp
idivb
ss
fdivp
sti
in
lea
in
test
int3
out
ret
ret
not
clc
cmp
out
stc
fdivp
sub
aas
sarb
lock
xchg
leave
into
xor
xor
out
repz
shl
cmp
in
stc
out
clc
mov
imul
xchg
iret
mov
not
sub
call
iret
fcos
ffree
ret
jecxz
in
enter
jecxz
cmc
jecxz
icebp
jmp
idiv
ror
cmp
cli
cmp
call
ret
xchg
lret
ret
aad
aam
cli
ljmp
repz
xlat
fildl
mov
test
mov
xchg
out
enter
leave
clc
cmp
in
repnz
out
fcomip
loopne
fucomi
rcl
mov
clc
in
lds
ds
fyl2x
cmp
in
in
xor
ret
addl
fidivrs
out
aam
lret
iret
cmc
jmp
cmp
call
fsubp
mov
adc
int3
in
test
sub
in
out
aam
dec
or
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
enter
fcmovu
int3
aam
in
add
adcl
add
fisttpl
in
test
mov
aam
ror
hlt
ss
xor
cmc
fucomip
ljmp
test
dec
in
mov
shl
sbb
icebp
ss
fidivrs
rcr
fld
fnclex
rolb
lret
std
adcl
enter
clc
stc
fmulp
jmp
into
repz
cmp
cmp
mov
ror
mov
lock
xor
lret
cmp
xlat
cmc
fcmovu
call
xchg
xchg
lock
stc
ret
ss
rol
cmp
test
rcr
rorb
mov
mov
lret
sub
fdiv
shr
xor
out
shl
shl
fadd
fmull
nop
xchg
rcr
mov
hlt
sub
ror
int
cmp
xlat
repz
addl
ret
out
mov
repz
aam
cmp
div
aam
cli
cmp
rol
xchg
lock
in
mov
in
xor
cmc
shr
xor
clc
ljmp
repz
shl
int3
fimull
mov
icebp
aad
jmp
shr
not
fadds
enter
clc
fsqrt
lret
ror
loope
leave
lret
hlt
xor
call
std
loop
repz
cmc
jmp
jecxz
xchg
into
into
sub
clc
jecxz
shlb
cmp
ds
sarb
roll
cmp
ljmp
sub
xor
xor
repnz
jecxz
call
mov
mov
les
xor
aad
fidivrs
cmc
jmp
test
repz
fucomi
stc
in
in
in
xchg
lds
xor
icebp
xor
int3
xlat
std
in
fnstcw
aam
test
fsubp
frstpm(287
xchg
ljmp
shr
repz
cmc
repz
ret
sar
aad
sar
jecxz
jecxz
faddl
aam
rcl
cld
rcr
cmp
aam
into
aad
sti
cld
test
mov
lret
mov
test
shl
in
ljmp
aaa
rcrb
jmp
aas
int3
mov
std
int
pushf
rorb
add
add
test
in
repz
cmc
out
clc
fcmovu
xchg
rolb
ret
jmp
iret
cmp
sar
icebp
ret
roll
and
cli
loopne
rcr
jecxz
fnstcw
int
repnz
fucom
testb
addb
lret
out
enter
xor
iret
leave
enter
aas
int
out
hlt
ds
aad
test
les
lret
jecxz
iret
imul
neg
lret
ret
and
cli
stc
sar
ret
mov
in
lea
cmp
cmp
out
aaa
lock
shl
loop
mov
jmp
out
ljmp
rclb
xor
fdiv
shl
rcr
out
faddp
std
test
mov
lds
out
xor
ss
fdivr
loope
ret
out
test
out
out
and
out
xor
sar
xor
std
cld
xlat
cmp
lock
mov
ret
ret
incl
mov
cmc
xchg
in
in
ljmp
ffreep
idiv
mov
test
mov
lds
fadd
lret
cld
int
ljmp
in
testl
sub
fld
not
sti
fst
lret
enter
std
iret
cld
test
test
sbb
test
orb
in
fucomp
lock
sti
mul
fscale
lock
orb
call
std
loope
mov
fidivrl
shll
and
incb
cli
mov
lds
xchg
test
fnsave
fst
lock
cmp
mov
in
lret
out
lret
lock
lock
sarl
idiv
filds
fmul
out
sub
fsubr
aam
stc
out
xor
std
xor
loopne
loop
cli
fisttpll
mov
shl
xchg
rcr
ss
xor
loope,pt
clc
rol
addl
int
shl
int
neg
cmp
flds
add
add
lret
int3
fcmovnu
mov
pusha
xchg
sbb
inc
movl
jle
lret
out
hlt
cmc
idivb
aad
ds
fucomip
jmp
ljmp
inc
sub
cmp
int3
lret
call
and
mov
testl
icebp
mov
out
shl
shll
enter
std
stc
xor
and
test
jmp
div
loopne
rol
sarb
fiaddl
fdivr
xchg
stc
in
ffreep
out
fldl
lret
ret
xor
iret
enter
cmp
repnz
enter
fcomip
rcr
xchg
xor
in
divb
call
stc
int
loopne
cmpl
and
iret
icebp
lret
jmp
rcl
lret
lret
cmp
xlat
ds
icebp
adc
loopne
into
or
test
ljmp
xor
iret
fdiv
repz
mov
adc
clc
jmp
test
xchg
in
repnz
xor
fucomip
neg
fdivrl
fadds
decl
iret
repz
fdivrs
rol
rcr
aam
in
loopne
call
in
test
jecxz
imul
fiaddl
out
fisttpll
sbb
lock
cmc
in
sub
enter
repz
fsubp
xlat
hlt
fsub
std
aas
loop
jecxz
std
std
out
leave
loop
mov
aam
cmp
ror
out
std
addb
jmp
fiaddl
shl
ret
lock
repnz
fsubp
sbb
cmp
out
out
sub
out
in
lret
call
into
in
ror
aad
jmp
enter
into
mov
aad
jmp
aam
shl
out
hlt
aaa
cli
fcomip
jmp
fsub
iret
fists
xor
repnz
jmp
divl
fucomip
test
loop
int3
xlat
cli
ret
mov
xchg
int
leave
rcl
lret
lock
repnz
addb
leave
cli
lock
in
scas
shrl
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
mov
rcl
ror
fnstcw
lret
call
lret
cmp
jle
xor
iret
ret
clc
in
jmp
iret
cmp
ds
call
orb
int3
out
jecxz
ret
clc
stc
test
incb
fcmovnb
mov
int
xchg
cld
xchg
xchg
test
out
icebp
clc
out
jmp
in
ffree
add
cli
xlat
in
imul
sub
icebp
addl
sti
fcmovnb
leave
or
aad
enter
lret
jecxz
out
lret
leave
aam
shlb
out
cmp
in
not
add
out
idiv
ffree
adcl
call
stc
int3
out
cli
and
out
fdivp
mov
out
loopne
loope
fmul
xchg
jecxz
enter
std
leave
in
jmp
jmp
faddl
cli
sbb
in
sub
fdivp
ljmp
int
repz
cmp
aam
loop
ret
test
xchg
in
int
int3
out
in
fidivrl
int3
hlt
xor
fdecstp
cmp
cld
addl
imul
iret
icebp
int3
xor
in
cmc
cmc
cmp
cld
testb
stc
testl
lea
aad
aam
fnstcw
sbb
fadd
cld
std
sti
mov
mov
nop
jecxz
xchg
ljmp
ljmp
jecxz
xlat
sarb
aad
cmc
mov
iret
sbb
in
repnz
int3
fadd
fdiv
aaa
jmp
shl
fcmovb
ljmp
cld
xor
rcl
out
imul
in
in
sar
in
rcr
cmc
cli
in
cld
std
jecxz
clc
aad
rorl
loope
jmp
lock
out
stc
loopne
jmp
cmp
fucomp
xchg
xor
cmc
cmp
fmulp
cmc
in
fcomp
inc
fdivp
flds
fdivr
and
in
rol
cmp
sar
jmp
fstpt
rcr
fcmovnbe
sti
fucomip
mov
jmp
ficoms
ss
cli
jmp
fildl
xchg
rol
imul
mov
jmp
aam
int
int
aam
xchg
inc
lret
inc
cmp
add
add
jmp
into
aad
xor
enter
rcr
fxch
cmp
xor
fimull
jecxz
stc
jmp
cmc
das
out
lock
out
fdiv
iret
fnstsw
aam
xlat
cli
jecxz
ljmp
jecxz
mov
ret
out
in
sti
iret
xlat
test
aam
xchg
in
test
cmc
leave
lret
loopne
fisttpl
hlt
xor
in
cmp
fnsave
ss
cli
cmp
out
lock
jecxz
xchg
out
ljmp
leave
hlt
out
int
rol
repz
stc
sar
test
in
test
in
clc
roll
shll
jecxz
xlat
shl
xor
cld
std
ret
cmp
jecxz
clc
testb
icebp
out
hlt
loope
call
cmp
sarb
loope
cmp
ret
fidivrs
int3
lret
sar
sti
int3
xchg
in
fiadds
cmc
xor
fcom
cmp
icebp
iret
cmp
loopne
or
enter
sbb
xchg
nop
mov
lock
leave
icebp
fdiv
out
fidivrl
aad
fxam
test
imul
std
faddp
rorb
add
in
cmp
repz
repz
in
jmp
ljmp
lock
call
cmp
out
cld
int
cmp
xlat
aaa
aad
rolb
in
mov
shl
imul
lret
fcmovbe
hlt
sti
ds
rcr
std
aad
lret
clc
faddl
call
fdiv
aad
fdivr
ljmp
incb
fildl
mov
nop
ljmp
fcom
lret
iret
and
cmp
in
sbb
loope
in
lock
out
ljmp
clc
leave
loope
fxch
fcmovne
fcomip
out
in
out
call
mov
loop
lret
jmp
std
int
aam
sar
loop
roll
jmp
loopne
call
les
in
fdivrs
jmp
std
aad
test
lock
xchg
loop
repz
enter
xor
enter
jecxz
cmc
ret
roll
or
xor
jmp
rcr
int
stos
outsl
int3
nop
cmp
aam
repnz
add
add
mov
ret
in
mov
ret
mov
fdivs
xlat
in
hlt
fsubr
repz
repnz
fchs
ret
call
ret
not
int
xchg
repz
fdivl
repnz
hlt
leave
loopne
ds
fistpll
shr
xchg
mov
fucom
lret
decb
leave
out
into
in
hlt
ljmp
mov
fcomp
aam
fucomp
ljmp
xlat
mul
xor
lret
div
cmp
clc
iret
cmp
stc
jmp
in
fistl
int3
sub
std
into
enter
ror
clc
fildl
jmp
shl
lock
out
mov
ror
stc
xlat
cmp
int
cmc
test
stc
xchg
xchg
lret
adc
jmp
loopne
out
fcmovbe
cmp
cli
repz
cmc
in
repnz
aam
rcl
cmc
xchg
loope
aad
hlt
call
xlat
cld
jmp
in
rol
and
sub
repnz
jecxz
fldpi
mul
test
into
out
xlat
call
test
int
mov
loopne
fstl
cmp
fidivrl
in
repnz
lds
sbb
jmp
jmp
in
lock
xor
mul
sti
fneni(8087
out
cld
lret
jmp
ljmp
lret
jecxz
cmc
rol
int
icebp
aam
cmp
lock
aad
cmc
cli
loop
addb
lock
hlt
aam
cmp
addb
clc
and
mov
out
out
in
sub
in
sti
leave
cmp
fst
lock
and
ffreep
fsubp
sbb
xchg
clc
iret
ljmp
push
roll
in
test
lock
xor
int3
cli
lret
repnz
cmp
clc
out
rcl
xor
enter
sti
fld1
cli
out
shl
lret
ror
int3
repnz
fstpt
hlt
sar
in
cmp
not
repz
mov
out
incl
in
int
fadd
shlb
cmp
lret
cmp
jmp
ret
xlat
fmul
fmul
rcr
test
ljmp
cmp
jle
fyl2x
ds
fld
out
mov
in
mov
and
out
in
aad
ljmp
test
fisttps
mov
call
stc
jecxz
lret
iret
cmp
in
ljmp
ret
fcmovnbe
int
repnz
mov
stc
cmp
loopne
roll
icebp
mov
out
test
std
ljmp
shl
cmp
int
cmp
aam
aam
cmp
stc
xchg
shr
into
out
lret
aad
iret
clc
lock
out
fdivrp
incl
fst
xchg
stc
fucomip
addb
rcl
repnz
xlat
shl
cmp
enter
or
rorb
xlat
out
fcmovbe
loopne
call
stc
int3
cmp
cld
cmp
lock
ret
aam
cld
out
sti
lret
mov
fmul
enter
aas
ror
cmc
fprem
test
fsubrp
out
mov
in
aaa
shr
repz
aam
sti
adc
cmp
addb
fiaddl
xchg
mov
mov
not
rcr
cmp
sarb
loope
fcmovb
testl
repnz
cmp
clc
cmp
xchg
cld
std
lret
fucomip
xchg
adc
icebp
xchg
xor
aad
icebp
call
out
int
fstpt
in
fcmovu
out
nop
ror
orl
into
cmp
call
ss
ret
jmp
fmul
fmul
xchg
in
test
ljmp
call
cmp
repnz
std
jecxz
ret
mov
std
shr
xchg
loope
loopne
xor
call
in
into
repnz
fdiv
ret
call
sti
nop
orl
xlat
lret
xor
aad
aad
rcr
cmc
jecxz
aad
lds
or
incl
repz
out
aam
aam
cli
test
test
ret
repz
addb
orb
cmp
std
xor
test
pop
add
mov
jmp
rcl
leave
int3
leave
fldt
sub
xor
add
add
cmp
icebp
std
out
fxch
aam
call
mov
mov
fdivp
in
loope
lds
int
xor
out
jmp
mul
cmp
call
cld
loopne
lret
add
mov
lret
aaa
lock
repz
loopne
cli
cmp
xchg
fdiv
fnclex
loopne
leave
loopne
jmp
loopne
xor
shl
lret
shr
call
out
fdiv
rcr
xchg
stc
and
fldl2t
ror
mov
out
clc
int
int
xlat
cmp
iret
std
cmp
rol
fsub
fcmovnu
cmp
std
fists
jmp
fcom
out
jmp
iret
shl
aas
repnz
repnz
jecxz
test
fsubrp
lret
in
sti
mov
icebp
xchg
ror
divl
cmc
aam
in
sti
cmp
cmp
int3
in
les
mov
out
std
in
test
mov
int3
cmc
in
out
idivb
lock
lock
loop
hlt
in
idiv
rorl
lea
ror
sar
fdivrs
sti
shr
jmp
aas
out
test
enter
call
icebp
les
aaa
call
cmc
cmp
iret
adc
loop
mov
call
filds
iret
aaa
aam
repz
xor
cmp
addb
mov
jmp
mov
jmp
aaa
fcmovne
hlt
xor
ret
sar
aam
mov
lret
out
out
aaa
xor
lret
xor
cld
in
cmp
lret
ss
inc
out
ljmp
in
sti
test
jmp
shl
aam
xor
adc
sti
int
stc
out
xor
in
lret
lret
cmp
std
xor
into
cmp
fiaddl
call
ljmp
into
iret
cli
xlat
cmc
shr
into
cmp
hlt
rorl
mul
test
sub
stc
lret
cmp
out
loop
icebp
clc
fdivrp
fstp
rol
mov
ljmp
leave
out
ror
ljmp
test
fcom
out
call
out
mov
xchg
mov
mov
mov
jmp
lret
ror
fstp
ffree
pop
fiadds
mov
cmp
jle
aad
aad
cmp
fdivrp
in
loopne
jmp
out
cld
movl
jmp
dec
lock
cli
cmp
aaa
cld
lock
sti
loopne
in
fucomi
jmp
ffreep
int3
in
iret
out
xor
xor
out
std
repnz
ror
ret
out
mov
fisttps
fcomip
mov
sub
repnz
stc
loopne
fdivrp
ret
out
roll
int3
ffree
cli
ret
mov
fnstenv
jmp
jmp
rcr
jmp
not
in
fdivr
mul
neg
test
ror
shl
loop
rcr
jmp
lret
sbb
std
mov
fucompp
int
in
jecxz
loopne
ljmp
testb
jecxz
in
or
mov
shr
in
ss
fldl
stc
loope
fcmovnu
adc
loop
incb
mul
aaa
aad
enter
fadd
icebp
rcl
fcmovb
hlt
fxam
idiv
ret
lret
cmp
xor
aad
out
std
ljmp
loopne
cmp
cmc
addb
in
cli
int3
xchg
xchg
xor
fidivrs
cmp
loopne
in
lock
rolb
lock
std
decl
stc
xor
cmp
xor
filds
xlat
mov
lock
fcomip
mov
xor
lret
cmp
in
out
fdivrp
aam
ds
flds
leave
fcmovu
cld
cli
leave
repnz
aam
fcmovnbe
leave
iret
aas
cld
in
in
fcmovnu
out
neg
test
loopne
call
jecxz
xchg
icebp
rcl
ror
xor
xlat
in
loopne
int3
sarb
aad
xlat
aam
lret
mov
iret
xchg
enter
bnd
neg
fld
jecxz
sarl
fildl
out
call
xor
cmp
cmc
call
cmp
iret
ffreep
sbb
std
aas
hlt
ret
test
jmp
xchg
inc
cmc
xor
sti
cld
fsubrp
rcl
aas
ret
fyl2xp1
leave
call
mov
jmp
enter
int3
aam
pop
adc
into
repnz
xlat
add
add
fmul
ljmp
in
std
div
jmp
repnz
div
mov
xchg
xlat
mov
xchg
call
shr
cmp
hlt
lret
aas
cmp
sar
aad
lea
out
xchg
mov
sub
cmp
jecxz
aas
test
lret
clc
or
addb
cmp
int
out
rcr
int
xchg
cli
xchg
movb
jecxz
sub
jecxz
repnz
cmp
ret
fsub
fiadds
lret
rorl
repz
aad
ds
hlt
loop
mov
cli
out
out
mov
xor
xor
in
lret
leave
fucomp
ror
jmp
xchg
shl
fimull
into
xchg
in
fsubp
ljmp
lds
out
icebp
xor
int
roll
in
in
fdivr
repz
xchg
in
sub
cmp
and
sar
ret
xchg
call
addl
in
in
stc
fcmovnbe
fld
out
cmp
aam
repnz
loopne
xlat
mov
ret
mov
out
jecxz
out
clc
imull
fxch
repnz
rcl
loop
stc
xchg
rol
xchg
xchg
jecxz
ljmp
enter
fsub
leave
fldl
cli
hlt
std
orb
xchg
iret
and
iret
fsubr
in
test
enter
cmp
in
jmp
int3
mov
test
into
jmp
shr
in
cmp
ljmp
mov
orb
xor
out
test
iret
int3
clc
fst
cmpb
neg
out
ffreep
testb
jmp
lock
ss
xor
jmp
lret
out
lock
out
hlt
loope
clc
and
fmul
fcmovu
lock
lret
icebp
sti
clc
out
int
fcmovbe
out
in
xlat
std
ret
jecxz
in
loopne
mov
cld
int
pop
das
aaa
out
clc
clc
cmc
lret
cmp
loope
sbb
stc
xor
jmp
rol
enter
jp
fimuls
xchg
flds
jle
add
out
iret
mov
out
ljmp
hlt
jmp
jmp
into
ss
xchg
ljmp
xchg
out
mov
in
cmp
repnz
and
push
incl
xchg
jmp
jmp
shr
and
ror
cld
dec
rcr
out
rcr
flds
flds
nop
repnz
xlat
clc
rcl
xlat
fidivrl
neg
in
loop
cmp
sti
cli
lret
incb
xor
leave
jecxz
xlat
aad
repz
test
ret
std
test
hlt
ret
std
out
test
sub
imul
shl
imul
cmp
dec
hlt
ret
sti
ret
fcmovnb
enter
ffree
cli
mov
xchg
out
clc
in
int
cmp
sti
icebp
clc
fiadds
filds
xchg
in
mov
in
lret
sarl
cli
in
xor
jecxz
loopne
test
mov
xchg
xchg
hlt
in
cli
idiv
int
aaa
sti
clc
shr
xchg
test
cli
mov
fisttpl
xor
aad
enter
out
std
ds
add
jmp
jecxz
stc
mov
leave
std
mov
out
repnz
xor
xor
cmp
fucomi
out
std
orl
mov
jmp
out
into
aam
fcmove
xor
fidivrl
in
xchg
in
xchg
iret
imul
int
shl
jmp
out
lret
aad
aam
orl
in
call
xor
cld
in
out
out
cmpb
icebp
cli
std
jecxz
fisttps
rol
xchg
jecxz
icebp
roll
int3
cli
neg
cmp
loopne
push
sti
roll
int3
clc
cli
nop
std
out
hlt
lret
in
sub
in
xlat
cmp
dec
fcmovnb
repnz
mov
stc
out
loopne
xchg
hlt
xor
lret
aam
loope
repnz
int3
adc
xchg
ret
in
cli
loop
xchg
addl
cmp
lock
cld
adc
faddp
xor
mov
add
jmp
aas
push
mov
adc
xrelease
cmp
jle
iret
testb
sti
jmp
mov
not
fdivrl
stc
cli
std
fnstsw
clc
loope
jmp
movl
rol
aad
sub
lret
fmul
in
cmc
out
incb
xchg
lret
icebp
out
cld
mov
int3
icebp
icebp
cmp
xor
sarb
lret
cmc
in
shr
or
leave
test
cmp
icebp
add
divb
out
out
jmp
fsubp
clc
int
xlat
rcl
enter
mov
repz
enter
int
cmp
xlat
std
repz
ret
cmp
sar
jmp
adc
mov
loope
shl
cli
stc
in
xor
aad
cmc
int3
clc
std
adc
loop
test
ffree
out
filds
rcl
ljmp
cmp
cli
idivb
in
cmc
sbb
jecxz
loopne
rolb
out
out
int
in
jmp
idivb
cmp
std
jmp
and
shl
iret
out
int
out
clc
into
ss
in
lock
aam
inc
neg
cmc
fisttpl
cli
xchg
rorl
xor
out
out
cmp
sti
icebp
mov
loope
addb
test
xor
loop
lret
fidivs
cmp
repnz
clc
mov
mov
int
aad
stc
shr
imul
repz
lock
loope
fadd
cmp
std
mov
xchg
ljmp
neg
leave
sarb
in
int
rol
rcr
in
leave
fucomi
fucomip
jecxz
lds
sarb
lock
out
in
call
fdivrs
aad
in
aam
imul
mov
mov
fisttps
int
imul
call
ret
std
and
loop
mov
enter
call
aaa
cmp
aaa
iret
cmp
std
neg
out
iret
icebp
cmc
int3
out
stc
nop
mov
fcmovnbe
addb
cmc
cli
lret
cld
int
rol
flds
out
mov
int3
in
loop
mov
out
aad
lock
in
out
repnz
shl
testl
enter
lret
jno
sbb
daa
cmp
jle
add
stc
stc
cmp
aad
aad
loop
or
jmp
loope
mov
out
rol
shl
shl
fcmovu
cmp
cmp
rolb
ret
xchg
xchg
loopne
lds
int3
fstp
fucomp
cli
in
div
sbb
fld
hlt
fcmovnu
fucomp
out
in
sti
std
fimuls
repz
test
rol
faddl
ret
mov
jmp
cld
xchg
aam
cmc
ret
leave
repz
fnstsw
sub
cmpl
idivb
repnz
std
out
into
fldl
lret
rcl
enter
cli
fst
cli
xlat
out
repnz
fnclex
xchg
lock
in
xor
loope
in
cs
in
cmp
out
fsubr
addb
neg
stc
int
addl
ror
shll
cli
loope
sti
test
loope
vpsubw
fucom
fcos
ret
cmp
in
ror
enter
cmp
cmp
jmp
xlat
addl
in
lret
shl
repnz
fdivp
xor
aam
in
xor
jecxz
addb
ret
jecxz
mov
in
adc
xor
bnd
jecxz
incb
test
mov
loopne
in
adcl
neg
stc
fcomi
repnz
cmc
shl
icebp
cmp
rolb
out
fldl
mov
fdivr
jmp
fidivrs
repz
fsubp
testb
repnz
fidivl
repz
fcomi
loopne
fiadds
roll
int
repz
xchg
aam
ss
int3
out
int3
out
loope
aad
into
sti
cmp
incl
lret
and
fdivrl
mul
int
lret
cmp
repnz
leave
cli
out
lret
mov
xchg
stc
clc
ret
xor
das
fnstsw
cmc
loopne
std
lock
clc
cmp
call
hlt
shr
out
out
in
cmc
repnz
ret
rcr
mov
shr
rcl
jecxz
leave
jmp
add
add
enter
fcmovu
fstps
outsl
inc
lret
pop
adc
jle
add
xor
lret
cmp
lock
jecxz
xchg
loop
test
repnz
xor
out
clc
fstp
icebp
cmp
out
loop
int
clc
loope
ret
lret
lret
out
out
fcmovnbe
jmp
in
out
xor
into
in
rol
idivb
repnz
cmc
aad
rcr
fcmovb
xchg
out
repz
xchg
aad
jecxz
hlt
test
cld
dec
aaa
loop
aam
in
in
loopne
fxch
lea
xor
jecxz
fdivs
aam
clc
sarb
cmp
loopne
xlat
mov
mov
cmp
enter
ljmp
xor
out
aam
hlt
aam
test
cmp
lret
and
std
xor
mov
call
lret
jmp
test
xor
out
addl
out
lock
cmp
out
shr
out
std
mov
mov
lret
in
mov
call
cmp
idiv
sar
xor
addl
jmp
xchg
xchg
enter
xlat
ss
cmc
fcom
shl
out
cli
ljmp
shl
ljmp
fstpt
shl
hlt
cmp
lock
loopne
call
in
fsubr
cli
call
clc
jmp
in
or
fcomp
std
xlat
loop
sub
out
clc
loop
cld
shl
cmp
int3
shr
iret
iret
stc
repz
cld
or
xchg
in
xor
cli
loop
rcl
sti
shlb
fucomi
int
aad
in
ret
aam
mov
fstl
call
cmp
fucom
call
in
fld
jmp
out
clc
out
leave
ds
fimuls
cmc
cli
fidivl
cmp
aaa
ljmp
stc
icebp
cli
loopne
vpaddw
jmp
xchg
shl
out
idiv
lret
xlat
fst
cmc
rcl
repnz
loope
loope
xlat
loopne
fcmovne
test
xor
repz
cld
jmp
ret
ret
aam
jmp
in
stc
sti
mov
lret
test
xchg
jb
add
fmull
call
rorl
add
call
add
ret
rcl
fcmovbe
lret
shll
in
push
rorl
jg
cld
loop
jle
add
nop
int3
xor
ror
aaa
fcmovbe
repnz
cmp
adc
test
xlat
test
test
dec
fcoml
fsubrs
into
xlat
aad
enter
cmp
or
fcomi
cmp
cld
fucom
into
incb
icebp
xor
aaa
jmp
ret
aad
cld
lds
fiaddl
xlat
aam
ror
fidivs
into
rol
neg
faddp
std
clc
mov
icebp
leave
sub
out
in
int
std
stc
iret
fsub
in
addl
jmp
clc
std
fisttps
xorl
out
fidivl
cmp
aam
cmp
fst
dec
out
in
std
loopne
xchg
addb
enter
jmp
cmp
sti
out
fadd
clc
aam
cmp
lock
xchg
out
loope
shll
repz
sti
imul
int
repz
xlat
add
out
iret
test
lret
ljmp
rcl
aam
cmp
iret
mov
hlt
mov
mov
out
call
hlt
ljmp
lret
fidivrl
cli
frndint
sar
call
sub
cmc
mov
cmp
fdivr
cmp
loop
lock
ret
in
mov
in
cld
and
ljmp
fucomip
fxch
cmp
ret
aam
ret
mov
mov
fcmovu
lock
call
xor
icebp
in
shl
out
cmp
aam
iret
sti
fcmovbe
xchg
fucomp
mov
out
out
xchg
fists
hlt
cs
ds
jmp
ret
jecxz
repnz
shl
xchg
cli
std
in
xchg
mov
icebp
aad
jecxz
aaa
sti
icebp
cmp
cmp
loope
clc
std
faddl
xchg
int
loope
lock
aam
cmc
xor
ror
aam
loop
out
loopne
sar
jmp
stc
clc
loopne
sti
out
lret
sub
std
cmp
loop,pt
out
xlat
aas
jecxz
mov
fucomip
lock
out
jmp
iret
lret
cmp
repz
rol
icebp
xlat
cmp
repz
jmp
push
add
add
mov
ret
fstp
fcoml
mov
les
add
adcb
loope
ror
test
hlt
leave
out
rol
repnz
lds
fsubrp
jecxz
mov
cmp
aaa
xor
ljmp
rcl
loop
cmp
bnd
fildl
int
lock
in
cli
cmp
int
cli
shl
push
call
test
cli
test
stc
int
out
int3
rol
cld
xlat
into
cmp
orl
fsub
out
out
std
out
mov
das
shl
lock
cmp
out
fidivrl
sti
fadd
cmp
cli
mov
rcl
lock
ljmp
test
neg
cld
cmc
mov
out
fpatan
sub
xchg
sub
ror
xor
out
fildl
cmp
loop
out
out
cli
lret
loopne
enter
enter
cmp
ds
shl
ret
lock
fiadds
mov
mov
xchg
enter
out
lret
aam
out
rcl
rcl
sar
cmp
sti
in
into
in
fcmovnu
out
jecxz
hlt
cmp
rcr
enter
lret
out
add
fisttps
fsub
in
in
icebp
int3
hlt
adc
das
shr
in
aaa
cmp
test
fildl
mov
lret
loop
rol
aad
cli
out
into
idivb
in
repnz
sar
clc
sarl
call
or
mov
enter
cli
in
aaa
sti
fnstenv
cmp
lock
sti
hlt
clc
cli
sti
lret
xchg
out
loop
mov
iret
xor
cmp
fdivp
out
rcl
ret
and
ret
inc
in
sti
sub
repz
xchg
shl
int
cs
call
loopne
ret
xchg
les
jmp
repnz
enter
in
sar
cmp
cld
repnz
cld
loope
shl
stc
fucomi
stc
enter
test
aam
out
cli
out
out
shr
fmulp
in
fdiv
xchg
out
xlat
lea
mov
cld
mov
out
div
out
cld
in
fdivr
in
mul
ffreep
clc
aas
lds
roll
jmp
ret
enter
int3
or
test
jo
add
add
xlat
mov
ds
cli
into
loopne
int
xchg
mov
jmp
call
mul
cmp
stc
shl
hlt
stc
xchg
into
jecxz
mov
fsubrp
in
shr
repz
fcmovbe
aas
fmulp
in
ret
std
rcr
mov
mov
jmp
jecxz
idivl
xor
int3
aam
out
cmc
lret
in
in
cmp
or
cld
clc
fdivr
in
lock
test
sub
cmp
aad
adc
aas
roll
xchg
lret
in
sti
in
int
into
enter
aaa
cmc
jmp
in
shl
xlat
clc
out
repnz
out
test
iret
int
test
ss
clc
out
cli
ljmp
cmp
fucom
mov
cli
iret
mov
cmp
jmp
fidivs
stc
rcl
ds
out
icebp
jecxz
out
stc
jmp
in
loop
leave
cmp
fdivrs
in
out
div
ret
cld
ffree
mov
jmp
stc
mov
add
jmp
xlat
xor
xlat
out
out
repnz
ss
out
cld
leave
filds
test
out
xchg
rcr
sarl
xor
cmp
clc
cld
test
jmp
in
repnz
aaa
fstpt
cmc
adc
in
rol
in
and
mov
nop
add
loope
lret
test
aad
rol
cmp
jmp
cmc
icebp
cmp
loope
ret
fdivp
xchg
adcl
mov
icebp
xor
xor
out
idivl
cmc
ret
icebp
repz
shl
ret
in
dec
xchg
aam
in
loope
fnstenv
idivb
mul
loope
jecxz
lock
shl
in
leave
fucom
jmp
rolb
in
into
in
iret
jmp
cld
cmp
sbb
in
test
fdivr
in
out
ljmp
out
icebp
in
xor
cmp
fst
enter
int3
loop
cli
mov
sub
test
out
call
loopne
fimull
fsubr
cld
fsub
xor
in
lret
aaa
aam
fcmovbe
lret
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
jmp
rcl
ret
int
fstp
fnsave
mov
sub
add
add
aad
clc
out
hlt
mov
bnd
int3
out
hlt
cmp
ljmp
aas
cmp
add
cli
in
mov
cld
mov
shlb
fsubr
stc
test
or
sar
repz
xchg
sti
orb
cmc
cmp
leave
fcmove
stc
int
lret
loopne
rol
stc
cld
jecxz
stc
add
out
out
fstl
int3
enter
ror
loope
out
fcmovne
push
sar
jmp
ljmp
fnstsw
jmp
lret
cmp
test
fildl
nop
xchg
xor
xlat
repnz
repz
push
jecxz
fisttpl
mov
repz
clc
ljmp
fsqrt
mov
cli
in
cli
fdivrp
mov
aam
shr
ret
lock
icebp
xor
cmp
idiv
mov
and
fdivrp
std
loopne
iret
iret
shll
mul
cli
stc
xlat
lock
sarl
fsub
clc
jmp
mov
sti
xchg
loope
shl
iret
icebp
shl
leave
ljmp
frndint
cld
xlat
fimull
clc
mov
repnz
nop
aas
xlat
clc
clc
out
iret
fadd
int3
cmp
rcr
repz
ljmp
fadd
repnz
jmp
leave
stc
cmp
into
mov
icebp
loope
rclb
cmc
shrl
xor
in
fsub
ds
rorb
ret
xor
sub
rcl
out
into
fidivl
cmp
roll
jmp
clc
loope
sti
jecxz
icebp
xor
bnd
loopne
loop
icebp
int3
rcl
aad
loope
ret
out
cli
xchg
fcomip
call
leave
iret
xlat
in
ljmp
ret
div
movb
out
xchg
xchg
shr
ljmp
fst
xor
in
shl
rcr
ror
sti
jmp
ror
loope
incb
test
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
jmp
xlat
aas
lret
fcmovne
sbb
dec
mov
in
add
add
xor
adc
shl
in
in
idiv
clc
rol
mov
in
int
xor
call
aaa
iret
cmp
cmp
lock
div
ds
testl
ljmp
jmp
into
lock
aam
aam
in
repnz
fucomp
ss
xlat
stc
cmp
out
aas
ds
lret
fdivp
mov
ret
out
incl
subb
imul
call
test
sar
ret
xchg
in
xchg
xchg
mov
not
cmp
sti
fcom
rcr
loope
int
xchg
shl
orb
loop
roll
xor
in
aad
int
icebp
ds
addl
in
cs
lock
repnz
aad
rcr
or
shl
std
rolb
loope
ret
or
sub
aam
jmp
xlat
sti
test
fadds
adc
out
shl
in
int3
into
in
xor
cmp
and
ret
aaa
idiv
sar
call
xchg
ljmp
bnd
out
clc
cmp
fsub
iret
ret
ret
repz
lds
in
in
rcl
shl
sarb
out
shr
xor
sti
clc
in
sti
aad
mov
shr
out
jecxz
repnz
enter
ffree
fadds
in
cli
mov
ffreep
lock
xchg
lret
mov
or
cmp
int3
into
sti
in
rcr
test
rcr
test
call
loopne
in
repnz
cmc
ret
xor
div
cmp
addl
icebp
fdivr
xchg
into
aam
jmp
into
sti
icebp
int
sarl
cmp
ror
rorl
xlat
std
xchg
enter
or
ljmp
repz
sbb
repz
fxch
xchg
fst
les
into
repz
lret
call
ffree
cmp
loope
cld
lret
incl
out
in
sbbl
jmp
rcl
iret
aad
aad
pop
aaa
jp
lds
sahf
in
add
add
rol
int
stc
in
rcl
repnz
iret
rcr
cmp
xchg
sti
lret
cld
out
shr
fisttpl
jmp
enter
sarb
cmc
cmp
test
loope
testb
loopne
out
cmc
in
rcl
sub
hlt
xor
ret
test
lret
fcoms
mov
aaa
sub
cmp
fsub
cmp
icebp
aas
ds
hlt
loope
loope
mul
out
jecxz
fimuls
sub
lret
in
sti
aam
repnz
std
repnz
jmp
jmp
loop
fstp
loopne
out
loope
cmp
enter
in
repz
loope
loop
cld
call
out
out
decb
ss
loop
cmp
call
hlt
rcl
sti
or
sti
incb
test
lock
lock
leave
xor
aad
xor
icebp
xor
fdivp
aas
cmc
jmp
aad
int
clc
in
mov
lds
fstp
fst
cmp
loope
incb
mul
cli
xchg
mov
test
jecxz
int
fdivrl
sar
stc
in
rolb
cmc
mov
sti
xlat
leave
ljmp
loop
sar
ss
xlat
cmp
out
xchg
sti
decb
int
int3
loope
int3
test
mul
test
fstp
add
xor
int
jmp
rol
aas
aas
test
testl
xchg
aam
call
lret
xbegin
rcl
cmp
out
enter
cli
loope
mov
call
jmp
clc
hlt
ljmp
xlat
test
ret
mov
inc
adc
xlat
divb
out
aam
xlat
ret
loop
fadd
shr
xlat
call
out
shl
xchg
xor
iret
in
into
loopne
cmp
repnz
mov
ret
fmuls
out
mov
aad
cmp
aaa
xor
loopne
cmp
in
in
in
out
lret
dec
jmp
iret
rcl
fcomp
aad
mov
pop
dec
pop
out
add
add
in
or
shr
jmp
idivl
aas
fcmovu
out
ror
fdivrp
addl
leave
in
jmp
call
call
stc
fisttpl
test
jmp
mov
fsubr
loope
xor
loop
fdivl
xlat
ds
rolb
ret
loope
enter
mov
int
loopne
in
pop
cs
into
fnsave
fucomp
cmp
loop
cmc
rcl
aam
clc
nop
xchg
loop
test
enter
std
sar
cmp
idivb
repnz
decl
mov
sub
sarb
cmp
fdivr
ljmp
fmul
mov
xchg
in
ss
in
fdiv
iret
hlt
jecxz
cmc
loopne
repz
fstp
add
ret
xchg
std
ror
rcl
leave
ljmp
shl
fcmovnu
ffree
rorl
mov
fdivrp
sti
lret
test
mov
in
enter
cmp
cmp
in
jecxz,pt
mov
xchg
fucompp
mov
int
call
vpmovmskb
loopne
loopne
call
xlat
xchg
rorb
loop
cmp
shr
aad
stc
rcl
not
rcl
call
call
xor
hlt
cld
shl
ds
ljmp
roll
sbb
in
enter
in
call
fcmovne
repz
out
in
shl
loop
sti
cmpl
in
bnd
shl
shl
int3
clc
out
aaa
cmp
rol
out
ret
out
std
test
in
xor
xor
cld
repz
in
cmpb
fnstsw
in
fucomi
in
ret
cld
lock
jmp
shl
xor
cmc
lret
ss
lock
jmp
add
in
ljmp
popl
ret
in
repnz
aam
lock
fld
in
in
mov
xchg
cmc
call
ss
fdivrs
ss
iret
jmp
test
xlat
cli
rcr
mov
imul
add
xchg
jmp
int
int
fstp
fst
das
dec
fwait
lahf
ljmp
jle
add
sbb
lret
fdivr
test
xchg
call
ss
xor
aaa
aaa
fstpt
ljmp
aam
ret
ljmp
out
fldl
ret
in
int
aam
sarl
rol
sti
adc
shl
test
mov
mov
out
leave
sub
into
in
cmp
clc
ljmp
testb
nop
fcmovbe
orb
sub
iret
clc
fnstsw
aam
in
cli
xchg
stc
jecxz
hlt
cmc
sti
cli
xchg
ret
iret
xchg
mov
test
in
out
jmp
lret
aas
cli
loope
les
jmp
loope
in
xchg
lret
mov
ret
ss
in
lret
sarl
aaa
dec
clc
hlt
ret
hlt
ret
sub
out
loop
xchg
and
div
aad
fld1
stc
into
rcl
in
loope
repnz
sti
jmp
cld
jmp
test
out
rcl
sub
cmc
cmp
iret
enter
fldlg2
loopne
in
test
stc
jmp
sbb
jmp
incb
loope
lret
xlat
in
cmc
clc
stc
in
in
loopne
stc
loopne
fld1
jmp
test
out
hlt
out
aad
repz
cld
repz
cmp
sti
push
fsincos
out
test
leave
fabs
stc
fchs
iret
int
std
test
xchg
in
imul
out
jmp
test
fdivr
sar
out
adc
mov
sti
ret
in
repz
mov
xor
ljmp
cmp
faddl
fcmovu
jecxz
cmp
xchg
incb
xor
lock
out
aad
loope
aad
call
fcmovb
iret
mov
xchg
out
sub
repnz
iret
testb
enter
lret
jmp
rolb
ror
cmc
leave
fnsave
cmp
jmp
cmp
shl
out
std
ljmp
icebp
loop
iret
xor
sti
rcr
repnz
cmp
faddp
hlt
test
mov
std
flds
fnstenv
jmp
xor
cmp
sti
cmp
aas
sar
ret
fucomp
and
in
and
mov
in
out
jecxz
out
icebp
sub
fmul
cmc
push
xor
mov
dec
inc
add
dec
jmp
int
ret
lret
aad
int
jmp
pushl
scas
int3
hlt
add
add
cld
std
ret
ret
stc
out
loopne
in
nop
in
divl
loopne
repnz
hlt
out
call
cmp
into
ret
fcmovnb
sti
out
loope
lea
iret
out
sub
out
aas
fdivrl
ret
inc
xlat
fisttpll
flds
out
iret
xor
std
call
fstpt
enter
fisttpll
aam
rcl
xor
jmp
sti
out
sarb
sarb
in
in
mov
and
jmp
out
stc
aaa
cmp
cli
cmp
aad
ret
clc
rol
test
out
int3
mov
leave
repz
inc
shl
fiaddl
aam
clc
int
std
leave
int3
in
divl
loopne
aam
rcr
cmp
cmp
repz
shl
fcmovb
test
rol
repz
in
aam
in
cmp
in
int3
fdivp
int3
cmp
rol
ret
fiadds
mov
in
ficoms
lret
div
in
icebp
jmp
rcr
in
fucomi
neg
ljmp
lret
xchg
xchg
jmp
clc
das
cmp
std
cmp
loope
in
cli
fcmovbe
fdivrp
in
xor
xchg
aas
out
cmp
leave
lret
in
jmp
xor
in
ds
ret
mov
leave
xchg
xchg
lret
hlt
xor
repz
cmp
test
loopne
cld
mov
jmp
incb
mov
xchg
icebp
into
cld
fdiv
ljmp
in
in
fcmovbe
mov
mov
xchg
mov
ljmp
xor
fst
roll
aad
fcomp
call
sub
int3
shrl
icebp
in
ds
int3
loopne
cmc
aam
sub
mov
in
xchg
leave
mov
jmp
leave
ret
out
xor
aas
cld
lock
fimuls
cmp
jmp
rol
aam
xor
mul
cld
dec
adc
xor
call
nop
iret
ljmp
lret
repnz
xor
rolb
pop
hlt
pop
mov
pop
pop
pop
leave
ret
