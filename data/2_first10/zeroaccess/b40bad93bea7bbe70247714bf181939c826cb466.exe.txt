push
mov
sub
xor
mov
mov
cmpl
movl
mov
mov
mov
jmp
movl
jne
push
push
push
push
push
push
pushl
push
call
xor
subl
sub
neg
movzwl
sub
mov
mov
sub
inc
push
mov
mov
sbb
addl
mov
orl
movzwl
adc
mov
orl
and
mov
cmpl
mov
mov
not
jmp
movl
mov
jl
push
push
pushl
pushl
push
push
call
xor
dec
add
sbb
mov
add
add
mov
sub
mov
cmpl
mov
mov
jmp
movl
mov
jb
pushl
push
call
andl
mov
mov
or
sbb
orl
mov
sub
mov
sbb
add
mov
orl
orl
dec
lea
mov
mov
xor
mov
mov
add
mov
sbb
mov
and
mov
and
mov
and
shrd
shr
mov
xor
mov
adc
mov
jmp
stos
xchg
sarl
cmp
and
lret
and
adc
adc
movlps
imull
call
push
xor
sub
lods
xor
in
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
push
mov
testl
dec
jb
imul
sbb
push
dec
adc
lea
fimuls
adc
push
andl
fs
sbb
push
roll
sbb
testb
mov
aaa
sbb
inc
out
sbb
pusha
jae
inc
in
jno
jne
jnp
jge
pop
cmp
inc
lock
pop
mov
jae
movb
daa
ljmp
sub
add
pop
sub
lods
mov
dec
decb
xchg
mov
xor
shll
jge
dec
rcll
fistpl
or
shll
fsubl
mov
mov
test
sub
loope
jle
jae
movsb
fidivs
mov
jge
sbb
mov
lret
add
mov
push
jns
aam
ficompl
or
sub
mov
pop
shll
rorl
mov
jae
arpl
cltd
sub
scas
andb
imul
dec
scas
xor
imul
dec
push
and
insb
out
loop
iret
scas
or
clc
fisubl
sub
pushf
aad
push
or
push
jmp
test
mov
cmpsb
test
or
lret
stos
mov
aaa
push
xchg
push
in
in
cmp
leave
subb
xlat
pop
lods
sbb
sub
sub
inc
add
shr
push
add
add
push
mov
push
xchg
mov
movlps
movlps
push
add
xor
dec
or
adc
out
dec
insb
push
pop
inc
inc
fs
loop
out
jno
icebp
test
in
mov
orb
cli
mov
mov
loope
sbb
pop
daa
lods
int3
arpl
push
cmp
cmp
add
sub
dec
mov
push
xchg
pusha
push
push
into
clc
jbe
ja
andl
inc
fiaddl
lret
test
fiadds
rcrl
jp
xchg
sub
in
jo
setns
and
xor
adc
cli
cmpsl
test
lods
push
lock
sub
enter
push
in
push
adc
push
ret
dec
and
push
inc
jle
test
into
cmp
dec
mov
mov
push
imul
or
cmp
scas
xor
lock
aam
in
fildl
sbb
cmpsl
mov
fistpl
push
push
je
lds
adc
lds
pop
stc
sbb
jno
clc
dec
pop
das
out
movsl
xchg
jp
push
arpl
daa
xchg
adc
and
out
testb
jmp
cmp
clc
adc
orb
cli
dec
cld
jb
faddl
shll
sbb
shlb
fdivrs
jl
pop
rcr
xchg
imul
out
sub
and
mov
dec
out
mov
dec
add
jp
leave
addl
mov
cmpb
cmp
in
xor
es
mov
pop
mov
xchg
xchg
fisubrs
fbld
les
sub
outsl
xor
adc
lret
adc
dec
dec
test
push
clc
arpl
jl
mov
cwtl
pop
sbb
out
adc
bound
dec
xor
dec
sbb
repnz
shlb
hlt
out
jb
pop
fadds
xor
aam
rorb
nop
push
sub
add
inc
xchg
outsl
inc
add
adcl
movl
movl
and
movl
movzbl
xor
movl
subl
movl
cmpl
mov
movl
mov
movl
jmp
mov
je
push
push
push
call
andl
andl
orl
andl
sub
adcl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
pushl
call
subl
orl
or
xorl
andl
sub
adcl
xor
dec
movl
and
movl
movl
mov
add
movl
movl
movl
movl
and
movl
cmpl
movl
movl
movl
movl
jmp
mov
mov
jb
pushl
push
call
addl
adcl
addl
andl
orl
neg
movl
xor
movl
adcl
movl
sbb
movl
movl
movl
sbbl
movl
adc
mov
orl
shl
mov
adcl
push
push
push
push
subl
call
mov
xor
mov
negl
xor
cmpl
mov
mov
jmp
movl
mov
ja
push
push
pushl
pushl
call
adc
adcl
adc
or
mov
subl
jmp
jno
sub
cmp
push
pop
js
repz
js
or
adc
movlps
pop
pop
out
loope
pop
jb
aad
or
xchg
mov
push
sbbl
icebp
push
in
adc
rorl
leave
add
sub
jnp
sbb
das
xchg
js
jmp
aas
inc
and
inc
out
clc
sarb
popa
or
dec
lock
or
or
lcall
popf
jns
push
jge
inc
iret
xchg
int3
jecxz
fistps
cmp
lock
sarb
das
mov
mov
fdivrl
inc
js
push
clc
mov
mov
mov
das
push
jne
es
cmc
mov
leave
pop
mov
sbb
mov
jmp
mov
xchg
mov
and
out
add
add
mov
add
jne
cmc
loop
scas
outsl
xchg
out
or
xor
movsl
in
push
push
add
rcl
adc
into
sbb
imul
push
dec
into
push
int
daa
sub
push
cmp
add
in
add
shll
jmp
pop
jmp
loopne
and
mov
mov
jl
je
inc
cmpsb
jmp
fisubl
push
ret
int
call
mov
sub
inc
mov
and
fimuls
das
aad
or
lods
jae
cmp
or
or
fisubrl
inc
roll
add
add
pop
pushf
ret
fimuls
arpl
mov
cmp
scas
jg
cmp
out
push
cmp
sbbl
iret
or
sahf
cmpsb
loop
sbb
popa
jg
pop
adc
rorl
xlat
xlat
incb
dec
je
dec
jnp
xchg
idivb
xlat
call
dec
mov
loop
jns
popf
adc
cmp
jae
mov
popa
data16
jae
or
les
mov
insl
adc
sbb
cmpl
notl
mov
jmp
movl
movl
jbe
push
pushl
pushl
push
pushl
call
adc
add
movzbl
xor
mov
sbb
adc
sbb
xorl
mov
lea
sbb
mov
mov
adcl
or
andl
and
cmpl
movl
mov
mov
jmp
movl
jg
push
push
call
adc
xor
xorl
and
orl
cmpl
movl
mov
movl
jmp
movl
jb
pushl
push
pushl
push
pushl
pushl
call
dec
movzwl
adc
addl
add
and
movzwl
or
mov
inc
not
mov
xorl
or
notl
xor
movl
cmp
jne
mov
adc
mov
jmp
push
sbb
xor
es
pop
adc
movlps
and
das
fidivs
fs
jno
fidivs
ret
cli
inc
jmp
arpl
sub
addl
or
add
divb
loop
jne
test
mov
mov
flds
mov
xchg
or
scas
jne
push
and
movsl
pop
aam
shlb
dec
outsl
push
mov
ficomps
mov
or
cmpsb
pushf
aas
js
mov
pop
or
mov
sbbl
sbb
lret
jb
ret
sub
dec
push
ja
jae
ret
xchg
fstl
into
faddl
lret
outsb
aas
repnz
icebp
or
mov
dec
aad
enter
cmp
std
push
mov
testb
es
cmc
outsb
xchg
cmp
out
scas
imul
leave
push
pop
mov
xor
push
mov
push
cmpsb
cmp
mov
lret
mul
test
fdivrl
push
xchg
xor
fs
mov
pusha
xchg
jp
ret
daa
sub
jb
pop
pop
icebp
fs
mov
mov
and
aaa
or
and
adc
and
cmpsl
and
cmp
popf
push
add
repnz
std
lea
push
xor
inc
cmpsl
push
sub
and
jmp
andb
repnz
mull
dec
inc
mov
out
pop
cmpsb
repnz
dec
insl
push
pop
inc
adcb
stos
pop
xor
dec
int3
ljmp
xlat
sti
nop
fwait
lahf
push
dec
mov
pusha
mov
out
mov
pusha
or
jae
inc
popa
push
push
and
jge
fisubl
cmp
dec
imul
pop
ret
lahf
sub
in
sti
mov
mov
addl
das
pop
pop
or
jns
jmp
cmpsl
or
daa
jbe
test
xchg
mov
mov
movl
shrd
cmpl
mov
movl
movl
movzbl
jmp
movl
mov
jl
push
push
push
push
push
call
dec
xor
add
xor
xor
adc
and
orl
movl
shr
sub
mov
mov
shl
addl
xor
andl
xor
subl
or
mov
mov
cmp
jne
mov
adc
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jle
pushl
pushl
pushl
push
call
add
xor
add
or
xor
adcl
neg
movzbl
add
mov
sbbl
xor
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
push
push
pushl
call
xor
sbbl
and
movzwl
xor
mov
adcl
sbb
mov
mov
shrd
subl
mov
cmpl
mov
mov
mov
mov
jmp
mov
mov
jge
push
push
push
push
push
push
push
call
adc
notl
sbbl
mov
or
decl
mov
xor
shr
xorl
jmp
and
aaa
and
ljmp
lods
add
adc
movlps
nop
jns
xor
jae
imul
gs
pusha
inc
mull
inc
shlb
pop
inc
lods
xchg
inc
mov
and
fisubl
cli
push
add
add
jae
xor
adc
adc
mov
sahf
push
xadd
pushf
outsb
ja
jae
add
repz
mov
rorb
lock
inc
lods
sar
push
cmp
insl
add
or
jo
jne
push
add
in
jae
imul
out
inc
movsb
cmp
mov
xchg
out
or
stos
es
pop
leave
ja
pop
xchg
pop
mov
mov
push
adc
fsubrs
test
popf
cmpsl
xor
ds
les
rclb
mov
mov
icebp
dec
jecxz
sbb
cmc
inc
xor
sbb
hlt
je
and
pop
ds
dec
dec
int
push
fidivrs
test
push
xchg
aad
fstpl
adc
ret
push
sahf
mov
nop
sbb
pop
pop
lahf
daa
outsl
mov
into
ret
scas
scas
pushf
icebp
add
fstp
mov
xor
jbe
jnp
fstps
mov
jno
sbb
jne
xorb
lock
popl
pop
outsb
xor
iret
loop
add
mov
pop
push
xchg
jo
imul
scas
movsl
sbb
xchg
mov
cmp
fdivr
xchg
sbb
cmp
dec
mov
adc
sub
jbe
cmpsb
push
rcr
stos
fucomi
fs
out
inc
adc
sahf
pusha
stc
add
jl
pushf
call
jle
xchg
bound
mov
xor
xor
test
fidivrs
lds
jne
sbb
mov
cmp
push
sbb
mov
fwait
mov
mov
sub
loopne
aaa
dec
xchg
rol
inc
add
rolb
add
push
in
adcl
shl
sub
mov
mov
sbbl
mov
xor
add
mov
mov
cmpl
notl
movl
jmp
mov
jg
push
call
negl
xorl
sbb
sbb
add
mov
or
mov
jmp
test
and
and
test
ljmp
jle
call
adc
movlps
loope
mov
mov
lods
adc
std
pop
divb
or
xchg
push
lds
fistpll
das
test
fbstp
bts
inc
sahf
mov
adcl
mov
sbb
outsl
loop
in
mov
das
call
mov
aad
enter
in
outsl
jmp
mov
xlat
xchg
cld
fcmovnb
stos
aas
or
pusha
add
call
sahf
mov
test
cmpl
mov
adc
mov
pusha
andl
mov
loope
cmpsb
scas
cli
stos
dec
xor
mov
inc
leave
pop
pop
and
shrl
daa
mov
jp
mov
push
and
xchg
pop
cmc
push
mulb
scas
sarb
clc
stc
sbb
add
xchg
xchg
jbe
lea
xor
jae,pn
and
xor
push
and
loope
fiadds
out
inc
and
dec
repnz
pop
iret
add
mov
loopne
jmp
addr16
fwait
pop
push
lret
pop
loope
shll
xchg
jmp
sbb
in
pop
iretw
enter
bound
xor
scas
mov
sbb
inc
imul
ret
daa
jle
test
das
rcr
cmp
lret
outsl
mov
jg
push
cs
xchg
insb
xchg
jl
fistpll
adc
lods
das
rcll
das
int
es
adcl
scas
jmp
fcmovu
out
jecxz
mov
sahf
mov
mov
xor
out
jl
xor
mov
or
jns
cmp
lods
xchg
inc
movsw
mov
sub
jmp
push
push
orl
call
cmpsl
xchg
ds
mov
and
test
mov
out
imul
out
jae
cmp
cs
jp
inc
lret
xchg
push
sbb
cwtl
lds
out
xchg
icebp
fwait
mov
inc
add
adc
sbb
mov
shrd
shr
adc
mov
xorl
mov
dec
xor
shl
mov
adc
mov
xor
cmpl
movl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
add
xorl
or
movzbl
or
mov
mov
or
mov
addl
or
movzbl
and
mov
mov
xor
or
add
mov
shrd
orl
shr
adc
mov
mov
cmpl
movl
mov
jmp
movl
jg
push
pushl
push
push
call
dec
sub
sbb
decl
sbb
cmpl
mov
movl
jmp
movl
jae
push
call
sbbl
and
adc
mov
add
add
or
sbbl
adcl
mov
movl
xor
xor
or
shl
lea
mov
mov
adcl
shrd
shr
cmpl
movl
mov
jmp
mov
movl
ja
push
call
sbb
mov
sbb
inc
inc
sub
subl
cmpl
mov
mov
jmp
mov
jl
pushl
call
xorl
add
xor
xor
xor
sub
or
mov
mov
mov
or
xor
mov
or
mov
xor
or
addl
shl
imul
cmpl
movzbl
mov
mov
movl
jmp
mov
ja
pushl
push
pushl
push
pushl
pushl
push
call
movzwl
sbb
addl
or
sbb
and
mov
cmpl
mov
mov
mov
jmp
movl
je
call
sub
orl
and
sbb
sbbl
decl
subl
xor
mov
shrd
orl
mov
jmp
xchg
arpl
pop
inc
push
pop
pop
adc
in
jle
repnz
mov
movlps
pop
outsl
cmp
sub
xlat
mov
gs
in
lea
push
ret
loop
pop
xchg
out
ror
xchg
pop
dec
xchg
dec
pop
jmp
int3
cli
inc
mov
mov
mov
xchg
lds
cwtl
mov
push
xlat
decl
int
call
adc
jns
push
sub
pusha
sahf
cmp
in
sub
clc
adc
ret
and
test
int
test
repz
jb
in
addr16
ds
ds
lods
mov
and
pop
in
sub
sbb
adc
lock
fnstcw
mov
sub
and
ret
cmp
das
inc
pop
sbb
xor
sbb
das
sbb
pop
jo
jg
cli
adc
dec
dec
push
mov
xchg
outsb
out
out
jle
push
loopne
inc
dec
shlb
adc
outsb
dec
push
mov
cmp
inc
and
cmp
mov
jmp
mov
sbb
sub
fwait
int3
adc
jno
in
xlat
sub
pop
in
pop
jne
les
mov
adc
into
pop
scas
mov
pop
into
cmpl
jg
pusha
mov
insb
sahf
xchg
rol
mov
daa
daa
adc
jbe
mov
and
adc
cwtl
cmp
lock
mov
pop
sti
decl
push
push
xchg
iret
ja
sbb
movsl
adc
mov
sarb
mov
popa
mov
mov
test
pop
dec
xor
sbb
lret
and
xchg
fwait
add
movsl
cmc
jbe
xor
mulb
inc
sbb
sub
xchg
mov
pop
push
loopne
push
addr16
push
inc
cmp
lds
js
inc
add
jge
sbbl
shr
mov
mov
orl
xor
subl
or
addl
shl
negl
sub
movl
mov
jmp
add
add
and
mov
div
adc
movlps
or
movsb
mov
ficoms
mov
in
cmp
insb
or
sub
and
add
mov
dec
push
test
addb
mov
clc
lods
stos
cltd
sar
fs
fildl
fs
ss
jo
push
pop
movsl
sti
sbb
xlat
xor
add
sub
fwait
addr16
adc
sub
out
inc
je
sub
arpl
mov
fwait
push
adc
imul
in
out
pop
adc
adc
inc
or
xor
rclb
adc
ret
mov
scas
mov
fbstp
add
fcomi
push
mov
outsl
pop
les
int3
jno
loope
out
cmp
cld
xchg
popf
insb
and
sub
xchg
jge
addl
js
insl
es
aam
jno
jo
push
sbbb
dec
sbb
test
jl
inc
cmpsl
pop
jge
test
ja
imul
xchg
xor
jo
lahf
lahf
mov
rcrb
pop
data16
sub
retw
xor
adc
fldcw
mov
xchg
les
cmp
cmpl
ss
add
jno
xchg
cs
xchg
inc
insl
add
xor
sbb
je
lahf
cmp
or
mov
sarl
pop
mov
mov
jp
loop
js
dec
push
out
add
dec
cmp
xor
inc
or
xchg
adc
arpl
mov
daa
insb
cmp
jmp
mov
mov
mov
das
add
mov
aam
stos
xor
shll
jl
add
push
and
jo
add
dec
sbb
into
push
fistpll
jmp
movsl
popf
cmp
popa
mov
and
mov
or
mov
call
outsl
and
insl
xchg
loope
dec
jg
movsb
out
outsb
or
adcb
push
cmp
mov
mov
jg
mov
orl
mov
adcl
shrd
mov
or
mov
sbbl
xor
orl
shl
xor
or
shr
mov
cmpl
not
not
mov
jmp
movl
jb
push
pushl
call
not
inc
sub
mov
and
mov
mov
sub
sub
addl
and
movl
mov
sub
mov
xor
mov
shrd
shr
mov
mov
adc
mov
mov
mov
movl
xor
xor
andl
or
shl
imul
sub
jmp
or
mov
mov
xor
mov
addl
shrd
mov
mov
sbbl
xor
sbbl
shl
xor
or
sbbl
shr
mov
adcl
mov
mov
movzbl
sbb
mov
addl
shrd
shr
mov
jmp
cwtl
mov
lcall
fcompl
repz
movlps
add
pop
call
sbb
push
push
mov
rcrl
int3
push
add
sub
sub
inc
aam
adc
sub
cmpsl
xor
adc
and
ret
rorb
inc
fdivrs
jb
mov
je
ret
sbb
mov
dec
sbb
pop
push
inc
mov
popf
add
or
hlt
dec
mov
and
notl
aam
ds
in
lds
inc
push
iret
pop
sbb
sub
loop
cmp
dec
cmp
mov
pop
push
xchg
lods
fistl
out
shll
mov
mov
arpl
outsl
sub
iret
mov
ret
insl
mov
mov
les
sbb
faddl
imul
jne
call
and
out
mov
and
aaa
lahf
lock
in
pop
adc
jmp
push
nop
les
sub
cmp
xor
je
and
out
adcb
or
jl
movsb
jno
xchg
mov
pop
push
mov
cmp
sub
insl
xchg
mov
cld
notb
and
cld
dec
jl
sbb
sub
daa
pop
ja
lods
hlt
and
pop
mov
push
js
sub
rcrb
sub
add
mov
loopne
pop
dec
repz
mov
test
push
jle
lret
inc
popa
stos
push
jb
xchg
test
clc
inc
cmpsl
leave
pop
in
outsl
mov
jmp
jo
movsl
ds
test
std
sbb
xchg
cltd
ja
add
dec
push
jle
pop
loop
dec
xorl
stos
movsb
rorb
and
xor
mov
jl
jae
ss
sub
popf
pusha
mov
addl
mov
andl
xor
andl
xor
adcl
or
shl
andl
add
cmpl
mov
mov
not
jmp
not
jbe
push
push
call
adc
mov
xor
mov
sbb
sub
xor
add
mov
sub
mov
cmpl
movl
mov
movl
jmp
movl
mov
jge
call
movzbl
sub
mov
mov
add
and
sbb
sbb
dec
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
sbb
sbb
jmp
pop
test
out
out
adc
movlps
dec
cltd
repnz
fs
sub
ja
xchg
pop
insl
fwait
int
mov
aaa
and
imul
lcall
adc
mov
iret
movsl
pop
xchg
stos
mov
scas
cs
repz
push
lea
push
adc
inc
int
xchg
sbb
sti
testb
sub
jo
loope
out
mov
inc
insl
mov
loope
lods
xchg
add
sti
aas
ja
jmp
xor
cmp
cld
or
cmc
loope
sub
and
test
in
push
lods
dec
and
dec
mov
idiv
cmp
xchg
adc
lods
js
mov
jne
leave
pop
adc
ss
mov
mov
push
repnz
insb
in
cltd
pop
pop
fdivr
pusha
jle
push
cmc
pop
cmp
push
mov
pop
aas
fnstenv
iret
jecxz
rcr
and
pop
lret
xchg
cmpb
xor
and
lock
hlt
ret
or
mov
sarl
mov
sbb
out
addb
je
push
and
mov
insb
mov
jo
es
push
xlat
aam
cmp
or
lret
ja
xor
out
jg
iret
insb
sbb
mov
mov
aaa
push
add
xchg
inc
mov
out
call
mov
stos
jg
cmpsl
sub
mov
pushf
sbb
int
iret
jmp
lcall
add
adc
ds
arpl
rorb
add
cmp
dec
xor
mov
cmpsb
je
ds
jmp
xchg
lods
stos
jae
jmp
dec
inc
xor
xchg
xor
rorl
xchg
ss
lods
gs
jge
fstp
bound
jge
jbe
mov
xchg
rorb
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
jmp
mov
imul
inc
std
jle
jmp
adc
movlps
jp
xchg
jmp
lahf
push
cmpsl
inc
sahf
jbe
mov
adc
popf
popl
mov
jmp
sbb
jmp
inc
xchg
ljmp
test
out
in
fistl
sub
stc
sbb
mov
xlat
pop
int
add
or
push
adc
insl
es
scas
addr16
add
adc
add
out
lods
ret
and
jb
ret
lcall
jns
enter
dec
push
rcll
mov
sbb
jmp
xchg
mov
in
aam
subb
lock
push
and
rorb
xchg
xor
jmp
cmovns
fsubrs
rorb
fidivs
bound
shlb
fcompl
pop
sub
loop
xor
icebp
cmp
sbbl
imul
mov
sbb
pushf
in
or
or
push
mov
sbb
nop
movsl
cmp
pushf
sub
inc
mov
rorb
or
dec
xor
cmp
push
jmp
cmp
sub
test
fcoml
jnp
idivb
ljmp
pop
jmp
cli
ret
ret
popl
jbe
sbb
xchg
aam
sub
cmp
arpl
push
popf
xchg
sbb
xchg
or
xor
movsb
mov
cmp
data16
xchg
lods
mov
inc
test
mov
pop
pop
xchg
aad
mov
mov
jb
push
setge
icebp
xor
lea
in
popa
lods
inc
jmp
call
outsb
jg
dec
imul
int3
out
sub
lods
and
nop
push
rcrb
fmul
mov
xor
divl
iret
xchg
out
or
jl
arpl
push
and
mov
getsec
aas
pop
cmpsl
push
sub
mov
add
push
imul
enter
add
enter
mov
xor
mov
xor
shl
mov
or
jmp
mov
outsb
mov
fidivrl
mov
movlps
adc
loopne
xchg
pop
cmp
in
les
dec
add
adc
call
lret
mov
adc
adc
orl
dec
jb
popa
rorl
cmpsb
push
dec
daa
ficoms
sub
mov
push
push
popa
int3
fiaddl
inc
cmp
movl
pop
int3
hlt
mov
adc
ljmp
sub
rcll
xor
mov
dec
jg
xor
xchg
loope
lea
or
inc
xchg
mov
xchg
test
cmp
mov
sub
xchg
push
ret
nop
inc
rolb
repz
fmulp
xchg
data16
push
lahf
movsl
stos
and
xor
push
xchg
and
es
xchg
les
adc
movsb
lcall
xchg
movsb
add
cli
int3
js
xchg
and
js
mov
jecxz
adc
mov
adc
inc
cmp
pop
lods
pop
rcl
cmp
cltd
shrb
stos
adc
scas
rclb
push
das
sub
sbb
xchg
fisubl
sub
shll
iret
ret
aam
adc
xor
repnz
fisubs
xor
inc
out
or
pushf
and
js
scas
xor
mov
mov
jae
inc
aam
add
adc
aad
xchg
and
outsb
sahf
xchg
std
mov
inc
adc
fwait
cmc
adc
adc
xchg
dec
adc
dec
test
push
dec
fsubr
sbb
loopne
imul
push
popa
dec
jecxz
push
adc
arpl
mov
push
xchg
pop
out
repnz
shrb
out
mov
loope
add
fistpll
jle
push
imul
xchg
xlat
add
push
int
pop
cli
jecxz
mov
cld
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
jmp
adcl
stos
xchg
mov
adc
movlps
loope
enter
test
adc
repz
mov
aad
mov
in
sbb
loope
into
aam
rolb
dec
lret
jle
aas
lcall
stos
push
push
movl
mov
pop
jmp
pop
rorl
sbb
push
ds
push
loop
dec
pop
mov
insl
sub
adc
mov
hlt
lret
imul
or
aaa
xor
dec
or
fnstenv
push
repz
inc
dec
sub
leave
jge
outsb
xchg
xlat
sbb
int3
xor
and
out
fidivs
iret
cwtl
js
jl
xlat
daa
or
jbe
xor
push
jecxz
std
call
jne
pop
pop
pusha
push
es
into
and
lods
dec
pop
aas
mov
icebp
mov
mov
mov
adc
aam
mov
lea
cmp
xorl
sbb
push
ret
call
cmp
int3
pop
ret
sbb
mov
jno
das
jae
xchg
cmp
mov
xor
shrb
sarl
outsl
test
inc
ret
push
push
dec
inc
xchg
adc
dec
xchg
shlb
and
pop
pushf
or
mov
ficompl
loope
xor
dec
scas
mov
in
jae
pop
add
inc
jne
imul
iret
xor
jae
mov
add
dec
ja
mov
dec
test
jnp
pusha
stos
add
mov
stos
loop
out
in
adc
jb
dec
jmp
cmp
xor
fistps
adc
fisubs
out
lahf
pop
cmp
pop
sbbb
add
testl
scas
sbb
xchg
jb
or
stc
popf
xchg
jmp
call
leave
ret
mov
jmp
mov
add
dec
incb
rcrl
push
pop
dec
sub
mov
mov
pushf
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
jmp
stc
popa
mov
inc
xor
jle
outsb
jp
loopne
adc
movlps
cmp
adc
mov
rcrl
andb
popf
pop
mov
clc
sub
lahf
out
xor
lea
xchg
sti
fldl
dec
ret
push
sub
enter
mov
test
cltd
bound
int
push
and
adc
adc
xchg
inc
push
mov
xlat
sti
sbb
in
mov
or
out
fptan
mov
cmp
mov
mov
jbe
xor
fiaddl
xor
pop
dec
fdivs
xchg
fwait
aas
cs
mov
insb
test
or
aaa
sbb
cmp
mov
jmp
cmpsb
jecxz
adc
insb
cmp
jp
and
cmp
or
inc
test
dec
stos
pop
add
xchg
fists
sub
rorl
das
aaa
es
pop
loopne
xlat
xchg
mov
stos
cmpsb
pop
inc
or
shl
je
dec
xchg
add
pop
orb
pop
imul
jle
push
or
adc
loopne
loopne
sbb
cmp
loopne
out
cmp
jmp
xor
push
push
dec
sub
dec
cs
fs
popf
push
scas
adc
inc
lret
fxam
adc
pop
sar
je
jmp
js
add
mov
int3
inc
xchg
xchg
push
pushf
jge
jbe
mov
xchg
xor
lea
and
xchg
adc
xchg
cmc
aad
fsubrl
hlt
sub
aaa
out
mul
hlt
pop
and
int3
and
mov
xchg
leave
fsts
fidivs
sarl
icebp
add
test
and
fsubp
out
in
int
stos
test
cmp
pop
inc
jmp
in
bound
add
inc
loopne
mov
or
lock
outsb
imul
mov
inc
nop
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
jmp
mov
pop
lahf
push
or
lods
push
popf
mov
adc
movlps
loop
fsub
fdivs
repz
xor
adc
mov
inc
ds
push
pop
add
jle
push
push
sbb
loop
test
test
into
push
xchg
mov
xor
cmp
stos
and
mov
pop
push
gs
jnp
in
xchg
mov
sbb
dec
je
mov
out
xor
pop
rcrb
pop
sbb
or
addr16
jno
sbb
push
lahf
xchg
imul
loope
push
xor
jae
insb
add
lea
jg
daa
lret
jmp
arpl
push
out
mov
repnz
pop
cltd
dec
sbb
push
fwait
pop
jbe
pop
mov
lock
jno
fnstenv
mov
jae
cmc
xor
int3
stc
push
shrb
jb
ljmp
jno
in
sbb
dec
int3
mov
cmp
push
pop
mov
icebp
inc
cs
cmp
aam
jge
int
inc
popf
dec
add
push
les
in
lea
scas
fwait
in
js
push
insl
insb
nop
sub
fmuls
test
out
mov
dec
inc
dec
rclb
stos
in
mov
fucompp
out
scas
outsb
push
mov
inc
les
dec
and
or
jmp
sahf
sub
aad
in
inc
or
mov
movsb
cmp
pop
mov
dec
push
popf
test
addr16
imul
imul
mov
inc
cmpb
cli
push
sarl
popf
mov
test
pop
adc
sbb
inc
mov
aas
rcll
push
insl
dec
cmp
jae
stc
xor
jbe
mov
in
pop
xchg
shll
aam
jp
inc
xor
inc
and
insl
rorl
mov
adc
rcrb
xchg
in
fsubr
shr
imul
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
jmp
push
shl
dec
jne
sub
lods
push
jns
insb
fcomp
adc
movlps
mov
push
leave
jge
stos
test
mov
pop
leave
jae
xchg
sub
test
and
mov
push
adc
cmp
movsb
jmp
jae
sub
test
nop
setns
loop
into
push
push
xor
lcall
add
fucomp
in
les
cmp
jnp
and
mov
jo
insl
out
test
dec
test
inc
cs
pop
in
mov
call
sbb
mov
test
loop
push
xor
cli
pop
pop
lret
dec
xor
push
dec
inc
sbb
movsb
jne
xor
ret
push
sub
add
mov
insl
sbb
mov
pop
repnz
test
mov
and
jg
nop
xor
pop
daa
sahf
mov
pushf
ret
mov
cld
sbb
fisubrl
call
and
ret
stos
add
or
push
ja
int3
pushf
shrl
push
mov
sbb
stos
mov
or
pop
stos
rorb
adc
mov
mov
mov
lds
int
sbb
cs
sbb
out
nop
jae
cld
mov
and
and
cltd
lods
xor
and
dec
leave
nop
daa
ret
aam
orl
imul
mov
mov
and
movl
out
xchg
cmpb
cli
loopne
fildl
xor
pop
out
or
xor
add
pop
testb
and
sahf
cmp
adc
jmp
mov
imul
insl
js
jg
test
lods
mov
sub
add
loop
das
adc
xchg
movsl
pop
pop
repz
sahf
lret
shl
xchg
cmpl
mov
jmp
sub
mov
fstpt
push
add
movlps
aas
dec
gs
movsl
mov
aaa
insl
xchg
jle
and
sarb
sahf
or
cmp
ficoml
mov
in
mov
push
sbb
insb
cmp
sub
inc
pop
xchg
mov
stc
pop
js
jle
and
divb
xchg
mov
mov
stos
jmp
xchg
stos
imul
outsl
pop
sub
lods
and
aas
inc
mov
pusha
scas
lcall
lret
lahf
fsub
push
pushf
add
jns
arpl
aas
push
mov
test
pop
mov
mov
cmp
aas
xchg
fcomi
in
outsl
lds
test
enter
ret
test
inc
pop
addb
cmp
inc
cmp
sub
popa
sbb
movl
cmp
call
call
faddp
lds
aas
mov
int
inc
int
pop
cld
push
popf
arpl
scas
lcall
xchg
jo
into
pusha
aad
sbb
iret
xchg
and
pop
aam
fstl
add
in
and
dec
lcall
ja
sbb
mov
movsb
je
sti
jb
mov
stc
pop
icebp
mov
cmp
push
jecxz
rorb
dec
icebp
mov
xor
cwtl
in
pop
mov
pop
addr16
and
add
jmp
or
fists
or
pop
repnz
dec
sbb
out
int
jle
jno
jno
xchg
dec
push
imul
inc
or
jb
pop
jno
xor
addr16
enter
mov
push
push
adc
hlt
stc
adc
test
pop
and
popf
test
sub
ret
dec
inc
ja
ljmp
pop
pushf
into
xchg
mov
pop
mov
jbe
pop
lahf
xor
aas
dec
notl
lcall
in
jne
push
push
push
sbb
xor
inc
lods
cmpsb
das
inc
out
lret
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
jmp
lods
mov
xor
pop
sbb
js
testl
aaa
leave
inc
xor
in
push
adc
imul
aaa
mov
push
mov
addl
outsb
sahf
fdiv
and
stos
lcall
mov
jmp
fcomip
xchg
je
sar
cmpb
mull
push
xchg
fadds
mov
cmp
scas
mov
outsb
add
lret
and
sub
add
dec
sarb
or
jle
xchg
mov
fadd
cmp
xchg
xor
out
popf
jns
arpl
addr16
push
call
pop
xor
sub
mov
mov
or
and
icebp
bound
pusha
je
add
xor
mov
aam
call
jecxz
xchg
or
mov
cld
push
aam
aas
adc
mov
shr
popf
cmp
cmp
mov
je
dec
test
sbb
outsl
stos
cltd
add
fmuls
leave
cmpsl
cwtl
mov
lods
ret
aam
repz
mov
jns
xorb
push
inc
loope
push
call
mov
sub
cltd
lret
out
jnp
mov
imul
mov
xor
inc
push
cld
dec
pop
inc
movsl
loop
lods
call
add
into
mov
mov
js
xchg
stos
jnp
jno
xor
add
out
les
adc
int
jb
add
xor
pop
mov
aam
lahf
fbstp
or
xchg
fbld
test
movsl
mov
movsb
inc
xor
xor
fs
mov
outsb
cmp
mov
lods
or
push
sbb
cmp
test
dec
cmp
jg
rolb
add
pushf
xor
mov
dec
adc
cmp
pop
adc
call
jmp
outsb
jg
inc
in
push
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
jmp
inc
mov
aaa
cwtl
arpl
push
pop
js
int3
adc
movlps
popa
inc
xor
loope
push
enter
add
mov
xor
push
clc
cmp
inc
js
fidivrl
das
orb
dec
adc
mov
jb
in
mov
in
push
pop
xchg
pop
vpunpckhqdq
cmp
and
pop
je
mov
cmpsb
loopne
loopne
sti
pop
in
xor
xchg
inc
sub
rcrb
int
mov
outsl
push
jae
mov
cmp
lea
in
xchg
lea
or
loope
inc
xor
out
push
pop
add
imull
xor
mov
xor
mov
push
sbb
fcom
jae
xor
or
orb
xchg
in
ss
das
pop
decb
fldcw
in
xchg
stc
adc
aam
fcoms
sbb
dec
outsb
sti
push
sbb
lcall
and
add
push
push
jne
xor
or
xor
sarl
in
es
ss
mov
adc
adc
movsb
fsubrs
xorl
pop
add
inc
in
xor
xchg
mov
and
jmp
lcallw
jmp
xlat
fcomi
dec
and
pusha
lret
imul
popl
dec
jge
mov
mov
in
mov
push
push
hlt
test
std
cmp
sti
xchg
test
sub
clc
les
out
add
cmc
into
cmpsl
mov
stc
aad
sub
outsb
fwait
xchg
jmp
jnp
adc
ret
lea
sub
cmc
adc
sbb
fildll
sbb
shl
xchg
inc
jecxz
repz
xchg
incl
out
xchg
mov
pop
ret
leave
ljmp
pop
dec
rcll
mov
ficomps
adc
cmp
jl
setne
jb
lea
popf
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
add
lret
lret
add
cmp
xor
movlps
mov
add
mov
pusha
jnp
mov
and
mov
jbe
sbb
mov
scas
call
sub
or
jae
bound
cmpsl
mov
aaa
adc
lret
xchg
ss
mov
jns
outsl
pop
add
cmp
sub
dec
or
cmp
addr16
pop
stos
mov
dec
sbb
lock
mov
xchg
mov
pop
or
addb
leave
outsb
iret
push
dec
out
or
mov
mov
ljmp
push
mov
cld
sub
and
add
aad
mov
cmp
sub
popa
into
xchg
mov
inc
add
outsl
popa
icebp
adc
jo
dec
fs
lds
cltd
rclb
jb
daa
and
or
jb
xor
or
jns
rol
sub
xor
imul
outsb
incb
jge
or
fwait
inc
push
mov
dec
add
add
cmp
inc
jg
cld
jg
popa
push
std
xchg
push
xchg
adc
sbb
push
push
or
call
mov
jmp
jp
outsl
mov
ss
fwait
insl
movsb
adc
sub
jb
mov
and
or
movsl
out
lret
jo
xchg
fcomps
fistpll
out
jb
lcall
icebp
jmp
rclb
jg
leave
push
stos
xchg
xchg
mov
sbb
cmpsl
clc
fisubrl
nop
nop
daa
mov
or
sbb
dec
dec
std
mov
jp
les
js
cmp
push
ret
ss
sarl
stos
cmc
pop
fnstsw
lods
repnz
int3
jg
test
inc
jbe
jo
cwtl
jbe
in
inc
pop
stos
xchg
out
sub
popf
insl
scas
ss
mov
adc
cmp
clc
out
and
pop
sbb
loope
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
jmp
inc
jl
xchg
pop
xor
js
in
sbb
movlps
test
sti
call
lods
insb
mov
sbb
fisubs
lret
subb
dec
mov
and
sti
push
sub
xchg
sahf
sbb
pop
fmulp
ss
or
imul
mov
add
sub
stos
movsb
add
xchg
icebp
inc
lcall
mov
sbb
out
cltd
das
les
arpl
in
ja
xchg
pop
ljmp
repz
test
fnstenv
test
cmpsb
icebp
icebp
cmpsl
lods
mov
ffree
mov
adc
out
jmp
stc
pop
sub
mov
lret
jmp
test
mov
shlb
das
and
mov
scas
orl
out
mov
mov
add
fstpl
or
rorl
xchg
movsl
lahf
dec
in
mov
push
pop
pushf
popf
cmp
xor
sub
and
dec
lods
test
lahf
fmuls
lret
outsb
xlat
mov
push
add
xchg
js
xorb
pop
adc
bound
in
rclb
jne
out
sbb
mov
push
je
ds
jle
dec
xor
pop
icebp
xlat
pop
stos
int
sbb
clc
pop
out
jno
and
inc
int3
and
add
jl
arpl
mov
add
push
xchg
pop
clc
add
sub
add
adc
mov
movsb
push
repz
sbb
cmpsl
gs
xor
frstor
push
pop
lcall
jae
xor
arpl
sarl
fcmovnbe
add
arpl
scas
fucom
sbb
adc
lock
loop
sub
mov
mov
imul
sub
into
andb
in
mov
incb
cmc
inc
mov
mov
out
ror
jge
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
jmp
jb
jecxz
gs
sbb
push
xchg
push
dec
dec
mov
movlps
add
ds
outsb
sbb
xorl
aas
test
cmp
push
stc
push
sarl
fidivs
rclb
mov
ret
ficoms
mov
lret
pop
add
or
xchg
or
dec
shrl
inc
dec
mov
push
fnsave
inc
fists
jle
pop
stc
dec
loopne
sarb
pop
mov
sub
xchg
pop
es
out
push
push
and
push
dec
test
mov
cwtl
pushf
adc
arpl
add
loope
jp
in
jae
icebp
push
pusha
push
in
mov
mov
mov
jg
inc
jg
and
pushf
fstl
clc
jae
or
and
iret
cmp
xor
fsub
in
cmp
or
dec
fmull
fwait
test
sub
int3
add
push
dec
imull
stos
cmp
adc
les
loope
outsl
loopne
lods
lea
imul
stos
xchg
das
outsb
sbb
inc
jp
xlat
mov
dec
and
cmpb
je
imul
mov
fisttpll
imul
rcrl
gs
inc
sub
push
pop
adc
jae
inc
stc
xchg
and
dec
xor
pop
icebp
fldl
aam
orl
jne
push
lahf
sbb
std
cmc
jbe
enter
les
ja
ret
fnstcw
ds
inc
sbb
lods
das
bound
xor
fisubs
jo
bound
adc
jl
iret
mov
loopne
jmp
push
add
xor
pop
imul
and
fcoml
dec
sbbb
in
jae
mov
fldt
call
daa
sub
sub
or
xor
push
inc
xor
or
mov
add
repnz
outsb
es
mov
iret
andl
fwait
repz
pop
push
dec
dec
dec
loop
and
nop
lea
push
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
jmp
imul
xor
and
mov
fs
xor
mov
movlps
pop
jns
sbb
ret
adc
aaa
dec
mov
imul
xchg
cmp
out
sbb
popa
popa
or
int
sti
mov
and
stc
xor
xchg
pop
shrb
loopne
inc
js
dec
inc
in
cltd
setg
sahf
cmc
icebp
das
push
fisubrl
mov
xchg
mov
mov
mov
jp
push
pop
dec
jl
adc
or
dec
mov
mov
dec
mov
pop
in
stos
sub
nop
push
mov
mov
mov
add
xchg
add
fcompl
pop
sub
in
mov
mov
jmp
fstps
repz
nop
lods
lcall
jne
and
push
ret
pop
int
aas
inc
in
add
sbb
adc
fs
int
loop
dec
dec
cmc
cmp
ds
jge
sahf
inc
add
lcall
fnstsw
or
push
jp
or
nop
inc
mov
cltd
jp
lcall
shll
arpl
mov
rorb
fmuls
nop
or
sub
ret
xchg
mov
or
out
test
mov
aam
push
mov
imul
and
neg
jae,pt
push
sub
stos
xchg
test
ja
mov
sbb
dec
jb
xchg
inc
sbb
movsl
into
xchg
lock
sub
jbe
into
add
sub
aad
fsubp
cmpsb
push
mov
sti
ds
dec
ds
incb
arpl
pop
iret
ds
and
pop
mov
jne
pop
pop
rcrb
das
and
cmp
sahf
xor
out
jge
pextrw
push
scas
mov
cmp
rorl
pop
stos
aas
int3
sub
nop
cld
dec
loope
fiaddl
outsl
push
out
ret
loop
out
ds
jno
or
loop
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
jmp
mov
xlat
sbb
scas
repnz
jle
mov
adc
push
xchg
jmp
cmp
repnz
mov
lea
test
inc
addr16
pushf
shrb
arpl
jecxz
add
add
ret
push
xchg
mov
cmpsb
mov
out
shlb
cs
inc
movsb
outsl
pop
pushf
int
jmp
out
push
add
pushf
push
imul
push
push
push
call
cmpsb
sti
cmpsb
push
push
popa
cmpsb
scas
xor
fcmovb
fadds
mov
pop
pop
sbb
ljmp
or
jb
push
rcl
or
aad
arpl
test
fstl
in
scas
leave
mov
and
push
call
ret
jge
push
cmpsb
add
sub
fcmovb
mov
icebp
sbb
adc
cli
xchg
ja
pop
add
fidivrs
mov
imul
fcomps
pushf
gs
pop
or
sub
add
lock
push
or
js
add
xor
insb
dec
inc
ucomiss
call
pushf
cli
pop
mov
jns
test
mov
int
cmpsl
loope
pop
cmpsb
in
dec
scas
xchg
adc
das
pop
adc
xor
loop
rcl
aaa
imul
pop
push
inc
inc
push
push
push
xor
xchg
mov
mov
mov
out
lret
push
jl
insb
xchg
push
jno
cmpsb
arpl
mov
cmp
repz
outsl
test
push
jge
dec
inc
outsl
cltd
mov
ficoml
and
pop
mov
dec
int
mov
rcrl
nop
cld
jbe
mov
jl
cli
sbbb
js
inc
nop
rorb
out
mov
icebp
popf
addr16
inc
and
out
and
imul
in
aad
test
mov
jno
xor
hlt
inc
push
sub
sahf
xor
lods
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
jae
cmp
movl
jae
subl
shrd
movl
shr
ret
mov
xorl
xor
and
movl
shr
ret
xor
xor
ret
push
mov
sub
and
movl
cmpl
movl
mov
mov
movl
jmp
movl
jae
push
pushl
call
adc
and
mov
sbb
sub
andl
mov
cmpl
movzbl
notl
movl
mov
jmp
notl
jle
push
pushl
push
pushl
call
xor
add
andl
movl
or
add
mov
movl
mov
mov
or
movl
movl
sbb
movl
mov
mov
or
push
and
movl
cmpl
mov
movl
mov
jmp
mov
notl
jge
pushl
pushl
call
sub
and
sub
movzbl
or
add
neg
subl
movl
movzbl
sbb
push
adc
movl
add
mov
mov
push
orl
push
orl
push
sbbl
jmp
shrb
push
sbb
mov
mov
adc
lahf
movlps
rclb
loope
cld
cmp
cmp
pop
imul
xchg
add
inc
inc
jo
add
pxor
out
mov
xchg
jmp
pop
adc
xchg
movsl
pop
nop
sbb
out
dec
enter
inc
icebp
orb
movsl
mov
out
jbe
xchg
and
xorl
push
mov
aad
inc
push
fsubl
mov
je
push
enter
jmp
adc
pusha
lods
jmp
jns
push
or
mov
mov
jns
gs
addr16
add
push
out
mov
cli
sbb
pcmpeqw
xlat
sbb
enter
test
pop
mov
sbb
ja
inc
mov
or
cmpsl
scas
insb
or
jmp
popf
mov
fstl
sti
jge
pop
xchg
xchg
mov
les
jg
jl
popa
sub
jmp
mov
mov
mov
jns
cwtl
dec
in
loope
sbb
jae
inc
dec
mov
sbb
sbb
std
fsubrs
test
pop
sbb
movl
out
adc
shll
or
jae
aas
mov
sub
loopne
rep
push
mov
lret
sarb
push
test
inc
int
and
xchg
cltd
xchg
jne
mov
mov
scas
nop
icebp
stos
cwtl
sbb
shl
push
adc
lods
push
sub
cmp
and
adc
sti
dec
fdivrs
stos
adc
dec
stc
lret
jno
sti
mov
push
test
lcall
lods
in
in
mov
pop
jle
inc
cwtl
sub
hlt
add
mov
pop
and
xor
push
test
mov
cmp
push
gs
push
cld
xor
sub
adc
popf
movl
call
rcrb
and
in
out
mov
fldcw
mov
mov
mov
leave
cli
dec
jecxz
ror
mov
fwait
pop
adc
movsl
test
or
cwtl
jl
lods
pop
mov
pop
pop
cmp
xchg
sbb
cmp
jbe
dec
lcall
flds
cmp
add
pop
push
daa
push
adc
sbbb
inc
cmp
daa
xor
sbb
cs
inc
js
or
cltd
repnz
inc
pop
adc
call
icebp
in
jg
outsb
inc
push
aas
adc
outsb
ja
inc
xor
cmp
xor
in
nop
or
and
aad
enter
lods
divb
add
add
mov
movl
jmp
mov
mov
jae
push
call
mov
mov
sub
xor
andl
sbb
adc
adc
or
mov
xor
mov
mov
orl
push
addl
or
sbbl
push
addl
or
sbbl
xor
subl
xor
decl
push
push
call
not
mov
and
mov
push
push
push
push
call
cmpl
mov
mov
jmp
movzbl
movl
ja
push
push
pushl
call
add
mov
sub
addl
sub
sub
sbb
mov
mov
adc
mov
and
movl
cmpl
notl
mov
jmp
movl
jbe
pushl
pushl
push
call
mov
sbb
andl
subl
addl
and
xor
xor
mov
sub
add
andl
movl
xor
movl
movl
movl
cmpl
movl
mov
jmp
movl
not
jne
push
call
subl
or
sub
sub
add
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
jmp
mov
and
loopne
inc
mov
adc
lahf
movlps
cwtl
ss
xor
int
loopne
cld
popa
pop
fisubl
adc
popf
jne
cltd
call
sub
sub
int3
stos
icebp
int3
shrl
hlt
test
cmp
test
inc
in
popa
clc
jno
xor
jo
push
cmp
xor
sub
jb
or
push
mov
pop
pop
xor
lcall
cmc
xlat
cs
adc
mov
pop
pusha
roll
and
es
mov
call
and
sbb
insl
sbb
push
cltd
and
loope
ja
stos
cmp
outsl
adc
xchg
insl
adc
jecxz
insl
ret
pop
mov
dec
jle
mov
dec
movsb
andb
cmp
mov
and
rorl
fsubs
dec
inc
fisubl
mov
in
cmp
loop
xor
aad
in
data16
mov
dec
mov
xchg
inc
imul
adc
pop
mov
shl
or
leave
cmpsb
sbb
in
jmp
movaps
push
dec
adc
fsubrl
gs
inc
xor
jb
daa
arpl
mov
imul
sub
xor
rsm
dec
jo
jno
push
rcr
call
daa
mov
sbb
in
lods
jns
sbb
mov
rolb
call
xchg
enter
or
pop
inc
push
add
mov
pop
push
dec
dec
iret
adc
lret
push
ret
adc
test
ret
aas
repz
and
daa
test
xor
jmp
and
lret
xor
pop
enter
sub
sti
xchg
cmp
out
in
notb
or
or
xchg
mov
push
xchg
inc
mov
in
stc
lods
push
xchg
popa
out
fs
push
mov
loopne
in
cmp
sub
mov
out
arpl
pushf
shrl
cmp
aas
jl
xor
sbb
les
mov
fmuls
mov
jns
test
inc
repz
adc
inc
or
jmp
int
rcrb
fistl
out
xlat
xchg
mov
ljmp
sub
adc
jae
mov
mov
test
jmp
adc
or
inc
shlb
jns
pop
ror
adc
or
and
int
lock
dec
clc
push
sahf
push
or
hlt
sub
data16
jg
cltd
jl
and
mov
jne
imul
lcall
xchg
dec
mov
lods
pop
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
jmp
jbe
mov
imul
cmpl
scas
adc
lahf
movlps
add
shrl
imul
push
aaa
or
lcall
fs
data16
sbb
jnp
pop
shrb
lret
pop
xor
adc
push
or
fwait
ss
aas
dec
repnz
xchg
dec
inc
notb
jl
inc
ja
mov
jno
iret
lcall
das
arpl
jle
push
mov
lea
or
ficomps
or
jae
ret
ja
mov
add
sbb
ficoms
push
scas
lea
lea
cmpsb
mov
add
lahf
je
pop
mov
jae
jbe
lea
stc
das
mov
frstor
testl
scas
out
jp
test
add
adc
push
dec
or
pop
nop
lods
sub
movsl
cmp
outsl
and
das
mov
cmp
pop
mov
shll
icebp
add
nop
loopne
arpl
jg
jae
adc
mov
jb
ljmp
mov
in
pop
xchg
pusha
pop
scas
inc
out
loope
adc
pushf
loopne
loope
repnz
aaa
les
shrb
aad
push
in
loop
adc
push
mov
out
mov
stos
add
push
dec
or
loop
sbb
data16
mov
stos
insb
xchg
fldcw
sub
mov
sahf
xchg
push
or
jmp
mov
lahf
mov
cmp
pushf
mov
xor
or
jbe
mov
push
aas
xchg
arpl
mov
fldl
stc
fiadds
nop
call
in
fisttpll
std
jg
fwait
mov
stos
divb
mov
ret
sub
pop
push
pop
mov
mov
mov
fsubp
cmc
inc
int
cmp
lods
jl
stc
repz
decb
inc
ljmp
inc
mov
loope
xor
xchg
jo
mov
mov
xor
add
inc
xchg
mov
les
daa
loopne
push
push
dec
icebp
hlt
das
adc
mov
std
aas
adc
inc
dec
push
into
lods
ds
push
push
xchg
inc
movsl
sbb
int
and
test
daa
sbb
je
lret
xchg
lods
flds
hlt
cmp
out
mov
xor
jl
das
xor
sbb
add
push
stos
sub
xor
push
nop
cmp
cmc
inc
popf
dec
inc
test
mov
jne
outsl
aam
test
dec
push
adc
xor
xor
add
mov
adc
jmp
addl
scas
sbb
pop
add
es
mov
adc
mov
and
mov
test
xlat
and
test
add
mov
jbe
clc
add
stc
aaa
shr
jle
stc
aaa
cmp
je
pop
xchg
les
jmp
push
hlt
jmp
mov
cmc
jge
and
cmp
fs
mov
and
xlat
stc
push
inc
movl
push
gs
sub
xor
das
sbb
adc
pushl
shlb
cmp
ljmp
cmpsb
ds
fsts
adc
dec
inc
lret
dec
sti
sub
out
sbb
jae
dec
aad
xor
ja
mov
ljmp
jne
lahf
mov
lods
pop
pop
lcall
mov
mov
js
push
xchg
mov
fwait
adc
fstpl
pop
movsb
addr16
shlb
cmpsl
loope
and
insl
sbb
dec
imul
mov
lahf
or
pop
cmp
add
adc
push
int
test
std
jecxz
sub
es
mov
pop
cmp
inc
sbb
pop
adc
adc
neg
popw
add
push
fistpll
add
mov
xchg
dec
and
mov
repz
shll
xchg
pop
int3
add
mov
mov
xchg
jle
push
sub
mov
or
push
sbb
jle
aad
or
xchg
mov
adc
mov
push
push
lahf
jmp
xchg
mov
je
jmp
cs
pop
cwtl
sbb
push
jle
push
or
add
bnd
into
fs
jl
sub
sub
push
lds
xor
push
push
lret
ss
mov
aaa
test
pop
cmp
cltd
imul
lea
sbb
in
pop
mov
add
lcall
dec
stos
in
mov
sub
daa
or
nop
arpl
es
ds
pop
orl
mov
das
xor
adc
mov
jle
push
daa
cwtl
sub
inc
lahf
enter
fstps
fiaddl
jge
mov
lock
jo
jl
fcompl
pusha
xor
jecxz
add
out
scas
mov
xchg
adc
fadds
movsl
sub
adc
cmp
test
jbe
push
cmp
xor
sub
dec
ljmp
jmp
repz
push
fsubrs
insl
mul
mov
cmp
jne
cmp
je
movl
movl
jmp
pop
repnz
push
mov
call
mov
lahf
movlps
test
add
push
ja
insb
mov
or
cmp
cmp
jecxz
test
arpl
xchg
lds
xor
and
jns
mov
mov
add
pushl
mov
adc
aas
bound
jns
cmp
mov
add
dec
daa
js
mov
jecxz
add
sub
pop
lods
or
std
repz
cltd
push
lcall
popf
rcr
add
jno
lock
jg
fistpll
xlat
movsb
push
push
scas
daa
outsb
out
push
inc
adc
mov
xchg
mov
push
mov
jne
lods
dec
js
in
divb
popa
inc
fstpt
add
mov
enter
xchg
daa
push
loope
scas
mov
xor
in
insl
inc
cmp
pop
xchg
mov
sbb
mov
push
testb
add
cltd
adc
bound
dec
ds
mov
cmpsl
and
jne
and
sub
fsubs
repz
arpl
fbld
nop
mov
add
mov
out
fidivs
movhps
test
lea
and
jns
imul
jae
or
push
or
adc
fisttpll
push
sbb
mov
push
test
or
arpl
xor
sub
popf
movsb
mov
popf
ret
imul
lret
aaa
je
nop
mov
sub
les
out
jnp
filds
pop
insl
repz
orl
cmc
jecxz
push
mov
xchg
push
mov
cltd
and
adc
sti
add
lods
inc
iret
sbb
mov
fldcw
jl
mov
jns
inc
adcb
ss
repz
sbb
stc
mov
jle
loopne
out
and
jb
je
or
dec
hlt
lret
arpl
lds
inc
ret
jmp
fisttpl
jle
stos
lds
je
imul
xchg
mov
xchg
cmp
scas
xor
loope
jb
aaa
mov
adc
out
pop
mov
lcall
bound
mov
sbb
lods
jne
push
scas
push
jo
mov
mov
adc
mov
lock
jns
loop
jp
test
xor
int
fidivrl
mov
in
aaa
mov
adcb
aas
movsl
inc
pop
add
and
sub
inc
popf
jg
sbb
sbb
gs
ljmp
pop
mov
int3
ljmp
xchg
sub
add
add
add
pop
add
rcll
push
bound
out
stos
outsl
sahf
adc
lahf
movlps
nop
ret
fwait
sbb
in
outsl
sti
dec
adc
in
sub
pop
xchg
dec
pop
cli
inc
aad
loope
mov
push
into
mov
scas
pop
jge
adc
jno
lcall
mov
adc
xchg
cmp
xor
jecxz
add
enter
push
cmp
sbb
jo
imul
test
xor
pushf
jno
pop
sbbb
cmp
xchg
xchg
and
cmpsl
jp
jecxz
xchg
dec
inc
or
mov
jecxz
in
aam
hlt
xchg
push
cmp
sti
cmp
mov
push
repz
cmp
mov
mov
add
pop
cmp
push
add
mov
jecxz
shrl
and
lods
push
std
lret
inc
mov
out
xlat
shr
lock
daa
inc
dec
dec
xchg
fiaddl
push
mov
cltd
ret
imul
movsl
pushf
in
cmpsl
inc
inc
xor
dec
xor
add
dec
in
lea
mov
imul
insb
xchg
jle
dec
mov
jecxz
sar
in
mov
jnp
adc
dec
pop
pop
int3
cmpsl
push
aas
xor
add
cmpsb
fildll
sub
mov
aas
sbb
hlt
fwait
add
xor
push
add
fwait
dec
xchg
push
mov
pop
mov
pop
stos
and
test
xchg
mov
push
cltd
test
lods
lahf
or
sahf
test
jb
adc
lea
int
fcmovne
out
je
push
sbb
cmpsl
popa
mov
sub
jbe
sbb
push
push
sti
cmp
sbb
nop
lock
add
inc
jg
adc
js
cmp
sbb
sub
ljmp
rolb
sub
cmp
int
fsubrp
out
repz
cmovne
setns
sbb
inc
mov
pop
mov
sbb
int3
pop
stos
mov
mov
aaa
adc
aas
sbb
dec
addr16
pop
and
push
mov
dec
cld
and
xor
jo
jnp
fwait
adc
nop
xor
xchg
push
push
hlt
sbb
out
inc
cmp
and
jns
std
ja
rolb
cmp
les
popa
nop
test
xlat
mov
xor
sbb
test
jns
pop
addr16
jae
call
sbb
test
xchg
mov
enter
dec
cmpsl
flds
loop
adc
mov
mov
push
std
xchg
and
inc
lods
je
lds
push
dec
mov
push
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
jmp
sbb
cmp
sbb
notl
jle,pn
xchg
adc
lahf
movlps
push
xchg
out
in
in
test
push
jnp
push
and
vsubps
or
cmp
mov
mov
imul
cmpb
enter
dec
push
or
inc
fcmovu
xor
mov
adc
xor
cltd
fs
in
jecxz
fnstenv
jmp
sbb
jnp
call
imul
xchg
adc
pusha
cmp
jge
dec
mov
lcall
enter
imul
push
mov
xchg
or
shll
aaa
jl
push
push
push
or
mov
mov
lock
leave
mov
xchg
fsub
jl
cwtl
adc
stc
dec
sarl
dec
addr16
inc
lret
sub
cmp
push
pushf
shll
xchg
cmp
pop
test
sbb
std
cmp
jmp
sbb
leave
add
sbb
mov
fisubs
or
cmp
test
mov
push
insb
cmp
pop
mov
and
sbb
lret
movsb
xor
addl
clc
adcb
inc
sbb
mov
adc
in
inc
mov
mov
sbb
int3
xchg
xchg
sbb
test
add
test
test
dec
push
mov
std
fcomps
lea
adc
push
mov
dec
add
lahf
cmp
addb
lcall
cmpsb
int
into
fisubrs
mov
mov
stos
adc
mov
inc
outsl
push
ljmp
inc
jae
stc
idivb
mov
pop
insb
outsb
outsl
and
popf
aad
sub
push
mov
mov
pop
mov
out
sbb
or
insl
cli
or
add
push
xchg
pop
lea
lret
stc
bound
inc
xor
das
mov
or
stos
cmp
xor
ret
sub
or
cmp
das
push
lea
dec
adc
or
xor
mov
add
sahf
sarb
cmp
roll
ljmp
mov
or
mov
mov
inc
pushf
mov
pop
push
ja
loope
sbbl
xchg
cmpsb
push
sbb
xacquire
shlb
pusha
lods
je
jp
jbe
shll
ljmp
ja
not
jmp
cmp
xor
or
shrl
dec
fdivl
sub
ja
lahf
aam
xchg
mov
stc
jl
cmpsl
sub
ds
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
jmp
xchg
jnp
stc
pop
jno
loop
cmp
xor
stos
mov
adc
mov
inc
cs
or
jmp
mov
dec
adc
add
cmp
ss
adc
push
adc
stos
inc
add
repnz
ja
jns
cmp
ja
fdivrs
fdivrs
test
imul
xchg
mov
dec
jns
sbb
cltd
fbld
mov
cmpsl
mov
iret
mov
or
cmp
mov
xchg
xor
out
daa
push
addr16
cmp
shlb
leave
jnp
mov
imul
and
insl
fisubrl
shll
jne
insl
rorl
sti
push
pushf
fildll
test
mov
dec
in
pop
in
mov
or
and
sub
add
push
bound
dec
add
and
je
inc
adc
fs
jnp
sub
xchg
out
std
sub
lcall
xor
in
pop
insl
cmc
gs
filds
add
add
inc
in
in
or
les
mov
test
aas
aas
mov
hlt
xor
jnp
and
imul
ror
sahf
in
into
jb
cltd
insb
shl
bound
add
pop
out
sahf
rol
mov
cmpsl
push
lea
xor
lock
or
call
mov
aam
scas
jnp
pusha
test
jmp
call
mov
dec
outsl
cld
imul
push
mov
xlat
adc
cmpsb
cmpsl
mov
cld
add
inc
pop
lods
mov
repz
shll
push
inc
mov
and
adc
in
dec
dec
add
aad
pop
aad
and
cmpsl
sub
imul
cmpsb
lea
ret
in
lcall
or
sub
push
hlt
notl
inc
jl
add
int3
push
lds
inc
rorl
jle
jo
mov
rcl
insl
xchg
or
lock
xchg
jge
ljmp
pop
test
and
invlpg
aaa
mov
jne
jae
aad
mov
or
jne
popa
movsl
sahf
test
out
aas
add
sarb
incb
mov
sahf
push
jl
mov
shr
inc
nop
lret
in
out
lods
adc
shlb
push
fbstp
or
xchg
orb
in
sub
dec
push
repnz
pusha
mov
mov
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
jmp
sbb
ja
pop
sbb
push
inc
cwtl
lods
adc
adc
add
jo
mov
dec
out
sti
or
adc
pop
xchg
mov
push
sbb
stos
lods
call
ss
scas
sbb
mov
push
add
rcrb
sarl
add
mov
inc
mov
ds
dec
out
arpl
jnp
adc
popf
mov
push
out
mov
fdivr
inc
mov
orb
mov
pop
mov
xchg
nop
sub
inc
cli
sbb
sub
inc
mov
lods
mov
add
sub
sub
mov
or
cmp
adc
test
mov
push
dec
sbb
repz
pusha
ja
jecxz
loopne
loop
adc
dec
xor
xchg
push
add
or
insl
test
mov
mov
push
adc
mov
aas
mov
mov
or
and
sub
je
push
popa
int3
xor
sub
adc
jle
adc
hlt
adc
mov
mov
add
sub
sarl
mov
mov
pop
mov
in
or
in
addr16
push
push
inc
and
bound
mov
xchg
bound
mov
mov
data16
sahf
mul
jl
hlt
cmc
rclb
scas
bts
cwtl
aad
addl
lods
and
popa
add
lahf
push
sub
enter
xor
in
push
fs
test
cmp
xlat
sbb
sbb
pop
sbb
mov
jge
iret
gs
dec
sub
pusha
adc
xchg
das
fistps
test
out
cmpsl
loop
xor
add
leave
dec
jecxz
arpl
and
je
out
ret
jg
xchg
mov
rorb
cmpsb
jle
aad
fs
cwtl
mov
sub
shlb
cmp
sbb
mov
mov
push
push
std
jle
andl
mov
dec
dec
cmp
rol
sti
ret
fdivrl
das
out
cmp
or
dec
repz
xor
dec
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
jmp
sbb
sbb
and
daa
les
pop
movlps
cmpsl
mov
mov
aaa
add
cmp
inc
xor
je
test
in
jl
scas
cmp
rolb
popf
xor
sahf
jbe
pop
cltd
bound
push
fdivr
sub
push
mov
xchg
lret
dec
push
loope
sbb
jnp
addl
lds
insb
cmp
add
jo
mov
mov
sbb
jge
sbb
sub
fdiv
leave
xor
mov
insb
mov
or
call
cmpsl
js
shrl
mov
popf
mov
and
fs
incl
cmp
or
stc
out
adcl
and
fs
inc
popa
inc
pop
dec
fs
adc
lock
subb
or
shl
mov
pop
cli
or
jns
adc
xchg
std
daa
std
int
in
sbb
aam
int3
sbb
add
std
xlat
pusha
fldl
popa
fnstsw
sbb
dec
mov
sub
int
icebp
add
cmp
shrl
enter
movsb
jae
pop
push
shrb
jbe
xorl
mov
mov
aad
inc
pushf
fs
mov
push
insl
adcb
data16
xor
adc
hlt
enter
xchg
jne
fisubrl
cmpsb
mov
sbb
push
or
iret
inc
imul
jl
mov
xchg
movsb
mov
mov
jmp
inc
inc
test
push
int3
adc
push
xchg
mov
cmp
xor
ljmp
rcr
xchg
jl
movsb
ror
jo
fisubl
adc
out
cmp
mov
addl
jl
lea
dec
mov
test
out
movsl
pushf
dec
dec
cltd
lds
cmp
mov
ret
inc
dec
mov
pop
jmp
jns
xchg
aam
aam
test
jae
sti
adc
outsb
enter
fsub
inc
pop
in
mov
or
js
and
in
addr16
adc
lea
hlt
mov
pusha
lret
shl
lcall
mov
sub
or
push
clc
mov
jmp
fdivl
fnstcw
sbb
push
cwtl
insb
insb
lahf
adcb
pop
movlps
sbb
das
push
mov
ds
xor
and
iret
imul
or
jecxz
aaa
mov
ret
clc
add
xchg
cmpb
dec
jp
push
or
pop
ret
repz
inc
sbb
orb
idivl
cltd
xor
out
xor
scas
xor
jge
add
push
push
mov
pop
loop
loop
in
out
cwtl
scas
pop
jmp
mov
jmp
in
push
int3
xchg
outsb
mov
adc
xor
jl
push
pop
mov
dec
xchg
cmp
push
in
lcall
shll
cwtl
mov
mov
mov
cmp
jecxz
in
dec
jl
ja
pop
movsb
rep
sbb
in
push
dec
push
inc
cwtl
jae
xchg
stc
ss
mov
cmpsb
add
dec
sahf
test
push
decb
cmp
inc
xor
cwtl
push
mov
pop
mov
das
and
push
cld
mov
and
xchg
mov
jp
mov
loop
jnp
dec
dec
pop
dec
push
test
xchg
dec
cmp
xor
cmpsl
mov
dec
sub
mov
rclb
pop
aam
xor
in
and
scas
jg
outsl
push
lods
cmp
fldt
push
pop
adc
dec
mov
cmp
mov
repnz
or
clc
and
dec
mov
outsl
out
jle
subl
xor
inc
enter
add
fmuls
ja
push
mov
cld
push
bound
pop
lahf
ret
ljmp
sti
ja
dec
mov
imul
or
jp
adc
jbe
mov
shlb
cmp
sbb
cmp
cwtl
popa
inc
into
sarl
cwtl
dec
lret
jb
fisttps
inc
insl
dec
pushf
outsb
sahf
out
cld
mov
jge
pop
bound
fs
stc
sbb
add
mov
mov
ja
mov
push
aas
out
inc
push
mov
bound
xchg
pop
pop
or
and
pop
shl
test
jbe
cmc
adc
sti
push
push
clc
neg
lret
sub
fnsave
aam
dec
push
sub
rorl
inc
or
add
ret
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
jmp
nop
xchg
cltd
lret
pop
dec
mov
push
out
lods
ljmp
adc
dec
xor
lods
rolb
or
pop
mov
xchg
xchg
xor
sbb
sarl
push
push
scas
std
nop
cmc
xor
movsl
sbb
cs
js
roll
lcall
pop
icebp
mov
ficompl
mov
jne
inc
xchg
ficoml
sti
dec
lods
jmp
adc
sbb
insb
sti
inc
cmp
push
ss
icebp
dec
movsl
lds
gs
gs
shll
pushf
push
add
inc
jge
mov
or
fcoml
xchg
movsl
mov
jo
or
push
sub
jbe
insl
or
push
fsubrl
lcall
cmp
mov
dec
xchg
push
lds
test
jae
gs
xlat
add
loop
aaa
ds
pop
mov
rolb
sub
lds
mov
loopne
enter
movsb
in
daa
mov
jmp
enter
or
mov
into
ds
ficomps
add
mov
lods
add
mov
adc
stos
pop
sub
sub
xchg
dec
stos
cltd
out
add
jne
lret
xchg
adc
sahf
pushf
pop
xchg
jnp
jno
push
push
in
adc
push
es
icebp
sahf
cltd
test
es
insl
out
aad
test
mov
rcrl
xor
jbe
lds
or
decb
cmp
mov
ljmp
sti
and
mov
shl
call
mov
outsl
fimuls
notb
push
dec
bound
rcll
pop
mov
cmp
ljmp
ds
mov
and
xor
and
jmp
adc
pop
jne
xchg
dec
loop
push
mov
jle
mov
or
xor
dec
mov
dec
loopne
aad
mov
loop
fbld
inc
repnz
adc
xor
fidivl
add
inc
xor
lds
scas
and
adc
arpl
iret
add
ret
pop
and
mov
push
aaa
dec
mov
scas
in
fistl
ljmp
and
inc
cmpsl
jge
fwait
xchg
pop
jecxz
adc
insb
jnp
mov
ret
pop
add
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
jmp
add
popf
pop
sbb
push
divb
adc
adc
adc
xor
pop
fistps
pop
mov
cmp
inc
mov
in
js
arpl
inc
aam
sbb
fildl
sub
mov
and
dec
aas
cmpb
shlb
ja
fsubrl
ficoms
rclb
inc
or
jnp
push
mov
cmpsl
lods
pushf
sub
xchg
ret
jle
in
into
push
inc
xlat
xor
das
sub
jnp
push
inc
push
push
decb
call
in
jecxz
ret
cmp
jecxz
enter
cmpb
adc
dec
daa
data16
push
fstpl
iret
fs
roll
mov
dec
iret
jge
xchg
and
dec
xor
repz
shr
ja
pop
add
imul
mov
iret
es
sub
mov
cmp
and
loope
adc
cmpsl
push
fs
dec
add
jecxz,pn
stos
jl
push
xchg
cmp
movsl
das
dec
pop
insb
push
fstps
cli
jno
out
rolb
outsl
push
lahf
pop
xchg
sbb
fwait
clc
rcl
sub
adcb
push
sbb
scas
add
push
cltd
xlat
cmp
hlt
mov
dec
in
xor
out
pushf
mov
test
push
outsl
mov
xchg
jg
test
vmptrst
out
xchg
jmp
ds
popf
sbb
sbb
dec
sbb
leave
loop
ljmp
fnstenv
push
mov
mov
jb
sbb
pop
and
jnp
jp
fsts
mov
lret
adc
mov
or
jnp
je
xchg
test
daa
inc
and
ljmp
in
cmpsl
jo
xor
fisubrs
int3
cmp
out
lock
int3
ss
jecxz
movsl
scas
cwtl
pop
addr16
mov
jns
xchg
xor
lds
cmp
js
inc
mov
js
dec
out
ret
ja
lret
cmp
gs
es
test
sub
iret
add
dec
pop
shr
adc
adc
les
jmp
mov
push
mov
sub
dec
add
fistpl
ljmp
mov
ds
inc
nop
sbb
mov
xor
push
mov
insb
mov
and
inc
movsl
setbe
cmp
dec
jle
xchg
mov
data16
adc
hlt
mov
or
push
sbb
outsb
stos
mov
dec
mov
minps
dec
sub
sbb
pusha
das
aaa
lcall
scas
xor
pop
mov
lods
das
dec
js
lods
dec
shrb
push
into
movl
mov
push
push
push
shr
ret
mov
sub
cmp
sbb
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
jmp
std
push
mov
ja
pop
jmp
mov
jo
adc
adc
adc
cmp
insl
lcall
fisubrl
ret
push
out
sub
roll
imull
rcll
loopne
inc
adc
and
in
rcl
orb
add
ja
stc
test
rcll
jecxz
xchg
xor
push
out
and
adc
sub
arpl
test
je
sbb
scas
rcrl
xor
xchg
inc
sub
inc
loope
ja
adc
cmp
aas
mov
push
adc
les
shlb
cmpsl
incl
inc
mov
in
jp
es
dec
mov
negb
fildll
insb
dec
pop
mov
in
aas
pop
mov
gs
push
pop
jne
pop
inc
dec
es
push
test
add
fadds
insb
mov
mov
imul
push
inc
mov
cmp
roll
fsubrl
sarl
mov
repz
cmpsb
pop
xor
lahf
fnsave
hlt
movsb
cmp
cltd
leave
mov
nop
mov
fsubs
pop
shrb
add
les
dec
iret
aam
sub
imul
punpckldq
mov
arpl
popa
sub
data16
mov
pop
and
jl
ror
cmpsl
mov
popf
loope
adc
adc
pusha
push
movsl
push
xor
shll
ds
dec
pop
dec
sarw
sub
or
lods
andb
jp
sbb
cmp
cmp
mov
aad
add
mov
insl
mov
xchg
lds
adc
mov
and
mov
mov
cmp
test
cld
bnd
dec
cs
push
in
cmpsl
scas
cmp
test
mov
inc
fsubl
pop
push
xchg
and
test
loopne
cmp
inc
cmp
sub
insl
sarb
idivb
xchg
inc
xor
cmp
sub
mov
jns
pushf
or
rorl
mov
pushf
pushf
fs
inc
movsb
sub
pop
sub
xchg
xchg
or
adc
pop
push
mov
ss
push
push
xor
pop
inc
xchg
mov
clc
loopne
cmp
cs
adc
add
ja
cmp
dec
cmp
pop
cmp
sub
jmp
cmp
nop
je
popf
das
lcall
frstor
sub
pop
push
shrl
jne
jno
fildll
int
xchg
lret
dec
out
out
cltd
add
push
xor
fmul
testl
pop
clc
xlat
js
add
sbb
xchg
shrl
loopne
dec
in
inc
cmc
push
mov
pop
jl
adcb
xchg
push
xlat
mov
mov
outsb
into
adc
xor
pop
clc
outsl
push
jbe
xor
adc
lahf
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
jmp
decb
sub
ficoms
js
outsb
adc
ficoms
adc
ljmp
jno
loopne
cmp
sbb
jbe
aaa
push
push
pop
iret
adc
mov
gs
xchg
fcompl
xlat
inc
jp
dec
push
je
xchg
pop
outsb
mov
xorb
pop
inc
push
mov
add
test
adc
mov
or
imull
ljmp
stos
inc
push
movb
push
lret
push
cmpsb
inc
mov
dec
jecxz
test
xchg
mov
ret
push
mov
ja
inc
mov
pop
sbb
movsb
arpl
lret
and
shrb
dec
fidivrl
adc
xchg
out
and
mov
mov
and
lods
leave
push
xor
push
orb
xchg
xlat
leave
xchg
movsb
addb
pop
xchg
out
or
jne
je
call
add
popf
push
sbb
out
xor
test
fsubs
lret
pushw
mov
fdivrs
pop
loop
cmp
fisubs
add
jae
dec
outsb
mov
jns
jns
mov
push
stos
loope
xchg
mov
xchg
lods
ret
mov
pop
aam
push
inc
fldenv
lds
fistpl
dec
cmp
cmc
imul
sub
pop
inc
dec
adc
sbb
adc
stc
iret
xor
icebp
out
push
mov
pusha
cwtl
cltd
pop
lea
and
aad
sbb
rclb
aad
xchg
mov
mov
int
xchg
pop
inc
repz
mov
andb
fldenv
jno
push
enter
shr
shr
push
push
or
cwtl
mov
sub
dec
or
shl
add
andl
dec
push
sbb
mov
jnp
es
push
inc
inc
jmp
xchg
xchg
leave
mov
lahf
rolb
push
call
jmp
adc
fwait
and
xlat
jne
testb
arpl
push
ss
inc
mov
mov
adc
mov
xor
stos
mov
xchg
aaa
sbb
sub
aas
cmp
bound
pop
mov
add
and
sarl
pop
dec
adc
idiv
shrb
jne
sbb
testb
mov
mov
push
jbe
out
inc
popa
xchg
xchg
xlat
addr16
mov
xor
inc
dec
inc
cmc
lds
sub
add
inc
mov
fdivl
mov
pop
std
or
ud0
mov
mov
jb
xchg
push
cmp
dec
in
fwait
pop
fcoml
mov
adc
insb
lcall
mov
mov
or
add
data16
mov
mov
add
jl
cmp
mov
jb
rorb
imul
js
cmp
test
cwtl
test
jns
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
jmp
aam
lock
mov
insb
or
push
push
adc
ficoms
adc
adc
sub
xor
ror
inc
lods
jne
cmpsl
dec
les
cmp
cltd
jecxz
jl
or
cmp
hlt
mov
mov
fdivs
xlat
bndstx
icebp
sub
pop
pop
notb
mov
dec
sub
gs
add
clc
mov
cmpsb
jmp
dec
sbb
xorb
sub
sub
movsb
xchg
jl
push
push
sub
jmp
sbb
mov
pop
cmp
xchg
es
shlb
std
sbb
cmpsl
or
add
imul
and
imul
psubb
ja
pop
test
fldt
daa
inc
popa
add
hlt
insl
frstor
adc
push
lret
outsb
and
adc
push
pop
sbb
andb
cs
mov
inc
lahf
or
out
xchg
stos
popa
xor
inc
mov
lcall
xor
cmp
pop
shl
and
dec
test
xlat
xor
pop
imul
js
dec
xorl
xlat
lods
scas
in
stos
xor
cltd
jbe
add
stc
xchg
pop
ss
fldl
mov
inc
inc
sub
daa
test
mov
xchg
iret
stos
cwtl
sbb
addr16
lret
inc
sub
pop
mov
pop
push
fldt
cmp
arpl
repnz
jo
or
pop
push
mov
push
aas
jae
in
mov
pop
scas
and
ljmp
imul
inc
stos
pop
fnstcw
mov
mov
test
push
cltd
mov
push
xchg
inc
inc
test
sti
xchg
cmp
pop
pushf
lcall
aad
jo
sub
iret
sub
inc
fsubs
pop
scas
and
mov
dec
push
test
dec
sbb
mov
fs
mov
xchg
loop
xor
jecxz
and
sub
mov
icebp
mov
sbb
insb
jno
popf
dec
shll
aad
fwait
mov
sub
lods
cld
pop
aas
data16
mov
xchg
or
iret
sub
stos
cmp
in
movsb
das
insb
or
ret
adc
or
or
imul
cwtl
jg
pusha
adc
insb
stos
arpl
dec
popf
loop
in
push
dec
xchg
pusha
loop
push
jns
push
jb
or
pushfw
jo
inc
aad
test
mov
xchg
jbe
mov
sti
jl
dec
or
insl
fwait
sbb
inc
xor
add
insl
add
data16
arpl
das
inc
icebp
mov
adc
jmp
popa
sub
popf
push
and
mov
lods
int
loopne
push
inc
test
mov
jnp
fimull
adc
scas
push
ret
mov
add
into
sbb
jae
mov
mulps
out
jmp
inc
sub
adc
mov
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
jmp
jae
jge
jge
and
mov
inc
stos
inc
bound
adc
adc
adc
xchg
data16
scas
lret
popa
into
pop
xchg
adc
pusha
fcoms
cmp
jle
test
call
or
mov
pop
mov
jns
or
xor
fidivl
add
or
and
ret
out
loop
jmp
sarb
and
mov
inc
jle
mov
xor
and
sbbl
sbb
inc
popa
dec
xor
movsb
idivb
jle
scas
mov
lret
dec
push
ljmp
fcmovu
mov
lret
loopnew
sbb
aas
lahf
or
fiadds
leave
inc
adc
and
or
adc
push
push
add
mov
fdivr
or
mov
push
test
mov
push
pop
pop
ja
imul
ds
push
mov
sub
out
add
bound
pop
mov
pop
mov
inc
sbb
ret
les
jge
pop
xchg
fildl
lea
xchg
cmp
jmp
std
mov
jl
lcall
les
xchg
xchg
cld
ret
pop
xchg
xor
popa
fwait
insb
add
rcrb
fucom
test
xchg
aam
pop
ret
inc
jmp
les
pop
sarb
pusha
stc
data16
adc
xchg
imul
xor
mov
cmpsb
je
fwait
dec
add
dec
enter
sub
mov
push
and
mov
mov
cmp
mov
cmp
sbb
out
mov
or
mov
lcall
inc
push
push
adc
jge
mov
pushf
pusha
pop
dec
sub
sbb
add
push
jge
pop
pusha
mulb
mov
pop
ds
outsl
jb
push
ret
nop
fwait
inc
inc
js
lods
fs
js
fistl
pop
cltd
xchg
jle
xchg
jp
dec
cmp
sub
lock
and
outsl
je
sub
ret
rcrl
cltd
dec
ja
mov
jle
push
inc
ficomps
shrl
push
inc
fsubp
call
mov
ret
push
inc
cwtl
fisttpll
mov
jle
aam
enter
std
add
or
inc
xchg
pop
mov
clc
enter
xchg
nop
out
mov
jge
out
jge
mov
iret
roll
push
jecxz
out
jne
test
out
jae
sbb
enter
or
pusha
enter
mov
inc
test
adc
and
xchg
inc
lahf
lret
adc
rclb
daa
bound
lds
or
sub
ret
pushf
cmp
fs
ja
pop
fidivs
push
clc
or
jnp
in
mov
rorl
icebp
or
jge
xor
push
outsl
adc
out
cs
insb
loop
in
dec
jo
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
jmp
gs
icebp
pop
ficompl
das
mov
jbe
or
movlps
loopne
mov
pop
mov
popf
jge
xchg
cmp
jbe
testl
sub
int
xlat
xor
push
leave
lods
lock
in
inc
pop
mov
mov
mov
in
mov
imul
dec
fwait
and
jp
out
mov
repz
push
gs
jns
push
clc
test
scas
dec
push
jne
and
sbb
mov
push
pop
scas
mov
mov
xlat
popf
test
dec
fs
inc
shrb
outsb
xchg
outsl
mov
sub
jne
xor
mov
pop
pushl
jp
stc
jb
fimuls
stc
mov
in
xchg
movb
sti
mov
mov
inc
gs
icebp
push
xor
addr16
aam
std
test
or
add
aaa
pop
test
sub
hlt
dec
cltd
test
push
stc
dec
out
jmp
and
fistpll
mov
out
mov
movsl
push
icebp
fs
bts
mov
cmp
cwtl
loope
or
cmp
pop
and
ret
jbe
das
js
lahf
dec
rcl
cmp
icebp
ljmp
insl
push
inc
xor
aaa
andb
enter
sarl
pop
adc
sbb
and
stos
xlat
inc
inc
cmp
mov
pushf
stc
aas
mov
inc
nop
icebp
mov
stos
mov
fldenv
and
imul
call
rcrl
pop
push
enter
ds
pusha
adc
xchg
and
scas
inc
jns
in
scas
sub
and
rcl
nop
inc
dec
mov
in
fildl
xchg
xchg
ret
push
cmp
stc
mov
daa
push
xchg
dec
scas
push
and
cltd
inc
add
pop
out
push
lret
clc
push
and
nop
dec
mov
addr16
scas
cmpl
jae
sub
out
push
addl
push
dec
clc
sbb
mov
xorb
adc
jp
or
in
out
ljmp
lea
insl
and
push
pusha
les
pop
jo
dec
add
mov
call
daa
mov
add
pop
enter
popl
stos
into
fldpi
mov
sbb
inc
into
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
jmp
sbb
pop
loope
pop
pop
cmp
sbb
sub
adc
movlps
iret
rorl
sbb
aad
lods
mov
stos
or
adc
cwtl
and
lea
cs
mov
fucom
das
aad
shll
mov
out
test
jo
xchg
test
clc
call
sbb
fst
mov
xchg
bound
sbb
jl
into
push
shll
shrb
jmp
cmp
mov
les
adc
jle
or
test
ss
call
cmp
and
mov
hlt
mov
or
add
cmpps
cmp
or
or
and
jbe
stc
repz
adcb
mov
mov
addl
jnp
sbb
pop
testb
xchg
movsl
test
outsl
mov
cmpsb
push
lahf
pop
fimuls
filds
lods
daa
and
in
cltd
jae
cmpsl
xchg
insl
scas
in
jp
lret
mov
loop
jl
adc
dec
daa
jnp
out
int3
std
add
xchg
mov
addr16
and
mov
je
jecxz
push
push
xor
push
cmp
pop
jg
pop
nop
jne
and
mov
outsb
pop
jns
xor
shll
dec
movsl
xchg
pushf
jg
pop
and
ljmp
and
pusha
mov
xor
jns
dec
popa
ficoml
stc
pusha
imul
inc
inc
cmc
xchg
or
sub
sbb
in
jg
push
inc
sti
inc
rcr
or
int3
mov
lret
xor
push
push
cmp
nop
xor
roll
pop
fcomps
fstp
pusha
lods
popa
aas
das
add
outsl
insb
les
or
stos
mov
fidivrs
int
push
push
cmp
mov
orb
fcoml
ret
icebp
mov
push
stos
ret
aas
mov
pop
jo
fucomp
adc
mov
inc
mov
push
out
mov
mov
outsl
adc
int3
sahf
jne
outsb
lock
into
sbb
icebp
pop
or
push
xchg
xchg
loop
sub
and
mov
push
iret
pop
xchg
stos
cmp
iret
lcall
movsl
stc
mov
sub
dec
xor
rcrb
push
pop
pop
addr16
aam
lcall
pusha
inc
mov
or
inc
inc
hlt
jg
add
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
lods
mov
lods
cmp
jnp
data16
push
adc
push
adc
adc
mov
inc
cmpsb
xor
cmp
jnp
rorl
pushf
sbb
push
ret
dec
fisubl
sub
mov
or
jecxz
test
push
push
dec
inc
sbb
lret
movsl
mov
dec
std
sbb
or
push
sbb
and
mov
cld
fldcw
pop
xchg
xor
js
or
pop
push
adc
jmp
jg
sub
xor
ret
notb
adc
add
scas
pop
loopne
andb
jg
push
cmp
jge
pushf
stos
sub
scas
or
ret
or
les
mov
xchg
faddl
xor
addr16
cld
loop
and
adc
fcoms
mov
cltd
sbb
mov
or
jbe
mov
pop
add
jle
jle
push
and
pop
clc
cmpsb
jnp
adc
mov
fwait
xlat
mov
addb
in
pop
mov
js
push
adc
xlat
lret
ja
push
cmc
or
jle
mov
mov
pop
mov
cwtl
xor
mov
push
adc
or
push
into
dec
add
stc
nop
sub
jo
or
enter
mov
adc
addb
pop
cs
and
aas
xchg
sti
aaa
stc
add
test
xchg
inc
jg
cmpsl
xchg
aad
sub
jnp
or
scas
lods
or
sub
imul
insb
ret
sbbl
add
push
mov
inc
sub
mov
cmp
and
in
jbe
sbb
cmp
je
fcmove
lret
xor
lret
or
inc
push
inc
test
test
jl
xor
sub
xor
gs
pushf
iret
mov
hlt
outsl
cmc
pop
imul
imul
xor
push
repnz
pop
xchg
jbe
insb
jge
or
subb
popa
test
loop
mov
adc
mov
in
mov
fs
xchg
and
mov
mov
sbb
inc
iret
cmp
fwait
aam
sbb
ljmp
fst
int3
shlb
mov
rclb
lret
popf
or
mov
sbb
pop
mov
mov
dec
xchg
pop
pop
push
fbld
imul
icebp
adc
outsb
cmp
ljmp
loope
out
sbb
aam
push
cmp
add
lcall
cs
cld
fs
enter
cmp
push
xorl
add
cmpsl
push
cltd
ss
cmp
rclb
andb
icebp
sub
stos
jnp
mov
cmpsw
pushf
and
sti
jo
outsl
into
mov
and
push
ret
jo
mov
test
je
pop
hlt
inc
jl
dec
rcl
mov
arpl
jnp
mov
and
fdivrs
test
mov
test
mov
and
sub
out
mov
or
out
inc
mov
nop
aam
popa
xor
repz
push
add
sub
jbe
xor
sbb
fmull
add
sbb
inc
cld
hlt
xor
add
in
adcb
push
push
call
mov
mov
xor
jmp
fcomps
pop
sub
and
mov
adc
push
adc
adc
pop
sbb
fildll
pop
lret
mov
enter
mov
ljmp
icebp
roll
xor
cli
jbe
ja
cmp
pop
lahf
sbb
mov
cmp
pop
xlat
mov
push
inc
enter
mov
cmp
addb
push
xchg
add
dec
ficoml
hlt
xorl
pop
sbb
lock
xor
bound
shlb
test
outsb
or
sbb
cmpsb
xor
add
xlat
ljmp
imul
int3
loopnew
pop
outsl
pop
or
cmp
mov
mov
sbb
mov
xor
aad
push
out
bound
push
pop
out
test
dec
jne
call
jecxz
xor
sbb
icebp
inc
repz
pop
jo
outsl
or
imul
in
outsb
out
iret
call
inc
mov
or
mov
lock
xor
push
sub
lret
mov
std
out
fcmove
aad
xor
test
and
mov
ljmp
mov
cld
sub
or
pop
pushf
outsl
cmp
aam
cli
adc
pop
call
xchg
decl
rolb
dec
pop
or
mov
inc
push
jae
xlat
test
lcallw
ds
pslld
jnp
mov
int3
cmpsb
fisubs
stc
cmpsl
cmp
cmp
push
das
mov
ds
fists
cmp
adc
int
clc
xor
scas
mov
adc
fsubl
fidivrl
lock
mov
fmuls
das
hlt
push
push
scas
fwait
sti
inc
rolb
jge
push
inc
push
dec
cmp
push
push
mov
out
dec
shr
lahf
test
cltd
insb
fcoml
rcr
subl
aas
mov
loopne
sbb
cmp
mov
pop
out
xor
mov
ficompl
lods
xor
xchg
pushf
sub
bound
and
push
out
jo
sbb
pushf
and
inc
push
pop
leave
lret
cltd
inc
pop
adc
rol
lcall
sbb
push
xor
and
push
fsts
mov
or
mov
add
idivb
mov
ss
xor
idiv
insb
adc
jbe
sub
cld
adc
mov
and
testl
ret
insl
repz
movsb
into
test
cmc
cmp
aas
pop
pop
mov
cmp
cmp
loopne
insl
insl
js
lea
dec
sbb
xor
xor
xor
inc
hlt
push
jbe
cwtl
inc
add
fwait
test
movsl
jl
jae
jns
mov
inc
fcomp
fnstcw
in
or
nop
aam
aam
movsb
js
cmpsb
icebp
cmp
lea
pop
shll
push
mov
jne
inc
pop
daa
cld
ror
xchg
mov
mov
pop
je
adc
xor
ja
jle
cmpsb
xlat
cmpsb
mov
shlb
jle
sbb
popa
push
stos
pop
push
cld
icebp
popf
icebp
out
arpl
xchg
sbb
pop
arpl
into
bound
push
push
js
stos
lret
ret
and
mov
xor
mov
xor
jmp
sarl
sbb
jbe
stos
mov
fidivrl
push
adc
adc
add
es
cmp
sub
and
mov
andl
std
mov
pop
cmp
imul
enter
adc
mov
out
mov
add
es
js
enter
adc
in
into
cmc
ds
adc
pop
adc
fsubs
stos
outsl
fs
rclb
or
ja
dec
lcall
mov
dec
and
adc
test
mov
sub
mov
add
push
in
or
xchg
cmp
cwtl
idiv
sti
sbb
rorb
add
sahf
lods
in
les
push
mov
mov
xchg
pop
bound
fmuls
stc
repz
adc
cwtl
xor
mov
imul
cmpsl
mov
lret
fiaddl
push
sahf
adc
cld
xor
repnz
cmp
push
pop
into
orb
mov
fidivrl
ss
push
xchg
xchg
push
rcll
and
and
inc
jno
push
orb
addr16
adc
sub
and
jne
enter
and
mov
stc
mov
into
push
xchg
outsl
movsl
xlat
inc
scas
ss
dec
xor
jno
xor
add
outsl
pusha
ljmp
arpl
pop
scas
push
in
call
dec
sahf
adc
add
dec
out
imul
and
jns
sub
jo
lods
ljmp
xor
outsl
mov
repnz
clc
jl
rcrb
out
add
mov
dec
sbb
sub
cmp
add
insl
imul
mov
cmp
add
dec
mov
movsl
jne
test
inc
mov
clc
and
push
sub
cmp
fidivs
dec
jbe
out
shll
movsb
xor
sub
mov
push
arpl
mov
dec
clc
mov
mov
std
and
js
pop
cmc
cmp
int
xor
int3
push
testl
xlat
cmp
insl
movsl
popf
out
push
adc
sbb
jae
xor
mov
daa
in
dec
sbb
int3
adc
in
mov
cmp
shll
mov
ja
movsl
test
rorb
pop
push
or
xor
jb
mov
push
mov
mov
sub
or
add
sbb
fsubrl
push
jbe
mov
push
pushf
arpl
je
outsl
out
lahf
push
shlb
lods
adc
adc
fisubrs
xchg
or
movsb
movsl
add
clc
dec
pop
pop
mov
sti
sub
and
sub
iret
dec
fildl
push
mov
cmpb
pusha
int
or
cmp
xchg
or
enter
jmp
xchg
cmpl
aam
call
xchg
cltd
repz
rolb
jo
pop
mov
push
xchg
xor
or
pop
push
ret
xorb
jmp
sbb
fs
mov
int
cmpsl
jbe
repz
sahf
mov
hlt
mov
mov
jns
mov
les
shll
imul
add
mov
xor
or
add
cltd
adc
cmp
jne
cmp
jmp
mov
imul
test
stos
in
adc
or
adc
push
adc
adc
cmp
dec
clc
fcomip
sti
mov
push
push
scas
shlb
test
mov
push
test
clc
mov
fdivl
mov
popl
sub
inc
stos
add
test
cwtl
mov
dec
aam
jo
mov
dec
rol
mov
xor
cmpsl
xchg
inc
dec
fdiv
je
pop
and
xor
test
xchg
mov
hlt
mov
int3
fnsave
vmovsd
dec
xlat
pop
into
push
add
or
ds
sbb
aaa
movsb
cmpsb
cwtl
mov
jmp
push
repnz
cmp
shl
jmp
flds
outsl
mov
inc
jae
or
repnz
fcoms
jae
mov
dec
scas
jge
push
jl
out
mov
aas
addb
mov
push
sbb
mov
js
push
fwait
clc
movl
jno
imulb
daa
adc
shrb
sbb
jecxz
pop
out
pop
js
jnp
addr16
pop
out
inc
cmp
nop
das
add
mov
daa
call
popa
movsl
repnz
lahf
adc
inc
push
and
test
adc
mov
ds
lret
ljmp
xor
fistps
adc
cmpsl
int3
sbb
test
cmp
mov
shr
sbb
fsubl
dec
push
std
xor
or
fisubrs
add
rcr
popf
outsl
push
mov
dec
and
mov
sbb
shrl
mov
jmp
movsl
dec
scas
loope
sbb
sub
xchg
stc
or
cmc
pop
fidivrl
das
outsl
movsb
push
or
jl
mov
sub
dec
mov
xchg
das
push
int3
xchg
les
cmp
dec
adc
ret
push
and
cmp
sbb
aam
xchg
push
sbb
add
mov
mov
arpl
push
js
cmp
stos
pop
inc
jp
lods
in
inc
imul
rcrb
sbb
das
jge
cld
jno
call
insb
aam
sub
jge
push
mov
push
and
add
sahf
fcomip
inc
xor
cmp
mov
out
lret
jle
in
jb
out
rcll
lcall
cmp
inc
mov
jo
push
ja
clc
cs
jo
xor
sbb
adc
shl
mov
jl
ret
xor
sbb
sbb
or
jg
clc
hlt
aam
aas
jecxz
lahf
inc
mov
cmp
sbb
and
aaa
dec
scas
and
lret
jecxz
push
stos
aad
cli
imul
add
adc
inc
shll
xlat
mov
ret
cs
sbb
rcll
nop
pop
scas
jmp
sub
int
jecxz
mov
jp
dec
inc
pusha
xchg
jo
ficomps
insl
mov
pop
dec
adc
test
inc
out
mov
andl
nop
inc
cwtl
cs
aaa
int3
xor
xchg
push
or
insl
mov
scas
push
push
xchg
rol
loopne
jo
ficoml
jnp
aaa
mov
pop
push
aaa
movsb
out
dec
add
mov
shrl
adc
fimull
icebp
test
je
jmp
insb
ror
shlb
insb
daa
ret
mov
dec
sbb
mov
push
adc
adc
ds
out
in
aas
es
adc
mov
push
xchg
mov
push
in
out
cmp
ds
scas
jb
sahf
jp
scas
jo
adc
in
push
jl
adc
mov
addr16
std
les
pop
adc
cmp
subl
sub
jl
je
fldcw
mov
movsb
loope
aas
or
jae
sub
xchg
adc
sub
sbb
xchg
jg
and
adc
fcompl
incb
inc
jb
dec
push
inc
test
movb
adc
outsb
add
mov
xchg
jmp
call
ss
push
lret
mov
sbbl
and
shll
push
jecxz
test
stos
test
lret
mov
jl
mov
daa
mov
sbb
push
les
ret
scas
shlb
int3
xor
jae
inc
dec
xor
mov
mov
mov
cwtl
xor
movsb
xor
int
mov
mov
ret
xchg
scas
mov
jns
pop
xchg
and
inc
jno
and
in
and
fsubrs
sbb
jg
fsubrs
daa
repz
jb
inc
push
lahf
sbb
fnsave
dec
pop
pushf
push
es
push
sub
cltd
xor
scas
push
jle
fimuls
movsb
test
add
mov
jge
adc
add
mov
mov
cltd
push
mov
mov
sub
jmp
in
mov
std
jge
repz
mov
mov
inc
xor
pop
mov
mov
jp
stos
xchg
pop
xchg
sahf
mov
in
sar
sbb
arpl
and
pop
into
sub
adc
inc
test
idivl
dec
negb
in
ljmp
push
sub
sub
jg
dec
inc
adc
dec
out
xor
sub
jp
mov
adc
and
in
rorb
ss
xor
mov
nop
jp
imul
hlt
lret
mov
cmp
call
ficompl
in
insl
popa
jge
sub
ds
sub
jg
mov
sub
sarb
ss
lock
adcb
mov
out
push
addr16
jb
ret
mov
jl
sbb
rcl
sub
bswap
adc
popf
sub
int
das
sub
sub
mov
xchg
pop
mov
out
inc
add
cmp
daa
gs
and
rcrb
lahf
xchg
dec
adc
je
xchg
jge
in
and
mov
push
adc
aaa
movsb
fsubr
push
int
outsb
xlat
js
jmp
fsubp
jecxz
movl
adcl
orb
bound
cwtl
int
mov
dec
mov
ret
dec
push
addr16
xchg
shl
jno
mov
out
fbld
mov
call
das
mov
add
popa
push
sti
or
repnz
xchg
xchg
test
insb
cwtl
out
lods
add
mov
mov
pop
fwait
mov
popa
xchg
fisubrs
fs
push
popl
int3
scas
push
mov
inc
mov
dec
mov
push
mov
sbb
add
add
ret
nop
jmp
les
lds
pop
inc
daa
and
mov
out
adc
push
adc
adc
int
mov
rcl
mov
out
fnsave
repz
dec
vmwrite
cwtl
mov
push
pop
leave
or
dec
or
push
aas
js
rcrl
in
in
or
fwait
jle
dec
mov
xchg
test
pop
aad
add
divps
idivb
in
loopne
insl
ja
out
test
mov
lret
fmull
sbb
cli
ficompl
es
pop
ds
push
inc
mov
sbb
push
loop
scas
add
popf
test
push
jno
sbb
fistpll
das
add
in
lock
jno
push
lcall
rcrl
cmp
jmp
lock
ja
jge
cli
inc
jg
push
jge
jae
daa
jnp
sub
sub
loope
fadds
push
je
and
into
xchg
and
add
mov
lret
xchg
sbb
xchg
cmpsb
or
adcb
push
mov
out
cmp
cmpsb
pusha
dec
scas
outsb
inc
or
jae
in
cmp
stos
mov
test
stos
adc
mov
loop
mov
mov
and
ljmp
sbb
cmp
fcmove
push
jmp
mov
adc
cmp
insb
inc
sbb
mov
inc
cmp
neg
mov
imulb
sub
mov
add
enter
and
movsb
lods
mov
sbb
testl
dec
jno
leave
mov
mov
push
xor
xchg
in
ret
mov
and
sahf
dec
ja
les
cli
fcomip
idivl
dec
pop
cmp
mov
hlt
sub
daa
jmp
push
ss
fisttps
cmovge
popf
lcall
push
push
cs
xchg
clc
pushf
les
push
cmp
xor
mov
test
jnp
or
ja
sub
jmp
xchg
test
sub
inc
rorl
lods
inc
add
aad
fisubl
jmp
cmp
push
adc
or
cmp
mov
xchg
rcll
test
mov
push
rcr
add
xor
cltd
leave
cltd
movsb
or
dec
cmp
arpl
mov
jno
ret
xchg
pop
popf
scas
mov
dec
xor
inc
pushf
nop
ffreep
xor
jecxz
pop
clc
sbb
addl
jl
pop
bound
ja
pop
and
push
adc
cli
lods
out
loope
mov
cmp
pop
inc
sbb
sub
lcall
pop
arpl
and
std
aad
fldl
inc
pop
rcr
pop
or
xchg
lds
cmp
jns
sub
test
dec
sar
jns
addr16
psubd
inc
mov
jecxz
aas
jns
dec
xor
outsb
clc
rcrl
xchg
jne
movsl
mov
dec
ja
stos
mov
mov
pop
pop
daa
mov
mov
jmp
rclb
inc
popf
add
push
xor
and
or
les
add
add
outsl
sub
push
sub
aad
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
jmp
push
add
aaa
mov
inc
sub
mov
insb
fisubl
adc
push
adc
adc
add
jge
call
insl
inc
add
mov
pusha
xlat
mov
mov
cvtpi2ps
and
mov
insl
adc
mov
aam
cltd
sbb
pop
repnz
test
in
push
das
in
xor
cltd
dec
call
fs
pop
mov
push
and
bound
adc
sbb
inc
xor
sub
rorb
movsb
ret
nop
sub
lods
xchg
and
rol
pop
call
and
arpl
add
mov
push
add
push
test
das
jmp
negb
cwtl
cmp
ds
dec
cmc
or
dec
mov
out
or
xchg
jge
out
imul
stos
and
std
cmpsb
push
das
fcmovnbe
cwtl
into
rcrl
jl
loop
add
and
imul
gs
fwait
dec
pop
popa
push
outsl
pusha
adc
inc
or
xchg
inc
xor
xchg
jne
outsl
mov
sti
rolb
jns
xor
shl
fwait
test
in
insb
or
sbb
clc
xchg
mov
cltd
out
mov
xor
repz
mov
in
sti
xlat
xor
xor
jp
dec
add
or
divl
add
mov
mov
movsb
imul
mov
sub
adc
jno
lret
pop
add
testb
or
mov
std
aas
push
imul
and
repnz
add
sbb
mov
xchg
dec
je
cmp
mov
xor
sub
and
imul
ror
test
pop
inc
in
xchg
sbb
xor
pop
push
enter
sbb
cmpsl
sbb
jg
stos
mov
ss
faddp
lcall
inc
xchg
add
cmp
ja
sbb
insl
inc
mov
sub
xor
in
xor
pushf
xor
sbb
or
xchg
dec
rcr
mov
stos
fs
jp
inc
imul
mov
dec
push
dec
mov
addl
jp
mov
sub
xchg
scas
mov
into
stos
push
push
popf
mov
enter
lahf
push
stos
jmp
cmp
fs
xlat
insb
cwtl
mov
in
xor
sub
shl
stos
mov
mov
js
and
add
repnz
jbe
movsb
movsl
fnstsw
int
jmp
pop
bound
test
test
pop
test
insb
shl
sbb
cmpsb
cmp
push
xor
test
push
nop
xor
fistps
sub
rcrl
jge
and
or
iret
jl
fiaddl
sub
adc
decl
mov
loop
std
lea
sbb
jmp
mov
mov
cmp
clc
mov
fwait
mov
cmc
into
sbb
in
xchg
repnz
ja
shlb
addl
aas
pop
xchg
test
xor
add
sub
mov
mov
arpl
and
repnz
inc
xor
sbb
sub
add
popf
scas
cmp
mov
xor
movsb
pop
inc
push
mov
cmpsb
test
dec
sbb
pop
dec
inc
bound
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
jmp
and
pop
sbb
push
xchg
mov
ret
sbb
adc
movlps
clc
xor
call
inc
lods
sahf
push
fiaddl
loope
pop
in
add
jne
cmp
or
loopne
cmp
andl
inc
jmp
loop
cld
xor
jmp
pop
rcrb
scas
pop
xor
leave
enter
xor
orl
imul
imul
nop
pushf
jns
cmpb
xchg
pushf
daa
xlat
hlt
inc
outsb
cmc
stos
pop
lea
xor
cmp
mov
insw
lods
ret
cmpsl
mov
mov
or
push
sbb
dec
jne
add
and
pop
jno
mov
jle
and
pop
repnz
ret
mov
inc
in
je
rcll
xlat
sahf
ret
cmc
xchg
sti
sub
fstp
inc
inc
je
movb
xchg
aaa
dec
inc
inc
lret
mov
push
jo
div
movl
cmp
sub
cwtl
fidivrl
rcr
adc
out
fistpl
imul
daa
sbb
xor
cmpsl
insl
sub
xchg
sbb
jb
aas
cltd
push
insb
mov
out
pusha
and
mov
sbb
daa
jge
xchg
jbe
and
rcl
mov
cmp
loope
pop
pop
xlat
ret
bound
add
pop
pop
xchg
dec
mov
jne
pop
insl
lods
pusha
adc
aad
or
add
xor
inc
les
mov
sub
je
orl
xchg
les
fwait
cmc
inc
je
mov
sbb
cld
pop
ret
mov
mulb
cli
mov
test
dec
xor
iret
insb
push
in
jmp
data16
pop
outsb
arpl
in
ret
mov
mov
dec
jnp
mov
out
in
push
rorb
jmp
out
xor
jge
jb
xchg
dec
jne
and
out
inc
arpl
xor
dec
push
popf
mov
push
and
mov
cld
mov
popf
test
pushf
pop
popf
in
subb
stos
xchg
xlat
cmp
and
lods
push
xchg
das
dec
jp
daa
stos
xchg
mov
and
mov
sbb
xchg
popf
xlat
lcall
jo
push
add
ljmp
insb
imul
lock
mov
cmp
pop
xlat
jle
mov
andl
dec
into
scas
jg
stos
push
outsb
out
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
jmp
pop
rolb
sbb
sbb
popf
fs
pop
mov
movlps
das
cmp
xor
jg
sub
xchg
sub
cltd
mov
gs
lcall
aad
jne
sbb
pop
jo
pop
idivl
enter
xor
adc
stos
repz
jl
cmpb
adc
add
pop
shll
movsl
cli
jne
cmp
xlat
adc
add
pop
push
mov
addr16
jp
test
jb
or
mov
xchg
push
xchg
xchg
fsubl
pop
mov
fs
rol
enter
pusha
stc
sti
sub
sub
sub
and
test
lahf
jbe
sub
scas
jmp
test
push
jle
out
xchg
jo
es
pop
push
adc
add
add
lods
mov
jge
psubsw
fs
shll
fwait
ret
mov
inc
mov
or
jnp
pop
stos
lods
jae
mov
in
lcall
sbb
fdivrs
es
jl
pop
in
fistl
add
movsb
mov
std
lahf
call
pop
and
push
sub
sub
pop
ret
xor
in
jmp
push
cmc
repz
bound
mov
pop
test
ret
or
stos
xor
cmp
fs
addb
cmp
xor
loop
in
cmp
adc
push
inc
out
loopne
mov
sbb
xlat
data16
jle
mov
arpl
adc
sahf
nop
icebp
insb
popa
pop
push
xchg
xchg
mov
jmp
jo
and
nop
mov
pop
sub
fsubl
fs
nop
inc
lret
adc
clc
dec
mov
nop
add
pop
mov
mov
arpl
or
sub
test
dec
mov
test
mov
nop
sbb
pop
mov
mov
arpl
mov
push
dec
inc
outsb
pop
daa
pop
mov
push
mov
adc
sbb
inc
pushl
or
xor
mov
push
xchg
in
nop
js
pop
inc
cs
jae
test
out
insw
lcall
jnp
push
pop
cltd
xor
fidivrl
insl
pop
aas
adc
jae
lods
hlt
pop
mov
sti
insb
mov
inc
int
cmpl
into
in
inc
cmc
popa
popf
insl
mov
inc
nop
iret
lret
rorl
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
jmp
repz
push
cmpb
adc
mov
mov
decb
adc
jg
outsl
loopne
sub
dec
mov
inc
loope
out
dec
jmp
popa
and
pop
fimuls
roll
loopne
cmpsb
lea
imul
bound
jae
cmp
mov
icebp
jg
repz
popa
xchg
popf
pop
and
cmp
mov
in
test
popf
outsl
into
push
push
xchg
shlb
mov
add
jmp
or
adc
fnstenv
cmp
popf
add
gs
es
int3
jbe
adc
cmp
stos
ret
into
scas
out
lret
imul
sbb
xchg
pop
test
cld
and
jnp
cs
add
icebp
dec
repnz
or
adc
adc
xlat
mov
dec
xor
fcomp
mov
push
js
jg
push
add
daa
nop
and
shr
pop
xor
jo
addsubpd
ret
mov
ffree
dec
push
inc
lahf
pop
inc
ljmp
stos
mov
mov
out
nop
mov
pop
mov
or
outsl
roll
ret
lods
fnsave
ja
cs
ds
hlt
adc
mov
sub
push
push
dec
jno
cmp
xchg
fadd
xor
fbld
ljmp
sub
pop
loop
mov
sbb
mov
lods
fsubrs
or
or
out
lret
insb
in
xchg
xchg
push
add
mov
aad
daa
dec
mov
mov
out
add
mov
out
cltd
cmp
mov
aas
add
mov
xchg
mov
and
mull
shlb
xchg
mov
xor
cli
leave
in
or
arpl
xor
loop
or
push
ss
divb
shr
test
pop
rcl
scas
push
or
or
and
or
mov
ss
pop
loopne
rcrl
push
or
into
xor
pusha
outsl
stos
xchg
cmc
or
aad
fstpl
sub
or
sub
fwait
sarb
aas
ja
dec
push
mov
and
cltd
test
push
mov
mov
bound
popf
dec
clc
sbb
inc
mov
nop
std
mov
and
inc
mov
mov
push
imul
dec
imul
mov
lock
sub
mov
mov
sbb
mov
sub
mov
sbb
add
jmp
mov
bound
popa
adc
inc
xor
or
adc
movlps
cwtl
pop
lods
loopne
nop
repz
mov
or
lock
pusha
int3
repz
adc
test
inc
jae
cmp
pop
add
mov
and
xor
push
scas
out
loopne
sbb
out
fcomps
mov
iret
scas
jge
push
pop
lods
test
jmp
jp
mov
xor
inc
push
orb
mov
data16
cli
and
mov
push
jle
dec
rcrb
pop
xor
and
xchg
pop
std
test
je
int3
or
in
mov
inc
jne
inc
mov
add
mov
es
xchg
mov
subb
and
pmullw
mov
adc
outsb
icebp
xor
add
pop
cs
pop
push
pop
sub
jbe
adc
lds
lods
movsl
jge
lods
push
xchg
test
movsb
xchg
mov
inc
dec
ffree
cmp
addr16
jmp
enter
test
xchg
std
mov
mov
mov
mov
jb
outsl
stos
xchg
mov
add
cmp
mov
les
movsl
mov
cltd
jl
xor
fcmovne
sti
std
push
jecxz
movsl
pop
pop
pop
jecxz
dec
int
lcall
movsl
stc
xchg
xor
out
test
dec
movsl
inc
sub
jno
lret
jns
je
mov
dec
insl
lahf
pop
xorl
stos
andl
imulb
mov
and
cld
or
lcall
mov
jo
sub
jmp
loope
sub
lds
cwtl
fnop
fadds
sbb
push
inc
movsl
cli
cmp
sarl
in
jp
in
dec
in
xor
lock
mov
daa
out
or
out
icebp
into
jl
mov
or
mov
ljmp
dec
xor
add
orb
movsb
xchg
fbld
jmp
into
mov
adc
rorl
mov
in
xor
sub
dec
adc
xchg
sbb
push
inc
sbb
dec
popf
data16
inc
add
aas
dec
cmp
or
sar
outsl
or
daa
and
lahf
shr
xchg
jb
jmp
testb
pop
mov
test
imull
or
push
adc
dec
pop
add
out
add
mov
test
test
dec
fcoms
js
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
jmp
jp
push
sub
pop
cmp
out
xchg
or
adc
movlps
imul
sub
icebp
jp
and
icebp
push
popa
out
add
fisubl
xor
cltd
outsl
pop
loopne
ret
out
add
call
and
xchg
adc
sub
xlat
rcr
out
stos
leave
xchg
cmpsb
stc
pop
jg
xor
and
out
shl
shl
test
pop
or
popa
dec
or
mov
aaa
frstor
repnz
out
pushw
lret
into
scas
mov
orl
ret
sub
test
mov
pop
push
dec
add
jecxz
cmp
xchg
push
mov
vpsubusb
lds
pop
dec
cmp
cmp
out
or
subb
bound
popf
add
ja
push
xor
xchg
mov
lcall
mov
ffreep
hlt
les
cmp
xor
push
test
out
pop
out
lahf
push
pop
jae
pop
call
sarb
sbb
lahf
sbb
push
sub
cmp
int
sbb
sub
out
sub
xorl
inc
adc
mov
fistpl
loope
popa
ss
and
sub
lcall
fnstenv
jbe
adc
orl
in
test
lret
pop
in
inc
shl
jg
bound
aaa
push
fcmovu
addr16
pop
inc
mov
xchg
xor
adc
cld
mov
in
aad
push
loope
add
jl
xor
push
sbb
or
cli
xor
or
enter
sub
push
or
mov
sbb
mov
stos
orl
and
or
sbbb
repnz
jbe
cmp
cmp
scas
sbb
repnz
mov
movsb
icebp
push
cltd
inc
cli
lock
sbb
gs
sbb
dec
movsbl
hlt
cmpsb
dec
ss
xor
push
ds
mov
adc
jo
push
fwait
insb
fstps
inc
add
add
adc
jbe
cmp
divb
repz
add
pop
imul
adc
shr
lds
lcall
bound
popa
adc
jns
scas
adc
jg
xchg
in
iret
sub
test
out
sbbl
jg
das
rol
leave
in
push
xor
ret
mov
lcall
outsl
pop
aam
push
xchg
push
outsl
jecxz
mov
mov
scas
loope
inc
xor
pop
xchg
jb
mov
mov
add
mov
jne
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
jmp
mov
call
sub
push
mov
push
adc
rorl
adc
xchg
jnp
das
lods
lgs
aas
push
dec
mov
inc
xchg
sbb
inc
mov
aad
xchg
aad
mov
mov
cmp
inc
jmp
mov
push
sarl
pop
into
add
ljmp
inc
clc
jo
lret
or
sub
aaa
outsb
out
inc
xchg
xor
push
pop
sub
sbb
add
gs
xor
jbe
jg
xlat
out
ljmp
adc
out
les
cmp
imul
fidivrs
adc
mov
les
mov
lahf
jmp
jecxz
cltd
xchg
sub
bound
int
dec
jb
inc
pop
bound
xchg
sbb
xor
pop
or
dec
rorb
inc
mov
sbb
jns
push
pop
xlat
mov
jmp
xor
movsl
lea
mov
popa
mov
pop
sbb
notb
mov
jg
push
fsubrs
mov
sbb
add
cmp
je
jbe
push
xlat
dec
aaa
addr16
dec
outsl
stos
lahf
or
movsl
test
das
subb
test
test
cmp
or
sub
movsl
fidivs
pop
out
data16
inc
cmp
shrb
imul
xchg
sahf
pop
push
mov
insb
data16
nop
mov
int
and
add
pop
loope
cmp
xchg
das
or
mov
and
lcall
inc
mov
lret
mov
call
sahf
adc
add
jo
fcompl
sarl
loopne
lret
xchg
xlat
push
scas
out
cld
out
add
out
jg
mov
add
sub
mov
scas
dec
lcall
enter
scas
sub
and
mov
add
dec
repnz
loope
add
rcrb
push
xor
xchg
inc
js
aad
jg
bound
jb
pop
std
fwait
fs
test
or
push
gs
dec
imul
sbb
xor
lret
in
mov
xchg
and
pusha
inc
pop
or
imul
sbb
ja
leave
sub
xor
fisttpll
sahf
loope
insl
and
push
pop
sub
cmp
xor
pop
cltd
and
sub
lret
sub
out
out
out
repnz
repnz
sbb
leave
pushw
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jl
and
pop
popa
loopne
stos
and
jle
cld
adc
popa
movlps
mov
xorps
aam
adc
cli
filds
addb
sub
xor
jbe
cmp
fildll
mov
lods
jne
sbb
jns
iret
test
cmp
fdivrs
outsb
sbb
hlt
cmc
idivl
adc
aam
mov
stos
sarl
lods
aad
repz
test
add
mov
into
and
jnp
nop
sbb
mov
cwtl
sarl
sub
sub
inc
sub
fwait
dec
sub
pusha
cli
mov
fst
sahf
inc
mov
push
mov
test
dec
dec
ret
lcall
mov
adc
dec
hlt
aam
sarl
dec
inc
ror
in
add
cmpsl
xchg
xchg
js
jae
cmpsl
push
xor
inc
pop
mov
dec
popa
push
daa
and
ljmp
push
jbe
dec
inc
xor
and
xor
push
push
icebp
pusha
dec
out
jbe
fld
or
xchg
filds
bnd
pop
adc
sarl
gs
icebp
aad
outsl
js
ret
or
rorl
aaa
mov
jle
fwait
add
xchg
sub
and
push
nop
imul
push
aad
jno
fldt
sbb
and
data16
adc
ret
xor
lea
out
dec
rorl
stos
iret
pop
dec
sti
fsubp
sbb
add
aas
mov
shlb
add
inc
or
inc
mov
jbe
push
push
loope
push
fstpt
push
cmp
repz
or
and
push
adc
pop
sub
sahf
dec
int
mov
push
jecxz
stc
in
fs
mov
popf
pushf
stos
lods
pop
mov
jno
loopne
inc
xchg
ret
repz
repnz
sarb
jne
in
and
sub
sub
jmp
lahf
xchg
add
out
push
mov
subb
mov
xchg
hlt
scas
mov
mov
stos
or
xchg
lret
icebp
push
xor
xor
sahf
pop
lret
inc
pop
ja
shll
inc
scas
push
stc
xor
push
out
pop
xor
lods
and
dec
fdivs
sbb
add
lods
sbb
pushf
nop
out
fsubl
fldenv
es
dec
xchg
or
roll
cli
mov
mov
push
fildll
nop
sar
sahf
xchg
inc
push
jbe
cmp
cmp
cltd
add
jnp
movsl
fdiv
sti
push
sub
xchg
dec
inc
repnz
popf
sbb
sti
ror
jg
cmpsl
jp
movsb
enter
mov
je
jne
inc
cld
dec
pusha
add
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
jmp
mov
loop
lcall
stos
icebp
aam
mov
popa
movlps
outsl
fadds
ljmp
bound
mov
mov
mov
fneni(8087
xor
pop
pop
jge
int3
daa
xchg
dec
fildl
lcall
cmp
adc
xchg
repz
xor
fbstp
push
xchg
push
mov
arpl
cs
dec
adc
xchg
imul
xlat
inc
out
popf
das
cmc
xor
into
jbe
inc
outsb
fnstenv
mov
xchg
xchg
dec
ret
icebp
addb
and
fwait
fs
mov
movsl
sub
in
add
inc
mov
cmp
test
lea
pop
into
test
pop
dec
insb
push
negl
mov
xorb
push
cmpsl
push
std
adc
pop
or
loopne
xchg
pop
mov
pusha
in
mov
adc
andl
and
int3
test
sbb
outsl
jg
test
das
loope
shrl
lahf
inc
imul
mov
cmp
stos
jmp
jmp
outsb
into
sub
push
adc
pop
push
loope
pop
mul
mov
in
xchg
push
mov
cmp
xor
aam
adc
notb
lock
cmp
pop
loope
mov
jle
loope
or
das
loop
xor
sarl
outsl
mov
add
jg
add
push
cmp
adc
out
ror
mov
mov
pop
call
leave
lahf
int3
nop
arpl
sbb
adc
dec
lock
add
dec
gs
fmul
jne
pop
popa
out
rorb
and
and
in
dec
add
rclb
fstpl
push
xchg
sbb
shl
movsb
mov
and
sti
clc
mov
push
mov
test
arpl
imul
popf
cmp
int
mov
adc
and
push
pop
js
sbb
sbb
test
mov
sbb
lea
andb
and
jae
pusha
repz
movsl
dec
push
aas
inc
push
adc
es
cmp
shr
ret
jae
aam
jmp
in
outsl
xchg
lds
inc
mov
imul
pop
jmp
mov
sbb
out
xor
jo
mov
adc
sti
or
mov
call
cmpsl
mov
xchg
pop
mov
int3
push
test
jb
lock
push
xor
in
inc
ljmp
daa
inc
cmp
pop
adc
dec
adc
and
dec
sub
mov
adc
scas
ret
mov
subb
jle
sub
jne
xor
sub
div
mov
mov
or
xor
mov
jmp
sti
je,pn
sub
stos
repnz
scas
insb
cltd
notb
adc
adc
jno
xor
xchg
je
dec
fs
ss
cltd
dec
inc
pop
push
cltd
cmp
lahf
xor
repnz
mov
jnp
add
and
bound
mov
pop
inc
add
dec
aas
xchg
mov
faddl
xor
arpl
push
lods
and
ret
mov
inc
sbb
test
mov
inc
sub
into
push
cld
mov
jne
xorb
inc
and
pop
jnp
stc
xchg
lods
push
jl
repz
imulb
inc
popfw
pop
mov
imul
pop
or
rcll
jnp
mov
xchg
push
sub
sub
repz
sbb
stos
xchg
xor
in
inc
pop
dec
roll
scas
sahf
outsb
push
or
inc
jnp
xchg
mull
push
pop
iret
jecxz
add
rorl
mov
and
xchg
push
pop
shrb
fiaddl
pop
cmp
add
imul
imul
jp
jno
or
sbb
sbb
and
jl
test
add
ljmp
dec
jmp
mov
xor
mov
pop
xor
sub
dec
mov
orb
jno
adc
dec
repz
xchg
movswl
adc
jl
inc
pop
ss
xchg
adc
in
xchg
movsb
mov
mov
repz
mov
jecxz
lods
ficoml
adc
jo
cmpb
roll
addr16
and
dec
sub
hlt
push
les
pushf
push
pop
repnz
stc
sbb
or
cmp
ljmp
and
jbe
out
popa
jl
leave
mov
out
xchg
dec
fwait
pop
or
mov
fucomp
lock
xchg
jnp
fucomi
sub
stos
outsb
dec
sbb
xchg
mov
pop
lods
arpl
inc
jae
daa
dec
mov
xor
push
cmp
movsl
dec
pop
int
xor
mov
or
pop
movsb
adc
subl
and
inc
ljmp
scas
divl
inc
insl
lock
adc
mov
negb
stos
sbb
popa
addb
mov
out
mov
dec
ss
jns
inc
hlt
shrb
insl
pusha
flds
add
xchg
push
sbb
out
and
clc
adcw
cmpb
scas
shll
dec
cld
loopne
inc
xor
xor
enter
stc
mulb
push
bound
jmp
push
xchg
jl
movsl
mov
pop
jmp
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
jmp
xchg
and
jp
sbb
lods
ficompl
push
push
in
adc
popa
movlps
push
inc
sbb
out
cs
pushf
leave
and
mov
daa
ror
adc
xorb
push
jbe
mov
xchg
loopne
inc
mov
jbe
fisubrl
mov
movsb
repz
rcll
jbe
adc
pusha
mov
lret
or
jnp
popf
push
mov
leave
outsb
iret
cmpb
andb
lret
xchg
mov
jle
rcll
sub
xor
sbbb
or
cmp
or
loop
rcll
in
repnz
mov
jge
aas
adc
pop
pop
mov
mov
xor
dec
xchg
hlt
setg
mov
adcb
movb
mov
rcrb
lea
push
test
lods
cld
popf
aaa
nop
add
and
cmp
mov
jb
adc
mov
stos
test
ror
push
inc
jle
ret
ret
inc
arpl
scas
out
rcrl
dec
add
pop
jne
mov
inc
enter
outsl
sub
dec
outsl
inc
push
ljmp
push
or
cmp
mov
xor
mov
mov
pop
jae
loop
xchg
out
mov
dec
fstpt
clc
adc
and
pop
int3
outsb
in
add
pop
out
push
jb
push
push
mov
mov
pop
xchg
fs
sbb
mov
jecxz
test
ja
mov
ffreep
jmp
mov
rorl
sub
nop
fsqrt
movsb
sbb
lea
jo
mov
xor
or
ljmp
lcall
cmc
and
add
test
fsubr
aam
stos
mov
ret
rcrb
test
in
cmc
ret
pusha
adc
xor
aas
mov
xchg
or
outsb
js
lret
pop
sub
enter
dec
add
pushf
mov
mov
jecxz
out
xchg
push
cli
or
sahf
dec
mov
jmp
mov
xor
mov
pop
push
and
adc
pop
mov
sub
fcomps
or
pusha
mov
inc
scas
push
shrb
xor
imul
mov
fidivrl
xor
xor
cmc
sbbl
jne
jno
call
cmp
push
fsubrs
cmp
sarb
es
scas
sahf
add
mov
mov
jg
dec
repz
dec
push
cmp
xlat
lods
mov
es
jmp
cmp
and
iret
inc
cmp
sub
mov
lods
or
mov
sbb
lds
pop
addr16
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
push
addl
push
mov
or
mov
push
mov
sub
mov
shrd
cmpl
mov
mov
mov
jmp
movl
not
jae
push
push
pushl
pushl
call
movl
sbb
xor
mov
mov
sub
imul
add
xorl
mov
or
addl
shr
mov
mov
mov
mov
xor
mov
xor
xor
cmpl
mov
mov
movl
jmp
movl
ja
push
push
pushl
call
or
orl
sub
movl
mov
mov
sbb
sbbl
mov
sbb
mov
or
mov
mov
andl
shl
adc
mov
add
shrd
negl
xor
shr
xor
mov
adc
mov
xor
or
mov
mov
negl
mov
mov
mov
mov
cmpl
movl
mov
mov
jmp
mov
mov
ja
push
push
push
push
push
push
call
mov
mov
sub
sub
and
mov
xor
xor
sub
imul
sbb
add
mov
mov
andl
mov
mov
shl
xor
jmp
filds
scas
pop
sub
out
mov
jmp
adc
sarb
call
daa
jg
orb
cmpsb
repnz
push
int
sbb
cmpl
call
push
or
mov
shr
lock
jl
inc
clc
push
cltd
mov
clc
dec
jg
mov
or
mov
cmp
mov
aas
out
push
mov
xchg
fsubr
sub
cmp
jbe
sub
in
call
pop
ficompl
mov
xchg
gs
lret
pop
xchg
or
cli
mov
push
js
lret
sti
cmp
xchg
les
sahf
cmc
add
jo
mov
or
mov
loope
and
cmp
cmc
ffreep
jg
pop
ljmp
in
in
imul
and
xchg
cmp
xchg
test
pushf
icebp
rorl
adc
mov
sub
push
inc
addr16
cmp
jae
fnstenv
repz
xor
cli
sub
mov
jle
cmp
fsts
fmulp
fs
pop
mov
adc
sub
adc
lds
xchg
inc
loope
fucomp
sub
pop
xor
jne
sahf
xlat
push
adc
push
repnz
cmc
shll
loopne
stc
sbb
in
dec
cli
sbb
inc
test
fistps
dec
mov
sub
jns
jns
sbb
push
lcall
loope
push
cmp
dec
lods
sbbl
add
ja
mov
mull
push
into
fs
mov
cmp
jle
xor
fidivrl
addr16
cwtl
cs
dec
mov
mov
xor
aaa
push
fs
lds
shr
pop
or
leave
pop
mov
jecxz
test
xor
test
add
es
iret
lods
xchg
ficoms
inc
lods
ds
movsl
das
cld
xchg
call
lds
scas
lret
jg
dec
dec
or
sti
mov
jge
pop
aaa
push
lods
fidivrl
add
das
adc
jecxz
sarb
shll
leave
fimuls
adc
sub
lds
lret
std
push
test
mov
iret
sub
fisubrs
or
std
jp
cmp
mov
sbb
std
inc
jo
out
stc
fadd
jle
aas
jnp
movsb
stc
repz
insl
fdivl
cmpsb
dec
adc
enter
lods
pop
aad
xor
leave
and
xchg
in
xor
inc
mov
or
or
test
outsl
cmpsl
mov
cmp
inc
push
mov
fnstenv
push
dec
mov
xchg
adc
xor
movl
xor
sub
mov
xor
adc
shld
mov
shl
mov
movl
movl
movl
cmp
movl
jne
cmp
je
mov
cmpl
mov
notl
movzbl
mov
jmp
mov
jbe
pushl
push
push
push
push
call
or
sbb
not
movzwl
adc
xor
xor
and
mov
add
xor
add
xor
add
movzwl
xor
mov
cmpl
movl
movl
not
mov
jmp
mov
movl
jge
pushl
push
push
call
or
or
movl
andl
orl
movzwl
adc
andl
adc
xor
incl
xor
xor
xor
mov
sbb
mov
shld
movl
shl
movl
cmp
movl
jne
movl
cmp
movl
je
cmpl
mov
mov
jmp
mov
jne
push
call
addl
and
and
and
movzbl
or
xor
mov
mov
mov
adc
mov
mov
mov
sub
xor
push
pop
xor
xor
xor
jmp
shlb
jno
jno
stos
sub
cmpsb
js
subb
fists
adc
lods
shrl
push
imul
mov
and
mov
cmp
js
repnz
mov
adc
lret
imul
jns
int3
xor
cmp
movl
lock
lret
das
mov
sub
push
cmp
pop
movsb
add
mull
shrb
sub
cmp
cmp
insl
test
les
arpl
xchg
lret
dec
adc
adc
cltd
in
mov
shll
fdivrs
psubq
push
lret
xorb
push
sar
cwtl
cmp
ret
lcall
or
pop
in
or
outsl
mov
ss
mov
cmp
loop
insl
mov
xchg
adc
sahf
sub
es
or
jns
loope
pop
scas
popf
push
addl
std
and
cwtl
aas
movsl
jns
sub
xor
add
mov
xchg
mov
xlat
ljmp
dec
dec
add
fisubrl
cmpsb
mov
add
cli
lods
xchg
dec
and
in
jp
out
inc
adc
rclb
and
push
sub
movb
add
cwtl
push
mov
test
js
inc
cmp
mov
pusha
mov
lahf
lds
cs
in
pusha
fbld
enter
out
xchg
jae
push
stos
dec
sbb
sahf
push
inc
das
call
xor
sub
add
sub
lahf
cmp
out
or
scas
popa
adc
add
and
pop
xlat
xchg
popf
stos
xchg
decb
subb
stos
mov
jne
push
stc
xchg
push
lret
push
je
imul
add
loopnew
imul
call
dec
jae
dec
mov
fldcw
sub
cmpsl
test
xchg
lock
jno
bound
dec
xchg
jge
sub
mov
dec
loope
pop
call
into
rcrb
or
mov
add
or
lret
negl
mov
fdivrp
push
cs
mov
lods
rorb
in
cmp
insl
fmull
insl
adc
and
loop
sbb
cmp
stc
sahf
push
in
fs
add
out
syscall
xor
dec
push
fistpll
push
xchg
pop
ret
push
cs
dec
sub
movsb
nop
out
mov
or
push
inc
lret
fisttps
pop
cmc
shl
adcl
mov
xorl
xor
movl
shr
or
cmpl
mov
mov
movl
jmp
movl
movl
ja
pushl
pushl
pushl
push
pushl
call
or
or
xor
add
and
add
xor
mov
xor
mov
mov
mov
mov
mov
push
cmpl
mov
movl
jmp
mov
mov
jae
pushl
call
sbb
adc
xor
movl
orl
add
pop
andl
sub
cmpl
mov
mov
jmp
movl
movl
jne
push
push
push
call
xor
movl
or
or
subl
adcl
mov
xorl
add
addl
mov
subl
lea
mov
mov
mov
xorl
jmp
outsb
xchg
or
pop
pop
stos
adcb
fistl
adc
mov
ljmp
add
jecxz
imul
add
and
xchg
dec
mov
inc
outsb
push
pop
xor
sbb
call
push
xchg
mov
std
or
ja
mov
pop
and
es
cmc
jge
push
pop
xor
adc
pop
xor
fbstp
cmpsl
hlt
loope
sub
or
icebp
imul
mov
leavew
stos
jmp
or
cld
jmp
adc
fcoml
inc
or
cmp
ja
out
sub
mov
rolb
jbe
orb
test
lcall
xchg
call
cmp
dec
mov
adc
inc
sbb
fdivrs
ss
lods
jno
call
adc
movsb
idivl
add
push
ss
sub
xchg
jo
add
and
cmp
xor
jae
test
sbb
or
cld
xlat
imul
sub
push
xchg
iret
mov
mov
movsb
jnp
sbb
fwait
xlat
and
xchg
inc
ljmp
daa
les
daa
shlb
jle
lret
pop
adc
loope
jg
cltd
xchg
push
into
mov
ficoml
sbb
fildll
cmpsl
pop
cli
mov
push
cmp
inc
sub
add
fs
mov
mov
cwtl
cmp
or
push
pushf
mov
mov
pusha
adc
mov
cmp
sub
cmc
lods
sub
ljmp
stos
jae
enter
push
add
hlt
int
outsb
add
add
dec
jne
insb
ljmp
leave
sub
mov
ds
sti
xor
cmpsl
sub
aas
dec
jg
and
dec
ret
cmp
push
cmp
sbb
addr16
gs
and
mov
iret
fmuls
push
mov
or
dec
int
inc
pop
in
call
mov
push
mov
add
inc
sub
mov
daa
movl
adc
jge
jnp
sbb
push
clc
or
outsb
pop
popa
js
out
xchg
cs
dec
xchg
push
xlat
cmpsb
fdivr
sbb
ljmp
das
in
mov
and
sbb
jnp
sbb
xor
push
jl
lock
mov
cmpsl
hlt
lcall
stc
mov
aam
add
lret
andl
jmp
sub
sbbl
pop
js
lods
jmp
dec
mov
xchg
movlps
ja
dec
call
adc
add
imull
sahf
xchg
jecxz
xchg
scas
sahf
imul
dec
cmp
push
cmpsb
adc
push
iret
jl
ficompl
mov
into
mov
sbb
jne
and
xlat
stos
mov
es
lahf
ret
cmp
push
xchg
aad
pop
adc
jb
fidivrl
cmpsb
test
xor
and
jge
cmc
push
mov
loopne
imul
or
mov
fucom
popa
into
jle
sub
movsl
insb
shlb
fistpl
ror
xorl
aas
mov
ret
xchg
push
pop
and
shll
adc
ss
lret
sbb
cmp
stc
push
clc
shll
scas
aam
mov
pop
cld
out
adc
sti
inc
test
js
xchg
sub
cmc
adc
mov
gs
lods
cwtl
pop
jmp
cmp
pop
jns
xor
daa
ret
jne
shlb
mov
jbe
ret
adc
jae
cmc
mov
push
in
sbb
xchg
push
sarl
adc
in
lock
arpl
mov
mov
inc
shll
mov
jns
out
mov
mov
inc
dec
clc
sub
sbb
dec
test
test
in
xorl
push
mov
std
int3
mov
movsl
outsl
and
loope
inc
adc
push
add
mov
mov
fldt
repz
push
jp
in
sbb
cld
mov
mov
rcl
lds
and
fldl
repz
mov
rcrl
mov
mov
or
or
andb
ds
and
testl
lret
xor
cli
dec
add
adc
sub
mov
dec
orb
data16
inc
test
negb
and
addr16
mov
andl
sbb
pop
sbb
dec
mov
lock
lods
inc
mov
xchg
cltd
pop
xchg
pushf
sbb
jae
lret
inc
mov
outsl
pop
cmc
rclb
cmc
push
dec
aam
ja
call
out
or
dec
imul
jne
cltd
push
mov
insb
sbb
push
pop
and
cwtl
scas
aaa
mov
inc
xchg
fs
iret
jo
jg
jnp
sbb
pop
xchg
mov
sub
push
ds
and
push
or
xchg
ret
jp
das
or
sub
addl
shl
sbbl
or
xor
mov
movl
jmp
test
repnz
cltd
dec
sbb
mov
es
adc
xchg
movlps
repnz
pop
enter
pop
or
xor
pop
sbb
inc
push
inc
or
cmpsb
jl
sbb
insl
in
or
sar
hlt
jp
scas
out
lods
in
pushf
les
push
mov
jmp
jno
pop
fcomi
or
add
dec
testl
repnz
mov
adc
mov
inc
mov
adc
fsubrl
inc
lods
mov
mov
cld
out
mov
or
movsl
mov
sbb
stc
lret
sbb
push
arpl
stos
dec
stc
leave
int
mov
enter
jecxz
xchg
sub
xor
mov
sbb
or
pop
adc
xor
cltd
data16
gs
xchg
xchg
sbb
iret
test
rorl
xchg
jo
pushf
xor
lea
mov
sub
out
mov
imul
cmp
mov
jecxz
xchg
sahf
fnstenv
cmpsl
adc
dec
popf
inc
es
xor
movsl
psubd
imul
lahf
xchg
call
fisubrs
mov
test
inc
sub
into
in
sbb
or
jno
inc
out
mov
adc
data16
cwtl
cmpsl
mov
stos
insb
cmc
mov
fcoml
fs
aad
sub
popa
jb
or
cs
xchg
xrelease
jb
mov
and
add
popa
sbb
jne
cmp
add
cmc
adc
pop
cmp
inc
loope
arpl
lahf
jp
outsl
or
leave
jo
cmpsl
mov
bndldx
decl
hlt
lods
xchg
leave
sbb
mov
out
cmp
cs
jge
icebp
ljmp
mov
mov
stc
filds
inc
test
mov
adc
adc
xchg
scas
jno
jne
or
roll
les
cmp
mulb
imul
cs
mov
push
jns
cmc
push
loope
inc
shlb
jo
jg
adc
jnp
push
push
les
jle
xor
das
shll
dec
shll
mov
add
pop
xor
push
lret
leave
out
cmpb
mov
subl
lods
dec
or
rcrb
inc
fdivs
push
pop
outsl
sahf
push
cltd
int
pop
push
fnsave
cmp
sbb
sbb
mov
test
mov
pop
pop
push
fists
imul
icebp
sbb
sub
pop
rcll
jmp
fs
gs
sbbb
xlat
mov
cmpl
mov
movl
mov
jmp
movl
ja
push
push
push
push
push
push
push
push
push
call
addl
and
orl
and
add
movl
jmp
mov
jns
sbb
into
lods
js
es
int
adc
cli
icebp
pop
addr16
pusha
adc
sub
int3
dec
cmp
nop
xchg
pop
jl
dec
dec
lock
out
sti
js
int3
mov
lret
repnz
sbb
cmp
adc
or
cwtl
or
aas
mov
push
insl
cwtl
out
jle
js
adc
cmp
addr16
jno
pop
xlat
lcall
inc
out
pop
adc
cmp
je
daa
adc
push
fnsave
sub
add
subb
fildll
mov
jb
lahf
sti
insl
loop
xchg
mov
push
jge
xchg
jl
js
push
jecxz
push
xor
dec
rcrl
xor
outsb
mov
cmpsl
sub
std
push
cltd
adc
and
inc
test
cmp
push
sbb
xchg
int
inc
add
out
push
mov
clc
push
inc
testb
popf
add
xchg
mov
xor
mov
mov
lcall
inc
add
cli
cwtl
std
inc
mov
pop
out
mov
mov
out
inc
or
jl
addb
jbe
enter
xchg
sti
inc
xchg
cmpb
xchg
ss
inc
outsl
jae
mov
fpatan
out
sub
sbb
aaa
mov
pop
adc
jp
cmp
lods
out
notb
fdivrl
js
add
les
push
dec
mov
movsl
aam
sub
into
mov
cpuid
cmp
out
xchg
adc
jecxz
mov
push
mov
jmp
mov
int3
mov
cmpsb
jge
aam
bound
popf
xchg
jbe
lcall
stc
add
sub
pop
cltd
sub
pop
popf
imul
inc
xchg
and
mov
loop
or
ret
out
leave
nopl
es
insb
ret
ffreep
or
cmp
xchg
sub
xor
into
int
gs
cmp
cmpsl
jns
nop
into
or
clc
adc
pop
popa
cmp
jns
inc
mov
ljmp
adc
pop
popf
inc
repz
inc
scas
in
xchg
dec
xor
sbb
popf
mov
mov
and
dec
or
pop
mov
jno
bound
mov
ret
test
stos
test
fistpl
lret
jno
fst
push
pop
rcrl
mov
out
inc
rcrb
popf
mov
xchg
pusha
jnp
mov
and
and
inc
and
jne
lock
jno
inc
stos
lds
pusha
pop
push
loop
gs
push
cmp
or
popf
mov
xor
adcl
xor
shr
adcl
shl
sbbl
or
push
lea
subl
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
jmp
icebp
mov
cmp
pushf
mov
lcall
adc
lahf
mov
mov
and
int3
pop
ret
sarb
loope
jl
lahf
sbb
mov
mov
jp
cmpsb
mov
mov
mov
cmp
mov
push
dec
xchg
xor
scas
inc
jno
cs
sarb
aad
pop
mov
push
adc
mov
stc
outsb
mov
fimull
jns
hlt
inc
enter
adc
pop
dec
pop
cltd
in
mov
out
pop
jbe
add
insl
lea
je
sahf
outsb
xor
inc
xchg
imul
lcall
and
sbb
out
mov
aam
cmp
push
outsl
call
sar
cld
sub
xor
jp
mov
xchg
push
xchg
aam
dec
pop
repz
add
into
out
test
sub
mov
test
div
mov
in
das
fisubrs
push
test
mov
jae
test
sub
or
xor
sbb
and
lret
inc
rorl
jmp
add
sbb
icebp
aad
int
sbb
push
inc
nop
js
xor
mov
shll
lcall
shl
push
roll
inc
imul
in
lcall
add
mov
push
ret
xor
jg
fiaddl
popa
cld
xchg
mov
jmp
cmpsb
shl
or
add
push
cmp
mov
xchg
or
sti
or
decb
movsb
jle
test
lret
movsl
daa
daa
pop
or
lahf
incl
js
cmp
leave
inc
mov
in
xor
mov
ss
push
push
push
jno
or
pop
pop
cmp
mov
jb
push
and
jle
ret
lods
hlt
cmc
cld
cmp
mov
add
mov
xchg
push
ficompl
dec
into
add
addr16
imul
movb
mov
in
in
dec
mov
outsb
jnp
scas
call
mov
xor
lea
push
neg
cmc
gs
dec
ljmp
sub
jp
push
lea
sub
int3
stos
pop
pop
adc
imul
jl
test
ss
jmp
stos
jge
jne
sbb
mov
out
test
push
mov
cmpsb
add
fs
loop
push
push
das
popf
lea
jge
sbb
mov
push
pushf
daa
dec
xchg
or
push
int3
cmp
jb
xchg
test
stos
add
rorl
loop
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
jmp
iret
xchg
stc
cmp
dec
mov
fwait
mov
adc
push
imul
lds
sub
lahf
and
insb
inc
in
mov
sbb
mov
or
insb
gs
cmp
and
mov
push
loopne
inc
add
je
loope
cmp
xchg
out
cmp
sub
mov
sbb
jns
mov
jle
mov
jbe
pop
pop
mov
arpl
jb
pcmpeqw
std
inc
cmpsl
fadds
inc
aaa
xchg
or
jge
jl
aas
and
or
mov
xchg
shll
test
addr16
mov
std
rcr
cmp
out
dec
or
xor
xor
jge
pushf
dec
cltd
arpl
pop
pushf
xchg
add
mov
loope
lea
dec
sub
xor
fistpl
cs
xorl
adc
cmpsl
adc
mov
popa
mov
pop
add
xor
test
inc
cmp
mov
bound
fstl
repnz
lret
pop
mov
jbe
cwtl
movb
dec
cmp
cltd
xchg
cmpsb
add
mov
jne
aas
xlat
js
inc
out
in
xchg
in
mov
out
dec
mov
jge
sbb
sbb
insb
mov
in
lret
test
and
sub
dec
xchg
sbb
repnz
loop
mov
mov
cwtl
xchg
and
outsb
or
inc
mov
je
jge
scas
add
clc
les
test
fidivs
and
rcl
int3
inc
out
dec
aam
fdiv
inc
push
push
jb
pusha
fwait
imul
mov
mov
jns
test
scas
inc
aam
sub
sbb
cmpsb
mov
mov
push
xor
sbbb
adc
push
stos
out
xchg
arpl
cld
popf
mov
mulb
cmc
pop
inc
xchg
pop
mov
jns
mov
call
leave
jb
hlt
shlb
cmp
mov
test
fcmovne
jle
ficompl
push
or
dec
lcall
fisubrl
cmp
mov
or
pop
cmc
in
cld
sbb
push
xor
ja
dec
enter
mov
cmpsb
dec
aas
loop
cmpsl
xchg
pmaxsw
pushl
out
pop
dec
jno
pop
push
imul
sbb
enter
lock
add
daa
lcall
bnd
pop
sbb
lods
dec
or
ja
lds
inc
lahf
mov
jmp
sub
mov
repz
testl
push
pushl
shl
call
jmp
imul
cltd
sbb
imul
lcall
movlps
inc
xchg
add
loope
jg
ja
mov
std
mov
mov
ret
call
xor
imul
add
jmp
pop
ss
cmp
ret
std
jmp
nop
mov
hlt
pop
inc
stos
xor
fmulp
pop
shld
sti
stc
ja
rcl
sahf
stc
inc
sub
lret
xor
sub
insl
xchg
cmc
inc
mov
xor
or
ja
or
xchg
lods
fiaddl
cmpb
dec
clc
andl
fisttpll
sbb
out
ja
jmp
xchg
pop
push
adc
jmp
inc
test
test
mov
in
and
popa
dec
push
jo
sbb
xchg
repz
mov
pop
or
mov
lds
aas
inc
cmp
mov
rclb
pop
adc
push
fldenv
pop
imul
scas
int3
pop
scas
xor
cmp
add
jae
jmp
mov
lock
enter
fisttpll
sahf
jns
call
pop
les
outsl
es
xchg
xor
pop
mov
outsb
inc
adc
and
push
iret
ss
fldt
sub
push
pop
mov
cli
and
xchg
push
xor
or
leave
aaa
aaa
scas
inc
sub
sahf
flds
std
jbe
data16
out
fwait
stc
xchg
mov
movsb
pop
sub
fs
xchg
dec
cli
jns
jle
rcll
or
js
in
mov
xchg
cmp
adc
inc
faddl
mov
sub
push
pushf
int3
out
mov
fidivrl
es
pop
mov
mov
in
mov
fisttps
mov
sbb
lods
sti
sub
mov
into
mov
fidivrl
pop
sub
arpl
hlt
sbb
sbb
mov
bound
jno
insl
sar
out
push
jns
mov
adc
rolb
scas
dec
mov
lcall
mov
sahf
mov
sub
push
stos
xchg
xlat
push
ds
push
and
cmpsl
xor
mov
stc
cwtl
in
scas
fcmovbe
clc
and
pop
imul
mov
jl
sub
and
adc
push
rorb
jmp
dec
xor
push
push
jmp
inc
subl
or
lods
lahf
mov
cli
inc
adc
pop
adc
jno
cmp
sub
jne
ja
clc
stos
pop
daa
push
push
loopne
push
fincstp
mov
dec
xchg
inc
adc
enter
add
adc
jmp
mov
mov
pop
pop
mov
lods
nop
add
cwtl
mov
adc
cltd
jbe
outsb
inc
inc
mov
mov
and
pushf
fucomip
inc
stc
mov
ret
and
pop
testl
rcr
sub
push
dec
adc
int3
imul
adc
pop
xor
popa
add
scas
cmp
xor
nop
stos
sahf
insb
les
add
mov
sub
lea
push
lods
insl
and
or
push
jle
cmpsb
ds
enter
call
fidivl
mov
mov
xchg
arpl
mov
pop
pop
scas
ficompl
mov
sahf
inc
push
adc
mov
sbb
sub
cs
mov
fcmovnb
xor
fsubl
pop
adcb
clc
cmp
es
mov
mov
icebp
loop
and
shr
addr16
sub
sub
adc
cltd
loop
jne
out
mov
movsl
fmuls
pushf
shrl
jae
mov
adc
add
loop
aas
inc
jge
adc
dec
push
jle
or
mov
cltd
addl
in
or
xor
out
test
movsb
push
test
mov
insb
cmpb
sub
xor
xor
sbb
cmc
cltd
cmp
lret
rclb
cwtl
sbb
lcall
sbb
popf
inc
push
mov
dec
jg
pop
popa
xor
mov
gs
cmp
cwtl
popf
je
jnp
mov
add
inc
ja
ret
cmp
scas
and
imul
sbb
push
and
dec
push
pop
cmc
xor
test
ja
lods
and
mov
mov
test
xchg
enter
cwtl
cmp
sbb
cwtl
jns
stos
jbe
lea
es
int
ficompl
mov
inc
adc
mov
sbb
dec
dec
pop
or
rolb
fstps
add
je
and
xchg
ljmp
add
outsb
xchg
push
or
mov
sub
mov
orl
repnz
and
sbb
xor
mov
xor
push
mov
push
js
pushf
lcall
mov
gs
mov
xor
push
jecxz
rcl
push
jp
rcr
or
mov
lea
jno
sub
cmc
add
or
mov
in
cwtl
jle
insl
pop
stos
cmpsl
or
popf
jb
push
jle
gs
lds
and
xor
jmp
mov
shrl
test
cltd
fcomp
stos
cmpsb
mov
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
jmp
cwtl
push
cwtl
sbb
mov
insb
sbb
adc
orl
cmp
adc
insl
push
mov
push
xor
leave
fistps
sub
xor
ja
jae
and
lods
jge
inc
test
sub
xchg
repz
inc
sbb
and
mov
and
int
mov
pop
stos
xor
sti
ret
xor
mov
ror
loopne
jno
dec
subl
flds
idiv
mov
in
inc
xor
ljmp
mov
stc
inc
int3
ret
sti
clc
mov
daa
inc
mov
fwait
nop
subb
add
je
ja
adc
inc
ficoms
icebp
in
je
or
das
push
test
sub
subb
push
movswl
icebp
mov
sbb
out
xchg
jl
push
adc
arpl
and
adc
ret
ja
xchg
add
enter
inc
std
push
out
into
push
sub
mov
sbb
fnstcw
mov
push
es
movb
js
inc
cmp
ret
cmpsb
mov
inc
jo
mov
xchg
test
push
loopne
push
adc
das
jmp
aas
inc
mov
dec
sbb
add
shll
adc
pop
lea
sbb
bound
dec
mov
adc
mov
lret
bound
outsl
cmp
repnz
sub
jnp
push
iret
cmp
xchg
cmp
and
in
jnp
fs
testb
xor
push
outsb
push
push
pop
pushf
dec
mov
pop
jge
negl
sbb
xchg
dec
pusha
adc
sahf
popf
aad
xor
jmp
mov
xchg
call
xchg
sub
cmc
shr
cmp
pushf
rolb
es
lea
loope
out
scas
test
cs
xor
dec
sub
inc
mov
mov
adc
decb
insb
cltd
cmp
lods
xchg
add
lods
dec
mulb
sahf
pop
or
pop
push
out
jnp
lahf
dec
and
dec
fnstcw
lahf
je
jmp
xor
loopne
mov
mov
in
mov
pushf
xor
scas
out
arpl
cmc
inc
inc
xchg
add
test
add
fcmovne
lahf
movsb
pop
shll
scas
arpl
add
aas
xchg
cld
adc
lods
cld
dec
test
push
jns
dec
repnz
xchg
movsb
test
jns
or
leave
mov
loope
pusha
push
into
and
cmpsb
xor
xchg
aad
xor
add
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
jmp
jno
cmp
cmp
jno
xchg
xlat
test
aam
out
xchg
lods
adc
xchg
movlps
repnz
in
xor
pop
dec
pop
jp
xchg
xor
inc
stc
loope
dec
daa
lock
testl
mov
inc
ds
stos
repz
dec
xchg
mov
loope
into
popa
add
xchg
and
xchg
xor
addr16
jmp
mov
or
jnp
dec
pop
nop
pop
punpcklwd
loop
in
hlt
cmc
xor
and
movsb
mov
xchg
push
fdiv
jbe
imul
push
inc
test
xor
adc
pop
jle
and
js
jne
inc
clc
leave
loopne
add
arpl
mov
ffreep
push
repz
movsl
xor
xlat
adc
cltd
aaa
iret
fbstp
test
dec
adc
push
scas
sub
push
xor
lock
pop
mov
enter
cmp
cmc
sbb
xchg
mov
sbbl
add
imul
cmp
fidivl
leave
aad
jge
xlat
cmp
outsl
pop
xchg
xchg
and
inc
pop
pop
bndstx
in
mov
jge
loopne
xchg
icebp
xchg
in
stos
test
push
mov
adc
ret
adc
mov
mov
testl
push
push
xchg
lret
push
aam
push
xchg
outsb
mov
stos
adc
mov
stos
in
cmpb
sbb
leave
loop
fdivrs
mov
fadds
sub
sub
pop
movl
and
call
inc
xchg
fnsave
popa
adc
fdivrl
mov
ret
leave
pop
dec
and
pop
rcr
pop
insl
cmp
fsubrp
jmp
xorb
xor
xchg
or
mov
enter
add
mov
insl
cwtl
push
popf
enter
mov
or
sahf
fld
outsb
and
leave
insl
mull
int
jne
lds
cmp
mov
scas
adc
add
lcall
jg
ljmp
inc
mov
cmp
cmpl
dec
mov
jg
mov
int3
cmp
sbb
js
packuswb
lsl
mov
pusha
stos
fucom
outsl
cld
and
fisttpl
lahf
repnz
dec
push
lods
push
stc
push
mov
subb
fidivrl
leave
std
mov
popw
cmp
andl
xlat
js
xchg
test
mov
aaa
mov
cmp
leave
mov
push
jp
out
into
stos
stos
mov
in
dec
xchg
lods
jg
add
adc
scas
cmp
cmp
or
loope
mov
bound
cmp
mov
pop
loopne
or
or
push
jne
or
pop
leave
ret
mov
and
mov
or
mov
jne
sbb
mov
sbbl
mul
ret
subl
push
cmpl
mov
mov
movl
mov
jmp
movl
jne
push
pushl
pushl
call
adc
not
movzbl
xor
mov
movzwl
adc
or
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
jmp
adc
fscale
fyl2xp1
lock
int3
cmp
push
mov
adc
sar
mov
sbb
cmp
stos
nop
cmp
xchg
das
movsl
dec
push
daa
mov
bound
mov
xor
fcmovnu
in
popf
daa
mov
dec
inc
stc
push
fidivrl
and
xchg
out
jb
jl
insl
sub
out
loopne
jmp
push
sbb
aaa
push
rcr
aaa
xchg
aas
ja
cmpb
sub
pop
mov
mov
adc
dec
lea
test
adc
mov
and
ljmp
stos
sub
xor
mov
adc
fdivrl
or
pop
or
jo
imul
dec
mov
scas
divl
fwait
test
pop
xor
mov
push
xor
lods
aaa
ja
xor
dec
or
push
push
push
jne
ret
pop
rclb
testb
movsb
mov
sbb
or
mov
add
out
int
in
mov
and
dec
and
rcrb
cwtl
fcmovnu
fstps
jmp
adcl
imul
and
adc
jge
xor
dec
scas
inc
decb
stc
sbb
fsts
push
jae
mov
leave
inc
sbb
or
jns
mov
fwait
jl
dec
call
stos
imul
sbb
dec
mov
adc
je
cmp
fadds
in
in
daa
push
inc
je
out
imul
push
hlt
lea
call
jecxz
mov
imul
stc
mov
or
ret
sub
sbb
cwtl
test
mov
push
sub
cmp
xor
cmpl
xchg
push
pop
mov
rcrl
repnz
mov
mov
xor
inc
out
pop
adc
mov
int3
subl
sub
ret
mov
mov
add
dec
cmc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
jmp
pop
mov
push
sbb
loope
push
cwtl
mov
adc
dec
fsub
jl
pop
add
pop
mov
sbb
xchg
ret
sub
int
mov
fs
dec
lret
xor
shrl
add
test
push
inc
jg
mov
adc
stos
enter
pop
test
movl
or
and
jecxz
hlt
pop
dec
dec
pop
mov
jne
ret
clc
sahf
or
pop
out
adc
imul
add
insb
mov
cmp
aad
in
sahf
xor
aas
xchg
mov
addb
dec
rorb
lods
jl
hlt
inc
scas
pop
jl
mov
rcrl
mov
jae
fwait
push
clc
repnz
inc
rcll
xor
insl
cmp
or
push
pusha
dec
or
mov
mov
lods
dec
fldenv
dec
cli
les
add
or
fisttpll
sbb
inc
pusha
pop
sti
subl
test
push
jae
scas
cld
aas
xor
sub
dec
mov
out
cmpsb
jbe
mov
mov
ljmp
inc
cmp
jecxz
leave
adc
dec
and
in
sub
push
stos
inc
rcll
sbb
mov
mov
repnz
or
cmp
scas
lds
dec
sub
mov
cwtl
dec
adc
jb
sbb
orl
push
push
sbb
adc
pop
jge
mov
or
jno
in
filds
mov
mov
mov
xchg
cli
or
addr16
cli
jno
shrb
pop
mov
xchg
adc
pop
sub
mov
call
pop
addr16
test
shll
pop
orb
mov
sbbb
adc
sub
add
sbbl
aaa
add
pop
imul
inc
jmp
push
pop
xor
adcb
pop
stc
jg
mov
pop
pop
stos
and
dec
push
adc
fstpt
cli
jp
and
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
jmp
and
popa
and
clc
inc
jbe
enter
pop
fwait
adc
mov
or
and
fmuls
mov
cli
ja
xchg
scas
out
and
imul
inc
or
inc
cmpsb
pop
mov
dec
lcall
push
xchg
imul
ret
iret
sub
incl
hlt
call
sub
pop
jp
aaa
xchg
jnp
jp
xchg
or
ja
ja
leave
rcrl
incl
pop
dec
jp
test
stos
out
scas
cmp
adc
cmp
test
and
test
pop
xor
mov
in
insl
clc
add
add
mov
outsl
lret
fs
shl
xor
outsb
dec
aas
int
lret
out
jecxz
adc
fldl2t
cmpsl
rcrb
sub
mov
and
cmp
adc
sbb
int
test
mul
sahf
fcmovbe
stos
dec
and
pop
mov
jo
adcb
lahf
jmp
pop
mov
ret
jl
add
push
mov
push
push
ljmp
pop
ds
out
sub
fistpl
js
addr16
mov
push
cli
daa
jg
or
mov
cmp
dec
sbb
pop
cs
and
sti
mov
or
test
hlt
push
fnsave
sbb
xor
xor
mov
xchg
add
fists
inc
test
and
cmp
jecxz
std
mov
xorl
sbb
mov
xor
or
scas
add
jne
xchg
aad
sbb
or
ret
adc
adc
mov
loopne
xchg
fcomps
scas
cmp
mov
lea
aam
lds
aas
aam
adc
inc
mov
push
dec
xor
testl
fimull
inc
mov
mov
mov
aad
jle
arpl
repnz
mov
enter
pop
xor
add
lea
outsl
mov
rcll
mov
mov
mov
jo
inc
sbb
sarb
fimull
xchg
add
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
jmp
lret
push
out
sub
rorb
jb
negl
adc
ja
movsl
loopne
pushl
pop
sahf
inc
popf
jae
add
popf
xlat
es
data16
adc
xchg
push
fdivl
in
enter
push
mov
and
icebp
xorl
sub
jmp
jae
and
push
cld
mull
test
sar
xor
dec
or
and
lret
icebp
insb
test
cmc
and
xor
in
int
add
test
sbb
add
sub
fcoml
xchg
push
mov
xchg
addr16
aad
int
scas
int3
mov
rcll
inc
testb
loopne
mov
xchg
add
jbe
push
pop
xchg
inc
and
mov
ds
ret
sub
sar
inc
lret
or
mov
clc
js
xchg
or
xchg
cld
hlt
mov
movsl
sarl
cmpsb
loope
sahf
push
dec
push
sub
in
mov
push
out
mov
sarb
lret
lods
jo,pt
flds
and
cltd
insb
push
arpl
shlb
rorb
dec
xor
es
mov
jmp
lcall
mov
daa
cltd
imul
mov
pop
pop
int
add
xchg
loopne
push
jbe
das
mov
jg
int
stc
dec
cmp
mov
dec
fwait
xor
mov
dec
sarl
mov
inc
fwait
sbb
nop
adc
mull
sbb
ljmp
pop
popa
xchg
mov
mov
dec
sub
popa
jp
pushf
gs
adc
dec
mov
iret
and
lods
jae
inc
add
data16
les
aad
sub
fcom
push
adc
jb
imulb
in
bound
mov
movsl
pushf
inc
ret
icebp
inc
test
out
jg
popl
or
or
aad
pop
mov
sbb
int
sbb
xchg
movsl
ficoml
mov
imul
mov
cli
lods
mov
add
shl
repz
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
push
call
mov
movzwl
push
call
test
jne
xor
movl
jmp
mov
mov
and
mov
mov
push
cmpl
movl
movl
jmp
mov
movl
ja
pushl
call
addl
subl
subl
orl
pop
mov
mov
mov
mov
mov
andl
movzwl
subl
or
andl
cltd
adcl
movzwl
sbbl
idiv
xor
movzwl
adcl
or
and
mov
and
mov
cmpl
mov
mov
jmp
movl
movl
jne
pushl
push
call
orl
sbb
sbb
xor
add
and
mov
mov
mov
subl
mov
mov
andl
sub
andl
mov
movl
xor
add
mov
sub
movl
mov
movl
cmp
movl
jb
cmpl
movl
mov
mov
mov
jmp
movl
jbe
push
push
call
adc
movzbl
add
mov
adcl
and
add
subl
movl
movl
adc
movl
add
jmp
loope
jnp
cmp
pop
popf
push
xor
stos
xchg
pop
mov
adc
adc
inc
cmp
inc
adc
pop
inc
push
std
jo
adc
test
fadds
cmp
cs
cmp
xor
dec
add
xchg
stos
xchg
sbb
shrl
das
mov
inc
lods
jg
daa
je
icebp
xchg
cmpsb
jno
mov
pusha
push
icebp
aam
cmp
or
aam
sub
scas
push
jmp
inc
int
or
push
lcall
imul
out
pop
fcmovnbe
dec
repz
pinsrw
pusha
cli
in
popa
jno
in
stc
mov
and
xchg
xor
out
mov
daa
dec
xchg
icebp
xchg
clc
dec
clc
or
lret
iret
sbb
or
lea
cli
out
xlat
popf
fwait
es
mov
sbb
xchg
push
cld
cmp
adc
cmp
xchg
xor
call
int3
jl
jne
ds
test
xchg
xchg
xor
mov
cmp
xchg
fists
bnd
lods
dec
mov
or
pop
jg
adc
js
cwtl
pop
jge
push
aad
push
movsb
negb
bound
mov
test
adc
addr16
dec
sbb
mov
inc
push
adc
lods
outsb
add
fcomps
pop
push
and
inc
lds
sub
xchg
push
mov
xchg
push
nop
aas
pop
orl
add
push
push
lret
ret
add
out
jnp
inc
adc
xor
cwtl
jmp
lret
cli
mov
push
cmp
pop
rclb
js
call
adc
or
test
call
adc
dec
jmp
js
mov
or
xor
pop
stc
xchg
bound
cmc
dec
and
cmp
sahf
xor
add
mov
xchg
xchg
inc
push
mov
sbb
xor
add
mov
fcomps
cmpl
out
xor
out
mov
sbb
sub
test
or
enter
inc
jl
sahf
mov
sbb
lcall
and
lcall
fcomps
jecxz
fists
xlat
jmp
lret
push
loopne
stos
fwait
fs
push
xchg
nop
xchg
jns
lahf
sbb
ja
pusha
jno
and
fwait
mov
jecxz
dec
ficoml
out
loopne
out
adc
sbb
jb
lahf
dec
jns
sbb
cmp
ficompl
lds
loop
movsb
cmpsl
cmp
mov
andb
jbe
cmp
xor
xlat
cmp
shr
xchg
push
rorb
adc
lods
xlat
out
mov
in
popl
mov
loopne
int3
jns
pop
mov
sbb
addb
mov
repnz
lret
and
mov
jge
cmpsl
jo
or
in
es
or
clc
cmp
insw
jno
xchg
mov
adc
jb
mov
imul
inc
xor
movl
mov
xor
mov
mov
sub
add
add
mov
xor
incl
div
mov
add
adcl
and
subl
pushl
xorl
pushl
call
movl
cmpl
movl
mov
jmp
mov
mov
jl
push
push
pushl
push
pushl
call
neg
sbb
addl
sbb
addl
sub
adc
movl
sbbl
movl
orl
mov
mov
and
or
adc
mov
and
xor
andl
pushl
adcl
pushl
call
or
pushl
movl
movl
movl
cmpl
mov
notl
jmp
mov
ja
push
pushl
pushl
pushl
push
pushl
pushl
push
call
or
and
xor
add
movl
adcl
movl
sbb
movl
movl
add
movl
xor
mov
cmpl
mov
mov
mov
jmp
movl
not
jbe
push
pushl
push
call
movl
movzwl
or
mov
mov
add
xor
and
andl
adc
mov
sub
mov
or
addl
and
mov
xorl
sub
pushl
mov
mov
incl
add
andl
and
mov
adc
jmp
pop
push
shlb
lcall
jle
das
sbb
pop
adc
adc
add
lds
push
arpl
das
aas
xor
jl
mov
push
inc
push
std
std
icebp
pop
dec
fisubrl
rcr
out
lock
mov
mov
jl
mov
cmp
test
test
pop
mov
mov
sbb
pop
pop
ret
pop
sub
int
sub
ds
or
and
and
sahf
sub
xchg
jg
leave
cld
enter
ljmp
shrl
jns
scas
inc
enter
mov
subb
cmp
mov
dec
loope
je
in
mov
jp
or
and
xchg
inc
xchg
mov
jbe
jbe
cmp
push
pushf
lods
into
inc
loop
loope
xchg
cwtl
pop
pop
jns
shrb
and
cmp
push
popl
xlat
mov
mov
mov
lahf
das
mov
fwait
mov
lcall
cmp
push
xor
pusha
or
jmp
sub
or
data16
mov
xchg
movb
out
sti
pop
out
xor
push
jge
dec
sbb
arpl
lock
sbb
xor
arpl
daa
ds
and
adc
jno
xchg
divl
xor
popa
aas
stc
stos
inc
or
pop
jae
sbb
call
mov
int3
cmpsl
adc
mov
cmpsl
xor
mulb
cli
loope
out
cmp
xor
jge
enter
xor
scas
out
dec
push
fistl
pushf
mov
repnz
push
mov
icebp
popa
pop
cmp
out
rcrl
sbbb
push
sahf
push
pop
lcall
cmp
iret
daa
repz
fdivrs
test
lret
jbe
mov
jno
test
das
mov
jne
dec
pop
mov
in
sub
test
fadd
jne
aas
les
into
mov
jmp
sub
int3
add
and
xchg
mov
loope
jle
sub
sti
xchg
xlat
sbb
sti
mov
push
push
sbb
pop
add
xchg
popf
adc
mov
ret
ljmp
sub
fimull
mov
dec
and
cmp
popf
mov
dec
bnd
and
aad
cmp
inc
sbb
mov
fistl
out
lock
cs
iret
shlb
mov
inc
lahf
repz
cmp
out
ljmp
push
push
aad
adc
cs
pop
movsb
nop
sub
mov
paddsb
xor
inc
sbb
gs
xor
inc
and
daa
jb
loope
jo
sub
inc
fists
movsl
mov
push
add
and
mov
cld
push
call
xchg
pop
test
xor
ret
pop
xor
outsl
inc
scas
dec
pop
fsubrl
add
push
enter
ret
mov
sub
mov
orl
xor
adcl
and
pushl
mov
movzbl
and
mov
imul
sbbl
xor
subl
or
andl
mov
sub
pushl
call
andl
dec
movl
jne
sbb
movl
mov
subl
mov
movl
sbbl
mov
call
inc
lea
cmpl
mov
mov
jmp
mov
jbe
push
pushl
call
movzbl
add
dec
dec
sbb
sbb
mov
xor
xor
sub
add
mov
adcl
lea
mov
xor
mov
mov
cmpl
mov
mov
mov
not
jmp
movl
movl
jle
push
push
pushl
pushl
call
adc
sbb
and
or
and
sbb
adc
xor
mov
adc
mov
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
push
call
mov
adc
and
or
orl
sbb
dec
xor
xor
movzwl
xor
shl
adcl
shr
or
movzbl
and
mov
xor
mov
cmpl
mov
movl
mov
movl
jmp
not
mov
jne
push
call
and
movzbl
adc
sub
movzbl
sub
movl
and
sub
mov
xor
mov
and
mov
xor
mov
mov
xor
xor
sub
or
mov
shrd
shr
inc
mov
and
mov
cmpl
mov
mov
movzwl
jmp
movl
mov
ja
push
push
pushl
push
pushl
push
call
sbb
add
mov
xor
mov
not
and
inc
mov
xor
xorl
xor
or
or
mov
adcl
push
sbbl
pushl
incl
lea
andl
push
andl
shl
orl
call
lea
sbbl
push
adcl
mov
orl
mov
xorl
lea
orl
push
mov
lea
mov
adcl
mov
adcl
mov
push
call
push
push
addl
pushl
xorl
jmp
nop
fwait
inc
stos
pop
sbb
dec
sti
adc
in
stos
sub
adc
adc
sbb
xchg
push
jmp
loopne
and
mov
hlt
aam
jo
cmpsb
pushf
mov
pop
shrl
jecxz
movsb
test
les
cmp
xchg
cltd
pop
xor
les
lds
sarb
inc
mov
add
addl
fnstenv
inc
cli
push
add
dec
jno
sub
sbb
popf
test
data16
cmp
cmp
inc
lds
test
sarl
aad
xchg
xor
xor
lea
cmp
iret
lds
pushf
mov
or
cmpsb
in
loopne
sub
push
mov
sub
mov
and
fstpl
xchg
pop
cmp
shlb
xchg
cmp
loopne
movsb
xor
lock
jecxz
shrb
mov
dec
mov
jns,pn
jge
int3
loope
xor
sarl
fcomps
cmp
cmp
sub
push
xchg
pop
aad
sbb
jecxz
ljmp
sbb
stc
ja
cwtl
enter
lcall
jle
xchg
lret
shl
lods
inc
pop
outsb
rorl
in
sub
icebp
fisubrs
les
inc
popf
or
sbb
cvtpi2ps
fcomps
dec
das
xor
imul
push
int
and
cld
mov
jge
adc
mov
pop
aaa
cmp
xchg
filds
and
push
pop
push
sbb
pop
and
aaa
mov
cld
fcmovb
push
xor
push
iret
add
mov
sub
push
icebp
pop
push
loopne
addr16
jbe
shlb
lcall
lahf
adc
push
rcl
sub
imul
enter
shlb
pop
xchg
push
xchg
and
mov
sbb
out
sub
sub
outsb
insl
mov
fcomp
lret
sub
adc
cmp
test
mov
stos
xchg
push
addb
and
push
lock
cmpsb
xlat
push
push
and
mov
push
insl
adc
aam
push
xor
xchg
pop
cmp
inc
xchg
arpl
aad
inc
jae
pop
lcall
mov
leave
jnp
lret
mov
mov
and
adc
add
sbb
and
adc
mov
pop
lahf
pop
dec
xor
lock
mov
std
mov
jle
mov
scas
add
ja
mov
imul
mov
mov
cmpl
jp
push
iret
imulb
push
jp
int3
mov
ds
out
aam
fcomps
and
and
jl
cmp
ffreep
push
mov
fcmovnu
loop
and
stos
or
lret
mov
push
cmpsl
pop
int3
cli
inc
popa
pop
cli
push
stos
ficoms
and
test
outsl
xchg
push
mov
arpl
pop
push
aaa
loop
aaa
sub
out
stos
movsb
dec
gs
add
test
pop
es
int3
jae
add
outsb
mov
push
xchg
and
movsb
decl
cmp
add
mov
jmp
mov
jge
push
call
mov
add
add
add
xor
adc
xor
movzwl
and
sbb
mov
mov
cmpl
mov
mov
mov
jmp
movl
jne
pushl
push
push
call
or
mov
add
sub
sbb
subl
mov
adc
shr
adcl
shl
or
adcl
mov
xorl
xor
cmpl
movl
movl
mov
jmp
mov
mov
jb
pushl
pushl
call
not
mov
or
or
add
adc
mov
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
call
xor
inc
add
adc
sbb
sub
sub
cmpl
movl
mov
jmp
mov
movl
jge
pushl
push
push
pushl
call
or
mov
mov
sub
add
orl
neg
movl
incl
xor
lea
mov
adc
mov
lea
mov
mov
or
mov
adc
mov
sub
sub
andl
lea
xor
subl
movl
cmpl
mov
movl
movl
jmp
movl
jle
push
push
pushl
call
sbb
addl
xor
mov
sbb
adc
adc
subl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jl
push
call
and
movl
xor
or
xor
add
sub
add
adc
mov
mov
or
and
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
jmp
aaa
mov
add
aaa
dec
faddl
push
adcl
adc
int3
test
and
test
cmc
sbb
or
xchg
clc
or
jg
stos
sbb
fistpll
add
rol
in
add
scas
mov
xor
adc
xor
scas
loope
das
dec
shl
xchg
xor
jmp
imull
push
cmpsb
ret
aaa
dec
loopne
pop
out
test
or
inc
cmp
pop
ret
and
inc
push
jp
sbb
scas
lock
fistpl
lods
repnz
dec
sahf
ds
pop
daa
mov
imul
cltd
popf
ret
mov
and
sbb
xchg
test
sub
xchg
scas
xchg
pushf
rsm
imul
cli
test
pop
pushf
aad
mov
mov
adc
loope
cmp
jp
or
or
mov
add
mov
lea
mov
mov
dec
repz
ret
sbb
loop
xor
xchg
xlat
sub
jp
xchg
les
cld
push
mov
insb
pop
imul
aas
or
mov
or
inc
inc
push
mov
into
jmp
cmp
xchg
mov
mov
in
xorb
push
aaa
fwait
sbb
loop
repz
leave
icebp
popl
iret
and
mov
mov
into
adc
jo
ljmp
js
jmp
pop
cmp
out
cmp
add
cmp
xorb
xchg
jae
pop
aas
call
repz
mov
lods
pop
jge
xchg
out
pushf
pop
aas
dec
and
pusha
sarb
mov
es
clc
inc
push
jo
psadbw
push
aam
js
bsf
cmpsl
sbb
addb
dec
je
fs
ss
ret
insl
adc
loop
push
mov
jb
inc
sub
fistpll
mov
movsb
in
cmp
cmc
mov
push
insl
ja
stos
dec
or
or
out
xor
aad
mov
jp
and
mov
xor
aaa
add
imul
fsts
pop
sub
mov
add
xorl
adc
scas
or
fcoms
mov
xorb
sub
mov
cli
cmp
push
sti
aaa
dec
hlt
sahf
sbb
adc
ror
fs
push
inc
ficompl
cwtl
popf
movsb
pop
aam
or
jbe
and
lea
jno
lahf
push
aaa
push
inc
mov
fsubrs
andl
rcrb
addr16
lret
jo
sub
mov
push
insb
adcl
stc
aaa
stos
xchg
repnz
pushf
inc
jmp
fisubrs
xor
sarb
ja
and
bound
cmp
mov
lods
stos
loop
xor
mov
movsl
adc
dec
fsubl
call
outsb
in
daa
test
push
loop
dec
xchg
ss
jl
xlat
outsb
sub
push
adc
test
or
ja
mov
sub
mov
sbb
mov
cmp
jne
cmp
jmp
mov
and
fwait
iret
test
out
mov
adc
adc
mov
call
push
aas
in
add
js
inc
adc
jb
fmull
or
jb
cmp
test
or
shlb
inc
mov
rclb
fmuls
dec
cwtl
sbb
ja
ret
inc
sub
mov
lods
push
imul
loope
sbb
pop
insl
jnp
ficoms
xor
sbb
in
je
xor
adc
pop
jl
hlt
int
push
ret
push
ss
test
jno
cli
sub
ret
pop
cs
jge
les
mov
test
xchg
dec
pop
fwait
scas
insb
push
and
add
sub
fdivl
cmp
inc
mov
aaa
mov
cmp
in
loop
ss
adc
mov
call
adc
inc
or
push
pusha
push
clc
popa
sub
call
sti
mov
add
lret
cmp
jecxz
enter
lock
mov
int3
icebp
ret
and
jo
add
repnz
ljmp
inc
int
sub
jbe
cltd
mov
jl
cmp
das
sub
je
cli
inc
aaa
das
popf
pop
push
xor
sbb
xchg
jl
dec
lock
push
push
fs
ret
imul
dec
filds
mov
xlat
adc
mov
mov
and
pusha
mov
inc
jg
pop
xor
js
push
sarl
add
push
icebp
in
mov
ja
sbb
jns
les
jne
adc
scas
xor
shlb
cmp
mov
out
out
inc
dec
cmpsb
fsubr
pop
lock
jmp
xlat
xor
sarb
pushf
loopne
mov
inc
and
or
mov
mov
fisubs
mov
push
adc
popf
shrl
sub
out
mov
push
push
xor
mov
cmp
in
add
lcall
inc
in
xor
cli
xor
mov
jo
insb
mov
inc
mov
cmp
sbb
push
cs
insl
ret
and
xor
mov
xchg
mov
aas
mov
xor
data16
adc
fmull
das
and
leave
gs
adc
mov
push
test
lods
push
or
push
xchg
jo
mov
jmp
cltd
lods
xchg
pop
jo
xchg
push
into
nop
cltd
xor
sbb
or
jg
push
dec
adcl
imul
pop
xchg
hlt
jl
nop
ja
call
imul
std
fldenv
mov
xchg
lds
mov
mov
test
int
inc
xor
mov
imul
sbbb
ja
mov
push
dec
int
xchg
int
ja
adc
jle
or
fs
aam
push
xchg
mov
add
paddq
sbb
jmp
dec
das
sub
push
movsl
int
icebp
ss
push
and
mov
shlb
push
js
out
adc
repnz
inc
push
lods
sub
jp
add
out
aad
xor
je
sub
jge
iret
or
test
and
add
inc
and
mov
inc
and
js
add
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
jmp
sbb
je
sub
cmp
dec
add
insb
add
adc
adc
cltd
les
sarb
xlat
fcoms
sbb
xchg
andb
fisubl
pusha
loopne
dec
cld
push
mull
aad
pusha
test
shrb
gs
test
ja
stos
mov
lea
repz
add
pop
stos
scas
push
mov
push
imul
lcall
test
into
push
cmc
test
xor
fidivl
adcl
mov
movsb
xchg
pop
pop
rol
into
ret
mov
sbb
inc
mov
or
xchg
loopne
hlt
mov
sbb
mov
mov
in
mov
lods
shl
sbb
pop
je
or
xor
jmp
jge
add
test
fisttps
sub
roll
aam
push
lods
dec
push
xor
adc
and
aad
pop
and
add
pop
pop
cld
xchg
cmp
mov
repz
push
mov
adc
sbb
popa
movsb
ds
cltd
cmp
add
adc
xor
jo
ret
cwtl
nop
dec
outsb
sbb
pusha
xchg
sub
push
ss
mov
push
daa
add
rorb
sar
pusha
inc
mov
xor
cltd
fsubp
imul
cmp
xchg
and
sub
adc
lods
loopne
inc
inc
call
call
pop
sarb
and
mov
repz
aaa
sbb
orl
sub
loop
add
mov
fs
movsb
jne
adc
into
loop
sub
lcall
sbb
xor
stos
mov
bound
dec
mov
loopne
push
sub
xor
cmpsl
cs
mov
test
or
stos
and
mov
push
inc
xor
aas
or
mov
xchg
ret
add
mov
lahf
dec
inc
es
cmc
adc
push
and
shrb
aaa
arpl
mov
jle
sbb
xchg
xor
ss
xor
or
inc
xchg
loopne
shrl
push
je
insl
xlat
adc
test
cmp
not
call
lcall
sub
mov
mov
cwtl
fldenv
ret
out
add
dec
or
ss
fnstcw
rolb
hlt
mov
sahf
fsubrl
aaa
icebp
mov
mov
daa
call
ds
icebp
xor
dec
sub
dec
sbb
fcoml
icebp
mov
stos
xchg
pusha
push
mov
and
outsb
pmulhuw
sahf
mov
int3
dec
inc
mov
repnz
dec
add
and
popa
movsb
shrl
cli
shrl
sbb
sbb
ret
add
jp
xchg
leave
xor
jg
mov
icebp
fs
rol
mov
pop
cmp
cli
jns
ret
push
fwait
ss
sti
adcl
pop
jmp
js
in
fisubrl
loope
mov
ss
add
gs
or
add
jbe
push
fisttps
xchg
or
movsl
mov
mov
test
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
adc
or
addb
dec
insl
adc
pop
adc
adc
lds
popaw
lahf
fcmovb
or
das
mov
add
fmull
test
movsl
pop
hlt
pusha
outsl
mov
stos
dec
jns
pop
ss
jl
loope
adc
dec
pop
mov
cli
lahf
or
gs
and
stos
cmp
dec
scas
les
mov
mov
xor
or
push
fdiv
arpl
ja
mov
push
testb
xchg
sub
pop
out
mov
jmp
push
and
mov
scas
fldl
scas
ljmp
xchg
or
cwtl
mov
stc
cs
push
insb
push
repnz
cmc
sbb
nop
mov
fdivrl
inc
pop
pop
cmp
fnstenv
inc
std
jno
mov
test
ja
loope
xor
push
das
mov
test
mov
ficompl
cmp
jbe
pop
add
mov
mov
int
data16
inc
ret
pop
or
inc
and
sub
not
mov
adc
test
stc
std
or
inc
shr
push
rolb
out
push
mov
jecxz
out
movsb
sbb
sub
insb
cmovns
ret
insl
sti
jp
jnp
mov
add
or
in
sbb
mov
xchg
pop
jnp
xor
push
jle
cmovo
sbb
ret
pop
int3
bound
cwtl
jle
paddusw
lods
std
test
pusha
dec
enter
inc
sarb
add
call
lock
mov
inc
cmpsb
jno
mov
inc
roll
icebp
ret
divb
leave
mov
pop
lods
mov
push
and
loopne
sti
sarl
xchg
pop
ss
jl
fdivr
insl
sbbb
sub
fisubs
lret
jno
inc
adc
lcall
into
sahf
add
sub
push
jle
push
idivl
and
out
loopne
lods
push
mov
adc
pop
fucomi
sti
xchg
mov
pop
mov
cmp
ds
imul
adc
cld
sbb
imul
pop
xor
shll
fwait
jge
xchg
addr16
pop
pop
and
dec
adc
adc
sub
test
push
and
or
jo
fs
and
imul
sub
dec
ja
in
test
sub
pop
fs
and
andb
and
pop
cltd
aas
adc
pop
jp
push
xchg
mov
daa
mov
icebp
cwtl
sbb
mov
push
repz
in
cmp
mov
push
data16
rcrb
dec
mov
sub
ljmp
jl
adc
sub
dec
mov
add
clc
cmp
add
pop
outsb
lods
dec
mov
add
pusha
xor
out
mov
cmpb
mov
faddl
pop
and
dec
dec
nop
and
push
movsl
inc
aaa
add
and
and
xchg
mov
loope
xor
jmp
sahf
adc
mov
jae
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lods
test
jmp
insl
pushf
inc
fs
out
js
arpl
adc
adc
and
scas
jg
in
jnp
into
bound
lods
mov
std
mov
pop
sbb
pop
pop
cmc
mov
inc
out
aaa
dec
pop
hlt
cltd
cmpsb
popf
sub
loop
cmp
push
jne
repnz
dec
rolb
xor
pusha
inc
and
gs
xor
aaa
stos
orl
dec
ljmp
out
lods
xor
adc
dec
daa
sub
ljmp
and
lret
jl
sbb
into
repz
mov
sub
dec
ljmp
cmp
inc
or
jmp
jno
arpl
fstpt
jp
sbb
out
shl
decl
ss
cld
or
rcll
pop
dec
ja
xor
push
mov
adc
arpl
mov
repnz
shr
mov
xchg
push
pop
add
sbb
fadd
daa
jb
add
push
add
inc
xchg
push
icebp
jmp
jno
mov
mov
sub
out
push
mov
xlat
push
outsb
aaa
adc
push
es
mov
aam
sbb
inc
cmc
aad
xor
sbb
sets
cmp
push
and
movsl
imul
ljmp
clc
inc
imul
mov
dec
inc
xlat
pop
sub
and
cld
mov
jae
jecxz
in
xchg
in
pop
mov
and
pop
sbb
cmp
push
cmp
dec
cmp
mov
push
fcom
insl
sub
and
xor
add
cmovge
fidivs
stos
adc
jnp
pop
jecxz
adc
xor
ja
xor
cld
push
and
int
adc
pop
popa
faddl
dec
jl
imul
das
pop
adc
fs
jmp
sub
mov
enter
fadds
push
xor
daa
dec
xor
mov
pop
clc
sub
dec
lret
lcall
mov
pusha
sti
popf
cmp
pop
pusha
xchg
xchg
movsb
mov
stos
bswap
xchg
push
lret
lods
popa
shll
mov
jecxz
cmp
jae
test
in
and
popf
add
scas
sub
in
jmp
arpl
adcb
sti
jl
in
loop
aad
and
sub
jne
mov
mov
bswap
out
mov
fisubrs
and
mov
push
jbe
adc
enter
push
adc
adc
cmp
cmp
loop
rol
pusha
mov
cmp
sarl
loop
mov
les
sub
incb
mov
jnp
insl
cli
push
cmp
adc
shl
mov
lds
mov
rclb
pop
inc
stos
inc
sarl
push
or
jge
lahf
push
inc
loop
push
rcl
jno
leave
imul
xchg
orl
sub
and
mov
rcl
push
insb
adc
scas
testl
add
das
iret
frstor
inc
inc
or
xor
adcb
or
adc
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
mov
test
cwtl
lods
sbb
out
ficomps
adc
adc
mov
xor
iret
push
sbb
dec
mov
add
jge
fs
sbb
jb
push
fldl
cmp
xor
clc
test
add
sbb
mov
loop
add
icebp
add
cmpsl
sahf
and
mov
push
inc
ret
xchg
pop
lods
shl
dec
loop
mov
pop
cld
push
mov
and
paddd
mov
enter
frstor
fadd
mov
mov
pusha
iret
decl
aaa
sbb
addb
sahf
push
jmp
fcmovne
mov
pop
out
xchg
push
dec
add
pop
mov
jns
ja
inc
lds
ror
fmull
dec
lds
pop
lea
mov
lods
clc
in
lcall
ss
sbb
mov
imul
dec
add
iret
jno
ds
xchg
mov
add
xchg
jg
pmuludq
adc
aad
stos
mov
fucomi
xchg
pop
or
cmc
jae
jle
sbbb
stos
lock
adc
sbb
popf
jno
cmpsl
enter
mov
pop
inc
dec
cld
js
aas
shlb
scas
adc
pop
stos
call
pop
rcrb
shll
call
cmp
xchg
mov
fs
fucomip
dec
lock
sub
jae
xchg
jne
je
lods
add
outsb
data16
lret
pusha
push
rcrb
dec
rolb
sbb
inc
in
jns
test
mov
mov
dec
jp
or
rol
cmpsb
imul
fsubs
negb
testl
pop
sbb
repz
sub
sbb
aaa
adcb
sbb
or
inc
cmp
sub
mov
jge
dec
push
in
inc
addr16
dec
fcoms
pushl
mov
push
hlt
and
lods
adc
call
pop
cmp
ja
xchg
std
movsb
push
lret
or
fcomps
jbe
inc
pusha
data16
aad
decb
arpl
mov
ds
stos
mov
mov
ljmp
lea
push
ja
in
or
and
adc
xorl
adc
jmp
inc
push
and
ret
movsb
lods
hlt
faddl
push
or
adc
mov
lret
mov
lret
push
dec
cli
shl
inc
imul
mov
cmp
dec
insl
in
xchg
mov
ret
sbb
push
lods
lea
daa
mov
in
bound
stc
cmp
fcoms
sti
add
flds
addr16
mov
enter
or
cli
ja
xor
pop
or
fwait
repnz
inc
lock
jnp
fnstcw
jmp
movsl
dec
or
xchg
add
dec
sbb
test
jp
sbb
popf
xor
cmc
and
notb
mov
ljmp
xchg
movsl
or
xchg
out
neg
out
add
stos
mov
stos
fcom
mov
xchg
push
push
push
jmp
jne
pcmpgtb
sbb
aaa
data16
xlat
ss
es
adc
pop
adc
adc
mov
rorl
or
hlt
jp
data16
push
scas
mov
or
mov
fwait
push
outsl
push
mov
and
rcll
push
mov
mov
jae
inc
mov
lcall
into
or
imul
mov
jp
loope
or
repnz
dec
xor
push
cltd
sbb
sbb
je
pop
sbbb
dec
dec
dec
pushf
push
xchg
push
jbe
push
xlat
mov
ljmp
push
jnp
mov
inc
inc
daa
clc
fcmovnbe
rcr
lods
into
pop
pop
push
cmp
andb
mov
jne
aad
pop
jno,pt
lahf
mov
call
inc
mov
pop
idiv
cmp
loop
xorb
fistpl
pushl
push
mov
and
insb
dec
mov
jp
fs
outsl
mov
scas
fdiv
es
adc
push
lds
ret
xor
sub
inc
mov
inc
scas
inc
imul
into
or
push
sub
add
scas
addr16
inc
idivb
fdivrl
movsl
dec
test
mov
cli
fisubrl
inc
mov
push
test
in
sbbb
jg
xor
ds
test
outsl
fildll
mov
adc
ds
loope
push
pop
mov
pop
adc
in
arpl
or
aas
mov
push
out
sbbb
mov
adc
stos
or
pop
xor
stos
jp
cltd
add
out
or
movsl
rorl
test
repz
inc
pop
xor
mov
mov
sbb
jp
mov
cld
mov
push
cmp
lea
jge
notb
loopne
adc
mov
push
inc
test
ret
push
xchg
push
xor
and
sbb
enter
ficompl
cmp
mov
sbb
dec
gs
fs
js
shl
cmp
daa
lods
popf
lock
sbb
pop
test
push
or
jle
cmp
pop
mov
sub
pushf
mov
mov
mov
push
cmp
or
mov
out
arpl
rcr
int3
fimuls
leave
out
pop
repz
sbb
dec
in
stos
imul
sbb
cmp
ret
pop
pop
aaa
cmp
cs
jle
lods
and
xlat
jmp
movsl
xchg
shr
mov
xchg
xlat
or
scas
outsl
cld
jl
xchg
push
add
nop
push
pop
dec
sub
movsl
add
aaa
incl
sbb
mov
mov
adc
jae
movb
in
push
mov
cmpsb
xor
arpl
insl
in
xor
add
insl
aam
test
pop
mov
xchg
jmp
icebp
sub
mov
pop
cmpl
sbb
repnz
sub
dec
mov
sahf
inc
mov
dec
sub
adc
jne
xor
cmpsl
movsl
outsb
lcall
jl
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
jmp
pushf
cmpsb
mov
scas
fwait
cmp
mov
insl
dec
adc
pop
adc
adc
into
rcl
fwait
lret
mov
jle
mov
int3
mov
testl
cmpsb
jne
jge
xchg
xchg
push
mov
inc
fs
ret
pop
xorb
clc
push
sarb
adc
sub
xchg
push
icebp
rol
mov
dec
adc
adc
adc
cmp
icebp
mov
and
daa
repz
xlat
mov
mov
scas
push
iret
lea
cmpsb
nop
hlt
push
mov
pop
pop
shr
mov
mov
enter
mov
xlat
push
xor
adc
rcrb
adc
cld
adc
es
aas
cmpb
xchg
cmpb
inc
mov
or
inc
gs
sbb
mov
fldenv
cmp
in
out
test
out
jg
in
xchg
pushf
mov
or
dec
inc
stc
nop
inc
nop
cld
mov
push
fsubl
lret
sbb
imul
pop
add
test
and
jae
lds
test
mov
gs
mov
push
push
incl
sub
pop
stos
sbb
jecxz
xchg
js
outsb
adc
fdivrl
jb
mov
mov
inc
cmp
mov
sub
push
mov
out
shll
mov
sbb
insb
aam
stos
inc
pusha
mov
outsb
int
ffree
leave
out
push
lds
icebp
repz
test
outsl
and
add
jge
movsb
mov
jl
or
xlat
daa
push
cmp
shll
test
pushf
jnp
push
scas
adc
xor
mov
rcr
xchg
clc
loop
cmp
dec
inc
mov
mov
pop
ljmp
cmp
pop
dec
fbstp
scas
out
cmp
sbb
dec
push
clc
insl
mov
and
das
shlb
sub
mov
mov
adc
lahf
bound
and
popf
cmp
sub
mov
add
and
pop
lret
pop
mov
push
mov
push
cmc
or
ss
leave
icebp
bound
mov
aas
dec
pushf
pop
cli
mov
mov
and
cmpsl
imul
inc
call
xor
pop
adc
mov
fldl
xchg
insl
ror
movsl
scas
jnp
push
or
daa
repz
xchg
rorl
or
mov
xchg
mov
imul
sub
enter
fisubs
add
sarb
dec
sub
mov
cli
sbb
test
inc
push
inc
xor
cmp
into
out
push
in
jl
sbb
int
sbb
or
add
fcomps
lea
movsl
sbb
enter
mov
push
pop
jne
jecxz
xchg
gs
mov
cmp
fstpt
add
push
lahf
iret
cmp
sub
jmp
add
fcomps
mov
xchg
scas
jmp
push
insl
movb
mov
mov
or
sub
mov
sub
jmp
sbb
insl
imull
sub
jmp
mov
adc
pop
adc
adc
outsl
mov
push
aas
out
mov
jbe
fnstcw
mov
lahf
inc
xor
cli
jne
cmp
mov
enter
sarb
dec
dec
test
fwait
lock
nop
jo
mov
jmp
addl
sub
aad
ljmp
add
in
and
adc
mov
xchg
fmull
dec
in
nop
fwait
mov
adc
cmc
mov
cmpsl
inc
fistps
mov
add
xchg
and
cmp
lret
cmpsl
pop
ss
cs
cmp
fisttps
cmpsb
outsb
mov
pop
jp
repz
cmp
dec
nop
push
jecxz
lret
mov
fistpll
lds
xchg
outsl
pop
es
sub
and
pop
in
pop
subb
je
das
cmpl
cmp
sbb
cmc
jl
repz
out
pop
daa
dec
jp
repnz
sub
jg,pt
sub
popf
fisubs
fmuls
inc
hlt
in
cmc
test
mov
std
movsb
mov
xchg
mov
test
cmpsl
inc
pop
pop
lods
dec
xlat
ds
in
and
pushf
insl
imul
mov
pop
out
cmc
ljmp
mov
cmp
lret
mov
inc
les
and
push
or
aaa
xor
mov
mov
adc
shrb
and
mov
test
lock
sub
into
cs
outsl
mov
inc
jb
add
dec
repnz
stos
imul
sub
cmp
outsl
cli
mov
ret
scas
dec
dec
push
stos
add
stos
ret
adc
bound
add
popa
mov
dec
mov
mov
pushf
mov
cld
dec
fidivrs
jae
sub
inc
mov
test
fstp
inc
data16
inc
mov
jae
das
dec
fs
adc
pop
pushf
bound
insb
jg
mov
add
xchg
adc
jns
dec
out
addl
jmp
arpl
pop
adc
push
inc
data16
ret
mov
mov
mov
int
insb
insb
pop
imul
mov
mov
cmp
pop
push
xor
mov
mov
sub
inc
sub
sub
orb
je
aaa
leave
test
or
in
xchg
add
in
dec
pop
dec
outsb
inc
adc
pop
aam
and
nop
jb
frstor
or
in
xor
js
cmc
pushf
mov
adc
cmp
std
pusha
jle
mov
sahf
mov
jne
out
test
shrb
or
lea
pop
out
lods
sarl
cmc
cmpsl
sub
push
or
jb
es
or
jg
push
sbb
mov
test
xor
rorb
rorl
out
lods
xor
jl
sbb
dec
adc
lcall
or
pop
mov
std
push
in
push
or
cld
lods
hlt
mov
ret
cmp
int3
std
mov
or
rorb
leave
cltd
idiv
movzbl
jmp
rclb
dec
push
add
mov
lcall
adc
adc
test
inc
outsb
xchg
mov
xor
sti
jnp
movl
pop
fdivp
and
fwait
sbb
mov
test
shl
leave
inc
es
adc
out
sahf
aam
adc
xor
and
jbe
pop
jae
lret
movsl
mov
dec
shr
fdivs
test
adc
in
outsl
lds
mov
dec
push
das
jo
cmpsb
inc
arpl
cmp
scas
inc
and
pop
jne
and
push
or
xor
sahf
jbe
hlt
int
cmp
hlt
xchg
lcall
jb
pushf
cmpsl
rcrl
pop
pop
sub
mov
shlb
js
in
pop
jo
mov
shlb
and
and
inc
ja
lea
fdivl
dec
movsl
push
out
lcall
scas
add
mov
daa
push
cs
sbbl
or
xor
je
jecxz
ljmp
pop
add
adc
bound
movsl
clc
push
or
inc
xor
cmp
aaa
int
push
pop
arpl
adc
dec
gs
cmp
adc
cltd
lock
fistl
xor
dec
inc
aad
mov
mov
jge
inc
mov
jno
sarb
pop
sbbl
push
push
ds
or
aas
xor
add
xor
cltd
cmp
pop
lcall
sub
xchg
and
int
mov
adc
mov
fucomp
fldcw
jns
lret
call
jg
das
mov
fidivrs
sbb
ret
mov
add
aad
push
jb
inc
stc
call
mov
mov
jp
nop
cmp
jns
test
xlat
xor
mov
clc
or
aaa
adcb
cld
inc
push
jle
imul
add
jae
ljmp
sub
cmpsl
push
dec
pop
mov
pop
xor
fcomps
push
lcall
out
pcmpgtw
lcall
notl
adc
lock
ds
outsl
popf
mov
xor
add
ljmp
roll
or
sti
pop
call
stc
cmpsb
les
loope
inc
jg
xchg
scas
lock
loop
cltd
es
clc
push
rorl
inc
sbb
and
clc
scas
cmp
push
cmp
and
shl
inc
daa
sbb
scas
jns
ret
fsub
dec
jmp
out
faddl
aas
add
gs
cs
movsl
push
lahf
pop
mov
sbb
inc
ss
test
mov
ljmp
test
in
push
and
lods
jp
pop
es
ret
mov
xor
dec
clc
jle
pushf
fistpll
cmc
jne
pop
lret
std
pop
lea
jno
inc
popa
xor
out
adc
arpl
and
sbb
pusha
push
and
data16
loope
xor
insl
lods
pop
test
add
mov
mov
lret
pop
mov
sub
xor
and
rorl
and
add
inc
and
iret
movb
movb
movb
mov
mov
jmp
iret
xchg
mov
dec
daa
mov
pop
mov
mov
inc
cmp
adc
adc
mov
sbb
mov
xor
roll
testb
cwtl
aas
shrb
pusha
jne
sub
adc
lods
fyl2x
int
inc
lahf
and
push
xor
xor
add
addr16
jmp
jecxz
gs
test
push
test
outsb
mov
call
int
test
pushf
push
popa
pop
add
or
insl
std
jp
scas
sti
nop
movsl
das
push
test
pop
shlb
pop
xchg
stos
iret
and
pop
or
sub
adc
icebp
fnstcw
mov
cli
xchg
sbb
push
sub
push
arpl
shlb
aas
cwtl
aaa
aas
lcall
outsl
test
mov
sbb
jp
cmp
loop
inc
jmp
inc
dec
clc
mov
pop
mov
or
inc
stc
add
roll
sahf
push
sahf
out
fisttps
mov
testl
mov
les
push
inc
xor
dec
enter
rcr
push
mov
sub
rorl
femms
cmpsl
and
sub
pop
push
out
pop
movsl
jb
inc
mov
jbe
fs
lret
mov
sbb
mov
dec
stos
and
gs
pop
pushl
inc
outsl
pop
out
stc
mov
fs
stos
sbb
int3
lock
xchg
dec
mov
cmpsl
inc
and
test
jns
inc
cvtdq2ps
ret
sbb
xchg
ja
in
add
sub
mov
jg
mov
dec
mov
xchg
push
int3
insl
sub
test
cmc
ja
xchg
arpl
dec
filds
lret
out
pop
sbb
out
or
xchg
ret
pop
nop
sbb
gs
dec
out
out
adc
mov
fidivs
push
lods
xor
push
sub
add
and
push
mov
out
sub
popf
sub
outsl
int3
hlt
test
pop
push
mov
enter
stos
jae
popl
xor
lret
mov
mov
out
sbb
mov
lret
leave
test
mov
sbb
mov
xchg
mov
mov
mov
adc
mov
jne
popa
outsb
jp
popf
push
adc
inc
neg
outsl
mov
push
jmp
sub
adc
ljmp
gs
hlt
aas
ja
loopne
push
mov
lock
pop
js
cs
pop
rcrb
arpl
loopne
mov
insb
ret
jmp
or
lretw
stc
push
cmc
mov
push
int3
negb
jmp
sbbb
mov
xor
scas
sbb
pop
test
dec
push
sub
mov
mov
mov
dec
dec
jo
cmp
lcall
sbb
mov
in
and
lret
dec
push
lea
pop
test
xchg
mov
inc
lock
shr
lods
cli
cwtl
dec
out
add
mov
mov
mov
adc
xchg
cmp
cmp
pop
enter
idivb
iret
shr
jg
inc
jae
dec
pop
dec
cmove
out
loop
lods
fildll
ljmp
rorl
rorl
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
jmp
and
mov
mov
dec
fidivrl
mov
adc
pop
adc
adc
lock
addl
add
or
jge
mov
jg
jb
pop
inc
push
xchg
iret
mov
insb
sbb
mov
jo
int3
mov
or
xchg
xchg
idivb
aaa
jp
in
into
jnp,pn
sbb
sbb
es
push
pop
mov
cmp
xchg
subb
push
jp
and
cmp
mov
add
ss
cmp
stos
pop
lock
xor
jecxz
dec
dec
test
push
sub
fcompl
sbb
es
testb
cmp
je
jecxz
dec
xor
std
and
fists
mov
icebp
fcoml
and
lahf
stos
cmc
ja
adcl
mov
ror
push
pop
fmulp
xor
cmp
popa
mov
in
cltd
pop
lds
hlt
mov
push
adc
inc
jb
mov
or
out
sahf
cmpsb
or
cmp
sbb
push
stos
sub
xchg
jae
repnz
dec
lret
ficoms
out
or
and
adc
and
icebp
repz
xchg
sahf
xor
into
fnstsw
inc
pop
pop
cmpsb
xchg
adcl
ljmp
mov
int3
lret
fisubl
nop
mov
xlat
pop
dec
mov
jecxz
mov
mov
push
xchg
in
cmc
pop
xor
dec
mov
mov
cwtl
xor
pop
push
ret
mov
rorb
popa
lret
decl
jmp
stos
fisubrl
idivb
or
lods
or
dec
sar
cwtl
es
imul
push
daa
addr16
ret
or
loope
push
aaa
rcr
add
sbb
pop
mov
pop
jmp
dec
outsl
push
cld
fwait
add
loop
sarl
cmovge
fcompl
jmp
js
xor
jns
std
pushl
sbb
aam
push
mov
stc
mov
push
arpl
sbb
mov
fwait
iret
xor
stc
adc
sti
ljmp
lret
sbb
jns
cmc
dec
scas
rolb
movsl
jl
dec
and
stc
icebp
ret
inc
fcmovu
dec
movsb
mov
dec
es
cmpsb
sbbl
mov
popf
sbb
mov
outsl
fs
adc
adc
add
or
pop
xchg
pop
fucom
sbb
push
rcrl
es
add
mov
push
jne
movsl
dec
in
aas
inc
movb
bnd
aad
fsubs
test
sub
sub
lods
push
stc
add
and
xchg
inc
pop
jle
scas
or
cmp
aam
push
sbb
pop
loope
inc
pushf
inc
cmpl
push
in
mov
lret
repz
jno
lahf
cmc
or
jae
lret
das
movl
pop
sub
xor
es
aaa
inc
cmpsb
lods
cltd
xchg
rcrl
or
sbb
hlt
lods
inc
or
les
setne
int
mov
popf
or
shr
fucomp
inc
jg
or
jp
mov
ljmp
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
sbb
sbb
stos
int
stos
xor
jle
aad
adc
pop
adc
adc
xchg
das
cmpsl
f2xm1
jmp
pop
addr16
out
push
xchg
ud2
add
mov
sarl
testl
mov
adc
mov
push
inc
pop
push
mov
leave
in
xchg
mov
out
add
imul
popf
push
mov
repnz
scas
mov
gs
jp
sbb
mov
out
insl
cltd
and
leave
adc
inc
movsl
fisubrs
cmp
repnz
adc
xchg
jecxz
cmp
jnp
movsb
mov
test
xchg
ja
dec
popa
xlat
sbb
jns
into
and
addr16
scas
push
adc
xor
mov
mov
inc
lock
in
add
push
mov
or
insl
scas
mov
cmpsl
test
sub
dec
mov
ljmp
imul
mov
aad
arpl
push
mov
and
repz
mov
push
data16
pop
or
mov
jle
xor
cmpsl
je
cmp
in
mov
add
enter
and
sbb
push
adc
inc
inc
and
mov
cs
sub
pop
in
sub
dec
mov
xchg
mov
xor
push
hlt
lret
jl
iret
cltd
pop
jecxz
adc
mov
enter
cs
mov
or
lea
add
pop
jmp
cmp
jmp
add
sub
aaa
popa
mov
repnz
and
sbb
subb
int3
jo
gs
dec
fstl
pop
inc
xor
xlat
shlb
mov
fidivs
stos
sbb
aaa
repnz
cli
pop
ja
lds
fnstsw
xchg
cltd
repz
add
sbb
or
outsb
dec
sbb
clc
push
iret
popf
xor
out
mov
dec
fsubrs
dec
stc
inc
lods
loop
movsb
or
pop
cmp
add
hlt
shlb
lods
xchg
sub
fidivrl
adc
mov
push
or
xchg
pop
inc
test
cmp
call
inc
jg
neg
lods
jl
movsl
pusha
test
cmp
push
daa
scas
ret
rclb
call
test
aad
sbb
or
stc
aad
jbe
adc
enter
xchg
lret
mov
cmpsb
aaa
sarb
adc
cmp
push
pop
dec
hlt
push
arpl
mov
fstl
mov
rcrl
sbb
push
lcall
cmp
out
xor
or
mov
test
jne
jp
jecxz
sub
cli
push
ret
cmp
adc
bound
std
loop
aad
nop
lret
movsl
gs
int3
pop
and
push
sbb
dec
rcrl
sub
jno
aad
adc
and
add
pop
outsb
rdmsr
repz
xchg
jge
pop
mov
sub
das
ret
mov
enter
je
inc
into
pop
lea
xor
cli
fldcw
les
lret
dec
mov
inc
add
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
adc
jmp
jne
rcl
cmp
adc
scas
insb
mov
enter
adc
int3
movlps
push
enter
cmp
movsb
mov
or
adc
pushf
movsl
xor
icebp
jb
add
fnsave
cli
sbb
daa
scas
sbb
lea
movlps
pop
sbb
leave
dec
mov
sbb
push
dec
inc
ffreep
push
and
loop
std
cmp
xlat
cld
test
fmull
fstpl
adc
pop
sbb
popa
and
gs
movsl
lods
rcll
sbbl
pop
sbb
pop
loopne
pop
loop
add
cwtl
fcoml
shrb
dec
jbe
sub
mov
sbb
dec
fcompl
xor
jl
pop
cs
xor
fs
rclb
mov
es
cmc
jnp
jno
imul
scas
jb
pop
jp
aam
inc
adc
xchg
xor
pop
pop
data16
test
xchg
cmp
std
imul
mov
push
fsub
in
sub
push
mov
mov
xchg
pop
popa
inc
sub
cmc
jno
mov
xchg
jmp
stos
cli
mov
cmp
or
fimull
mov
lods
adc
jne
sbb
mov
insl
inc
test
into
imul
daa
lcall
mov
lods
sbb
dec
xchg
sbb
aaa
mov
add
mov
repnz
adc
pop
aad
outsb
pusha
fldenv
hlt
jae
aaa
stos
jae
stc
push
mov
in
rcrl
js
imul
addr16
sub
jb
push
pop
fmul
insb
clc
movsb
mov
lock
mov
loop
push
clc
mov
adc
insb
ljmp
cwtl
xor
dec
cs
xchg
fsubs
push
aad
mov
dec
jbe
pop
insb
aad
xchg
data16
sub
lods
jae
leave
push
js
lds
sub
add
out
add
jle
and
add
imul
adc
jmp
jb
dec
adc
jb
jmp
js
and
adc
jns
jns
scas
jae
sub
ret
push
push
rorl
pop
fiaddl
mov
aas
add
roll
sub
add
sub
and
test
jne
mov
shrb
xlat
add
cwtl
pop
jnp
std
jb
mov
enter
push
sbb
pushf
dec
aas
push
jb
cwtl
sub
pop
pop
adc
imul
stc
mov
aam
xor
xlat
xchg
pop
inc
les
sbb
inc
xchg
lea
in
mov
sub
aaa
lods
push
enter
adc
pop
pop
je
jmp
std
orl
and
and
xchg
rclb
std
iret
cmpsb
cmpsb
dec
jb
fs
sub
xor
sub
sub
jmp
inc
adc
rcl
and
lahf
sub
or
shll
rorb
adc
jo
add
fistpll
sbb
ds
mov
mov
mov
xchg
movsb
out
sbb
inc
jno
inc
scas
cmpsb
cmp
outsb
aaa
divl
or
pop
out
push
cld
sbb
test
gs
in
imul
cmovno
lret
xchg
es
sar
out
push
adc
int
adc
in
into
sbb
scas
mov
xor
insl
push
jns
inc
int
inc
in
jne
xorb
cmp
icebp
mov
out
dec
jb
sub
stos
les
adc
xlat
nop
js
scas
fwait
test
jnp
cmp
adc
popf
and
icebp
out
adc
outsl
inc
inc
jp
jns
lods
ror
test
jbe
push
sub
push
jbe
push
cmp
cmp
cmp
addr16
push
cmp
fnstenv
fcmovne
fistps
xchg
add
sub
cmp
jnp
call
sub
add
and
ljmp
lock
inc
jns
push
cmpl
movl
not
movl
mov
jmp
mov
jb
pushl
pushl
call
or
xor
or
sub
mov
mov
sbb
sbbl
andl
push
mov
sub
movl
movl
movl
jmp
mov
pop
test
sbb
in
mov
adc
int3
movlps
cmp
int3
in
cmpsl
outsl
push
cmovne
cmp
fcomip
into
sub
push
out
adc
cmpsb
mov
lret
push
dec
das
daa
push
ds
cmp
repnz
cld
mov
adc
dec
jecxz
negb
mov
ja
ljmp
repnz
jo
cltd
and
mov
cmpsb
pop
out
test
pop
and
bound
div
aas
mov
adc
into
shll
jns
out
mov
dec
fisubl
dec
xor
push
test
cmp
sub
cmc
inc
daa
inc
sbb
add
adc
adc
lcall
xor
or
jl
repnz
nop
cmp
mov
ljmp
jo
mov
aas
je
es
jmp
frstor
outsl
lods
jbe
cmp
sbb
sti
adc
jne
inc
int3
add
pop
lds
bswap
pop
cmpsb
dec
cmp
pop
lods
push
push
push
aaa
dec
jg
push
sbb
inc
test
mov
cltd
mov
mov
jbe
mov
push
lea
fsub
inc
lcall
out
pop
jmp
aad
bound
inc
popf
in
mov
adc
outsl
inc
push
jle
aad
jp
sub
push
mov
cmp
or
or
add
leave
inc
lds
mov
jp
clc
rorb
pusha
dec
adc
mov
push
dec
pop
incl
pop
loopne
or
mov
incb
pop
in
mov
pusha
in
call
aas
cmp
xchg
mov
adc
add
mov
cltd
add
sub
push
bound
jo
push
into
inc
and
arpl
inc
add
mov
mov
push
dec
push
pop
inc
mov
cmp
dec
push
fldcw
testl
mov
cmp
jl
outsb
mov
cltd
dec
shll
enter
mov
popf
popf
lods
sarb
movsb
or
bound
cmp
aad
jecxz
sub
lea
mov
movl
xor
subl
div
adc
imul
cmpl
mov
movl
mov
jmp
movl
jne
push
pushl
push
call
adc
adc
mov
add
mov
or
xor
sbb
movzbl
xor
mov
subl
xor
add
and
mov
movl
xor
xorl
div
sub
xor
mov
cmpl
movl
mov
jmp
movl
movl
jae
push
pushl
push
call
orl
movzwl
adc
dec
and
cmpl
mov
mov
jmp
mov
mov
jg
push
pushl
call
sbb
and
addl
adcl
adc
movzbl
sbb
mov
mov
or
jmp
bound
adc
popa
add
lcall
sbb
adc
loope
xor
mov
lea
mov
mulb
mov
test
ss
imul
push
inc
jle
lret
out
xor
pop
push
pop
int
leave
rcrl
mov
sbb
ret
or
leave
stos
cmp
dec
jb
inc
mov
gs
or
or
ss
es
and
std
sar
ds
pop
mov
shrl
and
js
pop
stos
inc
mov
pop
inc
and
pop
add
inc
push
fisubrs
xchg
popl
pop
cltd
or
loopne
popa
mov
add
push
sub
and
mov
mov
xchg
and
sbb
addr16
pop
push
ds
lds
icebp
adc
add
mov
roll
jb
mov
das
roll
daa
jae
daa
orb
ljmp
jo
dec
xlat
dec
mov
ja
mov
daa
leave
cmp
pop
daa
lods
jle
ds
in
and
inc
xchg
mov
xor
rep
cmpsl
fdivrs
mov
aam
mov
shlb
mov
stos
rcr
cmp
jle
and
cmp
movsl
jmp
pop
add
jecxz
inc
mov
inc
and
lret
mov
mov
push
mov
movsl
out
xor
loop
xchg
and
int3
dec
cmp
shll
sub
pop
sbb
adc
cld
insl
aad
mov
add
test
push
sbb
jns
adcb
sub
insb
test
roll
jne
push
decl
int
dec
mov
sub
push
rol
adc
aaa
cmc
in
mov
leave
imul
mov
aaa
sahf
pop
adc
jl
fscale
jo
or
xor
int
lahf
popf
mov
shlb
jp
nop
xor
mov
mov
stos
in
ret
ficoml
lods
or
or
xchg
jb
popl
inc
lcall
mov
movl
movl
addl
jmp
pop
repz
cmp
pop
data16
fidivrs
int3
movlps
test
adc
mov
add
xor
xlat
xor
repnz
jg
xor
out
das
sahf
xor
inc
lahf
das
sarb
ss
xor
sbb
or
pop
les
inc
test
push
push
pop
pop
outsb
pop
popa
ret
xor
sub
mov
sahf
inc
aam
cli
fisttpll
outsl
and
mov
test
pop
outsl
jl
daa
inc
sbbl
push
aaa
in
out
stc
mov
cltd
in
ljmp
mov
repnz
imul
je
shll
popa
ja
pop
shrb
or
inc
adcb
stos
fwait
pop
jmp
lcall
push
repnz
cli
inc
insl
or
lret
and
sbb
dec
mov
xlat
inc
cmpsl
loopne
enter
inc
inc
add
xor
subb
popf
dec
mov
shlb
rdmsr
arpl
loopne
imull
aas
sbb
mov
shrl
ret
cwtl
jae
lcall
add
daa
dec
xchg
aaa
xor
mov
push
into
les
sub
hlt
mov
xor
fwait
nop
push
and
xchg
xchg
out
fldcw
push
inc
lahf
testl
cmp
mov
mov
mov
jae
cwtl
cmpb
aas
lock
jle
xchg
arpl
inc
jbe
mov
xor
shll
pop
cmp
movsb
jp
add
adc
loope
mov
cltd
sub
lods
movsb
xchg
lcall
pop
or
test
cmp
leave
mov
xchg
mov
fistps
fnstcw
out
imul
jae
in
mov
jp
sbb
lods
dec
dec
and
dec
jg
add
push
cmp
outsb
das
icebp
sbb
or
mov
pop
cmp
inc
pop
mov
dec
dec
or
or
jb
jle
jle
add
cli
gs
test
incl
add
xorl
mov
add
xor
or
xor
imul
cmpl
movl
movl
jmp
mov
jl
push
push
pushl
call
not
movzwl
adc
add
sub
xor
mov
xor
add
sub
and
mov
xor
and
sub
mov
mov
mov
sub
add
movl
orl
movl
movl
cmpl
movl
movl
jmp
mov
je
push
push
call
and
addl
orl
xor
add
or
mov
mov
xor
xor
sub
or
movl
and
mov
cmpl
mov
mov
mov
jmp
movl
movl
jb
pushl
push
pushl
pushl
call
neg
xor
sbb
or
neg
subl
imul
mov
imul
imul
mov
adc
mov
adcl
and
or
xorl
mov
xor
mov
add
mov
mov
addl
lea
cmpl
mov
movl
movl
jmp
movl
jae
push
call
notl
or
addl
movzwl
sbb
mov
sub
xorl
neg
inc
mov
cmpl
movl
movl
mov
jmp
mov
mov
jbe
push
push
push
call
and
andl
sbb
neg
movl
movl
cmpl
mov
movl
mov
jmp
movl
jge
push
pushl
pushl
pushl
pushl
push
push
call
neg
or
movzwl
and
mov
movl
xorl
xor
and
movl
mov
xor
jmp
int3
cs
lahf
push
pop
leave
sbb
xchg
inc
stos
mov
adc
adc
fstps
push
mov
mov
push
nop
divl
xchg
cmp
stc
nop
jmp
xor
shrl
xchg
fistl
sahf
jb
cmp
imul
rclb
scas
or
rcl
test
cs
es
out
andl
stc
or
loope
cmc
pop
xchg
adc
inc
sub
stos
push
ds
pop
sbbb
or
icebp
adc
cld
mov
enter
inc
out
orl
adc
cmp
adc
add
rcl
xchg
sbb
fstl
xchg
fisubrs
adc
shl
movsb
repz
xor
adc
pop
fistpl
cltd
sbb
mov
inc
and
andb
test
mov
les
mov
push
daa
sub
or
fs
scas
enter
and
inc
scas
dec
dec
dec
pop
idivl
add
jo
mov
imul
outsb
or
lds
or
cmpsb
sub
nop
push
int3
js
cmpsl
dec
iret
sbb
mov
add
ja
nop
arpl
sbbb
bound
sti
mov
inc
sub
jo
xchg
cmp
cmp
push
add
xor
or
ljmp
jge
out
jl
in
mov
sbb
dec
pop
outsb
push
js
jae,pn
mov
lds
jns
loopne
enter
dec
cmp
iret
jp
divl
call
adcl
lcall
not
jp
js
clc
xchg
push
pop
cmpl
negl
adc
xor
insl
jae
mov
cld
and
insb
lahf
sbbb
sub
dec
outsl
push
or
dec
icebp
andb
or
outsl
test
push
add
mov
inc
add
roll
in
incl
add
inc
add
rorl
or
sbb
add
movl
xor
mov
xor
movl
sub
movl
movl
sub
mov
movzbl
and
add
or
mov
sbbl
sub
cmpl
mov
mov
jmp
mov
je
push
pushl
pushl
push
call
xorl
sbb
mov
adc
mov
add
adc
mov
lea
add
or
cmpl
movl
not
movl
jmp
movl
movl
jge
push
call
adcl
orl
xor
or
or
add
subl
inc
xor
xor
sub
sbb
sub
xor
xor
and
mov
mov
andl
movl
xor
movl
incl
mov
inc
add
cmpl
mov
movl
mov
mov
jmp
movl
mov
jb
push
pushl
push
pushl
push
call
mov
adc
mov
negl
andl
movzwl
xor
mov
adc
imul
jmp
aas
mov
cmp
add
stos
sbb
adc
adc
loopne
and
cmc
fs
lcall
lahf
sub
loop
push
ja
sbb
loopne
lock
push
xchg
and
in
sbb
cmp
div
daa
pop
mov
sbb
xchg
sub
test
jo
imul
xor
jo
cmp
inc
cmpsb
notl
and
cmp
sbb
sahf
jecxz
jo
mov
jae
fcoms
std
bound
cld
xchg
xchg
daa
push
sub
movsl
adcb
push
fimuls
sbb
push
in
inc
push
shll
add
inc
pop
iret
sub
idivl
and
jne
int3
ss
shl
sbb
sub
jle
add
xor
ret
pop
dec
sbb
push
inc
or
sub
cmpsl
daa
push
jae
mov
push
mov
jno
ret
xchg
idivb
push
jmp
rcrl
cmp
cmp
clc
in
lcall
jmp
pop
loopne
data16
shr
sub
xchg
negl
out
popf
gs
imul
ss
push
pop
add
xor
pushf
mov
fwait
xchg
hlt
hlt
into
push
lds
fcomps
jno
mov
sub
outsl
loopne
enter
lea
cmc
ret
mov
lcall
dec
fs
stos
out
divl
sub
mov
testb
daa
pop
idivl
push
jmp
xor
mov
mov
cmp
loopne
add
ret
das
imull
push
push
dec
push
stc
sahf
stos
loopne
sbb
enter
popf
pop
mov
insl
stc
jl
lret
aas
daa
es
cmp
arpl
xor
mov
and
mov
imul
adcl
xor
subl
mov
div
sub
mov
sbb
mov
cmpl
mov
mov
mov
jmp
movl
mov
jg
pushl
pushl
pushl
push
call
add
negl
sbbl
and
sub
xor
movl
movl
movl
sub
mov
mov
movl
xor
jmp
jbe
and
sub
mov
adc
movlps
and
xor
xor
jmp
mov
mov
inc
xchg
ds
cmp
jbe
cltd
cs
or
lret
cli
dec
push
sub
cwtl
ror
movsl
out
nop
lock
xchg
adcb
rcrb
sbb
ret
cli
jp
jl
das
sub
mov
mov
pop
bound
jnp
or
cmp
xchg
rorb
add
mov
adcl
xlat
in
jae
sbb
pop
bound
scas
adc
push
cli
push
fmulp
mov
dec
xor
ljmp
lret
push
je
cmp
or
movups
lock
xor
inc
dec
sub
sub
cmpsl
xchg
jae
movsl
sub
adc
pop
arpl
sti
insb
sahf
insl
xchg
ret
or
cmp
lret
cmp
inc
pop
jecxz
push
mov
adc
rol
add
scas
in
cmp
mov
and
cwtl
adc
enter
mov
cmpsl
push
into
bound
cmp
jns
aad
in
insl
jg
dec
sti
testb
cmp
adc
lea
test
fdivr
sbb
dec
js,pt
imul
mov
call
add
sub
test
adc
stos
add
movsl
sbb
fistps
push
jnp
xchg
sub
scas
lds
js
inc
add
add
mov
mov
bound
in
push
mull
or
inc
scas
push
xchg
dec
scas
rcr
jmp
test
pop
adc
push
sarl
cmc
test
push
xchg
inc
stos
pop
test
xor
add
xchg
jo
cmp
mov
mov
jge
xor
add
scas
icebp
or
cmp
sbb
cli
call
popa
sahf
lahf
mov
lret
dec
mov
mov
or
xor
inc
sbb
or
add
imul
add
add
sbbl
mov
xor
xor
xorl
mov
div
xor
cmpl
mov
mov
jmp
mov
mov
jl
push
push
push
push
call
sbb
adcl
movzbl
adc
mov
mov
xor
adcl
mov
inc
movl
sbbl
movl
adcl
movl
cmpl
mov
movzwl
jmp
movl
ja
push
push
call
sbb
and
neg
or
sub
adcl
and
mov
mov
orl
sub
shr
mov
xor
sub
mov
imul
cmpl
movl
movl
movl
jmp
mov
jne
push
pushl
call
sbbl
sbbl
sub
xorl
adcl
cmpl
movl
movl
movl
movl
jmp
movl
mov
jle
push
pushl
call
notl
xorl
sub
xorl
mov
adcl
and
mov
sbbl
sub
add
mov
movl
sbb
movl
mov
add
or
mov
or
sub
mov
or
mov
sbbl
movl
incl
movl
movl
movl
movl
and
movl
sbb
movl
sbb
movl
notl
mov
add
mov
sub
cmpl
movl
movl
jmp
movl
movl
jg
push
call
and
and
andl
xor
negl
and
or
orl
mov
imul
sbbl
imul
orl
mov
sbbl
or
andl
mov
lea
xorl
push
call
mov
orl
mov
or
imul
xor
xor
xor
mov
add
cmpl
mov
movl
mov
mov
jmp
movl
jb
push
call
addl
sub
sbbl
movzwl
adc
adc
movzbl
or
and
sub
jmp
xchg
out
lcall
mov
cmc
stos
outsl
push
cmpb
movlps
addr16
loopne
sub
fisttps
cmp
cmp
cmpsl
jb
mov
loope
shl
pop
xor
pop
pop
xchg
popa
jle
inc
jge
pop
cltd
dec
sbb
cli
out
outsl
daa
sub
cwtl
lock
ret
and
outsb
cwtl
add
test
xchg
mov
stos
xchg
cld
xchg
mov
movb
push
xchg
std
adc
ret
cmp
sbb
sub
add
sbb
cs
adc
mov
mov
jo
mov
in
xchg
lahf
clc
add
sbb
mov
push
mov
jg
cmpsl
dec
pop
mov
jnp
mov
lds
shll
jb
mov
ja
dec
scas
inc
mov
sbb
jbe
lcall
cmp
mov
mov
add
push
iret
adcb
pop
sbb
rcl
lds
out
push
dec
lods
jno
les
and
call
ljmp
push
sub
lds
cmpsl
mov
aad
sbb
xchg
pop
xchg
add
test
inc
jl
sbb
lock
add
mov
ljmp
test
xor
xchg
inc
mull
jg
adc
xor
cwtl
sbb
scas
pop
cmp
adc
dec
jecxz
add
fwait
test
aas
xchg
in
aaa
adc
les
inc
rol
jb
cmpsb
inc
scas
popa
loop
push
test
xchg
dec
idivl
mov
arpl
cmp
data16
xor
dec
and
shrl
rcrb
test
jg
js
shll
push
xor
jg
or
jmp
je
and
or
jnp
xchg
ret
sbb
push
jg
xchg
push
daa
cmp
sbb
bound
adc
sub
add
cmpl
mov
movl
movl
jmp
movl
movl
jb
pushl
push
call
xor
subl
movl
add
movzbl
adc
sub
adc
neg
xor
xor
mov
andl
div
xor
sub
add
mov
cmpl
mov
not
jmp
not
notl
jl
push
pushl
push
push
push
call
mov
add
mov
andl
add
subl
xorl
decl
movl
xor
movl
movl
cmpl
movl
movl
mov
jmp
mov
jae
push
call
or
adc
inc
adcl
or
adcl
adcl
movl
movl
xor
or
sbb
movl
movl
movl
movl
not
movl
movl
sbbl
movl
orl
mov
mov
add
mov
cmpl
movl
mov
movl
jmp
movl
movl
jl
pushl
push
push
call
or
or
sbbl
sbb
andl
and
xor
sub
sub
imul
cmpl
mov
mov
movl
mov
jmp
mov
movl
jle
pushl
call
sub
sbb
adc
sub
movzwl
sub
movl
mov
lea
cmpl
mov
movl
jmp
movl
mov
jbe
pushl
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
sub
mov
mov
mov
sub
sub
mov
and
mov
xor
add
mov
or
lea
cmpl
movl
mov
not
jmp
movl
jle
push
push
call
xor
adc
mov
mov
sub
and
xor
subl
and
sbb
mov
orl
sub
cmpl
movzwl
notl
jmp
movl
jg
pushl
push
pushl
pushl
call
subl
adcl
sbb
xor
add
add
adc
sbb
add
sbb
mov
movl
adc
movl
mov
sbb
mov
movl
neg
movl
mov
xor
mov
sbb
mov
subl
xor
addl
xor
andl
mov
andl
call
mov
cmpl
movl
mov
jmp
mov
jl
push
push
call
xor
or
or
mov
or
sub
notl
andl
mov
and
mov
mov
sbbl
mov
xor
movl
xor
andl
mov
xorl
call
addl
or
xorl
or
mov
adc
mov
adcl
xor
sbbl
xor
mov
orl
call
sub
mov
and
mov
mov
subl
mov
andl
jmp
aam
jle
cmp
xor
xchg
call
adc
cld
aad
mov
loope
add
test
ja
divb
pop
lea
jmp
xchg
jb
sub
ss
xor
jp
popw
adc
sub
pop
test
mov
es
das
jne
sarl
dec
push
sub
jl
sbb
mov
xchg
es
test
movsb
int3
fstl
dec
jbe
xchg
dec
in
and
pop
push
in
push
neg
rcll
sahf
jb
mov
or
lcall
cltd
stc
xor
sub
fcomps
loop
xchg
push
adc
aad
imul
xchg
pop
into
xchg
mov
push
adc
cmp
mov
aam
ret
test
sbb
mov
das
push
xchg
dec
pop
xlat
mov
mov
xchg
pop
subl
mov
mov
inc
mov
lret
dec
xchg
sbb
fsubl
dec
add
xchg
cwtl
mov
sub
inc
sub
push
mov
gs
cmp
sbb
shlb
inc
fstl
jb
push
xchg
lret
outsl
out
or
lret
test
scas
test
push
lret
sti
jl
push
in
stos
mov
inc
jno
rcrb
push
xchg
adc
cmc
xchg
xchg
add
push
test
inc
xchg
in
inc
jecxz
sub
cmp
jg
inc
arpl
jns
jle
mov
popf
or
stos
rolb
mov
cmp
fistps
dec
cld
fidivrl
stos
addr16
lcall
mov
icebp
stos
add
xor
jo
xchg
jb
scas
daa
mov
adc
adc
jne
xchg
and
xor
fstl
xchg
inc
js
clc
iret
sbb
add
out
mov
aad
scas
push
inc
pop
cmp
sub
mov
xor
xchg
push
inc
push
outsl
loope
mov
or
test
stc
push
lret
mov
lret
fmuls
in
incl
add
movb
ret
push
movb
orl
mov
addl
mov
call
mov
add
mov
mov
sbbl
or
sub
mov
movl
or
xorl
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
jmp
pop
dec
scas
jns
pop
sbb
stos
adc
pusha
js
sti
adc
adc
dec
fstp
or
xchg
insb
and
mov
lcall
adc
mov
sbb
mov
xchg
outsl
fstps
push
cmpsb
stos
lods
or
cld
cmc
leave
cli
push
mov
inc
addb
push
mov
lods
loopne
adc
shrb
pop
add
pop
addr16
pop
jl
push
sub
jl
lods
add
faddl
in
cmp
loop
cltd
test
adc
test
dec
sub
nop
push
xchg
sub
icebp
cmp
or
pop
mov
rorb
bound
dec
adc
rolb
rcrl
xchg
insl
add
sub
mov
push
push
jne
sub
aam
sub
mov
test
inc
xor
daa
push
jge
add
push
lret
loop
lods
std
xorl
rol
inc
jg
idivb
mov
xor
shrl
popa
jmp
add
mov
dec
mov
je
xor
xchg
fdivrs
adc
stos
stc
push
dec
cld
push
pusha
test
aaa
ret
cwtl
cmp
lea
fstps
mov
mov
jb
nop
out
notb
cld
stos
cmp
fnstcw
scas
icebp
loopne
int
cmp
frstor
outsb
inc
jb
xchg
sbb
jnp
mov
mov
cmp
xchg
mov
clc
movsl
pop
inc
int
lds
mov
stos
jge
aam
pop
push
inc
aad
pop
idivl
rclb
out
sub
jb
out
pop
sbb
lods
leave
js
in
add
std
adc
insl
pop
mov
mov
mov
jno
ds
test
outsb
aaa
shrb
jp
je
xchg
push
dec
iret
or
in
sbb
sahf
test
js
inc
aaa
iret
sarl
sub
and
scas
jmp
push
in
dec
add
or
mov
push
loope
sub
lds
xor
fcmovu
cmp
stos
dec
jne
xorl
pop
lret
sub
rclb
inc
inc
fucom
cmp
push
mov
decl
ret
add
add
add
js
and
stos
push
notl
adc
pop
sbb
sub
cmp
inc
mov
jb
pop
adc
rclb
cli
jne
add
out
pop
jae
push
mov
and
movsb
inc
add
int3
lret
sub
scas
int3
repnz
loope
pop
inc
outsb
adc
adc
dec
add
pop
or
push
or
pop
test
sub
movsl
adc
cmp
pop
push
movsb
pop
rcll
xor
pop
mov
push
stos
dec
xlat
fwait
inc
pop
mov
xchg
shll
ja
sub
mov
mov
gs
lahf
dec
das
dec
arpl
movsl
inc
insb
in
pop
pop
pop
mov
xchg
mov
adc
fs
pop
bound
mov
shlb
das
loop
push
or
xor
xor
jmp
sbb
pop
sbb
aam
stos
cmp
xor
sahf
xlat
cltd
dec
pop
xchg
aad
xor
xchg
scas
pop
dec
sbb
ret
iret
fistpl
or
test
dec
add
xchg
ja
popa
out
push
cltd
xchg
lahf
sub
movsb
mov
daa
rolb
adc
and
stos
mov
adc
add
and
sub
inc
stc
imul
popa
popl
aam
mov
pop
int3
negb
outsl
mov
rcll
daa
aad
xchg
nop
dec
jno
pop
pop
mov
repnz
jmp
daa
jns
and
and
fldcw
or
and
push
pop
pop
dec
xchg
add
subb
minps
pushl
lcall
inc
ds
adc
pop
icebp
pop
jg
test
out
test
out
iret
pop
daa
dec
insl
jne
mov
clc
push
leave
mov
xchg
jns
nop
sbb
pushf
xchg
addr16
movsl
pop
fimull
stc
arpl
jecxz
mov
outsl
repz
sbb
inc
sub
out
mov
test
nop
and
je
push
sbb
jns
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
jmp
ljmp
pop
inc
lea
mov
movlps
mov
dec
aaa
push
and
xchg
aam
std
imul
pop
les
mov
sub
xchg
inc
mov
lock
mov
loopne
xchg
mov
pusha
or
push
out
jno
or
imul
mov
mov
das
arpl
into
call
inc
xchg
sarb
sbb
xchg
push
inc
test
pop
std
jne
pushf
push
fimuls
cmp
lret
pop
shll
jle
pusha
test
and
pop
sbb
fs
mov
daa
lods
pop
mov
bound
pop
jb
adc
nop
cmpsl
cmp
push
cmpsl
lods
ret
dec
inc
addr16
mov
popa
xor
adc
push
inc
lods
cltd
test
aas
cli
and
mov
insb
push
sbb
pushf
push
lret
inc
lret
fstpl
jmp
add
sarb
clc
fstps
dec
xor
into
sub
lods
leave
lahf
mov
pop
aam
xorl
ds
dec
xchg
js
lcall
sub
mov
xor
push
inc
bound
loopne
cmp
lods
test
orl
sub
stos
lahf
inc
push
xchg
push
mov
mov
mov
jge
jo
cld
xchg
jns
int
in
je,pt
stos
das
xor
dec
repz
add
xor
push
movsb
jo
jb
testl
enter
push
in
aam
iret
mov
mov
repnz
xor
mov
sahf
scas
inc
dec
mov
push
or
sbb
fwait
push
push
imul
rcrb
add
push
push
call
dec
repz
mov
inc
or
loopne
jns
rcll
inc
fimuls
outsb
add
js
out
mov
push
ret
cmpsl
andl
daa
lcall
mov
cmp
sub
icebp
jo
xchg
sub
jecxz
ret
cmp
mov
subl
and
lcall
inc
add
add
pop
sbb
sbb
ss
cmp
js
call
adc
adc
mov
call
loope,pt
sbbb
pop
jbe
xchg
aaa
fwait
dec
lret
xchg
sub
inc
jecxz
mov
mov
icebp
je
nop
lods
testl
xor
or
push
in
push
adc
aad
mov
inc
dec
test
loope
pop
out
dec
divb
cmpb
lahf
push
scas
scas
xchg
push
pop
iretw
ss
inc
mov
adc
aaa
add
mov
adc
fdivrl
sub
loopne
mov
mov
mov
dec
cld
in
adc
je
mov
adc
mov
mov
mov
clc
out
jmp
dec
rclb
add
sbb
fdivs
mov
arpl
push
xchg
std
sub
int
mov
scas
call
pusha
ret
xchg
mov
cmp
lret
mov
mov
jecxz
xchg
fdivrl
mov
xchg
dec
dec
cmp
adc
xlat
jnp
dec
dec
jecxz
adc
inc
mov
inc
push
fisttps
fldcw
push
scas
xchg
shrb
adc
enter
daa
into
or
test
mov
mov
sub
adc
dec
cmpsb
icebp
shlb
icebp
rcl
iret
mov
das
sysenter
add
sahf
shr
jne
push
pop
or
jle
mov
repnz
pushf
sarb
loopne
lods
out
mov
xor
pop
inc
sub
and
aaa
jns
pop
les
or
inc
ret
int3
adc
adc
pushf
mov
xchg
mov
out
push
inc
ret
or
popa
bound
ret
xor
decl
sbb
mov
rorb
or
icebp
imul
sbb
push
mov
mov
fisttpll
add
loope
mov
bts
pop
push
leave
or
lcall
inc
cld
jno,pn
or
pop
xlat
gs
popf
les
and
imul
fidivs
cwtl
incl
mov
rorl
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
jmp
arpl
das
sub
sub
and
or
sub
movlps
push
jge
ljmp
aas
dec
out
mov
or
nop
pusha
fisttps
or
mov
push
pop
push
xchg
mov
xchg
xchg
shrl
cmp
cltd
das
push
ffree
sbb
hlt
ja
xchg
pop
shrl
mov
xchg
outsb
js
mov
mov
inc
xchg
adc
mov
pop
mov
mov
sbb
dec
lds
call
mov
xor
mov
ss
xchg
jg
outsl
stos
add
lock
std
rorl
pop
mov
cmc
cmp
inc
es
pop
or
jo
movsl
or
lods
adc
or
call
sbb
movsl
adc
std
xchg
test
std
add
jnp
loope
lret
add
adc
sub
pcmpgtw
int3
pop
cmp
imul
cmp
cld
pop
jg
je
das
aaa
je
xor
lret
adc
into
ljmp
jl
gs
loopne
lods
pop
sbb
mov
addr16
cltd
and
pop
lret
xchg
lahf
and
lds
mov
aas
andb
xchg
js
cli
aaa
out
pop
lods
mov
cmp
out
adc
sbb
adc
daa
xorl
addl
out
cmp
push
imul
decl
notb
pop
add
mov
mov
xchg
shll
aas
pop
int3
popf
stos
popf
int3
mov
addl
fidivl
xor
dec
orl
sbb
int3
fs
sub
ja
cld
jnp
mov
sti
enter
xlat
aaa
dec
inc
js
xchg
cmp
das
cmpsl
jb
test
mov
into
inc
iret
sbb
outsl
bnd
sub
arpl
mov
out
cmp
add
in
add
out
les
mov
sub
adc
call
xchg
cmp
cmp
or
shrb
fs
or
into
adc
cli
push
mov
mov
std
decl
jmp
xor
fisttpll
and
rcrb
insb
out
adc
adc
pop
sbb
sbb
xor
jge
cltd
pop
dec
out
rorb
in
xchg
call
fs
gs
and
inc
stc
dec
mov
lock
out
xchg
jne
xchg
ljmp
mov
sbb
add
shrb
xchg
pushf
push
inc
adc
js
push
lret
sbb
imul
pop
push
or
add
cmpsl
loope
shll
cmp
lret
popf
xor
clc
gs
inc
pop
pop
cmp
and
xor
cmp
int
fisttpl
or
jp
iret
movsl
stos
cli
les
jg
adc
jmp
outsb
mov
or
sbb
sbb
jle
dec
popf
icebp
cld
lcall
cs
inc
mov
imul
mov
aad
or
sbb
sarl
inc
mov
xchg
lea
in
icebp
sahf
sbb
cs
adc
fldenv
popl
andb
adc
push
lock
shl
xor
cmpsb
adc
leave
inc
dec
das
mov
mov
mov
push
push
jne
and
and
mov
decl
inc
data16
ret
push
in
mov
jl
cmp
iret
pop
call
in
pop
insl
iret
mov
jge
or
shl
adc
or
clc
mov
push
push
inc
jae
adc
xor
xor
xor
sahf
push
in
ljmp
repz
xchg
into
fwait
add
in
adcb
aas
mov
lret
in
cmpsb
mov
adc
dec
push
pop
aad
bound
and
sub
lcall
adc
sti
mov
pop
adc
dec
push
sub
dec
sub
stos
out
push
inc
ret
xchg
pop
adc
sbb
push
and
xchg
dec
mov
xor
jb
or
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
jmp
les
jp
pop
test
mov
out
adc
movlps
inc
or
sbb
sbb
jno
sbb
pop
cmp
jb
repnz
fisubrl
pop
hlt
mov
mov
pop
push
cs
aas
inc
sbb
xchg
pop
mov
lods
dec
mov
ret
mov
sbb
mov
jno
jge
imul
inc
fs
sub
cmpsb
out
in
test
inc
adc
push
sar
imul
push
inc
mov
xor
negb
test
mov
insl
insl
lods
mov
jnp
jecxz
jne
sti
xchg
sbb
imul
fsts
fwait
or
pop
jo
xor
pop
imul
cli
notl
sbb
mov
cld
cwtl
add
andb
mov
test
aaa
jg
cmp
insb
xchg
sbb
mov
in
inc
sub
or
ret
dec
pop
and
xchg
xor
call
in
push
jae
cmovb
and
push
sub
mov
cmp
aaa
insl
pop
lcall
lods
sbb
mov
outsl
cld
or
pushl
sbb
mov
popf
dec
xorl
ds
push
lahf
stos
out
clc
fstpt
imul
lods
add
cmpsl
sbbl
xchg
std
xchg
imul
cs
mov
jbe
lcall
cmp
repz
iret
push
test
and
fimuls
xlat
push
push
xchg
test
sahf
stos
outsb
pop
mov
jb
inc
test
mov
sub
mov
movsl
and
lahf
lret
and
inc
dec
in
cltd
test
xchg
mov
test
jmp
sub
and
mov
enter
insl
jg
lret
loop
fcmovnbe
jge
imul
rolb
pop
das
dec
lret
sub
mov
xchg
push
mov
push
out
cwtl
dec
add
inc
inc
add
cwtl
mov
add
mov
mov
xor
xor
mov
call
jmp
cmpsb
test
fistpll
and
outsb
push
xchg
js
loop
adc
movlps
addl
lahf
push
cmc
insl
inc
pop
mov
cmpsl
shl
lds
nop
xchg
pusha
adc
dec
mov
jae
andb
or
adc
out
pop
push
jns
lret
fsubrp
or
cmp
xorl
movb
jmp
insb
sub
dec
dec
sbb
jns
inc
or
lods
push
ret
pop
and
addr16
jp
scas
adc
mov
pop
rorl
repz
loopne
cmp
insb
sub
mov
shlb
fwait
bound
mov
stos
cmp
cmc
data16
jno
cmp
xor
movsl
jmp
mov
xor
repz
sub
pop
sbb
dec
aas
aaa
and
insb
mov
mov
adc
cmpl
pop
insl
cli
mov
add
jb
lret
sbb
dec
pop
in
clc
pop
pusha
sarl
inc
sti
loope
push
popf
stc
iret
mulb
jb
xchg
cmp
repz
xor
subb
jns
mov
out
push
lods
loopne
sub
aam
divb
sbb
in
pop
xor
sbb
lret
mov
lahf
ljmp
dec
cmp
inc
push
push
add
push
outsb
fwait
sub
mov
push
mov
adc
push
sbb
inc
movsl
jmp
dec
in
lods
pop
dec
adc
int
push
std
insl
cmc
scas
cmpsb
fdivs
js
nop
test
inc
cmp
std
sub
lock
movsb
mov
pop
cli
hlt
out
cmc
leave
mov
inc
sarl
sbb
cmpsl
jne
mov
pop
push
xchg
mov
jle
sbb
sbb
xchg
cltd
nop
test
aam
lret
shlb
sbb
test
inc
adc
jmp
mov
xchg
les
xor
test
and
in
cld
std
out
mov
in
mov
and
inc
test
cli
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
push
insl
mov
pop
mov
sti
jle
lea
ficoms
adc
cs
fdivp
sbb
testl
orb
ja
fstpl
jp
inc
loope
xor
or
stc
xlat
pop
enter
dec
fbstp
mov
ss
orl
js
mov
iret
std
rclb
addl
inc
push
stos
daa
xchg
sub
mov
cli
push
jnp
mov
out
add
repz
and
dec
in
mov
jmp
fnsave
in
push
imull
push
and
iret
mov
xlat
dec
movsb
push
push
into
cld
lahf
sbb
jno
inc
inc
jb
pushf
push
bound
test
cmpsb
cmp
mov
adc
push
js
dec
shll
xchg
gs
out
iret
mov
xor
pop
pop
push
subl
dec
fs
xlat
jnp
pmulhw
jmp
jmp
push
out
xor
test
stos
int3
xor
xchg
sbb
sbb
xor
sbb
jb
sub
lock
dec
ja
inc
icebp
jecxz
adc
daa
jno
subb
roll
jns
into
push
faddp
pop
or
jge
jbe
add
imul
je
xchg
in
inc
icebp
jmp
sbb
xchg
mov
pop
jecxz
fbld
mov
fstpt
push
aaa
das
call
or
outsl
sub
fdivs
mov
sub
xor
aam
int3
enter
inc
mov
jmp
add
push
mov
jo
cwtl
test
cmp
or
adc
add
adc
dec
mov
sub
jnp
dec
cmp
pop
pop
pop
jmp
sub
add
push
adc
adc
mov
subl
and
or
push
push
mov
push
lret
test
mov
cmc
dec
jge
cmc
cmc
jle
int3
or
jp
int
xor
push
shrb
das
nop
test
xchg
ja
mov
pop
mov
add
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
jmp
adcl
inc
cmp
cmp
push
ficoml
adc
int3
loope
or
sbb
inc
roll
pushf
or
inc
in
int3
bound
aaa
gs
je
fdivs
jl
js
int3
cld
adc
add
es
adc
jg,pn
mov
call
mov
cli
add
out
ja
nop
jo
xor
pop
ds
hlt
mov
dec
jno
pop
out
adcl
repz
cmp
pop
aam
popa
push
pop
fldl
cmp
stc
rclb
enter
pop
mov
dec
pop
xchg
cld
jnp
cltd
xchg
inc
and
jns
mov
cld
das
adc
mov
jmp
into
sbbb
xor
pop
scas
out
xor
out
ds
aaa
inc
jnp
int3
cld
mov
xor
in
xchg
and
mov
repnz
rcrl
fisttpl
les
aas
mov
mov
and
or
fsubrp
fcoms
xchg
ficomps
push
pop
xor
and
push
add
orb
sti
xor
sti
mov
mov
inc
xor
pop
mov
mov
faddl
and
and
mov
sbb
push
pop
pushf
mov
mov
dec
jne
or
push
pop
adc
je
jae
mov
dec
out
std
ret
cmp
mov
shlb
dec
outsb
daa
mov
and
popa
repnz
sbb
mov
ud1
aaa
sbb
jae
repz
cmc
ret
or
nop
pushf
aas
stos
icebp
ja
or
and
stos
push
xlat
lret
fbld
test
push
enter
pop
dec
les
xchg
jle
scas
popf
or
and
popa
int
mov
sbb
jo
scas
lahf
mov
lods
adc
hlt
and
mov
mov
sarl
sub
cmp
jno
pop
inc
repnz
xchg
push
leave
orl
iret
lldt
ljmp
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
jmp
stos
in
inc
cwtl
inc
sbb
fidivs
sub
jge
adc
adc
inc
call
cmp
xlat
test
adc
adc
cld
lea
ds
xor
outsb
subb
jp
sub
mov
cmp
rolb
icebp
or
paddusw
test
xlat
and
cli
mov
into
cmc
push
add
frstor
pop
and
add
sbb
pop
jle
push
dec
int
mov
fistpll
das
cmp
aaa
movsb
xchg
mov
sbb
outsl
decb
mov
out
mov
xor
divb
mov
lahf
push
aam
xchg
cs
mov
fs
sahf
cmp
xor
cmp
les
pop
jbe
lahf
fwait
fwait
lahf
mov
in
pop
fisttpll
xchg
out
cld
jl
stos
mov
cltd
mov
sub
adc
push
movsl
xchg
rclb
inc
jg
stc
push
ljmp
inc
dec
rcll
dec
mov
fpatan
sbb
jle
jmp
sbb
add
aam
xchg
sti
sbbl
fdivrs
rolb
into
stos
pop
jbe
aas
and
jae
xchg
test
fsubrs
adc
xchg
dec
stc
lret
xor
adc
pop
xor
mov
pusha
jno
or
xchg
cmp
xor
loop
out
fnstenv
lods
out
cmpsb
jns
xchg
cmp
xorl
mov
jno
fsts
push
gs
orl
loop
dec
aad
inc
loope
xchg
and
mulb
out
mov
bound
push
or
cmp
mov
mov
mov
xlat
mov
xor
or
out
ds
sbb
push
sbb
mov
pushf
inc
push
sub
test
xchg
add
jne
mov
mov
inc
mov
sub
sarl
mov
into
jo
sbb
add
enter
jge
add
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
jmp
enter
cmp
jp
aas
inc
stos
jg
xor
int3
movlps
cmpsl
push
cwtl
sbb
add
test
push
xchg
or
and
mov
repz
aas
test
mov
sbb
dec
repz
adc
xchg
scas
mov
cmpsl
and
cmc
mov
popa
mov
in
test
lea
cld
push
mov
sub
insb
jge
or
loopne
aaa
mov
loop
inc
lock
pop
and
jmp
das
in
mov
mov
movsl
std
fistl
shlb
cld
adc
ficoms
mov
movd
fucomi
xor
cmp
mov
adc
sub
or
mov
stc
fnstcw
jmp
icebp
mov
xor
pop
mov
popa
iret
jnp
jmp
aad
loop
pop
cli
dec
sub
jmp
adc
xor
cli
cmp
inc
xchg
xchg
cmpb
lock
adc
es
inc
mov
cmp
cltd
xchg
fnsave
mov
jo
arpl
leave
push
insl
xor
push
or
out
lcall
pop
push
sub
rclb
sub
clc
shl
dec
mov
divb
mov
fnsave
lock
pop
xor
andb
test
fwait
popw
inc
lods
dec
addr16
pop
cmp
aas
xor
inc
xchg
inc
dec
clc
in
mov
push
xor
xor
adc
shlb
xor
imul
fisttps
push
js
jo
xorl
mov
jb
push
xor
jecxz
ljmp
and
adc
popa
mov
xchg
adc
jl
in
sub
mov
adc
jnp
cmc
xchg
mov
pop
xchg
int
inc
pop
xor
test
clc
scas
push
ret
icebp
pop
push
or
pushf
mov
inc
mov
xor
es
insb
xor
or
inc
pop
add
inc
iret
out
lods
icebp
add
leave
ficompl
sbb
out
lds
mov
push
les
add
decl
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
jmp
xchg
sbb
les
ficoms
js
enter
movlps
xchg
mov
loope
jbe
ljmp
mov
push
sbbl
fstps
std
outsb
sahf
test
pop
loope
fidivs
adc
jno
fcomi
ljmp
daa
loop
mov
push
mov
loop
inc
mov
pop
jnp
outsb
xor
clc
and
stc
ljmp
dec
push
jb
je
popf
push
xchg
push
inc
xchg
scas
decb
sbb
call
or
insb
push
add
and
enter
cmpsb
mul
in
fmull
jge
cmp
lret
sbb
or
jle
gs
sahf
jns
and
ljmp
inc
movsb
mov
cli
loop
nop
adc
out
and
cmp
and
adc
cmpsb
push
mov
and
rolb
stc
lret
sub
into
adc
cmp
stos
popl
cmc
in
loopne
test
cmp
mov
mov
test
jnp
jo
iret
inc
popf
mov
sahf
push
add
je
inc
or
lahf
ja
and
jae
stos
out
pop
lds
mov
lods
sbb
sbb
jnp
inc
addb
mov
jb
out
xchg
clc
out
adc
pop
test
fbstp
adc
dec
fs
clc
cwtl
shll
push
loopne
mov
xchg
fcomps
stc
xor
daa
add
mov
push
jbe
mov
mov
add
das
addr16
and
ljmp
not
shrb
stc
clc
push
jecxz
pusha
fmuls
or
inc
mov
mov
aam
popa
insb
sub
or
pop
sbb
pop
adc
scas
mov
jge
loopne
pop
xchg
xchg
ret
xor
cld
jbe
or
jl
cmp
hlt
fwait
and
xchg
pop
jbe
mov
scas
jo
jge
add
popa
inc
gs
sbb
test
lret
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
jmp
xor
inc
popa
inc
and
sub
adc
les
adc
or
je
xchg
xor
rol
or
lock
fbld
push
stos
ss
les
cli
and
pushf
ffreep
add
mov
popf
out
mov
mov
cmpsb
jo
daa
xchg
aam
stos
fidivrs
shrb
lds
xchg
aam
insl
jecxz
subl
std
mov
pop
pop
jge
mov
test
mov
push
ja
pop
adc
mov
inc
insb
inc
pop
sbb
aas
xor
and
or
addl
push
sub
fsub
add
lcall
mov
jbe
mov
in
insl
call
int3
and
insb
std
jmp
xchg
sub
out
popf
adc
jg
push
mov
pop
mov
inc
cmp
scas
iret
popa
hlt
pusha
and
inc
jl
rcll
pop
and
loope
push
xorl
cmpsb
arpl
inc
push
xor
push
and
test
xchg
xor
jle
jp
mov
rcl
shrl
stos
push
xor
push
rclb
in
xor
xor
push
test
dec
rorb
mov
subb
fwait
addb
cli
sbb
ret
nop
dec
dec
loope
shrb
loope
jecxz
das
and
push
add
sub
inc
add
and
xchg
pop
add
mov
popa
test
sub
insl
dec
test
jne
shr
imulb
sahf
pop
std
inc
hlt
dec
mov
sub
push
loop
lahf
dec
push
cld
mov
loopne
enter
int3
aad
push
inc
jecxz
xor
mov
ja
aaa
cmp
fwait
xor
test
add
test
sbb
arpl
ss
sar
xor
or
sub
pop
shlb
push
push
pop
cmp
xchg
push
cmpsb
cmp
adc
imul
pushf
stos
pop
es
pmuludq
sbb
daa
scas
sbb
mull
test
xorb
icebp
lods
and
cld
incl
add
jmp
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
sub
mov
and
cwtl
cmp
rclb
or
out
sub
push
pop
inc
jge
jp
xorl
pop
sbb
test
popa
je
icebp
push
cmc
fstps
dec
in
cmp
xchg
pop
aam
pop
mov
out
jne
dec
mov
les
sub
sub
add
rcl
shll
mov
xor
mov
jle
add
add
add
inc
mov
in
ljmp
aas
mov
push
mov
lea
jb
sub
frstor
enter
push
sub
ret
dec
insl
fldcw
rcrb
not
xchg
stos
push
sub
mov
mov
hlt
xor
mov
push
jb
push
pop
or
mov
sbb
jl
ljmp
or
mov
jb
mov
es
pop
mov
fistl
jne
xor
xlat
pop
push
dec
inc
jge
pop
inc
pop
dec
ljmp
mov
xor
outsb
out
sarb
call
lret
shlb
inc
xchg
cld
scas
notb
jns
fcoml
push
jg
xchg
xor
mov
imull
dec
xorl
xor
movaps
mov
xlat
jo
xchg
xchg
lcall
cmp
add
sbb
sbb
push
xor
or
push
pop
add
fisubl
test
lcall
lods
popa
lods
ss
shlb
out
jecxz
xor
push
cmp
pop
arpl
xchg
rcl
dec
cltd
inc
mov
loopne
outsb
jo
data16
mov
scas
sbb
mov
mov
or
lods
xor
dec
icebp
mov
daa
lret
cltd
mov
inc
out
test
hlt
pop
jge
sub
jge
data16
sub
adc
orl
cmp
les
jno
or
lahf
cltd
in
or
fwait
sbb
inc
outsb
sub
int
loop
gs
sbb
jle
loope
pop
ja
xchg
fidivl
inc
cmp
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
jmp
out
imul
cwtl
out
stos
push
mov
adc
pop
dec
xchg
sbb
xor
add
push
mov
jmp
out
push
jp
ljmp
add
mov
ret
or
dec
push
xchg
roll
test
int
daa
jl
ret
pop
or
testb
sahf
loope
dec
sbb
jae
jmp
hlt
mov
mov
xor
out
mov
cmpsl
lahf
ret
fdivrs
lcall
jg
inc
outsb
cmpsb
loop
jle
push
outsl
fwait
sahf
int
and
jne
div
inc
jle
dec
xorb
out
pop
cs
mov
mov
xchg
in
leave
je
xor
ficomps
adc
or
lcall
or
push
cmp
add
sub
js
popf
out
out
add
dec
cmc
pop
adcl
xchg
scas
adc
jl
movsb
mov
xor
xchg
push
sub
or
ret
andb
jb
lds
and
ret
insl
jo
and
sub
sub
xchg
add
jnp
xor
sti
fmuls
pop
cwtl
mov
out
sub
push
ret
or
add
or
lret
jmp
imulb
daa
mov
xchg
movsl
incl
shr
fst
xlat
and
dec
shrb
jne
mov
int3
push
cmp
lds
jb
stos
adc
sbb
inc
jb
mov
mov
adc
add
adc
mov
add
inc
add
jge
in
aad
clc
je
push
lcall
and
pusha
ljmp
xlat
xor
test
sbb
push
sbb
data16
in
mov
xchg
mov
pop
fstpl
clc
sub
xor
xor
and
xchg
push
call
gs
sub
xor
incb
ret
das
iret
xor
adc
imul
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
jmp
cltd
outsl
sbb
and
pop
sbb
int3
movlps
and
call
sti
in
mov
mov
jp
push
mov
xchg
lret
int3
clc
sbb
xorb
mov
dec
movsl
inc
pop
jbe
out
int3
mov
cmp
jg
xchg
jbe
push
cmpb
xor
mov
insl
insl
es
int3
in
adc
rorb
mov
mov
mov
add
xorl
lret
mov
popa
mov
xor
inc
scas
sub
ljmp
es
jecxz
lds
adc
adc
repnz
out
mov
sub
imul
je
xchg
pop
ret
call
testb
adc
imul
test
icebp
gs
push
sbb
nop
mov
cltd
fsts
dec
pop
in
cmp
fidivrs
mov
je
add
arpl
fsubl
pop
mov
sub
inc
jle
into
cmp
mov
push
sub
and
pop
pop
test
hlt
add
adc
xchg
jge
xor
fldl
mov
sbb
js
pop
in
or
fmull
lcall
sub
dec
pop
push
out
scas
cltd
lods
repnz
mov
mov
and
push
jl
loop
and
pop
aas
xor
das
fcomps
into
add
and
loope
push
dec
jmp
xchg
dec
lahf
fcompl
sbb
mov
dec
xchg
std
dec
rcll
push
mov
scas
out
mov
add
cmpsb
xchg
pop
pop
dec
mov
aam
loopne
add
pushf
arpl
ret
mov
cmpl
orb
and
inc
cmp
roll
imul
pop
jmp
sub
cmpsl
dec
sub
push
inc
subb
std
mov
out
push
cli
outsl
bsf
stos
and
cmp
mov
xchg
hlt
std
decl
mov
mov
add
mov
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
jmp
jg
loope
mov
mov
mov
test
adc
mov
jbe
lods
adc
mov
test
and
incl
nop
mov
mov
dec
mov
aaa
pop
mov
lcall
dec
inc
inc
fidivrl
mov
or
loopne
jp
stc
mov
test
cs
pop
pop
sub
jae
pop
sub
mov
mov
jno
sub
lret
pop
addb
mov
cs
push
push
sub
fimull
xor
and
mov
sbb
addr16
lods
js
test
std
fs
push
imul
ljmp
xor
in
out
jb
jl
push
jbe
sub
pop
mov
stos
xchg
lds
daa
into
scas
popl
xchg
dec
leave
mov
pusha
add
xchg
aad
sahf
add
mov
mov
sbb
xor
ljmp
rclb
mov
sti
push
mov
out
xchg
mov
sbb
push
mov
xchg
xor
xor
xor
inc
repz
sarb
loop
sbb
and
in
jns
lock
push
mov
add
xor
xlat
sub
add
sbb
jne
aaa
pop
inc
inc
fwait
push
or
mov
std
leave
jmp
loope
pop
lret
jecxz
movsb
stos
imul
jmp
js
movsb
loop
adc
dec
fs
xor
jg
pop
lods
lahf
xchg
mov
adc
ds
xchg
fdivr
inc
cmp
push
out
sub
in
mov
mov
cmp
mov
incl
add
and
jbe
push
inc
xor
je
mov
cmpl
xchg
inc
fsubrl
sub
aaa
and
push
call
inc
add
insb
push
mov
in
adc
lods
andb
outsl
inc
jg
mov
in
xor
sub
xchg
mov
mov
pop
sub
outsl
pop
mov
call
or
or
mov
mov
mov
jmp
cltd
jns
dec
and
cltd
pop
sub
fdivrl
int3
movlps
das
jge
ljmp
sbb
xor
add
cmp
aas
jns
mov
push
lods
test
jnp
ds
clc
dec
into
in
cmp
pop
gs
mov
cmc
in
jns
and
sbb
stc
rcll
dec
bound
xchg
ret
enter
or
add
out
and
fwait
cli
adc
fadd
and
iret
lods
push
push
mov
jmp
inc
xchg
bound
out
adc
push
lock
xor
in
jl
js
ljmp
xor
out
jmp
test
sarb
adc
push
dec
xchg
fmul
dec
adc
gs
outsl
xor
insb
adc
lock
popf
sbb
ficoms
cmp
dec
pop
pop
mov
jle
lcall
fisttpll
lods
mov
daa
js
or
pop
popf
adc
mov
pop
loope
sbb
imul
push
hlt
push
dec
rorb
stc
iret
outsl
stos
cmpl
cmp
ss
sub
clc
xchg
adc
add
mov
sbb
push
xchg
rcl
in
jno
shlb
ret
cld
inc
repnz
int
jns
icebp
xor
aas
mov
push
aaa
int3
movsl
mov
inc
rcrb
lret
dec
cltd
xor
aad
test
cmp
jo
aaa
pop
sub
sbb
and
and
fwait
lock
jmp
push
je
pop
out
pop
or
pushf
cmpl
cltd
xchg
int
call
aaa
jge
scas
push
dec
data16
and
and
arpl
lods
popa
adc
pushf
mov
jae
iret
ja
les
dec
and
popf
pop
fwait
cmp
enter
inc
xchg
aam
in
fwait
sbb
bound
sbb
clc
pop
sarl
insb
mov
add
aaa
daa
add
std
jne
outsl
out
mov
repnz
jne
fmuls
cmc
mov
fisttpl
mov
into
stos
add
push
mov
and
movsl
imul
or
decl
test
decl
jmp
sub
sbb
sbb
cs
icebp
mov
bound
scas
adc
adc
jecxz
cwtl
cld
add
jg
xchg
rcrb
jg
mov
aam
out
ljmp
mov
jbe
cli
pop
fdivrs
shll
outsb
xchg
loopne
cli
fimull
cltd
jnp
test
push
adc
jns
mov
hlt
mov
xchg
clc
repz
loop
fimull
aaa
mov
sar
pop
insb
aas
mov
mov
xlat
jns
add
mulb
xor
mov
fisubl
cltd
or
fsubrl
shll
mov
xor
mov
into
and
fstpl
es
ss
out
jae
in
cmp
xchg
stos
faddl
repnz
xchg
sub
lods
cmp
cmpsl
out
dec
fwait
inc
ficomps
mov
add
pop
popa
arpl
push
ss
cmp
test
mov
cmp
mov
cli
mov
pop
lret
lret
jp
pop
ljmp
js
rolb
cwtl
sbb
xor
int
mul
mov
pop
push
imul
es
loope
adc
cmp
mov
rclb
xor
leave
add
cltd
mov
outsl
dec
push
ds
loope
movsb
leave
pop
out
int
adc
or
fldcw
cmp
sbb
mov
cmp
subl
leave
mov
dec
and
mov
imull
push
cmpsl
pop
or
es
js
repnz
mov
inc
mov
aam
lods
push
sbb
daa
mov
push
mov
sbb
dec
jne
inc
test
and
lgdtl
rol
aad
fwait
call
sbb
mov
mov
push
mov
fistl
push
inc
leave
pop
jmp
dec
test
pop
push
jmp
adc
arpl
sbb
loopne
pop
data16
outsb
xor
ret
and
repnz
push
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
jmp
insl
ja
add
popf
sub
xlat
mov
jle
stos
adc
adc
shl
adc
repnz
and
ficomps
mov
ljmp
push
or
fnsave
imul
inc
push
nop
jle
stos
mov
mov
ljmp
js
clc
sahf
lahf
inc
pop
jmp
inc
fnstcw
data16
mov
xchg
jge
aad
cmp
jb
mov
push
lock
lret
out
lahf
popf
jo
or
xor
xchg
shrb
popa
jg
cmpsb
inc
xchg
mov
dec
jbe
jge
jbe
dec
insl
adc
test
xchg
xor
push
fcomps
ja
ret
xor
cwtl
xor
sub
xchg
jmp
mov
rorb
sub
lds
fisubrs
mov
mov
and
adc
jno
addl
and
pop
or
ret
nop
push
cmp
hlt
inc
lods
into
scas
mov
shrb
cmp
adc
movsb
xchg
mov
inc
ds
xor
cld
iret
dec
xchg
push
shl
insl
lock
push
add
lahf
cmp
ret
jnp
out
mov
mov
pop
inc
xchg
rcll
add
test
mul
notl
lahf
pop
xor
inc
xor
add
add
in
cmpsl
std
into
adc
imull
inc
jo
loopne
into
push
mov
mov
mov
sbb
mov
aaa
sbbb
push
gs
push
jns
push
adc
pop
jp
ret
les
push
mov
inc
das
inc
ja
jae
shlb
fisttpl
jmp
int
and
add
jp
lock
lods
repz
ret
sub
lret
mov
add
add
and
ljmp
aam
mov
lds
fisttpll
enter
and
fdivs
cmpsb
in
pop
je
pop
and
pop
xchg
and
flds
das
shrb
dec
data16
mov
dec
adc
adc
xor
mov
call
or
or
xor
xor
mov
mov
jmp
addr16
pusha
out
sbb
xor
and
cmpsb
adc
adc
aas
test
jg
jnp
and
xchg
mov
and
fdivrp
add
and
mov
mov
dec
out
cmpb
fwait
pop
mov
outsb
and
mov
lea
andb
cmpsl
ds
xchg
fcomip
insl
adc
dec
adc
stos
xchg
nop
inc
or
ret
test
jge
pusha
mov
add
call
push
pop
loopne
insl
fdivp
lahf
xchg
pop
dec
loope
lahf
lea
shll
xchg
test
cmp
out
fs
pop
dec
sahf
cmp
xchg
inc
das
xor
in
pop
inc
push
popa
in
jae
lcall
sbb
sub
daa
fsubl
dec
daa
sbbl
xor
xchg
mov
popf
lahf
pop
inc
loopne
ljmp
push
imul
inc
das
scas
ss
or
xlat
out
jp
mov
mov
pop
popf
insl
adc
adc
inc
repz
fs
fwait
push
inc
mov
pop
push
cmpl
fstpt
jp
sbb
fmuls
sbb
test
test
test
clc
sahf
cmpsb
or
lret
gs
fwait
rolb
repz
jno
jb
xchg
nop
and
scas
mov
push
je
mov
sub
gs
pop
adc
cmc
mov
aam
sub
movl
dec
xor
pusha
insb
pop
sbb
lods
outsl
iret
cmc
sbbl
std
mov
sub
jle
stos
pushf
sub
mov
call
test
mov
sub
das
ja
adc
test
int3
or
push
adc
iret
or
xor
or
cmp
sbb
pop
fisttpll
sti
popa
mov
and
or
lret
sbb
push
sub
sbb
decl
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
jmp
ds
jnp
pop
and
popf
cmc
inc
in
and
mov
int3
movlps
sbb
sub
in
push
xchg
enter
nop
insb
inc
xor
shlb
adc
lcall
fwait
enter
jg
aaa
es
arpl
mov
ds
iret
scas
mov
in
pop
pop
gs
pop
hlt
cmpsl
fwait
cld
imul
jbe
lods
lods
xchg
adc
sbb
xor
mov
repnz
shlb
pop
push
rorb
das
jae
mov
adc
lahf
push
mov
dec
add
mov
test
mov
ficoml
rolb
or
cmp
dec
xor
jno
inc
fstp
loopne
aad
sub
clc
pop
cmp
ficoms
mov
addl
sub
and
pop
sbb
xor
add
outsb
pop
cmp
in
iret
sbbb
add
bound
std
cli
and
or
inc
and
cmpsl
je
mov
in
sub
repz
clc
mov
add
cmp
shrl
test
mov
jmp
enter
out
imul
dec
push
mov
das
sbbl
push
mov
xchg
test
jle
shlb
repz
scas
and
mov
fwait
into
cmp
dec
je
fistps
add
jecxz
leave
dec
mov
jns
popf
imul
mov
xor
xor
jb
sbb
mov
cmp
pop
inc
cld
push
lds
aam
cwtl
jae
ds
sub
cmp
mov
xchg
int
adc
mov
sbb
ret
xorb
outsl
mov
mov
stc
in
add
popa
sbb
sbb
jge
cmp
jnp
lds
jmp
sub
pop
sahf
je
or
clc
mov
or
ficoml
sub
xchg
loopne
imul
aaa
lock
xlat
xchg
mov
and
dec
mov
movsl
imul
or
add
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
xor
and
mov
into
sarb
jle
sahf
adc
adc
out
nop
out
adc
aam
in
test
cmpsl
mov
lods
push
mov
mov
sub
mov
mov
in
loopne
fcmovnbe
das
sub
inc
inc
adc
and
xchg
sti
jmp
cmc
loope
arpl
stc
push
sarb
or
popf
call
addb
xchg
cli
xlat
xchg
mov
mov
stos
push
dec
mov
insl
inc
add
fscale
cmp
bound
lret
push
sahf
sarl
lret
fidivl
adc
fmull
btr
inc
pop
outsl
inc
sub
mov
rol
into
mov
xchg
out
nop
in
jge
popa
ret
in
aam
stos
adc
jecxz
nop
dec
mov
add
sbb
sarb
test
add
fs
mov
sbb
xchg
test
adc
pop
push
jmp
mov
sbb
and
sarb
jl
negl
loope
jmp
push
dec
sub
mov
clc
jo
cmp
xor
sbb
movsb
push
mov
sti
fnsave
push
sub
and
fwait
sbb
shll
xor
jl
lods
or
jns
arpl
adc
in
imul
inc
ret
ljmp
jecxz
xor
pushl
adc
fsub
test
stc
imul
out
push
and
sub
xor
cld
mov
rorl
icebp
dec
loop
mov
inc
sub
popf
fcomps
jmp
xor
xchg
popf
mov
fxch
inc
out
pop
fstpt
pop
stos
in
in
push
insl
in
lds
inc
pop
ljmp
insb
sti
pop
in
subl
pop
repnz
and
cmp
data16
ret
cli
sub
loopne
shrl
or
mov
aas
sbb
not
mov
or
inc
bound
jnp
mov
jb
popa
lock
or
mov
xchg
add
pushl
xor
mov
jmp
call
push
pop
popa
cwtl
daa
punpckhdq
lcall
dec
sub
fldcw
lcall
imul
inc
mov
stos
enter
mov
jne
das
xor
js
lds
adc
push
lods
sti
push
jno
out
or
jns
nop
sbb
rcr
push
fldcw
in
cmp
ss
sbb
lods
ss
mov
data16
pop
push
enter
mov
add
icebp
js
adc
and
jbe
test
out
pop
shlb
shl
dec
outsl
ror
pop
sbb
mov
scas
aaa
jae
dec
dec
aas
cmc
outsb
mov
orb
jbe
andb
jns
xchg
jle
sbb
jns
adc
mov
sbb
mov
dec
cmpsb
cli
push
mov
movsl
and
pop
jmp
dec
dec
xchg
adc
jno
nop
fs
lcall
test
mov
out
adcl
jl
cmovg
incw
xor
push
imul
add
sbb
mov
ljmp
push
insl
sub
cld
mov
fistpl
jb
xor
xor
adc
dec
dec
notl
cld
cld
inc
xchg
push
or
iret
iret
adc
jp
inc
mov
adc
insb
test
aas
cwtl
fadd
in
lock
cs
lea
inc
dec
daa
arpl
cmc
mov
shrb
pop
mov
in
xor
adc
and
mov
popa
or
add
stos
pop
inc
ja
dec
jnp
and
mov
lret
inc
mov
add
repz
push
ds
loope
push
cmp
cld
pop
or
imul
popf
mov
pop
icebp
and
ljmp
sbb
sbb
push
dec
popa
test
push
lret
or
inc
mov
das
sbb
test
cmp
add
clc
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
jmp
fwait
xchg
out
cmp
aaa
sbb
lods
fists
push
xchg
adc
adc
shl
pop
lcall
xchg
sbb
in
cmpsb
mov
cli
adc
ret
jo
xchg
bound
cmpsb
and
add
cmp
das
ret
jmp
sub
aad
mov
sub
push
lret
and
jbe
call
cmp
jge
mov
jb
and
mov
push
incb
sub
popf
ljmp
dec
sti
scas
lretw
stos
pcmpgtw
ret
ss
or
out
insl
push
dec
cmp
aaa
cmp
mov
outsl
cltd
jns
aad
out
cmp
sbbl
nop
ret
and
or
test
jge
and
cli
loope,pt
rcll
int3
xchg
and
loopne
mov
bound
mov
mov
imul
rcrl
in
xchg
dec
ds
scas
adc
add
jle
sbb
lods
pop
xchg
arpl
je
scas
dec
jl
or
cmp
dec
sbb
lret
push
or
scas
fidivrs
out
lret
push
bound
in
adc
pop
push
cltd
mov
mov
loope
icebp
sbb
aaa
fsts
out
xchg
bnd
push
daa
cmpsl
sbb
hlt
repnz
je
or
sahf
ss
sub
lret
sbbl
sahf
movsl
shrl
jmp
lock
add
fiadds
mov
clc
sub
inc
inc
loopne
or
out
push
out
add
test
aam
add
jecxz
and
pop
push
dec
dec
in
cwtl
xlat
ss
clc
xchg
pop
xchg
insl
outsl
stos
fistl
add
xor
or
jb
pop
inc
mov
cmp
cmp
jno
lock
pop
repnz
push
scas
fsubrl
xlat
add
into
inc
xchg
dec
je
mov
jb
loop
stc
gs
inc
mov
popf
lods
in
inc
push
xor
push
xor
arpl
and
jae
movl
pop
dec
adc
push
das
xchg
loope
enter
stc
pop
push
pusha
cltd
sarb
lock
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
jmp
stos
f2xm1
mov
sahf
cmpsl
fldpi
xor
stos
mov
mov
adc
orl
and
iret
outsl
adc
test
sar
adc
enter
mov
cmpsb
sub
push
imul
das
jp
dec
xchg
jno
jle
cmp
daa
loop
mov
sbb
mov
std
jmp
xor
fyl2x
lahf
mov
pop
pushf
test
adc
fiaddl
xor
inc
pop
mov
call
test
call
sbb
jmp
dec
push
lret
addb
jmp
sub
add
cli
jp
dec
insl
push
lods
popf
std
pop
loopne
push
mov
jns
pop
and
imul
pop
and
mov
mov
es
cmpsl
or
mov
cmc
pop
mov
aam
in
inc
ret
xchg
push
xchg
xor
mov
mov
aad
ss
inc
cmc
sub
xchg
mov
jbe
inc
test
push
out
mov
xchg
cmp
out
xchg
sub
movsl
or
out
cmpsb
pop
jle
sbb
cmp
iret
into
pop
add
andl
push
fs
push
int3
adc
movsl
jb
ficoms
mov
mov
mov
and
stos
xor
add
call
clc
sbb
adc
mov
pop
push
xchg
xchg
roll
jecxz
bound
jmp
hlt
js
mov
push
loope
movsb
jae
rcll
jo
lods
cltd
push
repz
mov
add
mov
nop
adc
lea
inc
popa
inc
lds
jmp
mov
mov
pop
lar
or
push
lret
cmpsl
xor
orl
lods
and
push
add
mov
mov
out
das
or
out
inc
call
or
lret
mov
jo
test
mov
and
jnp
pushf
fimuls
gs
adc
imul
mov
out
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
jmp
push
loope
dec
cmp
push
fsts
push
nop
js
mov
adc
loopne
filds
mov
and
mov
dec
adc
mov
pop
pop
xchg
adc
fnsave
ja
inc
mov
test
and
in
xlat
sarl
clc
fildl
aam
jle
fsubs
adc
mov
push
and
imul
les
dec
push
adc
mov
inc
mov
sub
dec
xchg
jge
adc
mov
mov
cmc
pop
cmpsl
add
outsb
cmp
arpl
cmp
fnstenv
mov
mov
dec
mov
push
jle
push
xchg
ljmp
pop
popf
sub
or
mov
leave
push
xor
ret
int
jb
cld
push
test
push
pop
cltd
jnp
or
xor
sub
aad
repz
gs
pusha
push
dec
xor
push
dec
xor
mov
arpl
sbb
popa
inc
cmp
out
es
sti
out
push
add
push
mov
fs
adc
pop
sub
fidivrl
into
sti
int
lret
or
mov
xchg
mov
das
inc
cmp
fsts
jmp
adc
push
and
loopne
ds
hlt
push
and
jle
nop
push
jmp
pop
or
add
and
inc
mov
sarb
enter
testl
pop
int3
jnp
dec
sub
js
xor
mov
lock
repz
pop
jnp
cltd
je
inc
and
dec
mov
loopne
sbb
push
lock
aas
ja,pn
mov
out
fidivrl
or
adc
cmp
add
cmpb
push
mov
inc
lods
mov
xchg
inc
ljmp
int3
sub
sbb
js
mov
mov
push
xchg
scas
pop
inc
in
fistps
adc
addr16
inc
outsb
addr16
pop
jg
sbb
add
repz
sbb
lods
push
pop
jbe
xor
push
lock
sbb
test
decl
pushl
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
jmp
mov
jl
push
push
pushl
pushl
pushl
push
push
push
push
push
pushl
pushl
pushl
pushl
call
adcl
orl
sbbl
xor
and
movl
sbb
push
adcl
push
movzwl
and
mov
adcl
or
movl
jne
or
mov
mov
cmpl
movl
movl
jmp
movl
mov
jle
push
push
push
push
pushl
pushl
push
call
sub
and
inc
notl
or
or
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
jmp
mov
sub
push
pop
inc
stos
outsb
test
adc
jb
subl
inc
fdiv
cmpsl
jno
lock
add
xlat
and
push
dec
in
xchg
cmc
sub
mov
adc
adc
lds
push
adc
fstl
push
sub
xchg
mov
or
cmpsb
push
ret
mov
and
mov
dec
push
lahf
or
imull
addr16
fists
loop
xlat
or
mov
lahf
repnz
inc
mov
int
mov
dec
xchg
push
mov
test
pop
iret
dec
dec
jne
lea
sub
mov
sub
leave
adc
in
loop
iret
xor
sti
adc
jg
cld
lock
add
dec
lret
adc
push
outsb
mov
loop
or
sub
jae
les
out
fisttpll
inc
push
pop
ficoml
movsl
scas
mov
push
mov
fstl
mov
pop
xlat
mov
jbe
bound
in
jmp
cltd
js
shlb
or
mov
mov
or
pop
stos
dec
pop
inc
add
loopne
test
sahf
sub
pop
or
daa
out
fs
dec
negb
fcoml
mov
jmp
daa
fs
sahf
or
push
inc
mov
test
movsb
je
mov
call
imul
and
and
aam
cmpsl
mov
or
scas
mov
cmp
fimull
push
and
dec
addl
mov
cs
pop
stos
loope
dec
adc
lock
aaa
mov
cs
pop
ret
adc
mov
push
bound
fs
cmp
movsb
aas
cmp
in
iret
xchg
or
es
cli
in
fmull
dec
out
imul
movsl
and
jbe
aam
scas
addr16
sbb
aad
sub
shll
shll
or
movsl
out
icebp
adc
pop
push
mov
mov
sbb
shrl
sbb
gs
std
out
leave
cmp
lret
sarb
fs
cld
mov
repz
push
xor
cmpsb
call
pop
or
mov
test
xchg
push
lcall
out
inc
gs
test
ss
mov
ret
adc
add
xchg
std
in
rolb
push
xchg
or
dec
es
out
inc
aas
dec
dec
inc
push
ret
daa
movsb
enter
daa
scas
add
inc
mov
or
call
outsl
out
dec
ja
sbb
jne
hlt
mov
testl
jl
ficomps
jns
test
jmp
jno
inc
test
cmpsb
push
jmp
sahf
cmp
aas
adc
adcl
add
xor
jmp
sbb
movsl
pusha
mov
outsl
cmp
fbstp
xchg
std
add
sarl
out
jmp
sub
fstl
jbe
mov
inc
adc
and
or
mov
dec
pop
in
int3
mov
cmp
aad
mov
dec
mov
mov
jae
fwait
jmp
test
pop
stc
adc
add
aaa
mov
jmp
add
or
sbb
and
lret
push
and
adcb
sub
xchg
push
sbbl
push
scas
ret
daa
aad
push
cmpsb
inc
movsl
daa
mov
adc
int3
iret
idivl
daa
iret
dec
aad
mov
mov
and
sbb
lret
cld
mov
pusha
ljmp
lods
mov
inc
xchg
mov
loopne
add
cld
xchg
pop
pop
cld
xorb
das
or
cmc
push
ljmp
fisubl
insl
pop
es
pop
or
cmp
xchg
and
cmp
or
mov
ljmp
lods
in
jecxz
addb
mov
pusha
xchg
sbb
mov
push
xchg
pop
adc
cltd
mov
lock
outsb
cltd
mov
data16
je
jg
or
adc
or
xchg
rclb
clc
ja
arpl
add
lahf
jp
outsl
pop
fcomip
scas
fstpt
and
mov
inc
repnz
mov
into
push
cmc
ds
cmpsb
ss
mov
jns
rcrl
aad
or
cmpsl
mov
sbb
movsb
mov
test
repz
pop
in
mov
sub
dec
lock
stos
inc
dec
or
sbb
out
mov
sbb
lret
les
or
in
repz
mov
lret
push
or
cmp
xchg
jne
cmp
popf
insl
xchg
and
fldt
call
rorl
sub
xor
jns
jle
imul
lea
cmp
sbb
fcompp
sbbl
cmp
lret
inc
adc
push
inc
out
in
xchg
sub
stc
add
or
aam
xor
jp
imul
lds
xchg
jne
ficoml
jo
cmp
xchg
xchg
sub
push
mov
jecxz
call
inc
cmp
push
orl
sahf
jb
cmpsl
adc
cld
push
cmpsl
mov
aas
mov
sub
dec
pop
sub
pop
cmpsb
arpl
je
or
dec
lock
push
mov
xchg
sub
pop
fisttpl
cs
mov
adc
pop
add
daa
push
mov
sti
arpl
stos
or
sbb
ss
and
pop
pop
stos
shr
pushf
or
fcomps
add
out
cmp
sbb
dec
sbb
jb
call
pop
xor
lock
dec
imul
and
pusha
out
mov
data16
pop
or
std
in
repnz
jns
jns
xor
pusha
mov
cmp
data16
lds
or
xchg
ss
flds
mov
adc
data16
mov
into
and
or
or
adc
and
sub
mov
jecxz
sub
movsl
sub
fwait
cmp
mov
pusha
jl
mov
pop
out
sbb
push
aad
les
hlt
sbb
fmuls
daa
pop
and
out
jl
es
xchg
stos
dec
fstpl
inc
add
test
and
sahf
cmp
push
xchg
xchg
sbb
inc
imul
testl
inc
mov
cwtl
xchg
in
push
mov
insl
xchg
fcmovnbe
ljmp
dec
cld
push
repz
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
sbb
add
mov
movzbl
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
xor
subl
and
shl
ret
xor
xor
ret
