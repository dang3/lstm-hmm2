push
mov
sub
push
add
push
adc
push
adc
xor
sbb
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
push
mov
pop
push
call
push
andl
push
push
push
push
xorl
push
sbbl
call
push
addl
push
push
push
sbbl
push
push
push
incl
call
addl
dec
movl
jne
push
sbbl
push
push
andl
call
test
je
mov
adc
imul
mov
mov
movl
mov
movl
cmp
jne
addl
movl
pushl
subl
pushl
andl
pushl
xorl
call
mov
mov
or
mov
xor
mov
mov
sub
movl
lea
xor
mov
lea
mov
addl
mov
mov
adc
mov
mov
add
mov
mov
xor
mov
xor
mov
adcl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
xor
add
mov
xor
mov
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
mov
or
mov
xor
add
or
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
or
adc
mov
xor
xor
mov
sbb
mov
xor
mov
mov
mov
sub
mov
orl
mov
movl
add
mov
xor
add
mov
add
mov
andl
mov
adcl
xor
xor
sbbl
add
movzbl
and
mov
xor
lea
cmp
ja
or
mov
mov
xor
mov
sbbl
xor
andl
lea
subl
push
sbb
mov
xorl
xor
lea
orl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
mov
andl
pushl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jb
xor
lea
mov
mov
decl
xor
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
movzbl
sub
mov
mov
xorl
xor
lea
mov
cmp
movl
jbe
add
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
mov
xor
mov
sub
andl
xor
mov
not
mov
movl
cmp
movl
jne
addl
lea
andl
mov
lea
addl
mov
mov
xorl
test
movl
je
adc
mov
mov
mov
sub
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
sub
cltd
mov
mov
mov
or
add
mov
adc
andl
subl
xor
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
mov
dec
mov
jmp
not
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
negl
add
mov
mov
movl
adcl
xor
addl
mov
mov
xor
movl
mov
cmp
movl
jne
mov
mov
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
negl
mov
movl
mov
andl
xor
add
movl
adc
andl
xor
addl
xor
movl
cmp
movl
jne
cmp
jne
mov
addl
mov
andl
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
addl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
xorl
add
movl
jmp
movl
mov
movl
cmp
je
mov
mov
orl
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
movl
mov
mov
mov
adcl
pushl
addl
mov
pushl
addl
add
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
mov
mov
orl
pushl
call
mov
mov
movl
mov
movl
jmp
adc
mov
sub
mov
andl
xor
subl
add
cmp
jne
add
mov
movzwl
sbb
mov
adcl
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
andl
push
xor
movl
add
xorl
push
xorl
push
andl
pushl
adcl
pushl
sbbl
call
add
mov
mov
sub
mov
or
mov
sub
mov
adc
mov
xor
mov
sub
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
incl
mov
mov
mov
mov
mov
mov
mov
sbb
movl
mov
xor
decl
add
mov
sbb
mov
mov
or
mov
mov
and
mov
mov
push
sbb
pop
orl
sub
add
xorl
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
mov
lea
lea
xor
cmp
jne
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
mov
movl
movl
movl
movl
mov
mov
mov
andl
mov
movl
mov
mov
xor
mov
orl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
xor
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
inc
ret
push
mov
push
movl
movl
mov
addl
mov
add
xor
cmp
movl
jne
add
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
xorl
push
adcl
push
addl
push
push
andl
lea
push
push
adcl
call
push
call
sub
movl
xorl
movl
mov
mov
xor
mov
xorl
add
mov
sbb
mov
test
je
mov
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
add
movzbl
and
xchg
sbb
mov
movl
sub
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
add
mov
sub
mov
sub
xor
add
mov
sub
mov
mov
xor
xor
add
add
mov
movzbl
sbb
mov
mov
adc
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
or
mov
orl
sub
addl
lea
xor
andl
xor
movl
cmp
movl
je
sub
mov
xorl
xor
adcl
add
cmp
jne
orl
pushl
call
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
inc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
add
cmp
movl
je
adcl
pushl
addl
pushl
negl
call
mov
xor
mov
add
mov
subl
xor
subl
add
cmp
je
or
mov
mov
adc
mov
mov
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
jmp
or
xchg
xchg
pushf
cmp
push
les
jl
jl
pop
jl
adc
and
imul
xor
fsubp
push
dec
imul
bound
iret
pop
dec
and
dec
jg
jb
jg
movsb
cmp
ljmp
cld
push
jg
in
cmp
mov
mov
mulps
fldl
lock
sub
dec
push
sub
mov
test
jmp
lret
sbb
jp
arpl
lcall
xor
cmpb
jae
fsubrl
push
jecxz
mov
mov
out
push
dec
push
and
cmp
lods
dec
int3
cmpsl
xor
push
pop
std
push
pop
movsl
stc
push
cli
inc
adc
test
iret
sahf
paddw
fnstcw
pop
sbbl
xchg
in
popa
lret
sahf
ja
jg
into
push
xor
push
stos
out
cltd
fdivrl
cmpsb
int3
pop
or
xorl
jnp
sub
test
xor
jb
dec
add
mov
mov
jo
test
aaa
jmp
sbb
xor
and
out
mov
leave
sub
xlat
push
lds
xchg
inc
sahf
mov
mov
nop
loop
mov
scas
ret
jmp
ss
mov
test
lcall
les
rcrl
sbb
inc
popf
nop
mov
das
inc
test
mov
stos
test
outsb
loopne
repz
les
out
ret
mov
in
cmpsl
nop
cmp
jb
movsl
sti
or
cltd
inc
mov
dec
clc
call
stc
mov
pushl
push
cmp
add
inc
cmp
loopne
lret
sbb
repz
mov
rorl
sarb
inc
and
shlb
sub
jg
icebp
lds
cmp
loope
bound
out
cmpl
pop
gs
inc
lds
sub
test
jne
push
call
xchg
jnp
leave
sbb
xchg
push
sbb
mov
pop
test
outsl
jnp
fcompl
insl
roll
mov
adc
outsb
movb
cmc
cmc
dec
pushf
mov
push
mov
test
jge
or
xchg
sahf
pop
dec
std
lret
lea
enter
cld
sub
aas
clc
ja
adc
shl
dec
or
xchg
test
push
test
call
push
mov
bound
or
loop
sti
cmpsl
mov
mov
xchg
xor
dec
pop
mov
sub
out
repnz
cli
leave
jmp
pop
add
push
jmp
pop
push
aas
maskmovq
notl
pop
xchg
rcl
repnz
pop
sahf
cld
dec
xchg
xlat
add
mov
sub
bound
mov
test
call
xor
pop
inc
cmp
push
fnsave
fiadds
mov
push
fldl
flds
jno
mov
jl
sar
pop
inc
push
adc
push
xor
mov
or
orb
clc
pop
mov
inc
or
sbbl
orl
jl
insl
jno
test
test
iret
jnp
jge
clc
mov
enter
test
insl
adc
nop
mov
test
mov
stos
pop
imul
xchg
js
mov
fdivr
ret
ljmp
mov
les
mov
mov
dec
lret
mov
push
or
pop
inc
add
loop
pop
ret
pop
mov
inc
fsts
mov
or
pusha
std
fldenv
insb
inc
push
cmp
xchg
int
mov
add
sub
adc
movsl
iret
adc
popl
cmpsb
mov
mov
pop
inc
or
imulb
out
jecxz
pop
aad
xor
leave
cwtl
inc
jnp
outsl
jb
inc
xchg
mov
mov
dec
les
adc
shrl
aaa
iret
inc
test
clc
xchg
inc
cmp
daa
mov
pop
cli
dec
lcall
aam
pop
jl
cmp
dec
repnz
cmp
ret
mov
cmp
pop
push
adcb
mov
jb
mov
cwtl
adc
rorb
jae
fs
cmpsl
dec
lea
dec
fs
outsb
pop
cmc
add
rorl
popf
xchg
lret
aam
les
add
orl
ficoml
push
pop
push
movsb
loopne
stos
mov
fwait
jae
loope
or
xor
push
inc
sbb
pop
xlat
xor
mov
mov
sub
mov
ja
jae
int3
mov
or
shr
sbb
mov
pop
out
movsb
or
sbbl
mov
inc
arpl
or
xchg
pop
and
cmpsb
mov
cmp
xchg
jge
mov
dec
dec
inc
push
cmp
mov
pop
adc
aaa
mov
mov
stos
jbe
js
out
add
aad
jno
out
mov
push
ror
test
mov
andl
jo
loopne
jle
loope
cmpsl
jbe
cmpsb
inc
fistpll
cmp
and
mov
dec
push
not
cmpsl
js
enter
cmp
sub
imull
mov
aad
mov
jnp
aad
sahf
movsw
std
cmp
lret
out
xchg
jb
cltd
mov
push
std
or
lahf
xchg
mov
push
jmp
arpl
nop
shrb
pop
test
pusha
pop
scas
dec
cmc
int
scas
push
sub
std
mov
push
push
adc
lock
mov
lods
pushf
fisubs
mov
mov
jl
push
mov
jg
pusha
out
nop
mov
push
xor
cmp
or
and
mov
lret
lcall
cwtl
cld
gs
jnp
cmp
das
ljmp
fildll
or
push
adc
mov
fcomps
jecxz
cmc
popf
xchg
mov
dec
in
xor
das
scas
addr16
and
xchg
icebp
push
fcom
cs
pop
push
in
sbb
lods
in
dec
pop
aad
aam
cmp
inc
xchg
lahf
or
in
aas
mov
dec
test
and
push
ret
out
or
sub
lods
mov
xchg
cld
mov
in
js
stos
mov
inc
rorb
jno
stos
mov
push
xchg
mov
mov
mov
popf
popa
andl
mov
lods
push
mov
xchg
dec
xchg
gs
ljmp
push
or
inc
xchg
push
rcrb
cmpsb
insb
rorb
lods
or
cmp
sbb
sbb
daa
xchg
lahf
pop
mov
cmpsb
out
pusha
jg
fcompl
out
mov
scas
jle
inc
push
movsl
or
jmp
pop
int3
mov
cmp
dec
xchg
lock
add
jno
ficoms
lock
jae
jg
loope
mov
das
rcll
sti
xlat
sub
sbb
cmp
pop
icebp
std
int
cmp
cwtl
or
stos
push
sbb
pop
fdivrs
sub
cmp
jnp
lret
add
jb
inc
xchg
xchg
dec
out
jmp
fdivrl
aad
mov
popf
sbb
adc
arpl
fisubrl
mulb
mov
xorb
sbb
inc
cmpsb
lods
push
xchg
sbb
sbb
mov
pop
mov
shrl
mov
adc
cmp
jno
aaa
pop
mov
or
xorb
sub
cmpsl
lds
xchg
xor
xor
lock
rclb
sar
mov
daa
push
fldt
mov
in
imul
fdivrp
jle
push
dec
cmp
dec
or
dec
test
subb
sti
xchg
xchg
mov
lret
mov
mov
cmc
outsb
jb
call
mov
inc
fistpl
out
add
fimuls
ljmp
xor
xor
push
mov
push
popf
and
dec
js
mov
lods
sbb
lods
xor
lahf
loope
jmp
std
mov
aas
lahf
orb
andb
out
jmp
js
mov
pop
shlb
inc
testb
mov
dec
adc
dec
mov
mov
jmp
movsl
adc
add
mov
add
mov
nop
test
jns
jl
sti
dec
mov
cmpsb
mov
mov
sbb
cmp
lcall
dec
mov
in
jb
jnp
ja
scas
cmp
jecxz
sub
inc
iret
daa
xchg
mov
cmp
mov
sbb
cmp
loopnew
and
mov
lds
in
pop
push
push
es
fcmovnb
and
setae
int3
push
scas
cmp
hlt
les
or
pop
pop
add
mov
aaa
sbb
push
pushf
adc
test
loop
sub
cmpsb
mov
mov
popa
xor
dec
test
cmpsl
mov
in
les
jae
fs
test
mov
icebp
pusha
test
call
sti
push
and
arpl
inc
out
pop
fistps
mov
fisttpll
sub
push
fs
or
push
xchg
pop
cmp
sahf
dec
xchg
les
cmp
xchg
pop
adc
xchg
mov
cmpsb
mov
mov
push
xchg
pop
mov
cs
sbb
addl
out
push
pop
and
test
cmp
jno
aad
jnp
es
lcall
lahf
test
dec
fstl
jno
add
lret
fnstenv
cld
inc
cs
sub
dec
pushl
jns
mov
xor
repz
and
fisubrs
repnz
fwait
mov
pop
rorb
sbb
jns
in
jmp
arpl
add
loopne
push
inc
adc
dec
outsb
push
movb
je
sub
out
push
jb
mov
outsb
arpl
std
cmp
sbbl
jecxz
adc
aas
sub
xlat
fwait
and
push
loope
xor
sarl
scas
xchg
insb
add
xchg
hlt
stc
int3
inc
xchg
mov
add
iret
sub
ror
push
rolb
aaa
mov
add
fs
cmp
popa
adc
in
push
pop
mov
mov
js
incl
dec
out
pusha
add
mov
jecxz
xor
loop
pusha
add
mov
mov
imul
cmp
lods
leave
mulb
push
ja
mov
imul
popa
xchg
movsb
inc
test
adc
cmpl
mov
insb
push
clc
std
fld
nop
scas
inc
in
mov
cmpsb
push
inc
aad
lods
dec
inc
repnz
mov
push
subl
adc
cli
jmp
rclb
and
push
mov
adc
sub
jg
out
dec
call
cmp
push
imul
add
addl
or
pop
clc
mov
mov
pop
scas
push
fidivl
popf
test
and
in
xchg
std
stc
adc
inc
addr16
daa
sub
sbb
sub
hlt
inc
pusha
pop
mov
xchg
push
fcompl
sbb
jl
pusha
inc
pop
pop
mov
push
das
jle
and
icebp
nop
ret
orb
mov
pushf
push
and
mov
xor
inc
and
and
and
cwtl
iret
lcall
xchg
add
movb
cmp
fsubl
das
xor
call
dec
mov
dec
or
xchg
stc
sbb
cmpsl
mov
sarb
outsb
jp
or
xor
mov
mov
inc
sub
and
inc
aam
arpl
push
loopne
out
push
repz
mov
test
or
mov
and
rcll
stc
cld
pop
sbbl
test
outsb
repz
data16
xchg
push
cmp
sub
cmpl
das
scas
sbb
lods
dec
dec
push
icebp
inc
jecxz
mov
movsl
cmp
sbb
ret
lahf
adcl
popf
mov
inc
push
sub
push
rorl
aam
xchg
scas
cmpsl
repnz
push
testb
fdivrl
mov
pop
mov
dec
xor
lret
cmp
loope
sbbl
xor
mov
iret
lea
nop
fnstcw
add
push
mov
pushf
clc
or
aad
inc
loopne
lea
jg
mov
in
sub
xor
dec
fmull
icebp
in
dec
mov
jns
int
mov
aas
and
adc
hlt
cmc
or
mov
int
xlat
loopne
adc
lock
push
xchg
add
shlb
push
nop
sbb
cmp
xchg
cld
pop
ds
mov
es
aam
cltd
fldt
aam
es
aam
inc
pop
xor
notb
pop
popf
cmp
pop
add
pop
icebp
fmul
push
popa
pop
push
out
shl
jmp
aad
imul
cltd
out
es
adc
jg
sub
ljmp
pop
ljmp
adc
xchg
popf
cmpb
push
push
push
jns
icebp
pop
xchg
fbld
or
jl
mov
insb
dec
adc
sub
dec
inc
pop
dec
jl
daa
in
shll
lods
out
shlb
jle
insl
lock
insl
fwait
and
subl
cs
divb
cmp
adc
fcomip
pop
fistpll
cmpsb
repnz
jge
inc
jmp
and
pop
je
or
lea
mov
cmc
pop
iret
xchg
outsb
aad
jmp
pop
aas
in
cs
sub
adc
sub
filds
das
mov
sbb
insl
jnp
sbb
inc
jnp
xchg
or
mov
ja
xchg
shlb
add
push
lahf
mov
iret
bound
adc
mov
inc
xchg
xchg
cmp
movzbl
cli
or
andb
push
xchg
sbb
sbb
iret
and
pop
stc
adc
fadds
push
inc
mov
and
xchg
xor
mov
add
notl
pop
sbb
sub
out
mov
xlat
xchg
jp
scas
jmp
movsb
cmpb
xchg
cmc
sub
sbb
sub
aaa
outsl
mov
les
outsl
mov
mov
scas
dec
or
add
jno
or
and
xor
inc
out
sysexit
bnd
in
add
adc
adc
jb
adc
lea
fnstcw
stos
in
lret
je
iret
lret
popf
pop
sbb
in
scas
or
sbb
int
add
iret
xor
icebp
mov
aaa
negl
lret
xchg
lret
push
mov
insb
add
sub
imul
dec
nop
pop
cwtl
bswap
adc
sub
jge
or
push
cmpsb
xchg
xchg
xchg
out
lahf
add
xchg
sbb
in
sbb
iret
test
jmp
lods
mov
or
aam
imul
roll
loop
dec
xor
and
add
mov
insb
ds
cs
push
xchg
rcl
andb
lret
pushf
jg
jno
xor
adc
pushf
jae
adc
mov
adc
dec
in
stos
or
gs
das
dec
xor
test
dec
pop
sub
or
cmp
addr16
xor
mov
lds
cmp
or
loope
xor
aas
dec
xor
imul
movsb
or
jecxz
fs
jns
test
mov
out
nop
and
pop
cmp
inc
add
pcmpgtb
rcrb
inc
mov
sbbb
mov
jmp
cmp
es
jns
pop
out
cmp
aam
es
mov
cli
or
mov
push
into
jnp
xor
mov
repz
xor
add
xlat
adc
in
enter
mov
mov
mov
lret
in
mov
jo
lret
lods
mov
xchg
sbb
xlat
fs
or
in
out
jae
hlt
sub
das
mov
or
sub
arpl
push
mov
repz
dec
xor
and
xchg
pusha
call
or
lods
repz
mov
mov
xchg
popa
aad
incb
ljmp
and
or
and
out
jl
aam
cmpsb
insb
in
mov
add
adc
rol
nop
imul
jg
outsl
jbe
inc
cmpsb
mov
mov
in
add
enter
fwait
mov
mov
inc
adc
popfw
fdivr
pushf
mov
pusha
icebp
pusha
dec
sarl
push
cmc
mov
pop
scas
jo
fdivl
inc
ficoml
mov
sbb
mov
mov
ret
mov
std
sub
fwait
lret
dec
test
pop
jge
pop
push
add
sub
or
leave
or
adc
adc
xchg
mov
cmpsl
clc
rclb
int3
add
or
pop
cmp
xor
mov
aam
shl
cwtl
push
daa
mov
mov
ss
push
sti
mov
pop
jecxz
sbb
cmp
clc
mov
aam
call
int3
orl
mov
mov
les
push
mov
add
bound
add
iret
push
inc
in
enter
aas
and
cmp
loopne
adc
sbb
mov
mov
hlt
adc
andl
xchg
repnz
aam
cmp
sbb
xchg
lret
arpl
sub
xchg
xchg
pushl
insb
cmp
sbb
mov
and
mov
adc
sbb
idiv
pop
inc
jns
mov
jnp
sub
adc
add
xchg
sub
sbb
mov
movsl
inc
mov
push
xor
mov
pop
dec
inc
cmp
sbb
lods
in
push
hlt
xchg
out
stos
xchg
lret
call
cltd
mov
lea
cmovp
lret
push
mov
or
fmul
lea
nop
cmp
xlat
insl
jno
and
jne
data16
imul
sub
mov
jmp
addr16
cmp
or
imul
inc
sti
sbb
addr16
inc
push
cmpsb
jle
movsl
inc
push
das
pop
test
xchg
dec
mov
lods
pop
xchg
movb
es
cmp
cmp
lock
or
dec
outsb
xor
pop
fadd
add
shl
adc
xor
cmp
jge
jge
pop
push
int3
ret
jmp
mov
mov
lds
or
shlb
jecxz
sub
je
cli
enter
lock
mov
mov
jmp
lcall
imulb
fwait
fs
xor
adc
mov
sub
and
cld
pop
int3
jmp
repz
dec
pop
pop
in
dec
add
adc
inc
inc
and
lahf
fisubrs
pusha
sub
aas
pushf
xchg
or
jb
fwait
lods
pusha
xchg
adc
movl
call
cwtl
push
aam
fwait
sti
loope
lret
mov
push
inc
or
hlt
and
add
inc
mov
dec
pop
jns
rclb
fwait
leave
insl
ret
mov
cs
pushf
or
lcall
dec
shll
adc
cmp
sbb
mov
lods
sbb
jmp
jo
lcall
push
pushf
roll
mov
sub
lock
out
mov
and
sahf
int
cltd
jl
mov
add
pop
pop
sahf
xchg
in
pop
mov
mov
cmc
je
cli
mov
sub
divl
mov
js
adc
mov
pop
lods
outsl
test
loopne
call
add
and
and
jg
daa
jmp
fcmovu
aam
mov
and
push
mov
inc
jmp
adc
into
loopne
in
fdivr
pop
out
pop
jp
xor
mov
rorb
mov
pushf
fdivl
mov
inc
arpl
lahf
xchg
mov
or
push
sbb
push
lods
inc
push
lret
test
rcr
add
jne
rcl
push
xchg
lret
repnz
aas
and
adc
pop
inc
add
das
lods
cmp
repnz
popf
or
mov
mov
mov
jne
and
movsb
fmul
aaa
in
lds
pop
cld
std
lock
lea
xchg
mov
dec
dec
repnz
adc
movsb
je
dec
loop
ficomps
cmpsb
icebp
jecxz
inc
cmc
jp
sbb
add
adc
pop
test
xor
xchg
rorb
cmp
fistps
or
insb
test
sub
gs
das
pop
orl
in
push
or
dec
out
sbb
jbe
cmpsl
push
and
iret
mov
daa
sbb
sbb
aaa
xchg
lea
jo
xchg
jnp
jns
push
shrb
and
xchg
ljmp
je
sub
popf
mov
cmp
ss
mov
rcr
mov
movsl
out
lock
push
dec
or
mov
std
sub
mov
ljmp
cwtl
adc
mov
inc
mov
cld
mov
jnp
inc
mov
rcl
stos
cwtl
jg
mov
outsl
cwtl
cli
data16
jno
xor
nop
icebp
adc
repz
ficoms
sub
jno
adc
jns
or
mov
mov
lret
les
cmpsb
aad
push
stc
leave
pop
into
bound
mov
jae,pn
movsl
popa
mov
push
out
cmp
dec
push
mov
push
push
push
add
xchg
lods
cmp
or
jne
pop
xchg
xchg
sbb
pop
push
loope
jne
jno
lods
cmp
dec
inc
xchg
jo
pop
add
xchg
shrl
leave
mov
dec
ret
loope
adc
int
adc
data16
ror
stc
cmp
jbe
mov
mov
ficompl
in
or
add
xor
mov
ret
jecxz
les
movsb
xor
mov
push
mov
xlat
outsb
push
rorl
loopne
or
xor
jb
adc
and
sub
push
or
negb
pop
mov
imull
pusha
or
ljmp
add
call
cs
inc
lock
ret
ret
push
mov
sahf
addl
scas
push
mov
fldt
gs
mov
rclb
sub
and
leave
jae
inc
push
mov
call
jg
sub
vpsubb
repnz
dec
inc
cmc
adc
shll
in
lds
cmp
sbb
dec
and
out
jnp
es
lds
mov
jmp
ja
mov
popa
ss
rol
stc
mov
fnstcw
imul
pop
pop
or
sbb
loopne
and
addb
bound
imul
xor
xchg
mov
xor
iret
mov
push
inc
shll
test
dec
pusha
push
inc
daa
mov
push
cmp
adc
test
or
int
mov
fbstp
xchg
aad
sub
adc
pop
sti
insl
sub
cmp
out
jne
jno
dec
and
push
cmp
addr16
and
sbb
and
xor
push
jge
dec
stos
adc
xchg
mov
ljmp
fisttpl
fcomi
mov
and
call
sbb
or
push
xlat
shlb
pop
pop
hlt
addr16
adc
out
pop
addr16
xchg
out
lods
push
and
and
out
xor
and
bound
jb
jnp
out
mov
repz
daa
cmpsb
andl
flds
jge
filds
icebp
insb
push
mov
sub
jecxz
lds
pop
loope
and
sub
pushf
cmp
enter
nop
pop
ret
mov
loopne
out
sbb
into
dec
aad
inc
enter
mov
push
fwait
cmpsb
push
push
cmp
test
sahf
outsb
ds
mov
lret
into
push
pop
mov
mov
sar
repnz
pushf
pop
cltd
adc
jb
arpl
fs
jb
cwtl
jge
aas
push
lahf
jns
out
inc
dec
sub
add
mov
mov
dec
je
mov
dec
inc
test
mov
mov
mov
cmp
jp
rcrb
fucom
bound
in
sub
test
loopne
lea
cmp
push
cli
sbb
add
cmpsb
inc
lret
insl
inc
outsb
fcom
push
sbb
popl
mov
jecxz
add
cmp
mov
dec
cld
in
jb
mov
jbe
jp
jl
sbb
scas
out
scas
and
lcall
sub
dec
mov
push
inc
lods
mov
sti
popa
cwtl
insl
popf
jp
mov
fbld
pop
icebp
push
clc
dec
sbb
scas
ret
jge
aas
mov
push
jmp
or
and
inc
loope
sub
cmpsl
push
shlb
push
mov
into
outsl
fs
ds
fldt
or
sbb
xor
in
loopne
mov
pushf
xchg
lock
xchg
popa
test
aam
sbb
mov
jo
xor
dec
jb
mov
pop
insb
dec
and
mov
push
push
xchg
pusha
and
mov
call
mov
add
mov
es
mov
push
out
sub
repz
add
xor
xor
push
jns
lods
jno
dec
sbb
stc
mov
jge
in
gs
icebp
notb
sbb
pop
imul
or
cbtw
push
in
lock
cmp
std
sub
test
cmp
adc
add
cwtl
push
cltd
lods
adc
mov
push
add
scas
lcall
jecxz
mov
popf
push
jb
xchg
out
xchg
jo
adc
push
adc
mov
mov
jno
sbb
add
enter
nop
lret
push
outsb
loopne
jb
in
add
mov
adc
inc
pop
cltd
fisttpl
ja
test
add
insb
fdivr
repz
xchg
aaa
adc
cs
push
mov
in
fidivs
out
rcl
gs
inc
jne
inc
sbbb
lods
push
stos
push
push
lods
lea
imul
movsl
sub
out
mov
das
push
fwait
out
cmp
xchg
mov
inc
sbb
dec
inc
insl
cmp
xchg
or
sete
iret
push
cmp
xor
and
jl
sbb
mov
shr
stos
xchg
sbb
test
lret
and
ret
sub
adc
pop
cld
or
test
push
sub
leave
lcall
inc
and
icebp
add
repz
mov
pop
imul
lods
add
add
fildl
sbb
mov
int3
push
das
popa
sbb
inc
int
add
pop
test
push
call
loopne
mov
jnp
cmp
mov
ljmp
mov
and
imul
sti
push
jb
mov
daa
ss
add
sub
xor
addr16
dec
pop
and
mov
jmp
fldl
dec
mov
mov
ja
adc
cmc
rclb
xchg
cs
imul
mov
mov
int3
mov
jno
jns
or
sahf
shrl
cmp
shrb
mov
cmp
xor
daa
iret
mov
and
cltd
repz
sbb
push
and
pop
imul
pusha
jb
pop
jmp
xor
out
insl
shlb
jae
mov
mov
jle
xchg
xchg
push
clc
mov
push
in
das
mov
fidivs
fwait
add
inc
xor
sub
xchg
and
insb
mov
jno
mov
mov
lret
stos
inc
xchg
xchg
imul
jbe
adc
into
movsb
lret
js
push
mov
in
cmp
jno
sub
outsl
popl
xchg
mov
xchg
dec
jbe
fidivrl
ss
ret
addr16
jl
xor
cmp
xor
mov
es
sub
bound
xor
and
sti
lods
pop
mov
popf
mov
inc
out
and
out
inc
jbe
loopne
jecxz
inc
cs
fidivrl
mov
cwtl
and
test
lods
shll
xor
inc
add
push
push
and
or
dec
daa
mov
scas
sbb
dec
xchg
fsts
daa
sub
out
loopne
inc
hlt
andb
mov
cmp
adc
mov
fidivs
pop
movsl
sub
fistpll
xchg
iret
jmp
mov
adc
push
and
cld
jp
hlt
lahf
insb
mov
inc
xor
push
dec
mov
bound
sbb
lahf
and
aad
sahf
fcom
adc
rcr
nop
loope
xor
clc
rcrb
test
loop
sub
and
xchg
daa
xor
cmc
xor
and
pushf
mov
fs
mov
in
cli
push
icebp
or
jb
sbb
jge
out
fsubr
sub
popa
lods
jns
jne
jmp
test
push
xor
sub
repnz
xor
cld
xchg
shr
test
pop
jg
stos
add
jmp
stos
aaa
mov
dec
test
adc
cmpl
ja
or
sbb
popf
mov
leave
ja
push
lret
jo
sub
cli
mov
andl
dec
lds
rcrl
fwait
dec
shlb
push
add
int
xchg
lds
dec
hlt
mov
clc
xor
jb
leave
mov
test
rolb
pop
mov
lahf
lcall
rclb
pop
and
push
and
or
sub
jb
xor
mov
mov
out
or
jecxz
inc
xchg
mov
cwtl
and
jb,pt
fcmovnu
mov
mov
push
pop
test
adcl
sbb
mov
xchg
rol
out
int3
dec
xchg
insb
sub
adc
repnz
ja
decl
imul
cmc
dec
adc
loopne
leave
orb
loopne
xchg
out
divb
cmpl
push
fwait
pop
leave
xchg
or
addr16
dec
loopne
push
jbe
fldt
mov
insl
xchg
inc
sub
mov
mov
or
jne
lret
push
push
inc
into
shlb
or
fisttpll
add
cmp
xor
cmp
push
sbb
lods
xchg
or
arpl
push
adc
inc
pop
push
nop
push
cmp
mov
gs
mov
add
repz
dec
mov
jne
pop
add
sti
mov
shlb
push
pushf
ret
adc
repz
rcrl
lock
xor
inc
and
sub
gs
inc
imul
movsb
fdivp
xchg
jns
pop
dec
ss
enter
fs
pop
xor
sbbb
pop
sbb
sbb
mov
mov
inc
push
and
int3
xchg
arpl
sub
pop
addl
push
push
jnp
cmpsb
repnz
rol
int
add
in
pop
sbb
mov
xchg
push
test
shll
dec
inc
daa
dec
gs
adc
and
ljmp
jno
mov
scas
popf
cld
mov
mov
bound
jne
mov
ljmp
shlb
add
lret
sub
mov
test
out
xor
mov
push
jno
cmp
cld
mov
vmovhpd
aam
hlt
push
ret
xor
arpl
mov
cs
jo
mov
in
popa
mov
lods
jle
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
movl
xor
or
mov
and
lea
mov
push
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
lea
mov
or
mov
and
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
addl
mov
add
sbbl
push
xor
mov
mov
movzbl
sub
mov
mov
adc
xor
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
movl
cmp
movl
jne
push
jmp
mov
movzwl
mov
cmp
jne
mov
incl
xor
add
mov
adcl
mov
mov
xor
sbbl
add
imul
and
mov
andl
xor
add
cmp
movzbl
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
jmp
imul
stos
sbb
and
loopne
jl
dec
pop
jl
scas
dec
cli
into
push
inc
loope
xor
mov
hlt
into
loop
dec
push
cmp
outsl
cs
jns
mov
mov
in
xchg
lds
popf
jb
push
jne
mov
les
cmpb
cmp
xor
mov
out
aam
popa
lahf
sub
test
pop
sub
ss
add
mov
fnsave
subl
pop
aaa
aad
bound
mov
cmpsb
jg
and
test
fwait
bound
daa
cmp
mov
call
dec
mov
mov
sub
jmp
jb
or
in
daa
xchg
rorl
jmp
cmpsl
sti
inc
xor
dec
andb
loopne
ds
adc
ret
sahf
out
repnz
leave
pop
outsb
jb
rclb
push
xor
sarl
subl
xchg
or
repz
inc
ljmp
adc
test
ror
ja
jno
push
push
in
addr16
mov
or
cmp
push
jne
push
push
fwait
negl
pop
cmp
movsb
xor
mov
jecxz
data16
jns
jo
fisubrl
ret
daa
push
or
mov
adc
xabort
les
mov
sbb
pop
sbb
iret
faddl
lahf
test
cld
adc
mov
push
push
mov
sub
and
dec
or
cmpsb
mov
cmpsb
in
stos
jb
decl
push
fwait
mov
fsubrl
pop
imul
repnz
cmp
sub
fwait
xor
int3
jp
pop
xor
cmc
mov
xchg
in
stos
jnp
dec
xor
push
fiadds
mov
xor
dec
sbb
scas
add
insb
cli
mov
daa
ljmp
lea
or
mov
insb
or
mov
ja
lods
cwtl
dec
int
lahf
imulb
jns
or
scas
jns
inc
xchg
xchg
iret
int
loopne
xchg
mov
push
or
test
jl
sarb
jb
popa
cwtl
pop
ljmp
dec
lea
leave
mov
rcll
mov
stc
daa
xchg
mov
or
lods
mov
fistpl
addr16
pop
in
loopne
ljmp
imul
mov
daa
mov
data16
pop
adc
mov
popf
lret
add
and
and
pop
stos
cmp
cmp
adc
mov
fistl
xor
xchg
lods
cmp
cs
push
and
fisubl
ret
fs
jp
xchg
xchg
and
jl
lods
aas
cwtl
jge
dec
hlt
or
idivb
sbb
leave
and
test
mov
mov
or
sbb
pop
lcall
inc
dec
mov
arpl
xchg
push
imul
nop
xchg
pop
in
dec
divb
push
leave
pop
adc
fstl
in
pushf
inc
cmp
or
aam
adc
out
or
add
push
jbe
stos
fisubl
stos
cmpsl
push
rorb
mov
mov
pop
xchg
cmc
jnp
cmpsl
cli
mov
enter
sub
mov
repz
addb
xor
in
add
dec
xchg
imul
cmp
punpcklbw
mov
cmpsl
xor
scas
inc
dec
push
mov
mov
sbb
mov
rcrb
imul
lds
outsl
cld
fsub
fisttpll
fldt
sub
inc
repnz
cmp
xor
mov
gs
outsb
inc
inc
and
fbld
mov
jo
in
or
mov
imul
jle
into
out
lods
inc
adc
adc
ficompl
jno
lds
sbb
lods
das
loope
pop
lods
jbe
lock
jnp
inc
inc
jb
cmp
iret
jne
cmp
push
sti
xor
es
jge,pn
mov
push
sbb
aas
data16
jo
add
add
pushf
sub
mov
jae
jg
repz
dec
sbb
inc
cli
jnp
test
aad
xlat
mov
pop
push
inc
lahf
pop
jmp
jo
dec
hlt
mov
add
push
xchg
add
push
push
and
cmpsl
filds
mov
fidivrl
imul
cmp
aaa
pusha
stos
jge
mov
push
add
push
sbb
jns
jecxz
sbb
fildl
xor
push
repz
jg
sbbl
push
lods
pop
sbb
aas
enter
adc
xchg
jmp
addr16
jl
add
jns
inc
roll
popl
mov
in
jge
jmp
imul
into
mov
stos
pop
popf
and
mov
pusha
jb
sahf
repz
imul
pop
and
ret
rcr
dec
rcll
or
lods
pop
sub
es
xchg
out
push
push
jne
jno
pushf
jmp
in
div
xor
movsl
sub
jno
dec
mov
aam
cmp
mov
in
and
inc
jno
push
out
sub
in
into
ljmp
shlb
outsl
or
fcmovnb
insl
jl
das
lret
jo
mov
add
shll
stos
pop
add
push
xchg
pop
jb
inc
cmc
rorl
and
ss
push
xor
mov
stos
jb
mov
fs
xor
and
xchg
jmp
cmp
pop
fidivrl
adc
fbstp
loopne
fucomi
sub
dec
out
xchg
mov
cmpb
pusha
iret
mov
sbb
lcall
std
lcall
xor
xor
mov
mov
js
cmpsl
push
push
repnz
xor
jbe
mov
sub
mov
pop
sub
pop
xor
jl
cmp
mov
jmp
and
mov
out
mov
add
test
jmp
pop
dec
jae
xchg
sub
dec
es
jnp
call
ds
shll
sub
dec
fwait
test
orb
dec
push
or
cld
negb
sub
popa
mov
push
sbb
xchg
mov
sub
cli
cwtl
add
mov
inc
inc
les
addr16
pop
stc
testb
or
loopne
sbb
sahf
js
mov
testl
andl
xor
shlb
cmp
dec
sub
ret
out
and
adc
jo
cmp
xchg
pop
in
mov
jge
aam
fimull
inc
fstps
pop
in
lds
cwtl
insb
loope
addr16
or
sti
xchg
and
int3
jmp
daa
lock
and
xor
inc
aam
clc
jle
sbb
sbb
fs
stos
daa
imul
jg
icebp
pop
sbb
lods
or
ja
adc
pusha
push
mov
lret
cmp
mov
sub
jne
sub
sbb
mov
sbb
popf
iret
xchg
adc
xchg
fisubl
les
sub
xchg
xor
rep
pop
sbbl
lea
movzwl
mov
dec
outsl
fcomp
pusha
in
and
mov
jp
into
jno
push
les
and
cwtl
sub
ret
xchg
lods
push
jp
jecxz
movsb
fsubrs
cmp
loopne
dec
mov
adc
test
push
xchg
imul
stc
fs
sub
push
bound
int
out
dec
fwait
lret
or
bound
fldt
xchg
shlb
xchg
test
push
sbb
repnz
inc
add
sub
cmc
enter
cmp
pop
push
es
rcrl
add
ficoms
mov
push
mov
outsb
xor
repz
jbe
insl
mov
cld
repnz
loopne
ret
or
and
push
and
pop
inc
mov
lock
or
outsb
fsubl
out
clc
fld1
mov
mov
fcmovnu
sbb
lea
aas
jne
inc
jg
aam
test
popa
popf
in
push
cli
push
inc
ss
insl
dec
add
mov
ljmp
mov
adc
xchg
push
sub
pop
pop
inc
inc
insb
push
pop
in
int
lock
ret
jl
lcall
mov
icebp
mov
stos
mov
repz
lret
test
lret
loop
mov
jnp
into
nop
or
sbb
cmp
pushf
aad
mov
rcrb
mov
xchg
repz
mov
cmp
pop
inc
aaa
jg
xchg
cmp
js
jbe
stos
ds
or
push
shl
mov
movq
into
and
test
fdivl
loop
xchg
push
inc
sbb
daa
sbb
in
lcall
push
and
add
insl
mov
sub
push
mov
inc
cmp
loopne
pop
cwtl
stos
jecxz
dec
dec
mov
mov
inc
stos
dec
inc
movsb
push
push
jne
adc
cltd
xor
or
ja
or
stos
xor
push
push
outsb
sbb
mov
test
rol
push
adc
lds
jns
push
pop
repz
cmpsl
cmpsl
fistps
fistpl
adc
mov
ss
loop
push
or
lea
outsb
movsl
daa
pusha
popf
cwtl
aad
add
orl
pop
jns
mov
cli
mov
cs
and
lret
and
int
ds
mov
sub
push
xchg
xchg
pop
vpmacsdqh
sbb
test
out
rcrl
sub
and
add
das
adc
add
xor
jge
insb
sub
lods
xchg
out
mov
mov
data16
rcll
xchg
sahf
scas
mov
addr16
pushf
std
add
out
mov
rcll
ss
jmp
push
sbb
xor
xchg
dec
xchg
loope
mov
mov
add
pusha
jo
stc
and
insb
repnz
jno
xor
add
adc
fiadds
push
dec
sub
cmp
cs
daa
repz
into
cmp
pop
or
sarb
jnp
push
fmul
jne
fidivs
nop
and
add
lds
adc
loopne
mov
cmc
push
sub
and
mov
shl
or
adc
push
mov
imulb
fnsave
stos
outsl
push
xor
xchg
shll
xchg
inc
fs
pop
pop
lds
or
sub
insl
iret
nop
dec
nop
flds
sbb
sbb
arpl
sub
clc
data16
mov
cmp
pop
outsl
test
fucomi
mov
hlt
mov
pop
repnz
das
pusha
movsl
or
mov
test
mov
mov
les
lea
jg
cli
push
fildll
jbe
test
mov
test
adc
lret
test
or
psubw
xor
dec
mov
push
lahf
imul
sbb
push
popf
push
stc
xchg
std
mov
rol
lods
orb
sub
lret
pusha
push
cmp
cmp
jo
mov
out
pop
jg
sbb
ret
pop
movsb
add
popf
pushf
inc
xchg
iret
int
roll
inc
out
dec
stos
movsb
inc
xor
cmc
xlat
ds
lods
stos
pop
jb
cmp
or
fisttpl
clc
enter
ret
rcr
ds
loop
add
cmp
loope
stos
movsl
cwtl
jg
jo
scas
and
dec
gs
jl
push
aas
in
lahf
jb
push
mov
or
popa
data16
fstpl
cs
mov
js
push
sub
inc
xor
jne
hlt
sub
sub
or
adc
ficomps
test
and
add
loopne
decl
and
lahf
cltd
cltd
jp
xchg
in
cmp
push
sbbl
mov
jecxz
insb
mov
lock
dec
cs
fimull
push
xchg
and
arpl
ja
arpl
hlt
pop
incl
inc
imull
sbb
inc
dec
loopne
cmc
push
inc
jb
aas
and
loop
test
movsl
mov
and
xchg
inc
repnz
fidivl
jge
push
or
addb
pushf
xor
jae
pop
sbb
dec
shl
jmp
sti
fisubrs
push
shrl
adc
lods
sbb
test
mov
xchg
jp
int3
pop
test
mov
mov
sti
mov
and
pop
mov
mov
sub
lock
out
fldcw
mov
cmp
nop
inc
xchg
xchg
xchg
cmpsl
inc
cmovno
shll
in
xchg
xlat
testb
jmpw
jle
sti
jmp
or
push
pop
and
ds
jmp
shll
lahf
aam
mov
mov
ret
dec
jae
sahf
icebp
fnstcw
popa
or
cmovb
mov
sbb
lret
in
jmp
add
fildl
loopne
dec
fucomp
dec
or
mov
xchg
jno
pop
mov
add
aam
dec
test
xchg
pop
jo
fimuls
mov
pop
and
sbb
push
cmp
daa
dec
enter
outsl
sbb
insl
pop
jnp
insb
jecxz
movsb
xchg
push
dec
sti
push
xchg
test
sbb
xchg
mov
in
arpl
dec
bound
cwtl
mov
pop
test
xor
movsb
cmp
mov
seta
add
js
adc
imul
dec
push
out
rorl
inc
sbb
adc
fwait
popf
sbb
xchg
or
mov
mov
pushf
ret
je
les
call
dec
push
cmpsl
pop
xchg
dec
dec
sub
outsb
xchg
mov
mov
or
pop
adc
cmp
test
fwait
cmp
inc
icebp
cmpsl
jmp
inc
add
mov
mov
cmp
push
push
xor
cwtl
mov
cmp
jle
aad
subb
stc
fsubs
hlt
sbb
fwait
pop
jb
repnz
aaa
push
mov
jb
xchg
inc
push
int
enter
xor
pop
xor
jg
sbb
mov
ja
lds
xchg
mov
jne
xor
add
pop
dec
jmp
or
inc
insl
dec
mov
mov
ja
repz
dec
cltd
ficoml
test
and
mov
mov
aas
dec
mov
loope
cmpsl
gs
in
test
scas
jg
jecxz
pop
jg
dec
cmp
andb
sbb
cmp
je
insl
test
jle
dec
aaa
push
add
mov
and
sbb
pop
cwtl
sbb
repnz
xchg
jmp
xlat
and
add
mov
cmp
ret
jbe
pop
xor
jb
mov
push
lret
fists
jge
jle
mov
mov
test
xor
cmpsb
lret
xor
adc
jle
jno
mov
xor
int3
dec
xchg
lahf
sbb
xor
cmc
ds
movsl
and
jg
movsb
inc
mov
mov
xor
mov
filds
fsubrs
test
push
sub
lock
dec
shrl
pop
mov
and
jae
insl
cmp
xlat
add
adc
adc
leave
arpl
mov
sbb
mov
popa
aam
imul
addb
push
scas
mov
add
in
xor
cmp
add
ficompl
add
xor
and
lds
rcl
decl
sahf
sub
add
mov
test
xchg
inc
lods
aam
in
mov
jecxz
mov
sbb
and
or
xor
xchg
dec
inc
orb
enter
rcrl
add
daa
imul
js
sbb
test
cmpsb
mov
out
negl
mov
lret
xchg
std
hlt
pop
cwtl
fldenv
lret
loopne
stos
dec
sub
sbb
insl
xor
add
xor
fidivl
mov
jg
sahf
test
test
sub
dec
jge
xor
stos
testb
int
insb
test
sbb
push
mov
pop
dec
filds
sub
and
fs
xchg
xchg
push
les
ds
xor
in
pop
bound
mov
addr16
lcall
jb
gs
mov
out
add
das
xchg
cmp
repnz
and
sub
outsl
xchg
leave
clc
stc
enter
push
call
ja
hlt
frstor
in
or
pop
cmp
adc
call
mov
jno
filds
out
mov
sahf
mov
jo
sbb
cmp
fsubs
or
sahf
call
lock
inc
test
fistpl
ss
jae
jo
rolb
or
lds
std
out
popf
subl
and
jne
xor
xchg
cld
notl
dec
testl
jl
inc
lods
xchg
or
jle
loop
jge
sbb
mov
xchg
push
pop
sbb
adc
xchg
loopne
push
fstl
into
out
std
aam
jae
mull
insb
ret
mov
jns
dec
push
aad
jl
sahf
mov
aad
sub
pop
jb
repnz
fildl
insl
or
rclb
sti
cwtl
leave
fcomps
jns
rol
lcall
add
jb
xchg
sub
or
jl
sub
mov
mov
push
xchg
sub
enter
int3
sbb
fldenv
fisttps
pop
mov
sbb
mov
adc
inc
clc
mov
ja
movsl
mov
ljmp
or
jno
aas
cmpsb
pop
jo
push
mov
ja
in
push
xor
dec
mov
cmp
std
loopne
outsl
mov
cs
outsl
sahf
xchg
push
lock
stos
cmp
stos
and
mov
sub
lret
xor
std
and
insb
mov
loope
adc
push
and
in
int3
push
xor
mov
sti
js
inc
xchg
fcomps
icebp
mov
dec
and
pop
std
bound
xor
sbb
pop
and
xor
rcrl
dec
aad
cmp
mov
mov
insb
xor
or
xchg
enter
outsl
push
mov
arpl
repz
mov
cmp
dec
sub
mov
push
stos
jns
mov
push
jne
ret
xor
loop
clc
push
cmp
sbb
xor
xchg
xor
xor
jno
mov
loopne
imul
lods
addr16
test
lods
pop
xor
cwtl
xchg
fadds
stos
addl
inc
pop
lahf
lods
rol
sbb
call
pop
stos
bound
add
js
test
lock
ss
sbb
jnp
loope
rorl
mov
loope
dec
jge
push
jns
fs
push
int3
mov
mov
imul
rcrb
pop
fs
xor
mov
xchg
loope
ret
jnp
add
jmp
push
repz
xlat
xchg
xchg
sahf
mov
jbe
out
xor
jge
cmc
call
in
push
adc
outsl
imul
jns
push
mov
mov
mov
cli
icebp
dec
fistpl
lea
dec
mov
rsqrtps
mov
adc
mov
cmpsb
add
sub
adc
iret
es
jb
push
inc
outsl
xor
fldt
dec
mov
mov
in
sub
adc
call
or
ds
mov
push
sbb
pop
loope
fwait
in
mov
mov
jno
cwtl
sti
mov
gs
lret
lods
pop
jle
mov
xchg
data16
arpl
adc
aad
or
sbb
ja
cmp
add
movsl
jnp,pt
jns
pop
test
pop
adc
sub
icebp
ds
pushf
xchg
dec
adc
subb
pushf
jns
sahf
or
xchg
fisttpll
jnp
and
fisttps
cmp
adc
call
inc
jecxz
pop
or
aam
dec
insl
in
stos
inc
and
repnz
push
clc
in
push
leave
jg
lahf
cld
ror
adc
ja
cmp
jg
mov
test
popf
push
std
and
into
xor
adc
imul
mov
pop
cmpsl
mov
jns
sti
cmp
cs
out
outsb
shr
sbb
cmp
rcl
or
mov
cmp
pop
push
arpl
pusha
xor
sub
imul
cmpb
lahf
cld
add
push
cmpsl
dec
adc
orb
adc
dec
add
mov
sbbb
dec
adc
add
sub
cs
cs
jb
sbb
jp
fidivrl
cmp
or
push
mov
scas
mov
cmpsb
and
out
or
adc
divl
pop
or
cld
adc
daa
inc
fistps
xor
push
dec
data16
sbb
sbb
fcomps
mov
jl
mov
adc
punpckldq
add
testl
and
xchg
arpl
adc
mov
out
adc
mov
test
jge
pop
bound
mov
inc
or
cmpsb
adc
not
mov
xchg
insb
mov
jnp
clc
pop
shrb
mov
out
outsb
add
addr16
mov
sbb
sarb
mov
lahf
cwtl
js
pop
and
loope
mov
mov
xlat
or
cmpsb
movsl
push
lahf
sub
and
sbb
imul
fcompl
in
or
dec
sub
xchg
cltd
adc
add
int3
and
xchg
fbld
arpl
dec
pushf
insl
outsl
fldl
std
out
ret
lods
ret
movb
stos
cs
mov
xchg
inc
sub
or
or
xor
jg
rcll
adc
outsb
pop
popf
popa
pop
and
pop
je
mov
jbe
mov
pop
jnp
out
mov
xor
mov
in
or
ds
pop
mov
fistl
adc
ja
mov
movsb
xor
fidivrl
pop
jno
push
mov
or
jno
dec
pop
icebp
fstl
in
adc
cmp
fsub
adc
pop
mov
imul
rcl
ljmp
cmp
and
and
hlt
daa
test
shlb
xchg
mov
rcrl
fldt
or
orl
cmp
lods
lds
inc
push
test
inc
add
js
or
push
scas
push
int3
out
cld
fidivl
xchg
in
push
pushf
cvtps2pi
or
sbb
adc
std
push
fld
in
roll
fisubrs
es
mov
dec
lds
ret
add
add
das
scas
scas
mov
les
std
adc
inc
insl
add
or
cwtl
fisubl
aad
outsb
scas
inc
add
or
xchg
add
mov
jp
xchg
test
lods
or
push
outsb
std
mov
cmp
xchg
xor
int3
xor
jno
sbb
js
or
int3
pop
mov
rcrl
lcall
mov
mov
test
xlat
inc
pop
mov
test
dec
rcll
scas
mov
add
fadd
adc
sti
movsb
stc
sub
test
dec
lahf
inc
sahf
mov
and
stc
sub
je
imul
fmull
gs
lock
adc
push
xchg
daa
mov
hlt
jns
jo
ds
inc
adc
ds
mov
cmpsl
pop
push
jbe
mov
push
adcb
loopne
orb
es
mov
jl
mov
pop
in
cmp
cmpsb
push
scas
jle
dec
add
jle
repz
or
orb
fs
ficoml
xchg
push
mov
xchg
add
call
sub
xor
xor
cmpb
mov
imul
push
into
lds
sahf
mov
imul
out
dec
push
out
adcb
movsw
xchg
aad
outsl
pop
iret
scas
test
xchg
mov
cmpsl
lret
xor
test
pop
mov
cmp
inc
ds
ds
cltd
les
jb
push
movsl
out
ret
jle
fst
xchg
insb
sub
jle
stos
popf
xchg
jae
in
mov
xchg
xchg
mov
clc
and
add
rcl
js
cmp
call
xchg
shr
loope
stos
loop
sbbb
dec
lahf
and
fstps
xchg
scas
pop
into
outsb
cmpsl
rorl
daa
fiadds
enter
jbe
mov
adc
sub
aad
mov
negb
jle
in
cmp
xor
jbe
into
mov
scas
mov
sub
cmpsl
loop
sub
test
pop
or
mov
mov
mov
int3
add
fildll
fnstsw
xchg
icebp
xchg
inc
addb
add
cltd
and
mov
cli
mov
mov
xchg
xchg
imul
outsb
mov
aad
fcmovu
jne
jge
out
fildl
xchg
jns
ficomps
movsl
dec
fdivrs
cmpl
mov
add
mov
in
push
adc
call
dec
dec
push
loop
roll
jne
xchg
dec
loopne
sub
mov
sub
mov
fisubl
mov
add
ffreep
push
push
mov
push
mov
aas
sbb
push
insl
outsl
int
xlat
aas
pop
sbb
sahf
pop
movb
and
js
icebp
aas
bnd
mov
xlat
dec
push
cs
cmp
xchg
jbe
je
xchg
inc
cltd
mov
repnz
xchg
jmp
adc
inc
icebp
xchg
in
nop
xor
mov
aad
xor
sub
lods
test
jecxz
es
test
jge
jg
push
dec
xor
jnp
in
mov
ret
outsl
sti
cmpsl
fimull
shrl
mov
loop
arpl
jne
sbb
add
mov
call
jo
mov
push
mov
mov
aad
pushf
out
nop
add
movsl
pop
jae
aas
enter
sbb
cli
out
cltd
push
sub
lock
or
jge
jl
and
sub
sbb
bound
and
int3
addr16
test
or
in
jno
lret
mov
xchg
mov
mov
pushf
bnd
sub
dec
sbb
stc
sahf
aas
pop
pop
insl
shlb
ret
or
add
dec
sub
test
and
scas
repnz
je
mov
ret
nop
pushf
mov
sbb
inc
jmp
lods
xchg
cli
jge
inc
xor
pop
notl
mov
ret
or
popa
cs
jno
dec
data16
xor
in
pop
dec
hlt
imul
pop
push
out
push
and
jnp
sub
add
pop
bound
repz
ror
cmpsl
adc
adc
mov
push
mov
arpl
ja
imul
jno
and
rcrb
addr16
push
cmc
jb
mov
mov
push
sbb
and
sub
into
mov
imul
adc
imul
sahf
outsb
jp
xchg
and
rclw
or
out
dec
test
clc
add
stos
pop
aam
xchg
sbb
push
lock
mov
pop
add
cmpsl
outsl
sahf
mov
jge
pusha
cwtl
cmpsb
mull
and
xchg
push
loop
sbb
xchg
rorl
cwtl
push
xchg
adc
and
pop
cmp
pop
mov
or
aaa
cld
add
xor
jmp
mov
mov
xor
es
das
sub
rclb
pop
andb
xchg
adc
sub
loope
sbb
cmp
push
cmp
inc
inc
imul
or
scas
or
pop
bound
dec
aas
enter
fstps
cwtl
cmp
jecxz
inc
sbb
out
or
adc
insl
inc
xor
pop
rdpmc
jg
pusha
arpl
insl
mov
push
mov
repz
xchg
aad
mov
aad
pop
sbbb
add
xor
leave
xchg
mov
xchg
inc
sub
xchg
inc
movsl
push
inc
mov
movsl
dec
xchg
out
stos
lods
pushf
cmp
scas
cmp
dec
sbb
fidivl
arpl
xor
je
mov
dec
test
or
lods
add
dec
pusha
aad
jb
mov
mov
push
cmp
push
into
scas
orl
js
jne
dec
mov
mov
add
clc
mov
dec
ljmp
cmp
cmp
inc
arpl
push
xor
and
xorl
outsb
add
push
loopne
daa
sbb
das
or
add
jb
insb
dec
pop
mov
shlb
repnz
sub
imul
sbb
inc
loop
push
cmp
sub
insl
push
sbb
aad
js
mov
sbb
popfw
push
mov
mov
cmp
jmp
sub
or
sub
sub
lds
mov
into
jno
mov
jne
test
xchg
call
push
in
clc
mov
pop
push
sbb
lds
inc
inc
aaa
pushf
cmpsl
cmp
cmpsl
add
aas
dec
xor
fsubrs
and
je
ss
lds
xchg
arpl
add
mov
inc
mov
fwait
test
aas
push
notl
repnz
or
dec
xchg
stos
push
cmp
cmp
inc
rolb
ja
inc
mov
xlat
add
cmpsb
stos
ja
bound
jno
lea
push
scas
mov
sub
shl
enter
mov
cmp
leave
cmp
inc
aad
cld
cmp
lock
cmp
test
push
jmp
jge
mov
dec
pop
pushf
insl
mov
repnz
jne
ss
ljmp
jae
es
inc
or
push
fistps
cmpb
popa
jns
inc
in
mov
inc
fs
enter
pop
sbb
add
dec
je
and
fisttpl
adc
fwait
insb
lcall
mov
out
inc
sbb
cwtl
hlt
fcoml
jp
adc
stos
mov
or
jb
daa
mov
js
ret
lret
addr16
or
push
ficomps
and
shll
sbb
dec
push
dec
aas
mov
lret
cmp
sbb
dec
mov
jno
ds
push
cmc
push
fwait
jecxz
add
loope
aaa
xor
xor
ret
loopne
loop
mov
subl
clc
movsl
xchg
mov
adc
dec
push
push
adc
sub
push
enter
inc
pop
push
shl
pop
dec
push
xor
stos
loope
and
subl
push
aas
and
les
rcrl
std
leave
push
mov
cmp
out
int3
scas
jns
push
mov
aam
add
in
insb
andb
cmp
mov
int3
cmp
mov
sub
cmp
scas
fidivrs
lret
cmp
jno
xor
and
clc
rcrb
mov
jge
stc
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
andl
mov
mov
mov
xor
add
mov
movzwl
and
mov
mov
sbbl
xor
adc
push
sub
mov
movzwl
sbb
mov
negl
add
xorl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
push
call
jmp
and
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
push
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
mov
in
xor
mov
cmp
aam
jl
inc
and
add
cmpsl
fcomp
push
fistpl
cld
lods
push
fidivrl
add
xchg
or
imull
shl
push
adc
or
sub
and
push
lret
adc
dec
dec
sbb
mov
imul
pop
xlat
and
sub
inc
cmpsl
xchg
popf
ja
jo
jbe
cmc
mov
shlb
cmp
mov
ss
jmp
sub
jo
cmp
ret
pop
daa
rolb
pop
inc
push
stc
cmp
dec
test
xchg
sbb
mov
in
xlat
cmp
jnp
int3
scas
xchg
out
inc
cmp
shll
mov
imulb
jb
sub
int
mov
iret
bound
sub
stos
xor
push
mov
push
inc
pop
mov
shll
or
jmp
adc
sbb
mov
rolb
test
scas
call
enter
dec
test
jp
sbb
dec
mov
pop
out
dec
nop
icebp
inc
aaa
push
pop
shlb
aas
push
std
ljmp
xchg
mov
add
push
movsb
adc
cmp
pop
cmp
insl
sbb
cmp
adc
fwait
lds
dec
xchg
lods
mov
ljmp
gs
int3
fisttps
lods
sbb
pop
cmp
fistps
pop
ficompl
push
dec
jne
and
movsl
sti
fld
jmp
dec
fwait
adc
mov
das
push
outsb
in
gs
test
push
js
pop
cmp
in
xchg
jns
mov
sbbl
out
adc
shl
inc
jmp
mov
mov
out
in
enter
das
mov
mov
iret
fisttpl
js
dec
lods
jmp
mov
int
je
mov
sub
xchg
mov
mov
mov
sub
aas
in
mov
fyl2xp1
or
cmp
add
add
dec
jb
test
inc
cmc
adc
insl
xor
out
xchg
jg
in
les
ds
and
xchg
sbb
sbb
adc
pop
in
sbb
pop
rcll
cli
loope
push
sbb
fwait
pinsrw
xchg
and
add
jns
outsl
and
movsl
or
push
pop
popa
cmp
decb
jle
js
fisubrl
rolb
loop
push
sbb
imul
pop
or
insl
push
mov
cltd
lret
and
mov
or
js
adc
push
mov
dec
add
insb
clc
loopne
mov
or
or
mov
xchg
cmc
outsb
mov
js
pop
adc
cmp
mov
cs
cltd
sarl
cs
mov
xchg
jbe
jp
pop
hlt
add
jg
fcomi
nop
idivl
xor
inc
dec
mov
sahf
subl
mov
jnp
hlt
fdiv
add
add
negb
or
add
mov
fs
jg
jo
cmp
xor
or
dec
scas
pop
test
int
lds
cmp
ja
pushf
push
mov
pop
mov
leave
dec
dec
sbb
jno
test
lahf
xor
or
cmp
repnz
clc
dec
xor
jo
and
sbb
jecxz
jns
pop
xor
and
pop
dec
pop
shl
mov
xchg
sahf
jle
cwtl
test
sbb
push
loope
test
cmpsl
int
push
aam
ja
jne
ds
lock
add
js
gs
insb
xchg
adc
pusha
mov
and
out
jge
dec
mov
inc
les
test
pusha
repz
loope
adc
sub
sbb
xor
jecxz
dec
xchg
sub
push
xchg
adc
xchg
pop
aad
pusha
les
adc
dec
call
loopne
xchg
and
push
sub
inc
mov
shll
dec
push
xor
jle
cmp
xchg
mov
sarl
pop
aas
loop
xchg
add
iret
dec
sub
xor
xchg
jmp
daa
cmc
inc
or
insb
divb
call
rclb
mov
cli
push
sub
cmp
jp
sbb
imul
stos
les
xor
xor
dec
cmp
and
addr16
adc
je
stc
popf
push
jno
add
push
insl
rcrb
inc
and
mov
xor
cmpsl
pop
cmp
push
fcomip
outsl
pusha
loopne
or
pushf
xchg
jnp
lds
hlt
test
mov
aam
in
mov
xchg
inc
sbb
rcrb
mov
pop
jae
dec
mov
test
lret
packssdw
lods
leave
push
lret
mov
push
and
in
in
jnp
std
add
xor
sbb
mov
je
movl
icebp
jbe
inc
ss
mov
call
shl
scas
into
mov
fstpt
push
xchg
repz
mov
je
adc
add
pop
sub
or
jae
and
addr16
insb
gs
outsl
outsb
inc
push
sbb
mov
xor
lahf
mov
enter
repnz
jno
xchg
jo
test
ljmp
adc
inc
test
lcall
out
dec
mov
mov
jmp
arpl
pop
xchg
jecxz
or
insb
lock
call
mov
cmp
sub
in
icebp
sbb
mov
pop
dec
dec
add
cld
je
dec
push
jb
and
jno
xchg
out
test
push
cli
push
out
daa
and
mov
pop
or
mov
mov
pop
jno
push
add
shl
ds
lds
outsb
inc
xlat
mov
pop
jmp
push
out
fdiv
xor
lods
add
adc
imul
sbb
sub
xor
sti
add
sbb
fidivrs
popf
sub
push
adc
pop
outsl
dec
jb
jno
jecxz
imul
push
dec
adc
in
stc
mov
add
shlb
push
outsb
nop
push
lret
push
ja
inc
mov
cmp
clc
repz
dec
int3
mov
mov
es
inc
mov
sahf
sbb
inc
lret
mov
or
push
int
push
test
pop
xor
mov
mov
dec
pop
test
cli
rcr
xor
scas
in
rcrb
mov
cs
or
xorl
cld
push
inc
popa
mov
jo,pn
into
mov
add
push
popf
out
cmp
push
jp
les
das
inc
xchg
into
jbe
mov
pop
jns
fdivrl
ja
ss
jmp
jbe
add
xlat
or
sbb
mov
int3
sub
cs
test
push
push
int
and
and
rorb
mov
std
imul
pushf
cli
mov
mov
rep
pop
int
add
jge
sbb
and
mov
pop
mov
ds
or
ss
cmp
data16
cwtl
mov
inc
mov
mov
aam
mov
and
push
fldt
mov
int3
aaa
adc
mov
pop
mov
bound
repz
rcrl
cmp
sub
int3
jb
insl
sub
fisubrl
pop
mov
std
pop
sti
or
adc
push
in
loopne
jns
and
movsb
cli
jb
jle
adc
rorb
jl
shll
or
jae
roll
iret
or
adc
js
sub
scas
shrl
repnz
aam
mov
ds
push
push
mov
aas
push
shl
push
in
add
jo
cld
ljmp
inc
mov
stos
aas
xchg
mov
scas
mov
popa
mov
bnd
jg
push
ret
push
xchg
sbb
push
aas
jp
iret
sbb
sahf
xchg
jle
outsl
pop
jo
scas
cmc
adc
in
sub
inc
jbe
in
mov
ret
push
std
jae
inc
lahf
mov
mov
xor
inc
and
out
je
mov
loop
cmp
outsl
sub
xchg
xchg
mov
loop
insb
pop
loope
xchg
pop
push
cltd
aaa
ret
bound
xchg
mov
or
dec
adc
fisubrs
push
insl
lahf
inc
mov
js
mov
inc
sbb
lods
push
pop
mov
ss
arpl
mov
push
movsb
pusha
cmc
push
mov
push
fwait
les
ret
sahf
mov
popf
sbb
addr16
sub
xor
pusha
add
lret
jle
data16
rcrb
xchg
rol
addb
int3
es
cmpsl
sub
sub
popa
dec
mov
scas
shlb
mov
push
andb
lret
fidivrl
fwait
stos
pcmpeqb
cmp
addb
enter
hlt
inc
fwait
aas
div
push
pop
lret
test
loope
and
sbb
adc
repnz
cmp
loope
jmp
or
enter
adc
cld
inc
loopne
push
jg
insl
popf
inc
jns
mov
not
mov
insl
cmp
mov
movsb
sti
and
pop
shrb
ficomps
cmp
lods
insl
or
lea
push
lods
loopne
sub
fwait
clc
push
aas
pop
popa
xchg
mov
cwtl
aaa
dec
jmp
lahf
arpl
xlat
sbb
in
fldenv
fstpt
rol
outsb
out
pop
mov
jb
lret
rcr
in
loopne
int
push
lahf
icebp
sub
dec
sbb
sub
add
fucom
adc
sub
shll
xchg
dec
in
mov
data16
add
test
test
movsl
inc
dec
das
punpckhbw
xchg
nop
ret
mov
fsubrs
mov
leave
mov
imul
cmp
shr
in
push
int3
and
push
lret
in
dec
shlb
push
mov
push
les
xor
fdivrp
int
aad
and
outsl
xchg
lds
ja
sub
imul
rcll
mov
jne
push
negl
cmpsb
xchg
sahf
out
out
pop
xor
cmp
fldcw
icebp
orl
pusha
dec
mov
clc
push
cmp
cmpb
dec
jno
outsl
lcall
xor
mov
scas
arpl
mov
lock
add
fwait
mov
inc
add
jl
jmp
test
add
subb
adc
xlat
gs
movsl
cmc
sbb
addl
icebp
cmp
data16
mov
dec
mov
sti
pushf
sub
xchg
and
mov
sbb
js
dec
push
pop
and
mov
out
lock
das
mov
sbb
jb
xor
dec
fsubrs
dec
xor
cmp
mov
lret
add
cmp
clc
dec
repz
test
sbb
call
mov
cli
jge
pop
sub
mov
push
adc
sbb
rep
insl
mov
lock
loop
addl
pushf
and
mov
jge
mov
adc
cmc
pop
sti
jb
push
sbb
cmp
dec
add
out
cmp
sub
sub
subb
addr16
jle
je
out
adc
lcall
xchg
lret
pop
test
mov
int
dec
mov
add
mov
loope
out
je
int
inc
push
mov
or
into
nop
adc
fmull
push
xor
sub
stc
xor
testl
or
sub
mov
iret
sub
inc
out
bound
ds
pop
push
jbe
jb
in
xchg
dec
psubq
dec
ja
mov
mov
adc
pop
pusha
jmp
jno
and
dec
jp
stos
cmp
fs
jns
or
stos
cld
cmp
arpl
test
pusha
adc
or
pushl
mov
scas
xchg
mov
inc
xchg
mov
mov
dec
imul
in
jge
test
xor
mull
pop
mov
sbbb
test
jl
mov
hlt
std
rclb
stos
jmp
jle
jl
fs
dec
push
push
dec
enter
aad
adc
and
cld
dec
sub
cmc
pusha
dec
jmp
push
jl
or
insb
mov
xchg
outsl
inc
ja
popa
push
push
or
stc
sbb
dec
inc
xchg
es
lret
or
outsb
mov
mov
cld
arpl
cmc
pop
stos
addb
sbb
test
push
in
mov
popa
xchg
pop
push
xorb
mov
sbb
xchg
jo
cs
js
or
add
and
mov
mov
inc
push
sbb
stc
loope
sub
and
push
mov
pusha
push
movsl
lcall
imul
mov
and
xor
sbb
sub
add
adc
jge
inc
das
mov
cmc
cltd
mov
inc
in
rcll
test
pop
mov
dec
addl
xor
rol
fwait
jnp
repz
sbb
jnp
jmp
subl
mov
push
in
arpl
movsl
popa
test
das
jp
in
ret
mov
or
fwait
lret
pop
int3
xchg
jo
xchg
fistl
sbb
cmpsl
push
iret
inc
shlb
rclb
fmul
xchg
movsl
push
sbb
mov
repnz
mov
add
push
adc
lds
mov
scas
movnti
out
cmp
fs
imul
scas
aad
imul
cmpsb
add
adc
add
ds
jecxz
xchg
pop
fmuls
lock
data16
or
subb
cmp
hlt
add
enter
adc
jnp
clc
sub
ja
clc
gs
fsubrl
int3
daa
nop
jmp
fisttpll
inc
mov
cmp
icebp
stos
test
sub
out
dec
dec
div
arpl
pusha
in
icebp
jo
or
or
cmp
hlt
xlat
ret
leave
inc
dec
insl
jb
dec
xlat
adc
testb
add
stos
movsl
jb
jb
rcrb
push
dec
jno
sbb
jbe
push
lcall
mov
loope
jmp
stos
mov
jb
mov
lahf
mov
aad
imul
scas
push
dec
mov
and
movsb
mov
xor
iret
loop
mov
pusha
jmp
pop
push
push
lret
mov
cmc
adc
call
mov
jp
add
loope
pop
filds
mov
std
xchg
dec
dec
mov
sub
fcomps
rcr
scas
aad
outsl
adc
xor
inc
dec
ljmp
push
adc
add
test
je
dec
sysexit
mov
jmp
sti
loope
or
sbb
dec
pop
into
rcl
shll
mov
xor
pop
inc
outsl
hlt
mov
sahf
enter
inc
pop
mov
fisubs
add
xchg
nop
imul
mov
or
cmpl
clc
push
pop
mov
jnp
popa
add
or
lea
imul
lds
es
xchg
mov
in
test
fs
jmp
inc
leave
and
lods
negl
jg
movsb
sub
jnp
pop
movsl
out
xor
dec
lcall
fwait
les
mov
push
push
mov
inc
mov
out
faddl
mov
nop
mov
cwtl
or
jge
mov
mov
pop
stos
xchg
test
popa
loop
sbb
mov
mov
out
bound
addl
add
arpl
pusha
sbb
adc
pop
jbe
popf
fcomi
mov
repz
adc
xor
xor
mov
loopne
mov
push
addl
ss
inc
adc
and
stos
jg
ret
fisttpll
mov
in
pop
cmpl
test
int3
mov
xchg
das
mov
dec
adc
add
dec
out
pop
fldcw
xor
fdivs
in
and
cmpsb
or
lods
loope
pushf
lods
and
cmp
sbb
adc
cmp
clc
jbe
nop
fidivl
inc
iret
repz
xchg
sub
cs
and
xchg
sbb
dec
xchg
cmp
jbe
jmp
jb
adc
imul
dec
mov
mov
mov
movsl
movsb
ja
push
add
popf
test
xor
xchg
js
lret
icebp
xchg
push
cmp
aaa
pop
xor
sub
dec
dec
pop
dec
cmp
test
ret
fcoml
mov
mov
mov
scas
jecxz
sub
sbb
mov
aas
arpl
test
adc
sahf
ss
insb
adc
int
imul
mov
pop
sub
aaa
dec
lea
jecxz
mov
pop
adc
lret
imul
mov
pop
jle
test
insl
pop
stos
inc
sub
adc
dec
cmp
test
pop
xor
sbb
ds
int3
mov
add
cmp
clc
arpl
xor
mov
add
mov
jo
lds
mov
dec
stc
scas
adc
xchg
push
mov
out
xor
fwait
xchg
cli
mov
inc
push
sub
dec
sub
or
push
lret
shll
adc
jne
outsb
dec
add
mov
ret
stc
xchg
out
call
inc
xchg
or
xlat
add
and
and
cmpsl
jg
add
scas
cmp
int
sub
ret
dec
xor
mov
mov
mov
out
inc
loope
cmp
mov
mov
imul
into
aad
mov
mov
idivb
mov
out
outsb
sub
repz
jb
shrl
test
in
rcll
jnp
xchg
imul
icebp
dec
mov
movl
sub
pop
push
rorl
push
adc
sti
sub
sub
movsb
addl
pop
inc
or
pusha
sub
shll
push
xchg
mov
sti
fidivrs
lods
inc
mov
push
or
adc
and
mov
push
int3
mov
in
loope
lret
aaa
cmp
adc
enter
in
lds
gs
xchg
xorl
repnz
roll
cmp
cld
mov
call
add
aas
movb
jle
test
cmpl
inc
add
mov
pop
jmp
pop
cmp
imul
lds
xchg
xchg
mov
hlt
test
xchg
mov
je
iret
push
outsl
mov
fwait
je
add
add
cmp
dec
inc
jge
inc
mov
je
test
out
jge
andl
cmp
push
lret
pop
ror
mov
push
in
pop
mov
jmp
jmp
mov
notb
rcll
and
cmpsl
stc
push
popf
out
xchg
or
adc
push
outsl
adc
idivb
mov
dec
insl
in
ds
lcall
stos
lret
push
xchg
mov
xchg
inc
push
mov
das
pop
dec
movsl
out
lret
mov
mov
jo
jecxz
out
mov
ficoms
push
sbb
cmpsb
xchg
addb
and
aad
sub
and
sarl
add
or
cwtl
nop
jl
push
and
ret
fidivrs
xor
insl
stos
cmpsb
push
push
aam
cmpsl
push
leave
mov
lea
sahf
icebp
jo
test
or
out
repz
cmp
mov
pop
rcr
adc
cmp
sbb
xchg
js
shl
dec
aaa
jle
mov
jbe
mov
enter
and
dec
test
punpcklbw
mov
adc
insl
insl
mov
cmp
sbb
xor
outsb
xor
mov
enter
cwtl
pop
inc
lds
ret
popf
lcall
sub
test
dec
dec
loop
push
fwait
xchg
xor
out
lock
adc
stos
nop
arpl
xchg
ds
cwtl
push
mov
negw
daa
repnz
shr
ret
pop
or
push
mov
cmp
cmpsl
popf
sub
cwtl
out
imul
cli
loope
push
cmpsl
cmp
daa
inc
mov
sahf
imul
ds
aas
xchg
incl
fs
jne
adc
sti
jecxz
jo
dec
ss
xchg
in
int3
pusha
xchg
sub
mov
jne
insl
cmc
movsl
add
pop
cmp
call
pop
push
nopl
adc
stos
mov
mov
ret
add
mov
adc
add
mov
in
add
or
mov
mov
cmp
iret
mov
cmpsb
test
sarl
push
pop
cwtl
std
sub
sbb
out
out
mov
outsb
in
sbbb
enter
xorl
adc
movsl
in
movb
insl
loop
rorb
xchg
loop
mov
hlt
stos
or
mov
pushf
xchg
rolb
roll
cmp
xor
daa
les
aam
or
push
fsubp
xchg
sub
sti
mov
stos
scas
jne
pop
xchg
in
rorb
push
cmp
dec
xchg
mov
and
and
dec
ds
stc
lret
xor
pop
inc
cmp
push
ret
insl
cmp
rclb
cld
xchg
mov
jae
out
mov
int3
mov
loop
fisttpll
repnz
cmp
sub
inc
fnsave
push
push
mov
push
stc
or
and
and
xchg
roll
mov
addb
gs
adc
jbe
mov
insb
jns
out
adc
cmpsl
inc
xor
stos
dec
jge
sub
hlt
xchg
or
or
mov
mov
pop
pop
jns
lods
outsb
idivl
mov
mov
fists
stc
data16
pop
out
call
std
ret
jmp
jae
and
notl
inc
imul
repz
call
cli
stos
mov
fsubs
fwait
aas
pop
cmpsb
add
pop
ljmp
fildll
sti
jbe
dec
pop
icebp
mov
fwait
js
mov
xlat
mov
pop
jae
fdivs
iret
test
push
mov
pop
sbb
incl
aaa
ja
insl
dec
pop
mov
lods
in
outsl
add
out
dec
enter
adc
jge
ja
mov
bound
xorb
call
push
in
test
push
bound
btr
adc
xchg
inc
lretw
in
mov
aas
stos
xchg
push
fidivrl
jmp
dec
fisttpl
xor
mov
repz
inc
cmp
fcoml
pop
nop
fidivl
aas
mov
lods
add
jecxz
pop
mov
add
int
lahf
pop
stc
outsl
inc
cs
int
dec
add
repnz
add
fwait
inc
mov
test
ds
fadds
pop
int3
pop
push
imul
mov
cmpsl
rcrl
mov
div
fmul
dec
bound
cs
insl
cmc
xor
sbb
jbe
aam
bound
inc
stos
xchg
out
sbb
shlb
xchg
scas
sbb
out
stc
loop
faddl
sub
inc
mov
clc
subb
push
sbb
lds
mov
ljmp
mov
jle
and
cmpsl
outsl
cmpsb
xchg
test
dec
push
icebp
scas
je
stos
or
cmpsb
jbe
or
xchg
jno
cli
lea
mov
dec
mov
loopne
mov
lock
arpl
loope
xor
lods
or
jecxz
mov
lahf
dec
mov
cli
mov
add
push
lock
dec
ds
inc
ss
dec
pop
scas
push
jg
lahf
in
pusha
push
jnp
inc
inc
jno
js
insl
stos
add
sub
data16
cmp
xchg
pusha
pop
loopne
in
outsl
push
loopne
cld
mov
inc
outsb
addb
fdiv
mov
lahf
cmc
sub
mov
jb
mov
lods
mov
dec
call
aad
into
mov
sbb
test
pop
mov
xchg
mov
int3
push
repz
xchg
inc
in
imul
jo
adc
xchg
push
fadds
in
xor
cmp
sub
adcl
sahf
mov
sub
xor
shlb
inc
out
stos
gs
add
in
cmp
lret
pop
gs
jo
xor
mov
repnz
mov
lds
xchg
nop
stc
xor
das
test
iret
push
fwait
inc
xor
es
adc
sysenter
sbbl
xor
mov
fisubrs
xor
xchg
jb
pop
aaa
jno
dec
lods
mov
int
es
icebp
movsb
push
fwait
add
repz
rcr
jp
rcrl
loop
popa
arpl
xchg
add
inc
lcall
xchg
add
std
hlt
mov
cmp
inc
enter
mov
sbb
and
jns
mov
lahf
cmp
into
sbb
or
in
sbb
mov
adc
push
faddl
cli
dec
icebp
out
cmp
jnp
arpl
pusha
adc
add
inc
outsb
mov
mov
and
add
mov
sahf
repnz
lods
lcall
inc
cwtl
cmpsb
mov
add
mov
inc
add
mov
mov
dec
loope
mov
mov
mov
mov
mov
in
dec
lahf
inc
and
jne
xor
std
inc
add
adc
notl
ret
out
repz
push
cwtl
cmp
out
movsl
jmp
and
cmp
add
sub
adc
inc
movsb
mov
mov
push
and
divb
pop
push
inc
jle
adc
das
adcl
jnp
std
rolb
daa
pop
jae
imul
fwait
pop
out
dec
ret
push
or
iret
lret
je
jp
stos
mov
jmp
sub
sbb
lret
mov
fsubrs
mov
scas
push
push
mov
aam
xchg
and
ljmp
sbb
ret
cmc
and
inc
xor
mov
bound
or
jmp
pop
jnp
data16
repz
or
fcoml
int3
test
nop
out
std
mov
adc
jg
inc
sub
cmp
aam
mov
and
push
inc
mov
jle
popa
pushf
hlt
inc
fwait
xchg
jge
test
adc
add
mov
adc
test
std
mov
jnp
mov
lea
or
dec
sbb
jg
loop
daa
sbb
sbb
pop
mov
add
movl
loopne
xchg
push
fnstenv
jmp
adc
sbb
xchg
fwait
inc
rcrb
fwait
hlt
and
loope
pop
mov
dec
test
fnsave
stos
pop
and
pushf
loope
iret
movsl
jne
mov
push
popa
add
test
sbb
aad
jae
push
push
jae
les
or
les
js
btr
into
push
and
pushf
sahf
fistpl
jmp
or
in
repnz
pop
insb
push
sarl
ret
cltd
insl
inc
jp
icebp
lds
push
daa
ds
pop
mov
fmul
dec
lret
pop
aam
lock
bound
pop
int3
pop
leave
jbe
pop
or
jne
jle
cmpl
decl
xor
xchg
inc
out
imul
adc
adc
addb
loop,pt
push
jle
adc
data16
data16
sbb
pop
aad
inc
push
and
repnz
test
mov
int3
dec
xchg
ljmp
pop
data16
mov
fxam
adc
imul
lahf
hlt
ret
fmul
movsl
rorl
ret
pop
aad
dec
jbe
jg
cs
das
sub
adc
jle
push
cmp
xchg
stc
jae
lock
sbb
push
cmp
call
lds
stos
add
sbb
aad
imul
and
in
xor
push
das
cmpsb
push
std
push
push
sbb
jecxz
pop
and
add
push
pop
jg
and
mov
dec
cmp
xor
add
mov
test
xchg
push
leave
loope
xor
shll
dec
pop
addl
jl
sbb
lods
ficompl
push
mov
dec
fisttps
cmpsb
out
ror
sbb
ficompl
push
imul
sbb
jmp
int3
jmp
nop
fwait
sti
xchg
push
popa
mov
call
aad
test
or
rcr
xchg
les
std
das
sti
mov
dec
xor
clc
dec
or
dec
xchg
push
ret
sub
std
pop
lds
cmpsl
and
fdivrs
enter
sbb
in
xlat
or
cmp
jno
leave
pop
pusha
pop
outsb
fidivl
adc
jb
rcrl
fsubr
ds
int3
jns
outsl
movups
cmp
ljmp
cmp
negb
or
jbe
pop
mov
clc
sbb
call
subl
dec
data16
lea
fsubs
jp
scas
popf
test
xchg
xchg
adcb
ret
adc
js
mov
jge
xchg
shll
mov
or
movupd
gs
mov
pop
adcb
fsubs
mov
sub
xchg
push
dec
adc
mov
cs
mov
out
cmp
xor
adc
jo
lock
loopne
xor
ja
stc
dec
popf
xchg
push
fiadds
mov
mov
bound
adc
jg
addb
repz
shll
mov
adc
jns
iret
out
ja
iret
cmc
clc
sti
mov
subl
push
test
inc
push
outsl
insl
inc
lds
lds
cmc
aaa
out
push
pusha
ror
adc
cmp
push
push
pop
mov
pop
pop
lret
sbb
push
pop
mov
push
jno
sub
cmp
lret
mov
sub
sbb
fisttpl
xchg
lret
dec
sti
push
arpl
test
adc
jno
xchg
adc
mov
jmp
mov
and
push
je
loope
ret
and
cwtl
mov
push
pop
xchg
mov
xchg
scas
jg
xchg
int
clc
adc
fdivl
xlat
fneni(8087
xchg
adc
cmc
outsl
push
mov
filds
mov
lock
fisubrl
sbb
je
int3
mov
mov
push
and
or
leave
pop
add
out
push
xor
push
fwait
or
inc
cmp
xchg
cmp
call
ds
sub
test
xor
jmp
xor
gs
dec
mov
rorl
pusha
in
pusha
dec
lods
mov
cmpl
and
out
pop
out
jmp
adc
mov
movsb
dec
cmp
mov
int3
mov
dec
sarl
dec
xor
movl
jmp
pop
jo
pop
lcall
shrl
cs
mov
ret
arpl
xchg
push
arpl
or
pushf
xchg
mov
fcomp
fstpl
push
adc
imul
lds
or
clc
aam
divb
dec
in
pop
rorb
insl
shl
mov
popf
xchg
scas
data16
push
cmc
jne
rcll
stos
ret
test
loope
mov
pop
popl
mov
mov
in
ss
pop
xchg
xlat
into
or
je
dec
stos
je
sarl
mov
mov
sbb
call
jb
lds
jmp
fisubrl
cmp
cmp
mov
outsb
fwait
xchg
xchg
jl
pop
notl
push
scas
mov
mov
sbb
fimuls
in
insb
loop
cwtl
pop
into
imul
pop
xlat
fwait
stc
inc
imul
hlt
pop
mov
mov
and
arpl
mov
mov
sbb
push
bound
cmpsb
jb
adc
pushf
adc
push
imul
or
dec
sub
mov
mov
fwait
in
mov
iret
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
sbb
mov
xor
xor
sub
mov
add
movl
or
mov
push
mov
add
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
mov
negl
push
mov
adcl
add
cmp
movl
je
mov
mov
xor
xor
adcl
add
add
adc
negl
xor
mov
push
movzbl
adc
xor
xor
mov
and
mov
add
movl
adc
addl
xor
movl
xor
movl
cmp
movl
jne
movl
cmp
je
jmp
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
sbbl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
notl
mov
adcl
add
movzwl
mov
mov
sbb
movb
add
lea
xor
mov
addl
mov
mov
orl
xor
andl
sub
andl
mov
movl
or
push
jmp
and
add
inc
adc
daa
push
jl
pop
pop
jl
cltd
sbb
push
fildl
inc
inc
cmp
mov
cmc
imul
push
bound
stos
cmpsl
jmp
rcll
jb
clc
movsl
push
sub
add
adc
in
arpl
and
jb
ret
int3
outsl
inc
sbb
pop
pop
lea
xchg
xchg
or
test
repnz
addr16
fstpt
pop
add
divl
mov
loop
sbb
fxam
inc
out
lock
jae
xlat
xor
add
aaa
call
gs
clc
shrb
mov
es
setp
data16
inc
jnp
cmp
sbb
cs
shl
aas
stos
jb
push
jae
pop
jae
mov
pop
int
jp
xor
xchg
pop
mov
fisubs
and
ljmp
xchg
push
adc
test
push
std
xchg
push
add
mov
fnstcw
push
or
adc
ja
xorb
test
mov
mov
or
std
push
ljmp
iret
movsb
adc
and
bound
fiaddl
sub
lcall
dec
outsl
popf
dec
or
xchg
mov
mov
pop
cmp
cld
inc
dec
xlat
movsb
imul
les
push
xchg
jbe
pop
jbe
out
pushf
imul
mov
push
cld
push
in
add
sub
pop
mov
or
and
sub
or
cmpl
gs
mov
shrb
lcall
adc
dec
push
sbb
je
dec
lock
inc
dec
mov
in
mov
pop
xchg
aas
vmaxps
pop
pop
ja
lods
mov
add
inc
in
ss
sbb
pop
lcall
enter
in
mov
sub
repnz
mov
insb
test
rcrb
int3
push
cwtl
lret
cmp
mov
mov
outsb
ds
clc
sub
adc
sub
push
sub
leave
add
xor
nop
jle
pop
mov
pop
pop
mov
sub
in
nop
fcompl
dec
fsubrs
jg
aaa
movsb
xchg
insl
cmp
sti
cmp
mov
jmp
scas
sub
scas
movb
sbb
cmp
loope
mov
in
xchg
inc
adc
jae
aam
stos
insl
pop
scas
ds
mov
sbb
pusha
mov
lahf
out
pop
fsts
sar
int
aas
xor
jne
pop
mov
scas
mov
push
cmp
pop
push
push
push
es
sub
add
leave
xor
fsubrp
mov
movsl
test
ljmp
pop
ds
lea
adc
xchg
mov
xchg
adc
test
push
shlb
push
mov
xchg
sbb
out
cmp
xor
adc
ss
mov
push
cmp
movsl
jno
lods
fstl
imul
mov
popa
clc
mov
pop
mov
mov
and
mov
lcall
lods
adc
and
jbe
dec
shrl
test
or
mov
sub
cmc
in
aas
lods
ja
in
mov
adc
jmp
xchg
pop
fisttpll
mov
xor
shrl
fcompl
js
mov
lods
or
sbb
stos
mov
xor
or
lea
push
mov
mov
cmp
iret
mov
or
jp
lods
push
jne
add
lret
pop
decb
pop
mov
push
mov
pop
fistpll
addr16
lods
cltd
or
into
cmp
arpl
pop
cli
ficomps
push
cmp
xlat
lods
call
loope
pop
negb
lds
adc
je
ret
test
push
out
push
orl
or
pusha
mov
cmp
push
or
sbb
mov
xor
sbb
jne
test
or
movsl
mov
mov
pop
cmp
jmp
hlt
repz
xor
cli
idivb
call
into
add
loope
imul
dec
mov
pop
fs
jne
orl
jecxz,pt
mov
cwtl
xor
inc
mov
push
pop
rclb
negl
rorl
pop
rcll
xlat
aas
dec
loopne
or
addr16
sbb
push
mov
ret
xor
arpl
push
je
icebp
push
adc
push
jg
pop
push
or
pop
xchg
add
push
push
lock
jg
test
and
pop
stc
inc
xchg
dec
push
loopne
xrelease
add
lods
clc
sub
adc
into
sub
out
push
jnp
jne
push
mov
cld
and
push
push
mov
js
inc
aam
mov
sub
aaa
mov
adc
fildll
or
xchg
push
push
inc
imul
scas
dec
dec
lds
mov
sar
add
push
and
sti
dec
add
jnp
xor
out
xor
ljmp
mov
pop
dec
cltd
jecxz
inc
inc
shrl
jbe
test
mov
repz
push
mov
test
dec
cmp
in
cmpb
xchg
pusha
push
inc
or
ffree
dec
shlb
pusha
es
xchg
sub
pop
in
pop
std
jge
sub
or
sub
jae
out
repnz
fsubr
mov
lea
out
push
push
cs
mov
dec
cmp
lret
loopne
and
inc
test
mov
stc
xor
cmp
dec
xchg
arpl
mov
gs
mov
mov
lret
lock
adc
xor
dec
in
mov
cld
push
and
jle
pusha
pop
jl
pop
loopne
clc
jnp
nop
out
stos
jp
mov
int
cmp
inc
jp
and
es
aas
dec
iret
movsb
xchg
stc
or
add
stos
and
mov
fstps
addr16
sti
xlat
jns
push
stc
cmp
nop
cmpsb
fs
jae
aad
adc
test
test
sub
push
mov
mov
les
fs
mov
mov
mov
sti
scas
lea
aad
push
adc
sub
sbb
jge
xchg
in
jno
aad
testl
mov
adc
cmp
hlt
loope
sub
jecxz
dec
mov
test
data16
das
jns
sbb
xor
dec
cs
cltd
jge
or
inc
mov
bound
fwait
pop
orl
cltd
les
scas
sbb
dec
js
scas
test
cmpsb
aad
arpl
bts
pop
jns
pop
push
mov
mov
pop
pop
dec
xchg
pop
aas
ljmp
jl
cmp
mov
scas
or
stos
insb
test
jg
lods
lahf
movsb
mov
lock
xor
enter
pop
sbb
ret
jecxz
sub
mov
into
jbe
aas
loop
leave
sbb
sbb
or
addl
push
shlb
jl
jne
mov
aaa
mov
jge
mov
test
mov
jb
subb
fcoms
xor
or
sbb
cmp
jge
push
xlat
stos
xchg
add
rcr
lcall
dec
jg
movsl
rorl
mov
roll
lods
insl
leave
or
divb
push
imulb
jo
shll
sub
cld
mov
mov
push
mov
add
pushf
xchg
outsb
mov
cmp
stc
iret
lret
sbb
enter
sub
push
adcb
mov
lock
in
mov
jno
dec
gs
mov
enter
daa
fsubs
inc
push
rorb
jecxz
push
cld
jbe
jmp
push
jae
cltd
cmpsb
push
cmc
scas
sub
jecxz
mov
cmp
push
iret
mov
mov
in
sbb
orb
hlt
push
mov
lea
jb
and
mov
cmc
sub
adc
addr16
movsb
add
rolb
dec
push
outsb
dec
cmpsb
mov
sub
inc
mov
hlt
decb
push
in
or
fmulp
loopne
test
xchg
push
ljmp
and
fwait
psubw
or
in
scas
jmp
xchg
btl
out
and
mov
out
cmp
dec
xor
mov
mov
sti
ja
stos
jge
out
pop
lea
cmp
ficoml
mov
xor
inc
jo
add
adc
sub
movsb
stos
or
sbb
fbld
pop
jbe,pt
lock
mov
out
xchg
and
data16
lcall
pop
popa
adc
test
enter
jb
pop
adc
pop
sbb
and
xchg
sbb
ds
xchg
pop
roll
pop
add
daa
bnd
lea
dec
mov
imul
test
icebp
fwait
mov
mov
arpl
cmp
mov
sbb
jp
ljmp
xlat
ret
push
jl
dec
neg
inc
push
cmp
or
fsubs
clc
rclb
ds
inc
inc
jno
fmull
and
mov
adc
lds
xlat
daa
and
push
shll
hlt
cmp
and
in
sbb
sti
cltd
stos
mov
xor
pop
insb
jecxz
out
loop
sbb
pop
sbb
rorl
bound
inc
ja
jb
adc
ljmp
loop
dec
dec
stos
daa
out
rorl
lahf
rorl
add
dec
pop
lea
dec
loop
jnp
add
push
inc
enter
inc
gs
rcrb
imul
lret
xchg
imul
pushf
fs
ret
adc
mov
mov
inc
fsts
mov
shll
lret
add
xchg
nop
mov
mov
insl
shrb
or
xchg
rorl
repz
lods
pop
nop
or
shl
lret
jno
xor
jnp
pop
aad
inc
pop
repnz
push
notb
push
jmp
mov
add
adcb
out
stos
arpl
fdivrl
data16
out
push
lock
inc
and
mov
sbb
xchg
es
shr
xchg
sar
pop
cmp
rol
adcl
int3
and
mov
mov
or
push
inc
cmpsl
roll
mov
jg
sbb
add
xchg
mov
jnp
add
dec
mov
push
xchg
sub
mov
add
lock
mov
jmp
fnstenv
ret
mov
ret
xchg
leave
push
push
xchg
push
outsl
rolb
xchg
stc
dec
mov
mov
cmp
addl
sub
scas
idivl
jecxz
sub
stos
xorb
inc
stos
out
pop
push
mov
sbb
and
movsb
inc
testl
test
pop
call
rcrl
add
xor
jb
mov
sub
loopne
movsb
sub
cli
in
or
stos
or
pusha
jbe
into
divl
test
fstps
jl
mov
bound
cmp
test
shlb
or
lret
cs
test
imul
or
test
daa
pushf
sbb
add
cltd
into
int3
or
xchg
scas
push
fcompl
cmc
jnp
nop
ljmp
xor
popf
mov
and
pop
leave
adc
jbe
mov
sub
dec
test
lods
xor
jmp
test
cwtl
mov
sbb
data16
jae
test
int3
cwtl
pextrw
je
sub
jge
dec
or
lods
sub
mov
out
jmp
pop
std
mov
adc
mov
popf
adc
mov
add
cmp
scas
push
out
pushf
mov
call
mov
iret
leave
fimull
push
pop
xor
loop
sbb
cmp
addr16
dec
in
push
mov
lods
pop
fisttpl
xlat
stc
pop
mov
mov
jp
lods
cwtl
sub
orb
xor
push
insl
mov
repnz
and
jecxz
orl
dec
ret
loop
loop
ret
pushf
cmp
in
iret
ret
xchg
das
inc
int
push
lds
sub
cwtl
or
sub
adc
push
call
fs
pop
or
mov
dec
push
out
add
jge
lods
or
sti
sahf
jmp
fidivl
lods
fbld
outsl
adc
pop
fiadds
push
cs
push
scas
adc
mov
cmp
stc
out
mov
je
xchg
popf
sub
sbb
loop
sti
aaa
sub
fildl
xor
jl
lret
mov
push
arpl
cmp
gs
jecxz
inc
movsl
pop
pop
pop
jns
mov
repz
sbb
add
mov
push
scas
inc
sti
jp
fcmovnu
insl
push
inc
push
lret
push
jecxz
cltd
shlb
ficomps
out
lahf
fiaddl
add
test
dec
ficoms
enter
mov
dec
cmp
push
cld
sub
notl
daa
cmp
mov
daa
dec
pushf
adc
in
loopne
dec
cmp
aam
shrb
sub
mov
jge
xchg
push
sarl
outsb
mov
mov
adc
shl
sbb
fcomip
mov
shll
xchg
sub
mov
push
dec
gs
mov
imul
push
es
loop
imul
out
adc
mov
std
fsubl
lcall
xchg
pop
popf
xor
sbb
cmp
dec
je
jmp
rolb
stc
pop
inc
xor
sbb
es
insb
sbb
pop
mov
xchg
sti
adc
adc
or
in
cwtl
sbb
clc
aad
or
fistps
dec
out
xchg
mov
inc
leave
xchg
mov
lret
push
mov
std
cmp
xor
mov
das
mov
test
lret
xchg
xchg
in
xchg
fstps
inc
pop
idivl
mov
das
pop
inc
push
fwait
in
aas
mov
lahf
dec
arpl
adc
mov
pushf
push
mov
xlat
add
dec
outsb
pop
leave
rol
in
push
out
dec
stos
in
jl
lods
xchg
sub
xchg
insl
iret
out
and
and
scas
cs
push
addl
mov
jnp
mov
outsb
bound
outsl
dec
insb
and
clc
pop
jnp
lods
jb
divl
jbe
pop
mov
lret
mov
insl
adc
fdiv
mov
or
iret
lret
mov
fcmovb
dec
sub
aam
push
gs
pop
ret
add
sbb
shrb
dec
sbb
int
movsl
adc
out
movsb
mov
leave
sub
or
addr16
into
lods
lods
lods
cmp
dec
repz
ds
dec
cmp
jp
into
outsl
test
pop
mov
jg
mov
cmp
sub
jmp
lahf
mov
adcb
cwtl
mov
stos
movsl
out
lock
push
ficompl
jno
repz
push
xor
push
add
filds
icebp
scas
into
push
push
ret
stos
jmp
sub
or
xchg
into
inc
cmp
icebp
mov
gs
push
lret
scas
push
js
adc
push
sbb
into
imul
push
fsts
xchg
int
mov
or
fwait
leave
daa
cwtl
xchg
subl
and
sub
fists
sub
sahf
cmpsl
pop
fwait
mov
and
mov
aad
mov
popf
jecxz
loop
dec
cmp
pop
nop
cmp
cld
mov
nop
mov
and
xor
adc
xor
call
dec
das
orl
and
lret
mov
pop
jo
jp
dec
cmpsl
sbb
bswap
pop
pop
mov
iret
aas
pop
bound
notb
in
scas
adcl
rcl
jg
into
sbb
inc
aaa
mov
mov
sub
ljmp
dec
pop
fistpl
fistps
jle
jns
ljmp
out
sub
push
lock
push
xor
and
aaa
iret
outsb
push
dec
dec
mov
addb
gs
nop
mov
roll
call
insl
dec
push
das
pushf
xchg
imul
pop
stc
ret
jmp
sbb
adc
jns
pop
cmp
adc
jnp
inc
sbb
shr
push
cltd
icebp
ljmp
leave
ret
in
pop
inc
aas
mov
enter
dec
out
dec
jne
or
dec
or
inc
jns
out
sub
movsb
arpl
in
and
test
xor
cmp
xor
cmp
iret
or
jno
cs
sbb
fistps
adc
jns
dec
mov
leave
sbb
rclb
ret
mov
xchg
cmp
push
dec
mov
and
into
xchg
xchg
xchg
mov
imull
lds
inc
and
je
cmp
or
cld
add
and
xor
xor
mov
data16
mov
jg
or
in
xchg
push
stc
pop
lock
and
or
push
outsb
and
fdivl
mov
cmc
xchg
mov
jecxz
xchg
mov
test
pop
mov
push
lods
sbb
fdivrl
frstor
xchg
icebp
das
std
add
xor
loop
and
jnp
mov
dec
xor
push
pushf
mov
push
cli
inc
mov
fdivl
sub
xchg
outsb
sbb
cmpsb
out
or
sbb
adc
sbb
or
shrb
fs
xchg
jnp
je
mov
test
add
mov
movsb
mov
xor
lds
push
add
dec
jae
sub
mov
push
out
insl
or
dec
stos
inc
lds
popf
sarb
testl
enter
ret
push
popf
mov
push
pop
cwtl
jge
sarl
jne
push
sub
imul
xorb
adcl
lret
xor
xlat
andb
mov
mov
add
xor
dec
jmp
imul
push
pop
addr16
xchg
popf
mov
dec
adc
je
ret
pop
popa
insl
mov
mov
xchg
inc
dec
adc
pop
clc
into
xchg
int3
stc
das
mov
testl
arpl
int
xchg
add
sbb
nop
or
rcrl
ss
sbb
lods
aas
and
sbb
inc
mov
outsl
pop
cli
fnstsw
ret
push
test
call
pop
leave
mov
lcall
dec
or
in
sbb
fldcw
sbb
das
cmp
dec
stc
lods
xor
adc
dec
lret
repnz
jmp
lahf
or
push
ficompl
jns
add
dec
lods
pop
lods
jp
addr16
inc
push
das
fs
inc
inc
pop
mov
push
cmp
fs
rclb
jg
arpl
nop
jns
sti
adc
out
xorb
mov
ja
jnp
jg
pushf
jnp
movsb
and
jae
fs
and
insb
xchg
cmp
loope
fnop
stos
sbb
jle
les
or
popf
aam
into
sbb
mov
aad
out
dec
ja
jge
sbb
rcl
ja
punpckhbw
mov
pop
mov
add
sub
insb
mov
aad
and
xor
ss
leave
cli
pop
jle
lods
ds
test
push
and
call
icebp
xor
pop
push
pop
add
popa
mov
add
adc
or
mov
hlt
and
notw
into
jo
or
xchg
pop
bound
push
notl
cmp
pop
dec
sbb
je
sbb
mov
mov
stc
and
aaa
push
insb
loop
mov
outsl
insl
mov
mov
mov
jle
jns
add
fst
loope
sub
cmp
sbb
mov
jmp
test
cmp
lods
js
push
lods
cmp
or
imul
movsb
jb
leave
outsl
jle
in
mov
and
sbb
std
push
jle
cmc
sti
loope
push
pop
adc
lock
negb
pushf
jle
rcrb
dec
add
cmpsb
inc
jns
cld
enter
adc
adc
repz
cli
mov
hlt
push
sarb
mov
push
inc
fwait
lret
jns
sbb
cltd
xor
adc
orl
rclb
stos
jo
pop
pop
pop
inc
out
cmp
and
imul
sti
addb
mov
sbb
cld
pop
sbb
js
fdiv
mov
push
dec
mov
jg
and
xor
adc
jmp
dec
push
enter
aas
mov
pop
je
adc
iret
insl
mov
mov
pop
leave
mov
sbb
jnp
cmpsb
stos
jmp
adc
nop
xchg
pop
push
out
xchg
adc
test
xchg
lock
out
subb
adc
ljmp
lods
pop
jno
std
add
clc
lcall
test
pop
popa
loope
mov
jae
pop
xchg
and
shll
test
xor
jmp
mov
mov
push
fs
dec
scas
sub
jmp
test
ret
into
pop
pop
xor
jp
push
inc
out
or
dec
movsl
test
mov
or
xchg
out
mov
es
repnz
push
call
adc
adc
clc
in
push
cmp
fdivrl
mov
push
push
fdivl
sub
rcll
mov
addr16
and
and
loopne
lret
in
pop
cmp
jle
mov
fchs
lds
fbstp
pop
cmpsb
sarl
es
mov
jbe
adc
or
repnz
ljmp
js
mov
push
roll
pop
mov
aaa
inc
sub
xchg
mov
les
cld
mov
adc
pop
and
sub
cli
lods
or
inc
repnz
movsb
ret
in
pop
std
sahf
mov
inc
fistpl
icebp
test
nop
cwtl
sub
xchg
push
les
jno
icebp
push
mov
adc
imul
add
xor
mov
sub
sub
jmp
adc
dec
test
out
out
inc
xchg
cli
ljmp
hlt
call
adc
and
movsl
dec
adc
addr16
pop
scas
mov
mov
jne
dec
jmp
lcall
ljmp
dec
dec
lods
sub
xchg
jae
ret
jb
lock
rol
sub
add
sti
pop
xchg
repz
ds
dec
lret
loop
adc
mull
rcrb
push
sbb
sub
outsb
out
mov
and
xor
sub
fcomps
cmp
rolb
or
xor
aas
jne
add
mov
lret
mov
jno
call
testl
jno
loope
xchg
imul
fwait
rclb
pop
push
xchg
stc
xchg
iret
shrl
adc
xor
inc
sub
loop
mov
addb
leave
in
cmc
neg
movsl
adc
cmp
push
or
repz
int3
mov
je
clc
mov
lods
andl
test
xchg
adcb
aam
movsl
adc
jae
or
sub
jne
jnp
mov
mov
dec
pop
sbb
push
inc
ret
data16
or
out
sub
xlat
popa
jl
or
out
addr16
and
pop
rcr
pop
rclb
aaa
push
adc
aad
inc
test
imul
mov
roll
stos
jp
jecxz
adc
and
hlt
in
into
add
and
inc
std
test
xchg
pop
xchg
xor
mov
in
cmp
sbbl
loop
outsb
scas
inc
push
lret
mov
call
arpl
jo
inc
xchg
jbe
xchg
mov
movsb
fwait
popa
outsl
jns
jge
push
lock
jmp
and
aaa
add
out
popl
lea
imul
test
lock
inc
les
jg
jae
push
push
insb
rcl
ljmp
mov
imul
lods
mov
or
hlt
loopne
fmuls
cmp
insl
int3
push
sub
loope
jb
jp
stos
fisubs
gs
mov
sub
push
das
jnp
lods
cmp
jge
fcoms
mov
int3
ret
xchg
enter
aad
lods
xchg
add
das
mov
push
repz
imul
adc
push
mov
in
jecxz
fmulp
xor
xorb
inc
hlt
pop
scas
clc
leave
xor
mov
xchg
push
shll
mov
mov
pop
pop
stos
dec
xor
js
jp
scas
js
imul
inc
adc
and
jg
cmp
into
pop
jo
push
jb
xchg
push
fnstcw
mov
mov
push
repz
stos
enter
xchg
mov
sub
out
cmc
ss
jbe
cmc
movsl
add
push
outsl
jb
lcall
shlb
popf
xor
je
cltd
lcall
push
and
sbb
push
add
call
add
xchg
loop
xchg
imul
jno
in
cmp
es
add
and
popf
test
add
pop
ja
or
push
inc
ret
das
repz
dec
lahf
push
mov
sahf
ljmp
pop
stos
fdivl
jmp
and
sbb
popf
pop
dec
sbb
inc
xchg
and
sarl
addr16
sub
outsl
loopne
mov
push
movsl
mov
xlat
push
jb
push
jns
mov
movsb
fcmovbe
mov
outsl
test
mov
and
iret
cli
popa
out
add
js
testl
mov
fs
xor
jg
imul
lret
push
jns
insl
out
je
mov
mov
push
ja
sti
repnz
call
imul
out
push
insb
lret
and
les
dec
pushf
mov
or
repz
or
aam
xchg
adc
dec
mov
test
jnp
mov
jp
mov
int
or
dec
lods
popa
loop
pop
adc
pop
jge
ret
cli
std
and
mov
or
sahf
aaa
jo
test
loopne
adc
rorb
jp
pop
outsl
fldl
mov
xorl
jb
sbb
mov
add
iret
pop
dec
insl
mov
or
negb
cs
enter
push
test
shl
cmp
mov
cwtl
mov
push
push
and
cltd
sbb
mov
xor
push
pop
int
rcl
pop
fdivrs
mov
out
and
mov
dec
jle
jo
push
call
xor
dec
jle
pop
shl
enter
lcall
rcl
mov
push
out
dec
dec
xor
sbb
int
out
in
ljmp
sahf
push
popa
sbb
out
push
cmpsb
xor
fmull
das
push
sti
and
loopne
rorl
fildll
xchg
clc
push
sti
mov
mov
add
and
sbb
mov
imul
xchg
sbb
outsl
in
lret
pop
add
jo
and
mov
test
xchg
adc
iret
xor
pop
nop
pop
mov
nop
lds
adc
sbb
addb
lock
xor
cmp
mov
or
xor
aam
push
lret
jo
in
mov
pop
push
push
stc
or
xor
add
pop
insb
in
jbe
sub
pushf
test
sub
push
ror
push
orb
cmpsb
xchg
cmp
xchg
pop
es
sub
mov
push
aaa
push
insl
movsb
fdivs
sub
pop
les
jnp
cld
xor
cmp
push
sbb
sbb
outsl
cmp
sbb
mov
adc
adc
insl
lds
call
arpl
pushf
mov
sbb
cmpb
sbb
ret
lock
jne
push
enter
mov
ret
jns
lods
insl
push
pop
test
mov
and
add
ss
mov
jmp
mov
imul
jle
les
pop
cmp
sub
sub
les
jb
mov
fucomip
sub
mov
cld
pop
leave
lahf
jb
sub
xchg
iret
ret
aas
call
rol
xor
mov
lea
mov
pop
and
xor
and
mov
sub
mov
cwtl
jae
pop
push
inc
mov
mov
jmp
push
jp
mov
movsl
add
add
gs
inc
lcall
mov
sub
or
pop
scas
jg
xchg
inc
int
pusha
sbb
lret
iret
push
repnz
enter
das
inc
cmc
scas
and
sbb
cs
push
push
outsb
pop
mov
ja
push
gs
je
gs
jle
shlb
sub
inc
int3
inc
dec
mov
orl
int
sbb
pop
dec
xor
and
incb
clc
adc
adc
out
inc
pushf
rcrl
mov
sarl
pop
pop
pop
pop
test
or
mov
aas
jbe
pop
mov
icebp
fwait
shl
push
push
inc
test
xchg
data16
pushf
push
jns,pn
push
cmp
jae
lods
xchg
fndisi(8087
sub
push
out
fistps
xor
idivb
add
pop
stc
inc
imul
add
jb
cli
enter
jmp
xor
ret
pushf
xchg
xchg
cmp
jno
and
popa
jbe
jae
xor
sti
sub
ret
mov
and
inc
in
pop
lock
push
mov
push
rcrl
ret
testb
sub
xchg
jno
nop
cli
mov
aad
into
mov
push
int
daa
mov
and
cli
arpl
aas
fisubrl
imul
lock
xchg
cmp
ficoml
icebp
mov
mov
sbb
jl
outsb
iret
lret
popa
mov
sub
push
ret
aad
add
pop
orb
cmpsl
push
scas
aam
add
clc
scas
cmpsl
daa
sbb
xchg
sub
ds
test
imul
jge
cli
dec
stc
aam
mov
mov
mov
xchg
cli
jnp
pusha
pop
loope
pop
test
je
pop
enter
jmp
add
mov
jbe
enter
sbb
mov
fldt
push
lods
pop
cmp
mov
inc
mov
js
adc
jae
je
filds
fs
movsl
data16
mov
cwtl
pop
imul
iret
dec
std
push
add
pop
das
or
sbb
popa
ljmp
mov
add
sub
pop
sub
adc
in
cmp
iret
movsl
int
icebp
add
adc
pop
mov
inc
movl
outsb
push
xchg
mov
inc
movsb
add
ficoms
mov
addr16
or
pop
lods
mov
scas
out
dec
pop
xchg
ret
ret
outsb
jge
inc
std
outsl
xor
and
jns
jge
outsb
mov
sub
roll
push
fdiv
inc
fldenv
sub
jb
in
mov
mov
dec
add
imul
rcl
ljmp
fdivs
inc
leave
pop
xor
int3
lods
loope
outsl
sbb
and
mov
movl
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
pushl
call
mov
dec
mov
jmp
push
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
inc
xor
sub
mov
movl
push
xorl
add
jmp
mov
notl
mov
notl
inc
cmp
movl
jb
adc
mov
xor
add
jmp
andl
mov
and
mov
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xorl
mov
add
sbbl
movzwl
xorl
mov
negl
mov
orl
movzwl
xorl
xor
add
mov
mov
inc
mov
cmp
movl
jne
mov
movl
mov
decl
xor
add
andl
mov
dec
mov
xor
andl
add
movl
mov
not
movl
movl
movl
mov
mov
movl
mov
jmp
mov
add
mov
andl
xor
xor
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
movl
mov
lea
mov
mov
mov
lea
movzwl
sbb
mov
mov
andl
mov
add
mov
negl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
orl
mov
mov
add
mov
lea
add
mov
mov
orl
mov
lea
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
sbbl
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
jmp
sarb
jae
dec
bound
inc
mov
jl
pop
pop
jl
add
or
popf
andb
dec
cltd
lret
sub
jnp
inc
loope
call
sbb
add
push
pop
dec
sub
stos
jge
sarb
xchg
and
push
fadd
xchg
xlat
xorb
dec
pop
inc
push
imul
adcl
std
enter
and
nop
mov
sub
mov
adc
jmp
test
fdivrs
orl
dec
movsl
leave
jb
std
cld
xor
ffree
aam
cltd
ret
ret
xchg
mov
xor
cmp
lock
xor
dec
fnstcw
inc
inc
test
pop
dec
out
cld
repz
out
add
aas
roll
dec
xor
loop
in
test
mov
int3
push
inc
mov
loopne,pt
mov
cmp
mov
and
dec
mov
mov
pop
js
and
dec
xor
movl
inc
mov
lret
add
arpl
call
testl
push
movl
rcll
cmova
pop
xor
mov
xchg
xor
fidivs
das
mov
xchg
movsb
sub
jecxz
in
cmp
mov
addb
repnz
push
inc
cmp
sbb
adc
and
shr
pop
imul
out
sbb
div
shll
lcall
shl
and
fbld
popa
sub
sbb
lods
rorb
cld
fucomp
cmp
icebp
hlt
lds
pusha
sahf
cmp
mov
and
mov
mov
adc
dec
xor
in
daa
jmp
mov
loop
or
mov
and
xor
dec
xlat
jle
in
inc
cmp
dec
mov
or
int3
imul
daa
xchg
ret
jmp
add
loop
and
dec
test
gs
pop
inc
fisttpll
push
fcomps
bound
xor
pop
xchg
jb
xor
cwtl
pop
scas
outsb
lods
lret
mov
psllq
lods
inc
jge
jecxz
push
sub
and
sub
pop
mov
inc
jbe
mov
lea
adc
add
ss
je
and
mov
fs
sub
shll
cmp
add
insb
adc
pop
jmp
and
mov
and
movsb
out
out
dec
and
jle
inc
rolb
popf
push
test
inc
lea
inc
in
mov
ret
mov
popl
mov
pop
and
jae
and
pop
repnz
and
push
xchg
cld
sub
fmul
leave
movsb
jb
das
mov
sbb
jns
pop
cli
cmp
add
scas
jns
pop
dec
sbb
dec
add
rcl
out
and
inc
rorl
push
inc
movsl
out
scas
in
pop
pop
or
popa
loop
sti
inc
mov
pop
push
lods
lods
rorl
pop
mov
movsl
jl
xor
dec
pop
bound
das
mov
inc
jmp
inc
iret
jge
xor
push
inc
leave
imul
lcall
cmc
rclb
pop
rorb
loope
dec
pop
inc
pusha
mov
nop
test
sbb
sbb
je
iret
into
push
lock
mov
xchg
fs
test
fnstenv
ds
mov
xchg
fildll
imul
outsl
push
int3
push
dec
xor
mov
ret
pop
jb
jp
lret
add
adc
add
fisubl
dec
gs
pop
or
pop
cmp
cmpsl
lcall
pop
lret
mov
inc
push
mov
adc
or
push
addl
in
pushf
ficomps
inc
xor
dec
js
sti
pop
aam
lret
or
int3
imul
jno
ljmp
adc
shr
cwtl
inc
iret
enter
cltd
rcll
test
test
ja
pop
push
aaa
cmpsb
je
inc
stos
movsb
push
fidivl
xor
lods
cmp
cmp
adc
je
subl
mov
or
push
ljmp
addl
lcall
ja
andl
cli
leave
dec
add
jno
add
inc
or
in
xor
pop
rolb
jmp
ss
sub
js
mov
inc
or
jae
pop
addr16
and
or
jge
sarb
mov
in
or
dec
enter
cs
mov
adcb
ss
pxor
lds
xorb
add
sahf
jge
jle
or
sti
mov
dec
mov
cmp
dec
push
mov
outsl
sahf
inc
dec
add
xor
mov
orb
adc
adc
sub
xchg
mov
iret
adc
jo
mov
js
sarb
mov
iret
scas
out
iret
push
mov
pop
mov
add
jg
lods
jecxz
dec
popf
fwait
xchg
inc
inc
cmp
cmpsb
mov
xor
std
scas
sahf
xchg
adc
loopne
mov
iret
lods
int3
jnp
hlt
jnp
mov
adc
outsl
sahf
add
inc
repz
pusha
daa
jb
lret
lds
enter
dec
into
cwtl
and
ficompl
rorl
adc
push
bound
sbb
adc
lods
sti
mov
add
loope
mov
xchg
outsb
mov
mov
pop
push
mov
push
cs
imul
ljmp
insb
test
pusha
sbb
jecxz
xor
xchg
jb
xor
xlat
adc
pop
lret
mov
in
jge
and
cmp
lret
sub
xchg
fmul
or
pop
xor
lock
xor
sub
mov
pop
adc
cs
xchg
xor
insl
dec
or
lret
cmp
mov
imul
popa
or
xchg
dec
jbe
cs
in
rorl
in
in
push
pop
jle
push
lods
add
mov
pop
adc
pusha
ss
imul
sbb
xchg
mov
jge
mov
lret
add
mov
and
push
dec
lcall
or
jmp
jge
movsl
aam
sti
out
push
and
xlat
dec
popf
pop
out
inc
mov
pop
inc
push
xlat
xchg
movsb
adc
insb
shrb
shrb
or
push
ja
xchg
jge
je
pop
fnstsw
mov
jae
daa
jmp
mov
fsub
movsb
ret
out
push
lock
xor
cld
adc
push
aam
int3
add
xchg
pop
inc
mov
ss
sbb
xor
icebp
scas
fs
jg
fisubs
adc
jo
shll
insl
stos
dec
ds
pop
mov
push
xor
lods
push
mov
es
lcall
mov
imul
ret
push
rorb
sub
adcl
mov
ret
xchg
popa
inc
sarb
mov
fsub
imull
mov
stos
flds
adc
lods
in
daa
insb
mov
xchg
movsl
out
or
call
mov
loope
jge
frstor
fcmovnu
xlat
aam
adc
sahf
sbb
int
or
js
and
mov
sbb
push
pop
inc
lds
pop
call
ficomps
cmp
dec
aam
add
leave
add
inc
inc
push
push
rol
jmp
pop
inc
addr16
xor
push
sbb
xor
aaa
sti
cmpsb
shlb
fwait
int3
push
outsb
aad
push
add
jb
in
mov
orl
jbe
aas
cli
test
mov
iret
lcall
call
out
jle
dec
adc
aam
cmp
adc
mov
sbb
jp
mov
mov
addr16
mov
xchg
jne
mov
int
mov
fdivrp
inc
xchg
add
add
outsl
sbb
jp
jbe
clc
minps
dec
mov
outsb
cs
cmpsl
lahf
cs
jle
xchg
adc
aas
xchg
in
popa
in
mov
shrl
pop
hlt
mov
es
dec
loopne
arpl
xor
mov
xchg
sbb
sti
cld
and
aas
shlb
jmp
add
inc
outsl
jb
and
repnz
mov
mull
movsl
sbb
inc
scas
in
inc
test
mov
cmp
push
sar
jnp
movsl
movsl
or
insl
cld
mov
xchg
cmpsb
jb
mov
push
or
push
pop
cmp
jae
lods
cltd
outsb
sbb
adcl
in
add
fidivrl
imul
rorb
pop
call
jg
jb
sti
sbb
sahf
sbb
mov
out
xchg
jb
xor
sub
push
ret
push
xor
clc
pop
adc
movsb
pop
or
rcrb
mov
in
lahf
xlat
mov
popa
mov
shlb
jle
enter
push
or
lea
imulb
or
jg
aad
fistl
sbb
gs
pop
pushf
adc
pop
gs
or
in
mov
test
es
pop
clc
movsl
les
pop
xlat
cli
cmp
or
cmpsl
pop
incl
inc
mov
cwtl
push
movsl
cmp
test
pop
sti
add
cmpsl
jl
and
cmp
test
invd
sbb
ss
dec
insb
in
or
jnp
lods
repz
push
and
jle
mov
add
jmp
xchg
jno
adc
sbb
xchg
mov
inc
int3
jae
fsubrl
add
pop
es
jp
and
int
cmpsl
xor
cwtl
jg
push
ds
movsb
shr
inc
mov
std
stc
xchg
push
adc
jp
stc
test
jae
fnclex
mov
imull
push
out
int
pop
inc
add
or
lock
jge
adc
bound
lahf
mov
lret
inc
cli
or
sub
adc
push
jnp
sub
adc
or
fwait
int
xchg
dec
mov
mov
lcall
xchg
pop
or
in
or
pop
sub
xchg
mov
data16
rcrl
and
jo
push
subl
push
xchg
or
dec
clc
mov
adc
movl
fisttpll
cmpsb
jl
xchg
mov
xchg
insl
dec
jge
cmp
daa
sti
and
std
test
dec
pop
das
mov
mov
daa
loopne
js
sub
xorb
push
test
sbb
gs
lret
and
push
and
lea
inc
incb
aad
sbb
es
xor
xchg
fistl
ffree
jns
shlb
push
insb
and
inc
pop
addl
pop
frstor
test
mov
and
pop
js
int3
xchg
push
ret
sub
in
testb
or
jb
add
or
fsubrl
mov
push
dec
jbe
mov
push
mov
xchg
cmp
out
es
sarl
mov
mov
mov
call
sub
call
jmp
jns
pop
or
data16
fisubl
ja
insb
out
stos
cli
out
loop
sub
sbb
sysexit
mov
mul
xor
mov
sahf
loope
setle
adc
push
push
outsl
incb
inc
iret
adc
xchg
outsl
mov
inc
hlt
pop
mov
add
xlat
and
in
adc
xor
movsl
test
sbb
iret
xor
cld
rcr
adc
popf
jl
xor
adc
mov
mov
clc
dec
fsubp
clc
test
mov
adc
jo
mov
cmpsb
push
stos
sub
xlat
addl
pop
pop
push
scas
in
ret
in
lea
popa
or
push
in
call
jl
xor
hlt
je
and
push
mov
inc
xchg
sbb
sub
mov
jae
lds
push
je
push
add
jmp
pop
test
jmp
wrmsr
adc
sub
inc
shll
add
cmp
loop
lock
rolb
mul
aam
arpl
ljmp
push
push
dec
mov
lahf
mov
and
lock
aaa
or
jae
xchg
lds
gs
cli
dec
push
leave
pop
xor
cmp
or
rcrb
fistl
dec
ficompl
faddl
or
aad
sahf
jno
mov
ret
mov
cltd
mov
cmp
pop
jns
push
lods
dec
sbb
xor
repz
and
cmpsb
or
mov
inc
fisubrs
push
jae
aas
xor
test
in
lcall
aad
lods
fdivrs
xor
test
rcl
sbb
pop
xchg
mov
xor
jle
outsb
repnz
aas
adc
std
enter
lods
sbb
lock
out
or
and
sbb
jle
icebp
inc
xlat
in
fucomi
push
mov
dec
lods
dec
mov
cmpl
cmpsl
and
inc
mov
pusha
sbb
ret
sbb
cmp
lds
or
xchg
push
pusha
insl
out
arpl
add
in
lock
out
mov
movsb
bound
mov
pop
mov
push
jp
push
and
scas
mov
ja
push
jb
xchg
int3
call
adc
clc
push
sub
jno
imul
pop
mov
mov
fsub
stos
cwtl
jp
mov
cmpsl
pop
mov
add
or
or
mov
les
test
nop
adc
stos
and
repnz
xor
repz
outsb
das
or
shll
out
jno
push
mov
fwait
inc
push
std
aaa
pop
or
iret
int
pop
iret
fsubl
pop
les
imul
jnp
sub
pop
xor
push
iret
loope
mov
cs
imul
jno
jbe
fcomip
sub
mov
cmp
xor
daa
mov
mov
loopne
jb
and
add
or
mov
jl
mov
or
jne
push
sub
mov
mov
arpl
mov
jl
les
mov
fmul
sahf
xor
push
cs
sbb
stos
clc
shll
ret
sbb
mov
mov
ss
add
rcrb
jne
sub
daa
cwtl
jl
sarl
scas
loope
mov
jno
mov
stos
mov
push
add
add
ret
mov
jo
cmp
jmp
movsb
cmc
sub
rcll
adc
stc
sbbl
fs
sahf
adc
dec
inc
and
push
subl
insl
insl
sbb
dec
fnstsw
cmp
ss
ret
add
add
rclb
stc
push
cmp
xchg
leave
aad
xor
push
lret
mov
jnp
pop
cltd
add
pusha
and
push
sbb
xor
popf
mov
xor
push
repnz
in
pop
add
sbb
test
insb
addb
cmc
and
pop
jbe
or
dec
or
icebp
sub
cmp
mov
jns
inc
sub
loopne
sti
rcrl
pop
inc
jg
cmpsl
xor
test
ss
mov
and
mov
and
xchg
mov
bound
dec
icebp
mov
jmp
inc
push
mov
out
ret
mov
or
sub
int
push
jae
addr16
dec
mov
cld
xchg
xchg
enter
stc
and
push
gs
daa
mov
jecxz
sbb
and
jmp
xor
mov
fimull
insl
xchg
out
mov
mov
rorl
sub
ds
jb
lock
jne
jmp
pusha
cmc
call
or
mul
add
or
aaa
test
cmp
mov
mov
or
dec
popf
fisttps
push
mov
sahf
cmp
xor
xor
fidivrs
mov
test
fnstenv
dec
or
cmp
mov
and
scas
stos
mov
pop
xchg
lock
call
and
subl
xorb
in
add
mov
shll
idivb
xchg
mov
ret
out
dec
pop
stos
ds
push
ret
sub
scas
cmpb
xchg
sarl
iret
push
pushf
mov
push
nop
sub
xchg
pop
arpl
loopne
mov
mov
mov
fstl
xor
sub
and
push
aas
add
adc
aaa
inc
inc
ss
and
dec
fcomip
mov
mov
in
aad
add
cmp
inc
aam
and
pop
call
jns
mov
pop
ret
les
jl
out
sub
jp
mov
and
mov
fdivr
push
lcall
hlt
cmp
adc
loopne
cmp
ret
push
into
mov
cmp
jno
lds
jnp
mov
repz
mov
adc
inc
ja
mov
mov
dec
mov
mov
fxch
sbb
pop
test
dec
fcmovu
fwait
mov
mov
cpuid
jge
xchg
pop
adcl
lea
loope
push
jae
inc
dec
sar
stc
addr16
bound
popf
pop
jecxz
movsb
leave
mov
inc
addr16
outsl
sbb
inc
adc
mov
and
and
int3
dec
adc
mov
cmp
fcomp
dec
inc
cmp
xchg
dec
add
cmpsl
insl
bound
cmpl
or
dec
fwait
and
jmp
in
mov
push
xchg
fnstsw
sbbl
jb
and
adc
bound
jns
std
jnp
cltd
sub
ljmp
inc
mov
pop
mov
cmp
adc
aas
dec
sub
subb
xorl
inc
aam
pop
add
pop
dec
jp
and
insb
movsb
adcl
mov
test
jle
push
jge
or
mov
ljmp
mov
push
push
dec
fnstsw
push
scas
loopne
loop
xchg
xchg
mov
les
imul
xchg
imul
xchg
inc
jae
push
sbb
dec
jbe
and
add
in
mov
gs
add
jle
xchg
jns
aaa
inc
cmp
and
jo
jp
mov
or
and
test
mov
les
push
movsb
cmp
rol
jg
movsb
out
pop
fdivrl
enter
jmp
pop
stos
mov
hlt
inc
pop
insl
int3
mov
aad
rolb
xchg
add
sub
lcall
je
loopne
int3
outsl
xchg
add
pushf
adc
cmp
add
pop
sbb
xor
in
arpl
mov
cli
insb
dec
int
pop
push
cmp
insl
fistpll
mov
fsubrl
fcoms
mov
fcmovnbe
push
jae
mov
and
sub
xor
mov
mov
adc
push
pop
pop
mov
rorl
mov
mov
fadds
test
mov
fisubl
dec
mov
inc
or
enter
sub
outsb
add
pop
and
div
push
jne
xchg
jg
dec
mov
shrb
jl
out
jp
push
lret
pop
sbb
in
xchg
sbb
insl
pop
lahf
cmp
mov
ret
outsl
add
daa
jae
fwait
es
je
data16
fsubs
inc
sub
pop
inc
and
lods
mov
push
imul
xlat
cwtl
in
push
mov
movsb
insb
bound
inc
xchg
pushf
sbb
sbb
sbbb
cmpl
dec
vphadddq
add
test
out
push
and
popf
jp
xorps
arpl
insb
mov
sbb
push
movsb
clc
adc
enter
pop
dec
mov
mov
mov
and
pop
imul
sbb
mov
and
daa
ja
fmull
jo
mov
adc
lea
scas
cmp
jae
inc
scas
sub
mov
push
sub
or
dec
es
inc
adcl
fsubl
sbb
push
or
imul
xchg
mov
inc
cli
rol
inc
out
mov
sbb
jne
sahf
pop
add
lret
cld
cmp
cs
scas
int3
aam
mov
dec
cmp
addl
push
dec
hlt
mov
and
mov
sbb
sub
cwtl
stc
mov
pop
mov
push
addl
hlt
pop
fistl
int
in
push
add
pop
push
daa
addl
pusha
adc
fisttpll
mov
sub
mov
xor
add
add
cmpsb
imul
pusha
push
cmp
scas
cs
sub
pop
aas
mov
xor
lahf
daa
test
lods
adc
pop
jb
dec
xlat
adc
testb
cltd
je
add
aam
push
outsl
mov
mov
popa
jp
out
push
inc
cmc
or
and
pop
adc
push
inc
inc
lods
or
push
and
jle
and
lods
inc
stc
pop
xchg
out
xor
jle
in
inc
movsl
inc
insl
pop
mov
int
repnz
rol
mov
pop
dec
mov
xorb
imul
ficoms
add
vsqrtss
sub
push
add
dec
sbb
arpl
es
or
push
stos
add
cmpsl
int3
xor
add
sbbb
incb
sub
ljmp
or
notb
lods
adc
in
jmp
pop
inc
push
mov
bound
negb
cmpsb
decb
int
jnp
mov
xor
rcrl
and
mov
adc
stos
xor
push
insl
add
xor
out
cmc
pop
lods
mov
or
fidivs
es
stos
rcr
andl
das
aam
sbb
cmp
xlat
loopne
mov
insl
arpl
jmp
in
popa
sub
adc
cmp
shl
enter
insl
fwait
cmp
lds
jl
cltd
roll
out
jns
xor
stos
shl
aad
mov
jge
and
xor
jb
mov
mov
scas
cmp
jmp
fst
pop
push
cmp
cmp
pop
adc
mov
jl
icebp
pushl
xor
mov
sbb
cmp
je
add
fstl
sub
add
add
mov
mov
call
fsubr
or
mov
icebp
xchg
cld
les
jae
adc
add
pop
dec
jg
jle
inc
mov
or
movsl
imul
rcrb
lods
push
inc
cs
lret
dec
pop
pop
mov
cmp
sbb
pop
in
adcb
pop
push
add
sti
aad
jo
arpl
in
or
sbb
adc
add
ja
dec
sub
or
add
imul
mov
test
rcrb
les
lods
ret
test
movsb
mov
dec
mov
xor
jl
and
push
lret
jo
push
lret
movsl
adc
push
and
push
jl
adc
push
out
lret
les
ret
mov
inc
pop
shlb
ret
clc
cmpsl
test
inc
insb
repz
mov
popa
mov
cmp
push
cmp
pop
lds
mov
lods
ja
mov
push
sub
inc
mov
ficomps
sbb
push
inc
mov
push
jno
rorb
mov
dec
dec
add
mov
movsl
lahf
sub
inc
jne
loop
xchg
repz
fsubrl
aam
cmp
inc
jnp
mov
test
sti
popl
mov
dec
cwtl
fmul
sub
sahf
test
in
out
int3
out
push
push
xchg
ficompl
or
cmp
push
clc
push
pop
sub
movb
or
mov
pop
adc
inc
mov
mov
lahf
xlat
popa
cmp
push
adc
mov
and
add
cmp
jmp
test
andb
cli
mov
repz
mov
push
xchg
xchg
loope
cmp
mov
into
bound
jbe
pop
dec
push
pop
cmpsl
out
push
rolb
ja
push
lods
add
ficompl
ss
pop
push
push
repnz
or
clc
cld
push
adc
jp
or
sbb
inc
mov
repnz
mov
inc
or
fdivrp
lds
movsl
popf
std
inc
mov
xchg
pop
ljmp
mov
stos
or
popf
fldcw
pop
lods
sbb
mov
mov
mov
mov
lods
in
mov
push
lahf
ficompl
std
out
mov
fs
loopne
movsl
cltd
pop
iret
test
outsb
adc
shl
hlt
mov
mov
mov
aas
dec
inc
mov
pop
in
sub
jbe
inc
push
mov
incl
lcall
pop
push
xchg
neg
mov
cmp
cmp
or
jl
xor
fwait
xchg
xchg
pushfw
out
pop
rclb
add
out
add
div
fsubl
and
ret
sbb
mov
mov
xchg
enterw
clc
inc
icebp
sub
incl
cmc
adc
sbb
out
gs
sbbl
scas
mov
in
and
mov
add
mov
jge
pop
clc
jge
fcoml
mov
popf
outsl
inc
rcrl
inc
fstpt
popf
rcrb
lret
jg
adc
in
push
imul
inc
fidivs
inc
sub
data16
pushf
fldt
mov
in
push
and
jmp
push
pop
jecxz
clc
in
push
jg
mov
add
cmp
inc
lods
push
les
ds
mov
stc
lods
mov
lret
adc
xchg
adc
fidivrs
inc
cmc
cmp
in
lcall
add
imul
jle
inc
loop
push
test
jb
mov
mov
jns
push
push
sbb
negl
cld
push
fcoms
dec
dec
fildll
sub
xchg
or
test
jmp
xchg
popa
imul
and
aas
repz
in
enter
shll
mov
mov
add
clc
adc
sub
daa
add
je
mov
das
push
repz
scas
cmpsl
mov
and
adc
mov
rorb
or
push
in
add
fcmovb
mov
mov
les
lcall
inc
mov
adc
lea
shll
inc
sti
and
jge
repz
pop
push
inc
loope
jns
sbb
cltd
imul
sub
inc
imul
pop
pop
inc
and
cmp
aam
sbb
int
jg
incb
mov
jno
pop
leave
hlt
fs
push
push
sub
xor
test
sub
ljmp
cmp
hlt
jbe
jo
jl
jg
push
cs
adc
mov
xchg
add
es
xlat
ss
jne
push
add
aad
jl
or
dec
mov
repnz
arpl
sbb
mov
mov
pushf
pop
int
sarb
gs
aam
pushf
push
pop
mov
hlt
fsts
into
aas
addr16
push
mov
push
pusha
daa
xor
add
xchg
sbb
fwait
mov
daa
test
or
inc
push
es
sbb
or
jo
in
jle
fisubs
adc
push
or
pop
scas
jnp
push
sbb
xchg
inc
inc
das
adc
fildl
push
sub
mov
and
mov
insl
lret
gs
clc
mov
sti
mov
push
cmc
popf
aas
cmp
sbb
sbb
or
fcoms
push
out
sub
jg
std
sbb
js
lock
js
pop
dec
jno
das
test
jns
shll
imull
jmp
cmpsb
inc
daa
cltd
mov
movsb
sub
sbb
test
sahf
adc
mov
pop
fwait
aas
ljmp
add
outsl
jmp
int
sub
inc
imul
std
inc
jl
add
xchg
xchg
pop
cmc
or
mov
push
sub
daa
pop
ja
inc
fldt
movsl
in
pop
adc
adc
scas
jbe
addr16
jb
add
pop
fmul
inc
mov
or
xor
stos
xchg
mov
jns
jl
xor
xchg
aaa
jbe
mov
sub
pop
xor
or
cmp
add
test
repnz
xor
inc
sub
and
dec
mov
push
iret
pop
mov
xor
pop
mov
roll
shl
ficompl
shlb
je
add
add
sub
icebp
insl
xchg
add
popf
jl
pop
scas
in
sti
ljmp
pop
lret
cmc
adc
cmpsb
call
pop
push
in
xlat
adcl
or
shlb
popl
jns
stos
pop
inc
aam
lods
arpl
js
or
pop
push
jecxz
repnz
and
pop
sbb
dec
dec
jle
and
pop
mov
mov
gs
pusha
ljmp
jne
ret
cmp
mov
cmpb
out
jbe
dec
mov
ja
ljmp
ret
push
insl
adcb
call
sbb
repnz
lret
jmp
mov
popa
lock
adcl
or
pop
inc
loopne
mov
aam
outsl
daa
loopne
pusha
addb
repnz
push
push
js
stos
dec
ror
pop
orb
fsts
pop
addr16
mov
and
cmc
mov
pop
ret
and
test
push
negl
mov
shrl
std
or
daa
inc
in
xchg
nop
arpl
and
inc
mov
outsl
cli
movsb
daa
mov
dec
pop
cld
notl
and
in
jb
test
adc
adc
xor
mov
lds
jae
nop
lods
push
cmpsb
enter
sub
mov
and
sub
lods
scas
es
ficomps
imul
stos
adc
adc
je
dec
aad
xlat
xchg
xchg
jne
pop
loopne
iret
sti
adc
data16
mov
mov
xor
je
push
xchg
sub
sbb
push
lret
mov
jne
mov
push
inc
jp
scas
jbe
jmp
cmpl
push
int3
aaa
decl
je
sub
sbb
fidivs
or
stos
test
fcoms
cmp
arpl
cmp
ret
les
subb
clc
mov
or
sahf
pop
bound
xor
rorb
loopne
jmp
lahf
aaa
sbb
ret
stos
js
out
or
mov
mov
mov
pusha
arpl
cmp
cmp
dec
lret
sub
mov
jp
sbb
pusha
mov
fdivs
or
jne
jecxz
mov
cmp
jo
insb
mov
push
or
outsl
outsb
mov
mov
cmpl
or
int3
shlb
ja
shlb
jle
mov
cmp
lds
jp
stc
int3
mov
leave
sarb
pushf
loopne
mov
and
mov
pusha
out
stos
push
leave
das
push
inc
mov
dec
xchg
filds
stos
mov
rorb
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
mov
cmp
mov
pop
int
jl
pop
jl
adc
xor
shl
sbb
rcrb
jbe
mov
dec
faddl
dec
and
or
out
insb
inc
or
lret
shll
xchg
js
fstpt
mov
pop
sbb
mov
sub
sbb
xor
pop
cs
xor
adcl
add
inc
xor
shll
aaa
lds
filds
sarl
inc
out
insb
out
cmp
out
mov
push
sti
sbb
mov
mov
leave
inc
jmp
cmpsl
out
dec
mov
divl
pop
jne
jo
dec
insl
test
xchg
movsl
add
hlt
mov
in
xor
test
rorl
xor
stos
mov
stos
mov
in
js
dec
testl
pusha
mov
cmp
mov
out
inc
inc
imul
fldl
inc
mov
dec
fsts
mov
inc
sub
adc
sti
pushf
inc
inc
sub
mov
xorb
mov
inc
jl
cmp
mov
enter
call
mov
cmp
xor
imul
xor
rolb
add
dec
in
rcl
mov
adc
mov
pop
int3
insb
jne
push
mov
aaa
mov
xor
in
lahf
aad
adc
xor
or
xor
daa
ret
xchg
outsl
or
mov
out
push
mov
fidivl
lods
pop
mov
adc
xor
mov
negl
xchg
pop
xor
fidivl
adc
adc
lcall
add
shrb
and
sti
xor
adc
ljmp
cmp
lods
rorb
cmp
out
mov
enter
shll
mov
xor
xor
sub
jne
dec
inc
xor
jecxz
mov
jbe
cmc
xor
aaa
in
leave
ss
mov
inc
lods
lahf
push
mov
movsl
es
add
mov
sub
sub
das
sub
les
popf
cmc
fdivl
jmp
icebp
push
push
sahf
push
scas
test
sbb
mov
or
sub
jns
test
xlat
sahf
sub
lock
or
sub
dec
mov
int
xor
sub
loopne
in
inc
add
gs
scas
clc
out
or
rcrl
push
aam
cmp
aad
cmpl
cwtl
lret
add
fs
inc
mov
push
cs
add
sbb
je
lods
scas
xor
xor
inc
std
xor
ds
pop
hlt
xor
aad
inc
arpl
add
jmp
mov
pop
push
inc
mov
sahf
mov
in
cmc
adc
dec
xor
push
in
sahf
in
pop
mov
mov
div
fs
insb
out
push
pop
or
mov
adc
jmp
cld
mov
jno
orl
cld
fs
mov
test
lahf
inc
sbb
icebp
pop
ss
sub
inc
or
and
cld
lcall
ja
enter
push
inc
xor
mov
rcll
jno
lds
mov
into
shll
inc
cltd
in
out
inc
popa
mov
fstl
xchg
xchg
jo
sti
mov
jae
enter
xlat
xorl
pop
loopne
mov
mov
xor
mov
dec
xchg
fbld
mov
push
xchg
push
shll
push
add
cwtl
andl
notb
and
sub
shrb
mov
or
push
mov
rorl
inc
ret
adc
pusha
test
mov
add
inc
mov
mov
xor
sahf
mov
lret
and
movsb
xchg
adc
adc
fdivrs
jl
mov
js
add
jmp
popa
repnz
jno
cmp
xchg
aam
inc
pop
inc
sahf
push
cltd
or
fldenv
out
es
sbb
into
fcomps
xor
push
call
pop
scas
dec
or
sbb
cli
out
mov
test
addr16
cmp
fnstsw
xchg
cmp
push
cli
and
push
bound
sbb
mov
mov
scas
push
sahf
adc
push
fs
test
jmp
in
mov
nop
dec
aas
out
mov
fisttpl
sub
ljmp
addr16
push
out
lcall
clc
daa
xchg
fidivrl
mov
test
jecxz
adc
adc
sbb
mov
outsb
pop
pop
mov
rorl
jbe
sub
nop
pushf
in
xor
cmc
cmc
pop
imul
das
rcl
pop
negl
in
arpl
inc
dec
imull
pop
setle
loop
push
or
scas
xchg
iret
ficoml
mov
xor
movsl
dec
stos
add
xchg
push
out
mov
xchg
std
lods
fisttpl
cmp
jo
mov
push
mov
aad
jns
nop
mov
xchg
jbe
or
cli
add
or
sbb
call
dec
mov
mov
pcmpgtb
jmp
jb
sbb
inc
rclb
dec
outsb
or
cmc
push
pop
divb
or
xor
mov
bound
popf
cmpsb
orb
ret
loop
sub
and
xchg
stos
les
adc
xchg
inc
popf
cmp
dec
xchg
ljmp
pop
and
or
adc
pop
aam
aaa
ret
gs
xchg
pop
pop
add
ficompl
jne
dec
xchg
scas
mov
repnz
imul
push
dec
and
je
imul
out
and
add
xchg
push
add
mov
or
fs
dec
xor
icebp
or
fs
pop
iret
arpl
or
mov
dec
sbbl
outsb
mov
push
jl
repnz
enter
mov
mov
inc
fimuls
jg
pop
popf
add
mov
aad
sbb
adc
gs
fcomip
sahf
test
sub
or
mov
pop
enter
xchg
in
or
mov
fimuls
jbe
pop
test
aas
sbb
clc
add
jge
fisttps
cld
and
xor
jge
lret
repnz
push
add
mov
ss
add
sub
fdivl
out
cmpb
mov
mov
mov
dec
xchg
jns
mov
bound
mov
fistpll
adc
mov
ficoms
push
dec
sbbb
outsl
cmp
inc
xchg
jb
cmpsl
lods
add
xchg
xor
sti
jbe
or
push
sub
addr16
mov
pop
mov
push
xchg
pop
gs
rolb
cld
mov
or
xchg
inc
sub
push
notl
lret
add
shrl
popa
xchg
clc
dec
sbb
sub
jl
inc
rcl
add
popf
jne
sub
adc
push
mov
pop
pop
setbe
pop
lret
inc
test
rorl
int
push
cmp
lahf
mov
sub
inc
and
pop
pop
testl
ss
dec
outsb
fadd
iret
leave
aas
jecxz
xchg
push
pop
inc
nop
jl
or
mov
lcall
outsl
push
loop
or
inc
push
push
test
jnp
ja
loop
aaa
stos
loop
bnd
cmp
push
lret
add
fwait
movaps
mov
gs
inc
imulb
mov
setno
out
leave
cs
es
test
out
shlb
subl
repz
cwtl
shrb
mov
mov
cmpsl
divb
das
xlat
pusha
cli
cmpsl
cmp
and
jbe
and
push
call
mov
popf
sbb
fbstp
mov
fildl
jb
and
or
pop
clc
inc
xor
loop
dec
mov
test
jge
adc
ds
cmp
sahf
cmpsl
scas
iret
shr
jne
es
fmuls
rcr
test
sbb
mov
icebp
mov
jecxz
shrb
js
xor
mov
inc
lahf
in
xchg
outsb
mov
xor
stos
sub
sbb
cmp
rolb
dec
mov
lcall
addr16
clc
xor
ficompl
jecxz
popa
bound
call
js
sbb
add
ja
cmp
pop
mov
inc
mulb
cwtl
aas
and
jmp
gs
push
pushf
xor
lods
add
sub
or
jo
add
negb
repnz
xchg
enter
cmp
mov
or
scas
mov
or
inc
ds
mov
xchg
and
cwtl
cs
adc
insl
xchg
push
ret
push
stos
adc
or
xor
sub
icebp
add
inc
or
lcall
outsb
push
dec
stos
lds
mov
mov
xor
xor
jle
mov
jae
nop
mov
xor
test
pop
mov
imul
and
dec
cwtl
outsl
mov
in
or
xchg
xor
dec
test
insb
xor
mov
jno,pn
or
mov
jno
ret
push
adc
dec
data16
push
pop
dec
and
addr16
scas
jg
pop
incb
or
in
push
or
test
lret
jecxz
xor
mov
int3
frstor
popf
test
sub
pop
cwtl
pop
repz
and
test
add
out
xchg
ljmp
jp,pt
push
loop
out
cmp
cmp
ds
sarl
push
aaa
std
outsb
stos
fwait
popa
inc
cltd
adc
adc
fiadds
dec
and
pop
pop
dec
jmp
jae
mov
in
add
frstor
cmp
fcmovnb
mov
jne
cltd
pop
or
jo
push
and
popf
test
jmp
js
mov
insl
repnz
fadds
or
dec
loopne
pop
and
cmp
xchg
mov
icebp
jecxz
sarb
push
outsb
mov
bound
mov
dec
push
mov
out
xor
cmpsl
sbb
mov
pop
iret
dec
xlat
cld
xlat
sahf
int
cmc
das
jge
stc
push
ljmp
fwait
inc
or
sbb
add
leave
jge
pop
pop
cmpl
es
mov
lds
insb
sti
dec
das
cmp
icebp
xor
sbbl
xchg
fwait
out
push
xchg
sbb
jae
cmp
xor
inc
dec
cmpsl
mov
bound
or
int
sub
cs
xor
pop
xchg
push
xor
stos
pop
cmp
pop
negl
add
ds
mov
mov
js
cltd
cmp
push
in
jge
in
nop
hlt
repnz
sbbb
or
push
or
arpl
inc
jge
mov
xchg
pop
lret
push
jge
leave
sbb
insb
dec
lock
cmpsl
std
ja
pop
call
cltd
mov
jmp
mov
inc
inc
pop
pushf
or
bnd
gs
mov
lret
or
jne
inc
mov
jmp
fdiv
jo
popf
hlt
bound
mov
or
sub
dec
in
push
js
aas
sbb
aaa
nop
in
ja
inc
data16
jnp
ja
mov
cli
insb
jmp
cld
out
inc
and
loope
dec
sub
gs
xchg
inc
pop
lcall
mov
jecxz
jb
popf
push
test
add
ljmp
xlat
or
push
mov
out
je
fsubrl
ljmp
mov
jp
pop
scas
in
jge
nop
bswap
ss
fxch
pop
ret
icebp
pop
jo
xchg
test
pop
loope
cwtl
mov
mov
dec
loopne
push
jo
iret
or
js
das
xchg
push
dec
adc
adc
cmp
testl
add
sbb
aas
and
sbb
fdivs
test
xor
dec
adc
cmp
js
insl
cwtl
out
sbb
push
add
add
inc
or
faddl
int3
pop
mov
push
into
sbb
clc
inc
pop
or
popf
dec
ja
xchg
out
popf
aas
dec
xor
and
dec
stc
pop
pop
gs
call
in
orl
js
andl
or
mov
shll
xor
fwait
and
xchg
sarl
fisttps
and
cmp
jne
jmp
std
cs
xor
cmp
test
pop
mov
mov
bound
repnz
lods
mov
ja
jne
ss
cmp
mov
xchg
adc
mov
add
shlb
pushf
add
je
lock
in
pop
sub
lret
adc
pop
lds
dec
mov
jl
inc
stos
out
xor
scas
lods
std
push
js
push
ds
adc
rcrl
cli
jno
ss
xorb
jne
mov
aaa
push
add
ss
mov
sarl
and
or
pop
dec
or
sbb
imul
mov
push
lcall
inc
insb
add
push
lds
std
add
std
lods
movsb
mov
sbb
test
loop
cmpsb
pop
leave
ret
sbb
mov
jb
imul
mov
aad
xor
cmc
movsb
cwtl
std
cltd
push
push
push
lea
shll
and
pop
lods
ss
rcrb
cwtl
inc
aas
sbb
mov
sub
lcall
enter
push
arpl
wrmsr
dec
mov
vmovups
mov
jae
pop
sbb
sbb
lret
scas
out
xor
xor
sbb
imul
mov
psubsw
cmp
into
adc
jb
pop
mov
das
cmp
fdivr
xchg
les
into
cmc
nop
sarl
mov
lods
push
inc
xchg
xchg
mov
cmp
mov
cltd
and
daa
inc
out
xchg
mov
jns
lods
in
lock
and
sub
or
bound
inc
inc
mov
jge
stos
mov
loope
mov
push
xchg
jne
imul
cltd
xchg
mov
daa
cmp
push
jle
call
scas
out
gs
push
test
sub
into
inc
push
mov
jle
dec
imul
jns
add
xor
sbb
cmp
ss
cmp
hlt
rcl
mov
outsb
mov
jl
notb
pop
xchg
inc
cmp
xchg
and
pop
mov
leave
testl
test
rcrb
cli
int3
cmp
jp
xchg
fwait
add
js
xchg
adc
unpckhps
dec
mov
adc
xor
jge
bound
push
out
jbe
or
scas
push
mov
insb
adc
cmp
scas
xor
jbe
add
scas
xchg
push
ret
jno
and
inc
cs
stc
shlb
xlat
dec
mov
push
sbb
mulb
xchg
scas
in
xchg
cs
aad
ds
sub
cmc
shlb
pop
jg
addl
push
push
mov
stos
outsb
xor
inc
inc
xchg
inc
call
hlt
push
in
add
push
dec
int3
lods
or
aaa
jg
sbb
test
aas
jno
clc
inc
xchg
cs
enter
jl
sub
pop
push
adc
andb
or
xchg
jle
mov
cmp
and
movsl
adc
xchg
pusha
inc
iret
jmp
pusha
lahf
mov
pop
push
not
mov
pop
jge
dec
fisubl
nop
and
repnz
cmpsl
movsl
xchg
inc
rolb
or
outsb
and
iret
rcr
mov
jne
mov
pop
sbb
gs
cltd
sbb
sub
dec
mov
cmp
or
pop
xor
sub
icebp
mov
repz
mov
push
sbb
stos
xor
cltd
imul
ror
inc
mov
cmp
mov
lock
in
jmp
lcall
xchg
add
jecxz
cmpsl
fnstenv
jns
push
icebp
cmp
xchg
test
adc
cmc
lahf
mov
xor
xor
xor
xor
incl
inc
ucomiss
jge
cmp
xor
mov
shl
pusha
jnp
lret
lods
rclb
out
add
xchg
aas
mov
lock
push
xchg
add
ret
dec
lods
lahf
lods
mov
jmp
ds
clc
inc
mov
jge
mov
lock
cwtl
inc
mov
add
mov
pop
cmp
andb
rcrl
fiadds
inc
into
les
or
adc
jmp
pop
cmp
pushf
lahf
insl
mov
iret
mov
and
pop
repz
sbb
mov
out
and
jecxz
mov
loop
add
data16
add
xor
out
lret
push
scas
sub
int3
push
stos
push
and
fdivrs
or
sub
push
jecxz
test
pop
adc
in
dec
ss
jne
bound
push
out
rorl
into
ja
outsl
cmp
push
pop
imul
orl
xchg
enter
mov
lret
or
iret
jecxz
jae
and
adc
cmpsb
pop
movsb
sbb
outsb
shlb
push
je
sub
add
and
das
sbb
fstl
dec
push
movsb
cwtl
sbb
inc
adc
sahf
repz
stc
or
loopne
sahf
fcmovbe
and
push
daa
nop
sti
mov
notb
inc
inc
xor
loopne
inc
push
mov
in
decb
xchg
or
dec
dec
push
push
scas
lock
cmp
dec
pop
fcom
xor
inc
ljmp
cli
bnd
je
push
data16
clc
leave
cmp
hlt
in
mov
mov
inc
daa
xor
sti
and
pop
fisubrs
and
sbb
test
push
xor
leave
pop
sbb
dec
scas
fsubr
cli
xlat
pushl
inc
or
popa
sbb
mov
sbbb
sbb
outsl
xchg
stos
in
push
cmpsb
push
sti
pop
xor
add
ja
inc
xor
inc
stc
dec
push
pop
fcom
adcb
xchg
mov
mov
mov
test
nop
add
sbb
movsl
push
pop
push
mov
addr16
xor
loopne
cmp
mov
ja
mov
dec
cmp
lret
xorl
popa
outsb
decb
leave
xchg
call
in
or
mul
lods
popa
xchg
mov
aad
dec
scas
sub
jle
inc
pop
push
insb
xchg
dec
es
sbb
mov
xor
add
mov
xchg
xchg
dec
xchg
mov
dec
mov
aaa
jmp
lds
pop
cs
or
xor
lahf
or
lods
ret
ja
jnp
or
testl
push
clc
pop
mov
dec
lret
pop
in
mov
add
mov
mov
xor
fs
or
jno
js
nop
pop
icebp
xlat
stc
stos
clc
test
xchg
popf
imul
xor
call
cmp
or
fwait
push
int
xchg
sbb
inc
add
lret
mov
test
xor
in
lea
pop
addr16
movsl
push
add
outsl
mov
insl
push
int
push
or
xchg
sti
sbb
push
xchg
scas
arpl
pop
xchg
or
adc
stos
dec
and
hlt
sub
push
mov
dec
mov
scas
adc
push
mov
and
cwtl
add
call
insb
adc
loope
dec
jbe
scas
jl
in
clc
mov
pop
dec
mov
xchg
sub
cli
xor
cs
jp
jnp
xor
add
pop
sbb
jae
mov
push
shrb
movl
sub
dec
push
pusha
pop
mov
add
les
lods
push
add
mov
lahf
clc
jns
sub
sti
dec
and
pop
mov
pusha
sbbl
in
cwtl
call
sti
and
insl
lods
movsb
jo
adc
pop
into
mov
dec
jmp
jl
dec
dec
filds
imul
in
push
push
pop
outsb
jg
push
adc
inc
insb
mov
les
into
mov
daa
or
xchg
flds
cmp
lahf
push
push
push
push
fs
test
mov
and
sbb
push
test
adc
inc
call
mov
pop
cmp
mov
and
adc
cmp
mov
pop
negb
dec
xchg
jmp
xchg
push
imul
pop
jmp
leave
pushl
add
test
pop
adc
leave
or
das
inc
xor
pop
dec
into
dec
insb
or
aad
stos
vpsubusb
mov
xchg
data16
jp
sbb
scas
push
sbb
adc
sbb
push
arpl
cmp
ljmp
ja
mov
loopne
cli
jmp
ficompl
fsubr
lods
add
xchg
mov
inc
sbb
cmc
xor
test
push
call
addr16
push
or
sbb
xchg
push
adc
sbb
mov
addl
popa
add
sbb
in
out
cmp
sub
sub
inc
sub
shlb
scas
pop
and
inc
jp
sub
sub
xlat
aaa
cli
cltd
mov
test
jmp
xor
into
lds
lret
push
xor
add
and
out
fcoml
ljmp
xor
flds
fldenv
arpl
or
daa
daa
pop
jnp
adc
pop
ficompl
shl
and
or
loope
or
jg
inc
arpl
cmp
push
mov
data16
push
testl
adc
adc
cwtl
push
dec
iret
sbbb
mov
cmp
outsb
cmp
push
leave
cmc
dec
lods
in
dec
add
mov
lret
rolb
andb
inc
adc
or
stos
fiadds
loopne
pop
roll
mov
dec
xchg
sub
inc
fwait
fwait
divb
push
adc
and
jno
jmp
lods
adc
ds
in
call
add
scas
and
les
mov
push
leave
rcrb
xchg
xor
daa
out
andl
dec
fidivs
cmp
mov
xchg
pusha
jae
jns
out
cwtl
xor
jne
xor
mov
rep
mov
cmp
pusha
adc
cld
inc
xor
dec
fs
test
ja
mov
cmpl
daa
dec
imul
lret
xchg
lds
push
test
mov
ja
dec
ja
lcall
add
lret
cld
xor
aam
mov
sub
ror
add
shll
pop
inc
and
sti
stos
mov
out
add
cmpsb
jl
or
jl
int3
out
mov
xchg
ret
lds
mov
popa
mov
mov
mov
ficomps
lret
ret
test
cmp
data16
lea
outsb
jne
mov
dec
xchg
dec
je
std
cld
imul
dec
les
or
out
mov
in
into
mov
pop
neg
into
xchg
mov
int3
xor
and
adc
dec
push
dec
test
xor
mov
xlat
mov
loopne
cmp
ret
scas
inc
xchg
add
test
jl
mov
xchg
repnz
dec
int
sahf
lea
or
shrl
add
icebp
inc
ss
rolb
in
ret
aam
mov
mov
push
shl
ds
fnsave
sub
lock
filds
mov
or
pop
jp
imul
jo
mov
jmp
loope
cld
cwtl
pusha
test
int
and
jne
sti
loop
cwtl
in
xor
sub
mov
push
mov
jno
sbbb
or
leave
cltd
cs
insl
loopne
cmp
movsl
push
push
pop
pop
enter
jno
fistps
push
or
out
sbb
aas
and
shld
mov
test
xchg
nop
mov
xchg
dec
je
pop
add
into
les
scas
enter
jmp
xchg
xchg
mov
sbb
int3
add
mov
repnz
sub
adc
mov
mov
dec
mov
out
in
mov
pop
hlt
mov
fstpt
mov
roll
pop
mov
lahf
je
push
sbb
icebp
add
addr16
mov
inc
sub
push
mov
cmpsb
out
cld
jmp
int
adc
pop
sub
sbb
jae
push
or
hlt
cmp
and
sbb
test
and
adc
or
push
mov
outsl
cmp
rolb
sbb
push
inc
jp
push
xchg
pop
out
or
bound
pushf
das
sub
mov
or
jmp
std
rcll
mov
int3
fstl
movsb
rcll
mov
out
daa
repz
pop
sbb
cli
adc
scas
adc
popf
jne
mov
lahf
pop
sahf
rorb
cmp
les
mov
xchg
popa
in
out
sti
add
adcb
jmp
pop
push
stc
sub
jmp
and
push
jmp
pop
sar
jge
adc
adc
mov
popf
dec
in
and
pop
mov
mov
mov
outsl
repz
and
je
jg
xor
pop
push
push
ds
in
cld
mov
and
pop
dec
iret
adc
cli
imul
add
sbb
arpl
pop
fdivs
xor
adc
mov
sbb
add
movl
stos
xchg
seto
out
pusha
lock
arpl
mov
dec
add
dec
ds
lods
fs
fisubrl
sub
inc
or
xchg
mov
int
add
ret
inc
adc
mov
xchg
jae
repz
enter
in
sbb
lcall
pusha
ret
pop
jae
or
rolb
call
dec
inc
mov
out
or
bound
sub
test
inc
sub
xchg
dec
cmp
stc
int
fsubr
shrl
push
mov
in
pusha
lods
das
fidivrs
or
shrb
std
jb
movb
pop
xchg
xchg
cmovne
int
aaa
mov
push
pushf
lahf
inc
lock
enter
mov
adc
aam
dec
jmp
jg
clc
xchg
fnstenv
movsl
inc
fisttps
xchg
andl
adc
add
sbb
test
pop
jnp
cmovne
cltd
push
dec
sahf
pusha
je
int3
sub
sub
mov
dec
or
rcll
cmp
lds
xor
or
scas
inc
out
je
pop
rcll
enter
pop
mov
push
cmpsb
add
or
out
pop
jnp
jbe
pop
mov
test
pop
jp
or
pop
cmp
rorb
shrl
dec
pop
lods
out
lahf
test
neg
mov
jge
hlt
add
cmp
push
sbb
jnp
mov
mulb
inc
jmp
sahf
mov
inc
daa
pop
insb
jno
pop
imul
mov
shlb
add
xchg
and
inc
or
stc
inc
repnz
sahf
sub
les
adc
mov
lret
imul
mov
test
mov
push
inc
pop
inc
mov
iret
outsl
dec
push
adc
clc
ret
into
inc
daa
cltd
cmp
cltd
push
dec
sub
push
in
mov
pop
xchg
mov
repnz
insb
sahf
cmp
mov
jnp
sub
scas
mov
or
mov
xchg
xchg
test
mov
mov
mov
shrl
popa
cli
cmp
add
mov
cmc
lahf
mov
push
sbb
or
mov
mov
stc
lods
jecxz
out
cmp
ljmp
fcomps
cmp
lret
xorb
inc
arpl
arpl
rol
sti
leave
xor
jae
testb
ss
mov
adc
dec
and
pushf
push
fdiv
jmp
loopne
mov
ljmp
insb
out
sbb
in
in
jmp
push
sub
in
inc
loopne
icebp
aam
and
pop
pushf
int3
mov
dec
pop
xor
mov
fiadds
dec
add
imul
sahf
cmpsl
or
mov
ret
push
aam
mov
es
dec
movsb
mov
pop
out
pop
ret
loopne
jnp
es
into
scas
dec
sbb
ret
cmp
scas
fnstcw
test
roll
or
and
mov
dec
sub
jb
bound
fmull
pop
iret
popa
dec
out
pop
insl
rol
in
cmp
sbb
lcall
inc
std
jo
jb
cmp
mov
cmp
nop
test
mov
adcl
dec
mov
push
add
lods
pop
lds
out
mov
jg
es
dec
pop
aad
inc
cwtl
and
jecxz
jnp
mov
push
in
dec
mov
inc
push
jmp
out
jne
lock
mov
sub
jle
push
pop
pop
fsts
mov
cmpsl
push
mov
shrl
lcall
jg
cmp
sub
add
push
or
shl
sub
into
imulb
lds
cwtl
imul
adc
mov
xchg
loope
js
cwtl
and
in
or
popf
mov
dec
mov
cltd
mov
jno
in
sarl
data16
movsl
enter
adc
xor
xor
or
sub
mov
pop
into
pusha
nop
lahf
xchg
sbb
pop
mov
push
pop
loop
cmp
lahf
in
mov
enter
pop
xchg
outsl
push
push
push
lret
incl
lahf
fs
ljmp
stc
insb
inc
les
outsl
sub
inc
add
inc
in
sbb
subl
dec
pop
cmc
repz
out
push
cmp
cmpsb
xchg
inc
andb
add
insb
mov
fcoml
cmp
movsb
mov
insb
stos
pushf
lcall
xor
cmpsb
inc
jl
sbb
mov
or
mov
das
and
lods
mov
repz
pop
or
lock
jg
gs
imul
scas
inc
movsl
jne
inc
mov
fsubl
mov
jmp
ss
cmp
sahf
sbb
and
mov
mov
sub
adc
or
inc
xor
mov
repz
jns
mov
cld
xorl
cltd
xchg
pop
mov
or
xor
ret
loopne
dec
and
push
push
leave
ret
into
arpl
lods
xor
psubq
adc
push
push
push
cmp
mov
fcoms
pushf
outsb
push
pop
cs
or
call
in
out
insl
push
push
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
jmp
insb
jns
sbb
mov
push
bound
out
call
pop
jl
sahf
or
add
fwait
push
aas
in
push
out
cmp
sub
psubsb
fnsave
xor
lcall
and
jp
xchg
push
push
dec
lret
jns,pt
adc
push
adc
adcb
cmp
ds
push
js
jle
stos
sub
sahf
repz
sub
adc
les
test
shll
fld
sbb
jecxz
push
outsb
mul
jg
or
inc
cwtl
in
pop
rcrl
xchg
fdiv
js
loopne
dec
loop
mov
out
ffreep
stos
pop
inc
lahf
jle
mov
out
cmp
jle
clc
jp
outsb
outsb
lahf
ret
add
lock
adc
lds
xor
ds
or
lahf
dec
pop
imull
ficoms
ds
not
mov
pop
test
push
or
and
movsb
or
leave
hlt
jge
mov
sub
sbb
pushf
sti
iret
hlt
cmpsl
push
bnd
out
mov
and
hlt
je
jl
jbe
es
test
jg
fcomps
sub
es
and
aaa
addr16
neg
sbb
subb
mov
push
sub
mov
jns
popf
jo
js
das
mov
sub
pop
dec
divb
lds
pop
rcll
mov
add
test
imul
xchg
push
mov
lods
lahf
addr16
ljmp
mov
stc
bound
xchg
shll
clc
xor
jno
cmpb
out
std
mov
insl
xor
xchg
push
hlt
xlat
jmp
imul
sarb
fmuls
js
iret
add
add
xor
push
mov
adc
loope
mov
sbb
cmc
push
lcall
and
push
inc
xchg
movsb
shl
pop
mov
aam
rcr
jne
std
ja
loopne
aam
inc
inc
mov
jecxz
add
dec
dec
data16
cmp
push
test
and
imul
test
fstps
das
xor
or
push
fwait
test
dec
jnp
mov
xor
es
jb
xchg
fs
and
jo
xchg
fldenv
jo
popa
lods
leave
xchg
enter
jle
adc
imul
es
ljmp
out
sub
and
into
push
add
movsb
push
or
add
hlt
pop
and
stc
sbb
sub
add
and
iret
mov
scas
xchg
push
dec
pusha
cld
jp
cld
mov
pop
lock
ret
pop
lds
push
push
sbb
lret
repnz
movsb
mov
fwait
sbb
rep
or
pop
inc
stc
sub
xchg
sbb
mov
sbb
or
mov
scas
push
orl
push
xchg
inc
xchg
clc
inc
sub
das
das
pusha
jge
shll
jge
inc
data16
inc
mov
pop
xchg
aas
dec
adc
movsb
jo
loope
out
lret
ret
shll
fadds
sub
loope
mov
jecxz
lahf
pop
xchg
xor
int3
das
leave
or
xchg
and
sbb
rcrb
ret
pop
std
dec
mov
and
xchg
jo
addr16
sbb
lock
push
cltd
rcrb
jae
imul
pop
jns
jmp
sbb
sarb
sbb
lods
andb
dec
add
rcll
test
es
inc
in
idivl
mov
mov
add
push
test
mov
mov
xchg
mov
jecxz
push
ret
es
inc
push
mov
ja
cmpsb
sub
lea
xchg
mov
jge
pop
mov
mov
fidivl
push
cmc
popa
pop
sub
push
scas
js
lret
xlat
fwait
popa
sub
fisubl
sub
pop
es
outsb
fcmovb
daa
popf
loope
hlt
dec
inc
mov
and
mov
shlb
inc
sub
imul
mov
cmp
aam
sbb
and
not
enter
pop
mov
jnp
mov
das
pop
icebp
lcall
mov
adc
adc
pop
iret
in
cmpb
cltd
jg
add
add
xchg
xor
pushf
jp
lods
mov
fmul
xor
cmp
mov
xchg
sbb
sbb
xchg
dec
clc
xchg
test
sbb
xchg
pop
inc
frstor
cltd
lea
shrb
pushf
movsb
hlt
xchg
aam
rcl
mov
pop
repz
dec
xchg
pop
mov
pop
das
jmp
mov
rorb
mov
add
sti
push
mov
mov
dec
js
cmp
dec
out
ficomps
enter
test
xor
insl
ret
xchg
dec
negl
dec
jae
mov
mov
adcl
inc
push
pop
fldcw
pop
xchg
jmp
inc
mov
fistpll
outsb
sbb
popa
dec
sbb
xor
mov
in
les
fsubl
mov
cmp
mov
cld
cltd
rorb
rolb
insl
lret
cs
adc
gs
xchg
xchg
mov
out
std
sbb
sbb
rcrb
jl
jle
jp,pt
bound
mov
dec
lods
xchg
adc
mov
mov
jns
test
js
int
stos
in
out
insl
fcompl
xchg
jmp
or
flds
loop
shll
mov
jle
ja
pushf
xor
push
stos
sub
xchg
int3
pusha
cli
cmp
repz
sub
cmpsb
mov
aas
pusha
or
bound
mov
mov
jne
divl
mov
inc
repz
push
fcompl
rcrb
sub
dec
mov
mov
fisubl
sbb
movsl
mov
loop
outsb
push
inc
xor
data16
inc
jge
pop
loop
pop
test
pop
cmp
and
stos
xchg
and
adc
adc
xor
in
addr16
xchg
cmpsb
std
shrb
push
fidivl
mov
pusha
mov
sub
stos
sbb
xchg
shll
xor
shl
xor
cld
xchg
add
mov
data16
pop
lret
scas
inc
pushf
fnstsw
jns
aad
fnstenv
dec
jecxz
push
cmp
sbb
ret
sbb
lahf
fwait
jmp
push
jge
fildl
adc
scas
inc
push
mov
leave
leave
mov
xor
jp
sbb
and
cmp
mov
inc
mov
jl
lahf
mov
gs
insb
imul
sub
mov
fdivl
ljmp
add
cmc
mov
out
call
es
xchg
mov
imull
jne
add
xchg
mov
pop
fwait
popl
insb
mov
fsubr
xchg
sub
aam
dec
adc
shl
loop
mov
or
push
les
hlt
pop
daa
int3
lahf
jp
daa
dec
adc
leave
out
sbb
xchg
jge
cmp
and
pusha
cli
mov
je
loop
outsl
aaa
in
push
mov
sahf
mov
leave
fwait
inc
fsubrs
push
xchg
cmovnp
xchg
mov
push
aas
std
dec
fsubrs
pop
into
mov
loopne
push
aam
sbb
nop
mov
int
jl
or
sub
xchg
inc
or
add
xor
mov
xchg
mov
aas
jno
adc
adc
loop
nop
add
mov
call
mov
cmp
dec
jo
inc
call
out
add
ja
jmp
out
test
scas
xchg
dec
cmp
data16
xchg
fpatan
and
ret
cltd
cmpsl
sub
in
insb
adc
jle
fldl
push
scas
sub
pop
push
stc
or
aam
inc
gs
out
repnz
call
mov
mov
jl
xchg
out
xchg
clc
das
cmpsl
icebp
jecxz
pop
mov
push
mov
jo
jle
stc
cmp
add
xchg
std
in
or
xor
dec
inc
aas
fmull
insb
mov
mov
test
xor
test
xchg
mov
adc
pop
imul
out
xchg
adc
push
outsb
nop
sbb
paddq
jns
add
cli
ret
sahf
lret
sub
jp
inc
pop
jns
xchg
cmp
out
pop
ret
repz
mov
aaa
inc
adc
aam
clc
lods
pop
mov
xorb
add
insb
mov
cmp
mov
dec
in
xor
mov
test
and
add
and
aaa
pop
adc
jnp
les
sbb
dec
gs
in
loop
test
cmc
aad
sub
lret
aad
lea
sub
fs
sub
sub
xor
cmp
mov
mov
xchg
fs
data16
out
mov
pusha
movsb
mov
jge
addr16
sti
icebp
rcll
stos
stos
je
push
xchg
and
xor
mov
out
xchg
jno
pushf
negl
repz
sbb
jo
cmp
stos
jb
mov
jno
jmp
xor
jle
fs
pushf
rorl
sti
popf
fwait
lret
or
je
aaa
mov
or
and
jns
repnz
pop
jo
mov
or
mov
pop
jae
lahf
pop
ss
jl
and
sub
mov
pop
adc
adc
out
test
adc
pop
rcl
mov
mov
add
xor
or
add
mov
xor
push
jp
add
addb
bound
jmp
test
add
syscall
icebp
das
enter
sahf
mov
jne
inc
lods
cld
xchg
imul
movsl
sbb
jnp
imul
push
shrl
pop
sbb
inc
sbb
imul
xor
nop
dec
or
pop
clc
push
leave
aaa
imul
sbb
fs
pop
clc
lock
test
cli
testb
aam
mov
or
fadds
outsb
sub
push
hlt
pop
lret
pop
popf
mul
sub
xlat
sbb
cmp
jne
lcall
sub
roll
sub
hlt
cwtl
rorl
mov
dec
add
cmp
aas
in
pusha
or
aam
mov
ds
out
pusha
xlat
sti
xchg
call
aaa
xor
sar
icebp
insb
lret
cmp
cltd
jne
mov
cwtl
pop
sahf
jmp
ret
scas
sub
cmpsb
xlat
jne
jb
xchg
mov
jmp
cmpsb
mul
leave
je
sti
cmpsb
fisttps
sbb
lods
jne
insl
pop
clc
xorb
add
loope
les
out
sub
push
fsubl
mov
cmp
add
cmovs
aaa
dec
adc
inc
add
in
add
repnz
jbe
jno,pn
in
ret
and
lods
je
fwait
notl
jae
sbb
pop
cmp
push
nop
pusha
mov
jno
fidivl
mov
in
icebp
ljmp
movsb
scas
xor
popf
ret
or
or
xor
mov
stos
jl
push
push
jns
mov
cld
mov
jecxz
ja
sub
jl
cltd
sub
adc
jp
adc
mov
ja
sbb
pop
test
sbb
nop
xchg
jmp
xchg
sub
imulb
xchg
out
fsub
jle
bound
adc
jecxz
es
mov
mov
push
or
insl
out
incb
pop
push
adc
xor
imul
adc
push
mov
mov
cwtl
popa
add
sbb
dec
and
inc
sub
je
sbb
and
stos
movsb
xor
fldenv
or
sbb
sarb
cli
adc
xor
in
jmp
hlt
pop
loop
aas
sbb
and
jnp
loope
sahf
mov
and
mov
loope
dec
cmp
cli
out
fnstenv
or
xchg
lret
inc
or
into
nop
xor
stos
test
and
mov
mov
lret
data16
push
repz
or
sbb
push
loop
push
pop
xor
repz
push
xor
ret
mov
dec
push
int
add
jg
jmp
cs
sbb
scas
dec
mov
lret
or
push
mov
xchg
jp
imul
sarl
out
aam
xchg
push
outsb
mov
dec
lahf
jnp
mov
add
mov
rolb
imul
mov
mov
es
xor
ds
sub
jae
cli
stos
push
xchg
or
call
pop
pop
bound
cmp
add
jnp
lcall
adc
cmc
xor
bound
fsub
sbb
ret
insb
and
imul
ja
sub
lds
sub
popl
std
cmp
or
lret
arpl
pop
loope
jno
xor
xchg
fidivrl
ljmp
loop,pt
cld
and
pop
jo
mov
add
and
jb
add
xorl
pusha
in
xchg
out
bound
es
fmuls
pop
sub
fcmovb
cmpsl
adc
add
and
dec
fs
xor
push
ret
cmp
or
sbb
nop
push
sti
sub
xor
mov
stos
out
test
fisubl
xchg
lods
and
test
cwtl
add
cs
mov
cmp
add
daa
mov
mov
sub
arpl
jbe
gs
iret
test
les
dec
fisttpl
lea
sbb
call
mov
mov
jg
das
adc
add
pushf
std
dec
pop
mov
jle
push
cld
shrb
outsl
push
dec
or
push
xchg
insl
out
stos
test
aas
idivl
sahf
sbb
pusha
xor
mov
or
mov
sahf
push
mov
ret
aam
adcb
mov
or
ljmp
or
xor
fstpt
xor
inc
jne
sub
cmp
cli
xor
add
mov
cmc
lret
pop
push
fsubs
cmpsl
loop
into
loopne
lock
pop
ret
in
mov
roll
push
scas
xchg
pop
jae
mov
jle
lret
sub
push
cmp
or
pop
outsb
or
mov
fwait
dec
lcall
jbe
fcmovu
and
cwtl
inc
movsb
xchg
sahf
lock
push
idivb
divb
jns
sbb
lea
mov
inc
adc
mov
xor
sub
jecxz
sub
aaa
test
sti
ror
jmp
mov
dec
xor
dec
push
xchg
enter
outsb
ss
cmc
das
mov
or
dec
jp
loopne
outsl
mov
std
adc
xchg
or
mov
cmp
popf
int3
ficoml
std
ss
inc
jl
imul
ss
test
scas
adc
dec
imul
rcll
sarb
and
adc
fnstsw
enter
cmpsl
pop
pop
push
mov
fsubp
push
sarb
xor
shll
fwait
inc
loopne
push
mov
dec
rorl
cltd
and
pop
push
dec
cmpsl
clc
fwait
cmp
xchg
fincstp
adc
jle
xchg
repnz
hlt
imul
mov
aaa
xchg
adc
idivl
sub
movsb
dec
int
jo
out
push
daa
je
mov
mov
cmpsl
popa
or
pop
in
popa
mov
xor
es
inc
xor
test
xchg
add
ficompl
stc
and
adc
jmp
daa
cmp
mov
stos
incl
cmp
nop
mov
add
dec
jnp,pn
inc
cmp
push
testl
xor
pop
rclb
loope
jmp
sti
andb
test
lock
mov
out
mov
ficomps
jno
sbb
popf
imul
int3
dec
out
push
js
subb
inc
nop
sbb
fisttpl
or
mov
sarl
data16
push
lods
adc
cs
out
xchg
fidivs
cmp
fnstcw
mov
stos
aad
lds
repz
cwtl
mov
fbld
mov
xchg
ljmp
sahf
jle
insl
mov
insl
push
lods
aad
push
xor
mov
mov
cld
sbb
mov
sub
sub
adc
test
mov
and
jbe
push
adc
push
sub
xor
mov
inc
mov
mov
sbb
shrb
xor
push
loope
xor
call
sahf
sub
or
loopne
mov
scas
push
jns
xchg
int3
test
aad
cmp
aam
loope
sbb
lcall
sarb
mov
cmp
push
pop
js
or
pop
mov
cmpsl
ljmp
insl
push
mov
add
bound
inc
fistpll
xor
jne
sbb
xor
test
mov
shrl
pop
mov
scas
xchg
mov
in
or
outsl
and
jno
fldt
pop
sub
xor
popf
addl
mov
inc
hlt
iret
pop
cli
pop
or
push
push
add
imul
inc
mov
ds
lods
inc
aas
sub
lods
sub
idiv
test
jl
lds
sbb
sbb
jb
outsl
or
cmp
mov
jb
loope
adc
inc
ret
pop
movsb
aaa
data16
fdivrl
sub
mov
in
xor
and
jmp
adc
add
rol
iret
bnd
sub
jb
mov
push
movsl
cld
fcmovnbe
lret
add
outsb
mov
outsb
sub
add
nop
jp
cwtl
pop
mov
sbb
or
xor
cmpb
lret
call
jecxz,pn
clc
pop
jns
and
adc
mov
loopne
xchg
outsl
repz
cmp
movsb
test
mov
mov
pop
push
pop
repz
inc
out
insb
inc
pop
jnp
ret
rorl
lods
push
mov
aam
into
mov
cli
mov
inc
inc
arpl
jecxz
xchg
push
xchg
xchg
lods
into
jecxz
adc
jbe
adcb
sub
pop
outsb
pop
pushf
xchg
pushf
mov
sarl
push
push
popf
insb
jnp
xchg
mov
mov
jl
test
lret
cmp
mov
jmp
jmp
inc
test
stos
or
or
sbbl
call
in
fcoml
ret
jns
dec
rcl
xor
je
loopne
fcmovnb
je
sbb
cltd
dec
pop
inc
pushf
add
jl
js
cmc
push
ret
pop
out
lcall
push
mov
xor
xchg
fdiv
fcomps
sub
cmp
xchg
or
jecxz
jbe
push
sti
leave
or
inc
mov
push
ljmp
mov
sub
xchg
imul
push
insb
adc
xchg
bound
pop
cmp
fbld
leave
insb
loope
leave
pop
jl
cmp
int
test
inc
dec
cmp
sub
test
xchg
dec
dec
test
pop
and
ret
sbb
pop
xchg
js
dec
nop
push
imul
push
out
bnd
push
jbe
mov
in
jmp
mov
xchg
clc
add
cmc
inc
and
dec
mov
imul
inc
sub
clc
mov
lret
mov
xor
cmpsl
pushf
and
fisubs
jbe
xor
mov
mov
pop
subb
push
mov
adc
lea
ja
push
test
push
sub
repz
xor
cmp
call
loopne
es
xor
push
test
mov
and
enter
or
xchg
add
dec
scas
loope
dec
or
pop
stc
fistpll
inc
dec
dec
fisttpl
clc
sbb
mov
scas
movsl
inc
pop
mov
jne
inc
test
inc
cmp
fists
hlt
mov
in
cmpsl
test
out
scas
out
fidivl
mov
sbb
mov
std
adc
mov
dec
and
mov
fldenv
sub
cld
test
or
lock
dec
fwait
pop
or
sti
and
jmp
pop
xchg
sar
clc
loopne
insb
shl
add
stc
fwait
test
pop
popf
mov
pusha
push
fucom
lock
mov
dec
mov
hlt
clc
sub
mov
dec
lods
out
sub
mov
inc
ret
lcall
xlat
pop
xor
mov
mov
int
sarl
mov
movsb
rcll
xchg
iret
cmp
jmp
dec
ret
xchg
inc
sub
xlat
insb
xchg
dec
inc
outsb
lock
mov
imul
jle
sub
fbld
push
xor
or
ret
ds
int3
std
ds
mov
aas
cmp
jbe
dec
and
jbe
push
ret
adc
scas
ficomps
xor
cmp
xor
adc
mov
sub
xlat
mov
fstpl
fildll
ds
mov
sahf
cmpsl
mov
sbb
mov
es
xorl
fistpll
xchg
cmp
dec
pop
popa
insl
push
sub
clc
push
dec
sbb
nop
push
mov
nop
pop
mov
outsl
xlat
inc
je
or
push
scas
mov
popa
ret
jno
imul
je
cmp
sub
out
movsb
sbb
leave
movsl
mov
int3
icebp
arpl
mov
lock
mov
pop
pop
lods
int
es
cltd
jmp
fwait
and
rcrb
insl
add
xchg
dec
jne
jmp
jbe
lcall
xchg
mov
add
jns
mov
dec
dec
jg
arpl
shlb
cmc
out
or
fsts
and
mov
sbb
and
lahf
add
sbb
insl
mov
pushf
sbb
rcll
outsl
xchg
repnz
push
push
in
cmp
inc
pop
insl
decb
unpckhps
inc
dec
ds
sub
stc
inc
roll
int
or
sbb
out
xchg
jge
and
push
cmp
enter
stos
add
aam
adc
sub
cwtl
inc
xor
ja
stos
xor
imull
xchg
dec
pop
mov
scas
cld
mov
loop
rorl
loop
jp
pop
add
in
xchg
and
add
js
xor
xchg
xor
sub
daa
sahf
mov
mov
xchg
ja
in
cmp
push
add
add
mov
pop
or
jns
jns
pop
adc
scas
adc
xchg
inc
jmp
out
mov
iret
pushf
mov
jae
dec
aas
jle,pt
pusha
mov
pop
clc
mov
or
stos
add
adc
xor
xchg
pop
cmp
pusha
jbe
sbb
stos
pusha
gs
insl
imul
cs
jle
dec
lds
mov
push
adc
bound
jns
out
inc
add
loop
rcrl
fwait
or
test
xchg
ljmp
ja
out
pop
fildll
dec
cmpsl
mov
cmpsb
mov
cltd
aam
arpl
jmp
mov
mov
push
ficoml
lcall
sub
cmp
repz
mov
pop
push
and
out
push
mov
push
push
loope
test
mov
and
mul
stc
xchg
add
dec
jo
mov
xchg
nop
mov
out
jecxz
cmp
inc
outsb
xor
cmp
jbe
adc
jle
cmp
stos
push
dec
les
adc
push
mov
sub
mov
sti
push
inc
movsb
inc
or
or
mov
inc
dec
shl
out
mov
sbb
push
jle
sbb
rorb
mov
cmp
jge
pop
xchg
int
aad
bound
add
sbb
jp
push
mov
movsb
and
push
addr16
neg
data16
ret
push
shlb
xor
xchg
adc
push
or
push
fs
or
rolb
pop
insb
push
mov
or
and
mov
sub
loopne
fldenv
adc
in
and
not
cs
sbb
ljmp
cltd
or
into
bound
lods
xor
dec
into
or
lea
xor
push
mov
cld
rorb
cmpsb
hlt
scas
pop
out
rolb
movsb
in
cmc
mov
bound
lods
jmp
or
or
test
and
std
aas
sub
sub
mov
icebp
adc
addr16
cs
into
lea
xor
jp
sub
push
enter
daa
jl
inc
lods
lds
xchg
pop
mov
cmp
repz
mov
lods
test
sbb
mov
out
or
sbb
shll
mov
js
add
in
jle
push
mov
js
inc
repz
test
or
adc
sub
cld
insb
push
or
andb
pusha
loope
jbe
mov
push
inc
inc
movsb
fwait
leave
fucomp
mov
scas
outsl
or
inc
or
or
lret
inc
xchg
mov
cmp
stos
sbb
cmpsb
cwtl
sbb
mov
jg
cwtl
aam
mov
push
clc
mov
inc
mov
adc
add
ret
fmuls
ljmp
decl
pop
pop
cwtl
cmp
jecxz
mov
and
xlat
aaa
je
mov
hlt
dec
mov
sub
cmp
test
jmp
xor
add
jp
addl
enter
iret
mov
out
ficoml
in
dec
xchg
push
ss
sbb
or
int3
loopne
andl
or
fldl2t
and
xchg
jge
jo
mov
sub
pusha
insb
and
xchg
add
cld
jle
and
pop
cmp
scas
mov
adc
mov
clc
mov
insl
out
pop
ds
inc
testl
xorb
dec
pop
mov
ja,pt
jb
push
outsb
out
xchg
xchg
std
adc
pushfw
idiv
add
mov
push
roll
cmpsb
cltd
xor
cmp
lret
add
push
sbbl
dec
aas
mov
add
sbb
add
cmpb
push
stos
ljmp
push
fdivs
rorb
test
jle
clc
mov
repz
mov
ret
icebp
ljmp
test
adc
scas
xchg
notb
dec
in
sub
subb
adc
lock
add
sti
rorl
push
or
xchg
orl
sub
bound
in
xchg
cmc
mov
sbbb
push
adc
pop
push
scas
jbe
push
sbb
adc
cli
mov
jno
mov
push
cmp
or
add
ret
lds
cli
cmp
cmp
aaa
fmuls
sti
shl
xchg
loop
ficoms
into
pusha
pop
inc
jmp
dec
push
mov
mov
roll
mov
mov
outsl
fnstsw
les
ja
test
sbb
sub
es
sti
cltd
or
mov
test
aad
nop
jo
fldl
cli
xor
jbe
rol
pop
dec
inc
arpl
and
lds
ljmp
incl
fstpt
mov
xchg
sbb
and
push
faddl
jo
test
xchg
pushf
test
push
sub
orl
clc
test
adc
mov
mov
rol
push
test
sarb
les
adc
rorb
in
push
in
or
fbld
clc
xchg
out
push
repz
sbb
cli
xchg
int3
adc
in
jo
push
add
sahf
mov
adc
gs
js
add
adc
mov
imul
mov
cmp
fsts
adc
add
fwait
push
mov
or
rorl
xchg
mov
jbe
or
frstor
enter
mov
arpl
cmp
ret
push
adc
xor
xor
ds
xchg
popa
cld
pop
pop
outsb
pop
xchg
setbe
pop
sbb
adc
add
mov
inc
or
das
ja
xchg
jno
pusha
cld
mov
mov
out
xchg
imul
mov
out
mov
push
sub
push
pop
xor
lcall
jl
push
movsl
jecxz
fcmovb
imul
pop
ss
ds
adc
mov
into
and
inc
mov
jle
add
inc
cli
push
mov
push
or
test
repnz
adc
in
popf
push
inc
iret
push
cmc
sub
push
push
xor
jns
push
fucomp
movnti
xchg
call
push
adc
int
fsts
clc
lock
push
jmp
mov
inc
cld
out
sub
popf
add
mov
faddl
sarl
out
push
dec
inc
stos
inc
mov
or
shlb
ficompl
loopne
xor
jb
and
sub
popf
xchg
nop
sti
and
cld
pop
push
or
shll
shll
cwtl
aas
mov
int
jns
ficoml
std
cmp
mov
cwtl
jge
movsl
inc
ljmp
aaa
dec
jbe
std
popa
dec
in
mov
xchg
sbb
inc
dec
pop
cwtl
repnz
sar
sar
xor
and
push
lods
fdivs
bnd
mov
push
adc
stos
pop
lods
aaa
jle
rolb
lods
sahf
mov
sti
xchg
out
and
cmp
xor
pop
adc
outsb
mov
sub
neg
scas
lret
cmp
or
sti
mov
dec
popa
aas
pop
cld
insl
insl
sbb
vmovsd
push
subl
mov
push
repz
xchg
mov
es
fisttps
or
aaa
sub
adc
out
pushw
push
dec
jle
push
test
dec
ss
mov
and
push
sti
sub
mov
add
inc
out
or
out
xor
out
dec
loopne
ret
inc
adcb
stos
adc
xchg
ret
repz
or
fadds
movsl
leave
stc
iret
dec
arpl
jns
iret
js
or
cli
lds
dec
xor
stos
test
push
in
jge
aad
jl
add
mov
and
sub
repnz
popf
xor
mov
sbb
aam
and
cmp
test
stc
mov
addr16
test
jne
pop
xchg
and
pusha
push
cli
jg
jbe
pop
stos
leave
push
jno
roll
inc
jge
and
inc
pop
mov
fcmovb
add
addl
mov
jnp
pop
std
adcb
cmp
inc
xchg
into
outsl
lods
add
je
leave
ret
or
and
dec
aaa
aaa
lods
dec
pop
jg
push
push
rorl
stc
pop
aam
inc
roll
lea
pusha
jno
clc
sub
fldt
sti
lock
rorb
jbe
data16
push
ss
pop
outsl
mov
sbb
inc
jge
fxch
mov
lods
cli
add
int3
dec
push
shr
sub
ljmp
dec
mov
bound
ljmp
xchg
mov
add
add
mov
icebp
xor
enter
stos
loopne
sti
sti
mov
jno
xchg
dec
clc
xor
push
or
ja
jecxz
adcl
jnp
insl
pop
imul
adc
mov
bound
shll
push
pop
int
stc
stos
mov
mov
ljmp
fisttps
jmp
fdivl
mov
mov
call
dec
iret
lods
fadds
popf
xchg
test
lret
sarl
imul
inc
adc
into
mov
pop
pop
pop
leave
ret
jne
adc
std
push
adc
aas
adc
sbb
adc
sbb
add
push
adc
out
jg
add
dec
adc
mov
jns
add
inc
adc
sbb
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
add
add
add
add
add
add
inc
cmp
add
scas
inc
adc
inc
cmp
add
adc
push
adc
cmp
add
sbb
add
adc
idivb
inc
add
cmp
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
subb
cli
adc
sbb
adc
pop
inc
adc
sbb
adc
in
pop
adc
pop
sub
add
add
inc
add
add
inc
add
add
cmp
add
aaa
adc
cmpl
adc
push
dec
adc
mov
adc
lock
add
adc
outsb
or
add
add
add
push
push
inc
push
push
sbb
test
pop
dec
cmpl
mov
test
add
pop
dec
outsb
jae
popa
insb
insb
and
je
pop
push
outsb
fs
dec
push
pop
dec
popa
imul
outsl
insb
fs
dec
outsb
arpl
gs
dec
outsb
outsw
inc
jo
add
add
add
add
add
cmp
add
add
add
add
add
mov
cmp
add
mov
cmp
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
