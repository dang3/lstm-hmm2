push
mov
sub
add
movl
xor
mov
or
jmp
sub
adc
xchg
add
imul
xchg
xchg
adc
adc
daa
cli
adc
xchg
out
xchg
fidivrl
sahf
adc
cbtw
loop
push
xor
add
push
xchg
xchg
or
xchg
xlat
adc
bound
jmp
xor
push
cmp
push
mov
cwtl
leave
lahf
xor
jle
mov
cmp
leave
repz
andl
inc
cmc
adc
adcl
pop
mov
es
jno
adc
push
jmp
push
imul
dec
and
je
rcrl
inc
cs
int
imul
mov
sahf
push
in
lea
clc
ja
cmp
imul
xchg
test
fdivrs
push
jb
outsl
inc
adc
push
fdivl
dec
int3
mov
test
xor
pop
push
leave
sbb
out
daa
push
pop
lods
push
por
dec
dec
xor
insb
mov
push
xchg
mov
jno
lds
int3
mov
dec
cmpsl
repz
fwait
pop
inc
jnp
xchg
aaa
pop
add
fists
test
aaa
sbb
push
pop
adc
lods
dec
ret
test
insb
es
jae
dec
jecxz
xchg
push
mov
lret
dec
cmpsb
sub
cmp
xor
xchg
add
addr16
iret
sub
pop
sbb
pop
inc
aas
leave
jae
stos
shr
mov
or
jns
rolb
das
negl
test
fcoms
in
and
ret
jg
xchg
sub
add
loope
lcall
gs
out
pop
xchg
mov
inc
dec
out
pop
lahf
or
add
xor
xor
pusha
iret
dec
and
cmp
cmp
add
clc
mov
xor
pop
lret
outsb
xchg
sub
adc
inc
daa
pop
or
clc
pop
cmp
xor
les
addl
mov
fcoml
mov
push
test
cli
pop
jo
dec
lcall
stos
jl
jle
sti
insl
movsb
mov
loopne
dec
mov
sbb
push
imul
push
xor
xchg
lock
sub
test
cwtl
lret
aas
pop
lcall
outsl
je
aas
sbb
mov
fsubs
iret
adc
test
push
loope
lahf
push
cwtl
sbbl
mov
xchg
bound
lret
jbe
mov
xchg
pop
leave
orb
mov
insl
xor
dec
jae
jp
mov
mov
scas
aas
inc
imulb
ret
bound
push
loopne
std
adc
jl
sub
ljmp
cwtl
hlt
repnz
gs
dec
outsl
rorl
add
push
or
mov
sbb
std
movsb
loope
push
xchg
push
test
xor
cmp
popf
insl
rorb
pop
sbb
out
xchg
adc
lcall
adc
add
add
shll
ljmp
jne
lret
xchg
imull
lret
sub
cmp
int
mov
add
or
lret
lds
cwtl
push
scas
adc
or
inc
inc
test
mov
pusha
scas
jae
out
jne
mov
and
xorb
rorb
into
or
sub
repnz
xor
aas
pushf
insb
cmp
add
adc
scas
shl
pop
les
loop
inc
lcall
test
mov
aam
sbb
movsb
xor
or
out
ret
pop
lock
jae
push
sub
pop
dec
pop
dec
loopne
pop
and
rcl
sbb
cmpsb
xor
out
adc
push
repz
fwait
cmp
les
ss
jge
das
mov
sbb
jle
call
adc
add
push
jae
inc
daa
sti
and
scas
sbb
sti
jmp
or
push
cmp
pop
mov
jecxz
inc
repnz
inc
cmp
mov
es
jle
imul
cld
cwtl
ljmp
popa
pop
mov
lea
in
xchg
add
mov
cmc
mov
shll
aad
arpl
inc
mov
movl
xor
mov
movl
and
movl
dec
movl
adc
mov
sbb
xor
xor
or
sbb
mov
orl
div
adc
xor
adc
push
mov
adc
mov
add
orl
mov
and
div
and
mov
cmpl
jle
sbbl
jmp
push
push
pushl
call
movl
movl
mov
mov
imul
lea
mov
mov
cmp
movl
je
subl
movl
cmpl
jbe
inc
jmp
push
push
pushl
call
movl
movl
jmp
loop
mov
stos
fcmovnb
lds
adc
cli
adc
daa
cli
adc
addr16
iret
push
mov
push
xchg
sbb
add
pusha
leave
sub
mov
bound
xchg
cltd
test
adc
ret
aas
mov
mov
rcrl
mov
xor
and
stos
jg
cmc
inc
out
dec
or
cmp
test
pop
inc
pushf
cmp
jle
cltd
add
mov
andb
xchg
lods
xchg
mov
mov
push
test
rclb
dec
mov
fidivrl
bnd
insl
stc
hlt
pop
ljmp
testl
sbb
fisubl
cmp
pushf
push
iret
push
cmp
mov
lea
cli
xchg
sbb
and
nop
ds
mov
jl
dec
jno
sub
push
fstpl
sbb
popf
or
adc
inc
gs
inc
es
orb
aaa
cs
xor
inc
hlt
nop
cmc
push
ds
aaa
jb
stos
push
or
pop
out
mov
dec
xchg
mov
mov
hlt
nop
add
daa
nop
inc
jnp
ret
add
sbb
frstor
mov
xorb
scas
stos
dec
mov
fsubs
lahf
xchg
lret
shll
push
mov
movsl
aaa
stc
xor
popf
mov
or
lods
mov
xlat
and
sub
mov
and
adc
mov
sub
cmp
icebp
out
lcall
sbb
dec
xor
je
filds
in
pop
orl
fs
pop
rorl
cmp
fwait
jle
inc
loop
in
ss
pop
incb
stos
push
ljmp
jl
loop
scas
subl
nop
in
and
sub
xchg
push
out
add
xlat
in
pop
or
pop
lock
rep
xor
mov
mov
add
push
mov
inc
mov
aad
into
mov
mov
pop
cmp
pusha
mov
adc
movsl
cmpb
rcrb
dec
sub
push
xor
xchg
call
and
int3
cmp
test
cltd
inc
pushf
cmp
fsubrl
xchg
fbstp
cli
adc
push
rcrl
dec
out
cmp
mov
push
aad
mov
std
jbe
lods
mov
mov
lods
lcall
mov
push
xor
push
paddusb
inc
leave
adc
or
jne
xor
es
mov
jno
arpl
sub
mov
jge
push
rep
insb
add
test
cmp
pop
or
scas
jno
push
adc
mov
rclb
inc
sbb
call
shlb
sub
ret
fisubrl
dec
call
mov
shrl
pop
inc
or
imul
or
lahf
add
daa
out
inc
sahf
nop
mov
scas
fwait
xchg
in
xchg
inc
sub
mov
les
stos
sub
sbb
dec
mov
mov
and
sti
mov
and
movsl
loope
test
pop
addr16
pop
adc
test
lar
mov
dec
pop
movsl
int
fwait
sub
loope
pop
dec
sub
inc
xor
int
imul
sahf
mov
outsl
aaa
mov
mov
mov
mov
mov
scas
daa
scas
je
stos
mov
lahf
xchg
adc
andb
mov
pop
cmpsl
je
mov
and
loope
dec
mov
sbbb
out
rcrb
xor
or
aam
mov
pop
pop
xchg
jmp
pop
test
mov
inc
lret
push
lea
test
gs
or
cld
fnstcw
xchg
rorl
roll
jno
lds
sub
pusha
lods
pop
mov
test
aad
test
arpl
fistps
push
enter
inc
adc
xchg
mov
mov
xor
and
mov
movl
xor
sub
mov
sub
movl
add
movl
mov
mov
andl
xor
div
movl
mov
movl
cmp
movl
je
movl
adc
movl
movl
mov
sbb
movl
movl
push
cmpl
jge
mov
xor
jmp
pushl
push
push
pushl
push
call
movl
mov
jmp
subb
xor
lods
insl
vpsubw
adc
cli
adc
inc
outsl
roll
push
jne
jbe
xor
sub
std
out
pop
adc
in
into
xor
cmp
imul
push
xchg
mov
jle
mov
mov
loope
dec
adc
pop
js
and
cmp
sub
or
xchg
xor
les
push
adc
jge
in
pop
push
sbb
dec
mov
aam
fldcw
xchg
sub
xchg
mov
adc
push
les
adc
imul
into
and
push
mov
jge
test
jo
mov
jns
inc
cmpsl
ja
pop
mov
mov
add
imul
inc
sarb
jns
lock
xor
call
gs
pushf
gs
sub
out
jnp
mov
and
hlt
stos
sbb
out
ret
sbb
std
repz
sbb
icebp
sbb
cld
das
add
jge
jno
push
xchg
lods
push
js
ficompl
pop
outsl
int3
pop
sub
imul
clc
inc
test
dec
xor
dec
xchg
ja
push
mov
cmp
and
sbb
outsl
das
fucomi
popa
ss
icebp
insl
popf
mov
inc
push
push
push
imul
mov
int3
prefetch
pop
inc
stc
cmp
and
ficompl
sbbl
rcll
cmpsb
cmpsl
inc
je
pushf
pushf
xor
pop
loopne
inc
fistpll
push
sub
cmpsb
stc
popf
dec
sbb
or
adc
xchg
sbb
aam
ror
arpl
iret
lock
add
sete
pop
add
rcll
aaa
jbe
xchg
ret
cli
push
popf
adc
and
xor
into
addb
fdivl
movsl
push
aad
pop
mov
bound
fs
sbb
addb
into
fisttpl
aam
mov
or
mov
les
lahf
xor
mov
scas
sub
das
jge
pusha
les
addl
mov
fnstenv
mov
pop
imul
rcr
popa
fs
jl
fisubrs
test
mov
cld
push
aad
daa
dec
inc
into
or
insl
jo
testl
loope
test
ljmp
mov
sub
lds
jns
icebp
loopne
cmpsl
incb
or
add
push
jmp
xchg
push
mov
pop
mov
jnp
mov
inc
adc
xor
jno
orl
nop
lcall
adc
test
fmul
pop
clc
lret
mov
daa
clc
sbb
outsl
inc
jae
xor
mov
pop
jno
push
jo
jl
es
adc
stos
jne
cmp
push
jg
mov
dec
sbb
mov
cld
sub
outsb
and
popf
pop
xor
jl
jmp
test
xchg
mov
sti
pusha
xor
ror
sub
add
push
loopne
jecxz
mov
ret
mov
or
dec
pop
mov
pop
les
cmpsb
aas
movl
or
mov
call
sbb
test
sahf
xchg
adc
mov
subb
out
add
add
mov
mov
aaa
jno
sbb
sbb
cmp
push
jmp
scas
jae
mov
in
add
and
outsl
ja
fwait
cmp
mov
ja
pushf
ljmp
ljmp
scas
mov
pop
push
inc
mov
mov
inc
test
dec
mov
push
test
test
cmc
fcomps
mov
jl
stos
sbb
fs
xchg
sbb
stc
fdivrl
add
and
pop
cld
leave
sbb
pop
lret
pop
sbb
mov
fcoms
xorl
pusha
add
push
adc
roll
sbb
cwtl
popa
scas
xchg
ds
out
lods
mov
loop
and
mov
push
adc
call
scas
lock
add
xor
les
lods
dec
sub
fiaddl
mov
pop
sbb
and
lods
and
ljmp
in
dec
in
inc
imul
jmp
int3
test
and
ja
inc
mov
daa
cli
adc
inc
push
cmp
mov
sbb
lock
call
js
or
repnz
jg
push
ljmp
cmpsb
std
sub
jo
mov
add
sub
cmp
ja
int
mov
mov
mov
aam
dec
out
and
enter
sub
xchg
jno
icebp
loopne
push
pop
dec
adc
adc
dec
xor
jb
push
dec
xor
mov
or
fadd
push
cmpsb
mov
push
shll
add
lahf
lea
jmp
adc
sbb
xchg
imul
hlt
cmp
popf
sbb
xor
jo
icebp
iret
pop
and
adc
dec
test
mov
repnz
cltd
mov
mov
mov
pop
fidivl
mov
sub
push
mov
pop
jmp
andl
sbb
mov
aaa
mov
mov
stc
xor
lahf
cmpsb
jns
cmp
negl
sbbb
jmp
neg
and
sahf
scas
mov
mov
xchg
mov
repz
mov
sub
sub
push
insb
retw
test
jle
fxch
mov
add
insb
daa
icebp
aaa
orb
jnp
jb
dec
cmp
fwait
js
push
cmp
in
ficoml
jge
jmp
jecxz
jnp
pop
ja
mov
insb
bound
mov
loop
repnz
cli
shr
sbb
sbb
jbe
movsl
dec
inc
mov
ja
bound
push
mov
and
mov
cmp
and
mov
ja
es
xlat
lret
aad
cwtl
or
pusha
xchg
cmp
in
pop
jo
and
inc
pop
push
into
rclb
pop
sub
pop
lock
pop
stc
fadds
out
inc
adc
pop
into
cmpsb
and
call
xlat
movsl
pushl
mov
imul
xor
jg
inc
mov
jno
cmp
mov
add
pop
data16
pop
sub
adcl
daa
push
in
adc
insb
inc
push
scas
mov
repz
mov
in
sbb
bound
xchg
lahf
outsb
repz
or
sbb
leave
arpl
xor
sbb
mov
inc
test
hlt
mov
ljmp
inc
push
xchg
xor
movsb
es
bound
push
pop
das
enter
jle
cmp
in
loop
data16
fstps
ret
lea
jo
rclb
fsubrl
dec
out
and
in
popf
dec
add
leave
imul
sarb
xchg
cmp
fnsave
xchg
inc
inc
stc
pop
ljmp
dec
jbe
roll
and
aaa
loope
push
fs
popf
std
jnp
cwtl
inc
pop
mov
inc
shl
in
push
jno
dec
shll
sub
push
push
mov
pop
mov
js
in
and
ror
inc
ja
xchg
pushf
ror
push
jmp
in
repz
in
js
insl
insb
push
adc
sub
mov
in
xchg
mov
in
sub
inc
push
inc
xchg
popa
cmc
inc
mov
stc
sbbl
icebp
shrb
ljmp
mov
jmp
xor
dec
xor
test
cmpl
dec
aam
jmp
add
xchg
dec
add
jl
stos
mov
jno
out
les
imul
push
add
add
movsb
jecxz
mov
inc
inc
lret
icebp
out
and
and
fcmovnbe
jno
icebp
popf
repz
inc
movsb
add
or
dec
cmpsl
movsb
jle
add
ljmp
stos
add
repz
xor
jmp
in
mov
addr16
jg
xor
mov
sub
icebp
push
insb
into
sbb
inc
sub
sbb
jno
test
outsb
xor
xor
inc
fcmovb
ds
inc
xchg
jno
mov
adc
sbb
mov
jnp
jmp
add
cmp
std
sbb
add
or
repz
inc
add
aas
out
add
add
jg
add
jmp
push
push
push
pushl
push
push
pushl
push
call
mov
mov
and
mov
and
mov
orl
and
and
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
jmp
adc
sahf
sahf
xchg
push
adc
aaa
test
popl
dec
xchg
ret
adc
cli
adc
sbb
ljmp
cli
lcall
sti
inc
fimull
loop
jb
dec
jnp
shlb
adc
push
inc
sub
sbb
and
cltd
add
andl
hlt
cmpsb
sti
adc
dec
rcl
movsl
in
xchg
icebp
xor
push
andl
outsb
sbbl
jbe
int3
push
ljmp
xchg
in
add
push
pop
jne
xor
and
cmp
sti
cmpsl
addr16
sti
std
and
in
xchg
add
adc
out
test
mov
aad
xor
sub
cmpb
dec
xchg
les
xor
out
scas
push
pushf
stc
add
mov
in
call
jge
movsl
call
in
pop
lret
jecxz
inc
and
sbb
adc
mov
leave
push
dec
and
jo
xor
lahf
jb
push
rep
mov
clc
jno
sbb
xchg
or
add
inc
in
mov
push
sarl
fiadds
mov
sub
rorl
cli
pop
daa
adc
or
mov
sub
hlt
xor
mov
imul
push
test
push
xor
jb
in
mov
outsl
dec
xor
mov
leave
mov
mov
lds
pop
cmp
enter
push
inc
dec
jo
outsl
jl
cwtl
inc
scas
int3
ljmp
addr16
popf
pop
rorl
add
jge
or
add
xlat
fstp
addr16
jno
dec
sub
mov
sbb
mulb
lahf
aaa
add
aas
adc
pop
outsl
mov
push
sub
pusha
sbb
mov
push
divl
adc
jl
mov
push
mov
fdivs
test
inc
pop
mov
aas
dec
pop
idivb
jecxz
shlb
andb
test
sbb
das
jae
pusha
pop
push
xor
mov
adc
and
and
jge
lret
sbb
ja
outsb
insl
cmp
sub
push
pushf
jmp
sub
arpl
push
int
cli
fs
sbb
lods
xor
pop
xlat
mov
pusha
add
int3
ljmp
sbb
insb
leave
dec
cli
mov
push
push
xlat
pop
out
push
xchg
lods
inc
pop
push
xor
jl
insl
ret
mov
cld
lods
mov
and
pop
int3
lret
xchg
shrl
mov
arpl
setne
scas
dec
clc
mov
iret
push
sti
xor
push
xchg
and
sar
cmc
cmp
push
fwait
jno
sbbb
cmpsl
fildl
jp
xor
outsl
aad
sub
sub
arpl
jne
inc
pop
mov
in
cmpsb
enter
xlat
repnz
fld
xor
pusha
dec
out
jo
mov
out
or
ret
pop
jae
xor
xor
insb
lret
shrl
mov
cmp
popa
or
js
and
and
iret
aam
jecxz
mov
mov
push
mov
adc
sbb
scas
mov
test
push
lds
dec
sbb
push
inc
out
mov
gs
cmp
sbb
decb
push
out
cld
lret
divb
dec
jl
push
inc
aad
mov
push
mov
xchg
and
repnz
add
lahf
jp
in
sbb
loope
jo
ljmp
data16
ret
out
xor
or
adc
dec
test
fs
hlt
sarb
jb
and
push
data16
adc
or
mov
stos
mov
mov
cmpsb
ss
dec
xor
jnp
xchg
adc
xchg
cmc
jle
and
xchg
rolb
and
mov
aam
fcos
xchg
lahf
jmpw
dec
ja
sbb
jl
je
mov
in
cmp
jecxz
lcall
js
pop
pusha
adc
gs
inc
lcall
sarb
mov
add
xor
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
movb
movb
movb
movb
or
shl
mov
sub
mov
xor
mov
and
jmp
lds
js
les
sub
outsl
push
xchg
xlat
fists
adc
cli
adc
test
pop
dec
cld
xor
js
es
push
fidivrl
xchg
inc
imul
clc
sbbl
cwtl
sbb
pusha
rcr
mov
pop
hlt
or
and
fcmovb
pop
inc
pusha
xchg
xchg
mov
imul
push
xlat
inc
popa
cwtl
pusha
sbb
cmpsl
ret
loopne
aaa
cmp
in
out
loopne
mov
ds
pop
popa
hlt
sti
pusha
or
and
sbb
roll
dec
int3
call
adc
mov
sub
imul
shl
cmc
adc
push
test
icebp
insl
pop
sbb
mov
out
push
pushf
fistpll
dec
aam
subl
out
sbb
addr16
sahf
movsb
pop
sbb
cmp
jb
in
pop
xchg
gs
adc
lahf
insl
inc
je
mov
stos
insb
repnz
push
movsl
nop
sub
mov
inc
iret
cwtl
into
add
jp
cmc
adcl
and
cmp
xchg
aad
mov
pop
jns
stos
das
insb
or
das
in
in
mov
add
jl
inc
sahf
imul
cmp
dec
adc
pop
pop
mov
leave
sub
fwait
mov
add
dec
push
mov
out
or
or
cs
and
mov
xorb
jmp
dec
pop
mov
sub
add
xor
jecxz
imul
pop
jno
test
mov
dec
xor
loopne
mov
scas
popf
dec
lahf
jge
stos
imul
movsb
fwait
clc
in
adc
mov
dec
mov
pop
pop
push
leave
pop
dec
ret
fildll
shrl
rcrl
call
mov
hlt
mov
push
ds
sub
adc
add
pushf
cmc
mov
aad
sbb
xlat
push
repz
jl
sbb
inc
nop
test
pop
jecxz
fiadds
pop
pop
xchg
aaa
add
into
ja
or
sbb
dec
xchg
mov
sub
xor
icebp
cmpb
push
gs
mov
xor
jae
es
ret
mov
movsb
stos
stos
mov
xchg
test
test
fcoms
jecxz
mov
dec
cmp
sti
mov
mov
popf
fists
push
or
dec
or
jo
stc
mov
shrl
mov
lcall
repnz
sub
rolb
pop
jg
test
pushf
sbb
out
test
mov
adc
imul
aas
es
mov
scas
xorb
and
lcall
sahf
push
pushf
xor
add
mov
icebp
mov
pop
inc
push
sbb
dec
cli
push
sti
es
dec
inc
pop
jnp
push
repz
dec
add
jle
int
push
inc
dec
lcall
aad
ficompl
shll
jne
jge
push
adc
adc
adc
sub
out
sub
int3
mov
cmp
inc
pushf
repz
outsb
dec
ja
mov
dec
push
push
int3
dec
add
mov
mov
xchg
rorb
xchg
and
lea
fisttpl
mov
ds
xchg
ss
jg
dec
sbb
bound
iret
sahf
mov
sbb
cs
outsl
stos
scas
aam
mov
stos
inc
sbb
dec
lods
repnz
test
leave
jmp
int3
sbb
cmp
add
mov
dec
mov
sbb
repnz
or
add
cmp
aaa
xchg
pusha
and
in
inc
xor
sarl
jecxz
adc
shll
scas
fwait
cmp
push
cltd
pop
lahf
and
das
inc
movsb
or
pop
jae
out
pop
mov
imulb
or
mov
inc
xchg
mov
adc
shrb
sub
scas
arpl
sbb
xchg
sbb
xorl
ljmp
mov
movb
movb
movb
mov
mov
sub
xor
sub
mov
add
mov
add
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
jmp
test
dec
push
push
sbb
push
mov
in
xchg
mov
dec
or
adc
daa
cli
adc
xchg
cld
xchg
shlb
sbb
pop
mov
fwait
nop
test
mov
pop
adc
loop
push
into
sarl
push
push
cmp
inc
pop
mov
xchg
pop
sbb
inc
add
lcall
fmul
lods
aam
insb
xor
push
pushf
out
sub
movntq
dec
roll
xchg
lods
js
sub
add
push
adc
in
adc
sbb
add
mov
adc
fistl
push
mov
scas
xchg
xchg
adc
rcrl
push
add
lahf
aas
jbe
and
ja
adc
insl
daa
ret
data16
fdivp
lret
xchg
pop
sub
scas
test
xchg
pop
mov
lret
cld
pop
dec
divl
mov
jmp
das
jbe
cli
cmp
pop
ret
jae
les
subb
mov
sbb
cmp
aaa
xchg
sub
dec
xchg
or
cmp
lahf
rcrl
cmc
mov
cwtl
frstor
enter
mov
add
insl
sti
ret
jb
lods
sbb
cs
aad
pop
popa
and
out
imul
gs
add
fldl
sbb
fiadds
in
jmp
ds
jp
mov
inc
dec
movsb
fdiv
push
push
dec
mov
mov
nop
in
scas
adcl
repnz
je
aaa
jns
insl
lahf
jecxz
repnz
popf
rcrl
lds
ret
jno
shll
in
sub
adc
mov
xor
mov
es
mov
imul
mov
mov
push
push
pop
fistpll
lret
lahf
lret
jne
lods
cmp
push
out
fimull
push
sub
outsl
xchg
xchg
mov
repnz
add
sbb
push
or
in
cmc
ja
push
add
insb
js
xchg
jmp
inc
in
je
icebp
mov
lret
xor
mov
mov
push
hlt
out
and
test
lea
mov
fwait
jecxz
in
clc
pop
addl
lock
jae
cmc
jecxz
jmp
xchg
out
je
jo
xor
mov
mov
sti
push
scas
jo
jnp
sbb
enter
scas
xor
pop
lret
sbb
clc
push
jbe
mov
sub
imul
xchg
cmpsb
es
lahf
jo
mov
jne
or
jne
out
lods
sbb
pop
popf
aad
test
movsb
xlat
push
aaa
inc
sub
jmp
fwait
imul
js
cwtl
ljmp
cltd
mov
xchg
shrl
out
sbb
push
xor
pusha
mov
jno
cwtl
leave
cmp
push
pop
lret
movsl
dec
xchg
aad
xchg
loopne
sub
cli
mov
sbb
sub
sbb
lahf
jne
sahf
or
inc
mov
mov
popf
or
adc
jno
dec
mov
loop
lret
push
fcmove
push
lret
icebp
cmpsl
cli
inc
call
cmc
nop
cli
stc
xchg
fisttps
out
and
enter
or
mov
bound
outsl
scas
outsb
pop
int
and
jecxz
cmc
hlt
shll
jecxz
jl
and
or
mov
std
mov
push
roll
xchg
xchg
pop
adc
lods
lret
push
mov
mov
jo
adc
mov
nop
push
add
add
xchg
pop
sub
aad
or
jecxz
mov
sub
xor
sbb
fsubrs
dec
xlat
jnp
lea
and
dec
pop
dec
xor
lea
cmp
push
mov
xor
lcall
cltd
mov
mov
cmp
data16
lret
jb
cmp
call
adc
outsb
enter
fisttps
jge
jne
cmc
aas
clc
xchg
push
inc
dec
jne
fildl
push
lcall
or
cwtl
daa
mov
or
mov
jmp
jae
xor
xor
push
push
int3
sub
ds
adc
daa
cli
adc
xlat
aam
shr
shrb
jecxz
add
loop
js
decl
jp
test
mov
mov
sbb
es
xchg
cmc
mov
dec
popf
loopne
ss
xorb
test
movsl
jmp
imul
repnz
adc
xor
imul
mov
dec
lods
loope
je
and
mov
jo
xchg
lods
push
lret
xor
mov
jno
push
sub
out
adc
adc
stc
inc
xor
call
sti
jne
xchg
ret
adc
in
mov
jp
outsl
std
mov
lahf
or
add
pop
out
iret
hlt
inc
cs
jl
and
into
or
insb
shll
sahf
cwtl
stos
xor
adc
mov
sbb
dec
jmp
loopne
loope
mov
ret
pushf
sub
adc
lds
adcb
mov
or
inc
insl
nop
pop
lock
xorb
pop
sahf
repz
jle
addr16
sub
repz
out
mov
and
bound
or
dec
xor
sbb
mov
adc
push
xchg
stos
mov
sub
std
ss
inc
jae
jg
add
mov
test
inc
es
and
mov
sar
out
scas
fs
push
daa
ret
inc
push
stos
mov
pop
daa
negl
sti
repz
pop
mov
xor
push
jecxz
push
push
cmc
out
lret
xchg
mov
mov
clc
shrb
stos
cld
das
mov
ret
cli
dec
out
aad
in
fimuls
jmp
jnp
push
cmp
mov
mov
or
leave
es
sub
mov
xor
jecxz
in
stos
mov
out
jae
addr16
into
push
add
and
dec
inc
and
and
mov
jge
cs
mov
xor
mov
es
jmp
ds
cli
loop
adc
xor
pop
loope
mov
andl
xor
icebp
out
mov
call
pop
mov
movsl
or
orl
mov
dec
xor
dec
stos
sar
and
in
cltd
push
add
or
rcrl
jae
fistl
sub
inc
inc
je
lods
movsl
and
sub
iret
bound
cmpb
add
jne
test
test
dec
int3
test
mov
inc
cwtl
insl
mov
decb
sbb
jbe
mov
rcrb
sbb
pop
out
ror
mov
adc
sbb
lea
sbb
sbbb
test
sub
mov
aas
cmc
inc
mov
inc
scas
or
xchg
shl
or
dec
aaa
and
ret
iret
in
adc
inc
jp
adc
cmp
imul
push
mov
loopne
aas
or
xlat
fidivrl
pop
in
xchg
adc
insl
mov
xor
pop
adc
divl
pop
xor
inc
gs
les
sub
out
inc
es
or
aam
cmp
sub
xchg
dec
xchg
dec
and
xor
xchg
std
inc
jns
rol
cmpsl
mov
cltd
cli
lahf
cmc
pushf
inc
adc
sub
jae
lcall
fnstcw
sub
mov
test
cli
push
and
or
cmpsl
xchg
sbb
dec
jmp
test
or
adc
pop
inc
jae
mov
imul
jnp
xor
aaa
fucomp
or
add
or
cwtl
shlb
inc
jle
push
inc
cmp
inc
lods
sub
mov
les
adc
scas
xor
pushw
jno
mov
lahf
popf
js
or
adc
clc
add
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shrd
shr
ret
xor
or
xor
mov
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
cmpl
jb
adc
jmp
push
call
mov
mov
mov
sub
push
mov
mov
movl
sbb
mov
subl
orl
orl
movzwl
or
mov
mov
mov
xor
add
mov
adc
mov
mov
addl
sub
mov
mov
movl
sbb
not
mov
jmp
xlat
jmp
loopne
aam
cmc
or
testb
adc
aaa
cli
adc
in
mov
stos
mov
inc
ja
mov
or
enter
push
inc
cmp
call
mov
hlt
movzbl
je
adc
cmp
sbb
movsl
les
cld
in
dec
mov
lret
cltd
push
and
and
fisubrl
aad
outsb
cmp
std
mov
das
push
mov
xchg
mov
test
mov
mov
sub
xor
stos
mov
add
pop
daa
icebp
test
clc
fwait
aam
or
pop
scas
sub
push
call
lcall
data16
pop
cmp
xor
rclb
stos
xchg
inc
nop
and
sbb
pop
mov
int
push
sub
fs
add
clc
sub
xchg
dec
loope
subb
ds
insb
les
or
fldl
adc
pushf
mov
cwtl
mov
push
mov
dec
push
jecxz
inc
cmc
add
std
or
mov
dec
jl
imul
in
xor
syscall
repnz
mov
decl
repnz
cs
or
xchg
out
or
add
sbb
push
or
jno
push
pushf
xchg
mov
fists
inc
xchg
push
or
and
ljmp
in
mov
and
stos
leave
lcall
xor
ror
push
adc
fimull
js
mul
xor
pop
repz
data16
adc
cli
rcl
push
or
add
lcall
and
cltd
int
lret
ja
mov
xlat
stos
pushf
aas
test
dec
inc
mov
add
mov
fists
jo
xchg
push
rol
xor
in
dec
subb
dec
fmull
inc
inc
xor
test
mov
xor
out
ljmp
sbb
enter
push
fistpll
xchg
je
lock
mov
loopne
adc
insl
cmc
jae
cltd
out
jno
insb
test
jecxz
push
or
mov
jbe
les
add
xor
mov
cwtl
mov
sbb
mov
or
push
mov
cs
rcrb
xchg
push
inc
mov
test
jmp
lods
xorb
xchg
mov
pop
orb
rcrl
imul
mov
cmp
sbb
xchg
mov
nop
test
insb
in
push
mov
in
fadd
cmp
pushf
pop
inc
rorl
adc
leave
mov
stos
jnp
jmp
jne
popf
xor
pop
shll
shl
xchg
stos
dec
cwtl
and
xor
xlat
add
fnstcw
or
jns
pop
out
jno
push
hlt
loope
xlat
in
notl
pop
popa
movsb
je
add
dec
sbb
js
push
or
fimull
dec
push
adc
cld
sub
inc
cmpl
adc
stc
fimuls
je
cltd
mov
imul
sub
lods
dec
lret
ljmp
jno
pop
shrb
pop
inc
mov
je
cli
and
and
or
fsubrp
js
enter
add
dec
into
dec
xor
xchg
orl
arpl
adc
xor
repz
sbb
cmpsb
insl
test
in
jo
mov
inc
add
out
and
xlat
andl
adc
sub
xor
add
add
ret
and
testl
cli
pop
je
xchg
outsl
mov
inc
dec
add
test
in
push
push
pop
mov
test
pop
scas
insl
dec
loopne
add
inc
add
int
jnp
test
ds
popf
xchg
adc
cwtl
lods
inc
xchg
data16
sub
mov
lods
jge
imul
mov
xchg
pop
push
rolb
inc
sbb
sahf
dec
mov
or
aas
or
jno
orl
add
orl
lea
cmpl
ja
xor
xor
jmp
pushl
push
pushl
push
pushl
call
mov
mov
mov
mov
add
mov
andl
mov
mov
or
mov
shrd
sbb
shr
cmpl
jl
jmp
pushl
push
pushl
pushl
pushl
push
push
pushl
pushl
push
push
call
mov
mov
xor
xor
or
mov
movl
movl
orl
movl
adc
movl
cmpl
ja
or
jmp
call
movl
movl
movl
movl
movl
movl
sbb
movl
cmpl
jge
xorl
sbbl
jmp
pushl
push
push
pushl
call
movl
movl
movl
movl
movl
movl
jmp
mov
dec
or
loopne
xchg
xchg
lds
adc
cli
adc
pop
mov
std
je
ljmp
mov
aaa
aad
sub
mov
sub
mov
mov
sbb
insb
fwait
in
imul
xchg
xchg
jne
mov
xchg
sbb
push
sti
insl
stos
mov
outsl
addl
pop
sbbl
aad
roll
xchg
dec
out
cmp
mov
mov
xor
pop
jb
sarb
jmp
mov
movsb
pusha
dec
mov
movsb
lock
dec
hlt
leave
push
jne
mov
xor
pop
cmp
lret
int
les
sarl
out
mov
dec
sti
es
js
pushf
jnp
mov
imul
mov
add
inc
aam
cld
hlt
scas
cltd
push
imul
lods
xor
mov
in
jg
daa
and
pop
lcall
sbb
add
repz
cmp
mov
jg,pt
loope
jbe
adc
negb
push
adc
mov
dec
add
add
mov
mov
xchg
leave
test
mov
mov
dec
push
push
or
xlat
sub
jge
shl
mov
notl
dec
cmc
adc
push
mov
cmp
jp
add
or
or
inc
xchg
pushf
into
arpl
ret
cmp
lods
loop
adc
and
mov
movd
aas
ja
cmp
sub
xchg
out
mov
in
jge
adc
sahf
push
call
push
pop
sti
sub
popa
dec
adc
js
nop
or
arpl
stc
sub
sub
push
ja
push
cmpsb
sarb
or
xchg
pop
in
sbb
or
mul
xor
cltd
dec
aad
cmp
and
jb
repz
add
push
xchg
push
inc
jns
cli
stc
xor
ja
js
push
push
into
enter
mov
xor
fsubrl
mov
loope
cld
dec
imul
or
push
xchg
jb
xchg
sti
nop
jp
jbe
loope
cs
jmp
xor
call
loop
and
les
cmc
cmpsl
outsb
pop
dec
std
cli
jno
dec
insb
xor
jle
sub
and
mov
lock
outsb
mov
std
in
sahf
mov
call
fcompl
mov
mov
mov
addr16
stos
fs
in
ja
jns
shll
jp
out
dec
push
pusha
push
in
sub
pop
mov
and
aaa
push
mov
mov
and
inc
idivl
stos
pop
dec
repnz
outsl
xchg
fmull
shll
jp
je
lock
sub
sbb
outsb
or
sbb
addb
lods
hlt
jo
std
fldl
outsb
outsb
jbe
xor
pop
shll
pop
inc
les
das
leave
mul
add
loope
push
cmpsb
lods
sti
push
fildll
push
addb
xchg
scas
jmp
sub
add
mov
xor
push
sub
xor
add
mov
cvtpi2ps
jecxz
add
and
or
mov
ret
lock
xchg
add
jmp
push
scas
cmp
out
shll
add
mov
inc
add
ja
imul
icebp
loopne
push
cmp
pusha
clc
out
xchg
pop
jmp
rcll
sbb
inc
loope
push
outsl
imul
and
jecxz
adc
repz
dec
in
imul
nop
test
adc
add
xchg
xchg
scas
sbb
or
or
inc
enter
mov
out
pop
int3
cmpsb
lret
mov
pop
sub
cmpsb
test
pop
aad
xchg
push
outsl
or
stc
xor
and
aaa
pop
cld
imul
push
cmp
xchg
mov
imul
fdivl
jecxz
mov
dec
clc
aad
fmuls
loopw
and
movl
cmpl
jg
not
jmp
push
push
push
pushl
pushl
pushl
push
pushl
pushl
call
movl
movl
movl
movl
mov
shl
xor
mov
subl
push
jmp
repnz
push
sub
iret
adc
mov
ljmp
cli
adc
ret
std
cmp
pushf
arpl
enter
push
inc
cmp
cltd
mov
jo
jnp
push
rcl
xchg
push
add
dec
ja
cmp
loopne
subb
mov
or
pop
imul
pop
out
mov
xchg
negb
ljmp
dec
xchg
add
xchg
xor
jp
mov
cmp
mulb
pop
xchg
lret
or
push
insl
add
repz
sub
sbb
push
scas
movq
mov
in
mov
inc
subl
push
push
das
sub
fs
out
push
repz
mov
repz
jo
sbb
addl
jge
or
jns
test
xchg
mov
aaa
mov
lea
sub
and
cltd
sar
jecxz
and
push
mov
adc
out
cmp
cmp
jecxz
xlat
loop
jmp
test
cmpsb
lds
jl
cwtl
pop
fs
push
loope
mov
insb
sbb
add
mov
rorb
add
dec
lahf
negl
push
shrl
xor
sub
mov
test
rcrb
push
je
xchg
mov
mov
inc
adc
sbb
jmp
mov
xchg
xor
test
mov
xchg
sub
mov
orl
jnp
int
inc
adc
test
or
lret
mov
add
jge
jmp
lods
subl
sbb
xchg
fyl2xp1
dec
dec
jecxz
fimuls
or
lds
adc
sbb
jg
jl
push
mov
pop
mov
pop
in
stos
idiv
xchg
bound
je
push
ds
das
cmp
inc
cli
xchg
negl
hlt
mov
adc
add
adc
mov
ss
shr
aas
adc
xor
push
out
inc
xor
call
jbe
xor
pop
and
test
imul
hlt
xlat
mov
xchg
xorb
fs
dec
ljmp
add
jbe
mov
in
aad
xchg
aas
push
add
push
push
push
daa
enter
in
pop
push
sub
sub
lock
mov
stos
mov
jno
scas
xor
jecxz
mov
mov
xchg
mov
push
cmp
sub
insl
push
hlt
push
test
dec
mov
inc
mov
cmpsl
jnp
adc
sbb
scas
mov
or
cltd
and
mov
xchg
pop
and
lcall
popf
xchg
mov
sbb
xchg
das
loop
enter
jmp
cmp
mov
cmp
fsub
mov
add
jns
cs
xchg
popa
jecxz
cmp
push
sarl
lret
sbb
mov
sub
mov
enter
sbb
fisubrs
pusha
in
cmp
cmc
add
mov
test
ds
mov
ret
pusha
xchg
nop
aad
push
add
mov
cld
cwtl
fst
inc
xor
fcompl
sarb
push
ds
jl
adc
out
imul
xor
jnp
push
test
inc
cmpsb
push
sbb
ss
or
push
jge
loopne
ret
shlb
xchg
lahf
mov
scas
stos
dec
ss
int3
jns
testb
mov
sbb
cmp
and
in
cmpsl
test
shr
xchg
mov
pop
mov
into
jle
out
sub
int3
xor
or
or
lods
push
loop
dec
dec
xor
stc
mov
or
ja
test
xor
inc
sti
mov
inc
xor
addr16
jo
ljmp
cmp
outsl
stos
inc
cmp
cmp
sbb
pop
cmp
aam
pop
dec
popf
test
or
sub
mov
inc
add
out
add
cmpl
jbe
jmp
pushl
push
push
push
pushl
call
mov
mov
xor
mov
mov
sub
mov
lea
cmpl
jle
and
jmp
push
call
mov
mov
or
and
mov
or
xorl
xor
movl
cmp
jne
andl
mov
sbb
mov
and
shrd
xorl
jmp
mov
pop
xor
ss
out
lret
mov
aaa
cli
adc
jecxz
rorl
insb
insl
repnz
rcll
fidivrs
addl
adc
repnz
mov
lods
out
cmpsb
int
pop
aad
fnsetpm(287
andl
pop
fidivl
mov
addr16
sub
jbe
into
fwait
pop
push
sub
add
rcrl
push
or
sub
pop
call
mov
xor
cmpsl
shl
adc
mov
in
jnp
sbb
mov
pop
mov
pop
divb
xchg
sti
out
pop
mov
pop
cli
addr16
adc
adc
mov
ss
pushf
sbb
movsb
ds
jne
inc
ljmp
mov
call
dec
xchg
add
out
mov
inc
in
inc
add
sbb
lock
in
adc
jno
adc
loop
aas
loop
jmp
push
jb
fstps
xor
push
into
aam
sti
dec
rcrl
dec
push
jecxz
cli
out
ss
and
repz
mov
xchg
fs
mov
xchg
fwait
lret
out
xor
mov
or
xchg
mov
int3
idivb
push
or
pop
ja
fldenv
rclb
dec
sub
stos
imulb
add
cli
rclb
pop
jb
inc
sbb
mov
xchg
insb
les
xchg
xor
cmpsw
cmp
popf
hlt
cmp
loopne
dec
jecxz
fwait
sub
add
or
sbb
test
mov
in
out
jnp
pop
lock
mov
clc
test
and
mov
cli
add
jmp
adc
adc
cli
frstpm(287
push
push
popa
mov
icebp
add
sbb
pop
fmul
js
pop
inc
or
addr16
fdiv
stos
push
ja
mov
mov
bound
inc
or
sub
jns
pop
out
push
addr16
mov
mov
lock
cmp
loope
ds
xor
fisttpl
mov
adc
out
aam
ja
pop
add
xchg
mov
adc
mov
sbb
sar
pushl
imul
outsb
xchg
add
pop
ss
js
cmpsl
mov
jmp
cwtl
pushf
mov
lret
and
xor
cmp
add
pop
lret
jns
pop
stos
jbe
mov
sbb
sahf
scas
imul
xchg
push
movsl
mov
mov
rorl
push
xchg
xchg
into
add
fldt
sbb
arpl
in
imul
je
mov
test
mov
jmp
push
mov
idivl
andl
sub
cmp
mov
movsl
xor
mov
sti
outsb
xlat
sub
aas
ret
insl
arpl
fistpll
mov
and
in
and
cmp
sbb
and
mov
and
in
inc
cmc
and
arpl
mov
mov
push
push
std
xchg
leave
pop
ret
jbe
js
cli
loope
sbb
pop
lcall
icebp
lea
in
hlt
test
shl
xor
xor
mov
sub
sarb
add
xlat
xchg
add
test
incl
dec
mov
pop
lock
sub
mov
jl
and
dec
insb
dec
jl
test
sub
inc
mov
int3
mov
dec
or
sub
int3
mov
dec
mov
cs
inc
imul
pop
sbb
mov
mov
pusha
in
pusha
loopne
sbb
mov
adc
pop
into
stos
push
push
roll
imul
xrelease
ja
jmp
sub
pop
cltd
call
fsin
pop
cmc
test
negl
push
inc
push
mov
mov
jmp
inc
imull
call
mov
jl
inc
shr
mov
xor
add
xor
mov
shl
xor
xor
or
mov
mov
cmp
movl
jne
movzbl
and
mov
mov
jmp
adc
mov
pop
rclb
test
mov
adc
cli
adc
cmp
pop
dec
pop
ds
mov
jp
mov
iret
dec
push
movsb
jge
bound
pop
pop
cmp
adc
and
push
xor
pushf
ret
pop
or
jmp
cld
std
adc
out
xchg
jl
jmp
subl
or
jns
int
push
push
mov
mov
inc
adc
sbb
sub
fstps
mov
pushf
addl
jle
jl
push
cld
lock
test
pop
cmpsb
mov
imul
fcmovnbe
mov
les
in
dec
mov
mov
into
sahf
cltd
push
push
in
or
mov
stc
adc
stc
les
lock
nop
push
mov
pusha
sbb
adc
jmp
int
push
dec
ja
lret
mov
insb
hlt
push
jb
fucomp
insl
pop
inc
push
pushf
lea
sbb
xchg
pop
shrb
aam
mov
bnd
dec
fiaddl
ss
sbb
and
aaa
in
adc
jbe
rclb
pop
call
subl
les
clc
xlat
push
lret
jg
add
xchg
inc
push
push
in
dec
and
lret
adc
jne
cltd
es
xor
dec
cmpsb
add
or
imul
in
push
outsl
je
sbb
repnz
jmp
sub
pop
pop
pop
sbb
cmp
mov
xorb
ljmp
fwait
hlt
pop
or
and
sub
cwtl
adcb
out
push
sub
orl
sub
fprem
add
in
push
test
jae
cld
outsb
xlat
inc
lcall
mov
shlb
jle
push
mov
and
cmp
jb
pop
mov
lock
add
and
aas
jbe
adc
in
mov
mov
sub
jno
sub
mov
arpl
cltd
data16
es
push
lock
sbb
lds
iret
cld
mov
inc
stos
or
fdiv
or
popa
add
hlt
out
pushf
iret
test
mov
pop
int3
mov
loope
iret
pop
mov
xchg
cld
in
sbb
inc
xlat
dec
push
xor
add
js
loopne
xchg
push
cmp
dec
dec
inc
cmp
ss
adc
xchg
movsb
sti
pop
push
push
gs
push
mov
mov
mov
or
jge
decb
and
pop
movsb
loope
pushf
and
dec
adc
push
std
lcall
iret
stc
mov
push
cmp
sbb
add
icebp
pop
js
push
or
pop
lock
lods
push
lea
pop
sahf
dec
add
pop
dec
inc
inc
sub
push
xor
mov
add
sbb
outsb
sti
dec
gs
popa
out
jmp
mov
lcall
mov
xor
mov
inc
sbb
stos
mov
mov
insl
mov
cmp
xchg
out
sti
add
rorl
sub
adc
lock
cli
enter
je
xchg
insl
and
cmp
xor
loop
xchg
testl
inc
nop
orb
js
mov
xchg
and
cmpsb
push
push
or
jle
cmp
xchg
std
mov
or
pusha
push
pop
xor
xor
push
inc
push
fisttpll
adc
rol
jbe
adc
in
pop
daa
fnstsw
stos
push
xor
pop
sti
inc
or
inc
out
clc
or
outsb
das
ds
int3
loopne
bound
cmp
pusha
lds
aad
arpl
xchg
mov
icebp
or
cli
test
scas
cmp
leave
in
fldl
xchg
cmp
idivl
insb
mov
jno
mov
mov
cmp
test
faddl
fwait
sbb
mov
jge
sahf
out
jmp
inc
lock
mov
nop
inc
cmc
aad
in
ja
jnp
xchg
pop
das
add
inc
mov
xchg
dec
icebp
push
loop
out
or
xor
mov
mov
sub
mov
neg
mov
addl
jmp
jo
mov
push
xor
sbb
xchg
ret
test
cli
adc
sbb
daa
mov
jge
and
pusha
jae
add
test
addb
jg
xchg
and
pop
mov
cmp
xchg
jno
lods
xchg
cmp
shrl
adc
and
shrb
lret
push
lcall
insw
inc
rcr
jecxz
bound
bound
pop
inc
cmpsb
daa
rolb
dec
fstpt
movsl
jnp
ret
or
lods
and
sbb
sbb
inc
dec
sub
mov
lock
sbb
cmp
and
fistps
jge
sbb
ret
and
mov
sahf
movsl
push
mov
movsb
repz
mov
idivb
ds
rclb
movsl
jns
jecxz
cld
cmp
add
and
xchg
xchg
mov
sarb
adc
cli
rcrl
mov
arpl
ffreep
add
and
push
cmc
nop
xchg
insl
adc
fstpl
add
sub
mov
or
sbb
out
mov
xchg
cwtl
rcrb
inc
cmp
mov
sbbl
mov
insl
sbb
test
jb
push
push
add
xor
inc
test
mov
std
or
push
in
jno
scas
pop
imul
jl
shlb
add
vmaxpd
out
in
fdivrl
in
dec
fsubrs
jae
dec
mov
iret
or
adcb
cmp
xchg
hlt
jl
inc
mov
dec
dec
xlat
xchg
fsubrp
jbe
mov
mov
icebp
push
xchg
sti
jbe
pop
xchg
pop
or
mov
aas
push
lds
sub
adc
mov
lods
fwait
pusha
in
adc
test
adcb
jb
push
inc
mov
popa
inc
sbb
dec
div
std
mov
mov
fsubrs
or
repnz
sahf
or
mov
adc
jp
push
pop
leave
xor
sahf
int
pushf
and
jmp
iret
scas
imul
int3
lahf
in
dec
sbb
rorl
fbstp
push
xadd
aad
imul
dec
add
adc
dec
test
addb
pop
push
sbb
dec
add
sub
push
lods
in
pop
mov
rolb
test
xchg
fwait
pusha
in
jb
leave
dec
arpl
sahf
stos
ss
lods
xchg
xchg
call
repnz
popf
dec
sti
push
cmp
push
inc
add
pop
add
jle
xor
jbe
mov
push
lea
and
loope
ret
or
xchg
dec
ret
ja
imulb
in
adc
cld
pop
loop
int
rorb
lds
fiaddl
inc
xor
popf
push
sub
movsb
add
fidivrl
mov
push
jp
inc
cli
mov
mov
lods
das
in
ja
loop
mov
gs
pushf
in
repnz
sub
pop
into
imul
xor
out
sahf
jnp
jmp
rol
sbb
arpl
repnz
sub
les
adc
push
fsubrs
insb
xchg
sahf
xchg
jle
loop
push
push
jnp
bound
rcrl
cmp
loop
testl
jmp
mov
daa
jg
cltd
or
mov
mov
scas
adc
mov
add
insb
mov
and
add
and
xchg
pop
xchg
outsl
and
xchg
adc
xorb
call
push
fs
pop
fldl
in
add
sbb
dec
or
sub
mov
imul
push
sbb
aad
daa
pop
call
dec
push
fiaddl
scas
push
loopne
test
and
div
andl
push
xor
out
dec
or
loope
cmpsl
out
mov
lock
hlt
insb
mov
mov
push
push
jnp
mov
mov
nop
loope
arpl
sub
and
shrd
orl
mov
xor
mov
addl
jmp
lea
popf
adc
adc
push
cmpsb
push
push
dec
lret
adc
cli
adc
xor
push
jb
jns
inc
imul
mov
int
popa
inc
insl
fcmove
push
mov
mov
pushf
call
jb
inc
dec
sbb
pop
or
or
pop
cmc
push
fisttpll
pusha
jo
add
inc
jg
mov
imul
mov
insb
data16
ljmp
sub
out
push
loopne
jg
dec
out
andl
popa
and
sbb
imulb
loopne
movsb
xor
push
mov
mov
fists
clc
mov
mov
and
clc
lods
mov
cwtl
mov
rolb
jle
adc
lea
daa
inc
ret
f2xm1
xorl
dec
push
adcb
sub
cmp
mov
gs
and
fwait
popa
xor
xchg
repnz
in
sbbb
insb
jbe
jns
dec
push
fcmovu
mov
scas
int3
std
sub
sarb
ud1
push
rorw
or
les
fnsave
jno
sub
enter
ljmp
pop
push
jle
xor
aaa
sahf
and
push
push
cmpsb
mov
pop
inc
jl
stc
rclb
inc
sti
pop
ss
mov
aas
or
imul
xor
push
test
out
push
and
add
push
test
inc
lret
xchg
inc
sahf
popf
or
ficompl
mov
into
ds
icebp
pusha
mov
mov
jns
mov
int3
cld
and
add
sahf
ljmp
leave
and
lock
inc
popa
sbb
aas
mov
gs
enter
outsl
lcall
mov
sbb
mov
test
inc
nop
in
faddl
cmpsb
aaa
imul
in
sub
xor
aas
cbtw
and
push
pop
testl
push
push
xchg
iret
cli
outsl
adc
sbb
mov
stos
mov
jo
inc
adc
outsl
xchg
aam
mov
xchg
and
or
dec
mov
outsb
sub
push
pop
xchg
shlb
sysenter
jmp
arpl
nop
inc
xchg
std
sub
pop
fstl
and
jl
mov
aad
pop
xchg
add
fnstsw
dec
mov
inc
add
nop
dec
aad
cmp
push
insb
and
sub
leave
push
sbbb
push
cmpsb
mov
mov
inc
in
je
xchg
mov
xchg
cli
enter
xchg
sbb
push
sub
mov
cmp
mov
sub
sub
dec
ss
sub
repnz
inc
stc
cs
or
cmpb
cmp
fcmove
fisubrl
push
nop
call
ror
sbb
or
mov
pop
clc
lahf
dec
xor
popa
cmp
adc
dec
xchg
orl
mov
dec
and
and
in
mov
sbb
es
dec
mov
or
lods
notl
das
inc
cltd
mov
or
in
das
pushf
rcrl
imul
and
rorb
sub
icebp
test
sub
xchg
daa
and
mov
ljmp
push
add
shl
out
fs
clc
xchg
push
mov
scas
fcomps
push
inc
sub
fcoms
ud0
xchg
fadds
push
out
mov
hlt
pop
mov
jge
scas
mov
fs
insb
sub
sub
add
xchg
dec
mov
add
cmp
jne
mov
cmp
adc
je
pop
iret
fistpl
fs
jecxz
inc
or
repz
xor
jns
shrb
push
adc
cli
add
and
les
xchg
xchg
inc
and
or
pop
xchg
mov
jmp
sti
adc
mov
mov
push
pushf
cmpb
and
loopne
cmpsl
pop
orb
je
and
mov
loopne
xor
shr
xor
or
adc
jmp
dec
sbb
ss
push
or
pop
or
push
jns
adc
cli
adc
and
xchg
adc
inc
jns
or
pop
mov
sbbl
xlat
or
xchg
sbb
jnp
sbb
push
sub
or
cmp
cmp
pop
push
movsb
add
pusha
shl
mov
sahf
std
jmp
cmp
pop
int3
sub
or
imul
ret
inc
shll
xchg
xor
lret
add
xchg
mov
dec
jg
cs
clc
scas
pop
cltd
inc
cli
jp
sti
and
bnd
push
sahf
push
fsubp
leave
dec
pop
and
mov
xor
popa
jae
adc
in
jle
call
aas
outsl
mov
cmpsl
fs
ret
icebp
adc
push
mov
js
mov
mov
lcall
in
push
sbb
jle
stc
int3
push
cmp
sbb
inc
push
push
mov
xor
push
and
or
push
push
and
pop
cmp
cmp
cltd
shlb
adcb
jo
and
push
cltd
push
cmpsb
adc
lea
fs
xor
stc
movsb
or
nop
jnp
ret
or
mov
and
enter
pop
or
sbb
inc
add
insb
ds
ljmp
movsl
add
add
pop
inc
push
out
or
adc
cmp
mov
adc
cmp
dec
sti
test
or
dec
mov
fdivs
cltd
nop
adcb
popf
cmp
ret
add
xchg
test
shll
or
ret
push
mov
in
jl
loopne
loopne
mov
xchg
and
test
ss
mov
fisubrs
xlat
clc
pop
push
mov
clc
adc
addr16
add
mov
andl
lods
pop
xchg
iret
call
jmp
mov
fisttpl
sub
adc
sarb
jne
hlt
call
scas
xabort
imulb
leave
mov
call
ret
movsl
add
pop
lods
xor
clc
dec
sbb
popa
dec
loop
jge
sub
gs
jmp
sub
test
lcall
mov
inc
add
jb
popa
cmp
mov
jmp
and
mov
jl
pop
mov
lods
pushf
lods
inc
push
movl
xlat
sub
add
mov
mov
cmpsb
loop
jle
mov
dec
or
xchg
push
pop
clc
push
mov
shl
notl
aad
cmc
cld
ja
popf
dec
iret
add
adc
icebp
pop
cmp
sbb
stos
and
stc
add
dec
jns
and
jge
push
lock
test
addr16
adc
adc
sahf
popf
shll
rcll
mov
mov
mov
add
jne
dec
push
push
inc
repz
loope
imul
mov
cmp
inc
jo
or
push
movsb
cmp
pushf
mov
leave
dec
jnp
dec
push
dec
jmp
rcrl
xor
cmpsl
shlb
frstor
insb
push
add
in
es
push
sbb
js
xchg
mov
jge
cmp
loop
xlat
jge
and
xchg
orl
lods
xorb
ret
scas
dec
push
adcb
add
sarl
movsl
aam
sub
loopne
inc
pop
shll
mov
mov
mov
les
cltd
pop
mov
dec
or
and
ss
xlat
mov
in
dec
sub
scas
pop
jmp
cmp
jbe
sbb
idivb
aad
into
popf
int3
fsubs
dec
leave
push
xor
lahf
mov
movb
clc
scas
insl
shll
hlt
dec
sti
clc
push
pop
inc
sbb
dec
mov
mov
xchg
iret
rcrb
or
shll
pushf
dec
cmpsl
mov
aaa
rcl
ret
test
lock
push
out
adc
rolb
add
cmp
or
andl
shl
sbbl
sub
mov
cmpl
jb
sbb
jmp
push
push
call
mov
mov
add
mov
jmp
outsl
sub
push
xor
dec
or
mov
dec
xchg
subl
jg
adc
cli
adc
pop
je
testb
add
adc
out
jb
ret
fisttpl
xchg
test
call
ret
loope
fwait
ss
das
xor
cs
mov
ja
insb
fldcw
pop
mov
or
loop
jb
mov
daa
mov
mov
push
jmp
in
roll
in
pop
xor
ficompl
push
lods
out
int
mov
lods
lret
sub
lock
xor
or
fidivl
sbb
mov
mov
sub
sub
js
xlat
popf
daa
test
pop
sbb
xor
aad
flds
mov
inc
mov
pushf
in
addl
mov
pop
xchg
cli
jno
stc
and
sub
push
mov
fildl
dec
bound
add
test
sbb
loop
adc
cmpl
add
adcl
mov
and
scas
sbb
and
in
filds
xor
add
insb
mov
jp
adc
dec
mov
xchg
dec
sbb
fstpt
or
push
inc
xchg
ljmp
imul
xor
sub
cli
test
cmp
adc
inc
push
sbb
or
out
inc
mov
sbb
enter
aad
inc
or
cmp
inc
add
sarb
enter
push
sub
mov
mov
outsb
data16
scas
outsl
jecxz
push
pop
push
adc
outsl
dec
mov
ds
aam
sub
mov
lods
pushl
fistpl
and
hlt
call
or
xchg
xor
test
jbe
pop
andl
clc
insb
test
cmp
scas
xchg
mov
add
xchg
xchg
mov
sub
mov
imul
xchg
pop
gs
mov
stos
push
bound
shrb
xchg
cli
ljmp
dec
inc
or
mov
sbb
imul
pop
scas
lea
gs
jp
or
pushf
shll
push
mov
xchg
and
sbb
in
aam
inc
test
push
fistpl
addr16
mov
andb
jno
xchg
mov
inc
fmuls
pushf
adc
pusha
cmp
popa
xchg
inc
cmpsb
scas
rorb
in
cmp
lret
cmp
or
ss
sub
or
lods
ss
jo
push
stos
jne
jg
xchg
dec
mov
mov
mov
scas
cmp
mov
xchg
repnz
adc
enter
mov
cmp
lods
aas
cmp
pop
and
xchg
jnp
dec
pop
cmp
add
fcomps
js
loope
scas
push
mov
pop
adc
cltd
sub
inc
xchg
outsl
xchg
aam
sbb
in
adc
les
js
fdivl
inc
sub
aas
adc
loop
ret
dec
cmpsl
sub
inc
inc
aaa
mov
popa
roll
adc
cli
rcr
mov
je
add
push
dec
insl
aad
cli
subb
cmpsb
mov
pop
pop
mov
mov
and
aas
sahf
jnp
idivb
into
in
add
nop
pop
mov
daa
xchg
icebp
and
outsl
test
push
mov
sti
lods
cmp
xorl
push
xor
cmp
dec
jge
inc
mov
inc
daa
faddl
jno
lods
add
pusha
das
xor
int3
inc
shl
lods
in
mov
inc
jno
inc
in
mov
int3
pop
mov
or
or
pop
mov
push
fs
pop
add
lcall
inc
dec
ss
shrb
cmp
or
pushf
fidivrs
ret
pushf
jp
inc
jl
adc
fidivs
jg
jge
jno
subb
gs
jl
inc
jae
mov
cmc
shll
sub
add
adc
shrd
shr
and
mov
mov
xor
xor
add
xor
shl
xor
or
add
mov
cmpl
jge
movzbl
sbb
jmp
pushl
pushl
call
mov
shrd
shr
mov
mov
adc
mov
xor
xor
addl
or
shl
sbbl
lea
xor
mov
addl
mov
shrd
subl
shr
andl
mov
add
mov
mov
cmpl
jle
jmp
push
call
xor
mov
xor
or
jmp
scas
mov
nop
inc
push
adc
adcl
adc
aaa
cli
adc
lret
cmp
std
int3
sub
arpl
mov
ss
mov
std
movsl
rcll
in
je
jecxz
adc
mov
sbb
daa
jne
mov
pop
dec
int
int
xchg
dec
jns
xchg
xor
push
mov
mov
adc
jg
out
addr16
add
enter
pop
sub
adc
dec
out
cmpsb
jl
cli
ja
jb
sbb
cld
shrb
aad
out
dec
mov
outsb
mov
jmp
cmp
sbb
aad
jmp
mov
and
mov
push
adc
mov
sbb
loop
add
mov
mov
loop
cmp
dec
pop
ss
mov
xchg
test
dec
sbb
pop
mov
repz
nop
push
sub
nop
sub
sarl
sub
adc
rclb
int3
imul
fwait
shll
inc
cmc
mov
mov
lds
pop
pusha
ffree
cwtl
mov
sub
in
mov
std
stos
aam
adc
jg
lods
lret
scas
rcr
mov
imul
js
sbb
and
push
pop
lea
cmc
in
fistpl
push
cwtl
popf
mov
and
aad
out
and
mov
or
sti
test
inc
cmp
hlt
xchg
lcall
add
movsl
mov
nop
scas
push
mov
xchg
insb
rol
addr16
jge
mov
sub
enter
stos
jne
mov
int
shlb
pop
pop
or
add
bnd
std
mov
sti
sub
adc
es
adc
sbb
loopne
mov
sbb
fwait
xor
lret
scas
xor
push
lahf
outsb
jae
test
jns
push
sbb
push
daa
dec
stos
pusha
ss
lods
call
add
icebp
push
mov
les
xchg
fcmovu
add
mov
mov
cmp
push
outsb
int
push
mov
subl
adc
mov
ret
mov
fiaddl
sub
sbb
lret
dec
ret
in
jns
call
xchg
aaa
mov
mov
pop
sub
pusha
stos
fs
pop
stc
mov
adc
adc
pop
jne
mov
insl
shll
sti
mov
icebp
push
or
dec
orb
movsl
scas
int
lock
into
cmp
test
lock
into
cltd
ss
test
dec
mov
test
add
dec
adc
popa
mov
inc
inc
xchg
test
sub
pop
imul
add
ljmp
lods
scas
jne
int
dec
sbb
inc
and
jle
pop
mov
int3
lock
mov
jno
sti
mov
sub
jne
xchg
sbb
ss
sub
test
in
cmp
pop
repz
xchg
rcll
out
inc
lahf
fwait
gs
xchg
into
mov
pop
adc
lcall
fidivrs
les
xchg
gs
and
and
cmp
outsb
mov
imul
jmp
push
mov
jnp
ja
mov
cmp
lock
mov
pop
ds
jns
xrelease
je
jbe
sbbl
mov
xor
push
mov
aad
iret
adc
or
inc
jae
adc
data16
rcll
fcomp
mov
enter
out
cmp
sbb
lcall
std
test
jbe
inc
xlat
scas
fdivr
xlat
test
mov
mov
add
mov
leave
cmpsl
or
int3
inc
dec
nop
insb
loope
push
mov
sub
imul
bound
int3
or
mov
add
cltd
adc
cwtl
xor
pop
cltd
mov
jp
imul
inc
lar
popa
rclb
cltd
pop
pop
xchg
inc
dec
sbb
leave
shl
imul
mov
adc
mov
shrd
andl
mov
mov
sbbl
xor
negl
shr
cmpl
jle
or
jmp
push
push
call
mov
mov
xor
or
shl
sub
mov
mov
cmp
jmp
dec
test
push
or
inc
jge
adc
lds
cli
adc
pushf
shlb
jae
rep
stos
addr16
cld
sbb
and
pop
jns
shl
pop
incl
push
xor
mov
fcmovnb
adc
or
jmp
mov
leave
dec
inc
std
xchg
jb,pt
iret
roll
iret
jg
dec
xchg
test
pop
scas
icebp
or
dec
sbb
mov
loope
dec
inc
test
movsb
dec
push
adc
inc
cs
out
fsts
lds
pusha
insb
ficompl
std
mov
out
scas
aam
shll
jns
xor
fcomps
icebp
pop
fdivr
dec
push
mov
loopne
jb
mov
push
imul
test
scas
test
push
outsl
repnz
mov
pop
jae
cmp
negl
xor
or
test
mov
hlt
jmp
inc
jmp
jp
xor
inc
inc
or
repz
mov
or
icebp
ljmp
inc
jbe
ljmp
mov
aas
lret
mov
inc
cmp
test
ror
push
dec
mov
push
pop
xchg
mov
jae
into
mov
push
out
in
xchg
mov
fimuls
fwait
mov
rcrl
repz
jmp
mov
sub
sti
add
jae
mov
mov
mov
jns
push
adc
shrl
push
ret
mov
mov
xchg
xlat
mov
aam
inc
cmpl
cwtl
ss
adc
jbe
mov
outsb
jp
adcl
movsl
push
xlat
daa
fisttpl
inc
push
mov
cmp
cmp
mov
xchg
aam
cmpsl
xor
pop
xlat
test
lret
jno
insl
add
jg
enter
pusha
ja
test
into
lea
mov
xor
sub
data16
movsl
adc
pusha
jns
sahf
bound
mov
and
add
sbb
aas
jb
xorb
and
call
fdivp
add
ret
gs
or
xor
dec
sti
subl
jg
ljmp
mov
sbb
daa
aaa
mov
addr16
adc
scas
sbb
dec
pop
sub
js
stos
sbb
ffree
xor
aad
xor
fmulp
and
adc
jecxz
out
push
mov
lcall
in
sub
scas
lods
fldt
shlb
lcall
leave
cmp
mov
daa
insb
mov
xor
stc
and
dec
mov
leave
mov
cltd
pop
push
int
sti
jne
xchg
jns
pop
cmovno
mov
dec
push
cltd
mov
pop
scas
add
and
notl
in
cmc
xchg
sub
lcall
jmp
shrl
stos
out
test
adc
dec
jbe
lahf
dec
cmp
cmpl
cld
jno
fdivr
fs
mov
jbe
scas
jle
xor
dec
cmp
into
lret
add
loopne
jl
lods
gs
dec
xchg
loop
arpl
mov
insb
out
mov
test
inc
mov
push
xor
call
dec
scas
push
xlat
lahf
out
mov
fidivrs
adc
and
lcall
mov
mov
dec
jle
fstpl
cmp
movsl
dec
jns
adc
fcomp
sahf
jmp
mov
mov
icebp
push
mov
cmp
sbb
sub
mov
pop
push
stos
testl
xchg
cwtl
push
lahf
rcr
mov
push
jge
cwtl
flds
insb
jp
sbb
cld
xor
lret
jecxz
inc
clc
and
pop
stos
push
and
in
xor
or
cmp
pop
mov
rcrl
adc
mov
sbb
adc
mov
mov
dec
dec
pop
xchg
rcr
adc
lds
popa
mov
mov
inc
btc
fs
cmpsl
xor
jmp
clc
jne
pop
psrld
push
and
xlat
mov
jg
sbb
add
out
dec
les
pop
stos
mov
mov
movl
jg
sbbl
mov
mov
sbbl
shrd
mov
mov
addl
xor
shl
sbbl
xor
andl
or
orl
shr
neg
mov
add
mov
cmpl
jbe
mov
add
mov
jmp
push
push
push
call
mov
mov
shrd
shr
xor
mov
mov
mov
xorl
xor
xor
xorl
or
adcl
shl
adcl
jmp
cmc
push
xor
adc
es
out
mov
xchg
lcall
adc
cli
adc
cltd
bndstx
test
dec
aaa
xor
pop
mov
gs
ss
dec
xchg
call
test
js
sbb
push
arpl
mov
jge
inc
loop
sbb
ss
sbb
push
cmp
jae
subl
lock
dec
cmp
movb
popa
les
mov
sub
js
push
popf
xchg
xlat
fnstcw
jb
jle
hlt
xrelease
loop
pop
in
jb
or
sub
mov
fstpl
xchg
pop
adc
fmuls
and
sub
dec
xchg
mov
jne
inc
jle,pt
aam
mov
adc
and
push
mov
sbb
jns
and
pusha
dec
push
jl
dec
testb
mov
and
cwtl
inc
mov
inc
cmp
push
ret
xchg
fwait
in
mov
cmp
push
ds
sbb
fisttpl
or
pop
out
pusha
jne
mov
sub
sub
test
cs
sbb
cmp
int
lods
pop
xor
push
jns
shr
insb
subb
pop
push
or
cmp
add
les
cltd
cltd
xchg
lahf
imul
das
popf
sbb
mov
scas
sbb
or
cs
inc
and
pusha
addr16
add
jno
adc
cwtl
mov
ficoms
push
dec
and
loopne
sti
or
mov
mov
push
sbb
out
adc
dec
cwtl
lea
test
mov
ja
loopne
test
push
movsb
movl
jp
jbe
pop
cld
sar
les
rorb
xchg
ret
pop
xchg
clc
and
xor
in
adc
and
stos
je
mov
mov
push
movsb
adc
popf
dec
lods
lods
pusha
xor
movsb
cwtl
lcall
nop
popf
dec
cltd
scas
pushf
sub
mov
scas
sarb
popa
lret
and
std
data16
inc
add
mov
and
add
bound
mov
mov
call
outsb
cmpsb
push
movsb
sbb
adc
sub
lods
jae
or
dec
jge
lcall
push
add
jl
pop
xor
lods
mov
dec
lea
inc
jae
clc
inc
mov
dec
ljmp
cmpsb
imul
jl
out
xchg
data16
push
in
mov
sub
hlt
addr16
pop
lds
jle
adc
xlat
fcompl
adc
xchg
into
dec
pop
ss
dec
ja
fisubrl
jl
ror
push
and
mov
ffreep
pop
aad
popf
test
xchg
mov
lods
add
inc
loopne
jp
cmp
xchg
pop
out
push
lea
bound
push
or
xor
sbb
lods
add
push
insl
cmc
push
mov
push
dec
mov
cmp
mov
xor
and
xor
jmp
popa
gs
add
mov
std
or
hlt
out
movsl
notb
nop
inc
scas
in
push
cmp
sti
push
dec
negl
adc
mov
cmc
cwtl
aam
mov
pop
jle
dec
shlb
and
cmpsl
xor
jp
push
mov
xor
xchg
and
or
or
imul
ss
call
imul
xchg
add
or
xor
pusha
mov
loopne
pop
fwait
push
in
or
add
out
push
add
and
xor
cmpsl
xchg
jmp
add
ds
jns
sbb
ja
icebp
bound
mov
jb
dec
and
fmul
cltd
aas
out
xor
in
xchg
stos
and
lcall
test
inc
jecxz
sub
rolb
add
sbb
das
mov
ds
or
dec
ja
imul
sbbl
sub
jmp
cmpl
jg
jmp
push
push
pushl
push
pushl
push
push
push
push
call
mov
mov
shrd
mov
mov
jmp
ret
je
cmp
cmp
je
icebp
xchg
xchg
repnz
test
adc
aaa
cli
adc
inc
adc
repz
mov
dec
inc
sub
ret
jmp
scas
cwtl
xchg
mov
dec
test
stos
push
cmc
jmp
iret
cmp
sub
sbb
inc
xchg
mov
cmpb
xor
test
stos
sbb
lea
xchg
mov
sbb
shrl
ds
add
aam
enter
jg
pop
dec
pop
pusha
and
scas
pop
out
add
add
jp
and
push
inc
imulb
jns
ljmp
inc
and
shlb
inc
arpl
dec
das
orb
sbb
fcoml
pushf
cld
pop
lret
push
jle
sbb
push
nop
push
push
insl
pop
cmpsl
aad
adc
inc
hlt
fnstsw
int
inc
xor
pop
push
adc
test
cmp
nop
lret
add
push
inc
jmp
or
out
andl
imul
jecxz
dec
inc
sbb
and
push
cmpsb
mov
or
pushf
adcl
push
cmc
inc
orb
in
inc
xchg
jns
add
sahf
mov
jae
scas
mov
sub
mov
cmp
shl
loop
cwtl
repnz
into
ja
xorl
out
leave
push
loop
jnp
cmpsb
cmp
jecxz
call
and
aas
addr16
cmpsl
pop
lods
cwtl
iret
jl
pushf
push
shr
cmc
pushl
mov
dec
push
aas
pop
jmp
inc
cld
les
mov
pop
rcll
cmpsb
xchg
jl
das
add
scas
ret
mov
xchg
rorb
mov
int3
add
sub
movsb
push
sub
scas
add
popf
std
shll
mov
stc
das
jp
xor
pop
sbb
push
dec
xor
sbb
test
inc
movq
daa
mov
pushf
enter
xchg
call
sub
or
scas
cmp
push
out
dec
inc
push
fwait
loope
idivl
dec
inc
adc
mov
in
inc
cmpsl
fs
xlat
std
repz
in
push
push
shll
pushf
call
shll
add
mov
mov
mov
in
loop
xchg
pop
adc
mov
cld
js
ficoms
mov
orb
mov
sbb
fsubrs
mov
mov
std
arpl
dec
sub
mov
aas
test
dec
jmp
dec
leave
push
in
inc
mov
push
push
xchg
xchg
movsl
andb
movsl
cwtl
or
mov
jae
jge
sub
enter
lods
faddl
lock
xchg
and
cmp
ss
and
or
sti
add
cmp
mov
popa
aas
and
fdivl
out
ss
loope
es
movl
cmp
jl
add
push
scas
jmp
adc
lret
sbb
push
adc
inc
popa
mov
mov
lods
xorl
pop
cbtw
nop
add
fs
inc
repnz
sub
fistpll
and
les
shll
mov
and
dec
pop
jne
mov
cs
jle
jo
addb
dec
test
jb
loopne
rcrb
outsl
mov
sub
sti
scas
pusha
fs
mov
mov
pop
pop
out
andb
repnz
push
in
lret
sbb
jo
mov
jge
mov
pushl
add
lock
dec
sub
popf
jl
dec
cmpsb
inc
lea
push
pop
xchg
shl
push
pop
sbb
inc
stc
xchg
mov
pop
ss
pop
push
push
xor
stos
leave
xor
ljmp
data16
int3
sub
fistpl
into
jo
mov
xchg
loopne
out
ret
stc
mov
nop
pop
xchg
push
sarb
cmpb
push
pop
xor
mov
sub
rcr
push
xchg
aas
fst
xor
xor
test
aas
fstps
jge
shl
andl
xor
or
andl
shr
mov
cmpl
ja
andl
and
jmp
push
pushl
call
mov
mov
mov
shrd
shr
and
mov
mov
mov
adcl
xor
adcl
xor
xorl
or
andl
shl
add
cmpl
ja
jmp
push
pushl
pushl
push
pushl
pushl
call
add
mov
jmp
sbb
cmpsl
mov
push
push
pusha
jecxz
mov
addr16
adc
aaa
cli
adc
stos
out
mov
imul
lods
xor
push
sarb
loope
lea
push
add
jl
cmpsl
xchg
pop
adc
data16
push
xor
movsl
stc
test
sbb
divb
clc
lcall
mov
xchg
insl
adc
xchg
pop
ljmp
insb
cmp
xchg
mov
xchg
pop
rcll
std
imul
jp
inc
mov
icebp
imul
in
shr
mov
mov
mov
inc
out
pusha
add
jmp
push
xchg
les
push
jo
fistpl
dec
jbe
xlat
div
jl
int
nop
int
mov
xchg
jmp
popa
add
clc
out
push
icebp
mov
sub
std
mov
cmpsb
mov
iret
jb
sbb
xor
inc
insb
cmpb
out
int
std
lahf
cmc
xor
dec
jge
test
das
adc
pop
mov
sub
iret
inc
sbb
xchg
stos
mov
sti
inc
and
cmp
out
push
test
pusha
imul
xor
aas
dec
mov
xchg
xor
jmp
imul
pop
jb
sarb
mov
or
test
adc
sbb
dec
fs
ret
cmp
leave
and
aad
out
xor
push
jno
dec
stos
popf
adc
out
pop
into
pop
jl
add
sbb
popa
stos
sti
movsb
jns
pop
das
fidivrs
add
out
test
loopne
dec
dec
xchg
loope
cmp
shlb
xor
add
cld
mov
leave
xor
pop
cmpb
shll
or
xchg
lock
sub
lds
stos
inc
and
mov
iret
stos
out
rclb
jo
pushf
rcl
sub
movsb
das
push
jecxz
cli
dec
sub
cmpb
sbb
inc
fwait
stc
xchg
aam
fdiv
mov
pusha
sbb
jl
in
cwtl
dec
scas
jl
xchg
jge
clc
dec
add
push
ret
aas
and
outsb
add
out
mov
stos
popa
ror
fcoml
sub
xchg
std
push
xor
inc
and
mov
lret
push
in
outsb
jmp
sub
insb
pop
push
mov
add
fistps
and
dec
or
and
fistl
jge
shrb
out
ret
cs
pop
aad
ljmp
push
xchg
test
cli
mov
inc
cmpsl
out
cmpsl
cltd
and
inc
and
sub
mov
sbb
cmp
adc
mov
dec
pop
sbb
rol
or
jne
dec
inc
inc
pop
dec
ljmp
mov
adc
inc
movsl
pop
repz
add
pushf
sbbl
arpl
insb
mulb
xor
daa
dec
dec
sbb
lds
or
shlb
inc
and
dec
sbb
out
fcmove
add
cmp
xlat
inc
jl
dec
out
cltd
movsl
insb
xor
sub
iret
dec
in
fcompl
jecxz
add
outsl
loope
add
addl
sbb
test
xchg
mov
aaa
xor
add
adc
fadds
enter
pop
sbb
js
dec
adc
cmpsb
mov
dec
cld
call
std
loop
insb
outsl
adc
xor
xchg
xchg
dec
in
adc
sbb
add
jne,pn
fmul
dec
xor
jge
jnp
xor
push
mov
test
stos
es
data16
or
movsb
mov
xchg
pop
and
pop
xchg
js
sub
mov
shll
and
mov
loop
fdivrp
dec
lahf
lods
insb
mov
push
and
dec
cmp
push
jae
lock
jle
into
mov
xorw
cmc
loopne
jge
pop
dec
mov
pop
mov
xor
cmp
repnz
push
jmp
sbb
cmp
lea
push
push
xchg
xchg
pop
mov
mov
ret
lds
lods
mov
shrd
shr
mov
mov
sbbl
xor
xorl
shl
cmpl
jle
jmp
pushl
pushl
call
xor
or
mov
movl
mov
mov
movl
and
mov
movl
xor
mov
sbb
movl
xor
mov
or
mov
sub
mov
sbb
shrd
cmpl
jbe
sub
jmp
push
call
shr
mov
mov
xor
shl
xor
xor
or
lea
mov
mov
adc
mov
xorl
shrd
and
shr
cmpl
jb
jmp
pushl
pushl
pushl
pushl
pushl
push
pushl
call
mov
mov
shl
mov
xor
xor
or
add
mov
mov
andl
xor
mov
cmpl
jb
not
jmp
push
push
push
call
mov
shrd
shr
mov
mov
xor
adcl
shl
cmpl
jl
sbb
jmp
push
call
xor
or
lea
mov
mov
mov
movzwl
or
shrd
xorl
jmp
cmp
mov
adc
xor
adc
mov
adc
cli
adc
in
inc
pop
dec
mov
add
nop
sub
in
jl
jns
ljmp
pop
mov
dec
or
inc
add
cltd
dec
add
pop
aam
pop
inc
sub
fistpll
xor
add
int3
ret
testl
sahf
out
scas
sub
fcoml
sub
faddp
pop
cld
xor
sub
vandpd
cmc
push
push
add
cmc
and
pop
cmp
aas
test
movsb
sahf
ret
mov
das
xor
jge
iret
outsl
lret
rolb
scas
xor
test
jecxz
xor
fwait
int3
lret
mov
push
push
mov
inc
lret
test
push
int3
cld
clc
and
in
in
in
inc
je
or
mov
lea
cmp
jnp
add
add
push
pop
mov
data16
pop
cmp
imul
outsl
mov
fwait
jae
aam
xor
lea
pusha
test
leave
scas
sbb
and
xor
sub
mov
push
cmpsb
lahf
cmp
jo
adc
mov
mov
push
push
cmp
out
jecxz
sbb
arpl
hlt
inc
push
out
mov
cmp
aad
pop
or
cmpsl
scas
push
cwtl
es
push
cmp
cli
jp
in
xchg
mov
ds
xor
push
pop
cmp
mov
vandps
dec
jns
adc
aam
push
adc
lcall
cmp
mov
pop
pop
xor
xor
xor
outsl
jg
clc
push
cmp
fisubl
lcall
jo
aas
sbb
add
jae
mov
leave
out
sub
fldenv
cwtl
push
dec
push
mov
cltd
ret
inc
loopne
cmp
inc
bound
and
clc
out
cmp
dec
add
inc
shrl
inc
in
mov
add
roll
jp
adc
xchg
pop
insb
bndstx
sti
jns
jl
pop
pop
pushf
cmp
decb
adc
sbb
add
sub
cmc
or
ficompl
aaa
adc
jp
inc
in
ret
jmp
cmpsb
nop
push
mov
or
pop
fstp
xor
xor
scas
bound
lret
adc
mov
pop
fildl
mov
pop
push
js
dec
or
xor
ja
mov
call
shrb
push
add
jbe
fmull
pop
insl
cmp
adc
xchg
out
lds
pop
add
ret
mov
dec
jnp
fisttps
mov
loope
lret
mov
and
out
xor
cltd
iret
loop
pop
sbb
cmp
sbb
fwait
leave
mov
out
sahf
mov
push
jle
cwtl
mul
inc
out
cmp
sbb
ja
fistl
pop
je
lods
leave
rcll
jl
clc
sbb
ds
push
xor
mov
sub
aas
jmp
mov
les
xor
inc
or
clc
mov
loop
outsl
cmc
dec
pusha
lret
sbb
out
and
lods
xor
inc
cwtl
xor
pop
xor
lret
lcall
int3
inc
pop
in
push
mov
push
imul
pop
aas
in
cmp
add
mov
xchg
inc
xchg
sbb
ljmp
cli
push
dec
xor
add
imul
repz
mov
sbb
mov
aaa
mov
inc
xor
in
mov
shll
cmp
stos
std
pop
dec
flds
jg
das
jp
or
sbb
dec
pop
pop
pop
int
imul
xchg
repnz
rol
jno
pusha
cmp
pop
cmpsl
popa
mov
data16
inc
int
imul
sub
pop
adc
ret
pop
outsl
jecxz
test
shll
dec
or
pop
sbb
rclb
cmp
rcrb
jl
push
jmp
or
shr
sbb
mov
add
mov
shl
sbb
mov
xor
xor
or
mov
mov
or
cmpl
jle
adcl
or
jmp
pushl
call
jmp
jne
scas
leave
scas
dec
adc
popl
inc
adc
aaa
cli
adc
test
sbb
push
pop
in
lahf
sub
popf
sti
inc
insl
jne
mov
outsl
add
scas
fsubrs
pop
testb
mov
jo
xchg
js
aad
push
add
out
sub
pop
jns
xor
mov
aam
mov
repz
fidivs
in
pop
push
and
popa
xchg
jle
mov
loope
push
fcmovu
or
mov
ret
test
fs
cs
insl
mov
sbb
ret
cmp
sub
xor
push
popf
aas
sbb
ja
adc
add
jp
test
pop
pop
out
or
add
mov
pop
loop
daa
mov
push
aad
cmc
popa
push
xor
or
mov
xor
cwtl
jno
mov
hlt
push
adc
int
and
mov
sbb
push
mov
outsl
int
stc
lcall
jae
out
mov
sub
daa
cmp
movsl
cmp
data16
rol
jl
insb
sbb
lods
xchg
pusha
push
lret
push
jl
stos
lahf
pop
mov
jmp
xor
rolb
adc
fistpll
std
insb
int3
retw
dec
bound
xor
cmpsb
jbe
roll
xor
cltd
xor
add
xchg
mov
pop
pop
jle
and
jb
out
add
pop
nop
cli
sub
mov
aad
inc
mov
xchg
pop
fxsave
jns
push
ret
or
inc
roll
and
je
xlat
or
loopne
push
loopne
fistpl
imul
adc
dec
mov
sar
xlat
cltd
call
stc
mov
mov
fisttps
add
sahf
lret
pop
push
inc
jecxz
dec
les
and
ret
ret
pop
ret
je
cmp
xchg
and
fdivrs
addr16
mov
pusha
inc
pop
cltd
dec
mov
sbb
jo
sbb
dec
cmc
popa
bound
outsb
push
out
mov
popf
std
xor
in
sub
push
and
xchg
mov
sbb
sub
xchg
jne
mov
cltd
out
daa
cmp
mov
adc
ss
andb
xchg
test
into
add
test
je
enter
shl
jae
ficoml
mov
sub
and
shrl
cmpsb
cmp
outsb
cs
and
jg
out
inc
or
xchg
sbb
ret
dec
jbe
mov
ret
cmp
loop
daa
scas
dec
mov
out
dec
mov
imul
xchg
xchg
orb
inc
xchg
lds
fadd
push
divb
jmp
mov
jecxz
xor
inc
and
sbb
jmp
cs
cmp
cmp
test
loop
sarl
adc
or
jo
dec
test
into
xor
das
jge
cmp
in
adc
leave
or
push
ret
ret
inc
hlt
icebp
or
and
pop
jg
push
cmc
lahf
xlat
xor
cmp
mov
sub
push
cmp
lock
cs
sub
dec
std
cs
pusha
xchg
bound
and
inc
sbb
mov
jecxz
popf
addr16
test
icebp
into
js
and
sbb
mov
push
mov
mov
xorl
and
sbb
rcrb
gs
mov
cld
jl
filds
push
cltd
dec
xor
and
rol
pop
scas
fucomi
sub
jbe
dec
mov
pop
inc
sub
bound
ror
xor
and
fcomip
push
push
jo
mov
inc
add
jge
test
push
leave
push
jno
sub
lods
inc
fninit
and
add
dec
mov
lret
mov
loopne
and
hlt
mov
popa
sbb
jmp
adc
insl
negb
or
decb
or
sub
mov
dec
dec
subl
cld
dec
sbb
dec
std
rcrb
sub
adc
jl
je
js
inc
push
pop
jl
in
inc
lock
shrd
shr
mov
adcl
mov
andl
xor
shl
sub
xor
or
lea
and
mov
xorl
mov
xor
mov
shrd
shr
and
mov
sbb
mov
andl
xor
andl
shl
mov
decl
jmp
pop
lcall
ret
test
roll
dec
xor
adc
aaa
cli
adc
mov
sbb
dec
mov
or
xchg
rcrb
scas
cmp
and
negb
int3
mov
rolb
jns
lahf
ds
adc
jb
xor
cld
sarb
mov
or
push
push
rolb
and
movsl
shll
dec
outsl
add
test
stos
dec
add
cld
outsb
lods
lds
dec
shrb
enter
fsubrl
fistpl
std
imul
outsb
leave
sub
ss
pop
in
jbe
sbb
int3
cwtl
sub
negb
adc
jl
clc
xor
insb
adc
adc
cmp
push
inc
xchg
mov
inc
push
sub
mov
xchg
ret
add
pop
add
sbb
lret
cmp
inc
add
and
dec
sbb
dec
add
sbb
mov
ds
enter
ja
iret
mov
nop
xchg
aaa
sub
inc
lahf
xor
scas
or
cmp
xchg
cmp
nop
mov
pop
lret
inc
mov
fwait
in
pop
daa
movsb
xchg
or
out
scas
cmpsb
repz
or
xchg
jo
pop
mov
clc
int
aas
movsb
cmp
adc
sub
movsl
out
insl
mov
in
outsl
test
stos
lods
jno
pop
or
jb
insl
inc
sti
and
ja
mov
sub
pop
adc
cmp
xchg
data16
addr16
xchg
cli
sti
icebp
pop
cli
orl
or
mov
mov
out
or
mov
cmp
dec
divl
enter
mov
jbe
cmpsl
xor
fs
insl
inc
pop
outsl
xchg
xor
ficomps
cltd
shlb
iret
ja,pt
cli
mov
pop
mov
fiaddl
mov
or
and
out
cmp
cli
add
das
sbb
push
into
sub
ds
aad
and
pusha
mov
cld
pop
and
adc
sbb
pop
iret
fnstenv
mov
mov
es
les
mov
pushf
push
mov
clc
and
pop
decl
lahf
sub
pop
fdivrp
jo
movsl
lret
mov
jecxz
imul
or
daa
out
hlt
fistl
push
into
outsb
aam
aam
mov
loop
xchg
sub
lcall
cli
jmp
outsb
loop
loop
xchg
jno
adc
ds
jo
aad
pop
push
adc
arpl
jnp
std
and
gs
mov
lahf
mov
ljmpw
or
pop
or
stos
dec
mov
dec
out
inc
dec
stos
je
stos
pop
fisubrl
dec
stos
or
out
insb
inc
movsl
andb
push
pop
inc
cltd
icebp
sub
bswap
sub
int3
pop
std
adc
nop
pop
pop
xor
shl
sarl
lds
push
mov
pop
int
or
stos
inc
movsb
mov
add
aad
hlt
push
mov
stos
fdivl
push
adc
xchg
pop
cltd
cld
test
gs
jbe
xchg
in
jne
je
mov
pop
outsb
adc
or
and
xchg
in
cmc
cmpsb
fidivl
xor
mov
jns
dec
inc
mov
int
repnz
push
jp
lret
lock
jns
mov
ficoml
ss
or
pop
dec
fidivrs
shlb
in
adc
pop
pop
in
in
jbe
sti
incl
pop
addl
sub
leave
das
sbb
imul
lds
xor
mov
bswap
leave
cmpsl
cmp
pusha
fisttpl
add
pusha
mov
mov
setae
loop
jmp
inc
pop
mov
in
xchg
clc
pushf
stos
mov
mov
jo
mov
and
xor
addr16
jae
xchg
mov
sti
std
and
jge
sbb
aad
orb
cmp
and
mov
cmp
loope
sbb
or
repz
inc
add
ret
or
cmpl
ja
jmp
pushl
push
push
push
call
mov
add
mov
mov
shrd
shr
mov
mov
xor
movl
xor
andl
or
dec
lea
mov
mov
shl
cmpl
jg
sub
orl
jmp
push
push
call
mov
shrd
shr
mov
mov
andl
xor
xor
xorl
or
cmpl
jg
dec
jmp
push
push
pushl
call
mov
shl
mov
mov
mov
or
cmpl
ja
and
jmp
push
pushl
push
push
pushl
call
jmp
add
mov
adc
xchg
adc
fcomps
jnp
jb
jnp
xor
adc
cli
adc
movsb
mov
lock
fcompl
sbb
test
add
lret
add
mov
pusha
gs
inc
lahf
mov
push
daa
lahf
cmp
repz
xlat
sbb
cmp
cmpsl
cmc
lret
xchg
test
shll
dec
pop
es
mov
push
push
ljmp
add
iret
pop
sub
jbe
mov
push
jnp
shrb
daa
mov
ljmp
cmpb
out
xchg
cmpsl
xor
push
dec
fmul
rcr
xor
pushf
rorl
fsubrs
inc
cmp
or
and
ss
sarb
out
mov
and
popf
inc
ss
push
mov
cld
mov
sub
or
push
sub
in
aaa
insb
movsb
mov
jne
and
je
adc
push
push
fildll
xor
or
daa
cmp
out
cltd
lret
dec
pop
or
dec
and
rorl
mov
imul
or
divb
mov
daa
add
sub
fildll
mov
inc
jecxz
outsl
movsb
addl
jecxz
imul
test
push
mov
fsts
je
mov
je
cmp
cmp
out
or
stos
jl
adc
iret
cltd
lcall
imul
js
pop
lea
scas
rolb
in
call
dec
test
dec
push
divb
inc
mov
fwait
ja
aam
mov
adc
add
jl
and
jle
and
inc
push
add
mov
sbb
dec
iret
leave
mov
jecxz
and
stos
xor
mov
mov
add
stos
fs
pushfw
int3
loope
inc
div
sbb
dec
sub
adc
call
aad
fbstp
lret
clc
xchg
xchg
fadd
movsb
ljmp
push
sub
cmp
out
push
push
sbbl
mov
add
jmp
sbb
nop
add
push
jmp
pop
fisubrl
inc
xchg
jae
xor
push
fsubrl
mov
jge
dec
leave
std
mov
fwait
xchg
insb
xor
ret
adc
inc
cmpsl
pop
hlt
lock
jl
aas
jg
sbb
cmp
mov
bound
repz
push
pop
sub
imul
test
xchg
test
fs
out
outsb
sbb
stos
xchg
mov
inc
sub
mov
jl
adc
in
push
and
shr
jmp
jge
nop
push
and
outsl
push
int
stc
cld
push
jecxz
cmp
adc
cmc
and
sbb
inc
out
pop
cmc
jp
mov
cmp
jmp
fmul
adc
push
inc
enter
add
dec
lock
enter
xchg
cltd
daa
push
icebp
aaa
xor
ret
pop
cltd
add
shl
scas
fcomps
int3
add
ja
test
pop
sti
in
movsl
xor
in
stos
xchg
adc
mov
cmpsl
dec
insb
scas
ret
sub
aaa
mov
ja
es
paddusb
daa
sbb
jmp
add
das
inc
out
mov
xor
cli
jnp
ljmp
xchg
jne
loope
sahf
pop
in
lahf
sbb
and
pushf
out
xor
push
outsl
add
repz
nop
cmp
clc
jae
xchg
test
dec
push
mov
pop
push
iret
sbb
call
and
sub
out
xor
mov
enter
out
in
scas
in
rcr
insb
lods
dec
xchg
jne
aam
push
inc
mov
leave
jmp
inc
mov
js
sbb
ja
mull
in
fdivrl
and
inc
inc
adc
push
iret
push
inc
push
push
jle
dec
xor
dec
jns
lcall
jmp
rolb
add
ficoms
mov
fstpl
jecxz
mov
mov
shrd
shl
shr
mov
subl
mov
xor
xorl
mov
adcl
xor
or
mov
movl
dec
sbbl
not
addl
and
cmpl
ja
add
jmp
pushl
call
xor
mov
mov
xor
or
mov
adcl
jmp
fldln2
aam
aam
enter
imul
das
jnp
pop
adc
aaa
cli
adc
xchg
or
jno
mov
ss
pushf
fisttpll
aas
mov
add
sahf
cmp
push
jae
mov
call
dec
hlt
stos
inc
imul
cmp
mov
sub
gs
sahf
and
mov
sbb
or
xchg
lea
out
fisubrl
mov
ja
fisttpl
mov
lret
sub
clc
mov
push
sub
sbb
jo
test
hlt
daa
out
dec
andl
cli
clc
sti
scas
neg
lret
sub
cltd
push
lds
popf
inc
sub
add
xorb
jae
jg
dec
ret
xchg
mov
test
hlt
int
adc
push
pushf
push
dec
cs
dec
into
xor
and
js
ret
hlt
dec
sub
xor
jl
mov
lds
push
loop
js
pop
pop
mov
or
lcall
xorl
inc
mov
pop
or
cli
fsubrl
dec
lds
insb
insl
or
pop
sub
jo
jl
pop
push
xchg
out
adc
cmc
je
push
out
push
scas
adc
sbbb
fnstcw
and
cmp
pushf
arpl
mov
xor
nop
xchg
data16
notb
cltd
clc
dec
pop
inc
push
add
mov
jecxz
test
or
movsl
or
lods
mov
mov
pop
and
aaa
or
dec
pusha
frstor
gs
loope
ljmp
cwtl
cwtl
push
js
test
hlt
jg
cmc
aaa
mov
in
sbb
fs
testb
and
je
and
mov
cli
scas
shlb
jle
addr16
pop
rcl
pop
jl
into
pushf
mov
push
lea
or
hlt
pop
and
ret
mov
xchg
fisubl
loopne
loop
jmp
ds
fistpll
leave
insl
imul
test
leave
mov
test
jp
adc
push
jp
mov
pop
rcrl
out
mov
iret
ret
cmp
mov
inc
les
lea
jo
test
mov
adc
lret
sub
rolb
ret
sub
or
std
push
test
or
sbb
sti
out
cmc
rcr
jb
xor
dec
push
inc
sub
lret
stc
push
cmp
mov
xor
dec
mov
mov
fs
pop
pop
ss
int
idiv
bound
cs
pop
pop
pop
loopne
in
stos
pop
adc
div
sub
xchg
jnp
test
mov
adc
loope
xchg
lea
leave
xchg
les
ljmp
test
mov
cmp
sbb
testb
push
push
sti
fs
popf
mov
jnp
mov
xchg
stos
dec
cmc
mov
dec
outsb
fcoml
outsl
add
xchg
pop
push
sbb
and
or
jo
sub
sub
mov
sar
rcll
data16
jae
inc
shrl
dec
das
xlat
outsb
loope
fisttps
or
testl
nop
imul
pop
or
icebp
nop
xchg
sbb
xorl
mov
mov
stos
lock
pop
sbb
orb
mov
mov
fs
jb
mov
push
dec
or
cli
xchg
cli
into
scas
gs
out
mov
cltd
adc
fs
stos
ss
mov
pop
iret
mov
fcmove
xlat
shrb
dec
add
and
insl
sbb
dec
cld
cld
inc
outsb
mov
out
scas
aam
sub
push
pop
or
push
inc
out
mov
fnsave
adc
jge
shll
push
sbb
and
xor
and
lcall
adc
jbe
lret
adc
adc
scas
cmpb
or
sti
push
inc
jae
pop
fisubl
mov
fiadds
mov
mov
ds
sub
pop
das
rcll
loop
xchg
stos
sti
jbe
sti
adc
dec
mov
jp
add
add
sbb
mov
pop
push
xor
dec
ficomps
adc
aaa
cli
adc
and
or
xor
mov
jl
adc
mov
jmp
sub
sbb
jmp
pushl
xchg
and
and
leave
call
sbb
push
xor
mov
or
mov
mov
pop
dec
jmp
pusha
xor
fptan
add
adc
jecxz
jecxz
jbe
or
popf
dec
fsubrl
divb
cmp
adc
mov
loope
xor
into
push
or
sti
mov
lock
pop
sbb
mov
enter
pop
popa
lahf
cwtl
mov
push
jnp
bsr
clc
mov
les
xlat
sub
xor
stos
jbe
push
sahf
and
test
inc
adc
pushf
fwait
popf
mov
pop
adc
rcll
pop
lret
in
out
pop
mov
adc
xor
sbb
dec
mov
push
cmc
arpl
push
adc
cltd
push
pop
aaa
fsub
jg
push
mov
adc
xlat
aas
xor
mov
and
aam
push
paddusb
mov
mov
das
out
mov
xchg
xchg
mov
xor
push
xlat
mov
mov
pop
dec
mov
xor
jecxz
ja
lods
pop
iret
jecxz
add
repz
stc
pop
ret
xchg
jmp
adc
ja
adc
jbe
das
add
add
shlb
push
jae
cmpsl
pop
and
xor
mov
dec
filds
cmp
jmp
hlt
mov
stos
jbe
negb
push
mov
aam
repnz
adc
lret
add
adc
xor
xor
aas
or
ret
xchg
stos
loop
out
mov
mov
sarb
or
cmpsb
out
cmp
in
inc
out
out
inc
ucomiss
fsubl
pop
sub
mov
cmc
inc
je
cmp
sub
repnz
clc
lea
repz
mov
icebp
mov
add
xlat
mov
enter
mov
mov
mov
mov
xor
inc
mov
push
in
mov
xchg
pop
rorl
in
fscale
jecxz
repnz
add
fimuls
mov
movsb
rorb
push
mov
and
pusha
mov
movsbl
pmulhw
cmp
out
or
lock
pop
js
or
stos
fcomps
call
nop
add
aad
out
sub
sub
xchg
bound
sbb
or
mov
mov
add
std
clc
push
sbb
mov
xor
adcb
testl
xchg
pusha
ss
xchg
popf
push
rol
pop
dec
mov
lahf
cmp
bound
ljmp
cmpsl
jmp
loopne
dec
iret
aam
adc
mov
sub
inc
test
pop
and
outsl
fsubl
xchg
jne
push
dec
jl
imulb
pop
mov
or
lock
jb
mov
test
test
int3
setae
mov
pop
xchg
test
inc
pusha
in
loope
xchg
xchg
call
mov
cs
add
inc
xor
iret
push
ljmp
mov
mov
push
pop
ret
aad
mov
fld1
notl
sahf
dec
sbb
sahf
in
lcall
xor
cmc
lds
in
inc
adc
xchg
fisttpl
lret
test
cmp
incb
or
cmp
push
int
pop
mov
stc
pusha
add
loop
repz
xchg
cmp
je
mov
mov
jge
xor
and
mov
pop
xchg
in
mul
push
sarb
iret
pmaxsw
jae
bswap
aaa
xchg
add
stos
test
xchg
loopne
fnstcw
push
jmp
aam
or
adc
fwait
cmp
out
dec
mov
call
dec
cmp
icebp
insl
sub
sbb
cmc
jae
fcoms
out
cmpsl
shrd
shr
not
mov
sbb
mov
mov
xor
addl
mov
sbbl
xor
addl
shl
mov
or
mov
cmp
je
mov
sub
mov
sbb
sub
sbbl
mov
cmpl
jl
add
jmp
pushl
pushl
push
call
mov
xor
xor
shrd
shr
mov
mov
andl
mov
cmpl
jge
jmp
push
pushl
pushl
call
mov
xor
or
mov
mov
mov
jmp
and
and
push
sarl
aaa
cli
adc
cmp
rolb
mov
push
nop
push
pop
mov
pop
xor
pop
in
add
jg
or
xchg
repz
xchg
fdivrs
and
push
rolb
inc
pop
cmpb
add
pop
das
cli
cli
pop
mov
pop
in
sub
into
push
cmp
loop
jo
insl
push
push
add
data16
jno
das
mov
ret
mov
mov
outsb
packuswb
xchg
xorl
in
jns
ljmp
cmp
xor
in
cli
sbb
mov
jnp
lea
cmpsb
push
and
psubsw
sbb
mov
outsl
daa
ss
lret
inc
fsubrl
lret
stos
push
neg
testl
xchg
cmp
adc
jo
mov
and
inc
ret
decb
loopne
lret
xor
xorl
bound
jo
cs
cmp
pusha
stos
sub
idiv
fs
hlt
xor
and
jno
pop
sbb
xchg
xchg
fistpl
mov
fstl
sub
push
pop
fwait
adc
rcl
mov
jmp
pop
imul
into
or
jmp
inc
cli
push
outsb
xchg
ds
shrb
mov
out
push
test
mov
add
mov
mov
push
clc
repz
leave
aaa
pop
sub
daa
sub
jnp
insb
lahf
push
sahf
xor
sub
or
dec
frstor
fildll
mov
inc
jge,pt
jge
xchg
add
jnp
lret
imul
je
or
cli
leave
ret
bnd
mov
ret
cli
call
repnz
rolb
cmpsl
pop
dec
pop
movl
adc
mov
inc
push
data16
test
cmpsb
ds
insb
sbb
ret
mov
mov
ja
ret
push
jns
and
push
mov
iret
xchg
pop
add
jb
or
jnp
push
aad
in
ficoms
xchg
into
lcall
push
lret
lea
mov
or
loop
jb
imul
inc
mov
mov
mov
and
mov
std
out
stos
and
mov
pop
in
sbb
gs
popa
lret
ss
pop
cli
pop
or
xlat
icebp
arpl
push
jecxz
inc
in
mov
sub
sbb
jne
mov
jmp
imul
push
arpl
pop
add
repz
or
mov
xorb
outsb
mov
sahf
and
inc
inc
mov
sahf
int
fmull
rcl
cs
cmp
ficoms
into
fwait
xor
and
jno
data16
andl
fs
js
jbe
in
jnp
aas
inc
cltd
lret
add
add
add
mov
sub
and
cmpsb
inc
notl
aad
outsb
pop
pop
mov
inc
mov
mov
std
iret
jg,pt
xchg
les
mov
push
aam
sub
jecxz
in
xchg
jbe
out
insl
mov
xchg
xchg
dec
mov
inc
mov
cmp
xor
push
add
dec
mov
mov
lahf
xor
sub
lret
cmp
xchg
mov
mov
mull
sub
stc
dec
adc
clc
int3
loop
and
push
dec
outsb
pop
ja
enter
je
xchg
orb
add
push
into
mov
fistpl
in
vcvtss2si
fucomip
xchg
adc
pusha
xor
loop
jle
sub
gs
sub
mov
data16
popf
mov
lret
mov
xchg
pop
je
xchg
xor
mov
popa
aas
pop
scas
push
add
pop
leave
and
mov
repz
sarb
lock
or
jnp
xor
dec
inc
das
pop
repz
aam
inc
mov
inc
std
test
iret
sbb
jl
int3
mov
pop
mov
ficompl
mov
roll
int3
shrd
addl
shl
andl
or
subl
mov
mov
xorl
mov
xorl
shll
andl
mov
cmpl
jb
add
jmp
pushl
push
push
call
mov
mov
xor
or
shr
or
movl
jmp
jb
aad
xchg
adc
sub
jg
out
sbb
adc
aaa
cli
adc
sub
xor
adc
xor
bnd
popa
popa
jl
aam
pusha
or
dec
sahf
inc
xor
jae
cmp
push
sbb
sub
imul
aad
mov
ficoms
ja
sbb
fisubl
icebp
xchg
xlat
lock
fsubs
inc
jne
jmp
push
fstps
sbb
inc
enter
xchg
sbbb
xchg
ret
xchg
add
repnz
jp
nop
lea
outsl
and
pop
shrb
int3
cmp
sahf
sarl
cwtl
sbb
lock
lods
out
in
xlat
pushf
bnd
dec
push
xlat
repnz
loop
loope
gs
in
je
add
sbb
lcall
cli
movb
xchg
dec
or
js
sub
iret
jno
sarl
enter
hlt
fdiv
or
jno
xchg
and
mov
fidivs
popa
xor
rorb
scas
cmpsl
push
xlat
sti
aas
stos
into
mov
sub
jp
xchg
stos
imulb
in
stc
int3
data16
mov
xchg
push
push
xchg
push
adc
arpl
sbb
mov
stos
add
fsubp
cmpsl
adc
sub
add
vhsubpd
mov
pop
jg
sbb
mov
not
lahf
repnz
ds
push
in
and
loopne
xchg
icebp
stc
lret
sub
or
push
adc
pop
push
icebp
mov
xor
pusha
arpl
pushf
adc
push
xlat
mov
das
xchg
in
pop
xlat
fiadds
pop
xlat
cmp
xchg
mov
xchg
jecxz
fistl
icebp
inc
jae
add
add
sbb
jl
pop
xchg
in
mov
fstl
jp
cmp
int
xchg
xchg
mov
in
jge
pop
pop
push
push
jecxz
sbb
mov
add
mov
mov
sub
and
xchg
sub
adc
push
push
call
sub
js
ficoms
xor
xchg
sar
xchg
jbe
xchg
dec
frstor
xchg
popf
dec
mov
loopne
repnz
pop
mov
adc
pop
xchg
sarl
mov
push
ficoml
jns
or
jmp
repz
out
xor
mov
or
cltd
sbb
sbb
movsb
rcll
pop
or
adc
add
xlat
dec
lock
xchg
jb
std
mov
repz
xchg
xchg
repnz
nop
popf
cltd
mov
cs
cmp
js
sbb
imul
in
push
xchg
push
sbb
test
pop
inc
xchg
cli
ret
or
jge
xor
inc
daa
sub
sbb
and
jp
icebp
dec
xor
add
push
xor
dec
repnz
mov
out
mov
insb
jb
jle
mov
addr16
fwait
mov
adc
sub
sbb
pop
outsb
pop
das
mov
mov
clc
ss
in
mov
adc
xchg
adc
inc
dec
pop
sub
ret
pop
xor
cmp
out
push
imul
xor
stc
std
call
add
pop
xchg
lahf
fists
and
daa
mov
out
enter
push
enter
nop
cwtl
sbb
adc
push
cmp
and
adc
daa
out
push
les
sbb
dec
nop
inc
aaa
jl
pop
xorl
aaa
sub
mov
mov
sysexit
xchg
adc
bound
repz
pop
xor
enter
cmp
ret
pusha
sti
ss
and
mov
push
test
repnz
stc
mov
call
mov
cmp
dec
inc
test
ret
push
rorl
fcoml
push
iret
push
ljmp
and
adc
jno
push
mov
push
pop
fnstsw
or
push
dec
and
into
dec
addr16
jbe
push
push
sub
jb
in
pop
loopne
into
and
pop
pop
jnp
rorb
test
push
pop
out
xchg
call
cmp
lods
mov
mov
js
jne
and
fstpl
xchg
lret
xlat
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
jmp
gs
sub
dec
test
std
adc
aaa
cli
adc
data16
push
test
pushf
xchg
cs
jp
add
mov
xor
shlb
aad
enter
je
imul
adc
fmuls
inc
ss
pop
decb
and
mov
lea
lods
xlat
lea
sub
pop
imul
imulb
fisubrl
cwtl
dec
mov
jl
inc
sbb
add
lds
or
cwtl
fistl
jg
and
lea
push
xor
ja
sti
adc
stc
jne
or
lods
aad
inc
mov
loopne
fld
in
in
imul
adc
aaa
hlt
mov
dec
pop
adc
adc
mov
lahf
xlat
sub
rcrb
dec
adc
dec
cli
push
bound
push
iret
adc
into
push
in
addr16
jns
pop
je
mov
push
or
sub
pop
inc
adc
mov
sbb
clc
mov
cmp
mov
mov
sbb
xchg
sbb
xchg
rcll
cmp
xchg
aaa
ss
adc
inc
jecxz
lods
xchg
mov
jp
dec
ljmp
mov
mov
pop
movsb
pop
and
pop
jp
mov
lods
push
add
jecxz
fiadds
xor
cmp
and
xor
or
sub
lret
loop
xchg
cwtl
fs
movsb
cmpsb
aas
aad
clc
cmc
lret
xor
mov
mov
and
pop
repnz
adcb
cltd
push
cmc
add
cmp
fidivrl
clc
jmp
push
fwait
pushf
jmp
mov
cmp
mov
repnz
and
stc
push
out
mov
movl
popf
mov
push
mov
je
push
or
in
aam
cmpsl
cld
shrb
jbe
sbb
push
push
mov
test
adc
mov
cs
inc
call
cmpsb
loop
inc
lock
rolb
jno
imul
loop
test
imul
adc
mov
test
cmpsl
sub
jg
xor
jae
scas
add
or
mov
xchg
and
clc
movsb
iret
jecxz
mov
cmc
and
jge
testl
jne
movsb
mov
xor
cmpsb
dec
add
cmp
fnsave
lock
pushf
fldt
cli
jg
and
sbb
pop
repnz
shr
or
push
or
mov
mov
dec
sub
push
xchg
push
cmc
int3
rcrb
push
adc
sub
mov
jp
test
insb
scas
jnp
lods
out
cmp
shll
jge
out
adc
add
iret
sbb
outsl
mov
in
cmp
ret
cli
inc
sub
xor
xor
dec
cs
pop
cmp
bound
loop
into
xchg
ds
mov
cmp
js
mov
lret
jns
out
and
movsl
ja
and
cmpb
add
insl
out
test
mov
xorl
fnop
jb
xor
inc
inc
mov
push
mov
push
fsubl
aaa
leave
sub
push
hlt
ret
fs
xor
fisttps
sbb
into
adc
push
fldz
sbb
ret
xor
sbb
pop
pusha
mov
xorl
dec
cmpsb
shll
mov
stos
fwait
sub
push
aaa
push
fwait
dec
jp
es
sub
ljmp
dec
sets
jle
mov
inc
repnz
in
out
sub
and
or
push
jecxz
adc
loopne
gs
into
mov
sub
rorb
test
mov
xchg
and
pop
inc
jbe
bound
xlat
xor
inc
aad
fisttpl
mov
loope
movb
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
jmp
xchg
push
je
xor
mov
repnz
and
jnp
add
adc
cli
adc
mov
mov
or
popa
rcll
push
or
xor
lods
data16
int
clc
in
push
fildl
scas
movsl
dec
cmp
adc
mov
mov
pop
scas
flds
mov
movsb
mov
pushf
add
pusha
xchg
aam
stc
mov
loopne
adc
ret
int3
dec
test
and
dec
adc
sarb
xor
cmpsl
ret
orb
jns
out
shlb
inc
and
inc
fs
stos
fldcw
dec
jae
jbe
ss
jae
mov
push
fsubs
mov
pop
std
mov
pop
and
daa
repz
int3
jl
pop
push
cs
mov
or
outsl
jmp
aam
loope
mov
js
mov
lods
sarb
jb
insl
in
scas
cmp
jns
jle
out
dec
sbb
loope
or
cmp
push
push
add
das
or
mov
pushf
jb
push
cli
xor
popa
dec
cwtl
mov
push
mov
lock
mov
popa
push
inc
xor
test
sub
xor
stc
stos
jbe
pop
bound
int
pop
lahf
inc
mov
adc
pop
hlt
out
cmc
mov
or
mov
mov
sub
pop
loopne
pop
imul
not
xor
daa
fwait
xor
push
out
fdivrp
inc
iret
outsl
xor
mov
lahf
into
jns
fidivrs
stos
orl
inc
addb
sbb
add
les
shll
lcall
je
sbb
gs
jge
xor
mov
lahf
inc
pop
or
into
aad
mov
bnd
dec
pop
xchg
xor
movsl
orb
mov
jo
arpl
and
mov
mov
repnz
jecxz
push
stos
lcall
or
or
pop
pop
ljmp
jb
shll
adc
in
adc
ljmp
or
push
pop
mov
and
inc
cmpsb
and
lahf
add
in
sub
pop
movsb
xorb
xor
pop
scas
mov
xor
scas
daa
sbb
jge
mov
movsb
mov
fsubr
mov
jno
xchg
inc
shrb
lods
rorb
out
push
mov
xor
jo
lret
mov
out
mov
rcr
sahf
add
jl
jle
clc
out
lcall
fstpt
dec
mov
xchg
dec
aad
adc
adc
xchg
mov
jg
sub
adc
mov
cwtl
jbe
inc
mov
rol
xchg
outsl
or
lock
in
mov
imull
stc
ja
shll
mov
aam
add
lea
fnsave
hlt
fimull
jo
add
push
jae
mov
xchg
out
mov
mov
mov
adc
aaa
lahf
mov
adc
out
addl
or
aad
cs
adc
sub
in
mov
and
lds
leave
icebp
out
and
enter
and
push
adc
lret
sti
mov
test
popw
fwait
mov
pop
mov
int3
cli
dec
test
xchg
mov
mov
outsl
fdiv
jbe
loop
mov
push
push
xor
sub
jl
arpl
imul
jbe
add
mov
adc
push
adc
out
dec
xor
leave
loope
jne
and
and
iret
inc
cmp
cmpb
and
repz
add
imul
js
jns
pop
sbb
mov
sub
rcll
push
xchg
xor
pop
shrl
or
cmp
push
mov
xor
test
mov
fstps
icebp
call
out
mov
iret
icebp
cmpsl
dec
mov
mov
xchg
adc
sub
rcr
pop
arpl
fsubrl
in
xor
jg
cmp
cmp
jg
and
gs
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
jmp
and
mov
nop
push
fs
adc
adc
aaa
cli
adc
ljmp
lock
mov
scas
add
into
mov
mov
xor
sub
dec
inc
add
xchg
pop
push
idivb
lock
add
hlt
repnz
ret
cmp
mov
icebp
fnstenv
pop
xchg
cmp
jp
cmp
mov
insb
pushf
movsb
je
jno
pop
inc
lds
dec
lds
add
jne
loopne
or
aas
pop
js
dec
aaa
sar
sahf
xor
enter
xor
mov
ljmp
out
push
mov
xor
pop
push
outsb
mov
stos
mov
inc
pop
jg
lahf
cmp
ds
xchg
xchg
sub
sub
scas
mov
ss
pop
or
add
orb
mov
xor
incb
ds
out
dec
loop
sbb
push
xchg
mov
arpl
mov
aaa
sarb
sub
push
cmp
sub
subl
sbb
sub
int3
divl
jne
push
out
andb
mov
mov
rorl
out
imul
ficomps
ds
jne
sbb
jg
add
in
fists
arpl
fadd
sbb
mov
rcll
xchg
add
aad
sbb
mov
inc
pop
push
xchg
popf
test
in
iret
adc
imul
pop
icebp
or
push
fwait
aad
xchg
mov
cmp
addr16
mov
dec
mov
mov
jo
mov
mov
in
shlb
fwait
mov
shr
or
or
loopne
arpl
iret
gs
push
mov
cmp
or
push
mov
pop
das
mov
cmp
in
insb
push
outsl
and
fistl
mov
jae
add
imul
add
jae
mov
stc
and
pop
mov
xchg
std
hlt
lock
notb
and
repz
lret
jmp
push
dec
xor
push
jecxz
aam
jg
cltd
xor
pop
pop
fcmovbe
sbb
ljmp
add
xchg
out
fnsaves
fisubl
dec
gs
movsl
pop
pop
pop
inc
xchg
addr16
clc
sbb
mov
inc
mov
add
mov
pop
xchg
outsb
aam
add
xor
adc
mov
idivl
adc
inc
pop
push
not
push
mov
pop
and
inc
in
jge
stos
inc
adc
rclb
out
pop
adc
ret
cs
fldcw
add
cmovo
mov
in
push
inc
outsb
mov
push
inc
sub
xor
sbb
out
cmpb
mov
dec
sbb
or
push
js
xchg
movsl
pop
inc
in
push
std
and
pop
jns
rcll
in
divb
push
stos
push
iret
mov
notb
jg
out
mov
lods
lahf
mov
dec
scas
mov
jecxz
pushf
and
mov
jge
addb
lret
mov
sahf
inc
mov
notl
jle
xchg
and
or
inc
mov
js
in
mov
sbb
push
adc
push
sbb
pop
pushf
sub
in
sahf
xchg
cld
and
pusha
mov
jecxz
cmp
sbb
jmp
mov
nop
enter
aaa
lret
cmp
cmp
pop
dec
xchg
mov
mov
addr16
ud0
pop
insb
mov
call
out
sbb
mov
cltd
mov
mov
enter
jae
test
xchg
cmp
inc
fcom
sub
jno
add
push
bnd
loope
adc
push
jp
cmp
pushf
and
repnz
sub
adc
xchg
jns
stc
in
inc
cmp
push
in
loopne
pop
int3
shl
mov
filds
daa
shrb
or
dec
insb
cmp
inc
ret
push
cld
mov
mov
mov
mov
shrd
mov
jmp
push
push
push
adc
aam
push
xchg
push
in
repz
aaa
cli
adc
jge
push
cli
inc
call
addb
and
mov
call
cwtl
mov
aas
xlat
sbb
pop
mov
mov
xlat
xchg
push
mov
test
mov
shll
mov
or
pusha
pop
addl
je
pop
and
test
cli
aam
lcall
push
lods
in
xchg
xchg
pop
mov
lret
cmp
stos
jg
mov
in
scas
sbb
and
test
bound
inc
adc
pop
cld
pop
pop
push
mov
nop
mov
push
outsb
pop
and
stos
int
adc
mov
xchg
mov
add
scas
fdivrl
call
xchg
jne
adc
out
test
out
cmp
pop
loop
jl
in
mov
test
popf
aaa
push
xchg
xlat
add
fisubl
imul
into
fldl
iret
subl
or
std
mov
mov
jno
lahf
pop
lcall
mov
ja
dec
ljmp
call
popf
push
popf
aam
push
adc
or
cwtl
test
fidivs
insl
ljmp
mov
gs
clc
leave
mov
cmp
sbb
test
xor
or
pop
std
stos
loop
and
sub
xchg
fwait
clc
add
sub
ss
mov
jns
mov
fnstcw
arpl
xchg
shll
mov
mov
mov
ds
xor
xchg
es
unpcklps
mov
sbbb
rcrb
add
imul
add
inc
xor
lods
daa
ds
cmp
mov
mov
imul
scas
inc
adc
outsb
sbb
rcll
push
stc
cmp
xor
add
xchg
add
xchg
into
and
add
pop
jns
orb
pushf
mov
sub
faddp
dec
das
inc
arpl
sti
or
jge
lds
jb
jae
enter
cli
inc
mov
js
xchg
das
fcoml
xchg
jmp
aam
mov
pop
inc
xlat
cltd
sbb
pop
xchg
aas
mov
push
hlt
cltd
hlt
xor
xchg
les
lock
arpl
daa
jmp
in
inc
cmp
mov
inc
mov
mov
in
and
gs
andb
lea
add
icebp
jae
xchg
cmp
pop
sti
scas
jnp
add
mov
loope
in
mov
push
xor
jbe
icebp
ljmp
inc
xchg
testl
dec
adc
adc
jns
pop
mov
lods
xchg
or
pop
in
sbbb
jae
mov
call
pop
incl
call
mov
mov
mov
pop
mov
or
ss
xchg
gs
loop
inc
popa
hlt
sub
cmc
adc
mov
xchg
adc
push
and
inc
fwait
mov
or
xor
scas
xchg
jne
sub
dec
lock
jnp
jge
adc
inc
add
out
lods
pop
and
jecxz
inc
orl
fadds
das
dec
mov
push
mov
xchg
xchg
xlat
cwtl
jns
lds
ja
mov
repz
lahf
ds
enter
inc
cmp
push
sub
mov
jb
mov
pop
stos
sbb
jns
lahf
add
mov
movsb
daa
jb
aam
add
pop
pushw
ja
imul
pop
sahf
lea
cmp
sub
mov
push
jg
pop
jg
cmp
mov
outsb
fists
lea
icebp
aaa
gs
aam
xchg
pop
aas
mov
xor
stc
sbb
push
testl
fildll
xchg
out
pusha
in
push
rcr
std
sub
mulb
in
gs
stos
xor
inc
pop
in
mov
ret
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
jmp
lcall
push
repz
shr
jnp
loopne
adc
cli
adc
pand
xchg
pop
lods
sub
lahf
stos
or
cmpsb
pop
jg
adc
call
or
cmp
pop
fs
add
adc
popf
loopne
mov
xor
int3
lock
int
les
jo
jno
xor
cmpb
cmpb
testb
mov
adc
clc
mov
pop
icebp
xorl
mov
push
movsb
call
xor
in
add
out
adc
das
push
mov
pinsrw
mov
sub
out
test
lods
icebp
nop
sub
test
insb
sub
call
xchg
jmp
ret
cmp
cs
adc
popa
jne
insl
sub
xor
or
icebp
dec
sbb
pop
mov
rcr
adc
repnz
pop
jle
xlat
in
sub
sbb
mov
cmp
push
mov
flds
pushf
loope
pop
pusha
pop
pop
lea
add
dec
mov
adc
mov
jnp
in
outsl
ds
cwtl
or
mov
movsb
mov
leave
sahf
pop
call
outsb
push
cmp
pop
lds
sub
pop
xchg
sbbl
mov
jge
xchg
stos
cli
push
lret
pushf
hlt
in
lds
sbb
pop
pop
test
pushl
aam
xchg
cld
jl
dec
insl
jp
loopne
sbb
sub
jge
mov
das
pop
mov
add
sub
inc
fldt
mov
aam
fsubrl
les
push
mov
mov
push
dec
insl
ret
fnstenv
mov
mov
bound
sahf
mov
in
xlat
loopne
mov
js
push
imul
rclb
cmp
mov
mov
popf
push
mov
arpl
xor
adc
adc
cmp
add
imul
inc
push
imul
shlb
mov
into
idiv
inc
les
leave
sub
adc
dec
pop
pop
mov
sub
into
jns
lret
add
cmp
fisubrs
clc
xchg
ljmp
xor
orb
add
stos
cmp
push
mov
leave
push
incl
loop
push
int3
scas
push
shlb
insl
out
aam
fcmove
shl
mov
test
jg
imul
sar
dec
frstor
jbe
lods
sub
test
jmp
add
je
out
push
dec
dec
sti
mov
sahf
lds
jp
inc
mov
mov
mov
stos
mov
cmpsl
negl
cmp
or
xor
xchg
fcmovu
pop
xor
mov
and
fucom
jl
dec
imull
jge
xchg
add
mov
iret
inc
ja
xor
sbb
inc
imul
and
ret
test
and
icebp
stos
mov
sbb
push
dec
sub
cltd
in
push
ficomps
in
ret
subl
push
push
divb
movsb
and
mov
in
inc
aaa
push
test
ss
and
daa
scas
imul
pusha
adc
inc
xor
pop
bound
pop
cli
inc
cmp
sbb
sbb
sub
push
fists
decb
sub
cmpsl
mov
xchg
mov
ljmp
mov
jb
mov
outsl
push
cmp
movsl
and
jle
cmpl
out
sub
shrl
fbld
jp
rclb
cs
scas
mov
xchg
enter
sbb
pusha
decb
insb
sahf
xor
popa
mov
sub
xor
jnp
lret
sti
jp
or
jnp
sbb
and
push
in
adc
pop
mov
mov
js
lahf
iret
fimull
push
adc
jmp
fists
inc
mov
inc
xchg
xor
cmp
inc
adc
xor
adc
adc
adc
xor
sub
pop
test
out
fildll
add
fwait
xlat
dec
ffree
mov
out
in
lahf
lock
push
incl
mov
mov
sbb
cmp
shlb
repnz
add
shlb
rorb
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
jmp
mov
cmpsb
adc
cli
addr16
lock
adc
cli
adc
lds
aad
fs
add
mov
mov
xchg
jmp
xchg
jecxz
inc
cmp
mov
shrl
ss
lret
dec
fnstenv
or
mov
int3
jno
inc
xor
out
fsubrl
in
dec
daa
xor
aas
aam
xor
xchg
pop
into
ja
mov
pop
or
xchg
jmp
push
in
js
push
mov
xchg
movl
scas
and
daa
jmp
or
daa
hlt
test
push
add
push
cmp
push
inc
fiadds
icebp
fisubl
cmpsl
lock
jo
mov
pop
imul
adc
int
ljmp
dec
stos
dec
pop
or
mov
pop
sbb
sti
imull
add
and
cmp
sub
mov
cs
mov
xchg
fdivrs
sbb
xchg
cmp
in
pop
rcrb
mov
jo
bound
inc
or
xor
mov
jne
jns
pop
inc
and
call
movsb
jp
sub
pop
movsl
xor
mov
push
xorb
inc
or
fistl
test
or
mov
dec
sbbb
leave
fstpl
rcrb
pusha
adc
fsubrs
cvtps2pd
es
mov
mov
popf
push
push
and
lea
fdivrl
in
rorl
rclb
dec
ja
clc
adc
out
add
aaa
push
add
jle
test
test
call
popa
imul
push
add
cltd
jmp
xor
aas
mov
sahf
mov
clc
xor
xchg
mov
dec
lods
add
fidivl
je
stc
dec
sbb
push
lds
les
aad
fs
scas
push
sub
aam
rolb
jmp
mov
add
pop
ds
sbb
fwait
cld
ret
xchg
add
loop
daa
xchg
ja
sbb
and
pushf
and
add
dec
inc
shll
outsl
dec
sbb
in
and
or
ret
das
lods
aas
shr
les
scas
cmc
bound
push
std
imul
mov
in
mov
popf
or
or
or
xchg
out
cld
mov
jns
add
mov
std
ja
jns
in
xchg
arpl
push
add
fisubs
xchg
out
data16
sub
imul
int
mov
sub
push
ljmp
push
mov
int
es
sub
data16
adc
adc
pop
adc
xchg
lods
mov
sbb
xlat
push
call
xor
sbb
fwait
mov
inc
iret
nop
jge
sub
orl
loope
outsb
xchg
lahf
push
and
sbb
add
xchg
push
mov
pop
mov
sub
leave
and
pop
push
pop
mov
or
out
out
outsb
and
add
rorb
xchg
jno
pop
cltd
add
fs
xchg
jecxz
pop
fcmovnbe
jmp
xorb
lods
out
popl
mov
ja
xchg
subb
xchg
aaa
mov
pusha
inc
add
or
xor
les
sahf
ja
fdivl
adc
lods
pop
hlt
sub
push
and
sbb
subl
cmpsb
pop
mov
out
cmp
ds
cmp
mov
inc
repz
cmp
cmpsl
jg
int
xor
cmp
shrl
xor
pop
pop
inc
lret
shl
push
test
aad
bound
fcmovbe
pushw
stos
cmp
arpl
negb
shrb
push
push
aam
popf
sti
push
repnz
dec
adc
jmp
lock
or
data16
es
cltd
push
pop
add
mov
stc
jnp
add
daa
dec
lret
or
sub
xchg
and
xor
mov
add
xchg
mov
mov
xchg
add
or
push
fldl
push
and
push
icebp
xor
push
jl
data16
fstps
sub
std
fldcw
nop
test
jle
and
xor
push
xchg
popa
cli
push
mov
daa
sahf
sbb
gs
jmp
lea
adc
leave
xor
ja
add
adc
aaa
cli
adc
jecxz
aaa
or
mov
jbe
sahf
rorl
loop
fcom
dec
das
pop
pop
aad
stos
add
push
inc
cmovg
icebp
dec
cltd
je
les
add
jmp
jl
xor
cmpsl
jle
pop
jle
andb
mov
push
fwait
std
mov
arpl
mov
push
aam
xchg
xchg
data16
mov
repz
pop
gs
jg
cld
pushf
pop
inc
loop
mov
andb
lea
aam
hlt
sbb
cmp
adc
mov
xchg
mov
cmc
mov
add
sbb
ret
mov
push
adc
icebp
call
push
jb
push
js
xchg
icebp
mov
je
in
xchg
mov
gs
inc
jmp
cli
pushf
and
cs
fcoml
jb
jbe
test
jl
and
xor
mov
testb
pop
mov
popf
sub
jns
imul
ret
mov
cmp
in
mov
inc
dec
sbb
outsl
lock
les
scas
leave
inc
lods
subl
mov
push
dec
pop
shlb
sbb
jne
cmp
test
or
jns
xor
or
mov
jge
lcall
inc
ss
mul
movsl
mov
sub
mov
and
stos
dec
outsl
fisubs
jbe
movsb
inc
push
fwait
pushf
outsb
xor
pop
pop
mov
or
test
push
int
movsl
and
mov
outsl
dec
les
pand
imul
push
mov
test
sahf
adc
aaa
add
mov
inc
or
sti
ret
sbb
out
in
sub
pop
pushf
sti
repnz
stc
ljmp
adc
cli
xchg
inc
mov
xchg
sbb
dec
cs
jl
scas
lret
dec
push
loop
sbb
and
xchg
in
test
push
and
mov
xor
in
mov
xor
push
adc
jle
lcall
leave
xor
test
push
mov
xor
hlt
filds
fadds
xor
sahf
pusha
or
int3
daa
dec
and
cli
or
and
inc
das
jnp
xchg
iret
pop
push
mov
and
sbb
dec
imul
fidivs
sbb
into
ds
dec
sub
push
jmp
cltd
out
add
cmpsl
ret
cmc
lods
iret
jecxz
sub
repz
adc
jmp
mov
ret
pop
fsubrs
mov
mov
push
stos
dec
stc
sar
sub
push
or
lock
movsl
aas
imul
fwait
jno
lods
xor
into
fcmove
xchg
push
dec
sub
push
cli
pop
pop
mov
push
das
add
and
lods
jno
pop
ss
mov
cwtl
movb
mov
clc
cmpsl
fwait
in
add
insb
imulb
add
pop
or
arpl
or
enter
test
and
cmp
adc
add
mov
cmp
inc
mov
mov
xchg
sbb
ret
inc
sub
xchg
push
jp
or
and
sti
xor
mov
gs
ljmp
xchg
out
sbb
xchg
clc
les
jmp
mov
fisubrs
adc
dec
xlat
mov
cmp
lcall
fists
push
flds
repnz
mov
push
jo
rolb
test
push
dec
adc
rclb
stos
mov
stos
nop
push
stc
jmp
jle
or
adc
inc
xchg
and
xchg
call
shll
rorb
and
mov
dec
in
out
mov
jae
mov
mov
in
pop
lock
push
xchg
mov
enter
insl
fisttpl
orb
jno
cltd
xchg
outsl
pusha
mov
dec
and
repnz
inc
ljmp
mov
lock
jge
sti
dec
jns
lods
enter
add
ljmp
out
xor
mov
mov
mov
jmp
ja
add
inc
push
inc
aaa
mov
daa
mov
adc
cli
adc
xor
mov
sub
xor
push
sub
in
or
fxch
repnz
add
pushf
or
xchg
loop
enter
fstps
dec
and
inc
sbb
icebp
xor
shll
aam
push
out
in
jp
mov
pop
xchg
insl
dec
push
xor
xor
xlat
sbb
gs
rcll
in
add
dec
dec
and
and
xchg
mov
nop
stos
stos
jle
lahf
orb
outsb
pushf
or
mov
push
adc
adc
faddp
pop
sarl
loopne
lret
repz
sub
in
aaa
inc
call
test
out
mov
mov
mov
push
adc
js
inc
add
xlat
xor
add
xor
sbbl
movsb
pop
and
cltd
jecxz
dec
jnp
enter
popf
shrl
clc
scas
sbb
or
or
cltd
mov
fidivl
sti
or
loop
insl
scas
mov
ljmp
sub
test
mov
jmp
test
jge
xchg
or
addr16
icebp
jle
and
inc
dec
lods
push
mov
stos
iret
imul
sbb
mov
adc
sar
pop
cmp
imul
pushf
and
or
sbb
sbb
aam
lds
mov
or
clc
cld
add
icebp
andl
dec
out
icebp
jle
jmp
dec
xchg
jg
idivb
repnz
or
movsb
jecxz
fdivrs
fisubrl
bound
and
mov
mov
ret
cltd
jp
and
add
pop
mov
iret
add
dec
adc
and
and
cltd
lea
pop
mov
pop
or
loopne
fs
shr
mov
testl
lock
sub
mov
mov
or
out
adc
popf
jl
out
cli
aam
dec
inc
pop
add
sbbl
inc
mov
mov
inc
mov
dec
cmpsl
dec
int
jle
or
or
orl
mov
adc
add
negb
jno
movsb
in
movsl
addl
pop
mov
push
push
mov
daa
pop
sub
mov
aaa
repnz
pop
sub
push
or
popl
push
cmp
lahf
arpl
and
dec
mov
xlat
adc
jp
movl
push
addr16
mov
enter
scas
dec
jp
push
rol
out
sub
mov
popa
out
lds
in
cmc
lret
jb
and
test
inc
fnstenv
sub
jecxz
test
sarb
inc
arpl
out
nop
sbb
je
jnp
jmp
pop
adc
or
cmpsl
and
std
mov
lcall
ja
mov
in
mov
cmp
orb
xor
mov
xchg
mov
aas
mov
sahf
popf
filds
stos
shrl
adc
push
stc
cmp
jb
loop
push
popf
cmpsb
pop
setno
fstpt
sbb
push
add
cltd
push
or
call
insl
bound
ljmp
jbe
sbb
xor
shl
aad
sub
cmpsb
adc
dec
mov
fprem
stos
hlt
dec
les
fs
inc
ds
mov
xor
mov
repz
inc
push
mov
xchg
pop
rclb
push
aam
shlb
fs
xor
daa
pop
in
mov
mov
mov
stos
in
adc
adc
movsb
sbb
jns
push
dec
je
bound
sbb
lds
xchg
mov
and
jge
or
inc
decb
cmpl
cmp
mov
jbe
push
pop
xchg
and
xor
xchg
and
das
cmp
adc
xlat
mov
mov
push
or
mov
mov
in
mov
outsl
jl
jl
adc
cmp
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
jmp
pop
test
push
adc
iret
cltd
lds
mov
adc
loopne
js
sbb
out
je
sub
xchg
mov
stos
pop
negb
xor
dec
lahf
cmpsb
ds
mov
sbb
cmovg
cltd
mov
cltd
sub
lea
jnp
lret
out
xchg
int3
xor
mov
sbb
rolb
xor
and
es
xor
std
push
or
jmp
shll
out
xchg
sub
loop
mull
fists
sub
xor
add
arpl
jmp
cld
data16
xor
mov
mov
les
xchg
push
and
cld
mov
repz
lcall
insb
jo
add
jp
fsubrs
adc
and
ljmp
dec
cmp
xlat
pop
xchg
pop
gs
rorl
or
daa
push
cmova
pop
out
into
lock
bound
push
jge
insb
xchg
push
dec
aad
stos
jbe
repnz
jge
sarl
inc
test
lcall
ret
cli
and
jne
sbb
mov
xchg
and
rclb
cld
aas
dec
clc
pushf
or
shlb
adc
scas
push
adc
dec
test
aam
dec
dec
movsb
and
loopne
mov
add
push
addb
int
cmp
pusha
jb
pop
push
js
push
ficoms
out
mov
mov
loope
add
cmp
ja
mov
pop
decb
andl
add
sbb
and
add
sahf
pop
aam
sbb
inc
jg
push
push
cmp
hlt
iret
add
orb
mov
xchg
mov
iret
cmp
mov
icebp
scas
mov
outsl
adc
lret
ss
repnz
or
in
scas
push
ret
jecxz
mov
mov
sub
das
xchg
xor
xchg
gs
jo
push
push
sub
add
lcall
adc
mov
jns
fs
inc
or
and
repnz
xchg
sbb
repnz
and
push
les
pushl
add
popa
jo
test
lret
pop
push
divb
imul
test
lcall
xor
xor
push
movsl
scas
mov
add
jle
cmc
cmp
cmp
aas
mov
imul
push
lret
lret
xchg
dec
notb
int3
add
out
std
stc
fdivr
jnp
xchg
outsb
and
cli
pusha
and
dec
sbb
and
mov
and
push
ret
addr16
out
mov
and
pop
mov
cmpsl
ret
in
sub
xchg
dec
push
lods
inc
or
fimuls
pop
lcall
and
mov
jb
cmp
icebp
aad
xor
loopne
or
rorb
int
mov
mov
addb
ja
dec
call
sbb
orl
rclb
dec
mov
push
pop
scas
xlat
mov
and
cltd
pop
mov
sbb
pop
test
int
adc
dec
mov
dec
add
and
adc
mov
sub
enter
jmp
cmpl
pop
jl
into
out
inc
push
movsl
das
cmp
addr16
adc
sub
cld
mov
xchg
jmp
add
insl
mov
xchg
push
inc
and
sub
adc
mov
and
fs
pop
aad
sahf
ficoms
jmp
and
fmuls
addr16
icebp
inc
pop
mov
sub
testb
xor
adc
shll
jl
mov
push
and
sbb
lret
sub
stc
data16
add
or
jge
mov
add
cwtl
inc
std
sarl
fbstp
jmp
lods
cld
xchg
jmp
xchg
loope
test
ret
scas
lods
adc
aaa
cli
adc
insb
aad
inc
cwtl
nop
xor
out
aaa
mov
lret
and
jae
lds
xchg
lods
mov
cmp
mov
push
fnsave
daa
pop
ficoms
setl
pop
lret
js
repnz
rorb
jae
push
mov
dec
pop
gs
pop
xchg
inc
adc
adc
adc
dec
jg
popf
sbbb
jmp
rol
cmpsl
lret
movntps
cwtl
and
inc
pop
push
rolb
cltd
and
adc
pushf
bound
rorb
pop
fidivrl
cs
mov
mov
lcall
movsl
rdtsc
cli
xchg
jns
mov
mov
popf
push
add
push
pushf
jp
pushl
and
and
pop
insl
mov
dec
push
dec
xor
mov
inc
test
aas
inc
sbb
inc
rclb
ret
jns
daa
cmp
ja
mov
or
and
imul
push
inc
adc
daa
and
sbb
fwait
cmpsb
pop
mov
add
xor
pop
out
dec
jno
lcall
imul
lds
push
das
or
inc
cmp
cmp
lea
push
pop
int3
dec
hlt
cmpxchg
push
xorl
fcmovne
mov
scas
popa
add
sarb
jmp
jne
dec
mov
xchg
adc
xchg
inc
and
ljmp
cs
movsl
lea
dec
adc
jmp
jns
int3
test
mov
mov
push
repnz
fstps
add
outsl
xchg
pop
pop
mov
out
ret
popa
mov
imul
lods
inc
add
cltd
push
mov
scas
loop
loop
outsl
std
outsb
cld
scas
mov
xchg
sbb
pop
loopne
dec
test
jge
test
and
cli
xchg
pop
or
outsl
lcall
cltd
mov
push
dec
dec
test
sbb
sbb
popf
mov
imul
fdivrs
test
mov
les
aam
sbb
ret
add
add
out
sbb
mov
into
pop
add
dec
or
filds
jmp
jne
cmp
or
jl
push
adc
mov
mov
leave
xor
jne
lods
or
dec
pminsw
fimull
jg
sbb
mov
xor
sbb
int3
dec
or
gs
in
movsl
add
mov
and
add
or
cmp
adc
push
sbb
cli
fpatan
add
mov
mov
dec
and
out
jbe
xor
adc
gs
iret
pop
shrb
nop
aad
lods
mov
sub
and
daa
je
test
xchg
push
int
sti
negb
lock
pop
mov
fldl
cli
jb
lds
iret
enter
inc
mov
jns
mov
add
inc
pop
or
jo
push
mov
test
lcall
cmpsb
mov
fs
mov
add
in
adc
insb
sahf
push
xor
push
pop
stc
lods
jo
fmuls
mov
cmp
fldt
mov
ja
in
dec
rclb
and
push
addb
popa
xor
xor
xchg
cmpsb
jp
lods
adc
and
out
cmp
jne
or
mov
filds
or
inc
pop
mov
loop
std
or
shrb
nop
sbb
jno
stc
stos
outsb
movsb
shrb
or
dec
mov
push
cmc
shll
pop
and
int3
fwait
daa
jno
sub
scas
dec
lcall
mov
sub
cmp
dec
rclb
das
sbb
mov
pop
dec
adc
dec
xchg
pop
orl
jb
sbb
out
inc
or
pushf
nop
dec
sahf
lods
sbb
mov
cmp
pushf
rcrb
inc
xchg
mov
loopne
pop
imulb
mov
fisubl
push
stos
lods
and
cmp
fsubrs
cmp
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
jmp
addl
dec
push
or
cmp
xchg
adc
aaa
cli
adc
mov
cld
jge
cld
ret
sub
xchg
pusha
xor
cmp
inc
or
and
movsl
repz
dec
or
mov
daa
frstor
addr16
aaa
mov
shrb
outsb
lods
push
rcrb
sbb
add
pop
mov
pop
nop
rolb
jne
popa
and
push
xchg
into
or
mov
ficoml
jle
add
lret
lock
and
bound
pusha
xchg
cmp
les
in
jne
movsb
in
jb
outsb
or
mov
inc
iret
push
loopne
mov
stc
outsb
and
pop
dec
push
push
sub
mov
gs
or
push
cwtl
pop
rolb
shrl
cs
in
pop
xor
add
add
es
cmc
aad
adc
arpl
adc
pop
mov
rolb
xor
stc
out
rep
push
or
aas
inc
xchg
cmp
repz
mov
cld
stc
cmp
sarl
jo
rol
movsl
ffree
jmp
pop
mov
nop
insb
pop
push
jne
push
adc
pop
in
inc
adc
dec
pop
xlat
jle
pop
push
test
stc
dec
pop
es
push
out
inc
mov
into
push
cld
sbbl
jmp
shrl
xor
lea
fistpll
mov
push
insb
mov
mov
lods
test
dec
adc
sbb
lcall
xor
xchg
popa
das
or
ret
ja
dec
xor
loop
sarb
decb
insl
shlb
lods
mov
jns
sti
stos
sti
sub
jmp
xor
dec
subl
pop
aad
lret
push
out
imul
or
movsl
xchg
xor
ds
sbb
cmp
and
and
add
add
jmp
adc
test
sub
test
mov
cmp
ret
shlb
jnp
mov
dec
push
pop
stos
fcmovne
xor
lret
sar
mov
sub
add
pop
dec
jo
mov
add
mov
sbb
shlb
rcrl
lret
mov
bswap
lret
sahf
adc
lea
inc
imul
sub
inc
pop
mov
rorb
xchg
jo
add
inc
scas
lods
add
ljmp
sbb
aaa
inc
cwtl
pop
je
and
or
sub
out
mov
rcr
cld
pop
sbb
push
or
jp
sub
xchg
sub
shl
add
inc
jg
mov
cwtl
jbe
lahf
mov
adc
sbb
mov
std
sbb
push
dec
mov
lret
out
lea
test
xchg
movsb
push
mov
scas
dec
int3
stos
leave
adc
xchg
insl
or
andl
adc
dec
sub
fisttps
fwait
into
lods
aad
jp
xchg
xlat
pop
cmc
ss
adc
idivl
mov
fcompl
cmp
shrl
out
dec
mov
cmp
in
mov
cwtl
shrb
data16
arpl
loop
dec
pop
xchg
pop
sbb
scas
jo
lret
pop
cmp
mov
xchg
stos
or
mov
repnz
pusha
scas
int
ljmp
xchg
insb
ja
xchg
orb
divb
cli
jmp
jns
inc
inc
or
jbe
or
pop
mov
sbb
jmp
pop
lahf
push
out
add
lahf
add
cwtl
fmull
inc
stos
stos
xor
mov
inc
inc
mov
arpl
lahf
aad
dec
insl
lahf
mov
lahf
shlb
sbb
int3
cli
mov
and
lret
lea
fldl
mov
and
aam
add
int
hlt
and
mov
add
stc
inc
out
insb
xchg
xlat
add
add
pop
xchg
or
in
int3
or
adc
cltd
retw
adc
inc
enter
mov
inc
or
enter
add
or
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
jmp
pop
fisttpll
dec
es
fisttps
popf
lds
pushf
adc
aaa
cli
adc
fcomp
ja
push
xor
pop
call
pop
and
mov
lods
push
ror
pop
mov
je
jl
cmp
mov
aam
xchg
mov
mulb
dec
loopne
mov
cmc
fwait
sbb
adc
xchg
cli
scas
jmp
push
int3
out
sub
sbb
mov
subl
gs
adc
push
imul
push
mov
push
in
daa
fwait
dec
rol
inc
pop
xchg
clc
mov
mov
or
inc
aam
clc
adcl
int3
jmp
cmpsl
popa
pop
scas
outsb
xor
in
lock
adc
xchg
cmp
cltd
sar
fisubl
mov
mov
out
ret
mov
sti
stos
roll
xchg
sub
in
xor
pop
mov
gs
clc
jb
cmp
lock
adc
push
sub
push
jle
xor
fcoms
mov
loop
push
popa
rcr
out
in
xchg
pop
ja
popa
je
lret
bound
push
jbe
les
and
and
sbb
mov
cltd
push
test
in
pushf
out
cmp
imul
xor
add
lods
mov
sbb
jge
dec
jbe
notl
mov
mov
das
sub
sub
ret
sub
test
or
mov
lahf
pop
fdivrl
mov
cwtl
lret
xor
mov
xorl
scas
ss
push
adc
cli
test
add
add
lock
mov
dec
mov
sbb
int3
frstor
jg
push
mov
inc
fisubl
lods
dec
movsl
stc
push
dec
jecxz
fidivl
fmuls
test
dec
and
jecxz
loope
cmp
leave
and
xchg
cs
mov
xor
imul
dec
cmp
xor
cmc
mov
shl
fidivl
xchg
sbb
jae
pop
outsb
ds
subb
in
dec
mov
jne
int
fs
pop
pop
ja
dec
add
in
imul
xor
xchg
jns
pushw
leave
mov
xchg
and
push
or
dec
lods
push
and
pop
nop
cmp
inc
fidivrs
aaa
shlb
and
xchg
mov
inc
xchg
shr
insl
inc
cmp
sub
fmul
mov
inc
xchg
rolb
mov
xchg
dec
pusha
and
test
and
xchg
rorl
fdivrs
xchg
andb
ds
mov
add
adc
ds
les
fwait
sbb
jbe
rcll
call
lods
jbe
lods
xchg
fldenv
ja
data16
mov
push
adc
push
adc
push
jl
fimuls
or
xor
movsl
inc
push
test
jmp
inc
subl
pop
or
int
das
in
mov
insb
into
jae
int3
cld
adc
push
stos
and
sub
pusha
imul
rorb
fidivs
and
sub
add
dec
or
pop
pop
lret
adc
adc
push
mov
insb
lods
out
les
jnp
xchg
push
lds
pop
sub
push
aam
add
pop
mov
adc
dec
sbb
adc
push
and
inc
sbb
mov
aad
lds
cld
mov
dec
push
mov
push
jmp
enter
aad
push
jmp
adcb
pop
sub
push
imul
fistl
data16
das
call
dec
ljmp
jae
add
incb
fwait
outsb
xlat
xchg
loop
push
test
dec
fists
add
mov
rcrl
ja
stos
push
push
lahf
jp
test
leave
das
das
or
mov
iret
mov
jle
mov
or
fldl
cwtl
cmc
loopne
inc
fiadds
sub
cmp
call
insl
jnp
mulb
push
dec
mov
inc
push
xchg
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
push
test
add
push
adc
jnp
dec
stc
popl
adc
cli
adc
push
jo
or
cmc
add
xchg
mov
ss
cmp
cmc
mov
jno
jno
out
pop
xchg
pop
push
mov
fldcw
push
xor
jb
mov
testl
mov
pop
divb
xchg
sub
mov
inc
imul
rorl
inc
cmc
cmp
sbbl
iret
and
jecxz
pop
fidivrs
in
ret
xchg
pop
lret
fsubr
add
xor
xorl
xor
mov
fs
jbe
add
adc
mov
shrl
sub
out
scas
jne
stos
lcall
ljmp
jp
inc
dec
mov
sbb
adc
push
adc
das
popf
inc
push
sbb
push
mov
mov
or
or
imul
cltd
icebp
das
ja
scas
xor
mov
dec
push
loopne
dec
aaa
loopne
or
subl
xchg
jns
arpl
dec
xor
int
and
hlt
push
mov
cli
adc
movsl
sar
das
xchg
ficoml
cmp
mov
stos
popf
or
xchg
dec
fwait
pushf
mov
pop
xchg
jns
clc
lds
cmp
jns
mov
or
leave
jbe
lods
push
cltd
cmp
xlat
push
test
insl
aaa
adc
jo
dec
scas
mov
aad
mov
xlat
or
push
dec
ja
inc
lods
mov
dec
lds
icebp
mov
xchg
jg
sub
xchg
cs
das
loopne
loop
sub
into
inc
add
shlb
test
push
icebp
inc
mov
mov
mov
push
pop
ret
push
xchg
dec
cmp
and
call
pop
inc
add
pop
in
sbb
mov
xor
jecxz
inc
xor
xor
sbb
xor
dec
into
rcrb
test
aaa
dec
xchg
nop
mull
stc
push
shl
mov
es
lds
das
pop
and
scas
cli
xchg
or
pop
ret
push
xchg
cmp
shlb
push
int
pop
insb
push
std
and
and
movsl
xor
xchg
push
je
js
jae
stc
adc
mov
mov
push
jb
jo
xchg
mov
sbbl
out
jmp
inc
std
inc
mov
mov
jmp
mov
daa
out
aad
addb
cs
and
into
inc
pop
inc
aaa
pop
clc
add
mov
inc
xchg
rcrl
xor
adc
push
outsb
daa
dec
cltd
inc
sub
xor
jg
gs
adc
xchg
push
inc
shl
or
popf
sbb
lea
lret
lret
cs
shll
cld
dec
add
es
lods
ss
jns
les
jo
cmpsb
sbb
mov
imul
cltd
or
sbb
jae
fwait
push
pop
inc
mov
lods
jnp
imul
in
mov
adc
aam
push
inc
and
mov
rolb
imul
aam
lea
mov
or
clc
ja
and
jo
inc
out
insb
out
push
pop
popa
stos
add
adc
jge
jb
pop
fdivl
lock
push
movl
nop
out
lcall
cld
dec
adc
push
adc
dec
mov
aam
arpl
hlt
jb
mov
and
mov
fwait
add
lahf
adc
dec
or
roll
dec
sbb
jl
fwait
mov
loopne
mov
shlb
adcb
push
mov
addr16
adc
mov
test
inc
int
inc
stc
jno
pop
jecxz
repnz
in
jl
stos
inc
icebp
enter
add
mov
pop
dec
inc
cmp
add
mov
mov
adc
dec
fsts
fsts
aad
jbe
dec
push
xor
or
jmp
mov
je
lods
mov
imul
sahf
mov
adc
cli
adc
fwait
icebp
test
jg
dec
sbb
or
push
or
sub
mov
add
jmp
and
xor
jl
add
aas
cwtl
aas
fadd
cwtl
mov
test
dec
jg
jge
int
or
jle
fistpll
add
sbb
negl
hlt
push
mov
sbb
aam
cltd
jge
sub
outsl
test
mov
mov
insb
stc
cmc
outsb
daa
fmulp
jle
mov
mov
jae
lret
loopne
sbb
in
sbb
dec
data16
push
mov
push
loope
pop
repnz
fists
out
jbe
mov
mov
loopne
cmp
dec
sbb
fidivs
push
aas
pushf
sahf
cli
lock
addb
or
jg
xchg
or
std
xchg
push
inc
loop
adc
sub
jae
fldl
clc
mov
cwtl
int
adc
popf
shlb
fildll
xchg
cmp
push
mov
arpl
mov
prefetch
or
ret
push
or
int3
adc
or
in
cmp
pop
xor
jg
mov
out
aam
ds
push
xchg
jbe
shlb
test
or
xchg
sbb
inc
sub
int3
or
insb
push
enter
ss
or
rolb
int3
cvttps2pi
xchg
xchg
mov
cmp
mov
pop
xchg
lahf
mov
add
fiaddl
mov
cmc
aam
test
xchg
pusha
std
push
bound
ljmp
sbb
lea
iret
loop
repnz
inc
out
bound
push
lahf
xchg
and
fsub
sbb
daa
and
and
lods
sarl
and
xchg
pop
or
jmp
arpl
xchg
dec
inc
push
fldt
jecxz
cs
ss
iret
sbb
jmp
add
negl
loope
cmove
jb
mov
mov
xlat
jle
xlat
adcb
adc
push
inc
xor
jmp
imul
in
popa
or
lret
adc
arpl
loope
mov
mov
cmp
leave
push
mov
push
loop
add
jnp
dec
lret
push
inc
inc
pop
in
aaa
lods
adc
xorb
and
test
mov
lods
jno
pop
sbb
pop
gs
xchg
or
in
pop
xchg
movsl
pop
nop
out
test
mov
jge
xorl
insl
pop
push
clc
xor
call
adc
sarl
mov
push
enter
mov
pop
add
movsb
adc
cmp
sbb
xor
push
sbb
inc
sub
push
adc
and
pop
bound
or
cmp
aad
enter
mov
stos
jp
xorb
push
fsubl
jmp
insl
lea
mov
in
or
imul
popf
aam
loope
sti
cmp
je
push
mov
insl
or
jp
push
scas
icebp
mov
adc
cmp
out
add
push
mov
das
jecxz
xor
cmpsb
ret
push
icebp
shll
add
adc
adc
push
clc
mov
movsb
sbb
pop
sub
mulb
sbb
lea
inc
add
repz
dec
inc
jp
mov
adc
xor
das
jp
insb
ljmp
les
icebp
sub
sub
pop
popf
cmpsl
test
mov
pop
out
sarb
into
jp
jb
push
or
hlt
cmp
cmp
mov
mov
pop
mov
out
push
divl
in
loopne
div
inc
rcll
iret
cld
or
cmpsl
jecxz
or
xor
scas
cs
lds
test
in
mov
cmpsl
cmp
and
divl
push
mov
or
mov
outsl
dec
nop
es
sub
clc
gs
sarb
add
push
sahf
icebp
aaa
pop
jns
rcrb
neg
inc
loope
fstl
nop
enter
movsl
clc
test
mov
mov
or
mov
mov
jmp
aad
sbb
das
aam
mul
popa
push
test
xor
aaa
cli
adc
rolb
inc
adc
sbb
mov
sub
adc
out
test
test
ja
insb
bound
addr16
xor
outsl
fstps
adc
sahf
sub
cmc
mov
clc
cmpsl
pop
sbb
lds
loopne
in
gs
lock
icebp
cmc
push
into
popf
cmc
pop
andl
mov
mov
dec
es
ljmp
and
sbb
jno
aam
jg
inc
mov
cmpsl
push
cld
xor
into
pushf
int
sbb
ss
sub
xchg
push
jo
push
mov
loope
lods
xor
xor
push
adc
push
xchg
inc
dec
mull
cli
stc
xor
inc
xchg
popf
in
jbe
jp
and
jecxz
adc
or
xchg
cmp
sub
test
cmp
xor
aas
mov
lock
xor
outsl
or
mov
lret
inc
xorl
jbe
push
fst
cltd
adc
or
mov
pop
lods
jbe
xor
std
lods
pop
icebp
popf
ret
sbb
into
rcl
jp
jmp
xor
push
pushf
popa
xchg
pop
mov
xor
inc
lret
sahf
jno
mov
push
movsl
and
cmp
cmp
mov
mov
sbb
ja
cltd
mov
mov
add
and
lea
ficompl
das
cmp
mov
cltd
pusha
outsb
mov
xchg
cld
xchg
mov
movsl
int3
jbe
inc
pop
mov
xor
in
es
ljmp
lret
dec
inc
fisttpl
or
insl
sub
mov
js
adc
popa
cmp
mov
push
ja
cli
push
jecxz
jge
xor
push
mov
sub
lods
adc
xchg
clc
lea
push
scas
subl
daa
pusha
push
ret
roll
out
pop
ret
pop
mov
cmpsl
int
sub
xor
pop
mov
repnz
pop
ljmp
jecxz
adc
and
outsb
xor
lods
sahf
push
lahf
or
xor
sbb
pushf
fwait
sub
add
cmp
mov
outsb
dec
shlb
aam
dec
dec
test
mov
cs
mov
fldl
mov
ret
outsl
xchg
pop
and
cmp
inc
sahf
push
lret
sub
mov
inc
lss
scas
clc
mov
fiadds
add
jmp
mov
mov
lahf
ficoms
loop
lock
dec
push
iret
scas
pop
push
jbe
cmp
or
sub
mov
push
or
mov
lods
arpl
es
testb
mov
push
out
xor
cmpsl
lock
shl
jnp
int3
pop
pop
adc
stc
insl
push
mov
sbb
mov
xor
jnp
sti
jbe
and
pop
jecxz
fsubs
pop
test
mov
push
xchg
in
add
jmp
xchg
xor
jl
mov
lods
jae
cvttps2pi
movsb
xor
mov
mov
jno
fucomi
xchg
fs
adc
sti
fidivs
sbb
in
lods
cmp
add
aad
jmp
in
in
mov
inc
fnsave
push
mov
arpl
mov
mov
minps
sub
aas
scas
mov
xor
adc
jae
cmp
or
fisubrl
insb
dec
sub
jae
lret
push
mov
cld
ja
mov
dec
iret
movsb
xlat
pop
int3
out
movsb
push
add
mov
lcall
xchg
aam
lret
mov
pop
daa
push
push
push
push
pop
ficomps
repz
adc
dec
mov
mov
cmpsl
dec
xor
movsl
jb
addr16
pop
mov
jno
xor
repz
scas
add
add
inc
push
mov
ds
shll
push
int3
add
scas
ljmp
sbb
fisubl
mov
aas
ds
xchg
adc
lods
enter
add
mov
or
add
shl
jmp
add
push
adc
lret
push
pop
adcb
aaa
cli
adc
test
xor
shll
in
and
in
push
daa
lock
ret
sbb
cs
cmp
imulb
dec
cld
pop
aaa
pop
aas
fisubs
sti
roll
push
jecxz
and
dec
enter
into
movsb
clc
ret
pop
loope
mov
lcall
or
pusha
push
pop
lret
bound
jo
test
test
ret
popf
stc
pop
mov
xor
lahf
mov
data16
inc
jno
rclb
mov
mov
out
push
inc
lahf
xor
sub
xchg
add
push
inc
mov
call
das
fstpt
mov
ss
or
sbb
fadds
rolb
mov
fs
mov
inc
sbb
mov
fdivs
arpl
pop
xlat
ss
fldcw
dec
mov
mov
pop
nop
lock
dec
insb
test
adc
gs
inc
enter
xor
pop
shlb
cltd
mov
icebp
in
mov
gs
cmpsb
outsl
rcrl
adc
rorl
and
lret
and
pop
jmp
sbb
add
add
mov
enter
ss
sar
adc
xor
dec
daa
loop
jo
stc
mov
sbb
movsb
ret
aas
int
inc
shlb
divb
iret
ljmp
ja
sbb
enter
int
add
jg
xor
and
daa
sbb
test
aad
outsl
pop
xchg
loop
cmp
mov
cmpsl
and
or
stc
pop
jmp
mov
call
in
sbb
int3
push
push
aad
pop
mov
xchg
sbb
mov
loop
movsl
inc
popa
rcrb
enter
fisttpll
dec
mov
test
add
nop
mov
cwtl
ret
add
gs
jg
sub
xor
mov
jg
lds
into
mov
mov
sbb
sahf
add
les
xchg
cmp
and
inc
xchg
xchg
mov
sub
icebp
sbb
dec
push
jb,pn
cltd
popf
adc
dec
pop
rcr
imul
and
andb
push
sbb
ja
popf
xor
loopne
xlat
outsb
mov
add
rol
inc
dec
jg
jge
test
daa
jns
out
loope
and
mov
mov
jne,pn
and
cmp
cmp
into
cmp
dec
jno
gs
mov
jmp
inc
fistpll
andb
in
inc
cld
push
and
jecxz
aaa
add
or
sbb
pop
add
xchg
push
dec
mov
out
sti
mov
fldpi
mov
ss
cs
mov
adc
out
cmpsl
test
stos
mov
adc
adc
loope
and
stc
jg
jmp
hlt
pop
xor
inc
sbb
sub
inc
fistps
out
iret
popa
mov
cmp
mov
adc
nop
sbb
pusha
cmpsl
jp
adc
loope
in
push
adc
and
popa
xor
test
cmp
lea
enter
divb
clc
push
cmpsl
jns
outsb
xchg
adc
dec
xlat
in
imul
xchg
arpl
jge
xorl
cmp
mov
les
in
pop
sahf
pop
push
sbb
sahf
in
dec
mov
std
ret
xchg
cmpsb
mov
mov
mov
data16
sub
sub
scas
bound
push
adc
fistps
push
push
fmull
xchg
lahf
mov
adc
cmp
xchg
push
xchg
jae
aad
fs
sub
testb
sahf
xor
test
pop
push
push
dec
sarb
sahf
xchg
dec
inc
lods
repz
ret
sub
into
adc
pop
lock
movsb
xchg
mov
lods
cltd
iret
das
mov
xchg
mov
rcrb
inc
fistl
add
repnz
scas
adc
es
je
negl
adc
add
xor
ss
in
mov
mov
mov
mov
shrd
jmp
frstor
dec
xchg
movsb
cmp
pop
adcl
aaa
cli
adc
xchg
cmp
sahf
outsl
mov
imul
push
sub
loop
loopne
sub
xor
imul
repz
dec
pop
cmp
add
fmul
shl
push
xor
mov
mov
daa
cmp
adc
lcall
call
or
push
lret
lock
xchg
pop
mov
adc
push
dec
inc
xchg
addr16
cmpsb
sbb
push
shlb
or
in
stos
ss
out
xchg
je
xor
loop
dec
jo
pop
dec
clc
ficomps
stc
int3
xchg
sbb
sbb
es
fcmovne
xchg
mov
imul
cmp
mov
add
rol
pop
sahf
xlat
xor
nop
add
xorb
das
sbb
imul
lcall
addr16
aam
adcb
shl
mov
pop
dec
adc
cmp
jns
mov
xlat
and
add
pop
pop
xor
std
jnp
or
mov
cmp
dec
pushf
lret
mov
scas
lods
dec
and
jne
add
ja
ficomps
movsl
mov
xor
mov
or
movsb
mov
popa
mov
and
int
cmpl
lea
fisubrl
jmp
imul
std
outsl
jecxz
lock
sar
dec
xchg
sahf
les
adc
push
push
mov
movsl
inc
add
and
mov
pop
ss
adc
mov
pop
repz
data16
mov
imul
pop
cltd
movsb
movsl
mov
fisttpl
jmp
fldt
loope
adc
outsb
cmp
xor
ss
in
mov
in
inc
mov
leave
cmp
add
cmp
jno
cmp
sub
mov
push
fdivs
lea
out
push
xor
jb
lahf
les
add
or
mov
mov
enter
flds
std
addb
in
inc
inc
lahf
inc
movsb
xlat
sub
and
fwait
outsl
roll
dec
scas
lret
xlat
sbb
xchg
int3
add
adc
mov
mov
aaa
das
xor
fwait
pusha
loop
jg
lahf
ficompl
outsb
rcrl
sub
xchg
jae
sbb
jne
dec
repz
mov
int
mov
jmp
movsl
cld
ret
mov
pop
mov
jg
mov
int
dec
fcompl
ljmp
std
mov
xchg
pop
test
dec
push
or
mov
imul
das
push
xchg
mov
or
ret
pop
mov
fmuls
lock
push
xchg
cmp
jmp
and
aas
sbb
aas
repnz
lret
dec
push
xor
xchg
cltd
sbb
or
pop
lea
jo
cmp
repnz
test
mov
gs
jo
mov
jbe
dec
xor
ret
divb
adc
xor
or
push
lret
iret
insb
cmp
xchg
test
enter
pop
sub
mov
sbb
es
mov
jmp
outsl
dec
pop
or
jge
inc
in
loopne
test
cmp
addb
in
dec
mov
xor
mov
cs
rcrl
push
bound
or
call
push
mov
jno
or
icebp
scas
test
pop
stc
ret
push
xor
add
sahf
cmp
mov
push
test
mov
sbb
ja
dec
stos
nop
add
insl
xor
jbe
loopne
inc
mov
mov
push
js
pusha
pop
sbb
cmp
xchg
test
dec
popa
and
add
fisubl
and
in
pusha
push
sbb
inc
sar
mov
inc
rcrb
inc
in
and
cli
fidivrl
ljmp
xor
jno
aad
xor
shr
mov
mov
xor
shl
xor
or
mov
mov
add
jmp
pop
cmc
imul
test
stc
fisttpll
outsb
adc
aaa
cli
adc
xchg
push
jge
jo
lea
mov
adc
es
pusha
xchg
or
movsl
mov
mov
rorl
mov
xor
shll
into
test
movsb
cmpsl
mov
dec
dec
mov
sub
add
stos
mov
sahf
mov
dec
xor
mov
push
scas
aad
xchg
shlb
or
lock
or
lahf
xor
mov
int
push
inc
in
mov
xor
mov
sub
adc
cli
fwait
and
fwait
cmp
push
fdivs
jns
mov
and
repnz
xchg
test
lcall
mov
pop
mov
dec
push
dec
cmp
or
sub
mov
scas
mov
nop
lods
adc
cmp
xor
add
pop
loop
and
xchg
pop
pop
jle
int3
lahf
pop
rcrb
add
mov
xchg
aaa
dec
mov
inc
cmp
aad
movq
into
lahf
sub
loopne
cmpsb
mov
or
add
pop
mov
push
mov
inc
cmp
jno
mov
scas
cmp
or
add
mov
out
imul
lcall
pop
xchg
pushf
sub
add
push
mov
sub
jmp
ror
cltd
jmp
imul
arpl
addb
xor
mov
addr16
mov
adc
lods
pop
and
sub
movsb
jb
fildl
outsb
sti
cmp
add
cld
pop
aaa
jbe
pop
subb
pop
sar
cmp
dec
dec
add
inc
push
and
ficoml
dec
mul
jl
mov
and
loopne
sub
mov
and
cmp
lahf
add
aam
cmc
cmpsb
push
cltd
imul
jmp
push
push
add
inc
xlat
mov
dec
mov
push
pushf
sbb
mov
push
insl
testb
out
jmp
sti
test
sti
or
or
pop
mov
and
jge
sub
fwait
idiv
icebp
or
mov
and
idivl
cmp
xor
pop
jmp
or
mov
sub
ficoms
and
daa
scas
add
inc
pop
unpckhps
inc
leave
inc
daa
idiv
and
and
inc
jnp
movaps
pushf
adc
imull
xchg
dec
xchg
mulb
mov
addr16
mov
bound
push
aas
es
jo
or
ljmp
xchg
pop
pop
add
jno
cmpsb
dec
sub
aam
mov
xor
jb,pn
lret
ret
mov
cmp
movsb
outsb
push
movntq
out
or
jae
sbb
sbb
ret
imul
lock
sbbb
leave
push
xchg
aas
xchg
xchg
repnz
pop
pop
fistpll
jns
mov
push
sbb
stos
test
es
js
sub
jnp
jae
ret
js
xchg
dec
jno
pop
jo
inc
negb
mov
mov
mov
imul
mov
mov
xor
mov
inc
hlt
ljmp
adc
pushfw
xorb
cmc
inc
loop
and
aam
pop
lcall
hlt
outsl
mov
clc
in
push
mov
xchg
mov
aam
xchg
sahf
and
sub
lods
fmull
or
push
bound
or
cmp
push
or
scas
adc
mov
test
rcl
add
gs
cmp
push
subl
and
aaa
xchg
push
sbb
push
add
cmp
enter
add
notl
data16
add
sub
or
dec
mov
mov
mov
repz
subl
hlt
mov
push
int3
jmp
mov
dec
js
fs
xor
adc
jmp
push
adc
aaa
cli
adc
je
jge
cmc
mov
fwait
int3
fdivrl
dec
fsubl
xor
lea
mov
push
and
cmp
mov
stos
ljmp
push
jmp
not
lods
push
mov
push
mov
sbb
inc
cmp
je
mov
jne
inc
jne
fnstenv
loopne
adc
sub
stc
push
push
cmpsb
movsb
inc
leave
clc
jecxz
rorb
or
xor
mov
adc
lcall
cmp
aam
in
xchg
punpcklbw
arpl
push
orl
mov
je
xor
movsl
sbb
je
jnp
shl
sub
or
sub
out
arpl
add
sub
sub
jmp
outsb
mov
insb
mov
jae
xchg
push
addb
sub
subb
cltd
hlt
push
mov
fldt
add
mov
sub
sbb
jl
pop
pop
adc
inc
xchg
adc
testl
ficoms
add
add
mov
or
test
aaa
lods
pop
push
call
das
leave
push
add
sbb
xchg
and
mov
subb
das
jno
jae
lods
inc
ret
les
fadd
ss
push
nop
jmp
pop
imul
sahf
and
les
pop
das
push
cld
iret
shrb
mov
in
scas
or
add
xchg
adc
outsb
bnd
jne
shrb
mov
pop
pop
and
push
mov
insl
cmp
mov
cmpsl
sbb
andl
addl
sbb
xchg
dec
cmc
dec
test
jbe
movsb
sub
lcall
push
movsl
or
out
xchg
lock
jg
cld
pop
xchg
xchg
ja
ljmp
iret
push
and
dec
sbb
sub
stos
insl
jp
mov
pop
lahf
push
cmp
pop
pop
cmc
and
arpl
mov
push
sbb
mov
sbb
ret
dec
lea
mov
sbb
sub
push
dec
pusha
sub
adcl
add
mov
cmp
jae
push
jbe
in
mov
cmp
stos
mov
repz
mov
mov
cwtl
mov
rclb
fdiv
xchg
loopne
xchg
out
ret
jmp
out
push
lds
or
sub
xor
rcll
sbb
test
add
inc
ror
pushf
fstpl
lock
cmp
ja
mov
jle
stc
jbe
jns
xchg
and
lods
fimuls
jle
stos
rol
jp
xchg
jl
out
push
rclb
pop
jo
xchg
or
cwtl
insl
leave
sar
adc
std
cmp
jp
mov
or
lcall
inc
sbbl
fisubrs
mov
pop
lods
xor
shrl
push
fisttpl
bound
lcall
ds
jmp
inc
rol
movsb
nop
lcall
fs
imul
adc
jae
xor
or
test
mov
outsb
dec
push
je
loope
inc
jns
pop
cmc
xchg
movsl
stos
inc
leave
dec
nop
sbb
popw
adc
add
push
and
pushf
fdivs
cmp
dec
sbb
jne
or
frstor
nop
std
push
dec
inc
je
fcmovnu
lods
lock
fwait
pop
xor
pop
adc
push
dec
jnp
lods
daa
out
ret
outsl
cs
push
in
fdivs
ljmp
rcrl
scas
fldcw
push
inc
push
negb
push
xor
xchg
in
inc
and
test
mov
jecxz
je
dec
movsl
jg
fldt
pop
mov
les
jb
and
rclb
inc
test
dec
push
jl
or
fistl
scas
mov
adc
add
push
jns
inc
add
arpl
push
in
fidivs
scas
gs
int
dec
jge
sahf
sub
out
test
daa
xchg
ja
in
shrd
shr
mov
mov
xor
shl
mov
jmp
test
out
outsl
cmpsl
dec
test
push
xchg
mulb
aaa
cli
adc
xchg
cltd
stos
pusha
mov
jbe
jb
rcrl
mov
into
in
xchg
cli
adc
movsl
or
mov
inc
iret
daa
cwtl
aam
clc
outsb
jo
test
xor
or
cmp
ja
and
cmp
xchg
iret
cmp
push
and
pop
lret
adc
sub
and
pop
dec
push
mov
icebp
ss
lret
xor
adc
cmpsb
or
jae
jo
sbb
mov
pop
cmpsl
sbb
add
cmp
push
jge
into
mov
cmpsb
xchg
and
mov
push
cld
shl
pop
lods
mov
inc
je
cmpl
je
lcall
xchg
xchg
jo
es
and
enter
mull
shlb
add
sbb
popf
sub
les
pop
pop
lret
push
push
cmp
dec
jge
pop
mov
sbb
nop
in
inc
test
xlat
jo
mov
xor
jne
or
pop
or
cmp
std
push
ja
inc
in
mov
push
das
loope
sti
shlb
sahf
les
imul
ja
inc
cmc
pop
mov
shl
lret
test
push
or
in
enter
xor
xchg
xchg
repz
cmp
or
fildll
pop
outsb
shll
testb
inc
scas
mov
ds
pushw
add
pop
lcall
out
or
push
pop
mov
imul
cmp
jbe
mov
das
xchg
shlb
jp
mov
es
iret
pop
xchg
addb
es
xor
aad
mov
mov
notl
leave
js
out
lods
pop
pop
mov
neg
into
xchg
roll
movsb
mov
mov
dec
fdivrp
xchg
pop
mov
push
out
add
push
mov
add
and
and
dec
pop
lea
rcrl
aam
mov
cmp
cmpsl
aad
ficoml
mov
push
insl
arpl
mov
aam
cmp
cld
dec
mov
in
cmpl
adc
movsl
shlb
mov
movsl
adc
ret
je
repz
ss
cld
cmpsb
adcb
sbb
stos
enter
xor
jmp
clc
add
arpl
pop
and
lahf
sbb
push
push
inc
ljmp
push
out
lcall
pusha
addr16
xchg
das
inc
pop
xchg
or
mov
and
jnp
mov
rol
fldl
int3
cmpsb
mov
jno
xlat
ficomps
xor
dec
movl
aaa
decb
xor
gs
pop
pusha
in
cmp
pop
out
push
das
mov
add
test
xor
jns
fwait
mov
push
in
inc
cld
adc
fidivl
loopne
mov
adc
sbb
cmp
cli
pop
lcall
test
fcomp
or
das
xchg
jbe
mov
pop
fstp
cmp
loope
lret
add
lret
sub
jne
xor
outsl
adc
xchg
and
ds
or
jge
xorb
push
cltd
out
insb
pop
dec
subl
xchg
and
out
and
test
push
jno
sbbb
or
sbb
dec
fnstcw
adc
shll
pop
mov
fistps
xlat
test
sbb
xor
or
pop
cmp
mov
movsl
push
fimull
cmp
cmp
repnz
mov
xchg
pop
in
enter
or
jns
int
xchg
outsb
std
mov
shr
lods
das
loope
dec
das
cmpsb
adc
decl
pusha
mov
pop
mov
pop
arpl
sbbb
and
imul
jbe
xor
repnz
fs
jb
loopne
mov
sti
xchg
aam
xor
dec
mov
mov
enter
dec
sbb
out
cmc
xor
out
or
or
mov
shrd
add
jmp
push
fsubrl
dec
or
ja
lds
dec
adc
aaa
cli
adc
push
mov
sub
and
les
xorb
and
mov
add
cmc
dec
jp
xchg
or
push
mov
pushf
out
mov
lods
cwtl
out
xchg
nop
sbb
dec
cmpsb
xchg
push
cwtl
mov
and
mov
pop
fadds
pop
mov
lret
dec
xchg
movsl
add
mov
push
jl
cmpsb
mov
les
les
bound
subl
out
adc
cwtl
out
shlb
cmp
xor
push
inc
adc
or
jmp
lock
sbb
mull
lds
sub
xor
mov
push
int
ja
lds
jb
mov
sbb
fnstcw
pop
pop
ss
xor
jb
and
jmp
icebp
mov
fcomi
jnp
pushf
push
sub
bound
xor
cmp
push
cmp
inc
fidivrs
jo
shll
inc
es
decb
mov
mov
nop
jbe
in
fbld
cs
rorl
daa
out
or
inc
xchg
loopne
shrl
cld
xchg
sbb
lcall
push
bound
dec
loop
cld
mov
jnp
sbb
popf
xor
xchg
loopne
je
and
repnz
mov
test
sbbb
sub
mov
adc
int3
mov
stos
dec
cltd
xlat
scas
mov
icebp
and
out
in
push
push
mov
fstpl
pop
jecxz
test
stos
mov
das
cs
sub
push
cs
sbb
add
rep
mov
mov
lret
cltd
out
jge
push
lret
add
cs
cmc
jns
jno
dec
sub
jmp
ficompl
inc
xchg
jns
push
sub
outsl
inc
push
mov
stc
cmp
add
or
mov
push
inc
pushf
fsubrp
sbb
aas
repz
fucomip
or
test
in
push
and
dec
jne
inc
xchg
fnstcw
lods
jmp
scas
imul
shll
mov
lods
repz
dec
and
mov
lret
mov
cmp
jbe
cmp
inc
cmp
pusha
and
push
jns
add
mov
sbb
imul
and
jo
cmc
mov
cmpsl
mov
sbb
cmp
jp
repz
outsl
jo
lea
push
lret
mov
out
add
cmp
sub
ret
or
scas
sub
popa
pop
inc
fidivrl
xor
push
cmpsb
fmuls
xor
mov
popf
fldenv
faddl
inc
dec
xchg
lods
jnp
or
inc
xlat
inc
mov
xor
push
xlat
dec
aam
cmp
mov
xchg
cs
and
dec
inc
pop
jne
mov
loopne
fidivrs
pcmpgtb
addl
repz
xor
insl
cmpsl
movzwl
rcrb
nop
lahf
push
mov
test
push
adc
xor
out
std
subb
in
push
cli
rcrb
sti
je
jne
and
mov
cmpsb
xlat
cmpsl
add
shrl
mov
cmpsl
inc
push
cmc
test
jmp
out
push
out
mov
and
adcl
xor
addl
xchg
dec
sbb
mov
dec
mov
sub
add
fwait
mov
mov
shlb
clc
ljmp
lea
pop
push
fs
pop
mov
pop
mov
mov
adc
ds
data16
lret
clc
test
cmpl
notb
lea
push
inc
rolb
movsl
fdivrs
adc
adc
ret
push
into
cmpsl
sub
mov
sbb
adc
div
sbb
and
mov
out
adc
sub
enter
cmpsb
inc
xor
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
jmp
mov
or
mov
dec
lods
lds
sub
adc
cli
adc
lret
int3
inc
ljmp
test
adc
cmp
test
mov
lock
jge
xor
lods
dec
mov
xchg
push
mov
xchg
or
out
cmp
mov
bound
mov
or
ret
and
lea
push
insb
jle
int
push
gs
adc
pop
or
loope
mov
dec
dec
xchg
shll
rclb
mov
pop
fildl
mov
lret
jmp
arpl
xorl
pop
adc
fisubs
push
push
cld
addr16
inc
ljmp
jns
jne
ror
push
sti
mov
mov
in
adc
sub
jecxz
jne
push
fadds
mov
jb
mov
lahf
pop
imul
push
push
mov
leave
mov
xchg
push
xor
inc
andb
sahf
or
scas
scas
mov
xor
jae
and
sub
insb
jecxz
xchg
icebp
pop
int
and
fdiv
outsb
inc
stos
fcmove
mov
fs
lea
mov
lds
push
jmp
xchg
pop
negl
mov
xor
adc
mov
mov
mov
dec
sahf
add
ret
out
iret
sub
dec
hlt
inc
fwait
int3
ss
jl
int
movsb
clc
outsb
mov
lds
mov
dec
in
jle
es
insb
popa
push
insl
mov
in
xorb
add
mov
mov
cmp
lods
nop
iret
inc
notb
mov
mov
mov
sub
pop
pop
cmp
xor
aas
mov
popa
cwtl
sub
adc
jns
inc
stc
jmp
jecxz
xchg
or
jecxz
iret
das
and
xchg
push
lret
cltd
cwtl
sub
rorl
cmp
mov
push
jae
or
std
in
cs
test
push
and
mov
sbb
sub
mov
and
mov
movsl
je
adc
mov
adc
clc
mov
bound
push
mov
fwait
jge
push
sti
fcmovbe
mov
pusha
out
dec
xorb
in
cmpsl
adc
sahf
adc
test
hlt
leave
shll
sbb
cmpsl
mov
or
xchg
mov
rcll
mov
inc
clc
sub
sub
imulb
xor
loope
cld
sbb
ja
fstl
lea
ljmp
jmp
out
jnp
mov
sbb
out
shl
or
push
xchg
out
mov
cwtl
subl
ret
mov
loop
shl
or
xchg
adc
mov
pop
cwtl
arpl
iret
cmp
and
loope
fistps
mov
add
imul
out
icebp
aam
mov
in
lcall
and
add
pop
ja
mov
ja
add
shrb
in
jae
sub
inc
mov
jns
pop
add
dec
cmc
push
inc
in
push
pop
inc
mov
and
xor
orl
cmp
pop
cmp
mov
imul
fdivrs
jle
sub
popa
cmp
dec
or
iret
push
cld
shrl
rcr
mov
pop
push
sbb
and
mov
aad
out
test
and
xor
jae
pop
loop
dec
fisttpl
nop
sbb
in
mov
inc
cmp
sbb
dec
cmpb
sarl
in
addr16
jno
movsl
sbb
cwtl
cltd
sub
dec
cmpsb
daa
adc
mov
xchg
mov
mov
mov
mov
lcall
clc
rcrl
push
aaa
cmp
gs
lahf
sub
fdivl
popf
ljmp
or
outsl
into
inc
add
push
daa
cwtl
movsb
fistl
bound
or
sbb
in
mov
push
sbb
inc
pop
or
jo
adc
mov
push
in
or
push
insb
mov
sub
ljmp
mov
and
lret
or
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jmp
jmp
adc
lock
jge
mov
cmp
adc
cli
adc
shrb
cmp
inc
faddp
cli
xchg
aam
sub
xor
add
sbb
hlt
int
mov
jg
pop
add
pusha
cmp
jne
and
or
iret
mov
int
das
and
jbe
pop
cmp
xchg
fidivs
add
loop
add
orl
mov
jle
pop
repz
dec
mov
les
loope
repnz
or
loop
fdivl
cmp
cmp
sbbl
xor
push
idivl
xchg
xchg
push
shlb
arpl
push
xchg
daa
icebp
mov
sbb
rclb
jge
xlat
arpl
adc
addl
push
dec
mov
and
pop
inc
mov
ret
xchg
cmp
pusha
adc
adc
push
sbb
fildl
andl
in
jp
fwait
scas
inc
mov
bnd
cmp
rorl
push
pop
push
cmpsl
dec
or
sub
pop
outsb
mov
insl
pop
mov
pushf
pop
sub
mov
repz
cmc
fisubrl
mov
clc
sub
inc
stos
pop
dec
pop
inc
fcom
sbb
pop
lds
loop
arpl
fimull
mov
shlb
jns
lds
adc
cmp
jp
cmp
mov
xor
leave
push
mov
shll
pop
insb
cmp
dec
repz
movsb
or
pop
jl
xor
js
mov
or
jle
popf
imul
adc
cmp
dec
in
xchg
pop
cld
incb
aas
lahf
cs
and
add
mov
and
mov
sbb
sub
int
adcb
adc
cmpsl
fcomip
arpl
sub
xor
lods
mov
or
pusha
and
iret
mov
mov
outsb
push
sbb
jns
xor
mov
in
and
cmpsl
xchg
cmpb
dec
std
insb
xchg
enter
popa
ss
add
and
xchg
lcall
les
lahf
loopne
nop
sub
shl
xchg
sbb
ds
out
rolb
xor
and
fucomp
loop
xchg
sahf
cmp
hlt
inc
inc
xor
jnp
mov
lret
mov
int
adc
cmp
jb
shl
cs
divl
inc
xor
sti
addl
fdiv
jl
add
std
jns
cmp
dec
inc
pushf
pushf
pusha
aam
std
imul
mov
lcall
loop
xchg
add
sbb
roll
lods
mov
lret
dec
pop
sub
inc
adc
bnd
sub
in
stc
cmp
in
pop
adc
movsl
test
nop
outsb
push
movsb
pop
mov
imul
fiadds
aas
cli
int
aam
mov
ja
pop
shrl
loope
pusha
popf
pop
jg
adc
xchg
cmpsb
sub
loope
xchg
data16
cltd
roll
dec
lcall
mov
adc
mov
lods
mov
inc
sub
sub
cmp
and
in
out
jmp
cmpb
pop
xor
pop
jae
shll
add
repnz
add
insb
pop
es
scas
and
pop
es
sub
stos
cli
andl
push
fnstsw
or
out
pusha
hlt
dec
insl
ljmp
or
arpl
push
jl
mov
insb
mov
mov
mov
cmpsb
shl
mov
push
scas
dec
int3
jbe
or
call
and
lods
loope
lea
hlt
xor
not
and
aam
nop
addb
mov
add
ret
adc
into
rol
or
nop
mov
jg
push
push
iret
loope
mov
iret
stc
ret
jae
imul
xor
in
into
fs
lahf
xchg
sub
pop
scas
jg
cmpsl
or
pop
inc
add
jae
adc
sti
xor
out
cmp
add
xor
add
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
jmp
inc
in
push
test
and
lods
pop
cmp
jnp
sbb
jnp
inc
adc
aaa
cli
adc
pop
push
std
hlt
cs
jnp
lahf
adc
fistpl
std
xor
enter
enter
data16
mull
fs
push
or
lea
pop
adc
stos
mov
inc
shlb
pop
std
or
inc
out
cmp
sbb
fistpl
clc
mov
imul
sahf
and
orl
sbb
addl
mov
fsubrp
and
imul
bound
jo
sub
sub
push
mov
sbb
adc
inc
inc
andb
mov
xor
or
add
cmpsl
and
xor
jl
mov
lods
xor
inc
data16
addl
fnstcw
test
js
out
sbb
outsl
lret
cmpsb
add
test
mov
out
ficoms
inc
jb
inc
jl
fidivrl
mov
stos
decb
adc
out
in
movsl
mov
jle
xor
insb
lods
std
mov
adc
jmp
into
fdivrs
jle
and
fwait
pop
inc
and
inc
cmpb
leave
inc
ss
dec
inc
and
and
push
inc
cmp
dec
adc
lcall
rcrb
call
out
mov
mov
inc
in
into
cmpsb
pop
es
sbb
aaa
jbe
das
mov
mov
call
add
add
sbb
sub
xcrypt-ctr
cmpsl
ficoml
movsl
mov
lcall
add
pop
repnz
dec
insl
cld
xchg
mov
aas
lcall
fcoml
xchg
repnz
aas
sbb
daa
repz
aaa
les
push
xchg
mov
add
mov
jnp
dec
jge
mov
mov
mov
mov
mov
cmp
out
xor
add
jae
mov
push
dec
push
cmc
sub
mov
sub
and
fidivrs
xchg
sbb
ja
dec
mov
push
lret
mov
add
xor
stc
cmp
imul
mov
mov
or
or
cltd
or
dec
sbbb
mov
jmp
jle
jnp
xchg
cli
insb
push
ret
xor
xor
mov
push
repz
shll
mov
cmp
inc
jl
int3
into
mov
stos
lcall
push
xchg
inc
lea
adc
cmp
sub
int3
mov
cmp
cli
in
js
push
in
sbb
test
inc
jnp
push
mov
add
std
xchg
xor
adc
aad
add
in
ds
insb
pop
fdivrs
fdivrl
and
test
sbb
adc
inc
adc
mov
mov
in
jno
push
mov
cld
mov
jmp
aaa
xchg
subl
add
testb
add
xchg
xchg
mov
push
push
xchg
jb
and
out
scas
iret
mov
dec
loop
sbb
add
cld
fimuls
movsb
add
adc
mov
stc
or
out
stc
mov
rorl
inc
aaa
movsl
gs
dec
and
sbb
hlt
sbb
leave
repz
mov
jb
push
jge
imul
push
in
addb
out
sub
adc
fwait
push
and
das
xlat
test
jb
sbb
outsl
xchg
pushf
cmpb
data16
cmp
mov
adc
bound
decl
xor
nop
jp
jbe
loopne
fwait
outsl
pop
and
sub
repnz
loopne
cmp
push
and
insl
std
lock
and
jecxz
mull
mov
shr
insl
stos
test
inc
loop
nop
xchg
in
push
pop
mov
and
sar
mov
inc
aam
xchg
mov
sub
into
repz
jno
sub
fwait
clc
mov
mov
ficoml
jae
cmpsb
sbb
test
sub
loopne
sub
dec
les
movsl
loop
sahf
jns
pop
pop
sti
sti
adc
leave
and
popf
in
lds
js
hlt
pop
xor
cltd
mov
add
add
and
or
js
mov
sub
adc
aaa
cli
adc
cwtl
shlb
lahf
shlb
dec
mov
fsubrp
mov
fmull
cld
nop
loopne
es
inc
dec
dec
push
cmp
mov
push
dec
add
nop
loope
add
cmpsl
add
cwtl
adc
jne
xlat
int
es
das
cli
pop
push
jmp
pop
cwtl
mov
movsb
cmpsl
pop
xchg
push
sub
jno
in
scas
insb
stc
add
bound
or
ffree
push
mov
sarl
aam
cmc
in
push
popf
imul
pop
and
jae
push
mov
inc
popa
cmp
mov
lods
pop
testl
cmpsl
mov
into
mov
out
pop
xchg
jo
std
test
stos
leave
push
jb
pop
mov
mov
or
and
cmpsl
aam
lcall
test
aaa
scas
shll
imul
lods
mov
and
inc
jle
test
cmc
mov
bound
add
sbb
scas
push
inc
addb
sbb
test
sub
mov
xchg
fwait
lret
mov
jae
in
stc
popf
lret
xor
add
bnd
mov
add
subl
aas
jne
adc
sub
adc
scas
mov
xor
pop
rorl
lea
cmpsl
jle
test
sub
cmp
sbb
jbe
in
and
jge
rcl
jns
fadd
dec
sub
sbb
fcoms
std
push
push
loop
enterw
test
lods
outsl
jmp
push
imul
sbb
mov
adc
das
test
test
aad
movsb
inc
sub
stos
int
je
pop
lahf
and
and
push
xor
cmpsb
jno
push
cmp
outsl
push
or
out
sbb
test
dec
push
shlb
js
scas
jae
idivb
sub
movsl
stos
xor
sub
in
jb
and
lock
add
je
jnp
lods
and
fisubl
hlt
pause
insb
and
jp
mov
xchg
add
jae
mov
es
pop
bound
push
notb
test
push
xlat
ja
adc
fldt
xchg
sbb
sbbl
xchg
pop
cmp
adc
lret
lock
movsb
adc
mov
xchg
jl
jmp
push
repz
jbe
inc
popa
xor
push
ficoms
loopne
icebp
loope
mov
xchg
jbe
mov
pop
loope
push
ret
lea
aam
push
sbb
or
repnz
rol
ds
sti
fstps
cmp
dec
adc
jne
mov
fs
ds
loop
sub
sbb
shlb
sub
call
decl
mov
js
pop
outsl
and
cmp
mov
sbb
push
sub
leave
pop
add
mov
dec
cmc
or
mov
adc
fimuls
into
popf
leave
gs
push
mov
cmpsb
lods
jb
call
ror
jmp
ljmp
inc
mov
pop
jnp
mov
out
push
sub
ss
shl
jo
aam
das
dec
and
inc
mov
xor
dec
in
mov
jns
fcmovnb
nop
sub
cwtl
pop
jae
clc
data16
mov
jge
pop
in
inc
adc
jo
stos
pop
sti
mov
pop
out
cmp
pop
lret
and
fcmovne
arpl
xor
cmpsl
sbb
pop
jmp
outsb
jmp
xlat
scas
push
pop
jle
in
xor
mov
dec
mov
dec
in
mov
lret
fnstenv
mov
in
cmpb
rcr
xor
cli
popa
xlat
cmp
ds
sub
sbb
lahf
loop
and
pop
add
xchg
mov
xchg
add
xchg
xchg
dec
sub
test
mov
dec
fsts
xor
mov
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
jmp
mov
and
add
and
add
outsl
sbb
adc
cli
adc
cmpb
std
and
daa
or
push
cmpsl
sarl
imul
jmp
insl
jnp
inc
mov
test
sub
imul
lcall
lds
sbb
pop
xor
sti
lock
loopne
xor
in
loope
xchg
cmpsb
sub
adc
cmp
out
sahf
push
adc
mov
scas
add
and
addr16
imul
jno
das
xchg
dec
loop
inc
sbb
jne
rol
inc
mov
pop
mov
pop
mov
into
insl
xor
rcrl
inc
cld
aad
sbb
ss
cs
cmp
stos
add
xchg
cmp
stos
lock
push
test
fmull
clc
mov
mov
push
dec
add
cmp
loop
insl
sbb
push
cmpl
mov
and
sbb
sub
adc
dec
jne
mov
in
gs
popf
push
jmp
rcr
mov
xchg
int3
add
nop
inc
sub
cmp
jle
mov
sbb
mov
mov
fld
out
in
dec
dec
test
jl
sub
fildl
pusha
subb
inc
sub
ljmp
outsb
inc
iret
lret
xchg
mov
icebp
adc
mov
xchg
mov
loop
test
inc
addb
iret
cmp
sti
sbb
negl
rcl
mov
mov
jmp
ret
test
int3
enter
xchg
std
pop
scas
loop
push
into
out
mov
or
sbb
ror
push
and
std
mov
stos
dec
test
arpl
inc
sbb
xor
sbb
mov
movsl
into
sub
movsb
mov
xor
cmp
pop
daa
js
mov
mov
popf
push
jge
movsb
fwait
adc
cmpsb
cmpsb
iret
out
scas
imul
push
movsb
adc
add
gs
fcmovnu
test
cmpsl
imul
cmp
ss
jno
out
push
add
xchg
xchg
mov
push
inc
lcall
inc
dec
add
aad
sub
add
cld
iret
arpl
xchg
stos
mov
sbb
std
mov
mov
mov
ror
pop
push
mov
mov
je
jp
mov
dec
cmp
ja
outsl
fiaddl
shl
orl
pusha
xor
in
shrl
popa
jle
push
jne
mov
sub
in
xchg
jnp
movl
push
shll
daa
aam
jmp
jge
pop
adc
inc
push
jle
ret
adc
icebp
xor
cmpl
mov
push
push
xchg
xor
dec
pop
sbb
mov
mov
lret
xchg
fs
inc
xor
sub
sbb
jle
cmpsl
jmp
xor
fildll
fstpl
pushf
arpl
movl
leave
bound
leave
test
cmp
aaa
test
mov
lahf
outsb
rol
or
cmp
movsl
push
cmpsl
push
pop
lods
gs
into
lret
jne
push
or
in
div
mov
addr16
cmp
mov
fwait
ss
sbb
dec
push
push
inc
cmp
addr16
pushf
imul
rorl
es
mov
push
add
call
in
and
xchg
sub
jbe
adc
dec
xchg
jl
jnp
dec
jns
lock
scas
sub
js
mov
mull
arpl
sub
testb
pop
mov
test
adc
dec
popa
lahf
and
sbb
or
std
jns
and
mov
xlat
pop
pop
andb
cmc
adc
lock
in
push
add
std
adc
mov
subb
add
ret
add
popf
mov
jl
inc
popf
dec
push
imul
cmp
mov
adc
adc
push
pop
xchg
rorl
scas
mov
mov
out
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
imul
or
jmp
push
enter
push
aam
gs
sbb
xchg
mov
adc
xchg
cli
adc
inc
push
cmp
stc
stos
add
int3
mov
mov
mov
xchg
inc
or
fstl
add
mov
pop
aam
add
xor
xlat
add
cmp
jb
outsb
and
aad
into
icebp
pop
call
hlt
popf
mov
pop
or
nop
sbb
or
in
or
cmp
push
and
popa
or
stos
je
addl
sbb
or
pushf
mov
aad
inc
inc
push
mov
mov
push
jb
bound
cmp
pop
add
push
call
inc
jecxz
add
leave
ss
cmpsl
cmp
and
shl
pusha
push
lret
cmpsb
enter
jmp
push
inc
int3
dec
jae
pop
push
add
jns
jno
and
mov
cltd
decb
test
push
lcall
imul
or
ljmp
lcall
jb
in
dec
pop
mov
lock
cld
fcmovbe
sbb
sarl
adc
bound
add
add
and
test
mov
xchg
jnp
cmp
out
loope
mov
pop
inc
fsubs
inc
push
rep
pop
mov
sub
xor
hlt
mov
adc
or
fwait
adc
arpl
cmp
xchg
and
cli
data16
inc
adc
dec
call
sbb
enter
mov
test
cmp
dec
movsb
jae
and
push
movsb
pop
xchg
insl
pop
loop
dec
add
jb
mov
xchg
mov
or
ficoms
xor
out
push
adc
dec
ss
test
jg
filds
xor
test
bound
or
test
leave
mov
xor
xchg
or
lahf
es
jo
push
jbe
and
add
movsb
jne
mov
packssdw
das
cmpsl
pop
cmpsb
pushf
xor
mov
mov
daa
mov
sub
in
dec
movsl
jmp
icebp
mov
ret
xchg
imul
inc
xchg
xchg
sbbl
out
pop
push
inc
out
dec
sub
mov
out
int3
outsl
xor
fldl
ja
push
aad
lret
jnp
add
lahf
daa
xchg
and
push
inc
fsubl
pop
xor
call
push
dec
roll
jno
stos
jb
lods
loop
sub
pusha
int3
mov
ret
sub
jne
dec
rcrb
mov
push
stos
je
sahf
lcall
sti
call
out
mov
add
lods
cli
out
push
ret
popa
bound
xchg
rolb
addl
lds
rep
jo
inc
xor
adc
xor
inc
cmp
aaa
sbb
push
data16
push
inc
cmpsl
adc
fmul
or
bound
int3
and
test
into
add
cltd
sub
xchg
cmp
jo
sbb
sti
cmp
scas
mov
push
loop
push
test
loopne
mov
iret
arpl
dec
sub
mov
push
jl
sbb
mov
inc
or
mov
mov
mov
cmp
and
das
enter
cwtl
pushf
test
subb
fs
mov
xchg
fcmovu
rorl
scas
sbbb
add
push
mov
push
pop
xchg
sbb
pop
movsb
sbb
roll
mov
pop
popf
sarb
add
pop
stc
xchg
movsl
shlb
cmp
xor
lods
mov
push
or
cmpsl
aaa
icebp
loope
pushf
in
jp
add
test
cmpb
or
xor
orl
call
jmp
mov
and
jmp
cld
xchg
imul
pavgw
add
or
in
notl
lods
cmp
push
mov
dec
mov
xchg
push
fs
mov
ret
xchg
jno
ret
add
and
jmp
divb
in
ds
xor
ret
push
pop
lods
hlt
jnp
or
adc
lahf
dec
mov
mov
rcll
pop
iret
mov
notb
cmp
jmp
jmp
xchg
aas
mov
stos
dec
jg
xchg
ror
aas
mov
sbb
adc
shr
fldl
lahf
adc
scas
mov
adc
ret
inc
or
js
popf
lahf
xchg
inc
lcall
jns
aam
sub
xchg
out
les
div
dec
adc
sub
ret
push
pop
in
jle
into
arpl
mov
add
mul
ret
push
push
arpl
adc
sbb
or
jae
and
insb
js
cmp
sub
dec
lock
sbb
js
add
fstpt
and
rcrl
cmc
pop
sub
icebp
pop
xlat
leave
movsb
adc
jbe
jge
sub
fisttpll
shlb
adc
cmpsl
bound
outsb
ret
xchg
add
pusha
lahf
lea
mov
pop
jne
pop
pop
mov
xor
or
xor
jo
cmp
faddp
jg
in
cmp
mov
pop
push
push
stc
fmul
nop
sub
dec
xchg
decl
xchg
push
lahf
sub
dec
adc
in
and
mov
std
inc
fsub
or
mov
jae
dec
cmp
xor
daa
clc
jae
and
das
ds
fwait
inc
not
ja
xchg
les
inc
lcall
loopne
lock
dec
imul
mov
mov
shll
jp
push
mov
push
test
lea
data16
pop
and
jle
into
imul
add
hlt
mov
xchg
lock
jmp
inc
sbb
in
sbb
add
fwait
lods
xchg
cld
and
jno
pop
inc
sub
imul
int3
test
movsb
inc
scas
mov
mov
push
add
out
out
repnz
pop
test
pop
jg
test
js
pop
movsl
arpl
push
lock
inc
popa
repnz
in
insb
xor
xchg
idiv
std
mov
out
lcall
ret
xchg
lea
xlat
lret
popf
inc
jg
dec
sbb
mov
out
shll
movsl
cmp
mov
les
ret
pop
rolb
shrb
jnp
orb
xchg
mov
xlat
add
mov
pushf
mov
mov
sub
jg
shlb
fptan
leave
jg
xlat
lret
xchg
fnstsw
mov
stc
shlb
cmp
fcmovb
sub
lods
lea
mov
lcall
popa
ljmp
adc
mov
rorl
int
xor
es
insb
test
addb
mov
lret
movsb
sub
insb
xchg
sub
cs
es
loop
sub
pop
hlt
sbbl
sbb
push
xchg
mov
mov
mov
push
sahf
insb
or
jmp
or
fndisi(8087
sbb
clc
pop
into
xor
dec
jb
xchg
and
jb
rclb
repnz
inc
xchg
mov
rcrl
pop
cli
loop
and
pop
inc
clc
test
adc
daa
xor
mov
push
adc
xor
rorb
sti
in
test
loope
sti
repz
or
cmc
adc
push
ja
mov
mov
test
jmp
ret
lods
jmp
jns
outsb
mov
sub
xchg
mov
mov
push
lock
sbb
mov
fisttps
dec
dec
clc
addr16
xor
lcall
hlt
sahf
frstor
call
inc
repnz
enter
rclb
mov
and
add
mov
sub
mov
and
mov
jmp
movl
movl
movl
movl
jmp
sbb
sahf
mov
pop
das
int
shlb
adc
xchg
cli
adc
cmp
cmp
adc
adc
xchg
add
mov
sbb
push
mov
stos
cmc
mov
sbb
jmp
lods
sub
inc
fcoml
jne
inc
cmp
in
xor
sbb
or
mov
imul
mov
push
jbe
jo
sbb
sbb
jno
fucomi
dec
outsb
out
cmpsb
push
mov
ret
dec
xchg
lcall
mov
and
mov
cwtl
outsb
xchg
stc
test
loopne
aad
movsb
push
lods
insl
test
or
sbb
jo
inc
sbb
add
imul
mov
add
sub
cmp
es
xor
sbb
vmwrite
lahf
or
div
out
pop
add
test
daa
and
pop
into
sub
test
in
adc
inc
and
inc
and
cwtl
jmp
int
in
sub
cmp
jae
xor
out
insb
adc
cwtl
mov
daa
jge
xchg
lcall
add
mov
sbb
mov
sbb
sbb
and
bound
jg
stos
push
sbb
xchg
and
or
shrl
popf
stos
movsb
bnd
orb
mov
fstl
push
mov
lds
adc
cld
inc
pushf
xchg
arpl
mov
sbb
jnp
aad
in
dec
pop
cmpsl
in
xor
cmp
xor
test
insl
iret
xchg
lods
aam
cmp
mov
cmpsb
enter
or
add
and
outsl
xchg
inc
sbb
mov
roll
mov
pop
adc
mov
movsb
or
dec
xchg
adc
movsb
fildll
xor
es
inc
pop
inc
inc
jmp
cmpsb
xor
adc
adc
ja
sbb
xchg
dec
fwait
mov
stos
jecxz
mov
cmp
movsl
xor
cwtl
jne
testb
ljmp
add
jmp
pop
or
push
out
loopne
cld
mov
lret
sub
adc
xchg
dec
add
lods
in
mov
sbb
mov
adc
dec
insl
mov
aam
mov
and
push
push
loopne
push
inc
fimull
jae
test
inc
gs
shll
add
xchg
fs
cs
push
fnstenv
sub
mov
aam
mov
sbb
xor
and
inc
xchg
mov
enter
stos
mov
in
mov
mov
dec
xchg
xor
mov
ja
lods
sub
out
pop
pop
and
jl
shrb
mov
out
mov
sbb
pop
dec
subl
cld
mov
mov
push
rcll
pop
dec
flds
fcompl
push
js
pop
fs
insl
lahf
inc
xor
in
nop
js
inc
test
mov
sbb
jb
sub
out
shr
push
sbb
push
fists
mov
sbb
jbe
dec
sbb
ret
fwait
sub
lcall
out
push
cld
push
jg
add
jb
jns
cmc
cmp
cli
xchg
push
fdiv
mov
pushf
insb
shrb
syscall
pop
push
andb
cmp
push
fstps
mov
mov
pop
popa
dec
and
cmp
aas
mov
and
sbb
scas
xor
xchg
aaa
or
rorl
test
push
xchg
clc
mov
add
pop
xchg
jb
xorl
lods
out
lea
xchg
cmp
mov
scas
fisubs
mov
sahf
mov
adc
mov
psrad
sahf
pop
fadds
inc
pushf
ret
pop
inc
inc
movl
movl
movl
jmp
cmc
push
cmpsb
decl
mov
icebp
cmp
jnp
fwait
repnz
jg
clc
adc
insl
xor
int
aaa
insl
imul
cs
pop
in
cmc
insb
mov
in
jno
push
cmpsl
lcall
std
idivb
aas
cmp
cmp
sbb
pop
data16
sub
mov
xchg
xchg
outsl
jp
in
mov
pop
xchg
rcrl
std
neg
cmp
outsl
xor
int3
adc
jle
cmpsl
test
rorl
cmp
sub
loope
pop
fimuls
push
sti
inc
sub
pop
mov
ret
sbb
xor
insb
fistpll
fisubrl
in
aam
xchg
lods
leave
addr16
sbb
xor
aad
and
fidivs
sbb
aaa
ds
movsl
jb
sub
fdiv
jmp
not
cmp
loop
xor
stos
scas
imul
add
fldcw
sbb
cwtl
out
adc
je
mov
ss
mov
inc
jbe
aas
push
movsb
adc
in
xor
mov
sub
in
ror
fdivl
add
mov
push
add
faddl
loopne
mov
mov
inc
inc
insl
jmp
mov
push
aam
lret
enter
sbb
mov
stc
enter
push
inc
xchg
stc
jae
std
add
cs
fwait
push
scas
scas
test
rcrb
pop
push
xchg
repz
mov
notl
mov
jo
push
adc
outsl
loopne
out
xchg
and
mov
inc
mov
jnp
sub
movsl
inc
into
mov
push
daa
mov
enter
ss
adc
cmp
jecxz
mov
mov
sub
push
push
sbb
mov
pusha
int3
cmp
test
xor
pop
outsl
push
cmp
fcompl
jl
and
xchg
xchg
cmp
lret
push
inc
popa
xchg
negl
lahf
pop
mov
jp
jle
cmp
pop
insb
pop
out
or
es
sbb
or
sbb
lret
sub
arpl
dec
sub
xchg
imul
add
mov
dec
imul
add
xchg
pop
movsb
fiadds
jne
dec
test
fists
and
pop
pop
pop
jns
mov
shlb
arpl
cld
mov
mov
xor
out
mov
jg
mov
jno
cli
inc
cmc
sbb
sti
push
mov
shlb
cmp
repnz
cmp
or
cmp
aam
jno
pop
hlt
arpl
ret
mov
add
xchg
nop
repnz
inc
cmp
test
ficoms
or
movsb
call
data16
stos
cmc
rcll
mov
dec
int3
lds
es
or
ljmp
mov
pop
sub
jmp
sbb
mov
xor
pop
inc
sti
pop
adc
and
xchg
mov
sbb
sbb
jnp
mov
test
and
or
sahf
push
xor
int3
leave
adc
aad
loope
push
or
cli
in
fidivrl
aas
adc
fwait
xchg
lret
shl
jg
cltd
adc
pusha
ljmp
jo
std
fadd
in
fsubr
xchg
sbb
movsl
lock
xor
pop
js
fidivs
inc
jmp
push
lods
cmc
adcb
mov
cli
test
neg
inc
and
mov
lcall
ret
push
outsb
fstp
ja
pop
inc
add
je
and
jns
add
mov
adcl
in
jbe
aaa
and
mov
outsl
jbe
mov
dec
mov
mov
sbb
divl
ss
fwait
mov
scas
dec
cmp
inc
inc
mov
hlt
lcall
add
mov
mov
add
or
imul
mov
xor
mov
sub
mov
add
mov
imul
mov
add
add
and
mov
mov
xor
sub
mov
mov
mov
mov
jmp
aam
push
dec
push
or
inc
notb
adc
dec
and
clc
adc
inc
inc
jl
pop
stos
faddl
fidivrs
sahf
test
mov
stos
into
xor
sbb
or
or
out
aas
jecxz
lahf
cmpsl
out
pop
lcall
data16
movswl
adc
pop
sbb
push
fbstp
cmpsb
test
pop
dec
ljmp
lods
pop
pop
push
xchg
scas
outsl
cmp
js
jge
fcomip
insb
add
jmp
pop
ljmp
test
out
dec
dec
inc
inc
in
into
daa
add
mov
mov
jmp
cli
std
mov
jb
pop
or
sbb
popf
mov
mov
out
test
pop
es
push
or
jge
scas
popw
and
popa
mov
shrb
jl
adc
mov
aam
push
cld
cmp
pop
adc
loope
and
mov
andl
cwtl
loopne
jmp
data16
in
shr
mov
imul
lret
aas
sahf
jae
sub
inc
call
lahf
sub
in
inc
loope
dec
push
mov
outsl
jmp
mov
jbe
lret
scas
cvttps2pi
je
mov
insb
sarb
loopne
xor
add
sbb
mov
dec
push
jg
mov
fmul
cmp
and
in
push
test
rcr
aad
mov
and
sub
jge
repnz
je
rorb
fs
mov
loop
popf
mov
out
sub
mov
fdivs
in
push
cmpsb
adc
jae
pop
sbb
arpl
or
jge
movl
push
mov
push
xor
les
pop
mov
xchg
lock
jp
xor
push
icebp
sbb
insb
jp
mov
insl
popf
mov
lcall
add
xchg
mov
mov
push
fsubr
xchg
mov
xor
pop
push
mov
xchg
js
adc
mov
jbe
shll
loope
shr
in
rol
pop
adc
call
pop
aaa
std
xor
stos
sub
mov
jbe
xchg
adc
mov
pop
cmp
jb
mov
sbb
pop
pop
push
adc
or
dec
aaa
pusha
fdivrs
mov
cli
jecxz
lods
inc
or
imul
lret
je
push
jp
jo
dec
sbb
subl
aas
lea
fsubrl
lock
adc
mov
xchg
les
jmp
jnp
out
ja
xor
adc
ds
mov
cwtl
dec
divl
push
imul
push
mov
jns
dec
add
aas
addr16
loopne
outsl
mov
mov
cwtl
rol
jns
out
shrl
enter
shlb
adc
and
add
in
push
jp
fcompl
xor
adcb
adc
jo
loope
jae
xor
inc
sub
pop
jge
shlb
pop
add
jmp
mov
frstor
mov
hlt
outsl
lods
ror
sub
jnp
dec
cwtl
xchg
and
mov
xchg
das
xchg
or
stos
xchg
or
daa
leave
mov
sub
xchg
into
xor
sbb
sub
addr16
in
xchg
xor
es
and
hlt
mov
test
fisttps
pop
push
or
je
xor
adc
inc
inc
enter
mov
lock
jge
xchg
mov
jmp
test
fiadds
stc
in
jl
adc
pop
jae
ja
mov
dec
xchg
and
leave
inc
sti
loopne
loop
dec
inc
lods
pushf
dec
mov
cli
xchg
jle
out
cli
enter
cmp
add
fsubrl
pop
and
out
add
je
sub
inc
or
mov
xor
imul
mov
sub
jmp
xor
in
mov
leave
jbe
xchg
pop
out
lds
cli
adc
mov
xlat
jecxz
loope
jo
adc
daa
and
jnp
loope
lods
xor
xchg
test
jmp
aad
loop
stc
addr16
jmp
clc
mov
mov
fildl
insl
cmc
pop
int
and
push
xor
test
add
xchg
push
mov
mov
adc
sbb
pop
dec
or
jge
repnz
addr16
aas
test
push
push
cmp
ret
dec
lea
stos
stc
xchg
mov
sbb
outsb
mov
and
pop
xor
popl
jmp
or
cmp
fwait
inc
gs
adc
jecxz
movsl
xor
iret
les
dec
js
pop
mov
dec
cld
dec
insb
pop
mov
or
jle
mov
cmp
cmp
sbb
xchg
push
testb
out
loope
test
subb
jp
mov
sbb
inc
lock
and
sahf
por
outsb
mov
jmp
jmp
cwtl
js
mov
sbb
insl
pop
cmp
push
cmp
into
adc
das
call
mov
jp
adc
test
jns
mov
inc
inc
xorl
stos
xlat
addl
mov
in
xor
movsb
or
dec
in
inc
jecxz
popa
cmp
pop
mov
ja
xor
mov
jmp
scas
jp
push
adc
jno
pop
out
pushf
cmc
adc
ficomps
xor
jmp
jmp
cmp
in
int3
jl
lock
push
mov
insl
lret
dec
test
inc
mov
sbb
mov
daa
mov
fstpt
outsb
xchg
push
fs
sbb
loop
loop
xchg
addl
rcr
xor
add
andb
pop
mov
dec
jmp
add
lret
ds
mov
in
lea
out
shlb
mov
inc
push
jns
xchg
pushf
xchg
rclb
xchg
shrd
or
jno
sub
dec
enter
xchg
push
push
xchg
pushf
cmp
int3
dec
cmp
fsts
mov
mov
xchg
out
jnp
mov
outsl
xor
mov
mov
jne
in
mov
mov
mov
aad
lret
fsts
lcall
adcl
or
add
sti
aad
rcr
out
imul
mov
cmp
and
sub
cli
xor
cmp
popa
lods
stc
and
xchg
jl
and
fcoml
jg
xor
andnps
mov
cli
imul
ficoms
je
int3
pop
roll
out
call
xchg
dec
lret
mov
cld
xor
sbb
push
adc
stos
int3
repz
jnp
dec
xchg
mov
pop
or
cmp
out
jbe
xlat
mov
xchg
cmpsb
pop
xor
or
xor
faddl
push
test
ror
mov
fstp
rcr
pop
and
pop
or
andl
in
adc
add
sbb
inc
fiadds
jg
xchg
faddp
or
pop
jno
or
nop
push
mov
arpl
scas
and
push
lahf
inc
hlt
mov
popf
xacquire
mov
push
sub
lds
sub
or
pop
arpl
outsl
ret
out
xor
and
mulb
les
pop
xlat
ljmp
in
adc
mov
cmpsl
test
or
push
or
mov
push
movsb
ds
adc
fs
cli
call
adc
movsl
mov
xchg
sub
dec
test
adc
add
decl
cmp
incl
add
add
mov
and
xor
cmp
jne
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
jmp
lret
fildll
sbb
ljmp
clc
adc
daa
fldcw
fcmovnb
cmp
mov
dec
cmpl
sub
in
dec
call
data16
aad
scas
stc
sbb
bound
bnd
out
pop
mov
mov
adc
and
dec
xor
or
pop
mov
in
popf
cwtl
arpl
shrb
movsb
cmpsl
loop
divb
sub
insl
add
sbb
and
addr16
or
pop
mov
inc
push
adc
fs
xchg
pop
int3
xchg
mov
sbb
sbb
push
cmp
insb
imul
lret
add
sub
adc
cmpsl
push
loop
scas
daa
xchg
and
push
loop
and
sub
push
enter
mov
xor
lcall
adc
test
jle
outsl
and
and
movsl
imul
and
popf
pusha
cs
repnz
popa
sbb
add
jge
dec
lods
add
ljmp
adc
in
dec
add
ffreep
movsb
fiadds
and
or
add
sbb
sub
cli
ss
mov
lahf
out
popa
push
mov
push
or
xor
iret
push
cmp
add
in
mov
xchg
xchg
std
pop
pusha
shlb
dec
dec
aam
fdivrl
mov
imul
stc
jmp
insl
mov
cmpsb
in
outsl
pop
negl
push
or
xchg
jno
push
outsl
movsl
les
xchg
fcom
or
sub
sub
dec
inc
movsl
repz
mov
xor
push
dec
repz
pusha
mov
add
adc
inc
or
xchg
std
push
adc
add
xchg
dec
push
clc
xlat
in
cmpsb
icebp
xor
int3
test
xlat
call
xchg
mov
xchg
outsl
popa
decb
sub
pop
std
cwtl
add
js
sub
fwait
sub
xchg
xchg
cli
lret
push
adc
test
mov
adc
in
ret
sti
iret
cmpsl
ss
stc
and
scas
dec
xor
outsl
lcall
ret
add
andb
lcall
sub
pop
mov
xchg
out
pop
adc
cmp
jnp
mov
ret
inc
pop
cwtl
mov
test
pop
pop
shrl
loope
mov
popf
mov
push
stos
and
dec
and
pop
push
inc
into
cmpl
sahf
inc
jbe
add
sbb
or
cmp
sbb
mov
pop
imul
fidivs
xchg
rolb
add
and
movsb
mov
jecxz
xchg
lods
aas
sub
testl
test
test
sbb
scas
mov
push
mov
dec
mov
adc
pop
jnp
jge
hlt
mov
mov
roll
mov
test
sbbl
jno
mov
popa
lret
push
mov
sar
xor
fistpl
in
pop
in
add
sbb
pop
das
mov
clc
icebp
outsb
or
setp
adc
rorl
ret
mov
xchg
mov
pushf
mov
icebp
sub
xchg
das
pop
imul
mov
daa
idivb
jae
mov
sarl
dec
adc
sbb
arpl
inc
in
pop
sub
cld
or
and
cltd
jl
cmc
jno
sub
es
sbb
mov
mov
sbb
mov
imul
dec
or
sub
cmp
sbb
jle
addr16
mulss
sbb
cmp
mov
add
cmpsb
dec
and
jae
dec
leave
pop
mov
and
icebp
gs
jbe
shrl
jecxz
dec
addr16
imull
daa
xchg
xchg
adc
std
add
pop
or
rorl
inc
aam
dec
fdivs
shl
icebp
mov
mov
xor
jmp
movl
movl
jmp
stos
lods
movb
lods
adc
xchg
out
adc
out
add
cmpsl
fsubs
fwait
and
sub
aam
in
mov
add
movsb
fsubrs
out
mov
addr16
jle
fwait
cmp
aad
loop
stc
test
xchg
out
push
pop
pushl
xor
jmp
fistpll
dec
and
lea
dec
aad
pop
pop
mov
aam
lret
mov
sbb
xor
pop
insb
pop
outsl
sub
mov
adc
cmp
xchg
lods
inc
fiaddl
mov
cltd
bnd
movsb
cmp
in
hlt
inc
sub
test
jne
sarl
movsl
inc
pop
jg
dec
mov
sub
and
leave
inc
aaa
mov
push
mov
cs
mov
pop
sbb
xlat
pop
mov
push
repz
leave
pushf
sbb
ljmp
cmp
das
lcall
mov
repz
sub
xchg
fs
mov
pop
stc
mov
inc
or
and
and
dec
mov
lock
push
cmp
pop
xchg
push
mov
leave
dec
scas
out
xor
mov
pop
int3
inc
mov
mov
into
aaa
inc
xlat
dec
mov
cmp
aam
cs
rcr
jo
dec
mov
setno
dec
add
add
dec
lea
fcmove
idivl
out
sub
mov
push
push
cmpl
sbb
adc
and
js
xchg
pop
out
add
mov
into
fsubl
aaa
or
test
or
sub
xlat
aas
xor
push
mov
xor
or
push
aam
push
nop
pop
adc
mov
mov
aam
add
or
das
or
popf
dec
stos
pop
push
lods
push
stos
sub
jecxz
adc
pop
sbb
arpl
fdivr
in
fidivs
fcmovnu
dec
fmull
push
adc
or
jge
lret
jns
mov
scas
test
sub
cltd
sbb
shll
lds
pop
fldcw
stos
pop
fs
cmp
push
gs
mov
push
and
movlps
inc
jmp
mov
outsl
mov
movsb
mov
aad
jb
sarl
sbb
fiaddl
mov
les
jge
rcl
adc
int3
cs
mov
imull
arpl
push
mov
push
push
sub
call
and
mov
ljmp
or
mov
xor
fs
mov
or
cmp
fists
mov
test
fadd
jnp
test
inc
rcrb
add
xor
and
lods
jle
push
inc
or
jno
adc
inc
sbb
adc
and
push
ficomps
push
ja
mov
out
push
dec
jbe
sarb
lock
xchg
fcomps
add
daa
xor
lret
cli
in
or
jo
mov
imul
push
dec
mov
adc
jmp
mov
lea
xchg
aam
test
mov
jns
push
push
mov
pushf
imul
movsb
xchg
and
inc
in
aas
xchg
mov
in
fcmovnu
inc
add
push
dec
loope
cmp
add
je
cmp
jb
loopne
dec
push
push
adc
test
adc
mov
stc
xchg
cmp
or
sahf
add
jmp
dec
dec
jle
pop
cmp
dec
ljmp
movl
movl
movl
movl
mov
mov
jmp
and
mov
out
jno
mov
push
xchg
in
adc
loope
mov
push
icebp
push
stos
out
repnz
mov
mov
xor
scas
xor
add
or
outsb
aam
and
sbb
xchg
pop
cmpsb
jne
mov
sbb
pop
or
andb
leave
add
bound
imul
cmp
lds
adcl
mov
and
mov
jecxz
ficoms
mov
xchg
sub
xchg
jle
xchg
jle
lock
test
sub
mov
ss
push
mov
xchg
cwtl
mov
pop
cmp
push
aam
jmp
cmp
xchg
sub
pop
mov
jo
adc
xchg
or
push
leave
das
rcrb
cmp
jnp
stc
dec
fwait
lcall
jno
faddl
jb
cmp
lcall
dec
cmp
and
roll
dec
je
mov
xchg
in
xchg
push
pop
arpl
push
inc
mov
xchg
shll
or
int
lret
pop
push
xchg
push
jnp
shr
sarl
or
lods
shr
ret
inc
push
mov
pop
js
lret
adc
mov
push
dec
loopne
ficoml
push
loop
xor
fdecstp
mov
not
push
nop
ss
lahf
and
fmul
les
mov
es
stos
adc
cmc
sub
jg
add
pusha
push
sub
jmp
cltd
or
xor
and
out
jmp
je
add
push
jl
mov
add
mov
loopne
andb
fisubrl
aas
mov
mov
lods
xchg
lods
rol
sub
jp
loope
sub
lret
jle
xchg
in
pop
pop
movsl
adc
and
push
mov
cmp
inc
push
test
xor
xchg
mov
mov
jp
xchg
stc
cmpl
push
inc
cmpsb
jno
sti
or
cwtl
push
loope
mov
dec
mov
in
mov
mov
sbb
lcall
push
addr16
xchg
mov
mov
int
push
ret
ret
mov
lds
in
jbe
jb
insb
pop
and
sbb
clc
xor
mov
mov
dec
loop
out
pop
pushf
das
sbb
push
adc
or
in
mov
push
insb
je
fcompl
mov
mov
add
pop
out
or
outsl
insl
mov
fs
add
aad
cmp
mov
addr16
xchg
dec
ds
xor
dec
sti
inc
xor
js
push
fdivs
or
test
mov
insb
sub
ror
cmp
lea
push
push
pop
ja
push
pop
pop
mov
or
mov
mov
or
movsl
push
iret
loop
popf
outsl
outsl
cmpsl
inc
iret
adc
or
push
ret
mov
hlt
bound
mov
lea
add
xchg
lods
sbb
fmul
in
nop
add
inc
push
push
int3
sbb
mov
dec
inc
mov
lea
movsl
shlb
out
mov
cltd
mov
or
adc
sub
or
ret
ss
enter
cmp
adc
xchg
or
sbbb
hlt
iret
pop
rorl
ds
mov
fwait
ljmp
cli
or
pop
dec
lahf
dec
inc
mov
scas
or
xchg
mov
je
xorb
pop
pop
add
xor
jbe
push
mov
inc
mov
sbb
mov
or
jle
jl
arpl
inc
push
add
cmp
addr16
lret
gs
mov
or
imul
xor
mov
push
jmp
enter
hlt
scas
adc
adc
mov
aas
and
mov
or
xor
mov
jmp
out
mov
xchg
stc
mov
roll
xchg
cli
adc
sarl
mov
std
les
stos
int
pop
leave
cmp
int
mov
out
fs
sub
test
xchg
dec
and
add
mov
and
outsb
ret
sbb
nop
arpl
lret
in
jne
or
iret
xchg
xor
mov
leave
xchg
lea
fstps
jecxz
push
add
lods
test
call
out
aad
fs
notl
cwtl
addr16
inc
dec
lret
flds
punpckhbw
mov
sti
mov
or
xchg
and
xor
mov
inc
ret
clc
lahf
dec
sub
jmp
jns
test
jge
test
add
fistpl
mov
mov
jbe
js
mov
add
rcpps
call
push
popa
mov
push
in
mov
pop
lcall
out
dec
cmp
jl
in
loop
sub
xchg
aam
pop
outsl
pop
mov
mov
push
or
mov
in
loope
test
jg
stos
inc
jmp
sahf
dec
inc
xchg
fwait
sub
out
mov
push
push
leave
mov
test
and
mov
aas
inc
js
push
sbb
xor
adc
jecxz
xchg
xchg
cmp
mov
clts
repnz
sbb
out
cmp
or
push
lret
sti
clc
push
outsb
push
arpl
xorl
int
repnz
sub
jae
not
and
loopne
mov
fimull
sbb
shr
ficomps
stc
add
jle
mov
dec
mov
push
pop
mov
aas
jb
in
fldt
outsl
insl
inc
das
push
mov
lret
adc
lcall
lock
jno
pop
push
pop
and
pop
les
repz
push
adc
jmp
fnstsw
fstps
out
mov
test
mov
pop
std
pop
mov
sbb
or
or
and
out
add
add
rcr
and
test
and
es
mov
daa
ret
imul
jg
cmpb
adc
mov
out
mov
push
mov
pushf
pop
decb
loop
repz
jb
int
pushf
mov
int
mov
adc
xchg
lods
out
push
sbb
lcall
mov
push
pop
jl
subl
lods
xlat
mov
ret
mov
and
jb
in
leave
cmp
dec
leave
or
mov
sub
lea
and
mov
in
lock
clc
adc
ja
mov
mov
inc
mov
xor
std
cli
pop
dec
into
aad
dec
sbbl
fcmove
cmp
mov
add
dec
mov
popa
adc
testl
add
xor
adc
cwtl
out
xchg
pop
addl
cmp
fmuls
aam
arpl
jo
add
dec
test
jnp
push
push
fwait
popa
xchg
lret
stc
es
dec
inc
shrb
mov
out
add
jge
mov
or
notb
rcr
aad
popf
xchg
xor
jge
adc
je
sbb
lcall
repnz
sbbb
mov
fidivl
js
rcrl
xchg
out
test
or
inc
fnstenv
inc
and
fldt
and
push
jge
in
repnz
xor
fcmovb
jg
loopne
daa
adc
push
lea
cld
jmp
dec
std
ljmp
push
jo
jo
mov
jo
out
lea
xor
mov
sub
mov
mov
mov
add
or
xor
div
mov
mov
imul
add
jmp
and
xor
lods
pop
test
jnp
aad
adc
sub
push
loop
adc
jmp
cwtl
scas
into
push
test
lods
imul
js
push
adc
cs
fildl
jl
ret
and
movb
sbb
mov
push
jns
jmp
push
inc
xchg
adc
push
rorb
mov
sbb
push
cmp
lcall
sub
lahf
imulb
push
iret
pop
repnz
cmpsl
inc
int
stos
movsl
stos
aam
rorl
jae
repz
pop
leave
stos
ljmp
iret
rorl
pop
adc
dec
inc
out
stc
movsl
add
ljmp
mov
inc
lahf
mov
insb
and
fcmovnb
pop
dec
daa
jbe
addr16
test
out
loopne
hlt
fs
jb
pop
fs
lods
mov
int3
pop
popf
mov
mov
push
jle
mov
inc
mov
lock
ret
pushf
sbb
sub
mov
jl
xchg
xchg
add
mov
adc
repz
adc
cli
cmc
add
mov
push
rclb
push
push
push
sub
push
rolb
xchg
push
and
xchg
inc
js
fsub
mov
adc
mov
scas
mov
pusha
xchg
xchg
lret
jae
int3
cmp
push
sbb
call
push
pusha
shrb
jg
pop
or
cmpl
scas
aad
test
mov
pop
movsl
sbb
or
cwtl
shl
in
shl
mov
pop
mov
sbb
rorl
into
or
sub
xlat
dec
movsb
rorl
cwtl
scas
pop
mov
push
fidivrl
jmp
insl
rorb
out
mov
mov
dec
or
push
sub
mov
mov
inc
xchg
pop
add
mov
xchg
sbb
iret
xor
test
out
mov
or
shrl
mull
mov
das
in
or
movsb
jb
test
sub
iret
sub
fbstp
out
xorb
rcrl
lea
rorl
inc
cmpl
mov
mov
adc
dec
cli
dec
lods
dec
out
stos
stos
mov
xor
rolb
mov
sub
hlt
insl
xchg
sub
aas
sahf
daa
xchg
into
nop
sub
fnstsw
bound
jle
push
in
xchg
or
outsl
subb
popf
mov
call
or
push
into
into
cld
lcall
in
mov
inc
dec
stos
mov
and
lret
xchg
fiadds
test
loop
sbb
and
insb
aas
rolb
cwtl
out
popa
jge
movsb
sar
insl
scas
mov
test
and
xchg
lock
test
stos
cmp
pop
movsb
cmp
mov
pop
dec
xor
sub
add
xor
xor
push
mov
mov
sub
cli
enter
and
pop
gs
mov
outsb
mov
dec
sbbl
loop
test
or
xchg
outsb
jmp
mov
sbb
pop
imul
xor
mov
addr16
arpl
hlt
push
daa
scas
int
popa
xchg
outsb
ss
dec
cmp
loopne
in
jle
inc
add
test
and
test
mov
xchg
lds
lods
pop
not
sbb
repnz
cld
xor
adc
ficomps
out
mov
movsl
imul
mov
push
shl
xchg
outsb
and
push
pop
aas
idivb
lds
dec
sbb
sahf
or
std
fbstp
out
dec
orl
sub
rcrb
adc
jp
push
inc
sarb
outsl
not
mov
orb
into
xchg
mov
test
or
push
xchg
and
xor
sub
mov
mov
mov
mov
and
lea
mov
mov
lea
mov
and
add
cmp
jb
movl
movl
movl
jmp
flds
and
rorb
or
mov
pop
mov
adc
lods
xchg
push
daa
xchg
fnstenv
sub
lcall
adc
das
leave
loop
or
mov
sub
fisttpll
sub
adc
fldl
mull
lock
cli
stos
jg
test
push
mov
mov
addr16
lods
test
imull
lahf
fidivs
or
mov
adc
rolb
mov
loop
pop
and
pop
mov
mov
lcall
ds
jp
sub
adc
add
cmp
sbb
sub
pop
mov
xchg
inc
ss
scas
push
sbb
in
and
mov
mov
mov
cmp
lret
inc
sbb
and
arpl
or
mov
mov
adc
test
test
xor
mov
sub
jb
stos
xor
jne,pt
xchg
movsb
jbe
mov
xlat
lods
or
das
and
xor
adc
popf
imul
ret
ss
fisubrl
pop
cmp
gs
jp
dec
and
push
nop
jae
sub
bound
sar
inc
les
push
mov
dec
cmpsl
cli
jp
adc
jl
out
movsb
cmp
mov
sbb
in
pushl
pushf
scas
xor
mov
mov
shrb
mov
js
outsl
add
sub
scas
adc
jmp
imul
clc
jae
mull
mov
pop
into
inc
fiadds
loop
sbb
push
leave
push
lock
pop
pop
add
sbbl
icebp
adc
or
xor
scas
repz
cs
or
scas
lods
inc
pop
push
mov
xchg
xchg
test
jb
scas
sbbl
xchg
test
add
pop
or
push
test
inc
bound
pop
xchg
cwtl
cmpsl
mov
sti
jecxz
add
ljmp
lea
sbb
cwtl
rol
in
cmpsb
gs
fs
movsb
mov
jbe
push
mov
pop
and
in
mov
fmuls
cmp
sub
dec
cmpsb
xchg
aas
xlat
pop
cmp
and
icebp
dec
pop
addr16
lods
push
sub
and
fildl
es
lock
add
and
and
mov
cmpsl
push
ja
imul
sbb
daa
fnstsw
mov
xchg
pop
outsl
dec
sub
mov
xchg
adc
sbb
outsb
fnsave
pushl
xchg
js
push
imul
and
adc
xor
in
subb
add
jae
mov
ss
data16
mov
hlt
lods
in
pop
xchg
pop
jne
mov
adcl
addr16
leave
fdiv
jae
mov
out
test
pop
icebp
out
sub
sub
mov
lods
push
incb
xor
cltd
outsl
push
data16
hlt
push
movl
popf
in
sbb
and
and
mov
sbb
dec
pop
inc
movsl
ret
jecxz
or
pop
or
fistl
push
or
gs
pop
ficomps
and
loope
or
add
leave
xlat
dec
fdiv
inc
sbb
mov
adcb
jp
push
xchg
out
daa
dec
xor
pop
cld
bound
sbb
cmpsb
dec
push
in
add
shlb
rclb
jp
add
add
rorb
dec
cmp
dec
jnp
jg
xchg
sarb
sarb
jb
out
cmpsl
mov
test
pushl
inc
enter
dec
jno
lahf
mov
fldpi
jae
mov
pop
pusha
imul
push
add
jbe
rcrb
stos
aas
cmp
lods
mov
test
mov
sub
or
jmp
and
inc
clc
xchg
sbb
add
inc
hlt
movsb
das
add
movl
movl
movl
movl
mov
mov
imul
mov
imul
or
xor
add
xor
mov
mov
jmp
movl
movl
movl
movl
movl
jmp
stc
arpl
push
cmpsl
inc
xchg
add
clc
adc
ret
adc
adc
add
adc
iret
test
stc
sbb
sbb
int
pop
icebp
pop
jo
jecxz
call
add
fcmovnu
fidivrs
pop
jne
mov
mov
jmp
imul
stc
popa
in
pop
adc
test
xchg
fldcw
or
push
add
or
inc
add
pop
in
push
jae,pt
stos
mov
jl
lahf
scas
xchg
fdivl
xor
push
aas
imul
out
sub
xchg
and
inc
clc
pop
push
movsb
out
orl
sub
adc
popa
inc
jb
add
outsl
xchg
inc
adc
pop
pop
into
add
stc
xor
mov
pop
outsb
and
sbb
incb
pop
sub
add
and
iret
addr16
stos
out
les
and
mov
and
and
sub
popf
cmp
jl
popa
dec
mov
ja
and
jb
add
out
imul
ss
mov
xchg
lahf
mov
dec
pop
testb
xor
movups
popa
sbb
adc
mov
fiaddl
out
mov
aaa
mov
test
cmc
cwtl
pop
jo
jle
add
mov
mov
cmp
dec
lock
xchg
movsl
and
in
sub
push
pop
mov
fmuls
dec
mov
sti
das
hlt
mov
loopne
jle
repz
imul
nop
or
mov
sbb
inc
js
or
jmp
gs
fwait
push
sub
mulps
adc
int
add
scas
ret
mull
and
or
fmuls
stos
pop
sbb
or
mov
sbb
and
scas
mov
out
adc
shrb
inc
push
cwtl
sbb
xchg
mov
and
pushf
inc
test
cmp
imul
cwtl
jle
xchg
pop
cltd
or
fchs
outsl
sbb
lds
cmp
add
pushf
jle
mov
pusha
sub
scas
cmp
inc
shlb
xchg
lcall
int
adc
je
xchg
xor
add
adc
push
in
adc
dec
divl
ret
sahf
addr16
test
test
int3
cmp
xor
popf
xor
add
mov
jno
dec
mov
mov
add
sbb
or
or
ja
xor
mov
ds
sbb
test
jmp
je
jle
cli
leave
mov
mov
and
stos
addr16
mov
shl
aas
sbb
lret
sbb
add
movl
push
xchg
loope
add
push
in
loop
add
xchg
jbe
mov
mov
mov
sbb
push
or
add
push
mov
loopne
out
data16
es
pop
adc
dec
xchg
ljmp
dec
fldt
or
loop
or
add
int3
xchg
movl
jle
icebp
fsubrl
sub
and
fcomps
outsb
dec
in
jg
and
out
cmp
out
mov
push
cmp
out
cmp
call
aaa
jecxz
popf
dec
cli
dec
lods
test
xlat
sbb
popf
pop
out
xor
cld
idivl
lret
into
adc
les
cmp
fistpl
inc
dec
or
jmp
cmp
and
notb
pusha
xor
jp
cmp
inc
loop
mov
in
mov
adc
loopne
or
push
je
xchg
cmp
sub
out
scas
stc
in
in
xor
out
ret
pop
fdivl
ja
neg
fstpl
pushf
rolb
insl
cmp
sub
push
rol
inc
rolb
cmp
int3
inc
adc
add
inc
enter
add
int3
and
mov
or
mov
mov
xor
xor
div
mov
jmp
les
mov
xchg
sarl
xchg
adc
mov
and
hlt
movsl
rcrb
cld
add
sub
lods
xchg
stos
scas
repz
rcr
mov
push
add
lret
je
dec
jmp
add
test
sub
adc
popf
inc
stos
xchg
and
inc
test
rcrl
pop
mov
les
xchg
inc
mov
adc
mov
loope
daa
sub
into
adcb
or
adc
test
sub
xchg
inc
jne
mov
mov
stc
dec
xor
push
mov
add
push
pop
or
fistl
insb
test
cmp
rorb
clc
jl
and
mov
stc
clc
adc
sub
sbb
das
mov
add
mov
sub
int
cmpb
out
stc
lret
push
outsb
out
mov
cmpsb
rorb
sahf
pop
pop
or
addl
mov
jl
mov
mov
icebp
jne
das
nop
xor
out
push
int
je
mov
mov
aaa
adc
pop
lahf
repz
mov
cwtl
daa
scas
movsb
into
mov
add
xor
push
aaa
mov
mov
dec
les
pop
pmulhw
dec
ret
cmp
pusha
dec
jnp
jp
push
pop
pop
gs
mov
aam
cmp
stc
sub
imul
int
addr16
into
fcoms
sarl
fs
pop
mov
and
int
dec
sub
scas
fcom
xorb
dec
mov
or
notb
aam
xor
jnp
sbb
jle
outsl
dec
sarl
dec
cmp
xchg
aam
insb
cmp
push
mov
jo
jnp
stc
ja
fsubl
adc
popf
mov
icebp
push
loop
iret
int3
iret
or
inc
loop
xor
inc
lret
das
lea
push
jge
pushf
push
inc
adc
dec
stos
scas
das
jmp
xor
mov
fs
cld
mov
adc
mov
mov
sahf
xchg
test
xor
cmp
outsl
jo
lock
xor
fwait
in
jb
adc
add
pop
xchg
repnz
int
push
mov
jo
incl
mov
pop
push
xchg
shrb
sub
insb
adc
pushf
push
pushf
imul
pop
shl
aad
divl
push
adc
in
jo
fdiv
shrb
sub
mov
jne
fmull
mov
std
js
inc
fidivrl
aaa
nop
lods
icebp
ret
jb
ja
mov
push
push
movsb
mov
loopne
adc
ret
pusha
call
lret
test
aaa
inc
cmpsb
inc
icebp
lret
fwait
adc
incl
lcall
jbe
imul
bsf
mov
sub
fsub
pop
es
js
ja
loope
call
loope
and
inc
jae
xchg
imul
xlat
jp
xchg
mov
in
xor
out
add
push
cmpsl
adc
mov
inc
in
mov
xchg
xchg
jmp
outsb
pushf
cmc
adc
xor
xchg
cmp
adc
cmp
sti
push
fwait
daa
jo
int3
std
and
or
pop
sub
outsl
push
out
andl
mov
sbb
stos
dec
out
push
mov
xor
std
lea
lahf
add
negb
rolb
faddl
ret
bound
imul
in
adc
push
incl
insl
mov
mov
inc
movsb
sti
fwait
lret
mov
lds
lods
push
aaa
stc
mov
xor
test
aam
popl
sbb
cmp
popf
fistl
xchg
bound
jp
or
push
icebp
insl
cmp
cmc
mov
adc
repnz
cmp
test
lcall
adc
mov
xlat
mov
xchg
pop
dec
mov
pop
adc
adc
add
lea
mov
mov
mov
and
or
jmp
mov
cmp
sbb
push
dec
adc
xchg
sub
adc
xchg
scas
fists
ret
aad
xchg
sub
mov
sar
add
jp
cmc
add
push
inc
sub
sar
pop
push
mov
dec
mov
push
arpl
in
sbb
out
or
fstl
das
push
mov
insl
add
adc
in
insl
lahf
sbb
mov
jb
or
stc
mov
pushl
lahf
leave
jnp
ja
orb
lods
pop
roll
pop
mov
and
add
mov
out
scas
cwtl
mov
sbb
test
movsl
inc
sub
out
cli
out
icebp
jmp
or
mov
mov
pushf
push
bound
add
shll
push
xchg
add
or
sub
or
jnp
dec
js
cmp
cs
xor
sub
push
mov
sbb
jae
fmul
sub
cmpsl
cmp
mov
push
mov
cli
xchg
cmp
dec
and
and
jno
jne
aad
jnp
ja
fcompl
shl
scas
scas
out
dec
fwait
cmp
sbb
mov
push
repz
into
rclb
mov
pop
hlt
jg
pop
sub
xchg
or
adc
movsb
push
cmp
mov
iret
nop
fbstp
dec
xor
xor
movsl
xchg
xchg
jno
fsubrs
pusha
cmp
imul
mov
sbb
testl
xor
mov
jne
add
pop
push
mov
fucomip
sbbb
mov
mov
xor
rolb
mov
mov
clc
push
pop
add
pop
movsl
sbb
cmp
scas
cmp
inc
cwtl
int
fmuls
shlb
xchg
orb
jecxz
iret
jg
sbb
xor
pushf
and
test
push
dec
movb
popf
pop
dec
mov
xor
std
mov
popa
cmp
hlt
nop
out
dec
push
jge
pop
not
and
mov
mov
imul
cmp
insb
dec
or
nop
sub
pushf
popa
mov
dec
adc
int
aaa
or
popf
jecxz
and
fimull
xchg
loope
pop
mov
cmc
sbb
addr16
scas
cmp
mov
mov
pop
movsb
pusha
ret
imul
test
xor
sbb
mov
xor
lcall
jbe
and
shll
jmp
sbb
imul
sarl
xchg
stos
arpl
dec
stc
mov
popa
jb
fwait
loopne
cmpl
aam
sar
or
push
lret
add
mov
dec
fwait
jge
bound
sbb
or
pushf
and
mov
in
jne
test
pop
dec
xchg
imul
divl
adc
sub
jl
pop
outsb
ficompl
xchg
ret
push
push
push
mov
adc
or
gs
arpl
fwait
mov
test
je
aaa
inc
and
js
pop
push
aad
ljmp
dec
stos
mulb
test
and
std
gs
cmp
shr
lods
repz
inc
pop
pop
scas
lods
clc
add
xor
jmp
pop
or
imul
mov
stc
mov
mov
xchg
mov
push
add
mov
testb
jbe
mov
aad
data16
jbe
jae
out
loopne
test
das
inc
aas
sub
int
cli
pop
fcomps
sub
mov
xor
out
lds
fcmovne
fistpl
popa
bound
push
loope
sub
inc
lods
pop
push
xchg
hlt
add
mov
pop
mov
ror
push
icebp
movsb
mov
sbb
sub
xor
mov
sub
mov
mov
mov
mov
mov
mov
add
and
or
xor
add
mov
jmp
in
aad
aad
aam
ret
push
shrb
clc
adc
push
push
inc
clc
jmp
inc
mov
sub
addr16
sti
pop
dec
sub
mov
gs
push
push
pop
push
lock
stc
sbb
xchg
insl
in
jne
mov
loopne
fistpll
push
xchg
std
push
adc
xchg
pop
sti
push
xor
sbbb
daa
in
xor
inc
or
test
or
mov
push
jle
hlt
xorb
mov
xor
inc
mov
int3
out
sub
push
sbb
and
jl
cmp
mov
mov
sub
push
mov
std
push
mov
mov
pop
pop
mov
into
push
inc
jmp
mov
sti
and
loope
push
mov
sahf
jno
std
mov
imul
scas
lret
xchg
imul
dec
adc
cmc
jne
outsl
sub
gs
cmp
mov
jl
repnz
xchg
iret
xor
add
or
or
sub
mov
pop
or
xlat
lds
add
or
mov
mov
adcb
xlat
dec
adc
adc
pop
xchg
ljmp
jne
or
lds
stos
dec
mov
jge
xchg
enter
movsb
pop
xor
mov
push
push
mov
sub
sbb
mov
sbb
add
shl
cmc
cmpb
jb
adc
clc
daa
das
and
movl
add
pop
or
orl
shlb
es
add
subb
imul
xchg
subb
cmp
stos
stc
adcl
insl
add
xor
mov
sub
jo
jnp
aad
pop
jle
dec
call
es
std
cmc
rolb
ret
fwait
or
sub
adc
insl
sbb
fisubrl
divb
dec
pop
clc
out
xchg
push
mov
mov
lds
adc
xor
lea
adc
bound
sbb
sub
or
dec
lods
mov
test
and
mov
repz
dec
lret
dec
dec
inc
lcall
cmpsl
adc
cmp
into
mov
mov
mov
jecxz
sub
pop
fcmovnu
cmp
xchg
sub
jg
stc
scas
push
dec
pop
mov
pop
addb
cmc
cld
arpl
scas
adc
mov
inc
mov
pop
xchg
sarb
loopne
shlb
mov
aad
cmp
mov
dec
mov
decb
jp
pop
adc
incb
xor
gs
adc
and
or
xor
dec
sti
mov
in
push
or
subb
push
jg
cmp
pop
inc
jl
jp
jne
ja
adc
les
fdivrs
add
push
xchg
sti
push
push
pop
mov
addr16
inc
ffreep
sbb
inc
imul
sbb
pop
or
dec
add
and
xchg
or
pop
mov
pop
shl
push
int
mov
shrl
int
rcl
add
jbe
push
adc
xor
ret
lods
cmc
sbb
xor
push
test
adc
cmc
rcrl
pop
mov
stos
mov
idivb
mov
push
push
mov
mov
leave
js
outsb
or
adc
dec
ljmp
das
test
adc
jecxz
movsb
pushf
xchg
inc
fscale
cmp
jb
mov
mov
mov
iret
jmp
inc
mov
scas
inc
jo
pop
inc
filds
sbb
jp
adcl
cmpsl
jb
mov
out
clc
dec
mov
adc
jo
add
iret
cltd
lcall
loope
mov
andb
into
mov
and
add
mov
and
sub
mov
imul
sub
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
mov
mov
imul
or
and
xor
jmp
sbb
scas
or
test
mov
adc
in
pop
cmp
jp
nop
mov
jnp
xchg
clc
add
arpl
xor
xlat
cmp
xchg
clc
les
adc
mov
cmc
cmp
xchg
mov
push
clc
fists
jp
pop
mov
fisubrs
add
mov
lods
pushf
inc
xchg
sahf
sub
lds
jle
fists
inc
les
scas
jp
jmp
xchg
jbe
aam
jmp
in
daa
fucomip
mov
mov
lock
in
mov
or
push
pop
or
pop
fistpll
aas
mov
scas
fisubl
mov
mov
and
pop
mov
mov
mov
iret
push
std
sbb
popa
loope
fcoms
mov
cmc
data16
mov
les
mov
outsb
mov
repz
push
pusha
sbb
pop
push
sub
div
test
fiadds
pop
int
mov
les
add
rcl
in
insl
xchg
lret
push
test
and
sbb
aam
out
loopne
xchg
push
mov
cmc
out
add
loopne
xor
push
and
lahf
leave
sbb
testl
cmpsb
pop
shll
sbb
mov
in
jnp
add
mov
pop
ds
cmp
popf
xorb
repnz
or
dec
adc
fcmovu
std
push
ljmp
jo
testb
cmp
mov
les
xchg
sub
xor
lret
fs
mov
xor
mov
int
scas
daa
popf
pop
pop
ss
or
ficoms
mov
xchg
xchg
hlt
jns
mov
ja
push
andb
dec
inc
mov
sub
inc
icebp
inc
xor
imul
mov
pop
adc
stc
popf
outsl
test
and
sbb
sbb
mov
lods
stc
jl
sub
xchg
add
mov
push
dec
aad
jmp
sahf
daa
adc
cmp
test
dec
inc
test
push
pop
out
stc
les
and
jns
inc
cmp
sahf
imul
gs
fmul
mov
inc
inc
mov
lea
imul
mov
xor
cmp
and
pop
pop
lods
popf
sbb
lcall
xor
fsubp
xchg
lret
stos
add
cmc
ss
in
add
rclb
fadd
mov
lret
addr16
aaa
pop
popa
mov
inc
mov
add
mov
ja
sti
stos
movsb
xor
cmp
xchg
hlt
sbb
mov
ret
orl
mov
push
sbb
jne
punpcklwd
adc
push
cltd
lods
imul
cld
std
pop
jg
cmp
jb
bound
xchg
xor
add
pop
fstp
jp
lds
decl
xor
cmp
mov
mov
incb
dec
addl
movsl
imul
imul
dec
or
jmp
inc
ja
or
or
adc
cmpsb
add
stos
jns
or
out
sti
pop
mov
test
sbb
sub
mov
inc
repz
mov
incb
pop
mov
sub
sbb
mov
outsb
loopne
outsb
outsl
popa
push
pop
push
repz
movsl
in
movsb
push
xchg
pop
gs
xchg
test
ret
inc
sbb
enter
les
add
pop
push
dec
ffreep
sbb
fs
fadds
sti
inc
or
jmp
cltd
mov
ss
and
jne
mov
test
ret
jle
pop
sbb
andl
and
xchg
mov
lret
call
sub
ret
xor
fsubs
mov
inc
dec
mov
mov
xchg
push
xchg
jmp
fs
iret
roll
pusha
jbe
jae
pop
sbb
outsl
lea
cmp
add
adc
test
mov
andb
mov
stc
testl
les
and
dec
pop
mov
add
pop
repz
and
pop
jne
int
add
mov
jo
imul
cld
xor
pop
cmp
enter
mov
and
inc
rol
sarb
loopne
mov
sahf
lret
or
loopne
stos
popf
das
mov
and
adc
dec
out
ss
push
imul
arpl
inc
filds
sahf
std
in
dec
fidivrs
sub
loopne
popf
stc
push
add
xor
mov
movl
movl
mov
mov
add
div
mov
or
sub
imul
lea
mov
movl
movl
movl
movl
mov
mov
or
mov
and
mov
or
sub
mov
jmp
stos
mov
adc
jnp
shl
jnp
xchg
clc
adc
adc
fdivl
jnp
out
fisttpl
mov
les
aas
stos
fnstsw
ret
int3
xchg
je
mov
loopne
int
inc
bound
adc
xchg
pop
add
aas
xchg
push
sbb
and
movsl
add
inc
je
lods
movl
popf
pop
popf
inc
loop
add
add
into
jnp
cmc
mov
in
mov
fdivrl
adc
sub
clc
xchg
mov
push
add
insb
mov
pushf
cmpl
mov
movsb
and
xchg
gs
pusha
std
sub
mov
mov
mov
insl
cmpsb
mov
shlb
push
inc
jg
dec
fmuls
pop
arpl
scas
movsl
add
ret
xchg
inc
hlt
jmp
nop
cmc
adc
lods
icebp
pop
arpl
sar
ss
pusha
ds
out
jle
test
cmp
rolb
jle
dec
dec
or
imul
xor
dec
dec
lods
push
pop
mulb
sub
pop
add
xor
addr16
rcr
xor
inc
xor
popa
pop
pusha
imul
jb
sahf
add
jne
dec
imul
inc
mov
inc
call
movsl
faddl
cmp
push
pusha
xor
jns
dec
dec
mov
pop
and
inc
gs
dec
mov
lods
push
mov
fistpll
xchg
xchg
inc
scas
rorl
xor
jo
icebp
push
sbb
sbb
movsb
hlt
add
xchg
movsl
cmpsb
in
out
fwait
daa
aas
les
push
sbb
out
mov
iret
les
or
fs
mov
hlt
jmp
jns
jl
cwtl
jae
cs
mov
ja
sub
and
mov
adc
adc
loop
fnstsw
daa
xchg
inc
xchg
and
adc
sahf
lret
std
inc
fisubl
pop
push
mov
stc
int3
jnp
sub
dec
and
push
cmp
lock
add
stos
jb
jbe
adc
or
cli
mov
ret
andl
stos
pusha
fbld
mov
pop
loope
fxch
pop
push
jl
sbb
mov
mov
pop
dec
push
adc
in
ja
mov
pop
arpl
and
mov
aas
xor
test
insb
in
push
cmp
dec
adc
call
leave
jo
mov
mov
xor
imul
ficompl
push
mov
hlt
or
loopne
scas
or
or
outsl
movsl
jbe
or
cmp
rcrb
int
mov
dec
aad
out
sbb
lods
pop
pop
pop
stc
xchg
es
pop
aaa
faddl
xchg
jae
scas
jno
adc
mov
lock
inc
test
adc
push
dec
adc
adc
xchg
adcb
dec
sbb
cvtdq2ps
push
leave
dec
imul
sbb
fs
add
pushl
sbb
std
xchg
mov
jnp
xchg
ds
or
out
sbb
loopne
outsb
mov
push
dec
or
sbb
insl
lea
dec
dec
jbe
pop
js
lods
mov
sar
js
jne
scas
add
xchg
sub
jbe
rclb
shlb
repnz
xor
outsl
std
mov
ds
jno
bound
enter
pop
out
sub
xorb
rcl
orb
xchg
rcr
jo
jns
mov
mov
push
push
outsl
vmwrite
idiv
leave
pop
inc
scas
inc
fsubrl
in
int3
and
daa
adc
xchg
addr16
xor
push
pop
mov
sbb
aad
xor
xchg
mov
xor
push
and
dec
push
in
cli
dec
add
xchg
xchg
scas
dec
pushl
stc
xchg
or
and
inc
adc
sbb
pop
and
divl
fs
jle
cmpsl
and
lret
xor
icebp
into
enter
pop
xchg
dec
and
pop
mov
push
push
jne
jmp
sbb
xchg
leave
jmp
lods
loop
in
lret
xchg
xor
cli
mov
mov
push
scas
sbb
in
and
mov
mov
and
ljmp
jb
add
movl
mov
mov
mov
mov
or
mov
imul
and
or
and
xor
mov
jmp
jmp
pop
push
sbb
mov
test
popf
fstpt
ja
adc
adc
or
in
cli
fs
jl
push
push
mov
lods
into
inc
out
and
cmp
sub
fidivs
cmp
mov
push
call
xchg
dec
sub
xor
push
xor
mov
pop
pushl
cmp
shrb
dec
mov
test
xorb
mov
test
stc
xor
inc
add
xchg
or
stos
cmp
cs
pop
jno
xor
out
jg
mov
cwtl
add
mov
pop
test
stos
ja
push
clc
mov
or
adc
mov
cmpsl
and
cmpsb
add
frstor
add
out
pushf
dec
sbb
adc
add
popf
mov
pop
sbb
mov
loope
fisttpl
xchg
std
rolb
mov
ss
pop
ljmp
inc
push
arpl
mov
push
pop
dec
mov
or
cmp
pop
cwtl
sub
xor
mov
jne
test
int
aaa
cmp
call
xchg
loop
push
dec
aaa
sarb
stos
lods
xor
js
xchg
add
test
inc
nop
sahf
std
mov
iret
adc
dec
push
mov
cmc
sub
xor
mov
and
test
dec
sbb
mov
scas
scas
adcl
inc
push
ljmp
lret
sub
fwait
mov
and
and
out
cld
int3
xor
push
inc
mov
insb
inc
and
xchg
jl
push
sbb
adc
jge
lods
cmp
adc
mov
sbb
or
pop
in
out
jle
iret
imul
and
out
aad
fisubrs
mov
dec
fxch
xor
dec
popf
pop
test
pop
push
call
filds
jg
rcrb
or
je
cli
les
mov
jae
fmul
sub
aam
jecxz
pop
arpl
stos
jb
add
xor
mov
jae
in
sub
pop
mov
adc
hlt
mov
push
inc
cmpxchg
and
ret
mov
inc
add
add
sbb
pop
xchg
push
inc
addr16
pusha
push
decb
js
dec
fs
sub
rcrb
dec
rol
test
out
adc
push
shll
mov
mov
popa
sub
insb
jecxz
js
mov
aam
ret
xorb
sub
dec
push
adc
or
pop
lock
sbbl
lea
add
or
lock
jmp
cmpsb
fstps
dec
xchg
mov
pop
out
push
or
inc
sub
mov
add
inc
push
dec
cmp
clc
cmp
add
sbb
mov
xor
dec
in
sbb
push
and
js
xchg
aad
movsb
scas
shr
dec
sbb
lcall
int
mov
or
in
aaa
stos
xor
mov
divb
jmp
push
roll
cwtl
dec
xor
adc
mov
jge
or
mov
xchg
sbb
sub
imul
aad
fsubrs
pop
mov
mov
inc
cwtl
and
push
sub
xor
push
adc
jne
sub
lea
inc
test
cmp
inc
jge
push
jae
mov
js
ja
setb
test
pop
jmp
mov
add
xor
clc
mov
adc
clc
add
mov
mov
pushf
sub
and
clc
popf
outsb
xlat
inc
or
aad
bound
pop
lret
insl
xchg
mov
xchg
xchg
pop
in
test
push
and
mov
push
and
test
lock
fsubrs
sub
test
js
mov
pop
fdivrs
aas
out
aas
dec
mov
mov
pop
pop
call
push
mov
xlat
push
orb
mov
xchg
addl
xchg
ret
arpl
mov
cmp
and
pop
sub
pusha
mov
fs
pusha
mov
sub
mov
movl
movl
mov
mov
or
or
mov
sub
mov
movl
movl
mov
mov
sub
xor
sub
mov
movl
mov
movl
mov
add
mov
and
imul
and
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
or
or
mov
mov
xor
xor
sub
mov
sbb
mov
jmp
jbe
testb
inc
movsb
xchg
cld
dec
add
clc
adc
adc
mov
decb
inc
andl
jecxz
mov
hlt
je
pop
pop
sbb
repnz
or
pop
dec
sub
pop
test
jbe
mov
scas
mov
push
sbb
std
outsl
aas
fisttps
fildll
daa
divb
sbb
test
shrb
shrb
jmp
sbb
jo
or
and
and
lret
mov
aad
shrl
pop
les
adc
mov
mov
cmp
mov
lcall
inc
pop
jnp
pop
adc
je
push
adc
cwtl
xchg
mov
inc
rcr
pop
addr16
js
pop
sbb
icebp
jae
cmpl
pop
inc
jge
adc
popa
add
mov
scas
jo
mov
add
mov
jbe
lahf
jg
gs
js
or
inc
inc
push
in
test
mov
out
int3
mov
mov
mov
movsl
inc
arpl
cmp
fstps
or
loop
hlt
add
sub
repnz
in
aad
mov
int
fisubrs
fildll
stos
sbb
adc
push
das
aad
add
add
cmp
icebp
insb
jle
movq
add
fsts
icebp
imull
addr16
push
test
ss
add
xchg
test
mov
xor
mov
stos
in
hlt
sar
scas
ss
enter
push
sub
aad
adc
dec
sbb
pop
xchg
ret
xchg
or
cld
pop
jecxz
sahf
out
jle
xchg
mov
and
stos
dec
shl
or
test
mov
jp
push
loop
cwtl
es
pop
out
ds
ret
mov
pop
xchg
test
test
push
and
sub
hlt
and
cmp
push
cmpsl
dec
add
shll
divb
ret
scas
into
and
cmp
and
ss
ficompl
mov
shl
push
lahf
xor
sub
mov
pop
enter
sbb
ds
bound
pop
out
inc
sbb
pop
sbb
arpl
and
setg
fidivrs
dec
and
call
and
repnz
xor
inc
test
xchg
ljmp
add
add
stc
mov
sahf
xchg
pop
mov
inc
cwtl
adc
lahf
adc
pusha
lea
pushf
cmpsl
sahf
test
stos
fwait
jecxz
mov
mov
loope
cmp
mov
vmaxss
fnsave
cwtl
test
dec
test
and
ljmp
add
pushf
mov
jae
xchg
mov
mov
out
inc
stos
pop
lret
pop
xor
pop
add
pop
push
or
mov
int
mov
mov
pushf
mov
cmp
inc
inc
daa
call
imul
lahf
insb
jae
dec
push
out
pusha
mov
pop
pop
pop
inc
dec
push
push
inc
add
sub
mov
std
xchg
sub
jbe
int3
popf
gs
ret
and
jg
ret
daa
sti
add
mov
aas
hlt
jnp
dec
fistpll
or
iret
jae
lea
jne
imul
jns
shrl
in
sbb
in
test
add
and
sbb
push
sub
inc
loopne
mov
sbb
xor
and
sbb
std
into
out
ja,pn
jno
push
shll
jo
push
jo
imul
fisubl
xchg
jmp
jns
jae
mov
mov
add
pop
and
adc
out
or
lcall
pusha
cmp
jns
inc
cmpsb
cld
sub
push
pop
test
mov
xchg
jmp
pusha
mov
repz
jb
inc
js
sub
pop
push
or
push
sbb
popf
xor
dec
ret
enter
xlat
insl
test
pop
loopne
jecxz
inc
cmp
cmp
dec
xor
mov
pop
sbb
out
and
mov
sbb
jge
out
mov
filds
orb
jecxz
lcall
jb
inc
push
cmp
fcmove
lret
mov
es
clc
test
xchg
mov
insl
mov
mov
jle
adc
pushl
sub
mov
sbb
mov
push
push
push
push
call
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
negb
or
or
or
into
xchg
sbb
adc
adc
or
icebp
adcl
push
push
data16
cmp
int3
rcrb
leave
pop
dec
sbb
arpl
psubusb
movsb
or
sti
sbb
pop
es
dec
lret
and
mov
insb
cmp
sbb
xor
xchg
sbb
push
sbb
inc
jne
mov
in
mov
push
or
mov
xchg
adc
sbb
nop
inc
stos
or
in
arpl
in
aas
mov
movsb
insl
and
xlat
pop
push
mov
cmp
xor
movsl
cmc
xchg
push
addr16
dec
test
jle
inc
shrb
frstor
inc
movsl
aas
sub
cmp
clc
daa
mov
dec
das
push
sbb
push
repnz
inc
imul
adc
test
dec
test
rcll
cmpsl
mov
mov
push
dec
scas
ret
icebp
pop
in
mov
andl
cmpb
sbb
jecxz
mov
mov
ja
ja
cmpsb
out
mov
imul
in
fwait
jmp
fcoms
lret
add
fistps
cmp
lock
aaa
or
jno
mov
aas
mov
sbb
pop
cmp
cld
rclb
cmp
aad
rolb
push
mov
in
imul
sub
sub
pop
inc
mov
fidivrs
insb
loopne
dec
add
stos
cmp
or
inc
dec
mov
lahf
imul
addr16
out
fs
ja
addr16
and
test
push
out
cld
mov
lret
and
call
shl
popf
idivl
xchg
xorb
xchg
rolb
test
inc
push
std
lods
stos
rcr
fimull
add
xor
sti
dec
or
push
pop
inc
mov
in
lock
fstps
decb
adc
std
jg
pop
dec
push
and
pop
jl
push
pushf
push
and
pop
movsl
rcll
push
sti
mov
popf
dec
mov
int3
or
cwtl
daa
push
rorb
adc
out
nop
movsb
cmp
arpl
sbb
loopne
imul
lahf
icebp
push
movsl
cmp
in
push
push
fs
pop
sahf
fsubrl
add
sbb
or
les
loop
mov
push
inc
leave
jnp
jb
xor
aaa
dec
push
add
movlps
push
jmp
cli
mov
inc
es
jecxz
into
jmp
inc
mov
push
jnp
mov
inc
arpl
fs
lea
add
mov
and
add
sbb
clc
in
add
andb
pop
inc
sub
aam
repnz
psubw
bound
insb
in
sbb
pushf
mov
and
push
inc
cmp
cltd
and
addr16
mov
add
mov
lahf
mov
repz
fisubrs
inc
push
leave
push
fs
lds
rcll
add
dec
int
lcall
dec
add
dec
xor
repz
test
aam
sub
cmp
or
mov
push
sub
mov
je
pop
jl
pop
push
aam
call
loopne
and
xor
call
jb
push
icebp
mov
in
xchg
jae
and
add
aam
lods
jg,pn
dec
addr16
xchg
ret
stos
pop
mov
gs
or
movsl
mov
ss
mov
or
std
push
or
hlt
dec
pop
pop
adc
cmpsl
push
in
enter
inc
cli
pushf
cmc
aaa
ljmp
lcall
sub
xor
and
and
xor
mov
cltd
cmpsb
mov
dec
cmc
and
and
push
mov
xchg
push
ljmp
fbld
xchg
out
jp
stos
and
sbb
adc
mov
cltd
sbbb
test
dec
cmp
cltd
out
cli
fisttpll
call
mov
ss
lock
icebp
test
push
lret
sbb
addl
cwtl
add
mov
and
fidivrs
nop
clc
shrd
mov
xchg
enter
fwait
jne
filds
xor
loop
cs
icebp
filds
sbb
mov
lock
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
xor
add
xor
push
mov
mov
jmp
jmp
aaa
pop
xor
push
sbb
imul
nop
jae
adc
adc
mov
cwtl
cmp
add
iret
mov
xor
adc
pusha
test
in
clc
jno
call
das
and
sub
popa
sbb
xchg
scas
push
pop
sub
into
mov
xchg
or
push
inc
xchg
lahf
aad
push
mov
insb
adc
jo
cmpsb
xchg
jne
shll
mov
add
pop
dec
sbb
int3
stc
xchg
sub
lods
fistpl
outsb
mov
and
and
push
cwtl
fistps
int3
mov
add
shr
or
pushf
cwtl
dec
divl
push
mov
sbb
lods
mov
mov
adc
daa
aad
sub
js
ds
sub
addr16
scas
shlb
xorb
jle
sub
mov
and
sbb
pop
jmp
imul
mov
and
cmp
les
mov
movsb
mov
mov
jl
dec
sbb
jmp
mov
sub
or
sub
jnp
int
mov
cmp
add
jmp
push
into
movsl
out
push
xchg
lea
cli
dec
lea
mov
sub
pushf
call
jnp
dec
mov
jle
jmp
push
sub
out
pop
rorb
jnp
adcl
rcrl
dec
roll
pop
push
in
lods
je
xchg
xor
jbe
push
adc
push
stos
cmp
int3
and
xor
loop
mov
cld
jbe
dec
jmp
insl
loope
out
stc
dec
mov
jae
pushf
adc
and
sbb
push
cmp
push
sub
pop
push
aad
xor
mov
xchg
xchg
push
js
pusha
add
inc
pop
mov
call
inc
jns
lods
insl
or
dec
lret
scas
push
aas
xlat
es
incl
add
aam
cs
in
mov
xor
jae
mov
xorb
fwait
ret
inc
pop
push
pusha
movsl
ja
cmp
mov
cmc
arpl
sub
mov
sub
mov
jbe
out
popf
dec
mov
into
lods
rcrb
cs
mov
mov
js
mov
fsubrl
jge
pop
dec
lahf
movsl
add
fwait
or
mov
fs
das
mov
dec
loope
sarb
into
sub
frstor
fistpl
jo
sub
out
jbe
imul
ds
cmpsb
dec
adc
testl
adc
jnp
or
sub
arpl
jge
mov
cmpsl
pop
test
dec
inc
inc
inc
push
sar
push
fdivrl
xchg
test
xchg
add
xor
inc
push
push
sbb
jg
and
gs
xlat
rorl
out
roll
xchg
das
out
sbb
pop
stos
cs
add
ret
jmp
push
mov
push
jno
vmwrite
sbb
sub
pop
nop
fcmovne
fidivrs
cmc
ljmp
xor
movb
hlt
fstpl
test
sahf
xchg
jmp
iret
fwait
cmc
add
cltd
sub
cltd
sub
pushf
stos
push
pop
loopne
mov
cmp
inc
lods
test
push
ljmp
loopne
lea
adc
xchg
ljmp
outsb
icebp
xchg
push
das
xor
and
cmp
jo
pop
repnz
pop
xchg
cli
jno
and
inc
aam
add
xor
bound
lods
inc
test
mov
sbb
mov
mov
or
lret
xchg
xlat
jg
jae
jg
ret
or
cmp
pop
and
mov
mov
adcl
and
push
push
dec
and
sub
jae
call
sub
out
in
push
lret
sbb
call
adc
leave
sbb
stos
pop
je
add
nop
movsl
pop
lret
ror
sub
roll
and
and
dec
es
test
mov
ret
cmp
test
fidivrl
push
inc
cmp
negb
pop
jge
mov
imul
push
into
add
ljmp
sbbl
sbb
lahf
jp,pn
sbb
push
insb
jge
push
fs
stos
sahf
sbb
mov
jecxz
pop
adc
xor
shlb
push
mov
inc
or
cs
xchg
push
jge
xor
div
mov
and
lea
add
push
jmp
dec
arpl
into
mov
pop
xchg
inc
neg
jmp
adc
adc
pop
lods
incl
and
in
outsl
dec
adc
insl
push
nop
jne
addr16
in
lds
cmpsl
jno
xchg
inc
dec
inc
xchg
testb
add
mov
add
and
adc
fmuls
sbb
imul
add
sbb
add
sbbb
xchg
rcl
jb,pn
xchg
mov
push
dec
adc
jmp
pop
mov
xor
dec
repz
lahf
pop
inc
pop
iret
lea
or
xor
add
int3
test
push
in
dec
mov
pop
mov
sub
inc
mov
sti
orb
pop
push
addb
mov
negb
cwtl
mov
sub
jp
mov
cmp
insl
iret
je
mov
adc
adc
ds
dec
dec
and
repnz
cmp
and
in
mov
aad
testb
sub
dec
dec
std
cmp
in
pusha
and
ret
add
mov
out
test
insl
sub
cmp
pop
xchg
roll
rorl
sbb
in
push
cmp
xchg
mov
into
jne
and
int3
repnz
add
cwtl
int
jns
mov
push
add
xchg
inc
aaa
outsl
push
popa
outsl
les
arpl
inc
cwtl
sbb
enter
mov
lods
repnz
mov
iret
cmp
xor
mov
sbb
pop
push
sub
enter
mov
scas
xchg
xchg
push
xor
pop
add
jge
lds
xor
or
push
adcb
cmc
xlat
ds
dec
jge
adc
and
ret
int
into
mov
sub
xchg
adc
mov
clc
mov
sub
popa
pushf
jmp
push
repz
daa
ljmp
adc
dec
int3
add
inc
fwait
cmp
cmp
sbbl
add
sti
or
shrb
dec
inc
or
or
push
jl
cmp
cmp
and
push
push
ljmp
pusha
movsb
xchg
jp
popf
sub
sahf
mov
int
jg
mov
repnz
je
cltd
mov
push
jp
mov
call
adcb
mov
dec
adc
adc
fistps
cmp
movsl
jmp
call
and
stos
mov
jae
sub
clc
xchg
xchg
ficoml
out
fidivl
xor
stc
pop
inc
xor
stos
and
jo
or
jp
dec
iret
inc
jns
lods
fistpll
cmp
cmpsl
pop
inc
sahf
xchg
scas
adc
xchg
sbb
pushf
and
xor
xor
jle
and
cmc
xchg
xchg
mov
or
mov
loopne
push
ds
lcall
fisubs
sbb
pushf
pop
hlt
fwait
cmp
cmp
ja
dec
mov
sub
pushf
sub
dec
mov
pop
xor
test
insl
test
stos
adc
addb
data16
arpl
popf
je
push
push
mov
inc
cltd
and
ds
and
sbb
outsl
xor
cltd
add
movsl
push
push
aam
out
mov
mov
cmp
lock
jae
xchg
or
leave
cwtl
sub
inc
cmpl
or
mov
and
rorb
push
adc
insb
pop
incb
mov
mov
call
xchg
gs
mov
out
aad
movsb
cmp
popf
mov
lea
sbb
dec
mul
stc
loope
mov
out
lock
in
adc
xchg
jne
add
in
idivl
pop
inc
lcall
xchg
inc
fisubrs
insb
in
dec
rol
aad
and
shlb
add
pop
fisttpl
pop
scas
and
loop
lret
mov
pop
mov
push
or
xor
xchg
cmp
popf
js
xorl
cmp
xor
add
adc
inc
loopne
adc
sbb
lret
fldenv
sbb
addr16
rcrl
jg
sbb
cmp
aad
js
and
in
jbe
push
push
jb
faddl
sbb
pop
js
ljmp
and
push
jae
imul
nop
or
sbb
mov
ret
jge
jnp
mov
jo
decl
decl
decl
jmp
sub
jmp
push
mov
cmp
arpl
adc
push
call
pop
lock
dec
cmpsl
push
xor
shlb
cmp
adc
fiaddl
dec
or
lret
aaa
sbb
jnp
loope
jl
out
stos
lcall
dec
mov
cmc
push
xor
push
jb
xlat
mov
adc
insl
xor
xchg
aaa
inc
push
icebp
test
jge
adc
pop
test
sti
jmp
pop
test
test
xor
inc
pop
or
inc
cli
cmp
test
cltd
mov
out
push
mov
jmp
or
test
sub
lea
or
jo
xor
pop
lock
dec
adc
sbb
hlt
push
inc
das
arpl
lock
shl
les
dec
adc
fldt
adc
adc
jmp
in
xchg
cmp
mov
decb
movsb
fs
pop
push
int3
mov
and
int3
xor
and
mov
inc
push
and
rcrl
js
push
arpl
imul
into
lods
cs
insb
add
mov
data16
outsb
sbb
pop
ds
cmpsb
xchg
push
fbld
jae
xchg
xchg
pusha
sbb
jmp
adc
xor
mov
dec
in
xchg
mov
stos
jb
cmp
enter
aam
test
add
lods
js
and
mov
sar
sub
adc
int3
clc
call
sbb
adc
movsl
imul
mov
out
adc
leave
js
loopne
sub
cmpsb
test
xchg
mov
sbb
mov
fisubrs
int
fs
popf
pop
mov
scas
xchg
addl
enter
add
popa
bound
or
mov
pusha
cli
dec
std
insb
insl
test
pop
inc
mov
movsl
jle
mov
xchg
stc
mov
cmp
jecxz
les
test
sbb
pop
cli
sub
rcl
fiadds
aad
in
movsb
iret
mov
xor
addr16
push
push
mov
loopne
pop
jecxz
popf
shll
test
jge
push
in
das
pushf
push
insl
aam
mov
add
inc
pop
popf
jecxz
popf
and
jecxz
sbb
into
xrstors
je
mov
fistpll
add
sbb
mov
and
or
or
dec
adc
jg
fimull
jp
fildll
push
push
shrl
pusha
jle
jmp
add
adc
inc
sti
out
sbbl
test
ljmp
inc
addl
cmp
jns
mov
adc
add
xchg
inc
iret
cmpsl
mov
test
fs
cmp
cmp
outsl
cmp
lahf
sbb
popa
mov
inc
xchg
ret
pop
push
push
adc
push
xchg
xchg
pushf
push
out
pop
clc
mov
dec
int
imul
mov
loop
ljmp
sbb
push
iret
pushf
mov
sbb
push
and
js
sahf
cltd
sub
and
mov
movsl
imul
dec
data16
push
pop
or
jecxz
mov
mov
je
ret
cwtl
sbb
out
or
add
mov
ret
push
mov
cmp
fcmovb
or
sub
pop
cmpb
jne
aam
xchg
arpl
pop
xchg
cwtl
pop
pop
ret
cmp
orl
pop
push
gs
push
adc
jg
push
aaa
les
adc
dec
fidivs
jl
ffree
jb
gs
data16
dec
aam
fcoms
jnp
inc
loop
or
shrl
push
popf
rcrl
mov
cmp
aad
scas
mov
cmp
mov
mov
push
jbe
dec
cmp
adc
ds
or
jmp
pop
and
stc
jecxz
outsb
mul
in
add
mov
sti
mov
cmp
jo
cmp
mov
aaa
ror
out
inc
pushf
mov
xchg
aam
rcrl
or
adc
sbb
xor
mov
fwait
enter
pop
add
mov
nop
push
sub
dec
pop
mov
sub
push
inc
loopne
push
dec
mov
pushf
sahf
out
ljmp
push
mov
and
mov
mov
jmp
ja
cli
orl
outsl
mov
dec
sbb
jecxz
clc
adc
adc
inc
or
or
jo
and
leave
dec
pop
into
push
inc
data16
add
test
cmc
popf
cld
rcr
jge
sbb
lea
xor
rol
repz
test
xor
push
js
push
leave
imul
roll
xchg
out
mov
repz
pop
lret
fcomp
test
in
imul
dec
bound
sti
punpcklbw
ffree
pop
mov
sti
xchg
push
push
adc
cs
divb
es
stos
idivl
repnz
lahf
or
and
push
insl
mov
adc
js
dec
movsb
negl
std
test
or
mov
sub
cmp
icebp
or
pop
movsb
pop
aaa
sub
mov
and
mov
or
js
div
jp
pop
ss
cmp
xchg
adc
pop
adc
ret
pop
fcmovne
fdivs
out
stos
dec
xor
shrb
repnz
pop
sub
jecxz
iret
icebp
mov
xlat
dec
jo
dec
push
ret
jmp
idivb
jno
hlt
jne
mov
xor
pop
xchg
lahf
and
cmp
push
dec
push
lea
mov
popl
sbb
push
ja
imul
xorl
mov
dec
stos
lods
pop
pushf
scas
inc
data16
loope
dec
outsl
lods
mov
jp
or
push
jg
jl
and
lds
jecxz
dec
imul
xchg
xlat
loopne
cwtl
out
int3
or
in
xchg
adc
jmp
inc
aas
jo
das
and
movsb
sti
iret
or
adc
in
pop
jmp
pop
sbb
xchg
dec
sbb
cli
ret
sub
stos
adc
pop
xchg
sti
call
xchg
mov
pop
cmp
out
xchg
ret
inc
icebp
mov
mov
push
dec
cmp
mov
outsl
and
and
js
xchg
dec
inc
out
stc
lcall
fldt
push
add
jl
test
jne
push
das
sbb
or
bound
cmp
xchg
lret
push
xlat
mov
aad
das
scas
jp
repnz
sub
fidivs
xor
stos
rcrb
xchg
dec
and
adc
std
lret
pop
fidivl
fstpt
incl
iret
mov
push
or
cmp
pop
mov
ljmp
fidivs
inc
adc
cmpsl
roll
lret
enter
xorb
inc
push
jo
xor
out
leave
pop
ds
ret
shlb
dec
cli
jle
mov
in
daa
stc
out
bound
and
pop
xchg
cmp
stos
sub
gs
rcrl
mov
dec
mov
adc
std
xchg
fcmovu
adc
out
adc
cmpsl
pop
mov
addr16
jecxz
mov
fldt
fwait
jl
fcomi
push
adc
hlt
mov
int3
push
lock
fwait
testl
cmp
mov
mov
mov
fnstcw
imul
jecxz
test
ficoms
jecxz
push
loop
jmp
and
lret
mov
xchg
cmovge
sub
jecxz
add
fs
popa
sub
mov
push
inc
jl
mov
imulb
leave
push
dec
loopne
pop
sub
addl
adc
js
add
sub
cmc
add
fnstenv
inc
mov
or
stos
fldt
test
scas
rorl
loope
push
lahf
shll
test
inc
insb
xchg
lea
out
psrlw
cltd
add
jmp
stc
jnp
rep
mov
cmp
mov
cld
mov
push
jge
jne
mov
bound
dec
jg
insl
inc
inc
and
icebp
and
rcll
imul
sar
adc
into
mov
inc
imul
sahf
shlb
adc
nop
mov
clc
popf
and
push
xor
dec
ret
push
sub
lods
xchg
setno
adc
movsl
mov
inc
inc
dec
cmp
add
xchg
mov
faddl
xchg
mov
icebp
fadds
shlb
subl
fcomps
lcall
xor
pop
pop
insb
inc
pop
test
pop
xor
add
push
or
dec
paddsw
sbb
push
insb
xchg
adc
mov
mov
push
iret
pushf
cmp
sbb
into
and
lods
add
lock
xchg
pop
fmull
shrb
xor
aas
inc
adc
add
add
mov
push
mov
xor
div
mov
xor
mov
imul
mov
sub
xor
lea
call
mov
mov
imul
mov
or
sub
and
mov
sub
cmp
jne
jmp
scas
fistpl
push
xor
aad
pop
lds
cmp
adc
cmc
mov
jecxz
xorl
inc
cwtl
inc
dec
test
loop
jp
loope
scas
data16
daa
xlat
shl
imul
dec
cmp
aas
ljmp
push
scas
inc
in
outsb
push
jge
push
or
pop
mov
stos
pop
outsl
mov
inc
mov
push
mov
leave
out
and
fldl
pop
mov
sub
bound
add
jb
mov
inc
popa
or
clc
mov
imul
lds
out
and
cmc
xchg
sub
sub
ss
repnz
aas
jmp
sar
fmulp
stos
out
push
jno
and
cmpsl
pop
fildl
scas
fwait
loopne
mov
lret
jnp
dec
rcll
fstp
mov
aad
je
xchg
sbb
and
pop
sub
or
sar
xchg
pop
sarb
add
sub
add
cmc
shrb
lods
xchg
into
xchg
lcall
mov
mov
clc
xchg
pop
cmp
and
mov
xchg
pop
shll
mov
jno
xchg
loope
js
push
insb
aaa
outsb
int3
xor
jle
ljmp
sbb
jns
mov
out
push
sbb
and
cmp
cmp
jecxz
insb
int3
and
leave
jmp
in
std
loopne
fdivs
movsl
jne
fstl
xchg
push
adc
mov
cwtl
push
dec
pop
imul
dec
in
pop
test
xchg
fists
loope
xor
out
lahf
clc
aaa
or
aas
stc
mov
ss
or
lds
std
push
int3
scas
nop
push
nop
jns
movl
mov
jne
dec
lcall
sub
cmp
in
pop
adc
dec
push
sub
data16
call
pop
stos
imulb
mov
addr16
jmp
movsb
fwait
xchg
imul
add
push
push
iret
lret
jp
jb
pop
sbb
sbb
push
es
sahf
lahf
dec
rdpmc
push
mov
outsl
stos
cs
fs
sub
pop
dec
std
insb
add
pushf
neg
in
or
xor
mov
popa
stos
fmull
inc
fsubs
sub
or
push
mov
mov
ss
push
std
js
jecxz
sbb
jne
pop
enter
je
dec
arpl
and
or
insl
lea
in
mov
or
jl
test
mov
in
push
jno
bswap
mov
clc
fs
dec
cwtl
imul
sub
dec
jecxz
xchg
sub
push
outsl
cmp
jb
mov
and
cs
dec
or
repz
push
push
jnp
jg
cs
mov
ja
and
sbbl
std
or
je
inc
in
in
aam
mov
mov
sub
pop
or
gs
jne
mov
inc
jne
iret
xor
cs
jbe
xlat
xchg
add
sbb
lea
gs
mov
add
lcall
ss
dec
dec
pop
add
mov
outsb
sub
lds
jmp
cmp
or
pop
mov
sbb
mov
icebp
in
dec
or
mov
je
adc
mov
mov
jno
shl
sbb
imul
adc
pop
aad
iret
push
js
cltd
popf
rcll
test
out
nop
inc
lret
shlb
push
je
inc
rcl
into
jbe
sbb
std
dec
mov
fadds
mov
xchg
or
jae
cmp
xor
add
sti
adc
jno
pop
fildl
std
bound
add
mov
adc
out
flds
loopne
mov
leave
popf
cmpsl
push
setne
hlt
ljmp
or
sbb
outsl
fists
xchg
mov
cmc
popa
aam
mov
mov
xor
fmuls
pop
pop
in
ja
cmc
ja
faddl
xor
out
sti
arpl
inc
xchg
dec
mov
add
jae
aad
lahf
sub
insl
insb
inc
mov
push
es
inc
push
xor
lds
fistpl
cwtl
ret
lods
push
iret
sbb
or
push
cmp
sub
shr
scas
cli
lcall
insl
mov
imul
add
nop
test
adc
sub
dec
xchg
xchg
outsb
push
xchg
cmpsb
inc
clc
adc
adc
dec
and
leave
inc
frstor
dec
std
mov
push
sahf
cs
xchg
mov
fcmovne
inc
or
jns
sar
dec
mulb
or
call
bound
inc
js
inc
pop
out
outsl
mov
ficomps
call
in
dec
mulb
scas
push
fs
ficoms
xchg
sub
push
fisttpll
jp
xchg
insb
icebp
mov
test
je
fsubl
lods
mov
jo
leave
les
or
mov
dec
xchg
scas
icebp
testb
das
xor
aad
addb
and
push
push
cld
fsubp
jp
gs
add
stos
loopne
xchg
cmp
into
xchg
popf
lcall
adc
repz
xchg
add
dec
sti
stos
je
fsubr
add
sub
adc
cwtl
push
int3
loopne
cmp
mov
push
mov
jmp
cmp
jp
xorb
lcall
fistpl
shll
stc
push
add
lcall
in
loope
inc
loopne
outsb
insl
scas
cltd
ds
sbb
popa
lret
pop
lods
lods
dec
mov
pop
jae
hlt
xor
sub
pusha
mov
test
sbb
lret
xor
lock
mov
outsb
and
insb
mov
mov
ret
adc
dec
arpl
dec
mov
imul
cld
adc
stos
adc
sbb
ret
adc
popf
test
xchg
sub
pop
ret
mov
sub
mov
or
test
and
push
adc
push
ss
icebp
jns
and
dec
popa
cmpsl
frstor
loopne
aad
pop
sarb
dec
call
add
adcl
fildl
pop
jo
and
and
les
imul
repnz
and
or
rcr
inc
shlb
testb
adc
add
xor
xor
push
xchg
dec
notl
inc
scas
imul
mov
lcall
cmp
xor
scas
xor
stos
lock
pop
repz
fmuls
sbbb
mov
cwtl
xlat
lcall
fwait
cs
fwait
data16
xchg
mov
rcl
lods
adc
sub
push
cmp
push
js
sub
nop
les
je
mov
xor
in
cmpsl
adc
xlat
and
add
xchg
sub
nop
loop
jae
dec
js
jecxz
in
mov
imull
pop
pop
in
push
fldl
pop
adc
mov
nop
mov
push
adc
fmulp
jae
das
jns
rcrl
fsubp
pusha
test
jb
dec
insb
jno
pop
aas
clc
xor
and
outsb
iret
cli
cld
lahf
insl
jbe
jnp
or
push
xor
jns
cwtl
pop
scas
aas
xchg
fcompl
push
mov
xchg
jae
or
xchg
out
cwtl
and
int3
mov
aas
es
flds
cmpsl
push
pop
mov
loopne
mov
lods
imul
faddl
adc
cmc
rcll
cli
movsl
or
ljmp
cmp
outsl
out
in
out
pop
pop
cltd
addr16
fmull
mov
cmp
sub
loopne
dec
es
xor
imul
fmull
or
and
mov
in
jne
dec
xchg
iret
scas
loope
or
xchg
shl
pop
pop
and
add
xchg
ljmp
insl
lret
dec
lret
rclb
pop
sti
fwait
pop
test
out
mov
les
test
lret
cmpl
xor
jle
mov
xor
add
sub
jle
mov
xor
and
imul
sub
pushf
popf
enter
sbb
mov
ljmp
mov
stos
add
pushf
or
mov
outsb
dec
daa
rol
xchg
inc
aam
sbb
and
inc
orl
outsl
add
push
cs
jbe
xchg
fs
inc
das
sbb
mov
cli
sub
shlb
sbb
les
outsb
cmp
sbb
insb
jp
mov
cld
push
jae
test
lock
dec
nop
pop
pop
inc
stos
insl
mov
in
lds
subl
xor
mov
and
push
cmpsl
push
pop
xor
div
xor
xor
add
xor
lea
push
mov
mov
imul
mov
and
mov
or
add
mov
and
mov
div
push
mov
add
push
mov
mov
and
xor
and
mov
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
jmp
imul
pop
int3
push
push
outsb
call
testl
adc
pop
mov
sub
out
mov
mov
cmp
push
clc
cli
sub
add
popf
cld
inc
mov
gs
xor
and
xchg
dec
inc
xor
push
and
pop
out
add
add
std
fiaddl
lahf
loope
in
inc
sti
cwtl
scas
orl
add
mov
mov
cli
sbb
push
xor
cmp
lcall
jge
jns
in
ds
loopne
leave
cmc
ficoml
into
mulb
in
sbb
sbb
jle
mov
shrl
cli
pop
lea
test
adc
jp
mov
add
and
xchg
jnp
outsb
in
adc
mov
pop
aad
push
dec
fdivl
cmp
add
jp
fcmovu
stc
sbb
and
aam
and
push
rol
imul
cmp
pop
pushf
mov
not
sub
fmuls
inc
into
test
scas
pop
adc
scas
xor
and
fldl
int
leave
mov
or
scas
adc
clc
xor
xchg
xchg
cs
scas
dec
movsl
push
mov
insb
icebp
fwait
inc
xchg
or
xchg
push
jae
push
cmp
xchg
in
xchg
xchg
mov
push
xchg
out
cmp
test
push
in
in
insl
test
cld
sub
xchg
adc
jmp
ret
xlat
mov
ret
mov
jle
cmp
aas
out
pop
push
in
sbb
es
sti
das
dec
sub
dec
nop
mov
mov
adc
add
je
cltd
cmp
xchg
xlat
cltd
mov
dec
dec
std
pop
hlt
adc
pop
stos
test
sub
mov
add
jnp
add
mov
mov
mov
pop
jo
iret
mov
jecxz
pop
pop
ja
inc
mov
push
dec
mov
mov
inc
adc
imul
xchg
sbb
fisttpl
outsb
loope
jno
cltd
pop
add
jne
inc
push
fcmovnb
and
xchg
lret
repz
loop
ja
dec
xchg
add
push
movsb
fcmovb
xchg
push
test
jbe
movb
xor
ret
cmp
dec
out
adc
inc
and
jo
loopne
sbb
cmp
jbe
push
push
bound
subl
dec
add
mov
imul
and
orb
stos
xchg
enter
aaa
daa
test
sub
enter
push
aad
pop
dec
or
adc
push
and
and
inc
pop
adc
jo
lea
jae
clc
mov
add
roll
inc
loopne
push
shll
ljmp
add
mov
push
mov
push
pop
int
push
out
nop
movsl
pop
into
inc
mov
add
int
shl
xor
insl
jno
out
sbb
stc
jg
sbb
test
call
popa
andb
sar
sbb
notb
pop
addr16
rcrb
popa
dec
lods
out
out
dec
inc
jbe
out
pop
cmp
lods
inc
test
jle
mov
jno
mov
and
cmp
sti
popf
or
imul
push
xchg
subl
in
rolb
pop
sbbl
inc
mov
sbb
fldt
add
dec
jbe
jle
pop
fcmovnu
leave
xchg
cmp
xor
mov
fwait
je
fwait
sbb
daa
mov
xor
jl
or
ficomps
test
xor
dec
les
call
pop
mov
cmpsl
push
insb
mov
push
and
push
xchg
cs
sub
cmpsb
and
mov
adc
cmp
dec
dec
rcr
inc
pop
mov
push
xor
mov
add
jecxz
xchg
push
stos
xchg
mov
mov
call
clc
dec
mov
sub
fldl
aas
pop
test
push
mov
lcall
inc
cmc
je
das
stc
test
and
daa
push
pusha
mov
je
push
outsb
shr
mov
add
inc
push
mov
lods
jle
outsb
jbe
sub
sahf
jle
xor
outsl
mov
xchg
das
cmp
inc
push
aad
and
sbb
pop
sub
jecxz
dec
sbb
addr16
jle
mov
dec
arpl
pop
jl
call
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
jmp
lahf
bound
push
mov
into
inc
mov
push
aam
imul
xchg
push
mov
adc
lahf
dec
xor
add
inc
pop
insb
or
sub
enter
xchg
inc
aaa
sahf
sahf
imul
movsl
iret
lea
push
cld
aam
daa
outsl
sbb
insb
fcom
mov
push
push
mov
test
mov
mov
cmp
ds
gs
shl
stos
inc
mov
nop
xchg
pop
stos
lods
fstl
js
shll
pop
cld
test
pop
scas
mov
mov
add
insl
aas
push
enter
bound
js
inc
push
fldt
mov
fisubrs
pop
daa
cld
data16
cmp
jp
iret
testb
jmp
inc
fnstcw
push
xor
sub
or
popa
dec
icebp
pop
repnz
std
dec
mov
xor
sub
std
pop
and
mov
jno
cmpb
sbb
mov
loope
js
inc
xchg
or
mov
sbb
sbb
jbe
xchg
dec
ret
push
icebp
fstpl
arpl
pop
xchg
add
sub
cmpsb
push
rsm
mov
xor
ja
pop
mov
or
fisttps
inc
add
jg
jmp
cmpsb
mov
lcall
sub
push
stos
lahf
sbb
jno
adc
cld
roll
andb
mov
loop
xor
mov
test
pop
add
cs
cmp
xchg
xchg
or
mov
sub
xchg
call
or
add
mov
xchg
sub
je
mov
outsb
xor
pop
notb
gs
jp,pn
cmpsb
pop
outsl
jmp
jecxz
push
jns
or
loopne
xor
icebp
mov
imul
je
fidivrl
mov
outsl
dec
insl
cmp
sbb
sahf
es
cmp
xor
sbb
scas
sub
push
push
stos
xchg
repnz
cmpl
or
adc
cltd
xchg
cmp
or
outsb
push
pop
sbb
xchg
mov
dec
mov
add
nop
push
jb
test
mov
xor
jg
jp
mov
pop
jmp
xchg
mov
dec
js
adcl
mov
add
cwtl
sub
sub
clc
xchg
clc
lods
mov
repz
lock
cmpsb
or
xor
out
xchg
sarb
data16
pop
xchg
sbb
cli
xchg
and
outsl
pop
cmp
xor
movb
xchg
add
add
dec
stos
adc
mov
jo
mov
into
int3
push
pop
movsb
mov
mov
mov
sub
or
push
fidivrs
adc
xchg
cmp
and
mul
bound
jae
rcrb
push
xchg
daa
pop
mov
mov
dec
scas
shlb
rcll
push
push
into
mov
cltd
arpl
imul
shr
dec
mov
shll
and
sbb
sbb
jne
xor
jp
scas
cmpsl
cmpsl
inc
or
and
push
cmp
mov
jb
inc
lods
test
dec
jb
notl
imul
and
popa
and
je
dec
xor
pop
mov
pop
xor
aam
and
jne
loopne
cwtl
bnd
fidivs
xorb
xorb
lret
bound
test
mov
pop
fs
cltd
test
push
pop
es
sbb
arpl
pop
out
add
jns
iret
stos
int3
enter
sti
sub
xchg
data16
jmp
sbb
sbb
mov
pusha
daa
and
cs
int3
adc
sbb
and
or
lods
dec
adc
jae
idivb
jmp
push
jo
notb
or
push
sbbl
lahf
xchg
popa
into
fmuls
testl
outsl
mov
sbb
pop
pushf
add
jb
adc
push
mov
bound
gs
imul
inc
jne
jecxz
push
dec
add
jp
ret
xor
or
daa
mov
sbb
mov
fadds
das
ror
cltd
test
cmpsb
out
sbb
xchg
mov
cmp
xchg
jno
pusha
jle
dec
out
cmpb
pop
loope
es
ljmp
add
xchg
push
or
push
jb
inc
sub
out
mov
jmp
mov
push
mov
into
mov
mov
add
adc
xchg
and
mov
xlat
out
pushf
movsl
dec
mov
aam
and
sbb
sbb
adc
xor
jns
lret
dec
lret
jle
inc
cmpsl
rcll
pop
lcall
mov
push
mov
dec
leave
sbb
xor
adc
lcall
les
mov
int
or
hlt
sub
stc
add
xchg
jl
inc
or
add
push
arpl
faddl
mov
dec
xchg
scas
inc
bound
sub
mov
lds
repnz
loopne
jp
pop
imul
pop
insb
and
push
and
pop
adc
inc
cli
out
dec
fsubr
and
fcomip
inc
addr16
sub
es
dec
sbb
xchg
std
mov
mov
xchg
jg
out
or
sub
xchg
out
insb
mov
push
je
push
popa
repz
cs
mov
testl
icebp
pop
pushf
jl
jecxz
xchg
addr16
pusha
mov
insb
pop
mov
aas
movsl
es
pusha
cmp
andl
cmp
and
cmp
shrl
fucomp
mov
xchg
jg
in
lret
mov
xchg
imul
xchg
insl
push
jnp
add
inc
addb
cmp
add
or
adc
xchg
jle
enter
cltd
push
inc
fbld
or
dec
popw
jp
adc
fdivrl
test
fisttpll
bound
lahf
inc
test
jle
rorb
cltd
stos
mov
sub
dec
mov
repz
xor
popf
iret
fidivrl
xor
add
lahf
and
xor
aam
push
fwait
jle
insb
dec
and
jmp
sub
sar
cltd
mov
in
add
cwtl
ss
sub
mov
sbb
pop
jle
inc
lds
addr16
ss
das
cltd
aad
xor
leave
and
or
inc
lret
pushf
sahf
mov
add
add
adcb
daa
pop
rcll
in
clc
call
xchg
or
xlat
aam
stos
xchg
out
cmp
ljmp
out
lods
popl
iret
push
sbb
adc
mov
dec
mov
int
inc
jmp
stos
fdivp
divl
call
movsb
jnp
loopne
xchg
imul
insb
jp
addr16
jmp
mov
mov
or
cmp
iret
pop
adc
sub
clc
push
nop
dec
xchg
test
dec
jle
test
cmp
xor
pop
xor
add
test
outsl
mov
enter
sti
sbb
fs
js
ret
jnp
sbb
xor
inc
xchg
xor
jge
pop
lock
add
jge
push
cmpsb
cld
cmpsl
dec
fwait
test
repz
fcomip
insb
xchg
rcl
insl
push
push
lds
inc
lea
jo
cmp
shl
xchg
add
fmull
in
or
inc
or
push
push
stos
shlb
iret
call
xchg
call
imul
cmpsb
lret
shll
iret
add
or
imul
push
jl
jbe
in
xor
bound
fwait
dec
fincstp
ud1
pusha
sti
dec
jle
data16
push
fmull
insl
mov
cmp
pop
jae
in
inc
int
jg
pop
pop
filds
in
dec
pop
cmpsb
xchg
lods
cltd
dec
add
and
clc
adc
and
jge
insl
mov
push
mov
mov
push
dec
sbb
scas
loopne
xchg
adcl
mov
jp
dec
mov
fidivl
out
js
in
xor
fdiv
mov
push
not
or
cmp
rolb
fists
mov
add
sbb
repz
or
in
mov
or
xor
ljmp
inc
push
subl
imul
and
and
inc
xchg
lret
loope
xor
pop
outsb
mov
pop
push
sub
dec
call
loopne
rorl
add
lahf
jns
mov
jecxz
mov
dec
lahf
fisubrs
jmp
shr
jge
xlat
jbe
cmp
leave
imul
aaa
loopne
and
sbb
push
jle
inc
sub
sbb
in
mov
sub
mov
mov
mov
sub
jmp
sbb
xchg
and
ja
test
inc
int
outsb
or
adc
popa
push
jle
ret
add
push
sub
lds
lret
cli
and
bound
aaa
jbe
sub
fcomp
mov
insl
add
adc
mov
imul
imul
lcall
out
lcall
mov
mov
push
scas
std
and
inc
lahf
in
stos
cmpb
adc
mov
frstor
movb
in
pushf
dec
mov
lahf
out
test
outsl
iret
push
cmc
sub
pop
lret
lcall
xorl
mov
add
push
popf
xor
dec
fcomp
inc
inc
adc
jb
idiv
adc
dec
insl
subl
in
add
cmp
fcomps
push
jle
popf
mov
jp
xchg
int
out
lea
xchg
cmpsl
mov
inc
pop
xchg
adc
test
add
pop
es
and
out
cmp
add
jae
ret
xchg
and
loopne
leave
andl
rorb
repnz
rorb
xchg
lds
mov
mov
ror
and
inc
out
sbb
jmp
xor
sarb
loop,pt
fistps
cs
fisubrs
xor
xor
ljmp
cmpsl
in
es
into
mov
dec
fdivr
xor
or
inc
repnz
pop
lahf
shlb
ret
scas
mov
push
test
loope
xor
jbe
pop
sbbl
pop
dec
or
adc
and
sbb
push
xchg
xchg
stos
incb
sub
iret
into
inc
sub
mov
mov
aad
test
jp
leave
inc
sbb
jl
jb
outsl
aam
jo
aad
aaa
loop
movsb
push
mov
inc
jnp
ficomps
insl
jp
sub
pop
ret
daa
ds
inc
or
sbbl
and
data16
xor
xchg
inc
aas
pusha
mov
xor
js
ljmp
or
insl
cltd
hlt
adc
jg
data16
push
push
xchg
stos
les
cld
lds
sarl
inc
mov
cmp
inc
sub
mov
xchg
push
push
dec
in
add
lahf
and
stos
mov
shlb
xor
inc
xchg
stc
andl
andb
xlat
jne
push
jmp
pop
outsl
cltd
jnp
ljmp
sub
push
lcall
dec
jge
mov
xchg
ss
repz
idivl
mov
inc
cmovle
jno
pop
aad
insb
cmc
rcrl
icebp
push
out
dec
fcmovnbe
insl
lea
cltd
jecxz
or
pop
mov
xchg
cmpsb
ljmp
xchg
stos
dec
arpl
addl
lea
cmpsl
fwait
rep
fnstenv
fmulp
js
mov
pop
or
push
dec
cltd
test
jp
push
mov
or
mov
add
pop
clc
add
loope
dec
pop
pop
dec
sub
cmp
pop
push
mov
out
xchg
bound
loope
mov
popa
insb
test
dec
iret
or
xchg
popf
push
cli
lods
push
pop
lea
aas
adc
cmp
rorl
cwtl
out
cmp
inc
sti
pop
cld
mov
xchg
xor
or
dec
orl
lods
lret
scas
pushf
outsb
js
jne
aas
jg
push
mov
xor
inc
mov
es
cwtl
into
pop
and
into
or
pop
add
and
jo
pop
add
rcll
rcrb
ror
mov
jns
mov
or
mov
subb
sbb
popf
outsb
cwtl
test
lods
out
out
inc
arpl
xlat
mov
cmp
sahf
xor
mov
lahf
push
dec
iret
ds
mov
xchg
je
or
jnp
xchg
inc
arpl
adc
lods
add
sbb
cmc
add
ljmp
pop
fmull
por
adc
testb
jmp
adc
mov
mov
mov
mov
cmc
adc
ret
jg
xchg
stc
int
sub
jmp
stos
and
loop
std
sti
add
inc
clc
hlt
les
mov
xor
arpl
fwait
add
or
addb
pushw
sti
shrb
lock
pop
dec
add
jb
mov
mov
pusha
mov
push
cmpsl
mov
enter
mov
or
jge
mov
push
clc
dec
mov
movl
jmp
mov
test
adc
inc
and
adc
in
clc
adc
adc
fwait
iret
sub
or
lea
cltd
test
and
inc
jmp
mov
jns
or
outsl
stos
imul
pop
enter
push
push
lods
xorl
pop
jecxz
aam
lret
push
loope
and
mov
aam
int3
fiaddl
and
inc
out
sub
pop
jge
mov
mov
xor
push
cmp
pop
stos
mov
and
mov
cli
es
test
push
xchg
inc
jno
sbb
clc
xorl
sub
out
sub
adc
pop
inc
jge
test
inc
ret
lea
inc
or
scas
das
repnz
or
cmpsb
rorl
sub
pushf
inc
xor
psrlq
xor
jl
lcall
out
cs
scas
outsl
mov
or
pushf
imul
xchg
sahf
push
cli
out
jbe
dec
in
mov
and
rorl
xchg
nop
scas
and
or
mov
js
pop
repnz
xor
adc
mov
clc
pop
push
iret
push
in
add
jge
cmp
loope
insb
jbe
jns
xchg
jge
jns
adc
mov
jecxz
or
enter
ds
loopne
out
in
push
loop
adc
addr16
sbb
jne
cmp
dec
and
or
cmp
xchg
push
loope
push
test
pop
out
xor
sub
sub
pop
pop
mul
xchg
insl
dec
imul
inc
insb
xchg
in
xor
pop
outsb
mov
xor
std
jge
cmp
sarl
push
ror
sbb
adc
inc
mov
inc
add
sar
arpl
adc
rorl
scas
sub
jecxz
or
test
jmp
xor
scas
loopne
mov
lahf
pop
inc
insl
icebp
jge
popl
push
fistpl
xchg
cmp
outsb
sti
es
pop
and
pop
cmc
enter
andl
add
ret
push
jno
in
push
mov
xchg
mov
push
pop
inc
call
sub
adc
push
cmp
xchg
sbb
sarl
mov
mov
xchg
dec
ret
pop
mov
sub
aaa
pop
pushf
cmpsb
sub
pusha
and
mov
add
mov
das
sar
in
nop
push
iret
mov
xchg
push
xchg
ret
push
sahf
and
orb
sahf
cmp
addr16
push
in
lock
movsb
push
cmp
push
cmpsb
pop
pusha
das
lock
jnp
in
fs
fmull
mov
cmc
lret
sbb
ljmp
inc
nop
insl
ljmp
jmp
mov
dec
or
push
popf
idivb
ja
das
stos
scas
cmp
xor
popa
cwtl
mov
xor
mov
mov
std
mov
iret
fwait
push
cmpsl
shl
or
jb
test
daa
lret
iret
hlt
lahf
sbb
enter
push
out
sbb
mov
or
mov
and
data16
jg
rorb
ss
mov
push
out
stos
mov
inc
push
fwait
hlt
sti
pop
lahf
sahf
pop
movsb
adc
sbb
and
movsl
rolb
pop
mov
push
jg
sbb
xchg
mov
mov
mov
popa
arpl
out
aam
sub
aad
loopne
clc
enter
aas
cmpb
clc
hlt
insb
jne
jmp
stc
push
sahf
inc
sbb
mov
mov
dec
fdivs
mov
js
shl
add
dec
div
iret
hlt
fs
popa
and
sbb
adc
incb
in
test
cld
sbb
and
adc
imul
stc
scas
int3
ret
ljmp
lcall
push
pop
sub
sub
or
fadds
dec
jbe
adc
orb
jno
rcrl
xor
dec
xor
mov
and
adc
mulb
cld
fs
dec
adc
pop
add
xchg
xor
mov
or
aaa
popa
mov
je
mov
push
mov
xor
das
mov
loop
and
jno
inc
sbbl
ja
fsubl
dec
mov
sub
fs
stc
sahf
cmp
leave
adc
repnz
xorb
inc
add
gs
mov
mov
mov
mov
jmp
notl
sub
das
cmc
ljmp
add
adc
notb
adc
sbb
dec
arpl
add
add
sbb
pop
dec
jge
test
fabs
pop
cltd
sti
and
rcll
dec
mov
mov
fcomp
add
push
and
sbbb
mov
orb
pop
fisttpl
mov
and
fcomps
popf
icebp
push
dec
popa
push
and
icebp
out
test
test
jb
add
lods
inc
push
dec
add
pop
dec
push
dec
xchg
xor
ror
dec
or
aam
mov
xchg
divl
jmp
fs
ds
fs
xchg
jl
inc
adc
push
pushl
inc
mov
iret
inc
in
jge
sub
sbb
dec
add
or
add
aaa
in
or
push
xchg
push
pop
xchg
test
xrelease
dec
icebp
sbb
fs
xchg
call
jp
or
xchg
std
mov
push
stos
in
sub
push
pop
and
cwtl
js
push
push
sbb
cmpsl
adc
xor
add
arpl
xchg
and
inc
sahf
out
rep
add
sub
pop
lods
arpl
sub
sub
push
scas
pop
lea
sti
in
add
and
dec
mov
scas
or
add
cmp
pop
jl
stos
ljmp
stos
mov
and
push
iret
xchg
fstpt
push
mov
repz
hlt
lods
lahf
add
adc
jns
pop
aas
xor
fs
data16
xor
std
jno
sub
jne
sub
xor
cwtl
cld
mov
xor
inc
jle
mov
add
int
insb
mov
lods
into
jo
adc
add
mov
imul
adc
add
xlat
sarb
mov
jge
xchg
jnp
pop
enter
pop
roll
scas
stos
lahf
sbb
jno
push
xchg
imul
aaa
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
mov
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
and
add
xor
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
xor
mov
mov
lea
mov
mov
or
mov
mov
or
mov
mov
sub
add
xor
xor
lea
mov
sub
mov
movl
movl
movl
movl
movl
mov
and
add
mov
and
mov
imul
mov
xor
div
mov
push
sub
mov
mov
movl
movl
mov
sub
xor
pop
div
mov
xor
push
sub
add
mov
mov
movl
movl
mov
pop
div
mov
xor
xor
imul
sub
div
mov
xor
mov
movl
movl
movl
movl
movl
mov
mov
and
mov
div
xor
add
mov
div
sub
leave
ret
push
mov
sub
push
push
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
xor
mov
xor
mov
or
mov
mov
mov
or
or
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
mov
add
adc
and
and
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
mov
xor
or
mov
or
lea
xor
mov
mov
and
imul
mov
xor
sub
mov
and
sub
mov
mov
xor
or
xor
div
mov
push
push
sub
lea
mov
mov
mov
xor
imul
and
lea
mov
add
mov
mov
mov
mov
and
and
and
and
push
push
call
mov
xor
xor
add
adc
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
and
xor
div
mov
sub
mov
add
mov
add
add
add
mov
pop
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
mov
mov
push
mov
push
xor
xor
push
push
call
push
mov
push
push
push
call
mov
mov
sub
mov
sbb
add
adc
mov
mov
xor
push
push
xor
xor
push
push
shr
mov
call
push
push
push
push
call
mov
mov
sub
sbb
add
adc
shld
shl
or
mov
xor
or
mov
xor
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
push
push
and
and
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
push
mov
push
xor
xor
push
push
call
mov
mov
add
adc
add
adc
xor
xor
mov
shrd
mov
mov
mov
mov
mov
xor
mov
xor
xor
mov
push
push
xor
push
push
shr
call
mov
mov
add
xor
or
sub
shl
or
mov
mov
mov
mov
mov
mov
or
or
add
adc
and
mov
and
mov
xor
xor
and
and
add
mov
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
sub
mov
and
imul
mov
mov
xor
mov
sub
mov
xor
add
cmp
jne
mov
mov
or
mov
imul
add
mov
push
mov
push
mov
or
mov
imul
add
mov
or
or
mov
add
add
mov
xor
xor
mov
mov
shl
mov
add
add
mov
mov
mov
imul
or
imul
mov
sub
pop
pop
cmp
je
mov
jmp
mov
mov
sub
add
add
add
xor
jmp
movl
movl
mov
mov
or
sub
add
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
imul
or
mov
mov
xor
mov
and
mov
or
and
xor
sub
mov
sub
mov
mov
xor
add
div
mov
mov
or
mov
sub
add
cmp
ja
push
movl
movl
movl
movl
movl
mov
mov
mov
and
xor
div
mov
mov
xor
or
xor
div
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
xor
and
xor
mov
div
add
mov
mov
xor
mov
and
mov
or
and
xor
mov
sub
mov
mov
xor
add
div
mov
or
mov
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
sub
push
push
mov
mov
sub
or
mov
mov
shrd
mov
mov
sub
imul
shr
sbb
mov
mov
xorl
mov
mov
mov
and
xor
xor
notl
or
sub
mov
mov
and
shl
sub
mov
not
shrd
dec
xor
add
shr
or
mov
cmpl
jg
xorl
jmp
push
push
push
push
push
push
push
call
mov
xor
or
mov
mov
mov
sub
mov
sbbl
mov
addl
mov
mov
mov
xorl
mov
xor
xor
xor
xor
xor
adc
mov
xor
cmpl
jge
jmp
push
pushl
pushl
pushl
call
shl
mov
mov
shld
shl
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
sbb
mov
mov
xor
mov
mov
xorl
xor
sbbl
xor
orl
xor
shld
movl
shl
cmp
movl
jne
cmp
movl
je
addl
mov
mov
xorl
shl
cmpl
jbe
jmp
call
mov
xor
shr
or
mov
mov
mov
cmpl
jb
and
movl
jmp
pushl
pushl
pushl
push
call
mov
mov
mov
push
pop
orl
sub
xorl
mov
add
xorl
mov
lea
add
mov
cmpl
jle
mov
and
mov
and
jmp
push
call
mov
mov
xor
shr
shl
or
mov
adc
movl
mov
inc
mov
andl
xor
shr
orl
shl
or
subl
push
adcl
lea
addl
push
lea
push
call
or
mov
mov
xor
neg
shr
shl
andl
or
or
push
lea
push
mov
orl
mov
shrd
shr
mov
mov
xorl
xor
xor
sbbl
or
addl
lea
push
sbbl
shl
call
decl
mov
mov
cmpl
jl
add
jmp
pushl
call
xor
shl
shr
or
push
lea
push
mov
cmpl
jge
xor
xor
add
adc
mov
jmp
push
push
push
push
pushl
push
pushl
push
push
call
mov
shrd
orl
shr
mov
mov
sbbl
xor
shl
addl
xor
movl
or
negl
lea
xorl
push
sbbl
call
adc
mov
cmpl
jl
adcl
jmp
push
pushl
push
push
pushl
call
mov
xor
shl
shr
or
push
lea
mov
and
mov
push
cmpl
jle
subl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
addl
xor
movl
or
shl
mov
mov
sbbl
shrd
shr
mov
sub
mov
xor
xor
or
addl
add
sbbl
lea
addl
push
orl
shl
negl
call
mov
not
mov
shl
xor
shr
cmpl
jle
xor
jmp
pushl
push
pushl
pushl
call
or
push
lea
push
mov
mov
adc
shrd
shr
mov
mov
xor
cmpl
jbe
subl
sbb
jmp
pushl
push
call
shl
mov
xor
or
mov
shrd
orl
shr
mov
cmpl
jl
jmp
push
push
pushl
call
mov
xor
xor
or
add
mov
shl
or
mov
sub
shrd
shr
decl
mov
add
mov
sbbl
xor
subl
xor
orl
or
andl
add
lea
push
shl
call
mov
mov
sub
and
mov
cmpl
jl
jmp
push
push
push
pushl
call
mov
xor
shr
shl
or
mov
lea
push
dec
mov
mov
cmpl
ja
xor
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
cmpl
jle
add
jmp
push
push
pushl
pushl
pushl
call
or
push
mov
mov
push
pushl
shl
xorl
call
sbb
lea
adcl
push
mov
mov
sub
xor
mov
mov
add
mov
mov
xor
mov
shrd
adc
shr
xor
xor
and
mov
cmpl
jle
adcl
jmp
push
call
mov
xor
xor
or
push
mov
push
pushl
sbbl
shl
subl
call
sbb
mov
mov
mov
add
mov
and
mov
mov
not
mov
mov
rol
mov
and
mov
mov
adcl
xor
movl
mov
cmp
je
movl
mov
mov
movl
mov
xor
mov
mov
mov
mov
xor
xor
shld
shl
mov
movl
mov
mov
xor
inc
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
sbb
mov
mov
or
mov
jne
neg
mov
mul
ret
addl
push
sbbl
mul
and
mov
mov
mull
addl
add
mov
mul
add
pop
ret
push
mov
sub
push
push
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
mov
mov
sub
mov
or
mov
imul
mov
sub
or
add
sub
shr
lea
mov
mov
mov
and
xor
xor
div
mov
sub
cmp
ja
push
movl
movl
mov
mov
xor
sub
and
xor
mov
sub
sub
mov
mov
xor
mov
div
mov
xor
sub
div
mov
mov
add
sub
mov
mov
mov
sub
or
mov
xor
xor
add
mov
sub
or
add
shr
lea
mov
mov
mov
and
xor
xor
div
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
xor
push
mov
inc
pushl
pushl
call
test
je
mov
mov
mov
xor
or
add
mov
mov
xor
add
sbb
mov
mov
cmpl
jg
sbb
jmp
push
push
push
pushl
push
call
movzwl
mov
xor
mov
sub
mov
or
cmpl
jle
jmp
push
push
pushl
push
call
mov
imul
movzwl
and
mov
mov
mov
and
mov
mov
or
mov
movl
cmp
jne
movl
inc
movl
xor
movl
movl
cmpl
ja
xor
or
jmp
pushl
call
movl
movl
mov
mov
and
xorl
sub
xorl
or
addl
mov
sub
cmpl
jb
sub
jmp
pushl
push
pushl
call
pushl
mov
mov
imul
xor
div
or
mov
orl
pushl
addl
pushl
xorl
pushl
imul
sbb
mov
xorl
sub
incl
pushl
call
adc
movl
mov
xor
add
sub
movl
sbbl
mov
or
movl
orl
movl
cmpl
jl
sbb
jmp
push
pushl
push
push
pushl
call
movl
mov
xor
mov
div
mov
subl
xor
adcl
xor
or
sub
not
mov
pushl
cmpl
jbe
andl
jmp
push
push
push
push
call
mov
and
imul
mov
xor
pushl
or
mov
xorl
div
mov
subl
xor
xor
subl
div
cmpl
jle
andl
sbb
jmp
push
push
push
pushl
call
mov
xor
or
div
mov
sub
addl
pushl
subl
pushl
call
andl
movl
movl
cmpl
jbe
and
jmp
push
push
pushl
push
call
mov
mov
and
or
or
mov
orl
movl
movl
xorl
movl
dec
movl
cmp
movl
jne
addl
movl
cmpl
jl
inc
jmp
push
call
mov
mov
movl
mov
call
lea
mov
lea
or
mov
mov
or
mov
mov
decl
mov
xor
xor
shl
shr
or
cmpl
ja
jmp
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
movl
shrd
cmpl
jg
mov
mov
xor
jmp
push
call
shr
mov
mov
mov
movl
xor
xor
or
subl
mov
push
pushl
xorl
lea
addl
push
shl
call
lea
orl
push
sbbl
mov
mov
orl
lea
sbbl
push
orl
mov
andl
lea
mov
mov
addl
mov
sbbl
push
call
movl
push
sbbl
push
xorl
pushl
addl
call
mov
add
mov
xorl
mov
mov
orl
shr
xorl
shl
subl
or
mov
adcl
xor
mov
addl
lea
sbb
mov
lea
cmpl
jle
inc
jmp
pushl
push
push
call
mov
mov
sub
lea
xor
movl
mov
xor
movl
mov
xor
mov
mov
cmpl
jge
dec
jmp
push
push
call
mov
or
or
push
push
push
push
call
cmpl
ja
notl
jmp
pushl
push
push
push
call
or
mov
or
mov
movl
movl
movl
cmpl
jle
jmp
pushl
call
push
movl
mov
mov
push
push
push
call
mov
sub
mov
addl
and
and
mov
xor
xor
sub
sub
mov
cmpl
jb
or
jmp
push
pushl
call
mov
add
adc
xor
xor
cmp
movl
jb
ja
movl
cmp
movl
jbe
mov
or
mov
movl
movl
movl
xor
movl
movl
movl
mov
andl
mov
orl
mov
add
mov
adcl
and
incl
and
or
xorl
or
xorl
add
mov
movl
adc
mov
andl
add
movl
mov
mov
adc
mov
cmpl
jl
orl
jmp
pushl
call
movl
movl
movl
movl
movl
movl
mov
xor
mov
mov
add
mov
xor
orl
xor
orl
and
mov
adcl
and
mov
push
push
sbbl
push
push
movl
call
sub
mov
sub
mov
add
movl
adc
or
or
cmp
movl
jne
movl
cmp
je
cmpl
jg
or
jmp
push
pushl
push
call
mov
mov
mov
xor
xor
xor
orl
shld
movl
shl
movl
cmp
jne
cmp
movl
je
mov
movl
cmp
je
incl
mov
mov
mov
mov
cmpl
jg
andl
jmp
push
call
xor
xor
shrd
mov
shr
shl
or
mov
adcl
xor
orl
or
movl
cltd
movl
cmp
jne
movl
cmp
jne
movl
sub
movl
cmpl
ja
jmp
push
pushl
call
mov
mov
mov
mov
xor
xor
xor
addl
shld
shl
movl
cmp
movl
jne
movl
cmp
movl
jne
xorl
movl
xor
mov
mov
mov
sub
shrd
add
shr
mov
sub
mov
subl
xor
adcl
shl
xor
or
movl
mov
mov
cmp
movl
jne
addl
movb
orl
movb
sbbl
mov
decl
mov
sbbl
add
movzbl
addl
cltd
movzbl
adcl
idiv
mov
orl
movb
orl
movb
andl
movb
orl
mov
mov
and
imul
mov
and
mov
xor
cmp
je
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
mov
xor
mov
sub
mov
sbb
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
cmp
jb
ja
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
xor
inc
mov
mov
mov
mov
mov
mov
mov
movzwl
movzwl
and
mov
xor
cltd
movzwl
idiv
push
pop
mov
xor
inc
mov
mov
mov
mov
movzwl
cltd
idiv
mov
movzwl
movzwl
cltd
idiv
mov
add
cmp
jb
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
mov
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
mov
mov
mov
movzwl
mov
imul
mov
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shl
shr
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
dec
movl
movl
cmpl
jbe
inc
jmp
push
push
pushl
call
mov
add
xor
mov
xor
xor
and
mov
orl
movl
movl
mov
xor
cmpl
jb
sub
jmp
push
pushl
call
mov
imul
add
or
sub
mov
sbb
movl
movl
adc
movl
orl
movl
movl
xor
xor
and
mov
movl
sbb
mov
imul
movzbl
or
mov
mov
sub
xor
cmpl
jb
adc
jmp
pushl
pushl
call
mov
xor
and
mov
mov
and
cmpl
jb
jmp
push
call
sub
mov
and
xor
mov
add
mov
movl
movl
movl
xor
movl
mov
mov
or
mov
adcl
xor
div
andl
add
and
mov
subl
imul
and
sub
mov
andl
movl
sub
movl
cmpl
jbe
xor
jmp
push
push
push
call
movl
mov
mov
lea
shr
mov
subl
xor
orl
and
add
sub
cmpl
jg
and
jmp
call
mov
movl
movl
movl
mov
and
cmpl
jbe
neg
jmp
call
mov
sub
add
mov
and
mov
orl
sub
cmpl
jl
xorl
jmp
pushl
pushl
pushl
push
call
mov
movl
movl
movl
mov
add
adc
mov
sub
sub
add
xor
mov
movl
movl
movl
mov
sub
mov
sbbl
lea
andl
imul
mov
decl
xor
xor
mov
sbb
sub
cmpl
ja
mov
xor
jmp
push
push
pushl
call
mov
movl
movl
movl
mov
mov
sub
add
xorl
or
movzwl
sub
sub
cmpl
jge
jmp
push
push
push
call
mov
xor
sub
mov
movl
movl
movl
cmpl
jge
add
jmp
pushl
call
movl
movl
movl
movl
movl
mov
cmpl
jbe
add
jmp
pushl
call
mov
sub
add
mov
sub
mov
orl
sub
xorl
add
push
andl
call
mov
imul
mov
dec
xor
mov
cmpl
jb
xor
andl
jmp
pushl
push
call
lea
mov
and
mov
sub
add
mov
movl
movl
movl
mov
add
movl
cmpl
jle
jmp
pushl
pushl
call
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
mov
mov
notl
mov
subl
xor
xor
and
sub
mov
sbb
lea
mov
mov
mov
xor
xor
sub
add
mov
cmpl
jg
or
jmp
pushl
push
push
push
pushl
call
mov
mov
imul
and
sub
sub
add
mov
movzbl
sbb
lea
cmpl
jb
xor
or
mov
sub
xor
or
jmp
call
mov
adc
movl
or
movl
cmpl
jbe
jmp
push
call
movl
movl
mov
mov
mov
xor
xor
movl
mov
call
adc
mov
mov
adc
mov
sub
mov
add
mov
xor
addl
xor
xorl
mov
sbbl
call
sbbl
or
or
cmpl
jbe
jmp
push
pushl
call
mov
mov
xor
xor
mov
call
mov
add
mov
sbbl
mov
mov
add
mov
sbbl
xor
xor
mov
add
mov
mov
andl
mov
subl
mov
call
mov
mov
and
mov
adcl
or
mov
or
push
push
push
xorl
push
adcl
call
movl
mov
cmp
movl
jne
cmpl
jb
inc
jmp
push
push
pushl
push
call
mov
mov
xor
xor
mov
call
and
mov
adcl
mov
mov
and
mov
add
mov
xor
xor
subl
mov
sbbl
call
sbbl
or
or
cmpl
ja
jmp
pushl
push
pushl
push
push
call
mov
mov
xor
xor
mov
call
mov
adc
mov
mov
movzbl
adc
mov
subl
xor
decl
xor
addl
mov
mov
mov
adcl
call
subl
or
adc
mov
or
orl
push
xorl
push
push
sbbl
push
call
movl
mov
movl
jmp
movl
jmp
lea
movzwl
or
mov
mov
xor
mov
not
movl
mov
sub
xor
sbb
shr
mov
xor
addl
shl
or
or
mov
sub
mov
dec
mov
or
mov
orl
mov
sbb
mov
and
mov
sbbl
xor
andl
xor
mov
adcl
call
mov
sbb
mov
add
mov
cmpl
jg
subl
jmp
push
call
mov
xor
xor
mov
call
or
and
or
xor
mov
cmpl
jb
jmp
pushl
push
call
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
xor
mov
mov
subl
mov
adcl
mov
call
sub
mov
orl
or
mov
or
andl
push
incl
push
push
orl
push
call
mov
movl
cmp
je
mov
mov
xor
orl
xor
andl
mov
call
mov
mov
dec
mov
cmpl
ja
jmp
pushl
call
mov
xor
xor
mov
call
or
or
mov
xorl
imul
addl
add
mov
mov
mov
mov
jmp
jmp
mov
movl
mov
orl
xor
xor
mov
notl
call
sbb
mov
cmpl
jbe
mov
sub
jmp
pushl
push
pushl
call
mov
mov
mov
xor
xor
adcl
mov
addl
call
orl
or
or
or
sbb
mov
movzbl
or
mov
xor
xor
adcl
mov
call
negl
mov
or
mov
cmpl
jg
adc
jmp
pushl
push
push
pushl
call
mov
mov
xor
xor
mov
mov
subl
mov
adcl
call
xorl
or
mov
sbbl
or
orl
push
andl
push
push
sbbl
push
addl
call
movl
mov
jmp
or
mov
cmpl
jle
or
jmp
push
push
call
mov
xor
xor
mov
call
mov
mov
cmpl
jle
jmp
push
push
pushl
pushl
call
mov
mov
xor
xor
mov
call
or
or
movl
mov
movl
jmp
cmpl
ja
movl
sbbl
jmp
pushl
pushl
push
push
pushl
pushl
push
call
mov
mov
xor
xor
mov
subl
call
addl
mov
adc
mov
sbb
mov
not
mov
xor
xorl
xor
subl
mov
call
add
or
or
or
mov
cmpl
jg
jmp
push
push
push
call
mov
or
mov
xor
imul
and
add
sbb
mov
lea
cmpl
jle
mov
sub
jmp
push
push
pushl
push
pushl
call
mov
movl
movl
movl
movl
movl
movl
or
movl
movl
and
movl
cmpl
ja
and
jmp
push
call
mov
add
mov
or
add
mov
adc
imul
orl
xor
mov
add
add
sub
mov
cmpl
jb
movzbl
and
mov
mov
and
mov
jmp
push
push
pushl
push
pushl
pushl
push
push
push
pushl
push
push
push
pushl
call
and
cmpl
jb
add
jmp
push
push
push
push
call
sub
mov
sub
mov
sub
mov
xor
and
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
mov
lea
mov
imul
mov
sub
imul
mov
xor
div
mov
and
mov
sub
mov
add
mov
xor
mov
imul
or
add
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
or
mov
sub
xor
add
mov
and
mov
or
mov
sub
mov
mov
imul
imul
sub
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
jle
jmp
push
pushl
pushl
call
push
push
mov
or
jne
mov
mov
xor
mov
adc
div
neg
mov
mov
div
movl
mov
jmp
cmpl
jle
or
jmp
call
mov
mov
mov
mov
shr
rcr
adcl
shr
rcr
xorl
or
jne
adc
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
sbbl
subl
movl
cmpl
je
sbb
add
mov
movzbl
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
shld
movl
shl
ret
movzbl
sub
mov
xor
and
shl
ret
xor
xor
ret
