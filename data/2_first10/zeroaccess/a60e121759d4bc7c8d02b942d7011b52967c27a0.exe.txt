push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
or
mov
mov
jmp
rcl
fmul
rcr
add
fildl
jle
movsl
add
fld
fcom
enter
leave
cld
icebp
fmulp
iret
jmp
mov
nop
fsub
nop
cld
jmp
leave
ss
xor
neg
aad
int
fnsetpm(287
lock
in
cli
sti
jmp
xchg
in
cli
fxch
out
leave
icebp
idiv
iret
ds
lock
repz
enter
out
fildl
ret
sub
shl
xlat
fdiv
stc
aas
adc
call
fmuls
repz
mul
ret
into
jmp
loopne
iret
lock
in
repnz
into
sub
sti
ljmp
int
into
out
rorb
fimull
div
aam
hlt
cmc
aad
ss
int3
rcl
rol
idivb
icebp
les
out
sti
xchg
ljmp
in
aaa
cmpb
xlat
cmp
cmp
ret
int
out
out
roll
jecxz
lret
fdivrs
cmp
cmp
repnz
cmc
add
test
movl
aas
sbb
cld
iret
std
jmp
in
in
loopne
jecxz
out
loope
out
jecxz
aam
fcmovb
idivl
sti
sarl
icebp
fld
enter
cli
xchg
ljmp
out
leave
xor
icebp
and
fmulp
std
std
shl
sbb
jmp
xchg
ljmp
leave
jecxz
shl
ds
fst
xor
shl
cld
bnd
and
std
in
jecxz
ljmp
cmp
out
repnz
inc
rcl
out
int3
xlat
out
repnz
mov
xchg
jmp
les
stc
fcmove
div
cmp
mov
out
sub
lock
out
repz
xor
xor
repz
xlat
repnz
jmp
filds
enter
bnd
fcomp
fsubr
cmp
icebp
ljmp
roll
and
xchg
jmp
into
in
out
fnsave
rcr
into
lock
rol
fcmovne
and
loope
lret
ret
repnz
repnz
fdiv
aam
jecxz
loope
sti
mov
ljmp
cld
xchg
int3
xchg
loop
shll
aaa
in
xor
loope
idivl
in
in
addb
lret
fsub
jmp
mov
mov
jmp
shl
into
in
test
lds
cld
in
lret
cli
jmp
int
ret
enter
neg
cmp
fcomp
cmc
loopne
sti
aam
in
out
mov
mov
cmc
divl
int3
icebp
in
imul
rcl
adc
cmp
rol
mov
mov
jecxz
and
lret
loop
out
in
ret
std
xlat
div
xchg
int
loopne
ljmp
not
fsubr
cmp
shl
loop
loopne
fsub
jmp
jecxz
adcl
out
imul
repz
in
hlt
ljmp
shl
nop
into
in
xor
leave
jmp
lret
shl
and
sti
in
xchg
addl
into
vcvttpd2dq
fldlg2
test
aad
out
test
int3
in
fscale
loope
jmp
int3
iret
leave
aaa
loop
ret
fdivr
imul
cld
aad
fnstcw
loope
repnz
testl
mov
clc
xor
out
in
cmp
int3
out
jecxz
rolb
loop
cmc
mov
sti
fisttps
mov
xlat
cli
ret
cmp
jecxz
fdiv
cmp
out
xlat
mov
repz
fxch
ljmp
shl
ret
in
loop
fisttps
call
repz
fdivrs
jmp
clc
aaa
cmp
repz
cli
fdivrp
or
mov
xchg
subl
clc
sar
std
clc
cmp
shl
out
repz
repz
ljmp
sti
int
in
hlt
xor
enter
das
jmp
cmp
repnz
fadd
mov
inc
incl
test
icebp
cmp
ss
xor
xlat
cld
aam
hlt
neg
sbb
cmc
mov
xchg
xchg
out
xchg
lock
xor
out
ljmp
out
aam
cmp
mov
cmc
fcomp
mov
out
ror
in
out
fucomp
mov
sbb
mov
mov
orl
push
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
push
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
adc
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
jmp
xlat
iret
into
fst
xor
mov
mov
movsl
add
movsl
add
jmp
cmp
cmp
and
fcmovu
idiv
sti
iret
loopne
mov
xor
divb
hlt
cmp
loopne
fucom
rcl
fidivrl
cli
in
test
mov
cmc
mov
iret
int
xor
cmp
fcomp
out
loop
std
loop
sbb
mov
shl
hlt
loop
out
rol
cmp
cli
fcmove
out
into
fildl
test
jmp
fmull
xor
out
test
not
shl
cld
out
shr
xor
ljmp
fdivp
rcl
xor
ljmp
cmp
in
cmp
test
lret
sub
xchg
xor
ljmp
iret
ret
cld
cmc
flds
flds
lret
ror
cmp
cmp
jmp
ret
enter
ret
mov
addl
jmp
rcl
aas
aas
idivl
rcr
in
cmc
out
into
mov
fstl
aad
lret
cli
aad
repnz
loop
into
adc
out
cli
nop
addl
aad
fucomp
lret
sar
ret
roll
mov
int
in
jecxz
shr
ret
aad
out
push
and
cmc
in
sar
ret
ret
test
sub
enter
loop
ror
xor
lret
sti
jecxz
fcomp
enter
addb
xchg
shl
sti
cmp
aas
cli
into
push
test
fiadds
rorb
icebp
icebp
jecxz
repnz
rcr
rcr
addl
leave
lret
ljmp
fsubr
mov
icebp
das
xor
cmp
idivb
enter
xlat
cmc
testb
out
add
fisttpll
into
lret
in
in
lock
shl
into
out
sarl
shl
aam
cli
jecxz
xchg
shll
icebp
lds
cmp
lret
cmp
lret
out
iret
shl
in
stc
enter
out
mov
mov
lret
shl
cli
icebp
int
cmp
out
std
icebp
into
cmp
add
flds
call
shl
xor
xor
out
fprem
jmp
cld
stc
rcr
dec
xchg
iret
int
loope
fdivp
int
xor
ss
fcmovnb
out
lret
test
adc
ljmp
in
divl
lret
fdivrl
cli
in
rcr
xlat
ret
loopne
clc
lock
ljmp
mov
in
loop
out
xor
cld
ss
loop
iret
sbb
loope
fadd
aam
cmc
clc
cli
shr
call
cs
xor
aam
fidivrl
jmp
out
and
loopne
into
in
repnz
int3
ljmp
clc
fmulp
aam
loop
sbb
repz
ret
push
int3
ljmp
out
xlat
cmc
lret
cmc
out
aam
rcr
sbb
repnz
fiaddl
clc
test
fbstp
loop
into
shr
jmp
jmp
stc
jecxz
loope
fxam
orl
in
in
icebp
lds
aam
repz
sbb
aas
std
stc
out
stc
testb
sti
mov
mov
out
fpatan
stc
hlt
sti
call
fidivrl
into
xchg
clc
fiadds
ret
int
test
shl
std
cli
lret
cmp
int3
repnz
rorb
call
repz
lock
fdiv
lock
fidivrl
cld
out
fsub
cmc
ljmp
in
nop
cli
repnz
idiv
out
ror
aad
clc
cmp
jecxz
lock
mov
loop
jmp
jmp
lea
shr
lret
xor
out
leave
call
sub
loope
loope
aam
xor
aad
lock
cmp
ffreep
fucomip
fld
mov
shr
mov
enter
test
in
stc
cmp
lret
flds
fucomp
call
out
ret
rcl
addl
sarl
aam
cli
ret
shl
test
int3
jmp
jmp
mov
jmp
repnz
xlat
rol
aas
cmp
aam
fbstp
loope
vpmaxub
test
jecxz
mov
xor
cmp
cmp
fmul
out
loop
shl
mov
jmp
fadd
leave
int
bound
inc
aad
pop
xchg
in
pop
jle
movsl
add
not
shl
loopne
mov
cld
fimuls
call
sarl
ret
icebp
cmc
cli
fcmovb
test
ljmp
jmp
xor
shl
out
sti
aad
cmp
cmp
xlat
iret
jmp
out
out
jecxz
loop
xchg
in
xlat
repnz
cs
aad
icebp
jecxz
fninit
faddp
fucom
in
mov
enter
mov
xor
sti
xlat
fdiv
div
icebp
aas
lock
aas
jecxz
out
jmp
mov
clc
leave
rcr
aam
jmp
enter
lock
ret
xor
clc
idiv
out
fsts
loope
repz
xor
in
fcomp
icebp
in
iret
loope
loop
aas
xchg
fsubr
stc
in
test
in
aaa
lock
iret
in
icebp
ds
aas
fcmovnbe
std
xchg
icebp
in
cmc
loope
clc
call
xor
jmp
jmp
sti
fistpll
hlt
out
add
nop
call
test
fsqrt
iret
cld
enter
aam
xchg
shl
fisttpll
addl
into
ss
cmc
fstp
faddl
jmp
std
mov
lret
cld
fucomip
xor
in
rcl
cli
leave
aaa
icebp
jmp
std
rcl
mov
ret
out
int
jmp
xchg
lret
loopne
shl
into
jmp
ror
fcomi
shr
loop
cmp
xor
aam
in
loope
adc
in
ret
cmp
fcmovb
std
out
ror
cmp
out
mov
xor
incl
int3
aam
in
div
ss
loopne
out
cmp
mov
cmp
loopne
into
jecxz
fimuls
out
xlat
enter
idiv
sar
test
ret
sti
bnd
fmuls
movb
iret
ss
loop
out
stc
cli
hlt
call
cli
rolb
out
xchg
nop
sti
into
mov
hlt
xor
int
repz
cli
enter
out
ds
in
out
lret
mov
int3
int
ss
sar
cld
out
into
bnd
aam
rol
loope
sbb
mov
xchg
lock
in
xor
cmp
hlt
cmp
lock
aad
in
hlt
fcmovnbe
ffree
xlat
test
rcr
mov
in
cld
cmc
enter
enter
stc
fcmove
int3
int
loopne
rcl
addb
cld
out
shr
add
out
in
hlt
out
out
loope
test
cmp
lock
shl
cmc
fmulp
cli
mov
loop
out
lock
xor
out
xor
cmp
in
jecxz
and
imul
mov
xchg
shr
orb
idivl
int3
sti
jmp
std
in
mov
dec
into
in
loope
rcll
lds
ljmp
xlat
out
ret
in
sub
iret
jmp
enter
iret
in
fdivr
fucom
aad
repz
fldl
jmp
out
jmp
cmc
ss
shl
shl
stc
in
loopne
test
vpmovmskb
jmp
mov
mov
not
sti
clc
jmp
fmul
mov
bnd
loop
xlat
test
in
mov
loope
lock
lock
shl
rcl
icebp
in
add
fstp
test
xchg
in
xchg
xchg
xchg
xor
repnz
hlt
hlt
cmp
rcl
stc
clc
shl
sti
fucomi
mov
lret
fcoml
hlt
xor
xor
aam
cli
icebp
jecxz
repz
lock
out
in
in
mov
lret
in
cmp
icebp
aad
fcmovu
loopne
clc
cmp
cld
out
out
out
loope
test
xor
lret
not
cmp
ror
repnz
cmp
clc
out
aam
jmp
lret
test
xchg
addb
shlb
lret
cmpl
incb
sub
nop
jmp
mov
dec
clc
int3
loop
cmp
jmp
cmp
stc
idiv
xlat
out
jecxz
mov
cli
mov
mov
aaa
cld
in
out
fsubrp
cmp
fstp
inc
xlat
call
jmp
out
div
xor
enter
fdivrs
repnz
stc
dec
loop
enter
int
ret
cmp
xor
cmp
lock
shl
stc
fidivrs
in
call
mov
mov
sub
and
mov
mov
and
mov
orl
xor
xor
add
mov
add
jmp
rcl
lret
fst
jmp
cmp
movsl
add
lret
nop
leave
orb
out
xor
sarb
lret
hlt
sti
cmp
mov
ret
cld
into
addb
aam
call
shr
fcomi
sub
out
lds
aad
jecxz
cli
loop
nop
in
adcl
into
sarb
out
cmp
in
in
into
out
rorb
mov
sti
in
loope
int
mov
cld
cli
ffree
in
aad
int3
cmp
ret
loop
fldl
loope
lret
out
iret
jecxz
in
out
lret
fdivs
shr
lock
loope
rolb
lret
imul
sub
lret
mov
int
cs
out
loopne
loope
cld
iret
test
stc
fdivr
lret
jmp
mov
shl
divb
repnz
loope
ror
test
jecxz
clc
cmp
out
loope
into
loop
lock
loope
lret
fisubrl
loopne
cmpl
rcr
sbb
stc
xchg
ljmp
stc
fidivrs
fsubp
cli
ror
test
xlat
lock
cli
test
faddl
in
shlb
xor
call
lock
cmp
rcl
sar
cld
loopne
lret
fdivr
into
and
fldl
int3
in
cmp
cli
rcl
rcl
mul
call
enter
filds
lret
clc
in
stc
cmp
fdivrl
shl
test
shr
call
sub
adc
xor
fidivrl
xlat
loope
fidivrs
icebp
sub
xlat
cli
clc
in
mov
mov
mov
lret
out
ffreep
xor
fcmovnbe
hlt
xor
neg
out
sbb
ffreep
rol
test
fdivp
clc
fisttpl
iret
repnz
loope
in
aaa
shr
int3
cmc
imul
into
ret
test
mov
repz
cmc
ss
out
loope
fadd
cmp
neg
xchg
stc
loope
cmp
aam
loop
hlt
clc
xlat
imul
cmp
filds
cmc
test
rolb
decl
xchg
aad
xor
xor
stc
out
fdivs
icebp
fdivrp
ret
hlt
xlat
clc
ror
test
mov
in
jmp
in
out
cmp
repnz
int
fcmovb
xlat
add
call
rorb
call
ror
fdivrs
shr
hlt
cli
fcmovu
mov
test
in
repnz
leave
int3
in
out
cmp
cmp
clc
aam
cld
xchg
idiv
test
jmp
nop
orb
out
fcom
out
sarl
lock
fdiv
shl
in
aam
fmul
out
sti
jmp
loopne
loope
xor
sub
repz
xor
shl
cmp
cli
cmp
xchg
cld
cmc
ljmp
loopne
in
aam
lock
in
fucomp
aad
xor
repnz
loope
in
xlat
addl
xchg
xorb
aam
jmp
idivb
cmp
aas
int
rol
jecxz
jmp
popl
call
ror
int3
lret
out
aad
cmp
add
icebp
in
cmc
enter
in
repz
mov
mov
aad
xor
fdiv
cmp
rol
les
add
leave
fucomp
std
in
in
ljmp
jmp
xor
shl
cld
test
and
sti
int3
iret
loope
ret
jecxz
lock
in
sti
xor
fldl
jmp
sbb
std
enter
out
out
out
lret
std
fdecstp
cmp
fdivp
xlat
adc
lret
std
out
fists
sar
repz
int3
into
cmp
hlt
call
int3
in
mov
xchg
out
repnz
xor
rcr
aaa
ljmp
in
test
out
fsubr
in
orb
cmp
clc
int
icebp
ds
repnz
test
ljmp
enter
div
cmc
cmc
into
out
sar
cmp
int
loop
loopne
ret
enter
cli
nop
call
in
xlat
lret
icebp
stc
sar
jmp
out
hlt
sti
in
mov
int3
cld
stc
jmp
out
xchg
lret
repz
repnz
call
out
in
icebp
int
clc
mov
jmp
cld
std
jmp
out
loope
rolb
int
ljmp
ret
cmp
clc
lock
aam
clc
mov
add
mov
jmp
int3
rcl
aad
int3
call
cwtl
or
add
call
shll
jecxz
out
repnz
aaa
roll
mov
cmp
fucomip
xchg
adc
mul
loope
aad
leave
stc
xor
idiv
iret
std
aas
in
clc
cli
ret
cli
sti
in
lock
int3
xchg
lock
xlat
in
sti
hlt
fmul
stc
cmc
fcmovu
bnd
loopne
cmp
out
mov
xorb
jmp
lret
out
loopne
fdivr
loop
fcomi
sti
jecxz
into
into
test
out
out
out
xlat
out
cmp
cmp
shl
xlat
fadd
xlat
shl
enter
sub
enter
hlt
lock
fdivrs
repz
fcom
int3
shr
sar
mov
out
test
call
shl
cmp
aaa
fmul
xor
clc
xlat
loopne
aam
call
xor
fcmovu
jmp
loop
mov
jmp
out
in
jmp
cmp
orl
test
pop
iret
mov
nop
out
icebp
jecxz
xlat
aaa
jecxz
xor
fcmovu
cmc
in
or
std
fildl
fneni(8087
int3
nop
hlt
fucomip
call
cmc
ror
iret
repz
cmp
xor
neg
lret
fucomi
fsub
enter
hlt
xchg
out
xor
sar
lret
aam
aad
xor
div
call
std
xchg
in
lock
ret
shl
fcmovnbe
fdivrs
cmp
ret
ret
in
fdivp
into
stc
loopne
int3
rcl
repz
int3
in
leave
enter
test
std
cli
fcmovbe
test
mov
in
loop
xchg
repz
cmp
out
xor
cli
ljmp
enter
loope
in
ret
jecxz
sub
in
xor
iret
cld
aam
in
loope
roll
call
test
cs
rol
aam
cmp
leave
cmp
faddl
loopne
mov
aad
cld
test
shr
jmp
ljmp
lock
cmc
icebp
clc
in
loopne
cmp
test
aam
iret
lret
int
cmp
iret
sti
fxch
sarb
xchg
loop
loope
loope
fmull
xor
shll
xlat
cmp
shlb
lret
div
into
shl
loop
test
in
xchg
sub
fsubr
hlt
hlt
out
shr
ljmp
xlat
aad
shl
mov
out
loopne
out
lret
xchg
fsubp
enter
enter
cmc
loop
loop
lock
loopne
fisttps
icebp
test
test
xchg
rcl
lock
repnz
xor
in
loop
sbb
sub
in
std
test
loope
loop
not
ret
neg
cmp
repnz
div
lock
icebp
fcmovu
cmp
fucom
fsubrp
and
in
jmp
iret
rcl
enter
cmp
sar
out
movl
cmp
fldcw
cmp
int3
cmp
fadd
fdivp
addb
jmp
xor
out
in
out
jecxz
in
fsubr
fsub
faddp
aam
test
loope
enter
fucom
cmp
xor
into
sti
in
fdivl
repz
loop
loop
std
stc
test
fimuls
out
in
in
hlt
int3
shr
enter
loop
in
fdiv
mul
call
mov
jmp
in
out
xor
fmul
jmp
or
fld
xchg
ficoml
shrl
shr
int3
lock
imul
repz
hlt
ret
fld
loop
in
mov
loopne
fsincos
xchg
int3
addb
hlt
vpmovmskb
loop
sti
fcomi
ljmp
fsubp
sub
repz
shll
leave
ss
in
shl
fdivr
std
and
leave
out
fld
loope
shl
cmc
shl
das
rol
aam
sar
xor
cld
fdivp
shr
fmull
jmp
cli
leave
xchg
out
in
ljmp
xlat
cmp
stc
fiadds
cli
out
ret
test
icebp
out
stc
das
stc
fucomi
cmp
call
fdiv
rolb
leave
clc
cli
loop
in
rorl
fld
ss
in
leave
dec
rolb
sti
cmc
enter
int3
test
out
rcll
hlt
into
cmp
out
call
sar
filds
jmp
aas
out
mov
ljmp
int
movl
jmp
int3
rcl
fstp
fldt
cli
js
rcll
jle
jmp
cmp
sti
in
iret
rcl
rcr
jmp
xchg
int3
in
xchg
out
cmp
ret
jmp
repnz
fcomi
sar
fsubp
in
and
iret
fcomi
out
divl
cmp
rcl
out
std
cmp
fdivrp
and
add
shl
in
aas
inc
incl
cs
out
call
fnop
sbb
in
loop
ret
mov
test
in
out
rcl
cmp
cmp
ljmp
cmc
roll
fcmovne
lret
xchg
mov
rcl
xor
fnstenv
aam
out
fcmovbe
xlat
cmp
shl
inc
aas
test
shr
stc
out
xchg
shl
loope
out
call
cmp
sarl
in
hlt
aas
idiv
fmull
mov
sti
out
in
in
icebp
cli
iret
shr
cmp
hlt
xlat
cmp
fildl
fdivr
mov
hlt
xchg
jmp
stc
shr
div
repz
rcr
mov
in
mov
out
mov
fptan
jmp
cmc
xor
xor
out
mov
xor
vpaddusb
repnz
fsubr
int3
lock
xor
in
hlt
jmp
in
std
in
mov
rclb
xor
cmp
loopne
cmp
cmp
fcmovb
jmp
addl
jmp
clc
sarb
out
hlt
mov
in
icebp
out
int
jecxz
aad
xor
sti
iret
aas
div
hlt
not
rcl
lock
fst
leave
lret
out
cli
out
mov
xchg
jecxz
not
out
shll
cmp
test
fucomi
aam
lret
mov
fcmovnbe
icebp
test
in
cmp
rcl
cmp
clc
xlat
fnstcw
test
cmp
mov
fildl
iret
aad
ret
cli
int3
aad
loope
clc
lret
in
ffreep
fdivp
xor
mov
enter
lret
icebp
das
shl
leave
not
into
aad
cmp
cmp
in
stc
fsubr
ljmp
fadd
cmp
rcl
cld
cmpb
and
clc
addb
std
in
in
lret
imul
cmp
hlt
call
rcr
sar
xlat
jecxz
jecxz
lds
xchg
mov
repnz
aad
neg
xor
aad
clc
lret
aad
clc
cld
test
jmp
hlt
ljmp
lock
loopne
fldln2
cmc
clc
fucomi
out
aaa
cli
out
sar
shl
jecxz
mov
xchg
lret
roll
enter
cmp
fucomi
in
std
test
lds
rcr
popl
shr
jecxz
out
fcomip
loop
roll
loopne
int3
xchg
mov
int
xchg
hlt
divl
cmp
into
cmp
jmp
int3
fcomip
test
addb
iret
xchg
in
test
xchg
out
rol
ss
rcl
cmp
xlat
cmp
hlt
fadds
jmp
jmp
repz
leave
xor
out
hlt
fdivr
cmp
std
stc
cmp
sti
xlat
movb
cld
clc
roll
rcl
in
leave
jecxz
out
fsubrp
aad
lret
cmp
sub
incb
roll
into
frstpm(287
in
cmc
stc
xor
icebp
inc
add
fcmovnu
dec
out
jmp
nop
out
in
fdivs
fincstp
testb
test
cmc
mov
aad
loopne
sbb
cli
loop
xchg
xchg
aam
div
ds
stc
neg
fimuls
out
out
adcl
repnz
dec
cld
jmp
add
loope
fcomi
test
loopne
clc
repnz
lret
into
xchg
loope
xor
fadd
call
rcl
iret
out
hlt
vpmaxub
mov
xchg
sarb
cmp
into
xor
out
leave
inc
test
xor
imul
fldl
xchg
mov
aam
call
jecxz
ds
in
fsub
xchg
jmp
mov
rcl
ss
aam
out
jmp
cmpb
cmp
roll
cmc
ljmp
test
enter
xor
cmc
ljmp
jecxz
movl
test
mov
cmp
out
xor
aaa
fimull
loopne
inc
in
mov
xor
add
mov
mov
mov
mov
mov
mov
jmp
iret
xlat
rcl
fcomp
iret
bound
add
nop
push
add
shl
loop
shl
cld
stc
mov
add
out
xchg
xor
loopne
xlat
fdivr
into
cmp
cmp
hlt
cli
call
fisttpl
jmp
jmp
int
repz
sub
iret
clc
add
shl
jmp
fcomi
out
sub
jecxz
xchg
in
out
in
out
int3
ljmp
not
repz
neg
lret
mov
div
ss
jmp
int3
ror
ret
icebp
test
cmp
jecxz
out
loope
xor
iret
cmp
loopne
clc
fdivr
std
ffreep
jmp
cli
xchg
addb
cmc
aaa
cmc
aas
aad
xor
rolb
cld
mov
xchg
xchg
lock
out
aad
cmp
cmp
xor
rcl
jecxz
loop
xlat
out
cld
fxch
fmul
lret
loopne
mov
jmp
shl
cmp
xor
cli
cmp
loope
out
xchg
in
loop
in
or
cmc
cli
cmp
cmp
in
clc
ret
jmp
jmp
out
out
lret
jmp
in
aam
cmp
lock
rol
hlt
std
cld
aam
jmp
mul
icebp
leave
cmp
clc
sti
add
ret
loop
or
call
in
in
int
xor
fmul
int
sbb
loope
ffree
jmp
xchg
cmp
lock
out
fadd
fdecstp
xlat
rcr
flds
loope
fcmove
mov
iret
enter
in
iret
iret
sti
loope
out
lret
xchg
call
mov
in
int3
out
sar
icebp
lret
jmp
cmp
repnz
aam
jecxz
enter
jecxz
jmp
out
clc
xor
in
lret
jmp
sarb
in
test
out
cmp
repz
mov
repnz
in
int3
in
lret
out
iret
cmc
rolb
ret
ret
mul
loopne
xchg
das
aad
ss
fildl
loop
loopne
in
lea
enter
rcr
cmp
jmp
shr
xlat
stc
shl
ret
addl
out
fdiv
ljmp
mul
stc
ror
fcmovnbe
cli
cmp
out
loopne
ret
fsub
repnz
rorb
loopne
xor
leave
xlat
cmp
in
cli
div
ror
shr
sti
mov
mov
xlat
lret
mov
fld1
mov
lret
in
cmc
aaa
xor
enter
lret
cmc
rcl
sbb
xor
hlt
sti
jecxz
in
ljmp
enter
xor
xor
cmp
lock
test
cli
in
mov
mov
loop
mov
fucomi
call
in
iret
xor
call
aas
out
and
fsubrp
fld
jmp
incl
out
fcmovb
cmp
int3
into
repz
hlt
cli
xchg
idiv
std
jecxz
fstl
push
xor
enter
sbb
icebp
cmp
inc
cld
aad
in
fldl
sar
jecxz
shrl
icebp
stc
fidivrl
fdiv
rcr
cmpb
test
xchg
out
in
xor
leave
cmc
cmc
xor
ret
in
cld
xchg
rol
aad
mov
mov
fmul
fmull
in
ljmp
icebp
loope
incl
or
faddl
in
lret
shr
rcl
aad
faddp
cmp
div
repnz
adc
cmc
lret
jmp
in
rcl
ljmp
xor
cmp
aam
incl
jmp
out
leave
cmp
fdiv
loopne
jmp
dec
in
jecxz
xchg
testb
aam
fmul
fdiv
iret
sti
ss
cmp
loope
lret
test
lret
xchg
call
icebp
fptan
xor
repnz
hlt
repz
ret
rol
in
mov
in
loop
lret
jmp
mov
clc
xor
cmp
jmp
sarb
loopne
std
rcr
test
jecxz
repnz
mov
out
xor
cmc
xlat
iret
aam
idiv
dec
stc
cli
call
testl
hlt
out
cmp
lret
in
sti
in
in
addb
add
add
aas
ret
aad
aad
mov
inc
push
jle
movsl
add
out
mov
xlat
in
xchg
in
in
in
aam
xor
mov
aam
into
in
cli
shl
add
aam
addl
into
loop
mov
mov
icebp
into
jmp
div
cld
aas
clc
loop
cli
ffree
sti
out
xlat
flds
adcl
sar
clc
in
fsub
cmp
aam
enter
xlat
ret
in
incb
out
int
in
cld
fdivp
idivl
clc
aad
clc
ret
cld
test
xchg
std
enter
test
call
clc
cmc
in
fmul
aaa
sar
fcomip
cld
icebp
fstpt
inc
cld
cmc
cli
cli
out
hlt
jecxz
xchg
in
shll
icebp
cmp
cld
adc
out
loop
test
loope
test
int3
fcmovnbe
lock
cld
jmp
in
shl
repz
in
std
faddl
repz
fldl2e
loope
fdivr
out
leave
ljmp
lea
lret
fmul
in
std
cmc
fidivrs
fsubr
repz
ret
std
test
sbb
xchg
roll
out
lock
iret
lock
or
xchg
fimuls
loop
call
call
std
ds
in
cmp
fdivrs
cld
int3
ljmp
out
mov
call
lock
int
into
jmp
loop
ret
call
mov
repnz
mov
in
loop
repnz
in
in
aam
lds
mov
mov
orl
out
hlt
leave
addb
mov
sti
aad
test
repz
xor
rcr
xor
into
ret
test
rolb
testl
int3
repnz
cmp
loope
repnz
in
aaa
out
cld
incb
mov
shll
lret
out
les
neg
aaa
fnstcw
in
rcr
addl
xlat
sti
out
addl
stc
fcmovb
aaa
shlb
ds
cmp
cmp
loop
loop
lret
sti
enter
mov
iret
ror
stc
jmp
in
fucompp
lock
in
loope
ror
cli
call
test
div
in
shlb
repz
cmc
aas
iret
ror
cmp
clc
out
call
fmul
out
xchg
out
hlt
aad
int3
out
hlt
int3
out
ljmp
sar
fcmovu
repz
fcmovb
mov
xchg
xchg
clc
out
in
call
iret
test
fsubp
aam
fcmovnb
testb
and
xor
xor
out
cmp
cld
fnstsw
iret
lock
stc
sarl
ret
mov
out
cld
adcb
ror
cmp
cld
aas
cmp
fldl
std
xchg
mov
roll
xor
std
xlat
cmc
mov
mov
filds
ret
ljmp
cli
rcl
rol
icebp
std
stc
sti
clc
in
into
cmp
into
std
and
sti
out
aam
icebp
fdivr
loope
fcomi
idivl
jmp
or
test
mov
out
xor
iret
lret
cli
faddl
aas
fcmovne
fcomip
loopne
out
loop
int
sub
call
fld
mov
jmp
hlt
fucom
fsubrp
mov
xorl
sar
lret
jmp
ret
out
iret
repnz
add
mov
repz
hlt
xor
out
in
out
shl
in
cmp
loope
out
fstp
out
cli
int
xchg
rcr
iret
int3
clc
jmp
ss
fcomi
aam
hlt
loop
stc
shr
lret
lock
fisttpl
jmp
in
enter
icebp
jmp
out
cli
jmp
fmull
test
inc
fsubr
leave
ds
hlt
addl
add
shr
aad
out
shrl
aaa
cmp
cmc
les
jmp
out
jmp
shlb
ljmp
add
test
cli
mov
jmp
out
in
jecxz
imul
sarb
cmp
repz
repnz
sbb
fdiv
fcmovnb
in
mov
or
mov
rcr
fcmovnu
mov
xchg
cli
fwait
and
movsl
add
lret
sti
into
jecxz
nop
mov
ret
xor
iret
int3
repz
repnz
and
cmc
or
fmull
shr
sti
xlat
stc
cli
aam
cmpl
ds
mov
lret
repz
out
cli
fcom
in
fiadds
call
mov
fimuls
xchg
call
ret
ss
call
lock
cmp
adc
in
out
orb
imul
repnz
fmulp
aad
jecxz
aad
xchg
call
ljmp
int
int
loop
into
repz
lret
xlat
lock
fcmovu
call
enter
sar
shl
xchg
jmp
loopne
out
aaa
imul
aaa
out
cmp
jecxz
add
mov
loop
mov
hlt
int
xor
fsubr
aaa
lret
les
loope
in
jmp
int3
shr
xchg
xchg
fmul
fidivl
cmp
iret
out
loopne
icebp
hlt
cmc
xchg
faddl
clc
in
int3
test
xlat
int3
out
sub
aaa
cmp
shl
aas
shl
test
fdivr
stc
loopne
mov
aam
xlat
stc
xor
ss
neg
cli
shr
repnz
repnz
xlat
fucomp
fsub
xchg
mov
in
out
ljmp
hlt
xor
hlt
iret
lret
xlat
mov
sti
cmc
iret
hlt
out
jmp
in
out
aas
into
int
stc
cmp
out
orb
xchg
out
sti
loop
xor
shr
out
out
fcmovnu
xlat
into
fcmovne
ds
cld
fcom
test
rol
add
clc
lret
icebp
shl
aad
rcl
out
leave
out
into
iret
cmp
rol
ret
repnz
mov
iret
sub
into
lret
xchg
jmp
xor
sarl
aad
xlat
cmc
in
cmp
ret
test
loop
std
test
xor
ljmp
idivb
hlt
ds
in
loope
std
int
hlt
loope
shr
call
cmc
fst
sar
sar
xor
testb
nop
out
out
out
lret
clc
cli
jmp
fcmovu
lock
enter
leave
mul
fdivr
loop
adcl
repnz
int3
ljmp
cli
clc
ljmp
mov
shlb
out
repz
clc
loopne
rolb
in
mov
lret
in
out
mov
xor
cmp
loope
aad
neg
aas
rcr
in
loopne
out
fiadds
ret
xor
cmc
loopne
lret
ret
loopne
fucomp
enter
les
jmp
clc
xor
fcmovu
fsub
cmp
icebp
cmp
fucomip
shl
loopne
out
rolb
shr
shll
lret
icebp
std
fucomi
lret
out
sbb
fdivrp
xor
mov
fcomp
xchg
fcmovu
xor
out
jecxz
cmc
idiv
icebp
aad
test
lret
in
hlt
in
cmc
xor
xor
out
cmp
shl
rcl
aam
ret
mov
fmul
cld
in
and
jecxz
into
lret
xor
jmp
fmulp
loopne
jecxz
aad
stc
rcr
int3
sti
mov
mov
loope
out
lret
xor
fstpt
imul
ds
fst
fdiv
fucomp
in
lock
enter
ljmp
icebp
lret
aad
sar
cmc
aas
hlt
call
cli
loopne
ror
fucom
in
hlt
xchg
ror
out
sar
cmp
in
loope
fchs
sti
fld1
shl
rorb
xchg
xchg
sub
jmp
sti
jmp
rcr
rcl
cmp
in
aad
fmul
aam
test
lock
shr
icebp
rcr
rcr
call
in
ffree
in
loopne
aad
in
mov
aam
loope
stc
stc
cmc
lock
jmp
iret
shl
ds
ljmp
push
xchg
rcl
leave
jmp
int3
jmp
cmp
fidivrs
enter
mov
in
repz
mov
stc
into
rcl
jmp
cmp
aam
cmp
aad
and
orl
lret
out
neg
lock
cmp
cmp
jmp
in
or
xchg
leave
lret
nop
mov
mov
jmp
ret
leave
aad
fcmovnu
sub
arpl
sbb
movsl
add
test
shlb
fsubr
fdivl
in
aad
stc
div
mul
in
xchg
sbb
xor
fcoml
jmp
aad
call
jecxz
ret
rcr
xchg
fadd
sar
xchg
loope
xlat
idiv
aad
call
aad
std
aad
fadd
roll
out
cld
xchg
xchg
div
sub
cld
test
cli
fld
cmp
out
icebp
cld
fsub
clc
cld
xchg
enter
into
in
icebp
enter
fidivrl
idivb
call
mov
fcmovne
test
loope
repz
jecxz
aaa
jmp
hlt
cmc
lret
fstpt
idiv
mov
hlt
cmp
cmc
enter
out
cmp
repz
fildl
fcos
mov
movl
fdiv
aam
loopne
rcr
int
test
sti
loop
in
test
in
in
call
in
xlat
not
cmp
in
std
rcl
addb
clc
in
mov
in
jmp
lret
lret
hlt
enter
jmp
rol
lds
mov
frndint
cli
jmp
in
xchg
lds
int3
xor
xor
out
int3
into
into
sbb
rorb
sbb
test
out
loop
int3
shrb
fdiv
call
out
ret
fcomi
rolb
out
loop
rolb
aaa
in
cli
lret
iret
idiv
shr
into
in
adc
sbb
mov
xchg
jmp
lret
xor
ljmp
shl
mov
roll
lock
test
and
jmp
xor
ror
ds
sti
in
fidivrs
ret
mov
out
out
mov
rclb
repnz
ds
aas
sbb
push
fcmovnu
enter
mov
out
out
in
or
or
lret
divl
stc
cmp
call
std
roll
out
fld
icebp
out
fcoml
rcl
test
xor
incl
ret
sub
fsub
out
xchg
out
in
xor
jmp
aad
cmp
call
lret
aam
iret
ret
xor
ret
stc
clc
fcomp
xlat
repnz
sti
xlat
shl
xchg
ret
ret
orb
repz
sub
fcmovbe
xor
iret
lret
test
cmp
mov
out
lock
aam
cmp
icebp
into
leave
rcl
stc
cli
in
test
stc
fiaddl
les
xchg
rcll
fcmovu
sti
das
cmp
cmp
lret
cli
out
ds
test
lea
icebp
out
int
lret
fmul
xlat
in
fsubr
rcl
ror
stc
cmpl
lret
call
sti
xchg
xchg
aad
enter
ljmp
addb
idiv
stc
loope
mov
aam
icebp
xor
fmul
ljmp
hlt
cli
cmp
jmp
jecxz
lret
call
loope
jmp
icebp
jmp
clc
fdivr
loope
iret
cld
inc
leave
mov
mov
sub
shlb
xor
fcmovnbe
out
int
lock
ret
shl
jecxz
out
ffree
mov
jecxz
mov
int
repnz
call
int
fsub
lret
rcr
not
ljmp
fdivr
jmp
out
aad
divb
jmp
int
fdivrl
int3
loopne
fincstp
rcr
xlat
mov
test
addb
aaa
xor
int
ljmp
fiaddl
rolb
xchg
shl
in
ror
lret
in
std
enter
shr
xchg
fcmovbe
repz
lea
fucomip
loop
xor
ret
xor
into
push
aam
test
ret
addb
test
lock
jmp
out
test
in
mov
std
aad
xor
cmc
jmp
aam
in
repnz
cmp
ret
xlat
in
neg
cmc
lret
testl
xlat
iret
out
xor
int
loope
int
fiadds
clc
jecxz
loopne
into
mov
lock
repnz
into
lret
int3
repz
iret
jecxz
jmp
fistl
aam
in
aam
cmp
dec
clc
xor
add
cmp
jmp
vaddsubpd
rcr
pop
push
xchg
fldt
out
cmp
sub
jle
add
cmp
repz
std
cmp
shl
fucomp
test
leave
aad
jecxz
mov
out
into
int
cmp
rol
xlat
aam
std
out
fnclex
repnz
xchg
xchg
mov
shl
stc
out
icebp
rolb
sti
cld
sti
out
flds
out
lock
in
xor
fiadds
and
sti
std
leave
int3
in
sub
jmp
fcmovnu
jmp
cmp
fucomp
fcmovnb
jmp
fsub
enter
in
aad
in
xor
xor
aaa
fdivrp
sti
jmp
shl
hlt
jecxz
repnz
out
std
mov
ljmp
icebp
stc
rol
aaa
in
xchg
jecxz
testl
enter
lock
repz
lret
sbb
inc
call
std
sub
jmp
ret
out
into
cld
repz
shl
in
out
shl
ret
mov
call
loope
xlat
clc
xor
rcl
idivb
xor
cmpl
leave
in
hlt
out
fscale
loop
out
rcr
lret
jmp
fucomp
xlat
cmp
into
rol
repnz
in
cld
sti
nop
incb
xchg
cmc
out
neg
xor
imul
lock
neg
cli
loop
fiaddl
mov
in
out
cmc
shl
aad
cmp
rcl
div
repz
clc
into
in
ror
sub
iret
mov
aad
rcr
addl
jmp
xchg
neg
enter
sarl
cmp
out
neg
loopne
mov
int3
mov
repnz
iret
call
sti
out
cli
int
in
jmp
test
lds
cld
ljmp
fmul
cmp
repz
jmp
shr
aam
testl
jecxz
call
out
xor
mov
fcmovbe
jecxz
sti
lds
int
fucomip
in
mov
das
lock
cmp
enter
shr
shl
rcl
lds
xchg
mov
jmp
in
std
repz
aam
aaa
aaa
xor
int3
lock
xor
ret
addl
push
xchg
loop
hlt
lock
xor
cmc
out
out
jmp
cmp
jecxz
loop
cld
shl
shl
aaa
jmp
xor
shr
cmp
fnclex
jmp
and
into
shr
test
loopne
sub
cmp
in
jmp
stc
fstp
loope
cld
ret
cmp
nop
into
out
fucom
ret
jmp
aad
shr
fnstsw
hlt
std
out
out
into
mov
std
in
lock
rcr
lock
in
clc
sub
fdivr
out
fdivr
loop
int
out
shl
xacquire
loope
mov
in
in
lret
int
out
fdivr
out
mul
repz
shl
xchg
cli
int3
out
lret
fmulp
dec
in
aad
aaa
ljmp
std
aad
ret
cld
rol
xchg
cmc
test
fiaddl
xor
cmp
int3
xor
cmp
shl
jmp
test
rorb
jmp
xor
std
out
ljmp
mov
fcmovnb
mov
sti
lret
test
xchg
lret
ret
jmp
fmul
cmp
fst
clc
not
sti
ret
stc
leave
out
iret
int3
xchg
out
iret
mov
aas
xor
int3
sub
cmp
iret
fcmovu
xchg
xchg
cld
addl
loop
test
loop
test
cmpl
cli
enter
fldl2e
pop
jmp
faddl
jmp
aaa
hlt
xlat
lret
aaa
xor
repz
cli
fsubp
std
fdivp
lret
mov
in
mov
imul
leave
repz
cmp
fcomi
cmc
ret
sar
fcomp
lret
test
fimuls
in
fdivr
xlat
aam
dec
cmp
shl
mov
ljmp
ss
loop
sar
aaa
ljmp
rcr
mov
cmp
xchg
hlt
cmc
int3
xor
xor
iret
lock
xlat
ljmp
aam
rcl
out
loopne
std
xchg
jmp
cmc
cmp
fucomi
cmp
jne
mov
jmp
rcl
fcom
fcom
fstp
outsb
push
mov
jle
into
push
sub
jle
movsl
add
cmp
fneni(8087
jmp
filds
out
lret
out
xchg
jmp
lds
lock
into
stc
ds
sar
sti
ret
test
rolb
jmp
sub
call
cmc
aam
call
mov
mov
loopne
lret
xor
lret
fucompp
xor
aad
cld
mul
cmc
rcr
div
aam
loope
out
in
out
in
cmp
sub
out
fdivr
jmp
cmp
std
cmc
in
ffree
cmp
out
in
mov
mov
out
out
loop
hlt
call
cmp
stc
cmp
loope
rol
sarb
xchg
xchg
test
std
loopne
repz
lock
into
jecxz
std
cli
jmp
ljmp
cmc
sti
std
aad
dec
int3
lret
call
enter
in
hlt
in
cmp
flds
enter
ror
sub
jmp
loopne
icebp
into
in
fcmovnu
cmp
aad
imul
lock
lock
loop
call
cmp
shll
call
inc
flds
mov
mov
mov
das
xor
push
cmp
in
ret
in
enter
in
in
in
not
lds
clc
imul
out
fst
rcl
cmc
out
enter
mov
mov
loopne
int3
icebp
cmp
cmc
cmp
fdivr
cmc
rcr
rcl
ret
xchg
addl
xor
into
int
fidivl
not
icebp
cmp
cmp
xchg
and
ljmp
hlt
in
aaa
repz
cld
xor
lock
cmp
call
repz
clc
cmp
into
clc
cld
xlat
call
jmp
push
and
in
fildl
cmc
nop
repnz
cmp
lret
ds
cmp
cld
repnz
in
std
loope
in
mov
jmp
ss
xlat
call
xor
xchg
adc
xlat
pop
cli
in
mov
into
out
xor
aad
sarl
cmc
sarb
loope
cmp
cmp
clc
popl
loop
out
iret
fscale
std
shr
fistpll
not
aam
les
lret
mov
fstl
in
idivb
in
fst
loope
cmc
clc
test
flds
iret
int3
jmp
int3
hlt
aam
cmp
dec
sub
sti
cli
jmp
fucomi
call
int
xchg
mov
filds
rcl
out
cli
std
aad
out
out
xchg
fldl
iret
shl
in
sub
aaa
cs
fistpll
xor
fildl
fxch
int
std
into
repnz
iret
shl
lock
cld
cli
cmp
clc
hlt
leave
mov
in
filds
test
imul
fdivr
cmp
fdivrs
in
xlat
fidivrs
stc
ds
in
movl
out
aaa
out
out
xor
sar
stc
hlt
lock
mov
jecxz
enter
iret
ljmp
cli
out
iret
cmc
rcl
idivb
roll
xchg
cli
fmul
loopne
jmp
in
sar
xor
sti
cmp
cld
aam
repz
stc
rcr
out
xchg
in
jecxz
jmp
xchg
loop
repz
rol
fistpll
fcmovbe
std
fmuls
mov
in
xchg
mov
sar
xor
ljmp
cmc
test
add
shr
out
xchg
xchg
jecxz
out
int
loope
iret
into
sti
sti
jmp
fildl
test
fisttpll
loopne
out
mov
hlt
cmc
sarb
out
int3
fdivs
loopne
test
ret
cmc
aad
clc
out
enter
enter
nop
mov
in
in
jecxz
cs
clc
cmc
jmp
into
cld
aad
ljmp
cmp
repz
ss
in
idiv
jmp
stc
repnz
loop
std
xlat
mov
in
repz
loopne
in
in
cmc
cmp
cmp
rol
ret
cld
and
rol
xlat
iret
fdivl
fcmovnbe
idiv
cld
repz
ffree
xlat
sarb
fcmovu
jecxz
out
xchg
int3
xchg
call
repnz
into
ds
stc
loopne
fmull
add
cmp
jne
mov
mov
xor
add
mov
mov
mov
jmp
ret
fstp
ret
frstor
mov
in
fstps
jle
add
fcmovne
fcomp
jmp
icebp
mov
xchg
mov
rcl
fyl2xp1
xor
hlt
cli
xor
out
imul
aad
mov
std
loop
sti
ret
loope
fdivp
ss
aaa
xor
aaa
std
xlat
icebp
add
in
cli
jmp
cli
rclb
aam
aaa
jecxz
fisubrl
xor
roll
xlat
mov
shl
in
xchg
xor
cmc
out
lock
ds
jecxz
xlat
clc
test
lock
mul
iret
fldl2e
shlb
cmp
cmp
rcl
shl
out
ljmp
and
aam
cmp
fildl
cmc
testb
test
jmp
test
out
call
imul
lock
sti
loope
fmuls
ret
and
call
in
out
cmp
aas
aas
fdivp
adc
incl
mov
lret
xchg
call
test
in
lock
icebp
lock
sub
out
sub
mov
jecxz
sub
cmp
iret
loop
rcr
icebp
jecxz
xlat
sti
ret
xchg
jecxz
out
in
call
neg
xor
cmc
out
clc
lock
loop
vpaddw
rclb
shl
dec
fiaddl
neg
rol
fucomp
out
loopne
into
leave
mov
call
xor
cmp
idivl
sbb
std
lret
out
into
sti
mov
in
loop
out
in
out
fldpi
idivl
push
cld
cld
xchg
loop
test
int3
cli
lret
ss
jmp
fdecstp
in
jmp
orb
enter
out
xor
cli
test
loopne
std
shl
ret
xlat
fiadds
cmc
repz
xor
ljmp
std
repnz
cli
aas
fiaddl
mov
int3
xchg
lock
cld
hlt
int
jmp
aas
loopne
stc
into
cmc
fdiv
ljmp
jecxz
mov
test
xchg
in
loop
shl
cmp
cmp
aas
in
cli
bnd
loopne
std
loopne
test
std
rorb
cmc
repnz
xlat
aam
lret
aad
adc
jmp
fadd
stc
fucom
fisttps
icebp
aam
leave
lret
jmp
cli
div
icebp
neg
ret
cli
fadds
roll
out
in
out
jmp
cmp
rcr
rcr
testb
stc
enter
mov
aad
int
xor
fdiv
imul
rcr
fcmovb
inc
and
stc
sti
out
out
std
xchg
shl
xchg
icebp
in
out
std
rcr
cmp
orl
mov
test
repnz
clc
adc
xlat
in
shl
cmp
hlt
mov
lret
rcl
mov
xor
in
jmp
lret
aas
loope
icebp
shl
stc
fucomip
xchg
and
xor
call
aaa
hlt
sub
lret
repz
mov
int
mov
shl
xor
call
ss
jmp
cmp
in
test
into
xlat
xchg
jecxz
aad
out
lock
std
incb
loope
mov
ret
fisttpll
and
lock
ljmp
testl
hlt
enter
jmp
fcomi
popl
shll
ss
aam
fldl
div
mov
mov
out
out
shlb
xor
ss
idivb
aam
cmp
fidivrl
in
fucom
aas
add
push
leave
out
enter
xor
cmp
cmp
int
cmp
jmp
fcmovnu
nop
jmp
lret
loope
not
enter
loope
cmc
fadds
ret
std
ljmp
iret
jecxz
aam
jmp
enter
stc
int
out
aas
rol
ret
aas
out
cld
jmp
mov
loope
out
test
xlat
lock
repz
int
rcl
cld
clc
ds
loop
addl
leave
xchg
and
aam
aas
test
lret
aad
sarb
cmp
jecxz
clc
jmp
int3
cli
int
loop
into
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
jmp
aam
fistl
cli
cld
push
stc
cmp
movsl
add
cld
mov
sar
xor
idiv
cmp
fstp
hlt
add
out
sti
fcoms
loope
xor
rol
sar
ss
aas
xlat
lock
adc
adc
jmp
loop
nop
out
shlb
idivb
cmp
int3
xor
ret
fiadds
jmp
mov
hlt
sub
lock
out
sub
cld
cmp
out
jmp
sar
jmp
cmp
cli
enter
hlt
xchg
iret
aad
int3
rol
fcmovne
fdiv
out
repnz
out
fcomip
jmp
cmc
out
mov
shr
incl
shlb
in
lret
repz
ret
loop
aam
mov
orl
leave
repz
call
stc
hlt
not
out
ret
std
call
orb
out
in
div
xor
hlt
in
ror
imul
xor
call
jecxz
jmp
mov
icebp
into
lock
xor
out
repnz
shr
in
fdivr
dec
shr
mov
and
in
int3
out
out
fnstenv
lock
aam
hlt
fistpll
cmc
aas
repz
ret
add
out
in
xchg
in
out
jmp
fld1
cmc
in
out
lret
call
ds
ffreep
stc
xchg
addb
lock
iret
lret
cmc
fdivrl
iret
jmp
fdivrp
sar
addb
lret
int3
into
icebp
xor
fdivs
hlt
in
jmp
clc
ds
xlat
cmp
int3
test
jmp
fucom
mov
mov
int
xor
jmp
cmp
repnz
xlat
xlat
aas
enter
ror
sar
out
jecxz
jmp
cld
cmp
ljmp
xchg
fsubp
xlat
addb
mov
shr
clc
xor
lock
aad
rcl
mov
loope
mov
loopne
adcl
out
cmp
in
aas
jecxz
hlt
test
std
test
xlat
out
loope
aad
fsubr
cli
cmpb
loopne
lock
mul
fmuls
mov
xlat
icebp
repz
fdiv
cmp
rcl
out
ljmp
in
test
xor
icebp
fsubrp
call
fmulp
cmp
clc
clc
fmull
enter
into
xchg
ss
fdivr
clc
jmp
ljmp
xlat
sarb
loopne
mov
in
in
loopne
fildl
jmp
cld
div
rcl
fdivp
shl
fxch
fmul
sbb
mov
lret
vpaddusb
cmp
in
std
loop
shl
fdivr
ror
vpsubd
and
shr
mov
aad
ret
jmp
xor
out
shr
fcmovne
out
hlt
aam
hlt
mov
sti
lret
mov
out
out
ret
lock
rcr
clc
out
cmp
not
in
ffreep
mov
out
leave
test
not
cs
into
shl
shr
in
jmp
jmp
loope
std
fiaddl
fsub
fists
rcr
xor
in
xor
aad
rcr
lret
test
aam
aad
sub
out
icebp
enter
in
jmp
in
aad
cmp
jmp
xchg
sbb
dec
out
int3
ljmp
int
cmc
lock
fdiv
stc
fcmovne
bnd
addb
xchg
out
xor
std
into
jmp
idiv
idiv
rcl
incl
in
test
ret
call
in
call
cli
sar
shl
lret
int
sbb
xor
hlt
mul
fnstsw
hlt
repnz
sti
fidivrl
enter
leave
in
out
test
int
xor
cmc
sti
int3
hlt
cmp
stc
ffreep
sub
int3
sti
mov
shl
out
repz
aad
cld
out
aad
fiadds
loop
fldl
shr
jmp
sub
sti
cmp
jmp
in
lock
cld
rcr
rorl
test
decl
aad
iret
ss
repnz
int
fdivrp
lock
cmc
fadd
test
fdivrp
into
xor
fcmovb
clc
ss
fmul
aad
icebp
stc
rol
fdivp
test
out
nop
in
out
xchg
shl
imul
into
add
jmp
fstp
je
xchg
or
and
jle
movsl
add
iret
enter
idivb
sub
ffreep
stc
shl
leave
test
out
fildl
enter
neg
sarb
out
iret
jmp
ffree
roll
xchg
lock
repnz
cmc
enter
loope
cmp
les
in
fisttps
imull
out
cmc
shr
std
sti
clc
fst
shr
fadd
fdiv
stc
fsubrp
jecxz
mov
repz
push
leave
xor
sub
out
ds
cmc
cld
loope
fdivr
out
repz
ret
in
nop
out
loope
jmp
rcl
xor
xor
jmp
shr
test
loop
loop
sti
in
ficoms
fcom
into
fdivl
lret
neg
hlt
repnz
out
mov
cld
loopne
mov
jmp
stc
xor
out
sarb
ss
cmp
sbb
sbb
fcmovb
in
std
int
loopne
int
xor
fcomp
cmp
xabort
loop
not
jecxz
test
repz
in
lret
mov
iret
ss
fmulp
aad
rcr
aaa
cmp
mov
vpor
int
icebp
cli
xchg
lock
test
loopne
clc
in
cmp
fdivp
loop
cmp
test
iret
in
test
mov
xchg
out
enter
cmp
dec
cmp
cmp
cld
out
repz
repnz
fdivr
test
adcl
rcl
xor
cmc
into
stc
loope
shl
leave
or
mov
test
divl
in
fdivr
in
loopne
aas
fcmovbe
aam
test
std
fsub
hlt
xchg
and
mov
std
not
rol
fcom
repz
fcmovu
xlat
fdivl
out
xor
xchg
adcl
cmp
cli
int
xor
rol
cmc
cmp
fisttps
das
fldpi
icebp
stc
cmp
fmul
fstpt
fdivrp
aam
cmc
aas
repnz
aas
in
call
in
fdivr
in
stc
into
cmp
shl
lret
fldl
mov
test
cmc
in
iret
mov
lea
icebp
out
jmp
vpmaxub
int3
ret
stc
std
stc
rcr
aad
clc
out
lret
addl
enter
cli
ljmp
cmp
test
out
loopne
mov
and
dec
fstp
jmp
ret
cmp
jmp
in
cmp
in
adc
repnz
ffree
add
lret
std
fstp
lret
iret
xor
aad
xor
cmpl
sar
sbb
mov
loope
iret
mov
mov
popl
shlb
cmp
out
ds
mov
movb
hlt
call
int
cmp
iret
std
xlat
loopne
repnz
loop
or
into
cld
xchg
mov
enter
in
fnop
out
repnz
icebp
std
in
inc
fsub
fsubr
out
mov
xchg
jmp
ss
out
int
aas
sti
or
iret
cli
ds
lock
cmc
fcmovbe
loop
movb
into
out
out
in
ss
aam
cld
fcmovb
filds
lret
in
imul
xor
in
lret
sarl
aaa
hlt
idivb
cld
fcmovbe
sar
shl
lret
int3
enter
mov
cmc
rcr
leave
rcr
ljmp
xchg
repz
sti
fsubr
in
mov
out
call
cli
sarl
fdivp
cmp
rolb
icebp
jmp
int3
incb
call
cld
out
shl
lock
fcmovb
stc
jmp
lret
iret
aad
cmc
int3
rcl
xor
ss
lock
mov
out
addb
mov
in
leave
xlat
cld
fst
shl
cld
ds
out
fadd
mov
lret
call
sti
ss
rcl
fmul
aas
xor
in
cmpl
fldl
sbb
ret
int
rolb
enter
lret
rcr
repz
add
or
adcb
loop
in
cmp
cmp
jmp
fcmovu
bnd
fst
ljmp
in
xchg
jmp
das
sti
call
lock
fcomip
not
aam
fcmovnb
jecxz
int
xchg
enter
out
sub
call
into
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
jmp
int
rol
fst
lcall
xlat
inc
ret
jle
movsl
add
fsubrp
fdivrl
cld
lds
jmp
jmp
out
jmp
adc
out
iret
enter
jmp
rol
out
into
loopne
aam
sub
xchg
int3
xor
in
sub
in
into
aas
cmp
xor
test
out
loop
fdivr
mov
or
leave
xchg
in
jecxz
xor
xor
xor
rolb
in
xchg
lret
out
in
out
xchg
loope
rorb
cmp
out
cmp
hlt
into
cmp
fadds
in
ret
mov
clc
leave
test
lret
mov
out
shr
cld
cmp
aaa
cmp
fadds
shr
cmp
xchg
fucom
fucomip
in
fcomp
cmc
fcmove
cmp
roll
cld
mov
fsubr
int
mov
hlt
int
int3
fcmove
cmp
xor
rolb
idiv
std
mov
jecxz
jmp
int
in
idiv
std
sarl
stc
cmpb
shl
loop
test
test
fcmove
lret
loope
sti
orl
aad
out
cmc
cli
in
into
fsubr
sti
aad
ret
addb
cld
rclb
xor
clc
shl
in
clc
aad
cmp
loope
mov
out
loope
loope
test
out
in
enter
fidivrl
test
cmp
and
in
incb
adc
hlt
xor
aam
out
repz
faddl
in
hlt
ret
xchg
std
cli
jmp
mov
repnz
clc
xlat
ss
test
mov
mov
and
lret
loopne
lea
in
shl
int3
iret
repz
fcomip
int
out
fdiv
mov
ljmp
sti
lret
in
int3
int3
into
cmp
lret
enter
cmp
testb
mov
adc
cmp
aad
aad
rcr
fadd
rolb
sar
out
fimuls
shr
xor
cmp
cld
cmp
cli
fdivrs
in
out
cli
shl
xchg
jecxz
std
enter
addl
cmc
ljmp
test
fdivr
aad
cli
ret
in
adcl
rcl
aad
enter
sarl
push
sar
call
in
leave
fdivr
addl
xchg
call
in
sti
dec
cmp
test
fcmovnb
loopne
fmull
or
aam
ror
out
xor
out
into
leave
fcomp
lret
iret
sbb
cmc
lret
mov
clc
repnz
iret
in
hlt
std
xor
repnz
out
leave
mov
in
mov
std
ror
aad
rcr
clc
cli
cmp
jmp
aam
test
loope
cmp
xor
out
loopne
ljmp
aam
enter
into
or
rolb
cmp
in
int
out
aad
xor
in
int
iret
into
fcmovnu
xlat
out
aad
not
fcomp
ljmp
xor
out
enter
sarb
faddl
into
xchg
xchg
mov
loopne
shl
in
iret
cld
fistpll
xor
loopne
fiadds
stc
jecxz
cli
fadds
mov
pop
icebp
cli
xor
aas
cmp
loop
cmp
ds
fdiv
addb
mov
in
xchg
enter
sar
lock
repz
cmp
iret
ret
xlat
repnz
aad
in
enter
loope
in
aaa
fdiv
cmc
aad
cmp
fdivr
sbb
xchg
sti
stc
sti
jmp
jmp
fucom
loope
adc
xor
cmc
xlat
aad
cmp
cli
jmp
out
fcomi
adc
xlat
mov
out
enter
shl
ss
in
fucomi
aaa
aas
cmp
roll
jmp
mov
int
out
cmc
xchg
test
in
idiv
lret
not
fnstsw
into
cli
incl
lret
sti
shl
xor
jmp
ss
fcmovne
stc
cmp
add
addl
lret
jmp
int
aam
lret
loopne
sar
fcmovnu
std
loopne
fsub
cli
out
std
ljmp
das
lret
out
fmul
fcmovnu
fcmovb
cld
aad
jecxz
sub
aad
xchg
test
lock
fincstp
in
into
fnstsw
rcr
sar
hlt
test
xor
sub
sub
mov
jmp
jmp
leave
ret
int
int
mov
pusha
cmp
jle
add
cmp
lret
mov
leave
lock
ret
ss
cmc
shr
cmp
ret
in
cmp
leave
in
xchg
mov
nop
aad
mul
loop
repnz
std
ss
neg
fstpt
aas
fabs
clc
in
ret
fadd
jmp
xchg
xchg
aam
in
das
cmc
xor
jmp
xor
aas
ret
jmp
loopne
jecxz
icebp
fsubr
shr
out
aam
aad
in
vpsrld
out
icebp
faddp
out
les
cmc
stc
cld
out
lock
fcomip
out
test
xor
ljmp
adc
in
hlt
aas
cmp
in
std
out
mov
int
int3
lret
repnz
cmp
iret
cmp
stc
in
out
aad
loopne
out
jmp
jecxz
xchg
lret
clc
cmp
fsub
idiv
ljmp
out
neg
sti
stc
fcoml
lock
xchg
xor
rol
lret
lret
rcr
icebp
lret
ret
ds
in
rol
cld
decb
repz
hlt
ljmp
repz
stc
loop
cmc
incl
cli
adcb
repnz
in
ror
cmp
lock
cmp
shl
ret
jecxz
test
mov
xlat
test
loopne
fldl2t
fdivs
clc
leave
ljmp
hlt
loope,pt
fscale
clc
out
xchg
faddp
aam
lock
imul
iret
into
std
iret
cmp
cld
idiv
test
loopne
loope
sbb
cli
jmp
in
ljmp
iret
cmp
cli
sti
fcomip
adc
fcomip
aad
shr
rorl
ret
cli
shr
cmp
in
jmp
flds
mov
shl
nop
mov
jecxz
in
into
out
aaa
ljmp
sub
rolb
fimuls
shr
xor
lret
cmp
ror
cmp
repz
loope
repnz
xchg
loop
repz
int
shl
repnz
fcmovnbe
loope
movb
out
sub
shl
cli
cli
repnz
div
fcom
lock
repnz
ret
stc
lea
sti
int
cmc
test
xor
xlat
lret
fcom
xlat
ljmp
hlt
jmp
in
leave
loop
nop
mov
jmp
test
mov
xlat
sub
leave
ret
ret
cmp
test
in
xor
fxch
in
sti
lret
cmp
sar
out
ret
loop
mov
lret
call
test
int3
cmp
jecxz
out
sti
ljmp
out
mov
ret
fidivl
xor
in
aam
xor
icebp
shl
shl
aad
leave
loop
in
clc
loopne
into
hlt
fdivp
mul
ret
fldt
lret
aam
cmc
fld
shl
repz
ret
clc
pop
mov
xchg
std
rcl
das
fpatan
repnz
jmp
int
xlat
faddl
loopne
ljmp
leave
loop
int
hlt
enter
inc
aas
in
jecxz
enter
incl
out
cmp
fcomi
testl
fimull
cmp
repnz
call
stc
xor
ret
in
out
fcmovb
cli
fisttpl
jmp
adc
aad
int3
idivl
cmc
cmp
cmp
shr
xchg
add
mov
iret
in
xor
rcl
cli
idivb
dec
ds
jecxz
aas
repnz
cmp
sbb
jecxz
idiv
test
std
test
fsubrp
sub
jmp
cmp
in
lds
in
mov
stc
fcoml
repnz
clc
cmp
cmp
flds
icebp
repz
xlat
loopne
nop
lea
xchg
out
shr
in
cmp
cli
ljmp
in
mov
xor
loope
test
mov
int
jecxz
in
repz
int
rolb
stc
jecxz
xchg
in
nop
shl
enter
out
shl
shl
xlat
fcmovu
loop
out
loopne
out
mov
loopne
int
iret
xchg
aad
mul
xor
icebp
out
cmp
fnstcw
shl
cld
fcomip
cli
cld
repz
xor
repnz
mov
lock
repz
xor
aas
rcr
ret
cmc
rolb
xor
jmp
aam
mov
push
adc
add
test
into
ljmp
shl
out
aaa
cmp
aas
in
shl
fdiv
shl
xchg
out
in
fdiv
orb
in
fucomi
lock
fdiv
lret
into
cmp
in
add
ror
cmp
xchg
icebp
enter
mov
aam
cmp
into
leave
out
ljmp
fadds
movl
rol
in
repz
lock
roll
aam
leave
mov
lret
into
out
iret
nop
out
aam
int
imul
neg
int
xlat
cli
icebp
lock
leave
mov
movl
in
repnz
ret
std
repz
out
decl
roll
iret
xor
lock
std
sti
cmp
fucomip
enter
in
push
lret
in
into
and
in
div
out
test
loopne
roll
mov
out
mov
ljmp
int
into
stc
sarb
cli
fsubp
stc
in
hlt
out
fmulp
xor
xor
repz
out
jecxz
sti
stc
xchg
out
in
xchg
mov
aam
lret
aad
out
fsubrp
cmp
into
fld1
call
enter
jmp
jmp
in
repnz
xor
into
lock
out
aam
test
aad
test
lret
into
xchg
nop
lret
stc
ss
enter
cmp
cmp
int
fcomi
ljmp
loopne
test
les
xor
lret
in
roll
in
ret
icebp
clc
cmc
vpaddsw
cli
lret
fucomi
not
loope
shr
repz
fnstcw
shl
xlat
jecxz
rcr
fsubp
leave
jmp
ret
jecxz
jmp
hlt
ror
shlb
sti
in
into
sti
cmp
adc
repnz
sti
mov
stc
out
xchg
nop
lret
in
into
lret
aam
in
int3
jmp
repz
shl
out
aad
stc
lret
xchg
fsubr
out
xrelease
aad
neg
call
aas
cmp
in
xchg
test
in
int3
in
repz
xor
xor
stc
xor
into
in
loop
xchg
cli
lret
in
out
xchg
enter
repz
sar
ret
cmp
rcl
jmp
in
sti
hlt
repnz
les
frstpm(287
lret
out
lret
iret
repz
rorb
clc
ror
cmp
repz
lock
ret
call
mov
int
cld
jecxz
rcr
aas
das
lock
cli
fst
fidivrl
push
in
int3
cmp
repz
mov
cli
jmp
std
jmp
rcr
mov
in
int3
cmc
xor
jmp
hlt
ds
test
shr
sti
in
fiadds
aam
clc
aad
repz
cli
mov
sub
xchg
into
out
xor
into
out
int3
xor
cmp
repz
rol
xchg
leave
ljmp
sub
xchg
in
enter
cmc
std
rolb
cld
cld
jecxz
rcr
stc
cmp
jecxz
ljmp
not
int3
fcmovbe
out
int
ret
shl
shl
repnz
fsub
cld
xchg
fcmovnb
xchg
in
loopne
leave
xlat
ss
fdecstp
shl
mul
repz
lret
jmp
leave
icebp
shl
rclb
xor
lret
lock
lock
in
shl
ret
sti
out
loope
stc
jmp
out
repnz
aam
cmp
cmp
repz
std
cmp
loope
fcmovu
xlat
loope
out
mov
repnz
shl
xor
aaa
shr
sar
cmc
sti
cli
jecxz
call
fcomi
cli
incl
xor
xor
jmp
add
in
mov
neg
out
out
loop
sar
mov
jecxz
xor
call
cmc
aam
aaa
xchg
loop
fisttpll
int3
fcmovne
in
xchg
int3
fxch
aaa
ljmp
loopne
cld
jecxz
std
in
fcmovnb
loope
xchg
xchg
repnz
fnstenv
jmp
iret
cmp
int3
cmpb
fisttpl
out
sbb
out
nop
ror
out
xor
cmp
cli
in
repnz
rol
cmp
xlat
enter
mov
int3
ffree
shl
xchg
in
out
cmp
ss
xlat
jmp
out
fcomip
cmc
roll
fmull
test
xchg
jb
add
inc
cld
mov
cmp
je
jmp
xlat
rol
xlat
enter
push
dec
sbb
jle
add
fimuls
shl
clc
std
pushl
rcr
ret
sti
loop
ret
idiv
aad
clc
sti
fiadds
xchg
shl
cli
xor
in
enter
idiv
fidivrl
lock
loope
stc
fadds
test
xlat
loope
out
divb
repz
iret
hlt
repnz
stc
mov
out
in
repz
loope
icebp
rol
hlt
call
cmp
sub
in
hlt
mov
cld
xchg
int3
leave
fsub
into
lret
in
lea
in
in
jmp
fadds
fmull
xchg
int3
fimuls
out
test
jmp
in
loopne
ffree
ljmp
int3
fmul
xchg
xchg
repz
jmp
iret
fabs
fld
rol
fcmovnbe
in
cmc
loop
flds
mov
repnz
aam
in
ror
rcr
fidivrs
hlt
roll
aas
mov
xor
jecxz
cmp
out
leave
fmulp
hlt
idivb
lock
fucomi
jmp
fstp
sti
fimuls
mov
xor
cld
cli
xor
loopne
lock
decl
nop
loopne
jmp
xor
shr
loopne
sub
fsubr
rcr
xrelease
out
lock
shl
jecxz
in
xor
sti
rcl
fadds
jecxz
ret
shl
mov
call
out
rcl
call
jmp
or
faddp
loope
out
and
out
test
jmp
hlt
xor
cld
clc
add
rolb
jecxz
cld
cld
jecxz
out
icebp
iret
hlt
ror
aam
repz
icebp
lret
cmp
in
sarb
cmp
testb
xchg
xchg
mov
icebp
icebp
fcmovnbe
xor
cmp
ljmp
adc
aam
aam
xlat
fucomip
cli
cld
in
addl
enter
fildl
aam
fistpll
sar
sti
ret
jmp
mov
loope
in
xlat
jecxz
cmc
rcl
cmp
ror
shl
out
aam
stc
out
out
leave
mov
cmp
out
mov
sar
xor
aaa
leave
out
xor
mov
jmp
in
lret
test
in
in
hlt
lock
sub
fcmovnbe
fucom
cmc
in
mov
fdivr
test
jmp
in
aad
out
shl
rcr
neg
sarb
mov
cld
mov
test
out
sar
jmp
std
faddl
lds
fcmovne
cld
lock
cmc
iret
out
jmp
addl
into
jmp
xchg
cmc
aam
lock
call
dec
fidivrl
loope
out
frstpm(287
ljmp
loopne
int3
rorb
clc
test
ljmp
aad
fimull
leave
roll
lock
ret
icebp
icebp
repz
lret
not
xlat
iret
int
call
loopne
mov
into
std
mov
xchg
aam
xor
leave
ss
out
in
int
fnsetpm(287
fiadds
in
fisttpll
lret
hlt
clc
lret
in
cmp
out
into
jmp
cmp
jmp
ljmp
loope
test
in
imul
cmc
cli
fadd
xlat
loopne
ljmp
xlat
xchg
jmp
in
shr
sub
jmp
enter
fninit
hlt
movl
test
out
cld
in
fld
in
lock
addb
sti
add
mov
lock
xlat
hlt
aaa
cmc
std
fst
aad
add
aas
loopne
call
out
fsubr
sar
ror
shll
call
xor
idiv
lock
fadds
fucomi
in
xchg
xchg
shl
into
fcmovnu
iret
cmp
in
loopne
loop
addb
cli
ljmp
clc
lret
cld
cmp
sti
neg
aad
dec
stc
jmp
ret
fsubp
repz
lret
lock
fcom
cmp
iret
stc
sar
in
loopne
sar
xchg
jmp
out
xchg
in
faddp
rol
xor
in
aam
dec
fstp
cmp
fdiv
test
fildl
leave
jmp
mov
rclb
xor
add
add
into
ror
fxch
fst
cmc
mov
mov
jecxz
jle
movsl
add
sti
cmp
icebp
fdivr
in
repnz
enter
int3
test
mov
jmp
int3
iret
cld
iret
repz
repnz
cmp
cli
sti
call
addb
jecxz
out
icebp
xor
std
cmp
lock
cmc
iret
hlt
call
lret
mov
mov
stc
in
rol
fcmovnb
fstpt
leave
cmc
div
cmc
ds
rcl
stc
jecxz
cmp
leave
rolb
ret
aam
std
stc
xor
repz
shr
std
out
out
jmp
xchg
mov
mov
enter
int3
xor
enter
loop
incl
sub
stc
clc
std
filds
loope
icebp
xlat
jmp
aaa
std
fcomip
ret
repz
aad
fdivrp
mov
into
iret
jmp
sti
in
xchg
clc
lds
iret
cli
int
cmp
in
fxam
loopne
shl
fldl2t
sub
lock
mov
loop
xchg
iret
ss
in
jmp
call
idivb
aad
jmp
ret
add
loop
mov
xchg
repnz
icebp
xor
xor
cld
loopne
addl
les
out
in
shll
xor
xlat
int3
cmc
stc
shl
jecxz
out
push
aad
movb
jecxz
aam
xor
fcmovbe
cmp
leave
enter
rcr
jmp
icebp
faddl
std
out
repnz
vpslld
cmp
out
ss
cmp
idivl
aas
repz
fucomp
and
in
mov
leave
loope
in
lock
fstpt
ljmp
out
ror
jmp
faddl
iret
lret
faddp
call
call
cmp
int
sbb
hlt
mov
cmp
mov
cli
test
out
shl
out
repnz
out
cmp
sti
idiv
in
clc
icebp
icebp
aas
ret
fmuls
sti
icebp
mov
xor
ror
aad
out
loopne
fucomi
call
loope
addl
decl
xlat
fsubr
ror
cmp
into
idivb
fadd
roll
aad
fscale
fucomi
out
subb
enter
lret
lret
rol
loopne
mov
fcomp
imul
fiaddl
xchg
in
shl
lock
cmp
fnsave
lret
rcl
rcr
in
fmulp
cld
or
mov
xchg
jmp
shr
idivl
aam
xchg
call
mov
sbb
aam
jmp
enter
into
stc
aad
leave
fidivrl
xlat
clc
sbb
out
mov
rorl
jmp
lret
idiv
repnz
xor
addb
fnstsw
std
xlat
std
xchg
mov
out
loope
lret
int3
cld
aaa
loope
and
les
out
xchg
repnz
shr
fcom
jecxz
repnz
fcmovu
std
in
loop
stc
aas
idivl
hlt
fucomp
incb
shr
out
xchg
jmp
mov
icebp
cmc
jmp
hlt
cmp
cmp
repz
cmc
fcmovnbe
ljmp
xchg
mov
ljmp
out
in
loopne
lret
inc
cmp
xchg
cli
loop
out
test
rcl
loope
int
xlat
test
fcmovu
out
or
ret
frndint
sti
int3
jecxz
enter
jmp
fxch
in
lret
xor
ss
or
cld
loope
shl
cmpl
in
in
call
mov
in
in
cli
out
fldln2
iret
fcomi
int
shl
leave
aad
lret
int
xchg
leave
xchg
divl
cli
out
rolb
fcmovb
ljmp
dec
cld
out
out
repz
lock
int3
cmp
jmp
rcl
fucom
roll
call
in
shl
lret
cmc
stc
lret
enter
aam
cmc
ftst
sti
test
repz
cli
lret
mov
jmp
icebp
fstpt
sbb
ret
cld
sub
xchg
mov
decb
shl
shr
in
xor
enter
fcmovnbe
lock
cmc
lret
fsubr
in
test
xor
hlt
lret
cmp
icebp
xlat
sti
rolb
cli
repnz
ljmp
adcl
cmp
fmul
loopne
icebp
cli
vpaddb
in
xchg
icebp
mov
out
rorl
sub
jmp
test
xor
jmp
mov
jmp
ret
rol
rcl
rcl
sar
and
adc
fs
add
fstpt
movsl
add
cmp
aaa
ffreep
test
jmp
sti
xchg
call
addb
not
fcmovne
jmp
hlt
in
repnz
aam
addb
int
int
divl
xlat
repnz
fldpi
hlt
test
xor
ds
cmp
lret
test
mov
lock
fcomip
jmp
not
fld
cmp
mul
cmp
repz
cld
jecxz
loop
leave
int3
std
fists
loop
iret
out
cmp
imul
std
ret
cmp
xchg
cld
ljmp
loope
loopne
cmc
sarl
cs
cmp
loope
fsub
test
fcomip
mov
clc
int
lret
mov
xor
aaa
lret
cld
leave
fcomp
cmp
shl
cld
std
ret
xlat
sti
aad
loopne
ret
clc
jmp
test
mov
in
test
shl
int
xlat
test
jecxz
sub
in
and
mov
lret
shl
cmc
enter
cmp
dec
iret
cmp
sarl
repz
out
cld
lret
bnd
xor
divb
lock
ret
test
ret
cld
repz
fucomip
sbb
lret
xchg
loop
xor
in
cli
out
aad
sar
cmp
cmp
in
into
xor
ror
lret
xor
cmp
hlt
fiadds
test
add
cmc
nop
test
mov
lret
out
shl
fxch
in
fmulp
into
into
ret
clc
fsub
mov
aas
in
loop
xchg
loopne
jmp
jmp
int3
stc
cmc
jmp
loop
loop
aam
shl
repnz
cmc
fimuls
mov
xchg
ljmp
out
call
cmp
repnz
fcomi
out
out
in
sar
loop
roll
ret
cmc
stc
fmul
stc
shl
xor
ret
cli
hlt
fldpi
mov
repnz
call
aad
ljmp
addb
repz
leave
cmc
in
xchg
cli
enter
jmp
repnz
sub
cs
fdiv
sarb
jmp
test
idiv
cli
mov
call
loope
loop
lock
not
sbb
cmp
cmp
orl
in
aas
cmp
aam
fdiv
lock
aam
aad
fcmovu
fmul
loopne
out
out
xchg
into
shll
fldl2e
clc
sti
fidivrl
repz
xlat
aad
test
clc
enter
mov
jmp
xor
shl
cmp
repz
jmp
cmp
mov
mov
jmp
cli
repnz
xor
cli
cli
cmc
fcmovnu
call
lock
repnz
cli
movb
fucomi
xchg
xchg
out
aaa
lret
sti
ljmp
lock
shl
cmp
lock
xchg
ret
rcr
out
cmp
cmp
jmp
rcl
and
fadd
flds
enter
orl
cli
out
jecxz
fcomip
div
fptan
rol
mov
in
jmp
test
into
loop
call
int
xor
out
call
or
fidivrl
ret
sarb
xor
call
out
leave
cmp
sarb
sar
cmp
fstp
ret
rcr
lret
xchg
lea
lret
neg
ror
fadds
test
aas
in
enter
shl
and
leave
rcl
not
repnz
jmp
cmc
ret
out
rol
repnz
les
xchg
mov
out
out
repz
into
not
stc
int
loopne
mov
aas
mov
out
fucom
into
jmp
out
cmp
out
cmp
ret
iret
icebp
test
or
xchg
mov
ljmp
fdivr
shr
loopne
ror
lock
rcl
mov
fxch
stc
fsub
out
in
xchg
cmc
out
icebp
leave
xor
leave
shr
or
jecxz
fiaddl
xlat
ljmp
into
mov
jmp
int
aaa
enter
out
sbb
lds
ljmp
icebp
imull
sub
in
hlt
out
out
ljmp
aam
loopne
ljmp
incb
stc
into
in
ljmp
out
rcl
ret
fiadds
int3
xchg
enter
repz
lret
rcl
fscale
out
in
cmp
lock
roll
clc
xor
add
cmp
jmp
rcl
rcl
fstp
rcr
cld
cmp
jmp
jl
sbb
movsl
add
cmp
filds
out
test
repz
hlt
hlt
lret
xor
sti
sti
ss
fdiv
in
in
idiv
hlt
ret
mov
out
mov
fnstsw
in
das
leave
repnz
int
std
ror
in
sarb
into
out
jmp
incb
loopne
mov
fadd
lret
xorl
imul
hlt
aad
rcr
aas
lret
int
lret
test
out
out
out
ljmp
xor
cld
repz
and
sbb
mov
aam
repnz
loop
sti
xor
cmp
hlt
sarb
loopne
call
aad
test
xchg
xchg
jmp
fnstsw
xor
out
fcmovnu
ffree
jmp
fstl
xchg
out
aam
shr
lock
cmp
out
aas
rolb
test
rcr
ljmp
xlat
enter
leave
repz
shl
rol
cmp
call
xchg
orl
ss
cmp
lret
shl
repnz
call
xchg
xchg
test
xor
fdivrl
fdivrs
cmp
cmc
loop
fpatan
enter
loopne,pt
lret
repz
ret
cmc
repnz
cld
add
in
sti
loope
fimull
lret
out
repnz
cld
stc
aaa
aad
fcomi
out
repnz
stc
fcmovb
xchg
fmul
lret
fucomp
cli
addl
aam
in
out
fsub
clc
sarb
cmp
fst
sub
aam
int3
mov
aas
sub
call
xor
dec
ret
into
in
cmp
sarb
call
fdivr
loopne
out
xchg
xchg
jecxz
call
shr
add
loopne
aaa
aam
faddl
out
cld
loop
repnz
xor
iret
std
jmp
neg
aam
icebp
repz
mov
out
sti
mov
mov
shl
out
aad
int
jecxz
repnz
mov
cld
sub
out
lret
loop
shl
xor
div
cmpb
xlat
shl
sti
test
jmp
out
int3
call
test
cmc
cmp
lock
aam
fdiv
cmp
xchg
cmp
fsubr
ds
cmp
out
push
shr
cli
xor
dec
cli
xor
fmul
ret
ljmp
out
fucomip
shr
int3
in
int
lret
cmp
fdivrp
out
rorl
jmp
or
lret
ror
sarb
xor
repz
fcom
std
test
rcl
lret
ljmp
int
loopne
cmp
fucomi
leave
loopne
lock
cld
fadds
sti
ror
loope
call
shrl
cmc
fcmovu
fcomp
out
ljmp
fcomp
cmp
out
and
loopne
roll
iret
jecxz
fucomi
cmp
adc
aad
icebp
mov
lret
into
xchg
ss
enter
int
stc
cmp
cmp
sti
repz
mov
mov
in
repz
ljmp
std
ret
adc
fcmove
ret
test
xchg
or
aad
enter
shlb
enter
ror
not
xlat
roll
xchg
hlt
out
into
das
out
call
enter
in
shl
hlt
stc
ret
fchs
hlt
out
out
test
xchg
xchg
jmp
xor
fdivp
int
repz
rcr
fidivrs
stc
sub
call
icebp
mov
repnz
icebp
jmp
out
cmc
hlt
aas
rcl
in
cli
jmp
mov
ljmp
lock
leave
iret
cmc
int3
xor
hlt
fadds
xchg
lret
jmp
repnz
mov
lds
shr
jmp
sar
aad
out
std
ret
shr
cli
testl
aam
in
shl
iret
lret
enter
fnstcw
stc
loope
in
lock
loopne
leave
out
leave
loope
fdivp
xchg
lret
icebp
div
hlt
lock
cli
cmc
imul
in
cld
jmp
fisttps
into
rcl
shl
ss
shr
out
rcl
sti
in
fadds
sti
imul
cli
leave
rolb
out
int3
lret
ss
fnstsw
cli
out
std
incb
out
je
mov
mov
jmp
int3
enter
lret
int
stos
test
pop
dec
xor
fsub
jle
movsl
add
lret
shr
out
int
lock
lock
ss
shl
int
loopne
ret
test
loope
ljmp
lret
in
out
cs
loop
into
loop
clc
lock
mov
sti
fdivr
std
add
bnd
hlt
ss
std
jmp
aaa
icebp
loope
repz
loop
roll
ror
in
repz
call
repnz
loope
call
lock
jecxz
mov
jmp
lock
aam
div
cli
ljmp
movb
test
adcl
cmc
cmp
std
stc
lret
aam
neg
aas
fdivp
clc
rolb
in
decb
loope
jmp
fnstenv
dec
fiaddl
rcr
shr
cli
addb
xchg
xchg
mov
xor
lret
out
fxch
sti
sbb
mov
cli
fucomp
test
test
stc
repnz
ss
imul
int3
hlt
iret
cmp
in
aad
loop
call
mov
icebp
ror
shr
lret
jmp
icebp
cmc
cli
rcl
into
out
movl
call
loopne
out
lret
iret
xbegin
fucom
leave
orl
mov
out
sub
fcmovu
sar
fsub
cmp
fiadds
cli
ffree
into
xchg
roll
clc
ss
fcomp
call
loope
sti
sti
rol
xchg
int
testl
xor
int3
in
cmp
aas
int3
hlt
cld
call
cld
sbb
mov
loop
out
xlat
aaa
shl
fdivr
test
lock
sub
xor
cmp
cmp
in
ror
stc
shl
aad
clc
fisttps
aaa
ljmp
leave
xor
cmp
out
mov
lock
in
mov
xor
out
in
aaa
aam
std
ds
in
aam
cmc
cmc
addb
in
sub
int3
in
leave
jmp
shl
adc
sar
xlat
jmp
les
fldl
int
fsubr
out
aam
sbb
xlat
std
loope
std
fcomip
repz
out
cmc
aam
cli
cmp
fdivrl
leave
fdivr
les
rcl
neg
aam
mul
dec
in
rorl
xor
rcl
in
shl
ss
xlat
icebp
repnz
not
repz
loop
jecxz
in
iret
lock
lock
out
aad
test
hlt
lock
faddl
out
jmp
out
jecxz
xlat
lock
fld
fidivrl
fcomip
loopne
aad
les
in
mov
xchg
call
aam
not
loop
ds
test
shl
in
sti
mov
fmulp
xchg
mov
xor
fdivs
enter
cmp
sub
cmp
aam
fdivp
ret
mov
fcmove
jmp
inc
jecxz
loopne
in
enter
ljmp
fucomip
rol
in
mov
fldl
repz
in
into
cmp
cmp
fstpt
into
xlat
out
fcmovu
aad
stc
cld
std
loop
call
sar
enter
jmp
cmp
faddl
sti
lret
xchg
fucom
das
xor
fadd
hlt
ss
sub
shl
repz
sbb
enter
out
test
faddl
ror
sti
lock
aad
xlat
ds
loop
call
in
into
aam
shl
xor
enter
fcmovu
aad
orl
nop
orb
in
jecxz
cmp
rcr
ret
xor
neg
xchg
mov
icebp
loope
mov
fdivr
faddp
repz
rcl
jmp
flds
in
ret
jecxz
aad
div
sti
aaa
ljmp
shr
int3
in
call
mov
imull
shll
loope
std
in
cmc
xchg
neg
fmul
int3
lret
fdivrp
call
lock
iret
int
hlt
aam
test
repz
xlat
loop
std
mov
ror
mov
mov
mov
lea
add
mov
mov
mov
jmp
int
rcl
fcmovu
int
xchg
daa
ljmp
jmp
jle
in
out
cmp
fcmovne
ljmp
ds
fcmovu
xchg
stc
sub
in
xor
icebp
loope
cmc
clc
test
lock
shl
test
cld
xor
out
loop
std
nop
mov
rol
in
ss
aaa
icebp
clc
out
cmp
hlt
into
icebp
repnz
lds
add
cs
into
iret
rcl
xlat
fcmovu
int
out
lock
xor
mov
fimull
dec
ret
xor
imul
int3
call
ror
jecxz
fldl
mov
ficoms
cmp
cmp
std
stc
fdivp
jecxz
std
filds
in
xchg
lret
xchg
int3
iret
xor
xor
fdiv
jmp
inc
jecxz
repz
cmp
sti
xchg
test
imul
lock
out
sarl
cmp
ds
icebp
rcr
div
ret
fiaddl
cli
xchg
repz
cmp
cmp
rcr
loopne
add
loop
sti
cld
rorl
ss
repnz
aad
ljmp
jecxz
test
hlt
fsubrp
lock
std
int3
aam
xchg
repz
xor
leave
ljmp
cmp
aam
ds
xlat
hlt
mov
jecxz
hlt
adcb
shl
aad
fsubrp
fdivp
iret
stc
std
repz
mov
lds
in
fmull
stc
into
leave
repnz
cmp
aaa
rcl
sarb
faddl
in
in
xchg
mov
sub
lret
cs
hlt
iret
sar
sar
clc
cli
aas
jmp
mov
xchg
ror
xchg
lock
ror
in
cmp
lret
in
fcmovne
cmc
into
rol
fsub
fcmovne
xlat
loop
test
jmp
rcl
in
xor
out
lock
leave
aas
fidivs
xchg
test
stc
loop
int
mov
hlt
shr
shlb
xor
aam
icebp
hlt
cmc
rolb
sub
fdivr
faddl
int
imul
ret
fnstcw
fcmovbe
hlt
aad
faddl
ret
fadds
out
leave
out
mov
shll
std
aam
cmp
sti
rcr
in
lock
jmp
xlat
icebp
mov
xchg
out
in
jmp
int
xor
shl
repz
shl
in
loopne
in
lock
cld
aam
fucomip
hlt
aad
neg
icebp
in
sar
jmp
in
aam
inc
mov
in
cli
rorb
ror
sti
leave
cmp
fincstp
lock
pushl
shl
ffreep
lds
mov
std
lock
leave
out
cmc
fcmovbe
lret
jmp
fiadds
aas
mov
xlat
decl
int
rcll
hlt
int3
out
out
enter
in
shl
ret
std
in
out
jecxz
orb
int3
cmp
lret
cmp
shl
in
fdivrp
fadds
in
enter
call
out
shl
cmp
cmp
loop
mov
shl
leave
clc
mov
mov
int
fstl
leave
ret
out
xor
aad
cmpb
sarb
std
rol
fimuls
int3
out
aam
repz
ret
out
shr
loopne
std
cld
into
not
cmc
xchg
jmp
jmp
ljmp
out
xor
cmp
lret
in
sti
jecxz
and
mov
fst
loopne
testl
xor
icebp
out
fstpt
cmp
xor
into
cmp
inc
ret
out
loope
and
shr
xchg
in
ljmp
loopne
call
clc
repz
mov
xchg
test
mov
lret
jmp
lock
in
xor
cmp
xlat
aad
aad
loop
or
ror
xchg
shll
cmp
xlat
shr
shl
sbb
ds
xchg
in
in
idiv
loop
adcb
leave
aam
leave
out
in
mul
cmp
xlat
out
test
sar
jmp
les
leave
ror
enter
call
test
cli
out
sar
inc
in
rcll
ret
xlat
jmp
in
ds
jmp
out
loope
sarl
testb
xchg
in
les
cmp
aaa
in
fiadds
cmp
sti
cli
sti
cli
jmp
xchg
cs
in
clc
mov
mov
xor
add
mov
jmp
mov
fst
fxch
jg
lods
loop
push
add
jle
add
repz
cmp
aas
loop
fucomi
sti
call
cmp
xchg
ljmp
in
and
test
out
call
into
in
sti
repnz
ret
jecxz
cmp
clc
push
jmp
loope
jecxz
cld
rcl
loopne
std
clc
sti
into
xchg
lret
jmp
rcl
sub
ljmp
clc
xlat
xchg
out
xchg
fcom
in
sti
ljmp
jmp
xor
fmul
jmp
cmp
jmp
hlt
clc
std
and
ret
cld
int3
fadds
lret
xorl
ljmp
leave
stc
aas
cld
repnz
repz
in
inc
in
aam
xchg
jmp
call
leave
fldln2
std
fst
aas
rol
xlat
loop
jecxz
int3
in
lock
xchg
out
in
into
fdiv
cmp
cmp
iret
clc
int3
jecxz
ret
fnstsw
clc
int
cmp
in
shl
jmp
loop
ror
aas
sub
ffreep
mov
mov
out
lret
lock
icebp
aad
cmc
xor
ret
aad
rol
icebp
repnz
xchg
int3
into
fnstenv
in
fucomp
cld
fmul
cmp
repnz
lret
jecxz
or
in
sub
mov
leave
jmp
shl
std
xor
xlat
xor
call
xchg
xchg
jmp
sti
xor
clc
loopne
sti
lret
loopne
out
out
fucomp
mov
sti
xor
loope
cmp
mov
aaa
fucomip
cmp
int3
icebp
inc
fiaddl
stc
call
icebp
mov
xchg
jecxz
aad
xor
cli
div
cld
aas
idivl
shl
out
icebp
faddp
std
test
jecxz
jecxz
mov
cmc
out
xor
in
aam
jmp
rcl
into
shr
jecxz,pt
ret
xlat
fadds
xchg
icebp
shl
hlt
ss
cli
sti
cmp
aas
stc
cmpb
in
xlat
repz
stc
cli
fucomip
jmp
lret
clc
vaddsubps
fmul
shl
ret
and
stc
mov
or
out
fisttpll
in
repz
iret
sti
dec
fst
sar
clc
out
loope
jecxz
cmp
in
fisttpl
divl
xor
shr
iret
jmp
rolb
fsubp
aad
mov
lret
out
les
in
sarl
repz
ret
repz
xlat
test
loop
test
lret
call
repnz
out
and
fmul
lret
ror
repz
enter
iret
jmp
addb
jmp
lret
lret
mov
in
out
int
in
shll
cld
fcomp
dec
out
loopne
cmp
rcr
ljmp
loop
leave
xchg
int3
mov
aad
out
idivb
shl
aas
aam
sti
loopne
add
clc
idiv
fldln2
xor
icebp
sarl
aam
stc
xor
stc
fidivrs
repz
int3
stc
lock
jecxz
das
int
ror
sar
in
aas
jecxz
repz
cmp
lds
jecxz
shr
fbstp
fnstsw
call
out
lock
div
loop
jmp
in
xor
fsubr
fldlg2
xlat
in
fstpt
sub
repnz
loop
enter
xchg
test
xor
iret
sti
cmp
clc
cmp
rol
test
mov
rclb
xor
in
shll
fcomi
in
loopne
fdivp
in
loope
xchg
sub
int
cmp
cmp
icebp
cmc
fmulp
rcr
out
ret
test
in
hlt
out
mov
lock
leave
cld
in
cmp
iret
repnz
cmp
cmp
cmc
hlt
loopne
fld
nop
enter
loopne
icebp
repz
cld
out
std
int
sarb
fdivr
sar
push
fldl
filds
ret
in
stc
cmp
hlt
fsubrp
call
hlt
sarb
rcr
hlt
in
in
leave
faddl
int
imull
ss
int3
div
shl
ror
sti
loop
hlt
clc
sti
ljmp
into
int
ret
out
ljmp
fidivl
fcmovu
jecxz
enter
out
lock
xchg
hlt
aam
hlt
cmp
xor
cmp
ret
inc
or
add
cmp
je
mov
mov
add
mov
mov
mov
jmp
rol
lret
aad
mov
sbb
bnd
movsl
add
iret
call
cld
stc
cld
fsub
filds
in
lret
lret
into
cmp
fxch
in
std
fcom
vcvttpd2dqx
mov
int3
roll
xor
xlat
out
shlb
ret
ret
in
incl
loope
and
adcb
cld
xor
cmp
hlt
cmp
ds
and
faddl
out
lock
int
out
cmp
fcmovne
fcmovnbe
rcl
xlat
loopne
fldl
int3
jecxz
xor
leave
lock
shll
std
int3
stc
ljmp
stc
call
mov
jecxz
repnz
rcl
iret
neg
in
out
not
aad
repz
aas
ror
ret
in
sub
ljmp
das
xor
fcmovnu
fsubr
fnstsw
lock
rcr
aam
ret
clc
sub
xchg
int
xchg
fmulp
cmc
das
lret
sti
hlt
icebp
dec
test
fstp
fldl2e
fucomi
orb
lret
rcl
out
fnstenv
enter
cmp
cmp
jecxz
iret
loopne
clc
lret
stc
rcr
icebp
std
xchg
xchg
das
into
ss
enter
ss
iret
shl
fld
cmp
call
icebp
int
xchg
std
in
ror
fyl2x
xor
lret
icebp
stc
sarb
cmp
int
cmp
mov
jecxz
notb
xchg
shr
loope
ret
cmp
fldln2
aam
repnz
xchg
shl
std
filds
fucomip
repz
out
repnz
mov
aas
loopne
into
test
fucom
loop
aam
mov
in
iret
fcomi
fimuls
in
in
std
clc
cld
loopne
fdivr
cmp
incb
test
shl
int3
cmc
out
in
leave
int
into
aad
into
cmp
repnz
sar
std
jmp
roll
hlt
aad
out
fcmovne
hlt
lret
cmp
xor
out
cli
call
fsubrp
lock
test
aas
sar
jecxz
ret
clc
mov
leave
int3
mov
leave
std
out
mov
sub
in
fsubrp
xlat
flds
not
out
clc
jecxz
mov
lea
loopne
jmp
clc
aad
ds
fcmovu
fdivr
loopne
test
mov
nop
lock
rcl
xchg
mov
ret
jmp
cmc
aam
cmp
ret
ret
fcomip
xchg
mov
hlt
in
in
ljmp
out
lret
out
cmp
sub
cld
rcr
rcr
enter
std
shr
sti
ljmp
aad
int3
out
iret
in
cmp
dec
loope
loopne
ret
sti
in
lret
int3
test
shr
das
lret
stc
iret
jmp
aad
ljmp
test
testb
loopne
rcll
fsub
int3
int3
stc
xor
rcr
repnz
icebp
loope
ds
frstpm(287
loopne
std
loope
cli
std
fisttps
ljmp
int3
adc
int
in
fdivp
test
into
mov
out
cmp
fxam
stc
cmp
hlt
cmp
test
xlat
int
nop
xchg
rol
out
ss
cmp
aaa
clc
cli
leave
out
sti
iret
aam
sarb
ror
mov
out
out
xchg
subl
in
cmp
lock
clc
lret
in
out
mov
repz
in
out
rol
sti
out
call
fcmovnb
xchg
jmp
call
jmp
jmp
aam
in
int
xor
out
cli
std
in
stc
fyl2xp1
addl
cs
ss
cmp
loope
roll
ret
jmp
fmull
ljmp
jmp
aad
loopne
fucomp
fdiv
mul
loop
cli
cli
fmul
out
fcmovnu
mov
fst
in
loop
shl
cld
lock
aaa
cmp
cmc
stc
ret
mov
incl
cmp
call
iret
lret
cmp
repnz
xchg
nop
enter
xchg
repnz
enter
repz
sti
leave
loope
int
in
test
call
out
jmp
shr
lret
aas
incl
out
std
repz
out
cmc
mov
mov
out
in
fadd
cmc
hlt
fcmove
fnstsw
test
lock
loope
aad
inc
or
or
mov
ror
aad
fldt
sbb
je
jle
movsl
add
mov
jmp
jmp
cmp
in
in
cmp
fdiv
cmp
aaa
out
fcmovnbe
repnz
stc
cld
fisttps
adc
cmc
call
shl
fistpll
aam
testl
leave
in
mov
ljmp
shr
xlat
enter
int3
test
xlat
fdivr
stc
out
int
lock
cld
out
stc
out
sbb
cli
sar
hlt
lret
mov
test
xchg
leave
cmp
lret
fsubrp
clc
repnz
icebp
enter
incl
loopne
in
int3
test
leave
rcr
in
cmp
sbb
rolb
jecxz
nop
xchg
in
in
cmp
cmp
cmp
cmpb
aam
loop
loopne
test
or
out
ror
int3
in
cli
iret
fsubp
icebp
cmp
in
icebp
jecxz
icebp
mov
cli
jecxz
jecxz
in
test
jmp
loope
sarb
lock
cli
int3
xlat
loope
iret
mov
into
repz
cs
fmul
lret
in
jmp
hlt
fdivr
out
in
aad
sbb
fucomi
incl
in
fld
lock
adc
test
test
adc
incl
shr
in
stc
lret
jmp
fucomi
addl
xchg
testb
fucomp
mov
out
xor
cmp
ss
aas
out
cli
in
jmp
jecxz
mov
imul
in
repz
fcom
fcmovbe
iret
leave
stc
clc
fdivr
into
loop
sar
loop
cld
mov
int3
out
std
int
mov
out
icebp
fnstenv
cmc
jmp
ds
hlt
cld
aam
aas
cld
cmc
mov
xchg
enter
test
call
out
repnz
out
in
in
ds
xchg
call
cld
lret
in
test
hlt
aam
lock
lret
stc
out
fdivrl
rcl
fdivp
std
sarl
sti
shl
cmc
clc
in
xchg
jmp
jmp
xor
repz
fstp
in
hlt
fcmovu
rcl
cmp
mov
xor
xor
in
out
div
cmp
xor
loope
xor
lret
loopne
addl
int3
into
cli
cmp
out
iret
sar
shl
not
xchg
fmulp
leave
xchg
or
cld
hlt
fdiv
sti
sar
loop
repnz
loope
test
loope
ljmp
into
iret
das
lret
jmp
hlt
cmp
ret
fdivr
sub
int3
fmul
icebp
jmp
shr
iret
xor
repnz
xlat
fld
test
shl
mov
loopne
incl
iret
lret
idiv
xor
int3
fst
fstp
rorl
ffreep
in
lock
aam
xor
fdiv
aad
shl
jmp
out
fdiv
fsubp
int
in
shl
rol
lret
shl
sarl
repnz
out
aad
mov
fsubr
loop
mov
leave
popl
loop
xlat
shl
cmp
repnz
ss
ret
cmc
out
call
int3
rcr
jecxz
xchg
int
iret
ret
fldpi
cmp
xor
cli
int3
test
les
fcomi
clc
shr
test
lret
mov
loopne
ljmp
xlat
sar
stc
ret
aam
ret
stc
or
xchg
hlt
std
out
loop
cmc
call
out
neg
xlat
test
out
ffreep
aas
testl
ror
vucomisd
xlat
int
incl
ret
hlt
xchg
or
jecxz
aad
div
clc
jmp
into
roll
fadds
out
enter
sbb
ret
out
iret
aad
into
fadd
out
int
loop
cmp
leave
fcmovnu
mov
jecxz
repz
out
in
cmp
ljmp
loopne
cmc
out
mov
cld
std
icebp
xchg
repnz
xor
shl
out
adc
fst
aam
or
nop
mov
xor
cmp
out
cmc
cmp
cmp
clc
rcl
cmp
ljmp
test
lds
rcl
idivb
repz
jmp
in
cli
aaa
into
cmp
icebp
out
leave
fsubp
mov
addl
jmp
aam
iret
int3
fst
outsl
fmull
pmulhuw
sti
jle
movsl
add
ljmp
idiv
xor
rcl
out
div
stc
shl
loope
fdivr
sub
decl
out
hlt
xchg
out
into
shl
call
lret
cli
fcom
fdivrl
movb
lret
ljmp
cmc
jecxz
in
in
cli
cmc
cli
and
lock
xchg
out
cld
fcmovb
mov
aam
iret
xlat
ss
aam
stc
idiv
ret
cmc
repz
cmc
orl
repnz
ljmp
ss
sti
loope
shl
out
jmp
orl
jecxz
jecxz
rcl
xlat
cmp
repnz
shl
xor
cmp
mov
orl
call
sti
fdivs
fsin
cmp
loop
addb
nop
mov
leave
in
jecxz
hlt
aaa
loope
cmp
shr
dec
testb
sub
jmp
and
xchg
add
leave
in
fucomp
aad
cmp
rcl
ret
push
aad
filds
nop
mov
xchg
les
neg
aaa
xlat
sti
repz
aam
out
cmp
out
loop
decl
ffreep
cmp
icebp
xor
ss
fstpt
fsub
cmp
ror
ljmp
mov
std
not
in
jmp
lock
cmc
cmp
stc
shl
in
aam
int3
mov
lea
xchg
rol
cmc
fcmove
xor
sti
clc
clc
testb
ds
xchg
or
aad
aam
icebp
int
cmp
jmp
ret
loop
and
test
cld
lret
loope
jmp
lret
xor
rcl
in
hlt
aas
cld
cld
cmp
ret
aad
cld
mul
jmp
cli
loopne
in
loop
cmp
ss
xor
aam
into
shl
roll
sbb
jmp
repnz
xor
in
cmpb
ret
std
aad
fsub
mov
hlt
int
aaa
xor
lret
lret
imul
fidivrl
aam
fcmovnu
jmp
loope
mov
loope
xlat
jecxz
repz
repnz
shl
iret
icebp
ss
out
loop
fst
test
ret
mov
icebp
int
dec
lret
out
lret
stc
ljmp
idiv
fnstcw
in
fistpll
ljmp
xlat
enter
fscale
rcr
cld
hlt
cli
cmp
in
lds
dec
loop
in
in
icebp
jmp
cli
out
int
lock
mul
xchg
out
cmc
in
xchg
cld
int
mov
vmaskmovdqu
loope
aaa
cld
lock
fidivrl
fucom
sar
sti
ret
rol
hlt
shr
mov
std
xchg
cld
lret
aad
mul
repz
cmc
int3
frndint
aad
and
lock
test
clc
orb
das
lock
xor
int3
fdivr
in
push
test
out
test
jmp
stc
sti
test
test
int
fprem1
neg
fdivrp
cli
sti
in
sar
out
call
lock
fdivs
fucompp
repz
fabs
shl
faddp
loop
testl
repz
fsubr
fsub
fdivrs
in
call
filds
adc
iret
xor
jmp
cli
fst
sar
fcom
loope
aam
int
or
sbb
xchg
repz
not
in
rcl
ds
fsub
icebp
shl
idiv
test
into
fildl
out
lock
int3
icebp
test
ljmp
xchg
aam
into
xor
lock
cmp
neg
loope
fsincos
cli
orb
lock
xor
lock
std
rcr
iret
loope
lds
ljmp
in
xchg
in
lock
div
lret
sti
adc
les
stc
int
nop
icebp
out
repz
int3
sub
into
rol
out
shl
xor
fstp
in
iret
jmp
loop
cmc
cmc
loop
int
in
out
cmc
sarb
sar
loope
in
hlt
lds
in
call
fmulp
in
repz
sti
xor
stc
in
repnz
fiadds
stc
cld
xchg
iret
mov
call
xor
cmp
jmp
ret
xlat
int
fstp
cltd
sbb
ss
jle
add
in
test
add
clc
aas
loop
fsubr
loopne
xchg
call
lock
call
adc
jecxz
enter
hlt
aas
int
xchg
in
icebp
cmc
shll
jmp
repz
call
xor
cmc
out
mov
mov
mov
into
mov
xor
out
sti
lret
jmp
fucomi
idivl
into
repz
or
lret
xlat
filds
loope
icebp
in
das
lock
int3
xor
stc
aad
rol
cmp
mov
repnz
repz
fmul
ret
xlat
sarb
fistpll
shl
iret
repz
icebp
movl
shl
xchg
loop
rcl
cld
leave
enter
stc
loope
loopne
ret
jecxz
addb
loopne
xchg
aam
imul
mul
leave
lock
cmp
in
lret
ds
xchg
test
ljmp
xchg
ljmp
ds
lock
in
fnstcw
rcr
xlat
call
addl
cmc
out
xor
out
shl
fidivrs
lock
int
ret
iret
fnstsw
ror
call
mov
shl
test
xor
aaa
xor
xlat
enter
test
shl
xchg
aad
xor
ss
out
cmp
div
shl
cld
mov
sti
std
sti
in
shl
in
ss
clc
ljmp
jecxz
out
out
out
loope
lock
sbb
jecxz
das
int3
lock
lock
iret
addl
out
loop
cli
loope
out
shl
xor
ret
cmp
neg
leave
into
inc
xor
in
cli
leave
int3
lret
nop
jecxz
ljmp
lock
xlat
ds
int
loop
cld
fcmovnbe
ljmp
cli
mov
rcll
fpatan
int
fsubr
cmp
aas
xlat
loop
cmp
fstp
and
jmp
xchg
xchg
lea
shl
jmp
icebp
aaa
shl
ds
cld
ffree
test
xchg
mov
in
lret
mov
xchg
xchg
shl
icebp
leave
iret
aaa
cmp
cld
aaa
leave
cli
rcr
cld
fcomip
aam
xchg
lea
out
int
in
xlat
lds
hlt
shl
aas
jecxz
xlat
cmp
fdivr
and
lds
nop
repz
jmp
xor
bnd
xor
cmp
loope
cmp
repz
std
fcmovnbe
lret
loop
in
das
fdiv
icebp
hlt
fucomip
cmp
repnz
lock
ret
test
out
loope
xchg
repz
fst
lret
cmp
mov
lret
loope
sub
jmp
int3
enter
cmp
int3
shlb
in
icebp
int
test
xchg
fadd
jecxz
cld
fisttps
rcl
xor
cmp
int3
rcr
cmc
icebp
lock
fnsetpm(287
ret
mov
into
mov
fsincos
repz
fxch
aas
cld
in
loopne
test
in
test
jmp
rorb
sub
ss
divl
clc
sti
filds
aas
mov
in
clc
jmp
mov
rorb
in
jecxz
cmp
fdiv
ror
fdivr
fdivp
shl
idiv
testb
jmp
aam
out
xlat
jmp
hlt
cld
icebp
aam
out
cmp
xlat
xchg
cli
ljmp
lock
cs
lret
into
sti
repz
div
cld
in
xchg
iret
shl
test
cmp
out
loopne
std
roll
out
fpatan
out
leave
clc
jmp
adc
fdivr
std
shl
dec
ljmp
xchg
xor
mul
not
cmp
stc
faddl
xlat
out
repz
testl
sub
out
xlat
aad
leave
cmp
fdivrl
in
clc
into
add
shl
hlt
jmp
icebp
out
orl
shl
int3
int
cld
icebp
out
hlt
in
test
mov
or
ret
std
in
neg
std
iret
cmpl
ret
std
fsubrp
clc
mov
jmp
xor
ss
out
cmp
cmc
icebp
fcmovne
in
mov
fabs
sti
mov
movb
enter
into
xlat
int3
into
out
loopne
std
in
iret
repnz
fucomip
addb
ror
xchg
out
not
xor
int3
fcmove
sti
cmpb
test
add
add
clc
xor
add
jmp
rol
xlat
int
arpl
mov
push
cmp
jle
add
incb
ret
repnz
test
in
addl
out
cli
aas
fucomip
cld
lock
cmp
mov
fcmovnu
fdivp
fiadds
iret
fld
xor
std
repz
shl
icebp
ret
loope
out
aam
out
xchg
ljmp
ss
lret
divl
into
neg
shl
cmc
ret
xchg
sti
mov
xchg
out
ret
jmp
cmp
fnstcw
aam
idiv
mov
fcmovb
fcmovb
clc
clc
in
and
mov
out
call
test
sar
out
fcmovnbe
ljmp
ljmp
xlat
divl
ss
jmp
loop
sti
sti
sbb
jmp
ljmp
jmp
xor
rcl
into
bnd
loopne
loop
clc
cmp
lock
int3
nop
xchg
mov
in
xor
icebp
shl
cmp
enter
fdiv
aad
lds
call
aam
repnz
aaa
fdivrl
fdivp
int
int3
cmp
aam
mov
out
xchg
incl
fidivrl
xor
ljmp
repnz
fcmovnu
xchg
sti
mov
repz
mov
in
into
in
clc
int3
fcomp
in
test
and
aad
into
cli
int3
mov
xor
jmp
call
icebp
addl
fucomi
out
orl
jecxz
cs
aaa
icebp
aas
out
int3
stc
sar
add
test
out
jmp
mov
out
enter
in
int
xor
std
shl
xor
int3
mov
sub
ffreep
loope
cmp
into
xlat
jmp
cmp
aas
in
test
jmp
fcmovu
mov
xchg
test
ss
leave
xlat
lret
cld
icebp
stc
into
hlt
push
and
in
clc
fucomp
fucom
test
ljmp
in
icebp
cmp
idiv
div
cmp
ret
in
cli
test
ljmp
xchg
inc
aad
leave
sti
xor
enter
loop
icebp
aaa
clc
sbb
div
out
sti
fimuls
xor
sub
leave
hlt
std
not
xorb
and
mov
mov
mov
int
sbb
aaa
shl
hlt
div
sti
icebp
xor
cmp
sti
neg
leave
fld
std
test
out
test
ror
xchg
jecxz
shlb
ror
lds
xlat
fnstcw
fsubr
aas
sar
mov
ds
lret
in
test
test
fists
xor
clc
fmulp
cmp
xlat
cmp
test
loope
stc
int
in
mov
jmp
jmp
jmp
ljmp
cld
out
std
rcl
out
cmp
xchg
int
iret
std
in
cmp
in
jecxz
jmp
xor
loopne
cmc
xlat
clc
stc
leave
xchg
call
xor
hlt
jmp
cmp
inc
icebp
stc
call
icebp
addb
cmp
out
cmp
not
cmp
int
jecxz
repnz
nop
ror
out
int3
in
into
ror
not
std
imul
cmp
clc
iret
testl
std
jmp
int3
out
sub
lock
out
rcr
fdivr
sarl
loop
orl
mov
icebp
enter
in
in
call
cli
loop
ret
aad
cmp
mov
call
lock
shr
not
ss
ljmp
aam
call
ror
xchg
imul
ss
xor
into
out
cmp
lret
into
fistpll
mov
in
enter
cld
call
out
out
cmc
std
rol
cmp
hlt
cmp
hlt
mov
jmp
out
mov
shr
cmp
not
cmp
iret
aam
cmp
cmp
stc
or
shr
lock
rcr
idiv
ror
fcomi
in
test
xchg
out
loopne
repz
out
xor
cmc
rol
int3
in
incb
sar
ds
addl
sti
cld
out
loope
aam
in
fcomi
leave
iret
shl
aaa
jmp
hlt
lock
hlt
sar
movl
fsubp
shl
xor
cmp
cmp
fsub
test
add
lods
or
add
add
add
mov
mov
mov
mov
mov
mov
jmp
lret
ffree
fcmovu
sbb
jb
fisubrl
jle
movsl
add
mov
lds
lock
sarb
cmp
out
cli
sbb
faddp
shl
ret
in
fcomp
into
lret
xchg
int
aam
fcom
in
repnz
iret
cld
cmpl
icebp
clc
movb
jecxz
lock
mov
fisttps
int
lret
shl
out
int
ret
and
ret
int3
dec
stc
nop
lock
push
repnz
clc
test
cmp
std
sti
ljmp
fsubrp
sti
mov
std
loope
in
mov
rolb
fcmovbe
ss
hlt
cmpb
fsub
sti
in
mov
lret
lret
fimull
jmp
xor
test
ret
cmc
sbb
loop
int
test
aaa
in
xor
stc
xlat
fsubrp
in
cmpl
sti
call
mov
jmp
stc
lret
int3
addb
cld
cmp
repz
stc
aas
xlat
ds
out
shr
std
fmull
loope
lret
fcomip
stc
shl
cmc
ror
sti
int
stc
fnsave
lock
std
xchg
out
out
out
jecxz
jmp
fsqrt
vaddsubps
in
repz
cli
clc
cmp
loopne
xchg
call
cs
ror
jmp
not
into
aas
test
cmp
leave
vpaddsb
in
mov
xor
xor
cmp
sarl
hlt
fsubr
loope
test
lock
clc
and
and
aam
repz
cmp
and
in
call
in
cld
loop
fists
stc
in
xor
iret
cmc
cmp
jmp
clc
stc
in
int3
in
in
lret
clc
out
sarl
aas
loop
rcl
shl
rcl
fstp
xlat
ljmp
addl
jmp
sar
cmp
ret
fprem1
cmp
in
jmp
mov
out
fsubr
sub
cmc
sti
cmp
add
shl
sarl
loope
aad
cld
in
mov
aaa
clc
xor
call
int
cmc
loopne
into
cmc
hlt
test
clc
fisttpl
mov
jmp
enter
std
out
ret
mov
fildl
into
int3
in
in
shr
jmp
sar
lock
ds
loop
stc
mov
in
lret
out
repnz
xchg
shr
stc
cmp
cmp
leave
lret
lret
loope
fcmovnbe
rcr
fisttpll
jmp
repnz
cmp
imul
cli
cmp
stc
cmp
std
test
loopne
testl
jecxz
ss
out
jmp
cmc
fsub
fstp
cmp
xchg
std
testb
call
xlat
in
shr
ret
mov
test
jmp
out
fabs
lock
jmp
div
rol
aad
lret
int
mov
in
iret
out
int
out
out
out
fcmovu
ds
in
iret
fcos
enter
lock
mov
shr
loope
enter
enter
stc
rcl
cmc
cli
cmc
div
cmc
jmp
jmp
loope
mov
out
fldl2t
aaa
xor
fiaddl
loopne
aam
out
in
xlat
int3
mov
jmp
shlb
shll
ljmp
ljmp
call
decl
rorl
rcr
rol
int3
repnz
shlb
fcmovne
aas
loope
loopne
clc
ret
int3
out
sti
xchg
iret
mov
cmp
enter
cmp
int
fcmove
hlt
ret
addl
in
call
hlt
jmp
int3
cld
ljmp
xchg
mov
cld
out
mov
into
xchg
cmp
int
cmc
fdivrs
fnstcw
adc
fcmove
aam
in
fucomip
orl
in
leave
cld
clc
sti
call
adc
ret
out
call
xchg
cli
lret
in
aam
into
rcl
fcmovb
divb
int3
repz
shl
in
in
out
test
in
lds
call
ss
lret
call
cmp
test
out
xlat
addb
nop
mov
cmc
ss
cmp
fstp
cmp
div
les
pushl
jmp
int
into
fst
das
inc
aam
jle
rorl
mov
movsl
add
loope
mov
cmc
aam
int
out
xor
call
lock
into
rol
les
mov
cli
lock
xor
imul
cld
in
cmp
in
aas
rolb
fprem
std
stc
leave
in
xchg
clc
hlt
lock
adc
test
fiaddl
out
test
out
aad
shll
lret
out
into
cmc
repz
ret
fadd
fldl
stc
jmp
fcmovne
xchg
ret
xlat
out
shl
shlb
adc
sarl
std
hlt
rol
notl
out
ljmp
icebp
fistpll
fdiv
ffree
loop
cli
ljmp
out
into
in
xchg
xchg
das
out
cmp
in
cmp
fcmovu
fld
int
cld
cld
call
into
loopne
fmull
loope
lock
hlt
fmul
in
aad
xor
sti
fxch
out
movl
jmp
rcr
fxch
call
repnz
in
fst
rcl
vpaddsb
filds
repz
fildll
cs
xor
leave
sti
out
and
hlt
fisttpl
jecxz
fildl
in
clc
jmp
idiv
out
fsub
idiv
repz
xchg
jecxz
xlat
sbb
fimuls
nop
dec
iret
das
enter
stc
cmp
fdiv
cld
test
xlat
testb
fsubrp
adc
out
in
in
ret
lret
fidivrs
leave
in
iret
sbb
frstpm(287
in
faddl
into
adc
test
repnz
enter
loopne
in
sar
out
test
ljmp
in
call
out
repnz
shl
repnz
repnz
cmp
repz
orl
in
xlat
in
xor
cli
cmp
shl
aam
loope
cld
ds
clc
in
filds
xlat
ss
int3
lret
loopne
int3
rcl
idiv
cmp
xor
cld
ljmp
les
out
in
cmp
ss
fcmovnbe
in
jmp
test
clc
out
fstp
test
in
xchg
ror
xor
out
ret
fdivrs
in
std
fstp
not
test
enter
stc
xchg
jmp
out
shlb
out
lret
icebp
fstpt
test
fcmovu
and
test
enter
les
ljmp
sti
cmp
fstp
icebp
aad
in
in
nop
xchg
jmp
cmp
imul
shl
int
test
out
sar
hlt
fisttpll
dec
out
in
xor
cmp
shl
in
aam
in
fildl
fiaddl
in
aaa
jecxz
not
fdivrs
ret
roll
cmc
ljmp
in
hlt
rol
into
lock
dec
aaa
aam
clc
rcr
xlat
in
div
xchg
rorb
xlat
test
call
imul
or
jmp
call
in
out
int
shl
repnz
jmp
cmp
out
rcl
ret
fldl
in
in
loopne
push
repz
cli
in
cmp
cmp
incl
loopne
addl
xor
cmc
int3
cld
fadds
out
fucomi
test
ljmp
in
mov
call
lret
into
stc
xor
out
repz
in
xchg
fiadds
in
out
mov
repnz
fst
fmulp
loope
in
out
xchg
xchg
out
shl
xor
repz
aad
cld
shl
ret
jmp
mov
out
xor
xlat
fidivrl
out
fcmovne
hlt
clc
loopne
in
add
mov
lret
nop
out
call
enter
rcl
sar
test
xchg
lea
xchg
leave
in
repz
jmp
hlt
sarb
loopne
fiadds
or
nop
loopne
shl
out
cmp
sti
call
flds
fldl2e
test
mov
in
addl
lock
fnstsw
jmp
inc
bnd
not
mov
jmp
in
xor
data16
add
je
mov
mov
pop
jmp
into
lret
fcmovne
into
fistpl
adcl
pop
xchg
jle
movsl
add
jmp
lds
sti
int
out
jmp
cld
shl
clc
fdiv
fimull
iret
jmp
int3
test
xor
in
cmp
jmp
shl
in
call
clc
mov
loopne
out
out
hlt
xor
in
cmp
loope
fdivr
rcr
std
clc
repz
test
out
ret
int3
orb
cli
cmp
cld
lret
icebp
cmpb
and
ret
xchg
cld
lret
jecxz
fisttps
cli
out
hlt
icebp
jmp
inc
jecxz
jmp
cmp
rorl
stc
xor
repnz
ss
faddl
aas
fldl
out
into
loope
in
loope
mov
in
lret
aam
fyl2xp1
aas
cmc
aas
cmp
int
call
repnz
lret
decb
nop
out
out
lret
sti
out
jmp
call
cld
cmc
shl
shl
out
leave
test
nop
xchg
sub
rol
cmp
xlat
cli
lret
cli
lock
cld
inc
loope
stc
or
orb
call
jmp
ss
out
rcl
fdivr
cmp
sbb
aam
mov
xchg
mov
mov
lret
xor
xor
cmp
xor
movl
sub
xor
ret
rcr
lret
sti
aaa
out
leave
fcomip
out
ret
rol
aad
aas
stc
in
std
repz
ret
aad
ljmp
ret
call
cmc
jmp
out
out
loop
int3
idivl
stc
shll
out
iret
cmp
lock
in
fucom
inc
filds
jmp
xchg
jecxz
enter
clc
into
ss
aad
icebp
fiaddl
sar
stc
test
out
std
ficoms
in
aam
aam
xor
fstp
divb
test
xchg
out
repz
out
ror
div
fmul
aam
fsincos
loope
out
test
int
mov
icebp
in
icebp
iret
ret
int3
enter
hlt
lret
testb
rcr
loopne
out
mov
in
sub
jmp
out
stc
enter
repz
cmp
aam
in
test
loopne
fimuls
out
cmp
in
jmp
stc
div
xchg
orb
hlt
test
in
fmul
lret
jmp
fildl
rcr
ffreep
sbb
mov
mov
into
call
cmp
cs
fstpt
clc
aas
shl
ret
in
out
loop
into
in
test
das
loope
lock
cmp
out
cmp
iret
in
loop
clc
adc
ret
test
ret
hlt
out
mov
ss
int
aad
int3
cmp
cmp
jecxz
std
and
xor
out
out
addb
xlat
lock
leave
in
fsubrp
rcr
add
cmc
fdivr
loopne
lret
cld
loope
and
ror
loop
repnz
repz
repz
ljmp
in
jecxz
loope
loopne
or
xchg
loopne
xor
jmp
hlt
xor
ljmp
faddp
loopne
mov
out
out
test
repz
lret
cmp
std
out
testl
test
cmp
xor
in
out
iret
cmpl
jecxz
jmp
int3
lret
fsubp
rcl
xlat
out
in
cmp
fucomi
clc
out
shl
out
fildl
loopne
enter
out
mov
shl
hlt
repz
hlt
out
jmp
int
mov
fadd
std
sti
in
fucomi
repnz
sar
fnstenv
out
fsubr
jecxz
jecxz
xchg
mov
int3
mov
lret
out
adcl
leave
call
xor
test
ljmp
test
or
fldl
cld
in
neg
in
into
fcomi
rol
xchg
jmp
fldz
nop
xchg
in
out
out
roll
jmp
cmc
loop
cmp
fldl
clc
ret
addl
xor
fcmovne
idiv
std
call
fldl
fisttps
out
lret
fists
idivl
xlat
stc
fistpll
roll
xlat
out
nop
imulb
enter
fnstenv
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
aad
into
aad
fst
int
loopne
in
push
in
test
jle
shll
hlt
ljmp
leave
std
fdecstp
in
testl
jmp
xor
cli
sarl
fld
loop
icebp
cld
ljmp
leave
in
aaa
shl
sti
cs
repz
cmc
add
mov
testb
mov
xlat
xor
shr
cmp
fld
repnz
out
movb
std
ficoms
xor
sar
cmp
cmp
iret
loope
out
sbb
repnz
xchg
loop
cmp
into
nop
rcl
xlat
int3
xor
int3
std
call
in
out
loope
clc
clc
in
xchg
loopne
xchg
in
into
neg
enter
in
hlt
aaa
shr
stc
ret
fiadds
into
fisttpl
das
ljmp
not
ds
in
std
rol
loop
stc
fabs
jecxz
or
loopne
ret
call
xor
xlat
fdivr
roll
mov
lret
std
std
xchg
test
shr
xlat
stc
int3
idivb
aam
stc
incl
int
rorb
iret
ret
call
jmp
aad
cmp
xchg
xchg
rcr
rcl
ss
stc
repnz
clc
fistpll
loope
aas
not
fucom
in
loop
out
xchg
loop
loop
int
ljmp
cmp
cli
iret
cmc
ret
enter
std
fiadds
lret
cli
fcmovne
loope
loop
in
shl
shl
mov
jmp
nop
out
fincstp
ret
neg
int
rol
cli
shr
rol
ret
filds
fists
sarl
repnz
xor
sub
into
ds
clc
ret
jmp
mov
test
out
out
neg
ret
int3
hlt
fucom
in
cmp
rcl
loope
fcmovne
nop
call
jmp
iret
not
aaa
cli
cmp
iret
in
stc
loope
in
cmp
loopne
leave
aad
lock
mov
out
leave
ror
cmp
out
cmp
into
lock
fdivr
lret
out
jmp
fsubrp
adc
repz
loopne
aam
ffreep
aas
cmp
xor
enter
lret
jecxz
jmp
in
cmp
idiv
cmpb
adc
testl
loopne
repnz
leave
in
ds
test
stc
loop
loope
into
out
ficoms
in
aad
xor
icebp
ss
out
fstp
in
aad
fcmovne
test
test
xchg
ljmp
stc
xlat
sarl
xlat
in
ffreep
loop
std
test
fsubr
shl
sti
cmc
cmc
test
enter
fnsave
loopne
out
in
std
leave
loopne
cli
or
mov
call
in
leave
xlat
fadds
in
repnz
jecxz
jmp
orb
ljmp
into
cmpb
ffree
xchg
out
lret
nop
faddl
cmc
cmc
out
in
aad
fcmovnu
into
shl
out
cmp
aam
shl
loope
mov
cmp
loop
std
int
int
aam
rcr
xor
cmp
loopne
aad
out
cmc
out
fcmovne
enter
nop
in
loope
int3
into
in
fcomip
ljmp
cli
repz
mov
fsts
aam
int3
rcr
call
cld
icebp
loope
cmp
cmp
aad
loop
fsubr
lret
fcomip
into
xor
cmp
into
cmp
test
leave
xchg
cmp
mov
orb
jmp
ljmp
iret
shl
into
loop
fimuls
lock
loop
out
test
cmp
aaa
lock
rcl
icebp
neg
fiaddl
loopne
std
loope
mov
mov
loopne
out
shlb
iret
stc
hlt
icebp
repnz
sti
repnz
loope
loop
repnz
xchg
out
xchg
rcl
in
cs
leave
aam
cmp
std
loopne
std
aad
call
cmp
stc
les
enter
cmp
fxch
leave
cmp
test
out
mov
mov
loop
jmp
mov
mov
and
mov
mov
sub
xorl
mov
sbbl
push
mov
xor
movl
cmp
movl
je
sbb
jmp
rcl
rcl
rcl
aad
xchg
stos
gs
aas
mov
xchg
add
shl
enter
clc
out
divl
fst
shl
xchg
adcl
call
faddp
ds
out
rolb
cmp
call
rolb
xlat
hlt
in
cld
shr
repnz
std
loope
aad
loopne
cld
enter
sbb
call
out
jmp
aas
clc
stc
fld
push
xchg
call
shr
ss
lret
stc
cmp
xor
repnz
ljmp
roll
repz
rol
clc
stc
iret
fdiv
cld
sar
and
rolb
call
xchg
call
jmp
cmp
ds
ret
aad
fldl
jecxz
xchg
lock
out
sub
aam
repnz
enter
fildl
hlt
mov
mov
int
jecxz
iret
xchg
ror
in
cmc
lret
ss
loope
aas
in
icebp
shl
cmc
push
stc
cli
int
xchg
fcmovne
in
test
aad
ss
enter
int3
out
sti
cmp
lock
cmp
jecxz
cld
xchg
xchg
hlt
int
stc
sarb
leave
ljmp
cmp
sub
fisttps
lret
int
out
leave
lock
rol
sarl
fcmovu
loop
mov
call
lret
repnz
repnz
in
fcmovbe
test
roll
add
in
test
leave
loop
icebp
xor
fcomi
lret
lock
rcr
repz
icebp
sbb
and
rorl
test
clc
lds
idiv
stc
shl
aam
shl
loop
in
test
test
decb
cmc
xlat
stc
out
idiv
clc
shr
or
ds
cmp
in
icebp
std
mov
int3
fcmovu
ljmp
int
jecxz
loopne
leave
fdivp
in
nop
call
out
mov
jmp
in
sti
xor
cmp
in
in
fdiv
fsubrp
stc
into
mov
xchg
shl
xchg
ljmp
cli
rcr
jmp
cld
xchg
jmp
in
mov
enter
lret
enter
xor
aas
test
fcomi
icebp
aam
cli
lea
xchg
fisttps
cmc
ljmp
cmp
test
mov
ljmp
mov
shl
imul
std
out
into
out
cld
sarl
cmp
idiv
orb
enter
shr
sar
xor
lret
aad
xor
xchg
faddl
lret
mov
lea
out
jmp
out
into
fiaddl
idivb
roll
mov
in
mov
xchg
mov
fcom
clc
cmp
cmp
into
fdivrp
cmc
enter
lock
fldl
jmp
ret
hlt
int
aad
neg
sti
stc
loope
in
ret
int3
enter
leave
out
int3
rcl
leave
xor
out
repz
rcr
sti
fdivp
leave
loop
leave
leave
mov
xchg
bnd
in
xor
fdivrs
cld
ljmp
fcmovu
repz
xlat
addb
fimuls
out
repz
rcr
cmp
rolb
out
lret
mov
loop
loop
lock
ljmp
fstpt
loop
test
loop
jmp
jmp
lret
aad
hlt
repnz
clc
xlat
fiadds
out
fldl2e
repnz
in
shr
lock
in
div
aaa
cmp
jmp
cmp
fst
loop
loopne
in
cmc
in
sti
xchg
aaa
ljmp
sti
aas
cld
stc
adc
test
in
lds
addb
iret
clc
rcr
repnz
stc
fst
cmp
shr
mov
xchg
fcmovnbe
out
test
shl
loope
call
lret
enter
sar
hlt
repz
mov
call
loope
lock
fucomp
sub
fsubr
out
sar
jmp
hlt
testl
loopne
and
fucomp
jmp
ss
hlt
in
idiv
cmp
shl
fldz
xor
repnz
andb
sbb
cmpsl
pop
add
mov
andl
sub
addl
xor
movl
cmp
jne
adc
mov
sbbl
jmp
enter
int
int
repz
mov
jle
xchg
add
xchg
in
mov
jmp
xchg
ss
xor
aad
in
cmp
call
ret
jmp
in
jmp
rcr
rorb
repnz
repz
mul
ret
hlt
xor
imul
out
in
in
loop
iret
addl
fmul
sti
cmp
in
cmc
call
in
mov
fcmovu
xchg
rcll
out
aaa
int3
xor
cld
sar
ljmp
cld
ror
cli
idiv
mov
loop
repz
into
xor
int3
call
in
out
into
fdivp
in
out
fsin
orl
not
sarl
cmc
fiadds
in
into
in
in
mov
into
icebp
in
jecxz
stc
aaa
stc
aam
xor
clc
sti
not
aas
cld
fsub
cmc
fcmovu
addb
loop
loopne
cmp
fcmovbe
cld
ds
xlat
sub
hlt
ret
out
leave
iret
fsubrp
lret
rcll
fdivrl
enter
fmulp
int3
xlat
std
aad
imul
out
enter
fsub
mov
into
jmp
jmp
repnz
mov
sti
xor
mov
lock
rcl
out
ss
iret
and
out
cmc
sti
loop
enter
loopne
out
xchg
aam
out
sti
xlat
out
repnz
test
cmp
mov
loopne
out
in
std
lret
int
loop
xor
das
lret
jmp
ds
cli
cld
loope
shr
addl
xchg
int3
xchg
repz
out
aad
stc
call
sti
test
cmp
fsub
ret
mov
jecxz
fcoml
xor
xor
rcr
int
cmp
loopne
loopne
xchg
jmp
addb
xchg
clc
xor
ret
int
jmp
iret
fcmovu
loope
ds
lret
incl
aas
fxch
cmp
int3
cmp
int3
into
rcl
out
ret
sbb
lds
inc
loopne
ss
cmc
jmp
repz
test
cmpl
in
test
stc
sti
leave
fnstenv
sarl
cmp
xor
rcl
xchg
xchg
mov
clc
mov
call
into
xor
sar
clc
icebp
lret
rcr
out
sub
fcmovnb
lret
jmp
mov
clc
jmp
jmp
lret
shr
sbb
cmp
rcl
std
xlat
stc
int3
lret
into
in
hlt
fmul
loopne
in
in
int3
ret
in
sti
loop
fcmovnu
mov
ljmp
mov
in
jmp
repz
fcmovnu
rolb
fcomp
fcmovu
fmull
lret
mov
aam
xor
aam
rol
fstp
ljmp
icebp
sti
rorl
call
lret
lock
out
lret
lret
out
clc
cld
fcom
ds
testl
mov
call
leave
clc
in
aaa
out
fdivrs
cmp
shl
idivb
ret
stc
fmull
lock
cmc
in
fcmovne
cmp
test
not
loop
imul
out
nop
shr
sub
iret
in
repz
clc
cmp
jmp
shl
repz
fcmovnu
loopne
nop
test
shl
mov
jecxz
aad
out
fcmovne
cli
aas
fcmovbe
cli
out
div
call
repnz
in
xchg
clc
call
aaa
in
sti
ss
int
test
rorb
int
test
call
cmc
clc
call
divl
shl
cmp
loopne
cmp
in
loopne
in
test
out
rcr
icebp
fmul
imul
sti
out
lret
rol
call
leave
movb
xchg
jecxz
xor
int
lret
cmp
cmp
xlat
fsqrt
in
out
mov
fisttpll
sar
in
aaa
lret
repnz
shr
sar
push
loopne
loop
mov
lret
loope
in
iret
cld
mov
rcl
fnstenv
aaa
lock
int
fldl
mov
in
aad
loope
out
cli
cmc
in
aaa
lret
push
repnz
out
in
in
std
sti
fadds
repnz
mov
jecxz
ret
xor
lock
stc
clc
add
jmp
mov
xorl
xor
add
adcl
mov
sbb
mov
andl
xor
subl
jmp
rol
aad
aad
aad
leave
mov
mov
movsl
jle
xchg
add
out
shl
fcmovu
fsubrp
std
sti
into
in
aam
leave
out
jecxz
aam
out
loopne
cmp
fnstsw
repz
jecxz
fmul
jmp
out
xor
leave
shl
int3
in
enter
lock
jecxz
clc
cmc
sarb
call
jmp
hlt
jecxz
cld
fcomi
in
fcmovnbe
fdivr
cmp
in
aad
stc
cmp
test
repnz
iret
sar
in
lret
aaa
fcmovbe
int
cli
shr
out
loopne
std
cli
fcomi
out
mov
loopne
xor
jmp
xor
icebp
in
fdivl
cmp
cmp
aad
mov
hlt
mov
in
icebp
in
lret
shl
xor
xor
sarb
cmp
repnz
lock
faddl
clc
xchg
call
hlt
into
aad
iret
fst
lret
int3
cld
loope
fcomip
xor
mov
bnd
jmp
out
hlt
divl
sti
fcmovnb
aaa
loopne
xchg
repnz
decl
rcll
out
cmp
int3
sub
shl
cld
cli
sub
jmp
fadds
rcl
cmc
hlt
xor
xor
out
aad
lock
shl
mov
loope
ret
out
lret
dec
jecxz
loope
rcl
aam
cmp
ss
cmp
cmp
rcl
jecxz
mov
leave
mov
out
shrl
rcl
aam
hlt
fcompp
rcl
lock
add
aad
addl
ret
shr
out
std
cmc
jmp
cmp
cli
decl
call
hlt
xor
rol
cmc
aaa
cli
cmp
loopne
icebp
stc
xchg
stc
mov
ficoms
loopne
cmp
ss
leave
dec
icebp
in
rcl
ret
loope
std
loopne
mov
in
xchg
xchg
clc
ljmp
cmp
int3
ret
filds
ljmp
in
in
iret
xor
cmp
cmp
out
out
repnz
in
cld
repnz
faddl
into
out
hlt
cli
loopne
cmp
aad
mov
or
lea
in
ror
into
cmp
iret
fdivrp
xor
fldl
in
cli
xchg
fcmovnbe
jecxz
xchg
in
in
repz
lret
jmp
hlt
iret
xor
out
lds
div
in
jmp
xchg
in
out
jmp
in
cmp
repz
hlt
cmp
iret
out
in
rcr
loopne
test
nop
mov
call
int3
imul
cli
aaa
jmp
divl
repnz
jmp
icebp
fprem
mov
ret
mov
iret
out
out
repz
das
fadd
out
in
xor
hlt
repz
sar
cmp
mov
into
ljmp
aaa
lret
iret
hlt
cmp
iret
jmp
aas
lock
leave
out
enter
fildl
ljmp
cmp
lret
ret
jecxz
aad
ret
mov
testb
into
jecxz
test
not
aaa
fcmovu
fdivp
rcr
movl
shr
xchg
sub
rcr
rol
cli
cli
out
xlat
loop
neg
iret
stc
cli
rorl
call
lret
in
icebp
call
repnz
repnz
sub
aam
lds
in
stc
test
fimull
loop
rol
in
ss
into
fst
ljmp
loop
rorl
in
filds
aam
lret
stc
leave
enter
in
cmp
out
xchg
cmc
int
mov
loop
out
ror
int
stc
shl
fdiv
int
shlb
in
test
out
leave
jecxz
flds
mov
cli
clc
fsubp
repz
ret
mov
fstp
adcb
fsub
out
enter
ror
jmp
in
clc
sar
enter
in
xchg
nop
lret
xlat
icebp
lock
out
std
shl
sar
loop
fadd
cmp
aad
ffree
int3
fimull
loop
mov
xor
repnz
clc
fcom
clc
loop
std
hlt
ret
mov
fmulp
ffreep
iret
mov
xor
cmc
lret
xlat
hlt
rcr
into
testl
mov
xchg
aam
lret
test
out
xor
add
mov
jmp
and
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
mov
xor
mov
jmp
into
int
fstp
aam
or
xchg
gs
jle
fxch
rcr
int
cld
rol
cli
enter
aad
cld
std
in
mov
loope
xor
stc
aad
cld
sarl
std
repnz
cmp
cli
iret
test
shl
hlt
std
div
in
loope
xchg
rcl
adc
out
xor
aaa
int
cmp
in
in
cmc
aad
int
mov
in
test
jmp
fsub
lret
cmp
and
out
xlat
sti
ljmp
jmp
call
fdivrs
in
cmp
fadd
fcmovb
mov
adc
cmp
shr
into
fnstsw
repz
cmp
aad
aad
hlt
out
ljmp
jmp
out
fsub
cmp
sarb
ss
fidivrl
sar
in
in
fcmovne
fisttps
lock
das
out
jmp
fcmovu
shl
ret
cld
rcr
cmp
mov
mov
shr
cmc
rcl
xor
cmp
fsub
sti
hlt
jmp
int3
cli
std
stc
in
cmc
ret
jecxz
cmc
int3
int3
jecxz
xchg
rclb
leave
jmp
cld
test
int
rolb
mov
sub
xchg
test
jecxz
icebp
cmp
lock
shl
xor
icebp
call
or
icebp
int3
xchg
mov
loopne
in
sti
cmp
out
cmp
add
xlat
aas
cmc
enter
incl
in
sub
out
int3
out
out
ljmp
stc
cld
iret
cmp
xor
jecxz
xlat
fxch
xor
sub
icebp
fcmovnbe
into
loopne
cmp
ret
cli
cmp
aad
mov
jecxz
in
ljmp
cs
lret
fcmove
ss
in
xor
aam
cli
cmp
movl
leave
hlt
fmul
fcomip
cmc
icebp
les
aad
loopne
incb
lret
xor
xor
out
xlat
cmp
fdivr
ret
rcr
test
cli
mov
cmp
test
hlt
loop
clc
ss
shl
fstp
aas
into
in
fcmovnb
les
loop
mov
leave
fsub
in
aam
loop
std
clc
hlt
ds
imul
loop
call
out
imulb
ret
repnz
rolb
vcvtdq2pd
cli
jmp
in
cld
repz
out
fcomip
lock
cmp
repnz
loope
fsubp
call
int3
call
fisttpll
shr
xor
lret
icebp
lret
cmp
add
lock
int3
rolb
cmp
fsubp
xlat
int3
out
ds
addl
enter
jmp
iret
into
clc
xor
out
addb
cld
repnz
ds
stc
lret
xchg
loopne
lret
test
rcr
out
test
in
xor
loop
neg
in
sub
xchg
repnz
int3
fcom
in
shr
jmp
flds
rol
dec
fsubr
mov
sti
in
rolb
xor
stc
enter
fldl
fabs
test
clc
faddl
icebp
nop
repnz
idiv
aad
jmp
cld
ds
aam
hlt
mov
cli
into
enter
xchg
fmulp
loopne
enter
xor
jmp
loopne
sarl
filds
mov
ror
icebp
out
cli
in
cmp
cmp
loope
and
ret
in
enter
lret
xchg
lea
repnz
clc
fsub
testl
xchg
ljmp
mul
lret
aam
int
cld
rcr
shr
into
int3
call
fdiv
loope
cmp
out
int
repnz
repz
aaa
int3
jmp
in
xor
xor
repnz
rcr
and
in
loop
out
in
shl
cmc
xor
iret
int3
cmp
loop
clc
rcr
mov
fimuls
in
out
fsincos
fsub
fcomi
cmpl
stc
aam
stc
std
std
cld
fsubr
loopne
rcll
ret
lock
std
loope
or
test
mov
jmp
rcr
xchg
into
enter
jecxz
fucomi
cmp
aam
fdivrp
loope
lds
test
enter
nop
and
adc
enter
add
leave
rol
ret
int
cwtl
stos
cltd
fs
data16
std
scas
jle
xchg
add
mov
in
ret
ss
cmp
lret
add
shl
jmp
mov
enter
lret
in
cs
rcl
out
cmp
loop
shl
fcom
repnz
lret
sub
int3
fildl
enter
not
shl
xor
iret
loopne
shl
les
dec
jmp
xchg
in
lret
lret
xor
frndint
loopne
cmp
in
fiaddl
jmp
stc
sti
int
lret
rol
cmc
xor
aad
idiv
cmp
jecxz
imul
test
out
in
roll
lret
divb
adc
fdivr
fisttpl
lret
mov
int3
in
xorl
icebp
xlat
ret
cmc
repz
repnz
ret
mov
in
sbb
mov
int
int
repz
ss
fmulp
repnz
test
xchg
cmc
ret
out
lds
fsubp
rol
enter
cmp
stc
rol
loope
repz
idivl
orl
adc
mov
loopne
aaa
out
loop
ret
out
fadd
ret
ret
jecxz
sti
test
or
xor
repz
fdivp
icebp
cmp
sarl
stc
call
mov
out
repnz
aaa
cli
fsubr
leave
neg
cmc
stc
sarb
cli
not
fabs
leave
sub
into
out
jmp
call
xlat
leave
jmp
cli
cmp
sti
mov
cmc
mov
cli
sti
in
mov
xchg
or
hlt
xor
iret
repz
fcomp
jmp
in
shl
clc
fsubrp
mov
fiadds
mov
hlt
in
ljmp
sarb
ret
out
lock
cld
call
sti
into
std
enter
in
in
jmp
xor
out
xor
adc
fstp
lret
out
lret
fdivrp
test
repz
loop
into
call
rcr
sbb
cld
rol
aam
fsincos
call
out
mov
out
cmp
cmp
icebp
in
adc
mov
enter
lea
xchg
lock
xlat
cli
aaa
aad
repnz
in
hlt
fxam
idiv
mov
fxch
mov
jecxz
aad
loopne
call
repnz
std
iret
and
fucomip
and
jmp
mov
test
lock
xchg
xchg
addb
shl
lock
cmp
repnz
cmp
fsub
cli
fcmovnu
int3
icebp
out
mov
out
out
cmp
into
out
enter
cld
cmc
ret
roll
test
aad
repz
in
jecxz
int3
idiv
aas
call
xchg
out
std
imul
loopne
mov
mov
loop
out
mov
das
sub
int
fdivs
fadd
aas
aas
ret
mov
cli
in
out
mov
loope
hlt
test
imul
in
jmp
cs
int3
cmc
repnz
fcom
repnz
clc
clc
jmp
out
enter
xor
repz
iret
out
int
fstp
cmp
shl
cmp
aam
sti
in
cmp
mov
in
out
cmc
ss
aad
out
aaa
cld
loop
cli
rol
aad
mov
int3
out
out
hlt
mov
lea
aad
ret
std
aaa
hlt
cmp
cmp
xlat
idiv
leave
lret
cli
loop
leave
loopne
enter
out
iret
iret
out
in
xor
test
idiv
hlt
out
repz
fcomi
fsubr
test
jmp
sub
in
into
xor
cmp
ftst
aas
icebp
rcl
repz
cld
mov
out
das
in
repz
cli
leave
cmc
aad
repz
mov
sbb
in
in
call
neg
int3
das
std
loop
int
in
std
in
fadd
clc
div
repnz
addl
enter
fcmove
std
shl
roll
clc
lret
fimull
xchg
jecxz
cs
xor
cmp
fucomip
fdiv
std
mov
fmul
out
repz
cli
leave
cs
rcl
iret
cmc
sar
xlat
test
loop
cld
fdivr
out
in
rcr
popl
lret
repz
rcr
cmp
test
test
ds
rol
jecxz
stc
imul
ret
fldl
lret
lds
cld
cli
cmp
icebp
ds
adc
leave
stos
sbb
pop
ret
push
mov
sub
adc
jmp
rol
lret
iret
fcmovnbe
fcmovb
addr16
cmpsb
loope
icebp
adc
add
in
lret
orl
xor
lock
jmp
loope
xchg
cmc
mov
lret
popl
in
into
into
xor
iret
repz
jecxz
aad
fsub
in
xchg
ret
int
into
jmp
leave
out
out
ror
leave
fcmove
aas
cmpb
mov
filds
fcoml
cli
cmp
in
rcl
repz
stc
into
out
cmp
ret
int
stc
loop
mov
pause
iret
stc
jecxz
ror
cmc
hlt
repz
int3
sti
adc
and
leave
mov
mov
cmp
into
rclb
call
cmp
hlt
cmp
stc
clc
xchg
cli
ffreep
call
jmp
xor
ljmp
fdiv
xchg
in
cld
mul
cld
shl
call
loopne
int3
faddl
ljmp
xchg
and
test
lret
das
push
fsqrt
fdivrp
aas
ror
cmc
sti
cmc
std
jecxz
jmp
call
into
cmc
imul
fldl2t
lds
xor
xor
xor
aas
and
and
sar
mov
in
adcb
xor
filds
clc
clc
cld
out
adcl
xchg
mov
out
lret
jmp
clc
loopne
repnz
out
out
xchg
fmull
aam
sub
xor
out
fscale
in
lock
iret
addl
lock
cmc
xchg
int3
call
cmp
ss
sti
fiaddl
clc
clc
fmul
movl
leave
in
leave
divb
sarb
test
repnz
test
testb
orb
lret
cmc
out
jmp
int
aad
hlt
loope
test
in
loop
fildl
out
repnz
iret
in
cmp
rcr
rolb
hlt
or
ficoms
ljmp
leave
sti
adc
cli
std
test
les
iret
mov
jmp
jmp
out
repz
into
idiv
cli
cmc
shl
xchg
imul
fiadds
nop
loop
jmp
ror
out
cli
fcmovu
sti
loope
cmc
leave
sti
aad
int3
loope
out
or
ss
clc
aad
cmp
int
mul
aad
out
shl
lret
mov
nop
nop
out
mov
xchg
aad
in
repnz
cmc
fdivrs
cli
fistpll
aam
shr
mov
out
fcmove
std
std
std
jecxz
mov
fmul
aad
cld
fsub
fsub
out
icebp
out
lock
testl
enter
cmp
icebp
aad
out
lock
jmp
lret
mov
or
call
int
into
out
jecxz
test
addb
cld
iret
in
lret
in
lret
in
xor
int3
cs
call
jmp
xor
test
jmp
call
fcmovb
fdiv
ds
cld
fadd
iret
in
mov
loope
loope
in
test
out
rol
iret
xor
xor
cld
cmp
cmp
out
aam
in
out
xchg
int
sti
loop
int
in
ss
icebp
fprem1
jmp
iret
in
repnz
jecxz
cli
inc
int3
lret
fucomp
jmp
jmp
fsqrt
cmc
int3
cli
cmp
fistpll
cli
jmp
std
jecxz
fst
jmp
fucomi
int
fsub
fiadds
jecxz
out
int3
clc
cmp
mul
aam
flds
enter
xlat
out
fmull
lret
call
cld
loopne
int
add
fcmovnb
clc
test
test
jmp
int
repz
shl
xor
xchg
mov
mov
clc
int3
in
enter
inc
rol
fcmovnu
idiv
std
into
ss
cmp
rol
call
dec
or
add
add
add
inc
mov
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
xor
adc
mov
add
mov
sbb
mov
jmp
int
lret
int
and
fcmovnbe
mov
jle
add
filds
stc
repnz
cmc
jmp
aas
flds
and
mov
or
call
in
lock
sti
std
fsubrp
in
fucomip
hlt
fcomi
jecxz
jmp
fadds
in
enter
fdiv
enter
rcr
ds
lock
hlt
loopne
call
cli
xchg
repnz
in
jecxz
cs
shl
out
stc
loopne
lock
aam
stc
hlt
shl
mov
lret
out
lock
lock
loopne
loop
cmp
sti
mov
out
sti
lock
shl
call
in
leave
in
into
adc
ret
icebp
mov
out
ljmp
cmc
out
lret
rol
int
sti
clc
neg
leave
lock
sar
faddp
aad
loopne
mov
loop
into
in
xorb
repz
iret
cli
xor
cmp
sbb
fyl2xp1
mov
in
lock
ret
out
rcr
adc
out
clc
sti
in
fadd
xchg
cld
lret
xchg
lock
ror
int3
out
out
fcmovb
repz
xchg
in
icebp
ror
sti
sbb
call
in
aam
ljmp
ret
out
sbb
std
int3
loope
nop
lock
in
repnz
stc
hlt
fsub
cld
clc
inc
cmp
mov
lret
xlat
in
xor
enter
icebp
aam
testl
int
int3
test
call
lret
fmul
lret
fldl
rcl
aad
mov
int3
fst
int3
nop
shrl
out
shr
aas
in
fnstsw
cmp
loop
repz
loop
lret
int3
sub
jmp
and
rcr
xor
cli
in
ljmp
les
test
nop
leave
lret
out
nop
lret
repz
loop
not
fprem1
out
sti
fcmovne
fcmovu
int3
fld1
in
xchg
repnz
cmp
jmp
not
xchg
fcmovu
jmp
jmp
mov
lock
std
repnz
in
cmc
repnz
not
icebp
jmp
div
hlt
loop
repnz
in
rcll
cmc
repnz
test
addl
std
lret
loopne
xchg
ljmp
vaddsubps
fidivrl
ret
aad
fucomi
xchg
fcmovu
or
rorb
in
aad
in
lret
loopne
loop
xlat
addl
lret
decb
stc
fdivrs
call
fucomp
bnd
leave
fimull
iret
lret
enter
xor
test
xor
out
into
shl
fcmovne
ffreep
mov
int
out
xchg
mov
xor
xor
sarb
fcomp
cmp
in
ds
clc
decb
mov
mov
xor
stc
cmp
icebp
iret
lret
enter
repz
test
fcomp
out
cli
std
nop
std
in
sub
jmp
aaa
idivb
adc
jmp
repnz
leave
ret
iret
mov
cld
hlt
into
repz
fldl
fadd
loop
lret
call
jmp
xchg
out
int
lock
lret
sbb
in
shlb
shl
leave
repz
in
leave
sub
xchg
repz
lret
aam
sar
out
int3
cmc
shl
sbb
out
rol
repnz
lret
shl
cs
in
cmc
cmp
fcmovnbe
xlat
rcr
xchg
and
loopne
int3
mov
repnz
cmp
aad
jmp
hlt
dec
ret
stc
jmp
jmp
fucomi
nop
xchg
xor
jmp
sarl
not
aam
clc
loope
fyl2xp1
enter
xchg
mov
lret
lock
leave
out
jmp
lret
div
into
ret
aam
out
clc
ljmp
mov
xor
mov
xor
xor
mov
sub
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
ret
ror
rcr
fnsave
xchg
sti
mov
dec
sbb
jle
add
out
mov
not
das
out
ljmp
out
clc
aad
ret
jmp
iret
loope
test
loopne
shl
xor
cld
int
cmp
in
sar
aas
loop
out
vphsubwd
repz
aam
xlat
sti
in
clc
aad
stc
lret
cmp
fcomp
ffree
jecxz
in
mov
mov
ljmp
shl
xor
sti
int
shl
sub
in
into
ret
in
in
call
xchg
neg
ss
aam
jmp
loopne
ds
iret
mov
cld
test
lret
int3
enter
and
out
xor
leave
fidivrl
rolb
hlt
testb
ljmp
aam
aad
repnz
jmp
std
fnstcw
mul
cld
in
lret
addb
xchg
ror
aaa
loop
ljmp
rcl
in
cld
xlat
hlt
sti
in
cld
test
cld
loop
rcll
xor
fcmovne
out
clc
loop
test
cld
in
mov
stc
in
int
in
in
shl
std
test
enter
hlt
lret
lock
call
ret
call
jmp
mov
rcr
jmp
cmp
xor
fld
idivb
aam
std
fcmovu
rorl
mov
xor
out
cld
out
sarb
xlat
fcmovb
ljmp
jecxz
cs
jmp
ror
sti
cmp
in
cli
fldl
fisttpl
int3
repz
call
jmp
out
cmp
repnz
jmp
fmull
rcl
repnz
xor
in
xor
out
loopne
inc
xlat
loopne
test
flds
call
cmp
call
fdivrp
xlat
std
sar
fiaddl
cli
mov
mov
xchg
in
lret
sbb
sarb
aaa
iret
and
mov
fisttpl
fmul
xlat
enter
shl
int3
loopne
xor
xlat
in
fmul
out
xchg
sub
aaa
into
leave
jmp
loopne
fcmovnbe
out
in
ret
mul
lret
faddl
loop
aad
out
lock
jmp
fdivr
roll
fcmovu
clc
test
in
orl
stc
cld
into
cmp
repnz
shl
std
cmp
fsqrt
in
mov
out
in
in
call
cmp
hlt
fcomip
rolb
out
out
fisttpl
mov
cmc
xor
shlb
push
rolb
jmp
stc
out
xchg
and
lds
xor
jmp
in
call
fcmovnbe
hlt
out
rcr
ret
mul
aas
test
iret
xchg
xchg
rcl
idivb
jecxz
cli
sti
leave
lret
ret
cmp
in
aas
fnstcw
icebp
mov
rcl
incl
stc
cmp
aam
hlt
out
in
hlt
icebp
aad
cld
jmp
filds
call
cli
iret
out
repnz
div
in
ret
aam
decl
lret
test
cld
into
test
out
icebp
rcl
rcl
clc
loope
not
jecxz
repz
test
test
fsincos
mov
xchg
mov
mov
ror
rcl
fidivs
cmp
repnz
xlat
jmp
loop
enter
not
into
cmp
icebp
fld
sarl
lock
shl
fcom
xchg
out
xchg
lret
ss
rcr
cld
icebp
out
aas
fcmovb
shl
rol
in
stc
mov
jecxz
repnz
lret
lret
rcr
in
out
rcr
sarb
xlat
loop
lret
ret
xchg
xchg
jmp
sarb
clc
shl
hlt
loop
fucom
clc
leave
mov
loopne
test
xor
les
repnz
aaa
out
ljmp
out
in
stc
or
lds
add
add
rcl
fxch
fxch
jp
cmpsl
sbb
jle
aas
add
bnd
repnz
jecxz
div
xor
into
lret
std
repz
rol
icebp
ljmp
lock
lret
in
iret
int
ret
shl
int3
icebp
rcr
fdivp
sti
cmp
idiv
out
in
aad
fists
mov
out
hlt
ljmp
lret
cld
sub
fcmovu
rcl
xchg
testb
fisttpll
fnsetpm(287
cmp
ljmp
in
fdivrp
xlat
leave
orl
out
xor
stc
jmp
sarb
icebp
ffreep
fcmove
loopne
xchg
fcmovu
nop
or
fisttps
iret
sar
stc
aad
std
cmp
fcmovnbe
vcmpps
and
loope
leave
icebp
xchg
shl
shr
divb
cld
call
out
int
ds
repnz
movb
mov
loopne
aam
cs
sarl
repnz
idiv
nop
fiadds
int
shl
ljmp
fstpt
cli
call
fcmovu
test
mov
xchg
into
call
xor
in
in
cmp
cmc
adc
cli
std
jmp
out
mov
in
xor
aad
aam
enter
rcr
loop
add
div
fsubr
ffreep
rcr
fmull
mul
in
stc
aam
leave
fdivr
aam
shl
ds
ljmp
popl
out
bnd
xor
cmc
sar
fstp
cld
loope
shl
roll
addl
hlt
lret
iret
das
cli
out
fsubr
int3
ret
std
in
aam
xchg
xchg
mov
shr
out
shl
clc
rcr
hlt
out
cmc
loop
mov
out
call
fsubr
loop
mul
fcom
in
in
jmp
call
incb
leave
clc
lret
fisttps
xchg
cmc
not
in
aad
int
cmp
cmp
cmp
test
fmul
std
loope
xchg
in
in
in
fdiv
aad
in
std
cmp
cmp
loopne
rolb
mov
into
jecxz
lock
addb
cmp
aaa
xlat
ljmp
dec
cmp
xor
jecxz
into
sti
fsubrp
mov
fsubr
cmp
in
enter
hlt
flds
rorb
loope
int
mov
xchg
ror
out
in
ret
lock
fdivrs
cmp
in
mov
rol
mov
rcll
clc
xor
int
repnz
rcr
fsubrp
sarb
out
les
mov
nop
xchg
test
jmp
jecxz
sti
sub
ds
xlat
cmp
call
xlat
les
out
xchg
loope
jmp
int
lock
int3
cld
rcr
incl
clc
in
in
xchg
out
aam
rol
clc
ffree
iret
loopne
int3
repz
clc
cli
std
in
out
int3
xchg
loope
ror
out
int
repz
fadd
xorl
loopne
hlt
bnd
lret
adc
aad
rol
leave
cmp
jmp
lret
ds
loopne
flds
xchg
iret
aad
into
shlb
sti
jmp
in
in
ds
lock
in
hlt
out
ljmp
out
jmp
into
icebp
hlt
hlt
ret
aas
adc
inc
ret
enter
xchg
enter
repz
repz
lock
jecxz
stc
mov
int
lock
roll
xor
aaa
xor
in
xlat
aam
repnz
ffreep
vcvtdq2pd
sar
xchg
sub
cld
cld
fcmovbe
stc
stc
test
stc
ds
jecxz
loopne
nop
icebp
mov
xchg
int
xor
shll
ljmp
xor
loope
ds
int
jmp
mov
fmul
cmp
cmp
fnstsw
repnz
in
std
fcmovu
mov
mov
sti
out
cld
xchg
iret
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xor
add
mov
add
mov
mov
xor
subl
jmp
sarb
into
rcl
ror
add
jmp
cltd
ss
sbb
aas
add
xchg
out
enter
cmp
aam
out
std
in
loop
cli
and
loop
xchg
out
xchg
jecxz
int3
ss
cmp
into
fdivp
fcom
mov
in
lea
aad
aaa
in
cmp
ror
icebp
iret
cmpb
aam
in
int3
fprem
icebp
fcmovnu
xchg
test
jecxz
ss
leave
jmp
rcr
out
stc
loopne
cmc
sti
inc
into
bnd
shr
mov
ret
lret
cs
lret
cli
repz
ffree
call
jmp
xchg
ret
xlat
vshufps
fcomi
rolb
fsubr
xlat
in
in
mov
icebp
addl
fmul
jmp
aad
in
mov
ljmp
out
test
xor
jmp
cmp
repnz
xchg
mov
in
mov
xchg
sub
int3
lock
iret
int
cmp
loopne
faddl
into
jmp
fdivp
icebp
xchg
jmp
sub
xlat
in
testl
sub
into
xchg
or
leave
in
not
cli
fxch
ds
repnz
in
shr
test
loopne
ret
test
shr
test
in
aam
fabs
lret
ret
lret
lock
mov
test
in
loop
ffree
cmp
shl
cmp
int3
fadd
cli
leave
inc
sbb
loop
mov
enter
xor
aam
hlt
iret
ret
shl
fcomp
neg
ljmp
loope
rcr
aam
int
xor
stc
cmp
jmp
fpatan
ret
fistpll
xchg
decl
repnz
fdiv
cmp
enter
cmp
rcr
repz
incl
addb
sti
int
hlt
xor
clc
sarl
jmp
fucomp
call
xor
cmp
ljmp
test
shl
rcl
rol
cmc
neg
lret
adcb
sub
cmp
fcmove
in
fmul
rol
icebp
clc
xchg
loope
nop
xchg
out
std
mov
int
rcl
out
cli
std
in
into
cmpl
not
fsubp
adc
test
in
ret
hlt
test
not
lret
clc
in
mul
ds
rcr
fdivrl
jmp
xchg
out
enter
xchg
out
in
idiv
fcmovbe
in
shr
hlt
shr
lock
loop,pt
fcmovb
cmc
out
out
loopne
loope
xchg
aam
jmp
hlt
jmp
cmp
stc
int3
sbb
loope
std
fadd
addl
jmp
lret
stc
sarb
clc
divb
xchg
leave
lds
repnz
imul
call
aas
loopne
testb
stc
repnz
addb
xlat
ss
icebp
neg
aam
lret
fdiv
loop
dec
loop
les
orl
stc
xor
fiaddl
aad
ljmp
lret
in
aad
iret
repz
out
stc
xlat
sti
stc
hlt
rcr
shr
xlat
jmp
call
loopne
iret
lock
shll
out
cmp
incl
cmc
vpor
ret
xlat
in
mov
repz
out
int
fucomp
ds
lock
mov
shl
jmp
icebp
test
loop
jmp
loopne
adc
mov
test
out
orb
nop
call
int3
cli
jmp
out
roll
sti
std
shl
not
out
hlt
clc
repnz
sarb
ret
mov
call
cld
mov
std
xchg
not
lret
icebp
cld
cld
cmp
jmp
int
in
test
call
orl
mov
xor
movl
inc
movl
mov
sbb
jmp
iret
fcmovnb
stc
inc
sti
mov
fimull
jle
add
pushl
rcl
loopne
cmp
in
flds
shr
repnz
fmulp
shr
out
leave
xlat
enter
sarb
cmc
adc
test
cli
mov
loope
nop
int
mov
loope
loop
mov
call
roll
aad
jmp
hlt
fisttpl
xchg
rcl
xor
xor
enter
cmpb
in
div
jecxz
out
leave
mov
mov
out
icebp
jecxz
clc
cmp
rcl
repz
cmp
fistpll
call
jmp
nop
mov
test
aaa
aam
leave
enter
sarl
fcomip
loopne
sti
test
loopne
loope
cld
in
jmp
repnz
aad
in
fstp
into
repz
xor
sub
sar
loopne
addl
call
cli
cs
cmp
cmp
neg
test
cld
mov
sti
out
int3
out
xchg
ss
aaa
repz
rcl
rol
lock
neg
stc
xor
adc
in
ret
cmc
aaa
fucomi
ljmp
test
mul
jmp
xchg
out
mov
hlt
test
rolb
testb
test
jecxz
test
fcoml
jmp
jmp
into
std
clc
xor
call
lret
xchg
out
loope
out
rcl
aam
enter
cmp
loopne
jmp
addl
cmc
test
test
loop
cmc
ss
xor
repz
fdivp
ret
cmp
std
neg
std
test
xchg
hlt
clc
das
in
xor
shr
aam
shr
into
shl
repz
enter
xchg
xchg
icebp
in
in
aaa
cmp
ret
repnz
repz
ljmp
fdiv
test
aam
iret
lock
idivl
roll
xchg
sti
test
xchg
enter
xchg
xchg
xchg
jmp
xor
shr
xlat
in
jecxz
neg
std
fdiv
mov
in
hlt
mov
fisttpll
out
adc
out
cli
hlt
neg
cmp
lret
idivl
int
aad
xchg
cmp
xchg
mul
xabort
ret
jmp
fcmovne
xor
test
ret
out
mov
fcomip
cmp
int3
ds
aas
fmul
sar
xchg
fiadds
testb
not
cmp
loope
into
iret
mul
rolb
and
test
mov
ret
int
dec
lret
lret
sar
fcmovne
test
jmp
call
xor
in
call
int
xor
shl
testb
int
and
ror
in
leave
in
xor
loop
rolb
cmc
fsubr
ljmp
call
clc
cmc
out
cld
hlt
ds
aas
enter
enter
test
xchg
lock
iret
divl
lret
das
shll
shl
mul
shl
ret
xchg
repnz
mov
cli
xchg
mov
loope
not
xor
cmp
lock
shr
sti
aaa
hlt
ret
xlat
lds
out
adc
shll
shl
aad
enter
aad
std
jecxz
lock
test
ds
out
test
out
lret
sub
cmp
rcr
repz
cmp
test
std
jmp
lock
mov
mov
out
jmp
leave
aam
fucompp
sarl
aam
in
jecxz
mov
mov
into
enter
clc
out
in
cmp
out
xchg
xchg
out
ret
call
mov
jecxz
sub
lock
into
out
xlat
fst
repnz
hlt
std
ret
and
xchg
int
icebp
orl
cmp
cmp
div
cld
out
loop
testb
mov
mov
orl
push
xor
mov
add
jmp
mov
mov
inc
cmp
jmp
aad
aas
ret
fcmovne
aad
mov
adc
fwait
dec
jle
aas
add
call
out
leave
sar
jmp
loopne
in
cmp
loopne
incl
lea
xor
std
cmp
fsub
jecxz
fsubp
out
orb
fst
in
int3
ret
cld
cli
aas
icebp
icebp
sti
std
and
call
fsqrt
std
in
lock
xor
cmp
out
aad
icebp
cld
in
sar
out
lret
out
lret
cld
in
and
lret
cld
xor
iret
faddp
icebp
orl
into
fucomip
into
out
leave
in
cmp
les
ds
stc
loope
vmovntdq
fiadds
and
jecxz
cld
out
std
fsubr
cmp
iret
add
shl
cli
mov
out
cld
ret
test
clc
idiv
in
repnz
inc
aad
mov
xchg
int
out
repnz
fldz
lret
out
fsub
lds
jecxz
jmp
lret
int3
jmp
ljmp
rcl
aam
fidivrl
loopne
sbb
lret
or
std
icebp
sar
shl
jmp
cmp
out
dec
loope
sar
lock
loopne
or
leave
std
fucomi
fcmove
orl
lock
int
in
int
shl
in
mov
xlat
faddl
fimuls
fisubrl
sti
fmul
cmp
hlt
ds
cmp
loopne
stc
aam
aas
or
rclb
lret
fdivp
iret
ss
cmc
xor
out
enter
loope
xchg
out
sti
xchg
lret
mov
xor
xor
fsubr
jmp
int3
ffreep
fcmovb
xchg
neg
ret
int
in
aam
loopne
aad
in
or
cmp
or
int3
xlat
in
fcmovnu
adc
int
in
ss
out
rcl
in
loope
fadd
ret
cmpb
fadd
jmp
jecxz
adcl
not
lret
cmc
clc
cmp
fdiv
repnz
mov
sti
loope
in
fsubp
aaa
shl
sub
loopne
into
in
ffree
movb
test
jmp
std
out
hlt
jecxz
not
ljmp
out
imul
xchg
aad
jmp
ljmp
icebp
xor
shl
hlt
lret
cmp
loope
addb
mov
jecxz
push
int
xlat
out
enter
aas
in
addl
in
std
xlat
mov
loopne
filds
int
rol
repz
jmp
adc
aad
ret
in
mov
fdivr
out
xchg
jmp
das
stc
stc
fdivr
out
std
in
in
loop
roll
in
mov
bnd
xor
fcmovnbe
sti
ljmp
cmp
cmc
sbb
stc
fcmove
xchg
xchg
neg
xlat
fnstenv
sarl
in
sti
aam
into
loop
mov
out
or
bnd
xor
std
repz
cmp
cmp
loop
test
aad
sti
stc
ljmp
xchg
out
aaa
fdiv
enter
cli
xlat
idiv
cli
jecxz
cmp
rcr
loope
in
out
xchg
loopne
call
xor
lret
shl
aaa
into
shl
fcmovnb
in
in
roll
in
std
loopne
std
int
out
xor
cmp
out
rcl
sar
repnz
repnz
shl
ret
loope
nop
mov
jmp
int3
aad
cmp
out
out
repz
ror
lret
ds
lock
mov
fcmovne
lret
in
lret
aad
rcl
shl
leave
leave
aad
fdivp
shl
xlat
neg
fcmovbe
std
fsub
idiv
jmp
divl
out
out
cld
shl
iret
test
fidivrl
xlat
stc
into
fdivrp
into
repz
ljmp
rol
stc
hlt
fcmove
out
xor
roll
lock
jb
jmp
rcl
xlat
fcmovnu
shl
cwtl
clc
xchg
into
sub
jl
push
jle
aas
add
icebp
icebp
aam
sub
cs
cmp
lret
aad
sar
cli
repnz
xchg
int3
into
addl
aaa
div
jmp
cmp
stc
loope
shl
repnz
jmp
nop
mov
loopne
in
out
out
into
icebp
in
out
hlt
out
int3
clc
cli
loope
in
in
stc
cli
fucomip
sti
sti
lock
mov
ljmp
xlat
xor
out
fcom
cmp
xlat
in
cmp
out
loopne
flds
xchg
mov
in
aaa
out
shl
leave
lret
icebp
stc
xlat
inc
shl
shr
fnsetpm(287
out
fcoms
xchg
call
fcmovu
cmp
cmp
rcr
test
cld
filds
mov
rcll
jmp
cmp
xor
sar
xlat
in
fcmovnb
enter
sar
aam
fsubr
sub
fnstcw
sarl
enter
loopne
xchg
ret
sti
sti
dec
mov
sti
loop
rcl
das
xor
jmp
shl
out
repnz
sarl
cli
repz
xchg
xchg
lret
xor
cmc
sti
ljmp
repnz
in
cmp
loopne
fcmovne
xchg
shl
lret
out
sti
cmp
fdivrl
sti
fdivrl
aas
incb
ret
loop
out
sti
mov
int
leave
jmp
loop
clc
sar
test
in
ret
int
mov
out
repnz
ljmp
cmp
test
xlat
mov
loopne
call
int3
jmp
cmp
out
push
icebp
in
in
ret
fscale
xlat
loop
enter
sti
fsubp
repnz
clc
in
stc
aam
aad
hlt
fcmovnbe
aad
rcl
rol
test
fdivr
lret
leave
fildl
out
in
jecxz
jmp
aam
sar
out
std
fsub
aam
loope
xor
out
out
fdivrp
call
into
rcl
leave
sar
cmp
cmp
lret
fcom
rol
addl
out
nop
loope
decb
int3
icebp
stc
cmp
cmp
lock
in
ffree
leave
orb
sti
mov
int
in
fnsave
aam
fdivrl
loope
cli
std
loop
loop
out
int3
mov
fmull
aam
cmp
aaa
aam
cmp
fst
ret
xchg
or
out
fimull
xchg
out
sti
sti
xor
rcl
aas
adc
ffree
test
fucomp
decb
xlat
idiv
jmp
fdivrp
cmp
div
cmpl
lret
test
loopne
shl
repz
ret
aaa
xor
fcomp
aad
clc
xor
repz
fndisi(8087
fucomi
iret
icebp
xchg
lret
aam
out
into
fldz
cmp
clc
out
inc
ljmp
std
xlat
lret
lret
fsub
out
fucomi
lock
xor
ret
cli
xor
fcomp
cmp
into
std
fucom
xchg
fldl2e
jecxz
in
stc
test
or
enter
imul
lret
ljmp
clc
repz
std
cmp
iret
loop
test
aad
jecxz
jecxz
cld
in
std
in
call
int3
fiaddl
sti
les
les
cs
ljmp
rcr
cld
lock
lock
int
int
jmp
ljmp
mov
sti
xlat
jmp
mov
imul
ljmp
iret
aaa
shl
aas
ds
aas
repz
ffreep
lret
ljmp
shl
xchg
repnz
lret
int3
shll
idivb
repz
cmc
out
std
icebp
test
xchg
rcl
stc
jmp
in
jmp
ret
aas
test
neg
or
flds
shr
out
cmp
clc
icebp
rcr
lock
aad
test
xchg
ret
sbb
loopne
fisttpll
xor
in
fcmovnbe
fnstcw
lock
cmc
cmc
not
icebp
out
ror
std
testb
xacquire
hlt
jmp
ret
ror
ret
rcl
je
repz
sbb
add
xchg
cmc
in
clc
out
enter
repz
xlat
icebp
loop
xor
out
jmp
addl
xor
test
cld
rcr
aam
fidivrl
cmp
fdiv
aad
cmp
jecxz
leave
call
ss
xlat
loopne
repnz
div
ret
test
in
fldl
rcr
out
sar
xlat
cmp
aas
fsubr
cmp
clc
test
mov
xchg
cmp
fidivrl
aad
aam
cmp
shl
shl
rcl
cmp
mov
in
repnz
xor
cmc
aad
rcl
rcr
cmp
repz
fmul
testb
out
popl
xor
cmp
cmp
in
lret
ret
cld
ljmp
cli
orl
repz
jmp
rolb
out
test
clc
mov
call
shl
aam
cmp
shl
cli
mul
out
lret
fsub
test
mov
jecxz
in
fcmove
in
xlat
in
out
icebp
addb
leave
cli
int
out
xchg
popl
das
in
call
rcr
out
not
ret
cmp
aad
loope
lret
cmp
dec
aad
int3
out
fdivl
div
cli
xlat
rcl
sti
out
fnstcw
fadds
loop
xor
stc
into
xor
stc
aam
sar
rcl
cmp
sti
ljmp
ficoms
xor
in
xor
icebp
fpatan
icebp
into
rol
aam
fistpll
cmc
mov
std
cld
enter
adcb
stc
aad
fcmovu
in
cld
into
aas
hlt
add
ret
loopne
fld
mov
enter
mov
xlat
out
enter
out
idiv
cmp
cmp
fstp
loope
icebp
xchg
mov
aaa
loopne
cmc
in
ror
std
fcmovnu
hlt
int
cld
ds
rorb
in
mov
std
mov
repz
jecxz
leave
fdivrs
cmp
cmp
leave
lret
out
out
in
shr
lock
aaa
xor
repnz
fsubr
fcomp
aam
cld
in
rcr
cmc
loop
ret
addb
loop
jmp
cmc
fdivp
in
rcl
cmp
fisttpl
in
int
mov
call
ss
xor
aas
lret
int3
cmp
test
cmp
loope
fcmove
cli
ljmp
clc
repnz
xor
cmp
fnstsw
rcl
rcr
fdiv
sbb
not
in
xchg
fadd
out
jmp
clc
lock
filds
aam
fimull
nop
std
lret
std
aam
xchg
ss
shr
std
adc
aam
aad
repnz
mov
in
lret
iret
xchg
nop
xlat
in
lock
icebp
fcomp
cmp
cmp
repz
fadd
sbb
fdivr
fdiv
int
in
lret
xchg
int
cmp
lret
fidivs
sarb
sarb
loope
rolb
in
sti
xchg
fistl
jmp
cmp
fcomp
loop
clc
faddp
aas
hlt
sar
cld
xchg
sti
mov
mov
jecxz
cmc
aam
xor
sar
addl
int
repz
fdivs
cmp
xlat
in
stc
lret
fucom
aam
ret
in
test
out
sub
cmc
call
into
cmp
idiv
jecxz
into
cld
loope
fnstsw
xchg
fimuls
xor
lret
fsubrp
shr
div
aad
cmp
test
in
addl
xor
fdiv
cmp
into
xchg
fdivr
jmp
out
add
out
xor
cmp
fdiv
shl
stc
in
out
repz
cli
in
leave
lock
shl
loop
sub
cmp
jmp
xor
fmul
icebp
cmp
cld
icebp
aas
aad
and
fucom
xchg
icebp
iret
out
xor
jmp
int
vpaddusw
fstp
pop
mov
outsl
sti
cmovle
add
xor
int3
std
not
aas
stc
int3
and
ret
addl
mov
int
mov
int3
cmc
in
fsub
jmp
iret
sar
into
adc
fcomi
xchg
enter
in
iret
shr
test
lret
xor
aad
cmp
out
lret
rcl
or
sti
in
jecxz
sti
enter
lea
in
lds
cmp
cmp
fcomip
ret
repnz
neg
fsub
out
xchg
int
jmp
div
cmp
jecxz
cmc
aad
in
in
cmp
aam
sbb
dec
orl
xlat
stc
int3
rcr
cmp
loopne
fldl
shl
in
rorb
aam
lret
out
cmp
fdiv
ret
fstp
mov
call
and
rcl
lock
cmc
repnz
sar
in
ret
fcomip
mov
out
in
out
iret
mov
xchg
xor
cs
clc
idiv
idivb
xchg
rcl
addb
std
mov
in
loop
in
ljmp
in
fcmovnu
incl
faddl
in
test
ror
jecxz
call
hlt
lock
shll
fadd
mov
mov
fcmovb
out
iret
test
out
mul
in
shr
jmp
cmc
fidivrs
roll
rol
and
fstp
enter
addb
std
out
rcl
std
fprem1
iret
cmp
fsubp
fdivr
stc
fldl
shll
lret
aad
int
into
iret
aas
lds
loop
cli
out
in
loop
out
xchg
and
leave
sub
out
out
xor
in
addb
mov
call
in
ljmp
xor
std
aad
xlat
cmp
aam
fdivr
addl
shl
in
xor
hlt
fstpt
aam
fcomip
in
jecxz
loopne
loopne
loopne
mov
adcl
repz
ljmp
jecxz
fucomip
frstpm(287
testl
ret
xor
xor
fnstsw
xor
xor
cmp
hlt
loope
call
loop
xchg
int
in
mov
jmp
cmp
cmp
fcom
mov
cmc
fimuls
ljmp
aam
cld
fldl
sar
hlt
rol
in
int3
in
out
stc
lret
mov
aaa
cmp
cmc
cmp
std
fnstsw
rcl
adc
cmc
aam
mov
loope
cld
jmp
in
int
lds
stc
cmp
xor
int
icebp
bnd
in
shl
les
std
loopne
loop
xchg
into
in
lret
into
out
aaa
cmp
neg
hlt
aaa
fsub
rolb
in
out
les
cmp
aad
ds
cmp
cmp
out
cmp
aas
sti
ret
loopne
lds
into
jmp
shrl
in
into
xor
clc
lret
aad
ljmp
test
call
test
xchg
fcom
iret
out
cmp
repnz
cmp
shr
stc
aad
and
out
fmull
sub
repnz
sti
out
aam
aad
fpatan
inc
les
jecxz
in
test
rcr
leave
ljmp
hlt
idiv
test
cmp
sar
mov
nop
mov
lock
into
in
clc
fdiv
lret
rcr
rcl
aaa
xchg
cld
std
mov
mov
rcl
shl
lret
sarb
shl
sub
adc
sar
lret
loopne
out
icebp
lret
shl
out
fsub
aaa
enter
int3
stc
in
aam
lock
mul
rorl
icebp
in
out
loop
jecxz
fmul
enter
stc
ss
in
ret
div
out
iret
xor
aad
lds
fcmovnbe
aad
lock
and
addb
icebp
sti
out
test
mov
add
jmp
fcom
xlat
push
xlat
outsb
rclb
pop
jle
aas
add
aaa
shlb
call
or
xlat
loope
not
xlat
lret
mov
out
in
test
ss
ss
out
std
out
aas
jecxz
ds
jecxz
loop
rcl
mov
in
adc
xchg
ljmp
jmp
aas
loop
aad
call
fstp
xchg
xchg
mov
xchg
lock
aaa
stc
icebp
xlat
shl
ffree
fdivp
ret
jmp
addl
out
repnz
xor
sarl
fcomip
clc
in
cmc
fcmovu
mov
out
mov
nop
neg
in
out
call
out
jmp
xlat
xchg
std
lret
nop
mov
xlat
int3
lret
fdiv
fstpt
int
fcmovnb
jecxz
shl
lret
in
in
shl
in
cmc
out
call
fistpll
ljmp
faddl
mov
addb
aad
aam
cmp
lds
repz
loop
loop
loopne
sar
xlat
int3
mov
in
jmp
shr
jmp
cmp
rcr
lret
in
sbb
cmp
ror
loope
cmc
jecxz
cli
mov
test
cmp
fnstcw
cmp
aam
test
addb
xchg
movl
in
leave
imul
icebp
xor
repz
loope
fadd
loope
mov
xchg
in
lock
sti
lock
xor
test
in
shl
stc
test
in
out
fiaddl
lret
xlat
fcmovnbe
cli
ljmp
clc
ret
testl
lock
loopne
ror
cmc
xor
cmp
cmc
idivl
aas
clc
fadds
jecxz
out
call
ficoms
out
jmp
hlt
ds
fcmovnu
adc
cld
fildl
loope
aad
cmp
jmp
ss
aam
loope
loop
repnz
fstp
fxch
xchg
xchg
repnz
xchg
xor
into
xor
cmp
cmp
in
cmp
loopne
loope
mov
fucomip
orb
xchg
into
cmp
rcl
fcmovb
cmc
dec
sar
cmc
cmc
mul
ror
repz
in
repnz
out
addl
sti
ljmp
hlt
ds
xchg
leave
hlt
xlat
cli
imul
xchg
leave
test
out
shl
int
call
cmp
movl
jecxz
addl
clc
enter
rcr
fcom
call
clc
loop
mov
xchg
jecxz
aam
shl
das
fcom
jmp
repz
cmp
stc
lret
fld
std
jmp
lock
rol
shl
iret
cmp
in
lret
jmp
lret
out
fcmovnb
aam
testl
out
ljmp
sti
out
shll
aam
fucomp
call
aaa
and
mov
test
loop
leave
mov
in
cmc
xchg
rcl
icebp
loope
in
out
out
fstpt
sarb
cld
hlt
decl
lock
nop
std
int
xchg
xor
xor
in
in
cli
sbb
cmp
loopne
clc
xor
incl
loop
lds
repnz
out
cli
ljmp
cmp
cmc
hlt
fisttpll
rclb
fcmovnbe
std
in
ror
dec
xor
iret
in
hlt
in
div
enter
into
cld
xchg
icebp
out
loop
shl
lock
sar
stc
not
mov
fcomp
int
fldl
xchg
jecxz
fxch
ror
sti
loop,pt
test
xor
fsub
leave
sti
loop
mov
mov
jecxz
xchg
repnz
xor
xor
fcom
fmul
repnz
aam
cmc
stc
call
lret
cli
nop
xchg
xchg
repnz
cmc
loope
aaa
shl
jmp
cmp
cmp
aas
clc
out
jmp
int3
lea
xor
repz
inc
lock
loop
movb
addb
xor
rorb
test
add
push
push
mov
jmp
rcl
rol
rol
rcl
mov
shl
aaa
pusha
popa
jle
aas
add
int
repnz
sub
aam
stc
ret
std
fcomip
int3
sti
loop
enter
xchg
xchg
ret
xor
out
repnz
fidivs
testb
std
test
xchg
rcll
call
out
cld
int3
icebp
faddl
enter
ret
in
mov
sti
xchg
iret
ljmp
xor
call
loopne
ret
lock
aam
call
out
in
int
lret
aad
aaa
int3
shl
fdivrs
icebp
test
rolb
xchg
jmp
cmc
in
shr
test
incb
mov
std
xchg
fdivrp
int
out
ror
out
rcl
aam
ss
repz
shll
test
cmp
enter
xlat
in
lea
xor
iret
clc
out
cmp
sti
out
ds
sti
lret
incb
xchg
rorl
jmp
lret
frndint
in
fidivrs
mov
jecxz
mov
mov
in
xor
cmp
xor
ret
loop
hlt
cld
sar
cmc
fucomp
std
in
int3
add
loope
xlat
fsubr
lret
icebp
ljmp
sti
xlat
jmp
jmp
ror
mov
nop
loop
div
lock
leave
stc
fidivrl
iret
repnz
sti
jecxz
xchg
in
sub
call
lock
sti
ss
in
shl
jmp
clc
fcmovne
xchg
adcb
fmul
repz
rcr
fcomip
aaa
neg
cmp
icebp
ret
aad
hlt
in
lret
in
jmp
fimuls
ljmp
ds
loop
sbb
jmp
loope
int3
fmul
jmp
ljmp
cmp
ds
cmp
cmp
incb
xchg
icebp
int3
sub
in
xor
call
sbb
xlat
cmp
loope
mul
fdivrp
iret
fmull
xor
out
hlt
into
out
sti
int
stc
cli
cmp
filds
jmp
out
xchg
jmp
icebp
stc
repz
cld
iret
fidivrl
addl
not
out
mov
xchg
out
int3
out
hlt
test
rcr
std
fldl2e
xlat
ss
jecxz
in
rcr
out
fninit
frndint
fneni(8087
ljmp
ss
aad
loope
shl
cmp
testl
std
out
xchg
div
enter
idiv
fiadds
out
fucomi
test
lret
addb
xchg
jmp
cmp
sti
ds
shl
sti
ret
fcmovnu
std
mov
nop
ror
repz
cmp
fsubr
sti
cmpb
iret
testb
mov
test
out
in
loop
into
divb
int
div
cld
sarl
enter
repnz
out
mov
lret
jecxz
loop
sti
int3
iret
jmp
out
fmul
out
inc
repz
fstp
xlat
fmul
shl
rorb
aam
aad
in
rcl
fldl
xlat
hlt
aam
out
stc
fildl
lock
xor
hlt
xlat
leave
repnz
ds
loope
rol
shr
leave
out
xchg
cld
test
stc
leave
jmp
out
cmp
inc
sbb
stc
mov
loope
xlat
out
loop
mov
in
fucomi
enter
out
clc
int
and
test
cmp
mov
jecxz
cmp
in
repz
lret
xor
lret
mov
mov
jecxz
shr
repz
rcl
in
jmp
call
in
idivb
xchg
out
xchg
test
int
enter
xor
cmp
ljmp
shl
adc
int
call
lock
enter
cmp
push
bnd
sarl
jmp
mov
test
shl
lret
repnz
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
jmp
into
mov
fmul
iret
fucomp
sub
inc
popf
jge
cmc
and
jle
add
ljmp
fcmovnbe
not
int
xchg
jmp
fdivrp
xchg
lret
xacquire
ret
jmp
repnz
ror
fcmovnu
cmp
sti
xchg
ljmp
xor
in
out
int3
loopne
cld
hlt
test
test
loopne
cld
cld
call
call
ljmp
out
in
cmc
sarl
cmp
les
cmc
icebp
hlt
rorl
fcmovnbe
xchg
mov
ficoms
ljmp
rolb
stc
aad
in
jmp
enter
iret
iret
xor
fcmovu
shl
enter
cmp
cld
shl
test
rcl
mov
in
out
fimuls
in
xor
fdivrl
lret
fcom
xlat
into
fsubp
cmp
ret
jmp
lock
fisttps
in
in
xor
shlb
xlat
in
lock
cmpb
orb
cld
enter
int3
into
call
idivb
ds
cmp
xlat
shl
repnz
cmc
cmp
xrelease
ror
rcr
call
fcomi
test
out
loopne
cld
into
out
out
jmp
in
jmp
cld
aam
int3
hlt
fcmovnbe
hlt
jmp
into
sti
nop
int3
lret
lds
cli
jmp
xlat
loopne
shl
cmp
test
mov
hlt
aas
and
enter
std
xor
lds
lret
cmp
cmp
aad
sti
cmp
fdivr
lock
out
rorb
ss
out
clc
in
xor
cmp
jecxz
jecxz
sub
mov
test
int3
in
icebp
xchg
jmp
enter
in
shl
ds
fcomp
ret
mul
shr
xorb
fsub
aam
leave
into
jecxz
loope
adc
jecxz
jmp
imul
shl
adcl
iret
aaa
stc
cmp
out
shl
repz
aad
loopne
test
call
enter
leave
call
hlt
xlat
repnz
ret
push
jecxz
movb
loop
in
fdivl
cmp
hlt
xor
test
loopne
hlt
ret
enter
std
rolb
lock
std
aam
repnz
or
out
loop
out
fcomi
orl
loop
cs
in
shr
lret
cmp
aad
fiaddl
jmp
mov
ss
sarb
in
aaa
lret
ror
int
repz
out
hlt
fdivrs
in
fistl
shr
out
stc
leave
xor
loop
adc
out
hlt
aam
cli
or
int
rol
xchg
jecxz
lock
cld
jmp
hlt
sar
stc
xlat
cli
repnz
loopne
in
fstp
int3
xchg
sar
ret
out
sarb
hlt
cmp
lock
xlat
cmc
rcl
aad
xchg
in
into
and
addl
aaa
fnstenv
cld
ror
cmc
test
xchg
call
flds
repz
repnz
sti
sarl
repz
repz
aam
fisttpll
addl
cmp
iret
aam
idiv
xchg
clc
mov
cld
lret
cli
fdivrp
out
out
test
sub
xor
aad
out
repz
call
xchg
ljmp
lock
jecxz
cli
jmp
addl
mov
repnz
in
add
repz
call
xor
rol
incl
in
hlt
nop
icebp
clc
shl
lret
clc
sti
in
fucom
out
icebp
ss
stc
call
aad
xlat
into
call
aad
jmp
rcl
repnz
std
cli
aaa
aad
xor
mul
out
add
cld
dec
jmp
std
loope
repz
repz
lock
out
in
std
into
cmc
int
cmp
cli
icebp
repz
repnz
jmp
icebp
into
lock
out
mov
mov
mov
inc
cmp
jne
pop
jmp
ret
xlat
rcl
lret
xchg
rorb
loop
jle
aas
add
sar
shl
fcmovne
fiaddl
iret
out
ret
leave
lret
out
nop
test
rcll
leave
int3
fstp
hlt
fcmove
aad
hlt
aad
loopne
clc
mov
sbb
mov
xor
sar
shl
mov
jmp
int3
xchg
aam
out
in
aad
out
adc
ds
add
imul
and
lret
fcoml
lret
xlat
sar
out
sar
in
cmp
shl
aas
xchg
fisttps
xor
loope
ss
call
repz
cmp
test
ror
and
cmp
jecxz
in
ljmp
xor
std
cli
aas
loopne
ss
clc
in
lret
loope
lret
jmp
xor
xor
std
loopne
sti
repnz
fistpll
in
stc
loope
jecxz
lret
loop
lret
lret
lret
loope
in
int3
into
hlt
repnz
jmp
fstp
roll
fucom
lret
loopne
in
divl
aad
in
sarb
repz
cmp
aad
test
icebp
xor
test
enter
enter
out
iret
shr
loopne
xor
cli
ljmp
clc
movb
mov
repz
mov
lret
hlt
jmp
ror
cmp
ret
jecxz
hlt
repnz
clc
leave
and
add
lret
xor
shl
ror
test
fldl
leave
test
int
jmp
das
sti
shr
repz
aas
xlat
int
cmp
hlt
clc
clc
cld
xchg
repz
out
not
sub
cli
repnz
sarb
bnd
call
xchg
lret
std
aad
xor
int
out
fdivrp
fadd
aas
stc
ds
lret
fmull
rcl
lock
cmp
divb
cmp
cli
fdiv
out
test
in
in
hlt
int
sar
out
shl
fildl
clc
in
std
out
loop
repz
cmc
cli
lret
fistpll
call
jecxz
mov
and
cmc
loop
xor
hlt
aad
rcr
roll
mov
int3
int
xchg
addl
icebp
stc
lret
fnstcw
f2xm1
cmp
repnz
xchg
stc
mov
or
lock
ror
cmc
int
cmc
cmp
aam
loopne
hlt
out
hlt
ds
shl
int
leave
jecxz
xchg
rcl
int
cmc
lret
stc
rcl
xor
rolb
mov
lock
into
fld
jmp
in
out
cli
fst
int3
into
sbb
roll
fxch
loope
repnz
loopne
into
lret
out
stc
sub
jmp
rcr
repz
cmp
jmp
loope
lret
fcomip
in
cmp
hlt
leave
lock
shr
into
fdivrs
clc
ds
fmull
xchg
xchg
fdiv
leave
iret
call
into
add
mov
test
loope
fcmove
in
cmp
call
repnz
fst
repz
in
shl
jmp
xlat
fdivr
enter
mov
xor
repz
repz
icebp
repnz
sar
cmc
cmp
mov
xor
fsubr
int3
jmp
sarb
fcmovb
fistpll
repnz
clc
in
jecxz
int3
fcoml
ror
sti
fmul
fstp
iret
lret
rcl
loope
fadds
test
mov
hlt
rol
int3
xor
in
lock
clc
int
shl
aam
rcl
test
xlat
fdivrp
mov
jmp
lret
in
int3
aad
aad
fcmovb
jmp
ljmp
ffreep
mov
aad
ret
in
mov
aas
xor
xor
fst
ds
int
ds
add
xchg
testl
hlt
hlt
xor
mov
jmp
aam
fadd
fstp
pusha
shl
aas
in
sub
mov
add
lock
sti
shl
loope
out
ret
shr
stc
ret
jmp
mov
call
std
repz
shl
cld
fdiv
aas
aam
fcos
cmpb
in
jmp
loopne
mov
int
out
aad
out
ljmp
cld
out
shl
jmp
mov
call
xchg
in
cmp
jmp
iret
leave
clc
loopne
shr
int
iret
idivl
stc
loopne
cli
loope
jmp
out
out
call
loop
out
fadd
fdivl
lock
in
test
int
xchg
jecxz
out
stc
sti
shlb
int3
cmp
test
in
fildl
addb
cmc
in
in
ret
fcom
rcr
ds
lret
stc
ret
repz
std
mov
lret
repnz
jmp
rcr
out
iret
rolb
fstp
mov
xchg
xchg
icebp
call
hlt
loop
aaa
iret
ljmp
sti
std
cmp
cmp
sar
vpmulhw
out
lret
xchg
rorl
divl
out
in
std
int
rcl
sarl
fdivr
jecxz
cld
cmp
mov
aas
in
cli
int
xchg
jmp
enter
fsubp
out
cmp
repnz
ror
lock
fcomi
leave
lock
int
xchg
nop
loopne
xor
loope
repz
fildl
cmp
cli
lret
addl
cmc
out
out
stc
in
aaa
fmulp
loop
shl
out
clc
fsub
fcmove
and
sub
out
xlat
cli
dec
out
cmp
ret
xchg
mov
xor
clc
out
fdivr
in
std
xchg
xchg
iret
les
aaa
xor
call
aam
cli
sti
jmp
decb
jmp
das
divb
fdivr
not
clc
in
fmul
iret
fdivp
loope
mov
jmp
int
int
loop
xlat
in
in
enter
jmp
icebp
aam
call
fcmovnu
fucomp
call
xor
hlt
enter
cmc
int3
icebp
shr
jecxz
repz
jmp
lret
jecxz
lret
xor
shr
cld
repz
jmp
test
aam
lret
loop
decb
out
nop
sar
cmp
aam
fdivr
sbb
jecxz
test
shl
mov
test
xchg
into
in
loopne
leave
ret
aad
ror
inc
aas
ds
cli
iret
xchg
or
fdivr
mov
div
into
repz
in
clc
rcr
leave
aam
in
xlat
rcl
fucom
les
cmp
test
int
xor
out
lret
cmp
loopne
in
in
loopne
rol
addl
leave
fstp
xchg
xor
aaa
lock
out
fadds
div
shl
out
xchg
mov
lret
in
mov
rcl
fidivl
cmp
lret
faddl
sti
lret
in
out
test
test
int
aam
shl
cli
fucomp
in
cmc
clc
rcr
vpinsrw
and
leave
enter
in
repnz
das
ror
xor
aaa
call
aas
jecxz
hlt
aad
fmul
cld
out
xchg
std
loopne
icebp
repnz
lret
sar
iret
call
cmp
cld
clc
sti
in
jecxz
in
out
ljmp
int3
cmp
cmp
aad
flds
fdecstp
addl
jmp
icebp
cmc
int3
into
hlt
cmc
rcl
int3
loopne
aam
cli
aam
mov
cmp
xlat
mov
int3
out
decl
div
jmp
repz
loop
cmp
shl
hlt
icebp
fisttpll
cld
cld
lea
cmc
aad
cmp
aaa
cmp
xor
ds
repnz
cld
ljmp
popl
stc
lock
sbb
ffree
neg
into
repnz
xor
test
std
repnz
in
hlt
rcl
idiv
fadds
out
sti
out
mov
loope
hlt
sti
rorl
jmp
fcomp
fistps
je
jne
jle
add
xor
xor
fiadds
mov
ljmp
in
adc
lret
xlat
enter
loopne
test
out
mov
inc
call
ljmp
ljmp
fidivs
rol
cld
out
dec
loope
fimuls
in
xchg
xchg
shrb
ljmp
lock
aam
clc
xchg
lret
faddl
loope
ret
xlat
aaa
lret
cmp
cld
sti
incb
std
enter
int3
faddl
shr
fmul
in
divl
cli
aam
xchg
incb
fildl
test
hlt
fsubr
sti
cmp
sarl
cmp
fldl
hlt
mov
nop
shl
test
out
shr
aaa
stc
into
xor
ror
iret
repnz
jecxz
lock
xchg
xchg
jecxz
loop
ret
leave
aaa
fucomp
lret
fnop
xchg
repz
mov
jmp
loop
iret
repz
rol
cmp
aaa
fidivl
xlat
out
cld
ds
ret
ret
leave
inc
mov
xor
test
cmc
aam
out
stc
out
fst
lret
lret
cld
rolb
cld
xacquire
int
mov
jmp
cmc
in
fcmovnu
ljmp
ret
faddp
aad
out
test
fildl
aad
in
jmp
jmp
out
rcl
faddp
sti
xlat
add
mov
jmp
fimull
cmc
repz
lock
aaa
cmp
cli
sarb
out
iret
xchg
jecxz
out
xchg
loopne
fmulp
fcom
enter
enter
ret
clc
cmc
xchg
fsub
fmulp
mov
jmp
xchg
lock
sar
fdivr
cmp
fdivrl
cmc
mov
icebp
xor
shl
ljmp
rcr
cmp
loop
ret
rcr
out
call
loopne
lock
cmp
enter
cmp
xchg
in
fucomp
out
sti
out
std
cld
jmp
aad
out
fdivs
out
aas
cmp
add
loope
testb
xchg
xor
lret
out
loopne
xor
cmc
clc
xchg
clc
jecxz
out
test
aam
rcr
xor
cmp
fucomp
cmc
fcmovb
rcl
cmp
loope
out
mov
lret
sti
aad
aas
in
loopne
out
in
call
rcr
mov
leave
xor
call
ss
iret
fucomp
fdivr
fcmovnu
aam
mov
sbb
sti
xchg
repnz
aad
loope
out
leave
in
fdivrs
out
cmp
aaa
in
aam
enter
flds
jmp
lret
idiv
out
sarl
fldln2
repz
cmp
fsubr
mov
jmp
icebp
xchg
fimuls
fsubr
cmp
call
cld
sti
add
fsincos
loope
test
in
nop
xor
out
hlt
fucomi
out
hlt
rcl
shl
fsub
leave
aam
jecxz
fists
xchg
rcr
aam
xor
out
fdivr
call
xchg
test
aad
clc
stc
call
xchg
mov
loop
int3
xor
cmp
clc
shl
cmp
cmp
div
out
loop
int3
sbb
push
out
fsubr
icebp
out
lret
xor
cmp
aaa
ret
test
jmp
nop
loop
mov
in
iret
rcr
fsubrp
sarl
and
addl
xchg
into
repz
jmp
hlt
cmp
cld
icebp
test
rcr
aad
in
notb
out
xchg
mov
cmp
xor
sar
idiv
ror
test
repz
out
jecxz
add
shr
jmp
jmp
ror
icebp
cmp
hlt
sarl
cli
cmp
lret
add
jmp
cld
jecxz
fcom
ret
int
add
mov
mov
jmp
iret
aas
aas
ror
rcl
ret
pushf
mov
or
ja
jle
add
cmc
in
cmc
aas
cld
icebp
mov
in
mul
in
faddl
xor
aaa
idiv
int3
lret
into
xchg
jmp
nop
ljmp
in
ss
xor
test
sbb
xchg
in
std
mov
int3
ror
repz
in
mov
divl
jmp
cmc
ljmp
rcl
repz
mov
jmp
mov
repz
xor
leave
xor
xlat
mul
aaa
lock
ljmp
rorb
out
ret
xchg
std
int3
jecxz
repnz
icebp
cmc
in
out
out
loopne
out
repz
rol
icebp
aam
xchg
fisttpl
sub
shr
aaa
std
fcmovnbe
in
fdivr
loopne
mov
jecxz
leave
in
lock
aad
in
out
out
xor
jmp
lock
jecxz
std
sti
in
mov
out
loopne
out
xor
loope
in
in
clc
aaa
in
adc
shl
fldl
int3
int3
call
cmc
cmp
ljmp
call
lock
clc
aas
out
ret
jmp
repnz
orl
cld
lret
fidivl
jmp
fildl
aam
enter
enter
rcl
add
ret
rcl
aad
cmp
aaa
sub
ret
and
ljmp
iret
lea
loope
aam
xlat
hlt
in
inc
in
std
not
aas
sti
repz
out
in
call
in
icebp
stc
aam
cs
hlt
fistpll
rol
std
fldz
in
inc
ret
in
mov
fucomp
stc
xchg
rorb
rol
leave
rcl
xor
ret
testb
mov
repz
rcll
cmp
cmp
rcl
jecxz
sti
loope
fcomp
cmc
lret
rorb
jmp
iret
das
aam
iret
xor
lret
fldl2e
sti
lock
in
ds
vcvttpd2dq
mov
test
out
ljmp
stc
cmp
rcl
test
xlat
filds
ffree
jmp
mov
in
out
ffreep
in
int
int
fcmovne
cmp
aas
xlat
shl
hlt
cmc
mov
in
movl
out
aam
std
iret
int3
sar
or
aad
shl
loopne
incl
jecxz
ss
jmp
lret
lock
xlat
aad
cli
repz
call
iret
lret
xor
xor
cmp
sar
fucomip
iret
ljmp
out
std
div
sti
ret
std
in
loop
cs
cmp
lret
iret
xor
into
fcmovb
jmp
cmp
hlt
test
jmp
shl
lret
leave
stc
lds
int3
hlt
in
repnz
inc
std
enter
xchg
test
mul
int
jmp
sti
xlat
cmp
sti
lock
ret
movb
xlat
cli
ror
jecxz
mov
lret
aam
call
cmp
loop
lock
cmc
test
sti
in
jmp
xor
repnz
ror
ret
adc
mov
add
loopne
sub
fmul
popl
iret
enter
aaa
imul
stc
sbb
call
std
out
mov
cmp
test
xchg
xor
repz
int3
lret
sar
sbb
sar
hlt
xchg
loope
out
std
lret
roll
repnz
int3
xlat
jmp
icebp
icebp
repz
fcmovnbe
add
call
icebp
in
sbb
fsubrp
jmp
int
lock
rcl
test
sar
idiv
in
in
out
std
mov
into
icebp
shrl
loop
repz
sarb
sti
int
fiadds
jecxz
aad
sti
clc
lret
sti
lea
aad
in
out
enter
iret
icebp
incl
in
lock
mov
mov
lret
push
xor
ret
ffreep
or
orl
sar
iret
ljmp
pop
add
add
rol
aad
pop
pop
movsb
or
insb
out
jle
aas
add
aaa
cmp
fsubp
fcomip
jecxz
jmp
and
ljmp
cmp
int
cmp
adc
and
orb
fucomp
mov
in
xor
ljmp
iret
ret
ror
out
test
mov
int3
in
int
iret
fnstenv
std
fidivrs
fmulp
int
idivl
add
loope
clc
ret
in
loopne
int
icebp
clc
repz
lret
lret
hlt
ret
cmp
cmp
and
loopne
xlat
das
cmp
hlt
sarb
fld
in
loope
and
loope
lock
adc
out
not
cld
shl
int
aam
cmp
rol
jmp
int3
leave
jmp
jecxz
in
in
jmp
xor
fdivr
aaa
test
cmp
ret
movb
lret
xchg
in
sub
in
clc
aam
repz
mov
test
out
add
icebp
jmp
lret
int
cmp
call
shl
addl
dec
shl
shl
in
mov
jecxz
xor
fidivrl
cmp
loopne
loopne
loop
rcr
enter
fsubp
out
xchg
icebp
lock
aaa
fcmovbe
fsubr
cli
ds
not
aad
fidivrl
test
jmp
loope
into
jecxz
jmp
enter
cmp
xor
in
ljmp
xchg
stc
repnz
int
orb
loop
in
cmp
xor
test
stc
fprem
or
ror
aad
xor
shr
std
fnstcw
fdivp
repnz
ffree
hlt
stc
aad
mov
incl
jmp
iret
sub
leave
aas
in
int3
shlb
aam
loop
icebp
cmp
xlat
addb
aam
call
cmp
lret
rcr
in
jecxz
enter
orb
icebp
cmc
sub
shr
jmp
das
repnz
lock
testl
orb
sub
in
cmp
lock
rcl
xchg
clc
std
aam
les
into
int
test
ljmp
fsub
jmp
sbb
fiadds
xchg
mov
xchg
xor
lret
aaa
repnz
cmp
int
sti
roll
std
shl
cmc
loopne
lret
enter
out
sti
fmul
hlt
aas
in
sti
iret
cmp
cmp
clc
xchg
cld
jmp
aam
cmc
rcl
into
xor
xlat
fldl
addl
xchg
jmp
mov
jmp
sti
fxch
icebp
xor
cmp
in
icebp
shl
sub
xchg
sbb
shr
not
cmp
in
fdivrp
repz
clc
or
test
fsubp
aas
in
xchg
faddl
repz
hlt
xor
cld
testl
cld
f2xm1
mov
hlt
in
in
sub
xor
ss
fstpt
stc
idivl
filds
fisttps
test
loope
mov
hlt
xor
xor
cmc
inc
shr
in
rolb
xchg
xchg
int3
repnz
cmc
lret
cmp
test
sti
in
aam
leave
stc
mov
mov
out
shl
cmp
fmul
cmc
jmp
out
in
loop
repz
test
shr
xchg
xchg
clc
int
hlt
neg
call
div
test
in
idiv
out
mov
nop
int
ljmp
out
repnz
rcr
aas
shl
fdiv
jmp
xor
fucomp
int3
fcmove
mov
xchg
loopne
enter
ss
ds
std
fldl
and
mov
loop
fstp
into
jecxz
shr
ss
icebp
aaa
rorb
call
iret
into
xchg
enter
enter
mov
mov
mov
jmp
ret
into
sarl
rol
rcl
ja
data16
mov
cmpsl
jg
jle
add
cmp
repnz
loop
movb
xchg
mov
sub
out
repnz
cmp
icebp
les
jecxz
mov
icebp
ljmp
cmp
jmp
call
loop
std
in
xchg
cld
lds
icebp
ss
leave
fcomip
aad
hlt
xlat
sar
sti
in
leave
test
call
in
repz
xchg
repnz
xor
fxch
in
cmp
ror
jecxz
in
cld
enter
cli
call
lret
in
ret
enter
shl
not
loop
sarl
leave
movl
repnz
xor
loop
fdivp
sar
cmp
sti
fcomp
loopne
fdivr
fnstcw
cld
test
fnstsw
in
aam
enter
iret
in
repz
fidivrs
in
xor
xchg
fcmovnbe
shl
not
xor
clc
imul
cmp
std
aam
xor
jmp
jmp
test
enter
ljmp
loop
fnstsw
icebp
ret
aad
mov
ffreep
enter
jecxz
repnz
loope
stc
fdivp
in
clc
adc
fstp
sti
cmc
faddp
test
mov
in
jmp
cmp
sti
cmp
int
aas
cmc
cmp
rol
in
lock
fdivrs
iret
divb
lret
int
loop
loop
stc
cmc
out
sti
clc
lret
repnz
nop
call
ret
fxam
ss
cmp
flds
mov
in
loop
out
in
xchg
out
orl
xor
aad
idiv
flds
xor
sub
fsin
icebp
mov
stc
loop
in
repnz
icebp
out
shl
hlt
xlat
shl
mov
adc
mov
lret
sarb
aaa
cld
idiv
cmp
jecxz
jmp
in
sub
sub
cmp
lret
cmp
jecxz,pt
cmp
lret
xchg
sub
mov
hlt
std
sarl
aad
clc
incl
enter
test
nop
ret
stc
int3
cmp
fnstenv
push
sar
into
rol
out
stc
sar
lret
in
cli
sar
mov
loopne
jmp
repnz
aam
jmp
xlat
hlt
sbb
out
cmc
and
sti
mov
jmp
xchg
aad
jmp
out
cmp
aas
cmp
iret
stc
std
out
out
loope
leave
neg
dec
mov
ljmp
jecxz
cmp
call
cld
fdivrs
mov
cli
imul
out
fildl
icebp
out
ret
shl
cmp
cmp
aad
lock
test
imul
cli
icebp
ljmp
loope
rcl
xlat
xor
idiv
cmp
sar
stc
ds
mov
std
out
mov
out
xor
ljmp
jmp
iret
aaa
mul
inc
mov
loopne
out
xchg
rol
loop
lret
cmp
std
in
shl
xlat
repz
addb
mov
xchg
rorl
imulb
cmp
repnz
add
sbb
mov
int3
mov
rcl
shlb
sti
cli
fst
shl
repnz
in
rcr
fcos
jecxz
leave
cld
leave
rorl
aad
sar
cld
xor
leave
into
xor
jmp
fdiv
ret
out
ljmp
xchg
mov
xor
aam
fdivrl
fnstcw
loopne
not
cmp
ljmp
aad
iret
in
fadd
cli
cli
out
sar
ret
in
icebp
shr
call
sbb
in
lock
out
fmul
ret
xchg
hlt
test
idivb
fsub
shr
cmp
ljmp
out
shll
out
iret
out
flds
fsubr
sub
and
lock
iret
in
leave
jmp
cmp
je
mov
mov
jmp
leave
aad
movsb
inc
jb
in
dec
hlt
jmp
add
aas
add
fsubr
rcr
cmp
cmp
in
fsubr
icebp
xchg
iret
div
lret
cs
out
enter
jmp
xchg
jmp
out
ljmp
test
jecxz
out
repnz
fcmove
xchg
aas
repz
enter
lret
test
fdiv
jmp
fucompp
cmp
into
out
faddp
cli
cmp
mov
les
icebp
rcll
aad
out
ljmp
in
mov
out
fildl
out
mov
shl
aam
cmc
std
neg
cld
loopne
hlt
repnz
repnz
jecxz
jecxz
enter
enter
int3
xchg
xor
xor
in
into
into
cmp
out
test
aam
ffreep
jecxz
and
mov
rcl
jecxz
xor
ret
jecxz
repz
aam
icebp
stc
aam
loope
call
int
fdivrp
loopne
fisttps
int
leave
ljmp
cmc
fsin
and
aad
roll
fcmovbe
out
inc
in
icebp
out
out
cmp
leave
int3
lock
into
rcr
stc
addl
in
not
ret
ror
int3
sti
call
cmp
mov
mov
sti
loop
loopne
leave
lret
cli
xor
sarl
incl
jmp
incl
jecxz
aad
cmp
fidivl
enter
ret
loope
aam
cmc
mov
loop
iret
jecxz
in
xor
into
out
cmp
repz
imul
test
stc
shl
jecxz
sti
hlt
in
in
out
icebp
icebp
repnz
shr
repz
out
xor
loop
in
testb
in
int
xchg
mov
out
out
aam
xor
stc
cli
aad
cmc
hlt
sti
fdivr
cmp
mov
and
ljmp
fdivr
cld
cmp
cld
cmp
lock
jmp
rclb
xor
cmp
mul
ret
std
icebp
hlt
cli
xchg
mov
cli
rcll
jmp
iret
aam
ret
repnz
mov
ficoms
div
in
xor
xlat
clc
loope
in
rcl
out
or
hlt
jmp
mov
loopne
loope
mov
sub
repz
rcl
call
rcr
mov
ljmp
ljmp
lock
in
loop
div
out
rcl
clc
test
loope
lret
fcomip
cmc
clc
ss
repz
sbb
xor
fadd
xchg
in
add
int3
stc
out
hlt
iret
adc
in
cmc
xlat
cmp
fistpll
repz
sti
cmc
mov
aam
int3
sar
mov
shr
shl
xor
cmp
fnstenv
ror
ljmp
aad
test
repz
dec
jecxz
rcr
cli
aam
hlt
cmp
cmp
repz
add
in
enter
mov
xchg
repz
ret
cmp
pushl
loope
addl
lret
out
jmp
xchg
std
inc
into
aam
xor
out
into
clc
lret
div
loope
testl
fmull
repnz
les
enter
in
cmp
jmp
in
mov
loope
jmp
lock
hlt
jmp
icebp
stc
fdiv
aam
cmc
cmp
fldl
in
ljmp
nop
into
out
aad
xor
aad
enter
cmp
repnz
xchg
mov
loop
clc
fsub
cld
out
out
inc
fmul
int3
jmp
sti
aaa
lock
out
call
enter
shr
loope
repnz
shr
fdivp
shl
out
addb
in
jecxz
sti
mov
fcmovb
rcr
repnz
xlat
aas
rol
cmp
call
mov
out
stc
lock
xlat
cli
mov
cmp
jne
mov
jmp
ret
into
aam
aad
fst
stc
hlt
stos
xchg
add
test
aas
add
idiv
ret
lds
leave
in
into
int3
lret
xchg
out
in
ret
clc
out
cli
out
enter
loop
fcomp
out
int
fucomp
out
lret
lret
ljmp
stc
cld
fcmovu
cmp
fiaddl
cld
in
aas
cmp
movb
in
cli
fucomip
rolb
std
aad
xchg
jecxz
aas
fcoml
xchg
xchg
jmp
aam
cmp
fnop
jmp
aad
inc
cld
div
std
xor
fdivp
mov
rcr
std
xor
cli
ftst
fisttpl
in
in
repnz
lock
repnz
out
out
fistpll
fdivp
loopne
cli
mov
clc
out
into
jecxz
shr
mov
lret
out
hlt
in
xabort
std
into
cmp
lret
std
fsqrt
std
clc
les
out
repnz
filds
aaa
xlat
cmp
out
out
xor
repz
inc
loopne
fadds
mov
clc
out
cmc
fdiv
sarl
xor
jmp
jmp
fucomip
out
out
fsubrp
das
iret
leave
jmp
into
fucomi
loop
cmc
rcl
xor
loop
mov
jmp
xchg
xchg
hlt
cmc
shl
int3
xor
idivb
ds
loopne
fdivp
fucomi
addb
rorb
lret
jmp
lret
shl
into
std
sbb
faddp
loopne
test
xchg
xchg
repnz
lret
aam
clc
int3
jecxz
xor
int3
idiv
cld
fcmovnbe
roll
mov
int3
call
loope
jmp
fsubr
cmp
cmp
fnstcw
out
repnz
jmp
fdivr
test
ror
cs
fdivs
int
fprem
aad
out
mov
ljmp
nop
int
loop
idiv
into
lret
loopne
shr
fmul
out
aam
icebp
sbb
cld
testl
loope
in
out
ror
call
int3
fldl
neg
mov
fsubrp
lret
fst
jecxz
loopne
in
xor
enter
aam
fld
clc
and
fcomp
fsub
out
xor
ret
ret
aam
sti
lret
fldl
ret
test
test
in
repz
enter
cmp
repnz
hlt
clc
cmp
aas
cmp
ret
addb
in
adcb
cmp
xor
jmp
and
in
cld
out
jmp
rcll
into
ss
cmp
aas
icebp
cmp
xchg
sti
fmul
in
add
in
loopne
adc
out
sti
int
out
ss
sar
xor
xchg
icebp
adcb
xor
cmc
lock
lret
loope
fiadds
out
lds
mov
rorb
loop
fsubr
xor
iret
sti
icebp
sar
test
addb
sub
fucomp
iret
jecxz
enter
in
rol
int3
hlt
lock
sbb
in
out
vshufps
shl
shl
fcmovbe
xor
out
out
ds
icebp
jecxz
lds
fdivr
into
out
jmp
cmp
jmp
out
into
fcomi
xor
cmc
into
faddp
cmc
ret
cmp
loopne
repz
mov
test
cld
into
fcmovnu
ds
ret
loopne
rol
ljmp
loop
rorb
icebp
ror
xlat
jmp
clc
neg
test
repz
stc
test
in
xlat
sbb
enter
test
aaa
xor
hlt
into
aam
ds
int3
clc
hlt
loope
out
xchg
loope
ljmp
loope
aas
imul
lock
xlat
lret
fcmovnbe
jecxz
sarb
fcomi
add
jmp
mov
in
out
ljmp
icebp
fstpt
cmp
out
cld
cli
shr
and
into
fcmovbe
icebp
out
sti
out
cmp
cmp
cmp
adc
pop
add
add
rol
aad
fstp
movsb
ficomps
int
or
jle
add
rcr
vpavgb
loop
enter
hlt
ror
sti
sbb
out
repnz
loope
mov
clc
repz
aad
int3
fucomp
div
xor
enter
or
out
in
xchg
std
icebp
aad
xor
loope
sti
stc
fcomi
sti
repz
fdivr
sti
fcmovnb
cld
jmp
jmp
clc
aam
dec
ds
roll
xchg
fcmove
mov
out
stc
loope
out
cmp
idivl
out
in
loop
div
int3
fldl
hlt
rol
enter
rcr
clc
loopne
testl
out
xchg
out
call
aad
repz
neg
loope
fisttpll
lret
cli
int
xor
sub
cmp
stc
xlat
out
shl
sti
ret
sarl
leave
fisttpl
ljmp
cmc
xlat
lock
ror
lret
jmp
out
out
out
jmp
iret
fcmovnu
popl
fnstcw
in
aad
in
leave
cmp
aad
icebp
repz
idiv
fildl
in
cmp
loope
rcr
clc
sti
xor
cmp
call
mul
out
xchg
orl
sti
int3
into
vshufps
fdivrp
out
aad
or
loope
in
xlat
leave
int3
sub
mov
aad
jecxz
xor
repz
jmp
hlt
ret
rol
out
xlat
aad
leave
call
int
subl
sub
in
xlat
cmp
xlat
out
in
sti
mov
sub
ljmp
leave
cli
cmp
cmp
loop
cmp
ds
cmp
clc
loopne
int3
in
mov
xchg
test
enter
rcr
fdiv
ds
cmp
fcmovu
mov
jecxz
mov
leave
adc
icebp
in
fxch
xor
cmp
cmpb
in
mov
mov
loopne
jmp
mov
repnz
ss
cmp
fidivrs
aaa
out
leave
std
aad
out
and
aam
in
lock
shll
aaa
cmp
repz
sarl
flds
mov
in
stc
iret
fsub
shl
ljmp
xor
cld
shl
shll
f2xm1
repnz
shl
jmp
fdiv
lret
lock
xor
divl
xlat
loopne
ljmp
mov
clc
cli
fmul
in
out
in
fimuls
not
in
into
aad
in
clc
fadd
cmp
sar
jmp
xchg
mov
out
nop
nop
jmp
fbstp
shr
icebp
fsqrt
fnstcw
cmp
aam
shl
addl
jmp
iret
imul
ret
out
xor
not
cmc
cmp
sar
hlt
rcl
filds
mov
stc
and
rorl
out
cmp
lock
loope
std
stc
cld
clc
mov
loop
fistl
out
out
leave
lock
ret
cmc
jecxz
mov
loopne
out
mov
repnz
nop
das
jecxz
int3
jmp
aam
jmp
xlat
jecxz
icebp
repz
loopne
xor
xchg
not
loope
fnstenv
cli
sarb
push
int
test
icebp
adc
stc
clc
test
stc
loop
mov
clc
lret
xlat
cli
repz
jmp
fdiv
out
out
loope
jecxz
in
jmp
fadd
loop
out
xchg
into
icebp
lock
repz
fdivrs
cld
repz
loop
mov
call
inc
in
loope
shl
leave
in
iret
int3
iret
ljmp
and
jmp
int3
mov
sbb
call
out
repz
into
clc
repnz
xlat
fdiv
movb
mov
in
mov
jmp
in
out
ds
loope
repz
shl
fdivr
aad
mov
in
xor
xlat
cmp
xor
std
repz
jmp
ret
lret
enter
int
cltd
movsb
imul
addb
jle
add
test
xchg
mov
rol
jmp
xchg
shl
iret
cmp
cmp
into
cmp
jecxz
ret
loopne
loopne
cmpb
test
in
loope
out
out
enter
int
shl
rol
faddp
lret
cld
in
int
lret
shlb
shlb
lock
repnz
rcr
stc
sarl
cmc
cmp
fcom
lret
loopne
xlat
fldpi
lret
aam
xor
xor
xor
xlat
lret
xlat
cmp
cmp
shl
loop
loope
call
out
int3
adcb
cmp
ss
cmp
jecxz
mov
mov
imul
addb
repnz
ror
fld
cmp
fxch
aaa
div
fucomp
out
clc
call
decb
mov
xchg
sub
icebp
fdiv
cmpb
repz
aas
inc
sbb
lds
xor
rcl
call
sbb
neg
xor
std
ror
loope
jecxz
ret
shl
cmc
ljmp
aaa
rcr
out
cmp
test
and
stc
lret
mov
clc
clc
shr
cmp
aaa
fsubr
out
ds
aam
rolb
mov
int
int
xor
aaa
sti
call
in
xlat
repnz
aas
clc
out
xlat
sbb
into
lret
sar
xor
xlat
lock
repnz
shll
aas
sti
lock
cld
ret
mov
in
in
xchg
ljmp
xor
aaa
stc
xor
loop
ret
repnz
in
sar
cld
call
cmc
rcl
aad
ljmp
aas
fcmovnbe
cli
cmp
lret
xlat
or
out
cmc
out
shl
icebp
int3
xor
jmp
int
out
hlt
loopne
loopne
lea
std
lret
ret
imul
sar
cld
loopne
idivl
or
cli
mul
rolb
in
orl
lock
loopne
cmc
repz
ret
flds
lret
out
in
xchg
and
fdivs
jmp
fst
fldl
iret
stc
rol
stc
fcompp
in
test
mov
into
int3
in
lock
loopne
jmp
cmp
aam
roll
aam
lret
mov
mov
divl
shlb
repz
not
fsubr
ds
stc
ret
cld
and
loope
and
aad
out
in
hlt
ljmp
xor
repnz
fsubrp
ret
leave
loop
mov
dec
mov
xchg
out
cmp
cmc
icebp
cmp
cmp
fucomip
vpandn
std
jecxz
imul
ss
stc
rcl
xlat
ljmp
stc
in
ffreep
cld
in
loopne
int
loop
mov
in
in
out
hlt
cmp
jmp
out
lret
in
jmp
out
fiaddl
loopne
or
xor
xchg
int
in
out
rcr
hlt
clc
fdivp
iret
aad
stc
loop
fcom
stc
lds
mov
ss
in
in
cmp
std
std
ret
and
aad
fcmovne
mov
fxch
out
mov
shr
sti
jmp
sar
cld
aad
loop
clc
in
leave
call
xchg
mov
mov
in
sti
fucompp
sti
icebp
out
cmp
cli
shl
repnz
sar
repz
sti
cmc
fldlg2
lret
int
out
shl
call
neg
xor
fcmovbe
into
fiadds
enter
std
mov
lret
xorl
enter
cmp
xlat
call
fcomp
xchg
addl
sti
call
leave
enter
cmp
repz
icebp
icebp
sbb
repz
mov
lret
xchg
out
mul
xor
clc
cmp
cmp
std
in
test
out
out
out
loope
jecxz
jecxz
ljmp
repnz
inc
in
fmull
mov
fadd
out
shl
cmp
cmc
xor
jmp
iret
ror
fcmovnu
out
mov
insb
adc
jle
add
loop
fcomp
loopne
ljmp
repz
icebp
sub
std
cmp
out
in
cmc
fsub
xchg
and
cli
rcr
movb
xchg
in
shll
ret
call
fcom
ret
loopne
sti
sti
cld
sti
call
loop
hlt
jmp
xor
lret
ljmp
repz
cmp
fmul
icebp
mov
repnz
shl
ret
repnz
cmp
fcmovbe
stc
cli
icebp
rcl
test
mov
test
mov
test
aam
das
int
ror
in
ljmp
aas
in
mov
xchg
test
ljmp
add
cmc
xor
fdivs
out
ror
fpatan
repz
fldpi
clc
fdivr
stc
out
std
ficoms
xor
neg
cmc
loopne
cmp
cmc
aam
cmp
xchg
xchg
in
fstl
loop
test
iret
cmp
loope
fdivrl
ret
xchg
enter
nop
mov
lret
or
fcmove
repnz
loopne
repz
loopne
leave
repz
fdivr
mov
in
call
repnz
clc
iret
stc
fdivr
or
cmc
out
out
jmp
std
in
jmp
in
loop
aaa
lock
out
aam
cmp
icebp
test
ret
fstp
loope
out
ficoms
ror
lret
cmp
repnz
shlb
test
mov
cmp
cli
fsubrp
xchg
mov
in
loope
enter
fcmovbe
hlt
rol
in
loope
add
idiv
out
imul
clc
in
fisttpl
lds
jecxz
int
cli
int3
loopne
not
loop
cmp
aad
fstp
test
faddl
loope
cmc
rcr
xlat
cli
lret
hlt
ss
ds
in
mov
out
cld
into
mov
sub
ror
out
xor
fnstcw
aam
cmc
icebp
lock
in
aad
fcmovu
mov
xor
cmp
jmp
out
cmc
enter
std
into
lock
fiadds
lret
in
call
cli
cmp
enter
fdiv
ds
cmp
int3
fldl
in
xchg
icebp
lret
xlat
jmp
ds
ror
test
test
movb
loopne
ss
sti
in
cmp
xor
iret
xor
fdivrs
test
fildl
repnz
xchg
into
in
into
icebp
cmp
into
xor
std
xlat
ret
xchg
lret
out
enter
xchg
into
jmp
in
jmp
ljmp
call
in
mov
shr
repnz
out
cs
repz
sar
out
repz
hlt
ds
loope
xlat
xchg
fcmovne
shl
xor
aaa
out
xor
sarb
aad
loopne
rcr
in
cmp
call
shr
xorb
not
fdivs
jmp
roll
aam
aam
cld
fimull
xchg
icebp
int3
hlt
xor
repnz
cmp
ret
cmp
ljmp
lret
xchg
ror
rol
call
loopne
fadd
stc
xchg
mov
in
loope
jecxz
loope
out
int
ret
fdivr
sti
aam
int3
cmp
repnz
cli
idiv
loope
mov
clc
testl
in
ss
in
sarb
call
std
cld
les
rcr
lea
into
das
repz
fsincos
jmp
neg
testb
std
lret
std
lds
ljmp
shl
hlt
jmp
xlat
rcr
aad
enter
into
xchg
in
xchg
int
ss
sarb
iret
cmp
fdivrp
sti
loopne
dec
sti
sti
stc
xchg
fadd
icebp
lock
test
loop
clc
imul
mov
enter
in
leave
jmp
neg
sbb
adc
stc
cmp
je
movl
jmp
int3
into
fmul
fsubrl
in
jecxz
aam
dec
inc
sub
add
out
aam
jecxz
clc
enter
cld
mov
ror
ss
repz
sarl
lock
cmp
xlat
cmp
fmull
xor
loop
mov
sar
fstpt
call
aad
cmc
int
repz
test
fstl
lret
cmp
xor
int3
fcmovnbe
out
repz
cmp
loope
sti
fsubr
jmp
leave
fists
xor
in
int3
test
xchg
cli
repz
out
sub
xchg
repz
clc
into
out
in
std
int
cli
ret
test
shl
cmp
loopne
rol
test
shl
adc
clc
fcomip
xchg
imul
loopne
mov
call
shll
lock
out
stc
int3
idiv
iret
stc
out
fiadds
testb
in
xchg
clc
out
aam
not
aad
loopne
ret
into
aam
ds
loope
stc
loopne
call
in
aam
shl
sar
int3
fdiv
lock
test
into
cmp
addl
enter
cmc
into
jmp
hlt
in
cmp
cmp
faddp
mov
cld
fldpi
in
out
lret
jecxz
lret
int
jmp
xor
flds
out
in
lret
addl
ret
mul
out
xor
xlat
repz
icebp
fsubp
fdivr
fiaddl
mov
ficoml
aam
cmp
xor
fsubr
fnstenv
rcr
cli
int
xchg
out
movb
in
xchg
mov
fxch
shr
cld
enter
fcomi
fiadds
mov
fsub
in
out
xor
rcl
jmp
cmp
into
ds
cmp
out
in
xchg
ljmp
rolb
ss
lret
aad
mul
lock
sar
rcl
aad
out
into
in
mov
cmc
xor
rcl
cmp
ljmp
fcomi
in
cmp
loop
aam
jmp
mov
aaa
in
vpsrld
shl
int3
cmp
cmp
sarb
test
mov
xchg
loopne
orl
in
das
ds
sti
in
in
cmp
orl
ljmp
in
in
int
call
cmp
fsub
jecxz
int3
fmul
iret
xchg
mov
aam
shlb
jmp
hlt
lock
aas
iret
loopne
aam
cld
cmp
out
int
nop
in
xchg
cmc
jmp
enter
fnstenv
cli
out
rcl
fdivrp
rcr
xlat
ffreep
out
in
loope
fcmovbe
lret
lret
mov
in
loope
out
cmp
aad
roll
shl
cli
test
call
cli
lret
fisttps
jmp
out
rcr
xor
ror
addb
ds
jmp
repz
int3
hlt
repz
hlt
xor
ror
ds
test
jecxz
test
mov
repnz
call
ss
divl
neg
cmp
lock
in
call
mov
mov
xor
xor
xor
lock
sar
cmpb
inc
aad
test
rol
cli
fcmovne
out
xor
call
aad
call
rcr
shl
cmp
aad
nop
xchg
mov
jmp
iret
rcl
jmp
neg
shl
ljmp
test
loope
clc
ljmp
fincstp
jmp
aad
cld
xor
in
ret
clc
sti
std
les
lret
xchg
xchg
loopne
xlat
loope
fld
fsubr
test
int
cmc
out
neg
cli
jmp
mul
loop
lds
cli
bnd
cli
fnstsw
repnz
fucom
enter
mov
loope
inc
fimuls
rcl
in
ljmp
loopne
loopne
cli
test
into
mov
ret
xlat
aad
xor
cld
fidivrs
fstp
std
inc
call
add
ror
int3
aam
mov
xorb
jg
aas
add
jecxz
xlat
cld
fcomi
in
ret
xchg
cmp
call
shl
rcl
loop
xor
aas
fdiv
cmp
enter
icebp
loope
shl
fdiv
out
int
test
out
cmp
neg
xchg
test
into
xchg
iret
lret
jmp
call
sarl
lock
imul
clc
mov
loopne
shl
xor
ret
sub
repnz
rcr
dec
sti
ljmp
or
divb
ljmp
test
out
sbb
xchg
loopne
xor
sub
sarb
icebp
call
neg
sar
clc
hlt
call
idiv
addl
xchg
ljmp
cli
repnz
rol
rcl
xor
out
int
cli
cmp
sti
lock
loopne
sti
fdivp
out
in
int3
sti
icebp
mov
out
ror
cmp
cmp
fcmove
icebp
icebp
cmp
xor
ret
int3
fxch
jmp
xchg
icebp
ror
in
xor
out
shr
dec
jecxz
sar
out
cli
in
in
idiv
iret
out
iret
ljmp
imul
shl
into
imul
fdiv
sti
test
fsub
cmc
sub
xchg
addl
rcl
rol
xlat
ss
rcr
repz
rol
test
loope
mov
shl
ljmp
std
jmp
fdivrp
icebp
ds
cmp
mov
in
out
out
sti
out
xchg
fcomip
hlt
ss
jmp
out
fstp
addl
in
ret
enter
call
int3
stc
cmp
not
aam
loop
repz
xor
movl
mov
shl
hlt
xor
xor
lret
in
rcl
cld
repnz
ljmp
lock
cmp
cmp
lret
jmp
fnclex
cmp
faddp
xor
stc
xchg
pop
fdivr
enter
in
fbstp
out
iret
ret
xlat
fmul
aad
std
loop
cmp
idiv
clc
xchg
out
in
xchg
aas
lret
aam
std
jmp
xor
ret
jmp
shl
cmc
fdivr
mov
repnz
int
in
das
mul
repz
cmc
jmp
aad
ds
dec
mov
fcmovbe
mov
out
jecxz
in
hlt
cli
rcl
fcmovnbe
cmp
aas
imul
test
mov
loop
shl
loopne
out
idivb
lret
divl
call
in
fadd
cmp
jecxz
cmp
loopne
loope
mov
add
lock
cmp
fcmovbe
loope
icebp
enter
out
jmp
iret
dec
xchg
cmc
leave
clc
shr
test
div
ret
clc
in
jecxz
sti
nop
mov
xchg
xchg
loope
cmp
lret
cmp
cmp
test
fiaddl
mov
iret
xchg
sti
nop
nop
xor
repnz
repz
leave
aaa
fdivp
fcmovb
fadd
cmp
jmp
call
mov
mov
sti
std
rolb
clc
shl
jmp
cli
xchg
xor
into
xor
cmp
iret
sti
test
clc
ds
fcmovu
stc
in
neg
decl
xor
hlt
cmp
jmp
out
fucom
cmp
in
cli
loop
mov
cmp
cld
mov
xchg
lret
in
out
repnz
hlt
xor
cmp
in
clc
loope
rol
shl
fadd
cmp
test
sub
enter
test
repz
cmp
lock
dec
aas
rcr
test
out
rcll
lock
aad
int
xor
sarl
cmp
cld
test
jecxz
loop
ds
jecxz
std
mov
ljmp
loopne
or
rorb
stc
in
icebp
xchg
call
xor
das
cli
ss
hlt
fdivp
stc
rcr
jmp
loopne
ret
in
mov
jmp
xlat
lret
aad
aad
int
jle
and
scas
and
aas
add
mov
lret
mov
cmc
jmp
sti
xor
aaa
in
shl
ds
out
xchg
in
lds
out
into
cld
and
fdiv
enter
leave
ret
loop
jecxz
cmc
hlt
repz
lret
clc
loop
loop
hlt
xchg
mov
lock
xor
idiv
aaa
enter
clc
ret
fnstcw
flds
or
xchg
out
aam
xlat
cs
out
xlat
rcl
cmp
xlat
in
fiadds
not
ljmp
xchg
jmp
in
cmp
idiv
fcomip
fsincos
cmp
out
out
loop
out
nop
sub
cmp
lret
xlat
int
call
in
test
ljmp
fmulp
fists
xor
aad
fsubr
fadds
aas
aam
loope
fmuls
loop
test
mov
jecxz
lock
not
into
ror
clc
sti
sti
test
rcl
xchg
filds
cld
jecxz
xchg
repz
rol
sarb
jmp
in
faddp
sti
movl
fistl
in
icebp
in
fsincos
int3
and
ret
clc
out
aad
mov
in
fimuls
mov
xchg
in
fcmovu
in
enter
shl
sub
out
sbb
lret
ret
in
lret
mov
in
shl
ret
fcmovu
xor
fsincos
stc
aam
fadd
fsincos
jmp
lret
xchg
mov
int
lret
in
cmp
cmp
cmp
loop
jecxz
mov
call
lock
out
lock
sti
out
sarl
xlat
icebp
repnz
mov
mov
incb
shl
enter
call
cmp
in
in
rolb
dec
int3
int3
out
in
xchg
lds
int3
stc
cli
shll
adc
fsub
dec
loope
xlat
cli
in
stc
mov
nop
ljmp
enter
neg
cmp
div
in
ret
cmc
std
std
nop
fucomip
imul
icebp
fcomi
cld
fdivr
add
lret
xlat
in
or
test
ror
cmp
hlt
xor
sarb
ss
jecxz
rcl
out
loopne
loopne
xchg
int
test
xchg
ljmp
cld
out
stc
hlt
test
cmp
enter
fcmovb
std
into
cli
in
call
idiv
loope
jmp
xchg
testl
fmulp
call
shr
int3
aad
xor
int3
mul
sbb
jmp
std
jecxz
lret
xchg
aad
div
divl
shlb
repnz
fcomp
clc
in
fcmovbe
in
cli
jmp
loopne
cli
int
in
loopne
aad
xor
stc
lret
out
enter
hlt
icebp
out
clc
out
fcmovb
loopne
enter
hlt
sub
ret
fcmovnb
jmp
not
sti
fdivr
cli
xchg
aam
mov
fadds
in
mov
fld
jecxz
int3
enter
sarl
lock
call
mov
out
aad
jecxz
call
enter
lret
fcomp
xor
cld
repnz
mul
adc
fcmovnb
lret
out
cli
mov
mov
repz
aad
cmp
sti
out
cmp
aam
aad
shr
leave
in
adcb
int
rol
cmp
fsubrs
enter
sbb
xor
orb
cli
repnz
in
xlat
cli
xor
in
fcmove
fidivrs
xor
repz
sbb
loope
call
xor
repz
out
shl
cmp
hlt
fadds
stc
ret
in
into
nop
cli
in
loop
test
cmc
cmp
xor
fmul
call
int
out
out
cmc
hlt
aad
sbb
decl
loope
into
ljmp
aas
lret
ffree
int
out
loop
loop
jmp
jmp
xchg
in
jecxz
ror
in
jmp
jmp
int3
ds
cli
sarl
add
inc
lock
xor
lea
mov
jmp
lret
rcr
aad
fsubr
xor
and
aas
add
test
out
loope
iret
iret
xchg
test
fcmove
repz
std
fmul
mul
lret
shr
fcomi
fcomp
out
clc
out
fcompp
in
addl
lock
div
in
rcr
out
orl
nop
lea
out
lock
cmp
rcr
into
sti
test
leave
out
mov
in
lret
in
jecxz
cmc
aam
shl
xlat
ljmp
ret
lock
xlat
mov
cld
loope
shr
loope
into
idiv
xor
loopne
stc
call
repz
xchg
addb
in
nop
jmp
call
out
cmp
sarl
ret
faddl
testb
jmp
ss
lock
iret
xor
out
stc
aam
cmpb
std
test
jecxz
std
cmc
divl
cli
div
fmulp
loope
icebp
aad
sbb
xabort
aad
loopne
lret
icebp
test
shl
call
fdivp
into
fildl
orb
leave
repnz
lret
lock
lret
xor
fidivrl
int3
hlt
rcl
int
cmp
fldl
orb
fimuls
les
sar
in
int
sarb
roll
aad
xchg
sub
fsub
xor
int3
lock
aaa
cmp
aas
stc
lret
test
in
fisttps
cli
test
in
shr
or
aam
hlt
icebp
repz
cmp
ret
aad
sbb
dec
ret
ret
in
lock
sbb
repz
xlat
ret
clc
idivb
aaa
int3
aaa
cmp
ss
ret
icebp
les
ljmp
cmc
mov
xor
sub
das
cmp
fldln2
fidivrs
aas
xchg
hlt
mov
fcmove
mov
in
ljmp
jmp
ljmp
testb
ljmp
test
rorb
icebp
sti
repnz
iret
cli
stc
ljmp
fisttpll
sbb
std
rolb
in
out
aad
iret
aam
rcl
lock
fadd
lds
mov
int3
das
xor
iret
cmp
rcl
repnz
into
iret
std
cmp
cld
int3
enter
xchg
mov
jecxz
imul
shr
rcr
call
adc
and
lret
std
lock
fsubr
int3
or
sub
call
ds
int
rcl
roll
call
test
in
loope
lock
xor
xor
fdivp
cli
cld
repnz
in
loopne,pt
jmp
mov
out
repnz
loopne,pn
shl
lret
lret
aas
cld
in
ret
fucomi
faddp
loopne
int
or
ret
int
icebp
shr
aaa
aad
stc
in
icebp
rol
fdivp
cld
in
in
cmp
xchg
fdiv
lock
icebp
in
call
fcomip
div
faddl
out
loopne
leave
loop
in
out
idiv
lret
in
sti
idivb
jmp
f2xm1
aam
hlt
fadds
jmp
call
xor
call
iret
not
loopne
cld
cmp
test
fmuls
out
call
ss
cmp
cld
int
aas
repz
cmc
fxch
std
in
test
sti
rclb
shl
ss
lret
ljmp
xlat
ret
mul
testb
fcoml
repnz
aad
fsubrp
lret
cli
fidivrl
clc
shl
rol
call
in
sti
mov
ror
clc
fadd
repz
enter
out
les
ret
idiv
fxch
lock
nop
into
shll
fcmovb
call
idiv
loope
clc
xlat
hlt
rolb
lret
adcl
lret
neg
xlat
call
addl
cld
xchg
loope
lret
aam
cmc
leave
lret
repnz
jmp
rcr
rcl
loop
aam
inc
or
jmp
jmp
ret
iret
enter
int
xchg
cmpsb
push
ja
stos
movsb
xor
jg
aas
add
xchg
in
mov
loope
loopne
mov
nop
in
xor
iret
call
std
enter
cmc
lock
cmp
mov
mov
in
rcl
rcl
idiv
sar
xor
in
cld
and
rcr
idiv
mov
jecxz
in
in
jmp
rclb
fdivr
iret
fistpll
sarl
sti
divb
and
enter
jmp
icebp
incl
cmc
ljmp
iret
aam
addb
fucomip
nop
enter
addb
stc
into
fistpll
clc
test
cmp
test
aad
ret
decl
lock
enter
in
call
fcmovnu
fpatan
cmp
neg
enter
mov
xchg
int
dec
loope
shll
sarl
jmp
ret
fcom
cld
cld
icebp
sbb
test
out
xlat
xor
lret
aaa
icebp
jmp
fnstcw
icebp
enter
fmul
cld
addl
sar
fdivrs
sti
cmp
incl
call
fmul
movl
rcl
call
fildl
aas
fucom
cmp
xlat
test
out
jmp
fninit
shr
repz
xor
in
xor
aaa
cmp
aad
cmp
jmp
jecxz
int3
std
and
std
repz
fsub
sub
shr
in
aam
fcomip
xlat
stc
mul
out
int
lret
stc
out
mov
repz
xor
repz
sar
lret
clc
aad
or
std
fsub
popl
neg
aaa
jecxz
enter
lock
std
shl
xchg
repz
cmc
fsubrp
rorb
in
fxtract
cmc
call
aam
cld
cmp
mov
fisttps
out
lock
mov
out
fcmovbe
icebp
lret
iret
std
xor
aam
in
stc
stc
xchg
rcr
mov
test
cli
int3
fldl
jecxz
xor
cld
cmp
cmc
iret
fnstsw
out
fldl
fdivr
sti
enter
out
loopne
lock
int3
fcomi
hlt
not
xchg
cmp
stc
loopne
in
in
out
jmp
ljmp
cmp
cmp
into
xor
clc
out
loopne
mov
int3
mov
xchg
sub
lret
lret
lret
f2xm1
lock
cmc
mov
out
call
repnz
neg
in
ljmp
cld
jecxz
addb
jmp
jmp
call
lret
lock
iret
sti
cli
xlat
xor
loope
shr
stc
out
mov
into
and
in
lret
ss
cmp
lret
cmp
fiadds
loopne
loope
xchg
in
aam
call
in
fcmovnu
call
ret
rolb
int3
fucomip
cli
popl
test
call
icebp
cmp
xor
loopne
shr
loope
leave
out
aas
call
ljmp
aam
xlat
sarl
fcomip
clc
fiadds
leave
frndint
iret
fmul
repz
iret
loop
aam
iret
sar
xor
fucomi
clc
into
loop
into
faddp
mov
lea
aam
out
ror
cld
xor
ror
or
lds
jmp
loopne
notb
xlat
jmp
hlt
fcmovnu
add
out
fprem1
and
sti
fisttps
out
out
shl
jmp
cld
enter
xor
mov
sti
fucom
mov
out
repnz
aad
iret
sar
mov
sarb
cmc
cmp
loop
fnstcw
call
loopne
ljmp
shl
fcmovbe
std
cli
cmp
lock
xabort
test
loop
shl
in
xor
in
cmp
fnstcw
cld
cmp
cmp
out
fsubr
mov
xchg
into
jmp
fcmovu
int3
xor
fcmovnu
cmp
mov
xor
mov
jmp
lret
fst
int
test
cmp
bnd
aas
add
repz
jecxz
xchg
repz
xchg
aas
loopne
ret
shl
aam
icebp
cmp
repnz
jmp
test
xchg
shl
repnz
cmp
repz
fdecstp
cmp
neg
repz
shl
loopne
fiaddl
dec
ss
repz
sti
div
mul
in
test
xlat
cmp
lret
loope
xor
aad
clc
icebp
out
lock
hlt
cmp
in
out
out
fcmovne
nop
out
and
aam
in
lret
loopne
lock
vpor
lret
jecxz
int
dec
rcl
out
ds
lret
ds
cli
cmp
hlt
shr
xor
into
cli
xchg
std
lret
ljmp
sbb
aam
fucomp
loop
test
enter
xchg
in
icebp
out
cmp
fidivl
stc
repnz
idiv
ds
cmc
xlat
out
ror
cmc
jmp
int
out
loop
ss
xor
fsubr
idivb
and
fadd
fnstsw
fiadds
lret
mov
out
div
clc
out
repz
adc
fsubp
mov
std
out
mov
into
cld
xchg
mov
jmp
lock
xlat
sbb
shl
out
stc
fisttps
shl
rorb
lret
std
repz
ds
xchg
mov
int3
fucomi
lea
loopne
fmul
ret
into
fsubr
aam
clc
cmp
fnclex
sti
sti
cmc
ljmp
pop
fnstsw
out
hlt
leave
jmp
fsincos
xor
loop
sti
fcmove
loopne
fmulp
into
loopne
mov
leave
jmp
in
xor
loopne
cmp
out
rcr
xlat
ret
and
decb
fsubr
cmp
clc
in
leave
cli
sarl
loopne
out
ret
fildl
fsubr
iret
rol
dec
jmp
in
mov
out
aad
ds
ret
in
mul
jecxz
clc
fadd
addb
loop
out
in
out
xor
xor
jecxz
in
aam
in
lret
lret
fsubp
in
jmp
cli
call
fsubrp
not
sarb
aam
decl
sar
iret
out
int
iret
cmp
std
int
fdivrs
rcl
rcl
xlat
loopne
jecxz
std
and
in
mov
icebp
in
out
out
xlat
iret
sti
in
frndint
lret
loopne
loope
fsub
fisttpl
out
fsub
mov
imulb
jecxz
xlat
fcmovne
int3
enter
fcmovnbe
sbb
fmul
ret
test
out
loopne
lret
mov
mov
call
stc
iret
shl
call
xor
sarb
shl
mov
test
fcom
mov
in
out
leave
jmp
dec
imul
cli
lock
fcmovnbe
aam
div
loope
int
cli
filds
int
in
in
mov
test
xor
jmp
cmp
sar
lock
ret
fmul
cld
cld
xchg
out
in
loopne
fxch
ret
fcomp
repz
jmp
add
in
jmp
sub
out
mov
xor
aaa
jmp
ljmp
mov
test
out
loope
out
out
not
shr
cmp
out
jmp
fdivrl
icebp
aad
fsub
jmp
leave
mov
enter
out
lret
lock
shll
das
fpatan
icebp
fadds
cmc
aas
jmp
and
jmp
sar
out
jmp
cmp
sti
xchg
cmp
cld
in
int3
incb
rcl
shl
xor
std
stc
xor
shl
aad
sti
aaa
cld
out
mov
out
and
out
divb
sub
cld
rcl
ret
icebp
sti
and
cmc
xchg
xchg
filds
ljmp
add
shl
ljmp
fsubp
lret
jmp
aaa
out
jmp
hlt
and
rcr
rolb
mov
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
push
adc
jmp
xlat
ffree
xor
pop
fldl
mov
scas
add
fiadds
decb
das
in
vpaddq
rcl
std
rol
cli
adc
int3
lret
fsubrp
mov
xchg
shl
aad
fcmove
fstp
shl
cld
ret
shl
aad
in
xchg
or
leave
ret
sarb
cmp
jmp
shl
cmpl
les
out
mov
fsubp
aaa
in
fdivrs
das
cmp
repnz
into
std
add
sti
lret
cli
loope
fildl
lret
das
fsub
fdivr
aad
cmp
repz
rol
clc
in
std
out
jecxz
out
shr
in
in
in
ret
stc
aam
repz
repz
int3
lret
cmp
hlt
cmc
cmp
jmp
out
sarl
cmp
jmp
aad
jmp
stc
out
std
repnz
jmp
xchg
sar
sub
int
xor
int
div
cmp
fnstsw
repnz
cli
ret
repz
lock
out
ljmp
xor
ror
jmp
fiaddl
lret
mov
aad
enter
shl
cld
cmc
rcr
stc
out
cmp
hlt
cld
in
into
lret
lret
std
iret
jmp
out
into
call
in
cmpl
fsub
ret
fcmovbe
ljmp
test
in
enter
fcmovnbe
cmp
ret
stc
loop
lds
loop
mov
xor
cld
repz
hlt
std
loopne
cli
fimuls
std
leave
dec
jmp
xor
aad
stc
repz
icebp
fcmovne
cmp
jecxz
rorl
sti
out
lret
test
into
hlt
fsubrp
rcl
fsubrs
vpmullw
fiaddl
aad
sbb
jmp
in
shr
xchg
nop
aaa
imul
fcomi
ljmp
in
xlat
clc
out
aad
clc
in
nop
lock
icebp
mov
leave
ret
hlt
into
fdivl
add
mov
mov
in
jecxz
jmp
enter
rcr
ljmp
into
hlt
rorb
xlat
cli
test
cld
int3
mov
in
loope
clc
fcmovnbe
aam
xlat
cmp
stc
stc
cmp
in
mov
loop
mov
in
rcll
fstpt
enter
out
repnz
cld
rcr
idiv
cld
ljmp
in
lds
rcr
cmc
fldl2t
fucomip
cmp
cmp
xchg
xlat
fimull
repz
out
sub
shl
ds
les
sti
mov
lret
lea
xlat
cmp
sti
sarb
lock
not
aad
out
loop
clc
jmp
nop
sti
int
lret
test
iret
loopne
rol
cmp
repnz
xlat
in
jecxz
jecxz
fsubr
cmc
fdivrp
fxch
in
jmp
divl
enter
jecxz
repnz
stc
test
loopne
ret
loope
or
into
xor
cmp
repnz
clc
aas
idiv
xchg
in
int
ljmp
pushl
jecxz
iret
iret
cmp
out
icebp
loope
loope
aad
cmp
ljmp
mov
into
int
ss
into
mov
lret
rcr
cli
fndisi(8087
clc
xchg
stc
loop
loope
mov
into
rol
cld
cld
xor
div
clc
repnz
add
stc
into
jmp
xor
rcr
sti
jmp
in
in
loope
out
idivb
icebp
in
out
test
int
lret
stc
hlt
cmc
int
jmp
sarl
in
xor
loop
loope
in
out
in
jecxz
int3
into
xor
in
lret
fistpll
icebp
into
and
not
test
cmc
cmc
int3
in
fcomi
lock
in
in
int
std
std
lock
stc
in
out
jmp
rorl
decb
nop
fbstp
fcmovne
fstp
in
clc
sub
iret
lock
call
mov
out
xchg
int3
in
iret
ss
cli
jmp
loopne
fninit
xlat
sbb
mov
loopne
sti
vcvtdq2pd
jmp
out
into
ljmp
repnz
ror
icebp
int
idiv
rolb
jmp
hlt
cmc
shl
test
cmc
rolb
xchg
sti
incl
or
cs
leave
in
icebp
movl
xor
jmp
iret
rol
rol
or
push
aaa
lea
enter
jg
scas
add
aaa
enter
out
add
xchg
mov
lret
jecxz
jecxz
call
lret
fsub
imul
sarl
xor
aam
jmp
std
cld
cmc
mov
ret
stc
divb
cmp
xor
aad
idiv
stc
xlat
hlt
out
loopne
nop
xchg
nop
repz
lret
stc
ror
aad
xlat
aaa
ss
cmp
clc
in
stc
repz
shl
fsubp
in
incl
lret
xchg
int3
shr
in
into
xor
rcr
aas
repz
aam
cld
cld
aad
std
jecxz
mov
shl
cld
fdivrs
xchg
test
lea
xchg
aam
into
out
int
aad
loopne
rcl
in
ret
xlat
inc
jmp
fsubrp
mov
out
fdivrp
mov
cmp
stc
shr
fdivrp
std
ret
sti
cmc
fisttps
in
aad
lret
loop
std
cmc
idivb
int3
in
xor
fsubrp
cmp
addl
lock
loopne
out
rorb
fcomip
inc
jmp
xchg
int3
xor
cmp
idivl
cmp
stc
cli
adc
cmp
out
jmp
hlt
jecxz
int
iret
int3
cmp
pushl
std
idivl
clc
aad
out
aad
int
xchg
ljmp
xor
xor
cmp
fsincos
cli
cli
mov
loop
sub
rcr
adcb
icebp
aam
fmulp
fdiv
lock
cmc
cmp
in
test
lret
mov
loopne
enter
icebp
lret
xlat
cmp
cmp
std
ffree
ret
mov
or
stc
in
in
sub
rcr
call
cmp
stc
xchg
jmp
xchg
xor
les
dec
lret
test
repnz
mov
xlat
out
sti
movl
into
xlat
fcmovbe
cli
aad
jmp
out
aam
mov
enter
repnz
repnz
aaa
jecxz
cmp
jmp
aam
lock
sarl
shl
fldl2t
stc
mov
fmull
aas
jmp
jmp
aas
cmp
in
test
ret
ret
les
mov
in
out
hlt
int3
into
das
ss
fsubr
fnstcw
fdivp
loopne
iret
shl
lds
ljmp
shl
shr
xlat
shl
cmp
stc
shl
jmp
filds
faddl
shll
leave
cmp
aam
clc
in
cld
cmc
hlt
neg
call
mov
mov
loopne
xor
lock
fstp
fsub
testl
xchg
mov
jmp
clc
lret
aaa
ljmp
shl
clc
jmp
fiaddl
in
loope
jecxz
clc
jecxz
sarb
cmp
in
jecxz
loope
rcl
fcomip
fldl
int3
repnz
aam
out
shlb
cmc
adc
repz
in
mov
test
mov
out
cli
loop
shl
fdiv
fdivp
in
xlat
out
rcl
call
fstpt
icebp
repnz
jmp
in
clc
adc
xor
ljmp
loop
rcr
mov
mov
ljmp
call
cmc
std
rol
rcr
icebp
fdivrp
mov
loopne
out
loope
in
ficoms
lock
std
icebp
aas
hlt
repnz
aad
out
sbb
fldl
fisttpll
repnz
into
in
aad
sarl
out
rcr
mov
sub
in
popl
aam
cmp
lret
sar
out
xor
sti
sbb
xlat
cli
leave
loopne
fsub
in
out
ret
xor
out
loopne
icebp
in
fadd
cmp
fucomip
out
cld
sti
jmp
xchg
lock
out
sar
jmp
aam
xlat
lret
xor
testb
iret
int3
in
hlt
mov
repz
cmc
ljmp
clc
cmp
stc
cld
clc
xchg
fucomp
testb
test
shll
ss
rol
iret
aaa
cmp
cmp
fiadds
call
stc
out
shl
loopne
aam
xor
fldt
das
out
sarb
cmp
xchg
repz
loopne
jmp
inc
cld
daa
test
add
ror
fxch
shll
or
fldcw
adc
add
ljmp
mov
fdivr
fcmovbe
dec
lock
cli
testb
loop
in
cmp
out
iret
bnd
enter
xlat
aas
incl
lock
int3
in
test
shll
xor
call
idiv
cmp
aad
icebp
icebp
out
sbb
ljmp
sar
xor
xabort
fdivr
cli
aad
lret
ret
fdivr
enter
in
fstp
lret
out
sar
nop
xor
fxch
cld
hlt
lret
int3
leave
cmp
jecxz
stc
std
ret
mov
int3
fucom
in
out
cmc
cmp
xor
lock
in
rcl
jmp
sti
loop
decl
icebp
les
clc
hlt
sarl
out
cmc
repz
sbb
repz
ljmp
shl
loopne
int
leave
xor
jmp
fbstp
loope
in
add
leave
mov
iret
out
in
int3
jmp
shl
aam
lock
add
loope
cmp
fxch
enter
fmul
fadds
iret
jecxz
cmp
in
xor
call
sarl
cli
cmp
std
sbb
loopne
lret
repz
fucomp
loop
cmc
jmp
hlt
cmp
rcr
jmp
leave
leave
jmp
and
ljmp
xor
std
loopne
loop
ds
xchg
mov
nop
push
stc
lret
iret
repnz
cmp
aad
add
enter
in
mov
mov
xor
call
xor
cmp
fstp
in
cmc
stc
aam
loop
jmp
repz
int
in
xor
in
into
jmp
out
int
fnstcw
out
iret
les
aad
fists
int
into
in
ror
out
out
fxch
fnstcw
std
rol
rcl
cmp
clc
sti
fmuls
call
vpsubsw
out
ljmp
idivl
div
fneni(8087
xchg
addb
aad
cli
in
imul
repnz
out
xor
sarl
push
cmp
sti
test
test
int3
in
iret
jmp
out
out
ss
sti
aam
in
cmp
in
sti
and
in
test
nop
aam
out
cmc
out
cs
cmp
aas
loop
fdivrp
jecxz
int
loop
jmp
cmp
jmp
lock
in
repnz
lret
fmulp
cmp
enter
fstl
jmp
cmp
hlt
repz
fdivr
jecxz
xlat
test
decl
in
xor
repz
clc
icebp
fstp
out
in
jecxz
lret
call
aam
xor
cmc
jmp
call
aad
movb
neg
mov
xlat
out
in
out
cmp
cli
into
cmp
sar
stc
orb
nop
jmp
enter
clc
sar
hlt
fcomip
fscale
rcr
fmull
mov
test
jmp
lret
out
int3
ss
ljmp
out
enter
lret
in
test
aaa
aaa
fcom
out
fcomi
fdivrp
into
int
lock
and
xchg
jmp
rol
cmc
jecxz
cli
lret
dec
loopne
std
cmp
neg
cmc
orl
in
enter
into
jmp
into
jmp
iret
icebp
idiv
out
fcom
aam
inc
lret
mov
std
in
out
enter
lock
div
in
fistpll
hlt
sarl
aas
fistpll
aas
mov
out
fisttpll
repnz
orl
xlat
aas
loope
idiv
aas
clc
loope
mov
testl
repz
les
shl
lock
repz
fcom
aam
iret
fcmovne
sti
cli
clc
aam
xlat
test
in
mov
xor
iret
sarb
cmp
lret
repz
hlt
cmc
adc
cli
ror
call
mov
repnz
repz
lret
adc
idivl
cld
loopne
jmp
nop
fucom
xchg
int3
enter
ljmp
xor
clc
neg
out
call
loop
xchg
hlt
xchg
out
xor
loop
cmp
cmp
loope
fdivp
in
sti
lret
cmc
and
repnz
sbb
out
shrl
repnz
lret
cld
push
xor
add
mov
sub
xor
mov
sub
jmp
sarl
aam
aam
fcmovne
inc
cwtl
sbb
inc
sarb
add
repz
cmp
neg
iret
roll
clc
lret
clc
ret
icebp
iret
into
iret
repz
jmp
out
neg
stc
sti
cmc
push
mov
or
jecxz
jmp
test
ljmp
out
clc
xlat
cmp
jecxz
rcl
xor
out
sti
sti
in
lock
in
repz
out
cld
stc
ror
sar
fucomip
mov
enter
cli
out
stc
ljmp
lret
std
cld
cmp
ljmp
bnd
fnstsw
orb
shr
int
ret
icebp
hlt
aaa
loopne
stc
ror
add
mov
fcmovnu
jmp
fiadds
xchg
out
aad
out
cmc
call
fsubr
test
ret
sti
stc
mov
jecxz
in
xchg
iret
shrb
cli
xor
fcmovu
idivl
filds
rol
orl
clc
fmull
cs
lret
xlat
iret
loopne
jmp
in
sarb
div
mov
std
sbb
xlat
call
int3
xchg
out
rcl
leave
enter
out
sti
cmp
fcom
cmc
loop
testb
xchg
jecxz
lret
les
lret
cmp
xchg
sub
cli
hlt
fucomp
call
cmp
xor
cmp
out
adc
cmc
filds
int
fucomi
fisttpl
mov
jmp
jmp
out
fdivp
fcmovnb
lret
enter
test
hlt
test
rcl
enter
jmp
icebp
sar
cmp
fld
repz
ljmp
nop
test
mov
lret
jecxz
cmp
int3
loope
fcmovbe
aas
in
rol
xchg
movb
jecxz
iret
loopne
aaa
test
xlat
cmp
cmp
sti
cmp
aas
in
test
int
mul
int
cmc
ss
in
in
aas
int
int
shl
neg
aam
stc
cli
out
sub
sub
xor
ljmp
icebp
jmp
loop
test
ret
roll
fucomip
lock
out
fnstenv
out
rcl
fmulp
jmp
loopne
aas
stc
xchg
in
aad
out
jmp
xchg
lds
in
out
xor
in
int
rolb
shl
fucomi
loop
leave
fimull
jecxz
lock
stc
in
hlt
xlat
ss
in
leave
repnz
ret
incb
fcmovnu
lret
fsubrp
out
rcr
icebp
xorl
icebp
stc
ret
cmp
aam
incb
mov
sub
xchg
clc
jmp
dec
repnz
aad
cmp
cmp
lds
enter
xchg
sti
mov
lea
in
into
rcr
jmp
loopne
test
out
loop
ljmp
adcl
out
lock
cmp
fdivr
not
aam
mov
into
in
into
jmp
ljmp
hlt
sti
fdivrp
cmp
rcl
loopne
flds
loopne
shr
mov
fnstcw
into
test
shl
xlat
jecxz
into
fadds
clc
mov
test
mov
out
xchg
in
lock
leave
into
lock
ljmp
xchg
fsub
ret
loopne
lret
idiv
out
sti
int3
repz
shl
xlat
ss
ss
rcl
ljmp
hlt
xchg
int
fld1
iret
ror
jmp
cmp
das
call
jecxz
cld
into
stc
mov
loope
test
into
ljmp
xor
iret
lds
aad
cmp
shr
in
loope
lock
mov
lret
in
faddl
in
jmp
cmc
enter
in
jecxz,pt
jecxz
loop
jmp
xlat
call
hlt
nop
xchg
loopne
stc
in
in
ss
cli
cmc
fistpll
loope
ret
sarl
xor
out
in
shl
loope
test
xchg
aas
xor
out
xor
idiv
enter
into
out
sbb
clc
fstp
loop
in
shl
xchg
jmp
cmp
cmp
clc
fsubrp
aad
ret
clc
into
shr
repnz
rolb
and
xor
stc
repz
cmp
cmc
test
aad
stc
hlt
lock
in
out
out
fmull
out
mul
in
shl
cmp
out
shl
stc
xchg
mov
cmc
hlt
xchg
out
icebp
out
cmp
sar
cmc
jmp
sti
lock
repnz
int
cmpb
add
sbb
cmp
add
test
add
add
add
jne
push
call
mov
dec
mov
jmp
xor
xor
xor
or
jmp
int
fcmove
fstp
adc
js
addr16
jl
lds
scas
add
fsub
in
mov
ret
sti
aaa
fcmove
fucomi
cmp
fdivrs
test
not
decb
in
in
xchg
orl
xlat
cmp
repz
repnz
shl
cli
loopne
fcomip
loopne
xlat
lret
dec
xchg
xchg
mov
cs
lret
std
jmp
fcmovbe
testl
imul
int3
into
fldl
jmp
cmp
cmp
iret
rcl
fiaddl
fmul
out
mov
std
iret
jecxz
icebp
out
out
out
sub
cmp
ret
xlat
shr
jmp
orb
xchg
xor
cmc
ds
iret
test
loope
mov
mov
test
loop
in
aam
fidivl
ss
aad
imul
leave
out
out
neg
cmp
xchg
int
in
nop
test
into
enter
int3
fsqrt
fidivrs
rol
xchg
flds
out
jmp
loop
enter
enter
xor
lock
ret
aad
fmul
fsubr
loop
call
cli
shr
std
sti
cmp
sub
adc
xlat
aam
shl
imul
call
cmc
ret
sar
lret
std
xor
aas
ret
fdiv
clc
xchg
lret
ret
loop
shr
shl
fcomip
test
enter
sti
fidivrl
bnd
fucomip
repz
hlt
shl
ffreep
incl
loopne
xchg
shl
cli
int3
xor
lret
into
xlat
out
fdivrs
fcomip
fmull
into
repz
lret
cmp
out
ds
ljmp
cmp
jecxz
sti
icebp
orl
sar
in
int3
lock
out
fidivrs
test
stc
clc
and
cld
int
sbb
jmp
out
fadd
cmp
and
in
jmp
stc
jmp
test
out
ret
out
div
clc
fcomp
mul
div
fcomi
loopne
sti
test
clc
xchg
ljmp
aad
call
xlat
ss
cmp
ret
stc
std
adc
test
lret
xchg
mov
xor
jmp
cmp
out
xlat
cli
enter
faddl
iret
ret
xor
int3
fnstcw
fldl
sti
loop
xchg
enter
xor
shl
stc
rolb
xchg
test
int3
lret
cli
rcr
ss
clc
xlat
cmp
ffree
fdivr
rol
loop
cld
mov
test
std
jmp
ret
xor
ljmp
loopne
fmul
ljmp
in
fists
iret
les
jmp
inc
xor
call
ljmp
out
aas
icebp
aad
ss
cmp
test
hlt
test
testb
incl
out
imul
jecxz
cmp
fstpt
aaa
icebp
aam
clc
fcmovu
xchg
enter
incb
jmp
fcomi
imul
in
sti
cli
loope
out
icebp
ljmp
leave
out
call
call
dec
cmp
aaa
repz
into
flds
in
xlat
mov
aad
call
jecxz
in
repz
adc
aad
out
jmp
out
into
mov
fbstp
lock
in
enter
clc
out
fucomip
in
mov
loope
xchg
in
jmp
cld
mov
rcl
cmp
jmp
cmp
ret
test
xchg
lret
leave
xchg
jmp
aam
aaa
repnz
xlat
fcom
aad
xchg
fcmove
addl
aad
int
cs
cmp
shr
repz
fstl
mov
in
int
enter
hlt
out
fnstsw
rolb
rcr
hlt
call
enter
lret
lock
aad
clc
loop
push
shl
test
xlat
lock
xchg
xchg
call
cmp
ds
repz
ret
out
repnz
decl
out
call
rcl
out
xlat
cmp
jmp
shl
testb
leave
leave
sti
loop
cmp
leave
hlt
repz
rcl
cmp
mov
add
subl
add
addl
imul
jmp
into
aam
enter
fsubl
dec
pop
pop
mov
add
lret
scas
add
xor
xlat
rcr
imul
enter
call
test
enter
ss
hlt
repz
rol
cmc
xlat
fisttpl
int3
adcb
ret
jmp
cli
xlat
iret
fdivrl
jmp
loope
incl
nop
adcb
neg
cmp
fstpt
fucom
jecxz
leave
hlt
hlt
aad
leave
out
in
lret
lock
hlt
cmc
int3
aaa
ror
sti
call
cmp
fcmovne
out
cld
enter
ds
fmul
out
in
orb
stc
call
stc
xlat
aas
adc
imul
in
enter
lret
jmp
in
lret
sti
xor
shl
lret
xlat
lock
sar
clc
test
loop
test
mov
icebp
aaa
repz
ljmp
sti
fnstcw
cld
fstp
jmp
xchg
into
mov
hlt
ljmp
lret
icebp
sti
icebp
sti
ret
clc
cmp
in
in
repnz
xchg
fdivrs
loop
cmp
cmp
lock
sar
jecxz
fadds
loopne
roll
stc
int3
icebp
test
idiv
repz
int3
aas
std
call
cmp
mov
out
mov
frstpm(287
cli
xchg
xchg
call
icebp
xor
cmp
out
fsubrp
sar
fsubp
loop
in
ret
out
cli
std
test
mov
not
cmc
xor
ds
enter
cli
rol
fsub
cmc
ret
in
orb
out
xchg
lret
lret
repnz
xlat
jmp
in
in
loop
call
les
jmp
das
out
ljmp
sar
shl
orl
nop
out
hlt
test
imul
int3
xlat
fsubrp
in
faddl
xlat
loope
cld
stc
leave
mov
xchg
cmp
int
aaa
into
bnd
clc
aas
aas
loop
jmp
into
ljmp
xor
xor
repz
ds
cld
shl
cmc
fcmovnb
stc
in
out
out
mov
fildl
into
out
shl
cmp
fildl
lret
out
fcmove
icebp
faddl
clc
xor
out
xor
in
leave
int3
fcmovne
stc
test
mov
out
ret
loopne
rorl
enter
shr
sar
sti
sbb
aam
ljmp
roll
aaa
aad
lret
out
aad
push
test
aam
fdiv
jmp
fucomip
jmp
les
out
in
enter
xor
rcr
int3
fsubr
adc
std
rcl
cld
cli
xchg
cli
in
out
iret
hlt
ret
into
cmp
jmp
repz
flds
xchg
jecxz
enter
jmp
aad
lds
lret
into
ds
sar
cmp
rcl
mov
xchg
mov
out
int
xor
int
add
out
loope
les
call
addl
int
in
cmp
fdivr
ds
fcomp
fdiv
flds
cld
xchg
ljmp
rcl
in
cmp
int
rcl
and
out
rcr
xchg
inc
ljmp
out
in
xor
hlt
call
cmpl
clc
shl
aad
xchg
aas
icebp
roll
lret
hlt
in
aam
jmp
loope
out
cmc
shr
incl
in
jecxz
xchg
cs
jecxz
in
sti
jmp
hlt
fmul
loop
in
ret
sbb
and
out
rcl
out
ror
cmp
fstpt
stc
rcr
stc
aas
faddp
jmp
xchg
lret
into
iret
fst
clc
lret
sbb
aad
mov
fimuls
lret
int3
jecxz
jmp
cmp
aaa
in
in
xor
ret
xchg
test
popl
mov
in
loop
fsubr
rcl
cmp
cmc
in
shl
out
ret
loop
lret
std
into
enter
jecxz
sub
int3
hlt
stc
ljmp
rcr
fcom
add
int3
orl
enter
repz
std
shl
aas
test
lret
jmp
jecxz
shr
shr
jmp
push
out
lret
add
idiv
out
cld
in
xchg
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
jmp
int3
rol
xlat
fstp
fst
mov
js
int3
pop
into
jg
scas
add
repnz
xchg
repz
ret
ret
cmp
das
fucom
fucomi
fcmovnbe
clc
out
icebp
xlat
aas
loope
cmc
leave
in
mov
imul
xor
lret
rcr
int3
cmp
jecxz
sti
call
addl
iret
repnz
jmp
lock
xor
test
lret
popl
test
out
lret
fdivr
icebp
lock
icebp
in
xchg
cld
fprem
in
loope
or
loopne
aam
lock
lret
rcl
repnz
cmpb
fcomip
cmc
icebp
aad
fldl
mov
jmp
neg
sar
lret
leave
cli
lock
test
in
stc
fcos
mov
loope
out
loopne
out
xchg
hlt
sar
in
cmp
xor
jmp
loop
clc
test
repz
hlt
orl
std
xchg
hlt
mov
cmp
out
aad
jmp
out
fdiv
int
fcom
clc
or
movl
jecxz
in
in
out
rcl
sar
rcr
stc
loope
ret
xchg
lds
mov
nop
pushl
repz
xlat
fmul
out
repnz
lock
imul
xlat
ds
clc
fildl
mov
xchg
xchg
adc
cmc
loop
jmp
cmp
aas
stc
divl
ret
repz
mov
fiaddl
aad
lock
and
int3
cmp
test
fsubp
cli
test
fimull
out
loop
call
jmp
fucomip
out
enter
fiaddl
lret
xchg
loop
sarl
aad
out
aas
iret
in
ljmp
mul
in
decl
xchg
into
mov
cs
cli
ljmp
rol
cld
fucomi
not
mov
cld
fdiv
xchg
loopne
loop
leave
lret
aas
iret
sar
fildl
addl
icebp
jmp
leave
cld
std
xlat
iret
xlat
loope
fcomp
fcmovb
cld
lret
in
fcomp
jmp
mov
in
xchg
hlt
in
ret
fdivr
cmp
fdivrl
test
stc
ffreep
xchg
aam
mov
in
jmp
int
ljmp
icebp
in
jmp
loopne
cld
jecxz
rcl
std
ret
mov
add
int
adc
xor
iret
enter
in
cmp
aad
aam
fcmovnbe
ret
fadd
std
loop
fmulp
addb
shl
shrl
cli
ss
fdiv
sar
fld
xchg
fsubr
jmp
xchg
out
aaa
into
xor
call
test
iret
out
rcr
loope
dec
sbb
or
xchg
int3
jmp
shlb
call
xchg
test
int
nop
out
lret
icebp
xlat
sar
cld
enter
loope
sar
ret
div
ret
leave
into
out
sti
mov
jecxz
xchg
rol
loope
not
cld
rcr
repnz
out
cmp
fucom
xlat
fucomip
mov
int
out
in
loop
ss
sarb
xor
fucomip
cmp
fadds
ret
out
iret
jmp
fdiv
mov
repz
fcmovne
cmc
cld
repnz
loopne
int3
std
aas
shr
adc
cmc
loopne
nop
out
loopne
adcb
out
idiv
fcmovu
leave
repz
shll
cmp
fdivr
call
in
std
out
aad
fdivr
xor
in
lock
repnz
ds
fst
fdiv
loopne
ret
xchg
lock
test
xor
jmp
clc
aas
into
sar
ret
fdivrs
fsub
rorb
clc
in
lock
lock
out
lock
in
cmp
aam
jmp
repz
xchg
xchg
fimuls
fdecstp
into
iret
fdivrl
iret
cmp
lock
fptan
call
fisttpl
loope
into
int
rcr
fmul
iret
aad
in
fidivrl
dec
ljmp
repz
loope
jmp
int
stc
cmp
icebp
stc
hlt
int
push
stc
shl
jmp
out
lret
test
fisubrl
ljmp
xchg
loop
dec
in
mov
xchg
ljmp
rcl
ljmp
fadd
rcr
fcmovb
clc
mov
in
mov
xchg
iret
jmp
cmp
shr
cmp
fldz
in
out
vpsubsw
fmuls
in
in
fdiv
aad
shl
sti
neg
call
jmp
rol
rcr
fld
pop
into
shll
mov
jg
scas
add
ret
test
aam
jecxz
jmp
in
in
iret
in
fsubp
aam
cmc
lret
cli
fcomp
sar
iret
into
sar
cmc
jecxz
test
test
jecxz
xchg
ret
hlt
out
cmp
enter
cmp
cmp
out
jmp
sub
xchg
test
iret
icebp
cli
cli
cmc
cmp
sub
out
out
clc
cmc
jmp
aam
cli
iret
out
filds
in
iret
out
cmp
not
ss
incl
clc
call
xchg
out
cs
cli
xor
leave
cmp
fucom
icebp
stc
hlt
xchg
clc
decl
call
mov
hlt
call
enter
into
rcr
xchg
stc
std
in
jecxz
adcb
cs
cmc
jmp
in
jmp
cmc
test
hlt
fucomip
jmp
in
loop
repz
lock
in
xor
sti
cmp
in
loop
loopne
in
lret
and
out
fcom
cmp
enter
fdivr
iret
test
rcl
call
popl
aam
shl
out
xor
repz
leave
repz
test
loope
out
repz
loop
rolb
shr
ret
ss
xor
std
rcr
lret
cmp
adc
fneni(8087
enter
call
lret
ror
jmp
enter
sarl
repz
repz
xlat
sti
fsubrp
int
lret
cld
hlt
mov
out
out
xor
ss
jmp
cmp
test
xchg
loopne
mov
fucom
mov
aad
aaa
out
aaa
ljmp
loop
mul
repz
mul
sti
loopne
push
call
shll
out
not
jmp
mul
cmpl
cli
mov
enter
lds
leave
clc
repz
enter
aas
xor
cld
fildl
lret
xchg
imul
xor
int
xor
sarl
sar
cmc
in
iret
cld
out
sti
fsubp
or
lock
fdivp
mov
rcr
ss
cmpb
cld
out
cld
lret
shl
cmp
clc
lock
in
cmp
fdiv
in
rcr
cmc
icebp
xchg
sub
clc
out
icebp
mov
mul
clc
into
enter
jmp
stc
in
icebp
idivl
ret
enter
in
stc
std
fildl
aas
sub
out
int
cmp
cmp
repz
rcl
aad
jmp
fdivrp
or
repz
into
mov
ret
in
fnstsw
ret
ret
loope
repz
sub
cli
fucomip
out
xor
enter
div
neg
loopne
cmp
fiadds
sti
out
cli
xchg
out
shl
adc
shr
in
out
cmp
repnz
cmc
loope
aas
cld
mov
and
out
xchg
ret
shl
cli
aaa
iret
jmp
cmp
mul
les
std
test
mov
int3
in
shl
hlt
shr
loopne
out
int
fcmovnu
lock
clc
aad
ret
out
repz
xchg
test
mov
call
int3
rcl
ss
call
in
cmpl
ret
out
rolb
fld1
fimull
xor
cmc
stc
lds
pushl
mul
ds
ljmp
into
std
loopne
xor
test
aam
int3
cmp
out
and
icebp
jecxz
int
xor
idiv
cmp
xlat
div
icebp
call
lret
in
mov
fisttpll
rol
xor
cmp
loopne
icebp
xorb
repnz
aam
in
xchg
mul
iret
into
cli
jmp
icebp
test
jmp
cmp
cmp
roll
mov
les
loop
rcl
call
iret
idiv
repz
into
shl
clc
div
loop
cld
xchg
dec
fmull
aam
repnz
xchg
xlat
adc
ljmp
sti
fstl
in
cmp
int3
call
cmp
jecxz
ds
shl
mov
fsubr
mov
or
int
clc
stc
xor
cmp
iret
clc
in
ds
fldl
testl
cmp
enter
ljmp
in
out
cmp
repz
fld1
jecxz
xchg
hlt
xor
jmp
aas
sarl
fcmovnbe
fcmovb
loope
add
fucomip
sub
cmp
jg
scas
add
jmp
cmp
repnz
fdivr
cli
sti
cli
out
xlat
loop
call
cld
enter
jecxz
jecxz
int
lock
cli
fld
xor
xchg
loopne
clc
jmp
out
fists
test
fld
cmc
neg
das
fsubr
lret
cmp
fcmovbe
cld
cmc
mov
out
in
lret
xchg
loop
in
xor
clc
stc
fdivrp
cld
mov
ret
sti
out
orl
rcl
cli
aad
sar
std
loop
int
ret
mul
cld
mov
into
call
out
neg
sar
aas
fdivp
and
loopne
xlat
loopne
out
adcb
in
cmc
sub
aad
fcom
rol
clc
cli
xchg
fimuls
sti
out
fistl
xor
xlat
ljmp
fiadds
cli
repz
mov
nop
loope
mov
loop
ljmp
idivb
cmp
push
aad
testb
push
fprem
iret
out
in
shr
lret
sti
fstpt
fcmovnu
fadd
repnz
ds
lock
incb
xchg
loope
test
div
leave
cmp
aaa
not
fcmove
xlat
div
repnz
ljmp
in
lret
leave
xor
aam
out
ror
loope
enter
xor
std
out
hlt
std
fsubr
int3
cmp
into
in
mov
xlat
cld
ljmp
ss
ss
leave
rcr
fdivr
cmc
rol
fmull
ljmp
loope
xlat
jecxz
sti
out
out
call
icebp
ds
rol
fucomi
loop
mov
mov
fcmove
in
in
ljmp
cmp
aaa
cmpl
mov
xlat
fucomi
mov
fdivp
repz
xlat
jmp
xlat
shr
jmp
not
sti
fadd
rol
loop
loopne
fsubrp
fmulp
decb
jecxz
clc
xor
in
stc
cmp
int
cmc
les
out
mov
loop
in
int
lret
ljmp
cld
ds
aad
mov
out
call
ret
int
jmp
into
xor
lret
test
test
roll
int
out
in
call
out
xor
sar
cmp
out
aas
ror
addl
loop
sti
mov
fcomip
loop
in
out
repz
sub
xlat
cmp
out
out
fcomi
xchg
or
ret
fcmovnu
cmp
in
sarl
xchg
in
fucomip
rol
shll
lock
in
int
repz
loopne
xor
cmc
out
fucom
call
icebp
rcll
shll
aaa
fnstenv
clc
into
roll
in
lret
nop
in
mov
shlb
vpmaddwd
ljmp
incl
in
jmp
loopne
jmp
sti
lret
cmc
lock
cmp
int
cmp
movb
int
jmp
fdivs
cld
cmp
hlt
idiv
not
clc
in
fisttpl
mov
jmp
ljmp
fdivr
aad
ljmp
add
les
loop
loop
aam
jecxz
iret
out
clc
sar
int3
ljmp
hlt
fst
xchg
or
sti
cld
incl
idivl
cmp
sbb
cmp
jmp
fsub
out
fld
loop
loopne
out
ljmp
std
hlt
repz
int
out
std
sti
div
dec
in
call
fucomp
shl
clc
das
in
cmp
fucomp
sti
fcmovbe
rol
cmp
call
test
int3
adcb
loop
xlat
xor
jmp
shl
sti
out
enter
addb
repnz
div
imul
xor
fucomp
shlb
fucomip
lret
out
test
xlat
frndint
aam
fildl
mov
mov
into
out
lds
jmp
fnstsw
sarb
jecxz
fsub
rolb
mov
fildl
jecxz
mov
int3
cmp
xor
shl
fidivrs
loopne
fcmovnb
testl
int
in
loopne
jecxz
xor
lret
fdivrp
call
in
roll
imul
jmp
into
aas
ror
rcl
sarl
xchg
lods
mov
insb
fdivrl
scas
add
out
out
faddp
jmp
xchg
jecxz
aam
shlb
int3
stc
cmp
enter
fdiv
cmc
lock
flds
out
loope
in
test
in
ret
jmp
cmp
int
addl
leave
orb
mov
jecxz
xlat
jmp
stc
out
int
loopne
repz
lock
sar
loopne
or
repnz
xor
int3
jmp
out
test
int3
lret
fsubp
fdivrp
fucom
loopne
fsubp
loopne
cmc
ljmp
jmp
loop
out
aas
shl
fsubrp
out
std
int
into
xor
in
clc
iret
xor
jmp
fucom
fcom
out
shl
cmc
mov
leave
mov
lret
xchg
clc
shll
stc
int
ror
cmp
cmp
loop
out
mov
xchg
xchg
lret
xchg
out
cmc
cmp
cli
divl
fcmovb
aas
ror
sti
cmp
rcl
orb
shr
fstl
cmp
not
enter
jecxz
in
fdivr
ret
leave
out
fst
rcl
rorl
lock
lret
fdivrl
fdivrp
mov
fucom
xchg
out
in
fimuls
clc
shl
jmp
lret
cmp
aaa
fcmovnu
orl
iret
loopne
out
out
rol
int3
repnz
xor
fsubp
flds
aam
fmul
leave
sbb
mov
sti
cli
repz
int3
cli
and
cli
xlat
std
hlt
leave
and
in
loop
hlt
fldl
idiv
aam
fdivrl
fcmovbe
loop
loopne
loopne
out
neg
out
adc
xlat
fcmovnu
sar
shll
cmp
shl
stc
rol
std
ljmp
into
out
xchg
in
out
lret
repz
lock
test
cmp
cmp
ret
mov
loope
out
xlat
in
repz
icebp
cmp
ret
rcr
xchg
sbb
call
into
xchg
iret
xor
in
xor
cld
int3
cmp
cmp
shl
cld
fadd
fisttpl
fcomp
mov
loop
ljmp
cmp
shl
in
cmpb
sarb
ret
cli
ljmp
shl
imul
enter
cmp
icebp
repnz
leave
sti
fadds
enter
fildl
mov
iret
ljmp
in
call
in
xchg
cld
mov
testl
in
ror
xor
aad
stc
fcomp
cmc
cld
into
out
test
sub
fsubrp
hlt
cmc
call
fcmovu
in
cld
in
icebp
aas
loope
repz
loope
mov
repnz
jecxz
leave
icebp
hlt
repnz
aaa
jmp
loope
cmp
lea
into
incl
vpaddusw
aad
out
aam
hlt
cmp
shr
loope
call
loope
aam
out
aaa
iret
iret
in
cmp
cmp
test
call
adc
cli
in
mov
shl
xor
dec
ss
flds
cmc
rolb
test
iret
lea
ret
fdiv
repnz
incl
rcl
out
mov
xchg
cmp
mov
xchg
jecxz
lret
divb
aas
flds
cmp
out
adc
loopne
out
faddl
in
cmp
xor
into
xlat
fdivr
cmp
lret
loope
loope
ret
fcmovb
fscale
orl
ret
cmp
lock
ds
stc
loop
addb
shr
xor
ret
cmp
sti
cli
repz
in
cmp
mov
xlat
fxch
in
icebp
ljmp
xlat
iret
out
fdivrp
out
int
incl
cmc
mov
aad
iret
mov
xchg
aad
int
lret
lock
cmp
xor
cli
ret
decb
fsubr
out
mov
int
in
int
repnz
cmpb
test
hlt
std
hlt
hlt
test
rorb
out
ret
int3
in
cli
xlat
or
rol
hlt
sti
rolb
aad
sti
int
leave
mov
xchg
jmp
out
out
lock
idivl
rcl
ret
cmp
out
iret
xchg
or
leave
add
add
rcl
aad
aad
shll
hlt
das
negb
add
rcl
repnz
jecxz
cmp
fcomi
lret
fptan
in
cmc
add
test
cld
incb
in
clc
fcmovbe
xlat
sti
cmp
cmp
stc
lock
mov
mov
sar
in
in
imul
loope
into
std
cld
fcmovu
rcl
loop
cmp
loopne
addl
mov
into
in
bnd
repnz
jmp
into
aad
xor
rcl
fdivrl
enter
test
call
out
repz
iret
ret
xor
loope
cmp
rol
frndint
rolb
jmp
fucomp
jmp
leave
cmp
call
aad
fdivr
aad
jecxz
hlt
ret
mov
cmp
incb
lock
loop
out
in
jmp
dec
int
ds
ds
testb
ljmp
loopne
int
in
shl
cmc
hlt
test
loopne
fmul
fmulp
xchg
xchg
mov
lret
mov
out
out
rcr
stc
icebp
xlat
std
icebp
repnz
sbb
loope
cli
mov
icebp
into
ss
xor
jmp
cli
repz
hlt
shl
out
aas
fsub
fucom
decl
in
out
xor
fcmovnu
out
sti
cld
sub
and
incb
xlat
cmc
stc
fcmove
std
ss
in
loop
clc
hlt
cmp
not
cli
sti
fimuls
icebp
lock
xor
cmp
int3
mul
stc
iret
in
out
or
mov
ficoml
ljmp
int
cmc
sti
repnz
loop
sar
aam
test
cli
clc
ret
repnz
into
shl
ss
shl
call
ds
adc
hlt
cmp
jmp
into
mov
iret
rcl
int3
cmc
fsubr
idivl
cmp
shl
add
sti
mov
xchg
rolb
icebp
aaa
sti
clc
cmp
test
lret
testb
shl
mov
test
loopne
iret
icebp
in
in
jmp
xor
les
in
out
rolb
rol
leave
cmp
vpextrw
int3
fdivrp
shl
hlt
aam
jmp
aam
in
leave
std
rcr
hlt
loopne
xlat
repnz
mov
loopne
vlddqu
shl
aaa
jmp
out
fmul
sti
ror
loopne
cmp
rcl
xchg
ret
neg
lret
in
into
icebp
out
int
int
jmp
sti
fdiv
repnz
cmp
adc
testb
test
jmp
aaa
sarb
ss
repnz
loope
fxtract
test
sbb
in
loop
icebp
ljmp
shl
out
or
cmp
out
enter
out
int3
out
mov
in
idivb
sti
xor
cli
aad
cmc
out
loope
test
shr
fmul
fucomi
in
cld
jmp
repz
ljmp
leave
in
fadd
rolb
mov
in
loopne
loopne
leave
shl
rcl
int3
aad
iret
out
leave
cld
cmp
shl
xor
cmp
aam
dec
sti
mov
mov
out
les
aaa
das
lock
fnstenv
out
cli
std
div
shl
rcl
sar
leave
mov
cld
sti
stc
int3
out
ficoms
leave
in
into
aaa
test
lret
stc
in
fstpt
lock
aad
loopne
fadd
loop
lret
test
in
xbegin
stc
in
iret
in
shl
xlat
shl
out
aam
cld
fld1
ljmp
lret
hlt
ret
lret
in
cmp
fdivrs
add
repz
mov
out
out
or
stc
xor
xor
out
loopne
aas
fdivp
aam
jmp
test
std
icebp
repnz
repnz
lock
fdiv
fdivrl
out
adc
neg
mul
movl
out
cmpl
jmp
in
xor
in
enter
cmp
aam
aad
hlt
clc
xlat
test
or
xchg
loopne
aaa
xor
aam
das
rcl
ljmp
sub
cmc
enter
testl
loop
lock
sarb
cli
inc
test
fsubrp
clc
xchg
xchg
xor
call
jmp
imul
xor
int3
idiv
stc
aam
addb
lock
test
mov
repnz
xor
cmp
repz
shl
not
sti
test
mov
ret
hlt
xor
std
int
incb
fdivrs
lock
je
xor
add
mov
imul
add
jmp
int3
rol
aad
aad
fpatan
int3
and
fstps
ror
out
jle
add
shl
test
in
leave
fmulp
xchg
lret
xchg
in
ljmp
fidivrs
int
cmp
ret
call
in
sti
fisttpl
icebp
cmc
out
shll
in
rcl
rcl
clc
ds
xlat
loope
in
not
fadd
lock
lret
xor
in
lock
aad
shl
not
test
fldl
ljmp
out
rol
clc
add
repz
fdivrl
xchg
xchg
lock
out
fnstcw
loopne
repnz
jecxz
addb
aas
in
mov
or
ret
in
jmp
ds
fucomi
fcmovu
add
fcmovnb
lret
lret
mov
shl
hlt
lret
icebp
cmp
cmp
cli
into
out
jmp
enter
call
aam
int3
out
xor
icebp
cmp
shl
out
and
out
cld
vpsubq
in
mov
test
call
xlat
into
lret
cli
test
test
fadd
mov
and
lock
into
int3
xor
in
aam
icebp
cmp
into
incl
sbb
call
mov
leave
in
lret
fisttps
div
in
into
sbb
shr
lock
out
cmp
ljmp
shl
lock
call
in
lock
fcomp
xchg
loopne
in
jecxz
enter
loop
rorl
ss
ss
cli
ljmp
enter
enter
xchg
shl
xchg
loop
repnz
shl
fstp
sar
faddl
and
int3
out
mov
lea
out
xor
repnz
ret
aas
in
cmp
aad
cmp
shl
jmp
in
loope
xor
ret
rcl
aas
cmp
xor
into
out
fnstsw
mov
mov
jecxz
into
out
out
out
jecxz
aaa
cli
ror
xlat
dec
int3
shl
adc
xlat
cld
repz
hlt
repz
clc
jecxz
std
mov
mov
xor
cmp
ds
cmp
addl
test
fisttpll
icebp
aaa
aad
cmp
ljmp
rcr
adc
rcl
call
out
xrelease
sub
in
into
cli
out
jmp
and
cmc
cmp
cld
mov
int3
xchg
clc
aaa
lret
fchs
std
fdivrp
loope
cmc
enter
cmp
mov
loopne
in
xor
jecxz
cmp
aad
cmp
aam
iret
lock
rcl
mov
into
in
test
into
int
xor
into
ljmp
sti
shr
repnz
rorl
sti
out
in
decl
cmp
cli
lret
out
sbb
rol
cmp
jecxz
lret
orl
call
repz
aas
lret
in
ret
lock
fmuls
sar
in
shr
jmp
int3
stc
aaa
ljmp
loop
sbb
sub
flds
std
icebp
rcr
nop
ror
shll
rolb
out
addb
int3
lret
fsubrp
into
loope
int3
jmp
xor
xor
sarb
cmp
addb
hlt
std
inc
into
mov
in
xor
cmp
loope
iret
into
clc
cmp
ljmp
xchg
mov
repnz
ss
int
cmp
int
fcompp
fstp
fadd
ljmp
sub
ror
out
roll
mul
fdivrp
loopne
fimuls
loop
loope
out
repz
iret
cmp
cmc
cld
fsubrp
cmc
jecxz
stc
rol
test
fxam
ljmp
lret
mov
cs
jmp
neg
xlat
cmp
incl
xchg
rcll
repnz
cmp
repnz
cmp
sarl
cmc
test
loope
test
int
lock
mov
lock
dec
fucomp
cmc
sti
in
aam
in
fucomp
call
loopne
mov
iret
jmp
cld
sar
in
out
loop
clc
aad
out
sarb
cli
vshufps
lock
iret
out
iret
div
ret
std
jmp
int
in
mov
in
mov
mov
pop
leave
ret
push
mov
push
push
mov
mov
mov
jmp
into
rol
fcomp
fcomps
dec
mov
jg
jg
or
jle
cs
cmp
clc
leave
cmp
idivb
repz
cmp
and
out
mov
fbstp
in
lret
sti
stc
imul
lret
cmp
faddl
leave
clc
jmp
int3
shl
loop
out
mov
fxch
cmp
stc
out
icebp
mov
rcl
loopne
test
fsubrp
xchg
cs
leave
ror
xlat
into
fadds
int
repnz
lea
nop
out
in
repz
out
in
cmp
fyl2x
jecxz
xlat
test
xchg
into
cmp
out
iret
out
div
lret
sar
out
test
rol
fld
testb
xchg
pop
hlt
jecxz
xor
filds
addb
xchg
mov
call
in
jmp
call
fdivl
call
out
loopne
out
into
xchg
out
xor
call
stc
int3
lret
inc
test
neg
mov
mov
loopne
loop
lret
or
enter
cmc
stc
iret
repz
hlt
in
adcl
lock
clc
iret
aas
sti
loopne
and
into
ret
fldl
cli
clc
mov
xchg
lea
fprem1
fst
std
fsubr
lret
fldl
cmc
jmp
lock
loop
loope
out
cmp
lock
cmp
int3
cmp
fdivr
out
movb
lret
not
leave
fcomi
sarb
fsubr
lret
loopne
fstp
cld
loope
mov
hlt
out
mov
in
xchg
mov
sub
int3
call
aaa
out
loop
out
out
sar
repz
fcmovnu
mov
int
int
aam
xor
stc
xor
aam
lock
not
leave
lret
cmc
jmp
fsubp
lret
icebp
mov
cs
into
xor
lret
sbb
adc
int3
sti
std
int3
lret
sti
int3
jmp
out
stc
int
lret
xor
clc
cmp
sti
aad
mov
jmp
mov
out
xchg
fisttps
lret
sti
in
test
fnsave
jmp
stc
cmp
loopne
mov
not
stc
jmp
fistl
xor
fsubr
cmp
ljmp
loopne
fadd
ret
loop
ljmp
out
iret
aam
cld
cmc
xlat
cmp
addb
mov
sbb
aad
cmp
cmc
sarb
sti
cmp
rcr
clc
hlt
vpmulhw
leave
jmp
ret
int3
das
cmc
xor
fst
hlt
xor
mov
int3
repnz
in
aad
ss
fnstenv
fdivrs
not
test
jmp
stc
lea
loope
lret
int
xor
fcmovnu
rcl
shl
loope
and
mov
xchg
test
shr
shr
into
fcomi
in
cmp
repnz
fsubr
loopne
fld1
repz
les
cmp
xor
into
repnz
cmp
fcmovu
incb
ret
fsubr
in
enter
orl
cld
cli
cmp
cmp
add
stc
test
cmc
in
filds
loope
aam
cs
in
rcr
fiadds
test
jmp
xbegin
rcl
aam
cmp
repz
aaa
out
aaa
clc
rcl
out
rcr
ret
roll
in
repnz
std
xchg
nop
into
out
cld
clc
cmc
cli
stc
in
ret
jecxz
fadd
clc
mov
ljmp
clc
int
xor
aaa
icebp
ljmp
rcl
fdiv
ret
leave
out
mov
xchg
shr
icebp
in
out
cmc
fistpll
in
loopne
mov
movl
movl
jmp
rcl
rcr
fstp
aam
cmp
lods
dec
add
mov
or
jle
ds
in
cli
leave
cmp
xchg
jecxz
loope
int
loop
lret
xor
jmp
jmp
fnstcw
icebp
ds
sti
lock
aam
jecxz
ret
xchg
test
aas
out
lret
sub
hlt
in
call
sti
test
sbb
loop
leave
in
or
fucom
in
fucomip
jmp
call
in
cmp
addb
in
call
out
jmp
mov
icebp
ss
out
loope
shl
in
into
shl
loopne
cmc
jmp
sar
shl
in
cmp
jecxz
out
fsubp
aaa
sti
into
cli
sbb
mov
jmp
lock
nop
test
test
jmp
icebp
cli
out
jmp
sti
stc
lock
clc
incl
jmp
in
xchg
xor
div
hlt
clc
in
fcmove
fsubrp
fldl
rcr
enter
ficoml
lret
in
in
in
fld1
xor
fsub
jecxz
shl
lock
adc
xchg
mov
cs
in
leave
xor
in
into
call
rol
fcomip
hlt
hlt
cld
mov
mov
aad
fxch
xor
cmp
sar
out
inc
cld
out
jecxz
cli
fucomi
jecxz
xchg
in
das
rol
cmp
fdivp
out
ffreep
shl
clc
loopne
cli
out
orl
ljmp
fsubp
ljmp
out
out
aam
int3
in
test
repnz
out
aad
ret
jecxz
jmp
hlt
incb
enter
in
in
loope
xchg
jmp
lret
repnz
shl
ss
lret
in
lock
std
jecxz
cmp
cmp
mov
or
aaa
ror
sarl
lock
call
clc
aad
hlt
out
iret
rcll
call
loopne
clc
lret
hlt
cli
out
loope
sar
leave
jmp
icebp
xchg
into
nop
xlat
jecxz
out
ret
xor
cmp
ds
std
fdivr
rcl
fscale
shr
adcl
cmp
xlat
cmp
cmp
into
ror
stc
jmp
fmul
xlat
fucomp
test
mov
enter
in
sarl
enter
test
rcr
repz
clc
out
jmp
out
xchg
into
enter
fyl2x
xlat
aam
int
clc
into
lock
incl
fsubp
out
notb
ret
lret
aam
hlt
dec
cmp
clc
fdivr
fsubrp
addl
xchg
repnz
cmc
hlt
lock
cmp
addl
mov
icebp
das
cmc
fcmovbe
leave
leave
cmp
xchg
out
lret
out
enter
fucom
in
xor
shr
aaa
int3
fcmovu
fmul
sarl
fadds
enter
stc
int
jecxz
ror
loopne
ret
call
in
std
xlat
cmp
ds
in
ret
mov
fldz
int
out
loope
loopne
int
in
xor
xlat
fcomi
lret
shl
out
rcl
repz
int3
in
jmp
mov
repnz
not
fdiv
rcl
sub
out
fcmovnb
out
loope
out
out
roll
xlat
out
ds
cmp
in
ret
push
test
ret
fmull
xchg
out
in
iret
ljmp
ror
in
icebp
aas
xlat
cli
loop
mov
lret
fucom
sbb
out
cmc
hlt
iret
ret
icebp
iret
aam
lret
cmp
fdivrp
lret
test
sbb
orb
sar
xor
aaa
shr
incb
enter
out
cli
jmp
fsubrp
shr
in
jmp
cmp
out
aas
cmp
ret
fucomi
and
add
loope
add
jne
subl
mov
add
mov
xorl
xor
add
jmp
sarl
ret
ffree
in
jns
pusha
daa
bound
jle
add
std
out
or
mov
xchg
test
xor
cmc
fstp
cld
jecxz
aas
rcl
cld
out
or
lret
into
repnz
in
ret
lret
fdivr
xor
sti
repnz
ret
ds
fcomip
sar
xchg
test
leave
mov
rcll
out
std
icebp
std
call
ret
iret
fdivr
ffreep
std
mov
enter
mov
xchg
int3
out
lret
xor
frndint
fistpll
sti
rol
roll
lret
fst
sti
std
mov
in
iret
int3
into
div
ss
aas
lret
stc
fdivp
incb
jmp
call
ljmp
hlt
in
into
in
cmp
aad
cmp
loopne
cld
cmp
mov
sar
fcmovbe
ficoms
in
aam
fidivrl
cmp
sbb
jecxz
out
in
loopne
sti
mov
fstpt
call
cld
rolb
loopne
fisttps
jecxz
lock
into
fadd
cmc
xlat
aad
sarl
cmp
xor
fsin
loop
clc
xor
int3
mov
out
out
jmp
int
in
in
xor
aas
sarl
sti
xlat
and
in
loopne
mov
iret
or
xchg
lret
xlat
repnz
hlt
cmp
cmp
out
cmpl
icebp
ret
or
mov
sarb
lock
sti
cmc
jmp
xor
test
lock
test
in
xchg
std
cmc
fidivs
icebp
ror
out
int3
clc
in
fbstp
cmp
clc
cld
loop
testl
loope
call
jmp
jecxz
cmp
hlt
fsubr
decb
mov
xchg
jmp
aam
cmp
call
shl
neg
repnz
mov
jmp
shl
shr
cmp
rcr
cmp
aas
addl
out
fiadds
in
xor
cli
aad
sarl
into
clc
fadds
icebp
stc
mov
fisttpll
stc
enter
out
xor
ljmp
into
aas
aad
test
clc
fmul
xlat
sub
xchg
fcmovnbe
xlat
lock
in
lret
cmc
test
sti
test
in
mov
lock
iret
out
iret
mov
xor
cmc
xor
in
out
lret
fdivp
aad
dec
ds
lock
push
std
clc
ret
mov
lret
ljmp
call
ret
std
out
std
leave
fcomp
mov
lret
out
mov
not
lock
ds
aad
push
hlt
jecxz
incl
out
incb
int3
sub
repnz
hlt
lock
mov
testl
in
out
repnz
repnz
fyl2x
shl
repz
ljmp
sub
loope
shr
in
fidivrl
into
adc
loope
rolb
int
mov
in
icebp
mov
iret
loop
cmc
fld
or
iret
stc
cld
loop
fisttps
fdivp
repz
repnz
fcomp
ss
into
aam
cld
in
out
cmp
fdiv
aad
loop
int
fiaddl
icebp
out
xor
ljmp
inc
loopne
loope
repnz
sbb
jmp
lret
out
cmc
int
loop
aam
in
mul
call
cld
loope
sti
decl
xlat
aad
cmp
aam
call
xlat
stc
ret
rorb
fisttpl
jmp
aam
int
std
in
jmp
fcomp
call
stc
fucomp
out
cmp
int3
lock
xor
std
loopne
test
roll
loop
in
in
mov
cld
hlt
iret
addb
add
andl
add
adc
jmp
rcl
aad
rcrl
mov
jle
add
stc
in
cmp
cmp
rcl
ret
les
lret
cld
cld
xchg
mov
out
sti
xor
lock
idiv
enter
mov
fcmovnb
nop
loop
int3
lret
stc
ss
imul
test
add
clc
xchg
fucom
jmp
test
loopne
mov
loope
subl
out
not
ror
out
xchg
stc
fsubr
fdiv
test
icebp
in
xchg
in
icebp
aam
les
lret
aas
loope
xchg
mov
in
xchg
fucom
decl
iret
into
cmp
leave
jmp
fdivr
lock
or
lock
loope
in
out
add
icebp
int
cmp
idivl
fadd
test
cli
loopne
mov
cmc
in
out
fsub
or
rorl
fdivr
fdiv
out
out
fcomi
xlat
in
fdivp
xchg
in
test
loope
ljmp
leave
cmp
jmp
out
out
call
fisttpll
idiv
in
rclb
call
call
aas
cli
xor
sti
add
mov
cld
orb
xor
fxtract
hlt
jecxz
incb
or
out
filds
lret
cmp
jmp
out
enter
out
mov
mov
aam
xor
xor
cld
aad
cli
aam
ret
sbb
cli
jmp
int
fmulp
ljmp
xlat
in
in
call
lock
stc
fsubrp
out
ds
sti
fdivr
test
lret
jmp
fcmovnu
rcl
cmc
aaa
std
aas
lock
cmp
out
ror
mov
loop
ljmp
repnz
test
fsubp
mov
cmc
in
mov
aam
lret
ror
cmc
cli
fadd
fcomip
aad
fsub
stc
cmp
aad
std
mov
in
loope
in
stc
clc
icebp
xlat
jmp
cmp
aam
loopne
test
addb
loope
in
in
xchg
aam
loop
fidivrl
ljmp
test
loop
test
loopne
fcmovb
sti
bnd
ljmp
out
cli
sti
lret
lret
rol
fdivrs
fsqrt
mov
icebp
iret
ret
aaa
into
out
das
dec
stc
repnz
test
adc
mov
jecxz
ret
xor
leave
cld
rolb
iret
shl
xlat
imul
enter
loopne
fucom
in
cmc
divl
leave
xor
fnstsw
stc
rol
lret
cli
fcmovnb
repz
lret
jecxz
std
out
in
and
xchg
in
fnstenv
into
cmp
cmp
sbb
adc
icebp
adc
out
cmp
imul
repnz
shll
out
xlat
and
cli
in
jecxz
enter
in
loop
in
clc
icebp
ljmp
out
out
fstp
cmpl
out
mov
addb
lret
jecxz
in
jmp
cld
sti
cmp
jmp
ljmp
lret
fmul
int3
fdivrs
out
shl
ret
mov
in
or
orb
imulb
cmc
divl
ds
in
cmp
out
rol
ljmp
icebp
loope
or
cmp
xor
std
cmc
cmp
fdivrp
xlat
cmc
std
in
test
test
rcl
test
shl
jmp
div
std
int
out
fadd
loopne
xlat
mov
mov
roll
ror
cs
out
fcomi
sarl
sar
ljmp
int
roll
clc
shll
enter
mov
movzwl
sbbl
not
movl
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
subl
jmp
leave
xlat
rcr
mov
cwtl
push
mov
sti
jg
roll
jle
lock
fdivr
out
repnz
out
xchg
in
jmp
cmp
cmp
in
mov
out
mov
rolb
leave
icebp
cmc
leave
lret
or
cld
repz
cli
in
lea
jmp
cmp
cld
fst
hlt
fnstenv
roll
int
mov
mov
lock
lock
in
iret
ljmp
stc
xchg
shl
sub
sti
jecxz
out
jmp
xor
in
jmp
ljmp
fneni(8087
fimull
int
test
idiv
clc
out
int3
les
repz
shr
rcl
out
sti
cmc
sti
add
decb
repnz
in
xchg
out
jmp
into
xor
xor
aas
aad
iret
test
fucomp
fisttpl
int
xchg
rcl
hlt
cld
into
fldlg2
shl
clc
rolb
ret
jecxz
out
fucomp
in
xchg
and
fadd
int
std
clc
lret
rcr
cmp
lds
jecxz
mov
fadd
out
filds
ret
lock
fsubr
out
in
rcl
aad
stc
rcr
add
fmuls
lret
loope
out
out
out
fmul
enter
fildl
xchg
stc
addl
call
fsubrs
in
repz
fsincos
xlat
std
xchg
stc
vpmaxub
int
leave
fisttpll
xchg
repnz
enter
faddp
fdivr
aad
vpsubw
in
clc
incl
mov
icebp
sub
in
fcmovnbe
shl
out
sarl
stc
loopne
jecxz
cli
mov
mov
mov
int3
xchg
test
jmp
iret
iret
fcmove
stc
addb
loopne
mov
jmp
xchg
in
out
in
xor
idiv
idiv
repnz
div
shl
mov
lret
cmpl
in
int
int
int3
enter
neg
out
sbb
aas
ret
les
stc
flds
int
xor
ss
jmp
jecxz
fimull
rcr
mov
xor
xor
cli
and
sub
mov
in
loop
out
aas
xlat
int
clc
aad
lock
std
in
roll
int3
out
hlt
aad
fptan
cmp
int3
int3
out
cmpb
cmp
sar
in
in
enter
aam
ljmp
xor
lock
lock
std
sti
lds
out
ret
out
ss
in
stc
fidivrl
rcr
loop
fcmovu
ret
stc
test
jecxz
leave
nop
repz
xlat
in
fidivrs
fnstcw
rcl
faddl
mov
mov
jecxz
cmc
repz
call
std
repz
iret
cmpl
cmc
repz
int3
sti
fxam
out
sub
into
int3
int3
ss
jmp
rol
cli
orb
call
iret
mov
xchg
xlat
iret
cli
cmc
clc
les
repz
jmp
ds
loope
fdivr
repz
loop
pop
out
int3
clc
cmp
cmp
fldpi
fucom
cmp
loopne
out
add
ljmp
out
into
ror
xor
jmp
jmp
ljmp
loop
incl
roll
out
ds
cmp
into
shl
cld
ret
mov
clc
or
out
jmp
ror
out
fidivrs
add
loop
add
xlat
testl
loopne
das
sub
cmp
shll
jecxz
loope
xchg
loope
out
lock
xor
aam
sar
neg
cli
cmp
icebp
addl
std
jmp
xchg
aam
xor
cmp
rcr
int3
cmp
cmp
cmp
incb
fninit
loop
call
clc
daa
test
test
add
sbb
jmp
mov
fstp
enter
imul
loopne
jg
roll
jle
xor
ss
test
cmp
rol
fucom
fdivrp
lret
out
iret
mov
fsubr
aaa
cmp
aam
cmc
cmp
aas
test
enter
in
enter
mov
in
iret
fdivr
aas
icebp
clc
in
aam
aam
mov
cld
lret
std
loop
int3
mov
xor
cmc
repz
xlat
fldl
lds
in
mov
call
xchg
int3
rol
clc
aaa
aaa
int
idiv
into
fnstsw
aas
out
out
call
ljmp
cmp
xor
int
repnz
cmp
xchg
ffree
stc
stc
fmul
lock
fstp
xchg
das
in
iret
cmp
out
ljmp
loopne
xlat
aam
repz
cld
lea
nop
enter
in
lret
icebp
call
ss
add
aam
cmc
mov
mov
out
into
shr
rol
loope
out
xor
stc
xlat
into
xlat
repnz
lock
loopne
test
jmp
nop
sub
aad
icebp
xor
lock
ror
shl
clc
xor
iret
aas
shl
mov
fcoms
fiadds
loop
cmp
out
shl
out
loop
into
sar
cli
jmp
fisttpll
xchg
int3
lock
icebp
shl
lret
aaa
sarb
shl
ret
xchg
ljmp
repnz
ret
cmc
cmp
ljmp
icebp
loop
cmp
rcr
jecxz
inc
test
cmc
in
in
xor
in
icebp
aad
cmpl
aas
aas
icebp
decb
clc
leave
shr
test
xchg
out
shl
ret
ret
cmc
sti
hlt
ljmp
lock
cmc
ret
std
into
xchg
and
roll
cmc
aam
idivb
sti
xor
cmc
inc
push
aad
aad
enter
lock
in
cli
ret
ss
bnd
ds
lret
out
testb
fucom
faddl
cmp
repz
aam
int
cld
cmc
ror
ret
in
in
in
in
in
xchg
xchg
adcl
ror
loopne
xlat
clc
into
shr
stc
xrelease
mov
aam
cs
iret
std
lret
lret
rcr
not
out
addl
call
hlt
out
in
aas
out
jmp
enter
out
in
fstpt
leave
or
decl
iret
leave
xlat
cli
fcmovu
xorb
in
ror
in
test
mov
std
sti
jmp
ljmp
fdivs
int3
xor
ret
ret
sub
xchg
fcoml
mul
iret
lret
out
fdivr
lret
cmp
loopne
lret
loope
frndint
rcl
call
out
jecxz
aaa
iret
in
rol
test
add
test
mov
mov
jmp
in
mov
cs
out
cli
ss
div
stc
lret
jecxz
xlat
div
ds
fcomip
fxch
jmp
cld
call
in
enter
cmp
lret
sti
xlat
clc
rcr
loop
div
lret
fincstp
mov
cmc
icebp
out
call
out
in
lret
repz
into
sar
xlat
cmc
fmul
jmp
iret
in
lret
sub
subb
icebp
aad
aas
xor
repz
fildl
call
int
loopne
call
int3
cmp
fxch
cld
dec
cmp
in
ds
out
jmp
loopne
mov
sub
ret
in
repz
fcmovbe
cmp
clc
lock
out
in
lock
fildl
in
lret
loop
loope
lret
loop
sarl
shr
fmulp
repz
std
fucom
mov
idiv
stc
aad
and
mov
enter
fdivrp
ss
incb
call
mov
ljmp
aad
ret
fadd
aaa
cli
int3
not
cmp
into
fdivr
add
out
cli
sti
in
loope
out
icebp
out
icebp
loopne
into
repz
ffree
cmp
ret
test
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
inc
jmp
lret
aas
fst
fcmove
fidivrs
mov
push
cmpl
add
aam
std
test
xor
int3
fucomi
xor
stc
jmp
cmp
ret
mov
addl
xchg
out
imul
cli
jmp
fidivrl
roll
xlat
lret
in
cli
xchg
in
out
xor
xor
sti
clc
cmp
in
cmp
icebp
repz
fcmovb
mov
fdivp
call
shl
sarb
cmc
cmp
sarb
mul
in
fcmovnu
out
mov
icebp
xchg
in
out
in
in
cmp
in
xlat
rcl
out
cmp
cmp
flds
xlat
ret
int
jmp
xchg
leave
in
ret
fcmove
ror
cmp
in
rolb
jmp
cmp
loop
iret
leave
nop
not
in
aad
les
div
sar
fsubrp
repnz
rol
shl
out
testl
rcl
xor
call
cmp
cmp
xlat
test
ret
fadd
jmp
fiaddl
loop
call
iret
shr
xor
fxch
aad
fcmovnb
faddp
mov
mov
xchg
loope
out
ret
fcmovnbe
enter
into
in
fstp
ror
in
repnz
roll
fucomp
cmp
lock
leave
repz
enter
cmc
lret
sarb
fdivrl
ret
fcmovbe
movb
out
aam
jmp
in
xor
shl
fdiv
in
cmp
loopne
fmul
xchg
cmp
lret
repnz
xor
fdivrp
aaa
adc
fisttpl
rorb
cs
rcr
int3
clc
cmp
hlt
enter
lock
aad
xlat
rcr
fstp
incb
movl
aaa
out
lret
cmp
fucom
cmc
rol
inc
in
ljmp
loop
ret
enter
iret
out
jmp
fidivrs
in
xchg
fcmovnb
std
loopne
out
mov
jmp
call
loopne
cld
add
add
mov
std
mov
in
in
in
repnz
int3
neg
leave
out
cmp
fsub
fadd
out
jecxz
std
neg
in
in
shl
out
int
cmc
rcr
fmul
loope
rcr
ds
mov
lret
testl
loopne
in
ret
fucomi
lret
fcmove
fstpt
fcmovnu
repnz
repz
loopne
mov
test
xor
enter
jmp
out
fcmovne
sar
stc
call
fisttps
jecxz
loop
out
xlat
sti
fstp
or
xlat
repz
enter
loop
cmp
shll
ret
cmp
leave
sbb
hlt
loop
div
lock
aas
fsqrt
in
nop
mov
hlt
aaa
sub
xor
stc
sbb
std
out
lret
aad
fucomi
in
nop
push
int
xor
aad
cmc
fucomi
cmp
ret
in
test
sbb
sbb
loopne
in
out
sub
xor
ss
neg
fucom
stc
into
aas
fdiv
xlat
ljmp
leave
jmp
in
ljmp
in
in
sar
inc
jecxz
lds
out
call
into
lock
xor
cmp
cmp
in
cmc
fsub
repz
ljmp
nop
xchg
loope
iret
rcl
into
xor
cld
cli
not
test
loopne
aas
stc
cmp
fiaddl
into
jecxz
xor
out
aaa
int
ds
fildl
fndisi(8087
fisttpl
repnz
int3
aaa
in
sti
into
iret
int3
out
ds
clc
sbb
fucomp
hlt
stc
clc
test
in
lret
enter
xchg
xor
sub
xor
vpxor
lock
stc
and
sar
cmc
hlt
ret
fldl2t
into
repnz
mov
jecxz
aad
lds
out
rol
loope
hlt
cmc
and
stc
orl
fdiv
int3
loop
sub
xlat
cmp
in
fcmovnbe
neg
fsub
shl
std
std
clc
in
stc
fcmovb
fucompp
out
in
aam
hlt
leave
out
lret
xlat
lea
movl
jmp
aam
aas
ret
lret
fst
fnstenv
lods
pop
inc
stos
xchg
fwait
sbb
roll
jle
lret
enter
filds
shl
mul
fcomp
stc
out
loope
jmp
mov
int3
lret
xor
fidivrs
xlat
fcmovnbe
xor
ret
incb
in
div
or
shrb
fmul
xor
divl
cmp
hlt
cmp
jecxz
xor
fmuls
hlt
in
xor
cld
xor
out
xor
cld
in
lock
decb
in
enter
shl
aad
int3
xor
ss
div
int3
lret
into
fcmovnu
repnz
xchg
cmp
sti
xor
xchg
jmp
cmp
jmp
cld
xlat
aad
dec
ror
add
ret
jmp
fsts
shl
icebp
ret
out
leave
std
idiv
jecxz
jecxz
std
fdivrp
aas
fimuls
mov
loope
repnz
ret
call
fadd
div
cli
shl
enter
and
lds
ss
aaa
stc
out
cmp
lret
std
jecxz
stc
clc
fxtract
enter
fcmove
xchg
mov
xor
lret
cmp
cmp
cmp
loope
cmp
mov
repz
jmp
loopne
in
lock
repnz
adc
icebp
flds
lea
std
test
xchg
jmp
adc
out
fldl
or
into
jmp
xor
leave
fidivl
repnz
repnz
stc
ror
fincstp
fldl
jmp
loop
ror
into
clc
aam
xor
cli
rcl
icebp
cli
cld
fdivr
testl
xchg
fucomi
hlt
in
xor
int3
repnz
lock
ljmp
stc
orl
fists
in
imul
int
sti
cld
int
jecxz
out
fsub
loopne
fiadds
nop
fcmove
or
repz
clc
lds
ljmp
rol
out
out
call
out
int
int3
call
out
idivb
fcomp
ffree
rolb
and
sti
ffree
loope
aas
hlt
aam
iret
clc
clc
call
lock
cmp
jecxz
mov
call
loop
lock
sub
stc
cli
out
divl
shl
and
out
loope
loope
fldl
xchg
hlt
test
out
sti
out
enter
ljmp
test
in
ret
sti
iret
repz
fmul
cmc
call
cmp
mov
fsqrt
std
in
lock
sub
aaa
out
aad
cmp
shl
lock
ds
rolb
mov
in
lock
ret
cmc
out
rcr
loopne
add
jmp
cli
vcvttpd2dq
mov
fisttpll
rol
int
fcom
lock
clc
int
repz
fdivrp
incl
in
shl
xchg
lock
fsqrt
xor
iret
hlt
icebp
test
fucomi
clc
aas
loopne
out
addl
int
cmp
ljmp
loop
rorl
int
iret
out
xchg
iret
mov
clc
int3
lock
out
sar
fdiv
test
add
aad
in
fprem
mov
xor
shll
jecxz
int
sti
xor
lret
out
test
shl
mov
sti
mov
into
clc
fsubp
test
xchg
mov
shl
clc
xlat
sti
std
shl
cmp
cld
fcmovnu
aas
sti
cmc
repz
cmp
repz
test
in
shl
cmp
lock
cmp
out
loopne,pt
loop
decb
rclb
in
jmp
in
out
fucomp
cmp
aas
cli
lret
in
jmp
ftst
enter
cli
lret
std
aas
into
into
call
jmp
mov
in
fnstcw
int3
sarb
cld
test
mul
in
in
ljmp
loope
out
mul
call
lock
cmp
fcmovne
aam
sar
ljmp
inc
fmuls
push
arpl
add
add
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
neg
mov
sbbl
push
and
lea
andl
mov
neg
jmp
rcl
xlat
fcom
push
outsl
testl
repz
loopne
int3
lock
cmp
aam
ljmp
cld
stc
xchg
test
out
jecxz
lret
lret
aad
cmp
xor
fcom
cmp
addl
in
mov
std
out
xchg
out
dec
lret
int
cmp
iret
xchg
add
testb
out
loopne
aad
iret
into
in
iret
xor
xlat
fidivrs
xor
dec
lock
nop
std
out
xchg
test
call
lret
int3
sbb
xchg
ret
cld
out
in
orl
iret
leave
lock
cmp
rcl
icebp
stc
aad
ret
idiv
cmc
out
out
repnz
hlt
shlb
call
sbb
out
addb
flds
adcb
out
in
rcr
sar
stc
clc
int
out
lds
out
in
addb
repz
out
out
lret
in
fdiv
test
icebp
sbb
mov
mov
mov
rorl
repz
sti
das
ljmp
lock
fadds
lret
mov
iret
mov
mov
loopne
aas
stc
ljmp
leave
aas
rcr
imul
testb
fisttps
xchg
in
iret
aam
lock
in
aad
jmp
fscale
into
in
loop
imul
aad
rcr
int
xlat
sar
ds
sarb
jmp
in
ror
jmp
loop
xor
aad
repnz
repnz
cmp
out
lds
loop
decl
loope
test
fcom
icebp
out
sti
fmulp
fpatan
cmp
ret
and
cli
fcmovnb
clc
out
sti
mov
out
aad
in
fdivs
idiv
in
addb
clc
out
aam
in
mov
int
rcr
icebp
xor
repz
cli
std
fstp
cmp
jecxz
cmc
fcmovb
loope
cld
mov
int3
mov
in
lock
ljmp
repz
iret
test
bnd
loop
int3
lea
xor
xor
aam
cmp
xlat
cmp
xlat
or
addl
out
cli
xor
aaa
jmp
test
imul
jmp
jmp
test
rcr
jecxz
lret
in
ror
fldl
neg
not
in
ret
out
xchg
xchg
and
ret
aad
jmp
imul
iret
loopne
loop
ret
jmp
fdivrp
test
mov
test
cmp
in
ljmp
jecxz
fsub
out
in
lock
int
decl
icebp
aad
aad
out
ss
in
movl
icebp
mov
into
ror
hlt
stc
fidivs
out
test
out
icebp
lret
fimuls
xor
out
in
aad
repnz
fst
loop
hlt
rolb
mov
std
lret
in
mov
jecxz
lret
iret
rcl
sti
xor
in
testb
in
filds
std
into
mul
jmp
in
stc
int
into
div
leave
xor
fmul
shl
loop
not
sti
in
fdivp
ljmp
in
shr
in
shl
shl
cmp
imul
addb
test
aam
out
shll
into
jmp
cmp
pushl
fdivrp
cld
in
lock
out
loopne
test
out
fimull
xor
xor
xlat
imul
cmc
fidivrl
cli
movb
test
mov
xlat
lret
iret
sti
cmp
sti
rol
fidivrl
shl
clc
cli
loope
jmp
cld
lret
sbb
xor
xor
xor
hlt
std
jmp
rcl
clc
sar
out
fadds
incl
cmp
std
ljmp
fildl
out
ljmp
in
cmp
cmc
ss
cld
mov
push
jmp
aam
enter
aad
cmp
and
pop
dec
nop
jg
roll
jle
cmpl
mov
cld
xchg
sti
in
cld
test
not
jmp
ror
mul
rcl
ret
faddl
jecxz
xchg
into
std
test
lock
aad
ss
cs
out
fdivrp
stc
fstp
xchg
cli
dec
fadds
jmp
out
jecxz
aad
shl
out
icebp
out
cld
in
lret
xor
sar
in
lock
sub
leave
in
leave
xchg
or
lea
ret
ss
out
fistpll
sarb
jmp
fsub
lds
jecxz
roll
test
mov
test
lds
lds
shl
xlat
lret
aad
test
faddp
cmc
mov
out
fadds
notb
cmp
xor
testb
div
rcr
ret
mul
jecxz
addb
clc
aaa
aam
lock
jmp
jmp
rol
rol
aam
notl
and
in
into
jecxz
in
test
sarb
shl
fst
repz
clc
jmp
jmp
iret
cmc
call
xlat
jmp
ffree
rcl
out
out
xchg
orb
cmc
xor
ret
jmp
xor
fcom
aad
test
ljmp
in
ljmp
aad
iret
ss
aaa
fcmovbe
sti
faddl
fstp
sub
rcl
xor
lret
xor
into
into
cmp
sar
cmp
fucomp
int
into
sti
nop
mov
aam
hlt
icebp
int
out
das
out
ss
lret
loope
cmpb
loopne
iret
lret
jecxz
incb
cli
aad
cmp
ljmp
loop
aam
loop
imul
mov
fucomi
hlt
rorb
into
cmp
loopne
rcl
add
std
hlt
xchg
fisttps
in
mov
loope
sti
iret
shr
xor
sti
cmp
loopne
stc
sti
addb
out
shr
iret
shr
shlb
int
cli
cmc
rol
cld
mov
filds
into
aas
in
repnz
aad
into
xor
cli
fstpt
sti
rcr
cld
test
out
icebp
roll
into
into
into
cli
call
cmp
ret
add
fstl
jmp
rol
cli
in
call
test
fsubp
aad
faddp
mov
mov
ret
ror
lret
repnz
iret
xchg
fldl
mov
lea
icebp
enter
in
aad
in
rcl
sbb
cmp
xchg
flds
std
sub
ljmp
clc
out
ds
xrelease
call
xchg
lret
repnz
repnz
bnd
stc
aas
sti
aas
neg
clc
sar
loopne
cmc
jecxz
leave
in
mov
jecxz
fstp
cmc
aad
cli
into
ror
cli
xor
clc
rolb
call
ret
incl
loop
ss
jmp
aas
aaa
lock
int3
loop
testb
loopne
std
mov
call
loop,pn
enter
fstpt
xor
rol
cmp
sar
in
clc
fcmovnu
out
out
fiadds
icebp
xor
hlt
rcl
aad
shr
cmc
sbb
fscale
sti
fadd
faddl
fndisi(8087
out
aad
int
sub
lock
ljmp
rcl
repnz
clc
ffreep
jmp
jecxz
icebp
vfrczpd
into
push
fprem
cmc
cmp
lds
or
mov
shl
ljmp
iret
into
cmp
out
fdiv
loop
ror
loop
out
out
test
loopne
int
repz
fnstenv
fxch
std
out
rol
fadd
ffree
dec
mov
repnz
repnz
rol
cld
shll
sar
ds
loopne
aam
adc
clc
in
into
loop
out
mov
xchg
test
shl
hlt
stc
fst
sarl
ljmp
xor
jmp
jmp
out
jmp
lahf
clc
mov
mov
movl
mov
xor
jmp
rcl
enter
fcmovne
fdivl
xchg
jg
roll
jle
loopne
cli
cmp
sti
iret
fsubrp
fcmovnb
hlt
sti
sbb
test
fadds
std
orl
ljmp
faddp
sarb
mov
fiaddl
rclb
iret
cmp
out
out
lock
cmp
xlat
rol
loop
fsub
mov
mov
cmc
iret
cmp
stc
shl
fcmovnbe
ret
fsincos
mov
call
loope
rcl
ret
ss
lock
jecxz
loope
shl
shl
faddl
jmp
in
loope
hlt
xor
clc
aas
ljmp
fcmovnbe
ljmp
int3
jmp
jmp
rol
int
call
ret
ret
xchg
ffreep
loopne
in
mov
out
shl
enter
ds
xor
loop
test
test
xchg
ror
repz
xlat
stc
lock
enter
ret
cmp
stc
sub
mov
sti
in
enter
xchg
out
out
enter
repnz
lock
fadds
mov
loope
stc
fcmovu
mov
rorb
xor
jmp
aam
icebp
jecxz
sar
repz
add
in
lret
loop
lret
icebp
incb
out
hlt
cmc
shl
in
test
leave
mov
out
test
in
xchg
mov
in
fdecstp
aaa
divl
shl
sti
out
iret
lock
movb
ror
out
enter
sarb
repnz
fmul
jmp
loop
cmp
out
stc
lock
ljmp
fdivr
lock
enter
test
lock
ret
mul
out
loopne
and
mov
ss
jmp
lret
icebp
ds
ret
shl
icebp
leave
neg
ljmp
jmp
xchg
fxch
lock
leave
jmp
in
loop
iret
in
call
loop
fiadds
rcl
xor
divb
ss
in
out
cmp
lret
hlt
ret
shl
test
xchg
cli
into
repnz
xor
divl
lret
enter
cmc
ss
fdivr
rcr
loop
neg
fcmovnbe
test
xor
int3
iret
fld
lock
not
cmc
in
add
cli
mov
addl
loop
lret
hlt
ret
xor
jmp
in
out
jecxz
les
idiv
mov
test
icebp
out
nop
cmp
fdivrs
in
in
lret
fcmovbe
roll
rol
jmp
nop
lock
out
xor
lret
cmp
in
into
int
lock
sar
fxch
in
mul
int3
out
orl
aam
int
fstp
clc
call
lock
rorl
idiv
cli
repnz
adcl
clc
in
xor
lock
ret
cmc
out
add
cli
ljmp
xchg
sar
in
repz
ss
int
ret
fidivrs
shl
ljmp
ljmp
aas
f2xm1
jmp
ljmp
fmul
rcr
fadds
ljmp
ljmp
out
aam
test
cld
sbb
mov
iret
repnz
ficoms
xor
rcr
ss
ds
loope
loop
rcr
fimuls
mov
sbb
aam
idivb
int
xlat
icebp
aas
cmp
jmp
std
not
ds
or
cli
out
and
lock
hlt
ret
rcr
std
idivl
aad
hlt
ffreep
aad
sarl
cld
orb
cmp
xor
out
icebp
out
iret
into
xlat
cmp
shl
icebp
repz
stc
adc
add
rclb
out
jmp
out
sarl
shl
ret
icebp
mov
jmp
fcmovne
out
roll
in
cmp
int
fistpll
cld
cmc
stc
clc
ffree
in
fisttps
in
out
cmp
jmp
repnz
out
call
pop
movzwl
adc
mov
xor
mov
or
mov
xorl
xor
adcl
jmp
int
rcl
int
stos
fimuls
sbb
roll
jle
mov
jmp
or
rorl
not
lret
icebp
cmc
hlt
aas
mul
icebp
out
clc
add
mov
xor
cmp
mov
jmp
sub
sarb
aam
std
aaa
std
in
or
aam
aad
orl
repz
jmp
shr
ftst
out
in
cld
ds
clc
fcmovnu
fdivr
out
cmp
call
cli
fdivrp
fdivp
loopne
shl
xor
loope
roll
enter
xchg
shr
fadd
lret
in
jecxz
fcmovb
shr
sti
ljmp
xlat
ds
faddl
repz
fucom
repz
out
in
into
in
jmp
cmpb
cmc
leave
cmpb
test
loopne
mov
int3
out
loop
xor
loope
jecxz
sarl
sar
mov
mov
jecxz
lea
ss
repnz
sar
shll
iret
inc
lock
lock
aad
ret
mov
fsub
cli
mov
aaa
les
leave
clc
in
rcl
in
out
aad
aam
test
mov
into
icebp
int3
cmp
xor
cmp
int
cmp
shl
div
clc
icebp
in
out
mov
lret
cmc
ret
int3
cmp
fnstsw
xor
fidivrl
std
cld
sar
mov
int
shl
sub
int3
cli
fdiv
fucom
ror
shl
jmp
in
repnz
repnz
xor
jmp
cli
icebp
test
leave
orb
xchg
out
rcl
xor
clc
aaa
aad
repnz
cmc
adc
fld
cli
out
sti
nop
lock
ffreep
fidivl
in
fidivs
call
clc
loope
aad
cld
fisttpl
iret
rorl
xor
sub
cmp
sarl
vcvtpd2dq
shl
mov
lret
mov
int3
cld
mov
icebp
xchg
clc
int3
jecxz
cmp
cmc
clc
in
cmc
loope
int3
stc
fdivr
cmc
sti
fimuls
lret
lock
into
divl
stc
lock
dec
lock
and
hlt
aad
aad
lret
cli
int3
loopne
in
hlt
xor
fdiv
into
out
leave
aad
cld
loope
test
cmp
loop
fcmovbe
fld
in
xchg
jecxz
xchg
xor
repz
out
sti
ror
iret
in
not
shr
cmpb
xchg
jmp
call
orb
cmp
hlt
cmp
cmp
loopne
in
out
ret
sti
test
xchg
sti
lock
out
aaa
loop
cld
rcl
std
hlt
cmp
fcomp
rcl
shl
shl
rcr
cld
lock
out
shl
xchg
cmp
cld
enter
stc
incl
mov
enter
adcl
repz
ds
sub
sar
inc
clc
test
lret
lock
hlt
ror
imul
into
stc
call
cld
shl
testb
mov
in
xchg
in
shr
ss
cli
jmp
rcl
loopne
clc
in
fldl
mov
adc
int3
cmc
cld
cmp
repnz
repz
loope
cmp
out
clc
test
fstp
in
fisttpl
loop
enter
cmp
iret
enter
ss
test
rorb
nop
mov
loopne
xchg
mov
icebp
ljmp
jmp
test
rcl
ret
jmp
stc
nop
addl
shlb
stc
lret
std
idivl
addb
fisttpl
xchg
shl
out
cmp
enter
in
in
out
shr
fxch
sti
jmp
mov
in
xchg
xor
out
xor
ds
aam
cmp
xchg
in
fsubp
incl
out
clc
ror
lret
aaa
in
sarl
std
xlat
test
std
sti
push
xchg
aam
cmp
in
repnz
loop
cli
aas
aad
clc
incb
mov
in
fisttps
icebp
out
aaa
xor
jmp
enter
fmul
fnstcw
lret
inc
call
roll
jle
xor
lret
jmp
fdivr
mov
repz
fdiv
enter
out
cld
idivl
xor
in
vpaddusb
xor
cmp
in
test
aad
idiv
mov
fmul
in
shl
lret
mov
xor
ret
fcmovnbe
xor
loop
test
cmp
fmul
xchg
vphsubdq
int3
and
ss
out
lret
clc
xlat
out
clc
cmp
xlat
clc
sar
add
jmp
in
mov
sti
call
cmp
stc
sbb
ds
stc
mov
leave
rolb
aad
lret
ds
sar
loope
cmc
fcmovne
jmp
cli
testl
ret
divb
xor
cmp
out
shl
addb
fildl
rol
divl
fdiv
fcmovne
icebp
cli
sbb
hlt
hlt
cmc
into
cld
repz
loopne
aad
jecxz
mov
cld
lret
out
xor
fcmovne
cld
ss
out
neg
shl
rcr
lret
xchg
jecxz
mov
lock
fisubrl
int3
fndisi(8087
jecxz
sarb
out
jecxz
ds
and
or
xor
cmc
leave
ret
cmp
fdivr
stc
rcl
cld
shr
inc
cli
jmp
loopne
mov
xchg
aam
cli
shlb
cmp
cli
div
icebp
xor
fdivr
vpxor
jecxz
fsubr
repz
cmp
cmp
xchg
cli
enter
rolb
int
lock
out
hlt
in
sar
and
fsub
int3
out
test
hlt
lret
cmp
stc
lret
lock
mov
hlt
testb
leave
ljmp
sarb
out
cmp
repz
loop
clc
shl
clc
out
out
in
jmp
or
xor
hlt
cmp
fdiv
enter
ret
in
sar
and
or
fucomip
jmp
ror
loop
lock
rcl
fcomi
lock
cmpl
test
clc
out
test
out
sub
repz
das
xor
out
das
std
loopne
jmp
jecxz
icebp
ret
mov
leave
iret
lock
loope
xor
test
cmp
xchg
clc
stc
mov
jmp
xchg
in
nop
int
sbb
in
leave
cli
in
cmp
int
in
xor
loope
loop
loopne
int
lret
test
into
out
into
xor
repnz
fdivp
sar
test
ret
aad
int3
fyl2xp1
xchg
ror
xor
ss
ror
out
lret
xlat
aas
int
cld
rcr
rorb
in
jmp
test
loope
enter
cmp
cmp
cmp
aam
and
sti
cli
jmp
xchg
test
mov
out
shl
xor
aaa
lret
sarl
fcmovu
aam
xchg
cli
fucomi
xchg
clc
fsub
xchg
enter
vpsubsw
repz
inc
xchg
cmpl
fdivrp
out
lock
in
rcr
cmp
test
cmc
ret
or
out
in
fstp
iret
cmc
cmc
ret
cs
loop
xor
cmp
aad
iret
aad
fst
decl
and
jmp
xchg
into
cmc
mul
xor
icebp
clc
in
loope
loope
shl
aam
aas
test
fiaddl
fists
stc
lret
xlat
sti
sti
lret
aas
cld
loopne
out
fiadds
in
fadd
mov
out
shl
div
enter
xor
fstpt
cmp
shl
fcomip
cmp
ljmp
into
jecxz
lock
out
ljmp
leave
loope
into
loope
test
mov
enter
in
aam
lock
cli
shr
in
dec
loopne
fxtract
jecxz
clc
mov
fildl
xchg
std
repnz
xor
icebp
fdiv
into
cmp
repnz
aas
test
xlat
out
lret
mov
xchg
push
out
rorl
sti
in
lret
repz
cmp
aam
aas
out
test
out
addl
adcl
jmp
enter
fst
ffree
and
dec
jo
lods
cmc
in
push
mov
jle
lock
mov
cmp
ljmp
lock
lock
cli
ret
testb
mov
xchg
in
neg
xor
stc
xor
fidivrl
cmp
sti
lock
rcr
shl
fcmovb
in
mov
fucom
loopne
subb
out
rcl
enter
sti
cmp
stc
test
icebp
repz
out
mov
into
loopne
out
idiv
repnz
repz
repz
xor
aam
cmc
sar
enter
lret
rol
int
std
int
aad
shll
sar
fmul
xor
adc
cmpl
nop
int
iret
in
sarb
lret
leave
jmp
hlt
stc
inc
mov
cmpb
lea
out
out
loope
into
int
cmp
repz
sti
xchg
neg
lds
decb
call
std
cmp
out
cmp
clc
in
cli
aam
cmc
jmp
loopne
lret
into
in
jecxz
ljmp
in
aas
int
sti
std
aam
out
loop
shl
enter
out
loope
lds
in
jmp
repz
cmpl
fmulp
lret
shl
nop
rol
repnz
int
cmp
cmc
cmp
ret
in
test
xor
sti
mov
rcr
rcr
ret
fldz
cmc
cmp
ds
std
int3
int3
fldl
out
or
in
fsubrp
fdivr
xor
fprem1
or
cld
cmp
sti
mov
rol
int3
in
out
loop
icebp
xchg
int
xchg
in
xor
cmp
into
xlat
cmc
loopne
cmc
fdivp
mov
cmp
neg
mov
in
rcr
rcr
loopne
xor
call
shr
aam
fdivp
idiv
cmc
lret
out
sbb
icebp
fsubp
loope
xor
in
jecxz
repz
out
cli
ds
in
out
lret
loopne
xchg
fsubr
out
jecxz
fadd
fnstsw
repnz
sarl
into
neg
fndisi(8087
leave
ljmp
imul
lock
sti
call
hlt
repnz
clc
std
icebp
push
loop
cmc
in
stc
xchg
mov
out
out
in
shl
xlat
stc
in
cmc
ljmp
lock
ret
shl
mov
into
mov
shl
cmp
cld
fdivr
fld
sti
into
cli
cmp
in
xlat
mov
xchg
aam
bnd
das
out
enter
clc
ret
jecxz
in
loopne
jmp
fiaddl
ret
fdivr
lock
cmp
loopne
fucom
loopne
clc
in
add
mov
xor
xlat
enter
ds
out
lret
clc
stc
xor
out
ds
mov
ljmp
lret
div
xor
not
ds
rol
lret
jmp
xchg
call
fcomp
leave
call
flds
std
aam
ds
enter
xchg
repz
xor
sub
xlat
fsubrp
ds
xlat
fidivrs
xlat
aad
shl
in
call
out
cli
in
in
test
out
xor
ss
fst
enter
sbb
sti
cld
cmpb
testl
out
not
cmc
ror
cmp
cmc
xor
fdivr
mov
adc
jmp
ret
rcl
fst
in
rol
clc
repz
rcr
fsub
cmp
xlat
loope
into
sti
lret
xchg
idivl
iret
ds
loopne
jecxz
jecxz
in
ret
ljmp
leave
and
shl
call
icebp
clc
out
cmp
cmp
in
clc
std
loope
mov
lret
xchg
xlat
hlt
aad
not
std
ljmp
icebp
cmp
int
in
mov
fdivp
sub
enter
in
in
clc
bnd
leave
out
out
out
int3
icebp
enter
ss
int3
test
fsub
xchg
fdivr
cmp
mov
in
mov
jmp
xlat
ret
out
xor
cld
xor
add
addl
div
not
mov
movl
cmp
movl
jmp
rol
mov
xchg
cli
mov
jle
add
cmp
cli
test
xchg
test
mov
nop
xchg
lret
jmp
fcmovnbe
std
div
cmp
ds
fiadds
lret
sbb
jecxz
addl
out
div
fidivl
std
fxch
cmp
clc
mov
fiadds
shl
out
cmp
jmp
out
clc
cmc
fsin
int
cld
aad
and
int
clc
call
mov
loop
loop
out
xlat
lock
cmp
aad
in
cmp
fdivr
xchg
enter
jmp
clc
out
mov
repz
xchg
int3
rcr
fcomi
repz
aas
fiadds
mul
aad
in
test
mov
jecxz
out
and
repnz
lret
icebp
shl
cmp
out
test
cld
in
lock
loope
out
mov
ret
repz
lret
aam
rcr
into
mul
clc
cli
int
lock
fcmovne
jmp
mov
cli
clc
xor
fcmovu
rol
hlt
std
xlat
lret
ret
clc
fcom
stc
fdivr
lret
iret
leave
lock
fdiv
repz
rcl
stc
fdivr
call
neg
in
xchg
repnz
in
repnz
ss
cmp
xlat
cmp
dec
aas
in
or
frstpm(287
loope
loop
ljmp
xchg
aam
jmp
out
jmp
rol
neg
filds
cmc
incb
int
jmp
enter
lock
lret
cmp
cmp
aam
fsubr
fimull
xchg
rcll
int3
shll
lret
sbb
fdivrl
movb
sbb
mov
loope
jmp
cld
cmp
cmp
test
hlt
xchg
hlt
ret
enter
leave
in
in
fimuls
stc
in
stc
fucomp
cmp
fdiv
sar
rol
cld
test
test
rclb
sub
cmp
cmp
xlat
std
shl
ds
mov
sti
lret
movl
aam
das
ljmp
xlat
lret
int
lock
cld
loope
mov
icebp
lock
cli
ret
stc
lret
repz
roll
clc
add
int
mov
xor
cld
jmp
xor
sti
dec
fsub
mov
imul
fdivr
rolb
test
xor
rcr
rcl
out
add
in
in
jecxz
test
lret
mov
xchg
jmp
in
sub
fucom
in
iret
cmc
ret
cmp
loopne
mov
xchg
not
xor
xor
shr
out
ret
jecxz
fincstp
cmp
lret
repnz
xchg
in
subb
icebp
jmp
ds
idivl
cmp
test
out
jmp
xchg
jmp
xor
out
in
xlat
fstp
mov
call
lret
fsqrt
addb
jecxz
jmp
aam
loope
div
fld
test
aam
int3
icebp
lock
fimuls
idivl
ror
stc
cmp
cli
stc
loopne
shr
test
in
jmp
into
lret
lret
in
call
lock
cld
mul
mov
out
mov
fsubr
loopne
xchg
rol
in
out
shr
cld
xor
repnz
fprem1
cld
test
mov
in
mov
leave
mov
aad
iret
enter
repnz
repnz
int
icebp
loope
stc
ret
clc
mov
xchg
out
call
xor
jmp
in
fcmovnu
fucom
fucomp
loop
jmp
cmc
shll
ret
enter
shl
cmp
out
out
addb
jmp
fsqrt
vaddsubpd
int3
ror
test
sti
rcr
ds
test
out
sti
xlat
shl
mov
xchg
xchg
in
sbb
out
cli
in
sti
lock
roll
loope
decb
lock
sarl
iret
sti
repnz
cmp
cli
cld
xlat
inc
ds
dec
orb
in
orl
aaa
cmp
add
mov
test
inc
add
adc
movl
add
jmp
aas
aam
int3
aad
lret
fstl
imul
stos
jg
roll
jle
aam
ror
fmul
call
lret
in
addl
in
int3
stc
fistl
cs
xor
ss
fiaddl
fiaddl
xchg
mov
mov
out
lret
not
out
mov
cld
fdivp
xchg
in
leave
xor
aad
fdivr
int3
lock
add
cmp
fcmovb
fdivr
dec
in
ror
repnz
in
out
ljmp
int
out
int
ffreep
icebp
fstp
fcmovnu
out
int
loop
xchg
leave
int3
fnstsw
aad
cmp
sar
xchg
test
or
fucomp
adcl
aad
repnz
in
repnz
cli
fucom
lds
ret
and
lock
test
xor
in
fsubr
stc
iret
sti
sarl
out
imul
out
call
jmp
fcmovne
repnz
cmp
xor
ret
xchg
call
lds
ljmp
cmp
lret
repz
inc
aas
add
loop
into
mov
mov
cmc
mov
imul
aad
clc
hlt
icebp
cmp
neg
xor
fsqrt
loopne
int3
fildl
test
ss
fcomp
enter
cli
aad
repnz
flds
mov
shl
xchg
mov
out
xor
repz
repz
in
sar
fchs
jmp
lea
shr
aad
idivl
shr
fidivrs
cld
mov
std
mov
in
repz
out
xchg
xchg
sub
cmc
in
adc
fcmovu
into
xchg
hlt
call
nop
loop
out
loop
int3
clc
int
fstpt
aam
faddl
sti
and
sti
orl
in
clc
rcr
leave
repnz
sarl
rcr
lret
cld
fidivrl
loopne
enter
orb
leave
xor
ss
jmp
rcl
cld
aas
inc
jmp
int
sub
xchg
lret
repnz
enter
jmp
cmp
fldl
rcl
aad
xchg
call
leave
fcmovu
aam
aam
lock
icebp
lret
cmc
jmp
in
ror
aad
sar
testb
addl
sti
lock
enter
icebp
ret
test
out
xchg
repnz
ret
sti
icebp
repz
into
fmul
loopne
aam
icebp
rol
in
int
fsubp
out
jmp
xchg
leave
out
clc
enter
xor
std
cmp
aas
fiaddl
not
cmc
int
lret
add
loopne
out
ret
xor
ljmp
loopne
leave
xchg
out
in
decl
cmc
xlat
ljmp
cld
sarb
jmp
fnsetpm(287
sbb
jmp
mov
fsubr
in
leave
cmp
rcl
lret
aaa
cmp
int3
enter
repz
fcom
rol
std
xchg
out
in
filds
iret
loop
jecxz
out
enter
in
ret
icebp
loopne
sbb
addb
mov
sub
ss
stc
iret
rcl
lret
jmp
cmp
shl
cmp
hlt
leave
std
into
loopne
xchg
int3
loope
mul
idiv
div
stc
out
jmp
std
sti
cmp
idivb
fcomip
jmp
xchg
sub
ror
shll
shl
ljmp
aam
aas
loopne
fdiv
cmp
ljmp
fstl
rcr
not
lret
shl
int
aas
ret
cld
loopne
xchg
in
fcomip
aam
xchg
into
into
xor
aaa
out
loopne
cmp
loopne
out
leave
ret
in
loope
dec
lock
repz
das
lret
ss
fcmovbe
jmp
repnz
ffree
std
leave
jecxz
fcmove
int3
leave
sbb
cld
out
xchg
shrb
into
lret
xor
loopne
hlt
sti
rcl
adc
loope
mov
xchg
mov
iret
repnz
jecxz
stc
xlat
shll
cmp
lea
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
dec
mov
mov
mov
imul
jmp
lret
ror
fstp
fnstsw
out
jo
jnp
popa
loope
scas
jg
roll
jle
loopne
repz
ljmp
test
rorl
lret
enter
lret
in
aas
repnz
xchg
xlat
cmc
xchg
mov
xchg
xchg
rorb
leave
shl
cmp
fucomp
cmp
loop
test
ds
in
and
fsubrp
filds
lret
leave
cld
loope
sar
fcmovbe
mov
mov
call
mov
in
cli
fnstenv
ss
ds
xchg
jmp
in
xchg
in
repz
lret
loop
xor
icebp
cmp
in
sar
aad
in
fmull
aad
loopne
mov
lret
xchg
lret
xchg
idivb
icebp
cmc
out
rcr
out
or
cmp
ret
call
leave
int
xchg
in
xor
xor
xlat
in
or
neg
ret
cld
jmp
and
loopne
lret
repz
xor
aad
xor
call
sti
fst
rcr
test
mov
clc
pop
iret
shl
xchg
lret
cmc
in
xor
clc
cli
repz
addl
lret
call
jmp
lret
hlt
fxch
fyl2xp1
fsubr
in
test
xlat
aad
in
or
mov
iret
mov
icebp
jmp
stc
cmp
lret
rcl
fsubp
sbb
mov
add
fdivrp
faddl
aad
out
xlat
xor
repz
aad
ret
jecxz
sti
ret
ret
addl
mov
xlat
rcr
jmp
cmp
faddp
test
call
jmp
ret
jmp
in
das
ss
shr
sarl
repnz
fdivp
ffree
fldl2e
rcr
in
mov
test
leave
repz
in
stc
lock
lock
iret
cmc
ret
repnz
and
jmp
xchg
repnz
cmc
out
imul
sti
imul
loopne
cmp
ror
aaa
cli
std
loop
test
sti
les
hlt
xchg
in
rcl
clc
fidivrl
hlt
cmp
lret
fsubp
repz
cmp
movb
mov
in
out
out
ss
cs
sar
repz
jmp
lock
jecxz
clc
ljmp
test
fxch
divb
cmc
xor
aaa
fdivrl
sar
aad
std
aad
test
mov
leave
into
icebp
divl
cmp
in
out
fadd
jmp
in
fmul
ljmp
xchg
imull
sar
ret
in
leave
hlt
iret
cmp
clc
sbb
ret
in
in
xchg
call
lock
xor
enter
std
filds
repnz
mov
sub
xor
test
xchg
cli
hlt
clc
xor
xor
add
cld
xlat
mov
stc
mov
out
and
mov
shll
loope
clc
in
in
lret
or
in
not
cmp
cli
aad
out
xlat
fmuls
loope
in
int3
cmc
repz
rcr
mov
ret
test
out
test
icebp
out
in
xor
iret
rcl
out
iret
fsubrp
sti
hlt
sar
fldl2t
ret
xlat
fcomp
lret
nop
repnz
orl
fcmovu
xor
loop
aas
call
loopne
addl
leave
enter
in
aad
cmp
cmp
mov
test
jecxz
loope
mov
call
xlat
rolb
fxam
out
in
loope
incl
out
xor
jecxz
xbegin
aam
cli
loope,pt
aas
out
movb
fdivrp
loopne
into
aaa
hlt
hlt
stc
out
cmp
hlt
cmp
out
ret
icebp
inc
clc
leave
xlat
call
lret
ror
fmul
shl
fcmovne
repnz
into
cmp
ret
not
fistpll
ret
rcl
mov
lock
xchg
hlt
out
int
jmp
test
ret
test
lds
loopne,pt
loopne
jmp
jecxz
int
int
aam
leave
icebp
cmp
lock
test
loopne
icebp
int
xchg
testb
dec
cmc
mov
add
add
fwait
sbb
pusha
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
jmp
rcl
rcr
fst
xlat
xchg
sbb
cld
lcall
jle
in
xor
cld
std
iret
loop
shl
adc
clc
orl
ljmp
cmp
ljmp
rcl
aas
stc
loope
jecxz
out
xor
aad
out
out
dec
out
rcl
cmp
clc
loopne
fneni(8087
int
out
xchg
xor
cli
in
aad
adc
hlt
in
repz
call
enter
int3
fstp
push
loope
sarl
aam
fcos
enter
out
out
cmc
fmul
test
mov
xchg
int
vpsrlq
cli
fistpll
std
cmp
cmp
out
idiv
out
jmp
enter
out
mov
shl
out
fyl2xp1
out
stc
fstp
rcl
test
icebp
ffreep
or
mov
fldl
lock
fnstsw
lret
out
ds
fiaddl
std
lret
out
enter
iret
into
aad
rcr
repz
xor
in
aam
fsub
loopne
out
in
aad
and
mov
fucomip
rol
sub
ss
cmp
in
hlt
fcmovnu
cmp
cli
mov
imul
nop
fsubrp
rclb
in
int3
in
jmp
xlat
fdivrs
ljmp
xchg
xchg
nop
iret
sar
out
out
out
fnstcw
xlat
rcl
xlat
loop
aad
out
in
test
fucomp
out
shl
into
enter
iret
sar
fcmovnbe
fld
aam
aam
shr
into
test
das
fcomp
in
lock
aam
repz
addl
loope
repz
enter
out
filds
loop
fstpt
decb
in
out
cmc
in
loopne
hlt
xor
fildl
test
cmp
jmp
enter
nop
lret
into
into
lret
cmp
iret
cmp
cmp
out
ds
loope
lret
leave
shl
lock
jmp
into
out
ret
icebp
aaa
aaa
in
cmp
cmpl
sar
out
nop
fcmovnbe
out
xchg
in
xchg
aam
rol
repz
aaa
enter
fsub
int
shl
cli
cmc
fcmovnu
orl
fucomip
jmp
cmp
sti
fdivl
cmp
out
leave
cmp
fcmovbe
cmc
testb
into
test
call
imul
xlat
sub
int3
shl
mul
icebp
rcr
stc
out
call
fiadds
aam
into
leave
ret
in
enter
mul
out
cmp
fnclex
aam
fld
in
mov
std
mov
jecxz
repnz
lock
iret
not
cmp
in
sar
cmc
jmp
stc
dec
cmp
fucom
lea
das
aaa
xor
out
idivb
loop
fcmovu
call
enter
out
out
fmulp
out
xor
rol
int
rcl
aam
cmp
out
add
leave
sbb
call
in
aas
iret
cli
xor
into
int3
dec
leave
not
in
xlat
and
fiaddl
fldl
int
into
ljmp
int3
ds
cmp
lock
rcr
xlat
std
fsubr
iret
jecxz
and
out
xor
out
iret
icebp
sti
cmpb
cmp
fdivr
test
out
int3
jmp
test
shl
fsubr
jmp
cmc
int
std
int
fcmovb
clc
aam
cmc
ljmp
addl
in
stc
in
cli
enter
fbstp
aam
mov
in
clc
lret
mov
into
shr
in
shll
xor
sti
div
into
xlat
filds
jmp
xchg
ficoms
icebp
out
cmp
cmp
fcmovnb
in
aas
in
aas
loope
cmp
fsubr
orb
mov
aam
xor
lret
aaa
lret
lock
out
ror
adc
cli
fadds
clc
out
test
mov
ljmp
enter
cld
cmp
cmpb
testb
shr
jmp
in
ret
into
ret
call
lock
icebp
std
sar
loope
rcl
test
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
jmp
rcl
mov
aad
sti
adc
mov
jg
roll
jle
out
ret
loopne
loopne
in
int3
sub
xor
repnz
stc
cld
stc
aam
not
cmc
in
leave
test
lock
loope
mov
shl
aaa
aaa
std
cmp
inc
shl
leave
std
jmp
out
xchg
mov
in
sar
rcl
call
fidivrl
clc
std
cmp
out
loope
enter
fdivr
ljmp
cmp
cli
cmc
ror
out
cmc
xlat
cmp
adc
fcmove
lret
lret
mov
shr
shr
loop
xor
xor
ljmp
into
xchg
out
hlt
call
iret
fst
mov
xor
fdivr
xor
aam
into
cmp
cmp
ds
rcl
enter
leave
out
std
lock
ror
xor
in
clc
in
lret
cmpb
cmp
faddl
in
aas
jecxz
movb
ret
rcr
clc
out
xor
enter
sarl
aaa
stc
fsubr
cmp
mov
rorb
clc
xlat
incb
fcmovnu
inc
aad
rcr
std
lds
test
rcr
fsub
ljmp
stc
out
in
cli
ret
out
rclb
mov
ljmp
mul
sti
loope
hlt
orl
int
test
loope
out
das
out
vshufps
stc
cmp
loope
cld
cmc
aam
rolb
loopne
sti
ror
hlt
mov
cmp
xor
xor
rcl
addl
decl
cld
in
cmc
jmp
lret
lret
int3
xor
test
fsubr
roll
loop
rcl
xchg
addb
hlt
in
shr
sti
xlat
loope
xchg
clc
enter
in
aam
loopne
shl
fnstcw
fmulp
out
fidivrs
cmp
shl
shr
fsqrt
orl
xor
shl
cmp
fcmove
cmp
cmp
shl
call
lret
test
divl
jmp
fidivl
fcmovne
cld
cmp
aas
in
xlat
out
clc
fcmovnu
int3
xor
int
das
into
loop
aam
neg
std
in
out
fcmovu
xlat
rcl
shl
sti
ljmp
sti
rorb
aam
xlat
lret
out
enter
in
rol
rcr
lret
ljmp
in
out
into
jmp
in
testb
lock
sti
mov
cld
int
cli
in
test
call
icebp
shl
iret
jmp
cmp
xlat
out
sub
loopne
ret
hlt
sti
jmp
xchg
fsubr
lds
loop
cmp
repnz
fisttpll
mov
enter
cmc
out
out
out
call
cmp
aas
cld
cmp
test
sti
ljmp
fucomp
das
fdiv
lret
in
xlat
shl
clc
sbb
aad
clc
out
addl
mov
icebp
mov
cs
xor
out
out
lret
cmc
cli
faddp
ret
jmp
sti
out
cld
out
int
in
jecxz
lds
iret
rcl
cmpb
fsubr
and
jmp
jecxz
adcb
ss
aad
shr
jmp
sar
icebp
loope
sub
ffree
call
rorb
fstpt
aaa
cli
fstpt
in
fcomi
call
ret
lret
mov
xchg
xchg
loopne
aam
in
iret
xor
fcos
aam
shr
xlat
xchg
ret
fmull
xchg
int
cs
out
xor
fsub
clc
std
cmp
and
sub
mov
cmp
nop
std
or
aad
aad
xor
rcl
xor
cmp
cmp
fdivr
mov
iret
mov
aam
ror
cmp
aaa
shr
int
rolb
mov
loop
out
iret
xchg
call
ss
rcl
shr
out
orl
repz
hlt
lock
dec
mov
xor
mov
add
cmp
jmp
rol
lret
fstp
aad
dec
jns
pusha
test
imul
jg
roll
jle
ljmp
aam
fcmovnu
jmp
in
hlt
sub
into
clc
cmp
aam
fdivs
test
ret
loope
mov
orb
stc
out
xor
cmp
aad
std
leave
sti
loopne
in
loope
shll
out
addb
sbb
loopne
mov
int
cmp
stc
ror
lret
cmp
sti
idivl
icebp
aas
cld
loope
aad
xchg
mov
xchg
loopne
iret
ss
cmp
enter
out
or
loopne
ljmp
mov
les
sub
stc
enter
jmp
shl
test
std
xlat
loop
mov
aam
icebp
cmp
cmp
repz
stc
in
jmp
jecxz
cli
ljmp
xor
ljmp
stc
cmp
mul
jecxz
ljmp
mov
out
lret
cld
sarl
lock
cli
shlb
fcmovu
les
in
fsubr
mov
lret
lock
int3
lret
xlat
ror
out
fistpll
xchg
loopne
loopne
faddl
in
repz
jmp
hlt
in
shl
not
out
fcomi
shl
fildl
lea
shl
cmp
out
enter
hlt
clc
addb
test
in
and
std
call
icebp
jecxz
repnz
out
fldln2
cmp
out
mov
fisttpl
fsubr
in
into
jmp
ror
aaa
out
out
sti
ss
xlat
in
sarb
cmp
loopne
loope
incl
mov
mov
out
jmp
ljmp
cmp
ret
ds
fld
mov
in
lds
out
fsincos
aaa
xlat
sarb
fdivrp
mul
jmp
std
sbb
enter
icebp
rol
mov
int
clc
fdivs
xor
xchg
ljmp
call
xor
sar
out
icebp
icebp
cmp
fcmovbe
cmpl
std
in
filds
mov
aam
out
cmp
fcmovu
ret
xlat
stc
fucompp
leave
cmc
ret
cmc
ljmp
mov
ret
rcl
xor
out
sti
lret
int
fstpt
aad
call
lock
fsubr
loopne
lret
nop
loope
decl
lret
in
cmc
xor
icebp
ds
cld
xlat
jecxz
idiv
xchg
dec
ret
fucomi
mov
cmp
cmc
ss
cli
sarb
std
fcmove
in
fcomi
idiv
fildl
mov
sar
lock
in
jmp
icebp
lock
cmp
sbb
dec
cmc
fsubrp
mov
xchg
xchg
xchg
loope
shrb
icebp
out
call
mul
cli
rorb
sti
xchg
mov
enter
xor
idivb
idiv
faddl
addl
in
aam
sub
out
into
icebp
fdiv
loopne
fcomp
shr
mov
xchg
out
repz
loope
aaa
leave
call
div
int
sti
hlt
icebp
cmpb
ljmp
mov
out
xchg
div
fdivs
in
xor
jmp
aaa
repz
sti
cmp
aad
rcl
cli
testb
lret
xchg
das
shl
shr
aam
aaa
fcmovb
addb
out
jmp
out
fisttpl
xor
cli
fcom
aam
leave
shl
stc
cmc
test
call
fcomip
add
xor
in
clc
call
aas
int
stc
test
loope
fildl
roll
fprem1
cmp
iret
leave
sar
jecxz
aad
fprem
enter
loopne
iret
orb
xor
cmp
fnstenv
repnz
out
fadds
fsubr
fucom
iret
addb
fcomi
idiv
aaa
cmc
ds
iret
sti
shl
shl
fdivrp
cli
call
test
sbb
add
add
jmp
iret
aad
aad
aad
aad
push
push
mov
fildl
jle
add
loopne
xchg
aad
out
out
call
loope
ret
stc
xchg
sti
call
xchg
mov
aam
repz
sar
int
in
lock
cli
lret
cld
repz
jecxz
ljmp
iret
incl
fst
ljmp
ljmp
cld
cmp
add
test
int
in
fucomp
xchg
call
imul
shl
aam
repnz
in
xlat
cmp
loope
int
in
sti
enter
repz
stc
cmc
sti
call
stc
add
cmp
std
ror
idiv
test
loop
jmp
loop
out
shl
enter
aad
sarl
hlt
rcr
cmc
repnz
xor
lds
ficoms
ss
out
shl
orl
jecxz
loop
adc
shll
in
lret
std
lret
rcl
idivb
aam
sub
sbb
testl
cmc
aaa
loop
cli
out
repz
int3
std
lock
fadd
cli
movl
repz
in
out
in
cmp
fsub
hlt
cmpl
stc
repz
mov
test
fisttpll
xlat
in
call
ss
fistpll
repz
ret
jmp
int
incl
lock
lret
hlt
aad
repz
rolb
mov
out
in
int
mov
xor
repnz
incl
test
jmp
xlat
clc
ljmp
out
cmp
shl
das
lret
fiadds
movb
iret
iret
nop
out
out
in
loopne
xor
ss
int3
fiaddl
out
repz
enter
std
jmp
loop
enter
repnz
fcmovnu
rcl
aad
ds
mov
cmc
std
leave
mov
orl
sti
fcmovnu
shr
iret
icebp
in
std
std
fmul
loopne
out
shl
cld
xchg
jmp
call
sarl
test
cmp
jecxz
jmp
clc
fiaddl
sarl
in
repz
out
xor
cmp
clc
cmp
enter
orb
nop
les
cmp
xor
fidivs
cmp
repnz
xor
ljmp
adcl
icebp
sti
repz
iret
and
testb
loope
jmp
xlat
ret
out
out
cmp
xor
sti
fidivrl
fcompp
aad
shl
in
ljmp
into
filds
xlat
cmc
lret
call
sti
lock
in
cld
cmc
fdivrp
std
sbb
fiadds
xchg
mov
cmp
ljmp
stc
cmp
int
loopne
lock
rol
out
testl
cmp
lret
lock
xlat
icebp
std
call
xchg
mov
iret
aam
ror
call
fucomip
neg
ds
test
loopne
aam
loope
leave
mov
fcmovne
lret
out
in
in
int
out
fcmove
rcl
lret
inc
shl
enter
sti
cld
flds
test
xlat
shl
xor
lock
ss
not
cld
fdivrl
mov
fimull
orl
xor
repnz
test
stc
test
jecxz
repnz
fiaddl
incl
xchg
mov
shl
lock
aad
sbb
cld
hlt
out
ret
mov
mov
int3
xchg
in
rcl
sarl
mov
jecxz
icebp
clc
cld
cld
mov
out
testl
jmp
clc
leave
out
cmc
ss
cmp
repz
xchg
jecxz
test
out
xchg
jmp
lret
xor
xlat
in
iret
in
int
clc
fcmovbe
out
fdivr
rorl
fldln2
in
in
xchg
call
in
fmul
cli
cmp
cld
repz
fst
mov
mov
mov
mov
xor
add
jmp
ror
rcl
mov
lods
cmp
add
repz
rorl
mov
loop
call
cmp
fscale
cmp
addb
call
std
loope
fstl
xor
in
cmp
cld
ror
in
aas
ffree
shl
fucom
ret
mov
fisttpll
aam
in
out
aam
clc
aad
out
in
aas
clc
ret
call
out
out
int3
sti
in
ffreep
das
shl
shll
stc
repz
repnz
std
aam
loopne
loope
orb
xchg
rcl
icebp
enter
cmp
repnz
aad
cmpb
cmc
std
out
mov
mov
xchg
in
loopne
int3
xor
ss
shll
shl
hlt
jecxz
test
out
into
rol
xor
in
cld
cli
into
lret
shl
call
ret
lea
jecxz
call
xor
ss
sbb
lock
in
out
test
call
xor
cmp
enter
repz
cmp
decb
lock
ljmp
in
cmp
xlat
jmp
out
aam
repz
test
loop
mov
shl
hlt
in
jmp
cmp
repz
loop
shl
fcom
int3
clc
xchg
xchg
xchg
xchg
add
cmp
sub
repz
sbb
rcr
std
cmp
call
sbb
enter
rol
in
fmul
iret
lret
ret
shl
out
loopne
call
shl
loopne
jmp
repz
idivl
cmp
fdivrl
loope
and
aam
cld
call
rorb
stc
idivb
xor
loop
cli
rol
ffree
loope
test
mov
adcb
xor
rcr
sar
lret
stc
test
into
test
jecxz
jecxz
loopne
xor
jmp
in
cld
idiv
lret
fadd
loope
fisttpll
and
iret
xchg
cmp
jmp
std
test
fnstcw
mov
lret
int3
lret
in
sub
cli
shl
leave
aad
imul
sar
xor
cmc
movl
xchg
cld
aam
icebp
ljmp
lret
fxch
rol
fadd
cmp
in
mov
mov
lea
fnstenv
cmp
cli
dec
fucomip
clc
add
and
rcr
fsub
in
loopne
out
int
mov
xor
xor
shr
stc
cmp
in
cmp
fadd
fimull
jmp
test
xor
in
stc
iret
repnz
in
add
testb
out
repnz
vaddsubps
into
sti
fcmovnbe
stc
sbb
out
clc
les
in
out
loopne
nop
leave
lret
fcmovnb
aam
int
cmp
fiadds
std
test
xchg
fisttpll
lock
sti
repz
rol
in
std
rol
out
roll
ljmp
hlt
cmp
icebp
idivl
loopne
and
repnz
inc
fsub
lret
xchg
jmp
leave
mov
xchg
jmp
rcl
jecxz
call
cmc
in
icebp
shl
clc
fcmovne
xchg
cli
jmp
icebp
lret
xor
out
cmp
sti
int
test
in
xor
hlt
cmc
sub
or
in
ror
fadd
hlt
cmp
repz
into
cmp
out
cli
ret
xlat
jmp
out
cli
addl
call
aam
aaa
cmp
loop
aad
cld
test
lock
mov
rolb
cmp
shr
cmp
sti
into
or
cmp
cmp
stc
addl
call
rcl
cmp
aad
xlat
cli
cmp
mov
mov
loopne
leave
or
xchg
loop
aam
aam
das
cmp
in
leave
cld
aas
xor
adc
mov
ljmp
loop
fsubr
cmp
movzwl
mov
xor
lea
add
jmp
rcl
aam
sarb
xchg
sbb
dec
pop
sbb
dec
jg
roll
jle
out
sub
sti
into
cmp
shl
fsubp
sar
fadds
ror
test
fxch
call
shr
repnz
loop
vshufps
xchg
rolb
xlat
enter
out
cmc
addl
repnz
loop
call
ljmp
rol
into
call
shr
in
cmpl
out
ffreep
sti
loope
loopne
int
iret
into
ret
fdiv
std
cmp
iret
fcomp
cmp
lock
adc
in
orb
loop
jmp
xor
iret
jmp
fcmove
fdivr
shl
loope
in
std
cld
mov
xchg
cmp
call
lock
shr
fdivs
cmp
std
ror
fmull
lret
out
mov
fdivrs
xor
cmp
cld
int
fcmovbe
std
sti
cld
shl
ds
stc
mov
loop
loop
int3
orl
jmp
das
lret
jmp
aam
fdivr
cmp
lret
sti
xor
ret
repz
into
jmp
aaa
loope
sti
fdiv
lock
ljmp
frstpm(287
mov
mov
ljmp
jecxz
leave
loop
jmp
int3
cmp
aad
in
xlat
repz
mov
out
lea
lret
out
lock
aam
cmp
orb
fiaddl
out
xor
cmp
xor
ds
cmc
fdivp
cmp
rol
in
cli
int3
neg
clc
leave
loop
mov
div
leave
not
in
int3
fidivs
shl
leave
cmp
iret
iret
stc
call
fsubr
in
icebp
in
xchg
xchg
mov
ss
cmp
fsubr
filds
rcr
cld
mov
jmp
int
lock
ror
cmc
int
aaa
xor
hlt
lock
and
cld
xor
addb
cld
xchg
fdivrl
cmp
cmp
int
and
test
stc
in
in
aad
aad
ljmp
rolb
out
in
std
les
mov
icebp
sub
xor
ror
clc
aam
cli
cmp
addb
loope
popl
hlt
loopne
sub
shl
shll
lret
out
in
out
aas
ffree
mov
sti
jecxz
out
ljmp
stc
out
ds
lret
roll
fcomp
out
ljmp
loope
lret
xor
jmp
aad
int
lds
test
orl
loope
fcmovb
aam
out
div
xor
test
mul
test
test
icebp
in
aam
cmc
aad
out
out
flds
les
cmp
mov
loope
xor
hlt
not
sarl
in
xor
clc
xchg
incl
test
lret
in
jmp
cmc
xlat
in
out
fld1
lock
lret
in
in
loopne
ror
clc
xchg
xchg
mov
out
cmc
in
sub
out
xor
lret
fucom
out
hlt
addb
mov
xchg
xchg
fisttpll
clc
cli
in
fucomi
cmp
fnstcw
ret
shr
call
in
xchg
rcr
divb
ss
lret
xor
fsubr
icebp
lret
cli
test
out
stc
fcmovnbe
std
jmp
lock
xchg
xchg
call
shr
shr
ds
div
loopne
cmp
int3
xlat
incb
loope
out
hlt
icebp
fcmovu
rcl
into
neg
and
fcomip
lds
cli
fisttpl
call
xor
lret
int3
ret
cmc
fimuls
or
mov
mov
call
enter
lret
shr
aas
cli
sub
cli
stc
ret
repz
repz
enter
shl
jmp
xlat
push
rol
test
movl
jmp
shrb
xor
cmp
repnz
clc
lock
loope
out
mov
mov
mov
mov
jmp
rcl
int
int
fstl
dec
push
aam
jg
roll
jle
jmp
sti
fdivr
cld
call
in
cmc
cli
ljmp
into
xlat
cmc
out
xlat
test
and
in
or
ljmp
fadd
out
xor
stc
cmp
cmp
cmc
rcr
out
mov
adcb
int
iret
cmp
hlt
out
cli
hlt
aaa
loop
rcl
and
adc
in
mov
fdiv
ror
out
xor
repnz
xor
repnz
sub
idiv
lock
cld
jmp
addb
in
ret
int
repnz
cmp
in
jmp
div
in
loopne
lea
ficoml
repz
sti
xlat
cmp
repz
lock
ror
xchg
aas
ffree
lret
jmp
addl
leave
repnz
out
in
ljmp
sarl
enter
into
jmp
incb
clc
into
jmp
xor
xlat
lret
in
test
xchg
mov
leave
jmp
out
into
shrl
rol
sti
cmc
cmp
call
add
flds
rol
rcl
aaa
jecxz
jmp
cld
fnstsw
jecxz
aam
cli
leave
hlt
clc
mov
fsub
fld1
loope
xchg
mov
in
lock
ljmp
fiadds
in
ljmp
xchg
sub
ret
lret
fdivp
ss
aas
sti
jecxz
cmp
ret
lds
xchg
out
repnz
loopne
iret
lock
sub
aas
sti
hlt
add
mov
in
hlt
test
aad
div
lret
loopne
fmulp
std
aad
out
xor
call
iret
fdivrp
fisttpl
ljmp
cmp
cmp
shl
mov
lret
mov
int3
jecxz
in
fcom
call
rolb
fcompp
cmp
cmc
loope
nop
mov
roll
iret
clc
imul
fdivp
jmp
aas
ret
inc
fld1
div
cmp
nop
sbb
mov
iret
cmp
cmp
repnz
shr
cmp
cmp
sub
call
aaa
lock
not
cmp
loope
aas
hlt
stc
div
cld
loopne
jmp
mov
jmp
cli
cli
cmp
out
loopne
clc
ret
aam
loop
lret
loop
xchg
lock
xlat
jecxz
stc
jmp
enter
cmpb
rolb
jmp
aam
in
shlb
cmp
fidivrs
out
cmp
loopne
faddp
ret
jmp
cmc
xchg
stc
inc
in
test
iret
lret
cmc
divb
out
jmp
cmp
int
cli
sarb
repnz
loop
out
nop
call
xchg
jecxz
xor
aam
repz
aad
testb
aam
fsubr
xchg
mul
repnz
ret
cmp
out
aam
roll
rorl
sti
mov
xor
repnz
in
fstp
icebp
cmp
repz
clc
mov
mov
hlt
ret
add
leave
mov
decb
out
repnz
lret
aas
aas
cld
div
in
fcmovbe
cmp
filds
jmp
xlat
out
fsubr
ljmp
loopne
cmc
cmc
shl
jecxz
jmp
fsubp
shr
int3
in
cmc
out
xor
leave
icebp
cmp
aad
aad
stc
testl
test
stc
test
in
sbb
shrb
into
in
fdivr
cmpl
clc
std
hlt
in
xchg
jmp
call
in
cld
fcmovnbe
sti
cli
lock
loop
out
fld1
xacquire
cmc
fxch
out
int
clc
jecxz
idiv
vshufpd
fcomp
xchg
cld
xchg
out
ret
repz
sar
jmp
out
xchg
in
hlt
ret
mov
in
sti
fucom
inc
xchg
fbstp
repz
xor
cmp
cli
fiadds
in
fildl
shl
jmp
sub
clc
clc
hlt
pushl
roll
imul
jmp
lret
ret
enter
fcmovnu
dec
lcall
cmpsl
push
jg
roll
jle
jmp
sarl
aad
clc
test
bnd
jmp
out
in
int
into
loopne
fsubr
ljmp
clc
aad
shl
in
enter
loop
std
rcl
popl
leave
out
stc
sti
cli
cmp
cld
int
in
sar
ret
testb
fucom
sti
icebp
fldl
into
out
std
lret
shl
hlt
ret
add
sti
addl
cld
repnz
loopne
xor
xor
fst
lock
roll
incb
mov
in
mov
stc
xor
in
rcl
jmp
aad
lock
cmp
in
fsubp
loopne
clc
orb
repz
aam
repnz
sarl
aam
jmp
out
call
ljmp
icebp
xchg
xor
into
repnz
int3
call
test
fsubp
ffree
rolb
addl
in
in
cmp
fucomp
into
cmp
into
aad
test
sti
clc
jmp
sub
lock
fsubr
leave
in
fcomi
in
rol
clc
out
jecxz
in
test
sar
lock
lret
shr
in
sar
lret
test
rorl
lret
lret
or
lock
jecxz
in
test
in
jmp
aam
fcmovnb
fcmovnu
and
nop
lret
loopne
jmp
fldcw
sti
cmp
int
sarl
out
jecxz
cli
test
lret
aas
out
out
in
loop
int3
aaa
cmp
cmp
xor
aas
stc
aad
loop
div
loope
testl
xchg
call
cs
out
in
cmp
loope
test
in
neg
out
cli
mov
in
into
in
aam
enter
repz
in
std
xchg
jmp
fstp
adcl
fucom
cmp
aas
jmp
aas
hlt
inc
xchg
jmp
int3
jecxz
loop
shlb
xor
xlat
fcmovnu
sbb
les
cmc
fcmovnu
cmp
fxch
jmp
out
fisttpll
jmp
cmp
testb
aam
cli
rcr
mov
repnz
repnz
cmp
cmc
icebp
xor
repz
cmc
ret
jmp
test
xchg
ret
in
jecxz
call
int3
sar
in
shl
xlat
enter
loopne
in
iret
out
test
sti
ror
aam
xlat
leave
fnstcw
test
lock
ret
jecxz
mov
sti
loopne
test
fisttpll
int
enter
cli
iret
iret
fst
fiaddl
idiv
fcoms
repnz
call
clc
loopne
ret
testl
mov
out
test
xchg
iret
shlb
xor
jmp
cmc
repz
cmp
jecxz
inc
in
out
addl
repnz
loop
cmp
ss
loopne
sbb
aad
xchg
mov
std
test
in
cli
cmp
hlt
shll
cmp
lret
cmp
movb
ffree
mov
faddl
xlat
ret
shl
fidivrl
std
aam
rolb
neg
lret
fucom
lock
das
sub
fdivr
out
into
cmc
inc
cmp
shl
loop
cld
fxch
add
in
test
into
out
loope
ljmp
xor
rcl
cmc
fxch
loopne
flds
fisttps
lret
in
jmp
cmp
ljmp
loopne
mov
clc
or
ljmp
sub
out
aam
in
loopne
fidivrl
cmc
mov
leave
call
rcr
enter
in
sar
icebp
aad
loope
cmp
cmp
div
sbb
enter
fsubrp
loop
shl
fcom
fcomi
fidivrs
into
out
sti
aad
ret
rorb
mov
lret
and
out
xor
jmp
icebp
aas
out
out
xlat
fstp
sub
inc
adcb
add
lret
mov
fildl
adc
jp
jg
roll
jle
rcl
mov
aam
test
into
aam
shl
loopne
clc
shl
sti
xchg
loop
shr
xchg
xchg
iret
rcl
leave
clc
fld
xor
roll
flds
ret
aas
lret
icebp
lret
std
sub
sub
iret
mul
fprem1
hlt
out
faddp
loopne
out
jmp
clc
iret
test
aam
repnz
enter
ror
cmp
in
stc
idiv
clc
ret
out
ret
f2xm1
cli
in
int3
test
jmp
sar
int3
cmc
shr
cli
stc
aad
ds
xchg
lock
cmp
repnz
out
repz
cmpl
clc
cli
in
filds
xor
out
cmp
xor
rol
aas
fucomi
addl
in
loope
dec
call
neg
cmp
enter
fcmovnbe
repnz
out
stc
fdivrl
hlt
mov
out
out
loope
xchg
repnz
xor
xor
aam
cld
in
fldl
aad
loope
lret
repnz
loopne
ss
out
lock
cmp
adc
in
add
idivl
leave
leave
clc
lret
mov
lock
out
enter
ds
xor
rorb
fcomi
mov
push
mov
xor
das
cmc
aas
xlat
in
cld
fxtract
aaa
aam
rorl
loopne
mov
xchg
cs
lret
into
rcr
cmp
leave
ds
and
in
fcmove
xlat
lret
stc
xchg
rcll
fidivrl
cmp
into
ror
fdivrs
clc
loop
cmpb
mov
incl
mov
int3
lret
stc
int
int3
ror
enter
cmpb
cli
cmc
aam
clc
repz
int3
out
out
xor
iret
fsubr
leave
shr
loope
jecxz
icebp
sti
jmp
xor
cld
xchg
in
aam
aad
jmp
stc
repz
icebp
ror
ret
xlat
lret
nop
orl
xor
aad
in
addl
rolb
stc
jmp
iret
int3
clc
sarl
into
sar
lock
cli
fcmovu
stc
in
in
int
xchg
lret
jecxz
xor
xor
jmp
enter
icebp
in
hlt
ret
loop
test
jmp
sti
lret
nop
mov
fucom
shl
hlt
rcl
mul
out
xor
iret
out
leave
fucomp
out
rcr
repnz
loop
lret
leave
orb
lret
ds
adc
mul
cmp
repnz
testb
lock
lret
mov
enter
fadd
out
cmp
cmp
test
loopne
lock
idiv
aam
jmp
fucom
icebp
xchg
lret
xlat
in
in
xor
leave
call
lret
aas
clc
addl
in
in
lret
rcll
stc
aad
xor
lret
into
sbb
int
repz
ds
fadds
stc
mov
lret
xchg
aam
iret
into
cld
call
fldl
ret
fdivr
lret
loope
jmp
in
in
ret
icebp
cli
test
rolb
leave
jmp
adc
mov
xlat
rol
cmp
rcr
clc
out
loop
ret
loope
sti
cmp
rcr
int3
out
out
test
ljmp
cmp
cmp
repz
cmp
xlat
mov
cli
ficoms
ret
cmp
fcmovnbe
clc
in
repz
call
fmull
in
ljmp
sar
cmp
cmp
hlt
cli
ljmp
rclb
repnz
in
cmp
dec
ret
repz
cmp
aad
aas
cli
sti
ffreep
int
fstl
ror
cld
out
fsubrp
fcomp
fcmovnbe
cld
and
ljmp
out
std
aad
shl
lret
hlt
hlt
out
xlat
cmp
out
cmc
int
std
dec
fnstcw
test
xchg
mov
xchg
cs
out
int3
hlt
out
jmp
iret
ret
cld
decb
xlat
decl
call
add
int
fstp
fstp
mov
in
cmp
int
jg
roll
jle
std
sbb
test
test
std
leave
fnop
int
xchg
out
repz
repz
in
aaa
in
fdivrp
iret
out
loope
loope
fucomi
les
fsub
out
aaa
hlt
ror
in
cmp
repz
rcr
into
stc
sarb
lds
mov
in
test
xchg
repz
icebp
xor
lock
xor
fdiv
aas
aam
fcmovbe
std
enter
in
ljmp
repnz
cmc
lret
hlt
ss
cld
xor
cmp
mul
xchg
mov
mov
mov
int3
jecxz
rol
in
cld
sarb
ds
push
jecxz
cmp
clc
repz
enter
loopne
loopne
xchg
mov
idivb
shl
icebp
cmpl
std
sub
sti
loopne
out
jmp
loopne
sub
out
xor
cmp
std
shl
cmp
lock
stc
or
fsubp
test
hlt
ror
rcr
lret
xor
roll
int
leave
icebp
loop
lock
rol
rcl
loop
xor
hlt
int3
sar
repz
in
ret
test
ffreep
mov
int
sub
out
hlt
cmp
rcr
aas
loope
into
in
call
out
test
in
jmp
fdivr
xchg
jmp
in
in
lret
in
jmp
lds
lret
mov
mov
enter
in
out
rcr
cmp
ds
adc
icebp
mov
fnstsw
jmp
jmp
xchg
xchg
clc
neg
cli
cld
out
ds
adc
stc
aas
fimull
mov
repz
jmp
xor
repz
stc
icebp
push
hlt
out
cmc
cmp
jecxz
mov
jmp
lret
iret
div
in
xlat
shr
cmc
in
jmp
fmul
xor
xor
ret
in
cld
fcmovbe
out
call
shll
in
fcmove
in
testl
repnz
add
fcmovb
sar
hlt
faddl
test
iret
addb
xchg
loope
out
fsub
xchg
aas
ror
in
iret
lret
repz
cmp
and
out
cmc
addl
aam
out
sti
clc
iret
cmp
out
stc
fstp
ret
loope
fiadds
fdivrp
out
enter
int3
lret
xlat
fidivrs
in
sti
sti
int3
idivl
and
xchg
mov
aad
sub
in
lock
repnz
ret
mul
loope
fstp
in
xchg
repnz
mov
xor
repz
fdiv
sti
call
test
jecxz
repnz
mov
in
ljmp
shl
in
out
icebp
in
test
sub
cmp
loop
stc
addl
nop
jecxz
icebp
das
shl
cli
in
enter
cmp
and
icebp
shl
test
in
out
xchg
jmp
out
loope
lret
aaa
int3
iret
out
fmul
fmul
ds
addb
in
iret
call
lret
mov
int3
cmp
repz
aam
cld
dec
in
fnstsw
sti
hlt
testb
fists
das
aad
shr
ss
stc
hlt
shl
rol
loopne
hlt
in
and
loope
fcmovnbe
into
test
ljmp
aam
cmc
lret
filds
not
mov
out
sbb
in
icebp
out
div
in
clc
lret
cmp
cli
xor
clc
sti
cld
test
sti
ffree
out
in
in
in
into
fiadds
xor
xor
out
fsubr
aad
fcmovb
mov
cmc
sbb
in
iret
xchg
filds
lock
ss
fst
shl
clc
aad
ds
aad
loope
out
leave
icebp
ret
out
shr
xchg
xor
in
rcl
das
out
clc
shr
fsubr
fidivrs
sar
enter
mov
adcb
fnstenv
int3
fcom
xor
hlt
ljmp
icebp
std
fmull
std
sti
fcmovnu
cld
lock
hlt
icebp
int
call
fistpll
rcl
aam
rcl
enter
and
out
out
xchg
lock
xor
cmp
je
mov
jmp
leave
rcl
ret
ffree
arpl
lea
mov
add
ret
xor
ss
int3
repnz
out
out
repnz
in
jecxz
out
filds
enter
cmp
cmp
aad
cld
sti
in
in
in
loope
jmp
hlt
rcl
out
call
enter
not
icebp
icebp
out
in
cli
fucomp
std
jecxz
ljmp
idiv
fnstcw
in
test
aad
xor
enter
test
fcmovu
ljmp
ror
rcl
aad
aad
std
hlt
loope
fidivrl
mov
lret
ftst
out
ror
out
xor
lret
xor
enter
shr
xlat
jecxz
cmc
loop
aam
and
out
in
in
test
int
in
sar
enter
fnstcw
aas
fildl
ret
call
call
aam
xor
cmp
fnstsw
fsubr
test
or
clc
jecxz
fiadds
jecxz
int3
ss
into
ror
xor
hlt
aas
int
iret
cmp
in
clc
std
loop
in
aam
leave
mov
call
fdivr
cld
cli
in
cmp
imul
lea
hlt
das
jecxz
into
cmp
int
cmp
cmp
sti
rol
aad
jecxz
lret
out
mov
shl
xor
icebp
int3
shl
cmp
fdivr
ret
test
mov
xchg
jecxz
aad
ljmp
repnz
cmp
and
stc
ret
fsubrp
xlat
ret
shl
int3
xor
in
ljmp
aam
std
repnz
rcl
out
xchg
int
sar
in
sar
iret
aaa
rcr
call
shl
loope
test
mov
mov
decl
aas
out
clc
cmp
sub
repnz
stc
stc
jecxz
faddp
cli
neg
testl
lock
std
in
xor
out
aad
fcmovnb
cmc
cmc
std
int3
dec
stc
incl
into
in
lret
in
ljmp
int3
out
aas
ds
faddl
incl
aam
out
out
sti
cmp
fucomi
cmc
rol
cld
leave
loope
mov
mov
cmp
fcmovne
cmc
jmp
std
loop
clc
addb
jmp
mov
mov
mov
call
aam
cmp
flds
enter
into
fcmovnu
into
jecxz
int
nop
aam
xor
shl
mov
fadd
std
push
incb
xlat
test
lret
xchg
xchg
mov
in
xor
xor
xor
icebp
xor
adc
icebp
ret
adc
mov
jecxz
xchg
loop
call
in
fsubrs
clc
adc
rcl
xchg
cmp
mov
std
fisttpll
out
out
repnz
aaa
iret
test
out
stc
or
sti
fcmovu
in
fmull
clc
cmp
cmp
into
lock
repnz
in
aas
icebp
fdivr
imul
in
or
lret
nop
xchg
repz
jmp
cmp
leave
lret
loopne
out
jmp
xlat
repz
loope
xchg
mov
lret
roll
ss
ror
shl
int
ret
push
sub
out
out
call
jmp
lret
idivb
sti
cmpb
out
loopne
cmp
out
lret
fisttps
ret
cmp
in
cli
repnz
div
not
ds
xlat
test
mov
into
leave
in
in
loop
stc
cmp
lock
cld
repnz
aam
ret
loope
std
repz
fcmovnb
out
test
out
lret
xchg
mov
stc
sub
out
lret
fsub
repz
test
out
fadd
test
cld
cld
xchg
out
mov
das
shrb
icebp
fdivrs
idivl
std
roll
flds
jecxz
loop
loopne
rcr
loopne
jmp
out
fxch
repz
in
clc
fxtract
loop
sarl
clc
loop
stc
loop
decb
sub
in
fcmove
in
cmp
cmp
in
cld
addl
jmp
mov
jmp
into
rcl
rol
fcomp
lahf
mov
popf
jae
jg
roll
jle
out
enter
xchg
dec
fcomip
xor
xor
lock
hlt
fmul
cmp
or
aad
cli
jmp
fildl
in
xor
aad
fstpt
sarl
lock
rolb
aam
out
xlat
loop
xchg
fldl2t
cmp
icebp
fcom
aad
ds
hlt
aam
call
mov
enter
repz
iret
out
xor
clc
cmp
hlt
cmp
in
mov
in
int
shrb
in
ljmp
leave
stc
into
hlt
fucom
mov
jmp
mov
les
xor
clc
xlat
clc
sarl
in
repnz
test
mov
mov
lock
int3
fdivrp
loopne
xor
xlat
ret
xchg
fcomp
fadds
nop
mov
fdiv
out
xor
lret
aad
cmp
int3
rol
fsub
or
aam
fsub
call
icebp
iret
nop
xchg
ret
aam
fnstcw
leave
repz
out
adc
sti
jmp
out
lret
enter
cld
into
mov
xor
sti
out
out
cmp
clc
sar
cmp
sub
cli
sti
out
loopne
xchg
rclb
aaa
call
fcmovnbe
fstp
jecxz
out
icebp
jmp
loop
in
lock
xchg
loopne
das
jmp
cmp
aaa
fcmovnu
hlt
test
rcl
in
hlt
out
in
cld
sub
fisttps
ljmp
clc
aad
in
stc
fcmovnu
hlt
fcmovnb
stc
mul
mov
int
loopne
loop
jmp
lock
aas
xlat
test
sti
test
jmp
in
test
xchg
leave
out
fpatan
out
shr
incb
fsubp
fcmovnb
cmc
out
call
test
rcr
cmc
bnd
ss
aas
sar
cmp
rcr
fistpll
aas
clc
jecxz
test
xchg
rcr
xchg
jmp
aam
in
sti
iret
into
aaa
cmp
ret
into
rcr
loopne
loopne
out
jecxz
cli
call
call
div
aam
lock
repnz
cmp
fdiv
fldl2t
addl
in
or
loopne
ret
cli
cli
leave
fidivl
int3
rol
ds
iret
mov
cmp
hlt
jecxz
faddp
sbb
rclb
call
xor
std
cld
rol
xor
ret
rorl
out
rol
icebp
jmp
in
ss
xlat
cmp
shl
jmp
test
mov
repnz
std
xchg
loope
repz
cmp
xor
in
hlt
in
out
in
lea
cli
mov
xlat
icebp
in
xor
cld
fdivrp
rcr
aam
cld
loopne
ds
fucom
out
jmp
aam
xor
xor
xor
lret
shl
stc
in
mov
xchg
sti
lea
icebp
in
shr
into
into
iret
shr
repz
in
shr
loop
ret
test
fxch
leave
aam
xchg
enter
sti
cmc
fdivp
into
out
fcmovnu
icebp
test
imul
movb
fiadds
shr
jmp
sbb
repz
lret
in
nop
repnz
out
ss
int
std
repnz
out
rolb
jecxz
xchg
in
xchg
jecxz
jmp
in
iret
iret
cmp
shll
out
in
enter
xlat
cmp
in
sti
fsub
test
lret
ljmp
repnz
out
std
hlt
std
jmp
sar
hlt
fcmovnu
out
cli
loope
xchg
loopne,pn
in
sti
xor
repz
in
sti
cli
loop
lret
jmp
fmull
lock
in
out
ljmp
out
std
leave
clc
shr
mov
in
lock
out
out
aad
enter
repnz
rcl
cmp
in
loopne
aad
or
mov
mov
shrl
clc
fdiv
cli
cmp
aaa
repnz
fcmovnb
fdivr
idiv
xchg
fcmove
test
xchg
out
ret
lret
repz
cmp
test
leave
mov
jmp
push
mov
sub
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
jmp
into
aas
rol
rcl
aam
pop
xchg
and
or
adc
addr16
push
add
cli
fistpll
rcl
icebp
rorl
clc
cli
out
enter
fildl
out
rcl
leave
int3
xor
sti
aam
cmp
mov
cli
flds
clc
ljmp
cmp
cld
rcr
fucomip
fxam
fcomip
in
mov
fiadds
in
aad
in
xor
aas
fidivrl
cmp
testl
fucomi
ljmp
int
ss
fsubrp
idiv
lock
cmp
jecxz
and
loop
lret
jecxz
shll
in
jmp
in
int
and
div
mov
sti
clc
shr
fisttpl
xor
xor
shl
jmp
fcmovne
hlt
clc
fcmovu
fadd
test
test
in
lret
repz
cli
stc
cmp
repz
xacquire
jmp
in
in
in
loop
hlt
div
aam
int
ljmp
fcmovnbe
mov
out
enter
loope
xchg
rorb
sarl
sarl
aam
call
fdiv
aas
decl
orl
jecxz
hlt
clc
in
xor
fdivr
iret
push
into
and
rcr
aad
in
jecxz
fsts
mov
cli
cmp
in
cmp
div
lock
fdivp
stc
test
orl
mov
leave
fadd
int3
in
ss
out
call
cmp
rorb
out
test
test
jecxz
test
iret
loope
loop
cmp
movb
fcomip
nop
shl
sub
cli
fdiv
aad
clc
icebp
ret
ror
loopne
or
fadds
fst
in
icebp
xlat
aaa
lret
call
fxtract
rcl
icebp
cmc
addb
leave
nop
mov
dec
in
out
xor
enter
xlat
xor
loop
in
mov
in
jmp
xchg
icebp
cs
shl
cmp
jmp
leave
iret
out
sti
aam
sarb
out
loope
xor
jmp
int
repnz
lret
std
out
sarb
fidivrl
out
cmp
sub
cli
int3
test
rcl
in
std
cmp
iret
ds
xlat
faddl
jecxz
in
rolb
int
out
lret
jmp
cmc
cmp
hlt
incl
leave
out
loope
repnz
lret
div
in
lret
fyl2xp1
xor
aad
in
hlt
sub
adc
enter
into
in
enter
shl
icebp
loope
rcr
fld
fstp
rcl
and
leave
in
fcomi
xchg
int3
aas
int3
in
fdivs
cmp
into
loop
clc
add
fimull
repnz
xchg
hlt
ss
shlb
aam
cmp
fxch
mov
out
test
xchg
xchg
in
aaa
bnd
iret
aam
enter
fiaddl
fcmovne
lea
sti
int3
in
xchg
call
cld
repz
aam
shl
ror
xlat
icebp
test
mov
in
mov
int3
fmulp
and
ret
idiv
out
cmp
test
push
jmp
jecxz
fidivrl
xchg
lret
std
cld
decb
in
lret
int3
cmp
in
sar
into
iret
clc
xchg
cmp
mov
jecxz
fsubr
int
movl
std
sar
cmpb
cmp
shl
ljmp
in
jmp
cmc
aam
out
lret
std
lock
repz
iret
call
mov
mov
xchg
xor
jmp
sarl
cmp
cli
fldl
test
xchg
xchg
cmc
xchg
xor
ljmp
cmp
out
cmp
cmp
test
addl
loopne
out
std
enter
lret
std
fbstp
iret
loop
testl
fisttps
int3
loope
aam
call
sar
enter
out
xchg
lret
leave
ljmp
xor
ffree
and
hlt
aad
xlat
loope
fmul
stc
mov
in
mov
loope
ljmp
aad
cmp
xor
cmp
in
clc
cli
hlt
out
cmc
fneni(8087
ljmp
iret
mov
clc
cmc
ljmp
fcmovnb
vpsadbw
repz
fmulp
fdivr
iret
sti
lock
lret
repnz
rcr
ljmp
loope
mov
loop
int3
aad
mov
in
test
push
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sub
sub
mov
or
jmp
ret
fmul
fstp
xchg
aaa
pop
adc
lret
loope
sbb
jg
push
add
hlt
xchg
xor
idiv
fnstcw
xlat
fstp
loope
icebp
ret
test
faddl
fldl
xor
call
lret
ret
div
lret
call
xchg
sub
xor
jmp
aad
aad
repz
ret
or
mov
enter
in
lret
hlt
ss
xor
shr
call
out
rol
shl
sti
cld
test
sti
ror
fdivr
xchg
xchg
rcl
repz
shl
shl
rcr
aad
out
in
aam
loop
loop
fstp
test
out
lea
cmc
cli
out
sarb
aam
shl
into
adc
ret
out
ljmp
lret
fcmovnb
in
fdivrp
addl
adc
in
cli
sub
repz
rcl
cmc
fsubp
loopne
ret
loope
decl
int3
jmp
sti
lret
enter
rol
xor
lock
xlat
aam
fldl
fsincos
xlat
inc
test
xchg
lock
cmp
cmp
cmp
out
in
xchg
stc
idivb
in
clc
mov
enter
in
cmp
iret
in
icebp
jecxz
call
test
cmp
jmp
std
loope
enter
shlb
ss
xlat
cmp
xor
ss
cmp
aas
std
aad
lret
sti
xlat
clc
mov
repz
ret
ljmp
out
sarl
out
incb
cs
iret
jmp
rcr
std
std
mov
fdivrl
cld
loopne
repnz
repz
in
ljmp
cld
int
lock
xchg
ljmp
loop
in
hlt
xor
shr
clc
cld
repz
fiaddl
aaa
into
iret
test
fadd
test
sub
cmp
xor
xor
repnz
lret
cmc
fdivr
fcmovnbe
in
ret
lock
cmc
cmp
rclb
in
int3
std
in
fdivr
or
rcl
ds
stc
mov
in
out
jecxz
test
mov
shl
test
rcr
aad
in
repnz
imul
call
nop
out
xchg
out
cmc
sub
out
shll
iret
sti
cld
aaa
fmul
int
fsubrp
enter
mov
in
test
loope
lea
fidivl
repz
stc
sti
lret
jecxz
ds
jmp
int
mov
ror
jecxz
loop
leave
into
fdiv
in
lret
sar
shl
mov
test
int
std
cmp
rcl
in
imul
cmp
shl
jmp
adc
loope
out
hlt
jmp
int3
loop
loop
rol
iret
rcl
ds
lock
xchg
xchg
call
fsubp
icebp
mov
stc
out
fmul
cmp
int3
icebp
out
mov
jecxz
leave
into
orb
xor
cmp
cli
in
cmp
add
xchg
popl
iret
cmp
xlat
repnz
or
fcom
rol
loope
incl
jecxz
cmc
repnz
int
leave
out
fnstsw
hlt
loopne
into
repz
add
fiaddl
lret
enter
and
fadd
enter
cld
repnz
cmp
loopne
aad
hlt
inc
mov
in
mov
leave
iret
stc
out
int3
in
aad
rcr
cmc
in
fildl
enter
lret
mov
int
in
ror
fcmove
icebp
fstp
xor
shl
jmp
lret
mov
mov
ret
jmp
sar
aas
ds
xor
lret
test
mov
jmp
xor
ror
jmp
rol
out
adc
mov
jmp
into
loope
jmp
into
xlat
neg
rolb
jmp
mov
repnz
sar
shll
ss
fmulp
out
in
rolb
fsub
call
shr
fisubrl
in
fiadds
ds
cmp
rorl
xor
filds
int
repz
not
jmp
cmc
std
lds
mov
clc
dec
loopne
xchg
and
in
rcl
ds
icebp
loope
neg
ffree
ret
enter
lret
xchg
fbstp
icebp
enter
shr
out
enter
sarl
hlt
ret
std
add
mov
or
mov
mov
adcl
add
xorl
jmp
ror
lret
int
int
bound
insl
jb
jg
push
add
adc
mov
nop
ret
in
jecxz
lret
jecxz
xor
icebp
shr
cmp
ds
out
in
clc
mov
jmp
fsubrp
xchg
call
shl
leave
xlat
divb
sar
aaa
ffree
mov
ljmp
in
int
repnz
stc
out
iret
jmp
cmp
fucomp
cli
out
cld
jmp
ret
fstp
in
roll
rol
in
enter
repz
int3
into
xchg
call
loop
mov
fbstp
loop
in
cmp
int3
sarb
loop
sti
sti
cli
mov
call
test
cmp
lock
fdivp
int
loop
std
fnstsw
xlat
testb
in
cmc
aad
int
hlt
in
shl
fmul
rcl
jecxz
fdivr
add
fadd
fmull
aam
lret
xor
std
iret
ss
rcl
ret
ds
stc
out
test
shlb
into
aam
fcmovnb
std
out
addb
lret
fsub
movl
div
iret
fdivp
int3
div
loop
fcmovb
xchg
cli
lret
mov
clc
in
mov
fsubrp
loopne
shl
ss
repz
call
stc
fcomi
movl
and
xchg
in
iret
fxtract
in
call
ret
icebp
shl
add
lret
sti
fsubr
sar
lret
into
fdiv
out
lock
cmc
cmc
hlt
sbb
iret
cmp
loopne
fcmove
faddl
cmp
imul
jmp
ret
vpsubq
fdiv
mov
xchg
rclb
mov
leave
icebp
aad
xor
cmp
loope
sar
ret
jmp
nop
in
xchg
repz
ffree
fcomi
aam
lock
sti
jecxz
fucomip
mov
loopne
into
jmp
das
enter
iret
enter
repnz
hlt
stc
add
leave
mov
das
shl
cmp
rolb
cmp
mov
aam
loope
lret
kmovw
xor
cmc
jmp
leave
xor
loope
into
lock
out
xor
cld
leave
les
leave
orb
sti
aaa
out
shl
int3
rolb
sub
loope
out
int3
shr
stc
shll
in
sar
cmp
ret
jmp
test
leave
rcr
mov
mul
xor
ror
aam
aas
in
repz
cmp
cli
in
ret
mov
decb
xor
out
iret
cmp
cmp
iret
std
sar
enter
fcomp
jmp
lock
xchg
sub
out
sti
out
lret
hlt
rcl
push
cmp
rcr
stc
jmp
enter
fstl
out
enter
mov
roll
mov
add
iret
mov
lret
nop
mov
das
fmul
call
clc
lock
fadds
lret
lret
out
mov
jmp
in
fst
hlt
icebp
idiv
shlb
out
cld
cld
into
mov
cmp
fdivrs
cmp
neg
fstpt
cmp
jmp
lock
ret
ror
shl
cmp
jmp
idivl
rcr
test
out
fdivrp
fiaddl
xchg
test
xor
in
aad
jmp
sarl
test
add
leave
mov
loopne
in
rclb
iret
jecxz
lock
cmp
out
loopne
loop
ret
mov
orl
out
repz
xor
jecxz
rcl
std
loope
loopne
mov
repnz
jmp
ss
cmp
hlt
idiv
in
shl
xchg
out
call
jmp
stc
out
cmp
xlat
fldl
mov
fisttpl
repnz
jecxz
fstpt
in
repz
cld
fcomp
lock
jecxz
repnz
repz
loope
cld
cld
leave
out
xchg
cmp
out
ror
cmp
cld
ds
loopne
call
sti
repz
cmp
hlt
call
cs
repnz
cmp
sbb
std
out
orl
out
lret
fucomi
aam
out
repz
out
call
mov
out
fstp
jecxz
fisttps
repnz
jmp
cmc
push
movzwl
sub
mov
mov
add
mov
xor
negl
movl
adcl
jmp
ror
int3
mov
cmp
jne
jle
add
cli
stc
jecxz
fstpt
mul
testb
out
shl
ljmp
lock
std
sarl
aas
shr
mul
rcl
loop
mov
dec
loop
decl
lock
icebp
out
fucomip
in
stc
cli
fdivrp
rol
cld
int
mov
sbb
lret
shl
repnz
cmc
enter
lock
stc
cmp
into
shl
addb
rorb
ret
fdivs
out
xlat
cmp
clc
lret
repnz
hlt
jmp
fdivr
loope
out
fiadds
imul
icebp
neg
ds
cmc
out
xlat
loopne
xchg
decl
in
xchg
ror
cmp
xor
jmp
cmp
enter
ror
jmp
repz
fnstenv
repz
test
std
aad
in
std
ret
loopne
test
xchg
fadd
divl
int3
fcmovu
fidivrl
cmp
loope
jecxz
in
fildl
out
enter
repnz
cmp
cmp
cmp
sti
out
lret
int
rcl
fiadds
cmc
loopne
dec
stc
leave
rcl
mov
fdiv
jecxz
aad
fucomp
in
aad
cmp
ret
shr
in
xchg
int
xchg
icebp
shr
jecxz
lret
fdivrs
repz
ljmp
vpextrw
lds
ror
jmp
in
lret
aaa
iret
stc
aad
incb
aam
xlat
sub
test
aam
in
ret
clc
stc
cmp
rcl
rcl
repnz
add
test
xchg
jecxz
jecxz
cmc
jecxz
xor
xor
xlat
loopne
lds
mov
std
iret
xchg
xor
xlat
lret
lock
int
fcmovbe
out
jecxz
in
in
fcmovnbe
std
xchg
ljmp
cmc
aaa
xor
xor
ljmp
repnz
xchg
jmp
rclb
das
int3
test
int3
stc
loopne
testl
mov
repnz
jecxz
xor
int3
lret
cmp
aas
roll
out
out
out
nop
shl
clc
jmp
xor
out
aad
repz
aaa
aad
rcr
std
cld
jecxz
test
jmp
in
loopne
fucomip
into
shl
hlt
cs
idivb
loopne
xchg
std
leave
sar
mov
incl
aaa
enter
shl
sarl
fucom
hlt
cmp
rolb
lret
lea
in
cmc
xlat
cld
out
out
xor
sarl
sar
sbb
stc
cli
ret
orl
jmp
lds
cmp
test
ljmp
jecxz
std
ljmp
cs
jmp
test
aas
iret
xlat
call
xlat
cli
out
fcmove
mov
int
rol
clc
icebp
repz
ljmp
aam
mov
enter
lea
into
repnz
div
cmp
shr
imul
testb
stc
filds
int
xorb
xor
cli
jmp
xor
cmc
fmull
sbb
mov
in
rcr
aad
out
fcomi
loopne
shl
xlat
ljmp
in
std
lock
loope
jmp
in
lret
cmp
shl
fsubp
xor
stc
xchg
mov
xchg
mov
loopne
aam
cli
xlat
std
icebp
aas
fcmovb
cmp
and
xlat
enter
mov
out
mov
jmp
into
cld
cmp
out
shl
xchg
ret
xchg
sbb
out
int3
mov
fcomi
fdivrl
enter
aam
ffree
loopne
fcomip
out
in
mov
in
xor
in
fdivr
out
aad
flds
add
xchg
xchg
in
repz
fcom
loope
jmp
aam
xor
in
aad
mov
sti
rorl
sub
out
xchg
out
sar
fptan
sar
jmp
icebp
loop
repnz
mov
out
or
loopne
in
xchg
hlt
icebp
int3
xlat
fmul
leave
dec
aas
pushl
les
loop
lret
incb
xor
lret
les
in
int
shl
xlat
mov
add
filds
xchg
xor
xlat
mov
rol
std
ret
sti
mov
stc
sti
popl
fimuls
and
lods
bound
inc
arpl
add
movl
jmp
cmp
movl
jne
jmp
aam
aam
ds
adc
sbb
jp
jle
add
xor
enter
std
cli
rol
cmp
std
rorb
sti
stc
ljmp
lret
loop
int
div
aam
cli
not
aad
mov
fcmovnb
fptan
sub
test
hlt
xor
repnz
neg
into
xlat
int
sti
out
shr
shl
hlt
cli
clc
lret
out
sar
loopne
adcb
cmp
shl
fidivrs
sti
shl
add
loop
mov
xchg
sbb
jmp
mov
shl
fcmovne
cli
lret
divl
and
rcr
roll
test
lret
xchg
loopne
out
cmp
ss
call
cmp
xlat
jecxz
in
test
int3
repnz
lret
enter
fildl
cli
fninit
loope
decb
lret
lock
sti
xor
out
rcl
rol
sar
rolb
mov
ljmp
aad
repnz
cmc
cmp
cmp
fcmovb
repz
call
xlat
mov
in
mov
sar
xor
int3
xor
lret
int3
in
idiv
test
jmp
sbb
int
fnstenv
out
in
ds
shlb
int3
hlt
cli
aas
cld
std
rcr
out
jecxz
std
call
xchg
rol
ret
in
shr
cmp
out
loopne
call
cli
mov
cmp
fildl
in
jmp
into
lret
cli
ret
sbb
stc
mov
jmp
jecxz
call
divb
call
cmp
std
ret
loope
rcl
in
out
mov
jmp
xlat
out
lret
into
fldl2e
stc
out
loope
loop
call
lret
nop
out
ror
xchg
divb
ror
clc
idiv
aad
loop
sar
into
aam
idiv
cld
ljmp
repnz
cmp
shlb
repz
stc
hlt
les
ljmp
divl
out
fcom
xor
in
loope
loope
fcmove
cld
and
mov
cmp
repnz
ret
aaa
jecxz
lock
int
or
into
xlat
out
clc
addl
jmp
xchg
in
enter
lds
jmp
loop
cld
mov
cmc
aad
in
xchg
xchg
jmp
int3
div
lret
lret
and
aad
sbb
idiv
mov
xlat
xor
xor
stc
aad
add
out
test
faddl
out
jmp
jmp
lret
cmp
lret
sti
fsubr
stc
aam
jmp
out
out
shr
loope
out
test
xlat
xor
sar
sti
sti
repnz
cmc
les
jmp
fucomip
loop
hlt
enter
adc
roll
cld
testl
shrl
xor
cmc
cld
int3
repnz
div
lret
cmc
clc
icebp
int
std
rol
out
mov
sti
neg
mov
xchg
repz
mov
lret
xor
hlt
in
stc
clc
hlt
fcmovnbe
lret
ret
std
cli
ds
fstp
leave
aad
in
xchg
xchg
sar
into
xchg
into
xlat
fdivrp
repnz
cld
fincstp
fildl
mov
xchg
mov
rcl
xor
jmp
in
std
test
cmc
out
fmul
cld
xchg
int3
hlt
sub
call
aaa
repz
jmp
lock
rcl
inc
repnz
testl
sarb
stc
icebp
xor
lret
rcl
repz
fcmovnb
mov
fmuls
out
in
xor
ss
xlat
cmp
sar
loopne
hlt
and
sti
mov
std
mov
jmp
std
loopne
ret
in
cmp
int
repnz
or
fstpt
rolb
mov
sar
jmp
int
out
cmp
int3
cmc
fcomip
out
mov
cld
in
int
jmp
enter
cmp
fdivrs
std
hlt
out
out
repnz
out
fucomi
mov
test
stc
aad
enter
lret
jecxz
sarl
cmc
cld
clc
fcomp
fisttps
test
call
clc
idivl
imul
enter
cmp
stc
out
roll
jecxz
mul
loope
ljmp
int3
jmp
cli
out
std
int3
neg
sti
out
shl
decb
xchg
mov
out
ljmp
rcl
adc
jmp
sub
mov
movl
mov
mov
mov
mov
jmp
int3
ret
int
mov
pusha
das
xchg
les
and
push
add
mov
call
repz
fidivl
fsubrp
hlt
enter
aam
out
sti
loopne
xlat
mov
vfrczss
xchg
aam
in
fcmovne
ss
test
xlat
cld
clc
in
shr
mov
in
loope
repz
aad
rol
jecxz
fcmovnbe
in
fdiv
sti
cmp
fsubp
fldl
lret
test
incl
loopne
ret
int3
out
int
fneni(8087
rcr
in
cmc
and
aam
ret
cmc
icebp
loop
test
xchg
out
in
ljmp
icebp
cmp
into
cld
not
shl
in
test
in
and
in
mov
jmp
cld
int
fsubr
xchg
loop
lret
int3
in
or
xchg
ret
xor
cmp
fstp
cmp
repnz
aam
clc
jecxz
jecxz
mov
in
nop
out
ljmp
ljmp
addb
test
jmp
lret
jecxz
out
out
in
cld
cli
out
imul
aam
xlat
shl
sti
repz
cld
int3
in
inc
xchg
fucomip
aam
xor
into
cmc
xor
or
repz
idiv
cld
enter
fucomip
cld
fdivrp
loop
xor
enter
out
cmc
out
ljmp
ret
mov
fmul
int3
int
mov
repz
aas
repnz
sti
clc
repnz
rcl
aas
mov
lret
int
nop
xlat
clc
in
shr
out
xor
sarb
ret
loope
loop
out
nop
xchg
fbstp
shl
cmc
fdivr
in
stc
ljmp
out
push
xchg
clc
jmp
add
out
fsubrp
divl
out
int
stc
hlt
xlat
icebp
xor
out
loopne
mov
repnz
in
iret
xor
fdivrl
std
xor
stc
ljmp
xchg
lock
lret
icebp
mul
lock
xlat
cli
icebp
iret
fisttps
hlt
std
call
out
in
mov
call
sti
fucomi
fdivr
ror
ret
icebp
in
in
mov
mov
loop
in
hlt
hlt
clc
leave
std
leave
rcr
hlt
fxch
test
out
vpsubsb
lret
lret
out
aad
leave
iret
rcl
cmp
cli
ds
rol
xlat
out
out
mov
sti
mov
enter
incl
xor
into
sbb
iret
aad
adc
repz
mov
mov
std
xchg
shlb
lret
sar
cmp
flds
cld
fucomi
mov
lock
into
mov
in
ljmp
jmp
repnz
out
aam
int
fcmove
jmp
xchg
mov
sub
lds
icebp
cmc
enter
fdivr
stc
sar
loop
clc
mul
fdivrp
fcmovne
test
shll
ljmp
loopne
xchg
xlat
fsubrp
fcompp
leave
mov
call
not
repnz
mov
call
les
or
shll
out
iret
lock
stc
cli
repnz
loope
lock
repnz
cmp
clc
xchg
out
icebp
loop
out
idiv
xor
lret
std
cmp
repz
testb
fsub
fcom
repnz
ror
fcomi
hlt
cmc
fmul
test
movb
in
into
xchg
int
xchg
std
xchg
lret
iret
fsub
aas
shl
stc
cmp
jmp
nop
and
loop
hlt
xor
cmc
jmp
imul
jmp
into
sti
xor
test
incb
lea
rol
lret
repnz
cmp
cmc
shl
rol
test
shl
jmp
lret
xor
jmp
aas
stc
aaa
imul
fdivrs
shr
cmp
fadd
repnz
test
lret
xchg
in
out
out
cld
int3
and
in
repnz
lret
aam
int
jecxz
fcomip
idiv
loop
shr
std
in
icebp
mov
xor
adc
clc
cmp
stc
in
ds
idivl
rol
in
aad
sti
into
enter
xchg
in
clc
in
fmul
icebp
std
loopne
fnstcw
les
loopne
lret
fmull
shr
xchg
xor
enter
int3
xor
jecxz
cmp
rorb
leave
aaa
xor
divl
ds
fcomp
loop
decb
cmp
test
in
test
aad
xor
cmp
repnz
imul
mov
jmp
cmp
jmp
aad
aad
aad
aad
push
push
scas
pop
clc
out
cmpsl
lret
jle
add
rcr
repz
aam
xchg
jmp
decb
incl
xlat
in
out
cmp
lret
out
incb
out
adcl
in
aaa
xlat
icebp
call
loopne
push
les
iret
jecxz
shr
out
rol
repnz
call
fucomp
rcl
rcl
in
xchg
testl
in
in
enter
div
jmp
stc
cmc
notrack
std
clc
aam
aas
out
fiadds
jmp
ss
out
aam
cmp
shr
cld
aaa
shl
ret
sbb
test
fimuls
imul
repz
xor
fdiv
cmp
fcomi
loope
fsub
aad
leave
fucomp
out
fmulp
lret
loopne
cli
cmp
hlt
out
cmp
xor
rcl
into
into
jecxz
repz
fiaddl
icebp
in
out
out
out
in
jmp
sarb
add
fdivrp
mov
leave
std
addl
hlt
in
incb
in
sbb
rcl
add
xchg
out
lret
loope
in
mov
iret
vpsubsb
xor
fucomip
stc
xor
test
fcmove
hlt
fcomi
loop
rcr
sar
test
fildll
sub
out
loopne
ds
std
fmul
iret
sarb
repz
and
jmp
idiv
aam
jmp
icebp
rcl
xlat
out
ljmp
mov
jmp
loopne
aam
lret
iret
cmp
icebp
xlat
cmp
sarl
ffreep
fcmove
out
fucomip
incb
shr
rol
cmp
call
adc
out
test
ret
aam
out
xlat
in
ror
aam
int
shr
jmp
aad
sti
cmp
repnz
aad
stc
cli
and
in
adcb
les
lock
fmulp
fbstp
out
in
lock
jmp
jmp
hlt
shr
iret
in
in
repz
lret
cmp
rol
out
movl
jmp
xchg
ss
in
jmp
aaa
lret
enter
ret
hlt
testl
cld
out
jmp
xor
loop
xor
int
icebp
fdivrl
loop
iret
hlt
mov
ror
test
fldl
xchg
xor
shl
in
icebp
aam
cmp
stc
xchg
sbb
incb
cli
mov
in
repnz
fmulp
iret
cmp
aad
test
orb
in
loop
mov
loope
repnz
into
fptan
sarb
out
ret
xchg
stc
icebp
fld
mul
mov
sti
call
xor
repz
sti
cmp
xor
xchg
xchg
vpmacssdql
jmp
xor
fnstsw
test
sbb
mov
loop
mov
mov
icebp
mov
enter
lret
lret
bnd
fldl
std
fsub
jmp
int3
out
mul
ljmp
out
stc
xlat
cmp
lds
cmp
into
mov
jecxz
in
out
jmp
call
cmp
fdivrs
fchs
stc
rolb
test
loop
out
div
icebp
xor
shl
leave
stc
cmp
cmp
fcomi
loope
sti
icebp
mov
lret
stc
ljmp
xor
vpor
cmp
jmp
in
sti
fxch
rolb
fdiv
mov
xor
sub
stc
cld
fistpll
lock
cmp
in
mov
loopne
int3
std
lret
out
sub
call
loop
loop
aad
fnstsw
loop
filds
xchg
xacquire
cmp
lock
cmp
ds
in
loop
std
vpsrad
fxch
repz
mov
into
aad
out
rol
sti
shlb
not
repz
clc
fdivrp
into
int3
out
out
mov
call
test
jmp
rcr
cmp
icebp
clc
test
in
rcll
sarb
cs
cmp
jmp
stc
fcmovne
cmp
fsubp
test
enter
testb
aam
lret
sti
test
cmp
test
xchg
fildl
lock
out
jmp
cmp
out
sti
fstpt
adc
ret
in
out
out
icebp
leave
aam
ljmp
ffree
ds
fsubr
out
aad
out
movb
div
in
in
out
pause
shll
lret
call
or
mov
jmp
aas
into
lret
leave
aam
dec
jo
jnp
pop
cmp
push
add
fld
fidivs
into
cmp
lret
adc
clc
xlat
neg
mov
cli
into
incl
xchg
into
fadd
in
int
sar
or
aas
cld
loope
loope
out
iret
fiadds
xor
jecxz
stc
shlb
fdivp
fldl
aam
rolb
test
loop
mov
in
cmc
cmp
std
int
aad
iret
div
adc
test
jmp
xchg
cmp
icebp
shl
stc
cmp
ds
fdivr
testl
int3
or
xchg
cmp
shr
lret
hlt
cmp
rcl
cmp
mov
cli
ret
enter
loopne
xchg
aam
aad
aaa
icebp
ljmp
int3
xlat
neg
out
repnz
ret
leave
loopne
enter
xchg
enter
xor
out
lock
lret
ds
stc
xchg
sti
adc
mov
xchg
in
cmc
iret
xlat
xor
fcomip
call
cmpb
repnz
mov
jmp
ljmp
xchg
loope
cmc
into
out
cmp
xor
inc
out
iret
loop
fcomi
aad
lret
orb
fxch
repz
cmp
aad
cmp
xlat
xlat
std
movl
out
hlt
cld
icebp
xchg
ljmp
cli
fsubr
int3
ret
sti
icebp
ret
mov
addl
jmp
in
jecxz
aad
leave
ljmp
fdivrp
hlt
mov
xchg
in
in
out
sar
cli
hlt
lret
stc
cld
fnstsw
hlt
testl
clc
sti
mov
repnz
fcmove
rcl
fcmovnu
in
shl
cmp
cld
fcmovnu
addl
call
xchg
xor
xor
aad
cmp
sar
std
std
hlt
test
hlt
rolb
into
mov
xchg
shl
jecxz
in
lock
cmp
iret
loop
out
xchg
loope
hlt
out
decb
repz
test
jmp
out
loop
fsubrp
fucom
repz
jmp
mov
and
out
loope
repz
rcl
cmp
icebp
aam
stc
roll
addl
fldl
lret
lret
lret
hlt
loope
mov
std
in
ror
repnz
cs
xor
cli
cld
cld
inc
stc
in
add
out
int3
call
lock
out
sti
lock
lock
xlat
fiaddl
sar
enter
out
int
lock
shl
das
aam
cmp
cmp
in
fsub
repz
repnz
clc
iret
icebp
xchg
icebp
xchg
iret
repz
xor
fstpt
aam
repz
hlt
stc
cmc
aam
rolb
fldl2t
add
in
repz
int3
call
ror
cmp
fisttpl
test
xchg
out
sar
xor
xor
stc
xor
rcl
fcomip
ror
loope
mov
fsub
mov
xchg
leave
lret
fnstsw
out
iret
in
aad
xor
into
aaa
cmp
loope
sar
jmp
mov
out
fldl
div
ret
stc
jecxz
xor
sti
out
out
fldl
loopne
loop
ret
aam
lret
lret
out
enter
out
jmp
xor
lret
fcomip
cld
rcr
orb
xlat
loop
sbb
xchg
xor
cli
repnz
hlt
cmp
loopne
xlat
fcoms
aam
xor
aaa
out
sarb
aaa
fcmovnu
clc
sti
lock
test
out
out
fists
aad
out
out
sar
fcmovnu
fistpll
test
imul
lret
loope
mov
mov
repz
fdivs
call
idivb
fadd
cmp
loop
loope
or
xor
int
in
xlat
leave
jmp
in
cld
shl
mov
hlt
aad
movb
orb
cmp
aaa
sarb
lret
cmp
lret
ret
mov
xchg
in
ljmp
ljmp
cmp
in
std
leave
shl
ffreep
out
faddp
filds
cmp
cmp
icebp
aas
cld
mul
icebp
cmp
aas
xchg
test
dec
jecxz
lock
xor
in
ret
cld
ss
jmp
iret
fcmove
ret
fxch
mov
leave
int
lret
cld
out
out
in
repnz
ret
lock
test
xor
lock
loop
jecxz
cli
sub
push
mov
jmp
int3
ret
int3
int3
sahf
pushf
cmovno
subl
add
add
mov
adcl
cli
shl
lret
aam
cmc
xor
in
mov
lock
call
fisubrl
icebp
out
cmp
stc
lds
repz
fld
test
xchg
int
in
leave
sti
call
stc
jmp
cld
aam
out
jecxz
loop
test
addb
ror
in
xor
cli
div
fdivrp
rcr
rol
cmp
in
rolb
into
xor
cmp
cmp
lret
cmp
ret
aad
in
fsub
lret
fsubrp
shr
aad
ret
in
call
jmp
test
ret
incb
in
out
jecxz
out
aad
repz
ret
cld
cmp
cld
xchg
aam
loop
xor
or
ljmp
clc
ds
cmp
xchg
clc
les
jmp
ret
clc
imul
fcmovnbe
jmp
in
in
jecxz
rcl
imul
loope
jmp
mov
xchg
xchg
ror
cmp
aam
xor
xor
cmp
fstp
iret
xchg
shl
ret
out
in
sbb
hlt
out
call
stc
out
fdivrl
div
cmp
mov
stc
ds
div
sbb
aad
aam
out
jmp
ds
shl
test
sti
jecxz
leave
repz
aam
int3
cmp
jmp
fdiv
shl
add
aas
aas
loope
fsubr
clc
int3
fdivr
repz
mov
aam
aaa
fsubr
neg
test
jecxz
shr
fcomp
add
ljmp
jmp
out
lock
enter
lret
cmp
aas
lock
loope
jmp
int
stc
mov
int
ror
stc
repz
repz
idivl
xchg
loopne
in
ror
rcl
xchg
in
rcl
mov
in
mul
hlt
aas
rol
decl
fsub
cli
loopne
fcmovnu
xchg
out
loopne
ret
cmp
in
loopne
repz
int3
fidivrl
dec
icebp
fadds
mov
fdivp
in
aad
lret
cmp
lret
hlt
aas
shl
call
in
call
ljmp
cld
std
fucomp
std
not
sarb
repnz
cld
fldl
lock
repnz
aas
call
repnz
fdiv
idiv
in
cld
in
fmul
out
ret
lock
out
cld
aam
aaa
in
xor
cmp
loope
hlt
aas
call
fsubr
leave
fimull
les
hlt
stc
lret
fnstsw
xor
ds
fcmovb
cmp
xor
ljmp
fsubrp
jmp
leave
leave
cld
xlat
fcomip
aam
out
test
ret
ret
and
decb
jmp
jmp
cld
cmp
int
aam
not
xchg
std
fsubr
mov
int
int3
xlat
sti
call
test
test
xlat
sbb
out
mov
jecxz
out
das
call
aas
cmp
aad
cli
aam
in
test
orl
ret
in
into
fdivs
in
int3
cmc
cmp
in
sar
clc
in
stc
sti
popl
not
into
loop
cmp
out
aam
aaa
sbb
cmc
rol
cli
cld
out
leave
mov
test
push
repz
repnz
iret
cmc
fdivrp
fsubr
rol
std
out
fucom
hlt
jecxz
jmp
out
out
aad
in
in
xor
ss
cmp
clc
movl
lret
ljmp
idiv
repnz
xlat
cmp
lret
inc
cmp
mov
fcmovne
mov
aam
sub
fdivl
fcmovb
rcr
int3
lret
out
aad
rcr
lret
test
out
stc
filds
xor
into
xlat
std
repnz
testb
fdivp
sti
icebp
jmp
xor
loop
iret
shl
enter
lock
fucomip
ret
test
mov
ljmp
leave
fucomi
std
test
loop
hlt
xlat
mov
xlat
neg
in
xchg
jmp
call
jmp
stc
aam
idiv
ss
repz
roll
mov
xchg
xor
cmp
call
enter
std
test
shl
out
mov
fiaddl
xchg
aam
shl
int
cmp
cmc
iret
fld
add
jmp
lret
into
fst
fstp
bound
in
adc
jle
add
shl
out
add
cmc
test
fdiv
jmp
out
ss
out
repnz
aad
aas
fcmovbe
not
rcr
add
sti
sti
leave
fcmovu
loope
out
lret
hlt
aam
sub
cli
cmc
cmp
out
cmp
cmp
adc
in
leave
add
xlat
lret
sub
test
aam
xor
in
xor
enter
ds
shr
fsub
vpmullw
lret
mov
hlt
xchg
xchg
lock
not
imul
fadd
ss
sti
shlb
shl
loope
fsubrp
mov
stc
jmp
int3
xor
in
icebp
jmp
xlat
sti
inc
xchg
fdivp
in
in
lret
jecxz
leave
xchg
xchg
add
aad
cmp
lret
ds
sub
aad
xchg
call
into
xchg
shl
xchg
mul
xlat
das
imul
aam
in
in
loope
cmp
cmp
xlat
mov
test
sar
mov
xchg
enter
out
out
out
or
into
aaa
shl
loope
stc
lret
xchg
icebp
fucomip
jmp
xor
in
cli
int
cmp
aam
fcomi
loop
rcr
fld
jecxz
iret
ljmp
fmul
in
cmp
aam
std
cld
loope
aas
cli
jecxz
ljmp
lock
enter
aam
clc
imul
rcl
loop
call
out
icebp
fcmovbe
sti
mov
mov
icebp
neg
ss
sar
flds
jmp
sti
mov
fiadds
divb
stc
out
repnz
cld
loop
repnz
loopne
leave
cli
out
nop
out
rcll
les
xor
fxch
fnstcw
neg
shl
out
out
and
faddp
testl
ret
xor
aad
cmp
fdivrp
cmp
lds
neg
fisttpll
xchg
mov
fmul
das
clc
stc
jmp
iret
xor
not
test
mov
mov
adc
shl
leave
fdiv
repnz
ret
sar
xchg
cmc
jmp
fisttps
adc
rol
in
repnz
sbb
aam
in
rol
cmc
in
in
lock
test
mov
jecxz
in
into
int
out
int
push
out
cmp
out
test
sub
in
push
xor
ror
xor
roll
test
in
mov
std
out
icebp
out
fsubr
in
fucomi
cld
div
rcl
adc
in
rcr
loopne
out
out
in
loope
lock
repz
hlt
aaa
xor
shl
cmp
aad
fiadds
mov
xchg
lret
rcl
aaa
stc
cli
into
out
cmp
cmp
add
aad
and
fmul
iret
mov
mov
in
fcmove
jmp
iret
idiv
fadds
into
rorb
cli
cmp
cmp
aas
out
cmp
fsubp
lds
fdivrp
fsqrt
jmp
in
test
jmp
cmp
iret
shl
loope
cmc
fdiv
ljmp
lret
test
xchg
xchg
ss
stc
cli
fadd
push
fdivp
cmc
int
aam
fcomi
movb
out
leave
out
lret
in
aam
hlt
xor
xor
xor
jmp
xor
cmc
out
idiv
fmulp
in
in
out
icebp
out
ret
shl
xor
lret
fcmovbe
fmulp
ljmp
in
and
test
loopne
fmull
fdivs
leave
in
enter
cmp
repz
cmp
fucom
mov
mov
cmc
cmp
jmp
sarb
neg
xchg
shl
stc
mov
lea
call
clc
in
xor
ds
in
or
xchg
cld
jecxz
fimuls
nop
ss
stc
in
cld
aad
aam
into
dec
shl
fcmovnu
loope
in
out
in
in
cli
xchg
sbb
in
out
ret
cmc
enter
cmp
cmp
sbb
testl
xchg
cmp
lret
or
std
cmc
mov
test
int
test
in
xor
shr
enter
iret
out
int
rolb
test
iret
call
loope
shlb
shl
aam
dec
loope
lock
test
out
test
adcl
fstp
fmulp
fucom
xlat
push
roll
in
clc
faddl
test
mov
ret
vmovmskpd
out
add
add
aam
rcl
aad
inc
xor
gs
add
add
stc
int3
cmc
roll
test
xchg
loope
out
in
test
ljmp
lock
sti
stc
repnz
idivb
fcmovu
cmp
xchg
fcmovne
mov
call
lret
mov
icebp
aam
repz
icebp
ss
aaa
jecxz
in
sar
repz
mov
or
leave
mov
out
xchg
aas
loope
xor
cmp
cld
fcmovnu
cmp
mov
jecxz
ljmp
icebp
xor
xlat
repz
fyl2xp1
int
fxch
sbb
xchg
mov
clc
sti
xchg
ret
fcmove
fsub
cmc
clc
ljmp
fcmovnu
ljmp
fildl
int3
in
div
enter
repnz
icebp
mov
out
std
jmp
std
test
ljmp
ret
clc
stc
sti
idivl
aaa
out
loop
std
out
add
mov
jmp
rol
leave
xlat
sarb
int3
rcl
ret
in
ret
xchg
out
stc
mul
in
jmp
std
xchg
jecxz
xor
loop
cmc
stc
cmc
fidivrl
cmp
sarl
hlt
icebp
cmc
testb
ljmp
into
leave
call
aad
int
int
cld
in
aad
fnclex
mov
loopne
div
xor
dec
ret
cmp
ljmp
into
out
or
ljmp
out
into
lret
icebp
cmp
sarb
in
iret
test
sti
leave
in
in
iret
into
out
leave
rcl
sar
fcmove
fidivs
sar
loop
in
icebp
loop
mov
ret
out
out
enter
xchg
shr
aam
xor
lret
loope
fnstsw
aas
call
add
jecxz
lret
in
hlt
shlb
out
out
aaa
std
das
fidivrl
fucomip
f2xm1
fsubp
vpaddq
aad
sti
xchg
mov
fsubp
out
jmp
xor
xor
cmp
leave
jmp
in
fadd
addl
mov
fcmove
lret
repnz
cs
aam
cmp
lret
fdiv
icebp
into
hlt
stc
xchg
fcomi
leave
fmuls
mov
clc
ljmp
cmp
xlat
clc
iret
fidivrl
aam
rcr
in
mov
into
popl
xchg
int3
aaa
int
in
xor
out
xor
rol
loop
fsubr
jmp
in
and
lret
mov
cli
rcr
fcmovbe
ss
sarb
lret
into
out
mov
repz
fcmovne
into
rcr
fisttps
cmp
cli
cmc
call
test
in
sub
ljmp
cmc
icebp
cmp
aas
fcmovb
icebp
fcmovnu
loope
fxch
jmp
dec
shr
jmp
cld
div
hlt
cmp
fcmove
out
loopne
mov
ret
rcl
in
cld
jecxz
mov
xchg
in
lea
cmp
xor
sarl
incl
loop
test
fmul
clc
int3
fabs
xchg
out
xchg
enter
sti
out
int3
rol
lret
ret
hlt
aad
test
xchg
enter
fsubrp
repnz
hlt
icebp
iret
shlb
in
rcl
aad
cmp
aad
rcr
fcmovne
loop
cmc
call
mov
jecxz
ss
hlt
ljmp
incb
out
sbb
cli
mov
loopne
fisubrs
jmp
xor
clc
icebp
xlat
ret
clc
fmuls
loope
enter
mov
xlat
shl
in
shr
neg
in
ret
faddp
inc
sar
leave
fsub
jmp
mov
clc
fmul
ret
sar
ds
shl
cli
incb
aad
fimuls
mov
mov
shl
xor
out
fildl
cmpb
movl
mov
loope
shlb
repz
xor
cld
lret
icebp
loop
cmp
loope
lock
mov
lret
call
loope
loopne
ss
jmp
fnstsw
roll
jecxz
cli
out
neg
test
lock
roll
call
fnstsw
out
aad
aaa
out
shr
cli
leave
fisttps
adcb
repz
ljmp
filds
or
into
xor
xor
jmp
cmp
rcr
enter
fsubp
jmp
test
jmp
rcr
rcl
cld
xlat
out
loope
xlat
or
int
xchg
out
xchg
int
enter
call
sub
idiv
test
sar
call
sub
add
inc
or
out
add
add
aad
fisttpll
sub
jb
xabort
add
add
nop
lret
xchg
test
out
repz
int3
aam
cli
cli
fcomip
ljmp
ljmp
xchg
ret
cli
mov
xor
cmp
hlt
in
out
ds
fldl
nop
in
mov
xchg
divl
out
loopne
cmp
fdivp
faddl
lock
icebp
jecxz
call
stc
hlt
hlt
stc
out
lret
cmc
lret
rol
out
fidivrs
dec
xchg
orb
in
cmp
out
in
rcr
out
cmp
cmc
hlt
xchg
xlat
clc
call
jecxz
dec
xchg
xor
repz
rcl
enter
xlat
cli
mov
xchg
test
out
out
shl
aam
aam
idivb
sarb
neg
sbb
out
into
mov
mov
out
in
ljmp
lret
out
ret
rorb
out
loope
and
test
shl
int
cmc
fmul
repz
add
xchg
lock
sub
out
sti
rolb
std
xlat
shl
jecxz
lret
xchg
lock
loop
out
cli
sti
fmul
fidivrs
out
fstpt
fmuls
leave
std
int3
repz
int3
xlat
fcmovnbe
xor
cmp
int
ds
ret
aaa
iret
xor
hlt
aad
test
loopne
xor
xor
cld
aam
in
loopne
cld
shl
aad
vpand
call
loopne
xchg
into
int
ret
cmp
rcl
xor
shr
flds
in
xchg
in
repnz
hlt
repnz
out
leave
ljmp
ljmp
flds
loop
enter
loop
loopne
out
out
lret
aam
xbegin
cmp
hlt
ret
dec
jecxz
lret
loopne
jmp
xchg
int
in
test
lret
cli
in
mov
mov
int
lret
iret
xlat
stc
aaa
lret
fucomp
cmp
sub
rcr
mov
sti
ret
mov
mov
in
fsubr
out
aam
in
fldcw
std
ss
in
cmp
sti
aad
cld
orb
jmp
jmp
rcl
fst
int
sarl
cmp
cmc
idiv
out
loopne
fucomip
ljmp
out
out
in
jmp
hlt
cmp
in
rol
ret
rcl
hlt
out
fildl
aaa
shl
fdiv
lret
jmp
int
aam
sarl
ljmp
sbb
int
sarl
int3
in
hlt
leave
ss
test
std
fdivr
out
call
into
xchg
lret
ljmp
clc
int
call
and
xlat
repz
in
test
xor
ds
aad
fstpt
fcmove
fucomi
cld
jecxz
test
repz
in
sub
out
sti
loopne
icebp
int
xlat
mov
cld
ljmp
into
loop
out
fxtract
xlat
sti
xor
fnstcw
out
rcr
stc
fucom
mov
cmp
xchg
lret
out
xor
loope
cmp
aaa
cmp
cmp
lret
xlat
enter
fsubp
xchg
leave
cmp
aaa
sarl
fmulp
int3
shr
aam
cmp
loopne
loopne
enter
out
call
divb
neg
in
shl
cmc
call
jmp
mov
repz
rcl
shl
int
cmp
xlat
icebp
shl
xchg
mov
cli
xchg
out
out
iret
addb
fsub
xor
cli
hlt
lock
cld
decl
fst
jecxz
xchg
jecxz
xor
xor
fnstsw
cmp
int
into
cli
cld
test
fld
in
fcmovb
cld
in
lea
leave
rol
cli
out
cmc
std
cmp
in
out
mul
int
call
mov
mov
ljmp
xor
icebp
jecxz
lock
aas
cmp
cmp
les
in
out
decb
in
xor
lret
cli
in
fsubr
int
fadd
ret
fdivr
stc
sti
testl
shr
stc
cmp
aaa
call
hlt
shl
fdiv
aas
cli
aad
not
inc
lds
std
mov
rol
leave
out
in
sti
out
out
aad
hlt
shr
repz
addb
mov
clc
divl
jmp
stc
icebp
fst
into
cmp
lock
andb
jmp
cmp
jne
jmp
iret
lret
rcr
aad
int
jge
ja
inc
xchg
cmpsl
into
and
jle
add
xlat
cmp
fstp
xlat
xor
rorl
lret
fcmovnb
leave
cld
shr
in
fistpll
in
jmp
int
jecxz
sti
addl
cmp
enter
repnz
sar
shl
loop
out
fsubp
in
iret
mov
aaa
enter
clc
lock
stc
sbb
aas
mov
loope
call
jecxz
jecxz
xor
xor
cli
aaa
out
out
out
xor
cld
enter
sti
out
in
nop
cs
aam
hlt
aaa
fistpll
repz
cmc
test
lret
lret
mov
adcl
repz
ror
neg
cmp
out
out
xchg
in
mov
fldl
ret
rcr
aam
ljmp
repnz
imul
lret
jmp
xchg
xchg
mov
ret
clc
int3
fdivrl
xor
int3
cmp
cmc
cli
ds
imul
std
lret
orb
out
shr
repz
icebp
int3
test
loope
cmpl
fld
in
loopne
fcmovu
std
rol
in
test
enter
cmp
out
iret
sar
shl
fucomip
out
enter
icebp
in
fsub
in
cmp
in
in
sub
fnclex
clc
hlt
loopne
shl
in
stc
mov
out
test
shl
cmp
sarb
cmp
clc
sbb
neg
xlat
fsub
nop
lock
sub
icebp
call
aas
repz
repz
sub
rcl
int3
icebp
repnz
iret
stc
cli
neg
xlat
iret
lock
cmp
aam
xchg
test
enter
aaa
fdiv
loopne
sbb
fld
aad
jecxz
stc
stc
mov
out
enter
aam
std
cmp
repz
int
xlat
clc
sti
aam
xchg
mov
fdivr
decb
xchg
xor
aam
jmp
fsincos
repnz
aas
aad
loop
lret
lea
shr
in
aaa
out
ss
loope
fldl
in
sub
xchg
cmc
hlt
xchg
xor
ret
out
shr
sbb
in
and
xor
out
in
test
lret
fbstp
ret
hlt
out
sti
idiv
sub
xchg
or
flds
mov
clc
out
aad
out
aam
fcom
lock
xchg
loopne
ret
stc
mov
jecxz
jmp
leave
ljmp
clc
stc
ljmp
xlat
sbb
int3
in
fucom
loopne
fsub
test
into
ljmp
cmp
aam
clc
ffreep
loop
ljmp
flds
test
int
xor
cmp
enter
neg
sarl
repz
test
in
fmul
mov
in
mov
lret
cli
fnop
fcomi
fiaddl
ffreep
enter
fcomp
std
into
mov
iret
test
xchg
xchg
shlb
aad
fsub
fdiv
cmp
xlat
in
and
into
shr
test
jmp
aaa
xor
imul
shr
in
repnz
clc
repz
sbb
in
jmp
xchg
call
cmp
cmp
ljmp
repnz
repnz
into
ret
test
leave
sub
aad
lret
lock
in
test
jecxz
rcl
jmp
test
icebp
jmp
jmp
iret
in
jmp
out
repnz
into
out
cli
fiadds
mov
xchg
repz
cli
cmp
into
xlat
lret
lret
rcr
mov
fcmovnu
clc
movl
shl
xlat
ret
iret
cmp
fxch
out
cli
cmp
in
faddp
stc
mul
fildl
mov
xchg
xchg
into
out
jmp
aam
out
loop
fidivs
cld
rol
ljmp
out
xchg
rolb
in
sti
int3
ljmp
xchg
call
int3
out
fmul
int
xchg
out
fmulp
icebp
fxch
repnz
cmp
shl
cli
out
rcr
out
xlat
fiaddl
xchg
into
shl
shl
cmp
lret
rol
aam
ror
adc
mov
movb
mov
enter
in
ss
cmp
aad
rcl
movb
lret
int3
loope
jmp
cmc
cmp
lock
cmp
int
repz
fcomp
in
into
sbb
lock
in
ret
in
movl
mov
mov
jmp
enter
int
int3
lret
xlat
ja
lea
ja
add
add
lock
aad
std
div
cmp
ljmp
nop
jmp
ret
out
in
xor
cmp
icebp
repnz
cmp
testl
loop
hlt
shll
xor
adc
test
xchg
aad
or
in
ljmp
in
int
lret
ljmp
aaa
into
add
mov
or
lret
rorb
xor
aad
int3
dec
lock
loop
out
fst
addl
call
mov
fpatan
cli
ret
hlt
ljmp
icebp
fcomi
test
mov
shl
out
flds
lret
cs
int3
int3
leave
ror
in
iret
cmc
cmp
cli
repz
fsub
call
xlat
loope
cld
loope
ljmp
cld
leave
fdiv
hlt
sti
inc
fndisi(8087
xchg
mov
fucomi
loop
xchg
pushl
sub
hlt
cmc
mul
hlt
loopne
in
shl
rolb
mov
into
shl
xchg
xchg
test
ljmp
repnz
clc
repnz
ds
sub
bnd
lds
jmp
repnz
cld
out
cmp
jmp
in
xlat
in
ret
mov
fnclex
shl
rcll
xor
cmp
icebp
sti
in
aad
rolb
enter
fadd
out
call
ror
into
neg
cmp
cmp
icebp
ret
ret
sbb
repnz
loop
rcr
out
shl
aas
inc
ret
fst
ret
sub
mov
in
nop
iret
mov
loope
aam
sar
clc
fst
lock
fdivrp
sar
cmp
shr
fistl
in
lret
repz
rol
jecxz
rcl
xlat
ret
cmp
in
sub
cld
jecxz
in
icebp
nop
xorl
cmp
cli
ljmp
cld
ret
ret
int3
loope
test
xchg
call
sar
ds
cmp
sti
les
mov
fistl
shrl
jmp
aad
out
flds
jmp
clc
mov
xlat
mov
sarl
adc
cmp
cld
test
ljmp
mov
shlb
cmp
in
into
cmp
int3
ror
clc
loope
test
fdivrs
fucomp
enter
out
ftst
xor
aas
cmp
fadd
cmp
test
mov
icebp
rcr
xchg
out
int
iret
clc
enter
cmp
stc
stc
cmp
stc
ret
imul
leave
jmp
test
cld
int3
loope
aam
clc
in
sti
ljmp
jecxz
into
xlat
sti
fildl
lock
and
cli
fdiv
stc
cmc
fsub
cmp
icebp
repnz
clc
shl
shl
in
not
cmc
sti
ljmp
ffree
stc
movl
repnz
std
enter
repnz
test
sarl
mov
into
xchg
xchg
aad
xor
imul
fldl2e
leave
cmp
out
fcomip
incl
ljmp
cmc
stc
out
repnz
div
idivl
std
leave
hlt
ds
fists
xchg
out
lock
fmulp
loope
addb
enter
jmp
out
adc
into
int3
out
cmp
cmc
sar
lock
clc
fdivp
lock
ljmp
xchg
in
in
ror
in
into
jmp
into
fld
not
jmp
out
in
lret
xchg
rolb
jmp
out
xor
out
sarl
incb
test
in
call
in
ljmp
cmpl
test
leave
call
in
adcb
lock
into
ss
out
into
cmc
leave
out
fcmovu
aad
mov
hlt
test
sbb
xchg
iret
out
xchg
into
xbegin
ss
std
cmp
rol
cmc
xchg
jmp
orl
int3
cmp
cmc
lret
mul
cmp
shl
cmc
aas
in
cmp
sti
shl
repnz
out
xlat
in
std
lret
in
hlt
out
aad
loop
in
or
xchg
shl
iret
int
ljmp
lret
sti
clc
jecxz
test
xchg
xchg
mov
mov
mov
xor
add
mov
lea
jmp
rol
lret
ffree
aam
mov
mov
inc
cmp
add
xchg
nop
inc
lret
leave
bnd
fdiv
sarb
sti
repz
fidivrl
stc
lret
loopne
in
leave
rcr
int3
jecxz
cmc
cmc
ss
cs
in
jmp
cld
out
sbb
xlat
loope
aad
call
int3
repz
int3
lock
out
fidivrl
in
shl
test
cmc
shr
lret
out
ljmp
lock
std
cld
cmp
ret
test
fstpt
test
movb
out
loop
imul
xor
aam
shl
ds
int
ror
rolb
mov
fucomi
incl
clc
in
lret
ss
shl
sarl
cmp
loop
test
in
iret
in
in
in
fdivp
loope
out
xor
out
ss
cmp
shl
out
test
ffreep
roll
xor
ds
sti
loope
shl
in
add
xchg
jmp
fmul
fincstp
clc
rcr
ljmp
test
ljmp
out
enter
iret
out
sub
in
lds
jmp
ret
xlat
sti
aas
ret
lret
fcomi
out
fisttpl
cmp
jecxz
ss
shr
cmp
fnstcw
cli
mov
or
fsubrp
in
int3
int3
rol
sub
fcomip
sbb
ret
cmp
fmull
xchg
in
repz
out
in
std
aad
sti
lock
dec
shl
std
ljmp
or
out
cmp
rcr
not
ds
fcmovb
lds
fcmovnbe
imul
sar
lret
in
shr
in
ljmp
repnz
aam
fcmovnbe
mov
fldl
clc
addb
int3
aad
int3
xor
cmp
clc
adc
out
adc
jecxz
sti
lret
fisttpl
out
repnz
rcl
fcmovu
std
roll
mov
and
loope
in
xor
fcmovne
xor
lret
repz
out
shl
fsub
aam
in
fsubp
mov
iret
jmp
out
sub
cli
cmp
lret
div
int
ret
aad
out
cld
loope
mov
fildl
loope
jecxz
cld
fdivl
fstpt
sub
cmp
dec
into
cld
mov
out
mov
in
cld
enter
shl
out
test
icebp
iret
fidivrs
cld
orl
test
iret
enter
iret
out
aam
loopne
cmp
cmp
xor
mov
mov
cli
loop
std
xchg
out
ljmp
into
cld
cmp
vpsraw
cmp
jecxz
or
icebp
xchg
int
stc
ror
jmp
cmp
idiv
idiv
test
mov
out
lret
loope
repnz
out
out
jmp
cli
int
shl
shl
loope
ret
in
sti
rcr
lock
mov
aas
xor
lret
fdivrs
int
repz
cmp
test
hlt
clc
idiv
fcmovnu
leave
jmp
nop
in
ret
into
lret
sti
call
adc
loope
loope
aam
shl
xchg
enter
mov
in
xor
out
xor
ds
loope
rcl
ret
in
fnsetpm(287
icebp
faddl
icebp
repz
cli
enter
loopne
lret
cld
in
cmc
fcomip
jmp
les
lea
ljmp
cli
rcl
fucomp
repz
in
ret
out
mov
out
xchg
shll
aas
into
lret
hlt
loope
in
cmc
cld
mov
fmulp
mov
in
out
adc
loop
icebp
out
hlt
cmc
icebp
sar
shl
addl
in
hlt
out
call
fnstenv
in
lock
fucomi
hlt
add
jmp
lret
out
loope
in
repz
cmp
stc
int
cmc
std
sti
fcomp
jecxz
out
mov
ret
in
loope
shl
repz
xor
fucom
lock
fdivrp
loop
adc
call
enter
sub
test
shl
cli
ljmp
in
fcom
loopne
stc
enter
in
fneni(8087
loop
sti
mov
mov
dec
cmp
out
cld
call
lock
neg
out
hlt
in
lret
fldl
in
mov
ljmp
sti
cmc
rcr
cmp
std
in
cli
test
mov
aad
lock
xor
rcl
fiaddl
mov
add
add
int
xlat
addr16
inc
push
das
add
add
xchg
incl
filds
in
aad
lret
out
repnz
std
flds
loope
or
cmp
mov
out
xchg
mov
cmc
fcmovne
lret
in
iret
loope
neg
out
rol
jecxz
mov
loopne
xchg
xchg
ficoms
shr
out
enter
neg
xchg
std
vpsubsb
in
fimuls
hlt
loop
stc
in
ljmp
neg
stc
loopne
neg
mov
lea
mov
mov
in
fcmovb
hlt
in
fnstsw
cmp
in
repz
sti
mov
cmp
fneni(8087
mul
clc
mov
nop
fists
lret
out
fdivr
leave
fucomp
cli
out
shl
leave
xchg
leave
cmp
fcomip
out
sub
cmc
xor
cmp
ds
in
loope
out
rol
fcmovnu
fucomi
cmc
enter
xor
int
icebp
iret
repnz
shr
hlt
adc
xlat
test
stc
in
xchg
roll
icebp
cld
sti
fmul
lock
adc
out
orl
loopne
out
repnz
in
out
aas
rcr
ss
cmp
neg
test
lret
loop
out
shl
int3
aaa
cmp
cmp
fildl
in
out
in
orl
lret
ljmp
sarl
loopne
jecxz
mov
lock
test
int
xor
repnz
xlat
repnz
jecxz
clc
sar
aam
adc
int3
rorb
xor
shr
int
cmp
fiadds
rcl
loop
faddl
loopne
call
enter
cmp
xlat
sti
fucomi
ret
fucomp
repnz
in
xlat
ljmp
decb
in
enter
aam
aad
ror
xor
fcmovu
ret
fsts
loope
jmp
in
int
fdivrl
cmp
sarl
iret
ret
cmc
div
in
in
testl
ret
into
out
out
jmp
ljmp
loope
jmp
stc
sti
xchg
shl
lock
ss
ret
ss
rcl
fcomip
ljmp
xchg
mul
lea
repz
mov
lock
fildl
clc
lds
call
sub
rcr
out
aas
int
sti
out
out
stc
clc
call
ds
test
test
lea
xor
divb
out
xor
fcom
cmp
ret
icebp
mov
lret
stc
in
loopne
fisttps
idiv
std
fucompp
ror
fcmovu
xor
out
fld1
ret
ljmp
shr
test
fcom
xor
idivl
xor
test
call
repnz
aam
cmp
cmc
xor
lret
add
adc
imul
call
mov
jecxz
xor
loope
in
shl
into
repz
loopne
cmp
sbb
loope
add
fisttps
ret
divb
loopne
clc
icebp
cld
neg
mov
mov
mov
int
sub
iret
fdiv
icebp
ljmp
out
loope
xchg
mov
into
xchg
jmp
xlat
lock
enter
div
jmp
repz
xchg
xlat
lret
enter
call
out
int
jmp
cmp
icebp
ds
test
loope
lret
mov
addb
repnz
shll
ss
sti
int3
hlt
clc
fstp
clc
mov
sti
and
into
orl
xor
out
vpsubsb
div
shl
jecxz
cld
addl
in
mov
rcl
in
out
repnz
enter
repnz
repnz
jmp
fdiv
out
in
cld
lock
bnd
aaa
std
cmp
test
aad
repz
fcom
inc
mov
loopne
fstp
fsubrp
loop
mov
in
iret
cmc
cmp
cli
cmp
stc
std
faddp
xor
test
cli
loope
mov
addl
xlat
cmc
lret
cmp
rol
loop
fadd
idiv
out
sbb
xchg
shl
ss
int3
iret
or
cld
repz
in
cli
xchg
int3
in
lea
sub
cli
aaa
cmp
cmpl
fcomip
test
jmp
xchg
xlat
ljmp
ret
mov
jmp
ret
int3
int
ret
leave
pop
cs
cmpsb
xor
jle
add
std
loope
in
lret
loopne
ret
stc
jmp
out
mov
and
loope
xlat
shl
cmp
cmp
mov
clc
mov
lret
test
aam
lret
xor
xor
cmp
repz
xchg
cli
ljmp
repz
jmp
shl
ds
lock
cli
cli
faddl
addb
in
lret
or
enter
out
sarb
loope
cmp
lock
aam
in
mov
xchg
lret
cmp
rcr
std
in
ds
cmc
in
push
imul
neg
sbb
into
mov
enter
ljmp
fidivrl
rolb
fiadds
mov
add
in
rcl
fmulp
call
into
and
xchg
jmp
xor
call
clc
sar
fcomi
repnz
ret
addl
mov
std
in
lock
repz
ret
xor
out
xor
leave
lock
ljmp
jecxz
iret
test
lret
fucomp
out
cmp
out
vpaddd
testb
lret
rcl
leave
in
int3
mul
aam
int3
loop
shl
in
mov
shr
in
out
out
int
in
cmc
repz
int
repz
xchg
adc
call
in
in
in
lock
fcmovu
cli
rol
sar
rol
test
testb
lea
stc
lock
fstp
cmp
in
adc
dec
out
ljmp
in
out
ror
cli
aad
sar
loope
ret
aaa
out
les
ljmp
icebp
mov
xor
idivb
out
aad
hlt
cmp
fcomp
rorl
lret
shl
jecxz
repnz
ret
int
out
shr
xor
not
mov
sti
cld
xlat
ljmp
testb
out
in
out
enter
fcomi
std
jmp
xchg
lret
into
cmc
aam
clc
cmp
fdivl
fmulp
shl
lret
in
div
cmpb
out
faddl
xchg
icebp
mov
call
fcomi
shl
not
and
call
decl
notb
in
sar
jmp
test
rcr
in
aam
mov
lds
xchg
lret
loop,pn
lock
cmp
iret
clc
and
sbb
enter
fcmovnb
mov
out
or
jecxz
repnz
shll
fsubrp
aas
cmp
fiaddl
cld
mov
stc
rorb
out
or
loop
cmp
aas
cmp
or
lret
mov
les
div
out
ljmp
shl
fld
jmp
ljmp
fisttpl
jmp
ss
leave
jmp
out
fst
fiaddl
fsub
out
jecxz
jecxz
ret
neg
xor
lock
enter
sarb
rcr
fld
mov
into
stc
nop
xchg
mov
mov
sub
out
sar
int3
in
loopne
repz
fildl
out
ficoms
in
iret
xor
cmp
shl
fsub
int
incb
clc
out
fildl
not
leave
leave
cli
ljmp
rcl
test
aad
clc
ret
nop
fxch
mov
loopne
mov
mul
leave
rcr
aad
int
cld
idiv
roll
ror
xchg
ljmp
sti
repz
out
stc
aad
faddp
loop
roll
lret
in
nop
and
int3
ret
out
rcl
loope
cmc
hlt
flds
loopne
int3
test
in
fldl
jmp
xor
xor
cmp
in
shlb
idiv
repz
xor
out
lock
cli
out
in
leave
ljmp
ror
test
rclb
mov
shl
hlt
fxch
cmp
lock
aad
stc
cli
stc
ret
in
int
into
loopne
call
loope
cmc
xor
hlt
sti
not
fcomip
rcr
aaa
ret
and
cli
fimuls
xor
aaa
iret
ljmp
fcmovbe
fcmovnb
rcl
out
cli
jecxz
enter
lea
mov
jmp
aam
ror
fcomp
aam
aas
idivb
dec
cld
cmp
jle
add
xchg
enter
ljmp
cli
out
xlat
aas
cli
ret
cmc
cmc
ret
mov
fdivp
out
xchg
xlat
jmp
out
cmp
lock
aam
icebp
fsub
loopne
repz
mov
popl
cmp
fdivr
std
aad
hlt
fmul
rcr
ds
loope
aam
loopne
in
sti
cli
orb
cmc
jmp
sarl
stc
faddp
out
fdivrs
test
fxch
iret
xchg
test
ss
cld
cmp
idiv
cld
std
cld
cmp
call
fisttpl
ror
out
cli
out
aaa
call
sar
shl
sarl
adc
mov
jmp
xchg
rcll
stc
sti
sub
stc
ljmp
fst
jecxz
xchg
in
mov
in
fdivrp
inc
ret
cmp
fidivl
filds
sarl
out
sbb
std
mov
aam
aaa
shl
in
into
fst
xor
hlt
repz
aad
loop
cmp
jmp
mov
fmul
xor
iret
std
aad
shl
mov
mov
fcomp
iret
lock
hlt
icebp
aas
int3
std
int3
sti
aas
lret
sub
jecxz
fildl
out
loopne
xchg
int
enter
cmp
fcomi
ds
test
out
fdiv
vpaddusw
iret
lds
aaa
repz
xlat
fdivl
fidivrs
jmp
fld
xlat
ret
stc
idiv
leave
mov
leave
rol
mov
repnz
out
out
shlb
fchs
into
shl
decl
std
stc
ljmp
loop
lock
cld
xor
repnz
aad
sbb
idiv
fimull
into
in
repz
fdiv
jecxz
fxch
hlt
fstp
ds
roll
decl
sti
jmp
aam
lret
mul
fmulp
icebp
loope
out
cmp
fsubrp
sar
mov
jecxz
in
popl
out
int
aad
cmc
in
in
shl
aas
orb
fucomi
in
nop
in
loopne
divb
shl
cmp
sar
aad
aad
incb
hlt
in
loopne
leave
mov
rcl
jmp
sti
fistpll
jmp
cmp
aam
ds
lret
fldl2e
mov
aad
rcl
out
fcmovnu
xlat
rol
sub
aam
out
jmp
inc
mov
fimull
lret
ss
cld
ds
repz
int3
in
iret
lock
cmp
faddp
loope
cmp
repnz
cmc
ret
cmp
int
aas
ret
fmul
testl
or
call
xor
into
iret
cli
fdivrl
aaa
ffreep
ds
xchg
xchg
enter
in
loope
xchg
aam
not
xor
call
std
fdiv
cmp
sti
fsub
fprem
test
frstpm(287
leave
xchg
out
aam
int
test
cmp
hlt
xor
testb
fldl
xchg
mov
enter
lock
out
repz
cmp
and
or
enter
fucomip
icebp
sar
cmp
in
divl
ds
out
in
cmpb
out
loopne
lret
cld
iret
loopne
ror
jecxz
into
mov
in
lret
cmp
int
cli
cmp
sub
mov
std
jmp
nop
lret
ror
cmp
repz
hlt
cmp
fabs
cmpl
lret
call
cli
sub
loop
xor
fdivr
out
shr
idiv
divb
repnz
out
jmp
aam
into
xor
std
jmp
cmp
cmp
xlat
and
in
out
ret
in
xchg
aam
repz
clc
in
lock
iret
iret
fsubr
in
shl
mov
vpsubusw
xchg
enter
rcl
stc
icebp
fadd
loope
clc
fstpt
ds
fcmovu
decl
sti
cmc
int3
shr
shll
clc
fcomip
int
ror
fiadds
in
call
xor
jmp
call
fcmovbe
cmp
loop
add
ret
loope
decb
fistl
lock
sti
rcr
cld
rolb
loopne
rcr
repnz
mul
out
lds
mov
into
jmp
aad
out
call
repz
fld
cmc
hlt
cli
xlat
call
in
jecxz
hlt
out
lret
xor
in
ds
jecxz
loope
ret
repz
ret
push
mov
push
jmp
ret
rcl
aam
ret
sarl
and
inc
sarb
add
add
and
sar
mov
divb
shl
out
fdiv
fnstsw
fcomi
fucomp
mov
jmp
jmp
lock
xor
sarl
int3
rcl
clc
cmp
cli
flds
out
rcr
repz
add
out
leave
in
lret
fcmovnbe
int
loop
aad
loope
cld
loope
repnz
loope
adc
ror
shr
xor
shl
and
aam
sbb
orl
ljmp
aam
in
cmp
incb
in
in
xor
fmul
fidivrl
aam
test
test
cmc
icebp
fadd
rol
leave
ljmp
test
xlat
cmc
in
out
into
faddl
cmc
rcl
cmp
loop
fildl
sub
rcr
cld
int3
rcr
lret
icebp
cmc
iret
icebp
stc
ret
cli
mul
in
cli
mov
jmp
aam
aad
repnz
cmp
bnd
hlt
aam
mov
addb
sar
in
sar
cmp
shlb
neg
ss
loope
in
repnz
fdivp
les
lock
std
xchg
lret
cli
cmp
int3
shl
adc
xchg
hlt
ret
test
shr
out
lret
ljmp
xor
enter
xlat
test
call
fucomp
fisttps
rol
jmp
int
lret
cld
aam
rol
out
incl
cld
loopne
lret
enter
fst
in
jmp
shr
icebp
leave
shr
out
repnz
fucomip
out
loop
xor
repnz
icebp
mov
leave
stc
out
in
rcr
sti
out
in
ds
repnz
clc
sub
fcmovu
ror
test
loope
jmp
rcl
xlat
cmp
loopne
iret
sarl
incb
ljmp
icebp
adcb
out
sti
out
aas
into
out
cli
sarb
rcr
jmp
mov
jmp
loopne
cs
sub
sti
cmp
test
cld
filds
out
decl
xchg
in
in
in
lret
idiv
rcr
hlt
out
cmp
iret
test
jmp
std
cmp
lret
icebp
xor
shl
icebp
cmp
aas
cmp
test
in
jmp
jecxz
or
neg
ret
repz
xchg
xchg
rcl
ret
out
jecxz
xor
rcr
xor
sbb
aam
xchg
mov
sub
out
lret
shl
hlt
cmp
repnz
fstp
aas
cmc
cmp
ljmp
faddl
in
sub
test
fstp
shr
sbb
test
fsincos
cli
out
lock
mov
lock
aaa
in
clc
fcomp
lret
lock
shl
in
sti
add
jmp
xchg
xchg
call
stc
out
aaa
lock
iret
xor
cmp
test
xchg
rcr
mov
int
xchg
out
lret
int3
repnz
fcmovnbe
call
ljmp
fimull
add
xchg
cld
int3
lea
neg
iret
fdivr
aam
sar
loop
lock
jmp
orb
out
out
rcr
iret
out
fnstcw
cmp
rcl
cmp
xchg
jmp
aam
rcl
rol
xor
iret
neg
in
hlt
out
stc
mul
out
addb
ljmp
fmulp
aas
cld
int
shl
cld
xchg
ffree
fisttpl
xchg
lock
leave
cmp
cmp
out
not
cmp
loopne
aam
aad
xchg
in
out
fadds
ljmp
xlat
xor
in
ljmp
repz
std
test
enter
cmp
out
in
cmc
iret
fmul
loope
adc
loope
out
in
sti
repnz
loope
enter
xor
idivl
cmp
loope
cmp
out
fsubr
fsubr
loope
fldl
in
ss
jecxz
xchg
ror
mov
in
out
in
cld
xchg
loop
ljmp
in
std
int
sar
cmp
shr
cmp
loope
fdivr
clc
clc
test
rclb
rcl
lret
cmp
div
ds
fst
fcmovne
addb
xchg
mov
aaa
call
enter
cmp
in
fsub
fiaddl
mov
int
addb
out
repnz
idiv
cmp
add
jmp
cmp
jne
mov
xor
add
mov
mov
mov
jmp
sarb
ret
enter
fldl
jge
sub
ret
add
add
int3
jecxz
ret
clc
fcmove
xchg
sti
sub
out
jmp
lret
loope
das
repz
imul
aas
cmp
sbb
xchg
cmp
mov
fcmove
out
xchg
sbb
sub
hlt
cmp
rcr
loop
repnz
out
push
ret
leave
orl
adc
aad
sub
loop
sti
xor
call
rol
jmp
fcmovne
testb
jmp
sub
sub
cmp
lock
ds
out
iret
cmpl
fiaddl
mov
iret
mov
hlt
out
aaa
cmp
loopne
fstpt
sar
aad
jmp
lret
sub
xor
push
lret
in
repnz
cli
sar
loope
fdivrp
call
dec
fmulp
nop
in
xor
fcom
iret
leave
lret
fcmovne
adc
fucom
repz
hlt
ljmp
mov
in
or
std
ss
lock
clc
iret
ret
loope
fldl
xchg
test
int
cmc
in
shr
aas
call
ds
test
test
int3
test
call
int
call
stc
std
cmp
loopne
cmp
cmp
in
or
mov
loop
ljmp
shl
leave
ljmp
repz
and
out
sub
xchg
in
out
shl
xor
sarl
rcr
xlat
clc
shl
into
loope
lock
faddp
stc
lret
mov
icebp
in
repnz
out
lret
xor
cmp
icebp
sarl
fxch
icebp
icebp
fcmovbe
loop
hlt
xchg
loopne
nop
std
icebp
out
in
loop
loop
call
jmp
and
and
jecxz
nop
fldl
out
rol
ss
jmp
aam
loope
loopne
sub
aad
enter
xlat
fyl2xp1
enter
fdivp
lock
cmp
enter
fadds
aas
cmp
loopne
in
ficoml
mov
or
leave
in
cmp
shr
cmp
cmp
aam
loope
repnz
call
mov
int3
xchg
imul
aad
in
hlt
fnsave
fdivrs
out
in
out
cmp
fadd
sti
jmp
test
into
loope
loop
jecxz
out
in
repnz
call
cmp
test
std
fldl
test
xchg
loopne
clc
cmp
repnz
xor
cmp
or
enter
in
clc
fcmovu
cli
xor
loop
out
in
shlb
cmc
repz
or
fcmovu
cmp
cli
cmc
int
mov
into
rcr
rcl
rcl
xor
in
sar
std
fdivrp
ret
cld
in
ffree
jmp
icebp
cld
faddl
div
fdivs
xor
cmp
lock
xlat
xor
and
in
xchg
aad
icebp
clc
repnz
in
fscale
xlat
repnz
xlat
jmp
fucom
xchg
jmp
xor
in
fcomp
in
lret
aad
rcl
fcmovbe
fsub
cld
mov
fmul
int3
int3
xchg
nop
out
mov
xor
in
ljmp
sarl
fcomip
aas
loopne
orb
mov
int3
leave
sbb
cmc
sarl
fpatan
fcmove
cmp
lock
ror
rcl
sar
fxam
xor
fucom
iret
fisttpll
clc
fdivr
cld
fistpll
out
int3
call
clc
repnz
repnz
std
loope
out
out
cli
in
sub
mov
cli
shl
lret
std
loopne
cld
jecxz
xor
mov
mov
lret
repnz
lock
ror
fxch
cli
fsubrp
in
in
sti
fsub
bnd
in
ljmp
into
lret
fcmovu
aad
aam
rolb
shl
fiadds
jecxz
test
lock
ljmp
loop
ret
sar
leave
ret
and
stc
out
loopne
hlt
nop
aam
aaa
repz
fsubr
cmp
ds
into
ret
in
adc
fisttpll
test
xor
fldcw
ss
cli
ret
aas
hlt
repnz
loopne
cld
loopne
mov
loopne
xor
in
cli
sar
shl
out
fdivrl
loopne
test
hlt
call
mov
lret
icebp
loope
stc
rcr
aad
ljmp
repz
fmulp
stc
xor
out
iret
orb
call
roll
fst
rol
fadds
sti
in
test
fdivr
xor
fmul
loopne
out
fcmovu
cmc
sbb
sbb
test
iret
out
fsubp
jmp
mov
mov
push
pop
sub
add
mov
jmp
ror
fmul
fcomp
fcmovnb
aad
jp
in
movsl
push
jle
add
add
repz
enter
test
aas
loope
out
ret
fidivrs
enter
filds
out
xchg
fdivr
into
lret
leave
cli
shl
incl
and
ds
lret
in
loopne
cmc
test
int
lock
shr
neg
cmp
fucomp
ret
std
jecxz
sbb
out
decb
and
jecxz
int3
out
cld
xor
lock
int
repz
cld
test
leave
test
enter
sub
xchg
aam
jmp
and
rol
addl
incl
lret
sub
cmp
cmp
loope
repz
rcr
mov
clc
out
call
bnd
ret
sti
lock
loopne
repz
ffree
fcmovnb
lret
cmc
out
xor
clc
out
idiv
cmp
iret
call
jecxz
test
jmp
mov
stc
clc
cmp
cmp
out
cmc
faddp
out
mov
stc
fmull
incl
out
fcmovnb
fcomip
xor
repnz
neg
fadds
mov
mov
shr
aam
in
ljmp
shr
jecxz
xchg
leave
fimuls
xchg
icebp
lret
hlt
sub
cmp
lret
call
fdiv
cmpl
fcomi
test
adcb
int3
stc
aam
out
aaa
shr
test
out
les
loopne
leave
nop
fimuls
out
icebp
lret
aad
int
icebp
xlat
stc
in
hlt
fiaddl
std
or
ljmp
in
lock
cli
xlat
lret
xlat
cmp
inc
sti
ret
test
ret
sub
int
divb
stc
shl
in
out
cli
loop
icebp
rol
fcom
stc
idiv
clc
fcoms
icebp
shr
icebp
xor
leave
aad
out
cmp
out
loopne
jmp
jmp
xor
int3
ss
idivl
fcmovbe
into
jecxz
test
loope
mov
lret
ret
enter
mov
loope
ss
cmp
aaa
cmp
cmp
aad
testl
mov
shl
filds
fidivl
divl
out
out
stc
into
xlat
xchg
idiv
fcmovnb
enter
sti
dec
out
xchg
in
repnz
cmp
fcomi
cmp
sti
sar
call
ret
out
out
sti
cli
out
xchg
hlt
out
fnstenv
aad
cli
cmp
cmp
aad
iret
std
rolb
lret
in
fists
fdecstp
in
rcr
fscale
cmp
roll
test
loopne
fadds
mov
aad
repz
shrl
cld
fdivr
ret
int
in
les
loope
out
loop
roll
cmc
neg
shl
loopne
cmp
jecxz
fimull
in
in
test
int3
xchg
lock
ss
call
repnz
rcr
test
testb
xchg
leave
cmp
ljmp
repz
frndint
cmpb
clc
out
hlt
fiadds
fimuls
fisubrl
aaa
aaa
into
jmp
clc
addl
icebp
cmp
cld
fmul
loope
in
mov
icebp
fiadds
test
cmp
test
xchg
fcmovne
mov
xchg
nop
leave
lret
lret
icebp
xor
xor
in
ljmp
fdivrl
cmp
stc
add
jmp
aad
sub
sti
lock
cld
fmul
cmp
cmp
ret
shl
mov
aas
out
leave
loop
test
cli
jecxz
lock
fcomip
ljmp
loopne
jmp
nop
out
test
ljmp
test
roll
test
iret
into
roll
xor
aam
jmp
loope
sbb
loop
aad
mov
call
shl
out
iret
lret
into
xor
cmc
cmp
stc
ds
cmc
cld
and
idiv
rcr
dec
into
loope
shl
hlt
lret
filds
repnz
lret
mul
mov
int
mov
xchg
int3
loop
ror
lret
repz
sar
repz
loopne
and
nop
in
jecxz
and
int3
into
aaa
in
jmp
cmp
ds
aas
incl
addb
mov
int
iret
in
shl
ret
repnz
fcmovu
sti
clc
icebp
cmp
jecxz
fcmovu
ret
mov
xor
lea
cmp
jne
jmp
int3
int
fstp
cmp
pop
pushf
or
pop
and
jle
add
neg
mov
xchg
in
in
jmp
cmc
into
shr
cmp
fnstenv
cmp
cmp
cmp
cmp
loopne
leave
cmp
fmull
out
shlb
jmp
not
jmp
out
ret
loop
xlat
test
stc
filds
in
int
fcmovnbe
sti
clc
xor
cld
repnz
enter
xor
repnz
mov
in
out
into
shll
jmp
cmp
cmc
cmp
ljmp
xchg
iret
aam
loope
ret
cmp
xabort
cmp
ror
fucomip
cmp
fdivr
vcvttpd2dq
mul
mov
in
rorl
cmc
xlat
iret
ss
repz
xchg
jmp
icebp
test
mul
xor
lock
xlat
hlt
test
cmc
fsub
fcomp
ljmp
ljmp
icebp
ret
ret
fsubr
icebp
xor
aam
hlt
cli
fsub
shl
out
xlat
decb
jmp
repnz
lret
aad
in
stc
into
stc
sti
sarl
int3
out
testb
ljmp
jecxz
mov
fnstenv
fdivs
cld
rcl
in
aas
xchg
lret
loopne
call
xchg
sub
out
aad
cmp
fdecstp
std
ret
xlat
cmc
or
mov
jecxz
shl
call
ds
int3
shl
fxch
test
mov
flds
out
leave
cmp
aam
in
xlat
aas
idivb
cmp
stc
neg
loop
jecxz
sub
nop
hlt
aaa
loop
enter
aas
in
sub
rcl
enter
mov
call
lea
xor
cmp
aam
out
lret
in
out
lds
jmp
lret
fimull
xchg
jmp
loope
jecxz
repnz
ds
jmp
not
xchg
cli
bnd
loop
out
mov
mov
lock
in
stc
out
fmulp
into
xorl
out
sarb
fsubrp
int3
cld
cld
mov
mov
jmp
lret
div
stc
cmp
xor
xrelease
sub
out
repz
idivl
std
rol
aam
cmpb
cmp
ficoml
iret
out
leave
divb
lret
xor
aaa
aam
repz
fucom
aas
hlt
xlat
shl
jmp
and
ss
clc
aam
rcl
repnz
lock
ffreep
cmp
sbb
stc
std
test
loopne
mov
jecxz
aad
in
sar
divb
aaa
xor
cmp
clc
xlat
addb
hlt
addl
in
xchg
xchg
cs
out
div
fstpt
fst
ror
jmp
or
xchg
mov
ror
sti
in
cmp
fcmovbe
loop
test
cli
mov
les
test
int
jmp
cmp
sarl
rol
in
fdivr
fsubr
flds
in
xlat
jmp
rcr
clc
stc
not
shl
repnz
hlt
loop
std
stc
loope
into
sti
sar
sbb
std
xchg
into
hlt
xlat
lret
neg
aad
shr
ret
fadd
in
and
mov
shr
mov
cmp
lock
aaa
out
cli
iret
into
loope
faddl
jmp
loope
jmp
cmp
in
out
rolb
test
fistpll
out
in
test
jmp
out
ljmp
fdivrl
in
out
sarb
int3
int
roll
lret
fsin
xlat
mov
mov
ret
in
stc
ds
loope
jmp
int
std
cld
std
sub
call
call
ss
int
cli
enter
xor
clc
sti
mov
out
enter
lret
jmp
aad
in
cmc
sar
cli
fldl
loope
cmp
in
in
nop
nop
out
lock
cli
aad
sar
fst
iret
repz
cld
call
enter
sub
in
decl
lret
int
sti
in
ret
xchg
repnz
testb
icebp
xchg
and
ret
cmp
aam
out
hlt
inc
repnz
fadd
repz
xchg
in
cld
mov
nop
aad
icebp
leave
lds
ljmp
in
hlt
into
repnz
movl
xchg
sub
sub
icebp
ljmp
loop
loop
sti
cli
hlt
mov
into
fucom
int
iret
xchg
mov
leave
call
repz
inc
or
jmp
iret
xlat
rcl
rcr
lret
push
cmp
aad
xchg
lock
add
add
cmp
ljmp
fucompp
lret
shl
icebp
lds
xor
icebp
fidivrl
std
cmp
icebp
test
call
xchg
test
fucomp
icebp
xchg
cmc
lret
shll
cli
jmp
rcl
ds
add
sar
cli
testb
loop
ret
out
in
cmp
aam
leave
cmc
fistpll
repnz
icebp
mov
enter
mov
test
xchg
aad
hlt
out
in
div
ss
fmul
iret
fnstsw
cmc
sbb
into
out
adc
jmp
cmc
in
enter
aas
shl
xlat
rol
adc
orb
fisttps
repz
xor
fst
ds
aas
repz
aam
xchg
cld
test
sti
lret
in
iret
ret
jmp
faddp
clc
jecxz
aas
and
or
int
xchg
loope
xchg
ljmp
xor
xlat
ds
lret
cmp
sar
into
stc
xchg
addl
lea
fcom
std
repz
cmp
aas
loopne
out
std
test
lret
jmp
xor
call
icebp
aam
jmp
repz
loope
hlt
cld
or
out
ljmp
in
iret
leave
aad
stc
in
divl
aas
rol
loop
neg
leave
jmp
orl
incb
ror
into
fxam
ds
ffree
rcr
cli
test
cli
rolb
in
jecxz
in
xchg
inc
leave
out
fcmovne
cmp
cld
sti
fucomip
fcmovu
fdivr
aad
enter
loope
mov
repnz
leave
jecxz
out
fcmovbe
xor
in
cmc
fistpll
in
aas
xlat
int
mov
mul
ljmp
cmp
cli
cli
sar
jecxz
les
out
out
xchg
loop
test
ret
cmp
rcl
into
fdivr
repnz
testb
jmp
into
leave
stc
jecxz
hlt
cmp
out
cld
iret
or
flds
hlt
adc
lret
int3
in
sub
cli
rcl
frstpm(287
std
cmp
xlat
aas
sarl
repnz
clc
fildl
mov
loope
out
sub
jmp
ljmp
cmp
xchg
jmp
idiv
leave
int3
in
xchg
xchg
filds
fnstsw
stc
aaa
hlt
rcr
aam
test
rcl
aad
flds
loop
xchg
out
aad
sar
xor
in
hlt
test
rcr
loop
ret
incb
cld
lret
xchg
xchg
iret
in
cmc
cs
cmp
std
in
loop
mov
dec
in
std
loop
hlt
into
out
cmp
cmp
jmp
fidivrl
into
neg
xor
out
loop
jecxz
std
aad
ljmp
mov
vpsrlq
enter
aam
loop
aam
loope
cmc
fadds
out
repz
ffreep
jmp
out
lret
stc
rcl
ret
stc
in
aam
loop
mul
ret
cld
ljmp
ljmp
aad
test
sti
rol
mov
std
in
hlt
loop
ret
out
cmp
lock
test
adc
out
jmp
repnz
ror
cmc
call
out
shl
loopne
std
rol
stc
filds
repz
in
rcr
loop
fcomi
shlb
fcmovbe
int3
std
out
jmp
in
ret
out
stc
decl
xchg
fucomip
fidivl
sub
jmp
ds
loopne
cld
xchg
stc
sti
call
out
jecxz
repz
hlt
aam
not
into
rcr
fsubp
mov
enter
lret
cld
cmc
mov
vcmpss
shl
fdiv
shl
iret
fcom
std
flds
lea
xchg
jmp
out
aaa
ss
rol
ror
cli
int3
fmulp
jmp
incl
out
repz
jmp
shl
ds
enter
cld
fucom
adcb
mov
xor
repnz
icebp
out
cmc
adc
loope
loop
cli
neg
iret
in
fyl2x
out
xchg
aad
int3
xor
hlt
stc
hlt
ljmp
cmp
out
fcomp
xchg
int
mov
xchg
in
repnz
out
sarb
adc
cmc
aam
fdiv
std
clc
enter
loop
ror
xor
cli
clc
int3
cmp
fcmovb
in
sub
test
fdivp
aam
enter
add
pop
leave
ret
push
mov
jmp
into
lret
rcr
xor
mov
incb
add
shl
iret
stc
out
repz
repz
les
mov
xchg
xchg
out
in
pushl
call
das
cmp
cmp
loop
xor
xchg
clc
jmp
jmp
in
aas
shlb
stc
fsubrl
aas
jmp
cld
xlat
aad
sti
cli
fimull
mov
mov
loop
in
xchg
int3
aaa
xor
aad
hlt
xor
cmp
test
leave
lock
sub
xor
xlat
repz
xor
icebp
cld
int3
in
in
rolb
std
in
fmulp
out
hlt
xor
int3
xlat
into
out
aad
cmp
rcr
rcr
repnz
xlat
cmc
in
loopne
fiaddl
shr
fsub
aam
call
shl
div
div
loop
call
xor
out
out
shr
aas
loope
rol
aad
repnz
fisttpll
sti
lret
rol
cmc
cmc
stc
lret
hlt
into
into
call
rcl
jmp
hlt
iret
cmp
out
mov
cld
out
call
in
icebp
cmp
hlt
enter
fcmovnu
cmp
fcomip
out
xchg
in
fisttps
mov
lock
hlt
aaa
out
lret
ret
fcom
imul
mul
in
loopne
xchg
or
aam
repnz
out
into
xlat
test
out
std
jecxz
out
stc
in
mov
std
test
iret
jecxz
out
loop
aad
clc
fmul
sar
loop
icebp
aas
shl
jmp
ret
test
test
xor
shl
hlt
call
idiv
loope
rcl
loope
loope
fmull
loopne
loopne
xchg
loopne
aaa
repz
enter
loop
sar
stc
cld
std
hlt
out
xchg
cld
mov
call
fmul
in
in
loopne
in
test
ret
out
jmp
xchg
fdivp
xlat
rcl
repz
bnd
int3
call
repnz
xor
xchg
fiadds
out
loop
xchg
push
stc
xor
in
or
lret
hlt
cld
xor
loop
stc
out
xchg
test
lret
ljmp
in
fcos
iret
cmp
xlat
int
into
fmuls
shr
icebp
repnz
shll
xlat
ljmp
out
in
xchg
mov
in
xchg
shl
out
icebp
rcl
rcl
lret
fcomi
loopne
cmp
cmp
call
fiadds
int3
repz
fsubr
ss
jmp
icebp
fcmovnu
mov
cld
cld
xlat
loopne
mov
leave
ror
lret
xor
cmp
loop
repz
xchg
fld
lret
cld
mov
or
loope
mov
enter
cmp
cmc
iret
in
jmp
ffreep
loopne
neg
std
std
clc
int3
jecxz
int
mov
xchg
jmp
lock
idivl
int3
out
shl
addl
in
fcmovne
in
int
mov
ss
iret
cs
fcomi
jecxz
adc
fcomp
fildl
jmp
cli
shr
ss
ds
xorb
rorl
xchg
nop
repnz
int3
repnz
fcmovnbe
ds
loope
fildl
in
lret
ffreep
cli
xor
and
loope
jmp
sar
cmp
aad
aad
icebp
ffree
test
out
loop
fistl
loopne
cmp
out
idivb
repnz
lock
call
filds
xchg
enter
lock
std
or
stc
loopne
mov
sub
sub
imul
in
cmp
stc
jmp
lret
jmp
fnop
repz
cmc
mov
mov
mov
int3
in
fsubrp
orl
fsubr
cli
int3
hlt
aas
jmp
cmp
icebp
rol
cmp
clc
stc
fmulp
xchg
xor
xor
clc
xlat
fcomip
sarl
fdivp
cmp
fadds
ret
sti
xor
lret
cli
out
cmp
xlat
cmp
addl
cmc
fsubp
xchg
out
ljmp
hlt
cli
das
cmp
stc
rolb
idiv
fcoml
hlt
shll
out
into
xor
lds
sti
cmp
loopne
jecxz
xchg
loop
out
mov
sar
mov
out
stc
lock
adc
in
in
sub
sbb
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
sub
mov
sub
movl
adcl
jmp
mov
fcmovne
jnp
xchg
jb
pop
scas
outsl
sub
add
lock
xchg
and
mov
in
jmp
xor
ror
repz
icebp
shl
clc
out
mov
ds
add
repz
in
in
iret
std
repz
cmp
cli
aam
icebp
call
cmp
repnz
out
fmulp
stc
leave
icebp
int
fsubr
shl
jmp
ret
testb
out
mov
ror
in
out
aad
fdivrp
std
idivl
adc
xor
int3
imul
or
push
rcl
cmc
ss
ss
cmp
cmp
loope
cmp
xlat
fucomi
lret
cli
into
in
xchg
enter
lock
imul
cld
lret
fdiv
call
mov
in
sti
mov
shr
leave
out
cmp
cld
jecxz
xlat
filds
enter
mov
xchg
iret
shlb
ss
call
jmp
into
fiadds
mov
lea
repnz
ret
sti
ljmp
xchg
fsub
faddp
ljmp
repnz
out
out
xor
clc
leave
aam
lret
neg
rcr
sarl
lock
mov
in
loopne
into
in
xor
fmul
incb
sub
repnz
orl
bnd
leave
xor
cmp
fst
in
repnz
leave
hlt
int
mov
fiaddl
loopne
jmp
fld
loopne
clc
test
out
sti
fiadds
mov
mov
addl
jmp
test
cmp
loope
test
call
test
fcmovb
xlat
in
ror
fidivs
rolb
aam
mov
loopne
xchg
lret
cmp
hlt
lret
enter
test
xchg
mov
addl
xor
das
aad
aas
std
sarl
mul
call
into
ljmp
ss
loop
aam
leave
xlat
cld
not
hlt
rcr
lock
jecxz
in
testb
out
div
xor
fsub
shr
shr
loope
rcr
mov
cmc
repz
lret
out
leave
loope
add
shl
out
clc
fdivrl
xor
loopne
lock
ljmp
out
out
xchg
cld
shr
jecxz
not
xor
aam
rcr
cmp
std
mov
xchg
cmc
idiv
mov
in
mov
popl
fdiv
fnstcw
icebp
fcmovbe
cmc
out
fcomp
test
cli
incl
out
ficoms
cmp
xor
cmp
aam
cld
xor
xlat
fdiv
ret
jecxz
out
in
flds
mul
lret
rol
cmp
out
clc
ret
sarb
rcr
rcr
aam
jmp
into
mov
loope
fcmovu
fcmovnb
fcmovne
iret
repnz
fucomp
sti
mov
mov
into
fcomp
sbb
xchg
test
jmp
int
rcl
in
ljmp
out
roll
das
shll
int
aad
int3
test
loope
test
out
out
loope
test
xchg
mov
repnz
aam
int
lret
cmp
ret
xchg
in
fadd
jmp
xchg
nop
das
leave
xlat
loop
into
cld
fldz
ds
repz
fiaddl
cld
cmp
fsubrp
sub
mov
cmp
sub
enter
sti
loopne
repnz
mov
clc
into
int3
sar
jmp
jecxz
cmp
ljmp
repz
xor
fcmovnb
ret
mov
std
decb
out
xchg
in
cli
xor
jmp
sti
lret
or
rcl
incb
adc
iret
xchg
out
xor
jmp
cmp
jmp
cmp
repnz
addb
aas
fdivr
mov
shl
repnz
rcr
out
clc
idiv
stc
aad
filds
fldl
hlt
in
jmp
in
ror
cmp
stc
int
in
clc
out
xchg
aam
mul
ljmp
into
out
ljmp
aaa
sti
icebp
int3
loop
add
rorb
out
lret
incl
lock
cmc
clc
sti
fcom
jmp
sar
cld
jmp
out
xchg
test
movl
sub
mov
notl
mov
mov
jmp
lret
ror
rcr
lret
fistl
sbb
pop
filds
jle
add
roll
hlt
out
in
jmp
cmc
cmp
rcl
rcr
cld
out
fcmovu
or
mov
cs
cli
cmp
hlt
ret
xchg
fcomp
cmp
dec
out
int3
jecxz
in
in
sarl
loope
ror
xchg
xlat
in
cli
neg
iret
icebp
lret
in
vshufps
into
clc
rcl
test
clc
loope
cli
clc
lret
test
iret
mov
iret
xchg
iret
lret
cmp
in
repnz
cmc
fdivp
cld
ljmp
jmp
in
les
aaa
aad
ljmp
repz
xchg
sar
jmp
mul
out
lret
jecxz
lea
lret
sar
icebp
call
clc
in
cmp
rol
clc
std
cmc
int3
cli
out
leave
sti
out
icebp
jmp
ror
jmp
test
incb
cmp
xchg
loopne
int3
jmp
out
xor
ljmp
shl
clc
vpsubusw
cld
and
out
xchg
jecxz
loop
xlat
hlt
shr
out
cmp
into
sti
xlat
rcl
aam
ljmp
mov
fcomip
loope
out
call
repnz
loop
std
cmp
icebp
vcmpps
mov
mov
cmp
imul
fnstsw
sarb
lret
roll
sub
les
test
cmc
jmp
aad
into
cmc
ds
add
test
lret
loopne
shr
ljmp
xor
imul
std
cmp
shl
or
xchg
loope
out
jmp
ret
lret
clc
fucomp
cmp
std
clc
ret
xchg
int
ss
aad
cli
ss
cmp
int
repz
in
fdiv
mov
xlat
mov
mov
out
fsubrp
shr
shr
mov
repnz
fistpll
mul
idiv
enter
call
in
in
cld
nop
iret
iret
jmp
xor
shr
cmc
stc
test
mov
stc
out
out
rcr
int3
fldlg2
int3
in
lock
shl
flds
mov
rcr
xchg
xchg
xchg
aaa
vpaddusw
stc
repnz
loope
loope
mov
rcr
fucom
into
mov
xor
sub
enter
cmp
cmc
clc
test
xchg
test
mov
loop
fmul
int3
in
sti
aaa
out
sbb
loopne
idiv
jmp
mov
sar
std
out
xor
cmp
hlt
icebp
cmp
adc
out
xchg
out
xchg
out
addl
fsubr
filds
aad
test
xlat
popl
iret
hlt
xchg
rcl
xor
jmp
int3
into
cmp
shr
std
leave
in
enter
out
imul
xor
cmp
jmp
int
cmp
jecxz
ror
into
xor
test
fldl
out
fcoml
shll
into
stc
enter
aad
ds
cld
fsqrt
ljmp
ljmp
jmp
icebp
in
fdivrp
jmp
mov
xchg
enter
icebp
out
test
jmp
lret
fdivrl
or
addb
in
mul
cmp
nop
iret
call
out
cmc
fsubr
int3
std
aas
rcr
stc
out
clc
xchg
sar
out
in
leave
jecxz
ljmp
stc
xor
fucomip
in
rol
icebp
rolb
jmp
mov
orb
fsub
cmp
out
iret
aas
lret
cmp
ret
sar
les
in
lret
out
ror
xchg
in
cmp
ljmp
incb
neg
mov
xlat
fmuls
test
cmp
shll
cmp
sar
out
fdiv
sti
out
std
fmulp
ljmp
repnz
cmp
cmp
icebp
fidivrs
aaa
into
fistpll
mov
enter
nop
sub
loop
xchg
nop
repnz
sub
in
lock
loope
loopne
mul
test
mov
decb
addb
shl
cmp
sar
sti
rorb
xchg
stc
sti
mov
repz
fdivs
shr
lds
add
enter
int
fnstenv
rorb
xchg
add
add
cmp
std
out
stc
ret
jmp
in
in
mov
int
jecxz
ret
fcmovne
in
xor
icebp
fadds
mov
loopne
mov
loope
in
and
clc
jecxz
in
sti
out
enter
rcr
loopne
sbb
hlt
fmull
ret
xor
in
xor
jmp
hlt
ljmp
fidivrl
rolb
testb
loopne
loope
xchg
mul
stc
out
fidivl
in
jmp
out
mov
std
xchg
jmp
out
cld
sub
xchg
lock
aaa
cmp
cld
imul
dec
lock
loop
cmp
sarb
fndisi(8087
test
xchg
aam
xor
jecxz
fcmovnu
xlat
cmp
into
fdivr
sti
fnstsw
rorl
addl
jmp
ror
into
aas
in
cmp
rolb
repz
ljmp
out
mul
aaa
repnz
fcmovu
lret
aad
cmc
sarb
jmp
jmp
add
cli
cld
mov
les
shr
sarb
loopne
fyl2x
loope
clc
std
loop
mov
sub
fsincos
sbb
lret
int3
aam
int
enter
fstp
aas
shl
jmp
testl
mov
sar
sar
cmp
xor
loop
cmp
cmp
ljmp
int
cmp
cmc
xlat
shl
into
mov
cli
lret
test
mov
cmc
xlat
iret
fucomip
rcll
out
div
cmp
into
cli
sarb
enter
in
cli
fdivp
loop
out
div
in
out
clc
jmp
cmp
stc
in
and
loop
call
div
ss
aad
iret
cmp
fcmovnb
loope
lock
jecxz
loope
loopne
into
xchg
cmc
hlt
cmp
not
int
xorl
rcr
in
fucomi
nop
out
cld
in
out
test
icebp
ret
call
push
xor
xlat
mov
lret
sti
in
cli
fimuls
shll
sti
lret
repnz
xlat
ss
jecxz
fistpll
test
into
jmp
sub
in
xor
into
aaa
std
xlat
ss
and
ret
fimuls
cli
loope
call
xor
xlat
fdiv
hlt
leave
sti
int
rolb
leave
sbb
sti
out
sar
std
incb
rcr
ss
lock
lock
xchg
int3
repnz
shl
loopne
into
out
xlat
xor
into
xlat
fdivr
in
out
rcl
rcr
ffreep
aas
jmp
orb
call
in
aaa
iret
call
aas
sar
cmp
fcomi
jmp
lock
cmp
xor
in
sbb
ret
enter
lret
lret
xchg
mov
leave
repz
clc
xor
fnstcw
sarb
cld
test
cmpb
sti
test
mov
fdivp
xchg
out
iret
out
shll
sti
clc
loopne
xor
hlt
rol
ffree
cli
nop
mov
iret
out
xlat
out
hlt
icebp
das
repnz
icebp
sbb
ret
loope
in
fmulp
out
in
mov
in
icebp
das
cmc
clc
in
cmp
fdivrs
clc
jmp
rcr
idiv
xchg
out
xchg
jecxz
rorl
call
sarb
into
ds
fcmove
test
hlt
fld
fucomi
in
fucom
jmp
loope
aad
test
out
cmc
aam
cmp
loop
out
ret
xlat
cmc
jecxz
std
fcoms
xchg
enter
fnsave
leave
repz
out
cmp
ss
test
aas
cmp
ret
nop
xchg
repnz
loope
xorb
repz
cli
sti
fistpll
cmp
call
mov
lret
test
mov
ss
jmp
fcomp
imul
sarb
xlat
out
loope
loope
rolb
xor
call
iret
out
aas
fucom
fcompp
incb
sbb
mov
in
enter
ret
int3
int
add
xor
loope
jmp
shlb
in
leave
flds
stc
cmp
std
in
std
fnstsw
fcmovnu
in
ljmp
cld
iret
aaa
ljmp
shl
std
xlat
mov
sbb
jmp
ret
fmul
fcom
fdiv
jne
daa
cmp
mov
stos
add
xchg
fmuls
xchg
out
int
in
call
shl
aam
idiv
rcr
mov
std
mov
repz
rol
xor
aam
lock
rcr
loope
shl
jmp
fsubr
stc
mov
aad
call
xor
loopne
into
xlat
stc
cld
fiaddl
cld
fsubrp
jmp
jecxz
out
mov
shr
repz
cmp
lret
xor
jmp
adc
cmp
loope
mov
xchg
in
xchg
das
shl
xlat
cmp
xor
std
sbb
jecxz
cmc
test
ret
cmp
out
fdivp
xchg
xchg
repz
call
repnz
out
test
mov
int
ljmp
out
ret
enter
cmp
clc
aad
cmc
repnz
sti
hlt
xchg
loopne
shl
or
int3
jmp
call
not
ds
orl
mov
xchg
sub
xor
xor
repnz
int3
clc
ljmp
repnz
and
mov
int3
into
shrb
fcmove
fdiv
out
fcmovbe
loope
fsub
adc
xlat
mov
incb
xchg
xor
sti
sti
cmp
cmp
sarb
xlat
hlt
into
ds
fsub
call
out
jecxz
int3
rcl
xor
cmc
xor
call
loopne
and
flds
in
mov
xchg
rclb
stc
ljmp
cmp
inc
cli
sti
clc
mov
fimuls
iret
xchg
aas
enter
hlt
iret
fstpt
ds
inc
fcmovb
rcr
lock
xchg
cmc
shr
cli
stc
aad
div
leave
xor
ret
repz
rol
xchg
jmp
lret
loope
jmp
hlt
neg
in
out
sar
int
test
out
leave
in
cli
in
test
ljmp
in
xor
fdivr
in
sarb
loopne
test
in
cld
int3
xchg
int3
jecxz
xorb
ret
in
iret
stc
fistpll
out
inc
testl
mov
aad
jmp
aam
into
mul
neg
cmp
ret
loope
hlt
mov
lret
loope
enter
ss
loopne
cmp
dec
idiv
jecxz
xchg
sub
rcll
xor
int
jmp
in
cmp
out
clc
icebp
ffree
push
in
aad
fimull
xchg
xchg
jecxz
jmp
repnz
cmp
into
loopne
adc
mul
lret
std
xchg
mov
lret
ret
fdivrl
icebp
cmp
repnz
sti
in
mov
jecxz
xchg
fiadds
clc
sar
aaa
cli
div
ds
jecxz
hlt
rol
ret
test
notl
loope
cmp
cmp
ljmp
int
add
cld
mov
mov
repnz
les
rcl
aaa
cld
rcr
cmp
fcmovu
clc
flds
fsubrp
mov
int
repnz
cmc
leave
out
call
leave
neg
addl
fsubr
jmp
loopne
xor
out
not
ljmp
ret
ret
rol
mov
fisttps
ljmp
sti
clc
cmpb
fcmovu
fdivr
loope
cmc
decb
out
out
call
shr
fcomip
cmp
in
in
in
stc
fxch
cld
iret
lret
sti
test
mov
cmp
int
in
cmp
ror
aad
ret
fucom
ret
fcmovu
fadds
loop
rcl
icebp
idiv
cmp
lret
cmc
imul
lock
neg
add
out
xlat
mov
rcll
xor
out
call
rcl
loop
idiv
repz
addb
shl
loop
fcmovbe
ljmp
xor
xlat
fcmovnb
in
sti
mov
cld
push
xchg
out
fnstcw
aad
lret
iret
fstpt
xor
shr
in
hlt
jecxz
sti
xchg
incb
in
hlt
out
lret
out
aad
dec
cld
ds
fisttpll
loop
ljmp
int
shrb
not
shl
xor
leave
in
aad
fcmovnb
out
rolb
aas
out
fiaddl
xchg
repnz
cmc
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sub
jmp
aas
rcl
aad
fstp
loop
pop
mov
popa
in
add
add
clc
les
leave
fidivrl
cmp
loopne
div
aam
loopne
call
leave
out
rcl
lret
out
hlt
in
div
fistpll
cld
adc
fsubrp
ljmp
out
das
xor
ljmp
repz
rcr
testl
mov
shl
repnz
fdivrs
repnz
sar
loope
xchg
orl
in
sti
cld
cmp
xorb
push
repz
and
int
int3
into
xor
hlt
cmp
into
xor
in
int3
sarb
test
lds
icebp
loope
out
lret
jmp
std
fldln2
into
test
rcr
mov
out
loop
mov
in
mov
xor
leave
out
fcmovbe
shl
cmc
in
jecxz
std
in
jmp
jecxz
call
cli
cmp
cmp
not
aas
cmp
hlt
cld
fmull
mov
in
loope
ss
stc
int3
out
jecxz
shl
ds
mov
jecxz
repz
xlat
repz
in
iret
enter
cli
aad
jecxz
iret
call
cmc
mov
cmp
fstl
aaa
sub
lret
cmp
testl
cmp
nop
mov
divl
rcl
out
cmc
xlat
ljmp
fcos
xchg
incl
subb
cmc
aad
repz
int
in
out
hlt
test
ret
mov
out
int
repnz
sub
in
sti
fnstenv
test
shl
stc
call
loop
lock
loop
jmp
jmp
aam
int3
std
loope
std
xor
out
test
jecxz
out
shl
loop
xor
fsubrl
cmp
loope
lret
out
idiv
fpatan
leave
loope
popl
icebp
in
fmul
into
out
out
repnz
lret
cmp
out
fmull
jecxz
loopne
stc
in
ljmp
clc
sbb
test
enter
int3
aad
loope
in
clc
cmp
sti
fucomip
stc
clc
loop
rcr
aam
fcmovne
flds
lret
call
repz
in
fcomp
lret
out
fcom
sti
xlat
cli
in
fiadds
test
fsubr
lret
call
cmc
aaa
clc
in
hlt
aam
into
cmpl
call
sbb
ficoml
aaa
rol
aad
lock
cmp
rol
fcom
ds
shl
hlt
in
loope
xchg
jmp
aam
hlt
in
xor
idiv
or
shr
cld
loopne
xchg
shr
test
cmc
in
call
out
cmp
jmp
ljmp
enter
out
fsub
and
out
hlt
out
ss
clc
aam
clc
cmpb
lret
mov
out
dec
into
out
out
loop
fcmove
repz
shr
aas
cmp
rcr
ljmp
mov
in
xor
cs
xor
enter
fadd
rolb
leave
test
iret
fcmovne
out
mov
out
aas
repnz
aaa
xor
cmp
fucomi
in
ret
hlt
loop,pt
loope
repz
lret
lret
aad
xor
shl
xlat
add
fdivrp
fisttps
dec
ljmp
ljmp
in
in
lock
sbb
stc
mov
rolb
out
aaa
in
cmp
clc
fcomi
cmp
out
into
test
cmc
xlat
cld
lret
mul
ljmp
shr
xor
aad
in
in
repnz
ds
fcom
ret
movb
in
fcmove
stc
jecxz
out
sub
aam
int3
fstpt
icebp
shr
cmp
ss
mov
fldl
loope
leave
std
mov
into
xchg
lret
rol
sti
cmp
cmp
loope
in
in
loopne
call
nop
cld
dec
fstl
xor
lock
xlat
ror
out
std
loopne
xchg
fdivrs
fxch
mov
inc
cli
in
lret
loop
jecxz
into
icebp
xor
repz
aad
repz
cli
shl
mov
test
mov
jecxz
jecxz
jecxz
fsubr
aad
out
fld
cld
jecxz
mov
sbbl
jmp
leave
aad
xlat
fcmovnu
ret
pop
lock
mov
repnz
add
rolb
cld
cld
fyl2x
test
loop
cmc
ror
cmp
cmp
shl
neg
aas
fadds
in
call
call
aam
lret
int
ds
sbb
rol
cmp
test
loopne
jmp
xor
repz
ljmp
out
div
dec
loop
mov
nop
jecxz
loopne
test
rol
shr
out
fdivs
lock
clc
cmp
loop
sti
les
fiadds
rcll
int3
sti
cmp
aam
sar
out
cli
lret
int
in
leave
fiaddl
loope
mov
sti
rcl
cld
fdivr
jmp
jecxz
fld
rolb
in
ljmp
out
xor
aam
cmp
cmc
test
rcr
cli
leave
lret
mov
ficoml
cmc
ss
aaa
xlat
lret
in
std
cmp
fucomi
rolb
flds
aam
cmc
loope
xor
cs
aaa
xlat
hlt
fsub
fdiv
stc
in
ret
xlat
int3
fdivrp
loopne
in
lret
call
out
cmp
cmp
cmp
int
cmc
repnz
add
out
fst
loopne
leave
into
ljmp
xlat
shl
fdiv
out
rcl
cmp
test
neg
test
stc
nop
out
call
xor
leave
jmp
fmulp
out
and
clc
cld
call
loop
lock
leave
mov
ret
aam
call
fsub
aas
loope
fadds
out
out
mov
leave
in
fptan
cmc
leave
cmp
lock
into
cmpl
fists
aam
aas
ret
out
into
leave
cmp
ds
in
xlat
xrelease
out
lret
std
ljmp
int
cmc
xor
in
into
cmp
enter
in
std
test
loop
int3
loop
incl
in
in
repnz
shl
aas
cli
loop
fcomip
fld
fcomp
ret
mov
test
nop
shl
into
rol
xor
lret
jmp
hlt
hlt
cmp
clc
ret
out
loope
jmp
loop
mov
fsub
ljmp
xor
enter
bnd
aaa
test
rol
incl
mov
xchg
cs
loope
leave
out
aas
aas
rcl
addl
les
repz
lock
xor
ret
std
cli
ljmp
mov
shr
call
ds
cmp
cli
cld
repnz
in
loope
adcl
out
int
repz
jmp
not
lds
mov
incl
not
fdiv
clc
sarl
fstp
and
and
cli
jmp
mov
mov
enter
sti
fstpt
cli
stc
ljmp
mov
clc
testl
jmp
sub
cmc
cmp
fidivrs
fcom
xlat
cmp
cmp
in
lret
enter
decb
xor
imul
out
fnstenv
repz
cmp
call
clc
sub
cld
fsub
out
shl
jecxz
call
clc
cld
cld
fdivp
aas
cmp
not
xchg
add
out
xchg
jmp
cmc
stc
vshufps
xlat
cmp
hlt
aam
jecxz
mul
xchg
mov
mov
loop
call
call
into
sarb
fchs
aam
xlat
fsubp
sbb
mov
hlt
leave
test
fnop
mov
in
mov
shlb
stc
cmc
aam
std
shl
lock
in
stc
fisttps
in
leave
ss
jmp
fistpll
int3
cmp
mov
adc
call
jmp
hlt
cmp
lock
ss
std
test
cmp
inc
cmp
in
clc
cld
in
call
jecxz
subb
sar
in
aas
fcmovne
shl
rcl
and
int3
mov
out
lock
ss
cmp
hlt
cld
fdivl
cli
loopne
repz
fucomi
mov
mov
in
ljmp
ds
std
hlt
repz
jmp
fimull
repz
ljmp
jmp
stc
aad
xor
ret
sar
cld
test
leave
popl
xor
add
addl
mov
mov
sub
movl
mov
xor
mov
jmp
ror
ret
int
movsb
inc
push
mov
testl
jle
lock
les
out
out
out
xor
call
rol
cli
cmp
cli
out
sub
leave
xchg
xchg
jmp
cmc
cmp
cmp
fcmovbe
roll
cmc
lret
lds
mov
out
xor
in
cmp
ss
rolb
mov
fdivr
sub
leave
fcomip
lret
xchg
xlat
int
ljmp
cmp
clc
cli
lock
fldl
mov
ret
int
int3
fisttpll
lret
fcom
cli
icebp
ljmp
aam
or
lret
enter
xchg
addl
std
into
aaa
int
sbb
ret
jmp
loope
lret
enter
cmp
fidivrl
ret
loope
repnz
cli
mov
nop
hlt
xor
sti
icebp
xor
icebp
shl
xor
loope
xchg
fdiv
xchg
int3
fadds
xchg
bnd
cld
cmp
aam
xchg
test
icebp
sti
cmp
fisttps
repz
stc
ret
sarl
sti
repnz
cmp
ljmp
add
mov
fcomip
leave
in
repz
out
aas
fdiv
fnstsw
lock
xlat
fcmovnbe
cmp
sar
jecxz
lock
icebp
ret
call
in
aad
xor
fucomi
fmull
cld
sub
lret
jmp
xlat
lock
cmc
int3
loopne
out
out
rcl
enter
out
enter
icebp
nop
repnz
clc
xlat
fcomi
out
cld
roll
sbb
mov
out
ljmp
call
xor
int3
shl
hlt
cmp
idiv
std
iret
add
aas
sti
mov
in
int3
mov
lret
aas
in
jmp
out
loop
sarb
test
addl
mov
iret
fucomip
xchg
cmc
aaa
fsubr
fcom
out
cmc
cmp
test
in
test
in
mov
in
icebp
ds
fstp
clc
inc
stc
enter
addl
in
lock
xlat
xlat
int
ss
jmp
xlat
cli
aas
testb
lret
mov
int3
lock
cmc
shl
in
rcr
ljmp
jecxz
out
ret
mov
test
lret
ljmp
fildl
fcom
rol
neg
ret
int3
fcmovu
jmp
int
iret
out
mul
stc
in
aad
sti
lock
jecxz
aam
aam
jmp
mov
xchg
addl
enter
fcomp
clc
ret
iret
cmc
in
repz
loopne
mov
loopne
leave
notb
cli
repz
lock
out
loopne
clc
in
cld
loop
enter
loop
hlt
call
out
into
in
shl
loope
mul
ret
iret
faddp
hlt
lret
in
out
mov
loope
xchg
out
rcl
xlat
fcomp
repz
ljmp
shl
cmc
std
leave
jmp
popl
mov
cmc
xlat
ret
aaa
ljmp
fdivr
clc
add
jmp
mov
int
lock
repnz
cmp
enter
hlt
bnd
std
and
int3
mov
out
neg
xor
fstp
ljmp
rcl
mul
out
mov
enter
hlt
in
enter
sar
iret
xlat
fcmovu
cld
xor
loop
fmuls
lock
into
into
cld
aam
out
ds
cmp
repnz
ret
loopne
rcr
out
lret
loop
mov
enter
cld
fdivrs
sbb
sti
aad
loope
mul
fsub
out
lret
loopne
cmp
cld
repz
sti
lret
repnz
cmp
fadds
fdivr
into
adc
ret
shrl
aad
fnstcw
int3
out
loope
xchg
jecxz
std
mov
ret
xchg
ror
imulb
xlat
out
fcmovnbe
out
fdivrp
cmp
test
cmp
mov
out
sub
into
cmc
icebp
xor
aam
fdecstp
icebp
rcl
aad
cmp
fmulp
fmulp
nop
jecxz
lock
shl
fcmovnu
jmp
cmc
iret
fdivrs
cmp
rorl
in
out
in
out
cmp
lret
movl
jmp
ret
int3
rcl
ret
fldl
cmp
push
add
fxch
idiv
sti
cmc
incl
adc
cld
fldl
aam
ret
std
jmp
jmp
std
stc
cli
iret
sti
iret
out
clc
cli
call
or
push
call
std
ror
icebp
jmp
loopne
shr
cmc
fcomip
aad
test
mov
cld
jmp
cmc
shrb
xor
cmp
sti
ljmp
shl
ret
xchg
ror
xor
xor
aam
enter
repnz
stc
cmc
in
jmp
out
hlt
ljmp
fdivr
fsubrp
leave
cmpl
aas
out
in
loop
sti
mov
xchg
xchg
sar
cmc
jecxz
out
xlat
repnz
out
repz
rcr
rcr
cli
call
mov
mov
jmp
aaa
clc
cmp
jecxz
out
cmc
cmc
fucom
test
flds
call
int3
iret
aaa
aas
fsubp
fisttpll
testl
icebp
loopne
leave
ljmp
cmp
xor
mov
stc
cli
fimuls
xchg
loopne
out
lock
cmp
testl
stc
test
xlat
xchg
fmull
aad
loopne
jmp
cmc
jmp
cmp
iret
rcr
loopne
test
jmp
fcmovnu
xchg
repz
lock
aam
fidivrl
ljmp
filds
test
ss
int3
ss
mov
xor
cli
call
xchg
test
in
jmp
out
repnz
rcr
call
ret
cmc
stc
ret
jecxz
addl
out
fucomi
std
loope
out
enter
lret
std
cmp
neg
ret
movl
mov
in
cmp
ss
icebp
aam
ret
fcmovbe
in
fcmovb
addb
loopne
fxch
out
loopne
rol
cmc
repnz
fsub
mov
fdivr
loop
faddl
shr
repz
xor
lret
xor
ror
jmp
call
cli
nop
mov
sbb
fdivr
in
cmc
fmul
rcr
aas
test
out
std
lret
sti
sub
nop
rclb
cmp
in
fcom
sti
fdivrl
loop
mov
int3
mov
cmc
sub
cmp
ss
enter
fld
xchg
fcmovne
in
lret
mov
sti
mov
faddl
xlat
enter
cmpl
mov
loope
aam
leave
lock
jmp
int3
lret
xor
aaa
call
aad
aad
stc
fildl
test
mov
out
ljmp
fsqrt
std
neg
fidivrs
test
sarl
mov
fadd
in
test
roll
jecxz
cmc
out
lret
out
cli
iret
fnstcw
in
nop
out
out
out
xchg
popl
in
fnstsw
jmp
clc
cli
rol
std
clc
sti
fdiv
sti
stc
out
mov
fstp
int3
or
lret
fcmove
sarl
aaa
ds
shl
jecxz
stc
movb
fadds
iret
lock
aaa
in
dec
cmp
out
cli
neg
test
loope
cmc
in
in
xchg
aad
xor
ss
sbb
iret
fdivp
fistpll
fisttpll
orb
xlat
xlat
xlat
out
idivb
sar
jmp
clc
loope
fcmovnbe
hlt
fsub
xlat
mov
adcl
rcr
jecxz
shr
sbb
jecxz
out
test
fiaddl
ret
xor
jmp
leave
adc
rol
sar
in
in
sti
call
out
and
lock
fcomi
repnz
lock
fcmovnbe
rorl
out
nop
in
adc
xor
repnz
fsubr
cmp
std
sarb
std
cli
test
xchg
leave
movb
sbb
test
lock
rol
in
in
in
sti
aad
in
test
test
cli
fldl
loopne
xlat
repz
repz
in
clc
icebp
cmp
fadds
vcmpsd
leave
mov
loop
lea
in
out
aam
lret
sbb
aad
loop
roll
and
inc
inc
shlb
jmp
fadd
aam
fst
fcoms
sbb
jg
insl
sub
stos
add
int
sti
loop
in
shl
int
out
shr
call
repz
ret
ljmp
fisttpll
ljmp
xor
jmp
in
sbb
out
std
mov
mov
ror
adc
xor
int3
cmp
ror
ret
test
enter
aad
decl
hlt
ljmp
xlat
cmp
flds
shl
rcl
xbegin
popl
xor
rol
aaa
ss
fcmovne
cld
into
cmp
xchg
in
int3
lret
ror
in
xchg
loopne
icebp
cmp
cli
rcr
leave
cmp
shr
cli
cld
repnz
cld
mov
rcl
mov
call
xlat
cmp
ljmp
sti
cld
xlat
out
mov
in
mov
incb
out
imul
repz
sar
lret
xor
lret
test
std
lret
lret
aas
xlat
lret
out
fnop
into
icebp
loope
xlat
jecxz
div
loope
cmp
aad
cli
call
iret
clc
int
call
repz
loop
rolb
pop
mov
cld
jmp
in
repnz
enter
in
xor
cmp
in
cmp
test
mov
enter
faddl
lock
stc
xlat
out
cmc
xor
ds
icebp
hlt
test
fidivrs
fdivp
mov
repnz
sub
cmp
shr
icebp
repnz
int3
add
fxtract
in
ljmp
sbb
shll
xlat
cmp
rcl
leave
aad
or
xlat
clc
xchg
in
mov
shr
out
xor
out
xlat
enter
iret
roll
clc
addb
mov
loop
xorb
call
shl
lret
lock
clc
out
repnz
clc
lret
fadd
iret
test
int3
aam
test
vpsubusw
cli
aaa
cli
ljmp
incb
add
vpsllq
cmc
bnd
bnd
faddl
aas
cli
sub
fsubr
fstp
int
ffree
orl
idivb
out
ret
xor
cmc
out
iret
loop
in
adcl
sarl
idiv
fdiv
in
mul
cli
shr
in
in
in
lea
loope
cmp
out
clc
cli
out
ffree
hlt
int
into
ffreep
ret
sbb
lea
loop
xchg
aad
into
iret
call
lret
stc
out
cmc
aam
fstp
sti
sbb
jmp
out
jecxz
lock
xor
hlt
lret
fcomi
fistpll
rcr
div
shl
aad
addl
xchg
repz
ss
out
out
lret
fsubr
adc
add
fdivr
lret
loopne
int3
lret
filds
ror
sti
std
fiadds
repnz
idiv
ret
les
mov
into
nop
cmc
lret
jmp
repz
cmp
jmp
rol
rcl
aam
std
mov
xchg
test
add
int
hlt
aad
cmp
icebp
loop
cmp
repz
loope
int
orb
xor
out
leave
int3
out
loop
clc
aad
xchg
fxtract
ds
fisttps
repz
icebp
jmp
cli
sti
aam
iret
cli
xlat
jecxz
loope
enter
std
mov
jmp
lock
jmp
xor
aad
leave
cld
cld
hlt
fcomi
aaa
out
fdiv
out
mov
int
shl
clc
shr
cld
ljmp
in
filds
std
fucom
into
int3
icebp
xchg
aam
xor
aam
rcr
out
xlat
std
cmp
fcmovnu
sti
sar
lea
mov
rcl
out
repnz
in
rcr
or
shr
lock
orb
stc
mov
call
hlt
int3
shl
xor
cmp
cmp
clc
aas
sarb
decb
fdivrp
cli
leave
fsubp
fisttps
jmp
xor
cmp
hlt
jecxz
cmp
loope
lock
divl
ss
xor
icebp
loope,pt
xchg
cld
jmp
neg
mov
into
jecxz
lock
into
cmp
fcmove
ss
idiv
fsubp
out
aad
aad
int3
int3
xchg
cli
cli
in
xchg
call
clc
movl
not
movl
sbb
movl
mov
adc
xor
mov
subl
add
jmp
int
int
leave
push
hlt
cltd
loope
xor
test
test
jle
add
hlt
fcom
out
int3
cld
fdiv
aas
cmp
fsubr
or
fstl
add
shl
shll
lock
aam
filds
loop
out
cli
in
fstl
icebp
cmc
out
fxch
ljmp
fsub
out
mov
lret
int
shl
out
call
call
in
fucomp
repnz
lock
loop
and
test
fildl
iret
aad
xor
leave
hlt
cmp
cld
rcl
test
or
leave
loope
repnz
in
nop
sub
cmp
iret
iret
ljmp
in
jecxz
ret
loop
enter
and
loope
out
in
in
sti
rcr
shr
xchg
test
movb
in
int
hlt
les
in
aad
fstpt
int
fidivrl
mov
hlt
clc
enter
mov
in
ret
les
fst
cmp
hlt
sti
call
jmp
loop
les
mov
nop
shl
int3
loop
shll
cmp
shl
loopne
sbb
lock
test
out
in
mov
lea
xor
fxch
ds
shl
sarb
loop
or
mov
mov
aam
cmc
rcl
aaa
xor
cld
loop
fstp
sar
sti
in
in
xchg
xchg
hlt
ljmp
int3
fidivrs
roll
sti
cmp
in
mov
lret
aaa
aam
ret
cld
cmp
ljmp
cmpl
in
fisttps
loop
int
lock
cmp
hlt
cmc
cmp
in
rolb
faddp
loopne
out
stc
mov
into
ss
aaa
in
not
aad
iret
call
test
in
ftst
test
and
idivb
clc
cmp
shl
cld
cld
movl
int
mov
push
aas
clc
xor
xor
idiv
xor
iret
cld
in
fsub
xchg
cmc
out
mov
ljmp
ret
out
into
out
fcom
in
div
stc
out
and
loopne
mov
movl
aad
sar
faddp
into
cmp
faddp
std
stc
jmp
lret
fisttpll
sub
cmc
lock
fidivrl
stc
into
loop
aad
fmull
ret
call
lock
leave
clc
int3
lock
rcl
std
rolb
fcmovu
iret
iret
adc
jecxz
in
rcr
in
fiadds
addb
int
sub
enter
rcl
aam
call
jecxz
aad
mul
sti
testb
lea
cli
hlt
cmp
stc
loope
fcomip
fcomp
mov
loope
cmc
mov
test
xchg
shl
xor
aam
out
fcmovbe
cli
aam
in
out
faddl
stc
in
neg
ljmp
aam
cmc
clc
fucomp
cli
in
fcmovnbe
incl
rorl
cli
test
lret
ljmp
jmp
incb
fdivr
stc
fcomp
in
std
out
cli
xchg
lock
out
iret
fcmovnbe
repz
repz
cmp
cmc
cmpb
call
fcmovne
jecxz
nop
in
repz
repz
shl
repnz
sarb
orb
sti
test
out
in
enter
fdiv
cmpl
jecxz
addb
out
shl
jecxz
lret
fcmovne
std
sti
in
ret
cmc
ret
incl
loopne
mov
repnz
cli
fsqrt
jmp
loop
les
cli
leave
mul
repnz
in
out
call
cmc
aad
cmp
fucomp
loopne
loopne
ret
test
loope
in
shr
shr
aam
fcomp
into
leave
loope
in
fcmovne
cli
in
fdivp
frstpm(287
add
and
int
rclb
repz
stc
fsub
sbb
rol
fucompp
xchg
filds
lock
stc
ss
ss
ds
int3
neg
and
aam
xlat
enter
and
orl
out
cmp
out
cmp
cmp
fidivrl
cli
movl
je
movl
push
movl
jmp
jmp
int
ret
rol
fcmovnu
jecxz,pn
outsb
nop
cmp
outsl
mov
jle
add
incl
or
popl
call
vpsrld
cmp
testb
xchg
leave
xchg
out
test
loope
ljmp
sar
cld
lret
shl
stc
loope
mov
orl
test
sub
in
dec
aad
roll
std
xbegin
lock
mov
std
int
ret
ss
xor
fdivrp
in
sar
not
aad
cld
jecxz
clc
loope
xchg
jmp
xor
in
aad
stc
cli
cmp
aaa
iret
fsubp
addl
fucomip
icebp
aam
shr
in
cmp
lock
repz
aad
hlt
out
jmp
incl
cmp
jmp
sarb
rol
repz
enter
mov
out
aaa
out
stc
cmp
roll
mov
out
out
std
into
mov
icebp
in
mul
xor
sti
repnz
dec
pushl
xor
xchg
test
ret
mov
loope
shl
sub
cmp
lock
cmp
loope
out
vshufps
popl
int3
out
call
rcl
fcom
aad
cmp
xchg
test
jmp
leave
xchg
fdivp
out
cli
lret
shl
lock
lock
cmp
neg
in
in
clc
test
jmp
jmp
sti
in
sti
fucomip
hlt
loopne
ret
flds
ljmp
repz
decl
cmp
xor
rol
xlat
in
std
stc
cli
out
icebp
hlt
clc
stc
xchg
mov
sti
rcl
in
in
into
cmp
lret
sar
faddl
out
fcmovnu
xchg
xchg
and
lea
ss
clc
lret
lret
idivb
out
loopne
sarb
loope
in
add
loope
icebp
in
rol
in
xor
repz
sarb
ss
test
fmull
cmc
enter
clc
stc
cmp
iret
sbb
in
in
loope
addb
aam
out
in
lret
fldpi
xlat
idiv
rcr
stc
ret
cli
int
xlat
orb
shl
ljmp
lret
std
ds
cmpb
loopne
inc
mov
jmp
jmp
mov
xor
aad
cmp
fidivl
add
cld
and
imul
fmul
cli
cli
loop
hlt
out
lret
loop
xor
cmp
xlat
lock
and
jecxz
sarb
int
fcompp
cli
ljmp
leave
xor
in
iret
in
into
cli
shr
int3
test
iret
aad
loop
clc
sti
cld
stc
or
xchg
das
ljmp
call
in
roll
int3
mov
nop
mov
repnz
hlt
iret
shll
jmp
lock
lret
inc
roll
aam
lock
leave
xchg
loope
icebp
out
xor
sti
shl
fldpi
std
out
cmp
fcomip
cld
in
flds
loop
out
cld
xchg
aam
xchg
cs
cld
out
or
icebp
and
xchg
fdivrp
xchg
out
xchg
mov
jmp
out
in
aaa
not
dec
lret
rolb
mov
out
loope
xchg
stc
clc
cld
cmp
repz
rcl
cmp
vpaddusw
in
cli
fimuls
lock
sarb
idivl
std
cmp
fcomip
shl
add
sti
xlat
sub
in
in
loope
lret
enter
lock
shl
ret
sti
hlt
repnz
orb
fcoml
xlat
in
shl
xor
repz
cmp
stc
shr
loope
roll
in
enter
cmp
loop
cli
sub
loope
fimull
icebp
lock
lock
in
out
xor
aam
xlat
fcomip
lock
fcmovnu
lds
jmp
fcmovb
lret
xchg
mov
xor
sarl
cmp
fdivp
iret
cmp
int
rcl
cli
in
fadd
and
and
stc
sub
rolb
ret
icebp
cmc
clc
cld
orb
out
in
mul
jmp
cmp
hlt
icebp
xor
stc
out
div
cmc
lret
int3
mov
leave
frstpm(287
xchg
mov
addl
mov
subl
sub
jmp
int
ret
aam
fstp
fstl
fmull
mov
add
add
in
xor
fxch
fcmovnu
clc
aam
add
cmp
ret
mul
in
fisttpl
in
out
aad
not
cmp
jmp
adc
test
out
stc
aad
hlt
xchg
out
jecxz
or
ffreep
lret
ret
lds
int3
rcr
fsin
lret
or
cld
mov
in
clc
ljmp
into
xor
shl
cmp
fiadds
lock
test
in
mov
int3
out
lret
mov
xchg
aad
shr
into
loopne
cmp
xchg
fcomip
test
fsub
mov
int3
into
or
shr
ss
lret
lock
in
repnz
in
xchg
adcl
out
shr
into
fcomi
call
fadd
ret
in
hlt
cmc
mov
sbb
mov
out
loop
ss
cmp
clc
xlat
adc
xchg
test
iret
out
mov
into
hlt
cmp
out
jmp
sti
fdivrp
loop
xlat
not
in
in
int3
testl
loope
in
aaa
cld
not
rcr
and
clc
fcmovnb
sti
ret
stc
loop
mov
into
cmc
rcl
cmc
ljmp
fcmovnu
stc
xchg
xchg
lds
xchg
div
out
lret
loopne
lret
loopne
std
enter
xchg
mov
jmp
aam
loopne
test
cmp
mov
jecxz
lea
hlt
in
xor
cmp
das
sti
xor
in
hlt
ret
aas
jecxz
fcmovu
lret
sub
iret
aam
xor
xlat
ss
sarl
ljmp
neg
call
fisttpll
in
loope
xor
lock
fcomp
lret
fcompp
out
xlat
xchg
int
fcmovbe
adcb
clc
xor
iret
cmp
xlat
sti
shl
ds
imul
mov
cld
mov
int
jmp
and
aad
call
call
fnsetpm(287
rcr
jecxz
test
aam
lret
shr
jmp
cmc
mov
ljmp
icebp
ljmp
rolb
popl
mov
xlat
out
cli
fmul
cmp
std
int
ret
cmp
jmp
call
mov
xchg
test
jecxz
xor
out
icebp
cmp
in
rcl
loopne
iret
std
out
test
out
in
ret
lret
mov
out
enter
xlat
cmp
cmp
aas
fdivr
aam
loope
sti
in
mov
mov
xchg
int
out
lock
cli
sar
iret
rcl
ljmp
fprem1
mov
lret
fsubrp
adcl
into
xor
stc
cmp
dec
in
cld
incl
clc
les
lea
in
in
int3
aam
aas
cmp
lret
out
hlt
cmp
jmp
leave
in
jmp
lock
repnz
call
jmp
sar
rol
cmp
out
xlat
in
loop
mov
out
in
loop
fdivs
cmp
lret
aam
xlat
out
loope
flds
lea
icebp
xor
div
leave
std
add
fsub
cli
test
int3
sti
test
jecxz
leave
shr
clc
fdivp
rcr
repnz
shl
in
in
out
adcb
ljmp
in
clc
int
cli
testb
mul
out
out
cli
in
jecxz
xchg
cmc
stc
lret
xor
iret
aad
ret
cmp
in
out
jmp
jmp
lock
iret
cmp
ss
lock
lret
sbb
jmp
xchg
mov
sti
and
ret
leave
ror
fmulp
aad
into
cmp
movb
rcr
mov
mul
int3
lret
clc
int3
fdiv
shl
lock
fucom
repz
lret
cli
mov
fisttpll
mov
lret
test
jmp
repnz
mov
xchg
jmp
loopne
in
repz
cmp
lock
loopne
adc
aad
mov
into
in
cmp
lret
xchg
ss
out
lret
cmp
ret
in
stc
fmul
leave
ficoms
icebp
in
in
out
out
xor
enter
mov
xor
adcl
add
movl
cmp
movl
jb
xor
mov
mov
xorl
xor
or
xor
add
jmp
rcl
rcl
dec
mov
negb
adc
leave
xchg
add
add
cmp
in
cli
fiadds
clc
xchg
in
jecxz
iret
leave
aaa
fcmovbe
lock
rolb
ljmp
mov
into
rol
neg
lock
xlat
cli
xor
shl
std
cld
xchg
int
mov
in
xorb
jmp
sar
repz
cmp
loopne
cli
fxtract
in
xlat
jmp
jmp
ljmp
ljmp
cmp
stc
aam
lock
out
in
loop
in
xor
test
loop
test
xor
clc
aas
xlat
std
out
loope
fld1
jmp
shl
iret
xchg
out
not
in
out
neg
sti
in
aas
iret
jecxz
cmp
addl
adcl
sti
ret
out
aaa
sar
cli
xor
int3
hlt
loopne
icebp
sti
aad
fildl
rcr
iret
int
test
xor
ret
repz
test
cld
ret
testb
mov
hlt
icebp
lock
stc
fsub
shll
fdivrp
out
test
fadds
cld
jecxz
rcl
xor
repnz
stc
in
ss
cmp
cmp
jecxz
shl
out
fucomi
xchg
jmp
icebp
in
out
jmp
lock
int
icebp
cmc
hlt
ret
int3
loope
loop
loop
shl
loop
call
repz
std
rcl
sti
enter
xlat
in
lret
in
mov
fildll
shl
jmp
jmp
call
int3
not
stc
in
incl
lds
sti
std
into
call
cmp
enter
xlat
fdiv
cmc
aaa
aam
sar
leave
jecxz
sbb
shl
cmc
xor
call
stc
into
int
std
out
loop
loop
xlat
addl
mov
ljmp
jmp
fsubr
repnz
shl
cmp
fcomp
icebp
ds
sub
ret
jecxz
int
mov
xor
call
cmc
out
fdivp
adc
loop
aam
ret
mov
int3
neg
lock
in
cmc
adc
out
icebp
leave
leave
ror
repz
clc
faddp
aaa
cli
in
out
jecxz
mov
xchg
jmp
shr
shlb
cli
ror
leave
enter
hlt
loopne
cli
repnz
cld
mov
enter
int
out
cs
aaa
ss
out
imul
fnop
cmp
incb
ffree
in
fcmovbe
in
rorb
int
shl
ljmp
out
repnz
idivl
stc
iret
leave
out
cld
rcr
sar
in
lret
out
lret
std
ds
neg
ds
ds
jmp
jmp
xchg
aam
out
cs
xor
cli
cmp
incb
fcomi
fucom
ffreep
into
mov
imul
xor
out
out
int
fadds
clc
loope
fucom
fucomi
in
into
mov
jecxz
mov
int
enter
in
out
cmp
stc
cmp
cld
fcmovnu
cmp
xlat
mov
ljmp
stc
ret
icebp
cmc
int3
not
lret
sar
ds
cli
aad
cli
fldl2e
in
mov
xor
xlat
shl
cmp
iret
fsub
idivl
test
jmp
cmc
loop
addb
int3
lret
out
xor
push
ds
fcmovbe
addb
int3
icebp
xchg
xchg
xor
into
fldl2e
sti
stc
cld
in
jecxz
fldl
idiv
flds
out
div
sub
xlat
hlt
ss
repz
hlt
aad
in
cmpb
out
clc
cli
mov
loop
aad
rol
cmc
xor
out
cmp
cli
testb
fdivr
cmc
xchg
sbb
out
xchg
cmc
out
in
aaa
cmc
shlb
cmp
hlt
rcr
fld
mov
div
loope
int3
call
fdivp
repnz
xlat
cmp
ss
out
mov
in
add
ficoml
ljmp
cmp
fnstcw
std
fst
stc
fisttpl
fucomi
adcl
int3
sti
loopne
mov
loope
fmuls
std
adc
xor
stc
aaa
cmp
or
std
sbb
ret
cld
fucomp
flds
repz
cmc
aam
into
sar
fiaddl
shl
aam
hlt
in
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
adc
mov
jmp
ror
rcr
ror
js
cmp
xchg
add
add
xlat
sti
sub
out
in
rcr
ljmp
loopne
out
in
sbb
rol
in
lret
int3
ljmp
shr
lret
ss
rcl
div
filds
mov
mov
ljmp
shrl
cmp
sbb
stc
repz
fsubr
mov
lret
loopne
xor
enter
aaa
sarl
out
xor
flds
addl
xchg
lret
shr
int3
fcmove
in
aad
jmp
ss
fucom
xor
in
mov
loop
out
loope
mov
jmp
ret
out
out
rcr
jmp
cld
in
fdiv
out
in
fmul
fmul
xchg
aam
mov
shl
leave
cld
cmp
fucom
aaa
cmp
cld
in
vpaddusw
ffree
xlat
jmp
test
clc
leave
mul
cmp
in
push
cmp
cmp
repnz
aad
fiaddl
shr
loopne
das
aam
repnz
lock
repnz
cmc
lock
not
incl
int
in
xor
aaa
xor
aad
shl
idivl
in
ret
cli
xchg
loopne
loop
xor
lds
fsubrp
fcmovnbe
xlat
rcr
int
loop,pt
jecxz
xlat
out
xlat
out
jmp
xchg
in
jmp
jmp
in
aad
lock
out
call
lock
mov
mov
shl
lret
fcmovnbe
xor
repnz
jmp
in
filds
xchg
fadds
xchg
shr
jecxz
aaa
rcr
shr
in
icebp
sbb
xlat
jecxz
sub
xchg
xor
lret
repz
cmp
rolb
hlt
hlt
cmp
aam
test
rcl
xchg
loop
in
xor
in
stc
aas
cli
cmp
adc
mov
mov
cli
sbb
loope
call
call
ljmp
fiadds
xchg
xor
aad
clc
cmp
std
sti
cmp
lock
cmp
testb
cmc
jmp
test
sti
xor
cmp
fadds
call
fmull
in
leave
lret
out
xlat
repnz
testl
cmp
aam
or
in
iret
out
fcoml
cmp
lret
test
in
aas
hlt
loopne
loope
ljmp
in
xor
enter
aad
cmp
lock
not
in
clc
ror
std
fucomp
jmp
lret
ljmp
iret
sarb
cmp
repnz
xchg
out
xchg
mov
rclb
aam
xor
fstpt
repz
sbb
cmp
repnz
xchg
out
fisttps
roll
in
cmp
clc
dec
sti
adc
roll
repz
fmull
loope
shl
in
lock
clc
div
ret
and
mov
fiaddl
repnz
faddp
in
stc
ret
xlat
icebp
test
test
iret
lock
mul
xchg
cmp
loop
fcmovbe
nop
hlt
imull
xor
cmc
in
repnz
into
cmc
lret
cmp
icebp
out
fcos
ret
in
mov
int3
repnz
clc
vpaddusb
cmp
cmp
in
cmp
hlt
jecxz
int3
std
loope
orb
loop
aam
hlt
out
cld
cmp
cld
aas
out
fcmove
in
fucomip
iret
sti
out
iret
out
ror
fdiv
in
shrb
out
rcr
ret
fstpt
fdiv
xchg
addl
fadd
out
stc
ds
out
int
int3
cmp
fmull
in
mov
out
rcl
xlat
ss
hlt
ds
loope
rcr
loop
imul
fldl
nop
out
xchg
xor
enter
icebp
stc
icebp
icebp
cmp
fdivr
ror
ret
jmp
xchg
iret
loope
xor
stc
cmp
jmp
sarb
cld
sti
addb
addl
loope
divb
iret
ljmp
sbb
aas
aam
xchg
jecxz
fsubp
call
jmp
neg
in
aaa
idiv
aam
fcmovnu
cld
fdivrs
std
out
xchg
xchg
xchg
lea
sub
int
imul
and
mov
sub
mov
addl
sub
movl
cmp
movl
ja
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
xor
or
sbb
mov
movl
xor
sbbl
add
movl
jmp
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
aad
iret
lret
fstp
push
shrl
mov
add
fcmovnu
ljmp
rcr
shl
ret
sti
div
out
out
test
sarl
in
sar
ds
iret
sub
flds
in
mov
orl
out
sti
shl
mul
ljmp
loop
aad
sub
cli
enter
into
mov
cmc
ret
xor
icebp
int
sti
iret
fbstp
iret
cmc
neg
jmp
out
into
xor
out
fstp
test
jmp
out
repnz
fcom
int
cmp
iret
sbb
les
mov
jecxz
jecxz
jmp
ror
cmp
roll
jmp
out
nop
xchg
xchg
ss
xor
stc
cld
cmc
fcmovnu
int3
rcl
fistpll
aad
loopne
in
fisttpll
iret
mov
in
leave
cs
sti
fcomi
cmp
jecxz
rcr
std
cli
call
adc
rolb
leave
lret
fdivl
shl
stc
fst
repnz
cld
mov
xlat
loop
stc
xchg
iret
ret
aam
aad
shl
shl
int
loop
cli
iret
ret
rol
enter
clc
mov
lret
repnz
cmp
hlt
hlt
hlt
lret
ret
cmp
loop
cli
fsubp
jecxz
xchg
aad
int3
xor
xlat
ror
cmp
into
sar
cld
cld
std
rcr
test
fucomi
ret
std
adc
xor
cmp
clc
sarl
loope
hlt
enter
stc
out
loope
xchg
std
repz
out
lret
ljmp
out
xchg
sar
enter
out
iret
call
lock
leave
ret
enter
cmp
loopne
cli
roll
rcr
clc
int3
icebp
xchg
and
fldl
repz
cmp
fiadds
add
adc
orl
jmp
ss
neg
cld
aaa
in
cmp
fsubp
in
fadds
out
filds
xchg
fdivr
jmp
xor
out
idivb
hlt
sar
ret
rcl
repz
jmp
cld
rorb
les
std
sar
rcl
out
rolb
mov
jecxz
fst
ljmp
jecxz
loopne
into
cmp
int
lret
repnz
lock
cmc
in
out
int3
loop
lret
out
repnz
out
test
idivb
ret
lret
shlb
aad
int
repnz
out
test
int3
sar
ret
test
icebp
repz
jmp
aam
test
filds
ret
mov
sti
mov
ss
in
ss
cmpb
shr
ret
roll
jecxz
lret
sti
in
out
aam
shl
jmp
fcmovne
aad
jecxz
hlt
neg
fcmovnbe
lret
cli
lock
addl
jmp
ret
cmp
into
iret
ss
inc
ret
loop
loop
fdivp
filds
frstpm(287
out
ror
shl
repz
icebp
repnz
loop
into
and
hlt
stc
clc
cli
sti
in
jmp
cmp
jecxz
lret
rcl
cs
neg
inc
sbb
ljmp
orl
jecxz
fnsave
aam
idivl
cmp
faddp
out
faddl
loopne
mov
loope
pause
jmp
xor
cmp
xlat
std
int
iret
out
cli
fnstcw
cmp
shl
into
addl
sti
out
loopne
jmp
repz
addb
call
std
int3
cmc
jecxz
in
rcl
ss
icebp
int3
stc
repnz
out
ret
imul
loope
mov
lret
in
repz
out
out
xlat
lock
int
jmp
divl
loopne
cmp
repz
fucomip
into
in
enter
loop
not
jmp
aaa
cmc
repnz
loopne
lret
ds
fadd
repnz
lret
sti
int3
lock
cmp
jmp
adc
into
neg
ds
mov
enter
mov
rol
cmp
cs
stc
clc
int3
cmp
rcl
sti
aas
cmp
lds
into
out
mov
xchg
ss
ds
sti
ror
fmul
fcmovnb
fdivr
fucomp
ret
in
iret
xchg
out
loop
enter
repz
sarl
cmc
repz
cmc
std
fsub
xchg
repnz
iret
aaa
jmp
jmp
repnz
int
std
repnz
stc
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
xor
xor
add
orl
add
imul
mov
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
sub
jmp
rcl
lret
fcmovnbe
lods
pop
mov
daa
shlb
jle
neg
mov
lret
loopne
add
jmp
cmp
out
ss
loopne
div
cmc
ret
idiv
idiv
mov
cli
in
shr
fisttps
sub
jmp
shll
loopne
xlat
cld
in
ret
out
stc
jmp
jecxz
lret
xchg
jecxz
out
enter
leave
aam
in
iret
int
xor
ret
cli
xchg
std
int
xchg
out
xor
repz
faddl
loope
cld
ret
dec
iret
fldl
lock
out
in
cli
cmp
aas
repz
jmp
rcl
xchg
out
leave
enter
lret
orb
aam
fstpt
jmp
repnz
lret
in
hlt
aam
iret
mov
mov
nop
fdivr
out
decl
fcmovb
enter
jmp
cmp
out
cmp
mov
cld
lock
int3
fcom
lock
std
fld
test
cmp
fdiv
in
xchg
ljmp
ljmp
sbb
add
push
sbb
in
fdiv
rcl
shl
jmp
repz
lret
clc
mov
lret
iret
fisttpll
loope
shl
repnz
int3
fpatan
xor
xlat
out
out
out
cli
jmp
mov
leave
iret
xor
rcl
lret
in
rol
aaa
addl
fsubrp
test
sti
lret
int3
shl
hlt
iret
out
fsubr
aaa
out
loope
fadds
repnz
in
sti
std
cli
enter
xchg
enter
iret
xor
sti
leave
loopne
loope
repz
stc
inc
lret
in
fld
loop
nop
filds
into
iret
xor
ror
lock
in
xor
ret
std
repz
lret
call
fmulp
shr
icebp
stc
repz
out
out
out
cmp
repnz
out
repz
aam
mov
test
int3
leave
loope
mov
iret
fadd
out
lret
cmp
imul
ret
int3
aaa
xchg
icebp
aad
testb
leave
rorl
in
cmp
int3
xor
cmp
xchg
cld
ljmp
stc
mov
int
fnstcw
sti
fcmovnbe
lock
fcmovb
aas
leave
fadd
stc
movl
ss
cmp
int
fdivr
cmp
neg
in
aas
mov
in
vpsubusb
call
iret
cs
aas
in
ret
xchg
repz
mov
loope
jmp
in
fcmovnu
call
ss
cli
ds
in
fdivl
shl
loopne
jecxz
enter
loop
fiadds
loopne
cs
aam
cmc
xor
iret
loop
aad
sbb
in
aas
fucompp
jecxz
fildl
aam
cmp
xor
ljmp
shl
fisttps
lock
xchg
nop
iret
xor
cmp
lret
in
ds
loop
cmp
loop
ret
test
loope
repnz
aaa
cmp
shl
sarb
in
in
sub
out
inc
loope
xchg
loopne
lret
ret
lret
out
cld
cmp
hlt
loope
out
in
repnz
in
in
in
fst
jmp
cmc
adc
ljmp
shl
std
adc
iret
clc
out
fld
in
fucom
ljmp
cli
ds
sar
cmp
sti
in
inc
aam
fxch
out
int
icebp
nop
ret
repnz
jmp
sarb
cli
out
icebp
cmp
loope
in
std
fdivr
lock
divb
ss
out
cmp
clc
cmpb
in
ret
loop
fninit
int
jmp
std
iret
out
cmc
xor
in
in
cmp
cmp
test
cmp
lret
loop
std
fildl
xchg
sub
out
aaa
cmc
xor
int3
int
sarl
cmp
in
test
loope
orb
xor
cmp
repz
shr
xlat
loopne
loope
mov
sbb
enter
fcmovnu
into
aaa
aad
out
cmp
cmp
in
shl
fmuls
in
faddl
iret
ret
cli
leave
cmp
fxch
aas
idiv
aad
testl
out
jecxz
out
out
xchg
test
xor
in
out
xlat
jmp
fadd
cmp
ds
cmp
mov
cli
ret
or
cli
mov
cmp
jmp
fcom
rcr
fstp
fnstsw
fmull
daa
pop
xchg
sti
jge
add
add
xchg
aad
loop
int
fcmovnbe
cli
clc
xor
cmp
sbb
mov
in
nop
ljmp
aam
loopne
cli
stc
cmpl
flds
repnz
mov
rcl
xor
in
cmc
rolb
aas
faddp
lock
repnz
fxch
incl
repz
test
lret
xor
rcl
xlat
repz
test
loope
ret
jecxz
test
call
int3
in
fsubr
out
lret
lret
sti
push
cmpl
xor
xor
mov
jecxz
cmc
shr
int3
aam
ss
lock
std
rcl
cmp
loope
fucompp
mov
mov
repz
xor
ljmp
icebp
cmp
sti
flds
loopne
fucomip
jmp
out
shll
xor
imul
push
cmp
shl
mul
add
mov
leave
roll
rol
xor
fldln2
aam
repz
aad
hlt
mov
std
std
out
sbb
jecxz
leave
out
enter
cmp
jmp
lret
cmp
test
loope
test
sti
iret
out
xchg
test
sub
cmp
leave
cli
lret
cmp
cld
out
rcl
loope
icebp
lds
call
int
repnz
sub
in
hlt
aam
xor
ror
fdivr
testl
fisttpl
ljmp
les
lock
fsubp
fdiv
cld
ret
out
jmp
call
out
jmp
out
lret
out
jmp
ret
sar
neg
push
sti
out
fcomip
shl
shrb
xlat
int
cmp
fdivp
rcr
aad
sar
roll
lock
out
repnz
repnz
out
in
sti
xor
sarl
cmp
fimull
idiv
cli
shl
xchg
lret
xchg
pop
jmp
test
cmp
fdivrl
jmp
neg
add
loope
clc
hlt
lret
cmp
cmp
jmp
ss
out
into
in
xchg
call
jecxz
orl
repz
icebp
aaa
into
in
out
aaa
out
lret
aad
repz
sbb
mov
fsts
not
cmc
call
idivb
stc
fcomip
aad
icebp
lock
cld
fadds
mov
in
leave
cmp
call
loop
jecxz
cld
cli
mov
sbb
jecxz
ljmp
cli
hlt
aas
cli
aad
into
loopne
sar
lret
and
clc
lock
ljmp
sti
int
test
clc
ds
out
xchg
xchg
fdiv
loope
sar
jmp
ror
lret
rol
std
iret
clc
fadd
sarb
std
test
jecxz
in
jmp
jecxz
mov
stc
fcomp
std
loopne
xlat
sar
xlat
loope
idiv
out
fdivr
neg
mov
call
aaa
repnz
cmp
out
lock
ret
rol
shl
jmp
pop
iret
iret
jmp
jmp
iret
ss
repnz
aam
sti
hlt
jecxz
inc
out
jmp
std
out
mov
nop
mov
lret
mov
lret
iret
repz
hlt
cli
shl
repz
test
fldl2e
roll
cli
out
clc
jmp
sti
lock
xor
shl
ret
idiv
and
out
cld
mov
out
lret
aam
sar
shl
cmc
fucom
std
cmp
mov
out
rolb
xor
xlat
lock
cmp
cmc
imul
roll
iret
test
cli
iret
lock
sub
mov
hlt
out
in
lret
cmp
fsubr
cli
fsubp
div
shl
neg
std
lret
jmp
jecxz
lock
out
xchg
test
fcmovne
sti
lret
in
or
ret
ffree
not
out
orb
fists
les
std
aaa
fcom
ds
idivl
clc
out
lret
jecxz
stc
in
iret
mov
loop
xor
out
fldl2e
sar
stc
sub
in
mov
out
jecxz
into
ficoms
out
fcmovbe
into
lret
fnstcw
aad
repz
loop
rorl
lret
jecxz
xchg
xchg
enter
neg
clc
stc
std
into
cmp
xor
rcr
jecxz
out
xchg
flds
in
xor
int3
stc
aad
clc
xor
int3
ja
mov
jmp
jmp
ror
aam
aad
aam
sbb
stos
stos
add
add
in
loop
fcmovnbe
mov
leave
call
nop
and
popl
hlt
mul
idiv
cmp
repnz
cmp
sbb
test
out
loope
xchg
xchg
repnz
lret
in
out
cmp
fdivrp
cmp
roll
mov
call
sar
into
stc
jmp
aas
aam
cli
out
cmp
loopne
test
xchg
xor
lret
repz
int3
shlb
aam
fxam
ret
int3
ljmp
lock
aaa
mov
iret
div
sbb
rol
or
jmp
mov
lret
xor
fcmovnbe
rolb
in
out
cli
lea
xchg
shl
int3
xchg
ret
out
leave
repnz
stc
fnstsw
fcmovnu
icebp
cmp
in
vprotq
jecxz
xor
xor
icebp
out
into
std
jmp
ret
cld
hlt
loop
cld
mov
in
into
enter
repnz
sti
shl
cmp
mul
hlt
mov
fsub
in
test
lock
in
iret
shr
shl
aad
sti
in
cmc
stc
icebp
call
out
fisttpll
xchg
rcr
in
hlt
int3
fxch
aas
repz
hlt
in
stc
cmp
add
xchg
icebp
incb
xor
sti
cmp
cmp
cmp
jmp
icebp
roll
in
xor
and
xor
das
in
aad
fyl2x
jmp
cli
add
cli
std
fsubrp
cli
cli
rorb
aaa
rol
stc
lret
jmp
test
test
in
ret
mov
jmp
xchg
icebp
ret
fxch
leave
cli
stc
jmp
rol
stc
repz
int
sbb
std
call
aad
fstpt
repz
rcl
cmp
repz
ret
in
leave
add
std
in
leave
icebp
out
loop
lret
fmul
ljmp
shl
repnz
xchg
loop
leave
fimull
std
dec
xchg
int3
ret
leave
in
fidivrs
cld
aas
in
iret
shl
cmp
cmc
sti
cmc
cli
jmp
rcll
aam
enter
out
cmp
cmp
out
in
out
mov
repz
xchg
shl
jecxz
cmc
sarl
sti
repnz
icebp
rol
shr
xchg
fprem
in
loop
rcr
fbstp
into
div
in
cld
in
cmp
in
ffree
cmp
cmc
out
std
cli
aad
int3
xchg
test
repnz
xor
in
cmp
icebp
cmp
fimull
fcmovne
std
leave
xchg
jmp
jmp
aad
cmp
cli
cli
ds
cmp
cmp
cmp
fcomp
aas
out
rcr
out
fdiv
xchg
out
icebp
xor
icebp
xor
in
cmc
loop
cmp
jmp
out
jmp
in
loop
cs
ljmp
rolb
out
ret
aad
int3
in
int
into
lea
fmul
aaa
aaa
cmp
cli
lret
jmp
les
shl
sbb
out
xlat
icebp
loopne
fcoml
xor
aaa
cmp
lret
jmp
iret
loope
repz
std
jecxz
std
aam
out
xor
cmp
cmp
call
xor
sar
cli
in
int3
enter
repnz
leave
iret
rol
xlat
hlt
in
xor
fcomi
iret
xor
filds
int3
loope
fisttpl
out
enter
sti
ds
stc
cli
rcr
mov
test
stc
cmp
mov
fiadds
leave
out
in
lret
shl
clc
icebp
out
xlat
rcr
int
xchg
movb
mov
clc
iret
test
mov
int3
out
fcomp
cmc
cmp
cmc
shl
rcl
cmp
repz
mul
add
ljmp
jecxz
lock
faddp
repnz
shl
test
add
in
cmp
mov
in
xchg
xor
ret
xor
not
lret
cmp
stc
jmp
ret
loop
shl
shl
stc
out
xchg
nop
xchg
icebp
rol
sub
cmp
hlt
rcr
cmp
cmp
fcmovu
cmc
adc
ret
test
out
rclb
ret
lret
lret
leave
jmp
ret
std
ret
add
jmp
in
mov
and
lret
xor
bnd
lret
clc
or
aas
repnz
test
rorb
xor
add
add
imul
jmp
rol
aam
aad
aad
xchg
mov
cld
adc
xchg
xlat
scas
add
add
fsts
shll
fdiv
xor
in
cmp
stc
lock
loopne
clc
hlt
rol
mov
ljmp
ret
ss
sarb
int
fcmovu
cmp
call
out
mov
fcmovne
out
cld
int
out
cli
loope
rcr
lock
xchg
loop
in
out
icebp
into
ror
testb
lret
cmp
imul
cmp
clc
not
test
jmp
repz
xchg
sar
in
leave
les
lret
fnstenv
aad
cmp
aas
aaa
cmc
test
xchg
enter
into
xchg
popl
aad
cmp
das
jmp
lock
cmp
enter
jmp
adcl
aam
rcl
shr
int
sti
fldl
loopne
adcl
jecxz
lret
test
fxch
aas
xor
cmc
out
out
cmp
jmp
lret
xchg
out
ss
call
fadd
lret
loop
hlt
fldl
in
sub
call
int
sti
fscale
int3
cmp
shl
lret
aam
sti
xlat
test
and
sti
loopne
fiaddl
rcl
loop
vpsubq
loopne
loop
repnz
xlat
mov
mul
xor
call
clc
cli
call
loope
in
aad
fcmovb
out
shl
int3
mov
in
in
leave
int3
aam
xor
fsubr
cmp
repz
aaa
cmp
cmp
cld
lock
loopne
out
in
fcomp
ss
cmp
xor
sub
cld
shl
rcl
loopne
out
aas
xchg
lret
sub
ss
repz
std
cmc
sar
int3
aad
fildl
out
nop
add
ror
int3
jmp
jmp
cmp
idivl
repz
cmp
loopne
mov
push
mov
fdiv
cmp
out
in
sarl
lret
in
fsubr
cld
call
shr
out
xchg
hlt
jmp
test
lock
lock
cmp
adc
enter
leave
out
fsubr
xchg
jmp
shr
jmp
cmp
adc
mov
loope
mov
aam
leave
lret
leave
xor
aad
aam
lock
sti
loopne
test
std
test
jecxz
icebp
in
jmp
divl
lret
cld
stc
aaa
sti
cli
ret
fiadds
in
xlat
decb
or
rcl
in
xlat
iret
sarb
incb
in
leave
test
mov
repz
cmp
jmp
ds
mov
loop
stc
int
fisttpl
ret
das
xor
int3
into
fadds
bnd
incl
fdivrp
repnz
cs
shr
out
repz
cmp
cmp
loop
cmp
out
in
loopne
out
loopne
test
out
call
out
ss
shl
ds
hlt
fldl
or
sub
rcr
in
icebp
xor
int
ror
cli
xchg
mov
in
xlat
fucomi
jmp
out
call
xor
xor
shr
fldpi
in
repnz
fcomi
addl
icebp
loopne
jmp
aaa
fidivs
not
repz
in
or
stc
ljmp
int
xchg
nop
lea
shr
xor
fidivs
loopne
fdiv
rol
fcmovu
fucomi
cmc
out
sbb
out
sar
das
xlat
shr
xor
sti
jmp
loope
icebp
loope
out
fsubp
ljmp
test
out
fcmovnbe
adcb
std
call
cld
cmp
in
ds
mov
in
in
fst
xchg
in
out
rcl
ror
cmc
int
jmp
ror
ds
call
into
enter
xchg
nop
mov
cmp
hlt
cmp
shl
aas
aam
xlat
mov
repz
test
enter
mov
jecxz
int3
aad
jmp
xlat
cli
icebp
add
out
sti
out
std
fildl
icebp
lock
out
and
not
call
lret
cmp
cmp
repz
cmp
xchg
mov
out
ss
fidivs
clc
in
and
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
sbbl
push
push
adcl
push
xor
addl
lea
addl
xor
or
sbbl
xor
andl
add
push
lea
xorl
push
movl
push
xorl
lea
inc
xorl
xor
addl
xor
adcl
call
movl
movl
mov
mov
movl
jmp
movl
xor
sub
xor
xor
xor
xor
mov
add
xor
movl
incl
mov
mov
cmp
movl
jb
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
movl
adc
movl
mov
mov
sub
xor
lea
mov
lea
xorl
mov
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
sbb
add
not
mov
mov
mov
mov
cmp
mov
mov
movl
je
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
or
dec
mov
jmp
mov
xor
xorl
add
adcl
imul
mov
jmp
sbb
xor
xorl
add
xor
mov
movzbl
or
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
or
add
sbbl
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
xor
addl
add
movl
cmp
movl
jne
adcl
push
pushl
addl
pushl
call
mov
mov
sbbl
mov
incl
mov
mov
adc
mov
mov
mov
mov
adc
mov
mov
dec
movl
adc
mov
neg
movl
mov
orl
xor
add
jmp
mov
orl
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
lea
sub
mov
mov
and
xor
movzbl
and
lea
or
mov
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
and
movl
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
or
dec
mov
jmp
adcl
movl
mov
mov
xor
mov
xor
add
movl
cmp
je
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
inc
xor
add
sub
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
orl
xor
or
mov
sub
xorl
add
mov
mov
cmp
ja
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
push
mov
call
pushl
pushl
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
mov
movl
push
mov
mov
mov
push
mov
mov
mov
cmp
je
adc
mov
mov
andl
xor
sbbl
add
movl
cmp
je
mov
xor
inc
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
sbb
push
adc
pushl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
push
movl
mov
subl
mov
add
xor
cmp
jne
mov
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
xorl
mov
mov
adcl
xor
add
movl
mov
movl
movl
not
movl
movl
mov
movl
push
movl
mov
cmp
je
mov
adcl
xor
incl
xor
lea
sbbl
xor
movl
cmp
movl
jne
jmp
add
sub
mov
xor
add
mov
xor
mov
adcl
xor
movzwl
add
xor
mov
sub
mov
adc
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
neg
movl
mov
push
or
mov
mov
sub
xor
mov
xorl
add
orl
mov
and
mov
subl
push
push
adcl
test
movl
je
mov
movzbl
or
mov
mov
andl
mov
mov
sub
mov
imul
mov
subl
add
dec
mov
not
mov
xchg
inc
sub
subl
xor
mov
movzwl
and
mov
negl
mov
mov
sbb
mov
subl
xor
sub
xor
addl
add
mov
movl
mov
je
and
mov
xorl
xor
andl
add
movl
cmp
movl
jne
pushl
adcl
call
sbb
mov
mov
mov
sub
and
mov
mov
mov
sub
mov
mov
andl
xor
orl
add
cmp
je
pushl
incl
pushl
orl
call
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
dec
mov
incl
xor
orl
add
movl
cmp
movl
je
sub
mov
xorl
mov
mov
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
andl
add
mov
mov
subl
mov
add
movzwl
or
mov
mov
mov
add
mov
movzwl
or
mov
mov
addl
add
xor
mov
sbb
mov
mov
addl
add
lea
andl
mov
push
orl
pushl
pushl
call
mov
subl
mov
sbbl
xor
movl
add
movl
cmp
jne
mov
inc
cmp
movl
jb
movl
jmp
mov
xor
xorl
add
movl
jmp
subl
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
