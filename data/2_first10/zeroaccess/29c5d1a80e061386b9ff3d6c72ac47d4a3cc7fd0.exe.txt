push
mov
sub
mov
mov
mov
addl
sub
mov
push
mov
mov
not
sbb
incl
mov
orl
sub
orl
mov
xor
mov
jmp
mov
cwtl
mov
mov
mov
mov
mov
ds
fucomp
lock
int3
add
ffree
outsb
mov
repnz
adc
out
ss
test
repz
fisubs
mov
mov
icebp
arpl
call
pop
rcr
inc
dec
shll
sub
inc
lds
dec
pop
ret
jnp
cmp
jle
inc
call
pop
xchg
rcrb
lret
sub
das
cmp
xor
jge
or
loopne
pop
adc
inc
aam
movsb
outsl
or
push
add
pop
xor
xor
dec
push
pop
adc
push
test
xor
push
jmp
mov
ret
push
sub
nop
nop
xor
dec
fbstp
mov
fldcw
pusha
sbbb
jmp
push
or
arpl
pusha
int3
mov
das
jp
xchg
pop
jecxz
and
fbld
sub
test
nop
addr16
sbb
and
mov
push
add
mov
xchg
popa
mov
jbe
mov
shll
popa
jne
mov
lcall
jge
push
mov
inc
sbb
inc
int3
das
roll
shrb
push
xchg
sbb
mov
xchg
decb
xchg
scas
in
dec
xorl
cli
frstor
mov
test
push
xor
lea
inc
mov
lods
add
subb
inc
sub
inc
inc
cmpsb
xchg
jbe
xor
fldenv
sarb
jg
cmpb
cmpsb
xor
inc
icebp
cltd
popf
orb
ret
mov
mov
pop
repnz
pop
aaa
mov
in
fs
frstor
cmovbe
mov
mov
mov
std
cwtl
dec
insb
jae
ret
in
and
ss
movsl
sub
and
popa
loopne
mov
dec
popf
jp
sbb
movsb
push
dec
push
dec
sub
shlb
sub
jnp
in
adc
mov
xchg
or
add
fs
xor
jo
push
jmp
iret
adc
jae
dec
and
imull
lahf
nop
and
imul
nop
cmc
andb
adc
or
mov
repnz
test
in
scas
lcall
outsb
pop
xchg
cltd
mov
lock
sbb
xchg
ljmp
mov
sbb
push
shrl
aas
addr16
inc
push
dec
mov
sub
adc
adc
stc
out
cmp
call
jecxz
cmpb
and
jo
adc
addr16
movsb
inc
or
or
push
sahf
cmpsb
std
notb
in
movsb
jmp
jl
push
sbbl
cmc
scas
and
andb
loopne
movsl
hlt
add
xchg
lods
and
ljmp
sahf
dec
ja
pop
scas
sbb
add
mov
cltd
fwait
inc
inc
dec
cmp
mov
jecxz
sbb
cmp
fidivs
psubusw
or
sti
cltd
fs
dec
add
mov
lods
pop
jb
jne
inc
mov
mov
push
xlat
dec
outsl
add
jmp
out
and
out
mov
or
stos
mov
jne
mov
scas
call
arpl
addl
inc
add
and
sbb
add
ret
adc
jmp
testb
mov
rcll
mov
les
xchg
int3
das
mov
lods
jns
add
call
insb
pop
rcrl
lock
popl
mov
jmp
daa
jmp
mov
xor
xor
push
inc
mov
call
dec
jb
or
pusha
das
adc
jle
mov
mov
add
repnz
xchg
fwait
test
insl
inc
in
out
fdivrs
jle
stos
sub
lret
mov
sbb
jg
or
sbb
fs
dec
es
inc
mov
push
repnz
add
lods
lahf
pop
push
cmp
xchg
adc
push
pop
cltd
mov
xor
push
pop
mov
push
and
mov
push
lret
inc
xchg
test
jg
and
mov
dec
xchg
call
push
jae
dec
icebp
fcompl
cli
xchg
sub
insb
lock
mov
jle
and
out
sub
sub
jno
jge
inc
clc
xchg
push
dec
mov
popf
pop
dec
movsl
cmp
or
rclb
push
mov
xchg
mov
dec
adc
testb
and
mov
adc
mov
xor
or
outsb
adc
fdivs
push
add
fstps
orl
push
mov
pushf
jnp
ljmp
fwait
pop
xor
mov
cmp
push
jl
lock
cli
mov
dec
scas
sub
dec
cs
dec
mov
scas
adc
imull
imul
adc
das
test
jp
int3
pop
rcll
mov
xor
int3
pop
mov
fistpll
add
xchg
add
lcall
out
push
iret
sub
mov
dec
jae
ret
xchg
test
imul
pop
add
xchg
xchg
aad
add
ja
jnp
insl
outsl
imul
pop
mov
imul
or
xor
int3
std
call
inc
mov
xchg
push
inc
mov
ror
ret
push
fsts
ret
add
je
lods
sarl
or
mov
and
mov
sbb
mov
loop
out
insl
addl
das
mov
repz
and
icebp
out
js
sbb
and
xchg
fstpt
popa
jae
sbb
xlat
dec
les
jbe
jle
inc
inc
inc
xor
int3
fwait
dec
mov
fcmovnbe
xor
je
lret
popf
xchg
mov
inc
iret
or
rcll
adc
in
sarb
movsb
arpl
jecxz
adc
dec
pop
fsts
addr16
inc
pop
and
stos
es
lea
cmp
lcall
in
add
add
int
cmc
xchg
mov
inc
loopne
andb
stos
sub
pop
add
in
jecxz
or
mov
cmpb
cmc
dec
cmp
xchg
roll
stos
cld
ror
add
xchg
je
mov
jl
mov
push
xor
sarb
inc
hlt
pop
mov
es
imul
clc
jp
add
inc
imul
mov
dec
and
sbb
sbb
inc
adc
out
fisubl
fld
aam
cmp
mov
pop
lock
aam
rorb
inc
test
iret
mov
or
orl
adc
orl
lea
cmpl
mov
movzwl
mov
jmp
mov
cmpl
ja
push
call
xor
or
xor
mov
or
orl
sbbl
movl
incl
mov
mov
mov
sbbl
mov
xor
add
mov
mov
sbb
mov
cmpl
not
movl
mov
jmp
movl
mov
cmpl
jle
pushl
push
push
call
add
orl
and
sub
xor
sub
mov
mov
cmpl
movzbl
mov
movzwl
jmp
movl
cmpl
jge
pushl
pushl
push
push
call
neg
add
sbb
adc
subl
shrd
shr
cmpl
mov
mov
not
jmp
mov
movl
cmpl
je
push
push
call
neg
xorl
sub
not
and
mov
mov
addl
xor
xor
or
and
mov
jmp
incl
pop
mov
fisubrl
sahf
mov
les
mov
ret
or
add
js
arpl
lcall
addr16
movsb
push
ljmp
stc
jae
xchg
lods
std
aad
xchg
mov
xchg
push
sbb
mov
bound
not
pop
xchg
mov
add
test
xor
mov
iret
rorb
test
fwait
je
sub
and
negl
aas
add
out
inc
xlat
mov
adc
add
add
and
and
ror
jae
push
es
sahf
sbb
test
jmp
sbb
call
push
loopne
cmc
inc
testb
mov
or
jb
add
sub
cmpsl
inc
add
fistl
and
fsts
mov
push
mov
jl
test
cwtl
scas
jle
aas
sub
mov
je
ret
or
test
mov
lods
cmp
pushf
test
push
ret
les
test
test
arpl
dec
push
rcr
jae
or
xor
push
in
add
addr16
and
xchg
xchg
andb
rcrb
lahf
xchg
mov
jl
or
idivb
sbb
and
dec
add
jno
cmp
popa
aas
sbb
imul
aad
push
sbb
js
cmp
adc
or
mov
and
fdivs
or
mov
fimuls
dec
out
mov
movsb
mov
jne
or
dec
stos
cwtl
mov
movsb
jge
cmp
add
adc
test
in
in
lock
mov
clc
sbb
add
outsb
ja
inc
popf
or
jl
mov
cmpsb
inc
mov
nop
rorl
iret
sbbb
adc
jo
jle
cmc
scas
shlb
rorl
mov
jp
loope
test
inc
repnz
xor
add
xchg
insb
mov
jmp
inc
xchg
insl
xchg
xchg
cmp
adc
jno
roll
cmp
add
pushf
jno
pushf
and
mov
jo
xor
mov
add
pop
daa
lea
inc
cmp
pop
push
cmp
adc
mov
lea
pushf
push
mov
daa
andl
push
xor
push
sbb
std
xor
jge
test
enter
sbb
addr16
or
mov
fisttpll
scas
push
and
jno
pushf
flds
ror
dec
pop
inc
fisubs
jp
fdivrp
mov
xchg
addr16
js
ds
or
fiadds
cmpsb
add
jg
inc
pop
add
cmp
les
adc
dec
push
cmp
loope
jle
mov
pop
pop
test
mov
jae
orl
add
rcll
mov
outsb
xchg
lods
in
dec
sbb
dec
sbb
xchg
int3
jnp
push
in
sahf
fs
pop
out
xchg
mov
fwait
lahf
xor
or
aam
xchg
popf
mov
cmp
sub
sarb
into
sub
lds
inc
stos
fimuls
and
mov
xchg
dec
sub
movl
movl
movl
movl
sbb
movl
movl
addl
movl
add
movl
sub
movl
movl
movzbl
and
movl
movl
cmpl
movl
movl
jmp
movzwl
mov
cmpl
jle
pushl
push
push
push
call
xorl
sub
sbbl
addl
sbbl
adcl
subl
addl
addl
movl
xor
movl
or
movl
movl
movl
xor
movl
movl
xor
add
or
mov
movl
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
jg
push
push
pushl
push
pushl
call
adcl
sbbl
adcl
addl
cmpl
movl
movl
jmp
mov
cmpl
ja
push
call
andl
sbbl
xor
andl
xorl
addl
movl
movl
mov
addl
shl
mov
addl
push
adcl
push
orl
push
sbbl
jmp
mov
jl
mov
popf
inc
lcall
les
xchg
stos
sbb
out
fistl
push
jbe
cmp
sub
fwait
jecxz
imul
arpl
jg
mov
mov
icebp
mov
or
jmp
dec
cltd
cmp
push
xchg
outsl
push
iret
adc
cltd
push
rolb
dec
xlat
repnz
outsb
xchg
in
or
and
imul
xchg
jp
mov
out
rcl
mov
std
and
arpl
mov
mov
dec
test
call
stos
test
cmpsl
test
pop
rol
imul
adc
fucom
cmc
pop
mov
iret
ja
test
jns
sahf
mov
clc
orl
daa
cltd
mov
aaa
ja
mov
jb
mov
dec
nop
popa
jle
movsl
fwait
mov
dec
adc
mov
inc
push
fwait
jne
daa
jne
imul
inc
icebp
in
mov
mov
push
lret
es
inc
incb
xchg
mov
lock
shrl
shll
cld
lret
rcll
ret
adc
mov
mov
arpl
aam
out
sahf
lahf
push
ljmp
cmpsl
mov
inc
sub
pop
pop
pushf
push
xor
mov
test
outsb
cwtl
arpl
mov
xor
std
fucomp
js
jge
cmp
jne
add
movsl
scas
jge
jno
jno
dec
test
dec
add
addr16
sub
push
jno
outsl
mov
jbe
cmp
idivl
pop
inc
xchg
mov
push
jnp
cmp
sub
test
dec
lret
fisubrs
js
push
xchg
cltd
add
aam
outsl
mov
dec
add
js
add
andl
mov
mov
sbb
mov
jns
jbe
or
adc
sbb
mov
jle
sbb
icebp
sbb
lret
sbbl
imul
stos
pop
mov
setae
arpl
cmc
mov
inc
iret
fstpt
je
pop
hlt
pop
std
ja
inc
mov
movsl
sbb
fimull
jb
xor
out
iret
fmull
rolb
stc
into
leave
mov
test
addr16
lcall
outsl
hlt
inc
out
pop
push
fnsave
jae
fisubl
mov
xchg
fwait
inc
leave
ljmp
popa
mov
add
xchg
sti
test
cld
leave
pushf
adc
adc
adc
scas
out
push
enter
push
repnz
push
lret
adc
mov
scas
xor
push
inc
repz
or
mov
out
cli
es
shrd
jb
loopne
sub
pop
xor
xchg
pop
lret
movsl
mov
add
mov
jle
popa
push
pop
rcrl
push
ss
jle
call
xchg
add
push
pusha
push
mov
jns
pusha
shll
test
mulb
mov
adc
popfw
jp
and
mov
aas
jae
mov
shll
cmp
mov
mov
popa
inc
lods
mov
adc
sbb
jns
dec
dec
sbb
decb
cmp
in
in
shlb
aad
in
jg
jmp
das
xchg
lcall
cvtps2pi
add
add
test
call
mov
mov
add
mov
sub
xor
sub
mov
mov
negl
sub
mov
lea
not
mov
adc
mov
negl
or
and
cmpl
mov
mov
jmp
movl
cmpl
jg
pushl
pushl
call
xor
adc
add
orl
negl
adc
sbb
sbbl
mov
or
xor
cmp
movl
jne
mov
cmpl
mov
not
movl
jmp
mov
mov
cmpl
je
push
pushl
push
push
call
sbb
xor
and
movl
add
inc
and
or
mov
shrd
shr
adc
mov
movzbl
or
mov
shl
xor
xor
or
jmp
cmp
ja
jl
mov
iret
cli
inc
sarl
les
fstpt
cmpsb
and
cmc
pop
imulb
pop
add
stos
jmp
or
enter
test
cmp
mov
sarb
mov
mov
xor
push
xchg
test
add
imul
popa
adc
xor
add
sub
andl
dec
icebp
aas
sub
sbb
cmp
in
fmull
or
idivl
cmp
mov
out
dec
out
test
pop
mov
mov
and
testl
xlat
sbb
int3
cmpsb
inc
enter
imul
mov
fisttpl
out
ja
mov
add
test
sub
add
mov
js
mov
adc
nop
frstor
jns
in
add
lcall
pop
mov
adc
push
xor
mov
ljmp
add
push
repz
rorl
push
inc
pusha
loope
mov
mov
shrl
int
adc
mov
add
fwait
and
repnz
mov
aam
push
clc
pop
mov
mov
or
jb
mov
stc
inc
repnz
rcr
dec
in
pop
push
lahf
push
daa
cli
xchg
arpl
inc
cmpsb
shrl
mov
lcall
cs
fiadds
roll
loope
pop
inc
in
mov
xchg
dec
call
push
shrl
addr16
and
cltd
pop
scas
push
jmp
jmp
jb
iret
push
hlt
lods
push
movsb
es
cmp
sbb
scas
jnp
movsb
arpl
mov
dec
push
and
mov
outsb
push
and
addb
sbbl
pop
repnz
aaa
dec
lock
mov
xchg
or
inc
into
pop
jno
inc
leave
sbbb
and
insb
pop
xchg
fs
je
popa
js
add
std
or
in
icebp
pushf
mov
sbb
or
dec
stc
pop
imul
mov
jae
setnp
int3
jbe
stc
unpckhps
stos
shl
mov
or
sbb
rolb
pop
pushf
mov
dec
cmc
shrb
sarl
lea
arpl
scas
mov
push
or
sahf
int3
clc
sub
repnz
out
bnd
and
test
xlat
mov
jmp
jae
jle
jp
jne
jne
push
test
mov
xor
or
mov
addb
adc
fs
jb
jmp
loope
and
xchg
mov
movsb
scas
xor
and
mov
xchg
lcall
sub
aaa
and
jp
dec
icebp
fidivrl
es
mov
lds
inc
dec
mov
ljmp
jg
xlat
ss
add
rcrl
hlt
or
es
jo
test
leave
or
lds
mov
xor
pop
xorb
xor
fstps
pop
push
pushf
repnz
inc
inc
mov
std
insb
and
and
sar
out
data16
xor
pop
jle
ds
ds
xor
push
fistpll
or
scas
pop
insl
mov
cmp
movl
jne
cmpl
mov
mov
mov
jmp
movl
mov
cmpl
jl
push
call
and
andl
sub
andl
mov
mov
add
mov
mov
sub
xor
mov
or
mov
or
mov
addl
shrd
subl
mov
mov
xor
shr
xor
mov
sbbl
xor
andl
or
orl
shl
xor
sub
xor
add
mov
sub
add
mov
add
mov
cmpl
not
notl
movzwl
jmp
mov
cmpl
jg
push
pushl
call
movzwl
sbb
mov
movzbl
adc
or
and
orl
add
or
adcl
mov
cmpl
movl
mov
movl
jmp
mov
cmpl
ja
pushl
push
pushl
push
pushl
push
call
mov
sub
sbb
movzbl
adc
add
xor
or
xor
mov
add
add
sub
mov
or
mov
mov
shrd
cmpl
movl
mov
mov
jmp
movl
movl
cmpl
jle
push
call
sub
and
mov
xor
mov
mov
xor
andl
cmpl
movl
not
mov
jmp
mov
cmpl
jl
pushl
push
call
sbbl
sub
sbbl
sbbl
mov
mov
adc
xorl
sbbl
shr
cmpl
movl
movl
mov
mov
jmp
mov
movl
cmpl
jbe
push
push
call
sub
sbbl
sbb
dec
inc
and
mov
mov
decl
xor
shl
xor
xor
sub
or
mov
cmpl
movl
mov
mov
jmp
movl
cmpl
je
pushl
call
dec
xor
or
sub
mov
xor
xor
notl
mov
addl
shrd
shr
mov
sbb
mov
mov
xor
mov
xor
andl
xor
subl
or
shl
lea
mov
xor
xor
sub
add
mov
xor
mov
orl
shrd
shr
cmpl
mov
movl
movzbl
jmp
movl
movl
cmpl
jle
pushl
call
subl
sub
adc
and
mov
mov
xor
mov
notl
mov
addl
jmp
cmp
inc
ss
mov
movsb
dec
mov
mov
mov
jle
scas
dec
imul
rcr
mov
xchg
aaa
fpatan
in
mov
jge
lea
jl
cli
xor
jo
repnz
mov
lret
xchg
xchg
jmp
push
or
add
in
into
pop
push
lret
and
shr
hlt
jae
sti
shlb
frstor
lret
pop
jae
cwtl
or
sbb
fnsave
pushf
mov
aad
out
lock
dec
mov
orb
mov
fdiv
add
xchg
shl
frstor
pusha
push
push
mov
aas
sbbb
and
scas
lahf
cld
ror
fucom
push
push
sbb
hlt
adc
fs
pop
xchg
push
or
loop
dec
mov
rcr
std
jl
ja
push
das
fistpl
bound
mov
ficoml
lods
negb
inc
jge
das
aad
fs
or
outsl
xor
xchg
insl
sbb
and
lea
repnz
push
adcl
js
insb
into
mov
cmp
mov
mov
adc
mov
fldl
xor
gs
in
jbe
lahf
jnp
sbb
dec
jbe
xor
fwait
mov
stos
push
stos
pop
gs
or
adc
loopne
dec
mov
mov
sbb
mov
adc
adc
and
cmpsb
stc
xorb
jmp
clc
xor
ret
dec
or
xchg
sub
in
and
xchg
xor
pusha
jl
sub
stc
inc
mov
cmp
pop
loop
adc
pusha
subb
mov
jno
push
popf
inc
jmp
in
mov
mov
les
lret
lods
pop
outsb
jne
sub
adc
repz
out
add
test
inc
xchg
xchg
jmp
fcmovu
outsb
pop
jmp
pop
dec
aas
cmp
out
push
inc
xchg
sub
popa
add
mov
and
fcmovnb
dec
mov
push
gs
lds
jecxz
xchg
mov
xchg
in
sbb
ljmp
dec
leave
sarb
mulb
les
push
dec
lds
xor
and
jmp
mov
in
lret
fucom
das
add
dec
push
popf
inc
out
mov
mov
leave
mov
out
pop
lcall
jl
sbb
add
je
pop
scas
test
outsb
adc
mov
call
mov
out
rolb
sbb
add
jmp
mov
fs
std
mov
mov
int3
icebp
js
stos
jmp
cmpsb
dec
sbb
es
xor
and
outsb
aas
jb
sbb
fnstcw
ss
mov
jne
lods
fsubrs
mov
and
flds
sbb
ret
rcr
xor
sub
mov
movsb
add
rcl
inc
lods
push
xchg
movsl
ficompl
cmp
and
dec
jl
fbstp
xchg
aas
cmp
pop
ret
dec
cli
cld
aad
cmp
xchg
pop
inc
push
mov
push
xor
shrl
mov
dec
mov
rorl
nop
inc
ja
outsl
pop
pop
leave
mov
in
lods
push
dec
shlb
fcoms
mov
xor
sub
mov
subl
xor
or
shl
mov
xor
imul
subl
mov
add
mov
shrd
mov
mov
orl
xor
movl
shr
cmpl
movl
mov
jmp
movl
cmpl
jge
pushl
call
add
sub
xorl
sbb
inc
not
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jb
call
adcl
adc
and
sub
mov
or
mov
addl
xor
adcl
or
subl
shl
add
sub
movl
mov
cmp
movl
mov
mov
mov
mov
jg
andl
shrd
xorl
mov
xor
mov
xor
shl
movl
xor
or
shr
subl
mov
cmpl
movl
mov
mov
jmp
movl
mov
cmpl
jae
pushl
push
push
pushl
pushl
pushl
pushl
push
call
movzwl
sub
mov
movl
sbb
mov
and
incl
mov
xorl
mov
mov
andl
shrd
movl
shr
addl
mov
sub
mov
subl
mov
xor
subl
xor
or
addl
shl
adcl
imul
andl
sub
jmp
jmp
pop
movsl
out
js
cwtl
movsl
lret
mov
fnstsw
call
mov
mov
fxam
push
jnp
rolb
pop
enter
push
inc
sub
lds
adc
mov
add
shlb
nop
mov
scas
push
mov
outsb
inc
and
push
add
xlat
pop
neg
std
out
enter
sub
jg
jnp
jno
ljmp
test
in
mov
cwtl
jl
cmc
les
inc
and
push
lcall
cwtl
sbb
or
aad
jo
or
mov
addr16
rorl
xchg
sbbb
and
in
fs
xchg
cltd
sbb
mov
push
xchg
xor
test
aam
rorb
or
jne
insl
and
out
or
ret
movsl
je
push
push
mov
mov
gs
inc
rorb
xchg
dec
inc
js
pop
xchg
in
inc
and
lock
sbb
adc
pushf
out
inc
mov
xchg
ret
test
pop
jg
neg
repz
xor
inc
les
pop
mov
xor
ss
xchg
fsubrl
ljmp
outsb
icebp
rcr
fidivrs
repnz
add
dec
or
testb
jo
fnstsw
mov
jb
dec
dec
xor
sbb
sub
icebp
jo
shll
sbb
aad
and
dec
fs
aaa
movsl
pop
dec
adc
int3
jbe
int3
dec
inc
xchg
addl
arpl
xchg
dec
inc
dec
inc
xorl
fwait
loope
fs
out
push
inc
shlb
aas
je
cmp
inc
push
call
jnp
cld
or
cmp
test
bound
cld
jle
insl
cmp
shrb
and
leave
nop
adc
push
xor
pop
xlat
xor
repz
out
aad
mov
cmp
mov
mov
fnstenv
jo
pop
dec
mov
jp
push
push
and
ja
sub
mov
sbb
mov
mov
add
jge
push
xor
into
jae
cmp
fisubs
adc
outsb
fs
mov
mov
adc
inc
cmc
or
rol
jb
in
int3
jae
or
in
jb
cmpsb
cmp
movl
pop
jns
lock
repz
inc
inc
and
imul
pop
xor
xor
adc
xchg
daa
fnstenv
push
mov
adc
mov
bound
lods
sarb
movsb
sahf
cltd
adcb
mov
lods
popa
lahf
sbb
xor
push
mov
or
movsb
adc
adc
xor
jo
xchg
mov
cmp
leave
mov
sbb
cmp
cld
lret
xchg
pop
mov
std
push
mov
cmc
dec
push
cltd
repnz
jge
insb
aaa
bound
icebp
push
les
ror
and
cmp
add
cmpsl
jp
or
cwtl
xor
add
orl
dec
movsb
mov
into
stc
inc
mov
xor
inc
cmpsb
push
lds
pop
add
dec
in
or
cmpsb
loopne
push
sbb
icebp
push
sub
jno
lcall
xorl
mov
mov
xorl
xor
adcl
shl
notl
xor
subl
or
jmp
cltd
jbe
fidivrs
mulb
in
mov
mov
fbld
pop
int
jge
faddl
andb
scas
adc
jae
sub
pop
xchg
outsb
loope
aad
imul
sub
sbb
outsb
sub
jne
cmp
cmpsl
pop
pop
add
daa
push
dec
insb
jo
dec
dec
xor
mov
leave
ds
setbe
lret
inc
sti
mov
lret
add
sub
outsb
ljmp
add
aas
punpcklwd
lret
out
xor
imul
inc
test
mov
rcrl
arpl
adc
scas
outsl
jnp
cltd
sti
subl
out
cltd
imul
divl
movsl
pusha
in
fmuls
xor
cmp
jbe
jge
popf
and
sbb
inc
sbb
mov
push
xchg
jo
jg
or
jne
mov
sbb
insb
push
imul
sbb
xchg
lods
inc
sub
inc
movlps
and
sti
ficoms
enter
pusha
notb
rcl
cwtl
jmp
sub
dec
cmp
sahf
aad
xchg
xor
cmp
cmp
arpl
adc
add
bound
adc
cmc
ljmp
pop
pop
pop
jge
lret
roll
roll
jg
loop
aaa
dec
xor
cmpsl
dec
xor
adc
mov
arpl
sarl
fsubrp
jnp
hlt
jne
ret
adc
int
adc
jle
sub
aam
data16
stos
push
push
dec
xor
mov
lahf
pop
xor
pushf
dec
aaa
aas
popf
faddl
inc
jmp
mov
jecxz
mov
dec
fldt
fistpl
addb
fldt
movsb
ja
dec
push
add
sub
dec
push
les
pop
ss
adc
adc
mov
pop
stos
rorb
push
stos
mov
mov
jmp
xor
pop
das
xor
push
jmp
or
push
mov
and
push
push
jmp
insb
lcall
test
xchg
std
pop
ffree
mov
fxch
cmp
sub
jmp
fcoml
inc
mov
xorb
mov
add
push
xchg
outsb
add
jmp
insl
fwait
hlt
jl
xor
pop
xor
pop
push
cmp
ret
lahf
scas
lock
rclb
cltd
popf
mov
add
inc
scas
push
dec
mov
jno
out
push
call
lahf
jp
mov
jp
fisttpl
testb
sub
in
mov
jae
out
lret
mov
cwtl
adc
or
je
and
dec
sub
enter
pop
enter
iret
cmp
xor
and
daa
es
or
inc
out
test
and
bound
ficoms
sbb
repnz
or
cmc
out
add
add
xchg
cmp
pop
and
arpl
dec
pop
ret
inc
and
cmp
repnz
jge
xor
inc
add
or
inc
xor
mov
sbb
xorl
push
aam
xchg
fsts
movsb
gs
xchg
xchg
imul
xlat
test
mov
mov
insb
pop
insl
pop
cli
xor
dec
push
or
and
repz
fimull
ljmp
inc
add
adc
mov
cmpl
mov
notl
jmp
movl
movl
cmpl
jae
push
push
push
push
pushl
call
xor
xor
xor
sub
sbbl
sub
xor
cmpl
mov
not
jmp
mov
mov
cmpl
jle
push
call
mov
mov
and
adcl
dec
and
sub
mov
mov
add
mov
orl
shrd
xorl
shr
and
mov
mov
mov
xor
xor
or
subl
shl
sbbl
add
jmp
bound
push
cmpsb
push
shll
cmc
mov
mov
iret
inc
dec
enter
gs
arpl
loop
push
push
mov
mov
inc
sbb
sub
mov
jmp
loopne
and
cmpsl
xor
sarl
sub
jge
addl
stc
pushf
in
ja
pop
lods
lods
xchg
pop
push
shrl
mov
arpl
and
jl
insb
mov
arpl
mov
ljmp
imul
dec
add
out
cltd
jb
dec
xor
pop
sub
js
sub
out
push
pop
push
fists
mov
call
ljmp
inc
dec
dec
pop
push
push
jp
outsb
insb
cmp
dec
stos
in
pusha
cmp
int3
mov
mov
cmpb
ret
inc
outsl
mov
dec
shr
jae
jb
jp
jmp
xor
mov
mov
lds
push
neg
inc
adc
ret
or
stc
in
pop
adc
push
int
or
xlat
pop
pop
mov
xorb
push
test
adc
test
loope
push
xchg
js
outsl
push
xor
daa
jnp
mov
paddsb
mov
or
addb
xchg
inc
inc
mov
mov
fucomi
popa
hlt
inc
cmp
cmp
jne
insl
mov
push
jmp
xchg
adc
sbb
addr16
je
xor
cli
adc
xorl
lock
lret
adc
gs
mov
out
and
stos
sti
out
in
push
call
call
cli
aas
arpl
push
xor
mov
jno
mov
das
xchg
jne
adc
jmp
shlb
in
sbb
sbb
adcb
int3
shll
ds
loopne
loope
insb
sahf
pop
stos
fwait
mov
add
push
ret
jns
xor
xchg
pop
fimuls
test
jle
lock
jnp
leave
inc
cld
sarb
shll
loop
scas
pop
iret
cmp
addl
push
addr16
cmpl
inc
faddl
rorb
into
test
lods
popa
fsubl
xor
and
adc
loope
pop
cwtl
pushf
pusha
inc
push
in
cmp
cltd
push
pusha
inc
mov
mov
das
ja
mov
icebp
sarb
mov
test
sub
ss
rolb
push
cwtl
lods
call
pop
xchg
shlb
and
popf
push
mov
ds
mov
mov
sub
pushf
dec
pushf
insl
push
daa
test
mov
mov
xchg
call
cltd
cmp
jecxz
adc
fs
in
int3
and
pop
dec
sbb
and
js
cmp
mov
sub
pop
sbb
cmp
jg
mov
mov
jmp
lods
test
into
fwait
and
xor
dec
inc
jns
mov
hlt
mov
sub
and
loopne
into
call
jge
fs
and
ficoms
mov
cmpl
mov
test
cltd
iret
mov
or
push
jae
pop
add
cmpl
not
movl
jmp
mov
cmpl
jne
pushl
push
push
call
mov
xor
mov
or
movzwl
and
xor
add
add
mov
mov
sub
imul
mov
cmpl
movl
mov
jmp
movl
cmpl
jb
pushl
call
adc
xor
add
mov
sub
xor
addl
sbb
sub
movzwl
xor
mov
mov
shrd
shr
cmpl
mov
movl
jmp
movl
cmpl
jae
call
adc
mov
and
mov
sbb
sbbl
add
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
jmp
cmp
cmp
mov
mov
sti
mov
mov
hlt
imul
pop
pop
dec
mov
stc
pop
xchg
xchg
sub
xor
adc
or
mov
add
fs
ss
fsts
outsb
dec
out
dec
je
sbb
cmp
jmp
jne
mov
add
xchg
lret
jno
push
cmp
stos
add
cmp
push
jae
jnp
pop
idiv
sbb
lret
addr16
jns
sahf
outsb
lods
loopne
or
mov
lahf
jmp
mov
lods
test
fmuls
push
fsubl
fdiv
dec
and
mov
add
push
mov
jp
mov
jo
push
pop
jecxz
rcrl
je
mov
lods
inc
inc
push
in
test
push
das
xchg
popl
test
xchg
movsl
movsb
pop
pop
inc
dec
in
nop
stc
jge
cmc
xor
test
imul
jns
cmpsb
sub
sub
push
aad
dec
push
lahf
pop
jo
sbb
mov
cmp
mov
push
or
jle
xchg
mov
insb
add
int3
dec
sub
push
mull
outsl
push
cmpsb
pop
in
cmpsb
xchg
pop
add
inc
inc
pushf
mov
dec
pushf
push
or
adc
jle
and
cli
jns
test
addr16
repz
adc
pop
data16
pop
push
xor
repnz
sub
dec
fldenv
mov
mov
data16
iret
push
jmp
lahf
mov
test
repnz
mov
jnp
test
stos
ss
pop
in
ljmp
mov
cld
mov
sub
mov
fstps
nop
pop
stc
popf
pop
aad
jp
xor
mov
xchg
mov
push
xor
xor
imul
test
push
mov
fidivs
or
jg
add
lret
call
push
mov
adc
ret
fisubs
hlt
std
and
leave
mov
mov
pushf
cltd
dec
sub
test
outsl
aaa
pop
adcb
push
pop
sbb
sbb
push
sbb
aam
jne
xchg
shll
push
stc
pusha
sbb
setb
imul
jo
stc
xor
or
outsl
mov
mov
in
cld
pop
lret
add
rcr
outsb
xor
sub
imul
add
divl
addb
cmp
out
bound
cmp
xor
fisttpll
call
fldt
push
enter
adc
rorl
sbb
sbb
mov
into
lods
repnz
sbb
add
mov
jl
arpl
inc
push
and
shll
mov
test
mov
lahf
sub
jno
xchg
cmp
pop
es
rcrb
push
xor
xchg
ljmp
push
pusha
and
mov
fldenv
xor
mov
jle
out
repz
clc
outsl
mov
fildl
pop
pop
cmp
xor
cmpsl
xchg
adc
rcrl
icebp
sahf
add
lds
mov
int3
shlb
or
jge
in
jmp
cmp
mov
mov
div
imul
inc
rorb
enter
add
aam
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
jmp
xchg
mov
fwait
or
cli
movsb
dec
jecxz
sahf
mov
les
mov
fcoml
dec
int3
inc
cmp
rolb
stc
insl
mov
inc
add
dec
sbb
stc
xor
out
ja
ja
in
jnp
cmp
gs
or
push
push
xchg
mov
mov
and
dec
aas
lret
repz
fdivrl
jo
call
lods
leave
ds
insb
in
mov
dec
lcall
sbb
aad
test
cmc
pop
push
xor
pop
cmp
add
ret
mov
push
nop
outsl
dec
pusha
and
cmpsb
inc
inc
or
xor
fucomi
fisttpll
loopw
dec
lcall
cli
sbb
sbb
push
js
cmp
imul
dec
push
loopne
ss
shr
xchg
xor
mov
add
ljmp
mov
xor
ret
jo
cmpb
test
inc
add
and
mov
pop
daa
push
fcos
and
ret
movsl
dec
mov
mov
cmp
mov
mov
repz
mov
xchg
shr
sbb
and
xchg
sbb
clc
aas
adc
shrl
jp
jecxz
cmp
jp
ljmp
gs
or
mov
mov
repnz
sub
mov
adc
jne
xor
sbb
vaddsd
rcrl
mov
cmp
push
sub
xchg
cvtps2pd
daa
jg
dec
and
fnstenv
lds
out
push
call
push
sbb
xor
mov
enter
xlat
icebp
repz
xchg
mov
dec
xchg
clc
dec
std
jl
cmc
pop
add
xor
mov
xlat
or
imul
fdivrp
pop
roll
aaa
aam
dec
xchg
pusha
inc
test
loop
fmull
imul
stos
pop
insl
negb
mov
cmp
or
out
bound
cwtl
negb
add
cmp
das
lds
ljmp
sti
jecxz
mov
pusha
shrb
js
add
dec
dec
fldl
fistl
fistl
sbb
push
xchg
cmp
cli
bound
xor
imul
cmpsl
and
add
cmpb
xor
lret
clc
jg
dec
sbb
push
mov
orl
out
icebp
aas
or
scas
enter
xor
mov
cwtl
rclb
shll
sahf
iret
and
int3
mov
dec
pop
mov
lock
cmp
es
scas
mov
into
and
xor
push
outsl
mov
pop
jl
scas
pop
sub
add
or
jl
jp
jae
fldcw
mov
cli
lods
jb
aad
pop
cltd
pop
pop
xchg
mov
push
cmpsb
or
mov
or
xor
out
cmc
scas
sub
es
push
in
sti
es
mov
loope
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
jmp
cmp
push
jl
cmp
mov
sbb
mov
les
fcmovnbe
call
mov
rolb
inc
into
xchg
jle,pt
test
sti
ret
lahf
ljmp
mov
adc
jae
inc
and
arpl
dec
fdiv
mov
insl
je
ljmp
add
push
mov
ds
mov
jae
loopne
pop
mov
test
mov
and
cltd
dec
movsb
ds
jnp
and
nop
xlat
lds
in
jns
enter
mov
lahf
insb
push
filds
nop
push
aam
sub
mov
iret
stc
sti
sub
add
mov
sbb
loopne
mov
test
add
je
xchg
das
inc
clc
and
jns
and
cmpsb
mov
push
dec
sti
ljmp
push
jnp
icebp
sub
fldcw
jle
loopne
mov
fwait
add
out
jecxz
xchg
outsl
incb
and
push
int3
push
int
sbb
ret
sti
adc
mov
shr
xor
inc
repnz
xor
push
xchg
fdivl
int3
sub
push
cwtl
cmp
loope
arpl
in
neg
in
dec
rclb
inc
jp
cli
sbb
jp
fidivrs
fistl
les
shlw
sti
loop
mov
xchg
sbb
sub
xor
mov
outsb
xchg
out
fbld
leave
dec
add
outsl
xchg
shlb
mov
mov
test
frstor
mov
into
push
mov
ljmp
ja,pt
ficomps
mov
xor
push
and
int3
pop
adc
js
push
adc
into
push
imul
jns
andl
div
in
out
faddp
xchg
push
mov
or
or
jo
insb
inc
jg
push
popf
push
and
push
iret
popf
fnstsw
stc
sub
inc
sub
int3
aas
jecxz
mov
or
xchg
fmull
push
adc
addl
test
pop
jge
push
mov
jmp
cli
fldt
aam
or
xor
movsl
aad
lods
dec
sub
lods
mov
stc
lret
mov
pop
inc
dec
xlat
sub
and
popl
mov
jb
push
in
xchg
dec
lea
cmp
and
push
pusha
xchg
cmpsb
mov
in
aad
aam
xor
mov
enter
jbe
sbb
je
sbb
mov
outsb
jnp
dec
fiaddl
adc
xchg
call
das
lock
fstpt
dec
xchg
lods
sub
sbb
inc
es
mov
cld
hlt
dec
xor
loop
adc
rol
imul
or
lahf
sbbb
subl
jne
nop
push
pop
pop
adc
add
mov
test
mov
cli
popf
or
cwtl
push
add
les
lds
sbb
je
pop
inc
movsl
sub
dec
adc
into
jb
push
cwtl
mov
out
rcrl
adc
xchg
jg
cmpsl
jle
inc
mov
mov
andb
mov
add
inc
rcll
push
stc
sbb
jmp
mov
out
test
cmp
clc
lods
mov
push
leave
fxam
adc
loopne
mov
sub
or
sbb
xchg
xor
cmc
lahf
push
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
jmp
mov
push
mov
gs
iret
mov
les
ret
and
arpl
mov
xor
je
sub
fs
mov
clc
out
lock
test
cmp
lcall
daa
push
xchg
js
adc
or
ss
jmp
sti
mov
inc
testl
mov
cvttps2pi
mov
xor
sbb
add
add
test
sub
in
sbb
rcrb
sub
pop
sbb
dec
cmp
test
push
nop
add
push
aaa
xchg
mov
inc
lds
test
loopne
mov
aas
inc
sbb
pop
aam
bound
push
sahf
std
arpl
mov
mov
jns
push
inc
cmp
push
stos
imul
out
jo
pushf
sti
jge
add
in
rorb
mov
dec
repnz
pop
test
xchg
sub
mov
jo
out
inc
push
sub
pushf
xchg
lds
jns
rorb
xchg
and
stos
imul
mov
push
scas
push
fnstcw
imul
sbb
and
inc
jmp
aad
or
push
add
mov
mov
lahf
add
fistl
out
push
jp
div
in
xchg
inc
movsl
dec
sbb
scas
xchg
sar
mov
push
xchg
pop
or
and
adc
mov
or
push
shll
loopne
xchg
push
mov
testl
push
int
fnstcw
xor
xchg
mov
dec
cmc
sbb
fildll
testb
test
je
imul
test
je
in
ret
sub
sbb
mov
lea
outsb
mov
push
mov
xchg
jmp
mov
jb
call
fwait
xchg
adc
mov
pop
push
dec
adc
test
sahf
push
pop
imul
cmp
mov
aad
adc
rcrb
sub
ljmp
ja
cmp
adc
cmpsl
into
push
stos
ret
cmpsl
jecxz
fiaddl
push
mov
add
cltd
sbb
mov
sbb
ja
xor
add
adc
cmp
lahf
movsl
jae
iret
sub
or
push
aad
xchg
push
test
into
inc
xor
sub
inc
fidivrs
dec
jbe
inc
add
mov
inc
cmp
dec
and
ret
mov
mov
fisubrl
mov
popf
mov
std
jge
in
dec
push
aam
xor
rolb
and
pop
xor
fistpll
cmc
dec
pop
mov
aam
jb
cmp
or
bound
inc
mov
adc
into
dec
addr16
add
das
addl
push
pop
test
fwait
cmpsl
test
dec
or
jecxz
cmp
xor
mov
insl
and
dec
fdivrp
lds
or
push
mov
pop
mov
int3
jne
lods
jmp
push
push
inc
mov
fildl
mov
mov
add
pop
popf
xchg
cmpsl
add
movb
cmp
popa
jmp
cmpsb
cmpsl
cmp
mov
mov
or
sahf
fmul
clc
and
dec
in
in
sti
mov
mov
inc
adc
add
loopne
shr
mov
mov
xor
mov
jmp
sub
jnp
mov
shr
xor
mov
les
mov
leave
imul
sbb
mov
test
mov
push
push
lds
sbbb
sbb
imul
jmp
jne
stos
clc
adc
sbb
or
cmpb
popa
jecxz
pop
pushf
decb
es
lret
dec
cmp
loope
outsb
in
push
cld
pop
dec
mov
enter
mov
cmp
int3
std
pop
out
aam
addr16
jg
push
ds
imul
or
filds
jo
adc
cli
mov
out
stc
fldt
pushf
pusha
lock
mov
sbb
subb
roll
cltd
lcall
rolb
addr16
pusha
xchg
imul
les
mov
shll
jo
mov
sub
je
mov
sbb
fmuls
jb
insb
negb
pop
push
cli
inc
fsubl
jo
lcall
iret
stos
imul
push
mov
mov
loop
xchg
cs
or
movsl
stos
cmc
pop
mov
mov
adc
ficompl
mov
push
gs
popf
inc
push
je
push
out
loopne
pop
push
popa
jecxz
cmp
sub
cmp
shlb
jae
shlb
ret
pop
mov
add
cmp
pop
loope
scas
insl
mov
or
cmp
out
clc
dec
mov
mov
jb,pn
sbb
cmc
and
mov
out
fisttpll
ljmp
push
outsl
loope
out
xlat
inc
mov
test
movsl
xor
cmpsl
adc
fcoms
ret
jmp
push
sub
loopne
insl
imul
inc
cmp
push
hlt
arpl
sub
lock
lcall
jecxz
std
in
xor
pop
xchg
ja
adc
fisubrs
test
add
xor
test
sarl
cmc
loopne
sbb
inc
ret
int3
jle
pop
sbb
push
mov
mov
test
ret
mov
sarb
out
jb
or
mov
enter
inc
push
fildll
lcall
cmpsb
add
push
jl
or
std
push
inc
in
xor
dec
push
stc
ja
xchg
cmova
jb
icebp
cmp
sbb
push
testb
lds
test
icebp
jnp
incl
sub
lock
lret
in
out
mov
dec
fwait
dec
jae
xchg
inc
xchg
int
cmpb
jb
into
clc
divb
fstpl
cmp
in
fildl
push
fwait
test
mov
in
xchg
mov
shll
js
pop
cmp
cmp
add
or
push
inc
sub
lret
xchg
pop
fcompl
mov
dec
dec
jo
test
fucomip
bound
ret
mulb
mov
outsl
jecxz
sti
and
jle
cwtl
xchg
int3
cmp
and
test
cmp
sub
cmpl
sbb
inc
imul
pushf
push
out
movsb
or
push
movsl
das
push
mov
push
xchg
adc
lock
xor
sbb
call
sbb
hlt
dec
sbb
fnstenv
or
mov
dec
not
jmp
int
mov
sbb
mov
sarl
fdivs
mov
adc
mov
int3
xchg
sub
cltd
andb
fs
add
insb
or
push
adc
lret
in
inc
mov
sbb
movsl
xchg
stos
push
adc
fstpt
fprem
inc
dec
adc
pop
sub
ret
cwtl
movsb
in
icebp
jno
leave
lcall
ja
popf
adc
add
or
idiv
iret
jecxz
mov
mov
pop
jno
adc
js
stc
aas
ljmp
fcmovnu
xlat
jg
les
out
adc
jo
mov
dec
unpcklps
call
out
lret
and
or
sub
cmpsb
data16
xchg
add
loop
lods
and
ret
aas
adc
pop
fists
inc
arpl
mov
add
mov
daa
movsb
enter
sbb
clc
aam
imul
aas
or
repz
lret
rorb
sbb
mov
test
mov
jns
mov
cmp
es
jle
cmp
and
jmp
and
fucom
cmp
icebp
cli
mov
leave
cmpsl
fidivrs
mov
shll
jae
dec
sub
jb
inc
add
adc
xchg
cld
ss
jg
cmp
mov
xor
pushf
push
pop
fldenv
sub
arpl
ret
mov
jmp
popf
lds
cltd
cmp
add
or
push
cmp
jmp
aas
insb
or
push
add
mov
insl
into
mov
movsl
jg
scas
and
rorl
in
cmp
movsb
push
inc
jne
scas
jo
pushf
testb
test
sbb
push
testl
jecxz
repnz
sbb
mov
mov
stos
mov
fisubl
movb
inc
cmp
fdivl
sub
xchg
in
jl
js
neg
push
jns
cmp
jb
movsl
push
pop
mov
scas
scas
dec
mov
aas
cltd
inc
sti
mov
pop
call
jecxz
mov
sbb
clc
cltd
and
cmpsl
push
cltd
sbb
and
jl
cwtl
mov
push
and
loop
lahf
rol
call
mov
xor
mov
cmp
out
int
sub
mov
enter
push
sub
xor
roll
mov
dec
adc
and
or
and
test
fadd
cmpsb
jo
sbb
insl
daa
shl
lahf
repnz
loop
mov
push
cmp
or
enter
scas
inc
pop
test
sub
fldcw
test
imul
leave
jp
mov
cmp
dec
jle
shrl
insl
int
dec
adc
pop
movsb
popa
dec
stc
and
cli
adc
out
cld
and
pop
test
sbb
ds
mov
push
jecxz
pop
xor
lcall
test
movsl
lahf
mov
fucomp
fwait
sub
aad
dec
jge
stc
aad
int3
pushf
cmp
in
push
notb
push
bound
sbb
mov
pushf
std
xchg
mov
mov
daa
jmp
dec
lea
xchg
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
jmp
cmpsb
test
mov
xchg
sbb
mov
loopne
dec
ret
xchg
ret
mov
sub
and
in
mov
xchg
or
mov
orl
outsl
and
sub
cmp
pop
jo
mov
jmp
imul
adc
test
xor
ljmp
xchg
dec
mov
sbb
out
jl
and
jne
or
js
mov
inc
push
fsts
loopne
xor
jg
mov
stos
adc
shlb
cmp
cld
mov
xor
push
in
das
dec
adc
dec
std
xchg
xor
nop
jge
aas
and
inc
xor
je
jne
mov
out
xor
jmp
inc
dec
mov
sbb
mov
mov
xchg
jae
mov
and
mov
mov
pushf
sub
fs
ret
dec
xchg
pop
cmp
push
pusha
ja
pop
and
pop
cmp
cmp
adc
jns
cmpsl
scas
rcrb
mov
jecxz
insb
mov
sahf
and
cs
inc
inc
jo
insl
popf
outsl
shr
movsb
test
pop
dec
jno
cmp
fiadds
lds
add
je
pushf
inc
jb
or
test
push
mov
jecxz
mov
ret
cmp
xchg
out
adc
sbb
sbb
and
fistpl
and
dec
mov
les
mov
aad
insl
push
push
movsb
lret
out
lods
xor
sub
daa
or
cmp
aad
push
sub
inc
sbb
dec
cmc
lea
ret
pop
sbbl
int3
dec
hlt
dec
test
adc
jl
sub
lock
loopne
outsb
adc
add
pop
jb
xchg
push
mov
or
dec
mov
inc
dec
sbb
mov
roll
out
mov
mov
adc
mov
push
out
sub
roll
cmpsl
xor
sbb
mov
je
push
scas
arpl
jns,pt
pusha
nop
mov
outsl
and
inc
mov
ss
or
test
outsl
ret
pop
xor
push
dec
fucom
ljmp
call
xchg
cs
xlat
sbb
and
sbb
imul
loop
out
addr16
scas
in
fldl
inc
stos
pop
sub
jae
jle
pop
insb
or
mov
cld
cld
inc
test
sub
pop
stos
idivl
icebp
scas
jmp
test
sbb
adc
negl
or
xchg
movsb
iret
pusha
lods
pop
or
and
jb
in
cli
xchg
incl
adc
aas
fiadds
xchg
jns
inc
xchg
add
pushf
push
into
and
cmp
arpl
int3
xor
movsb
shlb
mov
mov
push
ja
lret
jb
ds
insb
decb
arpl
mov
adc
xchg
mov
in
or
jne
ret
insl
into
push
push
mov
scas
scas
cld
pop
push
sti
cs
test
lock
mov
push
ss
outsl
cmp
jle
or
inc
mov
ret
test
mov
dec
pop
add
mov
mov
shl
xor
mov
mov
mov
jmp
pusha
adc
adc
pop
ds
sub
iret
mov
les
ret
popf
xchg
loop
mov
mov
pop
out
mov
lret
pop
int
xchg
jle
es
sbb
pop
cmp
addr16
daa
jecxz
pop
popa
push
cmpsl
fistpll
fnstcw
call
push
sbb
out
pop
movsb
rcr
insl
add
dec
sbb
fidivrs
or
lcall
sub
test
mov
xchg
mov
mov
add
lea
mov
scas
dec
xor
jae
ret
sub
movnti
je
dec
cmp
shl
jge
pop
aam
les
xor
jns
ljmp
fisubrl
out
repz
aam
cmp
adc
lods
sub
pop
mov
mov
inc
mov
lods
fimull
in
mov
out
rorl
loop
outsl
es
in
jecxz
pop
pop
jnp
jno
mov
call
scas
movsb
ret
mov
pop
pop
test
pop
adc
mov
mov
out
sub
sub
sti
ds
xchg
jns
xchg
int3
sbb
fwait
mov
cmc
cmp
cmp
jge
loop
xchg
sbb
xlat
jb
pop
ja
jp
mov
jno
stos
dec
stos
inc
ret
cmp
sub
fmuls
push
dec
ja
fwait
push
jmp
ret
pop
jnp
and
xor
out
pusha
dec
jbe
jbe
mov
int
and
fwait
xor
cmp
push
or
testl
mov
sub
mov
call
push
or
int3
leave
fwait
dec
push
xchg
cmc
adc
or
js
iret
jne
pushl
jge
inc
das
dec
jp
xchg
repz
fmulp
mov
xchg
lock
ret
cmp
mov
arpl
cmc
fbstp
add
and
cmpsl
sti
or
lret
sbb
in
sub
cmp
adc
test
push
ret
xchg
popa
inc
jle
xor
xor
out
mov
loope
cwtl
adc
push
add
rorb
mov
jge
sahf
inc
ljmp
int3
jb
inc
or
sbb
fistps
pop
call
mov
in
inc
cmp
jge
xchg
push
pushf
jae
lods
jge
pop
mov
fstpl
lcall
xchg
sbb
out
cmp
fdivr
mov
xor
ds
push
xchg
jmp
insl
jo
and
cmc
dec
sub
fwait
cltd
imul
xchg
dec
loopw
push
mov
lcall
popa
sbb
mov
mov
mov
mov
xor
mov
or
xchg
and
sti
sub
imul
lods
mov
sbb
mov
jge
popf
popl
popf
mov
jb
fdiv
jmp
pop
dec
pop
leave
push
test
mov
jae
out
cld
mov
iret
mov
daa
adc
int3
mov
push
mov
iret
inc
std
iret
fsubrp
cltd
orl
push
cltd
sbb
or
insl
xlat
xor
into
and
test
mov
andl
mov
pushf
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
jmp
aas
jne
arpl
jl
jns
das
inc
xchg
ret
nop
mov
les
les
xchg
out
cmp
xor
aam
xlat
sbb
daa
mov
in
or
cltd
dec
dec
addr16
iret
jecxz
arpl
mov
nop
mov
cld
mov
pop
cs
sarl
data16
jbe
mov
cltd
mov
jns
jbe
and
pop
adc
imull
or
jne
adc
sbb
lcall
pop
ror
mov
mov
mov
push
push
inc
shlb
cmp
or
dec
loope
cltd
sub
aaa
loop
imul
dec
mov
ss
push
mov
inc
adc
xlat
test
add
mov
int
push
xchg
outsl
adc
dec
dec
ficoml
cltd
stos
mull
add
out
mov
pop
dec
popf
in
push
cs
sub
nop
xchg
or
pushf
fdivrs
push
pop
mov
pop
adc
pop
pop
sub
sub
addb
mov
jns
xor
mov
push
fwait
pop
cmp
test
jp
decl
rol
and
or
int3
jo
mov
xchg
dec
or
push
test
movsb
jno
jno
movsl
scas
fsts
mov
ljmp
clc
jmp
and
pop
das
popa
pop
ss
pop
mov
addr16
movsl
dec
push
mov
scas
push
or
lods
lea
rorl
jns
test
andb
adc
ret
popf
lds
sahf
icebp
sbb
addr16
add
jb
fs
sahf
mov
pop
sbb
jl
cltd
js
adc
jns
in
mov
popa
mov
xchg
push
xor
sbb
push
popf
pop
cmp
jle
mov
sub
mov
les
mov
stc
cmp
xchg
data16
mov
fs
pshufw
outsb
pop
ret
mov
mov
testl
cmp
scas
int
mov
cmc
mov
lea
fcomps
stc
out
call
mov
ret
mov
sti
idivl
or
ljmp
xlat
cmp
pop
ja
dec
lret
popa
leave
push
adc
cmp
fmul
rorb
adc
out
out
cmp
mov
imul
inc
adc
xchg
push
daa
cmp
stos
add
sub
add
xchg
push
cmp
pop
xchg
inc
mov
add
pop
roll
inc
iret
sbb
jge
push
jmp
jge
lret
stos
cmpsb
or
inc
inc
sarb
negb
jns
scas
stos
mov
aad
sub
mov
add
cmp
testb
add
sbbl
cmp
add
iret
jnp
icebp
or
dec
rclb
push
xchg
loope
cmp
push
ja
xchg
insl
xchg
in
aad
test
xor
sti
ljmp
insl
cmp
lds
pop
adc
mov
mov
jp
insb
jnp
jg
mov
dec
mov
dec
adc
or
sarb
enter
mov
negb
cwtl
xchg
push
aam
or
ja
jns
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
jmp
xchg
cld
pop
cmpl
fninit
mov
les
xchg
pop
lret
popf
push
in
or
clc
xchg
cld
shrb
xchg
push
fadd
gs
jl
outsb
push
sti
nop
in
xor
mov
dec
jne
lods
lahf
lods
cmp
cltd
cmp
and
popa
add
inc
xor
cmp
cmpsl
fcompl
xchg
fsubp
add
dec
mov
cmp
mov
lock
repnz
ret
imul
sbb
pop
int
in
xchg
cmp
push
cmp
push
fbld
ror
mov
sbb
pop
mov
mov
sub
leave
sub
mov
push
or
rcrb
mov
mov
in
push
cmp
push
adc
or
mov
cmpsl
lret
jbe
mov
daa
lcall
mov
mov
inc
sub
outsl
cld
xor
adc
cvtps2pi
cli
addr16
sbb
mov
fistl
pop
and
insl
push
dec
mov
testb
mov
sbb
push
push
dec
xchg
dec
int3
sub
mov
cmc
popf
cld
cmp
mov
hlt
sub
pop
or
sub
xchg
cmp
mov
and
mov
jge
jge
movsl
nop
adc
push
gs
push
fs
arpl
pop
lea
outsl
cltd
test
daa
xchg
out
xchg
xchg
xchg
push
out
xchg
inc
xchg
jge
jg
loope
sub
pusha
pusha
fs
fidivrl
dec
lods
mov
cltd
jecxz
jecxz
js
out
gs
popa
add
inc
sub
add
mov
decl
pop
jecxz
hlt
xchg
push
mov
pusha
rorl
lds
filds
enter
sub
inc
cmp
pop
loope
jae
out
push
jge
sub
call
adc
pop
jecxz
sub
push
or
and
jge
sbb
add
fimuls
and
mov
xor
js
mov
ljmp
or
xchg
mov
int3
adc
mov
je
xlat
xchg
out
dec
mov
xlat
pop
lret
outsl
pop
rorl
sub
test
out
cmp
popf
inc
repz
call
shll
sbb
leave
inc
sub
add
repz
js
push
push
jp
fldt
jmp
sbb
call
mov
or
or
cmp
mov
mov
mov
cmpsl
push
js
clc
daa
xchg
dec
xor
sti
jo
dec
and
andb
rcrb
je
xor
lds
xchg
xchg
push
jo
and
mov
sbb
pop
xchg
adc
xor
push
loopne
insl
push
xor
test
jne
pop
mov
and
dec
and
mov
rolb
and
sbb
pushf
pop
mov
ja
insl
out
popf
dec
out
jbe
sub
jno
jbe
mov
push
and
movsl
lahf
inc
outsl
imul
push
pop
and
mov
int
jle
loop
mov
and
mov
jp
pop
stos
jno
add
inc
enter
cmpsb
sbb
inc
jge
int3
in
andb
sti
sub
inc
xchg
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
jmp
stos
outsb
jne
mov
add
push
xlat
jbe
mov
les
fcmovb
test
adc
dec
je
test
pusha
lcall
fstl
add
int
shl
add
enter
pop
aam
leave
dec
xor
and
or
and
cmp
mov
daa
addr16
je
inc
add
int3
mov
add
outsl
arpl
popa
add
popa
sbb
je
dec
jb
iret
subl
shlb
or
fadds
or
dec
imul
jg
adc
out
std
dec
stc
sub
test
xlat
pop
inc
push
mov
lea
mov
fidivs
jp
fld
sahf
pusha
dec
pop
and
cmpsl
mov
jb
push
ret
jbe
out
je
das
scas
or
mov
cmp
sbb
add
shll
or
jle
inc
push
pop
mov
push
es
repnz
mov
nop
dec
nop
rcl
iret
int
aad
jp
je
ja
scas
and
jbe
fs
add
daa
inc
xor
enter
pop
sahf
mov
xor
scas
adc
sbb
dec
lock
pop
leave
in
inc
pop
ret
xchg
test
mov
pop
fisttpll
ss
adc
ss
adc
fsub
clc
scas
push
cmp
cmc
nop
xchg
dec
test
into
in
sub
pop
in
movsb
fdivs
sbb
das
or
icebp
push
test
xor
gs
cmp
ret
mov
mov
jecxz
xchg
repnz
inc
loopne
adc
sub
nop
or
jb
adc
jns
in
addr16
jp
cmpsb
sub
fidivrl
in
adc
inc
flds
mov
xchg
in
mov
rol
xor
nop
jp
cmp
mov
pop
imul
push
clc
stos
negb
pop
xchg
orb
idivl
inc
cmpsl
insb
jbe
cwtl
repnz
ret
dec
jne
mov
fisttpl
fbld
ja
or
pop
dec
into
sbb
dec
jb
xor
daa
dec
dec
fcmovu
imul
pusha
add
cmpsl
int
jne
cmp
andl
jo
aas
xor
lret
ljmp
dec
jno
and
lods
fs
imul
into
pop
arpl
das
jmp
dec
dec
mov
test
pop
hlt
lahf
adc
clc
pop
inc
es
repz
lret
leave
in
je
fcompl
lods
stos
dec
mov
repz
sub
xchg
pop
sbb
mov
shl
xchg
mov
popa
mov
jnp
jge
leave
and
sbb
lds
outsl
gs
test
inc
call
js
mov
xchg
cmp
sbb
stc
pushf
int
scas
cmpsl
push
loopne
inc
insb
movsl
jmp
cmpl
xchg
mov
xor
sbb
pop
ret
stos
sbb
arpl
scas
jge
cmp
inc
lahf
sbb
add
mov
mov
and
pusha
sub
xor
xor
mov
lret
out
daa
jge
ds
jmp
pop
xchg
push
inc
sti
je
dec
jnp
icebp
xchg
pop
push
cwtl
lcall
adc
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
jmp
test
lea
mov
test
sahf
cld
lds
dec
mov
mov
sub
mov
dec
mov
rcrb
repz
stos
iret
mov
stc
into
clc
out
add
les
xchg
insb
jle
movsl
ror
mov
decl
aas
jne
push
scas
mov
mov
imul
mov
lea
mov
out
sub
stos
inc
loop
inc
rcl
jo
cmp
outsl
inc
imul
mov
pop
aaa
fchs
sti
arpl
xor
and
adc
aam
imul
inc
cmpsb
aas
cs
sub
in
inc
lahf
lcall
sbb
mov
hlt
out
dec
mov
jp
dec
and
movsl
mov
fwait
loopne
repz
dec
add
push
popa
fnstenv
inc
pop
sarl
push
loopne
xor
or
dec
test
mov
in
aas
pop
adc
add
out
dec
xor
sbb
and
outsb
addl
dec
sub
fstpl
insl
out
dec
jecxz
xchg
test
and
cmpsl
sti
mov
cmp
out
mov
call
fstl
test
outsb
cmp
inc
mov
xchg
mov
jnp
jbe
xchg
test
sub
scas
inc
sub
pop
outsb
test
hlt
into
dec
xchg
mov
and
in
pop
aas
lret
mov
push
lea
sbb
popf
stos
shlb
data16
imul
sub
imul
ljmp
call
jle
outsb
in
or
test
cmp
dec
sbb
xlat
and
push
pop
mov
scas
ret
call
mov
imulb
cmp
xchg
and
mov
mov
mov
lahf
orl
add
scas
sti
sub
and
mov
repnz
insb
push
shlb
pop
xor
cli
in
jns
pusha
or
pop
ljmp
mov
pop
sub
xchg
jno
fcompl
jge
or
lea
popf
mov
lds
mov
sbb
jo
ror
or
outsb
mov
mov
adc
stos
rcrb
rcll
sub
int
mov
mov
subb
fidivrl
loop
add
adc
pushf
push
mov
pop
push
pop
sahf
sub
mov
das
in
sbb
sbb
pop
fs
sub
mov
and
fcomps
cs
aas
or
iret
icebp
pop
lods
dec
xchg
mov
and
xor
mov
xor
sbb
mov
dec
shlb
out
pusha
test
insl
dec
add
inc
adc
pop
adc
mov
and
in
sarb
insl
ljmp
lock
outsb
scas
push
lods
add
nop
xor
dec
add
aas
dec
push
aad
adc
pop
push
xor
xor
shlb
loop
ss
push
shl
cld
insb
push
bsr
ffree
shll
fsubr
nop
mov
aaa
imull
std
push
add
adcl
xor
xor
xor
xor
mov
jmp
mov
ds
pushf
test
stc
jo
inc
fstpl
dec
push
mov
out
arpl
dec
add
xor
inc
loop
ss
mov
xor
mov
cltd
stos
jbe
inc
jo
aam
or
outsl
fldenv
repnz
add
addb
aaa
mov
stos
cli
mov
out
hlt
push
or
inc
lods
stos
mov
mov
dec
mov
jmp
xchg
xchg
out
outsl
mov
orl
out
sar
out
movlps
jmp
loopne
movsb
xchg
rorl
loope
les
jg
dec
cmp
sub
add
cmpsl
mov
ja
xchg
or
xorl
xchg
add
mov
cld
pop
mov
jb
fwait
insb
sbb
fists
rcrb
outsb
jnp
add
imul
pop
movsb
stos
out
lds
or
mov
loope
pop
pop
imul
mov
mov
push
xor
sub
inc
pop
scas
test
and
imul
mov
std
fdivrs
rcr
sub
aas
xor
jno
and
fdivs
pop
cmp
adc
rol
scas
adc
out
cli
jle
inc
xchg
ficoml
adcb
into
add
insl
adc
xchg
shlb
inc
jle
jnp
cld
jle
test
fsubrs
sbb
sahf
add
mov
jp
es
loop
cli
cwtl
dec
inc
in
and
fxch
sbbl
xchg
jge
xchg
push
and
and
fildl
push
and
xchg
cmpsl
sbb
ja
dec
inc
jbe
jg
sbb
cld
pop
pop
aad
sub
mov
adc
movsb
mov
test
in
push
jns
sbb
repz
add
dec
jo
movsb
lods
fadds
push
mov
mov
jecxz
xor
lret
scas
jge
mov
ljmp
xor
sbb
pop
mov
mov
mov
cli
fistpll
stc
cmpb
testl
lods
pop
loop
sbbb
scas
ds
fs
inc
shrl
mov
mov
mov
add
or
cmp
mov
cmpsl
out
sub
mov
sar
std
and
aad
sub
movsb
popf
mov
lea
cmpsl
pop
jg
or
data16
mov
pop
mov
aad
mov
mov
hlt
add
inc
pop
loop
rol
lock
adc
mov
test
leave
add
frstor
jns
inc
sbb
inc
sub
and
dec
xchg
jb
sbb
data16
sbb
test
mov
adc
push
cmc
mov
loop
jb
mov
inc
cmpsl
jb
data16
jle
mov
int
push
jecxz
gs
out
hlt
js
mov
mov
mov
rolb
mov
xor
ret
push
mov
mov
inc
push
inc
inc
pop
cmp
mov
jns
sub
nop
andb
mov
add
icebp
out
js
pop
test
jp
pusha
lahf
xor
sub
test
inc
lock
cmpl
push
fs
inc
std
cltd
cltd
pop
out
outsl
andl
cld
aaa
stc
jno
ret
insb
xor
jle
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
jmp
sbb
pop
lcall
ffree
cmp
sahf
mov
les
mov
jmp
add
testl
test
jb
dec
and
pop
cmp
sub
out
out
dec
out
add
cmp
xchg
test
movb
lds
pop
sub
push
sub
testl
pop
mov
ret
mov
sbb
in
subl
ds
test
bnd
ret
sbb
jmp
xchg
sbb
aad
cltd
sbb
push
outsb
xor
jge
jp
je
push
push
loop
mov
jno
aaa
jmp
mov
cwtl
add
cmp
or
dec
mov
insl
sub
cli
add
orb
jecxz
jge
push
sti
xlat
ret
js
out
jge
mov
cltd
jp
push
call
xchg
ret
ds
xchg
insb
xchg
xchg
xlat
inc
cmp
sub
xchg
xchg
mov
enter
push
test
pop
jbe
fcmovu
lret
add
jmp
rdtsc
loope
lcall
movsl
add
shr
andb
cli
outsb
test
ret
sub
or
jnp
jl
fmuls
in
rcrb
incl
repz
in
pop
mov
sbb
sbb
and
shrb
ret
adc
jns
cmp
js
dec
fs
scas
push
jmp
mov
sahf
cltd
sbb
out
pushf
lea
dec
loope
gs
stos
in
push
push
push
jns
std
cmpsb
gs
mov
mov
fwait
dec
fldenv
lahf
cmp
andl
jno
repnz
push
pushl
mov
pop
push
mov
imul
pop
push
cs
movb
or
rcrb
pop
ss
xchg
or
or
xor
gs
ljmp
mov
fs
inc
into
stos
pop
jae
sbb
lret
data16
push
in
nop
sub
push
into
push
sbb
lcall
in
or
and
data16
adc
xor
ret
adc
rcll
xor
sbb
jmp
out
repnz
scas
add
mov
xor
mov
es
cmpsl
dec
loope
push
jno
imul
pop
xchg
push
lods
popf
jne
movsb
out
repnz
in
and
das
lods
mov
adc
fwait
mov
add
xchg
inc
js
rcrl
lock
call
fabs
mov
sbb
xor
or
add
xchg
lret
pop
mov
nop
je
ret
inc
arpl
mov
lea
mov
and
jl
outsb
je
xor
lock
pop
push
insb
xorl
cwtl
pop
push
xchg
jp
pop
lds
dec
icebp
enter
addr16
orb
xor
xchg
mov
jo
inc
test
gs
popa
int3
xchg
add
adc
bound
xor
cmp
push
inc
stos
mov
mov
adc
mov
pop
cmpsl
sbb
mov
push
shlb
inc
xor
mov
imul
jl
xchg
sub
ss
dec
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
jmp
cmp
movsb
inc
movsb
ret
xchg
lods
sub
nop
mov
les
les
jp
lods
xor
stc
xor
scas
cwtl
xchg
jns
aas
mov
dec
mov
mov
adc
mov
call
popf
sub
sbb
cs
stc
adc
and
bnd
mov
mov
je
xor
das
pop
fwait
mov
bswap
push
aad
push
movsb
or
add
mov
add
popf
jae
jge
xchg
xchg
add
jnp
inc
sbb
push
pop
dec
push
push
pop
mov
in
test
popf
mov
dec
out
fnstcw
jle
rcrl
test
into
pop
push
fs
in
je
cmpsl
push
outsb
or
pop
ja
inc
hlt
push
cmp
aaa
sub
adc
inc
movsb
push
jne
or
or
test
lret
xlat
das
mov
insb
scas
vandnps
fcos
sbb
dec
add
jge
or
xchg
add
or
push
mov
dec
lahf
out
push
xor
and
out
add
or
or
popf
mov
mov
fistps
fiadds
sti
lods
shrb
cmp
out
mov
mov
push
mov
lds
dec
and
outsb
popa
xor
jg
cmc
dec
mov
fs
sbb
nop
inc
js
inc
sbb
pop
and
test
sbb
rolb
push
xor
push
int3
lahf
iret
repz
loope
sti
push
or
pushf
popf
jb
xor
and
pop
inc
repz
call
dec
sti
outsl
ficoms
stos
fcmove
dec
out
sub
fs
cmpsl
stos
int
pop
xorl
cmp
fistpl
pop
inc
mov
jp
mov
adc
ret
push
and
mov
mov
sub
push
adc
jecxz
jne
add
movsb
mov
add
dec
mov
lcall
sbb
repnz
pusha
xchg
mov
movb
mov
mov
lcall
pop
mulb
and
fdivs
or
sbb
call
xor
xchg
rclb
jae
inc
pop
xchg
std
dec
test
movsb
sub
fstps
insb
insb
test
ret
test
adc
mov
cwtl
sbb
xchg
cmc
lret
outsb
xchg
leave
mov
es
push
js
gs
jl
fimuls
pushl
fcoms
insl
xchg
bound
mov
and
stos
inc
mov
xchg
push
mull
dec
xchg
roll
mov
dec
adc
cli
jge
lods
mov
inc
insb
mov
ja
rolb
movsl
dec
lods
in
dec
addl
jae
scas
add
or
fsubl
jecxz
push
leave
jmp
add
jne
mov
icebp
cmp
xor
outsb
mov
push
push
es
cmp
push
cwtl
and
xchg
and
mov
push
push
push
push
mov
mov
xor
stos
das
lods
sbb
or
bound
addb
outsl
inc
dec
repz
inc
or
and
cmc
push
ljmp
or
push
xor
push
inc
sub
xchg
xor
xchg
mov
ret
idivb
addb
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
jmp
out
pop
jns
jns
mov
repz
jge
movsb
mov
les
xchg
mov
jae
mov
cmpsb
into
aam
int
negl
notl
jns
scas
pushf
dec
fisttpll
xchg
and
xchg
enter
fstps
sub
xchg
fstpt
lahf
mov
stc
repnz
adc
test
aam
int
cmpsb
std
icebp
outsl
mov
and
sbb
mov
insb
popf
outsl
js
sub
data16
aam
stos
lcall
push
push
pop
test
sbb
ss
mov
cmp
mov
fildl
mov
jnp
xchg
push
or
push
pop
lcall
pop
inc
fldz
xchg
mov
loopne
je
mov
or
pop
adc
mov
in
loope
test
arpl
or
outsl
jmp
ljmp
jae
outsl
xchg
inc
cmp
cmp
in
adc
or
es
mov
dec
pop
daa
lods
cmp
scas
shrb
inc
inc
mov
mov
jno
jmp
call
shrb
mov
sarl
jo
ret
add
and
ret
nop
mov
inc
and
sti
test
scas
mov
sbb
push
mov
cmp
add
xchg
je
add
cmc
sahf
insl
decb
cli
nop
push
rclb
roll
movsl
inc
mov
jle
cli
add
sub
cmpsl
rcrl
icebp
mov
and
push
inc
add
xlat
pop
mov
int
mov
nop
sbb
int
test
sbb
mov
and
fmull
imul
fnsave
les
inc
push
call
movsl
cli
mov
lret
adc
pop
lret
xchg
mov
div
ss
push
adc
pop
add
jbe
divl
mov
mov
or
cmpsl
das
jbe
mov
iret
lret
pop
mov
adc
sarl
push
mov
or
xchg
lock
lret
stos
push
mov
or
jge
add
inc
adc
aam
mov
jecxz
mov
cs
outsb
cmpl
adc
fs
inc
xor
imul
mov
jmp
daa
jl
mov
cltd
fildll
push
cld
repnz
in
rorl
and
test
and
stos
pop
cmpsb
test
adc
into
pop
dec
add
fs
test
adc
jo
out
subb
outsb
lcall
rcll
scas
ljmp
and
dec
and
mov
lods
aad
aad
call
jne
stos
popf
imulb
pusha
clc
icebp
pop
cld
xor
call
and
enter
add
mov
out
cmp
mov
push
aaa
sub
enter
das
sbb
mov
or
sub
xor
pop
cmpsl
jg
out
lock
jne
fildl
jo
jb
cmp
cwtl
mov
add
in
shrb
inc
jno
adc
mov
stc
dec
vpunpcklqdq
mov
dec
cmp
dec
and
repz
sahf
xor
rorb
ret
call
loope
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
jmp
xor
cmp
pushf
pop
out
push
aam
dec
sahf
mov
les
mov
jp
in
adc
nop
test
ficomps
mov
sub
pop
mov
or
xchg
pop
nop
sahf
icebp
inc
iret
pop
lcall
xchg
xchg
pop
push
ljmp
pop
dec
xchg
push
out
int
shll
scas
sahf
lret
aad
pushf
ficompl
in
js
pushf
mov
mulb
in
lods
adc
or
inc
imul
or
mov
pusha
stc
mov
stos
xor
test
sbb
jbe
jno
adc
add
inc
push
inc
pusha
fildll
jmp
push
mov
jbe
cmp
pop
mov
sub
sbb
xor
cld
add
stos
mov
int
jae
imul
pop
outsb
addr16
pop
adc
cmc
sbb
xor
testl
loope
xor
mov
sbb
repnz
adc
push
bound
sub
dec
ret
psadbw
mov
mov
fldt
add
jb
jns
lods
sahf
pop
mov
or
mov
lock
insl
cmp
xor
repnz
lcall
add
dec
push
stos
rorl
fucomi
arpl
sub
add
or
sbb
dec
mov
mov
fbstp
std
outsb
fists
adc
cs
lcall
sub
jbe
roll
cmp
cmpsl
jo
jle
in
mov
adc
imul
inc
clc
and
dec
cli
xchg
movsb
mov
adc
push
pop
fsubrs
sub
cmpsb
cmpsb
ret
je
mov
inc
or
adc
add
fstp
inc
dec
mov
sub
stc
jp
pop
dec
and
in
fcmovbe
or
out
js
mov
lods
xlat
mov
push
enter
cmpsb
push
inc
jno
addr16
xchg
cmc
cmp
movsl
addl
ja
aad
aad
push
jns
sti
iret
rolb
xor
jns
ds
xor
sub
std
in
cmc
lret
xor
push
clc
iret
and
aad
movsb
add
add
out
mov
lods
sarl
rorb
orl
ror
pop
iret
push
mov
inc
jne
add
and
testl
mov
adc
sbb
sbb
pop
add
aaa
in
xor
xor
cwtl
sub
iret
mov
ret
add
fxrstor
xchg
mov
mov
jecxz,pn
fsubrl
sbb
pop
fsubrs
gs
lahf
mov
sbb
xor
jmp
pop
clc
mov
push
rcrl
ficoml
cmpb
dec
mov
push
mov
icebp
pop
fmul
mov
pop
or
aam
add
addr16
adc
fidivrl
pop
inc
or
dec
enter
out
lahf
lds
rcl
sub
mov
cmp
mov
adc
shl
push
je
dec
mov
jg
ret
sub
xchg
mov
jge
std
or
jp
mov
inc
add
push
add
sti
shlb
data16
in
jae
mov
dec
test
xor
mov
shrd
or
shr
or
jmp
sbb
insl
xchg
mov
cmp
xchg
nop
inc
shlb
mov
les
mov
mov
rorb
adc
idivb
dec
mov
dec
pop
pop
xchg
ljmp
add
xorb
cmp
aad
out
xor
cmc
xchg
dec
xchg
les
in
lods
lock
cwtl
je
dec
jl
push
das
stc
adc
aaa
add
push
in
ja
iret
arpl
lea
lcall
in
push
dec
inc
xor
fstpt
int3
jno
out
nop
adc
sbb
adc
sbb
jle
into
and
lret
push
mov
loop
leave
sbb
sub
fs
repz
push
jle
and
jnp
mov
lods
jecxz
je
aad
cmpsb
std
pop
stos
pop
movsb
xchg
ljmp
xchg
sbb
inc
mov
in
fwait
push
xor
aad
pop
xchg
add
dec
xor
nop
arpl
adc
add
sub
xchg
cmp
shrb
mov
loope
fstps
shlb
mov
fildl
xchg
testl
out
pop
mov
sahf
sbb
mov
dec
bound
filds
jbe
nop
adc
dec
adc
and
shr
sahf
fistps
jecxz
jno
xchg
mov
je
outsl
push
jns
jmp
add
pop
adcl
aas
jbe
mov
xor
fdivrp
out
outsb
dec
jmp
sub
lahf
mov
cmp
sub
sbb
mov
xchg
inc
cmp
pop
xor
jo
fwait
adc
les
pop
jge
inc
inc
mov
fcoml
out
mov
cltd
dec
outsl
adcb
loope
push
sub
push
or
ljmp
loop
jge
aas
inc
addb
push
jp
insl
out
enter
cwtl
adc
xchg
stos
mov
jp
negl
pop
fstpl
inc
cmp
mov
or
xchg
call
jnp
je
fstpt
inc
mov
push
xchg
popf
loop
dec
leave
je
ret
fists
push
xor
and
adc
mov
fdivrl
scas
repnz
jb
mov
jmp
in
repnz
scas
test
into
fs
rcl
push
xor
push
es
lock
pop
sbb
fbld
jnp
dec
loope
insl
mov
hlt
jle
jae
jo
push
mov
lret
and
into
pop
jno
jl
dec
jle
inc
leave
mov
xor
and
jne
into
jp
dec
stos
outsb
push
outsb
icebp
jno
into
and
jle
test
sbbb
or
test
ret
or
cld
stos
insl
adc
mov
xor
shl
xchg
dec
outsl
test
cli
cmp
add
or
cmp
movsb
xchg
sbb
xchg
shlb
mov
js
adc
xchg
movsb
icebp
sbb
mov
mov
push
dec
rorl
xorl
int3
add
sti
mov
push
xor
in
frstor
pop
loope
push
in
mov
mov
lcall
mov
mov
ja
push
cmp
popa
jecxz
add
jge
or
sub
mov
xor
out
inc
lods
or
push
test
imul
fcmovb
cmp
cwtl
xchg
jle
rorb
test
add
add
dec
or
test
add
add
jne
pushl
pushl
push
push
call
pop
leave
ret
cmp
jae
cmp
movl
jae
xorl
shrd
shr
ret
mov
xor
and
movl
shr
ret
xor
xor
ret
push
mov
jmp
addr16
js
jl
jnp
dec
xlat
pop
sahf
test
sahf
mov
ret
pushl
and
popf
xchg
popf
dec
mov
cmp
fstps
popa
fistl
dec
test
outsb
xchg
into
cmp
ljmp
push
fistpl
int
movsl
std
or
dec
jb
cmp
mov
test
pop
stc
jne
mov
or
out
aam
or
mov
sar
les
test
add
stos
push
dec
shrb
sub
or
jb
mov
into
clc
pop
and
mov
mov
clc
xor
xlat
lods
ficoml
int
sbb
jle
sub
jmp
dec
inc
mov
movsb
and
push
xor
fadds
xor
sub
rorb
aad
xchg
outsl
mov
lret
cld
ret
cmpb
pop
push
dec
jns
adc
xor
dec
mov
mov
shrb
fiadds
xchg
inc
or
jno
jp
jmp
mov
jl
xchg
or
cld
scas
xor
lcall
fcomp
inc
ret
dec
sarl
fiadds
cmc
or
out
lahf
aaa
adc
mov
out
shrb
rcr
ss
stc
test
mulps
add
into
aam
fwait
mov
fistpl
mov
mov
ds
mov
mov
adc
pop
jno
push
stos
mov
lcall
fld
scas
orb
fsubp
jne
loope
ja
mov
iret
sub
jle
jne
jg
pop
inc
mov
jge
xor
lods
fsub
loope
into
mov
xor
sbb
push
push
sbb
ljmp
ficompl
rcrl
xor
das
add
and
dec
and
negl
les
cmp
xlat
or
rcll
das
cmpsb
add
mov
cli
push
mov
jl
push
sbb
jmp
pop
push
cmp
movsb
lcall
mov
rcll
xchg
lret
and
xchg
inc
std
out
mov
popa
jl
lret
jb
pop
jl
mov
inc
pop
mov
movl
mov
neg
mov
adcl
jmp
outsl
in
rcrb
retw
dec
jo
add
jge
mov
xor
pop
aas
mov
adc
xor
cmp
jecxz
and
negl
cltd
push
mov
rcrl
adc
jle
or
xor
xor
test
into
or
sub
mov
fninit
cmp
stos
into
imul
ss
adcl
mov
pushf
xorb
pop
enter
mov
xchg
mov
xrelease
fstps
sub
lahf
in
pop
scas
outsl
cmp
jmp
jo
sub
cmp
xor
sbb
ss
mov
negl
mov
iret
cmc
bound
fcmovu
insl
jge
aam
xor
mov
scas
cmp
test
es
mov
push
jge
pop
loop
fwait
loope
loopne
arpl
cmp
xchg
stc
imul
fisubs
notl
mov
xchg
fdivs
adc
or
cmp
fldlg2
rorl
leave
jmp
test
in
testl
iret
pop
dec
and
pop
popa
mov
and
mov
mov
rorb
cmpsb
sbb
mov
enter
xchg
mov
xor
pop
insb
add
cmpsb
inc
mov
cmp
or
jbe
daa
add
dec
std
addr16
cmp
imul
loop
ret
outsl
clc
xor
idivl
sbb
js
mov
daa
sti
jno
dec
lret
pop
inc
das
sub
dec
pop
hlt
mov
mul
mov
and
add
gs
test
sbb
jp
movsb
push
lahf
or
int3
add
push
push
add
mov
mov
in
scas
jg
out
out
add
cltd
and
sub
lods
lcall
hlt
or
cmp
inc
cltd
dec
outsb
jno
push
imul
dec
ds
mov
test
sub
and
cld
in
cs
aas
pop
xor
inc
out
lahf
sbb
fmull
sarl
mov
mov
inc
das
jle
lds
mov
xor
ja
je
mov
iret
mov
mov
movl
inc
shlb
jns
mov
cmpl
movl
movl
jmp
not
movl
cmpl
jae
push
push
push
call
sub
and
adc
mov
add
negl
xor
orl
movl
movl
movl
sbb
push
movl
xor
xor
mov
sub
or
movl
push
or
movl
and
mov
and
mov
subl
push
orl
push
sbbl
push
call
and
mov
mov
andl
push
andl
or
push
or
xor
xor
xorl
push
push
orl
call
mov
xor
mov
mov
and
jmp
aam
jp
mov
ret
push
arpl
shll
ret
mov
push
mov
cs
mov
mov
or
xchg
jge
out
pusha
stos
fisubl
fstl
mov
mov
mov
mov
mov
aaa
dec
push
and
pop
xor
ret
mov
jb
mov
addr16
mov
adc
lret
imul
mov
mov
sub
fistpll
lods
push
cmp
dec
sbb
xchg
faddp
jg
insl
gs
cmp
xchg
data16
cmp
pop
mov
mov
push
jne
lds
xor
mov
stos
aaa
mov
pop
mov
dec
data16
out
jnp
push
das
call
insb
xchg
gs
test
hlt
mov
jmp
arpl
lods
and
cmc
or
dec
mov
pop
incb
icebp
xchg
loopne
test
test
aas
shll
cld
sbb
sbb
insl
fisubl
adc
dec
sbb
lahf
sub
shlb
sub
mov
sbb
mov
std
xlat
or
mov
mov
icebp
daa
xchg
adc
cmp
adc
sysenter
jo
insb
xor
rorl
icebp
stos
pushf
shlb
lret
out
sbb
jae
inc
rcl
sbb
icebp
add
es
mov
xchg
sub
ror
adc
popa
lea
push
or
repz
incl
sbb
jnp
mov
sbb
mov
or
pop
popf
stc
push
loopne
int3
sti
and
adc
mov
sbb
dec
imul
fmull
push
dec
push
push
ja
push
stc
add
cli
push
out
std
xchg
jmp
cltd
mov
or
sub
aaa
daa
loopne
out
push
aam
cmp
icebp
fwait
mov
lods
xchg
cmp
fst
or
stos
jl
or
lcall
or
aas
repnz
cmpb
adc
ljmp
bound
jno
arpl
mov
aad
cli
mov
jne
or
dec
mov
adc
xor
jnp
outsl
sbb
mov
mov
jae
push
adc
out
mov
adcl
push
decl
push
notl
push
adcl
push
sbbl
call
mov
cmpl
mov
movl
mov
jmp
movzbl
mov
cmpl
jb
push
push
call
andl
add
or
adc
sbb
sbbl
add
mov
movl
movl
orl
movl
sub
movl
mov
mov
adc
movl
orl
movl
mov
adc
mov
add
mov
cmpl
mov
mov
movl
jmp
mov
mov
cmpl
jg
push
call
xor
sbb
decl
mov
xor
and
dec
cmpl
movl
movzbl
mov
jmp
movl
cmpl
jae
pushl
push
pushl
call
or
sbb
and
decl
or
addl
sbbl
mov
add
movl
adc
xorl
or
movl
mov
or
subl
mov
or
movzbl
xor
mov
mov
or
mov
or
negl
or
movl
cmp
movl
jne
movl
cmp
movl
je
xor
or
adc
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
jmp
and
sub
dec
test
xchg
dec
jmp
jecxz
xchg
mov
enter
mov
cmpsl
nop
and
jae
fdivs
int3
and
enter
fs
cmp
mov
dec
jg
dec
push
push
mov
aam
or
push
jns
mov
lock
jecxz
shll
icebp
movd
mov
mov
stos
sub
pusha
cmp
sub
cmpsl
sub
test
push
xor
jae
jns
stos
rsm
push
ret
mov
jl
pop
rorb
mov
arpl
xor
lods
cmp
out
test
shll
shl
jp
pusha
enter
ret
xchg
test
hlt
ss
incb
or
cmp
pop
jae
add
ret
iret
dec
lcall
push
dec
pop
mov
push
fwait
mov
mov
cmc
jle
lret
mov
cmp
fidivs
lcall
fdivs
xchg
lahf
push
mov
dec
dec
jbe
popw
enter
rcl
ljmp
movl
data16
loope
xchg
cltd
mov
or
ret
jp
rcl
add
push
mov
out
mov
sub
xor
pushf
mov
dec
mov
jno
xchg
sbb
or
out
push
mov
scas
popa
imul
fimull
pop
ret
aad
mov
push
dec
and
dec
or
cmp
dec
test
mov
mov
jge
cmpsl
rdtsc
aaa
lret
inc
jle
inc
pop
fldcw
and
dec
imul
xor
call
ja
test
leave
iret
fstpt
mov
rolb
pop
pop
mov
iret
push
movsb
andb
pusha
sub
add
push
pop
cmp
push
lods
sub
aas
loop
and
pop
push
mov
and
sbbb
push
dec
test
iret
clc
dec
pop
shrb
fxrstor
scas
in
inc
sub
pop
xchg
outsb
push
call
fistpll
sub
adc
mov
sahf
pop
push
shl
mov
ja
jnp
sbb
mov
xor
nop
push
and
xorb
jne
and
aam
jl
add
call
mov
mov
push
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
jmp
mov
mov
mov
mov
jecxz
add
mov
mov
mov
js
push
movsl
fs
push
cwtl
xchg
pop
dec
mov
inc
out
orl
xorl
mov
sbb
mov
adc
cld
mov
cli
sub
mov
test
les
inc
rcr
xor
push
es
jle
les
xor
test
fsub
pusha
jecxz
int3
fstl
fmuls
inc
ljmp
je
cli
adc
mov
ficomps
add
mov
inc
mov
push
xlat
mov
jns
mov
les
lds
cwtl
je
mov
ljmp
and
pop
ss
mov
dec
hlt
es
push
xor
mov
push
push
fwait
jecxz
xchg
loope
jno
xor
xchg
movsl
aaa
xor
sbb
fs
nop
push
leave
jle
dec
pop
fldenv
ja
pop
push
outsb
outsb
mov
lret
xchg
cmp
mov
dec
call
jne
add
rolb
aaa
sub
cli
xchg
fucomi
pop
push
ja
cmpsb
cld
testb
jl
mulb
loope
ja
arpl
inc
ja
negl
add
ret
repnz
sbb
dec
xchg
sahf
fisttpl
into
mov
andl
xorl
fisubrs
dec
xor
and
insb
stos
sub
mov
lds
jne
daa
jl
leave
loope
push
adc
lret
fisttps
cld
pop
and
in
divb
mov
loop
mov
rcrl
add
adc
sar
cmp
lods
push
xor
in
or
ret
add
mulb
push
cmp
test
mov
xchg
popa
xchg
lahf
push
fistl
adc
clc
push
in
or
fmul
test
ja
add
iret
testl
dec
sub
and
inc
cwtl
mov
add
cmc
sbb
inc
lods
gs
xorb
sub
add
mov
xchg
xchg
shll
outsb
dec
pusha
test
sti
ljmp
xchg
or
adc
cli
add
add
std
addr16
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
popa
nop
popf
cmpsl
mov
imul
adc
imul
push
mov
mov
xchg
sbb
dec
adc
xor
aas
push
call
nop
inc
inc
lods
dec
repz
xchg
nop
or
das
or
scas
cmp
insl
cmc
xlat
push
xor
cld
outsl
movsb
and
stos
aam
testb
pop
pop
popfw
repnz
lods
mov
pop
jp
ss
pop
or
sbb
adc
mov
shlb
adc
and
push
or
sti
leave
data16
adc
jge
jno
lea
sub
adc
clc
push
sub
adc
das
pop
jns
aas
call
xchg
arpl
pushf
sbb
das
inc
test
movsb
aas
imul
outsl
fstpl
out
sub
lock
outsb
in
and
inc
mov
sub
mov
or
xchg
mov
mov
sar
cltd
xlat
or
iret
pop
fbstp
mov
jo
mov
push
dec
outsl
xchg
ret
out
sarb
daa
cwtl
pushl
js
nop
int
jl
cwtl
aaa
out
enter
call
shlb
imul
mov
fcomps
decb
jecxz
and
mov
in
mov
xchg
sbb
loope
inc
in
jnp
or
lahf
lret
add
pop
shlb
aad
xor
shlb
popa
push
out
xchg
push
jmp
test
push
clc
inc
in
jmp
in
es
jle
mov
push
popa
out
and
imul
or
xlat
push
xchg
sub
or
add
mov
pop
push
mov
pushf
adc
cmpb
sub
clc
cmp
nop
jmp
in
enter
cmp
loop
gs
push
xor
push
movsb
les
test
cmp
leave
fcompl
pop
stos
cltd
scas
sbb
insb
and
xor
jae
or
dec
mov
push
rclb
bound
sub
xor
push
mov
mov
mov
sarb
lods
aas
push
mov
and
cmpb
jo
pop
add
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
mov
pushf
mov
jecxz
gs
sahf
es
mov
mov
push
cltd
je
jl
sub
jno
daa
mov
push
int3
gs
adc
int3
not
mov
add
fwait
xor
cmpsl
mov
add
rclb
loopne
xor
push
lods
or
push
orb
jae
cltd
xor
cmp
jecxz
add
mov
cmp
sub
sbb
fsubr
sub
out
lock
ss
inc
mov
repz
movsl
mov
add
hlt
dec
add
sbb
push
xor
cltd
adc
outsb
int3
icebp
mov
js
pshufw
pop
leave
inc
inc
xchg
scas
push
jecxz
ja
std
nop
addl
stc
repz
in
mov
xchg
orb
push
lods
sti
leave
fildll
les
adc
pop
js
cmp
sub
jbe
pop
lock
in
popf
adc
dec
pop
mulb
adc
rol
jp
mov
sbb
push
push
mov
movl
div
sbb
insl
cltd
shlb
push
enter
fsubrl
cli
push
stc
decb
shll
push
push
push
push
daa
mov
jl
mov
dec
mov
enter
fbstp
cmp
push
mov
out
mov
mov
xchg
int3
mov
mov
adc
sub
test
push
sub
dec
adc
incl
cltd
sahf
sub
dec
sbb
xor
jl
mov
loope
xlat
daa
mov
adc
xlat
pop
xor
popa
cmp
push
test
imul
data16
sub
xor
test
push
cmpsl
fistpll
push
aam
mov
sub
inc
decb
int3
ljmp
data16
bnd
xor
sbb
jge
xchg
sbb
mov
call
push
mov
push
movsb
rcrb
imull
add
xor
mov
out
mov
les
or
fldl
mov
test
test
or
push
mov
fstp
gs
mov
repnz
sub
loop
xchg
mov
and
sbb
add
call
xchg
push
dec
cmp
ja
inc
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
jmp
insl
shr
jl
scas
sub
movsb
insl
adc
xchg
adc
mov
fcoml
sub
xor
rcrl
sub
add
dec
push
mov
adc
imul
enter
subb
pop
es
mov
pop
out
mov
add
and
aad
cmp
jne
mov
je
sti
in
push
push
lods
inc
mov
imul
aad
cmpsl
ffreep
in
sbb
call
pop
cmpsl
pop
in
xchg
mov
out
mov
in
dec
stc
insb
push
scas
mov
jl
cld
sub
insb
gs
pop
add
enter
not
aas
xor
aas
mov
repz
in
rcr
jp
frstor
mov
lret
jl
orb
add
iret
fildll
popf
inc
xchg
ds
or
mov
adc
add
add
shl
xchg
lret
pop
mov
add
inc
inc
movsb
xor
pop
in
jb
dec
pop
add
jp
sbb
nop
cld
cmp
xor
inc
dec
cmp
int
pop
sub
sbb
push
lahf
xor
sbb
cmp
cli
cs
push
mov
mov
pushf
sbb
hlt
fldcw
out
mov
rcrl
xchg
jns
xor
dec
jg
jo
sbb
pop
mov
xchg
push
xchg
ljmp
shlb
in
adc
bswap
pop
push
xchg
arpl
add
test
adc
loopne
add
cmp
dec
sbbb
ss
adc
loope
mov
ljmp
jne
scas
dec
shll
pop
sbb
aad
sub
adc
cmpsb
ss
inc
push
lods
sti
outsb
xor
mov
daa
out
jmp
inc
loopne
xor
inc
ret
xchg
or
fisttpl
jno
jnp
out
lret
mov
sub
sbb
insb
pushf
or
popf
stos
arpl
les
and
gs
inc
xor
mov
in
popf
add
add
fwait
sarb
cmpl
mov
push
gs
test
rorb
jb
jns
inc
into
pop
or
sahf
mov
scas
in
xchg
dec
dec
mov
aas
or
sbb
ljmp
leave
push
in
addr16
and
loopne
adc
jne
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
jmp
lds
mov
and
sahf
or
sar
lahf
mov
mov
jg
dec
or
mov
xchg
setns
add
push
out
fdivrl
mov
mov
in
adc
mulb
in
push
lahf
testb
popf
push
add
in
orb
or
lds
jno
fcompl
mov
xor
repz
ret
fwait
pop
psadbw
cmp
mov
jmp
xchg
or
pop
inc
jp
dec
stc
mov
mov
add
loopne
sbb
lock
shlb
add
cmpsb
subl
cmpb
aas
repz
dec
ficomps
dec
rclb
xor
and
sahf
shll
pop
rclb
mov
jg
insb
add
mov
negl
mov
negl
loop
stos
xchg
ret
jns
mov
dec
xor
bnd
in
or
jg
add
icebp
dec
insl
mov
ljmp
xchg
std
sbb
jg
push
test
fcmovnu
addr16
ror
insb
dec
push
adc
lods
push
loopne
push
repnz
pop
mov
inc
lcall
pop
jmp
pop
mov
or
imul
and
xchg
fs
clc
mov
push
insl
cmp
dec
xorl
adc
gs
xlat
cli
push
xchg
push
inc
shll
push
inc
ja
or
xchg
or
xchg
js
cltd
cmp
jecxz
setne
in
sub
ret
add
mov
adc
mov
outsl
fldcw
ds
push
lcall
mov
inc
or
int3
outsb
dec
mov
pop
jnp
mov
popa
xchg
inc
sub
sbb
ss
aam
lret
and
jge
test
icebp
mov
idiv
xchg
scas
test
outsb
dec
fstpl
or
lods
and
aas
call
xchg
pop
mov
in
sub
mov
or
sub
dec
stos
arpl
pop
lock
shlb
sbb
popl
jbe
mov
push
aas
xchg
ljmp
loope
pop
lea
aaa
jl
js
test
mov
shlb
add
pop
fsubs
shl
idivb
add
cmp
jae
movl
movl
movl
movl
jmp
popa
clc
jnp
jl
imul
xor
iret
ljmp
mov
cmp
arpl
loop
push
imul
mov
lods
test
roll
jbe
jne
scas
push
loope
test
adc
jno
mov
test
insl
sub
adc
repz
insb
sahf
and
or
dec
push
mov
daa
mov
and
jbe
xchg
adc
int3
inc
int
ror
loop
sub
and
cmpsb
cmpsb
mov
mov
add
xchg
sarb
loope
cs
scas
pop
jp
mov
hlt
xchg
dec
or
movsb
xor
ss
fs
inc
cli
add
pop
xchg
les
mov
adc
push
aaa
push
cs
movsl
or
mov
jae
cmc
push
mov
push
loopne
bound
or
xchg
inc
inc
divb
pop
les
jp
or
cwtl
and
insb
jge
outsl
loopne
cmp
mov
dec
xlat
xor
adc
fidivl
push
shlb
pop
mov
lret
fimuls
push
mov
pushf
jge,pn
aas
push
dec
pushf
je
xor
loopne
ret
mov
subl
enter
movsl
in
sbb
imul
sbb
sub
loope
mov
sbb
add
fimuls
and
push
mov
test
push
xor
jo
pusha
jmp
jge
adc
adc
ret
cmp
pusha
jl
and
test
in
push
ret
ret
add
push
outsb
scas
push
repnz
pop
fisttpl
mov
cmp
pop
xchg
adc
addb
jecxz
adc
xchg
mov
scas
cld
adc
inc
lock
sub
or
xor
in
jnp
adc
cmp
mov
sub
push
jge
scas
sbb
mov
cmp
jle
stos
mov
xor
in
push
mov
enter
fnstsw
xchg
pop
icebp
adc
sar
adc
stos
xchg
icebp
xchg
mov
test
cmp
and
push
xchg
jl
shlb
sahf
clc
cltd
arpl
sub
fsubl
dec
in
jns
test
jmp
jle
xchg
ja
xchg
movsl
cmpsl
repz
testb
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
jmp
dec
sub
test
and
iret
aad
mov
mov
in
in
push
fcomps
in
inc
andl
jp
out
xchg
pusha
lahf
notl
ss
pop
loopne
xchg
or
lds
mov
xor
mov
rcrb
into
and
insl
push
clc
dec
stos
sub
outsl
and
lret
stos
outsb
or
xchg
inc
sub
adc
xchg
es
js
hlt
pop
push
mulb
cmp
jnp
sbb
arpl
cmc
push
pop
inc
xor
xchg
adc
mov
xchg
pop
call
and
cmpsl
push
ret
xorb
xchg
insb
mov
int3
jp
inc
jb
lret
ret
out
xor
int
fisubrs
sbb
mov
pop
mov
dec
mov
fsts
lea
icebp
mov
nop
xor
pop
and
dec
inc
xchg
xchg
ret
imul
rcrl
sub
or
es
dec
dec
test
fiadds
and
sub
push
adc
rolb
dec
pop
rolb
jbe
scas
mov
repz
nop
mov
add
xor
inc
xchg
out
fwait
in
cmp
in
push
mov
fistps
cmp
mov
and
hlt
mov
lret
add
loop
dec
jnp
mov
stos
jae
xor
nop
dec
inc
loop
push
and
cs
push
xor
mov
or
mov
enter
mov
xorb
inc
dec
lods
push
fisubrs
rdmsr
loop
outsl
cmp
std
mov
sbbb
sahf
shll
mov
dec
mov
ret
inc
jp
xchg
das
insb
jge
jb
gs
cmpsl
idivl
test
mov
xchg
mov
pop
paddsw
mov
push
push
mov
dec
cmpsb
aam
movsb
jne
icebp
push
ja
or
sub
mov
jg
dec
and
cmp
jnp
push
and
outsl
adc
push
xor
push
or
cmp
aam
idivb
xchg
jecxz
jnp,pt
inc
lds
or
jmp
decl
js
repz
in
inc
movsl
insl
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
jmp
stos
mov
sub
inc
fstl
cs
scas
mov
mov
jnp
cmp
adc
ljmp
add
or
arpl
cmp
inc
add
dec
pop
xchg
pusha
pop
sbb
xchg
sub
sub
insl
mov
test
fstps
test
xchg
cmp
adc
or
add
xchg
fisubs
sbb
jmp
fisttpll
push
jg
pop
mov
dec
js
cs
aam
push
mov
xlat
cmp
or
jle
pop
sbb
jne
addl
ja
jge
ljmp
movsl
cmp
call
add
jmp
jbe
sbb
sbb
jbe
and
ficoml
mov
ds
cmp
pop
add
pushf
cmp
sub
in
push
mov
ret
xchg
movb
xchg
into
inc
notb
je
adc
push
xchg
or
jmp
adc
and
xchg
test
jo
cli
fisubs
mov
fstl
or
or
inc
jmp
daa
sti
mov
lret
cmp
and
sub
outsl
jb
sub
pop
cmp
xor
and
mov
test
test
mov
fsts
hlt
cmpsl
clc
in
xchg
sbb
les
push
mov
adc
ret
loop
aaa
int
mov
sbb
jne
std
inc
iret
add
in
and
sbb
and
jle
or
fiadds
jo
pushf
or
push
add
mov
subb
fimull
mov
push
sub
adc
in
repnz
imul
cmp
or
ds
loope
sub
lcall
sub
xor
push
out
decb
mov
mov
in
and
adc
xor
daa
adc
clc
xchg
xor
mov
cmpsb
push
adc
jno
push
sub
popf
stos
xchg
sub
clc
punpckldq
ljmp
sub
outsl
sbbb
roll
mov
mov
ret
mov
fistpl
jnp
push
push
sub
xchg
lahf
inc
into
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
jmp
dec
mov
push
mov
pushf
mov
adc
sbb
lods
mov
mov
mov
jae
push
mov
pop
push
imul
inc
repnz
mov
push
or
out
scas
jno
mov
movsl
or
cwtl
mov
fdivr
aad
add
ja
and
adc
jno
ss
cmp
fmuls
adcl
mov
push
or
in
call
add
fs
jmp
and
jecxz
test
cmpsb
inc
test
and
data16
hlt
adc
mov
shlb
xor
adc
cmp
cmp
pop
loop
in
in
sarb
xchg
imul
rcrl
lret
jae
cmp
enter
mov
lds
inc
xor
mov
movsl
fs
in
int3
mov
cmp
pushf
cmc
in
jg
scas
xor
stos
fadds
std
push
xlat
jg
dec
sbb
inc
fcoms
stos
push
cmp
jmp
mov
aas
out
sarb
fdivr
divl
mov
jae
sahf
lret
addb
xor
lret
out
in
in
push
adc
andb
sarb
sbb
insb
pusha
das
jnp
test
bound
repnz
int
adc
sbb
movsl
or
inc
imul
mov
and
xchg
add
in
cmp
cli
adc
cmp
xchg
insb
add
imul
test
inc
int3
pusha
mov
jecxz
inc
mov
test
push
cmp
mov
insb
and
je
jb
pop
scas
ljmp
dec
lret
add
nop
xchg
das
inc
jg
bound
mov
jge
dec
xchg
ret
mov
jo
cwtl
scas
test
jno
insl
hlt
jno
in
jno
pop
mov
jns
les
pop
mov
mov
pusha
into
or
stos
xor
lds
inc
adc
lcall
xor
adc
mov
and
lcall
xchg
cmp
hlt
insb
ss
sub
cmpsb
mov
sub
mov
mov
inc
jno
and
movsl
std
stos
cmp
clc
pop
in
or
mov
ljmp
or
cmp
mov
lock
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
or
or
sbb
or
mov
mov
mov
fbld
mov
repz
test
inc
int3
cli
fcomi
xchg
test
adc
outsl
push
mov
push
or
pop
push
push
jbe
mov
and
dec
add
aam
int
lahf
mov
mov
add
mulb
test
mov
cmp
js
pop
push
negb
mov
fstps
or
popfw
xor
cltd
les
repnz
fstpl
sbb
cltd
loopne
pop
ljmp
filds
adc
xor
cli
pop
arpl
ficoms
mov
stos
mov
aad
jo
stos
mov
into
sub
stos
cmp
mov
dec
sti
sub
push
fucom
or
stos
outsl
rclb
repz
mov
or
add
mov
xor
andl
lahf
push
mov
xchg
popf
bound
mov
pop
pop
fistl
scas
adc
pop
mov
ficompl
cwtl
push
outsl
add
mov
gs
pop
lret
repnz
shl
mov
cli
mov
inc
add
mov
pop
jne
stc
xor
dec
lods
cmpsl
das
xchg
xchg
or
push
and
jno
sbb
sbb
into
inc
xor
lcall
mov
lods
sub
or
aam
and
dec
movsb
mov
sub
and
inc
dec
cld
xadd
or
aas
out
jecxz
hlt
jnp
xchg
sbb
mov
cltd
scas
ja
hlt
lods
loop
fwait
cmp
lods
ja
movsb
cld
lahf
mov
addb
test
call
cmp
gs
sbb
push
ljmp
fldcw
test
call
sbb
sti
sub
adc
dec
or
jmp
lret
cwtl
xchg
jno
mov
add
mov
mov
mov
sbb
leave
jecxz
and
cli
in
and
cmp
pop
pop
push
inc
xor
popa
addb
xchg
inc
lods
jp
sub
cmp
dec
test
inc
mov
pop
js
dec
in
nop
sub
sbb
and
insl
xor
sub
stos
punpcklwd
sub
ror
aam
dec
cltd
push
sub
sub
mov
jl
jns
sub
inc
xchg
lods
push
xor
mov
dec
lahf
jmp
imul
xor
push
fistps
mov
sbb
mov
jae
leave
sbb
xor
mov
test
adc
test
mov
aad
das
nop
or
and
aas
into
popf
das
push
cwtl
jne
notl
adc
jle
icebp
and
jbe
ss
ljmp
or
fsubrl
cmpsb
mov
push
fwait
sar
jbe
adc
ja
inc
mov
mov
dec
ret
es
mov
and
cli
roll
pop
or
mov
in
in
jae
ss
jae
repnz
in
pop
js
or
loop
inc
dec
adc
scas
push
or
jb
leave
fldcw
push
mov
subb
sub
mov
daa
aad
sub
xor
jo
mov
repnz
insb
sbb
sub
hlt
or
and
sbb
dec
pop
mov
not
ja
cmp
and
sub
outsb
out
inc
jle
cwtl
fdivl
mov
dec
and
mov
loopne
repz
dec
popfw
bound
xchg
adc
ret
add
clc
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
jmp
lret
leave
hlt
fsincos
out
and
or
mulb
les
xchg
push
push
mov
scas
inc
cld
inc
popa
sbb
out
xor
inc
mov
ds
icebp
mov
jne
mov
js
outsl
lods
add
daa
cmp
jle
ret
pop
xor
pop
lea
ret
lods
jle
push
lods
jne
jecxz
into
fiadds
out
add
inc
into
lret
lahf
aas
pop
cld
sub
stos
filds
sti
push
ss
imul
iret
or
mov
mov
mov
lcall
movsb
loope
cli
mov
movsl
sbb
nop
mov
jne
jl
jb
sub
jo
add
stc
jmp
lret
imul
pusha
out
out
stos
daa
sub
add
xlat
inc
dec
or
add
clc
rorl
jno
insb
pop
push
cwtl
xchg
adc
lods
xchg
les
xorl
insb
shlb
inc
push
dec
shll
andb
int
mov
mov
cmp
sub
icebp
ja
arpl
mov
push
outsl
sbb
ss
xor
popa
sub
addr16
pop
iret
jl
enter
adc
and
fs
push
outsl
jae
lods
dec
mov
fidivrl
inc
mov
sarb
aam
mov
add
fisubl
jbe
add
cmpl
aad
std
rolb
lods
jecxz
pop
pushf
push
pop
sub
xchg
xchg
es
int3
add
sub
scas
cmc
stc
orb
sbb
repz
xchg
es
xchg
xchg
fwait
lcall
jp
shrb
sub
test
xchg
jnp
pop
add
mov
inc
sbb
sub
dec
or
push
jb
fisubl
cmpsb
jb
in
sub
and
and
mov
or
ljmp
and
mov
push
mov
sub
aas
or
adc
cmp
cmp
and
or
sbb
mov
insl
cmp
in
popa
mov
fs
ret
sbb
lcall
imul
or
sti
je
mov
mov
pop
mov
cmp
std
cmpsl
rclb
jbe
std
mov
mov
repnz
jecxz
mov
faddl
popf
mov
pop
das
out
pop
clc
inc
sbb
sahf
jle
sbb
adc
rorl
inc
das
movsl
shr
gs
fsts
mov
xchg
mov
dec
sbb
jo
fldt
jl
dec
std
fsub
jnp
rolb
push
imull
xchg
pop
mov
sbb
fwait
lods
icebp
lods
lret
pop
add
adc
or
outsl
cmp
lods
or
push
pusha
dec
cmpsb
pop
loop
adc
cmp
dec
pop
push
sub
mov
sti
shlb
mov
xchg
test
sub
in
cli
pop
or
daa
push
pop
pop
pop
scas
ret
sbb
xchg
lea
jb
andl
fxch
mov
pop
cmc
bound
add
xlat
repz
push
adc
call
cmpsl
das
or
jp
or
es
dec
add
push
cmp
fninit
movb
fcomps
dec
jge
in
inc
mov
mov
les
aas
and
fs
bound
xchg
and
fadd
ret
jo
and
sub
xor
in
cmp
fmul
sub
nop
aam
add
mov
je
repnz
daa
std
rol
sbb
pop
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
jmp
std
jno
dec
mov
rcrl
jecxz
mov
mov
popf
outsb
ficoml
in
imul
cwtl
cmp
fs
xchg
cs
xchg
sub
stos
adc
sub
or
sbb
jo
test
sbb
pop
hlt
imul
push
mov
push
push
fstl
jnp
jo
jne
mov
mov
call
addr16
mov
loopne
mov
sbb
stos
xor
cmpsb
cmp
push
and
adc
xor
jle
lods
cs
mov
mov
cmp
hlt
ret
in
stos
getsec
ret
or
jbe
fsubs
rolb
shl
ss
pop
addr16
nop
in
xor
mov
jae
push
pop
sbb
push
add
jo
xor
bound
jmp
xchg
jp
bound
mov
jbe
push
xchg
inc
incl
or
daa
jns
xor
movsb
sbb
cltd
push
pop
std
cmpl
jl
push
mov
dec
out
push
push
ljmp
pop
xor
imul
and
and
add
jne
and
popa
add
loopne
jb
out
push
jmp
fiaddl
fs
sbb
adcb
pop
pop
testl
les
negl
fsubl
mov
repz
lcall
lock
repnz
mov
or
lcall
sub
hlt
jp
ficoms
rorl
test
cli
arpl
jp
dec
xchg
lods
pop
notl
es
int3
mov
es
imul
repnz
or
negb
outsl
das
and
mov
cmp
adc
jb
les
pop
pop
inc
adc
sub
cltd
insb
mov
rcr
lret
pop
push
mov
scas
cmp
cli
adcl
movsl
sub
pop
xor
push
jo
jmp
mov
lret
add
xorl
rol
adc
pop
andl
nop
out
mov
shlb
popa
cwtl
out
lcall
inc
aad
add
int
fiadds
mov
popf
test
scas
lods
push
push
jbe
cmp
repz
imul
lea
int
dec
inc
pop
dec
pushf
inc
pop
call
mov
adc
out
jl
cli
xor
popf
sub
inc
pusha
lahf
test
aam
mov
sbb
movsb
dec
sbb
or
and
nop
repnz
inc
sbb
lods
cwtl
cmp
sub
dec
sti
jl
lcall
les
dec
lahf
or
and
ror
sub
cmp
adc
sub
xor
cmp
and
ja
or
dec
in
adc
xor
dec
or
lds
cld
out
mov
jl
cmp
sbb
inc
pop
sbb
mov
fdivl
sbb
cld
out
jg
jmp
faddl
push
leave
mov
and
pop
psraw
or
outsb
imul
push
aaa
out
add
fmul
cmp
xor
repz
sub
add
mov
inc
cmp
adc
add
push
xchg
jl
adc
js
inc
enter
into
pop
lret
xor
in
loopne
add
adc
out
jp
insb
sub
in
es
movsb
add
inc
lret
push
test
cltd
cmp
add
inc
adc
sbb
test
movsl
dec
mov
pop
sbb
sub
add
ret
ret
fnstsw
dec
jg
leave
inc
mov
lcall
add
icebp
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
outsl
mov
ja
or
rcll
iret
mov
mov
cs
imul
mov
adc
incl
cmp
xchg
push
xchg
or
sub
dec
mov
sbb
adc
pusha
enter
insb
idivl
lret
pop
nop
repz
sub
or
rol
test
dec
dec
cmp
sub
xor
or
sub
jbe
out
in
add
arpl
mov
inc
lahf
or
xorl
cmpsb
mov
jo
jle
jne
imul
movsl
out
mov
pop
push
push
mov
or
lods
xchg
inc
ja
mov
and
mov
push
xor
jnp
push
fadd
repnz
and
dec
push
cs
add
mov
icebp
xor
sub
mov
xchg
loop
rcrb
adc
push
inc
outsl
leave
xchg
jmp
fisttpll
pop
pop
sbb
mov
push
scas
add
dec
jae
outsl
sub
mov
push
xchg
add
xchg
jp
cwtl
mov
in
cmp
dec
inc
in
and
int
mov
in
inc
stos
or
addr16
call
cmp
mov
pushf
jl
loop
lods
test
ja
mov
or
test
mov
jo
jo
cwtl
cmpsb
xchg
outsl
mov
hlt
out
lods
and
mov
ja
and
pop
mov
or
and
add
cmpsl
mov
jmp
and
mov
add
and
js
gs
mov
inc
sbbb
cmp
sub
inc
pop
sbb
pop
shl
test
push
pushf
push
dec
push
push
mov
push
xor
imul
cli
fdiv
xchg
shll
jp
jl
inc
adcb
mov
fcmovb
and
fldcw
mov
mov
jae
btcl
push
jl
dec
call
mov
stos
xchg
add
in
sti
xchg
mov
sbb
psubw
scas
dec
les
call
pop
movsl
mov
push
dec
xchg
pop
and
fwait
fs
xor
popf
push
fcomps
mov
jae
pop
repz
mov
cld
xchg
loope
push
pop
xchg
and
push
fdivrl
adc
sub
loope
or
inc
xor
ss
sub
mov
inc
icebp
push
ljmp
jo
sub
mov
xchg
mov
sub
orl
arpl
insl
sub
aad
cs
lods
mov
inc
aad
jmp
aam
push
push
mov
mov
into
sub
xchg
scas
xlat
aaa
sarb
mov
mov
sarb
dec
sbb
dec
add
jbe
push
xor
xchg
pop
daa
aam
adc
xchg
int
out
xchg
mull
pop
add
das
and
xchg
sbb
and
push
xor
aam
out
dec
dec
punpckhdq
xor
mov
popa
addr16
dec
xchg
dec
push
push
adc
out
push
pop
mov
in
pusha
cmp
xchg
inc
or
sbb
aaa
inc
mov
lds
test
pushf
pop
or
xor
or
push
repz
addr16
and
les
xchg
push
call
clc
jp
jl
pop
and
and
xor
xor
add
adc
sbb
push
mov
inc
and
mov
lods
xchg
stc
les
stos
mov
clc
xlat
sbb
movl
movl
mov
jmp
fisubrl
mov
or
iret
nop
jmp
les
les
and
cltd
mov
addl
ffreep
mov
jnp
mov
jmp
cld
out
es
mov
ret
roll
lahf
int3
xchg
cmp
movsl
jb
xchg
insl
push
inc
scas
in
loopne
pop
outsb
sub
je
adc
scas
std
mov
dec
pop
xchg
fcoms
ret
mov
push
add
push
cmp
cli
inc
lock
addr16
fsubrs
mov
aas
ja
aam
scas
arpl
mov
das
aaa
push
pusha
fcompl
rolb
pop
xchg
xchg
adc
popf
and
lock
and
leave
or
fisubl
in
jg
lods
dec
outsb
mov
mov
cmovno
cs
movsb
push
int3
mov
jne
repnz
std
xchg
xchg
in
adc
out
push
je
divb
lods
lds
popa
xchg
inc
popf
pop
stc
push
mov
mov
jle
gs
xor
je
jne
shll
push
xchg
outsl
sbb
mov
test
bound
sahf
jle
ret
test
sub
and
mov
fiadds
in
add
push
lds
pusha
das
sbb
out
dec
inc
enter
ret
push
js
mov
outsl
inc
in
or
push
test
mov
mov
pop
add
aas
bound
repz
aas
fmulp
cmpl
sub
jecxz
jo,pn
enter
movsb
shll
mov
pop
pop
pusha
dec
add
cmp
mov
mov
pusha
lods
es
sbb
insl
add
push
rolb
movsb
inc
inc
inc
push
sbb
daa
xchg
push
inc
stos
sbb
mov
int3
nop
cmpsl
cmp
xchg
lods
jo
mov
cs
push
add
loope
add
lods
ljmp
and
aam
sub
mov
gs
frstor
test
jge
jns
mov
lods
outsb
pop
mov
adc
push
popa
cli
jno
and
cmp
push
int3
test
fwait
dec
mov
mov
movsl
pusha
pop
ss
rolb
rep
test
scas
cmp
mov
cmc
mov
out
ds
dec
cwtl
jnp
mov
stos
bound
out
cmpsb
outsb
mov
mov
into
inc
jge
fbld
or
popf
mov
gs
dec
or
jg
shll
inc
pop
add
insb
arpl
pop
push
bound
pushf
or
mov
lods
loope
dec
es
xlat
mov
jno
inc
cltd
das
xchg
xchg
inc
icebp
mov
jl
mov
mov
mov
mov
add
xchg
test
lret
aas
or
jnp
adc
into
dec
icebp
lea
stos
hlt
jl
push
push
and
sbb
mov
cmp
jnp
adc
pop
push
or
adc
xchg
jg
sub
fisubrs
xchg
xor
jno
imulb
hlt
cmc
mov
pusha
jp
loopne
xor
mov
mov
movsb
je
xchg
cmp
fsubs
cltd
push
adc
or
test
mov
pop
mov
aas
mov
dec
mov
jp
sub
jbe
andb
ja
scas
jbe
adc
xor
fsubrs
outsb
mov
insl
xor
and
mov
jge
sub
mov
mov
pop
out
adc
test
pop
data16
loopne
pop
sahf
jle
xor
sub
mov
test
je
jae
push
push
fbld
popa
sbb
push
gs
fidivrl
movsl
scas
jg
imul
mov
mov
fdiv
pusha
xor
mov
in
jne
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
jmp
popf
lcall
pop
out
jecxz
push
push
sahf
mov
les
mov
pop
xchg
xchg
insl
dec
and
daa
imul
es
pop
ljmp
test
out
sti
xor
cmp
roll
scas
mov
fildll
sub
mov
pop
jbe
xchg
sub
push
rorb
mov
aam
shlb
adcb
divb
dec
jne
loop
faddl
inc
push
jnp
and
aas
cld
repz
hlt
and
cmp
cmp
pop
pop
push
dec
mov
jae
aas
mov
xor
pop
into
add
sahf
rorb
dec
mov
push
xlat
jb
test
iret
push
shlb
or
jge
test
ds
adc
fnstcw
dec
push
jmp
mov
cmpsl
in
jecxz
dec
pop
jne
cld
ret
and
cs
jge
mov
mull
push
sbb
sbb
xchg
or
or
adc
dec
aas
pop
cmc
out
sub
push
outsb
jae
push
lret
xchg
outsl
cmpsb
lods
fwait
pop
add
and
out
xorb
sbb
shrb
sbb
or
ljmp
daa
xlat
push
pop
cwtl
push
aad
pop
push
in
aad
xor
out
fwait
push
inc
in
test
push
stc
mov
lods
add
das
push
jp
stos
adc
loopne
xchg
fsubrs
add
and
int
fcompl
adc
xor
jbe
std
adc
cmpsb
cltd
movsl
lock
jmp
je,pn
cmpsb
mov
jl
sub
xchg
lret
cld
cwtl
add
jle
jge
add
scas
pop
dec
push
dec
xor
cmc
int3
xor
xor
or
pop
or
sub
cld
inc
or
pop
repnz
data16
sub
push
pop
mov
cwtl
mov
jbe
xorb
and
or
jae
mov
fnsave
mov
push
or
jl
cmp
pop
loop
lret
sbbl
mov
mov
imul
mov
in
sub
hlt
fcomps
jl
cmp
add
and
mov
mov
push
jne
jno
mov
add
movsb
xor
inc
call
push
dec
rcll
or
push
jecxz
iret
sahf
rorl
cmpsl
mov
pop
sub
adc
jnp
pusha
jecxz
pop
sbb
sti
or
add
dec
or
insb
inc
mov
test
cltd
outsl
cmp
or
pop
xchg
js
fisubrl
cltd
mov
dec
mov
test
jne
xor
push
inc
add
xchg
xchg
pushf
dec
adc
push
sbb
movsl
jg
adcl
lods
aam
pusha
sbb
adc
cwtl
mov
mov
sub
in
adc
out
lret
push
loope
daa
fidivrs
adc
dec
repnz
sbb
fcos
mul
mov
xor
in
jnp
addb
lods
xor
mov
lods
fiaddl
cs
mov
fwait
rolb
inc
adc
into
dec
outsl
adc
ss
pop
repz
ja
push
loopne
pop
and
aas
adc
aaa
push
add
das
clc
or
es
xor
mov
repnz
cwtl
stos
mov
sub
mov
loopne
test
push
mov
pop
pop
pop
loopne
mov
dec
mov
xor
cmp
mov
xchg
ljmp
pop
sbb
xor
incb
pop
mov
add
int
dec
outsl
sti
cmp
push
xchg
inc
loopne
rcrb
push
in
inc
andb
mov
add
inc
xchg
adc
add
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
jmp
imul
lods
xchg
adc
nop
xorb
iret
xchg
out
mov
add
scas
mov
inc
ljmp
xor
cmp
cmp
mov
xchg
pushf
fs
mov
pop
lds
test
add
sbb
movswl
xchg
movsl
iret
mov
data16
popa
ljmp
jp
ret
push
cli
arpl
jae
inc
adcl
push
imul
ds
adc
pop
xchg
arpl
loope
xchg
fs
pop
lret
repz
stos
add
icebp
xor
lock
sbb
cs
cmp
xchg
mov
add
in
insl
das
test
xor
lret
sub
mull
mov
movsl
add
mov
aam
xor
ss
xor
jmp
es
popa
and
cltd
ds
imul
gs
cli
push
mov
mov
jle
in
cmp
int3
sub
sahf
cmp
push
fidivs
jmp
sub
pop
sub
cmp
push
pop
pusha
les
jle
mov
stos
sbb
mov
pop
insb
mov
enter
lods
cmp
popf
cmp
lds
mov
jns
mov
xchg
and
xor
fucomip
aaa
push
push
loope
out
cld
repz
sbb
arpl
adc
aaa
push
loope
mov
mov
fsubp
jno
mov
add
popa
cmpsb
mov
lret
movsl
mov
loopne
arpl
push
es
dec
xchg
dec
dec
inc
pop
push
xchg
ficoms
outsb
xchg
out
mov
adc
pop
pop
loope
adc
std
loop
out
sub
notb
jle
sti
lret
inc
addb
aad
lock
xor
and
or
and
jno
push
test
movsb
mov
inc
pop
mov
jg
mov
sbb
mov
fs
sbb
jecxz
inc
mov
fcmove
pop
mov
mov
icebp
jo
inc
jg
imul
sbb
loop
mov
mov
les
mov
cltd
push
push
lret
imul
mov
mov
out
stc
adc
sarb
and
xchg
push
daa
cltd
push
inc
lcall
jmp
pop
fdivrp
sarb
mov
cs
inc
lock
add
out
stc
xor
gs
movsl
mov
in
out
daa
data16
mov
fucom
push
test
jge
mov
add
scas
pusha
jbe
repnz
lods
add
push
mov
lea
cmpsb
jnp
repnz
ljmp
idivl
push
fiadds
xor
pop
cmp
xorl
or
loope
in
data16
loop
add
inc
out
or
lods
and
mov
adc
out
outsl
push
je
movsb
fmul
sub
out
add
xchg
call
add
orl
dec
jae
inc
pop
inc
sbb
pop
sub
jge
pop
or
movl
adc
divb
mov
sti
mov
mov
fisttpl
sbb
push
int3
scas
clc
cmp
xlat
mov
jge
mov
sub
and
jp
insl
sbb
mov
nop
xchg
enter
aam
and
scas
stc
jbe
fildll
pushf
mov
xor
cld
ljmp
pop
cmp
push
dec
aaa
lds
and
ds
ss
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
jmp
hlt
scas
je
mov
cld
mov
xchg
fisttps
gs
mov
add
jp
shlb
xchg
ja
adc
mov
jns
dec
or
adc
push
mov
rcrb
xchg
sub
xor
fistpl
sbb
push
mov
jp
pop
dec
fcoms
shl
notl
mov
arpl
iret
ficomps
mov
imul
ss
adc
xor
movsb
call
movsb
and
dec
out
xor
cmpsl
adc
stos
or
mov
lcall
out
jnp
incl
sub
xlat
mov
call
and
add
int
fisubs
cmp
pop
subl
push
icebp
scas
lods
lret
mov
sahf
pop
or
stos
imul
out
sbb
sub
inc
aam
add
enter
mov
pop
and
jle
loopne
jl
mov
mov
cwtl
les
pusha
dec
add
js
cwtl
pop
lret
sbb
jle
adc
add
sbb
mov
xchg
mov
or
int3
imul
daa
xchg
fcoml
dec
orb
mov
out
leave
call
add
insl
cmc
mov
push
insl
adc
adc
fnstcw
mov
mov
cltd
outsl
xchg
xchg
xchg
decb
add
jae
dec
out
sbb
fidivs
leave
lea
or
icebp
mov
scas
pusha
cltd
dec
adc
add
push
stos
ficomps
xchg
lods
push
lds
jnp
scas
fnstcw
dec
xor
or
dec
out
or
dec
lds
push
sbb
inc
stos
mov
ja
je
xchg
bound
xchg
jb
repz
or
xchg
test
sub
mov
outsl
les
adc
js
rcrl
xchg
mov
and
aaa
push
inc
mov
daa
mov
test
shl
xchg
xor
xchg
cmp
add
sbb
ss
pop
cmpsl
add
fcoml
dec
xor
dec
div
fsubrs
sub
js
or
cmp
data16
mov
sbb
gs
arpl
mov
loop
jb
mov
xchg
icebp
jb
stc
mov
fmull
mov
add
jo
xchg
enter
pop
mov
scas
mov
sbb
lahf
lahf
mov
gs
xor
mov
dec
lds
inc
inc
jne
mov
pop
or
adc
mov
cs
scas
or
lds
push
xchg
iret
jns
hlt
pop
xchg
cmp
push
fwait
insb
negb
sub
xchg
push
lods
xchg
or
xorl
and
or
adc
sahf
incl
pop
es
dec
sbb
inc
bnd
cmp
das
stc
int3
mov
test
adc
out
testb
out
pop
xchg
pop
xchg
ja
stc
fidivl
sub
xor
fsubrs
jns
adc
int
jecxz
out
fnstenv
jae
ds
orb
inc
mov
movsb
jl
and
shrb
pop
ret
iret
pop
dec
or
bound
dec
sbb
js
scas
mov
fcmovnb
mov
ret
in
rolb
and
incb
sbb
sbb
inc
mov
cli
int
mov
pushf
inc
jb
addl
repz
outsl
dec
mov
mov
xchg
lock
loop
les
shlb
mov
add
aam
es
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
jmp
dec
pop
xchg
idivl
push
shll
clc
mov
mov
shrb
pop
aad
aas
xchg
adc
stos
out
loop
push
das
ds
add
or
das
pop
sbbl
rorl
dec
mov
xor
jne
cld
xchg
test
push
inc
inc
inc
pusha
adc
in
imul
push
pushf
shlb
out
cwtl
iret
mov
xlat
jge
mov
dec
scas
xor
movsb
insl
sbb
inc
test
pop
sbb
sarb
and
xor
movsb
rcrb
insb
sbb
mov
clc
cmp
jle
addb
xor
test
mov
movsb
cmp
push
js
rclb
and
or
popa
hlt
jg
rcll
testl
jb
inc
repz
vpinsrd
jge
and
dec
cmp
push
jbe
aaa
and
sahf
sbb
sub
popa
imul
ficoms
cmp
or
adc
movsb
mov
in
cltd
adc
mov
fcompl
in
xor
dec
jnp
jmp
int3
push
mov
jp
xchg
fsubl
push
leave
sbb
mov
orb
mov
std
iret
stos
jno
shlb
dec
mov
cwtl
push
cmp
lea
and
xchg
sub
sbb
out
ret
repz
lds
xor
jae
mov
out
add
sbb
arpl
mov
push
jb
xchg
or
outsb
inc
enter
out
lea
movsb
xchg
cmp
add
je
out
addr16
mov
or
shll
cmp
in
xchg
popf
fistpll
xchg
and
dec
dec
jp
enter
push
imul
add
or
insb
pop
addl
sbb
bound
push
mov
jb
in
test
test
rol
movsl
xchg
lahf
cmp
adc
ljmp
inc
ss
dec
dec
inc
lcall
fwait
lea
ss
pop
scas
leave
fistpll
cmp
mov
mov
scas
mov
jnp
popf
xor
push
mov
mov
cmpsl
inc
xlat
mov
mov
pushf
jmp
test
cli
scas
cmp
inc
call
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
jmp
and
jnp
scas
fs
nop
cs
pushf
jecxz
cld
mov
mov
aad
cmpsl
jge
out
or
std
fs
xor
mov
in
mov
and
jo
call
call
mov
ss
sbb
cltd
iret
mov
xchg
xchg
out
daa
shrw
cmp
dec
dec
call
ret
lods
sub
dec
in
shrl
out
fstps
gs
push
mov
aam
das
lods
pop
test
sub
pusha
int3
cmp
add
adc
gs
cltd
stos
or
lret
mov
stos
mov
out
adc
and
fbld
stos
sbb
dec
and
dec
lds
out
xchg
mov
or
pop
sub
add
lcall
rorl
adc
fsincos
sbb
xor
ljmp
js
jb
scas
or
movsl
jne
add
ficompl
pop
mov
pusha
pop
or
rorl
sub
in
jne
push
mov
xchg
pop
and
and
and
mov
sub
pop
push
pop
xchg
ss
call
add
jne
pop
js
repz
add
faddl
js
push
wbinvd
dec
ficomps
mov
inc
icebp
dec
add
jg
scas
push
push
dec
rcrl
insb
outsl
in
outsb
cwtl
jge
in
push
dec
sbb
outsb
out
cmpsb
jl
negb
repz
je
sub
xor
pushf
popa
shlb
shlb
xor
ror
arpl
cmp
lcall
loope
sub
out
mov
enter
mov
mov
sbbb
pushf
jbe
push
jp
inc
leave
les
rcll
neg
subl
icebp
jge
push
xchg
push
shll
mov
ss
lret
fcomip
jle
inc
push
jle
in
mov
in
inc
and
rorb
mov
xchg
dec
mov
mov
mov
shlb
stos
sbb
cltd
mov
add
pop
xchg
in
xlat
add
sbb
loop
ficomps
jbe
and
xor
clc
sub
cwtl
mov
jbe
int3
or
stc
lret
out
push
movl
movl
movl
movl
xor
movl
push
jmp
jecxz
fscale
pop
mov
lods
je
push
sahf
xchg
mov
mov
mov
jo
cwtl
loopne
imul
imul
mov
mov
pop
flds
push
push
call
pushf
adc
fbld
in
fcmovnbe
sbb
add
mov
jl
call
xchg
push
rcrb
xchg
out
insb
mov
jb
cwtl
fstps
inc
mov
imul
fwait
daa
iret
shlb
test
hlt
jns
xchg
jo
movsb
ds
pop
sahf
xchg
imul
xor
test
and
mov
and
adc
xchg
insb
sub
pop
inc
or
lock
inc
pop
sub
es
mov
sbb
push
jl
sub
mov
mov
cmc
fstl
sub
fucomi
fmuls
or
call
mov
xchg
push
dec
leave
stos
push
push
push
in
xchg
cmp
jae
xor
jle
cmp
mov
jbe
xor
xor
adc
mov
into
cwtl
mov
loop
idiv
jle
div
xor
mov
negb
jge
mov
pushf
add
pop
mov
cmpsl
cmp
mov
mov
dec
pop
xchg
push
xchg
imul
adc
fmull
cmc
leave
lock
lds
pop
push
jnp
adc
inc
test
mov
push
loopne
pop
arpl
dec
aad
int3
and
or
cmp
cmp
and
or
in
outsb
push
cmp
jmp
cmp
add
mov
mov
std
or
in
in
dec
xlat
sarl
inc
cmp
sub
mov
popf
lahf
dec
fdiv
xor
pushf
push
push
into
inc
shrl
aaa
faddl
fsubrl
data16
and
int3
insl
mov
test
sub
gs
or
jl
pop
xor
add
dec
xor
cld
mov
dec
js
sbb
fnstenv
or
adcl
pusha
push
pop
ret
testl
arpl
das
js
xor
movsb
pop
cmpsl
jnp
cmp
xor
movsl
popw
or
in
pop
cs
xchg
mov
adc
push
bound
jg
inc
pop
sub
inc
jecxz
ret
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
jmp
movsl
jno
into
mov
jb
fisttpll
cli
movsb
int
mov
mov
movsb
repz
dec
out
fnstcw
jb
adc
mov
mov
lret
add
mov
pushf
hlt
mov
xor
gs
sub
push
sub
inc
xor
rclb
xchg
cmpsl
aas
dec
xlat
dec
test
and
gs
dec
mov
inc
sub
sbb
pop
nop
push
mov
lcall
and
ja
fimuls
pop
mov
fiadds
int
hlt
push
movsl
loope
add
cmp
push
dec
dec
iret
and
inc
pop
sub
cmp
cmp
popf
jmp
pop
mov
pop
and
out
cwtl
or
xchg
adc
lahf
mov
push
out
push
jno
mov
mov
cmp
xchg
sub
mov
imul
mov
lcall
popa
movsb
sub
lahf
add
imul
sbb
pop
hlt
adc
outsl
adc
adc
in
dec
push
cmp
jb
pop
xor
mul
mov
jmp
mov
mov
dec
ret
cwtl
cmp
sarl
lcall
daa
popf
mov
and
stos
movsl
dec
lods
insl
insb
mov
in
cmpsl
and
pop
aam
iret
and
lret
push
js
push
dec
mov
dec
inc
in
rcll
mov
pop
rcr
in
xchg
cwtl
jg
and
stc
or
mov
jecxz
push
jno
fmull
jns
inc
orl
lcall
lods
adcb
sub
dec
popf
js
ffree
ljmp
cmc
mov
pusha
in
mov
orl
jp
xor
mov
xchg
dec
sub
insl
out
push
push
adcl
loopne
xor
popf
jbe
xor
jbe
lret
pusha
sub
mov
sbb
js
pop
mov
les
adc
es
int3
lock
mov
add
mov
mov
pop
shlb
shrb
test
into
cli
mov
pop
rclb
jns
cmp
dec
stos
mov
and
faddp
and
mov
test
sarb
dec
fistpll
rcr
repnz
mov
mov
jp
cmp
and
testb
cmp
mov
dec
pop
xchg
mov
add
mov
jmp
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
jmp
xor
sub
sub
mov
sahf
mov
jecxz
or
mov
sbb
dec
cmp
mov
adc
daa
xchg
lcall
sbb
iret
adc
insl
mov
stc
jle
sbb
outsl
jnp
pop
in
js
ljmpw
test
call
sarb
or
int3
subl
jle
mov
jo
cmpsb
cmp
aaa
in
xchg
out
stos
out
nop
pop
out
mov
add
or
clc
cli
push
faddp
inc
nop
lahf
lret
cmp
loop
test
stc
pop
mov
adc
mov
pop
push
mov
mov
fsubrl
dec
xor
ds
push
push
mov
loop
jecxz
dec
inc
insl
jb
adc
aam
push
cmp
push
xor
loopne
popa
stos
pop
push
xchg
sbb
je
xchg
loop
es
in
mov
cld
add
pop
sbbl
mov
mov
mov
jge
loope
dec
nop
pop
jae
int3
cmpsl
fsubrp
jp
jno
jns
pop
andl
jns
add
adc
fidivs
cli
push
xchg
inc
pushf
push
int3
mov
notl
inc
shrl
addr16
and
jbe
cmp
clc
add
enter
in
dec
xlat
ss
cmp
jmp
test
das
sarl
jecxz
ficomps
jns
mov
pop
adc
push
cmp
pop
xor
pop
push
cli
xlat
leave
gs
ret
stos
mov
loop
lcall
dec
sahf
sub
les
lds
shlb
mov
outsb
push
push
mov
es
sbb
sbb
lea
dec
jmp
les
jb
mov
adc
imul
insl
and
jb
mov
ss
mov
jb
inc
or
add
cli
add
leave
xchg
cli
or
push
mov
cltd
sub
add
adc
cld
inc
mov
add
hlt
int
lret
imul
inc
ss
popl
push
inc
jnp
jae
movsl
mov
iret
fimull
aaa
pop
pop
outsb
lret
out
add
push
dec
mov
and
push
int3
daa
js
shll
jge
lea
repz
pushl
mov
xchg
test
jbe
addr16
or
loopne
adc
es
pusha
fsubs
shrl
sbb
inc
jg
fcmovnb
pop
xlat
std
xchg
inc
incb
pop
pop
icebp
scas
ljmp
xchg
orb
stos
aaa
lock
fsubl
in
or
test
adc
sbb
fisttps
fisttps
cmpsb
and
cmp
mov
xor
loopne
rolb
aas
bound
into
fisubrl
bound
mov
mov
inc
js
mov
int
add
mov
add
call
stos
faddl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
jmp
mov
lods
xchg
mov
pop
xor
test
scas
iret
in
adc
mov
int3
mov
add
xchg
or
xor
leave
cmp
pop
cmpsb
icebp
xor
cli
xor
popa
xchg
jp
hlt
mov
mov
mov
mov
mov
loope
fcoms
test
aad
lea
fstps
or
and
cwtl
push
mov
neg
sub
xor
dec
cmp
mov
push
push
mov
ror
xchg
mov
mov
push
jne
inc
and
mov
in
jno
mov
adc
jno
xchg
dec
int3
push
lahf
pop
inc
out
xorl
and
test
jnp
inc
push
ret
notb
aaa
ret
jns
leave
mov
icebp
mov
cs
or
mov
mov
or
xchg
jecxz
mov
fsubrs
xlat
loopne
orb
mov
add
push
jno
push
mov
rcll
xchg
sbbl
xchg
xchg
daa
call
lcall
push
sti
xor
adc
jno
adc
sbb
int
jmp
add
icebp
sub
mov
aaa
adc
sub
movsl
int
shll
pop
mov
iret
ja
mov
js
pop
nop
pop
sub
test
adc
in
xchg
leave
insb
and
sbbl
push
test
clc
or
sbb
xchg
ljmp
test
lret
xor
jnp
sub
stc
lea
or
sub
mov
mov
sti
adc
push
cs
test
sub
dec
es
mov
push
xlat
dec
data16
inc
push
jl
add
sti
lock
push
shrb
push
xchg
and
outsb
lret
idivb
add
sub
sbb
push
mov
sub
sbb
scas
lahf
in
les
mov
or
dec
jne
sub
test
jecxz
cmc
arpl
arpl
sar
inc
xchg
insl
cmpl
aaa
fdivrl
adc
lea
sub
outsb
cmp
xchg
mov
or
in
cwtl
js
inc
scas
mov
femms
mov
jecxz
cmp
jle
xor
pop
jmp
xor
adc
mov
popa
hlt
shlb
dec
mov
xchg
fldt
daa
or
fldcw
xor
mov
lods
jg
das
inc
shrb
dec
movsb
lret
jae
aam
imul
clc
mov
mov
push
in
mov
jmp
mov
in
sbb
add
addb
stos
jo
lahf
scas
addl
xchg
stos
jge
jbe
pop
mov
pop
add
and
rorb
bound
shlb
pop
cmp
pop
adc
mov
cwtl
jo
test
lods
repnz
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
jmp
jne
mov
je
fsubrl
adc
sahf
xor
mov
mov
loop
inc
cmpsb
xchg
xchg
subb
outsl
cmp
mov
jae
nop
add
cmp
lods
mov
lock
insl
nop
pop
fs
test
mov
call
cli
adc
pop
jecxz
dec
shrl
add
jae
inc
mov
lods
icebp
shrb
ljmp
mov
push
add
push
and
mov
mov
cmc
adc
pop
mov
lea
add
pop
xchg
clc
test
mov
fcmovu
pushl
aad
inc
jnp
xchg
shrl
je,pt
in
outsl
lret
jecxz
stos
mov
mov
paddsb
fisubrl
push
push
adc
xor
out
adc
les
pop
test
loop
in
outsb
fmul
adc
sub
shl
ljmp
movl
aam
js
mov
xor
js
and
jnp
test
fnsave
or
fxch
cwtl
add
sub
rorl
popf
roll
loop
or
xor
negl
mov
es
lret
inc
ss
xor
aad
pop
pop
fwait
popa
fldl
xchg
and
outsl
mov
cmp
int3
inc
push
cmp
push
push
sti
xor
push
insl
xor
cmp
mov
mov
nop
sub
movsb
add
inc
out
into
loop
popa
cmp
ljmp
repz
mov
xchg
or
mov
insl
cmpsl
ret
ljmp
call
std
sbb
rcrb
add
and
dec
pop
push
push
fwait
ret
or
and
push
add
fwait
and
rorb
pop
sub
mov
or
loop
popa
subb
ret
mov
subl
mov
loopne
or
ror
mov
test
hlt
pusha
jecxz
mov
rorl
outsl
negb
inc
or
mov
inc
sbb
adc
das
jne
adc
or
pusha
dec
ret
jmp
addr16
clc
sbb
cmp
push
int3
rcrl
sbb
ret
popa
jne
dec
ret
lret
mov
outsl
out
mov
test
sbb
int
stc
ret
nop
xchg
ja
xchg
add
cli
sahf
jle
push
mov
jbe
cli
mov
imul
lea
fwait
stc
cld
jge
pop
cmp
adc
mov
dec
stos
and
insb
lds
into
imul
jbe
mov
jg
and
add
adc
inc
out
addl
cmp
vpcmpgtb
pushl
bound
iret
int
inc
pop
add
sbb
loopne
es
dec
and
gs
aas
xchg
int
push
lahf
lods
jg
xchg
stos
in
inc
cld
xchg
push
jle
and
daa
ja
pusha
cmc
lods
test
aad
ja
jecxz
push
xchg
pop
sahf
je
test
ret
push
mov
arpl
xor
dec
testl
cmp
or
int
mov
dec
imul
vandnps
jbe
mov
clc
lods
hlt
fisubl
outsb
test
inc
add
mov
or
mov
daa
cwtl
dec
mull
or
ret
sbb
inc
test
xor
add
inc
lods
mov
inc
mov
dec
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
jmp
pusha
and
push
xchg
jns
cmp
aas
sbb
mov
mov
call
daa
insb
dec
or
insl
push
out
shl
xchg
xor
or
xchg
push
push
testb
shll
push
int3
xlat
xor
jmp
fisttps
pop
jg
bound
lahf
jb
scas
clc
mov
cmpsb
or
in
pop
sbb
in
fwait
mov
roll
cltd
iret
or
xorb
popf
cmpsb
nop
mov
mov
mov
insb
dec
ret
rcll
sbb
mov
out
lret
mov
push
cmc
mov
mov
lcall
in
std
roll
cli
stos
jecxz
je
mov
jns
mov
mov
mov
cmp
xchg
mov
test
into
and
dec
sahf
sbbl
cmp
mov
xor
dec
mov
mov
adc
mov
cmp
mov
jmp
mov
sti
enter
sub
adc
push
sarb
inc
pop
and
mov
pop
loope
shrl
out
fldl
dec
and
cs
and
into
mov
push
in
add
xchg
test
push
mov
sbb
loopne
mov
repz
mov
add
movsb
and
fisubrs
add
pushf
and
cmp
push
clc
mov
jmp
or
xchg
test
xlat
negl
sti
mov
js
mov
mov
jle
jae
stos
sbb
icebp
jge
jle
xchg
icebp
adc
cmp
dec
mov
lcall
and
sub
rcrl
sub
or
pop
xor
sbb
loop
popf
ljmp
out
fidivs
imul
inc
stos
mov
ret
rcr
xchg
les
nop
jecxz
adc
imul
scas
inc
mov
pop
scas
out
loope
lods
rcrl
push
js
add
repz
sub
out
xchg
sub
lcall
jne
sub
dec
movsb
push
pop
outsl
jb
rcr
adc
cmp
pusha
leave
adc
mov
ja
mov
push
stos
movsb
mov
jnp
mov
lods
sub
call
or
test
pop
std
lods
cmp
andl
sub
adc
sbb
pop
lods
xor
test
sub
clc
popl
sbbb
jo
test
add
rorl
jb
dec
bound
movsl
push
cmp
mov
frstor
pushf
pop
cltd
test
add
sbb
in
bound
mov
jecxz
cwtl
rolb
or
mov
movsb
movsl
scas
adc
adcl
cli
xor
cltd
jae
out
sbb
sub
add
xchg
inc
insl
jae
popf
pop
dec
cmpxchg8b
inc
mov
fdivs
mov
out
push
es
je
loop
cmp
jb
negb
mov
fwait
push
sbb
cmpsl
xchg
mov
stos
xor
xchg
adc
ret
sahf
notl
sub
inc
pop
test
pop
jo
or
adc
fmuls
bound
repz
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
jmp
js
cld
jb
pop
dec
lods
push
sahf
lock
cmpsb
jecxz
es
mov
pop
jmp
dec
mov
sub
and
and
cmp
repz
in
lahf
enter
out
push
imul
je
jae
cmp
lahf
sub
jg
jg,pt
daa
shll
add
pop
out
mov
mov
cmc
loopne
mov
inc
push
or
mov
cvtdq2ps
and
ret
sahf
les
fldenv
fldt
repnz
mov
pop
mov
adc
mov
rol
outsb
sbb
xchg
clc
frstor
mov
push
mov
jmp
jo
push
cltd
mov
scas
mov
fst
mov
sub
or
setl
fcoml
adc
mov
cmc
ss
std
cmp
fists
fsubp
xchg
fbstp
arpl
sbb
sbb
inc
push
xchg
std
pop
jmp
js
sahf
rorb
aas
push
mov
inc
sub
fists
in
inc
out
aam
or
lahf
decl
and
loopne
rolb
lock
push
testl
mov
test
dec
movsb
nop
jbe
fs
popf
push
pop
cmp
rolb
es
bound
shl
jecxz
sahf
icebp
fdivs
inc
adc
lahf
mov
mov
or
mov
sub
add
popf
rcr
jl
stos
jnp
pop
ret
cltd
mov
fsubs
jp
push
xchg
cmpl
mov
jmp
or
add
mull
or
lret
js
jo
pop
loope
imull
minps
add
mov
pop
mov
xchg
push
stc
sbb
dec
filds
and
stos
ds
pop
mov
sbb
sbb
jg
dec
jp
pop
int
or
es
xchg
sbb
stc
orl
or
fs
xlat
jae
mov
jbe,pn
inc
sbb
mov
lahf
aad
sbb
rcrb
loopne
add
or
and
pusha
ds
push
dec
fcoms
sbb
jg
add
inc
pop
pop
adc
popa
mov
pusha
leave
out
sbbl
jg
and
and
jecxz
addr16
nop
xchg
out
push
sub
sahf
cmc
jl
lret
out
mov
dec
iret
push
out
and
jnp
adc
pop
out
mov
in
imul
push
xor
arpl
mov
mov
dec
loopne
mov
or
leave
es
gs
cld
movb
lahf
and
sub
inc
cwtl
ds
or
xor
call
mov
adc
mov
mov
dec
cmp
inc
bsf
loop
and
and
pop
xchg
add
inc
mov
pop
mov
inc
mov
push
cmp
sets
jne
push
les
inc
cmp
cmp
shll
mov
pop
xchg
push
in
out
dec
cmpsb
push
pop
and
aas
addr16
stos
dec
add
aas
imul
dec
lcall
and
movsb
bound
push
movsl
xchg
add
orl
daa
xchg
mov
mov
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
jmp
out
insb
and
or
data16
frstor
mov
mov
lahf
mov
gs
jb
sbb
dec
push
pop
out
mov
or
mov
jmp
xor
and
mov
mov
mov
mov
xchg
inc
out
loopne
or
jle
fstpt
xchg
mov
es
lret
iret
mov
fcoml
mov
sbb
jmp
pop
fistps
push
inc
jae
dec
mov
mov
jnp
jb
jno
mov
cli
mov
outsb
cmp
je
mov
insl
pop
ret
mov
push
push
sbb
fsts
mov
mov
xchg
lods
addr16
popf
cwtl
decb
or
add
insb
dec
push
adcl
icebp
sbb
clc
int
adc
or
or
mov
addl
pop
adc
cmp
xor
ja
test
cmpsb
add
push
insl
or
out
cmp
mov
mov
imul
orl
jecxz
mov
outsb
or
fs
fildl
out
dec
dec
xorl
js
cmpsl
sub
push
bound
outsl
add
sub
mov
xchg
fucomi
insb
cmp
xchg
xchg
lahf
lea
push
lock
out
mov
adc
stc
fcoms
mov
stos
cmp
or
fcmovnu
jge
jne
sub
mov
xchg
lret
xor
outsb
lock
cltd
mov
inc
sahf
mov
fsub
in
add
mov
call
or
test
and
sbb
push
fsubs
bnd
aaa
mov
push
jnp
or
push
jmp
jns
dec
push
jp
bound
and
or
shll
or
cmp
xor
sbb
and
xchg
imul
gs
cmc
sbb
inc
or
cmp
pop
aaa
add
or
daa
pop
adcl
shrb
jg
dec
xchg
rorl
mov
jl
out
orb
sub
adc
outsb
xor
mov
bound
repnz
lds
imul
jecxz
fildl
add
sbb
mov
mov
pop
inc
jge
insb
into
stc
aaa
aam
add
aas
fwait
int3
sti
dec
mov
je
or
nop
push
jmp
addr16
xchg
fsub
lock
lea
pop
int
inc
iret
sub
pop
fwait
inc
int
insb
push
lock
stc
push
imul
xchg
jle
xchg
push
shl
pop
bound
stc
adc
or
imul
bound
outsb
jb
push
shrl
pop
js
out
lcall
or
cmc
cmc
imul
push
mov
add
bnd
mov
xor
fdiv
cmp
shrl
lods
xchg
pop
mov
repz
imul
mov
popa
sbb
mov
add
pop
nop
sbb
std
push
or
cmp
pop
mov
hlt
mov
fcoml
xchg
sahf
pop
and
hlt
imul
outsl
mov
leave
or
push
jge
rcr
xor
addr16
pop
in
xchg
dec
jnp
mov
in
lock
jb
ss
xchg
stc
iret
cmp
stc
inc
add
movsl
push
mov
dec
add
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
jmp
sub
cmp
lods
sbb
leave
xor
mov
push
mov
fndisi(8087
add
xor
push
cltd
push
mov
es
cwtl
pop
xlat
jl
divl
inc
xchg
out
es
cs
jb
outsl
pop
sahf
movsb
cmpsl
jo
sub
insb
cwtl
xchg
sub
lods
je
inc
inc
mov
ficomps
je
mov
cmp
and
dec
movups
lods
adc
clc
loope
push
xor
xchg
sahf
data16
mov
pusha
pop
addb
repnz
mov
movsb
inc
std
mov
push
jl
lahf
jae
push
add
fcoml
inc
cld
or
mov
sub
or
rol
ss
out
lret
add
popf
xor
loopne
lcall
push
fistl
jbe
jnp
aad
pop
or
leave
arpl
sbb
ja
nop
adc
pop
js
lret
xor
xor
cltd
adc
mov
jge
mov
adc
sbb
mov
sub
or
fnstenv
mov
sbb
push
pop
mov
add
xor
lret
ja
dec
scas
sbb
cltd
inc
fdivrl
pop
or
jbe
in
loope
pop
xlat
dec
mov
into
je
mov
mov
lret
scas
pop
xlat
imul
dec
jp
mov
adc
mov
sub
shll
je
loop
cmp
testl
xchg
subb
mov
iret
imul
inc
test
in
int3
lea
test
ljmp
leave
fidivrl
iret
popa
cmp
arpl
das
sub
mov
imul
inc
rcrb
xchg
arpl
mov
sbb
sbb
popa
fildll
pop
call
sbb
out
jl
aad
adc
aam
lret
sbb
stos
lock
mov
ret
push
xor
push
mov
mov
adc
sub
addr16
in
adc
jg
insb
pop
sti
pusha
rcll
mov
pop
xchg
ret
fistpll
xor
push
gs
xor
shrl
out
icebp
mov
scas
inc
addr16
adc
mov
flds
jg
xchg
in
sbbb
lret
fmul
or
push
xchg
fcoms
cli
insb
inc
jb
fiadds
dec
dec
sti
jg
loope
pop
adc
push
lods
decb
mov
xor
mov
js
inc
xor
xlat
sub
jno
fmull
lcall
in
dec
add
xchg
call
cmp
fcmovu
icebp
popf
jl
scas
rcrb
add
fcomp
leave
pop
movsl
lcall
xchg
scas
push
xchg
and
data16
xor
jo
xchg
popa
movsl
mov
cld
and
xor
in
nop
sbbb
out
outsb
push
sbb
imul
sub
xchg
hlt
jno
xchg
dec
adcl
mov
fimull
daa
sub
xchg
xor
popa
stos
pop
lret
xor
movsl
mov
add
ds
jge
loop
mov
push
push
nop
sbb
rcrb
lcall
xor
insl
repz
call
addb
lods
mov
xor
pop
out
in
rolb
in
in
push
stos
dec
add
mov
fcmovnbe
or
adc
out
and
aam
dec
or
xor
lret
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
jmp
pop
icebp
lds
ror
fucomp
and
mov
test
push
ret
xor
mov
dec
and
xor
jae
call
jmp
mov
mov
jp
fcomi
adc
je
or
xor
add
sbb
dec
movsb
insb
daa
cli
adc
mov
mov
loop
xor
pop
int
daa
pop
fldl
mov
in
sbb
test
push
jne
xor
sub
inc
push
in
adc
roll
mov
hlt
mov
or
lret
push
stos
xor
sub
cmpsl
rcr
scas
mov
xchg
andl
movsl
dec
icebp
xchg
data16
dec
add
inc
dec
and
pop
aas
out
or
add
push
adc
insl
mov
xchg
add
shll
push
inc
outsb
lahf
fbstp
inc
xor
push
push
mov
data16
rclb
mov
jno
out
sbb
cmpsb
mov
fnstenv
lea
jp
mov
stos
and
mov
scas
shr
lcall
push
cmp
push
lock
or
push
fucom
pop
jns
fdivr
adc
test
mulb
shrb
pop
in
mov
jmp
mov
jae
pop
inc
inc
push
outsl
inc
mov
into
dec
addr16
add
out
in
or
cmp
loop
mov
cmpb
mov
pop
imull
shlb
loope
cmp
rcr
adc
cmc
dec
xor
and
lcall
dec
std
pusha
cltd
sbb
fs
or
fwait
mov
popa
daa
mov
dec
sub
sbb
rorb
scas
adc
cli
jg
adc
repz
mov
push
ss
inc
cmp
dec
inc
inc
or
hlt
cli
or
sub
adc
mov
pop
push
aas
popf
std
outsb
add
xchg
mov
les
mov
or
pop
mov
cmp
fld
mov
push
pushl
xchg
notl
adc
mov
test
mov
mov
add
push
divl
or
inc
xchg
mov
add
pop
cmp
mov
les
fstpt
sub
fstpt
jns
xchg
in
or
inc
clc
int3
inc
cmc
push
inc
or
xchg
jmp
sti
scas
xor
push
mov
adc
es
cwtl
shll
dec
jb
cld
mov
scas
jecxz
cmpsl
inc
testl
push
mov
sub
and
sub
cmp
jbe
loop
sub
xchg
scas
xchg
das
loopne
mov
push
stos
in
scas
push
cli
iret
ds
inc
out
jo
cmp
loope
loopne
sub
xor
add
xchg
cmp
inc
mov
xorb
xchg
shrb
mov
shll
push
mov
nop
jg
cmp
jl
push
add
pop
sbb
aaa
sbb
mov
gs
sahf
sub
push
sub
xchg
inc
das
stos
in
mov
xchg
push
pop
out
imul
add
jp
mov
mov
call
cltd
fcmovb
in
xchg
pop
test
arpl
ds
les
enter
adc
mov
add
mov
adc
add
pop
adc
pop
mov
jmp
pop
sub
shrb
mov
jecxz
inc
mov
mov
adc
loopne
into
imul
fsubl
xor
stos
arpl
lcall
mov
insl
adc
sbb
mov
xor
sub
adc
xchg
and
inc
xor
mov
aam
or
and
mov
cld
inc
cmp
adc
push
lahf
sub
xlat
clc
mov
out
dec
enter
sti
cmp
fistps
adc
xor
mov
insl
sbb
jo
adcb
xor
arpl
xor
lea
sub
out
popa
pop
icebp
sub
mov
pop
mov
in
push
sub
out
adc
sbbl
aam
int
sub
repz
add
dec
push
ja
lods
js
insl
adc
int
outsl
fwait
adc
sub
sbb
lods
xor
int
addr16
lods
dec
jp
jle
das
push
pop
ds
leave
xchg
push
arpl
mov
jbe
out
cmpsb
int3
fstpt
xchg
add
inc
fs
dec
or
cmp
mov
outsl
imul
jecxz
loopne
arpl
sub
sahf
test
push
pop
mov
mov
clc
fbld
mov
loope
pop
dec
scas
rol
lea
cmpb
lods
jecxz
cmp
mov
adc
push
xor
inc
inc
fbstp
sbb
jge
push
jno
jnp
aam
mov
pop
cmp
or
sahf
pop
aaa
test
idiv
jae
imul
xlat
lret
jp
pop
xchg
pushf
repnz
nop
mov
and
scas
mov
dec
sahf
mov
in
fwait
mov
mov
mov
ja
mov
push
push
lret
inc
lcall
scas
sub
ret
arpl
mov
adc
mov
mov
scas
inc
xchg
jmp
add
ja
repz
fs
ljmp
fbld
xor
xor
testl
popa
xor
or
inc
xor
sbb
rorl
lret
inc
out
add
sub
mov
dec
call
das
jmp
les
dec
or
or
jae
pop
outsl
mov
repnz
fcoms
addr16
inc
jo
jge
fwait
cmp
cmp
pop
jge
repz
xor
out
insl
push
xchg
sub
xchg
mov
ljmp
dec
pop
adc
xchg
fdivr
sub
xor
sbb
jecxz
or
pop
xchg
mov
mov
and
lods
xor
pusha
add
stos
movsb
ret
leave
loope
jecxz
adc
inc
push
and
cmpsl
adc
xlat
iret
push
lds
mov
outsb
cmp
and
mov
adc
cmp
stos
jmp
ja
sub
or
xor
cmp
cmp
dec
sub
sti
push
dec
hlt
fucomi
and
jg
add
xchg
fimull
outsl
aam
mov
mov
outsl
loop
ret
mov
mov
jl
scas
jo
pushf
gs
hlt
and
cmp
xor
filds
jns
flds
stos
mov
arpl
pop
enter
xchg
and
push
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jo
fldl2e
cmp
jo
out
mov
dec
mov
mov
jl
mov
inc
pop
push
int3
shrb
int
pop
lcall
dec
xchg
cmp
and
jl
fnstsw
adc
pop
and
or
out
fisubrs
popa
imul
sbb
aad
out
in
pop
fstpl
ror
ljmp
add
cmpsb
repz
cli
sub
stos
mov
mov
dec
adc
fldcw
clc
sub
roll
in
pop
jp
add
inc
nop
mov
mov
ds
jb
dec
lods
lods
or
rorl
outsl
or
mov
jbe
in
jae
jo
aad
leave
jb
ret
ss
add
lcall
test
out
add
jne
mov
sub
ljmp
ljmp
push
out
mov
and
cmp
mov
adc
das
adc
xor
jle
dec
cltd
sub
out
shl
out
ja
sub
mov
push
shlb
inc
jl
jmp
mov
nop
dec
pop
cmp
orl
and
fcomps
xchg
pop
xor
cld
xor
filds
in
dec
inc
cmpsb
jnp
sbb
repz
xor
adc
test
dec
fwait
inc
jmp
mov
sha256msg2
gs
and
cwtl
mov
add
incl
inc
pop
jb
aaa
sub
mov
sbb
rorb
cld
and
sarl
out
sbb
push
pusha
dec
imul
mov
or
xchg
push
shl
add
inc
cmpsl
mov
dec
aaa
or
adc
mov
pusha
cmp
pop
xchg
imul
cmc
mov
fisubrl
nop
mov
mov
test
sbb
xor
push
addr16
jl
mov
scas
mov
jno
sbb
xor
pusha
sub
mov
push
pop
sub
les
out
mov
dec
pop
fmull
out
add
and
ds
cmovno
out
inc
clc
add
add
movl
movl
jmp
pop
daa
fcompl
mov
aad
scas
jecxz
sahf
or
mov
dec
bound
mov
mov
enter
enter
lods
mov
or
into
cwtl
adc
lods
hlt
lcall
add
lret
pop
shlb
cmp
or
mov
push
mov
xchg
xchg
arpl
adc
add
aam
xor
js
cmp
mov
test
stos
dec
xor
int
and
push
jne
rcrl
inc
scas
in
xor
ss
sbb
fistps
or
xor
fwait
inc
out
pop
inc
out
hlt
imul
mov
repz
test
sub
int
jbe
sub
cmp
rcr
imul
outsb
and
clc
xchg
and
in
rol
or
adc
es
push
mov
pushf
xchg
sub
push
ret
insb
stos
imul
jae
sbb
inc
lret
test
iret
xchg
lds
lahf
push
xchg
jns
adc
pop
subb
dec
mov
mov
dec
xor
roll
pop
pop
mov
mov
xchg
rorl
test
push
aam
sub
sub
fiaddl
cmc
mov
movsb
mov
loopne
push
xor
pop
cmp
sub
call
mov
aam
jns
jns
cmp
inc
xchg
push
and
sti
cmp
test
mov
and
ret
int
popa
mov
mov
cs
stc
cmp
shll
add
test
es
mov
xchg
sub
sarb
test
js
imul
lahf
pusha
push
inc
stos
ret
mov
aaa
clc
pusha
adcb
sub
outsl
xor
xchg
arpl
sbb
aad
mov
es
inc
rcrb
shrb
movsb
pop
or
ret
clc
jp
xchg
adc
adc
sub
jp
lds
lcall
pop
cmp
lcall
mov
test
lahf
mov
fcoms
cmp
mov
mov
pop
lahf
ds
rorl
xchg
jne
mov
js
imul
and
cmp
inc
add
inc
int3
mov
add
inc
rcr
jg
add
inc
aam
sub
add
inc
fmuls
sldt
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
jmp
test
or
lods
mov
fstpl
jecxz
push
mov
mov
rol
xchg
insb
and
addr16
xor
xchg
xchg
sbb
push
clc
cmp
mov
sbb
loope
cmp
mul
push
out
push
imul
add
adc
mov
dec
je
stos
jmp
adc
test
hlt
andb
xor
xor
mov
or
mov
lea
scas
pop
dec
incl
sbb
les
in
mov
loopne
iret
xor
dec
mov
mov
addb
push
jecxz,pn
adc
loop
inc
ret
cmp
pop
inc
pop
lret
push
leave
das
fs
cmp
pop
in
insl
add
loop
xlat
fwait
and
scas
cltd
mov
cmpsb
jecxz
or
pop
cltd
fists
pop
mov
push
adc
insb
mov
adc
cmpsl
mov
mov
jmp
ja
and
inc
xchg
sub
jnp
das
adc
xchg
add
stos
xor
mov
jne
or
mov
aam
add
xor
sbb
and
inc
loopne
adc
dec
and
lea
sub
lea
les
xor
gs
rol
test
rcl
int
add
test
ljmp
stc
mov
negb
xchg
mov
sahf
pop
fwait
mov
fxch
or
clc
leave
out
ljmp
and
test
xchg
ret
lcall
xor
cmp
add
imul
in
lahf
cltd
push
loope
ret
mov
call
mov
inc
xchg
in
dec
hlt
inc
int3
movsb
in
jecxz
lret
push
lcall
adc
mov
dec
rclb
in
decl
or
sahf
push
push
loope
outsb
mov
mov
lea
adc
cmc
stos
int3
and
or
cmpsl
jns
shlb
xor
inc
incl
jbe
mov
mov
test
cwtl
dec
int3
sbbl
and
scas
sbbb
lcall
push
push
call
icebp
sbb
sahf
inc
cli
cmp
inc
jecxz
or
xchg
and
jnp
aam
das
or
gs
mov
jne
inc
in
add
or
sub
pop
pop
push
dec
pop
negb
xchg
loopne
pop
inc
jge
xchg
inc
xor
pop
mov
jnp
gs
jmp
ret
je
dec
cld
les
clc
dec
int3
inc
icebp
jle
repz
out
inc
lahf
push
popf
mov
into
push
stos
hlt
pusha
jmp
les
aaa
push
inc
push
add
lret
loopne
fcoms
pop
popf
inc
jno
iret
arpl
dec
fdivs
rcll
bound
or
repnz
hlt
iret
sub
test
cmc
ds
inc
shl
mov
cmp
orb
xchg
push
loope
jp
lock
popf
stc
insb
add
loope
xor
popa
sub
idivb
sbb
dec
movsl
push
cmp
pop
sbb
cmp
jmp
ret
and
fstl
mov
add
xlat
xchg
push
lcall
fists
movsb
scas
pop
mov
mov
cmp
mov
out
lret
idivl
mov
insl
ret
push
mov
loopne
adc
fwait
dec
mov
or
lods
sahf
jp
inc
jl
inc
jae
cmp
dec
jb
lret
mov
or
and
test
icebp
mov
cld
sub
mov
cmp
out
push
pop
dec
orl
stc
ret
scas
and
jge
test
js
mov
int3
cld
mov
xlat
pop
pop
jo
scas
mov
mov
sbb
sbb
pop
rcrb
xchg
adc
or
inc
xchg
pusha
test
iret
scas
push
scas
mov
add
xchg
adc
nop
sbb
das
mov
les
jmp
stc
pushf
aam
in
mov
xchg
jne
iret
mov
xchg
and
aaa
aaa
aad
push
test
sub
sub
sub
jns
and
jne
xchg
pusha
pop
je
mov
xchg
arpl
shll
loopne
test
imul
pop
sti
jne
pop
notl
arpl
shl
dec
imul
inc
xor
dec
push
and
xor
mov
loope
sub
icebp
xchg
fldenv
push
stos
push
pop
out
mov
lods
adc
ficoml
ja
fisubrs
dec
push
stos
aaa
pop
pop
mov
out
in
call
push
xchg
mov
pop
or
or
xor
aas
je
push
pop
imul
dec
push
out
xchg
insl
in
shll
or
pop
adc
xor
into
stc
fstpt
cmpsl
jmp
mov
mov
pop
inc
mov
nop
insb
ss
in
pop
xchg
ss
push
push
insl
jle
xchg
insl
xchg
popa
lods
mov
push
xchg
cmp
mov
xchg
adc
dec
lcall
fsts
or
push
shrb
push
mov
pusha
movsb
push
adc
push
js
mov
or
or
inc
arpl
xchg
je
jae
lock
xor
mov
sbb
aam
or
xchg
stc
fidivrl
adc
jp
aad
fisttpl
enter
push
sub
pop
not
je
out
aas
sarl
mov
push
add
or
dec
add
fcompl
push
ds
fsubp
dec
cmp
and
mov
add
in
or
add
cmp
mov
push
mov
cld
or
add
in
or
cmpsb
les
movsl
or
testb
dec
loopne
cmp
lock
push
or
int
xor
sbb
fwait
jo
push
outsl
push
int
call
add
cmp
jno
jge
pop
mov
sbb
adc
or
adc
je
push
lea
mov
add
or
mov
je
ljmp
inc
pop
fcoms
inc
orl
pop
pop
cmc
push
fsub
pop
fsubrl
cmp
sub
scas
dec
lcall
or
sub
adc
stos
gs
adc
inc
and
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xchg
mov
push
xor
push
ret
xlat
jg
nop
mov
mov
lock
pop
ret
or
push
out
inc
and
sub
lret
mov
in
xlat
push
adc
xchg
lods
adc
jge
imulb
ljmp
xchg
cmc
lcall
fsubrs
dec
daa
jg
push
scas
ja
xor
or
sub
mov
push
cmp
mov
decb
mov
insb
rcr
into
notb
cmc
test
jne
rcr
mov
cmp
sub
bound
push
in
ror
sbb
cmc
mov
jg
test
jns
pop
outsl
sti
xor
nop
pop
enter
fstpl
out
xor
push
call
jo
in
sbb
test
jle
mov
int
inc
push
pop
popl
pop
cmp
mov
mov
xor
or
int3
xchg
loopne
test
sbbb
and
xor
pop
imul
xlat
add
adc
jae
push
sbb
adc
nop
test
imul
lahf
pop
adc
mov
mov
add
pop
outsl
insl
xor
and
stos
fcoms
inc
sbb
jbe
out
pop
out
mov
addr16
xchg
or
insl
mov
pop
mov
add
sub
mov
repnz
sub
xchg
imul
fldenv
or
mov
pop
xor
cmp
mov
sub
popf
push
mov
pop
xchg
aas
cmp
or
push
cmp
or
xchg
add
cmpsb
mov
sub
or
lret
cmp
xchg
fmul
sti
jge
jle,pn
test
pop
mov
scas
aam
popf
shll
push
mov
dec
dec
in
lahf
xor
jl
cli
cmp
cwtl
xchg
idivl
xchg
cmp
fs
xchg
jg
lods
jno
sbb
out
dec
push
stos
and
xchg
adc
enter
lds
jg
je
stos
inc
mov
pop
xchg
stos
shrl
sbb
ljmp
pop
jp
dec
roll
lret
xchg
adc
inc
in
insb
scas
jnp
jp
mov
les
mov
dec
inc
cmp
outsl
and
lds
push
pop
fcompl
ja
cmp
sub
shll
popf
jbe
fisubrl
pop
aaa
adc
call
out
js
add
pop
aam
add
jnp
mov
loop
testl
hlt
bound
dec
into
nop
adcl
mov
mov
jb
dec
add
push
pop
xor
jl
mov
sub
test
stos
pop
xlat
push
scas
jo
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
jmp
icebp
orl
nop
cmp
mov
ret
push
icebp
cmp
inc
add
pop
fwait
aas
push
mov
jb
hlt
jne
jno
inc
mov
xchg
mov
pop
sahf
mov
and
xchg
mov
leave
mov
in
arpl
push
jae
add
or
pop
pop
xchg
repz
shr
jmp
in
test
dec
jl
mov
cmp
xor
sti
loop
jne
aam
xor
sti
cltd
adc
sbb
or
jmp
xor
sbb
rol
mov
data16
fcoml
in
scas
hlt
xchg
xchg
add
inc
and
out
lds
mov
sbb
repz
sub
in
push
mov
in
aad
dec
and
mov
ficomps
pushf
rcrl
cli
out
cmp
sbb
insb
xchg
mov
xchg
test
roll
repz
inc
lea
add
fnstcw
jg
mov
dec
mov
adc
push
test
xor
addr16
fmull
and
mov
sbb
js
xchg
inc
adc
dec
adc
push
test
pop
aam
cld
fwait
shrl
jmp
fists
push
mov
mov
aas
sub
das
mov
cmp
fcomp
jp
mov
popa
stc
push
andb
mov
movsl
filds
arpl
ja
jecxz
shrl
pop
sub
cmpsl
inc
add
push
or
xor
xor
inc
mov
dec
dec
push
ffreep
imul
fxch
and
popf
push
inc
out
mov
std
dec
pop
pop
test
xchg
popa
loope
adc
ljmp
mov
jo
sub
sar
xchg
add
jle
lret
pop
nop
test
lret
ljmp
add
fidivrl
mov
lcall
sbb
and
mov
adc
pop
sbb
sbb
xor
mov
jb
xchg
jge
ret
sub
out
ja
enter
jo
mov
lods
dec
lock
scas
in
jecxz
adc
jbe
hlt
xchg
mov
inc
jo
test
std
adc
xor
imul
or
loopne
sbb
xchg
fcom
std
mov
out
fwait
adc
push
mov
lea
fcmovnbe
jbe
xchg
scas
xchg
ret
inc
xor
imul
dec
shll
call
cmpl
aaa
pop
adc
add
fimull
push
and
stc
mov
into
mov
fstp
sub
xchg
imulb
pusha
js
in
or
xor
jecxz
xor
repnz
loopne
mov
mov
jno
iret
clc
pop
dec
jne
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
push
jmp
push
jnp
jl
mov
nop
lcall
mov
out
push
mov
sub
pop
lea
and
test
push
shrl
mull
xor
mov
push
pop
daa
add
lret
xchg
call
out
dec
pop
jecxz
jecxz
jmp
std
cmc
aam
add
sub
push
inc
andb
sbb
push
mov
or
mov
movsl
adc
fisubrs
popf
fiaddl
jbe
push
pusha
jmp
cmp
jmp
xchg
xchg
enter
and
xorb
bound
add
sbb
mov
out
pop
xchg
cmp
stc
popf
ja
popf
pop
jl
fdivrl
aaa
sbb
mov
es
lods
ffree
jle
imul
cmp
lods
cmc
xor
jmp
dec
inc
addr16
push
data16
mov
iret
pushw
cmp
dec
cmp
rcrl
addl
jecxz
push
lea
push
pop
aaa
repnz
std
push
pop
pop
imul
mov
das
dec
mov
add
push
int
xlat
and
xlat
xchg
push
insl
xchg
sbb
xchg
scas
inc
sub
bound
inc
push
adc
mov
sbb
ret
in
imul
cld
mov
mov
das
pop
and
in
cltd
mov
cmp
push
sbbb
add
jne
and
adc
das
nop
push
mov
sahf
mov
jo
out
mov
xor
lret
xor
add
outsl
mov
gs
push
xor
mov
sub
mov
sbb
dec
jge
xchg
mov
sbb
jl
ss
loope
out
aas
cmp
xchg
push
roll
loopne
cmpsb
jecxz
clc
sub
mull
lods
adc
pop
sbb
push
sbb
mov
lods
mov
mov
int
les
test
fdivrl
xchg
loope
stc
inc
xlat
add
jb
icebp
cmp
cmpsl
mov
cmp
int
push
das
adc
xorb
sub
and
fmull
aam
sub
stos
mov
xchg
sbbl
adcb
mov
push
aam
add
lcall
pop
xor
mov
insb
mov
pop
jle
nop
dec
aam
dec
dec
out
adc
pop
cmpb
adc
enter
pop
xchg
test
add
or
xlat
int3
insl
imul
test
loopne
in
cmp
aas
jge
test
std
jp
mov
mov
xor
movsb
push
xor
in
aam
xlat
dec
scas
mov
in
cmp
scas
stos
movsl
test
sbb
and
fisttpl
and
idivl
adc
imul
movsb
mov
xchg
or
push
or
adc
xor
mov
add
mov
and
shrd
xor
shr
mov
cmpl
not
mov
movl
movl
jmp
mov
movl
cmpl
jg
push
push
call
and
xor
add
and
mov
and
adc
add
movl
mov
cmpl
movl
not
movl
mov
jmp
movl
cmpl
jne
push
pushl
call
and
negl
not
sbb
sub
or
xor
or
xor
mov
sub
xor
or
mov
cmpl
not
mov
mov
mov
jmp
mov
cmpl
jbe
push
call
and
inc
adc
mov
or
mov
mov
shl
mov
shrd
xor
addl
shr
cmpl
movl
mov
jmp
movzwl
cmpl
jl
pushl
call
sub
xor
or
mov
sub
sub
inc
inc
orl
adc
sbb
cmpl
movl
mov
jmp
mov
movl
cmpl
jae
push
pushl
call
xor
or
mov
sub
add
xor
add
sub
neg
sub
mov
cmpl
movzbl
mov
jmp
movl
movl
cmpl
jbe
push
pushl
push
pushl
pushl
call
and
and
sbb
inc
addl
mov
xor
add
mov
sub
or
xor
xor
or
adc
mov
sub
mov
mov
mov
mov
mov
xor
mov
mov
mov
sub
mov
mov
xor
mov
movzbl
sbb
shl
mov
adc
xor
and
shld
jmp
scas
cltd
and
sub
push
mov
sub
pop
jb
mov
jbe
je
dec
pop
icebp
into
loop
cmp
sub
jno
ror
jae
xchg
xchg
mov
cli
and
mov
cld
dec
stc
add
popf
movsb
iret
test
into
xor
jl
jge
lret
xchg
xor
sbb
xchg
ret
jecxz
cld
lcall
mov
repnz
in
ret
inc
loopne
inc
add
xchg
dec
int
cmpsb
sahf
scas
je
popa
out
pop
stc
jg
cli
cli
sub
xchg
adc
push
nop
fwait
ss
xor
test
adc
fstl
push
jmp
daa
out
pop
xchg
xchg
adc
sbb
flds
mov
push
lods
push
inc
loopne
lret
repnz
or
jl,pn
and
aas
pop
cmpsb
jo
jns
mov
loope
sub
dec
incb
and
cmp
movsl
mov
lods
jmp
mov
inc
adc
xchg
insl
and
jg
jle
out
push
cmp
cmp
jnp
mov
jp
test
shrl
inc
sti
cmpsl
push
in
cltd
sbb
dec
sbb
iret
adc
sub
push
insb
popa
inc
adc
xchg
inc
xchg
js
lahf
mov
lock
sub
mov
adc
sti
imul
pop
sbb
xor
add
rol
jmp
lea
sbb
inc
mov
jne
cmp
sbb
mov
sub
lock
or
ljmp
xchg
push
pop
fwait
add
faddl
popf
mov
sub
pop
les
xrelease
lcall
mov
dec
icebp
test
cwtl
or
push
leave
fsubr
mov
and
subb
fs
push
mov
fimuls
or
mov
nop
xor
add
js
mov
in
xchg
sti
add
mov
mov
aas
lock
mov
sbb
ljmp
xchg
or
cmp
push
shr
leave
loope
loope
outsb
sub
inc
add
fcompl
nop
cmp
repz
inc
fnstcw
jae
fisttpll
imul
cmp
inc
dec
pop
int3
ror
xor
adc
repz
xor
or
pop
aad
add
movsl
xor
mov
daa
out
mov
sbb
push
in
fs
and
pop
repnz
popa
xchg
and
mov
js
push
mov
mov
outsl
test
pop
cltd
add
and
xchg
repz
push
ja
shll
xor
stos
xor
lods
pop
iret
test
loop
insl
fisubrl
in
andnps
lret
sbb
faddp
test
aam
insl
jae
mov
lret
push
cmpsl
jns
stc
or
movl
jns
mov
mov
movl
mov
xor
xorl
xor
movl
movl
movl
movl
mov
movl
cmp
jne
cmp
je
mov
sub
mov
xor
shld
xorl
shl
addl
xor
cmpl
not
not
jmp
mov
not
cmpl
je
push
pushl
call
mov
xor
mov
sub
inc
adc
xor
xor
adc
mov
xor
mov
movl
cmp
movl
jne
cmp
movl
je
add
mov
negl
mov
push
and
pop
or
jmp
imul
and
mov
mov
pop
lret
in
mov
jo
aad
lods
jo
xor
ds
adc
jns
out
push
mov
das
mov
and
fwait
xor
sarl
push
pop
mov
jg
out
sub
popf
daa
adc
sbb
dec
aad
popa
mov
inc
daa
inc
scas
lret
in
outsl
xchg
mov
push
xor
jae
sub
and
adc
loopne
inc
psllq
and
push
lahf
jecxz
orl
mov
fstpt
add
sbb
push
ja
cli
jno
inc
mov
or
in
push
mov
frstor
lret
ljmp
iret
jae
and
popl
mov
iret
cmpsb
and
leave
jno
scas
xor
mov
cs
testl
test
mov
sbb
addr16
cltd
sahf
jg
dec
add
fsubrs
mov
pop
jmp
xorl
int
mov
hlt
sub
add
rolb
xchg
lds
push
or
mov
out
imulb
mov
iret
cmp
sbb
xchg
add
fwait
cld
push
and
pop
or
jle
xor
out
inc
inc
cld
aad
mov
rcrb
sub
ja
push
subb
jle
sbb
and
inc
pop
adc
divl
or
inc
jb
repz
and
rcrl
mov
mov
jae
in
jge
cltd
les
mov
lahf
xchg
fidivrs
pop
xchg
pop
loope
mov
push
es
lods
loopew
mov
sbb
sar
sub
stc
dec
mov
mov
std
mov
mov
cmc
ds
dec
test
jbe
mov
adc
addr16
mov
out
add
scas
push
inc
repnz
jmp
jae
lcall
push
mov
leave
test
inc
and
imul
ret
ret
sbb
mov
mov
notb
inc
aad
sahf
dec
outsb
cmpsb
push
pop
gs
push
orl
mov
dec
imul
push
loop
dec
adc
inc
push
cli
and
mov
divl
out
lds
and
dec
adcl
pop
pop
xor
iret
cmp
ss
int3
les
xchg
int
sbb
jle
gs
js
jne
insb
pop
call
into
aad
jae
push
je
adc
jl
movsb
lret
xchg
inc
dec
mov
and
jo
add
push
add
scas
ljmp
pop
fst
mov
xor
xor
add
sub
shl
xorl
mov
xor
shr
jmp
jmp
mov
push
dec
cltd
xchg
les
xchg
or
dec
ret
lds
andb
repz
es
xor
in
mov
mov
jnp
enter
xchg
adc
movsl
xlat
icebp
movsb
out
add
push
addr16
add
push
push
stc
lds
inc
lahf
lret
or
ljmp
fidivrl
adc
jp
jl
push
jo
lock
mov
mov
lcall
out
daa
xor
and
cmp
popf
icebp
test
jnp
loope
and
jg
imul
or
xor
cmp
sbb
jne
lret
fwait
xor
jae
push
mov
subl
inc
shlb
fsubrl
mov
jns
mov
clc
mov
cmp
adc
push
dec
inc
jb
inc
sub
std
test
xchg
pop
ljmp
pushf
test
scas
test
movsl
pusha
lea
cmp
xchg
push
xor
andl
dec
pushf
or
shll
or
inc
ficoml
pop
push
fstl
jo
aas
sub
lds
mov
call
cmp
cwtl
sub
fdivl
loope
ds
fs
and
dec
jg
xchg
dec
outsb
test
mov
out
out
mov
test
sbb
scas
push
push
rcrl
pcmpgtd
scas
int
lahf
lret
rcll
jl
flds
leave
jae
xchg
fs
add
into
leave
sbb
adc
mov
dec
lret
inc
test
adc
inc
mov
sbb
loope
and
mov
dec
adc
mov
adc
push
pop
xchg
movb
mov
lods
mov
mov
push
popa
repz
xchg
jbe
test
push
sahf
arpl
and
addl
xchg
pushf
dec
lock
jne
lcall
xchg
mov
and
mov
sub
adc
and
repnz
outsb
xchg
mov
pop
pop
loopne
mov
inc
mov
inc
inc
addr16
popf
movsb
cmp
sbb
sub
dec
xchg
test
leave
pusha
xchg
nop
fdivrs
mov
or
pop
bound
cmp
ja
clc
pop
ret
cmp
dec
iret
jbe
test
ficomps
cmp
mov
sbb
xor
loop
out
adc
xchg
xor
scas
jae
jns
xorb
xchg
inc
dec
fnstcw
lods
mov
add
sbb
adcb
xor
adc
push
mov
jae
add
inc
dec
push
ret
pop
adc
sub
roll
add
add
or
add
mov
or
add
add
add
cmp
add
add
ja
push
push
pushl
push
push
pushl
call
adcl
or
mov
xor
addl
xorl
cmpl
mov
movl
movl
jmp
mov
cmpl
jl
pushl
pushl
pushl
call
adc
mov
and
and
mov
xor
mov
dec
mov
cmpl
movl
mov
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
push
call
movzbl
and
sbb
and
mov
add
andl
mov
adcl
mov
cmpl
movl
mov
jmp
movl
movl
cmpl
jbe
push
push
push
call
and
mov
mov
add
or
sbbl
sbb
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
cmpl
jle
push
call
addl
sub
mov
xor
mov
inc
movzbl
sub
mov
cmpl
not
movl
jmp
movl
cmpl
jle
push
push
call
sbb
xor
and
incl
addl
or
mov
mov
push
subl
pop
sbbl
sub
cmpl
mov
not
movzbl
mov
jmp
movl
cmpl
je
push
push
call
orl
movl
sub
or
neg
mov
add
mov
lea
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
jmp
in
dec
ret
in
fs
pop
push
loopne
xchg
in
xchg
mov
out
in
inc
push
cli
fidivrs
adc
in
rorl
jle
add
lret
xchg
repnz
inc
mov
pxor
cli
xchg
ret
and
mov
inc
imul
in
aaa
or
inc
cli
and
fwait
ljmp
add
cmp
jb
daa
notl
mov
in
push
mov
pushf
rcrl
jo
test
gs
sbb
xor
push
test
pop
mov
cli
nop
jnp
and
nop
fstpl
inc
sbb
or
inc
xchg
mov
imul
xor
sti
xchg
mov
int
xchg
mov
push
jb
inc
lods
inc
mov
jmp
sbb
dec
stos
hlt
aas
lea
add
cs
mov
lock
rorb
pop
xor
mov
mov
add
pusha
cmp
je
cmpsb
add
in
push
gs
pop
and
pop
scas
pop
mov
push
mov
sub
push
sub
pop
lods
repz
xor
aad
sbbl
enter
jle
fs
inc
mov
imul
adc
mov
loopne
fidivrl
outsl
aaa
mov
cmp
pop
repnz
lock
movsl
fwait
sub
adc
out
cmp
cmpsb
in
popa
jp
stc
cmp
dec
mov
adc
into
sahf
aad
mov
add
lcall
leave
pop
cli
or
mov
sub
ja
ss
popf
cli
dec
mov
xor
jge
xchg
nop
mov
test
movsl
push
pusha
out
mov
mov
jmp
test
insl
loope
pop
int3
movsl
inc
xor
add
movb
lods
jb
adc
mov
cmp
loopne
imul
scas
sbb
sub
xlat
imul
add
pop
pop
inc
add
jle
in
cwtl
ja
repz
cmc
pusha
jns
sbb
pop
test
nop
mov
jl
or
test
cld
ljmp
cs
mov
add
mov
ret
imul
fs
sub
push
jecxz
push
push
adc
mov
lods
sbb
push
jge
sub
out
fimuls
clc
iret
inc
dec
mov
xchg
dec
mov
scas
pop
stos
mov
cmp
xor
into
pop
call
imul
xor
arpl
cmp
imul
movsb
inc
shrl
mov
jb
mov
jnp
ds
je
pop
xchg
cmp
inc
cmp
arpl
sbb
cmp
cmp
sbb
pop
into
add
sub
mov
gs
mov
daa
pop
xchg
loope
push
popf
dec
push
rcll
insl
out
pop
pop
or
push
xchg
dec
sbb
dec
inc
mov
pminub
leave
adc
and
cmc
rorb
adc
enter
add
adc
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
lock
dec
mov
xor
movsb
cmp
sahf
nop
sbb
mov
mov
insb
cmpsb
add
xor
insl
aaa
outsl
adc
dec
xchg
fsubs
inc
cmp
jne
hlt
cmpsb
pop
lret
arpl
push
xchg
dec
mov
cltd
cltd
xchg
imul
push
push
dec
inc
dec
dec
repz
nop
xor
xor
std
jle,pn
sub
fdivrp
shlb
int
test
es
and
cmpsb
mov
das
mov
xchg
lock
cmc
scas
jo
cltd
lret
xchg
subb
jl
cmp
imul
adc
shll
daa
jne
inc
ret
loope
jb
arpl
adc
mov
and
jp
fwait
je
bound
stos
popa
stos
ss
loopne
sub
push
xor
xor
mov
sbb
int3
call
and
fsubs
mov
hlt
xor
adc
in
dec
xor
outsl
mov
lock
xor
js
mov
cld
cmp
jle
and
jae
insb
int
sti
js
movsb
das
and
sbb
push
push
add
jp
fsts
adc
xchg
imul
icebp
js
cmp
dec
pop
rorl
adc
sbb
ds
mov
and
and
gs
adc
ret
inc
test
jo
push
mov
and
sbb
cmp
sbb
mov
ss
je
push
cmpsl
pop
fsubl
cli
sbb
mov
nop
pop
mov
lahf
sub
xchg
dec
sbb
iret
out
cmp
scas
add
sub
mov
jmp
jmp
sub
sbbb
jne
mov
lods
sarb
push
test
movhps
sbb
in
sub
mov
mov
mov
stc
xor
out
insl
pop
mov
imul
or
scas
mov
adc
pmaxsw
ret
pop
repz
loope
int
sbb
mov
decl
ffree
xchg
cld
xor
xor
fldl2t
pop
or
int3
xor
mov
fs
test
dec
cmp
mov
pop
lcall
sti
adc
mov
icebp
daa
inc
stos
dec
add
mov
cwtl
inc
rclb
outsl
aam
jnp
xchg
push
mov
in
mov
adc
scas
mov
mov
xchg
pop
cltd
or
ret
int3
cmpsb
in
add
pop
pop
mov
sub
enter
xor
push
dec
pop
mov
sub
jecxz
mov
daa
xchg
loop
dec
jge
test
test
mov
adc
insl
out
out
or
sub
inc
lret
adc
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
jmp
pop
add
jl
fisttpl
jb
dec
xchg
mov
mov
xor
sahf
cmpsb
dec
or
sbb
dec
fcoms
sti
inc
adc
pop
aad
adc
push
xor
cwtl
push
out
jno
mov
mov
loopne
movsl
push
cmp
sub
dec
es
push
in
mov
mov
mov
cltd
add
sbb
pusha
sub
movsl
es
or
shrb
inc
and
imul
add
inc
cmpsl
ret
push
inc
sbb
addr16
cmp
mov
sbb
or
cmp
mov
pop
mov
or
jnp
mov
arpl
outsl
mov
push
fabs
cs
out
loop
add
jg
jg
int3
sbb
mov
inc
mov
cli
or
inc
cmp
mov
in
xlat
add
inc
xchg
cwtl
add
xchg
add
add
movsl
pop
fstpl
cli
jbe
adc
insl
subl
cmp
loope
ds
mov
dec
cltd
aas
out
pop
icebp
int
xor
lock
xor
movsl
clc
or
test
inc
fstpt
fists
jmp
test
fs
das
pop
lcall
mov
movsl
push
aad
mov
sub
rol
orl
and
push
cwtl
call
loope
adc
inc
push
push
inc
add
mov
or
cmp
cmpsl
arpl
inc
sbb
or
push
lods
jmp
outsb
add
push
push
aam
push
dec
paddw
stos
gs
sub
dec
orl
popf
mov
pop
add
add
xchg
insl
adc
inc
add
pusha
sbb
or
jnp
mov
aas
shlb
sub
sbb
fidivrs
sub
pushf
jecxz
fidivrs
adc
adc
xchg
rcrb
jo
lcall
and
pop
stc
push
dec
lret
aaa
insl
inc
push
stos
cmp
sbb
jne
xchg
pop
and
lds
in
test
jmp
iret
mov
mov
lret
cmpsl
push
inc
pop
adc
sti
lret
xchg
repnz
jo
sub
jge
scas
into
push
mov
shll
inc
jg
adc
fisttpll
or
mov
mov
push
ret
adc
push
in
ds
jo
or
jns
sub
into
mov
repnz
or
test
add
add
out
push
push
cli
pop
loop
clc
dec
mov
jp
push
popf
ja
int3
cmp
inc
cmp
pop
pop
adc
sub
popa
pop
xchg
int
out
mov
inc
jle
call
add
popf
mov
dec
pop
clc
hlt
jo
mov
dec
adc
roll
shr
xor
jmp
cmp
sub
xchg
fiadds
sbb
jnp
mov
mov
cmp
test
insb
pop
dec
rcl
iret
aad
scas
jecxz
aaa
cltd
add
das
fcoml
sub
jno
cmpsb
pop
pop
mov
mov
popf
je
out
pminub
cmp
push
sbb
sbb
test
push
scas
sbb
jmp
jbe
sarl
bswap
sbb
cmp
enter
push
push
sbb
cmp
leave
test
dec
popf
imul
ljmp
shlb
jno
mov
hlt
xchg
jg
xchg
into
cmpsl
dec
in
mov
sub
negl
popf
inc
mov
mov
mov
and
or
mov
push
inc
es
cwtl
jle
cwtl
pop
lock
push
scas
cmp
test
les
ljmp
adcl
sbb
test
lds
test
sub
sbb
adc
roll
mov
adc
sbb
and
add
repz
lret
leave
addr16
and
lock
fdivrs
lahf
xchg
jno
cmpsb
push
in
lds
push
mov
std
dec
jge
scas
jnp
or
pop
idivb
outsl
or
xlat
jo
and
push
enter
xor
dec
mov
sbb
inc
cwtl
nop
push
add
mov
rcl
fstsw
adc
ret
or
cli
rcrl
mov
jne
mov
jo
cmp
dec
jb
sub
inc
repnz
sub
loop
mov
xor
jo
pop
les
cli
je
push
mov
mov
ja
aaa
or
push
mov
or
cld
fs
mov
lods
xor
push
in
hlt
dec
pop
leave
fisubs
push
insl
cwtl
shlb
xchg
add
mov
mov
insb
xchg
lcall
mov
pushl
test
xor
push
data16
mov
negl
cld
sub
dec
xor
adc
leave
mov
sub
sti
shlb
loopne
lcall
ss
cwtl
jns
loop
cwtl
ds
xchg
ljmp
ret
jp
inc
aam
pop
js
dec
call
xchg
dec
cmp
out
cmc
shlb
jb
push
or
imul
mov
data16
repz
test
pop
lds
fincstp
shll
mov
xchg
jae
jo
mov
aad
in
mov
mov
fisubrs
mov
push
les
mov
push
mov
jns
push
data16
push
popf
pop
sub
push
subb
rcrb
lea
xchg
cltd
stos
cmc
shl
sbb
add
pop
enter
movb
aad
mov
dec
xlat
icebp
jb
fimull
xor
or
adc
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
jmp
pop
cmp
das
lods
sbb
dec
xchg
stos
sahf
mov
mov
sbb
stos
fadds
pop
mov
cmpsl
pop
mov
cwtl
dec
into
ds
xchg
and
dec
in
jne
fbstp
cltd
stos
cmp
sub
jmp
dec
mov
call
xchg
call
sub
out
shrl
into
push
or
pop
and
lret
les
xchg
out
cld
mov
add
pusha
fisttps
insb
je
call
popa
xchg
cmp
xchg
mov
add
or
clc
push
jp
dec
dec
and
mov
mulb
jns
cmp
and
and
mov
adcb
jp
mov
pop
or
repz
dec
out
sub
hlt
movsl
aam
sub
mov
repz
bound
cmp
lods
jno
sub
ljmp
dec
push
mov
sbb
pop
push
fstl
inc
mov
ds
mov
cmp
sbb
fldl
and
adc
xchg
inc
ja
mov
jg
cs
lret
fbld
in
shll
adc
jecxz
xchg
fimull
sub
aas
loopne
scas
inc
sub
insb
jle
mov
sub
xchg
and
pop
add
jp
imul
mov
or
dec
mov
ss
mov
push
xchg
enter
int3
pop
icebp
pop
mov
adc
sbb
enter
mov
stos
je
psubusw
out
stos
fdivrs
lahf
add
dec
ss
push
or
mov
movsb
sub
daa
or
movb
leave
sbb
add
js
repz
scas
or
sbb
popf
jp
sub
push
loopne
mov
cltd
cwtl
repz
fnstsw
jb
enter
insl
add
std
hlt
mov
or
push
in
fwait
leave
mov
daa
pop
dec
xchg
popa
jnp
mov
idivb
mov
loop
ja
sbb
gs
mov
stos
js
inc
test
flds
dec
cltd
push
enter
addb
cwtl
sub
lcall
lock
mov
or
mov
popa
imul
pop
jae
out
clc
push
enter
in
or
cmp
daa
jecxz
push
test
inc
mov
dec
add
mov
es
sbb
adc
and
stos
push
les
repz
and
movsl
mov
xchg
in
int
cmp
popf
pop
pop
dec
sbb
std
addr16
jmp
iret
dec
into
int3
mov
push
inc
in
test
mov
inc
faddl
adc
and
stos
pop
mov
xor
int
cmp
lods
mull
lret
xor
dec
mov
imul
hlt
xchg
lds
in
repz
dec
push
cmp
pop
js
call
dec
adc
lods
enter
add
adc
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
jmp
fisttps
xor
jnp
movsb
mov
mov
fcmovu
pop
pop
shll
sub
sbb
aaa
out
and
ja
rep
test
int
adc
stos
cmpsb
mov
in
xor
es
dec
daa
cld
arpl
cmpsb
inc
orl
cmc
cmp
mov
mov
and
subb
inc
mov
adc
cmp
jno
shl
push
out
loop
jns
xchg
xchg
mov
jle
pop
cltd
cmp
mov
pop
sbb
sub
mov
pop
mov
mov
mov
sbb
movsl
arpl
sbb
into
das
adcb
sbb
lods
sarb
jmp
jp
in
add
iret
mov
pop
lret
pusha
sbb
adc
and
clc
test
outsb
shll
mov
pop
aad
arpl
add
cs
js
test
and
int
testb
or
adc
xchg
loopne
cmp
ja
mov
aaa
cmp
fcomp
gs
pop
shll
roll
icebp
rorl
fmuls
adc
insl
movl
or
les
aad
dec
jecxz
sbb
inc
rolb
mov
mov
divb
leave
dec
and
loopne
push
imul
out
mov
mov
sti
jge
sbb
xor
repz
mov
sub
jae
sbb
push
iret
adc
mov
call
ficoml
movsl
pop
jmp
ds
dec
jne
data16
mov
test
shlb
jne
inc
jle
mov
dec
pop
aad
imulb
jg
stc
xchg
pop
inc
cltd
sbb
lds
cmp
dec
xor
push
add
pop
mov
std
push
pop
sar
jg
jl
dec
mov
mov
pusha
cld
adc
mov
inc
jbe
and
lods
fidivrl
xchg
add
sub
div
fnstcw
push
call
out
hlt
xor
pop
lea
jo
lock
mov
and
sub
pop
stc
int
or
inc
jbe
sti
lcall
lcall
dec
push
jecxz
jmp
lea
xchg
insl
jmp
lret
mov
cmp
cmp
cmp
push
dec
mov
movsb
sti
xor
hlt
adc
fildll
dec
dec
mov
jno
cmpsb
inc
shlb
mov
lret
int
sbb
push
roll
lock
add
dec
outsb
mov
stos
daa
ret
fisubs
ret
in
lds
pop
lret
jmp
xlat
add
loop
inc
mov
cltd
push
out
lea
stos
jbe
lret
jo
or
ffree
pop
out
pop
or
outsb
push
ss
enter
add
call
mov
mov
insb
in
or
mov
mov
jl
adc
insb
mov
sub
pop
aad
add
shrb
hlt
addr16
jmp
rep
pop
pop
rcll
add
pop
lcall
ds
adc
push
mov
mov
xchg
sub
add
imul
das
and
or
movb
test
inc
cli
mov
loopne
xchg
out
ss
ss
sbb
push
mov
xchg
jo
outsb
inc
into
dec
jne
std
xchg
cwtl
jo
loop
imul
jnp
in
scas
jno
rcll
lods
mov
push
add
fwait
xor
mov
int
cmpb
or
jo
ret
xor
mov
mov
push
cs
pop
pusha
or
movsb
sahf
cwtl
fnclex
mov
inc
imul
pop
cmp
dec
in
and
loope
scas
dec
jno
nop
adc
data16
push
inc
mov
inc
mov
jl
lret
add
loop
push
pop
popa
out
xchg
or
pusha
dec
jecxz
ljmp
inc
jne
push
push
push
and
arpl
out
repnz
mov
mov
dec
mov
rorb
jnp
and
push
mov
cld
xchg
inc
pushf
outsb
inc
inc
cmp
xchg
std
in
nop
mov
lds
and
ja
bound
fsubs
test
ret
mov
jno
int
popf
lret
dec
jo
int3
fisubrs
xchg
outsl
mov
jb
jb
jne
insb
call
cld
mov
push
call
arpl
mov
mov
daa
rcl
repnz
sbb
lock
xchg
push
aad
xor
or
pushf
jb
out
icebp
fwait
loopne
mov
inc
jmp
stos
push
ficompl
mov
call
push
jbe
pushf
add
mov
adc
push
mov
pop
out
arpl
fnstenv
lcall
aas
and
mov
mov
sbb
shll
and
push
jb
inc
cmp
xchg
jno
fucomp
sbbb
aam
mov
test
inc
and
and
xchg
popa
pop
fidivrl
push
mov
xor
cmpsb
pop
pop
gs
out
loop
not
stos
sub
push
adc
clc
xchg
int
xor
sub
cwtl
cmpsl
out
cmp
hlt
imul
mov
in
xor
data16
loop
sbb
add
mov
adc
and
or
jecxz
and
movsl
sbbl
lahf
adc
sbb
stos
dec
push
mov
imul
in
pop
cltd
mov
push
fnsave
sbb
or
push
jp
popa
cli
leave
mov
cli
lods
push
push
mov
lcall
test
inc
call
mov
xor
test
jmp
jno
mov
fs
sub
xchg
lods
roll
xchg
cmp
mov
mov
mov
pop
mov
iret
jle
es
mov
cwtl
inc
or
nopl
dec
dec
xchg
pushf
or
gs
inc
xchg
rolb
out
mov
mov
jle
loop
cmovb
push
mov
pop
inc
push
xorl
fmulp
dec
lret
or
fildl
sti
clc
mov
ret
or
inc
push
enter
xor
rcl
movsl
lret
pop
or
jle
lcall
or
test
pusha
mov
adc
lds
xchg
add
or
daa
popa
int
sarb
loop
aaa
inc
movsb
xchg
mov
xchg
in
stc
mov
into
or
inc
inc
cmp
jmp
fstl
mov
loopne
xchg
push
int
test
and
xor
mov
xchg
repz
jno
sti
fcom
mov
sbb
push
push
mov
movaps
shlb
adc
in
cmp
push
cmp
ljmp
sti
fisttps
js
mov
es
and
pop
es
jnp
jnp
adc
or
add
jle
sbb
mov
test
xchg
out
mov
fstpt
pop
adc
imul
pushf
popa
mov
call
cli
push
and
fs
push
popl
sub
lahf
xchg
cmp
loope
push
popa
sbb
notb
repnz
cmpb
lods
flds
mov
adc
sub
fcompl
push
fcoml
mov
shrb
jmp
xchg
popa
jae
je
and
mov
sti
lret
adc
ret
xchg
outsl
push
roll
sahf
scas
xchg
push
mov
xchg
sbb
lods
ljmp
push
shll
popf
in
popa
xchg
out
xchg
int3
xchg
test
cmp
cmpsl
loope
pop
in
lods
insb
movsl
sub
mov
daa
into
punpcklwd
dec
sahf
test
insl
xor
cmpl
mov
xchg
lret
cltd
and
sbb
xlat
imul
xchg
scas
cld
outsb
call
ret
push
fsubs
mov
mov
cmpsl
inc
add
xlat
frstpm(287
push
push
jne
int3
js
fsubl
out
dec
cmpsl
dec
push
push
in
cltd
push
mov
pop
cld
and
ret
xor
lret
xor
insb
popa
fisttps
nop
outsl
arpl
mov
loope
jmp
lods
popa
xchg
int3
lret
into
xchg
daa
push
jne
mov
or
xor
test
mov
sbb
push
xlat
rclb
lods
cs
lret
jns
outsl
lea
mov
mov
pop
jl
jbe
cmp
mov
insb
inc
jae
adc
insb
into
in
popa
shll
cmp
or
fiaddl
shlb
pop
xchg
add
add
mov
mov
movb
movb
movb
movzbl
movzbl
or
and
movzbl
and
mov
movb
movb
movb
movb
movb
mov
mov
or
mov
sub
mov
imul
mov
sub
mov
cmp
ja
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
cmp
inc
mov
cmp
mov
mov
mov
sub
mov
cmp
ret
mov
or
clc
mov
adc
roll
into
xchg
xchg
pushf
sti
and
sub
jge
jmp
sub
mov
pop
xor
or
mov
test
adc
ja
jmp
lock
dec
hlt
dec
jp
nop
mul
cmp
push
mov
lea
jb
adc
cli
jecxz
xor
imul
mov
push
mov
push
stos
dec
out
mov
cmpsl
sbb
and
or
cld
mov
jno
ret
push
loopne
adc
shlb
aas
cld
add
inc
stc
inc
int3
pushf
pop
inc
popf
add
cmpb
dec
sub
sahf
scas
ret
das
gs
imul
or
xor
negb
add
pop
mov
mov
jmp
or
inc
arpl
stos
nop
dec
mov
test
mov
movsl
clc
dec
cmp
cmp
jge
mov
mov
pop
xchg
andb
lea
push
push
adc
mov
fs
inc
add
mov
arpl
shlb
dec
sub
add
mov
jg
adc
lds
lea
stos
push
jge
imul
and
sahf
xor
cltd
orb
inc
movl
and
mov
or
mov
dec
mov
push
xchg
pop
adc
in
xor
push
test
loope
mov
dec
xor
mov
push
enter
aas
les
cmc
sub
sarb
cwtl
filds
push
fnstenv
dec
inc
mov
xor
and
or
mov
insb
push
daa
fiadds
mov
ja
xor
mov
sbb
test
jg
jns
jecxz
daa
incl
icebp
lret
sbb
sbbb
sub
out
dec
jecxz
push
pop
or
vmulpd
ds
xor
or
ret
pop
testl
outsb
push
mov
and
loop
push
push
sbb
sbb
or
dec
rorl
mov
pop
jl
or
xchg
call
xchg
adc
lret
push
sub
or
orl
add
movsb
adc
add
je
sub
lods
mov
sbbl
add
stos
mov
sbb
mov
jmp
mov
mov
repz
mov
inc
int
push
rcr
out
addr16
adc
dec
test
pop
outsl
icebp
sahf
mov
sbb
or
ljmp
jns
psubusw
adc
cmp
add
add
pop
fwait
add
in
xchg
aad
and
jmp
sub
or
fistps
xor
je
jbe
cwtl
add
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
orl
mov
or
movl
mov
jne
cmpl
movl
movl
jmp
mov
mov
cmpl
jne
pushl
call
adcl
subl
and
movl
adcl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
jmp
push
inc
cmp
mov
push
mov
sahf
pushf
mov
mov
mov
clc
daa
repz
jo
or
test
fcomp
es
lret
push
cmp
sbb
push
pop
mov
mov
inc
subb
add
bound
aaa
inc
test
js
mov
in
stc
out
jne
loopne
cmpsb
mov
aad
imul
sub
call
mov
js
aad
pop
sti
sahf
cli
sub
xorps
dec
and
push
or
sbb
and
cmp
hlt
jmp
and
stos
push
mov
rcl
or
ja
dec
mov
mov
test
mov
sub
cmp
daa
repz
mov
sub
stc
inc
push
repnz
dec
xchg
or
inc
addl
fdivr
push
mov
or
lahf
pop
orb
xchg
push
or
fldl
xchg
mov
jmp
insl
cmpb
mov
pushf
jb
inc
xchg
ret
lret
inc
popa
lods
inc
aad
mov
xchg
xor
mov
hlt
push
repz
rcll
dec
xor
pop
xor
cmp
lods
mov
lods
fbld
dec
js
push
je
fsubrp
mov
ret
repz
cmpsb
fmulp
arpl
popa
add
xor
mov
ja
inc
push
popa
adcb
push
loop
push
push
mov
xor
fsubs
mov
bound
lcall
int
gs
scas
ljmp
clc
stc
xor
mov
xchg
call
mov
cmp
push
xchg
out
outsl
mov
enter
call
cmp
aas
xchg
leave
cmpsb
addr16
in
xor
inc
inc
sub
cmp
lret
insl
pop
mov
cltd
sub
shl
cmpsl
mov
stc
es
jno
stos
test
daa
sbb
jno
mov
and
pop
mov
mov
cld
lret
scas
mov
das
cmp
cmpsl
or
xchg
insl
mov
lahf
xchg
dec
adc
inc
adc
inc
mov
loopne
cmpsl
iret
adc
jg
jo
orb
mov
cmc
xchg
adcb
mov
stos
shrl
test
adc
mov
outsb
mov
into
faddl
xor
cs
pusha
stc
lods
inc
pop
js
test
pop
sahf
mov
scas
inc
mov
mov
ficoml
sti
cmp
push
jle
jno
mov
mov
movsl
repz
es
mov
jae
jecxz
jae
mov
xor
dec
stos
fnstenv
mov
push
imul
jns
faddp
mov
pop
push
pop
movsb
jno
aam
jno
adc
imul
shl
aam
test
dec
ss
imul
pop
data16
sub
in
jne
imul
mov
jbe
cli
adc
adc
fdivrl
push
push
and
imul
sti
xor
shl
lock
cmpsl
movl
mov
push
je
imul
sbb
cli
push
out
scas
xchg
outsl
idiv
into
push
stc
shll
adc
mov
pushl
popa
mov
imul
rep
addb
push
push
ljmp
or
lds
call
pop
or
lahf
cmp
jle
add
fdivr
addr16
sub
pop
pop
movsl
stos
mov
cmp
mov
pop
adc
in
adc
ljmp
cmp
sarb
fimull
xchg
or
add
add
add
mov
movl
movl
movl
jmp
dec
pop
xor
inc
imul
iret
insb
sarb
mov
ret
mov
movsb
and
mov
test
jb
mov
adc
add
inc
push
shll
gs
dec
add
push
xchg
xor
sub
sub
cmp
mov
add
lret
bound
xchg
mov
inc
bound
mov
inc
mov
sbb
pushf
in
es
fs
jnp
ja
sbb
gs
in
rolb
daa
push
sub
aad
rorl
cmp
faddl
pushf
lcall
jno
xor
sbb
xchg
add
add
sub
cld
push
pop
and
std
inc
mov
sbb
push
add
cld
jle
scas
out
add
xchg
pop
xchg
add
mov
mov
cmp
dec
stos
dec
leave
sbb
ds
mov
xor
add
fldenv
mov
and
sbb
xor
add
dec
mov
ret
push
ret
mov
fisttpl
inc
notb
insb
mov
push
push
test
and
jecxz
popa
mov
cld
fcomps
sarb
inc
sarb
dec
add
jo
pop
inc
ret
mov
test
into
je
jl
jo
loope
enter
adc
dec
in
test
xor
outsl
imul
sub
mov
cwtl
push
add
xchg
shr
push
xor
repz
in
ret
fiaddl
push
jge
les
stos
popa
int
xor
test
aaa
fstpl
aas
sbb
aad
ret
fistps
sbb
popf
and
pushf
pop
andb
pushf
out
int
add
fdivrs
hlt
pop
pop
xor
jge
pop
add
mov
popf
jmp
filds
dec
pop
scas
adc
imul
lcall
aad
mov
and
pop
jmp
sbb
adc
push
jp
loopne
and
or
mov
mov
cmp
mov
mov
pop
sub
imul
inc
add
pushf
pop
cmp
cltd
dec
into
jmp
fiadds
fs
add
adc
adc
push
call
xchg
fs
pop
lock
xor
lret
das
pop
test
jmp
pop
mov
dec
jne
push
sti
xchg
push
add
pop
inc
out
iret
shlb
pop
pop
in
call
loopne
cwtl
pushf
mov
shll
into
push
subb
pop
cmp
xchg
into
out
out
nop
icebp
xor
imul
fldt
pop
outsb
mov
adc
mov
mov
in
mov
xor
inc
mov
ret
jns
dec
inc
mov
mov
setns
out
and
mov
fcoml
enter
mov
clc
pop
push
add
adc
add
cmc
dec
shl
inc
repz
daa
testb
xor
mov
ds
jns
hlt
sub
add
and
out
test
pop
and
jnp
jp
stos
inc
imul
and
dec
cmp
enter
sbb
in
arpl
jae
sbb
adc
push
clc
jle
adcl
and
repz
adc
mov
stos
into
mov
mov
jne
lds
into
push
fsts
cmc
pop
xlat
popf
cmpsl
test
xor
jp
mov
pop
xchg
mull
inc
push
loope
out
shll
jle
cmp
mov
or
mov
icebp
lods
negl
jbe
int
or
or
dec
dec
iret
push
cs
inc
aam
xor
add
fmuls
and
add
scas
ret
je
add
shl
repz
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
jmp
mov
cmp
nop
lret
jns
iret
cmp
sarb
mov
ret
and
push
xor
jl
into
or
es
cmp
and
mov
rorb
inc
into
das
dec
mov
test
push
push
xchg
int3
into
push
push
lret
push
sbbl
arpl
sbb
jo
out
jb
stos
jg
icebp
adc
daa
push
push
and
inc
pop
cltd
mov
es
jl
push
in
arpl
adc
xchg
push
xchg
cmc
dec
stos
inc
dec
cmp
ficoms
es
adc
int
mov
mov
stos
pushw
cmpsb
mov
dec
cmp
mov
xchg
mov
rcrb
mov
mov
sub
hlt
pop
mov
sahf
jae
mov
out
shl
std
aaa
xor
inc
jnp
std
jl
inc
enter
hlt
ficoms
outsl
popa
inc
jne
fldenv
rolb
orb
jae
shrb
add
ss
mov
mov
xchg
lods
inc
in
hlt
xor
add
popa
mov
lcall
jbe
mov
push
cmp
scas
js
cli
xor
out
inc
mov
xchg
pop
add
clc
jg
mov
aam
loopne
nop
mov
cmpsb
cmp
push
push
pop
add
fsubl
mov
xor
inc
or
sub
and
data16
xchg
inc
mov
jnp
jp
outsl
mov
negl
ja
mov
dec
addl
cmp
pop
out
fimuls
push
dec
push
icebp
pop
adc
pop
xchg
add
adc
test
rolb
sbb
adc
push
insb
dec
inc
inc
pop
repnz
les
xor
test
in
popf
push
sbb
in
fninit
xchg
push
cltd
shlb
in
popa
es
jg
cmp
and
add
pushf
pusha
add
ja
push
std
jecxz
or
jno
shlb
hlt
data16
jbe
movsl
push
inc
fmull
fcoml
mov
fsubrl
fisttpl
mov
loope
fistpl
int3
fcompl
mov
shll
orb
pop
mov
push
outsb
push
imul
ja
sbb
fbld
in
lcall
or
xchg
dec
dec
daa
mov
cmp
cmpb
js
arpl
and
int
push
out
test
movsl
ret
fwait
jge
pop
repnz
mov
stc
dec
hlt
sub
es
jbe
jl
pop
jno
nop
mov
dec
push
shll
jg
bound
dec
shrl
and
in
nopl
addr16
test
pop
lock
adc
sbb
rclb
xchg
data16
sbb
in
and
leave
mov
lcall
sbb
fwait
icebp
jb
dec
or
push
lcall
adc
mov
dec
xor
cmp
jmp
jae
pop
mov
in
inc
sub
out
fimull
in
sub
adc
mov
mov
lods
jecxz
dec
mov
scas
pop
arpl
lret
cmp
leave
cmpb
outsb
fwait
ret
out
test
pop
add
loop
inc
les
addr16
inc
mov
arpl
mov
movsb
fisubrs
stc
pushf
popa
jo
je
push
sub
idivb
int
add
and
int
or
call
xlat
iret
xor
pop
dec
in
or
hlt
push
je
clc
outsb
mov
add
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
lea
push
call
pushl
pushl
call
push
call
cmpl
mov
mov
not
movl
jmp
movl
cmpl
jbe
push
call
inc
adc
andl
mov
sub
mov
mov
andl
push
andl
pushl
andl
call
mov
xor
movl
movl
cmpl
mov
movl
movl
mov
jmp
movzbl
movzwl
cmpl
jge
pushl
push
call
not
adc
xor
or
mov
mov
orl
xor
andl
imul
orl
and
sub
or
mov
dec
movl
movl
or
movl
xor
movl
mov
sub
mov
sub
xor
mov
orl
and
orl
mov
xor
sub
addl
imul
mov
movl
cmp
movl
jne
movl
sbb
movl
movl
jmp
and
xchg
jmp
int
cmc
out
iret
or
sarb
pop
rol
in
sub
cmpsb
sbb
outsb
and
std
loope
and
mov
inc
add
sbb
xor
data16
xchg
jno
mov
push
lock
test
cmp
push
dec
inc
int3
dec
push
jge
or
mov
xor
push
xor
addr16
imul
insb
sbb
imul
pusha
jno
cmpsl
xchg
repz
nop
test
or
aad
cli
or
je
xor
mov
xor
jle
in
cld
mov
inc
fdivr
pop
cmc
sti
mov
lea
push
aaa
test
dec
xchg
test
add
inc
pop
fsts
fucomi
iret
adc
testl
push
lcall
push
cmpb
ss
and
push
cmp
cld
int3
xchg
xchg
jb
fs
cmpl
mov
jbe
inc
push
add
sub
mov
mov
push
jne
mov
add
shrl
adc
outsl
or
xchg
push
imul
inc
test
sub
movsb
jecxz
push
push
cmp
xor
lock
es
add
icebp
mov
mov
ror
mov
cwtl
cli
jo
sub
jmp
sub
stos
push
xlat
xor
rcrl
xchg
jmp
jae
fdivr
pushf
cmpsl
inc
dec
sub
imul
or
pop
sahf
scas
add
loop
nop
in
repnz
pop
fwait
mov
and
js
cltd
mov
add
sti
xor
fistpll
fwait
jns
daa
pop
arpl
or
insb
inc
push
in
adc
pushf
js
shll
es
adc
lods
add
jle
add
test
xor
testb
rcrl
in
pop
pushf
xchg
inc
fistpll
mov
adc
cmp
fwait
outsb
out
mov
xchg
mov
dec
out
lds
mov
push
popf
gs
adc
cmp
mov
in
mov
xchg
adc
mov
outsl
sahf
sbb
out
movl
or
pushl
not
movl
movl
adc
movl
movl
dec
movl
inc
movl
movl
mov
mov
sbbl
imul
sub
or
xor
movl
pushl
cmpl
mov
movl
mov
movl
jmp
movl
cmpl
jg
push
call
andl
adc
xor
and
and
or
movzbl
adc
cmpl
mov
mov
movl
movl
jmp
mov
cmpl
jg
push
push
call
mov
mov
adc
sbb
mov
and
sub
sub
addl
add
adc
mov
add
push
add
pop
xor
div
mov
xor
or
sbb
mov
incl
or
or
mov
div
xor
cmpl
movzwl
mov
jmp
movl
cmpl
jg
push
call
xor
andl
mov
or
add
orl
adc
subl
sbb
xor
cmpl
movl
mov
jmp
mov
cmpl
jne
push
push
call
adcl
andl
movzbl
adc
mov
adc
orl
adc
orl
orl
pushl
adcl
mov
mov
or
mov
mov
pushl
sbbl
add
pushl
imul
pushl
addl
mov
mov
subl
xor
subl
mov
orl
div
sbbl
and
xorl
or
addl
pushl
xorl
call
orl
dec
movl
jne
movl
cmpl
notl
movl
jmp
movzbl
cmpl
jae
push
push
pushl
pushl
pushl
push
call
or
xorl
sbb
subl
mov
mov
or
movzbl
add
mov
mov
subl
mov
movl
mov
call
sbb
jmp
add
popf
jmp
sub
cmpsb
scas
xchg
jecxz
call
sarb
push
push
ret
dec
int3
fcmovnbe
sbb
shrl
mov
fsubl
dec
adc
xchg
sarb
jmp
adc
adc
push
jns
sahf
pop
out
cmp
or
mov
test
xor
adc
xchg
xchg
imul
add
mov
lret
inc
jp
mov
sahf
sti
mov
data16
leave
pusha
cwtl
mov
mull
lret
jno
ret
rsqrtps
fistpl
data16
jae
mov
or
jne
pusha
xchg
ss
movb
das
ja
xlat
repz
dec
add
out
iret
sub
push
stos
sbb
pop
pop
cmc
outsl
arpl
dec
adc
aam
imul
inc
stc
push
daa
in
aas
mov
mov
xchg
je
inc
hlt
mov
add
inc
or
mov
and
pop
fildll
mov
mov
add
pop
cmp
bound
or
pop
mov
call
imul
lock
ficoms
mov
pop
push
cmp
inc
les
ja
pop
push
lea
repnz
cmc
pushf
ds
out
addb
sub
fldl
jmp
ror
add
jp
mov
mov
adc
jecxz
mov
and
test
pushf
fwait
movsl
cmp
lock
int3
add
or
mov
push
lock
rorl
js
fxch
adc
mov
mov
jge
cmp
xchg
dec
shll
mov
add
jno
pop
mov
mov
data16
or
out
add
lods
fildl
or
paddw
outsb
push
data16
xlat
rcll
cmp
lcall
dec
pop
inc
leave
shll
cmp
popf
cmp
rcrl
push
xchg
inc
pop
or
jle
or
push
fiaddl
cmp
int
gs
cmp
pop
mov
popa
out
rcrl
pusha
repnz
jns
add
xchg
icebp
push
push
and
mov
cmpl
mov
mov
jmp
movl
movl
cmpl
jl
pushl
pushl
call
xor
or
and
and
xor
add
mov
sub
or
inc
cmpl
movl
movl
mov
movl
jmp
mov
cmpl
jl
pushl
push
call
sbbl
addl
add
xorl
addl
lea
xor
or
xor
mov
sub
mov
sbb
mov
cmpl
mov
mov
jmp
not
cmpl
jg
pushl
push
call
andl
xorl
add
subl
mov
or
adc
mov
mov
mov
sub
or
mov
xor
xor
or
sub
mov
xor
shl
and
shr
or
mov
inc
mov
xor
mov
mov
mov
cmpl
movzwl
movzbl
jmp
not
cmpl
jb
pushl
push
push
push
pushl
pushl
call
movzbl
add
mov
xor
xor
xor
xor
sub
sub
add
xor
sbb
adc
mov
or
mov
cmpl
mov
movl
mov
jmp
movl
cmpl
ja
pushl
call
sbb
adcl
sbb
xor
or
xor
add
add
sub
shrd
cmpl
mov
movl
mov
jmp
mov
mov
cmpl
jae
pushl
call
subl
mov
or
sub
dec
dec
notl
movzwl
sub
shr
mov
mov
addl
xor
adcl
xor
orl
or
mov
adc
mov
orl
push
orl
pushl
lea
push
sbbl
shl
call
orl
lea
addl
push
orl
mov
mov
addl
lea
sbbl
push
adcl
mov
lea
mov
subl
jmp
cmp
lret
mov
out
push
xchg
cmp
movsb
sti
faddp
mov
addr16
sarb
movl
xchg
mov
loope
sti
rcrl
mov
and
sar
aam
xchg
test
add
xchg
fs
xchg
in
insl
pop
jne
fimuls
sbb
pop
or
xor
arpl
and
hlt
mov
gs
fcmovbe
std
xor
lret
fs
imul
jp
xchg
cmc
or
mov
mov
fsub
mov
shrl
aaa
mov
dec
lods
sub
cmp
movzwl
lret
cli
jno
xor
or
dec
push
outsb
push
pop
dec
aaa
dec
js
cmpsb
pusha
add
jo
inc
popa
mov
mov
mov
dec
popf
sub
movsb
jnp
sub
xor
mov
jp
inc
ds
xor
add
cmpsl
shll
cmp
and
rcrl
push
xor
in
jnp
out
repz
sub
fs
mov
jg
mov
push
sbbl
mov
repz
bound
mov
stos
mov
mov
fwait
cmpsl
mov
pop
xchg
into
mov
jne
fidivrl
pop
icebp
enter
dec
cmp
lock
sbb
xlat
mov
lret
sti
aam
in
loope
xchg
sub
xlat
mov
inc
pop
push
sti
pand
test
vpshld
dec
pop
sub
and
jl
push
pop
add
xor
lahf
les
dec
and
in
push
test
cld
cs
stos
out
mul
pop
orl
nop
aaa
inc
mov
aas
aaa
add
push
ljmp
gs
jmp
lods
cmpsb
xor
ss
add
or
rolb
mov
xchg
push
mov
roll
lods
cmp
push
dec
aad
inc
cmp
cld
jp
push
imul
add
int
loop
ljmp
sub
jl
test
xor
adc
shll
adc
pop
imul
stos
cmp
and
adcl
jmp
and
fstl
jb
sahf
nop
xchg
sarb
testb
adc
pop
bound
sbb
mov
jecxz
jle
sahf
pop
jl
mov
sbb
cld
popf
out
mov
sub
jp
push
movsl
dec
lods
cmpsl
cmp
fcmovb
mov
js
jbe
push
or
scas
pushf
dec
xchg
aaa
mov
xlat
pushf
mov
in
sub
lahf
stos
mov
les
dec
jge
into
pushf
mov
testl
leave
out
call
adc
cmp
mov
test
pop
push
sbb
fildll
pop
push
xchg
push
inc
xchg
stos
or
cli
insl
adc
push
into
out
cltd
cli
into
add
addl
daa
or
imul
jae
mov
sbb
int
and
mov
add
jl
xchg
int3
adc
loop
in
movsl
loopne
stos
xor
add
adc
sub
xor
repnz
xchg
push
mov
or
xor
sbb
cs
push
jl
pop
popl
stos
std
hlt
mov
aaa
add
scas
scas
cmpsl
inc
sti
mov
jnp
push
sbb
lret
ret
cmp
lods
cwtl
add
adc
lock
add
sbb
xchg
inc
xchg
push
lahf
xor
es
cmp
sbb
andb
sbb
adc
ljmp
push
dec
outsl
pop
jge
pushf
pop
jb
idiv
pop
cmpsl
shlb
dec
shr
mull
sbb
les
xor
sub
jl
sbb
test
mov
popa
loopne
mov
jb
fldt
sahf
ffreep
push
and
movsl
loop
ja
add
mov
cmpsb
fisttpl
in
lods
sbb
mov
xchg
push
sar
and
cmp
sarl
scas
or
adc
loope
sbb
or
movsl
hlt
adc
lcall
pop
mul
stc
addr16
lds
ljmp
hlt
loope
test
add
dec
popa
call
je
sbb
add
aam
add
push
andl
call
andl
push
push
pushl
call
mov
mov
xor
mov
mov
cmpl
movl
mov
not
mov
jmp
movl
cmpl
jle
push
push
pushl
pushl
call
xor
andl
mov
and
adc
negl
mov
mov
sub
imul
shr
shl
cmpl
mov
movl
movl
jmp
mov
cmpl
ja
pushl
push
pushl
call
sbb
or
movl
and
adcl
xor
or
and
mov
xor
and
mov
lea
sbb
mov
jmp
or
scas
and
inc
lods
jecxz
into
push
xchg
jmp
sarb
ss
inc
mov
xchg
xchg
jl
pusha
addl
jl
movsl
or
push
lods
idivb
insl
push
mov
cmp
clc
push
jmp
or
ret
jle
jmp
ja
dec
loop
fidivrl
movsb
cmpsl
bound
adc
lock
jmp
loop
flds
scas
sub
bswap
nop
scas
shrb
pop
cmp
inc
push
push
repnz
addl
lods
pushf
out
xor
lea
movups
adc
sti
int
sbb
and
shl
ret
jbe
mov
adc
jmp
cmpsb
jecxz
mov
xchg
adc
mov
sub
lods
pop
call
jae
cmp
jno
mov
cmp
lock
mov
fdiv
push
shl
fdivrl
push
xorl
insb
push
dec
push
mov
push
cmp
mov
fldcw
rcr
add
and
std
cmp
inc
xchg
mov
cwtl
arpl
lods
jge
add
xchg
sub
mov
mov
dec
pusha
dec
arpl
test
shll
call
fists
lock
negl
mov
mov
fcmovu
fxch
xchg
sbb
lods
andb
pop
data16
pop
or
fcomps
jo
insl
btl
xchg
lods
mov
adc
lds
fistps
outsb
repnz
nop
das
dec
pop
outsb
push
lret
xchg
scas
mov
cli
or
sub
and
aas
repnz
push
das
cmp
xor
popf
ds
inc
jo
push
sbb
imul
inc
inc
mov
test
iret
sbb
cmpsb
inc
loopne
push
lahf
push
rcrb
xchg
ret
fadds
fldcw
fistps
jno
jnp
les
push
cmp
and
mov
gs
mov
les
inc
notl
es
lret
das
cmp
pusha
subl
insl
sub
lea
cmpl
movl
movl
movl
jmp
mov
movl
cmpl
je
push
push
call
mov
xor
or
sub
and
mov
adc
inc
and
adc
xor
or
mov
sub
xorl
cmpl
mov
mov
jmp
mov
cmpl
jg
push
push
call
or
adcl
not
sub
mov
mov
sub
sub
or
mov
mov
sub
or
mov
and
mov
sub
mov
sub
lea
cmpl
movl
mov
jmp
mov
mov
cmpl
jge
pushl
push
call
sub
addl
mov
sbb
mov
mov
mov
sub
add
mov
and
mov
not
xor
movl
cmpl
movl
mov
jmp
mov
cmpl
ja
push
push
call
and
not
or
sbb
xor
xor
adc
xorl
subl
jmp
inc
inc
in
xor
mov
test
fs
lret
movsb
fs
andb
inc
shrb
pop
fcomps
in
pop
fists
dec
movsl
outsl
jp
adcl
sti
xor
cmp
fsts
add
inc
mov
inc
xchg
sbb
clc
pop
pop
sbb
mov
and
add
adc
jno
ss
cmc
cmpsl
fmul
roll
int3
jo
les
mov
test
fmull
les
jmp
sbb
xorl
add
push
dec
jge
xorb
stos
jae
cmp
out
stos
loopne
or
or
sub
out
adc
inc
rorl
add
jns
jbe
and
ret
adc
cmp
xor
and
mov
cmp
add
sahf
push
add
jg
pop
dec
xlat
mov
movsl
lock
bnd
dec
addb
xor
inc
loope
outsb
insl
mov
adc
pop
dec
pop
inc
pop
adc
mov
jbe
add
scas
mov
push
pop
mov
and
mov
aaa
loopne
and
aad
add
imul
fistpll
stos
mov
ficompl
movl
fcoms
pusha
test
sti
in
jl
adc
pop
pushf
xchg
xchg
mov
adc
dec
int3
and
aam
or
rorl
xchg
xchg
push
test
imul
adc
mov
bound
out
pop
add
pop
out
cmp
xor
pop
add
push
xbegin
xor
mov
xor
xor
addr16
sub
jbe
popa
xchg
add
mov
xchg
mov
cmp
mov
mov
jp
sub
cli
adc
and
jo
mov
sbb
and
int3
sub
push
loopne
aad
sbb
in
iret
les
xor
sbb
cmc
push
fmulp
adc
jb
mov
xor
push
cmp
and
inc
inc
add
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
jmp
inc
pop
sti
daa
sti
mov
mov
rcr
out
sarb
mov
fildl
mov
enter
mov
subb
mov
lock
mov
shrb
inc
xchg
call
fwait
les
sbb
arpl
jg
mov
rorb
mov
xlat
std
mov
pavgw
fwait
cli
das
lahf
or
out
push
xchg
out
cltd
cs
pop
adc
lods
cmp
pop
mov
cmp
push
dec
push
adc
pop
insl
cmp
pop
fs
xchg
xor
shl
stc
push
popa
loopne
or
mov
mov
fcmovbe
jne
lahf
inc
scas
inc
jp
adc
sbb
pop
lret
arpl
outsl
cmp
and
dec
inc
fcomps
shll
ret
mov
sahf
xchg
loopne
pop
fistl
stos
shll
repz
stos
popf
imulb
mov
jmp
xor
mov
inc
jbe
mov
push
es
gs
popa
xchg
sbb
mov
sub
jbe
sub
fwait
in
inc
ffree
ljmp
or
loop
or
push
mov
cmpsl
shr
mov
mov
jl
outsb
vpsubsb
sarb
xlat
ljmp
jb
pop
shll
ret
aam
jge
ret
inc
mov
pop
adc
data16
popa
jg
fs
adc
jno
xchg
add
sub
push
mov
or
outsb
push
pop
outsb
test
fistpl
sub
mov
out
faddl
add
ret
or
jecxz
xor
mov
out
jmp
jo
adc
cmc
adc
rcll
mov
mov
add
xchg
adc
dec
movsb
nop
sti
jnp
iret
push
arpl
sbb
std
adc
mov
repnz
test
jg
repz
lods
or
popf
mov
cwtl
leave
scas
inc
sbb
inc
movsl
lahf
lods
adc
out
cmp
or
xor
cmpsl
mov
inc
sub
sahf
mov
mov
fnstenv
ss
jnp
xchg
pushf
aaa
sub
pop
cmc
inc
sub
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ljmp
adc
nop
push
repz
nop
inc
sti
xchg
sub
roll
out
scas
mov
je
jmp
sub
lret
fcmovnbe
rcr
push
out
test
mov
cmpsb
int
push
mov
inc
cltd
ss
cmc
into
fs
and
jne
mov
push
inc
jmp
or
in
and
or
mov
dec
leave
les
js
mov
pushf
mov
movsl
mov
xor
ret
es
repz
pop
nop
fs
neg
mov
aad
loope
xor
sahf
push
xor
or
push
xor
dec
inc
mov
dec
mov
les
adc
lahf
xor
sub
fidivl
sub
xchg
mov
mov
push
pop
mov
loop
xchg
jnp
cmp
aas
in
es
aad
insl
push
sub
jae
sti
pop
call
ja
lds
pushl
and
orl
sbb
mov
or
cmpsb
lret
adc
das
dec
sub
fdivrl
cs
and
iret
mov
fcoml
cmp
sbb
or
fsubrl
push
rcll
jecxz
pop
push
cmp
pop
fcmovnbe
les
pop
imul
mov
shrl
jge
jae
test
cld
pop
js
inc
ret
je
lods
popa
xor
call
xchg
loopne
sub
nop
mov
addr16
jl
or
daa
cmp
adc
or
push
in
ljmp
pop
leave
je
mov
into
mov
pop
int
popf
outsl
lret
dec
push
and
xlat
adc
out
cltd
cli
mov
push
cmpsl
lds
iret
imull
pop
movsl
scas
inc
es
mov
jns
test
popf
sar
add
std
loope
xchg
scas
mov
sbb
fsin
inc
add
std
mov
sbb
mov
push
pop
push
push
jo
push
sub
mov
adc
fcoml
cmp
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
jmp
jp
cld
dec
cmp
jp
js
push
sahf
push
bound
xor
push
push
mov
mov
outsb
pop
push
sbb
adc
xor
push
out
inc
mov
jg
lahf
scas
xchg
push
and
and
jno
inc
roll
dec
sbb
adc
int
cmp
mov
movsl
xchg
fisubrs
dec
repnz
jp
inc
add
out
adc
andl
mov
xor
xlat
cli
cli
jp
inc
loop
pushf
outsb
add
inc
add
adc
mov
cli
and
dec
faddl
leave
arpl
lret
int
in
loop
lods
mov
movsb
cmpsb
mov
and
push
popf
xchg
adc
repnz
pop
xor
outsl
push
jb
das
mov
and
cmp
xor
or
orb
and
stc
fmull
xchg
sub
sub
pushf
bound
scas
xor
mov
mov
or
push
popf
out
jns
ljmp
push
scas
and
dec
sbb
aam
inc
cld
fs
jno,pt
sbb
xchg
mov
loopne
cmpsb
adc
push
lret
and
xor
xchg
divb
clc
dec
movsb
test
pushf
or
popf
ljmp
daa
shrl
scas
lods
cmovs
dec
ljmp
dec
and
addb
daa
mov
sub
sbb
adc
jmp
pop
cli
xor
repz
jno
push
jg
jne
fwait
loope
cmp
fwait
aas
sbb
add
fdivs
addr16
lret
xchg
out
xchg
push
adc
fsub
pusha
les
adc
xor
js
sbb
stos
not
add
pop
fdivs
sub
imul
test
cmpsb
imul
divl
pop
xchg
add
xadd
pop
in
lea
jns
repnz
push
jge
jle
jo
cmp
loopne
cmpsb
cmpsl
cwtl
cmc
aad
fcoms
test
cli
adc
mov
imul
pop
in
mov
push
push
push
push
push
call
mov
mov
add
mov
adc
jmp
ljmp
mov
cmc
mov
fldl
mov
out
leave
mov
loop
push
pop
mov
lret
add
rcll
std
cld
mov
lahf
push
lret
into
test
out
sub
cltd
dec
dec
xchg
aam
cmp
adc
jnp
mov
jns
daa
push
pop
sub
out
dec
ljmp
adc
pop
cmp
out
add
cli
mov
insb
into
repnz
aas
leave
mov
lods
cmp
sarb
xchg
scas
push
xor
fidivl
insb
mov
stos
adc
lcall
fwait
xchg
repnz
cmp
push
mov
stos
mov
ret
push
aas
xor
in
xlat
adc
sbb
mov
aaa
lock
loopne
shlb
sarl
test
or
jbe
xor
inc
fcomi
mov
add
jmp
outsb
outsl
loope
call
xlat
sub
jnp
jl
nop
xlat
rclb
jae
arpl
jbe
sub
mov
ds
cs
decl
cmovne
icebp
popa
inc
movzbl
ror
mov
sbb
sarl
or
int
cld
mov
inc
mov
pop
enter
add
xor
jecxz
mov
imul
xor
mov
ror
inc
pushf
mov
jl
jge
inc
xchg
sub
movb
jecxz
mov
popf
repnz
div
aad
aam
mov
dec
test
nop
mov
push
jae
jno
ja
push
pusha
jns
mov
jle
cld
cmc
lret
jno
push
out
cmp
push
lahf
cmp
jno
dec
lret
xchg
jmp
sbb
mov
stc
dec
push
adc
adc
xchg
iret
divb
and
and
aas
xor
loope
jmp
pop
movsl
xor
pop
insl
das
adc
test
cmp
inc
add
ss
outsb
add
je
sbb
hlt
es
xor
adc
stos
inc
dec
in
icebp
outsb
add
stos
pop
outsl
call
xor
mov
je
push
ss
adc
js
cmpsl
loopne
lahf
dec
mov
cmp
jne
cmp
je
mov
mov
xor
shld
jmp
lret
repnz
xchg
xor
sub
xor
mov
ret
movsl
roll
bnd
movsl
shl
rclb
xlat
insb
test
mov
rclb
stos
xchg
xchg
inc
cmovle
xor
inc
jae
jl
mov
lods
push
mov
mov
push
lods
hlt
xchg
sbb
adc
popa
les
xchg
outsl
push
inc
mov
and
add
fisubrs
xor
into
inc
in
push
loopne
repz
sub
jbe
mov
repnz
pop
shlb
faddl
jb
adc
and
mov
mov
and
fisttps
xor
fisttpl
add
cmpsl
cmp
jmp
cmpsb
aas
ficoms
jbe
jle
push
and
mov
cmp
mov
or
repz
insl
iret
add
mov
aad
mov
mov
mov
out
mov
sbb
push
sub
xor
dec
lahf
dec
mov
daa
sub
sbb
jmp
in
decl
in
push
sub
sbb
lods
mov
adc
mov
ss
imul
xchg
sti
jecxz
test
cs
pop
jl
ret
aad
push
popf
sti
cmpsb
pop
mull
and
insb
mov
je
sub
aam
call
int
jbe
and
xor
sub
push
cmpb
pop
mov
mov
sub
mov
lods
pop
repz
lahf
test
fcoml
pusha
aas
adc
cmp
fdivs
dec
bound
mov
loop
je
lret
out
in
ljmp
xchg
mov
add
outsb
int
out
loopne
jnp
outsl
adc
rolb
sub
lahf
mov
sarl
ljmp
inc
enter
cmp
cmp
cmpsl
inc
loopne
out
or
sub
mov
insl
xchg
scas
pop
xchg
outsl
pushf
shlb
dec
push
shlb
fidivrs
and
ljmp
and
mov
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
gs
decb
sbb
mov
or
or
add
mov
roll
pop
push
xor
dec
out
mov
lea
xchg
lock
repz
ret
loopne
mov
js
push
ss
out
lret
adc
inc
and
dec
lcall
xchg
rorb
addr16
stos
aam
fiadds
cltd
jo
mov
jae
mov
mov
ret
mov
xchg
aas
repnz
movsl
sbb
or
or
test
lret
inc
pop
scas
gs
aad
movsb
data16
das
sbbb
loopne
fldl
jle
jae
and
sub
loop
or
cwtl
add
fldt
jl
or
scas
mov
push
push
gs
andb
lods
fcomps
push
xor
xorl
push
aam
inc
outsb
xchg
stc
xor
fisttps
push
push
ja
cmp
push
insb
out
insl
jns
mov
addr16
std
mov
jmp
insl
daa
jbe
sub
enter
or
pop
into
movd
pusha
add
std
add
insb
xor
aad
xchg
jmp
lcall
sbb
mov
idiv
jo
inc
popa
xchg
addb
aad
cmp
jmp
inc
jg
fistl
jno
cmc
popa
imul
jecxz
and
gs
sub
jecxz
cmpsl
jo
and
cwtl
xchg
ds
pop
insb
test
add
neg
push
fldl
pop
jbe
xor
inc
add
push
ret
mov
int3
pop
in
cmpsl
test
xor
roll
dec
in
fimull
iret
call
test
nop
xchg
icebp
ret
xor
faddp
jge
sub
jnp
pop
or
lods
and
rcrb
nopl
lods
arpl
sarl
add
cmp
les
and
mov
inc
push
ret
lret
incb
sbb
xor
es
fst
leave
nop
mov
mov
sbb
int3
adc
fstps
dec
jecxz
xchg
push
sahf
sbb
movsb
and
add
lret
push
and
sub
mov
sub
mov
cmp
jbe
mov
jmp
xchg
sub
jae
mov
jo
loope
fists
xor
push
inc
in
bound
imul
dec
pop
jne
push
je
push
pusha
lret
std
jecxz
movsl
mov
imul
scas
movb
js
fsubs
mov
pop
or
push
mov
clc
aad
sub
dec
sbb
daa
xchg
mov
lock
ret
jns
xchg
imul
add
sbb
and
popa
cli
ret
pop
mov
pop
pop
mov
pop
xchg
adc
add
jl
xchg
xor
inc
push
movsb
out
js
jge
loope
ds
and
and
cld
bnd
mov
sub
cmp
sahf
pop
push
xlat
xor
out
mov
bound
cmp
pop
addb
sbb
movb
fdivrl
xor
mov
pop
mov
jnp
je
clc
mov
movsl
jb
fcmovu
movsb
push
push
ds
xor
add
faddl
cmp
aam
imul
push
scas
enter
pushf
cmp
push
fsqrt
in
and
lret
cld
xchg
and
repnz
push
sub
inc
addr16
and
lret
xchg
shrb
out
xor
add
lahf
mov
lret
push
mov
add
xchg
mov
enter
imul
xchg
loop
push
daa
dec
fdivrs
sub
pop
push
int
xlat
add
or
adc
imul
test
cmpsl
clc
jo
dec
dec
adc
stc
fiadds
cltd
cli
mov
push
fwait
out
lea
push
nopl
cmp
add
loopne
rcrb
push
ror
outsb
js
mov
sub
outsb
push
push
pop
xchg
jg
out
jbe
jb
lret
int
and
stc
aas
pop
int
movsb
inc
dec
ljmp
or
jnp
jnp
lcall
imul
test
inc
xchg
leave
adc
out
lret
dec
dec
mov
cmp
dec
mov
jb
ret
jbe
pop
xchg
push
and
push
lea
clc
fiaddl
es
push
mov
mov
mov
movzwl
mov
or
mov
sub
jmp
loop
push
xchg
je
and
inc
popf
hlt
iret
and
sarb
jns
ret
add
adc
pop
lret
iret
scas
enter
mov
inc
mov
jle
jmp
add
roll
outsb
daa
xchg
rcll
inc
mov
cltd
or
pop
inc
bound
outsl
add
in
ret
push
adc
push
loopne
lret
enter
pushf
mov
xchg
push
fst
iret
ret
out
mov
jnp
pop
lea
insb
rorb
jmp
out
scas
out
andb
adc
dec
xor
fstpt
jne
dec
mov
jne
jg
ss
push
clc
jbe
inc
hlt
xchg
scas
lea
inc
mov
xchg
inc
dec
xor
out
push
aaa
out
mov
sahf
ljmp
sbb
in
insb
cltd
lret
xchg
push
stos
ret
sub
lcall
nop
sti
cmp
jo
stc
lea
add
in
rcr
out
daa
mov
sti
xchg
xchg
sub
push
jo
xor
inc
push
and
jmp
xchg
nop
cld
push
fbld
pop
rorb
cltd
add
mov
xchg
jmp
hlt
jl
insl
shr
dec
gs
sti
jbe
push
dec
xchg
or
int
push
mov
dec
jae
pop
xchg
adc
pop
sbb
sub
pop
hlt
push
xor
int3
dec
ljmp
sbb
cmpsb
mov
adc
shrl
cltd
shll
outsb
inc
sub
arpl
xchg
cmp
arpl
pop
fisttps
mov
pushf
mov
cmpsl
mov
cmc
adc
pop
or
les
xor
jmp
adc
push
mov
pusha
mov
mov
mov
mov
ljmp
push
loopne
in
shrl
ds
ss
push
mov
jb
pusha
mov
sub
pop
adc
pop
mov
xor
popa
mov
mul
jae
jle
fstl
jns
invd
jecxz
lret
and
repnz
and
jb
mov
or
and
mov
sub
pushf
ja
sub
jmp
mov
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
jmp
jge
into
movsb
mov
iret
adc
sarb
mov
sub
mov
mov
and
pop
adc
xorb
xor
cmp
sub
adcl
pop
sub
cld
addr16
sbb
push
push
mov
mov
jo
and
mov
mov
faddl
jne
aas
jg
leave
mov
add
mov
cmpsl
cwtl
push
and
sar
ret
scas
mull
data16
sbb
push
xor
int
sahf
pop
jge
outsb
pop
bound
jecxz
mov
push
pop
xchg
repz
cmp
imul
in
sbb
test
dec
int3
enter
jmp
test
mov
jg
jb
and
sti
cmc
mov
mov
sub
adc
adc
mov
inc
pop
fnstsw
inc
fisubrs
and
andb
test
popa
rcr
cld
xchg
insb
inc
sbb
sbb
je
cmp
gs
jle
dec
sarw
repz
pop
push
sub
movsb
stos
or
xchg
insb
es
fsubrl
out
adc
sub
mov
rorb
lods
push
repz
fcmovb
add
pop
movsl
ljmp
or
add
adc
or
nop
push
mov
jge
xor
and
jg
aad
andb
les
bound
jbe
xchg
pop
pop
jg
pop
mov
xchg
mov
pop
lea
clc
jmp
fdivrl
cltd
push
mov
mov
cmpsl
mov
ret
mov
mov
out
inc
out
adc
out
rorl
in
rclb
pop
repnz
dec
cmpsb
or
lods
sub
add
cmpsb
xor
das
arpl
and
jg
push
sub
sbb
xchg
xor
jnp
jge
xchg
sbb
xchg
mov
decb
aaa
sbb
cmc
scas
subl
and
xor
stc
arpl
push
adc
lods
in
aaa
repnz
bound
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
jmp
add
cmp
loopne
inc
fisttpll
pop
rcll
pop
sarb
mov
pop
or
rorb
dec
sub
aam
mov
push
jle
das
in
dec
js
sub
cwtl
and
cmpsl
rcrl
shll
jl
popa
mov
popa
pusha
add
mov
fwait
xchg
sub
mov
fsubrs
push
das
mov
jo
cmp
sti
push
and
cmp
add
test
jg
pushf
orl
ret
loope
inc
pop
leave
dec
ja
test
jb
lock
dec
inc
and
enter
jg
cmp
jae
push
mov
cmp
mov
jp
and
fnstcw
dec
stc
sbb
pop
pusha
or
pop
or
xchg
leave
aaa
mov
sub
pop
xchg
ja
cltd
mov
dec
cmp
inc
pop
test
sbb
xchg
push
cmp
push
and
clc
out
je
inc
sbb
pop
ret
movsb
mul
movsb
push
ret
fldcw
mov
push
mov
sbb
cmpsb
push
mov
hlt
pop
jmp
and
cmp
jecxz
lds
test
hlt
pop
cmp
xlat
jl
cli
mov
stos
mov
push
stos
push
fisubl
sub
dec
icebp
jns
loop
or
aas
adc
into
push
jg
fdivrl
add
mov
mov
movsb
icebp
ljmp
cli
stos
scas
out
ficoms
dec
loopne
fnstenv
scas
push
aaa
mov
outsl
or
mov
sub
push
mov
push
iret
scas
xchg
dec
pop
pop
and
inc
test
sbb
mov
sub
sarl
scas
xor
fs
imul
mov
repz
das
cltd
mov
in
popa
out
cmp
xor
push
loopne
mov
fisttpl
outsl
lds
insl
test
xchg
or
add
out
adc
outsl
jmp
push
jmp
push
subl
movsl
dec
iret
and
movsb
cmp
sbb
scas
inc
sub
shll
mov
lods
roll
xor
mov
shr
mov
xor
jmp
scas
xchg
mov
mov
pop
rcrl
push
rorl
ret
in
and
jo
jns
dec
sbb
mov
inc
repz
or
push
push
int
fld
pop
fldenv
cmp
mov
mov
lcall
out
sbb
mov
fstps
push
and
pop
inc
lret
orb
enter
sub
xchg
pop
sti
lcall
add
jle
mov
adc
bound
clc
push
aas
sbb
in
mov
cltd
neg
sub
sti
dec
idiv
insb
dec
sub
ret
cmp
sbb
mull
or
mov
mov
sub
pop
sbbl
insb
sbb
mov
fdivl
jp
push
mov
addr16
and
ss
ja
mov
and
add
stc
iret
dec
mov
mov
push
mov
dec
sub
jne
jnp
jno
ret
xchg
lock
cmp
in
in
sbb
lret
out
sub
sub
gs
mul
push
gs
cmpsl
push
daa
xor
and
adc
cmp
sbb
xchg
sub
or
sub
xorb
adc
rcrb
pop
mov
ret
mov
inc
push
movsl
xor
mov
sbb
stos
lock
outsl
dec
movsb
push
mov
sbb
inc
mov
pop
out
movsl
sbb
sbb
ret
adc
repnz
push
pop
pop
loopne
xchg
divl
outsl
incb
inc
adc
aam
and
out
xchg
mov
adc
je
ja
xchg
xchg
sub
lret
mov
fcom
dec
lods
pop
push
sahf
xor
enter
mov
mov
shrb
xor
mov
mov
mov
mov
cmpsl
mov
xchg
pop
adc
or
fs
inc
or
mov
int3
push
pop
out
adc
dec
test
jmp
mov
mov
in
xlat
pop
xor
dec
aaa
xor
mov
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
jmp
repz
mov
shl
iret
rolb
sahf
add
sarb
in
mov
pop
fdiv
shl
sub
movsl
push
popa
enter
mov
shr
call
popf
daa
call
adc
xchg
and
cmp
test
jne
and
jl
ret
leave
orb
adc
fldl
lds
ss
lret
movsb
dec
xor
and
ret
and
cmp
leave
ds
sub
push
leave
pop
xor
repnz
adc
imul
xchg
or
adc
jno
ss
mov
jnp
inc
cwtl
xor
push
xlat
cmpsl
imul
xlat
shl
es
inc
lods
scas
in
test
xchg
add
std
push
jnp
dec
fldenv
aas
xor
push
jle
test
das
imul
and
dec
in
fildl
mov
cmp
inc
sahf
push
mov
fs
mov
orb
cmp
mov
fsubrl
jp
fcomps
and
das
leave
dec
pop
inc
jbe
and
test
fs
jns
loope
fimuls
dec
adc
das
add
call
dec
lcall
dec
ljmp
xchg
gs
jmp
leave
sbb
cmc
dec
fs
test
jp
fs
dec
mov
dec
loopne
loopne
je
cmc
aad
pop
and
imul
lret
mov
std
add
push
push
into
cmpsl
ficomps
fs
int
std
sbb
out
jg
mov
mov
imul
add
inc
in
dec
push
add
inc
pop
lock
test
mov
daa
dec
mov
pop
push
cs
adc
push
or
sub
fsubrl
insl
dec
fisubl
stos
cmpsb
aas
sbb
sub
les
mov
bound
fiaddl
ret
fidivl
enter
stos
test
inc
stc
lods
leave
int
jne
adc
adc
repnz
add
adc
pop
add
mov
loopne
ret
pusha
hlt
pop
pop
pop
push
mov
lea
and
jne
lcall
adc
jmp
cwtl
mov
mov
ss
adc
mov
push
push
sbb
xorl
jnp
lods
roll
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
jmp
cs
jne
js
mov
fisttps
mov
mov
cmp
mov
add
jbe
xor
test
jbe
cmp
mov
leave
xor
cmp
adc
or
test
rolb
loopne
sbb
shlb
push
push
test
loope
inc
icebp
bound
sub
cmc
lret
insl
es
jb
out
pop
fs
sub
das
repz
push
and
std
out
sbb
jno
adc
nop
fistpll
add
scas
mov
add
xchg
jnp
out
adc
insl
jge
nop
sti
adc
pusha
or
jmp
fmull
out
cmc
add
sbb
bound
jmp
dec
int
mov
idiv
lret
scas
ja
and
xor
add
or
add
jne
ret
mov
cwtl
mov
pop
xchg
mov
or
pop
inc
cmp
pop
clc
sbb
mov
pop
fcoms
pop
cltd
repnz
jns
adc
pop
inc
mov
add
xchg
dec
sbbb
popa
loope,pn
push
mov
mov
or
push
and
mov
adc
or
cmp
in
test
loope
xor
lea
mov
out
into
and
jecxz
mov
push
inc
and
cmpsb
mov
insl
nop
or
jb
lods
ja
imul
imul
mov
jae
jbe
lret
repz
fisubs
imul
and
xchg
add
mov
test
dec
dec
in
xchg
movsl
mov
add
pop
test
popf
rcrb
out
jns
pop
push
mov
incb
sbb
int3
mov
or
aaa
dec
mov
sub
jl
mov
add
mov
inc
inc
push
cmp
stos
mov
lea
inc
jae
pop
mov
pop
outsb
mov
jb
dec
sub
test
lods
fs
addr16
ret
mov
incb
pop
shrl
mov
jg
fdivrs
xchg
movsl
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
jmp
add
adc
sub
sub
repz
mov
enter
out
pushf
and
add
mov
sbb
fildll
sub
out
xchg
push
and
xor
jl
mov
aas
jl
jbe
add
pop
or
jae
imulb
push
xor
or
cmp
aas
or
xor
cmpsb
pop
xchg
into
add
add
inc
loope
call
push
push
mov
sti
popf
jno
jle
or
jbe
sbb
notb
outsl
add
sti
xchg
dec
cmp
pop
fisubrl
shrl
inc
cmp
cmp
mov
call
jmp
pusha
ljmp
in
ficompl
or
jecxz
and
insb
mov
mov
mov
jnp
pop
andb
arpl
daa
mov
sub
xlat
inc
add
mov
push
cmp
repnz
push
stos
ljmp
xchg
pop
fs
dec
mov
sbb
movsl
pop
shrb
mov
repnz
mov
bound
cs
xchg
call
rolb
mov
add
mov
adc
addb
push
sub
xchg
clc
push
popf
fdivl
mov
ds
in
fcmovne
mov
mov
jo
adc
arpl
cli
cmpsb
test
mov
jl
shl
jo
mov
mov
insl
aas
leave
jg
aas
addl
jecxz
addr16
sub
sbb
jb
jbe
lret
sahf
pop
movsl
xor
add
scas
cmp
lcall
xchg
inc
rorl
les
push
add
mov
sub
out
scas
xchg
idivb
xchg
cmc
sbb
rolb
mov
movsb
stos
loopne
mov
and
mov
pop
fwait
aas
jecxz
ret
and
fimuls
xchg
ret
lods
jo
jp
daa
xor
cmp
mov
cmp
mov
adc
push
movb
or
push
out
and
inc
gs
jno
rcrb
sbb
cmpsb
and
in
pop
std
push
inc
add
pop
lds
incl
inc
and
and
jmp
xor
frstor
test
addr16
xor
dec
pop
mov
mov
das
cmp
push
push
cld
and
cmp
loopne
stc
sub
fstl
aad
cltd
sbb
loope
iret
mov
and
push
lea
cmpsl
orb
sub
push
icebp
dec
xor
int3
add
lods
pusha
jg
adc
inc
in
ret
cwtl
dec
lcall
hlt
or
inc
jns
mov
aad
movsl
and
hlt
or
imul
and
dec
ret
ss
push
sub
aam
lds
negb
mov
lahf
and
in
cmp
push
add
or
ljmp
xchg
push
pop
and
pop
call
pop
dec
or
xor
movsl
add
jnp
outsb
fsubrl
cmp
ljmp
and
lds
dec
scas
push
sti
xchg
pop
jb
xchg
jge
xlat
xchg
les
les
mov
pop
insl
aad
stc
loope
jbe
ljmp
mov
jne
dec
inc
mov
xorb
adc
and
loope
lcall
fisttpll
dec
das
xor
xchg
repz
and
xor
loopne
xchg
inc
inc
mov
sbb
and
mov
mov
adc
xchg
clc
aas
in
test
inc
mov
std
shrb
cld
repnz
enter
mov
sti
cmc
ror
inc
xchg
js
and
mov
xchg
ret
clc
xchg
daa
add
leave
dec
jl
mov
das
pop
sbb
mov
pop
add
mov
int
dec
xchg
sub
jns
ss
adc
lds
sbb
adc
test
push
cmp
push
imul
jmp
inc
sahf
daa
push
mov
iret
icebp
repnz
sbb
jle
pushf
mov
pop
cmp
pop
ja
sub
push
dec
imul
stos
movsl
popa
test
ret
testb
rol
shlb
jmp
push
jmp
mov
sub
add
mov
movl
mov
jmp
sub
ljmp
in
xchg
out
add
sarb
mov
inc
jne
divb
stos
out
loope
movsb
or
pop
call
pop
inc
leave
pop
jle
adc
gs
daa
sub
jbe
movsl
test
cmpsl
dec
add
or
fistpl
or
inc
lea
dec
orl
jnp
xor
lahf
add
gs
inc
mov
dec
arpl
cli
lcall
xchg
rorb
enter
ret
icebp
movsl
loop
scas
fs
add
ljmp
sub
insl
mov
cmc
repnz
push
xor
hlt
xchg
aas
dec
xchg
popa
mov
xchg
in
lock
scas
repnz
lret
dec
imul
push
jmp
xchg
jbe
ja
inc
xchg
shrb
or
add
push
stos
sbb
or
adc
pop
out
sahf
imul
sub
add
inc
adc
in
loop
in
sarl
mov
adc
fnstenv
imul
xchg
push
jbe
ret
push
inc
addl
ds
loopne
dec
testb
push
pop
pop
push
shll
sbb
and
lock
sbb
in
test
adc
incb
push
cmp
push
add
adc
push
jecxz
sti
push
dec
lcall
cwtl
fmuls
inc
fisubrs
ret
pusha
outsb
mov
mov
sbb
xor
dec
leave
dec
inc
add
mov
mov
or
push
fs
lcall
fdivr
clc
or
test
movsl
nop
mov
push
cmp
mov
and
pop
xchg
fdivrs
out
and
push
fsubr
shll
jge
sub
aam
mov
mov
push
or
addb
setnp
iret
addr16
sbb
xchg
hlt
dec
xchg
das
jl
mov
lahf
pushf
push
incb
les
hlt
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
jmp
repz
lea
jnp
mov
lods
dec
xchg
lahf
shl
jecxz
xor
mov
xchg
stos
cltd
test
xchg
xchg
testb
movsl
xlat
hlt
loope
xlat
fidivrs
out
push
sbb
cld
aad
pop
and
add
pop
inc
sub
cmp
and
jnp
cmp
addr16
ds
add
or
popf
dec
aad
add
push
and
in
adc
aaa
int
adc
rcll
pop
sbb
or
mov
test
and
mul
aas
and
push
popf
sarb
add
cwtl
and
stos
cli
in
jmp
pop
pop
dec
fnstcw
or
or
inc
mov
aad
cli
test
mov
test
mov
mov
and
inc
add
ret
pop
inc
xchg
pop
or
lds
jl
inc
aas
call
or
jno
xlat
fcomps
mulb
cld
mov
nop
je
pusha
cli
int3
and
adc
mov
out
jb
adc
xchg
rorb
mov
add
dec
addw
dec
movl
or
call
out
ret
sub
add
lret
in
sub
out
push
inc
xchg
mov
and
fsubr
mov
cmc
ficomps
pop
adc
jecxz
stos
sub
cmpsl
pop
push
outsb
and
jl
call
jae
in
mov
movsb
ss
es
inc
sbb
loopne
fbld
faddl
out
cmp
add
cltd
push
nop
in
imul
inc
es
imul
add
rclb
fmul
cmc
pushf
mov
add
inc
or
mov
jmp
scas
push
int
xor
dec
lret
pushw
testb
cltd
adc
mov
jp
sub
dec
or
xchg
xchg
push
pop
pop
mov
and
iret
xlat
aaa
adc
int3
dec
lock
cmp
push
mov
daa
mov
push
mov
arpl
lret
ljmp
add
fdivr
xor
sbb
and
scas
fwait
push
movsl
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
cmpl
movl
mov
mov
not
jmp
mov
cmpl
jge
push
pushl
push
pushl
pushl
call
neg
movzwl
sbb
mov
and
xor
or
or
adc
xor
movzbl
or
push
push
cmpl
mov
mov
mov
mov
jmp
movl
cmpl
jae
push
pushl
pushl
push
pushl
push
call
xor
movzbl
or
mov
add
adc
addl
decl
movl
cmpl
not
movl
jmp
movl
mov
cmpl
jl
pushl
call
adc
sbbl
and
and
orl
sbb
subl
movl
xorl
movl
mov
mov
xor
div
cmpl
movl
movl
movl
jmp
mov
movzwl
cmpl
jle
push
push
push
call
xor
movzbl
sub
mov
adc
adc
and
or
mov
mov
sub
imul
sub
mov
addl
xor
adc
and
sbb
mov
subl
xor
div
sbb
sub
mov
sub
mov
movl
movl
cmpl
movl
movzwl
jmp
not
mov
cmpl
jne
push
call
movzwl
xor
and
sub
mov
xor
mov
andl
adc
movl
adc
mov
and
add
xor
add
xor
add
imul
mov
cmpl
mov
mov
jmp
mov
cmpl
ja
pushl
push
push
push
push
call
inc
mov
sbb
or
and
sub
and
adcl
sub
mov
mov
sub
add
mov
movl
movl
movl
sbb
movl
cmpl
movl
mov
movl
jmp
mov
movl
cmpl
jge
pushl
call
adc
add
sbb
andl
and
mov
imul
xor
mov
mov
or
mov
imul
xorl
imul
mov
and
or
orl
mov
xor
andl
mov
orl
mov
orl
lea
mov
add
movl
movl
sub
movl
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
jle
pushl
push
push
call
sub
xor
sbb
movzbl
adc
addl
sbbl
mov
xor
cmpl
mov
mov
jmp
movl
cmpl
jl
push
push
pushl
pushl
call
sub
sub
sbbl
sub
mov
adc
mov
adcl
movl
neg
mov
addl
or
xor
add
sub
mov
or
cmpl
mov
movl
jmp
movl
cmpl
jne
push
push
push
call
andl
sub
add
mov
xor
sbb
cmpl
mov
mov
mov
mov
jmp
not
cmpl
jne
push
push
push
push
call
or
negl
movzwl
sbb
orl
add
cmpl
movl
mov
mov
jmp
not
cmpl
jbe
push
push
push
call
movzbl
adc
sbb
sbb
adc
mov
sub
add
xor
sbbl
mov
movl
subl
movl
or
movl
cmpl
mov
movl
jmp
mov
cmpl
jb
push
pushl
call
add
movzbl
add
sub
xor
add
or
add
mov
add
sbb
mov
sub
mov
xorl
lea
or
cmpl
movl
movl
mov
jmp
movl
not
cmpl
jbe
push
call
mov
sub
mov
sbb
mov
movzbl
or
sbb
neg
mov
xor
mov
sub
sbb
mov
xor
movl
movl
inc
mov
movzbl
sub
mov
add
sbb
imul
add
mov
imul
xor
adcl
mov
div
sub
sbb
mov
xor
add
sbb
mov
movl
xor
or
xor
mov
movl
or
movl
and
mov
and
mov
xor
addl
div
imul
cmpl
movl
movzwl
mov
jmp
movl
cmpl
jge
pushl
call
sbb
xor
xor
sub
and
xor
xor
xor
orl
xor
adc
add
mov
addl
xor
mov
and
mov
xor
notl
mov
div
jmp
xchg
dec
in
movsb
lods
stos
test
iret
aam
sarb
xchg
cltd
ret
xchg
adc
pop
pop
iret
pop
push
mov
push
out
rcll
jne
outsb
and
addr16
call
xor
cmp
popf
popa
lods
mov
add
jg
ficoms
xchg
insl
mov
iret
dec
add
sub
dec
lods
cld
push
inc
or
xorb
ret
xor
fmull
pop
push
xchg
cs
lret
iret
das
pop
push
adc
rolb
or
jns
mov
pop
jb
stc
xchg
out
aam
cmp
pushf
jae
sarl
xor
push
andl
or
fistpl
xor
repz
subl
inc
call
sbb
adc
adc
pop
es
sub
shll
popa
jno
xor
add
rcrl
jmp
clc
inc
xchg
dec
cli
ljmp
jns
mov
mov
fnsave
xchg
lret
imul
pop
or
cwtl
xor
lret
ds
inc
xchg
mov
out
dec
data16
push
jno
or
bound
popf
add
call
push
or
sahf
gs
imul
sub
mov
xlat
ret
add
ds
insl
shl
je
pop
out
mov
cmp
stos
or
data16
movsl
sub
imul
and
lahf
mov
ret
out
xor
test
cmp
xchg
mov
jne
jns
cltd
mov
push
cmc
repnz
mov
pop
mov
ljmp
xchg
pop
mov
jmp
lahf
bound
xor
cmp
clc
and
mov
push
ss
jle
mov
int3
xchg
mov
xor
dec
mov
pop
and
aas
cmc
mov
loopne
xchg
cwtl
pop
jecxz
in
fisttps
ss
or
push
and
loopne
xor
pop
ja
rolb
mov
stos
loopne
xchg
loopne
in
and
out
push
mov
aam
in
push
nop
ss
dec
push
adc
aad
inc
sub
js
ss
mov
popa
sub
popf
js
insl
cmp
ljmp
shlb
adc
lock
xchg
jb
sbb
jmp
lahf
stos
sub
adc
outsl
sbb
cmp
mov
lcall
lods
std
loope
mov
aam
insb
and
pop
imul
js
add
sub
cmp
insl
xchg
loope
insl
push
movsl
je
cltd
cmp
or
or
orl
sub
dec
dec
orl
add
ljmp
inc
lea
inc
mov
jb
push
cmpsb
sub
jg
xchg
aad
xchg
mov
fdivl
jno
and
jecxz
jbe
pusha
xchg
std
cwtl
enter
scas
jne
outsl
and
pop
push
pop
lret
jecxz
xor
sbb
push
sahf
iret
push
jecxz
fsubrs
dec
pop
ret
xchg
mov
xchg
fstps
dec
lahf
or
in
pop
pop
std
sub
inc
leave
cmp
fdivrl
nop
mov
popa
push
sub
cmp
sbb
mov
pop
andb
jmp
push
shll
shll
insl
enter
add
sbb
stos
adc
push
pop
in
push
pop
test
fimull
daa
mov
xorb
jbe
mov
inc
jp
mov
cwtl
xor
mov
sbb
movl
movl
movl
sbb
mov
adcl
mov
sub
and
shr
cmpl
movl
movl
movl
jmp
mov
cmpl
jge
pushl
pushl
pushl
call
and
subl
andl
or
sbbl
cmpl
movl
movl
movl
movl
jmp
mov
movzwl
cmpl
ja
pushl
pushl
pushl
pushl
push
pushl
call
add
notl
adcl
addl
add
sub
sub
mov
xorl
imul
mov
add
mov
and
cmpl
movl
movl
movl
jmp
movl
not
cmpl
jg
push
pushl
pushl
call
andl
add
xor
sbbl
movl
add
jmp
sub
sbb
pop
and
sub
sarb
xchg
xchg
sub
jae
and
ficomps
and
jl
int
push
adc
bound
int
sahf
in
cs
inc
xor
mov
push
mov
test
sub
add
sbb
pushf
xor
and
mov
dec
icebp
repz
roll
and
mov
std
iret
scas
pop
push
add
xchg
ret
push
int
imul
xchg
outsl
push
cmc
cli
in
cmp
or
out
push
or
jp
call
and
inc
jbe
inc
pop
mov
iret
ret
arpl
push
mov
mov
jne
xchg
out
mov
test
lret
dec
push
xlat
adc
adc
pop
xchg
xor
into
add
jne
stos
jb
xchg
rorb
out
fnstcw
cmp
std
cmp
add
ds
les
or
adc
cwtl
ds
dec
mov
add
mov
and
je
mov
cmp
lds
jecxz
pop
jo
xor
aam
lret
pop
push
enter
push
nop
inc
mov
imul
insl
aam
pop
aaa
push
ret
pushf
xchg
push
push
ds
ret
xor
sbb
jnp
incl
scas
sub
add
les
pusha
or
orl
adc
xchg
test
bound
cmp
fwait
js
out
rorl
mov
mov
pop
rcll
in
into
cmp
loope
fwait
mov
cmp
cmc
stos
add
cltd
xchg
xchg
and
es
push
jb
or
cmpb
pop
pop
inc
jb
inc
sbb
inc
mov
sub
push
mov
pop
xor
mov
push
inc
lret
arpl
cmp
es
mov
dec
mov
push
and
lods
mov
into
lods
loope
cmp
or
and
sbbb
notl
mov
cwtl
pop
jno
mov
xchg
inc
xor
out
push
cli
jmp
scas
mov
lahf
out
je
xchg
aaa
aas
xor
adc
add
fs
dec
rcrl
mov
in
rcll
xchg
dec
adc
pusha
imul
cmp
lds
dec
add
outsb
js
gs
stos
xor
fs
jecxz
dec
repnz
or
sub
test
jb
push
or
jl
fiaddl
gs
pop
pushl
and
es
jp
into
xchg
xchg
ljmp
jecxz
jp
test
out
pop
sbb
mov
inc
push
jae
popa
rcl
push
add
pop
stos
xor
movsl
cmp
sub
notb
clc
cltd
and
lods
or
cmc
sub
adc
xchg
loop
enter
xchg
lock
imul
adc
ja
lds
enter
mov
shl
fiaddl
ret
and
or
mov
mov
nop
mov
xlat
cmpsb
gs
loopne
out
push
je
cltd
into
xchg
sub
pop
lret
xchg
test
ljmp
inc
daa
mov
mov
lret
pushf
cmp
pop
push
cld
in
jmp
inc
hlt
leave
adc
div
xchg
jns
push
mov
data16
push
mov
lods
inc
lret
insl
or
out
and
inc
iret
jno
push
bound
mov
jg
aad
cld
imul
push
call
lock
sbbb
mov
orl
sub
mov
sbb
mov
mov
movzbl
sub
mov
movl
movl
mov
cmpl
mov
movl
jmp
mov
cmpl
jl
push
call
movzbl
sbb
xor
movl
adc
xor
subl
or
cmpl
mov
mov
mov
mov
jmp
movl
cmpl
jae
push
push
call
add
sub
xor
adc
adc
not
mov
orl
or
xor
xor
xor
sub
mov
sub
mov
mov
subl
movl
cmpl
mov
mov
jmp
mov
mov
cmpl
jbe
pushl
call
sub
xor
add
mov
adc
and
sub
xor
or
and
mov
adc
or
movl
movl
jmp
pop
cmpsb
ljmp
add
jecxz
movsb
cli
movsb
jmp
sarb
pop
mov
jb
fldl
test
insb
movsb
push
and
mov
push
xlat
fnstsw
mov
adc
mov
daa
jp
push
add
outsl
push
out
sbb
inc
mov
dec
and
or
pop
lahf
mov
stos
sub
mov
push
insl
mov
fadd
test
cmpsl
pop
sbb
mov
add
mov
mov
out
ror
stos
sbb
lds
lods
add
cmp
mov
bound
mov
and
and
aam
xchg
pop
lds
adc
mov
popf
cmp
scas
out
and
sub
dec
cli
xor
mov
add
and
xchg
cmc
in
mov
dec
pushf
shlb
mulb
pop
insb
push
cmp
adc
fcomip
loope
in
xchg
insb
sbb
adc
push
jp
mov
scas
mov
repz
scas
sub
fistl
xchg
ljmp
mov
fst
push
xchg
fsubl
scas
lock
roll
inc
xlat
cmp
push
or
xchg
mov
inc
pop
cmp
gs
cs
mov
ljmp
lret
in
out
mov
pop
sti
xchg
push
pop
xchg
sbb
aam
int3
outsb
mov
fucomip
imul
jle
or
dec
call
mov
mov
xchg
mov
jae
push
out
mov
out
out
dec
cmc
mov
dec
in
mov
jb
jg
add
jo
clc
scas
mov
jae
ds
or
sub
push
sbb
push
test
sub
cwtl
in
sbb
les
jae
jb
push
rcrb
loopne
pop
clc
push
aam
insl
fnstcw
adc
sbb
sub
dec
ret
sub
mov
push
jae
jle
lret
rep
cld
inc
pusha
lret
lds
shrl
aad
test
movsb
stc
jle
jmp
mov
nop
inc
icebp
pop
mov
push
mov
addr16
mov
cmp
insb
jp
xchg
add
dec
jne
scas
das
out
pop
push
mov
pop
cltd
pop
sbb
pushf
jae
dec
filds
cmpsl
test
out
jno
add
in
mov
rolb
sahf
in
dec
cs
cld
mov
add
mov
imul
push
sub
xchg
arpl
out
push
lods
arpl
pop
mov
mov
movsl
xchg
push
sub
push
insl
lock
leave
roll
mov
and
test
test
sub
push
fidivrs
scas
repnz
imul
cmp
stos
int3
fnstcw
ljmp
int
ret
xchg
scas
push
xor
int3
xor
in
pop
bound
cmp
mov
addr16
mov
push
imul
pusha
pop
popf
cmp
add
out
mov
iret
aam
cli
pop
pusha
sahf
loop
inc
push
es
out
call
cs
out
ja
push
sub
testb
add
popa
loop
xlat
into
jns
cmc
mov
cmpl
lahf
sbb
sub
cmpb
sub
cli
lods
add
jle
push
movsl
push
mov
loope
pop
leave
sbb
dec
jo
xchg
shll
ljmp
aas
cmp
cmp
clc
mov
inc
dec
outsl
mov
mov
fdivr
pushl
jne
add
adc
movl
and
movl
orl
movl
mov
and
add
mov
sbbl
sub
xor
mov
imul
cmpl
movl
mov
mov
mov
jmp
mov
movl
cmpl
ja
push
push
pushl
push
call
mov
sbb
sub
notl
xor
movl
xor
imul
mov
or
mov
adcl
lea
addl
push
call
mov
cmpl
mov
movl
jmp
movl
mov
cmpl
jbe
push
call
and
and
mov
mov
xor
xor
add
movzbl
sbb
sbbl
or
cmpl
movl
mov
mov
jmp
mov
mov
cmpl
jg
push
pushl
pushl
call
and
xor
sub
sbbl
sbb
add
mov
imul
cmpl
mov
movzbl
mov
mov
jmp
movl
not
cmpl
jb
push
push
call
mov
add
mov
mov
and
mov
sbbl
mov
add
movzwl
adc
mov
xor
add
and
sub
xor
sbb
mov
orl
div
cmpl
movl
movl
mov
jmp
movl
mov
cmpl
jne
push
push
push
push
call
sbb
add
movzwl
adc
sub
inc
xor
addl
add
cmpl
movl
mov
mov
jmp
mov
movzwl
cmpl
jb
push
pushl
push
pushl
push
pushl
call
movzbl
xor
xor
orl
xor
adc
addl
mov
mov
sub
sub
mov
movl
movl
movl
movl
cmpl
movl
movzbl
mov
jmp
movl
mov
cmpl
jge
pushl
pushl
pushl
call
mov
mov
sub
sub
sub
mov
mov
sub
imul
sbbl
sub
xor
add
mov
sub
add
movl
movl
mov
xor
or
sub
sub
movl
movl
add
movl
movl
movl
mov
xor
movl
movl
adc
mov
add
mov
adcl
mov
neg
and
andl
sub
sub
cmpl
movl
movl
mov
mov
jmp
mov
cmpl
jbe
push
push
push
pushl
push
call
or
xor
add
mov
sub
and
orl
xor
imul
sbb
mov
lea
add
mov
mov
mov
mov
or
xor
add
not
mov
lea
and
add
mov
or
sub
adc
add
cmpl
movl
mov
movl
jmp
movl
cmpl
jae
pushl
push
pushl
push
pushl
pushl
pushl
push
call
adcl
sbb
xorl
mov
add
mov
sub
movzbl
add
mov
movl
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
sbb
mov
mov
bound
ja
sarb
mov
xchg
jecxz
and
sub
sub
adc
sbb
cmp
lahf
je
addl
aam
pop
jmp
fbstp
out
pop
xchg
jp
fstpl
mov
in
sbb
pop
fs
xchg
iret
andb
pusha
call
xlat
fiadds
xor
push
out
sub
dec
xchg
ss
and
mov
imul
pusha
ss
fimull
movsl
fxch
cmpb
stos
loop
adc
aas
cmpsb
sub
outsb
inc
popf
dec
insl
hlt
loopne
push
popa
gs
stos
adc
in
pushf
mov
hlt
add
insl
mov
sbb
pusha
pop
gs
ret
nop
sbb
addr16
push
icebp
shrl
stos
xor
mov
sbb
out
fwait
repnz
mov
xor
clc
xchg
jg
push
iret
or
je
in
mov
add
lcall
sub
fnstcw
jb
push
and
pop
inc
cmp
popf
call
dec
mov
gs
mov
icebp
push
pop
loope
leave
mov
mov
cwtl
and
aas
notb
fmul
sti
pop
test
pop
sub
or
xor
mov
jno
scas
in
pop
push
mov
or
add
lahf
cmpl
add
test
clc
loop
mul
and
lods
adc
sub
mov
daa
sbb
inc
popa
movsl
daa
lods
cs
jp
leave
inc
es
xchg
cmp
push
ja
insb
jne
inc
push
fwait
call
test
cmovns
pushf
pop
es
ret
or
push
xor
and
xchg
and
push
imul
ret
jbe
mov
cmp
out
cmpsl
inc
roll
pop
rcl
jle
jecxz
loopne
xchg
shlb
or
sbb
imul
fcompl
cwtl
dec
arpl
jge
push
mov
rep
mov
mov
xchg
call
aad
inc
dec
mov
pop
jnp
adc
popf
loope
mov
cld
jbe
loop
in
adc
cmp
in
fnsave
test
add
lea
adc
repz
leave
cmc
cmpsl
ret
jecxz
pop
bound
xchg
and
popf
movsl
jnp
lock
sbb
dec
dec
push
push
xor
pop
rclb
leave
mov
dec
or
mov
stos
movsl
adc
or
scas
mov
ret
sub
rcll
sarl
pop
lock
fwait
mov
out
pop
jp
je
and
jnp
push
int3
sub
scas
lcall
test
cs
shll
lahf
ja
mov
cmp
jle
pop
pop
jne
jo
sbb
inc
xor
call
lret
rolb
xchg
xor
jp
sbb
xchg
xchg
add
xor
sub
xorb
insl
xchg
push
jae
es
in
loopne
leave
pop
ficoml
inc
movsb
cmp
xchg
negb
pop
cmpsl
cmp
mov
and
jmp
cmpsl
data16
xchg
fprem1
lret
imul
popf
iret
xlat
in
out
sub
imul
mov
inc
test
inc
std
lds
dec
lock
in
hlt
arpl
sbb
push
cmp
mov
add
adc
pop
mov
outsl
push
imul
sbb
jl
pop
or
dec
aas
lds
sbb
inc
lods
lahf
push
jg
pop
add
clc
mov
jo
mov
pushl
xor
mov
call
or
or
mov
mov
jmp
outsb
cltd
bound
xor
fsubr
test
add
mov
out
inc
int
push
pop
cltd
xchg
mov
cmp
lcall
stos
mov
push
mov
mov
int
sub
ret
or
dec
mov
sub
les
push
lret
roll
add
mov
movsb
int
push
push
jge
sti
sub
movsb
stos
hlt
in
jmp
je
push
cmp
sbb
popa
push
mov
lods
lahf
cmpsb
sahf
xchg
aas
arpl
xor
shll
test
leave
clc
pop
fiadds
in
cli
push
mov
sub
push
dec
push
dec
add
and
dec
push
movsl
sub
or
mov
xlat
loopne
mov
pop
cs
push
pop
xor
inc
aas
mov
negl
mov
push
sahf
and
mov
jae
mov
and
lods
xchg
out
pushf
ret
cld
pop
sbb
daa
xchg
mov
js
popa
add
xor
mov
adc
shld
mov
stos
xor
pop
xor
imulb
shll
shlb
repz
gs
out
xor
mov
pop
and
push
vpsrlq
insb
mov
push
mov
jp
cmp
push
je
mov
out
cmp
pop
adc
inc
mov
sti
ret
fwait
int3
inc
push
aam
jae
test
cs
imul
or
orl
push
lds
in
es
dec
xor
cltd
enter
xchg
cld
push
jne
dec
pop
pop
add
pop
pop
addr16
test
js
cwtl
push
sbb
sbb
mov
mov
fildl
repz
pop
das
sbb
aaa
xchg
rorb
or
cmp
sub
test
popl
aad
mov
or
mov
cmp
jp
sbb
pop
roll
subb
mov
and
cmpl
xchg
jge
test
daa
imull
adc
sti
dec
push
frstor
jp
add
push
inc
sahf
shlb
divl
mov
fldt
and
sarl
mov
push
dec
out
jl
add
loopne
pop
sub
sub
fnsave
test
lcall
mov
stos
lds
push
push
sub
leave
mov
pop
pop
dec
ljmp
test
fcmovnbe
or
jns
mov
jns
stc
shll
pop
push
sub
andl
rclb
xchg
mov
bound
incl
mov
dec
add
sbb
stos
int
fwait
inc
inc
orb
and
in
or
sub
adc
clc
mov
mov
gs
movsl
jle
sahf
xor
addb
out
insl
sub
or
cmp
incb
push
xor
in
sub
rclb
ljmp
lock
xchg
adc
inc
cmp
or
sbb
movsb
cmpsb
ret
dec
pop
or
push
out
xchg
js
mov
into
pop
jmp
push
xchg
adc
adc
mov
xor
pop
stos
cmp
repnz
dec
pop
cmc
shll
movsl
sti
cli
popf
and
cld
adc
add
pop
add
lcall
adc
addb
aam
int3
pop
mov
fidivrs
inc
test
fadds
cmp
jbe
jns
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
mov
mov
mov
jg
test
nop
pop
sarb
cli
pusha
xchg
es
dec
mov
or
or
cmc
repz
mov
adc
mov
ja
jne
jo
pusha
in
pop
repnz
stos
pop
adc
jbe
push
lods
push
mov
sbb
repz
or
out
or
sbb
popa
jle,pn
ret
cmp
cltd
in
cmp
imul
inc
xchg
mov
or
pusha
pusha
xchg
rclb
and
hlt
fiadds
jecxz
pop
out
nop
jbe
mov
or
mov
pmaxsw
inc
aas
mov
dec
dec
or
scas
jle
mov
arpl
cmp
dec
js
bound
stos
xchg
xchg
jbe
sub
rorl
in
loopne
and
or
in
mov
push
cltd
jecxz
push
sub
call
scas
loope
scas
push
jl
inc
push
pushf
add
idiv
clc
cmpsb
inc
scas
push
xchg
sbb
stc
and
xchg
lret
inc
mov
fstpl
outsb
jbe
adc
das
insb
aas
fisttpll
test
xchg
repnz
push
dec
clc
inc
loope
add
pop
mov
adc
in
daa
fnstsw
arpl
or
jne
sbb
adc
add
xor
sbb
mov
mov
fildl
insb
lea
sub
cld
pop
fmull
fs
sub
mov
mov
dec
ss
out
sub
add
popa
scas
xor
in
lret
and
cmp
jae
xchg
jecxz
add
xchg
je
stos
sbb
xchg
cmpl
cmp
sbb
mov
sarl
pop
or
icebp
xchg
and
lock
fsubrs
xchg
push
rcrb
fstl
rol
addl
push
lds
test
mov
xor
gs
adc
inc
lret
adc
icebp
mov
jmp
push
mov
aaa
hlt
xchg
clc
push
dec
mov
pusha
xchg
imul
pop
pop
add
xor
add
adc
add
mov
inc
sbb
pop
sbb
fsts
ret
mov
fstpt
push
sub
xor
sti
ret
loopne
in
out
push
xchg
pop
in
lock
mov
mov
mov
fstl
in
add
clc
add
out
jle
ds
push
or
out
sub
mul
pop
fisttps
mov
inc
loope
push
push
and
mov
add
xchg
in
sub
call
ljmp
inc
pop
arpl
mov
lds
or
ret
jns
out
rorl
decb
rcrb
sub
pop
push
insb
xor
iret
cmp
push
out
pushl
fcoms
cmp
mov
sub
ss
jns
dec
subb
cwtl
imul
lahf
push
mov
jp
aad
jmp
lods
cs
mov
mov
clc
lods
pop
mov
dec
xor
cmpsl
push
push
dec
cmc
sbb
cld
stos
sbb
bound
popa
jnp
mov
mov
jo
jmp
stos
push
jg
cwtl
add
add
test
bound
pop
push
mov
lea
jbe
xchg
in
pop
cmp
aaa
inc
xchg
sbb
jmp
jo
push
int
gs
scas
adc
mov
mov
inc
repz
outsb
test
mov
pushl
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
jmp
rclb
cmp
mov
scas
xor
lcall
mov
call
ds
add
ret
fnstcw
ret
enter
lods
xchg
sub
outsl
and
push
movsl
sarb
and
cmp
bound
push
pop
cmpsb
mov
push
mov
pop
mov
imul
jns
or
hlt
adc
outsl
pop
divl
ja
aam
mov
test
or
pushf
or
insl
mov
fs
xor
andl
dec
jl
lahf
push
cmp
pcmpgtb
fs
jo
inc
cld
testl
sub
or
add
mov
and
jae
push
call
xchg
cs
cmpsl
or
sub
mov
push
xchg
gs
in
subl
dec
cmp
jle
mov
les
sub
shl
imull
loop
sbb
sub
aaa
fiaddl
sti
iret
sbb
dec
test
sbb
cmp
adcl
sub
inc
jne
inc
shr
jne
fisubrs
pop
and
mov
test
jnp
sbb
mov
adcb
iret
add
mov
mov
shl
les
dec
adc
ljmp
or
ret
mov
dec
sahf
test
sub
mov
clc
xchg
cmp
orb
push
mov
mov
dec
sbb
cmpsb
pop
jp
dec
add
lahf
mov
jbe
popa
dec
test
sbb
sbb
xor
lret
and
add
nop
add
dec
jmp
xor
ja
sub
mov
aaa
subl
and
cmp
xor
ja
loopne
xchg
xchg
in
outsb
dec
push
jmp
loope
scas
mov
push
dec
push
clc
push
pop
imul
dec
sub
sub
loop
pop
in
jns
adc
jle
ds
je
movsb
push
mov
or
insb
test
add
stc
les
sti
sbb
ja
aaa
jo
and
ljmp
imul
pushf
push
std
scas
push
mov
and
stos
jb
mov
cmpsb
push
xchg
in
nop
or
sahf
stc
ret
jns
add
or
fldenv
cmp
dec
aad
or
mov
outsb
inc
dec
test
mov
fwait
out
push
and
mov
cmp
add
jecxz
xchg
xlat
add
pop
stc
lahf
data16
sub
mov
clc
or
add
pop
in
test
dec
repnz
pushl
jmp
adc
xor
mov
push
sub
jle
jecxz
mov
lods
imul
fstl
jmp
xchg
xor
lds
mov
sahf
iret
repnz
xchg
jg
push
sub
scas
push
and
xor
decb
jb
test
adc
sahf
xchg
dec
mov
clc
mov
lret
push
rcrl
dec
add
test
pushf
imul
in
outsl
pop
sub
adc
jg
mov
in
mov
sbb
testl
push
push
lcall
mov
stc
cltd
cmpsb
shlb
and
insl
andl
pop
push
push
call
mov
cmp
jmp
mov
xor
mov
mov
nop
add
nop
cmpsl
outsl
sarb
xor
les
adc
xchg
sub
inc
mov
addl
cmp
push
push
clc
popf
mov
in
fdivs
out
out
in
loop
add
mov
sub
ret
mov
shrl
ret
jne
outsb
pushf
pop
aas
and
adc
bound
fmull
lea
and
lock
ss
mov
ljmp
in
cmp
rcll
adc
movsl
mov
pop
adc
inc
lods
push
sbb
shlb
scas
mov
mov
loop
mov
dec
sbb
mov
mul
das
fdivs
and
daa
dec
int
fists
pop
cmp
pushf
dec
cmc
scas
dec
fsubrl
aad
mov
jo
fisttps
outsb
cmp
daa
mov
mov
pusha
aas
test
or
pop
sbb
ljmp
xor
push
rcll
fcoms
fdivr
pop
adc
ja
dec
push
repnz
sti
out
jb
inc
insb
cmpsb
sub
ret
or
xor
inc
lea
push
pop
sbb
push
cltd
cmc
cltd
loope
push
cmp
loopne
dec
jb
cld
pop
imul
fisubrl
test
mov
push
pop
cltd
cmpsl
subb
adc
adc
jl
lahf
push
out
sarb
hlt
mov
xchg
scas
lret
cmp
lods
in
dec
cmp
jae
sbbb
lods
pop
fwait
inc
bound
rorl
xor
inc
xor
shlb
xchg
inc
push
jb
pop
mov
idivb
xor
mov
imul
orl
and
js
and
xor
fs
or
fsubs
mov
jno
stos
mov
fsts
shr
aas
sahf
in
fldt
test
lret
ja
mov
and
fiadds
mov
loop
mov
inc
lcall
pop
pop
or
es
lock
lcall
aas
repnz
push
xchg
mov
imul
push
scas
lcall
cmovp
inc
arpl
xchg
xor
sbb
mov
leave
or
mov
xor
es
add
adc
std
push
loopne
es
testb
push
in
shrl
neg
push
mov
lahf
mov
test
js
push
jnp
jae
out
add
repz
mov
xor
xchg
roll
cmpsb
inc
mov
pop
mov
ss
and
mov
dec
xor
push
sbb
and
mov
cs
push
push
rorb
int
sub
lods
ja
sub
sub
repz
sub
insl
mov
mov
push
add
xchg
sbb
ret
lock
in
pop
lret
push
jo
lds
mov
pushf
cmpl
cwtl
loope
jbe
shll
inc
scas
adc
jge
mov
xchg
lahf
xchg
stc
in
cwtl
mov
cmp
jo
fnstcw
or
cmpsb
pop
xor
in
mov
pop
sbb
xlat
push
out
les
mov
xchg
psubusb
mov
daa
sbbb
rclb
aaa
adc
stos
adcl
rcll
je
je
xor
test
test
testl
add
add
jmp
cld
sbb
mov
sahf
jae
jbe
xor
mov
inc
or
ljmp
push
jnp
mov
mov
cwtl
adc
mov
lcall
mov
inc
iret
fdivrs
push
jb
into
sbb
cltd
or
and
repz
cmp
adc
movsl
push
shrl
aas
jp
lock
cmp
sub
ljmp
aaa
mov
ret
icebp
cmp
xor
sub
stos
jle
cmp
lods
inc
jge
js
push
stc
iret
fnstenv
stos
cmp
push
mov
jne
stos
mov
mov
mov
push
inc
inc
jmp
cmp
test
ret
outsb
aam
sub
rorl
xlat
outsl
push
mov
mov
and
fs
xchg
or
mov
ja
jmp
jg
sub
nop
sbb
cmpl
jg
int
insl
ret
subb
imul
sub
xchg
ret
cli
out
bswap
aad
sub
dec
mov
fs
mov
inc
mov
cmp
adc
test
out
push
dec
fucomi
lods
ret
xchg
push
in
rcrl
outsl
in
std
cmc
pop
add
ss
add
cmp
cltd
or
xlat
and
leave
pop
cmpsl
idivl
je
inc
roll
sahf
mov
int
push
push
mov
xchg
inc
bound
dec
out
mov
loopne
xchg
pop
arpl
jbe
lods
or
int3
sub
mov
mov
lcall
fs
xchg
xchg
out
pusha
push
xchg
xor
int3
in
pop
adc
je
bound
or
andl
mulb
xor
daa
add
mov
xchg
jno
fisttpll
xchg
fs
lret
cltd
sbb
cmpsl
mov
jae
les
aaa
cmp
notb
push
movsb
icebp
jge
add
or
lea
fadds
sbb
call
test
mov
call
xchg
and
push
cmp
or
pop
mov
sbb
cmp
in
sbb
ss
xor
shrb
xchg
fmuls
sub
jmp
dec
adc
filds
inc
stc
inc
movsb
rclb
test
inc
mov
out
fs
xor
enter
icebp
rcll
push
pop
shl
cwtl
inc
pop
xor
add
sbb
cmpsl
imul
sbb
call
push
psllw
popa
add
pop
clc
push
and
sbb
scas
scas
xor
roll
stos
sti
shl
jne
bnd
push
mov
add
outsb
jns
clc
clc
lret
push
sbb
xor
xchg
or
mov
and
inc
jns
jb
fwait
add
imul
addr16
push
mov
pusha
mov
dec
fucom
into
pusha
outsb
mov
cmp
push
pop
and
inc
aas
mov
jno
popa
sub
stos
xchg
jg
push
mov
push
sub
xor
jg
adc
push
mov
mov
rcr
sub
sub
daa
inc
mov
loopne
sbb
scas
xorb
sub
xchg
lock
loopne
std
pop
aad
int3
jno
aad
fadds
sbb
mov
pop
sbb
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
jmp
push
inc
sbb
pop
or
cld
movsb
adc
sarb
mov
mov
bound
push
mov
cli
xchg
mov
rcrl
cltd
cli
lods
rorb
mov
xor
push
sbb
mov
int3
and
in
xchg
mov
repnz
rorl
fcomi
leave
mov
out
iret
dec
xor
sub
add
sbb
in
mov
subl
inc
xchg
and
lret
and
aaa
and
inc
fdecstp
cmpsb
push
stos
gs
leave
pop
int3
les
movsl
std
push
les
push
pop
add
mov
mov
mov
dec
loop
add
popf
push
push
scas
push
sub
jae
out
mov
ror
inc
mov
scas
fisttps
jbe
and
arpl
push
mov
xchg
scas
sub
ljmp
out
mov
cmp
sbb
loope
push
and
xchg
mov
lret
outsl
js
lahf
push
ss
push
or
sub
xchg
pop
ret
inc
pop
sub
in
fldcw
xor
enter
inc
xor
aaa
pop
sub
inc
xor
sub
ficomps
cmp
push
cltd
pop
xor
cmpsb
popa
jmp
fisubs
js
test
jae
int
int3
and
and
notb
cli
add
js
gs
and
ret
test
push
xor
les
adcl
lods
cmp
lcall
xchg
pop
xchg
shll
sarb
inc
push
sbb
not
scas
sub
mov
repz
mov
cmp
mov
fsubr
dec
pop
call
cmpl
mov
cmp
je
daa
push
push
test
mov
pop
add
inc
fisubrl
iret
jb
test
add
pop
add
aas
cmpl
fldl
push
outsb
jnp
cmc
icebp
mov
jl
stos
daa
dec
ss
movsl
popf
jmp
enter
add
pop
mov
shlb
pop
gs
jp
inc
jo
cmp
adc
roll
or
jbe
mov
push
sbb
insb
sub
pop
inc
mov
jmp
dec
sbb
and
leave
jb
and
ret
stos
je
cmp
dec
and
jae
aad
cltd
adc
ret
or
incl
imul
jbe
cmpsl
fwait
test
or
xchg
sbb
mov
push
sbb
mov
jmp
jbe
ja
jns
sub
mov
mul
cwtl
rcll
lock
arpl
or
lret
push
xchg
test
and
or
dec
mov
mov
xor
pop
jp
dec
movsl
sarl
push
push
add
mov
mov
dec
bound
ds
out
out
add
fxch
rcrl
push
inc
add
xor
sarb
dec
stc
inc
out
popf
out
and
pushf
les
repnz
addr16
sub
insl
je
fbld
ja
xchg
into
cmpsl
fildll
icebp
lahf
pop
dec
cltd
pop
push
pushf
mov
dec
neg
push
mov
push
int3
add
insl
inc
loope
dec
adc
arpl
stos
mov
mov
or
adc
inc
inc
lret
sti
stc
imul
and
shlb
sub
xchg
in
cmp
jmp
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
jmp
cmp
mov
sahf
mov
leave
movsb
dec
test
mov
outsl
inc
cmc
xchg
sub
gs
push
mov
mov
outsl
jmp
cmp
jg
sub
cmc
rol
push
inc
push
int3
daa
add
das
push
pop
loope
jnp
xor
decb
outsb
inc
sub
push
sub
ja
mov
mov
push
negb
aad
std
adc
or
lret
push
mov
push
add
sbb
dec
fstpt
jp
push
xor
mov
int3
dec
fcoml
fldenv
test
cmp
mov
cmp
lods
mov
or
lods
pop
js
xor
into
adc
jle
sbb
das
xlat
push
icebp
jo
and
cmp
ja
jmp
ret
lds
jns
imul
mov
cmp
cmp
jecxz
xor
int
mov
shl
push
adc
ret
pop
clc
mov
or
bswap
sub
push
shll
sar
movsb
mov
mov
test
les
and
sbb
ds
rorw
cmc
add
mov
test
sub
jns
inc
dec
add
es
stos
xor
xor
push
inc
into
mov
dec
and
enter
fnstsw
xchg
sub
and
ror
inc
outsl
mov
xchg
mov
dec
aad
cmp
inc
out
dec
pop
mov
scas
leave
das
mov
adc
push
scas
int
push
mov
sahf
mov
push
cltd
stc
mov
or
dec
loop
xor
pop
cmp
mov
add
into
inc
xor
mov
jecxz
inc
ror
pusha
sub
mov
jns
arpl
xchg
lods
sahf
filds
xlat
lods
or
jg
mov
dec
pop
push
mov
pop
push
add
jnp
sub
push
imulb
jp
xor
xchg
hlt
cmp
jecxz,pt
xchg
inc
pop
gs
lahf
sub
add
xchg
leave
pop
adc
or
incb
and
repz
mov
mov
jge
mov
or
aaa
mov
mov
orl
mov
repnz
push
popa
inc
fisubs
lcall
into
je
mov
mov
push
push
hlt
std
pop
mov
ror
sub
mov
and
jg
jmp
mov
addl
cmc
adc
gs
add
xlat
push
jb
adc
xor
lcall
push
sbb
pop
gs
xchg
roll
inc
pop
xor
push
xchg
imul
dec
mov
test
mov
mov
sbb
fsubl
outsb
test
pusha
inc
add
xorl
rcrb
cltd
pop
mov
sahf
aas
push
jecxz
test
fiaddl
cld
sub
fcoms
in
xchg
lock
push
movsb
pushf
adc
lahf
jl
lea
xlat
push
jno
ds
jg
xor
inc
pop
rorl
sub
pop
sbb
mov
out
mov
data16
popa
fdivs
lds
or
push
inc
fadd
fisubl
fnstcw
cs
adc
inc
adc
or
inc
jnp
jb
imul
mov
popa
and
push
movsl
push
mov
cli
test
shll
out
fadds
jp
sub
hlt
fildll
or
vmovaps
jl
push
pop
push
aaa
ja
or
cmc
push
cltd
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
jmp
cwtl
push
popa
pop
stos
jl
xchg
mov
repnz
in
in
xlat
sarb
shlb
mov
jae
dec
pop
xchg
mov
push
sbb
push
pop
repz
sti
mov
sbbl
or
mov
cmpsl
xchg
int3
and
add
xor
cmp
inc
pop
and
push
es
ja
imul
jno
sub
popf
pop
test
inc
in
lcall
add
shrb
push
fsubrl
cld
test
xor
pushf
mov
aas
dec
lret
test
cltd
dec
leave
call
cmp
inc
mov
and
repnz
add
cli
jp
xchg
ss
xchg
shrl
jge
sahf
inc
cmp
push
adc
or
aaa
dec
push
rcr
mov
mov
rorb
lret
sar
dec
mov
jne
inc
test
add
loopne
les
outsl
push
sti
pop
xchg
xchg
jle
pop
cld
xchg
jmp
das
mov
add
stc
insb
pop
out
fisubrs
bound
scas
sub
mov
fiadds
cmp
stc
aas
insl
inc
mov
mov
jnp
or
xchg
mov
xchg
in
daa
mov
cmpsb
mov
fsubs
push
add
cs
test
jecxz
int
das
sbb
stos
and
pop
iret
mov
out
push
xor
push
push
jbe
xorl
cmpsb
add
pushf
scas
lock
in
sub
cmp
dec
insb
in
ds
icebp
loopne
test
icebp
add
jg
sbb
rorb
xor
ss
lods
or
xor
dec
or
mov
lcall
dec
jle
sbbb
loopne
pop
mov
pop
add
mov
lret
imul
and
pop
inc
pop
sub
or
push
inc
test
cli
cmp
jecxz
inc
sub
lds
es
cmc
stc
xchg
and
or
add
popf
icebp
sbb
int
outsb
push
dec
fdivr
or
test
loopne
dec
repz
testb
push
ret
xlat
fisubrl
lock
lret
pop
sbb
cli
mov
add
sbb
adc
les
std
xchg
das
add
pop
cmc
gs
inc
scas
xchg
pop
mov
push
stos
dec
pop
dec
cmp
xor
add
fidivl
imul
mov
mov
in
mov
push
mov
push
pop
push
dec
pop
jb
repz
xor
lock
and
pushl
pop
add
pop
adc
out
in
jae
pop
jnp
push
dec
test
push
push
in
cmp
lcall
test
cmpsl
sbb
pop
sbb
jmp
xchg
add
xor
add
add
lods
push
dec
aaa
and
dec
mov
sub
les
xor
subb
into
or
orb
cwtl
mov
add
add
push
sti
and
and
mov
push
loope
mov
test
jle
pop
shrl
mov
addr16
in
aas
ja
aas
mov
sub
dec
adc
mov
in
jb
adc
jmp
xor
sub
hlt
dec
mov
enter
dec
iret
mov
icebp
outsb
xchg
jbe
cltd
mov
lds
dec
fs
js
cmp
mov
pusha
push
inc
lret
int3
ficompl
pop
xchg
stos
mov
shrb
pop
div
mov
or
mov
xor
div
imul
jmp
xor
in
scas
imul
les
sarb
push
aaa
fstps
data16
sub
cltd
data16
mov
test
aam
cli
push
in
pop
dec
mov
mov
fs
push
lds
gs
out
repnz
or
out
popf
fadd
pop
or
or
sbb
xadd
lret
pop
rcll
call
shlb
insb
dec
mov
ljmp
pop
sbbl
sbb
outsl
shll
xor
inc
ret
jns
pop
xchg
push
xchg
pop
push
call
dec
testb
in
inc
or
dec
add
arpl
sub
push
cltd
mov
rorl
test
dec
cmp
or
mov
mov
stc
insb
insb
jge
mov
cmc
push
or
aad
jecxz
mov
pop
out
xor
aam
scas
lods
or
or
movups
dec
loope
add
jbe
jnp
inc
add
jns
fdivrp
aad
push
jbe
mov
ror
xchg
lahf
cmp
sbb
ja
lods
mov
and
lahf
push
std
jnp
mov
out
test
cmp
push
loop
cltd
dec
dec
fnstcw
sbb
mov
and
lret
pushw
mov
jno
push
pop
bound
lcall
icebp
pop
mov
or
xchg
aad
call
shll
add
js
arpl
movsl
jmp
in
sbb
cmp
cmp
je
lret
popa
lods
adc
jo
daa
mov
ljmp
sub
jo
jb
push
push
lds
jge
push
jbe
icebp
sbb
push
rorb
pop
mov
cmpsl
shl
push
or
lret
stc
aad
test
fcompl
movsb
adc
aaa
push
mov
jnp
addr16
insl
stos
fidivrs
jmp
or
daa
cltd
mov
sub
dec
mov
mov
add
test
lret
ss
pop
loope
ljmp
outsl
sbb
imul
cmpsb
scas
xchg
and
loope
stos
and
jne
sbb
ljmp
xchg
jecxz
ljmp
add
gs
xor
xor
xor
jo
cltd
adc
and
and
incl
ret
mov
jp
aas
adc
lcall
lods
movsl
mov
mov
xlat
das
adc
fwait
or
mov
fdivrl
xchg
dec
push
and
dec
sahf
jnp
pop
out
out
and
andl
and
xor
dec
sub
and
jg
aaa
pop
add
lods
mov
aaa
sbb
push
inc
xchg
inc
ret
xor
push
scas
xchg
sub
mov
scas
mov
mov
cltd
daa
mov
mov
les
sub
pop
mov
or
inc
dec
cmp
repz
iret
and
sbb
pop
mov
into
adc
lods
pop
cmpsl
mov
fimuls
push
jae
xchg
cmp
mov
stc
and
arpl
mov
in
pop
sbb
ja
ret
aas
dec
mov
jge
push
and
aad
adc
xchg
out
push
sahf
xchg
pop
daa
mov
scas
sahf
imul
cltd
xchg
hlt
push
imul
xchg
hlt
jns
cmpsl
outsl
in
outsb
xor
mov
push
hlt
cmp
rolb
movsl
arpl
movsl
sbb
dec
inc
inc
jge
pop
pop
xchg
and
daa
xor
insl
inc
and
pop
xor
lea
mov
and
and
sub
xor
mov
jmp
pop
dec
xchg
jmp
cmp
jns
inc
aad
test
popf
sarb
push
decb
xor
cltd
xor
and
jle
push
aad
inc
lds
hlt
pop
pop
xchg
insb
and
lret
shld
fwait
fwait
daa
inc
push
push
loop
fnstcw
out
cmpsb
shll
cmp
loope
cmp
adc
cmp
push
in
gs
icebp
push
mov
xchg
pop
mov
xor
inc
mov
sar
add
or
and
pop
adc
cmp
lcall
sti
leave
mov
cmp
xor
push
push
cs
fbld
mov
shll
jae
into
repz
stos
imul
pop
add
pop
int3
cmpsb
shrb
mov
mov
ja
and
orl
stc
jno
or
mov
push
jnp
jbe
rcrl
pop
fsubs
and
lahf
xor
adcb
loope
jl
add
nop
jb
xchg
sub
push
inc
sub
jmp
xchg
mov
test
sarl
int3
insb
push
mov
mov
xor
rorb
leave
pop
dec
shr
sti
push
adc
push
mov
repz
loopne
andb
movsl
mov
pop
mov
sbb
mov
repnz
into
xchg
push
outsl
adc
test
ds
scas
mov
out
inc
push
aas
test
pop
add
fisubrl
das
outsl
fildl
cs
adc
push
mov
dec
in
mov
pop
mov
jne
jg
pop
out
pop
sub
popf
mov
jecxz
mov
sub
add
icebp
imul
pop
push
dec
mov
hlt
out
lret
decl
xchg
cmp
fnstenv
jmp
into
test
aam
insl
imul
mov
sub
sbb
int3
mov
lahf
adc
dec
std
mov
notl
pushl
or
jmp
cli
sbb
movsl
imul
lods
adc
outsb
repz
nop
fsubrl
aas
push
cs
mov
lcall
xchg
dec
mov
scas
jecxz
call
xor
sbb
add
fimull
adc
adc
lods
jmp
sbb
ja
xor
or
add
and
es
jl
xchg
rcrl
fdivrl
add
hlt
adc
imul
or
dec
rcr
call
out
push
out
add
sarb
pop
sbb
bound
inc
ficoms
add
jne
xor
sbb
mov
push
mov
pop
js
push
mov
ficoml
fsubrl
fcoml
int3
icebp
and
in
inc
jecxz
inc
sub
hlt
pop
pop
dec
test
stc
sbb
mov
aas
pop
aam
jl
push
push
jbe
lahf
std
jno
xchg
out
cwtl
cmp
push
add
fptan
shlb
rolb
inc
push
lds
cmp
call
jecxz
push
adc
in
mov
mov
aam
fbstp
mov
xchg
xor
out
push
jns
mov
dec
enter
stos
push
push
ds
xchg
inc
pop
adcb
inc
loopne
shr
in
pop
stc
or
add
or
gs
pushf
inc
mov
ja
movsb
jbe
dec
aam
cmp
push
cmpsl
aad
jp
push
stos
andb
int
dec
mov
fidivs
mov
sub
repnz
sbb
mov
cli
lds
push
fnsave
test
and
icebp
mov
push
test
add
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
jmp
daa
cmp
cmpsl
xchg
dec
sahf
movsb
jle
fnstsw
mov
jge
xchg
mov
jnp
out
mov
push
add
das
inc
das
mov
xchg
stc
repz
or
imull
addr16
pushf
push
fstpt
fcomps
sub
sbb
in
imul
cmp
repz
xor
jns
sbb
jo
mov
mull
pop
pop
jl
es
add
lea
dec
lret
mov
or
push
test
adc
out
xor
imul
test
mov
xor
mov
jle
aad
cmp
dec
jbe
mov
mov
out
fwait
xchg
dec
push
out
cmp
cmpsl
add
mov
xor
mov
in
js
push
lods
jge
xor
fs
sbb
pop
mov
xchg
imul
and
mov
sbb
xchg
aaa
mov
or
lea
fdivl
addr16
xchg
xor
add
out
push
addl
inc
mov
sbb
jg
imul
lea
lea
call
ret
mov
std
cmpsl
mov
js
fnsetpm(287
scas
mull
das
lret
scas
pop
sub
pop
test
push
rol
pop
repz
mov
fmulp
insl
mov
push
xlat
int3
movsl
cld
mov
stos
jp
mov
outsl
test
sti
loop
jl
fwait
data16
lea
pop
dec
out
ljmp
mov
adc
js
scas
loope
mov
scas
and
repnz
and
inc
fcomi
lcall
sti
ja
fidivs
shll
cmpsb
sbb
sbb
inc
inc
mov
loop
push
xlat
and
inc
out
scas
into
inc
out
fnstenv
jno
xchg
stc
sbbb
icebp
addr16
mov
lods
xchg
mov
push
add
aam
mov
maxps
or
sub
inc
and
xchg
out
xor
or
xor
adc
jl
repz
loope
lret
sti
push
or
outsb
es
cmp
dec
jmp
and
decb
mov
add
ja
movsb
add
aaa
imul
adc
pcmpgtd
adc
sbb
pop
mov
jge
and
adc
jg
sti
pop
out
xchg
addb
cmp
inc
jbe
sti
cwtl
cmpsb
in
pop
or
int
movsl
xor
fdivs
ja
clc
cmp
adc
popa
imul
lods
cmpsl
inc
js
sarb
inc
inc
test
insl
sahf
stos
mov
or
lret
and
bound
and
and
sub
pop
cli
gs
into
sub
adc
icebp
sub
shll
stos
xchg
iret
jns
ret
popa
and
inc
jbe
sahf
faddp
shrl
ljmp
invd
insl
cmp
mov
push
fsubr
push
xchg
push
mov
jb
mov
lock
mov
scas
pop
jg
rorl
out
pusha
jecxz
dec
insl
sbb
out
jnp
test
push
sub
add
mov
push
stos
into
push
mov
mov
jo
adc
aas
lods
cmp
iret
stos
cltd
push
or
rol
sbb
jge
xchg
adc
hlt
push
jge
rcll
jle
xor
xchg
push
push
cmp
push
mov
lods
inc
divb
jno
or
repnz
cmpsl
push
mov
mov
jmp
jo
mov
mov
rcl
mov
stos
sarb
dec
sbb
andl
xchg
add
les
pop
mov
mov
jle
or
mov
loop
icebp
sbb
shl
mov
sub
push
ret
out
imul
ss
in
in
sbb
or
pop
push
outsl
or
pop
arpl
cmpsb
and
popf
pop
cmpsl
clc
push
cmp
mov
aas
jge
pop
push
mov
repz
sub
icebp
pop
mov
test
xor
in
aad
sub
jnp
pop
cmp
inc
lock
xorb
in
ret
mov
test
jg
in
jns
xor
outsl
jo
xor
jmp
sarb
loopne
push
push
mov
cltd
mov
lods
mov
ja
push
test
stc
idivb
clc
ret
push
pop
adc
call
xor
gs
lahf
ja
or
xchg
sahf
cmp
dec
addr16
cmpsb
cltd
jecxz
pop
mov
lret
mov
adc
arpl
dec
aad
cltd
cld
mov
mov
faddl
insl
pop
sbb
stc
pop
xor
sub
or
xor
mov
mov
mov
sub
or
shlb
xchg
fucomip
xchg
mov
add
outsl
rcr
inc
pop
mov
ss
mov
ficompl
push
cmpsl
mov
fwait
inc
mov
push
repnz
leave
jnp
mov
inc
fistpll
mov
ret
dec
mov
ficomps
aad
lret
out
jg
lret
hlt
mov
cmp
out
adc
add
gs
imul
push
enter
aam
test
mov
outsl
sbb
sbb
aas
sbb
jle
pop
mov
sub
cmp
aas
stos
pop
lods
push
enter
jae
fiaddl
call
fistpl
sub
scas
fisttpll
cmpsb
adc
sub
loop
push
push
cwtl
ss
push
xor
inc
dec
add
lods
push
xor
mov
popa
scas
or
test
lret
movsl
insl
mov
jb
imul
fisttpl
fldt
inc
mov
mov
mov
shrb
dec
cmpsb
scas
dec
mov
in
push
and
jbe
push
movsl
mov
cmpsl
xchg
test
xchg
xor
icebp
sbb
sub
jle
insb
pop
push
xor
insl
fdivr
adc
xor
add
fs
lret
cltd
shl
fnsave
xchg
dec
pop
and
pop
daa
and
in
jmp
mov
cmp
fstpt
call
dec
mov
or
adc
inc
jo
dec
test
mov
mov
vmwrite
sbb
or
xor
push
cmp
or
mov
mov
mov
jg
outsl
adc
and
mov
jmp
lcall
mov
arpl
jecxz
inc
inc
inc
mov
jg
push
mov
xor
ret
inc
hlt
lcall
mov
jmp
stos
es
aas
lcall
jo
or
inc
cltd
jae
or
jl
fdivs
fiadds
dec
cmp
jbe
loop
xchg
test
mov
sub
mov
dec
lahf
cmp
call
or
jmp
popf
in
inc
dec
add
test
cwtl
jns
jo
ret
fidivl
ss
test
adc
add
decl
or
adc
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
xchg
or
mov
jle
fstl
les
mov
dec
or
bound
jmp
mov
out
cmpsb
hlt
mov
inc
or
lock
adc
xor
mov
sbb
cmp
das
pop
and
test
xor
mov
pop
or
mov
mov
ret
mov
inc
imul
or
imul
mov
sbb
jmp
negl
lods
mov
incl
lahf
outsl
push
insl
adc
add
cmpsl
imul
push
sbb
out
ret
imul
loope
fnstcw
movsl
ljmp
pop
movsl
add
mov
rclb
lea
fidivrl
add
shrb
inc
shrd
ffreep
mov
xchg
shlb
fistps
imul
adc
cmpsb
sbb
jge
lret
or
push
xchg
add
inc
je
sub
imul
out
scas
cmp
fnstcw
adc
idivl
cmp
sub
es
mov
inc
enter
inc
cld
jle
scas
orb
inc
call
or
mov
repnz
sub
xchg
cli
lcall
jmp
cmp
push
out
mov
mov
sub
dec
fbstp
mov
in
shl
stc
jnp
mov
lahf
out
int
lea
mov
dec
mov
fisubl
sub
push
xchg
mulb
decb
lods
cmp
andl
mov
mov
stos
push
pop
fisttps
insb
mov
dec
push
add
dec
or
mov
push
cmp
xlat
xor
ja
cmc
jb
adc
fldenv
and
jnp
xor
nop
dec
lar
cmpsb
mov
xchg
inc
adc
jmp
xchg
lret
mov
js
mov
stos
xchg
lds
pusha
xor
mov
cmp
pop
enter
pop
movsb
aaa
mov
loop
jno
pop
out
sahf
in
stos
sub
shr
inc
insl
es
inc
cmp
push
js
repz
pop
repz
push
daa
stc
add
jne
fs
pop
js
rcll
rclb
fldt
and
push
out
clc
sub
or
or
mov
cltd
jecxz
daa
cmc
jle
int
addb
adc
and
mov
aas
pop
pusha
dec
fbstp
sti
sbbb
push
out
or
and
sub
sub
test
cmpl
stos
rclb
fcmovbe
gs
call
mov
mov
cs
iret
push
fidivrl
ret
and
imul
xor
cmpsb
adc
mov
jl
jae
inc
arpl
xor
push
push
out
and
xor
and
call
dec
fwait
xchg
and
jle
adc
pop
into
fstl
aad
std
out
fcmovne
in
or
xchg
hlt
scas
and
inc
dec
stos
pop
lahf
jp
repz
out
test
sub
rorb
je
movsl
outsb
pop
sbbb
jnp
xchg
jae
jp
cli
pop
push
ljmp
or
pop
mov
adc
mov
sahf
in
mov
sbb
inc
cmpl
idiv
pop
fistpll
inc
and
xor
bnd
ds
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
push
sub
mov
movsb
dec
daa
add
pop
mov
mov
mov
fistps
cmc
movsl
xor
mov
jb
stc
mov
dec
sub
in
push
mov
scas
mov
pop
inc
dec
clc
cmpl
scas
popf
and
pop
xlat
push
fwait
out
test
or
stos
ret
dec
jmp
in
loop
movsl
movsb
sbb
popf
push
cmp
sub
push
loopne
pop
dec
mov
mov
jne
in
mov
daa
jo
loop
or
sbb
mov
dec
lea
leave
mov
xchg
push
divl
pop
cmpsl
xchg
sarb
xchg
mov
pop
les
pop
gs
les
nop
gs
shrb
jb
mov
jl
sub
push
push
cmpsb
shlb
xor
dec
and
add
stos
mov
jmp
xor
iret
inc
jo
std
std
mov
and
dec
jbe
mov
adc
stos
push
mov
pop
xchg
mov
sbb
sbb
test
test
int3
jecxz
mov
adc
into
adc
add
shll
test
ret
mov
in
in
stos
js
push
addps
xor
jbe
shl
loopne
xchg
subl
fnstcw
bound
stos
insb
pop
bound
or
mov
sub
jl
and
rcrb
gs
adc
scas
mov
daa
mov
dec
sbbb
bound
mov
xor
and
popf
lahf
dec
aam
xchg
mov
pop
add
shr
jo
icebp
scas
push
inc
pmaddwd
push
imul
adc
clc
test
mov
cmp
loop
enter
cmc
push
ss
mov
test
inc
idivl
movsb
push
xchg
mov
mov
inc
loopne
lahf
faddl
popf
dec
adc
fldcw
bound
sub
cwtl
jecxz
aam
sub
adc
xchg
mov
pop
jae
aas
xchg
xchg
inc
mov
in
cmp
pop
sbb
mov
movsb
call
adc
movsl
fists
mov
mov
push
fldenv
sti
dec
popa
faddl
sti
roll
dec
inc
ficoms
cmp
cs
cmpsl
or
lods
icebp
enter
xchg
test
dec
adc
add
rol
and
gs
addr16
adc
push
push
and
nop
jge
cmc
popa
test
jge
ret
call
push
xchg
adc
ljmp
mov
cld
std
cmp
pop
int
sahf
decb
enter
test
sbb
xchg
je
shr
icebp
pop
mov
mov
fidivrl
xchg
test
jnp
insl
addl
xor
pop
enter
sub
fs
out
inc
adc
mov
rcrl
lds
pop
push
sarb
imul
mov
insl
cli
lods
pop
jecxz
sub
repnz
aam
fildll
daa
cmp
sbb
lods
out
rcl
or
mov
mov
xor
pop
out
lock
cmpsb
or
cmp
rol
pop
jb
sbb
xchg
jno
lret
test
push
bound
cmp
push
pushf
mov
jns
imul
jl
inc
mov
dec
out
fs
lea
clc
xchg
loope
rol
dec
lods
cmp
negb
pop
xchg
iret
push
shlb
test
mov
adc
pushl
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
sbb
shrl
daa
xchg
popf
adc
sahf
lods
rol
dec
les
mov
js
cmp
inc
ja
push
aaa
pop
adc
pop
inc
xchg
aas
ljmp
ljmp
loopne
inc
dec
mov
leave
and
rolb
adc
pop
and
jecxz
aad
inc
sbb
leave
jl
test
out
int
rcll
fldcw
add
xor
loop
add
push
sbb
cmpb
sbb
dec
pop
jbe
mov
and
inc
mov
neg
das
dec
xchg
jl
inc
ljmp
xor
ljmp
ja
mov
orl
addr16
add
hlt
loop
adc
aam
sahf
mov
mov
lods
rol
xchg
push
imul
or
xor
rorb
dec
lock
lea
jbe
adc
sbb
pusha
jae
mov
push
and
push
pusha
test
jle
dec
enter
adc
dec
mov
xchg
and
jnp
jo
push
lods
and
inc
clc
aam
inc
pop
mov
dec
in
mov
sbb
inc
or
ds
int
enter
xchg
pop
xchg
push
sbb
adc
sbb
jb
mov
push
fwait
ljmp
fsubr
add
xchg
xchg
fisubrs
jl
jne
xchg
lds
sub
or
pop
addl
arpl
cwtl
xchg
mov
xchg
and
std
mov
sub
stc
mov
pop
mov
push
jmp
imul
pusha
ss
push
xor
or
jmp
lods
push
adc
js
in
dec
popa
jne
sbb
or
and
les
xchg
jo
pop
mov
cs
sbb
movsb
test
mov
mov
out
aad
dec
subl
mov
rclb
lock
mov
inc
loopne
dec
mov
jecxz
xchg
cmp
add
scas
lret
dec
ds
insl
mov
insl
pop
ljmp
or
mov
mov
cmp
jae
sti
adc
adc
test
mov
adc
jecxz
add
or
stos
dec
inc
in
aam
cmp
repnz
xchg
pop
icebp
xor
mov
sarb
pop
lods
push
mov
cs
mov
adc
cmp
bnd
incb
fwait
rolb
mov
xchg
push
xor
in
dec
pop
int3
dec
ljmp
stos
dec
addb
pop
movsb
addr16
xchg
jp
clc
push
push
sbb
sahf
adc
mov
shrl
push
pushf
mov
pop
xor
ja
ja
push
stos
outsl
mov
and
cmp
adc
mov
or
adc
adc
pusha
dec
or
adc
sti
rolb
mov
fcoms
mov
push
lcall
push
mov
sbb
push
filds
sbb
sbb
insl
in
and
cmpsl
jne
fistl
stc
xor
xchg
and
and
andb
sub
cmp
push
adc
mov
enter
aas
lds
lcall
cmpsb
aaa
imul
and
fdivr
sub
ds
cmpsb
js
mov
imul
inc
pushl
add
outsl
xor
mov
decl
decl
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
jmp
jg
sbb
outsb
mov
mov
mov
or
pop
lock
rorl
push
adc
lret
or
jmp
popa
sbb
mov
test
pusha
outsl
ret
jmp
fcomps
scas
stos
push
push
popa
cmp
inc
push
add
xchg
pop
stos
cld
mov
add
repz
dec
push
les
sbb
xor
jl
jbe
xor
jp
out
cli
inc
xlat
in
dec
or
decl
decl
mov
xorl
clc
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
notl
movl
movl
jmp
not
cmpl
jl
push
call
addl
andl
sub
or
sub
push
dec
push
mov
or
movl
jne
mov
mov
xor
inc
div
sbb
mov
mov
adcl
div
movl
mov
jmp
mov
mov
xor
mov
mov
movl
shr
movl
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
mov
sbb
add
mov
mov
movl
pop
pop
pop
leave
ret
cmp
movl
jae
cmp
movl
jae
shld
shl
ret
movzwl
add
mov
xor
movl
and
shl
ret
xor
xor
ret
add
add
add
add
xchg
push
into
jns
push
xor
jne
and
mov
popf
bnd
add
add
gs
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
outsl
add
add
jne
je
xor
xor
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
mov
add
gs
arpl
push
outsl
inc
jne
jae
jb
adc
inc
add
sub
fsubrs
inc
add
inc
push
lea
movsl
popf
movsl
jno
xchg
movsl
or
andl
movsl
mov
lea
movsl
add
xchg
movsl
or
andl
movsl
mov
in
xchg
movsl
adc
movsl
popf
movsl
sbb
movsl
fwait
movsl
xchg
icebp
sub
adc
movsl
fwait
movsl
add
xchg
movsl
sbb
andl
or
adc
movsl
fwait
movsl
add
xchg
movsl
xor
movsl
andl
insl
imull
dec
adc
movsl
fwait
movsl
jae
popf
movsl
sbb
movsl
fwait
movsl
andl
dec
testl
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
pop
movsl
xchg
movsl
push
movsl
mov
roll
dec
lock
imulb
xchg
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
cmp
movsl
fwait
movsl
xchg
lock
testb
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
cmp
movsl
fwait
movsl
andl
in
imul
push
iret
adc
xchg
movsl
cmp
movsl
popf
movsl
jnp
xchg
movsl
fwait
movsl
xchg
movsl
shl
shr
lock
iret
push
das
adc
push
unpcklps
xchg
movsl
adc
lahf
movsl
cmp
mov
shlb
shrb
push
outsl
adc
xchg
movsl
add
inc
and
inc
add
add
sub
cmp
inc
add
inc
add
addb
sub
int3
sub
xor
inc
add
daa
inc
add
sub
pushf
daa
inc
add
push
movsl
scas
or
inc
add
sub
adc
inc
add
sub
xor
inc
add
and
inc
add
sub
scas
fwait
push
movsl
cmp
mov
shlb
add
add
loopne
jbe
pop
cmpsl
add
inc
add
lret
arpl
addb
js
push
push
pop
xor
cmpsb
mov
xchg
test
stos
fildl
movsl
stos
filds
movsl
cmpsb
fildl
movsl
mov
fildl
movsl
mov
fildl
movsl
mov
push
movsl
mov
push
movsl
mov
push
movsl
out
fildl
movsl
decl
adc
xor
inc
add
jae
jns
fwait
push
movsl
cmp
xlat
movsl
dec
add
xor
sbb
hlt
stc
sarb
inc
pop
jg
add
add
inc
add
inc
add
push
movsl
jg
inc
movsl
push
movsl
inc
movsl
std
movsl
jmp
push
movsl
push
movsl
dec
movsl
std
movsl
jmp
jge
push
movsl
jg
std
movsl
jmp
jge
dec
movsl
inc
movsl
jne
pop
movsl
jnp
dec
movsl
fwait
movsl
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shll
rclb
iret
xchg
dec
xor
sbb
imul
je
mov
imul
enter
popf
mov
dec
xchg
lock
inc
or
or
js
popa
pop
jecxz
movb
cs
inc
stos
inc
ds
enter
movsb
sbb
fdivrs
inc
add
ja
gs
inc
add
cli
fbld
add
add
add
add
push
cmp
push
imul
jb
gs
jecxz
shrl
cmp
jno
outsl
jae
popa
je
bound
je
outsl
test
in
jne
bound
popa
jbe
outsw
jns
imul
pusha
and
gs
insl
ja
gs
jns
jb
add
add
and
imul
imul
fldcw
fimuls
cmp
fldcw
lods
repnz
inc
outsl
je
dec
popa
jp
push
imul
push
lds
add
mov
jle
data16
jne
add
add
fstps
popa
jae
popa
js
outsl
add
mov
popa
insb
je
jne
imul
dec
loope
out
test
popa
jb
jne
outsl
bound
add
jne
outsl
js
add
or
add
gs
jns
jo
je
push
jns
outsl
popa
jns
cmpsl
scas
or
adc
popa
jns
jne
jae
imul
jb
imul
out
push
popa
arpl
imul
xchg
push
ja
cltd
adc
pop
fldenv
adc
arpl
test
cmpsb
xchg
fsubr
arpl
fsubs
cltd
jo
xchg
addb
push
ja
adcb
cmp
adcb
xorb
xchg
xor
cld
xchg
outsl
mov
jo
out
lea
add
push
ja
adcb
hlt
push
or
xchg
mov
xlat
out
cld
xchg
mov
xorb
xchg
cmp
jo
out
lea
add
push
ja
cltd
adc
pop
fsubp
xor
outsl
adc
arpl
test
out
fwait
mov
fwait
cld
or
jo
xchg
addb
push
ja
adcb
cmp
adcb
xorb
xchg
out
mov
cld
xchg
das
stos
jo
out
lea
xchg
cmp
sbb
adc
dec
shrl
std
dec
xchg
test
or
xchg
test
or
orb
insl
or
or
or
adc
in
lea
pop
mov
out
mov
movb
xchg
lea
add
out
xorb
out
xor
xchg
xchg
dec
repnz
xor
xchg
mov
or
mov
out
mov
mov
cli
lea
lea
push
and
inc
out
or
imul
push
xor
push
add
lock
cmp
mov
in
mov
lea
lea
in
les
add
xchg
or
loop
scas
in
sti
in
ret
cmp
mov
subb
subb
scas
fsubr
test
fiaddl
in
test
fimull
out
mov
leave
bound
or
xlat
adc
scas
lahf
dec
push
xor
outsl
lea
bound
or
xlat
dec
bound
or
xlat
xchg
popf
mov
in
decl
adc
inc
xlat
andl
or
mov
lea
cmc
mov
bound
lea
stc
xchg
cmp
aad
adc
xor
push
lock
push
lock
popf
stos
lahf
icebp
mov
out
in
pushf
stos
fwait
mov
in
or
cmp
ja
and
mov
in
inc
jo
out
test
les
scas
in
js
xchg
cmp
ja
and
mov
in
loop
lahf
loop
test
cmp
out
or
in
out
loop
lahf
cli
lea
lea
push
andb
cmp
push
in
cmp
stc
in
out
out
or
bound
jbe
xor
in
lret
out
in
loop
lahf
and
mov
outsl
inc
push
loop
test
in
lea
cmp
push
in
push
lock
sub
out
in
addb
mov
lock
lret
mov
or
lea
adcb
sub
xorl
ja
les
mov
xchg
lea
mov
pop
cmpsl
test
outsl
dec
ja
aas
cmpsl
test
outsl
lea
ja
mov
sub
out
test
jl
scas
xchg
lea
in
xor
xorl
lea
addl
and
cmpb
pop
ja
fcmovnu
orb
addl
test
in
jg
dec
push
out
or
xor
cmp
dec
dec
xchg
lea
lds
adc
inc
xlat
sbb
inc
and
inc
out
push
jo
test
test
les
lea
in
je
mov
cltd
adc
arpl
and
test
ja
push
xlat
mov
or
push
mov
in
mov
outsl
or
push
ja
add
add
ja
inc
push
lds
mov
cmp
and
mov
xor
xor
push
dec
jne
pop
mov
out
adc
or
mov
decl
and
pop
xor
mov
lea
mov
das
mov
push
lds
das
aas
xor
aas
xchg
in
push
push
add
xor
sub
sbbb
repnz
dec
dec
cltd
subb
jns
stos
xchg
cld
jns
mov
dec
cld
jns
cltd
cmpb
test
xchg
addb
lea
mulb
cmp
cmc
and
cmp
out
xorb
xchg
mov
lahf
push
mov
clc
sub
outsl
cmp
mov
or
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
jl
mulb
cmp
mulb
es
and
cmp
cmp
push
ja
loop
popf
push
ja
push
ja
jl
bound
lea
jns
lea
xchg
mov
push
mov
xchg
clc
sub
sti
push
ja
xorb
xchg
mov
push
mov
xchg
clc
sub
sti
push
ja
jl
jp
or
lea
pop
lea
out
lea
dec
dec
add
or
or
scas
xlat
pop
dec
lock
add
lock
jb
ja
mov
ja
xor
push
je
xchg
or
mov
ja
xorb
lock
mov
lea
mov
or
push
mov
sub
mov
ja
mov
sbb
ja
subb
ja
subb
ja
xorb
lock
cmp
add
xchg
push
cmp
dec
xlat
out
add
xor
pop
cmp
lea
xchg
mov
push
jle
mov
arpl
or
in
lea
int
cmp
ja
or
cmp
xchg
gs
adcb
lea
dec
dec
stos
adcb
lea
adc
dec
bound
lea
push
push
dec
push
dec
dec
dec
outsb
mov
pop
dec
dec
dec
jg
push
fwait
jl
gs
dec
dec
stos
lock
aas
cld
dec
insl
dec
dec
dec
xchg
push
inc
mov
jl
sub
mov
xor
scas
push
fwait
jl
cmp
lock
imul
inc
dec
dec
dec
xchg
push
inc
mov
out
or
cmp
in
push
push
ja
xorb
int
cmp
xchg
mov
lldt
ja
aas
xchg
dec
dec
dec
outsb
mov
push
dec
dec
dec
jg
aas
xchg
jl
aad
dec
dec
popf
or
jl
fisttpll
dec
cmpsl
xchg
lock
jl
in
dec
dec
xchg
add
xchg
dec
dec
dec
outsb
mov
movsl
dec
dec
dec
jg
aas
xchg
jl
lods
dec
dec
dec
popf
or
jl
mov
dec
dec
cmpsl
xchg
lock
jl
mov
add
xchg
lea
dec
jno
ja
xor
push
je
push
mov
sub
xor
arpl
lea
lock
push
je
push
mov
sub
xor
inc
std
xorb
mov
into
xchg
cmp
lea
out
andb
lea
ja
or
cmp
lea
xor
adcb
lea
out
sbbb
lea
push
sbb
fwait
cmp
ja
or
cmp
fwait
out
push
ja
xorb
pop
xor
lea
push
sbb
dec
dec
dec
xchg
lea
or
cmp
fwait
out
xorb
pop
xor
lea
push
sbb
dec
dec
xchg
cmp
ja
or
cmp
fwait
out
in
mov
lea
xorb
pop
push
jb
dec
add
loopne
or
ss
push
arpl
mov
push
or
push
dec
push
rolb
xor
lea
push
xchg
int
and
lea
or
cmp
fwait
out
push
ja
out
in
mov
lea
pop
in
out
sub
stc
xor
adc
loop
stos
push
je
sub
sub
mov
sbb
or
cmp
mov
out
push
je
sub
sub
mov
sbb
dec
dec
xchg
cmp
scas
xor
adcb
mov
or
clc
sub
arpl
xlat
mov
cmp
stc
xor
push
je
xchg
sub
in
ja
push
ja
xorb
push
sbb
lock
push
je
sub
sub
mov
ja
push
ja
xorb
lock
push
je
sub
or
mov
lock
xorb
mov
dec
orl
xor
arpl
xlat
push
dec
xlat
out
add
or
push
ja
les
xorb
lock
adcb
mov
or
clc
sub
outsb
out
xorb
lock
push
push
mov
sub
xor
arpl
lea
lock
push
push
mov
sub
xor
arpl
lea
lock
push
push
mov
or
mov
adc
xchg
stc
push
adc
mov
or
clc
sub
in
mov
lock
in
xorb
ja
xorb
ja
insb
mulb
cmp
inc
jl
xor
outsl
cmp
inc
push
je
push
mov
or
mov
ja
xorb
lock
push
je
push
mov
or
mov
ja
jl
ds
and
cmp
fisubs
cmp
inc
push
je
push
mov
sub
xor
arpl
or
pop
in
lea
lea
adcb
mov
sub
xorb
sti
push
jb
add
ja
xor
push
je
push
mov
sub
xor
arpl
fsts
xorb
lock
push
je
push
mov
or
mov
ja
xorb
lock
je
push
mov
or
mov
lock
and
ja
xor
push
je
push
mov
sub
xor
arpl
or
or
lea
scas
xorb
ja
push
out
push
ja
pop
cmc
and
cmp
pop
jl
push
hlt
and
cmp
repz
cmp
testl
push
mov
or
mov
ja
subb
cmp
dec
or
dec
ljmp
dec
xchg
dec
dec
dec
or
cmp
ja
xor
push
je
push
mov
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
sub
xor
or
mov
lock
adcb
mov
or
clc
sub
in
mov
lock
loopne
out
orb
dec
dec
sbbb
dec
dec
dec
push
je
jle
xchg
clc
sub
sti
in
mov
loopne
add
std
adc
add
push
ja
xor
adcb
mov
sub
adcb
xchg
push
out
push
subb
testl
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
push
mov
sub
mov
lock
or
mov
lock
adcb
mov
or
clc
sub
in
mov
lock
loopne
out
orb
dec
dec
sbbb
dec
dec
dec
push
je
jle
xchg
clc
sub
sti
in
mov
loopne
add
std
adc
add
push
ja
xor
adcb
mov
sub
adcb
xchg
push
out
push
subb
ss
push
push
push
je
mov
pushl
xchg
pop
push
adc
mov
or
clc
sub
decb
and
ja
xorb
lock
arpl
or
or
pop
xor
push
push
mov
sub
mov
or
mov
lock
or
mov
lock
adc
xor
push
push
mov
sub
mov
ja
xorb
lock
mov
xchg
mov
lock
mov
clc
sub
in
lock
std
in
lock
push
lock
les
lock
push
mov
or
mov
ja
push
ja
xorb
lock
xchg
push
mov
sub
mov
lock
xorb
xchg
adcb
jle
clc
sub
adcb
mov
dec
xor
mov
mov
xorb
lock
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
adc
mov
or
clc
sub
xchg
dec
or
xchg
mov
push
jle
mov
push
ja
arpl
or
cmp
lea
lock
cmpsl
test
or
cld
mov
sub
mov
lock
and
adc
jno
lock
xor
adcb
mov
sub
adcb
test
in
test
mov
mov
jl
lock
or
mov
pushf
arpl
xlat
sub
ja
xor
adcb
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
ja
xorb
ja
xorb
jo
xchg
aad
xorb
adc
sub
push
cld
push
xchg
mov
sub
adcb
ja
in
mov
in
xchg
arpl
in
xorb
jo
xchg
aad
xorb
adc
sub
push
cld
push
xchg
mov
sub
adcb
ja
in
mov
in
xchg
arpl
in
xorb
lock
push
ja
xorb
adc
mov
sub
xorb
lock
inc
insl
pop
insl
aas
jl
pop
insl
inc
insl
push
push
ja
fsubl
outsl
cmp
jg
xchg
scas
cmp
adc
test
cld
mov
sub
ja
push
lock
cli
out
jno
add
or
jo
mov
fiaddl
stc
xorb
xchg
stc
push
cld
push
adc
or
std
xorb
cld
mov
sub
ja
push
xchg
in
std
xorb
test
mov
push
sub
fsubl
outsl
cmp
add
xor
xorb
adc
mov
or
test
std
xorb
xchg
mov
push
jle
xchg
clc
sub
sti
arpl
lea
insl
out
push
out
jl
es
cmp
hlt
and
cmp
mulb
test
and
cmp
nop
shrb
push
ja
xorb
lock
mov
or
jle
clc
sub
xchg
xor
adcb
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
or
ja
xor
adcb
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
adc
mov
or
clc
sub
xchg
dec
or
ja
xorb
adc
mov
or
test
std
xorb
std
or
cmp
lock
adcb
mov
or
clc
sub
arpl
test
bswap
das
lea
lock
or
add
lock
xor
mov
or
add
xor
xor
mov
or
add
in
cmp
in
cmp
add
and
dec
xlat
add
sbb
xlat
test
sahf
and
jno
or
push
ja
xorb
lock
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
dec
or
push
push
jl
jl
ja
xor
or
cmp
xlat
push
push
adc
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
ja
xorb
ja
les
push
adc
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
test
sbb
ja
xorb
out
push
ja
jl
xor
outsl
cmp
push
push
cld
push
adc
or
mov
ja
xorb
lock
push
cld
push
adc
or
mov
ja
jl
jp
and
cmp
fisubs
cmp
push
push
cld
push
adc
sub
mov
lock
arpl
or
pop
in
lea
lea
jp
xchg
inc
push
je
push
mov
or
mov
ja
inc
sti
push
jb
add
ja
xor
push
cld
push
adc
sub
mov
lock
arpl
fsts
xorb
lock
push
adc
or
mov
ja
xorb
lock
cld
push
adc
or
mov
lock
or
mov
ja
xorb
lock
push
cld
push
adc
sub
mov
lock
arpl
or
or
lea
scas
xorb
ja
push
out
push
ja
pop
cmc
and
cmp
push
ja
hlt
and
cmp
repz
cmp
testl
adc
or
mov
ja
subb
cmp
dec
xor
dec
ljmp
dec
jge
dec
dec
or
cmp
ja
xor
push
cld
push
adc
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
or
test
pushl
and
xchg
push
push
push
xchg
mov
sub
in
mov
lock
or
and
orb
dec
dec
sbbb
dec
dec
dec
push
cld
push
xchg
mov
sub
in
mov
loopne
lods
push
std
adc
lods
subb
lods
xor
adcb
mov
or
mov
xchg
std
or
incb
push
subb
testl
sub
xor
or
mov
lock
out
out
adc
subb
testl
adc
xor
or
mov
lock
xchg
push
push
push
xchg
mov
sub
in
mov
lock
or
and
orb
dec
dec
sbbb
dec
dec
dec
push
cld
push
xchg
mov
sub
in
mov
loopne
lods
push
std
adc
lods
subb
lods
xor
adcb
mov
or
mov
xchg
std
or
incb
push
subb
es
push
adc
mov
or
test
pushl
xchg
push
push
push
xchg
mov
sub
or
mov
ja
push
ja
xorb
lock
arpl
or
or
push
lock
adc
mov
sub
mov
lock
or
mov
lock
push
mov
sub
mov
lock
adc
push
ja
xorb
lock
mov
test
pushl
xchg
adcb
mov
pop
or
in
lock
std
in
lock
push
lock
les
lock
adc
or
mov
ja
push
ja
xorb
lock
test
push
adc
xor
inc
std
xorb
xchg
adcb
xchg
mov
or
test
sti
adcb
mov
dec
xor
out
dec
xlat
and
ja
dec
xlat
out
or
jp
lea
out
or
cmp
xlat
mov
jbe
test
ja
xorb
lock
push
push
mov
sub
xor
arpl
out
xor
adcb
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
sti
out
lea
and
mov
in
pop
lea
cmp
cmp
jne
dec
adc
or
mov
cli
inc
lea
add
push
or
mov
lea
lea
cmp
mov
or
push
lock
or
in
decb
psadbw
adc
cli
dec
dec
dec
jmp
dec
outsb
aad
orb
mov
lea
jle
testl
pop
scas
and
push
aad
add
adc
outsb
aad
xorb
mov
lea
push
in
std
or
or
in
push
aad
add
adc
out
subb
aad
andb
pop
fbld
dec
ja
in
ja
out
in
push
pop
out
in
or
or
xor
dec
ja
in
mov
in
push
push
lock
enter
lock
pop
or
dec
ja
in
mov
in
pushf
push
lock
xor
ljmp
push
push
les
push
jo
xchg
addb
lea
jno
push
movsb
cltd
fwait
pop
pop
or
ljmp
call
das
push
push
flds
out
cmpb
or
fstpl
xchg
out
push
xlat
mov
fucomi
push
out
push
cmpsl
mov
mov
mov
popf
adc
push
scas
les
movb
mov
aas
in
out
push
out
arpl
and
arpl
shr
sbbb
inc
out
push
imul
mov
cmpsl
mov
mov
pop
into
push
push
test
lea
adcl
mov
cmc
and
cmp
mov
cmp
mov
or
push
lods
mov
sub
adc
xchg
mov
mov
mov
mov
mov
fsincos
lods
pop
xor
andb
mov
sub
andb
lea
sbb
lea
cmpsl
mov
push
lods
mov
or
mov
call
arpl
or
jecxz
lea
lea
cmpsl
mov
push
lods
mov
or
mov
call
in
lea
lock
pop
or
mov
call
xor
aad
xorb
xchg
mov
push
cld
mov
sub
adcb
out
cmpsb
xlat
rolb
push
pushf
push
cld
mov
sub
adcb
jne
jno
push
or
lea
mov
mov
push
add
test
mov
or
addb
in
mov
jge
in
lock
push
lock
mov
push
pushf
mov
or
clc
sub
incb
jp
out
push
lock
xor
push
jle
sub
or
mov
lock
arpl
aad
in
lock
push
lock
lock
push
pushf
mov
or
clc
sub
in
jge
jl
xor
outsl
cmp
lock
push
lock
in
xor
xorb
int
cmp
xorb
xlat
xchg
lea
and
add
jne,pn
ja
cmpsb
push
outsl
cmp
mov
push
pushf
mov
or
clc
sub
push
ja
arpl
xlat
pop
xorb
lock
push
sub
or
mov
lock
push
mov
sub
addb
cmp
pushl
dec
or
lock
push
sub
sub
mov
ja
xlat
mov
ja
xor
push
sub
mov
or
mov
mov
dec
dec
xorb
lock
push
sub
sub
mov
ja
xlat
mov
ja
xor
push
cld
push
sub
sub
mov
ja
mov
jl
xchg
ja
flds
mov
push
jl
les
test
incl
lea
mov
push
sub
sub
mov
ja
xorb
lock
push
sub
sub
mov
ja
xor
xorb
push
push
jl
test
mov
or
std
xorb
std
aad
sub
push
ja
xorb
out
push
push
ja
xorb
lock
push
sub
or
mov
lock
aad
xorb
lock
push
cld
mov
sub
xor
mov
sub
aad
xor
xorb
int
cmp
xchg
dec
xlat
stc
dec
or
les
xorb
ja
xor
adcb
lea
dec
xlat
stc
dec
xchg
out
push
ja
xorb
lock
push
sub
or
mov
lock
ja
xor
xlat
push
push
cld
push
sub
sub
mov
ja
les
mov
sub
xor
or
mov
lock
and
mov
push
sub
sub
mov
addb
push
sub
mov
sub
xor
pop
out
and
dec
adc
xor
xchg
add
add
lea
lock
and
cmp
xorb
lock
push
sub
sub
mov
ja
xlat
out
xorb
lock
outsl
xorb
lock
push
cld
stos
mov
sub
mov
jo
out
lea
xor
and
cmp
cmc
and
cmp
and
mov
pusha
and
cmp
test
sub
adcb
loopne
lea
xchg
out
in
or
push
xchg
enter
icebp
and
cmp
mov
mov
sub
mov
or
sti
adcb
mov
or
pop
or
pushf
and
pop
xchg
jl
or
mov
lea
ja
in
ljmp
out
and
inc
fwait
push
and
xchg
andb
mov
or
mov
incl
push
xchg
andl
jns
xchg
mov
push
or
mov
xchg
xor
repz
cmp
mov
push
or
mov
add
xchg
mov
or
sub
add
mov
in
jmp
ret
or
push
xlat
stc
or
clc
dec
or
adcb
xchg
xorl
pop
sbb
mulb
cmp
xchg
xchg
xchg
in
or
add
jle
xchg
out
push
xchg
xchg
and
in
or
pop
or
jle
xlat
xchg
xlat
rolb
push
mov
or
pop
or
jle
xlat
xchg
xlat
out
adcb
aam
jl
dec
lock
or
dec
dec
dec
cmp
adc
push
mov
or
pop
or
jle
xlat
xor
pushf
in
sub
xlat
mov
in
or
add
in
je
jle
popf
out
arpl
or
dec
dec
dec
mov
mov
lock
add
xorb
mov
lock
mov
sub
test
xchg
addb
lea
mulb
cmp
cmc
and
cmp
mov
and
cmp
mov
or
push
mov
sub
mov
ja
xorb
lock
mov
or
mov
sub
mov
ja
and
xorb
lock
push
ja
mov
outsl
cmp
enter
ja
mov
outsl
cmp
xor
push
ja
mov
outsl
cmp
stc
push
mov
ja
mov
out
cmp
jmp
ja
dec
push
movd
lea
push
das
lea
push
mov
lea
ja
xor
mov
or
hlt
lea
dec
cmp
lea
lock
mov
or
mov
sub
mov
ja
xorb
ja
xorb
lock
in
jge
adcb
push
cvtpi2ps
lea
and
cmp
cmpsl
jp
cld
push
add
sub
adcb
xorb
ja
or
cmp
stos
gs
jno
ja
xorb
into
cmp
xchg
and
xlat
imul
cmp
stos
adcb
or
clc
sub
mov
lock
dec
or
xchg
xchg
cmpb
std
xchg
in
je
xchg
lock
lea
xchg
dec
xlat
out
xchg
xchg
xchg
gs
xchg
or
add
sbb
ja
xor
push
cld
in
add
mov
or
mov
pop
fisubrl
xchg
and
mov
ja
xor
push
cld
in
add
mov
or
mov
ja
xorb
lock
add
mov
pushl
inc
std
pop
lock
and
sbb
lock
sbb
push
push
ja
jge
not
xor
xor
in
ja
les
sti
or
or
xorb
jge
push
lock
push
push
in
ret
mov
pop
lock
xor
in
jge
dec
xlat
addb
or
xorb
lock
mov
or
ret
push
mov
sub
cmp
addl
xorb
lock
add
mov
pushl
pop
jg
inc
std
pop
lock
movsl
dec
dec
dec
or
cmp
push
xor
or
cmp
stos
adcb
or
clc
sub
mov
lock
dec
or
pushf
or
lea
cmpb
lea
push
in
xor
test
std
or
jb
lea
lock
in
add
mov
sub
mov
ja
pop
imul
test
pop
push
lock
inc
sbb
outsl
cmp
call
ja
jl
push
and
cmp
adcb
mov
lea
dec
dec
dec
xchg
in
lret
outsl
in
pusha
mov
dec
xchg
dec
dec
dec
push
dec
mov
ja
push
ja
add
push
ja
push
ja
jl
or
dec
bnd
popf
dec
dec
dec
push
sbb
dec
lods
dec
dec
dec
cmpsb
jmp
mov
dec
dec
sbb
outsl
cmp
dec
dec
dec
icebp
jmp
push
dec
dec
dec
sbb
outsl
cmp
dec
dec
dec
call
add
dec
dec
dec
jl
in
dec
dec
fucompp
outsl
cmp
int
ja
nop
jmp
adc
cmc
jmp
push
jl
es
jmp
mulb
cmp
addb
dec
dec
dec
mov
or
add
inc
dec
dec
dec
insl
in
mov
in
or
cmp
dec
dec
dec
xchg
dec
or
sbbb
cmp
dec
dec
dec
stos
or
out
push
ja
add
or
lea
xorb
testl
add
mov
sub
mov
ja
xor
xorb
push
in
xor
mov
ja
arpl
jbe
or
push
ja
xorb
mov
iret
orb
sbbb
cmp
stc
sbbb
cmp
arpl
xlat
cmp
lea
cmp
and
lock
in
add
mov
sub
mov
ja
adcb
enter
push
movd
and
sub
push
pcmpeqb
and
xchg
push
mov
lea
mov
dec
push
ucomiss
cmp
sbb
lea
lock
lock
xchg
xchg
dec
or
lea
push
push
in
xor
test
std
aad
jl
out
mulb
outsl
cmp
out
xorb
mov
hlt
lea
subb
lock
adc
in
lea
push
popf
out
xorb
lock
ja
xor
push
xchg
and
adc
insl
cmp
je
xchg
adc
sub
cmp
testl
or
push
test
xchg
addb
adc
or
xchg
fwait
jl
mov
and
cmp
mov
aad
icebp
and
cmp
out
in
lret
pop
out
in
sbb
in
lret
in
out
pop
out
in
xor
and
push
in
dec
or
mov
push
in
mov
in
push
jnp
popa
sub
lret
mov
cmp
out
xor
and
push
in
dec
or
mov
lock
dec
push
push
mov
xchg
addb
cmpl
stc
in
rorl
rorb
lcall
stc
lods
lea
decl
dec
aam
lea
in
lea
mov
lea
xchg
lea
mov
lea
fimull
lock
dec
add
mov
lea
lea
lea
lea
div
lea
aad
lea
sbb
lea
mov
dec
popf
lea
enter
jnp
lea
mov
out
adcb
nop
adc
ja
adcb
lea
adcb
ja
in
icebp
test
lea
test
jno
out
mov
lea
testl
inc
ret
dec
dec
adcb
lea
sti
xorb
fmuls
dec
mov
test
xchg
addb
fwait
jl
xchg
xor
jg
lea
pusha
xchg
lea
xchg
lea
sub
sbb
lea
out
lea
xor
sbb
lea
pop
leave
lea
lea
iret
cmp
and
lea
iret
lea
sbb
test
xor
lea
lea
and
mov
xorb
xchg
mov
sti
adcb
lea
adcb
xchg
sti
push
jb
pushf
insb
dec
dec
dec
or
pop
lea
xchg
or
cld
cli
mov
icebp
lea
sbb
lea
leave
lea
movsl
lea
lea
push
jb
fwait
leave
lea
test
adcb
jp
cmpsl
orl
sub
jp
ja
adcb
adcb
and
xorb
mov
lea
cmpsl
push
jb
movb
dec
dec
aaa
cmp
lea
push
adc
dec
in
std
xorb
xchg
mov
sti
adcb
lea
adcb
xchg
sti
push
jb
movb
ja
andb
je
mov
arpl
or
dec
dec
stos
test
lea
or
in
fists
pop
xchg
push
jl
pop
loop
fists
push
ja
jl
push
pop
fists
push
ja
xchg
jl
std
rcrb
adc
scas
cltd
fwait
jl
negl
ja
push
jb
dec
pusha
mulb
cmp
call
push
ja
xorb
stc
add
mov
sub
sti
add
bound
or
or
les
sbb
push
ret
add
push
push
xchg
mov
mov
sub
and
into
lea
in
mov
lea
xor
aad
push
push
out
adcb
gs
xchg
out
in
pushf
push
xchg
test
adcb
mov
cmpsl
test
adc
mov
lods
and
adc
insl
in
clc
mov
out
sti
push
mov
ja
outsb
xlat
enter
in
xor
test
sti
adcb
push
dec
jnp
ja
adcb
test
xchg
mov
adc
mov
sub
sti
push
mov
ja
outsb
xlat
xor
or
test
sti
adcb
push
ja
arpl
leave
dec
dec
dec
xorb
xchg
stc
in
clc
mov
sti
out
mov
sub
sti
push
mov
addb
or
xchg
stc
mov
or
cmpsl
xchg
xchg
xchg
out
outsl
or
jp
dec
dec
stos
test
lea
adc
ja
mulb
cmp
cmc
and
cmp
ja
jl
enter
cmp
sbb
adc
mov
or
cmp
sub
mov
or
add
xchg
xor
push
pushf
mov
or
clc
sub
decb
and
lea
mov
mov
sub
mov
or
incb
mov
push
lods
mov
or
mov
call
xor
aad
push
sub
mov
or
mov
lock
push
lods
mov
or
mov
call
xchg
pop
xor
andb
mov
or
mov
call
push
mov
sub
sub
mov
or
mov
lock
push
lods
mov
or
mov
call
xchg
pop
push
xchg
mov
mov
push
pushf
mov
or
clc
sub
in
add
xchg
enter
std
mov
sub
adcb
notl
mov
sub
inc
arpl
dec
dec
xorb
lock
stos
test
mov
xchg
addb
lock
in
lock
out
outsb
adc
cld
ja
aad
ja
sbb
ja
rorb
loopne
dec
or
xchg
or
lea
sti
or
xchg
int3
xor
adc
cld
ja
or
cld
ja
jl
ja
sar
ja
push
ja
xchg
or
dec
sar
xchg
mov
pop
xchg
push
sar
xchg
test
neg
or
loopne
or
lea
div
or
outsb
xchg
arpl
out
in
dec
xlat
out
cltd
xchg
dec
dec
jo
out
lea
cmp
cltd
mulb
cmp
xor
cmc
and
cmp
imulb
cmp
xchg
mov
scas
xorb
lock
cmp
mov
or
mov
ja
jl
sbb
outsl
cmp
inc
sbb
adc
out
lea
ja
xor
push
sub
mov
or
mov
lock
push
pushf
mov
or
clc
sub
decb
and
enter
mov
sub
push
je
ja
add
or
push
ja
xorb
lock
addb
dec
xorb
lock
push
sub
sub
mov
ja
push
ja
xorb
lock
mov
sub
mov
or
mov
lock
push
pushf
mov
or
clc
sub
incb
xor
arpl
fstps
xorb
lock
push
cld
push
sub
sub
mov
ja
jl
xchg
movsb
mov
xor
xorb
jl
test
push
push
mov
or
std
xorb
xchg
addb
ja
ja
xor
or
push
mov
ja
xorb
lock
mov
or
sub
xor
xor
push
dec
dec
xor
push
mov
ja
xorb
lock
push
sub
sub
mov
ja
xorb
lock
push
sub
sub
mov
ja
xorb
lock
push
cld
mov
sub
xor
arpl
or
dec
dec
dec
xorb
lock
push
cld
push
sub
or
pushl
push
mov
jo
out
lea
jno
jo
fwait
pop
lock
or
pop
lea
mov
lea
pop
and
lea
lock
push
lock
jo
dec
jl
enter
dec
mov
mov
mov
mov
lock
and
mov
pop
or
lock
xlat
iret
or
andb
aad
or
andb
pop
mov
std
mov
and
xchg
dec
dec
ja
cmp
push
mov
mov
lock
cmc
les
ja
mov
pop
out
andb
sub
pop
dec
ja
in
out
xchg
dec
rorb
dec
push
push
mov
xor
mov
std
push
push
arpl
les
xchg
addb
fwait
loop
dec
xlat
out
xorb
inc
mov
add
push
ja
add
push
ja
add
push
ja
add
lea
dec
cmc
lea
add
lea
dec
mov
push
add
lea
dec
aam
lea
xlat
push
add
lea
dec
cmp
jb
xchg
notl
jp
xchg
adcb
jl
std
popl
push
ja
xor
and
push
mov
adc
inc
lret
or
popa
or
out
and
andb
push
test
and
icebp
lea
incl
ljmp
push
xlat
mov
lea
rcr
outsl
pusha
mov
lock
ja
rcr
or
lock
and
andb
fistpl
adc
inc
add
mov
or
movsb
push
test
adc
dec
in
mov
in
jle
push
lock
push
xlat
scas
xor
push
jp
and
cmpsb
lret
pusha
sbb
jp
push
lock
ja
sti
jl
int3
push
lock
mov
xchg
ja
mov
push
ljmp
es
xor
and
andb
mov
sub
inc
mov
or
sub
adc
std
push
xor
scas
xor
adc
and
andb
fistpl
adc
inc
add
mov
or
movsb
push
test
adc
dec
call
dec
rorb
adc
dec
or
mov
lea
in
fucomp
or
leave
and
stos
sbb
scas
sbbb
push
lock
jp
xchg
enter
in
push
cmpsl
enter
xchg
sbbl
in
xorb
cmpsl
scas
or
arpl
stos
adc
pop
adcb
xchg
mov
cld
add
xchg
out
push
ja
push
xchg
jbe
ja
decl
mov
xlat
sub
xorb
push
jno
movsb
mov
adc
xor
dec
push
das
xorb
sbb
ja
out
dec
lock
xlat
mov
xchg
sbb
xchg
andl
in
stos
cmp
mov
xchg
addb
loopne
cmp
xchg
int3
dec
dec
orb
lea
pop
out
test
mov
sti
out
lea
lea
and
lea
mov
cmpsb
in
sti
or
cld
or
pop
mov
pop
push
push
mov
push
cmp
orb
lea
les
mov
fmuls
xlat
popa
cld
lea
lea
xchg
addb
lea
es
fwait
jl
enter
adc
mov
fstps
adc
xor
jl
xchg
and
cmp
cmc
and
cmp
call
lock
ja
out
fists
push
lock
xchg
xor
inc
testl
xchg
sub
add
push
jl
or
cld
push
ja
add
push
ja
xorb
and
cmp
pop
fists
push
jge
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
push
add
dec
dec
xor
adcb
mov
sub
adcb
jle
xorb
call
dec
dec
xor
xorb
xchg
mov
or
push
jle
pop
or
mov
call
dec
dec
xor
adcb
mov
sub
adcb
addb
pop
or
mov
call
mov
or
or
je
testl
dec
xor
in
add
push
cld
mov
or
mov
lock
or
sub
adcb
jle
or
mov
call
andb
or
pop
or
xchg
in
push
xend
dec
dec
dec
add
dec
dec
dec
or
mov
or
adc
sub
mov
xorb
adc
lea
cmp
xchg
and
cmp
stc
or
or
mov
adcb
push
stos
dec
xlat
xor
xlat
inc
xchg
add
test
std
or
mov
adcb
push
stos
dec
xlat
push
mov
sub
cmp
dec
xorb
lock
mov
sub
mov
or
mov
lock
mov
or
xchg
mov
sub
in
mov
lock
mov
or
xchg
mov
sub
in
mov
lock
mov
or
xchg
mov
sub
in
mov
dec
push
dec
dec
dec
xorb
lea
xchg
push
xchg
mov
or
clc
sub
push
xend
dec
dec
dec
xorb
lea
mov
mov
or
insl
or
mov
sub
push
xend
dec
dec
dec
xorb
lock
sub
mov
or
mov
lock
push
push
mov
sub
adcb
jle
pop
or
or
xchg
in
push
xend
dec
dec
dec
xorb
lock
add
push
cld
mov
or
mov
lock
or
sub
in
mov
lock
or
sub
add
push
dec
dec
dec
stos
adcb
mov
jle
lock
aad
dec
dec
xorb
or
mov
call
lea
lea
xchg
and
xorb
lock
inc
std
or
mov
std
xorb
xchg
xor
push
sub
and
incb
adcb
andb
and
xor
or
or
mov
andb
mov
sub
in
std
xorb
sbb
lock
jl
outsl
adcb
cmpsb
xorb
sbbb
lea
andb
andb
andb
xchg
scas
xor
or
or
mov
andb
mov
sub
je
ja
xorb
lds
lea
lock
inc
std
or
mov
andb
lock
in
mov
pushl
arpl
lea
movsl
jae
inc
std
push
cmpsl
xor
lock
or
ja
andb
ja
push
sub
call
andb
push
ja
xorb
out
in
mov
mov
or
cmpsl
mov
xor
andb
inc
adc
test
xorb
mov
push
jo
test
xorb
lods
jmp
pop
xor
xor
ja
xorb
inc
mov
mov
or
ja
andb
ja
or
add
adc
mov
xchg
xchg
xchg
mov
mov
or
fstps
adc
addr16
fists
xlat
aaa
arpl
xlat
dec
orb
jno
cmp
out
aad
orb
jno
cmp
push
xorb
out
in
ja
or
lock
dec
dec
les
xchg
adc
ja
rcrb
adc
jbe
ja
xor
or
or
mov
andb
lock
movsb
pushl
mov
xor
arpl
rcll
ja
in
ja
push
ja
subb
ja
xorb
lock
inc
std
or
mov
andb
pushl
sub
adc
dec
dec
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
mov
push
xorb
call
dec
dec
dec
xor
adcb
jle
xorb
call
dec
dec
xor
xorb
xchg
mov
or
push
xorb
call
dec
dec
xor
adcb
sub
mov
or
incb
mov
xorb
jle
mov
mov
or
xchg
andb
or
mov
pushl
push
inc
sbb
dec
dec
dec
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
xchg
adcl
aad
dec
dec
add
push
dec
dec
dec
xchg
xor
adcb
sub
or
clc
sub
xchg
add
lea
cmp
xchg
and
lea
ja
sub
lock
and
mov
inc
mov
mov
or
xchg
enter
push
or
enter
push
adc
or
or
mov
xlat
enter
push
pushf
push
movsb
call
mov
sub
ret
mov
xlat
enter
push
pushf
push
movsb
call
mov
sub
ret
mov
xlat
enter
out
push
dec
lcall
xlat
and
xchg
xorb
test
lea
inc
xchg
cltd
fwait
push
movsb
push
jo
ja
fstps
adc
popl
push
ja
jl
xchg
pop
fists
push
ja
jl
xchg
mov
enter
cmp
cli
and
cmp
hlt
and
cmp
mulb
cmp
ja
push
ja
xorb
bound
cmp
xor
or
cmp
pop
in
out
adcb
lea
out
or
or
popa
or
out
andb
add
push
movsb
mov
sub
pushf
xlat
push
sbbb
xchg
mov
jno
xchg
and
xchg
test
or
ja
dec
xlat
out
dec
xlat
enter
dec
xlat
xchg
add
or
push
ja
xorb
lock
ja
jl
in
lea
xor
push
xchg
out
xorb
lock
ja
xor
push
xchg
and
and
les
xorb
lock
lea
lea
push
ja
xorb
test
lea
and
lea
and
cmp
dec
mov
ja
addr16
and
cmp
dec
movsb
cmpsb
lea
pop
fists
pop
xchg
xor
in
fists
push
ja
xorb
ja
xorb
int
cmp
lea
mov
cmp
lea
in
push
mov
mov
push
ja
pop
int3
cmp
push
xchg
loope
push
or
lahf
stos
cmpb
xchg
push
adcb
jle
push
xchg
int
xchg
push
addb
jl
mov
fistps
push
out
mov
push
xlat
popl
inc
mov
dec
dec
in
push
mov
dec
dec
add
jne
dec
dec
in
push
mov
dec
dec
add
jge
dec
dec
in
push
mov
dec
dec
mov
dec
dec
xorb
mov
dec
dec
xorb
lock
inc
std
or
mov
adcb
aam
jl
jb
mov
xchg
add
ja
mov
sbb
pop
jo
adc
lea
adc
orl
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
icebp
xorb
lock
inc
std
or
mov
adcb
mov
sub
sti
les
mov
sbb
pop
jo
adc
lea
adc
inc
or
stc
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
xor
or
or
mov
adcb
mov
sub
sti
les
push
ja
dec
dec
dec
mov
sbb
pop
jo
adc
lea
adc
prefetchw
xor
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
xlat
pop
add
or
mov
cmp
icebp
outsb
sub
sub
out
orb
dec
dec
sbbb
dec
dec
push
xlat
xchg
and
cmp
or
cmp
or
cmp
lea
or
mov
dec
dec
pop
daa
cmp
mov
cmp
or
pop
cmp
lea
dec
in
push
cmp
push
add
jno
jae
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
push
cmp
out
dec
dec
dec
in
mov
mov
dec
dec
adcb
push
add
dec
dec
dec
pusha
in
cmp
mov
cld
pusha
xor
lea
dec
dec
mov
or
sbb
lea
dec
dec
dec
pusha
fwait
xchg
adc
lock
add
pushl
dec
dec
xorb
lock
mov
or
add
pushl
or
lea
dec
dec
or
jno
cld
mov
or
add
pushl
or
ja
or
cmp
dec
dec
dec
sar
sbb
dec
addl
ja
dec
push
cmpsb
mov
in
fstp
mov
adcb
popf
push
divl
or
incb
cmp
dec
push
lock
mov
or
divl
adcb
lea
and
mov
or
divl
adcb
lea
cmp
and
adc
dec
dec
pusha
daa
cmp
sub
sub
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
adc
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
sbb
lea
dec
dec
dec
adcb
push
add
dec
dec
pusha
sbb
lea
dec
dec
dec
pusha
daa
pop
lea
dec
dec
dec
pusha
push
xor
aam
dec
dec
cld
ja
mov
lea
dec
dec
in
mov
mov
dec
dec
cld
ja
or
ja
xchg
cld
ja
stos
pusha
lea
dec
dec
dec
cld
ja
jg
fistpl
lea
dec
dec
cld
ja
popf
cld
ja
xchg
pusha
inc
cmp
gs
dec
dec
cld
ja
xchg
jno
push
push
divl
sub
inc
fwait
adcb
jle
pop
or
mov
inc
decb
loopne
iret
addl
push
jle
pop
or
mov
and
mov
lea
lea
adc
addl
lock
jle
std
mov
sub
xor
in
incb
jno
jle
mov
sub
pushf
in
sti
out
push
lock
in
xor
adcb
mov
or
clc
sub
push
add
or
and
push
divl
or
incb
xchg
adcl
push
or
cmp
push
lock
mov
or
push
out
add
add
push
out
in
jl
mov
out
mov
jl
mov
lret
mov
test
push
mov
test
lret
mov
out
mov
jl
mov
out
mov
jl
mov
push
lock
cli
adcb
push
lock
lock
push
push
mov
sub
adcb
jle
pop
or
xor
bound
mov
sub
pushf
or
pushf
mov
and
push
divl
sub
incb
lock
jle
out
mov
or
mov
or
pushf
mov
and
mov
sub
mov
or
incb
and
mov
or
mov
mov
or
and
mov
sub
mov
or
incb
and
mov
or
mov
mov
or
jno
xchg
jno
notl
mov
sub
adcb
jle
mov
sub
pushf
in
push
add
or
and
out
push
notl
mov
or
clc
sub
incb
dec
push
or
add
or
bound
xor
adcb
stos
push
pushf
mov
or
clc
sub
push
lidtl
or
and
mov
or
sub
aad
add
or
ja
xor
push
cld
mov
or
sub
or
dec
and
xorb
lea
xorb
lock
push
sub
or
mov
add
inc
dec
push
or
xchg
lock
xchg
jno
push
mov
or
ret
clc
sub
push
lidtl
or
cmp
lea
dec
dec
dec
add
jno
push
add
popa
cmp
stos
dec
dec
dec
cmp
push
dec
xchg
dec
dec
dec
xorb
dec
dec
in
push
cmp
push
add
fisubrl
mov
dec
dec
in
mov
mov
dec
dec
add
cmpsb
mov
dec
dec
orb
dec
dec
add
scas
pusha
dec
cmp
rorl
add
or
dec
dec
dec
mov
dec
dec
in
jl
mov
dec
dec
orb
mov
dec
dec
cmp
push
add
dec
dec
dec
xorb
out
dec
dec
push
push
push
push
add
dec
dec
dec
jl
lods
dec
dec
dec
out
xor
jl
dec
ret
cmp
ja
xor
adcb
mov
xchg
mov
lock
add
mov
pushl
sbb
jo
dec
arpl
or
and
arpl
or
cmp
jno
xchg
jno
push
mov
or
ret
clc
sub
in
std
adcb
dec
dec
xor
and
push
push
mov
or
dec
or
sub
std
mov
dec
dec
dec
mov
mov
mov
jno
out
push
push
mov
or
dec
or
sub
std
mov
dec
dec
dec
xor
adcb
or
clc
sub
incb
xor
in
add
mov
pushl
sbb
jo
dec
arpl
or
lcall
dec
dec
dec
insb
cmpsl
movl
ja
xorb
mov
sbb
popl
xorb
lock
or
or
mov
adcb
push
xorb
das
cmp
enter
or
mov
xchg
std
or
mov
adcb
add
or
push
jl
jb
sti
arpl
or
lea
jl
scas
fsts
adc
popl
push
ja
push
cmpsl
jp
ja
xorb
lock
std
or
mov
adcb
push
stos
dec
xlat
xor
loopne
cmp
dec
dec
xorb
lock
std
or
mov
adcb
push
stos
dec
loopne
cmp
dec
loopne
cmp
dec
dec
orb
lea
in
out
push
lock
xor
xorb
inc
mov
mov
or
ja
adcb
sub
pushl
pop
jg
dec
std
aad
orb
lea
and
cmp
jno
xlat
cmp
xlat
sub
xlat
sbb
cmp
dec
dec
push
dec
xor
cmp
aad
xorb
frstor
dec
xor
cmp
decl
cmp
mov
dec
stos
test
lea
and
and
cmp
cmc
and
cmp
mov
or
cmp
scas
push
ret
or
add
cld
adc
arpl
xorb
sete
mov
push
ret
sub
adc
arpl
or
loopne
lea
xchg
and
dec
push
ja
dec
jb
cmovb
out
pop
adc
cld
ja
aad
ja
sbb
ja
rorb
loopne
decl
loopne
adc
jp
lea
cmpsl
dec
xor
mov
ja
or
cld
ja
jl
ja
sar
ja
push
ja
cmpsl
adc
shlb
or
int3
shlb
mov
sbb
in
out
lea
loopne
or
or
lea
lea
incl
lea
div
or
pop
jnp
test
ljmp
ja
push
mov
lock
stos
les
mov
lock
mov
sub
test
xchg
addb
mov
and
cmp
cmc
and
cmp
mov
adc
int
cmp
orb
lea
xchg
push
lock
xorb
lock
out
push
jl
xchg
push
adc
push
ja
xorb
lock
mov
or
adc
push
ja
xorb
insl
or
xchg
push
ja
xorb
insl
pop
xor
jge
xchg
xchg
xorb
sbb
lock
cmpb
dec
divl
std
xorb
insl
pop
in
mov
in
subb
ja
xorb
lock
push
adc
sub
mov
ja
xorb
lock
push
adc
or
mov
ja
xorb
lock
push
jl
mov
pushl
cmp
adc
and
cmp
repz
cmp
cli
and
cmp
xorb
lock
push
adc
sub
mov
ja
xorb
ja
push
ja
dec
xlat
orb
xor
xchg
ja
xorb
push
xorb
ja
xorb
lock
push
ja
xorb
lock
xchg
and
in
xorb
insl
and
out
xor
inc
mov
and
lea
cmp
scas
jl
std
cmc
and
cmp
hlt
and
cmp
repz
cmp
ja
push
ja
add
push
ja
add
push
ja
add
push
ja
xorb
lock
push
adc
sub
mov
ja
mov
mov
cmp
shld
loop
dec
xlat
addb
bound
xchg
test
dec
xorb
lock
push
adc
or
mov
ja
push
xlat
jp
out
xorb
xchg
mov
sub
xor
addl
push
adc
mov
or
mov
lock
push
xchg
mov
or
clc
sub
in
mov
lock
arpl
xlat
sub
mov
push
adc
sub
mov
loop
add
or
xorb
lock
push
adc
or
mov
lock
sub
mov
push
adc
sub
mov
loop
add
or
xorb
lock
lea
push
jl
mov
pushl
xor
adcb
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
push
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adc
mov
or
xchg
mov
sub
decb
mov
lock
xchg
enter
sub
mov
or
clc
sub
decb
std
or
cmp
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adcb
push
xchg
mov
sub
decb
mov
lock
adcb
mov
decb
std
or
lea
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
xchg
enter
sub
mov
sub
decb
mov
lock
adc
push
xchg
mov
or
clc
sub
decb
std
or
lea
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adcb
push
xchg
mov
sub
decb
mov
lock
adcb
mov
decb
std
xlat
jno
ja
or
xor
arpl
mov
push
jl
mov
pushl
ja
adc
xorb
lock
push
je
mov
test
pushl
in
xlat
data16
sub
mov
mov
sub
std
incl
outsl
cmp
mov
push
jl
mov
pushl
std
or
pop
mov
xorb
lock
push
adc
or
mov
lock
xlat
sbb
mov
push
adc
sub
mov
jg
lea
dec
xlat
addb
push
or
xorb
lock
push
adc
or
mov
lock
xchg
xorb
lock
push
adc
or
mov
lock
daa
xorb
lock
push
adc
sub
mov
cltd
add
or
xorb
lock
push
adc
sub
mov
cltd
add
or
xorb
cld
push
ja
dec
xlat
ds
xlat
adc
ja
or
xorb
lock
push
adc
or
mov
lock
cmpsl
xorb
lock
push
adc
or
mov
lock
rolb
push
jl
xchg
adc
or
xorb
ja
or
xorb
lock
mov
or
adc
or
xorb
ja
or
xor
xorb
je
sub
sub
mov
lock
mov
lea
lea
int
lea
dec
xlat
ds
in
xlat
out
xchg
ja
xor
cmp
xorb
ja
push
ja
xorb
lock
mov
sub
mov
or
mov
lock
and
xchg
mov
push
xchg
mov
or
clc
sub
in
lock
or
hlt
lret
dec
dec
xorb
test
lea
adc
push
ja
or
cmp
orb
out
andb
fistpl
adc
pop
xchg
or
or
mov
lea
push
movsb
decl
out
call
xlat
or
push
sar
adc
mov
adcb
xchg
out
adc
adcb
out
andb
or
or
mov
lea
xchg
mov
or
dec
and
andb
jno
lret
xor
or
or
test
push
jo
lret
push
lea
or
addb
movb
out
andb
mov
push
jb
aad
fists
mov
mov
adc
es
jl
std
jle
xchg
fstps
adc
mov
adc
adc
xlat
or
loope
enter
lea
xlat
and
and
pusha
fistpl
adc
or
or
mov
dec
mov
sub
enter
out
cli
lea
incl
andb
xor
xlat
outsl
push
jb
pushf
aad
dec
xlat
xor
xlat
sub
pop
xchg
dec
dec
dec
push
outsl
mov
adcb
mov
or
or
popa
or
out
and
andb
or
movsb
decl
out
push
lret
call
cmpb
adcb
cmpsl
adc
mov
sub
mov
or
dec
lea
ljmp
arpl
xlat
sbb
xlat
nop
dec
push
test
jne
push
outsl
movsb
jbe
push
test
jne
stos
xorb
lock
and
es
fistpl
adc
inc
std
or
ret
push
jb
add
push
test
lea
call
ja
xlat
out
arpl
fisubrs
mov
les
adc
pop
js
xor
sub
in
xchg
xorb
lock
inc
std
or
mov
adcb
xor
cli
cmpsl
movl
sti
push
cmp
cmp
ja
or
cmp
xchg
gs
adcb
lea
out
mov
dec
push
or
xorb
lock
inc
std
or
mov
adcb
cld
push
jb
sti
push
ja
add
or
mov
dec
xlat
jno
xlat
and
out
xchg
int3
dec
dec
xorb
lock
inc
std
or
mov
adcb
mov
sub
std
aad
xorb
lock
mov
or
lock
xchg
adc
mov
sub
or
ja
push
cmp
xchg
addb
push
xlat
cmp
out
pop
xchg
pop
fists
arpl
or
dec
lea
in
arpl
arpl
xlat
out
arpl
or
pop
or
lea
adc
out
arpl
or
das
or
lea
adc
out
arpl
or
dec
lea
pop
fists
xlat
out
arpl
aad
mov
adc
out
arpl
or
mov
or
or
cmp
lea
lea
xlat
sub
xlat
jno
xlat
and
out
xchg
or
cmp
pop
fists
xlat
out
arpl
or
loope
lea
fists
xlat
out
arpl
or
mov
lea
fists
xlat
out
arpl
aad
mov
adc
out
arpl
or
aam
lea
fists
les
adcb
out
andb
or
or
mov
lea
push
movsb
decl
out
call
adc
push
xchg
out
push
xlat
and
and
and
push
mov
inc
ret
mov
mov
dec
lea
decl
xchg
jno
xlat
adc
xlat
inc
adcb
xchg
jno
xlat
adc
cmpsl
adc
or
or
mov
dec
lea
or
dec
and
call
push
addb
or
or
jo
test
push
lea
xor
mov
or
sub
adcb
mov
mov
adc
es
andb
dec
aad
fists
mov
es
sub
sti
push
xchg
add
fists
cltd
dec
xlat
xor
dec
xlat
sbb
xlat
jno
xlat
and
out
xchg
int3
dec
dec
push
mov
jo
cmp
adc
and
andb
or
or
mov
lea
push
movsb
call
andb
push
xchg
jno
xlat
adc
xlat
inc
adcb
xchg
out
adc
adcb
out
andb
or
or
mov
lea
xchg
mov
or
dec
and
andb
xorb
lock
push
jo
lret
mov
sub
lea
incl
lock
in
pushf
and
adc
andb
inc
es
fistpl
adc
inc
std
or
mov
push
movsb
mov
int
sub
je
notl
add
xchg
and
adc
mov
pop
fists
mov
adc
mov
mov
es
sub
xchg
mov
xchg
addb
fstps
adc
xor
popl
push
ja
jl
xchg
pop
fists
push
ja
adcb
or
or
mov
xlat
xor
ret
add
push
dec
xchg
lcall
and
and
and
ja
dec
xlat
out
mov
sub
dec
xlat
and
xchg
xchg
enter
xchg
mov
stos
push
ja
xorb
jo
out
lea
mov
xchg
jl
xor
lea
inc
lea
xor
xor
xlat
and
xlat
adc
xlat
and
out
xchg
mov
out
push
jne
out
xorb
dec
push
prefetcht0
xor
lea
and
dec
aad
and
dec
testl
jne
out
add
push
jne
out
xorb
in
jne
out
push
jne
out
xorb
xorb
xorb
out
adcb
lea
xor
cmp
ljmp
addb
sbb
subb
in
jle
aad
out
pop
sbb
in
fstpt
lea
subb
orb
or
sarb
lea
dec
push
dec
cltd
cmp
out
or
cmp
jne
and
int
cmp
jne
and
int
cmp
lea
xor
out
or
cmp
lea
xor
out
xorb
out
or
cmp
cmp
xor
and
cmp
in
add
mov
sub
std
push
xor
out
lea
xor
ret
xorb
in
xchg
push
jge
aad
jge
fmuls
xor
sub
dec
aad
sub
dec
test
and
dec
aad
and
dec
test
adc
dec
test
xor
xor
and
aad
xorb
jl
test
lea
xorb
xorb
out
adcb
lea
xor
cmp
xor
add
mov
or
mov
xor
and
xor
cmp
int
cmp
les
add
push
jne
and
xor
cmp
out
xorb
or
cmp
xor
cmp
out
mov
adcb
lea
cmp
test
sub
imul
popa
push
insb
outsl
ja
popa
insl
imul
push
outsb
bound
push
outsb
jne
outsl
popa
push
add
insl
imul
jo
je
dec
gs
insb
outsl
dec
js
outsb
outsl
jb
add
ja
dec
imul
imul
imul
jae
popa
fs
imul
imul
bound
add
outsl
jo
jns
imul
jne
popa
gs
imul
dec
outsl
jne
push
add
outsl
jo
ja
bound
jns
pop
gs
jo
jne
gs
popa
add
popa
inc
imul
outsb
je
add
dec
imul
insb
outsl
bound
push
bound
jo
inc
outsl
jb
popa
js
data16
imul
fs
outsl
jae
jne
inc
add
add
dec
add
jbe
popa
add
add
popa
add
jne
outsl
add
push
add
popa
add
add
insl
add
popa
add
js
imul
insl
add
insb
add
outsl
add
popa
add
jo
add
popa
add
popa
add
outsl
add
push
add
add
add
add
add
popa
add
add
imul
arpl
popa
add
add
imul
add
popa
add
outsl
add
je
add
jb
jne
add
insb
add
add
insl
add
add
add
imul
ja
outsl
add
popa
add
insb
add
add
jne
insl
add
outsl
add
bound
popa
add
outsl
add
bound
add
add
add
sub
add
aaa
adc
and
adc
rolb
add
xor
add
cmp
add
insb
adc
sub
push
inc
adc
mov
adc
aas
or
add
and
add
adc
test
add
add
push
adc
cmc
push
adc
imul
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
xor
add
adc
insb
pop
adc
fwait
cmp
adc
pop
adc
lcall
add
adc
xor
adc
mov
adc
andb
clc
ja
add
xor
add
adc
mov
add
daa
adc
mov
sub
adc
xor
adc
outsb
dec
adc
adc
bound
add
and
add
adc
mov
add
pusha
adc
pop
adc
adc
cmc
addl
addl
addl
test
add
test
or
test
adc
test
sbb
test
and
test
sub
test
movsl
das
adc
add
add
adc
add
pop
adc
dec
jne
add
pop
adc
push
cmp
adc
pop
cmp
add
xor
adc
adc
add
adc
jmp
adc
jne
inc
add
inc
add
inc
add
test
mov
add
test
cltd
test
popf
test
mov
test
test
test
mov
inc
add
inc
adc
xlat
pusha
adc
lea
hlt
add
add
adc
out
adc
dec
bound
add
adc
cmp
adc
inc
pop
adc
imulb
add
arpl
add
sbb
add
adc
xchg
push
adc
cmc
test
stc
test
std
test
add
inc
add
test
or
test
adc
test
sbb
test
and
test
sub
test
add
add
aad
dec
add
add
lock
add
add
add
add
add
add
add
rclb
add
xchg
add
rorb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pusha
mov
add
add
add
mov
add
stos
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
mov
add
mov
add
add
push
mov
add
add
jo
add
jl
add
mov
add
stos
mov
add
mov
add
mov
add
mov
add
mov
add
add
and
add
xor
add
mov
add
add
add
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
dec
mov
add
add
add
test
add
mov
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
lea
add
lea
add
add
push
lea
add
add
jb
add
mov
add
mov
lea
add
lea
add
lea
add
lea
add
lea
add
mov
add
add
sub
add
dec
mov
add
add
add
xchg
add
mov
add
les
add
call
popl
add
popl
add
add
cmp
add
popl
add
add
mov
add
lods
popl
add
popl
add
popl
add
popl
add
popl
add
add
and
add
push
nop
add
xchg
add
js
add
mov
add
lods
nop
add
mov
nop
add
nop
add
out
nop
add
nop
add
or
add
and
add
cmp
add
pop
xchg
add
jo
add
xchg
add
mov
xchg
add
mov
xchg
add
ficoml
add
cli
xchg
add
or
add
cs
add
add
add
inc
xchg
add
push
xchg
add
xchg
add
jle
add
nop
xchg
add
mov
xchg
add
int3
xchg
add
xchg
add
call
xchg
add
adc
add
xor
add
push
xchg
add
pusha
xchg
add
insb
xchg
add
adcb
add
add
xchg
add
call
xchg
add
add
add
and
add
add
pop
xchg
add
jbe
add
mov
add
xchg
add
rclb
add
xchg
add
add
add
sub
add
cmp
add
push
xchg
add
pop
xchg
add
outsb
xchg
add
jle
add
mov
add
add
add
xchg
add
insb
dec
outsb
imul
jb
outsb
add
fs
insb
cs
insb
add
push
imul
dec
jb
inc
js
add
push
gs
inc
js
outsb
je
outsl
imul
push
gs
gs
inc
insb
imul
inc
js
push
gs
dec
jne
push
add
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
pop
add
fs
push
popa
je
add
popa
je
inc
outsl
insl
jo
je
bound
inc
add
mov
push
outsl
insb
jns
imul
inc
gs
imul
addr16
js
add
add
je
popa
jns
jne
add
add
je
bound
je
jb
arpl
add
add
jb
je
push
je
add
inc
gs
dec
inc
imul
je
popa
jo
outsl
fs
daa
add
je
imul
add
jae
je
outsb
add
jo
gs
add
popa
insb
gs
imul
je
js
add
inc
gs
je
arpl
bound
arpl
lcall
outsl
add
mov
push
outsl
insb
jns
outsl
outsb
add
inc
gs
gs
inc
insb
imul
inc
gs
gs
inc
popa
arpl
add
mov
insb
imul
je
add
movl
jp
push
popa
insb
gs
add
bound
gs
outsb
add
push
add
je
jne
inc
add
testl
arpl
outsb
add
movsl
add
gs
je
push
popa
insb
gs
add
inc
gs
imul
jae
movl
inc
outsl
outsb
je
push
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
inc
inc
add
add
je
imul
jae
mov
inc
jb
popa
je
inc
imul
imul
mov
inc
gs
gs
dec
gs
imul
push
gs
jb
jae
dec
jb
inc
js
mov
je
outsb
push
imul
inc
jae
popa
jo
add
scas
add
insb
jns
gs
gs
add
popa
je
push
arpl
outsb
add
popa
je
inc
inc
push
add
inc
jne
jb
outsb
je
bound
arpl
inc
inc
dec
xor
cs
insb
add
outsb
jae
insb
gs
insb
add
add
popa
jb
jo
gs
add
dec
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
scas
add
fs
jne
jae
jb
add
inc
jb
popa
je
inc
imul
jb
insl
inc
add
popf
add
dec
outsb
jne
add
inc
gs
imul
add
je
outsl
jo
imul
mov
imul
jae
bound
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
add
insb
insb
push
imul
outsl
arpl
repz
je
popa
jb
je
outsl
jae
ret
jbe
jo
imul
test
dec
outsl
popa
fs
arpl
insb
gs
je
jb
push
add
add
imul
outsl
ja
outsl
push
outsl
jo
add
inc
jb
insl
gs
jb
arpl
mov
ja
gs
inc
js
add
insb
popa
je
push
arpl
add
imul
popa
jae
push
add
inc
add
je
popa
jae
inc
jb
outsl
jb
js
add
push
jo
jb
add
inc
add
imul
arpl
outsb
add
push
add
je
popa
jb
outsb
je
xchg
add
arpl
outsl
jo
jo
outsb
jne
js
add
add
je
gs
outsl
popa
jb
dec
popa
jns
jne
add
add
je
insb
popa
jae
dec
popa
insl
gs
add
add
jne
insb
push
arpl
add
je
popa
jb
je
outsl
jae
and
inc
push
dec
outsb
jne
add
je
outsl
jns
imul
add
jae
push
push
dec
gs
popa
addr16
add
push
add
je
jb
jo
add
mov
dec
outsl
popa
fs
arpl
push
add
add
dec
outsb
push
arpl
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
sti
add
arpl
outsl
jo
jo
outsb
jne
add
popa
je
push
imul
push
add
insl
outsl
jbe
dec
outsb
jne
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
mov
dec
outsl
popa
fs
insl
popa
addr16
add
add
inc
fs
jae
push
imul
arpl
addl
outsb
fs
gs
popa
addr16
js
xchg
dec
outsb
jae
jb
dec
outsb
jne
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
addb
ja
jo
outsl
jne
gs
jne
je
outsb
add
add
imul
jae
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
stos
add
fs
imul
add
dec
gs
arpl
push
add
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
inc
gs
jne
dec
outsb
jne
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
gs
je
jo
imul
sub
fs
outsl
je
data16
gs
popa
addr16
add
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
popa
jb
outsl
ja
jb
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
inc
insb
addr16
je
insl
dec
outsb
je
mov
imul
mov
imul
imul
add
outsb
inc
gs
je
jo
add
cmp
inc
push
insb
addr16
jne
je
outsb
add
mov
dec
outsb
jbe
jb
push
arpl
popl
inc
gs
imul
outsl
arpl
add
inc
imul
jae
push
outsb
imul
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
insb
addr16
jne
je
outsb
inc
push
add
insl
add
je
imul
outsb
addr16
add
popa
add
gs
je
push
outsl
jo
jo
outsb
jne
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
stos
add
ja
outsb
imul
arpl
sahf
add
push
arpl
jo
jns
incb
inc
gs
insb
imul
jb
lds
inc
outsb
fs
popa
imul
inc
outsb
jne
push
imul
xchg
dec
outsb
je
jb
popa
insb
inc
gs
imul
js
add
push
ja
jb
add
aad
dec
gs
popa
addr16
outsl
js
add
imul
outsl
ja
jo
popa
je
add
add
popa
jb
outsl
ja
jb
add
lcall
push
arpl
add
je
outsb
jne
je
imul
add
outsb
imul
push
arpl
add
je
imul
outsb
addr16
add
or
inc
imul
push
imul
jae
add
popa
jb
jb
jbe
add
add
jbe
push
imul
mov
dec
outsl
popa
fs
outsb
jne
add
bound
jbe
outsb
je
pop
add
je
jns
je
insl
dec
gs
imul
dec
outsl
popa
fs
arpl
inc
add
inc
gs
gs
inc
insb
addr16
popa
bound
gs
add
ja
arpl
add
std
add
je
insb
imul
je
add
je
gs
popa
addr16
add
inc
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
gs
jae
inc
inc
add
inc
push
xor
cs
insb
add
add
jbe
inc
imul
add
outsb
fs
gs
jne
arpl
js
add
add
gs
jne
jb
outsb
je
imul
jns
add
sub
gs
popa
outsb
fs
gs
outsl
jne
je
add
jo
jb
push
je
imul
add
insb
gs
imul
arpl
inc
imul
cmp
gs
jns
je
insl
push
imul
gs
inc
push
add
arpl
inc
imul
je
imul
dec
outsl
popa
fs
imul
add
push
add
je
jb
jb
je
arpl
push
arpl
outsb
add
cltd
add
je
outsl
insl
insl
inc
outsl
outsb
imul
inc
jb
gs
gs
jne
arpl
add
inc
imul
je
imul
inc
gs
imul
jo
push
add
fiadds
jae
jb
outsb
push
add
pop
add
popa
insb
push
imul
gs
jns
je
insl
inc
imul
jns
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
lret
jb
popa
je
inc
imul
jns
add
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
add
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
xor
gs
imul
gs
outsl
insl
insl
push
je
je
add
mov
push
imul
imul
insb
gs
bound
arpl
add
je
jns
je
insl
push
imul
jae
insl
outsb
je
add
inc
gs
gs
inc
imul
gs
push
popa
je
dec
popa
insl
gs
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
je
dec
popa
insl
gs
imul
add
inc
popa
fs
gs
fs
je
add
jnp
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
inc
add
je
jb
arpl
fs
jae
add
movb
gs
je
jbe
outsb
je
add
popa
jb
outsl
insl
insl
inc
jb
outsl
jb
add
jo
outsb
insb
outsl
arpl
add
add
je
outsl
insl
insl
push
je
je
add
out
add
je
imul
bound
gs
add
sub
inc
outsb
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
sub
dec
outsl
arpl
push
imul
inc
outsb
jne
push
gs
jne
arpl
popa
insl
gs
add
imul
gs
add
gs
imul
gs
add
inc
imul
jne
arpl
add
gs
inc
imul
gs
outsl
insl
jo
je
jb
popa
insl
gs
js
add
cmp
dec
outsl
jbe
inc
imul
dec
inc
dec
xor
cs
insb
add
add
add
sub
add
add
xchg
add
imul
outsl
insl
add
je
push
inc
js
inc
cmp
