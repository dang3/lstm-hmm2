push
mov
sub
add
movl
xor
mov
or
jmp
sub
adc
xchg
add
imul
cmpsl
lds
adc
adc
cli
adc
xchg
out
xchg
fidivrl
sahf
adc
cbtw
loop
push
xor
add
push
xchg
xchg
or
xchg
xlat
adc
bound
jmp
xor
push
cmp
push
mov
cwtl
leave
lahf
xor
jle
mov
cmp
leave
repz
andl
inc
cmc
adc
adcl
pop
mov
es
jno
adc
push
jmp
push
imul
dec
and
je
rcrl
inc
cs
int
imul
mov
sahf
push
in
lea
clc
ja
cmp
imul
aad
pop
and
cltd
xor
movsl
dec
cltd
pop
mov
jl
push
push
cmpsl
mov
cmp
scas
call
loopne
xchg
xchg
inc
mov
imul
enter
lods
add
cmp
ljmp
and
das
imul
adc
mov
xchg
test
fnstsw
ljmp
jne
fstpt
add
sbb
inc
push
or
out
addb
fisttps
sahf
mov
inc
fistpl
xchg
mov
jbe
mov
mov
lret
cmpsl
mov
aad
idivb
fucom
lods
xor
sub
pop
adc
mov
xor
scas
mov
arpl
popa
mov
loopne
mov
sarb
mov
adc
xor
mov
mov
mov
das
adc
repnz
rolb
jae
inc
cmp
push
mov
in
push
sbb
out
sub
or
inc
xchg
mov
jbe
push
xorl
imul
pop
jns
cmp
rcr
xlat
mov
pop
xor
jo
in
fs
or
dec
sbb
leave
push
int3
inc
nop
jge
loop
add
inc
jae
lret
lea
pop
stc
adc
inc
xor
fs
outsb
stos
mov
and
shlb
and
inc
call
mov
lret
out
aas
test
aaa
mov
jmp
das
inc
and
fisubrl
leave
push
cld
lods
rclb
das
fwait
push
hlt
ja
sub
pop
jge
inc
fstps
sub
in
sahf
cwtl
sbb
cli
ljmp
daa
test
stos
aaa
out
cwtl
nop
cmpsb
not
les
or
sub
test
aam
pop
int3
loop
jno
or
xlat
pop
add
add
inc
and
mov
jl
inc
fsubrp
cwtl
ret
push
scas
push
cwtl
adc
ret
lahf
daa
ret
add
push
jg
into
and
es
pop
fsubrs
das
mov
pop
out
insl
pop
js
out
pop
lods
mov
in
push
ret
xchg
sub
call
mov
mov
out
dec
jmp
shl
xchg
je
jnp
das
jo
mov
sbb
adc
dec
lods
mov
ror
jae
xchg
call
dec
addr16
xchg
jno
fidivs
aad
out
and
xor
mov
stos
fcmovbe
push
or
gs
mov
data16
dec
mov
mov
sub
ja
sbb
pushf
adc
add
mov
add
sahf
in
jmp
loope
sarb
adc
jbe
jp
inc
sbb
cltd
and
sarb
inc
enter
xchg
lcall
pop
loopne
dec
cmpb
sub
test
popf
out
fisubl
or
add
sbb
nop
push
popa
mov
dec
adc
mov
rcr
cltd
shlb
lcall
xor
sbb
adc
mov
daa
dec
les
inc
mov
push
jge
lret
test
cmp
pop
leave
shlb
fdivs
xchg
xor
mov
mov
test
lods
faddl
lea
aam
inc
jecxz
hlt
icebp
xchg
lods
pop
adc
cs
dec
stos
cs
cmp
cwtl
inc
jb
dec
rol
pop
and
adcb
cltd
xor
jno
or
inc
jg
leave
mov
movl
xor
mov
movl
and
movl
dec
movl
adc
mov
sbb
xor
xor
or
sbb
mov
orl
div
adc
xor
adc
push
mov
adc
mov
add
orl
mov
and
div
and
mov
cmpl
jle
sbbl
jmp
push
push
pushl
call
movl
movl
mov
mov
imul
lea
mov
mov
cmp
movl
je
subl
movl
cmpl
jbe
inc
jmp
push
push
pushl
call
movl
movl
jmp
loop
mov
stos
fcmovnb
xchg
xchg
daa
cli
adc
daa
cli
adc
sbb
push
js
or
inc
pop
jae
pop
or
push
cmpsb
add
jne
ret
daa
sbb
ljmp
xchg
inc
fcmovnb
and
ss
mov
nop
dec
outsl
inc
cmp
push
jae
cmp
subl
mov
xchg
out
ljmp
dec
aad
fiaddl
arpl
mov
xchg
inc
and
aaa
cs
pop
hlt
insl
xchg
cwtl
ljmp
jl
jne
idivb
mov
rcrb
xabort
xchg
xchg
jg
mov
cmp
mov
repz
dec
push
inc
jmp
rcrb
xor
push
dec
enter
push
fmull
nop
mov
mov
xor
pop
fsubs
movsl
xchg
cwtl
inc
cltd
cs
cwtl
and
shl
xchg
mov
push
xor
mov
cld
sbb
pusha
out
mov
mov
cltd
inc
dec
pop
mov
lods
scas
or
inc
xchg
jmp
mov
fld
aaa
mov
adc
lret
cs
sbb
sbb
pop
sbb
in
fsts
shlb
cmpsb
popa
clc
inc
fldt
aaa
adc
ret
int
pop
xchg
notl
sbb
repnz
sti
or
shrl
cmpsl
subl
dec
pop
test
mov
iret
mov
call
pop
jno
std
sub
in
icebp
dec
popa
dec
je
scas
dec
out
dec
xor
push
xchg
sti
push
out
mov
inc
dec
popa
pop
jne
sarl
orb
xchg
leave
rorl
jge
std
pop
mov
jae
test
xchg
pop
aam
mov
aaa
fisubs
sub
test
out
movsl
sbb
xchg
loop
test
dec
hlt
xor
and
sub
adc
mov
es
xchg
gs
ds
push
sar
ret
add
cld
inc
movsl
sbb
pop
xchg
jb
jb
mov
pop
mov
push
push
std
inc
rorb
and
xor
dec
cmpb
cmp
lds
push
sarb
or
std
pusha
loope
mov
enter
stos
stos
jmp
out
scas
pop
or
pop
addr16
movsl
jnp
mov
cmp
cltd
mov
popf
sbb
sbb
push
jl
dec
cs
sbb
push
jecxz
inc
pop
cmpsb
push
ret
popf
rolb
adc
pop
lea
lods
cmp
sbbl
mov
int3
pushf
cltd
cmpsl
mov
mov
mov
mov
mov
mov
mov
jle
or
sub
and
push
sub
or
adcb
lea
fcoml
fmull
inc
loopne
push
gs
repnz
xchg
cmp
fcmovu
adc
imul
test
enter
ja
mov
jmp
dec
mov
mov
lret
push
test
mov
mov
jno
lret
mov
xor
pop
addr16
insb
in
loopne
leave
lods
bound
sbb
and
enter
sbb
mov
testl
cltd
inc
loope
sub
loop
cmp
das
sbb
gs
or
shlb
sbb
push
jae
pop
jnp
roll
push
scas
or
jb
gs
addr16
xor
lock
pop
daa
sbb
movsl
xchg
mov
rorb
in
push
sarl
adc
es
inc
mov
sbb
imul
xchg
pop
arpl
dec
xchg
out
dec
repnz
inc
push
push
cmc
push
in
pop
cmp
mov
cwtl
icebp
sbb
mov
push
dec
adc
repz
push
stc
int3
scas
adc
or
and
adc
mov
and
mov
leave
mov
mov
nop
rolb
add
cld
xchg
sbb
loope
insb
pop
in
stos
mov
or
rclb
mov
add
test
in
jge
jecxz
fcmovnb
mov
jbe
icebp
imul
pop
mov
out
lahf
insl
scas
cmp
mov
mov
xor
and
mov
movl
xor
sub
mov
sub
movl
add
movl
mov
mov
andl
xor
div
movl
mov
movl
cmp
movl
je
movl
adc
movl
movl
mov
sbb
movl
movl
push
cmpl
jge
mov
xor
jmp
pushl
push
push
pushl
push
call
movl
mov
jmp
subb
xor
lods
insl
lds
in
pop
add
adc
cli
adc
in
push
cmp
std
mov
push
xchg
mov
enter
or
fistpl
and
sub
fisubrs
adc
and
pusha
lahf
inc
lea
cmp
sti
or
mov
mov
loop
insb
pop
mov
pop
add
pop
pop
inc
mov
cwtl
or
hlt
scas
outsb
or
pop
mov
add
adc
imul
jle
pop
aam
mov
cwtl
mov
cwtl
cmp
gs
fimuls
rcrb
loop
icebp
enter
in
cli
add
sbb
test
sbb
xchg
inc
xor
andl
sbb
ja
addr16
aas
pop
lea
xor
jg
push
or
sarl
or
mov
push
out
cmc
out
pop
sub
lods
popf
paddd
fsts
int3
mov
xchg
mov
push
sub
xorb
cld
cmc
into
push
imul
daa
jle
or
push
clc
add
fsubrs
cli
mov
dec
cmp
and
inc
insl
xchg
lahf
or
mov
shrl
shlb
and
dec
mov
lcall
pusha
test
lcall
push
dec
ljmp
fcmovnu
jge
xor
jbe
jo
jns
xor
mov
mov
imul
ret
xor
int3
jg
cmpsl
in
enter
in
mov
rorb
dec
dec
mov
lahf
lea
jnp
cmc
push
inc
cwtl
sahf
sub
imull
xchg
in
adc
xchg
das
xchg
pop
mov
push
push
mov
and
fdivrs
pop
loopne
and
cmpsl
jp
xchg
pop
pop
dec
or
adc
inc
or
inc
sbb
sahf
cmp
sub
fxch
inc
pop
cmp
mov
mov
lret
dec
mov
pop
push
and
scas
xor
cmpsb
fisubrl
xchg
xor
les
std
fucomp
xlat
nop
lahf
dec
push
sub
sbb
daa
icebp
lea
xchg
testb
inc
shll
lea
jbe
mov
xchg
adc
mov
jg
int3
jle
ljmp
or
jmp
mov
adc
stos
dec
inc
das
cltd
dec
sarb
arpl
je
and
pushf
mov
out
popf
xchg
pusha
inc
sbb
mov
sub
jno
jo
lods
cmp
cmp
lret
aaa
int
mov
mov
pushf
mulb
push
mov
or
cwtl
mov
popa
stc
mov
and
movsb
and
cmp
push
cmp
inc
insb
out
or
mov
in
test
or
dec
mov
lcall
xchg
adc
sbb
hlt
push
lds
jno
add
sbb
mov
push
jno
cmp
leave
insb
mov
adc
pop
jmp
cmpsb
push
shr
jg
insl
and
mov
mov
pop
stos
call
jbe
pusha
ds
imul
daa
int3
scas
and
mov
push
pop
push
bound
mov
cmp
pop
popa
lahf
push
mov
mov
push
sbb
popf
add
jno
shlb
sub
pop
mov
aas
imul
jp
add
mov
ret
xor
sti
fiadds
or
dec
loopne
xor
push
pusha
and
mov
jnp
rolb
push
jne
mov
and
cmp
jne
xor
dec
sub
jle
std
pop
xchg
mov
mov
adc
push
dec
sti
xor
fiadds
pop
mov
out
jnp
cmpsb
popa
imul
mov
icebp
add
test
pop
rcr
or
aaa
shrb
pop
in
sub
pushf
ret
xor
cmp
outsb
or
dec
or
inc
in
es
mov
leave
out
pusha
mov
ficoml
int3
xchg
xchg
adc
inc
jge
dec
in
inc
imul
jmp
int3
test
and
sbb
sbb
daa
cli
adc
mov
push
mov
xchg
xchg
push
subl
and
adc
enter
cmpsb
movsb
lods
push
lcall
dec
add
bnd
cmp
jne
pushf
jnp
cli
jo
ljmp
pop
mov
xor
jae
pop
insl
add
adc
test
icebp
inc
sub
scas
mov
ja
xchg
jl
push
push
and
stos
sub
dec
insl
ja
mov
dec
bound
jo
sub
dec
pop
sub
jmp
pop
or
insb
or
xchg
cs
cmp
ds
xor
jbe
in
adc
and
fdiv
sbb
loopne
movsl
mov
inc
subb
and
inc
sti
xchg
cltd
sub
and
out
repnz
and
lret
outsl
es
pop
pop
ds
imul
mov
cs
test
and
subl
mov
push
sub
mov
xchg
loopne
stos
mov
lahf
clc
ljmp
jmp
repz
jmp
mov
sbb
xchg
xchg
lock
jle
dec
add
mov
mov
ret
fists
aam
lret
and
iret
mov
jb
pop
mov
ror
xchg
adc
rcrb
add
add
lea
pop
fbld
movsl
je
and
mov
cmp
push
sbb
test
sub
pusha
mov
mov
jbe
fcompl
into
xor
out
ficomps
add
mov
jg
test
out
lods
pcmpeqb
rolb
idiv
push
xor
sti
inc
pop
jle
sub
lret
rclb
cmp
mul
test
cmp
in
push
cltd
aaa
jge
rclb
and
jg
arpl
ds
push
je
repnz
jle
adc
push
cmp
pop
scas
iret
std
add
int3
cli
pushf
cmp
mov
dec
sbb
mov
data16
shl
cmp
pop
ss
ljmp
cld
fld
mov
adc
mov
xor
rorb
inc
mov
xor
jnp
push
xchg
pop
movsl
int3
lret
jecxz
scas
jl
adc
fiaddl
mov
sbb
faddl
pop
sti
jp
fildl
div
mov
out
sub
jg
sub
mov
ljmp
and
and
fcoms
add
aad
add
jno
in
or
pop
xchg
lret
xchg
pop
aas
int3
add
ret
frstor
push
mov
lods
or
fldcw
xor
mov
dec
mov
pop
mov
test
cmp
cs
stos
data16
dec
stc
shrb
inc
scas
test
sbb
pop
jmp
xor
rorl
loop
jg
js
mov
ljmp
pop
inc
mov
aad
les
mov
ljmp
repz
mov
loope
mov
movsb
loopne
test
adc
pop
jecxz
int
outsb
orl
or
add
les
and
pop
movsb
inc
out
jo
mov
cmovne
aas
xchg
js
je
xchg
xor
push
shlb
mov
lock
sarb
mov
inc
pop
jnp
or
out
sub
sbb
fucom
ss
daa
jns
mov
cmp
lahf
or
add
jb
push
fsubs
add
adc
xchg
pop
arpl
loop
pushf
scas
sub
mov
push
fnstsw
out
push
nop
loopew
repz
pop
pop
ds
js
popf
dec
jge
cld
std
fsubs
lret
enter
mov
pusha
aaa
pop
push
xchg
sysret
adc
xor
mov
out
adc
mov
jmp
das
mov
ficoml
sub
pop
adc
cmpsl
out
and
addl
push
orl
call
cmpl
jg
add
jmp
push
push
push
pushl
push
push
pushl
push
call
mov
mov
and
mov
and
mov
orl
and
and
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
jmp
adc
sahf
sahf
xchg
push
adc
aaa
test
xchg
ret
adc
cli
adc
xchg
pop
pop
jo
pop
nop
stc
jmp
push
pop
push
jmp
push
mov
aas
adc
cmp
les
das
jl
push
dec
push
pop
mov
fld
xchg
aaa
ljmp
cmp
adc
and
push
std
faddl
aad
xor
jae
loope
inc
lret
sbb
push
rclb
sbb
movsl
pop
cld
dec
hlt
out
jmp
mov
cmp
das
das
xor
push
sbb
push
clc
das
fadds
sub
out
push
cld
dec
or
jecxz
stos
cwtl
pop
arpl
or
sub
cwtl
jmp
add
into
pop
sahf
mov
scas
inc
icebp
push
xchg
mov
jl
sti
sub
add
dec
mov
jnp
add
fs
dec
cli
lahf
pop
out
aaa
bound
adc
jmp
sbb
xlat
ficoms
and
xchg
dec
adc
fwait
addr16
cmpsl
push
push
inc
testl
stos
xchg
roll
cwtl
test
imul
bnd
or
sarb
xor
inc
add
dec
adc
pop
mov
mov
std
jle
sub
pop
sub
jo
add
mov
and
aas
int
xchg
stos
jb
cmp
paddsw
cmp
sti
test
cmp
out
decb
ret
imul
cltd
dec
js
push
scas
ret
dec
leave
dec
mov
push
push
pop
dec
cli
mov
pop
imul
cs
dec
cmpb
gs
bound
stos
loopne
std
mov
int
movsb
xchg
sahf
xlat
jle
es
xor
rcr
test
jns
in
mov
ljmp
mov
xor
ja
pop
addr16
rorb
stos
gs
into
addr16
dec
jge
pop
js
cld
jae
mov
cmp
and
imul
aaa
in
mov
sub
mov
jge
jle
xchg
popf
dec
cs
lods
lock
in
loop
rcrb
pop
out
int3
sbbb
out
popa
jecxz
dec
pop
jb
xor
lret
lahf
mov
adc
or
push
push
mov
je
sbb
aam
pop
xchg
add
pop
repz
mov
rolb
or
xchg
mov
test
mov
dec
cmp
inc
les
popa
test
mov
into
sub
jns
inc
and
sbb
xchg
jae
sub
jns
jmp
rcrb
cmpsl
pop
add
pop
shrl
jno
cmc
xchg
adc
jnp
pop
mov
add
repz
icebp
enter
mov
cld
iret
sub
add
in
mov
pushf
out
inc
dec
repnz
fimuls
push
das
add
lret
outsl
pop
sbb
scas
sub
scas
dec
lahf
sbb
pop
mov
subb
out
xor
mov
sbb
lret
ljmp
push
inc
lcall
insl
aam
pop
add
pop
jns
lcall
loope
adc
ret
xchg
sbb
jl
push
mov
push
sub
enter
imull
rcll
mov
push
pushf
jbe
adc
adc
lret
inc
sbb
fdivr
test
out
stos
leave
dec
mov
lea
sub
nop
sbb
outsb
dec
je
inc
or
test
add
scas
xor
pop
cmc
test
repnz
arpl
adc
mov
stos
lea
inc
or
in
push
loop
dec
andl
jb
dec
clc
insb
sub
jbe
inc
adcl
aas
dec
outsb
xlat
jl
pop
mov
dec
dec
fidivs
inc
mov
cltd
lahf
add
jbe
mov
xchg
lea
xor
lock
setle
push
data16
jmp
pop
cmpsb
shr
mov
xor
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
movb
movb
movb
movb
or
shl
mov
sub
mov
xor
mov
and
jmp
lds
js
les
sub
loop
jnp
fists
adc
cli
adc
cld
fisubl
cmpsl
in
add
int
lods
insl
loopne
test
je
xchg
push
into
mov
inc
sub
sbb
jno
xchg
in
mov
pop
mov
shlb
sti
cmpsb
mov
mov
stc
adc
bound
push
aad
xchg
fstl
ficompl
hlt
push
lahf
stc
add
adc
ss
shr
and
sub
adcl
jmp
repz
in
dec
loopne
ret
inc
cmc
xor
add
movsl
cmpsl
sub
fildll
pop
insb
stc
mov
pop
xor
mov
pop
fbstp
je
jbe
pop
in
insl
fwait
sbb
mov
ja
jns
and
and
aaa
pushf
aad
rorl
xchg
adc
jmp
add
call
add
jnp
lds
lods
sub
jbe
add
inc
popa
cmpsl
div
mov
mov
leave
movsl
aas
scas
outsb
xor
je
lock
andl
push
mov
xor
cs
mov
inc
mov
clc
popf
jne
dec
icebp
outsb
pop
sub
sub
lcall
stc
inc
pop
test
cs
cld
inc
inc
shlb
outsl
repz
adc
and
dec
rep
add
fwait
clc
jg
lods
mov
mov
test
imul
jne
fwait
lcall
aam
cmp
in
adc
roll
pop
xchg
in
lahf
push
gs
cmc
popa
jmp
sbb
jae
das
shlb
sub
push
sbb
fadds
pop
popa
xor
push
testl
or
push
mov
sbb
jne
arpl
bound
mov
divl
icebp
cmpsl
aam
push
cmp
dec
adc
mov
inc
int3
repz
mov
jp
mov
sahf
add
lods
int
aam
xor
ds
adc
mov
xchg
xchg
add
rcll
bound
repnz
jbe
sub
gs
sub
ss
add
rcrb
sub
mov
push
add
jge
and
gs
test
in
shll
add
xor
dec
sub
xchg
jne
xchg
mov
pop
ret
xchg
mov
pusha
adc
imul
push
adc
xchg
dec
adc
xor
xor
shrl
testb
ss
mov
hlt
andb
mov
xchg
push
mov
cwtl
mov
adcb
pusha
lret
stos
add
xor
nop
in
jg
sub
rcrb
out
les
ret
xchg
dec
mov
inc
and
xchg
lret
or
add
dec
orb
mov
mov
pop
lods
sarl
cltd
lds
pop
bound
mov
in
cmp
push
nop
ja
mov
jmp
or
aaa
ss
mov
imul
in
lods
stos
or
or
test
imul
sbb
ficompl
inc
sbb
out
arpl
jle
paddw
and
pop
lods
mov
jmp
imul
movsb
mov
mov
push
das
cmp
sub
daa
inc
inc
push
les
leave
mov
push
popf
imul
and
xchg
int
enter
pop
inc
fsubp
mov
xchg
mov
lods
jae
cmp
add
jg
out
ja
push
push
pop
mov
add
dec
cmpsl
or
lret
mov
jmp
mov
leave
adc
sbb
shlb
jecxz
adc
scas
ficompl
lods
fsubs
pop
sarl
popf
dec
jno
sbb
adc
inc
adc
das
jo
adc
mov
stc
mov
xor
and
cltd
mov
lods
imul
stos
dec
dec
adcb
cwtl
xchg
jle
imul
orl
repnz
imul
movzbl
shr
mov
movb
movb
movb
mov
mov
sub
xor
sub
mov
add
mov
add
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
jmp
test
dec
push
push
sbb
push
mov
in
xchg
adc
or
adc
daa
cli
adc
xor
mov
or
daa
fcoml
jl
inc
add
xor
test
inc
outsb
fisttpl
outsl
imul
push
dec
mov
sub
adc
repnz
cmc
addr16
or
popf
fisubrl
sbb
fisttps
lahf
leave
pop
in
pop
sti
pop
push
and
lods
inc
int3
jmp
aaa
mov
iret
sti
loope
mov
xor
daa
cmpsl
lret
xchg
clc
sub
xor
jo
je
mov
pushf
inc
jl
and
movl
sub
cmpsl
lods
xchg
inc
jae
insb
jb
or
popa
lods
inc
push
das
popa
dec
pop
leave
repz
in
in
pop
jno
lock
mov
aaa
sbbw
xor
mov
and
add
jbe
push
mov
push
testb
sbb
and
into
lods
cmc
leave
dec
jne
xor
sbb
xchg
cltd
jnp
outsb
push
ljmp
je
daa
loope
in
je
test
pusha
push
test
inc
mov
loop
mov
inc
push
popa
adc
mov
popf
xor
cmp
push
mov
lea
mov
push
icebp
fld
lret
out
enter
mov
lock
push
mov
sbb
xlat
rcl
push
lret
sub
jle
in
jle
rcll
mov
enter
pop
or
sub
xchg
pop
das
repz
push
ds
cmp
mov
fcompp
repnz
out
sbb
and
dec
dec
jle
xchg
lock
pop
sbb
xor
mov
push
or
insb
aaa
add
ljmp
xchg
sub
ror
je
or
repnz
ds
xlat
push
fists
push
jp
jl
fdivs
mov
fildll
inc
dec
inc
adc
dec
aaa
sahf
jp
mov
jl
imull
dec
pop
mov
jae
adcb
shll
and
inc
push
dec
sub
jp
popf
mov
inc
inc
cmp
mov
xor
add
stos
jae
xchg
push
mov
int3
shl
mov
add
and
movsl
mov
add
aas
mov
addr16
cmp
lock
push
cld
shr
jbe
test
popf
inc
push
sub
push
insl
sarb
in
fcompl
fs
js
sub
mov
fdivl
sbb
imul
cmpsl
jo,pn
and
mov
jle
dec
cli
cwtl
rcrl
mov
lret
push
les
addb
scas
stos
subb
and
mov
xchg
dec
pop
lahf
push
loop
push
sub
dec
and
add
jp
cwtl
jbe
xchg
cmp
push
cld
sbbb
fsub
test
xor
and
sbb
jb
mov
into
sbb
mov
ret
testb
arpl
cli
mov
mov
nop
push
push
fisttpl
mov
out
arpl
jns
fsubrs
mov
ds
sub
pop
lds
repz
sub
mov
pop
xor
inc
adc
dec
aaa
fptan
daa
cmp
jbe
mov
dec
or
loopne
fcompl
fidivrs
mov
pop
sbb
sti
cli
add
call
cwtl
notl
jbe
mov
mov
lds
mov
jg
movsl
xchg
lods
lret
sub
inc
xlat
adc
das
fcomps
sub
xchg
xchg
add
push
out
pop
mov
add
lret
and
mov
cmp
scas
das
add
cmp
pop
pop
mov
jl
fidivrl
pop
sbb
mov
aam
adc
mov
dec
adc
bound
gs
imul
pop
je
bound
pop
hlt
scas
dec
std
or
inc
aam
xor
and
in
stos
pop
xor
or
pop
cmp
fildl
dec
in
rolb
je
mov
cs
sub
ljmp
dec
mov
ficompl
or
mov
jmp
jae
xor
xor
push
push
int3
sub
ds
adc
daa
cli
adc
aaa
bound
or
insl
or
ss
arpl
cmp
adc
lret
jno
inc
adc
outsl
cmpsl
mov
popl
add
test
popa
cmp
push
cli
mov
add
inc
sbb
aam
in
and
adcl
leave
push
pop
inc
mov
movsb
lds
out
rorl
addr16
lcall
push
sbbb
sub
mov
ficoms
fs
push
jno
adc
fwait
jae
clc
sub
aad
rolb
pop
push
repz
sbb
enter
xchg
inc
pop
icebp
int
lret
mov
or
ficoms
push
test
or
add
ljmp
in
scas
push
nop
cli
loopne
shll
fsts
xor
mov
jg
adc
addr16
cltd
inc
xchg
xchg
jae
pop
test
pop
fstpl
cld
pop
insb
jmp
outsb
inc
insl
push
in
push
jns
mov
mov
int
pop
mov
push
sub
dec
sub
pop
xchg
lahf
jecxz
mov
es
sbb
mov
addr16
cmpsl
jmp
mov
mov
cld
nop
out
mov
movsl
loop
and
pushf
xor
xchg
jge
sti
push
fs
add
mov
push
iret
sbb
pop
sub
popf
adc
sub
ret
jo
insb
fldt
inc
xorb
movsl
xor
or
outsb
test
in
ret
mov
scas
adc
lods
pop
xor
gs
in
pop
fwait
xchg
mov
leave
cmp
sub
mov
stc
dec
pop
xchg
gs
sub
popl
stos
cmp
shll
sub
and
ss
jnp
aad
insl
xor
cmp
xor
out
push
test
jecxz
mov
add
test
sbbb
je
xchg
and
data16
push
cli
pop
aam
xchg
movsb
decb
cmp
mov
outsl
dec
inc
jbe
sub
lret
imul
out
data16
mov
lret
scas
pushf
mov
lret
dec
inc
test
fbld
dec
fidivrs
jmp
rolb
in
adc
cmp
mov
push
pop
sub
xchg
cmpsb
or
pop
fnsetpm(287
repnz
icebp
mov
xchg
push
push
mov
fmuls
js
out
push
add
add
jbe
dec
xchg
addl
adc
adc
insl
inc
out
rorb
add
lds
adc
jbe
mov
stos
and
xchg
jae
addr16
cmp
push
sahf
inc
pop
fs
xchg
push
iret
dec
scas
stos
loopne
lcall
mulb
sub
outsl
inc
adcb
mov
pusha
fnstcw
mov
mov
int3
mov
rcrb
and
xor
add
pop
push
pop
sbb
loop
sahf
xor
scas
movsb
mov
fs
jl
ficompl
loopne
loopne
shll
es
cmp
adc
inc
push
test
mov
in
lea
mov
push
shrl
jbe
sub
and
mov
mov
and
push
mov
xchg
adc
sbb
scas
cmpsl
leave
xchg
jp
inc
jne
adc
cmp
in
loopne
pop
pop
sbbl
xor
les
out
int
or
je
in
rolb
ljmp
inc
out
dec
inc
mov
dec
push
std
nop
ret
adc
jno
mov
mov
sub
cmc
movsl
out
add
mov
push
sti
rcl
dec
pop
lea
jbe
std
bound
scas
xchg
mov
and
or
or
stos
icebp
push
popf
xchg
inc
push
dec
nop
and
adc
xchg
loopne
or
adc
das
jns
pop
mov
sbb
jnp
scas
sub
lods
dec
dec
out
imul
sbb
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shrd
shr
ret
xor
or
xor
mov
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
cmpl
jb
adc
jmp
push
call
mov
mov
mov
sub
push
mov
mov
movl
sbb
mov
subl
orl
orl
movzwl
or
mov
mov
mov
xor
add
mov
adc
mov
mov
addl
sub
mov
mov
movl
sbb
not
mov
jmp
xlat
jmp
loopne
aam
cmc
or
outsl
push
jae
adc
aaa
cli
adc
lret
pusha
testl
stc
std
push
lcall
push
mov
add
xor
cmp
fwait
mov
cmp
push
adc
xchg
mov
call
fadd
mov
in
outsl
ja
cli
or
andb
add
pushf
les
insl
stc
xchg
sbb
adc
daa
fdivs
xchg
push
inc
jne
sub
loopne
mov
imul
xchg
ds
cmc
sbb
mov
clc
cmpsb
out
jl
xor
xor
test
and
jns
faddl
iret
mov
lods
out
mov
movsb
scas
movsl
pop
test
nop
bound
popa
lcall
or
loope
fwait
repz
mov
mov
aaa
jp
sbb
jp
push
stc
aas
and
dec
push
sarb
pop
or
xor
dec
sbb
jp
pop
fldcw
and
dec
lret
in
inc
mov
add
mov
dec
loope
int
cwtl
inc
out
add
sub
or
sub
mov
das
cmp
cmpsb
jge
nop
mov
movb
lahf
scas
pop
ja
nop
pop
loopne
in
push
rcrb
out
and
pushf
pop
in
pushf
jg
mov
jle
jmp
or
pop
xor
in
adc
mov
cmp
mov
outsb
mov
and
in
outsl
pop
mul
sub
dec
rcrb
sbb
mov
lcall
rcrl
out
call
cmp
cwtl
scas
cmp
xor
dec
jle
add
xchg
lods
arpl
lahf
pusha
mov
sbb
stos
outsl
dec
loopne
cmp
mov
lret
cmp
out
mov
pop
test
pop
mov
scas
sahf
mov
dec
imul
cmc
or
lcall
je
jbe
adc
fiadds
pushf
mov
subl
decb
sub
adc
lods
loop
scas
js
mov
nop
mov
shlb
inc
and
pop
or
cltd
mov
insl
mov
mov
jmp
fsubrs
push
pusha
in
insl
mov
jnp
leave
push
push
xlat
and
mov
adcb
gs
les
lea
pop
sbb
bound
pusha
jo
xor
jnp
push
ss
inc
mov
cmpsb
neg
clc
jmp
jle
cmpsl
sbb
insb
and
xor
loopne
xor
js
xlat
mov
andl
pop
in
adc
xor
cli
icebp
jmpw
hlt
repz
mov
cs
cmp
test
pop
pop
lods
insl
xchg
stos
dec
mov
cltd
mov
sbb
xor
lret
cmpsb
jns
and
je
dec
xchg
lahf
fadds
fnstcw
and
in
aam
pop
pop
stos
scas
out
inc
fimuls
push
and
fwait
lret
cmp
pop
sbb
andl
adc
mov
pushf
sbb
stc
push
dec
sub
std
cmp
popf
jno
pop
adc
das
mov
add
int3
jecxz
adc
dec
cmpsl
out
dec
and
andb
and
push
push
ror
ret
cltd
or
adc
insb
mov
ds
mov
lcall
mov
mov
in
and
cmp
fnstcw
hlt
jmp
test
mov
dec
adc
sarb
cli
test
clc
and
xchg
loop
inc
xor
aas
jno
imul
adc
xchg
cmp
pop
xchg
repnz
cwtl
mov
push
mov
sbb
jo
ljmp
sub
mov
les
int
mov
loop
add
std
jno
dec
add
fimuls
rclb
mov
hlt
out
imull
lea
aam
pop
scas
das
push
sbb
add
mov
mov
xor
int
iret
mov
sbb
inc
or
nop
xchg
push
sarl
pop
insb
jbe
mov
test
adcb
or
orl
lea
cmpl
ja
xor
xor
jmp
pushl
push
pushl
push
pushl
call
mov
mov
mov
mov
add
mov
andl
mov
mov
or
mov
shrd
sbb
shr
cmpl
jl
jmp
pushl
push
pushl
pushl
pushl
push
push
pushl
pushl
push
push
call
mov
mov
xor
xor
or
mov
movl
movl
orl
movl
adc
movl
cmpl
ja
or
jmp
call
movl
movl
movl
movl
movl
movl
sbb
movl
cmpl
jge
xorl
sbbl
jmp
pushl
push
push
pushl
call
movl
movl
movl
movl
movl
movl
jmp
mov
dec
or
loopne
xchg
xchg
lds
adc
cli
adc
fwait
dec
test
sarb
mov
lods
or
cmp
int3
mov
iret
daa
jmp
cmpsb
shlb
inc
xchg
cmc
dec
addl
mov
push
ss
push
cmp
push
int
xchg
cmp
fiadds
imul
fstps
sub
pop
imul
xor
scas
loopne
pop
sub
pop
arpl
aas
xlat
adc
loope
test
repz
ficompl
add
push
aad
vminpd
push
inc
pop
nop
test
mov
jg
push
inc
dec
xor
add
in
pop
push
xchg
fsts
mov
adc
fs
rcl
inc
adc
shll
orb
notl
jge
ss
pop
sarl
loopne
cwtl
pop
fnstsw
jno
aaa
add
std
fnstsw
sbb
adc
addr16
insl
dec
adcl
xchg
test
and
and
xchg
movsb
ret
aam
and
pop
int3
inc
cmp
pop
test
cmp
lods
mov
imul
lea
inc
out
sti
xchg
dec
in
icebp
lock
lock
imul
in
stc
je
push
pop
pop
outsb
mov
in
cmovge
shr
fcomp
test
fisubrl
add
push
testb
nop
pop
popf
jp
adcb
das
push
aas
and
out
inc
in
sbb
push
rcll
inc
fbstp
out
clc
and
movb
sub
jae
or
imul
sub
pop
das
stos
gs
cs
xor
push
pop
dec
leave
out
movsb
frstor
fisttps
inc
js
cltd
test
mov
add
or
mov
jl
scas
add
leave
mov
daa
add
addr16
in
arpl
push
sub
jno
out
insl
scas
mov
movsb
cmp
repnz
sbb
outsb
icebp
mov
and
sti
lea
lret
aaa
dec
jmp
ljmp
lret
sub
jae
mov
dec
int3
mov
int3
jnp
cmp
push
or
mov
add
mov
pop
lock
imul
and
bound
addr16
sub
lea
test
jae
mov
inc
cmc
push
mov
mov
mov
pavgb
mov
xor
pop
sahf
jmp
xchg
insl
inc
push
bound
adc
clc
push
xchg
arpl
cmp
push
mov
pop
add
fcmove
loopne
lock
insl
xor
test
ds
cli
push
aas
and
cmpsl
sahf
shlb
adc
and
xor
inc
lock
and
pop
nop
push
xor
rorl
mov
mov
aas
xor
push
int3
inc
push
rol
jecxz
mov
push
dec
lds
loope,pt
hlt
mov
jl
xor
or
repnz
es
js
add
bnd
mov
pusha
xchg
insb
sub
aaa
jo
pop
ror
insb
jnp
ficoml
and
or
sub
push
inc
dec
mov
xchg
xor
xor
fisubrs
mov
daa
add
call
pop
mov
fildll
mov
ljmp
nop
xor
jmp
cmp
call
jp
inc
lock
inc
pop
out
inc
push
ror
fidivrs
ds
adc
jg
jmp
xchg
or
test
pop
daa
mov
jge
in
mov
mul
dec
cmp
push
inc
ljmp
orl
fnsave
xchg
sbb
sbb
scas
in
dec
sahf
fisubl
sub
int3
nop
push
jmp
cmpb
cwtl
push
test
pusha
stos
xchg
sbb
arpl
mov
divl
addr16
lret
inc
test
clc
out
jo
add
push
loop
in
inc
aam
push
add
cmpl
jg
not
jmp
push
push
push
pushl
pushl
pushl
push
pushl
pushl
call
movl
movl
movl
movl
mov
shl
xor
mov
subl
push
jmp
repnz
push
sub
iret
adc
mov
fstpt
stos
adc
aaa
cli
adc
or
mov
push
jo
in
add
mov
leave
cmc
or
rcl
mov
xor
outsl
fmull
lret
movsb
push
pop
loop
adc
inc
test
out
scas
mov
and
sbb
dec
jmp
push
inc
jp
and
je
and
mov
aad
sarl
cmp
enter
rolb
fsubrs
pop
je
and
mov
sbbl
leave
jecxz
xchg
jmp
stos
adc
mov
push
adc
mov
icebp
icebp
dec
aas
push
inc
insl
or
sbb
sbb
inc
ds
mov
inc
push
cmc
loope
jns
lahf
int3
cmp
incl
mov
mov
adc
xchg
and
add
loop
lret
sbb
xchg
bnd
lret
roll
inc
and
insb
dec
mov
sub
sbb
push
xor
and
fnstenv
enter
inc
insb
and
jecxz
scas
cmp
fs
mov
xlat
cmp
cmp
lea
dec
inc
fsts
mov
adc
jecxz
scas
pop
adc
clc
imul
and
and
lods
mov
ror
in
in
push
mov
sub
out
sbb
inc
jnp
cs
cli
xchg
es
jne
pop
sarl
inc
add
mov
inc
push
jo
cs
mov
sbb
sub
lret
or
divb
lods
fmulp
push
loope
jg
pusha
jl
dec
xor
xor
ret
dec
cmpsl
popf
mov
adc
push
fwait
cli
push
dec
mov
mov
mov
mov
xchg
push
add
xlat
push
mov
insl
cltd
pushl
sbb
aad
mov
cwtl
xchg
cmpsl
fdiv
mov
std
pop
mov
shrb
add
gs
pop
and
movsl
mov
std
jo
imul
sub
pop
ss
cmp
dec
stos
sub
pop
push
andl
and
in
mov
fldenv
mov
mov
jae
fcomps
push
test
jns
mov
fst
fbld
add
roll
mov
aas
push
jle
xchg
and
popa
test
dec
mov
bound
adc
push
fstp
mov
icebp
fsts
pop
setle
dec
jle
jle
std
ja
outsb
mov
adc
je
xchg
jns
mov
lea
jl
xor
inc
pusha
lock
out
fstpt
cmp
sbb
out
cmp
xchg
mov
pop
pop
xorl
out
int3
mov
jl
call
sbb
shll
movsl
pop
dec
jbe
icebp
mov
lock
stos
imul
push
loopne
popf
add
jns
lea
aam
pusha
xchg
lret
ljmp
xorl
cmp
dec
gs
imul
std
pop
in
mov
fs
add
cwtl
mov
ja
ja
je
jne
jg
jmp
mov
sbb
ret
fiaddl
orl
inc
inc
outsl
dec
shll
cmp
ja
ja
sahf
scas
ja
pop
mov
int3
inc
add
ret
add
jmp
xchg
fiaddl
pop
mov
ret
jb
mov
stos
fdivr
in
out
mov
cmc
sbb
inc
icebp
sub
scas
pop
repnz
xor
cmp
and
mov
jge
push
test
mov
fmuls
ret
adc
jmp
nop
in
sbb
jg
test
adc
mov
xchg
mov
and
aam
imul
aam
sub
loopne
jne
xorl
cltd
insb
mov
lahf
push
fadd
dec
pop
add
pushf
xchg
scas
adc
xchg
and
into
imul
imul
xchg
cmp
out
bound
mov
cmp
fildl
pop
leave
fsubs
jno
or
test
jle
fmull
out
adc
lcall
mov
push
push
sbbl
call
cmpl
jbe
jmp
pushl
push
push
push
pushl
call
mov
mov
xor
mov
mov
sub
mov
lea
cmpl
jle
and
jmp
push
call
mov
mov
or
and
mov
or
xorl
xor
movl
cmp
jne
andl
mov
sbb
mov
and
shrd
xorl
jmp
mov
pop
xor
ss
adc
adc
cli
adc
pop
repnz
pusha
les
jecxz
in
add
popw
sti
mov
lea
test
dec
jo
cli
xlat
mov
fcmovb
cmp
and
inc
insb
test
inc
dec
int
test
neg
js
adc
xor
std
mov
fstpt
in
adc
popf
mov
jno
mov
mov
jp
negb
mov
inc
ljmp
in
push
xor
add
gs
mov
rolb
out
adc
xchg
or
push
and
sbb
pop
ret
jae
pop
xchg
sub
pusha
loopne
jmp
xor
je
mov
jnp
or
je
sbb
pushl
mov
jbe
adc
jmp
sbb
xchg
and
mov
js
jle
lods
jo
mov
pop
loop
in
push
jno
push
cmp
cmp
adc
pop
mull
insl
loopne
out
icebp
iret
cmpsb
pop
sbb
mov
push
sbb
dec
lcall
xchg
repz
scas
mov
shlb
xchg
push
ret
add
push
push
lds
cwtl
popf
mov
mov
ret
mov
sti
test
jno
pusha
loope
ja
pop
jge
or
fadds
das
shl
loop
jo
int
add
adc
push
xor
test
fwait
adc
imul
icebp
or
call
popa
mov
in
int3
xchg
imul
out
je
test
out
cltd
mov
xor
in
test
push
or
sub
dec
addb
shll
xor
cmp
pop
push
mov
fimull
in
xchg
rclb
or
push
loopne
xchg
pcmpgtb
push
jno
aaa
jle
movsl
fwait
imul
and
adc
jg
out
adc
xor
inc
and
in
cmp
rcl
ss
adc
and
push
int3
and
jmp
into
and
repnz
mov
pusha
mov
outsl
data16
pop
jecxz
roll
mov
mov
es
scas
push
insb
test
aaa
lods
cs
push
mov
adc
push
jp
mov
lahf
fnstenv
pusha
xor
mov
xor
push
mov
sbb
repnz
mov
into
addr16
rcrb
fwait
mov
jle
cs
movsb
mov
xchg
lret
imulb
out
sarb
sbb
push
ljmp
lods
push
xlat
sbb
inc
test
lds
pop
mov
jne
push
ret
add
cmp
and
mov
cld
ljmp
push
adc
inc
test
xor
jmp
out
out
inc
xor
push
xor
jae
pop
xchg
sbb
pop
insb
inc
mov
icebp
rol
insb
mov
imul
xor
and
lcall
inc
jns
repnz
outsb
xor
push
outsb
xchg
xor
or
pop
push
pop
cmp
popa
dec
add
add
ss
iret
subb
sbb
pusha
outsb
inc
mov
sbb
inc
jg
leave
lahf
int3
inc
jbe
loopne
loop
cmpsl
adc
jge
mov
add
test
sub
sbb
lea
stos
inc
andl
mov
out
loopne
cmc
cmc
nop
cmc
sbb
push
rcrb
add
rorl
sub
std
ret
xchg
dec
jl
loop
movsl
mov
cmpsb
inc
test
inc
jecxz
cmp
cmp
cs
push
mov
lods
mov
movb
push
cmp
mov
push
mov
xorl
movsl
movsb
xchg
cmp
movsl
push
mov
push
xor
inc
loop
outsl
pop
test
shrl
sub
popa
add
mov
push
xor
add
xor
mov
shl
xor
xor
or
mov
mov
cmp
movl
jne
movzbl
and
mov
mov
jmp
adc
mov
pop
rclb
test
mov
adc
cli
adc
jmp
sub
or
cmp
lods
pop
and
push
dec
jg
cmp
aaa
push
scas
mov
popa
xchg
mov
mov
inc
sbb
lret
ljmp
lods
hlt
jb
dec
adc
out
pop
aaa
sbb
mov
rorl
add
mov
xchg
or
sub
push
pop
mov
popl
jmp
mov
cmp
pop
les
mov
negl
mov
cmp
fisubrl
popf
adc
mov
repz
add
jns
jo
lcall
jle
xchg
sar
mov
inc
dec
xchg
inc
nop
imul
call
or
repz
stos
mov
cs
sarl
or
inc
lods
cmpsb
out
mov
lods
fisttpl
jbe
aad
scas
mov
sbb
stc
mov
int3
push
mov
sub
mov
xor
cmp
push
jle
push
mov
aaa
jle
cmp
subb
mov
or
stos
test
cli
in
sbb
dec
cmp
mov
frstor
cmp
lret
fdivr
push
and
push
insb
notb
and
and
dec
add
negb
and
int3
mov
jnp
lods
or
inc
xor
add
out
pop
xor
sti
jl
testl
and
data16
addr16
testb
push
sub
mov
arpl
or
scas
aam
pop
imul
mov
pushf
pop
pop
add
in
pop
push
xchg
add
ret
mov
sub
mov
mov
test
sbbl
jnp
jmp
incb
sub
pop
sti
in
and
aam
cmp
push
xor
es
data16
cmp
es
mov
dec
aam
mov
lods
scas
rorb
add
rcll
fists
push
mov
loope
lods
sarb
cmp
icebp
mov
push
xor
test
adc
std
xor
and
into
arpl
dec
imul
pop
add
or
or
push
aas
inc
mov
cmp
jbe
push
push
lea
rcrl
inc
pop
pop
repz
push
sbb
sbb
inc
popl
into
xchg
in
and
cwtl
mov
cmp
out
loop
je
and
cs
xchg
lods
sub
inc
cmp
mov
add
mov
das
movq
nop
and
fdivl
mov
sbb
or
adcl
icebp
dec
scas
cmpsl
push
clc
loope
shll
orl
dec
xor
mulb
jmp
idiv
jge
push
inc
cmp
push
adc
xlat
pusha
lods
mov
or
ja
scas
jle
aam
les
in
dec
scas
lahf
in
repnz
dec
test
and
sahf
mov
jge
cmpsb
add
and
mov
clc
out
int
imul
jno
jnp
ficoml
into
pop
scas
adc
mov
roll
dec
sub
fistl
dec
dec
lods
icebp
lods
cmc
lds
and
sub
stos
sub
adc
je
inc
xchg
pop
imul
or
jp
lods
sarb
ret
push
jno
cmp
jg
orl
xor
pop
push
imul
leave
js
sbb
negb
in
stc
aaa
jne
cwtl
repnz
sub
xchg
jo
test
fldcw
cltd
dec
jle
test
sub
pusha
jbe
add
test
loop
mov
pop
or
ret
mov
nop
in
rcrb
mov
cmp
inc
cmp
popf
test
pop
popa
pop
addr16
mov
cmpsl
cmp
hlt
mov
sub
mov
neg
mov
addl
jmp
jo
mov
push
xor
sbb
xchg
pop
loope
xchg
xchg
adc
or
pusha
call
jbe
test
decb
xor
push
mov
push
bound
pushf
lcall
push
popa
lret
xchg
mov
add
push
rcll
das
mov
filds
xchg
cmp
lds
sbb
xlat
loope
aad
ss
movsb
mov
lods
pop
mov
in
fiadds
ja
adc
push
iret
add
call
cmp
cmp
sti
pop
daa
into
int
cmpsb
hlt
xor
std
fwait
scas
and
negb
mov
fdiv
xlat
fmul
xor
iret
pushf
adc
xchg
int
xor
adc
pop
fisttpll
lcall
push
arpl
test
inc
imul
lret
fwait
mov
es
xchg
loope
cmp
outsb
mov
pop
add
stc
out
nop
add
and
out
bound
outsb
test
cmpsl
push
ds
stos
inc
lea
xor
stos
cmc
inc
push
mov
sarb
cmc
test
addr16
leave
cbtw
xchg
enter
add
xchg
lret
aas
out
sbb
mov
pop
add
cwtl
inc
cmpsb
add
loopne
std
shl
jmp
dec
mov
sbb
es
push
inc
andl
movsb
mov
mov
jne
sub
sub
aas
mov
imul
int
add
sarl
inc
adcl
data16
inc
adc
pop
jmp
mov
jnp
inc
scas
mov
lods
enter
shrl
test
inc
mov
fs
mov
cmpsb
xlat
jbe
sub
nop
cmp
xchg
orl
cmpsb
rorl
jno
into
cmc
adc
cmp
xchg
pop
pop
pop
ds
aas
enter
pop
push
xor
mov
aas
push
mul
pop
xchg
adc
test
test
mov
out
test
cmp
out
mov
dec
xchg
adc
ficompl
mov
mov
test
cmp
iret
fildl
xchg
mov
sub
bound
cmpsb
jg
movsl
xchg
movsl
and
mov
rol
and
pop
mov
jo
aaa
cltd
outsb
mov
pop
fisttpll
add
insb
adc
mov
add
sbb
inc
add
dec
lods
test
jle
pop
aam
nop
cmpsb
mov
lret
pop
movsb
lock
mov
dec
fbstp
push
xchg
jnp
test
add
xchg
push
ret
dec
cmp
cmp
rclb
or
je
push
cmc
fldcw
adc
rcl
pop
imul
push
imul
int3
cwtl
adc
jmp
xor
sahf
bnd
ja
xor
push
add
out
outsb
aad
sbb
je
bound
or
ss
or
pop
lret
mov
add
cmpsl
pop
mov
mov
outsb
add
jae
jbe
adc
sti
pop
in
jbe
cmpsb
mov
jnp
or
mov
and
pop
outsl
sub
enter
je
flds
es
stc
push
mov
add
cltd
lahf
movsb
lret
pop
call
jmp
mov
loope
popf
and
and
fstps
outsl
cli
je
inc
jb
xchg
nopl
dec
adc
out
sub
jns
int
andl
push
lahf
scas
inc
mov
les
jmp
mov
js
mov
fidivrs
add
xchg
test
cs
add
xchg
adc
out
inc
or
sub
aam
xor
addr16
testl
movsb
pop
ret
dec
cmp
xchg
sub
push
and
pop
jno
jmp
pop
fstpl
pop
mov
and
xchg
jns
test
mov
jg
les
or
cmpsl
inc
int
scas
loope
pop
adc
aas
sbb
aam
pop
xchg
dec
jmp
je
lds
adc
push
xlat
xchg
mov
lods
roll
orl
mov
xor
mov
addl
jmp
lea
popf
adc
adc
push
jo
jno
lret
adc
cli
adc
fildll
mov
pop
mov
out
push
mov
xor
pop
std
inc
sbb
adc
enter
fsubp
mov
inc
sbb
pop
ret
lods
movsl
pop
mov
mov
ret
fsubrs
fs
bound
loope
pop
jmp
inc
sti
fwait
pop
jmp
push
xor
jle
or
test
mov
xchg
cmp
aad
push
or
push
imul
sub
les
leave
xor
cmp
or
inc
and
and
lods
int
pop
pusha
push
stos
dec
sub
cltd
repnz
jp
pusha
or
fcomps
ficoml
cwtl
mov
push
pop
pop
mov
and
jp
out
ret
mov
fstps
xchg
mov
popf
sbb
xchg
out
sub
mov
cwtl
mov
dec
cmp
jo
aas
ret
inc
js
cmp
push
and
pop
mov
dec
jnp
std
hlt
lods
popf
popf
xchg
pusha
int
mov
out
adc
cli
sub
in
dec
sbb
in
in
xor
decl
je
movsb
or
fists
cmpsb
and
jae
jg
std
movsl
adc
xchg
xlat
ljmp
adc
pop
outsl
jae
mov
pop
leave
icebp
push
loopne
test
int3
lea
jns
push
sbb
mov
lea
or
jo
sbb
rorb
cmp
out
adc
cmp
pop
xchg
std
cmp
insb
adc
adc
mov
outsl
movsb
loop
les
popa
into
push
inc
in
mov
mov
in
adc
push
leave
inc
xor
ja
add
push
jle
rorb
cmp
mov
mov
ljmp
mov
inc
mov
idivl
pop
jbe
add
cmpsb
push
cmp
fdivl
stos
dec
xchg
inc
push
xchg
in
mov
and
pop
xchg
or
fnsave
in
mov
pushf
aad
xor
lea
loopne
push
sub
sbb
stc
hlt
sbb
push
addl
pop
pusha
adc
xchg
adcb
and
daa
je
mov
pop
push
pusha
sbb
or
or
int3
sbb
dec
jmp
mov
xchg
mov
mov
or
lods
xlat
pop
movsb
xor
in
dec
ljmp
lret
addl
cmp
popl
cmp
xchg
hlt
sti
and
int
inc
lods
loop
lret
lret
add
cmp
sbb
and
xchg
jno
dec
stos
and
aas
add
shll
sub
incb
ds
xor
jnp
jo
roll
mov
sbb
lcall
movsl
add
jb
add
adc
divl
jp
pop
imul
ret
mov
cltd
in
or
cmp
mov
enter
xchg
mov
sahf
in
adc
cmpsb
jb
bswap
outsl
nop
je,pt
dec
test
loop
call
inc
test
add
popa
adc
in
and
sar
ljmp
mov
sub
fmull
cli
mov
fisttpll
xchg
cmp
sti
mov
pop
outsb
gs
addr16
dec
jecxz
andb
jle
aad
loop
push
mov
and
pop
sbb
aad
jne
mov
jne
mov
aam
rorl
loopne
loopne
out
mov
jno
mov
insb
lods
jmp
adcl
cmp
mov
fdivs
or
rolw
jp
rdmsr
repz
jae
push
and
les
xor
mov
loope
inc
jge
call
cmp
xchg
fnstenv
aaa
xor
push
jl
mov
sahf
mov
outsb
add
popf
ret
iret
push
xor
arpl
out
jp
movsl
or
cmpsb
cmp
jl
test
and
or
sub
xchg
pop
pushf
cmp
dec
cli
push
cltd
jmp
pop
mov
subb
ljmp
cmp
adc
jmp
dec
sbb
ss
push
or
pop
or
push
jns
adc
cli
adc
das
add
and
pop
push
sbb
rolb
xchg
cs
stos
and
icebp
mov
bound
addr16
scas
mov
pop
dec
enter
jle
or
push
aam
xor
add
push
ja
adcb
mov
and
xor
ret
or
ret
jg
mov
mov
out
push
sub
sbb
pop
dec
pop
enter
aas
mull
aas
repz
ds
clc
pop
pop
mov
popf
cmp
cmp
test
les
push
shlb
push
es
sarl
outsl
repz
cltd
mov
fiaddl
push
out
fisttpl
dec
popa
insb
setl
repz
mov
jmp
sub
inc
xor
mov
shlb
jmp
xor
jp
mov
stos
dec
jno
jecxz
mov
adc
inc
inc
cmp
and
pop
dec
xchg
jnp
mov
and
popa
out
lock
data16
xchg
sarb
or
inc
jle
xchg
in
mov
and
fldcw
pop
rcrb
cmc
lahf
sub
xor
jmp
dec
or
daa
and
adc
es
push
cmp
movsb
pop
fadds
or
cs
out
and
inc
mov
cs
inc
jae
cld
and
repnz
dec
mov
mov
into
loop
popa
rorb
pop
loop
jnp
push
shr
stc
insl
in
ja
pop
rclb
push
popa
test
rep
pcmpeqw
push
adc
lret
xor
mov
mov
gs
or
fistpl
jge
out
push
and
lret
and
cmp
aam
je
fwait
xchg
push
xchg
xchg
testl
xchg
sarl
sbb
in
mov
data16
lods
cmp
adc
mov
roll
repnz
leave
mov
out
and
cmpsb
or
shll
ds
bound
sbb
push
int3
dec
add
jle
mov
add
scas
rorb
sub
xor
stc
add
out
push
cld
jle
dec
jb
jns
adc
shll
shl
push
jbe
repz
or
cmc
inc
push
jmp
in
xchg
es
divl
das
xchg
scas
inc
jl
add
xchg
mov
push
and
adc
and
lods
dec
shlb
sbb
mov
mov
lea
fidivrl
movsb
inc
xor
dec
dec
out
jge
or
add
xor
pop
xorl
cmp
out
orb
out
lahf
out
xor
inc
mov
call
inc
dec
mov
push
fwait
add
pop
shr
dec
sub
dec
call
cmp
ficomps
xlat
movsb
and
repz
pop
mov
adc
es
inc
insl
in
fidivs
xlat
mov
test
jno
insl
sub
jge
adc
push
aas
jbe
fwait
add
pop
push
imul
cli
jmp
stos
call
dec
xlat
push
loope
jp
xor
bound
push
dec
mov
jne
jl
jecxz
test
adc
mov
xchg
cld
adc
lock
adcb
add
xor
fcomps
aad
jno
aas
lods
cmpsl
sbb
push
lret
je
daa
aaa
in
push
in
mov
sbb
mov
pop
inc
pop
gs
sub
fmuls
xchg
fdivl
inc
enter
sub
rolb
adc
test
xchg
inc
das
dec
out
loope
sti
ret
aad
add
and
mov
aad
rol
cmp
sbb
cmp
cmc
mov
loopne
mov
cli
ret
jnp
repz
mov
arpl
popf
xlat
jle
das
or
sub
xor
or
and
lods
cmp
fbstp
mov
aad
aas
xor
inc
sbb
xor
mov
push
sbb
rolb
add
cmp
or
andl
shl
sbbl
sub
mov
cmpl
jb
sbb
jmp
push
push
call
mov
mov
add
mov
jmp
outsl
sub
push
xor
dec
or
mov
dec
jo
jecxz
push
jg
adc
cli
adc
cmp
mov
arpl
and
int3
or
adc
xor
cmpl
push
fs
sub
add
pop
mov
in
int
jae
and
lret
lahf
xchg
mov
fadds
sbb
mov
cmc
sbb
lods
je
mov
ljmp
fbld
cmp
icebp
mov
and
dec
repnz
or
stc
add
mov
lret
sahf
lret
es
pcmpeqb
pop
dec
pop
bound
enter
sbb
inc
xor
data16
cmp
imul
fldcw
inc
daa
xchg
cs
cli
cmp
add
xor
test
pushf
push
incl
aam
mov
daa
mov
or
lock
arpl
push
dec
cs
fldenv
inc
je
test
imul
js
les
cmp
std
xchg
sub
cmp
out
jmp
es
and
and
ret
pop
iret
cltd
leave
cli
pop
ret
movsb
cmp
cltd
call
xchg
or
fstp
cltd
mov
pop
mov
push
dec
cltd
dec
sbb
idivl
jle
inc
and
mov
ds
push
jbe
rcrl
cmpsb
or
pop
icebp
cmp
dec
loop,pt
cmpsb
add
adcb
ljmp
lods
and
jns
bound
cmc
lods
dec
cmp
outsl
stc
jg
mov
subl
jp
fs
push
jg
testb
and
repz
mov
or
sbb
outsb
xor
dec
or
dec
pop
jecxz
dec
mov
inc
adc
scas
mov
dec
pop
das
stc
xchg
push
add
dec
sub
xor
hlt
lahf
xor
mov
not
push
and
sbb
and
roll
subb
les
rclb
push
xor
inc
cli
push
pop
ret
shlb
jo
jne
out
out
insb
adc
or
pop
test
add
loop
es
pop
adc
adc
aam
cmpsl
add
add
scas
inc
jo
dec
or
sub
inc
push
add
lcall
fisubl
xor
fcmovu
aad
mov
inc
inc
adc
mov
lods
push
les
add
bound
mov
sub
push
sbb
or
pop
push
pop
cmp
pop
aam
fstps
in
mov
dec
bound
inc
mov
pushf
xchg
rolb
add
cld
sbb
xchg
mov
xor
int
fwait
push
aam
in
xlat
mov
inc
ds
push
mov
push
inc
cld
jmp
out
or
pop
lea
fstpl
pop
addr16
shr
shll
add
inc
gs
sbb
inc
scas
aam
jo
lods
cmp
mov
cld
daa
gs
jl
pop
test
pop
fstpt
pop
cmpsl
xorb
and
pop
mov
mov
je
adc
arpl
or
cmp
xchg
out
push
jb
call
jmp
adc
enter
out
add
mov
dec
mov
addb
lret
adc
sub
push
lret
and
cmp
sub
lea
lds
cs
push
inc
rep
fisubl
stc
xchg
test
test
movsl
cmc
dec
cmc
sub
fsub
fsubrs
lea
lret
jmp
cmpsb
arpl
mov
mov
mov
jae
cmc
sahf
mov
int3
sarl
cmp
arpl
inc
cld
vmread
or
rorl
jmp
jle
movsb
xor
insb
ret
out
sarb
xor
mov
insl
out
movsb
pusha
pop
out
jmp
inc
sbb
adc
inc
dec
add
jne
push
fsubr
into
mov
repz
rcrl
push
add
sbb
xor
shr
xor
ss
sbb
jne
xor
dec
mov
jg
adc
cmp
sub
lea
clc
mov
mov
or
shrd
shr
and
mov
mov
xor
xor
add
xor
shl
xor
or
add
mov
cmpl
jge
movzbl
sbb
jmp
pushl
pushl
call
mov
shrd
shr
mov
mov
adc
mov
xor
xor
addl
or
shl
sbbl
lea
xor
mov
addl
mov
shrd
subl
shr
andl
mov
add
mov
mov
cmpl
jle
jmp
push
call
xor
mov
xor
or
jmp
scas
mov
nop
inc
push
adc
adcl
adc
aaa
cli
adc
andb
mov
aad
pop
daa
cmp
cmp
push
pop
arpl
jne
hlt
jp
xchg
cmp
test
stos
fisttpl
ss
insb
mov
add
cs
jo
sbb
fidivrl
xor
push
in
iret
out
stc
mov
int3
stc
add
xchg
dec
and
mov
push
adc
xor
pusha
cmpsl
dec
dec
in
dec
dec
sbb
ja
and
jmp
jp
and
imul
popa
jmp
add
sbb
stos
add
lock
dec
cmpb
lea
cld
add
jne
pushfw
in
sub
aas
std
adc
add
jns
ret
xor
stos
es
fiaddl
inc
daa
or
push
push
gs
fst
lea
xchg
lock
sub
and
insb
pop
mov
cmp
in
jle
xchg
inc
loopne
jge
and
fldenv
xlat
leave
mov
and
inc
mov
push
add
mov
lret
fisubs
mull
adc
lahf
mov
or
movsl
imul
mov
push
jnp
sti
scas
cmp
inc
mov
mov
pop
pushf
or
hlt
add
mov
jmp
cltd
les
data16
cltd
stos
add
push
repnz
daa
jmp
lods
scas
fiaddl
adcl
inc
lcall
lahf
pop
adc
popf
mov
dec
sahf
mov
push
cmp
movsl
xchg
inc
dec
fmull
mov
xchg
fwait
mov
ss
push
mov
addr16
sbb
cmpsb
cmpsb
imul
mov
pop
lock
popf
jbe
mov
adcb
xor
add
mov
lcall
xchg
push
cmp
or
and
pop
pop
aaa
shlb
mov
fwait
add
jmp
roll
aaa
inc
test
mov
popf
lahf
sti
push
push
lahf
or
or
sahf
aas
in
je
push
gs
insl
bound
out
cmp
js
mov
stos
add
or
outsb
fstpl
ret
push
out
add
lcall
xchg
je,pt
test
push
push
push
out
shll
sbb
add
pop
shll
mov
mov
mov
nop
hlt
adc
and
hlt
jbe
xor
push
lds
jnp
mov
ds
rolb
xor
test
add
sub
test
hlt
sbb
scas
or
mov
subl
add
jns
es
mov
insl
mov
inc
stc
xor
cmc
pop
popa
cmp
xchg
cmp
cmp
das
or
in
dec
dec
sbb
mov
repz
cmp
inc
into
mov
cmp
mov
or
add
cld
xor
lahf
scas
push
imul
les
in
push
xor
dec
pusha
mov
lods
aad
cmp
jle
dec
rclb
icebp
xchg
pop
jp
pop
sub
push
mov
loope
inc
pop
adc
jnp
dec
into
repz
shrb
xchg
cwtl
iret
add
negl
lds
in
dec
outsl
in
call
dec
jno
mov
lcall
ret
loop
pop
fsub
xor
rcll
jb
std
cmp
cmp
xorl
and
xor
loope
out
cmp
pushf
xor
push
jg
ror
xor
sub
dec
rcr
cmpl
test
fisubs
jne
or
jp
xchg
das
movl
mov
and
rcll
sub
test
inc
jl
in
stos
mov
inc
mov
lahf
xor
cmp
dec
push
mov
cli
sub
mov
push
add
add
jno
xchg
pop
mov
lahf
xchg
stc
test
xor
inc
in
fwait
sub
loop
imul
mov
adc
mov
shrd
andl
mov
mov
sbbl
xor
negl
shr
cmpl
jle
or
jmp
push
push
call
mov
mov
xor
or
shl
sub
mov
mov
cmp
jmp
dec
test
push
or
inc
jge
adc
mov
aaa
cli
adc
test
in
xchg
jmp
cmpsb
adc
push
out
xor
popf
or
or
imul
call
inc
xor
jp
or
mov
sbb
adc
aas
enter
mov
in
push
xchg
xchg
mov
push
mov
push
pop
sarb
dec
stos
jp
xchg
into
jge
xchg
fmull
sbb
adc
pop
int3
pop
jp
pop
xchg
call
push
mov
out
mov
dec
jp
add
jne
and
pusha
aam
filds
aas
xor
and
dec
push
inc
jecxz
xlat
pushf
xor
movl
jmp
push
std
cmpsb
lcall
mov
dec
outsb
hlt
dec
int3
push
and
sub
add
mov
bound
pop
xor
ret
pusha
aam
rorl
jb
xchg
repnz
sbb
stos
cmp
dec
bound
mov
test
and
cmp
sbb
or
mov
jl
push
les
dec
push
ret
loop
jne
out
mov
sbb
ret
dec
lock
jno
mov
mov
insb
test
mov
pop
jmp
enter
and
stos
cmc
sbb
push
jbe
xchg
repz
mov
cmc
or
sub
sbb
sarl
int
mov
sbb
and
and
shl
add
sti
mov
movsl
fadd
mov
mov
lahf
inc
mov
mov
cltd
jo
sub
test
loope
cmpsl
and
fs
sbb
addr16
lahf
sbb
mov
mov
mov
movsl
mov
sbb
jg
pmullw
jmp
ret
jae
rcll
lds
sahf
pop
sbb
pop
cs
and
aas
mov
mov
sub
and
push
sarb
mov
push
fmuls
imul
shlb
xor
les
push
ljmp
sbb
mov
movsl
fimuls
mov
mov
mov
mov
clc
loope
out
repz
ficoms
sahf
ja
rclb
sbb
rorb
mov
and
adc
lret
mov
mov
add
clc
dec
push
mov
dec
and
rcrb
mov
stc
sub
sub
out
cmpb
xor
test
cmp
xor
xchg
pop
push
aas
stc
inc
iret
sub
cmp
call
ret
add
adc
xchg
outsb
mov
xor
inc
movsb
loope
mov
rcrl
push
ja
hlt
scas
mov
mov
jb
repnz
adc
or
and
fwait
les
xlat
arpl
mov
fdiv
insb
lds
push
add
in
shlb
push
fcmove
paddusw
mov
dec
scas
mov
xchg
ret
jp
arpl
jbe
push
jae
scas
sbb
and
lcall
adc
jl
jns
pushf
fisubl
les
movsb
sbb
adc
mov
mov
aad
imul
dec
iret
outsl
mov
mov
cwtl
xlat
aam
popa
scas
fwait
adcl
sbb
mov
bound
and
jp
cmp
fidivs
rcl
iret
jnp
sbb
sub
xchg
dec
iret
xchg
mov
xor
ljmp
jl
out
mov
or
cmpsb
in
inc
cltd
outsb
pop
jg
cli
pop
mov
popf
jp
mov
bound
in
fs
sub
fwait
rorb
cmpsl
lods
xor
sub
adc
pop
jle,pt
mov
xchg
dec
mov
push
jnp
loop
xchg
fstl
push
cld
in
cmp
lods
lods
lods
scas
inc
add
in
sub
mov
rclb
in
adc
adc
aaa
cmp
hlt
movl
jg
sbbl
mov
mov
sbbl
shrd
mov
mov
addl
xor
shl
sbbl
xor
andl
or
orl
shr
neg
mov
add
mov
cmpl
jbe
mov
add
mov
jmp
push
push
push
call
mov
mov
shrd
shr
xor
mov
mov
mov
xorl
xor
xor
xorl
or
adcl
shl
adcl
jmp
cmc
push
xor
adc
es
out
add
imul
adc
aaa
cli
adc
mov
mov
in
mov
inc
cmp
xlat
xchg
inc
fs
jae
dec
orl
inc
jl
mov
fildl
sub
enter
pop
insl
out
jle
sahf
push
or
add
imul
xchg
cltd
into
or
imul
dec
xor
lea
cmp
stos
aad
mov
cwtl
jmp
pushf
out
roll
pop
push
push
cmp
dec
adc
std
dec
add
inc
cmp
add
out
aaa
nop
push
lock
outsb
enter
mov
and
pop
out
mov
nop
idivl
hlt
inc
cltd
fistl
mov
adc
out
pop
push
add
outsl
dec
xchg
jno
jne
ret
leave
das
lcall
jp
mov
stos
pop
inc
xchg
add
jmp
shlb
std
push
les
sub
jne
adcl
mov
test
cli
xor
pusha
push
insb
fwait
or
scas
pop
sub
push
sbb
adc
repz
dec
mov
sub
xchg
sbb
in
dec
mov
sbb
cmp
gs
sub
lods
popa
sub
cmc
ret
clc
lods
ret
fistpll
jle
flds
jecxz
ds
add
sbb
mov
mov
mov
inc
das
hlt
es
lods
iret
movsl
and
imul
cmc
and
jmp
sbb
pusha
pushf
loope
shrb
mov
insl
mov
mov
inc
or
push
loop
xchg
sarb
mov
xchg
or
fildll
push
push
cltd
add
movsl
pushf
ret
out
jne
xchg
stos
xor
adc
cld
popa
sbb
adc
mov
push
push
add
out
xor
popa
jns
or
jnp
pop
loopne
stc
jg
lea
divps
push
inc
sub
mov
adc
loop
adc
push
xor
std
lock
add
sbb
andb
sub
fsubrs
dec
cmp
fnsave
not
lret
add
xor
sti
stos
aam
aad
call
xor
aad
test
cmp
imul
test
push
xor
aad
jae
dec
ret
push
jae
mov
xchg
mov
pop
je
xorb
out
mov
stc
test
push
lea
es
pop
and
mov
push
mov
repz
or
and
jp
cmp
xchg
movsb
mov
in
dec
adc
lahf
mov
inc
gs
mov
mov
jne
cmp
sub
cmp
fnstenv
sbb
popf
ja
xchg
mov
cmpsl
loop
pop
mov
shl
js
pop
cmp
outsb
xor
add
lcall
aaa
shrl
jo
js
cmp
pop
adcb
clc
lds
mov
pusha
pop
aas
push
mov
fstpl
vunpcklps
lret
pop
sti
out
fisttpl
hlt
je
mov
leave
add
notb
or
mov
push
inc
adc
push
mov
jle
and
push
imul
andb
jle
addr16
cld
fistps
pop
sbbl
jecxz
ret
inc
fwait
clc
sub
fldcw
gs
ror
outsl
sti
pop
dec
push
lahf
push
sub
cmp
mov
and
popf
push
std
jae
xchg
jno
dec
dec
cmc
push
cmc
mov
daa
pop
das
lock
jecxz
sbb
out
mull
mov
xor
sarl
outsl
call
mov
jae
pop
inc
cltd
arpl
cmpsb
test
xchg
fwait
pop
xor
xor
add
cwtl
mov
pop
arpl
inc
jae
jecxz
test
in
shrb
or
jp
fwait
xchg
cld
gs
mov
inc
ja
inc
cmp
test
js
sub
sbbl
sub
jmp
cmpl
jg
jmp
push
push
pushl
push
pushl
push
push
push
push
call
mov
mov
shrd
mov
mov
jmp
ret
je
cmp
cmp
je
icebp
xchg
xchg
imull
add
aaa
cli
adc
test
xor
sbb
aam
les
les
adc
xor
cmp
lods
jecxz
mov
and
mov
push
dec
int3
inc
aas
imull
cwtl
jns
test
dec
outsl
and
sub
in
add
in
adc
imulb
sub
imul
inc
cmp
fs
cmc
daa
ljmp
cmpl
cmpsl
jb
pop
ret
sub
repz
mov
push
testl
movsb
into
push
test
jo
push
incl
cli
js
scas
adc
pop
mov
sub
xchg
test
add
in
arpl
lcall
cs
mov
add
lds
sbb
inc
sbb
mov
xchg
sub
outsb
xchg
jae
mov
les
xchg
cmp
jne
xchg
pop
dec
jne
cmc
jo
dec
clc
inc
push
pop
pop
cmp
cltd
mov
lahf
add
lret
xchg
aaa
scas
jae
or
mov
cmp
sub
cmp
outsl
or
leave
fildl
lods
in
add
sbb
scas
imul
adc
dec
dec
hlt
pop
mov
and
sub
push
sbb
rorb
inc
push
in
xchg
scas
or
sti
fildll
pushf
sub
xlat
mov
je
or
cmc
int3
jne
int
xor
stc
lods
cmpsb
fdivl
or
mov
fs
xchg
stos
lcall
cmp
xchg
movsb
out
lcall
in
sbb
std
sbb
cmp
movsb
gs
push
adc
dec
shll
xorb
cmp
pop
les
adc
in
push
xor
jmp
xchg
inc
dec
out
inc
sub
cmp
xchg
or
es
inc
fwait
pop
or
add
out
fdivl
aad
or
add
pop
ja
add
repnz
xor
stos
cmpsb
test
xor
dec
js
outsl
mov
lcall
cmpsl
sub
xchg
mov
fimull
nop
iret
mov
add
xor
dec
or
pop
mov
insl
mov
stc
data16
xor
xor
inc
outsb
js
cli
fwait
or
sbb
aas
dec
xlat
clc
jg
mov
jb
dec
xchg
cwtl
inc
dec
adc
popf
mov
test
out
cli
xor
mov
ret
leave
je
je
test
lea
sub
mov
dec
cltd
xor
int
add
cld
lret
add
ljmp
scas
hlt
xor
cmpsb
inc
les
pop
mov
mov
cmp
push
aad
jp
push
fsts
mov
xor
add
jb
dec
data16
sahf
pop
mov
pushl
mov
xchg
mov
int
inc
jle
clc
jne
mov
stos
daa
mov
enter
jae
push
popf
mov
mov
sbb
stos
sbb
jb
xor
or
ss
jg
nop
mov
iret
icebp
xor
mov
push
leave
xchg
lds
mov
mov
xlat
inc
jns
repnz
mov
dec
test
insl
adc
das
sub
add
repnz
ss
repz
mov
jo
mov
jb
add
xchg
adc
stc
test
shll
dec
mov
sbbl
dec
cli
and
sahf
dec
mov
mov
push
dec
mov
fs
xchg
testb
js
mov
sbb
fcompl
cmpsb
push
lcall
outsl
clc
pop
sub
xchg
inc
and
dec
imul
cmp
and
cmp
mov
xchg
jmp
out
mov
jp
inc
xor
mov
pop
jg
getsec
add
or
xchg
mulb
and
xlat
repnz
xlat
leave
jo
sbb
mov
pop
icebp
mov
stc
movaps
adc
inc
fldenv
jo
mov
in
loope
andl
xor
or
andl
shr
mov
cmpl
ja
andl
and
jmp
push
pushl
call
mov
mov
mov
shrd
shr
and
mov
mov
mov
adcl
xor
adcl
xor
xorl
or
andl
shl
add
cmpl
ja
jmp
push
pushl
pushl
push
pushl
pushl
call
add
mov
jmp
sbb
cmpsl
mov
push
push
pusha
jecxz
mov
addr16
adc
aaa
cli
adc
xchg
shlb
sub
std
lea
sbbl
or
adc
mov
loop
inc
cmc
pusha
test
leave
xor
adc
mov
lods
fildl
jo
and
cwtl
aad
mov
inc
inc
push
xor
inc
inc
das
loop
std
cmp
jp
lods
stc
jmp
sti
or
outsb
scas
shlb
in
addr16
mov
mov
repz
mov
cld
and
jp
arpl
jge
pop
insl
insl
jb
pop
mov
or
pop
mov
or
mov
lods
jb
pop
add
cmp
mov
cltd
cwtl
xor
or
push
mov
lret
inc
cli
int3
out
mov
push
dec
mov
and
sub
or
js
sahf
in
stos
nop
pop
and
xchg
repnz
cwtl
mov
lea
std
das
in
adc
inc
lock
cmp
js
lds
xchg
xorl
add
nop
les
je
sbb
ficoml
stos
add
or
push
mov
arpl
pop
fwait
mov
push
je
sub
mov
fs
test
imul
and
mov
aaa
dec
dec
jmp
aas
xchg
mov
mov
inc
push
scas
push
jecxz
js
push
mov
adc
jno
mov
sub
xor
ljmp
and
lea
out
cld
dec
sub
jge
cmpsl
inc
adc
jle
adc
roll
inc
jl
mov
pop
xchg
pop
sbb
in
mov
icebp
adc
popa
incl
lahf
sahf
cs
jecxz
mov
push
cmp
or
and
in
xchg
in
pop
mov
mov
imul
test
daa
push
insl
outsl
lea
mov
std
mov
cmp
jmp
pusha
jnp
sbb
inc
hlt
scas
out
pop
int3
add
or
push
sbb
sub
sbbb
push
hlt
nop
xchg
pop
sbb
add
lods
dec
lea
jmp
mov
lods
sar
pop
mov
mov
out
xchg
cltd
sbb
int3
inc
fildl
ror
mov
and
popa
loope
and
pop
scas
aaa
push
or
cltd
xchg
adc
sbb
jl
bound
aaa
outsl
and
fwait
inc
sbb
mov
aas
bsf
xchg
mov
dec
jbe
or
add
jge
mov
rcrl
pop
adc
push
fists
push
inc
mov
out
imul
repnz
fsubp
dec
jl
fldl
stos
aad
pusha
push
pop
fs
scas
ljmp
scas
psllw
mov
daa
insb
cmpsl
mov
cmp
pop
jb
cmp
pop
call
pop
adc
jecxz
sbb
repnz
adc
sbb
les
inc
or
push
push
lret
das
and
xor
and
push
add
add
outsl
fsubr
int
movsl
sub
inc
addr16
xchg
sahf
mov
fcoms
mov
mov
xchg
stos
adc
in
add
ds
xchg
jb
pop
pop
pop
add
xchg
imul
popf
and
push
sub
add
xchg
fsts
adc
repnz
in
popf
stc
mov
adc
arpl
test
cmp
cmp
mov
jne
out
fdivrl
repz
add
data16
or
mov
pop
or
lds
lock
ficomps
lods
add
jg
jmp
jns
test
xor
test
adc
bound
inc
push
jb
das
xchg
gs
or
int
jbe
dec
repz
div
dec
jg
sbbl
add
call
shlb
jns
pop
jno
jl
int3
lock
cmp
lea
daa
jle
dec
add
xchg
pop
lret
scas
or
and
mov
shrd
shr
mov
mov
sbbl
xor
xorl
shl
cmpl
jle
jmp
pushl
pushl
call
xor
or
mov
movl
mov
mov
movl
and
mov
movl
xor
mov
sbb
movl
xor
mov
or
mov
sub
mov
sbb
shrd
cmpl
jbe
sub
jmp
push
call
shr
mov
mov
xor
shl
xor
xor
or
lea
mov
mov
adc
mov
xorl
shrd
and
shr
cmpl
jb
jmp
pushl
pushl
pushl
pushl
pushl
push
pushl
call
mov
mov
shl
mov
xor
xor
or
add
mov
mov
andl
xor
mov
cmpl
jb
not
jmp
push
push
push
call
mov
shrd
shr
mov
mov
xor
adcl
shl
cmpl
jl
sbb
jmp
push
call
xor
or
lea
mov
mov
mov
movzwl
or
shrd
xorl
jmp
cmp
mov
adc
xor
adc
push
dec
stos
push
adc
aaa
cli
adc
les
cmp
mov
inc
imul
sub
jns
xchg
add
adc
or
or
mov
push
loop
in
or
enter
mov
fisubrl
push
fmul
inc
lret
cwtl
int3
or
lds
iret
adc
data16
sub
cmp
repz
ljmp
lods
in
mov
mov
cmp
mov
mov
jmp
lods
jnp
sbb
jge
jnp
minps
sub
mull
push
stos
and
push
dec
or
std
fmull
outsl
lds
or
inc
out
lcall
les
jne
icebp
imul
and
pop
ret
dec
jmp
movhps
jne
sbb
adc
test
xorl
add
nop
repz
in
jne
add
sub
das
inc
jp
aaa
lds
in
jbe
into
ret
and
sbb
adc
test
xchg
xor
and
push
and
push
xor
cmpsb
jmp
mov
rolb
jecxz
pop
pop
scas
xor
adc
mov
test
pop
mov
cmp
lock
fwait
test
mov
add
aad
pop
fstl
xchg
pop
cmp
mov
push
dec
mov
scas
xchg
dec
sub
rep
jbe
insl
cmpb
or
mov
xchg
xorb
push
sbb
fstps
aas
stc
inc
mov
jp
test
je
jl
into
shlb
icebp
jl
cmovl
jmp
in
push
fnsave
lds
jbe
pop
imull
push
cwtl
sbb
shll
cmp
xor
pop
jmp
mov
push
sbb
dec
jl
fmull
cmp
hlt
fdivr
dec
test
xchg
fstpl
out
in
adc
add
jmp
stos
aaa
aam
mov
popf
loop
jmp
push
push
xor
icebp
inc
cs
loope
mov
jnp
lahf
scas
xor
dec
movsl
cli
daa
test
and
lock
push
repnz
jl
leave
lret
inc
outsb
cltd
lret
xchg
addr16
lret
fucomip
movsl
out
adc
daa
inc
shll
adc
jmp
pop
inc
add
lods
enter
aad
stos
enter
int
dec
dec
add
pop
scas
inc
das
pushf
dec
sub
mov
push
dec
movsb
enter
and
sbb
sub
dec
cmp
cli
aam
add
xchg
rcll
add
adc
pop
dec
xor
xorl
xchg
pmulhuw
scas
aaa
cmp
jmp
mov
jns
mov
cmovg
cltd
jae
cmp
adc
into
sahf
call
push
fldt
pop
sub
xor
push
jbe
cltd
repnz
jnp
xlat
cmp
fwait
mov
mov
push
mov
popf
xchg
sbb
adc
xor
push
xchg
push
xor
xor
lods
add
xchg
int
lock
les
sub
sub
je
shll
inc
popa
sub
out
xlat
push
mov
inc
mov
fsubrs
dec
jnp
cmp
sti
jl
aas
test
movsb
in
out
jmp
or
repnz
loopne
sahf
xchg
push
insb
imulb
push
mov
mov
sub
xchg
pop
aaa
jp
in
adcl
inc
call
stos
inc
xchg
jp
stos
inc
adc
test
incb
cltd
rclb
push
add
xor
and
inc
push
xorb
sbb
and
dec
lods
daa
or
repz
ljmp
add
pop
faddp
xorl
xchg
into
mov
adc
adc
call
sub
mov
dec
movb
in
mov
push
test
or
fidivs
mov
adc
sahf
adc
aas
xlat
dec
ss
sbb
mov
add
mov
shl
sbb
mov
xor
xor
or
mov
mov
or
cmpl
jle
adcl
or
jmp
pushl
call
jmp
jne
scas
leave
scas
dec
adc
cli
rcrl
inc
adc
aaa
cli
adc
mov
fs
movsb
inc
repnz
cmc
jbe
mov
in
add
es
test
xor
insb
out
push
lds
out
push
cmp
pop
rcrl
pop
fildll
imul
xchg
movsl
data16
xchg
fdivs
popf
lret
adc
xchg
adc
mov
das
popf
and
loopne
addr16
fdivl
ja
mov
jbe
xchg
fidivl
roll
cmp
jo
adc
cltd
int
lds
dec
fnsave
xchg
sub
cmp
jecxz
xchg
cld
pushf
mov
inc
ret
pop
cmp
test
sti
cwtd
inc
mov
cmp
dec
test
cwtl
or
mov
xchg
or
inc
xchg
cmpsb
and
push
inc
lds
cmp
js
frstor
mov
idivb
dec
call
aam
pop
push
sbb
mov
ljmp
xchg
cmpsl
std
std
add
mov
test
cmpsb
aam
sub
int
sub
pop
add
dec
in
aam
jae
cmp
shlb
lahf
mov
push
cmpsb
lock
dec
and
mov
cs
js
mov
mov
aaa
daa
imul
inc
popa
cmp
or
mov
sahf
pop
stos
push
add
ljmp
jp
call
lret
jmp
sbb
xchg
fstps
call
or
xchg
mov
mov
ljmp
inc
cmp
push
push
push
mov
rcrb
dec
mov
int
outsl
aad
insl
xor
insl
push
ffree
push
das
jmp
dec
sub
xor
jle
insl
mov
insw
and
or
jo
or
and
daa
test
pop
jae
test
cmpsb
or
ret
push
xor
xchg
sub
xchg
mov
out
sub
xor
pop
nop
mov
push
sub
js
sar
scas
and
pop
push
and
xlat
mov
test
add
sbb
cmp
bound
jbe
frstor
mov
dec
mov
pop
sti
xor
pslld
imul
mov
insl
or
or
jnp
mov
add
cltd
dec
cmp
sub
lods
pop
add
xlat
and
movsb
mov
dec
jl
loopne
add
xchg
xor
stos
lret
imul
packsswb
leave
jmp
insb
aaa
mov
js
scas
pop
mov
cmp
lock
and
xchg
mov
mov
lods
arpl
inc
sbb
call
mov
adc
adc
divl
pop
gs
das
fcoml
adc
push
xor
mov
mov
rcrb
pop
loope
mov
mov
sub
sub
inc
outsl
stc
dec
jecxz
ljmp
and
dec
imull
gs
daa
push
sub
mov
inc
or
xchg
or
pop
fisttpl
pop
jmp
pushf
stos
sub
out
push
jbe
lock
mov
add
loopne
sub
xor
icebp
outsb
mov
mov
das
push
cmp
not
outsb
dec
jbe
lahf
mov
shll
dec
hlt
dec
gs
cmp
sub
outsl
xchg
pop
sti
pop
scas
mov
mov
sbb
mov
mov
adc
sarl
jmp
jg
add
pusha
dec
into
push
js
js
aaa
push
mov
das
pop
outsl
shrl
jno,pn
dec
mov
popa
dec
adc
mov
sbb
inc
push
ss
jecxz
adc
cmp
stos
or
xchg
sbb
fs
shrb
lahf
push
mov
cmpb
push
cmp
jmp
mov
cmp
out
icebp
xchg
lods
loop
test
xchg
push
inc
es
or
mov
pop
scas
mov
mov
xor
pusha
into
cmp
mov
lret
xchg
sub
fwait
adc
inc
fdivrl
inc
mov
hlt
inc
mov
fs
fildll
adc
and
and
es
dec
adc
xchg
aam
mov
lock
shrd
shr
mov
adcl
mov
andl
xor
shl
sub
xor
or
lea
and
mov
xorl
mov
xor
mov
shrd
shr
and
mov
sbb
mov
andl
xor
andl
shl
mov
decl
jmp
pop
lcall
ret
test
sub
adc
cli
adc
jb
pop
push
xchg
sbb
inc
dec
arpl
clc
mov
pop
lea
push
pop
jns
arpl
lds
mov
push
jnp
imul
xor
xchg
sub
push
inc
mov
dec
push
mov
push
xchg
pusha
sbb
jle
shlb
mov
lret
mov
mov
add
jg
fxch
xor
cmp
outsl
pushf
clc
push
stos
add
lret
push
jne
and
ret
cs
mov
fistpl
jo
je
sarl
adc
cmp
insl
in
mov
fcoml
and
imul
sbb
aaa
dec
mov
mov
gs
jge
adc
jg
sub
xor
push
sub
dec
mov
pop
or
test
push
stos
pop
cmpsb
sub
jo
lret
shll
pushf
cltd
jl
dec
sub
ss
stos
fs
or
es
js
jp
dec
cmp
cmp
dec
cmp
and
push
ret
and
in
push
fwait
sub
lret
mov
mov
push
or
add
mov
cmp
mov
mov
jns
daa
mov
sub
sub
cltd
cmp
mov
call
aam
dec
mov
push
push
mov
pop
pop
and
inc
pop
popf
cmp
xor
out
mov
push
push
xchg
add
mov
pop
movsl
mov
push
xchg
clc
xchg
sbb
in
sub
repnz
jl
addb
daa
dec
inc
mov
out
das
jg
cmp
pop
inc
xorl
shll
and
jecxz
pop
in
add
dec
push
xchg
push
sbb
push
and
ljmp
pop
push
sbb
pop
jp
fists
aam
xchg
testl
inc
mov
push
test
rcl
mov
adc
sub
ljmp
jb
adc
pop
add
xchg
add
aam
fmuls
pop
xchg
inc
push
sbb
lock
mov
pop
sti
movsb
shlb
test
popf
cmp
lahf
dec
cwtl
in
mov
ss
enter
push
or
ja
inc
lock
pop
out
pop
jmp
aad
inc
pop
lcall
mov
or
lcall
adc
loope
sbbb
jle
pop
inc
sub
decb
lret
or
adc
push
rdtsc
pop
xchg
xchg
mov
test
jle
std
dec
push
cmc
sbb
pop
pop
std
std
push
nop
mov
ljmp
out
lret
movq
ljmp
dec
xchg
daa
out
filds
xchg
mov
add
ds
hlt
push
pop
xor
shrl
and
mov
xlat
rclb
cmp
push
jno
jmp
stos
je
xchg
or
pop
jns
repnz
bsf
jl
stc
jg
call
dec
inc
jecxz
shlb
out
jns
imul
sub
cmp
inc
cmp
xchg
push
or
dec
fs
mov
mov
xchg
xor
cmpsb
das
jne
fwait
cmp
movsl
mov
pop
lret
js
dec
ss
rcrb
xchg
sub
fucomip
mov
and
outsl
inc
sbb
inc
scas
sbb
xor
adc
and
inc
ja
adc
mov
mov
xchg
dec
xor
mov
scas
or
in
fmuls
or
rorb
adc
xor
push
dec
stos
cmp
in
mov
in
add
pop
dec
and
xchg
jp
fwait
xchg
jmp
pushf
adc
mov
jne
dec
es
fyl2x
mov
or
out
mov
cmpsb
shl
lock
push
cmpb
or
cmp
push
popa
lret
push
cmp
pop
movsl
shl
cltd
int3
mov
rolb
add
add
push
cmpb
pop
dec
cwtl
jns
mov
or
bound
repz
inc
add
ret
or
cmpl
ja
jmp
pushl
push
push
push
call
mov
add
mov
mov
shrd
shr
mov
mov
xor
movl
xor
andl
or
dec
lea
mov
mov
shl
cmpl
jg
sub
orl
jmp
push
push
call
mov
shrd
shr
mov
mov
andl
xor
xor
xorl
or
cmpl
jg
dec
jmp
push
push
pushl
call
mov
shl
mov
mov
mov
or
cmpl
ja
and
jmp
push
pushl
push
push
pushl
call
jmp
add
mov
adc
xchg
adc
fcomps
jnp
popl
mov
aaa
cli
adc
imul
inc
test
scas
jge
mov
enter
push
sub
mov
dec
xor
jnp
cld
lea
cmp
ds
pop
add
jle
call
push
loop
cwtl
cmp
xchg
je
negl
adc
jns
inc
xlat
lret
xlat
jg
roll
cmp
test
mov
cmp
popf
sub
push
arpl
mov
sbb
and
mov
cltd
mov
mov
xchg
push
or
test
fwait
test
sbb
les
imul
negb
icebp
mov
push
shl
jg
leave
or
pop
cltd
pushf
mov
loop
and
adc
push
ss
or
inc
add
imul
add
aam
push
iretw
mov
cmp
pop
push
xorl
icebp
jb
cmp
cmc
xor
and
sub
xchg
cmp
repz
sub
mov
push
out
add
nop
jp
and
cwtl
cmp
in
sub
and
mov
iret
xlat
mov
push
dec
inc
xor
push
sbb
out
dec
imul
or
pop
pop
add
push
cmpb
ficoml
sahf
jns
mov
aad
push
addr16
mov
cmp
ret
adc
std
or
mov
adc
xchg
mov
popf
cwtl
loop
sub
rorb
xor
cmp
jle
push
sub
loop
cmp
sbb
pop
add
dec
jge
cmp
push
or
xchg
add
push
or
jns
xchg
mov
test
test
std
arpl
repz
fistpll
aad
orb
insb
ficomps
push
arpl
sub
les
rcll
xchg
or
jns
rcll
or
jp
icebp
outsb
adcb
pop
jae
inc
or
sub
mov
cmp
xchg
scas
in
lret
inc
mov
xsavec
fmull
fsubrp
xchg
imul
shrl
mov
shlb
push
mov
lods
sub
push
ja
shlb
mov
outsl
xor
cmovae
add
adc
and
push
adc
jl
int
add
pop
leave
adc
das
or
xor
aam
xor
dec
add
out
loop
fdivs
inc
xchg
hlt
xchg
ds
out
test
sub
adc
in
pop
movsl
shrb
stc
les
mov
out
icebp
push
pusha
int
arpl
jns
add
mov
jae
xchg
xorb
pusha
js
scas
xor
popf
pop
jnp
testb
enter
fisttpll
mov
push
cmp
adc
xor
xor
nop
and
repnz
in
and
xchg
es
pop
mov
cld
sub
dec
or
and
pop
xchg
shl
movsb
popa
fs
jl
sub
bound
scas
clc
fistps
mov
adc
dec
adc
push
dec
in
cmp
mov
inc
hlt
jge
inc
roll
fldenv
ret
cmp
sbb
jnp
fildll
mov
je
scas
ja
repnz
inc
or
lcall
dec
sbb
dec
insb
loope
mulb
sub
push
sub
fbstp
lds
jb
mov
and
in
aam
ror
pusha
pop
lds
cmp
int
xor
out
ja
in
daa
add
mov
and
nop
xlat
sti
fnstcw
push
aam
test
repz
in
cld
xor
mov
pop
sbb
lret
or
aam
in
sahf
xor
and
mov
cmp
mov
out
adc
lock
aaa
xor
push
pop
popa
mov
pop
mov
mov
shrd
shl
shr
mov
subl
mov
xor
xorl
mov
adcl
xor
or
mov
movl
dec
sbbl
not
addl
and
cmpl
ja
add
jmp
pushl
call
xor
mov
mov
xor
or
mov
adcl
jmp
fldln2
aam
aam
enter
imul
mov
adc
cli
adc
xlat
jl,pn
sbb
inc
cmp
rclb
nop
inc
xchg
push
push
cmp
cli
enter
subb
out
stos
fwait
inc
jno
cmp
and
inc
cld
mov
inc
push
inc
sbb
pop
fidivrl
lea
in
push
mov
jmp
xchg
insl
sub
xor
xchg
arpl
adcl
in
mov
stc
rclw
xchg
dec
sbb
imul
xchg
sub
decl
mov
jmp
sub
aam
ss
sbb
ljmp
push
out
mov
jae
mov
imul
jp,pt
mov
mov
adc
xchg
sarl
xor
or
loopne
mov
xchg
jno
push
sbb
test
mov
jl
lock
test
das
rorb
dec
stos
jl
or
sub
xor
mov
sbb
jp
sub
ss
jp
mov
cmc
aad
sbb
in
popa
inc
cmp
or
push
popf
and
movsl
ret
fucom
aad
push
into
cmc
cmp
pop
jmp
fstl
fs
and
ja
xor
je
add
movsb
out
out
lcall
rcrl
adc
les
arpl
fs
shll
mov
ret
xchg
adc
ret
dec
mov
or
pop
mov
push
popf
popa
or
pop
leave
fwait
fs
movsb
sub
lods
shr
loope
xchg
inc
insb
mov
jl
repz
mov
fsubrs
jp
or
outsl
mov
push
lea
lods
or
fs
lods
xchg
and
imul
adc
lods
movsl
in
xlat
cmpsb
cmp
not
mov
and
xchg
xlat
fnstcw
xchg
push
cmp
movsb
hlt
fistps
or
outsl
or
bnd
lods
mov
mov
mov
loope
jo
js
adc
jle
mov
and
test
test
jae
xor
std
rcrl
sti
mov
adc
shr
add
test
push
ror
in
pop
mov
enter
lret
add
test
scas
test
inc
inc
jno
fisubrl
out
fsubrl
js
pop
scas
pop
and
fwait
jae
mov
ret
jmp
and
sbb
mov
fildl
cmp
jmp
cmpb
dec
je
inc
out
insl
aaa
outsb
push
pop
test
fwait
xchg
loope
jo
lods
jge
jmp
mov
lret
test
xor
mov
and
mov
imul
mov
cmp
adc
add
std
pop
and
xchg
dec
xchg
ljmp
aaa
rcrb
or
ds
mov
lock
sbb
or
xor
sbb
icebp
int3
imul
fadds
mov
fwait
out
push
out
xor
xchg
jl
enter
adc
es
pop
inc
cld
or
sbb
cmovne
cmpsb
jecxz
icebp
inc
stc
in
dec
int
test
hlt
xor
fidivl
imul
mov
xor
loop
mov
cmp
inc
pop
xrelease
pop
test
ja
out
test
jmp
outsl
sbb
call
divb
cmp
ret
xchg
sahf
cmpsl
stos
bound
shrl
lock
xor
mov
loop
test
or
mul
or
xchg
pop
cmp
shll
lahf
xchg
push
adc
inc
xchg
mov
inc
inc
icebp
inc
adc
cmc
imul
test
pop
mov
push
mov
rcll
into
jle
add
mulb
hlt
add
xchg
dec
mov
mov
lahf
mov
aas
bound
int
adc
mov
dec
mov
jmp
add
sbb
mov
pop
push
xor
push
ficomps
adc
aaa
cli
adc
push
jge
dec
in
jle
sbb
jp
rolb
push
fildll
sub
imul
jbe
xchg
or
ss
jae
adc
adc
es
jmp
xchg
fcoml
shlb
cmpsb
or
mov
idivl
addb
pusha
rcr
test
add
dec
xchg
cmpsl
fadds
imul
out
fs
movsl
ljmp
xchg
jp
insl
adc
imul
sub
mov
fmuls
out
and
and
jg
les
into
pop
cmp
add
ds
sbb
cld
inc
push
clc
ja
mov
ret
pop
ret
pusha
pop
xchg
dec
sarl
inc
insl
ljmp
sub
sbb
rorl
xchg
jl
cmpsb
mov
mov
sub
jl
mov
lret
push
jo
out
push
dec
xor
scas
dec
mov
sbb
leave
sbb
cmp
cmpsl
mov
icebp
and
lea
lret
push
push
aaa
sbb
cmp
adcl
add
rcrb
jo
imul
in
fiaddl
xor
push
repz
push
mov
add
adc
cmp
adc
mov
pop
nop
add
rorl
outsl
push
fbstp
sub
and
inc
sub
int
inc
inc
enter
xor
test
mov
push
fwait
mov
sub
jb
dec
aas
scas
and
jecxz
push
mov
jecxz
fs
inc
mov
int
inc
sti
outsb
shrl
mov
xchg
inc
je
mov
pop
lock
xor
xor
fsubl
or
xor
dec
bound
das
dec
or
out
jno
in
adc
icebp
packssdw
mov
inc
test
push
mov
jmp
subl
pop
in
or
pop
in
movsb
clc
push
adc
cmp
or
nop
dec
xchg
xor
pop
sub
data16
sbb
xor
int3
test
les
cld
fiadds
xorl
lods
dec
pop
lea
into
jg
sbb
mov
xor
iret
ds
dec
sbb
xor
mov
adc
cmpps
loop
into
jbe
sub
lret
call
inc
movsl
stc
xchg
lock
jne
mov
jmp
sbb
sbb
dec
push
sub
push
mov
ss
loop
imul
pop
xor
push
rcll
adc
adc
je
data16
shll
mov
icebp
push
lret
mov
cli
jns
imul
repz
mov
pmuludq
xchg
sbb
sub
add
out
sbb
adc
add
add
sahf
stc
sub
inc
enter
mov
xor
sbb
repnz
pop
in
mov
mov
cltd
mov
inc
adc
ja
xor
dec
add
call
insl
sbb
insb
dec
les
mov
lret
pop
aaa
and
mov
rcr
andb
add
mov
xchg
cltd
test
xchg
mov
movsl
in
das
sahf
mov
push
xlat
sub
dec
movsb
lds
mov
repz
negb
push
adc
sub
subb
dec
adc
push
pop
test
jg
dec
repz
jno
fiadds
cmpsl
andb
aad
sub
shrl
mov
adc
shll
scas
cmp
mov
insb
sub
adc
dec
cltd
mov
lock
jb
sbb
mov
outsb
popa
imul
add
mov
lahf
jns
xor
pmaddwd
cmp
adc
ret
inc
ret
mov
lret
pop
aam
insl
sbb
call
repnz
xor
dec
or
add
jmp
mov
sbb
mov
mov
xor
addl
mov
sbbl
xor
addl
shl
mov
or
mov
cmp
je
mov
sub
mov
sbb
sub
sbbl
mov
cmpl
jl
add
jmp
pushl
pushl
push
call
mov
xor
xor
shrd
shr
mov
mov
andl
mov
cmpl
jge
jmp
push
pushl
pushl
call
mov
xor
or
mov
mov
mov
jmp
and
and
out
inc
mov
and
adc
aaa
cli
adc
rcrl
xchg
adc
stc
inc
xor
insl
movsl
adc
rolw
repz
dec
stos
div
test
push
xchg
push
or
fs
lock
cs
ret
fisubs
jecxz
imul
icebp
push
pop
rcr
stos
rol
and
mov
std
dec
jno
xchg
adcb
stos
add
sub
ss
xchg
outsl
or
mov
xor
mov
mov
ds
fnsave
push
jp
dec
les
sub
xchg
cmp
out
push
inc
mov
add
mov
xor
fimuls
ret
sbb
cld
xor
sarb
out
hlt
jge
cmp
scas
cli
fstpt
and
cmp
addr16
push
mov
scas
dec
jle
cmc
add
push
pop
lods
cmc
push
mov
sbb
scas
jmp
fdivs
enter
insl
mov
cli
insl
pop
dec
push
daa
and
ss
in
or
jmp
sub
xchg
pusha
cmpl
add
sbb
xor
popa
inc
mov
mov
int3
or
jb
popf
fisubrl
test
sbb
ljmp
push
lock
stos
push
pushf
and
sbbl
jae
clc
mov
rorb
jbe
or
inc
inc
scas
cmp
dec
jne
testb
push
xchg
ljmp
aaa
scas
addr16
pop
xchg
push
mov
xor
iret
push
call
jbe
pop
mov
sbb
push
decl
cmp
lods
xor
nop
jnp
es
add
push
sbb
pop
mov
jne
mov
nop
pusha
cwtl
pop
divl
divb
lods
jecxz
fiaddl
std
cmpsl
dec
or
imul
sbb
or
rol
mov
xor
call
jg
dec
cmp
arpl
cwtl
add
and
push
int
push
lea
push
imul
repnz
sahf
adc
insl
push
scas
push
loope
aas
mov
ds
jmp
aaa
inc
push
sahf
push
sub
pop
int
cmp
imul
imul
fstps
xchg
add
pop
int
ss
or
mov
pop
cmp
imul
in
adc
dec
test
out
inc
and
mov
xlat
jbe
pop
push
push
add
and
jae
pop
pop
cltd
divl
xor
jge
inc
add
push
mov
sub
pusha
adc
dec
dec
inc
lcall
dec
adc
dec
pop
movsb
stos
pop
test
fs
mov
imulb
pop
stc
js
pop
xlat
inc
sti
shr
sbb
inc
jl
dec
jo
xor
mulb
xor
sub
aad
adc
inc
mov
lods
loope
scas
mov
sarb
cmp
addl
xchg
push
pop
sarb
dec
out
adc
mov
popa
test
orl
inc
rorl
mov
sub
add
push
or
shrl
sbb
mov
xor
adc
sbb
mov
xchg
lods
sbb
stos
in
inc
cmc
sub
pop
cmp
leave
push
dec
notb
das
movsb
pop
orb
test
sbb
add
xchg
mov
push
jecxz
jle
jno
shlb
xor
lahf
pop
mov
mov
push
push
cli
cld
add
iret
fwait
cmpsb
cmpsb
imul
or
xchg
jge
int3
cmp
ljmp
ljmp
into
cltd
and
out
sub
xchg
xchg
jmp
arpl
and
fs
scas
cmpsb
es
out
out
push
jae
icebp
rcll
aad
xchg
mov
rorl
push
and
jmp
outsb
es
sbb
clc
inc
addr16
test
jl
lea
in
mov
cmpsb
mov
pushf
lahf
insb
fidivl
stc
loope
aam
aad
cld
xor
xor
mov
mov
inc
mov
shrd
addl
shl
andl
or
subl
mov
mov
xorl
mov
xorl
shll
andl
mov
cmpl
jb
add
jmp
pushl
push
push
call
mov
mov
xor
or
shr
or
movl
jmp
jb
aad
xchg
adc
sub
jg
adc
adc
cli
adc
das
movsb
xlat
inc
leave
out
add
pop
sbb
xchg
mov
cmpsl
cltd
pop
repnz
mov
pop
jae
xor
add
xchg
xchg
or
sub
jae
aas
out
subps
sub
adc
add
xchg
push
fdiv
push
cmp
inc
daa
push
pop
dec
push
mov
test
push
fcomps
mov
xchg
push
jle
test
and
fcoml
popa
hlt
test
sbb
xchg
or
pushf
iret
mov
outsb
or
aas
outsb
jecxz
push
popf
xor
in
mov
enter
scas
ljmp
test
pop
sahf
aas
test
cli
orb
lret
je
je
pop
in
jg
and
and
add
push
loopne
call
out
pushf
pusha
iret
mov
pop
add
pop
inc
pushf
jne
sarb
jmp
mov
lds
test
setno
fmuls
xor
mov
loope
push
in
cli
xchg
fmuls
xlat
pop
push
push
aaa
aam
test
pop
fldl
lcall
mov
ss
test
test
lea
mov
repz
push
cmp
cmp
mov
mov
mov
ds
lea
mov
or
psubsb
mov
inc
xchg
fstps
xor
shlb
shlb
and
repnz
sahf
mov
xchg
shlb
xor
jb
insb
pop
cli
mov
stos
jmp
inc
jg
xchg
cltd
lock
jo
jns
adc
in
cli
adc
xchg
cmp
jnp
sbbl
jns
mov
jae
sub
cmovno
sub
cmp
push
cmc
jns
dec
push
jg
jae
xchg
or
arpl
mov
adc
fiadds
call
ret
shrb
jecxz
mov
xor
mov
jnp
xorl
cmp
cmp
mov
pop
out
push
mov
push
or
pushf
scas
mov
mov
loop
cli
test
jmp
lea
inc
orl
cmc
fsubrl
mov
sbb
pop
testb
fst
mov
out
aaa
incb
aas
mov
dec
jg
aad
mov
pop
cmp
lret
cmp
movsl
jns
jnp,pt
test
push
lret
shl
fisubl
or
fwait
or
sahf
xor
mov
dec
or
and
fcompl
add
dec
jecxz
dec
repz
out
idiv
mov
aaa
add
lods
shl
ds
lret
pop
xor
sbb
ss
cmc
stos
adc
movb
scas
rolb
std
out
mov
xor
in
cli
sti
into
dec
pop
mov
jnp
cs
jb
daa
xchg
mov
fstps
xchg
sub
stc
jne
inc
mov
aas
lea
stos
inc
aam
test
pop
lods
mov
ss
test
loop,pt
sbb
fcoms
frstor
jmp
jnp
push
rolb
mov
cwtl
daa
out
jmp
aas
ds
lcall
add
pop
add
enter
cmp
daa
sub
ds
dec
pop
xchg
loope
insb
dec
mov
push
dec
lds
sub
out
arpl
scas
mov
jecxz
loopne
push
lock
cmp
pop
mov
movsb
in
xchg
adc
jp
sbb
ficompl
jge
add
push
xorb
stc
mov
dec
je
pop
inc
or
mov
dec
popf
add
pop
stos
mov
inc
or
sub
or
cwtl
pop
mov
sbb
fbld
and
cmc
xor
sbb
icebp
inc
xchg
cs
mov
inc
push
std
sub
insb
out
push
cli
or
std
inc
test
cmp
xchg
into
mov
mov
dec
popa
stc
test
inc
sub
shlb
xchg
bound
jne
xlat
xor
cwtl
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
jmp
gs
sub
dec
test
das
jnp
std
adc
aaa
cli
adc
adc
addr16
out
jmp
rcrl
sbb
sar
sub
andl
clc
mov
mov
aaa
aaa
mov
mov
ret
xchg
and
jbe
rcl
pusha
adc
push
repz
jae
or
fsub
shlb
or
arpl
xchg
jae
cmp
dec
push
sti
push
cmpsb
jl
out
in
pop
fnstenv
out
xlat
ja
repz
loopne
int
jl
lret
pop
incl
scas
xor
xchg
andb
sbb
pop
bound
sbb
test
leave
popa
movsb
pop
and
inc
pop
aad
lret
xorl
mov
lea
fsubrl
inc
notl
aas
cmc
jno
mov
and
aaa
add
cmp
jns
pop
daa
adc
sub
add
dec
push
or
add
cmc
int3
daa
aam
aas
jo
fcoms
cmp
and
sbb
movsb
or
mov
aaa
nop
movsb
cmpsb
sub
push
inc
mov
mov
fistpll
jle
xchg
xchg
aam
test
repz
jnp
push
sbb
inc
mov
and
jg
hlt
rorb
rolb
icebp
adc
enter
scas
sub
jge
out
fs
pusha
sbb
lahf
xorb
sbb
pusha
pushf
push
dec
jo
and
jb
and
je
mov
test
push
push
imul
mov
ja
and
adc
pop
orl
outsl
ret
cld
sub
inc
dec
fmuls
inc
push
inc
inc
fisttpl
and
adc
stos
xor
add
lds
stc
std
lea
and
inc
dec
xor
add
cmp
cltd
cmp
insb
mov
or
pop
es
ret
lret
test
mov
ficoms
dec
lock
mov
dec
pop
aaa
in
pop
mov
or
inc
out
mov
add
out
lods
stos
psubd
adc
mov
std
add
mov
sub
jb
sub
or
ljmp
inc
push
jle
aaa
roll
jo
jp
loope
lahf
aas
movsb
push
mov
push
in
and
mov
outsb
dec
enter
movsl
pop
ss
mov
pop
arpl
std
jmp
sub
jle
fisttpll
lret
dec
pop
mov
es
lret
popf
mov
cld
scas
bound
jle
jb
and
lds
rcr
lock
xchg
sbb
sub
movsl
divl
dec
or
xorl
pop
xorl
mov
cmp
icebp
mov
mov
fisttpll
in
push
aad
add
test
cmp
jp
mov
jno
bound
lods
jne
jl
aam
mov
ss
pop
fwait
push
in
mov
inc
pop
movhps
mov
xchg
fcoms
mov
or
rcrb
lods
call
xor
mov
or
shlb
fisubrs
enter
push
repnz
dec
std
lods
add
in
dec
inc
push
sahf
mov
mov
scas
adc
aam
push
or
fiaddl
into
cltd
cmp
jl
pushl
cmp
fdivrl
data16
dec
mov
aas
add
cmp
jbe
addr16
dec
outsl
xor
aam
in
cmc
enter
popa
pop
addb
mov
leave
fcoml
sbb
insb
nop
inc
stos
adc
sub
stc
inc
lock
jp
add
mov
popf
xchg
fisubl
popa
lret
push
sar
ds
mov
mov
pop
cmp
adc
hlt
in
mov
loope
aad
jp
sbb
mov
xor
fistps
sahf
adc
je
ja
lahf
add
lret
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
jmp
xchg
push
je
xor
mov
repnz
and
xchg
iret
add
adc
cli
adc
push
push
jb
cmp
dec
pop
std
in
fbld
mov
add
or
out
dec
loop
fdivrs
mov
fstpl
fldt
pusha
dec
fs
icebp
ss
pop
jmp
mov
push
fimull
pusha
pop
test
adc
jae
lods
push
pop
jl
arpl
mov
mov
inc
mov
sub
jmp
into
in
subb
jl
xlat
popa
aam
aam
shlb
ret
or
std
lahf
mov
dec
mov
in
xchg
push
mov
mov
ret
movsl
ss
ficoms
mov
pop
flds
push
test
mov
imul
dec
mov
xor
sbb
sbb
daa
inc
rol
iret
push
push
mov
cs
insb
adc
push
out
mov
rclb
jle
sti
mov
adc
jmp
mov
ret
mov
xchg
jge
ror
push
xchg
push
add
mov
jl
call
sbb
bound
mov
mov
and
xor
jle
mov
les
insb
aaa
test
jmp
mov
cld
mov
xor
test
lock
pop
sbb
mov
das
mov
push
mov
xchg
dec
stc
ja
pushf
and
stos
push
fwait
push
test
mov
icebp
sti
cmp
dec
xor
adcb
push
aad
push
in
inc
jge
faddl
movsb
cmpb
mov
decl
mov
push
jecxz
pop
movzwl
mov
pop
mov
shl
mov
or
dec
ja
test
xor
pop
mov
cmpsl
mov
mov
and
mov
pop
rcl
fcompl
dec
orl
cmp
jle
inc
in
mov
jbe
sub
dec
je
daa
lcall
or
in
arpl
cmc
dec
enter
cmpsb
imul
setae
stc
les
push
ror
orl
ss
scas
jo
stc
or
popa
jmp
pop
lods
lods
popa
jg
nop
sbb
jnp
es
into
iret
inc
cmp
int
mov
int3
cmpsl
ficompl
mov
mov
pop
jns
rol
insb
xchg
lret
sbb
sarb
jmp
dec
cmp
sub
or
lahf
inc
mov
repz
sub
mov
imul
mull
push
outsb
dec
mov
bound
sbb
out
sbb
cmc
or
in
adc
addr16
mov
enter
lahf
fistl
ss
xor
test
or
dec
or
inc
xchg
sbb
sub
aaa
leave
enter
aam
pusha
icebp
fwait
jle
pop
stos
lret
notl
lods
mov
imul
inc
outsb
je
push
mov
imul
jo
push
xor
push
fadds
mov
mov
movsl
popf
arpl
xchg
jl
outsb
fdiv
fdivrl
dec
mov
movsb
push
fdiv
and
push
push
xchg
sbb
cmpsl
test
cld
cli
jmp
mov
xchg
f2xm1
aas
lahf
jge
sub
mov
or
addr16
or
popf
xchg
jge
jl
scas
insb
jb
je
daa
xchg
repz
add
jne
adc
pop
ljmp
je
pop
std
mov
int
xor
jl
xlat
lret
pop
mov
sbb
mov
pop
lds
test
sbb
cmp
iret
mov
push
xchg
enter
dec
dec
adc
jae
adc
mov
sbb
hlt
xlat
xchg
gs
and
fisubrs
jecxz
notb
add
popf
ja
pop
xchg
ret
mov
mov
ss
addr16
insl
sub
jno
push
ret
in
push
jb
into
adc
inc
sub
int
movsb
repz
mov
lret
mov
xchg
repz
push
test
push
lock
pop
or
pop
xor
dec
sbb
shll
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
jmp
and
mov
nop
push
fs
lds
jmp
adc
cli
adc
mov
mov
cmp
scas
inc
mov
ljmp
cld
repnz
sahf
lods
cmp
in
data16
mov
push
lahf
das
dec
int3
and
pop
pop
sahf
fwait
sub
and
idivb
cmc
jp
xchg
jle
mov
cmp
in
loop
xchg
xlat
test
lods
nop
movsl
lcall
repz
cmp
lds
sub
mov
les
ljmp
jl
in
sarl
xchg
dec
dec
in
ret
sub
cmp
jns
stc
enter
sahf
push
mov
sbbb
mov
movntps
jmp
pop
adc
popf
imul
lcall
xor
jmp
out
cwtl
insb
aas
inc
mov
and
lahf
pushf
addb
fstpl
add
loopne,pt
mov
vpand
jnp
sbb
adc
bound
lret
popf
enter
sahf
mov
test
je
icebp
repnz
outsl
fisubl
mov
inc
std
add
xchg
hlt
mov
inc
inc
jmp
pop
dec
mov
aad
push
insb
xor
add
fisubs
adc
sbb
jae
sbb
cltd
adc
or
fstpt
add
cmp
cltd
lahf
add
jns
adc
and
mov
frstor
cs
dec
cwtl
inc
idiv
push
add
xchg
imulb
cmp
stos
out
pop
into
insl
inc
add
push
leave
fsts
loop
cmc
xor
dec
add
fucomi
add
fbstp
pop
dec
xchg
mov
jecxz
push
add
dec
bound
push
inc
rol
inc
or
adc
push
test
lods
imul
jmp
lahf
rcl
inc
dec
rolb
pop
ja
test
mov
pushf
cmc
dec
and
fwait
stc
pop
adc
pushf
int
les
bound
jmp
inc
filds
lret
es
add
jo
in
adc
fistps
cltd
aam
push
add
sub
imul
pop
inc
scas
xchg
pop
and
pop
mov
sti
xor
and
in
in
aad
pop
out
push
loop
stos
mov
inc
imul
cmp
sub
jno
xor
add
cmp
out
xchg
popf
es
imul
gs
imul
adc
sub
cmp
js
mov
outsb
mov
add
pop
xor
xchg
pop
sarl
xchg
shlb
mov
aaa
cli
in
ret
adc
xchg
push
xchg
xchg
cmpsb
cmc
stos
pop
inc
dec
cld
or
fstpl
rcrl
adc
pop
cmp
inc
mov
ja
mov
out
push
gs
push
cli
fildl
subl
push
leave
pop
xor
and
mov
std
mov
adc
cmp
xchg
mov
loop
push
js
xchg
test
in
ret
cli
push
sub
sti
sub
into
cmpsb
sub
iret
jno,pt
das
dec
jnp
out
mov
inc
cmp
ljmp
dec
lods
rcl
xor
icebp
leave
xchg
add
movsl
arpl
mov
hlt
fbld
js
cmc
test
call
cwtl
pop
idivb
nop
lea
popf
pushf
int3
fwait
pop
rorl
outsl
aam
inc
lahf
fs
mov
lods
repnz
and
test
jne
fsubrl
int
sub
jl
in
test
sbb
stos
adc
stos
lcall
in
push
jns
push
or
lahf
int
sub
mov
test
push
push
lock
sub
sbb
gs
lahf
or
fwait
dec
jo
sbb
add
add
mov
cmp
je
dec
adc
xor
pushl
stos
adc
dec
or
cmp
lods
xor
pushl
lock
pop
lods
decb
mov
push
mov
loop
cmp
mov
ret
push
cld
mov
mov
mov
mov
shrd
mov
jmp
push
push
push
adc
aam
push
insl
push
jns
repz
aaa
cli
adc
in
mov
repz
insl
push
popf
lods
fwait
mov
mov
popa
push
insb
fsubrs
cmp
data16
rorb
test
inc
xlat
shlb
pop
fs
xorl
aas
or
insb
sub
lock
pop
roll
divl
sub
adc
fdivs
ljmp
mov
jg
mov
push
pop
cmp
dec
mov
repz
jecxz
sahf
repnz
ljmp
xor
lods
jge
pop
mov
stc
mov
add
mov
push
mov
sbb
xor
insl
push
mov
inc
sub
jae
jns
and
cld
jo
movsb
ficompl
or
cli
loop
mov
pop
inc
popa
das
sub
inc
dec
shl
popf
dec
ret
into
repnz
sub
inc
jns
icebp
out
pop
js
push
sbb
cmpsb
out
jmp
sbb
adc
shlb
dec
sti
rcl
xor
int
loope
mov
push
pop
in
and
mov
stos
mov
dec
clc
adc
xchg
adc
inc
mov
pushf
in
and
cmp
jae
mov
mov
inc
addr16
mov
jb
roll
or
adc
ss
mov
cmpsb
js
mov
mov
repz
xor
lahf
push
jne
mov
fs
into
xor
les
mov
les
mov
mov
sbb
xchg
movb
pop
addb
and
push
push
les
sub
mov
pop
sub
add
jns
pop
push
imul
mov
in
lahf
clc
jmp
jl
clc
daa
fidivrs
popa
push
add
mov
mov
pushf
js
clc
sub
lock
xlat
pop
push
inc
inc
dec
flds
rolb
xor
and
arpl
lret
sub
jp
addr16
push
mov
loop
jle
aas
xchg
push
cmp
test
and
inc
movsb
push
scas
or
push
lahf
push
in
sub
add
insl
int
mov
cmpl
push
fdivp
mov
push
inc
das
pop
scas
es
and
out
cmp
pop
xor
insb
inc
xchg
fnstsw
movsb
out
es
pushf
cmp
xor
ret
and
les
decb
push
xchg
into
pop
xor
adc
test
or
js
mov
ret
dec
adcb
out
scas
out
jbe
mov
in
lret
fcomps
mov
jae
test
imul
push
dec
mov
ss
lret
cwtl
xchg
inc
sahf
xor
and
ds
dec
and
xor
movsl
mov
sahf
jmp
dec
or
shl
movsl
adc
repz
sbb
dec
repnz
mov
in
stos
pop
dec
jbe
dec
pushl
daa
int
mov
aas
shrl
add
jge
insb
ljmp
and
outsb
out
mov
mov
cmp
dec
das
in
in
cli
mov
cmp
into
in
xor
sub
dec
shrl
ds
pop
pushl
pop
cmp
cltd
xor
or
iret
add
xlat
rcll
jae
leave
push
repnz
cmc
in
pop
mov
stc
rclb
pusha
jecxz
mov
lods
sbb
mov
test
mov
xchg
cmpsl
dec
or
or
or
pop
ret
sub
jmp
out
pop
clc
aas
daa
loope
mov
adc
adc
jp
shll
aad
adc
or
cmp
andl
daa
sub
test
faddl
inc
imul
mov
mov
mov
movsb
inc
fadds
cmp
push
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
jmp
lcall
push
repz
sbb
loopne
adc
cli
adc
iret
sbb
insl
aas
icebp
dec
div
push
int
into
lahf
fdivrs
cs
jp
mov
inc
in
cmp
mov
in
add
add
jg
mov
imul
inc
mov
lcall
jecxz
call
adc
or
gs
sbb
cmpsl
mov
cmc
int3
push
stos
pop
dec
jns
or
and
dec
pop
movsl
pop
dec
adc
fldl
sub
lcall
cmp
jo
cmpl
in
lret
mov
icebp
push
xchg
cmpsl
rclb
popf
sarb
jecxz
and
sub
sti
outsb
ds
mov
lret
push
filds
cmp
adc
rorl
cltd
jmp
adc
dec
mov
push
adc
dec
dec
aas
push
cwtl
in
iret
sahf
in
mov
mov
add
daa
jg
xchg
movsb
cs
pop
pop
in
mov
jae
stc
adc
ja
fcompl
mov
adc
repz
mov
xchg
mov
jle
or
movsb
int
mov
arpl
test
sub
cltd
icebp
cmpb
lds
cld
movsb
add
rcr
lcall
test
xchg
lds
cld
add
sbb
xchg
call
dec
push
push
and
and
movsl
hlt
dec
nop
jnp
mov
or
ss
stc
jb
push
mov
sub
ret
in
movsb
mov
scas
pop
adc
jae
mov
push
push
push
negl
or
dec
mov
sub
adc
int3
adc
dec
jns
or
icebp
pop
bound
int
fcomps
cmp
jbe
sub
gs
sub
lock
add
xchg
mov
mov
loope
mov
popa
sti
dec
mov
outsb
je
shll
push
pusha
xlat
hlt
inc
mov
fs
adc
mov
or
sahf
cmp
addr16
addb
test
adc
loop
cltd
dec
loopne
in
dec
mov
ja
ss
mov
cmp
cmp
mov
addr16
jns
xor
cmpsb
xor
dec
xchg
ja
aas
ret
jp
mov
push
sub
cmpsb
negl
lret
pop
push
cltd
xchg
add
cwtl
dec
out
dec
test
js
dec
xor
test
fisubrs
pushf
and
cmp
or
push
add
xor
scas
push
ja
in
jmp
arpl
inc
xchg
sub
add
mov
sub
notl
mov
cmp
mov
daa
loope
pop
mov
mov
mov
sti
xlat
sub
aam
pusha
cmc
mov
push
mov
out
pop
mov
aas
inc
cmc
mov
imul
inc
jns
and
pop
sbb
inc
sbb
inc
enter
les
xor
dec
sbb
and
lea
hlt
mov
dec
out
test
lcall
fisttps
pop
ljmp
push
jbe
xlat
jb
fcoml
arpl
movsb
inc
add
mov
inc
inc
mov
cmpsl
fdivrs
fs
fnstcw
shlb
sbb
enter
sub
jge
push
enter
mov
jae
in
fsubrs
lahf
mov
andl
adc
xor
and
cmp
popa
sbb
clc
sbb
cwtl
andl
push
nop
pushf
mov
pop
cmpsl
cmp
mov
les
cmc
mov
mov
push
fisttpll
orl
int3
xchg
cwtl
data16
cmp
add
fdivl
push
or
ret
sti
adc
into
ret
popf
je
push
or
sbb
jb
sub
ret
jnp
sub
mov
and
push
push
js
aaa
repnz
cmp
inc
push
add
mov
and
andb
dec
xor
mov
imul
into
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
jmp
mov
cmpsb
adc
cli
addr16
mov
mov
aaa
cli
adc
lret
adc
sub
jb
or
inc
adc
popa
jge
repz
imul
repz
fidivrl
lahf
lea
out
mov
adc
sbb
mov
xchg
or
arpl
mov
or
mov
sub
xchg
cld
inc
jnp
jecxz
xor
mov
stc
fcmove
mov
iret
push
icebp
cmp
mov
sbb
subb
pop
mov
cmp
enter
push
xchg
sahf
sarl
push
mov
inc
mov
in
out
cmpl
arpl
xchg
and
scas
loopw
mov
ljmp
test
outsb
add
repnz
jnp
fistpl
dec
shll
sub
and
mov
insb
in
mov
ds
xchg
int3
jle
jge
xchg
fcomps
dec
jl
sahf
add
scas
sub
cmp
xor
mov
scas
sub
jns
and
lods
fnsave
pop
outsb
fldlg2
sti
mov
pop
sbbb
ljmp
shlb
cltd
xor
mov
pop
jmp
lret
dec
leave
cs
test
pop
push
test
push
cwtl
fbstp
fsts
mov
in
arpl
out
push
jecxz
mov
add
or
lds
aam
xchg
and
repz
dec
daa
shrb
aam
mov
mov
pop
bound
scas
lret
and
dec
pavgw
xchg
or
fsubp
xlat
mov
addb
jl
dec
popa
out
mov
mov
loop
ja
out
in
pop
push
add
xchg
test
ja
dec
movsl
les
stc
xchg
not
hlt
and
fisubl
test
mov
push
pop
mov
pushf
inc
popf
mov
lret
pop
call
inc
test
imul
inc
mov
lahf
xor
cmpsb
inc
sub
mov
mov
test
mull
sub
cli
add
insb
mov
rcll
cmp
jo
addr16
int
lret
cltd
ret
in
rolb
inc
pop
enter
and
test
pop
loope
or
ret
xchg
leave
add
les
adc
push
xchg
mov
ret
js
cmp
je
out
pop
ficomps
xchg
push
loopne
mov
stos
enter
aad
shrl
push
adc
cmc
add
jg
push
fistl
xchg
push
sbb
push
addr16
adc
arpl
cmc
test
inc
outsl
sub
pop
dec
dec
dec
addr16
subb
lock
scas
outsb
iret
movsb
or
test
imul
ret
fstl
repnz
sub
jo
ja
inc
bound
shlb
mov
xlat
les
xchg
nop
inc
add
xorb
sub
dec
inc
cmp
mov
pusha
cs
shll
loopne
xchg
jnp
mov
mov
pop
repz
mov
rcr
mov
ss
into
loope
loope,pn
in
xor
pop
jne
in
fnsave
jb
mov
ret
sub
in
scas
sub
or
lcall
sub
lret
jnp
push
test
cmpsb
add
outsb
js
popf
or
stos
xchg
cmp
xor
mov
pop
out
fdivrl
jmp
adc
push
xor
fsubrp
in
hlt
sbb
mov
sbb
mov
xchg
jg
xchg
or
sub
inc
test
sbb
mov
lock
inc
mov
xlat
mov
lock
lahf
add
hlt
fadds
push
scas
xor
int3
push
and
mov
jbe
and
cmpsl
in
jge
xchg
aad
pop
add
pop
mov
daa
sbb
ret
mov
cmp
mov
adc
sarb
andl
jmp
lea
adc
leave
xor
btc
into
adc
aaa
cli
adc
cmp
jmp
xor
loopne
popf
push
aam
sub
daa
insb
scas
mov
inc
hlt
lods
in
jl
add
addr16
outsb
or
cmp
fdivs
add
in
mov
int
cmp
jecxz
add
mov
fistpll
fdiv
mov
mov
repnz
fsubrs
adc
les
push
pop
cmp
adc
mov
mov
add
shld
incb
sbb
push
xchg
aam
fucomp
dec
pop
je
jecxz
inc
dec
push
dec
inc
and
rolb
in
push
xchg
pusha
jnp
repnz
adc
add
aas
dec
inc
add
and
call
int3
std
or
into
jmp
mov
jno
push
js
fcompl
sub
js
xlat
inc
int3
push
pop
out
lret
mov
adc
jecxz
push
sbb
js
cwtl
mov
adc
pusha
repnz
arpl
dec
sti
out
js
jnp
push
loop
aam
in
mov
push
cmp
cmp
ss
lods
inc
in
xor
inc
lahf
or
daa
jns
inc
lret
inc
mov
loop
mov
or
out
jl
in
sbb
mov
and
dec
mov
ret
sarl
and
cld
cmc
cli
and
scas
jnp
dec
mov
cmpsl
push
jb
dec
sub
and
je
mov
xchg
lahf
xor
imul
sbb
mov
xchg
fstpl
out
or
xor
add
nop
stc
mov
inc
pop
iret
aam
pop
mov
mov
xor
sti
pop
out
push
sti
mov
cs
clc
jno
sbb
gs
and
mov
xchg
jmp
mov
test
cmpsl
push
ljmp
mov
in
insl
jmpw
cltd
push
adc
ss
pushf
mov
pusha
imul
dec
push
dec
xchg
or
out
or
lret
jae
push
push
sbb
mov
jae
jns
shlb
sbb
mov
ja
psllw
xor
adc
outsl
lret
pop
adc
jp
fwait
inc
xor
sbb
and
sub
fcoml
mov
mov
bound
stc
dec
aad
cmp
enter
push
bound
and
jg
dec
mov
das
insb
loop
cmp
push
cli
movsl
sbb
iret
pop
test
lahf
rorl
cmp
imul
shlb
mov
mov
repnz
jp
popl
pop
xchg
pop
inc
ljmp
push
fscale
jo
outsl
cltd
dec
lock
xchg
lock
iret
mov
nop
sahf
out
dec
xor
inc
mov
xchg
jmp
call
xor
gs
pop
enter
dec
fdivr
incl
add
dec
or
movsb
stc
fiaddl
xchg
inc
pop
mov
xor
add
xchg
or
jo
or
leave
xchg
xchg
pop
stos
fnstsw
or
push
rcrl
sub
xchg
or
mov
jmp
in
push
pop
xor
fstl
testl
push
fdivr
scas
adc
pusha
aad
sbb
adc
sbb
mov
pop
dec
enter
movsb
or
daa
aaa
mov
aaa
outsl
fisubs
sub
sar
jmp
mov
jb
jmp
xor
add
es
xlat
rorl
bound
cli
addr16
mov
outsl
sbbl
cmp
sbb
popf
inc
mov
push
mov
jle
cmpl
lcall
je
dec
mov
ja
call
cmpsl
xlat
sbb
fs
or
sub
rol
es
pop
jg
data16
xor
ds
fcomi
add
add
shlb
cmpsb
cmp
stc
jne
nop
jmp
jnp
pop
jo
jg
jo
cmpsb
sarl
gs
pop
inc
cmp
xchg
jge
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
jmp
ja
add
inc
push
inc
aaa
mov
daa
mov
adc
cli
adc
jecxz
cmp
scas
sbbb
cmpb
mov
aad
in
adc
bsr
imul
pop
mov
xchg
jae
jno
xor
sbb
scas
rcrw
call
out
pop
rep
icebp
inc
out
cmc
pop
xor
jle
fstps
or
cmp
movsb
push
inc
aaa
je
add
pop
scas
lods
ret
jno
mov
sbb
or
adcl
xchg
pop
inc
mov
pop
imul
jbe
cmp
jbe
and
or
sub
dec
pop
xor
fistpll
push
nop
pushf
cwtl
xchg
xchg
jae
loop
dec
idiv
jl
sub
jne
push
int
es
or
adc
pop
pop
jns
insl
and
cld
cmp
repz
out
jbe
sbb
push
dec
pop
xchg
mov
adc
xchg
outsl
xor
aas
testb
ss
mov
add
mov
pop
test
daa
dec
test
int
mov
xchg
push
repz
xchg
mov
or
ss
jo
mov
iret
cmp
add
in
stc
std
lahf
or
xor
insl
push
adc
test
adc
sub
mov
xor
int
pop
repz
jle
movsl
xchg
imul
leave
adc
inc
jo
repnz
push
iret
or
aaa
and
sbb
push
mov
or
push
lods
xchg
mov
cmc
call
push
mull
cwtl
pop
pop
lret
dec
xlat
pop
push
xchg
loop
mov
xchg
mov
stos
cmc
clc
aas
in
popf
pop
xor
mov
mov
inc
inc
out
ror
into
and
xlat
popf
js
aad
addr16
outsb
cmp
test
testb
xorl
add
cwtl
mov
scas
add
aam
daa
stc
test
adc
inc
pop
loopne
pop
in
test
call
cmpsb
jb
fisttps
lods
fldenv
clc
dec
push
add
iret
sub
push
cwtl
clc
sbb
ja,pn
shll
adc
imul
mov
xor
add
js
in
pushf
insb
cmpsb
outsl
addr16
jns
xor
push
test
incl
in
add
frstor
jno
stc
in
cld
add
sbb
jne
sbb
adc
jae
mov
push
stc
clc
pop
fldcw
std
stos
das
faddp
or
or
sub
inc
jmp
inc
shll
in
cmpsl
sbb
dec
jmp
jp
lcall
rolb
mov
lea
aad
orb
int3
pop
jae
push
jmp
imul
rcll
jmp
mov
repz
cli
lret
adc
jns
and
gs
cmc
push
xchg
dec
call
lods
add
sub
repnz
push
and
push
push
lret
movsb
mov
mov
std
lock
add
cmp
mov
sbb
cmp
adc
shll
imul
bound
xchg
fistl
mov
stc
sub
sar
stos
cwtl
dec
xor
cmp
je
movsb
aas
jb
int
mov
xchg
stos
in
mov
cs
and
xor
repz
jbe
inc
ret
push
enter
ret
mov
xchg
cmp
outsb
xchg
inc
and
add
cmc
push
adc
cmpsl
xchg
xlat
shll
sbb
cmc
out
insl
xchg
fsubrs
test
fadds
dec
mov
loopne
dec
int3
mov
dec
adc
int
ljmp
dec
or
sub
outsb
mov
dec
pop
mov
fildl
pop
inc
in
jl
mov
inc
add
addr16
xchg
das
cld
xlat
add
and
xchg
jge
sbb
adc
push
shr
push
sub
pop
mov
xor
ljmp
sar
les
push
aas
jb
xchg
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
jmp
pop
test
push
adc
iret
cltd
lds
xor
mov
adc
ret
and
and
int3
in
sbb
mov
xor
or
test
fwait
repz
adc
stos
jecxz
repnz
push
mov
nop
push
out
mov
pop
adc
sub
in
out
or
mov
negl
cs
mov
daa
fwait
mov
aas
shl
xchg
mov
mov
push
adc
fs
int3
pop
mov
outsb
enter
sub
jle
xchg
cmp
jg
dec
mov
mov
ljmp
ja
call
lret
mov
movsb
or
out
ret
and
mov
push
xor
fisubl
add
inc
out
push
xchg
insl
cwtl
mov
jle
and
ljmp
fwait
dec
les
sub
call
sbb
xchg
dec
mov
pop
movl
inc
sti
mov
pop
scas
and
sub
mov
add
outsl
fistps
inc
cwtl
sahf
out
into
inc
dec
cmp
sbb
push
movsb
add
insl
jl
hlt
or
xchg
xor
inc
add
xchg
popa
mov
es
and
push
jo
and
lret
push
test
scas
dec
and
ficoms
pop
sub
mov
aas
sbb
mov
pusha
fstpl
mov
je
gs
cli
push
outsb
cmp
push
inc
lods
jb
cli
lret
mov
adc
jo
add
out
pop
loope
lock
pop
into
jle
xchg
xchg
fs
cwtl
jb
dec
flds
push
and
inc
pop
xchg
sbb
ret
stc
lods
jns
in
sub
adc
cmp
ds
jns
mov
loopne
cwtl
add
test
push
xor
psadbw
fs
les
into
inc
add
in
mov
sbb
cltd
jb
ret
push
daa
sahf
test
add
jl
sub
adc
enter
jo
pushf
cs
gs
xchg
dec
xor
repz
testb
pushf
cmp
push
xchg
cmpsl
push
testl
and
jecxz
shll
dec
andb
ret
push
cmpb
add
push
cwtl
dec
les
in
push
push
xor
std
pusha
push
outsb
inc
mov
cmc
mov
dec
pop
popa
popa
sti
jle
push
push
stos
xor
fstps
push
mov
cmp
mov
je
and
test
xchg
mov
outsb
push
pusha
test
xchg
fs
popf
push
cmc
pop
shrb
mov
out
insb
adc
push
stos
sub
mov
inc
mov
jle
lock
test
and
xchg
fsts
sbb
xlat
bound
or
loop
mov
push
xchg
pop
and
movb
and
adc
mov
xchg
cmp
out
xor
mov
push
sbb
jl
xchg
stos
lret
jmp
data16
xor
adc
push
lock
movsl
les
jne
sub
mov
loopne
stc
push
mov
cmpsb
jge
inc
out
push
jno
pop
rolb
in
std
mov
push
loopne
xchg
call
adc
cmp
sbb
fdivs
push
fs
or
imul
mov
test
out
stos
loope
mov
mov
inc
inc
notb
push
mov
int3
ret
sbb
ja
push
pusha
int
test
daa
loop
fildl
inc
in
xor
jg
sarb
dec
sub
sbb
data16
push
cwtl
neg
in
cltd
xchg
popf
fistl
imul
outsl
mov
lcall
inc
jns
rcr
lret
aaa
aam
ja
into
add
adc
data16
xchg
mov
loop
pop
xchg
rcl
iret
inc
fdivl
leave
cmp
xor
push
dec
dec
lahf
pusha
cmp
and
loop
mov
je
xchg
mov
and
mov
xor
jmp
lods
cld
xchg
jmp
xchg
loope
test
lcall
aaa
cli
adc
lcall
sub
sarb
inc
cmc
mov
mov
je
test
arpl
push
ret
scas
es
and
cltd
les
jle
and
adc
xchg
dec
xor
adc
es
lcall
sysenter
fistps
jl
ds
cld
sub
ja
movsb
fimuls
cmp
cmp
rol
mov
int
push
inc
push
sub
aaa
xor
outsb
insl
or
cmc
pop
test
lock
cwtl
adc
hlt
xchg
data16
xor
rcl
popl
push
out
sbbb
mov
dec
sub
mov
push
je
mov
xchg
insb
push
fcmovbe
add
add
cli
lock
add
mov
push
sbb
imul
mov
mov
shll
test
cmpb
sbb
arpl
dec
ljmp
ss
movsl
jnp
inc
pusha
fdivl
dec
jns
pop
call
hlt
mov
sahf
loope
aaa
insb
in
mov
dec
add
icebp
fidivs
int3
xor
in
mov
dec
iret
cli
scas
jne
sub
stos
test
add
or
icebp
mov
inc
insb
sub
ficomps
mov
pop
inc
xchg
pushf
lcall
push
fwait
pop
xchg
xchg
push
loop
pop
inc
cmpsb
mov
adc
jmp
mov
fs
jne
lock
jmp
arpl
fcoms
or
rolb
mov
xchg
push
xchg
sti
ljmp
xchg
mov
popf
mov
pop
dec
pop
icebp
xchg
xchg
clc
mov
es
dec
mov
xchg
dec
jmp
das
add
icebp
mov
and
xlat
cmpb
leave
arpl
mov
pusha
xchg
mov
outsb
bound
jp
das
ss
push
cmc
pushf
push
push
es
mov
cwtl
pop
or
or
sub
addr16
lock
movsl
arpl
jg
int
and
test
sub
popa
pushf
cltd
jle
sarl
arpl
imul
lret
push
leave
inc
push
fdivrl
ret
leave
or
sub
ja
int3
xchg
mov
sub
fdivrl
and
fwait
jp
xor
xchg
pop
stos
cmp
mov
data16
dec
xchg
ret
frstor
mov
in
fdivl
mov
inc
add
xchg
dec
xchg
add
add
insb
xchg
aaa
aaa
sub
filds
cli
dec
sbb
into
imul
push
cwtl
jp
jae
fdivrs
adcb
inc
mov
out
popa
jno
int3
lods
sahf
sub
idivl
inc
std
sub
rcl
push
inc
push
fcomps
jle
jmp
and
fcompp
cmp
call
mov
add
sub
jb
lds
je
lea
push
ficoml
lcall
inc
aas
xor
sbb
fucomi
out
or
xchg
std
xchg
xor
fsqrt
psubb
lods
lods
and
rcrl
clc
in
scas
sub
add
cltd
ret
hlt
mov
aaa
shl
mov
aaa
in
loopne
pop
cmp
clc
add
and
ja
inc
repz
sbb
pop
bound
popa
jno
or
adc
sti
add
push
shll
dec
push
mov
out
int
cmpsb
das
jge
cmc
adc
jp
sub
jnp
out
repnz
mov
fwait
insl
xchg
adcb
scas
mov
jnp
jge
jge
add
push
mov
sub
sbb
or
outsl
cld
mov
mov
imul
decb
jp
or
push
lret
mulb
or
rcl
loope
and
jns
push
into
add
mov
xchg
or
pop
cmp
aaa
sarl
pop
pop
pop
push
xchg
enter
insl
pop
ja
arpl
cltd
pusha
popf
scas
xchg
loopne
mov
mov
jbe
daa
inc
test
into
jmp
add
test
push
adc
add
adc
test
add
mov
cmp
jne
movl
mov
movl
mov
movl
mov
jmp
addl
dec
push
or
cmp
and
mov
aaa
cli
adc
test
xchg
dec
jnp
fs
add
or
push
fs
insl
inc
fwait
and
inc
jle
repnz
lret
mov
sub
cld
xor
shlb
inc
add
jl
test
ss
sub
or
xchg
cli
pop
aam
std
loope
push
lahf
insb
mov
repz
sar
or
jae
pop
push
out
pop
movsb
loope
push
adc
test
stc
inc
sbb
psrad
mov
pop
cmpsb
xor
xchg
push
nop
jns
outsb
mov
push
sahf
xchg
adc
mov
ljmp
mov
add
clc
lcall
sbb
sub
outsb
imul
ss
mov
mov
les
out
mov
jmp
shrl
mov
call
add
dec
in
jmp
arpl
or
insb
xchg
mov
add
repz
push
loopne
pop
jl
xchg
jb
inc
mov
pop
lea
mov
test
es
mov
cmp
xchg
shrb
inc
jb
enter
mov
xlat
sahf
mov
dec
and
mov
jmp
call
lds
cmpb
movsl
mov
neg
les
dec
add
lcall
insb
dec
jp
pop
xor
testl
adc
jecxz
jo
cmp
subb
xor
decb
ja
cmp
adc
aad
jne
movsl
push
jecxz
push
add
add
mov
or
pushl
pushf
jno
add
adc
ficoms
mov
mov
popf
outsb
jae
sti
xchg
imul
mov
imul
js
adc
fnstsw
es
push
push
cmp
xchg
in
pop
push
popa
jb
lods
shlb
sbb
jno
lods
add
xchg
mov
testb
mov
mov
dec
bound
mov
sub
sub
xchg
movsl
sub
lret
sub
sti
xchg
cs
int3
cwtl
adc
daa
lcall
jmp
outsl
call
outsb
icebp
mov
cli
pusha
fcmovne
add
ja
icebp
sub
sbb
daa
sbb
xchg
xor
jmp
and
xorl
mov
stc
jl
fwait
adc
rclb
fcmovnbe
lods
xor
sbb
dec
mov
nop
pop
pop
mov
pop
lock
aam
cmp
jl
leave
or
push
int3
push
adc
outsb
dec
inc
cmp
in
inc
les
shll
jmp
fsubrp
jno
outsb
test
mov
jne
movsb
icebp
enter
rclb
mov
fsubrp
push
inc
dec
cmc
and
sbb
lds
aas
aas
rol
xor
cmpsb
ficompl
adc
test
test
jecxz
pop
inc
dec
clc
enter
pop
in
xor
mov
jmp
outsl
or
dec
adc
addr16
enter
ja
in
inc
sbb
pusha
pop
jne
jns
hlt
mov
xchg
jmp
and
ss
jp
imul
and
cmp
xchg
add
mov
vpmullw
cmp
insb
jnp
ja
sub
xorl
jb
fstpt
mov
dec
adc
iret
cmp
or
xchg
sub
scas
push
nop
push
add
test
or
pushf
sbb
xchg
mov
mov
aas
cmp
pop
testl
rcll
push
pop
orb
pop
dec
and
mov
xor
mov
or
repz
add
jle
add
add
ret
fwait
jmp
and
cltd
pop
in
push
or
jg
add
jbe
pop
fwait
jo
mov
push
pop
sub
jmp
das
dec
sbb
lea
adc
push
out
xor
inc
enter
mov
inc
or
enter
add
or
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
jmp
pop
fisttpll
dec
es
fisttps
fstpt
pushf
adc
aaa
cli
adc
add
ret
iret
jmp
je
pop
xchg
jo
test
dec
test
in
and
popf
mov
lahf
or
hlt
faddp
add
clc
xchg
std
or
out
cmp
ja
adc
and
jecxz
movsl
arpl
push
insb
lahf
aaa
sbb
mov
pop
cli
cmp
xor
adc
push
jmp
sub
stc
enter
dec
lea
out
xor
rol
ljmp
jmp
js
iret
loop
pop
es
fnsave
sbb
dec
dec
out
cmp
mov
testb
leave
mov
xchg
cwtl
inc
idiv
imul
mov
sbb
fistpll
sbb
lret
xchg
pusha
ja
loopne
in
sti
jl
daa
das
sti
xchg
xchg
lods
mov
push
sbb
mov
mov
movups
cli
lds
ret
fadd
mov
pusha
shrb
jb
mov
xchg
bound
mov
imul
lods
cs
data16
and
jne
inc
test
adc
add
or
test
mov
enter
jbe
xor
sub
cmpsl
js
push
sub
fidivl
and
enter
dec
sarl
daa
les
lods
pop
and
cld
inc
dec
adc
pushf
adc
mov
dec
adc
mov
fisubrs
xor
loop
and
dec
repnz
decl
jg
leave
xchg
jmp
or
jnp
repnz
cwtl
cli
jecxz
outsl
ret
hlt
call
ret
mov
out
sub
xchg
out
in
cmpsl
push
iret
mov
sbb
add
xchg
addl
cmp
inc
lods
dec
test
mov
repnz
adc
repz
xlat
mov
mov
mov
dec
mov
xchg
inc
adcl
shll
cmp
imul
mov
scas
adc
ret
jge
xor
shl
mov
pop
inc
jnp
and
jns
hlt
enter
insb
push
bound
dec
icebp
dec
mov
mov
push
fs
add
test
lea
dec
mov
and
les
fistl
mov
test
ljmp
dec
jmp
inc
xchg
test
xchg
jmp
aad
dec
je
fistps
mov
fistpl
call
adc
pop
in
cmpsb
jg
push
incl
aas
outsb
scas
hlt
decb
cs
mov
mov
in
add
stos
sbb
pop
leave
pop
je
jnp
dec
dec
ret
sub
or
ja
lret
clc
sbb
fstp
test
repnz
cmp
lret
into
sbb
sti
aaa
stc
mov
addl
push
inc
xchg
rcll
pop
jmp
arpl
sbb
insb
mov
mov
adc
and
pop
addl
push
inc
mov
out
jp
add
notl
dec
test
mov
fimuls
nop
lods
jne
add
shrb
bnd
bound
dec
mov
icebp
mov
imul
xorb
push
or
mov
cltd
repnz
inc
xorl
cmp
push
jge
out
push
mov
je
mov
lds
out
call
xor
sub
out
xor
js
lock
xorl
out
sbb
inc
or
dec
dec
xchg
sub
mov
fsubs
xchg
sarb
mov
xchg
mov
rol
dec
jno
mov
jge
in
xchg
mov
mov
jge
cltd
imul
mov
xchg
mov
xorl
pop
mov
imul
adc
mov
pop
xchg
cmc
mov
or
mov
xchg
push
insb
loopne
movsb
xchg
sarl
inc
cmp
pop
iret
jnp
mov
sbb
sahf
push
idivl
dec
add
div
imull
mov
lcall
je
sub
mov
pushf
mov
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
push
test
add
push
adc
jnp
dec
repnz
adc
aaa
cli
adc
ljmp
outsl
js
sbbl
jecxz
shl
adc
jge
test
out
in
ja
sub
pop
pop
lret
addr16
into
adc
adc
cmp
icebp
insl
mov
pop
sbb
pop
cli
xor
xchg
dec
dec
mov
add
pop
cmp
or
cli
mov
inc
mov
outsl
dec
int
sub
push
sub
mov
adc
cmp
adc
cltd
loopne
pop
js
and
mov
xchg
mov
add
idivl
mov
cmpl
jae
fldenv
in
jecxz
xor
vpmuludq
insl
adc
jno
pop
adc
pop
popa
daa
cmc
std
add
mov
jp
xor
clc
out
daa
cmp
nop
jl
out
push
xchg
add
imul
scas
negb
xlat
cs
adc
push
lahf
push
out
jmp
jno
fisubl
enter
xchg
jnp
ja
jge
repz
xor
fisttpl
push
mov
pop
or
xor
dec
mov
pop
xlat
dec
dec
adc
fnstenv
pop
sbb
pop
shlb
or
daa
fidivrs
push
in
lea
push
shrb
dec
mov
jb
arpl
pop
lock
flds
dec
sub
mov
outsb
movsb
mov
std
xchg
jg
add
loope
fwait
jle
fbstp
fists
in
inc
sub
pop
push
rol
pop
fs
or
and
mov
mov
mov
mov
bound
iret
stc
or
aas
mov
xchg
pop
xchg
push
sub
out
dec
pop
jnp
and
fs
jmp
mov
sub
hlt
push
das
mov
jae
icebp
push
sub
fs
adc
lods
adcb
pop
scas
sub
mov
jmp
pop
mov
inc
cmpsb
int
add
ljmp
lock
pop
inc
dec
popf
mov
cmp
xchg
cmc
cmpsl
push
jle
and
mov
add
adc
xchg
cmp
subb
test
jge
mov
fwait
adc
ror
mov
dec
cmp
call
jmp
std
and
neg
sbb
pop
xor
arpl
in
andb
mov
mov
xchg
lret
jecxz
mov
xor
jns
les
xchg
jbe
dec
inc
adc
movsb
rorb
lcall
loop
cs
pop
out
mulb
test
sub
add
add
cmp
and
jb
and
daa
cltd
rcr
xchg
pminsw
jle
addb
hlt
dec
sbb
pop
jecxz
add
in
cld
shl
mov
adc
push
mov
xor
inc
inc
insb
adc
mov
xchg
ret
stos
sbb
or
out
add
push
ljmp
cmpl
out
xlat
pushf
and
cli
jle
mov
into
mov
hlt
cmp
adc
cmp
ror
shrl
xor
imul
lcall
imul
xor
mov
std
pushf
repnz
dec
mov
inc
jbe
mov
mov
into
inc
ret
push
js
pop
cmpsl
lods
mov
rcll
addr16
mov
aas
ss
sbb
inc
push
sub
rcl
cs
outsb
mov
mov
daa
inc
sbb
or
add
dec
mov
es
or
ss
cmc
cmpsl
fucomip
enter
xchg
int
inc
mov
mov
stc
subl
mov
addl
mov
fmull
insb
addr16
sub
fmuls
cwtl
jge
add
adc
mov
gs
push
repz
dec
cwtl
pusha
movsl
adc
or
int
std
insb
data16
sbb
cwtl
pushf
fsubrl
test
mov
push
lock
or
jmp
mov
je
lods
mov
imul
sahf
mov
adc
cli
adc
add
mov
or
sbb
push
negl
jecxz
je
mov
inc
adc
insl
cld
imul
int
jl
fidivrs
stos
push
cmp
mov
add
sbb
xchg
adc
or
cld
out
cmp
int
push
in
add
clc
add
movsb
out
mov
jmp
lods
and
xchg
outsb
xchg
xchg
adc
lcall
push
pop
out
xor
jne
pop
jo
ja
pop
loop
sbb
movsb
rcl
repz
adc
dec
cmp
mov
shl
push
pushw
mov
mov
lahf
rcrb
ficoms
add
mov
push
outsb
xchg
add
mov
je
mov
adc
adc
repnz
mov
bound
xor
inc
pusha
movsl
jl
push
jle
and
inc
pop
push
mov
mov
stos
push
cli
imul
mov
movsb
xor
push
arpl
out
outsb
mov
or
and
cmpsl
or
icebp
dec
mov
xchg
inc
dec
lock
jnp
push
mov
fadd
push
outsl
ss
or
push
push
testl
inc
pushfw
gs
inc
adc
sti
cmpb
xchg
fs
mov
das
ds
adc
pop
pop
and
stc
jbe
jbe
dec
add
loop
subb
pop
int3
sbb
fcoml
and
pop
xchg
outsb
mov
out
fdiv
sti
push
andl
adc
sub
push
cmpsb
add
mov
fwait
cmp
pop
das
call
push
nop
mov
sub
cltd
xchg
or
int3
scas
fmuls
push
or
push
movsb
pop
repnz
imul
mov
pop
sub
movsb
cli
cwtl
jge
mov
sbb
jl
xchg
mov
jnp
iret
hlt
push
push
aaa
cwtl
seta
xorl
inc
scas
xlat
sbb
jle
je
pop
mov
in
jmp
test
cmpsb
mov
js
pop
jmp
lods
push
jne
bound
into
jb
scas
dec
dec
cld
cmp
test
stos
hlt
test
ss
mov
fidivl
iret
pop
mov
push
cld
imul
jns
mov
sbb
iret
stos
inc
pop
sar
insb
jge
and
rolb
pop
outsb
call
mov
and
dec
nop
out
sbb
out
sub
xchg
ljmp
push
roll
inc
sbb
jg
mov
adc
sub
adc
mov
pusha
iret
adc
jnp
push
in
sti
shll
je
push
mov
fstl
ljmp
adc
mov
xchg
mov
iret
push
shlb
adc
dec
cmpl
roll
mov
sbb
lahf
add
sub
stos
test
add
fcoml
and
repz
jmp
or
push
ret
sub
xor
push
out
cmp
fcmove
and
sub
enter
call
std
pop
jno
pop
cwtl
arpl
das
mov
mov
insb
or
adc
and
xchg
pop
push
nop
dec
or
insl
fsubrp
xor
lret
jo
mov
rcl
cmp
push
cli
sbbl
cmp
xchg
lcall
test
mov
stc
add
add
sbb
outsb
adc
outsb
mov
jp
dec
cli
orl
xorb
outsl
or
add
mov
hlt
xchg
aaa
xchg
mov
fstpt
and
mov
push
fsts
xor
dec
jle
xchg
test
xor
call
ds
call
stos
push
mov
push
or
push
dec
rcrl
stc
xchg
clc
repnz
inc
shll
add
or
mov
mov
jmp
aad
sbb
das
aam
mul
popa
push
xchg
cmp
adc
cli
adc
shlb
cwtl
dec
xchg
mov
call
jnp
movsb
add
push
lods
out
inc
push
pop
in
test
addr16
dec
movsl
adc
xchg
sti
shl
mov
cmp
jge
outsl
imul
es
xchg
or
push
mov
jg
dec
push
sbb
adc
xor
iret
jle
mov
sbb
lahf
lea
scas
in
pop
packuswb
xor
popa
imul
pop
xchg
cwtl
test
mov
aaa
icebp
fidivrs
push
cmc
and
push
add
pushf
roll
dec
adc
sub
clc
mov
xchg
cmp
pusha
repz
push
ret
cmp
cli
mov
pop
test
push
out
movsl
mov
loop
sbb
sbb
cmp
xorl
fsubr
dec
adc
pusha
lock
shrl
mov
in
or
ret
lahf
sbb
bound
in
aam
pcmpgtw
pusha
push
pop
iret
movsb
push
jle
pusha
test
cmpsl
sbb
cmpsb
out
faddl
int
add
std
fidivl
mov
je
mov
jecxz
xorl
arpl
adc
and
mov
mov
imul
fucomip
or
mov
insb
ljmp
icebp
sub
idivl
mov
sbb
xor
adc
mov
iret
sub
shrb
mov
xor
daa
sarb
pop
fwait
test
ljmp
xlat
push
stc
ja
xor
sub
add
int3
negb
rorb
push
mov
push
lret
and
lret
or
sub
mov
fsubrs
mulb
fdivl
push
stos
dec
jecxz
sub
es
mov
push
scas
ret
adc
lahf
int
xchg
dec
lcall
fildl
fwait
pop
fwait
cmpsb
dec
cld
jbe
and
xor
mov
iret
les
iret
sti
lods
sbb
shl
notl
jnp
jge
data16
xchg
shl
or
lods
cmp
aaa
and
lcall
dec
xor
xor
lds
xor
sub
push
mov
call
test
jae
dec
mov
ds
lods
mov
pushf
add
test
clc
scas
pop
jno
test
mov
repz
mov
mov
push
mov
shlb
mov
mov
jnp
shrl
subb
aad
add
push
cmc
iret
data16
push
in
jle
jno
je
mov
scas
sbb
fs
cmc
stos
pop
mov
mov
cmp
xchg
jge
dec
iret
cmp
inc
clc
int
pop
cmp
addr16
fcomps
fidivl
xchg
add
lcall
lret
pop
jp
xchg
gs
fldcw
and
add
scas
into
sbb
orl
gs
iret
pop
xchg
inc
test
mov
das
dec
sub
push
cmpsl
xor
mov
mov
faddl
jbe
vmovdqu
sub
pop
or
xchg
push
addb
repz
fwait
inc
sarb
pop
or
cld
lret
movsl
fsts
cmpsl
cmpsl
cmp
ss
mov
shrb
jb
les
ror
mov
int3
and
lods
js
mov
fstl
test
icebp
mov
add
and
popf
sahf
pop
fcmovnbe
mov
sub
sbb
push
ficoms
scas
adc
outsl
xor
subl
xor
or
push
and
mov
sbb
jmp
add
notl
lods
in
inc
stc
jmp
inc
rolb
enter
call
adc
pop
push
and
sbb
jp
testl
dec
dec
jle
lods
xchg
mov
enter
add
mov
or
add
shl
jmp
add
push
adc
mov
cmpsl
lds
adcb
aaa
cli
adc
insl
lea
rcrl
mov
fcmovbe
pop
aaa
nop
lock
push
cmp
js
mov
sub
pop
xor
aad
push
sub
test
adc
pop
dec
stc
mov
fisttpll
dec
addb
push
rcr
in
xchg
lahf
out
fs
cli
mov
nop
adc
ljmp
lds
cmc
pop
movsb
int3
mov
int
mov
dec
mov
and
sub
repz
add
ljmp
mov
dec
imul
pop
out
lods
ror
xchg
insl
jge
std
jl
ss
xchg
push
out
inc
jbe
leave
mov
cli
mov
in
call
cmp
cmpsl
stos
mov
jne
repz
mov
enter
popa
xor
out
es
lret
push
bound
arpl
into
jae
test
lock
xlat
pushf
andl
pop
in
call
popf
fcompl
dec
sbb
push
test
add
jae
jnp
pop
add
loopne
xor
test
lods
and
pop
hlt
insb
ret
push
ljmp
gs
jnp
movsl
addr16
push
add
and
mov
outsb
adc
cmpsb
mov
fs
mov
or
inc
cmp
idivl
shl
in
xchg
sbb
test
adc
sbb
adc
jns
mov
dec
inc
js
mov
dec
dec
xchg
stos
pop
or
push
fucomi
pop
orl
dec
and
aaa
lds
aas
xchg
mov
loop
jl,pt
mov
dec
or
mov
push
mov
lret
inc
mov
scas
int
adc
popf
aam
sub
rolb
sarl
adc
ds
mov
xchg
dec
test
add
cmpsl
jb
sbb
movsb
dec
enter
arpl
or
icebp
push
cmpsb
faddl
movsl
clc
inc
cmp
mov
fsubl
lret
dec
push
pop
mov
daa
lea
push
arpl
outsb
subl
mov
mov
pushf
cmpsl
idivl
nop
cld
adc
sub
aam
or
fs
jl
jbe
push
iret
test
add
rcrl
insb
xor
lods
lcall
ljmp
out
jge
pop
inc
enter
lahf
mov
out
lret
adc
jo
adc
stos
cmp
js
mov
sbb
xor
mov
out
popl
dec
or
or
lods
cmp
fcmovb
sti
ret
popa
rorb
in
add
cmpsb
or
fcomi
loope
bound
stos
sbb
imul
or
rolb
fistpl
cli
sub
fst
and
idivb
repz
sbb
push
clc
jnp
adc
insb
outsb
aas
in
push
iret
adc
xor
popf
imul
mov
add
mov
xlat
jb
jb
lret
in
stos
jl
push
pop
xchg
lret
cld
push
scas
outsb
sub
push
lret
das
jae
ret
or
mov
cltd
out
cmp
mov
mov
test
lock
repnz
fistpl
test
mov
lret
sub
push
dec
inc
sbb
xor
mov
xchg
pop
test
addl
pop
arpl
xchg
insl
cmp
mull
sbb
pusha
sub
mov
movsl
push
add
sub
jne
test
mov
lahf
hlt
mov
fstpt
cmc
cmc
movsl
jno
icebp
sub
out
mov
sub
arpl
ljmp
pushf
dec
sub
add
sub
or
lcall
or
inc
or
test
xor
mov
call
int
flds
ret
insb
push
lds
or
xchg
lahf
pushf
nop
mov
mov
fxch
test
into
test
scas
pop
cmp
push
xchg
lret
stc
daa
or
cltd
sbb
movsb
dec
andl
mov
mov
mov
shrd
jmp
frstor
dec
xchg
movsb
cmp
cmpsb
jg
jnp
push
adc
xor
test
lcall
or
dec
inc
inc
or
pushf
jbe
loope
data16
xchg
lret
jge
pop
inc
jp
test
cmp
jno
push
jl
es
lahf
stc
cmp
sub
sahf
push
orb
jae
mov
mov
arpl
fcmovu
add
sti
in
jnp
push
inc
cmpsb
sti
cltd
lret
cmp
repnz
dec
or
shll
mov
frstor
test
fwait
add
dec
shl
inc
mov
xchg
mov
adc
xchg
mov
cld
nop
inc
sahf
mov
subb
test
jecxz
xor
js
lds
push
dec
repz
jns
shll
cmp
inc
pop
dec
jnp
ret
insl
cmp
arpl
test
mov
cld
xchg
xorl
jge
addr16
sbb
pop
push
loopne
inc
inc
xor
popl
lods
lea
daa
push
outsb
inc
or
mov
lcall
clc
adcb
lret
out
fbstp
jmp
mov
aam
xchg
mov
jmp
sub
jns
inc
jnp
sub
cmpsb
jnp
push
shl
jmp
lock
lods
in
jle
jg
and
xor
mov
imul
mov
pop
lods
inc
mov
mov
out
xor
mov
jb
loope
add
loop
mov
jnp
push
pop
mov
ljmp
das
adc
sti
ds
lcall
xlat
mov
sbb
add
aaa
scas
aad
pusha
in
xchg
adc
and
arpl
pop
inc
push
fs
fidivrs
inc
push
adc
in
repnz
fstpt
xchg
mov
mov
pop
adc
pop
stos
pop
and
imul
dec
lret
or
mov
shl
cmp
hlt
cld
fistpl
and
push
cmc
pop
bound
push
pop
fmul
xchg
clc
pop
sbb
cs
xchg
test
or
push
sub
shll
mov
dec
js
xorb
out
ret
inc
jb
ret
imul
add
rorl
inc
filds
xchg
xor
es
testl
lret
adc
sub
mov
jnp
jns
pusha
out
fmuls
icebp
sbb
data16
cmp
mov
jg
xchg
push
or
clc
mov
mov
and
sub
add
pop
repz
cltd
shr
jbe
sahf
xchg
jmp
pop
inc
sbb
outsl
xor
sbb
testl
push
ret
int3
or
push
add
stc
jg
mov
lea
in
dec
cmp
roll
cmpsb
aad
scas
roll
fadds
inc
and
js
int3
icebp
or
pop
cmp
mov
test
out
inc
add
push
dec
add
sbb
cmp
pop
and
mov
cmp
or
imul
dec
fucomp
loop
cmp
cmp
mov
xor
sub
or
or
sub
cltd
std
mov
lods
lock
cmp
rcr
xchg
adcb
inc
or
sbbl
mov
add
sub
sbb
lcall
sub
dec
mov
mov
icebp
cmc
jge
jl
adc
dec
fnsave
jl
sahf
test
jo
add
cmp
and
sbb
nop
sbb
jns
jb
jmp
popa
imul
mov
inc
fcomps
test
jp
mov
push
in
lret
leave
cwtl
jmp
jbe
sub
shlb
and
add
push
push
xchg
fstps
and
mov
stos
push
cmp
xchg
iret
inc
add
roll
popa
cmp
xchg
pushf
hlt
mov
mov
lcall
xchg
or
mov
sbb
jmp
mov
xor
shl
xor
or
mov
mov
add
jmp
pop
cmc
imul
test
stc
fisttpll
outsb
adc
aaa
cli
adc
sub
jne
lods
loop
or
sbb
or
or
jno
stos
ss
push
scas
or
mov
add
ja
cmp
mov
leave
je
adc
cmp
push
adc
pusha
cli
fcomps
mov
mov
pop
pop
push
mov
jb
mov
jmp
adc
shrl
lahf
mov
or
enter
push
xor
xchg
pop
outsl
or
inc
sub
push
sub
stos
arpl
push
and
je
lock
enter
scas
fsts
adc
mov
pop
cmp
cmpb
lds
fdivs
mov
cmpb
mov
xor
insb
repz
adcl
fwait
cmp
jmp
adc
adc
xor
movsl
sahf
inc
leave
sbb
xchg
ja
dec
addb
repnz
leave
cmp
mov
mov
lods
bound
and
dec
mov
ss
mov
push
arpl
data16
inc
out
xchg
lea
loopne
lods
cli
sahf
mov
push
test
scas
sub
dec
cli
stos
out
adc
push
ficoml
in
pop
xor
pop
jne
sub
pop
scas
xchg
int3
data16
xchg
rcrb
std
repnz
nop
pop
out
cmp
add
inc
jl
lret
loope
push
cmovae
popa
andb
jns
in
sub
jns
cmp
test
call
notl
popa
mov
sub
stc
stc
mov
or
fs
fisubs
add
bound
ret
inc
arpl
ret
push
cmovb
pop
push
scas
xchg
or
cmpsl
mov
and
xlat
and
mov
xor
aam
ficoml
adc
test
push
jo
repnz
imul
lods
aam
daa
push
inc
out
repnz
repnz
test
xor
push
popf
adc
std
fisubrl
mov
jnp
jbe
inc
fsubl
jb
inc
jb
lods
aam
cltd
sti
les
inc
mov
mov
inc
aam
add
mov
inc
push
push
imul
ds
xor
add
lret
adc
outsb
mov
xchg
jg
jbe
loopne
fwait
ret
fisttps
sahf
mov
jbe
fcmovu
add
push
or
xchg
jbe
clc
lock
xor
ror
push
push
mov
mov
leave
jmp
adc
lahf
stc
call
cmp
mov
add
scas
jo
pop
push
cmp
sub
ret
jg
pop
xor
je
aas
lahf
mov
out
push
bound
out
mov
mov
adc
mov
out
jo
aaa
popa
or
lret
into
mov
inc
mov
test
lret
xor
ja
xchg
call
ret
jbe
in
push
inc
lret
lret
cltd
aaa
jno
xchg
push
xorb
xchg
xor
jb
jg
andb
cli
xor
xor
xor
lea
out
jbe
add
push
add
pop
sbb
push
pop
mov
aam
shll
enter
scas
faddl
test
jecxz
outsl
mov
or
nop
cli
stos
ss
pop
push
popa
mov
cli
test
test
dec
add
and
lahf
mull
popf
popf
mov
adc
pusha
xchg
gs
pop
jb
sti
andl
scas
adc
jnp
mov
in
and
shlb
ret
js
cmp
mov
adc
ret
rcr
inc
inc
imul
mov
lahf
test
mov
jle
mov
les
jnp
fidivrs
add
add
js
stos
inc
xchg
insb
shr
stc
push
sub
sub
icebp
add
loop
xchg
loope
sbb
jmp
add
mov
imul
jae
inc
adc
movsb
and
in
divb
testl
add
add
fs
xor
adc
sbb
rclb
adc
cli
adc
scas
cltd
or
pop
inc
dec
fsubrl
rcrl
or
or
scas
push
fwait
orl
dec
inc
pop
call
je
lcall
xlat
sub
sbb
das
push
je
scas
mov
jae
insb
mov
mov
inc
fcmove
inc
test
insl
cmpsl
aaa
jecxz
gs
in
fstps
mov
popf
jmp
add
icebp
fadds
inc
pop
sbb
nop
dec
ss
mov
add
lret
imulb
enter
fnstsw
inc
jnp
out
out
pop
cmp
push
das
or
pop
out
test
inc
and
dec
xchg
popf
inc
dec
rcll
push
int
scas
imul
push
loope
sti
leave
repnz
jns
add
lock
cmp
aas
dec
push
add
sarl
cmp
scas
pop
xchg
inc
lret
sahf
dec
sbb
pop
js
pop
jns
mov
fsubrp
cltd
push
push
push
insb
adc
sbb
push
jl
xchg
out
into
lret
push
dec
jae
aas
push
out
sub
in
mov
dec
sub
jmp
add
ret
xchg
ret
aam
fidivrs
leave
sub
lret
mov
das
or
rolb
test
inc
push
adc
mov
sub
rcll
xorb
sarb
movsl
pop
push
mov
sarb
imul
cmpb
and
dec
mov
jno
add
and
pop
testb
push
xor
imul
adc
out
dec
ljmp
cli
push
push
sarb
out
pop
scas
adc
mov
sub
mov
sub
rcr
pop
and
leave
inc
dec
inc
cmp
imull
add
push
add
and
mov
cli
cmovle
repz
xchg
fidivrl
dec
bnd
and
repnz
rcrl
rolb
pop
jae
sti
sbb
mov
pop
mov
pop
fwait
dec
adc
mov
add
dec
mov
jne
ret
fistpll
pop
push
pusha
popa
fwait
aaa
and
inc
aam
arpl
fadds
mov
cmpsl
inc
mov
subl
xchg
incb
fldl
clc
sbb
jns
fwait
mov
push
sub
hlt
xchg
add
ret
push
clc
xor
movsb
fsubrp
mov
push
bound
jae
xor
out
rcrb
adc
jb
das
cmp
into
insl
insl
xor
pushw
and
mov
xchg
xor
cli
cmpsl
ja
sbb
roll
loop
cmp
fwait
mov
sub
jo
rcl
out
mov
mov
loopne
movsl
divb
mov
es
push
mov
out
imul
in
cmp
adc
mov
cmpsb
xor
mov
mov
push
sbb
les
lds
cmpsb
xchg
dec
sub
add
jge
mov
mov
cmc
or
inc
xor
cmpb
shll
pop
ja
adc
push
repz
push
fdivl
inc
daa
sub
push
imul
sbbl
cmp
std
lahf
not
cld
inc
and
stc
mul
stos
jns
out
sub
in
stos
xchg
mov
xchg
insb
sbb
or
cmp
nop
test
out
push
ret
pusha
fisttps
push
repz
in
fs
movsb
test
bound
stos
xor
push
cmc
in
pop
outsb
pusha
iret
repz
sbb
or
xchg
cwtl
enter
in
cltd
mov
lods
lods
or
cmp
jmp
stos
orb
dec
aaa
inc
mov
or
jge
rcll
pushf
push
ss
pop
or
mov
imul
out
stc
das
inc
add
add
jo
shrl
shrd
shr
mov
mov
xor
shl
mov
jmp
test
out
outsl
cmpsl
dec
test
outsb
jno
mulb
aaa
cli
adc
and
mov
and
daa
imul
inc
stos
test
pop
sub
mov
pushf
inc
jo
adc
sub
cmc
mov
sbb
pop
push
mov
rcl
je
je
xchg
dec
fmuls
ds
sti
sbb
sbb
in
xchg
outsl
jne
test
mov
sbb
jle
loop
xor
jae
daa
hlt
jl
shl
mov
cmpsb
test
addb
cld
icebp
jmp
cmp
gs
xor
test
adc
ja
add
lea
sbb
pop
mul
aam
xchg
jnp
add
fptan
jg
xchg
xchg
mov
stc
inc
sbb
mov
dec
leave
xlat
or
fdivrs
mov
mov
addr16
lret
rol
cmp
jmp
in
cmc
arpl
and
pop
jbe
jmp
enter
ficomps
or
movsb
outsb
sbb
inc
lcall
dec
ret
sub
pop
rcr
jmp
cmp
jo
cmp
test
sqrtps
ret
clc
out
pop
add
mov
ret
pop
cmpsl
test
mov
neg
inc
sub
mov
xchg
mov
xchg
test
mov
inc
xor
stos
xchg
mov
dec
scas
and
mov
xor
test
jb
sets
jp
cmp
pop
daa
push
fbstp
push
mov
jmp
push
jb
rcr
add
add
xchg
iret
pop
push
daa
fcmovne
fdivrs
lea
icebp
adc
and
jle
mov
pusha
sub
cmp
es
cmp
mov
popa
lret
sbb
or
and
andb
ret
popf
adc
subl
std
push
je
and
add
cmp
sbb
mov
jmp
dec
daa
pop
and
xor
aad
cmp
push
stc
inc
leave
push
add
out
mov
push
inc
and
mov
into
xor
arpl
addr16
cmp
mov
subl
and
movb
pop
repnz
jb
fwait
sbb
or
js
pop
iret
mov
cmp
popf
xor
ret
mov
inc
jp
imulb
lret
dec
add
mov
outsl
popa
stc
jno
jns
xor
repz
sbb
bound
adc
or
loope
pop
xor
fwait
sub
xchg
pop
aas
add
lret
in
dec
push
sub
mov
jbe
jp
jnp
mov
clc
ret
sub
push
sub
fucom
jo
loopne
lahf
test
pop
cmp
push
push
lahf
xor
insb
mov
pop
in
and
lds
xor
fcmovb
rcr
cmp
fidivl
out
add
out
cmp
or
pop
or
push
cwtl
dec
inc
lea
fwait
repz
inc
std
icebp
jae
in
sub
stos
fs
adc
enter
scas
into
cmpsb
and
jp
jge
mov
lret
push
arpl
cmp
xor
fmul
pop
mov
adc
cmpsl
scas
push
sbb
xchg
stos
jp
pop
push
pop
cmp
bound
jmp
mov
dec
mov
inc
mov
xor
jecxz
mov
jp
insb
outsb
lret
pop
dec
fstpt
jp
fwait
cld
mov
dec
dec
sbb
inc
scas
push
mov
jae
jb
es
mov
mov
mov
pop
mov
int
sub
adc
push
and
in
push
lret
ds
push
lret
icebp
shlb
xchg
stos
outsb
sub
ret
inc
adc
imul
aaa
xchg
push
ret
add
in
int3
push
dec
mov
subb
xor
xor
mov
hlt
jne
in
dec
sbb
mov
sti
push
push
add
adc
adc
shrb
sub
mov
ret
xor
or
mov
shrd
add
jmp
push
fsubrl
dec
or
loopne
lds
dec
adc
aaa
cli
adc
and
and
shlb
xchg
adc
dec
lea
ja
iret
mov
orb
js
mov
sbb
push
movsl
cmp
cld
loopne
jnp
movsl
jp
loop
cmp
mov
popf
adc
mov
rcrl
lock
gs
inc
push
xchg
dec
pop
cmpsb
jp
clc
mov
pop
ds
in
jp
lcall
xchg
lret
mov
cmpsb
jnp
mov
dec
lds
cli
mov
jmp
das
pop
mov
sub
push
outsb
push
inc
inc
adc
loopne
or
cli
xchg
push
and
stc
jb
sub
shlb
repnz
fldl
jo
xor
ss
add
les
adc
lret
cltd
jecxz
shl
mov
andb
jno
out
push
cmp
in
sbb
adc
mov
hlt
out
pop
sarl
adc
jae
iret
test
mov
loope
cmpsb
jo
sbb
daa
push
imull
in
push
or
adc
push
adc
cld
jns
mov
cmp
fndisi(8087
cmc
test
xchg
add
out
xor
push
jecxz
inc
xlat
xor
enter
dec
pop
cmp
lcall
mov
ljmp
jl
add
sbb
mov
je
add
push
jmp
jno
daa
lock
ljmp
add
stc
repz
lods
scas
push
cmp
in
ja
lret
clc
fidivl
movsl
pop
xor
jle
mov
lret
pushf
mov
lock
test
pop
adc
loope
dec
test
sub
dec
and
cmp
xchg
inc
lret
cmp
push
into
xchg
subl
push
push
lret
out
out
call
leave
mov
jl
dec
test
push
int
cmpsb
add
scas
int3
dec
jno
in
jecxz
arpl
ficoml
in
jnp
enter
cmpsl
jbe
dec
test
outsl
imul
jb
cmp
lods
and
imul
mov
addr16
dec
dec
mov
pop
add
dec
loope
or
mov
adc
pushf
xchg
loop
das
loop
sub
aam
jmp
pop
shl
or
cmp
sti
or
pop
inc
and
add
xchg
cmp
push
mulb
outsl
jecxz
mov
rcr
pop
fdivr
pop
xor
mov
pop
call
push
ljmp
fisubrl
lret
xchg
sar
or
xor
fcomps
outsl
push
bound
jnp
push
push
mov
dec
or
fmuls
adc
pop
jg
or
roll
pop
fs
mov
mov
fldl
pop
pop
adc
xlat
pop
les
test
jp
bound
das
mov
jae
add
adc
mov
push
lcall
repnz
aaa
jp
fiadds
xor
jae
repnz
call
lea
fcomps
leave
add
lods
sub
sub
addr16
xchg
lret
es
pusha
testb
pop
rcr
mov
adc
lahf
jg
mov
jge
movsb
or
or
xchg
loopne
xlat
lret
mov
imul
cwtl
stos
call
ret
lock
mov
xor
enter
xchg
ljmp
add
and
push
pop
arpl
in
stos
lret
jno
mov
push
or
xchg
icebp
rclb
repnz
add
inc
gs
jge
imul
sub
insb
cmp
cltd
adc
xor
adc
mov
xor
sub
mov
je
pop
flds
test
adcl
shll
xlat
inc
mov
adc
mov
xchg
dec
lcall
mov
mov
mov
imul
ja
adc
sbb
jno
cs
jb
pop
movl
pop
pop
pop
push
and
pop
outsb
xchg
cmpb
iret
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
jmp
mov
or
mov
dec
lods
lds
push
adc
aaa
cli
adc
add
rorb
insb
xlat
sti
adc
je
pop
lds
ljmp
xchg
mov
fldl
push
jp
fbstp
pusha
push
xlat
mov
inc
rcrl
flds
fucomip
mov
dec
sbb
xchg
mov
push
sbb
cmp
es
adc
daa
test
pushf
lods
data16
adc
jg
mov
es
mov
jge
lcall
or
or
outsl
fwait
adc
movsl
or
add
mov
clc
push
xor
xor
ds
shlb
repnz
outsb
ret
push
loope
xchg
pop
cmc
lods
int3
into
cwtl
sbb
loope
add
loop
int
and
push
dec
cltd
pop
dec
xchg
cwtl
sbb
or
das
or
jg
pop
je
xlat
xchg
sti
sbb
push
jmp
push
rorl
dec
in
sbb
ja
out
lods
nop
mov
hlt
stc
add
or
icebp
sub
sbb
fstp
pusha
stos
les
ficoms
and
pop
cmpsl
scas
leave
xchg
inc
jecxz
inc
mov
ficompl
test
rorb
stos
inc
enter
cmp
test
in
pusha
mov
rcrl
add
outsl
mov
pop
mov
inc
negb
shlb
sub
les
cld
fs
sahf
arpl
bound
shll
and
xchg
jo
add
dec
pop
das
addr16
xchg
clc
jge
push
lcall
pushf
jb
daa
cli
mov
push
add
mov
adc
pop
push
ffreep
dec
leave
test
lods
mov
es
fldt
mov
sbb
fldz
into
sub
mov
cmpsb
jb
aaa
lods
clc
adcb
inc
inc
mov
adc
mov
mov
mov
notb
pop
sbb
add
mov
sub
cmpsl
push
fucom
das
es
jle
leave
es
int
cmp
mov
pop
lods
and
mov
lcall
daa
cmpl
in
cmp
pop
cltd
adc
cld
sbb
xor
mov
test
in
scas
stos
in
mov
mov
push
push
cld
dec
leave
cmc
iret
mov
cmp
jno
repz
adc
mov
and
inc
cli
cltd
or
dec
cmpsb
iret
fcomip
cmp
jne
mov
fs
cwtl
movsl
mov
push
sbb
mov
jp
adc
xchg
mov
shll
scas
mov
inc
jmp
cmp
xchg
mov
clc
cwtl
lcall
cli
push
lret
add
mov
dec
jmp
xchg
in
jge
mov
cmp
and
pop
push
cli
cmp
cmp
push
mov
jmp
movsl
add
sbb
push
movsl
xor
loopne
dec
adc
mov
inc
mov
xor
popf
jl
inc
jae
out
stc
cwtl
inc
and
push
into
xor
setae
repnz
imulb
in
filds
cli
cli
xchg
jmp
pop
ret
je
rorb
stc
arpl
into
add
adc
pushf
imul
mov
ss
xor
mov
ds
jo
lea
mov
test
mov
and
add
cld
shl
inc
rclb
aam
add
lock
imul
mov
clc
push
cmp
xchg
aas
shll
xor
mov
pavgb
xor
xchg
dec
pop
repz
sbb
and
popl
dec
mov
inc
lods
adc
aam
je
inc
aam
imul
jae
out
lea
mov
xlat
cmp
lods
repz
dec
or
shll
mull
xor
dec
repz
jns
mov
cmp
add
stc
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jmp
jmp
adc
lock
jge
clc
xchg
pop
jnp
cmp
adc
cli
adc
ds
jnp
inc
js
jp
mov
loopne
xchg
mov
outsb
sbb
enter
mov
call
push
mov
jecxz
mov
inc
dec
cltd
aas
test
dec
shlb
lods
lods
mov
sub
hlt
push
pop
push
mov
jb
push
add
pop
or
dec
out
popf
sbb
or
jle
jecxz
sbb
xor
cmp
or
or
lret
or
iret
push
or
repnz
push
cwtl
mov
rclb
testl
jmp
jns
xchg
std
inc
mov
jnp
push
adc
sbb
push
rcrb
mov
iret
sub
lea
in
mov
aam
movsl
mov
push
pop
stc
notl
xchg
in
cmpsb
cmp
arpl
popa
gs
cmp
addr16
js
repz
mov
and
xlat
jl
pop
out
rcll
rcll
std
pop
mov
rcrl
pop
clc
mov
pop
out
dec
cmp
or
sbb
lret
or
adc
xchg
jne
cli
push
xor
sahf
jecxz
repnz
iret
mov
pusha
mov
in
mov
xchg
ret
imul
rclb
loopne
call
dec
and
jp
aam
mov
ret
sti
and
ss
ljmp
or
cmpsl
test
lcall
push
cld
lds
dec
adc
dec
mov
aas
jae
and
inc
dec
cli
jno
das
iret
cld
lfs
fiadds
cmc
add
test
addl
push
xor
dec
pop
mov
scas
lods
rcl
add
push
pop
fwait
and
and
int3
fsubr
popf
movsb
lret
int
sub
aad
jae
push
stc
ss
in
pop
pop
jnp
aaa
push
push
and
mov
int3
sarb
xchg
inc
emms
pop
push
ss
sti
and
sbb
push
or
js
fiadds
dec
jns
sub
lcall
add
or
xchg
add
scas
pop
xchg
fnstenv
jno
and
mov
negl
push
add
aaa
mov
jo
fiadds
lret
adc
testb
cmc
int
das
add
loope
and
loopne
sahf
int
jnp
mov
push
add
push
shrb
dec
jecxz
out
das
dec
pop
mov
pop
and
pop
mov
sbb
fistpl
mov
leave
mov
dec
dec
roll
lret
imul
dec
xchg
ds
push
loopne
cmp
inc
aam
std
xchg
ds
push
fimull
xor
out
sub
inc
testb
stos
or
sbb
fldenv
rcl
cmp
sub
dec
xchg
jp
int
lcall
into
leave
into
jg
adc
dec
pop
dec
adc
dec
loopne
mov
mov
cli
ljmp
repnz
into
mov
mov
daa
jge
adc
xchg
cmp
or
cmp
cmp
das
xor
fdivl
sbb
popa
nop
dec
rcrb
rcll
iret
adc
insl
ja
mov
adc
mov
xchg
pop
dec
and
mov
scas
sti
add
lret
adc
stc
das
and
adc
adc
cwtl
push
cld
mov
scas
mov
cmp
cmp
sub
xor
lds
fisttps
xchg
rclb
pop
mov
add
fisttps
add
lahf
jl
call
sub
sti
out
xorb
insb
inc
cmpsb
in
test
mov
popf
clc
cmp
cmp
pop
lahf
mov
push
arpl
cmpsl
stos
jg
ret
cld
aad
ss
icebp
cmpsl
loopne
sbb
sbb
jp
mov
add
mov
test
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
jmp
inc
in
push
test
and
lods
pop
cmp
jnp
std
cmp
adc
cli
adc
push
dec
aaa
std
outsb
fmul
stc
fcoml
shlb
lea
cmpb
and
xchg
xchg
jmp
cwtl
cmp
and
repnz
fs
shll
inc
ljmp
stos
cmp
lods
pusha
jbe
cmpsl
xor
mov
cmc
mov
xlat
mov
jo
dec
cmp
sbb
mov
xchg
mov
bound
mov
std
dec
movsl
lldt
in
aam
xchg
sbb
xchg
cld
sub
ret
jecxz,pt
xor
fstps
iret
mov
pop
data16
push
stc
sahf
pop
push
pop
or
and
cltd
div
cwtl
push
subb
scas
pop
daa
mov
js
stos
daa
dec
push
ds
xchg
push
cld
sbb
idivb
or
and
shll
mov
out
stc
repnz
shll
pushf
xor
rcrl
sub
ret
stos
mov
jle
jns
sbb
adcb
decl
addr16
in
dec
mov
pop
insb
cmp
inc
jp
leave
mov
jge
pushf
xor
jmp
dec
xchg
and
push
jnp
jl
es
lea
idivl
mov
lods
xchg
pop
pop
mov
jmp
jns
cltd
rorl
ror
enter
lret
push
vpackuswb
adc
popf
or
and
sub
mov
mov
scas
psubusb
adc
lcall
dec
lods
in
add
push
call
leave
ljmp
fbld
roll
mov
xor
jecxz
sbb
lods
push
inc
sub
fmull
mov
push
test
jno
xlat
adc
sbb
dec
dec
add
pop
cltd
sub
in
mov
es
call
push
cmp
fsubr
ljmp
orb
sbb
repnz
leave
jo
mov
and
fadds
push
jbe
mov
add
jbe
enter
lods
cltd
inc
je
push
sbb
adc
fs
and
inc
pop
les
jecxz
lea
sbb
sti
dec
ficoml
cmp
fimull
mov
pushf
iret
mov
data16
outsb
mov
hlt
popa
clc
movsl
lcall
mov
inc
loop
cmp
push
repnz
test
mov
adc
repz
lods
aas
cltd
xor
mov
add
fnsave
jns
movsb
cmpsl
jbe
pop
mov
and
inc
or
rcrb
sbb
mov
jae,pn
scas
mov
cmpb
leave
jp
pop
out
lret
push
jb
push
sbb
fisubrs
aaa
in
shrb
gs
sbb
gs
andl
ja
pop
das
nop
mov
lret
adc
pop
push
dec
push
inc
push
sub
ret
adc
dec
push
insb
xchg
aaa
and
cld
sbb
dec
adc
loope
es
pop
or
and
lods
cmp
out
nop
mov
jl
mov
fisubrl
ljmp
dec
int
movsl
fstpt
rol
icebp
in
insb
fadd
jbe
push
mov
lcall
out
aad
add
decl
jns
cld
dec
std
les
incl
int3
cmpsb
in
js
or
sbb
and
call
leave
inc
loop
test
push
ret
push
orl
push
cli
in
xchg
pop
push
jne
pop
mov
test
push
fsts
cld
mov
jno
adc
sub
sub
adc
sub
call
dec
cmp
xor
add
xor
sbb
int
xchg
stos
lret
aas
push
inc
add
ja
sub
rorb
mov
adc
push
sub
rcrl
mov
sub
sub
or
sub
inc
add
jle
adc
or
jp
pop
leave
mov
lods
sti
mov
mov
jp
add
adc
mov
and
out
js
mov
sub
adc
aaa
cli
adc
add
insl
sti
decl
cmp
jns
addr16
mov
mov
dec
sbb
shrl
outsl
repz
mov
sbb
roll
xor
push
pop
and
push
cmpsb
insb
into
mov
ret
sahf
sbbb
les
outsb
sub
mov
jge
fnstenv
mov
xor
stc
pop
leave
iret
fisubrl
inc
lock
sti
or
adc
push
repz
popa
aaa
lret
mov
lahf
dec
xlat
and
mov
jbe
nop
mov
aad
mov
out
lock
int3
add
cwtl
cltd
push
arpl
shlb
cmp
jb
cmc
inc
aam
adc
test
inc
sbb
adc
jne
test
icebp
inc
int3
in
cwtl
inc
push
jns
cmp
inc
inc
insl
fsts
shll
test
adc
or
ss
cmc
mov
aas
aas
jo
lods
sub
dec
or
es
aaa
cltd
mov
ljmp
xlat
add
push
mov
imul
xor
push
in
aad
hlt
jmp
ja
push
lods
out
jle,pn
ret
cltd
sub
adc
mov
test
and
aad
pop
push
xchg
pop
punpcklwd
jae
jecxz
lods
add
sbb
and
mov
rolb
cld
daa
fadd
test
push
add
inc
test
pop
ret
out
push
mov
or
popa
xor
aas
or
xchg
addl
adc
xor
sub
xorb
push
das
push
iret
mov
and
dec
mov
call
test
and
pop
mov
adc
xor
nop
cmp
pop
sbb
shrb
or
dec
mov
jge
lahf
int3
addl
jae
fisttpl
repz
xadd
pop
fwait
pop
or
sub
and
dec
test
dec
mov
mov
inc
mov
sub
cmpsb
inc
cwtl
pop
add
lock
aaa
push
dec
inc
pop
push
adc
out
sti
into
add
out
ss
mov
mov
jle
in
cmc
je
push
cmp
cmp
push
push
pop
mov
push
fldcw
repz
dec
rorb
scas
mov
push
xor
sub
addb
into
add
dec
sub
in
adc
test
and
fwait
jmp
mov
mov
shlb
rcrl
cmp
sbb
repnz
nop
fstpl
pop
enter
jmp
add
cwtl
std
cmpsb
gs
and
jae
popf
orb
notb
mov
sub
dec
sti
ret
popf
call
xor
sbb
xor
test
inc
adc
add
lock
adc
add
repz
adc
jno
jbe
clc
insl
dec
test
loope
sbb
pop
cld
popa
dec
adc
fidivrs
mov
xor
pop
dec
push
aad
mov
mov
arpl
mov
or
mov
pop
shll
repnz
and
ret
sbb
sub
mov
jb
xchg
lret
push
sbb
ret
sahf
out
out
insl
sbb
out
call
xchg
enter
enter
xor
divb
push
inc
icebp
or
ljmp
inc
and
lcall
mov
jae
insb
icebp
mov
into
stos
aad
roll
jmp
cmp
mov
imul
popf
mov
xor
lret
and
aas
popa
inc
push
mov
mov
jmp
and
jno
ljmp
mov
les
sub
movl
fstl
inc
or
iret
jae
cmp
icebp
dec
lret
sbb
cmp
mov
sub
sub
cmp
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
jmp
mov
and
add
push
push
xchg
outsl
sbb
adc
cli
adc
popa
mov
cltd
sbb
outsb
push
insl
std
cmp
icebp
sub
and
inc
or
mov
int
add
jge
int3
std
repz
mov
fsubrs
dec
jge
lret
mov
int
cmp
cmp
mov
add
push
pop
jns
jl
cmp
mov
lcall
movsl
inc
into
pop
push
mov
xchg
pop
js
jmp
lcall
adc
out
pop
mov
inc
mov
adc
inc
dec
adc
ss
jle
mull
leave
test
rcrl
mov
mov
ffree
hlt
ja
cvtdq2ps
jg
cmp
inc
notb
lock
pop
pop
inc
sub
div
es
mul
jb
mov
pop
mov
jbe
sub
adcl
test
adc
ret
ds
xchg
push
xchg
inc
movsl
inc
xchg
out
jmp
push
or
shl
push
pop
adcl
jp
and
xchg
stc
or
inc
shlb
push
dec
aad
mov
cld
insb
inc
and
lods
push
mov
push
iret
and
aaa
imul
mov
fcompl
cmpsb
mov
lods
push
xchg
jb
imul
ja
cmc
jge
pop
add
cmp
push
fdiv
outsl
cmp
mov
mov
enter
sbb
push
cli
imul
sbb
lock
cltd
repz
sbb
jne
and
out
sbb
insb
icebp
jg
xor
jo
xchg
aad
xor
outsl
push
cmp
inc
pop
stos
idivb
ja
pop
nop
mov
or
icebp
punpckldq
xchg
shll
mov
jmp
push
in
push
iret
aas
imul
or
mov
gs
push
and
iret
insl
js
push
ficompl
pop
sub
js
jg
shl
movsl
cmc
loop
es
pop
cli
or
mov
call
js
cmovs
pusha
fs
xchg
xchg
fldcw
mov
mov
sbb
or
int
add
xchg
aas
decl
cld
mov
shrl
repz
sub
mov
mov
push
mov
push
mov
mov
and
lahf
mov
and
mov
jns
sahf
mov
cmp
push
jns
je
add
ja
or
pop
mov
aas
in
and
fsubl
sub
and
nop
inc
and
sti
cmp
nop
jecxz
out
mov
js
cmp
add
push
jg
or
cmpb
out
push
out
filds
jg
movsb
or
lods
jmp
movsl
add
scas
imul
or
js
test
dec
lods
jmp
enter
mov
fsubr
xchg
pop
jne
xchg
xchg
clc
jbe
sub
cmp
movsl
mov
scas
or
pop
dec
mov
fnstcw
in
pop
inc
jmp
cmc
fnstcw
cwtl
jne
and
adc
pop
lahf
cmp
das
repz
pusha
lcall
inc
out
icebp
xchg
fcomps
xchg
jg
fdivl
fisttps
call
ret
in
clc
xor
fldl
and
shll
out
xchg
push
and
stos
adc
mov
movsb
in
mov
mov
xchg
fmull
pop
mov
pop
cmp
dec
push
add
push
dec
stos
sub
xor
shll
mov
jnp
fwait
pushf
and
fnstsw
push
jo
or
leave
jns
jnp
lods
lods
push
jecxz
stos
movsl
adc
aaa
and
add
rolb
and
mov
pushf
push
pop
xchg
and
mov
or
ljmp
cmp
pop
jmp
call
pop
lret
jno
or
cmpsl
adc
popa
mov
pop
push
addb
sbb
lea
dec
cwtl
xchg
popl
adc
nop
into
push
fidivrl
call
fistps
lock
stos
cmp
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
imul
or
jmp
push
enter
push
aam
gs
inc
mov
xchg
mov
adc
xchg
cli
adc
jnp
cld
adc
stos
ret
addr16
mov
add
shll
mov
mov
in
loop
adc
fcomps
mov
shl
mov
leave
mov
stos
lds
imul
lods
pop
xor
out
jbe
test
rolb
and
shll
daa
rclb
sub
push
imul
pushf
xchg
adc
test
out
lret
xor
mov
mov
fcomps
std
sub
mov
lds
les
and
ja
lods
mov
cmc
xor
loopne
sub
lahf
in
movsl
cmp
mov
aam
ljmp
jne
std
or
sbb
adc
jno
lahf
repz
pop
push
lods
adc
add
pusha
inc
cmpsl
fidivrl
pushl
push
aaa
lods
cmp
imul
popa
mov
ja
fucomi
ret
pusha
and
mov
sub
pop
popa
xchg
lret
outsl
mov
int3
iret
popa
xlat
jg
xor
pop
icebp
xchg
ss
push
mov
or
outsb
jmp
sub
mov
gs
cmp
and
mov
out
mov
fwait
adc
mov
adc
push
cmp
sbb
mov
outsb
pop
repz
add
pop
mov
mov
add
jge
ret
bound
push
lods
std
sbb
lahf
xor
aad
inc
lds
shl
test
xchg
lret
mov
jp
loope
add
or
inc
mov
mov
lret
dec
add
fisttpl
das
mov
mov
sub
insl
aam
pop
adc
ret
bound
sbb
mov
dec
shrl
popf
or
out
sahf
mov
stc
push
mov
jb
push
cld
ljmp
jle
xchg
sub
push
and
popl
jne
fidivs
xchg
cmp
ret
jns
fs
inc
fucomp
insl
mov
test
jp
idiv
gs
dec
xchg
sub
cmpl
int
repnz
out
iret
leave
and
mov
pop
insl
faddl
jae
or
imul
push
rcl
push
pop
or
xchg
stc
pop
dec
addr16
test
adc
jne
mov
pop
iret
lahf
dec
pop
fstpl
add
cmp
pop
into
nop
aad
aas
ljmp
testl
loop
xlat
pop
popf
push
cmp
sbb
jno
aas
jno
data16
mov
out
das
pop
jmp
sbbl
addr16
mov
out
sub
int
and
call
cmp
out
and
in
lods
ficompl
test
fdivl
adc
mov
pop
int
hlt
idivl
xchg
rorl
bnd
aam
pop
sub
xchg
call
jecxz
jnp
repz
jnp
popa
rorl
jns
xor
test
xchg
dec
add
test
xchg
shlb
daa
fidivrs
xchg
gs
jecxz
out
mov
cmp
or
push
mov
pop
push
sbb
inc
mov
repnz
in
stc
aam
shlb
ja
jp
mov
filds
cmp
ret
xor
shrb
arpl
mov
mov
push
dec
xor
mov
mov
and
rolb
in
cld
cs
push
pop
sbb
loop
and
mov
mov
jno
push
xchg
notl
aad
ljmp
out
popa
bound
add
push
inc
push
mov
push
cmp
jmp
ret
fildl
pop
js
push
xor
mov
test
cmp
in
shrl
push
add
adc
inc
clc
sbb
pop
fcomi
xchg
scas
add
and
jmp
divb
in
ds
xor
ret
push
int3
inc
fstpt
or
adc
or
dec
jne
jbe
pushl
mov
leave
cmp
sbb
out
jmp
dec
cmp
inc
pop
scas
sbb
data16
sti
sti
mov
sbbl
push
popa
xor
add
sub
jnp
dec
aad
jbe
jae
ljmp
lar
push
xlat
xchg
movsb
fisubl
dec
mov
pushf
div
repnz
cwtl
mov
test
sarl
hlt
movsl
push
popf
xchg
in
adcb
add
cld
mov
frstor
xlat
fmuls
mov
mov
jne
and
adc
fdivrl
inc
or
dec
cmp
scas
xor
xchg
pop
lds
push
mov
add
or
xchg
xchg
inc
dec
call
arpl
inc
lods
xchg
cmp
push
sub
inc
jbe
cmp
mov
bnd
adc
call
divb
or
es
xchg
pop
push
gs
cmp
jb
out
add
fisttpll
pop
jge
pop
sbb
outsl
rolb
push
cmpl
fwait
pop
daa
pop
xor
les
xchg
sbb
leave
push
dec
xchg
insb
shl
mov
jo
mov
ljmp
test
mov
in
into
pop
push
jg
fsts
and
popf
cli
mov
push
pop
insl
dec
lret
or
jbe
ds
hlt
xchg
and
mov
mov
mov
std
shrb
adc
jecxz
movsl
sti
jecxz
inc
mov
xor
and
loope
sbb
sahf
sbb
ret
ds
ss
mov
mov
push
rcrl
std
inc
ja
cltd
and
inc
in
std
mov
ret
mov
sti
sub
add
lods
push
add
xor
adc
sub
scas
xor
jnp
test
jp
jle
fcompl
out
insb
cwtl
cmp
push
add
pop
push
cmp
sbb
stos
push
jmp
mov
fsubrl
adc
jb
sti
mov
push
stos
in
xchg
inc
jle
inc
pop
ret
add
xchg
and
stos
mov
push
and
xor
cwtl
jg
je
sbb
add
cmp
lret
outsb
out
mov
pusha
nop
sbb
mov
cmp
mov
out
in
pushf
arpl
in
mov
hlt
lret
xor
adc
out
add
add
jecxz
insb
jl
mov
lea
lahf
adc
push
stos
push
jp
flds
out
add
pop
outsl
cmp
adc
popa
cmp
scas
push
cmp
aaa
xchg
push
cmpsb
inc
cwtl
push
or
dec
dec
movsb
inc
jno
loope
mov
aad
sbb
aaa
aad
or
mov
int
cltd
xor
cmpb
and
in
lahf
push
std
dec
test
rorb
push
out
movsl
push
insl
test
aaa
shl
sbb
push
adc
mov
xchg
xor
test
xchg
int
and
mov
fistps
jg
push
and
stos
enter
shlb
mov
sbb
mov
push
inc
jp
iret
hlt
adc
mov
push
push
add
fsubrl
out
push
adc
jp
adc
jno
or
sahf
leave
into
pusha
in
inc
dec
nop
pop
jnp
fistpll
mov
xor
ss
shrl
mov
loopne
arpl
stos
lcall
js
cmp
and
rclb
psrld
dec
js
mov
xorb
mov
loop
jb
cli
mov
and
add
mov
sub
mov
and
mov
jmp
movl
movl
movl
movl
jmp
sbb
sahf
mov
pop
das
int
add
test
push
adc
xchg
cli
adc
test
out
xlat
cmp
out
test
hlt
jge
mov
ret
arpl
push
xchg
loopne
prefetcht2
addr16
lret
push
mov
xor
rcr
into
dec
shll
xchg
movsb
pop
xchg
jns
sub
movsb
std
add
sub
pop
dec
arpl
movsb
mov
push
sbb
scas
lret
in
aam
iret
ss
cmp
repz
out
xor
add
cwtl
or
enter
cmp
imul
lods
das
mov
aaa
test
test
pushf
inc
es
mov
nop
adc
aad
testb
mov
sub
inc
xchg
lock
mov
dec
jmp
pop
repz
mov
lods
and
addr16
fdivs
ljmp
mov
rcl
loopne
pop
and
push
int3
push
dec
mov
dec
fsubrl
shr
xchg
in
ljmp
movsb
in
sub
xchg
shll
je
xchg
dec
outsl
rorl
cmc
ficoms
jbe
xchg
sahf
cmp
push
stc
cli
and
lret
add
cmp
jo
decb
inc
rcrb
hlt
fimuls
lcall
stos
lods
mov
jo
pop
jg
adc
loopne
xchg
repz
ret
xor
xchg
add
jne
xorl
mov
push
inc
fbstp
and
dec
call
out
mov
lret
jne
jno
outsl
inc
fimull
mov
notl
into
inc
lcall
xor
add
loope
fisubrs
push
push
in
scas
inc
xor
subl
pop
sub
arpl
mov
bswap
movsl
or
stos
scas
dec
adc
and
add
andb
aas
jmp
mov
lahf
shrb
loop
mov
mov
push
mov
jp
test
jmp
xor
and
push
pop
ds
mov
mov
sbb
pop
outsl
mov
add
jle
jl
pop
mov
mov
jo
push
icebp
sbb
icebp
hlt
pop
movsb
xchg
mov
out
mov
lods
inc
push
and
xlat
test
cmp
jecxz
scas
push
sbb
shll
decl
pop
fwait
xor
bound
sbb
pushf
ja
popa
mov
mov
jle
jge
and
mov
dec
sbb
iret
jns
jo
jl
sahf
xor
mov
dec
sti
cmp
sbb
in
scas
lods
imul
arpl
fldcw
push
mov
mov
sbb
mov
jg
inc
out
cmp
lods
aad
sub
mov
imul
cmp
imul
sub
lret
jb
cltd
sub
fs
inc
inc
jbe
add
icebp
cli
int3
movsl
iret
mov
xor
fistps
int3
dec
cmp
add
cmp
mov
in
lcall
jne
pop
cld
pop
push
lea
iret
and
or
addl
mov
pusha
loope
push
notb
fs
in
push
in
mov
das
mov
cwtl
ficoml
nopl
xchg
fs
push
sbb
sbb
jbe
out
or
sbb
jecxz
pop
lcall
insw
aas
rcrl
sbb
sub
bound
xchg
sbb
int
stc
gs
das
dec
rorb
sub
pop
jne
pusha
stc
pop
sub
mov
test
lock
mov
jecxz
push
cmp
in
push
dec
dec
push
mov
push
pop
int
dec
loopne
jno
dec
push
pusha
incl
jp
push
jbe
mov
insb
xor
push
lea
leave
movl
movl
movl
jmp
cmc
push
cmpsb
decl
mov
icebp
cmp
jnp
inc
xchg
jg
clc
adc
jb
out
and
pop
in
cs
test
ja
sbb
push
jle
ret
rcrl
jb
shl
jg
movsb
xchg
repnz
stc
lret
addr16
ja
sub
scas
aam
in
lock
je
mov
out
stos
mov
jmp
lea
loope
fdiv
or
sbb
out
popf
icebp
pop
repnz
dec
add
out
lcall
imul
clc
insl
add
mov
push
ds
lods
push
mov
cmp
inc
das
xor
or
mov
add
fsubl
or
std
or
sbb
sub
xor
dec
in
jge
xlat
and
sub
jmp
pushf
fstpt
xchg
mov
push
rol
jno
out
outsl
icebp
mov
inc
jle
mov
addb
xchg
adc
inc
movsl
adc
sbb
add
xor
out
add
fwait
xchg
xor
xchg
lahf
push
ret
pop
icebp
xchg
call
jl
js
xchg
adc
dec
add
addr16
daa
nop
test
push
int3
je
or
je
push
int
push
jge
pop
es
cltd
mov
leave
sbb
xchg
jl
dec
insl
shrl
or
rep
mov
out
cmp
push
inc
or
and
and
jle
adc
cs
imull
es
adc
in
xchg
inc
cwtl
ds
jo
test
pop
lret
dec
xchg
add
mov
jae
int
dec
pop
lahf
test
sbb
jecxz
dec
add
add
fimuls
xor
mov
je
pop
ret
mov
push
pop
insl
jg
add
mov
fs
sbb
or
pushf
adc
cli
lds
insb
out
mov
and
push
mov
push
fdiv
mov
sbb
mov
fsincos
subl
aam
iret
mov
cld
es
or
dec
iret
lea
hlt
mov
pop
fisttpll
pop
out
fbld
xchg
jns
shrl
push
inc
cli
cmp
sub
jmp
jne
sub
pop
xchg
xchg
add
jmp
mov
cmc
mov
mov
jb
add
dec
jne
cmpsb
mov
inc
cmp
insb
idivb
push
push
pop
imul
or
sub
jmp
add
xor
scas
sbbl
rcrl
cmp
loop
push
mov
insb
testb
loopne
ss
add
mov
or
cmp
mov
fstpl
or
mov
jnp
push
lahf
pop
movsl
mov
xor
push
xchg
popf
xor
mov
pop
dec
scas
jno
inc
dec
and
pop
adc
add
sbb
pushf
and
scas
icebp
or
push
bnd
test
loop
paddusw
and
push
scas
sub
pop
aaa
loopne
push
pop
dec
jp
sti
dec
dec
push
out
mov
fwait
jne,pt
int3
aas
iret
mul
test
sub
pop
lret
push
cmp
mov
fildll
dec
push
add
lods
xor
fs
xor
aam
insb
pop
scas
out
scas
pop
add
xor
pop
aad
and
fs
sub
sub
cmp
push
aas
and
insb
cmp
cwtl
add
insb
adc
out
sbb
dec
xor
sahf
or
cmp
aaa
pop
mov
or
aam
stos
aaa
inc
arpl
dec
push
sub
aad
sbb
xchg
nop
adc
jno
mov
xchg
push
insb
adc
ror
jg
rol
mov
mov
add
sti
js
inc
pusha
insl
cmpsl
xchg
iret
ret
leave
out
outsb
add
xor
mov
sub
pushf
out
dec
stos
jg
out
jmp
push
movl
mov
mov
add
or
imul
mov
xor
mov
sub
mov
add
mov
imul
mov
add
add
and
mov
mov
xor
sub
mov
mov
mov
mov
jmp
aam
push
dec
push
or
inc
notb
adc
test
clc
adc
mov
push
in
ss
rorl
fwait
sbb
and
test
fwait
loopne
xchg
push
mov
add
loope
ljmp
sub
std
mov
adc
pop
test
sub
rol
and
dec
sub
mov
xor
xorl
adc
mov
pop
push
ja
sub
or
pop
mov
les
hlt
sarl
mov
les
jle
pop
in
out
cmp
push
adc
sbb
sub
cld
lahf
das
addr16
lret
sub
jl
test
out
fisubrl
shrl
lods
xlat
or
xor
int
or
mov
rclb
sar
fcoms
sub
adc
hlt
cs
mov
repnz
push
sub
data16
mov
scas
cs
jae
and
outsb
sub
jp
xchg
jb
roll
adc
jmp
add
flds
loope
je
xchg
jecxz
push
into
jmp
mov
add
push
das
pop
sub
cmc
push
push
and
push
ja
call
lcall
in
insb
call
addr16
enter
xchg
mov
sbb
mov
cltd
sbb
cltd
test
inc
bound
adcl
dec
push
daa
xor
lea
jecxz
lret
out
popl
leave
push
pushf
add
mov
xor
in
mov
shll
pusha
ja
inc
sbb
pop
fwait
in
hlt
jecxz
xor
and
cmp
loope
cs
add
jns
dec
xor
bound
mov
imul
inc
je
push
mov
xchg
aam
scas
and
and
adc
ret
shl
mov
mov
stos
incl
inc
xlat
sub
lods
sub
stc
bound
cld
mov
je
test
fisubrl
xchg
imull
adc
and
lahf
js
out
or
or
cld
jno
xchg
pusha
test
xor
cmp
mov
es
add
jl
push
pop
push
lock
or
dec
pop
dec
jecxz
mov
xorl
inc
fs
xor
adc
icebp
sbb
mov
leave
add
cld
dec
push
pop
sub
sti
cmpsb
pusha
mov
cmp
aad
mov
and
pushf
sub
insb
jne
xchg
addb
call
mov
aaa
sti
xchg
push
rcr
cmp
mov
js
sahf
dec
cmp
out
mov
push
fmull
ja
add
xchg
popl
cli
std
sahf
int3
push
sub
data16
sub
imul
mov
icebp
mov
les
push
je
loop
push
sbb
dec
dec
pop
and
call
mov
and
jnp
mov
imul
mov
nop
scas
and
mov
into
mov
cmpb
aam
cmp
fs
sbbb
dec
cld
cwtl
xor
xchg
out
cmc
sub
xchg
sub
dec
je
xlat
inc
fdivrs
or
hlt
fwait
xor
jae
cli
xchg
sub
lea
xchg
xchg
into
adc
and
cmpsb
push
fst
pop
mov
push
aas
mov
lret
outsl
inc
repz
call
cs
xchg
rcll
dec
lods
fs
dec
call
cld
aaa
mov
dec
jae
daa
mov
mov
ljmp
out
lret
pop
js
sub
fnstenv
ss
enter
mov
cmp
popa
inc
fwait
mov
inc
pusha
add
pop
lahf
xchg
in
mov
inc
out
mov
movl
or
sti
pushf
sbb
jnp
jge
xor
imul
mov
sub
jmp
xor
in
mov
leave
jbe
xchg
ljmp
adc
mov
ficoml
bound
mov
xchg
or
pusha
sbb
ret
rcll
pop
cmpsl
es
leave
outsl
jno
lods
pop
mov
or
mov
mov
dec
inc
jnp
lods
jo
jge
jecxz
or
cmp
rorl
lahf
cmp
es
and
lret
negb
iret
xchg
mov
sub
ret
mov
jae
pop
into
leave
ret
adc
cmp
xchg
loopne
loopne
push
sbb
ret
jae
cli
and
insb
cwtl
icebp
pop
jo
loopne
scas
out
movsb
divb
and
cwtl
aas
jbe
test
xchg
mov
test
mov
xorl
jnp
cmc
push
out
add
xchg
or
mov
stos
rcrl
fsts
xchg
enter
jp
jmp
mov
outsl
int3
cltd
ret
jnp
mov
and
push
mov
notl
mov
sub
xchg
xchg
inc
push
xor
mov
adcb
aas
inc
loope
sub
mov
aam
inc
jne
fadd
or
lret
stos
push
je
add
adc
iret
mov
out
push
sbb
pop
test
stos
cltd
addr16
inc
cmp
aas
cmpsb
fists
cmp
mov
cwtl
lcall
dec
jns
in
pop
sub
rcrb
pop
ljmp
jae
jecxz
cli
and
lods
pop
stos
lahf
mov
or
data16
mov
dec
int
stc
add
or
enter
mov
stos
and
xchg
repz
push
pop
sbbb
dec
addr16
out
cld
jmp
jl
mov
xor
sub
xchg
or
out
dec
pop
xchg
or
cmc
xchg
mov
jae
cmp
popf
daa
add
insb
fwait
and
pop
mov
jns
js
outsb
aam
mov
aad
push
pop
mov
ja
shl
int3
in
cmp
imul
lcall
xor
mov
mov
xchg
aaa
mov
fadds
cli
dec
adc
imul
ret
dec
test
in
mov
daa
sub
cmp
lret
xor
push
sbb
sti
jmp
lahf
sarl
mov
rclb
push
mul
rcrb
mov
icebp
cltd
test
sahf
addl
in
or
int3
and
pop
mov
push
xchg
out
stc
xchg
and
push
popa
add
fisubl
sahf
mov
dec
leave
and
and
fnsave
sarb
and
fnsave
adc
add
test
loopne
enter
cld
fisubrs
and
rcrb
es
push
imul
push
cmp
mov
cmpb
inc
fsts
cmp
insb
inc
mov
or
push
stos
jmp
ret
aam
inc
cli
jnp
fnstcw
jnp
les
in
mov
out
sahf
mov
mov
sub
pop
jg
bound
leave
loope
adc
jp
push
fs
inc
jb
push
dec
cs
xchg
mov
arpl
push
rep
xor
aad
movsb
aad
xchg
push
stos
daa
xor
rclb
jae
mov
int
cmp
jb
das
aaa
push
jbe
loop
pmullw
aad
and
lock
jbe
pop
in
cli
pop
mov
xor
out
mov
testb
mov
rolb
mov
int
push
insl
add
inc
inc
xor
lcall
jne
xchg
scas
cmp
push
inc
sbb
cmp
xchg
sub
inc
enter
mov
cltd
in
adc
jo
and
mov
xor
imul
sti
out
cmpsl
inc
out
xchg
mov
aaa
mov
cmp
mov
adc
add
decl
cmp
incl
add
add
mov
and
xor
cmp
jne
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
jmp
lret
fildll
sbb
daa
sbb
dec
out
clc
adc
sub
out
sub
out
js
push
or
repz
xor
mov
leave
pop
push
mov
cli
sbb
stc
adc
insb
and
rcr
bnd
push
mov
adc
pop
lea
sub
add
aam
mov
aam
in
jne
mov
in
lock
mov
cmp
movsb
pop
xchg
mov
int3
mov
mov
sti
xor
dec
and
scas
dec
pop
js
popa
bound
push
loopne
pop
ljmp
or
sahf
dec
or
sbb
push
dec
pop
mov
scas
ds
and
adc
mov
lods
and
xor
jge
xchg
fucomip
pop
xchg
fimull
jg
push
xlat
inc
stc
mov
and
or
aam
mov
push
mov
and
scas
cmpsl
fildl
outsl
loopne
into
nop
xor
push
jmp
les
add
push
fimull
movsb
sbb
and
mov
dec
sahf
cwtl
jne
add
or
popf
xchg
hlt
inc
pop
cmp
lahf
fisubs
fwait
push
mov
testl
add
sbb
aad
or
lret
xchg
sub
popa
xor
sarb
outsb
shlb
and
daa
xchg
lret
mov
insl
ret
pop
push
stos
in
mov
add
sbb
ja
or
pop
cs
js
push
ljmp
out
les
mov
jne
cltd
scas
add
push
clc
mov
sbb
xor
mov
pop
mov
dec
sbb
inc
js
dec
fldenv
les
cmpsl
mov
xor
hlt
out
xorl
stos
adc
sbb
pushf
clc
jae
xchg
mov
es
xchg
sti
inc
add
or
mov
dec
cmp
inc
add
scas
mov
lock
pop
xor
mov
and
xor
adc
int
lret
xchg
sub
xor
jbe
xorl
mov
mov
xchg
inc
ror
scas
push
daa
fcoms
call
xchg
dec
out
and
movsl
push
jb
dec
xchg
out
cltd
add
mov
mov
xchg
pop
xchg
cld
jge
cmp
faddl
mov
mov
adc
insb
cmp
mov
je
push
scas
mov
jecxz
icebp
clc
lods
or
push
cmp
jp
jb
cmpsl
clc
in
mov
daa
out
out
test
jmp
lea
xchg
xchg
mov
comiss
icebp
sbb
sub
jl
push
dec
jnp
int3
inc
aas
out
jp
int3
cmc
xchg
jg
and
aad
push
out
push
icebp
incb
sub
or
aaa
dec
dec
cmp
or
fimull
sub
cmpsl
xchg
and
das
inc
and
adc
sbb
jmp
movsb
cmp
es
insl
loop
adc
std
inc
jne
xchg
pop
sbb
jecxz
xor
adc
pop
addl
insb
adc
arpl
sarl
das
das
sbb
inc
lock
jns
mov
mov
push
xor
popa
adc
mov
sub
mov
mov
pop
mov
rcr
test
fistpl
pop
fstps
rcrl
xchg
sub
mov
nop
xor
aam
mov
fadds
fnstcw
pop
iret
rolb
mov
subb
jo
push
sub
lret
dec
adcl
ljmp
jl
repnz
or
pop
insl
jge
out
or
xor
pop
xchg
stos
add
out
xlat
ror
sub
lods
inc
sahf
mov
mov
int
xchg
mov
or
mov
sub
xchg
push
fwait
popf
jge
mov
mov
sub
add
mov
xor
div
mov
mov
xor
jmp
movl
movl
jmp
stos
lods
movb
lods
adc
jnp
adc
pop
mov
clc
insb
bound
aas
add
test
nop
mov
ljmp
jl
inc
fstps
movsb
adc
out
xlat
mov
es
cwtl
push
mov
stos
mov
bound
fisttpl
and
out
adc
adc
jecxz
sub
into
adc
jo
arpl
je
ret
repnz
sub
fwait
xor
sub
test
dec
push
or
int
decb
xlat
pop
mov
out
in
adc
das
test
or
xchg
arpl
cmp
jp
pop
and
add
jge
xor
cmovb
xor
xchg
loope
mov
bound
jge
push
xor
shll
jl
xorb
push
mov
cld
cmc
or
or
fcompl
xchg
jecxz
fdivrs
rol
nop
sub
mov
mov
add
inc
jle
inc
xchg
jnp
lock
mov
mov
rolb
inc
sbb
addr16
data16
ja
mov
push
mov
lret
test
rorb
ja
mov
bound
test
pop
in
add
xchg
ret
xor
es
adc
pop
int
xchg
cmp
fisubl
push
movsb
cld
dec
arpl
daa
pop
mov
scas
sbb
lahf
outsb
pop
repnz
sub
rolb
cmc
push
jae
scas
aam
inc
mov
cmp
cmp
mov
hlt
push
add
mov
pop
mov
mov
ret
aad
dec
cmp
xorl
push
bound
ret
into
call
ror
pop
jb
outsb
lret
pop
xor
adc
cmpsb
xchg
fidivrs
inc
lods
les
jle
sbb
dec
fwait
push
jl
sub
test
out
jmp
mov
leave
push
adc
mov
test
fisttps
inc
or
inc
xor
mov
push
pop
cmpsb
cmpsb
and
xchg
out
pop
xor
mov
les
push
push
inc
xchg
mov
nop
pop
inc
adcb
and
jge
outsb
repz
imul
inc
icebp
or
pop
mul
fdivs
addr16
push
arpl
icebp
popf
push
int3
pop
mov
ss
dec
rcrb
fwait
push
scas
rol
inc
mov
lds
cld
popa
dec
mov
sub
cmpsb
bound
jp
lock
xchg
cmp
popf
mov
es
daa
xchg
sbb
mov
aad
outsl
dec
nop
sub
fimull
ds
cltd
xchg
dec
test
and
pusha
push
xchg
push
bound
dec
push
scas
bound
dec
je
sbb
fstpl
pop
inc
sub
mov
and
xor
ret
jbe
jns
adc
imul
and
jnp
iret
jge
aad
icebp
hlt
adc
imul
into
mov
jo
lcall
inc
and
jle
fnstcw
mov
lods
cmp
jle
and
jecxz
fmuls
or
cmc
jbe
fs
inc
inc
add
les
cwtl
inc
movsb
fcmove
cwtl
mov
mov
sub
mov
mov
push
testl
or
pop
pop
and
mov
dec
pop
xor
inc
push
das
outsl
inc
stos
repnz
int3
insl
add
sub
fcmovbe
icebp
adc
sub
or
movsb
xchg
dec
jo
push
mov
mov
push
pusha
jnp
jns
mov
mov
js
adc
dec
add
mov
mov
iret
pop
cmc
jl
mov
jl
leave
repz
mov
fcmovnu
nop
and
mov
ja
fisttpll
rcrl
imul
mov
popa
insl
add
das
add
shl
movl
movl
movl
movl
mov
mov
jmp
and
mov
out
jno
mov
xchg
xchg
in
adc
fnstcw
jle
xor
xor
cltd
outsb
adcb
andb
push
scas
fsubrp
cltd
leave
jo
cli
and
call
xchg
mov
dec
repz
push
xchg
push
loope
test
fs
or
xchg
std
jecxz
push
sbb
fisttpll
sti
addb
sub
jge
in
pop
cmp
loop
lods
dec
negl
out
mov
fcompl
bound
and
or
push
push
pushf
sarb
repz
jge
scas
iret
inc
mov
cwtl
dec
pushf
pop
push
pop
push
pop
outsb
inc
xor
stos
test
sbb
cltd
loope
cmp
or
mov
stos
fwait
mov
popa
subl
iret
mov
xor
hlt
jl
lcall
or
jo
xchg
lret
stos
push
xor
xor
or
and
mul
lods
aas
and
sub
pop
insb
or
push
pop
pop
dec
pop
pop
loop
ljmp
dec
jl
push
push
scas
cmc
das
jg
pop
push
adc
lods
int
and
dec
pop
rcr
shl
xchg
jmp
nop
cli
mov
imulb
sub
pop
scas
mov
loope
pop
sahf
dec
imul
cmpb
or
dec
xchg
into
mov
scas
or
insb
and
mov
mov
loopne
js
sbb
push
int3
mov
dec
push
jae
sbb
jne
xchg
cli
sub
test
rorb
push
das
out
and
xchg
lods
pop
or
and
and
cld
icebp
jmp
fisttps
fnstenv
mov
andb
inc
inc
mov
ret
cmp
fs
cmp
jmp
pop
cmpl
dec
jle
int3
int3
sub
fiaddl
lcall
pusha
mov
xor
push
aam
cli
push
mov
test
push
addr16
dec
push
or
jle
push
and
cmp
sbb
xor
ja
or
aam
fsubrs
xchg
outsl
sub
and
xor
lds
fstpl
xchg
into
cmp
neg
out
inc
sub
sbb
fisubrs
insl
push
jae
or
in
adc
ja
int
xor
ficoms
sahf
mov
mov
cwtl
inc
std
ds
mov
call
inc
fs
add
add
adc
push
jne
mov
popf
mov
cmp
or
fdivl
dec
iret
das
popf
xchg
sub
fwait
cmpsb
cmp
aad
popa
or
lcall
mov
in
add
and
ja
cmc
fimuls
test
pop
sub
lahf
sbb
repz
inc
xchg
add
adc
mov
movsl
lcall
int
out
jb
in
mov
stos
sbb
xor
repnz
inc
std
incb
imul
out
dec
fnstenv
jge
sbb
jne
call
cmpsb
dec
xor
inc
pop
outsl
call
jne
sbb
pop
das
lock
rolb
mov
inc
sbb
int3
andb
mov
movsb
inc
mov
adc
cmp
lock
sub
push
xchg
out
dec
jns
and
call
xchg
push
mov
xlat
repz
inc
and
mov
sub
fdivr
push
jbe
inc
sbb
mov
add
add
dec
into
shrb
pop
sub
inc
or
mov
adc
adc
call
add
fwait
sub
cmp
imull
in
sub
hlt
inc
rorb
je
sbb
or
loop
fcompl
ret
sahf
lret
imul
pop
clc
cmp
jg
mov
pop
fistpl
inc
xor
adc
or
sub
dec
lods
out
mov
stos
les
ds
fs
mov
sub
in
jp
add
xor
mov
jmp
out
mov
xchg
stc
mov
aas
mov
xchg
cli
adc
movsl
ja,pn
push
jae
mov
inc
js
out
imul
rcrl
shrl
cmpsb
daa
jns
xor
push
or
scas
roll
sub
sahf
imul
les
test
mov
and
push
lret
stos
add
xor
je
adc
pop
out
insl
jge
xlat
adc
inc
and
mov
popf
cmp
imul
out
xor
xorl
movsb
lret
pushf
xlat
mov
sbb
dec
sbb
sub
dec
or
mov
js
pop
jl
lock
and
test
xorl
shlb
les
mov
mov
out
fdivp
pop
lods
das
xchg
insb
in
jbe
jbe
jmp
dec
dec
paddq
loop
aas
lds
mov
mov
into
fistpll
les
jmp
xchg
mov
mov
dec
lea
mov
mov
jnp
insl
mov
pop
ja
inc
call
inc
clc
sub
mov
lods
ds
push
mov
outsl
sbbb
daa
icebp
fcomip
sahf
jbe
and
ret
dec
add
jge
jg
mov
movsl
ret
pop
subb
jne
jns
add
ds
test
jb
xlat
fiaddl
sbb
push
jbe
insl
sub
lahf
sbb
cmp
ret
or
lds
mov
pop
jb
adc
popa
dec
cld
ja
pop
pop
jnp
inc
das
mov
outsl
arpl
gs
push
sbb
rolb
aam
jmp
xchg
push
stos
jne
test
and
nop
push
cmp
std
jecxz
xlat
or
pop
pusha
inc
int
call
aam
push
cmp
add
pop
fcomps
xchg
inc
inc
pop
ret
add
cmp
inc
iret
nop
lds
push
push
popa
cmp
xor
repnz
outsl
test
adc
inc
loopne
inc
dec
daa
sbb
fs
ud2
pop
das
dec
mov
adc
xchg
std
les
inc
adc
adcl
push
into
or
enter
lock
pushf
daa
rcrb
xchg
pop
adc
xor
sti
pop
mov
inc
and
add
xor
jns
pop
cmc
pop
outsl
out
out
xorl
ret
das
xchg
inc
aam
fdivrp
scas
in
cmp
pusha
mov
outsb
nop
fidivs
out
push
outsl
cld
mov
fwait
out
cmc
out
subb
fistpll
inc
popa
mov
push
pop
xchg
dec
jbe
hlt
xchg
inc
div
cs
jp
mov
sbb
iret
in
mull
sbb
addr16
push
pop
in
test
push
cltd
adc
or
cmpsl
pop
add
pusha
pop
ds
mov
dec
les
pop
test
lahf
call
cltd
adc
mov
clc
mov
mov
add
sub
ret
mov
cmp
add
xor
incl
rolb
sub
xor
add
or
jns
out
stos
add
pop
fs
fwait
cmpsl
push
mov
xchg
in
cmp
jb
scas
adc
mov
and
push
aad
lcall
or
shrl
in
inc
adc
mov
dec
sub
xchg
push
mov
and
outsl
cli
lcall
icebp
hlt
cs
enter
out
rcrl
xchg
dec
pushl
pop
data16
mov
push
sahf
sub
sbb
arpl
sub
jns
mov
cwtl
adc
ja
mov
ljmp
xchg
aad
sub
testb
mov
push
xchg
sbb
and
jbe
push
and
mov
jg
ds
shll
and
and
out
mov
cwtl
push
adc
loop
adc
cld
adc
insb
mov
ret
pop
aaa
leave
inc
lret
xlat
ja
sub
mov
lcall
test
daa
lea
xor
mov
sub
mov
mov
mov
add
or
xor
div
mov
mov
imul
add
jmp
and
xor
lods
pop
test
jnp
aad
adc
sar
inc
jno
cmpsb
and
inc
jnp
pop
mov
lods
sub
sub
fstpl
cmp
cli
sbb
mov
into
scas
into
lcall
bswap
fsts
adc
test
sti
and
icebp
repnz
repz
bswap
int
lods
or
xchg
repz
out
xor
push
cmc
or
push
jno
loop
pop
add
cwtl
addr16
dec
xchg
shl
push
mov
push
inc
xchg
cmpsb
loopne
and
bound
inc
mov
rcrb
or
xchg
cmp
and
xor
aam
push
js
ret
or
cmp
jle
pop
sbb
sbb
gs
jae
rcr
incl
jnp
mov
jb
outsl
mov
fistpl
mov
scas
and
mov
pop
out
mov
pop
cld
adc
jecxz
pop
lahf
out
loopne
inc
cmp
lods
shlb
jae
or
leave
dec
xchg
sbb
nop
xor
or
ret
sbb
arpl
mov
iret
mov
pop
xchg
jge
mov
jg
fcomps
xchg
xor
aad
mov
ljmp
inc
xchg
nop
aas
shll
mov
mov
cmp
dec
dec
inc
adc
inc
cmp
call
mov
mov
loop
pop
sbb
int3
sbb
sbb
rol
or
mov
movsb
xor
addw
inc
roll
in
push
push
jp
cmp
les
push
pop
mul
sarl
daa
mov
xchg
mov
insl
popf
xchg
fsubrl
jecxz
jl
mov
lea
mov
je
add
inc
hlt
out
inc
push
cmp
insl
dec
dec
jno
into
mov
mov
es
mov
mov
test
loop
loope
jg
push
sub
xorb
clc
cmp
mov
scas
and
sub
pminsw
adc
push
push
lea
jns
add
or
inc
cs
mov
loop
loopne
inc
adc
je
jle
jecxz
jge
push
sub
cmp
js
mov
xor
icebp
ret
ret
fadds
fmuls
aas
mov
mov
addr16
and
cmp
subl
out
mov
mov
xchg
mov
arpl
out
cwtl
adc
push
mov
lods
addl
add
aad
in
je
dec
mov
xchg
dec
scas
not
repz
stos
inc
add
loope
xorl
mov
lock
jecxz
sbb
fstl
mov
lcall
jge
scas
imul
mov
xor
daa
loop
sarl
out
je
out
inc
adc
push
mov
mov
xorl
dec
shl
pushf
xchg
adc
sahf
lea
call
cld
loopne
cmp
test
mov
mov
shlb
inc
out
mov
xor
adc
sub
loop
adc
push
jp
jae
sbb
push
mov
xchg
add
stos
mov
out
sub
fdivs
mov
xchg
fcompl
int3
inc
and
notl
outsb
mov
jmp
dec
lret
push
enter
daa
std
scas
cli
dec
sbb
or
sub
in
sub
gs
adc
das
fsubrp
push
notl
xlat
imul
mov
mov
add
sti
lds
daa
mov
shll
push
aaa
pusha
js
adc
xlat
mov
rcll
rolb
test
push
aaa
out
roll
mov
or
shl
ljmp
sti
out
cmpsl
fsub
stos
fidivs
cli
cmp
jge
sbb
test
aas
push
aas
rorl
in
add
sub
xor
sbb
icebp
adc
sub
mov
mov
mov
mov
and
lea
mov
mov
lea
mov
and
add
cmp
jb
movl
movl
movl
jmp
flds
and
rorb
pusha
pop
jno
pop
mov
adc
and
mov
int
jecxz
or
xchg
lea
or
mov
jl
push
or
sbb
inc
std
jl
jge
pop
dec
sub
fisttpll
je
cmp
test
jp
push
add
push
xchg
mov
mov
outsl
and
out
jo
gs
sahf
add
mov
push
cmp
in
pushf
ljmp
push
ljmp
cmpsl
jae
mov
int
fdiv
aaa
pop
or
arpl
addb
dec
int3
sub
sub
adc
ret
sub
inc
pop
loop
xchg
mov
dec
jmp
mov
jb
mov
add
repnz
fsubrl
sbb
jecxz
loop
sbbb
mov
insl
or
inc
divl
inc
add
das
lret
cltd
roll
cltd
popf
and
int
dec
pusha
lahf
cli
jecxz
push
imul
xor
mov
dec
test
mov
icebp
or
scas
loop
insb
or
dec
xor
mov
mov
int
jne
mov
mov
add
test
xor
enter
mov
pop
cld
scas
mov
pop
sub
test
gs
sahf
sbb
rcr
adc
mov
addb
pushf
cmpsb
jo
out
mov
mov
ss
lret
or
imul
cmp
sti
mov
mov
aad
inc
in
jne
sti
call
jl
jns
xor
xchg
sub
pop
inc
mov
jmp
shll
lds
xor
mov
clc
aaa
xchg
out
cmpsl
mov
pop
popa
lods
push
pop
and
cmp
xchg
mov
cld
outsl
shlb
adc
push
jmp
adc
ja
out
cmp
push
jno
mov
push
in
jo
mov
test
and
mov
andl
inc
iret
scas
xchg
dec
mov
fildll
sub
out
aas
bnd
mov
add
lods
pop
dec
sub
das
outsl
mov
out
outsb
insl
fs
mov
imul
in
add
inc
fistl
js
xchg
mov
sub
jns
nop
lcall
adc
adc
mov
mov
mov
popf
test
movsb
sbb
in
jns
in
popa
ja
xchg
outsl
call
inc
jge
push
or
addb
pop
mov
sbb
mov
inc
dec
hlt
cli
xchg
das
daa
call
lret
push
scas
sti
cmp
repz
mov
iret
lock
xor
mov
mov
and
outsl
mov
push
sti
push
push
pusha
add
popa
xchg
add
add
cmpsb
cmp
jmp
xchg
je
clc
mov
jmp
inc
aas
push
sub
mov
pop
adc
ret
inc
fs
xlat
in
inc
and
call
fidivrs
or
and
outsb
ljmp
arpl
mov
xor
aas
xchg
xor
inc
mov
sub
das
cmpsb
insb
dec
stc
inc
orl
imul
stos
cmp
push
outsb
adc
dec
mov
inc
sbbl
add
leave
adc
lea
insl
and
jb
in
cmp
fsubrs
and
cmpsl
aas
stos
sub
pop
lret
xchg
lock
mov
push
push
outsb
out
sbb
push
fsubrs
enter
std
or
out
shrl
mov
adc
lods
stc
push
in
shrl
add
jae
xor
mov
cwtl
jnp
xchg
pop
mov
shll
adc
lods
push
push
sub
pop
repz
dec
sbb
cs
lret
adc
jne
int
push
sbbb
call
push
aam
push
jb
push
incl
mov
inc
clc
xchg
sbb
add
inc
hlt
movsb
das
add
movl
movl
movl
movl
mov
mov
imul
mov
imul
or
xor
add
xor
mov
mov
jmp
movl
movl
movl
movl
movl
jmp
stc
arpl
push
cmpsl
inc
xchg
add
clc
adc
test
or
cltd
push
js
stos
outsl
push
mov
test
sbbb
in
mov
sbb
pushf
pushf
xor
ds
push
push
mov
add
insb
pop
scas
xor
push
or
adc
or
add
aad
and
cmp
sbb
ja
sub
or
jbe
shll
xor
dec
loopne
rcl
jl
sbb
and
stc
rcrb
dec
insb
scas
inc
mov
dec
dec
repnz
xor
in
outsl
je
mov
in
mov
xchg
insl
adc
cs
insl
xor
mov
daa
jno
rolb
in
push
xorb
dec
test
popf
cmp
mov
cmp
shrl
sub
or
sub
sub
lea
pop
dec
cmp
push
and
arpl
pop
xchg
cmp
mul
sub
jns
or
stos
xchg
inc
sti
adc
inc
data16
jg
setae
mov
push
mov
push
es
dec
sub
pop
pop
pop
adc
daa
adcb
loopne
adc
rolb
pop
dec
jge
adc
in
ret
mov
fs
and
test
cmp
mov
pop
sbb
push
into
cmpsb
daa
sub
pop
cmpsl
xor
jmp
addr16
mov
add
bnd
mull
or
in
sub
ret
and
xchg
dec
mov
mov
jns
jmp
xchg
sarb
rcrb
nop
mov
push
incb
cmpsb
fcomp
das
lds
jb
inc
inc
addr16
xchg
and
dec
leave
enter
cmp
push
cmp
mov
add
dec
std
push
and
cli
cmp
je
clc
je
cmp
and
shlb
ret
dec
repnz
mov
push
push
sbb
mov
std
std
divps
jle
adc
jecxz
cmp
imul
inc
pop
jp
aaa
movsl
fwait
xor
mov
mov
push
mov
xchg
out
jmp
jp
loope
bound
stc
rclb
movsl
inc
sbb
mov
inc
arpl
jge
xlat
shl
scas
jge
or
adc
aam
push
rcrl
jnp
push
mov
mov
xchg
lock
ds
movl
push
les
mov
sbb
adc
add
loope
push
mov
lds
sahf
outsl
lock
cs
mov
and
insb
dec
fwait
cmp
jbe
mov
fsubrs
mov
mov
adc
mov
movsl
aad
mov
xchg
scas
cwtl
jns
stos
mov
ficoml
xchg
insb
stos
in
test
adc
add
xorl
int3
jecxz
push
jne
xchg
and
mov
mov
adc
pop
adc
cmp
add
sbb
mov
insb
test
fnsave
and
mov
add
into
mov
cwtl
jo
mov
rolb
lahf
mov
push
sar
ljmp
dec
lret
or
popf
mov
ret
ret
xchg
pop
inc
add
ret
add
jne
inc
pop
and
mov
push
xchg
push
and
loope
mov
ret
fnsave
pop
es
jp
cmp
clc
or
lret
inc
pop
aas
xor
dec
mov
push
cwtl
in
in
mov
mov
dec
mov
jl
push
xor
add
sti
sbb
movsl
movsl
cmpsl
jno
xchg
stos
jb
adc
hlt
cmp
xchg
lea
mov
jb
imull
jmp
jns
jae
movsb
psubsb
ds
inc
rolb
cmp
int3
inc
adc
add
inc
enter
add
int3
and
mov
or
mov
mov
xor
xor
div
mov
jmp
les
mov
xchg
sarl
xchg
adc
fsts
in
sti
mov
nop
jge
inc
push
aaa
insb
add
xchg
and
sbb
sub
dec
dec
scas
cmpxchg
ret
mov
and
push
mov
rcrl
lea
pop
and
scas
gs
cmp
hlt
and
into
in
aaa
enter
cmp
sub
in
inc
add
rorb
sbb
clc
or
mov
mov
jnp
sub
in
stc
inc
and
ret
fsubrl
popf
sbb
xor
push
mov
dec
dec
xchg
sub
xor
in
cmpsb
mov
popf
xor
out
mov
popf
adcb
mov
imul
push
push
setl
test
jmp
pusha
aaa
mov
andl
jns
loop
cmc
movsl
dec
mov
and
lret
cmpsb
jne
jmp
xlat
mov
xor
sbb
jge
repnz
cli
or
inc
sahf
int3
mov
icebp
setns
fs
add
push
push
ret
shrl
int3
ret
sub
cmp
xchg
loope
call
mov
mov
inc
repnz
fwait
sbb
or
jle
sub
adc
fwait
inc
imulb
arpl
or
sbb
shlb
out
cmpl
clc
mov
inc
test
ljmp
iret
xchg
xor
aam
dec
stc
mov
clc
inc
pop
test
dec
inc
push
js
outsb
fs
jmp
iret
aaa
popf
repz
leave
xchg
xchg
or
pop
mov
in
inc
outsb
or
xchg
ret
mov
call
push
jbe
lods
or
push
das
push
xchg
or
xchg
test
mov
pop
inc
and
cmpsl
push
inc
sbbb
jno
mov
sar
xor
inc
xor
adc
fsubs
xchg
or
and
clc
insl
outsb
cmp
xchg
lods
loope
fdivrs
mov
aam
inc
repnz
pop
cmpl
xchg
inc
cmpsb
xchg
cmp
or
cli
xor
stos
cmp
jbe
repnz
in
jg
test
loopne
fwait
cwtl
cmp
inc
push
jge
xchg
iret
mov
sub
out
cmp
jl
enter
jmp
cmp
pop
std
addr16
std
push
bound
in
jmp
sbb
lock
xchg
pop
mov
test
fidivrs
inc
lea
fisubl
lcall
jae
add
mov
test
setg
js
sub
inc
in
ficomps
xchg
mov
out
and
cwtl
sub
mov
push
xchg
mov
imul
xlat
sarl
dec
cltd
jp
loope
test
or
mov
mov
imul
bound
movsl
daa
dec
notb
jmp
ljmp
int3
lea
loope
or
adc
loop
aaa
mov
andl
lea
inc
ficompl
sbb
inc
dec
mov
sub
aas
mov
iret
sbb
shlb
inc
inc
xchg
in
clc
loopne
sbb
push
xchg
adc
lea
loope
push
fisttpl
std
iret
xor
pop
add
or
xor
jecxz
add
sub
cmp
fcomps
fstpt
cwtl
ds
push
jne
mov
sbbb
cmp
pop
rcrl
cmp
testl
adc
out
add
daa
jl
bound
data16
jg
sbb
icebp
dec
movsb
mull
cmpsb
cmp
fcomps
cmc
xchg
cmp
jg
incl
or
xorb
xor
mov
add
and
mov
xor
xor
add
les
xchg
mov
add
lea
mov
mov
mov
and
or
jmp
mov
cmp
sbb
push
dec
adc
xchg
sub
adc
push
incb
mov
push
hlt
dec
out
cmpl
push
push
aas
mov
inc
cwtl
data16
int3
shlb
dec
push
ds
sub
jle
js
cmp
loopne
shrl
mov
iret
push
std
enter
xchg
or
jmp
sub
mov
test
test
push
cmpsb
and
mov
xlat
shr
pop
arpl
int
jne
push
jge
jl
and
mov
dec
aam
nop
ss
mov
rcl
repnz
mov
push
mov
adc
pop
jbe
jmp
or
aam
hlt
repnz
test
imul
xchg
gs
out
push
scas
daa
push
iret
ss
xchg
push
jecxz
xor
cmp
sbb
ds
test
sbb
sbb
push
jns
call
xor
stos
sub
lds
xor
aam
mov
jmp
stc
add
xchg
inc
jb
push
push
cmp
inc
dec
mov
jp
enter
dec
enter
pop
aam
adc
fimuls
add
out
std
xlat
mov
jmp
sarl
mov
lds
add
out
add
jo
sarl
xor
mov
ss
fsubrl
xor
subl
clc
or
notb
ja
xor
fcompl
sub
mov
sub
out
xchg
cmp
mov
daa
mov
popl
mov
mov
fidivrs
ljmp
fldcw
cmp
sub
filds
outsb
jge
jns
int3
test
jo
xchg
lahf
stos
lret
cs
loope
mov
cmp
dec
push
ss
popf
loop
incb
xor
aaa
xchg
add
loop
inc
mov
int3
push
pop
negl
mov
push
xchg
aad
ret
push
cwtl
fisubs
mov
fwait
xchg
xchg
stc
cs
or
mov
mov
xor
or
push
mov
sahf
movsl
enter
incb
push
push
shlb
dec
loopne
xchg
adcl
sahf
rcll
mov
jo
xchg
sbb
jnp
lret
add
sbb
pop
gs
sbb
inc
jle
xchg
fists
adc
sub
pop
mov
dec
negb
pop
cmp
sub
mov
xor
adc
in
in
punpcklwd
mov
clc
loop
dec
jne
mov
fsubrl
out
lods
push
arpl
inc
add
das
int3
rcl
lods
lahf
mov
hlt
test
cmp
and
movsl
pop
adc
out
inc
cmpsl
lret
mov
sub
pop
insl
pop
jg
push
xor
loop
int3
shll
into
outsb
scas
in
les
sbb
call
xor
or
loope
aad
sbb
out
ds
or
mov
pop
mov
sub
pop
xchg
imul
push
das
add
stos
lahf
addr16
roll
iret
inc
and
sbb
test
add
jo
or
insb
sbb
popa
je
add
or
pop
mov
dec
les
or
or
push
and
out
int
insl
clc
jp
out
gs
jnp
dec
xorb
adc
adc
jbe
call
dec
mov
std
imul
adc
mov
divb
xchg
pop
shl
je
mov
aad
pushf
cmc
jecxz
iret
aad
das
fmull
ja
sbb
mov
jge
mov
add
inc
std
mov
sbb
loopne
js
mov
pop
and
xchg
jl
mov
pop
xchg
mov
mov
sub
out
mov
popf
push
mov
popa
push
mov
ja
test
arpl
aam
rcrb
add
mov
sub
mov
mov
mov
mov
mov
mov
add
and
or
xor
add
mov
jmp
in
aad
aad
aam
ret
push
test
add
into
fwait
clc
adc
or
inc
push
xlat
rorl
fucom
jne
mov
xchg
adc
ljmp
outsb
push
dec
dec
cmpsb
jp
test
daa
in
sub
mov
and
add
sbb
fs
int
movsl
je
add
gs
pop
out
ret
push
adc
test
out
movsl
sti
or
lahf
ret
push
mov
or
clc
and
ret
jne
nop
rdpmc
inc
dec
lcall
adc
mov
pusha
and
out
sahf
push
div
xchg
out
shll
lds
loope
test
je
shlb
mov
xor
mov
dec
fsubr
mov
insb
cli
stc
mov
mov
push
insl
mov
ss
cwtl
jle
add
xchg
ret
imul
and
xchg
jno
cmp
push
cli
cmp
jecxz
cmp
notl
adc
shrb
dec
jnp
fcmovb
jno
xchg
ret
in
mov
xor
xchg
xor
pop
fldcw
into
lods
cmpsl
cmp
sub
xorb
inc
jmp
mov
popa
sub
inc
cmpsb
cmc
adc
loop
pushf
bound
adc
sbb
adc
xor
cmp
cli
add
les
sbb
lea
cld
xor
and
inc
xchg
push
inc
out
shll
call
pushf
sbb
pop
cld
out
stc
test
jmp
dec
pop
or
test
aad
adc
test
and
pop
pop
xor
in
jmp
cwtl
sti
scas
cli
lds
add
fnstsw
and
loopne
imul
shll
repnz
jbe
and
inc
push
and
add
fists
mov
mov
push
sahf
inc
inc
dec
mov
pop
push
decl
aaa
out
mov
dec
idiv
mov
jl
sub
out
jl
jnp
inc
xlat
popf
mov
sahf
sub
outsl
mov
adcb
jb
out
icebp
fisttpl
sub
sub
jp
pop
dec
and
cld
std
push
xor
pop
nop
dec
add
dec
insl
mov
negb
leave
test
pop
or
ret
dec
xlat
cmpsl
jnp
jnp
aaa
andl
inc
fdivs
aaa
aam
jp
xchg
or
xor
or
push
xor
add
enter
sub
hlt
dec
loop
dec
ffree
lock
and
int3
out
scas
push
std
sbb
lret
pop
sub
inc
adc
push
les
pop
aam
hlt
outsb
or
es
mov
ja
arpl
mov
jb
test
cli
fidivs
mov
mov
lods
sbb
push
in
cmp
mov
push
and
add
lea
ror
mov
scas
scas
cmp
ds
psubsb
mov
jp
test
popl
insl
jnp
cmc
dec
xchg
xchg
scas
xchg
cs
int
push
or
and
data16
imul
xor
dec
xor
xor
scas
cmp
daa
and
scas
inc
pop
test
push
pop
enter
and
cltd
mov
out
jnp
and
ja
xchg
fwait
sub
xchg
out
arpl
cmpsl
ss
jmp
shlb
push
insb
push
testb
popa
ret
cmp
add
loope
sbb
in
addr16
mov
lret
dec
fstpt
cmp
test
into
pop
iret
sahf
xor
xor
mov
pusha
mov
pop
inc
daa
js
add
sub
roll
ss
mov
pop
jecxz
icebp
or
ljmp
popf
xchg
andl
push
hlt
and
sub
mov
imul
sub
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
mov
mov
imul
or
and
xor
jmp
sbb
scas
or
test
fnstenv
jnp
mov
adc
repz
test
movsl
iret
mov
push
or
or
mov
jae
shl
mov
jae
mov
fwait
insl
test
mov
addr16
gs
xchg
sbbl
jg
push
cld
xor
mov
fbstp
mov
cltd
call
add
xchg
lcall
sahf
lret
adc
xor
jo
adc
insl
lods
sub
xchg
cli
leave
cld
std
testl
rcr
mov
push
dec
movsb
fs
inc
xchg
xchg
lods
insl
ss
or
testb
cmp
cmp
shrl
lds
adc
and
add
push
adc
lea
jmp
lcall
fcompl
ficompl
jecxz
jg
adc
lret
mov
or
cmpsb
lds
mov
dec
lds
loope
xor
jb
aam
lahf
add
inc
nop
hlt
invd
stc
push
pop
jg
and
pop
aas
adc
sub
and
or
jne
or
rclb
push
sti
test
js
adc
pop
dec
mov
ret
dec
loopne
std
push
mov
in
jg
lods
sbb
jp
in
int
xorl
clc
pop
inc
insl
aad
and
daa
sub
lea
into
add
dec
into
push
out
and
or
dec
bound
xor
insl
mov
loope
fstl
hlt
cmp
int3
cld
xchg
jge
imul
inc
sbb
xor
ja
and
nop
mov
sbb
rcrb
lock
das
mov
fisttpll
pop
mov
cmp
lods
jp,pn
test
push
imul
mov
fsubs
adc
jecxz
pop
fisubrs
push
xor
scas
lods
mov
test
lods
pop
adc
and
inc
js
fnstenv
call
mov
cmp
jecxz
loopne
mov
inc
fldz
mov
ds
inc
dec
push
f2xm1
mov
add
xchg
pop
stc
dec
fcoml
adc
out
sbb
sbb
mov
aad
xor
mov
movsb
mov
out
je
jo
imul
xchg
xchg
popf
push
in
lods
and
dec
xor
dec
dec
scas
nop
sub
dec
lret
test
and
fmulp
xlat
pop
dec
hlt
xor
sti
mov
xor
mov
xlat
in
outsl
cld
add
pop
sub
cmc
mov
pop
jb
push
ret
out
mov
jg
mov
scas
inc
stos
lods
xor
jne
jno
jl
fmul
shr
xor
push
bound
ret
xor
jmp
push
add
jecxz
cwtl
adc
rclb
mov
mov
xor
push
adc
dec
mov
cmc
mov
cmp
std
pop
inc
daa
les
out
test
jge
rorl
sub
inc
mov
jecxz
cwtl
addr16
mov
cli
dec
mov
imul
push
das
int
outsl
lods
cmp
dec
popa
out
dec
mov
daa
and
dec
cli
imul
outsb
xor
jecxz
lret
into
in
jae
in
test
test
mov
pop
cmp
test
sbb
out
pop
inc
push
mov
dec
imul
test
pop
sub
push
out
pop
lret
push
push
dec
repz
pop
shrb
fs
or
cmp
push
daa
addr16
cltd
rorb
loop
push
mov
dec
sub
fidivrs
into
fimull
and
mov
out
sbb
repz
in
jp
in
cltd
and
mov
mov
sarl
lods
xchg
push
push
push
mov
lcall
and
mov
sub
sub
add
rol
cmpb
fs
push
pusha
pop
mov
mov
mov
addl
jo
sbb
daa
inc
xchg
pop
lret
in
mov
pop
mov
inc
inc
sub
jnp
pop
into
jmp
fists
ret
add
lods
lock
mov
push
or
sbb
stc
xchg
testl
jns
out
fidivrs
pop
lret
or
call
jp
add
xor
mov
movl
movl
mov
mov
add
div
mov
or
sub
imul
lea
mov
movl
movl
movl
movl
mov
mov
or
mov
and
mov
or
sub
mov
jmp
stos
mov
adc
jnp
push
xor
xchg
clc
adc
adc
in
sub
add
outsl
inc
fisttpl
loope
pop
shl
sub
subb
pop
or
sbb
iret
xchg
jae
fcomps
pop
int3
std
test
adc
sbb
dec
or
sbb
add
iret
shl
mov
aad
sub
xor
mov
notb
scas
pushl
out
ss
or
scas
arpl
jne
mov
addb
and
push
pop
cmpsl
aaa
lret
add
test
lea
xchg
jnp
sbb
add
aam
ret
sbb
shll
add
subl
mov
bnd
iret
inc
ficompl
add
pop
es
test
xchg
imul
andb
push
mov
fistpl
into
mov
push
lahf
push
dec
push
jb
bound
jp
mov
dec
inc
or
jo
lahf
push
es
mov
sbb
fidivs
shlb
cmpsb
or
addb
mov
nop
fmul
pop
push
mov
cmpsb
pop
lcall
into
xchg
xor
xchg
sbb
mov
fimuls
in
mov
mov
xor
push
loopne
ret
and
sub
mov
loop
sbb
jnp
push
mov
mov
cmp
test
cli
in
mov
cltd
testb
lea
pop
loope
cld
mov
sbb
cmp
dec
xor
lods
jge
add
sub
pop
add
mov
inc
leave
xchg
cmp
push
test
jl
mov
imul
and
and
dec
xchg
sti
inc
icebp
test
inc
fstpt
jns
sahf
das
repnz
fstpl
mov
xchg
addb
ret
adc
sbb
jnp
cmp
pop
fs
inc
into
ljmp
orb
jne
cmp
fwait
icebp
test
xor
ret
lret
inc
pop
inc
dec
pop
pop
mov
repz
leave
rcll
pop
mov
pop
mov
dec
adcb
mov
sbb
fistl
add
mov
jle
push
xor
sub
xchg
jecxz
push
and
lds
mov
jmp
add
popf
popf
xchg
jb
bound
xor
mov
sub
imul
or
test
pop
dec
add
mov
test
negl
cmp
test
or
cmpl
fimuls
rcll
ja
flds
mov
imul
dec
dec
dec
fnstenv
lods
in
xchg
mov
add
dec
adc
pop
arpl
icebp
test
outsl
push
inc
xor
or
pusha
movsb
sbb
cvtdq2ps
subl
jl
repz
sub
insb
les
or
mov
sub
jle
test
test
push
mov
cmp
pop
mov
repnz
inc
aam
inc
or
out
pop
fisubl
xorb
loopne
imul
or
jne
mov
push
mov
lcall
pusha
sub
stos
int3
ret
inc
iret
push
mov
les
lcall
xchg
stos
cmp
ljmp
clc
push
xor
jae
xchg
das
lea
jge
test
into
into
jecxz
aad
int
ret
cmp
jle
test
sbb
imul
mov
push
hlt
ret
jecxz
inc
leave
dec
cmp
mov
stos
xor
arpl
add
cmp
add
push
adc
inc
test
gs
add
sahf
sub
aaa
push
xchg
jno
pushf
mov
fistps
pop
mov
mov
inc
mov
ljmp
sub
shlb
in
sub
cltd
test
add
inc
push
bound
lret
shrb
jb
mov
sbb
add
jle
mov
jne
pop
into
sub
xchg
les
sbb
insb
int
addl
or
mov
inc
lss
pop
lock
test
ret
push
loopne
mov
cld
movl
movl
mov
mov
mov
mov
or
mov
imul
and
or
and
xor
mov
jmp
jmp
pop
push
sbb
mov
test
adc
aaa
ja
adc
adc
xor
add
movl
push
popf
xor
sbb
adc
into
in
loope
into
pop
pusha
cmp
incb
push
test
outsb
enter
sbb
stos
fldl
pop
inc
jbe
fs
loope
fnstenv
xor
roll
xchg
pop
pop
mov
mov
cmpsl
cli
dec
jle
sahf
scas
jmp
cli
or
dec
test
mov
push
push
inc
fnstenv
push
xchg
cmp
xchg
fisubrl
jbe
or
lret
xor
in
les
int
cld
lret
xchg
sub
pop
ret
add
or
pop
ljmp
jl
pop
cmp
add
std
cmpsb
aam
mov
add
les
ds
call
je
jp
pop
arpl
xor
test
and
leave
pop
cltd
xor
imul
cltd
cmp
test
shll
test
mov
push
dec
inc
fwait
adc
inc
sarl
lahf
sbb
adc
or
lret
sahf
leave
dec
jne
jo
fistpl
sub
dec
inc
daa
mov
outsb
divl
xor
xchg
and
push
popf
dec
repnz
mov
aas
rorb
jl
and
adc
popa
inc
xchg
sbb
outsb
push
fwait
sti
insb
pop
push
or
es
dec
or
jnp
mov
scas
cmp
pop
sbb
dec
sub
call
xchg
inc
aaa
ret
lock
pop
push
adc
repnz
cld
loope
enter
mov
insl
xchg
push
inc
adc
aaa
jge
insl
push
xlat
push
pop
fstpl
adcl
fcompl
cmp
pop
mov
sub
lahf
inc
pusha
aas
divl
xchg
jge
dec
dec
lods
fistpll
sub
mov
pushf
push
repz
sbb
and
rolb
xor
push
push
or
mov
dec
cmpsb
adc
jge
test
xlat
pushf
dec
in
enter
mov
outsl
mov
add
push
gs
enter
lods
jae
out
subl
ret
push
pop
insb
xchg
push
jns
add
mov
mov
inc
adc
inc
inc
inc
jp
es
pop
jmp
scas
imul
adc
movsb
aad
std
and
mov
sub
ljmp
movsl
xchg
lret
imul
adc
push
xrstors
roll
push
xchg
and
sarb
mov
adc
mov
enter
dec
in
jbe
imul
fmull
mov
addr16
sub
or
cs
cmp
and
fcompl
or
ljmp
jae
mov
pop
adc
xchg
aaa
jb
push
aaa
in
mov
dec
xor
or
jge
jecxz
xor
cmp
mov
repz
adc
mov
lret
and
mov
mov
daa
pop
sbb
xchg
lret
inc
sub
into
xor
jnp
fdivrp
inc
jbe
cmpsb
jl
les
xlat
sub
repz
or
movsb
adc
xchg
ss
or
cmp
or
jmp
aaa
call
nop
cmp
sbb
sbb
das
dec
xorl
outsl
cmpsb
xorb
iret
cmp
or
mov
outsl
pop
mov
incb
inc
mov
xchg
fstl
lods
mov
or
jno
leave
pop
mov
bound
jecxz
jmp
and
mov
dec
jne
and
and
addb
pushf
adc
add
idiv
push
push
jp
cmp
outsl
cmpsl
out
mov
leave
popa
rcrl
push
push
stc
inc
push
aad
out
push
mov
inc
push
pop
cmc
loopne
jecxz
dec
or
adc
stos
mov
ret
or
or
cmpsb
scas
popf
lret
pushf
xchg
cmp
pop
or
outsl
imul
push
gs
test
xor
pop
adc
sub
ja
nop
shrl
jge
xchg
sbb
sub
jl
xchg
clc
cwtl
pop
into
mov
jno
nop
or
movsb
add
pop
insl
rol
aam
adc
pop
iret
je
imul
shrl
rorl
lock
ja
add
inc
clc
add
mov
mov
or
or
mov
sub
mov
movl
movl
mov
mov
sub
xor
sub
mov
movl
mov
movl
mov
add
mov
and
imul
and
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
or
or
mov
mov
xor
xor
sub
mov
sbb
mov
jmp
jbe
testb
inc
movsb
xchg
cld
dec
rol
lods
test
adc
adc
push
movsb
cmpsl
and
sbb
pop
dec
mov
adc
sub
mov
loope
cwtl
xchg
pop
inc
aaa
sbb
into
mov
jle
mov
mov
pop
scas
clc
out
jle
repz
subb
pushf
push
in
xor
dec
in
lahf
jne
mov
jg
insb
call
sub
rclb
or
dec
out
rcrl
add
addr16
cmp
xor
and
xchg
mov
adc
add
pop
mov
test
dec
les
mov
out
mov
fisttpl
inc
or
test
pop
mov
stos
out
sub
stc
lea
ret
jns
jbe
or
fdivl
inc
fisubrl
mov
lret
inc
icebp
sub
fistl
add
mov
sbb
addr16
mov
inc
pop
or
data16
mov
push
ds
cmp
jmp
add
add
push
aad
out
cli
mov
push
push
push
jbe
pop
pop
jno
cltd
cmpsb
sub
mov
test
or
sbb
mov
rcrb
adc
scas
xor
mov
add
and
es
in
xchg
xchg
mov
mov
inc
cmpsb
mov
jg
push
adc
dec
sbb
in
cmpsl
call
aad
out
mov
mov
imul
sbbl
and
push
push
repnz
push
mov
rol
inc
repnz
and
mov
pusha
push
call
add
pop
xor
and
aam
pusha
fsubr
push
loopne
xlat
ret
cld
movsl
ja
jge
push
out
mov
or
fisttpl
movb
push
lret
lods
popa
adc
pop
jne
mov
jle
je
mov
dec
aad
and
sar
cmp
and
mov
lret
enter
mov
jo
xor
pop
cmp
ja
nop
sub
ja
cld
sbb
mov
push
or
rorb
and
lahf
push
stc
cmpsb
xor
pop
into
rcll
pop
ja
inc
add
cmp
pop
cld
mov
push
lahf
fidivrs
test
sub
xor
add
ja
fadd
mov
rorl
adc
dec
stos
inc
pusha
push
lds
push
adc
jae
jmp
sub
push
imul
cltd
stc
fs
push
and
ss
push
inc
push
sarb
adc
jle
lcall
insb
daa
fucomip
pop
or
inc
pmullw
repz
cmp
fwait
push
sarb
jg
mov
jl
xor
push
pop
and
xor
mov
imul
movsb
imul
loop
pop
adc
mov
mov
in
cmpsb
mov
fcompl
pop
nop
out
std
repnz
in
sti
in
aas
inc
gs
dec
iret
fidivrl
jo
adc
cli
mov
out
inc
pushf
fimuls
outsl
sbb
enter
andb
fcmove
pop
fstl
fistpll
dec
mov
movsb
mov
jne
iret
movsl
inc
xchg
sub
sahf
loopne
notl
inc
idivb
or
xchg
lcall
out
inc
add
inc
add
xchg
mov
shrl
imul
push
push
ret
jecxz
hlt
xchg
loop
pop
cmpsb
sbb
fsubr
in
mov
in
imul
movsl
inc
fnstcw
call
inc
sub
dec
divl
inc
idivb
in
pop
gs
adc
aaa
movsb
mov
loope
pop
mov
push
jne
aaa
inc
mov
xlat
fcoml
rcrb
enter
enter
mov
inc
dec
je
mov
popa
jo
mov
popf
dec
jge
inc
aam
adc
mov
sbb
push
jae
cwtl
icebp
es
cmp
fmul
lret
idiv
mov
fdivrl
lds
pop
nop
jecxz
inc
xor
insb
mov
add
adc
mov
ss
js
add
cmp
sub
sarl
xchg
pop
mov
ficoml
xchg
lods
mov
xor
lea
jmp
push
aas
je
cli
andb
xlat
imul
imul
aam
repz
test
sub
mov
insl
mov
lea
rcrb
mov
push
push
push
push
call
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
negb
or
or
or
into
xchg
sbb
adc
adc
add
jp
iret
or
jns
jnp
test
enter
jmp
push
fildll
stc
mov
lods
push
leave
mov
jg
imul
adc
lea
xchg
stos
incb
jo
out
fcmovbe
sbb
cmp
fldt
enter
enter
loope
es
out
sbb
enter
arpl
or
cmp
mov
adc
sti
es
cli
pop
add
cwtl
xchg
fmul
mov
push
aam
or
ljmp
rol
xchg
mov
outsl
ja
andb
adc
mov
cmpsb
fsubl
mov
mov
xlat
ljmp
cltd
test
dec
cmp
nop
lods
aad
lret
test
fnstcw
cmc
lods
mov
add
mov
mov
popf
and
sbb
push
adcl
mov
int
shl
ja
imul
sbb
xlat
jno
add
clc
mov
ss
cli
mov
jmp
xor
mov
mov
xchg
iret
shrb
push
addr16
xchg
adc
arpl
mov
nop
xchg
jge
in
jb
enter
push
lods
std
cld
xchg
hlt
sarl
pop
dec
mov
pop
jp
dec
cmp
dec
lea
lods
subl
xchg
xchg
das
mov
ds
add
imul
outsb
mov
xor
cwtl
jmp
cmpsl
lea
imul
popf
shrl
cltd
xchg
leave
lcall
je
sti
into
or
mov
inc
adc
dec
xor
inc
lods
shrl
mov
test
setns
adc
mov
cli
xchg
or
imul
scas
and
into
and
fwait
or
cmc
insb
inc
arpl
mov
out
sub
xchg
lret
xchg
mov
push
cmp
in
aaa
adc
cmc
loopne
or
sub
pop
fstpt
pop
int3
sub
push
push
pop
pop
clc
movsl
in
lods
clc
gs
mov
js
inc
mov
mulb
jns
fildll
iret
sub
dec
in
cmc
dec
adc
shlb
test
push
mov
in
pop
sbb
pop
fisubs
xchg
stos
lock
stc
sub
mov
lods
arpl
push
xchg
out
pop
jns
aam
dec
adc
adc
loop
cli
insb
xor
icebp
ret
dec
adc
and
xchg
mov
in
ret
jmp
enter
scas
push
push
or
frstor
and
inc
xchg
int
cltd
out
add
in
test
movaps
or
push
arpl
ss
negb
test
add
neg
lods
jmp
fxch
jb
push
and
in
pop
pop
sub
and
movsb
lock
push
loope
lods
jb
outsl
popa
push
add
ret
and
imul
pop
mov
dec
adc
or
dec
dec
or
mov
sbb
xchg
idiv
sub
jnp
movsb
orb
popa
mov
inc
cmc
cmpsl
or
shlb
mov
mov
lods
imul
outsb
outsb
ja
popa
push
sbb
pop
and
pop
sbb
or
imul
fmuls
repnz
mov
mov
adc
pushf
lahf
cld
inc
out
xchg
dec
add
mov
mov
out
sbbl
jmp
mov
cmp
clc
inc
cmovno
lahf
push
lea
stc
dec
mov
repz
mov
cmc
xchg
bound
popa
jo
jg
fs
les
aas
jg
pop
jmp
cli
mov
je
arpl
test
push
or
je
add
lods
stos
push
ljmp
push
lcall
add
aam
pop
in
or
lcall
mov
cmpsb
adc
cltd
loop
cmc
pop
es
jno
cmp
hlt
clc
mov
arpl
fmull
sub
dec
pop
fisttps
jg
xchg
mov
adc
and
cmp
mov
rcr
mov
xchg
jge
lock
fs
mov
dec
add
push
push
adc
fdivrl
test
xor
fistpl
ljmp
sahf
jmp
gs
jle
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
xor
add
xor
push
mov
mov
jmp
jmp
aaa
pop
xor
push
sbb
call
clc
adc
adc
lock
pop
loop
fcomp
call
ret
dec
pop
xchg
clc
cmpsb
test
mov
cmp
gs
rcll
fnstsw
add
mov
jl
stc
push
xchg
inc
addr16
mov
pop
jb
mov
xorl
pop
cltd
loopne
xor
in
dec
jle
or
mov
mov
jmp
adc
nop
les
dec
stos
test
stos
xor
xchg
js
fst
lds
cmp
divl
outsb
sbb
ficoml
into
mov
pop
adc
and
add
repz
jl
adc
or
pop
js
in
xchg
aad
mov
push
int3
dec
sarl
adc
pop
ja
or
ficompl
cmp
movsb
fs
and
and
xor
jp
aad
call
ret
or
jae
and
xor
or
or
shlb
scas
sbb
in
stos
in
inc
xchg
mov
cmpsb
sar
pop
jnp
out
pusha
sahf
dec
ret
dec
mov
add
pop
mov
sub
sbb
jae
jno
decb
mov
imul
enter
cmp
or
pop
dec
sbbl
xchg
cmp
pop
cld
dec
push
xchg
add
daa
sti
push
mov
test
imul
in
imul
out
out
sbb
xchg
or
aad
push
sbbl
mov
aad
inc
in
test
icebp
stc
rcrl
add
addr16
fists
fcoml
aad
lret
aaa
enter
add
push
jae
ljmp
mov
dec
jne
in
and
dec
sbb
sub
mov
mov
call
and
je
add
loop
push
mov
outsl
dec
cmp
add
or
ret
dec
cmc
addl
push
mov
push
or
push
fwait
inc
and
scas
adc
fisubs
jge
imul
test
mov
nop
cltd
cwtl
iret
subl
xchg
insl
jp
and
popf
stc
sub
xor
stos
dec
mov
push
mov
ja
jg
xchg
mov
jne
or
and
cmp
mov
rcrl
push
jecxz
sbbb
lods
out
xor
data16
sysexit
jmp
dec
jns
mov
adcb
enter
or
pop
cmp
or
pop
jmp
daa
cltd
dec
mov
fdivp
popa
xchg
jno
mov
jge
mull
sbb
rcl
rorb
bt
imul
movsl
pop
add
movsl
adc
in
or
pop
arpl
adc
les
test
pop
pusha
outsl
ljmp
lahf
lahf
xor
lret
mov
xlat
xor
xor
sub
imul
call
test
add
or
das
test
dec
mov
cmp
mov
int
lahf
adc
leave
and
nop
pop
fstpl
xchg
mov
in
into
popl
mov
adc
mov
insl
rclb
pop
inc
jne
movb
add
in
imul
arpl
mov
fsubrp
aas
addr16
and
push
or
inc
mov
es
jo
loope
push
jmp
popa
ret
add
std
cli
fstpt
and
jae
lcall
pop
shll
pop
cmp
std
mov
mov
mov
fwait
lock
in
add
aam
pop
push
dec
subb
xchg
xlat
lahf
ret
frstor
mov
outsb
and
jl
mov
outsl
ret
adc
cwtl
scas
push
or
mov
enter
or
enter
push
add
sub
movsl
ljmp
repz
call
pushaw
jg
dec
adc
scas
fst
ret
lahf
sub
fmul
xlat
subl
mov
xor
ja
sub
mov
int
ljmp
cs
push
push
faddl
hlt
and
int
jmp
and
xor
div
mov
and
lea
add
push
jmp
dec
arpl
into
mov
pop
xchg
inc
mov
push
jmp
adc
adc
push
sbb
lock
in
aas
lods
in
mov
mov
adc
jo
in
xchg
pop
outsb
inc
lds
mov
xchg
push
test
or
sbb
repnz
jle
mov
leave
inc
xor
mov
pop
out
and
and
push
into
mov
push
decb
ret
ja
push
push
into
cmpsb
movsb
or
fstpt
addr16
xor
mov
cmp
mov
pop
inc
fistpll
cwtl
cltd
mov
push
pop
add
add
adc
cld
sub
push
loop
mov
scas
pop
inc
cs
out
inc
cltd
pushf
rcr
fld
pop
add
lods
rol
ja
test
add
cmp
popf
icebp
sbb
mov
pop
cld
inc
jge
xchg
int3
or
arpl
pop
sbb
sbb
dec
cld
ljmp
call
lret
jns
test
pop
lahf
push
stos
cmp
filds
push
clc
mov
scas
adc
adc
shll
inc
xchg
pop
arpl
push
mov
stos
out
pushf
stos
cmc
test
push
popa
mov
fstps
xor
jl
push
xor
ds
mov
xchg
roll
sbb
rcrl
and
or
mov
psrlw
leave
int
and
lods
pop
es
jns
lret
dec
mov
xlat
je
mov
rclb
dec
in
dec
fsubrp
arpl
fadds
pop
mov
sub
movsb
test
add
mov
pop
inc
mov
pop
dec
roll
ret
test
in
mov
cmpsb
push
adc
cmpsl
mov
lea
pop
icebp
inc
adc
fcoml
les
dec
dec
xchg
sahf
jmp
jne
dec
mov
ret
stos
lods
fnsave
outsl
loop
insb
scas
jbe
fwait
adc
mov
shrb
data16
cmp
cwtl
sti
aam
dec
jb
leave
in
and
mov
sahf
lods
andl
ss
push
paddusw
mov
pop
es
outsb
mov
js
popl
loope
inc
ret
jae
add
popf
into
inc
bound
lock
fidivl
test
jne
dec
sbb
lea
lods
cmp
jnp
out
enter
mov
xchg
aad
cltd
je
xchg
lods
lahf
rorb
out
in
sbb
mov
lcall
cmp
sub
push
mov
xor
fidivrl
cli
or
push
push
sub
cmpl
or
push
ds
inc
jb
test
push
or
push
push
or
test
mov
xor
aaa
dec
jl
and
icebp
adc
sub
pop
jo
dec
push
test
inc
mov
aaa
cltd
loop
jns
or
xchg
and
cltd
lods
scas
shrl
lahf
lds
sahf
orl
adc
testb
lahf
dec
pop
jb
pushf
lds
pop
adc
imul
cmp
xchg
mov
adc
mov
into
add
mov
xchg
push
pop
sar
inc
add
mov
pop
cmp
mov
test
sub
mov
aad
sub
sahf
sub
dec
and
mov
xor
enter
pop
mov
data16
aaa
adc
iret
jecxz
add
push
jnp
fidivrl
fiadds
lcall
outsb
dec
pop
pop
pop
int3
push
sub
xor
push
and
out
jmp
xchg
outsb
in
push
cs
cmp
aaa
popa
pop
jg
xchg
repz
sub
inc
stos
stos
sub
inc
push
ss
stc
cmp
enter
popa
xchg
fldl
mov
mov
sti
repz
lock
mov
adc
mov
insl
sar
push
int3
push
xchg
push
inc
popa
add
clc
and
sahf
push
daa
cmp
mov
test
mov
sub
pusha
and
das
shlb
lods
repnz
ja
cmpsl
fwait
pop
fists
add
repz
adc
inc
fs
outsl
xorl
xchg
outsl
mov
jo
decl
decl
decl
jmp
sub
jmp
push
mov
cmp
and
jnp
inc
clc
adc
adc
xchg
pop
sbb
shlb
stc
cmc
into
pop
push
movsb
pop
push
inc
subl
jnp
ret
cmc
test
fnstsw
outsl
into
add
loope
or
fs
cli
lret
test
cvtpi2ps
clc
fdivl
mov
iret
jne
rcll
addb
mov
and
shll
pop
push
cmp
ret
insl
es
rcll
shl
bound
fisttpll
jg
lds
cmc
iret
add
sbb
sbb
idivb
push
rclb
push
arpl
pop
or
push
sti
shll
push
pop
clc
mov
cmpsb
mov
pop
data16
aas
ja
sbb
xchg
fwait
push
fldenv
xor
cmp
es
popa
jne
dec
xchg
xchg
or
xorl
fadd
movsb
adc
testl
xorb
pop
leave
sbb
jmp
mov
cmp
pop
and
sti
daa
cmp
and
xchg
fcom
addl
call
mov
mov
and
sbb
mov
push
leave
lods
add
mov
sbb
dec
js
mov
mov
stc
push
push
cld
in
push
cwtl
jno
push
out
jle
jns
imul
push
xchg
xchg
push
mov
fstpt
das
mov
cmp
mov
push
mov
test
out
aad
push
data16
out
sbb
pop
scas
decl
test
and
out
mov
mov
and
jo
inc
pop
mov
subb
jns
test
andb
shlb
jge
mov
mov
mov
insl
imul
or
or
testb
mov
subl
rcrl
clc
xchg
dec
push
and
push
add
adc
cmp
pop
fistpl
xor
movsb
or
mov
pop
add
add
jnp
stos
ret
push
loop
mov
fdivrs
dec
outsl
mov
rcl
divl
ss
push
jne
fnstenv
push
xchg
fidivrl
sbb
outsb
adc
mov
jne
rcrb
cmpsb
pusha
mov
lods
inc
inc
add
mov
rcll
mov
and
mov
ljmp
insl
adc
ss
iret
inc
xchg
add
or
out
dec
xchg
push
cmpl
push
ja
mov
xor
inc
xchg
dec
daa
dec
push
push
test
pop
xchg
lods
jl
out
or
sahf
push
fstpt
shlb
xchg
les
pop
mov
les
dec
push
in
gs
sbb
mov
je
cwtl
outsl
loopne
jge
push
pop
stos
in
adc
mov
sahf
xor
mov
cli
das
ljmp
cmc
inc
sub
inc
pushf
pop
mov
fsqrt
mov
rcl
xor
imul
mov
xchg
pushf
and
repnz
nop
outsl
movsb
pop
xchg
mov
inc
test
test
lcall
xchg
scas
in
imul
nop
add
xor
cld
mov
mov
out
movsb
xchg
addl
imul
lods
jge
int3
sub
sub
adc
xchg
push
mov
push
cli
mov
shlb
lret
jge
xchg
shrl
add
push
cwtl
sbb
mov
inc
mov
outsl
stc
cli
scas
jbe
jmp
aad
ljmp
pusha
add
fs
inc
test
mov
add
and
pop
icebp
add
and
in
iret
mov
or
jecxz
stc
scas
adc
sbb
mov
loope
loopne
xor
push
imul
mov
mov
cmp
mov
int3
mov
cmc
mov
jne
stc
and
fwait
aad
in
insl
lds
sbb
push
insb
or
xor
sbb
fsubrp
pop
xorb
cmpsl
ja
push
outsb
sub
lret
adc
mov
push
xor
dec
pop
cltd
mov
dec
aad
inc
mov
or
xchg
pusha
mov
xchg
dec
adc
inc
hlt
popa
adc
push
loope
mov
inc
insb
nop
sbb
push
mov
mov
add
and
mov
mov
jmp
ja
cli
orl
outsl
mov
dec
sbb
jecxz
clc
adc
adc
jnp
fsubl
dec
fistps
push
lods
push
xchg
lret
pop
leave
out
push
xchg
fistl
or
push
adc
inc
mov
imul
inc
or
sbb
aas
xor
cltd
or
sbb
pop
adc
and
cld
push
mov
sahf
sti
push
jl
call
jae
test
lea
stos
adc
jno
dec
xchg
push
mov
test
lock
push
mov
cwtl
test
and
mov
adcb
jns
sub
jg
inc
ss
sbb
mull
mov
sbb
push
sub
sahf
stc
mov
mov
scas
mov
aas
or
xor
xor
sbb
sub
popf
in
popf
sahf
cmp
push
jge
push
inc
sti
push
orb
mov
xor
mov
jno
sti
insb
mov
pop
mov
sbbl
push
in
jae
insl
mov
and
cmp
sbb
gs
xor
pushf
add
fprem
fs
flds
loope
fsubrs
mov
mov
lods
pop
cmc
daa
and
xor
lret
loopne
ficompl
addl
cmovge
arpl
sti
bound
hlt
into
push
in
xor
and
rol
dec
sti
out
arpl
loope
pop
pop
bound
jmp
jge
sahf
rcll
test
jno
test
stos
loope
aas
push
fadds
mov
mov
mov
jne
inc
xor
jmp
pop
xchg
ror
cwtl
xchg
pop
pop
imul
sub
jns
lods
mov
cmpsb
sub
shll
sbb
dec
sub
xchg
sti
hlt
ss
jno
mov
xchg
lock
cmc
sbb
mov
adc
int3
int
repnz
jg
cltd
shrb
rcrb
jae
rep
lods
std
mov
add
push
inc
sti
loope
dec
mov
popf
adc
fmul
iret
pop
cmp
bound
mov
nop
shrb
dec
mov
call
push
and
mov
jb
rclb
xor
mov
ja
aaa
dec
mov
int
sbb
adcb
aaa
jbe
incl
je
out
mov
sub
pop
pop
cltd
add
and
add
fildll
das
mov
and
mov
js
in
pop
fwait
push
jecxz
arpl
sub
nop
inc
in
mov
lods
xchg
mov
dec
push
aam
inc
in
mov
pop
je
xchg
xor
or
jno
fdivs
or
fyl2x
imul
pop
sub
test
mov
in
mov
icebp
enter
dec
rolb
inc
bnd
xchg
pop
or
inc
xor
pop
sub
push
mov
pop
lea
cli
cmp
xor
bound
addr16
push
arpl
jno
push
pop
sarb
xchg
xlat
inc
lret
popf
scas
adc
bound
data16
lret
mov
ljmp
int
dec
rcrl
pop
and
dec
xlat
roll
mov
shrb
iret
inc
jae
xchg
inc
fldcw
xorl
mov
rol
jecxz
pop
jo
inc
je
test
icebp
dec
fmull
jae
nop
stc
lea
mov
mov
ss
jge
push
gs
cmpsb
add
push
mov
xchg
jmp
into
sub
jo
test
adc
pushf
mov
shlb
out
arpl
ffree
jbe
popa
push
dec
call
sahf
clc
mov
inc
notl
aam
adcb
mov
aas
jg
add
mov
xor
inc
lcall
push
lret
cmpsb
out
push
test
data16
jecxz
imul
fistps
scas
fdivrs
mov
test
jl
addr16
les
sbb
es
sbb
xor
fdivrl
rcll
cs
mov
insl
test
outsl
xor
sub
or
aam
dec
ljmp
and
sbb
mov
idivl
std
daa
pop
scas
clc
adc
mov
icebp
or
push
push
xor
mull
testl
cs
inc
daa
mov
data16
jo
sbb
fldenv
rcrb
push
xor
add
mov
push
mov
xor
div
mov
xor
mov
imul
mov
sub
xor
lea
call
mov
mov
imul
mov
or
sub
and
mov
sub
cmp
jne
jmp
scas
fistpl
push
xor
aad
pop
in
cmp
adc
pop
add
sbbl
adc
orb
stos
mov
loop
dec
pop
pop
mov
or
jg
clc
cmp
cmp
popa
sbb
insl
push
enter
adc
jne
sbb
sub
mov
lods
xchg
mov
pop
pop
ret
arpl
jl
in
xchg
les
popl
sub
rolb
mov
pop
sub
push
add
cwtl
sub
inc
sub
pop
push
call
je
ret
jg
jnp
inc
faddp
scas
roll
lds
adc
mov
dec
dec
movsb
les
pop
mov
insl
iret
in
and
xchg
cmp
jle
or
xchg
mov
test
popf
test
ljmp
or
in
pop
pop
aad
xchg
xor
daa
mov
cmp
repz
out
xlat
fcmovnu
ja
jo
sbb
mov
pop
push
mov
cmp
pop
pop
jnp
mov
shlb
sbb
ja
rolb
cmp
sahf
and
pop
mov
mov
fcmovbe
in
stos
cmp
stos
imul
jnp
repnz
xchg
mov
gs
pop
adc
adc
add
leave
or
arpl
mov
sub
mov
aaa
sub
mov
and
js
movsl
rorb
lock
cmp
sub
icebp
mov
adc
orb
inc
xor
loop
add
or
std
fwait
mov
mov
cmp
and
fsts
into
clc
push
mov
std
sub
pushf
fidivrs
xor
mov
ja
jno
push
jnp
xor
cmpsb
insb
test
push
pop
lds
ss
ds
in
sbb
into
xchg
jbe
lahf
in
stos
lcall
cmp
in
pusha
andl
out
adc
add
jnp
cltd
or
movsl
aad
movsl
mov
enter
jg
insl
inc
push
fcoms
stos
shrl
xchg
sbb
mov
push
adc
sub
outsb
xchg
mov
xchg
push
and
divb
cmp
dec
xchg
sbb
popa
adc
sahf
hlt
xchg
or
xchg
icebp
mov
outsb
pop
test
fs
xlat
sbb
rcr
sbb
xlat
xor
scas
pop
imul
jge
pop
aas
cli
shrl
mov
sub
cmp
xlat
pusha
jbe
shll
jl
pop
in
xchg
rorl
jl
hlt
popa
cli
fisttpll
scas
push
inc
sub
das
loope
popf
and
push
and
push
sub
adc
les
pushf
dec
sbb
jge
div
sbb
push
jb
jo
aam
lds
gs
int3
popf
cmp
sbb
sti
sbb
cmpsb
mov
subb
jnp
xchg
fidivl
jnp
xlat
lock
ja
xor
aad
dec
enter
xor
out
scas
daa
out
xor
mov
push
call
add
mov
fidivl
test
rcl
sub
pop
push
mov
fistl
fwait
rclb
loop
mov
stc
jae
mov
int
iret
scas
fiadds
xchg
cmp
fistps
and
xor
filds
sub
mov
arpl
push
inc
jecxz
sbb
pop
and
inc
aas
outsl
or
xchg
lock
push
stos
add
fwait
push
push
push
jno
fmuls
ss
inc
pushf
icebp
push
dec
arpl
in
push
xchg
fimuls
in
mov
lcall
sub
dec
fucomp
ficomps
inc
mov
movsl
jne
and
ret
or
pop
mov
jbe
in
inc
mov
sti
push
adc
movsl
cltd
pop
add
outsl
sub
mov
add
jle
sub
or
pavgw
cld
hlt
add
jecxz
test
xchg
ret
mov
outsb
shlb
cmpsb
ss
outsb
adc
lods
add
jle
xchg
lds
push
push
xchg
or
inc
ficoml
or
mull
dec
jb
lock
push
dec
stc
arpl
scas
mov
dec
insb
cli
out
jb
xor
rorb
or
xor
rorb
add
add
and
or
repz
xchg
ret
cmpsb
inc
clc
adc
adc
aam
adc
dec
pop
nop
fwait
mov
sahf
pop
mov
call
repz
sub
jns
pop
mov
xchg
jg
ss
flds
push
and
fists
mov
test
xlat
out
fucomp
fstpl
cmpl
lods
xorl
push
ret
je
fbld
and
jbe
jecxz
sub
sbb
inc
loope
movsl
sub
or
and
mov
jmp
inc
adc
into
xlat
flds
aam
ret
mov
testb
add
push
imul
dec
cmpsb
mov
insl
sbb
fadds
mov
leave
xor
pop
pop
pop
push
xchg
adc
inc
xchg
repnz
lcall
stc
pop
cwtl
push
inc
fidivrl
cmp
adc
out
and
divb
xchg
shl
fistpl
inc
mov
sbb
mov
sahf
movl
xor
push
int3
push
lock
or
and
repnz
leave
push
loop
hlt
jne
or
ret
or
lret
aaa
xchg
mov
mov
sub
es
outsl
repz
iret
lock
jne
scas
inc
mov
lods
pop
rcl
subl
jno
mov
mov
sahf
xchg
pusha
gs
sbb
jnp
mov
mov
repnz
jp
sarl
ret
gs
sbb
rolb
xchg
add
inc
stos
es
push
sbb
fcoms
mov
dec
into
lock
aaa
inc
clc
jmp
or
fmuls
jp
popf
and
sbb
outsl
mov
mov
dec
outsl
nop
jmp
xor
jne
xchg
inc
test
cwtl
sbb
fs
push
xchg
repz
add
xchg
mov
aad
outsb
inc
enter
sbb
adc
mov
mov
push
pop
xchg
pop
cmp
jnp
mov
movsb
int3
test
dec
sar
aad
sti
push
int
sti
in
adc
jmp
and
mov
aad
push
les
jp
aam
loope
outsl
adc
dec
dec
cmp
loop
xor
inc
popl
call
jmp
or
lea
aas
stc
cmpsl
push
into
push
mov
out
in
lock
push
pop
in
out
int3
mov
adc
loope
push
push
mov
cmp
ja
lods
mov
inc
ljmp
dec
cld
mov
cli
ret
dec
aam
mov
repnz
int
inc
mov
in
mov
mov
dec
mov
mov
sub
pop
jb
out
xor
scas
xchg
out
pop
rolb
out
aam
mov
inc
pop
cmpb
dec
clc
push
inc
stos
add
dec
fildl
pushf
mov
mov
outsb
cs
and
cmp
in
mov
int
push
and
cwtl
cwtl
jnp
test
cmc
arpl
fidivrs
pop
rcrl
fwait
and
lods
sbb
sub
mov
push
aam
cwtl
mov
add
mov
pop
je
imulb
sbb
mov
ljmp
adc
jae
push
repnz
inc
xor
es
cltd
repnz
xchg
imul
repnz
cmpsl
aad
fmulp
in
stc
js
movsb
pusha
shl
ja
mov
mov
bound
lock
fwait
cmp
mov
in
aad
mov
mov
mov
inc
orl
les
leave
fs
xchg
iret
mov
scas
pop
push
or
enter
mov
or
aad
int3
push
jbe
scas
icebp
cmp
sbb
and
mov
imul
addr16
lods
jl
rclb
jno
pop
dec
add
fsubrl
mov
testl
mov
or
iret
pushf
push
fdivp
lods
lahf
sub
sub
cli
lcall
sbb
popa
mov
cld
and
fnstcw
ds
push
push
sub
lods
jg
scas
jno
jbe
pusha
inc
int3
push
lods
xchg
aas
inc
sahf
inc
leave
sbbb
dec
push
and
sub
or
dec
inc
and
jbe
leave
outsb
inc
icebp
cmp
pop
pop
xor
div
xor
xor
add
xor
lea
push
mov
mov
imul
mov
and
mov
or
add
mov
and
mov
div
push
mov
add
push
mov
mov
and
xor
and
mov
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
jmp
imul
pop
int3
push
push
outsb
call
adc
push
mov
loope
popf
rcr
repnz
loop
sub
cltd
mov
cs
jmp
jbe
in
mov
xor
pusha
cld
in
shlb
adc
pop
jbe
mov
sub
clc
adc
fdivl
xor
xchg
xor
xlat
std
inc
test
cmp
call
jmp
sbb
xorb
lret
push
mov
in
out
scas
rorl
cld
adc
pusha
inc
imul
xchg
pop
dec
sbb
sbb
mov
xor
and
sub
stos
rclb
arpl
mov
inc
iret
sub
insb
jae
bnd
mov
push
inc
sahf
rorl
out
scas
add
or
arpl
mov
cld
add
jno
ss
mov
cmp
jns
mov
int3
jp
cmp
clc
sarl
adc
icebp
out
push
out
jle
lcall
lea
jo
xchg
int
fcmovu
mov
and
mov
mov
mov
and
scas
jge
iret
mov
mov
mov
jb
sub
lods
jge
mov
or
stc
imul
repnz
cmp
insb
loopne
ljmp
js
out
ja
jg
or
jbe
sbb
cmp
push
adc
lds
mov
and
pop
jb
out
sbb
mov
jle
and
rorb
into
cmc
jecxz,pt
stos
in
test
mov
rorb
adc
pop
dec
push
out
lock
add
cmp
pushf
xor
jmp
and
fbstp
push
scas
rcr
out
sbb
dec
push
sub
inc
jge
mov
call
out
scas
and
addr16
je,pn
divb
inc
adc
lcall
mov
add
push
lock
dec
fistpll
pop
xchg
push
in
xchg
in
mov
stos
inc
popl
iret
fwait
cmp
or
fisubl
pop
test
rolb
insb
insl
or
add
adc
addr16
cld
mov
call
dec
mov
pop
aam
jo
movsb
data16
iret
mov
dec
pop
aad
lods
cmp
ficompl
incl
jbe
push
popl
mov
js
lea
movsl
gs
dec
jp
daa
pop
push
inc
aas
adc
or
insl
adc
xchg
jg
adcl
cmc
jg
jp
rorl
sub
cmp
lcall
fildl
in
xor
incb
push
aaa
stc
loope
and
mov
repz
adc
sub
pop
jns
xor
jp
xchg
add
dec
push
fstp
add
push
mov
jnp
cltd
imull
sub
repnz
jo
inc
scas
sub
add
cli
fstpt
jp
cwtl
or
mov
fsubl
xor
dec
lahf
mov
out
shr
mov
lods
cs
jg
mov
nop
aaa
adc
fcoms
xchg
mov
and
mov
mov
mov
leave
icebp
sub
fcmovnb
jnp
insl
sar
mov
movsb
jno
lahf
ds
sub
loope
shrl
mov
mov
sbb
loop
ss
xchg
in
sub
and
sbb
dec
add
mov
mov
idiv
scas
bound
push
in
dec
push
ret
fisubl
je
push
fsubr
loop
das
loop
in
inc
in
scas
loopne
sub
orl
lret
xor
mov
sarl
inc
inc
movsl
dec
mov
sahf
push
pop
aam
mov
and
jmp
inc
sub
cmp
push
jnp
xchg
sub
pandn
sahf
add
shr
mov
adc
mov
add
jecxz
mov
repnz
add
or
decl
aaa
mov
mov
inc
push
repnz
inc
int
js
test
scas
mov
mov
lahf
jmp
jmp
dec
mov
pop
loope
aad
pop
lock
bound
popa
fdivrl
xchg
mov
loopne
or
adc
mov
sub
testb
and
test
sub
sub
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
jmp
lahf
bound
push
mov
dec
test
cli
adc
cmpsb
adc
hlt
add
mov
movsl
lahf
push
xchg
dec
pushf
sbb
shl
mov
ss
jp
dec
dec
mov
xchg
adc
repnz
mov
stos
mov
add
pop
mov
fldt
mov
inc
xlat
xchg
jp
adc
shlb
cmp
xchg
test
divb
shrb
js
not
mov
fisubl
sbb
repnz
imul
cli
and
dec
jp
mov
imul
jne
cmp
sahf
inc
cmp
enter
int
rcrb
or
push
je
rolb
and
inc
pop
rcrb
stos
inc
scas
aas
push
js
ret
jge
mov
pushf
jno
loope
std
lds
clc
out
adc
add
sub
test
add
pop
push
test
fs
or
dec
jae
movsl
push
int
xchg
jmp
es
dec
jp
add
jno
dec
or
adc
jmp
add
xor
sub
jp
xchg
cmp
sub
out
daa
cld
jae
in
jns
lods
repnz
xor
xchg
out
enter
in
scas
mov
mov
adc
mov
adc
dec
adc
out
or
sbb
cmp
mov
jmp
push
mov
imul
int3
push
xchg
sbbl
xchg
add
adc
fildll
imul
inc
repz
out
sbb
ja
jl
or
dec
lds
lahf
mov
adc
scas
imul
test
push
jecxz
test
das
leave
jae
push
xchg
stc
gs
mov
push
or
sahf
hlt
mov
add
neg
mov
xchg
jns
lods
jp
adc
lcall
bound
jecxz
mov
repz
out
mov
inc
inc
add
das
cmp
jno
adc
sub
mov
pop
ds
sub
xchg
out
lods
std
inc
pop
mov
mov
mov
pop
pop
push
sbb
sbb
xchg
jmp
fists
xor
sub
into
and
adcb
ficoml
sub
mov
push
test
or
dec
cmp
icebp
dec
sbb
into
adc
lahf
mov
adc
cmpsl
pop
int3
xor
xchg
test
sbb
shl
mov
pop
loope
pop
cmp
in
mov
inc
mov
xor
push
pop
flds
push
or
inc
stos
cmp
inc
dec
lret
or
sub
scas
cli
inc
aaa
jecxz
hlt
inc
push
adc
shr
sbb
rcll
and
xor
aam
aas
push
mov
or
cld
xor
dec
mov
mov
and
mov
mov
dec
cs
xor
pop
mov
cli
dec
movsb
cmp
jg
and
call
das
xchg
fwait
adc
out
ss
loope
inc
xchg
jmp
loopne
stc
fistpll
inc
daa
adc
mov
jns
movsb
sub
in
mov
inc
scas
dec
sbb
jmp
popa
add
fiadds
jne
mov
mov
add
push
cmp
mov
lods
add
stos
movsb
jns
jno
cmpb
lds
addr16
popa
inc
call
xchg
mov
lods
cmp
xor
cmc
ja
dec
aaa
jmp
call
test
dec
popf
mov
cmp
pop
inc
mov
movsb
sub
push
lock
lock
sbb
jns
fs
imul
in
sub
cmpsb
roll
cld
mov
xor
imul
mov
inc
mov
leave
sub
sar
test
sahf
sahf
test
or
es
jns
adc
jo
hlt
and
les
dec
data16
lock
push
cld
inc
sbb
std
mov
sub
scas
pop
dec
imul
xchg
xchg
scas
fists
pop
gs
iret
xorb
push
roll
mov
insl
fstl
mov
mov
cmp
pop
cmp
cmc
out
iret
out
sub
in
in
cmc
cmpsl
jle
mov
dec
in
sub
aad
or
and
loopne
aam
push
sbb
rorl
stos
stc
adc
mov
add
push
mov
into
mov
adcl
jno
mov
pop
pop
fsubs
xchg
or
mov
dec
jne
pop
les
mov
in
ja
push
xchg
scas
sahf
insb
int3
dec
divl
out
cmp
adc
inc
stos
mov
dec
icebp
dec
je
jo
aas
push
ja
add
jl
and
test
into
orb
aaa
pop
fisttpl
andl
out
mov
fiadds
aas
pushf
push
call
mov
mov
or
inc
pop
fistl
and
movsl
add
frstor
adc
loope
add
push
push
cmp
js
fwait
test
lods
bound
insb
push
mov
cmp
mov
sub
push
rcl
mov
leave
cmp
mov
iret
test
psllq
cltd
push
loope
orl
mov
mov
aad
lcall
push
fcompl
push
push
lcall
lcall
push
jp
or
jne
aaa
movsb
or
outsl
inc
xor
sub
lahf
ja
mov
aam
dec
jge
loope
jecxz
or
notl
dec
mov
xchg
dec
push
fs
call
mov
repnz
push
jp
out
mov
mov
je
mov
pushf
and
pop
cwtl
sbb
mov
scas
mov
sub
sti
pop
push
sub
pop
pushf
push
pop
leave
push
mov
mov
jno
adc
xlat
inc
xlat
cmp
add
or
scas
xor
test
inc
jb
and
fisubs
pushf
and
push
adc
jl
jae
int
ret
jmp
daa
mov
mov
les
js
xchg
push
and
cmc
push
aam
sub
scas
fcmovb
out
mov
movsl
pop
scas
test
or
stos
cwtl
shrb
lods
jg
sarb
cmc
rcl
out
enter
loopne
xchg
push
test
outsl
jno
inc
and
cld
pushf
jp
in
add
or
mov
adc
dec
cmp
fsubrs
mov
loope
sub
sbb
hlt
sbb
jns
or
cmpsl
fisubs
cmp
xlat
cmpsb
jo
mov
cmpl
into
lcall
jg
ja
insl
sbb
xchg
lods
js
pop
addr16
fisubs
jge
arpl
in
jbe
and
hlt
sub
hlt
test
inc
test
mov
pop
cmp
jmp
loop
xchg
push
inc
testb
gs
lock
and
lret
addr16
mov
inc
filds
sub
mov
testl
pop
aaa
sub
sbbb
xor
mov
cs
nop
data16
sbb
push
test
cmp
leave
leave
push
and
ss
push
js
mov
mov
mov
mov
cmpsb
shll
cwtl
cmp
inc
mov
mov
lcall
dec
xchg
mov
lds
leave
jl
mov
out
adc
cmc
add
mov
xor
ret
hlt
imul
pop
pop
mov
outsl
enter
lcall
jge
adc
ja
mov
mov
aaa
add
jecxz
inc
push
nop
int
ss
aas
bound
test
imul
xchg
ds
dec
push
das
or
add
adc
aas
mov
psllq
pop
mov
or
shlb
stos
mov
movsl
jae
ja
inc
sub
orl
std
lcall
cmp
sbb
mov
call
adc
pop
call
icebp
or
scas
fnstcw
orb
xchg
adc
aad
mov
push
out
ljmp
int3
ret
dec
scas
dec
lods
out
movsb
add
lcall
data16
sub
in
psrad
adc
sahf
add
or
in
dec
cmp
stos
adc
jge
cmp
andb
jo
movsb
mov
push
aam
xor
insb
movsl
and
popa
mov
lahf
hlt
mov
aam
xor
es
cmp
xor
adc
xchg
and
xor
push
setae
adc
xor
stc
arpl
pop
inc
mov
out
xchg
push
not
pop
lret
aam
jp
imulb
in
mov
mov
sub
mov
mov
mov
sub
jmp
sbb
xchg
and
ja
test
or
adc
mov
outsb
xchg
cmpsb
dec
mov
push
inc
jle
cmp
stos
int3
fists
cmpl
iret
in
fidivrl
pop
insb
jbe
scas
out
sub
jge
shrl
sbb
jb
inc
ret
jecxz
adc
inc
push
fidivl
outsb
dec
out
and
mov
addr16
jnp
mov
and
xchg
aaa
insl
mov
mov
ret
mov
test
ret
repz
lock
xor
bound
int3
push
insb
addr16
adc
mov
sbb
inc
xor
fimuls
xchg
loope
mov
out
mov
add
ror
pop
hlt
or
push
jne
push
cltd
inc
add
jg
pop
fcompl
jmp
jecxz,pn
mov
mov
xor
aas
jmp
push
daa
cmovns
push
test
lea
jge
mov
aas
inc
cwtl
inc
or
pop
or
inc
fcomps
arpl
xchg
loop
inc
xchg
dec
lods
adc
sbb
inc
mov
pushf
es
shll
push
and
pop
mov
lret
add
bound
push
addl
mov
lcall
daa
fildll
or
cmp
adc
gs
jne
mov
ljmp
pop
popa
jno
test
cmp
inc
fldcw
mov
rcrb
out
jecxz
push
mov
dec
loope
xchg
clc
push
push
stc
jae
sbb
pop
xchg
shrl
or
movb
ljmp
loopne
mov
dec
cmp
xor
mov
cmp
popf
cli
dec
push
xchg
jae
xchg
popa
pop
push
fildll
mov
shrl
je
popf
decl
add
cmc
adc
aas
jl
pusha
imul
inc
in
push
adc
dec
imul
sub
adc
je
xchg
mov
mov
or
pop
sub
add
cmp
int
and
lret
insl
sub
cmp
stos
addr16
dec
mov
sbb
je
stos
jg
test
shll
inc
jl
lcall
popf
sbb
lods
aad
jge
sub
dec
daa
sub
push
aad
in
out
inc
addr16
rcr
pushf
in
jns
or
dec
dec
fs
jo
pusha
in
ret
push
cmpsl
push
sbb
inc
mov
mov
pop
enter
sbb
jmp
roll
mov
xchg
rorb
sub
mov
adc
jle
iret
das
mov
movntps
push
mov
dec
xchg
jl
rclb
aam
cmpsl
and
mov
and
mov
shrb
or
jl
idiv
xorl
cltd
mov
xor
dec
xchg
cmp
dec
iret
and
xchg
push
jl
repnz
sub
xchg
mov
ljmp
pop
xorl
dec
insb
dec
test
inc
jmp
sbb
je
sub
mov
orb
test
ret
jge
enter
iret
ljmp
mull
sbb
cmp
and
jo
mov
push
or
push
mov
lret
cmpsb
in
cmp
or
or
xchg
icebp
jnp
mov
mov
sbb
jl
aam
stos
mov
popa
test
mov
add
and
inc
cmp
mov
ljmp
lock
sbb
jle
dec
jg
into
mov
pop
jl
sbb
cltd
dec
jnp
and
test
and
dec
lret
dec
push
test
lret
lods
test
loop
push
or
and
cmpsb
dec
pushl
in
jbe
or
idiv
in
jne
push
int3
jb
test
add
cmp
or
das
pop
fisubrl
lock
xchg
add
or
push
pop
mov
inc
push
lahf
dec
mov
hlt
push
xchg
mov
stc
repnz
shlb
scas
movsb
outsb
sti
xor
add
in
je
leave
sahf
mov
or
in
xchg
jmp
subb
push
stos
decb
push
add
stc
test
sarl
xor
popf
inc
clc
cld
adc
ret
loope
test
or
imul
jmp
mov
test
adc
inc
and
testb
in
clc
adc
adc
xor
xchg
sbb
shrb
mov
or
jl
cwtl
mov
mov
mov
repz
inc
ret
mov
test
out
mov
inc
icebp
test
adc
fisttps
pop
mov
lcall
aam
and
nop
jne
rcrb
inc
mov
xchg
mov
cmc
cmpsl
test
adc
hlt
inc
popa
and
cmp
mov
btc
cmp
inc
xor
cli
cmp
sarl
add
mov
mov
cwtl
idiv
sahf
push
sbb
cli
daa
sbb
jp
je
sub
mov
jne
mov
sbb
jle
inc
adc
xchg
adc
and
jno
pop
adc
or
jbe
fsubrs
sub
cmpsb
sbb
int
pop
jno
jle
outsb
imul
dec
sbb
cmp
sbb
leave
mov
xchg
cltd
nop
mov
sbb
std
popf
clc
andl
repnz
mov
std
and
inc
arpl
daa
cmc
sti
xchg
loope
cltd
aaa
inc
push
pushf
js
loopne
ja
cmp
push
adc
scas
into
mov
test
push
push
pop
bnd
cmp
test
pop
repnz
mov
mov
pop
cli
mov
mov
test
out
inc
test
mov
mov
sahf
inc
add
add
cmp
xlat
stos
les
in
aam
in
adc
mov
sbb
outsl
and
add
jmp
jb
jge
or
ljmp
je
loopne
pop
inc
and
sbb
inc
icebp
xchg
mov
ja
jo
add
lods
cs
shll
fisubs
inc
sbb
bndldx
cmp
sbb
sub
jnp
js
xchg
sahf
loope
mov
shlb
aaa
test
scas
mov
add
arpl
mov
les
loopne
xchg
inc
cld
pop
leave
ret
and
dec
lods
or
testb
mov
cmp
cmpsb
cmp
xchg
out
iret
pop
sbb
xor
stos
adc
sub
xor
mov
sbb
inc
ja
mov
pop
orb
mov
call
lahf
mov
mov
test
out
push
lcall
loop
mov
lret
cmp
xchg
mov
jg
dec
mov
aam
mov
jb
rcll
lea
inc
xchg
out
add
mov
stos
or
inc
mov
inc
shll
fmulp
add
orb
pushf
jecxz
mov
fcmovb
adc
aam
jne
mov
jnp
test
mov
clc
mov
and
mov
push
ret
stos
movsl
mov
ficomps
jne
adc
test
xchg
and
pop
in
in
pop
xchg
mov
add
pop
ficomps
insl
lea
mov
aas
cmp
jno
fidivrl
xor
into
mov
jae
stos
inc
popa
or
scas
add
jge
dec
mov
dec
int3
ret
insb
loopne
loopne
cld
fldl
xchg
pop
xor
jg
sbbl
mull
jp
jge
inc
inc
lock
imul
cmpsl
cmp
sub
xor
fwait
icebp
pushl
sahf
push
mov
and
xor
cmc
ljmp
jecxz
jno
xor
std
jnp
sub
les
fnstcw
cmp
or
les
mov
in
cs
in
jg
pop
loope
lret
sbb
loop
std
clc
test
xchg
inc
sbb
sbb
stos
div
aaa
mov
mov
leave
rorl
jns
jmp
push
xchg
sub
orl
adc
add
xchg
mov
xor
inc
jns
in
movsb
cmc
stc
movsl
nop
cmp
mov
xchg
in
inc
icebp
cld
mov
jno
sbbb
cltd
mov
cmpsb
or
mov
lcall
pop
cltd
mov
mov
jb
orb
jne
push
rcr
add
icebp
xchg
add
clc
adc
mov
lock
push
gs
mov
mov
mov
mov
jmp
notl
sub
das
cmc
ljmp
add
adc
jecxz
adc
pop
nop
inc
xchg
fs
cld
mov
ss
or
adc
push
pop
daa
pop
stos
xor
adc
int
mov
cli
mov
pop
xchg
test
adc
xor
mov
nop
lcall
repz
andb
sbb
aad
mov
in
inc
mov
movsb
xor
xor
test
jp
mov
and
dec
fistpl
mov
clc
orl
cmpsl
push
xchg
dec
cmc
xchg
js
cltd
outsb
push
adc
mov
stos
cmp
pushf
sbbb
shr
out
ss
sub
cmp
out
repnz
in
push
out
push
pop
mov
mov
jle
js
xor
test
sub
lea
out
addr16
faddl
dec
xchg
ljmp
mov
fcomi
or
cli
loop
and
insl
inc
adc
or
xor
sahf
or
pop
xchg
inc
adc
cli
add
mov
fcoms
fstp
xor
aam
stos
xchg
push
aas
and
sbb
adc
out
shlb
mov
popa
stos
add
push
into
jmp
or
cs
gs
outsl
fwait
stos
in
cmp
shll
mov
pop
scas
cmpsl
or
sub
fisttpll
test
xor
or
mov
ss
notb
addr16
lods
mov
rcrb
push
cmp
cmp
add
pop
pop
rcr
popa
cld
jmp
out
enter
mov
sahf
fstps
mov
add
dec
dec
in
mov
xchg
and
dec
dec
push
xor
dec
mov
mov
cld
sub
pop
or
or
aaa
packsswb
dec
outsb
jl
movsb
adc
test
and
sub
cmpsl
xor
fnsave
dec
mov
mov
into
mov
enter
popa
xchg
cltd
dec
adc
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
mov
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
and
add
xor
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
xor
mov
mov
lea
mov
mov
or
mov
mov
or
mov
mov
sub
add
xor
xor
lea
mov
sub
mov
movl
movl
movl
movl
movl
mov
and
add
mov
and
mov
imul
mov
xor
div
mov
push
sub
mov
mov
movl
movl
mov
sub
xor
pop
div
mov
xor
push
sub
add
mov
mov
movl
movl
mov
pop
div
mov
xor
xor
imul
sub
div
mov
xor
mov
movl
movl
movl
movl
movl
mov
mov
and
mov
div
xor
add
mov
div
sub
leave
ret
push
mov
sub
push
push
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
xor
mov
xor
mov
or
mov
mov
mov
or
or
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
mov
add
adc
and
and
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
mov
xor
or
mov
or
lea
xor
mov
mov
and
imul
mov
xor
sub
mov
and
sub
mov
mov
xor
or
xor
div
mov
push
push
sub
lea
mov
mov
mov
xor
imul
and
lea
mov
add
mov
mov
mov
mov
and
and
and
and
push
push
call
mov
xor
xor
add
adc
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
and
xor
div
mov
sub
mov
add
mov
add
add
add
mov
pop
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
mov
mov
push
mov
push
xor
xor
push
push
call
push
mov
push
push
push
call
mov
mov
sub
mov
sbb
add
adc
mov
mov
xor
push
push
xor
xor
push
push
shr
mov
call
push
push
push
push
call
mov
mov
sub
sbb
add
adc
shld
shl
or
mov
xor
or
mov
xor
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
push
push
and
and
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
push
mov
push
xor
xor
push
push
call
mov
mov
add
adc
add
adc
xor
xor
mov
shrd
mov
mov
mov
mov
mov
xor
mov
xor
xor
mov
push
push
xor
push
push
shr
call
mov
mov
add
xor
or
sub
shl
or
mov
mov
mov
mov
mov
mov
or
or
add
adc
and
mov
and
mov
xor
xor
and
and
add
mov
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
sub
mov
and
imul
mov
mov
xor
mov
sub
mov
xor
add
cmp
jne
mov
mov
or
mov
imul
add
mov
push
mov
push
mov
or
mov
imul
add
mov
or
or
mov
add
add
mov
xor
xor
mov
mov
shl
mov
add
add
mov
mov
mov
imul
or
imul
mov
sub
pop
pop
cmp
je
mov
jmp
mov
mov
sub
add
add
add
xor
jmp
movl
movl
mov
mov
or
sub
add
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
imul
or
mov
mov
xor
mov
and
mov
or
and
xor
sub
mov
sub
mov
mov
xor
add
div
mov
mov
or
mov
sub
add
cmp
ja
push
movl
movl
movl
movl
movl
mov
mov
mov
and
xor
div
mov
mov
xor
or
xor
div
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
xor
and
xor
mov
div
add
mov
mov
xor
mov
and
mov
or
and
xor
mov
sub
mov
mov
xor
add
div
mov
or
mov
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
sub
push
push
mov
mov
sub
or
mov
mov
shrd
mov
mov
sub
imul
shr
sbb
mov
mov
xorl
mov
mov
mov
and
xor
xor
notl
or
sub
mov
mov
and
shl
sub
mov
not
shrd
dec
xor
add
shr
or
mov
cmpl
jg
xorl
jmp
push
push
push
push
push
push
push
call
mov
xor
or
mov
mov
mov
sub
mov
sbbl
mov
addl
mov
mov
mov
xorl
mov
xor
xor
xor
xor
xor
adc
mov
xor
cmpl
jge
jmp
push
pushl
pushl
pushl
call
shl
mov
mov
shld
shl
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
sbb
mov
mov
xor
mov
mov
xorl
xor
sbbl
xor
orl
xor
shld
movl
shl
cmp
movl
jne
cmp
movl
je
addl
mov
mov
xorl
shl
cmpl
jbe
jmp
call
mov
xor
shr
or
mov
mov
mov
cmpl
jb
and
movl
jmp
pushl
pushl
pushl
push
call
mov
mov
mov
push
pop
orl
sub
xorl
mov
add
xorl
mov
lea
add
mov
cmpl
jle
mov
and
mov
and
jmp
push
call
mov
mov
xor
shr
shl
or
mov
adc
movl
mov
inc
mov
andl
xor
shr
orl
shl
or
subl
push
adcl
lea
addl
push
lea
push
call
or
mov
mov
xor
neg
shr
shl
andl
or
or
push
lea
push
mov
orl
mov
shrd
shr
mov
mov
xorl
xor
xor
sbbl
or
addl
lea
push
sbbl
shl
call
decl
mov
mov
cmpl
jl
add
jmp
pushl
call
xor
shl
shr
or
push
lea
push
mov
cmpl
jge
xor
xor
add
adc
mov
jmp
push
push
push
push
pushl
push
pushl
push
push
call
mov
shrd
orl
shr
mov
mov
sbbl
xor
shl
addl
xor
movl
or
negl
lea
xorl
push
sbbl
call
adc
mov
cmpl
jl
adcl
jmp
push
pushl
push
push
pushl
call
mov
xor
shl
shr
or
push
lea
mov
and
mov
push
cmpl
jle
subl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
addl
xor
movl
or
shl
mov
mov
sbbl
shrd
shr
mov
sub
mov
xor
xor
or
addl
add
sbbl
lea
addl
push
orl
shl
negl
call
mov
not
mov
shl
xor
shr
cmpl
jle
xor
jmp
pushl
push
pushl
pushl
call
or
push
lea
push
mov
mov
adc
shrd
shr
mov
mov
xor
cmpl
jbe
subl
sbb
jmp
pushl
push
call
shl
mov
xor
or
mov
shrd
orl
shr
mov
cmpl
jl
jmp
push
push
pushl
call
mov
xor
xor
or
add
mov
shl
or
mov
sub
shrd
shr
decl
mov
add
mov
sbbl
xor
subl
xor
orl
or
andl
add
lea
push
shl
call
mov
mov
sub
and
mov
cmpl
jl
jmp
push
push
push
pushl
call
mov
xor
shr
shl
or
mov
lea
push
dec
mov
mov
cmpl
ja
xor
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
cmpl
jle
add
jmp
push
push
pushl
pushl
pushl
call
or
push
mov
mov
push
pushl
shl
xorl
call
sbb
lea
adcl
push
mov
mov
sub
xor
mov
mov
add
mov
mov
xor
mov
shrd
adc
shr
xor
xor
and
mov
cmpl
jle
adcl
jmp
push
call
mov
xor
xor
or
push
mov
push
pushl
sbbl
shl
subl
call
sbb
mov
mov
mov
add
mov
and
mov
mov
not
mov
mov
rol
mov
and
mov
mov
adcl
xor
movl
mov
cmp
je
movl
mov
mov
movl
mov
xor
mov
mov
mov
mov
xor
xor
shld
shl
mov
movl
mov
mov
xor
inc
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
sbb
mov
mov
or
mov
jne
neg
mov
mul
ret
addl
push
sbbl
mul
and
mov
mov
mull
addl
add
mov
mul
add
pop
ret
push
mov
sub
push
push
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
mov
mov
sub
mov
or
mov
imul
mov
sub
or
add
sub
shr
lea
mov
mov
mov
and
xor
xor
div
mov
sub
cmp
ja
push
movl
movl
mov
mov
xor
sub
and
xor
mov
sub
sub
mov
mov
xor
mov
div
mov
xor
sub
div
mov
mov
add
sub
mov
mov
mov
sub
or
mov
xor
xor
add
mov
sub
or
add
shr
lea
mov
mov
mov
and
xor
xor
div
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
xor
push
mov
inc
pushl
pushl
call
test
je
mov
mov
mov
xor
or
add
mov
mov
xor
add
sbb
mov
mov
cmpl
jg
sbb
jmp
push
push
push
pushl
push
call
movzwl
mov
xor
mov
sub
mov
or
cmpl
jle
jmp
push
push
pushl
push
call
mov
imul
movzwl
and
mov
mov
mov
and
mov
mov
or
mov
movl
cmp
jne
movl
inc
movl
xor
movl
movl
cmpl
ja
xor
or
jmp
pushl
call
movl
movl
mov
mov
and
xorl
sub
xorl
or
addl
mov
sub
cmpl
jb
sub
jmp
pushl
push
pushl
call
pushl
mov
mov
imul
xor
div
or
mov
orl
pushl
addl
pushl
xorl
pushl
imul
sbb
mov
xorl
sub
incl
pushl
call
adc
movl
mov
xor
add
sub
movl
sbbl
mov
or
movl
orl
movl
cmpl
jl
sbb
jmp
push
pushl
push
push
pushl
call
movl
mov
xor
mov
div
mov
subl
xor
adcl
xor
or
sub
not
mov
pushl
cmpl
jbe
andl
jmp
push
push
push
push
call
mov
and
imul
mov
xor
pushl
or
mov
xorl
div
mov
subl
xor
xor
subl
div
cmpl
jle
andl
sbb
jmp
push
push
push
pushl
call
mov
xor
or
div
mov
sub
addl
pushl
subl
pushl
call
andl
movl
movl
cmpl
jbe
and
jmp
push
push
pushl
push
call
mov
mov
and
or
or
mov
orl
movl
movl
xorl
movl
dec
movl
cmp
movl
jne
addl
movl
cmpl
jl
inc
jmp
push
call
mov
mov
movl
mov
call
lea
mov
lea
or
mov
mov
or
mov
mov
decl
mov
xor
xor
shl
shr
or
cmpl
ja
jmp
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
movl
shrd
cmpl
jg
mov
mov
xor
jmp
push
call
shr
mov
mov
mov
movl
xor
xor
or
subl
mov
push
pushl
xorl
lea
addl
push
shl
call
lea
orl
push
sbbl
mov
mov
orl
lea
sbbl
push
orl
mov
andl
lea
mov
mov
addl
mov
sbbl
push
call
movl
push
sbbl
push
xorl
pushl
addl
call
mov
add
mov
xorl
mov
mov
orl
shr
xorl
shl
subl
or
mov
adcl
xor
mov
addl
lea
sbb
mov
lea
cmpl
jle
inc
jmp
pushl
push
push
call
mov
mov
sub
lea
xor
movl
mov
xor
movl
mov
xor
mov
mov
cmpl
jge
dec
jmp
push
push
call
mov
or
or
push
push
push
push
call
cmpl
ja
notl
jmp
pushl
push
push
push
call
or
mov
or
mov
movl
movl
movl
cmpl
jle
jmp
pushl
call
push
movl
mov
mov
push
push
push
call
mov
sub
mov
addl
and
and
mov
xor
xor
sub
sub
mov
cmpl
jb
or
jmp
push
pushl
call
mov
add
adc
xor
xor
cmp
movl
jb
ja
movl
cmp
movl
jbe
mov
or
mov
movl
movl
movl
xor
movl
movl
movl
mov
andl
mov
orl
mov
add
mov
adcl
and
incl
and
or
xorl
or
xorl
add
mov
movl
adc
mov
andl
add
movl
mov
mov
adc
mov
cmpl
jl
orl
jmp
pushl
call
movl
movl
movl
movl
movl
movl
mov
xor
mov
mov
add
mov
xor
orl
xor
orl
and
mov
adcl
and
mov
push
push
sbbl
push
push
movl
call
sub
mov
sub
mov
add
movl
adc
or
or
cmp
movl
jne
movl
cmp
je
cmpl
jg
or
jmp
push
pushl
push
call
mov
mov
mov
xor
xor
xor
orl
shld
movl
shl
movl
cmp
jne
cmp
movl
je
mov
movl
cmp
je
incl
mov
mov
mov
mov
cmpl
jg
andl
jmp
push
call
xor
xor
shrd
mov
shr
shl
or
mov
adcl
xor
orl
or
movl
cltd
movl
cmp
jne
movl
cmp
jne
movl
sub
movl
cmpl
ja
jmp
push
pushl
call
mov
mov
mov
mov
xor
xor
xor
addl
shld
shl
movl
cmp
movl
jne
movl
cmp
movl
jne
xorl
movl
xor
mov
mov
mov
sub
shrd
add
shr
mov
sub
mov
subl
xor
adcl
shl
xor
or
movl
mov
mov
cmp
movl
jne
addl
movb
orl
movb
sbbl
mov
decl
mov
sbbl
add
movzbl
addl
cltd
movzbl
adcl
idiv
mov
orl
movb
orl
movb
andl
movb
orl
mov
mov
and
imul
mov
and
mov
xor
cmp
je
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
mov
xor
mov
sub
mov
sbb
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
cmp
jb
ja
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
xor
inc
mov
mov
mov
mov
mov
mov
mov
movzwl
movzwl
and
mov
xor
cltd
movzwl
idiv
push
pop
mov
xor
inc
mov
mov
mov
mov
movzwl
cltd
idiv
mov
movzwl
movzwl
cltd
idiv
mov
add
cmp
jb
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
mov
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
mov
mov
mov
movzwl
mov
imul
mov
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shl
shr
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
dec
movl
movl
cmpl
jbe
inc
jmp
push
push
pushl
call
mov
add
xor
mov
xor
xor
and
mov
orl
movl
movl
mov
xor
cmpl
jb
sub
jmp
push
pushl
call
mov
imul
add
or
sub
mov
sbb
movl
movl
adc
movl
orl
movl
movl
xor
xor
and
mov
movl
sbb
mov
imul
movzbl
or
mov
mov
sub
xor
cmpl
jb
adc
jmp
pushl
pushl
call
mov
xor
and
mov
mov
and
cmpl
jb
jmp
push
call
sub
mov
and
xor
mov
add
mov
movl
movl
movl
xor
movl
mov
mov
or
mov
adcl
xor
div
andl
add
and
mov
subl
imul
and
sub
mov
andl
movl
sub
movl
cmpl
jbe
xor
jmp
push
push
push
call
movl
mov
mov
lea
shr
mov
subl
xor
orl
and
add
sub
cmpl
jg
and
jmp
call
mov
movl
movl
movl
mov
and
cmpl
jbe
neg
jmp
call
mov
sub
add
mov
and
mov
orl
sub
cmpl
jl
xorl
jmp
pushl
pushl
pushl
push
call
mov
movl
movl
movl
mov
add
adc
mov
sub
sub
add
xor
mov
movl
movl
movl
mov
sub
mov
sbbl
lea
andl
imul
mov
decl
xor
xor
mov
sbb
sub
cmpl
ja
mov
xor
jmp
push
push
pushl
call
mov
movl
movl
movl
mov
mov
sub
add
xorl
or
movzwl
sub
sub
cmpl
jge
jmp
push
push
push
call
mov
xor
sub
mov
movl
movl
movl
cmpl
jge
add
jmp
pushl
call
movl
movl
movl
movl
movl
mov
cmpl
jbe
add
jmp
pushl
call
mov
sub
add
mov
sub
mov
orl
sub
xorl
add
push
andl
call
mov
imul
mov
dec
xor
mov
cmpl
jb
xor
andl
jmp
pushl
push
call
lea
mov
and
mov
sub
add
mov
movl
movl
movl
mov
add
movl
cmpl
jle
jmp
pushl
pushl
call
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
mov
mov
notl
mov
subl
xor
xor
and
sub
mov
sbb
lea
mov
mov
mov
xor
xor
sub
add
mov
cmpl
jg
or
jmp
pushl
push
push
push
pushl
call
mov
mov
imul
and
sub
sub
add
mov
movzbl
sbb
lea
cmpl
jb
xor
or
mov
sub
xor
or
jmp
call
mov
adc
movl
or
movl
cmpl
jbe
jmp
push
call
movl
movl
mov
mov
mov
xor
xor
movl
mov
call
adc
mov
mov
adc
mov
sub
mov
add
mov
xor
addl
xor
xorl
mov
sbbl
call
sbbl
or
or
cmpl
jbe
jmp
push
pushl
call
mov
mov
xor
xor
mov
call
mov
add
mov
sbbl
mov
mov
add
mov
sbbl
xor
xor
mov
add
mov
mov
andl
mov
subl
mov
call
mov
mov
and
mov
adcl
or
mov
or
push
push
push
xorl
push
adcl
call
movl
mov
cmp
movl
jne
cmpl
jb
inc
jmp
push
push
pushl
push
call
mov
mov
xor
xor
mov
call
and
mov
adcl
mov
mov
and
mov
add
mov
xor
xor
subl
mov
sbbl
call
sbbl
or
or
cmpl
ja
jmp
pushl
push
pushl
push
push
call
mov
mov
xor
xor
mov
call
mov
adc
mov
mov
movzbl
adc
mov
subl
xor
decl
xor
addl
mov
mov
mov
adcl
call
subl
or
adc
mov
or
orl
push
xorl
push
push
sbbl
push
call
movl
mov
movl
jmp
movl
jmp
lea
movzwl
or
mov
mov
xor
mov
not
movl
mov
sub
xor
sbb
shr
mov
xor
addl
shl
or
or
mov
sub
mov
dec
mov
or
mov
orl
mov
sbb
mov
and
mov
sbbl
xor
andl
xor
mov
adcl
call
mov
sbb
mov
add
mov
cmpl
jg
subl
jmp
push
call
mov
xor
xor
mov
call
or
and
or
xor
mov
cmpl
jb
jmp
pushl
push
call
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
xor
mov
mov
subl
mov
adcl
mov
call
sub
mov
orl
or
mov
or
andl
push
incl
push
push
orl
push
call
mov
movl
cmp
je
mov
mov
xor
orl
xor
andl
mov
call
mov
mov
dec
mov
cmpl
ja
jmp
pushl
call
mov
xor
xor
mov
call
or
or
mov
xorl
imul
addl
add
mov
mov
mov
mov
jmp
jmp
mov
movl
mov
orl
xor
xor
mov
notl
call
sbb
mov
cmpl
jbe
mov
sub
jmp
pushl
push
pushl
call
mov
mov
mov
xor
xor
adcl
mov
addl
call
orl
or
or
or
sbb
mov
movzbl
or
mov
xor
xor
adcl
mov
call
negl
mov
or
mov
cmpl
jg
adc
jmp
pushl
push
push
pushl
call
mov
mov
xor
xor
mov
mov
subl
mov
adcl
call
xorl
or
mov
sbbl
or
orl
push
andl
push
push
sbbl
push
addl
call
movl
mov
jmp
or
mov
cmpl
jle
or
jmp
push
push
call
mov
xor
xor
mov
call
mov
mov
cmpl
jle
jmp
push
push
pushl
pushl
call
mov
mov
xor
xor
mov
call
or
or
movl
mov
movl
jmp
cmpl
ja
movl
sbbl
jmp
pushl
pushl
push
push
pushl
pushl
push
call
mov
mov
xor
xor
mov
subl
call
addl
mov
adc
mov
sbb
mov
not
mov
xor
xorl
xor
subl
mov
call
add
or
or
or
mov
cmpl
jg
jmp
push
push
push
call
mov
or
mov
xor
imul
and
add
sbb
mov
lea
cmpl
jle
mov
sub
jmp
push
push
pushl
push
pushl
call
mov
movl
movl
movl
movl
movl
movl
or
movl
movl
and
movl
cmpl
ja
and
jmp
push
call
mov
add
mov
or
add
mov
adc
imul
orl
xor
mov
add
add
sub
mov
cmpl
jb
movzbl
and
mov
mov
and
mov
jmp
push
push
pushl
push
pushl
pushl
push
push
push
pushl
push
push
push
pushl
call
and
cmpl
jb
add
jmp
push
push
push
push
call
sub
mov
sub
mov
sub
mov
xor
and
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
mov
lea
mov
imul
mov
sub
imul
mov
xor
div
mov
and
mov
sub
mov
add
mov
xor
mov
imul
or
add
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
or
mov
sub
xor
add
mov
and
mov
or
mov
sub
mov
mov
imul
imul
sub
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
jle
jmp
push
pushl
pushl
call
push
push
mov
or
jne
mov
mov
xor
mov
adc
div
neg
mov
mov
div
movl
mov
jmp
cmpl
jle
or
jmp
call
mov
mov
mov
mov
shr
rcr
adcl
shr
rcr
xorl
or
jne
adc
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
sbbl
subl
movl
cmpl
je
sbb
add
mov
movzbl
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
shld
movl
shl
ret
movzbl
sub
mov
xor
and
shl
ret
xor
xor
ret
