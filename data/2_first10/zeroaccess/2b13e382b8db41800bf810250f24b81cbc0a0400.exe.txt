push
mov
sub
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
subl
push
mov
mov
sub
add
push
mov
xor
xor
mov
sbbl
add
andl
mov
mov
sbb
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
mov
mov
sub
add
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
mov
movl
sbb
mov
and
xor
add
adcl
mov
mov
mov
mov
mov
and
mov
adcl
mov
and
mov
xor
push
neg
pop
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
movl
mov
and
movl
mov
xorl
mov
mov
orl
mov
and
mov
xor
movl
add
mov
adcl
lea
sbbl
mov
mov
or
mov
adcl
xor
add
mov
lea
andl
push
mov
movl
xor
add
andl
push
subl
mov
xorl
push
subl
pushl
xorl
call
andl
mov
inc
mov
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jb
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
movl
mov
incl
mov
lea
incl
mov
movzbl
or
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
push
call
jmp
mov
sbb
xor
sub
mov
sub
mov
mov
movzwl
movl
mov
mov
cmp
movl
je
add
mov
mov
sbbl
xor
xor
lea
mov
orl
xor
div
mov
xor
mov
xor
orl
xor
orl
sub
cmp
jne
mov
mov
add
mov
mov
subl
xor
addl
xor
add
add
movl
mov
movl
cmp
movl
jae
and
lea
not
mov
mov
xor
xorl
add
lea
mov
mov
mov
cmp
jbe
addl
addl
movl
jmp
addl
addl
sub
mov
xorl
xor
decl
inc
sbbl
incl
addl
add
cmp
movl
jb
notl
mov
xor
mov
movl
xor
xorl
mov
sub
add
mov
adcl
xor
sub
andl
ror
movzwl
sbb
xor
mov
mov
mov
adc
mov
orl
jmp
pop
mov
pop
mov
add
mov
addl
subl
and
cmp
sub
cmp
jae
jb
fcmovu
imul
jb
int3
bound
lea
xchg
xchg
inc
mov
sub
push
rol
repnz
sub
nop
ss
mov
aad
jb
adc
and
aaa
jo
lods
sub
mov
notb
test
pusha
push
and
cmpl
fwait
dec
or
jecxz
imul
xchg
ss
leave
int
outsb
cmc
pop
imul
or
mov
shll
imul
jno
add
mov
xchg
mov
leave
iret
cmp
ja
and
lods
mov
fdivl
dec
dec
dec
in
mov
push
mov
add
sub
out
cs
cmpsb
add
cmp
pop
mov
xor
and
push
pop
fs
imul
or
sbbl
mov
loop
and
sahf
sahf
scas
or
xchg
int
sbb
int3
cmpsl
mov
bound
outsl
fsts
pop
pop
inc
inc
rorb
in
mov
in
nop
iret
and
xor
cld
inc
loop
pop
cmc
adc
and
mov
lock
fisttpll
hlt
jb
lods
fisttps
in
arpl
xlat
outsl
enter
dec
inc
mov
lea
arpl
jle
xor
push
je
inc
aaa
mov
loopne
mov
pop
xchg
in
or
mov
pop
dec
clc
test
bound
cs
in
loop
add
push
mov
rcrb
ss
add
mov
ds
push
adc
add
inc
mov
leave
or
test
add
jl
inc
test
es
or
inc
push
inc
pop
arpl
jecxz
cmp
add
jp
dec
pushf
xchg
or
cmp
pushw
test
bound
mov
and
jl
sbb
xchg
pop
rorb
push
xor
or
sahf
mov
push
fnstcw
push
pop
shlb
mov
adc
inc
pop
bound
mov
iret
push
jns
ljmp
cltd
cmp
mov
ret
sbb
push
cmp
xchg
jp
loopne
insb
add
insb
and
cmp
cmp
or
jo
push
out
stc
adc
testb
mov
cwtl
inc
or
mov
test
sub
xor
or
imul
xchg
dec
out
adc
cmp
dec
aaa
cwtl
push
popf
xor
push
dec
jbe
jmp
mov
push
insl
loopne
push
mov
rcll
dec
inc
push
push
xchg
push
jne,pt
mov
sub
add
test
scas
div
sti
nop
addr16
pop
pop
fdivr
cmpsb
mov
xchg
sub
xchg
dec
sti
xchg
pushf
mov
data16
and
cmp
out
adc
sub
mov
insl
addr16
or
mov
mov
icebp
add
mov
dec
leave
imul
and
js
scas
inc
jp
loope
mov
insb
cmp
aad
arpl
lahf
in
imul
lods
fstp
sbb
xchg
inc
dec
aaa
test
xorl
in
ret
arpl
loope
sub
push
cmc
xor
inc
movsb
popa
add
repz
add
pushf
lods
aam
adc
lahf
push
in
jge
cltd
sbb
sub
push
push
fucomi
rcrl
es
movsl
nop
hlt
cmc
imul
pop
xor
adc
hlt
xchg
into
test
push
stc
cmp
or
pushf
dec
mov
ret
out
enter
stos
pop
sub
mov
rcrb
cmp
pusha
cltd
sar
xor
jne
jae
push
mov
fs
mov
js
pusha
movsl
jmp
jp
xor
pop
insb
and
movsb
shll
imul
pop
data16
icebp
outsb
imul
gs
adc
adc
pop
test
push
ljmp
add
clc
pop
out
lcall
dec
pop
jnp
xchg
jbe
or
xchg
jmp
cmp
adc
data16
sbb
adc
inc
ror
testl
sbb
outsb
dec
aam
loop
sahf
xor
fs
mov
cli
push
dec
loop
mov
dec
sub
push
daa
shl
xchg
jle
adc
jp
nop
push
add
mov
stos
test
cwtd
pop
test
pop
into
ljmp
faddl
and
in
call
sbb
mov
sub
mov
iret
in
or
jg
imul
test
push
out
and
icebp
les
cmp
scas
dec
push
js
dec
push
xor
adc
mov
ss
adcl
leave
add
lea
call
out
div
aas
push
shrl
daa
dec
jp
push
sti
in
mov
test
pop
pop
insb
addr16
clc
pushw
ljmp
das
and
or
xchg
testl
sbb
test
ret
push
inc
je
inc
jno
pop
js
imul
cmpb
push
lahf
mov
fcomps
outsl
pop
in
mov
shlb
sbb
adc
cmp
loopne
mov
fs
xor
push
sub
dec
add
dec
lahf
add
push
fcoms
pop
xchg
dec
les
shlb
lods
in
sahf
sub
sarl
mov
pop
sti
dec
cmpsl
mov
lcall
shrb
in
jbe
mov
mov
lods
leave
out
shl
ret
mov
and
pushf
imul
pop
push
inc
pop
pop
and
lods
scas
enter
adc
fisubl
and
ss
push
xchg
jnp
rclb
test
loopne
mov
jmp
shrl
leave
adc
stos
mov
push
enter
add
lea
call
sti
addr16
cmc
fwait
repnz
dec
dec
test
or
test
fisubrs
cli
xchg
mov
in
aas
mov
imul
scas
cwtl
mov
add
fisttpl
sti
icebp
or
sti
inc
sti
dec
push
mov
cld
pop
jbe
je
pushf
in
bound
push
das
mov
mov
jl
sbbl
mov
fwait
scas
mov
mov
jge
jae
sbb
sbb
lahf
mov
mov
cmpsl
add
pop
jge
mov
test
je
shll
adc
loopne
mov
dec
popa
mov
cmp
ret
insb
lock
fcmovbe
xor
mull
lods
sub
mov
in
ret
out
or
add
lock
xchg
mov
stc
movsb
pushf
mov
ja
js
sbb
int3
je
hlt
jnp
sbb
std
adc
int3
scas
sub
test
loopne
mov
scas
std
push
rcll
jecxz
ficompl
mov
shrl
or
imul
xor
xchg
aam
test
adc
inc
mov
xchg
and
out
jnp
insl
add
cli
sub
fists
pop
push
jno
push
mov
mov
lcall
dec
mov
mov
jno
inc
rclb
out
incb
loopne
nop
insb
mov
xchg
adc
xor
xchg
jb
pop
inc
clc
aad
fwait
push
ret
inc
rcll
mov
shrl
sbb
cmc
mov
cmc
pushf
ja
sub
xchg
add
adc
xchg
lahf
xchg
sub
inc
mov
icebp
adc
lea
popf
fs
mov
add
lds
test
les
les
andl
neg
out
cltd
sbb
jmp
xchg
js
inc
mov
ret
or
fs
stos
pop
and
in
cld
dec
jge
pop
shll
out
push
push
sbb
xchg
dec
test
push
mov
or
les
xchg
mov
and
adc
pushf
cmp
orb
imul
in
mov
inc
xor
test
stos
adcb
outsb
cmp
xorl
jp
fldt
loopne
cmp
push
xor
cli
inc
lds
xor
adc
or
in
sbb
adc
addr16
cmpsb
pusha
cmp
jp
outsb
icebp
fwait
je
mov
mov
sbb
dec
inc
mov
cmp
rclb
testl
or
xchg
sbb
cwtl
ret
call
test
cwtl
jl
jmp
mov
mov
and
xchg
rcrb
xor
andb
lea
leave
adc
ret
xchg
mov
adc
stc
movsb
shlb
jge
call
sti
sahf
mov
add
adc
outsl
testl
inc
dec
mov
fstl
andb
pop
nop
adc
pop
cmpsl
lret
stc
add
mov
out
dec
and
into
clc
xchg
pop
aam
mov
addb
fmull
sub
xchg
cmp
mov
std
in
ja
std
test
add
mov
inc
cmpsb
inc
cmp
cmp
test
out
out
inc
ja
mov
dec
lret
or
mov
push
jmp
cltd
cmpsl
mov
cwtl
dec
cmp
and
pop
sbb
sti
popa
jge
xchg
xchg
sbb
out
cli
lret
cmp
ja
cmp
adc
out
les
or
cmp
jmp
aas
leave
iret
and
rcrb
adc
mov
cltd
adc
add
leave
pop
test
std
mov
les
xchg
xchg
mov
push
mov
pop
hlt
dec
inc
push
mov
shll
or
sbb
push
or
inc
mov
push
movsl
mov
insb
sbb
cld
mov
xchg
outsb
cli
or
cmp
xchg
xchg
or
outsw
add
mov
or
push
repz
dec
jbe
in
xchg
pusha
scas
jl
lods
push
xchg
dec
mov
mov
pop
dec
in
inc
dec
pop
and
jmp
dec
out
popa
loop
movsb
jp
jbe
push
aad
add
push
push
mov
cmp
pop
in
shrl
loope
mov
push
mov
cmp
andb
scas
mov
xor
sti
cmp
ficoms
ret
push
out
std
sub
cli
into
xchg
xor
adc
mov
cmpl
jmp
mov
xchg
hlt
sahf
pop
adc
loope
fsubrs
or
cmp
xor
sbb
xchg
addb
scas
mov
scas
adc
popf
popa
and
add
scas
sub
es
fs
or
sahf
fldenv
fstsw
mov
mov
jne
test
stos
lcall
xorl
test
jae
mov
test
roll
mov
fcoml
stos
cmp
and
inc
fnstcw
nop
jle
jne
rcrl
stos
dec
popa
pop
adc
mov
sti
pop
sti
imul
rol
push
aam
cmpsl
stc
mov
stc
cmp
stc
addr16
icebp
clc
movsl
xchg
xchg
lock
mov
jne
imul
and
mov
jle
call
mov
cwtl
mov
data16
jle
jno
cmp
vsqrtpd
xor
fs
inc
imul
mov
mov
lret
loopne
pop
fs
dec
popa
fsubrs
mov
cmp
cld
cmp
mov
or
cmp
cmp
xchg
adc
or
stc
push
push
or
sub
aas
push
mov
adc
mov
lahf
out
add
cld
xchg
mov
movsb
divl
xchg
sbb
mov
ret
inc
cmp
sbb
push
out
pusha
imull
andb
ja
jns
push
jno
pop
clc
lcall
xor
ja
repnz
mov
arpl
lret
decl
lret
jecxz
sub
test
nop
dec
jp
scas
inc
xchg
call
adcb
inc
adc
test
xor
sbb
cmpsb
pop
lcall
lahf
cli
out
outsl
rcrb
xchg
lods
shrb
mov
lret
cmp
jmp
mov
mov
xchg
add
add
xlat
push
stos
js
in
mov
sub
fdivr
imul
add
call
insl
pop
sbb
test
in
mov
push
inc
aaa
sarb
fildl
and
das
scas
xchg
sbb
mov
mov
add
sub
arpl
arpl
pop
int
mov
add
lods
sub
aas
mov
xor
je
cmp
sub
cmp
pop
pop
out
jae
pop
lods
jne
mov
jae
mov
sbb
mov
mov
jge
mov
cld
push
xor
jbe
sub
jb
jne
cmp
ss
cmp
mov
enter
ficomps
test
mov
test
mov
mov
sahf
sahf
mov
xlat
fdiv
add
push
lock
adc
daa
sub
test
dec
or
negb
sbb
mov
lock
cmp
mov
outsl
pop
fstpt
enter
xchg
inc
idivl
add
mov
push
mov
jle
inc
and
call
test
dec
imul
cwtl
aam
int
xchg
xchg
adc
cs
xor
sub
les
aad
fcomps
roll
push
ja
fisttpll
jecxz
outsl
leave
and
cmp
int
and
cli
xchg
sarl
cwtl
jmp
cwtl
les
movsl
cmp
lahf
aam
fstpt
xor
xchg
sub
leave
js
add
push
fildl
mov
sub
mov
fstpl
ds
stos
add
scas
dec
inc
mov
inc
xchg
jbe
sub
jmp
pop
xor
or
mov
mov
cmp
repnz
push
mov
push
loop
int3
lcall
lods
pop
jg
jnp
push
pushf
mov
cmpsb
cmp
jns
mov
popf
hlt
movsl
cmpsl
lret
in
mov
aas
cmpsb
sub
mov
jb
insb
fistps
js
dec
xor
and
int3
mull
inc
push
mov
push
push
cld
xchg
inc
mov
je
or
fiadds
dec
mov
pop
into
cmp
push
ret
fidivrl
adc
xor
addl
bound
mov
repz
add
add
sbb
and
jecxz
push
lods
mov
popf
jnp
pop
lahf
clc
repz
and
aam
cwtl
movsl
xchg
sbb
jne
push
bnd
add
pop
sbb
out
test
aaa
sti
xchg
sbb
xchg
mov
sbb
aad
pusha
pop
ljmp
pop
add
xchg
rcrl
adc
stos
int
adc
mov
insl
jge
jnp
popa
mov
or
rorl
push
adc
int3
push
jbe
mov
js
inc
addr16
xchg
xchg
and
cli
outsl
lods
push
sub
scas
das
cmpb
dec
xchg
rcrl
add
and
xlat
sub
ja
sbb
gs
push
mov
and
cmp
mov
and
ret
stos
out
xor
repz
push
mov
push
dec
mov
movsb
adc
cli
add
dec
es
cmpb
das
inc
outsl
dec
es
sub
push
mov
xor
xchg
out
enter
lret
mov
fiadds
dec
pop
rcr
shrl
mov
xchg
push
scas
rcrl
xchg
ja
and
xlat
fcomp
mov
gs
push
lods
scas
scas
mov
mov
nop
mov
pop
push
cmc
mov
bound
mov
sub
sub
push
ljmp
jns
jae
mov
fmuls
mov
add
adc
cmc
test
pop
add
mov
pushf
jecxz
out
test
cli
call
bnd
jge
dec
jb
add
jg
jo
nop
jb
gs
push
inc
bound
and
cwtl
xchg
mov
xchg
and
pop
movsl
pop
dec
lea
in
inc
sbb
jle
sahf
out
movsl
outsb
mov
sub
aaa
mov
scas
mov
mov
ret
dec
cs
int3
mov
in
out
movsb
fnsave
fxch
adc
mov
scas
int3
in
dec
sub
mov
adc
add
iret
notb
fwait
pop
or
xor
inc
or
jbe
jecxz
fisttpl
pusha
xorl
jnp
mov
or
push
stos
add
mov
mov
cwtl
xchg
subb
in
push
cli
int3
fidivrl
cltd
cmpsb
and
sbbl
add
test
mov
movsl
sub
add
outsl
xchg
mov
mov
add
dec
rcll
popf
mov
loope
mov
mov
push
lcall
scas
sbb
jge
adc
xchg
bound
movsl
push
mov
adc
shlb
mov
sbbl
inc
jmp
dec
jecxz
sbb
jo
fs
mov
jo
jl
xchg
jnp
test
push
xchg
mov
movsl
push
lsl
pop
fcmove
and
test
mov
icebp
ret
adc
ja
stos
aaa
xor
shrl
push
rolb
push
dec
stos
mov
call
rcll
insb
pop
mov
into
add
insl
push
cwtl
pusha
mov
addl
cli
repnz
fadd
dec
loopne
sbb
add
repz
out
jle
popa
clc
xchg
scas
jo
loop
dec
pop
sbbl
and
sbb
mov
push
negl
mov
push
mov
sub
xlat
push
mov
dec
test
add
fcoms
movsb
pop
cmc
fisubrs
leave
xchg
mov
fmuls
shll
pop
fcmovnb
push
rcll
inc
lods
fldcw
mov
adc
icebp
incb
cmpsl
or
lret
lds
aam
js
jae
rcrb
xor
fisubrl
popf
mov
mov
push
jnp
fldenv
dec
stc
mov
ss
roll
in
loope
mov
jg
popf
mov
out
lcall
pusha
imul
lret
sbb
je
shrl
mov
outsl
scas
sbb
dec
out
jle
daa
mov
imul
pop
xchg
jnp
movsl
mull
lret
mov
andl
push
xchg
cwtl
rclb
movsl
int3
push
push
mov
ss
or
push
cmp
add
clc
cwtl
push
mov
int3
call
scas
dec
xchg
mov
mov
ds
pop
mov
xchg
loopne
push
xchg
push
ljmp
fiadds
push
shll
sbb
mov
mov
sbb
and
pusha
mov
aas
lret
stos
lods
or
fsubrs
push
js
insl
mov
lcall
cld
mov
adc
call
dec
adc
jge
jbe
cmp
jae
jno
and
das
pop
lret
push
fnstsw
pusha
mov
pop
mov
fld
or
push
mov
dec
mov
jl
xor
add
dec
adc
mov
add
das
arpl
loopne
xchg
imul
gs
and
jl
test
cwtl
pop
out
lcall
or
pop
jne
xchg
mov
mov
add
movb
cltd
mov
aaa
dec
popa
insb
xor
mov
std
cmp
int3
cmp
aam
cwtl
jae
movsb
push
insb
pop
addr16
cmp
sub
div
cmc
or
cmp
repnz
lahf
jmp
gs
xchg
jg
call
inc
movsl
mov
adc
pop
xorps
es
lods
fsubs
scas
vmovapd
daa
stos
push
sarb
and
stc
enter
aas
ja
cltd
inc
stc
or
nop
int
cmpl
iret
lcall
push
movq
and
jg
push
adc
jl
or
lcall
cmpsb
movsb
aaa
pop
pop
jno
adc
mov
es
insl
aam
lds
ljmp
ds
mov
or
dec
xchg
xchg
in
dec
xlat
lods
shl
or
test
pop
ljmp
cltd
push
int
adc
adc
or
mov
xchg
lods
pop
pop
gs
dec
push
add
js
std
scas
inc
add
repz
stc
movsl
ss
aam
out
sarb
les
xchg
cs
add
rcll
jle
cltd
adc
sub
mov
push
iret
jle
fcomp
andb
sbb
inc
push
mov
movsl
dec
mov
adc
stos
cld
sbb
mov
mov
jp
jmp
adcb
cs
negl
sub
imul
mov
out
adc
push
daa
bound
xor
push
aas
cmp
stc
lcall
and
stos
fs
ds
sbb
jmp
pop
subl
sar
add
push
or
inc
pop
xchg
add
cmp
mov
adc
xor
xor
fstpl
jo
mov
sbb
cmp
hlt
out
sbb
inc
aam
mov
and
push
jbe
xor
or
mov
sub
adc
inc
jmp
xor
add
push
xor
sub
into
push
out
clc
int3
gs
enter
lea
iret
loop
cmp
dec
pop
cmpsb
lret
add
cltd
jmp
int
xchg
jle
dec
mov
movsb
adc
fildl
push
aas
add
pop
dec
pop
lea
xor
push
or
inc
cmpsb
les
in
fnstenv
push
sub
jno
enter
out
cmp
mov
cwtl
add
push
sbb
adc
outsb
jae
popf
aaa
aad
push
and
addr16
push
in
rorb
add
test
xchg
mov
or
fists
fidivs
sbb
int3
push
xor
mov
dec
jl
inc
test
adc
rorl
sahf
into
popf
fiadds
pop
jl
xor
push
fistpll
adc
mov
lahf
out
pop
inc
lret
dec
aas
in
jecxz
fwait
int3
jmp
add
insb
or
imul
idivb
mov
negb
jne
push
mov
fldcw
mov
fs
loopne
mov
cmpsl
loope
cltd
inc
or
ret
mov
loop
sti
dec
sub
dec
push
in
bound
cmpsl
mov
sbb
cmp
iret
mov
lcall
cmp
mov
pop
ffree
sbb
in
mov
inc
in
iret
pop
add
dec
pop
shrl
lret
jmp
ret
jnp
and
out
mov
push
xor
test
jmp
push
jmp
imul
jle
mov
pop
lret
push
adc
sub
lock
push
in
js
subb
push
test
xchg
push
or
pop
arpl
inc
rcl
push
push
int3
dec
into
daa
mov
jns
and
loopne
test
inc
dec
inc
dec
mov
pop
mov
lock
aam
in
and
jecxz
cmp
mov
insb
and
cmp
and
push
repz
cwtl
mov
dec
subb
testb
xchg
cmpsb
mov
or
sbb
dec
loop
mov
repnz
aad
imul
lretw
adc
aas
dec
pop
cmc
loopne
test
mov
or
cmpsl
add
int3
xchg
sbb
shll
and
in
sub
aas
sub
cmp
insb
pushf
out
loope
fucomp
mov
test
add
lret
in
iret
push
dec
xchg
je
lret
fisubrl
or
mov
push
nop
cmp
jmp
fmuls
mov
xchg
push
add
and
stos
nop
iret
loope
push
jge
mov
ret
loope
sub
fcomip
aad
rcll
pop
jnp
push
adc
lods
loop
or
cmp
outsb
sbb
faddp
or
jmp
pop
test
out
pop
sub
insb
push
mov
adc
adc
xchg
mov
icebp
add
xor
mov
pop
test
inc
test
shrb
call
cmpsb
xor
inc
repnz
add
sub
ret
xchg
arpl
mov
fcmovnb
add
mov
sti
sbb
add
jae
cli
jae
scas
dec
jmp
lods
pop
cmc
enter
push
cs
pop
xor
fmuls
inc
mov
fwait
shll
push
jns
lds
inc
jb
jge
dec
xor
xor
jne,pn
pop
and
subb
mov
pop
out
mov
loope
adc
sarb
pop
inc
int3
ja
cmp
sarb
push
sbb
adcb
shll
push
mov
loopne
mov
mov
push
es
push
push
mov
cmp
jp
mov
mov
in
icebp
incl
cs
inc
pop
cmp
push
idivl
inc
sbb
repz
pop
faddl
lock
mov
test
push
mov
test
mov
out
xchg
mov
jecxz
cmpsl
ja
roll
push
arpl
insl
sti
jge
adc
pop
add
sub
cltd
xchg
insl
das
fs
mov
pop
fs
test
inc
cli
int
add
mov
ja
lret
aad
rorl
inc
adc
push
movsl
jno
mov
cmp
addr16
ficoml
aad
add
std
push
cld
xor
ss
push
roll
in
cmp
xor
into
out
arpl
mulb
adc
lods
fdivs
sub
call
adc
aad
xor
inc
mov
push
push
stos
lea
in
jecxz
mov
stos
mov
xor
jl
std
in
inc
cmp
cmpsl
adc
cmp
adc
arpl
xor
mov
push
dec
cs
sbb
pop
in
and
pop
repz
loop
test
push
std
jne
dec
mov
pop
push
add
int
call
jecxz
lcall
arpl
ds
jbe
pushf
popa
fwait
sbb
cli
mov
sbb
jnp
inc
pop
mov
scas
jbe
lcall
inc
and
jg
sbb
mov
push
shlb
push
inc
into
push
cli
test
jns
cmc
cmp
cmpsl
loopne
dec
cld
push
xchg
pop
jnp
jecxz
push
les
rclb
jo
jge
hlt
xchg
cmp
fsubp
icebp
ret
loope
out
js
pop
adc
hlt
dec
add
add
adc
dec
pusha
clc
sub
daa
lcall
cld
loop
ficoms
xchg
push
movsb
mov
pop
xor
push
mov
mov
cld
jne
adc
out
shlb
inc
loop
dec
scas
or
cli
sbb
repz
inc
jg
mov
lods
xchg
pop
shll
jmp
add
pop
in
incl
cli
out
sub
inc
dec
xchg
and
dec
adc
and
sub
int3
sub
mov
test
xor
aam
out
adc
and
test
mov
sub
jle
dec
and
mov
aad
sub
stos
xor
bound
nop
dec
sbb
push
fistpll
rcr
mov
mov
pusha
and
std
in
lret
adc
xchg
cmp
int
sbb
outsl
andl
dec
mov
inc
fwait
into
je
int
fsts
sub
subb
popa
aad
cmp
jno
aam
inc
and
inc
push
sbb
aaa
push
push
aad
out
push
scas
xchg
xchg
or
pop
sub
and
outsb
jle
sti
or
sub
stos
cmp
sub
dec
xchg
xor
lcall
or
iret
cmp
in
push
jmp
sbb
call
mov
test
lahf
mov
out
jle
clc
andl
cmp
mov
rorl
sub
pop
pop
int
shrl
stc
add
mov
insl
in
rorl
aad
or
aaa
push
repz
xchg
jg
popf
dec
aaa
imul
push
les
sub
push
fwait
adc
loope
sahf
mov
icebp
xchg
rcl
cld
or
push
xor
mov
xchg
lea
loop
popf
loopne
mov
pop
cmp
mov
mov
and
lahf
mov
xchg
push
andb
pop
fdivrl
cmp
jo
int
cmp
fmull
pop
jbe
orb
mov
xchg
jl
lret
lret
fucomp
push
sub
scas
ja
inc
fdivrl
das
cli
add
pop
inc
adc
pop
xchg
dec
sbb
daa
out
xor
or
clc
loop
lock
enter
sbb
test
or
and
cld
dec
and
xor
out
pop
mov
jmp
lret
and
cmpsb
adc
jmp
adc
lods
andl
xor
cmp
popf
movsb
mov
clc
xchg
jnp
or
adc
cltd
push
call
and
sub
xchg
inc
das
popf
xor
push
fldl
nop
pop
cmpsl
ss
adc
movsl
aas
hlt
leave
fwait
sbb
push
pop
fstl
cmp
add
mov
sbb
sbb
jae
adc
outsl
movsl
sub
mov
and
add
or
or
cmp
mov
lock
jp
push
jne
mov
dec
ficoms
adc
push
mov
fdivs
xchg
aam
pop
ja
aam
icebp
ja
sarl
test
jne
jbe
das
mov
imul
ret
push
sub
sub
sysenter
fidivrl
inc
rcrl
outsb
mov
pop
ret
icebp
arpl
je
push
jae
mov
xchg
aaa
not
adc
lds
test
jae
xchg
inc
cwtl
or
jbe
add
rorl
loop
pop
jg
push
push
ds
aaa
addb
fldt
lcall
sbb
in
insl
ss
punpckhwd
shrl
and
pop
ror
jbe
jg
mov
pop
jns
push
int3
push
movsb
jge
mov
xlat
out
sbb
test
sbb
sarl
int
mov
cltd
and
and
std
popf
cli
xchg
cld
fisttpl
xor
test
cli
ss
repnz
fstpt
inc
mov
mov
jl
mov
cmp
xchg
push
sbb
push
push
pop
adc
or
aad
fildll
push
xchg
hlt
and
test
xor
stos
mov
inc
outsb
call
mov
sbb
cli
cmp
daa
xorl
jmp
lret
subb
loopne
ljmp
push
out
sbb
lea
pop
mov
push
add
lret
leave
and
push
movsl
pop
aam
xor
sub
cmp
das
lcall
jae
out
sbb
mov
mov
addr16
lret
push
adcl
push
test
das
mov
xor
cmp
jne
or
mov
andl
mov
adcl
xor
xorl
xor
sub
sub
mov
mov
xor
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
jmp
mov
and
out
mov
xchg
sub
addl
lods
cmp
fisubrl
xlat
lret
mov
and
sbb
ret
push
bound
sub
jae
adc
int
inc
fdivrs
leave
fldcw
push
adc
push
mov
movsl
adc
jbe
fwait
add
or
in
pushf
inc
cld
xchg
popl
and
jns
push
mov
es
fndisi(8087
jo
fwait
dec
pushf
dec
mov
dec
daa
daa
and
pusha
push
sub
add
stc
outsl
loopne
stc
lcall
stc
jg
cli
das
leave
adc
leave
inc
jo
outsl
aam
fdivr
xchg
jnp
jmp
lock
cmpsb
rcrl
es
inc
jge
dec
inc
fst
jl
shrl
inc
jecxz
sbb
inc
pop
jge
mov
cli
adc
ret
xor
imul
shrb
push
pop
cmp
packsswb
xlat
xchg
adc
in
jae
xor
add
jl
push
pop
pop
mov
or
lcall
insl
xor
sub
xchg
pop
xchg
jmp
inc
mov
push
aad
xchg
and
outsl
cld
nop
popf
inc
aam
jge
sbb
inc
imul
outsb
sahf
mov
mov
repz
icebp
mov
and
push
push
jbe
cltd
aaa
test
aam
mov
or
sub
js
pop
push
xchg
mov
nop
or
rcrw
xor
jne
jne
pushl
xchg
add
in
mov
aad
sbb
xor
pop
dec
add
jge
mov
hlt
and
push
loope
or
movsb
pop
test
jbe
cwtl
adc
ret
dec
cli
jns
jb
test
mov
dec
loopne
scas
add
test
push
sar
cmp
cmpsl
sbb
sahf
lods
dec
sbb
sti
inc
loope
cmpb
pop
sub
mov
dec
or
cmpsb
push
sbbl
mov
imul
adc
pushf
xor
cwtl
cmpsb
popf
daa
loop
jmp
loope
sbb
enter
pop
push
jge
fsubrl
ffree
test
mov
mov
sbb
jecxz
adc
ficoml
xor
fsubrl
jb
mov
aas
mov
fists
xor
mov
lret
add
add
dec
fldcw
in
mov
sub
lea
je
mov
push
dec
repz
dec
xor
out
leave
imul
or
mov
sbbb
sbb
int3
movsb
add
cmc
leave
fstl
push
dec
jle
ja
inc
jbe
inc
dec
mov
rcr
pop
stos
push
popf
popa
xchg
or
lcall
adc
add
dec
insl
sub
push
adc
repnz
mov
add
fldt
dec
in
sub
insb
inc
add
inc
stc
mov
push
imul
movsl
mov
push
stc
jno
push
stos
xlat
xchg
scas
push
lods
stos
jl
inc
pop
xchg
std
in
not
cltd
mov
add
pop
call
jecxz
pop
call
xchg
lret
sbb
shll
icebp
cmp
aad
inc
or
mov
add
lods
xchg
add
fnsave
sahf
aad
push
shl
mov
fnstcw
cwtl
jg
and
fwait
mov
imul
call
jp
add
stos
push
lock
ljmp
loop
pop
into
lret
iret
add
into
mov
fwait
adc
insl
sub
je
pop
andb
mov
lds
hlt
adc
push
data16
in
outsl
jecxz
lahf
cmc
and
cmpsb
sub
pop
mov
mov
cli
std
scas
clc
mov
sub
xlat
and
xor
out
sbb
loopne
bound
mov
dec
pop
sbb
test
cs
jle
popf
push
cmovs
xchg
rorb
in
imull
bound
inc
leave
or
mov
mov
mov
movsl
sub
and
outsl
jmp
sub
sarl
xor
dec
push
cwtl
roll
push
mov
mov
dec
xor
pop
inc
dec
mov
bound
mov
mov
jle
mov
xchg
jns
mov
rol
mov
dec
movsb
mov
sbb
aas
xchg
pop
mov
insb
adc
movsl
pop
pop
in
sar
mov
cmpsl
pop
cmp
daa
jge
and
jae
and
jge
outsb
jge
push
fdivp
mov
pop
rcr
push
push
xchg
ds
jg
pop
ss
aam
cmpsb
out
add
cltd
daa
aam
sub
test
lods
add
xchg
cwtl
adc
push
arpl
pop
aam
pusha
jae
jbe
pop
int3
ss
dec
push
and
mov
fdivrs
dec
add
ja
adc
fcompl
cmp
mov
stos
ds
mov
and
je
sub
aam
pop
push
gs
xchg
adc
mov
mov
daa
lret
jg
repnz
notb
add
stc
add
xchg
xor
adc
push
notb
xor
ja
out
pop
out
stc
jg
inc
movsb
mov
insl
test
mov
mov
xorb
iret
pop
jmp
pop
shlb
cmp
push
imul
mov
cli
pop
sbb
xor
jns
pop
out
dec
int3
imul
sbbb
shll
iret
push
lea
xor
xor
cmp
test
and
inc
cmp
lds
xor
jmp
sbb
adc
lcall
xchg
jle
inc
xchg
pop
scas
xor
xor
push
divb
loop
cmpsl
movsb
jae
in
rcll
jl
jp
cld
pop
xchg
xchg
cli
lahf
cmp
cmp
jmp
sub
sti
ds
iret
cmp
jecxz
fisubs
js
test
cli
add
loop
push
cmp
lret
aas
xor
and
movl
and
mov
lods
imul
add
mov
test
ret
rcr
push
adc
int
std
sub
fdiv
mov
js
mov
mov
add
jecxz
mov
aas
jae
lret
mov
addr16
mov
repnz
bound
popf
mov
sub
and
rcrb
xchg
ss
inc
mov
lods
dec
push
push
stc
pop
mov
mov
iret
mov
idiv
push
mov
ja
in
icebp
sbb
mov
test
jmp
jbe
arpl
hlt
xchg
xor
push
fldenv
call
or
adc
fldt
mov
dec
bound
and
xlat
mov
sbb
inc
push
sub
lret
sbb
ds
loopne
sbb
out
mov
pop
push
jle
or
push
mov
iret
lods
repz
lds
or
test
inc
lret
dec
out
jb
dec
sbb
cli
push
cmp
mov
sub
pop
or
sbbb
cmp
hlt
notb
adc
out
adc
add
ret
adcl
decb
jle
mov
test
fsubrl
dec
push
mov
bound
jg
outsb
sbb
cs
in
sbb
xor
enter
lret
imul
mov
std
mov
icebp
xchg
mov
push
mov
xchg
mov
cld
inc
cmovns
and
data16
lods
xor
and
jbe
mov
cmp
mov
xlat
outsl
add
and
or
inc
mov
pop
lret
lds
fildll
es
in
xor
and
fsubrs
xchg
cmp
jg
scas
and
add
xor
pop
inc
dec
push
pop
fidivs
adc
jbe
jp
push
pop
imul
push
adc
fsubrs
mov
insb
pop
push
push
out
jns
adc
cld
or
stc
xchg
xor
inc
jo
fs
mov
mov
inc
ljmp
mov
add
jns
dec
sub
insl
pop
jnp
std
mov
shrl
mov
and
ds
imul
test
xor
sbb
pop
lea
test
imul
dec
cmp
stos
sub
jbe
ljmp
aas
xchg
movsl
inc
push
cltd
fwait
bound
and
in
lret
inc
xchg
imul
loop
enter
leave
pop
add
push
rcll
push
mov
into
pop
pop
movb
or
dec
ret
sysret
inc
adc
jno
push
shrl
cwtl
aam
daa
push
xor
push
add
add
lds
icebp
insl
es
mov
out
call
into
icebp
cli
and
fldt
into
jecxz
jo
cmp
xchg
in
imul
add
mov
pop
inc
mov
jle
das
dec
mov
cmp
xchg
and
xlat
fistpll
testb
fcmovu
flds
ds
stos
xor
pop
leave
loope
and
cli
addr16
clc
push
nop
push
mov
outsb
mov
in
mov
sarl
repnz
adc
or
pop
shrl
add
mov
inc
jne
dec
mov
inc
test
cmp
pop
shlb
imul
pushf
and
xor
inc
lock
outsb
jne
or
dec
jl
out
pop
roll
pusha
add
cmp
imulb
lock
xchg
adc
rolb
sub
test
pop
in
mov
jno
mov
insb
pop
stos
mov
xlat
lret
ss
std
ret
cmp
mov
pop
das
rcl
mov
imul
mov
cs
in
sarb
enter
xchg
roll
fisubl
clc
jl
pop
fs
out
gs
iret
cmp
xor
lret
and
stos
icebp
mov
and
dec
addr16
xor
push
aas
cltd
push
sub
gs
pop
jecxz
mov
cmp
loop
mov
add
sub
mov
inc
movb
sub
xchg
aad
std
push
aaa
cmp
arpl
das
and
sub
mov
cmp
lret
das
push
insb
lret
cmpsb
repnz
psrlq
lods
adc
push
or
mov
inc
rcrl
adc
fcoml
cmpsl
call
aaa
mov
js
adc
cmc
repz
lods
scas
pop
mov
mov
jp
xchg
int
dec
dec
or
mov
lret
setbe
outsl
push
in
in
inc
sub
adc
mov
add
dec
add
imul
cmpsl
add
mov
gs
lret
int
inc
pop
out
imul
outsl
pop
jae
sarb
js
xor
mov
adc
dec
jp
mov
repnz
cwtl
lock
ret
jne
ss
repnz
pushf
xor
jno
jmp
inc
das
lret
scas
xor
xlat
movsl
cmpsl
dec
xorl
fdiv
cmovp
sub
pop
imul
xor
sub
hlt
iret
inc
daa
sbb
push
icebp
xchg
scas
mov
dec
xor
jbe
or
hlt
out
pushl
jb
dec
aad
dec
add
lret
mov
in
jle
aaa
out
jb
mov
test
gs
mov
sbbl
nop
push
aaa
sbb
shlb
pop
mov
mov
mov
rorl
lret
adc
in
add
mov
lret
sbb
push
insb
inc
in
test
mov
es
pop
testl
fisubrl
mov
push
fwait
int3
cmc
sti
aad
aas
or
mov
sbb
fidivs
jbe
mov
cli
lods
pop
in
out
adc
test
testb
mov
test
lea
jne
dec
jmp
cmp
sub
mov
sub
loope
jecxz
dec
sbb
or
mov
sbb
cltd
jbe
mov
pop
int3
mov
fstps
sti
leave
bound
push
pop
sbb
jmp
mov
and
xchg
ja
mov
dec
xchg
jge
cltd
subl
stos
pop
push
es
and
andb
mov
mov
stos
inc
ss
clc
test
pop
adc
adc
ljmp
mov
stos
jle
lds
lods
js
repz
dec
jbe
das
and
jo
mov
mov
out
jg
pop
jge
dec
push
popa
into
or
loopne
pop
je
jg
xchg
fs
insb
mov
fcomip
or
sahf
lds
cmp
frstpm(287
es
dec
xor
pop
iret
es
dec
out
jg
daa
xchg
clc
pop
xlat
fwait
or
dec
or
sub
es
xchg
aam
push
push
adc
in
int3
and
or
cmp
push
shrb
xchg
fisubrl
cmp
pop
push
mov
out
andl
dec
cmp
push
movsl
test
mov
or
in
testb
into
and
addr16
mov
outsb
push
sub
cmpsl
jge
shlb
and
outsb
aaa
mov
adc
mov
ret
into
ljmp
dec
aad
gs
loop
mov
mov
mov
xchg
addb
repnz
mov
mov
cmpsb
dec
inc
les
adc
jl
push
mov
adc
lods
mov
jle
mov
cmc
outsl
sbb
add
adcb
and
adc
sbb
sbb
xchg
xchg
sub
xchg
roll
inc
fmuls
mov
scas
inc
push
add
in
decl
int
cmp
jbe
jnp
call
xchg
fisubl
mov
pop
xor
and
push
inc
lods
loop
shrl
aas
cmp
in
int3
mov
lahf
es
xchg
je
andb
imul
rcr
or
rcl
cmpsb
sbb
xchg
fs
gs
dec
sbb
or
int
mov
frstor
add
aaa
sub
pop
sbb
mov
pop
xor
das
xor
sbb
jne
sub
and
jae
inc
xchg
in
nop
dec
dec
fisubl
or
decb
imul
xor
pop
outsl
pop
ja
sahf
rep
cmp
inc
hlt
shr
in
stos
ja
push
aad
adc
mov
mov
movsl
add
sub
mulb
xchg
inc
divb
pushf
or
jmp
lret
cmp
sub
lret
mov
outsl
fidivs
mov
or
xchg
in
in
fwait
xchg
cmp
dec
push
jne
fmuls
mov
lods
mov
fdivrl
dec
or
and
aaa
loop
adc
add
stc
push
cmc
mov
pop
decb
xchg
xchg
int3
ret
xchg
bound
or
rcr
and
out
xor
popa
xorl
and
pop
push
nop
leave
fwait
gs
jae
stos
xor
mov
push
lds
and
push
push
rcrb
jle
sub
xor
repnz
jmp
call
cli
jl
add
dec
cmpb
mov
sbb
bound
subl
and
sbb
xor
daa
or
mov
mov
jle
cs
mov
outsl
xchg
sbb
inc
sub
aaa
mov
rcr
add
in
sub
outsb
pop
fisttpll
loopne
mov
pop
pop
out
push
mov
outsb
push
sub
int
and
cli
sub
push
push
movsl
insb
loop
addb
in
fildll
pop
sbbb
js
mov
aaa
jns
ret
fcompl
jg
xor
pop
jl
mov
mov
and
dec
jne
mov
sarb
xor
sbb
cwtl
dec
adc
or
dec
mov
and
stc
xlat
out
xchg
scas
testb
mov
loope
fildll
cmp
dec
sub
inc
lcall
adc
outsb
iret
sub
dec
sbb
int3
ret
pop
out
pop
pop
outsb
mov
push
js
je
ret
push
mov
lret
push
jmp
adc
pop
ret
mov
xchg
das
mov
push
xchg
fsubrs
cmc
pop
cmp
mov
lods
ret
mov
cld
mov
adc
jb
pop
and
insb
mov
cmp
or
jl
dec
ret
cmp
sarb
outsl
xchg
ljmp
fs
or
push
mov
xorb
cltd
std
dec
add
shl
repz
cmp
test
mov
mov
cmpsb
cltd
lahf
stc
lock
call
lret
add
jp
add
inc
insb
call
adc
xor
iret
mov
rol
ljmp
pushf
jle
gs
cli
add
push
adc
lahf
sub
cltd
fwait
xchg
or
xchg
int3
pop
dec
mov
pop
fdivrl
cmp
ret
scas
fdivrl
jnp
sbb
jge
adc
dec
mov
loope
jno
jle
leave
inc
push
push
xor
sbb
or
mov
fildl
dec
push
push
push
js
lcall
mov
inc
fbstp
lock
cmpsl
nop
aas
lods
mov
push
inc
repz
jbe
js
jge
push
lods
stc
lret
icebp
ret
mov
jo
inc
mov
xor
orl
mov
sub
xchg
and
std
mov
mov
jp
mov
fwait
test
lret
dec
ret
out
pop
les
outsl
jae
das
lods
pop
mov
aad
cltd
sub
ret
fistps
add
pusha
out
loop
cld
xor
xchg
add
cmpsl
lock
int
mov
jp
mov
popl
aas
pop
inc
roll
sbb
cltd
xchg
ss
ret
mov
mov
adc
xchg
daa
shl
cld
call
push
and
loop
clc
rcrl
adc
mov
fdivs
stos
sti
insl
add
cwtl
aas
mov
aas
push
rcl
push
sbb
test
xchg
adc
xor
mov
push
enter
jl
and
std
clc
xchg
popf
in
lret
mov
add
in
xor
jecxz
lock
scas
push
shlb
add
bound
stc
cmp
icebp
mov
lods
mov
push
xchg
std
icebp
lods
sarb
ret
jle
mov
push
mov
scas
test
jns
add
std
out
mov
hlt
out
mov
dec
and
inc
sub
and
mov
sahf
mov
inc
sbb
aam
dec
icebp
mov
mov
les
cli
add
data16
andl
xor
mov
inc
mov
add
lret
out
add
jecxz
iret
mov
notl
or
sbb
lahf
push
movsb
or
adc
sar
pop
enter
mov
or
dec
leave
rcrl
pop
jbe
mov
push
mov
mov
adc
add
cmp
aam
lcall
fldt
and
stc
jle
cmpsb
ficompl
cmp
xchg
das
cmp
aas
fincstp
aad
mov
inc
inc
dec
push
test
and
xchg
testb
add
inc
jns
stos
jg
push
xor
sub
cmp
stos
cmp
sbb
outsb
sub
mov
jae
test
xor
mov
or
push
add
test
mov
jno
test
xchg
xor
iret
inc
je
je
inc
or
std
jmp
pop
test
sub
mov
inc
and
xor
sub
arpl
jbe
mov
inc
gs
aad
push
push
inc
sub
lret
leave
aam
pushf
add
and
add
out
out
and
aam
in
test
mov
adc
adc
mov
in
pop
sbb
xchg
aaa
add
and
inc
test
push
les
inc
xor
pop
sti
cmc
mov
fldl
mov
stos
add
int3
fnstsw
mov
fildl
xor
push
and
xlat
mov
cltd
dec
mov
adcb
mov
add
mov
mov
insl
in
push
push
push
shll
or
sbb
xlat
sub
test
and
jecxz
ja
inc
push
clc
lahf
jns
ja
movsl
jl
lret
xchg
in
adc
add
mov
mov
cwtl
xchg
or
or
cmp
mov
mov
and
push
xchg
mov
int3
pop
or
dec
mov
push
in
or
cltd
scas
std
mov
ss
mov
out
bound
in
cmp
add
xchg
xchg
push
dec
sbb
and
sbb
mov
jle
dec
inc
cwtd
mov
repz
xchg
lock
mov
mov
cmpsl
mov
out
push
lahf
decb
push
arpl
fsubr
daa
sub
cwtl
push
mov
leave
pop
mov
dec
xchg
inc
jge
or
xchg
dec
clc
push
mov
data16
push
fsts
xchg
push
pusha
faddp
and
in
push
fsubrl
faddp
jno
inc
mov
movsb
dec
test
push
sbb
and
xor
pop
or
xchg
or
divb
xor
mov
call
arpl
in
jns
xchg
sbb
xchg
jns
push
movsb
nopl
rcll
adc
jae
aaa
adc
mov
out
cmp
nop
xchg
arpl
icebp
xchg
mov
inc
sub
aaa
movsb
inc
fildl
nop
mov
dec
ret
add
shll
fcoml
inc
nop
inc
aaa
dec
cmp
subps
pop
cmp
test
push
ja
loop
jmp
jo
cli
adc
push
mov
cmp
cmpsb
mov
xlat
inc
push
ror
scas
push
aas
repz
adc
xor
enter
jl
mov
push
test
and
push
outsl
mov
and
rorb
cs
and
out
jg
sbb
mov
add
cmc
addl
mov
jmp
sbb
jo
inc
rcl
movsl
rcll
pop
inc
hlt
mov
and
mov
loope
jp
sub
aad
iret
xor
jmp
clc
adc
xor
cmp
or
insl
sbb
cli
mov
aas
lcall
jg
js
mov
push
ret
pop
push
std
test
out
daa
dec
filds
xor
jo
jno
aad
dec
arpl
cmpsb
or
loop
bound
repz
mov
loop
leave
addr16
in
repnz
jns
xchg
xchg
mov
lahf
add
add
mov
jle
int3
lcall
out
icebp
jp
cmp
pop
mov
or
rcrb
insb
add
sarb
sbb
xchg
cmp
popa
adc
stos
cmpsl
sar
mov
imul
push
lret
mov
cmpsl
mov
mov
mov
in
xchg
xlat
sub
popf
push
movsb
pop
cli
and
push
mov
bound
sahf
roll
pop
mov
mov
movsl
jge
imul
mov
or
out
push
mov
or
pop
jle
popa
es
sbb
lds
sti
jp
gs
jecxz
jecxz
mov
in
push
xchg
out
cmp
pop
pop
lods
cltd
lods
cmp
push
sub
push
stc
pop
and
jns
jmp
scas
xor
mov
mov
sub
shll
or
test
sarl
ds
dec
cltd
loop
xor
push
rcrb
scas
mov
mov
addr16
jno
mov
pop
and
outsl
cmp
sub
adc
jl
clc
ret
pop
push
cmc
fwait
cld
xchg
or
pushf
mov
aas
mov
jp
jb
les
push
testb
scas
push
lock
mov
int3
push
enter
add
mov
or
adc
int3
or
add
sub
push
push
ss
push
cmp
movsb
xchg
mov
aas
je
lret
xchg
mov
fiaddl
ret
jo
aas
xor
jg
cmp
jne
inc
jo
mov
mov
mov
clc
xchg
push
sti
mov
out
mov
mov
lret
imull
popa
insb
decl
adc
loopne
dec
and
ret
mov
popa
cmp
aas
fdivrs
test
and
mov
lea
mov
xor
in
and
jle
mov
insl
pusha
cmpl
cmp
nop
rorl
outsb
cmpsl
jl
add
arpl
jae
fcomp
repz
push
xchg
nop
cld
lret
mov
loope
arpl
mov
ljmp
adc
push
xchg
inc
or
ret
sub
bound
rolb
or
sbb
out
push
push
jl
cmp
out
push
mov
sub
mov
jg
jle
lea
stos
pop
shr
bound
test
je
call
adc
je
jne
mov
lret
icebp
cltd
mov
test
pop
jecxz
cltd
and
pop
add
jb
adc
jae
jne
mov
or
movsl
sbb
call
out
movsb
scas
jnp
jmp
xor
mov
rcr
and
std
shrl
outsb
push
or
pop
adcb
mov
jo
pop
push
lock
xchg
popf
mov
cmp
ljmp
xchg
xor
or
repz
sbb
stos
ja
pusha
in
sub
repz
inc
pop
mov
jb
shufps
inc
cli
mov
xor
mov
mov
push
sar
mov
out
insb
repnz
mov
jb
jbe
outsb
lea
aad
pop
lock
add
test
push
popf
sbb
cmp
cmpsl
arpl
or
pop
mov
and
insl
push
push
cmp
jl
mov
add
push
sub
stos
xchg
dec
pusha
scas
insl
cmpsb
dec
insl
jne
jne
push
adc
cmp
popa
lret
test
dec
mov
imul
popf
mov
mov
out
xor
call
movsl
add
jle
and
mov
bound
mov
and
mov
and
rorl
add
leave
inc
lods
nop
dec
popa
adcl
outsb
icebp
and
xchg
movsl
adc
int3
adc
fs
push
xchg
dec
and
daa
std
fldt
stc
movsb
loope
ss
stc
pusha
xlat
add
in
lods
jp,pt
jnp
push
jl
js
or
js
cmp
pusha
jmp
inc
mov
sahf
movsl
idivb
pop
je
cmp
fdiv
int
mov
adc
mov
es
in
sbb
test
sbb
mov
sub
out
and
xor
aad
xchg
mov
xor
and
and
mov
push
mov
test
push
inc
and
add
push
fisubrl
or
popf
roll
pop
xor
arpl
mov
testb
jge
pop
jb
mov
repnz
outsl
insb
cmpsb
shlb
repnz
dec
add
cmc
mov
mov
icebp
repnz
jecxz
jae
and
push
jle
fs
push
jmp
gs
lods
pusha
arpl
mov
rolb
mov
mov
pop
xor
sbb
adc
test
cmpsl
das
out
push
inc
pop
pop
mov
sbb
pop
stos
and
in
lret
push
mov
lea
outsb
mov
mov
nop
jmp
sub
je
repnz
test
inc
cmp
push
mov
cmpsb
fnstcw
mov
gs
shrl
jle
pop
dec
push
mov
xchg
aad
push
arpl
pop
xchg
mov
cs
cmp
inc
in
and
int3
sbb
int3
fdivrs
and
rcl
sbb
xacquire
aas
pop
sbb
fisubs
dec
cmp
int3
cmp
insl
sub
inc
out
add
jg
add
in
or
jmp
mov
sbb
sbb
inc
dec
mov
lock
xchg
pop
in
cmpb
aaa
out
test
inc
xor
dec
xchg
pop
je
add
mov
dec
dec
mov
rep
test
and
and
jns
push
pushf
in
mov
fcomi
cmpsb
imull
loopne
out
push
mov
les
aaa
adc
add
lods
sar
cli
imul
shlb
cltd
repz
jge
sub
inc
in
cltd
jns
movsb
and
jne
sbb
inc
outsb
mov
add
dec
push
pop
jbe
leave
mov
lea
bound
push
mov
addr16
fbstp
adc
vcvttsd2si
loopne
push
stos
sub
and
sub
sbb
js
andb
jle
and
fdivrs
xchg
out
mov
push
dec
mov
push
rol
rcr
insb
outsb
dec
cmp
mov
aam
mov
loop
xorb
cmc
lret
dec
adc
sbb
incl
andb
add
jne
mov
or
and
adc
and
sbb
lret
inc
pop
cmc
pop
mov
in
sbb
ss
test
push
mov
xor
xchg
lods
insl
scas
cli
ss
push
imul
mov
lret
and
shl
sub
inc
loopew
cmp
jno
jae
adc
xchg
lcall
ret
testb
inc
sbb
inc
jo
xchg
jns
lds
mov
xchg
popw
inc
ljmp
sbb
testl
or
jp
aam
or
sti
test
popa
mov
into
cmp
cld
xor
ret
mov
mov
mov
das
ret
jbe
arpl
gs
in
pop
lret
bound
push
sar
jne
cwtl
mov
and
nop
jl
jo
lock
mov
xchg
pop
outsl
adc
out
ljmp
push
stos
add
xor
in
lahf
jge
and
xchg
inc
dec
ret
or
aam
push
xchg
mov
add
repz
nop
mov
std
inc
cmp
leave
xchg
data16
push
push
hlt
sub
inc
shr
mov
pop
xchg
in
js
lock
cs
ja
cmpsb
mov
fistpl
outsl
sub
adc
lret
imul
aad
mov
test
repz
outsl
cli
xchg
jp
and
xchg
cltd
pushf
rcll
mov
movsl
stos
insb
shlb
mov
jb
pop
fidivl
test
test
das
sarb
ss
aam
js
mov
out
mov
sub
lock
mov
mov
fisubs
icebp
pop
dec
aam
pop
push
mov
inc
mov
cli
xlat
sti
jl
xchg
cmp
int
jns
push
sbb
fisubs
jno
xchg
mov
sbb
push
sub
pop
add
and
xchg
push
mov
inc
dec
xor
movsb
sbb
fwait
sbb
mov
hlt
pop
mulb
adc
into
loop
jb
imul
jae
push
adc
fmulp
cmpsl
mov
and
xchg
sub
int
or
push
not
lret
in
or
sbb
mov
mov
cmp
xor
jecxz
xor
add
in
ffree
adc
dec
cli
popf
loop
jmp
mov
movsl
les
or
adc
or
pushw
rolb
cld
mov
jae
xlat
test
fucomip
sbb
nop
pop
mov
xchg
dec
xchg
out
push
bound
repnz
popf
int
rcll
jge
add
mov
jl
push
push
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
movsl
mov
sbb
scas
mov
nop
in
fwait
leave
pop
cmp
adc
xchg
hlt
push
movsb
mov
test
shr
cmp
mov
mov
add
mov
cltd
pop
mov
cmp
inc
jae
enter
and
inc
lods
adcb
inc
fcompl
xor
add
sub
pop
test
lret
insl
lcall
mov
mov
mov
mov
mov
push
mov
xor
sbb
dec
xchg
pop
in
ret
add
repz
lea
daa
iret
loope
mov
das
jbe
sub
mov
lods
rol
add
jno
jno
xchg
mov
repnz
and
cmp
and
and
jge
mov
mov
jle
aaa
lahf
or
adc
imul
mov
movsb
push
xor
adc
jns
movsl
ds
in
and
push
mov
push
out
shld
inc
sahf
xchg
nop
jp
inc
adc
mov
cmp
mov
push
dec
lret
ljmp
jg
jle
shlb
mov
jno
mov
aad
cmp
pop
mov
xchg
sti
in
jl
fdivrs
rclb
jecxz
jno
loopne
inc
dec
pop
mov
xlat
outsb
jg
out
icebp
mov
movsb
popf
inc
in
clc
cld
or
aas
pop
in
cmp
scas
shl
jb
inc
sbb
cmp
stos
sub
mov
add
aas
and
cmpsl
push
xlat
and
repz
or
cmpb
das
pop
sarl
pop
push
mov
lods
fs
scas
ljmp
adcl
je
mov
and
mov
cs
xlat
je
fadds
and
orb
xor
in
cmp
lret
cmp
mov
cld
jmp
pop
repnz
cld
xchg
xchg
dec
mov
jmp
mov
ret
add
dec
stc
leave
mov
cmp
test
in
pop
adc
rcl
outsl
lret
pop
xor
sbbb
add
add
xchg
add
jp
adc
dec
popa
test
xchg
jnp
jmp
enter
inc
ja
scas
sub
add
adc
out
xchg
mov
aaa
pop
sub
jle
out
pop
jmp
sbb
fwait
mov
mov
fs
ljmp
mov
inc
mov
xchg
insb
adc
outsl
mov
mov
jmp
adc
out
xor
sub
cmp
rclb
outsl
xchg
push
add
je
lret
sti
or
mov
inc
adc
ljmp
ss
fdivp
or
data16
and
data16
sub
cmp
arpl
jp
mov
aam
and
imul
cmp
pushf
mov
lcall
test
fwait
ret
jl
xlat
mov
addr16
loop
inc
add
or
fs
mov
jg
add
and
arpl
push
lods
xor
fwait
mov
mov
dec
cmp
gs
aas
rolb
push
dec
jb
or
arpl
jecxz
ljmp
pop
loopne
aam
lahf
sub
pushf
rorl
lret
add
mov
test
push
das
dec
fimull
add
jns
or
add
inc
mov
jmp
stos
nop
mov
test
sbb
jo
in
aam
xor
movsl
int3
pusha
pop
mov
inc
pop
jnp
or
test
outsb
xchg
int
dec
je
push
mov
jae
mov
jb
mov
call
lods
add
pop
adc
fcomp
or
xchg
and
xchg
add
sub
int3
inc
hlt
pop
faddl
xchg
dec
jns
ss
into
and
enter
sti
das
xchg
test
aaa
add
xlat
in
lret
push
pop
testb
daa
cmpsb
mull
lods
sahf
mov
sub
push
fwait
sbbb
and
push
xchg
push
sub
add
test
out
addb
xchg
iret
dec
push
inc
push
ss
pop
dec
repnz
cli
adc
out
push
jb
jl
and
fldenv
xor
imul
mov
arpl
dec
adc
xchg
mov
push
addl
ret
addr16
daa
cmpb
push
mov
das
dec
dec
ja
popf
adc
jg
mov
add
xor
mov
dec
jns
les
dec
jns
mov
je
popa
loop
out
jp
incb
pop
cld
jne
sbb
mov
cwtl
push
mov
dec
mov
pop
inc
push
lods
xor
mov
daa
xchg
xchg
push
call
cmp
sbb
in
lahf
mov
xor
mov
scas
loope
cwtl
xor
push
inc
jb
out
cld
sub
stc
int
add
mov
cmpsl
lret
stc
cmp
mov
sahf
std
fmuls
stc
fsubrs
testl
xor
mov
push
mov
push
jne
test
xor
xchg
sahf
xchg
int
clc
ljmp
xchg
test
or
pop
scas
pop
inc
jmp
lcall
lock
dec
inc
divl
mov
data16
mov
rorb
inc
sbb
push
loop
or
loop
push
sub
insb
lcall
jne
dec
test
in
mov
mov
je
cmpsb
jno
push
lahf
and
mov
aas
mov
push
jmp
popa
sub
xchg
lahf
pop
sbb
fadds
push
dec
lea
cs
add
mov
imul
jmp
cmc
jbe
pushf
lea
lods
push
test
cmc
cmp
adc
cltd
cmp
xor
js
push
cmp
ror
rorb
sbb
flds
mov
repnz
in
cmp
lret
imul
lea
xlat
push
aam
xor
lret
xchg
sbb
mov
and
jnp
dec
data16
into
xlat
arpl
pushf
adc
sub
cmp
xchg
ficomps
add
rorb
sub
or
bnd
mov
push
xor
arpl
inc
fisttpl
cmp
mov
inc
sub
and
les
ss
jb
mov
xchg
popf
inc
sbb
push
jbe
loopne
adc
mov
sub
es
gs
inc
and
lcall
jae
jo
loopne
jmp
lret
dec
lret
cltd
repnz
add
sub
adc
sub
xor
mov
das
sbb
adc
cmp
xchg
mov
addr16
cmp
lock
push
cwtl
mov
popf
and
pop
mov
aaa
add
loope
ss
add
pop
mov
inc
xor
adc
subl
cmp
outsb
dec
lock
scas
inc
xor
adc
mov
std
xchg
mov
int3
push
pop
mov
adc
rorl
dec
xchg
mov
fwait
adc
pop
sbb
mov
rolb
inc
mov
mov
xchg
call
mov
int
dec
sub
xlat
push
outsl
js
icebp
test
ja
popf
sbb
int
sub
cmp
test
fdiv
mov
jb
orb
xor
sub
xor
push
xor
or
push
xchg
cmpsl
xchg
push
xor
push
push
lds
inc
cli
mov
pushf
pop
mov
int3
into
cmp
int
push
cmp
mov
out
push
into
test
decl
mov
mov
loop
sbb
sbb
mov
test
fnstcw
cli
mov
lret
lods
pop
xchg
andl
fmul
jg
fsubrs
iret
out
outsb
gs
repnz
cmp
sub
ret
shll
push
dec
idivl
sar
lahf
mov
dec
and
lcall
mov
push
sub
rol
sbbb
sbb
les
cmp
jp
add
jmp
loop
pop
pop
pop
cs
cmpsb
sub
sbb
loop
jno
movsl
nop
xchg
mov
jge
call
fcomps
ret
or
mov
inc
out
adc
pop
pop
mov
clc
scas
adc
sub
loop
aaa
fimuls
inc
adc
fidivrs
lock
mov
fstl
sbb
test
mov
loop
int
aad
cmp
adc
pop
int
stos
cmp
out
dec
xor
imul
pop
scas
cmp
call
xchg
push
and
jno
ret
call
popa
out
lock
js
jp
and
aaa
mov
cld
adc
add
fstps
call
push
lds
xor
jecxz
mov
fiaddl
mov
nop
out
fwait
stc
arpl
pop
stos
xlat
nop
xchg
push
mov
sti
neg
inc
jbe
lods
jecxz
cmp
stc
pop
in
xchg
jns
pop
pop
dec
add
stc
ret
outsb
and
lcall
and
orb
mov
xchg
push
roll
out
xchg
sbb
fcom
mov
and
mov
les
rcrl
push
aam
mov
mov
cltd
xchg
pusha
jb
push
nop
inc
lea
cmp
and
mov
cmpsb
adc
mov
je
push
fmuls
pop
ss
push
jno
add
xor
sbb
xor
ds
cmc
addb
out
mov
pushf
adcl
push
idivb
adc
and
int
repnz
leave
jb
test
fstpl
adc
inc
or
adc
test
addr16
mov
movsb
ret
popf
push
outsl
ds
dec
test
push
loopne
mov
divl
inc
xor
ret
pop
inc
adc
cmp
outsb
xlat
add
push
adcl
push
dec
sahf
sbb
or
fisttpll
lcall
jne
imul
ds
cmovnp
std
loopne
and
jmp
lds
repz
dec
jnp
and
pop
sub
pop
cs
sbb
jg
cmc
fldpi
push
inc
roll
xchg
xchg
dec
js
or
jbe
mov
pop
test
xor
shl
sbb
ficoml
sbbb
nop
fldcw
inc
and
out
rcr
cmpsb
or
push
and
cmp
push
sbb
xor
jno
adc
int
mov
fwait
cwtl
aam
lahf
dec
nop
int3
jp
jns
xchg
test
sub
add
dec
std
ja
jp
mov
stc
insl
loopne
repz
add
mov
push
pop
adc
inc
dec
sbb
fstps
push
sub
mov
adc
push
gs
mov
lret
adc
das
dec
add
jge
pushf
stos
ret
push
xor
ret
je
xchg
daa
mov
add
inc
or
inc
mov
popf
popa
bound
jp
push
pop
lret
lahf
leave
sbb
ret
pop
jns
in
push
or
leavew
xor
sbb
mov
shll
inc
pop
ret
dec
arpl
test
xor
inc
jmp
push
pop
dec
cltd
out
mov
loop
or
cmpsb
ja
sub
xor
lods
xchg
xchg
mov
and
inc
mov
fsubs
add
inc
enter
sub
adc
or
fcom
rolb
push
inc
in
inc
sbb
dec
sub
cmp
bound
std
fisubl
mov
daa
xor
mov
push
test
fwait
fwait
jb
fldcw
push
in
cli
in
xchg
gs
js
cltd
or
cmp
sub
out
sbb
push
inc
cmp
jae
js
mov
mov
dec
mov
ret
mov
mov
xor
lahf
int
pop
pop
stos
lock
push
add
outsb
fbstp
xor
sub
stos
movsb
sbb
or
dec
sub
push
fdivp
mov
cwtl
mov
lret
xor
jmp
and
push
cmp
or
fwait
sub
clc
push
or
cmp
push
mov
dec
gs
loop
sbb
xchg
in
ja
mov
mov
cmpsl
aaa
call
or
in
ss
arpl
dec
in
cltd
cmp
push
lock
in
sub
dec
xchg
pushf
into
add
xor
fs
sub
mov
repz
stc
mov
add
pop
sub
cs
adc
dec
movl
shll
pushf
shlb
addr16
cmpb
int3
jecxz
je
in
cmp
mov
push
mov
push
mov
outsl
add
shlb
popa
jno
andb
adc
adc
or
jns
pop
fstps
daa
mov
in
mul
mov
scas
scas
xor
adc
cmp
sbb
je
lea
or
cli
ds
imul
out
inc
mov
pop
fidivrs
inc
daa
dec
cmp
iret
sbb
push
ljmp
xor
push
mov
mov
cmpsb
inc
push
data16
pop
js
push
or
daa
or
testl
leave
cmp
loop
jno
sbb
push
repz
ja
xor
lret
ss
loop
jl
cmp
loope
cs
mov
imul
pop
mov
push
nop
inc
xor
hlt
pop
sbb
mov
pop
and
pop
inc
adc
mov
out
mov
and
xchg
xchg
and
push
clc
cltd
pop
sbb
ret
jmp
sbb
cmp
ja
and
mov
popa
test
push
sub
loopne
mov
rorb
mov
pop
cmp
enter
mov
jne,pt
ljmp
dec
or
les
push
arpl
pop
pop
jnp
jne
ret
mov
mov
stos
ljmp
jl
fnstsw
sbb
in
mov
pop
test
jle
sti
sub
cmpsl
mov
sbb
mov
pushf
adc
imul
aad
xchg
roll
test
insb
add
pop
push
sbb
test
sub
push
ljmp
mov
daa
adc
aaa
cmp
out
cli
mov
mov
fs
xlat
addr16
dec
xor
outsl
fs
xor
test
out
jge
push
jmp
mov
adc
int3
and
and
mov
loopne
pop
lock
lret
clc
iret
xor
jg
jp
lods
adc
dec
arpl
int3
cmp
cmp
push
xchg
fistps
jne
mov
mov
stos
add
sbb
loope
rcl
nop
sbb
jecxz
mov
inc
loope
testb
testl
arpl
or
data16
frstor
push
outsl
cwtl
ret
push
f2xm1
xorl
and
push
aam
cmc
jb
fstpl
xchg
adc
or
ror
out
dec
mov
rcr
leave
push
stos
arpl
sbb
lcall
fsubs
andb
or
mov
xchg
sti
cmc
pop
test
stos
jnp
fs
stc
xor
insl
mov
jge
scas
lods
cmp
movb
push
push
mov
jmp
push
xor
fdivl
adcl
mov
loope
mov
test
in
push
popf
ljmp
push
aad
push
mov
pextrw
mov
imul
imul
push
adc
adc
insl
xor
mov
insb
mov
daa
sahf
cld
pop
popf
int
sbb
test
mov
pushf
sbb
push
dec
fadds
repz
push
mov
ret
push
notb
inc
jp
cli
pop
lret
xor
and
cmc
in
mov
mov
mov
ucomiss
xchg
dec
pop
pop
movsl
repz
mov
and
mov
dec
inc
jl
mov
call
sahf
andl
inc
or
pop
add
pusha
jle
in
and
fucomi
decb
cmp
jecxz
xor
leave
std
ficompl
cmpsl
scas
sbb
or
mov
pop
ss
lods
fidivrs
and
outsl
inc
out
fadds
lahf
mov
push
inc
pop
and
dec
inc
pop
dec
jno
jb
pop
test
in
cmp
jbe
loope
add
aam
sbbb
xor
mov
jmp
ficompl
aaa
xor
dec
adc
dec
je
idivl
push
stos
cld
and
jecxz
add
clc
jmp
scas
cmp
xchg
incl
add
cwtl
flds
bound
and
arpl
cld
cmp
shrl
outsb
xor
les
popf
mov
test
dec
or
xor
add
lret
cmp
xlat
mov
mov
pop
stos
adc
test
roll
test
mov
dec
roll
mov
mov
rolb
mov
movsb
sub
pop
stc
cmpsl
mov
sub
dec
mov
dec
fisubl
xor
clc
loope
iret
lret
push
push
js
roll
jl
addr16
cmp
fstpl
stos
xchg
frstor
push
xor
cmp
mov
push
and
mov
and
ret
lock
lods
sbb
push
pop
in
mov
adc
jecxz
xchg
add
jns
aam
lods
pop
jge
add
cwtl
mov
xlat
add
push
push
xor
loopne
xchg
or
push
push
sti
mov
shr
jl
std
push
negl
in
jmp
je
lcall
mov
mov
fisubl
adc
lea
mov
mov
je
push
les
inc
and
test
idiv
add
cmp
ret
cli
fldl
sub
aas
inc
aam
pop
stc
xor
out
sbb
or
shlb
aaa
adc
mov
jae
mov
icebp
shufps
jge
mov
test
loopne
loope
call
shll
mov
out
repnz
xchg
pop
sbbb
and
and
add
push
loopne
negb
lds
push
enter
dec
cs
mov
popf
lock
mov
mov
stos
sub
cmc
leave
ja
inc
hlt
push
enter
cmc
enter
sub
in
adc
cltd
stc
pop
nop
xchg
mov
mov
xchg
add
shlb
call
sarl
or
flds
cmpsb
push
add
xor
mov
pop
stc
push
fs
scas
test
jne
scas
idivl
xchg
xchg
mov
loop
lea
dec
and
fsubrs
insl
ret
aam
mov
aam
jmp
shrl
and
sub
sub
addr16
or
fists
js
mov
add
cli
xchg
push
pop
jns
or
notb
jo
idivl
mul
inc
mov
dec
out
add
dec
dec
cmpsb
cmp
mov
cld
cmp
or
xchg
and
xlat
js
lds
sbb
popf
out
out
movsl
das
xchg
negb
xor
andl
sbb
push
sub
jno
mov
movsb
cltd
scas
repnz
pop
mov
cmp
adc
xchg
cld
push
loopne
mov
push
push
dec
xor
or
inc
sarl
sarl
pushf
inc
pop
in
jl
jno
mov
pop
lahf
addr16
cmc
and
shrl
xor
mov
imul
xchg
enter
xor
int
pop
outsb
sbb
iret
icebp
dec
ret
fldenv
je
fildll
pushf
insl
imul
jg
mov
dec
inc
lds
xchg
loope
adc
mov
mov
cwtl
inc
xor
jle
je
inc
fstp
dec
add
cmp
pop
notb
test
ret
xchg
mov
or
push
add
and
sbb
aaa
xor
test
mov
insb
inc
aas
and
popf
movsl
sbb
push
loopne
inc
adc
push
cs
mov
jmp
and
imul
push
scas
dec
stos
pop
daa
and
ret
sbb
and
xchg
outsl
roll
andl
lods
lds
aas
xor
push
inc
shll
inc
dec
pop
mov
test
repnz
out
addr16
cmp
inc
push
jno
leave
stos
or
xchg
out
mul
nop
mov
mov
and
cmpsb
sbbl
pop
popa
add
jg
jmp
pop
inc
jns
sbb
mov
and
leave
sub
add
hlt
lds
sti
test
pop
aaa
dec
sub
jle
dec
xchg
add
jne
xchg
mov
fildll
xor
or
stc
adc
inc
jle
and
leave
test
lea
or
push
inc
xor
leave
sub
sbb
shrb
ss
mov
cmp
or
xchg
push
dec
cmp
aas
sbb
iret
lods
mov
data16
push
sbb
lcall
jne
xchg
orw
push
flds
jne
scas
in
lahf
adc
js
ds
pop
xor
scas
xchg
or
adc
push
lahf
lea
mov
mov
int
das
cli
imul
mov
shrl
faddl
jmp
in
ds
fdivrs
clc
in
hlt
and
pop
xor
jp
add
adc
adc
cmp
pop
mov
or
mov
lea
mov
mov
shlb
sub
shl
rcrl
and
lcall
jae
ljmp
dec
sub
cmpsb
mov
xchg
cmp
xchg
mov
jne
aad
push
std
sti
adc
inc
repnz
arpl
or
cmp
inc
push
or
nop
stos
fnstsw
xorb
mov
test
push
pop
repnz
add
ja
xor
mov
sbb
xchg
dec
xor
lahf
inc
fldenv
iret
ret
aad
cltd
arpl
push
cmp
rclb
repnz
inc
cs
filds
or
call
push
push
jmp
and
je
xlat
data16
dec
push
sub
mov
ret
inc
mov
dec
fwait
and
dec
sbb
test
push
adc
or
mov
cld
sbb
adc
cmp
jae
loope
cs
cmp
sbb
stos
pop
call
xor
jge
sbbl
mov
lahf
leave
jg
into
mov
outsl
mov
filds
rcrl
push
cwtl
jo
xchg
cmp
iret
adc
push
cmpsb
xchg
cmpb
cmp
call
jmp
pushf
lea
mov
sbb
pop
jl
mov
stos
adc
in
pusha
cmp
or
popl
pop
stos
je
or
cmp
push
outsl
popa
aam
sub
ficoml
xchg
mov
xor
fmull
and
lods
mov
lret
sub
mov
loope
cmpl
nop
lods
inc
add
pushl
movsl
and
mov
and
xchg
jecxz
cmp
testl
ds
dec
stc
hlt
sub
mov
push
mov
rorb
frstor
xchg
imul
push
sahf
das
mov
jno
aas
je
fcom
xlat
jge
test
mov
mov
aam
dec
scas
pop
xor
push
and
xchg
sbb
mov
aaa
xchg
inc
xchg
inc
int
add
lds
inc
push
mov
mulb
push
inc
in
lock
xchg
fildll
xor
mov
pop
push
xlat
xchg
sbb
sub
jns
scas
xlat
mov
or
fnstenv
push
ljmp
push
clc
gs
std
leave
inc
inc
out
cmpsl
clc
cmp
adc
dec
sbb
pop
loopne
jbe
dec
adc
aad
cld
outsl
rcr
je
daa
push
sarl
dec
ja
xchg
scas
mov
popf
call
fsubr
leave
inc
out
adc
mov
inc
les
ficoms
ret
dec
sub
xor
shr
psrlw
ja
stos
jecxz
outsb
mov
sub
fcomps
roll
push
sbb
add
xchg
mov
and
pop
sbb
mov
lret
loopne
add
jae
mov
xchg
mov
ja
sahf
lahf
jge
rclb
add
aas
pop
dec
mov
repz
ljmp
lds
mov
pop
adc
adc
adc
jo
rcrl
call
xor
scas
faddl
addr16
adc
sbb
rcr
mov
jle
cmp
jmp
sti
push
call
or
cmp
addl
daa
jbe
pop
add
in
mov
jg
aas
mov
lahf
sar
xor
mov
adc
insb
sub
xor
mov
out
sub
ss
iret
icebp
mov
jbe
jae
pop
iret
rcl
loop
push
rorl
repz
sub
jne
lahf
pop
cmp
pop
adc
lds
pop
lods
sub
mov
sti
mov
pop
and
lcall
insb
les
in
jns
or
and
pop
xchg
mov
or
mov
mov
cmp
and
adc
daa
inc
out
rorb
in
mov
sub
and
fsubs
dec
or
sahf
sbb
mov
in
testb
push
data16
test
or
aas
and
mov
aad
lret
cli
xor
sarl
stc
inc
add
or
cwtl
insb
mov
xor
mov
jle
dec
mov
mov
pop
push
cmp
pop
sbb
sub
pushf
mov
sub
test
jecxz
or
ljmp
ret
cmpsb
push
daa
stos
in
ret
mov
aad
mov
sub
push
sbbl
js
push
pop
and
jge
xchg
cli
mov
fs
mov
loop
add
xor
xchg
pop
and
inc
add
jg
mov
inc
or
cmp
sbb
jo
cmp
out
adc
sub
or
mov
xchg
aad
ja
es
push
pop
xchg
fstp
imulb
sbb
mov
push
xchg
jnp
dec
test
lcall
popf
inc
dec
mov
push
and
mov
ljmp
sub
dec
or
aad
cli
push
sbb
imul
xchg
mov
add
push
inc
sbb
sub
pop
rol
push
aam
stc
and
in
lret
xchg
scas
clc
scas
mov
jmp
push
decl
cmpsb
pushf
jb
xor
test
arpl
in
movsb
lods
mov
mov
pushf
dec
inc
cld
into
js
clc
fisubrs
adc
arpl
lahf
xor
std
ja
sbb
adc
pop
loopne
ljmp
repz
push
lret
xchg
mov
cmpsb
mov
mov
loopne
dec
xor
and
in
ror
repnz
out
adc
mov
inc
xchg
jecxz
jmp
and
and
das
mov
nop
mov
cmp
sub
insb
ficomps
push
arpl
jae
sbb
daa
imul
rorb
sbb
aaa
neg
iret
ret
out
push
pop
pop
out
popf
roll
fst
push
jns
inc
mov
aaa
xor
mov
mov
es
adc
cmp
lahf
add
lods
xor
out
mov
and
inc
out
jmp
dec
adc
insb
ja
pop
not
out
add
pop
out
cmp
pop
in
inc
mov
mov
fadd
iret
and
mov
inc
mov
or
xor
subb
in
or
dec
mov
out
and
test
test
subb
xor
test
aam
push
mov
push
aas
add
or
cmp
stos
shll
ret
lea
and
dec
sub
insl
outsl
imul
or
pop
jbe
dec
jnp
sub
sti
sahf
sub
sbb
mov
loop
pusha
mov
cmp
insb
fnstenv
stc
jle
push
xchg
mov
push
ss
mov
cmp
inc
jge
out
inc
pop
dec
adc
ds
sub
cwtl
or
jl
add
pop
sbb
stos
popa
xor
nop
and
nop
ret
rol
mov
add
icebp
jmp
out
sarl
sub
repz
lods
sub
add
test
cmp
fidivs
lds
mov
fistpll
ret
xor
ja
aas
aad
xchg
and
ret
imul
aaa
inc
pop
iret
adc
sbb
adc
jmp
imul
and
sub
test
sbbb
push
add
adc
sbb
loopnew
mov
dec
lds
pcmpgtw
sbb
and
xchg
sahf
cld
and
in
mov
insb
iret
test
dec
sbb
lret
insb
sub
push
xchg
lret
push
and
add
cmp
leave
add
pop
and
ret
inc
call
or
cmp
pop
enter
std
stos
cmpl
inc
or
add
cmc
scas
cmpsl
loope
add
xor
out
push
fldt
or
icebp
xchg
push
cmp
loop
push
int3
popf
in
call
dec
adc
dec
and
loope
mov
scas
inc
push
xchg
push
jnp
sub
fiaddl
out
or
or
inc
int
jno
subl
sub
popa
add
sub
dec
dec
or
pop
push
inc
xchg
shld
pop
mov
dec
fidivrs
xlat
aaa
test
hlt
clc
cmpsb
push
mov
mov
sub
rolb
adc
imul
pop
dec
or
negb
test
imul
mov
enter
mov
jmp
dec
xor
pop
pop
cmp
and
inc
dec
or
add
cmp
je
fmulp
fistl
or
loopne
sub
mov
sbb
and
jl
push
mov
xchg
adc
in
stos
fsts
mov
cmp
aas
decl
and
sub
mov
std
into
int3
outsl
jmp
dec
movsb
out
xchg
cmp
pushf
jnp
sbb
sbb
and
pop
hlt
or
popa
imul
cmpb
imul
xchg
sbb
jle
sub
mov
cmpsb
or
mov
add
lcall
out
pop
aad
repz
outsl
cmpsb
inc
bound
pop
mov
mov
fcompl
jo
dec
add
roll
insb
icebp
je
and
push
mov
jl
inc
jge
dec
xchg
mov
inc
cli
mov
sahf
sub
cmpsb
pop
mov
mov
ds
jno
ficoms
or
and
and
mov
pop
cmp
imul
jl
inc
sub
xor
lock
enter
in
or
and
sbb
nop
call
in
aaa
iret
mov
lods
add
ror
scas
and
dec
hlt
cmc
popf
add
push
fiaddl
xchg
out
inc
dec
inc
pop
jbe
cmp
js
or
pop
push
mov
orl
hlt
test
xchg
imul
fndisi(8087
push
pop
cli
cmp
and
lods
mov
mov
or
fmul
stos
mov
mov
call
pusha
sbb
cltd
mov
mov
aad
nop
lret
jae
cs
mov
add
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
movl
push
adc
movl
subl
mov
push
mov
adcl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
orl
add
andl
mov
mov
addl
test
movl
je
movl
cmpl
je
cmpl
jle
jmp
push
call
mov
dec
mov
jmp
mov
sbb
mov
addl
mov
mov
xor
xor
add
and
mov
mov
and
xor
mov
and
mov
add
sbb
mov
mov
xor
mov
or
mov
add
or
mov
orl
mov
xor
mov
xor
mov
add
mov
sub
sbbl
lea
xor
xorl
xor
movl
cmp
movl
je
xorl
mov
subl
xor
adcl
add
cmp
movl
jne
pushl
call
mov
not
mov
adcl
mov
addl
xor
add
movl
cmp
movl
je
pushl
sbbl
pushl
call
mov
xor
mov
xor
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
jmp
mov
add
sbbl
mov
mov
mov
sbbl
add
orl
mov
jmp
push
mov
andb
test
pop
ret
lods
adc
addl
jns
pop
adc
loop
mov
outsl
xchg
sbb
lret
xchg
mov
xor
sub
inc
and
outsl
add
dec
pop
and
outsb
dec
cmp
adc
dec
rcrb
dec
and
gs
mov
popa
aad
insb
shll
inc
rorl
int3
cmp
cmpl
and
sti
xlat
rorb
ds
fildl
push
pop
xchg
out
in
push
dec
rol
and
cs
jne
aas
cwtl
or
cltd
inc
repz
repnz
lret
maxps
loopne
xchg
aam
pop
fmull
push
xchg
imul
dec
stos
loopne
xchg
fcompl
ds
and
ja
xchg
mov
and
fcomps
dec
fs
pusha
and
icebp
insb
arpl
ja
xchg
mov
add
sub
cmp
ljmp
in
add
inc
sbb
or
push
cmp
ja
cmp
lret
sbbl
into
mov
testl
mov
cmpsb
pop
aas
mov
call
jp
jge
sub
clc
rcrl
xchg
mov
push
test
sub
cmpsl
roll
dec
mov
mov
rorl
ja
xchg
jp
jae
cli
negl
jmp
inc
shl
adc
hlt
add
xchg
xchg
jnp
mov
add
aas
hlt
lds
adc
and
in
mov
mov
sti
mov
shrb
mov
in
sub
xchg
xor
mov
enter
xchg
adc
dec
out
or
add
mov
xlat
mov
ret
lods
inc
sti
mov
in
int3
dec
inc
repnz
xor
lea
repz
rcl
push
into
dec
mov
inc
cld
call
ss
xchg
push
rorb
sub
cmp
cs
cs
loope
add
push
dec
xchg
adc
insl
xchg
xchg
test
dec
push
lret
mov
flds
sub
cmp
daa
cmp
adc
xor
sarb
fs
leave
inc
and
hlt
xchg
inc
sub
and
ss
sub
sub
cmp
outsl
jnp
lock
pushf
jp
sub
mov
popf
shr
out
ja
cli
jns
cmpsl
mov
sbb
lahf
sub
mov
add
cmp
imul
ret
insl
and
jae
mov
jbe
daa
sub
mov
push
in
sub
test
imul
jg
int3
cmc
pop
add
movsb
in
lret
repz
pop
scas
in
push
jmp
dec
sub
out
roll
adc
leave
adc
hlt
insb
xchg
ljmp
loopne
dec
and
push
adc
xor
rdmsr
adc
xor
pushf
lds
popf
cmpsl
adc
jp
popf
fcomps
push
lcall
js
and
pushf
sub
jae
mov
xlat
in
mov
out
xchg
ret
es
in
xorl
dec
xor
inc
cs
sub
inc
inc
push
mov
mov
push
sbb
fcmovnbe
dec
push
cmpb
sbb
xchg
inc
rcrb
cmp
push
xchg
sbb
pop
pop
sbbl
icebp
jae
xchg
bound
fcmovne
pop
jg
xor
outsb
leave
in
cmp
pop
xchg
sbb
arpl
jbe
fsubrs
add
or
arpl
jno
ja
sti
aaa
jae
out
shl
xor
fisttpll
adc
xchg
lahf
mov
hlt
mov
sbb
jle
add
sub
fnstcw
add
and
out
dec
mov
jnp
mov
sub
and
cli
push
xchg
aaa
shrl
xor
mov
dec
cmpsb
mov
mov
mov
lahf
xchg
stos
sub
mov
sub
add
sahf
sub
jecxz
mov
sub
mov
sub
sub
pop
fisubs
adc
push
xchg
push
sbb
pop
outsl
sar
js
push
adc
movsb
popa
aam
inc
sti
inc
mov
jns
jns
cmp
and
test
imul
pop
add
cmp
mov
imul
cmp
dec
mov
js
xor
test
shlb
test
jo
xor
shlb
fisttpl
test
jo
sbb
leave
push
int3
pop
mov
and
xor
in
add
inc
fnstsw
sbb
in
fwait
lcall
pop
nop
pop
push
and
and
adc
lahf
movb
mov
or
inc
data16
aaa
seto
outsl
sbbl
xor
mov
mov
xor
and
pop
fwait
aas
xor
mov
push
mov
stos
inc
jg
lahf
or
xchg
mull
or
mov
add
push
sub
lods
xchg
xchg
rorl
enter
daa
dec
push
icebp
sbb
ja
mov
shlb
dec
test
adc
or
jl
loope
fidivrl
bound
inc
jl
mov
dec
pop
xchg
pop
add
in
lods
push
imul
lret
dec
cld
ja
cmp
inc
movsl
insb
lea
push
stc
jno
xchg
je
das
dec
stos
int3
out
and
mov
mov
out
test
pop
mov
lret
cli
stos
fbstp
adc
mov
jl
aad
stos
popa
aaa
xor
inc
insl
push
inc
xchg
cmp
mov
or
imul
rclb
or
jns
insl
fiadds
push
mov
xchg
aam
and
or
lahf
mov
inc
sub
repnz
sarb
sti
pop
std
mov
mov
aaa
scas
mov
das
cmp
scas
pop
mov
jb
enter
cmp
sub
sub
fwait
lret
dec
sub
in
outsb
rcrl
ja
xchg
and
fadd
sets
adc
subb
mov
jecxz
lret
movsb
shrl
jbe
push
add
cmp
or
xor
clc
int
ror
lahf
add
pop
cwtl
cltd
or
dec
std
das
sub
jle
repz
dec
sub
es
mov
cli
jle
cmp
sbb
out
cmp
inc
cwtl
sbb
movsb
stc
imul
cli
pop
jge
sbbb
fmuls
adc
aam
shrl
and
or
sbb
pop
sbb
aad
and
mov
popf
push
dec
sbb
push
aam
in
hlt
dec
test
xor
je
dec
xchg
pop
test
pop
into
mov
pop
mov
cmp
lock
mov
in
cld
jne
mov
xor
adc
sbbl
mov
and
inc
xor
mov
and
jecxz
pop
arpl
fnsave
mov
mov
test
scas
icebp
or
mov
cmpb
sub
in
test
xchg
inc
lock
add
push
pop
or
ficoms
jnp
pop
insb
mov
cmp
cmpb
sbb
and
sti
xor
lods
bound
hlt
jecxz
adc
aas
nop
mov
movsl
or
cmpsb
pop
fmuls
lret
mov
add
jecxz
push
imul
sbb
std
add
clc
test
mov
and
cmp
je
popa
fmull
mov
mov
mov
dec
push
pusha
push
popl
in
sub
push
int3
fdivrp
loope
addr16
fs
iret
or
mov
nop
mov
addr16
sbb
cltd
jne
imul
lods
fiadds
sti
or
sub
icebp
mov
das
xlat
add
lret
dec
sbb
mov
addr16
mov
lods
loop
xchg
movsl
stc
fdivl
pop
lahf
hlt
adc
xchg
and
cmp
jo
mov
loop
stos
das
aaa
jnp
sbb
data16
inc
cmpsb
mov
stos
cltd
dec
aas
inc
push
ret
mov
in
popa
lods
mov
je
rol
sub
mov
sub
stos
cs
ficompl
mov
lock
and
add
jns
aad
pop
mov
jle
sub
aam
adc
sti
popf
xchg
sub
inc
adc
xor
shrl
sbb
inc
lret
mov
outsb
sbb
fneni(8087
divl
stos
adc
mov
decb
repnz
lret
xchg
sahf
jns
pushf
or
xor
loopne
loop
inc
iret
je
sbb
mov
in
sub
mov
movsl
aaa
or
cmpl
std
jmp
xchg
cmpsb
inc
cwtl
lret
mov
cmp
jns
sub
sbb
adc
mov
out
inc
das
in
ficompl
add
sub
test
push
mov
mov
jb
jp
cld
leave
push
fildll
fisubrl
xchg
scas
cmp
and
ds
sub
xor
setns
div
adc
mov
jp
pop
sub
into
out
and
push
daa
fistps
sub
xchg
push
jl
arpl
sbb
cltd
enter
xor
inc
hlt
inc
jecxz
lods
aaa
xchg
leave
nop
pop
insl
adc
outsl
in
or
in
pop
mov
sub
or
adc
push
lea
arpl
ret
or
hlt
movsl
cmpsb
push
sbb
fsubs
jge
movsb
xor
cmc
pop
push
jecxz
push
mov
mov
fcomps
out
repnz
cltd
decl
bound
fwait
enter
mov
xlat
fs
cld
adc
cmp
dec
xor
push
shll
dec
out
les
iret
out
jle
jp
int
ret
fwait
inc
push
dec
mov
add
leave
adc
inc
roll
adc
jnp
sar
loopne
mov
ds
fstps
or
xchg
push
lcall
dec
add
dec
xlat
rclb
mov
jae
fldlg2
cmp
inc
xchg
gs
push
xor
std
fs
or
pusha
pop
adc
scas
ds
or
aaa
shl
cmp
dec
int
or
xorl
add
aad
mov
cmp
jmp
sahf
outsb
pop
test
fs
push
bound
loop
fcomi
loop
mov
ljmp
inc
pop
xchg
test
xor
enter
dec
jle
repnz
xor
das
imul
shlb
xor
std
lds
mov
xchg
je
sub
and
and
mov
shl
dec
std
outsl
insl
lods
negl
push
xchg
push
enter
enter
je
movsb
les
xchg
sbb
jno,pn
xchg
lock
test
cmp
aaa
xchg
inc
inc
insl
mov
aam
lock
xchg
mov
xor
ljmp
movsl
ss
mov
out
test
pop
cmp
es
mov
gs
push
cmpsl
cmp
xchg
cltd
stos
test
stc
inc
push
inc
cs
fsubrl
gs
cs
sahf
and
adc
xchg
xchg
jmp
fsubrl
mov
cmc
cmpsl
xor
lds
and
pop
and
add
sti
loopne
jno
mov
lret
or
jge
sub
mov
mov
cmpl
movsl
push
fiaddl
ficoml
adc
lds
jnp
test
aaa
cltd
push
mov
insl
and
jl
add
repz
pop
xchg
jb
dec
sbb
decl
mov
jae,pn
test
sbb
adc
imul
js
jp
sbb
faddl
adc
int
cwtl
mov
cmc
loope
xchg
dec
movsb
clc
lahf
movsb
and
mov
jno
nopl
mov
lods
leave
imul
pop
in
jge
push
or
jle
pusha
repnz
cmc
addr16
ret
mov
xchg
jmp
fisttpll
xchg
sub
fildll
call
arpl
inc
pusha
inc
dec
ds
das
outsb
bound
daa
test
cltd
pop
rcll
subb
and
pop
xor
stos
dec
fdivrl
sub
fildl
sbb
mov
xchg
sbb
push
arpl
inc
sub
arpl
sub
adc
pop
ljmp
daa
addb
mov
cmp
sub
lret
mov
pop
and
rcr
push
mov
push
int
jl
jp
push
cmp
mov
mov
inc
test
mov
repnz
sub
aas
mov
sub
mov
mov
sahf
cmpsl
js
negb
ljmp
mov
int3
and
jl
adc
clc
push
lret
mov
pop
xchg
mov
dec
out
addb
jg
ss
js
sbb
int3
pusha
js
mov
inc
ljmp
add
xchg
adc
mov
add
lret
add
movsb
jo
out
imulb
cmp
enter
xchg
fidivs
aad
inc
clc
out
pop
stos
jmp
cmp
dec
dec
push
jecxz
xchg
dec
mov
lods
mov
jns
dec
or
jp
ret
in
dec
fs
xchg
pop
adc
and
sub
sub
cli
xchg
int3
add
jae
sub
int3
sub
jl
inc
and
or
pop
sub
insb
cmc
pop
pop
sbb
and
fmuls
jbe
xchg
pop
mov
push
lods
dec
outsl
enter
mov
aas
stc
and
addr16
gs
popa
in
jno
lcall
dec
mov
cmpb
mov
mov
pop
push
xlat
sbb
sbbb
rorb
cs
jg
lods
jecxz
push
shrb
test
jbe
insb
add
xchg
cmp
jle
push
add
dec
cmpsb
jge
pop
sub
jecxz
arpl
mov
mov
cltd
imul
cmp
push
cmc
rclb
rcrb
adc
adc
jb
xor
repnz
push
rolb
mov
hlt
movsb
jecxz
loope
andl
cld
js
xor
jg
cmp
cmpsl
sahf
mov
sub
jmp
inc
mov
add
sub
jae
ljmp
and
aam
jae
jmp
mov
cmp
adc
pop
or
rcll
jno
push
jns
cmc
sbb
push
test
mull
adc
or
cmp
dec
fucomp
xchg
push
ret
xchg
sbb
or
lock
dec
jno
icebp
cwtl
dec
sarb
aas
push
iret
jnp
sub
and
cmp
out
cmp
push
cmp
pop
outsl
mov
jl
and
mov
mov
aaa
stos
cmp
pop
mov
aam
jns
loop
mov
pop
pop
adc
xor
fisttpll
xchg
xchg
repnz
push
mov
mov
push
and
dec
push
xor
mov
sub
sbb
fisttps
mov
fiaddl
lock
arpl
cmp
mov
aad
insl
mov
and
cmp
mov
insb
idivb
push
outsl
mov
sub
xor
push
lods
movsl
mov
movsl
jl
jge
adc
pop
xor
mov
dec
cmp
les
pushf
cmp
faddl
call
cmp
mov
lahf
dec
add
imul
icebp
and
mov
jp
loopne
mov
and
inc
adc
data16
mov
popl
ds
mov
daa
jbe,pn
ljmp
lods
mov
push
push
fdivrs
bound
shl
and
ret
sarl
jp
emms
jno
and
sub
ficoms
jmp
and
sbb
pop
jl
inc
xor
leave
fidivl
sub
jb
cmp
int3
and
push
inc
loopne
add
iret
test
push
pop
add
test
fistl
or
jmp
xor
clc
sub
scas
je
cmp
cmp
fs
push
aad
gs
mov
in
jl
cli
testb
lds
xchg
jbe
ja
lret
es
jecxz
stos
test
pop
push
cmp
test
call
xor
cmp
nop
mov
ljmp
andl
mov
cli
repnz
in
jmp
aam
sbb
fldcw
jge
mov
xor
add
aad
scas
xor
sub
out
cmpsl
pop
inc
mov
sub
dec
nop
xor
dec
push
jae
int
aad
pop
xorb
jne
push
stc
push
fiadds
in
mov
xchg
xchg
shll
push
push
jb
pop
add
inc
xchg
push
and
frstor
xor
sbb
arpl
mov
sbb
iret
mov
push
lds
dec
or
int
and
jmp
ret
imulb
dec
jns
pusha
lahf
jp
ds
leave
inc
push
movsl
inc
pop
stos
stos
mov
jl
push
or
push
test
or
sbb
mov
jg
and
cmc
sub
pop
jnp
pushf
mov
mov
adc
push
xchg
push
pushf
fdivrl
xor
cmovle
or
popa
into
mov
add
or
mov
andb
xor
xchg
dec
std
aam
fwait
les
pop
jno
and
mov
dec
out
cmp
loope
cmp
dec
xchg
pop
xchg
shlb
into
ljmp
movsl
int
dec
ret
add
scas
pop
mov
aad
push
mov
push
add
xchg
lcall
ret
test
sub
or
dec
into
lahf
xor
or
aam
pop
jb
lock
jecxz
fisubs
or
loop
mov
jnp
add
pushf
dec
adc
dec
repz
mov
adc
or
lret
cli
jb
and
gs
rorb
or
mov
dec
jp
hlt
add
dec
mov
idivb
xchg
jo
mov
lahf
repz
aam
mov
leave
push
loop
inc
inc
ret
or
jg
out
jns
jg,pt
jg
inc
rclb
outsl
add
pop
xor
or
and
jb
test
cld
push
mov
in
xchg
jp
insb
or
jae
stos
lahf
pop
sbb
xchg
addb
fsub
sahf
leave
dec
adcl
adc
xchg
pushf
hlt
sbb
ret
push
and
dec
xchg
leave
inc
cltd
or
test
jae
movsb
mov
int3
lahf
add
add
inc
mov
insb
icebp
int3
pusha
ds
or
push
and
je
cmpsb
rcrb
hlt
pop
jnp
xor
inc
roll
fsubp
scas
popf
mov
stos
mov
push
es
gs
testl
test
mov
xor
jbe
mov
mov
shrb
ret
mov
into
xor
jb
sbb
mov
dec
inc
or
sub
mov
mov
stos
dec
out
jb
clc
pop
mov
xchg
test
mov
xor
push
lods
sahf
aaa
pop
movsl
out
jp
mov
stc
test
cs
ds
jg
mov
and
jp
xlat
mov
js
jmp
sub
movsb
or
push
mov
inc
ljmp
mov
mov
xorb
dec
push
xor
ret
lock
jp
addr16
jns
push
div
jne
push
testb
push
icebp
lock
sbb
fiadds
add
mov
push
cmp
mov
and
adc
nop
mov
rcll
fildl
lods
or
mov
mov
inc
mov
and
adc
inc
sbb
cs
and
xchg
mov
mov
sbb
rol
push
ja
arpl
jmp
add
imul
lods
inc
std
sub
or
movsl
dec
popa
sbb
clc
popa
pop
popa
stc
outsl
sbbb
subl
add
adc
add
inc
push
subl
pop
lea
dec
loopne
lcall
enter
xor
std
out
cld
je
int3
dec
jnp
inc
fmul
imul
aaa
lret
rcrl
les
out
loop
xchg
jb
shrl
or
lcall
nop
push
movsl
leave
jp
inc
loop
jo
sbb
adc
scas
push
sbb
addr16
imulb
addr16
lcall
fistpll
push
ret
adc
test
jg
add
mov
or
rorb
xor
adc
lret
call
repz
fcmovnb
push
cwtl
aad
sbb
inc
ret
popf
or
andb
shl
jp
xor
cmc
orb
pop
and
int
cld
or
dec
dec
jns
int3
push
out
pop
xor
dec
jg
inc
loop
pop
push
dec
cltd
pop
icebp
dec
test
insb
push
lods
inc
loopne
add
xor
movq
jnp
sarb
ds
cltd
and
stos
or
jmp
mov
adc
mov
push
mov
cmc
lea
nop
mov
mov
xchg
and
loop
hlt
out
notb
out
ret
adc
loopne
inc
and
adc
xor
mov
repnz
mov
cmp
and
dec
lods
movzbl
xchg
aam
mulb
int
push
mov
mov
add
xchg
repz
push
sbb
adc
daa
or
rcr
out
popf
dec
arpl
sbb
mov
test
movsl
ret
lds
cmpb
in
lahf
inc
call
pop
or
push
in
mov
cli
inc
jb
stc
inc
jbe
roll
push
xchg
inc
gs
mov
aas
repnz
mov
rclb
gs
pop
insl
xor
cltd
mov
iret
setb
push
sarb
stc
xlat
pop
lea
and
fcomi
fimuls
out
iret
out
cmp
idivl
lcall
fiadds
jno
jge
mov
jmp
fdivrl
scas
repnz
jmp
sub
dec
lret
repnz
sbb
xor
pushf
rolb
dec
popl
in
pop
push
pop
notl
lock
sub
or
popf
jecxz
repz
test
and
pop
cmp
jl
sub
notl
sbb
sahf
lret
push
in
ds
xchg
pand
adc
rorb
aad
mov
repnz
lods
mov
push
pop
dec
and
je
sbb
loope
or
out
aaa
add
roll
scas
cmc
mov
xor
lods
inc
jno
daa
mov
dec
pop
pushf
push
or
rcl
mov
jns
push
ret
inc
pop
test
insb
or
into
inc
push
rorl
jge
cmp
repnz
fistpll
fwait
or
sbb
jecxz
adc
negb
jo
pusha
adc
fsubl
out
dec
out
xchg
mov
pop
xchg
rorl
mov
in
loopne
sub
cwtl
out
imul
lods
pop
test
inc
into
enter
or
repnz
stc
dec
nop
jl
loopne
mov
dec
repz
movsb
lcall
mov
cltd
mov
inc
mov
pop
adc
pop
or
in
ds
adc
sub
xabort
push
mov
cli
fcoml
ret
jmp
movsb
mov
xchg
jne
jle
jp
sub
pop
stos
ljmp
fsubr
inc
mov
and
xchg
mov
or
xchg
xor
daa
std
pop
pop
inc
clc
in
mov
inc
inc
xchg
jbe
dec
jbe
push
cmp
in
imul
test
sbb
aas
mov
hlt
add
add
or
inc
scas
dec
popf
cmp
jle
testb
insl
xchg
imul
push
ficoml
popa
cmpsl
adc
jp
lahf
sub
test
aas
cmp
inc
push
add
push
scas
ficomps
jnp
mov
jbe
dec
fwait
push
shll
sbb
jg
pusha
jp
in
mov
jae
sbb
lret
jno
in
adc
jmp
fwait
sahf
xlat
ret
ljmp
int
sbb
pop
shlb
das
pop
out
lahf
xor
dec
into
lret
es
clc
xor
add
ffreep
cmpsl
jns
cli
out
pusha
popa
fiaddl
adc
cld
pop
test
pop
lods
sbb
or
hlt
dec
xchg
fwait
xlat
xlat
cwtl
outsl
repz
sub
ret
outsb
adc
clc
jae
cmp
lret
test
out
mov
ds
fldl
enter
shll
jecxz
push
sub
lahf
xor
mov
add
pop
mov
ss
jmp
jno
pop
add
sbbb
sub
sbb
cmpsl
add
push
adcb
movsb
loope
xor
ret
insb
shll
jecxz
pusha
into
mov
aas
mov
inc
lods
sti
cltd
movsb
ljmp
add
ret
pop
movsl
mov
mov
and
out
or
into
pop
sbb
cmc
iret
sarb
lahf
dec
fldenv
sbb
push
inc
push
mov
inc
lock
int
lea
fnstsw
or
sbb
push
or
or
dec
cmpsl
cltd
xor
xlat
mov
dec
iret
call
icebp
pop
xor
push
in
xchg
ret
or
mov
sub
xor
andl
pusha
mov
cmp
call
jae
pop
jno
dec
dec
in
lock
xchg
arpl
jge
clc
pop
mov
fdiv
cmp
dec
mov
stos
sbb
mov
jecxz
mov
inc
mov
cmp
jle
mov
das
inc
fisubrl
xchg
cmpsl
mov
dec
cmp
pop
mov
push
sub
inc
ss
test
mov
add
inc
dec
out
imul
rcl
js
dec
insl
mov
mov
sar
xchg
popf
sbb
lret
loopne
inc
lods
mov
fs
cmpsl
out
sub
adc
loop
fisubrl
icebp
das
leave
jl
jge
mov
test
out
in
mov
addr16
iret
mov
xchg
or
xor
and
mov
jo
push
mov
add
jmp
sbb
mov
sti
or
test
mov
mov
out
andps
lcall
xor
xor
push
jle
adc
fsubrl
imul
add
push
sbb
jns
mov
out
es
leave
jmp
test
mov
push
push
ljmp
push
movsb
scas
xchg
add
call
into
mov
loope
jmp
jns
xor
aad
pop
imul
and
jbe
push
pop
fists
or
push
jecxz
aam
mov
aad
mull
fcmove
push
and
subb
xchg
enter
fildl
mov
insl
push
subb
gs
aad
jecxz
xor
push
and
test
cwtl
mov
js
ret
add
sbb
lods
sbb
sbb
add
or
cmpsb
and
mov
stos
fucomp
jno
mov
setno
ja
mov
mov
daa
cli
shlb
jb
leave
sub
or
mov
ret
aam
fistpl
insl
xchg
push
mov
pop
shll
push
loope
sub
into
outsl
nop
push
push
aad
aad
mov
in
call
sub
and
add
or
es
cmp
cmp
arpl
dec
cltd
sbb
iret
sub
jb
pushf
cmp
or
pop
add
mov
mov
addr16
mov
js
jae
mov
ficoml
loop
sbb
jb
and
mov
repz
xchg
xchg
movsb
aas
sub
das
or
inc
popa
inc
dec
push
ret
add
mov
stc
xchg
pcmpeqb
outsl
and
scas
push
sbb
leave
mov
jns
xchg
xchg
insb
orl
out
sbb
xor
bnd
fsubl
sub
je
int
pop
das
ja
xchg
inc
mov
xor
inc
add
scas
sti
inc
or
and
mov
nop
roll
xchg
imul
cltd
xchg
insb
cmp
inc
loope
rcrb
mov
push
or
add
mov
stos
pop
add
and
out
mov
push
stc
xchg
push
fisttps
ret
sbb
bound
shrl
pop
repnz
stos
fsubs
cs
es
xchg
testl
lcall
lret
pop
sub
xor
bound
in
ds
jp
sbb
jmp
jp
divb
std
shrl
ljmp
mov
adc
loopne
inc
bound
aas
sahf
leave
stc
dec
scas
cmp
xor
fnstsw
ficompl
dec
int
cmp
jo
int3
insw
and
int3
pop
sub
ret
mov
out
in
loope
mov
sbb
and
cmp
jnp
stos
mov
xor
jae,pn
adc
imul
inc
pop
adc
push
mov
fadds
out
popa
lea
jno
sub
lcall
repnz
push
popw
xchg
push
xchg
cmp
push
aam
nop
ja
jmp
push
sub
repnz
cmp
stc
mov
or
or
sbb
fwait
push
leave
rorl
subb
jne
cmc
gs
cld
call
inc
adc
push
add
jo
jg
inc
stos
and
stos
push
xchg
jae
adc
call
int
dec
adc
lods
repz
les
lea
lock
pop
sbb
push
and
lods
lock
and
mov
in
jns
pop
push
dec
mov
add
mov
daa
jecxz
adc
gs
mov
mov
add
mov
jne
addb
sbb
sbb
add
cmpsb
jno
xchg
mov
out
mov
inc
pop
andl
jg
xchg
xor
inc
jmp
or
ds
sub
mov
or
fisttpl
add
or
sbb
js
popa
xchg
xor
push
pushf
dec
push
in
jmp
ret
and
lods
mov
shlb
xlat
xchg
rolb
aas
fidivrs
outsb
leave
fldl
or
pusha
call
sub
ss
adc
testb
and
inc
ds
lods
je
scas
or
fwait
addb
outsb
xor
loope
xor
sub
and
xor
cwtl
mov
rcll
xchg
ret
pusha
pop
fsub
push
cmp
pop
sub
push
scas
adc
dec
repnz
xchg
jo
shrl
pushf
adc
push
xchg
push
ficoms
jb
sbb
pop
dec
xor
mov
push
mov
cwtl
std
punpckhdq
jecxz
out
sbb
lahf
xchg
xor
idiv
sbb
sbb
lret
aas
out
imulb
loopne
mov
ret
jl
je
mov
mov
cmp
jne
cmpb
sub
loop
jo
cmp
mov
movzwl
or
mov
add
mov
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
mov
xor
jmp
add
cld
sbb
nop
andb
push
sub
addl
repnz
rclb
xchg
and
xor
bound
fidivrs
mov
push
and
xor
imul
and
push
push
test
push
movsb
dec
sti
xor
lret
or
outsl
nop
and
xchg
and
outsb
jb
subl
call
lock
cmp
adc
ja
add
fisttpl
mov
cmp
mov
dec
outsl
je
std
xor
mov
fistps
mov
mov
enter
push
jg
sub
lods
or
je
popf
mov
pushf
jb
mov
adc
ss
ss
out
sub
nop
jecxz
sbb
sahf
or
xor
adc
adc
data16
jnp
les
inc
test
dec
jo
jo
enter
push
mov
sub
inc
shll
xor
xchg
repnz
inc
cmp
jno
xchg
adc
daa
into
cli
dec
sbb
push
mov
lahf
pushf
adc
scas
sbb
mov
xor
mov
dec
push
xchg
leave
pop
hlt
fisubrs
fdiv
bound
xchg
sub
adc
js
int3
push
arpl
stos
add
sbb
scas
out
subb
jae
cmpsb
pop
mov
jecxz
fwait
xor
adc
push
sbb
les
mov
fwait
mov
lock
sbb
dec
lret
call
ss
mov
rcrl
xlat
pop
je
out
cmp
sarl
adcl
xor
xlat
out
push
or
ror
cwtl
in
and
sbb
stc
mov
dec
and
sbbl
jg
and
jo
pop
or
sbb
movsl
mov
imul
xor
cmc
test
arpl
mov
int
cld
shll
or
mov
push
push
fnsave
movsl
out
inc
enter
lods
movsl
out
sbb
notb
adc
gs
sbb
idivb
mov
test
inc
xchg
xor
mov
sahf
xchg
ss
daa
or
arpl
xchg
jo
out
cltd
pop
fidivrs
jp
outsb
dec
xchg
into
adc
gs
loope
xchg
fsubs
imul
sub
push
dec
jmp
cmp
out
cld
test
pop
inc
lea
sub
cltd
sbbl
pop
stc
lods
jne
pop
in
xor
inc
sahf
jg
pop
push
repnz
sbbb
repnz
push
mov
les
pop
imulb
pushf
sbb
sbb
sti
or
ja
pop
jnp
cmp
dec
mov
les
lods
cltd
lcall
ljmp
pop
adc
xchg
lret
jne
push
int3
insl
pop
ficomps
dec
imul
cmpsl
data16
stos
push
cmp
outsl
popf
mov
clc
hlt
std
or
pop
add
jle
iret
imul
adc
inc
pushf
mov
jns
cmp
mov
dec
jle
push
fwait
or
cmpsb
testl
cs
xor
subb
or
cmpl
cmc
aaa
sub
pop
stos
mov
mov
mov
dec
test
ss
popf
in
fisubrl
out
xchg
or
mov
fiadds
mov
cmpl
adc
mov
mov
add
mov
dec
xor
jno
and
cwtl
shl
fldt
cltd
add
add
rcrl
data16
mov
mov
sub
and
inc
lds
push
aad
jmp
or
movhps
xchg
les
loopne
subb
clc
and
xor
dec
mov
stos
orb
orb
pop
stos
inc
stc
dec
sti
into
aas
stos
out
mov
xchg
lret
stos
fisubl
adc
dec
into
dec
sbb
jl
and
mov
pusha
mov
adc
sbb
pop
xlat
sub
or
cs
sti
inc
push
lods
rcrb
xor
pop
cli
mov
add
pop
hlt
fldcw
aas
mov
adc
fwait
mov
inc
xorb
in
mov
js
ljmp
sbb
test
push
xor
cmc
xchg
jno
andl
mov
fildl
cld
shrb
aad
dec
jnp
jg
ret
sub
add
xor
push
add
push
scas
jle
out
jecxz
sub
or
sbb
mov
clc
mov
pop
insl
scas
pop
andl
in
les
outsl
mov
arpl
arpl
jge
cld
icebp
cmpsl
dec
xchg
adc
push
cmp
orb
rol
out
dec
sbb
in
call
ja
repz
aaa
mov
dec
xor
fldenv
lahf
add
mov
mov
or
sbb
lret
addl
stos
stos
cmp
lods
icebp
andb
enter
sbb
push
lods
pop
push
pop
xchg
mov
ret
mov
mov
mov
fistpll
fdivrs
mov
std
into
and
stc
ja
ficoms
xor
mov
adcb
or
jo
dec
out
ljmp
out
mov
adc
in
cltd
enter
dec
int3
fldt
test
decl
jmp
loop
arpl
sahf
mov
aaa
or
cmp
dec
push
insl
add
xchg
fildl
mov
cmp
lcall
jne
hlt
mov
push
int3
xlat
in
test
cmp
cwtl
ret
jo
mov
jg
cmp
popf
out
rorl
dec
xchg
les
mov
adc
mov
adc
cmp
mov
in
popf
jg
mov
aad
bound
sub
sbb
inc
sbb
dec
fdivrp
mov
mov
mov
out
adc
mov
fucomp
fdivrl
insb
in
cmp
sub
mov
or
jae
cmpb
gs
or
cld
loop
mov
test
xchg
cli
add
rol
adc
push
fs
cmp
mov
adc
stc
mov
hlt
cmp
hlt
push
fcoml
pop
push
neg
and
mov
dec
je
int
popf
and
ret
das
lcall
movsb
lcall
loop
insl
cmp
fmulp
pushf
xorl
adc
mov
dec
iret
cmp
stc
addr16
mov
mov
dec
out
sub
dec
inc
fwait
das
pop
movsl
or
icebp
and
xor
mov
cmc
loopne
test
jge
arpl
jae
lock
orl
dec
xor
push
sub
adc
adc
and
xchg
mov
add
add
loopne
data16
or
mov
mov
push
cmp
cmpsl
xchg
cwtl
jmp
out
call
aaa
aad
nop
jb
shlb
or
rclb
mov
and
mov
cmp
jmp
push
mov
mov
sarb
lret
and
aam
xchg
mov
cmp
sarl
mov
push
and
icebp
imul
les
jmp
test
insl
dec
cmpsl
push
pop
test
repz
cmpsb
push
adc
test
mov
dec
dec
pop
mov
rolb
loop
call
in
clc
add
or
adc
lret
mov
fsub
mov
test
in
adc
aad
cld
dec
shll
jmp
jae
sbb
jge
sub
jnp
int3
movl
rcr
pusha
sti
call
paddusw
xor
fistl
dec
push
xor
out
lret
out
sub
or
mov
popf
lea
and
inc
leave
arpl
jl
popa
sub
call
pushf
and
mov
jb
testb
jb
jne
xchg
cmp
sarb
in
xor
mov
fistl
daa
movsb
add
aaa
shl
stos
dec
sub
mov
mov
jae
push
rorl
add
rorl
push
mov
pop
sub
sub
cwtl
mov
pusha
shrb
sbb
clc
pop
fwait
mov
or
sahf
fnstcw
lcall
lahf
mov
xor
cmpsl
mov
gs
inc
mov
xor
loope
push
orl
ds
push
sti
js
xacquire
xchg
fisubs
cmp
xor
mov
ss
inc
and
xor
xorb
imul
andb
rclb
insb
sub
into
imul
pop
rcrb
sbb
rorb
sti
stc
inc
or
mov
test
in
leave
pusha
adc
outsl
pop
xor
jl
mov
out
jg
sbb
nop
push
jbe
test
dec
inc
inc
ror
insb
int
loopne
fcmovne
cmpsb
js
fcmovbe
inc
push
xor
ljmp
ret
jle
es
lods
out
cmpsb
jmp
push
in
je
hlt
pop
sub
dec
test
mov
mov
and
pop
mov
mov
cmp
xchg
nop
addr16
push
jo
pop
icebp
mov
fld
dec
mov
nop
int
nop
mov
loop
stos
xchg
sub
push
sbb
int3
pop
and
mov
xor
sbb
adc
dec
lcall
push
and
xor
xor
jge
inc
inc
xchg
pmullw
iret
fsubrl
sbb
cmp
and
sbb
ret
fstps
mov
outsl
shr
popa
daa
mov
ret
cs
insl
push
mov
int
xchg
shl
jmp
lods
in
push
push
push
iret
jp
dec
shll
cmpsl
jb
add
and
negl
cmp
mov
xor
push
lcall
add
out
pushl
cld
cli
pop
loop
sti
imul
xchg
out
int
push
cmc
lods
cwtl
das
mov
push
outsl
aad
push
shl
cmp
jbe
movsb
jmp
fwait
xor
pop
stos
cli
jne
orb
cli
repz
lods
cltd
jp
or
jae
mov
test
adc
das
out
dec
mov
push
push
jmp
bound
inc
test
es
enter
fwait
add
ljmp
pop
mov
call
adc
in
pushf
pusha
dec
out
mov
sbb
adc
aam
imul
xor
cmpsb
ljmp
mov
stos
jg
jbe
dec
pop
es
stos
sub
xor
aas
rorb
mov
jo
push
jno
rorl
popf
push
imul
dec
inc
inc
mov
add
mov
jp
push
pop
scas
ja
pop
pop
mov
xchg
leave
mov
sbb
inc
scas
rorb
sbb
sarl
xchg
mov
stc
push
push
into
fmuls
or
push
bound
jl
mov
push
adc
pop
insb
loope
add
insl
mov
sbb
adc
mov
lods
sub
fsubrl
and
daa
cs
cmp
pushf
push
pusha
pushf
xor
add
add
adc
mov
bound
in
loope
out
pop
cmp
data16
fiadds
pop
inc
popa
inc
push
fadds
jle
cmp
push
out
mov
lcall
cli
aam
fpatan
les
jno
aam
inc
xchg
push
mov
pop
add
or
sbbb
mov
pop
xor
fisttps
inc
shrl
inc
jmp
out
fs
push
pop
push
leave
and
aad
cmp
xor
pop
mov
sbb
pop
sub
xchg
fnstsw
push
sbb
push
cmpsb
adc
das
shll
fnstsw
xchg
mov
jge,pn
pop
jp
xchg
mov
insl
jb
jae
or
addr16
dec
pop
xchg
xchg
xor
fcom
test
test
push
mov
pop
jbe
adc
mov
mov
arpl
jb
fcmovu
in
orl
push
sbb
test
adc
push
fisubrl
cmpl
jle
mov
mov
mov
das
pop
dec
xchg
orl
iret
cmpb
sahf
xor
popf
cli
mov
fwait
sbb
push
bound
jns
mov
or
shll
lahf
inc
sub
je
sbb
jle
add
idiv
mov
lcall
aaa
nop
dec
iret
lods
fcomi
rol
test
repnz
jne
jmp
sub
cmp
fistpll
inc
repz
ret
pop
insl
aaa
arpl
pop
fsubrl
daa
out
mov
adc
stc
jp
fwait
jecxz
adc
or
xlat
rol
and
out
mov
fistl
mov
lcall
shrb
push
pop
test
aad
cmp
sub
test
dec
in
push
pop
push
mov
sbb
or
mov
ret
gs
out
loopne
pop
sbb
incl
sbb
addr16
sub
xor
lahf
lods
mov
shr
ss
sahf
xchg
dec
mov
shlb
push
jg
cs
fcomip
call
xchg
sub
sub
pop
aaa
push
iret
xor
icebp
mov
push
std
mov
lods
xchg
inc
jecxz
test
cwtl
jnp
mov
jmp
in
mov
fidivrl
fwait
inc
sub
push
add
xchg
rcr
add
mov
dec
popf
xor
push
lea
not
xchg
sub
fadds
fsubl
push
or
je
or
cmp
stos
mov
loop
xorb
sub
dec
insb
sbb
inc
shl
aas
mov
pop
test
clc
pop
subl
daa
sub
sbb
push
lds
mov
dec
fs
mov
movsb
sbb
pcmpeqw
divb
or
in
pop
or
insb
pop
ficomps
push
scas
pop
adc
mov
adc
in
les
add
sub
sub
movsl
sub
es
imul
les
arpl
and
pushf
lods
and
jbe
sbb
fcoml
mov
and
jne
test
mov
out
andl
xor
mov
jmp
sub
mov
icebp
add
adc
in
mov
ds
xchg
push
fisubs
leave
cli
mov
pop
push
push
jge
loopne
mov
inc
fldl
shl
outsl
roll
gs
call
xor
sub
xor
mov
pushf
xchg
clc
popa
lock
clc
aas
mov
jns
or
xor
inc
gs
out
mov
and
sti
pushf
stos
hlt
cmp
jnp
cli
xorb
push
in
ret
inc
fistpl
icebp
sti
add
xor
pop
int3
sbb
movsl
and
sub
and
or
jecxz
fisttpl
push
loopne
insb
inc
test
push
push
cs
in
outsb
pop
bound
jg
pop
or
mov
or
popa
sub
ljmp
sub
leave
js
mov
cwtl
fucomip
data16
mov
mov
add
ljmp
lea
es
mov
push
aaa
popf
push
in
cmc
dec
mov
jg
cmp
push
aam
and
pusha
pop
jge
rcrb
mov
and
sub
mov
jecxz
and
pop
hlt
push
fsubl
fistl
mov
addr16
ljmp
add
pop
ljmp
and
dec
xor
xchg
jo
add
icebp
dec
mov
add
test
jns
mov
jl
cmp
hlt
ret
xor
pusha
pop
test
mov
lods
inc
repz
popf
ret
scas
sbb
push
ljmp
pop
loop
pop
mov
cmc
cmp
and
call
jge
shlb
add
add
fistpl
xchg
pushf
add
jmp
xchg
lock
mov
mov
xor
jne
push
or
andl
cmp
fdivs
or
xchg
jge
push
cmp
adc
iret
iret
int3
stos
or
fcomps
adc
addr16
mov
pop
and
movsl
adc
iret
outsl
xchg
cli
aad
lcall
fldl
lods
imul
pusha
cmpsl
jmp
mov
add
or
fildl
pop
ljmp
pusha
jnp
clc
cmp
imull
jge
test
mov
scas
and
outsl
cmc
xor
adc
sahf
aas
mov
cmp
xchg
inc
ds
sbb
pushf
add
jmp
push
cs
mov
shrb
fnstsw
sub
cltd
mov
mov
fstl
ret
in
rorb
jb
or
push
xchg
pusha
mov
iret
imulb
ret
mov
sbb
push
xor
add
jmp
push
sub
es
push
mov
in
insl
stos
testb
sub
push
xchg
sub
jb
test
addl
rcll
fnsave
shl
dec
mov
cmp
lcall
out
outsl
dec
aaa
push
push
mov
nop
adc
cld
loopne
sub
orb
test
gs
pop
cmp
pop
cmpsl
int3
das
mov
cmp
sbb
cmpsl
jns
pop
or
lahf
aam
pop
pop
stc
bound
loope
jge
sarl
ljmp
xchg
sbb
xchg
push
sub
mov
sbb
push
pop
xchg
rcrb
and
enter
mov
arpl
mov
push
stos
int3
jmp
jno
pop
add
aam
outsb
enter
sub
lods
fidivl
fdivs
or
pushf
cmp
aam
nop
lcall
andb
mov
adc
mov
sub
push
fcmovb
lea
ja
lret
jae
jns
cmpl
bound
mov
pop
in
xchg
sub
or
dec
pop
jmp
mov
ret
or
sbb
cmp
push
fld
call
aam
jnp
sub
mov
push
add
pop
das
jne
push
jg
lcall
dec
fnstcw
stos
cmp
dec
pop
dec
mov
inc
notl
or
mov
push
jge
dec
xor
dec
push
or
push
test
clc
pop
dec
mov
in
dec
sub
jae
fnstsw
or
daa
sub
lret
es
or
or
enter
dec
lods
js
rol
jbe
int3
stc
inc
or
leave
mov
out
inc
dec
mov
push
lcall
decb
in
push
enter
hlt
adcl
adc
pop
jo
insl
dec
jecxz
mov
mov
dec
pop
xchg
in
and
in
outsl
shrb
aad
xchg
insb
mov
adc
inc
hlt
mov
ja
push
adc
cmp
inc
loopne
sub
sub
add
out
adc
cmpsb
xchg
das
shll
scas
ds
mov
mov
or
or
mov
ret
push
ss
loopne
imul
mov
or
dec
xchg
mov
mov
xchg
xchg
xchg
data16
jns
lock
inc
push
das
push
hlt
sub
je
mov
scas
cli
enter
jbe
dec
sub
ds
les
outsb
or
pop
lds
fcomps
les
shlb
das
lods
sti
shrb
jge
sti
shlb
fcoms
enter
ret
jo
stos
scas
in
add
movntq
lret
arpl
jl
xchg
jns
inc
fstpl
enter
mov
divl
mov
prefetch
dec
bound
ss
inc
pop
push
negb
pop
push
out
stos
popl
insb
inc
mov
adc
mov
outsl
ds
sbb
mov
push
std
in
int3
loope
dec
scas
sahf
jae
pushf
push
xchg
loop
jg
dec
lods
js
repz
movsl
push
std
icebp
or
cmp
jl
lcall
dec
adc
in
jmp
mov
dec
iret
nop
mov
ret
pop
cmovne
xor
mov
sub
andb
xchg
push
imul
add
aam
and
lods
aam
enter
xor
adc
cmp
sahf
or
std
call
sahf
jnp
inc
and
pop
adc
aas
xor
bound
outsl
data16
xor
cwtl
dec
xchg
loope
jo
mov
push
lret
sarb
shll
pusha
xlat
or
pop
mov
mov
or
scas
mov
int
je
push
fnstcw
pop
push
dec
lods
jle
push
push
loope
test
push
jp
sub
pushf
cmpb
mov
and
mov
add
gs
je
push
lahf
movsl
inc
lret
cld
adc
xchg
inc
lcall
xor
mov
mov
jp
fucompp
test
and
mov
int3
xlat
pop
mov
test
ja
xchg
sub
rolb
mov
and
xchg
jge
push
jl
call
jge
out
and
push
insb
add
mov
sub
dec
xchg
out
xchg
arpl
clc
jg
add
cmpsl
or
or
mov
xchg
jge
pop
pusha
inc
popf
mov
stos
xor
mov
add
shlb
cmpsb
cwtl
pop
inc
cmp
jecxz
scas
outsl
test
out
std
dec
mov
aas
mov
pop
push
push
lock
ja
aad
inc
shlb
in
add
push
shll
dec
out
lahf
loopne
push
adc
movsl
xchg
and
insb
sahf
lcall
enter
sbb
insl
jge
push
mov
insl
out
cli
xor
lock
in
insl
ficompl
ret
adc
les
add
mov
and
jp
scas
sbb
sub
call
out
insl
fdivr
in
and
adc
xchg
or
neg
xchg
xor
pop
inc
fildll
ret
inc
pushf
in
mov
jb
jg
jge
inc
imul
test
pop
popf
mov
and
call
jno
jecxz
aam
or
push
mov
aas
shrl
fcomi
mov
lods
daa
jae
push
roll
add
loope
xchg
push
sub
arpl
jb
sbb
popf
fs
jae
pop
pop
scas
mov
mov
push
sbbb
int
or
loope
aaa
stc
sarb
icebp
sbb
cmp
leave
sbb
dec
movsl
dec
xchg
xchg
push
push
xor
xchg
repnz
push
pop
mov
es
in
cs
jle
mov
jge
xchg
cmp
mov
xor
addb
mov
je
pop
or
push
sub
dec
jmp
jecxz
inc
jle
pop
lret
call
repz
test
and
cmp
mov
cmpl
test
bound
mov
cmp
mov
pop
setge
outsb
cli
mov
aad
int
mov
adc
sub
cmp
enter
enter
inc
dec
gs
inc
mov
pop
inc
mov
adc
sarb
daa
dec
int3
or
or
cld
ljmp
ss
fadds
mov
into
or
push
add
mov
mov
in
mov
adc
roll
in
adc
sarl
add
push
push
bound
cmpsb
push
xchg
in
xchg
jbe
pop
sti
jns
and
dec
in
mov
scas
stc
int3
lfs
xchg
push
ss
lcall
jle
rorl
pushf
xlat
daa
sahf
out
aam
push
sub
and
or
rolb
cmp
jl
pop
dec
add
fcom
rorl
mov
push
xorl
push
inc
mov
out
outsl
push
jg
and
mov
or
dec
test
popa
inc
loope
cltd
mov
pop
push
mov
mov
in
dec
mov
jne
xor
jg
xor
in
sbb
push
jp
in
fsubs
and
push
in
call
inc
shl
cmp
xchg
mov
icebp
xchg
mov
cmpsl
mov
mov
fisubs
inc
cmp
sbb
push
pop
aam
push
aas
mov
shr
mov
fs
mov
filds
push
insb
jp
cld
in
dec
fucomp
and
mov
fstpl
push
add
lahf
xchg
loope
stos
sub
aas
mov
or
mov
popf
xor
cmp
inc
fsubrp
push
dec
test
cmc
lret
push
jbe
mov
lock
lcall
push
inc
mov
data16
out
scas
jbe
xchg
inc
cwtl
arpl
sub
sub
jb
dec
nop
repz
in
pushf
pop
ret
dec
sbb
add
ret
ss
lret
in
push
test
xor
cmpsl
xchg
sbb
xchg
out
cmpsb
inc
stc
pop
mov
push
xor
les
adc
lcall
int3
inc
shll
push
jg
push
add
sar
mov
mov
decl
mov
inc
sar
je
subb
sbb
out
sub
arpl
sub
xchg
out
mov
and
clc
scas
jne
lea
jae
shl
iret
fisubs
imul
fmuls
das
outsl
dec
jmp
lds
lock
mov
add
push
and
inc
xchg
dec
jns
lret
iret
dec
ret
mov
mov
rorb
cltd
mov
push
sbb
pop
addr16
dec
frstor
sub
ja
sbb
cltd
arpl
cmp
das
cltd
adc
adc
push
pop
rorb
dec
jb
test
je
push
or
jo
cltd
sbb
mov
rolb
or
add
lcall
imul
xor
imul
stos
nop
adc
xchg
stos
pop
sbb
push
jmp
cs
push
in
out
mov
inc
xor
xchg
and
pop
out
push
inc
pop
xorl
xchg
cmovne
sbb
inc
int
pop
test
std
test
jbe
sub
cmc
jl
adc
nop
jbe
mov
out
inc
stos
dec
stos
pushl
adc
loop
shrl
jae
or
decb
pop
dec
ss
xchg
jbe
adc
enter
xorb
mov
push
sub
pop
push
mov
jo
mov
or
lods
lock
stc
xchg
inc
jg
sbb
mov
inc
inc
outsl
push
mov
and
push
outsb
sbb
fbld
cmp
pop
popf
nop
clc
push
testb
pop
xor
sub
test
imull
out
mov
inc
and
aam
test
jno
ficoms
mov
or
adc
add
pop
mov
inc
sbb
loope
sbb
ja
cwtl
lea
fbstp
cld
stc
stos
xchg
pop
sbb
inc
xor
movsl
sub
dec
xchg
or
jecxz
mov
pop
mov
mov
lcall
adc
jmp
xor
sub
xlat
mov
aas
jle
outsl
sub
mov
das
jmp
jle
add
dec
jmp
clc
fs
lock
and
test
testl
mov
iret
jmp
mov
inc
add
pop
ret
cld
clc
addr16
inc
mov
pop
sbb
movsb
sbb
xchg
adc
addr16
bound
xor
inc
adc
pushf
mov
sarb
mov
adc
xchg
push
adc
fldenv
loopne
or
dec
addr16
insl
jl
mov
push
cmp
out
jb
insl
iret
pop
inc
add
ja
sub
pop
inc
jns
mov
fists
mov
jle
jb
loope
push
dec
rep
jmp
ret
test
jp
xadd
fisubs
ds
push
jl
cmp
mov
xchg
xor
scas
cmp
imul
push
mov
in
insb
or
and
imul
jge
xor
cwtl
cmpsl
movsl
loope
push
or
fldenv
cmp
mov
sarl
and
cld
movsl
stos
icebp
or
jb
into
loope
jnp
stos
test
nop
mov
adc
rolb
insl
and
push
roll
ljmp
je
into
imul
lods
and
lcall
je
xchg
jecxz
jg
jo
jb
mov
jo
ficoms
push
dec
and
out
mov
loop
cmp
mov
jge
add
inc
sti
cmp
or
and
mov
push
or
cld
jns
dec
mov
cmpsb
lss
ss
xor
xor
psubsw
xor
mov
stos
cmp
adcl
sbb
enter
sub
xor
fs
and
dec
in
dec
jl
nop
inc
int3
sahf
sub
sbb
test
dec
jmp
adc
pop
push
add
aad
jnp
outsl
inc
inc
pop
les
xor
int
push
add
fdivs
adc
ja
icebp
roll
pop
add
add
clc
int3
jne
les
mov
rol
xchg
repnz
and
pushf
or
negb
jbe
and
mov
vmulss
int3
test
cwtl
leave
leave
dec
fistpll
int3
lahf
mov
aam
pop
jecxz
mov
pop
jbe
outsl
repnz
or
pop
pushf
aam
push
out
sub
or
sub
jmp
xor
int3
sbb
out
sbb
xchg
inc
movsb
jns
cmp
pop
adc
adc
dec
pop
ss
cmp
leave
cmp
ret
mov
jo
sub
fwait
stos
jno
testl
sub
and
jo
xchg
mov
add
mov
pop
mov
and
jmp
adc
rorl
adc
mov
movl
jmp
mov
int3
mov
inc
mov
push
add
sbb
aas
push
ss
in
mov
sbb
leave
mov
in
les
xchg
or
in
and
mov
dec
sub
or
call
mov
xor
cltd
xlat
sbb
push
cmp
repz
jg
inc
out
bound
push
std
inc
ljmp
xor
pop
rcl
dec
jp
fisttps
cmp
adc
xchg
outsl
and
xchg
mov
repnz
ljmp
push
hlt
pop
adc
cmpsl
xchg
push
es
jnp
aaa
lea
cmpsb
push
pop
scas
sub
and
push
dec
sbb
push
imul
dec
popa
dec
xchg
push
mov
sbb
test
push
or
sti
push
sbbb
xor
xor
movsb
xchg
out
mov
push
pop
inc
repnz
adc
das
and
fsubl
int3
out
lahf
mov
int
xchg
shlb
faddl
out
test
push
ret
push
mov
lcall
inc
xchg
mov
fldt
pop
rolb
xor
adc
xor
pop
adc
pop
mov
in
and
mov
mov
and
clc
rcrl
pop
pop
iret
cmc
fsubrl
test
sub
or
ret
jge
shrb
popa
iret
rolb
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
jmp
add
mov
hlt
aas
push
inc
pop
cmp
pop
addl
ret
outsb
fsubr
test
pop
dec
aaa
adc
push
sbb
mov
bound
xchg
add
mov
imul
dec
or
mov
ja
jns
sub
inc
shlb
jp
nop
test
shrl
or
nop
insb
sub
aas
fdivrp
xlat
xlat
lret
test
out
test
enter
cwtl
or
aaa
icebp
je
fisttpll
xchg
fstpt
dec
imul
push
es
inc
pop
adc
das
dec
stos
je
daa
scas
cmp
in
test
xchg
ret
ja
ret
mov
in
or
popa
or
xchg
mov
nop
cmp
jo
jg
or
add
repz
out
add
dec
int
ret
sbb
xor
or
enter
pop
or
mov
leave
or
loopne
jb
in
pop
pop
add
aaa
stc
out
into
movsb
iret
mov
insb
bound
popf
fwait
scas
mov
sub
mov
xchg
push
dec
aad
js
data16
call
push
adc
dec
or
test
jnp
pop
inc
xchg
repz
lock
inc
xor
std
inc
shlb
inc
dec
jb
lahf
push
xlat
pushf
inc
mov
fwait
cmpsb
loope
or
addl
xlat
andl
pushw
cmp
filds
clc
cmp
inc
outsb
cmp
jmp
movsb
clc
jb
push
leave
push
shrb
xchg
xor
aad
aas
lds
add
mov
sbb
mov
mov
icebp
pop
aas
stc
sub
push
xor
xlat
jae
pop
adc
mov
pushf
popf
mov
push
or
cmpb
xchg
insb
add
push
xor
mov
in
pop
inc
inc
mov
add
in
xor
add
push
jg
dec
in
or
insb
inc
repz
jbe
int3
add
jp
push
xchg
jae
in
inc
cltd
stos
jae
xchg
mov
mov
stos
xchg
xchg
xchg
pushf
xor
das
call
call
pop
cmp
push
repnz
pusha
mov
inc
popf
xor
xchg
jmp
stos
adc
add
jecxz
push
popw
mov
cmpsl
xor
and
push
fdivs
mov
movsl
jecxz
and
lea
inc
adc
xor
ljmp
rol
sbb
cmc
mov
insl
rclb
stos
dec
mov
outsb
pop
push
push
mov
icebp
mov
add
mov
aad
adc
inc
cmp
jnp
adc
shlb
add
dec
ja
jno
test
loop
adc
inc
sbb
cltd
inc
pop
in
sbb
fwait
pop
mov
cmc
mov
or
dec
into
out
add
push
mov
dec
test
arpl
stos
fcomip
sbb
sbb
pop
add
sbb
jae
sbb
arpl
cs
inc
push
fdivl
test
jns
movq
outsl
mov
in
gs
jno
pop
mov
cmpsl
add
or
fwait
or
out
push
push
nop
repz
int3
clc
bound
or
lahf
into
shlb
je
fisttps
lcall
cltd
mov
addr16
in
and
outsb
or
ror
mov
negb
pop
rorl
dec
xchg
dec
in
pushf
mov
xchg
xlat
pop
sub
jo
shl
push
mov
rclb
orl
jge
mov
dec
inc
sub
gs
addr16
mov
push
out
mov
jmp
scas
dec
lcall
adc
adc
sarb
cld
push
push
cmc
sub
and
and
sub
add
lahf
stc
loop
enter
adc
les
cli
mov
mov
jb
and
pop
hlt
sub
jl
addr16
mov
dec
pop
push
fstpt
sub
repz
lret
hlt
xor
out
mov
jne
shrl
aam
in
lret
mov
in
adc
inc
aas
mov
insb
movsl
enter
cmp
pop
loop
cmp
sub
dec
movsl
xor
or
pop
sbb
fdivrl
pusha
les
insb
jne
jmp
push
inc
test
in
jns
push
xor
loop
repz
xchg
add
dec
fwait
ss
sub
inc
mov
jl
xor
lahf
sub
test
enter
ss
jmp
std
clc
jb
cmpsl
xchg
int
mov
popf
xlat
dec
jg
add
fwait
inc
fldenv
lock
dec
sub
rcrb
jns
xor
mov
mov
imul
mov
mov
push
pop
adcl
add
fs
loopne
and
mov
mov
jb
cmp
divb
xchg
mov
adc
mov
mov
add
mov
movsl
test
pop
or
jne
ja
rcll
mov
cmpsl
jmp
mov
jp
xchg
pop
jle
pop
push
lods
ss
mov
mov
jnp
cli
je
pop
add
jae
scas
in
movsb
cltd
rol
sti
sub
add
and
nop
jno
or
insl
add
rorl
arpl
inc
and
adc
popa
mov
pop
adc
adc
mov
cltd
mov
xor
aaa
das
jns
add
push
stc
add
mov
fsubrs
lahf
std
outsl
pop
data16
xchg
mov
in
dec
incb
outsl
in
popf
shrb
cltd
jo
vpackuswb
and
mov
sub
mov
outsl
loope
stos
repnz
dec
mov
leave
inc
push
xorb
pop
pop
xchg
dec
mov
divb
jge
pop
repz
idiv
cmovge
fs
and
lcall
jecxz
lock
or
sahf
fsubrl
mov
mov
rcrl
mov
pop
repnz
mov
in
das
mov
and
mov
arpl
stos
push
sub
mov
dec
rcrl
jbe
idivl
sub
aaa
push
sub
fstpt
sti
sub
clc
sahf
adc
cmpsb
lcall
and
cltd
jp
lret
and
stos
mov
aas
aas
rcrl
jno
cmpsb
jle
fidivl
jno
ljmp
fadds
cs
jno
daa
pop
loopne
out
es
jae
push
int3
lods
ss
lods
xchg
and
mov
iret
or
cmpsl
xor
test
cmc
pop
repnz
gs
mov
test
cmp
inc
fdivrs
in
lock
dec
aas
sti
inc
mov
mov
jmp
cmp
jns
nop
int3
xor
sbb
cmpb
test
ficoms
cmp
int
in
dec
cmp
sub
movsl
les
jge
dec
aaa
push
cmp
orl
or
dec
testl
aas
add
test
inc
in
fistpll
insl
cld
jmp
adc
subb
mov
xchg
jge
test
xchg
test
cmc
push
and
add
jae
push
hlt
lods
xlat
insl
or
dec
bound
pop
dec
mov
loope
sub
jle
sahf
les
sahf
xor
xchg
mov
adc
cmp
cwtl
daa
sub
jmp
in
shll
and
add
lret
inc
mov
sbb
xchg
aad
mov
add
mov
jb
inc
push
addr16
xchg
insb
cltd
pop
test
insb
shl
shl
ss
xchg
mov
mov
stos
stos
xchg
rorb
int3
xchg
int
leave
dec
lods
sbb
jno
lods
popa
ss
aaa
jp
xchg
cs
lahf
adc
inc
sbb
outsb
jns
sarb
inc
mov
les
push
cld
in
rolb
subb
fistpl
xlat
ficoms
fsubrs
push
sahf
mov
stc
arpl
imul
stos
repz
clc
mov
leave
imul
xor
sahf
stc
fbld
bound
leave
mov
enter
push
popa
adc
mov
mov
add
mov
pop
popa
std
jo
pop
out
or
into
adc
inc
outsb
dec
adc
or
dec
stos
loopne
iret
sub
mulb
addr16
inc
arpl
outsb
push
jl
cmpsl
iret
nop
in
jns
xchg
push
hlt
mov
inc
push
imul
jb
dec
loop
add
popa
inc
sbb
cli
sahf
bound
push
inc
bound
jbe
shrb
inc
pop
enter
lgs
enter
mov
dec
add
pusha
xchg
cmp
imul
out
repnz
lods
shlb
andl
int
in
lea
jb
stc
add
xchg
loop
das
xor
aas
fnstcw
mov
or
loop
outsb
mov
out
rep
enter
xchg
and
and
bound
adc
cmp
outsb
hlt
popa
fstps
sub
aas
pop
enter
clc
mov
pop
pop
adc
mov
pusha
js
enter
aas
loope
fisubrs
sahf
jns
cmp
add
add
rcrl
xchg
dec
lret
dec
push
lods
add
sbb
xchg
mov
sar
movsb
js
sub
sub
cmp
sbb
cmpsl
arpl
push
jp
scas
daa
push
into
push
insb
lea
sbb
sbb
insb
sub
subl
sbb
and
inc
repnz
sbb
outsl
mov
std
sub
jbe
xchg
aas
or
sub
mov
jge
mov
push
mov
mov
mov
xor
nop
imul
js
insl
out
mov
dec
jp
cmp
test
mov
xor
loopne
sub
pop
aam
loop
adc
pop
int
jp
mov
xchg
xchg
jg
scas
out
test
ja
insl
xchg
xchg
adc
hlt
sarb
jb
pop
cmpsl
outsl
cmp
cmp
jno
mov
call
pop
lea
pusha
xchg
mov
scas
cltd
scas
mov
mov
sbb
cld
gs
pushf
cmp
out
test
stc
xchg
fstpt
inc
mov
cmpsb
inc
loopne
aas
inc
cmp
fs
lret
imul
aaa
mov
jbe
pop
inc
ds
shr
rol
fwait
cmpsb
mov
fyl2x
push
sbb
mov
mov
cmp
decl
shr
jmp
push
mov
mov
test
cmp
jno
les
jge
cmpsb
lahf
sub
popf
xchg
mov
hlt
ja
push
add
pop
ror
cmpsb
idivl
adc
cmp
sbb
xor
out
ret
push
dec
pop
call
ja
fnsave
dec
jbe
das
lret
pop
pop
xchg
aad
mov
mov
pop
pusha
popa
mov
mov
enter
and
jg
out
and
inc
inc
inc
jmp
je
mov
jo
das
cwtl
xor
cmp
or
jle
je
lahf
movsl
daa
outsb
daa
rcrl
mov
xchg
push
push
pop
imul
jmp
push
dec
dec
mov
push
add
pop
out
sub
inc
das
xor
xadd
sbb
mov
bound
sahf
xchg
pop
hlt
sub
mov
test
adc
roll
xchg
adc
adc
xchg
adc
add
cmpsb
jge
aaa
test
xchg
fmuls
in
iret
sub
dec
sub
mov
out
and
lods
bound
fstp
or
cli
push
and
xchg
fadd
jle
push
xor
cmpsb
sbb
jne
xchg
mov
sub
into
fnstsw
xor
xlat
mov
int
push
psraw
sub
aad
add
divb
and
out
add
and
shl
mov
outsb
jae
xor
je
and
xchg
in
sbb
fcmovne
fs
sbb
dec
mov
pop
cltd
ret
popa
adc
pop
scas
rorl
les
leave
cmp
arpl
push
aad
insl
loopne
lcall
xor
je
mov
dec
es
testb
jmp
mov
inc
dec
lods
out
sbb
scas
cmpsl
sarb
cmpsb
mov
xor
jge
stc
xchg
cmp
dec
inc
sbb
iret
fimull
aas
mov
xchg
loope
cmp
call
mov
test
jno
dec
jno
scas
dec
add
jecxz
aaa
in
sub
sub
outsb
andb
insb
ror
rol
out
adc
jge
outsl
sbb
out
clc
sub
jns
repz
sub
xchg
inc
or
jge
in
jecxz
and
outsb
add
mov
sub
stos
lret
mov
jl
or
pop
push
lahf
jg
mov
ret
lret
push
sbb
gs
icebp
dec
mov
ss
and
jg
sub
insb
ds
mov
mov
flds
jbe
mov
jp
in
push
fnstenv
dec
je
lret
mov
pop
in
adc
cmpb
xor
into
mov
test
sub
push
fdivrp
dec
test
dec
add
push
jecxz
sub
push
cmpsl
test
adc
jo
cmp
test
mov
bound
mov
ds
nop
push
xor
arpl
scas
nop
clc
or
pusha
ds
jno
ja
push
jmp
inc
icebp
xlat
and
or
jp
pop
stos
fucomi
sub
je
push
ss
nop
jle
push
stc
jle
push
inc
add
filds
sbb
xchg
mov
jns
sub
mov
outsl
fs
and
xlat
inc
out
pop
dec
imul
stos
mov
out
jb
mov
mov
adc
sub
pop
rorl
cmp
jne
dec
push
push
pusha
sbb
or
xchg
sub
inc
iret
in
rcrb
mov
scas
mov
jecxz
dec
mov
add
xor
jecxz
inc
out
cmp
outsb
outsl
cmp
out
jnp
push
xor
mov
mov
jg
pop
out
sbb
add
inc
setg
cld
lret
pushfw
insl
mov
call
or
inc
push
sbb
push
adc
stos
fwait
pushl
mov
iret
lds
jo
inc
popa
inc
dec
btr
mov
ret
mov
mov
and
pop
insl
inc
xlat
adc
xor
push
sarb
or
jecxz
mov
ss
sahf
scas
cld
and
addr16
sub
add
jnp
shl
push
repz
test
adc
add
jmp
into
pushf
push
rep
sub
loop
arpl
dec
imul
mov
cmp
mulb
sub
adc
xchg
js
jp
push
sti
ja
cmpsb
push
sbb
jno
aad
test
jmp
negl
filds
or
inc
lret
pop
fwait
xchg
fs
mov
dec
sbb
mov
loop
aas
cmp
mov
mov
insb
jmp
inc
roll
lahf
sub
rorl
push
andb
cmp
xor
mov
insb
mov
iret
ljmp
movsb
push
out
pushf
or
and
jbe
cmp
imul
popf
mov
mov
xchg
push
aam
jmp
imul
pop
add
sahf
ds
test
das
xchg
into
mov
sti
sbbl
lret
inc
dec
mov
xchg
in
push
lds
lock
xchg
jbe
jle
adc
outsb
jnp
jnp
adc
and
add
and
int
out
fisubl
std
faddl
es
in
data16
sti
clc
pop
push
aas
mov
or
es
rcr
xor
mov
insb
mov
jp
lods
xor
add
lcall
push
xchg
add
or
popf
lret
adc
or
xor
or
xor
push
push
push
scas
imull
bound
das
paddq
popf
pop
xchg
rcrb
in
mov
push
xchg
aad
jnp
mov
sub
cmp
in
in
inc
shrb
and
push
jo
and
ljmp
ljmp
scas
cmp
mov
adc
mov
aas
mov
and
stos
mov
imul
loope
xor
test
add
ss
inc
mov
dec
jg
inc
out
test
xchg
out
in
rcrl
pushf
cwtl
sbb
jp
pop
push
loopne
fsubs
out
cmp
sbb
push
repnz
mov
or
mov
jl
sbb
out
or
test
into
jno
push
sub
inc
and
inc
inc
push
mov
ja
repnz
mov
or
pop
inc
int3
lods
test
sub
cmp
sbb
out
push
dec
adc
aas
mov
mov
cwtl
push
leave
mov
jae
repnz
cmpsb
mov
jge
add
sub
sbb
jl
ljmp
rcl
sbb
dec
add
insl
adc
mov
jbe
pusha
sub
add
mov
inc
cmpsb
pop
mov
ja
cmp
mov
mov
cmc
ret
dec
jbe
jge
fldenv
jg
push
out
lret
iret
inc
push
push
testb
out
dec
fstp
cli
push
jl
outsb
scas
adc
or
pusha
jbe
mov
enter
shll
push
test
outsl
inc
sbb
adc
lret
in
cmc
push
push
xor
xchg
stc
jne
mov
adc
mov
daa
xor
sahf
mov
in
rclb
cmp
pop
dec
sub
xchg
pop
pop
add
jae
cltd
mov
sbb
fdivrs
push
cltd
fcmovbe
cmp
mov
clc
arpl
sbb
mov
mov
pop
dec
sbb
shrb
jge
pop
mov
movsl
or
sub
loopne
loop
psubq
popa
iret
scas
sbb
pusha
lea
mov
data16
sbb
fldl
cmp
inc
cli
addl
adc
repz
mov
dec
insl
xor
adc
das
andb
loopne
cs
mov
and
pop
mov
clc
ss
xor
or
in
dec
mov
shll
mov
enter
xor
leave
cmc
iret
mov
or
jae
mov
push
pop
out
scas
cltd
sbb
and
mov
xor
iret
iret
mov
arpl
stos
push
mov
xchg
push
xor
out
test
lds
sub
dec
mov
dec
add
call
outsl
rcl
das
dec
sbb
outsb
pop
outsl
mov
jbe
adc
test
xchg
mov
outsb
cs
adc
stc
add
mov
rorb
or
clc
jle
inc
lret
add
mov
jbe
xor
nop
xchg
fidivs
or
or
xchg
sbb
push
or
xchg
dec
rorb
xlat
and
fsubrl
xchg
lods
pop
jecxz
xor
mov
sub
jge
jge
arpl
mov
mov
stc
xor
sbb
filds
sbb
cmp
sbb
pop
jnp
daa
and
repz
mov
mov
je
and
dec
pop
movsl
xchg
lds
cmp
xor
repnz
xchg
mov
sbb
sbb
mov
lock
mov
pop
shl
shl
nop
fucom
inc
jge
movsb
mov
inc
aad
fdivrp
repnz
rorb
popaw
dec
test
xchg
or
pushf
push
adcl
or
repz
subb
add
rcrl
aaa
mov
out
inc
andl
jle
mov
mov
inc
out
lahf
or
jecxz
std
dec
outsl
mov
jo
mov
dec
inc
jle
and
and
mov
adc
pop
sbb
dec
xchg
imul
push
inc
stos
stos
in
adc
push
int
and
add
push
mov
out
jmp
sub
cmpsb
pop
xchg
outsl
repz
adc
faddl
stos
xor
std
fdivl
adc
or
aas
mov
adc
dec
cmp
scas
movb
dec
inc
pop
je
and
adc
push
cmp
sbb
inc
icebp
inc
jle
and
adc
mov
cmc
xchg
lea
dec
scas
or
popf
in
or
inc
cs
adc
jno
push
int3
hlt
es
scas
ds
jae
jnp
jne
cmpsl
push
xorb
cmp
pop
mov
lcall
outsb
movsb
mov
mov
inc
mov
shl
jne
int3
mov
scas
mov
aaa
sub
mov
sub
mov
mov
push
jnp
clc
scas
xchg
nop
pop
sbb
xchg
aas
dec
mov
sub
sbb
push
sahf
out
lahf
test
ja
mov
xchg
sub
mov
popf
jge
xor
cmpsb
xor
jecxz
pop
loope
pop
jae
add
jl
outsb
push
scas
inc
add
lahf
add
jns
rolb
nop
adc
and
popa
xchg
sbb
aaa
cmc
dec
add
rolb
jge
pushf
jb
jns
or
mov
add
mov
xchg
xchg
repz
sbb
add
sti
fstpt
push
xor
jp
in
push
jbe
xchg
mov
mov
test
ja
cld
mov
lcall
movsb
out
dec
mov
xor
movsl
cmp
sub
xchg
shlb
andb
mov
mov
inc
cmc
mov
sahf
xchg
insb
xor
or
lcall
xchg
jecxz
das
sub
fldcw
pusha
bound
inc
pop
mov
outsb
mov
xchg
fdivrs
mov
pop
or
push
fucom
lds
cltd
xchg
lret
fldl
popa
or
push
sbb
out
mov
rcll
sub
btrl
mov
data16
push
push
jg
out
cli
aad
push
mov
mov
daa
mov
pop
pop
and
push
xor
stos
xlat
movsl
fwait
xor
xlat
push
cmp
imul
or
cwtl
and
add
add
push
es
daa
cmpsl
mov
in
cmp
fs
mov
adc
cwtl
cmc
inc
cli
inc
jns
push
fidivs
cmp
and
adc
pop
shrl
nop
lret
pop
aas
inc
lret
imul
sarb
cmp
mov
lret
add
ljmp
mov
jno
or
and
mov
ljmp
fldt
popf
std
in
inc
loopne
mov
stos
xchg
inc
jnp
mov
xlat
cs
jno
cs
jne
and
jo
adc
dec
gs
aaa
xchg
mov
movsb
lock
sahf
jnp
test
fstpt
aam
fldt
scas
enter
mov
xchg
cmp
inc
mov
sbbb
mov
je
out
xchg
rcr
add
xorb
sbb
mov
xlat
scas
sahf
inc
adc
mov
adc
push
bound
cmp
bound
cld
lahf
movsb
xor
mov
cmp
sbb
mov
mov
cmp
and
add
xchg
xor
hlt
and
sbb
mov
mov
lret
addl
cmpsl
dec
adcl
mov
imul
mov
inc
fst
jns
jmp
fstl
push
push
xchg
push
nop
inc
jno
or
in
lds
cmp
insb
pop
imul
ss
jno
addr16
ret
or
fldenv
xchg
jns
push
xchg
pop
push
nop
sti
rolb
fsubrp
add
addb
fsts
mov
and
adc
arpl
rclb
jmp
jno
add
sahf
std
mov
mov
daa
push
inc
aam
cmp
push
outsb
xchg
clc
cmp
pop
imull
mov
pop
in
mov
lods
pop
mov
jne
adc
add
push
and
cmp
sub
mov
dec
imul
sbb
data16
sbb
inc
nop
cmp
push
jmp
stc
stc
push
xor
das
sbb
outsl
cmp
jecxz
dec
fistps
shll
cmp
mul
inc
fldenv
mov
inc
jecxz
lcall
leave
adc
xor
loopne
xchg
jne
mov
pop
fisubrl
push
int3
adc
shl
bound
lods
arpl
out
mov
cmp
stos
adc
cltd
ja
add
imul
push
outsl
mov
dec
mov
push
adc
aam
rorb
fmuls
mov
stc
push
and
mov
rcl
imul
rcrl
scas
pusha
add
cltd
mov
mov
push
mov
push
push
rcl
popf
into
fucomip
popf
test
lret
mov
stos
push
cmp
data16
mov
lea
pop
sub
fdivl
cmpsl
lock
movsb
lods
jl
inc
xchg
loop
xlat
add
or
es
sbb
bound
inc
stc
lods
pop
std
jae
aas
popf
data16
sbb
push
cmpsl
out
in
mov
addr16
loope
and
mull
pop
out
xchg
adc
push
loopne
sub
ds
mov
inc
int
shrl
lret
lea
adc
stos
jo
test
dec
sbb
jo
sahf
test
sub
cmp
loop
add
call
push
add
xchg
bound
mov
add
push
dec
addr16
std
gs
mov
iret
cltd
add
lock
test
fldt
pop
mov
les
jp
mov
les
and
scas
mov
roll
andb
cmp
lret
mov
mov
rcl
sahf
test
lcall
add
xchg
ret
in
in
mov
neg
fwait
iret
mov
or
adc
mov
cli
daa
sub
adc
in
sarb
mov
ret
pop
scas
push
shl
jp
sbb
adc
insl
cmpsl
fldenv
fwait
enter
lods
leave
fwait
adc
outsl
shrl
fcomp
mov
cmp
sub
or
outsl
popf
sti
add
jnp
testl
jo
mov
arpl
xchg
pop
dec
test
inc
mov
mov
cmp
mov
mov
data16
mov
add
fs
cmp
sbbb
idivb
mov
push
and
jl
and
lea
or
mov
xor
das
mov
sbb
cmpsl
mov
faddl
test
cwtl
repnz
aaa
mov
and
xorb
clc
pushf
int3
ljmp
lcall
dec
cltd
xor
dec
fdivr
add
cmp
int
scas
mov
shrb
loope
mov
fdivrs
sub
pusha
stos
fs
test
pop
stc
leave
jnp
clc
fistpll
jmp
fstpl
xor
xchg
loop
mov
insb
xchg
mov
jb
aas
daa
cmp
int
xor
stc
fsubrs
xchg
and
inc
jmp
pusha
mov
mov
pop
ret
ss
or
cmpsl
int3
stos
pop
dec
mov
dec
cs
push
into
imul
cld
clc
addl
cmp
dec
dec
mov
imul
repz
pop
fmull
push
mov
push
popf
xor
or
outsb
cs
mov
adc
fxch
ret
mov
push
add
add
xor
ret
loop
fldenv
arpl
push
mov
lfs
movsb
sub
mov
fdivrl
dec
xchg
das
popf
inc
pop
jne
fnstcw
mov
lea
imul
add
cmp
lods
fdivs
mov
or
icebp
adc
stos
leave
stos
loopne
test
fstpl
ljmp
in
pop
out
insl
loopne
xlat
mov
fisttps
and
pop
or
stc
xor
xchg
xchg
loopne
sbb
jae
push
out
cmp
and
fidivrl
mov
in
ljmp
pop
loopne
sbb
mov
daa
mov
mov
pop
cmpl
adc
incb
mov
aas
mov
xchg
scas
and
inc
test
ja
das
jb
pop
sbb
ret
loop
gs
and
or
movsl
mov
xorb
sahf
leave
jno
sti
shll
push
fadds
xorb
enter
sbb
pushw
ds
cmc
sbb
sbb
idivl
cmpsl
das
in
dec
mov
jl
adc
popa
rcrb
jno
sub
xlat
sub
mov
inc
push
dec
cmpsl
mov
cltd
sbb
xchg
stos
inc
ficoml
pop
scas
add
mov
daa
lahf
repz
sahf
mov
pop
xchg
xor
dec
hlt
sub
bnd
lret
push
inc
sbb
jmp
pop
adc
dec
cmp
iret
data16
call
popf
add
loop
jp
mov
lcall
dec
mov
iret
mov
std
sbb
data16
adc
push
sbb
cltd
sub
adc
pushf
lock
and
outsl
jl
scas
jp
mov
mov
dec
je
and
call
sub
out
mov
xor
aaa
inc
sarl
sbb
clc
xor
push
mov
stc
movsl
mov
aam
mov
pop
fsubl
add
adc
cwtl
push
and
xor
jnp
adcb
insb
sbb
pop
lea
loop
jo
mov
mov
out
enter
sbb
enter
mov
pop
jecxz
inc
fstpl
or
inc
outsb
push
xor
mov
aad
xor
js
outsb
add
and
mov
mov
pop
push
imul
xchg
jo
fistps
aas
inc
xchg
ss
rcl
pop
push
jns
push
hlt
and
xor
cmpsb
es
jg
pop
xchg
sbb
fs
fldenv
mov
push
outsl
xchg
icebp
shr
pop
adc
cmp
repz
es
pushf
sub
sbb
push
test
fildl
push
das
orb
push
sub
inc
jbe
sbb
leave
faddp
xor
xchg
test
push
sar
mov
pop
lcall
jne
push
fcoms
lods
add
std
and
insb
push
sbb
inc
lods
ret
sar
pop
jmp
lods
enter
je
test
xor
and
outsb
pop
push
cmpl
out
fwait
shlb
or
in
ret
pop
mov
outsl
das
dec
shrb
push
test
enter
and
sbb
jecxz
sbb
mov
enter
out
in
imul
pop
out
or
in
xorb
jecxz
imul
popa
jnp
std
mov
enter
sub
or
lret
fpatan
shr
mov
push
sbb
loope
pop
sub
dec
xor
mov
mov
cs
and
aam
hlt
push
xchg
fcoms
lret
repz
ds
aad
adc
xor
jle
sub
dec
into
into
cmp
icebp
ficompl
mov
mov
mov
imul
xor
mov
ret
add
push
xchg
sub
mov
dec
shrb
mov
loope
jle
lds
cli
or
and
out
pop
xor
mov
notb
icebp
insb
aam
cmp
into
mov
xchg
jle
jle
out
jb
fbstp
and
sbb
pop
fwait
insl
mov
cmp
push
scas
imul
mov
fldenv
mov
std
sub
xchg
jnp
fsubl
mov
push
iret
insb
into
sti
gs
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
jmp
outsb
lods
or
mov
cmpsb
or
push
je
scas
addl
inc
lcall
ficoml
jno
dec
push
inc
fcomps
pushf
add
into
out
xchg
fistl
das
cli
sbb
xor
mov
aad
push
or
es
leave
loop
pop
xchg
mov
push
repz
inc
or
pop
test
or
or
push
xor
jnp
push
jl
test
or
daa
inc
inc
sbb
and
and
mov
mov
iret
or
mov
cmpsb
sar
inc
dec
mov
mov
negl
cmp
in
testb
aaa
sbb
inc
push
cmpsb
xchg
jmp
dec
icebp
out
lret
ffree
out
add
arpl
aad
mov
adc
scas
and
mov
pop
aad
loope
or
data16
add
test
inc
lods
clc
mov
pop
pop
std
es
inc
scas
mov
cli
dec
inc
xor
adc
fstpl
jno
jp
pop
shrl
push
adc
mov
xchg
or
xchg
and
or
jbe
sbb
out
std
in
inc
repz
pop
andl
add
cltd
push
outsb
mov
xlat
ss
lret
lods
xchg
cmc
loopne,pt
push
idivl
ds
inc
cmp
ds
cwtl
scas
mov
sbbl
call
nop
or
push
dec
push
mov
aam
mov
lret
out
inc
nop
push
jmp
adcb
mov
mov
cwtl
and
scas
enter
or
jae
rorl
ret
dec
mov
jecxz
sbb
popf
push
data16
movsl
jns
aaa
cmpsl
jge
leave
call
mov
or
loope
fwait
xchg
jne
hlt
cmpb
push
mov
sub
mov
xor
aas
daa
xchg
push
mov
jnp
lock
push
or
roll
mov
ljmp
cmp
leave
das
jp
xchg
insb
out
test
mov
pop
ret
sbb
mov
subb
sti
out
xor
mov
cmpsl
ret
adc
rcl
mov
pop
stos
pop
pusha
adc
jmp
mov
fidivs
jge
or
mov
popf
lret
ss
inc
jmp
je
push
xlat
aaa
bound
aas
pop
ret
int
data16
hlt
or
mov
sub
addl
push
adc
jmp
jae
popl
lds
sub
mov
mov
mov
xor
sub
cli
in
jge
xor
lods
jb
jne
aaa
fwait
pop
xor
add
and
add
jmp
aam
jb
clc
das
pop
sbb
hlt
sbb
dec
inc
cmp
sub
mov
stc
cwtl
aaa
hlt
rorl
dec
jo
fs
lock
and
jl
lret
add
jno
cmc
mov
out
cwtl
push
pop
inc
push
jnp
add
cmc
sahf
out
push
dec
mov
add
jnp
scas
sbb
cmp
lcall
inc
and
push
push
and
je
xchg
dec
js
fbstp
loop
sub
mov
add
cmp
mov
popa
into
dec
pop
cmpsl
aad
ficoml
negl
cli
movsl
dec
or
mov
mov
push
add
sub
dec
cli
stos
add
push
cmpl
outsb
adc
in
in
and
push
cli
insl
add
pop
xchg
adc
mov
in
cmp
xor
cld
cmp
add
mov
std
fwait
outsl
jns
inc
mov
adc
add
adcb
adc
lret
add
jl
jns
sbb
ja
xchg
psraw
aam
test
push
mov
mov
aam
mov
xor
inc
stos
jne
sub
sbb
sub
add
mov
xchg
adc
pop
mov
outsb
jo
lret
cmp
aaa
in
xchg
cmp
sub
out
mov
je
shlb
sub
mov
inc
hlt
imul
adc
adc
add
into
mov
push
cmp
xchg
mov
pop
frstor
decb
pop
cld
ret
adc
fdivrs
sbb
fldenv
mov
mov
push
dec
mov
xchg
push
ljmp
xchg
push
imul
sahf
add
pop
or
or
popf
cmp
mov
mov
jo
lret
jp
js
stos
jp
int3
imul
leave
bound
dec
insb
add
sahf
nop
dec
xor
pop
dec
cmp
pop
push
xor
clc
gs
sar
mov
sub
push
mov
jno
push
mov
lea
scas
pushf
cmp
aad
add
in
xchg
jecxz
xchg
push
test
cli
mov
cmp
push
push
rorl
int
push
mov
or
fisubl
pusha
mov
loopne
jle
sarl
lret
push
lds
shr
mov
ret
popa
mov
and
stos
sub
cmp
add
outsl
sub
inc
bound
mov
mov
mov
and
adc
push
dec
lods
or
aas
push
repnz
lea
or
mov
shl
inc
or
mov
dec
xor
push
jl
je
sub
sbb
push
cmpb
add
ja
push
lret
sbb
test
push
sbb
shrb
mov
hlt
rorb
int3
negb
jbe
inc
push
clc
insl
fstp
call
jne
cmp
jno
pop
push
adc
in
sub
push
mov
out
xchg
jg
lcall
or
idivl
int3
mov
cmp
adc
daa
dec
dec
push
outsl
adc
outsb
pop
jge
xchg
cld
enter
mov
mov
adc
outsb
xchg
ljmp
fidivrs
dec
test
lahf
ljmp
push
cmp
das
insb
loope
dec
lods
jg
mov
xorl
imul
hlt
je
pop
add
push
inc
xor
mov
sahf
cmp
jae
push
gs
push
jecxz
popa
std
cltd
cmp
inc
push
mov
outsl
or
dec
clc
mov
rolb
inc
pop
or
inc
jmp
lock
push
cli
popa
push
jge,pn
push
stos
adc
and
and
stos
mov
mov
and
cltd
xchg
icebp
pop
popf
data16
and
shl
ret
push
push
sbb
imul
sub
or
inc
adc
inc
xchg
gs
pop
inc
lret
dec
cltd
iret
mov
test
mov
ljmp
mov
jno
pop
mov
jno
mov
xrelease
sbb
jbe
les
and
mov
and
push
mov
popa
mov
xchg
inc
dec
ficompl
xlat
shlb
int
and
xchg
ror
push
popa
fstpl
enter
ds
bswap
es
lea
lahf
and
mov
lret
call
inc
insl
loope
shll
and
cmp
int
jmp
jle
je
lods
in
pop
test
leave
or
and
gs
xor
pop
sti
and
int
bound
popa
push
mov
lock
clc
cmp
mov
nop
jne
cmpsl
sub
lret
outsb
int3
leave
scas
xchg
and
and
popf
push
cmp
insl
lret
mov
les
jg
xor
push
addr16
enter
lods
loopne
inc
sub
jle
ficoml
dec
dec
das
xchg
test
inc
shll
mov
mov
sti
jbe
mov
inc
js
push
jg
into
push
add
sbb
and
jp
push
dec
mov
roll
daa
popl
shr
movsb
fucomp
mov
out
push
sbb
xchg
sbb
mov
mov
and
pop
lods
xor
push
sub
std
inc
fwait
jb
mov
cltd
inc
adc
sbb
sub
sbb
mov
mov
mov
addb
xor
sub
cmp
push
enter
sub
loopne
pop
sbb
lret
sub
dec
dec
cs
push
into
insb
jb
add
sbbb
xor
mov
movsl
mov
aaa
cmp
xchg
mov
jno
stos
bound
leave
pop
sub
push
hlt
fdivrl
pushf
sbb
push
nop
out
push
imul
or
ljmp
pop
lds
lock
addr16
sub
cmp
gs
dec
test
xchg
inc
cmp
popf
mov
ss
inc
and
test
cmp
cwtl
out
sti
bts
mov
scas
pop
push
lods
test
in
imul
subw
and
sub
add
aaa
out
mov
inc
in
loopne
hlt
xchg
sbb
scas
xor
stos
mov
insb
inc
inc
adc
leave
ror
scas
imul
pop
jle
clc
dec
adc
jne
ret
dec
add
popf
stc
push
xchg
xor
sbb
sbb
aam
fsubrs
jle
lods
in
sbb
xchg
icebp
push
or
or
and
xchg
outsl
cmp
cmp
dec
movsb
push
sarb
mov
mov
sbbl
mov
pop
inc
rcrb
addr16
sub
mov
sub
mov
jo,pn
lcall
jle
fmuls
lahf
pop
mov
adc
inc
adc
mov
imul
daa
inc
xchg
adc
pusha
sbb
mov
sbb
daa
xor
imulb
mov
add
jle
inc
adc
dec
jp
pop
pop
mov
loope
mov
cmpsb
std
mov
lcall
adc
xchg
call
add
orl
daa
inc
push
jg
mov
ficoms
xor
daa
cmp
mov
cmp
and
hlt
fmul
xor
xchg
aad
inc
xchg
in
xor
fxch
dec
leave
or
jecxz
xor
inc
pop
push
push
ljmp
mov
fmuls
loopne
test
gs
pop
into
rorl
das
pop
jge
push
aam
cld
and
rolb
dec
cwtl
lret
out
sub
ss
cwtl
mov
xchg
test
pop
or
stos
dec
add
push
cli
xor
adcl
mov
jmp
scas
test
sub
xchg
pop
mov
loope
imul
push
cltd
fcmove
cmp
jns
aaa
loop
cmp
mov
popa
js
je
jmp
ret
rcll
pusha
lahf
roll
xchg
scas
dec
sbb
int3
gs
js
mulb
shlb
jmp
mov
or
jno
pushf
push
mov
shll
int
and
jno
xor
xlat
stos
movsb
outsb
pop
cmp
fwait
stc
push
gs
add
rorl
adc
dec
push
or
mov
pop
push
mov
and
push
dec
in
daa
add
pop
ljmp
pusha
or
andb
pop
fsub
dec
das
fisubrl
sbb
mov
or
adc
ret
xchg
jl
cmp
pushf
push
mov
adc
shrl
inc
jnp
stos
add
imul
loop
addr16
iret
cmpsb
xor
fs
mov
dec
pop
cmp
inc
in
cld
dec
or
adc
xlat
and
xchg
xchg
ffree
fistpll
test
test
fisttpl
and
fbld
jge
pop
aas
out
add
adc
aas
popf
fildl
cltd
xor
sub
dec
imul
es
sti
mov
sub
test
popa
fcoms
mov
ds
jb
cmpsb
call
sub
inc
int
push
adc
pushf
adc
lret
jp
sbb
scas
ret
mov
cmpb
lahf
gs
and
test
xchg
mov
movsb
cmp
sbb
in
test
decb
mov
shrl
mov
stos
mov
xor
mov
or
loopne
xchg
xlat
in
mov
mov
pop
push
push
cmp
xchg
rolb
out
jns
adc
cmpb
adc
xchg
jmp
xchg
push
jns
dec
dec
lds
xor
mov
adc
data16
data16
mov
or
and
mov
lahf
ret
lock
aaa
mov
xchg
sbb
jne
sbb
pop
pop
dec
and
stc
lods
lea
pop
jg
data16
jp
push
push
mov
js
int3
fcomip
jmp
js
xchg
inc
xor
mov
add
lret
sahf
imul
jmp
loope
mov
adcb
mov
jmp
cmp
xor
cmc
sahf
inc
shr
and
test
mov
into
lahf
bound
lahf
jg
je
mov
adc
mov
jbe
xor
sbb
mov
fmull
ss
sub
cmp
fwait
jbe
mov
jl
rcll
sub
insb
loope
jae
jmp
xor
add
xchg
data16
in
scas
sub
arpl
inc
lock
jge
dec
sub
adc
dec
push
sbb
int3
shl
sbb
dec
icebp
cli
in
cmpl
sahf
jg
inc
sbb
in
mov
pop
push
jae
mov
mov
cs
into
daa
xchg
ljmp
movb
fcmovnb
outsb
mov
shlb
rorl
adc
dec
mov
dec
adc
popa
rolb
xor
lahf
lcall
loop
loopne
sub
stos
mov
orb
in
js
or
bound
leave
aas
mov
pop
loope
xor
movsb
adc
jmpw
into
andnps
mov
cmp
pop
push
sub
movsb
mov
mov
iret
lea
jp
inc
sbb
ret
add
push
imull
sti
inc
xor
push
andb
sti
pop
mov
xchg
pop
mov
pushf
jns
test
xorl
test
inc
pop
sub
or
hlt
es
out
ljmp
pop
sub
or
adc
xchg
pop
and
fs
lret
dec
mov
or
adc
or
push
pop
js
addb
leave
leave
aaa
icebp
adc
lods
add
testl
out
mov
lods
mov
iret
sub
add
xchg
fsubp
outsb
dec
pop
mov
imul
inc
cmp
inc
aaa
fiaddl
out
or
dec
clc
adc
int3
clc
repz
or
sub
or
js
dec
lods
or
inc
fldt
xchg
aas
pop
mov
inc
pop
gs
mov
mov
divb
imul
push
or
and
mov
inc
orl
inc
data16
jl
mov
cmc
sarl
sbb
xchg
int
inc
xchg
and
mov
shrl
popf
insb
push
mov
xchg
loope
mov
mov
aad
daa
sbb
add
cmp
push
add
test
adc
sub
out
movsb
cmpsb
in
jns
fcomps
sub
lock
dec
dec
loopne
push
or
cmpsl
fmul
aas
popa
pop
into
sub
out
out
loope
addl
cmc
xor
pop
mov
iret
or
adc
mov
lret
dec
call
pop
sub
lods
pop
push
mov
imul
negl
mov
sbb
add
lahf
pop
sar
xchg
push
orl
aas
adc
or
mov
or
gs
dec
xchg
push
pop
fmull
fwait
adc
clc
aad
sbb
sbb
daa
mov
and
insb
sub
xchg
adc
xchg
loopne
sbb
lods
and
aad
push
jg
adcb
popa
fucomp
das
xchg
mov
mov
mov
jmp
pop
popa
ret
jg
jg
and
mov
stc
push
push
xlat
sub
sbb
and
loop
lock
imul
sub
pop
pushf
adc
cmp
int
jnp
pop
rcrl
cwtl
mov
and
mov
cmp
addr16
xor
xor
ds
mov
pop
and
fcoml
or
movsb
mov
sti
jp
arpl
sti
xor
jmp
ds
xlat
mov
fistps
mov
xlat
ljmp
mov
jno
fsubs
dec
lfs
or
push
mov
sbb
cld
lods
or
inc
imul
rcl
adcb
add
test
hlt
mov
jmp
aad
fisubrs
or
psrad
cmovge
push
push
aas
cmp
data16
dec
mov
inc
fsubl
test
pushf
mov
and
push
imul
shl
rcr
xchg
push
pop
add
fstp
adc
xor
cwtl
mov
mov
popf
lret
js
xchg
cmpsl
jo
es
notb
mov
subb
dec
xchg
fisubrs
popf
flds
dec
not
adcb
pop
sub
mov
pop
scas
fisttps
movsb
add
fsubrs
mov
rclb
ja
and
fstps
dec
imul
shll
ljmp
sbb
jb
int3
int3
mov
xchg
xor
aaa
das
shl
into
push
push
out
loopne
lock
sbbl
gs
sbb
idiv
icebp
cld
inc
fsts
ljmp
xor
jp
inc
lock
orl
ror
sti
icebp
scas
jle
out
stc
outsb
xor
ret
out
mov
mov
mov
lods
sbb
cmp
call
or
pop
sbb
jecxz
int3
or
iret
add
aaa
and
pop
xchg
fsubrl
cmp
dec
pushl
xchg
or
push
lock
nop
outsb
out
jb
push
pop
repnz
fs
cmpsl
push
fwait
dec
lock
std
loop
mov
add
test
push
lock
mov
orb
sbb
sub
or
pushf
jecxz
jnp
mov
mov
loop
cli
mov
js
imul
push
aam
js
rol
mov
test
enter
inc
xlat
and
insl
cmp
icebp
cmpb
test
scas
fimuls
inc
in
addr16
cmpsl
shl
popf
clc
sub
es
out
jbe
inc
loope
icebp
xor
pop
cmpsl
add
mov
pop
mov
mov
sbb
aaa
test
sub
xchg
rcrl
jb
movsl
push
xor
or
xchg
pop
mov
mov
jge
hlt
dec
leave
add
xchg
and
rsqrtps
adcb
filds
rorb
push
mov
sbb
cmpb
lea
adc
ss
fstps
push
shlb
xchg
outsb
movsl
jecxz
inc
std
in
add
push
mov
cmpsl
mov
and
loop
insl
mov
pop
push
fs
cmpsb
xor
inc
cltd
scas
call
jbe
pop
sahf
and
enter
or
adc
aas
ret
mov
mov
fs
adc
rcr
push
jo
pop
and
repnz
adc
lea
rcrb
clc
inc
popf
sahf
je
sub
xor
mov
js
in
loopne
cmc
mov
xor
decl
incb
cs
push
cmp
or
outsb
adc
sbb
sbb
pop
cmp
mov
sub
cltd
push
mov
sbb
iret
cmp
into
mov
stos
sub
lods
ds
test
es
movsl
mov
pop
mov
out
mov
xor
lea
les
sub
stos
repz
data16
add
out
lods
lahf
sbb
lods
call
sub
cwtl
pop
inc
out
testl
mov
sub
in
or
mov
fs
call
push
push
mov
mov
popa
xchg
out
shll
mov
aaa
jb
aam
sbb
xor
cmc
rorb
jns
rorl
pop
pop
ds
cli
imul
mov
cs
rorb
add
ret
pop
bnd
addr16
adc
popf
notl
in
pop
mov
into
insb
iret
pop
pop
sub
aam
jmp
push
cmp
jns
and
mov
and
cmp
and
jo
jmp
and
cli
mov
push
and
test
cmp
lret
jb
aad
rol
jecxz
inc
addl
dec
in
cmpsb
lods
mov
addr16
lret
pop
xor
pop
xor
leave
inc
ffree
xchg
xchg
cmp
ja
and
adc
adc
mov
cmp
dec
ljmp
adc
mov
aaa
out
inc
add
jle
push
add
push
mov
in
xchg
push
cmp
divb
jbe
in
or
fneni(8087
aaa
in
pop
mov
fnstsw
pop
repz
icebp
out
movl
in
push
xchg
js
adc
int3
sbb
movsl
stos
or
shll
lea
daa
enter
test
sbb
xchg
xchg
sbb
out
mov
add
fsubl
jae
adc
and
std
cld
into
dec
xchg
and
btc
les
test
cmp
push
or
inc
sarl
dec
push
sbb
mov
pop
in
fistpl
adc
in
mov
inc
pop
xor
fidivrs
pusha
xor
inc
fsubrp
mov
cmc
cmp
and
xor
dec
adc
mov
push
mov
scas
mov
cmpsb
scas
js
cli
xchg
pop
add
fimuls
push
ror
inc
jne
push
adc
orl
stos
jb
pushf
outsl
and
xchg
cmp
repnz
jg
pop
push
adc
push
jle
xor
loope
jnp
jno
cmp
shr
and
mov
sub
mov
in
pop
cld
or
iret
cwtl
mov
cs
nop
pop
push
sarl
pop
xor
push
xor
test
inc
adc
js
push
test
sbb
test
shlb
sbbw
mov
mov
shr
and
mov
inc
loope
xchg
es
pop
adc
lods
lahf
jmp
sbb
repz
push
out
jns
mov
cmpsb
stos
hlt
jae
sub
xchg
orb
inc
das
and
lock
push
cli
sbb
ss
fisubrs
mov
xor
rclb
mov
jmp
arpl
in
addb
adc
dec
jp
outsb
dec
rdmsr
loop
iret
or
mov
jno
pusha
ja
ret
fdivrs
jmp
sub
stc
jp
roll
cld
fwait
in
mov
pop
adc
xor
jne
lods
xor
arpl
dec
jno
test
adc
xchg
or
shll
jo
xor
add
xor
push
push
fisttps
or
sub
dec
mov
int3
xchg
pop
imul
pop
sub
dec
jg
fildll
popa
cltd
jmp
addr16
cmp
fisttpl
or
divl
mov
jo
mov
and
cmc
ljmp
jg
movsb
int
imul
lahf
jle
js
movsb
jmp
call
cmpsl
clc
inc
inc
ja
into
arpl
in
ret
cmp
cltd
xchg
faddl
sarb
das
adc
and
cmp
or
leave
inc
mov
pushf
mov
push
aaa
cld
jb
fsubrs
lea
jecxz
xor
cmc
mov
sbb
sub
and
sar
loop
enter
and
lret
sbb
cmp
imul
in
in
inc
mov
sti
stos
ds
adcl
inc
sub
mov
dec
clc
xchg
into
psrlq
pop
xchg
adc
loop
sarb
cmpsl
push
cwtl
pop
mov
pop
fmul
jg
sahf
pusha
out
xor
xchg
arpl
mov
or
inc
xchg
cmpsl
jnp
fidivrs
mov
incl
fcmove
lcall
cmp
mov
ficompl
lahf
push
fnstsw
jbe
mov
xchg
push
xchg
mov
jns
dec
bound
pop
inc
mov
jp
cmp
inc
bound
pop
add
movsb
mov
int3
je
popa
push
out
mov
dec
repz
int3
fisttpll
jbe
cli
std
shl
mov
push
dec
into
xor
outsb
pop
lea
sbb
pop
mov
ret
das
fistps
repz
push
cwtl
pushf
loope
test
dec
adc
sahf
lods
sbb
les
sarl
int3
mov
iret
jbe
js
jb
xor
or
pushf
xor
pop
adc
aam
pusha
idivb
lret
jnp
jns
call
lock
xorl
aas
push
pushf
out
pop
push
testb
mov
jge
inc
xchg
cmpsb
mov
incl
and
push
mov
mov
xchg
ret
aad
jl
clc
push
aam
sbb
or
in
sub
or
mov
stos
jns
or
add
push
pop
scas
pop
cmp
test
test
or
mov
rcrl
iret
xchg
xchg
mov
sub
leave
call
xchg
negb
adc
jecxz
ss
stos
ds
hlt
in
mov
hlt
cmp
lret
mov
push
loope
pop
adc
adc
push
xchg
pushf
mov
sub
out
sahf
dec
mov
ljmp
adc
sub
xchg
out
sub
and
das
jg
mov
push
cmp
xor
mov
femms
mov
or
clc
mov
dec
inc
pop
push
mov
push
fdivr
ss
pop
icebp
test
add
es
jbe
push
sbb
mov
jl
insl
inc
mov
popf
cmp
xor
sarl
mov
jmp
leave
mov
fiadds
and
mov
movswl
sub
data16
imul
imul
sub
xchg
pop
jg
mov
test
daa
mov
cmp
mov
jb
sbb
cld
fildl
push
and
xchg
xor
mov
jae
gs
stc
pop
mov
push
fisubl
std
adc
outsl
xchg
cmp
xchg
addr16
lds
inc
mov
or
scas
cmp
fstps
mov
ficoml
jbe
rcr
mov
dec
scas
xchg
arpl
mov
clc
scas
pop
inc
sahf
sbb
lods
xor
sub
bound
jns
sbb
sbb
test
rorb
pop
rorl
mov
jns
mov
inc
aaa
sbb
pushf
data16
adc
jl
fbld
std
outsl
sarb
xor
add
cmp
pop
and
add
sub
leave
mov
and
sbb
lods
movsb
outsl
in
les
push
sbb
cmp
loop
fimull
lods
or
dec
dec
jg
cwtl
shrb
fstpl
mov
mov
sbb
sub
mov
mov
push
fmull
mov
mov
mov
sbbb
xor
mov
std
inc
adc
in
daa
ljmp
mov
rcrb
and
sbb
adc
ret
and
push
and
lcall
mov
insl
mov
inc
test
push
push
xor
loop
sahf
test
fwait
pop
outsl
lds
out
adc
fmul
and
mov
test
test
clc
add
add
xchg
imul
inc
das
into
sub
sub
arpl
dec
push
test
nop
xor
in
jmp
addr16
scas
insl
dec
out
cmpsl
iret
movsb
dec
add
adc
into
lods
rclb
add
jnp
mov
or
sbb
dec
jecxz
lcall
inc
pop
fnstcw
cmp
xorl
xchg
fistps
mov
push
jbe
bound
negl
xor
xchg
adc
mov
adc
fmuls
jg
and
xchg
add
or
sub
out
mov
sbb
push
pop
fcomi
cltd
push
cmpsb
enter
imull
int3
xor
stos
push
sbb
adc
bound
jo
mov
sahf
fnstsw
sbbl
cmp
mov
and
sbb
mov
shll
inc
xchg
sbb
pop
test
out
jmp
cmp
cmpsb
push
xor
cmc
mov
sub
dec
insl
inc
sub
cmpsl
divb
fdivs
sub
lods
pusha
loopne
push
xor
inc
jp
add
mov
mov
hlt
ror
inc
pop
fidivrs
into
test
lods
fists
sub
adc
cmp
gs
hlt
jne
out
jne
mov
jnp
mov
loop
dec
adc
out
dec
jnp
lcall
jg
lods
leave
sub
fldcw
jle
std
shr
leave
sub
leave
loopne
mov
dec
aad
dec
xchg
std
stos
and
or
sahf
daa
mov
fs
ds
sub
sbb
inc
add
xchg
ja
enter
mov
jbe
mov
xor
cmp
jecxz
push
cmpsl
mov
sahf
or
xor
pusha
inc
ficompl
data16
stos
sub
xchg
xchg
lods
into
xor
pop
pop
loope
inc
push
sub
cmp
imul
arpl
leave
addw
int3
sub
xorb
ja
mov
xchg
add
jp
sbb
inc
roll
pop
jle
cmp
lret
sub
loop
cmc
js
pusha
push
divl
add
pop
adc
ret
shr
scas
or
aad
cs
or
mov
ljmp
cmp
arpl
aas
leave
ss
or
xchg
push
dec
cmc
add
rorb
adc
pusha
inc
cli
xchg
mov
fcompl
aad
jge
dec
fistpll
inc
dec
cmp
roll
repnz
jp
and
push
sbb
test
lar
and
jae
cmpsb
ret
fcompl
mov
cmpsl
xor
add
out
sbb
xchg
or
cs
cld
mov
lret
xchg
mov
push
sbb
sub
sti
push
out
xchg
sti
sbb
jne
adcl
pop
push
jne
hlt
push
shll
lds
int
sbb
insb
pusha
xchg
mov
mov
or
add
sbb
ja
and
pop
icebp
scas
sub
int3
inc
mov
movsb
cltd
hlt
in
jg
inc
jae
aam
jmp
aaa
lds
jmp
enter
push
mov
xchg
inc
test
int
push
jle
and
dec
sub
insb
cmp
and
mov
or
ja
andl
jl
lea
leave
cmp
add
push
test
scas
fiadds
mov
jmp
fmull
outsl
test
dec
adc
js
shl
out
and
push
add
fistpll
pop
ret
adcl
sub
repz
popa
sbb
cmp
aaa
shlb
test
mov
pop
jbe
fmull
std
jns
cmpsb
add
add
mov
hlt
fidivl
mov
mov
ljmp
add
add
addr16
js
mov
mov
mov
scas
jae
push
and
jae
test
stos
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
mov
xorl
mov
mov
sbbl
xor
xorl
add
mov
and
mov
and
xor
xorl
push
xor
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
or
mov
mov
subl
xor
mov
add
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
movb
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
jmp
lea
incl
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
xor
movl
add
andl
mov
sbbl
movl
push
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
or
push
mov
xor
xor
or
xor
mov
sbb
mov
mov
push
add
jmp
incl
mov
mov
inc
movl
cmp
jb
not
mov
xor
movl
add
jmp
movzwl
or
mov
adc
mov
adcl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
add
addl
movzwl
sbbl
mov
movzwl
and
mov
sbbl
movzwl
xor
add
mov
movl
mov
mov
inc
not
mov
movl
cmp
jne
and
mov
sub
mov
xorl
xor
and
add
mov
mov
sbbl
xor
add
adc
mov
addl
movl
movl
movl
movl
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
xor
add
movzwl
mov
mov
je
mov
subl
mov
xor
xor
notl
sub
notl
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
mov
movl
add
andl
imul
mov
xor
mov
mov
add
mov
add
incl
or
mov
mov
mov
sbbl
add
xor
mov
dec
mov
add
mov
add
and
and
mov
xor
mov
subl
mov
lea
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
or
mov
sub
movzwl
and
add
mov
andl
mov
xor
adcl
add
movl
jne
movl
jmp
xorl
mov
subl
sub
xor
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
or
dec
mov
jmp
mov
subl
mov
mov
xor
decl
xor
adcl
sub
sub
xor
mov
mov
mov
jmp
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
addl
imul
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
addl
add
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
mov
mov
andl
add
movl
xor
mov
subl
mov
mov
xorl
add
xorl
and
or
mov
mov
sbb
mov
xorl
mov
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
jmp
rcr
sbb
mov
nop
cs
or
add
imul
xor
xchg
xchg
jle
or
mov
je
scas
loop
rolb
es
xor
test
push
jno
lcall
adc
fisttps
cwtl
push
mov
lods
mov
adc
movnti
cld
mov
sahf
adc
mov
fsts
jecxz
hlt
jno
lahf
xor
int3
sbb
testb
mov
sbb
pop
push
cltd
cmp
lods
dec
adc
test
test
subb
daa
test
push
xchg
daa
pop
js
sub
jecxz
mov
push
mov
dec
inc
jnp
xchg
int
cld
outsl
push
dec
lret
xor
xchg
xchg
jle
mov
pop
cmc
scas
add
add
outsb
sub
cmp
dec
scas
adc
jmp
rol
dec
inc
jo
test
xor
fs
sub
lcall
xchg
sbb
or
not
push
adc
jge
fldcw
pop
outsl
push
sti
push
sub
mov
rcrl
push
enter
xchg
sbb
xchg
pop
gs
lods
mov
fmull
pop
mull
test
jle
rol
sbb
pop
ja
mov
push
push
negb
mov
inc
lret
idivb
aas
jbe
mov
adc
loop
test
scas
or
mov
outsb
rcrl
cmpsb
cli
mov
add
lahf
add
into
dec
sbb
jmp
jle
dec
cmp
mov
enter
and
les
and
fiadds
loopne
and
sti
movsl
out
fs
sbb
jns
cmpsl
pop
xchg
pop
xchg
andb
fiaddl
out
inc
loop
aad
ror
lcall
or
sbb
in
in
pop
push
out
xchg
pop
jbe
push
inc
jmp
add
test
push
jecxz
cmpsl
movsl
fscale
daa
pop
mov
shl
sub
mov
stos
adc
xor
mov
lds
cmp
js
jb
fdivr
dec
addl
jne
in
js
mov
ficomps
cld
sbb
lock
sub
pop
xor
inc
mov
sub
adc
sbb
sbb
mov
popf
jle
int3
jg
pop
xor
cmpsl
pop
inc
repz
and
push
jo
pop
xchg
pop
loop
cmp
push
mov
jne
sti
mov
pop
and
jae
jo
xor
jno
mov
out
ds
add
sbb
sahf
sahf
or
int
or
sbb
in
lahf
and
mov
stos
dec
shl
sub
mov
adc
sub
cld
cmpsb
loope
jle
loopne
imul
pop
scas
jae
lcall
lock
cmpsl
out
dec
lods
push
push
mov
and
mov
mov
xchg
jns
mov
xchg
sub
lea
push
jbe
fdivrp
lahf
clc
outsb
fs
ret
or
sub
js
or
xchg
stos
or
pop
push
pop
cmp
mov
mov
inc
sahf
mov
inc
and
call
mov
mov
add
out
loopne
dec
mov
faddl
les
ret
cmc
test
adc
mov
pop
jae
ds
jno
mov
jo
out
psubd
push
push
inc
mov
jae
sub
cmpsl
int3
cli
mov
rcll
js
xchg
adcl
sub
jmp
into
mov
js
xchg
xor
fmull
fisubrl
aaa
xchg
iret
arpl
mov
ret
and
loope
fnstenv
push
pop
stc
xorb
and
or
adc
mov
aaa
test
test
pop
stos
out
pop
bound
push
xor
mov
mull
inc
sub
push
andb
test
sbb
dec
dec
jp
mov
add
and
ret
cld
mov
dec
in
pop
mov
or
push
jmp
insl
xchg
add
mov
push
into
mov
or
outsl
incl
dec
negb
int
pusha
loop
dec
sbb
shlb
xchg
mov
add
repnz
cmp
orl
jae
lret
mov
in
dec
xor
dec
data16
cmpsb
dec
js
insb
xchg
rcrb
dec
pop
rclb
test
and
dec
repnz
push
cmp
shrb
jo
ja
inc
jno
add
aaa
and
xor
bound
roll
push
push
xor
mov
cmp
mov
jg
inc
js
pop
daa
cmp
mov
sub
cltd
xchg
jns
jle
mov
ss
out
adc
ja
sub
cs
scas
test
mov
cmp
pop
cmp
dec
icebp
aam
mov
mov
mov
repz
lret
inc
add
sub
addl
and
inc
inc
addr16
aas
push
cmp
xlat
xchg
cmc
and
dec
pop
mov
in
adc
xchg
push
inc
iret
lcall
jmp
mov
clc
sarb
cmpsb
xchg
leave
inc
sti
add
sbb
in
insl
dec
push
insb
sub
mov
mov
ret
sbb
sbb
sub
cmpb
and
bound
mov
in
or
sub
arpl
inc
sbb
movsb
mov
push
movsl
insb
cmp
jae
sahf
scas
pusha
mov
shr
jl
repz
push
in
push
pop
jne
sbb
inc
in
sbb
jle,pt
gs
sub
imul
negb
pushf
mov
jg
sbb
mov
xchg
outsb
pop
pop
aaa
sub
mov
inc
test
out
cmp
adc
movsb
pop
mov
shll
cltd
mov
mov
add
into
pop
sub
pop
ret
pop
call
mov
ljmp
or
cmpsl
mov
dec
hlt
cltd
mov
aas
lcall
cmpsb
xchg
lods
xchg
sub
daa
aaa
xchg
xchg
out
jg
xchg
push
adc
jae
push
jmp
add
mov
push
fisubl
lods
jo
arpl
ljmp
sti
outsl
outsb
inc
int
sbb
inc
aad
cli
cmp
aad
mov
lea
and
fwait
push
imul
xchg
rol
imul
and
sbb
add
das
icebp
test
pop
push
int
mov
pop
and
daa
hlt
sti
scas
dec
sahf
xor
adcb
popa
scas
addr16
push
mov
or
inc
adc
xchg
adc
mov
fucomi
les
pop
or
aas
shrb
lahf
insb
int3
cmpl
call
push
xor
fstpl
fnstenv
sbb
scas
and
aas
xor
imul
clc
jle
xchg
pop
jl
popa
mov
adc
cmp
pop
dec
das
testl
faddl
gs
sahf
xlat
adc
lds
repz
pop
adc
je
push
jmp
jns
or
leave
popf
loop
fldcw
mov
ljmp
leave
xchg
call
test
ljmp
mov
pop
ret
test
sahf
daa
dec
and
scas
test
dec
aad
sub
fnstenv
shlb
xchg
lret
jae
addr16
pop
dec
and
adc
jns
fstpl
fsubrl
inc
adc
test
or
sbb
push
je
or
inc
jecxz
in
mov
rorl
pushf
es
fwait
leave
push
sarl
sub
xchg
adc
inc
pop
mov
add
aas
sub
ljmp
and
mov
mov
inc
pop
das
rolb
mov
andl
lret
inc
mov
hlt
inc
hlt
sbb
sub
aas
call
push
sbb
cmp
cld
jbe
in
ficoms
push
ss
lahf
pushf
inc
inc
rcrl
mov
rorl
dec
bound
jecxz
sub
pushf
mull
inc
sub
fldt
repz
push
fs
insb
dec
lea
data16
outsb
cltd
in
push
push
aam
or
xchg
adc
rolb
sbb
stos
rorb
inc
pop
mov
scas
mov
out
adc
add
jbe
mov
movsl
pop
jmp
data16
add
adc
and
sbb
lret
pushl
push
inc
or
push
mov
jmp
pop
cmp
push
in
dec
shrb
ds
cmp
adc
negb
mov
fsubl
iret
lods
pusha
lahf
lea
xor
loopne
ds
jecxz
test
sbb
xchg
mov
ds
out
mov
or
lret
push
ljmp
cld
pavgw
nop
xchg
int
out
cmp
loopne
lock
sti
mov
aaa
mov
mov
sub
mov
xchg
daa
pop
rcrl
shll
mov
stos
xchg
mov
popa
insb
xchg
test
cmpsl
push
iret
imul
roll
sub
pop
push
fbld
mov
sub
jecxz
int3
pop
sbb
sbb
ret
fists
test
mov
xchg
pop
and
cld
dec
in
jle
flds
dec
fcompl
je
das
mov
popf
push
das
and
scas
sub
pop
adc
adc
jno
push
cmp
add
adc
incl
push
fmull
xor
in
cwtl
jae
sub
mov
jae
pop
lcall
lret
mov
xchg
sub
in
mov
sub
in
adc
mov
xor
cmp
jg
pop
xchg
lods
dec
or
fadd
in
arpl
sub
mov
imul
cmp
ret
push
adc
mov
pop
inc
xchg
rolb
scas
data16
push
js
push
mov
les
sub
cwtl
push
jo
call
dec
xchg
lods
int3
or
xchg
sbb
test
pop
or
mov
inc
nopl
loope
orb
stc
lods
xchg
lods
hlt
in
mov
xchg
or
xchg
xchg
outsb
mov
addb
imul
ss
rcr
xchg
popf
cmpps
mov
mov
push
adc
rorl
sbb
jl
cmp
pusha
stos
scas
sub
inc
cmp
dec
xacquire
pop
xchg
cmpsl
and
add
test
ja
mov
dec
aad
scas
in
adc
lahf
push
sub
add
mov
in
mov
sahf
xchg
cs
sbb
call
xlat
cmp
push
out
push
in
push
dec
cs
repnz
dec
xchg
adc
jnp
insl
pop
ss
fcomi
icebp
push
xor
ret
pop
outsl
outsl
cmp
adc
fs
std
sti
or
inc
test
xchg
subl
cmp
jnp
pushf
sti
data16
push
adc
mov
addb
push
dec
inc
xchg
popa
push
push
sar
cmp
hlt
adc
cmp
push
jne
adc
xor
scas
test
in
insl
dec
shll
sbbb
xchg
sbb
xor
sub
cmc
pop
dec
stc
cmp
nop
mov
dec
inc
cmp
fildl
jbe
lcall
gs
int3
movl
data16
push
fldlg2
adc
jmp
or
sbb
mov
in
hlt
loop
xchg
cli
popa
stos
pop
xchg
shr
lods
idivb
insb
sub
ds
mov
scas
lods
or
hlt
shll
rclb
cmp
push
dec
lock
sbb
clc
out
shrb
or
and
mov
scas
push
stos
out
mov
jne
enter
lcall
xchg
ss
fcmovnb
mov
fdiv
lea
or
push
mov
lods
bound
jecxz
ss
ds
cld
push
jbe
xor
xchg
stos
cs
mov
push
test
jp
pop
jl
test
je
mov
mov
insl
lods
hlt
notl
insl
xor
shll
data16
lds
mov
mov
int3
rcr
mov
cmp
xchg
les
and
sub
mov
jnp
xchg
add
shl
xor
jo
mov
mov
jmp
xor
cmpsl
ss
push
pop
or
add
xchg
dec
cltd
repz
je
cwtl
or
jb
mov
iret
daa
das
aaa
mov
andl
sbb
mov
lret
popf
dec
std
adc
and
lret
or
test
lahf
or
or
int3
sub
pop
push
mov
cmp
xor
cmpsb
xchg
mov
lods
fldenv
aam
mov
xorl
mov
mov
jl
push
mov
jecxz
pop
xchg
cmpb
outsb
mov
mov
cmc
or
push
inc
adc
pop
jecxz
stos
int3
ss
lret
shl
mov
jnp
cmp
adc
stc
jle
shrb
adc
xor
sub
in
repz
test
js
push
push
cltd
fs
jne
and
dec
popa
movsb
jb
pusha
or
xor
ret
clc
cmp
xchg
push
cmp
mov
movsb
addr16
fs
fimull
stc
in
cmp
pop
aam
jg
cs
jnp
push
mov
aaa
inc
sarb
add
jb
stos
pop
std
and
ret
mov
sti
enter
enter
icebp
lods
jecxz,pt
mov
inc
and
sub
sarl
mov
in
sbb
jae
lret
and
mov
pop
jb
test
and
fcmovnu
stc
jecxz
pop
add
pop
cwtl
ja
test
cmp
xorl
inc
push
mov
mov
or
push
sbb
jg
ds
fidivrs
lods
inc
cli
sub
adc
shrb
iret
cmpsl
mov
xchg
dec
push
pop
dec
xor
into
lock
andb
outsb
mov
movsb
call
fnstcw
dec
xchg
std
das
popf
sbb
pop
mov
or
jg
sbb
mov
test
sub
inc
mov
or
scas
cmpsb
pop
pop
sbb
in
and
popf
mov
inc
cmpsb
xor
xchg
mov
sub
pop
jle
std
ss
test
dec
icebp
pop
add
fwait
pop
in
icebp
stos
cltd
inc
test
push
jb
fwait
fwait
adc
negl
jo
pop
xor
iret
xchg
xor
mov
flds
jne
aas
ror
fs
out
mov
js
jno
cmc
popa
sbb
stos
arpl
js
push
or
fld
add
and
fidivrs
xor
stos
xchg
insl
xorl
sar
or
ds
cmp
shrl
sbb
cmp
pushf
aas
or
shlb
cmp
test
inc
pop
rcrb
lock
sbb
scas
out
adc
mov
sbb
scas
dec
xchg
sub
xchg
ret
add
repz
pop
push
lret
cmp
stos
push
ficoms
faddl
and
xor
sbb
jecxz
dec
xor
bound
dec
inc
in
jge
xlat
mov
mov
inc
inc
scas
mov
or
xor
sbb
and
ret
mov
mov
xchg
mov
cmp
add
push
neg
xor
jno
jge
cmpsb
test
rorb
xor
ljmp
cmp
inc
dec
xchg
daa
test
dec
cmp
mov
out
andl
call
outsb
sbb
sti
in
adc
imul
adc
fidivrs
data16
je
arpl
les
fisubrl
aam
adc
dec
pop
ret
repnz
scas
jnp
mov
fadds
sbb
clc
call
push
aas
je
mov
cmp
or
popf
jge
out
mov
in
dec
cltd
mov
mov
imul
mov
cmp
filds
imul
cmp
jecxz
fstps
fucomip
sub
pop
adc
pop
in
mov
pop
pop
fcompl
mov
jne
mov
push
mov
mov
cmp
jle
gs
jne
orb
or
iret
dec
mov
psubsw
jae
imul
stos
jae
mov
fisttpll
std
mov
and
mov
pop
mov
jns
inc
lret
pop
loopne
hlt
and
push
shll
inc
inc
into
inc
ja
test
aad
aam
insl
sbb
push
lock
popa
cwtl
hlt
jp
int3
scas
and
repnz
out
sub
adcb
dec
and
rclb
in
pusha
hlt
dec
stos
mov
lods
orb
ljmp
or
dec
sub
and
pop
andb
mov
iret
aas
lea
les
stos
aad
outsb
cmpsb
push
pop
loop
xor
unpcklps
dec
scas
jb
bound
daa
mov
dec
push
jbe
or
cli
mov
sbb
jnp
in
xchg
mov
mov
ja
loopne
in
fxch
xor
and
mov
adc
pop
sub
clc
push
popa
test
rcll
cltd
notb
mov
inc
mov
jp,pt
add
ja
sub
dec
jge
popf
lock
mov
lods
mov
xor
pop
mov
cmp
push
out
mov
inc
ss
sbb
popf
jae
mov
xlat
mov
cmp
fs
inc
xchg
incb
push
dec
adc
pop
jle
inc
int3
add
loop
dec
mov
pop
shll
sarl
sub
scas
jbe
mov
pop
adc
fucomp
rcll
dec
mov
je
adcb
cmp
and
ljmp
repz
and
adc
nop
mov
mov
arpl
xchg
add
sub
rorl
mov
dec
das
add
stos
dec
stos
mov
fisttpll
aaa
add
cmp
mov
andl
pop
aaa
scas
pop
mov
nop
push
dec
fidivs
inc
out
mov
out
cwtl
or
shlb
out
mov
in
and
aas
outsb
and
xchg
add
pop
in
out
dec
shlb
test
xor
stos
adc
sbb
xchg
ja
xor
sbb
fs
inc
xor
rorb
stc
js
push
dec
cmc
mov
mov
test
mov
icebp
cmpsb
fildl
or
jne
xlat
stos
xchg
pop
push
xchg
pop
jg
pop
fcomi
mov
mov
or
in
push
jl
jl
lods
iret
enter
movl
dec
adc
mov
push
pusha
and
stos
popa
mov
dec
cmp
jnp
imul
jmp
dec
sbb
out
sbb
aam
mov
lret
das
leave
sbb
and
add
movsb
pop
pop
enter
gs
xchg
add
or
xor
push
cmpl
jae
mov
jb
pop
jg
xlat
cli
add
testl
push
out
cmp
cmp
jbe
out
int3
pop
mov
add
popa
inc
adc
mov
inc
add
dec
out
dec
shrb
xlat
cmp
jns
sub
dec
int3
in
ror
aas
push
aam
imul
out
cmpsl
pop
imul
mov
xchg
inc
mov
xchg
lods
jmp
sbb
inc
jnp
xor
out
xor
mov
jp
mov
flds
add
jle
xchg
popa
fisttps
data16
adc
loop
dec
or
data16
stos
jo
mov
sbb
cmp
and
cli
hlt
aam
and
loope
pop
scas
lret
fidivrl
xchg
lret
pop
pop
or
mov
ds
pop
cmp
cmp
jg
xchg
push
outsb
sbb
aam
sbb
sbb
jae
jmp
mov
sahf
clc
bound
test
in
add
xor
lret
fmul
push
lock
stc
push
lcall
pop
loopne
andl
les
inc
sub
mov
pop
sahf
push
or
xor
ret
fdivrl
push
mov
push
and
jnp
fadd
das
ret
mul
fisttpll
lds
movsl
inc
test
xchg
mov
int
nop
jnp
jb
mov
hlt
insb
jne
xchg
mov
mov
lods
or
daa
jl
mov
incl
xchg
dec
shlb
orl
lds
fstpl
lret
mov
sub
pop
clc
pshufw
jne
hlt
lock
mov
or
jg
xchg
cld
pop
add
or
subl
jle
mov
sti
daa
jg
or
jg
mull
sub
lods
jecxz
sti
mov
testb
mov
adc
data16
cmp
xchg
dec
int3
gs
ss
pop
call
mov
or
arpl
fists
jp
mov
stos
outsl
shl
or
jae
dec
cmc
sti
cmpsl
test
xchg
bound
lods
cmc
popf
fdiv
pop
std
pop
mov
scas
loop
adc
dec
ret
stos
mov
lahf
xchg
or
cmp
sub
mov
notb
outsl
es
jmp
pop
decb
int3
jp
dec
xchg
xchg
sub
push
stc
ret
mov
out
xor
into
jg
daa
out
sub
popa
or
into
inc
mov
xchg
jne
and
ficomps
jbe
lods
nop
ss
jp
mov
std
inc
dec
aas
cmp
fstp
lret
cmpsl
jbe
xchg
ficompl
jae
sbb
xchg
sub
push
gs
pop
push
divb
mov
fnstsw
sub
or
inc
popa
scas
or
stc
adc
pop
in
pop
xchg
test
movsb
sbb
jnp
imull
pop
adc
movhps
jb
movsl
test
push
stos
push
add
popf
add
inc
xchg
add
xor
imul
sbb
sbb
mov
cmc
les
scas
mov
nop
xor
lcall
inc
dec
subl
jle
stc
pop
xchg
out
sbb
cltd
inc
in
add
adc
mov
jbe
jbe
pop
cmp
mov
mov
pop
mov
in
and
mov
add
jno
ret
gs
into
or
hlt
jg
lret
ljmp
mov
pop
ja
dec
addl
jbe
or
insb
mov
sarl
sub
or
pop
dec
in
or
and
out
xchg
mov
lahf
mov
les
insl
popf
fisubl
add
sbb
jbe
mov
sbb
pusha
imull
adc
adc
dec
mov
iret
xchg
pushw
std
mov
stc
push
repnz
mov
stc
mov
inc
std
shlb
in
cmpb
test
mov
movb
pop
adc
daa
ja
xchg
pushf
jns
pushf
xchg
xchg
inc
add
sub
fidivrs
leave
loopne
jmp
xchg
fld
adc
pop
mov
ret
mov
jno
shl
jp
ds
es
addr16
lcall
rcrb
aam
xchg
loop
mov
mov
cmc
dec
jge
mov
push
int3
push
stc
push
enter
xchg
cmp
dec
and
jb
es
mov
and
add
iret
mov
jb
mov
cld
in
out
cltd
push
sbb
lret
inc
out
add
xchg
xchg
dec
add
insb
cmc
cmp
jge
xor
mov
pop
xchg
mov
aad
inc
mov
dec
mov
rorl
clc
fsubr
mov
sti
pop
jbe
ss
dec
insl
sti
out
add
gs
cs
adc
add
mov
jge
cmp
mov
push
adc
out
sbb
mov
jp
in
cmp
pop
xchg
push
lahf
popl
push
insb
hlt
stos
sub
repz
mov
xorb
jae
cwtl
mov
push
aam
gs
add
cmpsb
push
mov
nop
inc
mov
shl
xchg
mov
int
jnp
movsb
fucomi
sub
test
inc
xlat
dec
orb
fildl
xor
cs
or
cs
sbb
sub
pop
cmp
pop
push
lock
inc
dec
sahf
mov
jmp
test
mov
mov
cmpsl
pop
jne
mov
jge
clc
lret
inc
or
test
dec
stc
dec
and
mov
push
xlat
mov
push
popf
ljmp
sub
inc
sub
xchg
ja
test
adc
sub
movsb
movmskps
pop
imul
dec
mov
push
paddsw
cmp
aam
add
cli
mov
repnz
inc
xbegin
add
dec
test
cmp
pop
movsb
cmp
sub
ret
xor
push
int3
cmpsl
and
add
in
cs
pop
push
add
mov
sub
loope
xchg
popa
cltd
test
in
sub
push
icebp
sbb
inc
inc
dec
scas
cmp
adc
add
jnp
shll
neg
ljmp
cmpsb
pop
rcrl
imul
add
rclb
ljmp
add
rolb
push
in
nop
xchg
fnstcw
mov
mov
in
ds
inc
popf
or
sbb
fistps
dec
mov
clc
cltd
push
lcall
shrl
xchg
lret
lods
icebp
add
shr
out
int3
push
test
loope
repz
imul
mov
loop
sbb
icebp
test
icebp
out
in
cli
push
mov
cmp
mov
mov
and
push
outsl
aad
add
add
rcr
fidivrs
jge
sbb
cli
jns
push
lcall
imul
jne
jl
jbe
sub
hlt
test
cwtl
inc
mov
and
or
int3
je
fisubl
adc
dec
sahf
loop
jg
js
dec
in
inc
pop
je
test
mov
mov
sub
jl
pop
fiaddl
sbb
jp
mov
inc
xor
xchg
rorb
cmp
pusha
cwtl
sbb
xchg
leave
sub
jge
ja
ss
leave
adc
push
mov
push
mov
les
dec
sahf
lahf
test
sbb
mov
lret
push
and
lahf
ss
fucom
pusha
add
xchg
ret
sub
inc
test
sbb
jl
mov
xor
push
jp
inc
mov
mov
mov
loope
shrb
js
sarb
out
cli
nop
cmp
add
pop
cmp
push
push
mov
push
mov
mulb
daa
push
lods
mov
mov
jns
shll
jnp
out
dec
out
jbe
mov
dec
imul
inc
jle
push
sub
dec
hlt
ror
pushf
pop
sbb
pop
adc
add
or
mov
hlt
je
imul
cmc
cmp
add
pop
aam
mov
fiaddl
jno
or
daa
cmp
ret
fmull
outsb
in
push
sbb
aaa
jb
leave
jns
rorb
out
pop
sub
mov
mov
aaa
cmpsl
out
mov
dec
imul
pop
xchg
jne
subl
mov
nop
mov
icebp
xor
pop
xchg
addb
cmpsl
push
hlt
in
xor
push
outsb
arpl
sbb
int3
loopne
in
leave
sbb
and
ljmp
lds
dec
mov
cmc
push
jnp
mov
mov
out
cmc
seta
xchg
mov
mov
inc
out
fildll
cltd
dec
pushf
sub
ficompl
xchg
mov
lock
adc
sbb
outsb
insb
and
inc
stos
cmp
push
add
movsl
or
mov
jp
fimuls
pop
je
idivb
mov
xchg
iret
stos
dec
mov
lret
les
incl
test
ja
sub
sbb
pop
jg
mov
push
call
shrl
pop
push
test
les
iret
divl
jb
ficomps
outsb
dec
mov
bound
xchg
mov
jl
mov
jl
xchg
cld
mov
movsb
arpl
adc
int
lock
push
mov
adc
cmp
mov
bound
imul
inc
repz
lods
xchg
shlb
lahf
stos
sti
jbe
push
xchg
pop
xchg
addr16
fisubrl
xor
cltd
fildl
xor
cmpsb
inc
and
imul
xchg
ja
mov
das
mov
mov
or
mov
lds
adc
xchg
fcmovu
lds
push
xchg
cli
lahf
rcll
inc
inc
push
aas
pushf
nop
adc
stc
adc
pop
xchg
mov
dec
jmp
addr16
add
push
jmp
mov
fcmovnu
stos
arpl
inc
in
outsb
rorb
jg
xchg
jo
inc
test
fwait
mov
cmpsb
push
jb
sbb
jnp
fbstp
xchg
jne
decl
pusha
mov
shlb
fldl2t
rep
sti
pop
fisubrl
xor
lock
inc
lret
cmp
mov
xchg
aaa
adc
jno
enter
daa
or
call
in
cwtl
negl
icebp
adc
cld
sub
stc
jmp
cli
mov
cmp
jmp
or
stc
mov
inc
incl
jns
mov
add
sub
adc
into
mov
mov
lahf
sbb
xor
stos
das
cmpsl
xchg
fadd
in
cmc
repnz
mov
ljmp
mov
fcomps
mov
dec
clc
pop
call
jbe
out
loopne
lcall
mov
scas
mov
into
dec
cmp
jl
xor
jmp
loopne
mov
test
or
pop
push
mov
dec
lea
jp
pop
frstor
mov
aaa
add
sub
out
xchg
mov
pop
popa
push
mov
movsb
out
lret
push
in
jae
pusha
adc
dec
lret
add
test
cmp
mov
sub
mov
rclb
xor
add
add
xchg
sti
dec
push
leave
icebp
mov
es
fiadds
clc
add
ja
int
lret
ljmp
les
sbb
iret
pop
incb
rcrl
mov
jmp
dec
shrl
int
sbb
fs
orb
bnd
popa
push
mov
jo
into
jae
mov
in
xchg
mov
mov
nop
stos
rcr
jno
pop
inc
sub
pop
jne
jb
xchg
cltd
rorl
push
mov
mov
or
or
mov
jl
aaa
mov
xchg
adc
ds
xor
sbb
cs
icebp
mov
or
and
sbb
fcmovbe
add
sbb
mov
mov
bound
jo
sub
cmp
sahf
pop
clc
pop
mov
arpl
mov
addl
and
dec
xchg
scas
xor
jno
cmp
or
daa
adcl
shrl
sbb
lret
push
scas
push
or
and
jo
add
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
jmp
repnz
repz
adc
addb
sarb
fcompl
mov
lods
les
inc
jmp
addr16
out
mov
aas
push
pop
pop
mov
add
adc
movsb
xchg
ja
inc
pushf
push
or
in
xchg
in
fsubrp
loope
dec
cmp
pusha
sub
into
add
push
sbb
js
or
addr16
cmp
insb
cmpsb
jno
jl
jle
daa
mov
adcb
fadds
in
pop
leave
xchg
mov
and
inc
std
rcll
popf
adcl
or
loop
adc
adc
loopne
cmp
dec
aad
rorb
fists
jne
cwtl
out
mov
dec
es
rcrb
les
sahf
pop
jge
pop
shlb
sbbl
lods
push
fidivrs
dec
icebp
nop
jo
and
clc
jle
adc
ret
pop
scas
mov
adc
mov
push
jnp
daa
je
cmp
imul
mov
pop
nop
add
add
cld
ret
fisttps
and
cltd
and
lods
jo
rcl
rcll
xlat
push
jg
and
sbb
cmp
push
cs
cmpxchg
xorb
pushf
jecxz
mov
pop
sub
pop
or
xchg
bound
lea
cs
mov
sbb
pushw
cmp
jg
cmpsb
mov
mov
into
xor
pop
mov
jb
sahf
pop
lahf
pop
lret
inc
pop
xor
imull
or
pop
mov
or
aas
jl
loope
in
sbb
out
mov
in
dec
fnstsw
fidivrl
mov
xor
fs
stos
lret
rorl
popf
sub
movsb
out
cmp
cwtl
mov
pop
pop
inc
push
inc
dec
inc
or
xor
pop
popa
fisubrs
inc
nop
or
lods
inc
cwtl
push
jl
daa
ja
loopne
mov
xor
mov
and
and
push
fimuls
cs
sarl
jae
lea
shr
xor
imul
sub
cmp
fsubrl
pop
lahf
mov
decb
loop
in
mov
pop
fs
sbb
sbb
mov
mov
xor
push
ja
inc
xor
mov
lods
pop
sub
ret
xchg
pop
cltd
xor
adcb
mov
jnp
mov
sbb
push
rcr
jmp
loopne
mov
cmc
xchg
xchg
pop
push
dec
fcompl
in
call
mov
fbstp
xchg
jecxz
push
xchg
fwait
jecxz
mov
xor
sub
add
inc
sub
dec
subl
ret
iret
cmp
hlt
data16
aad
xchg
adc
ret
aam
mov
dec
mov
js
and
sub
sub
js
icebp
cld
out
inc
pop
add
arpl
data16
pop
dec
xchg
mov
sub
mov
int3
jnp
test
xchg
pop
fisubrl
and
push
push
xchg
fisttpl
cmc
rcrb
cltd
mov
adcl
mov
aas
mov
mov
and
daa
repz
fcoml
cmp
jl
jge
test
jns
outsb
inc
pop
push
lret
xchg
enter
in
or
xor
movsb
mov
pushf
adc
push
xchg
fcmovnbe
loop
repnz
imul
xchg
daa
and
sbb
psubq
pusha
adc
loop
lods
in
xor
iret
enter
add
pushf
fnstsw
mov
ficomps
adc
ret
stc
test
jns
out
lds
jb
out
movsl
iret
jl
sub
inc
lock
adc
and
inc
mov
in
test
mov
push
push
out
push
aam
scas
mov
sti
xor
mov
clc
outsl
ljmp
mov
xor
jno
and
dec
push
jmp
out
xchg
fsubrl
mov
in
pop
in
and
mov
xchg
leave
inc
sbb
pop
sub
jmp
mov
xor
pop
testb
in
lods
sub
aam
into
pop
xor
idivl
jo
xchg
call
mov
popa
inc
cmp
push
sbb
pop
test
cmp
and
stc
inc
sub
push
mov
ror
mov
adc
shl
stos
inc
add
and
ss
enter
add
xor
mov
out
and
inc
or
pop
out
roll
ret
mov
jo
mov
hlt
fsubs
iret
repnz
arpl
outsl
stos
cmc
rclb
inc
xchg
inc
or
adcl
push
out
inc
in
mov
mov
cld
mov
shr
daa
add
test
sbb
test
jl
repz
lock
scas
leave
inc
test
stos
add
ret
mov
sub
xchg
jle
xor
pop
adc
mov
pop
scas
jp
adc
or
iret
jmp
test
xchg
rcl
in
outsl
popf
std
shlb
cld
push
aad
ss
push
popf
xor
bnd
movsb
mov
and
or
ficoml
int3
aad
sbb
lds
repnz
fsubs
cmp
lods
sti
mov
push
inc
inc
mov
outsl
gs
xchg
mov
pop
invd
adc
mov
daa
mov
cmpsl
add
pop
dec
xor
movsb
loop
jecxz
shrb
jle
sub
xchg
pop
or
push
cmp
cmp
push
xor
mov
sbb
sbb
xchg
jno
sub
pop
shl
loope
push
push
outsb
xchg
popf
pop
mov
adc
or
js
add
mov
loope
dec
cltd
dec
lret
in
mov
rorl
es
cli
cli
pusha
inc
setb
sarl
into
mov
rorl
jecxz
xor
dec
adc
pop
xchg
and
adc
fmul
popf
nop
cmp
inc
xchg
or
shll
sbb
or
cmpsb
imul
fsubl
add
inc
sbb
jmp
orb
push
repz
cmp
jmp
mov
xchg
xchg
clc
inc
xchg
imul
hlt
push
cmp
pop
mov
das
fidivrs
fldcw
mov
lock
daa
aad
ret
jnp
jge
rcl
adc
adc
add
adc
popa
out
jg
loope
aas
in
inc
inc
mov
fcomip
sar
mov
out
adc
cmp
mov
cmpsl
out
aad
lock
dec
pushf
call
pop
mov
movsl
cmp
js
mov
or
ljmp
add
xor
inc
loopne
cmpsl
and
mov
xor
cmp
adc
nop
dec
xchg
sub
ljmp
inc
std
push
out
mov
mov
xor
xchg
or
push
mov
dec
cmpsb
or
notb
mov
les
inc
adc
insl
lock
sbb
shlb
movsb
push
out
and
sub
in
sahf
mov
test
adc
inc
dec
fcomps
shll
rorl
and
sbb
jge
inc
add
push
mov
inc
add
fistpll
add
andl
lcall
push
inc
or
add
xor
jg
imul
cli
ss
sub
mov
faddl
jle
cmp
in
or
daa
mov
outsl
lcall
adc
cld
ja
out
sbb
jl
int3
push
nop
into
xor
mov
popf
pop
repz
mov
fcomps
or
push
arpl
xor
subb
pop
add
test
mulb
in
idivb
or
fldl
ss
in
leave
stos
lods
lods
shlb
outsb
mov
push
fldt
ja
xor
int3
enter
sbb
lret
fistpl
sbb
imul
pop
sub
ja
xchg
push
mov
int
dec
shlb
outsb
cmp
xchg
cmpl
bound
or
adc
aam
adc
hlt
mov
hlt
cli
int
jmp
sub
pop
in
jmp
jl
inc
shl
call
ja
dec
mov
jmp
cmp
cltd
or
sbb
out
mov
inc
in
sti
jecxz
inc
or
mov
pop
xor
out
dec
sbb
mov
jns
shrl
sarl
cli
and
push
lcall
xor
and
idivb
dec
add
daa
paddsb
test
xchg
outsl
inc
jg
shll
ljmp
jne
dec
mov
push
and
jo
or
push
cltd
xchg
xchg
fildl
sub
cmp
push
mov
mov
cmp
xchg
into
nop
mov
jb
addr16
lret
mov
movsl
pop
mov
dec
repnz
clc
adc
jb
dec
add
daa
mov
mov
out
leave
js
sub
push
adcl
xchg
lea
test
repnz
es
sub
push
lods
adcl
inc
stc
sbb
lds
ret
add
jg
add
repz
popa
arpl
pop
xchg
gs
out
test
fdivs
stc
adc
jecxz
outsb
pop
in
int3
popf
push
fwait
fwait
jns
cmp
ffree
mov
sbb
stos
xchg
mov
sbb
sbb
repz
test
and
or
jbe
jae
or
ds
test
pop
inc
shll
lret
insb
inc
and
dec
push
jae
adc
dec
or
adc
fabs
mov
mov
jge
xchg
mov
dec
ljmp
inc
fs
adc
xchg
in
mov
insb
ret
jmp
push
cmpsb
add
pop
lret
inc
scas
mov
frstor
movsb
in
pop
xchg
inc
xchg
sarb
shlb
mulb
ret
push
jne
inc
out
xlat
mov
dec
or
mov
inc
mov
jle
sub
ljmp
mov
push
loope
push
xor
mov
cmp
mov
pop
and
pslld
ds
notl
test
dec
sub
inc
dec
in
pop
leave
fisubrs
jae
mov
dec
cmpsl
adc
xchg
cmp
xlat
adc
mov
push
mov
jae
jno
sub
inc
addr16
jns
leave
jmp
mov
fsubrl
mov
ss
ror
roll
aas
sti
inc
jno
aad
test
inc
mov
sbb
jnp
test
mov
loopne
xor
push
sbb
popa
andb
sbb
aas
jecxz
out
pop
mov
inc
jo
popa
imul
test
pop
cwtl
add
int3
je
fsubrp
pop
dec
sub
or
add
mov
push
pop
lea
repnz
cmpsl
cmpsb
sub
scas
stos
scas
faddl
jmp
cld
sub
cli
roll
and
cmp
mov
add
dec
sbb
pop
jmp
mov
jle
rcrb
insl
mov
sbb
xor
dec
pop
ds
jg
mov
jno
cmp
test
pop
cld
stos
or
mov
sub
sbb
mov
inc
or
fiaddl
dec
mov
lds
loopne
mov
inc
shl
push
sti
adc
dec
mov
cmp
or
movsb
jne
es
das
cmp
andb
pop
mov
push
xchg
rclb
lods
xchg
xor
test
fcompl
test
test
pop
push
test
pop
mov
outsl
pop
lods
jne
push
ds
inc
inc
adc
mov
and
cmp
mov
stc
add
sub
out
loope
adc
adc
incb
call
aad
ret
icebp
mov
out
cmpsb
icebp
fucomip
pop
and
fwait
xchg
int3
cld
adc
or
jo
mov
cs
stos
or
les
clc
jae
in
mov
ja
addr16
pop
std
jne
cmp
arpl
pop
les
sub
lods
jmp
or
pop
push
in
arpl
xlat
leave
mov
mov
dec
mov
cmp
push
repz
jge,pt
sub
jne
scas
ret
rorl
aad
mov
enter
int
inc
stc
adc
aas
iret
inc
and
nop
adc
mov
cmp
popf
pop
or
push
lds
add
js
adc
fsubrs
jbe
sbb
std
fisubl
stos
add
inc
pop
inc
cmp
loope
popf
dec
cmp
push
dec
adcb
xlat
push
xchg
push
jns
movsl
mov
fwait
inc
int
das
aaa
xchg
xchg
mov
xor
mov
or
andl
xor
jp
mov
xor
push
xor
cmpb
outsl
dec
jp
in
icebp
cmpl
mov
inc
repnz
jg
xor
jmp
jno
lcall
xor
jae
jb
loope
pop
lcall
das
pslld
pop
les
loope
call
lahf
data16
hlt
test
xchg
push
jmp
or
xlat
and
push
fiaddl
loope
push
pop
dec
pop
push
lods
mov
xchg
cmp
add
mov
xor
ret
js
fistps
hlt
daa
jge
sbb
sbb
pop
pop
lock
loope
loope
sub
daa
dec
inc
mov
aam
pop
add
out
insb
xor
cmc
popa
push
cmp
movsb
cmp
loopne
or
push
dec
xchg
and
inc
out
mov
cmc
add
sbb
or
cmpb
pop
push
inc
enter
aam
sub
leave
adc
movsl
mov
and
add
fwait
cwtl
cmc
mov
xor
test
hlt
in
or
test
push
mov
jbe
sub
pushf
pushf
xchg
pop
sbb
jge
inc
les
in
in
pop
adc
mov
dec
hlt
mov
pop
xchg
imul
and
mov
sub
mov
mov
in
lahf
push
lods
popa
sbb
mov
jbe
mov
mov
xchg
enter
xchg
sarb
cmp
sbb
fs
pop
sub
movsb
sub
cmp
fsubp
add
push
shll
push
xchg
mov
movsb
push
fisubl
imul
adc
sbb
ret
icebp
pop
std
addb
shll
dec
fdivl
push
out
mov
lods
inc
xchg
shlb
dec
cmp
inc
es
lretw
mov
cmpsb
imul
imul
inc
or
mov
mov
push
inc
imul
loope
cwtl
and
orb
jmp
add
push
sbb
aaa
pop
jmp
xchg
jmp
fsubrs
dec
testb
and
call
stc
out
xlat
scas
and
adc
cmpb
push
push
xchg
mov
sbb
ss
push
mov
or
out
fmull
cmpl
test
aad
jl
jo
icebp
ljmp
add
cmpsb
daa
int3
sbb
ret
out
mov
dec
inc
or
inc
cmpl
sub
mov
or
adc
mov
pop
jle
and
in
fstl
cmp
xchg
int3
inc
bound
jno
arpl
inc
in
or
dec
cmp
repnz
inc
sbb
cwtl
xchg
icebp
xchg
xlat
out
inc
mov
rolb
lret
aaa
repnz
mov
sub
std
imul
stos
cmp
mov
lock
je
clc
pusha
xchg
xchg
je
loop
popa
xchg
mov
frstor
push
in
and
pop
lret
orb
cmpsl
jo
or
sar
pop
fbld
xor
fidivs
out
loopne
mov
pop
and
testb
out
or
clc
fxch
inc
in
mov
shlb
sub
mov
cwtl
pcmpeqw
clc
mov
xor
decl
sub
and
xor
fnstsw
test
mov
push
push
sbb
mov
or
mov
cmp
cmp
fs
cmp
xchg
hlt
sbb
mov
cld
pop
aad
push
mov
out
add
inc
test
insb
outsl
int
aam
push
adc
movsl
insb
cmp
mov
sub
pop
add
mov
stc
mov
jne
addr16
aam
and
in
mov
in
repz
xlat
xor
out
outsb
js
loop
mov
lahf
repnz
or
js
lret
test
jg
fyl2xp1
dec
push
or
add
and
or
pop
loopne
bnd
out
push
in
movsl
je
das
scas
sti
outsl
mov
pop
adc
jmp
pop
loope
test
fsubs
push
pop
or
in
call
sar
xor
mov
mov
pop
sub
adc
xor
movsb
cld
test
stos
jl
repz
pop
out
pop
ljmp
xor
inc
aad
les
mov
pop
pop
andl
outsl
movsl
ror
mov
adc
mov
repnz
js
lcall
lea
lds
mov
lahf
adcb
inc
outsl
movsb
loopne
mov
insl
mov
mov
pop
rcrl
leave
sbb
dec
retw
aad
jl
pop
push
xlat
jns
mov
into
jmp
xchg
inc
xor
dec
adcl
insl
sbb
bound
insb
inc
loopne
pop
lcall
movsl
js
adc
sar
lock
xchg
nop
add
jnp
data16
xchg
dec
adc
je
pop
ffreep
dec
jecxz
push
xchg
inc
std
pushf
lds
rcrb
xchg
mov
mov
add
aaa
or
push
fidivrl
push
insl
movb
movsl
dec
and
popf
sub
sahf
in
mov
psubsb
aad
inc
orb
stc
mov
push
jno,pt
sbb
jle
lahf
add
sar
fwait
es
in
dec
pushf
mov
stos
inc
dec
mov
ds
out
mov
jb
test
fimuls
jbe
push
push
jp
ficomps
pushf
fldl
lahf
ljmp
xor
add
in
fisttpl
fs
inc
inc
push
fstps
xchg
adc
or
adc
mov
stos
pop
push
arpl
push
jge
lret
mov
dec
push
lahf
movsb
inc
xlat
xorl
jle
jmp
dec
pop
xorl
mov
fcmovne
out
xor
or
cld
xor
cmpb
cmp
lcall
lahf
sub
push
inc
pop
int3
ficomps
mov
cmpsl
or
jmp
or
cmpsl
lret
out
push
mov
jbe
adc
mov
inc
aad
xor
ljmp
mov
scas
jo
incl
fwait
or
flds
stc
jmp
add
negl
pop
jbe
jno
jecxz
push
in
in
fadds
push
mov
jb
sbb
cmp
test
je
in
fwait
popf
out
xchg
es
test
mov
mov
ret
xchg
call
mov
adc
in
dec
cmpsl
jae
cwtl
cmc
das
nop
inc
xchg
das
push
dec
adcl
nop
xor
aam
fucom
loope
pop
outsb
dec
dec
jge
aam
xchg
mov
cmp
push
icebp
inc
clc
cld
mov
mov
mov
mov
out
xchg
sub
mov
mov
in
xchg
push
cmc
xor
jge
loopne
or
das
aam
enter
cmc
pop
or
test
jle
int3
fcomi
inc
dec
mulb
mov
out
hlt
sub
xchg
mov
out
mov
add
pop
dec
iret
enter
lea
out
imull
ja
lret
mov
pop
sbb
lock
jno
mov
mov
mov
insl
pop
push
imul
or
mov
or
int
sbb
lds
mov
insb
sbb
xchg
mov
mov
arpl
jecxz
mov
loope
add
or
pop
lret
pop
inc
adc
xor
sbb
xchg
and
stos
stos
add
dec
in
lods
jo
cmp
push
cmp
loope
push
xor
sub
cwtl
stos
add
mov
xchg
je
jbe
ds
out
mov
sub
or
mov
mov
std
cmc
xchg
or
pop
dec
sahf
xchg
or
lds
mov
insb
adc
push
and
adc
daa
les
sub
movsl
fcoms
cs
pushf
cmpsl
jb
cltd
mov
int3
jae
scas
jl
sub
fadd
aad
gs
push
xor
or
mov
ret
xchg
popf
cmp
cltd
jne
ja
mov
addr16
pop
dec
or
adc
hlt
enter
shlb
pop
movb
pop
mov
test
test
push
pop
pop
bndstx
pop
loope
sbb
xor
dec
add
xor
pop
pop
js
dec
int
sub
stos
int3
cmpsb
push
pop
jle
cli
mov
fisubl
frstor
cmp
cmpl
mov
fsubrl
outsl
inc
xor
sti
dec
cmpsl
mov
jbe
jg
out
insb
inc
loope
in
arpl
icebp
ljmp
inc
mov
xor
mov
bound
sbb
in
jns
mov
sbb
pop
push
dec
imul
cmpsl
add
fistpl
stos
cmpsb
mov
mov
jmp
push
push
cltd
xor
lock
pop
pop
daa
lock
into
ljmp
xchg
subb
xlat
outsb
xchg
adc
pop
fiadds
mov
cs
jmp
jmp
pop
adc
in
add
stos
push
jnp
cmp
pop
cltd
add
cmovl
dec
mov
cmp
lock
sbb
inc
mov
je
lods
dec
push
stos
xor
hlt
and
push
jo
in
xor
imul
icebp
nop
test
test
mov
imul
popa
mov
mov
jae
aad
jnp
sbb
fcmovbe
aas
clc
pop
inc
outsl
mov
int3
aad
call
push
mov
mov
stc
in
xchg
pusha
push
lret
mov
push
ss
push
aad
nop
cmp
pop
dec
mov
push
jno
cld
jbe
xor
test
push
inc
adc
out
inc
mov
and
lock
push
rclb
inc
mov
ret
mov
mov
lock
out
sbb
sub
out
add
ds
sti
ja
jecxz
inc
sbb
inc
in
fisubs
dec
shl
mov
lret
inc
xchg
cmp
cltd
stos
sbb
xchg
jbe
or
mov
mov
pop
sub
mov
fwait
sahf
dec
rol
outsl
or
and
xchg
ljmp
cltd
in
sub
sub
stos
pop
int3
in
in
fsts
imul
out
push
js
cmc
adc
xlat
js
sbb
add
test
xchg
test
movsl
adc
push
orb
dec
bound
cmpsb
xchg
loop
push
out
ret
or
mov
xor
xor
jno
mov
ja
lret
shll
popf
popa
sub
adc
mov
mov
mov
cmp
inc
xlat
push
sbb
jecxz
out
adc
sub
sbb
lahf
inc
popa
and
scas
scas
dec
fistl
cmpsl
cld
and
cld
dec
shrb
mov
inc
stos
gs
in
in
sbb
xor
fwait
jae
inc
nop
aad
imul
xor
out
call
pusha
popf
stc
fcomps
add
mov
mov
lcall
mov
jge
stos
xchg
pop
je
jne
jl
push
pop
cmp
push
push
dec
and
add
xchg
xchg
lret
xchg
mov
mov
notl
insl
das
imul
mov
adc
cmp
xlat
out
jno
fnop
add
mov
cld
xchg
fldcw
fucomp
xor
cmp
es
jbe
test
fdivs
sbb
dec
xchg
pop
xor
std
pop
sbb
ror
jo
leave
lahf
mov
stos
pop
sbb
lahf
push
out
fwait
dec
cmpsb
arpl
stos
push
sbb
or
adc
adc
sub
js
xchg
out
push
sti
xchg
pushf
push
mov
xchg
xchg
pop
inc
sbbl
sbb
jbe
lods
add
sarl
imul
jge
xchg
cli
jmp
add
cmp
iret
sar
adc
addb
sbb
jo
adc
cmc
nop
mov
shrl
ret
cmc
xchg
mull
mov
ja
movsl
cmp
dec
mov
xlat
repz
fcompl
lret
sub
xchg
fimull
mov
or
leave
addr16
sarb
rorl
xchg
adc
fldl2t
dec
out
adc
sub
jbe
xchg
cld
mov
push
inc
jns
mov
outsl
cmpsb
xchg
push
or
push
out
lret
popl
out
add
inc
add
dec
jae
fmull
and
pusha
pop
and
filds
cld
int3
xchg
stc
je
and
test
add
inc
lea
xchg
lahf
int
mov
adc
sbb
jge,pt
pop
movsl
xchg
cld
fdivp
in
mov
sub
aaa
inc
out
sbb
sub
mov
mov
fwait
cmp
fadd
add
jns
mov
das
ja
fsubl
adc
jp
lock
fnstcw
or
pushl
sbb
mov
xor
and
push
sbb
jne
push
orb
mov
aas
add
inc
ja
mov
imul
cmp
aaa
pop
jecxz
cmpsb
or
in
push
pop
lcall
sbb
xchg
add
push
mov
mov
in
mov
adc
mov
and
add
lods
aad
out
pop
shlb
push
icebp
mull
sarb
sub
add
and
dec
sub
sbb
out
push
mov
cs
das
sti
mov
xchg
scas
ret
in
cmc
cmp
jne
sub
lds
arpl
ret
cmp
or
push
xchg
in
insb
jp
mov
imul
xor
xor
jg
je
push
gs
push
sbb
adc
movsb
mov
jbe
dec
in
movsl
and
aam
pop
stos
xor
jg
aas
xchg
push
jg
iret
adc
inc
inc
outsl
add
fwait
jmp
sahf
add
test
add
addr16
mov
cbtw
out
movsb
mov
adc
push
addr16
decb
mov
cmpsb
cs
leave
inc
icebp
xor
cmc
or
xor
dec
ret
ss
cmp
jno
cmp
clc
jge
push
adc
fstps
fldenv
addr16
jb
adc
xorl
inc
inc
dec
jmp
or
mov
push
pop
jl
xor
push
xor
sub
push
sti
out
mov
push
add
repz
pop
scas
sub
cltd
jo
mov
add
and
xchg
fcoms
data16
mov
aas
outsl
cwtl
pop
lret
rolb
lret
lods
mov
aas
fs
fs
sar
pop
test
icebp
jmp
out
ss
dec
shl
push
xor
imul
mov
mov
out
or
dec
xor
sub
leave
ljmp
popf
aam
mov
inc
ss
mov
sub
insl
push
test
sub
rclb
test
xor
add
xlat
push
aam
jns
mov
push
faddl
push
inc
mov
aas
jg
scas
jp
push
into
es
xchg
push
mov
xor
adc
pop
jl
mov
mov
loope
dec
stos
out
mov
andb
cmc
nop
imul
xor
xchg
sub
into
push
cmp
fnsetpm(287
push
cmp
movsb
inc
int
inc
imul
leave
add
jle
adc
and
sub
fiaddl
xchg
sbb
cmp
jae
mov
sbb
fsubrl
cltd
scas
mov
pop
xchg
dec
jge
xor
mov
dec
xchg
mov
int
mov
push
scas
stos
fimull
add
jb
jp
or
jno
cltd
inc
or
fildl
dec
test
aam
pusha
jecxz
fistl
push
insl
daa
nop
cltd
pop
scas
or
xchg
mov
addl
int
mov
or
ss
arpl
and
rcrb
cmpsl
mov
xchg
pop
scas
mov
loope
nop
adc
cltd
xchg
rorl
fs
sahf
ljmp
out
push
call
and
xor
mov
hlt
movsb
gs
push
pusha
fiadds
push
cli
out
xchg
test
mov
js
insl
int3
dec
cmp
inc
insl
lock
subb
and
or
jle
insb
push
lods
loop
and
and
clc
mov
adc
loopne
push
popa
push
dec
push
cmovno
es
adc
adc
pusha
dec
jmp
jp
add
xchg
repnz
xlat
leave
test
cmp
ret
insb
mov
mov
sbb
push
rcll
int3
scas
push
fnstsw
std
mov
movsb
lcall
sbb
dec
inc
xchg
into
mov
inc
mov
test
jmp
and
loop
out
mov
orl
push
mov
sub
jecxz
sub
ror
xchg
cmp
mov
pop
push
mov
sarl
imul
cli
sub
sub
sbb
dec
jge
pop
push
jnp
pop
dec
mulb
lea
jne
sbbl
fucomi
cmp
mov
nop
add
cs
add
inc
jle
arpl
pop
jbe
pop
lcall
decb
cmp
xchg
pusha
fisubl
std
scas
std
lods
ret
js
mov
adc
pop
jp
mov
repnz
inc
xor
imul
testl
inc
sub
jl
outsb
lods
repnz
mov
mov
fwait
sub
push
sbb
out
xchg
mov
in
pop
pop
inc
cmp
repz
mov
pop
mov
std
pusha
sub
mov
pop
imul
in
xchg
mov
popf
ds
ss
bound
push
adc
dec
push
pop
fadd
push
shrl
js
addr16
pop
je
mov
cmpsb
dec
lock
mov
int3
pop
jge
mov
jbe
out
std
xor
ds
add
push
test
out
or
and
out
mov
aas
pop
aad
jno
shl
sbb
imul
sbb
clc
add
imul
xchg
mov
jae
pop
and
movsb
inc
jbe
mov
sub
sarl
push
loop
push
xor
inc
dec
xchg
test
cmp
dec
xor
add
push
lahf
call
cs
in
push
movsl
jle
orl
adc
xor
sub
sub
jmp
adc
test
adc
aas
xchg
inc
addb
add
push
enter
push
scas
orl
imul
sbb
arpl
jle
xor
pop
jl
fstp
pop
outsl
pop
xchg
xchg
call
insl
popf
fdivs
cmp
aas
mov
or
data16
xchg
aad
pop
pusha
sbb
in
pop
jne
pop
ja
into
rcrb
stos
stos
cmc
movsl
pop
mov
and
lds
jo
xchg
sub
stc
leave
inc
adcl
mov
jns
push
add
outsl
mov
mov
mov
jecxz
mov
out
jle
jnp
repnz
push
mov
imul
mov
mov
mov
fs
lret
sub
adc
popf
in
stos
fisubrs
mov
sub
cmp
and
pop
inc
xlat
loope
cmp
clc
xchg
xchg
cmpsb
xor
xchg
jg
inc
jb
pand
test
adc
imul
js
pushf
jge
loopne
movsb
xor
or
and
inc
imul
js
xchg
aad
dec
jbe
push
cmp
inc
push
or
movsl
jb
mov
push
pop
mov
fwait
dec
imul
ret
sti
pop
pop
js
shl
ds
jge
fistps
pop
cli
push
jecxz
ja
or
jnp,pn
push
inc
jmp
xor
or
aas
pop
rolb
and
out
mov
shlb
inc
cmp
jbe
adc
aaa
movsl
mov
mov
xchg
or
std
imul
pop
ficoml
cmc
je
scas
cmp
outsb
lret
and
arpl
xlat
test
xchg
jmp
jbe
mov
rclb
pop
fldt
sti
insl
xchg
ja
cmpsl
and
add
js
icebp
push
inc
loope
and
jecxz
jl
inc
sete
adcb
nop
loopne
mov
sub
std
mov
lret
sti
popf
cmpsl
hlt
jp
xchg
cmc
das
out
jno
push
sbb
push
out
nop
fs
icebp
add
dec
out
cmp
or
mov
pop
mov
in
int3
cmp
push
push
jge
lret
sub
flds
jbe
xorb
mov
dec
cmpsl
out
fisubrl
sbb
sti
ja
add
shll
mov
mov
sbb
ret
mov
jno
adc
loopnew
xlat
add
xchg
movsb
test
fwait
pop
loop
daa
xchg
jp
mov
lods
punpcklbw
adc
fdiv
fidivrl
out
js
out
and
adc
fdivr
mov
xchg
mov
cmc
cwtl
lahf
insl
clc
mov
sub
iret
bound
add
imul
dec
sub
cmp
stos
xchg
mov
bound
inc
and
push
jecxz
or
lock
rorb
stos
insb
cmp
dec
pop
sti
dec
stos
mov
push
frndint
inc
cmp
mov
pop
jae
sub
imul
lods
cs
arpl
inc
adc
add
in
mov
xor
mov
mov
pop
and
lods
dec
rcrb
mov
mov
push
insb
cmpsl
push
xor
jbe
add
pop
mov
dec
xor
mov
iret
mov
mov
add
fs
sub
lahf
nop
aas
push
cmp
nop
pop
push
jbe
aam
push
push
ss
mov
pop
pop
mov
test
mov
cmpsb
imul
cmp
push
lds
int
rorl
cmp
and
sbb
scas
jle
out
leave
adc
mov
xchg
insb
xchg
adc
sub
pop
inc
movb
inc
addl
mov
xchg
dec
aam
jnp
sbb
jnp
jbe
ret
pop
das
pop
mov
roll
in
int
mov
std
or
imul
out
arpl
cmp
add
push
icebp
scas
mov
mov
test
mov
jecxz
dec
mov
les
rorl
sub
push
loope
mov
mov
pop
adc
imul
inc
outsb
fsubr
add
shlb
inc
nop
int3
frstor
vdivps
lahf
ds
fcmovu
lret
dec
leave
lods
jl
sbb
sahf
fwait
and
mov
subb
or
dec
fsubrs
outsl
pusha
pusha
or
stos
fdivrs
adc
push
scas
mov
xchg
sbb
xchg
out
dec
sti
jnp
idivl
pop
mov
dec
jb
mov
lret
bound
push
fs
cmp
adc
in
jge
fidivs
aas
outsb
test
fs
std
sub
mov
mov
pop
mov
and
cmpsl
out
sub
pop
cmc
pop
cmc
in
cli
stc
push
mov
xchg
shlb
andb
jae
pop
push
shll
and
in
ficoms
fnsave
and
js
and
xor
adc
cmpsb
jecxz
dec
cmp
adc
cmpb
mov
add
sahf
sti
int3
xchg
push
mov
lret
pop
test
add
cmc
call
aas
or
add
mov
xor
adc
out
mov
or
loop
and
in
pushf
add
int3
xchg
mov
pop
out
dec
pop
adcb
or
sbb
gs
nop
mov
mov
movsb
int3
das
sub
mov
sub
sbb
jbe
lcall
mov
jmp
enter
dec
pop
addb
jbe
outsl
add
notb
iret
xchg
in
outsb
inc
sbbl
aam
and
mov
xor
mov
push
sub
pushf
addl
mov
test
cmp
imul
ret
dec
sbb
pop
arpl
push
sbb
sarl
cwtl
cltd
xchg
pop
adc
jmp
stc
dec
dec
jo
add
loope
cmpsb
in
stos
ss
add
int3
movsl
pop
or
das
push
hlt
je
data16
cmpsl
jne
les
fsubrp
jl
xor
mov
or
stc
shr
fimull
rcrb
int3
dec
mov
loopne
gs
xchg
or
push
push
iret
push
scas
xor
mov
dec
cmp
out
mov
hlt
movsl
add
xchg
add
and
dec
sbbb
ds
jno,pn
cmc
repnz
or
inc
add
xchg
testb
call
sbb
jmp
outsl
inc
push
mov
aaa
mov
or
mov
jae
cwtl
mov
xor
into
movsl
stos
cli
fprem1
cmp
mov
sub
inc
nop
xchg
lods
push
pop
imul
repz
insb
sti
mov
xchg
xchg
lahf
xchg
mov
push
or
ffreep
pop
jge
inc
mov
outsb
dec
adc
push
or
icebp
out
mov
sub
arpl
bound
and
sub
imul
shrl
inc
xchg
push
inc
add
mov
fwait
mov
fnstenv
sub
std
mov
sub
push
jmp
cmp
fs
add
xor
loope
test
in
push
inc
call
and
pop
aad
and
and
lods
fadd
dec
mov
int3
sub
orb
mov
xchg
dec
add
mov
mov
adc
fcoml
pusha
inc
adc
fstp
push
and
scas
sub
sub
popf
ret
pusha
cmpsl
sbb
fcomp
out
xor
fistpll
mov
aas
dec
out
xchg
or
movsl
out
bound
sbb
loopne
xor
loop
push
sbb
js
out
sub
stos
mov
scas
push
iret
add
push
mov
inc
jno
adc
loopne
cmp
outsb
add
xor
sbb
pop
inc
adc
pop
cmp
add
aad
pop
aaa
aas
stos
jge
pop
xchg
mov
gs
clc
sub
push
push
test
clc
cmp
cs
lock
fcmove
fwait
popf
nop
mov
pop
pop
scas
sbb
push
jmp
test
inc
lret
bound
int
scas
lea
mov
inc
in
pop
push
jns
repz
push
mov
mov
xor
outsl
fmull
cwtl
mov
push
sbb
int3
mov
adc
mov
mov
test
shlb
cmp
sbb
mov
push
dec
push
mov
aam
cwtl
push
jp
inc
push
lret
cld
subb
das
imul
int3
push
push
and
inc
mov
jne
jg
or
and
bound
loopne
mov
repnz
or
lods
sbb
mov
lods
push
js
push
adc
mov
pop
push
adcl
or
fcoml
cld
imul
into
jb
xor
mov
mov
jl
mov
mov
or
or
bound
divb
scas
mov
fimull
sub
mov
pop
dec
es
inc
movsl
mov
addl
les
mov
xchg
add
mov
xor
sub
adc
es
push
ja
fimuls
mov
xor
fs
push
add
movsb
sbb
dec
and
imull
nop
sbb
outsl
mov
ret
pop
cwtl
add
ds
test
pop
mov
insb
or
lret
inc
out
lods
cltd
adc
mov
fistpl
cmp
cld
cltd
dec
cwtl
fsubrl
inc
push
adc
movsb
or
xor
jl
sub
jl
mov
jmp
imul
and
mov
jge
mov
dec
mov
jecxz
push
stc
mov
mov
cwtl
add
imull
push
repz
outsb
out
adc
mov
outsb
jg
addr16
mov
fistl
test
nop
push
scas
daa
shl
test
test
jne
push
adc
lret
into
aas
lret
lcall
pop
lcall
das
jne
sub
jmp
adc
push
and
mov
mov
mov
push
adc
dec
push
mov
into
cmp
fldt
iret
mov
xchg
dec
xchg
inc
mov
sbb
mov
aad
xor
shrl
jge
aam
xchg
ljmp
fldcw
insb
pop
das
stc
pop
add
lret
popa
inc
cmpsb
jb
cmp
sbb
dec
imul
cmc
jmp
repz
mov
sbb
or
and
mov
push
pop
xchg
clc
push
jae
jno
subb
push
in
dec
pop
jmp
xor
pop
xchg
les
gs
push
dec
ljmp
inc
rcr
pop
ds
mov
pop
rcll
mov
cltd
insl
stos
dec
dec
cmp
jmp
popf
int
mov
js
mov
sub
lea
adc
cwtl
dec
in
ss
fnstsw
cmp
pop
push
mov
cmp
cmp
push
and
jno
add
pop
repnz
dec
adc
clc
repnz
sarl
mov
decb
std
sti
xchg
cltd
cmp
add
mull
inc
push
jecxz
imul
xor
push
push
inc
cmp
mov
jle
cmp
mov
adc
ds
pop
add
mov
scas
xor
aas
lahf
rorb
and
sahf
jp
repz
shlb
and
cmc
xchg
ret
xchg
data16
out
fldln2
push
icebp
mov
out
fnstsw
adc
push
dec
pop
in
mov
sbb
loopne
fcomi
int
add
orb
sbb
inc
push
sub
mov
dec
add
sti
fisttpl
movsl
jle
pop
shlb
push
ret
sub
jbe
dec
mov
shl
jae
and
push
rorb
xor
pop
test
sbb
adc
shll
js
call
mov
sbbb
adc
out
pop
scas
add
mov
cwtl
repnz
fmulp
mov
push
outsl
inc
aad
sub
inc
stos
mov
mov
mov
lock
pop
inc
nop
or
xchg
cmp
lcall
bound
inc
push
pop
das
inc
js
lcall
push
mov
in
cmovae
dec
pushf
loop
or
fldl
cltd
push
dec
scas
imul
and
cmpsb
outsl
cmp
flds
cmp
jns
mov
test
pop
outsb
inc
leave
push
xchg
and
fistpll
push
mov
aad
add
int
imul
mov
add
outsb
cmp
mov
cmp
fidivs
jg
scas
mov
outsb
xchg
push
xchg
stos
sbb
and
xchg
adc
bound
push
int
mov
push
sub
push
sahf
ret
rcrl
xor
jb
bound
jbe
iret
pop
repnz
sub
push
test
sbb
fisubl
out
mov
dec
inc
add
mov
insl
sti
cmp
enter
xor
fistpll
lds
sbbl
in
mov
stc
jmp
or
mov
jge
and
lcall
mov
imul
mov
sbb
xchg
and
decb
jmp
icebp
data16
jmp
stc
shlb
lret
jno
mov
mov
loopne
mov
or
fwait
inc
sub
ss
shl
fidivrl
jg
cltd
sbb
rcll
or
jno
dec
cmpsl
stos
lret
int
std
cmpsl
jecxz
outsl
testl
bound
inc
rcl
push
or
jno
xor
insb
sub
jl
pop
insl
inc
fiaddl
push
fmull
adc
fstpt
movsb
add
or
out
jp
cs
cltd
lcall
mov
adc
mov
in
es
push
and
adc
pop
inc
jmp
and
ret
inc
punpcklbw
or
mov
xchg
arpl
hlt
ljmp
ret
push
cli
addb
shll
outsl
mov
push
les
cmp
fnstsw
ds
xor
lret
xlat
push
inc
ret
cld
lret
add
add
iret
adc
int
in
mov
dec
fldl
sbb
daa
adc
testb
pop
xor
pop
std
lods
lds
pop
subl
aam
push
jno
pop
shrl
push
xor
mov
add
lahf
cmp
dec
mov
sti
sub
sahf
pop
into
or
adc
arpl
mov
sbb
push
insl
ds
sub
lds
aad
or
mov
add
push
push
mov
inc
mov
lret
xlat
xor
inc
into
lock
mov
outsb
mov
shlb
insb
xchg
adc
insb
jp
jno
xchg
cmp
mov
ljmp
pop
sub
or
pop
popa
mov
inc
inc
dec
test
adcl
mov
add
cmpsb
leave
outsb
push
add
jnp
lss
test
pushf
push
stos
stos
cmpsb
inc
mov
sbb
mov
data16
int
adc
jo
aad
popf
dec
je
sahf
jge
mov
xor
dec
pop
in
das
jbe
xor
push
xor
mov
dec
repnz
mov
sub
mov
xchg
mov
xor
lock
cli
jnp
jle
xchg
inc
jbe
mov
cmpb
pop
ret
imul
xor
cmpsl
je
jns
out
add
cmp
and
push
jnp
mov
mov
jae
dec
mov
inc
popa
or
and
mov
cmp
lret
lret
push
cmp
lret
jmp
mov
adc
sahf
fwait
pop
rcrl
sbb
repz
aam
bound
mov
out
jbe
cwtl
out
pushf
retw
jg
sahf
cmp
cltd
out
mov
mov
pop
cmc
scas
lret
adc
stos
inc
fldcw
mov
and
jno
push
dec
adc
cmp
mov
push
adc
jbe
lods
mov
adc
orb
or
lcall
movsb
sub
push
stos
fistpll
pop
adc
outsb
sub
or
out
cmp
xchg
mov
mov
and
pmuludq
shlb
inc
hlt
sub
loopne
xor
popa
xor
sarl
test
cmp
adc
jge
dec
nop
ja
test
insb
pushl
aas
sarb
sbbl
jbe
jle
add
xor
dec
jge
sti
movsb
clc
inc
and
adc
rcr
iret
in
pop
mov
push
aad
lds
push
sub
push
push
push
push
addl
in
or
mov
sub
ds
push
sub
add
sbb
add
lods
inc
or
xor
and
push
shr
movsb
test
mov
mov
mov
fpatan
xor
stc
out
ja
mov
xchg
push
mov
mov
sbb
ror
push
dec
dec
or
mov
push
cmp
sbb
xor
iret
aas
mov
jno
ror
cmpsl
scas
jg
xchg
mov
cld
icebp
and
jmp
sub
xchg
stos
stc
mov
add
mov
jns
movsl
push
cmp
mov
and
ds
addr16
cmpsl
leave
cmpsb
popf
add
jae
adc
jp
loope
sub
add
popf
jmp
adc
mov
ljmp
mov
insl
mov
leave
push
mov
mov
or
shll
mov
mov
mov
jle
das
sub
popf
cmc
inc
jecxz
cmp
xor
and
int3
jl
test
cld
insb
fsts
aaa
in
sbb
out
adc
fwait
inc
sbb
jns
aaa
push
ja
in
aaa
jmp
jle
in
add
and
fidivs
or
xor
mov
adc
clc
dec
sbb
test
das
jp
jmp
stc
mov
mov
hlt
xchg
xchg
xchg
jecxz
mov
inc
leave
mov
cmp
or
dec
jmp
mov
fnstcw
sub
iret
insl
je
add
xchg
rcr
pop
lods
adc
rclb
clc
ds
push
and
mov
mov
clc
push
mov
pop
mov
stos
lea
pop
xchg
mov
mov
xor
sbb
inc
xor
xchg
lret
or
jmp
push
repz
push
leave
adc
and
orl
cmc
int3
push
adc
pop
xchg
lods
stc
decl
das
sbb
xchg
mov
pop
daa
jl
pop
mov
and
mov
mov
mov
add
push
mov
mov
xchg
jle
stos
dec
cld
mov
fisttpll
fisubl
and
cli
pop
xchg
inc
adc
push
inc
cmp
mov
and
sbb
sbb
or
sbb
subl
jno
andl
mov
pop
xchg
sub
jae
popa
bound
out
lahf
or
sbb
jns
enter
jp
cmc
jp
jecxz
daa
stc
jge
ja
add
movsb
jmp
jg
and
sub
test
call
lret
cwtl
rclb
push
or
movsb
scas
imul
and
movsl
jbe
xchg
bound
mov
adc
mov
pop
dec
stc
mov
jo
adc
cmp
insl
mov
add
insb
jl
pop
add
mov
out
outsb
pop
or
jg
in
je
out
aam
out
dec
sbb
imul
pop
jbe
push
pop
push
mov
aad
fnstenv
imul
sbb
adc
jo
add
les
std
fs
cli
sbb
das
pushl
dec
jp
pop
cltd
fisttpll
outsb
cli
clc
pop
incl
sub
push
in
mov
adc
cmpsl
cmp
sbbb
sub
inc
inc
hlt
mov
daa
iret
mov
sbb
dec
fcomps
jae
cmp
imul
xlat
mov
out
xor
cmp
fcomps
sbb
xor
ds
jle
pop
cmpsb
lea
adc
mov
lea
push
add
call
cltd
jb
pop
push
lods
cltd
clc
cltd
and
das
call
scas
popa
jnp
mov
xor
divb
std
xchg
jne
hlt
addw
fwait
movsb
int3
xchg
outsb
repz
mov
sbb
mov
and
and
and
cli
mov
xchg
cltd
mov
ret
and
outsb
insb
pop
fndisi(8087
stos
jle
test
jp
adc
add
hlt
adc
repnz
dec
int
jmp
shrl
jae
pop
xor
cmp
xor
test
shl
insl
inc
adcl
adc
outsl
int
lock
sbb
aaa
int3
fistps
xor
xchg
ret
push
push
nop
imul
inc
in
enter
add
js
mov
fwait
xor
rorl
les
or
scas
xlat
movsl
cmp
int3
mov
jae
leave
adc
xchg
dec
push
fcmovnbe
faddl
loopne
sub
jle
ss
push
jbe
sbb
int3
lret
jmp
test
sbb
lea
jb
cmp
cmp
inc
xchg
shl
scas
das
fldl
mov
add
push
es
xchg
mov
inc
fst
mov
inc
jne
push
cmp
xchg
mov
aad
fadd
pop
imul
rclb
js
push
adc
jo
js
xchg
sub
pop
or
arpl
leave
testl
test
sub
leave
test
add
cmc
test
ret
in
mov
lds
cmp
mov
loop
sbbl
mov
jnp
std
sub
push
mov
aas
cli
cmp
out
iret
sahf
js
roll
ret
ficoms
pushf
jmp
ficoml
and
imul
mov
into
mov
fdiv
cmpsl
jle
popf
mov
mov
shll
int3
in
mov
imul
movsl
inc
in
xor
sub
add
aas
mov
push
stos
shrb
and
mov
pop
js
loopne
dec
insl
test
cmpsb
inc
adc
sti
cmpsl
icebp
pop
jo
and
ret
xchg
ret
pop
push
push
fadd
sub
subb
insb
inc
pop
cld
aas
sbb
inc
pop
and
fisttpl
mov
mov
loopne
jge
sbb
mov
hlt
sub
cwtl
xchg
daa
xor
dec
mov
lret
pop
push
mov
shrl
add
rcrl
mov
jl
pop
mov
cs
cmovne
subb
les
push
daa
test
mov
push
push
push
xchg
mov
inc
pop
out
push
adc
xchg
cmp
lods
fimull
xchg
cwtl
hlt
jl
xchg
push
fucom
jg
fwait
sti
shlb
jmp
lret
sbb
and
lods
pop
in
mov
mov
inc
inc
pop
xor
movsb
adc
negb
add
sub
xlat
and
push
cli
xor
popa
orl
out
sbb
mov
shlb
sub
xchg
insb
imul
dec
inc
add
test
int3
push
mov
jle
pop
rcll
int3
imul
cmpsl
mov
int3
add
jecxz
sub
je
fs
gs
sar
inc
lds
hlt
xchg
adc
out
dec
nop
xor
gs
and
cwtl
jmp
repz
mov
mov
mov
push
js
push
dec
data16
or
cmp
jb
inc
ss
loopne
js
or
loopne
jae
movl
cmc
out
into
add
loope
lret
push
test
sbb
pushf
lret
test
ret
movsb
lods
orl
or
pop
out
xor
ret
sarl
lods
les
inc
mov
xlat
sbb
arpl
sub
or
inc
insl
fwait
mov
fdiv
xor
inc
pop
jp
mov
jae
dec
sub
xchg
ss
xlat
mov
nop
add
cld
add
in
cwtl
xrelease
add
push
jp
aas
xchg
wrmsr
mov
jecxz
mov
cmp
les
mov
pushf
jne
xchg
mov
inc
jl
pop
jecxz
add
rolb
stc
das
hlt
mov
xor
xchg
xchg
sbb
mov
xor
lods
cmp
push
push
popf
in
dec
enter
or
sbb
test
fmuls
pop
stos
mov
pop
movsl
adc
mov
dec
loopne
sbb
lock
or
bound
es
pop
jae
rcrb
movsl
adc
int3
or
out
lods
sti
pop
mov
stc
mov
mov
flds
dec
repnz
mov
mov
or
cmp
movsb
cli
add
xor
adc
cld
xchg
inc
hlt
out
adc
mov
lret
popa
enter
mov
xor
fnstsw
push
push
ja
push
call
outsb
cmpsl
push
fiadds
inc
cmp
bound
mov
dec
lahf
sub
test
rcrb
add
into
clc
mov
test
xor
faddl
cli
ljmp
pop
adcl
pop
dec
std
xchg
aad
xor
popa
xor
inc
clc
xchg
dec
xchg
sub
lret
pop
test
ds
into
stc
inc
lds
cs
roll
add
push
push
fwait
scas
dec
movsb
cmp
or
mov
pop
enter
test
xchg
mov
hlt
add
fsts
cmp
ss
shll
hlt
sti
std
std
mov
push
add
in
push
ss
scas
cli
ret
mov
inc
out
mov
lock
sub
jnp
add
rcr
and
xchg
adc
mov
xchg
adc
adc
push
orb
push
lods
xor
rcrl
ret
ja
inc
scas
push
fstl
push
cmp
out
ja
mov
lea
sub
movsb
jl
orb
data16
nop
mov
inc
loopne
sub
popa
inc
fs
ljmp
into
jl
jb
pop
test
sbb
cmp
sbb
imul
nop
enter
dec
test
in
ret
aad
roll
dec
mov
outsb
sbb
ds
test
clc
nop
ljmp
je
mov
outsl
sbb
mov
sub
dec
xor
or
test
outsb
ret
jl
and
pop
mov
ljmp
dec
jge
jecxz
cmp
leave
jle
cld
or
mov
push
push
add
fcomp
sbb
xor
and
push
xor
and
jbe
enter
test
push
mov
fsubrp
mov
insl
mov
ret
and
dec
cwtl
cmp
cmp
in
jae
nop
iret
sbb
mov
cmp
ret
lea
test
xchg
fidivrs
dec
cld
jb
int3
pop
aaa
mov
in
mov
rolb
fnstenv
and
stos
shrb
mov
mov
jg
xor
bswap
pushl
mov
sub
mov
fistps
std
mov
or
addb
inc
sahf
mov
pop
xchg
lea
std
inc
pop
mov
xor
cmpsl
or
inc
sbb
rcrl
int3
xor
mov
pop
pop
mov
inc
leave
jl
lret
and
test
lods
gs
ss
bound
cwtl
sub
int
clc
sbb
lods
cmp
cmp
scas
add
xor
jb
lret
outsl
push
movsl
lods
mov
test
sbb
sbb
push
jbe
stos
pop
cwtl
pop
std
adc
fcmovu
loop
xor
jb
or
cltd
popa
adc
test
pop
ljmp
and
imul
and
ss
aad
mov
test
ss
sbb
mov
gs
clc
mov
loopne
mov
pusha
push
xor
aad
mov
sub
pop
pop
fistl
xor
into
adc
jbe
in
and
jno
lds
push
sbbl
out
mov
jle
fcoms
mov
sti
jne
xor
lock
sub
nop
into
push
and
and
mov
stc
sbb
mov
xchg
cmpsb
repz
popa
xchg
add
fbstp
mov
mov
and
js
xor
inc
sub
rcl
jmp
pop
cwtl
sbb
cmp
sub
pop
fs
xor
inc
sub
jg
and
mov
insb
add
aas
jmp
out
int3
subl
mov
push
xchg
add
inc
pop
jg
std
lods
adc
inc
fwait
xor
pop
pop
adc
unpckhps
orb
loope
das
jne
push
sbb
jmp
lret
adc
gs
and
xchg
shl
mov
arpl
pop
les
bound
daa
dec
les
aas
test
nop
in
push
mov
imul
bound
stos
sub
sahf
out
int
inc
leave
mov
lock
adc
pop
or
stc
jb,pt
in
xor
pop
or
cmp
inc
dec
dec
stos
jl
ss
sub
or
adc
and
negb
xchg
stos
adc
add
ja
ret
jl
cmpsl
jno
out
jbe
enter
sbb
insl
xchg
addr16
xor
idivl
fisttpll
xor
jg
loope
bound
std
enter
notl
mov
mov
das
imul
fwait
std
adc
pop
nop
in
nop
test
sbb
mov
pop
adc
lods
push
adc
mulb
cmp
inc
imul
or
dec
xchg
into
xchg
in
js
es
divl
out
inc
mov
mov
sbb
mov
cltd
push
scas
push
scas
fistl
fstpl
jae
lret
xor
pop
push
sbb
loopne
inc
hlt
addr16
xchg
and
repz
adc
lea
mov
sbb
into
mov
insb
aam
test
xchg
cwtl
add
outsb
mov
ds
fdecstp
mov
data16
test
gs
test
or
lret
fwait
jne
out
jmp
jbe
cmp
jne
push
js
and
lret
jbe
jecxz
dec
mov
lea
dec
aaa
mov
jg
subb
and
sub
testl
pushf
sbb
ja
mov
test
cmp
xchg
jecxz
dec
cmp
subb
xor
xchg
jle
mov
pop
or
lods
push
push
xor
shll
lcall
mov
fmull
je
stos
aam
cld
stos
mov
shr
pop
mov
ds
sti
mov
lods
adc
dec
sub
psadbw
repz
or
fs
xchg
push
lods
lahf
pop
mov
shrl
xorl
mov
mov
ret
cmc
test
dec
cmp
xchg
pop
mov
push
outsl
nop
out
cmc
test
xchg
popf
cs
mov
sub
mov
xchg
mov
out
pusha
dec
or
push
xor
cmp
push
mov
push
sub
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
jmp
aad
mov
mov
rorb
sub
fs
sbb
adcl
addl
dec
out
in
push
aam
pop
sub
mov
ss
mov
sub
mov
inc
sbb
mov
mov
jns
mov
lret
addl
nop
shrl
mov
add
sarl
imul
lahf
cmp
xchg
xchg
jmp
cs
sarb
jecxz
iret
cmpsb
pop
loopne
and
and
or
stc
je
outsb
dec
ret
mov
adc
hlt
xchg
add
mov
xchg
fistpl
pop
mov
sbb
lret
test
and
shl
ds
dec
cli
into
loopw
xorl
loopne
int3
push
push
mov
mov
adc
mov
or
shl
nop
cltd
lods
pop
xchg
cmp
push
sub
xchg
jecxz,pn
int3
ret
pop
pop
sub
leave
cltd
js
mov
inc
insl
or
mov
decb
ljmp
inc
jg
push
jp
adc
call
inc
mov
ss
mov
movsl
pop
and
mov
xchg
adc
add
pop
imul
sbbl
lods
popa
push
dec
pusha
mov
inc
xlat
je
pop
bound
or
sti
es
xchg
rclb
jmp
push
inc
push
mov
in
pop
fs
cmp
dec
ds
scas
bound
mov
add
xchg
stos
je
test
loopne
std
add
add
int3
xor
shrl
popa
aam
adc
jp
mov
cmpsb
loop
xchg
push
push
lahf
sti
push
clc
loopne
loope
push
out
ljmp
std
data16
inc
pop
addr16
std
sbb
xor
les
jb
rorl
imul
xchg
repz
mov
xchg
inc
sub
fists
int3
pop
add
xor
jne
mov
rcr
cmp
cmp
in
out
cmp
pop
add
dec
movsl
sub
pop
cli
jg
daa
je
sub
in
cwtl
xor
roll
jno
mov
lea
push
sub
add
loope
es
mov
stos
adc
inc
ss
xor
mov
loope
jae
xor
push
out
jb
aam
ret
idivl
cltd
mov
in
mov
mov
jmp
adc
push
lods
cs
cli
stos
dec
jo
insl
stc
adc
pop
jns
pop
enter
icebp
inc
sbb
lret
xchg
xchg
cmpsb
pop
add
or
imul
fnstenv
mov
mov
dec
mov
jp
stc
push
lret
out
and
adc
shlb
cmpsb
ss
clc
mov
sub
jg
sub
add
std
movsl
lods
xchg
sbb
je
dec
jecxz
stos
push
ja
icebp
cmp
jecxz,pn
xor
push
outsb
ja
insl
pop
mov
nop
fxch
jb
xor
push
cmpsb
sub
dec
jle
and
adc
xchg
jne
mov
xchg
loopne
dec
push
out
mov
mov
pop
cmp
jb
push
je
sbb
fcomp
mov
aam
inc
mov
pop
fnstcw
and
xchg
cmp
cs
dec
or
roll
add
pushf
addr16
in
inc
pop
stos
popa
pop
inc
mov
fiaddl
cmp
hlt
sbb
fdivrs
xor
mov
aaa
jbe
ja
inc
inc
lret
sbb
scas
andb
sub
gs
inc
lret
push
pop
push
dec
add
sarb
and
scas
push
jge
sub
addr16
sbb
shlb
mov
mov
lods
inc
jg
adc
push
lcall
in
pop
cmp
and
jle
xchg
loopne
out
iret
sbb
js
mov
negl
lcall
lds
xchg
rclb
inc
outsb
nop
sbb
fucomi
scas
stc
cltd
cmp
mov
sub
inc
fwait
popa
out
jl
adcl
dec
add
int3
fstps
repz
add
jmp
rorb
enter
mov
ficompl
shll
sbb
or
push
sbb
fstpt
ja
ljmp
inc
inc
lods
pop
inc
lahf
sub
adc
data16
pop
xchg
mov
lods
jbe
cmpsb
or
pop
or
lahf
cmpsl
stos
jecxz
cmc
or
push
fidivs
int
cld
dec
mov
fdivrp
adc
shr
add
int
popl
fistps
pop
dec
int
pop
sub
pushf
jl
ret
inc
xchg
lret
sub
xchg
add
jnp
movsl
adc
jge
add
push
clc
sub
mov
int3
repnz
sub
cs
fildl
mov
xlat
jl
push
mov
je
pusha
loopne
arpl
sub
push
in
pop
test
or
cmpsl
mov
aam
out
cmp
sub
dec
push
je
out
inc
inc
mov
cmc
xchg
lds
cmp
push
outsb
mov
mov
test
xchg
pop
xorl
repnz
mov
push
dec
scas
cmp
fs
pop
and
out
push
dec
int3
lods
aaa
push
xchg
jbe
mov
es
lock
push
sub
inc
insb
or
fsubl
divb
movsb
cld
pop
dec
arpl
sub
cmp
mov
push
test
std
jbe
out
repnz
sarb
jae
lcall
insl
xchg
les
loop
insl
dec
loopne
jp
and
inc
push
pop
addb
ds
cmp
or
cld
cltd
das
aas
or
nop
ss
jp
popa
out
push
add
lcall
fnstenv
out
xor
cmp
xchg
lahf
xchg
bound
cmpsl
jbe
cmpsb
dec
repnz
mov
fwait
dec
add
cmc
repz
dec
xchg
setl
jbe
sub
xor
sub
lahf
daa
lret
lret
shl
jns
pop
sub
dec
jne
outsb
jecxz
xchg
cmp
ss
cld
pop
dec
imul
sub
or
mov
pop
mov
out
or
sbb
int3
mov
or
js
inc
in
fwait
in
mov
test
dec
lahf
mov
lock
insb
jbe
lock
std
mov
mov
call
scas
inc
inc
rcrb
mov
mov
mov
fistpll
repnz
daa
rclb
adc
aam
xchg
notl
test
in
rcll
into
cmp
sti
clc
lea
int
sub
insb
sbb
mov
in
ret
sbb
sub
and
mov
xor
cmp
xchg
stos
je
call
lahf
test
mov
in
xchg
cmpl
sti
and
xor
cmc
mov
push
popa
outsb
fdivrl
cltd
jne
in
into
jle
pop
xchg
and
dec
clc
insl
push
orb
and
gs
sbb
inc
jne
icebp
mov
scas
jne
jmp
rcr
and
jecxz,pt
push
cmp
cmp
mov
jge,pt
dec
std
mov
divl
movsl
push
lahf
cmp
mov
inc
add
jp
jge
les
lret
mov
mov
fidivrs
cs
lahf
sahf
std
aad
mov
notl
cs
je
mov
lret
mov
mov
test
orb
out
adc
movsb
fisubl
rorb
sbb
ss
std
lcall
mov
in
stos
or
ljmp
test
mov
and
jmp
push
sub
hlt
sbb
dec
cwtl
ret
dec
sbb
enter
add
fdecstp
mov
or
dec
xor
cmp
mov
bound
sbb
pop
and
inc
xor
insb
jbe
cmp
xchg
negl
cld
or
roll
cmp
test
mov
sbb
ja
enter
cs
xorl
idiv
jno
leave
xchg
rcll
pop
cmp
sub
jmp
adc
in
jo
inc
bound
push
cwtl
push
add
jecxz
fsubrl
rorb
jns
xor
pop
mov
aaa
jp
fiaddl
ret
jns
out
cmp
fldl
jno
push
xchg
mov
push
sub
sub
loopne
sbb
inc
bound
jecxz
sub
sub
pop
xchg
sub
mov
push
lcall
or
inc
repnz
das
mov
std
mov
jle
xor
arpl
call
xlat
mov
leave
sarl
add
out
pop
xorb
aam
cmp
sub
aam
add
fmull
jae
sti
adc
inc
push
inc
push
lcall
add
add
loopne
dec
xlat
pop
test
andb
cmpsb
cmc
cmp
loop
bound
mov
mov
int3
cltd
adc
test
stos
push
fs
out
dec
mov
andl
and
cwtl
xchg
icebp
cmpsb
jp
push
daa
or
pop
mov
xchg
mov
nop
or
pop
notb
adc
pop
dec
loop
push
in
mov
int
dec
fldl
fidivrl
inc
mov
pop
lock
imul
cwtl
sahf
add
jg
and
add
adcb
lds
sub
mov
sub
dec
ds
xchg
scas
negl
jno
jge
loopne
ficompl
inc
lcall
dec
pop
loope
into
insb
movb
test
ret
inc
shrl
out
pop
add
movsl
and
or
cmp
jge
mov
mov
dec
lds
ret
stc
and
push
inc
sub
and
jae
ja
addl
dec
dec
fstpt
dec
ret
push
pcmpeqw
xchg
nop
pop
cmp
int
xchg
and
jns
lret
test
stos
mov
or
fbstp
inc
cmc
add
cltd
mov
pop
iret
sbb
add
cli
cmc
and
in
mov
into
repnz
outsl
xor
mov
pop
stos
je
lret
sub
or
xchg
xchg
push
outsb
mov
push
ja
or
mov
add
arpl
sbbb
mov
and
out
pop
inc
xchg
enter
mov
notl
inc
inc
in
dec
fists
inc
add
sbb
aam
cltd
mov
psubw
in
and
xchg
lret
push
or
fidivs
push
push
dec
js
mov
inc
jecxz
mov
in
mov
cmp
cmp
inc
lcall
in
lret
pusha
nop
sbb
or
imul
ret
mov
sbb
cli
xchg
mov
cmp
adc
repnz
mov
push
test
jp
mov
mov
call
inc
cltd
sbb
aam
mov
sbb
xchg
or
mov
mov
add
xchg
test
pop
jl
popa
mov
xchg
push
push
stc
aam
loope
dec
xlat
add
jb
push
mov
sub
sbb
leave
inc
push
cli
xchg
or
mov
scas
fld
mov
xor
or
fiaddl
bound
or
pop
fwait
mov
jl
dec
bound
das
inc
clc
es
mov
jne
scas
movb
clc
xchg
inc
and
hlt
push
sarl
adc
lods
dec
movsb
or
out
loopne
xchg
jmp
pusha
loop
adc
and
popf
mov
ret
lock
push
push
lock
jb
jg
mov
inc
mov
loopne
mov
push
push
stc
sbb
inc
mov
or
subb
shr
lds
mov
push
add
std
dec
lahf
xorl
aad
das
test
movsb
pop
inc
xor
and
mov
cmpsl
ja
mov
xor
pop
repnz
in
popf
fldenv
pusha
mov
inc
pop
out
xor
jecxz
enter
shll
xor
push
inc
out
orl
mov
or
js
lods
in
into
in
je
mov
sbb
jge
mov
mov
jmp
or
jbe
jo
and
mov
cltd
rcll
shlb
ret
adc
xchg
imul
imul
es
cli
test
loop
dec
movsb
arpl
push
loope
sbb
popf
cld
sbb
loopne
imul
or
test
cmp
push
jns
mov
mov
jno
sahf
repnz
pop
add
adc
sbb
in
push
les
sbb
lcall
jno
cmp
lahf
dec
std
xchg
ret
inc
or
lret
adc
inc
filds
sub
mov
cmp
sub
mov
xor
xchg
jecxz
push
pop
jmp
int3
cmp
add
or
cmpsb
in
sub
divb
sbb
into
in
rolb
inc
and
xor
cmp
lahf
dec
sub
jl
add
pop
adc
lret
mov
loopne
xor
test
aaa
mov
in
push
pop
lock
sti
inc
mov
aas
sbbl
mov
pusha
xchg
sbbl
lcall
sti
lods
test
in
push
jl
mov
call
mov
loop
movsb
nop
xchg
mov
cmp
sbb
pop
enter
sti
xchg
mov
out
mov
lods
inc
loop
sbb
dec
scas
lret
sub
pop
sahf
jl
or
pop
xor
push
in
popf
in
icebp
in
pop
inc
add
cmp
fsubl
push
inc
aam
xchg
lret
inc
add
rol
fs
xchg
fildll
jp
mov
add
inc
jne
mov
in
mov
and
in
pop
gs
ds
jb
push
sub
scas
test
rcrl
mov
sti
in
cld
mov
notl
push
les
mov
or
rcll
xor
sbb
sub
ror
pushf
mov
cs
icebp
sbb
cli
jns
pusha
mov
or
test
out
xchg
cmp
clc
push
cmp
sti
adc
out
jae
rol
mov
lods
aaa
addl
sub
jecxz
repz
pop
sub
test
fwait
xchg
cld
xlat
inc
stc
adc
mov
lret
lods
pop
popf
mov
fsubp
fistl
xchg
insb
xor
xchg
cmpsl
enter
mov
out
cwtl
cmp
sbb
mov
jl
insl
outsb
pushf
dec
xchg
add
cmp
pop
les
js
outsb
rclb
jg
xor
rolb
dec
out
fxch
and
sbb
mov
push
movsl
push
out
dec
push
jmp
sub
pop
inc
es
push
pop
rcrl
lcall
outsb
dec
xor
cmc
stos
jecxz
sbb
jns
shlb
sbb
adcl
movb
jl
push
xor
hlt
jge
notl
in
aaa
sbbl
xchg
inc
lret
fnsave
inc
ficoms
adc
sbb
push
mov
movl
xor
iret
mov
xorb
lea
fdivs
sbb
mov
clc
pop
das
cmp
ljmp
xchg
rorl
movl
push
mov
dec
jl
xchg
inc
pop
or
rcrl
nop
pop
repnz
jp
imul
ss
xchg
adc
push
or
jae
je
pop
pop
int3
mov
rorl
pop
jmp
cmp
pop
cmp
outsb
test
adc
loop
lods
jecxz
cltd
add
gs
mov
mov
imul
lds
loopne
lahf
loope
xchg
sbb
push
sahf
mov
dec
nop
sbb
lcall
push
in
sub
leave
inc
jecxz
jno
xchg
addb
cmp
lea
sbb
pop
mov
pop
shll
inc
jnp
inc
popf
dec
mov
hlt
push
testb
inc
ja
adc
sub
test
push
repz
push
jns
xchg
test
xchg
add
shrl
mov
lahf
lods
lods
jns
inc
ja
insl
jp
dec
xchg
cmp
scas
test
pop
pop
fdivl
popa
cs
cmp
adc
and
icebp
mov
outsb
in
roll
xchg
mov
out
jae
sub
sbb
xchg
mov
aad
dec
test
mov
jns
ret
iretw
mov
jl
inc
push
hlt
jb
mov
push
pop
and
sbb
cmp
fistpll
add
adc
arpl
insl
insb
xor
ret
les
std
adc
dec
pop
sbb
or
jns
adc
inc
negl
cmp
std
inc
dec
cmp
sbb
inc
clc
out
push
push
push
cli
sbb
sbb
mov
les
pop
jp
push
sub
fstps
xchg
jmp
loope
ficoml
adc
jl
mov
sbb
sbb
das
or
push
ret
int
rcl
popf
pop
out
lds
fdivrp
lret
cmp
call
sub
js
mov
cmp
nop
leave
nop
sahf
mov
cwtl
pop
outsb
and
sbb
pushl
outsl
mov
sbb
daa
mov
cmc
jne
wrmsr
mov
add
jns
sub
ljmp
cwtl
and
pop
inc
fcmovb
jmp
dec
fiaddl
cmp
popf
push
jg
jp
adc
into
js
aad
loopne
scas
jle
cmp
jmp
cmc
std
stc
aaa
je
xor
cwtl
je
loopne
sub
ja
push
repz
push
ffree
imul
mov
std
repz
mov
lds
pop
jmp
xor
inc
pop
mov
cmpsl
mov
push
pushf
fmul
push
adc
in
js
enter
das
xchg
jge
test
outsb
pop
in
jp
sahf
ret
fisttpll
cmpsl
stos
ficoml
imul
add
outsb
sahf
mov
jge
mov
mov
sbb
add
sbb
jno
fildll
push
lods
and
cli
shrb
or
insl
loope
add
adc
and
loopne
sub
clc
or
lods
sub
sub
scas
or
pop
pop
adc
cld
fwait
subl
xchg
sub
xor
lret
cmp
push
lea
es
mov
pop
add
ja
mov
popf
and
and
jns
xor
jb
sub
ret
ret
data16
out
sub
dec
mov
int
pushf
ret
or
sub
or
jbe,pt
sbb
insb
pop
loope
and
stc
sbb
cmp
and
scas
pop
pop
mov
mov
cmc
jmp
push
int
mov
pop
and
mov
pop
xchg
xor
fwait
xchg
imul
or
cmp
popl
inc
cld
jae
repz
das
inc
lds
and
adc
out
test
lret
add
fisubl
mov
mov
inc
xlat
xchg
dec
outsl
addr16
in
stos
dec
ss
ret
mov
mov
ret
lret
inc
in
cmp
xchg
test
loopne
cmp
lods
or
test
lods
jp
jae
cld
leave
sahf
lcall
mov
xor
push
mov
int3
adc
jg
sub
mov
sub
jne
add
or
push
mov
xlat
sahf
mov
sub
mov
addr16
mov
lcall
sbb
pop
mov
fists
mov
loop
insl
mov
ds
mov
and
cs
into
mov
and
adc
jb
je
push
dec
repnz
das
ret
fistpl
popa
jmp
out
jge
into
in
lcall
scas
push
or
mov
push
int3
or
sbb
pop
and
cmp
or
pop
fnsave
clc
int
fcompl
adc
adc
ret
push
xchg
or
das
lret
les
lcall
pusha
xor
movsb
adc
sarb
mov
call
mov
insb
adc
mov
inc
shlb
mov
test
mov
into
pop
fdivp
fwait
or
jle
outsb
and
xchg
mov
sbb
and
push
movsb
and
adc
cmp
xor
std
jg
mov
sbbl
mov
xchg
out
mov
imul
add
test
fnstcw
inc
jo
jns
pop
pushf
call
lds
mov
pop
pop
cmp
add
into
ss
jno
mov
push
inc
in
loope
dec
into
jnp
iret
jae
aam
mov
filds
mov
icebp
cltd
xchg
xchg
mov
test
push
jge
insb
xchg
xor
outsb
pop
xchg
push
es
out
mov
movsl
add
iret
divl
je
pop
sbb
xor
dec
mov
fistpl
insl
xchg
xchg
test
stc
jno
mov
inc
sbb
push
and
jge
xchg
lahf
xchg
xchg
jmp
ret
cmpsl
add
add
mov
xchg
mov
push
pop
push
jmp
push
or
arpl
in
dec
mov
test
xor
xor
and
or
sub
jne
inc
in
outsl
mov
iret
aam
out
mov
xor
je
push
int3
mov
xchg
shlb
fwait
xchg
sti
push
hlt
rcr
aad
cmpb
lea
mov
pop
pop
les
shl
jge
xlat
push
stc
fs
push
jg
sahf
push
scas
addr16
jne
pusha
sahf
iret
cmpsb
lds
ja
imul
push
xor
sub
cmp
das
shll
cmp
test
cmp
mov
rorl
inc
mov
shrl
inc
mov
mov
mov
mov
rcr
fisubl
popa
inc
andb
loope
sbb
data16
push
push
xchg
movsl
add
adc
stos
movsl
mov
ret
in
mov
pusha
add
add
shlb
inc
ja
filds
add
clc
dec
mov
inc
stos
iret
xlat
inc
pop
sub
adc
jg
jno
lret
fldcw
xchg
jle
cmpsb
cmp
push
sahf
add
outsb
dec
jp
sbb
xor
push
push
or
ja
rcrb
jg
adc
int3
in
in
fs
mov
lret
dec
fwait
outsb
in
incl
jo
jnp
push
dec
int
loop
sahf
xor
mov
sub
js
inc
popa
gs
sub
sub
scas
outsl
dec
sbb
mov
lds
insl
push
adc
push
adc
cld
or
mov
call
jecxz
fs
cli
lds
push
repz
arpl
adc
jnp
push
jge
out
jle
jbe
push
mov
test
add
mov
ret
and
ja
cltd
xchg
cli
jle
in
ret
enter
loope
lcall
popa
or
mov
pavgb
jne
push
push
push
insb
out
cli
push
xor
scas
ffree
pop
sub
or
cmp
push
cld
test
repz
xchg
cld
xchg
inc
movsl
lcall
inc
adc
aad
in
cld
dec
or
xchg
pop
imul
lods
adc
adc
sahf
and
test
cld
adc
xchg
iret
repz
and
out
sbb
adc
in
repz
dec
lret
xchg
fbld
xchg
cmpsl
push
inc
push
les
sbb
fistpll
pusha
loopne
adc
or
int3
sbb
data16
pusha
xor
popa
push
lds
je
aad
dec
loope
lret
faddl
inc
adc
nop
sub
xor
sti
adcb
mov
sahf
push
xlat
gs
or
dec
jne
inc
mov
dec
ret
stc
cltd
lcall
shlb
xchg
xor
inc
aam
push
xor
lea
and
mov
add
cmpsb
dec
ss
leave
jnp
test
sub
cmc
sub
inc
xor
mov
clc
inc
inc
xchg
mov
mov
cmpb
sahf
loopne
outsl
inc
pop
jl
mov
xchg
in
loop
pop
sbb
fdivrs
ror
sub
mov
in
call
shll
jle
fisubl
mov
xor
test
cli
mov
mov
xor
aad
outsl
cli
testb
inc
daa
fsubl
les
jae
movaps
pusha
insl
push
xchg
inc
push
ja
rolb
pop
adc
mov
push
push
fwait
adc
pop
cli
fs
scas
push
pop
dec
and
out
ret
sub
in
fstl
jb
mov
mov
ljmp
mov
gs
outsb
fsubs
jg
dec
jbe
mov
push
cmp
sbb
in
ss
shll
xor
pop
inc
push
test
mov
cmp
sbb
mov
xchg
jle
addr16
outsl
sub
push
rolb
daa
push
or
imul
xlat
call
jmp
shlb
inc
cld
lret
xchg
icebp
mov
sbb
or
sub
jmp
xchg
bound
fs
sarl
inc
fildll
cmp
xor
aas
fistl
cmc
and
aas
adc
add
lds
insb
jb
orl
repnz
sub
and
or
xchg
iret
pop
push
orb
push
dec
rcr
and
mov
fidivl
add
out
scas
sub
pushf
adc
movsb
idivl
into
movsb
call
dec
jns
push
imull
or
dec
lret
loopne
dec
test
shll
fdivs
fistps
mov
in
imul
sarb
ds
xchg
dec
out
aaa
rep
ljmp
push
pop
jl
cmpsb
sarb
icebp
inc
aad
jp
mov
outsb
jg
dec
jl
negl
jne
out
outsb
stc
fnstcw
pop
leave
out
and
out
push
dec
repz
rorb
rolb
push
pop
sarb
cmpsl
loope
mov
sub
lret
sysexit
in
or
push
rolb
lods
aad
fucomi
scas
test
cld
cmp
pop
inc
mov
xchg
xchg
rcll
scas
in
jg
int3
out
sub
mov
jmp
sub
cmp
out
xor
rcll
rcr
push
incb
add
adc
rcrl
inc
jp
xor
dec
inc
popf
and
fcmovu
dec
push
aad
mov
pop
fdivrs
paddq
inc
inc
popf
mov
dec
cmpsl
mov
inc
mov
xor
dec
pop
out
xlat
pop
pusha
jl
mov
or
pop
pushf
fs
xchg
testb
test
sub
xor
dec
and
mov
notb
push
xchg
cmpsl
lret
xchg
xlat
mov
cmp
jmp
pop
mov
flds
sbb
adc
jp
popa
shll
or
and
jecxz
add
cmp
fdivrs
int3
std
mov
rcrl
inc
push
fwait
xchg
push
add
stc
adc
mov
jecxz
das
push
movsb
xor
iret
shlb
push
sahf
mov
pop
out
or
pop
inc
add
push
in
or
mov
pop
adc
push
cmp
addr16
ret
pusha
jae
cmp
mov
sub
push
rcrl
pop
xchg
into
jecxz
push
xor
fbld
inc
jb
or
inc
in
dec
outsb
jge
fcmovnu
std
adc
jge
addr16
xor
xor
sbb
shrl
fwait
mov
pusha
ret
daa
and
test
int3
jmp
icebp
add
mov
testb
data16
lcall
scas
xchg
inc
movsb
movsl
into
sub
mov
adc
dec
ja
add
xlat
cld
jbe
pusha
pop
add
fistps
inc
insb
rdpkru
mov
mov
sti
in
inc
ror
add
outsb
mov
hlt
add
fildl
cld
inc
xchg
loopne
dec
repnz
into
adc
loope
push
les
mov
test
push
data16
or
inc
and
popf
fildll
dec
mov
mov
pop
loopne
das
push
insl
or
adc
jg
inc
mov
mov
mov
fcoms
cmpsl
adc
div
xorb
imul
jb
xorl
dec
js
xchg
push
or
pop
and
adc
les
push
xchg
into
sub
xchg
cmp
add
sbb
push
cld
add
dec
lahf
ss
hlt
loop
mov
pop
subb
mov
xor
pop
shll
adc
jns
mov
inc
insl
rcr
arpl
inc
or
fcmovb
jmp
xor
pop
mov
es
add
mov
sahf
subb
inc
in
int3
call
hlt
sub
shrb
and
mov
neg
addb
mov
je
fcompl
mov
into
fdivrl
xchg
fstps
mov
pop
cmp
mov
xor
mov
ljmp
xchg
lods
adc
popfw
loopne
jne
repz
fs
mov
jbe
or
and
dec
xor
cwtl
in
rclb
test
adc
pop
jg
testl
mov
xorb
sbb
push
ja
popf
mov
jnp
mov
imul
xchg
shl
fidivrl
mov
in
fbstp
xchg
pusha
mov
ss
fdivl
jb
imul
into
shlb
test
adc
imul
aad
mov
clc
sub
cmp
in
dec
inc
aam
in
pusha
mov
into
jbe
mov
cmp
or
mov
push
pop
aaa
and
push
stc
cmp
xchg
dec
push
and
and
ds
xchg
dec
cmpsl
mov
dec
mov
idivb
out
dec
shll
scas
jnp
sti
jl
aam
das
push
pshufw
scas
jae
pop
fld
mov
jb
add
jg
lahf
rcrb
movsl
clc
test
ret
cmp
and
jecxz
sbb
add
ret
mov
daa
cwtl
std
imul
or
pop
ss
insl
call
lock
cmp
pop
xorb
imul
loopne
int
cmp
push
cs
fistpl
and
divb
jmp
lock
sbb
idiv
and
add
lahf
cmpsb
lret
or
add
push
imul
sbb
cmc
nop
push
data16
std
testb
cwtl
loope
addl
jecxz
out
push
push
pop
lret
push
jne
js
adc
or
es
cltd
jmp
into
jge
pop
pop
testb
cmp
jno
andl
xchg
roll
or
lock
mov
lock
sbb
or
cmc
pushf
sub
cltd
push
cmp
test
fsts
pusha
mov
mov
loop
mov
mov
sub
pop
adc
and
adc
mov
fwait
xchg
inc
push
repnz
jae
dec
and
sub
dec
cmpb
negl
jle
test
rcrl
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
notl
push
sub
push
sub
mov
mov
mov
inc
mov
or
movl
movzbl
adc
movl
adc
mov
add
mov
adcl
sub
adc
mov
xorl
xorl
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
pushl
call
cmpl
jb
mov
sub
mov
orl
mov
andl
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
mov
xorl
orl
mov
andl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
mov
orl
add
mov
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
mov
mov
neg
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
adcl
movl
subl
lea
movzbl
sbb
mov
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
jmp
lea
add
mov
xor
mov
mov
mov
sub
xor
mov
adc
mov
adcl
xor
orl
add
xorl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
mov
mov
add
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
or
dec
mov
jmp
push
sub
mov
mov
mov
mov
mov
adc
mov
xor
and
mov
add
movl
cmp
movl
je
notl
mov
jmp
mov
xorl
xor
push
add
xor
xor
sub
mov
add
movl
push
adc
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
push
pushl
call
jmp
mov
xor
subl
xor
movl
cmp
movl
jne
movl
cmp
jne
push
movl
jmp
mov
xor
adcl
add
subl
xor
add
movl
adc
subl
xor
orl
xor
movl
cmp
movl
jne
cmp
movl
jne
addl
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
xor
xor
dec
mov
jmp
xor
add
mov
subl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
jmp
mov
movl
xor
add
adcl
imul
mov
orl
xor
add
movl
cmp
mov
je
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
orl
add
and
mov
mov
xor
add
imul
sbbl
mov
mov
mov
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
jmp
pop
push
xchg
dec
add
rcll
cwtl
sbb
fstps
lods
int3
adc
inc
sub
inc
sti
fwait
loope
repz
dec
test
data16
loope
insb
push
dec
stos
cmpl
xchg
fnstenv
nop
mov
mov
xchg
fldenv
jl
shll
mov
dec
xor
mov
cli
inc
jb
adc
stc
push
outsb
lret
pusha
add
scas
mov
mov
insl
bound
inc
movsb
std
sub
mov
rcr
mov
pop
out
shll
mov
mov
xchg
sub
sbb
mov
movsb
outsb
jo
dec
pop
xchg
dec
mov
cmpb
mov
xchg
test
or
mov
ds
push
mov
mov
divl
sub
jae
sbb
push
bound
sub
xor
shrb
ret
testb
mov
push
adc
loop
mov
xor
add
xor
mov
push
adc
js
ljmp
jae
rclb
loop
xor
pop
sbb
and
faddl
shr
mov
dec
ret
cmp
inc
ret
pop
lcall
imul
sub
repnz
and
lock
ja
test
pop
aad
mov
pop
push
add
outsl
xchg
stos
pop
sub
mov
mov
ret
jb
cmp
sbb
xchg
test
push
mov
jge
dec
inc
fldl
jl
push
test
sbb
mov
inc
out
outsl
mov
dec
fcomip
xchg
in
push
addl
pop
es
dec
loope
fnstcw
mov
call
mov
inc
jae
pop
imul
ficoms
or
cmp
xchg
les
cltd
adc
mov
jmp
pop
stc
adc
ljmp
or
sub
inc
fimuls
xor
aam
mov
cmp
fstp
lahf
mov
ja
xor
jmp
sbb
jmp
xchg
inc
push
or
cld
inc
incl
lcall
cmp
sbb
fildl
lret
xchg
adc
dec
push
sti
push
je
pop
js
fldenv
and
popf
xor
test
pop
imul
loope
inc
xchg
pop
or
xchg
testl
outsl
mov
sahf
fnsave
adc
pop
insb
lahf
xchg
daa
ror
fidivrs
dec
imulb
xor
jnp
lds
pop
hlt
les
sahf
es
loopne
sahf
sub
repz
mov
sbb
xchg
cmpsl
sbb
add
mov
hlt
inc
out
mov
pop
jno
mov
jne
cmpl
or
and
cmp
sarb
cmpsb
mov
mov
push
xchg
js
repnz
lret
pop
int3
subl
cmp
xchg
stc
lret
inc
sbb
rorl
mov
int
leave
lds
inc
out
movsb
push
out
lea
adc
add
out
push
and
fnstsw
xchg
sbb
pop
mov
shll
mov
jp
mov
pushf
and
sbb
rclb
shr
rcrb
loope
enter
pusha
cmpsb
icebp
mov
inc
shrl
dec
dec
icebp
jb
add
hlt
add
inc
stos
and
fsubl
mov
cli
cmp
frstor
fidivrs
pop
lsl
repnz
ds
jnp
sbb
fadds
mov
in
insl
mov
cmp
orl
dec
adc
pop
push
mov
jge
mov
clc
jnp
addl
dec
enter
push
mov
lret
fldl
aas
inc
ljmp
sbb
loop
fldcw
bound
aas
mov
lods
insl
popa
sub
fnsave
loopne
out
or
cs
jecxz
call
dec
jl
mov
pop
inc
repnz
sub
lcall
stc
dec
and
cmpsb
aam
je
sbb
cmp
lods
sbb
add
in
cmp
loopne
stc
mov
mov
cmp
push
adc
loope
cltd
mov
dec
outsl
sub
cs
mov
cmp
mov
icebp
xchg
xchg
pop
cmp
aad
shll
lret
jnp
pushf
es
jne
and
and
push
mulb
mov
add
rcrl
xchg
mov
popa
xor
pop
mov
sti
out
push
cwtl
ljmp
adc
out
push
inc
je
iret
mov
iret
xchg
js
mov
cltd
push
data16
or
jno
imul
addb
mov
dec
push
dec
pushf
fimuls
int3
addr16
or
and
xchg
sbb
jmp
les
pusha
adc
shrl
mov
jbe
repz
out
fwait
sbb
or
adc
mov
mov
and
push
clc
sub
mov
jae
mov
mov
fwait
jmp
push
or
xchg
pop
xor
xchg
mov
mov
in
popf
into
jmp
hlt
mull
fists
jb
lahf
sub
adc
rcrl
mov
stc
gs
mov
xor
dec
mov
out
repnz
jge
sti
lahf
mov
xchg
pushf
lods
lcall
xchg
jo
mov
pop
cmp
test
xor
setb
xchg
mov
fstpt
stc
insl
pop
push
jl
icebp
shr
insl
rol
xchg
fidivrl
lret
insb
fsubrl
sbbl
repnz
or
stos
pop
lret
fstpl
mov
les
adc
xor
stc
ret
mov
ret
ja
outsb
or
fxch
and
add
call
xor
aaa
test
xor
mov
dec
loop
adc
in
faddl
xor
pushf
cmp
dec
add
sub
push
mov
in
mov
js
aas
dec
cwtl
in
test
sub
les
call
sub
jne
fstl
sbb
or
cmp
mov
sbb
xchg
cli
lock
lock
and
pop
fdivs
out
pop
pushf
push
das
daa
clc
int
add
push
call
fwait
jl
fistpll
aad
clc
inc
mull
mov
push
xor
dec
inc
pushf
pop
imul
or
dec
jle
movsb
and
cmpsb
xor
lret
scas
inc
mov
leave
pushf
xor
clc
add
mov
pop
cmp
sub
ret
sahf
daa
cmp
xchg
iret
mov
nop
out
bound
out
rol
xchg
mov
dec
popa
loop
enter
adc
mov
lods
mov
xlat
xchg
je
mov
mov
stos
add
pop
imul
cmp
repnz
xchg
mov
xlat
pop
cmp
flds
xor
rcrb
repz
out
insb
and
and
sbb
and
out
loop
andb
cs
rcll
mov
shll
push
add
pop
outsl
arpl
sub
or
lods
fnsave
shrb
pop
scas
mov
pop
dec
sti
sub
jb
mov
push
cmc
pop
mov
sub
in
pop
lret
push
lock
into
iret
les
and
pop
test
xor
stos
pop
mov
add
mov
xor
mov
mov
popa
sbb
sub
mov
call
or
jecxz
jl
fadd
icebp
notb
int3
imul
daa
push
mov
pushf
mov
cmp
dec
add
sbb
xchg
cmc
jae
jmp
test
inc
repnz
dec
fwait
dec
lret
lds
cmp
arpl
pop
xchg
gs
insb
mov
jns
in
int3
dec
dec
inc
cmp
push
jmp
test
std
adc
in
adc
imul
pop
out
rclb
dec
int
andb
jbe
sbb
mov
sbb
in
mov
jbe
cld
pusha
inc
dec
mov
pop
add
lods
sbb
enter
cltd
in
jp
cld
fstpl
subb
ret
call
push
xor
mov
cs
mov
xchg
popf
mov
mov
ret
in
sbbb
daa
dec
shll
or
pop
dec
inc
push
scas
sbb
mov
gs
les
sahf
mov
mov
gs
inc
add
test
xor
fimuls
mov
outsb
mov
jo
cmc
mov
sahf
xchg
pmaxsw
idivl
rcrl
rcr
add
gs
jnp
mov
mov
ja
iret
fwait
and
xchg
rorl
mov
sbb
sub
push
lahf
fxch
sbb
in
and
jge
add
xlat
cmovp
fwait
xchg
lds
push
cmpsl
fcmovb
icebp
mov
mov
xchg
scas
movsl
pop
push
xchg
jno
or
mov
jns
mov
mov
dec
add
faddl
clc
push
add
adc
mov
dec
and
push
or
xchg
cmc
mull
adc
lahf
bound
pushl
das
mov
sbbb
dec
sbb
out
jl
pop
lahf
movsl
or
es
mov
add
into
in
in
mov
repnz
push
fistl
push
inc
gs
mov
lds
iret
or
clc
xor
dec
popa
out
cmp
push
sbb
inc
mov
imul
mov
scas
mov
repz
lock
xor
outsb
sub
cs
mov
mov
dec
enter
pminub
scas
out
sub
jne
shlb
xlat
outsb
pop
stc
push
ss
jb
xor
ja
aam
aas
push
ss
stc
dec
jmp
adcb
dec
pop
in
scas
out
add
mov
add
rep
out
push
out
in
xor
iret
push
out
inc
fistps
leave
js
sahf
sbb
adc
scas
fwait
rolb
aam
add
xor
lods
sbb
mov
mov
mov
dec
cmp
inc
inc
fdivr
clc
mov
fldl
std
ds
dec
dec
xchg
ret
jne
fiadds
adc
xor
jge
or
dec
mov
dec
pop
adc
dec
push
ja
sub
adc
add
sub
adc
mov
dec
bound
mov
xor
mov
aaa
fsubs
pushf
push
cld
push
and
call
mov
cmpsl
sbb
adc
push
push
leave
scas
mov
imul
pop
cmp
jno
and
adc
push
push
jp
or
mov
jmp
or
scas
out
sub
and
jno
inc
dec
push
fidivs
addr16
jns
int3
stos
cmpsb
xor
sarl
cmc
test
and
sbb
andb
mov
inc
push
pusha
iret
xchg
inc
call
dec
fldt
jne
punpckhdq
mov
in
xor
outsb
push
mov
mov
fisubl
mov
sbb
decb
adc
test
add
dec
mov
popf
adc
add
add
jne
mov
hlt
mov
cmp
xchg
dec
dec
xor
and
stc
xchg
push
pop
inc
cwtl
dec
or
shl
stos
movsb
lock
jo
sub
pop
mov
ret
xchg
sub
repz
aad
aas
mov
lret
push
shl
or
or
bound
jecxz
jg
pop
ljmp
mov
add
jmp
mov
or
and
dec
in
mov
add
imul
jmp
outsl
mov
pop
imull
cmp
aad
sub
lahf
arpl
out
add
inc
mov
fistl
mov
xchg
lcall
push
cs
xor
out
enter
push
add
xor
cmpsb
imul
shl
pusha
mov
inc
dec
in
and
and
jmp
sahf
sub
jmp
fsubrp
mov
or
mov
sbb
jbe
fistpll
adc
jl
gs
cmp
es
sbb
cmp
into
rorl
repnz
lds
rorl
movsb
fnsave
ljmp
daa
dec
push
enter
xor
jle
xchg
outsb
imul
hlt
insl
cmc
jl
adc
sbb
xchg
mov
loope
fcmovbe
dec
push
out
mov
gs
mov
sahf
push
mov
jns
push
jge
mov
mov
inc
aaa
data16
aam
insb
mov
aad
rcll
popf
cwtl
mov
pop
lea
decl
in
sti
je
jp
cwtl
xchg
aas
jbe
rclb
cli
out
push
hlt
sub
je
or
repz
xor
ret
aaa
adc
mov
or
pop
mov
pop
and
or
ds
stos
mov
sarb
fwait
scas
insb
add
mov
dec
sub
pop
outsl
dec
pop
xor
popa
ljmp
arpl
insb
adc
push
xchg
je
hlt
pop
imul
loop
out
xor
push
leave
and
mov
push
data16
cmpsl
shlb
push
mov
sbb
cltd
sbb
jmp
dec
cmp
arpl
dec
add
dec
lods
ljmp
and
shlb
cmp
filds
mov
add
mov
repnz
mov
das
and
sbb
test
out
dec
mov
ret
loop
or
inc
and
and
pusha
aam
or
sbb
movsl
in
push
fldcw
repz
testl
or
push
pushf
sbb
data16
pop
cmp
aas
mov
pop
addb
aaa
in
stos
jne
popf
pop
lock
cli
mov
nop
xor
adcb
pop
mov
push
outsl
in
jp
xor
sbb
stos
les
add
push
ljmp
sub
inc
fsubrs
cmc
fidivrl
popf
call
ja
stos
mov
sbb
jns
fwait
cmc
in
aad
bound
sbb
pop
ret
int3
sahf
or
jecxz
movswl
mov
fldcw
or
fcmovne
or
xor
fisubrs
cld
adc
mov
inc
adc
mov
lret
mov
dec
xor
push
hlt
pop
subl
scas
scas
fldt
push
push
add
dec
lods
lea
xchg
mov
std
rcrl
pusha
mov
aam
xchg
xor
sub
mov
faddl
push
fdivl
test
pop
int3
enter
insb
aas
jmp
mov
xchg
lods
hlt
jmp
sbb
jp
mov
pop
cmc
dec
mov
sbb
jge
xchg
mov
sub
out
ret
xor
push
testl
jl
movq
addr16
or
mov
shlb
jo
and
insb
sbb
test
add
aas
xor
mov
sub
insb
xchg
fmuls
jg
xchg
rcll
in
mov
mov
and
movsb
adc
mov
loopw
repnz
lods
data16
mov
hlt
pop
ret
aad
jns
mov
mov
and
dec
rcr
fs
cltd
adc
cmp
xchg
mov
mov
sti
mov
push
pusha
std
sub
test
jg
inc
xchg
mov
or
inc
xor
imul
shl
fstl
mov
xlat
fcmovnb
jnp
idivl
sub
xchg
loopne
sahf
fcomi
pop
xchg
sub
cwtl
push
dec
xchg
sbb
cld
mov
leave
repnz
xchg
sub
pop
mov
out
or
call
sahf
cs
pop
push
dec
cmpsl
push
rolb
xor
shl
lods
mov
jg
fsubr
pop
test
ficompl
dec
pop
jmp
daa
sub
inc
fists
dec
xlat
dec
sub
cld
sub
cld
mov
loopne
add
adc
sbb
jb
cmp
cmp
lock
jecxz
mov
push
pop
in
in
jle
dec
xchg
popf
out
mov
pusha
jns
scas
pop
shrl
sbb
fs
cmp
shll
inc
push
inc
push
adc
or
sbb
and
jle
sub
mov
push
in
xor
sub
mov
arpl
push
xchg
xlat
push
and
out
sub
out
sti
test
or
push
inc
insb
mov
cmpb
pusha
outsl
mov
dec
dec
push
stos
adc
enter
inc
pop
cmp
test
cmp
scas
sub
stos
stc
mov
std
popa
pop
mov
mov
sbbl
push
mov
hlt
out
nop
jne
les
call
and
leave
mov
testl
shll
inc
sbb
or
add
or
xor
jg
in
aam
mov
fcomip
aas
mov
dec
sbb
popf
push
push
xchg
pop
cli
cmp
cmp
inc
test
popf
je
lods
mov
dec
repz
cmpsl
retw
mov
sub
sbb
enter
xchg
scas
mov
and
xor
mov
xchg
inc
test
rol
lret
jne
outsb
or
int
push
lods
ret
xchg
sub
pop
js
mov
mov
ficoml
clc
push
mov
outsl
aam
adc
fsts
adc
fbld
aas
imul
ds
in
inc
pop
mov
cld
cmp
int3
jbe
add
inc
insl
or
xlat
mov
add
int3
jne
adc
sbb
js
adc
xchg
mov
jno
pop
jmp
cmpsb
ljmp
imul
xchg
sbb
in
test
and
mov
inc
out
mov
push
out
dec
cmpl
ret
das
aas
mov
mov
add
gs
xor
xor
and
mov
pop
adc
std
mov
mov
pushl
mov
mov
mov
and
andb
sbb
pushf
stos
cmp
insb
jp
mov
mov
jne
in
cmp
arpl
and
sbb
sbb
jp
std
or
xchg
mov
adc
pushf
push
ds
cli
xabort
repz
cmpl
cmp
adc
cmp
in
mulb
inc
enter
andb
int
add
inc
cltd
lods
pushf
inc
pop
test
pop
push
inc
mov
test
mov
push
ret
and
repz
addr16
mov
sub
inc
inc
add
andl
int3
fistpl
pop
xor
cmpsl
push
and
sbb
adc
negl
into
sub
or
cld
cmp
test
fldcw
dec
jb
pushf
aam
xchg
jno
addr16
push
lea
pop
orb
inc
push
scas
mov
shlb
aad
pop
inc
push
incb
cmovg
add
and
call
mov
aad
fsubl
xor
fwait
add
add
roll
arpl
and
mov
sbb
jecxz
addl
dec
divb
cltd
inc
loopne
test
cwtl
mov
test
jbe
lret
mov
sbb
mov
add
in
lods
aam
lret
and
js
xor
pop
mov
jecxz
push
ljmp
xorl
adc
pop
cmp
lahf
lods
lahf
pop
mov
shrb
sbb
shrb
mov
pusha
ljmp
fildl
push
adc
dec
sbb
and
push
jmp
lcall
loopne
std
inc
mov
and
mov
sbb
fbld
add
hlt
test
aad
sbb
std
repz
add
fidivrs
mov
jnp
push
or
lret
fs
psadbw
icebp
sti
mov
mov
enter
outsb
fs
push
cmp
mov
inc
dec
pushf
dec
fisttps
and
loop
jmp
cmp
xchg
shrb
pop
pop
cmpsb
fiaddl
pop
out
adc
hlt
sub
roll
cmp
leave
icebp
scas
das
out
sbb
inc
outsb
cltd
and
push
mov
flds
dec
mov
fs
out
insl
or
cmp
pushf
imul
inc
add
cmpsl
aam
dec
aam
sub
aam
jge
sbb
cmp
push
test
or
je
or
lods
inc
push
and
dec
out
jno
mov
adc
mov
ret
and
lods
fldenv
mov
lret
pop
adc
or
test
addr16
repnz
scas
insl
adc
movsb
sbb
aam
adc
movsb
pusha
mov
xchg
lret
and
stos
outsb
pop
xor
lock
lcall
cltd
cmp
or
cmc
out
adc
sub
pop
mov
insb
daa
adc
mov
adc
mov
add
aad
push
push
add
mov
pop
jl
sbb
ds
pushf
insb
scas
movsb
mov
jecxz
and
dec
adc
sti
movsb
sub
jle,pn
or
imul
sub
push
lods
lods
cmp
mov
cmpsb
fwait
mov
mov
cli
call
fbld
adc
jae
lods
mov
xor
adc
mov
xchg
mov
lds
ror
mov
outsb
iret
cmp
jmp
xor
sarl
jb
outsl
adcl
lods
fwait
mov
mov
xorl
jae
loopne
push
in
xchg
imul
mov
loop
push
cltd
sar
cmp
js
cmpsl
sbb
xchg
fstps
pushl
jp
sbb
xlat
fists
test
dec
xor
in
loope
or
or
mov
mov
fidivrl
lea
test
jnp
div
inc
add
aam
jo
dec
dec
inc
hlt
mov
mov
test
sub
insb
sbb
sbb
xor
and
mov
cmpsb
addr16
scas
into
stos
push
stos
mov
in
gs
ss
mov
std
sub
push
enter
fisttpll
lret
adc
scas
jg
cltd
dec
push
cwtl
cmp
pop
out
jmp
and
ficoms
repnz
xor
loopne
inc
jl
leave
pop
xchg
in
dec
xor
cmp
push
jecxz
fs
mov
hlt
lods
inc
xchg
mov
cmp
insb
adc
scas
mov
subl
cmc
mov
faddl
jg
cmp
add
jecxz
js
pop
push
daa
and
mov
gs
pop
jp
mov
pop
sbbb
mov
inc
xlat
lds
sub
lods
je
imul
shlb
ror
xchg
popa
lcall
in
mov
aas
inc
rorb
cmp
das
jo
pop
jl
aaa
sub
in
es
xchg
imul
pop
adc
and
mov
test
stos
push
or
pop
jmp
lret
mov
and
jl
dec
out
outsl
test
movsl
xchg
shll
mov
shl
iret
movsb
stc
icebp
and
cmp
sbb
mov
imul
scas
and
sbb
scas
out
cmp
pusha
or
xlat
pop
and
jl
or
inc
fs
mov
in
nop
xchg
mov
sub
pop
aas
pop
xchg
pop
rorl
inc
or
out
and
sbbb
fs
jnp
mov
out
clc
add
in
add
and
xchg
xor
ja
hlt
scas
cmpsl
jne
lock
mov
test
ja
bndstx
lds
dec
cld
and
bnd
notl
jmp
pop
push
in
mov
jo
cmpsl
aad
movsl
cmp
jge
lds
lcall
mov
xchg
xchg
cmp
aad
inc
jo
aam
iret
mov
inc
stos
and
fidivrs
pusha
out
and
call
mov
adcb
pop
ror
and
fsubrl
mov
jp
sbbb
jle
mov
es
subl
std
cmp
or
mov
fcmovne
in
cmp
sub
fcomp
jnp
jb
addb
fistl
sbbb
movsl
out
or
xor
add
sarb
mov
sub
mov
xchg
movsb
enter
pop
inc
shl
repnz
jg
lcall
xor
shlb
inc
movsl
adc
sbb
add
mov
and
aaa
mov
cli
pop
scas
ret
cmp
dec
adcl
mov
repnz
mov
dec
mov
pop
or
cmp
in
xor
cmc
mov
xchg
cld
mov
sarl
xchg
sub
sbb
aam
cmp
dec
fnsave
ja
adc
cmp
lods
sbb
cmpsb
sbb
icebp
cmp
lods
or
xor
push
jne
es
mov
imul
add
sbb
mov
je
imul
lret
fstl
call
icebp
mov
decb
push
aaa
inc
loopne
negl
out
mulb
call
sub
cmc
push
push
ret
jne
jns
int
adc
adc
pop
std
pushf
dec
pushf
jle
ret
fdivl
shl
jne
adc
adc
lods
leave
fsts
bound
jle
cwtl
and
out
sub
dec
stc
in
cli
and
xor
stos
dec
xchg
or
xchg
mov
mov
mull
xchg
mov
cmpsb
adc
cli
add
in
pop
test
mov
mov
add
out
lret
push
das
jge
mov
mov
fildll
push
push
inc
mov
mov
mov
outsb
pop
ss
lock
jge
out
fists
and
loop
mov
out
cmpsb
fdivl
dec
pop
cs
call
fwait
push
xor
es
call
add
test
mov
cs
and
stc
jmp
or
ret
fs
jb
data16
and
in
adc
test
jmp
fistl
mov
sub
out
mov
test
lods
stos
mov
popa
imul
imul
sbb
push
mov
movsb
nop
int3
add
adc
inc
push
xlat
dec
jp
cmpsl
das
jnp
push
out
dec
xor
xor
sbb
sbb
mov
dec
mov
mov
mov
mov
cltd
jmp
dec
ror
mov
outsb
paddw
or
in
push
push
ficoml
imul
inc
punpckhbw
or
mov
rol
sbb
mov
lds
inc
cmp
sbb
clc
cmpsl
jge
ret
enter
sbb
in
add
push
jne
adc
pop
nopl
adc
pop
dec
mov
or
pop
xchg
lea
ljmp
cmp
mov
lock
mov
ljmp
and
dec
test
mov
jnp
mov
pop
push
or
ja
into
test
jle
std
test
jecxz
popa
inc
arpl
hlt
lcall
jg
push
xchg
stos
jbe
jno
pop
mov
xor
mov
test
inc
jbe
cmp
xchg
popa
or
sbb
movd
fwait
cs
stos
pop
add
sahf
cmp
jmp
rcrb
cli
sbb
les
xchg
cmp
xor
mov
bnd
mov
pop
mov
inc
and
and
mull
movsl
mov
jne
fistpl
inc
fcompl
sub
fs
mov
movl
xor
pop
push
mov
pop
xor
lret
jmp
addb
sahf
shlb
push
pop
testl
mull
negb
sbb
test
push
and
pop
fiadds
mov
cmp
jp
outsl
popa
sbb
mov
rclb
sbb
test
add
aaa
jle
scas
clc
dec
or
adc
adcb
pop
xor
mov
mov
dec
push
lock
jb
ss
arpl
or
sarb
lret
xor
jbe
xchg
sbb
xchg
jl
das
pop
ficomps
movsb
stos
cmpsl
jo
lock
loopne
ja
xor
fimull
or
es
mov
in
pop
sub
lahf
subb
dec
stc
pop
or
in
jnp
bound
xchg
xchg
and
js
fldenv
stos
adc
jno
lock
jb
iret
cmp
cwtl
movsb
fs
aam
and
fiaddl
sarl
test
cmp
jbe
repz
mov
and
adc
mov
cmpsb
lods
pop
popa
loop
popa
push
std
and
lea
mov
insl
mov
jne
inc
lret
subb
lods
and
mov
fistpll
jecxz
sahf
xchg
lock
mov
push
cmp
sbb
or
ret
sahf
in
inc
cmp
adc
ds
inc
ljmp
push
jl
lahf
pop
pop
lods
xchg
ret
pusha
mov
mov
mov
ret
mov
cmp
xchg
dec
mov
loop
ret
push
add
mov
mov
aas
stc
addr16
leave
or
and
dec
aad
add
xor
imul
xchg
push
ret
gs
pop
movsl
pop
movl
xchg
fwait
daa
mov
cmp
jbe
jbe
and
push
loope
mov
dec
and
sbb
pop
out
cmp
aas
fisttpll
cmp
je
ja
mov
mov
pop
mov
adc
fdivr
pop
pop
adc
out
cmp
inc
inc
mov
bound
ret
ret
stos
leave
lss
xor
adc
and
lods
jle
lock
hlt
mov
icebp
roll
scas
push
iret
lods
add
mov
sbbb
aas
repz
mov
movsl
mov
bound
jecxz
lea
xchg
fwait
jle
jb
sarl
sarb
shll
dec
lret
and
icebp
lea
sub
push
jmp
mov
loop
scas
pop
jl
push
xchg
aas
jbe
pushf
jecxz
inc
cmp
stos
rcll
aaa
fmuls
in
ds
rcll
aam
popa
xlat
popa
stc
or
daa
cmc
incb
pop
lret
mov
jle
ret
icebp
sbb
int
mov
cwtl
or
aas
mov
adc
mov
jnp
fcmovnbe
pop
in
pop
sub
sbb
lods
cmp
ret
adc
pop
adc
mov
jb
sub
or
push
xor
mov
add
mov
imulb
in
jne
sub
cmp
rcrl
pop
test
sbb
imul
adc
jns
cltd
xchg
pop
mov
arpl
std
jge
lret
in
or
mov
mov
push
mov
mov
ljmp
aam
scas
std
or
mov
shlb
shrl
mov
adc
test
and
dec
test
sti
ficoml
or
inc
in
aad
sub
push
mov
mov
in
lea
lret
je
mov
mov
fdecstp
cli
stos
dec
mov
xor
mov
and
cmp
in
ss
sbb
dec
xchg
sbb
clc
add
xlat
mov
les
mov
xor
nop
call
cmpsl
es
insb
int
mov
or
outsb
je
xchg
sbb
in
add
or
pop
sbb
lods
aad
cmpb
outsl
push
xor
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
jmp
test
lock
orb
enter
aas
das
mov
fstps
mov
push
bound
inc
sbbl
out
add
add
or
sub
les
jmp
jae
adc
cs
xchg
hlt
rclb
mov
cmp
inc
or
mov
test
dec
inc
loope
sti
les
or
jecxz
xchg
rol
jmp
xor
sahf
aas
in
push
in
aaa
int
lcall
sbb
test
jne
aad
lahf
lock
dec
adc
arpl
insl
cs
push
icebp
mov
rcl
pop
pop
cltd
out
sub
sbb
xor
repz
aam
sub
mov
jge
dec
addb
int3
or
mov
jns
lret
pop
adc
repnz
add
sbb
fisubrs
push
xor
jl
mov
daa
movsl
pop
pop
mov
sti
mov
mov
and
mov
lret
popf
xor
xor
and
mov
rclb
mov
inc
lar
enter
mov
jne
mov
inc
add
jl
test
xor
outsl
aas
inc
inc
adc
rcl
das
test
cmp
sahf
or
adcb
outsb
fstl
dec
fldl
and
repnz
out
cmpsl
xchg
jmp
xor
fdivrl
lret
xchg
add
sarb
dec
cwtl
mov
incl
ss
jo
jl
sbb
scas
dec
cli
pop
and
push
lea
adc
mov
cwtl
adc
out
ret
mov
sbb
xchg
cmpsb
das
or
mov
test
jno
sub
in
daa
sti
dec
adc
loope
es
pusha
push
xor
fcmovne
int
inc
lahf
loop
incb
sub
mov
sub
in
add
push
mov
in
pop
dec
jb
xor
jne
dec
mov
jge
inc
cmpsl
andl
ret
aam
push
push
outsb
in
clc
gs
mov
cwtl
pop
mov
jb
inc
pop
cli
je
and
push
mov
stc
push
popf
jmp
out
fmuls
push
adc
repnz
jae
and
arpl
cmpsl
jbe
fs
dec
dec
dec
pushf
andl
jae
fisttpll
sarl
mov
and
add
sbb
enter
cmc
push
mov
cmpsl
test
push
cmp
or
std
xchg
daa
outsb
adc
pop
add
mov
ss
inc
inc
and
push
xor
push
je
loop
or
int3
iret
adc
or
in
push
push
dec
cmp
adc
sub
mov
dec
and
xchg
push
push
xchg
sub
les
jo
decl
jl
gs
sti
cld
xchg
ret
popa
or
inc
call
push
stos
pop
mov
andb
test
div
test
pop
push
xor
sub
push
ljmp
xor
mov
shlb
das
cmp
insb
add
mul
daa
inc
stos
es
mov
bound
ss
cmpsl
in
mov
push
sub
xchg
jb
add
push
cmc
dec
test
jnp
mov
sbb
in
mov
fdivr
mov
dec
pop
or
out
xchg
pusha
ljmp
mov
int3
jnp
mov
in
popa
dec
cmp
push
dec
and
sub
xor
inc
cmp
fcmovb
dec
adc
push
hlt
cwtl
fcoml
loopne
ljmp
in
adc
cmp
dec
jne
mov
mov
inc
sub
and
pop
scas
cmc
xchg
es
jecxz
dec
pop
xchg
jmp
jnp
jns
xchg
xorb
inc
pop
pop
inc
jnp
mov
dec
aas
jb
in
jle
in
imull
bound
icebp
pop
inc
mov
push
mov
das
dec
mov
roll
inc
rcrl
loopne
ss
mov
jle
add
dec
outsb
pop
fidivrs
xor
lea
mov
fiaddl
in
ret
push
ror
adc
call
int3
ja
dec
lcall
rolb
cli
sub
aaa
sub
mov
mov
fisttpll
outsl
xor
dec
and
call
push
pop
fidivl
and
test
gs
outsl
int3
test
daa
add
data16
xor
adc
dec
mov
aaa
sbb
xchg
aaa
cmp
mov
adcl
outsb
push
jp
or
mov
cltd
mov
cmp
push
sbb
xchg
insl
test
jge
sub
int
inc
mov
mov
adc
stos
jp
adc
iret
cld
inc
push
sub
test
push
inc
int
fisttps
mov
dec
sbb
movsl
mov
pop
bound
cmc
movsb
sbbl
cwtl
bound
jnp
and
inc
jae
test
and
ja
adc
fs
lods
dec
pop
dec
scas
sub
xor
das
and
or
ret
sahf
nop
xor
jp
out
js
and
orl
adc
test
push
stos
in
mov
mov
push
fadd
mov
fcoms
and
and
call
inc
xorb
lock
enter
pusha
cmpsb
popa
sub
idivl
jg
xchg
jb
mov
mov
idivb
in
add
stos
sahf
mov
ja
ficoms
aad
or
cmp
popf
icebp
mov
sub
daa
xchg
push
cld
bound
out
dec
cmpsb
mov
lock
sub
jecxz
and
bound
xchg
cmp
xlat
sti
std
xor
adc
mov
jmp
inc
fwait
sub
daa
push
clc
or
loope
sub
xor
dec
outsb
div
aaa
sub
mov
bound
mov
xlat
xor
je
in
cmp
inc
jmp
adcb
lods
mov
cmp
add
scas
sub
mov
xchg
dec
mov
xor
xchg
lea
push
stos
sarb
ljmp
repnz
int
repnz
fisubrs
xor
mov
mov
ret
sub
stos
xchg
mov
pusha
dec
pop
jmp
lahf
ret
cltd
ja
loope
lahf
rorb
lret
push
aam
daa
add
outsl
add
imul
sti
jmp
into
push
sbb
ror
fiaddl
mov
jge
pop
cmp
pusha
dec
popa
inc
popf
aaa
shl
and
inc
iret
xchg
inc
cmp
xchg
cmp
pop
insw
xchg
fmull
cmc
mov
push
shlb
xchg
fnsave
adc
mov
orl
mov
aam
jb
sar
inc
mov
outsl
mov
in
jmp
cwtl
pop
cmc
std
in
aaa
adc
pop
and
insb
lcall
lds
mov
inc
push
jns
dec
test
popf
scas
jne
fdivrl
xor
sahf
mov
aas
fimull
fcompl
les
sahf
pop
call
lea
cwtl
out
mov
xor
lcall
xchg
or
mov
mov
ret
xchg
stos
subb
pop
pushf
mov
mov
sbb
test
cmp
and
ss
in
dec
push
aas
cmp
jmp
push
xor
nop
insb
addr16
push
mov
push
pop
jo
pop
repnz
out
or
mov
sub
fadds
dec
sub
daa
adc
adc
xchg
jne
filds
jmp
adc
adc
adc
fstp
lods
mov
hlt
add
pop
lcall
test
out
sbb
loop
inc
neg
mov
add
lcall
out
or
push
jbe
sahf
lcall
shlb
mov
pusha
or
hlt
jns
dec
scas
leave
faddp
mov
daa
push
testl
in
hlt
cmc
outsb
mov
decb
inc
mov
test
mov
xchg
inc
outsb
push
and
sbb
mov
or
popf
scas
jo
idiv
xor
jmp
adc
in
lret
xchg
mov
pop
push
negb
xchg
fwait
shlb
idiv
stc
jnp
ss
sbb
movsl
arpl
sarl
sub
fcmovnu
cmp
dec
sbb
cmp
mov
mov
or
push
add
ja
jmp
cwtl
dec
std
cmpsl
fisubl
jmp
jns
test
push
mov
cmp
dec
jl
dec
xchg
xchg
test
test
out
lcall
jbe
icebp
jecxz
ds
pop
scas
dec
inc
mov
loope
pop
cmp
fdivrl
ret
fdivrl
push
push
mov
sub
mov
sahf
xchg
shl
popf
test
scas
lahf
jp
and
jp
pop
xor
fsts
lods
xor
xor
push
pop
sub
fdivrs
mov
push
push
ljmp
sub
pop
xchg
or
mov
cmpsb
loop
mov
dec
or
imull
add
sbb
push
rcl
lret
inc
sub
mov
sbb
xor
sbb
movsb
in
data16
push
int3
jne
pushf
ljmp
fimull
sbb
push
jnp
xchg
cmp
lds
and
rcll
out
inc
das
mov
sub
xor
cmc
clc
or
and
cld
jb
mov
and
or
cmpsb
jg
sbb
jl
and
push
bound
mov
inc
test
mulb
lock
push
fcoms
adc
sar
ja
daa
pop
ret
jno
lret
sbb
pop
or
and
es
int3
jle
jmp
addr16
call
xchg
push
mov
cs
or
imulb
and
imul
stc
adc
push
xchg
scas
pop
and
andl
scas
aad
sbb
push
cmp
jbe
repnz
mov
add
int3
sub
test
or
das
adc
pop
fisubrl
push
sub
rolb
addl
fwait
push
imul
mov
in
xchg
sub
add
jo
scas
cltd
les
push
outsl
push
push
add
fs
fistps
mov
ret
aas
cmp
pop
sub
nop
hlt
xor
fdivs
jae
add
add
inc
sbb
bound
sbb
aad
dec
xchg
xor
sbb
xor
int3
ss
or
repz
dec
lahf
arpl
pop
sub
xor
mov
in
add
xchg
repnz
inc
jp
inc
or
add
fcompl
pop
mov
cmp
js
mov
mov
test
inc
xorl
loopne
insl
popa
pop
lret
sbb
jo
mov
pop
xor
jne
mov
cltd
sti
xor
ficompl
push
and
xor
sub
dec
mov
cs
addr16
lret
fnsave
add
cli
ja
or
mov
fsubr
mov
dec
mov
cwtl
popf
repz
stos
repz
scas
jl
mov
adc
testb
out
or
xor
jp
push
and
push
cmp
jmp
sbb
pop
lea
je
in
mov
mov
sbb
das
inc
pop
and
stc
xor
push
in
or
sub
adc
xor
int
insl
pop
jnp
pop
lcall
push
xor
int3
pop
adc
repz
mov
mov
ja
jp
sub
movsl
arpl
fwait
dec
loopne
jmp
mov
mov
push
pop
cmp
inc
fsubs
xor
mov
mov
or
push
mov
jbe
or
jbe
rolb
repz
fstps
mov
inc
sahf
mov
fisubrl
outsb
insb
lea
jne
mov
pop
movsb
cmp
sbb
rcrb
shll
inc
hlt
xor
out
int
sub
shrb
and
mov
lahf
xchg
xor
xor
ffree
repnz
dec
add
adc
jecxz
insb
sbb
neg
repz
dec
repz
lods
in
xchg
rorl
es
sub
in
cmp
xor
cs
jbe
push
xor
jp
in
inc
mov
or
loopne
mov
inc
dec
jecxz
stc
sbb
adc
inc
fildl
and
push
pop
jbe
hlt
and
aam
xlat
les
fwait
arpl
fdivp
fisubrl
push
inc
fcom
mov
push
lea
repnz
push
loop
into
jl
loop
or
mov
mov
loopne
push
outsb
bswap
mov
orps
pop
fldt
xchg
ljmp
imul
mov
in
push
lahf
mov
jmp
lret
scas
push
mov
ret
cmp
popf
cs
scas
sbb
push
loop
js
into
out
push
xchg
mov
mov
pop
aad
pop
addr16
imul
mulb
shrl
rclb
pop
es
inc
fcmove
mov
sbb
mov
bound
mov
cli
imul
xlat
xorl
add
pop
jne
and
stos
addr16
movsb
lret
mov
mov
inc
pop
adc
pop
or
jb
push
dec
and
push
inc
mov
push
or
jl
popa
mov
cs
add
sbb
int3
repz
out
andl
jecxz
xchg
xchg
and
mov
xor
icebp
stos
pop
pop
repnz
xlat
hlt
in
hlt
daa
add
xchg
mov
popa
xchg
repz
jne
loope
xor
rcr
clc
push
mov
icebp
mov
pushl
test
std
sub
mov
push
xchg
cmp
out
xor
mov
dec
sbb
push
pop
repnz
stc
rorl
fs
sub
mov
sbb
pop
shlb
add
jno
cld
jmp
les
mov
lock
nop
mov
icebp
int3
and
xor
shr
sub
fildll
xor
mov
mov
test
mull
and
sahf
inc
fmull
jbe
movsb
sti
daa
xor
aaa
fwait
and
stc
ret
test
push
pushf
orl
mov
cmp
xchg
arpl
xchg
int3
orb
inc
iret
xchg
jb
dec
push
adc
inc
rorl
pusha
aaa
jle
inc
mov
inc
cmc
icebp
cmp
aas
sahf
xor
pop
lods
lds
cmpsb
adc
test
sti
jno
popf
inc
mov
loop
insb
cmpsl
mov
and
movsb
jge
idivl
fnstcw
out
sub
cmp
jns
cmc
aad
mov
push
mov
sub
mov
cmp
mov
xor
push
jnp
repnz
test
cmp
pop
and
push
adc
jmp
or
and
shl
add
sbb
pop
jbe
cmp
add
je
jmp
arpl
inc
mov
movsb
mov
jbe
adc
sti
fdivl
dec
pop
cmp
sub
lcall
push
enter
cmp
xchg
cmp
push
pop
push
in
cli
pop
xchg
dec
push
das
cltd
adc
call
lret
push
aam
pop
ret
dec
sbb
cli
cltd
in
dec
sub
sti
jns
and
cmpsb
and
sahf
push
mov
sbb
pop
movsl
jne
jne
add
or
lds
es
fsubl
mov
popf
loopne
jae
imul
inc
push
adc
cltd
pop
pop
or
shll
mov
inc
mov
and
mov
mov
enter
addr16
sbb
cld
sti
dec
outsl
add
mov
scas
pop
fcmovbe
insb
pusha
in
les
lds
mov
ret
imul
mov
sbb
jl
inc
mov
mov
inc
and
xchg
imul
dec
push
call
stos
sub
add
mov
sbb
inc
mov
sbb
jnp
cmp
fcompl
mov
or
lock
test
inc
cli
out
stos
je
iret
add
ljmp
adc
in
fiaddl
clc
xchg
sub
arpl
fildl
sbb
push
pop
mov
push
test
andb
or
sub
ja
cmp
dec
mov
inc
enter
lahf
aas
xor
fimuls
outsb
in
xchg
pop
es
adc
stc
jno
call
fnstenv
add
mov
sub
negl
cmpl
adcl
lock
bound
and
push
push
lds
movsl
aam
cmp
clc
and
fstps
jl
repnz
push
popa
daa
ljmp
test
xchg
test
jecxz
sahf
aaa
push
rcrl
sub
xlat
lret
mov
repnz
xchg
dec
or
mov
je
push
iret
dec
xchg
daa
push
jne
fcmovb
xor
das
iret
xor
adc
out
imul
adc
xchg
out
in
je
es
lds
push
cld
sub
mov
sbb
sub
adc
pop
stos
in
sub
in
and
movsl
jp
sbb
or
mov
push
fdivrs
or
ds
pop
aam
pop
xchg
mov
add
push
mov
clc
push
dec
jp
jnp
aad
andl
push
jmp
sub
inc
test
jecxz
outsb
sbb
daa
dec
push
push
xchg
mov
pop
jb
lret
fildl
data16
cli
je
jmp
mov
iret
xor
rorl
lds
cmp
dec
push
in
ret
aam
outsl
mov
hlt
and
cmp
pop
mov
aas
pop
xor
push
add
cmp
leave
pop
or
inc
mov
sbb
dec
in
pop
cmp
daa
shrb
fimull
xchg
fs
xor
sahf
jns
out
or
lcall
dec
dec
ljmp
stos
push
xchg
repnz
out
mov
lock
jp
int3
xor
mov
push
out
sarl
pusha
mov
sbb
cmp
daa
or
shll
xor
std
mov
je
stos
jb
inc
or
int3
frstor
pop
mov
imul
fdivs
and
femms
pusha
addr16
mov
stc
add
shrl
cmp
push
cmp
mov
push
rcrl
push
stos
insb
loopne
adc
loopne
mov
fcomi
dec
and
cmpsb
add
frstor
cmp
adc
pusha
test
dec
outsb
push
into
and
xchg
mov
ret
mov
mov
test
mov
sub
pop
adc
push
jmp
stc
mov
jge
mov
jae
daa
or
dec
mov
jl
cmp
cmp
ret
xchg
jmp
push
jp
mov
or
je
data16
shll
sti
in
and
cmpsl
rol
mov
adc
outsl
or
xor
jnp
xlat
std
jl
shrl
andb
rorl
ss
std
out
ret
bswap
adc
mov
int
xchg
lahf
mov
into
lds
xchg
pop
jp
cli
leave
test
pop
add
push
jnp
rorl
inc
pushf
mov
icebp
mov
int
or
cmp
or
stc
lods
test
cli
xlat
lret
or
inc
xor
psubsb
add
std
pop
idivl
sbb
inc
mov
jle
inc
loope
movsb
xor
or
inc
je
push
inc
repz
mov
pushf
gs
jbe
sub
mov
into
mov
ja
rcrb
lock
inc
sbbl
adc
push
cltd
lahf
jp
movsb
cltd
add
je
push
out
ficompl
jno
xchg
inc
aaa
in
push
and
fwait
inc
stos
movsl
icebp
outsb
sub
jmp
pop
imul
mov
jne
mov
mov
sub
popf
test
fldenv
and
fmull
scas
xchg
cmp
mov
es
insl
test
and
inc
loopne
xchg
jecxz
in
add
jbe
stc
adc
loopne
into
inc
or
repnz
cld
push
xchg
mov
out
mov
mov
mov
aaa
fistpl
mov
or
jns
inc
ret
inc
into
xor
sbb
sub
call
out
clc
pop
test
jp
and
cs
dec
sbb
outsb
xchg
cli
int
add
mov
mov
pop
filds
lock
addb
mov
out
push
scas
mov
sub
xor
notl
lods
mov
test
inc
pop
push
or
pop
mov
pop
int
pop
jg
push
mov
mov
jg
mov
hlt
inc
sub
push
xlat
push
push
fwait
xchg
notl
ret
jge
mov
mov
pop
stc
inc
movsb
pop
xchg
pushf
mov
xor
vsqrtsd
adc
fstpt
xor
mov
stos
cmp
cs
xchg
rcll
insb
xlat
pusha
inc
lret
fwait
mov
xor
lds
sbb
test
scas
shl
and
fs
mov
mov
mulb
or
mov
push
cmpl
repnz
fs
mov
mov
mov
data16
push
xchg
jmp
pop
and
test
jb
inc
xchg
cltd
jne
cmpsb
ds
xchg
pop
mov
xor
movsl
in
lock
add
mov
test
mov
sbb
dec
jb
aaa
pop
cmp
dec
pop
dec
test
pushf
cmc
dec
mov
cmp
scas
mov
adc
cltd
pop
fiaddl
cmpsb
push
add
andl
push
xor
ret
push
adc
jecxz
mov
loop
or
sub
sahf
jg
mov
les
jecxz
ret
dec
int3
repnz
sub
in
into
push
mov
addl
cwtl
dec
lret
mov
lods
sbb
xchg
outsb
icebp
outsl
jnp
mov
daa
sarb
and
cmpsl
lods
xchg
pop
push
add
imul
jg
or
inc
or
mov
scas
lret
mov
sub
call
mov
aaa
or
and
sbb
aas
aaa
scas
shl
fsubrp
pop
xchg
mov
nop
add
mov
xlat
xchg
and
jae
loopne
clc
ret
pop
pop
sub
pop
fldl
repz
push
mov
into
jb
sub
push
in
xor
adc
insb
test
and
sahf
add
les
shr
or
cld
in
cmc
pop
inc
cli
ljmp
cli
aad
adc
dec
mov
cmp
sub
and
xchg
ror
ljmp
or
cmpsb
je
adc
mov
call
aaa
xchg
iret
cli
xor
dec
shr
adc
xor
arpl
or
xor
mov
daa
xor
cli
pusha
ja
push
adc
jp
addr16
or
push
and
or
and
std
adc
jae
lea
xorb
sub
xchg
xchg
and
out
and
imul
lds
jle
mov
es
mov
xchg
mov
ret
adc
cmp
adc
es
or
sahf
push
test
hlt
xor
in
test
hlt
or
in
sarl
pop
icebp
rcl
push
adc
unpcklps
jae
imul
jmp
pop
xor
std
cltd
es
sbb
jne
sarl
rorl
dec
dec
mov
xchg
push
inc
jl
dec
mov
loop
fidivl
scas
mov
orl
inc
inc
sti
int3
adc
mov
test
scas
jnp
insb
or
movsb
rolb
addl
arpl
lret
les
js
jg
daa
popa
iret
mov
inc
hlt
ficompl
iret
jns
ja
je
repz
loope
out
iret
lcall
ret
leave
lcall
int3
cmc
push
les
subb
mov
adc
ja
cmpsb
add
mov
dec
mov
inc
shlb
cmp
mov
insb
mov
cltd
mov
dec
sub
out
imul
scas
ljmp
adc
leave
sub
sbb
int
sbb
sbb
out
call
cli
lcall
pop
inc
in
fldt
or
xlat
cmp
shlb
shrl
mov
in
data16
and
xor
bswap
in
push
push
inc
es
leave
insl
add
fisubl
jno
cwtl
sub
aam
mov
jbe
mov
repz
shr
add
fcomp
xlat
je
sarl
stos
push
push
stos
sbb
pop
pushf
imul
mov
jg
sub
fs
dec
and
push
inc
adc
cli
jle
push
inc
repnz
insl
pop
jo
pop
mulb
lods
mov
or
pop
xchg
dec
fistps
les
iret
fs
stc
push
xor
mov
sub
adc
paddsb
jg
lds
xor
leave
push
xchg
insl
add
js
xor
std
flds
cmp
xchg
sub
stc
movsl
dec
fcompp
pop
or
fildl
cmp
inc
sbb
mov
in
mov
push
pop
mov
or
sarl
pop
cs
fimuls
fiadds
mov
mov
test
pop
pop
incb
add
and
pop
mov
iret
sar
cli
das
jecxz
and
xor
sbb
cmp
xchg
and
popf
mov
popa
xchg
ret
and
in
xlat
lea
fwait
ret
and
or
inc
stc
inc
in
jbe
cli
outsb
and
sahf
addl
xchg
popf
out
jnp
rcrl
aad
xor
inc
int3
outsl
leave
sbb
cmp
jg
and
outsb
mov
icebp
rcl
dec
xor
mov
loopne
xchg
and
xchg
stos
fisubs
sarl
and
jecxz
push
lods
cmp
insb
sbb
or
pop
repz
cmpsb
ss
loope
adc
ss
stos
push
push
fs
or
sub
insl
push
addr16
testl
pop
inc
gs
sub
stos
mov
scas
xor
cli
sub
adc
sbb
xor
mov
idivb
mov
lods
lock
xchg
pop
push
push
sub
aaa
out
lds
dec
adc
fnstsw
js
jbe
stos
les
nop
loop
and
push
add
jae
fs
pop
imul
jg
inc
cmp
mov
push
das
int
fdivrs
cmp
imul
push
insb
rcll
jecxz
notl
and
in
iret
pop
cmp
sti
movsb
mov
push
cltd
sub
add
xor
into
xchg
bound
dec
mov
pop
mov
imul
cli
stos
imul
xchg
inc
cld
js
jae
nopl
cs
cmp
or
inc
jbe
mov
sbb
mov
push
not
jo
dec
ljmp
ss
rorl
dec
xor
je
mov
mov
les
and
test
les
sub
or
in
ret
dec
in
add
xchg
out
jmp
cld
ret
dec
pop
int3
insb
dec
adc
jg
sbb
cmpsb
fsub
loope
ret
or
outsl
or
daa
sub
pop
out
shrl
test
cmpsb
ds
pmaxsw
imul
jno
sbb
jmp
jb
das
out
hlt
test
popf
pop
push
int3
xchg
out
aas
push
in
out
mov
dec
fdivrl
lds
pop
push
pop
xchg
cmp
inc
pusha
fwait
arpl
push
sbb
dec
xchg
or
inc
into
mov
popf
add
or
and
mov
inc
ficoms
mov
mov
ljmp
pop
arpl
xor
fcmovnb
lcall
dec
sbb
jecxz
mov
ja
xlat
fildl
mov
es
lahf
mov
pop
and
out
xor
fistpl
push
test
call
idivl
or
aas
sbb
insl
mov
mov
or
js
mov
mov
mov
lahf
jmp
cmp
std
xchg
xchg
adc
out
cmp
jns
xchg
mov
add
ficoml
data16
imul
jnp
scas
push
or
sub
rcrl
mov
adc
negl
cmp
pushf
test
test
arpl
fimull
loop
push
adc
pop
push
in
clc
out
xor
leave
pop
inc
pop
add
push
inc
pop
fildl
popf
call
push
jb
xchg
dec
or
mov
dec
fldenv
cmp
cmpsl
cmc
test
push
sbb
andb
stc
leave
add
mov
scas
cmp
jnp
iret
mov
add
lods
inc
cmp
in
cltd
mov
cmp
cld
push
ja
pop
jl
lret
xchg
inc
rcr
mov
daa
and
push
push
shll
call
xchg
push
cmovp
cmp
daa
sti
aaa
aad
sbb
cmc
mov
pop
mov
ja
leave
mov
and
inc
sub
fldl
sbb
pop
cmp
std
inc
jge
lahf
cld
adc
jne
mov
push
cld
mov
cwtl
pushl
in
mov
popa
jb
add
gs
aaa
cmp
sbb
cmpb
or
movsl
and
sbb
push
cmp
sbb
test
pop
bound
xsavec
cmp
mov
xorl
or
fadds
inc
dec
jl
mov
inc
inc
arpl
pop
enter
push
mov
sub
mov
test
sbbb
xor
shrl
push
ror
sub
outsl
outsb
or
fucomp
nop
cltd
cli
cmp
dec
cmpsb
jae
fcomip
jg
das
lea
add
pop
mov
repz
mov
xchg
push
inc
bound
push
adc
cmp
call
loope
arpl
rcrb
lahf
xor
xor
xchg
out
mov
into
mov
scas
cld
jnp
inc
push
or
icebp
repz
and
lcall
popf
pop
loope
pop
lods
sbbl
sahf
aaa
and
adc
mulb
outsb
dec
jp
andl
xor
pusha
and
sahf
push
aad
push
or
imul
sti
fnstenv
pop
jle
dec
adc
sbb
and
sbb
sbb
jecxz
jp
mov
and
mov
push
inc
pusha
mov
mov
sub
loope
jl
inc
into
loop
loop
out
cmp
cmpsb
jae
negl
sub
je
int
rcll
sub
sub
cmp
mov
fisttpl
adcl
repz
push
mov
and
jnp
cmp
pop
std
outsl
and
sbb
les
add
in
inc
outsb
imul
mov
add
add
popa
jmp
dec
xchg
mov
andl
cld
mov
xor
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
orl
sub
sbbl
push
push
push
andl
push
orl
push
orl
call
subl
mov
lea
push
subl
push
movl
call
cmp
je
xorl
xor
jmp
mov
xorl
push
lea
push
push
push
subl
push
adcl
call
imul
cmp
movl
jne
orl
lea
andl
push
addl
push
andl
call
cmp
jne
addl
movl
or
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
addl
movl
mov
or
lea
mov
xor
lea
sbb
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
xor
add
dec
mov
jmp
mov
mov
mov
mov
mov
sbb
xor
adcl
mov
addl
add
notl
mov
movl
mov
cmp
movl
jne
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
adcl
xor
subl
add
addl
mov
mov
xor
notl
add
sbbl
mov
mov
sbbl
xor
subl
add
mov
andl
xor
xor
inc
mov
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
mov
addl
mov
mov
mov
mov
addl
mov
orl
mov
mov
decl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
sbb
mov
xor
xorl
add
jmp
lea
subl
push
addl
push
addl
call
movl
cmp
jne
push
lea
addl
push
adcl
push
push
orl
push
call
imul
movl
cmp
movl
jne
sbbl
lea
push
push
sbbl
call
movl
cmp
jne
mov
xor
mov
sbbl
xor
sbbl
lea
incl
push
add
mov
xor
lea
xorl
push
movl
mov
xorl
pushl
adcl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
xor
and
lea
mov
neg
mov
orl
xor
orl
xor
xorl
add
mov
addl
xor
movl
lea
movl
mov
cmp
jbe
xor
or
or
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
call
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
movzbl
adc
mov
subl
sub
andl
xor
mov
lea
mov
xorl
lea
subl
mov
lea
subl
push
addl
push
call
movl
cmp
movl
jne
push
lea
xorl
push
push
adcl
push
push
call
imul
cmp
jne
lea
push
push
subl
call
movl
cmp
movl
jne
lea
addl
push
negl
push
addl
call
movl
cmp
movl
jne
xorl
push
orl
lea
andl
push
subl
push
adcl
push
xorl
push
orl
call
imul
movl
cmp
jne
orl
lea
push
subl
push
notl
call
movl
cmp
movl
jne
lea
push
subl
push
subl
call
movl
cmp
jne
addl
push
lea
push
sbbl
push
push
push
call
subl
imul
movl
cmp
jne
addl
lea
orl
push
push
andl
call
movl
cmp
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
imul
movl
cmp
movl
jne
addl
lea
orl
push
andl
push
andl
call
cmp
jne
orl
lea
subl
push
xorl
push
addl
call
movl
cmp
movl
jne
adcl
push
xorl
lea
xorl
push
adcl
push
push
sbbl
push
adcl
call
imul
cmp
jne
movl
lea
addl
push
notl
push
call
movl
cmp
jne
lea
xorl
push
push
addl
call
movl
cmp
movl
jne
push
lea
adcl
push
xorl
push
adcl
push
xorl
push
call
adcl
imul
movl
cmp
jne
lea
xorl
push
push
orl
call
movl
cmp
jne
addl
lea
movl
push
push
adcl
call
movl
cmp
jne
andl
push
lea
push
push
subl
push
sbbl
push
call
xorl
imul
movl
cmp
movl
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
sub
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
push
movl
cmpl
je
cmpl
ja
jmp
push
pushl
call
mov
dec
mov
jmp
mov
xor
mov
push
mov
add
cmp
movl
je
movzwl
adc
mov
mov
incl
xor
andl
xor
add
addl
add
movl
adc
orl
xor
adcl
mov
movl
cmpl
je
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
jmp
sbb
cmp
xchg
xchg
dec
push
dec
repnz
lods
outsl
mov
addl
addl
mov
cmp
fnstenv
subb
movb
gs
adc
mov
mov
insl
outsl
cli
dec
fs
rclb
testb
cld
jno
loop
jecxz
mov
mov
iret
add
and
sbb
inc
sar
fisttpl
aas
nop
pop
imul
sbb
mov
test
popa
outsl
jbe
cmp
add
clc
sub
pushf
xchg
int3
inc
in
ds
inc
mov
loop
or
jo
test
lods
mov
jmp
push
push
pop
jecxz
jb
aaa
pop
add
inc
mov
mov
mov
je
mov
imul
ds
lahf
sub
dec
ficoml
push
xor
outsl
out
dec
inc
push
ror
fdivrl
sbb
lea
cmpsl
inc
dec
pop
mov
rsm
and
pop
cmp
push
shlb
sbb
push
cld
addr16
mov
sbb
es
jmp
call
adc
lcall
add
adc
andb
cwtl
fwait
pop
sbb
in
jne
sub
mov
out
jo,pn
push
mov
mov
and
sub
mov
fistps
repnz
scas
sub
jecxz
xorb
call
ljmp
fcmovu
fldcw
xchg
push
addr16
xor
mov
sbb
movsl
scas
fistpl
ja
jno
mov
roll
ret
pushf
out
insb
or
mov
popf
imul
mov
cmp
pop
addr16
cli
cmp
das
mov
add
lds
add
inc
xlat
ljmp
xor
out
mov
push
fnstsw
sub
test
hlt
out
faddp
imul
test
pusha
pop
sbb
int
sbb
sarl
outsl
add
mov
pop
ret
mov
rol
lahf
mov
fistpl
jge
gs
cmp
cmpsl
imul
daa
adc
and
adc
cmpsb
into
stos
ret
imul
in
addb
inc
ljmp
inc
call
mov
dec
movsb
or
repnz
imul
les
daa
sub
and
push
mov
or
sbb
mov
lds
mov
add
es
mov
cld
out
ret
fsub
push
lcall
xchg
fdivrs
mov
mov
add
jecxz
cs
leave
test
mov
and
add
mov
hlt
in
jae
push
fldt
or
aaa
mov
pop
xchg
mov
pop
repnz
data16
mov
xor
mov
adc
or
out
push
fwait
decb
rorl
and
les
push
push
ds
mov
mov
fwait
in
popa
cmp
jecxz
shld
fisubrs
sub
cli
stos
movsl
fs
and
insl
push
lret
and
div
cmp
dec
jbe
xor
rdtsc
cld
sbb
sub
xor
mov
pop
cmpsl
mov
and
subb
out
jns
cltd
fs
mov
or
mov
xchg
rorb
push
mov
aas
push
fisubrs
scas
xor
jae
push
and
and
fsts
adc
clc
xchg
jecxz
pop
das
cwtl
nop
dec
push
pop
xchg
rorb
je
mov
out
jp
push
fnstsw
xor
xchg
pushf
mov
push
insb
insb
mov
inc
ds
sbb
or
pop
mov
aam
add
inc
out
sbb
test
or
ds
push
pop
int3
mov
roll
hlt
or
mov
xor
outsb
subb
negl
insb
iret
inc
or
push
fdivrl
jae
orl
fisttps
mov
mov
xchg
add
xchg
mov
mov
jnp
call
push
jno
stc
test
or
cmp
cmp
push
test
mov
test
inc
pushf
add
imul
and
pop
movsb
stc
adc
arpl
and
xchg
movsb
mov
mov
cmp
add
xchg
data16
mov
xchg
mov
cmp
pop
jbe
xchg
cmpsl
push
fwait
stos
inc
mov
scas
jb
call
push
sti
inc
dec
xor
int3
sub
jne
repnz
loope
or
lcall
jge
sbbb
out
dec
arpl
rolb
add
add
xor
movsl
xor
or
pop
xor
jo
lock
and
icebp
cmpsl
cmp
and
outsl
push
out
mov
out
dec
push
test
pop
cli
add
mov
pop
dec
and
out
in
lret
lods
stos
xchg
dec
loopne
iret
push
fsubs
loope
push
cmp
mov
pop
andl
clc
ljmp
std
loopne
dec
or
jl
mov
add
xchg
push
jo
xor
mov
pop
pop
incb
inc
inc
xor
scas
fidivrs
xchg
add
inc
aaa
push
jp
and
adc
pop
sub
cwtl
fwait
cmpsb
sbb
ds
repnz
leave
enter
push
lahf
imull
loopne
sbb
or
or
xor
hlt
xchg
cmp
lcall
rclb
fisttpll
in
mov
clc
fsubrl
adcb
cmp
fists
daa
add
cmpl
xchg
decl
inc
inc
add
sti
mov
nop
shlb
push
mov
pop
imul
movsb
xchg
testb
aam
adc
lods
inc
fsubrl
aam
jne
pusha
test
sub
sub
movsl
adc
push
fs
mov
insl
fdivrl
cmp
insl
cld
cli
mov
pop
mov
push
in
mov
cmp
pop
adc
std
push
or
mov
outsl
mov
sbb
push
push
jns
cmpsb
lods
pop
outsb
lcall
std
pop
or
mov
inc
outsl
ds
pop
jbe
jecxz
clc
push
adc
xchg
pop
andb
outsb
test
sub
add
jne
mov
jle
adc
push
fwait
hlt
cs
mov
pop
test
push
dec
loopne
ret
xor
mov
das
or
insl
mov
int3
fwait
xchg
mov
sub
js
mov
push
ret
cmpsb
or
fcompl
in
loope
cmc
pop
sbb
mov
pushf
lahf
cmp
lret
mov
icebp
sbb
add
xchg
out
icebp
inc
das
cmpsb
insl
subl
pop
add
int
sahf
mov
sbb
int3
orb
adc
push
jno
hlt
cmp
lea
cltd
std
lock
xchg
xchg
jnp
ror
loope
aad
pop
addr16
pop
cmpsl
add
inc
sub
push
xorb
frstor
ret
ss
cmpsb
in
idivl
enter
mov
bound
fwait
jp
pop
mov
stos
push
pusha
fisttps
ret
and
or
imul
and
adc
mov
cmp
xchg
mov
push
jb
rorb
pop
dec
fisttpl
rcrb
popa
lods
adc
sub
lods
fnsave
sub
pop
out
push
xchg
xchg
inc
and
adc
into
cmc
xor
push
adc
mov
into
mov
movsl
xchg
jge
insl
ljmp
lahf
mov
dec
pop
xor
and
cmp
std
and
xor
mov
xchg
in
bound
jbe
cmp
sub
dec
jl
dec
add
adc
and
faddl
pop
into
jl
mov
movsb
mov
xorb
lods
jo
shrl
add
xchg
xchg
les
jne
rcrl
add
push
or
jmp
jne
dec
gs
mov
ret
cld
mov
leave
loop
adc
and
jg
jmp
fbstp
popa
push
stos
cli
scas
mov
add
popa
mov
mov
es
mov
sahf
inc
or
in
pushf
movsl
mov
xchg
jno
dec
arpl
out
and
mov
mov
sub
lock
inc
push
push
sarl
pop
dec
outsl
fists
mov
les
repz
in
jbe
ret
inc
nop
test
add
lahf
mov
jecxz
test
js
fwait
enter
push
sbbl
nop
adc
ret
adc
mov
jecxz
fdivrl
mov
stos
mov
bound
inc
fwait
pop
pop
or
ja
sub
jg
cmp
adc
jg
adc
adc
xor
testl
add
mov
inc
test
mov
or
inc
repz
or
es
mov
mov
dec
cmp
mov
lcall
ror
rcpps
repnz
cli
mov
mov
repnz
mov
outsb
mov
sahf
lods
jp
lods
outsb
add
in
subb
jg
iret
add
dec
imul
add
in
test
daa
jle
mov
and
pop
fxam
jno
push
push
lret
aas
mov
test
loop
scas
add
repnz
imul
mov
sar
cwtl
cmp
add
movsl
adc
push
xchg
mov
dec
jo
mov
pop
decl
pop
movsl
notl
cmpb
jl
inc
xorb
sbb
sahf
jbe
and
add
sti
adc
orl
lods
jmp
push
daa
jl
mov
fimuls
iret
scas
pop
cmpl
add
mov
pop
fcom
cmp
sub
add
dec
lock
pop
shlb
pop
mov
jmp
pop
push
insb
inc
jmp
xchg
adc
push
mov
pop
iret
icebp
xor
jne
or
stos
icebp
popw
cmp
mov
xlat
sub
pop
clc
jl
popf
fwait
xorl
in
iret
mov
push
mov
push
addr16
fisubs
es
fnstsw
mov
xchg
and
sbb
mov
leave
xchg
jl
xchg
gs
xor
sub
jge
outsb
push
out
xlat
aas
mov
xchg
test
scas
outsb
das
aas
je
pop
jl
xchg
fdivl
mov
out
lea
stc
lahf
daa
in
inc
push
inc
xchg
or
inc
pop
aaa
ret
into
push
rcrb
std
in
sub
in
lcall
mov
out
je
mov
jnp
adc
loopne
cs
or
xchg
adc
aas
notl
pushf
bound
xchg
ret
jb
pop
dec
lret
xchg
inc
jo
sbb
cli
sub
cltd
mov
pop
loop
andps
fcmove
arpl
or
dec
jmp
jle
inc
fidivl
add
mov
or
mov
jp
fldenv
inc
xor
xchg
dec
mov
pop
mov
and
out
lret
adc
push
call
insb
pop
scas
xor
scas
adc
clc
pop
add
jno
sub
insb
vmwrite
out
add
xlat
hlt
mov
int3
rcrl
ffreep
fsubs
lcall
inc
test
es
lods
mov
and
cs
jmp
pushf
or
and
aam
mov
repz
ljmp
sti
pop
pop
cmpsb
push
xor
add
daa
cmpsl
pop
xchg
mov
add
xchg
xor
pop
in
jae
cmp
aad
enter
push
ss
xchg
mov
mov
fs
test
cmp
insl
int
arpl
rol
add
daa
cld
pop
lret
mov
sub
test
pusha
jg
push
mov
mov
lahf
movsl
adc
inc
xlat
mov
dec
ljmp
xor
les
subl
sub
jp
jg
cmpb
mov
jo
test
loopne
or
insl
stos
sar
std
imulb
jbe
pushf
and
sbb
mov
inc
or
sub
xchg
xchg
or
movsl
movsl
insb
es
add
add
mov
cmp
push
nop
mov
xchg
les
pop
mov
cli
orl
bound
or
scas
loopne
scas
or
push
mov
dec
adc
icebp
dec
xchg
out
dec
test
and
pushf
fsts
add
add
pushf
jp
pop
pushf
and
jbe
scas
dec
outsb
mov
les
das
fwait
adc
in
or
fstps
lret
and
mov
test
icebp
mov
pop
cmp
dec
inc
cmp
mov
sub
add
dec
movb
xor
fsubrl
xchg
popa
add
xor
fisttpl
in
shr
insb
mov
fucom
nop
out
pusha
add
push
gs
dec
or
lods
inc
arpl
fisttpl
mov
jne
pushf
and
or
ljmp
sub
push
mov
rorl
cmc
addr16
ds
and
or
mov
aam
sub
sub
cli
mov
aas
enter
test
mov
lea
jnp
mov
imul
ficoml
push
out
std
jg
arpl
cmp
cmp
or
icebp
mov
call
imul
and
xor
adc
push
dec
or
fistpll
add
xor
movsb
dec
jbe
inc
lret
stc
mov
addl
xor
inc
sarb
xchg
ds
mov
and
or
movsb
jge
sub
xchg
sarb
adc
roll
push
cmp
xchg
cmp
jl
stos
fistpl
into
ja
movlps
sbb
mov
mov
sbb
lods
cmp
outsl
pop
dec
cs
dec
pop
mov
imul
leave
mov
loop
xchg
xor
test
mov
mov
mov
sub
mov
push
xor
cmc
dec
jnp
loopne
scas
xor
js
dec
push
inc
sub
leave
fisubrl
sarb
xchg
mov
push
cmp
in
jmp
push
dec
cltd
dec
lcall
loop
fcomps
cmc
outsb
subl
and
addr16
cmc
cmp
mov
popf
out
imul
cmpsb
ja
adc
sub
sarb
loope
and
push
in
add
out
sub
fs
sti
daa
xor
xchg
mov
fcoms
push
mov
pop
push
repnz
stos
jne
sbb
ffreep
cmp
mov
or
fcmovnbe
es
fwait
stos
mov
rcl
sub
pop
mov
mov
adc
popf
sbb
lods
adc
ljmp
lahf
sar
xchg
pop
sbb
ret
fdivrp
test
cli
xor
repz
pop
insb
and
push
push
imul
lret
xorl
or
push
xor
mov
jle
pop
gs
leave
xor
ds
ret
xchg
arpl
sbb
mov
jp
hlt
cmp
outsl
scas
fs
and
cmp
mov
sbb
sarl
inc
cmpsb
push
xchg
jg
ja
cltd
in
ss
pop
leave
jge
addb
push
aad
xchg
loope
pop
adc
or
mov
add
movsb
int
cmp
dec
daa
test
adc
test
sarb
pop
aam
ljmp
cwtl
insb
cs
loop
fidivrs
sub
imul
mov
lds
inc
dec
loop
push
xchg
cwtl
lock
lods
and
add
scas
push
xchg
cwtl
mov
pop
fnstcw
js
jno
outsb
clc
sbb
flds
xchg
push
fcomps
ret
gs
icebp
xor
sub
fwait
rorl
mov
pop
jo
jmp
pop
mov
aaa
push
outsl
xchg
je
adc
and
dec
cmpsl
adc
call
imul
sub
fsub
les
or
jecxz
outsb
dec
enter
loop
jecxz
sub
cwtl
arpl
mov
mov
pop
push
cltd
or
xor
cmpl
cmp
popf
push
mov
cmpsb
cli
cmc
jp
push
test
push
or
push
mov
in
jae
pop
push
mov
and
or
test
movsl
jle
xor
je
push
js
cmp
lret
iret
or
cmp
dec
adc
push
jp
into
pop
iret
aas
xchg
ljmp
pop
arpl
push
and
cld
shll
add
fisubrs
f2xm1
in
adc
outsl
sbb
mov
mov
test
jae
pop
mov
mov
sti
xor
mov
popf
jae
pop
orps
mov
movsb
mov
xor
inc
pop
decl
push
int3
jae
clc
adc
pop
pusha
inc
repz
cmp
rcr
sbb
cmpsb
adc
insb
ds
push
insl
fisubl
call
xor
cmp
dec
sbbb
cmpsb
push
adc
pop
mov
lods
outsl
mov
add
xor
shll
xor
mov
push
xor
push
cmpsb
lret
mov
push
push
xchg
cmp
mov
insl
pop
push
or
mov
jl
cmp
jecxz
arpl
out
jecxz
dec
jp
in
pop
mov
mov
imul
adc
mov
jns
mov
jb
lret
sbb
aaa
hlt
es
subb
mov
in
xchg
shl
shrb
mov
mov
mov
sub
sub
mov
outsb
test
lds
ss
lahf
imul
mov
sahf
and
out
adc
popa
push
inc
add
adc
fsubs
jne
in
adc
fdivr
xchg
mov
add
push
sub
mov
test
and
adc
adc
js
aaa
inc
lret
cmc
aad
out
xor
bound
out
xchg
dec
pop
movsb
add
push
mov
xchg
mov
dec
es
xor
jbe
clc
ds
jae
shlb
sahf
mov
clc
xchg
xchg
and
in
lods
incl
std
leave
push
repz
pop
ja
imul
sbb
sbb
inc
xor
mov
sahf
and
and
test
inc
fcmovne
pop
loop
repnz
rorl
mov
ret
sbb
dec
mov
dec
into
orl
dec
data16
adc
lds
lcall
shrb
ss
mov
xchg
mov
cs
jmp
pop
cmp
jecxz
lahf
lret
add
stos
dec
xchg
mov
dec
out
cmp
sti
dec
fisttpll
xor
push
shlb
ds
dec
mov
sub
adc
orb
rcll
jno
lret
inc
mov
or
sub
push
dec
lods
ret
sub
pop
sbb
es
js
jns
jns
testb
in
loopne
push
gs
stc
mov
shlb
mov
inc
imul
loope
dec
mov
mov
jmp
mov
cmp
mov
decb
jmp
add
icebp
adc
add
and
lret
jecxz
js
or
adc
nop
ret
or
sub
and
lods
inc
and
jne
aam
pushf
pop
fisttpll
outsl
xchg
jae
notb
imul
aam
add
fs
dec
lds
jl
stos
mov
test
push
mov
insl
xor
loope
mov
inc
out
or
out
pop
ja
push
insl
add
and
loope
fcomip
pop
cld
sbb
stos
fcmovnu
push
jecxz
ss
stc
cmp
mov
aam
inc
cmp
xor
mov
das
sub
ja
loopne
sbb
mov
push
xchg
orl
jecxz
sbb
push
subl
and
lcall
in
dec
or
adc
xchg
mov
mov
scas
lret
mov
xchg
sbb
and
and
dec
add
inc
mov
and
sub
mov
stc
lret
dec
sub
incb
int
ret
xchg
js
dec
jg
mov
xchg
rorb
cmpsb
mov
fnstsw
ja
cltd
pop
fldt
mov
xchg
int3
out
mov
lret
std
xchg
in
adc
and
in
xor
mov
test
popa
rorb
popa
in
jge
pop
mov
sbb
lock
lods
xchg
and
sti
sbb
mov
sbb
push
call
outsl
aad
sub
hlt
adc
icebp
addb
stc
cmc
repz
inc
pop
clc
and
hlt
pop
dec
jo
jne
xchg
into
dec
push
loop
and
insl
in
scas
ret
imul
add
mov
inc
std
loope
leave
popf
push
and
stc
sti
xchg
mov
adc
push
mov
cmp
dec
icebp
sub
fsts
jle
and
imull
dec
sub
fdivl
stos
add
scas
mov
xor
xor
fistps
sbb
bound
mov
addl
mov
test
popf
or
cmp
enter
push
push
adc
imul
jl
lahf
clc
mov
xor
into
mov
push
inc
sub
jno
pop
pusha
lea
mov
adc
aaa
cmp
mov
push
sub
int
ret
sub
jecxz
xchg
dec
push
shlb
xlat
jge
add
lahf
dec
push
iret
loopne,pt
andb
xor
imul
mov
add
jmp
adc
mov
and
frstor
mov
adc
out
aad
clc
or
push
repnz
pusha
and
xor
lds
movsl
hlt
out
aas
mov
mov
jne
fldenv
add
test
adc
cmc
jle,pt
mov
jecxz
mov
imul
and
bound
dec
mov
outsb
rol
sbb
es
mov
or
mov
jecxz
in
out
xor
pop
mov
and
mov
data16
push
cmpsb
nop
pop
cltd
sub
pop
mov
push
adc
xchg
sbbl
in
inc
popf
ja
bound
xor
nop
ds
mov
movsb
xor
cld
mov
daa
push
add
mov
xchg
rolb
mov
test
or
and
mov
fists
dec
push
or
add
imul
lods
popf
sarb
lret
test
aas
inc
jecxz
mov
dec
rcll
sbb
les
test
shll
scas
cwtl
loopne
dec
movsb
lods
jne
jl
icebp
mov
in
mov
sbb
pop
inc
mov
fstps
adc
xor
or
pusha
cs
sbb
out
push
jns
rcrb
fistps
jnp
in
inc
and
push
push
cld
mov
push
push
out
fmuls
dec
mov
add
xor
lock
push
aad
lods
enter
stos
fwait
nop
mov
test
scas
adc
sbb
loopne
lret
sbb
dec
mov
popa
jnp
add
aam
fldl
pop
push
pop
out
sahf
cmpsl
sbb
mov
cld
stos
in
xchg
or
push
xchg
lcall
or
addl
inc
mov
in
cs
js
daa
adc
mov
repnz
xor
cmp
mov
out
filds
push
lds
negl
mov
sbb
jne
lock
jne
into
sbb
out
pop
sub
pop
add
loop
mov
addr16
or
jp
fstl
cs
pop
adc
jns
push
lahf
sbb
jg
xor
hlt
jge
dec
sbb
mov
push
xor
loop
jmp
out
push
inc
jge
cmp
sub
addl
jo
push
repz
repnz
push
into
mov
mov
push
cmp
repz
pop
repnz
hlt
xchg
pop
mov
inc
mov
dec
and
ja
sbb
int
subb
gs
and
dec
lahf
psubb
aad
ds
test
popf
jge
jmp
add
ljmp
pop
enter
mov
ficomps
pusha
and
xor
push
enter
xor
pop
inc
push
jae
mov
xchg
mov
repnz
push
fimull
or
jle
mov
cli
and
mov
jle
jne
mov
sti
sbb
leave
repnz
adc
mov
insb
sbb
sbb
mov
adc
movsb
addb
cmp
adc
shrl
xchg
sub
adc
je
dec
xchg
ljmp
dec
fistpl
sarb
push
ljmp
cmp
sub
inc
cs
lahf
call
clc
pop
std
nop
xor
xor
or
pop
jle
cmp
gs
in
in
jo
fdivl
mov
sbb
inc
jne
cmp
xor
jmp
sbb
fcomip
addr16
jo
or
dec
and
aaa
out
inc
add
arpl
and
out
int3
imul
adc
sub
xchg
data16
xor
ds
divb
hlt
xchg
ds
or
pop
test
push
fmuls
pop
dec
sbbl
pop
pop
and
mov
mov
mov
inc
cld
cmpsl
sub
adc
mov
add
rolb
xorb
mov
lret
movsl
push
sarl
pop
adc
dec
xchg
dec
mov
aad
fcoml
pop
fisttps
repnz
jae
jne
sbbl
stos
mov
dec
cwtl
mov
mov
sbb
and
arpl
and
and
dec
fs
cli
inc
flds
in
sub
mov
mov
les
loopne
mov
or
movsl
push
or
stos
out
loop
jno
fcmovnu
cmp
in
or
les
mov
jns
pop
push
push
lea
js
sub
loope
out
adc
cmp
icebp
int3
outsb
cmp
push
testb
inc
cmp
scas
pop
outsl
xchg
add
sub
push
inc
es
js
call
bts
repz
cltd
and
xor
and
mov
cmp
icebp
jae
insb
stos
mov
loop
je
stos
pop
push
dec
mov
jae
cmp
mov
mov
push
mov
sbbl
shll
push
outsl
cmpl
inc
adc
test
into
cmp
jle
and
jo
enter
imul
and
dec
imul
fs
jl
mov
or
jp
paddusw
sbb
xchg
aad
out
adc
inc
cmp
stos
xor
jmp
sub
sbb
jnp
mov
xlat
ret
mov
or
xchg
or
pop
ljmp
inc
mov
xor
aas
jae
cmp
jb
shr
imul
nop
sub
xchg
ljmp
jmp
xchg
mov
sub
loopne
jmp
add
lock
cmp
loop
xor
dec
cli
inc
es
mov
jnp
fdiv
mov
inc
sbb
inc
sbb
adc
rcrl
jo
jae
aad
iret
jle
sarb
nop
jl
xchg
inc
add
in
rorl
mov
iret
ret
sti
xlat
inc
js
cs
lock
aas
out
sbb
data16
std
cli
mov
fidivl
popa
jmp
jmp
mull
sbb
movsb
push
imul
or
aaa
adc
in
sti
test
in
call
jmp
fnstcw
jo
out
cmp
ret
dec
out
stos
ss
sahf
jno
pop
movb
xchg
add
sub
mov
mov
fmuls
adc
mov
adc
dec
mov
mov
cmp
loope
adc
pop
fs
ficoms
out
dec
xchg
in
lock
movsl
add
pop
push
dec
jns
sub
inc
aad
fistps
push
push
cwtl
and
fstpl
or
cli
mov
fistpll
es
call
sub
jae
movswl
pop
data16
fildll
fnsave
xchg
xor
fmull
adc
pop
sbb
sbb
lret
pop
jge
push
daa
sbb
nopl
ljmp
jne
jecxz
subb
ret
push
hlt
add
inc
lds
stc
xchg
sbb
js
push
mov
pop
in
push
or
mov
std
bound
mov
mov
or
dec
inc
daa
push
leave
pusha
and
xchg
jecxz
mov
mov
add
push
sti
cmp
daa
xor
push
cmp
mov
pop
pop
xchg
mov
add
xor
out
in
inc
fndisi(8087
lcall
popa
or
addr16
fldcw
addb
fidivl
std
xchg
test
mov
mov
mov
jbe
movsb
pop
js
mov
stc
cmp
lcall
cmp
jl
clc
js
jbe
jae
pop
xchg
dec
xor
ja
fcomi
push
jecxz
sbb
std
xor
add
sbb
lock
out
out
push
int
fildll
leave
xchg
mov
cmp
mov
sbb
pop
mov
mov
inc
ja
lods
jle
xor
adc
mov
shrl
leave
ret
mov
rcll
add
mov
sbb
jg
or
sbb
pop
push
adc
test
mov
add
push
adc
popl
pop
dec
enter
xchg
cwtl
pop
clc
out
pop
ret
ja
mov
push
js
insb
fwait
jae
inc
inc
or
fwait
js
aaa
mov
fldt
inc
mov
dec
mov
out
bound
jno
popf
sbbl
sbb
call
daa
xor
and
mov
lret
pop
sub
fbld
out
fwait
dec
xlat
mov
and
xchg
loope
outsb
xor
cmp
push
cmp
divb
xlat
jo
dec
fcmovne
dec
dec
dec
push
inc
into
cmpsl
insb
iret
xor
xchg
mov
movsb
movsb
cmpsl
ror
cmp
cmp
cli
adc
dec
cmc
mov
js
push
inc
sub
jecxz
dec
rcrb
xchg
add
cli
int3
repz
sbb
aaa
fcoml
push
nop
dec
pop
and
je
in
inc
inc
test
xchg
jl
mov
mov
xchg
enter
fwait
jne
outsl
test
out
jno
cmp
pushl
cmpsb
jl
inc
xchg
in
mov
mov
das
notb
leave
daa
out
adc
repnz
lock
pop
ss
or
lret
dec
jmp
ficompl
lods
lret
or
jnp
fildll
jmp
jo
xchg
cmp
sbb
scas
xchg
pop
mov
dec
mov
push
adc
pop
ficomps
pop
std
dec
fs
ds
xor
fnstcw
push
push
xor
jecxz
jns
cmp
sub
jb
fs
repz
shr
mov
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
movsbl
or
mov
addl
sub
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
push
mov
mov
mov
sub
sub
mov
andl
movl
sub
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
call
jmp
mov
andl
mov
addl
mov
adc
mov
mov
and
xor
addl
xor
mov
mov
adc
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
push
test
add
add
add
add
add
add
add
push
cmp
add
add
add
inc
push
daa
sub
inc
lods
xchg
out
add
iret
mov
add
add
pop
push
imul
inc
imul
inc
js
arpl
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
jl
lods
outsl
scas
hlt
add
testl
jbe
xchg
mov
cmpsl
loopne
pop
push
pop
notl
pushf
or
pushf
or
mov
lcall
xchg
pushf
sub
popa
mov
stos
mov
mov
jbe
xchg
mov
pop
pop
cmpsl
jae
pop
clc
push
stc
mov
xchg
cmpsl
test
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
