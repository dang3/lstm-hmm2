push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
xchg
into
lods
adc
adc
int
adc
mov
lea
push
repz
lods
add
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
insb
mov
div
mov
dec
loope
imul
xor
jmp
mov
cld
or
jb
push
hlt
jno
scas
push
outsb
sub
icebp
pop
pop
int3
mov
push
sahf
push
jae
add
adc
push
in
inc
enter
fisttps
add
shrb
in
es
lods
inc
adc
pop
mov
xchg
xor
mov
out
das
mov
in
push
and
cmpsb
cli
stos
inc
les
cmp
mov
movsb
add
in
out
aas
mov
in
pop
xchg
or
mov
leave
ds
xchg
leave
fdivrp
sbb
add
inc
pushf
jno
dec
call
rorb
pop
jb
mov
jecxz
lock
insl
add
test
dec
jbe
hlt
xchg
lods
push
cmc
and
jmp
les
mov
jno
push
stos
imul
jl
aad
xchg
mov
add
cwtl
into
jno
cmp
inc
test
xor
in
lea
mov
fcoms
push
outsb
cmp
jl
inc
test
pop
jae
cs
and
leave
and
aad
mov
gs
shll
cmpsb
xor
repz
ret
sbbb
hlt
xor
pop
inc
inc
in
loop
sub
jo
xchg
and
push
loop
mov
mov
sbb
push
shll
inc
push
insb
pusha
cmp
rcrb
adc
push
pop
enter
ret
push
ss
adcl
xor
or
jno
aam
push
mov
sub
cmp
daa
push
insb
popf
push
inc
cmp
sbb
and
xor
or
pusha
fisttpll
mov
mov
push
out
pop
sub
cmp
shr
dec
fldl
sbb
shlb
inc
xchg
pop
and
xchg
mov
cld
ljmp
pop
repnz
jge
pop
mov
dec
mov
cmp
jle
mov
sub
pusha
lret
push
pop
into
das
jae
sub
adc
aad
push
xchg
mov
movsb
and
fwait
ret
cmp
xchg
test
adc
xchg
ret
jmp
js
push
and
adc
arpl
es
xor
in
mov
enter
sbb
dec
pop
push
es
mov
popf
inc
xor
push
inc
cli
mov
or
stos
fiaddl
into
lods
cmp
hlt
arpl
out
fsubrs
dec
test
or
xchg
lods
test
jae
xchg
or
inc
jo
mov
enter
push
mov
and
mov
ds
and
jp
iret
add
cmc
xor
and
sahf
jo
adc
inc
mov
scas
int
or
fcompl
xchg
mov
sub
jp
dec
pushf
push
push
xchg
pop
jo,pt
inc
sbb
and
aad
jns
cmp
inc
hlt
cmpl
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
pop
sarb
adc
adc
adc
adc
inc
and
int
call
adc
and
fsts
push
test
fcmove
jns
rep
mov
sbb
pop
imul
inc
fs
fnstenv
sub
sahf
mov
aad
arpl
ss
xor
adc
dec
sti
adc
adcb
pop
nop
dec
loopne
imul
cmp
sub
fisubrl
adc
in
mov
pop
imul
mov
xchg
sbb
lods
in
inc
in
or
into
lahf
adc
hlt
lret
and
bound
daa
sub
mov
and
push
push
adc
loop
jl
sbb
sbb
push
dec
xor
ds
inc
sahf
test
nop
ret
fsubl
sbbl
pop
rolb
pop
sub
cmpsl
dec
push
lock
push
movq
sbb
cltd
dec
xor
lea
push
test
addl
mov
push
ret
push
test
and
mov
jg
xlat
push
jge
jmp
push
shrb
bound
xchg
sub
mov
cmp
scas
inc
pop
ret
jns
sbb
repz
subb
or
dec
jg
and
test
push
inc
mov
out
lahf
ljmp
mov
push
mov
jne
inc
or
adc
movsb
sub
push
cmp
roll
movsl
sbb
icebp
pop
xlat
js
popa
cltd
stos
cmp
xchg
pop
repnz
addl
jle
loop
xchg
adc
insb
inc
dec
adc
lret
loopne
fs
repnz
mov
loopne
xchg
inc
mov
pop
lds
cmp
jo
mov
les
cmpsb
leave
xchg
adc
int3
xor
adc
jae
push
adc
pushf
adc
lret
and
jnp
add
jmp
lret
sbb
daa
sbb
aas
aam
out
pusha
pop
mov
xlat
and
and
xchg
mov
sbb
das
and
jecxz
mov
or
daa
lock
je
push
in
fisttpl
cli
call
sub
xchg
or
cmp
adc
sbb
test
bound
cmp
xchg
pop
xchg
out
ret
aas
scas
mov
inc
push
stc
js
pushf
sub
or
jmp
test
push
imul
ret
aad
or
mov
cmp
xor
mov
hlt
jge
lods
mov
int
cmpsb
dec
jne
and
add
add
cwtl
imul
aas
cli
cmp
dec
cmpsl
fisttpl
jno
mov
xchg
and
test
adc
xor
push
xor
ret
inc
leave
push
xchg
pop
sbb
rcrl
rcll
inc
jns
adc
push
xchg
mov
adc
push
incl
push
mov
dec
mov
fbstp
dec
notb
cmp
nop
sarl
jno
inc
das
fs
mov
iret
fimuls
xlat
hlt
jl
adc
hlt
arpl
push
jl
out
or
inc
pop
mov
and
xchg
movsl
cwtl
adcl
repnz
xor
mov
inc
cld
or
xlat
test
jl
insb
push
adc
in
adc
sub
jno
inc
add
notl
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
pop
sub
int
adc
sub
cwtl
popa
add
ret
addr16
daa
std
in
frstor
inc
fisubrl
push
lahf
cwtl
sbb
push
mov
push
adc
dec
adc
paddsb
ficompl
push
xor
inc
and
in
popf
mov
or
jmp
mov
pop
mov
negl
lahf
leave
les
movsb
testb
dec
mov
sbb
clc
enter
gs
ds
dec
or
rol
push
jae
push
inc
decb
aad
pushf
jae
xchg
leave
imul
mov
mov
lods
mov
dec
xlat
mov
out
push
out
mov
pop
loop
aam
shl
sbb
call
xchg
xchg
pushf
or
rorl
push
ds
pop
icebp
pop
les
mov
adc
mov
push
call
stos
xchg
sbb
mov
sbb
dec
cmc
leave
jl
les
mov
xor
xorb
push
xchg
sub
xor
jp
push
loope
xchg
mov
cmp
ljmp
inc
paddd
xchg
cwtl
lock
andl
inc
mov
cmp
gs
movsb
or
add
jne
xor
into
nop
imul
aad
andl
sub
dec
push
imul
xor
cmp
cli
fcmovnu
fisubl
and
cmp
mov
out
int3
or
ds
cmpsl
mov
lcall
xchg
fcoms
adc
jl
cmp
stos
jae
pop
out
cmc
mov
mov
jbe
aaa
jbe
xchg
adc
xor
je
adc
mov
movsl
inc
insl
mov
mov
mov
int
dec
inc
mov
or
and
ret
ljmp
sarb
xor
or
mov
mov
add
shll
cmpsl
mov
jg
sbb
stos
movsl
jo
pop
mov
pusha
test
pop
sub
mov
arpl
xor
dec
sbb
roll
ret
fsubrp
mov
iret
lahf
sub
iret
sub
pop
fwait
xor
stos
push
lods
cmp
xor
jle
lret
lods
mov
pop
cltd
jp
clc
jae
cmp
cs
pop
dec
xchg
push
and
addr16
cmpsb
push
and
into
add
cmp
sbb
jo
ret
cmp
daa
stc
pop
pop
arpl
push
mov
jns
in
jbe
sbb
fsubs
sbb
jns
stc
fldt
cwtl
push
insl
add
pop
add
test
icebp
shl
imul
dec
les
and
inc
mov
ret
xchg
fcos
jns
xchg
push
xorb
jmp
dec
loope
sub
out
ja
ss
loope
mov
scas
divl
push
rcr
mov
leave
pop
bnd
pop
mov
dec
dec
leave
test
fistpl
add
jecxz
mov
test
outsl
bound
arpl
enter
jb
jmp
pop
mov
jno
lahf
add
rcll
push
je
test
inc
test
repnz
cmc
push
notl
in
adc
popa
xor
xchg
ja
icebp
fcmovnb
sub
pop
jbe
int
xor
cmp
mov
mov
pushf
lcall
cmp
lods
lea
mov
orl
mov
or
and
xor
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
jp
cmc
pop
cmp
int
jmp
fs
xor
fdivrl
inc
mov
jne
cmpb
and
imul
dec
dec
lods
dec
xchg
fidivrl
divb
sbbb
mov
and
leave
andb
imul
jbe
gs
pop
sbb
and
or
hlt
cwtl
mov
mov
scas
aaa
mov
movsb
sbb
jno
jge
mov
push
add
int
or
cmp
jle
leave
aam
pop
rorb
sub
cmp
shll
movsw
std
mov
leave
or
popf
sub
and
or
jo
mov
push
out
inc
aas
mov
jbe
lea
xchg
les
insl
sub
push
xchg
cmpsl
jmp
cmc
nop
int3
ret
dec
in
sub
sub
cmpsb
mov
lcall
pmulhuw
xchg
js
jno
outsl
or
mov
aam
pop
pop
in
add
mov
jmp
scas
add
cltd
out
ljmp
loop
aad
jns
test
lods
rol
cmp
push
mov
dec
sahf
lret
sar
mov
and
cltd
es
mov
mov
jmp
cmpl
cli
loope
stos
cld
shl
push
in
xadd
loopne
hlt
cwtl
insl
shr
fsubrl
in
notb
mov
xchg
mov
pop
xchg
loop
add
add
xchg
iret
inc
imul
xchg
cmpsb
sub
sub
insb
in
popf
jne
fnstsw
in
cmpsl
sbb
pop
add
inc
cmp
cmc
lahf
repz
adc
dec
or
adc
sbb
xchg
mov
mov
sub
inc
push
mov
jo
mov
adc
ljmp
lods
xchg
aam
ja
jns
dec
cmpsl
mov
mov
mov
push
imul
imul
sbb
sub
cs
xor
mov
fsubrs
pop
cmp
add
push
xchg
xchg
sahf
xchg
aas
jo
push
pop
ljmp
addr16
or
adc
insl
pop
mov
aas
push
xor
and
arpl
jo
inc
cwtl
adc
jno
pop
xor
ja
sub
xor
fdivrs
cs
in
sub
jns
mov
test
cmp
imul
data16
mov
cmpsl
das
into
lds
setge
movsb
rorl
cs
mov
cmp
pop
movsl
clc
lahf
sahf
dec
cmp
add
xor
xchg
shl
mov
xor
mov
xchg
sub
insb
gs
mov
ret
icebp
mov
in
call
xor
and
or
sub
mov
add
add
sarb
inc
test
fidivrs
test
enter
cli
rorb
pop
pop
sbbl
movsl
sahf
fsubl
int3
sbb
rcl
push
xchg
flds
pusha
adc
shlb
cwtl
xor
addr16
rorl
or
xchg
add
in
pop
mov
popa
or
mov
lds
es
stos
bound
mov
xor
pop
into
pop
xor
fnstsw
shll
lds
std
mov
icebp
mov
hlt
mov
and
test
mov
pusha
add
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
loopne
in
notl
adc
adc
adc
xor
mov
inc
int
loope
jmp
clc
bound
in
jnp
or
js
or
imul
lock
imull
push
leave
out
dec
lea
sahf
out
loop
sar
scas
nop
push
adc
push
fwait
jl
insb
sti
push
dec
push
outsb
aad
jns
adc
scas
mov
call
mov
js
cmp
fcoml
mov
mov
xlat
cld
xchg
out
testb
in
push
aad
fdivrp
movnti
sarl
ss
pop
add
mov
xor
and
test
pushf
jl
arpl
sub
in
das
and
iret
or
inc
mov
js
out
repz
dec
adc
jl
subb
xchg
ljmp
adc
push
mov
sbb
push
lret
test
mov
jl
stos
mov
xchg
fdivs
or
imul
dec
pusha
mov
push
fdiv
add
sub
mov
pop
jl
mov
mov
pop
sub
fadd
or
push
jmp
xor
gs
sbb
cmpsb
cld
cli
pop
cmp
push
nop
scas
mov
clc
and
std
mov
lods
dec
cmp
cltd
mov
jbe
mov
lret
jb
cwtl
lret
pop
sub
xchg
jmp
xlat
or
jno
xchg
sarl
add
fs
cmp
addr16
mov
icebp
lods
nop
jg
rol
out
stc
aas
mov
aad
nop
cs
mov
lret
xor
sbb
mov
adc
dec
add
js
mov
dec
sbb
popf
fbstp
cld
sbbl
rcrb
hlt
jecxz
pop
insb
or
addr16
das
enter
sbb
movsl
jp
ljmp
mov
or
pop
cmp
xor
pop
fimull
loop
sbb
idivb
push
jl
dec
fidivrl
jae
xchg
and
call
arpl
pop
int
mov
outsl
ja
sbb
scas
addb
jmp
fldcw
inc
lods
andl
and
cli
in
loope
adc
sub
outsb
xchg
lds
loope
scas
aam
iret
jp
xchg
daa
cld
dec
out
ret
and
xchg
mov
adc
push
rcrb
add
mov
mov
sub
mov
sub
cmp
lcall
cmp
cmp
jle
jg
pop
mov
cmp
in
cmpsb
jns
mov
rcr
xchg
fsubl
outsl
xchg
or
dec
ret
cli
leave
sub
leave
loop
pop
in
hlt
rolb
dec
test
cmp
mov
cmp
inc
or
jge
into
push
jae
gs
out
mov
or
jmp
rclb
xchg
xor
mov
push
in
jnp
jb
decl
mov
int
dec
in
mov
or
xor
sub
pop
sbb
dec
mov
lahf
mov
jb
inc
test
cld
xlat
mov
jbe
stos
xchg
mov
sub
pop
sbb
loopne
mov
cmp
mov
sub
std
xchg
and
inc
add
out
jae
adc
pop
inc
gs
inc
cmp
enter
fneni(8087
sbb
stos
inc
mov
and
dec
in
cmpl
mov
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
sub
rep
cmpsb
out
adc
int
adc
js
stos
sbb
loope
inc
sbb
mov
mov
lods
movsb
and
sbb
lods
mov
and
out
addr16
movsb
sbb
inc
rorb
imul
push
add
push
stos
dec
cmp
inc
leave
pop
mov
cmp
mov
and
fadds
adc
mov
cld
pusha
jl
out
popf
dec
adc
scas
sbb
sarl
fsubrl
dec
js
je
in
mov
cld
mov
pushf
inc
imul
lods
mov
test
or
mov
lods
les
pushf
sbb
xchg
movl
aas
pop
lret
add
mov
aad
push
pop
adc
stos
loopne
sbb
xchg
movsl
pop
lcall
pushf
sbb
mov
mov
popa
xchg
repz
xor
inc
mov
mov
daa
or
xchg
frstor
xchg
jb
sbb
or
xor
xrstors
in
and
loope
aam
fcomip
fisubrl
add
ret
icebp
lret
dec
or
xor
push
dec
xor
jns
out
js
xchg
sbbl
add
jg
mov
or
in
adc
push
rcrl
jp
or
fstpl
mov
fdivrl
insb
addr16
push
pop
push
bound
insb
pop
mov
pushf
mov
sub
xchg
cmc
insl
test
ss
and
or
outsb
inc
arpl
out
cmc
arpl
testb
lods
ficompl
movl
psllq
sub
xchg
xchg
jl
mov
subb
add
popf
xchg
psubsb
jae
out
mov
lahf
shrb
mov
dec
stos
iret
pop
and
adc
or
lock
push
lds
jo
in
mov
pop
and
lea
call
pushf
loop
or
adcl
outsb
gs
mov
cmpsb
dec
sbb
ret
pushl
add
loope
jnp
fldcw
sbb
out
fs
mov
ljmp
arpl
pusha
mov
cmp
sarb
sahf
sbb
mov
testb
sbb
xchg
pop
shl
push
sub
pop
cmp
push
shrb
sbb
push
lcall
test
aaa
pop
jle
ja
das
pusha
in
jmp
xchg
jb
pop
sub
xchg
inc
into
loop
sub
cmp
and
hlt
mov
sbb
imull
xor
inc
lock
mov
aaa
sbb
sub
psllq
push
add
bound
xor
push
xchg
mov
test
fcmovnb
bound
bound
push
inc
sbb
sub
das
loope
sbb
or
test
and
xlat
fs
jl
sub
and
pop
imul
out
and
aad
pop
sbb
mov
cmpsb
add
aaa
imul
sub
enter
xchg
loopne
test
test
push
inc
and
mov
je
mov
ds
out
or
mov
cwtl
test
movsl
or
mov
aas
fisubrl
out
pop
push
jmp
mov
cmp
stos
ljmp
repnz
mov
and
pop
lock
mov
push
sbb
jge
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
adc
in
adc
int
adc
loope
out
outsb
jmp
mov
jmp
push
das
mov
mov
gs
mov
xor
leave
dec
and
hlt
jp
ljmp
mov
dec
call
mov
xor
loopne
push
sti
in
push
sbb
push
jne
lret
lock
sub
test
lds
popa
mov
cmc
shll
shlb
pop
jne
xor
mov
sbb
ljmp
nop
fsubl
jmp
in
mov
push
sti
and
cli
add
fsubrs
xchg
jae
xchg
push
sub
dec
pop
lock
dec
leave
stos
inc
ja
fidivs
je
lock
adc
fdivrs
aaa
xor
jns
mov
push
hlt
jp,pn
push
sbb
push
jp
aaa
pop
or
icebp
mov
mov
jl
lret
cs
daa
lahf
sub
dec
pop
outsb
sbb
shr
dec
addr16
add
pushf
adc
xor
jnp
insl
js
dec
lock
adc
movsl
jae
aaa
lret
xchg
scas
push
std
mov
mov
dec
repnz
outsl
mov
xlat
into
pushf
adc
push
in
pop
lret
sbb
outsl
imul
movb
sub
fwait
cmp
inc
movb
lret
xchg
fwait
rolb
into
out
push
pushf
stos
mov
in
lahf
movsl
pop
pop
lret
cli
dec
jg
mov
repz
aas
lcall
xor
int3
movsb
lahf
fcmove
pop
aaa
jbe
dec
out
mov
arpl
mov
dec
lock
shll
pop
shl
xchg
dec
mov
insl
fildll
repnz
inc
jns
aad
into
out
fimull
lcall
mov
mov
jbe
adc
inc
and
sub
addr16
test
mov
gs
es
stos
cld
aas
jle
je
jo
call
pop
dec
cs
push
insb
cmp
adc
iret
pushl
and
push
and
mov
sarl
in
mov
pop
insb
outsb
mov
inc
push
xchg
fwait
or
mov
xor
jecxz
add
insl
enter
xchg
lahf
shr
add
adc
loopne
xlat
adc
mov
and
push
xor
cmpsl
push
mov
daa
lds
add
outsl
mov
pushf
test
push
sub
bound
or
jne
into
fnsave
js
in
dec
inc
mulb
sub
xor
xchg
nop
stos
gs
xchg
add
mov
mov
icebp
or
test
xor
or
xor
and
out
xchg
mov
dec
adc
xchg
or
or
sub
mov
call
jecxz
add
cmpsl
mov
dec
neg
adc
outsb
in
xorb
jno
pop
inc
clc
pop
mov
aas
insb
lea
outsl
xor
xor
nop
orl
out
out
pop
subl
sub
add
mov
xchg
ror
out
pop
pop
ret
dec
push
push
xchg
gs
add
cli
aaa
addr16
xor
push
push
mov
repz
mov
ds
rorb
jmp
loopne
vucomiss
add
xlat
mov
movl
mov
movl
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
fdiv
ljmp
adc
adc
mov
mov
lahf
call
insl
sub
or
mov
cwtl
mov
xchg
test
repnz
nop
pop
fs
cmp
mov
imul
jmp
repnz
xchg
repnz
lock
mov
das
aam
test
hlt
mov
out
rol
sub
sahf
cmp
inc
loop
mov
cltd
out
lock
aad
sub
sub
repnz
xchg
adc
jmp
test
stos
sahf
jnp
insl
enter
adc
ficoml
aaa
fisubs
lea
mov
fisttpl
push
jno
lods
push
push
xchg
cmp
scas
int
idivb
das
or
aas
push
std
insb
fs
das
out
or
mov
mov
or
in
jl
lods
imul
jmp
pop
adc
test
cld
jg
mov
add
add
popf
mov
jle
imul
sub
mov
daa
xchg
es
push
add
adc
xchg
inc
stos
mov
inc
dec
xor
xorl
jmp
ficomps
in
jg
jecxz
or
mov
idivl
xor
dec
movl
xlat
pop
mov
mov
loopne
orb
out
out
mov
aas
out
jno,pt
jo
aad
punpckldq
cmpsl
jmp
shl
inc
push
adc
lods
xchg
in
jno
and
jno
mov
add
ret
pop
pop
loop
test
cmpsb
nop
aaa
loop
inc
adcl
inc
outsl
cmp
ret
dec
das
mov
out
mov
cmp
shll
sbb
sbb
inc
mov
es
in
xchg
dec
sbb
push
fistpll
xor
movsl
mov
popf
mov
imul
ds
xchg
js
leave
push
lret
nop
mov
cmp
inc
xchg
sti
xchg
fwait
mov
outsl
sahf
ret
lret
gs
mov
loope
cmp
sbb
mov
je
jbe
rclb
inc
jmp
pop
push
xor
insl
fistpl
jnp
push
push
dec
and
divl
aas
aaa
je
cmp
out
mov
xchg
add
insl
xor
cmp
sahf
rcll
mov
cmp
icebp
dec
or
outsb
and
sbb
imul
fwait
mov
lds
jmp
fdivl
jb
inc
sub
arpl
and
ja
dec
cmp
xor
cmp
lret
in
lds
fmull
jns
pop
and
push
aas
lcall
roll
sub
jb
aas
in
lds
mov
adc
inc
inc
dec
clc
lea
push
xchg
mov
jnp
addl
xchg
int3
pop
aam
xchg
push
out
add
xor
repnz
ja
orb
push
push
adc
add
imul
ret
jle
mov
pop
mov
mov
es
add
jecxz
sub
add
sbb
hlt
test
test
pop
jb
xchg
dec
lret
inc
xlat
mov
into
pusha
inc
mov
stc
push
test
mov
dec
add
sub
sbb
rorb
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
push
ljmp
int
adc
loope
call
add
push
xor
lret
mov
rcrl
call
clc
loopne
cmpsl
xlat
jg
lret
push
shrb
pop
and
xor
dec
jmp
cs
mov
fwait
push
out
sub
jae
mov
ficoml
test
es
imul
mov
jecxz
cwtl
mov
adc
dec
scas
dec
sub
adc
push
inc
xor
stos
push
dec
popf
in
stos
repz
out
enter
fsubr
cmp
popa
jno
and
adc
cmp
call
out
inc
dec
jne
cmp
mov
mov
adc
loopne
neg
cmc
jg
mov
mov
add
loop
jns
push
adc
fs
pop
mov
clc
in
popa
adc
xchg
test
mov
sbb
in
orb
mov
aad
push
iret
push
fildll
jecxz
lret
or
xor
mov
inc
xor
loope
sub
out
int3
nop
mov
or
and
push
hlt
add
test
push
cmpsb
xor
lret
sub
std
jg
movsb
loop
lcall
and
cmp
mov
xchg
mov
and
fcompl
mov
test
jecxz
fs
and
inc
or
lock
push
jge
std
adc
rclb
mov
imul
rorb
mov
inc
sub
push
and
inc
jo
add
xor
xor
pop
aad
sbbl
push
jp
jecxz
mov
ficompl
fimuls
jne
jb
xor
test
xor
sti
xor
imul
sbb
fstpt
mov
shrl
sti
xor
dec
mov
mov
inc
xor
mov
inc
mov
jle
pusha
adc
cs
in
popa
inc
adc
or
test
xchg
jnp
pop
cmp
sbb
ret
mov
adc
xchg
cmp
inc
aaa
push
test
shll
pop
lods
loopne
stos
jmp
fs
mov
hlt
push
dec
insb
in
adc
inc
push
test
ss
inc
bswap
rcrb
sub
add
mov
push
scas
incl
add
in
add
mov
push
jno
and
jl
stc
cmpsb
fnsave
scas
in
nop
and
lods
cmp
adc
sub
xor
inc
jns
push
popf
test
std
dec
mov
stc
fadds
fmull
cmp
enter
ljmp
lods
aad
and
xor
sbb
inc
push
leave
out
popf
je
xor
stos
pop
sub
xor
inc
icebp
adc
icebp
and
clc
dec
out
stos
test
and
xchg
ret
or
inc
xor
xor
sbb
test
pop
push
jle
in
sbb
push
shlb
pop
scas
xchg
not
jae
jno
in
mov
fildll
stc
dec
mov
pop
adc
sub
cs
std
aaa
rorl
cmc
lods
sub
mov
add
xchg
lods
push
jae
subb
xor
sub
jmp
mov
shl
jmp
fmuls
sbb
and
stos
insb
jge
adc
int
adc
sbb
xor
loope
ss
mov
scas
or
push
das
test
aad
adc
repnz
or
lret
lods
jle,pt
fildl
jns
loop
push
out
ja
cmp
aad
call
adc
or
test
ficompl
fs
sub
in
cwtl
add
adc
arpl
xchg
mov
lcall
cmpsb
cld
mov
mov
mov
lea
in
sbb
dec
das
add
xchg
mov
jle
and
dec
popf
inc
hlt
mov
aad
lret
jb
or
push
push
jo
xor
mov
mov
dec
lret
call
mov
jle
xlat
ret
movsl
cwtl
fldt
sub
dec
arpl
mov
push
push
sbb
pop
mov
out
sti
inc
push
push
sub
loopne
aam
testl
push
lds
push
fnstenv
xor
ss
out
sub
dec
mov
xor
xchg
andb
cmp
ljmp
cmp
mov
mov
adc
cltd
ss
inc
mov
adc
fimuls
sub
sbb
nop
or
lods
mov
cmp
cmp
inc
lret
test
add
lock
push
xor
loope
outsl
add
cs
sbb
bound
dec
popa
xchg
daa
adc
incl
mov
jns
inc
sub
lea
jns
dec
push
xor
xor
sbb
mov
jp
cld
pop
dec
in
ss
into
mov
adc
add
xchg
inc
xor
cs
mov
aas
pop
sbb
ret
dec
xchg
mov
push
js
bound
sbb
adc
or
sbb
add
add
inc
ss
dec
cwtl
or
cmp
mov
xchg
repnz
xlat
sbb
push
adc
sbb
xorl
leave
out
movsl
jb
movsb
jns
sub
or
mov
mov
jnp
adc
sbb
push
mov
icebp
sahf
mov
and
xlat
dec
test
hlt
popa
fistps
rol
add
xchg
jl
mov
lea
xor
adc
cs
jg
and
adc
pop
inc
fs
push
dec
sub
and
mov
sahf
sbb
mov
cmp
cwtl
cmpsb
xchg
inc
sar
fisubrs
sti
dec
shrb
cmc
aad
dec
mov
lods
jbe
or
fs
and
or
xchg
dec
mov
sub
xchg
ret
fwait
inc
jb
push
mov
mov
repnz
xchg
push
mov
jae
cmp
fs
movsb
nop
movsl
movl
test
mov
ficompl
xchg
fs
loope
sbb
sub
push
mov
outsl
push
je
dec
jbe
sbb
sub
push
adc
mov
xor
cs
popa
jns
ror
sahf
prefetch
push
sub
popf
mov
mov
adc
and
xchg
add
jbe
cwtl
inc
hlt
mov
inc
inc
jnp
cmp
cltd
insl
sbb
in
popa
out
jns
cmp
add
aaa
sub
inc
mov
arpl
sub
mov
add
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
mov
icebp
stos
xor
adc
int
adc
push
cmp
inc
popf
ret
pushf
jle
in
sbb
repnz
pop
adc
iret
fbld
and
cmp
xchg
xchg
or
stos
lods
fs
orb
push
and
xor
mov
enter
push
jbe
xlat
adc
insb
repz
mov
clc
pop
mov
pushf
cli
js
inc
outsb
nop
inc
cmc
sub
add
xchg
inc
push
out
mov
loope
in
les
xchg
out
scas
into
fisubrs
les
mov
jns
std
xchg
xor
pop
cwtl
pop
jge
icebp
push
lods
rcr
jp
pop
sub
mov
cmp
rorl
fsubrl
cmp
cwtl
aaa
sbb
call
lahf
aaa
sub
or
into
mov
scas
loope
push
sub
loopne
shll
xchg
negb
ret
add
mov
call
call
fistps
jecxz
push
aam
jp
in
fsubrs
out
adc
in
push
cltd
mov
mov
hlt
push
xchg
xor
nop
xchg
or
push
dec
out
mov
dec
popf
cld
shll
adc
mov
shrb
je
movsl
inc
push
es
cmp
or
mov
push
push
icebp
jo
jg
sarb
push
push
push
je
sbbl
cmp
jbe
inc
cltd
xchg
inc
sarb
mov
cli
clc
sub
jae
jmp
scas
pop
add
cmp
pop
cwtl
cmpsb
imul
movsl
sbb
mov
or
fwait
arpl
add
adc
sub
fldcw
jnp
pop
lods
and
push
xor
xchg
ljmp
mov
jmp
push
xchg
out
mov
inc
out
adc
std
fidivs
and
fcoms
hlt
mov
mov
adc
mov
mov
movsl
enter
in
jo
push
mov
jne
movsl
add
inc
adc
arpl
and
sbb
cltd
stc
fnstsw
mov
fdivs
into
lea
xor
and
xchg
adc
out
popf
pop
pop
inc
je
adc
repz
pop
sub
into
cwtl
jmp
pop
lea
mov
fisttpl
shr
push
lock
add
xchg
dec
pop
and
scas
jae
xchg
cmp
sahf
int3
xor
les
int3
icebp
std
dec
dec
pop
test
test
xchg
mov
and
mov
mov
out
or
sub
test
or
xchg
cmovno
fwait
mov
cli
mov
in
imul
lret
call
test
in
stos
pop
pusha
add
jns
and
sbb
dec
or
xchg
mov
loope
cmc
insl
mov
dec
out
add
addr16
test
pop
scas
cltd
pop
dec
pop
out
sbb
xor
sarb
inc
cmp
xchg
sub
mov
push
arpl
mov
fwait
push
out
lods
fldcw
dec
insl
mov
adc
gs
addb
cmp
test
cmpxchg
inc
cmp
sub
test
xor
fs
inc
xchg
lods
shlb
rcrb
cwtl
add
jno
nop
push
jg
mov
and
or
mov
mov
imul
and
mov
ljmp
adc
rorb
ret
cld
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
mov
les
adc
adc
adc
pop
xor
xchg
mov
pop
sbb
mov
ret
stc
push
jp
hlt
sbb
subb
or
shll
les
mov
mov
popa
ret
jno
sub
jmp
push
sbb
xchg
push
push
fs
sub
mov
sbb
lret
aad
sub
ds
lds
or
jo
mov
mov
fimuls
inc
xchg
imul
shlb
imul
gs
xor
cld
jge
lock
xchg
sub
xchg
push
push
in
mov
adc
mov
pop
pop
dec
ss
pop
xor
iret
leave
pop
es
gs
jbe
pop
jnp
adc
ss
jae
xor
push
loope
ret
lret
jbe
imul
dec
inc
les
sub
arpl
inc
outsb
outsl
jbe
mov
sub
mov
fcomp
jmp
pusha
push
imul
notb
and
and
daa
or
and
or
sbb
ds
jae
decl
push
fstpt
or
movsb
mov
es
fsubr
push
jbe
jnp
adc
push
and
pop
je
or
sub
pop
out
cmp
hlt
clc
cmp
outsb
ret
pop
negl
and
test
loopne
and
jnp
jae
cmp
push
pop
xor
jl
mov
fldcw
jo
loope
popf
mov
mov
sbb
leave
hlt
push
jmp
mov
es
add
lret
repz
sbb
ret
aam
inc
addr16
leave
test
js
lds
mov
push
nop
dec
push
ja
pop
dec
mov
mov
adc
pop
xchg
xchg
adcl
mov
das
inc
add
xchg
lea
stos
dec
popa
movsl
mov
inc
in
jo
jb
pop
jmp
imul
cld
inc
sub
incb
and
pop
movsl
push
bound
rcl
push
mov
test
push
fstps
fists
mov
and
cmpl
or
jg
dec
cmp
not
dec
add
or
add
sub
pop
sti
jbe
mov
xchg
push
test
mov
rcl
fidivrl
jbe
xchg
sti
dec
or
pop
fildl
int
push
sub
mov
push
jb
xchg
pop
les
sahf
insb
mov
faddp
fnstenv
leave
popa
pop
out
pop
xchg
mov
push
cwtl
insb
das
addr16
pop
push
mov
jnp
in
popf
pop
les
mov
cld
push
mov
into
aad
add
adc
inc
inc
dec
out
test
xor
in
inc
daa
mov
sub
pop
lret
fwait
test
lcall
fwait
push
test
mov
mov
scas
sub
mov
push
mov
mov
pop
or
inc
out
cmpsl
aam
mov
in
fwait
cld
bound
test
mov
mov
xchg
cmp
scas
push
pop
mov
pop
les
leave
jae
aas
cmp
imul
push
mov
inc
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
ja
mov
adc
adc
es
xor
cmp
pop
shll
xor
mov
xorl
stc
stos
mov
jne
shl
scas
mov
xchg
ss
jle
sbb
push
sub
jb
es
pusha
xchg
or
loop
mov
mov
xchg
repnz
ds
jle
arpl
fcoml
data16
fnsave
aaa
cld
dec
jmp
sbb
push
insb
mov
lret
fisubs
iret
pushf
push
mov
mov
call
jns
test
xchg
lea
push
cmp
pushf
mov
mov
inc
add
adc
ffreep
arpl
jge
push
dec
loopne
jecxz
sbb
xor
mov
iret
pushf
enter
fwait
aas
cltd
inc
aaa
ret
ret
dec
dec
and
mov
dec
sub
fs
gs
lods
jno
inc
push
divb
rcll
lret
mov
jl
and
nop
sarb
and
and
lods
mov
xor
inc
sub
or
les
loope
jns
lahf
push
repz
sbb
scas
mov
mov
mov
loop
lock
add
and
fiadds
cmc
cwtl
test
fbstp
mov
cltd
lods
push
mov
enter
mov
jo
pop
call
jb
lock
bound
ss
jmp
mov
movsl
push
ljmp
les
cmc
mov
decl
fisttps
roll
shll
inc
gs
pop
jno
iret
call
popa
push
lret
sub
test
adc
and
into
mov
lods
insb
mov
dec
add
scas
dec
cmp
fldt
lret
jecxz
pop
loope
xchg
push
jbe
or
pushf
fidivs
sti
xor
loopne
sbb
lds
out
cltd
and
sbbb
in
xchg
repz
pusha
mov
leave
mov
fisubrs
cwtl
mov
push
fdivl
test
sub
cmp
into
rclb
jno
pusha
testl
ss
jge
sbb
icebp
push
adc
popa
in
lock
mov
push
mov
cmp
inc
mov
insb
cmpsl
cli
sub
mov
mov
add
fisubrl
pop
sbb
jae
mov
icebp
push
jne
pop
push
push
push
pusha
ds
ss
andb
mov
cmp
pmuludq
push
xchg
cwtl
push
in
pop
daa
stc
je
adc
jb
rcrl
fisubrl
xchg
inc
call
not
push
js
fsubr
jnp
cmpsl
cmc
repz
out
xlat
mov
jne
pusha
pop
cmp
mov
xchg
dec
jo
or
sbb
push
icebp
adc
into
inc
push
sub
pop
dec
push
in
scas
mov
cltd
stos
mov
arpl
add
test
dec
arpl
mov
mov
pop
imul
lock
push
cli
stc
ficoml
dec
mov
dec
loop
iret
mov
cmp
in
jmp
lahf
out
movsb
mov
std
sub
sbb
sbb
mov
mov
ds
decl
or
popf
mov
mov
add
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
xor
jle
mov
adc
sbb
out
mov
xor
rcrl
mov
bound
mov
xchg
into
scas
inc
ljmp
hlt
mov
jo
cmp
stos
xchg
aam
mov
cmp
pop
mov
loopne
cli
ret
jmp
adc
push
adc
out
adc
cmp
scas
or
pop
je
add
xor
pushf
pop
std
fs
mov
ret
push
ss
ret
out
dec
or
popa
add
push
nop
das
mov
idivl
fsub
push
push
pushf
pop
lcall
imul
sbb
lods
mov
test
pop
popa
lds
adc
aaa
push
push
inc
daa
xchg
xor
dec
push
jl
cmpsl
jecxz
inc
fsubr
or
mov
mov
cmp
scas
imul
jnp
sbb
cmp
fmul
sub
pop
cmp
adc
add
idivl
sbb
insb
push
or
or
mov
pop
notb
icebp
testb
dec
cmpsb
mov
add
mov
push
shrl
mov
sub
outsl
data16
lods
cs
out
or
lahf
adc
arpl
or
scas
repz
cs
sti
push
lds
mov
nop
testl
push
dec
sbb
subb
lcall
out
insb
insb
loop
mov
or
push
pusha
in
add
out
mov
lret
loope
inc
or
jb
and
push
les
adc
or
mov
adc
into
xor
sub
pop
jp
popf
neg
nop
adc
add
in
pop
les
aaa
outsb
out
add
mov
mov
mov
xchg
mov
push
lret
in
push
repz
ljmp
mov
jo
inc
inc
test
leave
arpl
into
aad
cltd
shlb
fsts
sar
xchg
mov
repz
outsb
or
mov
add
jne
in
ss
jp
sti
or
aad
jno
adc
lcall
inc
jnp
jecxz
xchg
dec
sbb
dec
loopne
xchg
in
dec
dec
movsl
mov
stos
sub
fmul
sbb
xor
jmp
mov
fidivrs
loop
or
orb
dec
push
jbe
inc
jmp
adc
nop
or
fiaddl
jmp
out
iret
sbbl
aas
sbb
out
inc
and
dec
js
pop
popa
aad
lods
sahf
sub
ret
inc
ret
or
movsb
jnp
inc
dec
sti
mov
loope
jg
sub
jp
pop
scas
lock
push
lds
push
stos
or
jne
sub
mov
mov
dec
cmp
clc
or
in
cmpsb
mov
jae
mov
in
ja,pn
jge
cmp
add
arpl
stos
mov
lret
sub
filds
sbb
mov
rorb
outsb
cmc
mov
add
repnz
add
jmp
ja
outsb
stc
aas
stos
aas
lret
insl
jecxz
scas
push
cmc
mov
cmp
inc
loope
lock
pop
jne
dec
cmp
stos
bound
fwait
mov
bound
cmp
add
iret
xor
sbb
jns
icebp
push
or
and
imull
fcompl
push
add
fmuls
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
sbb
mov
adc
adc
adc
jecxz
hlt
std
repz
mov
jp
loop
dec
jb
jl
push
pushf
mov
in
inc
in
imull
add
gs
fldenv
mov
movsb
dec
xchg
xchg
inc
xlat
cmc
into
fmull
xor
jo
test
push
movsb
and
dec
vpaddq
movsl
inc
sbb
pop
push
icebp
test
int3
inc
fdivrs
jne
and
mov
stos
addr16
cmpsb
xor
in
popf
push
fiaddl
ds
sub
loop
mov
stc
loop
dec
subb
mov
int
jbe
inc
cmp
dec
mov
push
and
cmp
inc
inc
movsb
xchg
pop
push
in
mov
jge
xlat
mov
in
xor
lahf
and
fdivs
inc
test
jl
cmovge
mov
pop
test
or
inc
les
add
fs
cs
popf
outsb
push
paddb
sarl
or
jg
fisttps
pop
out
cmp
insb
or
inc
arpl
and
enter
lods
lods
push
xlat
insb
lret
mov
mov
and
cmpsb
xchg
mov
cmpb
pop
sbb
add
xchg
call
cmp
fdivs
push
popf
aad
lea
outsl
sub
in
pop
aam
into
stos
repz
mov
cld
xor
pop
sar
aas
pop
sub
stc
push
arpl
pop
or
stos
stos
daa
ja
push
push
out
outsb
jb
sbb
cmp
int3
xlat
jp
loope
insl
mov
cli
add
call
dec
int3
adc
stc
xchg
aas
loope
adc
pop
add
dec
mov
orb
test
jbe,pt
in
lock
add
mov
jbe
xlat
enter
mov
movsl
push
hlt
mov
jp
mov
in
mov
andl
ret
sbb
pop
cmp
mov
or
xchg
pop
inc
mov
leave
adc
push
dec
out
push
bound
push
mov
fiaddl
ffreep
ret
jg
jge
pop
xchg
add
cmp
cli
push
or
out
insb
pop
jecxz
jmp
pop
in
pop
sbb
fildl
iret
xor
push
cwtl
adc
loope
cmp
fcoms
popa
jae
mov
loope
into
pop
mov
fwait
test
fsubrl
pushl
add
cmp
dec
mov
add
jb
pop
fisubl
add
inc
jns
and
jae
arpl
es
dec
jp
cmc
pop
mov
jb
stos
push
mov
sbb
aas
lock
gs
cmp
mov
roll
cmp
add
lahf
or
inc
jg
mov
mov
fs
clc
mov
mov
adc
bound
pop
shr
loop
mov
int3
sbb
pop
pop
mov
rcll
mov
das
mov
lcall
mov
jl
fldenv
inc
fsubl
xchg
inc
in
inc
inc
pop
fidivs
cmp
or
aaa
adcl
repnz
outsb
insl
mov
xor
clc
out
pop
and
std
std
fsubrs
sbb
aad
mov
inc
movsb
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
cmp
adc
int
adc
xor
jbe
xor
inc
dec
fdivrs
repz
movsl
scas
jl
dec
ss
lret
jmp
push
sub
mov
jmp
shlb
push
inc
aas
add
xchg
sbb
xor
scas
and
scas
xchg
imul
sub
pop
movsl
lea
fwait
insb
pusha
mov
movsb
sub
arpl
mov
enter
jecxz
ja
push
dec
xchg
cltd
movsl
gs
loop
movsb
push
cli
jo
lea
mov
shlb
in
push
adc
in
adc
sub
jae
mov
push
ficoms
popf
and
es
add
adc
ss
adc
test
xchg
jo
adc
arpl
and
aaa
andl
mov
gs
sbb
pop
xchg
xchg
fbld
jns
mov
xchg
mov
cmc
jae
push
push
add
std
sub
xor
mov
jg
in
loop
sub
pop
aad
push
jns
popf
fdivrs
lods
jns
faddp
in
jecxz
xor
pop
pop
leave
inc
cmpsl
lea
jmp
xor
sbb
nop
fs
repz
bnd
insl
adc
js
jae
and
imul
dec
jb
or
aas
push
es
aad
mov
das
inc
cld
cmp
jmp
aad
lret
jo
jae
xchg
scas
rcrl
test
movsb
mov
stc
jge
jmp
dec
adc
dec
xor
or
std
inc
adc
out
cmp
or
xor
adc
add
add
cmp
mov
out
imul
outsb
std
int3
sbb
imulb
push
xlat
push
add
xlat
gs
lods
shr
or
pop
adc
es
mov
add
push
pop
ds
data16
jp
adc
xor
rcrb
xor
mov
adc
push
sub
cmc
pushl
mov
in
pop
rcll
jge
mov
mov
push
or
into
push
inc
jp
jecxz
cld
mov
cmp
xchg
sbb
sbb
mov
clc
push
cmp
arpl
add
shll
sbb
cwtl
mov
pop
pop
out
loope
test
adc
pop
inc
mov
push
jbe
mov
push
and
movsl
and
nop
xor
enter
loop
push
gs
pop
dec
popf
movsb
and
jo
ja
jb
xchg
seta
in
insb
fistpll
push
aad
inc
bound
jl,pn
xor
test
popf
cmp
jl
sbb
mov
outsb
or
addr16
nop
jno
call
mov
add
cld
icebp
pop
jo
pop
mov
sbb
nop
loopne
dec
nop
aas
xchg
inc
rorb
loopne
xchg
mov
jbe
repz
add
adcb
testb
jmp
dec
mov
imul
loopne
lret
add
xchg
js
xchg
scas
ja
aas
inc
movsl
aaa
loope
xor
dec
cld
sub
mov
adc
jbe
cwtl
or
add
sub
ss
xlat
pop
mov
cmp
in
shlb
xor
leave
mov
push
adc
lahf
int
pop
sbb
mov
jmp
sub
push
loop
std
jmp
pop
mov
imulb
add
fisubs
mov
mov
sbbl
lods
push
testb
orb
jne
int3
sbb
push
cmp
lods
sub
push
add
rol
loopne
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
shlb
int
adc
sbb
mov
imul
outsb
imul
popf
xchg
jbe
cmc
mov
jge
mov
cmpsb
es
sbbb
or
push
sbb
inc
xor
add
scas
mov
rolb
dec
fdivrs
lret
shlb
ret
jp
cmp
mov
jp
mov
loop
inc
inc
and
js
inc
scas
cli
mov
push
sahf
and
out
mov
mov
sbb
dec
adcl
xchg
mov
ja
loopne
mov
cltd
dec
mov
ljmp
xlat
shll
into
aaa
add
pop
dec
in
fmull
dec
sti
jb
jb
in
push
ret
jmp
mov
std
mov
push
daa
leave
mov
aam
in
mov
lea
mov
cld
pushf
mov
aad
jmp
xor
inc
jo
push
jns
ss
lock
out
sbb
sbb
cli
imul
jnp
dec
cmp
lcall
aas
mov
js
pop
pop
repnz
jl
or
push
cmp
cwtl
shrb
dec
lods
jle
daa
test
mov
lods
insb
lods
lock
jb
push
sbbl
xor
insl
add
cs
adc
es
pop
aas
cmpsl
mov
xor
add
shrl
and
jno
jge
mov
out
imul
xor
mov
and
fisttps
mov
xor
add
mov
sbb
dec
mov
mov
xor
loop
jb
add
mov
stc
cmovnp
mov
sbb
adc
outsl
dec
stc
dec
xor
push
js
icebp
stos
dec
sbb
jp
inc
icebp
cmpsl
icebp
fsubrl
xor
dec
mov
dec
push
add
shrl
call
mov
or
call
fsts
jnp
xor
or
lock
or
xchg
ret
add
les
jge
add
idiv
push
mov
xor
jle
mov
fcmovne
sub
mov
cld
adc
jo
adc
int3
inc
dec
dec
insl
test
or
jl
inc
xor
cmp
pusha
cli
ss
repz
adc
scas
hlt
xchg
cmp
xor
lret
push
lret
outsb
clc
rcrl
int
icebp
popf
dec
out
sub
xchg
gs
push
push
repnz
out
ds
sub
int
push
repz
sub
xor
mov
jmp
pop
dec
mov
mov
dec
adcb
cmp
pop
int3
frstor
inc
ja
adc
mov
rorb
repnz
dec
fsubp
inc
sub
les
addr16
movsb
add
loopne
adc
fsubrp
insl
pop
jno
add
pop
add
jae
shl
mov
popa
movsb
adc
push
xchg
in
imul
loope
push
bound
test
cs
outsl
fmuls
cli
adc
nop
das
fcomps
lcall
pusha
stos
push
inc
cmc
push
fstp
pop
xlat
repnz
lock
sub
xchg
xor
negb
fsubr
rclb
mov
xlat
mov
and
stos
outsb
jne
jge
sbbb
sub
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
mov
adc
int
adc
scas
mov
sbb
inc
dec
inc
lahf
jge
jns
sbb
into
xor
jb
xor
inc
cmp
push
repz
dec
insb
push
xchg
xor
cmp
pop
mov
mov
jl
fistps
ds
arpl
aad
mov
mov
into
test
push
add
mov
mov
mov
mov
add
cmpb
flds
dec
add
imul
adc
or
push
jb
stos
fisttpl
and
dec
adc
fdivl
mov
movd
int3
les
outsl
ja
push
shll
jmp
mov
or
in
mov
add
or
stos
cmpsl
fistpll
enter
sub
sbbb
lods
loope
pop
mov
inc
push
lret
or
ds
repz
adc
or
mov
cmp
sub
cmpsl
femms
xlat
pop
or
push
fidivs
jp
outsl
sbb
pop
mov
pop
and
sarl
pop
mov
adc
out
cli
xor
je
lret
xchg
push
xchg
test
push
call
pop
cmpsb
dec
bound
cmp
mov
or
xchg
outsb
loopne
dec
jl
mov
aas
imul
call
mov
adc
fidivs
add
jmp
cmc
pop
loopne
push
lahf
das
lret
ljmp
movl
mov
int
aaa
add
stos
loope
test
lret
and
test
arpl
jb
jecxz
ja
aam
movsl
lock
jo
jb
les
imul
jae
stos
outsl
add
movsl
dec
xchg
mov
sub
mov
cmpsl
jmp
xchg
xchg
push
pop
mov
into
test
js
xchg
inc
sub
mov
add
pop
mov
pop
ja
mov
push
push
mov
es
aas
add
lret
mov
fdivr
popa
out
loop
es
cmp
xorb
popa
fistpl
roll
cwtl
inc
stos
add
out
in
cmp
add
fld
jo
sbb
lds
ret
mov
inc
inc
mov
inc
push
dec
adc
adc
adc
fcmovnbe
stos
dec
daa
jecxz
arpl
xor
mov
jl
movsl
jne
sub
pop
roll
or
cmpb
mov
push
xchg
mov
bound
cmp
mov
pop
jb
popf
pop
mov
xchg
outsl
add
iret
mov
jbe
test
filds
mov
and
sbb
push
fnstcw
push
jp
sub
mov
xor
mov
pop
xorl
fistl
fs
xor
adc
mov
fsubl
dec
cmp
es
out
sub
in
dec
and
sub
pop
repnz
cmp
lahf
mov
mov
push
cmp
mov
pop
dec
orb
data16
adc
cmp
xor
shlb
mov
gs
push
inc
pop
lods
cmpsl
dec
mov
test
ret
fst
call
mov
fstpl
cmp
outsl
jb
aas
mov
cmp
xchg
or
add
fiaddl
imul
sbb
cmp
jns
stc
xor
xor
xor
mov
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
xchg
xchg
push
xor
fnstcw
jnp
sahf
shlb
dec
popf
repnz
icebp
fidivrs
inc
popf
imul
lock
pop
lahf
in
dec
or
sbb
push
dec
mov
out
jbe
and
sub
or
aad
insl
adc
rcrl
cli
bound
rcr
push
and
fcompl
aam
xlat
pop
push
call
int
xor
push
push
inc
icebp
fadd
mov
xor
push
gs
fdivl
xchg
cwtl
cmc
jno
add
jp
push
dec
aas
enter
insl
cmp
inc
movsb
adc
xchg
adc
sbb
pop
inc
aas
push
outsl
sbb
movsb
in
xor
imul
jl
xchg
push
mov
pop
adc
data16
pop
jo
mov
jbe
jecxz
mov
xor
push
mov
ja
arpl
cmp
repnz
cmp
ds
adc
imul
adc
xor
add
aaa
jle
stos
mov
mov
inc
lock
movsb
dec
outsl
push
sbb
or
jbe
das
daa
add
jp
sahf
or
push
sbb
sets
push
xchg
jo
jge
lea
push
bound
add
jle
cmp
jp
sub
jns
mov
cmp
mov
das
push
adc
fcmovu
int3
ret
sar
or
loope
int
and
das
loope
ja
stos
mov
cmp
push
jbe
cld
arpl
or
mov
push
push
rclb
xchg
mov
add
dec
cmpsl
aaa
mov
bound
dec
push
iret
dec
add
mov
jp
scas
dec
xchg
scas
das
out
or
sub
cmp
pop
mov
inc
loopne
dec
idivb
cmpb
cmp
jno
inc
ds
mov
adc
lahf
inc
jb
push
pushf
pop
dec
pop
mov
addr16
push
lods
and
movsl
dec
inc
or
cwtl
jmp
test
jecxz
inc
sbb
outsb
bound
aad
sub
pop
mov
dec
stc
mov
call
and
cmpsb
mov
leave
xor
sub
test
ret
mov
mov
insl
jg
out
aaa
int
ret
or
and
lds
es
jmp
iret
lock
pop
mov
pop
in
fmull
push
jne
mov
lea
pop
pop
sub
sbb
jge
popa
lret
outsb
ficoml
fwait
sbb
xchg
xor
lahf
inc
adc
es
movb
stc
iret
jmp
stos
and
fcmove
and
mov
xor
sbb
pop
dec
inc
inc
aad
adc
pop
lods
aaa
xchg
jns
mov
mov
jle
mov
sahf
aaa
rcrl
jmp
push
lods
mov
xchg
loop
and
sbb
dec
or
jl
adc
lods
or
jg
lea
push
mov
sbb
pop
and
int3
shll
jmp
clc
pop
dec
inc
sti
mov
ficomps
jae
lods
call
add
test
rorl
push
inc
outsb
pop
push
shrl
lods
lds
push
xorl
jmp
pop
lahf
das
inc
or
or
dec
cmp
jne
xlat
mov
insb
loop
aas
pop
or
push
mov
fisubs
rcr
inc
cld
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
ljmp
adc
adc
dec
shr
mov
jne
and
mov
cmp
pop
test
pop
test
popa
pop
xlat
mov
or
lods
xchg
mov
xchg
dec
dec
fmuls
clc
dec
aas
lock
mov
mov
and
mov
enter
xchg
pop
shll
fcomp
daa
mov
adc
inc
loope
in
sub
mov
stos
jb
fucomi
in
daa
jl
adc
add
js
imul
fisttps
pop
mov
jmp
inc
mov
cmpsb
push
sub
jae
test
mov
cmp
inc
mov
clc
jmp
cld
scas
cld
push
fsubr
inc
mov
add
push
daa
das
orb
data16
stc
loope
fldl
pushf
jne
cwtl
mov
ret
cmp
inc
jl
and
pop
and
out
pop
sub
and
mov
popf
ljmp
pop
das
call
mov
insl
mov
mov
xor
cmpsb
sti
mov
js
cmc
gs
or
pop
sbb
xor
iret
xchg
inc
push
mov
shl
and
jecxz
jle
xchg
add
mov
dec
xchg
jmp
js
xor
stc
int
test
mov
js
sbb
andb
add
mov
jge
outsl
jg
cmp
push
pop
add
and
jns
inc
xchg
idivb
mov
cltd
lea
cmc
pop
into
in
in
cmpsb
dec
or
shl
outsb
cmpsb
add
adc
fisttpl
enter
loop
mov
mov
out
mov
loopne
push
mov
cmp
imul
add
cli
lcall
hlt
ret
cmp
rcll
push
push
jo
jne
jmp
or
fldenv
cld
inc
cli
dec
out
dec
vmwrite
pop
test
jp
xlat
loope
xchg
lcall
dec
sahf
cmpl
in
jnp
cmp
outsb
add
inc
mov
scas
or
push
or
jl
lret
js
enter
push
add
push
mov
ret
pop
mov
inc
xor
jbe
jp
cmpsb
test
xor
mov
dec
and
pop
testl
push
push
insb
cli
in
sbb
rclb
icebp
lock
fiaddl
xor
stc
xor
or
push
lret
jmp
xor
enter
pop
jbe
iret
cmp
mov
aad
mov
sbb
xchg
pusha
in
inc
or
std
rcrl
fcomip
jb
int
fcmovbe
xchg
mov
sbb
test
mov
int
xor
insl
or
cmpsb
dec
test
out
push
cmp
push
js
sub
ret
sti
jp
push
jb
jmp
and
imul
stc
je
add
in
inc
insb
xchg
subl
dec
add
sbb
xchg
mov
mov
jnp
jns
mov
out
mov
and
int3
data16
add
ficoml
sub
jecxz
mov
lods
and
adc
cld
js
lahf
xchg
xchg
add
daa
or
dec
and
dec
out
outsb
adc
in
sbb
fcompl
push
lahf
and
or
enter
add
or
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
jbe
std
jle
test
adc
adc
adc
xchg
jmp
adc
dec
push
jne
mov
icebp
adc
add
js
pop
and
mov
sbb
pop
add
movsb
in
xchg
fs
stos
inc
call
sbb
dec
ret
dec
js
cmpsl
stos
enter
aam
movsl
push
xlat
inc
jmp
adc
stos
pop
loopne
leave
push
mov
add
sub
jle
fsts
das
mov
dec
push
ja
or
or
push
mov
push
testl
arpl
pop
jl
pop
shlb
daa
xor
mov
lods
mov
les
fs
adc
bound
leave
pop
lcall
xchg
add
xor
push
cmp
dec
jne
dec
movl
dec
jl
cwtl
sti
adc
sub
jmp
mov
jl
rclb
aad
jmp
repz
leave
data16
fsub
imul
jecxz
sub
mov
mov
adc
inc
push
add
xchg
roll
ja
sbb
gs
rol
repnz
aas
inc
inc
cmpsb
sbb
xchg
xchg
mov
adc
sbb
enter
mov
mov
test
xchg
inc
pusha
movsb
mov
test
pop
jecxz
nop
dec
loop
es
icebp
mov
inc
daa
imul
push
pop
push
mov
pop
es
arpl
pop
repnz
jecxz
rolb
hlt
es
or
push
dec
flds
fisubrl
sub
dec
mov
ret
mov
mov
into
jmp
call
jge
push
cld
stos
das
dec
rolb
test
rcrl
aam
repnz
mov
test
das
or
inc
repnz
ss
ficompl
gs
adc
mov
incl
sahf
js
xchg
daa
adc
mov
mov
and
xchg
cwtl
xor
jge
arpl
iret
lcall
inc
pop
cmp
adc
mov
add
adc
andl
andl
mov
cmp
jp
push
ror
jnp
adc
dec
xor
cli
adc
adc
call
xlat
sarl
fisubrl
ret
in
mov
adc
pusha
xchg
inc
pop
push
and
loopne
mov
fwait
je
shlb
imul
ficoml
mov
test
sub
outsl
lock
push
rolb
call
test
std
cmp
mov
pop
inc
jne
or
mov
xchg
and
mov
jge
sbb
push
jo
inc
rcrb
push
lahf
xchg
dec
jecxz
inc
xor
es
ljmp
ds
jmp
push
mov
ja
icebp
movl
mov
or
pop
dec
lea
xchg
or
inc
loopne
fstps
mov
divl
mov
pushf
adc
xor
mov
hlt
popf
test
mov
outsl
mov
adc
sub
enter
sbb
out
push
pop
cltd
loope
shll
fwait
cmp
adc
cmp
push
cmp
pop
es
cld
pusha
or
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
dec
cmp
mov
int
adc
movsbl
ljmp
sbb
jae
push
and
pop
pop
mov
enter
ss
mov
xchg
dec
test
jmp
lods
lea
jmp
xchg
scas
jo
xchg
xor
xchg
xchg
insb
push
and
jb
aad
mov
push
sbb
lea
je
fistpl
mov
mov
lods
lret
add
pop
mov
pushf
sub
push
mov
jge
je
xchg
push
add
mov
ficoms
or
and
adc
jnp
cmc
daa
mov
add
add
push
repnz
mov
inc
and
lods
dec
lret
sub
and
sub
sbb
in
push
jno
jge
rcl
lret
repnz
rcll
cmp
fnstsw
stos
in
xor
dec
inc
leave
fstpl
std
lds
adc
xor
inc
fwait
js
push
into
fwait
adc
pop
mov
pop
ljmp
sub
movsb
ds
mov
mov
pop
pusha
imul
pop
cmp
xchg
pop
lahf
or
push
xor
add
les
aad
sub
ljmp
pusha
pop
sbbl
lahf
rolb
jmp
dec
int3
jg
mov
or
loopne
mov
cmp
adc
jne,pn
leave
jo
mov
subb
fmull
stc
jae
mov
addr16
ds
pop
repz
in
pop
mov
fisttps
shrl
shr
mov
cmp
inc
jnp
and
leave
cwtl
cltd
jmp
repz
pop
aaa
jb
inc
xchg
jmp
pop
xchg
loop
test
insb
jge
xchg
jp
adc
imul
adc
out
das
aaa
jno
jmp
push
pop
andl
in
add
xchg
sahf
sbb
in
lcall
in
and
xchg
mov
dec
mov
pop
lds
data16
pop
mov
sub
inc
out
movsl
xor
xchg
jecxz
adc
test
cmp
and
push
lcall
mov
bound
dec
sub
fistl
dec
andb
push
xor
aaa
fld1
dec
push
push
push
std
fadds
push
test
cld
mov
jle
scas
mov
push
mov
lods
mov
call
into
outsb
lea
cmp
out
ja
sahf
fcomps
dec
sbb
xchg
add
outsb
lret
xchg
pop
bound
sbb
sbb
dec
imul
xor
inc
mov
dec
aaa
int
aas
clc
rorl
movsl
bound
lea
leave
nop
mov
psubq
cmp
jb
xor
inc
test
out
mov
dec
and
clc
push
leave
rorl
pop
jmp
pop
aaa
ret
add
lret
mov
and
inc
add
das
cmpsl
xchg
pushf
pop
pop
or
jecxz
mov
repz
sahf
mov
or
mov
fwait
notl
xor
xor
movl
cmpsl
out
push
mov
lods
shrb
xchg
lret
flds
gs
xchg
orl
push
jle
jnp
das
jae
lret
jl
xchg
add
ret
mov
mov
sub
push
xor
pop
sbb
loopne
sub
and
ret
push
jl
js
mov
push
pushl
push
push
call
mov
jmp
xor
sbb
stos
xor
je
adc
adc
adc
stos
loop
sub
lret
cmpsl
add
add
xchg
jge
lahf
sbb
and
ja
sbb
and
inc
out
jge
cwtl
repnz
sbb
ret
xlat
pusha
adc
es
stos
jl
and
into
aas
jmp
mov
cmp
add
orb
es
mov
stos
daa
push
jecxz
cmpsl
shlb
mov
ja
cmp
lahf
xchg
icebp
imul
sub
loop
lret
and
stc
das
jne
xor
stc
add
scas
adc
jns
dec
in
pop
jmp
xchg
idivb
orb
push
ret
pop
je
out
mov
push
or
and
push
and
jbe
ja
call
stc
rclb
pop
popf
mov
pop
imul
xchg
mov
and
sub
mov
orb
xchg
push
loop
cli
in
loope
add
mov
xchg
push
jno
jle
xor
mov
adc
adc
fs
ret
or
js
add
add
xor
and
mov
push
fnstcw
pop
xchg
icebp
test
lahf
shlb
pop
xchg
mov
divl
xor
arpl
dec
out
add
dec
cmpl
cld
cmp
cli
add
xor
push
mov
xor
daa
pop
das
xchg
int
adc
sub
mov
shr
test
notb
and
mov
inc
mov
nop
sbb
push
int
out
pop
repz
cmp
sbb
mov
stos
xor
sub
insl
rclb
aam
adc
xchg
xchg
cmp
sbb
in
test
jnp
neg
xchg
cld
lcall
or
fcoml
stos
push
das
pop
stos
xchg
mov
inc
jo
shll
jge
cmpsl
hlt
push
aas
xchg
add
call
mov
aaa
lcall
mov
jae
mov
pop
roll
xchg
and
cmp
inc
jno
mov
jecxz
into
mov
add
orb
add
jnp
push
insl
pop
dec
and
loope
fcoml
ror
gs
test
icebp
adc
inc
mov
call
test
nop
icebp
stos
pop
cmp
out
das
js
cmpsl
stc
jl
arpl
jecxz
mov
fwait
pop
scas
inc
add
mov
pop
out
mov
sbb
jg
scas
mov
sub
mov
xchg
mov
mov
mov
repz
sbb
or
mov
cs
jg
dec
pop
movsb
int3
cld
sti
inc
shrl
xor
sbb
mov
lods
mov
popa
pop
call
add
add
pop
jb
loop
fcomip
push
cld
das
jnp
rcll
cmp
sub
adc
rcl
inc
push
dec
push
cmc
dec
das
adc
inc
pop
test
push
xchg
sbb
dec
cmc
mov
add
rcl
loop
xchg
mov
mov
fwait
popa
out
imul
cmp
push
lea
fs
pop
push
add
mov
adc
add
inc
fdivr
jmp
into
lock
sub
jp
shlb
std
inc
iret
adc
sub
scas
insl
pop
lea
dec
add
gs
shrd
jmp
ja
jle
sub
xchg
mov
xchg
mov
push
jb
adc
adc
adc
and
nop
push
out
inc
xor
push
mov
adc
enter
in
jbe
push
outsl
stos
lods
dec
je
dec
sbb
in
in
dec
std
dec
cld
or
sub
mov
jg
jp
pop
xor
mov
and
lahf
push
fildl
ja
inc
mov
pushf
sbb
js
sbb
mov
jg
mov
hlt
sbb
clc
enter
notl
lret
imul
lods
dec
aaa
mov
je
outsb
and
rcll
cmp
in
lods
mov
xlat
xchg
les
vprotq
pop
cmp
sbb
cltd
das
pop
nop
add
and
ret
out
ret
cmp
cltd
add
xorps
imul
out
push
mov
inc
fadd
xor
shrl
xchg
nop
xchg
push
mov
ret
sbb
mov
cld
pop
loopne
in
xlat
outsl
daa
andl
lahf
ss
cmp
push
dec
adc
or
movsb
jb
mov
adc
xor
aaa
sbb
or
das
add
cmp
dec
sti
in
sub
xor
pop
je
movsl
cli
out
pop
mov
fmull
pop
mov
push
insb
decl
inc
sti
mov
sub
in
sub
push
rclb
in
imull
and
xor
imul
addr16
and
rcrl
and
sub
enter
pop
test
pop
icebp
cwtl
mov
test
dec
or
push
xchg
sbb
sub
fnsave
xchg
fadds
fstpl
movsb
xor
xor
and
jecxz
rcrl
test
mov
nop
mov
add
jo
xchg
insb
int3
mov
pushf
shl
lds
out
addr16
movsl
sbb
xchg
mov
cmp
lods
jmp
cwtl
loopne
xchg
mov
push
dec
push
xor
mov
fisttpl
mov
add
das
cwtl
fists
fiaddl
repz
out
bound
push
mov
mov
mov
mov
dec
adc
mov
cli
das
and
mov
mov
add
pusha
scas
or
lods
inc
in
pop
adc
ja
dec
stos
sub
mov
mov
add
mov
cltd
push
mov
lret
std
add
adc
rcll
cmp
and
mov
xchg
in
xor
sbb
icebp
rclb
cmp
div
pusha
aam
rcrb
jg
pop
or
pusha
jecxz
mov
push
lea
cmpsl
xchg
js
push
push
pop
push
popa
stos
ja
add
xorb
jle
rcrb
lea
and
add
shlb
je
lea
incb
xchg
xchg
ja
and
out
das
loope
addl
hlt
int
xor
sahf
lock
jp
xor
mov
popf
and
mov
mov
les
test
pop
mov
pusha
call
lea
popf
leave
ss
push
hlt
dec
and
xchg
push
xchg
push
pop
mov
sub
jmp
cli
jnp
inc
sbb
sbb
out
add
jecxz
inc
test
push
mov
rcl
iret
push
adc
les
ljmp
out
xor
mov
mov
mov
push
jmp
bnd
test
mov
js
push
adc
adc
adc
push
es
add
sub
add
adc
int3
out
cmp
inc
cs
xor
inc
and
jle
sbb
xchg
pop
inc
mov
mov
sbbb
jle
xor
sbb
sbb
jno
or
movsb
sbb
adc
jmp
movsb
fimuls
fdivs
push
xlat
aad
ja
adc
xlat
push
mov
enter
mov
das
jge
mov
ret
cmp
xchg
mov
lds
push
adc
xchg
jae
stc
cmp
scas
mov
lret
shll
out
push
rcl
nop
cwtl
rcrl
insl
jae
add
cmp
in
xchg
sbb
divl
xor
aaa
cs
int3
mov
jp
lret
adc
add
hlt
xor
daa
lods
add
sbb
cmp
test
stos
sbb
sbb
cmp
push
push
lahf
pop
cmp
push
sub
dec
clc
int3
add
mov
loope
mov
jbe
bound
add
rcll
and
pop
dec
cmp
add
adc
and
jp
and
jecxz
cmp
enter
lods
je
dec
push
jecxz
push
add
xchg
daa
hlt
pop
pop
jle
and
scas
push
adc
mov
stos
sbb
mov
pop
lahf
push
gs
xchg
jmp
sbbl
cld
sub
and
in
pop
inc
movsb
jle
xchg
cmc
popf
and
sub
jae
xor
inc
xchg
jno
sbb
push
push
clc
out
fmull
xchg
movsb
cld
imul
popf
push
int
movsb
pop
inc
add
xchg
fists
pop
mov
lods
mov
lcall
jle
jmp
push
or
dec
leave
pop
andb
adc
mov
pop
xorb
xchg
push
xchg
mov
mov
cmp
pop
dec
pop
or
icebp
cmc
push
sub
stos
or
jl
push
xchg
dec
es
jecxz
xlat
push
sti
and
cmp
xor
and
or
fildl
jg
clc
xchg
sti
inc
cmp
xor
cmp
pop
gs
and
out
mov
mov
in
mov
lods
fsubrp
jne
fdivr
repz
ja
ret
dec
popf
fwait
or
and
in
pop
inc
xor
mov
xor
inc
mov
sub
mov
cli
rcr
in
loop
lods
sub
push
and
push
int
aas
inc
cmp
mov
dec
adc
rcl
mov
iret
out
mov
gs
lret
mov
insl
fistps
popf
ds
setg
xchg
loop
lret
std
inc
mov
cwtl
jne
sub
shll
push
mov
in
or
stc
jl
pop
leave
pop
cld
push
pop
dec
icebp
in
push
out
test
pop
pushf
sti
xor
pop
shlb
mov
jb
mov
inc
das
out
test
inc
adc
adcl
int3
ja
fwait
jp
fdivp
adc
pop
imul
mov
sti
sub
imul
sub
ljmp
call
or
stc
and
inc
dec
imul
cld
cmpsl
into
mov
jp
sub
xor
nop
jl
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
jp
xor
push
adc
adc
ret
push
arpl
push
adc
xchg
insl
mov
mov
or
mov
call
cmp
es
dec
mov
cmpsb
adc
test
pop
cmp
or
jle
pop
cltd
cli
mov
add
jmp
jb
and
xor
or
sub
ja
mov
add
adc
imul
fadd
sub
dec
mov
test
or
ss
adc
xchg
lock
in
sbb
and
dec
in
sbb
jle
lcall
mov
rep
mov
inc
or
xchg
inc
push
shll
js
xchg
negb
push
push
mull
sub
adc
cltd
sub
cld
jns
inc
xor
or
push
lods
repnz
and
mov
stc
push
push
jnp
and
add
adc
inc
sub
sbb
pushf
test
es
pop
std
fwait
enter
sub
push
or
dec
roll
xor
sbb
mov
lods
jecxz
mov
iret
add
sbb
xlat
xor
stos
pop
shll
ror
inc
adc
mov
inc
and
ret
out
inc
or
mov
inc
icebp
sbb
jb
dec
sbb
dec
cmp
jae
jbe
xchg
outsb
jb
daa
dec
es
jmp
rorl
and
jns
mov
js
jb
fmulp
lret
sub
dec
pop
rcrl
in
lods
sti
mov
jg
mov
mov
sbb
dec
cmp
ret
push
xor
aas
jnp
jnp
xor
icebp
mov
mov
cli
xchg
mov
mov
addl
inc
sbb
xchg
pop
jnp
iret
bound
inc
fwait
loop
in
or
xor
jecxz
iret
xchg
aaa
push
xor
inc
sbb
mov
icebp
cmpsl
adc
arpl
and
aad
jnp
sub
sub
jg
and
lcall
lods
inc
ret
mov
push
lds
mov
cs
mov
ss
cmpsl
lahf
or
push
xlat
add
leave
out
pusha
jo
hlt
enter
xor
iret
dec
sbb
test
mov
xor
mov
out
outsl
icebp
fildl
cmp
pop
fidivs
movsl
arpl
xor
lds
jns
movsb
pop
sti
mov
lea
loop
mov
dec
or
dec
clc
js
or
xchg
cmp
jo
cmp
shlb
ljmp
mov
mov
outsl
mov
jle
xchg
xor
mov
dec
out
cltd
sub
dec
xchg
jg
str
inc
pop
sub
inc
call
mov
js
test
lea
mov
mov
and
je
fldenv
cwtl
jae
ja
movsl
leave
inc
cli
xor
test
shrl
xchg
mov
adc
mov
dec
mov
push
jge
or
outsb
push
in
jbe
mov
decl
cmc
jmp
call
das
lret
cmpsl
mov
into
sahf
mov
xchg
sbb
push
inc
dec
fisubrl
enter
sub
lds
sub
fdivl
out
pop
push
aas
sub
loope
filds
xorl
rcr
mov
adc
cwtl
inc
aaa
mov
daa
dec
shll
sbb
adc
cvtps2pi
xchg
pop
sub
call
ret
jg
or
push
jb
sahf
gs
movl
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
xchg
out
mov
adc
adc
test
xor
mov
imul
leave
inc
icebp
fwait
xor
pop
loope
mov
sbb
outsl
ja
dec
xlat
push
mov
movsb
pop
sub
add
fists
jecxz
sub
jle
mov
jnp
dec
fcmovb
sbb
arpl
xor
adc
imul
push
mov
pop
mov
daa
mov
xor
push
sbb
sbb
loopne
mov
lahf
mov
dec
rclb
mov
int3
xor
xchg
push
and
shrl
mov
mov
ret
dec
test
daa
push
rcrb
jl
sub
xor
shll
inc
scas
mov
in
mov
insl
mov
mov
ja
pop
ja
xchg
sti
cld
pop
fldl
adc
inc
pop
add
pop
xchg
mov
and
ljmp
push
imul
out
xor
rcrb
movsl
and
pop
decb
sti
sbb
add
in
pop
xchg
fisttpll
fstpl
jl
lds
insb
jp
ret
or
fisubl
in
mov
std
dec
inc
shl
lods
inc
es
les
hlt
roll
cmc
repnz
lcall
xchg
or
ja
adc
jge
push
mov
jl
push
in
aam
out
sbb
dec
push
sub
into
pop
pop
movsb
push
xrelease
ret
and
dec
mov
and
loop
adc
push
mov
xor
push
push
out
cli
lahf
imul
testb
xchg
pop
or
lahf
leave
adc
fnsave
mov
mov
repz
imul
cli
inc
xor
xchg
xor
aad
jne
dec
sub
clc
aad
mov
jp
inc
xchg
test
jle
add
add
or
test
out
pop
nop
pop
movsl
popa
xchg
lods
jge
or
movsl
shll
pop
inc
stos
dec
adc
movsb
add
or
in
xchg
xor
xor
leave
mov
adc
stos
inc
pop
imul
add
cltd
lret
scas
cmc
jp
pop
dec
test
ficoml
sti
rolb
mov
addr16
aaa
inc
mov
sub
xchg
jns
fstpt
dec
fisubrs
cmp
push
push
cwtl
sub
adc
add
rcl
test
lea
fimuls
push
inc
mov
imul
sbb
in
test
pop
arpl
push
pusha
xor
pop
jle
and
mov
or
lret
scas
enter
aaa
pop
lret
sbb
mov
test
sti
mov
into
movsb
insl
dec
add
add
iret
jb
addb
and
pop
gs
xchg
push
mov
pop
xor
xchg
mov
mov
cmc
and
daa
pop
mov
std
mov
int
call
je
xchg
shlb
leave
dec
out
fstpt
or
btr
mov
push
xchg
bound
add
test
roll
and
testb
sub
inc
add
mov
add
sub
addr16
fs
fidivs
test
icebp
push
out
inc
jmp
cltd
sbb
jg
imulb
stos
pop
cmc
mov
xor
jb
in
mov
lock
das
cmc
ss
adc
push
pmuludq
sub
sti
jns
adcl
inc
ficoml
inc
jo
add
add
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
push
adc
xor
adc
xchg
stc
mov
mov
dec
sbb
sub
pushf
push
mov
adc
sub
jno
cmp
pushw
mov
clc
es
mov
fisttpl
jae
je
push
sub
or
mov
pop
adc
fcom
push
mov
cmpsb
inc
mov
or
sbb
cltd
mov
xchg
hlt
shll
adc
add
cli
cltd
jno
add
mov
dec
aaa
outsb
add
cmp
repnz
call
pop
fcoml
sbb
xor
lcall
test
pop
setp
das
push
aam
dec
jne
pop
mov
pop
push
jb
jo
cltd
xor
lret
movsbl
pop
fldt
jno
fidivrs
add
lret
pop
imul
xchg
xor
adc
xchg
enter
inc
test
shll
mov
or
or
and
mov
push
push
xor
bound
cmp
je
mov
into
cli
pop
xchg
mov
bound
das
xor
push
mov
lcall
rcll
aas
cltd
cmpsb
cmc
int
jnp
data16
rclb
xchg
inc
xor
test
jno
in
pop
js
and
in
jp
fadd
es
xor
jg
mov
mov
in
test
neg
jb
mov
pop
jnp
sahf
gs
ljmp
jne
or
scas
sbb
aad
fadds
test
jbe
and
mov
fiaddl
add
xchg
scas
inc
das
mov
sub
mov
mov
sbb
leave
mov
dec
stos
outsb
pop
loope
adc
mov
cltd
subl
cmp
xchg
mov
pop
movsl
mov
cmp
pop
and
sahf
pop
fnop
mov
shr
add
cmc
push
jg
inc
fidivs
xlat
cmp
sub
mov
lret
adc
mov
in
lods
mov
cmp
jno
xor
fs
push
cmp
mov
andb
je
cmp
push
xor
mov
shrb
mov
fwait
jne
xorb
aam
cs
stc
jno
and
push
sbb
mov
clc
ret
jle
xchg
nop
imul
dec
or
stos
fidivs
dec
and
pop
addr16
cmp
arpl
mov
sbb
push
fnstenv
lds
ficoml
fnsave
pop
divl
xlat
xlat
sahf
mov
repnz
sbb
test
ljmp
cs
test
mov
je
push
loopne
add
push
out
js
push
dec
inc
fimuls
imulb
adc
push
push
and
mov
scas
inc
in
jge
movsb
aad
stos
or
movsb
nop
jmp
outsl
mov
pop
imul
or
cli
mov
cmp
nop
push
pop
cmpsl
lods
ds
add
ljmp
jns
ljmp
adc
sbb
lods
pop
stos
mov
cmp
ljmp
or
mov
enter
xor
or
out
lcall
out
xchg
mov
ss
out
jp
cwtl
mov
dec
rol
mov
jns
add
sar
push
jecxz
lds
cmp
adc
loop
mov
arpl
pop
inc
push
mov
aad
jmp
jae
and
inc
test
cmp
mov
sbb
pop
push
jp
es
jns
sub
inc
pop
imul
sbb
cli
fisubrl
sbbl
add
sbb
sbb
je
les
out
loope
push
lods
mov
add
addl
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
inc
push
inc
dec
adc
xor
adc
mov
jmp
sahf
ss
je
pusha
add
cmpsl
gs
jbe
inc
xor
into
test
adc
addb
mov
xchg
scas
rcrb
test
je
scas
stos
gs
ret
push
rcrl
and
or
into
mov
outsl
jp
mov
pop
or
std
out
jge
out
in
in
pop
out
addr16
mov
fstpl
cmp
push
cmp
mov
adc
jge
gs
fsts
inc
jge
cmp
or
orb
inc
push
push
fisubrl
mov
aad
jle
inc
cmp
pop
cmp
and
aas
cmp
pusha
loope
xor
pop
mov
gs
loop
scas
push
cmpsb
cwtl
fcmovnu
cmp
outsl
xchg
xor
sub
in
fimull
mov
ja
jno
ret
cmp
les
cmp
jae
aad
lcall
mov
leave
lock
or
test
aad
outsl
arpl
rolb
dec
ret
fadd
sub
jnp
add
mov
push
test
cmp
push
ljmp
or
ljmp
daa
lods
add
push
lods
jb
xor
mov
sub
mov
pusha
xchg
sti
in
cld
jle
shl
jnp
addr16
adc
dec
enter
push
pop
jl
loope
mov
pop
outsl
xchg
mov
fwait
push
lock
pusha
frstor
sbb
out
adc
jb
lds
cmp
mov
add
lahf
addr16
mov
shll
sbb
dec
cmp
mov
fs
int
sbb
xor
mov
in
sarb
add
mov
insl
fwait
cmp
ret
cld
nop
xor
push
pop
sub
pop
loop
or
jl
jnp
mov
cltd
push
lahf
cltd
jns
paddusw
fdivl
pop
add
lds
push
mov
inc
mov
cmp
dec
jle
inc
sub
lods
add
sbbb
scas
imul
sbb
mov
jmp
aas
cmp
fnstcw
push
sbb
xchg
bound
jmp
add
and
fsubr
dec
mov
shlb
cltd
rcll
cmc
out
push
adc
inc
jne
sbb
sbb
mov
int
add
dec
mov
dec
or
add
in
jo
push
movsb
xchg
mov
dec
clc
stos
movsb
xor
rclb
imul
add
test
cmp
sub
aas
imul
pusha
sbbl
jl
sbb
or
in
xchg
xchg
and
pop
cmp
push
xchg
cmp
cwtl
pop
mov
xor
add
pop
pusha
jl
loope
xor
sbb
pop
push
lods
pop
sarl
fimull
mov
stos
cmp
lds
push
gs
ffree
and
je
mov
imul
fstpl
push
pushf
xlat
ret
stc
lret
into
add
fs
popa
cld
or
jmp
adc
icebp
sub
cmp
or
or
sub
popa
stc
leave
push
adc
xchg
push
jp
push
test
mov
test
ret
loope
repz
push
jnp
insb
fists
imul
mov
xor
clc
mov
out
movsl
cltd
rorb
mov
push
xor
jnp
lea
in
push
mov
xchg
daa
cltd
cmp
shll
lcall
aas
adc
mov
push
cmp
in
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
pop
icebp
and
ljmp
into
sub
add
jne
pop
sub
insb
out
sarb
mov
enter
pop
sbb
sub
adc
push
push
fidivl
dec
push
push
fwait
push
xchg
nop
mov
jo
ret
ror
mov
out
mov
in
dec
subb
fs
lock
add
subl
add
stos
shlb
push
jecxz
or
mov
daa
mov
lods
add
mov
jns
aad
xlat
push
xor
cmpsl
ja
jmp
push
ret
repz
loop
xor
and
pop
sti
push
xor
mov
repz
aaa
es
xor
test
popa
cmp
xor
jb
jecxz
sarl
mov
js
out
jne
shr
outsb
pushf
jno
and
imul
pop
and
jge
in
aam
sbb
mov
pop
xchg
dec
ss
jns
rcrb
xlat
loope
add
mov
mov
sbb
or
pushf
cmp
aas
out
jno
sub
xchg
mov
dec
inc
xchg
xchg
pop
arpl
jle
fisttps
scas
test
cmp
cmp
leave
jbe,pt
xchg
pop
mov
lea
jmp
cmpsb
clc
jl
repz
fdiv
push
lret
push
adc
xchg
cld
inc
cltd
mov
dec
jo
inc
xor
inc
call
jge
mov
scas
ss
je
bound
arpl
movsb
mov
fiaddl
xchg
inc
jp
scas
dec
fwait
es
ret
cs
mov
les
test
cs
add
pop
mov
or
jmp
dec
call
jb
jnp
sbb
sahf
insb
cmp
call
aad
sub
testl
pop
inc
push
push
and
pop
mov
dec
bound
movswl
mov
xchg
fld
dec
pop
loop
arpl
icebp
in
lds
mov
pop
cmpsl
adc
cs
jle
push
xor
fisubl
leave
test
call
fimull
push
adc
insl
fstpl
jno
mov
dec
in
mov
lret
ret
xlat
mov
packuswb
and
sbb
mov
cmp
and
fwait
or
stos
imul
jmp
mov
mov
dec
test
pop
xchg
lea
fs
sbb
lret
mov
push
call
cvttps2pi
sub
lret
fiaddl
mov
insb
pop
jge
inc
sub
insl
inc
sbb
sub
sbb
jmp
andb
popa
ret
pop
mov
cmp
mov
in
sbb
jge
and
outsl
shlb
sbb
stc
sbb
mov
jge
fldt
pop
cli
mov
popa
xor
mov
out
xor
das
xchg
xchg
inc
pop
pop
ljmp
inc
cmp
arpl
imul
sahf
adc
mov
adc
push
iret
and
cltd
push
shll
int
or
scas
ret
adc
test
addr16
and
inc
push
xorb
std
insl
cmpsl
pop
mov
iret
lds
adc
push
push
mov
jg
into
pop
add
jl
sbb
sbb
in
adcb
les
data16
fs
getsec
mov
push
xchg
dec
xchg
ja
cmp
mov
dec
mov
mov
dec
jbe
push
imul
push
std
add
sbb
xorl
ljmp
in
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
cmp
cmp
adc
adc
adc
xchg
jl
pusha
fcmovne
push
sbb
xchg
aaa
dec
cmc
leave
int
test
dec
sbb
push
pop
and
in
es
push
adc
adc
imul
inc
out
sarl
and
enter
sbb
in
or
sbb
sub
cwtl
dec
test
and
sub
loope
in
in
xorb
inc
xor
out
and
pop
lret
in
jmp
cmp
stos
push
adc
inc
popf
mov
outsb
cld
mov
or
pop
fsubrp
popa
mov
sbb
pop
mov
mov
movsl
out
jae
xchg
and
aad
call
xor
testb
aas
sbb
pop
xchg
mov
adc
push
fiadds
cs
enter
sub
enter
das
arpl
mov
jbe
xchg
push
add
jno
xor
jns
fnstsw
imul
mov
cltd
dec
dec
cmp
lahf
cld
into
jmp
addr16
loope
sub
jecxz
inc
sti
push
fisubs
pop
fisttpll
out
jge
or
inc
or
wbinvd
inc
pushl
xchg
insl
rorl
les
or
in
and
das
insl
gs
les
push
je
outsw
and
fs
mov
add
dec
test
inc
clc
pop
in
std
mov
xchg
push
mov
lods
roll
ss
dec
push
mov
sbb
xor
dec
push
in
cmp
or
push
pop
adc
in
inc
mov
in
or
jecxz
movsl
mov
divl
mov
sbb
mov
push
fs
popf
sub
pop
or
jae
outsb
mov
in
mov
repnz
xchg
or
lcall
xor
lcall
xchg
aad
out
lds
mov
pushf
push
sbb
movsl
cmc
es
int
mov
inc
mov
bound
and
pusha
fdiv
lods
add
sub
les
and
xor
and
mov
mov
pop
mov
mov
lcall
mov
dec
mov
nop
inc
arpl
jnp
xchg
and
popf
add
pop
out
mov
push
xchg
pop
xorb
jne
cmp
das
adc
ret
xor
popa
cmpsl
xlat
lcall
inc
cmpb
test
dec
rcrb
subl
pop
stos
mov
btr
mov
out
lret
jp
aam
inc
push
out
sahf
jo
jecxz
or
mov
gs
pop
sub
mov
xlat
adc
fildll
movsl
push
les
hlt
sarb
jl
push
popf
mov
pop
xchg
pushf
pause
or
dec
popa
cmp
xchg
and
bound
into
mov
pop
cmpsl
push
fimuls
jae
gs
mov
adc
je
pop
adc
scas
or
pop
jbe
ret
es
sbb
stos
add
popa
fdivrl
or
fistpl
push
sub
stos
enter
test
jns
faddp
add
sbb
inc
imul
lahf
ficoml
dec
mulb
repnz
and
xchg
imul
cmc
pop
xchg
mov
cld
outsb
or
movups
inc
inc
fxch
push
icebp
in
cmpsb
sti
xchg
mov
imul
jmp
cmp
rcl
test
xor
cltd
fnsave
adc
sub
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
mov
fdivrl
adcb
nop
fldcw
popa
xor
mov
pop
and
mov
pushf
mov
je
push
dec
sbb
sbb
stc
insb
lahf
lahf
pop
pop
je
sbb
cmp
cli
jne
or
mov
aas
mov
jno
inc
lds
out
ffreep
lret
adc
mov
cwtl
jb
movsb
mov
or
bnd
popf
mov
arpl
test
out
ret
cmp
cmc
mov
repz
fcomp
pop
idivl
movsl
dec
je
test
mov
or
enter
dec
je
aas
add
movswl
xor
push
shrl
cli
cwtl
pop
call
mov
cld
mov
inc
repnz
or
xchg
sub
mov
je
repnz
cmp
das
in
xchg
cld
mov
xchg
xlat
dec
stos
or
test
fwait
mov
clc
push
push
sbb
jnp
dec
and
xchg
test
jmp
jecxz
lock
sbb
fsubrs
add
movd
icebp
lret
xor
inc
lods
negb
aas
mov
push
lods
or
mov
push
je
adc
mov
and
jb
into
mov
scas
mov
outsb
nop
leave
lods
out
add
xlat
mov
lret
stos
jl
cld
out
sbb
push
imul
dec
fldt
adc
cmp
jge
add
mov
ret
cmp
pop
pop
inc
xor
jne
mov
inc
xor
fsubrl
mov
jge
pop
imul
ret
sbb
push
out
add
adc
sub
pop
outsb
adc
push
arpl
mov
filds
adc
pushf
addr16
or
fmuls
jp
xor
add
into
lods
jns
jle
mov
adc
jbe
add
int
enter
push
lock
ret
fisttpll
outsl
loop
and
jmp
jae
xlat
pusha
and
pop
push
xlat
push
mov
sub
lods
pop
add
hlt
pop
das
xchg
daa
mov
lahf
fdivs
mov
mov
mov
pop
mov
lods
adc
mov
mov
repz
dec
pop
mov
mov
insl
mov
sub
and
test
or
push
sahf
je
pop
popf
popf
jo
lcall
mov
loop
sub
push
std
inc
push
lcall
pop
xchg
lds
fdivrl
cmpsl
cmpsl
mov
sub
fstps
mov
test
lcall
adc
mov
inc
ror
and
jle
cmp
clc
or
and
adcb
add
addr16
xchg
jmp
mov
cltd
mov
lods
leave
push
mov
cmp
jmp
pushf
push
xor
fcomp
leave
out
mov
push
and
decb
jmp
les
adc
sarb
js
pop
mov
mov
out
inc
mov
mov
jecxz
jae
frstor
xor
pusha
xor
jno
lea
xchg
outsb
sub
sbb
push
arpl
fsubr
jmp
push
ja
js
andb
push
jp
sub
sbb
mov
outsl
or
mov
inc
jl
and
xchg
mov
add
cmpsl
mov
jno
and
enter
xchg
add
pop
sar
mov
stos
push
pop
imul
pop
mov
mov
in
shrd
xor
jmp
mov
popa
lcall
insb
sarb
adc
adc
jnp
loop
int3
lods
push
enter
cmpsl
xchg
mov
sub
jp
scas
dec
jle
fdivp
fistpll
push
aam
xor
sbb
int3
jmp
or
mov
jbe
outsl
adc
call
xchg
push
rcrl
push
outsb
mov
xchg
adcl
cmp
xor
insb
mov
rorb
dec
mov
sub
rcll
inc
add
hlt
out
or
dec
lods
add
outsl
mov
cmpsb
mov
stc
aas
xchg
pusha
mov
testl
sbb
push
inc
xor
mov
sbb
jge
xchg
ficoms
ss
test
popf
add
rclb
mov
pop
les
jle
jne
pop
sarl
or
test
cs
inc
mov
fwait
dec
dec
out
ss
mov
aaa
repz
hlt
sub
imul
cs
out
pop
popa
insl
lods
push
imull
add
push
cmp
or
fst
int
add
push
movb
pop
mov
int3
lcall
cs
mov
mov
insb
cld
xchg
ds
or
ja
scas
movb
sbb
cmp
aaa
fisubrs
cmc
jns
or
lret
jp
loopne
jl
sbb
push
sbb
test
divl
lds
xorl
xlat
xor
add
push
ja
addr16
mov
mov
mov
ja
out
cmp
fadds
sbb
pop
fiaddl
or
fstpl
jl
test
jbe
cmp
aaa
pop
or
jbe
imul
push
push
bound
sbb
xchg
in
enter
scas
cmpsl
out
aas
fmuls
adc
aam
adc
inc
add
int
jno
inc
push
shl
push
mov
cmp
cli
xor
iret
pop
xor
push
ror
adcl
mov
cmc
inc
xlat
jecxz
pop
stos
mov
sbb
std
mov
inc
and
dec
sub
add
push
insb
cmp
mov
pop
hlt
ds
lea
xor
or
mov
xchg
mov
cmpl
xor
rcll
mov
jecxz
lahf
aad
sub
xchg
cmc
jmp
popa
jle
sbb
icebp
mov
inc
outsl
pop
loope
and
outsl
fistps
sbb
clc
mov
push
ja
lods
cwtl
pop
stos
pop
dec
rcrl
cld
dec
dec
imul
cmpsb
mov
clc
add
xor
lret
arpl
push
mov
int3
mov
int3
ret
bound
jge
dec
or
out
push
jmp
cmp
mov
call
rclb
xchg
daa
das
or
pop
dec
xor
inc
imul
dec
lcall
pop
ret
pusha
cmpsb
push
aam
fcomp
xchg
dec
es
xchg
pop
cli
mov
dec
xlat
cmp
imul
hlt
or
inc
xchg
addr16
jle
jmp
flds
xchg
push
push
jecxz
cmp
lcall
and
mov
add
iret
lods
pop
xchg
in
cmp
arpl
les
sub
adc
jb
cmp
rcll
xor
xchg
or
jle
and
pop
mov
popa
dec
mov
push
pop
mov
scas
add
in
test
adc
loopne
pop
inc
xor
or
mov
dec
add
pop
mov
jbe
mov
test
mov
ss
adc
xchg
sbb
xchg
xchg
pop
jle
dec
call
push
in
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
xor
mov
fmull
adc
fbstp
loop
out
lea
dec
add
push
xchg
push
je
jae
in
out
xchg
inc
mov
adc
dec
insl
sbb
or
ret
or
xor
dec
push
jecxz
imul
cld
cmp
andb
ret
or
push
and
btr
shll
dec
xchg
jne
or
mov
out
mov
dec
add
fldl
adc
and
mov
inc
mov
scas
dec
jmp
rcr
imul
push
icebp
outsb
push
rcl
and
add
cmpsb
xchg
inc
movsb
idivb
cwtl
dec
std
xchg
cmc
cli
lds
out
mov
test
xchg
adc
clc
xchg
int
daa
popa
ds
aam
mov
out
popa
pushf
jge
movsb
or
jmp
clc
push
iret
lds
mov
fmull
aam
cld
jmp
stos
jb
scas
rcl
and
xor
pop
jnp
pop
pop
push
int3
mov
cmp
push
enter
rcrb
mov
ror
jbe
sbb
push
and
cmp
neg
xor
jno
sbbb
xchg
sarb
adc
lock
adcl
popf
push
int3
mov
fbstp
cmp
stos
mov
into
adc
lret
popf
leave
xor
cmp
mov
cmp
ret
xor
add
mov
stos
and
cmpl
jmp
jecxz
fsubrl
xchg
arpl
mov
lods
dec
mov
xchg
inc
bnd
lret
movsl
mov
pop
sbb
add
icebp
xchg
cmp
dec
pop
xlat
pop
push
mov
in
adc
mov
mov
jecxz
lods
add
add
push
mov
insb
cmp
jno
adc
adc
and
call
loope
mov
pop
push
and
rcrl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
sbb
sub
sbb
adc
movlps
cmp
out
scas
bound
dec
cs
ds
shl
lcall
or
nop
cmpsl
adc
mov
pop
or
mov
data16
lcall
dec
js
cmc
in
movsl
pop
enter
sub
pop
nop
jmp
adc
mov
and
pop
xchg
sbb
mov
popf
enter
daa
pop
pop
lahf
rcll
mov
jb
jno
add
jo
mov
cltd
shrb
pop
pushf
jle
or
xchg
inc
push
bound
roll
pop
and
and
out
mov
stos
loopne
ja
aaa
in
das
or
js
sbb
bound
or
lret
add
pop
cltd
jl
pop
aas
mov
andb
insb
stos
jns
jecxz
dec
adc
in
and
scas
xchg
cli
hlt
add
mov
cltd
aam
repz
out
cmp
or
pop
push
je
movsb
imul
jle
mov
pop
push
arpl
xchg
nop
dec
in
mov
jns
or
push
jle
lea
mov
in
xor
imul
mov
push
scas
xchg
push
mov
jp
jg
in
sub
ror
push
mov
imul
aam
jne
out
mov
dec
fs
xlat
cmc
je
sbb
add
jnp
mov
rcr
mov
ret
ret
mov
mov
stos
sbb
andl
push
ret
hlt
push
xchg
jl
test
insb
scas
pushf
gs
clc
mov
movsb
leave
lds
popa
repnz
js
rcrl
movsb
fcom
jns
pop
dec
xchg
xorl
adc
xor
pushf
inc
rcll
fnstenv
mov
pop
int
mov
call
dec
fistpll
movsl
xor
xchg
mov
into
and
es
xchg
push
mull
mov
xchg
or
mov
add
inc
clc
cmp
add
movl
movl
movl
mov
jmp
outsl
or
or
popa
imul
nop
js
pop
out
stos
pop
sbb
adc
movlps
cmpsl
aaa
cltd
sbb
fwait
add
ret
mov
lahf
scas
xor
addr16
scas
or
jp
sbb
add
in
test
xor
and
aam
std
or
mov
ret
or
push
pop
dec
out
pop
cmc
or
xor
mov
sbb
inc
xlat
jbe
adc
cwtl
cmpsb
jne
insb
and
cs
das
and
insb
or
jno
sti
addr16
data16
bound
es
push
or
iret
pop
push
xor
jg
adcl
jno
ljmp
xchg
scas
add
stc
sbbb
xchg
add
test
inc
lcall
lea
call
xor
fstps
or
mov
enter
pop
imul
mov
int
pop
inc
lcall
les
sbb
lret
pusha
out
mov
mov
mov
arpl
dec
or
imul
dec
jl
insl
loop
fs
std
stos
cs
loop
mov
push
pop
and
sub
fnstenv
out
fistl
sub
add
jb
out
popf
nop
repz
add
das
stc
ret
add
inc
sbb
jg
jno
xchg
sub
ret
das
xchg
cmpsl
fsts
movsl
aam
pop
pop
adc
adc
cld
sahf
lea
xchg
push
sbb
jecxz
xchg
jns
or
jg
push
addr16
shl
out
jp
lcall
and
mov
cs
xchg
xchg
xor
jne
and
or
in
negb
fdivl
rolb
aaa
xchg
mov
and
pusha
pop
adc
push
mov
pop
sbb
xor
fidivrs
and
mov
cmp
xlat
add
dec
mov
das
fsubs
jne
xlat
xlat
mov
dec
aam
sbb
bound
or
in
mov
outsb
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
add
and
movlps
xchg
mov
pop
add
imul
pusha
rolb
int3
xchg
mull
or
or
or
adc
aam
test
out
imul
addr16
sbb
int3
iret
enter
cmp
dec
cmp
outsl
adc
mov
clc
ja
push
push
enter
pop
lea
insb
out
inc
xor
js
or
test
push
cli
inc
mov
sbb
ficoml
jae
pop
mov
out
mov
jns
sub
mov
shl
jb
adc
icebp
xor
dec
sti
jo
jns
cld
adc
sub
lea
xor
cmp
cmpb
jle
sub
shll
lahf
in
inc
xor
mov
or
pop
sub
roll
xchg
addr16
js
movsb
sub
int
test
add
insb
out
scas
outsb
arpl
insb
ret
sti
push
mov
js
push
xchg
pusha
pop
lahf
hlt
xchg
hlt
add
sub
push
packsswb
mov
push
sbb
repnz
or
fsubrp
cmc
jge
int3
imul
dec
mov
inc
adc
flds
clc
in
in
mov
movsb
push
pop
add
iret
add
ss
jo
and
adc
push
xchg
jbe
hlt
ret
sahf
xchg
cmp
shll
out
in
popa
push
mov
xchg
xchg
mov
repnz
frstpm(287
xchg
movsb
xor
fwait
outsl
lds
mov
jns
shlb
pop
push
pop
add
ja
adc
and
jns
test
lea
cmc
xor
sbb
test
sbb
sarl
mov
push
ljmp
bound
enter
jecxz
adcb
data16
xchg
fwait
add
dec
pop
aas
popa
xchg
insl
mov
cmpsb
push
mov
lds
sbb
lahf
pop
pop
lds
int3
fisttpl
inc
adc
adc
in
imul
push
push
dec
popf
cmp
faddl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
sahf
add
adc
movlps
mov
outsl
sbb
pop
jo
fcoms
sbb
xor
fsubr
test
mov
mov
sbb
xor
cs
pop
mov
xchg
sub
into
xor
aam
mov
cmp
xorl
ret
lock
addr16
pxor
hlt
mov
mov
cmp
shll
dec
xchg
jne
lret
lock
mov
rcrl
mov
mov
xchg
mov
xor
fwait
mov
icebp
or
loopne
scas
popa
inc
and
gs
push
dec
mov
add
xchg
or
mov
aam
lock
addr16
call
fsubrl
mov
add
mov
push
aam
xchg
mov
dec
pop
and
dec
sarl
jp
pop
pop
ffree
mov
aad
fs
ret
repnz
ljmp
cmp
inc
mov
push
sub
jne
scas
rclb
movsb
jbe
ret
mov
lahf
or
inc
add
sub
and
push
rcl
sub
xor
filds
es
test
add
jmp
add
xchg
pop
xor
adc
shr
cli
pop
fidivs
jbe
orb
xor
insl
xchg
mov
scas
fdivrl
cmp
add
jnp
cwtl
mov
sub
and
pusha
cmp
shl
aad
rclb
aas
add
mov
out
fwait
jo
pop
inc
push
xor
jmp
jp
xor
push
add
dec
daa
or
out
dec
sbb
ljmp
loopne
pop
jnp
pop
rolb
mov
sbb
pop
add
and
adc
pop
dec
jne
in
add
fsubrp
iret
scas
add
jge
pushf
mov
insl
cmp
stos
or
clc
fdivs
add
pop
mov
jmp
roll
mov
cs
dec
jae
mov
mov
adc
fmull
adc
pop
rcll
xchg
jge
pop
push
pop
rcll
mov
mov
add
add
mov
popa
push
test
testb
xchg
mov
iret
push
sub
xchg
icebp
lds
jl
xchg
sub
bound
enter
xor
aaa
jae
mov
sbbl
add
push
imul
pop
scas
mov
imul
jnp
jmp
push
shll
pop
adc
add
add
shrb
lahf
rorl
inc
call
and
fsubrp
pusha
mov
negb
push
std
imul
inc
clc
pmuludq
inc
insl
loope
loopne
cmp
sub
adc
enter
pop
push
mov
call
fidivrl
roll
fldl
sub
dec
fdivrl
ja
xorl
outsl
shll
aad
jg
jae
dec
mov
lea
pop
pop
pushf
loop
in
jns
pop
testb
xchg
add
push
test
ss
fidivl
dec
mov
jns
mov
add
jnp
sbb
enter
ja
enter
xor
inc
mov
repnz
das
movl
jns
jge
dec
cld
sub
and
test
xor
data16
inc
imul
adc
mov
aad
pop
and
stos
inc
cli
in
sbb
jge
mov
icebp
pop
xor
adc
mov
ficoms
xor
push
jae
fimull
add
inc
outsb
dec
mov
aaa
or
cld
inc
pop
push
test
outsl
aaa
and
loop
test
outsb
repz
jnp
add
aaa
xor
orb
in
xor
loope
shlb
mov
mov
inc
adc
cmp
pop
xchg
pop
sbb
scas
insb
adc
imul
sbb
and
dec
out
scas
mov
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
add
push
or
adc
movlps
jb
fistpl
cmpsl
adc
mov
sbb
xor
lods
cmp
jmp
bound
loopne
mov
or
shrb
pop
insb
lea
inc
pop
in
sub
stos
inc
pop
movsb
inc
outsb
adc
xchg
jg
mov
mov
test
jne
cli
pop
lock
cmp
pop
xchg
mov
popa
dec
repnz
inc
gs
push
or
test
fdivrs
mov
call
stc
jg
push
aam
aad
stos
xchg
xor
add
cltd
pop
adc
insb
incb
mov
adcl
adc
xchg
enter
cmp
shl
rcl
cmpsb
call
loop
mov
rcrl
ds
leave
add
dec
fstps
mov
les
cmp
add
cmc
std
lea
stos
arpl
cmpsl
aam
sbb
inc
inc
arpl
fwait
stos
ret
inc
adc
mov
mov
lcall
adc
sbb
mov
in
push
cwtl
sub
push
inc
sbb
inc
sub
stos
mov
das
mov
dec
cmp
add
sarl
add
fdivl
divl
jg
sbb
xchg
mov
sbb
and
mov
fdivp
pop
leave
imul
mov
xor
add
xchg
mov
or
jle
in
pop
add
lret
dec
xor
rcll
loopne
mov
ja
adc
pop
inc
popf
dec
adc
and
call
cmp
leave
stos
pop
lods
std
xchg
fildll
sbb
and
in
popf
sub
rcrl
loope
mov
addl
dec
mov
in
loope
sub
mov
adcb
test
pop
scas
sub
out
test
loopne
mov
sub
push
aad
xorl
in
sub
loopne
cmp
add
inc
fdivrl
cmp
add
inc
in
int
add
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
pop
xor
outsb
cmp
lret
inc
add
sti
jl
mov
cmp
adc
sbb
arpl
inc
fisttpll
jecxz
ss
lcall
popf
enter
sub
cmp
inc
cmp
inc
or
filds
jmp
loopne
fisttpll
push
inc
sub
es
ss
orb
sbb
test
xchg
subl
lods
call
je
les
mov
and
sbb
cmpsl
scas
std
dec
test
out
imull
notl
test
leave
in
jns
add
mov
cli
mov
fistpl
inc
add
push
daa
mov
sub
push
in
jp
cmp
push
inc
add
jl
xchg
dec
and
mov
jnp
inc
imul
arpl
mov
dec
lods
loop
sahf
mov
les
rorl
jg
mov
fcmovnu
loope
pop
das
mov
ja
add
lahf
fs
mov
sbb
outsb
mov
aam
jns
cmp
rorl
add
mov
adc
aad
popa
jg
and
test
jo
movsl
sub
sbb
lret
xor
xor
or
rdmsr
push
popa
jecxz
icebp
push
inc
fildll
cli
jbe
adc
xchg
test
rorl
sbb
xchg
loope
dec
adc
adc
sbb
pop
mov
adc
lods
arpl
add
cmp
dec
mov
xor
xor
cmp
mov
dec
stos
add
or
aam
shrl
or
pop
ljmp
lret
out
enter
loope
sub
cmpsl
adc
mov
mov
out
sti
inc
dec
aas
mov
mov
je
sbb
sub
nop
int
mov
shlb
test
ret
cmpsb
insb
push
out
or
inc
orl
fidivrl
div
add
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
push
pop
icebp
push
test
mov
pop
das
xchg
loop
xchg
cmpsl
lods
ljmp
jne
ret
int
js
mov
mov
sub
jp
inc
cmp
xrelease
xchg
jle
dec
iret
insb
sbb
ror
mov
insb
xchg
mov
nop
and
std
mov
jg
or
cwtl
xchg
mov
xchg
sti
cli
cmp
cmp
outsb
andl
dec
mov
sbb
add
popa
dec
jmp
jle
inc
cmpsb
adc
lahf
cwtl
jg
or
pushf
xor
pusha
aad
nop
jnp
out
ficomps
mov
in
lahf
enter
push
lods
pop
inc
pop
xchg
or
mov
lcall
ds
jne
pop
jo
ret
jecxz
or
dec
pop
sub
xchg
mov
mov
rcrl
mov
inc
sub
cmpsl
and
add
dec
into
push
jno
fdivrl
repz
and
push
into
lcall
aam
jle
dec
jp
jns
fadds
cmp
push
jle
imul
or
adc
inc
jns
xchg
mov
adc
xchg
jb
and
xor
andl
adc
ja
xchg
mov
mov
fxch
adc
jp
and
jb
ret
pop
add
repnz
and
cs
xchg
xor
stos
callw
add
cmp
fsubr
sub
movsb
dec
pop
out
stc
or
insb
fnop
xchg
scas
xchg
insb
dec
mov
pop
add
and
jno
mov
inc
and
les
xor
adc
bound
xor
lcall
dec
pop
mov
push
cltd
mov
lret
ss
shll
mov
mov
lea
or
dec
negb
push
xchg
or
dec
sub
fildl
inc
or
ja
add
inc
or
dec
add
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
popf
mov
adc
fmull
adc
inc
call
movsb
sbb
cmpsl
in
xchg
lods
and
mov
test
inc
movsb
fs
cli
in
or
push
mov
xor
and
lods
pop
sbb
js
pop
jnp
and
sub
iret
mov
inc
mov
iret
xchg
mov
cmp
jnp
inc
mov
pop
mov
movsl
push
mov
mov
mov
sbb
mov
mov
mov
lds
sub
dec
ljmp
divb
out
jbe
dec
sub
testb
and
cmp
mov
mov
fisubrl
sahf
or
aad
pop
subb
addr16
aaa
xor
jge
or
pop
xchg
ja
test
inc
dec
xchg
cmpsb
add
leave
ds
ret
les
cmp
sbb
repnz
sub
mov
test
xchg
dec
jg
int
pop
pop
push
mov
icebp
sbb
inc
xlat
stc
push
dec
xor
lret
adc
inc
ss
fisttpl
in
cmp
inc
or
xchg
dec
cmpsl
push
pop
out
popa
and
out
push
fstps
lea
pushf
or
xor
mov
lods
cmp
gs
xor
jno
inc
ljmp
inc
inc
sub
sarl
sbb
jne
adc
mov
push
fisubrl
cmp
test
insb
cli
dec
mov
in
push
inc
cmp
mov
enter
bound
scas
mov
xchg
dec
aad
xor
inc
push
je
clc
xchg
outsb
aas
add
xchg
or
shrl
cmp
sbb
iret
outsb
push
mov
orl
arpl
mov
dec
adc
jecxz
inc
mov
je
nop
jge
mov
lret
sub
lcall
dec
mov
das
ds
scas
or
pop
or
cmpsb
inc
xlat
sbb
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
cld
or
lods
popf
cli
adc
fmull
adc
mov
cmp
jle
repnz
scas
movsl
prefetchnta
pop
push
mov
sbb
mov
cli
jg
mov
jnp
sub
repz
sub
xchg
into
cmp
int
sarl
or
sbb
dec
bound
dec
push
xlat
push
icebp
xor
pushf
mov
push
mov
push
sub
jnp
das
xor
jne
lods
int
das
pop
icebp
push
in
dec
repz
mov
call
push
out
bound
test
sub
adcb
and
push
mov
iret
sub
js
or
pop
rep
lods
pop
outsl
jae
mov
cmpsl
in
push
jle
mov
nop
filds
mov
jns
mov
loopne
aam
push
mov
and
lret
add
mov
xor
sarb
imull
lret
ljmp
insb
jge
in
xchg
sbb
inc
dec
push
xchg
push
xchg
jnp
xlat
fidivs
xchg
mov
dec
scas
pop
rclb
sbb
xor
stc
fadd
je
add
mov
fucomp
sbb
dec
das
push
cmpsl
add
adc
fwait
sub
rcrb
outsb
xchg
dec
adc
push
mov
movsl
scas
rol
lahf
cmpsb
add
cs
addr16
out
lahf
addb
orl
xlat
add
sbb
pop
arpl
mov
mov
out
adc
cmp
sub
or
movsl
aam
mov
ljmp
std
icebp
xlat
das
mov
fnstsw
or
sarb
xchg
mov
jae
xchg
clc
mov
mov
jp
loopne
aaa
pop
push
xor
data16
sarl
mov
xchg
je
imulb
mov
rcrl
stos
or
push
pop
and
fmull
sub
or
mov
push
in
push
xor
push
rclb
mov
sbb
ds
outsb
sub
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
shll
mov
movlps
out
int3
dec
xor
out
cli
scas
add
lret
ja
aaa
mov
in
fsubl
cmp
loope
adc
cmp
xor
idiv
jae
inc
cmpsb
subb
mov
je
fmulp
stos
inc
cmpsl
fsubs
mov
ret
jl
add
mov
sub
data16
adc
hlt
fimuls
into
xchg
popf
cs
enter
jge
pop
mov
adc
imul
adc
jecxz
and
inc
sarb
push
and
cmc
mov
cmp
mov
pusha
jp
fnstenv
repnz
xchg
xor
fdiv
mov
sbb
and
mov
iret
mov
mov
pop
imul
int3
loopne
sub
lea
add
icebp
rcll
sarb
in
fbld
cltd
into
gs
in
js
pushf
lret
cmc
divb
addr16
lds
scas
pslld
outsl
leave
inc
sub
or
or
pop
test
pop
stos
inc
in
dec
mov
nop
cmp
jbe
leave
inc
mov
jecxz
adcb
imulb
or
xchg
mov
dec
movsl
cs
and
stc
mov
cli
aaa
fs
fwait
xor
ljmp
lock
jecxz
addl
inc
and
stos
shlb
and
and
insl
cwtl
cltd
fisubrs
xchg
lods
in
or
inc
or
and
leave
fstpt
mov
ficomps
inc
xchg
mov
fcmovne
gs
xchg
mov
xchg
dec
sub
orl
ss
lods
stos
rorl
add
into
cmp
pusha
and
pop
aam
dec
inc
lea
movsl
testb
jle
xor
lods
imul
daa
dec
test
cli
xor
push
pop
cmp
ret
cmp
andl
sub
inc
add
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
cmc
pop
sbb
repnz
add
in
fdivl
inc
push
pop
cmpsl
loopne
cli
jge
pusha
out
int3
jbe
cmc
hlt
add
dec
dec
cmpsb
hlt
and
xor
lods
hlt
mov
divb
js
inc
add
xchg
xchg
shlw
sbb
or
shr
cli
cmp
fimull
stos
out
xchg
push
adc
outsb
push
xor
ret
cmp
loope
cmp
in
aam
sub
sbb
aad
addl
aad
aaa
cld
lea
pop
push
mov
clc
test
add
xchg
lret
or
mov
lock
sti
insb
icebp
jno
lods
ds
xchg
lods
mov
or
mov
mov
xchg
push
cmp
mov
dec
ljmp
int
sbb
out
dec
pop
xlat
jg
cmp
push
ja
out
jne
js
test
mov
js
and
sbb
mov
into
lret
pop
ficoms
lcall
in
test
fwait
lahf
mov
add
mov
adc
pop
sbb
add
orl
sbb
push
js
aad
andl
mov
hlt
xor
sbb
cmc
loope
inc
inc
sbb
pushl
push
outsb
mov
jmp
mov
cltd
rolb
xor
rorl
jae
outsb
cld
sbb
jbe
pop
dec
fnstsw
xchg
xor
jge
std
push
inc
mov
inc
rcrb
std
mov
cli
or
mov
xchg
sub
xor
xchg
mov
lds
xchg
scas
scas
mov
out
int
cmp
sbb
pop
cmpsb
jg
cmpb
std
xchg
push
push
mov
push
js
add
xor
sub
icebp
or
adc
mov
ror
fnstenv
pusha
repnz
ffreep
pusha
mov
dec
lahf
add
int3
inc
add
fsub
mov
sti
inc
cmp
and
adc
cmpsb
movsl
nop
sti
add
sbb
push
cli
insl
andl
xor
mov
sub
rcrb
xor
je
push
pop
fildll
loopnew
fadds
jb
call
cld
push
sarb
out
xchg
popf
pushf
mov
repz
jne
in
mulb
jg
clc
negb
xchg
mov
or
ja
xchg
mov
in
jb
mov
mov
xchg
cltd
in
xchg
cmp
arpl
add
add
dec
cmc
notl
push
sub
add
sbb
test
jp
pop
ret
scas
insb
dec
xor
add
adcl
inc
xor
bound
fwait
jl
pop
lahf
arpl
and
or
mov
sbb
inc
or
test
adc
push
jns
sbb
push
stos
pop
adc
aas
pop
xchg
repz
fldenv
loop
outsl
push
lods
fwait
push
sahf
inc
inc
xlat
or
in
or
iret
lret
push
adc
sub
mov
xchg
int
lods
dec
es
inc
test
loop
sub
add
sarl
enter
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
mov
insb
mov
adc
jo
adc
pop
pop
les
mov
clc
ljmp
fsubrp
call
dec
lods
sub
mov
jb
in
xor
outsb
mov
lock
lcall
stos
mov
mov
adc
and
mov
repnz
jb
shlb
mov
ss
sbb
adc
adc
cmpsl
int3
lods
in
fxam
dec
dec
mov
xor
push
sbb
or
jo
in
lock
flds
xor
cwtl
nop
jl
data16
or
mov
gs
or
aam
xchg
lret
cmpsl
jno
mov
push
and
cli
pushf
neg
insb
xchg
daa
xor
cmpsb
test
testb
push
jg
or
or
push
cmpsb
push
lea
mov
frstor
mov
and
hlt
adc
jmp
jp
enter
test
or
pop
jge
lds
jp
dec
stos
pop
xchg
sub
or
push
sbb
inc
mov
dec
sub
insb
push
cmc
inc
outsl
xor
mov
test
jecxz
or
jg
mov
stos
jbe
mov
cmp
xlat
data16
jbe
repz
std
out
pushl
fwait
mov
repnz
mov
fs
cmp
inc
inc
out
sti
adc
loope
imul
sbb
call
mov
insl
test
sbb
or
inc
leave
sbb
mov
rcr
mov
pop
add
leave
dec
mov
inc
daa
adc
jnp
xchg
stos
out
rclb
insb
and
xchg
loop
xor
andl
lods
inc
add
adc
sub
ss
fcoml
out
jle
aaa
pop
rcrl
mov
pop
lods
mov
mov
frstor
in
push
ja
fcompl
movsb
cltd
int3
hlt
sub
test
arpl
lds
pop
cmp
sar
jmp
pop
and
add
mov
insl
cmp
lahf
mov
shrl
mov
jl
cmp
inc
out
xor
dec
add
push
test
mov
insl
dec
sub
add
sarl
data16
mov
add
movsb
ror
hlt
mov
push
cmp
inc
jge
sub
cmpsb
lcall
lcall
mov
mov
inc
and
lcall
outsl
stc
fwait
cmpsl
pop
pop
lock
nop
cmc
adcb
and
cwtl
jb
cli
lret
imul
inc
fisttpll
stos
pop
cli
sti
repz
dec
pop
sub
adc
outsl
fdivp
pop
outsb
std
lahf
negl
jg
ja
dec
das
xchg
ljmp
lahf
cmp
enter
in
out
lret
sbb
daa
xchg
std
mov
stos
int
mov
ret
and
rorl
mov
insl
and
int3
pusha
sahf
sub
insl
mov
aaa
mov
in
daa
jnp
add
cwtl
mov
inc
add
ljmp
movb
and
data16
adc
sub
jecxz
mov
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
push
js
fists
adc
adc
push
xor
out
insl
popf
inc
dec
hlt
or
ljmp
loopne
jnp
es
add
mov
popa
les
fisttpll
mov
scas
adc
jno
pop
es
mov
mov
scas
shll
jl
int3
in
add
and
lcall
ret
pop
fld1
ss
jl
add
mov
fisubl
fstpt
xchg
jmp
mov
imul
push
jns
sahf
cld
lds
xlat
add
les
repz
negl
dec
cli
jp
inc
sub
jno
mov
mov
scas
xor
ljmp
inc
adc
sub
and
pop
gs
mov
movsl
pop
nop
jne
lods
add
cltd
sbb
inc
enter
popa
pusha
outsl
in
mov
lock
add
ljmp
mov
mov
int
push
jns
xchg
in
push
dec
inc
jg
rorl
pop
outsl
arpl
fsts
and
rcll
xor
frstor
inc
push
mov
sbb
lods
push
sub
fcompl
inc
sub
jmp
sahf
and
lods
in
dec
push
xor
mov
leave
push
adc
addl
pusha
adc
xor
fwait
rcrb
stos
and
inc
jo
jge
dec
add
mov
ljmp
and
or
lret
jbe
add
sti
pop
sub
sbb
push
int3
or
fstpl
sub
inc
adc
sub
pop
mov
ljmp
insl
push
sbb
lods
lahf
xchg
out
inc
mov
addr16
pushf
add
mov
rorb
mov
add
rcrb
pop
and
js
mov
test
dec
xchg
mov
lock
sahf
scas
aad
test
adc
lret
addr16
sub
xor
cli
fcmovne
pop
in
shlb
push
arpl
sub
adc
daa
loop
fisubrs
rcr
cmp
sub
andb
scas
rol
stos
icebp
jno
aas
inc
mov
and
and
xchg
cld
or
lcall
mov
mov
icebp
inc
push
adc
mov
aam
xor
js
pop
aad
xchg
jbe
dec
lret
jmp
adc
push
pop
cltd
sbb
push
hlt
pop
ret
push
sarl
jp
popa
testb
int
mov
fistl
out
inc
mov
push
fildl
pusha
popl
dec
push
call
hlt
into
rcrb
mov
inc
in
inc
mov
fistps
in
jle
rcrl
int3
loopne
and
mov
adc
jecxz
xor
aad
inc
aam
cmp
add
inc
cld
xor
add
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
dec
sti
jle
fstl
adc
adc
mov
outsb
mov
mov
add
or
add
jg
pushf
sbb
jl
lods
imul
mov
adc
daa
dec
sbb
sbb
inc
cmp
inc
jae
popa
aam
and
stos
out
dec
xchg
dec
dec
dec
xor
mov
lods
push
mov
out
fmull
adc
cs
andl
lcall
lcall
jnp
lret
jecxz
insb
jl
imul
mov
cmp
xchg
sbb
imulb
jb
inc
mov
fisubs
sbbb
add
pusha
inc
mov
jb
pop
dec
inc
inc
in
push
push
pop
stos
push
dec
mov
scas
pop
mull
jo
inc
scas
lret
sub
or
cmp
enter
jns
mov
sti
lret
icebp
cmp
test
popa
orl
jno
xchg
sub
call
push
gs
mov
test
pop
push
ja
mov
loop
mov
rolb
xor
mov
mov
xor
pop
mov
lds
adc
add
add
cmpsb
rcll
cwtl
and
pushf
push
push
xchg
adc
or
movsl
jbe
or
and
int3
cmp
sbb
cld
std
push
rsqrtps
lea
lcall
xor
and
imul
je
jbe
jmp
mov
out
fcomps
add
dec
xor
cmp
lock
mov
jge
cmp
or
xor
ret
outsl
pushf
lea
cmpb
mov
sub
dec
sub
stos
jp
movsb
xchg
cld
add
fmul
jbe
cmpsl
outsl
in
sub
xchg
in
int
decl
lcall
movsl
cld
add
pop
enter
mov
leave
jo
fsubl
stos
dec
pop
aas
std
jnp
fiaddl
movsb
lahf
jns
fcmovnu
and
jl
push
mov
cmp
push
cmc
adc
xor
sbb
inc
scas
dec
adc
in
pop
add
cmc
fcomp
imul
imul
stc
xchg
or
add
cmp
cmp
jmp
lret
test
leave
lods
mov
je
mov
fadds
jmp
jecxz
lods
mov
and
loopne
movl
push
cmp
mov
sti
jns
insl
mov
push
hlt
movsl
rcll
adc
inc
xchg
push
icebp
jecxz
movsb
data16
clc
lcall
jbe
sub
sub
mov
mov
lahf
dec
imul
stos
inc
dec
call
mov
lret
aam
jg
rolb
mov
mov
test
cs
or
in
jnp
mov
shlb
jo
or
fimull
jo
xor
ret
shl
mov
pusha
es
xchg
xchg
into
loop
xchg
js
test
imul
dec
in
or
inc
xchg
movl
mov
mov
jmp
jg
inc
dec
and
cwtl
lods
cmpsl
pop
pushf
lods
sahf
aad
adc
adc
mov
add
int
pop
pushf
insb
addb
sub
lahf
pop
mov
mov
adc
movsb
push
or
and
das
cmp
jns
je
pop
sbb
adc
jb
or
push
pop
ja
cs
mov
dec
push
out
lahf
sahf
dec
les
std
mov
decl
bound
push
push
inc
push
divb
in
push
mov
testl
loop
imul
sub
dec
rcll
call
cmp
sbb
inc
js
test
mov
push
jb
pushf
mov
js
pop
negl
in
cmp
xor
dec
es
dec
push
inc
lret
mov
sbb
imull
sbb
jns
dec
lahf
xchg
ja
add
dec
roll
shrb
aad
add
pop
mov
push
xchg
push
jp
or
loope
mov
add
cmp
xlat
and
add
arpl
and
sbb
insl
sub
sbb
mov
jle
gs
mov
jb
sahf
push
jae
mov
mov
mov
adc
aad
rcll
in
inc
outsl
sub
es
in
lret
ret
add
inc
in
scas
or
ror
imul
pusha
js
inc
lods
loopne
faddl
nop
ficomps
fsubp
push
sub
xor
movsl
aam
pop
pop
sarl
stc
je
mov
mov
fdivl
jb
xchg
pushf
int3
mov
mov
sbb
insb
pop
pop
add
or
lock
xchg
jbe
aad
mov
fidivrl
add
lds
jno
add
into
dec
ljmp
into
push
and
in
in
jle
pop
sahf
cmp
iret
mov
mov
and
xor
and
loope
nop
iret
mov
jmp
xor
adc
or
cwtl
loop
out
xor
add
in
dec
test
sub
xor
mov
jae
dec
loopne
insl
bound
mov
fisubl
ret
outsl
repz
dec
mov
scas
pop
aam
fwait
add
add
add
dec
jns
pmaddwd
mov
sub
and
jmp
sbb
aas
mov
push
ja
sub
cmp
mov
xchg
mov
pop
pop
cmp
adc
inc
int3
mov
push
pop
add
sbb
mov
pop
push
dec
std
mov
fnsave
stc
dec
jmp
cmp
imul
mov
jno
imul
stc
push
cmp
pop
and
cmp
out
mov
sub
jo
das
hlt
fwait
dec
in
sub
rorl
and
xchg
cmp
loopne
jno
fs
sbb
jbe
dec
mov
or
daa
js
cwtl
jno
loopne
mov
mov
dec
xor
rcrb
lds
lods
push
jmp
rorb
faddl
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
pop
and
js
lret
adc
jo
adc
dec
push
sbb
or
out
dec
push
in
loopne
pop
cmpsb
jge
mov
cmp
mov
push
and
cwtl
pop
xor
ja
push
sbb
jb
xchg
push
popa
mov
insb
push
aad
aad
inc
in
cwtl
addr16
and
dec
or
and
jmp
xchg
push
or
stos
cmp
inc
dec
andb
jnp
sbb
cld
mov
in
dec
and
adc
pop
shll
mov
jae
mov
sar
fdiv
ret
pop
leave
sub
jp
jno
mov
frstor
mov
sub
jns
push
aas
sbb
shl
outsl
and
vpmadcsswd
dec
iret
movsl
fs
add
rorb
call
shll
and
out
add
ja
push
push
lods
cmp
mov
fs
mov
push
repnz
xchg
adc
hlt
mov
xlat
push
sub
lret
cmp
dec
in
sbbb
xchg
repz
xor
mov
sbb
es
mov
stc
hlt
cmp
mov
out
pop
inc
cmc
push
cmp
imul
and
jnp
vmovaps
pop
add
setno
add
mov
pop
nop
mov
lret
or
mov
adc
inc
push
roll
mov
scas
xchg
jns
in
popf
les
test
in
mov
es
jg
cmpsb
pop
push
ja
add
subl
nop
mov
inc
pop
enter
jmp
or
ret
out
fisubl
pop
xchg
jmp
jle
push
jmp
cmp
outsb
fdivs
mov
cmp
shll
lods
add
decl
loop
in
mov
dec
dec
nop
ja,pt
mov
add
jle
fs
or
sbb
and
pop
iret
shll
daa
xor
mov
or
and
adc
cmp
jle
lea
incb
lea
hlt
inc
mov
dec
push
fsubr
mov
and
jo
pushf
pxor
int
mov
aam
sub
pop
adc
add
insl
out
sbb
xor
inc
nopl
push
or
xchg
add
add
iret
pushf
xor
dec
out
ds
test
inc
pop
mov
hlt
and
gs
fsts
stos
aaa
neg
aaa
and
stos
or
sub
ret
loop
pop
jp
popa
rcll
and
pushf
fidivrs
xchg
xchg
cmc
scas
cmp
push
mov
int
pusha
jle
pop
or
jge
test
addr16
adc
or
pop
in
xchg
sbb
popf
insl
arpl
xchg
mov
repz
lock
pop
movsb
pushf
adcl
fisubrl
sub
jne
in
rcr
mov
dec
pop
ret
mov
or
mov
sbb
pop
pop
lods
jbe
aad
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
mov
xchg
clc
inc
stos
insl
imul
jecxz
jne
or
cmpb
lds
and
fisttps
push
cld
inc
push
out
cs
ret
mov
scas
mov
pop
xchg
inc
mov
add
stos
fidivrl
flds
mov
ljmp
outsb
test
add
jns
or
xor
xchg
sbb
inc
xchg
movsb
jbe
sbb
fsub
mov
cs
ja
or
add
sbb
lret
sbb
lret
sahf
loope
roll
inc
sbb
pusha
in
cld
std
sti
enter
inc
les
mov
enter
jb
pushf
sahf
insl
icebp
cltd
adc
jb
daa
push
imul
and
cmp
xor
sub
push
xchg
lahf
fcomps
xor
es
rolb
jne
into
ret
add
mov
mull
inc
imul
sbb
xchg
sti
pop
xlat
fs
adc
stos
inc
xor
adc
push
and
faddl
push
inc
je
sbb
or
cltd
push
and
bound
sbb
movsl
mov
sbb
shll
sahf
mov
sub
and
inc
jmp
inc
jmp
and
add
sbb
js
in
int3
jnp
push
int
ljmp
xor
stos
adc
jmp
or
xchg
mov
lea
xchg
xor
and
stos
repz
add
xor
popa
loopne
orb
jo
push
mov
add
mov
xor
js
pop
pop
outsl
lods
and
out
pushf
scas
cmc
imulb
enter
cld
jmp
divb
jae
push
inc
shlb
jge
and
shll
movsl
popf
negb
sti
push
sub
mov
push
xchg
add
orb
cld
out
outsb
rol
dec
push
mov
dec
add
add
mov
inc
pop
out
insb
subb
fldcw
pusha
fwait
lahf
pushf
ljmp
fwait
xor
cltd
cwtl
cltd
rclb
inc
stc
test
jb
leave
pop
jae
test
iret
subl
mov
mov
xor
cmp
or
jge
fcomi
inc
xchg
lret
pop
fldenv
add
in
push
es
test
xor
xor
jne
clc
nop
leave
data16
fidivrs
icebp
inc
mov
std
mov
add
add
jg
adc
scas
xchg
cwtl
andb
mov
jp
loopne
clc
jge
ja
popf
enter
es
mov
enter
sub
cmpsl
pop
shrl
movsl
mov
dec
daa
xor
mov
dec
inc
enter
sub
dec
push
sbb
add
fdivrs
cmp
or
xchg
mov
ljmp
xchg
movsl
dec
cli
call
xor
fcompl
movl
add
mov
in
test
js
lcall
add
test
call
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
into
subl
adc
scas
xor
stos
adc
mov
imul
int3
lahf
sub
mov
lea
sub
fiadds
lea
jb
and
sbb
cltd
repz
je
testl
dec
jmp
or
or
iret
sarb
daa
lock
in
cltd
sbb
and
das
mov
sbb
data16
outsb
xchg
push
adc
hlt
jo
ja
jp
mov
inc
jne
test
mov
mov
scas
jne
or
es
fwait
push
fistpl
dec
xchg
add
popf
mov
in
mov
enter
bound
popa
sub
insb
mov
mov
jne
sub
jg
pop
icebp
mov
lret
push
xorl
adc
enter
jmp
movsb
stos
xchg
and
notb
aad
int
ja
fbld
mov
sti
call
mov
sbb
fnstsw
dec
ret
aam
nop
in
pop
xchg
gs
fwait
aas
cmp
mov
leave
lods
jmp
aam
add
xchg
out
mov
aaa
movsl
pop
pusha
rcrb
addr16
enter
xor
dec
sub
aas
int3
or
inc
mov
add
jmp
scas
mov
pop
add
sub
xchg
jnp
xchg
ja
pop
or
imul
push
mov
jl
outsb
int3
in
pop
and
adc
inc
dec
jb
fidivl
push
xchg
pop
insl
sarb
dec
je
into
aam
jae
stos
pop
or
lea
lds
stos
jbe
dec
inc
js
and
shll
or
in
or
and
test
adc
xorb
adc
xchg
cmp
inc
cwtl
adcb
sbb
mov
or
mov
cmpb
inc
xchg
mov
jmp
jl
or
or
fldl
movsl
aas
mov
xchg
push
out
xchg
dec
inc
test
push
xchg
int
mov
dec
adc
adc
cmp
jo
jae
pop
ljmp
loopne
push
mov
out
pusha
lcall
xor
jmp
or
cmp
fisubs
imul
xchg
inc
mov
dec
divb
xchg
mov
sub
push
mov
push
pop
outsl
jae
pop
mov
sbb
inc
stc
sbb
jle
imull
xchg
dec
out
iret
pop
push
popl
mov
loopne
das
negl
leave
mov
push
xchg
fcmovnu
ja
call
ljmp
and
scas
push
sub
xchg
cmp
pop
jo
ret
cltd
xchg
fisttpl
add
popf
mov
push
jg
lcall
mov
add
dec
push
divb
in
lcall
mov
loop
adc
sbbl
faddl
imul
xor
out
cli
jmp
xor
xlat
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
jp
jb
push
mov
adc
adc
iret
inc
mov
call
aam
call
inc
cld
repnz
cmp
sbb
imul
push
push
mov
cld
add
and
push
daa
xchg
jae
mov
jle
and
scas
sub
std
jmp
aas
in
or
push
fcoms
or
out
das
test
adc
pop
outsb
ja
fistpl
pushf
push
pop
lcall
jecxz
lock
iret
lret
cmp
mov
je
cltd
mov
mov
shll
imul
fs
mov
dec
roll
imul
mov
mov
sahf
cld
addr16
pop
rolb
xchg
mov
inc
push
sbb
sub
mov
lods
sbb
in
ret
pop
inc
sbb
dec
popa
xchg
jmp
push
insb
and
cmp
dec
outsb
jnp
lea
mov
lds
movsb
ljmp
pop
arpl
mov
sbb
xlat
iret
data16
push
add
push
pushf
cwtl
jo
jp
cmp
xchg
and
mov
or
xchg
mov
bound
in
push
int3
in
push
jne
stc
mov
and
out
xor
shrb
or
repnz
int3
xchg
dec
mov
or
ss
push
ret
lods
adc
stc
cmp
push
xchg
xchg
negl
int
fldt
pop
int
dec
sub
cld
push
sub
dec
xchg
mov
sub
cld
filds
xor
pop
adcl
into
lods
out
xchg
push
imul
inc
pop
and
popf
cmp
xchg
push
addr16
aas
cld
enter
xor
psllw
repz
hlt
lock
movsb
xor
test
inc
arpl
cmpb
leave
sub
or
xchg
add
push
push
xchg
mov
shlb
loopne
xchg
sbb
aam
pop
xchg
or
in
mov
std
jns
js
xor
cmp
lds
cmp
sbb
fs
ficoms
ret
xchg
push
in
mov
sub
int3
mov
jmp
stc
xor
adc
or
stos
loopne
aad
jo
lahf
jno
jns
loop
push
cmp
sbb
push
adc
pop
sub
jno
push
xor
sahf
movsb
pop
add
pop
dec
or
inc
movsb
add
xchg
insl
and
ds
jp
xchg
outsb
pop
jbe
leave
xchg
fsubs
sbb
and
js
scas
jo
fmull
xchg
test
and
inc
repz
aas
lock
ss
mov
sub
pop
jecxz
sub
push
fidivrs
mov
test
fisubrl
lock
fmul
orl
daa
jg
out
mov
cmp
cmc
push
int
xchg
les
lods
pusha
and
or
mov
inc
dec
test
pop
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
xchg
jmp
adc
inc
imul
nop
lods
fstpt
cltd
lea
mov
xchg
jecxz
cmpsl
sbb
mov
dec
insb
xlat
inc
cmp
andb
and
cld
addl
sti
shll
cwtl
cmp
out
sub
mov
faddl
sbb
ljmp
cmc
aaa
imul
mov
gs
xor
jae
loopne
in
pop
jo
call
and
lea
in
fstps
pop
cwtl
jl
push
dec
cmp
xor
and
das
lock
cs
xchg
imul
cmpb
jl
jl
mov
lock
test
subb
inc
cmp
or
in
out
xchg
ds
pop
push
out
add
cmpsl
test
out
aad
leave
orl
xlat
xchg
jnp
cmpsb
cld
sub
bound
scas
jle
nop
adc
jp
repnz
cltd
sbb
div
mov
and
xor
cld
push
lea
hlt
sti
mov
stos
and
and
pop
or
stc
les
test
sub
std
mov
adc
and
sar
je
sarb
mov
mov
xor
rcr
lcall
and
stc
or
pop
xor
cmpsl
cmpsb
or
mov
and
cmpsl
into
mov
adc
add
xor
xchg
xchg
pop
mov
fildll
sub
addr16
pushf
lahf
sub
ja
movsl
xchg
mov
divb
mov
ret
pushf
xor
push
fcomi
jle
xchg
mov
sub
mov
mov
sbb
mov
mov
mov
mov
insl
xor
sub
sub
adc
nop
fimuls
test
pop
test
push
mov
and
aas
jl
call
in
mov
sbbb
mov
rcll
push
push
fstpt
dec
xlat
lods
pop
mov
lea
call
mov
mov
or
or
push
add
push
jmp
push
pop
push
js
cmpsl
es
stos
adc
stos
movlps
jns
repz
xchg
mov
or
loope
inc
sbb
lds
mov
cld
int
pop
arpl
ja
mov
nop
loopne
adc
and
mov
sahf
test
test
jns
ljmp
lds
popf
in
mov
mov
dec
shlb
xor
add
rorb
inc
adc
sub
mov
inc
push
xor
dec
pusha
gs
xchg
add
xor
adc
add
jb
push
std
dec
xlat
out
mov
icebp
sub
pop
insl
mov
aad
xor
call
push
sub
out
mov
or
jno
add
mov
jo
aam
push
js
adc
jg
es
jnp
stc
notb
add
mov
push
aas
xlat
addb
inc
out
mov
xchg
push
in
xchg
lret
mov
push
jge
test
dec
fstpl
cmp
sbb
mov
ja
das
shll
clc
hlt
loop
aaa
xchg
stos
sbb
sbb
das
pop
loop
jb
loope
hlt
xchg
xor
inc
or
cmpsl
adc
or
push
pop
out
cmp
iret
jecxz
cwtl
les
push
sbb
mov
insb
push
mov
xchg
mov
insl
cmp
or
pusha
lret
inc
ss
cs
shr
sahf
xor
lret
aaa
dec
dec
fdivl
sub
imul
sub
adc
int3
jl
mov
mov
sbb
rorl
mov
in
testl
call
xchg
out
aaa
add
fwait
iret
cmp
or
mov
and
bound
mov
xor
out
xchg
rcl
lcall
int3
andl
jmp
in
sti
xor
in
sbb
pop
xchg
sarl
adc
dec
lds
test
arpl
mov
ss
or
adc
add
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
inc
mov
adc
movsb
jle
mov
mov
or
and
push
subl
ljmp
pop
fisubrl
jge
push
in
int3
or
lahf
aam
inc
pop
or
sub
js
call
or
inc
fldt
pop
mov
ficoml
cmp
lcall
sbb
or
mov
mov
jns
fs
sub
pop
pop
and
mov
xlat
dec
pop
loope
adc
out
and
mov
cmpl
xor
pop
out
pop
lods
jmp
fchs
pop
mov
xchg
rep
xor
mov
inc
or
or
fdivl
cwtl
lahf
jno
adc
fidivrl
and
xchg
lods
mov
dec
andb
adc
jne
iret
sub
mov
dec
adc
ljmp
add
fdivl
push
xor
imul
aad
pop
sbb
int
dec
xchg
cmpsb
clc
cmpsl
jo
shll
jno
negb
rcrb
xor
data16
popf
mov
loop
dec
cmp
pusha
or
sub
push
mov
mov
and
out
gs
xor
cmpsl
add
sbb
sahf
jmp
aad
mov
sbbb
mov
arpl
aad
dec
lods
cltd
push
fistpll
fsubrp
sbb
xchg
sub
push
pop
jle
push
fs
test
bound
roll
adc
xchg
cmp
pop
fbld
push
pop
push
repnz
ret
pop
jp
nop
push
and
push
dec
mov
call
push
push
cmp
xchg
mov
iret
rorb
lret
xor
inc
jo
mov
je
push
dec
mov
jb
fidivrs
xchg
and
jne
stos
fs
jmp
scas
in
lods
push
dec
mov
dec
cli
popf
je
aad
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
mov
mov
adc
ret
fbld
lods
aam
mov
dec
test
xor
jo
hlt
out
sub
fptan
cmpl
dec
popf
sub
lds
int3
popa
andb
sbb
sub
xchg
and
aaa
testb
es
xchg
and
stos
xor
cli
mov
or
mov
out
js
adc
pop
mov
insl
jb
mov
sbb
jl
cmpsb
sub
mov
insb
dec
pop
jecxz
xchg
stos
dec
or
inc
inc
rolb
jne
stos
lods
out
scas
mov
out
or
mov
fisubrl
ret
pop
notl
xor
adc
adc
and
imul
stos
lcall
mov
inc
sbb
push
push
dec
aam
push
push
test
add
mov
inc
jo
mov
jp
cli
and
xchg
mov
test
mov
hlt
xor
inc
mov
cmpsb
mov
fcoml
call
fiaddl
rol
inc
aas
xchg
cmp
mov
xchg
push
mov
and
pop
jecxz
clc
roll
sub
sub
cs
outsb
in
inc
push
nop
sbb
mov
pusha
rclb
xchg
lcall
outsb
and
mov
outsb
sbb
add
lods
push
push
mov
stos
pusha
xchg
jle
dec
or
ss
sbb
push
lock
inc
mov
jmp
dec
push
rclb
test
and
lahf
mov
clc
inc
rolb
pcmpgtw
cmpsl
enter
mov
inc
ljmp
cmp
movsl
out
jl
frstor
dec
sbb
movsb
sub
mov
inc
daa
testl
in
jb
fmull
mov
aad
jle
push
lret
out
call
add
mov
adc
std
test
push
adc
fadd
jg
and
rclb
test
pop
jae
ffreep
inc
in
movsb
imul
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
loopne
jle,pt
lahf
adc
stos
movlps
sub
xchg
out
aam
xchg
mov
jbe
push
arpl
mov
int3
subb
lret
cmp
push
or
or
or
jo
jb
cmc
pop
imul
jp
add
movsb
addb
arpl
dec
jg
adc
gs
cmc
pop
or
add
inc
in
cwtl
xchg
mov
xor
lods
jae
add
pop
outsl
cmpsl
or
in
and
je
dec
insl
jo
adc
rcll
andl
mov
or
ljmp
xchg
adc
loop
and
adc
cltd
bound
lcall
jo
dec
mov
mov
cmc
sub
mov
faddl
adc
and
stc
cld
outsl
xor
bound
mov
and
jo
mov
loope
and
repnz
dec
jnp
ss
pop
jae
aam
sbb
std
ja
pop
arpl
sub
cmp
js
sub
out
data16
sub
inc
nop
mov
test
loopne
adc
xor
bound
xor
or
imul
mov
popa
ja
xor
in
outsb
pushf
mov
or
jge
pop
fxtract
cmp
pop
fistpl
lock
push
in
cmp
lahf
xchg
and
jp
cmp
cli
push
pushf
push
xchg
cmpsl
dec
call
lods
bound
xchg
sti
and
outsl
cmp
aad
call
inc
push
out
fadd
jecxz
mov
jp
push
cmp
cmpsl
jle
push
mov
mov
clc
or
push
stos
jne
xchg
xlat
push
push
sbb
repnz
rorl
lahf
hlt
fwait
pop
aas
push
sti
mov
xor
fwait
lock
mov
pop
jecxz
inc
xor
inc
xchg
hlt
mov
mov
mov
adc
add
mov
aad
insl
aaa
xor
dec
scas
inc
mov
movl
mov
mov
and
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
xlat
cld
sbb
sub
das
sub
mov
xadd
lret
test
repz
lret
jb
mov
std
imul
leave
pop
sbb
leave
pop
scas
loope
push
cwtl
xor
ficomps
decl
pop
cmp
adc
add
sub
sbbl
jge
ret
sbb
push
sar
add
cmpsl
rclb
adc
outsl
arpl
fwait
and
aaa
aad
inc
sahf
arpl
cld
shlb
test
cmc
pop
pop
data16
in
int
cwtl
scas
push
cld
or
xor
ja
jns
pop
fst
xchg
pop
adc
addr16
repnz
es
loope
stos
cmpsl
push
test
lret
xchg
adc
pop
nop
inc
repz
insb
adc
enter
ffreep
shll
in
negl
mov
sub
loop
jmp
ret
mov
repz
inc
push
ljmp
adc
push
mov
fld
shl
inc
sbb
scas
xchg
mov
inc
addr16
xchg
mov
xor
in
adc
push
lahf
pushf
mov
outsb
pop
jno
daa
or
push
jb
test
add
mov
push
add
out
divl
push
test
leave
in
cmp
inc
bound
out
sahf
sub
xlat
pop
adc
daa
int
sar
xchg
mov
and
popf
sbb
adc
mov
push
fidivrs
inc
loop
jns
sbb
and
adc
jno
inc
or
jne
sbb
pop
out
bound
push
dec
ljmp
push
add
push
inc
push
jp
pop
xchg
xchg
jns
mov
rcrl
shrl
jp
mov
or
rclb
add
lods
inc
in
popa
mov
jecxz
inc
in
jbe
stc
jbe
sub
dec
add
xor
ret
cmp
adc
mov
in
cltd
push
xchg
adc
jmp
cltd
inc
cmp
push
lods
icebp
jecxz
hlt
dec
xchg
xor
lods
jbe
jae
sbb
or
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
clc
ljmp
rcrl
add
adc
popa
and
mov
mov
fidivrs
ds
adc
aam
cld
jne
dec
jge
imul
pop
xchg
ds
in
incl
loope
ffreep
or
mov
int3
inc
push
or
mov
mov
sbb
xchg
mov
in
hlt
and
inc
out
adc
sbb
iret
popf
inc
and
outsb
inc
loopne
pushf
ja
jmp
mov
fstps
outsl
cmpl
jecxz
or
fsubr
mov
and
cmp
adc
pop
inc
hlt
or
mov
test
pop
aaa
push
sahf
cli
xchg
fwait
shrb
pop
mov
and
xor
ja
or
in
dec
test
ljmp
cli
jle
or
imul
mov
and
xchg
cli
ficoms
xor
lret
mov
mov
jns
push
test
jle
and
adc
jne
andb
jne
cmp
lcall
mov
jmp
pop
pop
mov
gs
out
or
punpckhwd
sub
int3
dec
sbb
adc
add
and
data16
pop
cmp
mov
mov
sbb
in
jg
lret
dec
sub
adc
and
pop
inc
pop
xor
mov
sbb
xor
mov
shrb
xchg
sub
cmpsb
jecxz
inc
or
mov
adc
jp
cmpl
mull
call
xchg
jecxz
push
aas
add
add
pop
jl
ret
fsubrs
or
nop
test
push
and
inc
jge
mov
out
aas
pop
xchg
mov
jg
push
test
or
mov
push
push
mov
adc
xor
lds
lret
adc
lock
in
negl
xchg
adc
dec
cmp
test
pop
dec
decb
lock
or
xor
xchg
sbb
push
cwtl
movsb
fisttps
popf
aas
mov
inc
dec
sbb
inc
test
sub
lcall
dec
es
and
mov
into
das
ja
pushf
or
iret
cmc
jnp
fnstcw
mov
inc
lahf
jno
pusha
mov
pop
mov
pop
js
stos
adc
insl
pop
divb
pop
mov
xlat
mov
cmovo
jge
int3
out
ja
inc
int3
loopne
clc
into
xor
dec
inc
xchg
dec
pop
xchg
jp
imul
test
mov
sahf
pop
jo
mov
cltd
push
jbe
pop
jnp
aas
iret
sub
dec
rcl
lods
cmpl
jnp
mov
pushf
push
daa
aas
pop
add
sub
push
shufps
mov
dec
add
dec
inc
xlat
cli
imul
mov
jae
sub
stos
test
jo
push
lds
jo
sub
adc
sbb
add
jg
scas
xlat
add
push
xor
mov
push
sbb
scas
bound
stc
mov
mov
jmp
jmp
or
dec
mov
pop
adc
xchg
sbb
outsl
bnd
aad
imul
mov
sbb
insl
repz
dec
das
mov
mov
aaa
pop
adc
xchg
outsb
mov
jo
mov
mov
push
pop
out
xchg
jae
or
adc
lods
xor
lret
aam
or
xor
mov
push
scas
jbe
push
sbb
insl
push
dec
pop
xor
mov
lods
stc
xor
js
scas
push
repz
rolb
lods
sbb
xlat
rorl
sbb
lods
add
stos
mov
es
out
das
dec
xor
push
test
xor
add
jo
xchg
pusha
decl
ljmp
rorb
lcall
icebp
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
std
sarb
adc
adc
xchg
test
lahf
scas
fwait
out
sbb
ljmp
sub
ficoms
loope
jns
out
jno
push
mov
mov
and
imul
mov
pop
lock
inc
mov
sbb
enter
jmp
xchg
cltd
mov
jle
pmulhw
add
mov
sub
inc
or
mov
outsb
test
outsl
sti
jns
std
cli
addb
jge
lret
rclb
aam
call
out
outsb
pop
add
xchg
xor
rcl
or
aas
inc
fdivl
fsin
pop
ja
decb
bound
or
jne
fwait
scas
xor
in
pop
pop
das
test
arpl
cltd
jno
shr
flds
rcl
push
std
push
imul
leave
sub
xchg
pop
sbb
outsb
stos
push
mov
xchg
adc
push
outsl
gs
cmp
xor
lock
push
and
fnstsw
orl
dec
repnz
sub
sahf
mov
mov
jb
sub
dec
pop
cmpsl
insb
movsl
inc
xchg
into
test
pop
and
adc
lcall
pop
and
dec
jle
and
in
cmpsl
or
fisubl
notl
jne
mov
lahf
decl
cwtl
outsb
cmc
add
ret
in
or
mov
in
or
jo
out
sahf
xchg
cmp
push
or
jmp
outsb
lock
pop
imul
pop
add
mov
sub
call
cmpsb
pop
jo
xor
data16
ret
xchg
je
scas
dec
mov
inc
sub
scas
push
in
aam
mov
cld
xchg
or
scas
sbb
dec
sbbb
int3
xchg
xchg
fldt
das
mov
lea
dec
nop
stc
sbb
inc
iret
mov
imul
das
call
mov
cmp
ds
dec
cmpsl
inc
ficompl
aaa
cmp
inc
pop
add
and
aaa
clc
mov
xor
sbb
jo
mul
adc
lcall
jae
adc
jle
add
jbe
fsubl
adc
lcall
cmp
nop
dec
dec
push
sbb
adc
lds
int3
inc
test
std
inc
adc
sub
push
sbb
and
outsb
cmp
cs
lds
out
xor
sahf
mov
scas
mov
rcrb
lea
mov
lcall
push
or
sbb
xchg
xchg
pop
sbb
pop
sub
in
mov
xlat
sub
ja
cmp
repnz
pop
ss
daa
mov
cmp
stc
jo
cmpb
mov
or
mov
xchg
or
inc
std
xchg
inc
fcoml
push
neg
enter
rorb
dec
fdivl
xorb
mull
outsl
or
and
mul
mov
push
in
mov
mov
dec
cmpsb
xchg
fcompl
mov
add
lea
and
mov
stc
pop
or
sbb
out
int3
fs
and
pcmpeqd
div
fisubs
jns
and
out
pop
push
hlt
inc
rcl
lea
mov
xor
mov
add
push
out
mov
adc
in
nop
xchg
pusha
pop
inc
clc
fistpl
jo
clc
pushl
adc
xchg
test
push
sahf
lods
jnp
loop
sub
hlt
mov
clc
sub
mov
push
mov
xchg
xchg
mull
pop
mov
xchg
sbb
xchg
insb
sbb
in
mov
lods
aad
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
sbb
mov
adc
movlps
inc
ss
xor
movsb
shlb
cli
imul
mov
inc
jo
popf
dec
stos
xchg
test
inc
adc
gs
data16
push
out
or
dec
and
js
lret
cs
xchg
shrl
xchg
jecxz
cmp
mov
ficoml
pusha
lods
xchg
mov
pushf
fcoml
push
movsb
mov
jne
fwait
mov
hlt
fucomp
stos
ret
je
leave
dec
and
sub
popf
jae
or
je
rcrb
pop
xchg
mov
push
cmp
jmp
push
lcall
out
dec
pushf
dec
cmp
es
in
dec
jbe
mov
add
mov
fists
v4fmaddss
mov
lcall
clc
je
stc
test
nop
cmpb
add
add
lods
jge
push
sub
jb
lock
cmpsb
xlat
add
shlb
js
inc
sub
test
popa
pop
lods
js
mov
jnp
or
or
push
sbbl
imul
mov
pop
add
repnz
mov
and
xor
rol
adc
mov
loop
mov
pop
xlat
push
sub
mov
adc
and
jo
std
dec
rcrl
out
inc
mov
mov
cmp
adc
in
adcl
out
mov
cmp
loope
repz
dec
mov
jmp
cmp
out
push
filds
cmp
mov
lds
and
les
cld
xchg
lret
add
cmc
add
popa
cwtl
inc
aam
mov
test
add
inc
mov
loope
loop
xchg
fwait
xchg
sti
adcb
out
sub
enter
and
hlt
push
mov
push
repz
test
jb
dec
inc
or
mov
sbb
push
inc
pop
add
jmp
fidivrs
insb
mov
add
ljmp
jg
lods
sub
dec
and
mov
cmp
mov
loope
sub
jg
repz
jmp
add
std
rcr
stos
lds
rclb
mov
sub
push
jbe
push
icebp
cmp
adc
ret
xlat
xor
outsb
sahf
dec
mov
aam
mov
ficoml
adc
jns
je
push
mov
stc
aam
pusha
repz
add
imul
cld
icebp
mov
mov
mov
mov
mov
pop
inc
lds
dec
adc
fimull
sub
in
push
es
pushf
mov
fistl
outsl
jnp
jmp
xchg
lcall
pop
fmuls
movsb
adc
outsb
or
xor
mov
inc
jp
inc
les
add
inc
enter
add
inc
int3
cmp
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
xchg
sub
sbb
div
mov
cli
sub
mov
xchg
sbb
inc
jl
rolb
loop
das
cmpl
clc
xchg
inc
out
jge
mov
sub
fistl
mov
lret
pop
cli
mov
bound
sub
addr16
jns
adc
cltd
cld
insb
or
out
pusha
and
pop
daa
data16
adc
and
int
and
adc
jbe
and
or
jns
dec
adc
xor
loop
rcll
movsb
mov
ss
dec
cmp
xor
pusha
sbb
mov
cld
or
lahf
lahf
cmpsl
cmp
inc
scas
mov
fsub
out
or
inc
cmp
int
lret
pop
subl
fldl
out
sub
adc
mov
icebp
repz
inc
cld
mov
js
loope
lcall
scas
xchg
mov
imul
data16
jae
testl
dec
add
aam
mov
mov
pusha
inc
test
sbb
hlt
out
lcall
imul
sbb
inc
and
mov
push
imul
jecxz
xchg
sbb
sbb
xor
adc
inc
pop
andl
inc
shr
gs
cmpsb
sub
jbe
retw
xchg
sbb
lea
jle
cltd
lahf
dec
ja
cs
aad
jl
sbb
outsb
repz
stos
ja
push
sub
sbb
pop
adc
mov
sahf
dec
test
sub
cmp
pop
mov
jnp
icebp
mov
adc
cvtps2pd
dec
lock
dec
xor
jnp
mov
jmp
push
and
jne
shll
mov
rcll
jecxz
jae
mov
mov
mov
ret
add
pop
mov
loop
xor
daa
sub
rclb
fstps
xor
push
xor
jb,pt
sub
mov
lods
mov
add
sbb
cmp
jle
xor
stos
icebp
fwait
std
stc
xchg
mov
loopne
cmpsb
inc
sub
cltd
push
fiadds
inc
adc
sub
adc
mov
fcoml
mov
xchg
jg
cmpsl
sbb
add
imul
xor
mov
sbb
jnp
or
gs
push
xchg
clc
leave
jo
lret
test
les
sbb
cli
rorb
pop
push
mov
cmpb
scas
add
loopne
std
fimuls
rcl
cmp
mov
mov
das
cli
loope
mov
xor
xor
pop
mov
inc
dec
push
shrb
jbe
mov
addr16
push
sahf
movsl
lea
sub
mov
pop
sbb
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
jle,pn
jge
adc
movlps
dec
push
out
lret
push
into
lret
mov
mov
or
pop
lret
mov
mov
inc
aad
mov
mov
inc
or
ficompl
fldl
gs
sub
inc
dec
gs
dec
inc
cld
out
adc
xchg
xchg
cli
adc
add
ja
outsb
or
xchg
xchg
cmp
popf
or
enter
dec
xchg
pop
jp
push
cmp
sub
ja
ret
movsb
rorb
hlt
adc
bound
mov
push
mov
dec
cmp
movsb
xor
lds
jnp
inc
idiv
push
push
data16
decl
cmp
notb
sbb
adc
mov
ret
sub
push
add
mov
stos
out
push
sbb
rcll
jno
mov
sub
xchg
es
dec
pop
jmp
stc
sbb
pop
cmp
xchg
mov
aad
inc
xor
sub
dec
arpl
and
jno
mov
jle
mov
cmc
jmp
imull
cwtl
mov
call
xlat
pop
xor
ret
mov
inc
jns
and
sbb
xchg
insl
jae
mov
lock
leave
jmp
adc
loopne
mov
les
jg
inc
inc
or
insl
sbb
rcrl
popf
ret
cli
adc
and
sub
dec
cmp
fildll
mull
add
fwait
mov
mov
ljmp
cmp
add
shll
bound
dec
movsb
inc
je
sbb
inc
xor
adc
dec
adc
notb
jmp
dec
fdivrp
jle
pusha
pop
pop
cld
mov
pop
stc
divl
xchg
push
aaa
pop
xor
add
mov
outsb
scas
xor
cwtl
dec
movsb
rcrl
movsl
inc
add
nop
pop
outsl
aaa
inc
ja
inc
push
inc
jne
and
movsb
enter
bound
icebp
ret
imul
sbb
dec
or
js
in
shrb
jo
mov
cmc
xchg
mov
sub
lods
leave
mov
push
rolb
addb
inc
lds
push
sub
pop
inc
mov
and
sahf
cmp
lods
es
dec
inc
mov
sub
xchg
int
pushf
mov
popf
sub
test
pop
imul
add
outsl
jecxz
mov
rep
mov
xor
pop
testl
test
pop
inc
xor
jns
sbb
std
sub
jmp
cmp
pop
adc
fidivrl
or
pop
lods
mov
fistps
lret
js
xchg
push
out
inc
or
dec
mov
adc
mov
dec
xor
cmp
mov
mov
mov
jnp
repz
cmpsb
incb
test
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
cmp
rep
pop
jae
adc
cli
cmpsl
sbb
cltd
sbbb
xchg
sbb
fstpl
les
addr16
mov
sub
in
mov
xor
movsb
dec
pop
repnz
outsl
arpl
inc
cmp
shl
stos
lea
aam
inc
push
cmp
test
mov
pop
lret
xlat
mov
and
testl
fbstp
sub
xchg
shll
add
pop
pusha
jle
mov
push
pop
and
fs
addr16
sub
lret
cld
mov
fldl
xchg
into
insl
mov
adc
ficoml
pushf
mov
lds
mov
dec
push
xchg
push
std
mov
sub
xor
aad
js
pop
movsl
inc
repnz
push
addb
out
cmp
movsl
or
test
inc
imul
test
lock
push
add
xchg
jge
nop
daa
insb
mov
pusha
mov
popa
and
fidivrl
push
gs
inc
pushf
or
cmp
scas
adc
cli
add
cmpsl
mov
xlat
mov
gs
or
int3
cmpsl
jno
mov
push
lods
adc
push
sahf
out
or
nop
mov
push
inc
fidivrs
js
idiv
cltd
ret
frstor
iret
xor
lcall
sub
mov
std
repnz
lods
lea
xchg
stos
pop
fsubr
cmp
lahf
fldl
jecxz
push
mov
andb
out
sbb
mov
out
bound
jmp
xchg
test
int
push
adc
push
xor
inc
push
mov
jmp
adc
add
push
add
inc
repz
outsl
xor
fisubs
scas
mov
xlat
sbbl
test
sub
sahf
jb
sub
xchg
mov
repnz
and
loop
test
jp
mov
popf
jge
gs
inc
pop
dec
sub
jmp
xchg
hlt
in
mov
add
jp
xlat
shrl
addr16
push
jle
adc
cs
loopne
subb
lret
popf
jle
pop
adc
dec
adc
test
adc
lahf
jecxz
pushf
insb
adc
and
nop
in
js
sub
pop
outsb
imul
jl
rclb
add
outsl
je,pn
sbb
jne
jmp
test
rcll
mov
dec
mov
mov
dec
jne,pn
lcall
xchg
cmc
mov
test
scas
fcmovne
aas
shll
sub
mov
imul
out
mov
outsl
stc
add
les
scas
mov
push
cmp
lcall
jl
dec
mov
addr16
sub
push
dec
iret
pop
push
cli
sbb
xor
jbe
test
mov
es
stc
js
shrl
pop
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
jmp
mov
dec
test
xchg
call
inc
sahf
xchg
jmp
test
xchg
gs
shll
pop
inc
js
lret
push
xor
mov
in
pop
ret
inc
in
jne
out
fisubs
dec
dec
xchg
or
test
dec
jbe
test
cmpsl
cltd
sub
enter
pop
mov
movsl
jbe
sbbl
fmull
push
pop
daa
jmp
dec
nop
jl
inc
sbb
and
xlat
pop
mov
insb
or
cli
ret
mov
shll
les
pop
aam
and
add
inc
mov
cltd
jg
mov
adc
inc
add
lcall
jmp
pop
sub
insb
pushf
push
lret
stos
dec
mov
cmp
sbbl
aad
mov
push
lahf
jg
cmp
shrw
and
lcall
push
fcomps
push
mov
lock
jl
xor
int
mov
add
sub
adc
test
jnp
cli
test
cmp
inc
fsubrl
xor
or
xchg
sahf
add
push
clc
std
jbe
faddl
ficomps
fwait
mov
ja
and
repnz
xchg
jne
shl
adc
insl
jle
jmp
test
lods
fstl
push
mov
in
sbb
push
loope
loopne
scas
lret
int
xor
pop
sbb
loop
dec
sbbl
sub
and
subb
inc
mov
fldl
idivb
nop
mov
dec
mov
daa
jecxz,pt
lods
push
cmpsb
mov
cmp
push
sahf
or
rcrb
sub
repz
imul
lahf
or
dec
or
dec
aam
xor
dec
inc
out
jl
call
adc
call
mov
sbbl
in
orl
ss
cltd
or
and
jbe
popa
call
adc
mov
jno
lcall
aaa
into
icebp
xchg
xchg
and
mov
popf
sbbl
ljmp
push
pusha
outsb
sbb
frstor
lret
roll
cld
xchg
mov
xor
adc
sub
jecxz
mov
push
aaa
jmp
mov
adc
cmp
js
imul
add
cmp
and
push
fidivrl
lahf
hlt
and
shl
pop
arpl
rcr
sbb
add
rcrb
lcall
imul
pop
add
inc
jmp
imulb
inc
mov
outsb
repnz
in
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
pop
repnz
repz
or
jno
pop
adc
stc
lods
aam
cli
addr16
in
push
push
outsb
int
mov
and
mov
jge
push
test
cmp
xchg
adc
sub
xlat
pop
mov
mov
xchg
inc
stos
aaa
xchg
and
push
adc
mov
movsb
dec
test
shll
aaa
icebp
outsl
sbb
lods
push
inc
jg
push
dec
fiadds
idiv
xor
rcll
add
mov
aas
sub
push
cmpsb
cltd
xor
dec
fisttpl
ret
push
pop
lods
jmp
sub
idivl
std
or
jae
cli
or
add
lahf
insb
xor
cmp
push
insb
imull
and
dec
push
xchg
int3
dec
icebp
and
rorb
or
xchg
loop
out
hlt
repz
cltd
and
scas
call
bound
lock
mov
das
mov
cltd
and
fcmovnb
adc
call
inc
popa
inc
pusha
jne
in
in
xor
neg
nop
or
imul
fidivl
cwtl
mov
cwtl
in
loop,pn
sub
mov
shlb
mov
movb
add
das
lds
lock
push
jl,pn
or
pop
jge
pop
jecxz
fadd
mov
xchg
test
out
repnz
add
jl
push
cmp
jbe
sbb
dec
hlt
sbb
push
jns
and
xor
cmp
int3
or
cmp
stos
loope
sub
fdivl
mov
add
inc
loope
jbe
or
mov
and
mov
mov
inc
into
mov
adc
pop
loopne
data16
lods
out
decb
dec
mov
in
xchg
orl
fisubl
pop
jl
into
shll
js
add
rcll
imul
ret
pop
inc
inc
xlat
jo
jae
sarl
dec
or
mov
xchg
cmp
cmpsb
aaa
rorl
gs
xchg
cmp
fsubrl
movsb
pusha
inc
mov
xor
fnstenv
push
or
mov
sub
movsl
push
repz
sub
sti
xorl
lea
std
popf
jnp
loope
jp
sbb
push
into
xlat
mov
add
test
sbb
lods
out
out
mov
imul
fbstp
or
repz
mov
or
ja
aas
cmp
lods
outsl
mov
into
xor
lock
mov
inc
cmp
add
sbb
pushl
cmc
pop
iret
xchg
xchg
sbb
sub
xor
stos
outsl
mov
rcrb
sbbb
stc
adcl
xchg
push
stc
stos
test
rcr
inc
subl
and
sbb
mov
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
sub
xor
jl
xchg
call
rorb
sub
pop
push
mov
aam
jle
jge
xchg
jp
xchg
roll
adc
pop
loop
inc
ss
movsb
repnz
dec
adc
lret
push
xor
repnz
mov
mul
pop
sbb
or
push
mov
cmp
dec
pop
fisubl
sarl
inc
and
jae
push
sub
push
leave
jl
dec
sub
jp
push
dec
xor
rolb
incl
adc
push
in
fidivrs
lcall
sbb
scas
push
lods
rorb
mov
xor
repnz
call
cltd
inc
cmp
outsl
inc
rorb
adc
sub
cmp
pop
xor
or
cmp
sub
add
sbb
jge
gs
out
pushf
sbb
mov
insb
dec
and
pop
xchg
cmp
cmp
lcall
sbb
sub
cld
arpl
mov
jmp
lret
xor
jns
mov
stc
aas
pop
inc
cmpb
mov
lods
enter
fdiv
ss
inc
and
mov
ret
enter
push
and
jp
ljmp
sub
mov
dec
and
inc
mov
cwtl
lret
negl
jno
xchg
dec
or
xor
jmp
cmp
sub
rcll
mov
inc
xchg
insb
out
push
pop
addr16
push
addb
and
in
cs
dec
syscall
addr16
scas
jecxz
mov
sub
in
insb
sbb
or
stos
stos
mov
fucomi
inc
dec
out
jbe
adc
jne
jnp
cli
jl
xchg
std
out
sub
scas
xchg
dec
ja
lds
popa
jle
inc
sub
bound
mov
mov
mov
arpl
ret
mov
mov
je
subb
add
out
or
adc
enter
mov
mov
inc
mov
or
xor
push
sbb
sahf
dec
adc
jne
pushl
xchg
cmp
xchg
inc
cmp
jb
or
fcoms
xor
nop
xor
fs
sub
daa
clc
or
add
test
or
adc
iret
xor
rorb
addr16
mov
sbb
sbb
bound
into
pop
pop
out
outsb
xchg
cli
test
mov
flds
add
jno
cmp
and
pop
add
push
arpl
inc
rorl
movsb
and
xchg
push
adc
sbb
ljmp
sahf
or
inc
jb
push
addb
sbb
push
mov
repnz
cli
ja
jle
and
pop
das
mov
scas
in
or
std
cli
mov
lret
push
inc
flds
pop
add
in
and
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
mov
pop
adc
jp
adc
mov
insb
add
rep
int
cmp
sub
es
mov
xchg
int3
clc
pop
fisttpll
cltd
pop
jnp
xchg
outsl
in
cltd
jbe,pt
mov
clc
je
or
or
lea
jle
and
nop
jnp
jle
mov
outsb
inc
mov
addl
cmp
mov
mov
dec
ljmp
out
lea
jmp
shlb
dec
sub
imul
jb
movsb
test
jle
mov
pop
push
outsb
addl
in
mov
icebp
inc
mov
sarb
in
stos
mov
jg
pusha
outsl
loopne
iret
xor
cmp
mov
or
sahf
push
lds
push
or
cld
xchg
mov
jne
repz
mov
nop
call
test
sub
xor
ds
lea
sbb
loope
push
int
mov
pop
cmpsl
imul
push
mov
inc
test
shlb
scas
lods
mov
leave
popf
mov
xchg
add
cmp
adc
pop
call
push
jo
inc
jo
xor
sub
pop
jno
adc
ret
jb
jae
mov
jns
sub
xlat
mov
daa
xchg
dec
fadds
jle
bound
gs
adc
mov
mov
mov
leave
lahf
imul
mov
jne
cmp
sub
scas
ret
or
jmp
shrb
mov
popf
adc
sub
inc
call
rcrb
jns
xchg
rcrl
int
sbb
jp
cmp
or
addl
dec
in
mov
in
addr16
inc
aas
xor
lods
mov
jne
dec
dec
nop
xchg
aad
sub
psubb
ja
mov
mov
arpl
in
mov
loopne
push
cwtl
int3
inc
addr16
ljmp
mov
cmp
dec
xchg
in
icebp
inc
or
sub
call
pop
jg
cli
jb
repnz
jp
outsl
imull
lret
cmp
inc
repnz
cmp
mov
stos
repnz
jecxz
mov
dec
rolb
mov
push
or
mov
ljmp
push
repz
mov
add
clc
leave
test
xorl
pop
int
out
in
xlat
mov
sbb
sub
xchg
cltd
xchg
cmp
cmp
cmp
movsl
pop
nop
pop
or
fdivrl
cmc
sarl
fisttpl
movsb
sub
repz
test
cwtl
aam
ljmp
or
mov
aad
scas
fidivrs
ret
xchg
subl
sbb
outsb
mov
mov
int3
xor
jecxz
sbb
bound
jp
outsb
xor
jl
xor
sahf
mov
ljmp
enter
fildl
addr16
mov
cmpsl
xlat
jne
or
pop
push
inc
test
or
mov
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
divb
adc
jp
adc
popa
fs
or
sbb
pop
movsl
and
adc
rcrl
jno
rcrb
sub
xor
cmp
inc
subl
aam
sbb
pop
call
nop
dec
movsb
sub
mov
ds
sbb
in
jg
push
add
mov
mov
push
xorl
xorb
clc
cwtl
aas
and
pop
push
cmp
push
xchg
imul
repz
rcr
lahf
mov
xchg
jl
mov
mov
fisttps
jmp
repz
dec
ficoml
out
jp
or
faddp
aad
pop
pop
jbe
cmpsl
cltd
fcmovnbe
lods
mov
bound
jbe
in
aaa
flds
xorb
xor
lea
cmc
xor
or
sub
push
and
xchg
pop
test
mov
icebp
or
xchg
jo
add
dec
icebp
in
bound
int
cmp
stos
in
mov
mov
mov
faddp
cmpsl
adc
cmp
rolb
add
mov
add
inc
int3
inc
sub
enter
jo
sbb
data16
sbb
shll
out
xchg
les
repz
pop
or
fisttps
mov
push
scas
out
les
aas
clc
push
shrb
cwtl
xchg
imul
push
icebp
idiv
test
clc
out
fcmovnu
pop
popf
mov
xor
mov
ret
jmp
xor
lods
and
xor
loope
cwtl
jp
movsl
pop
ja
jno
fxch
dec
mov
jae
pop
in
push
call
test
cwtl
fistpl
xor
xor
mov
aam
sahf
lods
mov
mov
cli
cmp
leave
jbe
dec
add
imul
aam
push
pusha
jo
test
adc
mov
jp
ss
sub
into
pop
xchg
and
fimuls
cmovb
mov
scas
int3
insl
aas
loop
and
imul
mov
xchg
add
mov
clc
or
jmp
cmp
inc
insl
or
push
subl
pop
and
cmp
xchg
mov
mov
sbb
mov
cmpsb
loopne
cmp
sahf
cmp
xchg
cld
pop
fldl
movsl
gs
clc
adc
or
enter
call
stos
mov
adc
addr16
mov
imul
sti
out
adc
mov
xchg
arpl
xchg
lret
lea
push
jo
sti
add
fmull
clc
leave
pop
lods
mov
test
in
push
pop
mov
sub
icebp
mov
std
pop
pop
cmp
sbb
mov
xor
in
test
ret
mov
cmp
cmpsb
movl
and
loop
push
in
add
lods
std
rcl
stos
cmpsb
adcb
and
or
inc
and
sbb
jecxz
movb
and
stos
in
nop
add
mov
mov
and
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
movsb
js
push
adc
jp
adc
jno
call
ficompl
mov
jb
in
push
adc
jl
xor
flds
aad
xchg
fstps
push
mov
mov
push
pop
jg
mov
jbe
test
repz
fwait
dec
add
or
mov
xor
mov
mov
lcall
dec
mov
aas
rdmsr
sarl
lds
data16
xor
inc
ss
sub
fwait
cmpsb
lret
ror
mov
mov
sbb
cmp
dec
iret
test
daa
pop
jmp
lods
sub
mov
or
cmp
and
in
jne
push
js
add
dec
sub
adc
mov
fistpll
push
inc
nop
inc
push
cmp
cmpsl
lret
jp
les
jge
fildl
leave
sub
pop
mov
xchg
xchg
pop
in
icebp
lret
mov
dec
inc
out
jb
roll
sbb
mov
sub
scas
out
xchg
xor
filds
movsb
push
push
pop
pop
sti
mov
scas
jbe
or
out
icebp
lods
ret
fwait
jmp
jb
ficompl
call
and
or
and
ja
jecxz
mov
pop
mov
addr16
roll
push
test
jl
lock
push
ret
sbb
cmp
loope
cs
jg
pop
insl
mulb
add
mov
imull
mov
mov
decl
mov
or
ljmp
mov
arpl
sbb
pop
stos
imul
sub
adc
repz
dec
add
mov
fs
sub
adc
aaa
xchg
call
xchg
loop
pop
inc
jo
mov
stos
adcl
and
cld
or
add
sar
arpl
lds
xchg
dec
cmpsl
xchg
filds
pop
fs
mov
push
fiadds
popa
rcrl
dec
dec
jae
add
sbb
loopne
push
out
and
and
cmp
ds
xor
mov
es
mov
dec
in
cmp
popf
cmp
sub
jmp
loopne
in
sbb
jmp
insb
fcoml
faddl
adc
mov
movsb
cmp
jo
jns
test
rolb
adc
add
out
mov
mov
xchg
push
xor
and
pop
push
push
and
cld
scas
xchg
mov
cmpsb
repz
push
mov
ja
rclb
jno
mov
ret
ds
repz
add
fisttpll
hlt
or
stos
xchg
ret
in
es
or
and
test
xor
scas
leave
stos
push
popf
fdivrs
mov
lods
fisubs
out
jns
xchg
push
pusha
lea
repnz
popl
jp
scas
imul
dec
push
add
jo
outsl
mov
mov
xor
out
xchg
lea
jb
adc
hlt
mov
sahf
bound
loopne
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
mov
adc
lea
adc
idivl
jmp
xor
clc
mov
dec
mov
adc
or
cmpsb
cwtl
cmc
inc
call
add
das
dec
rorb
mov
jae
push
or
mov
jg
pop
mov
sbb
xchg
sarb
and
push
lahf
sahf
jnp,pt
ret
cli
stos
out
fnstenv
movl
aas
sbb
adcl
lods
lahf
mov
mov
fsubr
arpl
pop
add
aam
pop
mov
out
mov
shrb
dec
add
xchg
adc
xchg
addr16
cmpsl
lods
dec
mov
mov
xchg
mov
setno
jp
scas
add
cmpsl
or
jge
aaa
xchg
mov
inc
cmc
pop
or
loop
pop
lret
daa
lcall
cmpsl
jne
add
dec
lock
nop
adc
push
stc
dec
test
bnd
and
js
mov
mov
enter
enter
sub
ljmp
jge
movsl
inc
cld
sbb
std
je
icebp
mov
dec
and
pop
cmp
xchg
fs
add
sbb
pop
cmpsl
xor
mov
pop
push
mov
addr16
mov
pop
cmp
xchg
popf
orl
mov
loop
dec
push
aaa
rcrl
in
inc
add
loopne
dec
push
insl
ja
pushf
xchg
pop
arpl
sahf
lcall
dec
mov
dec
outsl
and
lods
dec
das
mov
subl
sbb
push
add
sbbl
les
jo
cwtl
rolb
mov
stc
pop
lcall
mov
xor
cld
cmp
sbb
dec
int
ret
add
cmpl
test
push
mov
orb
sub
into
aam
inc
ja
push
xorl
mov
fildl
scas
pop
and
lods
push
adc
xor
cmp
inc
inc
mov
and
pushf
into
bound
arpl
xor
lock
xor
mov
call
or
push
mov
and
insb
jne
xchg
test
lods
mov
xor
dec
clc
es
aam
push
xchg
mov
mov
lea
in
movsl
popf
ds
mov
enter
scas
dec
lahf
fcmovu
push
pop
int
aas
out
movb
shrb
rorb
mov
gs
lret
hlt
loopne
call
call
push
call
jge
mov
imul
add
adc
orb
jbe
dec
mov
jae
ljmp
insl
add
jmp
xchg
mov
sub
les
loopne
adc
lea
adc
enter
push
mov
sbb
mov
jne
or
into
inc
inc
cmp
and
test
and
add
push
fcomi
inc
fnsave
imul
push
jo
sub
mov
inc
inc
mov
mov
adc
add
pop
jge
xor
cltd
and
test
and
sbb
lods
xor
cmc
scas
incl
xlat
mov
cs
cli
xlat
movsl
mov
int3
and
sub
ds
push
adc
jne
jmp
inc
mov
lret
mov
fsts
out
dec
push
dec
das
sbb
sbb
xchg
lahf
and
xor
sub
out
cmp
into
scas
mov
mov
adc
add
cli
inc
mov
mov
adcb
push
es
repnz
roll
inc
insl
sub
sub
sbb
ja
pop
mov
or
cmpsl
or
pop
mov
ja
outsl
xor
mov
ror
sbb
and
push
in
das
cmp
outsb
xchg
and
in
hlt
scas
add
pop
test
cs
push
sub
mov
cwtl
in
xor
pop
add
imulb
sub
xlat
sti
xchg
jne
rclb
movsb
cltd
arpl
cmp
pop
jle
dec
push
test
repz
add
sbb
bound
mov
repnz
inc
int3
test
mov
gs
inc
scas
push
outsl
mov
mov
mov
ret
inc
cmp
out
les
imul
xor
leave
jge
movsb
clc
lret
aas
in
hlt
lods
roll
ja
and
jmp
xchg
ds
sbb
gs
lret
dec
aas
cmpsl
mov
pop
sarb
mov
in
inc
dec
insl
dec
les
push
mov
mov
repz
pop
repnz
mov
aam
or
hlt
ds
fcoml
jl
icebp
test
xchg
push
xor
add
or
ljmp
add
iret
dec
subb
inc
or
lcall
outsl
popa
shrb
lods
popf
cwtl
inc
xchg
inc
inc
jb
push
push
leave
mov
mov
sarb
adc
aas
cmpsb
clc
or
ss
int
inc
pusha
mov
pop
out
in
jnp
jo
jne
daa
adc
and
gs
xor
lods
call
add
fstpl
push
negl
cmp
push
push
bound
cmp
cwtl
or
sub
jmp
xlat
xchg
in
js
push
or
cmp
add
add
mov
xlat
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
das
cmp
xor
xchg
mov
cmpb
lods
outsb
push
push
cmpsl
call
shr
sbbl
pop
cli
inc
mov
add
jae
ss
push
pop
lea
mov
movsb
sub
notb
aam
mov
jnp
es
mov
out
mov
enter
mov
in
js
andb
dec
dec
xchg
jl
es
test
jle
sahf
push
pop
sub
sahf
dec
insl
aad
es
mov
mov
in
dec
call
pusha
in
loop
jl
jnp
loop
dec
je
add
iret
jns
jle
jp
cltd
nop
mov
rorb
out
cmp
leave
addr16
pop
mov
or
aaa
sahf
cwtl
push
dec
mov
cmp
inc
jmp
dec
ss
pushf
xorb
mov
movsb
push
jge
in
cmp
adc
fwait
and
sub
lahf
stc
ret
push
sub
addr16
stc
mov
cmpsb
or
ret
dec
mov
sbb
test
push
xor
pop
push
shlb
jg
mov
xor
pop
iret
push
incl
jmp
and
push
dec
out
cmpsl
cmp
push
int3
test
in
mov
mov
inc
mov
mov
push
sub
mov
mov
cld
ss
lret
shll
insb
mov
aaa
pop
sahf
pusha
bound
pop
testb
sub
xchg
mov
mov
frstor
xchg
sahf
push
sub
push
outsb
bswap
mov
or
aad
movsb
in
orl
push
sub
pop
or
nop
push
inc
sub
dec
push
jnp
add
jb
popa
fcomps
movsb
cmc
mov
add
hlt
gs
push
or
icebp
xchg
ja
outsb
jns
enter
jecxz
inc
aam
pop
movsb
fsubl
insb
out
and
cmp
lcall
push
movsl
xchg
insl
mov
push
pop
movsb
pop
add
sti
cmpsb
std
push
out
jp
out
jnp
sbb
push
movsb
lcall
xor
mov
or
jmp
ret
mov
jae
inc
mov
inc
xor
mov
mov
fwait
mov
fists
call
popa
ss
test
sbb
or
aas
insl
fisubrs
insb
loop
pop
xchg
mov
andb
push
sub
scas
icebp
pop
mov
dec
lret
cltd
xchg
addr16
lock
int3
push
mov
pop
les
pop
sub
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
notb
adc
lea
adc
pop
jecxz
ljmp
mov
push
and
loop
inc
add
mov
mov
push
xchg
jno
push
mov
push
mov
and
std
ficoml
movsl
adc
popa
adc
loope
loope
sbb
xchg
out
test
and
cmp
iret
loopne
in
lods
cmp
sbb
mov
test
cmpsl
xchg
loop
mov
leave
xor
adc
jmp
push
adc
test
daa
outsl
and
je
inc
xor
pop
lock
jno
pcmpgtd
je
movsl
xor
dec
ja
out
cld
pop
or
imul
sub
pop
jle
fisttpl
sti
xlat
mov
dec
inc
inc
cmp
jne
shrb
pop
mov
mov
pop
sbbl
mov
out
jnp
fwait
push
jmp
xor
fs
xchg
push
pop
xchg
xor
sbb
jg
pop
xchg
scas
or
xor
sbb
mov
jo
mov
lock
ret
imul
pop
xchg
jmp
push
mov
sti
stos
add
insl
ljmp
shrb
jl
idivl
add
lret
std
push
cld
add
pop
dec
mov
xlat
ret
dec
aad
jp
mov
sub
cmp
sbb
mov
int3
call
dec
test
or
popa
mov
mov
iret
mov
dec
jp
fiadds
sub
xchg
xor
sahf
lods
stos
repz
push
je
dec
add
sub
imul
shrl
popf
punpcklbw
hlt
cmp
out
leave
push
sub
inc
mov
adc
cmp
mov
addr16
mov
cld
ss
dec
push
mov
xchg
das
aaa
jnp
dec
lret
int
mov
adc
data16
pop
dec
repnz
mov
cltd
push
lock
repnz
sub
jbe
and
pop
fstpl
stos
popa
pop
das
sti
push
cld
xor
hlt
and
lds
hlt
cld
es
inc
xchg
jnp
cmc
cmp
std
int
int3
lcall
or
or
sbb
outsl
cmpsb
es
push
cs
xchg
shll
xchg
lods
sub
push
mov
pop
cli
movsl
xor
mov
jg
cmp
sahf
outsl
jo
and
iret
ret
rcrb
cmp
xor
push
loope
fisubl
insl
repnz
xor
lret
rcll
rol
add
push
fwait
gs
adc
out
test
out
popa
stos
in
out
sub
lret
adc
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
inc
sarb
xor
adc
mov
pop
xor
add
out
cmp
clc
mov
dec
mov
push
pop
inc
movsl
pop
jo
out
xor
sti
mov
scas
nop
jle
aas
pop
xchg
mov
mov
outsb
adc
iret
cmp
dec
lods
fadds
hlt
movb
cmpl
jb
scas
decl
jecxz
inc
jl
lret
jns
mov
mov
cwtl
addb
ret
or
push
jmp
jmp
jmp
ss
fisttpll
icebp
mov
lea
xor
sub
add
arpl
outsb
enter
pop
pop
or
jo
mov
jmp
push
test
sar
insb
mov
or
cmp
add
push
mov
cmp
cmpsl
mov
gs
mov
xor
addr16
cmp
add
cmc
shlb
rclb
inc
fdivrl
sahf
push
repnz
mov
aas
jl
or
cld
push
leave
int
imul
insb
outsb
add
cmp
icebp
pop
adc
loopne
fwait
orb
movsl
or
pop
gs
shrb
push
js
rorl
fdivrl
xchg
push
pop
lcall
in
les
pop
mov
std
push
mov
add
cmc
and
jnp
or
idivb
imul
jge
cmpsl
inc
inc
mov
fsts
mov
sbb
je
sub
pop
std
cld
popa
in
xchg
scas
xchg
or
pop
movsl
in
in
xchg
xchg
xor
inc
out
imulb
loop
sbb
push
mov
inc
or
repz
or
mov
xor
popa
ds
adc
xchg
scas
cwtl
push
dec
lahf
lods
outsl
repz
or
rclb
fistpl
jmp
repnz
in
sub
sub
add
scas
dec
push
stos
push
jp
xchg
mov
push
mov
mov
add
loop
xor
movsl
stc
in
mov
imul
gs
jns
jb
mov
and
movsl
sub
pushl
int
add
sbb
out
jg
pop
das
and
sbb
mov
push
lea
push
int3
lea
adc
sub
add
mov
cmp
popa
movsb
loop
adc
xchg
mov
ja
fs
mov
loopne
add
or
xor
adc
popf
testb
dec
xchg
push
repnz
faddl
inc
or
sbb
orl
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
mov
adc
lea
adc
cltd
sbb
xchg
rol
xor
gs
inc
and
pop
inc
inc
les
popa
cmp
xor
jbe
cli
xor
addr16
pop
adc
test
and
andb
in
mov
or
mov
jne
cli
push
push
and
adc
aad
es
add
inc
xchg
jnp
jne
xchg
push
in
testb
inc
hlt
jge
stos
outsl
in
cmpb
outsl
out
cmp
popf
xchg
cmp
add
lahf
fsts
cmp
push
mov
inc
adc
fwait
das
cmp
xchg
sti
and
and
bound
jnp
lcall
imul
xor
cwtl
repz
sbb
subl
push
fstpt
movsb
pop
pop
push
jmp
pop
loop
mov
cmc
or
aas
iret
fwait
xchg
mov
dec
and
mov
scas
call
mov
shrb
insb
mov
ret
in
mov
ret
clc
addr16
sbb
gs
loope
lret
jle
outsl
and
shll
popf
pop
xchg
out
jle
jo
xchg
aam
imul
push
adc
cmp
cmp
cs
pop
adc
adc
int3
dec
xor
mov
popa
cltd
mov
stos
jns
sub
xor
in
pop
in
xchg
shrl
nop
xchg
int
in
pop
pushf
push
nop
adc
imul
add
jmp
bound
push
mov
aad
push
out
push
adc
xchg
das
mov
dec
sbb
mov
sub
xchg
mov
push
and
pop
test
xor
ja
xor
out
fbstp
daa
or
ljmp
cwtl
sti
jns
ljmp
outsb
sbb
dec
ret
mov
dec
out
push
test
pop
inc
push
ret
pop
std
sub
sub
movsb
in
lds
ret
int3
shl
dec
mov
aad
pushf
sub
enter
mov
or
imul
ret
jns
iret
push
ljmp
scas
fcoml
enter
cld
adc
les
insb
pop
repnz
fmuls
jmp
cli
jne
jnp
test
push
mul
iret
rol
stos
int3
jmp
repz
jbe
xchg
xor
push
decb
js
mov
sbb
int3
enter
pop
cld
out
testb
test
cltd
rcrl
dec
or
xor
or
push
add
jmp
and
lods
and
js
popa
cmpsb
js
daa
adc
lea
adc
pop
xor
push
lods
xchg
xchg
jo
fildl
sbb
mov
mov
faddl
jge
scas
or
jnp
mov
mov
jae
pop
or
rcl
lret
xor
xchg
xchg
icebp
cmp
fsts
jmp
sub
push
addr16
and
inc
fsubr
push
jnp
pop
mov
mov
cmpsl
cltd
jmp
and
dec
adc
pop
push
jnp
nop
xchg
cmp
shll
mov
xchg
lock
jns
outsb
xchg
cmp
mov
pop
into
mov
sti
adc
lock
xchg
lret
xor
mov
jmp
adcb
push
cmpsb
shlb
fcoml
sbb
mov
jecxz
push
mov
xchg
jbe
outsb
xor
pusha
scas
mov
sbb
mov
loopne
pop
std
cli
mov
repz
add
and
in
jg
pop
loope
or
sub
push
mov
jne
cli
ds
add
sbb
sub
pop
imul
pop
insl
lods
inc
mov
xor
jno
cmp
mov
in
ret
dec
out
inc
mov
sbb
or
popf
loop
lods
and
scas
imulb
inc
sbb
or
mov
lea
sbb
lret
cmp
mov
je
mov
and
mov
pushf
mov
adc
pop
push
iret
or
aas
lcall
adc
mov
fcoml
lods
test
push
or
pop
xor
jle
enter
add
adc
loop
lret
sbb
add
loop
pop
pushf
xchg
das
pop
cmpsb
mov
adc
pusha
out
mov
mov
push
lret
fisubrs
dec
lds
aas
inc
pop
cmp
push
xlat
leave
push
pop
dec
sub
ss
sbb
pop
pop
ss
cmovl
cs
fcoml
push
mov
mov
lret
inc
dec
mov
push
daa
dec
inc
loopne
jb
jae
js
rol
inc
sahf
cmp
jnp
sbb
pop
sub
pop
aaa
sbb
lret
xchg
das
aam
push
insb
cmpsb
out
add
mov
sbb
xor
repnz
cmc
je
xor
jmp
push
aad
or
push
jecxz
outsl
push
sub
fbstp
adc
ljmp
shlb
jae
xor
nop
mov
or
jmp
scas
push
loopne
in
repz
pop
sti
lahf
pop
test
push
push
in
add
int
sub
lret
inc
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
iret
push
fnstcw
adc
mov
cltd
sub
mov
int3
rcrl
inc
fsubrs
lcall
in
ret
jmp
in
lret
loop
popf
mov
jnp
shll
scas
lret
xchg
jae
jb
dec
into
jmp
aad
lcall
push
push
push
mov
cmpsb
icebp
lods
add
leave
shll
sub
sub
sbb
sbb
out
movsb
in
das
negb
leave
js
sub
inc
mov
inc
out
push
inc
inc
lret
jo
pushf
cmp
out
outsb
cmp
push
ljmp
jecxz
movsl
adc
call
into
or
sbb
xchg
lock
add
fistps
scas
aas
or
clc
cmpsl
outsl
cltd
pop
movsl
clc
out
push
dec
mov
and
adc
or
sbb
addl
cmp
mov
movl
rcrb
and
ljmp
add
ret
in
mov
xor
cmp
push
mov
fdiv
decl
mov
sbb
or
out
and
sahf
push
scas
in
or
ljmp
cli
shlb
adc
lock
dec
push
ss
xor
xchg
jle
push
push
cmp
insb
jnp
repnz
cwtl
out
sti
and
mov
call
fwait
sub
cmpsl
xchg
xchg
cmpsl
pop
push
xor
pop
adc
inc
lds
aas
push
cmp
data16
mov
das
jl
push
or
adc
test
ljmp
dec
insb
add
fisttps
push
jno
cli
and
lcall
lods
mov
xchg
add
dec
shl
pop
sbb
push
or
cmpsb
mov
inc
jae
sub
cmp
or
and
inc
or
or
imul
ffreep
call
aam
xor
orl
pop
gs
cmc
jno
push
and
jg
jmp
pop
int3
jne
mov
mov
xlat
mov
push
popf
sbb
and
sbb
nop
pushf
clc
cmp
push
pop
psubsb
sub
add
jnp
aas
inc
outsb
cmpsb
xchg
imul
sub
lods
xchg
sub
sbb
xchg
sbb
sbb
lock
sbb
aam
dec
xchg
cmp
adc
mov
push
icebp
sbb
lock
lds
dec
adc
lods
enter
add
adc
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
pushf
lods
push
sbb
adc
cmc
or
push
in
cmpsb
dec
icebp
sti
int3
xbegin
imul
add
fs
adc
inc
xor
arpl
jnp
mov
fwait
test
clc
jecxz
popf
dec
movsb
rcrb
xchg
xor
dec
add
mov
jnp
out
js
nop
add
mov
lods
shlb
clc
xchg
stc
outsl
scas
sub
mov
ret
push
sarl
mov
mov
div
sub
ja
fcompl
jg
xchg
xor
add
inc
sarl
push
rcl
xchg
jg
jnp
mov
pop
mov
mov
push
or
push
xor
bound
or
sub
pop
aaa
mov
sbbb
xlat
xor
mov
inc
out
test
mov
negl
add
hlt
mov
dec
mov
je
cld
ret
sub
aam
into
or
int
add
popf
das
dec
dec
jne
fnstsw
fistpll
out
or
cmp
add
cmp
jae
jno
in
xor
sub
cmc
out
mov
pushf
or
mov
push
xor
mov
xchg
outsl
shrl
pop
sahf
out
pop
mov
daa
push
mov
pop
fs
sub
aas
cmp
cwtl
std
roll
mov
jg
pop
movsb
enter
test
jb
push
ljmp
stos
ljmp
mov
scas
pop
cmc
jnp
sar
sbb
sub
sti
fistl
mov
imul
dec
dec
inc
daa
xchg
mov
push
ret
fnsave
jge
xchg
xchg
adc
sbb
mov
mov
inc
push
jle
lcall
call
inc
jp
daa
inc
loope
fsubl
and
xchg
jo
sbb
xchg
testl
das
ret
mov
and
pusha
adc
stos
testb
lds
mov
mov
cltd
xchg
cld
add
pop
or
cltd
inc
test
cwtl
jae
sahf
cmp
cs
push
mov
ja
sub
mov
mov
ret
pmaxsw
int3
adc
clc
ja
mov
mov
push
sti
xor
xchg
xor
icebp
pop
pause
push
inc
mov
test
mov
gs
js
cmp
in
into
sub
jae
sti
outsb
add
pop
iret
je
push
fiadds
rol
js
std
into
jno
cmpsl
adc
cmp
int
push
out
pushf
daa
cli
jp
xchg
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
xchg
std
in
jle
sbb
adc
mov
das
sbb
mov
push
adc
inc
sbb
imul
je
fstpl
ds
or
mov
dec
pop
repnz
adc
out
push
jb
call
mov
subl
push
push
sar
sti
mov
sbb
cmpb
popa
cmp
inc
dec
ret
xor
loop
sarb
dec
dec
insl
mov
aaa
rorb
pop
pop
pop
js
mov
or
jp
imul
xchg
rol
scas
sarl
sahf
xor
lods
adc
push
and
jno
mov
push
inc
cwtl
dec
jl
rcrb
inc
and
jnp
cli
cmp
ss
add
mov
lea
or
mov
or
stos
xor
jge
xchg
or
add
ljmp
loopne
rorb
shlb
pushl
les
call
into
imul
dec
mov
ds
insb
sbbb
push
insl
jno
cli
sbb
inc
fimull
popa
mov
mov
test
mov
sbb
fldt
fidivrs
and
jb
rcl
cmp
xchg
movsl
jp
or
daa
mov
mov
in
sbb
lcall
shrb
out
data16
bound
push
adc
mov
out
aam
xchg
mov
in
imul
ret
sbb
sbb
sub
test
daa
loop
push
jle
push
pop
jg
lods
inc
adc
leave
mov
xchg
cs
nop
cmp
sub
data16
pop
mov
mov
in
in
sbb
cmp
movl
sub
repnz
fs
xor
ljmp
push
into
push
fcmovne
mov
push
xchg
push
adc
into
les
sub
adc
push
jns
stos
pop
xchg
movsl
sti
nop
push
pusha
ret
cmp
cmp
fldcw
cltd
jmp
jp
idivb
mov
xchg
mov
popf
xor
mov
cmp
dec
pop
ljmp
sub
sbb
js
mov
xor
notl
jg
pop
ja
cmp
xchg
lds
in
pushf
das
movsb
fildl
aas
addr16
inc
sti
es
movsl
loope
dec
pop
pop
negb
add
ljmp
jno
xor
out
inc
lret
xchg
aad
sub
repz
iret
outsb
mov
sbb
add
incb
sub
cmp
lea
add
cltd
lahf
sbb
cmpl
jns
inc
lods
test
ljmp
jmp
cs
outsl
outsb
popa
xor
push
xchg
adc
sbb
mov
mov
mov
mov
aad
int
mov
push
lock
inc
lods
cmp
pop
dec
xchg
aas
push
mov
nop
je
add
add
and
dec
shll
mov
sub
jo
or
clc
ss
leave
cli
hlt
aam
xchg
add
icebp
lds
add
mov
pop
lahf
pop
aas
mov
rolb
aam
shrb
inc
xchg
push
aad
cltd
jbe
popa
insl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
xlat
rep
aaa
unpckhps
mov
inc
stos
sbb
mov
mov
popa
dec
and
or
leave
inc
mov
xchg
ret
stos
inc
sbb
sub
out
inc
loope
dec
xor
xchg
sbb
sbbl
fldt
call
mov
mov
push
cs
push
loope
mov
out
add
sbb
pop
adc
push
inc
and
cmp
mov
pushf
cld
mov
mov
arpl
mov
push
fxam
sti
or
xor
dec
jmp
dec
push
and
mov
fimuls
sbbl
mov
adc
xor
ret
mov
pushf
loope
es
mov
insb
in
mov
cmc
movsl
int3
xor
jl
jo
fucom
sub
clc
add
adc
mov
mov
jg
lret
mov
push
mov
ja
xchg
add
push
add
dec
sub
xchg
shlb
and
sub
cli
xchg
xchg
adc
xor
cmp
pop
mov
mov
mov
int3
cmpl
dec
push
and
mov
jmp
imul
jle
jmp
subb
loope
cs
cltd
fstpt
xchg
jbe
cli
dec
adc
leave
or
push
fisubl
xor
cmpl
fimuls
or
in
dec
jo
dec
jl
or
loope
and
inc
sub
fdivrs
movsl
fld
sbb
and
fistps
inc
testl
sahf
dec
xor
ja
inc
out
xchg
sbb
inc
in
inc
dec
loopne
shlb
dec
push
jmp
jnp
add
arpl
jbe
inc
test
fldenv
dec
sub
mov
jno
push
cwtl
test
stos
testl
mov
add
push
arpl
and
push
dec
xchg
loop
adc
push
stos
data16
pop
mov
lret
outsl
aad
sub
test
lea
aad
pushf
fists
fwait
repnz
xor
into
imul
and
inc
loope
pop
jb
jge
lods
cmpsb
lret
mov
inc
in
iret
popf
and
dec
sar
dec
jmp
push
in
sbb
popa
inc
add
sub
and
push
pusha
jl
lock
add
jp
mov
js
pop
dec
out
inc
loop
test
repz
or
mov
aad
pop
es
aas
addr16
adc
mov
insb
add
lret
add
mov
sbb
or
outsb
cs
mov
xchg
sbb
adc
icebp
mov
pop
mov
nop
sbb
ret
stos
pop
pop
mov
sub
bound
popf
sub
fcoms
mov
push
jne
andl
pop
inc
movsb
mov
imul
cmp
dec
daa
aad
push
cmp
pop
inc
call
sbb
ret
xchg
and
movsl
sbb
leave
pop
xchg
int
and
dec
mov
sti
mov
icebp
fldl
mov
inc
adc
push
mov
xor
test
sti
cmp
cmp
or
inc
lds
mov
mov
rcl
cmp
or
jge
mov
inc
jmp
aam
pop
xchg
mov
jmp
das
pop
mov
add
leave
jnp
add
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
push
pop
adc
adc
push
out
jns
jmp
bound
inc
sbb
add
inc
mov
mov
jbe
sbb
pop
sub
repnz
xor
cld
mov
shlb
popf
add
xchg
setbe
sarb
mov
lock
stc
fdivs
jmp
jl
out
mov
mov
cmp
xchg
mov
pushw
daa
stos
push
or
out
mov
pop
pop
outsl
push
into
cli
jbe
stos
outsl
ja
xor
hlt
inc
sbb
push
lahf
fists
xchg
xor
and
inc
insl
popf
push
inc
xlat
movsb
and
push
add
imul
test
imulb
mov
call
xchg
js
sub
imul
inc
xor
shrl
mov
cmp
cmp
push
mov
pop
push
push
fwait
popf
enter
xor
adc
cmpsl
inc
pop
inc
sub
push
jg
mov
insb
cmc
jno
jnp
push
and
lods
and
cmpsl
push
out
and
aad
adc
stos
fstl
push
jns
loope
pop
xchg
cmp
xchg
xchg
mov
mov
arpl
xor
push
sarl
xchg
pop
xchg
ret
push
clc
jmp
icebp
xlat
mov
and
and
aam
int
fs
roll
jb
cmpsb
fstps
ss
xchg
xor
cs
pop
mov
push
or
pop
adc
out
fs
test
mov
adc
enter
dec
cwtl
sti
adc
mov
cwtl
inc
int
pop
das
xchg
mov
pop
inc
repz
or
iret
pop
fcmovnu
aad
add
ljmp
lods
jnp
fiadds
ret
rcrl
jmp
xchg
pop
add
dec
dec
cmpsl
aad
xor
das
rolb
jb
sub
movsb
in
mov
sub
scas
sbb
sbb
shlb
pop
dec
pop
mov
mov
push
pusha
out
inc
imul
and
sub
dec
cmp
pop
imul
cmp
jb
ret
nop
ret
sub
scas
push
or
pop
adc
or
mov
jg
push
sub
cmp
sbb
int3
hlt
sbb
dec
clc
fwait
popf
repnz
call
adc
mov
xor
out
call
and
insb
pushf
popa
rolb
xor
aad
sbb
pop
inc
sbb
loopne
or
jg
mov
in
ds
add
xchg
popw
adc
fstpl
and
jge
movsb
movsb
adc
pop
stc
or
adc
aas
ret
mov
mov
loope
inc
lods
pop
es
aam
enter
mov
les
pop
or
das
dec
test
dec
stos
pop
xchg
es
mov
pusha
aam
leave
lcall
je,pt
test
loop
ret
mov
push
mov
adc
scas
xchg
cmp
call
aam
lods
mov
movsl
cs
dec
xchg
into
push
cwtl
sub
leave
cltd
lods
sbb
add
and
push
arpl
lret
pop
add
daa
je
adc
in
jno
inc
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
sti
xor
jle
call
adc
add
jno
loope
mov
into
test
or
jb
lret
notl
mov
sbb
pop
cwtl
enter
push
les
cltd
decb
inc
mov
imul
mov
scas
loopne
and
aam
lret
insb
push
add
sahf
popf
sub
sti
jp
mov
push
mov
xchg
test
shlb
push
sbb
jecxz
loope
xchg
lahf
lcall
stc
mov
sahf
adc
imul
inc
fmul
mov
je
mov
test
scas
sbb
test
xlat
mov
fs
fisttpll
xor
int
adc
loope
insb
repnz
pop
and
xchg
aad
xor
imul
mov
xor
dec
enter
out
stc
sub
mov
cmp
push
mov
mov
data16
ljmp
loopne
sbb
icebp
mov
loopne
mov
xor
cmp
ja
jmp
xor
mov
enter
jne
or
inc
call
mov
loopne
pushf
lret
out
xchg
pusha
arpl
push
and
push
jge
push
xchg
sub
xchg
mov
shll
jge
addr16
sbb
cmpsl
mov
stos
sbb
cmpsb
mov
inc
int3
imul
je
jge
cmc
hlt
pop
fs
test
popa
cld
lods
push
add
push
bound
jae
sub
mov
es
or
sub
add
stos
es
jb
subb
sahf
imull
jl
nop
dec
das
ret
dec
out
into
call
rcrb
jnp
lret
out
jp
sub
push
fidivs
adc
or
sub
xchg
repz
aas
sbb
xlat
jo
jb
sub
and
push
shr
mov
enter
lock
jle
sti
int
jnp
mov
cltd
dec
pop
les
sub
loopne
jae
push
mov
pop
jecxz
test
sbb
into
cs
mov
shlb
test
push
cmpsb
xchg
add
xchg
mov
rcrl
dec
inc
and
pop
mov
xor
jl
sub
popf
loop
ror
ret
pop
lds
jb
mov
in
fmulp
or
lahf
imul
push
xchg
adc
push
leave
fcoms
subl
pushf
ret
loope
out
fsubp
stos
lret
xor
add
cmp
sbb
outsl
movsb
mov
mov
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
shr
jle
std
adc
adc
ja
mov
icebp
sub
in
out
xorl
xchg
data16
scas
std
pop
adc
or
idivb
pushf
fimull
fistps
shll
or
lret
cmp
or
mov
mov
stos
lock
daa
xor
push
mov
iret
push
cmp
rcrl
pusha
xchg
inc
dec
call
and
ja
sub
sbb
insb
cmp
adc
test
lock
inc
and
mov
fmull
dec
xlat
loop
data16
inc
pop
push
and
jb
mov
jg
mov
or
aas
ljmp
subb
dec
adc
jno
lods
outsb
xor
out
sbb
ret
cltd
daa
pop
sub
out
sub
lcall
stos
dec
pop
jmp
lds
stc
movsb
leave
inc
add
jl
adc
outsb
xor
std
repnz
popa
jnp
in
sub
addl
mov
xor
int
cli
insb
jp
pop
or
das
lods
push
dec
mov
dec
int3
mov
adc
mull
gs
imul
sahf
scas
adcb
add
dec
sbb
dec
mov
cld
unpcklps
test
shll
or
hlt
lahf
sahf
jne
sub
mov
loopne
mov
pop
push
ljmp
mov
in
mul
and
sbb
ja
sbb
insl
push
nop
movsl
push
mov
push
fildl
negb
hlt
insb
cld
jno
fldl
jo
mov
add
mov
inc
pop
dec
insb
sarb
push
push
mov
rcl
inc
sbb
jne
sub
sbb
sbb
jbe
lret
mov
pop
cmc
xadd
xor
lcall
pop
lea
test
mov
add
add
iret
popf
push
sbb
in
mov
andb
adc
sbb
clc
and
stc
fwait
jle
xlat
mov
insb
adc
testl
rcl
adc
aas
pop
pop
lock
cli
pop
and
loopne
cs
lods
aaa
or
lret
mov
dec
lods
add
push
sub
xlat
push
jno
push
cmpl
jne
jnp
leave
mov
xor
imul
cmpsb
leave
jns
ret
cmpsl
das
cltd
out
out
loope
inc
bound
das
jb
push
jns
outsl
sub
xor
lret
push
iret
sub
mov
push
push
mov
mov
stc
mov
sub
movl
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
or
adc
adc
add
xor
pop
pop
imul
fnsave
sub
xor
dec
add
jmp
mov
out
stos
mov
ficoms
mov
xor
dec
jns
and
mov
cmp
out
sub
fwait
or
inc
outsl
mov
cmp
cmpsl
mov
loopne
rorb
mov
cmp
sbb
out
inc
and
add
les
pusha
rcll
jmp
mov
xchg
popf
sbb
mulb
imul
xor
cmpsb
xor
mov
jno
push
arpl
or
fistpll
jne
in
cmpl
in
mov
fildl
jnp
pop
mov
dec
icebp
in
stos
data16
js
sbb
adc
push
lods
jmp
fisttpll
pushf
jo
push
push
popf
addr16
dec
mov
mov
imul
push
xor
pop
outsl
fcomip
dec
xchg
repz
adc
icebp
popl
ja
xor
push
scas
arpl
divl
into
or
xchg
cld
movsb
das
adc
adc
pushf
cmp
stc
clc
clc
inc
and
roll
xchg
push
dec
adc
data16
xor
adc
mov
and
imul
xor
or
fisttpll
repz
jp
and
sbb
inc
jmp
test
jbe
cmp
and
push
movsl
pop
mov
loop
jg
in
jbe
add
or
stc
in
jecxz
addr16
testl
outsl
loope
jbe
xor
xchg
mov
and
add
call
mov
cmp
pop
xchg
cmp
fdiv
ret
mov
mov
sbb
xlat
decb
or
jle
js
roll
mov
or
cltd
xlat
imul
add
and
aam
jae
push
sub
sti
jmp
push
enter
fs
in
fiaddl
push
xorl
stos
cld
mov
inc
stos
or
jmp
inc
pop
aam
call
pop
mov
pop
fwait
repnz
dec
das
lock
ret
mov
or
cmp
xor
pop
lea
test
adc
div
lock
out
in
fcmovnbe
pop
loop
sub
cltd
fcomps
das
add
inc
inc
scas
dec
out
pop
and
push
push
mov
addl
sub
movl
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
dec
sarb
out
adc
adc
jmp
loope
aad
add
xchg
iret
jmp
sti
sub
ret
inc
sbb
aas
jle
scas
popf
mov
sub
cmp
mov
test
outsl
jle
xchg
mov
xchg
pop
rorb
mov
mov
lcall
sub
push
iret
repz
pop
shrb
jg
sbb
pushf
fidivrl
jb
inc
rcrb
inc
and
push
aaa
int3
aad
pop
adc
push
xchg
ret
xlat
int3
clc
lock
xchg
js
xchg
pusha
xorl
fadd
sbb
xor
movsl
into
inc
lret
mov
repz
mov
cltd
push
sbb
dec
xchg
adcb
cltd
cmc
in
fisttpl
scas
pop
loop
repz
inc
gs
divl
sbb
xlat
fildl
mov
sub
shlb
daa
mov
mov
or
in
sub
add
sbb
jmp
std
push
lret
jnp
scas
stos
dec
push
cmc
mov
scas
inc
cmp
mov
test
clc
fidivl
jae
pushf
mov
fldcw
fnstsw
fnstcw
scas
fists
xchg
mov
or
jmp
stc
jno
push
sub
xchg
dec
dec
jnp
mov
and
dec
addr16
and
sbb
and
inc
inc
xchg
lock
pop
rcll
lahf
leave
pop
xchg
xchg
jg
dec
cmc
iret
jo
pop
and
cmp
xor
int
call
jb
mov
mov
es
hlt
js
xor
daa
pushf
sub
arpl
sub
sbb
and
pop
das
sbb
ret
mov
push
es
mov
jecxz
push
adc
and
xor
mov
jmp
sahf
cmpsl
mov
mov
js
push
jne
test
dec
dec
adc
or
push
fld
mov
enter
outsb
inc
fbld
fadds
imul
lahf
push
adc
jnp
cld
adc
fildll
xchg
xor
sbb
daa
jbe
das
jp
pop
xchg
cmp
jp
int
push
aad
xor
nop
ja
push
mov
movsl
fs
rcrl
xlat
push
and
dec
into
out
orl
pushf
mov
mov
mov
push
scas
je
popf
insb
sbb
pop
add
or
pushf
sub
mov
pop
fisubrl
dec
mov
loopne
aaa
cmp
inc
and
pushf
jnp
add
inc
and
and
add
dec
and
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
fwait
xor
mov
xchg
movlps
cmp
out
xor
cmp
mov
testl
xchg
sub
enter
cld
push
orl
insb
xchg
adc
adc
cmpsl
pop
cli
inc
jmp
loopne
lret
push
add
xor
movsl
mov
mov
hlt
cmp
pop
sbb
icebp
negb
adc
psubd
sub
dec
fldl
dec
ja
inc
inc
inc
out
sarb
and
push
add
adc
xchg
in
je
mov
add
stos
adc
inc
push
in
notb
jmp
dec
mov
add
cltd
fmull
fcomi
ja
xor
adc
xchg
les
fwait
mov
mov
gs
aad
sarb
std
jbe
mov
ja
and
jge
mov
scas
test
inc
aaa
cld
cmpsb
or
xchg
cmp
fsubrl
mov
xchg
or
cmp
push
dec
sub
pop
pushf
add
dec
mov
je
outsl
js
xchg
ret
dec
dec
cli
lods
addr16
lds
mov
xor
jbe
je
fwait
fwait
daa
jbe
sub
xchg
rcll
sbb
inc
lods
cwtl
fstl
adc
jp
xchg
fcmovu
add
in
daa
dec
push
jb
pop
jp
mov
jmp
mov
gs
dec
lret
push
push
xor
inc
jne
jp
push
test
sub
lock
mov
sub
sbb
cmp
push
jnp
mov
cmp
or
hlt
cmp
sarb
lock
rclb
aaa
xor
std
js
test
inc
dec
leave
rol
sub
lret
je
ret
dec
mov
into
divb
mov
add
idivl
out
cwtl
mov
daa
rcll
outsb
adc
ftst
xchg
insb
sbb
mov
mov
data16
sbb
mov
sub
add
sbb
cmp
mov
mov
cmpsb
scas
jae
movsb
inc
jmp
inc
shlb
cld
mov
imul
es
lods
clc
fs
test
push
test
fcomps
jb
fldcw
cmp
rcl
xchg
movsb
dec
sbb
movsb
out
xchg
fadds
frstor
adc
icebp
rcr
cmpsb
mov
mov
mov
jge
push
jmp
sub
loopne
fnsave
sub
add
popa
addl
xlat
mov
cli
test
pop
daa
xor
pop
repz
sahf
sbb
push
cmp
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
dec
mov
lods
add
adc
adc
cli
cmp
jnp
stc
add
xor
pop
dec
in
sbb
roll
nop
mov
rorl
cmpsb
sysexit
xchg
ljmp
aad
mov
nop
pop
rclb
shrl
insb
inc
add
cmp
rcrb
adc
arpl
push
out
adc
orb
inc
sbb
xor
mov
nop
lods
in
movsl
mov
cmc
push
inc
pop
bound
sbb
sub
or
loop
xor
push
and
insb
xlat
xchg
aam
mov
xchg
adcl
mov
lcall
pop
push
jmp
hlt
pushf
add
or
int
test
mov
clc
out
dec
mov
fimuls
mov
test
notl
jns
or
inc
sarb
cltd
cmp
ja
inc
dec
pop
aam
add
inc
add
pop
movsb
add
icebp
cmc
sbb
cmp
int3
jno
call
lea
mulb
pop
ja
jmp
out
pop
dec
mov
push
movsb
pop
out
jp
je
leave
ja
mov
push
jbe
insb
ss
ja
out
add
xor
mov
push
insb
pop
movsl
jmp
inc
lds
es
scas
scas
ret
mov
cs
or
jle
mov
xchg
std
lods
dec
repz
pop
inc
jns
pop
loop
push
pop
adc
shrb
out
dec
mov
dec
pushf
dec
adc
sub
rcrl
incl
mov
adc
adc
into
imul
or
xchg
pop
jge
insl
add
in
jbe
pop
mov
mov
push
cmp
push
lahf
mov
push
xor
lcall
out
dec
push
xchg
jnp
ja
push
arpl
jp
inc
mov
xchg
fistl
push
push
xchg
les
aaa
cmpsl
lods
mov
and
and
psubsb
addb
imul
push
nop
scas
imul
sub
jo
daa
and
jmp
inc
inc
mov
adc
fwait
inc
add
pop
ficompl
add
add
mov
stc
rclb
jae
rclb
into
mov
push
dec
jne
addl
and
int3
loopne
addb
inc
jnp
fiadds
and
jo
negb
inc
sub
jecxz
cld
xchg
je
aas
cwtl
imul
pop
js
and
mov
xchg
cmpb
push
ffreep
leave
fucomi
leave
xchg
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
ja
sub
loopne
adc
in
out
adc
in
mov
subb
jae
ret
push
imul
sub
cmpsl
in
rcr
in
ss
in
dec
bound
mov
inc
scas
mov
pop
sti
cmpl
icebp
jnp
sbb
xor
mov
int3
aas
sbb
push
xchg
insl
inc
aaa
add
popf
int
gs
push
jb
sub
xlat
pop
mov
out
lea
outsb
rorl
nop
outsl
bound
adc
xchg
sub
or
inc
call
mov
xlat
cmp
xchg
dec
testl
sbb
mov
leave
js
xlat
fmuls
and
sub
js
icebp
mov
out
cmp
xchg
mov
pop
dec
pushf
cmp
jecxz
stos
addr16
insb
cmp
imul
jg
lahf
das
fimull
cmp
or
sahf
cmpsl
pop
cli
das
sub
dec
scas
dec
inc
xchg
inc
shl
jecxz
mov
mov
xchg
jg
js
sub
push
and
aam
cwtl
mov
jnp
jbe
in
sub
inc
or
shrb
push
popf
dec
mov
popa
inc
cvtps2pd
test
loope
stos
scas
outsl
insl
jb
mov
inc
iret
mov
push
aaa
js
divb
sbb
out
ljmp
outsb
inc
or
mov
xchg
lds
sbb
add
out
pop
dec
es
out
mov
mov
or
xchg
cld
mov
cmpsb
push
xor
pop
aaa
stc
cmp
and
scas
aad
mov
cmpsb
jecxz
aaa
xor
loope
cmp
xchg
inc
mov
inc
cmp
cmp
sbb
rolb
push
mov
dec
loopne,pt
sbb
push
js
and
mov
cmp
push
fistps
gs
push
int3
add
out
stc
cmc
fsubrl
repnz
xchg
int3
movsb
or
pop
jp
pop
loopne
pop
xchg
ss
and
es
mov
pop
mov
pop
sti
adc
cmp
add
xor
fcoms
mov
or
outsb
xchg
out
cwtl
arpl
test
lock
mov
adc
nop
loope
repz
bound
mov
pop
jecxz
in
leave
lret
cli
ret
sbb
lock
pop
into
and
imul
mov
inc
or
inc
mulb
and
lea
orb
mov
xor
mov
pop
sub
repz
sbb
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
mov
xchg
movlps
push
mov
sub
es
call
mov
stos
add
out
les
cmp
jo
xchg
cli
jp
ss
fadd
ja
pop
dec
popa
nop
inc
js
inc
mov
lods
xor
test
shl
adcl
xor
xorl
cmovg
lcall
and
cmpsl
mov
xor
xchg
xor
bound
leave
cmp
dec
inc
in
xchg
int
xchg
pop
into
xchg
adc
dec
adc
fcmove
movsl
mov
and
xchg
push
cmp
push
mov
jb
repz
dec
jbe
lahf
cltd
cld
xor
fwait
jno
jae
inc
sbb
ret
dec
int
enter
add
add
mov
pop
pop
dec
fldcw
push
mov
mov
adc
rcrb
cmc
or
fwait
mov
inc
pop
mov
lcall
push
cmc
stc
call
xor
push
mov
jne
icebp
sar
xor
inc
mov
push
andb
nop
xorl
fidivrs
ss
mov
add
pop
nop
dec
and
cmc
fbld
xor
jle
das
mov
adc
cmpb
dec
jge
xor
ljmp
jmp
mov
mov
enter
jg
test
xchg
xor
push
cmp
mov
dec
xchg
fdiv
std
cs
fbld
daa
sbb
sub
adc
cli
add
js
cmp
dec
in
push
int3
sub
or
xchg
push
mov
xchg
xor
add
in
inc
mov
andl
or
out
scas
stos
pop
xor
stos
enter
mov
in
sub
cmp
ffreep
std
or
add
mov
push
pop
jle
loopne
mov
int
xchg
shrl
repnz
xor
adc
adc
repnz
mov
dec
andb
jl
repnz
faddp
int
fidivrl
or
fnop
mov
inc
jne
or
sub
mov
mov
int
out
std
adc
add
mov
add
outsl
pop
dec
or
add
popf
jmp
mov
push
lods
pop
mov
fildl
mov
bnd
sbb
mov
jmp
xor
adc
shlb
jo
in
dec
xchg
fwait
sbb
in
negb
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
xchg
jp
mov
xchg
movlps
push
jne
xor
mov
lcall
pop
dec
loopne
dec
and
sbb
out
or
inc
in
clc
cmp
in
fcoml
sbb
enter
mov
js
bound
lds
leave
push
addr16
ljmp
xchg
push
fld1
scas
and
push
cmpb
sbb
dec
or
pop
or
das
xchg
insb
int
popf
out
out
scas
addr16
mov
adc
sar
call
add
push
adc
push
addb
loope
rorl
fldenv
cmpsl
add
cwtl
roll
pop
cmp
push
pop
test
mov
es
leave
cmp
fucomi
jge
add
in
push
sti
inc
push
in
jno
and
and
rolb
xchg
or
lret
and
fcmovnu
scas
sub
outsl
inc
dec
test
adc
loope
iret
mov
inc
stos
int3
cmp
cmp
cs
push
jge
mov
jmp
nop
xor
xor
jle
addr16
sbb
pop
fsubrl
xlat
rol
leave
ror
cld
jmp
jl
adc
pop
mov
and
out
in
inc
into
je
int
mov
sbb
das
out
iret
xchg
inc
outsl
outsl
test
pop
sahf
push
sub
mov
mov
cli
push
xchg
inc
repnz
push
repz
sub
sbb
push
or
and
xchg
fsubr
enter
divl
testl
loope
pusha
popf
scas
push
adc
lock
ja
cmp
in
push
mov
cld
xchg
mov
xor
es
add
call
lcall
cmpb
shll
add
nop
pop
pop
jmp
mov
push
hlt
mov
dec
pop
mov
sbb
jecxz
cmp
mov
sbb
push
xchg
cltd
push
insl
imul
adcl
aaa
push
xchg
lods
mov
pop
ficompl
sahf
jecxz
sbb
fcmove
or
xchg
orb
loopne
shr
je
dec
jl
or
or
add
fisubrl
mov
push
fwait
cs
andb
xor
mov
insb
in
cmp
or
mov
pop
insb
mov
fwait
xchg
jmp
or
xchg
outsl
insl
add
inc
pop
mov
movsb
mov
cmc
stc
mov
dec
movsl
outsl
adc
cmp
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
xor
pop
outsl
inc
mov
in
scas
popf
pushf
inc
inc
mov
jmp
sub
std
mov
xchg
fcomp
xchg
xchg
test
sub
mov
add
enter
mov
xor
int3
dec
push
popa
xchg
mov
movsl
cmp
hlt
js
xor
dec
mov
jl
and
mov
lods
mov
sbb
xor
push
mov
lret
dec
mov
mov
lret
inc
xchg
xchg
mov
imul
xor
in
arpl
test
dec
dec
fxch
mov
pop
mov
mov
sbbb
jl
add
dec
and
icebp
and
xor
xchg
fs
inc
insl
or
cs
mov
mov
push
ret
movsl
mov
jno
dec
or
aas
add
rol
xchg
jg
mov
aaa
cmp
test
test
xchg
pop
mov
adc
sub
sbbb
push
fwait
rcrb
rclb
or
dec
xchg
push
mov
xchg
daa
cmp
aad
fimuls
add
sbb
es
xchg
xor
shll
ss
in
mov
inc
dec
xchg
shl
adc
push
dec
mov
xchg
xor
sub
sub
cwtl
jle
and
gs
and
push
sub
and
jb
lahf
fld
repz
pop
jl
and
or
dec
push
das
push
and
daa
lcall
push
out
inc
icebp
pop
push
xor
push
push
or
adc
into
xlat
jp
pop
es
rorl
xor
or
pop
mov
mov
push
jge
mov
iret
adc
dec
mov
inc
or
imul
repnz
and
sbb
xchg
loopne
sbb
notb
mov
push
pusha
or
lret
loope
pop
add
out
jmp
sbb
xchg
std
sbb
sub
mov
push
jb
cs
inc
inc
inc
cli
fucomi
out
imul
mov
subl
and
dec
or
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
inc
mov
scas
into
adc
adc
sahf
loop
outsb
adc
rclb
filds
pusha
std
and
and
test
filds
sbb
pmuludq
cwtl
mov
adc
mov
xchg
and
inc
mov
dec
inc
cmpsb
lds
into
sbb
mov
addb
ljmp
scas
clc
pop
popf
sbb
pop
inc
push
mov
roll
sbbl
push
xchg
pop
es
fldcw
cld
lahf
inc
ja
nop
dec
aad
dec
mov
adc
push
push
lock
xor
fistpll
aas
hlt
or
xor
mov
jp
ss
mov
cld
loop
cmp
repnz
inc
sbb
pop
xor
mov
shrl
popa
in
fdivr
loop
xchg
test
xchg
and
jl
inc
stos
jle
and
mov
sbb
int
into
imul
xor
cmp
iret
unpcklps
in
mov
xchg
stos
rcr
test
push
int3
out
sahf
cltd
dec
sbb
inc
mov
pop
xor
mov
add
sub
icebp
clc
sub
fdivr
mov
jl
xchg
repz
xchg
mov
add
sub
fwait
dec
mov
sub
sarb
jmp
cmp
sub
fldenv
rcl
test
mov
aam
mov
mov
movsb
arpl
mov
cmp
addb
pop
xchg
and
mov
and
pop
dec
pop
xorl
jne
sahf
out
das
or
push
xchg
pop
movsl
mov
fiaddl
fisttps
pop
jecxz
jmp
and
loop
jo
jbe
mov
leave
inc
adc
pop
mov
add
jno
or
in
sti
xorb
sbb
and
or
fwait
lret
sti
cmp
dec
cmpl
add
in
push
test
inc
jmp
out
cmpsb
xchg
push
push
stos
or
jb
stc
sbb
xchg
loop
mov
and
clc
cmp
pop
fsubrs
adc
test
decl
rol
fcom
push
add
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
pop
fdivrl
enter
or
or
ficoml
adc
mov
mov
push
sbb
data16
mov
pop
dec
ret
dec
iret
pop
in
jg
jmp
push
inc
fcoml
push
xchg
test
push
in
sub
jo,pt
fisubs
jl
fildl
leave
adc
insb
mov
push
gs
dec
push
push
cmpsl
push
int
inc
cmp
cmpsb
lock
ljmp
sbb
push
sahf
xor
push
outsl
xchg
xor
out
cmp
sbb
push
adc
cli
mov
mov
call
ficoml
xchg
call
cmp
shlb
pop
subl
out
push
add
mov
jb
xor
and
lcall
add
jge
rolb
cmp
sub
adc
cmp
dec
leave
lods
xor
pop
mov
int3
jmp
in
arpl
dec
sti
pop
cmp
sbb
jecxz
xor
mov
pop
mov
sub
pop
xchg
adc
sbb
xor
xchg
les
cwtl
jp
xchg
jne
cmc
dec
les
ret
push
jnp
dec
mov
pop
add
fildll
jmp
lds
aas
push
loop
adc
xor
xchg
add
sub
jmp
adc
push
or
bound
add
rcrl
loop
aad
loope
test
mov
push
sbb
xor
popf
ret
fmul
push
sub
or
gs
popa
loopne
and
adc
adc
loopne
test
fidivl
jl
pop
je
push
inc
and
cli
push
rorl
test
dec
ficompl
xchg
js
xlat
dec
inc
xchg
imul
add
imul
repz
mov
ret
jbe
jnp
mov
adc
mov
leave
rolb
mov
ret
xorb
sub
shl
mov
rcrl
shlb
sbb
incl
add
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
or
push
adc
adc
push
je
and
out
daa
sub
xchg
idivb
and
and
hlt
sub
xorb
xor
adc
add
push
mov
mov
lret
xchg
cltd
mov
sbb
xchg
popa
jb
xchg
jno
divb
aas
orl
mov
jnp
push
cld
dec
icebp
xor
mov
dec
inc
pushf
add
jmp
and
xor
lret
loope
mov
mov
jecxz
enter
push
aad
mov
dec
rcr
shl
dec
test
stos
pop
pop
inc
sbb
mov
cmp
loopne
aad
loopne
sub
pop
mov
mov
movl
loopne
lea
in
xchg
filds
insb
int3
mov
ds
add
rorb
mov
sub
xchg
and
add
or
mov
incb
neg
mov
push
pushf
fsubs
andl
push
dec
or
push
cmpsl
xor
fmuls
push
ss
addl
sti
push
mov
addb
scas
xor
cltd
pushf
out
cld
ret
ss
leave
mov
call
pop
adc
jp
mul
into
fcoms
hlt
push
jecxz
arpl
mov
xor
repnz
add
lret
hlt
popf
mov
pushf
fucom
loope
shrl
mov
push
sub
cmc
cs
test
push
incb
lock
pop
xchg
adc
addb
fnstenv
jnp
shll
addl
stos
ficomps
fistpll
mov
mov
or
pop
sub
rcr
ja
xor
mov
pop
mov
test
lea
pusha
ss
arpl
dec
and
mov
jge
shl
movsl
enter
pop
jmp
mov
mov
mov
push
fadd
test
pushl
jp
add
inc
mov
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
popa
stos
insb
leave
ret
enter
xor
mov
inc
loope
cmp
adc
popa
sbb
inc
push
mov
jecxz
jl
dec
fwait
js
dec
push
mov
push
movsb
jge
int3
lods
out
mov
daa
mov
mov
pusha
sbb
aaa
int3
mov
sti
push
hlt
sbb
mov
fstpt
adc
inc
push
mov
mov
or
add
mov
test
adc
gs
mov
test
mov
ljmp
xchg
ja
pop
cmp
xchg
adc
inc
out
push
sbb
nop
repz
call
mov
cmp
or
xcrypt-cfb
cmpsl
loope
pop
sbbl
jmp
xchg
fsubs
fiadds
xor
inc
add
sbb
rcrl
sub
sub
scas
call
mov
push
jne
mov
or
bound
adc
nop
fwait
ss
sbb
dec
imul
jle
mov
cmpsl
sub
rcl
jle
sbb
cmpl
lods
dec
pextrw
jns
lds
test
sahf
unpcklps
movsb
call
int3
jo
loope
cmp
es
pop
mov
movsb
shr
pop
add
xor
xchg
push
lods
repz
push
ljmp
inc
test
mov
insb
outsl
loop
push
jb
imul
cmpsl
scas
inc
push
jg
test
push
insb
fstps
ds
cld
inc
aaa
das
and
xchg
dec
xor
push
fadd
sub
pop
jg
fst
hlt
lcall
push
jl
and
loop
scas
cmpb
lods
sub
xor
lods
sbb
and
lret
push
repnz
rorb
les
fcmovnbe
adc
pop
sbb
sbb
xor
jp
mov
mov
adc
out
add
add
add
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
sub
jle
mov
adc
mov
out
dec
add
fwait
or
jecxz
rcll
or
sub
jg
xchg
mov
call
sbb
mov
xchg
shll
add
into
and
xor
pop
inc
fisttps
xor
aam
fcoms
sub
insb
cmp
inc
aam
or
pop
xlat
mov
ret
imulb
push
cmp
ds
adc
stc
movsb
mov
fdivrl
cwtl
movups
pop
idivb
sahf
test
mov
data16
orb
loope
mov
or
popa
or
fnsave
shrl
mov
orl
cltd
ss
adc
mov
hlt
mov
mov
lret
mov
pop
es
dec
cmp
cmc
shl
push
test
mov
mov
insl
xor
fcmovbe
mov
push
cmp
loop
gs
fldt
leave
mov
jno
xchg
jo
out
std
sarl
inc
out
cmp
mov
jge
mov
into
lock
xchg
aam
fisubs
mov
lret
xchg
scas
loopne
lea
jae
lcall
shlb
rorb
je
out
lret
les
lock
js
mov
cli
int3
jmp
mov
dec
xlat
cld
push
push
and
mov
roll
mov
sub
mov
cltd
or
mov
fmuls
and
dec
jle
push
cmpsb
arpl
es
loopne
pop
lock
push
lods
mov
nop
cmp
outsb
mov
int
popa
or
mov
test
mov
out
add
cmp
in
cmp
sub
or
imul
icebp
inc
adc
add
cltd
cmp
divl
mov
ret
dec
clc
loop
inc
lahf
shll
inc
cltd
dec
icebp
std
adc
mov
xchg
test
fnstenv
adc
xchg
sub
incl
testb
adc
test
sub
inc
add
xor
inc
add
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
push
xor
adc
xchg
pop
shrl
pop
pop
ljmp
mov
lods
or
push
lcall
xchg
jmp
out
sub
pop
loopne
mov
push
pop
pop
int
insb
mov
das
jle
pop
lahf
mov
jbe
mov
xor
sti
or
add
inc
dec
cwtl
mov
pop
sar
push
lods
stos
sub
lock
arpl
jne
jnp
in
adcl
sub
inc
sub
out
dec
out
stos
jecxz
filds
dec
pusha
dec
divl
and
adcl
fsqrt
shr
xlat
loopne
lea
mov
sbb
mov
fidivrs
xor
sub
and
lahf
lret
inc
mov
cmp
mov
pushf
jmp
cwtl
cld
and
lea
mov
sbb
cmp
and
cmp
inc
cltd
addr16
out
inc
mov
enter
scas
xor
loop
ds
sub
inc
mov
cmp
cmp
ja
or
icebp
jns
outsb
out
repnz
int3
ret
inc
xchg
inc
int
cmc
ljmp
out
lds
adc
and
adc
pop
or
sub
mov
jl
jbe
xchg
inc
jbe
push
icebp
xchg
cmp
jmp
ds
or
fbstp
cmpsb
xchg
pop
xor
enter
es
adc
in
jno
adc
cmpsl
data16
fsubl
push
dec
stc
ja
scas
xchg
sub
jecxz
into
sti
rorl
shl
imul
add
repnz
mov
lods
push
ljmp
shlb
mov
cmpsl
mov
aaa
mov
mov
in
scas
jae
scas
sbb
push
jae
cmp
fistpl
xchg
mov
and
sbb
sahf
shll
cmp
cld
imul
lahf
popf
xor
sub
andl
test
cmp
adc
lock
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
lds
adc
movlps
mov
pushf
dec
add
jmp
inc
adc
inc
pop
das
int3
js
repz
add
push
push
bound
jmp
xor
rorb
stos
nop
mulb
fs
sahf
adc
outsb
dec
pop
outsl
jp
jg
out
xchg
mov
in
sti
jmp
shl
andb
pop
lret
sbb
mov
lahf
ficoms
push
mov
mov
mov
mov
ret
imul
mov
add
adc
mov
int3
sbb
or
pop
mov
lods
fsubs
dec
out
pop
mov
out
repz
in
push
jp
jle
jmp
daa
subl
gs
imul
repnz
adc
shr
arpl
jae
rcrl
mov
xorl
out
mov
outsb
movsl
test
pusha
mov
cld
outsl
in
sbb
inc
mov
addr16
aas
jbe
les
cli
mov
adc
sub
push
stos
cmp
inc
cmpsl
jns
jecxz
push
popa
insl
inc
jg
scas
hlt
pop
push
js
push
xchg
sbb
cmp
sbb
sbb
hlt
call
jge
xlat
cmp
mov
bound
mov
iret
scas
cmp
push
pop
negb
mov
in
jl
xor
pop
push
push
pop
popf
jbe
lahf
int3
push
jnp
cmp
mov
adc
pop
inc
jg
pop
pusha
lcall
or
xor
test
out
mov
cli
popw
testb
pushf
loop
and
jnp
das
adc
daa
jae
test
push
nop
xchg
cmovge
ret
jbe
outsb
jns
push
add
dec
in
xor
and
mov
mov
add
xchg
xor
pop
sbb
mov
popa
ss
popa
sub
push
fwait
out
xchg
push
and
lret
int3
jnp
push
ja
std
cmc
xchg
xchg
rcll
pop
int3
into
xchg
dec
jo
pop
rolb
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
outsl
sub
lcall
adc
mov
icebp
into
subl
popa
push
roll
inc
pop
lods
mov
pop
ja
sti
or
roll
rolb
scas
mov
cmp
mov
aam
imul
pop
into
push
xchg
data16
ljmp
fiadds
int
cmc
jge
inc
loop
jns
adcl
inc
pop
dec
mov
sbb
lods
xor
call
out
or
inc
xchg
jle
repz
inc
push
iret
pop
sarb
lds
and
movsl
push
adc
adc
mov
pop
fs
pop
mov
and
lea
dec
ficoml
mov
xchg
push
add
sub
test
rclb
jno
push
fldcw
fmull
mov
mov
mulb
cmp
movb
mov
jnp
lds
imul
mov
dec
mov
or
cmpsl
mov
test
dec
inc
lods
jne
leave
mov
stos
push
cmp
out
sahf
pop
mov
sbb
mov
push
ss
mov
jl
mov
int3
imul
outsb
xchg
stc
push
mov
subl
ret
push
rcll
adc
rol
mov
popa
xor
jne
dec
jbe
and
push
pop
mov
pop
xchg
fdiv
pushf
scas
pop
mov
jp
push
jmp
push
mov
mov
jb
call
mulps
iret
pop
ljmp
lock
pusha
cmp
popa
out
daa
loop
lods
movsb
jo
mov
pop
dec
divb
fwait
xor
mov
fcoms
out
pop
outsb
loope
pop
jb
lcall
repz
push
adc
dec
enter
sarl
mov
push
mov
jo
cmpsb
and
mov
sub
outsl
test
or
jo
cmp
insl
cmpsb
add
pop
out
arpl
pop
inc
imul
cmpsb
out
add
icebp
sahf
lcall
rorl
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
scas
cli
idivl
test
adc
movlps
or
jmp
and
xor
testl
dec
and
std
vcmpps
or
les
fidivrs
cmpsb
pop
dec
movsb
in
xor
popa
fdivrl
out
push
aam
bound
mov
fisttpll
nop
lods
adc
ljmp
push
loopne
das
addb
subl
and
adc
shlb
sarb
pushf
inc
sti
push
push
and
mov
je
xor
inc
add
out
mov
negl
icebp
sub
pop
inc
cmp
pop
dec
rorl
dec
scas
jmp
and
mov
into
rclb
add
jmp
fs
test
and
bound
sub
mov
jle
fisubrl
dec
jle
pushf
jge
jle
clc
popa
out
dec
cmp
push
pop
movsl
in
adc
mov
cmpsb
mov
test
stc
mov
les
add
test
addl
dec
sar
ds
popf
xor
xor
mov
scas
xor
shlb
mov
push
in
push
out
mov
pop
cmp
out
notl
btc
pusha
mov
jecxz
into
stos
inc
cwtl
sbb
loope
or
add
sbb
pop
lcall
int3
mov
xchg
push
roll
mov
jmp
jp
pop
and
pop
inc
xchg
push
repz
xchg
cwtl
fs
je
pop
push
push
adc
xor
cmpsl
faddl
sti
in
sbb
push
push
mov
dec
sbb
cmp
mov
xor
stos
add
cmp
test
into
popa
pop
inc
mov
movsb
mov
cmpsb
jns
xor
lds
lcall
fptan
pop
xchg
aas
mov
inc
jb
jl
mov
fldenv
outsb
lods
cltd
adc
aas
cmp
cmp
xchg
xchg
hlt
into
dec
add
inc
in
data16
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
mov
adc
adc
les
xor
jle
imulb
inc
or
or
lods
pusha
mov
add
repnz
imul
pop
outsl
int
ret
add
lcall
cwtl
xchg
mov
sub
ja
and
out
dec
orb
jae
pop
xchg
mov
pusha
adc
or
cltd
call
out
adc
sbb
dec
sub
cmpsl
fidivrl
test
dec
xchg
aad
rolb
shll
arpl
push
push
inc
mov
std
jnp
cmp
fistpl
in
or
xchg
mov
into
push
rep
inc
inc
sbb
mov
adc
orl
call
aaa
int
int3
add
and
push
out
fldl
add
push
cld
push
test
nop
jecxz
mov
stos
and
out
cmp
pop
insb
mov
popl
adc
test
lods
push
or
jne
insb
ret
ss
add
cs
pop
jmp
jmp
pusha
rclb
cltd
jmp
dec
daa
cs
in
cmp
outsl
leave
xchg
cwtl
in
out
stos
push
sahf
xor
inc
fwait
mov
mov
pop
pop
jp
inc
loopne
imulb
mov
in
jg
pop
sbb
mov
pop
push
push
fsubs
popa
sub
pop
push
cmp
dec
dec
jmp
and
cwtl
enter
add
fs
arpl
shl
int
add
fwait
add
sbb
cmp
mov
dec
in
repz
repz
leave
and
test
jmp
pop
loope
sbb
int3
mov
sub
xchg
cs
loop
es
bound
xchg
std
pop
das
jns
loope
inc
mov
je
push
rcrl
int
je
cmpsb
jae
imul
loope
xchg
stc
pop
mov
and
mov
add
fstl
aaa
into
and
mov
pushf
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
push
mov
enter
xchg
xchg
mov
pop
inc
cmc
nop
notb
cltd
jmp
icebp
or
sarl
mov
fcoms
sbb
cmp
and
ss
in
imulb
cmp
sarb
jmp
movsb
mov
inc
stc
push
lcall
mov
lods
add
test
out
nop
daa
cmp
cmp
in
mov
xor
pushf
pusha
lcall
mov
inc
mov
cmp
pop
bound
stc
mov
mov
les
inc
outsb
or
movsl
addr16
in
inc
jae
enter
xor
lds
dec
cli
cltd
or
jne
push
sbb
mov
or
je,pt
ret
xlat
ret
mov
aaa
jecxz
cmp
fwait
in
cltd
add
xor
mov
aad
inc
ret
push
pop
dec
cmp
stos
bound
mov
test
adc
mov
xchg
scas
sub
lock
cli
ja
push
inc
adc
shll
out
xor
add
icebp
dec
mov
xchg
xor
pop
repz
out
cmp
jg
mov
jo
lds
test
add
jmp
sbb
jb
adc
jo
fwait
pop
jo
test
inc
leave
pop
pop
push
inc
lcall
mov
bound
jmp
mov
pop
mov
dec
mov
mov
mov
inc
mov
ret
ret
pop
hlt
fmul
push
add
jne
mov
dec
or
bound
mov
in
test
aaa
mul
mov
inc
dec
pusha
clc
sarb
std
inc
pop
sbb
fwait
cmc
pop
add
pop
mov
call
loopne
dec
jecxz
xor
dec
sub
fcompl
sbb
mov
dec
pop
pop
repnz
push
push
in
pushf
xchg
sub
xor
dec
enter
mov
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
js
pushf
adc
adc
sbb
push
aaa
into
outsl
mov
ja
clc
les
je
test
xchg
scas
sub
and
rclb
cmpsb
or
xor
push
adc
test
dec
inc
jno
jp
or
jb
sbb
fcomps
mov
push
dec
pushf
mov
repz
mov
adc
mov
push
out
jmp
dec
scas
in
jl
sbb
test
jns
jno
inc
movsl
cmpsb
add
cmp
fisttpll
cltd
mov
bound
and
lock
daa
inc
dec
and
dec
inc
dec
mov
dec
cmp
clc
jb
lahf
mov
and
mov
aam
ds
test
inc
fwait
clc
jo
push
call
dec
daa
test
fisttpl
aas
mov
ret
jne,pn
jge
lcall
ds
or
insb
in
sbb
jbe
xchg
jg
dec
pop
mov
mov
stc
jge
pop
loope
mov
cli
in
in
repnz
lcall
dec
inc
loope
lea
mov
mov
arpl
adc
scas
sub
repz
mov
sub
int3
test
nop
sbb
lahf
jecxz
leave
test
sub
push
pop
jp
or
nop
cmpsb
jmp
je
and
xchg
inc
lret
xchg
shr
fwait
mov
sub
jge
iret
call
dec
test
outsb
shlb
cmp
int
push
mov
xor
test
cmp
shl
mov
pop
aaa
mov
into
adc
sbb
sti
ss
push
jbe
das
ds
pop
add
push
scas
xor
fstp
sub
pop
jp
fstl
mov
or
jb
stos
sbb
and
jecxz
adc
addr16
jp
das
lods
dec
insb
jl
movsb
int
mov
es
sub
xor
test
nop
cmpsb
ret
adc
mov
int
jecxz
push
lds
les
gs
leave
out
cmp
or
xor
decl
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
enter
cwtl
adc
adc
or
sbb
push
pop
push
jmp
xlat
pop
in
pop
push
aas
and
xchg
push
jge
cmpb
sahf
sbb
add
popl
push
xor
mov
mov
jge
mov
dec
lods
and
push
inc
dec
xchg
adc
daa
hlt
jno
pop
das
pop
add
adc
or
movsl
outsb
repz
pop
repnz
outsl
popf
mov
mov
mov
pusha
cli
insb
xchg
sub
lds
xchg
mov
push
sbb
pop
fldenv
push
aam
enter
enter
imul
add
xor
push
or
cmp
pop
rclb
aam
fs
sub
mov
sarb
inc
and
mov
adc
sub
mov
sbb
adc
sub
mov
mov
ja
jl
fbstp
push
jmp
pop
out
in
mov
in
adc
jmp
jne
mov
dec
mov
pop
outsb
sbb
adc
loop
add
call
mov
pop
push
mov
outsl
mov
icebp
sbb
into
arpl
sub
imul
mov
dec
adc
loopne
stc
inc
mov
and
hlt
pand
mov
test
fmull
mov
fiadds
push
cmp
jmp
xor
sarl
xchg
cmp
loopne
decl
xor
xchg
pushf
adc
and
xor
xchg
test
gs
mov
xchg
mov
cwtl
mov
ficoml
or
gs
cwtl
mov
in
add
cmp
mov
int3
xlat
in
mov
pushf
pushf
jecxz
cmp
out
cld
xchg
ljmp
idiv
mov
sbb
pop
xorb
mov
mov
adc
insl
inc
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
or
enter
cmp
loope
dec
cmp
cmc
add
jnp
cs
pop
push
in
sbb
cmp
pop
sbb
aad
fistpl
daa
iret
movsb
lock
push
cmpsb
sbb
jnp
mov
inc
jo
mov
inc
sbb
mov
mov
adc
mov
add
testb
sub
mov
pop
pushf
popf
adc
push
push
cmpsl
lea
sub
mov
flds
cmc
mov
mov
mov
loope
dec
sbb
lahf
lret
negb
inc
jge
xchg
ds
rcrb
int3
cmp
mov
outsb
rcrl
jb
add
and
nop
insb
push
jg
mov
rolb
stc
scas
rcrb
jne
push
ret
iret
les
ja
out
stos
pop
mov
scas
rol
pop
push
jge
loop
push
pop
not
jb
mov
fwait
push
push
stos
or
mov
or
outsl
lea
dec
sub
sbb
ds
push
jecxz
outsl
push
jg
dec
cli
ljmp
pop
repz
je
fs
mov
imul
shl
cmp
mov
cmp
mov
jne
clc
inc
push
push
filds
notl
jbe
imul
jno
cmc
icebp
mov
stc
and
jge
cmpsl
adc
sub
popf
sub
stos
inc
adc
lcall
jg
ds
pop
add
pop
into
add
or
icebp
loope
pop
mov
faddl
addr16
mov
inc
pop
orl
mov
outsl
mov
xor
sti
sbb
jb
or
and
rcll
dec
loop
cmp
insb
xor
mov
orb
mov
negl
cmp
fisttpll
mov
bound
lds
popa
out
ret
mov
xor
jmp
movl
movl
movl
movl
lea
mov
mov
movzwl
jmp
pop
pop
lods
mov
and
pop
mov
adc
js
xchg
adc
adc
sub
dec
outsl
mov
cmc
rcll
inc
clc
sar
jge
dec
cmc
jecxz
mov
mov
out
xchg
popf
xlat
daa
cs
jns
inc
xlat
cmpsl
lret
ljmp
scas
sbb
sub
repz
add
or
jl
cmp
mov
shrb
out
mov
or
shll
inc
fbstp
and
jno
sub
push
js
lods
inc
pusha
inc
pop
push
mov
dec
andl
mov
cmp
out
xchg
andl
cltd
iret
enter
sbb
or
sti
lret
in
adc
es
add
dec
mov
cltd
inc
mov
xchg
push
sub
sbb
ret
call
aaa
lods
jnp
jmp
push
sub
fwait
adc
and
sbb
fstl
sub
jae
dec
aam
xchg
loope
push
push
xchg
and
icebp
jb
hlt
sbb
dec
ss
je
js
and
xor
or
repz
sbb
fists
decb
stc
dec
jae
inc
mov
movsb
push
mov
xor
lcall
mov
enter
lret
add
add
inc
xor
rol
inc
mov
jmp
mov
jns
sbb
xchg
nop
addl
out
aas
repz
xchg
mov
xor
out
pop
ret
in
ds
js
sub
pop
inc
stc
mov
dec
leave
das
shll
imul
mov
xchg
cmp
cmp
inc
mov
push
lahf
out
xchg
jnp
lcall
cmc
xor
push
xchg
sub
sub
jbe
mov
jb
xchg
aad
xchg
mov
jle
xor
dec
or
add
lea
enter
flds
sbb
idivl
outsb
jne
push
pushl
or
xchg
pusha
test
popf
xchg
in
fwait
mov
rcl
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
inc
or
push
mov
adc
sbb
out
scas
inc
incl
dec
sub
je
xor
dec
fwait
aaa
jbe
adc
and
dec
stos
aad
mov
movsb
adc
aad
mov
push
ds
fisttps
lock
jecxz
or
pushf
dec
mov
frstor
ja
pop
cmp
mov
inc
adc
push
jns
mov
outsb
sbb
mov
adc
popf
test
add
roll
repnz
xchg
into
ss
out
lods
add
fidivs
xchg
std
icebp
in
xchg
jae
xor
fbstp
arpl
lods
pop
xor
pop
sbb
push
or
in
inc
ljmp
inc
add
loop
movsb
jge
sub
lods
sub
dec
and
and
or
push
sbb
xor
inc
mov
fldl
ret
push
adc
jo
pop
es
pop
std
cld
push
pop
pop
daa
jge
pop
popf
add
scas
jns
fdivrl
notb
sub
das
xchg
cltd
and
daa
cmpsb
cmp
push
sahf
daa
lea
xchg
fldl
nop
lret
clc
mov
ficomps
shll
sub
inc
pushl
mov
or
add
or
mov
imul
insb
fucom
push
pop
cmc
push
jae
enter
and
xchg
cs
jmp
mov
xor
sub
clc
fists
mov
jecxz
ja
mov
cmpsl
aam
adc
mov
add
dec
or
or
lcall
lods
test
arpl
scas
xor
mov
outsl
xor
jecxz
or
imul
aas
nop
add
movsb
fsubl
mov
add
mov
xchg
xor
fistpll
or
aam
xor
faddl
les
iret
jmp
xor
push
sbb
and
and
xchg
xor
je
imul
or
decl
test
decl
pushl
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
add
mov
mov
dec
push
xchg
pop
out
mov
fldcw
repz
int
lret
dec
in
test
imul
repnz
mov
add
stos
fstpt
mov
push
adc
pop
aam
mov
jmp
sub
mov
mov
mov
outsl
cmpsl
fsubrl
popa
xchg
xor
repnz
mov
outsl
in
popf
push
cs
fsts
into
lret
add
into
mov
xchg
push
fmul
rcrl
jno
lea
pop
dec
add
fldl
adc
jecxz
jle
or
rolb
mov
mov
pushf
sub
inc
pop
fldl
and
xchg
pop
add
fdivrl
adc
jno
mov
mov
push
mov
push
sbbb
sbb
mov
dec
mov
xorb
mov
jbe
cmp
xor
inc
out
adc
repnz
or
bound
test
nop
in
mov
jb
pusha
sar
into
and
mov
cmpsb
loopne
mov
cmp
repnz
mov
cmp
mov
insl
and
inc
add
je
cmp
jb
mov
jae
xchg
and
cmp
test
sub
lret
sbb
lcall
xlat
add
pop
and
inc
hlt
dec
shrl
clc
arpl
pop
dec
loope
inc
jno
cltd
mov
jb
add
cld
rol
and
dec
sub
js
pop
add
xor
mov
jg
dec
scas
or
sahf
movsb
dec
int3
or
and
js
test
pop
add
jmp
in
mov
sub
dec
sahf
and
je
in
dec
push
cmpb
out
popf
sbb
xor
dec
sbb
ret
mov
ret
jne
dec
push
add
out
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
orl
mov
movlps
cltd
add
into
xor
mov
in
xchg
jns
mov
lods
ret
idivl
cltd
mov
or
jg
inc
push
mov
mov
inc
pop
sbb
cmc
and
mov
jmp
scas
jae
rorb
xor
ss
es
popa
sti
add
das
mov
add
mov
mov
jne
mov
push
nop
mov
movsb
in
sbb
mov
add
insb
xchg
mov
jne
stc
repz
icebp
in
sarl
lods
mov
mov
pop
xor
dec
adc
mov
pusha
repz
jp
xor
insl
jb
pop
sahf
jns
pushf
pop
adc
mov
and
jnp
xor
and
enter
lds
jle
ja
loope
and
cld
daa
mov
das
aad
cmp
repz
jl
pop
test
push
xor
sub
fwait
xchg
jg
dec
sbb
test
xor
je
inc
inc
lods
mov
fisttpll
call
or
or
xchg
data16
fld
cltd
xchg
repz
popa
iret
ret
sahf
lods
cmp
jbe
fstpl
pop
cld
sub
xor
xchg
push
stc
stc
xchg
xor
push
insb
sbb
out
cmpsl
mov
xchg
lea
dec
and
inc
cmpsl
adc
nop
xor
inc
push
mov
adc
cld
popf
or
popa
std
out
push
pushf
stos
add
pushf
in
aas
mov
add
jns
aaa
stos
push
loope
popf
ja
xchg
mov
sub
sti
sar
mov
adc
mov
sub
pop
push
int3
sahf
add
mov
fs
jb,pn
sub
sbb
inc
imul
sbb
in
push
mov
ret
mov
jmp
loop
mov
scas
cmpl
inc
add
inc
push
adc
jge
push
push
jp
fsubl
movl
fiadds
inc
out
cld
push
mov
mov
mov
xor
xor
mov
call
or
jmp
mov
or
mov
push
push
iret
into
lods
push
adcb
adc
push
xor
cwtl
jbe
xchg
dec
adc
mov
inc
int
mov
icebp
out
in
nop
pop
jl
jno
sub
jmp
pop
mov
mov
xor
bound
cli
pop
pop
cwtl
out
mov
rcrb
xor
mov
jecxz
dec
sub
and
shll
push
mov
cmp
loope
xchg
jmp
sti
icebp
pop
jg
sub
aaa
fwait
es
sti
mov
sbb
push
fidivs
dec
icebp
lock
cli
sti
mov
inc
les
inc
jle
add
mov
mov
lret
xlat
and
stc
or
cltd
gs
xchg
inc
dec
sub
xorl
sahf
adcb
inc
loope
dec
mov
inc
sbb
xchg
fdivp
inc
adc
cli
gs
imul
dec
jle
ret
pop
add
repnz
ret
sahf
pop
aas
push
std
stos
jae
stc
mov
mov
jb
sub
sbb
jno
outsb
adc
dec
cmc
and
mov
movsb
fs
rol
stc
cltd
movsb
iret
cmc
fsts
mov
stos
shrl
cmpsb
cmp
sub
imul
pop
mov
inc
jnp
or
mov
sub
movsl
lods
ret
sbb
mov
nop
lcall
mov
push
les
into
push
ss
aaa
subb
out
js
icebp
cmc
sarb
roll
outsl
jl
arpl
movsb
or
roll
sbb
xor
int3
mov
sarb
cmpsb
pop
hlt
ret
fistps
gs
out
jl
das
mov
dec
xor
inc
nop
lea
jle
sub
imull
shr
pop
pop
aaa
insb
ret
iret
fidivrl
sub
or
cmp
cmpb
out
inc
dec
sbb
xchg
pop
in
pop
push
in
xor
inc
repz
cmc
xchg
push
pop
mov
cmp
les
jl
pushl
lcall
aas
jmp
or
add
mov
mov
cmp
jmp
stos
js
pop
and
mov
lea
adc
adc
xchg
call
hlt
cld
in
mov
test
lea
cmp
pushf
push
and
int3
cwtl
mov
pop
lods
pop
xchg
cmp
sub
push
push
adc
and
divb
pusha
icebp
jo
inc
jns
xorb
shrb
cmc
addl
test
pop
or
hlt
dec
jp
dec
pop
add
mov
testb
test
mov
mov
ret
call
cwtl
mov
cmpsb
daa
movsb
fwait
jmp
cmp
cmpsl
pop
cmp
dec
xor
pop
sarl
jle
jnp
xor
fs
lods
cmp
ja
add
cmp
mov
loope
ss
insb
inc
out
jecxz
xor
sbb
jo
xchg
pusha
iret
movsb
dec
aas
cwtl
fcmovbe
push
pop
sbb
xorb
jg
arpl
xchg
icebp
test
nop
fcmovnu
pop
jb
push
jge
lret
ret
cltd
or
pop
into
sub
mov
loop
or
mov
mov
iret
lea
ja
aas
imul
jecxz
inc
mov
pop
fs
cmp
add
rcrb
pop
dec
iret
fsubrs
ljmp
mov
mov
pop
adc
sbb
xchg
xchg
gs
jnp
fldl
mov
add
mov
lcall
mov
add
ja
imull
push
and
mov
repnz
pop
adc
xorl
int
push
xor
xor
mov
test
lret
insb
dec
cmpsl
sarl
or
scas
xchg
cwtl
mov
aaa
mov
test
fcomps
mov
jle
mov
add
daa
stos
data16
mov
adcb
cld
lret
shll
mov
cmp
pop
mov
lahf
stos
insl
cmp
mov
sub
lahf
push
sbb
add
push
inc
data16
xor
aam
add
mov
mov
movzwl
xor
movzwl
sar
jmp
ds
in
mov
xchg
js
mov
stos
mov
movlps
cmpsl
outsb
pop
sbb
xor
push
and
pop
sbb
sub
fisubl
push
cwtl
push
in
iret
or
data16
inc
push
in
and
iret
std
sbb
push
cmp
and
sub
mov
jge
lcall
jmp
shll
xchg
mov
and
push
jmp
or
adc
and
dec
pusha
loop
adc
add
jmp
shld
mov
dec
das
mov
test
fisubs
jp
cmp
jbe
pop
add
cs
jecxz
imul
ja
xor
loope
xor
sbb
sbbb
das
dec
sbb
mov
popf
popa
jno
int3
push
ja,pt
rclb
cmpps
or
pop
lret
fisttps
pushf
mov
leave
mov
cmp
sti
jnp
jmp
pusha
pop
pop
xchg
shll
lods
xor
sub
push
out
dec
adc
dec
or
stc
mov
je
clc
enter
jg
mov
xor
xor
sbb
xchg
out
pushf
gs
xor
in
fs
mov
push
test
arpl
xor
push
jb
add
leave
call
xor
push
adc
pop
cli
dec
mov
jle
subl
daa
sub
fdivr
aad
push
cmp
movsb
mov
sar
mov
jg
stc
pop
aad
jecxz
sti
out
jecxz
cmpsl
or
pop
and
mov
repnz
hlt
ss
inc
ljmp
xor
cld
mov
fwait
sbb
mov
adc
call
push
pop
aas
aas
int
xchg
fists
sub
fdivr
push
pop
inc
jmp
iret
imulb
sbb
ss
ret
inc
jbe
jne
mov
pop
jle
imul
mov
clc
je
adc
ret
push
ja
sub
xor
fisubrl
enter
ficoml
gs
in
fcomps
test
jns
inc
bound
add
ja
jg
inc
sub
decl
decl
mov
mov
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
add
jb
adc
adc
xchg
pop
sbb
cs
pop
fwait
pop
lods
mov
xor
stos
imul
movsb
arpl
xchg
stos
sub
xchg
test
or
imul
xchg
adc
add
xlat
lods
pop
ret
imul
mov
cmpsl
sbb
xchg
cmp
js
hlt
cmp
arpl
mov
cli
push
xchg
lock
imul
cs
xor
daa
lret
scas
dec
push
into
push
lock
clc
pop
and
jno
push
push
xor
mov
lahf
xor
rorl
and
ret
les
lret
push
push
fwait
jg
cmp
mov
adcb
gs
xchg
gs
and
icebp
mov
xchg
and
icebp
stc
push
mov
into
cs
sbb
add
mov
sahf
add
enter
cmpsb
popf
mov
mov
pop
xor
mov
lret
iret
push
lret
cs
push
int3
in
mov
jnp
in
insl
lods
mov
sub
out
cmpsb
add
xor
jbe
and
test
push
xchg
adc
std
inc
sbb
out
les
mov
jecxz
gs
sub
sbb
call
lods
shl
sbb
scas
add
mov
pop
and
sub
movsb
adc
scas
or
lods
aas
sub
leave
movsl
mov
inc
fwait
call
sarl
jle
add
cmp
push
inc
mov
mov
sbb
dec
fistpl
lcall
xor
scas
mov
dec
shll
jb
xchg
sti
lret
ficoms
daa
jae
xchg
push
addb
jnp
add
mov
cmp
mov
or
jge
addr16
loopne
pop
das
jl
jbe
add
mov
es
fldt
push
enter
sarl
fsubp
hlt
repz
lds
jecxz
icebp
fcom
in
jbe
xor
pop
mov
lahf
decl
test
decl
pushl
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
dec
pop
punpckhdq
insb
adc
adc
push
sbb
scas
mov
xor
arpl
outsl
ficompl
lods
and
push
xchg
decb
jne
pop
lret
imul
sub
xchg
xchg
fcmovnu
cmp
and
into
leave
mov
ja
mov
inc
test
and
repnz
mov
test
into
int
fbld
add
xchg
mov
icebp
pushw
into
dec
scas
jne
hlt
xor
and
pusha
push
cmp
adc
std
xor
nop
addr16
mov
push
out
adc
xchg
jle
inc
lcall
cmp
cmp
inc
icebp
cmp
add
fsubs
bound
cmp
jo
daa
jbe
push
arpl
dec
shl
sub
scas
jb
push
int3
push
fwait
mov
pop
and
push
imul
leave
jp
dec
dec
dec
push
mov
inc
out
scas
dec
sbb
call
insl
jne
xor
jg
sub
rcrb
inc
out
pop
dec
int3
fnstcw
jo
lcall
cwtl
imul
xchg
in
outsl
adc
mov
dec
adc
ljmp
and
cmc
stos
xor
outsl
orb
pop
cli
jo
stos
loope
push
jp
data16
enter
movd
xor
adcb
lret
sti
and
sub
sub
test
dec
jae
fwait
insl
xor
jmp
repnz
decb
stos
jle
inc
jg
fsubr
loop
lds
xchg
xor
fisubs
adc
aam
sbb
sbb
jbe
mov
leave
inc
ljmp
pop
mov
out
pop
xchg
hlt
dec
mov
cli
repnz
pushl
mov
data16
out
insb
sub
xchg
jb
int
addb
ss
sbb
pushw
xor
xor
decl
mov
hlt
ds
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
repnz
push
push
push
adc
jno
es
adc
pop
mov
cmpsb
xlat
dec
sub
mov
lret
sbb
cmp
iret
daa
jne
mov
add
lret
xor
in
dec
sub
add
shlb
and
shl
inc
lds
lock
daa
bnd
mov
sarb
test
loopne
mov
pop
or
mov
lret
shr
vmovupd
sbb
mov
inc
sbb
jmp
js
sbb
push
or
test
cwtl
pop
lret
js
fstl
rorl
xchg
inc
into
xor
popa
dec
call
add
pop
sub
cmp
out
push
push
inc
sbb
mov
gs
xchg
and
cmp
push
adc
lret
adc
or
push
insl
jmp
inc
test
fstpt
add
adc
das
xchg
dec
out
cld
inc
leave
or
add
cmp
or
pop
stc
sarb
test
jns
mov
jns
daa
xchg
aam
mov
rol
mov
inc
daa
xor
push
test
mov
inc
fs
popa
push
loop
and
inc
sub
xchg
stos
insl
mov
push
lret
xchg
fdivl
adcb
xchg
mov
dec
inc
mov
movsb
dec
outsl
xchg
daa
imul
cmp
xchg
sub
mov
icebp
in
inc
cmp
or
fs
lea
js
mov
fisttps
mov
sbb
jns
inc
pushf
je
push
pop
cmp
jge
sbb
jge
aam
scas
jge
and
std
sti
std
dec
dec
jle
mov
pusha
push
xchg
mov
out
push
movb
nop
inc
mov
sub
pop
pop
dec
rcrb
push
in
mov
mov
lock
mov
roll
icebp
sbb
jg
push
jae
dec
cwtl
mov
test
decl
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
cmpb
movlps
cmp
mov
pop
in
pop
insl
mov
jne
icebp
popf
push
inc
nop
pop
mov
mov
in
ds
mov
stos
filds
push
ljmp
add
push
aas
nop
xchg
jl
andb
adc
shll
dec
test
ret
cmp
lds
pop
adc
data16
dec
push
mov
push
into
inc
pusha
cmp
jb
sbb
cmpsl
push
inc
std
pop
cmp
cmp
pusha
jg
and
push
test
push
and
shlb
jl
test
in
jecxz
fs
xchg
jmp
mov
mov
or
xor
add
ret
mov
sbbb
shrb
cmp
fcmovb
dec
xchg
mov
mov
inc
push
nop
cld
xor
push
push
push
push
das
insl
test
sar
popf
lock
insl
cmp
cli
pop
dec
adc
mov
add
in
insl
adc
dec
mov
inc
push
mov
cmp
lods
das
push
test
pop
sub
adc
dec
lret
insl
pop
fidivs
test
mov
mov
push
les
loop
push
icebp
cwtl
mov
aad
mov
mov
std
jo
pop
dec
in
dec
nop
rcrb
out
rorb
inc
imul
mov
dec
jbe
lds
cltd
out
gs
loope
add
dec
sarb
pushf
sbb
ror
inc
jb
inc
fwait
shll
mov
or
mov
icebp
pcmpeqd
lret
mov
pop
jne
sub
fstpt
btc
dec
test
fbld
cmpsb
xor
xchg
testb
xor
in
adc
lods
sub
pop
dec
jmp
sbb
ds
fwait
or
inc
pop
stos
mov
push
cwtl
ret
lods
pop
jnp
pushf
sbb
sbb
cmpsl
mov
jns
int
hlt
stos
cwtl
aaa
call
mov
mov
stos
fnstsw
call
lahf
hlt
dec
cmp
add
fcoms
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
lret
imul
aam
popf
in
lods
cld
or
scas
jge
adc
jb
sub
fwait
imul
mov
inc
stos
mov
and
sbb
stc
sub
add
adc
xchg
test
pop
out
and
cmp
adc
cld
fcoms
lret
jge
inc
nop
imul
or
cmp
adc
sub
jmp
int
push
dec
jo
cmpsl
push
push
into
or
dec
out
sar
cmp
mov
mov
xlat
pop
mov
mov
add
add
xor
mov
sbb
in
xchg
or
sub
mov
and
xor
and
into
ss
sub
mov
dec
adc
jl
xor
or
pop
pushw
lods
mov
xchg
xor
cmpsl
pusha
dec
mov
cmp
mov
cmp
in
dec
cmp
cmp
sub
lock
sbb
sbb
mov
mov
jns
cs
popa
inc
pop
cmp
inc
test
mov
xchg
sub
push
xlat
aaa
leave
sub
xchg
repz
mov
fldpi
or
pop
pusha
stos
cmc
fwait
inc
movlhps
sbb
mov
cmp
ja
pop
lret
nop
push
es
loopne
push
pusha
inc
inc
adc
push
dec
dec
out
cmc
pop
shl
dec
xchg
daa
lds
pushl
icebp
loope
mov
xchg
inc
pop
jle
aaa
sub
xchg
mov
dec
adc
pop
sub
sahf
lods
cmpsb
push
movsb
loopne
pop
cli
fisttps
inc
mov
mov
mov
fs
js
movl
insl
jecxz
das
mov
adc
dec
insl
mov
lcall
mov
imul
adc
adc
cmpsb
sbb
ret
mov
sbb
movl
sub
mov
movl
jmp
adc
add
jnp
bound
ss
mov
in
jle
pop
adc
adc
aad
mov
scas
cmp
sub
add
jo
rorb
in
int3
sub
dec
xchg
dec
add
xchg
out
stos
sbb
in
cmp
mov
insl
mov
xchg
sub
leave
or
cs
dec
jne
outsl
xor
mov
clc
fs
jae
jmp
sub
enter
jae
stc
scas
fdivrl
push
xlat
ljmp
mov
xor
faddp
sub
cmp
aad
insl
cmp
xlat
daa
push
push
xlat
pushf
jmp
fiadds
add
sbb
mov
pop
into
mov
ret
add
sub
out
lock
call
scas
filds
rcrl
aam
xor
inc
nop
sbb
and
test
cwtl
adc
add
rolb
das
or
and
mov
dec
jecxz
rcrl
push
fadd
xchg
not
mov
iret
popf
int
jae
cmp
enter
ja
fstpt
xor
mov
inc
in
pop
and
jnp
stc
mov
std
stc
xor
test
cmp
scas
stc
test
sub
iret
test
and
lods
sbb
loope
outsb
mov
ss
jno
stos
pop
jno
and
movsl
push
mov
inc
cwtl
call
or
mov
rcrl
daa
int
xorb
dec
add
js
stc
adc
mov
in
das
dec
lods
sbb
fwait
push
cltd
fs
or
dec
pushf
xchg
call
xchg
inc
lahf
cltd
dec
je
stc
or
ficompl
jmp
lock
insb
adc
mov
add
and
mov
pop
arpl
out
jl
mov
mov
loopne
push
push
in
stos
or
cmp
and
lret
mov
mov
sub
ret
xchg
cwtl
ret
dec
cmp
cmc
sub
xlat
pop
mov
sub
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
icebp
test
adc
adc
sub
fstpl
dec
xor
cwtl
aaa
pop
jecxz
dec
fbstp
sbb
iret
rclb
arpl
fwait
jno
pop
inc
ss
or
adcl
test
rolb
xor
or
movsl
cmp
pop
mov
fadd
mov
dec
pushf
shrl
mov
test
ja
pop
icebp
idivl
orb
int3
stc
cs
in
jl
pushl
repz
add
sti
push
out
pushf
aaa
lret
push
mov
jge
adc
pop
add
adc
mov
sbb
xchg
ss
inc
xchg
mov
sbb
sub
and
xchg
out
sbb
dec
push
jns
jg
xor
stc
movsb
mov
and
push
das
lea
bound
add
fidivrs
add
mov
popa
les
sbb
iret
mov
mov
hlt
xchg
cli
nop
mov
cmp
pop
out
fisttpll
push
aaa
xor
in
adc
decb
insb
int3
testl
push
mov
push
aam
pop
andl
add
and
xchg
adc
inc
jp
jns
adc
and
push
xor
mov
mov
mov
pop
and
hlt
test
or
sub
adcb
xchg
lret
jle
scas
push
cwtl
imul
rcrb
push
mov
cmp
fldcw
lock
stos
rol
mov
leave
pop
jnp
hlt
adc
inc
jbe
test
and
or
cmp
mov
jg
mov
cli
mov
sub
mov
leave
sub
repz
push
sbb
clc
stos
mov
mov
dec
xchg
divl
pushl
sub
stos
test
mov
imul
xchg
rorl
xchg
xlat
inc
dec
xor
mov
pusha
dec
xchg
xorl
cmpsb
and
mov
lods
inc
mov
iret
aas
push
jnp
leave
out
nop
aas
mov
xchg
sub
adc
call
sub
mov
js
loopne
pop
aas
insl
and
test
jae
xchg
mov
aas
push
push
and
fisubs
jl
sti
in
sti
mov
jno
sub
inc
mov
or
fs
dec
andb
and
popa
and
xorb
fiadds
mov
push
les
xchg
outsb
std
sbb
mov
test
push
xchg
pop
xchg
out
or
out
pop
sub
js
push
xor
xor
stos
dec
pop
divl
enter
imul
arpl
jbe
xchg
jle
std
pop
in
jbe
jo
pop
jbe
adc
mov
push
jle
cvttps2pi
cwtl
addb
roll
or
dec
add
dec
lds
jle
repz
pop
test
mov
xchg
in
jle
sahf
ret
cmp
xchg
pop
ds
adc
filds
sbb
rol
push
in
add
adc
add
test
add
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
insb
push
adc
adc
mov
subl
add
xlat
ja
adc
pop
sbb
push
jmp
aam
pop
ss
icebp
sub
sbb
fs
and
dec
pop
into
mov
lods
lods
mov
stos
mulb
jns
repz
push
sbb
or
xchg
mov
jno
arpl
jge
jl
out
aas
xchg
mov
jmp
push
leave
out
sub
cmpsb
mov
shl
mov
lods
jne
push
jns
sbb
xor
mov
es
aas
cmpsb
or
cmp
sbb
mov
mov
pop
push
ret
in
push
pop
jno
sub
push
xchg
xchg
repz
xor
mov
ss
sbb
inc
inc
fldz
outsl
ljmp
jb
sbb
cmp
xchg
push
jmp
mov
lret
movsl
cld
jge
dec
dec
sub
cs
and
notl
pop
pop
and
cmpsb
fmull
xchg
mov
leave
pushl
pop
loopne
outsl
xchg
mov
jbe
je
sbb
jbe
or
das
jg
clc
jecxz
mov
and
shr
sbb
xlat
popa
sbb
ret
xor
shrb
test
ficomps
iret
pop
stos
cmpsb
aas
leave
aam
cmc
push
jne
xorl
popa
xchg
shll
into
jg
adc
adc
aaa
xchg
pop
into
notb
pop
stos
dec
xor
pop
sbb
dec
js
repz
popf
push
pop
inc
mov
cmpsb
pop
adcb
xor
and
in
mov
push
inc
fistpl
push
hlt
imul
fldl
xchg
mov
ret
pop
lahf
xor
mov
rorb
push
int
jmp
jb
cld
enter
cmp
repnz
fistps
cmpsb
cli
pop
add
cld
divb
aas
aad
ret
cmc
fsubl
addl
add
iret
add
mov
push
idiv
sbb
movsb
sub
imul
clc
repnz
dec
mov
fdecstp
push
test
or
xchg
jmp
mov
loopne
shlb
fs
pushl
icebp
jne
xorb
inc
or
mov
cmp
ret
add
mov
mov
or
ret
es
outsb
aas
or
in
rcll
mov
rcrb
add
outsb
adc
rclb
xchg
ja
out
or
adc
js
idivb
sub
dec
mov
jb
popl
ffreep
scas
in
jl
xchg
roll
out
xorb
mov
mov
push
and
enter
push
pop
inc
enter
jnp
subl
push
push
xchg
std
sahf
enter
ret
daa
push
insl
or
out
adc
cmc
sub
cs
pop
xor
aam
rorl
loop
inc
in
and
pop
dec
mov
pop
ficomps
sahf
jg
lcall
out
mov
jecxz
xchg
pop
adc
popa
add
push
sbb
or
push
mov
adcb
and
outsl
and
ret
inc
aad
shl
out
popa
push
cld
pop
dec
out
sub
lods
push
cmpsl
xchg
mov
movsb
rcrb
mov
not
mov
pop
movl
pop
pop
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
