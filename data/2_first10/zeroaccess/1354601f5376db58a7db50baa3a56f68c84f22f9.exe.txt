push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
subl
mov
sub
mov
xor
movl
add
movl
sbb
mov
push
movzbl
sbb
mov
push
mov
xor
push
or
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
movl
movl
movl
orl
movl
mov
subl
xor
add
mov
sbbl
movl
movb
mov
xorl
xor
add
jmp
jb
fsubs
lock
push
in
or
jb
jo
jle
jle
jg
jle
xlat
cmp
rol
pop
add
add
add
xor
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
bound
insl
mov
xchg
xor
adc
xchg
fistl
pop
sbb
test
jnp
push
xor
jbe
sbb
jg
inc
xor
lret
data16
cmpsl
scas
cmp
scas
int
cmc
cmp
cmpsb
jmp
adc
js
mov
push
or
mov
scas
out
cmp
xor
dec
je
cmp
xchg
fsubs
test
xchg
push
arpl
mov
rcl
out
xchg
loopnew
repz
push
test
pop
or
movsb
adc
xchg
call
mov
push
inc
daa
mov
enter
out
loope
lea
hlt
sti
cmpxchg
inc
pushf
xchg
push
test
dec
gs
cmp
test
cmp
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
orl
jmp
dec
push
push
push
arpl
jle
cli
jg
jle
enter
pop
dec
fidivrs
sbb
jg
xorb
xchg
xchg
shrb
inc
pushf
pop
aad
push
inc
sub
cmc
and
inc
pusha
out
sub
inc
dec
jmp
add
out
incb
xchg
cmpl
incl
ret
inc
pushf
sub
pop
les
inc
adc
dec
xor
adc
lods
clc
mov
test
sub
inc
decb
cmp
lea
cmpsl
push
sub
add
stc
std
jno
stos
out
mov
lods
stos
fucom
rorb
mov
inc
imul
pop
cmc
lods
mov
enter
addl
inc
es
push
dec
out
rcll
or
aaa
iret
cmp
in
lock
in
dec
sub
xor
fbstp
ror
daa
mov
jecxz
test
rorb
xor
scas
mov
cmp
popf
fwait
outsl
mov
test
out
inc
push
addr16
push
cli
fdivl
scas
shll
lret
jnp
sbb
or
imul
sbb
xchg
jecxz
fsubr
sub
jmp
aas
fiaddl
push
jmp
test
mov
sahf
popf
xor
sbb
mov
pop
lods
xorl
jo
es
in
addr16
sbb
xor
neg
jmp
cli
fcompl
jno
cmp
jns
jge
jle
jg
jle
je
ds
dec
xor
es
inc
adc
jecxz
in
dec
sub
xchg
or
inc
push
js
jg
and
enter
jg
das
sbb
mov
repnz
sbb
add
sbb
xor
movsl
sbb
jecxz
sbb
mov
and
fildl
mov
dec
mov
nop
dec
subb
in
sub
aam
push
ja
sbb
fimuls
int3
mov
cmc
ljmp
lret
fisubs
std
test
fs
cmp
jb
les
hlt
inc
lcall
pop
addr16
fldenv
sbb
pop
mov
ljmp
scas
mov
fadd
jnp
data16
push
nop
and
xchg
and
mov
and
pop
xchg
mov
dec
xchg
movsb
imul
mov
cs
dec
add
mov
add
in
lods
mov
pushl
fidivrl
fs
icebp
stos
inc
fidivs
flds
lea
insl
push
mov
xor
in
and
std
mov
jmp
xchg
or
push
xchg
add
xor
sub
or
mov
xor
popf
fisubs
sbb
jno
and
adc
sbb
cmp
mov
fdivp
movsl
push
dec
push
and
lcall
cmp
mov
mov
xor
sbb
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
sbbl
add
decl
mov
lea
mov
movzwl
and
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
or
out
jecxz
icebp
int
add
sbb
jle
jg
jle
test
mov
adc
fldcw
cmp
sbb
sahf
movsb
dec
jne
jns
add
je
and
outsb
mov
int3
shlb
sub
fbstp
push
sbb
int3
ret
in
mov
xor
xchg
pop
frstor
stos
cli
dec
mov
pop
xlat
popa
lock
cmp
sub
leave
ret
sarl
mov
xchg
aad
push
jge
push
fs
sub
xchg
fiadds
jmp
mov
mov
sub
xchg
cmc
xchg
add
push
popf
daa
sbb
test
aaa
inc
pushw
daa
stc
mov
jnp
push
pusha
daa
and
jo
push
sub
popf
push
call
cmpsl
pop
stc
dec
outsl
dec
shrb
mov
inc
out
push
mov
subb
pop
mov
dec
mov
sub
xchg
nop
sbb
flds
iret
or
xor
das
xor
out
fs
sarl
movsl
aaa
lret
mov
addr16
push
dec
push
mov
pop
outsl
lret
call
jp
incl
pop
mov
mov
xor
push
addr16
jnp
sbb
mov
int3
mov
mov
push
and
jle
mov
rcrl
pop
add
pop
sub
sbb
xchg
andl
cmc
lahf
rorb
mov
fisttpll
jno
test
and
outsb
insb
mov
dec
mov
jmp
xchg
mov
push
jo
adc
dec
leave
mov
push
js
jle
jg
jle
mov
jne
out
mov
sub
les
popa
mov
mov
in
jle
cmp
data16
inc
into
scas
cli
push
popf
xchg
call
and
dec
sub
jnp
in
and
push
jb
and
mov
jne
adc
adc
mov
sbb
in
mov
fstl
pop
int
or
lret
mov
xchg
sbb
dec
rclb
imul
sub
jns
inc
das
sub
mov
cmpsb
cmp
test
je
mov
lods
and
nop
pop
sub
ret
xor
aas
lds
inc
mov
jbe
or
inc
popa
sub
sub
ret
mov
inc
mov
jmp
fxch
cmc
gs
add
jno
cwtl
addr16
cmp
sarb
pushf
stc
std
mov
push
xchg
dec
loop
jb
pop
xor
into
negb
cs
cli
dec
ja
sarb
cmp
fsubp
shll
into
pop
repz
addr16
cmpb
enter
pop
push
lret
mov
addl
pop
lahf
jbe
adc
js
insb
mov
mov
ret
jp
sbb
rcl
dec
push
add
cmp
cmp
jns
testl
xchg
push
adc
jno
mov
add
in
jb
stos
xor
push
cmp
mov
dec
clc
xor
add
mov
mov
mov
xor
jmp
pop
xor
mov
mov
mov
lahf
cmc
xchg
clc
mov
repnz
jle
jg
jle
xchg
mov
mov
jecxz
jno
ret
fwait
pop
adc
insl
ret
lret
pop
jl
repnz
dec
or
js
andb
cltd
jmp
xor
popa
inc
xor
ret
test
mov
insb
inc
inc
lock
stos
rcl
mov
idivb
push
cltd
pop
jmp
jae
push
das
add
aad
mov
repz
test
sbb
cltd
lcall
or
sahf
imul
ret
repz
and
mov
inc
mov
jp
popf
xchg
aaa
daa
mov
lds
rclb
lahf
mov
sbb
pop
mov
cmp
lea
inc
rcrl
mov
lahf
in
jge
filds
inc
mov
adc
cmpsl
in
mov
loopne
mov
out
inc
je
push
mov
inc
and
inc
leave
sar
sub
push
ret
mov
shl
sbb
insl
shll
inc
jae
mov
xor
cli
add
or
mov
mov
cmpsb
adc
inc
push
ds
icebp
fwait
xchg
jbe
jg
cmp
enter
sub
mov
pop
in
pop
std
enter
dec
mov
push
mov
inc
in
or
lret
pop
imul
sbb
mov
sarl
jne
xchg
jns
test
in
sbb
jne
iret
pop
sub
test
stc
cmpsl
int
das
outsl
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
les
loopne
mov
xor
pop
push
pop
jle
cli
jg
jle
push
cmp
jmp
pusha
jl
push
adc
sahf
ror
jmp
test
mov
push
xchg
in
xchg
pop
filds
js
and
aam
push
outsb
pop
mov
std
sub
mov
inc
mov
icebp
aad
xor
iret
jle
and
ret
mov
shlb
test
sti
js
lret
dec
and
push
aas
or
push
cwtl
pop
into
cmp
mov
inc
sbb
scas
mov
xchg
mov
add
mov
clc
push
xchg
hlt
pop
jnp
xchg
inc
jg
aas
test
loope
out
ret
test
jle
clc
enter
sub
sub
or
fdiv
mov
dec
test
repnz
imul
out
and
mov
rclb
add
pop
pushf
nop
jl
cld
outsb
daa
push
cmpl
stos
xchg
jns
pushf
jle
int3
cwtl
shlb
mov
lret
jnp
lods
popf
js
les
imul
es
xchg
mov
push
inc
pop
push
pop
add
push
jb
cwtl
adc
xor
jns
test
push
or
popa
out
push
lods
lea
js
sub
and
pushf
mov
ret
push
xor
pop
or
movsb
jg
adc
cmpsl
test
test
int
cmp
push
add
adc
or
test
add
lea
push
mov
xor
add
jmp
pop
and
aas
jno
imul
xchg
add
jle
jg
jle
les
ret
sub
out
in
pop
pop
call
icebp
lahf
jecxz
dec
mov
ret
stc
and
lret
imul
int
das
xchg
sti
pop
pop
mov
mov
jno
mov
adc
lret
mov
test
ret
ficoml
out
jmp
pop
scas
add
mov
shlb
int
in
lcall
inc
leave
jbe
push
jno
and
scas
imul
dec
lds
mov
stos
imul
fmull
pop
mov
mov
push
cmpb
repnz
fisttps
lods
mov
insb
xchg
jns
add
pusha
and
in
mov
sub
push
xor
jb
sbb
mov
ja
sbb
dec
lock
arpl
or
dec
cli
movsl
push
data16
lcall
and
cmpsl
dec
add
and
sarb
mov
nop
sbb
stos
call
and
jle
enter
rcrb
pusha
mov
inc
or
push
dec
std
inc
mov
idivl
inc
inc
add
in
push
jg
jmp
scas
popa
or
fldenv
cmp
sub
push
shlb
sbb
out
add
int
scas
inc
cmp
adc
mov
mov
sbb
stos
movsb
push
mov
add
jmp
cmc
dec
and
jno
push
mov
loop
lds
add
cli
jg
jle
lods
ror
mov
jno
mov
outsl
pop
roll
mov
in
mov
clc
lea
into
bsr
inc
push
sub
add
out
lcall
push
clc
int3
ret
cmp
mov
push
out
jbe
jo
or
cltd
popf
pop
inc
dec
sbb
xchg
in
mov
scas
icebp
xor
xchg
or
fsts
xchg
out
lahf
sbb
aam
inc
stos
adcb
mov
mov
sbb
lcall
aas
popa
cmp
push
push
sbb
pushf
and
add
cmp
subb
sahf
jns
mov
test
inc
xor
mov
mov
adc
aam
mov
and
in
stc
push
push
popf
mov
add
mov
jge
xor
popl
xchg
pop
lds
jae
push
pop
test
insl
mov
push
in
rcr
cmp
leave
or
xchg
inc
cmp
jg
call
xchg
test
sub
mov
rcrl
mov
mov
mov
out
icebp
mov
mov
rolb
rorl
cmpsl
insb
adc
push
and
sahf
jl
repnz
test
cwtl
ret
push
shlb
insl
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
bound
fadds
int
std
lahf
lcall
jle
cmp
nop
add
je
sub
rolb
ficoml
lds
jo
popf
xor
inc
mov
adc
lret
test
xor
lds
adc
out
addr16
imul
scas
fnstsw
outsl
sbb
in
inc
inc
out
and
fiaddl
mov
mov
sbb
rcll
fdivr
bound
dec
push
adc
jge
sbb
vmulsd
loope
fwait
pop
dec
mov
rorb
cmp
int3
or
ret
pop
leave
cmp
push
loopne
xor
mov
and
mov
arpl
mov
out
mov
sbb
gs
add
sub
or
jl
push
inc
jae
xchg
or
arpl
add
or
lea
fldenv
popa
xchg
imul
or
mov
xchg
imul
sbb
dec
stc
xchg
pop
and
jle
fdivp
ret
fsts
in
imul
mov
cmp
fldcw
pop
jle
sbb
lods
add
repz
mov
jbe
je
push
cmpsb
repnz
sahf
sti
out
pop
mov
pop
jno
push
pushf
cmp
sub
pop
cmp
dec
adc
mov
test
or
movsb
add
inc
lock
mov
mov
mov
mov
mov
jmp
push
shlb
push
stos
rol
sub
jle
cli
jg
jle
movsl
xor
cwtl
movsl
sub
sbb
and
shll
mov
cmc
idivl
sbb
mov
mov
loope
loope
pop
test
repz
sub
iret
ljmp
or
ljmp
jg
mov
clc
jno
xchg
lcall
fisubs
lcall
mov
adc
loop
xor
dec
addr16
dec
lock
and
mov
push
loopne
sub
dec
pop
sti
arpl
sub
jl
mov
adc
cmp
push
fs
insb
inc
inc
add
ret
adc
sbb
or
arpl
sub
xchg
cmp
es
pusha
adc
hlt
add
fsub
das
cmp
add
ss
hlt
in
xchg
test
mov
fwait
out
insl
and
add
test
add
leave
inc
lret
das
stos
lea
sbb
and
scas
mov
fsts
and
test
pop
loopne
xchg
adc
loope
shrl
imul
sub
loope
int
imul
sub
call
mov
fnstenv
out
leave
popa
imul
ds
mov
testl
fsubr
mov
test
fidivrl
lret
test
mov
push
jnp
pop
xor
dec
bound
das
lods
sbb
fwait
jb
add
mov
mov
mov
mov
mov
mov
mov
mov
jmp
les
rorl
sub
push
jle
cli
jg
jle
mov
imul
xor
push
jecxz
mov
add
pop
xor
out
and
mov
jbe
mov
cld
js
or
movsb
dec
fs
mov
xchg
jne
es
test
mov
and
cmp
imul
aaa
pop
xor
adc
or
out
xchg
or
push
in
aam
mov
lods
mov
inc
pop
sbb
cld
dec
xor
outsb
arpl
rol
mov
lret
pop
mov
notb
ret
nopl
popf
nop
mov
movsl
pop
fidivrs
ror
sbb
mov
enter
shl
fmul
mov
sti
and
or
fdivs
fdivl
push
inc
test
add
push
mov
lcall
mov
jmp
fwait
push
lahf
jno
stos
pop
sarb
lods
jge
mov
mov
xchg
shl
movsb
and
sub
hlt
lods
push
push
arpl
mov
push
mov
sbb
pop
mov
adc
inc
or
sti
cmc
xor
scas
repnz
icebp
or
and
scas
mov
add
inc
pop
shlb
popa
dec
xchg
xchg
in
inc
mov
pop
cmp
testl
adc
mov
movsl
inc
flds
out
inc
mov
mov
mov
mov
mov
test
jmp
inc
push
jnp
or
push
adc
nop
dec
fwait
mov
jle
cli
jg
jle
fiaddl
mov
dec
arpl
stos
out
sub
movsb
mov
dec
or
xor
std
and
sbb
xor
subb
xor
sbb
push
nop
mov
aaa
pusha
mov
pusha
dec
xchg
inc
out
xchg
pop
sub
leave
or
pop
mov
loopne
mov
mov
xlat
int
or
sbb
jne
addr16
js
mov
icebp
aad
push
add
sahf
mov
jbe
lods
out
cmp
and
outsl
adc
bound
jbe
lahf
mov
or
inc
aaa
call
add
aam
bound
mov
xor
aad
jo
cmpsb
mov
push
fwait
pop
aas
lods
lret
mov
adc
jecxz
mov
mov
adc
push
push
repz
outsl
pop
shlb
test
jno
leave
aam
mov
scas
cmp
pop
les
mov
dec
lret
mov
sbb
mov
mov
or
inc
lcall
fistps
mov
enter
mov
dec
rolb
stos
inc
mov
jg
lods
xor
sub
cld
leave
out
data16
clc
aad
or
add
fwait
pop
in
sub
xchg
and
pop
movsl
fwait
insb
jmp
or
push
mov
nop
dec
movsb
int3
loope
jo
inc
aam
test
add
add
add
jmp
or
lret
jecxz
jecxz
icebp
loop
mov
dec
push
shrl
jg
jle
or
loopne
and
xor
mov
ret
adc
enter
xor
mov
cwtl
xor
sub
insl
mov
adc
ds
rclb
dec
adc
cwtl
rorb
push
pop
xor
fbld
lret
mov
and
xor
xor
and
pop
sub
mov
jne
insl
inc
or
int3
ss
xor
idiv
lcall
iret
jp
dec
fisubrs
bound
aaa
or
rcl
stos
outsl
adc
mov
xchg
daa
jecxz
mov
cmpsl
out
sahf
jnp
aaa
testb
jbe
cltd
jbe
ss
fisubrs
dec
mov
mov
adc
cmp
insb
push
sub
pop
mov
and
lret
xchg
int3
cmp
push
cmp
sub
sbb
popa
ret
shlb
xor
aam
cmp
sub
inc
std
inc
xchg
imul
mov
mov
dec
sub
add
adc
pop
int3
movsb
rcrl
mov
lret
cltd
cltd
pop
fs
or
and
mov
jl
dec
cmpl
inc
lahf
aad
in
xchg
in
cld
faddl
sub
mov
ja
jns
pusha
lahf
ret
dec
sub
adcl
mov
and
ljmp
xor
and
sub
in
xor
add
add
call
inc
in
movb
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
add
inc
dec
aas
cmp
out
pop
inc
mov
or
cli
jg
jle
pop
popf
cmp
movsb
inc
in
pop
and
in
push
int3
jns
cmp
leave
call
and
or
sub
outsb
jb
jns
dec
xor
and
ja
xchg
in
repnz
add
cld
fsub
scas
test
dec
dec
pusha
or
movl
add
pop
pushf
mov
lea
popl
stos
adc
enter
mov
data16
mov
ret
js
cmp
cs
xorl
mov
xor
cs
pop
stc
adc
mov
push
inc
pop
dec
iret
or
mov
xor
popa
pop
and
stos
inc
mov
inc
mov
mov
inc
push
cmp
insl
push
idivl
rorl
lret
xchg
push
dec
inc
in
cltd
push
cmp
dec
or
imul
jmp
jle
push
out
xchg
sbb
inc
ds
mov
es
movsb
lret
jecxz
cltd
or
and
lret
push
aas
add
xchg
mov
push
add
xor
adc
and
push
mov
test
icebp
mov
push
xlat
insl
dec
fistpll
nop
fwait
sbb
out
in
cmp
inc
popf
ljmp
lods
push
sbb
ds
xor
sub
outsl
add
push
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
jmp
jmp
xchg
push
arpl
nop
push
rorb
jmp
mov
jle
cli
jg
jle
les
adc
dec
add
push
xlat
fiaddl
scas
fisubrl
sub
push
leave
leave
into
or
add
out
stc
out
js
inc
leave
push
test
mov
hlt
fcomps
dec
les
and
push
ret
mov
xchg
lret
xor
mov
add
cmp
popa
xor
mov
dec
add
inc
push
add
test
mov
pop
push
outsb
fs
push
int
sbb
xchg
addb
out
ja
lock
xor
fs
leave
and
cmp
inc
or
data16
push
mov
fs
push
loope
cmpl
xchg
xlat
loop
aaa
xor
sahf
out
jno
ds
xchg
cmp
sar
es
adc
mov
jl
sub
mov
sub
pop
pop
mov
jns
loope
pop
lds
icebp
add
push
je
pop
sbb
push
insb
orl
shrb
inc
push
aam
cs
nop
cwtl
or
pop
jle
lea
cmpsb
jns
or
cmp
jns
fwait
xor
adcl
int3
cmp
adcb
and
cmp
pop
mov
lcall
les
mov
loop
add
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
push
pop
jmp
cmc
mov
icebp
insl
sbb
aas
mov
push
jle
cli
jg
jle
icebp
adc
push
call
hlt
push
push
pop
mov
out
insl
sahf
cs
push
inc
pop
fistl
mov
mov
jb
push
push
push
adc
insl
sbb
push
iret
xor
test
outsb
pop
jbe
gs
in
loop
xchg
jp
movsb
mov
adc
in
mov
xlat
dec
mov
push
mov
jle
and
shr
mov
sub
mov
movsl
sub
imul
fistpl
bound
mov
lods
cltd
int
lock
cwtl
xchg
xchg
inc
movsb
xchg
aas
imul
loop
test
shlb
sbb
faddl
cmp
inc
icebp
add
outsb
mov
insb
pusha
imul
insl
xlat
mov
test
push
jne
mov
out
lahf
xor
hlt
dec
cmp
insl
insl
jmp
loope
mov
sahf
movsb
add
insb
jmp
insb
jg
pop
enter
dec
and
mov
dec
pop
jne
and
icebp
xchg
sahf
fstpt
inc
scas
dec
lock
xor
lds
cmc
ja
pop
mov
jo
adc
mov
addb
out
in
dec
iret
mov
jnp
xor
sub
test
data16
dec
and
ret
mov
orb
inc
pusha
insb
xor
sbb
lods
enter
adc
add
shl
call
mov
mov
add
pop
jmp
add
mov
adcb
dec
mov
jg
jle
add
stc
incl
jo
es
hlt
rcrl
ds
je
mov
inc
xorb
test
shlb
xchg
repz
push
add
rcrb
icebp
mov
adc
jb
or
mov
enter
in
lds
iret
scas
push
jl
inc
loop
xor
push
jecxz
test
cmpsb
sbb
jecxz
std
jp
jno
jno
sbb
fidivrl
mov
xor
lds
cmp
sahf
imul
and
mov
xchg
aam
push
stos
adc
lea
adcl
sbb
mov
popf
pop
iret
xchg
add
add
push
repnz
pusha
out
dec
out
cmc
push
dec
leave
lods
pushf
fmull
inc
mov
lahf
repz
mov
stc
xchg
stos
pop
and
mov
mov
jp
adc
push
adc
imul
xor
dec
dec
pop
lods
add
in
fimull
add
jle
clc
cmc
leave
push
jns
and
insb
inc
sub
push
dec
mov
and
enter
lret
xor
das
push
nop
int3
add
fldt
shll
add
sbb
insl
add
push
xorb
aad
loopne
insb
sbb
jg
push
cmp
adc
mov
repnz
and
pop
jg
cmova
pop
js
jb
xchg
or
sti
les
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
push
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
not
mov
xorl
mov
sbbl
movl
mov
add
movl
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
decl
mov
xor
mov
mov
sub
imul
mov
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
not
mov
not
movl
movl
mov
adc
movl
adc
movl
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
and
jmp
sbb
add
lock
icebp
mov
xor
adc
jle
mull
jns
addr16
cmp
push
inc
incb
data16
mov
or
loop
mov
jge
push
sub
movsl
xor
nop
xchg
ljmp
lods
cmpsl
outsb
cli
out
stos
inc
add
inc
adc
mov
jae
out
pusha
aad
cmpsl
mov
mov
outsl
out
jecxz
inc
rol
jmp
cmpsl
add
dec
lret
cltd
add
cld
dec
and
lahf
mov
and
mov
push
pop
ss
fidivs
outsb
mov
mov
std
andb
or
mov
xchg
dec
cltd
les
in
pop
mov
aas
in
inc
in
cmp
mov
test
daa
imul
push
int
xor
imul
and
mov
pop
jnp
adc
int3
fadds
aam
outsl
out
inc
mov
sti
addr16
and
xchg
add
ficomps
pop
test
xor
pop
into
out
inc
jb
add
dec
in
pop
loopne
dec
lock
xchg
dec
inc
in
data16
iret
popf
jg
hlt
int3
outsb
and
inc
adc
mov
dec
mov
lcall
pop
add
jnp
sbb
dec
mov
stos
push
subl
mov
mov
insb
xchg
pop
stos
and
into
push
push
lea
je
loopne
add
cli
cmpsl
clc
jg
mov
ret
fcmovb
out
ljmp
lods
push
or
leave
test
push
and
xchg
dec
repnz
hlt
mov
std
loope
push
adc
addl
inc
add
sub
outsl
ljmp
test
cltd
mull
jl
xor
in
mov
hlt
lds
pop
adcb
lret
mov
mov
jl
mov
jo
or
mov
repnz
or
jae
xchg
in
fcomps
inc
jae
inc
or
sub
es
aad
test
push
bound
pop
mov
jne
in
cmp
xchg
jb
mov
bound
jmp
aas
stos
lods
pop
imull
das
jge
jp
xchg
call
fbstp
adc
pop
inc
cli
xchg
out
pusha
std
das
int
imul
std
test
mov
scas
or
sti
nop
movsb
mov
imul
scas
test
push
push
inc
sbbb
cs
imul
push
cltd
imul
and
sarl
jae
sub
xchg
stc
popa
orl
popa
jb
add
mov
into
aad
add
jl
jecxz
nop
mov
inc
les
test
inc
add
stos
ss
add
rolb
add
add
add
incl
cmp
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
subl
add
movl
cmp
movl
je
movl
push
jmp
xorl
mov
sub
mov
sub
xor
mov
xorl
xor
movl
add
cmp
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
negl
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
add
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
pop
cli
mov
jno
gs
or
scas
loopne
sbb
jle
pop
jl
jle
pop
and
pop
idivb
sub
int
mov
mov
sub
xor
xchg
push
test
in
out
sub
mov
xor
popa
out
pop
push
cmc
inc
lahf
shl
incb
push
das
fs
jmp
cmp
add
rolb
enter
clc
sets
cmp
pop
xor
xchg
mov
fwait
xor
xchg
pop
data16
sti
sbb
jae,pn
dec
in
popf
mov
jne
adc
insb
rcr
adc
or
inc
out
dec
daa
cmp
ljmp
outsb
mov
js
fistps
hlt
push
cs
enter
mov
jg
or
pop
subb
jle
ljmp
out
jp
lods
or
mov
addl
push
lock
push
push
add
and
jno
cli
push
rcrb
cmp
or
mov
ret
dec
movsl
mov
adc
fiadds
lcall
gs
ss
orb
aam
push
cmpsb
adc
or
jl
test
xchg
cmp
dec
stos
mov
cmp
sub
jecxz
cs
adc
fnsave
adc
mov
sbb
add
imul
shlb
shlb
shlb
aaa
imul
adc
push
lret
jns
pop
xor
imul
in
sbb
and
xor
les
pop
test
fistl
pop
mov
mov
cmp
jns
addr16
sbb
push
sub
push
mov
stos
cmp
add
push
jle
mov
or
repz
lock
ljmp
sub
jg
mov
inc
jle
bound
in
pop
pop
push
in
add
or
loopne
dec
std
and
xor
xor
data16
push
mov
and
and
xchg
cld
loop
jmp
sbb
jbe
cmpsb
jecxz
push
add
mov
lcall
aad
mov
pusha
xchg
push
mov
sbb
cmp
jne
inc
loopne
aam
repz
sbb
add
dec
rolb
popf
add
aaa
mov
test
mov
jbe
cmp
mov
andb
cmc
aad
scas
add
pop
cmp
mov
fs
xor
sub
jmp
cmp
dec
arpl
fbld
out
and
mov
xor
enter
xchg
pop
lock
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
mov
xchg
xorb
jno
cs
fsubrl
jle
jl
jle
dec
aam
mov
or
or
popf
leave
or
jmp
xor
es
cs
dec
cli
sub
or
icebp
push
ljmp
inc
xchg
jl
test
lods
jo
out
dec
add
dec
xor
jge
jmp
bound
std
mov
jp
int3
push
stc
insl
mov
jmp
adc
xor
mov
jp
jl
push
movsb
shrb
add
addb
nop
pop
xchg
xchg
in
pop
scas
inc
ret
fistps
rorl
sub
cmpsb
push
fnstcw
mov
xchg
popa
or
and
fstp
xor
aaa
pop
iret
outsb
jae
xchg
in
sar
mov
xchg
dec
iret
jl
mov
lret
pop
inc
dec
xchg
cmp
jno
pusha
or
leave
push
test
stos
push
js
jl
inc
dec
xchg
arpl
stos
ffreep
in
mov
or
cmp
sub
cld
jl
inc
or
out
pop
ss
xor
jle
jo
aas
dec
mov
aas
push
inc
push
outsb
pop
xchg
add
es
fdivs
jno
sub
mov
lds
pop
std
sub
inc
imul
pop
sub
outsl
aam
fcomp
jae
push
cmp
sahf
cmp
inc
sarl
scas
add
rcrb
inc
adc
xor
inc
push
roll
mov
aaa
jg
movsb
cli
jno
mov
jge
and
add
sbbl
scas
jg
cmp
into
push
fistl
sub
cmpsl
xor
out
ret
loopne
ret
lcall
mov
daa
or
xor
mov
mov
add
nop
lahf
mov
pop
sub
push
stos
push
dec
in
jle
mov
push
js
leave
pop
out
int
divl
mov
aad
jmp
notb
push
cwtl
aas
pop
cwtl
jle
sbb
inc
call
sub
and
jmp
mov
push
ds
adc
sbbb
ljmp
push
repnz
loopne
adc
clc
dec
mov
daa
fstpt
xchg
or
or
hlt
outsb
scas
cmp
sbb
test
sub
sbb
adc
aad
jg
push
mov
cs
sbb
pop
lock
aad
inc
inc
nop
sub
pop
pop
ds
or
and
cmp
add
out
jnp
xchg
mov
sub
out
pop
fistpl
and
movsb
jbe
push
jne
loop
sahf
xchg
inc
pop
cmc
or
in
scas
mov
inc
sub
inc
loope
xchg
xor
lock
mov
sbb
adc
push
inc
mov
lret
dec
pop
adc
or
inc
es
jne
dec
xchg
push
rolb
xchg
pushf
dec
dec
daa
pushf
enter
fimull
add
add
mov
mov
jmp
mov
aaa
or
mov
subl
xor
and
jle
jl
jle
mov
xchg
jo
and
insb
in
int
dec
cmp
js
push
insb
or
stos
cld
mov
lahf
shr
test
mov
scas
sbb
adc
pop
imul
fisubl
pop
xchg
js
jno
xchg
pop
pop
cmc
mov
mov
fsub
test
cld
xchg
out
jb
mov
gs
pop
sahf
data16
loop
insb
sub
inc
repnz
jns
dec
adc
ss
movsl
cmp
xchg
addr16
cld
je
lea
imul
mov
pushf
mov
mov
stos
imulb
out
xor
dec
aad
jns
mov
pop
shll
pop
dec
test
jns
jae
mov
mov
aaa
int3
push
adc
iret
xor
jns
ret
mov
mov
out
dec
stos
sub
mov
xor
out
inc
mull
fisubl
clc
xor
jne
inc
adc
loopne
mov
in
bound
push
xor
or
xor
pop
sub
and
dec
mov
jecxz
test
fsub
cmc
or
mov
inc
mov
lods
gs
insb
outsb
inc
call
stc
leave
sbb
pop
stos
arpl
addl
or
sbb
or
adc
in
test
mov
xchg
sub
insl
inc
push
xchg
jb
pop
shrl
scas
bound
rcrl
cs
mov
repz
add
mov
in
call
push
mov
outsb
lret
loop
lods
cmp
divb
jb
shlb
in
xchg
int
mov
out
xchg
xor
stc
adcl
or
aas
mov
sbb
cmpsl
inc
aam
out
sub
das
mov
fildl
ret
sbb
jmp
ret
pop
orl
jecxz
xchg
sbb
movsl
mov
dec
mov
aad
mulb
clc
xchg
lret
jb
push
add
mov
and
in
and
sahf
mov
stc
mov
mov
js
les
push
out
adc
pop
sarb
and
jmp
loopne
add
mov
jl
cmc
shll
sbb
inc
mov
loop
popa
cmp
mov
aas
ffreep
inc
cmpsb
leave
push
mov
aaa
jl
add
add
mov
inc
sbb
pop
ss
push
mov
push
and
enter
out
push
mov
repnz
fcoml
cmp
cmp
fwait
sarb
cmp
push
sbb
sbb
xchg
pop
imul
jl
cmp
add
add
pop
inc
dec
popa
jno
jne
xor
jle
hlt
mov
pop
jl
jle
das
adc
mov
add
testb
es
inc
xchg
cmp
notb
out
adc
and
subl
lock
or
xor
add
scas
pop
test
mov
sbb
cltd
push
repnz
ljmp
ss
cmp
sbb
dec
les
cli
mull
inc
pop
iret
pushfw
xchg
xchg
ja
jle
das
cmpsl
add
out
push
jae
into
mov
sbb
dec
xor
notl
dec
aaa
out
inc
dec
xchg
ret
sahf
lahf
push
sbb
mov
inc
into
shrb
dec
add
loop
das
mov
mov
scas
mov
jle
or
mov
mov
pushf
sbb
int3
clc
xor
dec
add
test
push
lods
push
dec
cs
stos
or
xor
jae
pop
rorl
xor
add
or
addr16
stos
ret
cli
sub
mov
dec
test
aaa
mov
cmpsl
mov
and
fcoml
adc
pop
lock
fcmovb
pop
fmuls
aaa
push
mov
add
aam
inc
outsb
ret
dec
movnti
mov
pop
inc
or
je
xchg
mov
dec
jge
adc
mov
add
xchg
sbb
xor
push
mov
cmp
insb
ss
mov
gs
inc
dec
push
mov
icebp
stos
adc
jp
rclb
add
push
jmp
fistl
sub
inc
jnp
addr16
insb
popf
out
jmp
mov
scas
jg
movsl
dec
fisubl
add
in
pop
add
or
inc
cmp
cmpb
fisttps
mov
sub
ficompl
fsub
sbb
dec
adc
stos
scas
add
mov
fsubl
stos
mov
cld
cmp
test
les
test
movsl
call
enter
pop
dec
sub
scas
sub
test
mov
cld
push
mov
cmc
sbb
lea
inc
push
or
mov
xor
push
pop
fiadds
int3
les
mov
aaa
lahf
adc
xor
mov
fcoms
std
iret
ret
lds
push
jg
xchg
mov
pusha
loopne
or
mov
pop
es
xor
lock
clc
cltd
fcmovne
js
xchg
sub
test
iret
cmpl
jnp
push
jmp
pop
mov
cltd
out
daa
jmp
push
scas
inc
icebp
jmp
call
jnp
insl
leave
add
pop
dec
push
ret
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
jmp
sub
test
pop
jno
dec
mov
jl
jle
cltd
rol
dec
jo,pn
xor
pop
jne
inc
mov
add
or
inc
or
inc
dec
xchg
push
cmp
push
mov
push
hlt
push
push
or
lea
rcrl
xor
mov
jb
dec
into
movsb
push
xchg
push
pushf
out
and
adc
sub
or
mov
sbb
popf
filds
cmp
mov
cltd
jno
sti
cmp
add
sahf
gs
cmp
xchg
scas
push
js
cmp
jge
cmp
sub
fcmovb
mov
iret
mov
xchg
xchg
xchg
adc
jmp
into
mov
pushf
or
test
sub
lahf
fisttpll
movsl
mov
fdivs
sub
jge
xchg
mov
push
jnp
sbb
dec
filds
mov
insl
das
jecxz
and
addr16
aam
int3
pop
mov
sub
imul
adc
mov
mov
push
jge
mov
mov
ja
inc
test
push
pop
cltd
aad
arpl
inc
jg
cmp
pop
scas
sti
mov
add
inc
sub
mov
jns
repz
sti
cs
loopne
mov
inc
dec
cmpl
out
repz
jle
std
xlat
outsl
add
xchg
out
mov
push
pop
mov
sub
loop
mov
ret
add
sbb
lds
or
inc
stos
mov
ret
test
or
loopne
mov
cld
xchg
add
mov
xchg
sbb
pop
jmp
cmpsb
lods
dec
mov
dec
or
test
fidivl
jb
push
adc
xchg
or
xor
sbbb
repnz
int3
and
stc
inc
int
adc
inc
inc
or
inc
add
imul
repnz
pop
xor
outsl
sub
test
scas
cltd
mov
leave
imul
mov
je
add
xor
popa
lahf
mov
xor
js
nop
and
mov
dec
ss
cmc
out
aas
aad
rorl
scas
lret
shlb
std
mov
and
inc
push
and
ja
or
sub
push
ss
scas
lods
xchg
cmc
and
mov
adc
jle
dec
add
ret
cmpsb
mov
fdivs
add
fistl
xor
xor
fidivrs
dec
fnstsw
hlt
test
inc
or
in
ja
mov
mov
rcrb
mov
jbe
repz
sub
jbe
insb
dec
jb
xor
das
mov
xlat
push
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
xor
adc
shl
icebp
repz
mov
out
and
pop
jl
jle
std
in
movsb
and
and
jo
sti
and
shlb
push
jae
or
xor
scas
push
dec
lods
sub
inc
dec
stos
call
mov
cmp
ja
mov
cltd
mov
mov
test
inc
nop
loopne
or
xchg
cmpsb
xchg
push
add
les
out
pop
frstor
movsb
fistpll
push
adc
mov
divl
cmp
inc
aad
xchg
mov
dec
loope
push
inc
shlb
rol
dec
divl
outsl
es
or
lods
mov
jne
cmp
aaa
mov
mov
mov
mov
dec
outsl
inc
test
std
jo
stc
fwait
and
mov
xchg
fcompl
in
cmp
mov
aam
pop
mov
aam
test
cli
and
fildll
cmp
pop
jge
sbb
cmp
xorl
sbb
ljmp
mov
gs
inc
inc
cs
xchg
jns
xor
movsb
mov
repz
in
fstps
les
sbb
inc
dec
popf
dec
mov
jmp
popf
sub
cmp
lods
mov
int3
out
or
push
lods
es
sbbl
gs
inc
mov
fimull
loopne
xor
cltd
ds
jns
scas
movsb
jb
lods
dec
sbb
cmp
ret
imul
out
adc
xlat
cmc
adc
xchg
js
lret
sub
insb
pop
out
xor
and
dec
and
push
mov
cmpsl
in
aad
xor
lock
xlat
jge
add
pop
adc
sbb
push
sbb
xchg
mov
pop
xor
push
push
mov
jmp
les
adc
scas
shlb
sbb
push
push
cmp
ret
pop
dec
mov
push
ss
jo
add
pop
int
insb
push
mov
ror
shll
shlb
sti
pop
imul
adc
jl
push
test
cmp
gs
inc
add
sub
test
decl
das
inc
xor
xchg
lds
lock
dec
cmpsb
mov
push
ret
testb
xor
sbb
mov
pusha
or
cmp
or
stos
leave
xor
out
ds
loopne
sar
mov
mov
inc
cld
pop
movsl
push
in
push
sarb
jg
mov
loopne
movsb
jmp
imul
add
and
push
xor
stc
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
xlat
pop
mov
jno
stc
hlt
jb
jmp
jle
pop
jl
jle
xchg
hlt
lgs
pop
sbb
mov
addr16
insl
xchg
mov
push
jge
gs
dec
testb
leave
add
stos
divb
mov
cld
shrb
xor
cltd
or
mov
xchg
cmp
punpckhbw
inc
pop
movsl
mov
jns
pop
and
fs
push
jns
jmp
mov
lock
ret
push
loopne
leave
adc
fs
flds
stc
dec
cwtl
jl
int
cs
je
dec
or
ljmp
pop
add
sahf
sbb
xchg
mov
pop
xchg
stos
adc
mov
inc
mov
push
aas
cmp
add
aas
shrl
mov
jl
je
repnz
or
dec
mov
scas
loop
pop
jns
mov
dec
cmp
cmpsl
push
pop
and
xchg
lds
and
or
jae
xchg
push
mulb
imul
cld
aaa
lds
inc
imulb
test
jl
or
xchg
lock
adc
pop
add
push
xchg
clc
fwait
mov
outsl
adc
push
xchg
cmp
fwait
sub
pusha
mov
in
jmp
add
mov
and
jno
shrb
enter
out
sti
sbb
cmp
test
sbb
divb
mov
rcl
jno
add
push
dec
and
xchg
mov
push
adc
outsb
mov
sbb
or
aad
jecxz
xor
mov
cmpl
push
push
sub
jne
test
add
ds
imul
xor
lods
or
xchg
lods
xor
cmp
add
inc
loopne
lcall
std
fwait
aam
stos
jmp
hlt
jle
daa
test
adc
and
mov
icebp
xor
xchg
sbbl
std
jnp
outsl
mov
pop
or
sub
daa
pop
arpl
lret
or
mov
adc
jno
rdpmc
mov
into
or
jns
adc
repz
add
add
cli
inc
push
cmp
pop
rcl
inc
inc
push
ljmp
or
mov
push
jno
mov
mov
iret
scas
sti
mov
sbb
and
fwait
push
sarl
dec
or
inc
pop
in
ret
inc
repz
fs
add
mov
rol
xlat
cmp
jg
cmpsb
xchg
fistpll
adc
test
mov
leave
fwait
lods
arpl
popa
and
arpl
sub
sbb
in
adc
pushf
xor
fs
ss
xor
push
or
xchg
jge
mov
in
lret
arpl
sbb
push
push
imul
mov
xor
sub
lea
jmp
pusha
das
sti
pop
push
push
out
cmpsl
pop
push
imulb
jle
jl
jle
jne
js
movsb
out
mov
and
mov
outsl
pop
pop
lahf
rclb
or
add
lock
pop
push
pop
in
loopne
cmp
push
push
dec
out
popa
and
test
sti
push
dec
pushf
das
inc
rclb
or
lods
add
cs
push
ljmp
mov
cs
movsl
inc
sbb
mov
ljmp
mov
push
push
adc
xor
dec
sbbl
dec
push
test
loop
inc
add
add
mov
das
addr16
xchg
xor
push
imul
shrl
fbstp
add
enter
push
out
nop
jbe
andb
ret
sub
pop
inc
xor
rclb
or
sahf
xchg
incb
pusha
stc
jle
adc
jns
mov
sti
lods
cwtl
jle
or
and
jmp
pushf
daa
sbb
pop
jecxz
mov
icebp
pop
mov
fistpll
lcall
mov
cs
push
sbb
jecxz
sti
jno
imul
cmp
js
cltd
sub
mov
jp
dec
adc
shlb
pop
add
arpl
cwtl
nop
insl
pop
mov
push
ds
inc
dec
jp
xorb
add
cli
lock
sub
jnp
pop
xor
lcall
pop
add
jbe
dec
int
add
or
push
lahf
xchg
push
test
sub
repz
aad
lds
xchg
ficompl
or
mov
decb
or
jecxz
add
mov
in
test
fdivrs
and
and
ss
xlat
cmp
iret
xor
push
xchg
and
inc
push
sub
ljmp
pop
pop
cmpsb
pop
lods
test
mov
imul
js
sbb
shll
or
ret
cmp
das
sbb
xchg
clc
dec
adc
sbb
mov
movb
cmp
and
mov
pop
and
add
roll
jle
push
in
cmpsb
in
sahf
lock
addb
popf
sub
adc
out
xchg
into
lods
into
pop
inc
int3
mov
in
inc
pop
push
mov
jb
or
je
mov
ljmp
subl
xor
scas
sub
pop
scas
xor
repnz
js
bound
mov
xor
mov
repz
xor
mov
insl
mov
mov
les
mov
jge
repz
inc
iret
lcall
jg
lret
sbb
sub
mov
mov
ljmp
out
mov
push
idiv
decl
fsubr
incb
add
outsl
fisttpll
pop
fmull
lcall
jl
jle
xchg
xorb
add
mov
cmpsl
sbb
lcall
cmp
enter
outsb
mov
gs
movsb
inc
leave
je
inc
cmpsl
aam
stos
dec
ljmp
sti
sbb
push
push
iret
jmp
xchg
pushf
pop
fisttps
lods
lock
or
je
jns
jnp
fnstsw
xor
xor
into
popa
out
jne
push
icebp
mov
jge
xchg
xor
jmp
icebp
cmpsl
pop
in
cmp
mov
mov
rcrl
mov
or
gs
push
and
add
mov
xchg
mov
in
test
jg
inc
add
lock
out
and
sub
je
xchg
mov
add
cli
fildll
cmp
mov
outsl
sub
lahf
fwait
jl
sbb
inc
aaa
and
outsl
mov
scas
sub
cmpsb
enter
daa
xor
jns
cmp
popf
mov
xor
call
and
int
icebp
cs
or
jno
mov
mov
lahf
adc
clc
push
sbb
in
out
bound
mov
scas
stos
dec
in
dec
cli
addr16
test
mov
jb
out
xor
jbe
std
jnp
push
mov
mov
stc
in
xlat
lcall
iret
xor
leave
lds
out
mov
out
pop
xor
adcb
addl
into
mov
bound
dec
mov
add
xchg
adc
popf
xlat
movsl
cmc
aas
sbb
out
push
mov
aam
das
mov
outsl
push
idivb
sbb
pop
cld
push
cli
xchg
ds
js
scas
inc
js
lods
rclb
std
aaa
leave
or
es
jg
daa
mov
dec
das
xor
inc
cmpl
jmp
dec
int
jo
push
inc
jl
and
cmp
in
movsl
adc
lcall
out
push
mov
mov
pop
out
mov
sahf
enter
fwait
or
xchg
xor
lret
jge
sub
cmp
dec
cli
fnstsw
xor
mov
fsts
adc
ljmp
add
mov
std
and
push
mov
mov
shr
out
nop
ret
fcoml
das
sub
xor
push
cmp
add
ret
pop
ficoms
jae
rcrl
push
out
lret
in
std
push
pop
dec
add
out
add
mov
lret
mov
push
sbb
xchg
push
or
jne
ret
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
and
mov
xorl
xor
notl
add
jmp
scas
incb
jne
lods
jbe
loopne
mov
xchg
and
cmp
jle
sub
jle
dec
mov
orl
jecxz
out
and
movsl
test
insb
mov
gs
sub
test
testl
loope
mov
inc
mov
dec
dec
std
in
fs
outsl
push
orb
sub
xchg
stc
and
shlb
fistpll
add
sub
xchg
sub
sahf
sbb
fsubs
in
movsb
dec
mov
mov
mov
enter
stc
xor
sti
sub
cmp
lret
pop
push
mov
and
les
mov
jecxz
inc
sub
inc
sti
adc
ficoms
imul
dec
cwtl
inc
xor
sahf
leave
fmull
int
mov
xchg
xor
hlt
jb
push
mov
jns
xor
push
push
push
cmp
lock
lret
dec
lahf
cmc
add
add
xor
testb
aas
mov
mov
lock
or
xchg
cmpsb
jle
adc
icebp
sahf
and
fcomps
pmaddwd
push
call
clc
dec
lea
xor
jne
adc
cmp
stos
pop
mov
adc
pop
insl
cwtl
ja
xchg
inc
imul
jbe
sub
cwtl
xlat
movsb
clc
scas
push
faddl
adc
mov
xchg
lret
push
fwait
pop
sbb
mov
aaa
fcmovnb
jns
call
xor
sbb
iret
push
mov
jne
lret
addl
mov
stos
call
cli
cmpsl
pop
dec
pop
xorb
outsb
or
test
pop
mov
cmp
ljmp
mov
inc
cmp
test
sar
ds
pop
pop
arpl
hlt
sub
scas
and
sbb
mov
fisubrl
dec
std
fnstenv
es
cmp
mov
call
in
jae
mov
pop
push
mov
insb
sti
push
dec
lcall
sar
jle
mov
rol
daa
mov
sub
mov
jae
jno
outsb
fbld
or
push
test
pop
jb
movsb
mov
arpl
enter
pop
imul
jge
out
into
or
lock
lret
xor
addl
adc
jmp
stos
nop
sub
sub
xor
imul
jmp
repnz
xor
je
mov
lds
and
mov
inc
jnp
fistpl
lods
test
rcrb
jno
ficomps
cmp
mov
fldcw
int
jecxz
mov
pop
sbb
int3
jbe
push
adc
cs
ja
xchg
cmp
cmp
adc
add
cmp
js
dec
pop
lret
mov
push
push
out
out
les
sar
cmc
jmp
fistpl
jg
pusha
and
jp
mov
inc
push
add
pop
in
or
dec
adc
movl
movl
mov
push
mov
movl
mov
cmp
je
mov
xor
xorl
xor
lea
xor
cmp
jne
movl
jmp
add
mov
xor
add
movl
mov
mov
movl
jmp
jmp
fldcw
les
adc
call
jge
jle
mov
add
outsb
outsl
sub
bound
or
mov
add
push
insl
fucomip
dec
aaa
leave
scas
mov
jmp
xchg
push
mov
cld
or
cmpsb
push
xor
rcll
and
cmp
movsb
repz
mov
inc
xchg
fistps
int3
pop
push
lcall
lret
sbb
inc
push
decl
push
icebp
cmpsb
pushf
lea
adcb
popa
xor
js
cwtl
xchg
cmp
inc
sub
ja
pminub
in
std
pop
push
mov
pop
sbb
jo
dec
adc
es
pop
pop
into
rcll
loop
push
movsl
push
dec
push
jle
or
pop
push
fdivr
mov
fsubp
mov
xor
mov
mov
sub
pop
push
in
adc
mov
mov
dec
mov
inc
xchg
pop
loopne
adc
and
mov
adc
xchg
and
sti
jo
ret
mov
mov
ficoms
in
cmpsl
jae
scas
fildll
popa
adc
xor
jmp
sbb
pop
cmpsb
xchg
dec
clc
inc
pop
inc
add
stc
add
pop
repz
scas
adc
adcb
icebp
ror
sti
int
outsl
fsubl
js
fdivr
adc
inc
push
inc
into
imul
nop
rcrb
push
js
mov
adc
gs
inc
lds
lock
test
imull
out
adc
mov
adc
inc
ret
mov
xor
sbb
cmp
daa
aas
call
push
enter
xchg
fmull
push
sub
js
div
nop
jae
sub
push
xchg
mov
inc
lret
push
scas
jg
dec
mov
jge
and
jnp
sbb
cmp
sub
popa
mov
fisttpl
pop
lods
sub
xlat
test
imul
and
data16
lcall
cmp
xchg
pop
fst
sub
icebp
xor
cltd
xchg
jbe
adcb
std
add
push
js
sbb
dec
sti
mov
mov
repz
insl
inc
inc
mov
rclb
xor
add
ror
mov
mov
mov
enter
or
jne
xchg
mov
lock
xchg
je
cmc
insl
jae
adcb
jns
push
test
adc
inc
andb
rolb
lea
sub
pusha
cmp
sbb
fwait
sbb
lods
dec
sub
xor
gs
lret
mov
inc
mov
daa
stos
int3
mov
adc
pop
mov
aas
mov
out
addl
shll
add
test
ret
sub
cmc
aam
dec
testl
jb
mov
and
sti
add
jmp
jne
sub
test
test
mov
and
jle
jge
jle
fmulp
pop
mov
stos
ljmp
aas
insl
or
pop
mov
rcl
gs
mov
cwtl
cmp
push
dec
xor
push
xchg
sbb
rcll
mov
icebp
out
xor
jbe
lahf
add
dec
push
jge
dec
pop
push
mov
mov
cld
stos
push
cmp
addr16
push
sbb
popa
cmc
or
iret
cmc
push
push
mov
inc
dec
js
pop
mov
or
jae
inc
popf
mov
icebp
out
mov
ret
out
pop
push
mov
outsb
push
mov
in
das
pop
mov
sub
mov
stos
out
xor
jmp
stc
clc
or
xor
ret
iret
pop
lds
pop
sub
adc
aam
or
pop
push
inc
push
data16
mov
andb
repnz
push
or
mov
gs
sub
es
jg
stos
enter
daa
push
lret
popf
jmp
xor
add
add
test
cli
mov
add
mov
pop
jo
das
cmpsb
out
aad
and
cwtl
xor
add
push
inc
sub
rcrb
xchg
push
mov
adc
in
inc
sbb
adc
fidivrs
xchg
sbb
inc
cmp
inc
lods
mov
je
adc
dec
roll
rcrl
repnz
aaa
xor
popf
icebp
pop
cmp
lods
call
in
orl
fnstenv
dec
fcompl
or
mov
pop
sbb
sbb
stos
imul
mov
mov
add
int3
jg
rcrl
push
jbe
xchg
lahf
pop
mov
ja
push
mov
add
mov
clc
push
addr16
inc
mov
xor
dec
mov
sub
call
sbb
mov
out
aam
cmp
dec
cmc
popa
gs
call
inc
imul
clc
mov
adc
out
add
aaa
mov
lahf
sub
fdivs
fsubr
mov
mov
push
or
movsb
lcall
sbb
movsl
adc
fnstcw
leave
and
xchg
lods
fisttps
ds
add
loope
rorl
dec
sbb
imul
pop
mov
xlat
pop
sbb
sbb
sub
popa
in
dec
adc
lcall
mov
loope
cmp
iret
dec
sti
ja
sarl
fcomps
or
cld
sbb
mov
hlt
xor
push
loop
ret
test
xchg
push
pop
addr16
ret
loopne
xchg
sti
shrl
insl
mov
xor
scas
gs
ljmp
adc
test
imul
lcall
push
pop
or
lahf
jl
lds
mov
xor
mov
fisttpl
pop
mov
std
adc
or
outsb
lods
jmp
dec
add
lret
fwait
das
lods
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
jmp
lahf
cmp
push
pop
fcomps
cmc
mov
mov
jle
jge
jle
lcall
shrb
aaa
test
lds
inc
and
lcall
lahf
idivb
cmp
inc
sub
adc
xor
shr
jb
xor
test
xchg
mov
add
cld
push
and
outsb
cmpsb
push
xchg
rcr
fcoms
int3
pop
sub
loopne
vandps
pop
jns
aas
pop
daa
xchg
or
xchg
stos
sub
jne
shrb
stc
inc
mov
mov
in
xchg
pop
xchg
test
xchg
and
lds
jp
push
lods
je
lret
inc
test
mov
mov
mov
push
loopne
pop
pop
add
cmpsl
push
jb
in
cmp
mov
fdivrs
xor
rol
jle
icebp
or
adc
outsb
cli
jl
lods
test
pop
inc
es
push
jne
add
cmp
es
bnd
jg
dec
in
fs
sub
orl
mov
push
mov
sbb
pop
scas
movsl
adc
sbb
stos
adc
jecxz
and
out
addb
sub
clc
das
inc
or
sub
fdivl
sub
leave
insl
jbe
jecxz
pop
xlat
das
sub
inc
mov
sub
mov
cmp
cmp
insl
pop
lret
cmp
sub
jp
imull
pop
mov
dec
outsb
cmp
xor
and
jno
xchg
pop
out
and
fs
ficoms
push
imul
gs
insl
shrl
insb
push
les
out
daa
imul
insb
xor
inc
lock
movsb
mov
xor
jne
mov
adc
and
mov
fisubrl
xchg
fidivrs
push
fcompp
imul
std
ja
xor
mov
outsb
adc
shrl
jl
or
les
xchg
lcall
adc
jmp
mov
push
jecxz
lcall
lock
push
or
int3
jb
inc
inc
clc
or
cmpsl
scas
cli
pop
movsb
and
add
inc
enter
inc
lods
int
mov
lret
lret
std
loop
outsb
add
push
loope
fsubl
gs
and
sahf
ja
into
push
ficoml
int3
test
addr16
xor
jg
dec
jmp
fwait
mov
mov
mov
pushf
outsb
pop
xchg
push
push
hlt
sbb
data16
mov
cmp
mov
sbb
jno
fildl
and
add
jno
rorl
das
orb
add
mov
pop
ret
cmpsb
pop
or
sarb
add
dec
sbb
sub
fs
imull
dec
pop
fiaddl
pop
loopnew
fdivr
adc
sbbl
push
sbb
call
jmp
mov
leave
ret
push
mov
sub
push
call
movl
cmpw
jne
push
call
movl
cmpb
movl
jne
movl
movl
lea
mov
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movzwl
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
subl
xor
adcl
push
mov
add
mov
mov
mov
cmp
mov
mov
je
or
mov
sbbl
xor
add
sbbl
imul
mov
movl
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
addl
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbbl
xor
adcl
add
cmp
movl
jne
subl
push
orl
pushl
pushl
call
mov
mov
andl
mov
mov
mov
orl
mov
subl
mov
subl
movl
andl
mov
decl
movl
mov
adcl
xor
add
jmp
notl
mov
xor
lea
push
mov
xor
lea
push
adcl
mov
xorl
pushl
call
mov
add
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
ret
push
mov
push
movl
push
mov
mov
mov
mov
movl
movl
movl
cmp
jne
or
mov
sbb
mov
movl
jmp
cwtl
sahf
inc
mov
ja
mov
movl
mov
mov
cmp
inc
lds
xchg
cmp
xchg
or
std
pop
outsb
mov
dec
imul
mov
ret
mov
das
push
adc
frstor
or
mov
js
jae
adc
cmc
rcrl
push
loope
insb
jno
repnz
mov
in
mov
lock
adc
divl
lea
pop
xchg
pop
push
push
testl
adc
out
jle
les
fadds
jg
pop
shll
push
fucom
push
lods
fwait
lret
and
mov
adc
sub
imul
imul
push
pop
mov
aas
cwtl
jne
test
insb
test
test
add
xchg
xchg
stc
dec
jnp
mov
dec
in
test
dec
cwtl
push
test
divl
fldcw
out
shl
aad
cmc
scas
stos
sub
in
imul
fxch
mov
mov
sbb
rcll
jl
mov
cli
xor
push
xor
je
xor
fdivs
inc
mov
and
push
mov
inc
pop
and
testb
insb
cmp
movsl
loope
mov
enter
loop
insl
ja
or
xchg
mov
aam
add
out
dec
aaa
or
sub
out
mov
inc
adc
mov
arpl
dec
mov
xor
hlt
adc
aad
lock
insl
fisubl
mov
sahf
jg
mov
in
sbb
pop
inc
repz
mov
sbbl
add
addl
mov
movzwl
sbbl
jmp
cmp
es
repz
movsl
pop
xor
xor
inc
cmp
mov
das
stc
lea
mov
add
mov
outsl
mov
pop
xchg
ficomps
jae
cmp
bound
test
pop
xlat
sti
pop
add
rcl
inc
into
inc
cli
jnp
push
pop
lock
pusha
rcll
pop
inc
cmp
mov
xchg
or
sub
pusha
repz
cmp
xchg
jb
lea
sbb
gs
cld
add
xchg
push
imul
fistpl
test
inc
xchg
jne
mov
add
aas
jmpw
loop
popl
jne
fsts
xor
aaa
cmp
inc
int3
mov
pop
or
xchg
bound
xchg
mov
aas
xchg
cwtl
lret
addr16
sbb
lods
popf
lock
xchg
and
popf
mov
push
cmp
out
in
inc
push
fmull
jl
xor
mov
dec
mov
sbb
adc
imul
ja
cmpb
int3
jno
dec
cs
icebp
xchg
mov
lods
in
fsubr
out
fxch
xor
cmp
mov
pushf
mov
adc
pusha
data16
decb
inc
push
in
roll
lret
stos
push
inc
jae
jg
mov
sarb
sbb
or
xchg
jg
sbb
xchg
adc
mov
push
mov
outsl
inc
loope
movsb
cltd
adc
pop
cmp
das
inc
push
adc
lock
aam
jb
pusha
test
or
enter
xor
dec
mov
mov
jecxz
andb
rolb
add
inc
add
add
jmp
xorl
mov
jmp
dec
rcrb
mov
push
loope
sahf
adc
mov
jle
mov
adc
cmpb
xorl
jbe
jne
pop
ja
nop
scas
aad
je
inc
add
nop
push
inc
pushf
xor
push
aaa
mov
and
mov
xchg
cmp
jge
jno
mov
pop
xchg
inc
adc
std
cmc
pop
pop
add
cmp
mov
and
inc
and
pop
sbb
cmp
outsl
imul
fs
das
pop
sbb
cmp
cmp
push
push
fs
sbb
out
cli
jmp
jns
mov
ss
cld
stc
fistl
movsl
add
fbld
nop
add
xlat
xor
inc
xchg
clc
jb
sub
sub
es
xchg
test
jmp
pusha
repz
push
scas
mov
push
out
int
iret
xchg
cld
dec
pop
pop
sbb
dec
adc
into
adc
je
push
aas
in
outsl
ja
nop
pop
and
and
enter
cmp
jp
inc
lds
rcr
test
aam
andl
pop
es
sub
ja
inc
or
repz
mov
inc
fnstsw
jecxz
outsl
push
pop
jecxz
int3
scas
cvtpi2ps
mov
int3
inc
leave
stos
outsb
sbbl
cwtl
cli
xchg
or
sub
aaa
sub
ljmp
add
and
fisubrs
out
fstps
cmp
js
xchg
cld
jg
aad
dec
in
and
mov
divb
pusha
xor
and
mov
mov
mov
inc
pop
cmp
or
fstps
imul
es
dec
pop
sbb
pushl
call
test
jmp
and
in
popa
push
lret
xchg
ja
push
mov
mov
dec
ja
movsb
cmc
cmpl
aam
repz
pop
push
gs
sub
mov
mov
stos
mov
addr16
pop
mov
xchg
or
lea
push
mov
cmpb
push
lock
into
push
dec
push
cltd
inc
lds
hlt
pushl
mov
mov
cmp
insl
filds
mov
fwait
mov
aaa
out
adc
enter
stos
fs
ret
ljmp
mov
and
adc
inc
mov
or
insl
and
mov
es
es
cmp
fwait
loopne
push
lods
push
aad
dec
lret
lahf
pop
cmc
shr
push
insl
add
pop
pop
lahf
icebp
bnd
push
test
dec
jl
hlt
xchg
imul
adc
add
or
push
push
xor
call
leave
test
adc
dec
or
sub
dec
ret
outsb
dec
mov
pop
dec
mov
jmp
int
xchg
sarl
fidivrl
das
jo
push
icebp
pop
test
mov
jp
dec
pop
smsw
das
jb
lea
sahf
mov
and
add
fdivrl
pop
jg
mov
ret
cs
pop
es
bound
add
mov
and
mov
dec
loope
call
mov
hlt
in
scas
sub
imulb
repz
dec
fs
shrb
rolb
jge
ficoml
xchg
xchg
mov
shrl
cmp
call
test
cld
dec
ret
push
mov
sub
andl
movl
mov
or
jmp
pop
cmp
inc
pop
arpl
js
push
loope
lds
jo
ret
add
or
jne
lretw
pop
push
sub
cmp
out
aad
mov
xchg
ljmp
jmp
test
add
or
or
add
or
jne
cs
adc
je
iret
cmpsl
inc
and
out
dec
push
in
jo
loop
cmp
scas
dec
mov
inc
das
mov
lahf
loop
test
jb
inc
push
xchg
jne
int
mov
xchg
dec
in
test
pop
push
xchg
inc
sti
jne
test
arpl
push
mov
pop
and
movsb
push
addl
jnp
in
inc
jge
ret
imul
xor
mov
mul
inc
orb
addr16
mov
xchg
or
push
and
jl
sub
insl
iret
sbb
xchg
sub
pop
mov
xchg
das
inc
xchg
jo
jnp
xor
cmpsl
out
jae
cmpsb
iret
jns
mov
subb
mov
lahf
dec
mov
cltd
ljmp
lret
or
push
adc
and
in
pop
movsl
jle
ret
or
pop
leave
popf
adcb
sub
xchg
dec
ljmp
bound
push
ja
xchg
push
sub
xor
ret
cmpsb
test
addr16
and
mov
or
sbb
fisubrl
shlb
mov
inc
cmpb
ss
enter
inc
mov
sub
dec
inc
testb
outsl
add
movsb
popa
ja
imul
add
mov
pop
mov
fstps
js
movsl
mov
add
sbb
xor
mov
sbb
out
push
dec
inc
jge
fidivs
mov
cmpsl
ficoms
jp
jo
xchg
mov
dec
xchg
lret
push
cmp
mov
in
xor
add
xchg
add
mov
sub
mov
and
lea
sub
mov
mov
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
pushl
call
jmp
xor
push
lea
mov
mov
jmp
aad
shlb
dec
js
js
mov
std
mov
sarb
jl
jle
pop
lahf
insb
inc
mov
lahf
mov
xor
lret
sbb
jne
jno
jg
jae
outsb
adc
cwtl
adc
adc
std
or
mov
aaa
into
insb
lret
notb
pop
pop
cld
fbstp
imul
lds
inc
clc
js
cwtl
je
jne
or
jl
pop
push
inc
add
pcmpgtb
jp
enter
out
aam
xor
cmc
add
inc
push
push
sbb
jl
jae
add
mov
mov
ret
out
cld
outsb
add
cmp
xchg
xchg
mov
mov
cmpsl
test
add
xlat
pop
xchg
fwait
andb
fdivl
or
mov
cmp
adc
pop
fistps
scas
out
xchg
stc
jle
imul
dec
dec
jl
frstor
cmpsl
add
insb
aad
shlb
pop
pop
add
testb
lret
sbb
sub
xchg
shll
inc
jb
out
mov
mov
and
int
lahf
fcompl
das
jle
gs
fs
jns
ret
test
jnp
cmpsb
leave
mov
and
mov
dec
sub
mov
inc
push
pusha
aam
xchg
test
cmp
ficoml
pop
roll
xchg
jecxz
mov
cmc
fimuls
mov
repnz
test
push
xor
cmp
and
scas
mov
cmp
daa
andl
dec
push
jmp
ljmp
mov
mov
sub
push
lcall
icebp
jns
sub
sahf
cli
insl
icebp
shlb
or
push
or
xchg
or
movsl
sbb
aam
bound
xchg
rolb
mov
ds
mov
movsl
pop
dec
or
pop
inc
xor
xchg
fsubl
cmp
push
sub
push
mov
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
neg
jmp
loopne
test
cmp
pop
out
mov
mov
add
push
or
xchg
sub
cmc
sbb
jno
lahf
xchg
testl
pop
outsl
aas
daa
mov
pop
jbe
cmpsl
out
mov
inc
push
pop
sahf
lret
rep
sub
sbb
jle
cmp
cwtl
sti
inc
mov
and
cmp
ror
xor
jbe
lds
mov
xchg
in
mov
das
test
call
stc
pop
out
fstps
xchg
sbb
js
push
dec
sbb
pop
in
out
or
lret
test
pop
iret
je
and
cmp
xchg
jne
in
adc
int
mov
lahf
lret
out
jg
adc
and
sti
xor
faddp
loopne
push
mov
inc
jecxz
xorb
push
cmp
cld
ret
popf
xchg
sbb
cwtl
jne
mov
sub
push
jo
push
mov
adc
xchg
jg
push
push
jl
jne
xchg
stc
dec
xor
stos
loopne
in
test
inc
rcll
rcr
jne
push
push
clc
adc
jl
inc
into
cld
xchg
mov
scas
dec
stos
ljmp
sub
adc
push
and
cmpsl
shrb
mov
test
push
cmp
or
cmpsb
xor
jb
es
cmp
call
test
lea
in
sbb
push
sub
jle
scas
fwait
ret
sti
clc
mov
push
lods
add
add
xchg
push
mov
sub
pop
out
fiadds
inc
negl
cmpl
lahf
hlt
jle
outsb
adcl
lods
sahf
cld
xchg
pop
mov
addr16
gs
test
cmc
int3
idiv
mov
sub
push
sbb
in
rcll
cmpsb
inc
mov
insl
xchg
mov
shl
ror
pusha
mov
sub
loope
arpl
push
in
roll
outsb
sbb
add
movl
xor
addl
xor
andl
add
negl
add
incl
div
mov
movl
movl
movl
cmp
je
movl
movl
andl
lea
xor
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
and
out
je
inc
adc
sbb
pop
sbb
sub
jle
add
data16
loop
xchg
pop
sti
out
out
sub
in
mov
pop
add
add
fstpt
movsb
mov
ss
test
inc
lods
and
jbe
repnz
scas
addb
fimull
sub
ljmp
jbe
adc
ds
and
lcall
out
mov
mov
mov
pop
mov
push
push
pop
test
ds
jg
jae
mov
aas
mov
mov
xchg
int
dec
inc
sbb
xchg
sub
clc
and
imulb
lods
ljmp
mov
dec
addb
cmp
push
xor
xchg
loope
std
repnz
cmc
pop
imul
xchg
outsl
nop
shlb
add
sarl
and
inc
dec
or
lret
adc
jl
fisttps
inc
outsl
addr16
in
cmp
cltd
sub
mov
call
je
or
imul
or
cmp
dec
pop
jne
inc
jno
add
sub
or
or
add
int
out
fdivl
xor
sbb
add
outsl
xchg
push
rcr
rcrb
and
roll
jne
in
sub
gs
and
imul
or
pop
hlt
sbb
int
mov
xchg
pop
lret
sub
dec
ret
js
sbb
mov
mov
xor
fdivs
jmp
xchg
pop
sbb
push
pusha
cmpl
sub
hlt
push
fucom
in
sti
in
sub
and
xchg
push
xchg
xlat
pop
sub
mov
ljmp
add
popa
sub
mov
mov
fiaddl
ja
outsb
mov
dec
jle
xchg
dec
push
dec
int3
test
and
push
xchg
in
cmp
ror
sbb
arpl
cmpsb
orb
repnz
orb
pop
add
add
sahf
sbb
pusha
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
mov
mov
movzbl
or
mov
orl
mov
mov
orl
push
xor
xor
sub
push
mov
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
sub
add
mov
addl
lea
not
mov
mov
mov
and
mov
andl
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
lea
jmp
ss
lods
jmp
push
mov
aas
ds
and
jle
push
fcompl
in
dec
mov
ror
ss
jae
fwait
xchg
jnp
pop
rorb
mull
aad
mov
xchg
dec
mov
jg
in
pop
pop
popf
sbb
jnp
bound
inc
movsb
loopne
roll
xor
xchg
cmpsl
or
test
mov
push
add
mov
lahf
movhps
mov
cmp
mov
shll
mov
pushf
push
add
pop
pop
lea
xchg
push
divb
mov
fcmovnbe
outsb
xor
in
add
iret
ss
inc
jnp
inc
or
jle
and
lea
jl
lcall
inc
fimuls
loop
jg
jecxz
sbb
xchg
and
sub
adc
or
or
sub
loope
dec
mov
std
rcl
pop
in
in
iret
test
inc
mov
sbb
ja
push
adc
inc
push
push
enter
push
out
scas
and
mov
push
imul
adc
in
mov
or
lea
clc
xchg
pop
cltd
fwait
adc
mov
jno
push
outsl
adc
sbb
into
sbb
or
insl
mov
add
imul
in
xchg
dec
jno
in
repz
filds
mov
hlt
mov
jg
clc
xchg
outsb
bound
jb
inc
icebp
enter
pop
cmp
insb
call
cld
mov
pop
adc
in
sub
adc
lcall
xchg
pop
and
jecxz
push
push
adc
jle
jns
mov
sub
test
outsl
aam
pop
fiaddl
roll
jmp
popa
inc
mov
fisubrs
jp
ds
lds
in
jb
add
sbb
add
inc
ret
inc
push
mov
jno
aaa
push
mov
pop
mov
pop
sti
mov
cli
and
mov
mov
insl
pushf
ja
test
lret
fsubrp
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
inc
mov
orl
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
xchg
inc
in
mov
das
pop
insb
scas
pop
in
jle
and
jle
and
mov
test
push
in
add
jno
mov
cmp
mov
mov
les
xchg
push
rcrb
xor
into
jg
repz
pop
jns
cmp
movsb
out
out
mov
and
js
jg
repnz
jge
or
pop
stos
fs
cmc
lods
add
xchg
xchg
sub
pop
cmp
sub
push
in
std
jmp
iret
cwtl
bound
xchg
addl
lods
repz
in
mov
inc
sbb
jp
jo
jmp
push
pushl
mov
ja
xchg
mov
add
xchg
push
insb
fstpt
gs
sub
mov
mov
fnstenv
jns
push
dec
popf
jb
adc
lahf
mov
xchg
loope
sub
lods
xchg
jmp
jp
mov
sub
addr16
mov
lret
push
sbb
mov
out
jp
mov
push
and
and
adc
arpl
stc
in
in
in
pop
push
and
cmc
pusha
xchg
icebp
mov
or
cmpsl
cli
pop
mov
fs
add
inc
mov
pop
repz
arpl
lock
inc
mov
push
dec
xor
push
aad
push
sub
adc
rcrb
sahf
mov
sbbl
xchg
mov
dec
sub
push
ja
inc
sbbb
in
sahf
or
add
int3
out
cmc
mov
das
sub
mov
mov
pop
int3
mov
jg
or
arpl
mov
roll
leave
nop
js
cmp
push
fsubrl
dec
cmp
dec
ds
aas
das
mov
inc
imul
xlat
adc
enter
mov
insb
cmp
in
mov
add
aaa
shl
mov
or
orl
insb
push
sahf
shrb
sub
xchg
es
pop
int
pop
notb
dec
lret
lret
dec
jno
addl
or
ja
mov
mov
lods
adc
enter
adc
inc
add
xor
hlt
sbbl
jmp
pop
push
jg
xor
add
inc
mov
jle
and
jle
cli
mov
das
cmp
or
sahf
cmpsl
xor
repnz
mov
mov
fcmovu
inc
stos
jno
sarb
add
jne
cmp
ljmp
lds
mov
pop
outsb
icebp
loope
add
mov
xor
loopne
adc
out
rcrl
arpl
xchg
lcall
sarl
aaa
cmp
xor
pop
add
or
repz
repz
fsubr
xchg
and
ret
sub
mov
mull
scas
jecxz
lret
mov
adc
insl
cmp
mov
jmp
jl
mov
dec
cmp
mov
add
fwait
adc
inc
pop
ds
sub
mov
xor
maxps
ret
jo
lea
loop
adc
xor
or
sbb
sub
adc
stos
and
cmp
mov
cmp
pop
sub
xchg
imul
cmp
out
or
les
cs
fadd
popf
cmc
push
push
out
ljmp
dec
ja
and
int3
clc
dec
fstpl
lahf
or
rcrl
mov
inc
cld
push
push
sub
and
scas
roll
loope
add
inc
jl
movsb
pop
adc
cs
mov
or
loope
push
sub
lock
ja
cmpsl
pop
fistl
push
aam
cs
sbb
dec
das
cltd
ret
jmp
add
xchg
or
and
js
xchg
push
inc
add
and
pop
fs
cli
xlat
add
lret
pop
lock
mov
stos
decb
daa
mov
outsl
adc
ja
or
adc
sbb
imul
leave
fcomps
jp
and
repz
mov
jg
push
sub
shrb
es
shl
pop
dec
ljmp
push
repz
mov
icebp
rorl
ss
add
jl
add
dec
cld
adcl
movzwl
xorl
add
notl
mov
mov
or
mov
xor
add
cmp
jne
dec
mov
mov
xor
add
cmp
jmp
stos
adc
inc
jno
stos
icebp
jl
and
pop
mov
jle
and
jle
xchg
pop
mov
dec
dec
pushf
push
fisubl
cmp
fwait
imul
inc
ja
test
xchg
addr16
sarl
imul
add
decb
lret
cld
rcrl
stc
clc
lods
xchg
jle
inc
bound
lea
pop
dec
fwait
jae
lahf
sbb
cmp
or
sbb
iret
lock
add
push
sub
jle
les
test
or
jmp
scas
inc
dec
inc
mov
dec
subb
jb
cmp
jns
std
mov
jo
ret
sbb
lea
stos
push
or
and
adc
xor
sbb
lods
test
clc
adc
scas
cltd
inc
or
jbe
xlat
nop
fstps
and
mov
jl
roll
sub
clc
jne
hlt
push
fbld
and
sub
imul
stos
mov
or
xchg
add
jb
mov
stc
adcl
imul
add
insb
push
loopne
cld
fbstp
lahf
dec
sub
inc
mov
int
mov
inc
popf
and
fdiv
cmc
pop
pushf
popf
cmc
xadd
dec
test
jb
xchg
xchg
add
popf
repz
imul
pushf
or
je
dec
pop
lock
and
xor
pop
mov
out
scas
push
lea
sbb
rolb
roll
and
inc
loop
movsl
push
stc
fs
lock
and
and
pop
jecxz
xchg
pop
dec
dec
xchg
sbb
mov
xchg
outsb
das
lcall
jae
pushfw
mov
cmp
insb
dec
rorb
mov
inc
shll
inc
outsb
je
mov
inc
jnp
inc
fstpt
cld
idiv
popf
push
jbe
adc
addr16
out
jb
enter
inc
lret
cld
or
dec
add
sbb
nop
push
bound
roll
ja
push
lea
push
das
mov
cmpb
rorl
pusha
or
adc
aaa
xor
ljmp
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
jmp
xchg
or
jmp
orb
data16
and
jle
aam
fsubl
inc
cmp
jno
jno
lahf
je
es
mov
xor
lock
cmp
sub
imul
test
sbb
mov
aaa
adc
testb
mov
js
mov
or
addr16
sti
mov
xchg
iret
imul
or
popa
sub
jp
fldt
lods
mov
repz
cli
ret
mov
mov
shll
or
xor
xor
cmp
pop
mov
push
dec
push
fucomi
bound
pop
jg
pop
dec
add
cli
cmp
inc
xor
stos
xor
cmp
cmp
iret
pop
mov
sub
jmp
mov
mov
pop
mov
adc
adc
mov
mov
sbb
pop
leave
and
and
jp
and
jle
cmc
aad
cld
lahf
lret
pop
lret
and
push
fsts
sbb
je
leave
mov
sbb
out
mov
push
mov
in
push
pop
and
xchg
inc
adc
mov
push
mov
mov
stos
gs
pop
jmp
xchg
add
fldl2e
jmp
jno,pn
test
inc
out
pop
int3
and
jae
fcmovbe
sub
dec
xchg
push
xor
sub
mov
int
outsl
dec
ja
and
fwait
pop
pop
cmp
jmp
mov
or
out
mov
bound
mov
mov
mov
out
shll
popf
xchg
sub
in
ljmp
sbbb
lcall
mov
mov
adc
xchg
pop
adc
aas
test
jmp
mov
fnsave
mov
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
sbb
aam
je
and
adc
or
jle
and
jle
push
inc
push
cmpsl
dec
sarl
mov
scas
jg
pop
push
cs
ret
stos
mov
adc
pusha
movsl
dec
and
mov
bound
aas
or
sbb
sub
ficoms
lret
cmpsb
mov
repnz
cmpsb
aaa
mov
test
dec
mov
lods
faddl
mov
push
inc
or
jmp
cmp
dec
adc
fcoms
hlt
push
push
das
lods
lea
in
aaa
daa
pop
stos
popa
push
rcr
test
jne
inc
xor
lods
mov
add
mov
jmp
sbb
idivl
aas
sbb
fisubl
repz
js
pop
rcrb
inc
mov
ficoml
jbe
fs
dec
les
sbb
adc
cwtl
pushl
out
xchg
xchg
xor
lret
jno
or
stc
push
lret
lea
clc
cmp
imul
enter
out
daa
jnp
shll
pop
mov
dec
jb
movsb
nop
jmp
xor
addl
fiaddl
fldl
fstps
jno
add
stc
dec
les
mov
stc
icebp
dec
sbb
cmpsl
dec
icebp
scas
es
inc
scas
mov
xor
pushl
shl
push
sahf
int
movsl
pop
out
das
cmp
mov
cmp
inc
xchg
push
ljmp
ret
cli
inc
pop
scas
das
into
aaa
dec
pop
inc
ds
fsubr
das
outsl
xor
adc
jne
xor
shrb
lds
mov
test
popf
cli
notl
xchg
jle
push
fimull
lea
sub
mov
pusha
xchg
inc
hlt
jnp
xchg
addb
and
xchg
cmc
and
in
cmpsl
std
je
cmp
stos
xchg
jmp
xor
xor
pop
xor
aad
lret
mov
cmp
sbb
jle
clc
xor
rcr
sub
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
jmp
sbb
outsl
jno
out
jne
mov
inc
out
jnp
fistpll
and
jle
leave
inc
mov
mov
adc
push
pop
mov
sbb
xchg
rcll
in
inc
inc
addb
lcall
vmread
iret
xchg
cli
push
sbb
push
and
adc
es
jb
out
and
xor
pop
int
sub
add
jge
dec
cmpsl
xor
aas
xor
addr16
jge
pushf
out
cs
jge
and
dec
in
and
movsb
push
cld
shrb
pop
and
mov
sarb
push
xchg
movsl
rorb
mov
test
xchg
push
ja
sbb
xchg
push
test
insb
mov
or
cltd
mov
into
jl
push
icebp
jp
insl
leave
insb
int
xchg
divb
xchg
decb
out
jmp
xchg
mov
addl
cmpsl
sub
and
inc
xchg
lcall
sub
addr16
jae
or
popf
xor
mov
mov
clc
ds
lea
daa
cmp
std
pop
test
xor
dec
lods
jl
xchg
lods
jno
sub
add
push
addr16
dec
sahf
cmpsb
loope
dec
inc
cmp
fsubs
das
mov
mov
mov
xchg
mov
into
test
adc
gs
aad
push
in
pop
add
jmp
xchg
or
push
cmp
xor
insl
mov
dec
ss
sub
inc
iret
shrl
adc
sbb
sbb
xchg
xchg
repnz
adc
stc
sbb
aas
adc
clc
fnstsw
das
xchg
dec
mov
das
loope
aad
dec
sahf
jle
sbb
lods
mov
test
mov
inc
sbb
out
sub
mov
mov
cld
and
gs
cmp
repnz
lret
je
mov
jge
fsts
inc
subl
js
mov
je
or
or
jne
jmp
lods
mov
outsb
xorl
pop
sbb
fnstsw
and
jle
stos
cmp
or
xchg
fisubrs
pop
aad
lods
mov
xchg
xchg
push
xchg
stos
jg
jg
mov
dec
mov
jne
jo
inc
inc
aaa
shr
syscall
dec
add
lret
cmpsb
shll
cmpsl
xorl
or
adc
push
dec
pushf
mov
xor
mov
fbld
and
jmp
pop
pop
fucomip
enter
add
mov
xchg
cmp
inc
lret
mov
adc
push
loope
mov
lcall
cld
add
cltd
adc
pop
jns
scas
cmpsl
sbb
sub
gs
lds
in
inc
test
cltd
rorl
sbb
sarb
xchg
bound
pop
out
test
ja
push
push
jle
xchg
jg
mov
insl
adc
xor
test
call
adc
cmc
and
and
jnp
push
push
pop
push
mov
into
mov
fadd
sahf
scas
imul
cmpsl
cs
and
sbb
push
aas
incl
jae
lahf
in
sbb
add
dec
pop
sbb
jo
rcl
lock
pop
sub
or
push
mov
mov
sub
cld
jns
mov
int
push
out
pop
push
fstps
dec
or
inc
into
mov
enter
xchg
lahf
rcl
or
add
or
push
jge
push
dec
inc
ja
sahf
adcb
xor
roll
shlb
cs
ficomps
push
inc
add
addl
push
jg
jge
arpl
mov
mov
push
xlat
mov
jge
jl
jmp
xor
movsb
test
shlb
sbb
adc
aad
push
mov
outsb
sbb
bound
push
jae
or
sub
gs
shll
addr16
cmp
ds
pop
xorl
or
ss
inc
aaa
mov
clc
mov
aaa
sub
aad
jmp
loope
ljmp
clc
ljmp
fstpt
and
jle
in
rolb
pop
sbb
mov
sti
pop
mov
sti
mov
inc
nop
sbb
jae
jno,pt
imul
inc
adc
insl
cltd
ljmp
rcl
push
cmp
and
loopne
add
in
lret
cmp
dec
fmulp
mov
jnp
add
arpl
cmpsb
ja
in
sbb
mov
movsb
cmp
mov
and
insl
add
xor
repz
mov
out
icebp
sbb
mov
rcrl
test
lcall
push
or
inc
sbb
jb
aad
bound
xchg
adc
test
mov
ljmp
cmc
ss
push
into
fs
and
xchg
std
ret
inc
jg
mov
int3
enter
stos
push
cmp
mov
call
stc
xlat
push
test
subl
push
out
shr
cmp
sti
lcall
outsl
out
xor
loope
lret
add
xlat
imul
pop
and
or
test
or
xor
hlt
mov
mov
aad
mov
hlt
loope
mov
jmp
insl
in
insb
in
inc
or
jmp
jge
jmp
dec
mov
xor
xchg
jns
sbb
mov
aad
negl
cli
xchg
in
push
jle
mov
int
pop
xor
fdiv
push
fldt
mov
fimull
push
mov
fbstp
sti
jg
xor
fstpt
mov
xor
pop
push
scas
out
in
mov
xlat
and
push
mov
mov
push
rcr
inc
popf
pop
mov
fdivl
xchg
fbstp
lret
fdivp
pushf
jg
mov
xor
fs
push
xchg
fucom
mov
push
fisttpll
jg
xor
rorb
shlb
pop
popf
pop
add
xor
leave
inc
je
mov
stos
addr16
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
add
movl
xor
xor
xor
mov
push
sub
mov
addl
xor
mov
add
orl
mov
mov
sub
mov
jmp
shrl
stos
fadd
cwtl
pushf
out
cld
push
pop
mov
jle
cmp
aaa
mov
daa
aad
cltd
repz
pop
out
std
and
add
mov
fsubrl
sar
dec
push
cmpsl
ds
shlb
mov
dec
sahf
mov
mov
jo
xor
out
cmp
es
mov
sbb
xchg
mov
mov
daa
gs
sbb
adc
sub
sub
mov
cmp
lods
push
movsb
xchg
inc
mov
pusha
xor
sub
faddl
sub
aad
lcall
jbe
push
inc
push
inc
iret
test
rolb
fiadds
arpl
xor
jns
lret
lret
sub
mov
and
pop
inc
int
mov
and
sbb
jmp
xor
or
mov
jbe
jae
mov
mov
or
and
dec
repz
fstpl
scas
sub
sbb
sub
xchg
and
jge
jmp
mov
adc
mov
inc
js
mov
cmpsb
xor
js
mov
sbb
sbb
or
insl
int
aas
xor
mov
mov
out
jno
in
outsl
test
and
mov
mov
fidivrl
lea
mov
fwait
lcall
xor
push
or
aas
mov
or
and
or
js
stos
jge
test
push
out
pushf
or
xlat
jge
pushf
adc
jb
sbb
pop
xor
jmp
push
inc
jle
mov
pop
mov
lret
clc
stos
das
pop
popl
or
xor
call
out
jns
push
das
daa
mov
xor
and
out
cmp
mov
xchg
std
imul
sub
jns
bound
cmc
adc
push
dec
jns
sbb
jns
jmp
icebp
xor
jmp
mull
cmpsb
dec
int3
mov
push
sub
pop
mov
push
push
sbbl
jmp
lds
popa
mov
fisttpll
in
in
jle
jl
jle
pop
fs
cmp
out
loope
fnstsw
popf
dec
xor
mov
or
push
dec
dec
aad
in
mov
push
adc
mov
add
ljmp
dec
gs
dec
lods
push
jb
mov
pop
xchg
fisubrs
and
pop
pop
mov
mov
ret
lock
fadds
cmp
and
push
out
push
dec
out
ja
jnp
lods
movsb
push
shlb
xor
shll
inc
shrl
mov
cmp
push
inc
push
das
loop
mov
daa
pushf
or
call
int
jo,pt
popf
mov
shlb
insb
push
pop
mov
cwtl
push
andl
and
stc
xchg
js
mov
cmp
xchg
jb
enter
adc
ljmp
subb
add
popf
push
mov
aas
ss
jecxz
data16
das
fnstenv
int
lods
int
test
xlat
sti
jle
mov
cs
add
or
mov
pop
mov
iret
bound
add
scas
rcrb
sbb
mov
jl
cmp
je
ss
sub
movsl
loope
xor
movsl
add
cmp
arpl
addl
in
insb
out
cs
mov
inc
push
mov
pop
sub
mov
fadd
add
push
adc
inc
sub
jmp
daa
sub
jb
lret
xor
dec
ljmp
ja
jle
movsb
or
sbb
xor
sbb
leave
cmc
cmpsl
adc
inc
pop
mov
xor
dec
cld
mov
push
andb
and
popa
or
mov
push
cmp
popl
push
and
inc
and
xor
and
or
jb
pusha
je
dec
sbb
xor
and
mov
dec
insl
xchg
negl
dec
push
filds
push
mov
clc
ret
fsts
ja
jp
jb
inc
inc
cmp
pop
mov
adc
mov
add
out
add
je
mov
mov
sub
mov
mov
or
jmp
push
lcall
cmpsl
or
inc
pop
push
mov
jle
cmp
cmpsl
fists
jecxz
leave
mov
push
add
push
sbb
adcl
xchg
mov
mov
mov
inc
push
lods
adc
push
loopne
imul
jmp
xorb
xchg
mov
xchg
pop
pop
adc
jns
out
les
hlt
jbe
cmp
or
lcall
movsl
inc
sub
adc
push
rorl
adc
cmp
pop
mov
inc
rol
nop
int
push
int3
jecxz
lret
inc
mov
enter
repnz
sub
pushf
stos
adc
cmpsl
mov
mov
cmp
out
jns
jbe
adc
sub
lret
adc
or
popa
out
fstps
aas
and
mov
push
enter
test
pop
pop
mov
scas
cmp
mov
pop
call
lods
mov
adc
sbb
mov
or
lret
pop
mov
aas
dec
aam
and
out
icebp
idivl
sub
je
sub
push
adc
mov
xchg
dec
mov
sub
shlb
outsl
mov
aam
shll
fnstsw
jp
es
jno
jmp
shrb
xorb
dec
and
in
mov
inc
and
mov
jg
out
push
jp
shrl
movb
leave
popa
aad
outsb
cs
rcl
mov
xor
fists
or
mov
sbb
test
imul
jae
das
shlb
jns
fidivrs
test
lods
xor
jge
pop
mov
dec
pop
pop
ja
sbb
popa
xchg
sbb
mov
xor
cmp
sub
mov
ret
xchg
pcmpeqw
out
loope
lahf
popa
sub
jbe
lret
fstps
push
xchg
sahf
gs
sub
ret
mov
fsubl
inc
xchg
mov
ljmp
jge
data16
mov
jae
add
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
orl
mov
jmp
mov
data16
gs
jmp
aas
repz
mov
cmp
adc
arpl
cmp
push
aaa
nop
push
jne
lods
stc
inc
cmp
bound
leave
pop
push
add
out
fsts
push
and
pushf
sub
js
in
mov
xchg
push
xor
idiv
cmp
fwait
adc
sahf
mov
xchg
mov
int
sub
xchg
mov
mov
dec
mov
xchg
lods
mov
fabs
cltd
rorb
lcall
pop
mov
imul
pop
cld
loop
out
lea
or
ret
ds
aas
mov
out
dec
cmpsb
push
fcom
sbb
cmp
adc
jnp
and
xchg
dec
pusha
es
sbb
xchg
in
dec
push
mov
jmp
push
lock
outsl
in
repz
sahf
mov
mov
data16
test
popf
dec
dec
adc
jecxz
mov
xchg
stos
int
mov
jne
push
mov
push
mov
push
xor
xor
insb
sbb
adc
sub
adc
test
lahf
scas
lods
adc
mov
orb
das
test
fistps
adc
insl
outsl
inc
jmp
movsb
xchg
and
aad
cwtl
xchg
popf
inc
movsl
ret
sti
lds
call
fnstenv
mov
popf
jmp
das
std
xlat
add
clc
popf
aaa
mov
inc
mov
sbb
and
jmp
mov
enter
ficompl
sbb
push
sub
stc
into
push
test
fstps
mov
jnp
push
jmp
aas
fnstsw
inc
adc
ljmp
lock
cli
faddl
push
ja
xchg
inc
in
out
inc
mov
dec
push
jp
dec
mov
frstor
out
jp
xchg
xchg
sub
or
cmpsl
bound
stos
lea
lahf
rcrl
into
test
fwait
push
or
movsl
aas
and
mov
rcrb
xchg
repnz
add
icebp
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
push
push
call
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
add
movl
mov
mov
mov
je
mov
xor
sbbl
add
movl
jmp
imul
jno
dec
test
pusha
ret
dec
or
dec
out
jle
cmp
in
inc
push
xor
int3
jns
aam
sub
dec
pushf
rcl
pop
dec
test
dec
int3
sub
aam
xchg
outsb
mov
jmp
add
int
lret
sbb
dec
jp
or
dec
and
dec
xchg
out
stos
lret
xchg
div
jo
int
pop
popf
adc
pop
dec
add
and
test
pop
pop
jo
add
jmp
xlat
imul
cmp
push
pushf
imul
ret
jg
inc
ret
adc
ret
into
cmp
lret
fisubl
adc
dec
idiv
jmp
push
bound
subl
push
leave
cmp
push
add
sahf
cli
aam
xchg
xor
fwait
adc
clc
jbe
add
out
inc
lds
xchg
testl
sbb
daa
lods
push
loope
pop
sbb
aad
stos
and
lea
fldcw
ror
push
cmpsb
pop
cmp
inc
jg
mov
dec
cs
inc
stos
iret
mov
pop
mov
cmp
and
cmpsb
into
and
imul
mov
out
repnz
arpl
sbb
pop
movsb
int
icebp
movsl
addr16
add
push
repnz
sub
push
sbb
leave
mov
popa
mov
dec
icebp
movsl
pop
cmp
out
test
jl
add
sbb
sub
mov
pop
subl
inc
insl
and
sub
test
xchg
dec
iret
inc
mov
add
arpl
frstor
out
lea
cmc
sub
sti
imul
incl
inc
pop
jno
js
fists
call
leave
cld
dec
ljmp
pop
lahf
xchg
fcoms
out
sub
movsl
lret
in
lock
mov
out
stc
xchg
push
aaa
inc
ss
mov
adcl
jle
aam
dec
lea
popa
push
jb
xchg
or
jno
daa
int
fscale
addr16
xor
pop
mov
jp
cld
sub
jecxz
pop
in
sub
sti
ljmp
stos
aas
jecxz
popf
cmp
xchg
outsb
xor
insb
mov
fldl
xchg
or
in
mov
adc
clc
movl
jne
adcl
pushl
addl
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
addl
add
movl
cmp
movl
je
addl
pushl
xorl
pushl
decl
call
movzwl
sub
jmp
or
and
loopne
shl
sti
and
mov
push
in
jle
cmp
mov
mov
loopne
out
pop
pop
insl
xchg
mov
xchg
cs
dec
fldcw
cmpsb
or
int3
adc
mov
je
insl
ss
mov
iret
mov
shll
sbb
insb
mov
or
fucom
inc
push
mov
or
rorb
adc
stos
sub
mov
lret
cmc
inc
add
mov
lret
xchg
cmp
imul
or
lret
push
aas
add
in
leave
cmpsb
dec
out
jle
inc
add
es
dec
fwait
and
mov
test
fsubrs
pushf
call
cmp
push
insl
outsl
ja
loop
jmp
stos
add
aam
int3
pop
dec
lods
xor
loopne
call
push
mov
or
mov
in
lods
test
adc
aad
mov
jl
mov
iret
xor
push
inc
int3
push
add
cmpsb
lret
mov
mov
inc
daa
cmp
and
jno
xlat
pop
and
jp
not
sub
jle
shlb
pop
icebp
push
pop
lcall
mov
popa
sarl
ret
xor
std
inc
or
inc
cwtl
xorb
ds
lock
fadds
test
xchg
sbb
in
jmp
xor
inc
hlt
shll
pop
movsl
aad
scas
sarl
sub
mov
fs
sbb
iret
int3
jno
jnp
out
dec
xchg
push
loop
loop
lods
int
scas
mov
inc
jo
mov
xor
negl
adc
cltd
fwait
je
imul
mov
cmp
shl
or
mov
shrl
sbb
inc
dec
mov
lea
mov
adc
dec
jmp
shlb
push
nop
mov
push
push
and
loopne
jne
out
fcomps
clc
bound
dec
cwtl
cmp
cmpsl
clc
out
out
loopne
sahf
xchg
inc
ficoms
scas
push
lds
je
mov
or
movsb
mov
mov
xor
mov
xor
adcl
add
movl
jmp
dec
ret
xchg
push
nop
push
dec
ret
mov
ficoml
mov
jmp
jle
jl
jle
xchg
jae
out
mov
and
fcompl
scas
sbb
xchg
mov
cmpsb
cmp
fs
rcrl
outsl
pop
push
movsb
adc
in
int3
push
out
loope
popl
dec
lret
inc
inc
es
cli
out
orb
jmp
aaa
shrl
sub
mov
adc
out
adc
inc
into
dec
lods
test
cmpsl
sub
sub
mov
adc
lock
jge
mov
in
arpl
into
lret
and
jg
push
lea
sbb
lret
aaa
push
mov
push
aad
fistl
and
adc
mov
xchg
xorl
pop
dec
cmp
or
cltd
jg
popa
push
fistpl
testb
leave
in
in
sub
imul
lds
jl
repnz
jb
test
sti
orb
inc
mov
insb
push
rcrl
rcrb
pop
dec
sub
cwtl
dec
xchg
lock
leave
fistl
mov
fistpl
fnsave
nop
mov
data16
lods
rclb
add
fildl
jle
les
xchg
ljmp
cmpsl
sbb
or
mov
daa
stc
xchg
mov
movsb
inc
jge
adc
shlb
and
ds
into
aaa
aas
fs
in
mov
out
repz
arpl
aas
and
aad
add
jne
inc
sbb
dec
or
jbe
mov
inc
add
mov
jo
jg
ljmp
es
cmc
xor
dec
test
or
adc
mov
movsl
add
add
jbe
loop
je
xchg
xchg
jo
and
adc
pop
inc
add
inc
leave
adc
rorb
pop
icebp
popf
stc
jno
xor
xlat
cltd
jns
and
out
xchg
bound
pop
pop
aaa
pop
dec
cmp
nop
hlt
pusha
xchg
dec
mov
enter
or
imul
add
je
add
out
ss
add
add
add
leave
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
adcl
jmp
stos
adc
imul
adc
lcall
jle
loope
stos
lods
xor
std
repz
inc
lret
loope
jb
scas
add
inc
and
pop
mov
out
js
add
ss
push
adc
mov
inc
pop
inc
cli
in
add
fidivrs
jmp
sbb
cmp
mov
fcmovnbe
xor
xchg
lcall
cmc
test
cltd
into
cmc
sub
loope
sub
cmpsb
mov
push
or
sahf
cmp
andl
repnz
and
out
pop
gs
lret
rcrl
pop
mov
or
icebp
cmc
jae
pushf
inc
xor
mov
cmp
insl
jns
mov
sub
push
xchg
scas
jns
add
xor
ret
nop
in
roll
ljmp
sub
mov
incb
movsl
add
rclb
inc
xchg
xchg
int
pop
lods
fidivrl
stc
insl
ljmp
adc
cmpsb
add
sbb
xchg
and
mov
pop
add
andb
daa
and
or
ret
fcmovne
or
push
jno
add
movsb
or
mov
sqrtps
js
lret
test
mov
xlat
dec
dec
or
inc
inc
insb
lcall
sub
mov
rorb
nop
scas
mov
add
dec
jae
lods
int3
scas
in
or
dec
sub
pop
pusha
sub
dec
and
mull
sbb
mov
mov
pop
mov
mull
mov
shlb
popf
not
in
in
repnz
lods
inc
test
int
pop
arpl
daa
sub
inc
fcomip
out
lods
popa
mov
adc
imul
clc
add
adc
mov
mov
mov
jmp
lods
adc
jnp
stos
and
xchg
jo
aad
lods
pusha
stos
mov
mov
bndldx
data16
lock
xchg
in
cmpb
xor
das
cmp
xlat
scas
cmp
or
std
inc
adc
in
and
push
popa
pusha
or
test
inc
sbb
add
in
mov
notl
add
movzbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
jmp
push
fsubrs
push
ds
cmp
cmp
aaa
jmp
adc
mov
push
mov
scas
into
mov
es
sub
inc
enter
add
pop
aam
cmp
pop
dec
mov
int
lcall
cmp
push
sbb
loop
ja
push
negl
xchg
das
mov
xchg
cld
loopne
xor
push
xchg
and
sub
push
push
xchg
filds
mov
loope
pop
mov
mov
in
push
cmp
scas
shr
enter
arpl
movsl
loope
nop
adc
cmp
insb
cmp
xlat
das
jae
fisubl
mov
cmpsb
inc
push
movsl
andb
sbb
andl
loop
push
gs
jnp
das
cld
push
adc
dec
mov
mov
sub
inc
xchg
test
sbb
inc
adc
sahf
adc
mov
mov
imul
mov
xchg
testb
push
mov
pop
pushf
mov
pop
mov
pop
mov
xor
sub
pop
inc
je
stc
stos
add
fsubrs
cmp
mov
xor
push
or
pop
xchg
add
sub
lds
scas
jl
daa
bound
inc
ds
outsb
icebp
ret
imul
pop
and
sahf
sub
inc
imul
jb
lcall
cmpsl
mov
pop
rcl
fiadds
lods
imul
loopne
out
cmp
in
sbb
popf
xchg
xchg
addl
out
test
cmp
jle
lret
xchg
push
mov
stos
add
movsl
popf
sub
jl
mov
lods
mov
int
test
pop
push
cmp
cmp
setnp
mov
fidivl
mov
xor
rcrb
add
dec
sbb
mov
inc
mov
adc
inc
inc
int3
lea
ret
mov
jb
dec
jl
loopne
incb
jmp
add
sub
mov
andb
push
mov
cmp
sbb
jb
inc
lea
scas
adc
lock
mov
add
jmp
jno
push
clc
jno
jno
pop
repz
push
shrl
cmp
repz
lock
cmp
ja
js
add
mov
ja
adc
jae
xchg
shl
pushf
xchg
in
push
ret
cmc
push
jmp
outsb
or
out
mov
les
jecxz
out
test
loopne
arpl
outsl
fmuls
cmp
cmp
lret
sbb
in
jb
push
js
mov
rorl
mov
or
cmp
or
mov
lock
add
sti
and
jo
add
ret
test
mov
cs
in
sbb
push
or
pop
cmp
mov
cmp
lods
nop
lock
lock
cmpsb
mov
scas
popf
push
outsb
mov
nop
pusha
xchg
in
jl
cmpsl
dec
es
rcll
xchg
rcl
mov
xchg
std
movl
in
inc
cmp
andl
or
mov
mov
test
and
fbld
jne
or
ja
sahf
cltd
xchg
mov
dec
shlb
sti
or
or
rcrb
adc
mov
aad
inc
mov
roll
xchg
sarl
scas
loopne
mov
or
jns
cmp
sub
in
jle
sbb
lods
cmpl
adc
outsb
aad
test
test
add
sbb
fists
leave
out
jmp
xor
hlt
sahf
pop
adc
cmp
in
push
ret
pop
xchg
cmp
fisubl
jge
cmp
je
add
repz
into
mov
xor
mov
lock
dec
push
pop
mov
rol
inc
lahf
mov
dec
mov
fldenv
mov
aaa
sahf
xchg
ret
mov
adc
arpl
rcl
or
dec
out
scas
lock
iret
inc
shr
xor
push
mov
frndint
enter
bound
ds
jbe
popa
jmp
adc
ror
push
aas
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
pop
pop
sub
imul
out
or
call
jl
jle
loopne
push
and
xor
pusha
es
mov
stos
add
inc
ficompl
inc
sub
loop
int3
xchg
call
fistps
mov
adc
or
mov
mov
mov
jge
mov
das
out
jge
movsl
out
inc
mov
and
cli
cli
xchg
pop
jmp
mov
xchg
xor
mov
cltd
mov
push
sti
hlt
sti
stos
xchg
daa
mov
dec
fs
mov
in
mov
nop
dec
in
outsl
and
xchg
std
sbb
mov
mov
cmpb
xchg
mov
mov
dec
xor
dec
xchg
inc
mov
jns
push
sarl
mov
jae
inc
sarb
ja
adc
xchg
pop
push
test
sub
cmc
mov
outsb
xchg
into
sbb
pop
loopne
push
lds
pushf
mov
and
sub
ds
addr16
lahf
test
sahf
adc
sub
adc
add
and
inc
ss
sti
inc
push
adc
call
shl
push
popf
les
call
vcomisd
mov
rolb
icebp
das
mov
outsl
jae
sub
popf
int
dec
std
push
stos
idiv
pop
fprem1
leave
stc
fisubs
stc
stc
rcll
xor
jne
add
adc
push
pop
dec
mov
sub
in
mov
adc
or
push
mov
scas
and
nop
cmp
pop
adc
jbe
or
dec
daa
pop
iret
roll
jne
inc
mov
aas
push
mov
lds
insb
imul
std
in
sub
pop
cmpsl
sub
scas
aad
jl
aam
lret
in
adc
das
mov
das
scas
in
sbb
std
xchg
lahf
adc
nopl
push
push
leave
insb
pusha
push
cmp
mov
mov
or
les
sbb
sub
test
xchg
mov
jl
dec
imul
sub
in
push
in
xchg
push
std
dec
mov
mov
nop
test
int3
dec
mov
pushl
pushl
call
mov
mov
xor
add
cmp
jne
jmp
mov
jo
das
pushf
dec
je
adcl
jle
lock
aaa
sbb
loop
call
sbb
in
ret
push
outsb
lods
ja
push
and
cmc
test
arpl
mov
jecxz
pop
mov
cmp
dec
fcomps
inc
enter
cmp
inc
xor
push
push
mov
movsl
dec
out
xchg
sbb
mov
mov
pop
hlt
mov
jl
pop
sub
sub
push
pop
push
je
js
aas
mov
fucomi
popf
push
push
pop
outsb
mov
fidivrl
gs
imul
fs
sarl
jno
sub
xor
add
jns
jo
xchg
pop
jno
dec
cmp
sub
cmpl
ret
aad
sahf
cmc
arpl
mov
shll
jns
push
sbb
lods
sbb
incb
jmp
out
mov
xlat
adc
bound
mov
push
and
sub
dec
gs
ljmp
sbb
test
push
dec
sub
xor
xlat
jns
mov
fsubrs
sub
fisubl
cmpl
mov
jae
sbb
gs
jge
mov
mov
inc
aaa
xchg
jae
cmp
mov
add
ficompl
push
rolb
movb
in
xchg
hlt
xchg
adc
neg
addl
jns
or
insb
pop
inc
jmp
les
mov
cmc
or
jl
js
cmp
js
xchg
jns
in
cmpl
sbb
adc
xchg
imul
or
mov
fnstcw
imul
stos
push
sub
jns
test
add
popf
sub
insb
cmp
fimuls
fimuls
dec
mov
ja
dec
push
in
gs
inc
pop
test
fdivrs
pop
xchg
scas
inc
test
inc
fidivrl
or
hlt
mov
scas
daa
rcrb
cmp
fnstcw
sbb
mov
xchg
cmc
ss
aaa
dec
push
scas
test
push
rclb
push
lods
out
pop
cs
in
inc
loopne
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
test
popa
lahf
jno
inc
xor
cmp
cmp
jne
fwait
int3
out
aas
dec
pop
fnstenv
sub
dec
adc
call
inc
jo
pop
sarb
jns
in
hlt
aad
cmp
scas
mov
jns
nop
dec
sub
je
lret
cmpl
jnp
inc
cmpsb
notb
call
frstor
shl
outsb
mov
shll
cmp
leave
and
outsb
inc
mov
ljmp
cltd
icebp
cmpb
xor
jo
sub
cs
fsub
faddl
jb
lret
xchg
or
loopne
fbstp
mov
enter
push
ljmp
dec
and
pop
mov
mov
jge
xor
push
add
iret
clc
insl
and
jae
test
aam
mov
lods
fstps
incl
shl
or
jns
ret
hlt
insl
lock
cltd
cmp
mov
pushf
es
mov
xchg
adc
adc
cwtl
arpl
ds
imul
out
nop
xchg
testb
ja
int3
push
jmp
fistpll
ss
jle
rol
push
test
adc
jne
mov
jmp
mov
lahf
push
rclb
pusha
pmaxsw
adc
popa
add
cltd
setae
mov
lret
jo
jmp
mov
dec
fcomi
shrb
cld
jb
jl
add
mov
push
add
adc
test
jl
add
cwtl
shr
mov
mov
mov
sbb
ret
and
dec
pop
adc
add
mov
xchg
pop
cmp
jb
adc
jbe
and
jge
and
sub
mov
jle
iret
out
nop
nop
gs
daa
lods
push
jmp
xchg
sysret
aas
fisubrs
xor
pop
pop
adc
cmp
fdivrs
call
add
mov
push
dec
jne
and
mov
lret
cmp
add
and
divl
sub
and
int
cmp
xchg
inc
push
xlat
bound
xor
add
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
into
mov
shlb
stos
mov
jle
dec
inc
sti
jle
cmp
or
xchg
loopne
pop
mov
push
add
test
rcll
out
or
dec
ficompl
jb
inc
mov
fdiv
pop
fstps
inc
dec
mov
pop
test
ss
fwait
std
jbe
cmp
push
sub
ja
ficoms
imul
dec
sub
xchg
mov
fnstsw
jle
pop
sub
sbb
lcall
add
leave
xchg
out
loopne
fdivrs
data16
idivl
cld
or
sub
cmc
pop
sbb
in
addr16
cltd
fs
mov
sub
filds
ret
inc
or
aas
clc
in
push
ret
mov
adc
insb
cld
xor
in
or
push
mov
dec
sar
iret
adc
icebp
fwait
xchg
mov
sahf
mov
pop
insb
int
fcmovne
push
jb
fsubrs
clc
fst
jge
pushf
repz
js
pop
lcall
nop
add
sahf
and
outsl
xor
lcall
rolb
insb
rcrb
sbb
out
and
push
into
cs
lret
push
aas
jno
push
stc
out
fidivl
mov
fstpt
add
or
lods
mov
jb
shl
aaa
mov
push
psubw
xor
bound
xor
mov
lahf
xchg
ret
rol
mov
mov
lods
push
addl
outsl
stos
lcall
pop
mov
popa
jle
mov
es
jo
and
test
or
mov
movsb
lds
adc
fs
adc
lahf
rcrl
clc
mov
fwait
cs
lret
addb
or
dec
push
popa
lods
lahf
sub
jg
aam
add
inc
sbb
adc
inc
jne
stos
sub
rcrl
push
jne
mov
inc
jae
pop
gs
push
xchg
arpl
mov
sub
fucomi
mov
xchg
mov
leave
ss
scas
pop
mov
dec
inc
cmpsb
inc
xor
dec
into
push
ret
or
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
jmp
pop
jbe
push
scas
or
outsb
cmp
jle
jl
jle
dec
push
dec
rcrb
enter
xor
jb
imul
sarl
mov
popa
roll
repz
dec
mov
or
fstps
push
push
mov
popf
stc
and
movsl
movsl
inc
jns
jg
repz
call
fildll
imull
hlt
les
loopne
out
pop
mov
lea
inc
notl
add
outsb
cmp
cmpsl
sbb
pop
cmp
or
inc
mov
lea
cld
adc
push
sbb
xchg
jg
mov
or
lea
xchg
rorl
lcall
in
or
lds
mov
fwait
and
push
add
xchg
mov
out
xor
outsb
loopne
sbb
xorb
repnz
mov
pop
aaa
stos
ja
lods
lcall
xor
mov
sahf
pop
mov
lahf
pop
jg
xchg
xor
and
and
pop
nop
cld
xchg
xchg
sub
mov
loope
push
loop
nop
push
repnz
xchg
pusha
or
sbb
dec
pushf
pop
movsl
lock
or
popf
push
std
sti
stc
sti
sbb
fdivp
push
or
mov
dec
cmp
push
mov
add
cs
clc
movq
mov
add
and
cltd
stos
dec
int
aam
jno
fbld
and
enter
mov
mov
sarl
sti
scas
loop
shlb
lret
mov
and
insb
sbb
dec
mov
mov
cmp
sbb
enter
hlt
jl
pop
es
dec
sbb
cmp
or
and
fs
in
rcl
xchg
lahf
cmp
dec
mov
js
add
fiadds
out
jl
test
dec
popf
adc
add
filds
add
dec
out
xor
stos
arpl
jl
inc
jns
gs
fs
nop
pop
pop
pop
mov
xchg
dec
mov
imul
sub
mov
jmp
dec
loop
lds
push
jo
mov
sub
add
jle
jl
jle
xor
lea
fdivs
dec
mov
pop
addr16
push
pop
jp
jl
shl
cmpsl
subl
and
dec
cmp
dec
fsub
loopne
es
lret
js
mov
and
inc
cli
adc
test
adc
sbb
fldenv
push
std
roll
mov
add
adc
xchg
into
or
arpl
nop
jne
adc
imul
nop
inc
in
jne
and
bound
loope
iret
adc
jns
scas
fistpl
enter
pop
jl
loope
loopne
sub
stos
movsb
fimull
push
leave
out
push
jmp
adc
jbe
sbbl
rcll
ljmp
sub
mov
push
bound
loop
lods
adc
jo
repz
icebp
xchg
lahf
xchg
push
pop
cld
ja
sarb
sbb
jne
sub
xor
das
xchg
adc
jle
cmp
in
data16
and
shlb
mov
pusha
xchg
in
xchg
cmp
sahf
inc
mov
stos
jmp
rcrb
aam
fidivl
pop
jmp
mov
or
xor
movd
xchg
or
cmp
call
push
jae
cmp
cmp
adcl
cmc
add
inc
jmp
pusha
pop
fnsave
jae
rorb
aad
adc
ret
xchg
gs
sbb
push
mov
inc
mov
les
imul
fwait
insl
loop
ret
scas
shll
bound
cltd
shrb
repz
inc
nop
or
jne
scas
mov
sub
repnz
shlb
dec
nop
jno
pop
push
stos
lretw
call
rorl
mov
notl
dec
or
divb
into
aaa
fwait
xchg
cmp
icebp
jne
or
into
xchg
stos
into
sarb
bound
xchg
dec
sti
adc
psubw
add
adc
outsl
adc
jne
repz
mov
data16
xchg
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
dec
scas
push
pop
cmc
arpl
pop
clc
push
rcrl
mov
adc
jle
cmp
mov
arpl
popa
pushf
and
out
pop
das
pop
test
icebp
es
lods
push
pop
xchg
inc
jl
ss
or
mov
imul
pop
dec
lods
and
dec
mov
aad
loopne
xor
mov
push
iret
incl
mov
dec
outsl
mov
mov
jp
sbb
pop
dec
xor
push
out
inc
cltd
mov
repz
dec
push
mov
mov
pusha
fisubl
push
fdivr
xor
dec
sbb
lods
fwait
leave
lahf
push
int
out
inc
mov
stos
or
lahf
push
stc
gs
add
shrb
cmp
test
mov
enter
dec
in
enter
fstl
mov
cmpsl
mov
mov
fnstenv
pop
fistpl
lods
cwtl
lods
leave
cmp
stc
dec
pop
dec
xchg
push
ficomps
xchg
outsl
cmp
inc
cmc
in
mov
cwtl
mov
arpl
xlat
mov
faddl
jp
push
push
insl
fs
mov
ret
mov
or
and
out
ret
mov
inc
or
lahf
jnp
sbb
dec
cmp
ret
sbb
push
inc
dec
xchg
mov
aad
es
jnp
mov
xor
insb
fstpt
add
aaa
imul
cli
stc
sbb
or
cmp
mov
mov
lods
pushf
pop
xor
cmpsl
test
call
mov
cmc
xor
cmpsl
push
and
fxch
roll
mov
mov
cmp
mov
xchg
imul
sahf
ret
jb
add
ret
test
jge
jge
outsl
int3
mov
and
jae
fnstsw
lods
add
jmp
aaa
adc
mov
mov
les
pop
push
mov
popa
mov
lret
or
sub
test
fcom
xorb
into
mov
jl
cmp
push
decl
cmpsl
jae
arpl
adc
clc
xlat
jbe
in
cmp
orb
add
push
mov
les
add
jns
in
call
xchg
mov
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
leave
adc
cmp
xor
mov
cmpb
jl
jle
push
fnstcw
push
mov
imul
cmpsb
and
and
pusha
testb
ds
mov
loopne
push
dec
arpl
popf
push
xchg
inc
cmp
lods
shlb
rcrb
jno
shrb
nop
je
sarb
popa
pop
outsb
xchg
ss
pop
test
inc
dec
push
inc
stos
jne,pn
inc
xlat
test
cmc
ret
repz
scas
scas
sti
jmp
inc
dec
or
ret
insl
push
incb
mov
fdivr
faddl
adc
pop
mov
popa
jge
dec
inc
mov
mov
in
sbb
dec
decb
fwait
jl
out
aad
mov
insl
adc
xor
jmp
aas
ljmp
pop
outsl
movsl
mov
imul
ljmp
arpl
aad
test
dec
lea
icebp
rclb
jmp
or
pop
adc
pop
pcmpgtd
mov
cmp
mov
xchg
shrb
hlt
call
add
shlb
insb
xchg
add
repnz
dec
and
bound
xchg
cwtl
mov
jmp
popa
push
xor
outsl
push
repz
testl
loop
mov
in
mov
int3
fs
cmp
push
dec
or
xor
in
cltd
fldenv
dec
aam
lret
xlat
out
jp
cmpsl
sarb
xchg
inc
jle
pop
loope
sahf
mov
insl
mov
mov
cld
jae
das
shrl
cli
jb
call
mov
outsl
sbb
lds
sub
int3
or
sarl
mov
adc
cmp
xchg
dec
sub
cmp
out
pop
push
or
repz
cs
in
mov
sbb
or
jbe,pt
dec
mov
cmp
shrb
test
jmp
leave
xor
jbe
jo
add
push
jnp
cltd
icebp
in
mov
and
ret
ret
icebp
cmp
lds
xor
dec
jg
cmp
cwtl
cli
sti
xor
jae
es
fistpll
rcll
test
or
xor
es
in
insl
xorb
pop
mov
xchg
leave
push
mov
xor
jmp
pop
mov
cwtl
mov
mov
cmp
and
cwtl
mov
cmp
jg
pop
testl
nop
or
hlt
sub
aaa
int3
pop
jo
xor
ja
push
icebp
insb
sbb
cwtl
lds
aad
push
shll
push
lds
mov
fnstsw
int3
mov
in
add
add
mov
or
cmp
jle
and
cs
in
jg
mov
imul
push
push
pop
mov
bound
dec
inc
add
bnd
loop
out
jecxz
pop
add
adc
inc
add
mov
mov
gs
jnp
std
add
inc
and
movsl
cmp
mov
sub
loopne
cmc
pop
mov
lods
adc
or
or
push
decb
fimull
jns
int
mov
mov
fcmovne
cmc
loop
pop
xorl
jnp
and
dec
push
pop
sub
std
lahf
das
pop
or
ret
mov
imul
push
ss
lret
pop
mov
sbb
cld
ja
inc
loopne
das
sbbb
mull
jnp
cmc
xchg
sbb
imul
sbb
sub
int
testb
jp
mov
bound
cmovge
test
fistps
push
movsb
push
pop
pusha
fwait
push
sub
inc
incb
xor
aas
xor
shlb
push
dec
mov
cmp
in
cmc
cmp
mov
icebp
pop
jp
iret
pop
pop
xor
jo
xchg
ss
xor
scas
cmp
addr16
call
or
mov
cmp
mov
xchg
repz
add
or
xchg
mov
mov
out
mov
pop
push
mov
adc
stos
lock
fistl
ficoms
push
enter
mov
in
popf
push
dec
jns
jmp
nop
mov
aaa
xchg
jmp
add
push
add
add
mov
cmc
data16
or
fimull
sarl
lahf
cmp
push
out
xlat
adc
dec
je
popf
imul
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int3
xor
ror
bound
jle
fiadds
xchg
call
mov
mulb
adcb
jp
add
jge
jb
xor
pop
cld
cli
out
gs
dec
roll
sub
cli
sub
mov
jbe
jmp
lods
loopne
push
test
mov
push
add
in
sub
and
mov
and
daa
jl
mov
mov
pushf
or
mov
not
scas
dec
lret
mov
xchg
push
je
push
imull
sbb
stos
mov
sub
addl
mov
cmp
fucomip
pop
dec
pop
jge
lods
push
sub
cltd
lods
pop
mov
add
jnp
xchg
es
mov
jo
stos
stos
and
and
mov
cmp
adc
test
pushf
inc
xor
xlat
jg
dec
dec
mov
xor
dec
lods
ret
testb
adc
inc
and
pop
in
test
stos
and
test
repnz
sahf
cmpsb
sbb
lahf
mov
mov
cmp
sub
mov
cld
sub
stos
fisttpl
pop
out
ret
shlb
out
push
rclb
adc
dec
push
or
mov
inc
sub
push
outsl
mov
adc
cmp
add
imul
test
icebp
popa
ss
push
and
cltd
cmp
inc
imul
sub
jae
test
data16
fidivrl
xorl
mov
adc
fists
into
stc
inc
mov
stos
sub
xor
jne
jl
out
lret
scas
fsubr
scas
fidivrs
movl
imull
ljmp
das
dec
jl
push
lret
data16
cmpsl
mov
fildl
out
pop
dec
jns
in
cwtl
mov
sti
bound
arpl
cmpsl
sub
daa
push
pop
stos
inc
movsb
push
jnp
std
mov
and
mov
arpl
sbb
pushf
nop
push
sbb
mov
rolb
lret
out
mov
cld
ljmp
jge
and
mov
sub
movsl
shrb
push
xlat
inc
mov
inc
sub
xchg
jmp
push
std
dec
sahf
push
push
add
sbb
mov
cmp
sarb
pop
xchg
insb
pop
pop
and
xor
pop
out
outsl
mov
loop
fldt
rcrl
jecxz
mov
push
hlt
mov
dec
mov
jl
and
in
sub
inc
std
cltd
mov
mov
cmp
sar
lock
pop
sahf
pop
cmp
cmc
or
push
xor
inc
push
mov
pop
imul
cltd
jno
aaa
into
lret
jnp
jns
pusha
adc
inc
imul
add
lods
push
arpl
mov
push
ja
jmp
out
loop
stos
pop
jo
pop
and
adcb
mov
fnstsw
jns
aam
fbstp
stos
inc
mov
mov
or
xchg
xchg
les
std
movb
hlt
das
in
jnp
dec
in
es
loop
outsb
scas
cltd
cmc
inc
sub
dec
sub
mov
aad
in
loop
fiadds
rcll
ficomps
sbb
adc
adc
in
fwait
mov
jns
cmp
mov
mov
pop
rorb
dec
lcall
xchg
push
push
mov
lods
cmp
push
jg,pt
rcl
icebp
shrb
or
sbb
inc
xorb
xor
pop
in
push
adc
sbb
into
lods
es
pop
fwait
pop
jecxz
imul
inc
movsl
fwait
adc
and
repz
fsub
pop
cltd
push
push
cmp
xchg
ljmp
test
jl
jb
and
inc
into
aaa
test
inc
xchg
mov
or
leave
das
out
and
ret
cld
and
adc
je
aaa
mov
test
fildl
mov
inc
lret
cltd
xor
push
pop
lret
out
xchg
mov
sub
xchg
and
mov
test
push
sbb
jo
sbb
pop
in
fs
sti
cmp
repz
stos
adc
or
push
pushf
inc
sbb
mov
xchg
pushf
lds
and
adc
sbb
cs
cmp
imul
mov
imul
add
xchg
jmp
sahf
testb
push
repz
jae
ficoms
jnp
into
push
testb
jle
mov
mov
cmp
mov
sbb
pop
call
xchg
cmc
sbb
and
shr
repnz
sbb
mov
ljmp
push
in
sbb
add
xchg
loope
push
fidivrs
lret
je
shlb
rorl
xlat
call
push
sahf
in
insl
test
pop
sbb
dec
mov
lds
stos
jno
pop
jge
outsl
shr
push
and
call
aas
dec
or
mov
mov
dec
inc
push
mov
or
xor
popf
sahf
in
mov
sub
loop
and
mov
insl
and
les
lret
adc
rorl
cmpsb
in
or
push
sti
add
and
mov
in
xlat
mov
mov
dec
loope
sahf
add
xor
stc
cld
daa
mov
dec
pop
sbb
push
add
jns
adc
das
mov
popf
adc
arpl
jae
mov
jmp
jnp
dec
mov
pop
aas
stos
and
andl
pop
push
or
inc
cmp
daa
fsubrl
mov
ja
inc
mov
xlat
push
mov
sbb
ss
aaa
cmp
mov
xor
mov
dec
or
lret
add
cs
push
js
and
ficoms
sbb
or
nop
ss
out
lock
les
xchg
pushfw
and
adc
test
dec
mov
jmp
mov
lods
push
inc
mov
mov
add
ja
lret
dec
or
lea
test
pop
test
xchg
in
jno
aam
lret
out
mov
leave
fwait
stos
imul
mov
cli
fs
lea
in
or
push
push
ja
mov
push
mov
fptan
insl
adc
sbb
lods
sub
jecxz
pop
fsubl
aam
sbb
js
int
notl
sbb
mov
lea
jle
rorb
mov
call
sahf
faddl
inc
ficomps
push
push
cli
push
ss
js
or
push
xor
mov
dec
jmp
fwait
push
mov
mov
mov
pop
call
xchg
jle
cmp
cmc
ret
push
mov
scas
xor
out
jae
adc
or
or
xchg
iret
test
and
mov
mov
addl
adc
pop
mov
pusha
mov
rorl
ret
cld
test
in
pop
cltd
jg
fiaddl
xlat
add
push
xchg
xor
pop
test
std
or
sbb
mov
adc
adc
inc
jmp
in
mov
out
pop
add
mov
add
fisubrs
mov
je
loop
pop
cltd
push
jp
in
popf
popa
test
fstpt
mov
insl
mov
sbb
lret
dec
rcll
mov
and
repnz
ljmp
pop
cmp
mov
and
pop
fidivs
pop
fistpll
push
sub
aam
ja
jns
jp
ret
mov
mov
xchg
jae
sbb
pop
sbb
orl
fwait
add
push
jle
shll
lret
jl
xchg
sbb
out
cli
add
daa
icebp
jecxz
xor
loope
pop
push
jge
aaa
dec
stc
out
jns
fs
or
das
cmp
adc
lret
aam
addr16
leave
out
repz
repz
cmp
aad
clc
lock
lock
cmc
xchg
xor
add
push
cmc
in
mov
and
xorl
add
dec
jg
push
repnz
push
jnp
push
in
dec
out
mov
fstp
filds
sbb
xchg
xlat
out
mov
mov
nop
sub
push
lret
jnp
sub
dec
mov
mov
call
test
push
outsl
adc
stos
std
pop
pop
repz
dec
js
sub
aas
loopne
loopne
scas
cmp
inc
shr
adc
adc
mov
lret
insl
ja
mov
sbb
icebp
sti
mov
or
add
out
sahf
jno
add
movsb
out
hlt
inc
sbb
loop
jo
jns
mov
sbb
and
mov
repz
xor
dec
gs
xor
add
push
mov
pop
sub
or
sub
in
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
not
push
mov
mov
movl
mov
push
movl
mov
movl
mov
push
not
mov
notl
mov
movl
cmp
movl
je
mov
mov
subl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
add
mov
mov
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
mov
jo
adc
sub
jl,pt
jle
mov
adc
adc
cwtl
jecxz
sahf
sbb
lahf
out
test
push
mov
lcall
ret
outsb
jge
jg
mov
jecxz
mov
scas
es
movb
lods
outsb
and
scas
cwtl
nop
cmc
stc
movsb
inc
in
mul
iret
push
xchg
or
mov
sarb
lret
and
mov
xchg
inc
mov
insb
pop
mov
jp
jns
inc
enter
icebp
loope
in
jmp
mov
mov
mov
cmp
inc
popa
dec
inc
movlps
outsl
aam
pop
mov
mov
imul
push
test
sub
aad
fsubrs
les
cmpsl
pop
das
pop
leave
sub
dec
push
mov
je
fwait
sub
in
rcr
xchg
cmp
xchg
jbe
movsl
stos
subl
mov
xor
out
repnz
xchg
inc
jne
jge
roll
add
xor
test
data16
out
dec
pop
mov
rcrl
lret
adc
adc
push
inc
int
pop
or
loop
clc
repz
or
jno
cmp
or
pop
add
aas
push
mov
add
jecxz
push
add
jg
mov
inc
sahf
cmc
jnp
sub
into
fwait
loopne
push
test
test
dec
js
xchg
jmp
aam
nop
dec
mov
ljmp
mov
mov
mov
movsl
pusha
cli
sbb
or
jo
or
pop
mov
and
add
push
cmp
adc
pop
int
pusha
cltd
adc
jnp
das
les
std
adc
popf
adc
fdivl
cmpsb
inc
cli
jecxz
cmp
loop
pop
or
loopne
xchg
cld
or
scas
pop
les
lods
lcall
test
jle
sub
mov
xchg
sbb
into
dec
adc
sub
sub
jnp
adc
add
cmc
xchg
aas
ret
fwait
rolb
bound
popa
gs
dec
pop
incb
add
xor
xchg
out
mov
mov
jmp
mov
mov
xor
add
jmp
orl
imul
adc
jle
jl,pt
jle
adc
sbb
int
notl
sahf
clc
pop
jnp
cmp
mov
mov
and
xchg
mov
push
mull
rorb
jmp
icebp
push
iret
pushf
xchg
cltd
out
bnd
cmp
lahf
sub
icebp
outsl
xor
sbb
pop
push
mov
or
xchg
sar
inc
fbstp
dec
cwtl
popf
add
inc
jmp
loop
add
jbe
es
pusha
cld
popa
pop
ds
scas
shl
push
inc
xor
sub
ljmp
xchg
es
jge
int
xlat
enter
bswap
sbb
icebp
ds
je
lods
shlb
dec
lea
sbb
sbb
sbb
mov
xchg
jno
cs
push
and
nop
mov
std
pop
push
ja
popf
and
jnp
pop
aaa
ds
sub
add
mov
gs
push
pop
inc
jne
or
jns
push
nop
mov
xchg
jne
mov
popf
jne
jno
roll
xlat
adc
mov
mov
aam
int
pushf
sbb
pushf
hlt
fwait
cmp
pop
mov
aam
cmp
mov
loope
insl
sbb
xchg
mov
fwait
add
add
add
mov
mov
xchg
and
or
outsb
adc
lahf
pop
sti
adc
lret
jmp
sub
mov
lret
sub
mov
mulb
xorl
sbb
sbb
scas
popf
inc
leave
xlat
bound
xor
loop
add
push
int
pusha
lock
movb
mov
or
cmpsb
mov
leave
mov
in
pop
and
loop
or
dec
pop
mov
shll
and
sti
cmpsl
pop
ja
jle
mov
pop
ret
outsl
xchg
mov
add
mov
xchg
adc
xchg
je
inc
divb
add
dec
test
pusha
adc
jno
sub
sub
push
mov
cld
popf
cmc
mov
dec
movsl
loop
fstps
cmp
jne
mov
xor
jmp
mov
loopne
adcl
sahf
jle
jl,pt
jle
lods
xorb
cltd
inc
or
mov
daa
addb
xor
or
cmp
xor
mov
movsl
xor
fisttps
test
jne
xor
aad
sbb
add
int3
test
dec
movsb
sbb
rcll
fldcw
xlat
pop
or
add
sahf
cwtl
adc
pushf
jnp
mov
negb
dec
call
out
in
imul
mov
xchg
cmp
mov
leave
pop
fdivs
fs
mov
sbb
cltd
jge
inc
cmc
mov
aas
leave
jmp
cmp
push
adc
mov
sbb
xor
adc
outsb
pop
xor
xchg
int
fmuls
xchg
and
not
mov
jge
xor
mov
stos
push
and
lcall
push
add
push
pusha
ret
insl
dec
mov
fistpl
dec
xor
pop
inc
cmp
imul
mov
mov
outsl
addr16
push
and
pop
fsubl
mov
adc
or
mov
xorb
cli
cmp
jecxz
ljmp
test
hlt
inc
fldl
fadd
cmp
out
shl
call
cmp
sbb
jae
inc
dec
dec
aaa
push
aaa
or
jg
ljmp
add
mov
ret
xchg
jb
jno
xchg
sbb
sbb
push
pop
dec
mov
lock
xor
out
pop
adc
push
jecxz
xchg
fisttpl
pop
inc
imul
mov
cltd
outsl
or
hlt
lret
and
xchg
mov
aad
mov
fxtract
add
mov
pop
adc
and
xor
in
mov
push
jmp
stc
mov
iret
dec
enter
pop
mov
movsl
inc
testl
inc
or
adc
pop
mov
cmp
lds
adc
inc
jp
mov
popa
jmp
ficoms
test
cltd
push
nop
divl
mov
mov
cmp
fistl
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xorl
jmp
push
inc
jb
jb
icebp
fisubrs
into
idivl
push
sbb
adc
jle
ficoml
push
jo
dec
gs
mov
mov
pop
stos
ret
fmuls
pop
repz
sub
sub
ja
lods
jo
shll
ror
mov
fldenv
lcall
outsl
mov
lods
mov
dec
inc
mov
pop
push
xorl
sbb
subb
out
fcmovb
sbb
out
inc
pop
rcrl
hlt
adcb
fsubs
mov
adc
stos
xor
icebp
inc
jae
imul
xchg
xchg
cld
dec
mov
or
out
jg
dec
mov
fiaddl
addr16
lret
sahf
faddp
lods
stos
test
gs
xor
xor
mov
out
enter
mov
or
shlb
mov
arpl
scas
inc
pop
xor
pushf
mov
bound
cld
and
push
lods
sahf
fistps
push
adc
sbb
loope
fwait
popf
mov
or
and
mov
bound
adc
into
push
push
xchg
testb
ss
add
subl
push
or
mov
jmp
cmp
shll
xor
stos
cmp
sub
pop
popf
jle
adc
jle
out
sbb
xor
scas
outsb
xlat
xor
rcl
int3
fiadds
xlat
xor
icebp
xlat
mov
aas
cmp
fs
sbb
jb
inc
sub
xchg
aam
inc
push
mov
sbb
lret
fsubp
bound
jnp
scas
divb
sub
jmp
hlt
es
daa
jmp
cli
std
das
ljmp
add
lods
dec
stc
add
out
mov
enter
jg
jp
fs
mov
insb
adc
into
pop
jl
pop
in
insl
or
dec
xor
push
jge
lea
jl
test
in
mov
cmp
mov
xor
add
mov
mov
imul
stos
loopne
xchg
fld
mov
daa
sub
add
out
das
adc
pop
repnz
mov
cld
cmc
adc
push
or
add
add
test
sbb
outsb
mov
outsb
xor
adcl
mov
xorl
add
push
jmp
pop
jecxz
call
and
out
mov
arpl
jle
adc
jle
icebp
adcl
les
push
xlat
pushf
or
pusha
jo
cmp
pop
insl
mov
in
adc
jl
pop
call
sub
dec
adc
dec
xor
add
dec
xchg
adc
shll
mov
inc
push
add
mov
xchg
rol
cmp
pop
loope
pop
aad
mov
test
push
lret
jp
mov
mov
cmp
cmp
mov
jge
xchg
cmp
repnz
sbb
or
lret
pop
stos
out
or
dec
enter
stc
jnp
test
outsb
push
out
jmp
popf
xor
fcomip
test
sti
movsb
sbb
fs
dec
adc
je
xor
cltd
cmp
insl
pop
sahf
outsl
movnti
pop
lahf
aad
jg
cmp
ja
push
push
sti
dec
push
bound
iret
xchg
add
lds
push
adc
sub
test
cltd
inc
das
adc
dec
out
inc
popa
aaa
or
lds
mov
mov
incl
xor
addl
movl
movl
decl
add
movl
jmp
cmp
jne
movzbl
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
xorl
andl
mov
addl
sub
xorl
push
sbbl
mov
movl
add
push
call
movl
incl
cmpl
movl
jb
movl
jmp
movl
cmp
movl
jne
movzbl
and
movl
addl
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
ret
mov
cwtl
jle
adc
jle
push
ret
pop
dec
and
in
push
dec
add
fcoml
mov
xorb
pop
insb
loop
xchg
repnz
dec
xchg
inc
test
add
xor
shll
pop
dec
mov
cmp
mov
jb
adc
pushl
mov
test
cmp
sub
lods
ret
lods
cltd
pop
jne
ja
xchg
out
fsubrl
test
xchg
stos
popa
dec
enter
mov
popa
ljmp
mov
pushf
mov
imul
adc
mov
cltd
je
call
jae
and
mov
in
movsb
sub
add
pop
cmc
bound
xchg
test
xchg
cmp
mov
push
jge
lea
in
sbb
inc
mov
lret
cmp
fptan
in
cli
loope
or
scas
push
mov
ret
push
mov
cli
iret
arpl
bound
lods
xchg
js
outsl
ret
lds
call
lods
popa
loope
ret
mov
orl
xor
add
sbbl
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
jmp
shlb
sub
mov
jle
adc
jle
insb
mov
out
adc
rcr
mov
push
stos
cmc
inc
xchg
lods
inc
flds
scas
int3
jo
add
lcall
sbb
scas
mov
cmp
xchg
ret
mov
lea
sub
aam
dec
inc
xor
fwait
xor
lret
loop
sbb
mov
push
xlat
dec
inc
xor
push
inc
pop
js
push
xorb
push
sbb
add
adc
inc
das
dec
jae
xchg
insb
or
rolb
push
adc
jmp
xor
pushl
pop
testl
jne
push
cli
loope
xchg
jns
bound
cld
or
std
roll
xchg
jns
aaa
mov
test
and
loope
sub
mull
push
or
ds
mov
push
pushf
push
inc
sub
loop
sub
pop
stos
popa
adc
lret
fnstsw
jmp
dec
adc
lahf
xchg
mov
mov
mov
jmp
jb
lods
ljmp
mov
into
cmpsb
jle
adc
jle
bnd
es
in
mov
push
insb
jecxz
or
rcrb
mov
and
mov
lods
test
movsl
xchg
test
mov
jge
mov
popf
lods
mov
jbe
mov
insl
inc
fmull
mov
mov
lods
emms
lahf
cmc
fwait
xchg
mov
cmp
imul
pushl
into
cmpsl
and
mov
xchg
sbb
sub
cmp
adc
sti
nop
rorb
mov
jle
or
push
fisubs
jb
sahf
mov
repnz
ljmp
jmp
js
xchg
adc
stc
loopne
sub
cmp
add
imul
mov
imul
and
cwtl
cld
nop
rcrl
aad
popa
jns
mov
cmp
orl
fidivrl
cpuid
xor
xor
dec
in
jno
sbb
pop
sbb
and
in
test
push
insl
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
xor
xchg
das
push
jne
loope
jecxz
loope
sbb
mov
cmpsl
jle
adc
jle
sub
sbb
cltd
test
mov
leave
add
push
mov
out
xchg
jb
push
in
jne
jns
es
dec
sbb
scas
xchg
inc
adc
push
fdivl
shlb
fwait
xchg
testb
outsl
out
in
bound
mov
fldenv
int
sbb
lcall
loope
xchg
add
dec
or
xor
and
mov
and
cmp
sub
inc
inc
inc
xor
mov
data16
aad
mov
por
push
push
push
pusha
xchg
test
insl
scas
xchg
pop
notb
rorb
mov
or
in
adc
test
lret
dec
or
call
cld
adc
mov
in
div
mov
insl
add
cmp
xor
js
jnp
jle
jo
sub
stc
sub
mov
lods
adc
test
and
adc
cmp
decl
pop
jmp
movsl
sbb
loope
icebp
mov
jns
add
or
jg
jle
mov
and
shrl
pop
jo
pop
imul
test
fnstenv
pop
jge
ss
mov
aaa
insl
jmp
aad
sbb
sub
pop
adc
dec
pop
sbb
mull
out
sahf
xchg
cltd
adc
push
sbb
gs
push
scas
in
push
mov
imul
cmp
or
sbb
sub
xchg
jmp
call
lods
sub
sub
cs
sbb
fstpl
xor
push
inc
stos
cmp
test
out
lcall
std
pop
mov
das
lods
cwtl
addr16
scas
lahf
iret
mov
enter
sbb
dec
cmp
cltd
insb
mov
add
shlb
out
mov
xchg
mov
rolb
push
adc
or
push
icebp
adc
fld
jg
jns
pop
add
jnp
mov
pop
ds
popa
push
push
mov
dec
adc
ret
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
push
movl
sbb
movl
mov
push
add
mov
adc
mov
jmp
imul
mov
jecxz
sbb
ljmp
push
jg
jle
jmp
or
mov
cmp
popf
pop
bound
gs
imul
data16
xor
flds
popf
cs
xchg
sub
pushf
and
lahf
aam
mov
mov
mov
pslld
push
scas
sub
cmp
inc
cli
fldcw
mov
out
bnd
jl
pop
cli
cmp
dec
jns
andb
cmpsl
mov
lods
sub
pop
cmp
mov
movb
dec
fcmovnbe
xor
cltd
lcall
xchg
pop
fs
ret
push
inc
and
and
pop
out
pop
subl
bound
ret
jmp
mov
lahf
out
cmp
sub
or
rorb
and
and
mov
inc
inc
and
jbe
loopne
jge
jnp
inc
repz
fmulp
mov
js
outsl
mov
adc
aad
pop
scas
and
lret
jne
movsb
pusha
imul
ficoml
gs
cmpsb
test
nop
xlat
sti
in
fwait
lret
gs
das
les
dec
adc
and
jbe
mov
mov
adc
xor
push
and
push
or
or
test
roll
mov
in
pusha
mov
dec
insl
mov
push
stc
mov
aaa
es
pop
out
gs
pop
in
jo
mov
xor
dec
and
movsb
leave
mov
test
popa
orb
cltd
aam
jne
adc
mov
adc
dec
push
aaa
mov
inc
lret
lock
push
add
adc
movsl
test
pop
pop
jge
sbb
lret
in
mov
push
ss
add
repnz
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
jmp
mov
push
jno
mov
ja
sbb
lock
jle
ficompl
adc
cmp
add
and
mov
adc
mov
into
add
aad
into
lods
insb
fnstenv
test
pushl
sub
adc
or
and
fbstp
adc
or
jae
out
das
mov
pushf
ret
shlb
hlt
insl
loopne
cmpsl
sbbl
fwait
pushf
lret
rep
lock
pop
cltd
push
xchg
cwtl
cltd
pop
adc
lock
push
xor
test
cltd
pop
pusha
or
pushl
mov
test
mov
pop
ljmp
inc
mov
dec
mov
ss
mov
popa
dec
dec
cmp
fwait
outsb
cld
leave
sbb
pop
stc
sbb
stos
sahf
jp
fcmovnb
test
xchg
mov
ss
jo
cld
mov
jg
inc
cmp
cld
sub
add
fildll
jmp
mov
jecxz
test
lahf
mov
and
clc
push
cmpsl
push
outsb
xor
add
pop
sub
and
fadds
adc
mov
insb
lcall
cmp
out
gs
push
das
cmpl
leave
repnz
pop
ret
jg
dec
sub
cs
pop
add
and
inc
xchg
cmp
or
mov
pop
lcall
sub
ret
aad
negl
xor
dec
imul
mov
sbb
aas
sarb
xor
repz
stc
adc
test
ljmp
jge
mov
pmullw
gs
or
outsb
pop
xchg
imul
jmp
sub
push
jle
sub
inc
or
leave
ret
push
mov
push
push
incl
jmp
inc
iret
scas
mov
jno
sub
jmp
jle
jge
jle
mov
mov
mov
rcr
hlt
movsl
jecxz
jge
out
test
test
incb
mov
pop
ss
sar
cwtl
mov
push
pushf
and
push
dec
repnz
hlt
inc
movsb
xor
in
push
rclb
jns
inc
pop
cmp
leave
or
fdivl
mov
and
adc
cmp
xlat
dec
dec
icebp
cmc
js
bound
add
sti
add
xchg
mov
pop
xchg
push
lret
cmp
lea
push
cmp
sahf
and
or
jle
out
test
scas
fcmovne
sub
pop
shl
flds
cmp
sub
sarl
mov
in
pop
push
lods
rorl
je
dec
xchg
mov
out
adc
adc
ret
push
subb
and
pop
cli
fisttpll
cmp
pushfw
adc
int3
nop
add
jb
xchg
insb
dec
push
cmc
int
mov
leave
loope
insb
push
adc
mov
outsb
and
nop
jb
dec
push
int3
out
and
or
cmpsb
mov
cmp
push
push
cmc
pop
xor
movb
fmuls
push
inc
jae
scas
xchg
repnz
cmc
cmp
lret
jbe
cmpsb
jg
ficompl
push
in
out
in
pop
push
mov
xlat
cmp
or
fs
dec
test
je
decb
shr
jne
clc
stos
mov
js
jmp
sub
stc
xchg
mov
rcll
clc
sbb
cltd
lds
adc
aaa
ret
stos
les
dec
mov
xor
das
inc
push
test
pop
mov
push
pop
sbb
std
sbb
mov
popf
jae
test
cli
dec
nop
enter
cmpsl
ret
mov
clc
push
xchg
jmp
inc
mov
jecxz
call
in
or
jmp
mov
sub
adc
sub
stos
insb
clc
cmovl
push
movsb
jnp
xor
push
or
and
dec
mov
add
push
sti
and
cmp
loopne
mov
lcall
cmp
mov
pop
fs
sub
push
lds
mov
add
cwtl
in
shl
outsl
mov
int3
notl
test
js
shll
rorl
in
mov
add
in
stos
mov
push
mov
jbe
jno
and
ljmp
or
pop
mov
into
mov
and
jmp
sti
ds
add
popf
and
sti
lods
push
mov
adc
decb
insl
negl
cmc
rcll
nop
pop
mov
ljmp
das
adc
adc
rcll
fistpll
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
mov
adc
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
and
sbb
push
jo
dec
add
cmp
lods
jle
jl
jle
les
pop
push
jmp
in
imulb
or
and
insb
in
mov
scas
adcl
xchg
addl
cli
andl
mov
pop
push
dec
gs
push
or
mov
nop
push
add
pop
or
je
jecxz
mov
in
push
add
je
mov
rol
gs
push
jle
outsl
stos
fnsave
insl
push
pop
scas
adc
dec
mov
cs
ljmp
es
call
mov
je
and
push
fistps
cwtl
mov
test
lods
rolb
inc
mov
les
shl
pop
add
mov
testl
mov
rcrl
push
test
outsl
mov
roll
dec
sbb
out
out
or
ret
push
leave
popa
mov
mov
jo
jb
cmpsl
dec
in
xchg
jae
mov
sbb
mov
push
jmp
jnp
sbb
dec
mov
es
jb
fsubrl
and
mov
int3
negl
cmp
inc
sub
int
sbb
push
aam
in
mov
inc
and
mov
subl
enter
out
push
dec
mov
test
xchg
dec
mov
add
push
test
enter
xchg
jmp
repnz
adc
std
or
leave
inc
jae
jecxz
pop
ds
push
mov
addr16
mov
and
ret
int3
lods
jns
and
push
dec
push
push
sub
repz
xchg
subl
mov
push
push
out
jmp
and
out
les
mov
mov
mov
inc
ret
mov
pop
movsl
adc
and
xchg
int
fsubrl
pop
push
pop
push
mov
aaa
jb
movsl
push
jne
ds
jmp
lock
xor
out
lret
scas
inc
pop
mov
inc
and
mov
cwtl
mov
call
fidivrs
or
add
jge
stos
popa
in
pop
xchg
sbb
push
mov
scas
inc
push
push
addr16
sahf
xchg
xchg
movsb
enter
add
xchg
ficomps
jg
mov
out
pushf
and
ljmp
jecxz
je
xchg
cli
pop
adc
push
cmc
cmc
lds
xchg
sub
cmp
dec
xchg
ja
mov
mov
in
cmp
scas
push
adc
cltd
push
jae
mov
and
orb
mov
add
xlat
cs
fcompp
dec
mov
pop
rol
sar
out
je
pop
mov
xor
aaa
out
jae,pn
out
push
in
ret
bound
out
mov
mov
pop
clc
pop
rolb
xchg
jge
dec
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
andb
in
loope
arpl
adc
repnz
jle
mov
lds
jne
dec
inc
andb
adc
fisttps
inc
shrb
cmp
call
cmpsl
and
imul
and
ret
or
inc
jge
push
jns
xor
and
or
mov
hlt
loope
aam
jmp
shll
lock
jbe
adc
pusha
jg
mov
adc
out
mov
jnp
jae
out
inc
rclb
faddp
mov
cmc
inc
inc
push
jg
xchg
sub
xchg
ja
das
xor
sub
fs
mov
jle
lds
rclb
add
nop
mov
cmp
lret
pop
cs
push
out
hlt
sub
mov
jne
jns
adc
cmp
popf
dec
add
cli
int3
lcall
loop
add
mov
shll
popa
pop
xor
imul
fisttpl
enter
sti
clc
ja
lahf
cld
stos
pop
or
mov
cs
orl
dec
inc
je
push
lds
jns
test
xchg
push
adc
fcoml
ficompl
add
in
enter
loopne
dec
xchg
js
mov
cmp
call
pop
loop
jmp
adc
roll
sbb
sub
lret
xlat
xchg
mov
and
mov
nop
pop
mov
xchg
data16
test
cmpsb
subb
mov
out
data16
pusha
out
pop
lods
int3
mov
mov
mov
icebp
jae
push
div
lea
test
inc
and
cltd
xchg
js
mov
inc
je
xor
popl
out
mov
orb
and
fs
or
std
xor
loop
popl
jb
movsl
in
push
in
adc
pop
faddl
movsl
lock
icebp
dec
arpl
sub
push
jl
daa
outsb
popa
sti
repz
dec
adc
test
push
push
dec
mov
iret
shll
cs
mov
xchg
push
insl
xchg
mov
data16
dec
movsl
mov
les
leavew
inc
mov
cmp
loope
stc
ja
or
xchg
sub
ret
inc
incl
jno
adc
aam
arpl
sarb
mov
push
add
icebp
dec
or
lds
int3
je
hlt
loopne
cmp
inc
pop
add
dec
mov
arpl
sub
aam
adc
push
xchg
xor
loop
movsl
clc
hlt
sub
push
iret
jg
mov
inc
inc
xchg
hlt
add
lea
imul
test
mov
sbb
mov
and
push
and
inc
and
lret
lock
mov
jmp
pop
pop
xlat
into
mul
push
lcall
lcall
xor
leave
ret
push
mov
jmp
shll
jno
aad
xor
pop
adc
shlb
jle
aad
bound
pop
jo
pop
bound
inc
repz
mov
adcb
push
shlb
js
xchg
and
loope
mov
pop
pop
sub
hlt
mov
or
js
stos
lret
popf
push
popf
lods
fnstenv
inc
pop
add
mov
cli
push
imulb
inc
jle
int3
add
ret
in
out
inc
daa
in
adc
faddl
jmp
pop
fistpl
int3
fisubs
pop
cmp
out
sahf
or
push
mov
and
mov
fisttpll
and
jl
cmp
adc
pop
and
outsb
mov
mov
pop
dec
xor
dec
pop
xor
fwait
sub
addr16
int3
cmp
lret
in
push
push
roll
xor
xchg
movsb
pop
mov
stos
xor
mov
push
mov
mov
cmp
sub
sbb
adc
imulb
mov
dec
sbb
ret
andb
sub
in
in
jae
adc
push
icebp
xchg
jle
scas
add
xchg
jle
ds
rorb
sub
fsub
inc
sbb
daa
push
mov
repz
movsb
lds
ljmp
mov
shll
mov
xchg
out
shlb
cmpsb
ror
push
sbb
data16
mov
pushf
stc
mov
int3
push
gs
cmp
jae
adc
in
sub
inc
add
in
cmpsl
popl
xor
js
pushf
sbb
and
push
in
cmp
xor
xchg
or
add
jle
jnp
movsb
ret
push
es
adc
sub
mov
fsubrp
lds
mov
lahf
cmc
insb
sub
mov
aas
out
aaa
aaa
cld
sbb
nop
jno
sub
cmpl
insl
fnstcw
or
mov
dec
sub
addb
and
add
outsb
pop
inc
adc
cld
mov
je
mov
mov
test
ret
dec
rorb
ljmp
add
xchg
push
addr16
xor
jbe
test
jge
dec
mov
loope
sbb
mov
add
adc
inc
xchg
jl
inc
jb
imul
and
jb
sahf
popa
mov
jb
test
dec
sbb
xor
fstl
push
aam
out
pop
sub
jmp
cmp
jae
or
mov
pop
les
xor
mov
xchg
xchg
and
icebp
rolb
push
cmp
xchg
lret
mov
outsl
sub
pop
mov
jnp
add
adcb
sub
adc
dec
and
pop
inc
jg
adc
lret
mov
dec
lcall
lods
jmp
sarb
jmp
or
pop
jno
xchg
add
jmp
fidivs
jle
add
mov
pop
push
fdivrl
stos
add
inc
pop
jae
sbb
sahf
mov
sub
mov
jns
in
cmp
push
add
push
push
push
pusha
int
aam
pop
leave
out
fsts
pop
cmp
fcompl
mov
xchg
leave
push
cmc
in
das
push
int3
sbb
mov
pop
inc
add
adc
jmp
popa
lret
sub
mov
push
sbb
inc
sti
cmp
fwait
dec
int3
std
fildl
in
jmp
leave
mov
mov
rcrb
maskmovq
divl
inc
mov
jb
mov
mov
adcl
insb
push
lcall
sub
mov
lods
out
cmp
inc
jns
pop
push
jecxz
sub
shll
xchg
xchg
rcr
test
js
daa
jns
arpl
sub
dec
cli
sbb
push
xchg
or
push
mov
xchg
insb
jmp
mov
inc
loope
push
stc
cmp
pop
fisttps
out
mov
or
jns
pop
add
adc
stc
insl
lcall
cld
rcl
rorb
stc
and
sub
or
movsb
call
jecxz
jb
sarl
pop
dec
xor
pop
mov
mov
hlt
mov
movsb
loopne
xchg
add
pmaxsw
push
lock
push
gs
pop
lea
dec
das
mov
mov
into
not
adc
adc
loop
imul
movsb
in
and
and
push
sub
and
jmp
inc
inc
or
dec
dec
xchg
cmp
lock
mov
scas
sub
stos
inc
jle
fsubrp
mov
add
mov
lahf
sub
sarl
push
inc
fs
cmc
es
inc
adc
lds
mov
sbb
in
sub
mov
leave
insl
bound
push
js
and
lock
and
enter
insl
sti
xor
sbb
mov
je
aas
xchg
cli
stos
mov
and
and
ss
sub
enter
or
cli
mov
js
lods
cmp
dec
fcomp
test
lock
xchg
mov
mov
dec
push
mov
mov
lods
xchg
addr16
jmp
mov
cmp
stos
adc
lahf
pop
mov
xchg
jecxz
or
lahf
arpl
int
xchg
enter
mov
push
shll
lods
and
arpl
cwtl
push
mov
adc
add
sahf
pop
inc
das
mov
js
lea
push
daa
xchg
push
in
mov
fistl
jb
push
xor
mov
push
sbb
xchg
mov
xchg
adc
iret
mov
adcl
sti
jns
daa
in
lcall
cmpsb
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
orl
add
xorl
movzwl
and
mov
xor
xor
or
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
subl
xor
xorl
sub
mov
movzwl
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
sub
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
jmp
cltd
outsb
mov
outsl
or
push
out
not
fdivl
scas
jl
jle
add
xchg
inc
xor
mov
insl
jp
and
push
sub
xchg
rcl
mov
mov
repnz
dec
dec
jp
testl
dec
jns
inc
rorl
ja
jb
js
jge
jno
and
andb
mov
out
pop
cli
adc
scas
shrb
insl
add
dec
or
scas
xchg
sbb
sbb
xchg
push
rclb
jb
js
out
aad
push
pop
push
mov
xchg
stos
aam
hlt
roll
xchg
andb
enter
inc
lods
inc
call
popf
sbb
andl
or
rcll
pop
inc
pop
repnz
xchg
dec
repnz
sbb
mov
lock
mov
test
xor
lock
jb
adc
sbb
cmp
adc
cmp
outsb
xor
ds
scas
sub
dec
mov
movsb
ss
mov
cmp
fucomp
js
mov
adc
adc
and
lods
mov
in
lods
ret
adc
addb
sub
out
sub
ljmp
push
test
mov
shl
xchg
dec
fstpt
je
stos
and
fisttps
sbb
pushf
add
out
jb
sub
sbb
sbb
cmc
sysenter
cmp
shlb
das
jecxz
mov
add
fistpll
mov
out
xor
xchg
push
adc
aaa
outsb
sbb
xchg
inc
popa
aaa
mov
mov
orb
jl
lret
mov
stos
popa
inc
inc
bound
shrb
sahf
cwtl
push
je
mov
xchg
dec
testb
sbb
sub
icebp
cmp
testb
dec
sbb
out
sbb
push
loope
lahf
hlt
in
std
cs
cs
pop
cmp
and
outsb
nop
xor
out
loopne
and
negl
sbb
push
xor
jo
test
pop
movsl
dec
sub
int3
or
hlt
jg
int3
fdivs
out
test
out
sbb
arpl
sbb
dec
xchg
into
push
mov
xorb
test
cmp
xchg
mov
aaa
push
sub
xchg
push
pop
inc
popa
adc
test
lods
ss
sbb
ds
adc
js
or
sub
jg
sub
shrb
sub
lds
inc
or
aam
lods
cmp
inc
hlt
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
mov
icebp
mov
and
or
jl
jle
sbb
add
jmp
mov
out
repnz
test
cmp
or
and
sbb
aas
adc
jae
sub
xor
mov
and
jo
lret
xchg
cmp
xchg
test
xor
sbb
adc
and
or
xor
in
in
aam
loop
jg
xchg
outsb
scas
xor
fsub
in
repnz
adc
push
movsb
shlb
mulb
cli
push
mov
add
lahf
push
aaa
xor
ja
sub
mov
add
cs
test
and
out
pushl
mov
pop
out
jne
nop
jae
icebp
inc
les
xchg
int3
cli
aam
inc
test
and
int3
in
enter
lods
sarl
xor
jg
in
shll
aas
fisttps
lahf
push
test
add
push
push
pushf
daa
mov
test
jmp
imul
js
iret
inc
push
movsl
sbb
cmp
sbb
dec
jmp
dec
mov
xor
cmc
mov
lea
xchg
lret
loope
adc
nop
or
or
mov
cmp
cltd
xlat
imul
and
and
loop
xor
xchg
inc
xchg
mov
xor
xor
push
outsb
in
insl
mov
pop
mov
cmc
imulb
push
les
call
cmp
and
add
bound
mov
ror
dec
insb
aas
jnp
stos
and
loope
pusha
cmp
aam
jecxz
push
loope
cmpsl
adc
cltd
loope
aad
add
sub
pop
jnp
jecxz
fadds
pushf
leave
sub
clc
rcl
xchg
mov
xchg
and
cmp
xor
or
in
xchg
cmpsl
ret
sub
shlb
add
adc
scas
mov
ret
subl
inc
stos
jne
mov
pop
pop
adc
push
xor
imul
push
jo
flds
out
and
push
fnstenv
lods
adc
mov
out
inc
loopne
pop
stos
ret
jbe
push
and
movsl
mov
mov
gs
cli
enter
cwtl
std
lock
mov
lea
push
pop
pop
lret
dec
mov
popl
cmp
insb
cmp
sbb
sbb
call
adc
pop
pop
out
clc
enter
inc
xchg
jae
cmp
jnp
add
lret
mov
lret
jmp
add
fdivl
lock
xchg
pop
fisttps
inc
mov
jl
jle
dec
push
rcll
out
fidivrs
xor
lret
jge
ror
xchg
inc
pop
pop
shlb
jl
and
cmp
jecxz
cs
dec
fsts
popf
mov
les
test
inc
jno
nop
push
das
popf
daa
add
inc
clc
cmp
jmp
mov
mov
jo
mov
repz
jle
xor
sahf
dec
hlt
out
cltd
lcall
stos
push
fst
xchg
leave
sub
jno
mov
inc
stos
jecxz
rcl
push
ror
add
mov
mov
jg
cwtl
mov
pushf
jmp
cmp
jle
jo
and
test
adc
mov
lret
mov
dec
dec
pop
stc
lahf
push
push
orl
jle
xchg
xchg
loop
jo
and
out
in
adc
xchg
cli
pop
cwtl
int
fnsave
mov
lret
inc
js
mov
lahf
icebp
in
call
mov
or
xor
dec
addr16
xlat
mov
loopne
jnp
movsl
jae
cmc
xor
jnp
cli
cmp
sub
or
add
scas
sub
repz
push
bound
mov
sub
cmpsl
pop
insb
mov
inc
xor
roll
ds
adc
inc
lcall
pop
jge
jb
sbb
and
cmp
inc
sarb
nop
pop
sbb
mov
mov
das
push
ss
sub
cwtl
sarl
call
addl
sbb
imul
dec
adc
dec
jb
imul
mov
loopne
dec
leave
sub
in
hlt
arpl
sub
xchg
add
rcl
mov
mov
ficoml
movsb
jp
out
xchg
jne
or
mov
cmpl
in
jl,pn
call
testb
in
adc
andps
and
cmp
push
test
in
stos
int3
or
push
out
fisubl
and
mov
adc
into
push
dec
xlat
push
push
fnstsw
out
mov
jmp
and
movsb
imul
or
enter
call
mov
pop
loope
jnp
mov
mov
mulb
push
jb
jle
repz
das
push
mov
mov
loop
movsb
loop
lock
daa
mov
out
sbb
out
jge
xchg
addr16
mov
push
fsts
jp
cmp
shl
add
add
add
push
push
lock
outsb
dec
mov
shr
mov
jle
push
les
and
popa
sub
mov
push
ja
adc
xchg
mov
pop
das
dec
js
bnd
inc
or
fistpll
das
repz
mov
stos
fcomps
mov
fwait
mov
ljmp
rolb
mov
or
push
pop
jge
cs
test
jnp
cmp
aas
push
insl
mov
fs
jl
and
adcl
psubw
out
cmp
clc
test
les
pop
dec
mov
push
inc
jge
test
insb
xchg
int3
shll
sarl
cmc
mov
jno
cmp
ja
aaa
xchg
popa
mov
icebp
imul
push
mov
idivb
cmpsl
hlt
or
ret
push
pop
ss
arpl
adc
jb
xchg
test
jle
int3
push
pop
or
inc
out
lea
and
pusha
in
fists
pop
adc
add
jnp
xchg
mov
push
outsb
or
pop
mov
and
mulb
sbb
xchg
mov
or
dec
jbe
ror
insb
xchg
test
loope
adc
pusha
cwtl
lods
sub
inc
mov
lea
adc
mov
sub
mov
xchg
hlt
mov
jno
std
sub
lahf
inc
sbb
test
xchg
and
dec
xchg
inc
imul
js
xchg
mov
lods
sub
mov
lahf
pop
addr16
inc
repz
int
inc
fisttps
xorb
mov
ror
shrl
and
pop
and
and
sbb
dec
popa
adc
hlt
cmp
push
dec
sahf
out
je
rorb
mov
aam
mov
dec
jae
lock
jno
hlt
xor
or
sbb
inc
std
addb
cmp
rolb
and
inc
mulb
rcl
ja
add
fidivl
in
repz
xchg
out
cmp
lods
jle
add
cli
jl
xor
jnp
inc
addr16
pop
rolb
scas
jae
xchg
mov
inc
rcrl
loope
dec
lods
dec
stos
cwtl
test
popf
int
dec
mov
mov
push
movsb
dec
dec
sbb
lahf
jle
inc
mov
data16
mov
add
pop
and
mov
fisubrl
loop
mov
sbb
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
jmp
push
dec
push
imul
and
loope
adc
sbb
jle
jl
jle
jb
ja
mov
pop
jg
inc
mov
cltd
pop
xor
std
xor
sarb
jecxz
sub
add
xor
testl
orb
sahf
push
add
clc
jno
add
and
out
int3
mov
jecxz
es
outsb
pop
je
mov
roll
jg
int
xchg
push
add
ja
in
or
sar
loop
fsubl
insb
leave
inc
xorl
push
aas
mov
addl
stc
add
gs
and
negb
stos
add
push
mov
jns
daa
clc
aad
shl
dec
sub
je
inc
fnsave
push
mov
inc
mov
dec
xchg
cmp
rcl
fnsave
pop
cmpb
jb
mov
mov
jle
jbe
nop
jl
dec
dec
pushf
cwtl
xlat
fsin
jo
cwtl
jp
mov
orl
dec
cmp
fwait
cli
push
mov
leave
add
cmp
lret
sahf
jo
rcrb
xchg
aaa
inc
dec
sbb
dec
push
sbb
sti
add
test
sub
lea
xchg
cmovo
shrb
daa
stos
icebp
mov
stos
xchg
push
inc
xchg
test
push
sti
call
fs
insl
out
adc
test
into
btr
dec
adc
push
pusha
xor
add
or
movsb
inc
std
inc
mov
rolb
jae
sbbl
add
sub
ljmp
jae
les
or
popa
and
mov
dec
mov
addr16
shl
loope
inc
or
gs
pop
push
add
fistps
mov
push
xchg
lcall
add
aad
cmp
das
pop
loopne
mov
add
mov
lret
xorb
jecxz
xchg
cltd
jne
movsl
scas
shrb
out
fs
adc
call
es
jge
mov
fisubs
std
out
out
mov
mov
das
and
ficoml
xchg
cmp
fs
mov
jp
cli
or
aam
pop
inc
mov
loop
and
mov
inc
cltd
loope
inc
inc
pop
stos
xor
out
mov
repz
es
addr16
push
ja
push
rol
and
cmp
ljmp
inc
je
adc
jl
sub
sbb
aam
mov
shll
pop
inc
jle
hlt
dec
aas
in
test
add
add
inc
call
lea
mov
mov
addl
mov
jmp
sub
or
lock
inc
mov
jo
mov
jle
scas
jl
jle
mov
inc
adc
shrl
inc
loope
insb
enter
xor
outsb
pop
test
cmpsb
or
insb
and
inc
loop
fistps
notl
call
adc
or
ret
jge
cmp
insb
outsl
std
push
adc
mov
mov
je
int
inc
sbb
std
mov
mov
add
sbb
cmp
xor
incb
pop
mov
int
pop
dec
jle
inc
pop
jecxz
leave
outsb
pop
cld
add
add
push
dec
cmpxchg
nop
inc
loope
aas
mov
movsl
call
mov
sub
fsubrp
xor
xor
mov
jge
mov
ret
adcl
daa
or
popa
add
cld
jae
mov
cmc
cmp
or
aaa
imul
lahf
ret
pop
dec
clc
loop
repz
aas
decb
popf
rorl
mov
rcr
adc
jnp
push
mov
push
add
xor
loopne
lahf
dec
sbb
pop
or
iret
pop
je
dec
push
test
sub
and
pop
enter
xchg
sbb
and
lret
pop
out
rcl
add
xchg
sbb
nop
jne
js
sub
cs
xor
cmc
or
jae
mov
adc
xchg
es
push
int
add
sub
sti
adc
xor
movsl
mov
stc
xor
adc
xlat
je
inc
dec
sbb
test
push
cmpsl
fwait
sahf
dec
daa
repz
push
adc
pop
mov
ja
imull
mov
in
push
sub
or
push
mov
jecxz
in
clc
xorl
pop
xchg
stos
cmp
movsb
sub
xor
cmp
in
fucomip
or
add
inc
dec
clc
mov
arpl
pop
aam
fbstp
push
and
adc
mov
cmp
insb
mov
add
andb
add
jge
ret
jmp
fmull
fstpl
popf
pop
subl
mov
es
je
mov
cmpsl
cmc
hlt
shlb
in
jmp
call
sub
and
inc
aas
shrb
out
shr
mov
cmp
push
jecxz
mov
jp
mov
adc
imul
mov
mov
or
jne
add
mov
sub
pop
adc
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
jmp
mov
xor
in
leave
outsl
cld
in
out
inc
jle
movsb
jg
jle
mov
jp
cmp
fsubrs
int3
mov
fisubs
shlb
movsl
pop
pop
xchg
sub
enter
aaa
icebp
push
mov
dec
mov
das
nop
pop
dec
xchg
loopne
adc
hlt
lods
rclb
jne
jge
mov
mov
shlb
mov
cmpsb
mov
jb
mov
cmp
iret
outsl
and
das
ret
cmp
iret
js
or
stc
xor
lret
cmp
mov
adc
iret
inc
or
ljmp
in
xor
cltd
data16
out
rolb
cmp
inc
and
test
int
pop
push
jmp
cltd
ret
aas
outsl
stos
cld
adc
test
cltd
in
fwait
test
mov
and
leave
sti
sbb
aas
andb
aam
sbb
outsb
xor
sbb
pop
data16
fstps
sbb
dec
dec
sub
flds
adc
mov
mov
sti
pop
jno
xchg
xchg
pusha
jg
es
lds
cmp
or
insl
mov
lcall
push
pusha
popf
sbb
ss
xor
in
fsubl
xchg
popf
mov
leave
in
outsb
imul
or
in
nop
in
cltd
xor
ud0
adc
push
cmc
fbld
xchg
jmp
aam
adc
inc
lahf
xchg
jnp
rcrb
xor
add
inc
sbb
sahf
xchg
movsb
iret
lods
mov
mov
movsl
fisttps
jb
or
les
fs
jl
mov
pop
scas
pop
rolb
inc
or
add
cmp
add
add
add
add
xorl
xor
movl
cmp
jne
and
mov
mov
add
andl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
jmp
mov
gs
stos
sub
xchg
leave
sub
jle
movsb
jg
jle
mov
cmp
xor
mov
gs
and
xor
push
push
adc
sub
or
sti
add
mov
pusha
js
mov
stos
adc
pop
sub
inc
inc
and
dec
fldl
mov
push
push
addr16
insb
jl
nop
ja
iret
xchg
push
cmpb
out
add
ljmp
cmpsl
cmp
test
mov
mov
dec
repnz
scas
pop
cmpsl
inc
add
leave
std
xchg
pop
mov
into
mov
in
fimuls
test
adc
insl
dec
in
subb
icebp
jbe
mov
push
imul
fistpll
ret
mov
add
fistpl
pop
inc
out
push
sub
imul
test
les
pop
push
xlat
test
push
daa
shrl
push
push
out
out
push
cmpsl
mov
iret
out
jl
add
sub
mov
out
test
in
jmp
lret
je
pop
insl
or
test
push
cs
sbb
movsl
mov
sub
dec
hlt
dec
pop
mov
xchg
outsl
adc
xchg
adc
jo
or
adc
insb
inc
pop
test
js
sarb
inc
xchg
scas
pusha
test
adc
cmp
push
faddp
in
cs
cld
pusha
or
pop
mov
call
fmul
xor
mov
add
push
jle
adc
dec
mov
mov
orb
and
icebp
or
add
add
or
add
leave
ret
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
popf
dec
dec
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
lock
add
add
add
outsb
push
popa
addr16
push
js
outsl
ss
je
jo
aas
inc
outsb
gs
je
push
gs
push
inc
inc
pop
inc
push
inc
dec
pop
dec
cmp
add
add
sbb
add
adc
add
add
add
shlb
add
add
add
and
add
mov
add
test
add
scas
xor
add
add
mov
add
add
add
add
and
add
add
add
cmp
add
and
add
mov
add
add
add
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
xchg
add
imul
ja
jae
insl
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
outsb
jbe
add
jb
push
jae
jb
arpl
add
add
jb
jo
add
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
lds
jo
imul
add
outsl
jb
add
data16
outsl
outsl
jb
lods
add
js
imul
add
jo
pop
insw
outsl
fs
xor
je
insb
add
or
je
ja
jo
gs
add
add
jb
arpl
add
pop
pop
arpl
insl
outsl
fs
push
add
imul
addr16
add
xor
arpl
outsl
imul
test
jae
popa
arpl
add
js
imul
pop
popa
insl
jae
pop
gs
je
add
add
arpl
jo
add
xchg
pop
imul
insl
add
outsb
jne
add
add
jb
bound
add
insl
bound
gs
add
sbb
jae
jo
imul
data16
add
pop
pop
arpl
inc
imul
ja
jae
arpl
add
add
js
je
imul
jae
add
call
js
je
add
add
je
add
fadds
jae
je
outsl
arpl
add
gs
jae
jb
popa
je
gs
add
mov
data16
imul
gs
outsl
jb
add
popa
je
insb
add
jb
pop
pop
addr16
popa
imul
sub
arpl
arpl
add
add
insl
outsl
jbe
add
dec
push
push
inc
push
push
cs
insb
add
mov
imul
outsl
ja
jo
popa
je
add
nop
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jne
jae
jb
mov
imul
popa
bound
add
outsb
fs
gs
popa
addr16
js
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
dec
outsl
popa
fs
arpl
push
add
bound
jbe
outsb
je
test
fs
imul
add
je
arpl
add
outsb
fs
imul
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
fs
outsb
jo
je
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
jb
outsb
je
inc
add
imul
je
insb
popa
jae
dec
outsl
outsb
addr16
add
outsl
outsb
imul
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
ja
arpl
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
je
insb
imul
jb
movsb
add
pop
outsl
outsl
insl
gs
roll
outsb
popa
bound
imul
sub
inc
push
ja
jb
jne
push
add
inc
add
imul
arpl
outsb
add
add
inc
fs
jae
push
imul
arpl
add
icebp
add
jae
dec
gs
popa
addr16
add
out
add
imul
jae
addr16
add
dec
add
je
jb
jo
add
inc
add
outsl
jae
inc
gs
je
jo
add
add
jo
imul
imul
push
imul
popa
jae
inc
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
sahf
add
push
arpl
jo
jns
mov
push
outsl
push
outsb
imul
add
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
gs
popa
jb
outsb
je
bound
inc
jb
popa
je
push
imul
inc
add
popa
insb
imul
je
add
push
gs
imul
outsb
addr16
add
adc
gs
jae
inc
inc
add
inc
push
dec
outsb
jne
add
add
arpl
outsb
jne
je
insl
add
add
outsb
dec
arpl
add
mov
imul
imul
add
jae
popa
addr16
outsl
js
add
ja
outsb
jne
popa
jb
inc
add
je
outsl
jb
addr16
jne
fs
imul
add
jae
jb
outsb
je
push
add
mov
imul
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
jae
outsb
arpl
jns
je
je
add
or
inc
imul
jae
push
outsb
imul
jo
popa
je
push
imul
or
inc
gs
inc
inc
js
stos
add
fs
jne
jae
jb
add
gs
arpl
insb
insb
push
popa
outsb
add
cmp
inc
push
jo
jb
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
push
add
je
arpl
insb
insb
push
popa
outsb
add
insl
add
je
imul
outsb
addr16
add
addb
outsb
data16
popa
je
push
arpl
add
insl
outsl
jbe
dec
outsb
jne
add
ja
outsb
imul
arpl
das
add
je
arpl
gs
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
popa
insl
gs
arpl
add
inc
imul
jae
popa
addr16
add
xor
inc
push
gs
add
inc
outsl
jb
addr16
jne
fs
imul
add
imul
jne
dec
fs
add
push
add
je
jb
jo
add
dec
add
je
outsb
jne
scas
add
fs
jne
jae
jb
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
imul
outsl
arpl
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
push
add
je
popa
jb
outsb
je
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
gs
imul
sub
inc
push
ja
jb
add
out
add
imul
jae
addr16
add
jne
inc
gs
imul
js
inc
add
add
je
gs
popa
addr16
add
jb
gs
push
add
push
je
imul
push
push
outsb
outsl
ja
jae
outsb
arpl
add
popa
jb
jo
gs
add
sti
add
dec
outsb
push
arpl
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
lahf
add
jo
je
push
popa
addr16
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
sub
push
outsb
fs
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
ja
je
je
push
add
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
fs
je
imul
push
gs
arpl
jo
jns
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
cmp
inc
push
jo
jb
jne
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
xor
jb
outsl
dec
gs
push
add
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
push
push
inc
push
xor
cs
insb
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
je
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
ja
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
pop
add
outsl
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
push
popa
insb
gs
add
gs
arpl
imul
into
add
insb
arpl
push
arpl
jp
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jo
outsl
fs
pop
add
je
popa
jns
jne
add
add
je
imul
add
jbe
inc
inc
add
pop
add
je
popa
jo
outsl
fs
mov
popa
je
dec
inc
push
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
out
add
je
popa
insb
gs
gs
outsb
je
imul
gs
imul
outsb
jae
outsl
outsb
inc
js
add
add
jb
je
push
add
je
inc
imul
bound
imul
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
gs
outsl
add
clc
add
je
gs
inc
insb
imul
push
popa
je
insb
je
add
inc
imul
test
inc
jb
popa
je
push
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
aam
push
gs
imul
outsl
jb
add
add
je
dec
push
xor
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
imul
addr16
js
add
popa
je
push
outsb
add
push
imul
dec
jb
inc
js
add
add
arpl
add
mov
push
outsl
insb
jns
outsl
outsb
add
popa
je
push
arpl
outsb
add
gs
inc
js
outsb
je
outsl
imul
jo
inc
fs
outsl
outsb
je
gs
jne
arpl
add
inc
add
je
gs
arpl
popa
jo
add
inc
gs
imul
add
je
gs
dec
jne
push
add
popa
je
push
popa
je
gs
inc
jb
jae
add
into
add
arpl
gs
insb
imul
lds
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
inc
dec
xor
cs
insb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
inc
imul
jb
popa
je
push
popa
imul
insl
gs
add
and
dec
popa
jo
imul
insb
add
push
gs
push
push
jb
outsl
jb
je
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
add
inc
popa
fs
gs
fs
je
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
xor
push
push
inc
data16
dec
popa
jae
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
mov
inc
jb
inc
imul
dec
push
dec
add
dec
popa
imul
outsw
add
add
gs
je
inc
jbe
outsb
je
add
outsb
add
outsb
fs
gs
jne
arpl
js
add
push
gs
fs
imul
gs
gs
jo
popa
je
inc
add
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
bound
inc
gs
gs
jo
popa
je
push
add
rolb
inc
jb
popa
je
inc
imul
gs
push
dec
outsl
arpl
add
add
jne
push
gs
jne
arpl
popa
insl
gs
add
repz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
insb
gs
imul
jae
gs
push
imul
inc
jb
popa
je
push
gs
outsl
je
push
push
add
jns
inc
gs
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
dec
add
jne
jo
outsb
fs
push
add
add
jae
jb
jo
outsb
push
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
or
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
insb
push
outsb
ja
outsb
add
je
insl
dec
popa
insl
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
popa
jb
push
inc
add
push
gs
imul
jne
push
imul
add
insl
outsl
jbe
inc
imul
jns
add
ret
add
jae
jb
insl
jo
add
dec
add
insb
gs
imul
arpl
inc
imul
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
addr16
pop
dec
popa
jns
push
imul
je
inc
push
insb
pop
add
add
or
inc
add
inc
add
cmp
call
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
mov
cmp
mov
ds
add
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
inc
add
inc
add
cmp
mov
cmp
add
cmp
sbb
inc
add
test
sarb
add
or
inc
add
xor
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
je
inc
add
imul
pushf
clc
sahf
jmp
add
lods
cmp
pushf
or
addr16
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
add
dec
add
imul
add
dec
add
add
insb
add
insb
add
add
dec
add
inc
add
imul
push
add
imul
add
add
imul
add
imul
add
add
dec
inc
dec
dec
push
fs
dec
dec
imul
push
inc
outsl
imul
data16
push
imul
add
add
add
add
inc
add
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
add
add
or
add
shll
and
inc
push
outsl
push
mov
cmp
add
add
add
popa
push
push
push
dec
je
push
jne
popa
jns
pop
je
push
jp
jp
js
imul
push
dec
dec
outsb
push
pop
dec
dec
dec
dec
je
add
add
insl
push
dec
jne
outsb
imul
pop
outsb
jbe
jns
dec
je
bound
push
arpl
push
imul
add
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
insb
jb
inc
push
push
inc
insb
inc
inc
jae
dec
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
dec
imul
inc
jp
pop
inc
jae
dec
dec
gs
jne
add
cmc
jnp
jnp
cmc
lcall
and
pop
je
push
add
add
lcall
add
into
ljmp
shr
lock
dec
fwait
ret
fistpll
je
pushf
repz
add
and
xor
loop
arpl
push
or
cs
in
lea
cmp
lods
mov
sub
push
push
mov
and
mov
mov
es
mov
lea
int3
lds
dec
scas
pop
outsl
cmp
sahf
inc
inc
test
std
idivl
arpl
test
mov
push
add
ficoml
aaa
lahf
adc
pop
xchg
loop
fisubl
xchg
sub
leave
lahf
inc
ret
dec
in
xchg
ljmp
icebp
jle
lock
popl
das
pop
sub
test
dec
aaa
push
mov
or
js
call
and
and
cmp
push
test
inc
icebp
addr16
or
mov
dec
aam
xor
scas
pop
xchg
sub
pushf
ljmp
insl
and
sti
imul
add
push
pusha
in
jle
lcall
lret
add
add
dec
push
xchg
sub
stos
ljmp
sbb
jo
out
andl
inc
mov
in
imul
jg
repnz
sbb
je
or
aaa
xchg
push
pop
ficoml
test
sub
ss
or
ss
rcll
inc
or
push
movsl
lods
xor
cmc
test
adc
jmp
cmp
xor
ja
adc
stos
pop
stos
mov
mov
dec
test
out
mov
add
ficoml
mov
cmp
outsb
cmc
xor
leave
xor
sahf
mov
cmp
lcall
jmp
xchg
ds
out
cmp
add
add
std
dec
pop
xchg
cmp
pop
jo
dec
xor
ds
rcrb
xor
into
push
adc
movups
or
rcll
and
mov
mov
adc
add
add
add
mov
push
fidivs
add
add
outsl
mov
push
add
push
ds
lds
imul
sub
mov
jmp
mov
leave
cmp
lods
push
insb
ja
sub
rol
dec
cs
insl
fcomps
lcall
imul
or
jl
stos
mov
out
cmp
das
dec
add
push
lcall
arpl
mov
andl
pop
jg
test
ret
cli
loop
jge
xlat
fs
jmp
sbbb
mov
push
xor
dec
xlat
mov
fcmovb
in
out
mov
fidivrl
lret
fisubl
pop
jmp
pop
outsb
or
in
out
call
push
insb
stos
push
inc
inc
pop
dec
scas
scas
std
data16
mov
pushf
in
data16
icebp
pop
sbb
mov
mov
mov
pusha
mov
mov
pop
adc
xlat
sbb
jae
lret
add
subl
roll
cmp
aam
add
xchg
push
test
mull
rep
inc
frstor
sbb
push
jge
or
mov
mov
sbb
je
xchg
cmpsb
mov
inc
call
adc
inc
test
push
les
xchg
scas
sbb
push
in
adcl
mov
mov
je
repnz
aas
fldenv
jb
adcb
dec
loop
outsb
js
cli
fsubr
xchg
andl
popa
xor
pusha
rol
jg
xchg
and
xchg
dec
mov
pop
aam
xor
xchg
icebp
test
mov
fcoms
cmp
sbb
push
je
jbe
rcrb
fstl
jl
cmc
sbb
mov
dec
inc
mov
sub
xchg
or
jle
js
pop
jnp
cmp
lcall
jg
call
xor
or
add
loopne
in
insl
int
add
pop
jae
or
pop
dec
or
loope
sbb
aad
add
divl
inc
int3
or
loope
adc
cld
ds
and
mov
adcb
pop
inc
insl
push
ret
aam
inc
sti
dec
fnstcw
or
mov
push
sti
adc
int
je
push
sbb
sbb
jp
xor
jp
pop
jmp
dec
pop
sub
out
das
in
aad
adc
shrl
es
lret
loopne
inc
xchg
dec
sbb
lods
aam
call
repnz
xchg
aaa
mov
popa
add
xchg
dec
jmp
add
jo
mov
es
jnp
add
loop
fadds
test
stc
lods
push
adc
xchg
dec
repnz
mov
or
into
scas
leave
sbb
inc
inc
dec
adc
int3
sbbb
into
sub
inc
push
fbstp
mov
add
jg
cmc
insl
cmc
out
lcall
enter
arpl
hlt
cmc
add
add
sbb
cmpsl
pop
xor
push
push
enter
stos
or
push
mov
ds
pusha
pop
hlt
out
and
jae
dec
mov
int3
js
add
push
or
push
rcll
and
sarl
jl
mov
in
xchg
jno
pop
inc
iret
cmp
xor
lret
scas
xchg
adc
jp
mov
aad
mov
inc
mov
jae
out
adc
mov
daa
add
fnclex
jmp
push
vhaddps
leave
cmp
cld
push
push
scas
shll
nop
aam
adc
mov
dec
push
pop
sub
in
iret
lock
dec
je
xchg
mov
arpl
xchg
in
push
adc
add
push
test
jmp
lcall
ljmp
lds
outsl
fidivl
andb
shr
test
add
rcll
lahf
inc
mov
testb
jecxz
add
add
add
outsl
jle
aas
mov
cmp
cli
xlat
add
add
inc
jmp
and
mov
lahf
jge
scas
jb
out
sub
mov
stos
out
mov
rol
ret
sbb
int
daa
bound
lret
jo
pushf
pop
and
je
sub
cltd
inc
xor
pop
push
out
gs
xlat
aas
sbb
scas
inc
ljmp
sub
rcrb
sbb
pop
pusha
pop
gs
push
jmp
jp
mov
fldcw
jl
xchg
lret
mov
push
mov
fcoml
fwait
mov
mov
in
fmul
mov
iret
push
mov
mov
xchg
inc
shlb
cmpsb
inc
dec
push
and
sbb
lahf
ret
ljmp
xchg
stos
xchg
dec
shrb
addb
push
mov
inc
xor
adc
roll
test
out
std
add
push
push
cli
not
add
add
jle
and
scas
sti
jle
pop
push
pop
fwait
xor
add
lds
sbbb
jb
call
inc
push
jecxz
je
adc
arpl
add
iret
fmuls
lock
icebp
add
repz
jp
push
rol
jmp
fs
ds
mov
add
lea
orb
add
xchg
fistl
in
insl
out
bnd
insl
jnp
mov
mov
rcl
stos
add
dec
daa
leave
push
add
popf
and
xlat
mov
add
out
sbb
mov
xor
pushf
test
fisttps
aaa
testb
pop
xlat
stos
fildll
dec
sub
je
aam
nop
mov
pushl
popa
and
nop
xor
xchg
jecxz
and
mov
into
xchg
loopne
sub
dec
or
or
dec
ret
in
mov
or
adc
fidivs
fcoms
pop
cmp
inc
mov
addb
mov
es
and
inc
or
add
lahf
fnstcw
ss
lahf
stc
bound
jns
add
add
add
cltd
pusha
xlat
aas
cs
cwtl
pop
push
shl
add
lahf
pop
dec
pop
adc
wrmsr
out
repnz
negl
and
mov
mov
add
sub
adc
into
insb
out
jno
jp
pop
adc
jg
mov
inc
xchg
in
cmpsb
jns
cmc
das
lahf
xchg
dec
ret
into
mov
cltd
push
cmpsb
aas
lcall
pop
mov
sub
sub
incb
xchg
jae
bound
jge
enter
stos
ret
andb
stos
sub
pop
mov
add
mov
mov
imul
fwait
das
in
mov
movsb
in
cmp
lahf
xchg
ja
and
lods
jecxz
lods
jo
adc
mov
jo
aas
jno
push
pop
in
mov
inc
mov
cmpsl
xlat
outsl
adc
das
jb
mov
push
leave
aaa
insb
mov
jge
cmpsl
or
add
add
push
jl
jle
insb
out
adc
fildl
add
sbb
jns
xchg
cmp
mov
mov
cltd
imul
je
loop
std
push
add
dec
stc
es
jo
add
push
into
or
ror
adc
lock
test
sub
jae
ss
jne
jbe
adc
in
shlb
adc
cmp
xor
add
cmp
add
fnstsw
lds
into
cmpps
add
arpl
xor
ljmp
push
arpl
jae
xchg
movsb
cmp
aas
and
pop
inc
movsl
jle
push
xor
fidivl
dec
sub
mov
movsb
and
adc
fcmovbe
push
cmp
xchg
ficoml
xor
sbb
mov
lcall
mov
fmuls
cld
pop
or
icebp
xor
adc
pusha
mov
test
lea
les
add
add
fwait
mov
in
xor
adc
push
faddl
add
dec
and
xor
ss
out
fmull
jns
jg
adc
data16
jb
std
or
mov
sub
inc
fs
adc
jg
dec
popl
inc
lret
stos
and
fsave
daa
clc
mov
xchg
inc
pushf
mov
test
shrl
mov
mov
inc
jne
push
lcall
or
mov
xchg
and
jle
push
mov
dec
sub
push
fidivl
xchg
ret
xor
mov
jae
inc
adc
pop
insb
in
jg
jbe
and
dec
insb
cmp
mov
cmp
xlat
or
icebp
fstpt
sbb
pusha
in
hlt
insb
inc
stos
mov
mov
aas
cmp
cmpsb
mov
push
jle
jg
add
sbb
in
push
ds
mov
call
inc
sbb
aaa
data16
jne
mov
lcall
add
add
in
push
xchg
xchg
rcll
stos
mov
int3
jl
flds
inc
mov
jb
dec
push
or
test
int
mov
sub
std
pop
aad
add
and
lods
or
push
dec
xor
lods
xlat
fcmovnbe
aas
cmp
pusha
arpl
xor
sbb
in
sbb
popa
mov
test
out
push
dec
mov
outsl
enter
dec
icebp
jge
push
xchg
ja
cld
daa
test
mov
rclb
jno
test
aad
popa
rcr
cmp
mov
xor
cli
xchg
insl
test
mov
cmovg
xor
jmp
inc
sbb
pop
das
jno
mull
xchg
int
mov
sbb
or
aad
mov
xor
aad
mov
xor
into
iret
rorl
jo
aas
dec
jnp
outsl
rorb
xor
xor
fs
movsl
xchg
stc
adc
add
add
jnp
add
jnp
sti
xchg
lahf
mov
loope
sbb
add
add
call
add
es
pop
in
cltd
lret
lcall
gs
iret
fucom
cmpsb
pop
or
gs
mov
push
adc
scas
mov
push
pusha
lret
mov
dec
std
jg,pn
test
insl
xchg
ret
test
repnz
fs
xchg
stc
sub
and
mov
or
lret
clc
rcr
push
jp
mov
jle
out
icebp
mov
int3
popa
divl
jp
jbe
loope
inc
in
mov
clc
rcrb
das
stc
nop
shrb
loopne
adc
fnstsw
in
lods
sbb
das
adc
pushl
adc
and
shrl
test
pop
jecxz
xchg
es
pop
ljmp
sbb
dec
arpl
push
cmp
dec
inc
jb
das
jae
inc
aaa
repnz
jle
int3
mov
xchg
and
call
jl
or
shll
push
sbb
sub
pop
sarl
mov
pop
sbb
add
add
shl
dec
icebp
cmpsl
gs
jecxz
popf
or
sub
out
stos
add
cmpsb
and
pop
jp
pop
lds
jo
mov
xlat
enter
inc
out
in
insl
xchg
cmc
out
test
hlt
ret
je
cli
mov
fwait
cmp
or
int
adc
stc
imul
push
add
test
mul
mov
cmp
xchg
xchg
movl
icebp
push
mov
int
pop
fs
lcall
mov
int3
ljmp
nop
stos
pop
push
mov
stos
or
lods
sbb
pusha
mov
pushl
cmc
pop
and
inc
scas
sbb
daa
cmpsl
test
mov
mov
std
cmp
xchg
lea
inc
jae
out
add
lret
imul
fwait
cmpsl
mov
add
add
repz
std
repz
mov
add
add
inc
adcl
pop
lret
dec
nop
push
enter
cmp
es
xchg
cmp
jb
adc
popa
jle
ds
inc
pop
xchg
lcall
test
or
and
mov
jnp
xor
in
fisubrl
xchg
test
insl
pop
cmp
pop
in
pop
icebp
fimull
dec
popa
sarl
mov
dec
jg
fmuls
or
testb
lret
das
popf
xor
cmc
outsb
mov
adc
mov
inc
les
in
lret
add
ds
inc
ds
and
or
push
jge
fidivl
insl
cwtl
fsubrs
mov
lahf
mov
ret
or
cmp
lds
xor
mov
mov
lret
rorb
pop
mov
sahf
add
add
lock
cmp
arpl
je
lock
daa
loope
add
pop
mov
std
xchg
pusha
stc
jle
push
movsl
popf
sub
mov
je
jle
add
out
pop
sbb
sub
add
push
xchg
push
pop
xchg
xorl
mov
sub
hlt
cwtl
jmp
xchg
mov
xor
mov
mov
bound
add
push
js
mov
mov
jle
int3
leave
sbb
aam
popl
push
std
fisttpl
jae
push
mull
sti
fstp
sbb
bound
cmp
ds
mov
int
rcrl
mov
mov
rcrl
mov
arpl
or
mov
jae
test
xor
push
dec
loopne
call
shll
and
fisttpll
sahf
pop
or
dec
daa
in
stos
mov
hlt
test
mov
jmp
je
nop
jecxz
jae
loope
mulb
jnp
jne
add
add
mov
mov
sbbb
dec
sub
add
add
push
fimuls
fadds
out
pop
lods
fs
pushf
push
push
mov
ret
cmp
pop
test
cmp
push
cmp
lods
subl
rorl
loope
push
test
sub
cmpsb
jae
icebp
jo
or
popa
in
in
inc
jp
in
ss
adc
or
push
sub
lret
je
adc
fldl
adc
cmpsl
push
js
xor
lret
add
test
outsl
call
inc
pop
or
adc
rcrl
mov
lret
cmp
arpl
pop
adc
push
imul
jae
lret
lods
pop
nopl
jl
inc
pop
jne
mov
push
mov
lock
xchg
test
sbb
mov
mov
test
and
scas
pushf
pop
jno
adc
push
xor
fcoms
add
xchg
in
mov
incl
rcrl
jecxz
add
add
sbb
or
mov
insl
pop
roll
mov
gs
xor
sbb
xchg
test
push
mov
jge
sbb
gs
or
mov
sbb
sahf
add
dec
clc
addr16
in
das
dec
cmpsl
mov
sbb
xor
pop
adc
jle
adc
mov
jecxz
sahf
sbb
cli
imul
push
aaa
lahf
or
mov
xor
push
leave
dec
mov
xlat
vmread
call
dec
fbld
sbb
leave
sub
das
mov
das
aas
xor
hlt
xchg
iret
fmuls
inc
in
sub
data16
lret
pop
push
fstps
dec
int3
arpl
pop
or
xor
ret
push
push
and
inc
aam
idivl
ds
adc
repnz
mov
cli
push
lret
cmp
push
icebp
orl
stc
enter
je
and
stos
mov
and
mov
add
add
sub
in
negl
sub
movsb
pop
sub
add
add
jnp
test
cs
clc
lea
pop
cltd
mov
cmp
mov
mov
and
mov
xlat
mov
out
jge
rolb
sub
aaa
scas
in
std
lds
in
xor
dec
dec
cmp
call
sub
pop
push
xchg
lock
cmpsl
int3
pop
cli
lds
cmpb
mov
xlat
int
add
jg
int
stos
jne
test
mov
add
mov
mov
mov
xchg
inc
mov
mov
aam
imul
fidivs
mov
lahf
mov
js
test
shr
test
adc
inc
dec
push
imull
jge
mov
and
push
in
mov
and
push
aad
mov
xor
adc
adc
jae
xchg
or
cmpsb
vcvttps2dq
pop
push
aaa
pop
ljmp
add
add
mov
stc
dec
push
faddl
out
fdivrs
in
add
out
repz
mov
loop
jo
movsl
sub
xchg
fdivs
lods
mov
movsb
inc
sbb
das
sbb
fiaddl
cmpsl
jmp
pop
adc
mov
orb
push
fwait
sbb
dec
shll
mov
or
mov
xor
aad
push
push
jbe
lret
fisubs
jmp
jmp
ljmp
jge
hlt
jecxz
out
dec
cmp
sbb
mov
mov
imul
outsl
repnz
insb
mov
pop
mov
stos
rol
lods
inc
test
cmp
pop
lret
not
jnp
push
sbbb
xchg
mov
in
xchg
dec
and
dec
xor
sbb
lcall
push
sub
call
adc
jbe
mov
imul
push
mov
lods
mov
cmp
add
cmp
mov
push
push
push
mov
mov
add
std
or
and
cmpsb
cltd
mov
or
sbb
shrb
fmuls
adc
in
xor
mov
and
jmp
xchg
inc
or
xchg
jecxz
jmp
out
stc
mov
pop
aam
shll
repz
dec
cli
lcall
rcl
mov
xchg
sub
ja
xor
loope
test
pop
mov
int3
and
js
sub
sub
and
xchg
cmp
push
xor
and
inc
or
cmc
cmpl
icebp
ret
push
mov
adc
xchg
adcl
imulb
inc
adc
repnz
mov
xor
lret
popa
adc
xchg
or
or
sbb
dec
fs
repnz
in
adc
cmp
dec
repnz
or
repnz
push
je
stos
insl
add
movl
add
out
repnz
add
pop
lcall
les
cmpsl
arpl
inc
out
add
xchg
popa
push
xchg
jl
imul
repz
repz
insl
xor
cld
fbld
lret
in
push
pop
cmp
pushf
cs
lods
dec
iret
out
incl
pop
insl
pop
lret
shrd
sbb
push
in
ss
xchg
xchg
lret
sub
push
cmpsl
sahf
movsl
mov
push
adc
xchg
or
mov
cmp
add
or
ret
pop
jl
das
nop
jl
lock
add
and
push
addr16
pushf
or
lcall
data16
dec
movsl
and
mov
mov
int3
mov
enter
loop
and
ss
xchg
and
stos
mov
push
mov
adc
sbb
sbb
jge
sbb
mov
paddsb
and
dec
iret
cmp
cwtl
add
insl
sub
adc
push
leave
xchg
dec
inc
test
jl
jl
or
jmp
push
dec
sbb
add
pop
mov
push
decl
fcoml
jnp
call
add
decl
push
or
loop
push
pop
mov
popl
ret
mov
dec
sub
dec
inc
sub
rorb
in
add
or
xchg
testl
jo
fbstp
xchg
xchg
inc
push
imul
les
push
mov
jne
sbb
inc
aas
shll
movsl
push
cwtl
pop
repz
outsb
ss
scas
js
out
pushf
add
jmp
leave
je
mov
int3
fbstp
les
fwait
shrb
adc
rolb
iret
mov
imul
pop
loopne
adc
or
adc
jae
mov
push
cmp
and
push
mov
test
xchg
mov
fprem1
sub
inc
mov
pop
test
mov
mov
or
enter
and
ret
push
xchg
imul
leave
xchg
lds
rcrl
add
add
jmp
in
push
sub
mov
add
cmp
cmp
mov
jg
insl
sbb
jae
ret
sbbl
iret
ja
cmp
sbb
fcoml
ret
sbb
jns
inc
rclb
mov
mov
xchg
out
cmp
lock
loope
and
or
or
pop
lret
push
movsb
pop
xchg
inc
insl
out
cmp
mov
rclb
ds
out
cmp
mov
adc
mov
fstps
out
and
aas
and
inc
fdivs
stos
inc
adc
in
pop
arpl
subl
lret
adc
mov
push
fsts
stos
loope
jnp
ret
push
loop
cld
inc
roll
inc
or
arpl
inc
inc
movsb
fs
pop
cwtl
xchg
enter
push
jo
pusha
mov
or
aaa
mov
insb
push
mov
fidivl
dec
repnz
mov
and
and
mov
lcall
ljmp
insl
inc
pop
in
rcl
push
xlat
adc
jecxz
cmpl
out
test
jge
push
int
mov
iret
mov
jecxz
icebp
push
std
aad
je
ljmp
jmp
xchg
adc
into
push
xchg
pop
cmpsb
mov
fisubrs
ficomps
fs
movl
bound
xchg
jnp
insl
pop
ficoms
jnp
mov
lret
into
jecxz
or
pop
jl
rol
ja
xor
outsl
mov
jecxz
jb
mov
test
inc
outsl
inc
mov
push
cs
adc
adc
fisubl
pusha
sub
inc
mov
int
addr16
sub
push
mov
movsl
add
pop
adc
insl
xlat
repz
mov
ss
adc
js
xor
xor
xor
mov
inc
xchg
cld
rol
dec
or
add
add
inc
ror
lock
jnp
xor
xchg
jo
rcr
jmp
add
mov
andb
js
outsb
adc
inc
mov
xchg
pushf
mov
dec
adc
setae
jo
mov
insl
sbb
and
xchg
mov
push
push
adc
nop
test
outsb
fdivl
add
adc
push
sbb
inc
mov
int3
and
movsb
sarb
int
testb
dec
jp
and
mov
out
rcl
test
inc
cmp
push
mov
dec
scas
dec
xor
js
and
pop
popa
add
mov
mov
add
mulb
mov
jp
aaa
dec
in
fidivrs
cmp
mov
mov
out
sbb
pop
imul
xchg
inc
adc
std
pop
adc
xchg
fcmove
mov
push
cli
nop
mov
cmp
lock
pop
loope
divb
popf
or
sub
add
add
add
repz
fisubs
inc
sbbb
add
add
jp
inc
int3
xlat
es
jns
mov
fiadds
push
lds
sbb
cmp
or
aam
in
addl
sbb
imul
xchg
adc
in
int3
pop
dec
sarb
mov
add
fdivrs
sub
mov
hlt
shrd
mov
daa
iret
lret
mov
aas
inc
fisubrl
push
shlb
jp
pushf
cmp
fldcw
fdivrl
push
lcall
xor
and
mov
lods
dec
and
jbe
xchg
mov
or
pop
cld
insb
ljmp
out
lock
test
sbb
cmp
mov
orb
inc
cmp
push
outsb
dec
push
lods
bound
lret
xor
jnp
push
aaa
repnz
cmp
adc
push
ja
mov
jno
adc
out
cmpl
add
add
out
sbb
ja
fnstcw
in
add
add
xchg
insl
sahf
add
mov
les
pop
cmp
jecxz
out
clc
xchg
xchg
dec
jp
bound
adc
inc
adc
push
mov
inc
inc
in
out
push
fs
mov
sub
lea
outsb
ror
ljmp
dec
pusha
aaa
mov
lcall
pop
imull
cmpb
sbb
pop
mov
lret
jne
sahf
jmp
out
mov
scas
xchg
xor
popf
push
ljmp
push
and
cwtl
scas
jns
mov
or
mov
out
mov
test
sub
sbb
lahf
pushf
cmp
pop
and
jnp
pop
and
lcall
mov
scas
adc
pop
add
or
cmc
pop
aam
mov
dec
and
mov
ss
movsl
loopne
pop
mov
push
mov
jo
icebp
dec
jmp
add
add
scas
push
repz
cmc
scas
sub
mov
push
add
add
inc
outsb
sti
cmc
add
pop
scas
mov
sbb
mov
arpl
mov
mov
addl
nop
bound
adc
cmp
cmp
sbb
lea
xor
stos
inc
or
fisttpll
dec
dec
fwait
or
push
popa
imul
cmpxchg
ss
add
push
pop
inc
or
rcr
adc
inc
in
lret
xchg
sub
hlt
pop
mov
enter
xchg
xlat
out
insb
xchg
dec
shlb
dec
aas
test
les
jl
cmp
sub
adc
fwait
mov
mov
ljmp
fisubs
push
xchg
aam
jmp
and
dec
ljmp
jns
scas
dec
loope
fisttpl
sar
int3
out
push
outsb
aaa
cmpsl
es
outsl
sahf
mov
mov
pusha
lea
je
fwait
bound
js
ret
fistps
int
mov
sbb
add
lret
pusha
rorb
cmpsb
mov
aad
insl
out
add
add
adc
clc
and
or
fwait
add
adc
sub
out
leave
xchg
jl
aas
rcr
cmc
xchg
fs
sub
xchg
inc
jle
mov
xor
jecxz
xchg
fcompl
mov
cmp
adc
repnz
test
ret
xor
xchg
mov
movsl
insb
dec
xor
mov
in
inc
mov
popa
call
mov
lahf
cli
out
cli
push
fucom
femms
movl
push
lret
push
repz
dec
mov
or
push
mov
aad
gs
jns
int
je
adc
cs
aam
mov
dec
pop
pop
ss
or
fstpt
sub
testl
add
sahf
in
call
mov
cmp
ror
xor
and
repz
loop
jne
jo
mov
mov
add
add
gs
testl
xchg
and
add
and
icebp
iret
sbb
loopne
sahf
xchg
pop
pop
sbb
or
pushf
nop
out
add
mov
pop
outsb
mov
mov
xorb
mov
cli
pop
jmp
sbb
sbb
leave
mov
cmp
sub
xchg
lahf
xchg
adc
and
pop
xor
imul
bound
xchg
outsb
or
mov
adc
pop
shll
lcall
mov
pushf
test
in
sub
sbb
add
adc
std
and
out
daa
gs
and
jp
pop
std
jb
sahf
imul
push
xor
test
dec
push
jne
scas
mov
mov
or
xchg
or
test
cmp
andb
cmpsb
adc
adc
sbb
scas
lret
jbe
testl
dec
fs
bound
add
and
daa
lahf
mov
pop
das
imul
add
pop
mov
les
jle
xor
push
cmp
or
inc
add
sbb
aaa
jge
add
cmc
cmpsl
mov
sti
lock
and
movsb
mov
jne
jecxz
xchg
hlt
add
mov
lods
inc
add
mov
outsb
inc
push
xor
and
push
cmp
out
rcll
jo
xor
addr16
mov
in
mov
aam
xor
roll
ss
xorb
pop
mov
cltd
dec
jp
mov
sbbl
jge
mov
js
mov
orl
sbb
mov
repnz
dec
jo
jo
adc
sbb
lds
das
sbb
je
inc
scas
sbb
jns
ret
cmp
imul
das
in
dec
jns
mul
clc
insb
stos
iret
lock
cwtl
fstps
xchg
xchg
popa
xchg
add
mov
in
adc
out
add
add
fucomi
xor
push
add
insl
or
fwait
test
loop
push
xchg
ja
movsl
add
pop
es
filds
or
or
aaa
and
mov
fsubs
cld
mov
push
adc
out
xor
jno
push
insl
mov
push
out
xor
lods
in
jns
add
std
dec
pop
stos
cwtl
mov
xchg
xchg
pushf
dec
dec
lahf
mov
cpuid
dec
adc
cmp
repz
jnp
insb
icebp
push
negb
or
decb
mov
fsubl
fwait
jecxz
mov
cwtl
rcr
fstpt
sti
mov
fmulp
or
mov
and
cmp
mov
sub
sbb
sti
lods
push
or
repz
or
pop
and
xchg
out
movsb
dec
sub
xor
xchg
lds
add
loope
aad
adc
adc
pushf
inc
hlt
iret
lahf
adc
jb
test
jae
push
mov
add
pop
xor
out
jl
jp
lods
xchg
add
add
push
inc
pop
jns
aas
loopne
sub
pusha
addb
add
ds
push
and
scas
push
and
hlt
cwtl
mov
or
jl
addr16
add
stos
jp
dec
mov
decb
jbe
jle
je
lds
into
jae
out
scas
out
xor
mov
scas
inc
fisubl
into
dec
add
je
ficoms
mov
inc
jmp
icebp
adc
mov
inc
jns
mov
rcrl
inc
sti
insb
cltd
rolb
and
es
cmp
clc
jecxz
aas
xor
rsm
dec
fstps
jb
mov
movsl
popa
cld
xchg
jp
fs
data16
shlb
aad
fs
pop
stos
ss
inc
dec
js
sbb
ja
push
iret
mov
pop
in
movsb
add
sub
mov
cmp
movsl
xlat
and
mov
mov
and
sti
fidivl
sub
rorb
inc
push
test
jno
jnp
and
xchg
or
jge
in
jbe
and
sahf
sbb
add
add
jnp
mov
or
faddl
add
add
jmp
aaa
iret
mov
testb
mov
out
xchg
inc
mov
aas
mov
inc
push
fdivrp
cmp
pop
pushf
in
je
aam
sub
xor
adc
jne
jecxz
into
pop
icebp
push
xorl
enter
mov
mov
jp
and
lcall
lock
cmp
dec
or
aaa
xchg
into
jmp
sbb
mov
pop
jle
into
jp
inc
pop
scas
xchg
xlat
and
cmc
inc
pop
mov
push
mov
inc
in
fbld
cmp
and
xchg
and
jecxz
jns
nop
lcall
leave
inc
push
sbb
inc
xchg
out
adc
dec
and
jae
xlat
aad
fnstsw
inc
push
and
xchg
mov
cmp
jge
rcrl
xchg
push
or
fsubrl
dec
xchg
push
or
stos
push
mov
imul
gs
lds
mov
add
add
or
pop
xchg
adc
add
inc
push
loope
fsts
aam
sti
dec
dec
sub
jl
push
jge
pop
and
dec
aaa
fchs
sbb
cmp
ret
icebp
fistpll
adc
ja
pop
fwait
aas
insl
call
fidivl
xor
pushf
push
push
pop
inc
fdivl
mov
sub
shl
pop
repz
pop
mov
int3
jmp
mov
inc
test
and
push
rcrl
leave
jmp
lds
clc
stc
clc
fmuls
cmp
cmp
cltd
out
arpl
mov
lcall
lret
sbb
cltd
cmpsl
fstps
jge
out
mulb
data16
dec
or
dec
dec
int3
sub
jp
mov
push
das
jmp
stos
mov
pop
inc
sarb
mov
jecxz
sub
pop
add
stos
cmpsl
pop
shr
xor
ja
jns
or
cmp
setg
add
xchg
mov
idivl
push
sbb
nop
testb
add
cmp
fdivrs
xor
fwait
icebp
scas
shl
jbe
movsl
cmp
into
in
push
mov
lcall
xchg
iret
pop
test
in
imul
test
adc
mov
sub
add
out
cs
jecxz
cmpl
data16
ror
xchg
mov
insl
in
mov
sbb
mov
xchg
mov
adc
repnz
adcl
adc
mov
dec
mov
sub
and
sbb
or
and
jmp
fbstp
loope
dec
idivb
sbb
pop
dec
mov
xchg
cmp
aaa
and
ljmp
lret
rorl
mov
and
jae
lods
leave
xorl
ja
inc
lea
sbb
or
mov
pop
push
cmc
pop
xchg
js
add
fucomp
and
fdiv
mov
add
test
mov
fidivl
adc
add
filds
lret
rol
into
call
cmc
push
inc
adc
xchg
inc
mov
inc
or
stc
loop
sub
dec
xor
js
rcl
inc
or
test
jmp
arpl
outsl
test
repnz
call
pop
andl
fwait
dec
add
gs
insl
je
sbb
mov
xchg
xor
jg
jno
mov
loope
stos
sub
sti
test
cmpsb
dec
fsts
pop
cmp
faddp
into
inc
fsubrs
mul
sahf
or
pop
mov
popa
into
mov
xchg
sar
popf
mov
mov
mov
jnp
add
sub
mov
push
popf
mov
mov
sbb
cmpsb
mov
std
andb
pop
mov
int3
xchg
notl
jmp
jp
jb
sbb
je
sbb
lea
mov
add
add
push
pop
push
jmp
shlb
movsb
movsl
lcall
add
xor
ret
stc
movsl
sbb
jp
addb
cmp
test
jl
mov
push
lock
mov
pop
mov
leave
daa
xchg
inc
into
jb
ret
arpl
stos
call
sbb
in
mov
cmp
pop
lret
scas
or
inc
xor
lods
cmpsl
cmc
cmp
xchg
or
mov
inc
and
leave
roll
mov
xchg
sbb
push
aam
pop
cwtl
jbe
jne
jle
leave
lods
xchg
pop
pop
scas
sahf
ljmp
jo
push
aam
cwtl
inc
adc
es
jbe
add
call
and
or
out
stos
fstpt
xor
and
movsl
repnz
in
pusha
cli
sti
fs
gs
xchg
call
imul
testl
orb
sbb
cmp
lahf
cmp
add
add
pop
lods
pop
cli
cmc
cmpsb
lret
flds
cltd
lahf
stc
add
add
or
cltd
or
inc
jns
push
loopne
push
hlt
pop
testl
int
ljmp
mov
mov
cmpsl
fisubl
sbb
sub
cmpsl
daa
mov
sahf
test
dec
aad
mov
mov
das
je
jle
mov
in
jb
sar
and
call
mov
js
xchg
aas
fcmovu
ja
aas
push
lahf
insb
cmp
rorb
xor
sub
subl
dec
ret
scas
aam
sub
cmp
out
mov
pop
inc
icebp
test
fwait
mov
sub
lret
jecxz
xchg
clc
jbe
ret
sub
jb
inc
mov
ds
jg
iret
aam
inc
insl
mov
sub
mov
push
cmp
cli
xchg
pop
sbb
rolb
repz
dec
mov
xchg
cmc
pop
jecxz
scas
dec
sub
fldt
jno
add
add
stos
cltd
inc
popf
jae
out
xor
movsb
cli
add
add
cli
cmp
jb
data16
sti
push
orb
jg
or
loope
mov
imul
adc
xchg
or
rorb
pop
pop
arpl
ss
in
add
xchg
sub
pop
sub
sub
pop
xchg
cmpsl
pop
stos
sub
into
xchg
jmp
lea
jmp
outsb
cmc
fbstp
mov
nop
test
out
mov
dec
pop
jmp
jne
insb
mov
jb
push
loope
iret
cmp
mov
std
and
mov
test
jge
call
int3
aad
cmp
dec
push
scas
jecxz
ret
dec
jne
sbb
mov
dec
incb
inc
xor
and
push
add
movsl
push
sarb
adc
mov
sub
adc
addb
cmp
lds
arpl
mulb
loop
xor
les
sbb
push
lods
mov
or
int
add
mov
nop
test
aam
int
aaa
das
aam
cmpsb
ret
loopne
sti
add
add
js
cmpsb
ds
inc
jae
cmpsb
call
scas
or
scas
lahf
push
ret
aam
fists
dec
cmpb
pop
loope
inc
mov
sbb
mov
jno
out
cmp
cli
inc
pop
jae
mov
fnstsw
xor
cltd
xlat
in
ficomps
and
mov
pushf
js
dec
or
mov
and
xchg
addr16
xchg
cmp
inc
add
addr16
imul
push
cli
mov
andl
mov
std
mov
mov
rcll
xorl
xchg
imul
and
sub
jno
push
js
es
sbb
xchg
cld
mov
pusha
add
mov
push
psubsb
sub
aas
into
dec
xor
jb
cmpsb
shll
sbb
bound
and
xor
imul
add
pop
arpl
addr16
sub
inc
aas
mov
add
mov
ret
mov
pop
inc
outsb
call
push
pop
repnz
into
mov
mov
mov
dec
sub
xor
ret
cmp
popa
scas
sub
jmp
push
lahf
jge
or
pop
pop
lret
imul
sbb
xor
imul
ret
mov
jb
popa
push
and
sub
adc
pop
or
sbb
mul
sbb
jae
mov
imul
jmp
rorb
jl
sbb
cmp
out
scas
mov
in
xor
pop
or
and
sbb
or
inc
popa
xor
mov
xor
pop
or
or
add
fildl
cmpsl
adc
je
or
mov
nopl
insl
adc
test
pop
pop
pop
inc
out
call
das
push
push
xor
mov
pop
dec
xchg
out
cmp
cmp
pushl
xchg
xor
lret
call
add
add
nop
jno
lods
jmp
cmp
incb
mov
outsb
arpl
lods
push
or
aam
lods
jb
dec
sub
push
and
repnz
leave
jecxz
arpl
push
loop
addl
test
mov
inc
ja
push
inc
in
pop
jne
pop
xchg
sbb
mov
xor
add
mov
negb
sti
sbb
inc
dec
cld
test
jo
int3
cmp
sbb
rcrl
out
iret
movsl
mov
adc
addr16
popl
dec
jmp
std
sbb
xor
lahf
aas
adc
test
xchg
xchg
xor
adc
aad
fst
add
scas
mov
and
sbb
sub
sub
push
adc
push
aad
out
push
fdivrl
ret
push
jae
sub
cmp
pop
mov
xchg
stc
mov
add
test
push
scas
mov
jmp
add
add
int3
dec
mov
mov
lods
les
fs
enter
sub
out
movsl
loop
pop
inc
xor
mov
popf
jecxz
dec
jmp
inc
popa
push
fisttps
pop
or
into
out
ret
and
cld
dec
dec
dec
cwtl
or
ret
aam
cwtl
aad
jae
fisttpll
lds
test
aas
aaa
scas
jne
sub
es
out
addr16
adc
in
addb
inc
iret
into
shrb
mov
adcb
nop
xor
jg
clc
push
jmp
adc
imull
xchg
push
push
clc
lods
sahf
mov
sbb
mov
js
cmp
inc
xchg
sbb
test
jbe
pop
mov
cmpsb
cmp
iret
lret
outsb
fists
xchg
and
fnsave
mov
rorl
xchg
add
aaa
xchg
and
movsl
mov
mov
mov
stos
xchg
mov
add
add
lahf
or
test
inc
cltd
or
fldcw
cwtl
cltd
cmp
notl
loope
sub
jg
in
sbb
outsl
xchg
cmp
xchg
repnz
xchg
sbb
hlt
orl
cwtl
in
jbe
jnp
sub
sahf
loope
push
lea
stc
mov
call
jmp
dec
sti
push
pop
jno
rcrl
jle
loope
or
xor
stc
dec
ds
jge
cltd
cmp
lret
clc
test
adc
repz
test
lcall
or
shr
xchg
xchg
loope
jmp
bound
jb
cmp
lahf
imul
shll
lds
adc
and
or
iret
out
test
cmp
or
loope
xor
inc
movsw
push
pop
dec
rolb
pop
pop
jns
jmp
mov
stc
lret
int3
jmp
fists
out
test
iret
push
sbb
outsl
imul
or
add
jo
lock
add
mov
push
jg
mov
sub
add
add
jmp
mov
test
push
clc
iret
adc
adc
mov
cld
xchg
out
cwtl
movsl
cmp
movsb
or
lds
xlat
cmp
ss
je
nop
arpl
movsb
scas
sar
frstor
movsl
movsl
aad
adc
arpl
push
add
xchg
pop
mov
dec
push
xchg
adc
adc
or
addr16
mov
adc
jns
clc
mov
jbe
sbb
outsl
mov
lea
pop
js
jmp
add
imul
pop
jmp
mov
cltd
xor
dec
jle
pop
pop
sub
outsl
mov
mov
shrb
lahf
and
and
nop
movsb
lcall
stos
pop
cmp
xchg
cmpl
ret
loopne
repnz
je
mov
pop
mov
cli
int
aas
jb
icebp
movsl
or
lods
cmp
push
add
add
mov
mov
lods
imul
movsl
dec
sub
add
xor
lcall
loopne
mov
js
icebp
xor
mov
push
and
cmp
or
out
in
test
fwait
inc
jmp
push
loop
jmp
add
ret
mov
sub
fldenv
stc
jae
ret
insl
inc
mov
popa
pusha
mov
outsl
adc
cld
or
sbbl
sub
sub
jnp
testb
jns
sbb
icebp
enter
es
dec
xor
mov
mov
push
push
pop
dec
and
aam
shll
pop
add
xchg
jne
call
pop
jns
imul
push
mov
dec
pop
insb
cmc
dec
sub
stos
inc
sbb
pop
mov
hlt
adc
mov
cld
cmp
test
lods
clc
mov
aam
sbb
dec
dec
pop
mov
xchg
mov
ffree
jo
iret
in
cmc
pop
lret
mov
add
mov
cmp
scas
icebp
mov
add
add
aaa
test
xchg
xchg
and
dec
sbb
mov
mov
fs
xor
mov
cmp
ja
pop
pop
ljmp
shll
xor
rcll
jmp
adc
cld
adc
into
aad
into
std
std
out
ret
and
mov
in
clc
ficoml
ret
fs
push
cmp
movsb
cmp
lds
mov
and
icebp
mov
mov
aad
cltd
ja
dec
mov
sbb
pop
jne
enter
cld
aaa
pop
cmpsb
adc
mov
orb
xchg
jecxz
sahf
cmp
add
and
jne
lahf
js
xlat
loopne
sub
stos
inc
dec
out
push
push
sti
aam
inc
inc
nop
or
or
scas
and
jp
sbb
repz
aam
add
cmp
cltd
outsb
sub
jp
pusha
mov
sub
dec
or
add
add
hlt
fbld
vhsubps
add
add
cmc
add
adc
and
and
cmc
pop
js
push
add
inc
push
or
filds
mov
push
cmp
inc
jae
insl
adc
movsl
cmp
mov
or
sbb
aaa
inc
xchg
nop
push
shlb
cld
mov
cmp
arpl
cmpsb
and
pop
ret
test
roll
jecxz
and
dec
adc
xchg
jb
hlt
cmp
addr16
xchg
jb
mov
test
adc
test
pop
add
mov
xlat
mov
cwtl
sub
dec
dec
push
js
insb
dec
dec
fucomip
mov
sub
popa
nop
cmp
mov
shrb
or
mov
cmp
xor
incl
gs
fcos
shll
jno
jmp
fstl
push
dec
or
add
jb
mov
lret
mov
ss
mov
test
dec
push
adc
loop
sbb
add
into
fwait
add
mov
add
add
add
fwait
in
stos
mov
adc
lds
test
adc
fdivrl
mov
dec
jmp
aas
mov
cld
mov
xchg
in
mov
dec
inc
lret
sbb
cmpsb
xchg
js
inc
mov
jae
pop
add
xchg
pop
push
xchg
mov
aam
loopne
cwtl
outsb
icebp
fdivrl
icebp
cmp
xchg
xchg
jecxz
and
mov
addr16
pop
adc
mov
or
icebp
gs
stos
sbb
fsubl
insb
in
cmp
push
test
loop
fstpt
pop
mov
xchg
ficoml
shlb
mov
mov
icebp
stc
mov
sub
push
mov
int3
lock
sbb
mov
lahf
outsl
xlat
fldl
xchg
xchg
cmp
cmp
xlat
scas
jl
cwtl
ja
add
jno
and
pop
pop
push
cmp
mov
dec
add
in
aad
stos
pusha
aaa
jne
arpl
pop
sub
fwait
add
add
xor
mov
pop
sarb
in
lds
add
orb
inc
data16
dec
pushf
inc
jns
iret
add
popf
mov
jno
popa
push
iret
lahf
popf
inc
repnz
mov
pop
sbb
aam
add
into
or
test
or
sub
and
aam
js
leave
bound
sub
out
jl
sahf
mov
xchg
or
pop
mov
lock
pop
mov
mov
cmp
add
ret
jmp
xchg
pushf
cmpsl
and
xchg
mov
and
push
loope
sub
cs
and
hlt
xchg
mov
cmp
int
or
lods
lahf
push
hlt
or
pop
lods
gs
fdivs
push
idivb
into
pop
mul
xchg
pushfw
lock
mov
cmpsl
shlb
lcall
scas
cmpsl
in
test
bound
jg
ljmp
test
xchg
push
and
cmp
fsubrl
fwait
xor
jp
pop
push
dec
imul
add
add
inc
out
aas
mov
rcl
mov
add
add
aam
jns
sbb
mov
push
jge
pop
leave
sti
pusha
mov
mov
and
fstl
dec
mov
mov
push
mov
cltd
popf
adc
xor
sbb
lahf
xchg
jnp
rol
test
paddsw
mov
mov
mov
or
das
in
mov
or
jbe
push
call
push
push
cmp
inc
inc
or
mov
push
clc
pop
adc
movsb
cltd
sub
fwait
add
mov
stos
dec
test
inc
sbb
lock
cli
lahf
pop
cmpsl
push
mov
movsl
in
inc
dec
cmpsb
push
add
push
sbbl
mulb
movsb
shl
xchg
out
int3
in
mov
cs
gs
mov
pop
jne
lahf
cs
cmp
push
mov
mov
adc
mov
push
sar
cmpsb
inc
pop
pop
push
push
sbb
and
add
add
push
bnd
dec
leave
and
stc
iret
aas
in
add
add
pop
push
adc
inc
mov
repz
mov
inc
and
imul
adc
scas
out
mov
imul
cmp
adc
cmp
lea
fbstp
cmc
shll
jmp
imul
pusha
cmpsl
push
inc
sub
outsl
stc
add
or
jecxz
ds
jecxz
sbb
cltd
jbe
pavgw
dec
jb
cli
or
add
inc
fs
pop
inc
lret
xor
aaa
shlb
arpl
pop
ds
pushf
cli
sub
push
mov
nop
mov
add
and
sbb
push
in
hlt
stc
lea
xlat
add
daa
jle
stc
xor
push
mov
jne
nop
dec
enter
iret
insl
leave
mov
sbb
xchg
mov
inc
mov
test
or
stos
test
dec
fistps
adc
push
xor
add
add
in
out
ja
filds
lds
ljmp
add
hlt
int3
cmp
cmp
mov
xor
outsb
lcall
pop
scas
pusha
scas
cmpsl
fwait
sarb
outsb
mov
test
or
fcoml
stos
gs
repz
fisubrl
loope
fidivs
mov
or
mov
inc
mov
dec
aas
sahf
push
fwait
sbb
andb
sbb
add
xorl
and
dec
icebp
shll
inc
test
or
xor
test
in
sub
pop
rolb
adc
int3
mov
add
cli
imul
push
mov
xchg
cmp
ds
xor
clc
adc
add
bnd
mov
fwait
mov
mov
in
add
or
jmp
mov
fs
push
es
rcr
lea
aas
insl
nop
xor
jle
adc
xor
mov
ds
xor
sbb
add
scas
test
in
inc
push
or
xchg
sub
out
or
add
loopne
cmp
cmp
and
sahf
leave
imul
test
gs
push
in
dec
rorb
hlt
pusha
jecxz
stos
fstpl
mov
cwtl
ljmp
push
jle
enter
adc
inc
or
andb
lcall
rcll
mov
in
sbb
mov
rorl
out
dec
or
ret
imul
push
rorl
xchg
jle
pop
jp
scas
sbb
outsb
inc
jns
movsl
add
xor
test
jmp
adc
cmp
fs
mov
in
xchg
cwtl
imul
pop
sahf
or
test
and
or
and
mov
cmovg
jae
mov
addr16
mov
out
fs
aas
into
xchg
loopne
test
pop
icebp
aaa
mov
adc
paddsw
add
iret
add
add
jg
neg
pop
daa
inc
icebp
xchg
hlt
or
add
leave
je
lods
mov
pop
out
adc
daa
lods
addr16
xchg
les
fidivrl
fsts
test
sub
gs
repnz
sub
xor
adc
sub
ret
pushl
test
mov
loope
sti
pop
sahf
ss
mov
repz
xchg
mov
loopne
inc
push
mov
dec
jb
lcall
lods
dec
outsb
inc
dec
lods
lea
enter
xchg
clc
push
mov
pop
je
lods
sub
inc
fwait
pop
sbb
aas
mov
inc
lret
incb
sub
sbb
xor
outsb
ret
dec
push
mov
pop
pop
inc
xor
push
or
ret
cmp
out
add
xchg
add
pop
mov
sub
addb
ja
mov
test
add
int3
rcr
mov
inc
cmp
lcall
into
xor
rorb
arpl
pusha
push
fimull
loopne
data16
jnp
lcall
add
sti
jg
cmp
je
incb
scas
stc
or
add
mov
pop
dec
push
xor
xor
pop
inc
inc
sbb
add
cmpsl
inc
push
mov
rcrb
mov
sub
int3
leave
push
push
mov
negl
cld
dec
mov
jb
xor
int3
ficompl
pop
ret
pop
pop
fsubs
mov
imul
dec
call
pop
pop
into
add
fbld
popf
dec
jbe
mov
aas
movsb
sub
inc
lret
outsb
sbb
es
jecxz
scas
mov
stos
mov
imul
fcomi
xchg
sub
test
lea
mov
ds
adc
push
xchg
xor
inc
lahf
clc
dec
fcoml
es
jg
xor
js
aas
mov
dec
inc
xlat
xchg
arpl
jg
adc
and
jl
pop
and
cmpsl
test
push
daa
mov
mov
repnz
jno
loop
pop
push
pop
pop
dec
rol
aad
gs
lods
mov
cmpsb
cmp
addl
add
add
jnp
fstp
fcompl
jmp
or
add
and
or
iret
adc
iret
mov
repz
ds
imul
pop
inc
inc
outsl
xchg
sbb
cwtl
mov
jo
jmp
fwait
mov
xor
hlt
nop
ret
push
dec
xor
add
cmp
jecxz
mov
pop
stos
mov
mov
cmp
out
cmpsl
push
aaa
sbb
mov
fsubrs
sahf
jne
push
cmpsl
and
out
inc
lret
test
xlat
add
test
scas
mov
lea
rcll
jg
aad
shll
fcomi
adc
jo
dec
int3
or
test
insb
std
sub
int
cmp
cld
pop
lods
sub
or
mov
jo
xor
addl
loope
je
iret
out
andnps
mov
jno
sti
add
mov
shll
dec
add
addr16
mov
sub
clc
jae
dec
add
out
aad
mov
outsb
dec
xlat
mov
add
add
outsl
mov
add
pop
lcall
add
add
inc
xor
sbb
pop
lods
jg
and
pop
andb
pop
sbb
jb
mov
cmp
pop
add
mov
jo
jo
jae
mov
pop
jl
inc
fdivs
enter
mov
xchg
or
iret
rorb
clc
jno
inc
add
test
sub
ret
adc
mov
mov
imul
jns
ds
ljmp
sbb
mov
test
ret
shrb
data16
or
pusha
xor
sub
adc
sbbl
adc
cld
inc
and
and
cmp
fwait
and
les
adc
pop
fisttpll
mov
aam
push
pusha
aam
out
mov
xor
fwait
stos
test
dec
jae
xchg
sbb
icebp
mov
pop
xchg
out
add
add
jmp
fucom
lret
or
add
add
in
xchg
cltd
adc
movsl
adc
in
shll
aas
ljmp
loop
sbb
push
inc
daa
inc
leave
add
cmpsl
and
mov
daa
lock
pop
imul
ret
adc
incl
call
rcl
mov
imul
jmp
fldl
and
fwait
or
lds
push
or
lods
icebp
loope
in
dec
out
add
add
roll
mov
xchg
imul
addr16
pop
mov
je
stos
sti
addb
jmp
pop
cmp
enter
cmp
lock
sub
pop
cld
cmpsb
jno
nop
lea
push
pop
out
xchg
scas
stos
daa
aam
adc
push
sbb
and
inc
dec
dec
pop
jo
sbb
ret
dec
stc
xchg
sub
loopne
push
imul
cmpsb
repnz
jmp
mov
nop
adcl
add
add
xor
test
mov
dec
or
add
add
add
mov
and
xchg
mov
mov
push
loop
daa
cmpb
test
dec
aaa
jp
mov
insb
push
jg
test
mov
xchg
mov
push
sub
mov
inc
sbb
push
mov
rcrl
xchg
pop
jo
sub
jg
jl
nop
xchg
sbb
repz
dec
test
xor
jp
ds
cmp
js
dec
sbb
xchg
rol
mov
sub
adc
imul
dec
cmpsl
jbe
or
pop
push
lock
popl
jnp
push
rcl
addr16
push
js
jbe
mov
icebp
jbe
stos
cmp
cmp
inc
xchg
enter
aad
pushf
test
aam
sub
mov
fiadds
testl
pop
imul
pusha
mov
shrb
inc
js
add
lret
mov
inc
movl
dec
cli
inc
jg
int
xchg
lods
or
cmpl
add
cs
dec
stos
xlat
mov
test
dec
jge
mov
icebp
dec
jg
popa
addl
pop
jne
push
adc
jne
loop,pt
pop
push
clc
push
addr16
dec
icebp
imul
mov
in
sbb
shrb
es
jp
mov
sub
mov
dec
jno
shl
sub
mov
mov
mov
ds
dec
inc
mov
fadd
fcompl
push
dec
mov
push
dec
inc
cmpsl
adcb
pop
mov
push
shl
loopne
adc
xchg
loop
in
loopne
sub
cmc
ret
imul
pop
push
add
adc
lret
lret
fwait
mov
xchg
dec
rcl
pop
push
fwait
add
imul
rcll
cmp
ret
iret
bound
out
jae
xor
test
dec
jb
jns
xor
add
lock
std
cmp
jle
fistpll
fidivl
dec
cmpsb
pop
adc
add
in
nop
jle
jl
push
sub
aaa
and
jno
repz
add
test
inc
in
pop
dec
inc
fwait
jns
insl
sbb
cwtl
push
push
fstl
mov
fdivs
fldenv
push
mov
add
cwtl
xchg
pop
rcr
or
mov
loopne
bound
pop
pop
dec
aad
inc
pop
pop
test
sub
xchg
xor
jnp
std
xchg
stc
addr16
lock
movsb
xor
test
push
std
sbb
xchg
pop
and
jne
stos
fbstp
and
loop
cld
push
xlat
pop
jmp
fdivrp
rorl
add
repz
mov
mov
sarl
cmp
scas
mov
aam
les
int
xor
mov
pop
inc
push
ret
sub
in
xchg
out
jb
bound
pop
fldt
jmp
cmp
fisttps
add
xchg
pop
lds
xlat
ficompl
inc
decb
xor
add
add
sar
stos
lcall
sub
test
add
ret
or
ja
and
scas
insb
call
jb
pop
mov
xchg
sbb
mov
iret
repz
icebp
and
and
push
int3
lahf
cs
ret
mov
stos
dec
sti
pop
add
leave
xor
xchg
add
inc
push
mov
mov
dec
out
push
sar
or
inc
int
xor
xlat
gs
push
xorl
dec
stc
cltd
fs
sub
mov
mov
fldl
jnp
add
dec
scas
adc
cmp
pusha
jecxz
sbb
sub
shlb
sbb
in
lret
dec
loope
push
mov
js,pt
out
adc
ret
jbe
in
fsts
dec
icebp
xchg
add
addr16
xor
xchg
inc
loop
jno
and
push
div
xchg
jns
xchg
add
dec
jmp
dec
scas
iret
outsb
jmp
push
test
jne
mov
adc
add
cmp
aas
xchg
or
fcoms
push
fcompl
fimull
jbe
insb
mov
mov
jl
mov
in
ljmp
enter
mov
js
dec
setns
add
jge
xchg
lods
mov
stos
mov
iret
mov
adc
es
testl
lret
test
mov
push
add
xchg
jmp
adc
xor
ja
outsl
push
data16
sti
jl
xchg
insb
push
add
shrb
jle
data16
rcrb
rcrl
add
inc
xchg
loopne
pop
push
mov
add
jp
mov
frstor
aam
cmp
insl
outsl
adc
test
pushf
pop
dec
jmp
nop
mov
iret
lret
sbb
xchg
subb
cmc
scas
jns
inc
pop
push
cld
cwtl
xchg
fdivl
ljmp
dec
mov
lcall
sbb
std
sbb
stc
cld
or
inc
mov
add
add
std
push
fs
mov
sub
or
aad
lods
jge
aad
push
fidivs
mov
shrl
leave
mov
jge
rclb
stc
adc
std
movsb
aaa
jbe
mov
clc
daa
adc
in
inc
pushl
cltd
sbb
adc
sbb
mov
fwait
loop
push
mov
mov
jnp
and
mov
adc
mov
sti
xchg
int
mov
in
lcall
lcall
mov
jns
inc
jbe
xchg
fdivr
pushf
inc
or
fistl
mov
inc
cmp
bound
pusha
repnz
call
ja
pop
flds
dec
mov
and
mov
xor
inc
and
cs
lds
mov
scas
sub
add
and
cmp
jle
push
into
and
jns
sub
mov
add
negl
adc
pop
xchg
cmpsb
fcom
and
sub
add
add
out
xor
sub
mov
pop
jg
jnp
cmp
cmp
fcompl
lcall
js
rcrb
jns
popf
mov
loope
jg
ss
lret
mov
or
movl
jge
sub
nop
lcall
mov
mov
lcall
lods
imul
fwait
mov
dec
in
out
inc
mov
arpl
nop
cwtl
xor
sbb
inc
addr16
cmp
adc
gs
imul
push
xchg
push
xor
jb
imul
cmp
wrmsr
lock
adc
data16
fidivs
dec
scas
mov
xchg
cmp
jo
out
xor
test
mov
pop
push
mov
jecxz
and
fbstp
xchg
in
jbe
push
jmp
inc
inc
dec
insl
xor
fstpt
inc
test
sub
mov
dec
pushl
stc
mov
mov
add
mov
subw
stc
cmp
dec
mov
mov
xchg
jae
in
adc
popa
xor
mull
pusha
and
inc
inc
icebp
mov
mov
fwait
bound
xor
idivl
ljmp
mull
lock
sar
push
mov
push
sbb
fsubl
mov
adc
call
out
jp
ret
sti
imul
mov
aaa
lcall
daa
out
or
lret
sub
scas
fisttpll
mov
test
dec
xorb
insb
push
stos
mov
loopne
cs
jbe
inc
scas
imul
dec
cmp
lea
cmp
push
mov
lods
arpl
fdivl
stc
cwtl
and
daa
jmp
cmp
call
popf
inc
add
or
adc
sub
xchg
iret
adcb
add
push
test
mov
add
inc
ja
pop
aas
dec
push
std
xor
add
jg
addb
xchg
popf
sbb
daa
sarl
pop
mov
loope
scas
or
call
and
jmp
loop
imul
jle
jmp
pop
add
inc
jle
inc
inc
jbe
aam
xor
pushf
xor
xorb
loop
mov
and
and
dec
cmp
popf
add
push
scas
stc
cmpsb
andb
adc
fnsave
xchg
mov
movsb
inc
fildll
sar
dec
dec
stc
daa
mov
shrb
push
jae
and
jbe
repz
idivb
ret
xlat
mov
call
subb
fldcw
sub
jmp
and
out
cwtl
pop
xlat
push
aam
xor
mov
int
or
adc
lcall
shll
mov
into
dec
rcl
inc
out
jo
rorb
mov
nop
out
cltd
mov
repz
jae
ja
div
mov
mov
add
add
rep
test
dec
ss
lods
dec
pop
mov
ljmp
subb
ds
and
jne
dec
or
xchg
sarb
mov
mov
cmc
popa
ficoml
inc
out
aam
or
mov
sbb
test
mov
pop
mov
inc
subl
mov
or
sbb
lret
adc
or
xor
push
popf
dec
inc
movsb
stos
idiv
pushf
rcr
jb
push
dec
xor
cli
push
add
sbb
inc
dec
jne
or
cld
sbb
call
test
icebp
push
sbb
shrl
lods
dec
imul
loopne
xor
test
sahf
xchg
jne
jle
and
adc
xchg
cli
xchg
mov
sbb
pop
jmp
arpl
xchg
push
int3
mov
stos
jne
pop
adc
cs
cmc
mov
xchg
and
xor
cli
std
jg
push
pushf
dec
add
add
add
mov
mov
in
push
push
add
adc
scas
mov
inc
sbb
and
sub
hlt
adc
imul
mov
sbb
push
mov
jl
adc
jecxz
negb
xor
jp
les
sub
mov
pop
mov
jb
loop
mov
sbb
mov
jno
fcomps
pop
push
shr
mov
cld
and
fidivrl
stos
and
sarb
pushf
lcall
aad
ret
ds
and
sub
loop
and
inc
imul
sub
jnp
movsb
xor
and
pop
mov
jg
and
imul
adc
sarb
je
scas
jbe
adc
sub
jne
xchg
es
jno
movsl
inc
testb
jle
inc
iret
jb
xchg
repnz
and
addr16
sti
inc
out
add
add
add
mov
std
incl
sbb
and
fnstsw
add
sub
push
fidivl
and
movsl
stos
test
cwtl
movl
sarl
loop
fstl
in
ret
lcall
outsb
push
mov
mov
xor
mov
jg
gs
aaa
or
das
jg
xchg
push
hlt
push
out
push
shll
lcall
pop
outsb
sub
fidivl
dec
mov
inc
fwait
inc
stos
out
lds
call
call
xor
xchg
adc
mov
mov
inc
aaa
xor
dec
ret
leave
sub
push
inc
sbbb
scas
sbb
addb
jecxz
pop
sub
insb
inc
cmc
aas
mull
enter
mov
ja
sub
int3
sahf
pop
jns
aaa
fstl
dec
push
out
fsubs
pop
mov
outsb
or
sub
leave
jmp
push
es
jg
pop
or
xor
mov
sbb
add
scas
or
imul
aas
and
add
jo
inc
sub
pop
fcoms
mov
push
mov
cmp
imul
testl
lea
mov
testb
mov
call
inc
push
data16
int3
dec
and
mov
nop
lahf
fimull
mov
adc
dec
cltd
inc
push
out
sub
cmp
mov
inc
xor
push
and
lds
xchg
xor
mov
sub
cmp
inc
xchg
das
jo
fmuls
test
loop
mov
mov
mov
mov
aaa
imul
xorb
loopne
push
dec
lret
nop
xchg
add
sub
xor
ss
push
cmp
or
addr16
aaa
adc
xor
mov
int
movsl
sbb
add
add
or
dec
push
cmp
sbb
add
nop
aas
pusha
dec
jbe
dec
xor
push
out
push
xchg
dec
mov
ret
and
add
testb
mov
lock
lock
or
je
inc
adc
jmp
stos
popf
cmp
mov
cmp
rcl
or
in
mov
push
nop
push
pminsw
dec
jne
xor
mov
push
mov
fcomp
or
pop
mov
out
mov
push
inc
inc
push
cmp
in
out
xchg
lret
push
loope
mov
or
xor
add
dec
mov
and
aas
ljmp
jnp
sub
xchg
pop
cwtl
or
popa
add
ljmp
pushf
inc
mov
mov
ficompl
add
add
insb
std
lds
jle
cmp
mov
xchg
push
or
xor
xchg
clc
cmp
inc
dec
mov
add
add
stc
lods
xor
mov
pushf
cmp
add
add
std
xchg
lahf
je
mov
aas
nop
mov
mov
adc
mov
sbb
dec
lahf
shll
fildll
leave
mov
xchg
push
pop
ljmp
xor
add
add
xchg
push
dec
iret
lds
xchg
leave
xor
xor
mov
pop
outsl
sub
pop
pop
jge
mov
add
sbb
jl
out
shlb
add
sbb
pop
in
outsl
not
add
jnp
jecxz
sbb
push
aad
add
mov
mov
test
or
fldenv
stos
push
in
stos
aam
in
pop
std
out
decl
xchg
mov
mov
dec
lods
cmp
imul
pop
loope
mov
mov
aas
pop
pop
ret
ja
sbb
cmp
push
xchg
xchg
roll
cli
in
inc
repz
sub
rcll
add
ficoms
stos
sbb
call
mov
pop
pop
add
add
fstpt
cmp
dec
js
rorl
mov
cmp
mov
int3
push
jo
pop
mov
lods
fwait
xchg
rolb
test
adc
test
es
test
imul
mov
test
iret
lods
lcall
push
jb
xlat
js
xor
dec
sti
or
push
mov
testl
cwtl
sbb
mov
inc
inc
and
hlt
lret
out
mov
jp
clc
mov
or
or
mov
in
cmp
jae
inc
cmpsl
pop
xor
xchg
addb
adc
rclb
push
test
dec
into
and
das
outsl
jnp
scas
lahf
push
dec
scas
or
fidivrs
nopl
outsb
xor
adc
loop
mov
and
mov
fs
dec
in
js
push
push
mov
loop
sbb
add
mov
out
stos
jge
or
leave
pop
and
add
insl
movsl
rolb
pop
push
mov
jl
sahf
dec
adc
jnp
and
cmc
pop
xchg
dec
xor
push
into
icebp
lods
push
push
movswl
mov
sbb
pushf
out
mov
movsb
mov
or
leave
pop
pop
cmc
xor
shll
xor
push
sub
loop
test
adc
push
imul
and
gs
and
clc
or
push
jae
pop
orl
mov
push
xchg
fisubrl
mov
pop
xchg
sbb
sti
push
push
dec
in
adcl
addr16
cwtl
loope
ficoml
and
and
adc
loopne
cmpsl
dec
out
jbe
ret
pop
fs
xor
repz
js
in
negb
and
mov
cmp
dec
sub
test
mov
sbb
inc
mov
inc
ds
iret
daa
dec
mov
jecxz
rorb
mov
les
add
add
sbb
out
xchg
iret
push
aas
mov
and
add
xchg
jo
cmp
mov
mov
cmp
pop
in
popa
scas
adc
mov
inc
or
xor
in
outsl
adc
int3
mov
mov
cmp
cmp
lahf
mov
bound
or
aam
pop
in
adc
arpl
shlb
mov
or
data16
sub
in
inc
cmp
xor
adc
adc
gs
inc
adc
test
mov
bound
stc
jae
daa
hlt
ljmp
dec
out
int3
call
push
dec
jno
andl
aam
dec
cld
sbb
jno
cmp
mov
jl
mov
xorl
push
pushf
test
sub
dec
cwtl
push
and
adc
jnp
aas
notb
lret
pop
mov
xchg
add
xchg
sub
add
aam
add
cmp
out
loope
jns
sub
imull
and
add
cmp
xchg
dec
pop
daa
popa
mov
test
mov
call
sbb
shlb
or
sub
sub
mov
in
sbb
mov
ret
popa
xor
hlt
inc
mov
cld
aad
pop
les
mov
and
cld
mov
mov
jne
fbld
or
cmp
mov
sub
mov
add
aad
and
cmpsb
iret
fxch
sbb
jl
sub
popf
mov
ret
fmul
mov
pop
out
jo
sub
mov
mov
shl
cltd
mul
push
xchg
sti
sbb
sbb
fisubrl
notb
filds
call
mov
jle
iret
jnp
hlt
push
cld
adc
sbb
and
xchg
popf
frstor
push
dec
ret
add
aaa
mov
add
test
sbb
sti
push
mov
mov
and
add
push
movsl
es
pushf
pop
sbb
mov
lcall
or
out
xor
and
jo
mov
xchg
push
cmp
mov
jmp
xchg
cmp
sbb
scas
inc
fcoms
fisubl
pop
mov
jbe
les
jp
jl
mov
addr16
pop
mov
push
aam
jl
mov
mov
mov
mov
mov
jbe
ds
cmp
cmc
xor
ss
and
jb
ljmp
xor
daa
ret
pushf
jmp
or
repz
shrl
test
sti
bound
in
xchg
push
adc
pop
cmp
lds
mov
das
and
pop
imul
push
dec
sbbl
push
sti
jbe
push
xchg
jp
mov
xor
mov
mov
jno
sub
jmp
daa
pop
xor
add
mov
dec
idivl
cld
ret
add
adc
add
add
add
outsb
adc
sub
lcall
ds
jl
rolb
sbbl
sbb
xchg
xor
pop
hlt
jecxz
mov
lea
cmp
cwtl
inc
stos
in
enter
cs
out
je
mov
mov
dec
jnp
lret
out
push
or
mov
push
xlat
ds
popa
lcall
lahf
gs
mov
insb
movsb
jne
aaa
pop
push
adc
stc
ret
pop
loop
in
fists
mov
xchg
mov
in
cmp
push
sbb
or
test
sar
pop
into
and
cmp
xor
aam
mov
push
mov
or
sbb
sbb
lret
or
mov
loopne
shr
popa
or
fnstsw
sub
jl
fnstenv
scas
adc
jp
es
or
xor
clc
mov
jle
cmp
add
ret
mov
iret
mov
push
jecxz
pcmpeqd
add
xor
movsb
push
inc
cmc
push
inc
dec
das
loope
lods
mov
pop
xchg
add
stos
mov
icebp
mov
out
inc
and
lock
cs
int
mov
pop
pop
and
jae
fs
das
loope
cwtl
or
cmc
lret
bound
out
adc
mov
jl
jo
mov
add
aad
ret
or
jge
mov
jno
add
jl
add
and
lahf
push
andb
cs
dec
push
pop
mov
sti
mov
sub
nop
mov
fsubrl
sub
jg
decl
nop
xchg
xchg
bnd
lcall
push
pop
sahf
lret
call
mov
push
rcl
adc
xor
cmp
int
push
out
lods
flds
or
mov
fs
push
sbb
cli
fmul
mov
cmp
xor
imul
pop
mov
lahf
loope
add
add
mov
jg
arpl
nop
stos
jb
add
add
push
insl
outsb
loopne
or
add
jmp
inc
adc
jmp
fbstp
outsb
push
std
or
fistpl
inc
cmp
ss
mov
inc
dec
pushf
ret
icebp
mov
mov
cs
pop
mov
aad
sub
sbb
inc
les
imul
out
jle
pop
pop
enter
sti
mov
jnp
cmp
mov
popl
inc
jecxz
pop
bound
repnz
cmp
out
into
repnz
es
ficomps
push
mov
pop
loop
hlt
mov
xchg
ficompl
xlat
pop
lret
mov
add
mov
lret
or
lret
test
arpl
sbb
jns
mov
jge
push
dec
scas
loope
fsubs
lea
lcall
or
cmpsb
and
in
and
jae
add
shlb
cli
clc
cli
clc
sarb
sti
mov
lahf
mov
add
inc
scas
and
cltd
pop
cmp
int3
pop
dec
lret
dec
lea
add
or
inc
stos
jo
xchg
sahf
mov
dec
xor
imul
incb
fnstenv
test
bound
std
jmp
fsubr
movsb
sbb
push
lock
loop
nop
jmp
push
xchg
fdivl
lds
scas
xor
xchg
insb
loope
cmc
sub
xor
es
ljmp
push
and
stc
mov
fsubs
xor
push
andb
pop
outsb
dec
repnz
scas
subl
jb
inc
cmp
rorb
repnz
cmpsl
push
dec
clc
mov
xor
mov
sbb
push
sbb
popa
xchg
aaa
std
xchg
into
gs
je
pop
test
push
push
mov
jl
insb
mov
mov
cli
int3
xchg
iret
in
pop
fdivr
push
add
add
jnp
out
mov
inc
int3
test
add
add
movsl
mov
and
or
in
outsl
mov
dec
rol
out
cs
push
sti
in
push
fistpl
hlt
sub
dec
cmpsb
inc
xor
add
jns
fcmovu
add
sub
push
jp
pop
dec
inc
sub
mov
idiv
ljmp
aam
dec
rorl
mov
mov
mov
pop
or
inc
mov
sbb
fbld
cmpsb
int
push
out
pushf
xorb
cwtl
xor
and
xchg
ret
xchg
test
jo
ds
mov
cmp
daa
test
fdivl
aad
enter
dec
mov
xor
add
in
ret
push
fisubrs
aad
sbb
js
test
mov
inc
scas
cmp
test
xor
sbb
sub
dec
jg
xchg
and
add
fstpl
adcl
adc
xchg
pop
nop
out
std
stos
insl
addl
daa
sub
hlt
push
dec
popa
add
add
es
data16
insb
daa
mov
in
into
xchg
mov
add
add
stc
push
or
iret
hlt
icebp
test
fcoms
xchg
push
jp
xlat
mov
dec
adc
popf
fistpl
insl
enter
or
aaa
roll
mov
jno
jmp
movsb
adc
sarl
hlt
jmp
or
xchg
rorb
mov
add
and
cli
mov
pop
mov
aam
lcall
fiaddl
jp
in
fucom
outsl
push
scas
rorl
mov
enter
xchg
nop
stc
mov
insb
add
out
and
rcll
movsb
push
mov
lds
or
movsb
push
bound
fisubs
out
xchg
dec
cmc
in
out
jns
push
cli
or
fwait
cli
lods
aad
add
es
pop
insl
gs
aas
push
fistpll
outsb
shrl
in
rorl
jl
sub
fcoms
ljmp
inc
or
inc
jb
xlat
test
inc
mov
jne
push
jns
mov
flds
sbb
sub
popa
add
add
dec
mov
imul
inc
into
add
jmp
cmp
pop
xchg
insl
xchg
xor
ss
inc
enter
jno
fbld
dec
ds
insb
insl
push
cli
shlb
xchg
mov
jnp
fisubrs
jnp
lret
dec
xor
pop
mov
out
cmp
sar
mov
loop
cmp
sub
push
and
rcll
or
imul
ffree
outsb
xor
jg
xor
rcll
push
mov
repnz
repz
inc
out
filds
xchg
fwait
inc
inc
cmpsb
imul
mov
pop
dec
rolb
scas
cmp
xor
test
mov
dec
push
cmpsl
jb
xor
repz
jno
int
mov
mov
ljmp
pusha
xchg
push
aam
inc
test
pop
mov
mov
daa
sbb
shr
sbb
je
insl
xor
fiaddl
out
je
pop
add
add
add
and
push
sti
cmpsl
enter
cmpsl
xchg
push
xchg
sub
add
xchg
mov
stc
addl
xor
xchg
fs
es
call
mov
cld
sbb
push
add
and
test
or
xor
xchg
shrl
inc
sub
push
out
adc
or
lahf
imul
popf
and
mov
push
pop
fldl
mov
sti
into
dec
fdivrs
push
pop
clc
fmul
in
xchg
faddl
xchg
fchs
cld
repnz
mov
dec
and
cmp
pop
js
mov
in
pop
push
rorb
lret
lahf
paddd
xor
hlt
mov
aad
shll
movsl
loop
pop
mov
jb
lcall
int
lock
lcall
xchg
pop
ss
mov
jo
mov
xor
rorb
rcrb
jle
push
not
mov
mov
fstpl
sub
andb
out
sbb
sbb
add
push
and
std
mov
dec
push
loop
cs
sub
add
cmp
fistpl
mov
test
mov
mov
mov
sar
and
cli
pushf
in
jnp
xor
xlat
fnstcw
jp
mov
pop
in
push
push
lea
xor
sub
sub
popa
mov
std
ss
clc
cmpsl
popa
std
mov
fsubl
sub
add
movsl
push
ret
cmp
mov
imul
dec
scas
shll
or
mov
pusha
xchg
ja
cmp
into
pop
cmp
xchg
jmp
jo
pop
cltd
jp
push
cmp
mov
add
add
lahf
sub
mov
leave
cld
adc
mov
add
add
gs
mov
push
jmp
lods
popa
cmpsb
je
push
test
sarb
lret
add
add
shlb
fstps
xor
ficompl
xchg
pop
jae
and
jae
insl
cmc
lds
xchg
and
inc
and
lcall
add
add
rcll
adc
cmp
mov
jne
movsb
push
movsl
xchg
loope
imul
fwait
ja
push
cltd
pop
jl
mov
push
repnz
cmp
out
icebp
dec
or
sub
jno
dec
jo
lcall
pop
dec
inc
xor
xchg
lods
ja
push
mov
fcoms
test
cmp
scas
sahf
sahf
push
ja
scas
mov
repnz
arpl
cwtl
push
jp
in
sub
push
popa
cmp
dec
xchg
lahf
push
stos
mov
pop
and
pusha
ficomps
mov
dec
shl
jl
sbb
mov
push
mov
lret
pop
jne
lock
popf
push
lods
add
mov
out
adc
int
jnp
decb
push
cmc
out
rorl
xchg
insl
mov
call
cmpsb
or
xor
shlb
push
mov
cld
aam
cmp
xor
add
add
add
xchg
ficomps
cmp
lahf
cmp
and
add
test
je
adc
pop
pop
inc
push
pop
aam
mov
je
xchg
mov
test
mov
movsb
cmp
fyl2xp1
inc
mov
clc
push
fcomp
fsub
rolb
pop
cmp
mov
jns
push
out
shll
cmc
sbbb
jmp
mov
jbe
shll
mov
push
pop
es
dec
call
outsl
divl
and
lret
mov
aad
push
vmwrite
jl
scas
push
in
xor
inc
sub
test
mov
movsl
sti
push
sbb
lea
aas
adc
rclb
imul
xchg
pop
ret
jmp
je
aad
jg
xlat
lret
pop
mov
pop
jbe
lret
dec
stc
jmp
cli
dec
jae
repz
mov
mov
and
push
and
out
aas
and
inc
ljmp
adc
add
arpl
ja
sub
add
das
add
add
pop
fists
loop
lret
push
sub
nop
scas
mov
adc
pop
and
in
bound
dec
push
push
rolb
add
in
jo
test
or
dec
out
mov
fiaddl
imull
sub
shlb
loope
or
mov
cmp
rcrl
ret
jle
ror
adc
sub
mov
nop
xlat
push
lahf
ficoms
test
scas
dec
ret
mov
push
icebp
mov
insb
repz
rclb
jp
test
vpopcntb
loop
fs
xchg
or
pop
das
ror
ss
adc
cmp
dec
push
test
frstor
inc
mov
loope
leave
in
sbb
xor
xor
sbb
fwait
pop
insb
xchg
cld
lds
and
mov
mov
push
xor
ds
das
movsl
aaa
jecxz
rclb
ja
push
movsl
push
mov
bound
push
pop
pop
add
add
lret
mov
or
imul
lods
xor
add
out
les
fsubrs
insb
lret
adc
imul
ds
push
incb
jb
stc
push
outsl
fidivrs
push
enter
jmp
or
adc
xlat
outsl
mov
adc
and
dec
sbb
dec
and
cmp
jl
pop
or
data16
cmp
addr16
mov
enter
jnp
sub
sbb
ljmp
insb
xchg
imul
jmp
pop
jmp
push
mov
pushf
cld
movsb
test
out
out
dec
pusha
sbb
xor
fwait
lods
push
repz
sub
loope
mov
push
jnp
out
cmp
jno
fsubrs
in
dec
cwtl
aas
dec
outsl
jp
shlb
xchg
jo
inc
dec
xchg
jl
loope
fs
gs
push
lods
movb
and
gs
sahf
jnp
mov
bound
sub
mov
in
or
jo
stos
notl
add
jne
add
add
sti
pop
jge
neg
hlt
add
push
mov
add
add
punpckhbw
out
fldenv
js
rolb
push
decl
mov
push
stos
xor
int3
xor
fdiv
fwait
push
jb
xor
pop
sbb
fisttps
adc
int
mov
rorb
pop
ja
std
pop
pop
jmp
add
clc
xchg
dec
jb,pn
int
add
inc
xchg
pop
add
mov
out
test
arpl
int3
fisubs
jecxz
sti
jns
aas
outsb
fs
xlat
lods
xchg
adc
lret
mov
iret
arpl
aam
sbb
ret
sbb
dec
pusha
mov
fistpl
cmp
fstpl
xchg
call
and
mov
lock
pop
insb
hlt
pop
mov
dec
adc
pop
leave
hlt
lret
inc
lds
mov
mov
jmp
out
jl
jb
arpl
inc
inc
mov
jmp
pop
sahf
push
push
outsl
dec
jmp
cwtl
jp
ret
add
add
add
fsub
std
in
popf
in
stc
jmp
mov
add
add
dec
cmp
stos
lahf
cmp
int
roll
mov
mov
loop
sub
data16
mov
inc
aam
cmp
sub
lcall
cmpsb
jb
xor
leave
and
fdivrl
lock
adc
les
pop
popa
outsl
jne
divl
adc
xor
sbb
add
nop
mov
loopne
mov
cld
xchg
and
add
push
lods
mov
std
and
fdivrl
stc
xor
cmpsl
pop
and
xchg
ret
pushf
dec
test
cld
inc
cmpsl
in
insl
es
inc
int3
mov
ret
dec
mov
push
xor
popa
orb
sub
daa
stos
dec
ficoml
test
js
bound
iret
js
fistl
mov
sahf
xlat
ret
ret
int3
hlt
cmc
lcall
je
imul
add
add
jp
jnp
sti
xchg
jle
jp
lods
insb
sti
int
mov
add
add
shll
nop
pop
cmpsl
push
add
enter
add
test
mov
adc
mov
xchg
push
retw
fldl
mov
mov
gs
push
push
pop
xchg
dec
jmp
iret
in
sarb
mov
mov
mov
xchg
xor
xchg
std
sub
xchg
push
dec
mov
loope
pop
and
daa
jle
dec
imul
jne
xchg
add
mov
xor
cld
xlat
int3
jb
lret
jle
inc
je
jnp
mov
addr16
shll
xor
inc
ss
cltd
jg
jne
fwait
cmp
add
out
adc
mulb
jae
add
lock
dec
ljmp
shl
push
push
add
int
and
mov
push
sub
mov
iret
jbe
int
lret
sub
mov
sbb
repz
or
add
mov
push
sti
decb
mov
rol
xor
add
add
sarl
sub
mov
lea
mov
sub
cmp
loope
js
mov
scas
dec
lret
sub
inc
femms
pop
or
push
fiaddl
notb
lods
xor
xor
popa
mov
fisttps
jbe
xlat
xchg
mov
adc
mov
cs
cmp
fisubs
or
sub
clc
sub
or
sbb
notl
sbb
addr16
push
je
stc
or
sub
mov
bswap
out
je
push
mov
cs
jns
cli
xchg
push
rcrb
loope
mov
cmp
dec
nop
rclb
sbb
and
mov
jle
push
fcmovbe
pushf
mov
imul
add
cwtl
jb
push
and
dec
push
ss
aam
jo,pn
mov
in
dec
leave
dec
add
add
cmp
xor
hlt
mov
loope
xor
add
ret
mov
testl
shl
in
add
push
jp
mov
add
ja
xor
hlt
cmp
add
cmp
repnz
mov
mov
test
lahf
leave
call
xor
insl
push
into
lahf
int3
outsl
push
idivb
cmp
hlt
push
psadbw
aad
ror
lret
incb
sub
mov
mov
xor
inc
cs
inc
out
jg
adc
fsts
xlat
xrelease
lea
jbe
or
bound
cmpsl
hlt
cmp
cmp
pop
cmc
sub
adc
fldl
xchg
mov
mov
rclb
xchg
in
pop
add
or
and
jle
rorl
adc
insl
mov
test
sub
dec
dec
lods
mov
push
dec
jmp
pop
jle
add
add
cmp
jge
stos
lea
shrb
std
loop
add
add
pusha
inc
sbb
inc
ja
divl
iret
and
xchg
out
push
sti
leave
cmc
xchg
add
cmp
adc
jge
sub
into
lret
mov
dec
adc
in
cmpsl
cs
div
add
andb
push
out
mov
lock
dec
xchg
js
push
xchg
out
dec
rclb
inc
insb
push
or
out
nop
pop
dec
push
rcll
cwtl
and
out
mov
in
adc
cwtl
sbb
mov
pop
mov
jbe
int3
mov
insb
dec
dec
sub
sub
sub
sub
cltd
out
jge
dec
sbb
dec
mov
pop
sub
lret
popa
push
push
lods
aad
adc
and
psllw
jmp
mov
and
xchg
ret
rcrl
xor
loopne
xchg
cmp
daa
cmpsl
popf
jo
lea
pop
ret
push
fldl
test
push
dec
scas
xor
jb
add
add
rclb
nop
lcall
aaa
add
add
nop
xchg
cmp
jecxz
repnz
nop
jmp
or
xchg
mov
movsb
xor
insl
push
jg
xor
push
push
dec
push
xor
jnp
mov
sahf
cmp
jge
jg
xchg
jbe
push
pop
adc
xchg
repz
xor
negl
arpl
jecxz
lret
out
addr16
loopne
mov
adc
push
inc
mov
inc
cmpb
mov
sbb
shll
lret
das
mov
sbb
ret
jno
mov
cmpsl
xchg
sub
jle
mov
jp
out
leave
aam
icebp
int3
aas
dec
in
push
cmp
in
test
aaa
or
xchg
sahf
and
fcoml
push
enter
pop
fnstcw
dec
jmp
pop
cmp
pop
fcom
jns
lods
ds
mov
addr16
lds
and
push
xor
xor
filds
cmp
sbb
pop
mov
add
add
jbe
idivl
or
push
ret
cmp
add
ret
mov
ss
or
into
lds
push
ds
cmp
rcll
test
insl
in
dec
js
sbb
mov
or
sbb
sbb
jmp
xor
cmp
xor
push
jl
inc
outsl
and
adc
push
cmpsb
sbb
lea
jnp
pop
mov
icebp
mov
fstp
in
div
fistl
insb
mov
sti
inc
dec
rcr
sbb
insb
aam
pop
lahf
int3
add
scas
adc
add
sbb
sbb
jge
xchg
fwait
lods
push
sub
pushf
idivb
std
fwait
loopne
mov
movsb
sbb
inc
xor
and
imul
or
cs
and
pop
and
xchg
fwait
jg
jmp
sub
icebp
fstpt
dec
ja
cmpb
mov
add
add
mov
xor
loope
movmskps
sahf
jmp
push
gs
das
dec
inc
icebp
xchg
std
out
jae
add
add
outsb
sub
stos
fs
jmp
leave
aas
adc
lcall
add
or
aad
inc
in
cmp
fsubr
movsl
lds
pop
adc
lret
jecxz
and
out
lret
aad
inc
sbb
and
fbld
inc
inc
xlat
push
and
xor
cmp
mov
shll
out
enter
jle
out
mov
and
cmpl
mov
leave
sti
jbe
int
or
and
sti
call
cmp
push
dec
addl
and
add
daa
and
enter
mov
gs
orl
jl
addr16
fs
ja
ror
es
or
sub
call
mov
sahf
push
pop
adc
jo
jae
xchg
ret
and
add
jmp
stos
xchg
bound
loope
or
insb
xor
mov
jo
or
ret
sbb
shrl
add
add
insb
pop
pushf
scas
fistpll
outsl
gs
inc
fistpll
add
add
fisttpll
and
xchg
popa
popf
test
adc
pusha
es
roll
arpl
mov
leave
mov
popa
std
inc
test
fnstcw
pop
dec
shrb
mov
dec
or
fdiv
or
int
data16
jl
ja
mov
sti
mov
xlat
or
dec
mov
mov
mov
pop
mov
dec
daa
js
cmpsb
loop
movsl
adc
xchg
dec
mov
int3
push
lock
out
mov
aad
and
lcall
mov
movhps
jge
insb
jecxz
inc
sub
and
icebp
imull
pop
loope
push
xlat
dec
or
xor
adc
in
pop
sbb
repz
pop
loop
mov
ljmp
cmpsb
fisubrl
faddl
inc
jmp
inc
adc
mov
sahf
vpunpckhbw
pop
push
imul
add
cmp
movsb
push
sbb
sbb
add
testl
fcomps
add
js
cs
mov
in
sub
lcall
add
push
ss
fldcw
ret
out
cmc
fisubrs
and
aam
cltd
pcmpeqd
test
insl
pop
add
mov
in
ja
xchg
subl
jmp
das
pushf
mov
xor
insl
pop
xor
push
cmpl
push
lock
jecxz
dec
icebp
add
lods
or
push
push
xchg
cli
mov
adc
mov
adc
adc
bnd
mov
xchg
int3
mov
mov
adc
push
adc
fnop
imul
pop
push
pop
or
ds
jno
sub
scas
adc
cltd
gs
pop
mov
fisttpl
lods
lcall
mov
push
gs
mov
jl
mov
aas
cmpsb
jns
push
and
add
outsl
lret
mov
out
jmp
ficoms
add
pop
jae
dec
xchg
andb
adc
aas
enter
aas
and
xor
movsb
sti
ror
popf
mov
mov
popf
cmc
mov
dec
pushf
in
cli
inc
das
sbbb
push
adc
inc
adc
push
lcall
xchg
pop
mov
push
push
lods
xor
repnz
jns
call
dec
rcrb
ljmp
dec
and
sub
sbb
inc
mov
mov
mov
pusha
add
jl
add
dec
in
dec
aad
jle
and
cmp
xor
out
sub
sub
xchg
push
out
daa
mov
and
lcall
scas
pop
jbe
std
pop
push
and
xchg
lods
test
lods
cli
loop
dec
icebp
mov
mov
fwait
mov
int3
lods
add
sub
popa
sbb
cmp
loopne
add
add
repz
cmp
lods
repz
mov
sub
xchg
sbb
add
movsl
lds
mov
mov
sbb
test
std
xchg
and
push
mov
test
pop
cmpb
scas
xlat
gs
call
cmp
cmpsb
ret
pop
test
fwait
scas
dec
cmp
sub
sti
and
dec
cwtl
ja
jno
fwait
lea
xchg
dec
inc
add
fnstsw
mov
insl
pop
cwtl
mov
popf
sbb
pop
out
ror
in
bound
and
push
out
subl
push
fnstcw
inc
ljmp
sub
jmp
inc
xchg
add
sbb
fs
mov
movsb
sbb
andb
ret
insl
add
je
push
mov
hlt
push
out
ss
mov
and
dec
inc
lahf
push
scas
negl
in
add
xorl
ja
syscall
or
mov
rolb
out
add
aas
daa
push
cld
push
std
jmp
dec
push
xchg
jmp
add
aaa
je
in
int
inc
and
lock
imulb
mov
xor
into
add
dec
sbb
iret
xor
mov
inc
push
lock
mov
adc
loop
add
mov
out
outsl
int3
push
sub
in
lock
int3
pop
mov
mov
jmp
test
mov
sub
outsl
std
mov
mov
push
sbb
mov
inc
jns
sarl
push
mov
in
xor
les
mov
aaa
mov
inc
jae
dec
pop
and
les
repnz
fwait
jnp
dec
gs
push
jbe
lock
xchg
push
insb
dec
mov
push
add
jns
jle
fptan
stc
pop
andb
bound
insl
aam
inc
mov
add
call
push
lahf
dec
mov
cmp
mov
push
insl
pop
mov
add
add
add
sbb
dec
push
out
aad
dec
pop
mov
add
iret
xchg
or
push
pop
add
mov
faddl
das
mov
dec
dec
je
cs
jo
push
scas
jmp
and
adc
push
hlt
rolb
enter
pop
mov
pop
inc
mov
lods
insb
imul
sub
cmp
push
mov
push
insb
icebp
mov
xor
dec
fidivl
xchg
fbld
jl
jmp
lcall
outsb
push
decl
lret
mov
xchg
pushl
push
mov
fadd
inc
lock
bound
popf
push
out
ret
inc
push
lahf
int3
imul
cmp
pop
mov
nop
fcmove
arpl
xchg
in
or
fs
mov
mov
sbb
add
ljmp
inc
sbb
pop
xchg
adc
pop
dec
loopne
fcompl
mov
les
add
add
idivl
or
jp
outsl
std
inc
add
add
nop
inc
xchg
cmp
rorb
repz
and
lcall
not
push
push
loop
negb
popa
shl
fnstsw
aas
pop
ljmp
mov
shll
xchg
popf
dec
cmp
and
sbb
incl
push
sub
xchg
mov
add
stos
pop
movsb
jbe
jl
or
add
fbstp
icebp
jge
loopne
or
in
push
mov
push
ffreep
or
add
mov
ficompl
pushf
and
xor
and
jne
out
jp
callw
pop
dec
dec
or
andl
sbbl
je
aas
inc
or
shrd
push
jle
mov
aas
xlat
pushf
out
mov
fwait
inc
arpl
std
pop
in
adc
mov
fcmovnbe
jge
or
outsl
lahf
mov
add
cli
inc
notl
push
insb
ja
add
add
jg
xchg
orl
scas
add
add
cwtl
dec
lret
push
ret
gs
mov
sbb
sub
sub
adc
adc
push
cltd
sbb
xchg
mov
cltd
xor
subb
cmp
xchg
in
loope
mov
rcrb
loope
pop
orl
clc
das
sbb
addb
push
cli
enter
jg
push
xchg
push
cltd
mov
sar
pop
shll
xlat
add
std
in
lahf
jbe
or
roll
mov
pop
int3
rcl
sub
or
insl
adc
inc
out
or
pop
int3
push
sub
div
adc
pop
mov
xor
lahf
sbb
in
cmovg
adc
push
loope
out
sbb
xor
sub
cmpsl
jns
push
cmp
cmc
and
inc
jae
orps
out
addr16
mov
ss
and
test
dec
std
shl
testb
and
dec
lret
jmp
imul
aaa
je
ds
pop
inc
add
add
cmp
outsb
pop
fistpl
outsl
mov
mov
lods
mov
and
pop
out
es
and
cli
inc
shlb
xchg
adc
xlat
sbb
xor
pusha
out
in
inc
in
into
mov
int
xor
jbe
in
popf
add
cmp
push
insb
lret
fwait
stos
andb
fsubrl
movsl
mov
lret
sub
jecxz
fxch
xor
sub
adc
lock
jae
inc
insb
scas
sbb
or
mov
xor
out
or
dec
push
mov
push
loop
cmp
mov
in
pop
in
test
add
jbe
aaa
inc
lods
out
or
std
lret
jg
lods
or
pop
cmp
mov
or
jge
sbb
div
mov
xor
lea
or
icebp
outsl
fmul
movsb
divl
out
inc
push
mov
push
jnp
mov
and
add
add
cwtl
loope
std
jge
cwtl
xchg
push
sub
inc
add
add
mov
leave
mov
add
adc
adc
push
pushl
mov
aas
mov
xor
shlb
mov
and
lret
mov
push
push
xchg
or
mov
pop
insl
lret
mov
daa
pop
adcb
aad
ds
mov
data16
loopne
mov
inc
out
mulb
or
inc
inc
js
inc
fistpl
aaa
loop
insl
inc
jg
arpl
test
jne
mov
inc
cmpl
notl
aas
mov
jne
iret
out
add
sbb
add
pop
xor
pinsrw
mov
ror
popa
jp
add
ljmp
mov
mov
aam
xchg
jle
aas
outsb
loopne
and
in
add
into
jg
pusha
sahf
push
inc
push
pop
xchg
pusha
lds
fs
aaa
ljmp
inc
xor
xor
fstpt
push
add
sub
jns
xor
jg
sub
adc
add
mov
rorl
cmp
stos
jno
cmp
shl
inc
repz
mov
or
mov
inc
xchg
into
mov
cmp
xchg
push
cmpsb
jecxz
mov
lret
adc
lods
adc
cmc
or
fisttps
sbbb
cmpsl
daa
fidivl
test
pop
xchg
addb
or
push
mov
add
inc
movsl
cmp
ret
aam
push
and
das
addb
popf
call
ljmp
xchg
test
push
jnp
imul
inc
in
xchg
mov
into
sti
and
xchg
cmp
adc
push
fucomip
fidivs
aam
add
mov
push
pusha
jecxz
lahf
cmp
popa
cli
inc
add
rclb
mulps
int
cmp
shr
stc
ja
xchg
movb
push
adc
xor
mov
mov
dec
jmp
xor
dec
rorl
or
add
js
ret
jg
decl
rol
and
add
add
jns
std
mov
or
aaa
push
push
mov
cmc
mov
add
and
into
pop
pop
or
pop
lods
and
lods
in
sbb
pop
test
lahf
cmp
movsb
cmpsb
rcr
inc
push
adc
outsb
sbb
push
in
pop
aaa
into
pop
sbb
sub
inc
and
in
sub
in
outsl
out
push
jne
and
add
out
or
shll
int3
cwtl
inc
subl
movsb
cltd
xchg
adc
movsb
adc
je
and
push
dec
xchg
xor
inc
xchg
sbb
fs
jnp
pop
inc
insb
lret
or
andl
daa
xor
jbe
push
out
insl
les
and
setp
pop
xor
mov
sbb
jge
push
xchg
es
pop
jp
rorl
add
mov
incl
inc
and
adc
mov
out
aad
ret
push
cmp
inc
add
add
push
mov
or
lret
shl
inc
push
or
cwtl
cmp
hlt
cli
dec
mov
mov
sbb
push
addr16
pusha
and
ret
mov
dec
add
fldt
mov
shll
push
mov
or
addr16
decl
cmp
lds
cmp
std
adc
cmc
dec
outsb
mov
gs
loop
aam
jnp
shrl
mov
mov
pop
fidivrl
jle
mov
mov
loopne
sahf
pop
popa
ret
or
jmp
out
mov
xchg
add
lods
pop
clc
shrd
mov
subb
es
mov
push
and
pop
mov
adc
in
loop
in
rcll
jno
mov
push
cmp
lock
or
jge
mov
mov
insb
dec
mov
jp
xchg
adc
add
add
hlt
gs
dec
adc
xchg
mov
dec
add
add
cmp
jmp
mov
xchg
loopne
and
mov
mov
fs
push
lods
bound
daa
jb
xor
jle
push
add
cmp
mov
add
mov
rorl
subb
arpl
fldenv
push
pop
adcl
dec
out
push
hlt
jle
jns
sbb
push
sbb
mov
dec
jmp
gs
lods
lret
sub
xchg
insb
pop
lret
adc
rorl
aaa
mov
xchg
addr16
test
fucomp
es
jns
imul
dec
mov
mov
push
mov
stos
sarl
mov
xor
ficoml
test
mov
mov
andb
in
mov
xchg
adc
pushf
lea
out
loopne
xchg
movl
xor
mov
add
aas
gs
pop
repnz
dec
add
add
xchg
adc
aaa
js
test
ss
inc
es
push
rcr
pop
mov
lcall
addb
push
dec
out
inc
pop
data16
adc
jmp
and
and
xor
jb
pop
movsl
jne
outsb
xchg
jle
aam
jge
or
clc
mov
jle
lret
movsl
sub
out
loop
in
xchg
xchg
add
or
cld
xor
jle
mov
inc
loope
imul
cwtl
sti
scas
and
pop
pop
lret
movsb
mov
cmp
shlb
rorl
sbb
sub
inc
mov
nop
jge
ds
test
pop
dec
cli
pop
imul
push
jge
add
jns
int3
ret
enter
in
addr16
ss
xor
cmp
cmp
jl
mov
jns
push
icebp
aam
lods
shrb
add
add
out
fisttpll
lock
add
add
mov
adc
pop
out
in
les
xchg
ret
mov
fldenv
jo,pn
jge
lds
rcrl
mov
call
pop
mov
les
mov
in
movsl
fidivl
test
mov
sub
test
add
adc
adc
mov
ja
into
push
dec
mov
test
leave
sbbb
hlt
and
jp
les
out
sti
fisubs
je
ds
adcl
add
xchg
out
loopne
inc
mov
push
dec
sbb
push
call
and
and
or
cs
pusha
pop
movsl
test
insb
int
pusha
or
sbb
xchg
repnz
popf
iret
add
xchg
dec
fs
call
aad
les
xchg
mov
sbb
adc
out
cmpsl
nop
mov
mov
sub
lods
cwtl
or
dec
add
popf
and
add
add
mov
ljmp
add
add
shrl
or
jecxz
lods
mov
int
cmpsl
push
jp
push
push
add
mov
repz
add
mov
jno
jno
insl
pop
push
fiaddl
aas
leave
imul
mov
insb
outsl
sub
or
sbb
cmp
push
mov
outsl
inc
fbstp
aad
add
add
call
push
rcll
push
outsb
outsb
mov
fnstenv
mov
test
sub
fdivr
mov
hlt
out
inc
fildll
dec
pop
adcb
xchg
popf
sbb
and
adc
xchg
cmp
sbb
mov
push
mov
inc
and
jns
and
adc
jmp
rcrl
add
ss
mov
sbb
cmp
jle
cmp
cmp
inc
lds
mov
loopne
insl
fisttpl
jp
inc
lds
jmp
jne
add
push
sbb
jmpw
fnstcw
jo
sahf
jb
or
mov
add
loope
repz
push
insb
adc
notl
hlt
or
mov
mov
lret
cmpsb
push
sub
adc
lcall
sbb
fildl
xor
mov
jl
es
pmulhuw
mov
xor
outsb
ret
outsb
iret
push
xor
dec
mov
add
imul
clc
or
lds
out
lods
in
xchg
out
mov
fstpt
imul
xchg
mov
push
arpl
dec
mov
and
inc
popa
ja
mov
jnp
mov
sbb
aaa
das
inc
inc
sti
xchg
sub
or
adc
cmpsl
and
cld
out
push
fcomi
adc
cs
lcall
ret
pop
stc
xchg
xor
aas
test
add
sbb
cmp
imul
out
mov
mov
inc
scas
aam
dec
add
add
lret
cmp
cmp
ret
mov
js
add
add
adc
xchg
aam
das
cmpsl
out
cmp
pop
cs
xchg
inc
add
ret
sbb
cli
div
lcall
xor
xor
mov
cmp
mov
push
sbb
stos
shlb
mov
cltd
jnp
sbbb
jp
add
jno
xchg
xchg
xchg
pop
repz
push
repz
daa
dec
adc
add
cmp
dec
fidivrs
mov
xchg
push
xchg
movsb
jns
mov
adc
imulb
add
je
mov
loop
inc
js
int
adc
int
xchg
sbb
mov
add
pop
jmp
lahf
jmp
cmc
mov
aaa
xor
je
mov
out
inc
xor
cmc
adc
sbb
jne
jo
mov
add
add
add
dec
stc
mov
ljmp
ds
add
add
cmp
push
xchg
orb
and
lods
adc
pop
hlt
pop
mov
ja
adc
mov
lods
mov
jo
cmp
lea
add
inc
in
aam
cmp
bound
in
cmp
mov
enter
push
ficoml
movaps
mov
mov
cltd
fs
mov
dec
ret
or
pusha
repnz
jb
mov
int3
and
and
psllq
lahf
lods
xchg
insl
mov
cmp
movsl
es
mov
inc
add
arpl
movsl
dec
lods
pop
rorl
or
sti
pushf
repnz
cmpsb
jg
sub
ficoms
pop
pop
rclb
add
xor
stc
inc
mov
jp
xlat
sub
lods
pop
fldcw
ret
addr16
ret
sti
adc
mov
push
test
sbb
sub
decb
in
adc
mov
add
jg
cld
lcall
flds
add
add
push
hlt
push
addr16
fildl
pop
lret
stos
rol
rcrl
mov
cs
push
out
inc
cwtl
pop
rclb
stc
inc
inc
add
fcompl
popa
mov
mov
roll
icebp
in
js
and
adc
enter
jge
test
hlt
adc
and
dec
outsl
mov
stc
add
and
stc
xchg
pop
pushf
adc
mov
sbb
sbb
popf
cmpsl
push
imul
nop
cmp
push
in
mov
push
lock
leave
mov
in
iret
in
mov
sbb
cs
dec
jns
inc
popa
cli
jnp
inc
or
mov
mov
cmp
xchg
or
jp
ret
shrl
dec
or
push
inc
fistpl
pop
gs
lret
adc
xor
aad
aas
mov
mov
into
sbb
add
add
xchg
mov
pop
andl
dec
push
add
add
ret
loopne
mov
xchg
sbb
add
dec
lods
outsb
pop
sub
sub
cmp
sbb
jnp
or
xlat
jb
fisubrl
call
sub
loope
or
rorl
je
nop
mov
fisttpl
repz
mov
mov
fstp
je
dec
cmp
sti
or
jle
fadd
lret
imul
cwtl
pop
mov
and
dec
xor
jbe
jmp
je
sub
adc
incb
shlb
or
adc
xor
mov
cli
xor
mov
into
sbbl
aaa
adc
mov
xor
insl
mov
call
sub
push
es
mov
mov
push
sbb
aas
xor
dec
add
mov
mov
adcl
add
add
or
mov
and
adc
dec
push
add
add
stos
or
xor
mov
sbb
push
adc
loop
mov
imul
aaa
fsubrs
ljmp
jecxz
adc
in
stos
push
sub
imul
mov
add
sbb
xchg
push
and
and
shlb
std
pop
cmp
xor
insb
lods
add
pushf
cwtl
jmp
add
sbb
arpl
nop
cs
jmp
stos
pop
les
out
leave
sbb
stc
int
mov
gs
xchg
arpl
dec
push
loope
push
pop
ds
fwait
hlt
fcmove
inc
adcl
sbb
sub
push
dec
cli
pop
fsubs
sub
mov
mov
or
cmc
and
dec
cmc
lds
jle
test
cmp
or
in
pushf
mov
jl
cwtl
mov
sti
notb
in
jbe
in
lea
aam
xchg
mov
cmpsb
sahf
stos
add
add
sub
cmp
ret
or
push
mov
add
sbb
xchg
jae
push
xchg
call
xor
popf
in
mov
pop
sbb
xchg
ret
hlt
fstps
jb
mov
repz
out
ret
cld
dec
lahf
popa
mov
loope
mov
pop
notb
adc
mov
pop
xor
pop
xor
scas
cli
dec
stos
or
xchg
mov
es
and
sar
stos
mov
bound
inc
cmp
negb
out
sub
jge
addr16
movsb
push
mov
xchg
leave
sbb
hlt
xchg
scas
dec
xchg
xchg
jae
dec
jp
repz
enter
loop
xor
and
sub
cmp
mov
inc
mov
stos
filds
cmpsb
jmp
into
ret
test
xor
popa
stos
sub
mov
sub
inc
pop
scas
dec
mov
sti
or
fldt
cltd
loop
pop
and
mov
and
or
push
shll
out
pop
pop
pushf
push
hlt
xor
push
push
add
add
or
arpl
jae
pop
cmp
xor
popa
fsubl
push
push
mov
mov
cs
and
push
enter
fidivs
jle
mov
aam
push
idivb
cltd
lods
jle
jge
lds
xchg
ret
lds
xor
pop
mov
jnp
testb
xchg
fs
mov
insb
fbstp
push
sub
out
push
dec
xlat
rorl
js
mov
cltd
int3
cmp
enter
mov
pop
dec
fistpll
fs
push
push
push
gs
fsubl
pop
xor
ret
lock
mov
sub
addr16
shrb
fidivrl
hlt
les
inc
std
or
and
jl
dec
jg
imul
add
mov
or
popf
addb
mov
rcll
jp
xor
cmp
scas
out
dec
pop
mov
insl
dec
loop
jp
and
xor
jne
test
iret
xchg
fstpl
sub
stos
push
lcall
hlt
mov
xor
pop
push
add
add
in
gs
faddp
pop
mov
mov
jle
sbb
ret
jecxz
lods
ret
popf
push
mov
jle
stos
mov
loope
fcomp
jp
add
add
dec
aaa
negl
adc
outsb
push
inc
lods
jmp
mov
aad
adc
fsubr
mov
cmp
xor
subb
sub
outsb
ljmp
pop
push
jbe
push
ds
add
enter
push
sbb
pop
sub
adc
je
arpl
les
mov
fistps
dec
xchg
jg
and
das
frstor
xchg
out
sub
cmc
mov
lea
insb
jne
int
sbb
sub
push
cmpsl
jae
pushl
in
pop
add
repnz
repz
je
pop
stc
mov
leave
xor
sub
in
push
ret
and
loopne
rcr
lret
stos
pusha
add
add
jbe
idiv
imul
push
add
add
bound
dec
inc
xor
cmp
pop
mov
cmp
arpl
fwait
mov
add
rorl
cmpsb
jge
rol
jb
jne
popa
pop
pop
aam
mov
jns
cmpsl
inc
inc
xchg
cmp
inc
pusha
or
insb
pushf
cld
rcll
lds
adc
les
pop
insl
jl
cwtl
xor
xor
inc
fnstcw
fisttpl
pop
jmp
test
imul
sbb
in
jae
cltd
sbb
cli
push
and
jmp
mov
pop
mov
inc
mov
cs
jbe
mov
xchg
pop
pop
adc
stc
add
mov
cli
sub
insb
test
or
add
xchg
iret
cltd
iret
addr16
mov
adc
inc
mov
test
fldz
stos
pop
dec
sar
insl
fwait
sar
ljmp
lahf
fists
aam
add
jae
fwait
cmp
stos
sarb
push
add
add
mov
ret
test
inc
mov
or
xor
push
cmp
push
or
jno
add
movsl
fucomip
mov
mov
test
and
and
subl
inc
fists
repz
test
mov
mov
mov
fcomi
lret
jnp
popa
add
or
cmp
mov
mov
cmp
mov
pop
push
rclb
loope
stc
test
clc
aad
sub
repz
inc
test
inc
and
pop
pop
pushl
out
mov
cmp
stc
data16
cld
out
mov
push
mov
jno
mov
pushf
movl
daa
mov
jp
push
insb
xlat
xchg
jge
xchg
xchg
and
jo
xchg
mov
outsb
mov
aam
adcb
xchg
pop
mov
or
das
lahf
orb
sub
aam
dec
nop
mov
jg
clc
and
addb
jb
add
inc
push
clc
mov
and
hlt
andl
add
cli
cmp
xchg
lock
mov
nop
push
lods
mov
pop
jge
orl
sbb
pop
lds
push
shlb
jg
dec
add
mov
sbb
nop
je
adc
inc
push
fpatan
mov
mov
dec
pop
sbb
add
outsb
and
shll
imul
mov
xchg
ljmp
xor
subb
fldcw
sti
and
lock
sbb
mov
dec
adc
shrl
lds
sbb
stos
mov
imul
bound
shl
mov
dec
sub
push
scas
inc
stos
jl
push
dec
push
sahf
into
and
push
xchg
mov
fisubrl
or
mov
idivl
outsl
push
das
jnp
popa
sub
and
sub
add
add
shr
mov
inc
cs
add
push
pop
das
rcr
mov
filds
and
push
out
lret
xor
enter
dec
adc
outsl
inc
pop
push
xchg
lds
cli
insl
adc
mov
pop
inc
mov
and
lds
sbb
adc
xor
inc
int3
std
cld
mov
imul
rcr
arpl
arpl
mov
and
sbb
in
and
pop
sub
mov
mov
les
dec
subb
add
js
repnz
jnp
pop
cmpsl
addr16
push
test
es
xchg
mov
movsl
rolb
lods
push
jle
jno
les
mov
jb
jnp
sub
lahf
mov
ja
mov
lods
push
adc
adc
jnp
shlb
jno
xor
pop
dec
pop
js
push
stos
and
shrb
xchg
pop
int3
addl
leave
inc
inc
cmp
add
add
mov
lds
aad
je
jmp
jne
add
add
idivl
test
jns
fs
lret
dec
out
xor
sub
cs
call
in
out
js
loope
push
push
nop
aad
hlt
test
jmp
ss
dec
and
leave
xor
shl
and
clc
movsl
ljmp
lret
jecxz
jl
mov
movsb
pushf
negl
mov
dec
sub
xchg
sub
gs
out
lods
roll
adc
loope
stc
and
stc
cld
or
loopne
loop
pushf
xor
lods
insl
xor
pop
aaa
mov
mov
jb
pop
jge
ret
inc
dec
mov
pop
adc
adc
jmp
xor
js
jg
std
fdivl
push
mov
clc
inc
mov
sbb
ja
and
in
push
mov
mov
add
xchg
pop
test
sub
jne
shrl
subl
in
pop
addl
add
mov
and
das
cmp
pusha
scas
cmp
add
add
and
pop
sarb
cmp
pop
push
jge
mov
or
pop
or
dec
mov
sti
cmc
hlt
mov
or
xor
iret
xlat
fmul
pop
clc
in
das
into
mov
and
xchg
sub
push
gs
sub
cmc
lock
xor
mov
iret
mov
test
negb
scas
scas
hlt
cmp
fcoml
or
jns
jp
sbb
xchg
insb
mov
gs
add
cmp
sbb
cmpsb
imul
lcall
push
stos
fnstsw
mov
in
xchg
les
mov
out
jb
fsubrl
ljmp
inc
push
cs
shlb
xchg
jno
mov
cwtl
and
lret
in
sbbl
fcom
jg
jmp
xor
loope
lahf
out
add
add
movsb
jae
jnp
mov
ja
mov
clc
inc
sbb
pop
add
add
loopne
divb
lcall
inc
or
inc
int
int3
loopne
cwtl
dec
dec
adc
dec
adc
test
mov
stos
dec
jmp
int3
pop
frstpm(287
aam
test
cwtl
shl
sub
xor
xlat
sub
cmc
ds
mov
cli
adc
cld
add
int3
enter
mov
subl
pop
popf
xchg
in
mov
and
pop
punpckhbw
fbstp
fdivs
pop
adc
or
cmc
outsl
and
jae
dec
mov
mov
out
cmp
fs
shrl
cwtl
sbb
pop
fucom
mov
add
cmpsb
idivl
and
insl
mov
jmp
sub
push
mov
sar
push
imul
das
cld
xor
out
push
mov
lret
fistpll
xchg
enter
arpl
mov
addl
add
fbstp
scas
adc
lahf
xlat
out
cld
add
arpl
add
inc
in
jne
loop
ds
mov
jge
xlat
in
mov
add
arpl
xchg
sahf
mov
out
mov
push
in
xor
repz
mov
mov
or
mov
xchg
mov
xchg
dec
mov
push
imul
subl
adc
data16
fildll
adc
std
cmpsb
dec
xchg
sbb
push
dec
push
sbb
mov
cmp
add
push
sbb
enter
test
push
dec
adc
sahf
mov
mov
mov
mov
shlb
cmp
pop
insl
cltd
jae
push
or
dec
movsl
xchg
aam
loop
add
leave
sub
mov
out
cmc
aas
fimull
pushw
inc
xchg
lods
les
sub
test
push
or
sbb
pop
adc
xlat
cmp
xchg
sub
push
xchg
arpl
test
cmpsl
sar
insl
fwait
sub
sub
lods
cmp
add
mov
add
adc
add
add
sub
shl
sti
push
add
or
jp
loope
out
je
cmp
cmp
or
repz
xlat
stos
andb
mov
or
stos
jmp
out
out
pop
inc
push
ss
stos
lcall
push
dec
bound
sub
negb
insb
loope
fsubrl
int
xor
mov
add
iret
dec
ljmp
mov
inc
xchg
jno
jl
jnp
hlt
clc
rcrl
aas
xor
dec
push
cmp
mov
push
xchg
push
add
or
out
jg
jno
xchg
fidivrl
in
ljmp
jl
cs
fldt
mov
sbb
out
xchg
cwtl
dec
ret
mov
and
cmpb
sub
or
and
mov
sarl
push
mov
cli
jg
sahf
push
test
mov
shll
xchg
sbb
mov
sub
jbe
add
add
push
into
push
push
inc
lahf
mov
mov
add
into
jae
stc
call
in
mov
pop
fisttps
add
sahf
ss
repz
cmp
and
mov
sub
cmp
js
lcall
mulb
mov
in
stos
fnstenv
cmpsb
orb
push
out
jnp
imul
mov
adc
dec
sub
out
mov
adc
mov
xor
lock
cltd
js
int
push
mov
popf
xlat
sub
inc
inc
sub
push
and
push
shlb
movsb
out
jnp
movsb
or
add
in
loop
cmp
dec
dec
push
movsb
sub
push
mov
movsb
cltd
adc
xor
out
add
inc
outsb
xchg
fs
mov
and
filds
sbb
cmp
sbb
out
inc
subl
pop
mov
mov
nop
fidivs
shrb
jbe
xchg
sub
adc
stos
inc
mov
sub
cltd
xchg
add
add
xchg
inc
shl
xlat
mov
jg
or
xchg
pop
add
add
in
cltd
inc
fldcw
adc
adc
push
vpsubq
xor
stc
sbb
push
shr
add
test
cltd
and
mov
push
int
adcl
sub
jle
jbe
jno
shrd
stos
mov
xchg
fisubl
adc
out
mov
or
imul
push
fistpll
arpl
jecxz
test
adc
cld
sbb
mov
je
inc
pop
iret
notl
movsl
adc
repnz
adc
mov
jcxz
fmulp
add
test
pop
pop
fucomp
ds
hlt
mov
xor
pusha
push
iret
nop
fwait
and
push
sub
mov
cmpl
in
into
rcll
jl
hlt
lret
lock
adc
push
add
push
lock
push
call
dec
xchg
xor
push
or
popf
mov
add
lahf
pop
fcmovb
fcmovnb
lahf
pop
cmpsl
jne
mov
shrl
add
jg
xlat
mov
sbb
jp
mov
repnz
sbb
pop
outsb
clc
inc
mov
cmp
in
pop
pushf
mov
lods
jnp
cmp
adc
or
mov
mov
int
jae
daa
sub
into
std
mov
call
gs
mov
je
ljmp
outsl
adc
push
outsb
dec
push
mov
or
data16
nop
adc
cmpsb
adc
jg
sub
jg
leave
cmp
push
dec
push
or
sub
stos
and
mov
and
mov
inc
dec
xor
pop
data16
push
testb
jg
inc
les
cltd
test
int3
shr
dec
in
mov
in
je
ljmp
outsb
int3
out
mov
lods
mov
mov
cmp
ljmp
das
rol
jb
mov
xlat
push
push
pop
dec
sti
add
cmp
cwtl
daa
mov
add
add
idiv
jg
sub
movsl
out
popf
popa
add
add
rcrl
ret
dec
pop
repz
or
sbb
ljmp
fistpll
aas
ljmp
cmp
fmuls
pushf
sahf
scas
xchg
add
add
insb
xchg
ret
ja
jo
insb
xor
mov
mov
lret
cmpb
add
cld
mov
insl
and
mov
or
data16
xor
inc
nop
xchg
dec
add
mov
fidivrs
inc
mov
in
ret
jle
add
or
nop
cmpsb
pop
xor
add
mov
test
sahf
sbb
ret
fsubp
dec
inc
int
pop
and
xchg
andl
and
mov
mov
ret
xor
ret
lcall
sub
and
pop
xor
jge
sub
jp
mov
frstor
cmp
add
add
inc
pop
mov
fstps
and
mov
add
add
push
or
jp
sbb
mov
jmp
mov
movsl
pop
inc
iret
popl
das
inc
stos
xchg
xor
or
in
loope
rclb
add
add
mov
adc
push
mov
dec
dec
lds
push
dec
mov
cld
push
lods
xchg
in
or
xchg
outsb
stos
mov
out
sub
daa
and
out
ficomps
loopne
ret
fisttpl
sarb
out
or
ds
add
pop
sbb
sub
shlb
xchg
sub
fsts
addb
stc
imul
ror
xor
sti
test
sub
xor
push
mov
add
mov
enter
ja
mov
or
adc
pop
popf
outsb
lahf
lea
or
mov
subb
jo
pop
es
inc
xchg
jo
add
add
repnz
movsb
jle
arpl
ds
arpl
add
xchg
mov
in
cmc
cwtl
sub
arpl
lea
sbbb
cmpl
outsl
xor
or
sar
mov
lret
aaa
cmp
popa
sbb
pop
scas
pusha
clc
push
addr16
lods
int
xor
ss
test
faddl
ja
ud1
insl
push
daa
sbb
cmp
cmpsb
mov
inc
sub
jne
shlb
cwtl
lds
inc
push
xchg
adc
outsl
pusha
cmp
or
repnz
pop
sub
or
dec
add
sub
dec
mov
xor
cmp
dec
pop
cmpsl
push
sbb
in
pop
xchg
dec
adc
pusha
mov
out
cmpb
dec
pusha
iret
clc
push
adc
out
mov
imul
push
addr16
dec
sbb
sbb
dec
mov
xor
in
cltd
and
xchg
cltd
push
inc
and
scas
mov
arpl
add
add
jmp
sub
sub
push
lods
add
add
mov
popf
xorb
jbe
or
inc
pop
lods
cwtl
inc
dec
ret
adc
xchg
orb
fistpll
ret
add
cmp
mov
insl
movsb
jno
or
jnp
mov
pop
hlt
pop
mov
fsubr
lock
int
cli
subl
adc
push
sbb
mov
add
out
dec
xchg
cwtl
mov
jmp
xchg
sbb
sti
jge
sahf
test
and
shl
inc
jae
jg
or
adc
mov
cmp
fisttps
jmp
stos
addl
add
cmpl
stos
in
das
or
ds
dec
add
sbb
pop
dec
xor
sar
jae
ret
and
push
fdivrp
xchg
dec
rolb
gs
ret
cmp
mov
out
int
mov
cmp
push
mov
cli
mov
addb
shll
fnstenv
push
pop
mov
add
add
sub
mov
pop
add
xchg
xor
lcall
and
leave
jns
push
push
push
and
jno
insb
popf
imul
push
out
jmp
leave
repnz
and
xor
and
movsb
mov
ret
mov
push
es
jle
and
roll
jg
scas
sub
mov
mov
je
sbb
sbb
das
arpl
lcall
add
and
clc
xor
lock
mov
adc
addb
inc
xchg
push
add
in
mov
mov
dec
inc
movsl
push
mov
andb
out
fadds
aaa
cmp
pop
xchg
add
scas
dec
jecxz
cmp
mov
test
movsb
mov
lea
jns
icebp
xchg
push
inc
and
mov
shll
fs
lea
mov
test
fwait
xchg
and
add
add
cld
je
jbe
jns
sbb
cmp
lods
inc
mov
add
add
ror
cmp
fs
scas
nop
loop
adc
in
scas
ja
jp
sbb
lods
ret
andl
or
sub
xor
xor
lods
and
je
cs
data16
test
aas
inc
mov
mov
daa
outsb
push
mov
sbb
popf
adc
xor
adc
jae
ffree
xchg
fnstsw
adc
fnstenv
ja
gs
sarb
sbb
dec
mov
push
mov
inc
pop
in
add
rorl
pop
mov
scas
xchg
jnp
sbb
out
sbbb
xor
adc
sub
mov
push
fisubs
ja
push
clc
xchg
lcall
out
xchg
nop
mov
xchg
push
stos
fwait
call
jp
sbb
ret
mov
and
stos
clc
shrl
xor
adc
insl
or
add
push
cltd
jmp
fildl
or
jl
adc
add
faddp
mov
stos
mov
mov
pop
test
mov
or
push
sahf
jg
aaa
bound
bound
lret
stc
pop
clc
cmpsb
aam
fldcw
test
into
aas
aad
es
loope
outsl
repz
cli
cltd
push
scas
jbe
mov
mov
jle,pt
xchg
mov
leave
ret
or
pop
lods
int3
mov
jae
mov
push
xor
ffreep
mov
loopne
stc
js
push
popa
inc
inc
repnz
add
int3
lods
out
adc
imul
call
bnd
scas
mov
and
mov
mov
ss
or
call
sbb
inc
sub
and
jae
inc
mov
pop
dec
or
pusha
in
and
cs
xor
xor
jmp
insb
inc
jg
loop
popa
inc
loopne
jmp
mov
dec
pop
mov
add
push
jg
dec
xchg
dec
outsl
sbb
xadd
add
cmp
fs
xchg
mov
dec
rcl
jns
addr16
jo
aam
dec
out
sub
nop
sub
rolb
or
ret
jnp
dec
fmul
xchg
pop
cli
and
shll
aam
test
add
add
adc
push
inc
out
fbstp
push
pusha
pop
mov
rolb
jo
jge
mov
push
mov
lds
hlt
cli
push
outsl
mov
setne
and
or
cmp
cli
or
test
scas
xchg
mov
push
in
push
push
push
mov
lock
add
jns
fnstenv
jg
subl
dec
les
jbe
stc
dec
xchg
push
mov
adc
popf
add
push
sahf
adc
popf
addb
xchg
in
icebp
aaa
mov
mul
das
aas
out
pop
cwtl
dec
int
stos
ss
clc
popa
push
add
sub
or
sub
outsb
clc
add
lcall
add
iret
mov
fucomip
push
insb
xor
lock
add
imul
add
fidivrl
dec
movsb
xor
adc
adc
jne
pop
and
add
test
jne
bound
and
clc
push
adc
rolb
mov
jne
sbb
mov
sub
push
cmpsl
mov
inc
subl
mov
arpl
decl
in
xchg
jg
push
add
adc
cs
loopne
call
fs
into
jmp
rcrb
and
cwtl
cmpsb
inc
jns
lds
rorb
sbb
push
ljmp
mov
das
shrb
das
arpl
xor
test
sarb
pop
pop
sbb
sub
das
mov
mov
aas
jbe
jecxz
imul
add
lahf
aaa
xor
or
bound
test
repnz
std
stc
pop
mov
fisubl
add
dec
out
iret
jmp
aas
in
push
data16
inc
inc
lret
add
push
sbbl
fidivs
jecxz
shlb
fisubrl
int3
sahf
aad
pop
push
inc
dec
mov
lods
shlw
in
mov
mov
and
pushl
jno
sbb
pop
fwait
jns
stos
mov
cltd
enter
mov
les
loop
cmp
arpl
out
xchg
cltd
push
jg
xchg
jns
lcall
cmp
lcall
outsb
push
loope
cmp
pop
inc
sti
or
fsincos
addr16
jmp
mov
mov
inc
jns
out
push
inc
aas
test
test
filds
rcll
popf
pop
cmovno
inc
mov
imul
std
stos
std
insb
aaa
sbb
shlb
push
xlat
adc
jb
inc
xchg
or
movsl
mov
and
sub
lds
fists
pop
jmp
and
cli
dec
ret
inc
or
test
and
mov
pop
and
add
cmpsb
push
jnp
std
cmpsb
pop
dec
sub
sub
imul
add
or
pop
or
outsb
xchg
out
mov
sahf
jp
std
test
in
fnstsw
test
xchg
inc
xchg
xchg
sub
out
sub
shll
dec
punpcklwd
cmp
gs
inc
lahf
jb
lahf
and
call
imulb
cwtl
fwait
movsb
xor
mov
aad
sbb
fstps
insl
dec
add
xchg
xchg
mov
cmp
push
mov
inc
push
insb
inc
in
loopne
xchg
add
repz
shll
out
mov
les
pop
or
xchg
leave
mov
jne
jl
das
push
into
imul
xor
or
jno
loopne
mov
loop
xor
ret
cmovo
lods
in
mov
ljmp
jo
shrb
xchg
sti
or
cmp
or
pop
daa
fxch
std
je
mov
inc
and
insl
fs
je
mov
add
in
lods
imul
neg
std
sub
dec
fidivrs
add
add
lcall
add
sti
push
jbe
jle
mov
ljmp
sbb
inc
jp
cmp
pop
into
sahf
sbb
icebp
out
adc
push
cmpsl
sub
popl
push
nop
negl
sub
dec
notb
cmpsb
dec
sbb
loope
xchg
adc
insl
test
jmp
jb
jecxz
sahf
mov
mov
jns
fistps
push
xlat
pop
xlat
or
mov
das
mov
pop
mov
add
lock
xor
fs
int3
mov
add
in
aad
xchg
and
jne
je
mov
ret
jge
mov
dec
and
ljmp
sub
sbb
outsb
xchg
cmp
and
pop
and
fs
popa
mov
push
out
in
call
mov
imul
rcl
lods
test
push
jno
mov
outsl
add
mov
testl
add
add
cs
xor
cltd
addb
or
insl
add
add
rclb
and
testb
and
sbb
sub
pop
cltd
inc
pushf
je
mov
ffree
setle
cmc
xor
push
inc
xchg
call
mov
pop
loope
mov
ljmp
fwait
adc
mov
out
xchg
add
loop
iret
das
push
loop
push
cmp
push
iret
jo
push
test
push
add
mov
xor
cmp
push
pop
mov
sbb
test
repz
xchg
and
cmp
mov
setg
cli
cmc
ret
pushf
pop
lret
xor
out
mov
lds
and
sti
mov
mov
scas
rcll
xchg
mov
lods
rol
test
add
xchg
jmp
and
push
es
fcmovu
in
mov
int
and
push
jl
jne
fucomi
rorl
cmpl
add
lcall
out
sbb
jb
fisubrs
add
lcall
mov
ja
add
popf
and
subl
aaa
sbbl
xlat
dec
inc
adc
adc
sub
sti
push
xchg
adc
mov
jb
jle
sbb
xchg
push
mov
mov
lret
mov
addr16
jge
ror
out
hlt
lret
mov
lahf
push
sbb
xchg
je
and
cmp
je
inc
fdivr
loope
dec
sbb
btr
dec
xchg
fwait
cld
inc
and
clc
movsb
jbe
push
jnp
push
mov
inc
mov
xor
and
imul
lds
push
jns
test
add
inc
data16
dec
xchg
mov
jb
mov
mov
pop
in
adc
je
inc
pop
test
cmc
jno
adc
scas
out
cmp
mov
xchg
mov
mov
shlb
stos
orb
add
daa
sub
ja
mov
jp
int
outsl
add
add
dec
or
mov
xchg
jns
xor
divl
pushf
scas
xchg
and
sub
aas
add
pop
jg
cs
push
gs
push
sbb
sub
leave
mov
rep
sbb
test
add
jle
scas
xor
out
in
fldcw
ss
add
sub
mov
pop
ss
fbld
clc
mov
cld
cmp
mov
bound
fdivl
fisubrs
aaa
sti
push
lea
pop
movsb
jns
push
imul
cmp
add
cltd
pop
push
cmpl
dec
in
dec
mov
pop
lods
mov
call
sarl
leave
pop
add
arpl
xor
out
add
scas
add
push
sbb
int3
mov
sub
xor
fstp
push
mov
es
pop
cmc
mov
dec
icebp
cvtps2pi
mov
sbb
ljmp
stos
iret
loopne
stos
sahf
jae
lcall
jo
add
add
cmp
jnp
outsl
cmpsb
loopne
mov
add
add
mov
lock
or
inc
cltd
stos
rcrb
mov
icebp
jle
mov
mov
test
dec
sbb
scas
aas
push
popf
scas
sbb
pushf
xlat
divb
mov
xor
mov
adc
adc
lcall
xor
jno
in
rcr
movl
xor
sub
daa
mov
mov
loop
stc
ret
lods
scas
popf
shrl
mov
mov
push
into
mov
or
data16
cmpsl
aaa
sti
leave
lret
enter
mov
pop
inc
cmpxchg
sub
insb
test
xor
mov
jle
cmp
cmpsl
sbb
pop
xchg
push
sahf
xchg
jbe
test
lcall
daa
mov
sti
mov
mov
sarb
cmc
rorb
push
rcrb
fldt
sbb
or
add
xchg
push
mov
cli
xchg
jle
push
je
int3
stos
paddsw
add
js
add
jnp
inc
testb
dec
stos
push
call
push
out
or
jle
adc
xchg
outsl
mov
ficoml
leave
popf
fs
sub
pusha
les
and
push
pop
js
or
mulb
cltd
lea
mov
add
repz
in
dec
mov
fcomp
jecxz
adc
sbb
rcr
fs
push
clc
insb
cmp
cwtl
into
in
pop
mov
xor
add
cld
lods
pop
mov
mov
dec
push
pop
sbb
pop
test
fisttpll
movsl
ret
rol
in
push
clc
iret
lea
pop
rclb
xrelease
ds
and
std
dec
inc
dec
or
push
pop
mov
push
jp
or
cmp
and
add
and
out
sbb
test
pop
and
and
pusha
add
add
fwait
jnp
aad
sbb
popa
mov
jb
add
sbb
mov
xchg
mov
jne
xor
cmp
cmp
or
dec
pop
pop
xchg
stos
pop
jle
and
stc
shll
fldl
fiadds
xlat
mov
hlt
push
cmpsb
adc
pop
shrl
xchg
pop
mov
test
in
call
pop
mov
daa
or
push
ds
and
push
push
imul
push
ja
inc
xor
mov
push
cli
rcrb
aad
fcomp
subb
out
mov
and
adc
or
add
and
cmpsb
sub
out
movsb
push
int3
cld
xchg
sub
adc
or
push
scas
insl
call
sbb
rep
add
sbb
enter
add
cmp
push
popl
mov
xchg
std
push
push
insl
into
ljmp
add
mov
std
mov
sub
xchg
dec
divl
add
adcl
mov
icebp
scas
or
push
ss
pop
pop
sahf
cmpps
push
jne
stos
stos
cmpsl
jne
sarl
push
push
inc
pop
xchg
adc
adc
xchg
rorl
pop
cltd
mov
cmpsb
insl
loopne
sub
movsl
xor
mov
jbe
icebp
sahf
ja
push
mov
scas
pusha
incb
mov
adc
xchg
inc
adc
mul
mov
pop
adc
push
rcrl
pop
jne
jp
inc
pusha
pop
rcrb
sbb
jb
inc
or
inc
xchg
clc
das
imul
and
push
pop
dec
push
sub
pop
aas
in
inc
out
pop
pop
sbb
idivl
jne
dec
ret
adc
out
xor
mov
icebp
dec
popa
das
mov
inc
insl
or
cmp
movsb
mov
mov
int3
pop
or
ss
xor
cmp
add
adcl
xchg
fisttps
mov
shl
cld
je
add
mov
push
sbb
mov
mov
push
push
push
inc
pop
xor
dec
and
shlb
mov
xor
into
icebp
add
or
adc
sub
mov
adcb
cltd
hlt
leave
adcb
mov
pop
pop
add
bound
inc
adc
ret
imull
inc
pop
hlt
sbb
xchg
jle
dec
mov
inc
popa
pop
cli
push
jle
sbb
movb
mov
idivl
push
test
jl
imul
push
pop
lretw
add
popf
or
pusha
hlt
inc
flds
add
lret
mov
imul
loop
loopne
gs
xor
push
inc
cmp
enter
mov
andl
ret
out
outsb
nop
lcall
repnz
test
mov
out
fs
mov
dec
shlb
aas
mov
add
inc
in
mov
mov
out
sub
sbb
jbe
add
inc
scas
mov
dec
dec
fcoml
jle
leave
outsb
out
jg
lock
jo
xorl
stos
rcrl
negb
lret
jge
bswap
lret
adc
int3
or
cmp
xchg
test
imul
jle
std
scas
xor
in
test
jp
xchg
test
stos
sahf
cs
xor
dec
fsubl
ret
dec
xor
gs
or
ret
or
xorb
ret
loopne
popa
pop
sub
jo
fsubrl
loop
leave
outsl
mov
std
movsl
loop
les
jp
out
xor
pushf
or
xchg
js
sub
push
pop
push
shrb
daa
fcmovu
insl
push
jecxz
pop
sbb
dec
and
stos
inc
push
push
sbb
pop
sub
ret
mov
inc
negb
mov
fprem1
pop
and
loope
iret
jae
int3
int3
rcll
in
out
stos
lods
mov
xchg
jae
ja
ficompl
inc
loopne
add
add
divl
in
sub
push
ja
add
or
leave
or
mov
notl
inc
fcomi
rcl
jnp
jns
loopne,pt
xchg
cmpsl
cmovb
sub
repnz
lahf
and
inc
rolb
dec
adc
test
aas
xchg
and
jns
bound
in
jns
push
cmpsb
xor
jne
sub
mov
inc
add
bound
iret
gs
cmp
jg
push
add
cmp
adc
mov
mov
or
popa
les
aad
scas
sbb
shlb
pop
jo
fdivp
xor
int3
inc
mov
jb
xchg
sub
inc
out
jp
lret
roll
mov
xchg
push
dec
push
xchg
and
pushf
test
cmpsb
iret
jp
jmp
scas
adc
fcoms
adc
into
inc
push
cmp
ror
pop
xchg
or
cmp
in
lds
rclb
add
cmp
mov
add
fisubs
mov
mov
int
or
add
add
dec
repnz
xlat
sbb
stc
adc
xchg
xchg
addr16
in
dec
icebp
mov
mov
stc
push
inc
ss
jne
push
xchg
xchg
mov
cltd
out
dec
rcl
push
mov
sub
adc
push
fstpt
sub
jno
jecxz
and
and
pop
xchg
sbb
jge
push
xchg
adcl
int3
push
inc
fsub
dec
movsl
mov
mov
daa
jae
mov
dec
shl
sbb
xor
push
and
cltd
adc
add
pop
shll
cmp
adc
das
push
subb
enter
rcl
rclb
scas
ret
bound
repz
push
lcall
cmp
xchg
push
insb
fidivrl
jb
fcomps
pop
incb
mov
jmp
scas
sub
inc
leave
aas
mov
mov
and
cmp
jbe
fimull
push
push
pop
push
add
dec
hlt
or
xor
lret
add
add
mov
outsl
jne
ljmp
sub
add
add
pusha
mov
xor
jo
fwait
ja
mov
outsb
jne
add
fbstp
cmp
push
cmp
das
mov
les
test
mov
imulb
fmulp
popa
pushf
and
movsl
sahf
pop
sbb
and
jecxz
xchg
fcompl
pop
mov
roll
pop
xor
bound
add
popf
retw
shlw
subb
int
cs
mov
add
add
jg
mov
je
shll
pusha
and
fcomps
push
xchg
xchg
xchg
mov
into
sub
adc
jnp
or
jg
xor
xchg
fisttps
lret
jbe
mov
xlat
cmpsb
jno
add
lock
jo
add
adc
pop
outsb
cmp
movb
mov
add
pop
jl
inc
popa
xchg
notl
jno
push
test
outsl
inc
adc
push
jne
cmp
add
add
testl
pop
adc
add
add
and
add
scas
sub
ret
dec
es
sub
ficomps
mov
xor
mov
adc
and
outsb
sbb
inc
call
sbb
add
shrb
aas
lds
add
test
test
mov
adc
jno
pop
fwait
sbb
mov
mov
clc
adc
cltd
icebp
loop
jnp
mov
xchg
mov
inc
or
and
fsubl
mov
and
or
push
rcll
int3
fiaddl
xlat
adc
sub
pushl
jno
hlt
dec
pop
jl
sub
out
sub
jo
xor
jns
mov
mov
cmpl
lret
pop
adc
jne
gs
pop
jecxz
add
pop
xchg
cmp
loop
nop
mov
xlat
jno
jno
xor
xchg
in
jg
or
dec
add
add
jo
ja
std
stos
sbb
ljmp
add
add
inc
adc
into
cli
negb
or
pop
add
insl
cmc
push
lea
push
and
aaa
cwtl
lahf
sub
neg
lock
mov
imul
je
es
cmp
fs
mov
add
pop
data16
mov
insb
xor
mov
cmp
daa
addr16
in
mov
mov
dec
daa
out
aam
xor
sbb
xor
stos
and
push
aam
xchg
cmpsb
fcmovnb
mov
subb
sbb
cmp
or
pop
mov
addb
data16
es
push
stos
repz
jl
lret
sub
adcl
popa
mov
sti
mov
repz
inc
cmp
pop
mov
mov
inc
dec
add
jns
cli
mov
or
out
inc
sbb
cmc
mov
into
daa
cwtl
lods
loopne
shrl
push
mov
pop
insb
jne
fadd
and
jb
fldl
add
mov
cmpsb
push
sbb
xor
pop
jl
add
cwtl
daa
fcmovb
mov
stos
cmp
mov
jns
push
and
cwtl
mov
inc
sub
sti
inc
fcmove
inc
popf
fucom
sbb
imul
add
stos
int
mov
in
mov
adc
ret
mov
stos
mov
xor
push
sub
pop
rol
pop
movsl
or
xchg
lds
paddw
test
cmc
push
call
mov
stos
stc
sahf
xchg
mov
or
add
loop
inc
mov
jecxz
xchg
lcall
dec
pop
je
add
lret
addb
push
das
rorl
scas
insb
aad
sub
cmp
testb
mov
cmp
jne
int3
fldenv
sub
scas
cmc
or
mov
repnz
mov
ja
imul
jb
sbb
js
push
xchg
out
push
add
add
cmp
cli
mov
cmp
add
cmp
mov
pop
and
jbe
xor
pushf
push
stc
popf
xchg
xor
add
cmp
rorl
ja
mov
cli
add
jmp
jp
mov
xor
xchg
movsb
loop
shlb
sbb
dec
xor
sub
mov
pushf
in
je
push
mov
loope
mov
and
sbb
jb
outsl
fistps
adc
mov
ret
sbb
inc
inc
fwait
inc
dec
and
cmp
repnz
or
insl
jbe
jnp
mov
imul
mov
repnz
cmp
and
xor
lods
jmp
subb
lahf
inc
sahf
cmp
mov
loop
push
cmp
imul
xchg
daa
cld
mov
arpl
jo
mov
push
dec
mov
enter
and
mov
jbe
iret
xor
mov
fistpll
subl
popa
fildl
add
std
test
lcall
mov
add
add
mov
cmpsb
mov
and
and
push
dec
jle
push
jno
dec
mov
sbb
pushf
mulb
add
out
lds
pop
scas
and
js
call
mov
fidivrl
xrelease
scas
inc
in
mov
shl
shlb
aaa
dec
mov
push
loope
jl
rcll
pop
xchg
lret
lret
fsubrp
jo
mov
gs
push
das
add
push
fcomps
dec
inc
arpl
lret
sbb
ficoml
movsb
jmp
nop
cmp
shrl
adc
test
pop
test
sbb
push
xchg
pop
xchg
add
imul
std
or
and
sub
cmp
push
inc
pop
scas
enter
pop
clc
test
jb
add
ret
mov
xchg
xor
add
testb
daa
mov
mov
jg
add
mov
icebp
cld
rolb
mov
es
push
roll
sub
inc
mov
movsb
lds
loope
mov
jmp
mov
jmp
jp
out
adc
or
push
cmp
cs
mov
inc
push
dec
mov
xor
jb
mov
ljmp
pop
xchg
shlb
xchg
xchg
movsb
or
pop
adc
pop
push
push
jb
mov
add
xchg
mov
clc
adc
mov
xchg
xor
into
dec
jmp
xchg
dec
shl
int
out
ja
adc
adc
inc
loop
xchg
insl
and
ljmp
adc
ret
mov
adc
out
add
adcb
iret
mov
inc
push
out
xor
dec
je
adc
mov
icebp
cmp
mov
cmpsb
mov
scas
lcall
adc
sbb
push
frstpm(287
xor
add
rorb
aam
es
js
lahf
inc
sub
jns
mov
add
test
mov
cmp
sbb
or
mov
out
idivl
push
mov
fldenv
in
jbe
jle
mov
lret
mov
xchg
xchg
sub
adc
loope
and
cmp
adc
add
sbbb
or
dec
xor
bound
push
lcall
insb
sub
pop
cmc
push
inc
cltd
jbe
sub
in
sbb
and
lock
jo
lea
and
rcl
xchg
push
pop
stos
in
in
in
adc
xchg
push
or
and
xchg
inc
ret
inc
mov
pop
int
xchg
scas
cmpsl
andb
sub
pop
mov
cld
sub
aad
lock
les
add
out
lds
pop
jo
cmp
notl
and
add
jl
cs
idiv
jne
iret
fdivrl
add
hlt
mov
jbe
fildll
mov
jne
mov
dec
loope
leave
ss
push
lea
xchg
adc
imul
adc
sbb
insb
icebp
pop
aaa
adc
arpl
addb
push
in
or
outsb
mov
js
xchg
aas
test
test
repnz
xor
jecxz
call
cmp
cmpsb
inc
dec
insb
test
arpl
ja
jp
push
push
cmpsb
pop
sub
movsl
mov
cwtl
cli
dec
subl
icebp
lahf
xchg
stc
in
lret
sub
and
test
inc
jbe
jo
dec
mov
mov
add
nop
fxch
in
sbb
fiaddl
adc
in
sub
xchg
inc
lds
xor
call
mov
mov
mov
mov
push
lods
inc
std
flds
mov
and
push
add
add
inc
int
loope
popa
inc
mov
add
xchg
pushl
sub
mov
addb
add
xorl
lcall
jno
loopne
mov
sbb
xor
sub
es
ret
push
xchg
and
xchg
mov
imul
loope
lods
dec
xchg
push
jbe
or
fimuls
out
and
mov
sub
pop
mull
mov
inc
repnz
cwtl
and
jbe
pop
aad
xchg
xchg
mov
cld
inc
jbe
xor
mov
rolb
inc
fdivrs
test
clc
mov
cmpsb
std
ljmp
out
sub
inc
ret
jge
shr
and
and
adc
pop
or
cmp
cmpsl
cmpsb
cwtl
mov
xchg
adc
mov
inc
push
iret
fldcw
insl
out
aam
lods
ss
ss
loop
sub
inc
adc
xor
xchg
clc
push
int
in
add
or
lret
cmp
xchg
aas
pop
les
cli
insb
insl
xor
adc
pop
or
add
add
sti
iret
ss
push
jno
mov
jno
addl
add
outsb
roll
push
iret
in
out
inc
aaa
sbb
lret
outsl
inc
sarl
gs
pop
mov
orl
arpl
pop
push
clc
in
pop
inc
or
es
dec
out
mov
fcom
or
pop
in
add
jns
mov
mov
jne
or
lcall
inc
push
inc
mov
fdivl
adc
bound
clc
xchg
inc
sbbl
jnp
lahf
jmp
shlb
mov
sub
sbb
jbe
mov
test
jl
xchg
mov
jmp
push
in
cmc
movsb
out
out
or
mov
in
sahf
pusha
jge
shl
inc
movsl
sub
mov
mov
pop
adc
dec
sar
sub
jmp
stos
in
into
jmp
fidivl
movups
pop
push
sub
add
loopne
xchg
inc
lahf
sti
hlt
out
dec
roll
xchg
popa
mov
add
push
adc
mov
mov
add
sub
jge
dec
cmpb
je
pusha
sub
fnstsw
push
cmpsb
inc
and
mov
dec
pop
xor
jo
cmpsl
repz
or
jo
cmp
fsts
and
adcb
pop
es
cmpl
pop
xchg
dec
lea
call
arpl
mov
jbe
dec
dec
add
outsl
sbbl
dec
or
call
mov
dec
pusha
pushl
adc
xchg
mov
js
addr16
jns
and
add
push
pop
xchg
call
movsb
in
sub
sbb
ljmp
das
int
xlat
arpl
das
push
or
mov
push
in
xchg
mov
cmpsb
cmpsb
aas
mov
mov
adc
movsl
mov
mov
div
adc
outsl
inc
dec
in
rcrl
out
and
in
cli
lahf
add
add
add
mov
mov
aam
int3
dec
test
add
in
in
add
push
inc
nop
imul
test
loopne
add
pop
out
fs
ret
subl
dec
pop
clc
lds
ljmp
inc
lcall
add
jl
pop
insb
jbe
push
stos
sub
push
roll
out
dec
movsl
lret
std
clc
outsl
and
push
mov
jl
push
ret
xchg
cltd
imul
sbb
add
mov
notb
incl
pop
jecxz
addr16
scas
cld
push
sub
or
ja
andl
xchg
or
cmp
jno
cmp
xchg
or
dec
call
loop
test
rclb
xchg
in
ret
push
mov
push
mov
mov
icebp
out
notb
popf
add
push
jmp
dec
rolb
insl
into
dec
out
sbb
mov
lods
push
lret
loopne
pushf
push
rorl
stos
popf
push
fcomps
add
add
pop
test
ljmp
lock
xchg
ss
or
xchg
add
mull
jo
sub
imul
mov
pop
out
arpl
bound
mov
inc
adc
or
popf
outsl
xchg
jp
adc
addr16
push
in
gs
gs
jb
xchg
inc
sub
mov
jmp
adc
or
inc
sbb
push
mov
arpl
je
movsl
js
cmp
inc
or
jno
mov
xor
sbb
fsubr
outsb
pop
mov
and
repz
pop
out
adc
cmp
movsb
xchg
and
mov
sbb
divb
popf
sub
aam
addr16
adc
pop
inc
orl
cwtl
mov
insb
mov
mov
inc
rcll
or
loopne
push
inc
push
xor
xchg
sub
divl
sub
es
sti
fdivl
mov
ljmp
mov
add
imul
push
jnp
sbb
push
xor
sub
add
or
lock
push
ja
sub
push
jecxz
or
les
jge
push
icebp
pop
xchg
hlt
dec
lea
int3
push
sub
mov
add
sub
insl
jge
sbb
ficoml
ficoms
push
xor
pop
lahf
scas
fstpt
mov
idivb
push
int
out
cmp
outsl
and
push
jo
arpl
imul
push
dec
adc
and
pop
add
adc
aad
mov
std
pop
inc
pop
int
hlt
mov
pop
mov
jno
rclb
dec
inc
lret
push
jecxz
and
insl
mov
mov
jb
lds
jle
rcll
or
fistpll
inc
lahf
aam
outsb
fiadds
inc
push
jno
jecxz
pop
cmp
pusha
cmp
add
mov
dec
push
in
iret
frstor
iret
sbb
adc
xchg
push
fidivs
mov
out
add
push
aas
or
mov
mov
jg
pop
mov
add
push
dec
or
jg
push
inc
hlt
mov
adc
sbb
lahf
jmp
leave
aaa
push
cli
cmp
cs
sub
jno
ja
cmp
or
cli
loope
sbb
dec
aad
mov
inc
pop
inc
subl
and
jb
inc
push
fld
lret
shl
jno
jl
xor
jle
rolb
shrl
cmpsb
sbb
sbb
out
das
adc
in
sbb
in
sbb
lock
push
sub
lds
push
mov
pop
add
scas
daa
aam
std
insb
scas
movsl
mov
loop
xchg
jge
xchg
rolb
dec
cmpsl
mov
cmp
repz
lds
sbb
imul
xchg
out
imul
lods
push
mov
mov
int3
loop
xor
push
daa
pop
stos
ds
add
sahf
in
cld
mov
and
mov
pushf
in
jb
add
loopne
sub
add
push
outsb
fisubs
test
lea
add
add
das
faddp
aaa
push
popa
xchg
sub
pop
call
pop
nop
fucomip
fisubrs
jo
lahf
jae
fscale
div
in
sbb
es
and
shrl
scas
frstor
jmp
cmpsb
popl
mov
stc
rcll
mov
outsb
mov
stos
dec
or
dec
sbb
sbb
aas
lret
pop
cmp
cmpsl
mov
cmp
jns
imulb
and
pop
outsb
jle
jb
jbe
inc
gs
ss
popf
int3
jmp
rcrb
or
cmp
cli
in
sbb
daa
xchg
test
pop
mov
adc
into
sbb
pop
xchg
call
or
and
mov
cltd
pop
pop
decb
iret
push
push
inc
out
fwait
jecxz
ds
clc
shrw
jno
jbe
popa
daa
subl
mov
inc
int3
out
xchg
insl
aas
roll
ja
cltd
lret
lds
add
cmp
mov
jns
loope
insl
mov
add
sub
flds
dec
outsl
pop
test
sti
outsb
push
pusha
jle
popa
cli
sub
dec
sub
or
lret
mov
int
xchg
mov
push
xchg
out
push
jp
dec
jb
jl
and
pop
xor
mov
pop
pop
mov
push
lock
pop
outsb
jp
push
fstps
xor
jg
mov
imul
mov
pop
push
mov
mov
push
cmp
inc
adc
loop
push
clc
repnz
out
outsl
pop
mov
sarb
pop
xchg
pop
pop
push
or
sti
add
pop
mov
jg
add
fbld
clc
orl
incl
popl
stc
inc
aaa
pop
and
mov
push
dec
inc
mov
jne
pop
loop
repnz
cmpsl
dec
lock
xchg
into
out
mov
cltd
daa
ds
sub
test
scas
popf
adc
dec
push
int
fstp
iret
push
cmpsb
fadd
dec
aaa
aas
xchg
ret
add
add
inc
inc
fistpll
add
mov
pop
mov
mov
std
or
fstpl
fxch
scas
call
pop
clc
lret
aas
test
cwtl
mov
xor
ljmp
aam
in
mov
cli
or
cli
bound
fimull
test
pop
xchg
nop
pop
lods
int
add
push
outsb
mov
lds
or
jge
add
pop
out
xor
cmc
pusha
cli
pop
pop
fdivs
mov
mov
jecxz
xor
je
adc
fsubl
fldenv
jno
jge
leave
jbe
xchg
mov
and
lcall
test
repz
shlb
push
gs
inc
sbb
jle
push
repnz
icebp
test
mov
cmp
inc
cmp
and
inc
pusha
xchg
cmp
push
sti
push
lea
mov
enter
sub
jle
xchg
mov
sub
stos
xchg
insl
out
bound
add
ficoms
lahf
and
scas
std
out
ljmp
outsl
mov
add
fwait
mov
aam
adc
inc
push
push
outsb
sub
test
mov
xchg
add
xchg
mov
mov
jl
inc
and
fldenv
test
xlat
and
popa
push
lods
xchg
sub
stos
jg
push
jb
add
rorl
insb
bound
lret
mov
adc
dec
stos
pop
aad
mov
xchg
pop
sbb
fnstsw
jbe
out
bound
xchg
jmp
clc
pop
in
xorb
cmp
mov
and
clc
insl
iret
push
mov
dec
dec
inc
aad
dec
dec
adc
stc
mov
mov
add
imul
pop
xor
or
leave
adc
inc
jle
or
fdivrl
sbb
mov
psllq
imul
loope
in
push
cmp
shlb
adc
cmp
push
sub
cmpsb
push
test
jnp
push
pop
pusha
add
add
mov
icebp
pop
mov
add
add
xlat
in
subps
push
and
sbb
into
pop
mov
pop
lock
xor
xchg
xchg
mov
outsb
popf
xor
sbb
jmp
or
jno
testl
xor
xlat
sbb
outsl
or
insl
sarl
add
add
popf
out
push
clc
push
jle
push
mov
push
push
mov
call
mov
call
pop
stos
xor
pop
andl
cmc
mov
ds
sbb
inc
leave
clc
push
sub
xor
mov
dec
mov
or
ret
mov
mov
sahf
or
cmc
xchg
test
je
xchg
lds
add
pusha
mull
pop
in
pusha
cmp
sbb
mov
sub
movsb
test
lea
mov
inc
xchg
into
sbb
mov
call
add
inc
or
test
fcomps
add
mov
add
cwtl
ljmp
or
ret
insb
jg
mov
scas
mov
or
jbe
shl
sbb
or
int
jnp
repz
stc
mov
outsl
cmp
shll
imul
sbb
out
adc
push
ret
or
pop
loope
inc
inc
adc
les
sbb
adc
sub
lods
mov
sub
iret
mov
in
lahf
cmpl
push
call
push
fcompl
or
imul
pop
xor
mov
push
pop
addr16
inc
dec
ret
add
jb
xor
aas
mov
mov
or
insl
psrld
or
mov
dec
aaa
mov
mov
in
insb
negb
jb
fstenv
cmovo
mov
js
gs
in
sub
in
add
ljmp
dec
mov
pop
jns
popl
add
lods
sbb
pop
push
pop
xchg
cmpsl
fcompl
jp
pop
test
roll
cmp
xor
das
dec
into
dec
xlat
pop
in
add
out
mov
jne
mov
mov
sub
adc
jge
dec
dec
sbb
adc
and
fst
push
dec
insb
inc
push
les
mov
or
mov
and
sub
mov
jnp
test
lods
ret
ret
ficomps
divb
jecxz
xchg
mov
mov
mov
mov
lcall
jb
cmpb
jecxz
sbb
cmp
cmp
mov
fildll
or
nop
cmp
sbb
js
push
xchg
cli
loop
mov
jns
cmp
ret
and
pusha
xchg
daa
xor
pushf
aam
cmpsl
mov
lods
mov
pop
mov
push
adc
imul
movsb
std
loop
sbbb
std
xchg
add
add
aaa
shlb
cmc
div
testl
cmp
add
add
cmp
ja
in
push
xor
push
pop
fs
mov
outsb
aad
pop
pop
inc
loope
xor
adc
inc
mov
xor
jo
mov
ljmp
adc
and
mov
dec
sbb
cmpsb
repz
lret
lahf
into
nop
mov
movsb
lods
cmp
clc
xchg
cs
repnz
rclb
jge
sbb
pop
movsb
inc
lret
adc
adc
sbb
sbb
xlat
jne
pop
dec
add
pop
test
repz
inc
repz
xor
test
push
xor
jle
das
aas
sbb
imul
fxch
jecxz
mov
push
push
mov
fidivrs
jle
aad
loopne
cs
pop
cmp
push
mov
mov
ret
pop
xchg
mov
lret
push
sbb
or
pop
test
sbb
movsl
mov
mov
sub
pop
push
nop
push
sahf
rcr
pop
adcb
jno
int3
movsb
mov
add
fwait
mov
into
dec
shrb
or
testl
stc
fnsave
mov
add
movsl
sbb
leave
adc
vucomisd
inc
push
or
push
pop
dec
xor
push
inc
repz
xchg
add
lret
sbb
and
mov
xor
pushf
push
lods
mov
sub
sbb
xor
add
iret
xchg
cmp
lret
sub
vmovhpd
push
inc
fdivl
xor
dec
sub
int
mov
cmp
sbb
cmpsl
pop
inc
mov
xchg
jmp
and
scas
subb
cltd
adc
data16
orl
shll
mov
inc
scas
sbb
fwait
cmp
push
les
mov
outsb
lcall
popf
xchg
mov
xlat
pop
shrl
mov
call
dec
fdivr
insb
add
add
arpl
cmpsb
jcxz
fimull
lea
add
mov
and
adc
aas
cmp
sahf
scas
cwtl
sbb
cmp
daa
int3
xchg
mov
xlat
pop
sbb
inc
hlt
fisubl
std
popa
push
movl
insb
pop
jg
fwait
andl
lahf
mov
mov
or
loope
rorl
dec
popa
stos
mov
icebp
dec
dec
xchg
xchg
clc
and
add
inc
ficoml
mov
out
xchg
gs
mov
push
addb
sbb
sub
stc
adc
sub
pop
mov
icebp
cmpsb
xor
in
mov
ljmpw
mov
incl
outsl
ret
retw
jbe
scas
jne
mov
nop
cmpsb
pushf
dec
push
pop
push
popf
out
jmp
add
xchg
push
dec
mov
mov
aad
lods
mov
mov
rcl
ljmp
imul
mov
rorl
and
repz
add
add
clc
jnp
jg
in
cli
enter
fs
call
add
pop
hlt
inc
inc
mov
mov
adc
roll
dec
add
sub
push
clc
stos
jl
cmc
sti
out
lock
jmp
pusha
je
mov
or
jmp
mov
movsb
jnp
pop
adc
mov
jo
adc
mov
lahf
sub
cs
pop
cmpb
jb
add
mov
loop
test
sub
mov
nop
jno
mov
unpckhps
or
sub
pushf
mov
jmp
push
les
sbb
xchg
push
add
jb
pop
lods
in
ret
mov
xchg
int
daa
je
fdivrs
jg
outsb
xchg
dec
mov
mov
outsb
xor
rclb
or
and
mov
imulb
and
pop
cmp
jle
jo
and
testb
mov
pushf
inc
jle
js
mov
add
add
lods
faddl
fbstp
cld
gs
mov
xchg
xchg
add
add
mov
inc
dec
xor
mov
int
sub
xchg
sar
cmp
pop
mov
pop
movsl
sub
out
icebp
inc
adc
arpl
andb
mov
add
adc
xchg
scas
add
rcll
popf
gs
das
insb
ss
dec
cmp
xchg
mov
fwait
lock
add
xchg
int
aas
pop
loopne
xchg
rcl
imul
mov
xor
adc
lcall
sahf
jl
mov
ljmp
cmp
int
sub
jnp
mov
iret
push
imul
out
call
es
aad
xchg
xchg
fists
jb
imul
dec
xchg
xchg
addr16
or
repnz
mov
fsubrp
mov
jge
jp
ret
test
push
jae
sub
lock
sbb
jl
sar
std
jle
pop
popf
scas
xchg
mov
add
add
xchg
sub
jl
mov
inc
adc
dec
repnz
movsl
fnstenv
lcall
inc
pop
cmp
adc
popf
lds
les
xor
scas
enter
jo
notb
mov
je
ret
and
pop
mov
dec
mov
or
mov
movsb
fnstenv
inc
pop
les
test
cli
pop
xor
push
pushf
xchg
jno
das
dec
hlt
jl
and
adc
andb
mov
cmpsb
fsts
pop
sahf
loope
in
push
movsb
sahf
xchg
mov
dec
inc
data16
pop
int
mov
out
icebp
lea
push
push
xchg
ss
test
loopne
iret
loop
mov
test
aam
jbe
js
pop
sarl
pop
idivb
lods
dec
and
add
add
cwtl
or
stos
xchg
cmp
in
xorl
add
xchg
mov
inc
inc
frstor
lret
js
lcall
inc
sub
sbb
arpl
xchg
ljmp
and
js
xchg
lret
movsb
add
push
mov
jbe
xchg
dec
je
and
add
rcr
pop
gs
lcall
cmc
push
aaa
push
fsubr
jo
xor
pop
cmpsb
and
loope
or
push
enter
jbe
jbe
sbb
jl
inc
nop
mov
jmp
or
inc
jae
in
and
dec
mov
sub
mov
jge
xor
jl
add
pusha
cltd
pop
mov
inc
push
lods
adc
cli
add
paddd
pushf
sarb
push
dec
scas
in
in
inc
pop
dec
repnz
daa
leave
ficomps
aaa
add
rolb
popf
and
jg
testb
lahf
jno
lds
inc
xchg
leave
inc
jle
fidivs
mov
ljmp
shlb
mov
push
push
xor
sub
add
add
outsl
sti
mov
mov
sub
and
xchg
add
add
cwtl
scas
jg
jmp
mov
dec
outsb
and
clc
add
mov
dec
fcmovnbe
test
addr16
sbb
xchg
sub
movntps
xlat
mov
cs
insl
ret
push
outsb
lret
inc
subl
push
xor
lret
dec
push
add
out
adc
fists
scas
xchg
cli
outsb
mov
xchg
mov
pop
jge
mov
mov
pop
test
add
stc
sub
rol
data16
lahf
xchg
addl
mov
push
int
iret
push
lcall
frstor
loope
cmp
arpl
adc
adc
arpl
xchg
aaa
fmuls
das
cmp
pop
jnp
push
fcomip
sbb
dec
or
cmc
out
cmp
mov
adc
mov
jle
call
shr
sub
mov
lret
push
xor
fs
and
mov
xor
outsb
xchg
inc
mov
add
add
dec
std
out
xlat
aas
dec
sbb
or
stos
cwtl
add
add
sbb
idivb
mov
push
sarb
dec
ljmp
adc
out
insb
faddl
popa
ffreep
gs
jecxz
cmp
loop
push
xor
push
add
xor
push
mov
rorb
mov
add
stos
xchg
mov
mov
mov
xor
jle
into
mov
fwait
mov
test
add
je
lods
cmp
xchg
jnp
fs
int
out
in
imul
push
das
cpuid
mov
dec
out
loope
pushf
adc
cmp
lahf
test
inc
ror
movsb
dec
cli
pop
inc
adc
sbbl
int
gs
dec
aas
sahf
mov
clc
filds
imul
add
mov
cmpsb
pop
fucom
jne
mov
ljmp
cmpsl
out
movsb
pop
inc
int3
hlt
jno
aas
add
lret
shrb
sbb
jno
cmp
test
add
add
mov
mov
jmp
test
cltd
add
add
das
lret
inc
sets
repz
scas
clc
dec
cmp
sub
stos
cwtl
out
push
lcall
sbb
cmp
sbb
jmp
sahf
dec
sub
rcl
negb
fisttpl
cmpb
mov
or
or
notl
pop
scas
aam
mov
sub
jo
hlt
ret
mov
xor
jnp
xor
shll
sbb
add
jae
dec
icebp
dec
scas
xor
je
push
push
mov
jl
int3
fmull
ret
ret
jbe
pop
mov
pop
dec
sbb
jo
inc
mov
jp
push
jecxz
stc
push
sub
shll
mov
ficompl
jo
loope
dec
xor
mov
or
enter
mov
and
pop
inc
xlat
adc
jae
in
je
aas
xor
dec
scas
lret
ljmp
add
add
lret
sbbl
popl
mov
add
add
or
in
ja
mov
fs
fistpll
insl
sub
pop
lret
arpl
dec
add
stc
fwait
aad
xor
add
adc
pop
or
sbb
mov
cmp
aaa
xor
mov
cltd
inc
adc
pop
mov
sbb
xchg
pushf
bound
or
aas
sub
mov
add
mov
cmpsl
jecxz
int
push
xor
fs
ficomps
sub
inc
pop
push
lods
mov
pop
dec
and
pop
jp
cwtl
dec
shll
lahf
xor
popa
lds
fists
js
fcmovne
push
popa
mov
mov
jae
pusha
cmp
nop
pop
mov
ret
xor
cmc
std
push
sub
jl
mov
aaa
dec
jae
shlb
sub
mov
cmp
rcll
jmp
add
jno
push
pop
jnp
push
daa
mov
and
inc
out
adc
jecxz
add
mov
imul
movsb
and
jb
sub
mov
add
add
in
cld
dec
ficompl
add
lds
shlb
inc
push
xchg
push
fwait
push
imul
xchg
pop
in
lcall
mov
xchg
adc
adc
mov
jge
insb
mov
in
jno
sub
sbb
daa
fldcw
mov
xchg
lds
xor
mov
xchg
mov
add
ds
dec
xor
jns
stc
filds
pushf
jmp
inc
cmc
cwtl
daa
sub
ja
sub
out
nop
sub
les
rcrl
ds
jb
sub
inc
sbb
scas
inc
sbb
aad
clc
mov
mov
pusha
mov
mov
cmpsb
mov
fidivrl
insb
xchg
sub
jo
mov
addr16
cmpsl
mov
out
dec
push
ljmp
fiaddl
stos
xchg
xor
repnz
ds
mul
nop
lds
or
mov
sbb
add
add
mov
sub
lahf
mov
pushf
add
add
repnz
push
adc
add
jnp
mov
and
mov
lods
in
sbb
les
jo
movsl
mov
nop
and
imul
inc
ret
cmp
inc
fidivrl
sti
scas
jnp
outsb
xchg
imul
pop
lods
jnp
es
sbb
inc
lahf
shrl
fidivl
testb
sub
fstpt
call
jp
clc
cmp
ficomps
bound
fcomi
out
ret
pop
xor
je
or
stos
or
mov
jne
inc
push
neg
and
jns
js
stos
in
push
das
jbe
inc
push
mov
cs
push
pop
adc
popf
sbb
sbbb
lea
fldt
out
and
retw
sub
sub
and
clc
inc
push
rcrl
lcall
fs
fidivl
popf
add
add
ja
out
inc
sub
or
pop
fnsave
popf
add
add
test
bound
pop
mov
cmp
push
xchg
ja
repz
ret
negb
pushf
push
push
mov
inc
xchg
or
dec
sti
or
sbb
ljmp
pop
or
inc
jb
imul
out
or
int3
cmp
repz
popf
add
out
arpl
daa
push
loope
push
mulb
lahf
cmp
xchg
pop
sar
inc
loopne
xchg
aaa
lret
ljmp
test
sti
push
sbb
jae
mov
xchg
inc
ss
orb
bound
xlat
dec
repz
je
adcb
xchg
mov
outsb
sub
inc
sbb
cmp
sub
pop
push
fisttpll
lock
in
shl
xchg
sub
orl
pop
subb
jl
fcomi
std
in
repz
loop
test
mov
cld
mov
leave
sahf
add
add
mov
push
pop
sti
in
out
clc
xchg
pop
cmpsb
push
inc
sahf
pop
jno
push
or
inc
dec
jp
sub
arpl
adcl
jge
fisubs
mov
dec
fstpl
les
es
cmp
and
jne
leave
mov
mov
add
enter
jmp
xchg
push
sub
jp
and
cmpsb
mov
loopne
and
in
lods
out
pop
mov
dec
in
decl
mov
addr16
mov
sub
mov
or
adc
rorb
xor
lock
test
pusha
xchg
outsb
mov
mov
mov
scas
ljmp
dec
pop
inc
adc
imul
sbb
das
popa
xchg
loope
stos
in
or
aaa
add
loop
and
adc
out
das
jno
ds
push
insb
mov
adc
in
dec
xor
adc
cmp
shl
add
add
mov
repz
repz
add
add
add
mov
xchg
cmpsl
or
lea
xor
dec
addr16
call
int3
cmpl
mov
fidivs
ss
mov
sbbl
xlat
outsl
inc
les
int3
fwait
xor
rcl
cmp
jbe
lcall
jl
and
dec
imul
jge
jne
jecxz
sbb
dec
xchg
jecxz
fsubrs
xchg
add
mov
adc
repnz
pop
insb
push
hlt
add
fists
out
testl
arpl
push
outsl
popf
jl
dec
mov
jle
out
iret
xlat
and
jae
ret
loop
pushf
sub
leave
mov
mov
aas
pop
ret
cli
jl
fstl
pop
insl
nop
bound
loopne
push
pop
cwtl
push
adc
xor
leave
dec
fmull
sbb
js
mov
push
mov
cmp
loopne
push
pop
adc
mov
add
add
mov
inc
inc
add
mov
add
lea
pop
pop
pop
cmp
dec
cltd
stos
push
mov
data16
mov
stos
jbe,pn
les
es
shr
inc
sub
stos
pop
inc
sti
std
movsb
icebp
popa
dec
cmc
pop
lds
cwtl
arpl
repz
hlt
mov
jl
int3
dec
jg
mov
push
insl
add
mov
sti
test
pop
gs
cmp
adc
pop
push
lea
xchg
sub
add
lret
les
xlat
jae
dec
pop
lds
pusha
cwtl
jne
daa
xchg
and
mov
int
sub
popa
subb
lret
repnz
xchg
inc
push
cmp
cmp
mov
ds
mov
in
enter
mov
gs
loopne
les
xlat
or
cmp
cmp
jno
shll
pop
shrb
dec
xlat
adc
add
or
sbb
inc
mov
xchg
inc
fsubs
add
filds
mov
sarb
mov
pusha
outsl
nop
sbb
add
jmp
push
xchg
and
mov
mov
cmp
shrl
xor
inc
rep
mov
jbe
mov
sub
sbb
dec
lods
out
test
pushf
inc
in
pushf
mov
sbb
and
out
mov
mov
mov
push
pop
pop
xor
adc
outsl
pop
into
pop
iret
mov
mov
clc
outsl
lods
lods
inc
mov
aaa
mov
jnp
cmp
in
mov
mov
mov
lcall
sub
out
mov
mov
jge
jp
aas
loopne
pop
rcr
stos
loopne
cmp
stos
daa
out
pop
jecxz
test
sti
dec
sti
hlt
aam
loopne
push
mov
and
or
mov
popf
add
fdivl
xor
in
dec
add
mov
add
add
inc
fdivl
push
dec
mov
frstor
add
sub
orl
outsl
fwait
mov
or
push
dec
clc
and
and
jb
xchg
sar
decb
xchg
or
adc
ficoml
test
data16
cmp
push
fwait
add
hlt
fistps
loope
pop
sbb
push
dec
adc
outsl
aad
cs
div
inc
cmpsl
pushf
loopne
adc
pushf
loop
lock
mov
outsb
add
sub
mov
ret
xchg
repnz
or
shr
test
sti
xor
nop
push
je
movsb
push
fwait
mov
cmp
addr16
pusha
movsb
test
mov
push
loope
add
pop
or
cmp
and
inc
fprem1
jne
add
test
mov
pop
mov
push
pop
or
mov
xchg
push
cli
or
in
lret
cmpsb
in
hlt
jp
enter
repnz
push
mov
push
out
jle
mov
mov
adc
mov
sbb
das
loop
add
add
mov
dec
in
mov
sbb
into
les
dec
inc
and
push
sbb
gs
fstpl
mov
repz
xchg
pushf
adc
xor
loope
cmpl
bound
or
pop
push
out
cs
in
xchg
add
mov
xchg
mov
loopne
mov
pop
into
push
add
out
mov
push
jno
into
push
and
js
jns
inc
mov
pop
aaa
cmp
jmp
in
pop
sub
xchg
inc
ret
sbb
enter
sbb
test
cld
nop
dec
cmp
ljmp
cmp
or
cltd
inc
fdivr
sbb
fnsave
mov
loopne
pop
hlt
sbb
outsl
pop
test
push
xchg
in
imul
pop
or
pop
jbe
iret
orb
lods
std
je
sub
sub
xchg
xor
sub
cmpsb
vpmacsdql
add
stos
hlt
jmp
cmp
jbe
aam
mov
out
add
add
idivl
dec
xchg
cmp
rcr
lret
rorl
mov
fcoml
ficoml
push
xor
mov
mov
mov
insb
mov
push
mov
mov
dec
add
push
xchg
adc
jnp
push
inc
hlt
cmpl
repz
sbb
add
andl
or
stc
adc
add
inc
in
icebp
insb
fbld
fstl
pop
out
add
aaa
mov
andb
cmpsb
mov
jb
cmp
sbb
dec
lahf
in
mov
in
xchg
pop
add
insl
aam
adc
ficoml
cmp
bound
fildl
mov
xchg
cltd
test
arpl
add
push
imul
mov
les
mulb
popf
sub
psadbw
cmp
mov
mov
data16
call
push
pop
add
add
push
nop
out
xlat
out
jg
in
xor
fstps
add
add
xor
icebp
sbb
adc
xorl
mov
adc
push
jmp
cld
out
inc
push
divl
and
je
inc
mov
inc
into
inc
xchg
fdivrs
sbb
andb
mov
inc
jno
jle
int
sub
pop
adc
lods
inc
push
enter
shlb
js
stc
inc
sbb
sub
inc
test
outsb
jns
lahf
das
mov
jo
mov
test
mov
push
pop
cmpsl
cwtl
std
test
push
jns
jp
mov
sub
lds
subb
dec
and
outsl
adc
int3
mov
mov
rcr
scas
xor
loope
dec
lcall
pop
jbe
nop
leave
xchg
mov
and
nop
in
les
adc
ret
mov
xor
dec
push
loopne
jecxz
jl
xchg
lods
out
inc
unpckhps
pop
addr16
add
add
mov
inc
fwait
lds
jo
fldl2e
call
cs
cmpsb
add
add
ss
mov
push
or
inc
inc
test
lahf
lcall
mov
shl
iret
jno
sbb
inc
adc
push
cmpsl
cmpsb
inc
loopne
testl
hlt
lret
js
sbb
or
mov
loop
add
add
pop
mov
xlat
test
dec
sbb
nop
xlat
inc
outsb
cmp
nop/reserved
sub
push
shrb
mov
rcrb
scas
push
sbb
fldl
adc
jle
bound
add
das
push
sbb
mov
pop
repnz
and
mov
jno
decb
pop
xchg
fcmovnb
sub
push
push
jb
stos
inc
test
xor
cmc
lock
movsb
inc
push
loopne
sub
in
or
sub
pop
fcoms
xor
enter
inc
push
sbb
pop
out
imul
pop
jmp
xchg
test
push
notl
push
test
ja
dec
lret
dec
add
add
mov
fadds
mulb
add
mov
test
pop
inc
fnsave
push
test
lret
mov
xchg
mull
adc
idivl
adc
sbb
mov
cmp
movsl
cmp
jnp
inc
xchg
inc
xchg
bound
je
jnp
fwait
mov
and
bound
or
jbe
sbb
xor
sbb
push
int
mov
movsl
fld
popf
imul
stos
dec
scas
dec
stos
scas
mov
cmc
test
xchg
xchg
cmpsb
dec
arpl
adc
inc
adc
das
les
xchg
sbbb
jl
movsl
mov
mov
mov
and
negb
int3
xor
mov
aas
push
xchg
inc
decb
out
sbb
or
push
sbbb
inc
jno
add
mov
xlat
mov
jbe
jb
push
pop
shll
dec
adc
cli
ljmp
sahf
arpl
jbe
jmp
jle
std
mov
and
add
add
mov
push
sti
jmp
push
mov
testb
add
add
mov
shll
jb
aaa
repz
sti
mov
add
test
jb
shll
aaa
cmp
jl
out
sub
or
push
mov
mulb
fnsave
je
mov
aam
sub
in
jg
mov
xchg
inc
or
push
lods
and
mov
mov
sbb
cmpsb
cmpl
mov
insl
int
insb
fs
pop
push
loop
cmp
add
stos
stc
lock
loope
rorb
sbb
fs
jns
cmp
ja
sub
daa
sahf
inc
rcrb
push
stos
test
dec
fsubr
jle
add
or
mov
lods
mov
inc
mov
rcl
movsl
or
aas
out
decl
push
xchg
fiadds
add
inc
data16
dec
pusha
cli
mov
add
mov
jecxz
lock
dec
dec
add
add
rsm
mov
push
lds
arpl
mov
cmpxchg
addr16
adc
mov
sldt
scas
mov
mov
cmp
popf
adc
inc
xchg
push
les
inc
in
lcall
or
aad
and
pop
jnp
lahf
jns
push
lds
inc
mov
imul
or
daa
lahf
xor
rcrb
das
test
or
jl
jnp
test
inc
jmp
ss
or
push
xchg
clc
out
inc
xor
arpl
xchg
int
daa
mov
fldl
adc
test
mov
outsl
push
adc
push
stos
push
jecxz
test
mov
stc
test
iret
mov
pop
dec
add
jg
lcall
outsl
push
filds
mov
pop
fs
insb
popf
std
xchg
and
add
add
cld
mov
leave
mov
add
add
add
add
jle
ljmp
mov
push
adc
int
sbb
add
adc
jg
xor
cltd
and
out
lahf
cltd
jg
paddd
shl
popa
xchg
mov
sub
mov
jbe
inc
pop
dec
ss
mov
test
adcb
mov
adc
mov
arpl
lods
fisttpll
dec
xchg
pop
movsl
js
pop
xchg
orl
mov
scas
dec
inc
sti
data16
add
mov
notb
pop
mov
aaa
add
ja
push
pop
add
cmp
jo
cmp
je
nop
sbb
adc
test
push
push
fldl
push
scas
imul
adc
pop
repnz
mov
ss
dec
xchg
xor
xor
xchg
insb
or
in
leave
pop
xchg
fimuls
in
lret
inc
jne
and
stc
dec
add
add
out
cmc
mov
insl
ljmp
add
mov
loope
and
pop
dec
nop
push
sub
or
adc
pop
nop
sub
xchg
inc
or
jg
sub
test
lcall
sbb
mov
mov
dec
jo
ss
icebp
or
ret
jmp
aam
push
bound
lods
je
and
ret
mov
out
out
mov
out
add
sbb
push
add
stc
enter
pop
je
out
sub
call
cmpsl
aaa
cmp
sahf
add
repz
lods
mov
xorl
push
adc
cmp
outsl
or
jp
imul
mov
lds
lods
mov
mov
pusha
jmp
out
pop
xor
cltd
sub
pop
add
add
xor
mull
int3
jecxz
cld
or
xor
mov
inc
mov
fiadds
add
fucomip
std
dec
std
pop
lcall
xchg
pop
push
adc
lods
add
add
test
aam
loope
loope
mov
add
xchg
sahf
cmpsl
push
lds
sub
mov
cmpsb
enter
aam
icebp
rcll
cmp
cmp
mov
mov
xor
outsb
out
pop
pop
mov
xchg
enter
inc
ret
inc
xchg
xchg
inc
nop
clc
xchg
imul
dec
push
loopne
push
dec
rol
jns
stos
orl
sub
insl
adc
adc
int3
imulb
mov
addr16
lcall
cmp
dec
jge
sbb
mov
mov
mov
mov
lret
in
mov
xchg
adc
mov
fdiv
ljmp
mov
sbb
fidivl
aam
xchg
adc
pop
cmp
lock
push
xlat
adc
mov
push
add
enter
xor
add
fidivs
loop
ljmp
inc
push
adc
add
add
xorl
mov
or
pop
or
das
sbb
out
and
lret
addr16
push
add
sbb
mov
mov
or
sbb
inc
xchg
pop
mov
mov
push
pop
lret
mov
dec
adc
mov
cmp
call
subb
fstpt
in
pushf
mov
int3
pop
pusha
and
jne
mov
jb
dec
test
loopne
push
int3
or
mov
mov
xor
shrl
shlb
mov
cs
scas
xchg
jle
push
movsb
sbb
sub
test
and
mov
xor
scas
and
mov
pop
repnz
ljmp
inc
cmp
outsb
or
into
aad
xor
je
scas
fcoml
je
sub
inc
popa
add
test
test
push
and
jb
add
add
xchg
jg
jmp
std
mov
xor
or
scas
add
add
ret
lret
jecxz
cmpsl
mov
mov
pop
nop
add
cmp
std
mov
leave
adc
push
pop
femms
repz
add
sbbb
sti
inc
aad
fstps
xor
jmp
cmpsl
mov
divl
mov
push
test
push
push
ljmp
out
dec
nop
leave
jb
pusha
pop
push
fstpl
dec
jp
dec
in
data16
inc
inc
jmp
sub
add
popa
dec
lods
mov
lods
mov
sub
mov
sub
push
mov
lahf
iret
faddp
xchg
sbb
addb
shlb
pop
xor
or
imul
cld
cmp
stc
jnp
mov
pop
out
sub
push
int3
add
data16
jo
push
movsl
adc
stc
cmp
mov
insl
call
jmp
mov
enter
ljmp
sub
call
adcl
add
add
xor
inc
mov
dec
pusha
push
mov
add
cmp
aaa
mov
in
in
lret
hlt
xor
cmp
aaa
push
jp
cmp
shl
lock
daa
test
inc
das
or
xchg
imul
mov
mov
arpl
in
lcall
mov
fisttpll
jnp
sti
push
mov
aam
ljmp
ljmp
dec
adc
xchg
fadd
sub
pop
daa
dec
loop
and
in
mov
xchg
iret
out
iret
push
cwtl
push
adcb
inc
test
dec
cmp
inc
cmpsl
push
push
jb
aad
sub
repnz
imul
flds
dec
jbe
sbb
pop
push
scas
sahf
mov
in
xor
outsb
sub
je
xor
xchg
mov
hlt
das
stc
js
test
and
ds
push
mov
dec
xchg
xchg
or
push
fxch
pop
and
test
sbb
cmp
and
fstpt
add
push
pop
xor
cmp
inc
call
lock
add
jb
cmp
xor
stc
inc
jo
rcl
iret
add
mov
pop
inc
dec
pop
xchg
into
xor
pop
inc
cmp
shrb
movsl
cmp
and
mov
imul
xchg
and
sbbl
cmp
jmp
scas
arpl
clc
add
inc
fidivrs
adc
xchg
stc
lea
mov
cli
sti
call
shrb
idiv
pop
or
jne
lods
jbe
mov
xlat
add
mov
and
mov
or
jp
into
scas
xor
adc
cwtl
pop
adc
inc
lret
popa
subl
loop
cmp
js
ljmp
xor
sub
dec
cld
xorb
in
lea
inc
xor
rcr
xchg
and
fsub
adc
fidivl
mov
iret
les
and
add
add
jp
les
mov
arpl
aad
sub
add
ret
aaa
in
cmp
addr16
pushf
js
fildl
xchg
push
sarb
add
arpl
fcmovne
pop
sti
int
jae
push
test
or
mov
or
dec
jnp
cli
push
orb
and
sbb
sub
lahf
cmpsl
sbb
mov
adc
mov
fistpll
out
ret
and
xchg
jge
je
sub
dec
test
sbb
imul
mov
dec
jne
dec
outsl
xchg
inc
imul
cmpl
lock
pop
clc
sub
sbb
sbb
insl
or
adc
cld
out
hlt
fnstenv
popa
sbb
sub
ds
jg
inc
mov
sub
xor
add
lods
lds
cmp
push
clc
lea
sub
out
sbb
aas
xchg
cltd
sub
lret
ror
addr16
push
jo
add
add
clc
pop
stc
out
push
pop
bound
fildll
add
add
jb
push
jmp
pusha
stos
mov
int
dec
rcr
jbe
mov
xor
mov
nop
inc
out
lea
jnp
fdivl
sub
movsb
lret
add
xchg
xor
sahf
adc
imul
aam
lret
add
sub
mov
jo
lret
xchg
xor
cmpsb
test
aas
cmpsl
std
mov
test
imul
and
into
adc
push
and
sbb
movmskps
leave
scas
or
ret
stc
pushf
jecxz
shl
jbe
mov
jne
pop
rorl
jo
mov
push
cmpsl
sti
testl
loop
out
sbb
test
cs
xchg
xor
pop
les
rclb
adc
push
dec
xchg
pop
pop
mov
jmp
pop
cmp
loope
mov
dec
mov
adc
sti
sub
rcl
dec
mov
pop
push
aaa
add
add
push
mov
lcall
push
xor
add
sahf
add
clc
and
xchg
dec
sbb
cmp
mov
lods
hlt
push
push
or
js
lret
jle
sub
roll
popf
pop
jbe
sahf
push
mov
or
inc
ds
adc
fsubrl
ds
jo
sbb
test
pop
sbb
repz
mov
pop
add
adc
div
daa
add
jbe
adc
repz
jae
or
cmpsb
mov
scas
aam
and
popa
pop
rcrl
mov
into
popf
out
inc
sbb
ret
out
pop
ljmp
fcmovu
mov
push
add
cld
pusha
sar
outsl
push
faddl
into
pop
in
cmp
clc
call
outsl
mov
fdivr
dec
sbb
arpl
lods
add
rorl
cwtl
sub
mov
and
mov
cmpl
or
xor
add
add
jne
mov
int3
insb
lret
dec
daa
aaa
mov
add
divb
mov
and
xchg
and
push
leave
cmp
hlt
dec
mov
inc
xlat
xchg
push
jmp
pop
xchg
sarb
mov
pop
pop
gs
fdivr
mov
rolb
mov
push
sbb
cmp
es
fmull
loop
push
sbb
xor
fld
popa
xor
cmp
cmpsb
cmp
or
sti
loope
out
pop
mov
int
movsl
movsl
dec
mov
push
je
arpl
push
pop
mov
andl
inc
adc
adc
insb
or
test
dec
movsl
push
stos
or
jge
pop
movsl
xor
bound
sahf
stc
push
sbb
inc
movsb
sub
sti
or
jp
mov
addr16
xchg
imul
dec
adcl
sub
cmp
add
and
sti
cli
mov
iret
pop
out
addl
dec
dec
addr16
add
add
pop
sbbl
fstp
rorl
shr
dec
cmp
add
add
cld
and
cmp
hlt
push
rorb
push
in
stos
mov
mov
dec
mov
lahf
movsl
dec
cmpsl
mov
fisttpll
cltd
inc
mov
movsl
sbb
rcr
cs
gs
mov
orl
mov
loop
pop
dec
mov
push
imul
adc
ja
sub
sub
xchg
mov
or
inc
mov
arpl
cmp
jge
xlat
shll
push
fildl
mov
loop
leave
aas
iret
lea
and
in
repnz
mov
addr16
pop
push
loop
sbb
ret
mov
test
iret
adc
xchg
sub
cwtl
lock
xlat
push
push
xorl
or
sbb
fs
lods
repz
sbb
jecxz
sub
mov
fistpll
dec
fldenv
fldl
popa
xchg
call
push
daa
xor
add
dec
add
add
in
mov
jecxz
out
mov
rorb
mov
add
dec
dec
inc
jmp
lret
adc
sub
or
cmc
push
sbb
xchg
cmp
arpl
ret
xor
and
lcall
or
pop
outsl
adc
lds
xchg
inc
mov
cmpsl
jmp
push
add
pop
lds
jb
es
fisttps
pop
es
call
or
push
out
jmp
testb
inc
push
xchg
cld
int
movsl
push
lods
xchg
cmp
movsl
inc
mov
xchg
cmpsl
xchg
jl
add
sub
mov
imul
xchg
pop
ljmp
or
cmp
cli
out
and
mov
mov
and
xchg
cmp
adc
pop
jmp
mov
jge
pushf
push
cmp
and
xchg
repz
outsl
out
popa
mov
stc
and
fsubrl
repnz
jl
mov
nop
xlat
add
add
std
test
jg
into
lret
orl
add
add
cmp
mov
xchg
and
cmp
pop
cwtl
xor
mov
sbb
pop
imul
pop
sarl
insl
sub
hlt
sub
cltd
data16
mov
jle
out
loope
movb
jmp
out
out
lods
and
dec
push
cmp
aaa
xor
jmp
mov
add
cmpsl
lahf
movsb
inc
pop
jo
sbb
dec
fidivl
int
and
and
cmp
inc
xor
popa
inc
int3
lods
stos
add
negb
int
and
shlb
cmc
and
mov
sub
int3
pop
or
in
mov
adc
sarl
test
jg
mov
mov
dec
pop
imul
jmp
dec
sub
push
filds
jge
ret
divl
fcoml
popl
push
icebp
mov
and
rcll
xor
add
add
adc
in
lcall
jae
dec
mov
push
fsubrs
dec
mov
add
mov
or
cmp
inc
shlb
fcomps
pop
rcll
std
mov
jg
jno
xor
pop
fstpt
sbb
sbb
cmpsl
fisttps
jbe
aas
mov
pop
je
shll
push
movsl
mov
cltd
mov
aam
inc
mov
in
xchg
mov
ret
xlat
jb
or
aam
mov
push
test
out
xchg
andb
cmc
sub
shrl
cld
stc
adc
sbb
sbb
push
or
arpl
mov
into
out
and
mov
cmpsl
stos
sti
in
pop
fstpt
jp
movsl
or
xor
ret
dec
aaa
fadds
int
mov
dec
jecxz
push
mov
mov
ss
sub
and
outsl
and
aad
sbb
movsl
scas
enter
add
add
sub
jg,pt
dec
arpl
pop
push
mov
add
mov
fldt
xchg
call
jecxz
jle
mov
mov
and
xchg
pusha
dec
dec
movsl
jo
pop
add
pop
cmp
leave
sub
int3
xchg
and
sbb
dec
sarb
adc
icebp
shll
sub
out
pop
jmp
sbb
sbb
lea
dec
push
pop
sub
mov
and
jns
cmc
mov
test
sub
mov
cltd
mov
insl
dec
in
sbb
mov
cs
inc
movl
lds
rorb
incb
xor
jns
xchg
pop
mov
iret
mov
aad
mov
xchg
fwait
or
xchg
mov
push
xor
adc
xchg
adc
aaa
mov
int3
xor
insb
xchg
dec
push
cmp
js
jb
loopne
in
pop
movb
add
out
idiv
outsl
mov
test
loope
push
mov
add
dec
cmc
outsl
repz
scas
mov
or
and
out
jae
inc
jmp
mov
out
dec
or
in
push
lock
jg
pop
shrl
jecxz
jge
fcoms
sub
jle
sbb
testb
clc
cmp
push
inc
scas
cmpsb
xchg
mov
dec
cwtl
popa
pop
and
mov
call
call
cmpsb
jnp
mov
push
test
mov
jle
movsb
or
leave
or
fstpt
inc
inc
stc
xor
push
dec
or
les
jmp
mov
enter
fwait
add
xchg
push
test
ss
pop
pop
adc
loop
add
ljmp
inc
std
xchg
push
sub
gs
dec
ljmp
int
je
mov
je
adcl
jmp
mov
pop
push
jg
sbb
jecxz
jl
cmpsb
addr16
mov
rolb
add
xor
mov
pop
push
loop
movsb
pop
mov
add
inc
mov
xchg
ret
outsb
inc
mov
sbb
xchg
sub
repz
ficompl
and
mov
movb
or
pop
out
fisubl
dec
sti
nop
fisubs
push
mov
fs
push
les
mov
add
popf
sarb
fcomps
push
cmpsl
jg
xchg
out
jbe
cmp
and
sbbb
mov
mov
rolb
add
or
mov
in
ret
and
mov
dec
nop
lods
cmpsl
inc
sti
sbb
add
sub
pop
loopne
lods
xchg
and
add
sub
daa
cltd
pop
inc
in
dec
adc
xchg
xlat
inc
out
push
add
cld
hlt
xchg
nop
sub
rcr
int3
mov
cmp
fmulp
jecxz
fidivl
lock
sub
aam
loop
cld
ljmp
sub
mov
cld
add
add
fistpll
call
add
pop
mov
add
lret
add
lds
pop
in
jecxz
push
icebp
push
loope
jb
out
add
stc
jne
lds
mov
xchg
mov
jns
or
sbb
mov
jl
pushf
test
lock
ror
aas
mov
loope
test
fwait
xchg
lock
push
ror
leave
aaa
xor
ror
mov
add
stos
sarl
mov
ja
jne
ror
push
in
mov
xchg
add
adcl
in
jns
aam
fisubrs
or
jb
push
mov
mov
jnp
test
adc
push
mov
and
push
fisttpll
lcall
pop
daa
shll
adc
gs
jns
dec
dec
ss
mov
xchg
ret
mov
push
xor
scas
pusha
shll
subl
test
add
xor
sbb
bnd
jnp
add
add
std
sti
leave
sti
iret
jmp
jb
fs
add
cld
cmp
pop
sub
pop
inc
xchg
adc
fimuls
cli
mov
cmp
movsl
mov
imul
mov
imul
sahf
xor
cmp
and
jae
push
imul
invlpg
and
cmp
lock
dec
pop
adc
sbb
cmpsl
ficompl
xchg
sub
or
add
sbb
cmp
push
fs
push
outsb
jno
jge
ljmp
adc
clc
insl
sahf
lea
loope
mov
jecxz
scas
fdiv
jns
shlb
fbstp
add
xlat
scas
sahf
es
hlt
out
pop
mov
shlb
repnz
aam
sar
lds
fs
aam
pop
push
cmp
cs
fsubrl
js
je
mov
dec
ss
in
jae
ficompl
mov
bnd
push
mov
gs
aam
add
add
mov
xor
mov
add
js
xchg
inc
mov
lcall
xor
xchg
shl
jmp
and
pusha
popa
jmp
orl
cli
and
cmp
movsl
cli
inc
pop
sbb
test
sub
fsubp
cmpsb
pop
add
mov
das
insb
sub
or
insl
and
mov
mov
fiadds
mov
ljmp
cmp
xor
insb
pop
or
xchg
jle
loopne
or
adc
mov
jp
fcomps
in
push
mov
les
cmp
xor
scas
push
cmpsl
dec
lret
dec
mov
fistpll
push
fstpt
cli
fsubrp
mov
xor
dec
sbb
insl
les
or
je
ja
ret
stc
or
jnp
fstps
addl
scas
jge
clc
clc
or
orl
add
add
jg
mov
sahf
loop
cmpsl
jle
loop
rolb
add
mov
xchg
jns
sub
mov
icebp
jle
cmp
les
sbb
ds
sub
cmpl
ss
pop
repnz
bswap
outsl
mov
js
nop
jbe
push
subl
outsl
hlt
xor
sarb
mov
fsubs
pop
xlat
cltd
jle
mov
lods
cwtl
insb
sbb
cs
push
jae
pop
nop
add
mov
sbb
outsb
cltd
imul
xchg
mov
ror
dec
cmp
cmp
jns
packsswb
or
inc
movsl
add
mov
pop
clc
das
pop
fwait
cmc
divl
sbb
pop
bound
lock
inc
mov
jecxz
mov
cld
xlat
and
imul
jo
add
sahf
pop
dec
movb
xchg
aam
das
xlat
aam
enter
push
xchg
je
inc
pop
push
sbb
imul
pop
test
add
or
je
stos
je
mov
or
adc
add
xor
push
cld
pushl
cld
sbb
jae
add
add
in
and
lret
adc
cmp
add
inc
jb
ljmp
push
mov
fwait
or
aad
xchg
mov
insb
add
and
mov
je
enter
pop
and
push
push
es
es
insl
fildll
insb
mov
dec
mov
mov
stc
jl
cs
out
sahf
outsl
arpl
test
aam
ret
xor
rorb
jmp
add
bound
xchg
popa
cmp
shlb
rcrl
rorb
ljmp
jmp
or
stos
or
cmp
add
mov
dec
push
xlat
inc
test
cmp
scas
stc
xor
sub
test
nop
mov
bound
lods
dec
xchg
loope
adc
mov
int
mov
js
cmp
cmp
mov
sbb
addr16
inc
xor
sti
cmp
push
mov
lahf
outsl
imul
add
outsl
int3
into
cmp
add
xlat
pushf
shrb
lcall
pop
mov
add
add
js
pusha
jmp
push
mov
stos
mov
xor
dec
fistl
jno
mov
sub
xor
test
adc
je
sahf
in
xchg
or
out
clc
popf
test
lret
sbb
fimull
and
dec
mov
repnz
dec
fnstsw
in
sub
jmp
jp
pop
mov
push
xor
xchg
push
mov
add
cmp
and
or
mov
movsl
and
test
rcr
in
add
add
pop
mov
pop
rcrl
jl
rcr
mov
cmp
insb
push
push
mov
jle
push
xchg
pop
lock
ror
xlat
pop
icebp
or
in
sub
pop
inc
stos
push
pushf
icebp
cwtl
shlb
test
mov
dec
adcb
popa
cmp
xchg
stos
fsubrp
arpl
pop
push
call
cltd
mov
sub
scas
mov
aas
scas
fnstenv
mov
add
cld
add
std
sub
mov
fucomip
mov
xchg
les
sar
jmp
out
cmp
repnz
das
sub
push
rcl
sbbb
or
jbe
dec
dec
ret
mov
insb
xor
sub
mov
lret
xchg
cmp
cltd
xchg
inc
lret
aas
adc
aaa
iret
stc
test
or
inc
std
mov
popf
ja
call
ret
scas
push
xor
jecxz
out
iret
or
xchg
mov
xchg
sbb
push
cmp
inc
or
jns
push
ret
push
sub
shrl
add
in
movb
mov
or
pushl
adcb
test
cli
movsl
cmp
pusha
inc
jp
movsl
mov
and
inc
mov
mull
dec
addl
dec
fidivl
loope
dec
inc
push
mov
xchg
cmp
push
jns
mov
aaa
pop
sub
aaa
lods
lea
add
jg
jne
jne
jg
loop
mov
mov
add
push
les
mov
dec
sbb
repnz
test
sahf
data16
xor
cmp
lahf
stos
movb
or
movsl
or
mov
fildl
or
shr
push
inc
ja
mov
nop
or
outsl
xor
int
or
or
mov
aam
xor
shlb
mov
sub
or
push
out
std
sbb
xchg
inc
dec
ljmp
aad
mov
mov
mov
push
fistpll
daa
push
daa
pop
test
stc
test
and
fld1
xor
subl
xchg
add
sbb
push
ret
mov
jle
movsb
pop
vbroadcasti32x8
out
push
sbb
lret
mov
cli
or
cmp
or
push
push
add
inc
sti
cli
push
pop
xchg
test
fisubrl
outsl
jbe
xor
jecxz
push
adc
or
add
out
imul
pushf
lock
mov
add
sbb
mov
cmc
mov
adc
add
mov
movsb
xor
faddp
rcrb
mov
movl
pop
xchg
in
outsl
jne
push
jp
shll
rorl
sbb
sti
out
and
jno
or
loop
aad
repnz
mov
cmp
or
fidivrl
gs
lods
and
mov
es
jnp
cmp
lea
and
lods
cmp
ss
stos
sbb
add
pop
mov
test
fwait
cmpsb
je
mov
sbb
pusha
in
push
es
mov
sarb
xchg
pop
shrb
push
outsl
and
clc
in
push
sbb
rorl
xchg
mov
dec
cmc
lods
out
adc
and
lret
outsl
adc
stc
out
andb
push
cmp
inc
adc
das
xor
push
pushf
into
dec
mov
mov
add
outsb
jle
lods
testl
movb
add
mov
lcall
hlt
fistpll
mov
fidivrs
sti
mov
test
data16
dec
or
mov
add
xchg
fstpl
jo
es
test
icebp
xchg
ret
arpl
push
cld
fwait
mov
aam
setb
inc
inc
jo
cwtl
xor
sbb
mov
cmp
lcall
jp
ljmp
lods
test
fcmovu
test
push
sbb
scas
jecxz
test
loop
inc
sar
fistpll
cmp
mov
add
add
or
add
cmp
mov
test
sub
mov
fidivs
das
xor
cmpsb
cmp
dec
scas
adc
rcrb
icebp
js
out
testl
mov
aas
xor
cmp
fs
jmp
loopne
adc
or
mov
add
jl
sub
add
add
mov
xchg
insb
xor
xor
xchg
movl
add
push
mov
in
stc
outsl
int
dec
mov
cmp
arpl
cmp
dec
les
and
test
dec
loope
add
jg
icebp
jo
imul
mov
sub
inc
jo
stos
push
iret
fsts
and
enter
xchg
shl
test
inc
inc
xchg
pop
lret
sarl
sbb
repnz
cltd
imul
loope
mov
arpl
add
push
add
cmp
imul
xchg
jbe
dec
mov
dec
bound
push
adc
mov
and
push
pop
cmp
xchg
cmc
sub
dec
or
push
jge
mov
ror
scas
call
hlt
gs
scas
es
fst
les
add
pop
jp
cli
cwtl
scas
pop
dec
jecxz
sbb
jno
stc
adc
je
jo
push
mov
sbb
xchg
push
mov
ret
xlat
and
and
add
add
out
sti
xlat
in
aad
fisubrs
sbb
add
add
icebp
jbe
subl
adc
movsl
out
inc
jecxz
mov
cmpb
xchg
mov
les
push
out
jecxz
lcall
inc
pop
xchg
cmp
xor
adc
lea
mov
xchg
dec
push
mov
dec
fists
pop
or
es
stc
out
xchg
jl
or
mov
pushf
shlb
dec
fmulp
or
sub
dec
dec
test
jmp
xorb
sub
pushf
xor
adc
dec
mov
lcall
scas
inc
cmp
stos
jmp
ja
stc
mov
adc
fsubl
mov
std
or
filds
and
dec
cmp
jge
imulb
es
inc
adc
jo
xor
enter
mov
pop
test
lock
imul
add
push
xchg
arpl
sbb
push
ljmp
jmp
imul
clc
in
fldenv
mov
es
add
ds
sub
cmp
jg
and
mov
jle
sbb
leave
add
add
pop
xchg
jae
xor
mov
or
loop
dec
insl
sbb
mov
mov
rcll
bound
xchg
pusha
sbb
popa
inc
jno
mov
rclb
fistl
push
loope
xor
or
jno
scas
andw
jne
push
rcl
lock
mov
pushf
dec
push
push
dec
sub
orl
sub
ret
aam
into
test
and
fdivrl
lods
fnstsw
lods
mov
pmuludq
push
push
insl
adc
cmpsb
mov
jne
lods
cmp
dec
lcall
xchg
lods
pop
push
into
fsubs
push
xchg
repnz
adc
aas
bound
sub
mov
xor
aas
das
mov
xchg
addr16
pop
and
int3
arpl
out
call
sub
add
jmp
ds
repz
fcoms
add
add
add
adc
and
and
lods
fldcw
flds
jnp
ja
movsl
in
push
cwtl
in
push
mov
xchg
out
repz
cmpsl
inc
xor
je
mov
jecxz
pushf
loopne
push
lret
scas
cmp
les
cmp
dec
fucomi
ret
adc
jge
cmp
mov
outsl
aad
shll
or
stos
ud2
pop
pop
and
mov
das
jnp
pop
stos
xor
mov
imul
dec
and
mov
cwtl
mov
imul
sbb
fistpl
inc
adc
and
es
arpl
mov
in
test
mov
je
andl
xlat
outsl
pop
jp
int3
fs
xchg
imul
test
popa
adc
int3
loopne
push
sub
adc
jecxz
je
jle
sub
mov
lcall
jmp
repnz
jo
xor
test
add
inc
arpl
push
out
cmpsl
fisubrs
test
icebp
out
add
mov
mov
mov
jge
std
mov
lret
add
add
int3
sbb
gs
out
bound
notb
fmull
or
push
fcmovnu
adc
adcb
call
xchg
inc
sbb
testl
aam
das
insl
aas
lret
imul
push
into
push
clc
mov
les
sub
aam
mov
xchg
imul
jle
pop
push
cmpsb
out
xor
jl
addr16
lds
sbb
outsb
aad
mov
jbe
dec
ficoml
mov
fadd
filds
lock
cmp
mov
and
mov
cmp
sub
testb
push
std
negl
ret
lret
imul
movsl
dec
xor
cwtl
sahf
push
xor
enter
leave
shrb
ret
nop
outsl
jo
mov
je
xchg
push
mov
lcall
dec
test
sbb
xchg
fidivl
push
fnstenv
adc
sarb
inc
in
push
mov
pop
ret
add
enter
in
sbb
push
inc
jno
dec
xlat
stos
int3
add
add
sti
mov
ss
call
inc
jp
rcrb
loopne
pushf
dec
sbb
xor
push
cmp
out
pop
push
imul
jne
jle
pop
inc
or
xchg
scas
cmp
neg
xchg
cmp
pop
sbb
cmpsl
sub
xor
in
push
mov
sbb
dec
cwtl
jmp
xchg
fwait
pop
int3
pop
ror
push
pop
and
xor
and
imul
sub
out
push
xchg
push
sub
mov
das
sbbl
das
lock
add
add
loopne
push
add
xchg
lds
js
cmpsb
pop
mov
or
mov
sub
testb
mov
xchg
out
xor
fbstp
dec
mov
pop
pop
fs
xor
mov
leave
popf
cmp
outsl
out
in
out
sub
jmp
or
jb
outsl
add
mov
testb
movlps
add
jne
imul
cmc
call
inc
push
popa
inc
iret
ffree
scas
int
add
xchg
xor
cmp
cmpsl
pop
push
xchg
ret
mov
sbb
addr16
jo
mov
mov
or
inc
mov
repnz
xchg
mov
sub
mov
sub
repnz
inc
lahf
inc
dec
or
pop
mov
dec
lods
pushf
out
pop
sbb
sub
pop
decb
ljmp
jmp
mov
lret
cmp
pop
cmp
out
and
inc
mov
jle
xchg
mov
or
cmp
mov
js
ljmp
xchg
xchg
aas
hlt
movsb
jb
pop
shrb
push
push
lret
xchg
inc
decb
icebp
dec
jg
scas
adc
nop
and
sbb
fistpl
xchg
jecxz
lds
jae
pop
vdivsd
pop
mov
sti
pop
addr16
push
adc
adc
cmp
in
adc
stc
cwtl
pop
and
ja
mov
mov
mov
sbb
popl
add
movsl
mov
iret
sub
outsl
mov
add
sbb
stc
jecxz,pt
lds
scas
or
loop
pop
out
nop
cltd
pop
mov
pop
lret
inc
andb
xor
out
xchg
cmp
jae
outsb
jne
adc
jo
xor
jle
hlt
loopne
xchg
daa
xchg
repnz
mov
cmp
and
dec
sub
aam
or
inc
jns
xchg
es
repnz
int
xchg
daa
jno
jmp
lea
xchg
sbbl
movb
cmp
xchg
xor
mov
jp
pop
pusha
fisubrs
lods
add
inc
das
pop
xorb
push
je
inc
dec
enter
push
stos
dec
mov
push
jne
jnp
mov
cmp
push
rcl
adc
pusha
sbb
mov
pop
xchg
add
mov
and
loope
xor
jnp
add
push
pop
imull
and
inc
flds
add
mov
out
out
out
into
gs
cld
test
add
add
pop
das
add
push
dec
testl
fdivr
ja
daa
xchg
rcrb
iret
cmp
sbb
and
sbbb
movsb
jbe
call
xor
fcomip
sub
xchg
stos
mov
les
lret
or
pop
xor
push
push
cmpsl
loop
adc
sbbl
icebp
es
push
and
lret
popa
outsb
dec
nop
fcomi
cmpsl
imull
in
test
adc
stc
ret
mov
dec
cmp
pop
cmc
add
popf
mov
xor
mov
inc
andl
mov
je
imul
movsb
jo
out
pusha
add
or
mov
mov
jecxz
outsb
or
in
pinsrw
inc
cltd
push
push
jmp
jecxz
push
cmpsb
shrb
mov
enter
adc
bswap
bound
cmp
test
adc
xor
insl
cmpsl
lcall
inc
mov
cs
and
add
loopne
and
je
out
mov
pop
cltd
shr
mov
add
add
fiadds
int
movl
cwtl
lock
jb
jbe
das
xchg
inc
clc
cs
mov
xlat
dec
xor
push
push
sub
dec
mov
mov
push
or
mov
jmp
icebp
clc
inc
dec
adc
xor
or
mov
in
iret
mov
loopne
ffree
adcl
or
pusha
outsb
add
or
rcll
in
pushf
inc
arpl
mov
nop
inc
sar
insb
push
pushf
rclb
jbe
lret
pop
jecxz
enter
xor
add
cld
cmovbe
or
xchg
pop
repz
push
addr16
fisubrl
leave
lcall
imul
bound
repnz
adc
cmp
add
enter
xchg
cmp
adc
xor
mov
cmp
mov
sahf
and
add
dec
daa
dec
das
outsb
imul
push
xchg
scas
clc
outsb
jnp
roll
add
mov
push
cmpb
repz
jbe
mov
in
test
xchg
or
inc
add
xchg
add
pop
fildl
xor
out
push
push
in
sarl
cmp
ds
fcomip
filds
outsb
lret
cmp
mov
xchg
adc
jb
out
and
mov
loope
cmp
push
xlat
imul
pop
jae
fists
insb
repz
push
pusha
std
dec
mov
loopne
push
adc
lahf
sbb
popf
inc
sbb
dec
jo
jmp
scas
aad
xchg
lock
push
cwtl
inc
mov
dec
xor
out
mov
xchg
adc
mov
push
data16
and
mov
push
xchg
mov
xchg
test
or
repnz
lahf
lret
lret
mov
mov
jne
jno
adc
cli
push
nop
mov
jno
add
call
out
lahf
ret
or
inc
cmp
rolb
add
and
jns
rolb
cmp
ret
sbb
das
pop
jo
or
push
cmp
xchg
cmp
int
xchg
adcl
fucomp
push
js
mov
mov
mov
cmpsl
inc
repz
cs
mov
mov
jl
mov
mov
in
dec
fsubrp
sbb
push
mov
sbb
int
mov
rorb
insl
cmpl
push
push
scas
mov
fs
push
xchg
mov
ljmp
sbb
sbb
loop
pushf
inc
inc
out
test
cmpsl
mov
cld
push
lcall
fcompl
into
cs
and
ja
sbb
jecxz
in
mov
mov
movsl
movsl
fcmovne
sbb
hlt
and
loope
insb
mov
push
lock
test
pop
xchg
js
mov
jg
lret
stos
mov
add
add
neg
outsl
push
xchg
or
push
daa
int
add
add
adc
mov
clc
insb
ds
aad
push
add
pop
loop
push
or
ret
jb
das
in
test
lea
das
dec
pop
loop
add
outsb
xchg
ret
call
push
int
push
je
lcall
dec
pop
outsl
imul
pop
decl
sahf
test
jle
movsb
pop
jecxz
lock
sub
outsb
push
jg
fwait
aaa
mov
add
mov
and
aam
mov
xchg
out
ds
jge
push
mov
insb
daa
pusha
xchg
test
lock
adc
or
xchg
jnp
jecxz
push
fwait
jl
outsb
ret
subb
movsl
aam
lods
inc
fimuls
inc
jp
push
xchg
adc
fs
loop
dec
jecxz
jnp
ja
adc
test
aad
adc
sbb
add
fdivr
call
leave
dec
shll
in
insl
add
add
add
sbb
sub
dec
test
mov
aam
add
cs
arpl
enter
in
and
loop
mov
mov
paddd
pop
mov
or
bound
stos
imul
mov
push
xchg
neg
sbb
and
mov
repnz
test
cli
aaa
loope
mov
repnz
mov
dec
mov
and
lock
gs
cli
lret
jno
dec
inc
mov
es
cmp
pop
imul
mov
or
and
mov
pop
fnstenv
shrl
jne
add
das
stos
int
and
sub
xor
sbb
scas
insb
inc
cmp
pop
cmp
mov
pop
mov
fcomp
mov
stos
sbb
das
repz
shrb
sbb
jg
int
or
mov
jge
jle
pop
mov
add
daa
mov
sbb
jp
pop
data16
nop
dec
adc
js
xor
mov
pushf
adc
ds
jae
cmp
add
push
mov
pop
jo
pop
mov
fbld
aad
add
sub
jb
add
mov
mov
loope
xchg
mov
jbe
nop
mov
nop
roll
xorl
push
push
cmp
or
pop
adc
mov
mov
aaa
in
dec
sub
sbb
mov
sub
test
fwait
insb
or
dec
lods
xorb
push
pop
mov
mov
pop
cmpsl
jno
xor
adc
lods
outsb
stos
das
mov
insl
dec
xlat
test
pop
cmc
mov
xor
cltd
imul
jmp
lret
and
movsl
lcall
jp
pop
or
push
mov
je
or
rcrb
cld
jno
sbb
leave
adc
sbb
insl
and
push
lds
cld
ret
in
push
lock
jb
jge,pt
jno
and
adc
jp
inc
into
and
stos
dec
add
add
lcall
jnp
push
popa
mov
add
add
xor
sbb
mov
lock
inc
rorb
push
jns
add
mov
dec
addr16
daa
test
sbb
or
cmp
push
mov
in
xchg
sub
mov
test
ret
lods
and
daa
and
es
xor
xchg
cmpsb
shll
push
ljmp
jp
sbb
mov
push
leave
dec
dec
out
add
repz
arpl
jle
jo
ret
call
sub
xor
and
jne
jp
mov
arpl
push
mov
mov
mov
push
push
sub
jae
out
cmc
test
dec
stc
adc
sub
iret
out
repz
out
aam
shrb
or
lret
int3
jle
pop
test
add
add
xchg
ja
push
jg
leave
or
add
add
add
sbb
into
jnp
mov
dec
push
push
sti
ret
push
push
xchg
and
aam
adc
push
and
ret
mov
mov
stc
xor
lea
in
sub
push
or
and
rcrl
fdivrl
push
and
jge
mov
push
and
fistpl
add
es
mov
xor
mov
inc
lods
cwtl
js
ljmp
pop
xchg
push
jo
or
insb
dec
cmp
cwtl
shlb
js
add
inc
addr16
pop
adc
pop
lods
or
add
jmp
mov
out
hlt
inc
aaa
and
sub
push
out
jge
sahf
frstor
pop
xor
xlat
cwtl
sar
jb
into
push
jge
mov
push
lret
aam
sub
jnp
cli
mov
mov
stos
adc
mov
ds
add
add
imul
xchg
movsb
pop
iret
xchg
push
add
dec
outsl
jmp
arpl
sbb
mov
in
icebp
xor
mov
mov
mov
adc
pop
pop
xor
xchg
mov
nop
xor
lock
int
and
mov
fcoml
daa
mov
fbstp
shll
cmp
movsl
iret
hlt
test
mov
xor
mov
and
outsl
jg
imul
jl
xor
fisttpll
fwait
push
adc
je
push
sbb
ficompl
iret
mov
in
mov
ljmp
mov
aas
mov
or
outsb
ljmp
repz
cmp
xchg
shl
inc
xchg
lock
adcb
nop
xor
or
mov
jb
gs
xchg
movsb
push
add
dec
vhsubpd
out
out
in
mov
dec
cwtl
fwait
in
add
sub
and
jmp
pop
jo
adc
ffreep
imul
add
psubusw
push
in
sub
xor
add
and
movsb
pop
xchg
pop
cmpsb
xchg
push
jmp
fstl
cli
fsubrs
pop
and
aad
mov
mov
les
xor
mov
jae
or
inc
inc
pop
fsubp
hlt
xor
push
aam
shlb
xchg
sub
push
xchg
shll
in
xchg
mov
cmp
inc
mov
cmp
xor
in
cmpsb
mov
jg
pop
xor
pop
dec
mov
push
adc
sbb
xchg
cwtl
bound
imul
aad
out
adc
mov
das
pop
ror
or
jle
lods
aaa
mov
ror
sar
sti
aas
cmp
call
pop
test
mov
mov
movsl
into
cli
cmp
in
pop
sbb
adc
fistpl
sub
push
push
sub
push
mov
dec
pop
test
sarb
les
fiaddl
add
in
sbb
sahf
cmc
fsubrp
jnp
sti
enter
mov
fiaddl
add
push
and
fdivrs
pop
imul
in
xor
pusha
insl
jne
call
stos
orb
xor
clc
push
add
cltd
fwait
cmp
add
sub
sub
mov
arpl
dec
add
or
sahf
jb
rclb
mov
cltd
cmp
sub
cmp
aam
les
xchg
xor
insb
mov
push
rorb
dec
pop
lret
je
sti
sbb
imul
cmp
test
cmp
jns
sub
cmp
ds
or
cmc
add
pop
dec
stc
mov
mov
or
sub
mov
fdivrl
jge
mov
call
scas
xor
cmp
insl
pop
enter
orb
shl
int3
mov
out
cmp
inc
imul
jb
xlat
inc
sub
dec
cmp
mov
test
pop
ljmp
add
add
jle
jg
std
fstpt
jb
aas
cmc
fildl
add
push
xchg
push
out
mov
push
adc
push
subb
xchg
aam
in
dec
mov
add
xor
into
xchg
pop
and
imul
bnd
mov
shrl
cwtl
cmp
out
icebp
out
pop
sti
movsw
pop
pop
xlat
jae
outsl
inc
and
xor
inc
dec
fsubs
push
jp
call
and
mov
inc
pop
cmp
sar
push
cwtl
icebp
out
rclb
mov
dec
sbb
xor
mov
xor
mov
cmc
mov
xchg
cmpsl
xor
sub
mov
xchg
sub
sub
cmp
push
add
and
mov
movl
shll
lods
enter
jnp
and
scas
nopl
into
sub
lea
xchg
mov
jae
lods
cs
xor
int
sbb
xor
andl
add
add
mov
sti
idiv
lods
pop
sbb
das
in
faddl
add
cli
inc
sbb
cmp
add
sti
sbbl
pop
js
xchg
push
notb
fwait
js
jo
sub
dec
data16
or
mov
push
aad
inc
pop
sub
hlt
cmp
leave
mov
int3
sti
mov
in
jo
mov
pop
test
inc
xor
es
out
test
mov
jbe
mov
jg
mov
jae
es
repnz
bound
mov
jae
dec
and
jle
push
int3
xchg
xchg
out
js
push
xor
sbb
in
hlt
xchg
sbb
push
inc
and
cmp
aaa
push
cmp
test
fadds
clc
popl
fstl
imul
jge
aad
add
pop
jnp
aaa
arpl
arpl
mov
out
jg
or
cli
add
imul
cwtl
pop
and
lret
add
add
sbb
jmp
scas
inc
call
fldl
add
and
loopne
inc
fiadds
in
push
mov
jge
sbb
and
cmp
jmp
cli
mov
dec
out
pusha
mov
or
dec
jnp
subb
xor
in
xlat
pusha
or
inc
ja
or
mov
sub
hlt
out
mov
push
jp
pushf
push
mov
sbb
pop
out
cmp
push
jbe
jne
fstps
addr16
into
add
movsb
mov
pop
inc
test
std
xor
pop
stos
mov
mov
push
idivb
std
jbe
sahf
mov
sbb
jmp
shlb
into
sbb
fcomp
sbb
aam
jb
movsl
jp
loop
setl
fs
xchg
aam
xor
int3
jge
mov
jg
sub
push
int
adc
fcomi
sarl
test
aad
notb
push
jns
es
adc
and
xor
cmpsl
fimull
faddl
repz
add
add
pop
or
mov
and
sbb
test
sti
std
mov
push
push
ds
les
xor
push
leave
push
xchg
jl
cmc
jb
cmp
test
cs
ja
inc
lock
sti
pop
clc
pop
lock
pusha
dec
inc
fucom
mov
gs
adc
inc
mov
orb
push
pop
jl
push
xchg
cld
xor
xchg
push
ds
jg
lea
push
cmp
push
ret
and
pop
lds
dec
out
sti
jge
push
mov
push
jecxz
jmp
cmp
xchg
cmpl
enter
mov
test
add
mov
std
pusha
icebp
sub
popf
mov
xor
xchg
test
ljmp
enter
inc
mov
out
repz
or
mov
outsb
jb
std
mov
xor
or
cs
add
add
mov
lcall
fisttps
or
or
add
add
jo
xchg
aaa
in
hlt
cmp
lds
mov
sbb
call
lds
shlb
ret
shrb
aaa
dec
and
mov
or
or
adc
in
adcl
jno
mov
add
inc
lret
pop
imulb
add
aaa
mov
fldcw
push
lods
fdivrl
fsubr
jmp
mov
in
mov
mov
lds
mov
into
xchg
call
loope
pop
aas
sub
push
inc
call
mov
scas
xor
int3
popf
mov
cmc
dec
sbb
sbb
xlat
cs
sub
imul
ret
scas
sub
in
add
or
pop
xchg
and
sbb
mov
fiaddl
sarb
push
clc
imul
arpl
lds
test
jge
mov
pop
adc
rolb
add
mov
jns
xchg
xchg
mov
push
jbe
push
loope
add
sub
xor
dec
hlt
test
enter
jb
cld
js
sbb
fs
es
mov
mov
jge
add
divl
jmp
out
and
xor
dec
xchg
sub
arpl
xchg
in
jne
mov
push
xchg
js
lahf
xor
mov
ret
jecxz
mov
add
pop
imul
lret
and
mov
pop
sbb
or
xchg
mov
nop
das
or
leave
and
jl
fwait
cmp
or
daa
shl
inc
ja
jmp
ja
push
lret
pop
gs
fwait
dec
adc
sahf
ss
or
aas
insl
add
pushf
into
lcall
mov
ficoms
add
dec
jne
aad
in
test
jae
fadd
fsubp
jnp
or
cld
les
loop
add
in
loop
push
or
push
jecxz
sbb
sbb
mov
push
xor
test
decb
inc
xchg
push
pop
lock
aas
xor
push
ja
das
pop
sbb
and
pusha
pop
push
lods
sub
hlt
xor
xor
les
lret
lahf
mov
and
cmp
pusha
xchg
es
jnp
sub
mov
aam
xor
jmp
das
lds
dec
sbb
inc
out
adc
pusha
mov
mov
out
cmp
add
inc
mov
dec
add
inc
jne
add
inc
mov
adc
fdivrs
sbb
lock
dec
sbbl
dec
mov
xchg
pop
jne
dec
inc
jbe
sub
cmp
mov
das
pop
iret
add
imul
xor
ret
cltd
xor
loopne
enter
fstl
dec
imul
pop
pop
adc
or
sub
fcompl
subl
pop
add
add
sub
cld
cli
jle
dec
nop
xor
sub
jecxz
add
out
scas
scas
mov
scas
sub
mov
sti
mov
dec
in
dec
int3
sbb
dec
jnp
dec
cmp
xchg
aam
mov
jl
mov
stos
jae
je
mov
repnz
aam
fcom
repnz
iret
add
outsl
mov
dec
pop
lcall
pop
and
fwait
js
aas
sbb
pop
cmp
inc
out
fsubrp
int3
pop
outsl
add
arpl
xchg
cmp
in
je
xor
and
dec
lret
out
or
in
or
cld
mov
dec
pop
push
sub
jo
jecxz
out
cld
in
jno
inc
test
cwtl
mov
or
sbb
ret
ds
jp
pushf
insb
push
in
adc
xor
sarl
push
xchg
xchg
lods
xor
aam
push
cmc
movsl
jp
insl
inc
loop
mov
out
int
push
ja
xchg
leave
mov
or
push
addb
ja
mov
inc
pop
and
mov
add
lea
pop
jbe
ja
sti
aaa
out
ja
cmc
int3
jo
in
add
lea
test
ds
inc
mov
mov
inc
xchg
ds
fidivrl
xchg
push
push
dec
sub
in
pop
mov
test
dec
fs
cmpsb
cmp
pop
aaa
xor
lret
repnz
mov
mov
pop
out
in
push
loopne
xchg
push
sbb
pop
jb
cmp
popa
popfw
jg
ds
jb
mov
out
add
outsl
lea
xor
cld
std
xor
or
gs
mov
jae
pop
xor
jb
cmpsb
pushf
xlat
orl
mov
add
dec
mov
add
mov
in
cmp
outsb
in
shrl
and
xchg
xor
mov
adc
jl
mov
es
xor
jno
sahf
fwait
xor
xchg
repz
scas
test
icebp
xor
jg
out
nop
cmc
lret
jnp
cmp
mov
adc
jp
pop
dec
nop
add
add
into
arpl
pop
xchg
aaa
pushf
icebp
shll
in
add
repz
mov
lds
jmp
bound
jo
negl
xchg
jecxz
sbb
test
pop
push
push
and
push
sub
clc
jae
test
cwtl
jns
inc
lea
inc
gs
ret
rcrl
mov
out
aas
adc
adc
stc
mov
cmp
mov
inc
ss
fisubl
sub
dec
xlat
jne
adc
lahf
xchg
ja
and
rorl
stos
in
cmpsl
in
cs
andb
push
rcrb
add
mov
push
aaa
cmpsl
lock
aad
add
adc
pop
dec
dec
in
lcall
pop
dec
repz
sub
xorb
xor
jns
fsubl
imull
int
imul
cmp
nop
or
dec
sbb
fidivs
outsl
popa
cmp
push
pushl
add
cltd
cmc
adcb
fcos
pop
mov
inc
daa
out
add
sub
cwtl
repz
out
cmp
cld
aad
push
out
int3
jno
mov
cld
xchg
add
push
cmp
jg
jnp
out
push
jno
mov
mov
push
clc
clc
and
inc
add
insb
arpl
xor
aad
out
pop
mov
pop
xor
pushf
push
gs
add
ljmp
addr16
or
mov
adc
dec
hlt
lcall
loopne
mov
lods
mov
mov
int3
subb
and
add
dec
ret
sub
xor
xor
or
lret
dec
stc
jmp
in
sub
pop
outsl
pop
ljmp
push
xchg
orb
ss
jg
js
cli
cmpb
pusha
jo
jg
pop
inc
dec
pushf
ret
lcall
testb
aad
adc
in
add
fmuls
cmp
xchg
and
jg
add
repz
lock
jg
in
and
lock
xor
add
add
add
lods
outsl
stos
fildl
bound
and
lret
sti
adc
stos
aas
fsubrs
sbb
sbb
orb
adc
in
push
inc
xor
sub
push
mov
out
mov
mov
shll
clc
scas
mov
mov
or
push
inc
jne
inc
push
xchg
and
sub
sbb
add
sub
aad
andl
add
cltd
jge
xchg
add
mov
je
inc
mov
iret
xchg
xchg
jle
add
inc
or
call
or
fisubrs
push
clc
cltd
and
nop
lea
xlat
or
xchg
std
popa
fimuls
dec
sub
int3
and
shll
aas
pop
lock
std
mov
dec
mov
cs
jne
fisubs
dec
inc
mov
mov
sahf
stos
jecxz
jle
mov
add
pop
xlat
fistpl
push
inc
sahf
xor
add
add
rorb
lret
jle
push
daa
je
inc
and
lret
sbb
test
cld
pushf
jb
cmp
adc
jle
cmpsl
push
xchg
mov
nop
test
stos
sti
stos
lods
shrl
adc
and
pop
adc
mov
adc
in
or
mov
fisubl
je
push
pop
into
adc
stos
sbb
scas
push
popa
mov
mov
push
stos
loop
push
aaa
mov
add
adc
pop
repz
mov
fistps
pop
xchg
sbb
das
sbb
push
cmp
int3
push
aam
fisubs
jp
sbb
push
shll
imul
add
sbb
iret
and
popf
inc
test
cmp
inc
xchg
mov
xor
add
mov
stos
mov
sbb
outsb
movsb
fwait
inc
dec
mov
cmc
imul
add
add
mov
dec
js
stc
mov
dec
int
test
sbb
jmp
add
cmp
pop
adc
cmp
xchg
add
lods
jno
imul
jmp
addr16
xchg
leave
jp
sbb
push
dec
xor
ret
notl
rcll
cmp
imul
jmp
mov
adc
cmpsb
cli
mov
inc
nopl
sbb
jnp
fpatan
jns
mov
mov
xchg
scas
out
fs
and
add
repz
das
push
push
les
jl
mov
cld
pop
xor
gs
cmp
sarl
mov
dec
mul
ret
xchg
push
fcmovu
cltd
rorl
arpl
jecxz
xor
mov
dec
imul
jo
inc
push
out
arpl
inc
jo
sub
ljmp
jne
imul
loop
cmpsl
imul
inc
mov
mov
add
lods
and
xor
jle
cltd
nop
push
ljmp
add
add
insl
repz
fwait
jns
jns
fs
pop
cmp
add
add
sbb
sub
icebp
cltd
add
shl
fsts
jl
in
shrb
adc
jp
lahf
or
je
adc
jae
mov
adc
mov
sahf
adc
jge
xchg
out
sbb
out
inc
nop
jae
cmp
xor
mov
pop
arpl
aas
iret
xchg
daa
out
cltd
lea
cmp
mov
imul
pusha
push
mov
arpl
push
inc
in
ss
sub
mov
ret
pusha
clc
jp
adc
loope
xchg
je
pusha
mov
sub
scas
test
dec
ss
dec
stos
mov
fdivl
rorb
test
stos
arpl
or
sbbb
add
jbe
out
or
or
fisttps
dec
mov
je
and
cltd
push
sti
mov
inc
idiv
inc
jae
dec
mov
jb
rcl
call
or
xor
pop
fstl
mov
add
add
mov
pxor
jnp
adc
jne
rcrb
add
pop
mov
hlt
popf
cmpsb
push
lcall
sub
dec
lds
xchg
xor
xor
lret
cld
jb
ss
fsts
add
xchg
jnp
out
cmp
in
ljmp
movsl
movsb
es
push
pop
mov
mov
push
push
cld
add
test
push
ffreep
lret
xchg
imul
sub
ss
mov
ja
push
xor
push
and
and
mov
cld
lret
add
mov
push
lcall
xor
movsb
enter
gs
and
jo
push
gs
je
es
pop
sbbb
xor
jne
gs
adc
insb
jg
call
imul
pop
repz
sbb
ljmp
lods
leave
push
invd
fiaddl
sbb
jne
xor
ja
add
or
fdivp
add
add
subb
fistl
das
push
add
xchg
inc
in
add
add
pop
jb
shl
dec
scas
fistpll
stc
das
mov
sahf
in
jg
push
pop
add
fsubp
xchg
xchg
test
xchg
xlat
mov
jp
jb
cmp
gs
dec
xchg
or
rcrb
xchg
push
jecxz
xchg
fimuls
lods
lret
jbe
pop
stos
push
sbbl
xor
call
in
sub
ljmp
call
outsl
bound
lret
lea
pop
sbb
pop
pop
pop
test
xchg
adc
sti
fcmovnb
cld
cmp
push
push
pop
sub
jl
push
stos
mov
pop
inc
mov
and
fisubs
jl
out
pop
and
push
adc
pop
add
push
inc
inc
mov
or
rorl
je
hlt
sub
adc
clc
pop
or
jmp
dec
mov
xor
xchg
ljmp
sub
js
int
mov
mov
mov
add
jb
scas
decb
fisttps
dec
adc
dec
in
add
add
pusha
pop
jb
test
or
std
add
inc
ficompl
imul
pop
push
out
stos
inc
in
rcr
addl
jnp
sub
mov
out
cmpsb
xor
mov
jb
jle
jne
loop
clc
lcall
pop
xchg
mov
stos
in
push
mov
ja
jle
or
xchg
dec
lret
inc
push
mov
add
lds
mov
lret
xor
or
cmc
adc
outsl
and
lods
loope
cmp
jo
aas
mov
cmp
add
cmpl
jl
mov
add
xchg
sti
mov
out
fdivrs
fnstsw
dec
mov
sti
cmp
lcall
orl
hlt
hlt
test
bound
push
and
jno
sub
ret
fidivrl
clc
pop
sub
lcall
dec
inc
cmpsl
mov
addb
add
mov
xlat
mov
xchg
xor
ds
out
add
add
jb
or
popa
outsl
jno
jecxz
cmc
inc
std
aaa
out
imul
dec
dec
in
pop
dec
or
jnp
aad
inc
add
orb
dec
pop
or
js
xchg
fcoml
lods
jnp
lock
push
dec
pmaxub
scas
mov
inc
sub
pop
pop
cmp
dec
jl
mov
mov
or
push
nop
icebp
je
xor
je
test
repz
sub
mov
push
pop
xchg
popa
in
bound
das
call
inc
jno
add
jle
xchg
inc
sub
push
mov
add
push
xchg
mov
fistps
add
jl
jns
or
shrb
mov
mov
ficoml
out
push
fldcw
test
or
inc
sub
fidivrs
jo
adc
and
out
pop
add
dec
xchg
push
out
cs
pop
xchg
mov
in
lret
dec
cltd
in
sub
lods
cmp
lods
aas
mov
push
push
out
add
add
lret
pop
dec
dec
repz
into
aas
xchg
lret
push
mov
std
xchg
or
fwait
inc
ret
mov
push
push
jecxz
ljmp
lods
adc
add
and
push
jno
or
xchg
push
pop
sbb
and
cmc
mov
test
daa
cwtl
clc
sub
test
cmpsb
push
cmp
mov
sahf
dec
sahf
neg
sahf
stos
out
cmpsl
and
jns
repnz
inc
jno
jae
jbe
mov
cmp
sub
sbb
arpl
ljmp
add
repnz
cltd
xchg
push
or
push
mov
dec
mov
mov
sarl
xchg
iret
hlt
xor
xor
out
xor
bound
adc
sbb
fsubs
sbb
xor
popl
push
xchg
pop
icebp
inc
ret
dec
sub
mov
loope
xchg
dec
sub
mov
cmp
push
push
and
add
mov
sti
mov
mov
lock
add
call
jecxz
xchg
test
enter
xchg
add
mov
mov
inc
es
push
inc
jmp
adc
andl
fiaddl
mov
cmpsb
or
cmp
sbbb
adc
jmp
insb
mov
sbb
sbb
jnp
mov
movsl
sub
int
pop
lcall
out
outsl
mov
push
ficoms
add
sarb
mov
ret
arpl
les
pop
pop
enter
sbb
sbb
arpl
jb
outsl
and
xchg
sbbb
sbb
push
mov
arpl
fwait
mov
pusha
and
test
mov
mov
sbb
imul
push
pop
push
sbb
in
mov
neg
jmp
fcoms
mov
push
pusha
sar
add
push
lcall
lret
xchg
sbb
cmp
in
add
add
into
adc
neg
jge
xchg
jns
jbe
fstps
add
outsb
fbstp
mov
addr16
stos
pop
fstl
push
dec
mov
cs
pop
sub
sub
bound
in
in
int
add
stos
outsl
into
jnp
gs
xor
ficompl
push
or
bound
je
xchg
movsl
aas
dec
ret
and
ss
mov
inc
or
test
jbe
mov
lods
cmp
cmp
sahf
push
fdivl
daa
jg
icebp
mov
scas
loop
sti
push
push
add
fcmovnu
xlat
xchg
inc
insl
stos
insl
adc
jg
sbb
push
mov
icebp
pop
sahf
push
out
lods
popa
sbb
pop
or
pop
dec
xchg
jbe
push
pop
mov
js
sub
sub
popf
or
sub
nop
pop
pop
ficoml
push
call
jp
std
mov
sub
xchg
add
test
scas
imulb
jmp
pop
lds
add
pop
cmp
outsl
jg
jg
sub
stc
and
arpl
add
add
rclb
push
ljmp
imul
aas
sbb
insl
sbb
jne
mov
arpl
and
fwait
sti
push
leave
ret
fwait
pop
cltd
or
sub
movsb
testl
das
int3
jne
enter
jg
insl
mov
sub
pushf
iret
cmp
dec
jno
jp
in
shlb
mov
into
shrl
shll
add
mov
call
pop
sbb
mov
pop
in
jns
outsl
mov
or
rorb
out
xlat
je
inc
rcrl
subl
stos
sti
push
and
lods
popf
sarb
cli
int
jne
add
mov
sub
cmpsb
aaa
in
sbb
cs
xor
adc
adcl
mov
sarl
stc
lea
lahf
out
jb
icebp
and
push
clc
fcomps
pop
pop
push
fwait
jecxz
and
add
ret
ja
and
aaa
divl
or
add
xlat
cli
dec
pop
xchg
cltd
dec
lea
subb
test
cmp
add
stos
or
imul
push
lea
lock
mov
cs
inc
xorb
jl
mov
mov
movsl
and
fucomi
es
push
pop
arpl
ja
jmp
push
fs
lea
pop
xor
and
pushf
pop
dec
outsb
lcall
movsb
jecxz
fstpl
xchg
out
mov
inc
out
leave
cli
jb
int
push
test
movsl
scas
lret
repnz
call
adc
out
inc
test
adc
push
ja
mov
pop
aaa
cmp
lods
cmp
sbb
repz
ds
dec
lcall
repz
mov
add
dec
movsb
mov
mov
sbb
pop
scas
repnz
in
cmp
cmp
sub
sub
pop
push
or
inc
into
mov
in
xchg
jecxz
jmp
mov
sbb
cmc
inc
insl
hlt
add
add
pusha
sub
dec
push
addb
js
jno
cmpb
dec
repnz
xlat
sti
mov
jb
pop
insl
xlat
push
repz
xchg
cltd
cmc
call
and
sarb
mov
scas
out
popf
hlt
sti
test
xchg
xchg
mov
not
cmpb
push
add
sbb
cmc
sbb
stc
pop
xor
scas
fisubrl
jae
out
mov
jle
ficompl
cmp
int
clc
adc
sub
rep
lahf
stc
repnz
jno
jge
in
imul
xchg
xchg
jle
out
dec
cmp
sbb
loope
sbb
pop
test
mov
cmp
xor
imul
pop
test
fistps
and
mov
jge
sbb
cmp
xchg
test
xchg
mov
adc
loop
scas
bound
mov
inc
adc
add
jle
jne
pusha
popf
pop
add
cmc
add
add
ret
pop
dec
mov
cmp
stc
jne
inc
rcll
ja
lods
add
movl
mov
shll
arpl
mov
jl
stos
xchg
sbb
cld
divb
loop
inc
dec
repz
dec
iret
sub
add
cmpsl
pop
cmp
repnz
les
mov
sbb
push
mov
es
lret
jp
stos
xor
push
xchg
pop
xchg
addr16
ret
dec
xchg
inc
incl
cmp
nop
xor
sarl
test
aaa
lret
les
adc
jno
add
cmp
lods
fisttps
popf
in
pop
dec
cmp
xor
dec
add
aad
push
xlat
pop
lcall
adc
aaa
pop
jnp
cmp
ret
inc
mov
imul
sub
outsb
fidivs
jp
push
dec
imul
add
sub
scas
fdivr
fnstcw
jecxz
test
ja
add
add
jmp
add
sbb
arpl
sub
jno
test
aam
loopne
jmp
xchg
mov
test
mov
fldenv
add
pop
mov
or
jae
dec
adc
pop
insb
pop
lcall
out
adc
out
mov
decb
fildl
sbb
push
test
add
cmp
xor
clc
sub
adc
sti
mov
inc
inc
fiaddl
mov
mov
cmpb
and
repz
loopne
mov
jecxz
out
rolb
popa
fcoms
test
pop
movsl
pop
push
fsubrl
mov
mov
jne
pop
or
push
xlat
xchg
adc
in
sub
ja
xchg
enter
in
mov
repz
in
movsb
in
ret
mov
jmp
pushf
jle
aas
ret
lods
sahf
adc
jle
movsl
cmp
inc
mov
mov
add
ret
add
xor
jb
jae
into
add
add
mov
mov
pop
or
lcall
cmovg
xchg
dec
or
mov
dec
sbb
pop
push
inc
shr
inc
dec
inc
mov
or
xchg
and
cmp
jmp
int
push
adc
ror
jb
ds
daa
pop
inc
mov
adc
ret
jl
fwait
lock
es
sbb
xor
jecxz
cmpsl
iret
mov
fwait
xchg
int3
add
xchg
jge
in
mov
hlt
push
das
data16
fistpll
add
cmpsb
sbb
das
jle
push
push
lahf
notl
mov
add
pop
and
jnp
adc
push
shl
xchg
add
fdiv
mov
adc
cmp
in
ret
jne
jp
decl
xchg
adc
cmp
and
rcll
or
scas
sbb
repnz
sbb
cmp
add
adc
int
in
idivl
js
mov
or
jbe
cmp
add
pushf
stos
ss
fsubl
jge
insl
iret
in
pop
int3
sbb
xor
inc
ret
cwtl
lcall
subl
cmp
dec
xchg
xchg
mov
push
mov
xchg
dec
or
lods
and
arpl
cmpsb
pop
pop
notb
fisubrs
cmp
jns
push
cmp
inc
test
jp
jmp
or
pop
lret
in
cmp
gs
out
add
dec
mov
std
push
cmp
xlat
popa
loop
pop
push
stos
jmp
subl
xor
mov
outsb
test
mov
mov
or
mov
das
mov
ud0
pop
imul
jp
fisttpll
adcw
push
sti
arpl
inc
mov
mov
xor
dec
fdivl
sbb
dec
push
jecxz
or
fcom
mov
dec
fsubrl
xor
movsb
lcall
es
add
add
add
jecxz
inc
cli
aas
into
lret
pop
push
add
add
rorb
mov
mov
xor
sbb
pop
mov
lret
and
pop
scas
lock
aaa
mov
xchg
lds
addr16
and
cmp
pushw
mov
mov
ja
fs
cmp
mov
lcall
jne
into
adc
iret
push
popaw
push
test
sbb
testl
mov
push
pinsrw
push
lret
fwait
bound
mov
sahf
mov
pusha
iret
xchg
fucom
and
pop
les
fucomi
je
scas
stos
jo
and
inc
cmp
icebp
cmp
adcb
mov
loopne
cmp
addr16
adc
outsb
in
test
or
mov
arpl
dec
adc
dec
scas
stc
rorb
lock
inc
sub
mov
adc
mov
aas
mov
call
push
jb
inc
push
add
add
lcall
sub
inc
movsb
mov
add
add
in
mov
addr16
and
cmp
addr16
in
cmp
popaw
pop
loope,pn
mov
mov
scas
xchg
fcoml
and
lods
or
lret
ret
stc
push
inc
gs
lret
mov
test
in
xchg
loopne
cmp
stos
sbb
inc
test
imul
inc
cwtl
pop
cs
xor
dec
stc
push
fldt
out
xor
xchg
jbe
aaa
popa
aad
outsb
shr
inc
stos
ljmp
dec
pop
mov
ret
lods
les
outsb
add
or
and
pop
sub
arpl
iret
cmp
xchg
pop
fldenv
popa
or
lahf
pop
dec
mov
add
or
inc
jne
out
lea
out
popa
dec
popa
test
push
in
pop
das
inc
xchg
jo
call
mov
movsl
cwtl
mov
push
inc
mov
leave
mov
pop
xor
addr16
pop
adc
add
add
jae
cltd
dec
mov
jno
fptan
sbb
nop
sti
add
add
jno
andl
subb
or
mov
ror
stos
mov
fstps
jmp
sbb
mov
adc
jbe
mov
dec
incl
ljmp
jne
pop
jecxz
sbb
stos
jle
push
mov
outsb
out
cmc
mov
add
pop
ja
repz
repz
stos
mov
and
inc
mov
jbe
outsb
or
cmc
push
sbb
inc
scas
sbb
pop
gs
stos
out
lock
inc
jb
ret
add
xchg
cwtl
xchg
out
stc
dec
xchg
push
out
hlt
and
js
imul
jb
flds
vsubsd
jmp
mov
jle
cltd
xchg
adc
adc
lret
outsl
push
arpl
out
shl
inc
rclb
pop
inc
jmp
pop
cmp
mov
add
add
push
into
nop
out
cwtl
jle
push
sub
dec
out
ss
xchg
cld
add
add
ja
lahf
cmp
mov
inc
mov
cmp
sbb
xchg
mov
sub
jge
insl
mov
cmc
sub
pop
pop
pop
xor
stc
lds
ficompl
call
stc
mov
ja
cmp
mov
leave
mov
dec
mov
cld
add
jb
mov
out
loope
jae
into
xchg
cmp
repz
arpl
scas
sarl
into
icebp
push
jecxz
mov
mov
push
cmp
out
and
popa
cmp
insb
add
fs
shrb
pop
or
into
or
jmp
icebp
aad
add
dec
mov
cmp
rcll
clc
hlt
push
je
clc
in
ffreep
in
ss
mov
in
mov
test
push
mov
xchg
mov
ljmp
sub
ja
jbe
fs
xor
push
or
out
mov
ret
add
popf
mov
cmc
add
add
test
jg
push
pop
push
mov
lcall
add
pusha
stos
movsb
push
into
ds
push
lock
shl
in
insb
mov
test
mov
clc
arpl
enter
inc
cli
sub
dec
sbb
sub
fcmovbe
imul
xchg
sub
arpl
das
ss
inc
fildl
xchg
gs
push
test
mov
out
adc
jecxz
ja
jg
stos
lock
and
fstpt
adc
cld
fadd
and
bound
aad
xchg
sysret
jbe
dec
sub
loope
cwtl
stc
cmp
sti
jb
rcr
movsl
xor
sub
xor
fcomps
inc
fmul
ljmp
xor
push
das
sbb
dec
test
les
cltd
mov
pop
dec
lods
lods
xchg
sahf
test
test
push
cmp
jbe
dec
pop
xchg
xor
aam
mov
inc
test
and
cs
jb
pop
sub
mov
cwtl
push
add
add
movsb
push
in
cmc
jne
sbb
js
and
add
add
add
aam
mov
inc
sbb
idivl
or
fs
sti
xchg
aaa
sbb
cmp
mov
inc
mov
std
xchg
cmpsb
mov
cli
push
adc
lahf
mov
adc
out
adc
mov
fimull
dec
popa
xchg
and
or
out
add
loope
cld
jb
lds
lret
popf
movsl
sbb
decb
das
cld
dec
cmp
sbb
sub
cli
lock
loop
push
xchg
int
ret
idivl
int3
xchg
push
dec
lcall
mov
cmp
and
inc
xchg
dec
icebp
ss
cmp
inc
xchg
out
test
das
notl
test
dec
test
xchg
subb
sub
and
test
jmp
in
leave
ss
push
addr16
scas
repnz
aam
cmc
mov
outsl
lcall
lret
jmp
aaa
stos
add
add
out
shlb
aas
out
int3
mov
mov
incl
add
das
or
inc
test
data16
xor
pop
mov
mov
stos
cmp
xchg
in
adc
sahf
cmpsb
and
addr16
daa
dec
cmc
and
mov
dec
and
mulb
daa
loope
lcall
stc
push
inc
sub
jbe
incb
jb
dec
test
mov
aaa
sbb
jmp
push
cltd
sti
sahf
movsl
aam
or
imull
movsbl
aaa
dec
jge
inc
scas
js
sub
pop
in
mov
inc
jne
jae
pop
jbe
out
ja
orb
cmp
sub
push
mov
repz
mov
and
sbb
or
js
add
popa
nop
mov
jb
mov
sti
push
cld
out
lcall
inc
in
clc
in
sbb
ret
fstpt
jmp
mov
or
dec
cltd
sbb
ljmp
and
and
mov
add
add
mov
lcall
sub
add
clc
ret
and
cmp
scas
add
add
shlb
cmp
negb
push
rep
xor
adc
outsl
sbb
inc
xor
lcall
in
inc
mov
inc
xchg
pop
test
and
je
xor
sarb
les
imul
insb
insl
dec
mov
push
sub
addl
daa
repz
cmpsb
repnz
inc
mov
lcall
mov
jo
cs
jno
sahf
or
roll
sbb
mulb
out
into
mov
mov
add
xor
add
inc
pop
and
mov
hlt
pushf
cmpb
pop
repz
lods
rcrl
and
jge
mov
cmp
inc
pop
jg
sub
xor
ret
add
add
dec
rol
lret
clc
cmc
inc
stos
repz
add
add
mov
loop
push
xchg
in
lds
mov
mov
out
add
sub
test
ret
push
addr16
mov
outsb
dec
ja
mov
xchg
inc
stos
lea
inc
lea
mov
sub
lea
rorb
insl
je
stos
sub
adc
mov
subl
pushf
jbe
mov
bswap
mov
repz
mov
mov
out
pushf
mov
out
cmp
mov
in
rorl
aad
and
js
mov
testb
fnstcw
sbb
push
xchg
js
lock
mov
fsts
data16
outsb
in
or
push
push
lds
xchg
fs
dec
mov
jge
jge
lea
inc
dec
inc
xchg
test
sub
icebp
imul
xor
add
add
std
aaa
mov
shll
dec
mov
add
jl
add
mov
pop
xor
xchg
push
mov
pop
push
jg
adc
sub
fcmovnu
out
outsl
push
cltd
test
sahf
mov
pusha
es
push
mov
jae
pop
lahf
inc
and
mov
into
fbstp
ljmp
test
jmp
and
dec
mov
and
xor
inc
add
push
push
insb
cld
std
push
cmpsl
cmc
and
sub
testl
push
fwait
sar
jg
push
xlat
push
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
lret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
call
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
push
decl
mov
test
add
xor
add
mov
or
inc
mov
arpl
sub
incl
lea
or
incl
mov
cld
add
xchg
fdivr
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
adc
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
call
out
test
in
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
add
add
inc
inc
mov
decl
add
inc
fmull
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
fsub
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
jb
add
push
fildl
mov
inc
add
or
inc
call
jge
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
enter
mov
xor
add
xchg
call
mov
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
loopne
sub
int
sub
inc
push
cmp
movaps
cld
faddl
jne
push
loopne
inc
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
daa
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
int3
inc
inc
add
add
xor
pushf
lea
add
inc
mov
xor
add
mov
fmull
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
add
xor
cmovge
add
jmp
jb
add
xor
xor
add
clc
int3
add
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
enter
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
in
scas
inc
mov
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
in
jge
sub
mov
mov
mov
mov
in
ror
push
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoms
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
enter
mov
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
int3
pushf
add
add
add
clc
int3
inc
add
push
pushf
mov
enter
aas
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
enter
clc
incl
cmp
pushf
pop
lods
incl
mov
rcrb
test
sbb
add
push
loopne
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
loopne
test
xor
mov
rolb
inc
add
clc
inc
lret
mov
loopne
lret
into
into
scas
dec
mov
sub
cmp
mov
enter
add
xor
xor
lret
mov
inc
add
mov
xor
mov
in
add
bswap
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoml
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
jmp
ror
or
add
not
adc
inc
push
mov
push
mov
in
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
add
push
clc
xor
add
hlt
or
mov
hlt
dec
add
mov
add
leave
push
push
mov
fcoml
inc
xor
iret
cld
lret
loopne
mov
mov
mov
cld
jne
movb
add
test
inc
incl
mov
cld
add
leave
xor
in
mov
inc
add
int3
cld
jne
call
mov
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
and
call
in
jmp
je
call
and
call
and
push
or
pop
mov
and
mov
and
mov
jne
test
decl
sbb
jl
adc
dec
mov
mov
and
xor
or
add
clc
jmp
adc
inc
je
and
je
mov
decl
sbb
add
add
adc
mov
adc
add
add
adc
sub
add
imul
add
xor
inc
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
jo
add
pop
adc
push
adc
add
insb
adc
jb
adc
push
ss
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jge
add
or
add
sub
add
insb
adc
addr16
add
adc
lds
add
ss
add
ss
add
ss
add
ss
add
adc
clc
cmp
add
pop
adc
mov
adc
add
adc
cmp
shll
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
adc
fwait
pop
adc
jnp
adc
pop
adc
popf
jno
add
inc
adc
sbb
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
pop
inc
dec
xor
push
add
xor
pop
inc
push
pop
dec
xor
push
add
cmp
xor
xor
pop
inc
add
dec
cmp
xor
pop
pop
xor
inc
add
inc
pop
cmp
push
inc
xor
xor
inc
inc
inc
cmp
dec
inc
add
push
xor
push
aaa
dec
pop
xor
dec
add
inc
xor
push
pop
push
inc
add
xor
cmp
push
push
push
pop
inc
push
push
add
inc
pop
pop
push
inc
pop
inc
add
cmp
inc
xor
pop
pop
cmp
inc
xor
dec
add
pop
cmp
xor
cmp
dec
dec
cmp
pop
dec
xor
xor
pop
inc
push
inc
inc
add
cmp
push
inc
xor
pop
dec
dec
ss
pop
push
cmp
pop
push
dec
add
inc
cmp
dec
xor
inc
xor
xor
push
add
xor
push
cmp
ss
pop
push
inc
xor
dec
inc
xor
dec
pop
push
add
inc
add
pop
add
add
add
xor
add
add
push
add
xor
add
inc
add
xor
pop
add
add
xor
add
xor
add
push
add
dec
add
push
add
push
add
pop
add
dec
add
push
add
pop
add
add
dec
add
cmp
pop
add
add
add
add
add
push
add
cmp
add
add
push
add
add
add
inc
add
inc
add
push
add
dec
add
add
dec
add
inc
add
dec
add
add
add
push
add
add
push
add
add
pop
add
add
inc
add
add
push
add
add
push
add
dec
add
add
aaa
add
add
pop
add
inc
add
xor
push
add
push
add
add
push
add
add
add
inc
push
outsl
sbb
dec
mov
fnstcw
aaa
jp
sbb
add
push
cmp
addr16
bound
outsb
pop
je
ja
imul
js
jp
jns
jp
je
jp
jo,pn
bound
