push
mov
sub
push
add
push
adc
push
adc
xor
sbb
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
push
mov
pop
push
call
push
andl
push
push
push
push
xorl
push
sbbl
call
push
addl
push
push
push
sbbl
push
push
push
incl
call
addl
dec
movl
jne
push
sbbl
push
push
andl
call
test
je
mov
adc
imul
mov
mov
movl
mov
movl
cmp
jne
addl
movl
pushl
subl
pushl
andl
pushl
xorl
call
mov
mov
or
mov
xor
mov
mov
sub
movl
lea
xor
mov
lea
mov
addl
mov
mov
adc
mov
mov
add
mov
mov
xor
mov
xor
mov
adcl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
xor
add
mov
xor
mov
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
mov
or
mov
xor
add
or
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
or
adc
mov
xor
xor
mov
sbb
mov
xor
mov
mov
mov
sub
mov
orl
mov
movl
add
mov
xor
add
mov
add
mov
andl
mov
adcl
xor
xor
sbbl
add
movzbl
and
mov
xor
lea
cmp
ja
or
mov
mov
xor
mov
sbbl
xor
andl
lea
subl
push
sbb
mov
xorl
xor
lea
orl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
mov
andl
pushl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jb
xor
lea
mov
mov
decl
xor
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
movzbl
sub
mov
mov
xorl
xor
lea
mov
cmp
movl
jbe
add
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
mov
xor
mov
sub
andl
xor
mov
not
mov
movl
cmp
movl
jne
addl
lea
andl
mov
lea
addl
mov
mov
xorl
test
movl
je
adc
mov
mov
mov
sub
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
sub
cltd
mov
mov
mov
or
add
mov
adc
andl
subl
xor
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
mov
dec
mov
jmp
not
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
negl
add
mov
mov
movl
adcl
xor
addl
mov
mov
xor
movl
mov
cmp
movl
jne
mov
mov
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
negl
mov
movl
mov
andl
xor
add
movl
adc
andl
xor
addl
xor
movl
cmp
movl
jne
cmp
jne
mov
addl
mov
andl
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
addl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
xorl
add
movl
jmp
movl
mov
movl
cmp
je
mov
mov
orl
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
movl
mov
mov
mov
adcl
pushl
addl
mov
pushl
addl
add
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
mov
mov
orl
pushl
call
mov
mov
movl
mov
movl
jmp
adc
mov
sub
mov
andl
xor
subl
add
cmp
jne
add
mov
movzwl
sbb
mov
adcl
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
andl
push
xor
movl
add
xorl
push
xorl
push
andl
pushl
adcl
pushl
sbbl
call
add
mov
mov
sub
mov
or
mov
sub
mov
adc
mov
xor
mov
sub
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
incl
mov
mov
mov
mov
mov
mov
mov
sbb
movl
mov
xor
decl
add
mov
sbb
mov
mov
or
mov
mov
and
mov
mov
push
sbb
pop
orl
sub
add
xorl
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
mov
lea
lea
xor
cmp
jne
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
mov
movl
movl
movl
movl
mov
mov
mov
andl
mov
movl
mov
mov
xor
mov
orl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
xor
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
inc
ret
push
mov
push
movl
movl
mov
addl
mov
add
xor
cmp
movl
jne
add
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
xorl
push
adcl
push
addl
push
push
andl
lea
push
push
adcl
call
push
call
sub
movl
xorl
movl
mov
mov
xor
mov
xorl
add
mov
sbb
mov
test
je
mov
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
add
movzbl
and
xchg
sbb
mov
movl
sub
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
add
mov
sub
mov
sub
xor
add
mov
sub
mov
mov
xor
xor
add
add
mov
movzbl
sbb
mov
mov
adc
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
or
mov
orl
sub
addl
lea
xor
andl
xor
movl
cmp
movl
je
sub
mov
xorl
xor
adcl
add
cmp
jne
orl
pushl
call
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
inc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
add
cmp
movl
je
adcl
pushl
addl
pushl
negl
call
mov
xor
mov
add
mov
subl
xor
subl
add
cmp
je
or
mov
mov
adc
mov
mov
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
jmp
or
xchg
xchg
pushf
cmp
add
je
jl
jl
pop
jl
adc
and
imul
xor
fsubp
push
dec
imul
bound
iret
pop
dec
and
dec
jg
jb
jg
movsb
cmp
ljmp
cld
push
jg
in
cmp
mov
mov
mulps
fldl
lock
sub
dec
push
sub
mov
test
jmp
lret
sbb
jp
arpl
lcall
xor
cmpb
jae
fsubrl
push
jecxz
mov
mov
out
push
dec
push
and
cmp
lods
dec
int3
cmpsl
xor
push
pop
std
push
pop
movsl
stc
push
cli
inc
push
out
addr16
aaa
cmp
add
jmp
push
cs
dec
je
mov
add
mov
jno
jmp
loope
inc
and
das
fsubl
adc
jp
pusha
or
lds
jne
mov
add
call
xor
jno
mov
dec
mov
mov
repz
jmp
pop
enter
inc
lahf
and
pop
loope
add
jne
add
std
sar
fdivr
lds
mov
add
cmp
sbbl
aad
mov
add
push
shl
mov
outsl
mov
ret
pop
rcr
js
insl
xchg
pop
mov
lret
xchg
jne
into
push
shr
and
add
xor
in
jns
pop
clc
push
data16
ljmp
jae
jae
sbb
stc
cmp
add
add
lods
std
arpl
fsin
jno
shrb
add
das
push
sahf
xchg
inc
or
jo
leave
dec
push
dec
or
loop
data16
test
aad
fsubrl
pop
add
add
mov
mov
mov
sub
inc
rcrl
sarl
inc
mov
jno
lods
add
and
arpl
jecxz
ror
cmpsl
mov
mov
lcall
cmp
cmp
ret
inc
mov
mov
leave
inc
or
cltd
inc
jecxz
add
jo
inc
add
dec
scas
dec
fs
push
dec
lret
dec
adc
xor
fnstsw
mov
mov
flds
mov
jae
add
push
xchg
sub
or
inc
test
inc
push
adc
and
std
cmpl
cmp
jg
sbb
fwait
adc
mov
cmc
mov
pop
mov
inc
sub
cmc
sub
or
daa
mov
mov
pop
stos
popa
aas
popa
shrb
add
cmp
out
test
cmp
xor
mov
xchg
dec
shl
xlat
mov
xor
lds
and
jbe
outsb
lret
jl
sahf
dec
dec
and
xor
mov
add
stos
pop
leave
ja
jmp
mov
pop
sub
sub
das
leave
es
push
sub
data16
aaa
push
enter
add
lds
out
mov
sahf
cld
push
mov
int
arpl
mov
loopne
push
cmpsb
mov
jmp
adc
pop
fimuls
push
dec
inc
add
cli
dec
cmpsl
push
daa
test
ja
popf
or
adc
cmp
dec
lds
in
sub
out
pop
xor
sbb
and
mov
insl
push
frstor
data16
adc
outsl
xchg
mov
icebp
outsb
adc
adcb
popa
mov
inc
xchg
sbb
call
mov
mov
jecxz
xor
into
xchg
push
loopne
fadds
cmc
sub
js
mov
es
or
push
push
cmp
enter
pop
mov
xchg
push
imul
adc
xchg
push
mov
cwtl
push
xor
add
push
jns
movsl
dec
inc
pop
and
in
inc
push
movsl
inc
cmp
mov
ret
mov
sub
ret
push
fldcw
jmp
xchg
pushf
pop
jbe
insb
in
mov
pop
test
sub
jb
nop
nop
not
pushf
push
pop
pop
or
mov
les
push
pop
loopne
xchg
push
call
and
sti
or
stc
repz
sbbb
loop
jge
mov
sarl
mov
test
or
movsl
rorb
rol
and
push
add
xor
nop
pusha
fxch
sub
pop
cmpsl
insb
sub
leave
push
outsb
adc
inc
cmpsb
and
cli
andb
mov
or
fstp
sub
dec
je
pop
ljmp
out
nop
add
jo
in
loop
cmp
cld
scas
pop
inc
inc
cltd
dec
lahf
add
jne
ret
inc
cmpsl
cmp
das
in
movsl
je
pop
mov
sub
xor
aaa
cmp
xor
cmc
xor
test
xchg
xchg
jnp
inc
push
call
and
mov
add
ret
daa
pop
std
and
clc
push
xchg
and
fs
fistl
iret
mov
pop
test
aad
cld
addr16
nop
cmp
out
fiaddl
data16
cmc
sub
adc
lret
sub
xor
fwait
cmpsb
cmpsb
leave
aaa
jno
cld
stos
sbb
jae
cmpsb
or
cld
sbb
adc
mov
fdiv
sbb
cmpsl
daa
mov
dec
fldl
rclb
sub
pop
adc
and
sbb
push
int3
test
pop
inc
fildl
sub
lcall
cmp
mov
sbb
ljmp
pop
jle
add
cwtl
mov
call
push
pop
xchg
jne
xor
push
jne
popf
add
and
cli
les
test
mov
lods
lahf
xchg
jp
shl
or
lock
mov
adc
stos
aas
pop
rcrb
inc
or
cmp
andb
fstpt
jle
shlb
inc
loope
jae
jne
mov
pushf
push
clc
pushf
ljmp
sbb
lea
jbe
push
lret
dec
xchg
outsb
lcall
pop
and
in
xor
mov
push
sahf
adc
adc
sbb
xchg
aas
imul
outsb
mov
decb
xor
testl
mov
dec
mov
shr
mov
cmp
loopne
pop
in
add
lds
orl
mov
dec
shrl
xchg
jecxz
jle
ret
sub
inc
in
dec
and
sub
xchg
sub
imul
fwait
sbb
or
and
cli
inc
jg
test
xlat
inc
lods
sub
cmp
adc
dec
xchg
push
add
mov
dec
hlt
dec
xor
test
xor
mov
mov
pop
push
jecxz
pop
mov
mov
ds
popa
add
dec
aaa
jecxz
mov
mov
pop
fildl
or
outsb
inc
push
std
sbb
pop
inc
cmp
sbb
sti
fsubs
and
shrl
repnz
sbb
enter
xchg
outsl
in
push
stos
jbe
imul
push
pop
push
sbb
test
xchg
and
xor
outsl
out
mov
jg
sti
sbb
test
dec
lret
adc
rol
dec
xor
sbb
imul
inc
stos
ja
dec
cli
mov
mov
cld
mov
fildll
adc
add
xchg
hlt
outsl
bound
das
stos
jo
pop
adc
push
mov
insb
cmp
jmp
sbb
sbb
push
icebp
sbb
push
in
pop
cmp
pop
push
shrb
gs
loop
sti
xor
scas
cmpb
mov
mov
test
int
lods
imul
and
mov
xor
lahf
andb
insl
add
adcl
inc
jle
add
mov
int3
cmp
ret
mov
popf
ljmp
push
mov
cmc
fwait
mov
call
test
sub
dec
fucomi
adc
sub
push
xlat
lods
cltd
pop
arpl
sbb
out
sahf
jbe
scas
shlb
cmp
and
inc
int
mov
cmp
aad
cmp
sub
xchg
insl
sub
jp
jg
stos
leave
fbstp
cmp
add
push
imul
and
lock
sbb
insb
pop
cld
jle
rcll
dec
push
adcb
mov
std
push
adcl
sub
pushl
popa
or
and
push
xchg
pusha
stos
mov
dec
lcall
add
inc
ja
mov
fmull
aaa
pop
or
push
push
or
push
pop
lahf
sbb
and
movsl
imul
daa
mov
in
sub
cmp
sbb
adc
ds
adc
pop
loope
inc
xor
mov
pop
shl
adc
leave
inc
sbb
jmp
shrb
lods
in
enter
ljmp
jno
repnz
mov
fisubrs
shl
nop
jbe
shl
ret
and
fdivs
or
mov
xor
push
addr16
repz
mov
aad
mov
jecxz
inc
xor
mov
jae
in
cmpsb
dec
fmull
push
dec
pop
test
or
fldcw
pushl
cltd
js
mov
mov
test
xchg
pop
cmpsl
std
adc
cli
add
xchg
movb
add
add
push
mov
outsl
mov
cmpsb
out
mov
lds
leave
outsb
mov
cmp
ja
or
aam
inc
pop
push
outsb
faddl
jae
adc
lret
fimull
mov
mov
jge
insl
aas
xchg
popa
xor
shll
incl
je
repnz
push
or
or
sbb
inc
dec
int3
dec
lret
cmpl
and
cmp
jmp
addb
or
aaa
loopne
icebp
imul
cmp
sbb
rcrl
filds
aaa
cs
pop
testl
mov
jmp
popa
sti
xchg
mov
mov
dec
cmpl
jo
lahf
outsl
xchg
mov
gs
and
ss
orl
ja
es
int
push
leave
loopne
shl
stc
mov
outsb
mov
xchg
and
xor
mov
jmp
jle
or
adc
adc
sti
or
inc
data16
jns
test
cs
les
lock
push
jbe
leave
outsl
stos
mov
test
ret
aam
xor
add
in
or
cmpsl
sahf
push
and
inc
das
inc
cmp
sbb
ss
sbb
push
rcr
mov
xchg
mov
dec
mov
leave
rcll
fcoms
popa
xor
hlt
shl
call
jnp
adc
pop
mov
xor
push
js
mov
mov
lock
mov
imul
jne
sahf
leave
push
fwait
sbb
iret
push
lods
test
xchg
rolb
mov
jns
mov
fwait
mov
push
mov
stc
mov
push
push
jns
push
data16
je
in
fmull
popf
je
shl
and
push
lds
fdivl
jmp
imul
push
test
pop
mov
mov
mov
dec
je
mov
add
inc
jne
adc
dec
add
mov
mov
cmp
adc
icebp
enter
xlat
cmpb
mov
icebp
aas
cmp
sahf
fs
xchg
in
adc
xor
cmp
add
push
mov
jl
sbbl
mov
movsb
push
lock
imul
sub
nop
movsb
imulb
jl
sbb
mov
fidivl
in
cmpl
cmpsl
pop
test
cmp
xchg
clc
fadds
jbe
gs
or
test
push
int
lret
push
sarl
cmp
mov
jge
in
mov
mov
test
or
jg
push
cmp
mov
dec
or
push
aam
adc
scas
outsb
mov
xor
jns
repz
and
mov
repz
pop
imul
sbb
jbe
cld
icebp
fwait
in
add
popf
and
test
push
aaa
dec
mov
cmp
rcll
rcrb
pop
ljmp
fldenv
inc
xor
arpl
frstor
rcr
sub
xchg
aad
and
push
sub
and
test
out
out
push
push
clc
mov
shrb
mov
push
xchg
enter
mov
stc
pop
xor
mov
popa
aas
inc
gs
push
and
sti
in
xor
mov
dec
jae
sbb
adc
mov
aas
sahf
or
call
xlat
test
jne
mull
dec
jns
sub
test
mov
orb
jg
or
adc
cmpsl
mov
dec
jmp
mov
xchg
sub
int3
cmp
mov
xor
bound
and
mul
popa
adc
repnz
scas
rclb
je
xchg
inc
bound
sarb
pushf
call
adc
push
xor
inc
add
faddp
sbb
inc
icebp
insl
les
pop
push
shll
cmp
out
clc
mov
sub
js
or
fistpl
or
or
mov
dec
loope
inc
jecxz
mov
cmp
into
pop
or
cmc
std
push
loope
add
jge
stos
out
xor
cmpsb
jl
int3
and
push
mov
test
inc
cmpsb
sbb
es
mov
mov
pop
shlb
loopne
mov
inc
cmp
jae
jle
pop
shrl
xor
repnz
icebp
outsl
lret
js
and
bound
pop
rclb
adc
pop
sbbl
dec
inc
add
jo
cmpsl
push
or
adc
inc
mov
lods
mov
mulb
shlb
adc
and
rolb
stos
into
xchg
mov
dec
pop
jnp
movsl
push
push
jnp
push
out
es
jge
aad
jge
fwait
sub
push
mov
lock
in
rcl
add
push
jns
stc
pop
inc
test
mov
and
or
xchg
rorl
mov
inc
push
std
pop
inc
pop
pop
lret
pushf
ja
nop
pop
and
rorl
mov
pop
fwait
jp
jae
push
cmc
dec
pusha
mov
outsb
mov
bound
inc
xor
push
mov
mov
bound
cmp
pop
mov
inc
pop
cmpsl
pop
or
in
add
sub
cld
pop
inc
lods
mov
push
stc
adcb
shlb
ljmp
add
or
jne
cli
fisubrs
pop
setns
cmpsb
bound
and
call
lds
xor
mov
fwait
mov
in
xlat
and
lods
popa
sub
je
mov
sub
adc
add
scas
repz
cld
fbld
xchg
popf
push
mov
push
lahf
outsl
sub
stc
testb
mov
stos
and
inc
dec
jo
stos
out
loopne
ss
sti
lods
mov
lahf
cltd
jns
subb
jle
aas
rol
es
mov
stc
movl
scas
les
sub
lahf
iret
xchg
mov
or
dec
xor
and
push
jbe
push
add
cwtl
jge
mov
test
addr16
rcr
sbb
or
pop
xor
sbb
arpl
je
hlt
iret
inc
icebp
aas
inc
jo
sbb
scas
insb
mov
into
jge
aad
divb
add
jge
adc
sub
jns
xor
mov
mov
mov
ficoms
ret
add
out
sahf
arpl
push
insb
add
xlat
mov
pop
xchg
push
es
ficoms
push
mov
pop
pop
dec
inc
sbbb
cli
mov
cmp
add
mov
test
pop
pop
test
sbb
adc
sub
push
out
pop
orl
jne
je
inc
scas
inc
and
insb
sub
insb
dec
and
ljmp
dec
mov
testb
add
pop
and
hlt
imul
loopne
lods
cli
aad
mov
je
push
sahf
std
pop
cmp
out
inc
mov
addr16
mov
ljmp
js
mov
insb
sarl
mov
adc
loopne
iret
enter
push
push
fidivl
in
push
iret
sub
icebp
xor
xcrypt-ctr
cmpsl
lcall
cli
movsb
iret
sti
inc
frstor
xor
lcall
in
inc
sub
jbe
fcompl
mov
sub
push
pop
in
cmp
or
cmpsl
int3
or
fimuls
lock
out
clc
ljmp
and
xchg
ficomps
pop
push
lcall
shlb
jnp
dec
inc
xchg
mov
testl
pop
adcl
sub
popf
mov
sub
rorl
test
pushw
notb
loopne
mov
out
stc
stos
cmp
jp
xor
and
add
adc
adc
push
ja
int3
xchg
cmc
inc
nop
fs
cmovns
stos
sub
jae
cld
repz
pop
lcall
insl
loop
and
dec
test
mov
out
shlb
in
push
pop
sub
or
xchg
jmp
jge
out
loop
mov
xor
test
jle
adc
lahf
mov
sbb
add
jne
arpl
push
int3
sbb
gs
lods
clc
loopne
fidivrl
cmpsl
loop
scas
pop
mov
movsl
fcomip
or
and
and
nop
sbb
xor
fwait
jbe
pop
push
lret
push
imulb
test
sub
fnstenv
lds
sub
xor
fwait
stos
outsb
cwtl
cwtl
leave
add
call
fidivrs
lock
add
adc
popl
sub
out
ficoml
mov
test
xchg
pop
mov
lahf
or
call
shll
xchg
out
sti
push
xchg
adcb
add
mov
fwait
mov
test
divl
pop
enter
mov
cmp
push
mov
test
insb
fidivl
xchg
loopne
loopne
inc
or
loop
add
lds
mov
movsb
movb
pop
mov
fimuls
or
cmpsl
adc
jbe
ds
loop
fwait
push
arpl
pop
or
or
jno
stc
and
cli
test
sahf
adc
mov
cld
ja
data16
and
pusha
aaa
daa
and
mov
fcmovbe
pop
divb
jns
test
push
mov
pop
jl
arpl
fildl
jmp
data16
movsb
xchg
stos
mov
mov
inc
inc
mov
ja
push
cmp
mov
xchg
dec
push
fcoml
lods
lret
xchg
or
mov
repnz
ljmp
dec
cmpsb
xchg
mov
mov
outsl
xor
data16
fucom
add
or
jle
mov
xchg
jns
adc
or
jg
dec
andps
add
jg
mov
mov
or
jo
aas
add
std
rcll
adc
cmpsl
dec
add
leave
js
loope
dec
mov
fistpll
pop
ret
inc
call
lods
adc
aas
test
inc
xlat
push
push
push
sbb
ret
ljmp
call
adc
cmpsb
jl
dec
add
rorb
addr16
lahf
xchg
ljmp
xchg
inc
and
add
push
xchg
addb
das
dec
or
fimuls
ret
mov
imul
jmp
dec
lock
shlb
std
pop
movsl
test
xchg
out
sbb
testb
dec
xor
mov
repz
sub
push
mov
jp
jne
data16
movl
and
sbb
cwtl
lea
adc
les
add
add
mov
mov
sahf
ss
jnp
cmpsl
mov
dec
stos
out
popf
ret
mov
jmp
adc
mov
push
mov
notb
push
loopne
xchg
sbb
test
or
sti
xchg
xor
pop
mov
and
xor
xor
aam
lcall
out
jle
mov
addl
mov
mov
repnz
ficomps
mov
push
scas
cmpsb
cmc
sbb
add
jo
addl
andl
cmpb
aas
adcb
pop
adc
jmp
mov
cmc
int3
add
push
pop
sarb
inc
test
mov
cwtl
inc
and
add
fmull
ret
or
das
pop
push
add
cwtl
jne
lret
imul
sbb
jnp
nop
fdivrp
into
and
loopne
cld
scas
and
push
arpl
rcrl
push
sbb
xorl
dec
iret
clc
mov
adc
mov
push
out
fisttpll
sub
and
mov
out
in
dec
icebp
int
test
push
cwtl
mov
jp
out
xor
test
das
dec
xchg
pop
adc
call
push
xchg
cmc
std
cmpsl
inc
addl
lret
cld
cmp
add
hlt
jnp
adc
adc
mov
inc
jno
or
pop
mov
cmp
fidivrl
sbb
mov
js
jb
and
arpl
pop
mov
scas
repz
rcrl
mov
inc
lret
fisttpll
and
pop
jb
das
and
mov
dec
push
inc
hlt
icebp
dec
cmc
and
call
push
ljmp
imulb
jne
inc
out
movsl
ja
pop
adc
lcall
jl
add
fisttpl
flds
pop
mov
sub
dec
insb
stos
mov
push
and
in
notb
lahf
and
push
pop
pusha
inc
pop
scas
jle
ds
mov
mov
je
cmp
push
cltd
nop
adc
gs
fldl
into
pusha
fdivr
rcr
dec
mov
jae
pop
push
cmp
mov
cmc
push
arpl
mov
inc
sbb
mov
add
mov
cwtl
mov
or
pusha
in
add
cmp
push
inc
dec
mov
add
jnp
push
aad
loop
mov
cmpsb
out
xchg
imul
stc
into
insb
inc
inc
add
test
cli
jge
fdivrl
iret
mov
icebp
fwait
in
loope
lahf
mov
adc
jg
pop
dec
push
movsb
or
mov
mov
fwait
outsl
adc
mov
push
addr16
dec
pop
push
test
je
mov
mov
pusha
cmp
inc
cmpsb
mov
lods
test
insl
xchg
hlt
push
push
lcall
or
int3
andl
je
idivl
idivb
xchg
pop
daa
push
lret
testl
out
loop
jecxz
jp
push
jb
fs
jno
insl
and
xchg
jmp
mov
or
sbb
es
mov
lds
pop
aad
xchg
or
pop
out
scas
pop
int3
lret
push
cmp
dec
aad
aas
push
fcomip
nop
icebp
cmp
mov
pushl
pop
push
stos
stos
mov
add
fldl
ret
sbb
xor
mov
call
fisubl
xchg
or
mov
outsb
xchg
es
movsb
sbb
repnz
pop
lods
gs
gs
adcb
add
push
xchg
vpshlw
popa
xchg
insb
jnp
mov
nop
mov
fiadds
adc
std
loope
push
push
fisubrs
addr16
test
mov
inc
out
xchg
inc
sbb
inc
dec
jb
mov
aas
fadds
cli
shl
xchg
mov
or
dec
aas
inc
test
aam
xor
push
xlat
cli
jge
push
loop
push
pxor
cmp
xor
stc
call
mov
mov
fistl
out
dec
pop
jmp
push
outsl
insb
mov
or
ss
pop
pushf
and
push
inc
push
cmp
cld
les
fadds
inc
jg
push
sahf
mov
mov
xor
xchg
icebp
dec
jg
out
pushf
enter
insb
sbb
nop
stc
out
inc
xor
ret
mov
mov
ss
xor
or
or
add
dec
mov
mov
sbb
jbe
subb
inc
push
test
push
addr16
sub
mov
cmp
out
loopne
cmp
dec
add
mov
aad
nop
mov
cmp
sti
jne
add
imul
ja
pop
push
pop
mov
add
daa
sub
and
mov
xchg
sarl
sbb
out
sub
xchg
mov
icebp
push
hlt
sbb
rcr
mov
push
rol
insl
popa
push
nop
xchg
bound
enter
fsts
adc
outsl
pop
sbb
lea
or
pop
or
mov
add
mov
mov
xor
or
sti
xor
cmp
fisubl
jg
cmp
inc
outsl
frndint
cltd
xchg
sub
push
stc
xlat
xchg
ss
mov
xchg
les
mov
xor
in
and
cmpsl
std
mov
cli
test
sbb
bound
push
push
xor
jge
loop
or
daa
ds
sbb
and
ficompl
adc
push
xchg
movsl
lea
xchg
jge
sub
or
adc
fistps
xor
cmp
xor
mov
pop
jne
sub
add
jns
into
js
inc
pop
stos
pop
sub
lods
leave
notb
mov
add
in
mov
adc
and
aad
je
mov
mov
or
test
addb
mov
sub
dec
pop
or
data16
and
test
sub
xchg
lock
mov
adc
repz
int3
xchg
xor
push
dec
out
daa
pop
push
mov
mov
xchg
inc
push
xchg
and
rcrl
sbbb
out
push
imul
outsl
movsl
cltd
rcrb
in
pop
xchg
push
lds
mov
sbb
cmp
dec
add
das
inc
jp
xchg
enter
std
lret
push
repnz
jo
lock
mov
arpl
push
test
jo
sbbl
inc
jnp
cmpsl
outsb
sub
mov
icebp
dec
mov
or
xlat
jae
cld
pop
mov
xchg
xor
movsl
addr16
in
xchg
pop
dec
sbb
add
dec
cltd
inc
mov
test
in
cmp
imul
nop
testl
les
stc
cmc
sub
inc
push
sahf
mov
fisttpll
loopne
sub
fnstcw
aad
ficoml
dec
pushl
push
mov
push
sbb
dec
clc
aam
rorl
or
stos
in
push
shlb
inc
xor
pop
add
sub
movsl
sti
pusha
mov
add
pop
cmp
in
test
jbe
rcll
rorb
sub
inc
in
lret
xor
sub
mov
jns,pn
inc
mov
shr
mov
jg
mov
add
and
or
mov
stos
push
xchg
dec
mov
pop
test
ljmp
xchg
popf
outsl
ret
roll
dec
push
push
dec
xor
xor
dec
lcall
xchg
dec
or
out
and
sbb
cli
add
mov
out
lods
push
xchg
and
lret
and
clc
inc
pop
fcoml
push
pop
sub
add
adc
adc
sbb
loope
adc
mov
xor
fimuls
add
mov
dec
pop
outsl
or
insb
dec
or
lods
sub
or
cwtl
jns
xor
stc
aaa
sbb
bound
mov
loop
dec
or
nopl
movsl
or
mov
jno
sub
lods
nop
std
sub
mov
pop
jo
xchg
jle
inc
cmovg
lock
js
fisubl
stc
mov
lods
ja
adc
mov
pop
xchg
rcr
popa
jmp
jmp
repnz
gs
out
lock
aam
sti
cli
jb
insl
loopne
bound
and
sbb
push
push
clc
rcrb
mov
dec
xor
adc
or
jl
inc
adc
out
test
xchg
rorl
iret
xchg
and
jne
xchg
aad
ljmp
fcomp
imul
push
gs
aad
or
sbb
cmp
mov
xor
xor
mov
pop
es
aas
adc
iret
icebp
mov
movsb
das
out
fsubs
ja
or
repz
je
pushf
loop
ja
push
or
mov
push
push
out
imul
adc
jnp
inc
out
push
adc
cmp
mov
fs
rcr
xor
test
rcl
push
cmp
dec
es
cmc
jbe
rcrl
inc
adc
pop
pusha
hlt
cmp
or
xor
sbb
sti
insb
mov
shll
rcll
das
inc
test
inc
adc
sub
pop
clc
jg
lds
and
mov
jne
and
lcall
inc
sub
cmp
sarb
ljmp
aam
pop
loopne
js
sbb
mov
ds
cld
pop
loopne
loopne
test
ss
push
loopne
mov
cmp
dec
mov
mov
mov
mov
mov
xchg
popf
orl
outsb
outsb
cmp
adc
arpl
adc
movsl
adc
jno
push
add
xor
push
roll
daa
push
xchg
mov
push
mov
clc
enter
popf
enter
xor
push
pop
out
jne
iret
rclb
sbb
push
enter
xor
mov
jmp
jmp
fnstsw
pop
shl
je
jmp
or
sbb
outsl
and
push
adc
jg
cmp
stos
pop
sbb
mov
cmpsl
std
and
and
aaa
jns
cld
jge
insb
hlt
les
les
push
and
cmp
test
sub
jmp
xorl
loope
vmread
or
rcrb
inc
ja
int3
cmp
lds
push
or
xchg
pcmpgtb
xchg
sbbl
cmp
dec
xorb
adc
sbb
ss
adc
mov
pushf
xchg
pusha
test
xchg
test
cld
loopne
les
fstps
inc
out
hlt
sti
mov
aam
mov
push
jle
rclb
dec
call
pop
cs
push
iret
xchg
push
popf
mov
outsb
mov
or
dec
inc
popf
jecxz
leave
in
xchg
shll
jp
jge
int
dec
jmp
sbb
sbb
adc
push
mov
addr16
pop
cmp
js
sahf
pop
test
push
sub
mov
sub
dec
dec
sub
inc
inc
andb
inc
incl
push
push
je
int
je
insb
jl
push
mov
lcall
cmc
pop
test
jb
es
jl
push
gs
mov
mov
enter
and
dec
push
inc
jge
outsb
es
ret
dec
dec
cmp
dec
mov
out
leave
and
pop
lds
xor
sbb
iret
xor
dec
lret
fdivrs
add
outsb
mov
adc
mov
mov
jmp
push
iret
popa
shlb
mov
test
adc
orb
mov
and
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
movl
xor
or
mov
and
lea
mov
push
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
lea
mov
or
mov
and
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
addl
mov
add
sbbl
push
xor
mov
mov
movzbl
sub
mov
mov
adc
xor
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
movl
cmp
movl
jne
push
jmp
mov
movzwl
mov
cmp
jne
mov
incl
xor
add
mov
adcl
mov
mov
xor
sbbl
add
imul
and
mov
andl
xor
add
cmp
movzbl
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
jmp
imul
stos
sbb
div
loopne
jl
dec
pop
jl
or
loope
xchg
mov
es
push
sub
cltd
in
repz
test
rclb
cld
inc
mov
cltd
pop
sti
sbb
ja
mov
in
pop
adc
or
mov
shrb
mulb
jle
test
cmpsb
mov
or
pop
cmp
mov
pop
andl
lcall
push
js
jmp
pop
add
loope
adc
push
lahf
shlb
scas
orb
jle
jns
cmpb
dec
sub
xchg
and
aaa
sub
mov
or
leave
mov
pop
push
jg
sbb
test
add
sub
sbb
inc
loope
hlt
fists
sti
add
add
stos
xorb
nop
scas
add
add
pop
jno
cli
push
mov
imull
popf
in
cmpl
push
mov
cmp
mov
test
cs
jnp
call
subb
sub
jns
scas
adc
add
ljmp
xchg
sarb
loop
push
inc
lret
mov
adc
sub
push
dec
jno
sahf
hlt
rcl
shlb
ljmp
neg
shlb
lret
rorb
es
xchg
in
pushl
push
mov
xlat
lahf
call
lcall
stc
adc
adc
xchg
xchg
outsl
xor
mov
popf
arpl
movhps
push
mov
data16
add
fstpl
shl
and
mov
out
adc
lret
cmp
shlb
dec
sub
fnstsw
dec
loop
inc
fidivrl
popa
cmp
inc
outsl
std
jg
stos
outsb
push
pop
clc
cltd
movsb
rorb
xor
movsl
pop
pop
mov
mov
cmovb
sub
and
inc
repz
pushf
retw
dec
faddl
sub
stos
sub
ret
xor
push
out
sti
mov
lcall
iret
xor
lods
inc
sbb
mov
xor
pop
sti
rclb
fnstenv
inc
xor
pusha
xchg
test
ret
jne
or
mov
rcrl
dec
ljmp
outsb
clc
and
mov
jo
pop
addl
stos
and
sub
repnz
clc
sbb
mov
mov
jmp
ret
push
je
cmpb
mov
jge
in
mov
cmp
mov
in
mov
inc
add
pop
in
lcall
mov
adc
inc
out
out
fnstsw
repz
dec
in
adc
inc
xchg
popf
sti
sbb
xchg
mov
mov
and
imull
ret
daa
mov
inc
jg
in
sub
cli
int3
jmp
mov
sub
jnp
les
inc
cs
in
mov
movsb
adc
dec
repnz
jg
inc
movsb
lret
test
faddl
into
stos
pop
cmc
dec
cwtl
bnd
shlb
mov
xchg
push
xor
in
mov
ds
xor
pop
ljmp
and
imul
fdivs
jno
or
adc
stc
stos
push
mov
shr
mov
mov
sbb
fistpl
popf
cmp
xchg
cmp
pop
aas
lods
cmpl
xor
leave
add
pop
jmp
outsb
pop
xor
mov
jg
inc
jmp
lock
push
jo
mov
sar
insb
repz
cmp
push
das
and
and
mov
and
mov
sbbl
cwtl
ror
xor
lods
hlt
or
cmp
or
ljmp
imul
xchg
jo
repz
inc
aad
ss
cli
cmp
rcr
add
xor
jg
adc
mov
push
mov
imul
push
aad
xor
cld
scas
mov
insb
cld
push
lret
jg
scas
cmp
pop
and
inc
inc
push
dec
sbbb
xor
mov
adc
test
xor
stos
xor
imul
pop
lea
fs
cmpl
pop
mov
jmp
mov
popf
hlt
jns
or
lods
hlt
repz
arpl
enter
xchg
cmp
pop
jnp
xchg
das
cld
cmp
mov
dec
mov
push
clc
pop
lahf
mov
or
test
pop
insb
iret
lds
in
ljmp
mov
mov
pop
or
ret
fadd
cmp
jmp
test
or
push
sub
aaa
lea
mov
sbb
adc
shlb
jno
cmp
loop
ret
stos
das
push
xchg
inc
pop
cwtl
gs
mov
push
sbb
lea
pop
mov
cmp
repz
inc
push
jbe
ret
inc
push
in
stos
cmp
sbb
jp
ljmp
shl
gs
fldcw
add
lods
into
dec
call
lret
in
mov
adc
pushf
add
inc
pusha
stc
add
xchg
outsb
leave
pop
sub
movsl
sbb
shrb
xchg
popa
std
fisubrl
cmp
arpl
loope
sbb
mov
arpl
mov
or
lock
subb
mov
push
ljmp
jl
push
ret
and
pop
xor
int
cmp
fnsave
aad
push
inc
cmp
lret
scas
mov
test
push
andb
ret
rorl
clc
mov
jae
lods
sbb
jl
lock
fistpl
fstl
and
sub
adc
sbb
call
aam
jnp
mov
push
pop
mov
lds
xchg
xchg
push
mov
pop
std
pop
lock
and
das
iret
xchg
inc
inc
adc
dec
xchg
iret
xchg
jnp
mov
xlat
call
jbe
push
sahf
or
repz
cmc
test
pop
test
push
cltd
cltd
adc
call
pop
dec
sbb
imulw
inc
inc
mov
or
in
sbbl
lds
sbb
fnsave
popa
jmp
pop
popf
adc
push
test
xor
pop
dec
sbb
mov
pop
mov
rcll
dec
mov
sbb
sub
cli
aas
pop
and
pop
mov
mov
dec
mov
inc
mov
mov
aaa
fwait
sub
pushf
lods
adc
cmp
movsb
je
jno
fs
push
cli
sbb
sbb
aad
in
sbb
cmp
xchg
rorl
pop
imul
sahf
or
mov
adc
pop
sub
lock
mov
mov
adc
pop
je
xchg
lret
dec
test
imul
out
loop
mov
cmc
xchg
mov
inc
ds
shl
clc
push
aad
out
mov
jb
xlat
notb
out
movsl
das
outsl
pop
out
inc
mov
divl
es
push
bound
addl
test
mov
ja
push
cmp
or
sbb
push
sub
add
lds
pop
ficoms
out
fs
popf
ret
sbb
cmp
and
rolb
out
xor
popf
pop
xchg
lea
stos
add
xchg
out
mov
shll
into
subl
imul
imul
add
or
pop
mov
out
aam
jge
mov
pop
xor
jecxz
pop
fsubrs
shll
fldl
xor
cmp
jmp
dec
xchg
or
mov
adc
sbb
mov
adc
mov
ret
dec
aad
inc
fistpl
dec
jno
inc
nop
rcrb
mov
mov
clc
push
repnz
and
sub
add
xchg
cld
cmpsb
add
addb
repnz
je
dec
scas
push
in
dec
pusha
clc
xchg
std
jge
popf
test
outsb
inc
and
cmp
jle
int3
cli
mov
std
movsl
dec
or
ret
cmp
movsb
arpl
cmp
pusha
in
insl
les
aas
js
lahf
jnp
scas
push
mov
xchg
cwtl
pop
arpl
jge
test
push
pop
push
push
popa
mov
push
push
jae
ss
mov
add
inc
xchg
popf
fcmovu
lcall
push
enter
insb
js
aaa
cmpsl
clc
mov
out
rcll
and
cmp
arpl
mov
mov
push
mov
ret
ja
push
enter
nop
push
sub
sbb
push
leave
dec
sbb
imul
mov
xlat
insb
inc
add
ffree
or
cmc
cmpsb
sub
pop
imul
fdiv
out
dec
mov
popf
aam
xchg
push
and
out
sbb
hlt
loope
std
lcall
xchg
int3
adc
test
test
adc
lea
cld
push
pop
push
aam
jl
push
mov
sub
stc
sbb
scas
sti
xor
xchg
imul
bound
mov
ljmp
mov
jle
out
pusha
or
mov
jg
push
push
jge
jecxz
jno
push
scas
dec
and
cmp
xor
mov
popa
inc
nop
rorl
ja
xchg
aaa
je
pop
inc
fidivl
ret
sub
mov
mov
sbb
mov
jnp
lds
test
xchg
adc
into
adc
insb
add
inc
mov
subb
cmc
jle
add
jae
pop
add
popa
jbe
movsl
cwtl
shl
xchg
je
mov
mov
pop
cmpsb
pusha
xchg
adc
adc
mov
xlat
sbb
outsl
push
cmpsb
fimull
dec
jo
aas
push
dec
dec
mov
idivb
mov
pop
popf
ss
cld
inc
add
aad
add
mov
adc
jge
push
adc
dec
xchg
dec
mov
pop
lods
repz
dec
hlt
es
std
adc
adc
cmc
jle
and
mov
sbbb
ja
push
std
outsb
sub
sbb
sub
sub
call
or
daa
movsl
jg
mov
imulb
out
cmp
sub
xchg
lret
or
inc
dec
mov
jns
xchg
xchg
testl
jle
int
aaa
or
aam
aaa
popa
or
push
lret
filds
in
in
fnsave
xchg
or
add
sbb
xchg
pop
dec
inc
sbb
cmp
loopne
or
test
sahf
ss
mov
lods
fcoml
push
lcall
lock
mov
ret
and
repnz
imul
loope
lahf
jmp
push
std
dec
adc
mov
mov
mov
dec
data16
xor
orb
in
adc
js
leave
mov
lea
int
repnz
fucomi
daa
gs
sub
and
sub
es
scas
ja
fsubrl
pop
fsub
xchg
adc
les
mov
sbb
jmp
in
jecxz
sbb
out
jl
inc
int3
jg
pop
cmpsb
int
cmp
enter
or
jmp
pop
sahf
jmp
loop
out
std
out
xor
cmc
int
outsb
push
aaa
jmp
sbb
loop
push
ds
or
sti
mov
pop
mov
or
pusha
xchg
fcompl
or
or
popa
rclb
stos
lret
jle
notl
inc
ret
in
push
and
dec
rep
outsl
jp
sbb
lods
xlat
pop
lret
adc
ljmp
cmc
into
adc
sub
cmpsb
dec
inc
adc
jbe
int
in
fisttpl
iret
sahf
mov
mov
cmc
out
mov
iret
fwait
mov
push
mov
cmpsl
xchg
aas
add
mov
fists
bound
mov
add
sub
sti
iret
ds
scas
scas
lret
pusha
inc
sub
out
out
clc
fs
cltd
pop
lret
scas
adc
lret
or
fwait
push
loopne
je
cmp
jb
adc
inc
adc
xchg
movsb
jnp
test
repnz
jnp
dec
mov
jl
xchg
shlb
lcall
int
push
cmp
arpl
sti
push
js
and
gs
popf
scas
stos
sub
clc
sbb
das
jbe
mov
add
xor
mov
xor
adc
push
leave
lods
xchg
loope
jg
dec
lods
inc
jge
inc
int3
aad
test
jae
aam
pop
repnz
jmp
mov
push
dec
inc
pop
mov
lods
movsb
sbb
lret
jmp
pop
int3
mov
xchg
lahf
and
xor
clc
xorb
sbb
sahf
insb
or
and
stc
cmp
dec
cmp
jp
test
sub
imul
popa
cld
and
outsl
xor
add
gs
into
cmpsl
pusha
jo
arpl
inc
jo
mov
test
test
in
in
popa
lcall
jecxz
and
loope
mov
adc
fists
into
adc
sub
mov
cmpsb
lcall
scas
sub
fiadds
aad
sub
gs
dec
decb
dec
test
aad
outsl
sbb
mov
and
or
fld
inc
adc
cmovs
mov
pop
bound
leave
dec
inc
lcall
cmp
es
cltd
sbb
add
lock
push
outsl
jl
pop
mov
mov
inc
jno
sbbb
mov
repz
or
loope
stos
adc
std
inc
and
xchg
or
nop
push
adcb
sbb
ljmp
in
xchg
and
stos
cmpsl
xchg
aas
lret
aam
mov
xlat
repz
test
mov
scas
inc
les
test
cmp
xor
invd
das
inc
testb
sub
push
pop
mov
xor
push
mov
jae
cmpsb
ja
jmp
repnz
fsubr
cmpsl
or
pop
xchg
shrb
daa
or
push
in
out
fcomp
subl
cld
cli
xchg
or
cmp
repz
mov
mov
adc
mov
xor
fs
loope
out
orb
aas
push
mov
js
inc
dec
add
sahf
sub
dec
jmp
dec
popa
sub
jp
adc
stos
xor
mov
fwait
cltd
movsb
push
sbb
pop
dec
fnsetpm(287
sbb
jp
mov
adc
inc
pop
mov
jno
fdivr
stos
lret
jge
or
sub
dec
in
inc
int
es
cwtl
ss
out
jmp
dec
nop
mov
add
dec
add
out
and
outsl
mov
adc
and
xor
cmp
inc
lret
testb
mov
jg
lock
jae
stos
pop
fcoml
ss
mov
leave
cmc
adcl
mov
scas
ja
mov
mov
and
int
jmp
fwait
add
and
jb
pop
enter
mov
mov
cwtl
pop
leave
sbb
pusha
pop
ss
icebp
adc
add
adc
jbe
jae
movsb
pushf
pop
lods
das
jae
ret
ja
cmpsl
rcrb
aaa
popf
dec
dec
add
xchg
cs
mov
fisttpl
adc
cld
mov
call
pop
dec
jge
and
cltd
adc
aaa
aad
xchg
sti
movsb
inc
cmpsb
push
mov
sbb
bound
jle
es
into
movb
pop
pop
scas
mov
pusha
mov
jp
pop
xor
dec
adc
mov
into
or
push
fs
and
adc
pop
dec
pop
xor
jno
ja
xchg
call
cmp
adc
fisubrl
ljmpw
cltd
ret
xchg
mov
jl
sub
dec
ret
popf
push
popf
imul
sub
mov
aam
pushf
test
in
rorl
adc
mov
scas
les
cmpsl
mov
mov
cs
and
arpl
dec
xchg
repnz
packuswb
xchg
dec
cmp
adc
add
inc
fs
jb
jae
ret
mov
aad
push
adc
mov
mov
mov
jns
sub
in
cmpsb
jp
paddb
shr
ret
lcall
push
inc
jmp
loope
mov
inc
inc
cmpsb
cld
jmp
aaa
ljmp
xchg
daa
lret
loopnew
or
push
cmpsl
mov
imul
outsb
out
and
add
cmp
aam
lods
pop
test
cmp
pop
and
lock
xor
or
hlt
fisubrs
push
cmp
jp
mov
fsts
or
icebp
xchg
mov
aas
push
sbb
jne
sub
mov
mov
xchg
pop
enter
sub
lds
xor
lods
and
push
and
jae
nop
lods
inc
pop
mov
pop
sub
dec
lahf
cmp
push
cmp
mov
movsb
or
cmpsb
cmp
add
cmp
dec
xor
popf
dec
out
test
and
or
out
popa
xchg
pop
mov
les
mov
xlat
jb
sub
mov
out
sahf
nop
arpl
push
out
jg
je
mov
xchg
add
lock
and
inc
or
xchg
loope
xchg
repnz
jae
xchg
and
cmp
shll
and
xlat
cs
cmp
je
lods
das
lahf
and
int
rcrb
movsl
or
push
sbb
push
lock
push
or
mov
inc
mov
add
mov
fnstsw
fcmovnbe
jns
shll
call
mov
add
leave
or
dec
xor
inc
fs
loopne
rcrb
xor
iret
imul
push
fsubrs
stc
data16
cmpsb
mov
sbb
vmulss
push
bound
fisubs
push
xchg
push
or
loop
xchg
adc
call
lods
and
sbb
loop
dec
lret
push
add
pop
cli
popf
loope
ret
outsb
sarb
mov
test
mov
sub
outsl
fists
mov
cmp
stos
jecxz
cltd
loope
fiadds
fs
and
fildl
and
or
sahf
sbb
loope
fwait
out
in
stos
push
in
jp
xor
pop
mov
add
cmpsl
std
inc
loopne
mov
adc
xor
cmp
sbb
inc
jns
and
mov
lret
and
sub
or
sub
push
adcb
cmpsb
mov
sub
das
sub
mov
ret
test
in
sub
gs
cltd
mov
mov
xchg
out
xor
stc
add
mov
ficoml
nop
lock
dec
mov
shr
test
pop
xchg
scas
xlat
push
aam
mov
aam
jl
or
jl
or
xlat
xor
mov
sbb
inc
cmp
xchg
push
je
ficoml
xor
or
stc
inc
inc
cltd
movsb
sub
sahf
push
pop
clc
sub
fidivs
pop
xor
mov
inc
mov
addl
mov
scas
mov
inc
dec
cmp
out
out
inc
pop
inc
cmp
in
pop
dec
xor
ljmpw
add
int3
sub
xor
js
xchg
adc
sti
xchg
or
out
mov
pushf
mov
xor
adc
fwait
inc
mov
ljmp
ror
and
subl
loope
mov
stos
xor
loope
mov
dec
mov
insl
ficoml
mov
xchg
mov
cmp
rcrb
adc
pop
lods
dec
pop
lock
jne
push
mov
xchg
jecxz
dec
sbb
pop
cmpsb
in
push
push
adc
int3
dec
adc
adc
insl
inc
lods
aas
nop
imul
mov
pop
cmp
scas
dec
pop
sbb
push
adc
mov
testb
jg
xor
and
lods
and
testl
imul
loopne
jmp
push
lahf
pop
mov
movb
test
push
sti
dec
mov
fadd
scas
xchg
mov
sub
sahf
into
cwtl
sbb
cmpsb
inc
lcall
sbb
mov
fcom
not
in
inc
push
push
mov
call
test
rcll
lahf
rclb
add
add
arpl
in
pop
xor
data16
xor
enter
mov
inc
xor
xchg
insl
xchg
mull
mov
lret
mov
movsl
and
add
jnp
jp
inc
icebp
push
push
pop
add
mov
mov
inc
mov
add
push
pop
das
ret
lahf
aas
popa
in
loope
dec
jle
or
stos
bound
sarb
sbb
and
outsb
dec
sub
rorb
xor
xchg
dec
push
cmc
lea
les
sarb
imull
enter
mov
xchg
xlat
mov
imul
push
faddl
orl
addl
add
xorl
data16
pop
lods
std
fdivr
and
pushf
xor
idivl
je
movsb
js
repnz
and
dec
mov
xchg
dec
nop
jle
int
cmp
add
insl
push
mov
loope
aad
inc
mov
mov
hlt
sbb
inc
push
xorl
insl
mov
cmp
jg
mov
pop
xchg
adc
lods
pop
lea
loopne
jnp
jp
sub
jbe
mov
add
push
mulb
mov
dec
scas
cli
dec
xor
push
pop
pop
dec
sub
xchg
xor
outsl
mov
ds
std
xor
cmpsb
lods
vmovdqa
aam
push
not
pop
cmp
pop
inc
pop
imul
sti
jb
and
ror
jle
lret
mov
sub
imul
push
xchg
pop
and
cmpsb
cld
mov
xchg
lret
fwait
inc
lods
mov
mov
xor
inc
scas
mov
push
les
and
or
jl
addr16
dec
orl
sub
jne
sub
shll
call
fwait
mov
sti
test
lods
sti
inc
mov
mov
pop
jmp
clc
inc
pop
sbb
push
mov
testb
repnz
cmp
sub
jnp
out
pop
and
jne
repz
push
addr16
dec
lods
insl
outsl
adc
ret
mov
cmpsl
mov
lock
daa
lret
inc
and
jo
addl
mov
shlb
lods
or
mov
into
mov
mov
or
je
pop
mov
leave
leave
xlat
inc
pop
mov
fsubr
dec
movsl
bound
inc
adc
pop
adc
sbbl
test
mov
mov
cmp
call
shl
ss
sbb
imul
push
hlt
adc
jg
push
in
push
ja
mov
mov
adc
sub
ja
test
pop
xor
loop
add
fs
fucomi
in
gs
jb
sbb
mov
call
fistl
add
add
cmp
stos
inc
xchg
xchg
scas
scas
xchg
pop
and
ret
xchg
iret
xor
pop
jmp
sub
mov
sbb
push
lds
inc
jle
pushf
test
or
out
test
rcl
sub
shlb
mov
sub
ror
jmp
sahf
mov
push
int3
add
les
adc
jns
xchg
call
inc
lret
dec
pop
xor
shl
or
xor
mov
fisttps
ret
xor
xorb
pop
add
and
cmp
lret
fucom
pop
mov
mov
mov
cli
push
mov
ja
xlat
adc
scas
xor
or
sub
jmp
jmp
dec
arpl
dec
popa
fisttps
testl
mov
jl
jmp
outsb
and
adc
inc
mov
pop
das
test
lsl
lock
arpl
adc
dec
jns
pop
mov
aam
pop
shrb
sahf
xor
sbb
out
ret
fcompl
cli
gs
dec
bound
es
iret
fistps
cmp
stc
cmpsb
movsb
repz
les
mov
out
jp
xchg
or
sub
ret
mov
pop
out
loopne
cmpsl
jg
inc
mov
imul
imul
or
out
in
sub
mov
cltd
xchg
aad
and
in
nop
adc
aas
cmpsl
push
cltd
sub
lret
sbb
mov
ss
inc
sub
repnz
fcmovnu
ret
adc
in
fs
mov
movl
xchg
mov
lods
lahf
mov
enter
or
stos
inc
pushf
in
xor
xchg
loopne
stos
fisubrs
fwait
xchg
mov
inc
mov
pop
pop
mov
data16
in
mov
adc
lds
add
mov
mov
insl
les
enter
mov
push
js
addr16
xor
push
pop
enterw
test
mov
xor
and
aas
sbb
inc
pop
dec
outsl
cmp
loop
add
and
cmp
cmpb
rorl
and
int3
orl
call
or
xchg
cmp
push
adc
int
shr
mov
mov
add
and
ret
mov
mov
push
inc
mov
mov
pop
xlat
pushw
mov
and
test
mov
mov
sbb
lahf
int
inc
ss
inc
in
cs
inc
add
pop
inc
and
aas
out
roll
pop
nopl
or
inc
outsl
dec
add
scas
xor
fucomip
dec
and
mov
add
repz
test
sbb
push
mov
mov
cwtl
mov
push
mov
pop
mov
roll
jl
pop
repnz
jbe
adc
andb
imul
outsl
pusha
lea
les
fnstenv
outsb
and
scas
xchg
xor
push
out
jge
cmp
mov
cmp
mov
pop
out
mov
inc
xor
dec
dec
stos
decb
lret
sbb
jnp
call
cmp
lahf
jmp
and
dec
push
test
mov
jmp
js
mov
sub
jecxz
mov
mov
fistpll
rcr
or
mov
gs
shll
inc
shll
popa
test
lret
movsb
mov
inc
cmp
mov
notl
pop
and
fadd
push
repz
jo
sarb
jnp
ficomps
jae
add
push
sbb
jl
subl
and
fistpl
iret
xor
fisttpl
push
xchg
jbe
aas
mov
or
inc
loope
mov
add
dec
cmp
push
ds
and
mov
push
push
fisttps
clc
xchg
cli
ljmp
arpl
jmp
fsub
inc
fstpl
or
cmp
push
inc
sbb
stc
int3
stc
lret
or
insb
mov
ds
xor
inc
lock
cwtl
sbb
outsb
addl
ss
ds
cmp
jmp
xchg
adc
es
movsb
xchg
das
cwtl
bound
iret
mov
aam
inc
push
sbb
idivb
dec
add
pop
das
xchg
fistl
sbb
lcall
fsubr
cltd
push
xchg
mov
call
cmp
dec
outsl
je
push
call
mov
ja
mov
jbe
outsl
push
inc
das
mov
lret
xchg
cmc
es
popa
dec
lret
outsl
mov
jecxz
push
call
add
or
push
cmp
fs
dec
andl
jb
insl
mov
mov
jle
push
cli
cwtl
push
fs
stc
pop
xlat
je
push
xor
or
imul
lahf
xchg
pop
into
pop
dec
and
enter
and
jo
mov
pop
xchg
movsl
jne
xor
sub
jo
inc
cmp
and
pop
or
movsl
cwtl
stos
or
inc
cmp
pop
ret
outsl
xor
xlat
dec
andl
or
in
sbb
jle
add
and
jle
ljmp
sahf
std
pop
gs
jp
sbbb
push
test
inc
das
rcrb
sbb
fcmovnu
jge
inc
sub
pop
pushf
adc
bound
das
mov
icebp
push
lds
les
mov
mov
test
add
jno
or
mov
popf
mov
adc
adc
scas
js
pusha
stc
ja
ja
insl
mov
fmull
or
inc
nop
xor
dec
imul
mov
xlat
imul
dec
pop
cmpsb
adc
push
and
ds
popf
cmp
sahf
sbb
and
push
ret
or
xor
roll
jbe
in
mov
iret
mov
sahf
lcall
sbb
or
sbb
test
fcmovnu
lret
adc
mov
sub
xchg
adcl
outsl
push
cmp
or
cmp
pop
jnp
out
mov
xchg
sbb
xchg
and
cmc
repnz
hlt
dec
arpl
sub
stos
lock
sub
loope
dec
imul
jns
xor
out
daa
call
xor
or
inc
mulb
fdivrs
pop
les
mov
lods
cmc
cld
in
push
popf
loop
pusha
push
push
call
shlb
shlb
mov
sbb
mov
inc
xor
mov
fwait
jae
movsb
push
xor
enter
inc
mov
ret
inc
adc
or
int3
sti
xchg
adc
mov
sub
mov
mov
add
scas
cmpsl
sub
mov
je
inc
or
cmpsb
testl
jp
jp
icebp
les
mov
cmp
pop
jnp
fldln2
fisubs
mov
stos
mov
lcall
push
hlt
outsb
xlat
pop
sahf
jo
rcl
dec
xchg
incb
fisubrs
cmp
faddl
loope
mov
sbb
imul
mov
addr16
loopne
inc
jns
push
in
jne
rclb
push
leave
mov
sub
sub
pop
and
dec
mov
sarl
adc
lret
mov
adc
xchg
xchg
push
or
pop
testl
lahf
cwtl
add
cmp
sub
fistps
sub
push
cmc
dec
fnsave
mov
mov
rcrl
jl
out
mov
xchg
and
dec
mov
or
lret
xlat
cmp
ret
cmp
sub
xor
sbb
cmp
shrd
stos
mov
orb
movb
push
das
lahf
vpavgw
pop
inc
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
andl
mov
mov
mov
xor
add
mov
movzwl
and
mov
mov
sbbl
xor
adc
push
sub
mov
movzwl
sbb
mov
negl
add
xorl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
push
call
jmp
and
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
push
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
mov
in
xor
mov
pop
out
iret
and
pop
jl
and
jp
xor
loop
in
fwait
stos
pop
add
mov
mov
in
mov
mov
push
add
dec
or
aam
push
loope
cmpsl
sub
into
pusha
aaa
mov
jp
push
lret
xchg
ret
mov
cmc
inc
data16
fs
cmpsb
stos
lods
mov
and
xor
jno
xchg
enter
loope
add
xchg
js
cs
sub
inc
stos
scas
mov
push
call
test
push
nop
jle
stc
mov
cmpsb
jb
repnz
jecxz
shr
fs
mov
sub
insb
loop
mov
lret
pop
mov
adc
je
mov
fsub
movzbl
push
aad
clc
fwait
in
inc
pushf
mov
lea
mov
imul
aam
mov
leave
xchg
rorb
mov
mov
out
push
test
test
pop
xchg
dec
rorl
inc
mov
fadds
test
mov
test
and
in
mov
flds
sub
ror
sbb
fnstcw
push
insl
push
pop
jmp
add
lcall
jg
cmp
push
sbb
lahf
fisubrs
aad
inc
sub
mov
out
pop
test
mov
xchg
pop
push
sub
js
cmpsl
mov
sbb
mov
inc
movsl
fsubr
in
ret
mov
mov
out
or
xlat
pop
mov
xor
xor
xlat
dec
mov
add
jmp
lea
cltd
and
cwtl
sbb
jg
les
jb
fsubp
test
cmp
cmp
mov
ja
sub
mov
pushf
adc
into
clc
cmpsl
adc
call
cmp
das
mov
nop
rcll
add
xchg
and
mov
jo
insb
xor
or
lods
xchg
or
add
or
sub
lahf
mov
cmp
stos
pop
inc
fs
icebp
or
cmp
pop
scas
mov
xor
mov
fadd
xor
pop
mov
testl
mov
imul
and
mov
xorb
sub
or
push
enter
int
dec
push
movsb
or
out
sbb
int
adc
mov
cltd
sbb
pop
iret
mov
test
inc
clc
xor
out
jl
mov
and
in
loopne
pushf
addr16
inc
shll
mov
stos
mov
rorl
lahf
in
jo
mov
shll
or
addr16
in
cwtl
test
scas
jb
inc
jns
and
mov
imul
inc
cs
pop
add
inc
mov
int3
inc
sahf
insl
adc
fnclex
ficomps
sbb
xchg
xchg
fildll
push
push
mov
mov
pusha
mov
int
lcall
xlat
push
push
sar
daa
pop
mov
adc
js
or
mov
test
push
push
stc
sub
das
shlb
xchg
push
cli
pushf
inc
or
inc
xlat
lock
ljmp
jnp
movsl
inc
in
jmp
jecxz
cld
lret
push
movsb
data16
and
scas
ret
inc
dec
dec
xchg
iret
inc
mov
fcoml
lcall
xor
inc
add
pop
and
ss
sti
pop
data16
or
xor
pusha
out
sbb
xor
bound
cwtl
fcompl
mov
jecxz
loopne
movb
ja
xorl
jmp
push
cmpsl
fnstenv
aas
lea
movsl
and
push
bound
xor
cmp
mov
fadds
add
jmp
scas
jg
cmp
jg
imul
lock
mov
xlat
stos
hlt
xor
out
jnp
or
xchg
pop
pop
out
and
mov
pushl
test
mov
lods
clc
sub
dec
push
or
and
mov
cltd
loope
inc
cmp
xor
xchg
test
neg
dec
test
loop
popf
sub
lods
lret
leave
fcoms
pop
dec
mov
fistl
pop
fs
ljmp
xor
movsl
enter
imul
mov
lds
jae
fstpl
stos
cmp
push
push
jmp
sbb
fs
inc
pop
ss
and
je
sbbl
cli
push
in
jmp
sar
scas
xchg
mov
xor
mov
add
jle
sti
test
jl
mov
pop
out
xchg
adc
xor
push
add
push
dec
stos
mov
popa
test
leave
mov
into
sub
cmp
jo
mov
dec
xchg
and
rorb
xchg
adc
test
mov
lods
mov
pop
testl
sub
ljmp
mov
or
or
testb
repz
xchg
sub
pop
pop
sub
aas
push
mov
stos
push
popa
dec
aad
push
shlb
inc
aas
push
popf
dec
jge
scas
dec
stos
insb
mov
aas
fidivrs
cmc
lcall
js
push
adc
xchg
push
outsl
mov
pop
popa
jo
in
jae
cmp
ja
gs
movsl
pop
mov
popf
cmp
cmp
push
xor
mov
stc
push
loope
movsb
add
out
lock
push
ja
rorb
mov
test
mov
cmp
es
pop
stos
mov
mov
cmp
mov
xchg
jno
sbb
mov
sub
dec
cltd
pop
out
add
int
gs
fsubr
mov
inc
outsl
popa
push
push
add
stc
ljmp
cld
dec
inc
scas
lcall
or
sbb
cmc
dec
add
lahf
mov
inc
rcl
add
jne
dec
push
xor
or
and
je
stos
push
mull
dec
sub
mov
xor
fdivrs
hlt
test
or
aaa
mov
xchg
sbb
adc
lock
fwait
test
shll
int3
test
push
ret
and
fldt
aam
dec
cltd
dec
jecxz
adc
lods
xlat
in
sbb
and
addl
fs
movsl
xorb
popa
inc
sbb
mov
in
cli
push
in
sbb
loopne
fnop
fidivs
add
pop
inc
mov
xchg
data16
aas
out
inc
and
imul
icebp
aaa
movsb
daa
fldenv
arpl
iret
xchg
je
or
add
xor
push
and
cwtl
mov
and
jbe
out
ss
mov
cltd
movsl
enter
mov
or
mov
aas
add
mov
ss
add
push
cwtl
addr16
movsb
in
mov
mov
cmp
sub
push
in
test
push
aaa
dec
and
mov
ret
inc
jle
or
cltd
cmp
repz
popa
push
jae
out
jecxz
inc
xchg
xchg
jp
cmp
loop
xchg
pop
pcmpgtb
adc
dec
insl
pop
pop
fs
dec
in
js
jae
lods
add
insl
filds
sbb
mov
out
ss
mov
movl
and
adc
pusha
inc
lea
sbb
aad
sub
es
adc
into
mov
je
popf
bound
imul
push
push
int3
mov
push
dec
in
inc
icebp
loop
inc
pop
xchg
inc
nop
xor
xchg
jb
inc
sahf
gs
mov
or
and
insb
jae
mov
push
mov
dec
push
in
lahf
sub
popf
int
cmp
out
fimuls
sbb
cmpsb
add
movsl
cwtl
stos
fistpl
in
mov
dec
rcll
mov
mov
lret
mov
leave
int
test
notb
mov
pop
jge
mov
das
xor
xor
fwait
jge
mov
or
or
and
cld
out
out
cltd
mov
add
mov
insb
xchg
jns
cmp
loop
push
dec
mov
add
arpl
sbb
jle
cmpsb
push
leave
js
idivb
and
adcl
mov
cli
lods
sub
aam
sbb
and
cmpsl
adcl
repnz
xor
ret
stc
sti
dec
inc
bound
sbb
fsubr
mov
gs
out
insb
sahf
outsl
cs
push
cmp
inc
fadd
add
arpl
loop
scas
cmp
xchg
xchg
pop
mov
jmp
cld
cmp
inc
fadds
push
mov
and
das
stc
repnz
push
xchg
out
test
ljmp
add
mov
cmp
xlat
pop
dec
insl
es
sbb
test
in
or
shl
shrb
rcr
aad
mov
or
jp
cmpsl
mov
scas
sti
aaa
xor
adc
cmpsl
or
xor
add
mov
pop
js
inc
lds
adc
xchg
pushf
cmp
adc
sub
jle
sarb
adc
adc
idivl
subb
dec
pop
fsts
fwait
add
lret
ja
ss
dec
cli
pop
mov
push
or
es
out
mov
and
mov
icebp
shrl
rcll
shll
ror
testl
and
in
adc
mov
sahf
test
insl
fadds
and
std
mov
pusha
mov
mov
shlb
xchg
int
ss
cmpsl
xor
adc
adc
in
pop
add
je
iret
nop
imul
jb
enter
push
sub
ss
push
clc
xlat
bound
mov
js
and
cmpsb
pop
cld
jnp
mov
rol
mov
jb
int
dec
sbb
out
les
jb
jg
xchg
cmp
jnp
mov
iret
sbb
and
inc
imul
pop
sti
mov
rcll
scas
iret
mov
xchg
xor
ljmp
repnz
aaa
stc
int3
lcall
xchg
pop
sub
jle
mov
test
jmp
jmp
insb
sahf
test
mov
data16
into
pop
jmp
lock
dec
out
icebp
push
cmp
cmp
sub
pop
push
not
mov
fbstp
xchg
mov
xchg
imul
xor
pop
lock
mov
lock
dec
pusha
cltd
pop
scas
out
lock
dec
sbb
sub
jp
scas
xor
iret
or
sbb
push
pushf
lds
push
xor
jmp
xor
dec
pop
mov
nop
cltd
insb
aas
jle
stos
dec
insb
loope
stos
cltd
out
fsubs
mov
jp
mov
xor
mov
pop
cltd
mov
cli
pop
test
rcl
dec
pusha
sub
aad
movzwl
or
enter
jo
mov
in
cwtl
adc
shl
test
call
and
xor
xchg
repnz
push
in
push
xchg
push
push
inc
stos
or
insl
bound
iret
push
jae
sbbb
xchg
out
std
lods
cmovne
push
cmp
bound
mov
ss
xchg
aaa
pop
movsb
loop
jo
sbb
push
mov
mov
xchg
inc
or
pushf
sbb
loope
fiadds
mov
mov
movsl
popf
sbb
testb
or
jp
clc
ret
adc
movsb
mov
mov
lock
shr
jne
lock
leave
jns
int3
repz
cld
inc
or
sbb
dec
insb
adc
add
xchg
mov
sti
add
in
sub
ret
jbe
push
add
adc
xor
mov
xchg
in
jae
and
aam
scas
add
jae
frndint
test
inc
xor
stos
adc
adc
push
push
add
xchg
cmp
fisttps
and
div
loop
outsb
jmp
push
addl
push
cmpsb
mov
andl
mov
cmp
jle
sub
mov
or
and
ljmp
lds
xchg
adcl
in
or
cltd
xor
mov
xchg
mov
dec
aas
jne
popa
imul
std
xchg
xchg
lcall
mov
sbb
es
fcomps
ret
sbb
inc
sbb
daa
popa
push
out
add
in
cltd
pop
les
mov
pop
jnp
adc
insl
cmp
and
in
out
lods
mov
cmp
insb
sub
push
dec
sub
out
xchg
sbb
add
in
jmp
repnz
or
es
sub
add
inc
mov
push
or
xchg
xchg
xchg
jl
add
jbe
rclb
orl
add
pop
imul
cmc
xor
dec
in
roll
js
lods
mov
jo
dec
jae
push
pushf
mov
fucomp
and
jnp
nop
adc
xor
mov
sub
nop
or
ja
in
sarb
ror
cmp
jge
into
push
fnsave
shrb
pop
std
pop
fs
and
data16
dec
inc
leave
and
and
call
fisubs
sub
sub
in
addb
aad
xor
into
popa
push
xor
lods
lods
sti
je
xor
scas
into
sbb
or
xlat
rcl
bound
push
sub
sub
xchg
pop
in
faddl
pop
sbb
push
add
cs
int
and
movsl
imull
pop
decl
mov
dec
cld
jecxz
sbb
jl
jne
xorl
jmp
jb
mov
clc
adc
test
adc
or
lahf
int3
scas
dec
mov
xor
movsl
and
lods
stos
sbb
add
cld
jne
insb
dec
insb
aad
xchg
mov
add
negb
sbb
fdivrl
addl
mov
loop
push
ret
push
loop
rolb
sbb
mov
sbb
popf
sbb
inc
stc
xchg
nop
jae
or
mov
add
bound
pop
addl
mov
jno
and
aas
mov
lods
js
nop
out
in
xor
push
ljmp
dec
ds
stos
lcall
ficoms
xchg
in
xor
nop
jge
leave
insl
out
aam
lret
aam
dec
lcall
iret
cmp
clc
aas
loopne
jae
dec
push
mov
gs
xchg
mov
push
lahf
sbb
aam
push
dec
mov
lock
fcmove
mov
and
cld
sarl
data16
scas
out
xlat
mov
push
dec
or
xchg
jle
or
xchg
adc
inc
push
push
iret
cwtl
add
pop
inc
aaa
mov
loope
sbb
loope
lods
cmpsb
pop
stos
jae
inc
push
fists
pusha
jae
mov
adc
orl
sbb
cmp
add
fbld
daa
and
add
sub
mov
int3
sbb
scas
dec
loope
xor
outsl
jb
sub
ficompl
aad
jp
ret
add
addr16
cmp
jne
ljmp
fsubrs
test
fldcw
jo
dec
cmp
les
lea
sub
loope
in
push
and
loop
loopne
mov
js
int
push
dec
sbb
inc
inc
inc
add
and
jb
dec
sbb
push
mov
xchg
aaa
mov
ret
adc
loope
stos
xor
mov
mov
push
jl
stos
pop
adc
cs
mov
ja
mov
cs
or
mov
mov
sub
mov
leave
cmpsl
jp
testb
int3
jg
and
shl
mov
in
fisttps
lds
mov
jecxz
js
jb
pop
fidivrs
cmpsb
jge
es
fidivl
inc
jecxz
xor
ror
test
cmc
push
dec
mov
dec
lds
cmpsb
xor
insb
xlat
push
les
js
cltd
lahf
fadd
int3
lds
xchg
dec
cmp
jb
inc
or
push
or
cmp
jmp
rcll
cmp
pop
add
cmp
popa
call
in
rorl
and
popf
sar
ljmp
push
add
shl
loope
mov
ret
in
ror
aaa
mov
lea
clc
or
into
jae
ljmp
jp
and
lret
xchg
lds
mov
push
sti
mov
sub
dec
sbbl
outsl
negb
ljmp
or
push
lea
int3
testb
hlt
call
and
dec
add
out
hlt
leave
dec
sub
xor
adc
sub
test
push
dec
pop
or
cltd
imul
jns
adc
cli
ret
mov
cmp
popf
add
sbb
mov
jg
sahf
ds
daa
stos
sahf
jne
push
and
pop
xor
out
rcrb
insb
loop
test
dec
sbb
and
jb
das
or
dec
mov
pop
add
mov
jmp
jg
test
rcrb
rcrl
cmp
test
repnz
xchg
sub
pop
jmp
sahf
movsl
cmp
popf
cmp
mov
cwtl
add
aaa
adc
loope
bnd
enter
dec
subl
pop
ficomps
pop
mov
add
adc
out
test
add
jo
pop
mov
shlb
add
pop
std
sti
mov
inc
adc
lret
sub
dec
mulb
sbb
daa
cmpsl
mov
mov
sub
lods
xchg
pop
add
xchg
xor
xchg
mov
inc
pop
cmp
jmp
sub
cli
aas
hlt
xor
inc
or
cmc
lea
in
imul
xchg
mov
cmp
or
shl
dec
pop
lods
insl
or
jmp
mov
add
mov
popf
ja
out
arpl
jnp
ss
inc
sti
fsts
adc
gs
cltd
stos
repnz
fsts
imul
xchg
mov
ja
mov
je
push
mov
data16
sbb
pushf
mov
lret
fsubrp
int3
clc
dec
xchg
jne
inc
mul
mov
jle
adc
add
push
stc
fsubrs
inc
mov
test
inc
xchg
jg
or
dec
test
jbe
stos
push
cltd
aad
fcompl
or
mov
jnp
mov
push
mov
fbld
outsl
jb
outsl
ffree
loopne
dec
sub
xchg
aad
sub
jnp
loopne
jle
add
fsubrs
mov
stc
mov
sahf
nop
es
aas
testl
in
jne
cmp
sbb
je
dec
jle
sbb
nop
push
call
pusha
pop
hlt
aad
loop
jl
jb
dec
lret
add
xchg
cmp
pop
movsb
jae
mov
cmc
push
in
movsl
sub
fcoml
mov
jb
call
je
cmp
lods
push
rol
or
jno
imul
ret
mov
jmp
pop
mov
jae
and
insb
jne
cwtl
movsl
pop
ficompl
mov
imul
shlb
pop
orb
add
int3
mov
or
mov
pop
stc
cmp
jecxz
mov
stos
adc
mov
xorb
jae
cmp
inc
mov
sub
add
std
ljmp
cmp
jp
sbb
adc
cmp
cmp
and
outsb
mov
jmp
lods
lods
lcall
push
fmul
lret
out
jne
or
inc
push
mov
fsubl
cmp
repnz
add
enter
leave
mov
mov
mov
mov
cmp
add
push
fiadds
add
xor
jb
xor
icebp
add
push
aaa
cwtl
nop
sbb
sbbb
das
cli
loopne
adc
pop
lret
sub
addr16
jb
xor
aaa
mov
sbb
add
cmpsb
add
aas
mov
mov
cld
sbb
insb
or
ficomps
jno
leave
daa
scas
js
std
adc
xchg
jg
push
idivb
adc
dec
lods
hlt
loop
clts
cs
mov
pop
lret
hlt
sbb
hlt
xchg
mov
aas
test
test
in
fadds
stos
cmc
gs
cli
cmp
xor
js
repnz
lahf
jbe
mov
andb
xchg
push
push
stos
jle
push
xchg
stos
add
adc
in
stos
out
stos
aaa
mov
cmpsb
cld
out
test
sti
dec
dec
test
loopne
inc
repnz
mov
mov
sti
inc
sub
jmp
rolb
inc
sbb
adc
gs
in
call
popl
add
popf
sbb
cmpsl
negb
adc
out
push
xlat
dec
mov
std
jo
mov
push
dec
nop
jo
xchg
test
pop
jl
push
push
out
mov
sub
imulb
popf
daa
shl
xchg
movsb
imulb
call
and
repz
push
inc
mov
and
imul
xchg
add
popf
jmp
lahf
or
arpl
jo
idivl
je
jb
dec
mov
sar
and
and
fisubrl
stos
xor
cmc
outsb
mov
lcall
jb
xchg
in
aaa
mov
insl
mov
jno
movsb
sub
mov
iret
adc
js
popa
pop
mov
pop
mov
sbb
movsb
sti
xor
pop
dec
cmc
push
es
in
icebp
push
cmpsl
jp
leave
xchg
ret
cmp
inc
inc
stc
mov
and
push
imul
lea
sbb
insl
movsl
das
data16
in
cmpl
icebp
push
vucomisd
xchg
cmp
das
jl
out
arpl
mov
xchg
xchg
jg
inc
add
es
add
fcmovnb
sahf
test
mov
jnp
andb
mov
dec
mov
rcl
rol
mull
cmp
nop
leave
fidivrl
and
mov
rorl
add
add
inc
xor
inc
orl
repnz
out
mov
or
mov
inc
jno
mulb
inc
repnz
jno
repnz
gs
nop
mov
cmp
xchg
in
and
xor
cltd
inc
push
or
and
leave
mov
cltd
jge
sub
btr
lahf
aaa
xor
jbe
sbb
push
fimuls
cmp
xchg
push
mov
sbb
lods
sti
sbb
cli
jle
and
xor
pop
stos
dec
mov
sbb
push
fisubrs
jp
mov
loop
mov
xchg
push
push
insl
push
xorb
shrl
xchg
cli
add
sti
or
pusha
and
out
inc
push
adc
js
icebp
jae
or
icebp
cmpsl
mov
inc
popa
add
mov
mov
pop
mov
pop
not
inc
cli
fsubp
mov
sti
arpl
and
xor
ljmp
add
inc
es
jg
subl
jo
gs
xlat
stos
mov
and
cld
adc
mov
mov
and
push
mov
sbb
into
inc
dec
mov
loopne
dec
pop
jecxz
int3
jb
add
mov
lahf
out
inc
out
adc
jae
and
in
jecxz
cltd
jno
xor
lea
jno
ljmp
movsl
lret
sahf
popf
mov
mov
push
jg
dec
jnp
int3
ret
dec
lods
ret
call
mov
jo
push
xlat
xchg
pop
mov
adc
mov
mov
add
pop
pop
fcmovu
mov
sarl
jo
pop
or
hlt
or
mov
xchg
and
enter
pushf
mov
ret
sbb
and
test
pop
aas
jnp
into
adc
xchg
adc
and
xchg
out
xchg
mov
pop
inc
add
add
aas
aas
addl
pop
movl
add
stos
cmp
pop
lahf
jg
push
inc
push
mov
mov
insb
je
add
cmc
ret
jge
mov
in
out
sbb
arpl
enter
test
inc
sbb
jl
and
lahf
jge
adc
int3
daa
xchg
lcall
inc
andb
xor
xchg
mov
or
xchg
inc
in
add
mov
mov
add
mov
sbb
cltd
lods
xlat
dec
cmp
lock
lods
call
sub
dec
les
jmp
and
dec
aas
aad
roll
cmc
sbb
gs
nop
aad
xchg
in
cmp
jge
mov
jnp
jmp
xchg
inc
stc
and
push
aaa
popf
or
subb
inc
cmp
push
stc
adc
sbb
jno
jae
sub
bound
xlat
push
sar
pusha
sub
jmp
xchg
mov
test
mov
in
jl
dec
and
pop
sbb
data16
outsb
mov
xchg
into
in
push
xchg
or
adc
xor
pop
mov
fstpl
mov
mov
jmp
pop
jb
mov
adc
test
pop
sub
int3
jbe
dec
inc
out
pop
sub
shll
aas
pop
pop
fmull
imul
scas
jge
fdivrs
add
inc
cs
pushf
mov
or
mov
nop
mov
in
ljmp
mov
mov
gs
lds
icebp
sbb
pop
rol
in
adc
push
or
sub
jp
shrb
and
push
iret
out
int
lea
jb
inc
mov
outsl
or
cwtl
arpl
pop
enter
adc
ss
iret
push
enter
xor
test
je
lods
popf
xchg
loop
addr16
scas
jge
fidivrs
repnz
test
jno
inc
mov
sbb
sub
add
out
push
xchg
popf
aaa
jmp
lret
xor
push
aam
andb
ficompl
std
out
cmp
pop
cld
stos
dec
shr
jge
loopne
fildl
bound
add
daa
cmpsb
ljmp
lret
inc
adc
xlat
pop
daa
and
and
xor
inc
fists
jno
mov
jg
adc
mov
mov
inc
test
inc
stos
inc
stos
dec
xchg
pop
cmpb
xor
xor
or
cmp
or
daa
mov
mov
inc
mov
mov
sub
mov
flds
pop
mov
mov
adc
ja
sbb
jl
testb
test
das
cli
jae
push
fistpl
decl
push
cmp
rcr
push
add
in
incl
cld
movsb
pop
fcmovnb
jp
dec
mov
aas
add
test
fadds
push
add
sbb
inc
loope
push
hlt
mov
mov
inc
in
in
xor
pop
cmpsl
or
loopne
dec
sub
xchg
dec
jae
jns
mov
inc
sbb
pop
jmp
out
scas
sbb
push
in
out
xchg
imul
jb
cmp
adc
or
push
loope
mov
push
mov
dec
jo
cwtl
ret
je
push
in
jb
js
fmull
ljmp
sbbb
out
xchg
lods
jle
and
sub
imul
xchg
or
mov
movsb
push
lods
jg
dec
mov
lret
dec
fs
shll
imul
cmp
sub
repnz
sub
mov
inc
in
stc
stos
or
in
fwait
xchg
and
adc
cmpl
subb
test
xchg
lahf
xchg
dec
stos
pop
xchg
sti
push
mov
cld
or
sub
bound
push
mov
push
into
outsl
in
cmpsl
cmpsb
mov
repnz
popf
out
into
arpl
dec
sub
test
jo
dec
cmc
xor
call
cmp
shlb
inc
je
dec
dec
insl
repnz
jnp
movq
mov
xchg
imul
rolb
pop
sub
fistl
insl
mov
jae,pt
stc
pop
jmp
test
out
insb
pop
les
dec
aam
mov
cmpb
sbb
jge
fnstcw
mov
sahf
xchg
sub
sub
dec
popa
mov
test
adc
xor
sti
loope
push
sbb
bound
xor
lds
bound
mov
shll
popa
dec
mov
jne
pushw
mov
jbe
rclb
xchg
inc
push
hlt
or
ljmp
push
adc
popa
leave
adc
aaa
aam
add
cmp
outsl
mov
xor
pop
sarb
stos
push
jbe
shll
cmpsl
pushf
je
ljmp
and
cmp
and
jae
pusha
call
adc
inc
pop
mov
add
xchg
jmp
out
adc
mov
push
insl
pusha
daa
mov
ss
mov
imul
and
xor
hlt
pop
sahf
sub
sub
test
pop
xor
and
lods
sbb
sbb
repnz
sub
hlt
shl
loop
jp
mov
mov
jne
lret
cld
sub
mov
jle
movsb
out
adc
lods
mov
xor
es
mov
push
push
pop
sti
mov
xchg
xchg
xchg
sbb
int
test
and
sbb
mov
inc
aas
test
pushw
pop
lds
xchg
orb
sbb
sub
test
mov
pop
cmpsl
xor
test
inc
pop
add
xchg
aas
out
out
fcompp
pop
into
not
adc
lret
scas
inc
mov
push
bound
jns
stos
shll
adc
test
cmpsl
xorl
loop
imul
or
pop
add
pop
pop
jl
inc
mov
mov
jno
mov
out
stc
or
sbb
adc
mov
xlat
lock
outsb
or
stos
sub
cwtl
pop
xchg
stos
xor
push
sbb
roll
mov
pop
inc
inc
clc
sub
stos
in
and
aas
fnsave
push
stos
sar
or
aam
mov
inc
push
notb
add
sbb
jg
gs
mov
rorb
sbb
ljmp
jbe
andb
xchg
call
or
xor
jno
adc
mov
cmp
xor
ss
push
fildll
push
jle
inc
negb
jg
cmp
inc
int
out
cltd
enter
lds
mov
stos
sub
cmp
and
mov
and
leave
scas
jge
mov
sub
cmp
and
dec
inc
jnp
xor
lock
xchg
ret
leave
repnz
mov
in
xchg
and
xchg
and
cld
mov
decl
xchg
into
sarl
mov
mov
out
and
xchg
popa
clc
lods
rcll
ds
test
nop
addr16
mov
aad
sahf
imul
adc
icebp
cli
push
push
outsl
scas
in
adc
loope
pop
mov
pop
fwait
icebp
out
imul
imul
imul
insb
jbe
loop
jp
not
push
mov
mov
mov
sbb
mov
push
jge
mov
test
pop
lods
hlt
mov
bound
xor
inc
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
sbb
mov
xor
xor
sub
mov
add
movl
or
mov
push
mov
add
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
mov
negl
push
mov
adcl
add
cmp
movl
je
mov
mov
xor
xor
adcl
add
add
adc
negl
xor
mov
push
movzbl
adc
xor
xor
mov
and
mov
add
movl
adc
addl
xor
movl
xor
movl
cmp
movl
jne
movl
cmp
je
jmp
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
sbbl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
notl
mov
adcl
add
movzwl
mov
mov
sbb
movb
add
lea
xor
mov
addl
mov
mov
orl
xor
andl
sub
andl
mov
movl
or
push
jmp
and
add
dec
inc
cltd
mov
push
jl
pop
pop
jl
push
adc
pcmpeqw
add
push
push
xchg
fsts
pop
pop
into
pop
lods
lods
out
xchg
lea
xor
cld
outsl
fcomi
hlt
xor
ljmp
repz
cmp
xor
xchg
dec
shlb
jne
das
add
popf
nop
add
sbb
insl
sbb
pop
sub
mov
dec
popa
movsb
icebp
xchg
cmpb
in
lcall
out
ficomps
fistpl
push
lahf
adc
ss
inc
mov
sahf
push
fcmovbe
pop
mov
dec
mov
arpl
clc
jmp
cmp
ret
insb
dec
inc
sbb
cmpsl
jp
in
ret
mov
imul
dec
divps
xor
movsb
sbb
pop
js
outsl
jno
outsl
inc
or
icebp
ja
test
mov
popa
mov
push
push
popa
sti
divl
or
bound
test
in
test
repz
lret
aad
out
push
sar
mov
xchg
jl
mov
cli
jmp
insb
lcall
sub
mov
in
lods
push
out
push
dec
push
arpl
inc
jns
pop
in
jne
test
adc
jmp
stos
xchg
mov
cld
push
iret
icebp
mov
jl
repnz
sti
or
pop
push
sahf
or
loope
addr16
lods
jge
out
arpl
ret
popa
data16
sbb
fldt
inc
test
shl
pop
icebp
xchg
adc
enter
and
jb
icebp
insl
ja
out
cltd
and
xchg
mov
daa
push
fidivl
lea
cmp
mov
loopne
frstor
xchg
sub
jne
cmpsb
enter
jnp
shlb
enter
dec
jne
out
or
push
dec
hlt
roll
inc
pusha
loop
sbb
jp
fdivrl
stc
dec
mov
rcll
inc
insb
fiadds
jno
pop
mov
jl
test
pop
fsubr
arpl
adc
jmp
shrb
jb
fdivl
mov
cmp
fsubs
das
xchg
xchg
jbe
incb
out
xchg
or
dec
xchg
hlt
mov
adc
fwait
imul
repnz
push
and
and
sub
sbb
mov
in
mov
mov
jmp
iret
jbe
xchg
xchg
in
mov
jp
or
jmp
adc
jmp
mov
push
push
and
cmp
xor
lahf
lea
inc
mov
adc
xor
mov
lea
adc
cmp
pop
into
ja
inc
adc
fisubl
add
fcoms
cmp
or
cmp
ss
xchg
clc
lods
pop
out
mov
test
movsl
or
cwtl
jg
push
or
fdiv
sub
dec
out
sar
out
test
lahf
mov
jb
sbb
rclb
nop
fildll
mov
inc
clc
push
sbb
mov
cmpsb
lcall
push
mov
xchg
add
jg,pn
pop
ror
lea
insb
dec
sbb
jne
lret
sub
xorb
jmp
test
sbb
xor
sti
call
xor
cltd
iret
sbb
adc
cs
das
adc
cmp
cmp
dec
cmp
les
pushfw
jo
push
rcrb
adc
mov
ficomps
sbb
mov
sbb
xchg
insb
das
out
stc
mov
push
aad
adc
sub
pushl
push
out
push
mov
cmp
popf
nop
enter
push
jo
ret
js
sub
rcl
push
test
mov
aaa
addr16
aaa
or
sbb
repnz
adc
add
lea
addr16
test
lea
repz
mov
popf
insl
divb
and
movsb
fwait
pop
jmp
imul
adc
inc
or
test
adc
jbe
jno
mov
iret
mov
das
xor
movsb
popf
jmp
sub
push
daa
ljmp
inc
pop
xchg
sbb
jecxz
ljmp
out
sub
mov
test
mov
lret
cmp
add
sub
push
mov
sbb
aaa
loope
jge
stc
cmp
or
mov
inc
or
ljmp
test
ja
adc
and
xchg
aam
or
mov
lret
xor
cmc
pop
jno
sarb
adc
cwtl
inc
jle
fninit
lock
mov
lcall
dec
in
jl
clc
jbe
test
sbb
leave
gs
insl
push
lock
iret
mov
dec
mov
call
stos
sti
mov
popa
pushf
sbb
sub
loop
popf
stos
mov
xchg
mov
xchg
pop
stos
call
mov
in
jno
jbe
test
xchg
pop
sub
adc
movsb
sub
aam
inc
nop
repnz
dec
sub
pop
lods
mov
popf
adc
inc
test
fcoms
test
cli
outsl
or
mov
not
xchg
lods
mov
lds
repnz
adc
cwtl
data16
xorl
push
aad
mov
push
jp
mov
push
inc
cwtl
or
sbb
jns
jecxz
test
in
arpl
in
xor
pop
push
add
adc
push
jl
or
mov
inc
das
ret
push
lret
add
sbb
xchg
xchg
testb
or
cmpsb
sbb
data16
ffree
jp
fwait
xor
push
mov
xchg
mov
cmp
xlat
stc
and
movsl
mov
movsb
dec
lock
push
ret
dec
jns
ja
mov
mov
jb
subb
add
ja
sub
lds
add
divl
sub
shrb
insb
mov
testl
xchg
adc
sub
and
jmp
pop
loope
iret
push
cli
cmp
fisubl
dec
xchg
outsb
mov
sbb
leave
aaa
test
xchg
mov
sti
push
lret
add
adc
lret
repnz
add
mov
cmc
repz
adc
lods
push
das
push
xchg
je
inc
xchg
or
pop
pop
divb
insb
scas
mov
mov
mov
add
push
cmp
mov
xchg
lahf
xor
pop
mov
nop
push
in
and
leave
pop
adc
jle
mov
sbb
push
pusha
push
stos
psubusb
in
sub
and
fidivrl
mov
sahf
dec
pop
jnp
sar
hlt
and
popf
push
daa
stc
rcrb
imul
lods
hlt
mov
call
inc
int
fcomps
lods
mov
and
push
xchg
jnp
stos
push
fwait
das
cli
dec
jb
pop
out
pushf
mov
call
xchg
mov
loopne
jb
mov
out
addr16
imul
pop
push
in
dec
push
sti
adc
sahf
in
das
sub
test
cwtl
sub
fistps
mov
outsb
dec
xchg
push
sub
sbb
popa
insl
imul
jle
fdivrp
and
pop
mov
xor
mov
aad
inc
ss
and
fisttpl
jnp
popa
push
xor
or
loope
push
es
dec
sahf
mov
out
mov
push
jns
or
iret
xor
lret
or
cmpsl
or
add
push
xchg
or
mov
cmpsb
aad
pop
mov
inc
loopne,pn
cmpl
or
adc
mov
add
stos
inc
xor
lods
lods
hlt
pop
dec
roll
lods
test
cmp
movsb
sub
mov
ret
mov
inc
rorl
loope
jp
repnz
rcr
sbb
pop
pop
loopne
cmp
cmp
push
clc
mov
pushf
cwtl
rcr
pop
pop
jge
xchg
aas
xchg
and
fwait
cs
test
arpl
cmp
sub
dec
pushf
sub
cmc
js
and
lods
cmpsb
loope
insl
addr16
jae
adc
push
jle
dec
int3
rclb
xchg
aad
pop
jo
int
fs
pusha
dec
fistl
les
ficomps
flds
lods
into
in
jge
fisubl
adc
pop
fs
xchg
fwait
lcall
aas
xor
and
adc
leave
cmp
movsb
push
ljmp
add
popa
sub
jg
mov
mov
inc
adc
daa
outsb
insl
jg
add
insb
bound
stos
cmp
jmp
ret
push
cmp
rcrb
into
cmp
xor
scas
or
jo
sub
dec
mov
cmp
xchg
test
mov
faddp
cmp
or
xor
cmp
and
lcall
les
or
mov
incl
or
into
cmp
out
jge
pop
inc
ljmp
gs
xlat
mov
subl
addl
inc
jecxz
cmpsb
sahf
int3
mov
test
in
clc
mov
cmpsb
out
jno
mov
push
test
fchs
adc
testb
mov
fwait
pop
pop
xchg
fsts
pop
das
fxam
sbb
jl
xor
sbb
xchg
dec
arpl
and
mov
ja
push
mov
sub
fdivr
mov
adc
mov
imul
dec
adc
movsb
sub
push
pusha
add
pop
jae
ror
sbb
mulb
shrl
cmp
cmpsb
and
rol
xchg
movsl
sub
sbb
adc
scas
mov
adc
ja
aam
mov
pop
and
pop
jmp
push
clc
sbb
out
repz
vmwrite
lret
lahf
xor
fwait
aaa
cwtl
adcl
xchg
sbb
jge
pushf
repz
test
mov
cmp
repnz
pop
mov
xchg
out
inc
rcr
mov
cltd
dec
movsl
adc
ja
bnd
jno
push
aas
stc
idivb
xchg
xchg
and
leave
pop
pop
push
int3
xor
jg
inc
and
mov
xchg
adc
jl
inc
cmpb
xor
mov
or
imul
les
pmaxsw
cmpsl
and
mov
pop
mov
popa
iret
and
jg
mov
notb
push
or
jp
xor
sub
mov
mov
add
xor
and
jns
push
jno
sti
cwtl
mov
mov
stos
fisubs
jecxz
pop
test
or
pop
xor
adc
leave
inc
int
sarl
repz
inc
lret
shll
jge
in
faddl
imul
jmp
mov
out
dec
jle
ret
xor
ds
jp
pop
cmp
lds
lods
not
popa
negl
fstp
out
xor
xchg
idivb
outsb
jl
negb
testb
pushf
dec
cmc
mov
sbb
mov
rolb
sbb
mov
hlt
pop
jge
in
cmp
pop
adc
jle
mov
sbb
cltd
pop
ret
cld
jle
push
xchg
outsl
add
out
push
add
pop
nop
pop
call
cmp
iret
testb
pop
repz
mov
out
mov
cmp
xlat
add
jl
mov
dec
fs
stos
out
cmp
jecxz
adcb
adc
push
inc
push
cmp
and
xchg
pop
sbb
pop
add
add
insl
les
call
es
cli
mov
adc
inc
sbb
cmpsb
push
shll
mov
in
sub
dec
icebp
adc
sub
pop
add
lods
push
and
mov
sbb
lods
stos
xchg
pusha
cltd
pop
pop
jns
pop
sarl
dec
dec
leave
scas
mov
gs
mulb
cwtl
or
mov
mov
pop
movsb
push
or
fs
mov
mov
fistl
shlb
loope
lds
popf
add
jecxz
push
xchg
or
mov
repnz
mov
add
dec
push
dec
clc
pop
cmp
mov
pop
loopne
add
pop
xor
cld
or
xlat
mov
clc
int3
jecxz
roll
lds
scas
or
out
in
lret
pushf
add
lds
jnp
fmul
int
mov
out
icebp
movl
adc
mov
mov
mov
lock
in
out
mov
loope
sbb
sbb
dec
cmp
jg
test
insl
jl
jno
daa
mov
cmpsl
es
test
mov
insl
push
add
xchg
test
or
into
xchg
ret
pop
dec
popa
xlat
cltd
movsl
inc
and
gs
jne
mov
xchg
cs
inc
or
or
xor
jb,pt
pop
call
jecxz
push
fcmovnb
out
pop
movaps
or
nop
fimuls
stos
ja
outsl
xor
sbb
sub
jno
lcall
lds
mov
lcall
mov
and
cld
jno
ret
je
sti
pop
add
loopne
mov
jnp
sbb
cmp
push
enter
arpl
loopne
mov
sbb
push
push
pop
adc
out
sbb
sbb
rcrl
inc
cli
cmc
sbbl
mov
mov
sub
stc
sbb
pushf
pop
shll
fistps
in
popf
and
imul
sub
scas
jmp
jb
jecxz
inc
leave
arpl
shlb
outsb
pop
out
add
rcr
push
jecxz
mov
rcll
adc
js
das
mov
fxch
cwtl
push
adc
push
mov
jecxz
jl
mov
mov
fucomip
jle
cmc
pop
aaa
std
cmp
xor
cld
xchg
push
add
sub
lods
sbb
jb
jecxz
stos
sbb
cs
cmp
sub
rorb
andl
ret
outsb
push
xchg
insb
mov
push
jg
cli
lock
test
mov
xchg
je
sbb
sub
cmp
test
push
sti
inc
adc
push
and
nop
and
arpl
mov
je
dec
and
int
int3
jl
sub
push
mov
movsb
dec
mov
pop
and
nop
das
sub
and
push
xchg
cmp
push
push
iret
sarb
mov
adc
into
cmp
sbb
int
movsl
fsubrl
cmpsl
cs
aas
pop
movhps
cld
push
mov
mov
jmp
cmp
dec
loope
mov
iret
adc
jge
stos
loopne
int3
gs
pop
ss
in
sarb
pop
mov
mov
xorb
fsts
inc
popa
lods
pushf
mov
pop
cmpsb
pusha
mov
mov
data16
test
mov
into
ret
aaa
pop
das
sub
inc
negb
adc
or
xchg
addb
bound
inc
xor
movsl
aam
stos
mov
jnp
popa
pop
mov
cmp
jbe
nop
decb
test
ret
sarb
ljmp
xor
push
js
jb
ret
popf
and
pop
dec
loop,pt
es
ljmp
xor
addr16
in
fnstsw
stc
loope
xchg
in
push
cld
jae
jnp
or
push
lret
mov
mov
jnp
das
push
outsl
push
out
arpl
inc
mov
jb
inc
lods
or
pop
add
sahf
addr16
in
mov
int3
and
cli
cmp
mov
mov
and
cli
inc
stos
sahf
sbb
enter
fstp
adc
pop
scas
hlt
aas
fs
add
push
xchg
cmp
add
mov
sar
push
sahf
orb
scas
insb
and
push
push
stc
lahf
ror
add
movsb
sbb
mov
push
sub
sbb
fistpl
lea
inc
scas
loop
rcl
push
loop
popf
cs
pop
pop
js
fucomip
out
push
adcw
es
or
add
call
lods
inc
les
movsb
lcall
fsubl
mov
mov
cmc
push
roll
rol
and
rolb
cmp
jg
dec
adc
loop
lock
dec
stc
sbb
mov
mov
aad
cmp
icebp
add
push
push
mov
fdiv
push
test
inc
push
cmpsl
jge
in
cmp
jae
inc
mov
ljmp
ja
test
pop
xchg
xchg
pop
in
cltd
push
call
push
scas
ffree
fmull
jge
popa
sub
outsb
adc
movsl
xor
inc
sarl
mov
add
fwait
dec
jne
pinsrw
add
cli
sbb
cmp
cmc
fmull
in
push
dec
js
push
rol
into
cmp
scas
testl
shlb
pop
mov
xor
bound
xlat
dec
add
test
and
push
inc
faddp
sub
adc
shrb
icebp
cmpsl
push
fdecstp
mov
ds
ret
cld
cmp
jp
js
jecxz
push
stos
cwtl
arpl
push
int3
mov
cmp
lcall
icebp
sub
xchg
int3
push
mov
xchg
mov
pop
jo
insl
nop
jns
movsb
leave
jg
ds
fistps
add
and
mov
sub
push
push
stos
bound
outsb
fsubl
in
ret
mov
xor
mov
xor
frstor
dec
xchg
outsb
cwtl
mov
push
push
into
lods
mov
adc
mov
cmp
repnz
repnz
add
divl
imul
testl
pop
pop
icebp
push
cmpsb
addr16
push
xor
adc
xor
into
and
sahf
mov
subb
inc
not
scas
inc
add
sub
push
aad
mov
jo
jns
sbb
dec
cmp
mov
push
jge
pop
pop
cmp
cli
ss
jg
out
mov
mov
fnstsw
repnz
call
scas
mov
adc
aaa
mov
pushf
and
xor
pop
cmc
cmpsl
mov
sub
out
push
lods
push
sarb
cmp
ja
sub
push
or
mov
xor
daa
xor
lea
mov
test
cli
dec
jns
push
xchg
xchg
stos
add
ja
mov
mov
lahf
push
xchg
jo
mov
es
xchg
ss
mov
cmp
push
ds
push
mulb
push
add
dec
dec
inc
lds
push
jg
or
or
sbb
jmp
stos
sub
jmp
lods
lea
add
adc
jmp
jg
fildl
stos
sub
loopne
sub
or
into
or
cmp
jb
pop
mov
inc
sbbl
bound
pop
imull
push
pop
mov
push
fistpll
jmp
push
add
jnp
enter
pop
adc
inc
insl
scas
or
call
icebp
cmp
inc
lods
jge
push
jmp
jb
sub
lods
pop
pop
lahf
hlt
sub
mov
sub
push
neg
popf
loop
jle
dec
sbb
ret
mov
rcrb
mov
adc
fimull
clc
and
mov
ret
pop
sub
sti
mov
sbb
ret
mov
mov
mov
push
cltd
dec
mov
lods
int3
sbb
mov
xchg
jnp
mov
pop
mov
cwtl
pop
sbb
cmp
sar
jle
cmpb
mov
mov
xchg
jle
pop
iret
xor
pop
jo
add
jge
inc
mov
cmp
jp
push
jb
rclb
mov
leave
mov
fwait
aam
aas
add
js
pop
mov
daa
mov
idivb
lret
xorb
sahf
cmp
out
xor
mov
mov
sub
xor
xchg
cmpsb
add
ja
mov
out
lcall
jbe
cs
jb
cltd
punpckhdq
mov
cs
inc
stos
fstp
sahf
mov
mov
inc
rcll
push
insl
ror
cmp
aaa
push
cltd
cld
sti
xchg
adc
out
sti
bound
mov
and
es
jmp
cmp
adc
das
and
push
bound
imul
mov
push
test
je
cmp
cli
push
and
sub
xor
lret
adc
cwtl
mov
sbb
mov
xchg
push
test
push
push
xchg
sub
jmp
jg
xor
xor
xchg
neg
xchg
sbb
fdivs
push
sbb
sti
xor
loopne
push
push
out
ja
shll
ds
dec
push
xchg
dec
call
push
clc
inc
stos
and
aad
popa
dec
mov
sti
cmp
push
rcrl
icebp
or
pop
push
repnz
mov
popa
inc
cmp
jle
mov
mov
cmp
in
test
xchg
frstor
out
roll
xor
xor
jae
adc
sti
shll
mov
push
inc
pop
mov
dec
sub
movsb
push
and
pop
mov
notb
test
cs
lods
jne
notb
fisttpl
xchg
cmpsl
sbbb
mov
fcmovnb
mov
pushf
loope
jne
lret
ss
fwait
sbb
dec
inc
add
mov
or
xchg
add
xchg
data16
mov
xchg
adc
sub
mov
xchg
or
es
xchg
pusha
mov
movsl
inc
push
push
jle
push
jbe
inc
mov
add
and
dec
dec
xor
pop
dec
inc
repnz
sub
fsubr
xlat
inc
cmpsb
mov
sbb
mov
stc
add
ss
cmp
imul
insl
in
enter
jecxz
cmc
cwtl
lock
aad
stc
stos
cmpsb
test
nop
mov
cmpsl
movsl
shll
sbb
popa
movsb
out
cld
icebp
sbb
jno
cmp
sbbb
sub
arpl
mov
mov
inc
test
push
repnz
mov
gs
sub
bound
jae
mov
jmp
add
scas
fcmovbe
xor
lahf
jb
add
ja
aaa
add
push
xchg
xchg
mov
fidivrl
lahf
inc
adc
lds
jmp
and
insl
adc
mov
xchg
rolb
insl
xor
push
jge
sub
xor
lods
aas
inc
neg
movsb
enter
ret
push
dec
clc
and
pop
add
ljmp
pop
mov
aam
je
jl
loop
push
jge
sbb
popa
fistpl
popf
mov
jmp
cmp
pushf
pop
inc
test
push
adc
add
mov
fs
sbb
and
sub
xchg
mov
stos
ja
call
stos
lcall
xlat
pusha
call
sub
ret
notb
loopne
mov
adc
xlat
mov
in
add
and
sub
mov
les
out
pop
push
out
mov
ror
sahf
mov
lret
mov
cmpsl
addr16
jl
pop
dec
sti
fiaddl
arpl
add
sub
mov
cmpsb
dec
fldt
cltd
xchg
mov
cmc
xor
xor
outsl
push
int
int3
arpl
cmp
fsub
lods
xchg
inc
dec
xchg
dec
mov
adc
sbb
mov
jbe
jae
lcall
inc
xchg
add
in
or
cmp
add
sub
fs
pop
ret
or
inc
pushf
xor
cs
cwtl
repnz
in
out
and
xchg
sti
jns
int3
sbb
mov
adc
repnz
inc
scas
imull
sbb
nop
mov
and
adc
fisttps
pop
push
mov
cli
ss
outsb
inc
push
dec
cmp
aas
push
xor
data16
cs
jb
popa
xchg
jl
xor
test
loope
adc
cmpsl
pop
ret
mov
mov
or
or
mov
fcmovbe
roll
inc
mov
adc
movsb
cltd
cwtl
add
pmaxub
mov
pop
std
mov
xchg
xchg
repnz
insl
cmp
es
rorb
jle
iret
dec
in
mov
adc
pop
mov
adc
xchg
ljmp
cmp
mov
clc
fidivrl
in
sub
insb
adc
mov
pop
add
in
push
ret
in
sbb
or
aas
and
or
push
int3
icebp
cmp
pop
xchg
sbb
mov
cld
es
inc
aaa
fmul
sbb
add
je
ret
push
int
pop
sti
mov
mov
lods
xchg
enter
cmp
loop
rcrl
lret
pop
lret
pop
cmp
mov
pop
mov
mov
mov
cmp
inc
jb
insl
lahf
push
xchg
jg
or
loopne
sub
out
gs
and
xchg
int3
sbb
add
mov
call
fwait
mov
icebp
sbb
stc
jl
jb
clc
cwtl
pushf
outsb
dec
insl
out
cli
sub
hlt
pop
loopne
inc
test
jmp
cmp
adc
cli
lock
dec
sub
mov
xor
mov
add
mov
insb
and
pusha
frstor
and
pop
repz
dec
pop
pop
dec
inc
lret
les
mov
inc
outsb
push
in
stos
je
push
cmp
cmp
cmp
pop
iret
sbb
and
lcall
lds
sbb
jecxz
dec
pop
lods
jmp
push
cld
pop
inc
dec
or
arpl
int
ds
fistl
stos
sbb
lea
inc
add
sahf
ss
ljmp
add
push
mov
loope
in
sbb
popf
ficoms
shll
adc
xor
ss
jne
xor
mov
hlt
push
into
test
mov
daa
pop
pop
sbb
and
sub
pop
xchg
loopne
es
lds
movsb
mov
jl
sbb
mov
test
cmp
mov
shlb
in
outsb
mov
fmul
rorb
push
in
lcall
mov
jecxz
jnp
scas
lahf
jno
mov
fldenv
ljmp
pushf
lock
in
stos
push
aaa
ret
and
xor
and
jecxz
enter
mov
pop
movsl
loope
mov
push
pusha
insb
insl
mov
xor
push
imul
pop
and
negb
or
cmpsl
push
int3
adc
pusha
adcb
cld
lcall
xor
push
inc
push
push
in
filds
imul
loopne
stos
sbb
pop
or
xor
pop
rcll
sbb
xchg
subl
cli
push
cwtl
sbb
int3
inc
xchg
mov
xor
test
push
cli
jg
mov
dec
adc
mov
dec
push
xchg
or
jmp
pushaw
mov
mov
popa
outsl
je,pn
icebp
push
js
loop
into
sahf
cmp
iret
push
lret
sub
nop
leave
adc
jmp
inc
loopne
and
in
ljmp
pop
push
imul
cmp
dec
in
xchg
cwtl
mov
pushf
cmc
aas
shll
addr16
mov
ret
push
dec
mov
cmp
stos
lcall
pusha
cmp
fsubrs
mov
push
test
cmpsl
mov
fidivl
pop
adc
lret
shrb
jne
imul
mov
jle
dec
cmpsb
popf
push
cmp
lea
mov
or
js
xor
fs
xchg
or
mov
mov
jae
stc
lret
cwtl
xor
stc
loop
sar
outsb
adc
mov
jle
pop
dec
dec
cmc
xor
scas
subl
jne
mov
pop
push
inc
loopne
mov
jbe
lcall
jmp
pushf
or
lret
cmpsl
pop
sub
push
int
mov
jo
je
mov
ds
xchg
fisttpl
into
jmp
int
mov
int
dec
xorl
lds
jbe
inc
cwtl
sub
inc
mov
aad
popa
leave
cmpb
popaw
roll
lret
lahf
jge
dec
std
aad
mov
sub
aam
pop
sbb
sub
call
and
sbb
push
adc
push
sub
dec
dec
jmp
or
xor
clc
mov
push
sti
mov
jbe
outsb
into
mov
test
or
lods
sti
pop
outsl
xor
jbe
hlt
push
lahf
mull
clc
lcall
je
adc
mov
pop
push
data16
fwait
xchg
push
mov
xor
adc
pop
in
mov
jmp
arpl
jae
loopne
xor
jle
mov
pop
cmc
iret
dec
and
nop
cmp
icebp
jle
mov
jne
pop
push
sub
pop
cmp
mov
and
cld
cmp
imul
mov
xlat
push
ljmp
pop
jbe
dec
ja
jns
mov
mov
xlat
push
push
imul
adc
pop
pop
fcoml
jle
cli
fisttpl
filds
lea
pusha
and
popf
sub
ficomps
cmp
fbld
jae
jmp
mov
insb
les
add
jae
push
pop
out
jne
xchg
int3
mov
pop
sbb
out
addl
mov
call
xor
sbb
inc
dec
pop
lret
mov
inc
pop
cld
mov
adc
ret
mulb
enter
or
dec
mov
dec
sbb
mov
add
ficoml
xorl
fistl
jle
scas
jmp
pop
fists
and
and
mov
add
inc
cmp
push
jo
jae
cli
mov
mov
push
mov
sbb
adc
out
mov
inc
add
mov
pop
std
or
outsl
imul
mulb
cltd
stos
mov
mov
mov
xor
mov
cmp
inc
xor
sub
fnsave
adc
lea
test
or
cltd
es
dec
test
repz
push
mov
ds
and
icebp
push
and
aaa
mov
sub
jmp
pop
and
jae
pop
out
push
hlt
mov
jne
dec
sbb
push
adc
dec
xchg
inc
js
mov
jg
movsl
cmp
push
ret
popf
cmp
aaa
mov
mov
cmp
cmpsl
clc
pusha
xchg
push
add
inc
xor
sti
xchg
push
daa
dec
das
movsl
adc
xchg
jge
notl
xchg
aad
pop
jns
mov
inc
push
fcompl
outsb
mov
jae
mov
es
mov
mov
or
data16
lret
xchg
xchg
je
std
enter
incb
jge
out
push
mov
jo
lret
mov
ss
pop
sub
pavgw
les
fs
xchg
pop
dec
std
sub
mov
ficompl
mov
mov
add
sarb
dec
mov
inc
mov
xchg
jge
int
ja
mov
sbb
ja
std
mov
scas
xor
jmp
dec
mov
cmp
inc
arpl
jge
iret
cs
aam
scas
mov
int
jg
sahf
xor
push
out
add
sahf
aad
sub
push
xchg
outsb
sub
fnsave
fistpll
outsb
fs
or
jo
mov
fadd
cld
out
xor
xor
addb
push
dec
cwtl
push
xchg
push
pop
xor
loope
movsb
pop
and
jns
test
dec
aas
sub
push
fbstp
sub
pop
pop
stc
das
fnstenv
das
std
stos
imul
cmc
shll
shll
mov
sti
push
and
jecxz
adc
movl
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
pushl
call
mov
dec
mov
jmp
push
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
inc
xor
sub
mov
movl
push
xorl
add
jmp
mov
notl
mov
notl
inc
cmp
movl
jb
adc
mov
xor
add
jmp
andl
mov
and
mov
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xorl
mov
add
sbbl
movzwl
xorl
mov
negl
mov
orl
movzwl
xorl
xor
add
mov
mov
inc
mov
cmp
movl
jne
mov
movl
mov
decl
xor
add
andl
mov
dec
mov
xor
andl
add
movl
mov
not
movl
movl
movl
mov
mov
movl
mov
jmp
mov
add
mov
andl
xor
xor
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
movl
mov
lea
mov
mov
mov
lea
movzwl
sbb
mov
mov
andl
mov
add
mov
negl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
orl
mov
mov
add
mov
lea
add
mov
mov
orl
mov
lea
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
sbbl
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
jmp
sarb
jae
dec
bound
cltd
mov
jl
pop
pop
jl
mov
sub
jno
cmp
jnp
stc
dec
cmp
test
fstl
adc
pop
test
in
les
mov
cltd
cmp
dec
sub
popf
lcall
lods
push
divb
repnz
jns
mov
mov
push
dec
das
jnp
inc
push
daa
dec
sbb
jmp
dec
inc
aaa
test
fs
ja
xor
ret
and
and
mov
add
mov
sub
sbb
sahf
lret
jo
idivl
test
icebp
scas
pusha
jg
outsb
pop
jno
scas
movsl
into
mov
mov
inc
push
sahf
dec
xor
test
sti
sub
imul
sbb
mov
in
pop
pop
cmpsl
das
pop
cmp
rolb
add
xchg
aaa
or
hlt
dec
fs
xor
and
xchg
mov
fnsave
xor
add
mov
cmp
pop
lret
adc
in
pop
jle
mov
xor
fistpll
ficoml
das
or
mov
add
and
jmp
cmp
adc
stc
insb
cltd
int
inc
psubq
ljmp
xchg
movsb
cmc
cmpsl
fcomps
in
test
mov
sbb
xor
int3
inc
iret
lret
fildl
and
aas
add
out
sbb
imul
dec
imul
jns
push
push
mov
stos
mov
xchg
ja
push
outsl
pop
adc
push
adc
lock
jb
divl
ss
test
arpl
pop
popa
cmpsl
xorb
mov
hlt
imul
xchg
xchg
dec
mov
cwtl
aaa
popa
insb
in
dec
xor
sub
jns
aas
push
fs
push
outsb
jo
shlb
cmpsb
inc
and
add
lahf
adc
shll
decl
xor
daa
dec
sub
xchg
loopne
cmp
sbb
adc
xchg
shll
cmp
adc
ficomps
ficomps
xchg
or
and
mov
and
push
dec
pop
jb
add
insl
cmp
cmp
sub
pop
cmp
mov
xor
out
mov
out
cmpsl
sub
xchg
xchg
test
push
pusha
sub
lret
or
jns
out
xor
add
add
jge
outsb
loope
adc
sub
lret
pushf
loop
test
mov
mov
inc
cltd
fisubs
pushf
mov
repnz
xor
mov
mov
mov
mov
fisubrl
push
pop
add
jbe
xchg
rcrl
int3
add
loopne
in
cmp
mov
das
lret
xchg
lock
clc
sub
cmc
xrelease
loopne
mov
add
insl
lds
mov
lea
ja
scas
mov
shll
mov
out
xor
push
sub
test
jg
fiadds
cli
dec
loopne
push
mov
clc
movsl
inc
mov
sbb
outsb
sub
daa
xchg
loopne
adc
xor
fnstcw
pop
pop
jae
pop
add
inc
js
das
jb
jp
and
fs
fwait
mov
sub
sub
movsl
jl
dec
data16
xor
mov
pushf
int
inc
lods
test
mov
and
popf
cmp
fstps
mov
push
add
add
push
call
bound
inc
push
repnz
pop
mov
das
daa
adc
cmp
xor
or
imul
sbb
sar
push
arpl
mov
dec
dec
dec
mov
dec
push
jbe
insl
pushf
pop
jle
dec
icebp
and
pop
aaa
and
xchg
ds
sbb
dec
out
ljmp
into
test
ja
setnp
clc
mov
sbb
dec
mov
jbe
xor
pusha
fistpl
out
fcoml
loope
jae
out
xor
inc
enter
sbb
repz
xchg
xchg
inc
popf
call
sub
push
mov
jno
xchg
mov
xchg
fcomps
xor
or
push
in
fsubr
lret
or
dec
imul
mov
mov
inc
fstl
arpl
inc
stos
mov
inc
insb
adc
inc
mov
cmp
pop
sbb
stc
cmp
pushf
aaa
scas
out
jecxz
pushf
icebp
mov
cwtl
pop
and
push
jb
iret
pop
icebp
popf
test
out
xor
ja
xchg
orb
popf
in
leave
std
std
lahf
bound
inc
flds
rcl
adc
inc
lods
pop
push
popf
movsb
arpl
xchg
pusha
cs
test
fsubp
orb
dec
and
sub
bound
stos
stos
incb
ja
fildl
scas
add
imul
or
cmp
pop
es
and
lock
arpl
mov
pushf
int3
cmpsl
push
in
in
pushf
es
mov
xor
imul
mov
xor
shl
ret
jg
pop
fsubs
imul
xchg
mov
imul
mov
sub
sarb
or
push
or
cmpsl
call
jb
cltd
and
aam
insl
xchg
imul
or
xor
lock
leave
adc
rclb
loopne
sti
mov
mov
and
jge
inc
jp
clc
pusha
out
and
inc
imul
inc
loope
sti
sbb
shlb
and
mov
pop
cmp
out
or
icebp
pop
xor
adc
lock
in
ficompl
mov
subb
loopnew
jnp
lds
jecxz
bound
or
push
xor
negl
inc
or
jmp
pop
popf
xor
aam
jb
mov
push
pushf
cmc
cmp
pusha
push
push
xor
jo
fdivl
popa
cltd
dec
sub
pop
mov
inc
idiv
addb
sbb
or
jmp
adc
ret
gs
shll
lea
xchg
add
jnp
cmpsb
mov
repz
hlt
cmp
pop
sbb
mov
cltd
js
outsl
out
aas
stos
cmp
insl
jg
jo
jo
cmp
inc
fwait
sub
dec
sbb
and
or
je
test
lock
call
dec
push
scas
jp
cmp
push
sti
adc
mov
mov
test
add
cmp
jbe
cmpsl
mov
out
cmp
fldcw
mov
inc
inc
and
lahf
clc
ret
test
call
es
dec
inc
ret
jmp
push
pop
pop
ss
jp
int3
dec
lcall
jmp
jne
out
lock
xor
enter
jno
pop
aas
les
pop
add
orb
filds
push
xor
test
shlb
bound
sub
mov
inc
test
and
inc
insb
mov
xlat
sub
sbb
mov
jmp
jb
shll
pop
in
sbb
js
cmp
mov
icebp
scas
sub
in
mov
and
mov
in
xor
mov
hlt
testb
enter
pop
loopne
sub
scas
sbb
mov
mov
inc
es
xorb
rcrb
lds
ffreep
lret
add
sbb
lods
lock
loope
lds
push
imul
or
pop
mov
cmpsl
arpl
adc
loopne
dec
fistl
popa
popa
das
mov
repz
sub
jae
shl
ret
push
inc
sti
inc
mov
fwait
mov
jno
rorb
or
dec
add
call
das
or
push
adc
dec
clc
mov
inc
pop
adc
icebp
cmpsl
add
fstpt
push
decl
adc
repz
mov
mov
mov
idivl
mov
sbb
sbbb
mov
cwtl
cmpsb
vhaddps
push
sub
fldenv
je
cmp
loopne
icebp
and
dec
pusha
call
sbbb
cmp
fnstsw
mov
std
mov
jbe
das
lods
mov
mov
frstpm(287
arpl
dec
cmp
mov
out
and
push
ds
out
push
data16
push
popa
les
or
pusha
fildl
outsl
in
ficomps
jbe
ja
lock
mov
outsb
fnsave
xor
mov
aad
push
pop
dec
xchg
fldt
sahf
ficompl
push
cmp
stos
cmp
addl
add
test
push
mov
and
js
notb
enter
sub
fldcw
jo
push
and
fs
xchg
stos
jecxz
dec
adcl
xor
push
in
fsubrl
mov
sbb
into
out
fwait
out
sbb
insb
das
jl
mov
arpl
pop
clc
inc
popf
cli
hlt
divl
push
repnz
mov
pop
loope
sub
adc
fisubl
pop
fisubrl
std
mov
sub
test
in
jecxz
dec
lods
lea
mov
cmp
aas
bound
dec
xlat
sbb
push
adc
jne
ds
or
xchg
fadds
mov
xor
push
push
jmp
out
imul
sbb
cmp
ja
sbb
mov
rcrb
inc
and
jecxz
xchg
cmpsb
sbb
aaa
out
sbb
adc
adc
scas
push
addl
pop
pop
pushf
aam
lret
insl
loop
enter
adc
pop
mov
movsb
ret
and
add
lcall
repz
xor
lock
xchg
nop
or
xchg
ret
pop
cmp
es
add
and
xchg
sti
arpl
dec
data16
push
push
push
ljmp
ljmp
mov
frstor
test
lock
mov
inc
mulb
xlat
push
int
mov
outsb
stos
cwtl
inc
cmp
pop
sbb
leave
pop
and
sub
imul
cli
xor
xorl
out
jbe
mov
xchg
scas
add
and
or
subb
clc
sbb
in
cld
add
add
incl
lea
divl
jb
insl
adc
or
or
fmull
xor
jno
leave
into
scas
mov
lcall
adc
or
imul
out
mov
in
jle
lcall
mov
cmp
stos
cmc
dec
loope
cmp
sbb
jmp
jg
xlat
add
jmp
pushf
shll
loope
lods
int3
add
push
outsl
pop
in
mov
fsubl
gs
pushf
call
jo
jbe
inc
ret
add
in
push
dec
cmpsb
push
cli
xor
rol
imul
add
inc
adc
push
ja
push
aas
dec
add
fldt
movsl
jae
lcall
dec
into
fcmovbe
cli
inc
pusha
sti
loopne
scas
pushf
scas
lret
lret
cld
aad
sub
into
movsb
orb
jl
ficomps
xor
jne
xor
roll
fldenv
shll
test
fbstp
lcall
mov
fldt
arpl
loop
or
mov
ljmp
cmp
and
sbb
outsb
test
xchg
cmp
mov
data16
mov
and
xorl
outsl
loop
xchg
cmp
inc
push
mov
cld
mov
repnz
in
mov
into
mov
das
pop
arpl
add
xor
jns
lcall
push
jp
or
mov
push
push
call
daa
rep
test
push
adc
cmp
aaa
les
mov
movsl
sbb
imul
out
jnp
addb
jnp
pop
pop
mov
mov
mov
scas
or
and
xchg
push
jae
jle
and
cmp
jecxz
jle
loopne
fadds
cmpl
jns
or
jecxz
in
pop
clc
push
je
xor
push
sub
jo
mov
dec
pop
js
dec
jp
xor
sub
fs
std
lret
sbb
pop
test
test
cmp
add
push
mov
mov
rolb
and
out
fsub
daa
movsb
and
jmp
jae
xor
pop
sub
leave
popf
xchg
mov
ror
sub
fs
gs
div
repz
mov
rcrl
cltd
sbb
xor
xor
pop
movsb
dec
cmpsb
mov
ficompl
jne
cld
and
cltd
and
repnz
inc
mov
sahf
lock
jae
cs
cmp
sub
pushf
add
mov
inc
cld
xchg
int3
mov
jne
shl
int
cmp
test
xor
push
cs
mov
gs
xor
xchg
js
mov
dec
cmp
cli
cmc
xchg
jmp
ret
insb
inc
push
repnz
jb
mov
pusha
or
cltd
lds
dec
rclb
pop
cmp
cwtl
fimull
pop
mov
filds
or
loop
ficoms
jge
movsl
xchg
ljmp
cmovb
sbb
ljmp
cmc
and
sbb
fsubp
mov
pusha
inc
adc
cmpsl
adc
and
pushf
fcoml
push
push
test
leave
outsb
push
shlb
mov
push
xchg
out
jno
and
fs
loope
mov
push
cmp
arpl
mov
inc
push
dec
jge
mov
mov
push
pop
adc
jmp
mov
push
outsb
loop
fcoml
jmp
or
cs
pop
push
inc
test
pop
adc
push
push
insb
add
xor
fstpt
lds
bound
mov
lea
data16
jae
shll
inc
xorb
or
dec
xchg
sub
imul
sbb
fisubrl
sub
and
mov
repz
cmp
pop
add
pushf
inc
push
lret
in
or
ja
push
add
jp
lahf
movsl
das
jmp
cmp
and
addl
push
push
mov
jl
adc
sub
imul
xor
mov
push
jmp
xchg
add
ficomps
xchg
popa
les
ret
mov
push
loope
arpl
dec
lret
int
in
or
insb
inc
lret
inc
testl
rolb
push
inc
sbb
rolb
shlb
enter
push
cmc
cmpsb
mov
mov
and
sahf
mov
add
and
mov
sbb
scas
pop
ret
sbb
mov
cmp
push
sahf
fnsave
adc
dec
xor
add
and
out
sub
fidivrs
dec
xchg
mov
cmc
push
adc
loop
pop
cmp
aad
loop
inc
cmp
inc
aam
movsl
push
xor
pop
mov
add
cmp
scas
dec
cmpl
and
lcall
sbb
mov
ja
adc
into
jmp
scas
dec
hlt
loope
sbb
das
nop
xchg
lcall
push
mov
pusha
add
bound
loope
push
pop
cmp
cld
cld
fstps
jbe
jo
adc
and
lock
movsb
loope
or
mov
add
je,pn
movsb
insb
int3
adc
inc
sbb
mov
in
dec
pop
je
sbb
mov
mov
ljmp
std
enter
flds
repz
sub
negl
cmp
push
and
dec
inc
cli
mov
js
cli
jns
mov
push
or
push
jmp
cmpl
loop
roll
jle
out
and
jg
push
sub
xchg
rcrb
ret
sub
pop
and
adc
insb
cmovne
mov
pop
loope
jmp
fbstp
push
inc
repz
xchg
daa
cmc
out
mov
out
cli
mov
adc
test
shlb
test
xchg
out
jle
lret
stos
jb
sub
push
mov
ror
fs
xchg
or
sbb
int
out
pushf
mull
inc
xchg
fs
rorb
adc
mov
sub
mov
fs
mov
sub
mov
sub
fcmovne
xchg
sub
cmp
frndint
sbb
xor
addr16
jbe
mov
xor
testl
add
or
sbb
insb
jns
in
xchg
dec
cwtl
les
aaa
mov
lods
cli
mov
call
in
push
and
mov
inc
into
dec
xchg
push
aas
pop
out
mov
cs
repz
ret
out
push
fld1
lret
adc
dec
xchg
jns
sbb
ret
fmull
mov
out
pop
idivl
inc
pop
mov
xlat
lods
cmp
test
addr16
pushf
pop
in
sti
lock
es
ret
in
decb
bound
inc
aaa
jge
adc
repnz
scas
and
rcl
adc
adc
mov
cmc
dec
jg
je
dec
cmp
mov
push
outsb
adc
std
fcmovnb
mov
clc
out
call
in
fisttps
push
xchg
sbb
out
imul
cmp
jno
jl
iret
cmp
movl
add
jecxz
pop
andl
and
leave
mov
mov
add
xlat
das
cmp
pop
pop
movsb
mov
cmpsl
xchg
aam
pop
fldcw
mov
fcmove
mov
incb
nop
shlb
mov
test
fidivs
dec
shr
adc
stos
dec
or
inc
pop
or
cmp
jb
cmpsb
cmpsb
int
movsl
sbb
jl
sbb
loop
call
lcall
dec
int3
out
jb
in
ficoml
aad
std
xlat
in
and
mov
jo
xor
repnz
adc
jno
push
push
add
fimull
xlat
imul
adc
inc
cs
aas
push
test
or
jne
dec
sub
dec
fidivs
mov
rol
xlat
int
jo
add
into
stos
scas
call
pop
cwtl
sbb
cmpsb
add
jecxz
fdivl
je
pop
cmp
or
xchg
mov
xchg
lds
test
fdivl
shl
aam
inc
enter
div
ficoms
inc
sub
mov
jg
cmp
push
mov
xor
jnp
ss
fcomip
xchg
add
fs
sbb
loop
popf
orl
lcall
es
push
int3
popf
mov
adc
xchg
push
xor
add
repz
cmp
pushf
stos
mov
imul
cmc
mov
xor
xchg
mov
inc
xlat
leave
stos
stc
fdivrs
adc
cmp
mov
pop
adc
es
cwtl
in
mov
pop
push
dec
xchg
mov
sbb
popf
mov
push
inc
mov
es
xchg
das
lock
gs
shr
cmpsb
leave
daa
arpl
jb
clc
cwtl
testl
cmp
dec
adc
add
sub
mov
outsb
insb
pushf
xor
mov
dec
or
lret
cs
iret
movsb
xchg
sub
aam
inc
xchg
data16
or
addl
mov
pop
inc
mov
dec
mov
ds
repz
loope
clc
pushf
idivl
cmp
inc
ds
add
aaa
icebp
adc
sub
xor
mov
pop
sar
push
leave
leave
and
mov
mov
cltd
inc
jae
shrb
push
aaa
jge
jp
ficoml
std
sti
and
pop
mov
sti
xor
popf
add
mov
xor
and
sub
sub
pushf
adc
cs
add
mov
rorl
stc
mov
or
outsb
mov
pop
mov
xchg
imul
xchg
jo
insl
ja
sbbb
lcall
sti
xchg
jg
std
out
xor
stos
scas
pop
mov
cmp
sub
add
xchg
pop
jo
mov
sbb
js
jno
pusha
cmp
pop
dec
das
pop
repz
mov
jno
aaa
cld
lods
xchg
inc
pop
insl
out
adc
jmp
stos
pop
inc
shrl
bound
loop
pusha
xorb
cltd
push
and
push
or
push
sbb
call
lret
adc
addl
lds
and
cmpsl
or
movsb
jae
xchg
movsl
push
out
lcall
mov
cli
jl
cs
lock
cltd
call
sahf
xchg
lds
fldenv
jo
jnp
pop
into
shrb
pop
stos
and
and
sub
stos
call
inc
arpl
jo
adc
adc
inc
arpl
xor
scas
ret
inc
jo
movsb
in
fwait
lods
dec
repnz
dec
dec
into
cmp
arpl
imul
adc
pop
mov
dec
fucomp
call
leave
fs
dec
xchg
into
mov
mov
cmp
out
inc
cmp
push
aad
sub
les
add
scas
out
inc
jle
adc
pusha
int3
push
call
stc
scas
xchg
cwtl
cmpl
fs
hlt
jne
aad
cmc
imul
movl
push
or
addr16
pop
fnstcw
adc
mov
xchg
repnz
aam
roll
pop
xor
fsubrl
fsts
clc
or
push
and
shlb
add
data16
data16
mov
or
nop
jo
xor
jno
lret
enter
sub
fmuls
loopne
cmp
clc
imul
pop
lahf
inc
out
insl
and
cmpsl
popa
in
xchg
add
add
lods
jl
pusha
testl
das
dec
xchg
pop
xor
push
add
out
sbb
aas
scas
dec
cli
xor
push
bound
cmc
sub
xchg
push
jl
test
stc
mov
int3
xlat
mov
inc
jo
cmp
daa
xchg
and
dec
inc
sub
stc
jl
jge
cwtl
cltd
enter
out
push
movsl
push
lcall
sbb
std
mov
nop
pop
cmp
fstl
mov
ss
mov
xor
nop
int
sub
jb
mov
inc
cwtl
test
ficompl
aad
mov
xor
bound
iret
cs
enter
icebp
pushf
mov
mov
jmp
adc
fistpll
popa
lahf
shll
sbb
jmp
xor
xor
mov
jae
cwtd
pushf
call
xchg
push
add
sub
add
and
in
pop
mov
sbb
shl
push
cmpsb
sub
jbe
add
mov
dec
jmp
adc
push
and
lret
or
add
or
cli
gs
mov
in
xlat
insl
pushf
lods
inc
lds
xchg
xchg
fucomi
mov
movsl
push
mov
mov
mov
sub
push
push
and
lcall
stos
test
ja
jne
jo
xchg
les
lea
les
push
fidivrl
or
xchg
add
adc
or
das
fstpl
xor
test
xorl
movsl
arpl
popf
cmp
push
jns
mov
imul
cld
add
jno
in
clc
iret
cmpsb
jecxz
mov
popa
pop
lcall
inc
mov
sti
decb
loope
xlat
icebp
jae
test
aad
or
lods
jle
insl
pop
iret
test
jnp
les
in
repz
add
or
sarl
adc
dec
fwait
sub
in
cmp
xlat
ljmp
in
adc
xor
inc
movhps
jo
and
rcl
arpl
xor
or
mov
xchg
fidivrl
hlt
jge
cmpsb
shrl
fists
push
js
push
sbb
clc
mov
add
out
movsb
pop
xlat
push
imul
ja
adc
xchg
test
scas
ficoml
movsl
ljmp
push
nop
jg
lahf
test
ror
imul
bound
add
in
and
movsl
lods
stos
arpl
daa
enter
push
xchg
int3
push
repz
sub
jg
scas
test
dec
cld
in
scas
mov
cmp
insl
and
push
or
or
pop
out
jo
mov
ret
cmpsl
cmp
xchg
in
insb
inc
cmp
sub
pop
push
inc
aaa
mov
lock
outsb
jbe
sub
daa
inc
pop
xchg
ja
adc
cs
inc
sbb
cmp
icebp
xor
iret
push
adc
push
xor
imul
loop
push
and
jmp
aam
adc
sbb
dec
jmp
sti
pushw
and
inc
xor
jb
js
subl
sub
jae
jl
repz
arpl
xor
sub
push
dec
bound
mov
jb
adc
sub
adc
add
mov
jmp
hlt
fstpl
insb
sbb
cmp
mov
addr16
cmp
dec
add
push
outsb
dec
mov
mov
jbe
in
adc
sbb
add
push
dec
mov
mov
clc
cmp
in
leave
sbb
or
xchg
aaa
orw
mov
jmp
ja
or
adc
mov
orb
inc
mov
jmp
xor
js
faddl
jmp
movb
mov
mov
mov
xor
cld
int
xchg
scas
cmp
cmpl
jns
stos
test
cmp
arpl
subl
sub
mov
xchg
fldenv
mov
or
sub
cmpsb
mov
and
mov
sub
and
add
insl
sarl
std
repnz
cli
adcb
dec
pop
inc
sub
imul
xlat
mov
dec
xor
bound
out
or
mov
jo
cmpsl
push
dec
mov
inc
cmpsl
in
add
scas
mul
les
rcl
adc
inc
cmp
ss
mov
movsl
out
or
mov
push
cmpsb
shrb
xchg
sub
add
xor
insb
arpl
lods
cld
shlb
mov
rol
mov
mov
mov
stc
iret
jge
xchg
add
mov
mov
sti
and
std
rcrl
mov
xchg
lock
pop
stc
mov
add
xchg
in
and
push
push
nop
sarb
mov
out
xchg
xchg
xor
and
xchg
lcall
push
push
mov
stos
ds
aad
lret
mov
divb
rcrb
bound
fldcw
lds
sub
mov
enter
je
test
je
inc
xchg
mov
adc
jle
ja
inc
jge
push
lods
cmp
inc
ja
imulb
pop
mov
mov
loopne
pop
lcall
sbb
imull
mov
lods
dec
mov
das
and
cmpsb
fldl
and
imul
xor
mov
imul
xorb
mov
pop
lock
bound
unpckhps
loope
das
repnz
pop
jecxz
cmp
icebp
into
dec
aaa
lret
out
push
xchg
jg
adc
cmpb
mov
rol
sub
xchg
jne
cltd
out
add
adc
dec
or
push
stos
pop
jecxz
data16
test
pop
fists
scas
mov
imul
pop
cmpsb
jg
or
xorb
lea
fdivrl
out
sub
add
mov
sub
loop
lock
pop
pop
xor
pop
jmp
test
mov
adc
xlat
mov
out
mov
and
jo
fnsave
inc
in
adc
fstps
xchg
andb
mov
cltd
es
dec
or
pop
add
testb
std
lock
adc
inc
mov
sti
daa
mov
adcb
mov
mov
xchg
add
je
scas
insl
lret
push
imul
and
xor
std
inc
jno
mov
dec
fcoml
dec
mov
insl
test
testb
jb
aaa
push
aam
dec
and
mov
fsubrs
pushf
pop
xchg
lods
adc
outsb
xor
adc
les
movl
dec
jmp
jl
jl
sbb
and
or
push
mov
dec
jae
fdivr
xor
push
xchg
cmp
bound
in
mov
push
cmpsl
and
push
shrb
cmp
adc
outsl
movsb
sbb
dec
scas
sbb
xchg
cmovb
test
insb
jmp
pushf
mov
sub
sahf
data16
and
xor
and
add
dec
subl
jnp
xor
jg
push
jmp
jne
jge
je
cmpsl
inc
push
mov
mov
test
mov
leave
in
pop
lahf
roll
xlat
adc
sub
iret
and
fs
push
dec
mov
negl
inc
dec
pop
and
bound
fidivs
movsl
fsts
jo,pt
scas
mov
ljmp
mov
mov
ficoms
mov
nop
xor
stos
mov
lods
outsb
jbe
mov
in
iret
jmp
aam
and
push
add
frstor
fwait
div
jp
push
add
push
xchg
rcrb
push
cmp
adc
or
imul
sbb
cmpsl
mov
insl
xor
imul
dec
fldenv
scas
andb
xchg
push
add
push
clc
adcb
cmpsb
cmpsb
cltd
mov
mov
cmc
in
sti
subl
push
cwtl
and
fldl
pop
pop
movsl
push
aaa
or
cmp
mov
cmp
sub
xchg
lcall
sahf
mov
xchg
jno
aam
jp
push
gs
fcomps
psubusw
or
sbb
or
hlt
pop
and
or
or
add
cwtl
call
imul
ljmp
ret
mov
mov
bswap
mov
call
jo
addr16
inc
and
mov
scas
mov
mov
lds
jbe
data16
sub
sub
movsl
mov
out
cmp
addb
aaa
test
fdivrl
jge
push
adc
aad
stos
ret
roll
stc
mulb
or
movsb
bound
inc
push
pop
push
pop
aas
jnp
push
shlb
les
out
lea
aad
sub
mov
stos
dec
add
and
pop
or
and
push
test
lds
push
add
sub
sbb
push
mov
or
pop
ja
xor
stc
iret
repz
in
adc
testb
clc
cmpl
inc
movl
out
imul
leave
mov
sub
push
ret
add
sti
scas
outsl
sti
mov
cwtl
sbb
cmc
jp
xor
fsubrs
iret
mov
imul
mov
scas
sbb
lcall
pop
and
ret
sbb
pop
iret
add
nop
mov
mov
loop
dec
subb
cmp
jb
mov
add
or
data16
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
mov
cmp
mov
pop
int
jl
pop
jl
in
js
pop
add
fwait
in
leave
rolb
imul
mov
push
mov
fdivrs
fdivs
cwtl
insb
add
cmpsl
mov
jp
pop
mov
add
je
cmp
mov
clc
push
jp
jb
xor
es
fwait
push
mov
into
jb
jnp
ret
cmp
sbb
enter
loopne
sahf
push
dec
xor
fdiv
sbb
jecxz
xchg
enter
neg
sahf
rolb
mov
mov
lods
or
mov
push
xor
cli
mov
and
mov
xchg
push
movsl
cmp
pop
mov
push
cld
jg
movsl
dec
lds
test
push
dec
sub
ret
adc
inc
mov
outsb
das
sbb
in
leave
scas
add
xchg
inc
call
dec
out
mov
fdivp
iret
mov
in
enter
out
pop
add
mov
sub
iret
mov
cmc
ljmp
and
sbb
out
test
inc
andb
insl
in
dec
rorl
jp
sbbl
ret
movsl
mov
push
int
inc
pop
and
inc
xorl
sbb
sbb
dec
sbb
repnz
scas
add
leave
ret
push
pop
pop
call
add
xor
jecxz
testl
xchg
ljmp
or
loope
sbb
mov
test
or
lea
jecxz
xorb
fadd
add
push
fcompl
xchg
and
dec
xchg
jbe
rolb
xchg
shlb
cmc
int
inc
cmp
pop
push
mov
mul
push
fidivrs
inc
mov
add
pop
sti
das
pop
and
fnsave
push
sti
negb
pop
adc
vmptrld
adc
inc
adc
outsl
sahf
shll
mov
cmc
inc
or
out
sbb
out
aas
push
cmp
add
xor
push
inc
sbb
sbb
daa
std
cmp
mov
ss
mov
cmp
loopne
push
cld
adc
loopne
adc
cld
mov
sub
ds
out
xchg
popf
dec
or
call
mulb
in
in
lahf
xlat
aas
xchg
dec
bound
push
pop
leave
test
popa
sub
stc
xchg
adc
lock
xchg
add
fdivrl
notl
jnp
lock
pop
pusha
cmp
add
ljmp
aas
int
outsl
pushf
fstpt
lret
in
sahf
jge
arpl
mov
push
sarl
in
push
movsl
bnd
sbb
call
ficompl
rcrb
pusha
jp
inc
xchg
je
out
cs
fisubl
push
stos
and
pop
sbb
or
gs
pop
or
je
cmp
stos
mov
sbb
push
js
sbb
outsb
les
and
arpl
sbb
xor
and
cmp
mov
ds
ret
div
push
cmp
gs
adcb
mov
inc
inc
xor
stos
cwtl
dec
xor
loop
xor
pop
fsub
jnp
in
je
daa
gs
xor
es
insl
outsb
sbb
mov
loop
fdivp
and
jl
lods
test
add
ror
mov
lods
xlat
enter
inc
sbb
popa
mov
aad
dec
shl
pop
lods
nop
mov
fists
cmpsb
mov
ds
aam
pop
shrb
sub
sub
jne
or
push
shll
pop
and
xchg
loop
stos
in
jle
or
cmp
or
addb
or
outsb
lcall
cmpsb
outsb
sub
xchg
jb
xlat
lock
jbe
dec
pop
xor
cmp
movsb
adc
jmp
in
mov
lcall
jb
xchg
jl
push
out
inc
cmpsl
mov
mov
mov
stos
xchg
inc
cltd
xor
xor
lahf
loop
xor
setnp
xchg
fisttpl
dec
test
shl
jno
fdivrs
popf
jb
lahf
test
hlt
andb
gs
push
mov
and
cmp
mov
lock
jo
imulb
js,pn
or
jne
mov
mov
inc
inc
in
scas
sbb
and
insb
cmp
mov
mov
mov
xchg
loopne
fisubl
inc
or
push
mov
stc
push
hlt
xchg
addr16
xorb
mov
adc
leave
js
inc
inc
jae
sbb
xor
sub
sbb
out
push
mov
js
or
push
insb
pop
adc
add
fwait
xchg
mov
mov
aad
repz
mov
jl
sub
jnp
jne
mov
xchg
push
fs
push
mov
jg
jae
push
mov
push
push
adc
icebp
inc
sbb
mov
scas
xlat
sti
ret
mov
add
es
jo
push
fs
out
sub
xchg
test
js
test
mov
iret
add
dec
insl
mov
cmp
sub
in
mov
js
nop
xor
lea
fstpt
jge
pop
jecxz
xor
add
lock
shll
mov
cmc
push
fsubrs
push
pop
pop
or
bound
jnp
in
sahf
adc
arpl
or
jb
clc
push
je
pop
leave
stos
ret
aaa
xchg
hlt
ja
cld
and
repz
dec
sahf
in
std
mov
adc
jmp
add
je
sub
mov
lcallw
push
lcallw
lret
test
nop
stos
movsb
ret
movsb
pop
dec
or
sub
lds
lcall
js
xchg
insb
negb
xchg
fistl
aam
scas
pushl
sahf
pushf
ret
xor
xchg
ret
rcr
lahf
into
jle
push
mov
sbb
push
jmp
daa
das
outsl
dec
sarl
dec
xor
jae
in
and
cmp
sub
mov
ret
mov
cmp
fisttpl
sbb
cmp
out
fdivrs
jp
and
shr
psrld
aam
bound
loopne
stc
repnz
pop
inc
push
lock
mov
lock
push
insb
shlb
and
push
lret
inc
repz
repnz
push
cmp
adc
insb
pop
adc
orl
cmp
xchg
popa
adc
jg
aam
leave
jb
sub
mov
rcrl
std
xor
xor
dec
sub
inc
ja
cmp
iret
xlat
sbb
mov
cmp
xchg
outsl
jmp
jg
adc
mov
lock
inc
inc
xor
xchg
mov
cmp
add
push
je
cmp
test
xor
adc
daa
mov
mov
dec
xchg
je
outsb
or
mov
nop
add
inc
cmp
inc
popf
fsubrl
out
xchg
idivb
roll
and
loop
or
cmp
add
es
inc
xchg
adc
and
cld
daa
mov
xchg
out
cld
push
adc
repnz
cmp
rclb
out
mov
in
dec
lret
loopne
sbb
call
add
push
in
mov
outsl
cli
and
fiaddl
mov
arpl
and
push
mov
pop
stc
dec
loop
lahf
xchg
dec
jb
sbb
aas
adc
push
popf
push
jae,pt
fs
adc
xchg
iret
int3
dec
and
pop
mov
add
or
and
clc
xchg
in
stc
lods
push
mov
add
ficoml
sarl
fidivs
shr
sbb
mov
dec
jmp
stos
stc
mov
push
bound
ds
scas
pop
push
cmp
cltd
jg
ret
call
ret
flds
mov
add
pop
adc
cmp
repz
sub
pop
jle
imul
lea
pop
fnsave
lods
orb
fnstcw
inc
dec
or
pop
outsb
stc
sbb
mov
sub
out
and
mov
lret
int
pop
pop
push
sbb
shrb
mov
push
notl
movsb
imul
adc
pop
mov
mov
cld
adc
mov
mov
cltd
ds
fidivrl
insl
or
mov
xor
mov
in
mov
jmp
or
jnp
lea
sub
cmpsl
adc
mov
pop
push
push
test
sub
ja
add
lret
pop
push
test
adc
fdivrs
stos
test
test
in
arpl
nop
cld
movsl
push
xor
push
ds
xchg
lahf
loopne
jge
int3
pusha
mov
lret
ret
jno
push
pop
ret
mov
fwait
rcr
adc
pop
adc
sbb
cmpsl
stc
mov
inc
ljmp
sarb
mov
int
mov
shrb
sub
popa
xchg
idivb
hlt
mov
divb
ss
je
mov
insb
outsb
mov
push
repz
mov
ds
shr
sub
sbb
out
repz
test
push
clc
cmpsb
xchg
or
ret
sti
fs
dec
cmp
fcoms
add
inc
cld
fcomi
sarb
mov
ss
mov
dec
int
in
push
mov
js
clc
mov
push
dec
mov
stos
and
mov
rcr
push
iret
cld
dec
mov
fwait
cmpsl
or
cmp
sbb
dec
sbb
cmp
cmp
scas
aas
xchg
jmp
pop
std
and
lret
rorb
fcoml
dec
xchg
adc
xor
int3
pop
cli
and
lret
mov
inc
pop
inc
mov
addr16
cmp
sub
jl
or
push
xor
pushf
movsb
ficoms
aaa
xor
cmp
stc
rcll
pop
sbb
xor
testb
pop
je
pop
xchg
mov
sbb
mov
rcrb
negb
mov
jmp
lret
scas
test
push
mov
aas
das
adc
imul
push
lret
stos
add
xorb
push
orb
repz
xor
scas
sbb
xor
fsub
or
pop
xchg
bnd
aad
inc
mov
out
sahf
push
adc
jo
fisttps
dec
jo
popa
jae
and
test
mov
mov
jb
rclb
out
dec
xchg
jp
dec
mov
cmp
cmpsl
and
int
aad
push
cmpsb
lock
ljmp
std
dec
xchg
xlat
xlat
adc
inc
icebp
mov
stos
jne
push
push
pop
xor
pop
xchg
mov
repz
scas
mov
add
mov
sub
cs
fsub
faddp
and
cmp
lahf
lods
outsb
cmp
ret
jmp
mov
mov
loop
insb
xchg
fists
or
aam
leave
enter
js
das
xchg
cli
cld
or
mov
and
insl
and
lea
add
xchg
push
fidivrs
lods
clc
push
andb
pop
xchg
sub
shll
shlb
gs
pop
out
mov
add
and
movsl
cmp
incl
lods
rcll
or
insl
in
sub
and
rorb
xchg
lods
lods
jns
push
lret
and
inc
xchg
nop
int
xchg
popa
std
fidivl
lock
add
mov
lcall
test
stos
fdivrl
mov
mov
mov
fdiv
out
imul
pushf
xor
subl
cmc
aam
push
das
lret
popa
clc
loopne
xchg
sub
mov
popf
test
xor
scas
call
dec
out
and
icebp
and
imul
lret
push
cli
lahf
pop
stos
and
or
pop
loop
fisubs
dec
pop
ja
xchg
sub
std
test
cmp
popf
bnd
divb
add
jmp
dec
lods
leave
dec
xchg
divb
mov
mov
int3
incl
mov
cmc
xchg
jl
jnp
ss
adc
pop
lock
xlat
inc
inc
cmc
dec
addb
ret
fisubrs
xchg
push
cmpsl
or
mov
sbb
pop
lret
fidivl
shll
imul
mov
dec
jmp
inc
pop
xchg
es
cmp
jp
adc
in
xor
mov
rcll
xchg
int3
xchg
mov
inc
inc
jge
mov
mov
jnp
loop
dec
in
xchg
adc
xchg
cmp
dec
push
xor
call
pop
or
jmp
push
sub
dec
mov
pop
fists
cmc
sbb
jo
jl
inc
fsts
inc
lret
and
pop
and
jb
xor
insl
in
xchg
mov
sub
imul
sub
mov
pop
sarl
movsl
pop
scas
push
mov
imul
cmpsl
stos
dec
adc
int
add
xchg
xchg
mov
lods
mov
scas
push
imul
mov
push
mov
or
inc
hlt
in
gs
fwait
bound
les
lods
addr16
push
gs
dec
mov
xchg
aad
jp
dec
cmp
mov
cmp
push
mov
loop
push
xor
or
dec
add
inc
mov
js
adc
ret
pop
and
leave
fmull
jnp
das
and
nop
mov
dec
addr16
xchg
push
negb
cwtl
popf
mov
popa
call
add
shrb
cli
and
cli
mov
imul
icebp
xchg
into
or
stos
rcl
cmp
cli
add
mov
in
sub
jmp
mov
repnz
in
out
imul
xchg
jge
mov
adc
xchg
out
js
or
sub
xchg
repz
mov
lret
sahf
mov
cli
adc
mov
add
mov
repz
sahf
aam
outsb
lret
xor
cmp
and
xor
pushf
push
mov
xor
jae
adc
dec
movsl
outsl
insb
sbb
dec
inc
push
sbb
icebp
mov
bound
rolb
data16
loopne
lahf
fidivrl
scas
sbb
hlt
jo
mov
sub
xor
mov
pextrw
push
push
push
call
jbe
imul
push
mov
adc
cs
mov
adcb
lfs
push
cs
dec
lea
mov
ja
pop
fsubrs
xor
dec
repnz
mov
sbb
add
out
pop
cwtl
fdiv
hlt
cmc
xchg
loopne
or
mov
jbe
rclb
sti
jl
lret
inc
inc
out
mov
popf
cmpsl
xchg
push
test
into
sub
jl
neg
push
addr16
mov
outsl
and
sub
test
xchg
lret
jae
xchg
ja
rol
add
xchg
mov
dec
lods
push
iret
fcmovnb
int3
adc
fldenv
outsl
add
pop
jmp
push
cli
xchg
imul
hlt
aaa
fidivrs
pop
outsl
ja
xchg
rcrl
cmp
mov
xchg
mov
add
sub
xor
mov
push
lahf
mov
add
mov
aaa
sbb
pop
adc
cmp
mov
push
pop
push
decb
cld
fistl
mov
lods
dec
pop
iret
repnz
fcoml
cmp
call
in
push
fsubrp
roll
mov
cli
jp
fwait
cmc
mov
push
ljmp
rcrl
xchg
mov
add
jo
cmp
lods
fs
mov
mov
scas
dec
ret
fwait
push
push
xor
cmc
and
fstps
push
sbb
lods
sbb
je
mov
test
jb
rcll
xchg
or
inc
xor
mov
add
fcomps
sub
or
imull
ds
xchg
subb
xchg
xchg
jns
xor
clc
aas
inc
push
jg
roll
je
out
add
sbb
or
movsb
test
test
int3
test
or
push
nop
push
mov
vpsraw
mov
movsl
cwtl
pop
xor
jnp
sarl
test
aas
mull
sub
pop
and
int3
cmpsb
decb
fcompl
lret
iret
inc
loopne
aad
sub
add
test
daa
insl
or
loope
and
idivb
inc
mov
push
fs
push
ficompl
jae
inc
sbb
pop
xor
add
sahf
adc
adc
bound
mov
es
push
cmpl
insl
dec
adc
or
add
in
push
xor
or
and
insw
outsb
and
aad
imul
stc
and
mov
sarl
popa
sub
lods
fistps
jle
dec
mov
imul
ss
xor
fs
sti
cmp
jp
sub
decb
dec
pop
ret
loop
inc
cmc
ja
movsl
jb
int3
andb
or
add
push
xor
out
sbb
sahf
mov
imul
test
hlt
test
out
and
lods
sbb
mov
mov
or
shrb
xchg
int3
jge
into
or
ret
stc
cmc
jbe
in
stos
cmp
xchg
hlt
js
stos
cmp
and
push
or
in
mov
jle
xor
mov
pop
cmp
push
xchg
leave
ret
xchg
daa
push
sbb
gs
xor
or
fwait
inc
xor
sub
xor
call
inc
roll
add
mov
mov
iret
imull
lds
jnp
dec
push
outsb
push
mov
pop
outsb
fnstcw
in
xor
sub
sub
out
daa
mov
push
pop
test
jbe
lds
mov
hlt
mov
inc
inc
in
mov
lods
ftst
inc
or
inc
pushf
jnp
or
xor
adcb
out
mov
test
stc
lsl
and
insb
inc
and
inc
xchg
es
add
jae
pop
xchg
xor
push
lret
es
cld
fwait
shrb
sbb
out
adc
add
scas
frstor
push
xor
sub
and
xchg
rorb
lds
in
fs
les
leave
mov
ljmp
sarl
iret
xor
divb
fs
ds
xchg
out
inc
cs
and
test
and
push
clc
sbb
push
and
pop
lcall
sub
ljmp
or
shlb
mov
fldenv
add
mov
xor
lret
addr16
rolb
xchg
sub
mov
jg
mov
xchg
orb
cld
jae
dec
ljmp
cld
cmpsb
lods
jl
add
mov
cmp
in
jo
pop
pop
sub
pop
adc
aad
and
loopne
add
inc
dec
jl
sbb
enter
cmc
lds
xchg
sub
daa
mov
xor
cmp
xor
jbe
dec
aas
mov
jo
sahf
push
push
sub
mov
mov
adc
jl
adc
in
jecxz
int3
xchg
mov
push
dec
xorl
fcomps
out
movsl
cmpsl
in
rol
fadd
jecxz
movsb
rcrl
roll
jmp
sbb
jo
loope
add
mov
xchg
fldl
inc
ds
and
cli
mov
add
mov
pop
arpl
into
xchg
out
adc
cmp
push
jl
inc
jmp
mov
or
leave
jae
xchg
mov
aas
adc
cwtl
cmp
adc
mov
ja
mov
and
fwait
jmp
xor
cmp
and
call
push
fdivrs
cmp
xchg
subl
push
push
stos
in
scas
in
fwait
insl
mov
loop
jmp
cmp
jle
and
mov
mov
out
adc
fcmovnb
jns
addl
out
jae
pushf
push
inc
jp
cmc
adcl
inc
lods
aam
pop
inc
mull
sbb
lret
rcll
mov
imul
inc
inc
xor
cwtl
dec
outsl
mov
hlt
outsb
push
neg
in
mov
shll
arpl
xchg
push
pop
mov
push
int3
xorl
adcl
sbb
jle
test
xchg
cmp
loop
mov
test
lret
and
stos
mov
imul
sbb
or
inc
insl
push
sub
xor
lret
cltd
in
icebp
mov
adc
ficoml
inc
push
in
popa
rorl
push
dec
lret
jl
cmp
mov
mov
and
test
scas
dec
pop
mov
push
bound
jae
mov
add
pop
cmp
mov
movsb
lods
ljmp
pop
jns
shlb
arpl
push
jmp
or
pop
jmp
inc
out
mov
dec
jmp
dec
inc
jnp
lahf
push
pushf
test
ret
sub
clc
mov
add
or
mov
stos
vcvtps2dq
out
in
jg
xchg
mov
xor
into
jl
stc
inc
mov
push
adc
lcall
repz
inc
das
ja
imul
test
rclb
imul
arpl
or
cli
mov
jnp
mov
or
xchg
or
test
mov
push
insl
in
inc
lahf
or
shll
jp
adc
ret
cmp
mov
jle
jle
pop
rorb
sub
aas
adc
fiadds
jp
leave
lock
fneni(8087
inc
dec
cs
xchg
cmpsl
stc
mov
mov
inc
pusha
xor
mov
jmp
stc
sub
fildl
pop
mov
aam
es
pop
sbb
mov
ror
sbbl
call
pop
data16
mov
xor
fistl
jle
lock
pop
and
pop
jno
add
dec
push
pop
lahf
lret
cmp
sbb
mov
es
add
cltd
lea
shufps
fdivr
cmpsl
xor
add
clc
push
ss
hlt
inc
stos
inc
es
arpl
jae
cmp
pop
cmp
pop
jns
in
mov
lahf
mov
sbb
sbb
daa
loop
jae
cmp
pop
rcll
fwait
mov
imulb
inc
push
push
loopne
sahf
rcrl
xchg
mov
lock
pop
mov
repnz
mov
pop
nop
adc
xchg
sbb
xchg
dec
and
xor
push
adc
dec
dec
ljmp
nop
mov
xchg
pushf
shlb
inc
xor
xchg
pop
lret
pop
or
cmpsb
outsb
mov
in
ffreep
cmp
into
stos
dec
mov
rcrb
int3
add
jo
cld
fisttpll
push
popf
xchg
insb
jle
push
jecxz
jbe
cmp
fsts
or
xchg
aam
jae
dec
xor
cmpsb
lret
sbb
mov
mov
leave
lcall
aaa
cmpsl
fsts
dec
cli
cmpsl
int
add
sbb
inc
push
icebp
stos
int
bound
in
push
int3
pop
leave
pop
ja
jns
int
aam
repnz
mov
or
lahf
je
xchg
mov
cmpsl
in
jmp
shr
rclb
mov
xchg
pop
jp
push
cwtl
pushf
dec
insl
imulb
inc
cli
ret
lret
fmul
and
add
mov
jmp
fisubl
sbb
cmpl
icebp
enter
inc
fs
xchg
lahf
xchg
outsb
lods
push
loopne
iret
xchg
popa
pushf
add
stos
ret
jl
inc
sbb
shl
adc
pop
bound
mov
pop
push
jnp
push
ss
lock
jl
aam
push
aad
stc
data16
add
mov
orl
and
daa
xchg
das
int3
rcll
xlat
lods
in
mov
mov
data16
pop
pop
and
mov
jl
or
mov
jge
in
pop
pop
mov
mov
jle
lret
jmp
repz
movsb
cli
push
inc
out
inc
pushf
xchg
add
pushf
push
jb
mov
adc
repnz
lds
sbb
mov
adc
lahf
es
emms
fld
movsb
sbb
xor
inc
inc
shll
icebp
mov
cmc
sarl
pop
sti
cmp
jecxz
inc
ja
mov
cmpsl
repnz
xchg
imul
sbb
mov
loopne
inc
sbb
loopne
jp
mov
xlat
cltd
testb
mov
nop
mov
shrl
inc
clc
int3
pop
xor
pop
loope
iret
repz
les
push
dec
push
sbb
sbb
jns
ljmp
jno
add
mov
shr
lret
aad
xcrypt-ctr
cmpsl
ffree
ret
out
aaa
pop
outsl
inc
dec
mov
sub
sub
and
punpcklbw
in
cmc
sbb
pusha
shlb
cmpsl
fsubrs
dec
loope
mov
cs
out
adcl
push
sub
xchg
adc
inc
out
fisttpl
push
dec
pop
sti
imul
push
push
mov
test
add
std
sbb
rcrb
fwait
imull
lods
dec
add
adc
ret
xor
adc
mov
mov
scas
jns
insl
dec
push
bnd
jmp
sub
into
ret
and
push
pusha
xor
and
jb
repz
popf
sub
es
loop
cs
mov
mov
negl
popa
rcl
repz
mov
stos
fnstenv
lock
dec
mov
cvtps2pi
mov
fldt
sbb
push
fwait
repnz
cmp
jae
stc
call
out
lea
xchg
dec
cmp
pop
movsl
dec
in
dec
jge
xchg
subl
test
xor
insb
pop
inc
mov
sbb
push
mov
mov
pop
repz
testl
jb
outsl
mov
daa
jno
dec
popf
cmp
in
mov
ljmp
ret
lcall
jge
push
jmp
fists
jge
repz
cmp
adc
add
jo
or
pop
inc
sub
sbb
loope
nop
jb
adc
fisttps
pop
daa
inc
push
xor
jge
adc
inc
adc
cs
popf
mov
andb
and
and
test
xor
and
pop
jl
fidivrl
into
mov
cmpsl
push
enter
cld
add
das
mov
adc
push
sarb
in
imul
ret
cmp
pop
aam
sub
shlb
inc
fwait
add
inc
xorl
movsl
fsubrs
jmp
repz
pushf
push
or
cltd
xchg
pop
sub
sbb
out
pop
aas
cmp
ret
fidivs
mov
sbb
mov
adc
xor
cmp
test
pop
dec
sub
ljmp
rolb
pop
ret
sbb
xor
mov
hlt
aaa
xor
cmp
jmp
mov
sbb
nop
jo
popa
les
sbb
fwait
mov
inc
mov
in
pushf
sbb
push
jp
dec
push
mov
mov
jge
lret
mov
or
push
push
jb
aas
mov
and
ficompl
cmc
jl
loopne
and
inc
ret
and
add
jmp
in
xchg
repnz
les
push
fldenv
or
sti
out
mov
jle
mov
or
xlat
cmp
mov
sbb
cld
test
push
sarl
xor
jecxz
inc
inc
iret
xchg
and
adc
test
rcrb
sbb
movsb
imul
xchg
mov
dec
inc
xor
and
lret
mov
cmp
adc
bound
dec
push
enter
sahf
movsl
and
jle
lods
in
sub
push
cvtdq2ps
and
ja
lret
sub
cwtl
fdivs
jle
addb
cmpsl
dec
add
out
xlat
in
jnp
cmp
cmp
or
enter
ss
inc
pop
movsl
movsb
cmp
inc
push
xor
xor
test
iret
scas
lods
cmpsb
sub
jo
mov
mov
adc
mov
adc
fisttpll
xchg
test
aas
mov
call
in
cwtl
dec
sub
dec
and
in
fs
out
sub
lahf
jecxz
mov
mov
mov
mov
xchg
jle
xor
sbb
int3
std
in
fildll
mov
insl
lods
xor
add
cmpsb
jnp
or
je
fs
sarb
mov
les
jne
add
test
sbb
mov
push
popa
xor
scas
fimull
andl
xchg
js
adc
and
xchg
jbe
mov
cld
or
adc
sahf
scas
in
sar
dec
je
ret
inc
push
pop
dec
imul
into
sbb
fcoml
pop
mov
cli
sbb
divl
fdivrs
or
add
lds
mov
fs
ret
xchg
mov
fdivrl
mov
imul
ss
pop
movsb
mov
cli
imul
xlat
sbb
negl
dec
test
ja
mov
rcll
mov
cmpb
add
xchg
xchg
push
jmp
push
jbe
movsb
popf
jecxz
fs
push
lds
sbb
iret
sti
lret
push
mov
mov
mov
ljmp
mov
cwtl
test
or
incl
sub
mov
lock
pusha
adc
into
stc
mov
cs
sti
mov
leave
jne
adc
scas
jmp
jmp
lock
lock
aad
das
pusha
mov
lock
dec
in
push
test
lahf
xor
push
cmp
data16
cld
ror
sbb
ror
in
adc
testl
jnp
inc
cmp
roll
rcr
sbb
cwtl
cmc
jno
adc
cmp
test
mov
jno
and
dec
ds
outsb
test
inc
mov
lods
cmove
adc
ss
bound
lock
pop
scas
sar
mov
jg
adc
popa
pop
movsb
popa
add
cmpsl
outsl
ret
add
xor
dec
addb
outsb
in
cmpsl
pop
add
cmp
sbbb
outsl
mov
into
pop
ljmp
inc
cmp
inc
ficompl
aas
mov
sub
add
pusha
in
inc
xor
sub
test
arpl
push
and
adc
jp
inc
inc
lahf
in
outsl
xor
add
sub
sub
test
shl
sub
push
iret
and
out
int
lret
cld
cmp
mov
stos
push
cmp
inc
enter
add
jecxz
xchg
dec
fisttps
gs
rsm
cli
add
xchg
jle
or
xchg
sbb
loope
divb
mov
sti
sub
pop
sub
aad
push
pop
xchg
les
sub
fcomip
inc
mov
into
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
jmp
insb
jns
sbb
mov
push
jae
adc
nop
jl
pop
pop
jl
ljmp
int3
push
in
in
cs
jle
es
fwait
mov
je
sbb
add
sarb
jmp
shlb
dec
jge
push
sbb
add
jae
adc
sub
mov
test
cmc
mov
call
popf
push
sbb
or
ret
xor
push
loope
cmp
das
int
fmuls
in
xor
xchg
mov
add
movsb
scas
add
and
stos
pop
insl
push
mov
mov
in
je
jbe
shrb
popa
inc
jmp
test
mov
jmp
out
dec
in
test
popa
shl
dec
jmp
push
fsts
inc
cmpsb
push
xchg
push
or
or
icebp
das
push
hlt
je
inc
and
cmp
dec
jb
mov
int
in
call
jno
daa
or
add
imul
lea
sahf
ret
outsl
sbb
add
xchg
comiss
mov
add
cmp
lcall
mov
adc
bound
js
pop
cltd
sbb
je
loopne
xchg
rcrl
jg
test
insb
and
adc
mov
cmp
imul
inc
cmp
je
rcrl
pop
sahf
out
cmpsb
push
test
inc
incb
sbb
jle
movsl
loop
inc
ss
lcall
hlt
cs
fstl
inc
lret
push
sub
fsubrs
xor
popf
dec
mov
out
pusha
mov
sbb
jge
loope
ficoml
pop
daa
add
fistpll
loop
mov
cld
lods
out
insb
or
dec
xchg
sti
ret
sbb
jg
or
les
jbe
jp
std
pop
pop
inc
std
int
mov
inc
mov
out
fdivr
loope
not
and
daa
jb
add
arpl
repz
scas
enter
xchg
xchg
pop
mov
xor
pop
dec
xchg
and
add
mov
orb
sbb
mov
mov
lods
rcrl
dec
sbb
fldl
nop
mov
cmpsl
out
or
divb
dec
lea
pusha
push
hlt
adc
gs
or
sub
mov
ds
daa
xor
xor
lods
insb
mov
cmp
mov
jmp
fcmovnu
xor
and
dec
std
or
sbb
sub
movsl
push
and
fnstcw
pop
dec
lahf
test
push
out
or
dec
loopne
sbb
orb
pop
cwtl
mov
imul
or
lods
movsl
xchg
imul
int3
adc
pop
out
push
sub
mov
subb
cltd
call
mov
movb
inc
fcomps
mov
sbb
mov
shl
clc
icebp
jb
push
sub
inc
addr16
xchg
fsubrs
test
into
mov
out
out
pop
shrb
sub
cli
fs
dec
adc
daa
mov
insl
jnp
ss
lcall
call
mov
ja
dec
sbb
sub
dec
notl
or
pop
add
sub
sti
jge
mov
fiadds
or
push
imul
aas
imul
clc
xchg
iret
jns
sub
movsb
sub
fmull
add
pop
push
push
or
fcoms
mov
add
sbb
xor
pushf
stc
cwtl
mov
mov
aas
in
int3
sub
lret
push
in
and
push
fisubrs
sub
roll
ss
mov
jl
gs
in
mov
jle
and
xchg
fstpt
mov
jae
dec
rcll
mov
xchg
or
push
adc
add
or
adc
jno
jg
fstpl
pop
out
sub
sbb
dec
xchg
mov
movsl
jno
xor
mov
aam
dec
lret
adc
push
rorb
cmc
das
enter
sbb
or
stos
repnz
mov
pop
mov
leave
out
out
dec
ds
jo
add
outsl
mov
cmp
fcompl
push
dec
xchg
adc
cli
testl
cmp
push
xchg
loop,pt
fisubs
orb
pop
xchg
rcl
add
add
xlat
push
jne
xor
std
lcall
add
cmp
xchg
fsubrp
imul
mov
push
pop
and
movsb
mov
cmc
push
insl
adcb
lret
dec
lea
mov
loop
jmp
cld
in
fcomi
mov
sub
jmp
mov
out
push
pop
lods
ja
es
mov
sub
sub
jg
js
jmp
push
push
cld
xor
cld
ss
test
dec
and
xor
mov
std
mov
mov
jg
and
inc
adc
mov
jnp
loop
dec
pop
sbb
enter
inc
mov
mov
sub
std
sti
xchg
cmp
xor
loopne
addb
sub
inc
into
or
sub
dec
ja
aad
mov
lahf
xchg
daa
jecxz
mov
lea
push
jb
in
mov
imul
xchg
mov
stos
mov
stc
std
adc
idivb
out
cmc
movsl
cmc
pop
inc
jno
es
mov
stos
jmp
lret
pop
and
cwtl
jle
jns
lods
sub
fsubp
mov
popa
imul
add
bound
sbb
jp
jmp
int
mov
fwait
pop
idivl
in
cmp
mov
mov
adc
cmp
dec
mov
pop
sahf
lods
sarl
and
mov
fistps
loope
pop
sbb
cmp
aad
mov
cmpsl
pop
out
adc
add
das
jl
rcrl
inc
cmpsl
or
adc
sbb
unpckhps
in
pushf
mov
adc
in
xchg
in
push
cmpsl
lods
push
lods
arpl
xchg
or
sti
jne
cltd
dec
push
add
mov
outsl
setl
cli
pushf
pop
lods
test
mov
ja
mov
das
push
pop
or
nop
js
cli
sbb
jl
ja
xor
jb
xor
xchg
lret
pop
lea
sbb
xor
dec
cmc
sbb
clc
or
xor
sub
lds
adcb
mov
sbb
add
insb
jg
mov
in
lret
push
aam
sbb
cmpsb
pop
mov
cmpsl
fmull
mov
popa
repz
pop
jl
adc
pop
sbb
lahf
int
push
push
sbb
cmp
sub
dec
test
out
rcll
in
add
jecxz
xchg
inc
cld
or
inc
and
add
fs
push
int3
push
add
xor
dec
add
adc
add
mov
repz
cmpsb
xor
push
and
scas
mov
movl
add
cld
cld
test
gs
data16
lret
xor
subb
adc
add
adc
dec
pop
out
sbb
nop
xchg
sbb
call
and
sub
imul
pushf
inc
push
pop
mov
out
aas
push
inc
test
mov
lret
aad
loopne
or
icebp
mov
and
call
scas
hlt
jnp
outsb
notl
mov
icebp
sub
mov
cwtl
aaa
xchg
xadd
inc
mov
cltd
jbe
add
jne
int3
rcr
stos
push
pop
shll
add
pop
sti
clc
lock
outsb
mov
dec
adc
inc
cmp
cmp
loopne
inc
cmp
repz
lahf
jne
mov
mov
je
sarb
mov
sub
lret
or
lret
in
inc
or
mov
into
adcl
insb
mov
add
fstpl
cmc
xchg
cmp
lods
sbb
and
push
push
pop
mov
pop
movsl
arpl
jns
scas
or
and
fucomi
inc
fcomp
adc
ja
popf
outsb
lcall
push
inc
mov
scas
cmc
fs
or
sub
and
hlt
xchg
push
jne
lods
push
sbbb
mov
or
or
jbe
fistpl
pop
or
cmp
andb
xchg
imul
mov
and
divl
sbb
jbe
and
dec
jp
jae
jne
jl
sbb
mov
aad
xchg
lds
fnstsw
jbe
test
sub
inc
scas
rcr
dec
lret
dec
cmp
mov
mov
addr16
xchg
sbb
fs
lea
sub
fstl
dec
cmpsb
das
and
stc
push
cwtl
mov
les
or
imulb
jge
mov
adc
mov
xchg
lret
cmp
or
inc
hlt
out
sbb
mov
dec
call
stc
out
xchg
xchg
xor
xchg
loop
mov
ficoms
movsb
mov
pop
jle
lds
push
sbb
pop
adc
ja
push
push
mov
or
sets
xchg
mov
jmp
adc
jle
clc
lcall
test
jp
adc
cmp
scas
ss
sti
jns
push
fwait
push
jle
push
push
mov
pop
add
adc
or
leave
scas
mov
cmp
in
fucompp
ss
add
mov
adcl
ja
adc
adc
leave
pop
insl
cmp
inc
cmp
scas
mov
scas
int
push
les
sub
dec
push
scas
push
daa
insl
push
outsl
adc
outsl
enter
lods
cmc
dec
je
inc
pop
mov
sub
addr16
fsubs
jle
pop
orb
fadd
jae
arpl
ss
cs
mov
jo
popw
dec
fcomps
daa
add
pop
js
sbb
test
xor
lcall
test
push
lcall
mov
js
add
xor
stc
add
push
add
or
sbb
movsb
lds
add
push
std
jno
out
mov
mov
mov
xlat
lret
sbb
sti
add
adc
data16
fs
cld
out
aad
aaa
insl
pusha
fcomps
notb
aas
clc
ror
loop
out
add
and
jbe
xchg
xchg
stc
iret
sbb
inc
mov
dec
push
mov
jae
nop
and
add
jb
push
sbb
cmp
movl
push
orl
leave
mov
nop
jg
insl
lea
pop
in
mov
pop
xor
xor
ret
das
aad
jecxz
in
push
hlt
xchg
pop
cmp
iret
stc
dec
enter
jae
push
add
mov
aad
jno
pop
push
orl
out
iret
push
mov
mov
xchg
lds
addl
push
das
movsl
xor
mov
fwait
mov
fistl
jge
xor
arpl
or
sub
mov
push
in
inc
call
jno
pop
pop
aam
jge
lods
or
mov
lods
in
add
repnz
and
mov
fiaddl
and
add
sub
aam
int
push
dec
mov
pop
inc
adc
mov
sahf
inc
or
out
xchg
repnz
and
xor
inc
filds
sbbl
mov
jge,pn
sub
jne
push
in
mov
jmp
push
dec
enter
jl
test
fwait
sub
xorb
jne
fstpl
adc
mov
mov
loope
lods
and
js
adc
repnz
add
adc
pop
add
fs
jecxz
push
int
push
pop
mov
push
inc
pop
into
addr16
dec
hlt
insb
es
sbb
fucomi
xchg
js
shrb
aas
outsl
jbe
test
mov
push
pusha
ss
out
add
xchg
adc
call
mov
testl
imul
mov
xchg
mov
add
loopne
aas
ljmp
out
and
cmp
fidivs
inc
int3
mov
cld
push
icebp
sbb
lahf
pop
or
cmp
lock
dec
mov
iret
or
clc
ljmp
movsl
insb
fnstenv
or
std
stc
mov
inc
dec
and
sar
arpl
clc
mov
cli
jae
xor
mov
xchg
mov
outsl
pusha
out
xor
sahf
gs
outsl
adcb
lods
nop
jle
sti
or
aas
adc
inc
data16
test
in
cmp
call
lods
xchg
addr16
jne
sbb
lcall
idiv
sub
cmp
cmc
insb
mov
inc
rclb
jl
lcall
cmp
and
sub
inc
pushf
adc
test
int3
xor
inc
cmp
inc
fnstsw
mov
ds
cmp
inc
jns
sbb
jp
ljmp
dec
sub
fnsave
cmp
and
in
dec
gs
cmpsb
jl
popa
inc
pop
fwait
arpl
incl
lcall
fisubs
ja
lds
loopne
scas
sbb
leave
movsl
push
cmpsb
push
and
mov
lds
aas
cs
das
cmp
test
testb
add
sub
cmp
jo
and
outsl
fmull
xchg
ror
jp
jb
xchg
jne
shrb
adc
clc
and
out
inc
int
pusha
in
xchg
ret
xchg
xor
dec
jecxz
gs
js
dec
cmpsb
ja
pop
stos
dec
addb
and
push
aam
pop
leave
das
hlt
mov
dec
mov
xor
nop
cmpsl
gs
pop
add
add
cmpsl
ja
sbb
mov
in
into
bound
ficomps
aam
int3
cwtl
insl
cmpsb
sbb
adc
addr16
aas
xchg
dec
adc
jns
mov
cmp
lock
xchg
std
adc
divps
repz
push
push
cwtl
data16
into
lods
idivl
or
les
xor
outsl
negb
pop
sbb
jbe
mov
mov
pop
lea
mov
adc
mov
inc
ds
out
mov
movsl
out
test
xor
daa
cmp
cli
in
cs
icebp
hlt
in
xor
or
mov
inc
mov
mov
jmp
popf
dec
call
dec
andl
fs
ss
popf
int3
and
adc
lret
in
pop
cmc
fwait
xor
mov
jg
jg
inc
ret
arpl
adcb
pop
cs
aam
push
shrb
sbb
aad
cmp
enter
push
mov
add
movsb
pop
movsb
dec
std
out
mov
imulb
xor
jnp
repnz
pop
pop
push
add
ss
push
aaa
dec
mov
push
mov
jno
mov
pop
dec
rcrb
int
data16
sbb
cld
ret
lahf
pop
jl
jge
sbb
cs
negl
gs
cwtl
pop
pop
sti
sbb
inc
sbb
sub
xchg
in
test
jb
jns
sbb
add
xor
jmp
jnp
sub
in
sar
mov
cmpsl
pop
imulb
inc
sub
rclb
push
aad
xor
xchg
ffreep
cwtl
xchg
ret
push
outsb
mov
adc
jno
mov
mov
mov
jns
push
adc
mov
int3
mov
push
mov
pop
xchg
loopne
xor
xor
imul
ds
cli
jnp
neg
rclb
cli
mov
lcall
and
sbb
lahf
mov
pop
mov
pop
push
imul
pop
xchg
test
leave
inc
out
mov
pushf
scas
in
dec
popa
xchg
ljmp
lret
xor
fisttps
js
mov
mov
push
push
gs
les
sarl
push
or
jb
shl
jno
mov
sub
and
mov
mov
sahf
ljmp
je
mov
add
xor
xlat
enter
pushf
push
jb
push
sub
add
dec
insb
cmp
jl
jbe
fwait
test
popf
insl
adc
loopne
iret
hlt
adc
fs
into
imul
inc
and
sbb
adc
add
xchg
mov
scas
cwtl
push
das
cltd
ficoml
jmp
jl
test
push
mov
cltd
es
sub
push
stc
repz
push
mov
and
subb
ret
add
daa
mov
and
aas
jne
test
jg
fwait
mov
js
jae
cmp
mov
mov
mov
jb
push
inc
loopne
pop
and
les
dec
sbb
mov
jl
mov
mov
imul
repnz
inc
push
in
mov
jg
mov
fsubs
push
xor
push
out
das
leave
loopne
jb
mov
push
push
adc
and
adc
xor
mov
xor
cld
mov
and
daa
aam
jl
lcall
mov
imul
fmulp
lods
jne
add
cwtl
notb
xor
jecxz
and
inc
cltd
test
pop
jge
sbb
jge
sbb
pop
cwtl
xor
scas
push
out
adcb
test
mov
inc
mov
lcall
dec
jmp
repz
fidivrl
pop
or
mov
add
arpl
mov
push
or
faddl
push
out
fs
adc
mov
cs
popa
aad
repnz
ljmp
sbb
add
push
lods
imul
stc
mov
stos
out
sbb
mov
pop
dec
insb
outsb
sahf
mov
shl
push
out
lea
int3
mov
mov
cli
lahf
outsl
scas
jne
sbb
dec
pusha
ret
cwtl
dec
test
enter
push
jmp
sbb
cmp
cmovns
jo
push
fcomps
xchg
imull
and
add
ljmp
mov
sbb
pop
cli
mov
das
test
leave
dec
dec
sbb
sub
or
int3
negl
pusha
dec
mov
dec
inc
cmpsl
fdivs
jns
mov
mov
scas
mov
jns
in
sub
add
bound
sub
mov
retw
bound
xchg
aad
mov
adc
or
ficomps
cmp
ss
mov
push
idivb
or
or
outsb
mov
mov
loopne
adc
mov
mov
jle
sub
mov
je
push
mov
clc
ror
movsl
in
bound
fdivr
push
xchg
iret
mov
popf
xchg
call
das
les
popf
lock
cmp
das
dec
stos
outsb
out
inc
jnp
lods
clc
mov
sbb
ja
loope
enter
cld
shl
aam
aas
add
fdivrl
iret
dec
test
dec
mov
pop
pop
xlat
fadds
mov
mov
sub
xor
and
jge
and
mov
mov
enter
pop
hlt
cmp
xor
pop
xlat
cmpsb
sub
cwtl
mov
sbb
das
sbb
and
pop
dec
pop
cld
int
mov
push
adc
and
mov
jle
mov
add
add
or
call
mov
fwait
dec
int3
pop
push
xchg
pop
or
adc
sbb
mov
sbb
sbb
popa
cs
lods
clc
mov
and
cmpsb
jnp
scas
dec
sets
jle
pop
imul
scas
into
push
outsl
add
mov
push
gs
or
adc
or
int
test
bound
mov
cmp
idiv
pushf
fwait
in
mov
sub
sbb
sti
or
leave
push
sbb
movl
adc
inc
mov
pusha
inc
xchg
mov
sbb
mov
jecxz
scas
mov
or
ficompl
cmpb
mov
add
mov
icebp
cs
dec
inc
hlt
sub
inc
add
inc
mov
mov
test
bound
stos
sbb
xor
mov
mov
int3
les
dec
push
sub
sub
test
sub
jp
or
xor
add
or
xchg
xchg
aaa
push
mov
pop
loop
dec
add
add
dec
pop
xchg
mov
mov
stc
or
adc
in
je
mov
dec
xchg
xlat
imul
rcr
jmp
into
pop
sbb
add
mov
cld
push
add
pop
cmp
inc
sub
fwait
adcb
addr16
addr16
push
movsl
xor
push
jp
push
fwait
mov
cwtl
insl
pop
cwtl
jb
push
iret
ljmp
lcall
lds
adc
jbe
fimull
dec
int3
aaa
popf
rolb
pop
in
push
pusha
jno
xchg
sub
fistpll
cmc
sbb
jbe
shrl
sbb
lods
jae
pop
cli
adc
xchg
pop
int
inc
cltd
push
out
jns
cmp
imul
push
xchg
test
mov
mov
int3
insb
sub
sbb
jo
dec
mov
dec
aaa
divb
popf
clc
xchg
push
pop
xlat
cmpsl
pop
loop
clc
leave
add
in
mov
adc
inc
sub
jns
adc
arpl
cmp
aam
dec
pop
pushf
mov
es
movsb
jmp
movsl
add
test
adc
inc
cmpl
mov
out
test
add
lock
imul
int3
int3
pop
sbb
inc
dec
ret
imul
mov
fsubl
cmp
lea
out
rcl
fcomi
sub
jmp
loopne
loopne
stc
add
icebp
call
loopne
xor
xchg
adc
or
jle
int3
push
gs
cmpb
inc
or
stos
dec
push
pop
sbb
or
inc
xchg
cwtl
stos
sub
adc
push
data16
test
out
out
cmc
outsb
aad
negb
xchg
jecxz
sbb
mov
sub
cmp
cmp
push
pop
pop
rcr
inc
xor
lahf
or
je
in
sbb
mov
mov
aad
aas
pop
ret
or
sahf
dec
sarl
adc
xorl
cwtl
cmp
notl
arpl
pop
or
jne
pop
in
outsb
xchg
nop
int3
pop
add
incb
cltd
mov
pop
aas
lea
lret
sub
lods
out
cld
movsb
sbb
ret
or
jmp
add
xor
jns
adcw
push
jne
dec
out
mov
mov
cmpsl
mov
xchg
ret
popf
pushf
dec
jle
lods
notb
xor
les
xchg
inc
stos
call
fldcw
bound
mov
pop
lods
fdivrs
push
test
or
mov
filds
stc
and
mov
jns
stc
pop
jg
or
push
push
orl
add
into
xlat
arpl
shll
mov
mov
jo
incb
dec
and
xor
or
fdiv
in
push
inc
mov
popa
jae
push
mov
sbb
push
mov
fwait
aad
rcll
insb
outsl
cs
mov
test
jne
xchg
insl
ds
pop
ret
sbb
imul
mov
rcr
lret
mov
adc
xor
insb
cmp
ja,pn
xorl
xlat
add
lods
jg
xor
push
outsl
xor
mov
push
sbb
inc
jp
mov
mov
es
repnz
dec
ljmp
inc
leave
xor
pop
xchg
nop
cld
mov
mov
inc
call
sbb
outsb
int
push
mov
std
pop
lock
jb
cmpsb
inc
or
sbb
push
ljmp
aad
mov
cmp
hlt
jae
mov
mov
movsb
inc
add
push
out
cmp
lret
adc
mov
mov
sbb
push
and
divl
and
mov
sbb
pop
push
ds
outsb
repnz
bound
int3
loopne
sbb
dec
cli
sbb
mov
push
ret
or
shl
in
lods
pop
lods
jmp
adc
cmp
cltd
or
mov
dec
lret
adc
adc
or
sub
mov
aas
mov
out
mov
out
aaa
xor
fistpl
scas
jl
jmp
sbb
mov
fdivrl
addr16
adc
in
push
repnz
sbb
jg
push
rolb
fwait
adc
test
xchg
sbb
insl
stc
arpl
mov
lods
jbe
in
out
cmc
pop
test
mov
addb
xchg
mov
add
cli
push
cmpl
shrb
pushf
nop
mov
or
push
fldt
adc
jns
push
xchg
cmp
je
mov
out
mov
mov
or
push
add
jbe
push
mov
bound
jmp
in
cld
inc
out
into
and
cltd
leave
enter
push
push
bound
cltd
inc
dec
mov
adc
cmpl
pop
out
xchg
mov
es
adc
std
mov
lahf
je
hlt
push
mov
jge
xor
std
push
cwtl
pop
mov
lea
imul
rol
insb
add
mov
pushf
arpl
mov
cmpb
hlt
ss
sbb
call
mov
mov
aam
int3
xor
lret
pop
inc
dec
push
cmp
pop
xor
pop
jmp
inc
out
ss
mov
dec
stos
push
das
vmulss
inc
adc
cld
jp
iret
hlt
adc
jb
adc
das
or
gs
mov
loopne
sub
lds
mov
mov
jl
mov
inc
fdiv
daa
scas
mov
xor
jl
or
roll
fbld
adc
andb
jmp
fnstcw
pop
xchg
mov
aaa
and
daa
xlat
loopne
shll
dec
pop
xchg
sub
inc
jmp
aaa
stc
and
rcl
lea
lds
lods
mov
lds
sub
dec
nop
pop
lahf
xchg
adc
test
cmp
cmpsl
sti
xor
mov
les
jg
iret
insb
cli
mov
aaa
ljmp
daa
lret
inc
or
jae
jecxz
aaa
sbb
pop
push
cmpsl
xor
mov
fsubrs
lret
mov
inc
mov
lds
mov
inc
cmp
adc
std
in
test
inc
add
xor
adc
ret
repnz
dec
rolb
mov
mov
sbb
imull
dec
aaa
and
cwtl
aad
adc
jae
jae
fwait
lods
movsb
sbb
add
sbb
push
and
cmp
rorb
jno
cmp
loopne
mov
dec
lds
sbb
adc
cld
sbb
lds
sub
icebp
loope
fisttps
lret
cmc
or
out
xor
and
loope,pt
mov
and
jge
adc
mov
lods
jge
mov
out
xor
sub
dec
fcoms
out
inc
in
ss
mov
das
fisubs
loop
insb
push
pushf
adc
push
int
push
and
jae
lcall
ljmp
jnp
jae
fs
enter
stc
pop
and
xor
fs
loope
and
mov
xchg
outsl
pop
mov
and
mov
iret
bound
xor
jp
pop
push
movsb
fistl
dec
and
sbb
lods
cmpsb
es
cmp
jmp
sbb
and
fadds
int
inc
cmp
hlt
push
pop
pop
xchg
adc
jg
out
sub
scas
adc
pop
mov
jbe
or
add
and
cltd
or
aam
push
in
mov
and
cmc
ficompl
popf
push
xchg
pop
lret
xor
xor
iret
popf
sub
lods
je
out
out
mov
xor
fwait
jle
ficoms
je
jle
push
hlt
jae
mov
in
rol
mov
movsb
pusha
into
jge
ljmp
or
xchg
rclb
imul
mov
xchg
loopne
pop
sbb
add
and
inc
mov
pusha
sbb
push
loop
dec
fadds
inc
data16
arpl
ja
inc
jl
inc
add
add
daa
cmpb
or
loop
mov
mov
fildll
outsl
mov
sub
sub
jmp
test
rcrb
stos
cmp
push
jo
pop
sbb
mov
fs
mov
aas
or
lret
dec
aad
mov
aad
sbb
jp
add
cltd
in
rol
pop
stos
popf
aad
cld
push
push
arpl
fs
dec
pop
pop
push
dec
in
jbe
xchg
movsb
addr16
add
fnstenv
dec
sub
mov
push
dec
repz
sbb
insb
in
or
popf
jbe
repz
mov
jge
mov
inc
clc
xchg
aam
fdivrl
iret
mov
push
fildll
rcl
sarl
dec
mov
scas
mov
pop
icebp
in
mov
mov
mov
pusha
cmc
or
int3
jle
loopne
insb
jno
dec
pop
jecxz
mov
inc
jle
fsubrl
add
in
mov
sbb
les
repz
sub
and
test
es
loope
ret
jp
pop
or
popa
pushf
pop
dec
insl
into
arpl
mov
ret
lock
inc
popf
aas
sub
jno
inc
test
mov
cwtl
loop
adc
outsl
sub
push
adc
cmp
outsb
sbb
inc
mov
sar
and
imul
mov
ficoml
mov
rcll
inc
push
inc
lock
xchg
std
leave
daa
or
cmp
cmp
sahf
sahf
pop
hlt
or
sub
das
xor
mov
xor
scas
cli
push
pusha
or
repz
outsl
out
ss
je
and
xchg
enter
xor
mov
push
scas
test
sbb
mov
dec
push
and
sar
mov
and
pop
in
outsl
push
xor
jp
test
jle
stos
das
ror
sub
xchg
andb
mov
mov
xor
int3
inc
insl
push
adc
xor
mov
fidivs
add
std
out
not
mov
mov
das
bound
mov
stos
mov
mov
xor
xchg
inc
cmp
in
jo
das
cwtl
xor
xchg
cmpsb
adc
sbb
dec
addr16
dec
mov
popa
loopne
loop
cmp
pushf
lods
mov
mov
push
and
aad
ja
sarl
cmp
fstpt
mov
jno
sub
je
cmpsl
mov
mov
sub
mov
inc
fisttpll
data16
sbbl
loopne
push
aas
mov
pop
cmp
arpl
push
mov
lods
sub
sub
inc
popf
pushl
cwtl
test
mov
bound
pushl
cmp
mov
out
or
mov
or
in
imul
in
push
icebp
jo
jno
push
repnz
jp
mov
or
leave
iret
or
push
and
cmp
push
xchg
into
mov
lea
mov
and
mov
ss
adc
loop
int3
enter
and
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
jne
adc
std
push
adc
aas
adc
sbb
adc
sbb
add
push
adc
out
jg
add
dec
adc
mov
jns
add
inc
adc
sbb
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
add
add
add
add
add
add
inc
cmp
add
scas
inc
adc
inc
cmp
add
adc
push
adc
cmp
add
sbb
add
adc
idivb
inc
add
cmp
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
subb
cli
adc
sbb
adc
pop
inc
adc
sbb
adc
in
pop
adc
pop
sub
add
add
inc
add
add
inc
add
add
cmp
add
aaa
adc
cmpl
adc
push
dec
adc
mov
adc
lock
add
adc
outsb
or
add
add
add
push
push
inc
push
mov
sbb
lcall
or
add
add
pop
dec
outsb
jae
popa
insb
insb
and
je
pop
push
outsb
fs
dec
push
pop
dec
popa
imul
outsl
insb
fs
dec
outsb
arpl
gs
dec
outsb
outsw
inc
jo
add
add
add
add
add
cmp
add
add
add
add
add
mov
cmp
add
mov
cmp
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
