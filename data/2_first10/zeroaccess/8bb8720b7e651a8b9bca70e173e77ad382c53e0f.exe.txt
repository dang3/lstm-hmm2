mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
push
iret
push
nopl
jmp
mov
xlat
aam
in
mov
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
aaa
pop
add
movsl
andb
pop
int
mov
cmp
sub
fs
imul
inc
cmpsl
das
jp
mov
cmp
ja
xchg
xchg
clc
sub
test
sarb
mov
pop
pop
push
add
dec
sbb
jge
int3
repz
add
mov
es
iret
out
mov
push
pop
out
aas
lock
and
sub
cli
jno
loop
lds
mov
lock
std
sub
adc
shr
and
mov
push
xor
gs
jnp
sub
dec
test
jns
es
in
and
or
lret
fsubl
adc
popf
les
lret
call
sar
lds
push
imul
mov
movsl
adc
jl
sahf
cmp
mov
in
add
dec
mov
jecxz
mov
xchg
daa
pop
cmp
inc
inc
gs
pop
inc
ljmp
imul
xchg
sbb
mov
add
ret
lcall
ds
cmpsl
stos
icebp
ds
pop
cmp
call
stos
pusha
dec
mov
lods
lea
pop
xchg
into
mov
inc
push
aad
je
insb
leave
mov
jl
xchg
inc
xchg
sbbl
mov
jg
cmp
stos
loopne
jo
cmp
push
or
cmp
ret
xor
mov
pop
outsl
mov
mov
into
mov
movsb
push
in
ret
sbb
sub
fmulp
pusha
xchg
dec
xor
push
je
rolb
imul
lods
sti
inc
cmp
mov
xchg
and
cmp
sbb
mov
inc
dec
sub
push
and
add
push
xor
testb
cmp
jmp
fidivrs
cltd
push
in
jae
jp
cmc
addr16
jmp
out
fdiv
pop
mov
or
rolb
cld
mov
js
fbld
sbb
popf
mov
lahf
mov
cs
rcll
sbbl
sub
mov
mov
xor
leave
ja
cmp
fadd
pop
data16
cmp
cli
jnp
loope
lret
mov
clc
mov
add
in
pop
cmp
push
mov
sub
daa
xlat
pop
in
jae
aad
js
dec
mov
xor
imul
push
cmpsl
je
imul
sub
and
xchg
sub
shll
push
mov
add
sbb
retw
adc
into
aam
je
fidivrs
stos
ret
dec
fists
ja
mov
push
aaa
sbb
repnz
fisubrl
imul
ljmp
fildl
stos
xor
push
jmp
push
jns
sub
out
out
sub
test
dec
bound
fs
shll
push
stc
int
jge
adc
lock
mov
jns
std
mov
xchg
divb
outsb
jne
jecxz
cmp
hlt
and
sbbb
xor
ret
aaa
adc
aam
stos
es
pop
cmpsl
adc
mov
cmpsb
ja
std
mov
xchg
out
shlb
movsl
dec
xchg
enter
out
adc
imul
jb
xchg
sub
rclb
andl
xor
in
arpl
bnd
test
std
je
inc
nop
fs
or
sbb
xor
addl
mov
je
outsl
push
pop
xor
sahf
inc
adcb
xlat
repz
xchg
inc
add
or
dec
mov
mov
jae
pop
xchg
jb
dec
repz
push
mov
inc
sub
negb
sbb
inc
cmp
adc
sbb
add
gs
jle
push
arpl
xchg
mov
add
or
les
inc
inc
lret
imul
xor
or
push
insl
jns
mov
mov
scas
jne
pop
cwtl
pop
pop
pop
movsb
cmpb
cmp
xchg
or
mov
or
outsb
jge
mov
adc
test
xchg
sbb
in
fwait
call
negb
jmp
negb
pop
in
sti
ss
scas
xor
rorl
es
rclb
mov
hlt
sub
repz
push
xchg
fisttpl
hlt
insl
push
fbstp
adc
mov
xchg
cltd
lds
fs
fcomps
lea
fiadds
mov
mov
out
pop
dec
cmp
adc
nop
rolb
xorb
iret
or
enter
or
or
loop
mov
jno
gs
or
rorb
pop
out
je
loopne
cmp
out
dec
jne
mov
je
lods
scas
nop
mov
dec
popf
les
fidivrs
iret
cltd
mov
arpl
cmp
push
psrad
push
push
das
jp
xchg
fcomps
push
loope
loop
add
subb
and
mov
les
je
xor
enter
es
adcb
xchg
push
test
add
lea
pop
mov
int3
dec
mov
out
setge
xchg
mov
aad
mov
push
sbb
into
test
adcb
mov
inc
std
jae,pt
mov
stc
add
outsb
adc
add
mov
pop
xor
leave
jp
jmp
cwtl
stc
call
inc
or
mov
loopne
es
mov
jns
leave
mov
mov
or
cmpsb
mov
xchg
sbb
fadds
lret
push
ljmp
pop
and
mov
jnp
ret
cwtl
fs
adc
ror
push
insb
xchg
dec
dec
inc
ljmp
mov
mov
push
mov
pop
cmp
lds
jmp
fmul
imul
xor
mov
xchg
mov
je
mov
mov
pop
dec
jl
sbb
sub
test
sub
pop
iret
aam
add
ficoml
faddl
scas
andl
cmpl
add
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
ja
sbb
out
mov
lahf
cmpsb
fsubrl
into
fmull
adc
dec
movsb
jnp
dec
out
pusha
dec
pop
sbb
pop
sahf
add
mov
adc
sbb
and
das
cmpsl
pop
faddp
mov
dec
cmpsl
adcl
sbb
cmp
inc
insl
ds
inc
mov
pop
es
mov
mov
fsubl
and
add
int
add
gs
aas
ret
roll
popa
xchg
mov
mov
xchg
lods
inc
shlb
inc
out
fsubrl
xor
outsl
jmp
cltd
pushf
loope
scas
adc
mov
dec
jl
inc
xchg
push
mov
xchg
and
or
sub
fidivs
xor
stos
je
testl
dec
cmp
mov
pop
or
pushf
out
es
mov
je
clc
popf
movsb
repnz
ficomps
jge
sub
or
dec
cmp
jecxz
pop
iret
sbb
push
cmp
ds
jecxz
xor
push
push
dec
test
inc
pop
xchg
push
ja
shll
fstps
pop
mov
lock
nop
movsl
or
inc
cmpsb
dec
push
arpl
sub
scas
bound
les
mov
decb
mov
and
push
jbe
scas
mov
lock
test
push
sbb
insl
repz
xchg
popf
or
ret
or
mov
push
mov
aaa
mov
adc
sub
into
or
ss
popf
mov
mov
adc
mov
jns
xchg
cwtl
mov
in
pop
std
or
testl
fstps
mov
pmullw
pop
pop
sbb
scas
aad
dec
push
dec
addr16
mov
inc
out
mov
xchg
xchg
test
cmc
out
mov
out
jg
add
add
stos
xchg
fstl
cltd
adc
testl
sub
outsb
pop
nop
xor
jle
or
mov
sbb
adc
pop
mov
mov
push
cwtl
sahf
mov
fldl
test
mov
mov
pop
daa
mov
and
mov
push
addr16
in
xchg
push
shrl
ja
cmp
lret
xor
mov
pop
divl
scas
subb
push
dec
cli
scas
shll
adc
outsl
sub
lret
repnz
gs
insl
js
repz
jecxz
outsb
add
xor
jbe
ds
or
pop
sbb
mov
sub
xchg
add
add
imul
pop
insl
jg
test
rcrb
cltd
das
jae
test
shrb
scas
mov
mov
push
dec
mov
call
out
add
jg
xlat
pusha
cmp
fs
push
pop
stc
cwtl
xchg
cmpsb
mov
push
ds
fldl
cmpsl
daa
aam
shrl
jb,pt
cmp
idivb
sub
pop
push
mov
or
mov
lods
adc
ljmp
push
sbb
jo
jmp
repz
add
std
out
push
jnp
xor
and
in
lea
or
cmp
xor
repnz
adc
push
ret
xchg
aaa
xor
jle
movsl
push
loope
jne
clc
mov
inc
cmp
cmpsb
lods
idiv
jns
sub
pop
pop
std
xor
dec
xor
xor
cmp
xor
imul
js
int
pusha
pop
dec
pushf
in
aam
out
out
dec
inc
mov
in
add
lods
outsl
cmp
insl
push
jne
jae
nop
pop
dec
andb
mov
pop
movsl
dec
adc
pushf
jmp
mov
mov
xor
mov
push
pop
mov
fcomp
add
lods
test
dec
xchg
adc
add
xor
and
in
es
pop
push
jmp
mov
sub
mov
inc
mov
or
lods
cmp
inc
cmp
ret
sar
notb
inc
pop
fs
int
push
sbb
fnsave
addr16
pushf
cli
dec
sbb
lods
mov
xchg
clc
inc
pop
push
xor
mov
fldenv
adc
out
dec
sub
jp
fisubs
dec
xchg
pop
mov
std
loop
jno
mov
addb
adc
iret
dec
or
push
dec
fiaddl
push
ret
popa
ja
test
shrb
add
aaa
pop
loopne
add
test
mov
push
and
cmp
lods
loop
or
fwait
add
shlb
lock
ljmp
mov
test
mov
jnp
adc
mov
push
xchg
and
dec
lock
out
ret
mov
push
xchg
pop
sub
stos
mov
aas
dec
add
sbb
sbb
cmp
push
decl
ljmp
sbb
mov
out
jae
adc
or
adc
test
pop
pop
cmpsl
inc
loop
sbb
mov
jbe
pop
mov
xor
cmp
mov
dec
lahf
jp
jae
dec
enter
dec
into
movsb
sub
pop
and
jp
test
xor
ja
sbb
rcrl
mov
ds
jne
jnp
cwtl
cmp
sbb
push
dec
adc
xchg
icebp
jmp
pop
test
cli
shlb
test
into
sbb
mov
mov
push
adc
jb
mov
xor
jmp
fs
test
test
daa
nop
push
shlb
xchg
cmp
mov
xchg
xorb
mov
bnd
mov
or
cmp
test
pop
in
inc
aam
jno
add
inc
fdiv
add
add
inc
fcoml
inc
loopne
arpl
add
ds
add
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
paddw
int
jb
and
xor
xchg
push
adc
jnp
push
adc
jmp
xchg
sahf
mov
scas
cmp
jecxz
or
push
pop
test
mov
call
test
push
adc
in
aas
in
aas
fs
pop
out
les
cmc
sbb
xor
cli
inc
jnp
lret
bnd
jns
pop
xchg
pop
sub
pushf
mov
xor
into
mov
mov
in
int3
test
ja
cmp
sub
pop
rorb
cmp
mov
pop
inc
sub
pop
mov
jmp
cmp
mov
movsl
ret
jno
jmp
mov
mov
test
adc
xor
mov
mov
scas
test
ret
push
xchg
or
nop
cmp
sub
push
mov
xor
in
mov
xor
insl
adc
testb
hlt
or
ficoml
out
pusha
xchg
je
out
xor
ret
cld
add
cmp
dec
ret
add
pop
shlb
mov
nop
xchg
testb
mov
pusha
xchg
cmpsl
fs
sbb
push
xchg
pop
mov
sub
cmp
pop
scas
lods
test
leave
sbb
cld
cmp
fiadds
scas
mov
mov
inc
cmp
fldl
leave
and
push
arpl
jbe
xorl
ss
loope
cltd
outsl
mov
jb
mov
gs
mov
jecxz
dec
mov
jg
fistpl
pop
inc
jnp
out
rclb
mov
xchg
aaa
psubd
andl
sahf
xchg
push
lret
adc
sahf
cmove
jecxz
loop
pop
es
jne
sbb
jns
cmp
pusha
and
or
outsl
inc
xlat
dec
js
js
scas
loop
out
sub
mov
push
add
arpl
ja
jbe
data16
xor
add
int
les
ds
xchg
in
mov
push
or
push
sti
test
mov
arpl
lods
dec
cmp
inc
and
aaa
inc
loop
push
jecxz
sbb
adc
push
xchg
std
ret
leave
dec
cltd
ss
adc
inc
sub
jbe
stos
lods
jle
jno
inc
ja
mull
rol
fldcw
inc
xchg
cli
stc
pop
dec
stc
scas
ret
pushf
xor
test
ret
xorl
and
mov
or
dec
add
push
inc
cli
fdivl
data16
xlat
xor
adc
sahf
ss
push
xlat
nop
dec
mov
psrad
andl
clc
ret
imul
push
scas
mov
scas
cwtl
cld
mov
jo
pop
cmp
mov
pop
pop
test
sub
arpl
inc
cmpsb
push
and
dec
push
lret
ret
inc
fbstp
ljmp
pusha
mov
fidivl
mov
dec
mov
inc
sub
into
test
xor
ljmp
outsb
and
xor
adc
ljmp
stos
push
test
add
dec
mov
mov
xchg
mov
out
mov
mov
cmp
test
add
xchg
enter
call
das
lods
sub
fimull
stos
rorb
dec
inc
pushf
inc
loope
into
bound
std
jp
mov
or
aas
sti
inc
mov
movsl
inc
test
shll
stos
inc
push
xlat
xor
pop
movsb
inc
loop
repz
mov
mov
inc
mov
mov
inc
inc
icebp
add
push
and
faddl
in
cmp
scas
adc
adc
pop
sbb
clc
xorl
inc
loop
test
or
add
push
cmp
cmp
nop
mov
inc
sub
nop
mov
fsubrs
push
pop
xchg
xlat
inc
int3
and
xor
jp
push
pop
in
xchg
int
cmpsl
or
fdivrs
test
add
nop
inc
pop
mov
js
push
fnstenv
mov
mov
xor
or
sub
push
inc
push
inc
dec
mov
cld
pop
call
shrl
dec
push
jns
idivl
pop
repz
stos
adc
inc
mov
sub
mov
sub
push
jmp
test
xchg
sub
mov
pop
mov
repz
push
cmc
push
xchg
sti
movsl
int
out
cmp
jp
mulb
test
jae
sbb
cld
inc
scas
outsl
push
xchg
lahf
mov
inc
lahf
cld
xor
sub
aas
sbb
sahf
inc
pop
dec
mov
inc
and
clc
orb
dec
lods
add
mov
repnz
sub
lods
gs
jl
lahf
sub
add
mov
dec
or
push
ja
inc
push
xchg
and
into
mov
mov
aad
imul
and
and
add
in
into
pop
cltd
ss
addb
xor
das
adc
sahf
jb
sbb
nop
jmp
imul
mov
jmp
dec
pop
loop
fldl
cmpsb
add
mov
fsubs
movsl
xlat
aam
leave
lret
fsts
xchg
mov
pop
lret
movsl
mov
js
xchg
sub
inc
inc
fmulp
inc
mov
lea
add
outsb
aad
loope
mov
das
jb
idivb
int3
push
inc
rcrb
push
movsb
and
sbb
shll
rcr
lcall
into
jp
cs
dec
xor
mov
shlb
jbe
outsb
pop
shlb
xor
outsl
lret
dec
insb
jge
and
xchg
int3
jp
test
or
jmp
xor
mov
or
pusha
sarl
int
int
test
push
sub
in
dec
add
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
cmp
xchg
fimuls
pinsrw
jg
xchg
push
cmc
mov
or
outsb
loope
leave
mov
sub
das
aaa
push
and
adc
xchg
jbe
mov
imul
or
mov
dec
mov
mov
test
in
or
dec
aam
sbb
pop
sub
aas
ret
ret
sbb
out
lods
jg
mov
xchg
inc
push
aas
mov
sub
lods
inc
inc
jecxz
and
test
jl
inc
aaa
aas
or
lods
mov
sarb
adc
adc
sbb
aam
pop
sub
and
sub
rolb
dec
imul
jns
out
cmp
les
and
movsl
cs
lods
out
cld
xchg
into
mov
fldl
mov
fistps
sub
pushf
inc
add
push
lcall
pop
imul
jne
pusha
gs
stc
stos
dec
repnz
cs
add
pusha
sub
push
mov
sub
pop
sbb
insl
lahf
push
in
mov
cmp
aad
sbb
xchg
divl
sub
movsl
clc
repnz
gs
in
xor
jle
push
adc
push
sbb
lods
mov
mov
jl
dec
lock
mov
pop
popa
sbb
mov
testb
push
sbb
dec
sbb
sbb
int3
xchg
les
inc
xchg
cld
mov
pop
insb
sbb
sbb
ljmp
or
test
stos
or
xor
popl
adc
enter
push
pop
orl
in
jmp
out
push
pop
push
xor
inc
or
push
fcompl
ss
jnp
subl
cltd
or
cmc
xchg
adc
ja
fildll
jo
sbb
jae
and
or
mov
cmp
fwait
and
fs
mov
loop
rorb
subb
jns
shl
cmpsb
pop
shl
stc
mov
test
xchg
rcrb
push
cwtl
orl
cmp
fistps
mov
cmp
addr16
mov
fisttpl
sarl
jno
daa
mov
adc
pop
dec
loop
dec
aad
jle
insb
arpl
stos
out
rol
cmpsl
test
test
in
pusha
mov
movsb
sub
pop
cmp
adcb
push
sub
sbb
jl
xchg
sbb
fdivl
fdivs
xchg
mov
sub
jns
or
and
pop
push
test
pop
push
mov
movsb
jecxz
std
aaa
jecxz
pop
imul
inc
mov
ja
hlt
scas
std
jnp
jle
es
aam
notb
fldt
jno
daa
lock
xchg
jb
pop
xchg
push
rcl
popa
push
mov
adc
adc
int3
cmp
fimuls
mov
scas
movsb
orl
loopne
inc
aam
test
or
dec
mov
jecxz
jge
sar
push
fimull
inc
xorb
je
inc
push
lea
or
or
cmp
icebp
push
fsubs
mov
inc
pop
push
je
aas
inc
sub
push
fisubrl
push
shr
or
repnz
cmp
scas
clc
loop
fisubl
mov
cmc
movsl
data16
sti
sbb
push
out
bound
xchg
filds
and
mov
sti
repz
fwait
pop
sub
ja
sahf
leave
mov
pop
xchg
xchg
cs
pop
clc
sti
and
sbb
mov
shlb
mov
lock
jg
cmpsl
push
test
ja
xchg
add
sub
loop
lret
mov
jnp
jg
fwait
mov
sub
pop
jl
jns
pusha
jle
xchg
nop
mov
jbe
inc
movsl
clc
add
or
js
insl
sbb
hlt
or
inc
outsb
or
pop
cmpsl
stos
mov
addr16
jnp
sub
jle
pop
mov
mov
dec
jb
dec
fwait
mov
jns
mov
inc
lahf
cli
mov
jae
stos
lds
in
sub
in
int3
out
mov
stc
js
mov
pop
adc
outsb
in
mov
repnz
enter
mov
out
inc
jb
inc
xlat
stc
mov
enter
fldl
bound
hlt
test
movl
push
jmp
mov
xor
sbb
orl
or
aaa
insl
pop
les
add
pop
push
movsl
adc
dec
adcl
fstpt
mov
fwait
mov
dec
in
test
jle
jbe
sub
or
add
es
mov
out
xchg
push
in
jnp
fmul
jns
sti
and
xlat
stc
or
aam
dec
out
pop
aad
shlb
das
pusha
pop
popf
pop
int
dec
mov
lea
inc
scas
lods
nop
jae
pop
pop
and
pop
xorb
out
xlat
loopne
mov
mov
xor
fnstenv
mov
iret
jecxz
hlt
jecxz
pop
jge
ficomps
sbb
outsl
daa
rcrl
aad
clc
fidivrl
andb
dec
dec
cwtl
jnp,pn
mull
jmp
sbb
mov
enter
pop
insb
arpl
add
sub
mov
in
push
bound
lahf
pop
mov
test
shl
sub
mov
fs
xor
sti
inc
pop
cmpsl
je
int
stc
mulb
jl
sbb
add
in
add
xor
hlt
and
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
xchg
outsb
xchg
cmp
pinsrw
push
mov
pusha
dec
and
subl
fidivl
jnp
pop
push
xor
or
aad
pop
dec
or
imull
mov
loop
movsl
insl
test
lds
loopne
pop
inc
adc
add
mov
lock
sbb
cmp
sbb
out
mulb
cmpsb
inc
movsb
mov
pop
and
add
push
pop
cmp
gs
lahf
imul
sahf
dec
push
aad
dec
pop
into
fistl
test
lret
mov
or
fimull
adc
cmp
subb
out
mov
call
mov
subl
and
xrelease
push
jo
dec
and
sbb
mov
dec
imul
leave
xchg
inc
aad
push
pusha
pop
cmp
jne
aas
sub
jne
arpl
adc
dec
andb
js
jmp
movsb
jb
jl
mov
jbe
lds
stos
cmp
xchg
adc
fists
sahf
jmp
out
mov
out
das
pushl
sbbb
lock
int
sahf
and
pop
nop
mov
jecxz
ret
sub
pushf
xchg
adcb
cmp
mov
loop
orl
rclb
hlt
shll
es
xchg
fstpt
icebp
stc
push
lret
or
ret
mov
iret
or
sub
fstpl
shlb
popa
addb
mov
mov
das
or
jo
xlat
rorb
add
shr
test
xchg
pop
or
fcmove
sbb
hlt
cmpsl
dec
or
cmpsb
jns
push
movl
cwtl
cmp
jg
mov
and
popf
fimull
or
dec
xlat
adc
cmp
mov
ret
mov
in
mov
sub
pop
mov
inc
xchg
cld
sbb
pop
add
jp
adc
dec
cmp
pop
jno
inc
in
add
add
mov
rcll
pop
shll
xor
push
je
rcl
xor
cmp
inc
fdivrs
and
stos
xor
mov
mov
mov
push
ds
mov
insl
scas
push
dec
imul
sub
push
xchg
mov
cltd
test
aam
dec
jmp
ret
es
mov
push
fldt
or
pop
inc
cmp
repz
mov
cltd
idivl
push
jno
cmp
in
mov
sti
ret
test
dec
dec
jnp
dec
cs
lods
outsb
mulb
aas
xorb
testb
push
pop
sahf
idiv
fadd
xchg
pop
insl
mov
add
test
jbe
in
adc
test
mov
jno
sub
cwtl
fs
jg
aaa
fld
mov
jae
int
or
in
or
xor
cmpsb
stos
jb
push
lods
mov
popa
dec
push
scas
aaa
jo
dec
mov
cmpsb
sarl
fdivrs
xchg
nop
pop
inc
and
addr16
or
fisubrs
adc
push
cmp
int
push
outsb
clc
js
negb
xchg
ss
out
mov
adc
gs
push
xlat
xchg
scas
mov
aad
daa
adc
test
iret
arpl
aaa
xor
xor
addl
pusha
pusha
pop
insb
mov
shlb
adc
fisubrs
addl
es
mov
decl
dec
aam
fbstp
fs
fstpt
and
into
push
or
dec
sub
xchg
shrd
cmp
mov
ret
jge
pop
xor
into
xor
outsb
xchg
clc
sub
call
xlat
add
rcl
ror
push
leave
outsb
sub
shrl
mov
out
dec
jge
fmuls
js
insb
insl
jmp
insl
sub
movsl
jbe
xchg
stos
test
dec
out
dec
xlat
movsl
jmp
loop
mov
test
ret
jae
xor
outsl
lods
daa
push
iret
push
mov
dec
movntq
xchg
movsb
sub
movsb
xor
mov
push
cmp
mov
ja
add
fimuls
xor
xorb
into
in
loopne
dec
adc
sbb
adc
inc
rorl
hlt
out
enter
rcrb
loopne
cld
lahf
adc
sub
rol
or
sub
jne
push
or
or
fst
test
aad
xor
adc
jo
repnz
push
inc
sub
mov
dec
lods
xchg
nop
adc
pop
test
icebp
add
dec
movsb
jmp
adcb
enter
xchg
mov
push
cmp
xchg
sbb
mov
or
xchg
lods
fcoml
cmp
ret
in
cmc
es
pop
pusha
sbb
ret
pop
sub
outsb
ds
insl
lea
mov
mov
cmp
mov
xlat
adc
lods
sbb
pop
or
add
xchg
and
gs
push
data16
or
arpl
shll
and
mov
and
jecxz
xor
outsb
xor
fbld
ds
movsl
jno
test
pop
cmp
jb
test
mov
inc
or
jno
xchg
cmp
mov
mov
test
jnp
cmp
mov
inc
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
into
xchg
rorb
pinsrw
cvtpi2ps
mov
jmp
sahf
in
pop
jno
and
shrb
fwait
and
dec
outsl
sub
out
inc
xchg
sbb
sbb
sub
mov
inc
lcall
ss
ljmp
xor
push
cmpsb
jmp
jns
adc
pop
popf
andl
add
xchg
push
jbe
enter
mov
fisubrl
or
cld
jb
fdivrl
fstpt
cltd
test
mov
test
scas
stos
mov
test
dec
out
xchg
cwtl
add
push
sahf
pop
stos
aam
insl
push
popf
shl
mov
repz
lods
adc
gs
popf
xchg
test
daa
sbb
dec
mov
stos
stos
xor
fisttps
ror
pop
pushf
lods
mov
mov
pop
es
adc
push
sub
inc
test
xchg
popa
sarb
jbe
repz
fyl2x
xor
adc
lods
int3
lods
sub
sub
dec
xchg
xchg
aad
or
push
ret
lods
jae
and
loope
out
je
test
xchg
xchg
pop
mov
fnstcw
repnz
rorb
adc
std
cmp
addr16
stos
testl
inc
xor
pop
push
testl
out
jbe
dec
jno
xlat
lock
mov
mov
int
inc
movhps
mov
addr16
in
stos
pop
xchg
push
xchg
inc
scas
pop
sbbb
xchg
dec
mov
sbb
popf
aas
test
and
cltd
cmpsb
pop
pop
push
xchg
mov
fistpll
es
scas
int
xor
dec
inc
ss
xlat
mov
pushf
dec
mov
cmp
mov
push
call
bnd
icebp
push
addr16
int3
lea
dec
inc
pop
aaa
enter
cmp
aaa
sub
cld
les
mov
js
xchg
jle
mov
hlt
test
jl
xchg
xchg
sbb
jmp
scas
cwtl
mov
fwait
cwtl
fadds
fistps
fistpll
pop
or
adc
xchg
adcb
sub
jno
pop
aad
ja
mov
fmull
xchg
lcall
or
xor
fbld
mov
cmp
dec
push
out
in
out
bound
aaa
arpl
loop
cmp
mov
sahf
push
testb
sbb
int3
shll
std
ljmp
shll
xor
iret
addl
dec
in
lods
sbb
mov
push
in
lret
cmp
dec
or
add
mov
fcoms
and
mov
lcall
cmp
dec
or
pop
xchg
aaa
mov
arpl
iret
jecxz
inc
mov
cs
pop
test
jae
test
sbb
pop
pop
mov
stos
mov
int
xchg
ret
bnd
dec
scas
jle
cmp
push
xor
shll
inc
sahf
into
mov
mov
jle
out
fsub
stos
dec
cltd
push
sub
cmp
cli
popa
mov
addl
adc
mov
in
and
pop
fdivs
sub
testb
xchg
xor
in
ror
imul
in
xchg
xchg
cmp
push
push
xchg
mov
leave
dec
scas
adc
pop
fimuls
lock
push
gs
outsl
les
sbb
pop
aaa
cld
cmpsl
popa
push
dec
adc
xor
pop
sbb
cltd
jno
movl
ret
je
sarb
sbb
mov
js
sbb
jno
inc
ss
fdivr
push
cmpsl
fiaddl
lds
das
lcall
stos
es
dec
push
subb
pop
xchg
nop
push
sub
lcall
mov
aaa
adc
push
sahf
sbb
or
ds
lahf
fistps
dec
outsl
or
fsub
loopne
and
in
dec
xchg
gs
and
inc
jbe
push
mov
mov
scas
cmpsb
cmp
inc
ret
jge
daa
mov
fcoml
ret
cmp
or
test
add
pop
xor
repnz
xchg
mov
sbb
fwait
dec
pop
popa
push
shrl
push
and
clc
iret
mov
popa
out
push
xchg
adc
add
je
sub
stos
dec
pop
movsb
sub
push
mov
sbb
mov
and
ret
fildll
pusha
pop
mov
fists
pop
push
arpl
mov
ja
xor
sbb
scas
das
pop
pop
jmp
add
mov
insb
das
push
bound
in
pop
or
pop
add
cli
sbb
mov
pop
xchg
sbb
mov
adc
inc
fwait
cld
cmpsl
or
lret
scas
scas
xor
pop
xor
pop
sbb
test
movsl
push
mov
lret
call
test
xchg
inc
cmp
push
mov
insl
dec
lock
xchg
ret
or
sub
aam
jae
movsl
mov
and
add
cmp
jbe
cmp
push
or
add
push
test
repz
jle
or
sub
mov
adc
scas
daa
push
push
fwait
call
inc
jnp
imul
sbb
jae
add
mov
and
jbe
loopnew
sub
cmpsb
mov
jns
adc
loope
das
fisubrl
test
lret
xchg
sbb
aam
sub
jno
dec
leave
push
jae
xor
cmp
neg
adc
loope
loope
add
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
repz
pinsrw
cmovg
aas
and
mov
jb
imul
mov
and
pop
add
mov
mov
cmpsb
fmul
xor
xchg
adc
sbb
lcall
xchg
mov
dec
lret
cmpsl
xor
xor
mov
movsb
add
aas
arpl
in
call
xor
jae
cmp
lds
sub
pop
or
cmp
mov
cmpsl
rorb
pop
mov
cld
popf
lcall
aad
sar
jo
mov
cli
xlat
fcoms
sbb
test
push
cli
push
popf
repz
idiv
adcb
xchg
or
push
dec
jp
in
not
popa
sbb
cld
in
nop
stos
cs
outsl
fdiv
xchg
inc
ret
cmpl
jg
sbb
aas
loopne
loope
data16
mov
sub
mov
sbb
cmp
loop
popf
ds
movsl
cmpsl
gs
aaa
orl
insb
mov
sahf
or
mov
jo
dec
mov
frstor
dec
cmpsl
dec
into
and
loope
outsl
mov
js
xor
test
rcl
mov
idivb
push
push
mov
cmp
sbb
inc
popf
cwtl
aas
jo
xchg
push
xchg
out
loope
push
xor
imulb
pop
push
lret
rcrb
arpl
mov
xchg
sarb
sti
shr
mov
daa
mov
insb
mov
sti
movsl
movsb
pop
shl
les
cmp
push
ret
and
in
nop
inc
cmp
int3
jno
shrl
and
push
pop
push
jmp
cltd
and
cmp
hlt
inc
dec
mov
add
je
xchg
mov
inc
testl
aam
mov
adc
sbbl
imul
les
loop
mov
or
cmpsl
fdivrs
lcall
xchg
dec
or
cmp
push
or
test
pop
stc
lea
adc
dec
mov
sub
cmp
jae
adc
or
dec
mov
popf
mov
push
mul
push
arpl
jo
stc
mov
aam
adc
xor
inc
popf
sti
xor
std
stos
fdiv
inc
stos
jp
addr16
nop
xor
and
pop
and
shl
into
lahf
mov
sub
mov
cmp
dec
bound
mov
lret
rcrb
bound
pop
sub
fs
adc
scas
sti
leave
iret
cmc
mov
xchg
testb
sti
insl
icebp
dec
addb
pop
pop
stc
pop
cs
inc
mov
pop
mov
jb
xchg
scas
outsb
aad
sbb
insl
mov
into
pop
pop
ds
sti
jmp
cmpsb
dec
inc
shll
hlt
das
xchg
cli
pop
cmp
sbb
cld
push
adc
fs
cmp
adc
filds
test
fdivrs
imul
call
sub
cli
into
push
int3
rcl
push
rorl
or
inc
lea
sarl
loopne
pop
lds
mov
sub
inc
dec
xor
flds
enter
sub
jmp
add
or
pushf
mov
push
push
push
pop
xlat
call
sti
out
or
sub
popa
xor
add
bound
jecxz
popf
aam
in
cmp
mov
cmpsb
fmulp
je
xor
xchg
cmc
xor
test
pop
es
and
insb
outsb
iret
add
dec
imul
inc
aas
push
mov
shlb
jg
loop
ret
inc
and
js
cld
int
dec
and
out
idiv
sbb
mov
aas
pop
dec
mov
movsl
jne
jp
stos
mov
xlat
test
loopne
mov
jbe
mov
lods
jae
and
cli
sub
pop
mov
pop
adc
in
mov
loop
inc
ss
push
fimull
jmp
lock
les
jnp
insl
imul
jg
mov
add
inc
cmpsb
add
cmpsb
bound
mov
bound
dec
lds
test
gs
mov
jge
mov
mov
in
sub
mov
imul
inc
push
leave
jl
shrl
cmp
xor
jns
iret
add
sbb
push
out
stos
inc
pusha
pop
mov
cli
and
ss
sub
dec
mov
cld
loopne
dec
insl
mov
mov
clc
pop
stc
pop
call
fsubrs
ja
popf
daa
scas
adc
lahf
sub
push
es
mov
loopne
rclb
imul
push
cld
dec
scas
mov
pop
mov
mov
push
push
add
dec
inc
xchg
or
fs
shll
sub
lahf
call
aaa
es
ret
jmp
sahf
mov
pop
mov
push
fcmove
mov
or
aas
data16
ss
in
roll
xchg
fmuls
sbb
pop
repnz
or
add
gs
jle
lock
test
leave
fisubl
dec
mov
notl
mov
push
inc
lods
push
mov
xor
lods
daa
jl
jo
ljmp
call
adc
fistl
add
mov
add
and
addb
xor
xor
fistpl
pushl
sbb
xchg
rcr
lock
mov
sbb
or
fs
mov
mov
out
xor
clc
jo
xlat
mov
mov
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
popa
mov
dec
data16
pinsrw
psubd
push
mov
cmp
test
jbe
fwait
loop
mov
shll
mov
hlt
push
cmp
xchg
sbb
or
sbb
fiadds
mov
ret
shll
hlt
hlt
lcall
mov
je
pop
arpl
gs
inc
pop
mov
outsb
loope
mov
repnz
or
imul
into
lret
cli
mov
pop
pop
stos
outsl
jae
out
pop
daa
loop
mov
stc
movsb
cs
and
insl
mov
aaa
cmp
jp
or
fdivs
jne
mov
xchg
mov
hlt
insb
jmp
sub
mov
pop
jg
inc
stos
or
push
sbb
mov
lcall
sbb
jns
in
sbb
repnz
push
inc
pop
stc
sub
test
sub
or
imul
inc
jle
rorl
pop
in
mulb
test
int
pusha
mov
insl
jp
mov
inc
pop
cs
rcrl
movl
adc
or
add
cmp
int3
jns
and
mov
scas
adc
xchg
push
aad
scas
xchg
outsl
andb
mov
inc
rcr
cli
stos
push
aas
push
popf
push
jl
sbb
adc
add
xor
sub
or
pop
push
fstpl
sbb
test
sbb
data16
test
inc
push
divb
es
daa
out
fsubr
pop
push
or
rcrl
mov
mov
inc
call
int
mov
jmp
in
dec
sub
cmp
lret
inc
inc
pop
or
enter
cmp
adc
bound
lahf
and
andb
in
movsl
pop
mov
mov
dec
add
pop
mov
adc
push
ficoms
dec
inc
jle
push
mov
scas
lods
sarl
fs
add
inc
cld
pushf
jmp
add
lret
movl
flds
ffree
insb
iret
mov
ss
andb
add
nop
pop
or
dec
and
inc
orl
sbb
aam
sub
mov
xlat
inc
jns
inc
cltd
mov
nop
out
or
mov
xchg
mov
sar
mov
ljmp
and
leave
gs
inc
lret
pusha
test
jmp
pminub
adc
cmp
out
imul
mov
cmovs
imul
dec
jbe
jb
ljmp
sti
mov
sbb
ficomps
xor
jbe
je
and
jmp
call
sbb
sahf
shll
xchg
in
pop
lahf
mov
or
fwait
and
pop
fistps
cmp
xchg
jbe
mov
xorl
fnstsw
pop
pop
jnp
sub
jp
aad
repz
mov
popf
or
pop
aaa
jmp
std
xchg
shlb
cld
fnsave
jge
inc
add
loopne
fsubs
inc
enter
push
pop
mov
jg
push
mov
lea
enter
push
jno
jno
xor
inc
ret
push
jo
neg
test
movsl
ljmp
lock
and
mov
enter
and
adc
jle
xchg
pop
mov
add
sbb
mov
push
mov
push
pop
jmp
cli
pop
pop
pop
fidivrl
in
cmp
aas
jge
push
sbb
cmp
les
pusha
daa
xorl
xor
in
sbb
mov
mov
sbb
out
sub
and
cmp
sub
test
xor
sbb
dec
xchg
das
push
pop
cs
mov
cltd
pop
pop
daa
gs
xchg
xchg
sub
aas
push
adc
faddl
lret
push
daa
mov
xchg
pop
shr
cmpsl
scas
scas
adc
pop
aaa
in
mov
add
adc
lods
ret
js
out
loope
stos
xchg
cmp
inc
mov
mov
loope
inc
fwait
ret
sub
cmc
adc
mov
inc
or
jle
outsb
ret
jne
dec
sbb
mov
jno
adc
mov
loopne
fiadds
mov
add
and
jle
push
xchg
pop
mov
add
mov
and
jb
xor
loop
xchg
push
mov
sbb
fsubrs
pop
cli
mov
cmpl
popa
lock
add
or
xchg
xor
mov
test
out
call
dec
mov
push
out
movsl
push
or
jo
lcall
xchg
movsl
adc
jne
mov
lcall
iret
dec
incl
ds
fstpl
lcall
je
add
jno
es
lock
movsb
pop
and
cmp
mov
mov
mov
sub
and
rol
mov
and
and
adc
and
lds
xchg
xor
sbb
inc
subb
push
test
push
mov
daa
pop
inc
enter
xchg
mov
pop
inc
fisttpl
mov
into
xchg
stc
pusha
or
cmp
mov
xchg
mov
jbe
mov
arpl
jb
pushf
mov
stc
mov
idivl
mov
adc
add
inc
lock
inc
in
sbb
add
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
xor
outsb
xchg
or
setp
cld
cmp
mov
push
cli
loopne
dec
inc
xchg
jnp
fisttpl
add
or
jg
mov
jns
shl
ret
xor
mov
aas
aam
xchg
fs
or
inc
out
jns
mov
adc
pop
pop
dec
fcmovnb
inc
pop
mov
jmp
sbb
aas
negb
btr
dec
add
cli
stc
mov
cmc
leave
jae
xor
xor
lahf
xchg
in
in
ds
xor
xchg
in
add
mov
clc
mov
sbb
xchg
adc
fwait
dec
ljmp
cs
lock
xor
inc
in
cmp
push
jo
sbb
xorb
pop
mov
int
cmp
jne
dec
inc
data16
test
mov
pop
xor
cmp
stos
sarb
cwtl
dec
and
je
lret
sub
or
pop
lea
sti
enter
in
and
mov
inc
int
fdivrs
pushf
push
fwait
adc
outsb
cmp
sti
jbe
hlt
mov
in
mov
cmp
cwtl
add
push
xchg
out
outsb
inc
imul
pop
pop
icebp
cmp
test
test
mov
inc
fstpt
jecxz
pop
add
jmp
loope
int
ja
out
xchg
mov
dec
mov
jmp
in
adc
adc
xchg
into
jp
sbb
mov
jno
std
mov
mov
mov
cmc
shll
hlt
addr16
into
xor
xchg
mov
cmpsb
mov
cmp
jbe
fstpt
sbbb
xchg
sti
push
jg
push
repz
sbb
mov
push
add
push
movsb
add
jae
xor
insl
jne
mov
jo
add
neg
cmp
push
and
roll
ret
mov
jb
mov
push
stc
sti
dec
rolb
addr16
scas
jae
dec
sbb
pop
add
or
mov
enter
ds
adc
movsb
test
cmc
scas
and
or
lahf
insb
cltd
out
jno
mov
mov
fcoml
xchg
pop
cltd
cmp
inc
inc
dec
int
mov
shrl
inc
or
xor
pop
daa
fstpl
movsb
ds
imul
int
xchg
clc
dec
mov
jmp
pop
test
jmp
cmp
xchg
test
jmp
aad
sahf
cmpsb
addb
aam
enter
aaa
push
and
xorb
push
ja
lods
sbb
dec
pop
push
mov
cwtl
fnstcw
es
testb
mov
mov
popf
imul
mov
lea
aas
jecxz
or
andl
mov
not
push
or
and
lret
ret
xchg
xor
mov
mov
call
add
leave
insb
mov
repnz
pop
pushf
in
insb
push
pop
mov
cltd
shll
dec
out
fistpll
fstpl
mov
and
in
testb
sar
add
cli
jmp
lea
lcall
mov
jbe
pop
in
lea
push
or
jmp
clc
jb
sbb
and
jge
cs
cld
pushf
xorb
and
mov
push
add
mov
or
mov
jle
push
and
pop
xchg
imul
xchg
fsub
cs
repnz
scas
cmpsl
int
sub
pusha
pop
rorl
jg
sbb
lahf
out
imul
adcl
arpl
push
adc
or
in
iret
add
jg
clc
mov
mov
in
movsl
fwait
inc
ja
xor
dec
jmp
daa
leave
fbstp
cmp
cli
push
inc
mov
mov
and
cmc
push
fucomip
mov
repz
mov
ss
mov
negl
sbb
jno
fidivrl
int3
sbb
mov
sub
and
sub
add
jle
mov
and
out
xor
sub
pop
mov
gs
pop
mov
fidivs
in
loopne
scas
push
jns
popf
dec
mov
cmp
and
jnp
cld
lret
movsb
jae
enter
and
lret
clc
pop
or
xor
sbb
cmp
xchg
push
xor
mov
insb
cld
lea
push
jg
iret
pop
mov
mov
and
xor
xor
mov
aas
xor
mov
inc
adc
jb
out
mov
xchg
mov
in
xor
adc
js
xchg
repz
add
adc
ret
in
int3
notl
push
lret
dec
ljmp
mov
movsb
or
call
loopne
loopne
test
fs
mov
ss
mov
jb
pop
lret
push
cmpsb
dec
adc
jmp
push
out
out
lods
xchg
decb
jmp
cmp
pop
push
sub
loope
cld
call
mov
xchg
call
test
jp
in
mov
call
lahf
sarl
and
sbb
insl
mov
dec
cs
out
add
xchg
mul
push
push
daa
push
pop
dec
icebp
inc
mov
lret
adc
jne
daa
adc
jge
xchg
ja
cmp
cmp
pop
pop
in
subb
mov
repnz
ficoms
and
mov
mov
stos
jb
push
pop
subl
adc
add
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
add
pinsrw
cmovp
jle
scas
subl
ja
or
shlb
cs
imul
push
popf
jnp
mov
cltd
pop
in
mov
jno
mov
mov
lret
xlat
jg
arpl
fucom
inc
dec
cmpsl
out
pop
nop
mov
pop
out
test
addr16
add
je
adc
inc
mov
cld
mov
adc
mov
mov
mov
fwait
jecxz
sbb
adc
pop
pop
sti
mov
cmp
add
add
cli
push
pop
in
inc
stc
loopne
out
ror
fnstenv
push
adcl
xor
imul
test
push
xorl
out
push
pop
ljmp
pcmpgtw
cwtl
xchg
add
sbb
jmp
push
repz
jl
arpl
loope
jae
stos
cmp
into
fidivrs
into
jecxz
push
xchg
dec
xchg
xor
arpl
ss
pop
inc
mov
filds
popl
test
filds
push
mov
adc
cmp
out
mov
xor
je
jb
dec
stc
cbtw
sbb
fdivl
loopne
ss
sub
pop
fwait
loop
mov
jp
xor
and
loop
xor
mov
fs
mov
jmp
repnz
and
setg
sub
cmp
dec
cmp
mov
lcall
lcall
cs
and
psubb
push
mov
test
cmp
or
dec
hlt
mov
insl
push
push
pusha
sub
xchg
push
xchg
mov
mov
push
pop
adc
xor
xor
lcall
cmp
repnz
mov
inc
clc
lods
mov
imul
jbe
cs
jo
aaa
rorl
testb
inc
pop
sbb
fwait
mov
jbe
mov
dec
lock
mov
cltd
pop
out
pop
jb
loope
xchg
leave
jne
sbb
jl
push
and
stos
fwait
inc
jae
dec
cld
les
mov
push
jge
pop
xor
cs
shrl
arpl
adc
out
addb
xor
or
es
or
inc
pop
ss
push
jne
call
dec
xchg
cli
jo
insl
push
adc
movlps
inc
sbb
mov
js
sbb
xor
ret
das
fwait
loope
js
lock
cmp
add
mov
xchg
adc
lea
dec
scas
outsb
mov
mov
and
xchg
mov
add
push
sub
sub
mov
mov
mov
xlat
add
pop
stc
push
xchg
cmpsl
jge
add
movsb
dec
daa
cld
push
lcall
inc
out
cmp
dec
jbe
sub
cmpsl
test
mov
dec
daa
mov
sub
pop
jl
shll
push
add
or
adc
xor
sti
or
xchg
adc
mov
lahf
mov
and
ja
fucomp
jmp
lret
sbb
inc
dec
es
arpl
fwait
in
mov
and
fisubs
xor
aam
sbb
sbb
mov
xchg
ds
scas
das
dec
sub
out
pusha
ljmp
out
xor
stos
adc
bound
inc
xchg
pop
scas
in
dec
gs
pop
loop
loope
cmp
cmp
or
pop
push
xor
jb
push
or
ret
pop
add
push
jl
push
iret
imul
push
das
fcoms
gs
jo
dec
out
add
int3
mov
iret
pushf
es
mov
sbb
into
popa
adc
sub
stos
or
add
in
mov
test
nop
es
aam
fwait
push
pop
mov
cmpsb
fnstcw
push
mov
push
add
dec
jp
jmp
mov
jle
push
repnz
lcall
scas
pushf
ficompl
mov
inc
jnp
or
int3
add
cmp
inc
rcr
and
mov
pop
inc
lea
sbb
movsb
std
cld
lret
add
mov
mov
jg
inc
test
test
cmc
mov
inc
inc
stc
incb
dec
jno
dec
lcall
lret
test
cld
jg
fld
mov
iret
hlt
movsb
push
dec
out
hlt
ds
or
jecxz
pop
shl
or
dec
cmp
call
pop
or
daa
xor
mov
lret
mov
test
adc
insb
xchg
jb
imull
jp
pop
push
adc
pop
fdivrs
outsb
rolb
movsb
cmpsb
mov
movsl
leave
dec
mov
jbe
cltd
cwtl
xchg
inc
jb
pop
xchg
mov
aad
or
cs
or
outsl
fld
lahf
pushf
push
jno
enter
adcb
rcr
adcb
mov
in
mov
sarl
inc
in
mov
cmp
pop
in
sub
notb
mov
out
scas
push
ljmp
jg
cmp
test
and
out
sbb
loop
adc
cmp
movsb
test
movsb
pusha
in
push
mov
ljmp
jne
cmp
or
inc
mov
std
mov
xchg
dec
jecxz
cmp
pop
jns
jno
xchg
imull
les
mov
jo
movsb
in
dec
bnd
pop
mov
jne
dec
jg
das
lock
xchg
cld
jmp
pop
dec
xor
lea
pop
ret
dec
lret
fwait
ror
es
out
ljmp
pop
or
add
rcrb
cld
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
dec
data16
xchg
pinsrw
xchg
mulb
neg
fs
cwtl
mov
test
lcall
test
stc
imul
xor
call
jcxz
mov
popf
rcl
nop
xor
fmuls
mov
mov
outsl
jae
nop
and
sub
fs
movhps
pop
enter
inc
ror
add
mov
outsb
add
pop
rclb
xor
push
negl
mov
imul
je
adc
movsb
inc
and
mov
mov
rorl
mov
adc
loope
mov
daa
mov
test
int3
stos
jle
or
push
int
fisubrl
outsl
inc
popl
or
shll
sub
jl
testb
int
nop
jle
push
adc
push
movsl
mov
popa
aam
cmp
dec
jnp
push
mov
pop
fs
in
xor
xchg
pop
cmp
les
sub
outsb
cmp
jnp
inc
fwait
in
jne
add
dec
scas
pop
loope
loope
pop
es
and
adc
mov
loope
stc
dec
jmp
mov
cmp
pop
inc
dec
mov
cltd
in
inc
repz
mov
cmp
in
xor
flds
xor
push
mov
adc
hlt
lock
fdiv
inc
bound
xor
adc
ss
dec
push
clc
add
cs
test
mov
inc
pusha
idiv
jae
ljmp
jle
sub
and
movsl
or
js
push
adc
call
iret
inc
mov
sbb
push
push
inc
ja
mov
pop
mov
sbb
adcb
mov
pop
mov
dec
aad
mov
pop
addr16
inc
jg
std
cmp
stos
fldenv
push
sbb
fildl
mov
clc
cmpsb
push
pusha
jno
inc
jmp
andb
xor
mov
ja
shr
and
lahf
fcoms
gs
jo
mov
out
mov
out
sub
sub
xlat
cmp
push
xor
in
or
xchg
inc
popa
mov
push
adc
imul
ss
jae
fwait
inc
mov
fdiv
jns
repnz
lods
add
jo,pt
mov
mov
std
xchg
loopne
push
negl
out
ljmp
jmp
mov
pushf
xlat
je
dec
cwtl
inc
jmp
sarl
inc
add
inc
and
imul
mov
jmp
jno
pushf
in
jnp
decl
fs
sbb
test
rclb
in
fistpll
arpl
out
pop
mov
sbb
and
pop
add
mov
and
mov
mov
jmp
add
push
add
imul
sbbl
mov
mov
jo
clc
cmp
clc
mov
jl
pop
loopne
lahf
or
add
lock
pop
int3
in
ja
add
fisttpll
inc
push
and
out
orl
sub
gs
push
sub
fsubr
jo
push
pop
shrd
fs
sub
inc
pusha
negb
mov
mov
mov
and
movsl
in
mov
add
xchg
jns
loop
mov
popw
mov
push
test
popa
sahf
cmp
adc
adc
loope
jl
rcrb
fnsave
xlat
push
sub
std
stos
push
mov
sbb
dec
cmc
sbb
add
jmp
inc
popl
mov
mov
mov
clc
test
mov
or
leave
jle
fs
rorb
mov
pop
icebp
mov
jns
push
pop
jno
jle
insl
jg
xchg
adc
in
and
xchg
push
and
jo
sbb
cmc
pushf
sarb
push
lock
mov
lcall
xchg
lret
mov
pop
push
js
inc
test
jae
dec
mov
mov
insb
mov
jns
dec
push
mov
inc
aam
xor
or
nop
mov
dec
fisubrl
sub
lahf
sub
jecxz
fimuls
mov
imul
jge
fwait
xor
pusha
xlat
dec
mov
sti
nop
xor
fwait
movsb
cwtl
inc
lret
test
and
xor
std
lds
stos
in
sub
jecxz
mov
fdivp
dec
sbb
cmp
push
andl
sahf
sub
mov
mov
xor
lcall
pop
fwait
cmp
jno
or
jns
sub
adc
ljmp
cmp
movsb
aas
adc
lcall
mov
enter
push
or
bswap
mov
call
lret
push
push
or
out
jno
mov
or
or
outsb
pop
aas
scas
adc
xor
neg
les
jb
cmp
mov
pop
dec
je
lock
adc
cmp
xor
mov
bound
adc
rcrl
dec
adc
add
scas
nop
jmp
sbb
pusha
lea
pop
pop
rcl
pop
jnp
or
push
jg
shll
inc
mov
cmp
iret
mov
aad
push
push
lret
nop
adc
xchg
add
sub
adc
sbb
adc
gs
andb
mov
lea
fwait
test
fstps
insl
ret
push
enter
add
aam
loopne
adc
xor
sti
in
sbb
mov
push
add
sahf
push
incb
ret
hlt
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
cwtl
mov
xor
add
aad
cmp
and
sub
jo
adcl
in
mov
jmp
pop
inc
mov
shrl
rorl
jge
pop
cmp
mov
or
mov
lret
js
repnz
dec
movsb
daa
xchg
dec
clc
prefetch
cmovge
sub
and
or
xor
push
jg
aam
xor
sarl
test
clc
sbb
sti
loop
push
jbe
stc
out
dec
lret
inc
pop
shlb
mov
xchg
inc
xlat
fidivl
pop
lds
fcomip
shrb
je
cmpsl
jbe
lock
mov
rol
lret
test
add
sbbl
jns
aaa
push
xor
ret
js
jmp
movsl
cwtl
push
aam
jmp
sbb
in
fidivrs
add
dec
daa
cli
dec
scas
int
push
test
mov
std
cwtl
clc
or
out
push
dec
adc
sbb
data16
dec
cwtl
stos
icebp
jo
jg
adc
insl
jg
aaa
and
and
push
ret
add
and
stc
shll
mov
jp
push
jmp
and
call
jne
sub
sub
adc
cmp
cs
aam
dec
xchg
sub
stc
rclb
popa
dec
jno
js
cli
inc
mov
xchg
mov
jns
mov
cmc
push
sbb
or
call
stc
out
add
shll
in
aas
pop
jmp
fdiv
fsubl
movsl
and
gs
push
sub
dec
push
adc
movsl
mov
mov
dec
aam
pop
fldt
xchg
mov
or
push
sub
push
es
jecxz
dec
test
int3
notl
dec
pop
lods
pop
repz
scas
and
mov
rep
adc
dec
pop
fnsave
data16
push
dec
or
cmp
sti
popf
sbb
jo
scas
adc
jecxz
int3
arpl
popa
bswap
jbe
aam
mov
pop
push
xchg
cmp
or
push
rcll
jg
adc
jl
mov
add
movsb
mov
add
xchg
addb
lods
out
and
bound
inc
dec
testl
mov
mov
decb
imul
ss
xchg
xor
out
fwait
rclw
cmp
shll
cltd
mov
fldcw
adc
jl
xchg
imul
xorb
mov
xor
jo
sub
stos
xchg
cs
shl
xor
jo
pop
xor
or
hlt
and
pop
sub
jno
jl
mov
add
in
inc
pop
orb
mov
std
loopne
shlb
enter
jnp
dec
inc
ficoml
sbb
jp
loope
je
lcall
pusha
data16
shrb
frstor
cmp
mov
sti
cwtl
cmpb
mov
jns
pop
inc
psrld
mov
jg
sbb
loope
push
movsl
shld
and
push
lods
mov
pop
or
push
fs
out
stos
stos
xor
sbb
ret
jnp
scas
dec
add
inc
xor
push
rorb
mov
arpl
call
dec
push
and
mov
jae
cmp
mov
repz
popa
cld
xchg
add
xorl
pop
dec
dec
push
test
pop
push
int3
test
inc
leave
dec
mov
mov
cmp
inc
inc
jmp
xor
and
int
nop
dec
add
fmull
or
mov
pop
dec
int3
addb
aaa
fidivs
sbb
in
popf
xor
xor
js
sbb
sarl
mov
pop
adc
push
jecxz
repnz
mov
mov
cmp
outsb
mov
stos
jae
pop
pop
insl
insb
xor
icebp
insb
fildl
ss
and
and
jle
mov
push
js
jo
inc
sub
scas
imul
dec
scas
incb
lret
movsl
or
sbb
jle
xchg
rolb
jmp
pop
xchg
roll
mov
mov
cmp
ljmp
lds
fcoml
sub
mov
call
dec
mov
fsubs
scas
inc
out
push
inc
mov
repnz
cmp
nop
xchg
or
ret
repz
ret
iret
jo
cmp
in
inc
xor
mov
insb
push
inc
and
ret
bound
push
icebp
xchg
fnsave
pusha
push
mov
jecxz
mov
inc
les
or
leave
push
and
imul
cwtl
jno
mov
xor
aam
pushf
xchg
fiaddl
pop
add
and
mov
sub
mov
movsl
lret
dec
out
adc
pop
push
mov
xchg
sbb
sub
dec
je
and
inc
leave
movsb
pop
fs
comiss
call
bound
jo
int3
repz
add
pop
mov
xor
shrl
and
into
xor
loop
aas
mov
fsubl
add
enter
lds
pushf
test
pop
dec
sub
popf
sub
ja
xor
leave
jne
std
dec
out
lea
xorl
dec
add
jg
addr16
stc
jge
lret
in
mov
ss
rclb
mov
adc
out
repnz
lahf
fsts
lret
in
fidivrs
xchg
into
sub
pop
adc
pop
xchg
xchg
xor
sbb
sbb
pop
cmpl
adc
and
ljmp
sbb
sub
dec
pusha
mov
or
push
insl
sbb
xchg
rcll
xor
mov
rclb
xor
xor
cmp
insl
cltd
xchg
xchg
into
xor
or
xchg
insl
ficomps
je
cmp
lods
lcall
mov
and
fcmovb
push
mov
lret
movsb
dec
and
out
scas
mov
mov
pop
mov
cmp
sbb
xor
std
inc
adc
mov
iret
sbb
inc
je
cs
xor
ss
mov
dec
int
jecxz
or
bound
add
sub
and
lods
fcomps
push
pop
movsb
es
mov
in
repnz
lods
jb
mov
in
outsb
jae
ret
jge
pop
push
addr16
sbb
dec
inc
dec
pop
or
push
xor
fbld
sbb
nop
inc
mov
mov
sbb
mov
inc
xor
inc
mov
pusha
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
inc
rclb
add
xchg
pop
sbb
push
cmpsl
mov
cmp
imul
mov
jne
mov
add
test
cltd
inc
mov
and
imul
fildll
nop
aaa
fldl
add
das
jecxz
push
or
and
outsb
xlat
mov
stos
mov
addb
ja
aam
rorb
jne
lret
mov
aas
pop
jae
mov
and
push
imulb
xchg
lods
push
into
je
mov
inc
out
testl
filds
mov
jp
mov
pop
sub
push
gs
arpl
jo
mov
mov
ret
pop
cmp
orb
arpl
in
faddl
loopne
lea
cmp
jnp
stc
mov
jnp
pop
shrl
test
loop
cmpsb
lcall
and
sbb
cmp
sub
pop
mov
sbb
xchg
jl
cmc
ret
push
les
mov
xor
adcb
aas
testl
test
push
cmp
ljmp
pop
loope
sbb
mov
sub
movsb
push
shll
add
hlt
sbbl
mov
mulb
mov
int
ss
mov
pop
mov
out
push
inc
repz
mov
jne
inc
leave
loopne
mov
mov
cli
xchg
cltd
clc
add
cmp
cmp
scas
aas
fidivl
lcall
arpl
dec
cs
pop
cmp
in
test
fdiv
mov
shl
gs
ret
je
in
and
pop
repz
nop
dec
mov
ret
xchg
pop
xor
repz
hlt
std
or
inc
and
fmuls
or
mov
cwtl
jmp
lds
pop
inc
out
mov
jge
mov
in
add
push
or
dec
fmuls
pop
popf
push
loopne
dec
dec
or
pusha
sub
inc
sbb
lods
ds
fstpt
aaa
lds
jae
es
stos
sarb
popf
push
call
hlt
mov
sarb
or
cmp
cmp
push
les
shrl
shr
inc
and
cs
xlat
das
mov
ljmp
test
push
and
test
lods
xor
push
sbb
jb
pop
push
mov
pop
jno
test
je
inc
mov
mov
inc
repnz
rorl
cmp
sbb
jo
aam
adcb
xchg
adc
push
daa
xchg
jl
scas
jmp
or
cld
cli
cmp
js
stos
sbb
cs
dec
shrb
mov
and
fldl
jl
mov
pop
pop
add
daa
jno
sar
mov
or
dec
shr
in
sub
shrb
jns
push
sahf
adc
std
cltd
add
sub
addl
mov
push
dec
sub
addl
jne
nop
mov
out
xor
mov
aad
neg
pop
mov
push
jne
imul
inc
out
push
add
fxch
sub
aaa
rcrb
je
xchg
cmpsb
push
leave
divl
sti
dec
inc
mov
inc
lods
outsl
or
fiadds
pop
jae
sub
movsl
dec
loopne
rcr
lods
jle
out
push
imul
cmc
outsl
inc
and
jb
sbb
mov
outsb
lret
adc
jae
inc
and
push
and
cs
lock
or
pop
das
aas
sbb
or
dec
and
aas
sub
gs
inc
or
or
inc
rolb
cs
mov
cmpsb
mov
testl
sbb
mov
adc
push
mov
sbb
push
mov
insl
jg
mov
jb
or
push
inc
xor
sarl
ret
or
ds
ljmp
aas
pop
add
push
sarb
imul
test
or
mov
add
imul
adc
jecxz
sbb
sub
maskmovq
negl
and
push
jns
push
and
mov
dec
outsb
in
std
xchg
in
insb
aam
or
mov
gs
adc
std
pop
inc
add
out
aaa
mov
in
push
notl
mov
pop
iret
jnp
pop
rcrb
sarb
push
add
pop
or
testb
movlps
adc
mov
roll
sub
repnz
adc
and
testb
sahf
insb
xor
mov
lock
push
jae
cmpsb
in
call
mov
mov
inc
sub
data16
das
xor
filds
inc
mov
movb
sarl
pop
xlat
imul
sub
push
cwtl
xchg
insb
loopne
mov
jb
push
push
or
data16
mov
or
icebp
mov
je
pop
mov
into
and
cmp
lods
or
gs
hlt
lahf
mov
adc
fwait
cmp
xchg
fstpl
cmp
testb
cmpsl
aam
jbe
push
mov
cwtl
pop
hlt
inc
sub
inc
xchg
mov
inc
sub
call
int3
xchg
mov
in
inc
jnp
movsl
jbe
lock
xchg
mov
adc
sub
ret
rcll
repz
xorb
inc
filds
cmp
vmovsldup
push
push
jbe
js
call
mov
icebp
jne
sti
cwtl
cmp
test
cld
scas
aad
imul
dec
dec
adc
sbb
mov
sbb
insb
add
fucomi
sbb
xchg
sbb
stos
decb
cmp
push
int
xchg
push
mov
lods
out
and
jmp
filds
clc
xchg
or
add
movsl
mov
sbb
sbbb
mov
dec
xlat
pop
xor
push
rcll
inc
sbb
push
movsb
add
in
stos
scas
ret
pushf
out
sarl
pop
add
lret
cltd
cmp
lods
mov
jle
fwait
lret
scas
adc
pushf
rolb
pop
and
out
lods
fbld
stos
mov
push
mov
add
test
call
jecxz
jecxz
inc
xchg
xor
aaa
out
jne
sub
inc
cld
addb
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
in
ret
stos
pop
add
leave
push
mov
out
inc
rolb
mov
test
loopne
push
pop
mov
int3
leave
mov
fiaddl
scas
std
pop
in
pop
daa
adc
cmc
enter
jl
addr16
ret
cmpsl
push
ss
lods
adcb
popf
outsl
mov
sahf
fcomp
lea
into
jae
and
rcll
inc
mov
add
mov
sub
in
fwait
repnz
mov
push
decl
sbb
aas
xor
dec
out
xchg
icebp
arpl
push
in
xor
push
push
pushf
mov
jae
mov
and
lock
fsubs
pop
pop
sub
add
lcall
inc
cmp
lods
enter
xor
push
mov
ret
push
add
jmp
mov
cmp
cmp
in
fdivr
xchg
fstpl
mov
roll
cmpsl
add
std
jg
add
sbb
jmp
adc
mov
jns
stos
mov
xchg
pop
test
test
in
iret
cmp
lea
in
xlat
inc
and
aas
mov
je
add
jns
ja
jge
inc
mov
mov
std
mov
je
inc
xor
mov
sub
lods
test
movsl
popf
jo
sub
push
in
jno
lock
xchg
ror
dec
jl
lea
mov
aad
cmp
out
jl
sbb
mov
mov
loopne
mov
stc
stos
fisttps
in
mov
pop
in
testl
xor
adc
jno
cmp
sti
sahf
addr16
adc
jns
cmp
gs
pop
out
cmpsb
fucompp
int
mov
pop
in
sarl
dec
xchg
pushl
push
push
push
sbb
sarl
cmpb
je
cli
sub
mov
cmp
clc
jmp
inc
out
lcall
fwait
add
mov
je,pt
sub
cmp
in
loop
sub
push
sub
push
jnp
jp
stos
les
aaa
jle
xor
adc
movsl
cmp
aad
mov
negl
lods
jg
inc
into
in
lock
mov
imul
xchg
push
mov
pop
loopne
jmp
xor
loop
jg
negl
and
stos
daa
jno
mov
lock
loope
sbb
cmp
aam
pop
hlt
std
test
scas
sub
shrl
jge
xor
sbb
mov
jns
mov
dec
lahf
jb
adc
add
int
pop
lahf
inc
fwait
in
bound
jne
insl
cltd
mov
jp
pop
fdivrs
or
stos
sbbb
out
push
or
hlt
clc
aaa
and
push
int
dec
bound
lcall
jb
mov
inc
xchg
loope
mov
inc
shl
jns
ficoms
out
push
int
inc
xor
lds
ljmp
inc
xchg
and
cmp
jns
xchg
xchg
stc
add
xlat
pop
out
pop
js
mov
repnz
aas
lret
or
js
cwtl
sub
sub
jp
mov
in
pop
jmp
pushf
push
ljmp
push
repnz
xor
add
adc
iret
adc
mov
inc
sub
jge
inc
lods
je
xchg
loopne
ds
icebp
outsl
inc
push
fs
pop
cmpsb
shlb
xor
mov
pop
inc
in
inc
rclb
adc
mov
or
ja
inc
nop
rcrl
out
repz
ret
xchg
adcl
sahf
daa
sub
or
mov
sbb
icebp
sbb
xchg
mov
cwtl
lcall
js
aaa
rcl
cmpsl
in
fdivs
pop
loopne
roll
xchg
mov
xchg
orl
or
clc
and
push
cmp
mov
and
adc
je
mov
sub
movsl
lret
jo
xor
ja,pt
jp
inc
mov
insl
adc
mov
loop
sarl
xchg
ss
lahf
add
cwtl
insl
add
int3
pop
mov
xor
push
and
loope
push
and
xorl
es
mov
data16
leave
push
arpl
xor
nop
xchg
ss
mov
jne
jb
add
jmp
push
jmp
and
fcomps
daa
add
rcrl
push
dec
shrb
push
mov
nop
bound
and
mov
inc
sub
xchg
push
movsl
cmp
cmp
popl
loopne
in
dec
xchg
lret
jne
jg
xor
and
std
decl
subl
fldcw
jbe
iret
mov
inc
cmp
iret
ss
and
mov
scas
icebp
orb
pop
and
cmc
shl
xchg
lret
popf
cmp
inc
xchg
dec
cmp
cmovle
orl
enter
inc
jmp
xchg
lds
pop
ja
imulb
loop
adc
lods
mov
jmp
adc
pop
add
bound
push
mov
or
cmpsb
or
add
xchg
lahf
adc
cwtl
mov
cltd
add
add
dec
mov
cmp
and
sbb
pop
sub
inc
add
and
push
addr16
hlt
pop
in
jno
jecxz
fiaddl
xchg
lea
inc
nop
shr
in
repnz
inc
fildl
inc
popa
ss
mov
aas
js
dec
jecxz
roll
adc
mov
add
xor
mov
cld
lahf
aaa
and
fmull
jae
dec
rol
outsl
and
rcr
aas
lret
sbb
mov
jne
adc
push
xor
imul
cmp
repnz
mov
mov
ljmp
and
insb
mov
int
push
mov
jb
xorb
add
stc
push
es
pop
nop
dec
mov
lahf
in
or
je
lcall
jecxz
xchg
aaa
mov
stc
int3
mov
inc
or
call
inc
adcb
jns
pop
sbb
and
stos
cmp
mov
scas
or
das
inc
dec
aaa
push
sarl
cmp
sti
cli
loope
out
add
xchg
jo
push
mov
xor
mov
fsts
call
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
movb
add
in
mov
imul
fwait
cmp
mov
pushf
add
je
push
outsb
push
ljmp
push
in
icebp
cmp
xchg
dec
sub
iret
inc
rcr
mov
mov
pop
test
inc
lods
mov
mov
test
pop
xor
rolb
ret
jb
leave
xlat
call
iret
adc
push
out
push
pop
and
pop
out
push
jo
or
dec
dec
stos
add
scas
dec
iret
jae
push
dec
lods
and
push
int
mov
clc
add
add
rcl
stc
mov
xchg
mov
or
pop
and
loopne
popf
pop
shlb
xor
dec
adc
sub
xchg
repnz
jbe
or
sbb
mov
aaa
jne
in
mulb
adc
fs
lret
jle
cmp
mov
in
popf
testb
pop
jmp
sub
mov
iret
out
sbb
sub
mov
pop
xchg
icebp
add
lods
mov
mov
out
and
hlt
xor
mov
and
setno
xchg
add
cmp
pop
push
mov
mov
nop
xor
ficompl
mov
les
repnz
inc
and
inc
xchg
daa
push
push
mov
pop
jle
push
push
test
jl
cmp
and
outsl
push
mov
sub
in
cmp
andl
cmp
push
loope
std
mov
and
or
mov
add
pushf
js
pop
pushf
lods
or
pop
push
rcl
inc
imul
out
jge
mov
divb
or
adc
add
xchg
push
push
jl
in
sub
rcrb
or
mov
enter
mov
comiss
mov
pop
mov
bound
stc
cmp
into
jns
adc
push
gs
out
mov
add
push
test
xchg
ret
roll
aam
enter
fadds
or
out
aas
mov
loopne
loopne
mov
cwtl
inc
xchg
lods
jp
xorb
int
bound
xchg
lds
mov
addb
popf
add
push
sub
or
add
repz
sub
cli
jbe
jl
sahf
dec
fmuls
in
adc
pop
aas
outsb
cltd
push
in
push
loop
add
or
dec
pop
mov
out
pop
popf
adc
rcrl
cmp
sub
fldl
mov
inc
cmc
adcl
adc
shrl
jl
or
or
andl
mov
cld
sbb
inc
mov
nop
sbb
xchg
sbb
mov
xchg
adc
dec
fldl
call
push
mov
and
movsl
mov
loope
out
lock
adc
add
mov
jne
push
repnz
add
mov
lods
filds
jbe
and
rorl
push
popa
aas
or
frstor
repz
fwait
xchg
adc
pop
cmpsl
pushf
icebp
pusha
sahf
int
jbe
jl
pop
xchg
loop
ficoml
enter
ja
adc
pop
repz
test
lcall
inc
jmp
stc
ret
mov
push
leave
rcrl
sbb
sub
or
cmc
cli
cmpsb
and
pop
mov
enter
lds
repnz
outsb
cmp
adc
sub
les
lds
xchg
jb
pop
enter
dec
sbb
xor
mov
aam
pop
push
dec
and
push
or
mov
push
cmp
push
js
imul
fs
push
push
rcl
fwait
cmp
push
imul
fbstp
hlt
lret
xchg
dec
insb
fsubp
mov
xchg
pop
sbb
ffreep
fwait
pop
jb
sub
insb
and
pop
loop
mov
repnz
ss
ret
inc
xor
scas
sub
xor
jae
fs
int3
outsb
sub
ret
pop
lahf
mov
insb
and
aaa
push
mov
xchg
nop
cli
lea
jp
ss
adc
add
and
xchg
xor
pop
xchg
int3
icebp
mov
mov
jle
inc
movsl
shll
std
adc
pop
mov
pop
and
ret
rol
add
aad
and
jns
subb
fadd
mov
sub
outsl
mov
dec
fcoml
in
lret
orb
sub
inc
addr16
cmpsl
jp
mov
dec
mov
icebp
mov
sub
push
add
adc
cmpsb
or
mov
daa
inc
lods
idivb
fldenv
lds
fnstcw
test
push
mov
ffreep
insb
movsb
ljmp
arpl
inc
mov
jmp
repnz
jmp
shr
mov
aaa
lahf
lcall
stos
mov
je
pop
cltd
into
js
subl
push
mov
stos
aaa
adc
je
push
or
cld
push
stos
mov
jns
xchg
imul
lret
lret
mov
push
pop
pop
sub
cltd
movsb
and
xor
dec
push
dec
andl
push
rcrb
les
or
outsl
or
int
jge
jne
sub
movsb
sbb
pop
mov
nop
adc
xor
sti
or
mov
jp
ror
aad
mov
mov
adc
pop
test
xchg
test
add
sub
mov
mov
iret
mov
mov
adc
cmp
mov
mov
fmuls
cwtl
pop
and
ss
mov
clc
cmp
sub
xor
stc
lcall
fwait
insb
mov
popf
push
xchg
lods
test
or
lahf
push
mov
cmpsl
xor
jle
mov
push
mov
inc
test
mov
xchg
xchg
xor
fs
push
cmpsl
cmp
arpl
or
or
jle
popw
hlt
jno
push
jp
leave
jno
push
lds
shll
mov
shlb
or
pop
add
xor
jge
mov
sbb
inc
shrl
arpl
lret
mov
popf
ret
dec
lods
sbb
or
call
sub
mov
cmpsl
pop
push
adc
pop
sbb
stos
jnp
stos
mov
mov
xor
push
mov
divl
push
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
cs
add
cmp
inc
outsb
xchg
mov
adc
lahf
out
xchg
push
mov
jle
push
sbbl
mov
leave
sub
jbe
ja
mov
std
mov
pop
aaa
mov
in
je
lahf
adcl
popa
pop
add
out
out
es
xchg
aam
inc
dec
dec
mov
sarb
stos
jle
or
inc
push
stos
cmpsb
loope,pt
add
arpl
mov
leave
or
bnd
jle
cs
lret
repz
xor
movsl
mov
jnp
inc
div
jne
inc
leave
sub
jl
inc
adc
sub
stc
sub
lods
je
xchg
stos
inc
pop
xor
and
jle
jge
adc
lock
push
cmp
jp
xchg
mov
pop
mov
cmp
test
mov
gs
les
add
aam
test
xor
push
daa
mov
sub
lock
nop
or
in
mov
push
pop
pop
cmpsb
sti
sub
and
lods
mov
adc
js
sub
jg
mov
mov
adc
mov
mov
adc
mov
add
xorb
dec
mov
and
lds
loopne
in
push
mov
int3
pusha
sub
sbb
sub
jne
mull
in
comiss
fsubr
mov
and
mov
add
pop
mov
sub
mov
popa
jb
and
sbb
pushf
inc
xor
jno
out
jbe
push
test
xchg
jnp
or
or
xchg
dec
inc
or
lahf
fldl
call
xchg
cld
jecxz
sbb
cmpsb
jl
aas
xlat
jo
cld
mov
stos
sub
and
pop
jp
jmp
push
sbb
sbb
sbb
inc
xchg
cmp
mov
test
mov
cmp
jmp
sbb
scas
sbb
push
icebp
stos
add
outsl
mov
mov
and
jge
mov
sub
aaa
fsubrs
mov
add
fistpll
push
rcll
mov
mov
dec
jae
mov
cld
iret
dec
sti
push
mov
insl
movsl
add
push
mov
mov
mov
fisttpl
nop
gs
insl
mov
hlt
mov
xchg
push
lods
ds
jle
jns
xor
lahf
outsb
std
popf
rorl
mov
mov
mov
sbb
mov
add
pop
hlt
shr
mov
add
inc
negl
incb
sbb
std
lds
inc
mov
fsubr
aam
outsb
pop
fwait
int
jns
mov
sahf
test
shlb
sub
xor
outsb
pop
push
cmp
jae
popa
enter
adc
xor
cmc
pusha
add
push
rol
fmulp
jbe
pop
fadd
jmp
cmp
inc
loop
ss
bound
icebp
ds
xlat
pop
or
jo
cmp
int3
mov
inc
cmp
jo
cli
cwtl
jno
xor
xor
adc
mov
sbb
push
sbb
scas
shlb
cmpl
arpl
lea
sub
jns
and
xrelease
fxch
pop
pop
ja
sub
and
add
leave
clc
or
and
jg
js
and
je
inc
mov
jnp
push
ret
jb
mov
mov
jae
div
jne
ja
mov
sarb
outsl
mov
movsb
ljmp
shll
scas
aam
mov
cmpsl
lock
inc
test
pop
ret
xor
pusha
xchg
sub
int
lahf
push
test
pop
imul
xchg
pop
out
push
jae
pop
out
and
mov
lret
mov
pop
test
mov
and
mov
dec
testl
jnp
mov
xor
pop
out
pop
clc
xchg
cld
adc
insl
pop
shrl
cld
jns
stos
jl
int3
inc
insl
or
and
sbb
lods
sbb
movsb
adc
sub
out
repz
push
cmp
inc
daa
mov
or
adc
ret
jmp
iret
adc
dec
out
jecxz
xchg
enter
movsl
pop
dec
test
xchg
inc
outsb
and
pop
pop
push
ss
fwait
ja
cmp
loopne
nop
sub
sbb
aam
jge
in
xcrypt-ecb
cmpsl
or
aad
les
mov
and
jne
and
jbe
arpl
pop
in
sbb
std
push
fcom
addb
add
repnz
dec
mov
fucom
add
pop
ja
test
call
pop
push
mov
jne
pop
pop
aas
xchg
push
or
sbb
jge
sub
aaa
and
push
movsb
jo
mov
into
cwtl
or
cmp
cmp
push
sub
cmp
cltd
cmp
push
mov
push
aam
ret
leave
int3
in
or
inc
andb
loope
inc
push
fnsave
dec
and
jmp
xchg
mov
add
rclb
neg
addl
adc
sbb
jns
leave
test
adc
or
adc
lret
ds
testb
inc
pop
sub
clc
push
xorl
fadds
out
cmp
cld
mov
jecxz
loopne
push
roll
sub
push
movsb
jo
mov
mov
inc
push
ja
ja,pn
fildll
data16
ror
pop
mov
aas
adc
xor
hlt
scas
dec
push
xchg
sbb
xchg
je
cs
push
xchg
movsl
xchg
addb
mov
rolb
cltd
hlt
mov
mov
lods
lcall
xchg
mov
add
dec
mov
and
or
dec
pop
pop
sti
das
inc
mov
push
jle
jb
mull
iret
popf
mov
push
mov
inc
mov
xchg
inc
jb
lods
xchg
mov
xchg
in
inc
sarb
inc
push
stos
dec
mov
sbb
xchg
sub
and
ss
pusha
rolb
push
arpl
repnz
aam
pop
pop
adc
dec
mov
jne
sub
xor
divb
cmpsb
xchg
xor
imul
lea
or
outsb
jmp
test
dec
fstpt
jl
std
inc
lcall
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
fidivl
add
xor
push
sub
pushf
outsl
sbb
sub
andb
data16
daa
dec
into
insb
push
sub
insl
cmp
scas
outsb
jmp
out
mov
add
mov
enter
cmpsl
lret
add
add
or
je
mov
and
fstpt
fdivr
push
inc
pushf
mov
or
sub
inc
xchg
fwait
cvtps2pd
jle
stos
sbb
fsubl
pop
fidivrs
mov
in
out
adc
aam
fiadds
cmc
test
sub
mov
mov
mov
icebp
addl
sbb
jl
push
sti
cmp
push
add
sbb
imul
xchg
lret
dec
lea
imull
push
out
pop
mov
and
mul
sub
xor
mov
jecxz
das
in
mov
adc
aaa
push
inc
roll
insl
mov
iret
dec
mov
mov
inc
mov
push
jae
cs
sbb
dec
push
xor
fmull
and
pop
insb
shrb
or
or
jae
push
xor
inc
mov
imul
mov
inc
push
bound
jb
in
int
sti
out
push
aas
js
push
mov
or
and
xchg
cld
mov
jns
rcl
or
jle
loope
iret
popf
xor
fwait
gs
adc
icebp
pop
mov
shlb
aam
mov
add
and
sbb
push
subl
int3
mov
popf
ret
xchg
movsb
mov
mov
outsb
pop
pop
cs
inc
fstl
sarl
mov
ret
and
dec
cltd
mov
test
shr
int3
icebp
dec
out
dec
out
pop
into
test
mov
sub
stos
fsts
xor
sbb
arpl
dec
inc
enter
push
mov
and
inc
out
xor
sbb
push
cmp
mov
mov
int
mov
cld
sbb
cmc
dec
outsb
out
loop
jns
insl
mov
ret
jns
decb
je
sub
inc
lret
sub
xchg
out
mov
daa
inc
sbb
sub
mov
and
inc
mov
out
popf
xchg
pop
cmp
inc
jmp
test
outsl
xlat
mov
inc
int3
fldl2t
stos
inc
mov
sub
stos
std
aad
in
les
clc
mov
inc
mov
in
add
outsl
jnp
mov
mov
and
sub
mov
xchg
ds
sarb
daa
mov
xchg
dec
add
inc
test
push
push
dec
arpl
dec
insl
addr16
in
fidivrl
jo
add
xchg
xchg
sahf
mov
hlt
xor
insl
mov
and
loopne
clc
add
popf
loopne
and
mov
test
fdivp
std
shr
jno
mov
push
mov
lahf
lods
gs
pop
addr16
xor
je
shll
pop
out
or
sub
sub
jle
ja
xor
or
imul
xchg
xchg
sarl
loopne
movaps
sub
rcll
add
insb
cmp
imul
fucomi
idivb
mov
clc
add
out
dec
mov
mov
sub
adc
mov
enter
push
dec
mov
into
out
rorb
ds
dec
pop
fld
outsb
cmp
inc
movsb
xor
adc
xor
cmp
ret
cmc
scas
push
movsb
rorb
fidivs
lods
daa
lea
insb
sahf
cltd
out
ss
xchg
int
dec
or
cld
ret
test
xchg
bswap
sub
cmpsb
inc
cmpsl
call
pop
pop
pop
in
sbb
sbb
enter
xchg
pop
mov
pushf
push
sub
pop
or
xchg
dec
push
xor
jmp
xor
cwtl
pusha
testb
outsl
insl
push
jmp
cmpl
lea
xor
adc
jmp
inc
fbstp
pop
cmpsb
out
mov
test
jno
ss
imul
int3
cmp
int
in
hlt
hlt
aas
imul
subb
fld
inc
outsl
subl
sbb
sar
push
mov
test
dec
lcall
call
leave
inc
pop
push
sbb
jne
mov
xchg
lret
into
stos
mov
out
or
insb
test
sub
pop
mov
hlt
cld
dec
or
fldcw
jmp
fucomip
mov
int
and
jae
sub
sub
xor
xor
dec
lcall
loope
neg
scas
out
mov
aad
subl
mov
xchg
inc
repz
pusha
fcmovnu
add
pop
pop
pop
push
mov
mov
pop
cld
lock
mov
test
arpl
inc
jle
push
push
insb
jae
ret
jmp
flds
adc
dec
lods
sub
sbb
or
imul
ljmp
or
inc
sahf
push
xor
sub
inc
aam
dec
or
mov
sub
or
pop
cmp
fstl
ret
add
fcompl
enter
jns
stc
inc
je
sub
aas
push
loop
pop
sub
xchg
hlt
pop
xchg
mov
gs
jmp
xchg
mov
pop
adc
xchg
push
xor
into
scas
add
inc
js
sbb
add
cmp
push
mov
jo
iret
repnz
xchg
mov
jge
or
dec
mov
cld
arpl
out
nop
jg
fs
inc
sbb
scas
outsl
xchg
or
or
repz
mov
es
int
adc
test
mov
jp
pop
cmp
sub
inc
and
imul
jne
jle
test
push
pop
or
jae
push
mov
or
lock
gs
notb
lret
aas
jle
push
fdivl
mov
lods
js
sub
pop
mov
add
mov
or
add
pop
dec
push
push
ss
bnd
or
cmc
add
aam
mov
bound
stc
aad
mov
cmp
adc
bound
cwtl
das
inc
or
inc
push
sbb
imul
mov
iret
fs
out
xchg
cmp
pop
xchg
insb
jne
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
in
mov
add
cmc
lock
xor
outsb
imull
inc
inc
dec
jp
cmp
and
lret
ja
cmp
out
testl
or
xor
icebp
jnp
shr
push
lea
adc
xor
pop
jnp
mov
sub
sahf
imul
inc
xor
mov
or
add
dec
data16
mulb
dec
movsb
cwtl
jnp
aaa
icebp
jae
and
aaa
je
scas
mov
and
dec
dec
or
popf
jne
mov
out
pop
out
int3
push
dec
xchg
ds
cmp
in
jb
inc
and
pop
jae
or
scas
sub
or
pop
rcrl
xchg
dec
sub
xchg
mov
dec
pushl
xor
bnd
cmp
imul
negl
lret
ja
shlb
rcll
xchg
mov
fwait
rcrb
rorl
aaa
xacquire
js
je
int
add
jp
dec
iret
adcb
inc
stc
pop
dec
mov
jo
push
stos
pop
test
inc
or
jns
pusha
es
add
ds
sahf
push
fsubp
mov
pop
aad
pop
loop
xor
jmp
sbb
add
rcrl
jnp
xchg
rcr
stos
adc
cmp
or
xor
inc
jbe
dec
cmc
adc
out
xchg
and
incb
pop
cmpsb
arpl
push
dec
fs
imul
aad
and
outsb
out
pop
or
push
pcmpgtw
and
in
and
dec
mov
add
fidivrl
add
outsl
add
sub
cwtl
xchg
hlt
iret
fucomi
push
out
outsb
sub
iret
aam
scas
xor
in
add
xor
or
inc
push
jp
push
pop
cmpsb
add
inc
xchg
out
mov
std
lods
cld
and
mov
fisttps
adc
and
cmp
loopne
add
arpl
das
fisubrs
xor
orl
out
jge
xchg
mov
data16
rcrb
xchg
add
int3
dec
sub
and
mov
repz
jae
dec
scas
repnz
mov
stc
in
adc
ret
xor
testl
fcmove
or
js,pt
int
nop
jmp
mov
stos
push
enter
xchg
mov
and
pushf
cmp
imul
add
stos
inc
pop
dec
sti
stos
mov
repz
xor
dec
rcrb
or
pop
inc
inc
pop
bound
loope
jmp
pusha
in
xchg
push
and
int
cmp
xchg
aas
lds
ret
sub
jmp
sub
cmpsl
icebp
add
repnz
mov
imul
pop
pop
xchg
inc
push
sub
xchg
fucomip
sahf
adc
mov
xor
add
rcll
das
add
testl
or
ljmp
jae
dec
adc
sbbb
outsb
test
push
cmp
insl
sbb
and
mov
add
lret
loop
out
lods
xor
subb
testl
adc
ds
sbb
push
bound
movsl
popf
xchg
das
loopne
faddp
outsl
cs
outsb
jne
aaa
dec
loopne
add
call
sub
jne
mov
jo
pop
fistpl
jmp
xor
mov
inc
xorl
ds
inc
push
cmp
inc
sub
out
aad
cmp
adcb
push
leave
std
lds
xchg
cmp
push
push
int
jnp
mov
or
es
loope
fcmovnu
dec
mov
jo
jbe
cli
gs
leavew
push
faddl
and
mov
mov
bswap
das
mov
iret
test
cmp
jnp
add
lods
cmpsb
inc
inc
movb
daa
test
repz
jge
jno
scas
mov
ret
or
fwait
adc
lods
jno
divb
out
movsb
popf
jne
scas
fsubrs
xor
in
outsb
movsb
ds
jmp
jmp
shll
jns
mov
or
stos
push
movsl
xchg
inc
inc
lcall
ds
fsubrl
cld
and
mov
arpl
cmpsb
inc
xor
jmp
and
stos
mov
test
xor
lods
xor
rep
out
ja,pt
xchg
notb
inc
add
xchg
out
jp
xor
arpl
hlt
inc
push
pop
mov
cli
push
into
mov
mov
ss
inc
lret
cmp
jp
repnz
xor
fisubs
adc
out
jns
mov
push
jno
cmpsb
push
mov
xchg
inc
aam
inc
inc
int
outsb
cld
add
sti
inc
pop
and
push
push
into
cmpsl
loop
out
and
add
add
adc
sub
loop
loope
loop
pop
imul
mov
mov
mov
ljmp
push
add
mov
xchg
mov
jmp
sar
test
cmp
movsb
out
jmp
jge
mov
or
jne
sbb
inc
dec
arpl
leave
push
iret
mov
lea
outsb
stc
int3
in
pop
leave
dec
and
into
lea
xsaves
fcompl
ret
pop
cmp
imul
shl
mov
pop
nop
or
pop
lods
int3
and
dec
aam
mov
xchg
cwtd
sahf
icebp
sarb
mov
add
sub
mov
sbb
mov
into
int
fildll
lods
or
xlat
scas
fldcw
mov
push
sub
push
cltd
into
into
clc
push
mov
push
jne
mov
dec
add
ja
jbe
daa
fidivs
lcall
or
add
fsubp
cmp
aad
adc
repnz
daa
push
sahf
mov
insb
in
mov
rol
inc
es
adc
aaa
lods
push
and
insb
hlt
jb
xchg
call
xchg
cmp
inc
pushf
iret
dec
xor
sub
mov
gs
mov
imul
sub
test
push
daa
es
lret
stos
std
add
mov
push
xor
mov
pop
xchg
xor
pop
mov
mov
jecxz
fcom
or
fsubrs
data16
shll
adc
add
mov
mov
mov
push
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
inc
mov
jg
add
movsl
push
jge
ret
mov
adc
push
adcl
in
imul
andl
add
sbb
xchg
and
jne
or
fcmove
sub
adc
outsb
cltd
cmp
lahf
push
lret
mov
addb
lcall
mov
dec
sbb
mov
aaa
dec
mov
add
cltd
pop
scas
xor
outsl
cmc
call
add
arpl
push
adc
outsl
sti
arpl
loop
out
adc
loopne
mov
push
rcrb
stos
xchg
cli
rolb
mov
mov
adc
push
mov
shlb
call
inc
imul
cmp
jo
pop
cmp
xchg
mov
daa
xchg
mov
xor
and
lods
repnz
cmp
jmp
inc
lret
cmpsl
idivl
pop
jae
icebp
subl
stc
divl
loopne
es
sahf
jl
mov
push
test
int3
sti
arpl
push
hlt
mov
mov
inc
jnp
sub
xor
mov
insb
lret
sub
sahf
inc
aad
jg
lret
cmp
and
push
add
test
fnsave
inc
filds
clc
mov
out
sbb
jbe
movl
sbb
lods
push
test
mov
dec
dec
add
cmp
hlt
jmp
ljmp
add
mov
scas
negb
pop
jl
push
test
mov
add
and
and
lock
xchg
xchg
out
arpl
fstps
leave
imul
loopne
or
rclb
outsb
mov
mov
pop
mov
adc
fdivrl
and
fildl
and
rclb
pusha
push
out
or
leave
in
repz
xchg
ljmp
sub
jnp
jb
pushl
lea
jl
push
and
in
xchg
add
int
arpl
add
sbb
fbstp
aaa
sbb
adc
pop
data16
jmp
and
xchg
cmp
pop
test
fidivrl
mov
pop
or
dec
adc
test
dec
sbbb
in
adcb
loope
sub
subl
aaa
xchg
ja
sbb
jbe
cmp
repnz
xchg
cltd
push
ret
inc
lcall
xorl
pop
push
fwait
in
jns
dec
imul
mov
inc
movsl
mov
mov
mov
int3
mov
arpl
xor
dec
pop
int3
lret
int3
in
fidivrs
or
mov
add
test
daa
and
les
pop
xchg
test
daa
sbb
movsb
addl
pop
loope
jns
sbb
repnz
std
cmpsl
lcall
add
jnp
repz
pushf
lret
imul
jne
les
pushw
fisttpl
dec
sub
js
xor
scas
lea
loopne
inc
enter
xor
shl
xor
popa
xor
mov
enter
scas
movsl
leave
or
mov
fists
and
es
push
jge
mov
or
inc
int3
lea
pop
pop
and
push
adc
iret
push
ret
jns
arpl
jne
aaa
add
cmc
cmpsl
mov
dec
clc
pop
adc
pop
xor
test
inc
mov
out
pop
sbb
int3
adc
ret
shr
mov
addr16
sub
jp
xchg
ds
lods
add
arpl
or
push
aam
sbb
cltd
pusha
mov
xchg
ret
add
iret
push
cmp
lahf
jl
sbb
addr16
das
ret
xchg
dec
push
jle
inc
jo
std
repnz
inc
call
sbb
arpl
cmp
movsb
and
scas
add
bound
push
enter
je
jmp
out
lea
stos
jl
lods
fisubrs
cwtl
mov
ljmp
outsl
xchg
inc
and
sub
jg
test
stc
repnz
cmp
pop
data16
incb
hlt
test
cmp
and
les
lea
cltd
mov
push
add
xchg
fldl
out
das
xor
mov
pusha
aaa
jno
mov
sub
jb
pushf
inc
imul
into
fidivs
addb
xchg
stos
js
fdecstp
movsl
inc
and
mov
gs
enter
ret
mov
dec
jle
or
sub
xchg
xchg
or
xlat
dec
fldl
jno
andb
inc
test
ficomps
or
xchg
fsubs
adc
add
or
fidivrs
mov
adc
ficoml
ret
iret
lret
mov
dec
out
pop
inc
or
int3
mov
dec
lret
xchg
xchg
add
bound
cmp
sbb
mov
shrb
push
and
test
jge
mov
adc
mov
loopne
pushf
sub
xchg
mov
clc
ja
xor
mov
scas
cmpsl
xchg
test
loope
ds
cmp
sub
mov
fdivrs
and
mov
cltd
pop
mov
push
jno
mov
dec
shll
les
popf
stos
jns
nop
adc
xchg
mov
gs
adc
xor
out
lahf
xor
jne
mov
cmc
sbb
mov
jo
cmpsb
dec
sub
jo
dec
and
push
mov
jmp
jecxz
push
test
aas
jo
pop
mov
roll
pusha
mov
in
lods
pop
mov
mov
mov
jmp
mov
aaa
mov
mov
jns
ret
cli
or
or
insb
ret
loop
daa
negb
aam
mov
lahf
sahf
jae
inc
push
or
movsl
mov
sti
inc
jo
imul
js
sub
test
mov
and
xchg
ds
and
or
jnp
pop
repnz
ja
cmp
cmp
cmc
pop
sti
push
out
pop
jbe
inc
arpl
pop
xchg
out
test
call
popa
lds
in
rorb
mov
and
pusha
test
cltd
jns
dec
mov
mov
or
sub
lods
test
pop
repnz
sbb
hlt
jno
add
pop
add
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
mov
add
jne
mov
loope
add
imul
dec
mov
shr
popf
test
js
mov
std
adc
gs
mov
es
popa
cmp
orl
test
lcall
jo
xchg
inc
je
lret
pop
mov
lea
sub
mov
adc
adc
sub
cmp
pop
sub
negl
mov
dec
dec
mov
lds
adc
jnp
or
outsb
inc
mov
out
lods
adc
mov
adc
cld
movsb
popa
xor
add
xchg
fwait
int3
lcall
push
mov
mov
out
mov
pop
ficompl
xchg
gs
das
out
fdivrs
xor
imul
les
jns
loope
mov
pop
cmp
hlt
push
loopne
xchg
sti
dec
shll
sub
sahf
cmpl
arpl
rcll
inc
fwait
and
sbb
add
push
mov
iret
push
cltd
xchg
shr
pop
arpl
lods
mov
ret
std
clc
push
rcl
mov
mov
sarl
dec
aaa
fsts
mov
jmp
daa
rcrl
lahf
mov
inc
sar
cmp
mov
outsl
call
and
js
imul
mov
pop
mov
mov
test
divl
stos
sbb
outsl
jbe
jmp
shrl
mov
mov
inc
sahf
sub
xor
in
pop
jb
insl
test
push
pushf
icebp
cmp
mov
mov
icebp
loopne
sub
push
jge
subb
iret
out
mov
outsl
das
scas
mov
jae
dec
fisubl
adc
loope
mov
inc
popf
cld
cmpb
adc
xchg
testb
jb
mov
lea
mov
daa
int3
pop
sti
scas
jb
loope
fstp
adc
xchg
adc
inc
int3
cmp
mov
sub
and
mov
lods
jle
mov
xor
mov
repz
mov
jp
xchg
ret
pop
bound
mov
arpl
nop
push
mov
mov
notl
idivb
cmp
js
ja
and
jb
push
subl
dec
inc
mov
movsl
add
imul
dec
pusha
cwtl
push
incl
and
xchg
addr16
xor
data16
push
loope
mov
xchg
mov
sub
mov
addl
loop
sti
out
push
nop
xchg
mov
pop
into
shl
xlat
xor
shl
insl
adc
pop
push
sub
std
leave
and
jns
dec
adc
push
xchg
xchg
inc
lcall
jbe
in
mov
push
int3
stos
aaa
test
pop
out
dec
outsl
mov
les
sub
mov
and
lret
movsl
popf
test
dec
and
sub
cmovbe
sub
mov
add
int
mov
in
mov
lahf
cmp
xchg
push
push
push
and
psrad
pop
addr16
push
popa
dec
jo
nop
fbld
mov
mov
outsb
dec
pop
int
jno
fs
mov
insb
inc
xchg
and
adc
stos
mov
sub
idivl
inc
push
push
sbb
cmpsb
jae
aas
jecxz
aaa
push
fwait
ja
hlt
scas
sahf
jne
ljmp
test
adc
jecxz
scas
pop
adc
and
test
sbb
repnz
cltd
mov
mov
ficomps
dec
inc
fxam
add
out
xchg
loope
ret
mov
sbb
cwtl
inc
mov
cmp
add
ss
inc
rcr
fadd
fcomps
cmp
test
adc
push
lea
pusha
pop
pop
or
jmp
mov
andl
cmp
pop
adcb
sub
xchg
stc
shlb
ret
popa
sarb
shll
shlb
xchg
lea
jae
loop
and
out
lods
sbb
jae
es
cmpsl
repnz
fsubs
jmp
icebp
pop
and
data16
xor
lea
aaa
jne
cmp
call
mov
or
push
jb
pop
mov
jp
into
push
rclb
dec
mov
cmp
js
and
inc
pop
insl
mov
push
aad
adc
sbb
lds
xor
xor
dec
mov
xor
pop
jae
cmp
test
mov
pop
inc
decb
jns
ret
pop
xchg
sub
push
mov
fidivrs
rorb
push
sub
out
daa
push
xchg
lock
and
insb
push
orb
xor
mov
dec
xchg
or
mov
ss
aam
fwait
popf
mov
mov
sub
out
sub
gs
fsubl
mov
pop
sub
or
mov
lea
mov
xor
repz
xlat
mov
lret
out
mov
sbb
out
imul
or
jmp
fidivrs
fnstenv
pop
pop
xchg
dec
mov
mov
xchg
lret
and
adc
cmp
call
int
rcrl
sub
sub
jl
stc
hlt
push
int3
or
dec
xchg
pop
test
adc
ljmp
push
roll
push
fs
enter
adc
pop
out
mov
sbb
rcrl
fs
xchg
cmp
and
aas
pusha
lret
das
ret
jmp
out
push
mov
cmp
xchg
push
push
inc
mov
scas
cmpsb
dec
push
ret
jg
mov
shll
je
enter
mov
mov
popa
cmc
mov
pop
pop
call
xor
jg
pop
mov
mov
les
pop
aam
test
test
ds
push
lret
iret
mov
mov
pop
jne
mov
or
fstps
or
sub
xchg
gs
inc
jl
cmp
popf
andb
mov
mov
dec
sti
stc
shl
cs
test
into
repnz
dec
jo
jl
mov
sti
int
jg
mov
popf
mov
xlat
mov
mov
add
push
mov
arpl
xor
movsl
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
cli
add
jmp
cmpb
fbld
sub
js
xchg
adc
dec
or
xchg
and
jo
iret
sbb
adc
or
sbb
adc
mov
vpunpckhqdq
sub
lret
inc
sub
test
fstpl
jecxz
das
push
xor
fistpll
adcl
inc
push
push
or
lock
xchg
jmp
lcall
in
cmp
sbb
mov
mov
push
in
enter
inc
adc
je
into
orb
cmp
daa
or
inc
cmp
or
xchg
mov
mov
xor
add
sahf
out
shrb
cli
xchg
push
fstps
imul
bound
in
inc
xchg
lds
sbb
out
jo
mov
in
call
cld
cltd
xor
cmp
sarb
or
or
loopne
add
mov
bound
or
jno
jecxz
jecxz
lcall
sub
inc
jg
push
inc
bound
lcall
shlb
mov
icebp
jno
cltd
lahf
inc
shrl
mov
sbbl
jp
loope
gs
cs
add
mov
and
mov
ljmp
sbb
gs
and
popf
mov
std
ret
dec
add
jle
scas
sbb
mov
aad
rclb
cwtl
filds
cmpsl
cmp
xchg
mov
movsb
lea
popl
cmp
push
jno
popf
hlt
xorl
fldcw
xchg
popf
inc
push
scas
cmp
cmp
rorb
popa
repnz
and
stc
xchg
adcb
addr16
in
mov
scas
test
dec
jne
ret
bound
mov
mov
sbb
jno
mov
aad
ficomps
lea
push
out
and
and
cmp
xchg
pop
dec
mov
xor
fldenv
lret
imul
xchg
xor
mov
out
pop
sub
add
sbb
sbb
dec
mov
fdivl
push
add
addb
mov
rcll
pop
cmc
push
sub
jbe
xlat
scas
leave
mov
cmp
insl
mov
cmp
inc
rorb
int
add
imul
sub
pop
sahf
push
mov
daa
in
cltd
or
rorb
movsb
mov
dec
push
dec
cmpsl
lahf
int
or
mov
mov
cmc
mov
repz
sub
cmp
or
ret
cmp
or
ljmp
je
add
loope
outsb
pusha
jne
dec
xor
test
xorb
sbb
out
dec
cmc
jg
mov
jg
mov
pop
in
out
cmp
repz
lea
mov
je
movsl
jge
xorl
insb
push
add
xlat
adc
cmp
xor
es
loope
addl
hlt
jb
into
pop
ficoms
inc
mov
addl
testl
ret
sub
inc
fidivs
xor
sub
xor
shll
push
iret
addr16
sub
inc
gs
cmpl
les
inc
sub
pop
lds
loope
xor
sbbl
roll
xchg
aad
mov
fbld
xchg
xor
popf
or
shl
gs
mov
sub
lcall
jbe
xchg
cmpsb
pushf
push
xchg
pop
cvtps2pi
inc
mov
cltd
adc
scas
jge
outsb
in
rclb
inc
jb
inc
shl
or
out
mov
add
mov
xlat
xchg
push
lock
das
cmp
add
xor
xchg
or
hlt
dec
adc
into
push
xlat
bound
negb
inc
and
scas
sbb
movsl
sbb
lock
pop
aad
mov
cld
pop
in
jle
shrl
jns
push
pop
addr16
sub
mov
mov
xchg
bound
movsl
aam
cmp
or
and
push
dec
testl
repz
jb
jmp
clc
xchg
sbb
test
inc
fsubrs
movsb
sahf
sbb
xor
cmp
xchg
push
push
scas
out
mov
cmp
lods
push
inc
jge
adc
repnz
lahf
mov
ss
jns
in
sbb
dec
jp
out
daa
lods
stc
and
rolb
sub
int3
stos
fwait
int3
aaa
sahf
in
out
pop
insl
mov
xchg
das
jae
stc
std
push
sbb
lods
push
sbb
mov
dec
aaa
jp
jno
bound
ret
adc
fstpt
adc
addr16
xchg
mov
fsubrp
mov
or
xchg
xor
insl
jg
fidivrl
mov
imul
push
imul
push
lds
push
test
push
test
mov
add
sub
imul
push
mov
sbb
pushf
adc
das
in
adc
mov
imul
mov
cmpsb
xor
fnsave
data16
out
call
mov
adc
jns
std
or
cmpb
call
jbe
icebp
enter
dec
pop
push
xor
push
mov
jle
jnp
idiv
xchg
stos
cld
lahf
xor
cmp
xlat
xchg
lea
cmpsb
ljmp
jns
in
bnd
movsb
pop
out
ficomps
adc
call
add
mov
and
scas
inc
cli
shrl
fidivl
cmpsl
xchg
addr16
jb
sbb
ljmp
add
inc
xor
push
xchg
outsb
sti
test
jae
pop
idivl
iret
leave
stc
xchg
aaa
dec
cli
popf
outsl
mov
sbb
jg
lods
idivl
or
mov
imul
ja
jle
out
inc
add
jmp
out
inc
sbb
insb
ret
dec
imulb
mov
pop
push
test
inc
jno
outsl
mov
jle
jp
pusha
jnp
lea
inc
xchg
jp
stos
push
push
outsb
pop
xchg
scas
pop
push
scas
in
inc
lcall
lds
push
dec
cmp
aad
xchg
arpl
inc
jmp
fists
inc
mov
adc
call
mov
movsl
out
add
mov
xchg
repnz
adc
sbb
mov
pusha
jne
out
or
sbb
pop
dec
push
adc
shl
add
int3
fs
in
cmp
jmp
push
xor
jae
leave
sbb
add
xor
mov
xor
mov
push
push
push
push
call
push
push
jmp
add
lds
cld
mov
add
aas
cmc
sub
or
cmc
movsl
adc
sbbl
mov
xor
adc
cmc
subb
adc
sti
xchg
dec
prefetcht1
adc
inc
jle
add
ds
mov
pop
bound
imul
mov
adc
fwait
leave
int
pop
cmp
jno
in
mov
cld
sub
xlat
lock
or
or
xchg
pop
jle
std
xchg
ret
repnz
mov
lcall
mov
ljmp
push
dec
subb
pop
inc
jle
or
sub
dec
imul
push
fwait
mov
lret
push
and
ds
test
mov
lret
imul
dec
jecxz
and
lods
xchg
xor
gs
or
push
cltd
add
fcoms
pushf
push
push
lahf
daa
jg
dec
das
movsl
insl
les
push
and
iret
jmp
ficoms
mov
loopne
or
aaa
add
fcomps
test
divl
sbb
sbb
clc
pop
sub
sarl
cs
sbb
bound
push
stos
pop
fcomps
shll
nop
dec
or
mov
xor
push
lods
or
inc
cmp
adc
xlat
ljmp
sub
pop
mov
test
push
sub
clc
in
adc
push
mov
test
test
nop
aaa
push
mov
jge
dec
in
or
scas
mov
decl
push
lea
lea
pop
cmpsb
dec
sbb
jo
mov
sbb
insl
ja
dec
jg
mov
bnd
cmp
mov
int3
insl
cmp
es
imul
rcll
add
ds
aad
jbe
xor
insl
nop
adc
fcomip
add
add
orl
fwait
out
decl
stc
lcall
or
add
sbb
jge
add
jge
cmp
mov
adc
call
jmp
or
pop
xlat
lea
pop
sub
pop
lock
dec
push
xlat
add
fwait
mov
inc
repz
pop
loope
movsb
adc
cmp
aam
fsubrl
jp
pusha
add
ret
rorb
mov
pop
mov
add
cmp
cmpsb
add
xlat
mov
ja
cmpsl
jbe
xchg
jbe
mov
xchg
lods
adc
dec
mov
ficoms
fs
jmp
ljmp
mov
fwait
stos
pop
lock
lret
adc
xor
dec
loopne
and
cmp
dec
movsb
cmp
ret
int
mov
or
dec
repnz
pop
movsl
adc
pusha
fdivs
or
dec
jbe
stos
gs
adc
mov
mov
xor
jle
shll
testl
jmp
inc
iret
popf
pushf
xlat
dec
and
je
jp
jg
push
jnp
fidivs
dec
jp
ds
jp
xchg
arpl
jb
mov
arpl
mov
cmp
dec
inc
push
imul
in
sbb
popf
cmp
das
mov
mov
mov
ret
fcompl
shl
jle
ret
cmpsl
popa
iret
xchg
out
lret
sahf
cmp
loope
sbb
adc
push
mov
xchg
and
jmp
push
xor
dec
xchg
xchg
dec
sbb
insb
mov
and
lods
mov
insb
lret
btr
fmuls
or
and
pop
mull
cmp
shlb
ds
mov
fmuls
dec
lock
xchg
imul
dec
add
cld
cmp
addl
add
stc
or
fcmovu
adc
repz
pusha
insb
adc
jae
es
inc
pop
sbb
mov
xchg
pop
cld
js
dec
aas
dec
pop
rclb
cs
jle
popf
jno
leave
dec
adcl
dec
lahf
call
push
pop
jns
fdivp
out
mov
mov
mov
stos
idivb
in
adcl
scas
mov
cmp
hlt
sub
mov
push
pop
das
xchg
inc
push
sbb
stc
mov
das
push
stc
add
cltd
xchg
push
jp
mulb
ds
in
hlt
nop
pop
fmuls
outsb
and
pop
les
add
sbb
lods
dec
test
sbb
lret
or
inc
in
push
icebp
shrl
push
or
and
sbb
adc
mov
cmpl
xchg
xlat
les
mov
cld
repnz
or
mov
cmpsb
cli
pop
test
mov
std
fiaddl
in
sbb
cmc
scas
pop
xchg
pop
sub
ljmp
mov
repnz
filds
sbb
pop
cmpsb
shlb
inc
push
adcb
xor
aad
movsl
xchg
gs
jg
mov
cmp
adc
mov
loopne
aaa
jae
cmp
outsl
mov
lret
dec
dec
cld
std
xor
mov
pop
sub
inc
iret
das
pushf
pusha
cmp
aad
sbb
insb
mov
fsub
icebp
es
fists
push
push
jle
xor
pop
outsb
jo
inc
and
cld
loope
popf
dec
test
mov
fcmovne
aas
mov
pop
in
das
outsb
std
xchg
inc
lret
test
movsb
ja
push
or
jnp,pt
or
bnd
ret
jbe
fmulp
sbb
push
mov
mov
loop
cmp
ljmp
pop
aad
loope
xor
mov
xor
sub
xor
daa
bound
cli
adc
mov
mov
xor
cmpsb
push
push
fdivrs
jg
cs
pop
pop
enter
or
xlat
lea
in
jnp
mov
push
jle
pop
stos
push
and
push
sbb
shrb
out
into
add
test
mov
in
push
pop
std
mov
daa
and
stc
movsl
adc
adc
xlat
into
mov
mov
push
adc
mov
ss
aaa
inc
subl
cmpsb
call
adc
mov
hlt
dec
adc
out
dec
js
jo
pop
test
mov
test
jge
jnp
push
mov
push
mov
out
ljmp
pop
es
adc
sbb
sti
mov
lret
lret
rol
mov
daa
cmp
inc
cmp
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
psubsw
in
push
pop
pop
es
jge
shlb
insl
scas
push
mov
xor
lock
adc
lds
mov
test
push
inc
call
es
out
mov
bound
call
fcmovne
lods
sbb
stos
lret
test
cmp
mov
leave
mov
xchg
int3
jne
inc
xchg
cmp
push
xor
lods
jno
add
pop
mov
shlb
push
nop
push
or
cmpsb
dec
pop
testl
fbstp
or
push
or
push
mov
push
mov
stc
sbb
mov
xchg
rcrl
push
add
push
dec
pop
xchg
inc
das
add
and
cld
jmp
mov
jg
outsl
inc
push
mov
mov
jl
das
mov
std
add
jnp
jnp
push
in
dec
dec
jmp
inc
jle
lret
shll
inc
pop
push
mov
or
sub
mov
cli
addr16
js
sti
les
pop
movsb
shr
or
cmc
rorb
mov
pop
xor
inc
xchg
dec
pop
fadds
ss
mov
inc
test
lcall
add
test
bound
pop
sbb
pop
mov
jge
mov
aad
add
cmp
lods
daa
rolb
out
and
loopne
ret
rclb
cmp
push
cmp
rcll
addr16
mov
jle
dec
mov
cmp
outsb
fiadds
mov
lcall
and
xchg
ljmp
mov
or
cmp
leave
mov
push
out
mov
test
or
aaa
es
pop
popa
addr16
cmp
dec
leave
lods
dec
push
or
call
cs
xchg
iret
rorl
fidivs
sub
mov
ljmp
add
out
popa
and
pop
out
test
dec
add
adc
inc
pop
sub
out
mov
cmp
popa
rorb
ret
popf
mov
bound
movsb
lret
jl
jmp
jne
jae
xchg
ljmp
bound
xchg
xchg
aas
repnz
and
cmp
sahf
cs
psubb
in
pop
pop
lret
mov
sub
ds
imul
in
cmpsb
sbb
jecxz
pushf
stos
loope
int
arpl
add
shrb
pop
mov
pop
and
cmp
pop
imul
or
cld
es
stc
inc
rcr
sbb
lret
adc
and
test
daa
mov
xor
push
dec
fidivrl
xchg
sti
xor
mov
das
push
das
sub
mov
dec
push
aaa
adc
xor
mov
sbb
dec
push
add
cmpb
push
lret
sti
lret
cs
imul
xchg
stos
adc
mov
push
ret
inc
inc
cmpsb
jno
mov
mov
icebp
dec
sbb
imul
sub
insl
cmp
mov
in
je
lcall
clc
aaa
sti
mov
mov
xor
push
adc
pop
lret
addl
mov
jge
cwtl
xor
pop
inc
ja
mov
add
jno
outsb
test
jp
pushf
jg
inc
imul
movsl
xchg
inc
insl
dec
lods
push
iret
xchg
mov
adc
mov
sbb
mov
mov
push
jp
pusha
jnp
cwtl
dec
jp,pt
lods
lret
insb
nop
pusha
and
jns
xor
gs
arpl
test
leave
fldenvs
sbb
inc
xor
repz
xor
jns
jmp
jne
pushf
ret
orl
jns
div
mov
repz
outsl
andl
shrb
pop
xor
sbb
ret
mov
stos
mov
inc
sbb
pop
and
inc
in
jnp
adc
cmp
sub
aad
lcall
repnz
mov
lcall
mov
xor
sbb
test
insl
inc
cmp
fadd
xchg
mov
cmpsb
call
jmp
mov
fwait
xor
lods
repz
dec
fadds
xor
sbb
andl
sti
ljmp
in
insb
xchg
and
mov
out
mov
add
imul
scas
push
cmp
mov
in
dec
push
dec
or
mov
mov
or
mov
pop
popf
popa
xor
imul
jle
sbb
adc
push
loopne
out
xlat
fs
sahf
mov
jmp
pop
fmull
mov
nop
scas
shl
cmp
push
and
aaa
xor
iret
bound
xchg
loop
movsl
popf
ljmp
outsb
popa
pop
mov
jl
push
fsubl
or
adc
cmp
ret
add
mov
inc
gs
add
mov
rclb
aaa
insb
scas
ljmp
ss
sbbb
shll
ret
cmc
ja
js
mov
mov
or
mov
xchg
js
and
xchg
in
lds
test
mov
pushf
lret
ljmp
sbb
dec
rolb
cmp
dec
negl
mov
sahf
adc
xchg
jle
xor
clc
pop
pop
lret
mov
xchg
mov
cld
mov
int3
int3
push
mov
fld1
repz
fisubrl
mov
cmp
jns
je
outsb
mov
aad
jno
sub
jle
stos
pop
pop
ss
or
cmp
lods
repnz
imul
out
push
pop
xor
bound
movsl
push
cmp
aad
adc
js
mov
testb
sti
testl
pop
jns
fistpll
inc
ret
je
cmc
xchg
cmp
fmuls
xchg
popf
out
aam
adc
or
js
dec
hlt
imul
sbb
cmc
ret
stc
sbb
inc
add
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
sub
dec
mov
or
pfpnacc
mov
cld
pop
cli
cmp
out
dec
sahf
mov
xor
insb
movsb
jne
fwait
mov
jo
mov
popa
rcll
enter
into
jo
popf
add
push
cltd
lcall
inc
inc
popf
movsl
jp
push
stos
stc
add
lahf
jmp
cwtl
cmp
push
cmp
jmp
shll
pop
xor
movsl
movsb
sub
into
shlb
out
cmc
dec
mov
cmpsb
jmp
nop
leave
pop
in
lods
sub
mov
ss
xchg
in
pop
js
push
lahf
fsubrs
cmpl
andl
xchg
ljmp
inc
push
or
test
sbb
adc
and
and
mov
aaa
push
push
fistps
inc
push
into
aad
popf
add
jmp
pop
pop
scas
push
dec
pop
mov
inc
out
in
inc
dec
xchg
lret
arpl
in
aas
push
mov
addb
sub
cwtl
fisubs
pop
movsl
int
xor
sarb
mov
scas
div
js
stos
push
mov
rcr
mov
and
stos
add
div
jbe
fwait
stos
cmpsb
lods
lret
cwtl
loop
das
pop
dec
sti
xor
fcom
sbb
pop
jo
enter
jge
ds
js
aaa
shl
add
add
cmpsb
pop
shrb
or
pop
lret
loopne
dec
push
inc
mov
or
pop
in
mov
inc
jle
fs
lods
push
notb
jo
mov
leave
aas
add
into
xchg
call
ret
mov
inc
mov
xor
jbe
cmp
pusha
out
cmp
xor
cwtl
leave
ja
enter
dec
add
repz
rorb
jecxz
adc
push
inc
out
and
rcrb
mov
jnp
ret
lds
cmp
adc
xchg
sub
adc
xor
jecxz
jp
mov
mov
rcrl
hlt
fwait
xchg
push
or
mov
inc
xor
and
enter
ds
xchg
mov
arpl
std
xlat
mov
add
mov
xchg
push
adc
push
repnz
and
cltd
addl
and
rol
push
and
ret
and
cmpsl
mov
jo
and
stos
fsubs
in
cmp
sahf
scas
push
mov
inc
jmp
or
xchg
or
add
xor
addr16
lods
ljmp
sbb
int3
fwait
xchg
jmp
mov
jae
popf
das
fnstenv
xor
sahf
decb
rorb
mov
pop
scas
push
fisubrl
sbb
xchg
sahf
pop
in
sub
test
in
out
lods
jecxz
adc
rcl
stc
aam
out
xchg
xchg
xor
mov
popf
pop
insb
push
xlat
sub
cli
push
mov
iret
jg
lcall
and
fcoms
push
pop
mov
fmull
cmp
xchg
push
js
xchg
orl
adc
nop
nop
enter
std
mov
add
mov
std
rorl
sub
push
and
xchg
data16
jmp
adc
add
arpl
jle
dec
pop
fwait
ret
inc
jo
popf
xchg
jno
lret
ficoml
cmp
ss
pusha
sub
addr16
xor
call
sub
ret
lret
or
xor
clc
sarb
mov
int3
dec
or
and
les
mov
adc
loopne
cmpsb
imul
mov
pop
jo
mov
dec
dec
xor
ja
stos
push
inc
cmp
mov
cld
xchg
xor
aas
sbb
xor
jl
incb
adc
lock
js
jo
rorb
push
fsts
xchg
pop
and
insb
imul
bound
jb
orb
aas
inc
mov
shlb
and
mov
or
xor
push
hlt
xchg
fstl
jne
mov
jo
adcb
cwtl
dec
fildll
inc
mov
and
push
xchg
mov
hlt
dec
push
fsts
out
aad
in
sbb
dec
dec
dec
lahf
bound
push
cmp
dec
mov
das
addl
add
insb
pop
push
popf
das
xchg
push
vsqrtps
dec
sub
cmp
sub
jl
mov
testb
shlb
neg
out
inc
jp
lcall
lcall
aad
mov
stos
xor
or
shrb
sbb
and
sbbb
sub
sbbb
je
xchg
sub
call
adc
mov
scas
adc
cmp
shlb
mov
jns
in
mov
mov
push
aas
xchg
rolb
add
jb
fs
ljmp
lret
pop
xchg
mov
dec
xor
iret
stc
cwtl
adc
xchg
lret
inc
stc
pop
or
das
mov
or
adc
and
cwtl
dec
clc
gs
fwait
into
pop
mov
insl
nop
pop
cli
fisttpl
and
int
addr16
adc
sbb
sub
add
lods
insb
in
mov
and
fiaddl
int3
mov
xchg
xchg
or
fwait
sub
inc
add
rclb
mov
fistpll
adc
test
push
add
imul
cmpsb
mov
cs
mov
cli
gs
lahf
add
test
and
nop
or
std
cli
fnstsw
xchg
and
repnz
dec
and
sbb
enter
push
sbb
or
mov
arpl
xor
stc
and
push
push
rcrb
fisttps
fbstp
rcrl
aaa
mov
aaa
addr16
std
inc
lods
es
cmc
inc
xchg
fld1
imul
mov
addl
or
addl
mov
subl
and
movl
jmp
mov
hlt
add
sbb
test
or
pslld
pop
cmpsb
sub
cltd
sbb
pop
hlt
pop
xor
cmc
movsb
mov
shll
jle
leave
cmp
adc
shll
inc
lret
outsl
dec
and
or
jo
mov
loop
lret
inc
test
test
inc
xor
fs
dec
pushf
cmp
push
call
outsb
mov
jbe
ds
les
movsl
mov
pop
or
aad
cmp
pop
mov
push
fistps
push
aas
push
add
popf
insl
dec
insl
add
dec
decl
inc
xchg
push
stc
inc
outsb
adc
in
mov
pop
ja
xchg
push
cmp
into
push
dec
sbb
or
jl
stos
bound
pusha
xchg
xor
pop
jl
lods
push
addb
inc
cmp
std
iret
ljmp
adc
es
loope
js
jne
rorb
jb
test
xchg
bound
xlat
jp
cwtl
stc
lret
ja
in
ret
movb
xchg
pop
xlat
fwait
push
enter
and
data16
pop
or
adc
mov
add
subb
dec
lock
mov
int3
arpl
mov
mov
or
adc
in
clc
lret
pop
ja
push
test
aas
fisttpl
cmp
sub
je
movsb
loope
mov
inc
pop
jnp
sub
dec
mov
mov
mov
clc
insb
xor
jae
andl
mov
cltd
mov
mov
les
dec
lcall
or
ds
push
or
dec
popf
mov
ret
mov
fistl
fs
xor
jmp
mov
mov
sbb
add
adc
dec
iret
push
int3
fwait
cmp
pop
push
adc
cmp
pop
and
pop
stos
inc
mov
call
mov
enter
push
push
jb
mov
je
cwtl
movd
notl
jecxz,pt
loopne
jmp
bound
outsb
mov
fbld
sbb
jnp
sub
out
push
pusha
jbe
add
out
sahf
inc
sbb
and
ss
ljmp
lods
adc
sub
mov
adc
nop
jnp
cld
sbb
test
jge
sahf
lods
sub
lret
pop
fistps
xchg
mov
cmpsl
push
xor
aam
fldenv
push
add
in
xor
pop
gs
sub
xchg
jle
lds
std
add
lret
ja
xchg
js
sub
cmp
test
lret
push
sub
sahf
sarb
dec
repz
insl
pop
jle
mov
movsl
sti
test
stos
jae
mov
stos
pop
adc
add
xchg
inc
push
outsb
test
data16
fcoms
popf
test
sti
pop
pop
cld
inc
inc
ds
or
rcr
push
mov
cmp
jmp
push
fld
xchg
adc
js
xchg
dec
dec
pushf
cltd
in
frstor
das
sti
pop
nop
xchg
mov
push
loope
lods
cmp
push
flds
xchg
sub
add
ljmp
outsb
adc
sub
leave
imul
and
mov
mov
out
mov
push
push
inc
or
fs
in
inc
sub
sub
dec
mov
sub
les
out
dec
adc
pop
mov
stos
push
mov
arpl
jb
inc
push
jecxz
or
sbb
lahf
das
inc
movsl
int
in
scas
xor
nop
inc
sub
push
push
test
repz
in
scas
dec
cmp
mov
push
pusha
movsb
and
mov
bnd
mov
lds
xor
stc
inc
roll
test
xor
pusha
dec
xor
add
testb
or
scas
js
fidivrs
jecxz
shrb
xchg
call
lea
mov
dec
pop
xchg
mov
cwtl
loope
clc
mov
popa
xor
leave
xchg
das
mov
push
adc
mov
pop
xor
xchg
jno
gs
cmp
jae
mov
push
xor
es
add
stos
inc
aas
loopne
and
push
inc
ds
jo
imul
mov
sbb
dec
inc
sub
cmp
pop
dec
inc
fs
adc
push
sbb
cli
je
dec
pop
mov
and
push
push
fistpl
add
inc
sub
pusha
dec
lahf
push
out
ja
jg
loop
inc
jb
inc
cmp
inc
inc
jle
cmp
pop
and
dec
push
lods
lods
cmc
sub
mov
sbb
or
dec
xchg
aas
aaa
cmpsl
les
sub
sbb
ds
or
pop
pop
inc
les
cmpsb
inc
repz
sbb
mov
stos
pop
out
dec
addr16
mov
push
repnz
mov
jmp
xchg
js
popf
adc
lret
lahf
data16
jno,pn
pop
sbb
mov
mov
jge
rorl
sahf
pop
xor
xchg
stc
pop
jge
mov
popa
mov
int3
or
aas
sahf
das
call
jmp
or
mov
call
js
dec
dec
in
lcall
rep
nop
sub
xchg
ret
imul
movsl
dec
data16
scas
push
out
cmp
jge
lock
lock
mov
xor
dec
sub
push
jbe
dec
stos
aaa
push
mov
jg
push
dec
inc
jge
pop
in
push
nop
pop
inc
mov
push
in
ja
jmp
mov
or
add
idivb
lock
add
cmp
int
daa
jae
add
cld
fdivrs
pop
mov
ret
lcall
int3
pop
xchg
sub
add
data16
xlat
das
or
jmp
jo
mov
repz
mov
add
jle
daa
cmp
enter
dec
add
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
unpckhps
jo
mov
mov
or
xor
cmc
data16
dec
mov
mov
push
xor
int3
call
gs
inc
jle
pop
dec
shrb
sub
ret
bound
cmpsl
mov
aas
arpl
inc
or
or
add
pop
jp
int
mov
leave
pop
call
xchg
mov
inc
lods
lret
inc
xor
addl
leave
std
inc
inc
popa
mov
inc
xchg
daa
iret
movsl
jmp
in
mov
mov
xchg
jo
xchg
in
repnz
xor
mov
xchg
push
loop
push
fwait
scas
addl
xchg
push
icebp
push
xor
pop
icebp
adcl
fnsave
dec
push
adc
pushf
xor
mov
mov
cmp
in
push
cld
fisubrl
pusha
mov
jbe
dec
jb
and
sti
xlat
mov
xor
fdivrs
push
mov
dec
push
inc
lret
fcomps
mov
rcrb
out
mov
or
xchg
popf
stos
jo
jl
mov
add
lcall
scas
ror
adc
jnp
push
sbb
xor
insl
sbbl
add
pop
sub
call
push
aam
daa
dec
stc
insl
ret
aas
push
bound
sarl
mov
xchg
adc
lods
pop
mov
enter
push
lea
mov
aad
xchg
xchg
in
pop
ds
sbb
loop
cld
mov
cmc
xchg
mov
inc
negl
ljmp
lret
mov
mov
fstps
sti
inc
jo
int
xchg
ret
lahf
lods
stos
pop
xlat
test
packsswb
inc
adc
fcoml
pop
divb
inc
mov
cmp
sub
pop
es
pusha
pop
insl
stos
aaa
incl
stc
sub
mov
iret
aas
dec
jl
fnstsw
xrelease
je
dec
shlb
clc
xor
aaa
test
lret
jb
jl
into
push
push
jp
and
sti
push
jecxz
dec
jle
jbe
lods
mov
fdivrl
jae
xor
and
inc
stc
cmc
cmp
mov
dec
in
mov
and
adc
fdivrs
pushf
das
sarl
and
xchg
pop
sahf
xor
mov
add
dec
and
sub
jecxz
loopne
leave
xchg
cmp
adc
hlt
pop
incb
inc
in
not
inc
test
fwait
sbb
lcall
inc
rol
insl
mov
int3
scas
jae
or
out
mov
pop
dec
test
jo
loopne
inc
out
imul
fbld
mov
shll
pop
mov
pop
add
or
aad
mov
dec
pop
cs
mov
push
pop
sub
roll
fstl
aas
js
jb
mov
inc
out
pop
loopne
sub
fs
fsubs
xor
push
sbb
mov
xchg
inc
cmp
fidivrs
mov
call
and
ljmp
les
inc
out
xor
push
adc
dec
lea
shl
fucomip
inc
out
sub
pop
inc
mov
push
enter
jge
aad
or
ja
pop
out
mov
hlt
ss
sub
or
dec
cmpsl
js
clc
lret
sahf
mov
or
jb
jmp
xor
cmp
rorl
int3
xlat
jnp
fcoml
or
loopne
daa
xor
add
js
mov
mov
daa
mov
add
add
push
and
pop
outsb
cmp
pop
addr16
int
or
sbb
aaa
lahf
mov
push
and
mov
sub
insl
jno
shll
loop
fnstenv
inc
lret
pop
sbb
jns
adc
lcall
les
jecxz
icebp
push
pop
mov
mov
cmp
addl
push
movsl
mov
push
or
ss
aad
jno
dec
xor
pop
shl
test
aad
fwait
std
in
xlat
push
mov
push
insb
sti
popf
push
clc
sbb
dec
aam
mov
sub
mov
push
jle
je
fildl
ret
lahf
jb
aam
xlat
mov
in
adc
mov
adc
jge
test
dec
lods
rol
test
push
cmp
or
xor
into
cmp
mov
aad
cmpsb
les
mov
negb
adc
repnz
aas
inc
push
loopne
out
ja
jecxz
movsl
pop
xchg
xor
and
mov
fwait
in
pop
stos
push
scas
outsl
or
jg
jg
loope
xor
or
mov
insl
pop
adc
mov
pop
dec
sbb
cmp
or
pop
scas
insb
sbb
dec
pop
mov
pop
push
inc
inc
push
lret
outsb
insw
jmp
mov
aas
imul
jmp
je
loop
outsb
mov
add
in
xchg
outsb
lods
cmc
adc
out
or
xchg
das
lret
psubq
call
das
rorl
outsb
imulb
dec
sub
or
pop
xchg
mov
dec
xor
and
lods
dec
test
inc
scas
fistpl
icebp
shll
out
cmp
stos
cmp
int
xor
fnstcw
add
bound
push
insb
shr
push
lea
push
sti
lods
js
cmp
adc
mov
xchg
push
dec
jbe
xchg
push
lcall
mov
dec
test
inc
and
in
inc
leave
outsl
pop
in
mov
mov
adc
rcrb
jnp
lret
insl
jl
mov
xor
push
stos
fldenv
xchg
sahf
mov
cmp
jg
dec
push
jg
out
and
subl
inc
inc
add
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
pop
lret
cwtl
test
sti
pop
negl
mov
mov
imul
mov
sti
testb
cmp
pushf
adc
ficoml
xor
addb
dec
dec
mov
pop
push
je
lret
push
inc
daa
fisttpl
mov
mov
call
fimuls
out
and
ret
ss
or
lea
and
das
lcall
push
std
cli
mov
imul
sti
inc
aas
rclb
or
mov
in
mov
pushf
lret
in
aas
cs
imulb
adc
sahf
sti
or
pop
jno
mov
pushf
lret
jle
xor
pop
insb
sub
orb
and
adc
push
xchg
push
xchg
pushf
insl
dec
arpl
cmp
jnp
mov
lcall
mov
gs
cld
insb
mov
popf
cmc
push
or
dec
testl
aaa
or
push
sbb
jge
dec
push
fistpll
lahf
xchg
pop
and
and
pop
pop
out
and
and
push
mov
mov
push
xchg
gs
cmp
fimull
add
lea
cmp
sbb
addl
popf
dec
sbb
pop
lods
add
mov
mov
addr16
test
push
jge
outsl
in
xor
mulb
ljmp
pop
int3
ret
adc
sbb
xlat
int3
jo
mov
xchg
xchg
dec
les
lods
inc
push
push
mov
repz
xor
sub
loop
sarb
xchg
dec
jge
bound
iret
mov
jbe
js
or
sub
cwtl
inc
shlb
daa
and
sti
loope
scas
fs
mov
inc
shr
mov
into
xlat
xchg
insb
dec
push
inc
jb
insl
mov
insl
ljmp
adc
out
cli
scas
bound
sub
call
or
or
push
pop
xor
sbb
out
test
or
add
mov
sub
notl
in
mov
xchg
lahf
jno
shrb
mull
or
mov
inc
push
inc
mov
and
les
aam
fcmovnu
popf
and
push
sub
jle
pop
xchg
push
inc
push
ja
popa
mov
gs
test
sbb
inc
std
in
jecxz
mov
and
imul
xor
into
inc
lret
imul
xchg
push
stos
bnd
inc
lds
xchg
push
dec
cmp
in
icebp
cmp
mov
cmpsl
aaa
mov
ret
dec
data16
and
and
ret
sbbb
mov
mov
inc
outsl
pop
fwait
test
stc
xor
test
out
dec
mov
ss
and
cltd
lret
push
add
dec
mov
pushf
sub
sahf
movsb
cmp
lods
dec
xlat
in
ljmp
ljmp
popf
fwait
inc
mov
push
inc
add
sub
mov
mov
dec
andb
mov
dec
clc
scas
mov
jbe
mov
push
pushf
adc
and
stos
pop
pop
xchg
popf
xchg
mov
ja
jecxz
inc
pop
jnp
movsb
imul
pop
repz
ljmp
mov
and
adc
inc
cs
mov
inc
adc
pop
cld
push
mov
lock
int3
push
sti
fucom
mov
shll
es
mov
cli
or
dec
aad
add
hlt
xchg
aad
jb
mov
xchg
cli
fiadds
mov
mov
test
xchg
mov
movsl
cmp
out
sti
push
push
iret
xchg
ror
scas
hlt
in
cmp
lahf
add
cmp
inc
jo
fwait
add
enter
popa
lds
jle
pop
push
aad
and
jns
pop
out
cmp
cmp
jo
xchg
cmp
cmp
std
out
jnp
inc
aad
lcall
test
cmc
imul
sub
std
cmp
ljmp
nop
adc
into
adcb
std
mov
test
mov
and
in
data16
das
cmp
jge
sti
cmpsb
mov
pop
pop
inc
fsubr
inc
popa
ret
leave
inc
gs
sub
inc
cld
shl
xchg
pop
jl
into
in
ret
popa
das
adc
addl
sarl
cmc
je
or
js
les
push
cmpsb
sbb
add
pop
pop
push
gs
adc
jge
jne
aaa
out
cwtl
jnp
cltd
sahf
out
out
ss
cmp
inc
sbb
pop
test
mov
loopne
cli
mov
lods
cmc
sbb
ljmp
mov
loop
mov
ja
sti
or
adc
xor
jge
cmc
out
hlt
sbb
sbb
cmp
push
shrb
aad
push
icebp
lods
nop
cmp
loope,pn
cmpsb
pop
mov
decb
mov
mov
lahf
ja
jno
clc
push
mov
enter
mov
rorl
mov
test
push
fs
push
xor
and
or
xor
fwait
or
aam
lods
ret
mov
mov
std
add
pop
or
hlt
popf
lods
mov
shll
fs
add
dec
ja
sbb
ficoms
xchg
rolb
pop
imul
data16
xchg
outsb
js
inc
bound
testl
mov
mov
dec
jbe
rolb
inc
cmp
roll
lret
shll
mov
lcall
mov
lods
xchg
cltd
xorb
and
jle
int3
sbb
xchg
add
push
mov
rorl
cmp
xchg
pushl
jecxz
or
push
jmp
leave
cmpsb
jne
out
push
push
add
dec
rcrl
out
cltd
jns
bound
loope
ja
xchg
inc
sbb
pop
idiv
jmp
mov
xchg
mov
fildl
or
movhps
fbstp
or
loope
aaa
xor
jne
test
ficoml
in
lea
daa
mov
xor
push
scas
push
fisubs
add
xchg
mov
mov
dec
cltd
in
imul
shll
or
in
std
scas
mov
push
fisubs
adc
mov
mov
addr16
push
cmpb
rol
mov
jg
xor
cmpsb
pop
call
leave
mov
mov
sbb
pushf
and
aam
mov
xor
pop
addr16
test
xchg
nop
and
notb
in
xor
ljmp
js
clc
add
inc
pusha
or
icebp
xchg
and
shlb
stos
mov
mov
cmp
adc
sub
jns
sbb
and
into
scas
or
ja
mov
imul
add
and
dec
xchg
rorl
lods
push
xlat
mov
stc
and
jns
add
rcll
jne
loopne
fs
std
nop
in
adc
roll
mov
js
shr
pop
ljmp
jbe
and
or
or
pop
dec
and
cmovg
inc
sbb
and
and
pop
dec
nop
adc
mov
imul
mov
jbe
xchg
jl
mov
mov
jbe
and
jae
pop
jl
outsl
jle
inc
inc
add
pop
pop
push
inc
and
mov
or
push
mov
xchg
fidivrl
movswl
int3
sbb
and
enter
pushw
test
and
pop
loop
lock
push
add
decl
adc
loop
hlt
pop
cli
nop
arpl
pop
jg
or
ds
sbb
inc
stos
push
mov
jl
xchg
cmp
and
je
mov
cmpsl
pop
push
pop
cmpb
dec
nop
inc
inc
mov
mov
pop
pop
js
add
test
inc
rorb
sbb
fwait
cmpsl
daa
repnz
fiaddl
adc
pop
xchg
mov
xor
xor
mov
pop
cmpsl
test
add
stos
ud0
dec
mov
pop
xor
mov
adc
or
bound
test
inc
sbb
repz
test
jbe
adc
out
xchg
into
and
cmp
lods
aad
add
cmp
icebp
idiv
inc
stc
pop
nop
mov
add
mov
pushf
cmp
push
xlat
add
pop
xor
insb
test
pop
insl
cld
push
pusha
xchg
fdivl
inc
xor
sub
inc
pushf
push
xor
pop
outsl
mov
fbld
iret
lahf
test
push
lods
pop
mull
xchg
dec
sub
sbb
test
iret
inc
cmp
and
jmp
in
sbb
dec
mov
mov
mov
sub
daa
cmp
cmp
ja
scas
mov
aam
dec
dec
xchg
push
mov
or
sbb
es
ds
push
test
push
popa
and
in
repnz
mov
pop
adc
push
or
jbe
into
inc
mov
fldl
mov
and
lds
out
jbe
nop
adc
ret
mov
jle
filds
sub
repnz
sub
mov
mov
xchg
push
cmp
cmc
lea
sub
into
jb
insb
aaa
rorb
dec
and
enter
sub
add
bswap
ljmp
fsave
lret
std
outsl
gs
ds
jle
aam
movsb
insl
mov
or
jno
mov
iret
int3
sarl
cmp
mov
push
mov
or
and
mov
sub
push
loopne
sbb
testl
cli
jg
lods
ja
imul
inc
pop
test
pop
clc
jne
test
nopl
push
and
loopne
out
push
int3
inc
das
shlb
pusha
ficompl
fldenv
or
xor
push
sti
xchg
mov
mov
jl
ss
iret
pop
pop
outsb
fbstp
lret
cwtl
adc
dec
jnp
pop
xor
adc
jno
std
xchg
lods
stc
cltd
cmp
adc
out
sbb
dec
mov
cmpsb
add
mov
pop
mov
mov
push
pusha
jbe
out
push
or
cmpsl
jo
add
mov
xchg
ret
pop
push
popa
daa
fadds
mov
idivb
pop
and
push
stc
fidivrl
or
pop
push
xchg
mov
xchg
adc
jmp
or
bound
andb
add
mov
je
pop
lea
int3
ret
xchg
or
aad
lock
repnz
sub
dec
jne
add
pusha
fstl
mov
jae
addr16
cmp
mov
pushf
aam
push
push
add
scas
loope
aas
xor
mov
insl
mov
jbe
sub
fsubs
push
sub
movsb
lahf
cmpsb
pop
add
cmp
fwait
mov
out
cwtl
cmp
sbbl
adc
sbb
movsl
mov
pop
pop
shlb
dec
push
js
sbb
or
clc
idivb
jecxz
int3
orb
das
das
xor
push
xchg
int
jl
dec
les
dec
cmp
push
loop
in
rcll
pushf
ljmp
cs
int3
dec
adc
push
cmp
shrb
or
dec
insb
xchg
dec
jnp
addb
add
lds
popa
and
push
das
stos
sub
iretw
roll
je
xor
dec
dec
sub
inc
sub
movsb
stos
push
loop
outsb
sbb
inc
into
mov
movb
movb
mov
andl
jmp
dec
mov
aaa
es
mov
js
mov
invd
add
push
pop
pop
or
in
adc
jecxz
aam
in
fdivrs
mov
or
mov
sub
jns
mov
and
cmp
popf
add
xor
sbb
mov
or
push
mov
mov
cmp
xchg
add
cmp
adc
and
arpl
add
push
stos
sub
int3
cmpsb
ljmp
aaa
fwait
pop
push
mov
ds
add
sub
iret
add
inc
shr
mov
sub
xchg
pop
jg
mov
int
push
mov
jo
jae
test
mov
mov
in
inc
and
fmuls
rol
add
leave
stc
mov
mov
fwait
das
test
notl
pop
jne
mov
push
shlb
nop
mov
test
cltd
mov
or
aad
dec
pusha
and
es
stc
rcrb
inc
cmp
stos
inc
dec
xchg
icebp
lea
dec
icebp
mov
rcrl
sub
cmp
clc
sbb
lds
adc
mov
xor
mov
xor
push
data16
sub
and
sti
lcall
push
mov
pop
dec
lahf
sti
mov
or
cmp
ss
imulb
add
test
mov
jmp
push
add
loop
ret
cmp
mov
push
push
xchg
mulb
mov
data16
rcr
icebp
inc
adc
int
xchg
pop
xor
mov
dec
es
push
xlat
clc
jne
mov
mov
add
leave
lret
stos
stc
and
cmp
jnp
movsb
jbe
faddl
mov
xor
insl
dec
lcall
ja
sti
jmp
stos
and
dec
push
stc
jae
or
mov
in
jbe
push
jno
add
cs
sub
mov
inc
sub
das
cs
aas
xor
sbbb
jne
and
mov
or
add
insb
jbe
or
pusha
jmp
pop
mov
sahf
xor
ficomps
add
mov
das
iret
cmp
mov
jno
notl
aam
adc
in
lods
pop
into
das
arpl
nop
sub
rcll
cmp
repz
xchg
arpl
push
bound
aam
es
or
out
lret
jle
addb
add
mov
int
push
movsb
mov
sbb
sarl
std
popf
cmp
mov
adc
int
sbb
mov
sub
stos
out
mov
repnz
mov
jecxz
loop
cwtl
xchg
mov
push
mov
dec
lea
in
loope
fcmove
sarb
outsb
jnp
outsl
xchg
mov
shlb
add
xchg
and
cmp
in
mov
mov
lock
insb
mov
jecxz
sub
cwtl
sub
mov
adc
dec
or
loope
ljmp
cmp
mov
sarl
jge
xchg
fimull
fistpl
clc
sub
jnp
daa
les
stc
stc
mov
and
push
sub
and
add
lcall
in
fstl
scas
mov
js
sbb
lds
arpl
inc
out
pop
mov
lock
movsl
mov
jns
or
xchg
aad
xor
xchg
xor
sbb
mov
mov
roll
or
inc
push
test
ja
adc
push
pop
outsl
repz
arpl
fbstp
mov
cs
cmpsl
pop
sub
xor
sahf
dec
clc
sub
mov
pop
call
and
shrb
jnp
cmc
pop
pop
sbbb
movsl
popa
lret
dec
mov
xor
cmpl
cli
xchg
cwtl
mov
mov
fs
shll
sub
inc
insb
xchg
rcrl
out
xor
shll
fcomps
sbbl
and
and
fwait
cmp
and
pop
mov
out
jle
cld
outsl
pop
ret
rcrl
punpckhdq
inc
jns
push
pop
aad
gs
loop
movsb
mov
xor
or
push
pop
pop
testb
fsubr
lret
xchg
out
pop
movsb
cmp
stc
rcr
sub
xchg
pop
and
cltd
in
and
add
ficompl
adc
movsb
ret
sbb
xchg
mov
out
insl
cmpsb
out
ret
test
cmp
jo
pop
add
out
leave
mov
daa
sti
mov
mov
or
lcall
addr16
fnsave
mov
icebp
pop
ljmp
pop
xor
adc
in
mov
jb
ds
arpl
cmp
xchg
rcr
leave
push
jle
mov
lds
jp
jecxz
daa
add
stc
push
mov
int
dec
cmp
loop
lock
gs
push
pop
mov
pop
testb
xor
dec
push
or
jb
aad
popf
jnp
fidivrs
mov
push
mov
and
push
stc
sbb
and
dec
leave
push
add
push
or
or
hlt
mov
adc
xchg
dec
sub
jo
les
inc
cmc
stc
dec
ja
out
iret
fbstp
loopne
push
fs
std
shll
inc
arpl
mov
jmp
and
aas
mov
inc
rorl
ds
or
or
pop
cwtl
inc
jmp
nop
popa
mov
fdivr
sub
ss
dec
adc
add
sub
adc
test
add
adc
dec
push
lret
mov
fdiv
sbb
ret
das
jge,pn
stos
bound
lret
insb
mov
push
cmpsl
iret
or
repnz
lock
orl
add
movzbl
movzbl
orl
jmp
insb
lods
push
repz
je
xor
or
add
invd
add
addps
arpl
scas
popl
les
inc
pop
jo
push
lret
pushf
mul
xor
and
cmpsb
fidivl
scas
test
cltd
mov
ret
xor
jb
std
pop
xchg
mov
add
sar
into
lods
jl
xor
jnp
rcl
xor
adc
repnz
cmpsb
xlat
inc
cmpsb
sub
cli
lret
lcall
roll
sar
sub
into
push
mov
mov
xchg
jge
jae
xchg
stos
mov
fcmovnu
push
jg
sbb
and
and
negb
into
stos
leave
sbb
dec
rolb
adc
fcompl
or
dec
jg
imul
fs
cmp
rolb
xchg
addr16
push
push
addb
dec
into
push
pusha
or
aas
movsl
fisttps
je
js
push
mov
sub
fsts
mov
and
inc
pop
pop
mov
out
je
dec
mov
pop
movsb
add
mov
call
pop
lock
mov
ds
gs
das
mov
inc
inc
pop
xor
sub
push
ret
nop
cmc
sbb
xor
jbe
and
dec
scas
push
pusha
ljmp
ud1
jns
cli
out
fcmovu
imul
int
movsb
cmp
adc
adc
sub
xchg
jne
pop
lret
arpl
mov
or
cmp
filds
sbb
push
xchg
lods
lods
enter
ljmp
sbb
or
das
clc
adc
xchg
sub
fisubrs
cvtps2pi
test
test
xchg
cmp
inc
shll
pusha
lods
into
aam
mov
fmuls
push
inc
push
mov
mov
pop
imul
sub
mov
mov
xor
test
js
and
jnp
adc
mov
cmp
jl
push
pop
out
aaa
imulb
push
jae,pn
jmp
push
push
dec
data16
jge
add
mov
push
or
insb
insl
rorb
dec
insb
ret
adc
or
dec
sbb
add
sbbl
mov
mov
dec
sub
jns
mov
jbe
loopne
cs
pop
addb
adc
imul
mov
mov
out
add
xor
in
fbld
adc
and
bound
icebp
fs
sub
divl
je
push
in
js
cs
push
insb
lahf
sbb
inc
inc
sub
inc
dec
pop
jmp
pop
sar
test
data16
xor
loopne
cld
sbb
fnstenv
mov
pop
mov
push
repnz
or
xor
sbb
adc
cwtl
mov
xchg
jbe
aas
std
int
xchg
xchg
pop
cmp
and
and
cmp
xchg
scas
mov
shll
cmpsl
addr16
lahf
and
repnz
je
mov
dec
lea
sbb
lahf
je
ja
xor
pop
or
fidivs
dec
dec
push
js
or
popf
orb
loop
sbb
stc
push
pop
aas
scas
in
addr16
dec
ds
cs
jge
mov
push
xor
nop
rcl
push
fcompl
xor
lds
mov
lea
lods
scas
mov
sub
ret
leave
pop
pop
ja
pop
sbb
clc
rol
push
xor
push
dec
push
ret
lret
stc
lcall
lods
xchg
into
push
test
movsl
mov
or
xor
int3
xlat
cmp
loopne
sbbl
or
je
leave
mov
pusha
adc
cld
pop
lea
fidivrl
dec
sarl
in
popa
xchg
adc
stos
addr16
xchg
push
sub
mov
ljmp
dec
xchg
faddl
imul
cmpsb
inc
fdivl
and
int
test
mov
js
shl
inc
push
mov
scas
cs
mov
dec
fcoml
add
pushf
fsub
mov
lret
cli
or
out
hlt
mov
test
jno
xchg
cltd
add
sbb
mov
dec
mov
xor
dec
shrl
lock
dec
sub
aas
mov
mov
push
mov
mov
loop
fbstp
adc
adcl
icebp
jl
out
je
out
popf
pop
mov
lods
lds
test
les
jb
jne
lret
ja
mov
mov
dec
stc
ljmp
dec
ret
cld
dec
out
rcrb
jb
or
add
ds
sbb
mov
ret
mov
scas
jp
sbb
mov
dec
int3
fisttpll
dec
subl
add
pop
jp
mov
loop
jns
arpl
xor
lods
mov
repnz
lods
dec
mov
shlb
clc
into
inc
ds
xorl
icebp
leave
and
lret
push
test
xchg
mov
in
pop
and
mov
je
inc
cmp
je
outsl
jnp
dec
xor
int
cmp
or
push
or
sahf
sub
lcall
sub
loopne
jmp
cs
push
mov
sbb
mov
inc
dec
inc
dec
mov
jle
gs
in
push
pushf
imul
push
cs
pushf
add
lods
push
or
int3
testl
pop
js
push
fstps
inc
shrl
add
ficomps
js
sarl
or
ret
xor
or
repz
pop
adc
repz
xor
cmc
lds
inc
mov
lret
push
xlat
loope
push
mov
xor
push
in
xchg
int
ja
stc
insl
ret
mov
sbb
mov
inc
adc
jmp
or
push
imul
out
outsb
inc
inc
jne
mov
mov
pop
xor
jnp
cmp
xorl
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
fists
mov
add
cmove
loope
push
daa
jg
xchg
inc
lds
ljmp
cmp
pop
pop
jb
jl
sbb
ds
push
push
xlat
lcall
push
outsw
sbb
add
fs
xchg
cmpsl
mov
pop
in
jg
imul
sbbb
push
pop
mov
stc
cmp
cs
pop
push
out
lods
aaa
into
jecxz
pop
sbb
in
fldl
stc
aas
adc
popa
push
loop
mov
add
mov
popa
jae
fstpt
ja
imul
sub
dec
sub
fmull
gs
fdivrl
inc
or
popa
fdivr
int3
movsl
pusha
sub
int3
pop
sub
mov
int
ja
mov
xor
ljmp
es
adc
repz
cli
cmp
lock
sbb
xchg
sbb
xchg
or
rorb
jecxz
lretw
jns
addr16
xchg
pop
xor
sub
adc
int
fldenv
jp
insb
ret
jmp
mov
jl
mov
push
and
aam
dec
inc
xrelease
les
fs
xchg
push
loopne
dec
test
sahf
pop
cmpsl
ret
test
inc
add
lret
lods
xlat
icebp
test
sbb
cmpsl
ljmp
insb
mov
ret
mov
xchg
sub
push
int3
sbb
out
mov
imul
mov
mov
and
inc
int3
add
cmpsl
adc
dec
xchg
push
sub
fstpt
push
push
push
movl
add
lods
out
inc
jge
fadds
cmp
in
pop
mov
xchg
loopne
in
data16
lods
test
add
clc
fidivrl
jnp
dec
push
mov
mov
push
sbb
mov
pop
scas
bound
jno
mov
arpl
test
push
clc
lcall
sarl
arpl
rcrl
cmp
fimull
inc
sub
dec
int3
push
cmc
jno
mov
xchg
rcrl
add
push
adc
gs
inc
arpl
clc
cmpsl
adc
in
sahf
lods
xor
icebp
or
bound
jle
stos
stos
xchg
sbb
fsts
or
push
lcall
dec
xlat
mov
data16
dec
test
negb
ja
xchg
push
inc
sub
and
test
add
push
or
inc
inc
orl
shlb
mov
out
sub
xchg
jmp
arpl
pop
cmp
jp
jo
or
or
aaa
mov
je
in
adcl
adc
das
inc
in
repz
cmp
adc
rcll
pop
push
mov
adc
and
xchg
rcr
imul
dec
mov
mov
insb
mov
cmp
and
mov
pop
rcll
shrb
mov
lahf
lahf
push
push
sbb
scas
xchg
mov
popl
int3
add
out
imul
fs
out
and
add
inc
andl
hlt
fldln2
pusha
lock
lea
dec
loopne
outsl
rclb
stos
insb
push
std
fwait
xchg
xor
out
imul
repz
ss
sub
popf
and
add
in
mov
lahf
and
sub
pop
nop
shll
jmp
mov
xlat
mov
jge
ret
jg
hlt
sub
pop
jl
daa
shlb
aad
ljmp
dec
repz
cmp
cmp
les
cmp
inc
mov
test
inc
mov
inc
xchg
mov
xor
push
inc
retw
into
inc
insb
movsl
in
mov
jo
pushf
xorl
ss
loopne
and
mov
mov
jl
cld
rorl
xor
sahf
scas
jl
jmp
dec
rcrl
testb
fiaddl
ret
inc
jecxz
icebp
test
sub
sub
and
scas
mov
or
scas
mov
push
cwtl
daa
and
cs
mov
sbb
outsl
icebp
push
pop
jle
ror
adc
inc
in
mov
pop
stc
sbb
test
and
sbb
adc
fidivrl
je
sub
sahf
push
and
nop
xor
idivl
push
ds
mov
cltd
and
cmp
push
or
fsubp
fsubl
enter
xchg
clc
inc
std
mov
xlat
jecxz
inc
bound
popa
call
dec
add
jecxz
cmp
inc
jmp
fcoms
mov
ss
push
cli
add
call
or
das
add
cmpsb
cwtl
aas
dec
mov
lods
repnz
add
mov
flds
push
push
xchg
ss
or
data16
jge
fwait
jge
cmp
into
lret
mulb
mov
jns
pushf
xchg
mov
mov
fdivs
jge
mov
push
push
add
cmp
sub
mov
cmp
out
movsb
insl
mov
push
mov
into
arpl
inc
push
xchg
cmp
dec
lret
jnp
adc
jecxz
cli
rcrb
xlat
xlat
xor
sbb
dec
push
pop
push
ja
sbb
pop
imul
cmpsb
aas
movsl
jge
xchg
xchg
out
pop
cmp
jb
popf
mov
jecxz
inc
lods
insb
mov
mov
push
mov
sub
sbb
and
cmp
cmp
pop
lcall
cli
or
test
aaa
movsl
aad
jno
add
mov
mov
inc
aaa
movsl
js
fcoms
les
or
hlt
jp
jnp
inc
out
repnz
ficomps
sub
cmpsb
rolb
rcll
jb
push
xlat
ljmp
sahf
fisubrl
push
jo
adc
xchg
sar
sbb
lds
in
adc
inc
sub
lea
in
insl
dec
adc
mov
and
cltd
and
add
enter
push
aas
pop
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
ja
pop
jns
mov
sub
int
mov
cli
mov
mov
cmp
out
push
pop
jbe
ljmp
dec
outsl
sbb
rcrb
cli
loop
sub
sub
cmp
dec
sbb
jbe
shlb
add
mov
and
inc
jne
in
and
jbe
movsb
call
and
adc
nop
idiv
mov
push
addl
xchg
test
sub
popf
cmpsl
nop
clc
jg
jmp
cmp
insb
xor
xor
pop
ljmp
mov
push
shlb
sub
mov
into
jle
lods
sub
aad
inc
xor
js
into
cmp
popa
clc
call
mov
add
push
sbbb
mov
and
add
in
test
roll
jge
movsb
ja
add
data16
push
test
pop
inc
xor
hlt
mov
cmp
add
inc
sub
pop
ss
lods
into
inc
xchg
int
call
inc
lret
push
push
pop
push
adc
sub
mov
add
push
popa
popa
les
hlt
xchg
jns
mov
adc
orb
int3
add
es
cli
xchg
sbb
adc
mov
lds
sbb
das
lcall
outsb
dec
mov
mov
inc
rdpmc
hlt
out
incb
mov
xchg
cmpl
mov
push
lcall
sbb
xor
or
or
mov
icebp
xor
inc
cmp
sub
std
xchg
sub
aam
outsl
and
js
add
test
imul
cmp
cmp
aam
or
xchg
mov
int
and
inc
into
and
and
out
sub
cmp
fistpl
dec
adc
or
fimull
stc
frstor
into
sub
sbb
mov
shr
cmova
mov
or
mov
lret
mov
pop
aas
push
arpl
hlt
popf
or
ret
jmp
adc
pop
repnz
and
call
out
lahf
jne
xchg
das
lret
dec
fdivrs
pop
aas
dec
mov
xor
jl
lcall
ljmp
jb
mov
xchg
push
filds
push
adc
sub
out
and
cmp
jae
psubusb
dec
fcoms
xchg
cs
add
pusha
outsb
jnp
push
or
cmpsb
push
dec
push
out
push
add
repz
int
lret
cmpsl
int3
js
andb
out
push
cmp
adc
fs
cmp
mov
xlat
mov
adc
lods
adc
and
xchg
je
xchg
fldl
xor
sbb
fs
daa
dec
sbb
mov
notl
xchg
lcall
inc
loopne
ljmp
loop
int
xor
imul
xchg
push
jae
push
inc
pop
adc
sbb
sbb
arpl
stos
push
push
or
xchg
sarl
out
mov
fwait
stc
sub
add
lods
or
out
enter
mov
or
mov
mov
adc
test
and
xchg
dec
jnp
outsl
je
mov
movsb
or
and
adc
jae
dec
stos
sub
inc
mov
ss
and
sub
mov
loopne
stos
cli
stc
cld
popa
and
ficoml
add
enter
outsl
push
sarb
lcall
and
jle
sbb
int3
subb
ret
inc
out
subl
ds
inc
pop
sub
mov
lods
pop
cmp
lods
mov
pushf
inc
data16
scas
iret
or
daa
mov
pusha
or
or
iret
or
push
ds
add
push
data16
fsubrs
arpl
pushl
add
pop
roll
shl
cld
xchg
mov
dec
sub
inc
sub
push
repz
pop
push
ret
lcall
and
push
jno
and
mov
mov
push
repz
sub
lock
xchg
sti
mov
jne
into
loopne
sti
fs
pop
andb
popf
mov
out
movsl
pushf
in
fsts
nop
or
sbb
outsb
sub
or
pushf
mov
or
cmpsl
loope
jl
pop
icebp
and
rcr
gs
adc
cmp
cmpsb
pop
in
jne
mov
push
addb
push
aad
add
dec
cmp
xchg
scas
or
dec
aam
aad
sbb
push
popa
jbe
or
idivb
push
or
test
mov
ss
outsl
ud2
aaa
and
addr16
push
dec
lods
int3
inc
out
push
out
cltd
ds
lea
add
sbb
mov
cmpb
subb
adc
pop
xchg
mov
subl
in
lods
xchg
test
mov
rolb
lods
and
out
cmpsl
gs
lds
sbb
push
outsl
stos
lret
dec
dec
jg
in
lret
ljmp
arpl
arpl
into
mov
in
fdivr
mov
or
rol
mov
push
filds
js
in
or
dec
iret
enter
jl
testl
es
orl
imul
outsb
imul
movsb
lods
int
xchg
push
jecxz
in
add
cld
cwtl
push
stos
aad
scas
xchg
lock
and
push
addr16
cmpsl
mov
fistpll
outsb
xor
stos
pop
mov
xor
xchg
jmp
rcr
and
nop
pop
pop
and
icebp
es
mov
mov
pop
jne
sahf
and
xchg
imul
lods
enter
push
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
nop
add
invd
add
clts
scas
cmp
push
sbb
lds
mov
xor
sub
add
nop
out
pop
scas
test
scas
push
gs
movb
in
or
xlat
mov
inc
fmuls
and
mov
das
mov
jne
sbb
pop
sbb
mov
mov
les
cmc
pop
addr16
ja
pop
jnp
ss
pop
nop
fisttps
xchg
fs
cmp
mov
push
or
fbld
lcall
loop
lahf
les
xchg
inc
test
adc
push
cmp
aas
in
cmpsb
div
leave
es
push
adc
xchg
ret
rorb
popa
ret
push
pushf
mov
in
mov
pop
hlt
enter
inc
test
cwtl
retw
push
aas
ret
cli
mov
in
cwtl
sub
push
loope
dec
push
push
add
cmp
cmc
sub
ret
in
xchg
and
sbb
paddsw
or
jl
pushf
jb
leave
ss
insl
or
cltd
int
lahf
fadds
faddl
and
lea
sub
pop
mov
mov
cs
cmp
sbb
sub
mov
mov
push
ret
jbe
mov
jno
lds
pusha
fs
lea
imulb
sub
cmp
loop
mov
in
adc
mov
scas
jne
and
pop
jle
mov
mov
adc
push
jmp
push
int
leave
mov
popf
lock
mov
sbb
inc
in
pop
aaa
fstl
mov
inc
mov
mov
jae
mov
cmp
or
mov
add
add
fwait
out
loope
sub
cwtl
pop
lods
and
lea
or
cmp
fisubs
jmp
in
repz
jecxz
cli
das
pop
ss
movsb
inc
push
add
iret
jecxz
inc
sbb
insb
mov
inc
out
enter
lcall
insl
push
lds
clc
mov
imul
das
ret
shl
pop
dec
mov
clc
xor
das
mov
lea
outsb
xchg
pusha
cld
push
or
xchg
ret
push
sti
dec
push
sub
rolb
push
cmp
xor
mov
push
pcmpeqd
inc
mov
or
test
or
sbbl
pop
adc
mov
js
pop
fsubl
push
and
inc
add
outsl
inc
push
xchg
xchg
jle
js
mov
xchg
in
xlat
mov
inc
xchg
loop
mov
cmp
imul
cwtl
inc
mov
stos
mov
mov
pop
add
sub
iret
push
jbe
movsb
data16
sub
pushf
dec
push
sbb
test
pop
push
inc
outsb
enter
xchg
pop
adc
pop
mov
outsl
loope
cwtl
pusha
scas
ljmp
dec
pusha
jmp
add
ret
out
dec
inc
sub
repnz
mov
cltd
call
fsubs
sbb
leave
jp
pop
inc
hlt
mov
inc
or
cmpl
mov
fcoml
add
add
int3
fwait
loope
mov
in
or
sahf
jnp
ret
xor
or
xor
jbe
cmp
sbb
mov
jb
mov
mov
mov
hlt
dec
sub
lock
sbb
inc
cmp
or
mov
imul
cmp
or
adc
int
pop
push
imul
pop
add
push
pop
and
iret
lret
arpl
shl
stos
outsl
and
jno
inc
xor
dec
pop
push
mov
push
cs
icebp
mov
es
add
cmpb
mov
ja
jnp
aas
jecxz
jl
adc
mov
out
or
dec
xchg
cmpsb
insl
jge
enter
jle
mov
dec
inc
aaa
mov
push
int3
add
lret
add
inc
mov
add
adcl
pop
xor
je
cmp
ret
push
out
adc
pop
cmc
loop
lahf
loope
leave
int3
push
and
shlb
cmp
sub
test
mov
cmp
pop
mov
mov
imul
or
or
loopne
xor
mov
fcoms
repnz
mov
dec
xchg
inc
cmp
std
cmpsl
stos
cmp
test
mov
jp
push
adcl
inc
or
arpl
inc
xorl
das
aaa
ds
out
mov
fbld
cld
xlat
or
iret
pop
leave
movb
insb
push
shrl
test
adc
push
int
call
sahf
je
jbe,pn
jle
insb
sbb
mov
lock
into
aam
add
inc
xchg
pop
mov
jne
inc
rol
enter
shl
das
lcall
ret
pop
pushf
imull
sahf
out
mov
xchg
hlt
sbb
andb
cmp
jae
mov
and
xchg
inc
idivl
lods
ljmp
loopne
out
sbb
arpl
or
cmp
push
inc
lret
mov
cmpsb
or
pusha
cmp
in
lods
sbb
cwtl
and
xor
and
mov
and
inc
adc
or
cmpsl
push
cmp
cli
or
mov
push
in
ljmp
daa
mov
adc
dec
sbb
popf
loope
icebp
push
cmp
cmc
inc
shll
repz
dec
pushf
addr16
xchg
mov
inc
cs
int
cmp
mov
mov
mov
jp
cmpsl
adc
inc
adc
nop
push
ja
jge
ss
fisttps
inc
cmpsl
orl
sub
fbstp
inc
test
fptan
sti
sub
xor
inc
add
xorl
and
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
scas
pop
fadd
fisttps
invd
add
cmovge
mov
fnstsw
mov
push
insb
fisttpl
cld
xchg
rorb
lret
in
sub
cmp
dec
test
scas
hlt
test
testb
insb
ss
sub
cs
loopne
xor
and
sub
pop
aaa
mul
dec
mov
pop
nop
outsb
ljmp
or
and
jecxz
adc
jbe
shrl
cli
test
xchg
cmp
iret
sbb
push
stos
subl
adc
pop
mov
scas
lods
mov
pop
xchg
push
xchg
ss
and
mov
jmp
pop
arpl
insb
mov
out
mov
js
mov
push
pop
sbb
xchg
inc
ret
shr
mov
lahf
push
add
int
inc
in
and
imul
and
adc
xlat
fwait
aas
xchg
fnstcw
mov
inc
adc
sbb
cmpsl
fstpt
loope
xchg
lret
inc
das
add
rcrl
fwait
sub
adcl
out
sbbl
sahf
adc
lret
and
adc
xchg
and
jbe
fdivr
xchg
ret
fucom
sbb
push
movsl
mov
cltd
test
dec
aam
jae
daa
add
ja
jnp
jecxz
jno
xlat
cmc
js
stc
push
loope
popf
stos
add
aaa
xchg
cmc
adc
mov
xchg
rcl
loop
bound
sbb
cwtl
xchg
inc
sub
mov
pop
dec
loopne
xor
aas
lea
fcompl
js
mov
pop
mov
in
push
inc
mov
in
test
sub
pop
repnz
pop
lret
int
nop
sbb
or
dec
pop
jbe
dec
cwtl
cmp
cmp
jl
add
mov
xor
ret
jae
xor
mov
inc
cltd
jae
cs
movsb
imul
pushf
lods
dec
jp
bound
and
scas
test
mov
pop
or
dec
sahf
sti
inc
mov
adc
jno
es
call
test
adc
insl
cmp
jb
test
adc
inc
lcall
push
xor
ficomps
push
test
adcb
shlb
sub
or
rorb
jns
daa
xor
cli
leave
rcrl
xchg
dec
je
lret
push
pop
insl
shlb
shll
or
jecxz
imul
shll
test
mov
ret
mov
cmp
testl
bound
test
es
mov
cmp
push
adcl
mov
movsb
push
mov
les
inc
lahf
add
and
xchg
outsb
int3
sahf
and
loope
inc
ds
mov
test
mov
mov
push
or
je
lret
cmp
scas
xchg
iret
xor
sub
sbb
cs
jb
in
orl
mov
pop
out
sbb
in
dec
fsts
aas
xor
in
lock
dec
xchg
mov
stos
mov
add
aad
mov
cmpsl
push
movsl
sti
popf
dec
movsl
jb
loop
push
stos
int3
popa
lods
mov
xchg
sbb
call
xor
daa
les
pop
test
and
inc
add
pop
daa
lcall
jne
cmp
les
mov
add
xchg
xchg
mov
sub
or
push
lret
mov
fbld
pushfw
mov
jecxz
ret
dec
arpl
lret
aas
inc
xchg
push
and
or
leave
xchg
repnz
inc
movsl
inc
cmp
mov
xchg
cmpb
fwait
repnz
out
pop
mov
xor
imul
push
mov
nop
pushf
sbb
into
push
adc
lods
sub
movsl
ret
jmp
into
das
push
sahf
or
push
sbb
lret
cmp
and
pop
push
hlt
sub
cmpsl
sub
jne
jns
lret
jge
mov
andl
jb
mov
dec
pop
mov
ds
mov
add
dec
jb
push
orb
data16
adc
xchg
add
shrl
mov
popf
cmp
imul
daa
inc
mov
push
cmp
push
jp
orb
outsb
jmp
rcll
mov
lods
jg
mov
shrl
add
mov
cmc
push
fucomi
test
sahf
addr16
sub
sbb
and
out
aas
adc
fadd
hlt
sbb
cltd
or
sahf
jbe
xor
and
push
movsb
pop
lods
xor
cmpsl
pop
js
sti
mov
jb
pop
jle
mov
jmp
mov
filds
leave
out
test
shll
sub
dec
pop
mov
addr16
cmp
sbb
fildl
movsl
push
dec
jecxz
jns
xchg
add
and
dec
jo
mov
ficoms
mov
aaa
inc
xchg
cltd
daa
add
mov
mov
add
in
cmp
xor
mov
fcompl
or
push
mov
scas
popa
lock
imul
jle
pop
sub
stos
pop
xorl
xor
xlat
stos
les
push
pop
fcoml
mov
dec
les
inc
sbb
pop
or
mov
mov
lods
movsb
push
add
mov
sub
mov
xor
pop
imul
stc
jecxz
dec
rclb
daa
push
in
outsb
jmp
adc
sbb
mov
cs
jl
mov
stos
lret
std
inc
les
mov
mov
dec
push
setns
andb
mov
out
gs
xchg
pop
dec
xor
cmp
sub
in
jp
and
xor
jmp
xor
loopnew
and
outsb
mov
xor
hlt
daa
adc
mov
dec
adc
add
adc
mov
push
push
sub
dec
cmc
sub
fisubs
fwait
jg
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
vmwrite
imul
cmp
xchg
push
cmp
xchg
fldl
int
mov
iret
cli
dec
in
cmp
leave
mov
cmp
cmc
out
loopne
mov
inc
cltd
scas
lcall
je
mov
imul
insl
jns
xchg
lods
xchg
pop
mov
xor
push
mov
sarb
movsl
dec
int3
dec
inc
mov
sar
popa
and
adc
insb
andnps
inc
cmc
pop
fstl
mov
jecxz
lods
and
and
dec
push
int3
mov
arpl
test
outsb
std
dec
adc
sub
mov
les
jno
jnp
nop
xchg
cmpsl
push
dec
cltd
inc
mov
cmpsb
jle
cmpsb
testb
cmp
cmp
imul
cld
xor
xor
rorl
sub
adc
sbb
int3
ljmp
je
add
cmp
lea
sti
adc
in
pop
or
jne
cmp
movsl
xor
mov
xchg
das
int3
mov
ret
inc
sub
nop
loopne
jl
xchg
push
sub
xchg
addr16
or
mov
and
adc
scas
or
pop
add
pop
cld
mov
call
xchg
adc
xor
test
mov
mov
adc
aam
mov
dec
repnz
lret
in
mov
xchg
and
in
fwait
sub
imul
dec
orl
pop
sub
addr16
pop
scas
jne
fnstsw
mov
scas
jge
imul
push
sbb
xchg
mov
jne
lcall
loop
ljmp
je
ret
stos
sub
jp
imul
xor
jecxz
ds
pop
je
movsb
push
imul
leave
lret
hlt
hlt
in
xor
pop
push
xorl
std
xorl
shrb
dec
xor
pop
test
sub
or
pop
dec
sub
pop
test
mov
jge
orb
lods
sub
call
push
test
lds
push
jge
enter
mov
cmc
fiaddl
mov
das
xchg
mov
sahf
mov
jne
iret
fcoms
cmpb
push
icebp
or
cwtl
insb
pop
scas
push
or
aas
sbb
or
jle
or
mov
leave
jae
daa
jns
test
jo,pn
push
mov
xchg
iret
clc
in
mov
mov
sarb
adc
cli
dec
movsl
sbb
loop
sahf
mov
fnstcw
xchg
lods
dec
mov
jp
scas
sbb
negl
cmp
sub
push
mov
push
test
lcall
cmpsb
or
popa
jge
adc
mov
pop
sub
sbb
pop
iret
adc
movsl
fidivrs
mov
cmpsl
pop
pushf
mov
movsb
outsb
mov
jmp
adc
fidivl
lds
call
push
inc
xor
xchg
xchg
mov
lret
xchg
add
mov
mov
movsb
test
xchg
mov
cmp
pop
jbe
inc
pop
addr16
mov
faddp
insl
cmpsb
shrl
xchg
repz
in
jns
lcall
cld
js
movsb
ljmp
cmpsl
sub
imul
add
sbb
pop
in
pop
cli
mov
mov
imul
fwait
lret
jns
daa
hlt
inc
popf
loopne
mov
out
xchg
fsub
int
je
sbb
insb
pop
jno
mov
shrb
clc
fistps
jmp
mov
push
insb
imul
lea
js
out
xor
sub
sbb
outsb
repnz
xchg
push
lods
repnz
fiaddl
push
mov
mov
push
out
stc
sti
or
mov
cmc
arpl
popf
daa
fs
adc
scas
std
out
neg
scas
jge
fwait
call
mov
jno
out
out
adc
clc
sub
movsb
js
dec
cmpsl
add
and
movsl
dec
cwtl
push
lds
data16
out
xchg
mov
leavew
outsl
divl
stos
inc
cli
inc
mov
pop
jle
insl
mov
andb
fildl
jmp
jae
aas
fs
xor
bound
mov
cli
sbb
loope
lds
mov
mov
notl
shlb
js
aas
and
je
fildll
cmp
aam
add
jle
scas
or
inc
inc
out
pop
pop
outsl
subb
cs
jg
sbb
das
push
scas
stc
iret
dec
repz
outsb
xor
add
add
push
push
out
mov
ds
jo
mov
inc
outsl
ljmp
sbb
pushf
int
mov
inc
jbe
mov
cmpsb
outsl
sbb
mov
mov
ret
sub
pusha
xchg
adc
xchg
xor
lds
cld
xor
sbb
das
mov
or
and
or
push
jae
loope
mov
cmc
cmpsl
cmpsb
in
cmpl
sub
jge
cmp
push
jecxz
jno
std
data16
mov
mov
repz
pusha
or
outsl
cmpsb
loope
aam
jge
pop
add
add
mov
push
jge,pn
ret
and
xlat
cmp
aas
popf
fwait
sub
mov
pusha
push
mov
cmc
cld
jl
add
sub
push
cmp
loopne
dec
jl
cmpb
stos
orb
scas
ds
divb
sub
sti
aas
sti
dec
and
pop
dec
pop
xchg
int
fbld
inc
sub
cmpsb
xor
loope
sub
push
movsb
pusha
pop
leave
icebp
out
pop
mov
iret
push
adc
loopne
xor
popf
out
pop
pop
push
pop
pop
jns
jno
add
mov
xor
or
outsb
pop
xchg
cld
scas
in
adc
mov
xor
fldt
dec
xchg
mov
push
jle
mov
xchg
jg
rorl
push
in
rol
loope
jmp
push
mov
cli
sbb
fnstenv
dec
mov
inc
invd
add
dec
mov
cmpl
movb
test
mov
sbb
lcall
push
mov
sub
dec
lcall
pusha
pop
inc
xor
pusha
das
jne
xlat
lret
jbe
sbb
rorb
sub
dec
aad
test
mov
shll
lods
mov
sahf
popf
and
leave
cli
inc
sbb
dec
mov
inc
sub
push
adc
imul
test
mov
es
jmp
sub
outsb
loopne
jmp
cmp
cmpsb
sub
stc
test
xchg
sbb
ljmp
ret
in
xchg
adc
cld
adc
jl
and
lock
push
inc
iret
les
xchg
inc
adc
sbb
pop
mov
in
ret
cmpsb
dec
arpl
lahf
jno
dec
dec
mov
nop
hlt
ret
push
adc
jge
lods
cmpsb
fucom
mov
xchg
in
imul
adc
push
in
pusha
push
jbe
dec
shrl
push
add
add
pop
in
hlt
adc
and
jns
insb
jae
xchg
stos
jmp
mov
mov
add
pop
jp
aad
iret
loop
mov
test
jle
insl
push
shrd
mov
add
push
mov
mov
in
je
dec
xor
cmp
pop
shrl
ss
imul
pop
mov
xor
imul
scas
lods
sbb
jb
push
add
fldl
rorb
xchg
xchg
lods
and
shll
sub
cltd
cmp
mov
je
cmp
jnp
inc
icebp
xlat
dec
data16
sub
test
int3
sbb
adc
shrl
lock
xchg
or
pop
cmp
outsl
inc
mov
test
pop
lds
das
fs
dec
aam
insl
insl
repnz
mov
xor
xor
cld
mov
fsubrs
push
push
stos
out
andl
enter
pushf
push
cmp
xor
sub
mov
mov
or
mov
xchg
mov
xlat
insb
cmp
xchg
pop
sti
jecxz
out
popa
daa
xor
roll
enter
sbb
cmp
pushaw
jno
pop
push
mov
stos
daa
aad
fs
fs
pop
xchg
daa
jge
popf
xor
or
dec
dec
push
cmp
xor
add
sbb
js
ds
mov
popf
inc
mov
xchg
jne
mov
in
mov
negb
iret
outsb
jmp
and
dec
add
jne
jno
sti
xchg
push
mov
in
rcl
outsb
aam
loopne
subl
icebp
pop
sbb
sub
scas
pop
leave
push
jns
inc
jmp
ja
mov
jo
aad
cmp
jne
js
clc
ret
fisttpl
icebp
jp
push
jge
add
mov
xchg
mov
fwait
and
test
mov
cwtl
lahf
es
inc
mov
dec
stos
lret
movsl
rol
outsb
cmp
mov
dec
and
pop
add
mov
xchg
inc
mov
mov
or
xchg
xchg
mov
mov
jg
xor
test
xor
enter
scas
dec
leave
iret
and
mov
mov
mov
push
push
mov
jns
test
push
sbbl
mov
rcrl
in
es
mov
add
les
aaa
arpl
adc
mov
in
addr16
fsts
sub
in
xor
fistl
outsb
xor
xchg
lea
add
stc
std
adc
inc
mov
sbb
mov
dec
sbb
scas
lahf
sahf
inc
xchg
push
shr
test
xor
add
je
fs
jecxz
stc
imul
adc
lcall
inc
in
fsts
inc
mov
ja
imul
mov
or
lock
push
xchg
lahf
or
stos
sbb
test
jbe
mov
sbb
test
in
cmp
sbb
pop
cmp
mov
push
movsb
sub
insl
ret
in
jg
xchg
xlat
fldl
add
cvtsi2sdl
dec
mov
scas
pop
rclb
pop
loop
cli
mov
das
mov
lahf
ja
xor
jmp
pop
mov
sbb
ficomps
pop
pop
dec
cs
jg
out
divl
xor
mov
mov
int
fbstp
iret
rol
std
xor
stos
popf
xor
ficomps
clc
inc
stos
mov
and
ljmp
jae
sub
mov
cmpsl
sbb
mov
stos
sbb
lcall
lea
fstl
mov
fdivrs
inc
xor
sub
jne
mov
adcl
xor
ss
dec
sbb
pop
xlat
int
mov
xor
cmpsl
cli
in
dec
int
inc
cmpsb
fistps
or
stos
and
out
cmc
rcl
movsb
sub
sbb
jmp
inc
in
mov
sbb
imul
inc
or
and
mov
ljmp
push
pushf
mov
inc
sub
test
test
pushf
movsb
insb
sub
mov
mov
icebp
lds
push
inc
sti
pop
mov
out
mov
xchg
xchg
lea
adc
jne
push
cld
or
andb
lods
mov
push
pop
mov
mov
xchg
push
aad
mov
xorb
pop
inc
push
mov
nop
lock
sub
fidivl
popa
push
lret
dec
jmp
aam
cmpb
inc
std
movsl
cs
jno
sbb
inc
mov
mov
dec
or
lret
test
pop
das
inc
dec
xlat
adc
sahf
dec
pop
push
push
xchg
sub
dec
xor
gs
test
out
in
shl
popa
pop
or
ret
inc
inc
add
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
out
out
mov
punpckhdq
jne
pop
popa
xchg
cli
adc
mov
push
xchg
add
dec
lock
sar
push
movsl
pop
xchg
cmpsl
xor
mov
insb
push
in
flds
fcomip
dec
test
sub
inc
xlat
push
icebp
scas
adc
mov
dec
repnz
sbb
push
sbbb
fwait
dec
or
dec
pop
dec
sti
dec
xchg
inc
dec
dec
fwait
int
add
jp
dec
and
lahf
fucomi
lods
cmpsb
lret
arpl
out
jmp
or
push
push
pop
mov
gs
test
out
jns
test
jmp
pop
or
out
out
push
push
shrl
jg
sbbb
jmp
test
fdivl
test
addr16
adc
lea
test
loopne
add
or
cwtl
lds
push
out
xor
in
daa
ljmp
inc
dec
adc
aas
gs
mov
cwtl
imul
stc
shl
inc
inc
aas
mov
and
aaa
ljmp
cs
xor
hlt
adc
cmp
dec
ja
dec
std
movsl
mov
filds
and
push
fisubs
shlb
pop
xor
roll
int
or
ret
pop
sbb
lret
xchg
mov
std
jg
scas
pop
iret
mov
sub
push
mov
adc
sar
in
mov
and
cmpsb
ja
shll
std
mov
gs
dec
xor
mov
or
stc
repnz
pop
cwtl
inc
imulb
cmp
test
lahf
mov
out
mov
jns
xor
dec
rcrb
loopne
adc
fidivl
adc
mov
jmp
popf
les
pop
mov
xor
mov
sbb
clc
aam
mov
adc
icebp
mov
addr16
test
or
in
fcompl
dec
inc
das
adc
rcrl
sahf
addr16
cmp
shl
rclb
sub
xchg
ret
cld
loop
mov
fsubrl
std
lret
roll
sahf
cmpsl
jg
xor
test
test
fs
cmp
xor
repz
movsl
mov
sub
or
mov
lcall
dec
xchg
dec
pop
xchg
pop
cld
xchg
fnstcw
and
not
pop
push
and
addr16
lock
popf
cmpsl
outsl
cli
cmpsb
out
add
fs
push
push
mov
icebp
lea
push
add
lret
sahf
xor
push
aam
enter
adc
dec
dec
int3
in
jbe
xchg
test
das
cmp
cmc
hlt
push
jnp
pop
fists
in
subl
insl
gs
addr16
pop
mov
movsb
xchg
data16
in
dec
mov
test
gs
in
movsb
icebp
mov
dec
in
inc
mov
add
dec
jle
sub
jg
pop
stos
outsb
dec
sbb
daa
pop
rorb
mov
dec
mov
hlt
pushf
or
incl
outsb
daa
in
ret
scas
sbb
ljmp
push
adc
jo
sbb
ss
lea
stos
mov
push
pop
clc
mov
aam
iret
sub
sahf
and
sbb
and
mov
outsl
int
push
sbb
xor
loope
lods
repz
in
je
stc
pusha
xor
fsubl
scas
and
mov
push
xchg
xchg
mov
es
cwtl
movsl
ss
inc
sbb
movsb
jns
jae
xor
mov
or
aas
xchg
imul
rorb
jge
test
dec
arpl
mov
call
sub
adc
xlat
out
fldenv
and
cmp
test
inc
movsl
rorb
gs
stos
sub
pop
lret
mov
or
ror
and
ret
lock
cmp
aad
and
lahf
sbb
sub
cmpsb
ljmp
sbb
fcomps
mov
pushf
insb
xlat
xor
mov
jbe
cmp
mov
sub
jo
lea
cmp
aas
xchg
mov
inc
sbb
or
push
daa
xchg
inc
enter
jno
push
jno
shr
and
jo
das
mov
jg
lret
xchg
xchg
enter
sbbl
xor
push
leave
enter
inc
dec
xchg
incb
jns
sahf
lcall
fidivl
mov
ss
lea
xchg
xor
cmp
inc
or
push
in
push
out
int3
addb
adc
xchg
and
nop
xchg
in
lret
in
ds
pop
jmp
pusha
jge
sbb
inc
pop
sahf
xor
cltd
pop
mov
and
call
sbb
push
ljmp
popf
add
inc
cmp
or
bound
push
shl
sub
jmp
inc
popf
call
push
sarl
aad
ficoms
xchg
popa
mov
or
cmpsb
cltd
stos
shrl
sbb
cli
shrl
cmp
cmp
ljmp
notb
jmp
jp
xchg
jae
push
cwtl
stc
leave
inc
sarb
dec
mov
adc
dec
dec
mov
fadd
mov
and
jno
push
call
cmp
aas
dec
lea
xor
jmp
jbe
das
xlat
push
jb
jns
lcall
ljmp
les
push
arpl
mov
leave
scas
jno
es
cmp
cmpsl
nop
movsb
cltd
dec
lock
pop
decl
push
push
fs
xlat
mov
mov
data16
mov
inc
in
enter
adc
jne
movsl
cmp
mov
dec
movsb
jmp
dec
popa
mov
movsl
repnz
xchg
in
and
mov
mov
mov
pop
ret
push
mov
stc
ljmp
loope
mov
repz
nop
aas
xchg
loopne
pop
orb
in
sbb
sub
dec
sub
mov
adc
mov
fs
in
jge
mov
jno
and
xchg
cmc
sbb
imul
lret
mov
mov
add
push
adcb
subb
popa
gs
aad
dec
ret
icebp
push
push
fsts
int
jl
sub
lret
push
in
stc
je
mov
jb
dec
loopne
sub
cmpsl
insb
push
leave
sbb
ret
push
add
mov
loop
dec
ds
fistl
or
loope
pop
movsb
cmp
pop
pop
insb
mov
loope
arpl
mull
fs
push
dec
adc
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
push
dec
clc
sbb
mov
inc
push
mov
dec
sub
adc
dec
xchg
pop
dec
in
mov
mov
jae
cltd
in
hlt
jne
mov
inc
xor
xchg
xchg
js
push
sbb
adcl
cmp
xchg
pop
push
shll
xor
mov
pop
sub
aam
icebp
adc
or
dec
aas
adc
movsl
test
inc
mov
roll
je
icebp
inc
ret
push
inc
insl
test
xchg
and
rcll
cmp
mov
adc
gs
and
jg
inc
es
lods
call
xor
xchg
into
pusha
daa
nop
in
fbld
mov
in
mov
xchg
ret
cmpb
mov
push
dec
cwtl
add
mov
cs
loope
jp
jmp
and
dec
dec
jmp
lds
mov
xchg
jo
mov
mov
rol
stos
ficomps
leave
lea
mov
xor
push
jae
mov
sbb
stos
xor
xchg
mov
fldt
add
pop
in
or
addl
xchg
lret
pop
pop
mov
pop
mov
dec
and
xchg
xor
mov
jae
icebp
and
les
cmpl
aam
mov
ret
fstl
int
fstps
jnp
xor
sub
mov
jbe
xchg
push
mov
cmpsb
hlt
push
inc
jmp
jmp
xor
cmp
cli
das
adc
repnz
shll
jae
lods
adc
inc
sbb
lcall
ljmp
fistpl
mov
out
sarb
divb
xlat
fcmovnb
scas
or
mov
push
data16
fucomp
push
sbb
push
out
add
repnz
pop
sbb
and
rol
add
rol
stc
or
flds
mov
jae
jmp
movsb
mov
out
movsb
adc
mov
push
stc
jge
fldenv
dec
rorb
aam
jns
jb
mov
push
add
adc
lret
shl
ror
icebp
pop
in
adc
faddl
pop
push
out
aam
cmpsb
mov
psrad
popa
divb
hlt
lods
dec
cmp
inc
push
jg
stos
mov
xor
test
xor
pop
sub
inc
int
xlat
ja
sbb
mulb
xor
ss
cmpsb
int
and
mov
adc
cmp
inc
out
in
test
pushl
std
jae
pushf
inc
xor
clc
outsb
insb
push
ficompl
dec
loop
ss
data16
das
lahf
dec
sub
push
nop
fisubrl
test
cmp
ret
sub
jae
je
dec
inc
and
add
cmp
xchg
insl
mov
lcall
test
enter
insl
ljmp
mov
inc
xlat
cmp
loopne
test
shr
fbld
inc
or
rcrl
fwait
push
xor
xlat
lock
xchg
jne
dec
add
dec
call
mov
or
xchg
push
lea
push
imul
aad
or
xor
add
inc
mov
inc
and
cld
les
pop
in
cli
stc
xchg
and
cs
jmp
js
jecxz
cmp
pop
xor
xchg
add
movsb
fiadds
push
mov
fisubl
mov
dec
jge
or
mov
pusha
push
loope
xchg
out
and
fstps
cmc
mov
inc
mov
dec
loop
fwait
push
imul
jnp
sbb
mov
sbbl
mov
loop
iret
mov
xor
in
and
xor
movsb
add
sub
int3
jnp
dec
mov
and
mov
data16
loop
icebp
mov
ljmp
in
fisttpl
ss
xorl
inc
scas
stos
in
mov
aad
je
cs
mov
dec
nop
repz
pop
adc
sub
shr
jbe
lods
stc
mov
jns
int
dec
mov
inc
xorl
movsl
adc
adc
mov
cmp
mov
scas
in
adc
pop
lahf
sub
bound
loope
push
xlat
into
shr
add
cmc
int3
pop
icebp
out
out
daa
push
lret
es
xchg
mov
inc
negl
inc
push
cmp
ror
xor
jno
jmp
mulb
sbb
pop
mov
mov
xor
stos
xor
inc
nop
xor
mov
lret
cwtl
fidivl
mov
fwait
pop
add
ja
lods
mov
in
fs
mov
xor
ja
mov
mov
add
dec
aad
arpl
lret
std
lds
sbb
add
loope
dec
nop
fdivrl
in
lret
push
xor
aad
cmc
lret
cmp
dec
and
mov
mov
enter
xor
cmc
insb
adc
or
add
fnstcw
mov
out
ret
dec
add
je
jge
sub
lret
jmp
or
jg
dec
xchg
test
adc
sub
in
mov
je
inc
jge,pn
inc
fimull
loopne
fwait
lret
cmc
js
jp
pop
add
xor
adc
lea
cli
sbb
dec
mov
adc
ret
mov
pusha
xor
xchg
sbb
xchg
mov
leave
cmp
inc
and
xor
dec
sub
xchg
pop
jg
aas
xor
pusha
lcall
icebp
xchg
stos
push
aam
sbb
fisubrs
sbbl
les
inc
add
lcall
sti
popf
inc
lahf
sub
aaa
add
mov
flds
dec
mov
cmp
fsts
push
sti
fnstsw
push
mov
cmc
popa
xor
adc
and
or
inc
icebp
push
insb
js
lods
sbb
cltd
mov
jbe
stos
pop
mov
loop
pop
dec
repnz
pop
sbb
xchg
xchg
test
lahf
movsl
bnd
xlat
cmp
int3
sti
mov
outsl
sub
and
xor
lcall
lock
rcl
mov
or
outsl
xlat
lahf
ja
or
cmp
jae
cmpsl
lret
add
cmp
pusha
cld
ljmp
rsqrtps
and
fsubl
adc
xorb
or
jmp
das
pop
adc
out
cmp
in
adc
adc
mov
mov
xlat
outsl
xor
xchg
testb
push
je
dec
inc
cltd
and
in
jmp
or
in
xlat
js
out
jp
es
inc
lret
clc
movl
movl
movl
mov
mov
mov
mov
add
jmp
pop
sbb
dec
mov
or
xchg
mov
pop
pop
mov
movd
aas
addb
out
add
dec
inc
sub
mov
aaa
jp
jns
pop
jo
mov
imul
in
fxsave
std
icebp
sahf
shlb
cmp
pushf
push
inc
mov
lds
adc
add
mov
and
jnp
mov
ret
sub
and
add
popf
sbb
pop
or
lahf
sarl
push
fsubrl
pop
jg
out
add
adcl
or
dec
movsb
gs
mov
test
push
sub
repz
sub
aam
jmp
rcll
stos
mov
subb
mov
xchg
cmp
clc
pop
lods
inc
popa
pop
add
sub
mov
insb
mov
mov
sub
add
xchg
fisubrs
lret
xchg
cld
test
cld
icebp
cmp
sarl
test
xor
movsw
xlat
imul
cmp
fimull
cmc
fistpl
inc
push
adc
cltd
push
or
int
je
movsl
arpl
movsb
adcb
dec
pop
lock
imul
jb
add
push
fxam
test
push
and
popf
sarb
fisttpl
in
sub
cmp
or
mov
mov
outsb
in
in
cld
adc
aad
jmp
lret
add
cs
lods
es
sbb
push
pop
cmp
insb
shrb
stos
or
mov
fldl
repz
outsl
lret
loope
test
addr16
ljmp
aas
mov
call
mov
jl
fcoml
jne
fisubl
push
mov
mov
imul
rolb
and
popa
push
sub
pop
cmp
sbb
scas
ds
pop
xchg
push
imul
inc
sbb
aaa
hlt
mov
push
enter
fnstenv
jb
out
scas
adc
mov
cmp
movsl
xlat
inc
mov
das
adc
stos
ljmp
mov
cmp
int
scas
into
or
sub
cmpl
xchg
sbb
insl
arpl
xchg
jnp
and
inc
jb
and
cmp
cmc
mov
pushf
clc
mov
xchg
push
sub
mov
psrlq
movsb
and
fmull
ljmp
xchg
fsubr
sbb
fsubrs
add
inc
cmp
sahf
xchg
xor
mov
jae
je
pop
add
pop
adc
repz
adcl
outsl
cld
ror
mov
mov
jmp
cmp
lea
inc
push
addr16
dec
addr16
mov
fists
es
sub
in
mov
inc
fdivl
push
insl
cmp
ret
xor
lret
xchg
repnz
adc
or
xor
gs
adc
pop
fidivrs
repz
cltd
adc
xor
pop
jecxz
pop
scas
jg
mov
xorl
and
inc
rol
mov
mov
stc
push
inc
jo
mov
insl
mov
cmc
inc
add
sarl
add
push
jg
jnp
push
fnstenv
mov
cmp
outsb
or
in
pop
sub
mov
shl
jb
mov
in
enter
mov
xor
push
dec
imul
rcrl
add
mov
pop
es
and
insb
mov
add
addr16
es
roll
mov
mov
pushl
xlat
lret
mov
push
mov
cld
aam
lret
pop
jg
xor
push
pop
mov
data16
in
and
ret
jbe
cmp
out
lds
outsb
fidivrl
dec
mov
test
jecxz
mov
add
adc
xchg
test
insl
jge
rclb
xor
imul
inc
mov
jle
xchg
xchg
mov
popa
add
pop
aas
imul
mov
ss
xchg
stos
test
mov
mov
dec
xor
test
dec
jp
and
sub
xlat
mov
aaa
dec
in
dec
ss
adc
int3
scas
sub
inc
test
pop
mov
adc
cmpsb
mov
pop
jecxz
repz
xchg
ds
sub
leave
or
dec
pop
fdivs
mov
pop
jle
aaa
nop
nop
cmp
lods
sbb
repz
daa
jne
dec
inc
loope
add
jnp
xchg
insb
cmpsb
in
jae
clc
adcb
popf
push
mov
adc
iret
pop
jp
jnp
xchg
pminub
push
sub
mov
scas
or
jb
push
jns
adc
js
sbb
xor
sbb
outsb
cmp
xchg
cmp
inc
sbb
lahf
push
mov
push
addr16
cmp
xchg
scas
out
js
pushf
push
idivb
mov
sbb
jnp
es
pop
leave
cld
cmp
or
je
loope
mov
leave
loope
stc
data16
xchg
mov
push
jecxz
daa
fldl
cmpsl
cmc
lret
jecxz
lahf
outsb
frstor
cs
ja
out
sbb
repz
add
mov
lods
and
add
sub
or
lock
stos
lret
inc
lret
int3
pushf
mov
xor
dec
fstl
out
push
mov
dec
mov
lds
jb
outsb
mov
jl
jns
add
push
mov
test
dec
pop
sub
inc
adc
icebp
inc
ja
jnp
out
sbb
aad
xchg
ret
inc
push
outsb
jmp
jae
mov
and
idivl
jp
insb
js
fprem1
xchg
ds
xchg
or
daa
inc
aaa
mov
sub
mov
cli
push
mov
xor
dec
pop
fcmovb
cli
ja
popa
adc
add
add
or
add
push
clc
push
loope
idiv
push
or
stos
rorb
or
mov
loop
iret
jmp
out
xor
mov
bound
jecxz
lods
pop
out
adc
jb
stos
mov
inc
sahf
dec
adc
adc
in
dec
xchg
pop
sbb
test
cli
xchg
or
push
xchg
or
inc
into
dec
pushf
push
or
in
loopne
xchg
subl
jmp
mov
mov
fwait
clc
std
stos
test
mov
mov
imul
pop
push
out
mov
cmp
xor
mov
sti
insb
push
insl
push
inc
jmp
sbb
cmp
hlt
mov
sub
popa
sub
cmp
lcall
es
das
aam
xor
mov
push
jg
shlb
sbb
repnz
jmp
into
add
or
int3
addr16
sbb
adc
and
pop
leave
mov
int
mov
cwtl
inc
cmp
negl
lret
push
orl
sbb
addr16
sub
fcompl
mov
push
mov
sub
add
ja
es
xchg
and
add
test
add
lea
push
bound
scas
mov
xor
push
or
leave
pop
dec
xchg
lahf
nop
xchg
or
hlt
jge
cwtl
push
rclb
orl
inc
rorb
mov
pop
xchg
or
int3
enter
flds
popa
pop
push
icebp
clc
dec
scas
mov
imul
loope
cmp
xchg
cwtl
or
ss
inc
add
fwait
inc
stc
aam
addr16
xchg
gs
dec
cmp
cmp
insl
adc
push
pushw
xor
lret
inc
movsl
pop
test
pop
je
push
push
mov
ljmp
das
inc
mov
loope
inc
push
add
mov
leave
mov
jge
hlt
pop
push
sbb
pop
mov
jl
fwait
lcall
mov
sub
mov
jp
push
and
sti
sbb
mov
call
dec
xchg
sahf
pop
or
dec
or
jge
test
lret
loope
sub
or
frstor
mov
xchg
int
mov
and
adc
push
jo
sbb
or
pop
aas
cmp
jno
and
xchg
aas
inc
mov
mov
orb
call
rcl
push
pop
push
aas
fstl
adc
push
mov
aad
jecxz
xchg
imul
iret
inc
push
repnz
test
addr16
aad
popl
lret
pop
popl
mov
dec
dec
dec
sti
out
lods
push
popa
xchg
mov
test
inc
fldenv
push
xor
imul
aas
int
sbb
add
push
js
pop
popf
jne
lahf
lcall
mov
add
ror
les
dec
add
leave
in
orb
adcb
es
js
push
in
jge
rorl
jb
hlt
daa
mov
push
lahf
or
stos
mov
int
sbb
inc
fnstsw
in
adc
ja
mov
and
mov
or
enter
xchg
or
cmc
cmp
lret
jno
mov
sti
das
and
push
iret
test
fisubs
xchg
and
sub
cli
mov
jb
outsb
rorl
lds
divb
hlt
hlt
in
dec
flds
ja
cwtl
jmp
inc
out
insb
dec
mov
jp
ja
jns
js
or
push
inc
test
push
das
xchg
das
lret
pop
cmp
mov
repz
xorl
push
iret
ret
mov
pop
mov
out
cmp
fcmovu
loope
adc
in
and
mov
dec
xorl
sbb
mov
dec
lods
sbb
cmp
in
jno
ret
jb
adc
pop
jo
cmc
jge
gs
cmpsb
lcall
insl
dec
int3
jmp
adc
mov
lahf
cld
out
jne
lahf
xchg
insb
cmpsb
xchg
lahf
mov
std
mov
insb
add
inc
push
je
xchg
loop
rcpps
loop
push
enter
call
mov
add
lods
xor
push
fidivl
lods
test
sub
lret
rcrb
xchg
pop
dec
add
inc
jg
rep
lods
and
sbb
push
push
jmp
int3
popa
adc
xor
inc
or
cmp
push
out
xor
mov
inc
push
inc
add
xchg
mov
cwtl
dec
loopne
pop
cmpsl
inc
test
push
imul
jp
cmp
xchg
subb
fdivrp
sbb
pop
ljmp
dec
stos
mov
jbe
daa
mov
std
mov
jle
jmp
inc
mov
jge
xchg
rcr
ja
jg
repnz
aas
mov
aas
ret
test
jnp
inc
inc
or
int
pop
mov
xor
jge
mov
push
or
and
cli
cmpsl
mov
fwait
les
jg
shlb
fwait
lds
inc
mov
je
mov
cltd
pushf
das
fwait
xor
xor
lcall
mov
xchg
push
mov
call
cs
ret
andb
lods
ds
xchg
mov
fistl
push
xchg
aad
jae
cmpsl
mov
cmp
pop
push
mov
ss
sti
loope
lahf
and
stos
push
pusha
loope
jne
mov
adc
dec
aam
imul
pop
mov
in
add
jle
cmpsl
push
mov
inc
sbb
int3
push
fldt
cli
inc
ss
push
pop
adc
adc
fstl
fnstenv
cmp
cmp
inc
ret
data16
adcl
sti
xchg
movsb
insl
or
outsl
je
push
pop
shll
xchg
pop
aas
clc
sub
mov
jae
push
mov
xchg
and
andb
sub
jae
sub
add
data16
mov
mov
add
lock
add
insl
mov
cmpsb
pusha
gs
add
xchg
dec
sti
rclb
sub
aaa
inc
jp
call
shrl
out
scas
dec
xbegin
fwait
and
insb
dec
into
sub
nop
or
adc
loopne
and
mov
in
mov
xor
ret
lahf
or
inc
imul
adc
rcrb
bound
sub
aaa
in
pop
cmp
fnstsw
cli
add
clc
sub
pop
lds
mov
xor
stc
insl
sti
xchg
jp
mov
call
daa
sub
jle
aam
inc
cmp
dec
icebp
xchg
mov
popa
jo
aam
insl
test
xchg
ja
bound
dec
sub
adc
mov
add
cmpb
mov
or
push
and
insb
imul
lcall
sbb
mov
lcall
add
xchg
pop
ficompl
cmp
xor
jg
cli
outsb
rcrb
bnd
jae
push
push
sub
fwait
pop
dec
or
jecxz
insl
pop
fists
je
lock
sbb
push
jmp
hlt
pop
mov
mov
xor
adc
out
lret
mov
mov
mov
dec
jo
cmp
fisubl
jno
popa
ja
pop
fldl2e
or
add
cwtl
gs
xlat
aad
imul
aas
ja
sub
int3
xorl
add
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
lcall
mov
bswap
jbe
loop
pop
lcall
adcb
jb
loop
cs
xor
scas
fcoml
jae
sub
fiaddl
sub
and
mov
and
lock
lock
add
pop
sbb
sbb
cld
inc
shll
mov
stos
push
stos
hlt
les
pusha
fdivrl
fwait
cmp
fsubl
sub
int3
or
jbe
fistpl
loope
mov
push
adc
les
cmp
or
xchg
inc
lcall
fs
test
fsubrs
mov
repnz
aaa
inc
add
inc
jae
inc
pop
test
ret
mov
addb
cmpsl
fnstsw
pop
test
mov
daa
test
mov
pop
ret
lds
aas
jle
mov
or
pop
cmpsb
mov
sub
and
js
test
push
mov
rol
pop
ficoms
push
sbb
push
jb
ss
insl
or
mov
inc
cld
lds
pop
shrl
pop
aas
pushf
and
mov
cmp
ret
adc
cmp
push
nop
mov
ret
lods
test
add
adc
and
sub
faddl
sbb
push
repz
std
fstpt
inc
pusha
in
dec
pop
out
es
ss
data16
aad
inc
inc
arpl
ja
push
mov
mov
mov
jo
adc
je
iret
lcall
mov
mov
xchg
or
enter
push
leave
mov
xchg
in
pop
mov
jne
das
popa
push
imul
test
out
sar
xor
jbe
jl
js
scas
xor
mov
test
add
pop
jge
jne
xor
cmc
shl
adc
sub
pop
ljmp
sbb
adc
les
loope
cmpsl
shlb
add
mov
movsl
mov
dec
jo
inc
leave
xchg
pop
mov
sub
mov
sub
sbb
nop
mov
fadd
popa
out
gs
lcall
es
std
subb
pop
mov
sahf
jmp
jbe
bound
push
insb
mov
or
xchg
pop
je
out
push
cmpsb
xchg
sbb
test
lret
or
in
cmp
xchg
into
xor
mov
pop
dec
arpl
jecxz
and
sahf
mov
in
lahf
fsub
clc
cmpsb
mov
adc
inc
cmpsb
pop
inc
push
jmp
cmpsb
sbb
push
cmp
lahf
mov
bound
pcmpeqw
pop
test
xchg
test
push
jnp
fsubl
dec
xlat
test
movsb
std
lret
iret
addr16
inc
adc
push
cmp
leave
sub
rorl
xchg
or
xchg
xchg
adc
movsl
loope
dec
dec
lock
jge
add
sbbl
pop
push
int3
sbb
mov
jno
stc
pop
inc
lock
nop
cmp
xor
pusha
jl
pop
rcr
sub
cmp
daa
iret
bound
loopne
aas
and
shlb
push
pop
lds
inc
jb
in
pop
jno
lcall
shll
and
out
je
outsb
lahf
lods
out
ja
rcr
bound
mov
dec
pop
pusha
pause
lea
neg
cmp
jecxz
or
add
adcl
xlat
outsb
imul
popf
stos
imul
and
mov
lods
nop
arpl
dec
lock
jle
imul
pop
xor
ds
out
xchg
insl
sarl
mov
popf
jbe
sbb
loope
jle
insb
imul
insl
inc
add
jae
mov
xchg
or
mov
ret
lahf
inc
cmp
shl
aas
fs
arpl
pop
mov
mov
repnz
stos
ret
dec
jae
out
dec
rcrl
jb
pop
dec
pop
andl
cmp
push
sub
sub
push
pop
iret
repnz
xchg
cli
or
in
fsubrl
shlb
push
adc
push
inc
rorb
ss
iret
and
inc
jns
in
add
sbb
jbe
push
xchg
add
xor
rcll
out
xchg
xchg
int3
out
jge
mov
cmp
cmp
sub
mov
imul
cmp
loop
mov
fistps
mov
out
sti
test
ret
ss
dec
sbb
and
leave
ja
imul
enter
js
pop
aad
xchg
adc
das
imul
push
iret
sbb
jb
imul
add
jg
inc
mov
hlt
adc
cmc
ret
cli
out
test
js
bound
xor
and
movb
fildl
xchg
add
mov
mov
dec
hlt
loop
std
xor
out
mov
sub
jp
popa
outsl
in
cwtl
mov
aas
xchg
or
inc
xor
fxtract
rcll
stos
pmaxub
in
sbb
push
in
jg
lea
mov
imulb
adc
add
mov
insl
ffreep
testl
cmp
cld
lcall
mov
sub
ss
xchg
imul
adc
jp
in
stos
sub
rolb
addr16
enter
adc
and
and
clc
or
cmp
mov
jge
aaa
divb
mov
jae
out
arpl
clc
pushf
push
test
xor
xchg
popl
push
mov
aaa
lahf
push
ja
fildl
pop
repz
jo
pop
imul
mov
cmp
pop
stc
adc
lea
mov
jnp
xchg
clc
fwait
adc
add
enter
repnz
je
into
mov
mov
push
mov
mov
in
or
jmp
aaa
lods
xchg
iret
adc
insb
mov
fwait
ss
fdivrs
cwtl
mov
mov
cmpsb
mov
mov
jecxz
daa
ret
adc
dec
pop
mov
pop
sbb
notb
nop
sahf
adc
test
inc
lea
scas
push
popa
and
gs
xor
fimuls
fnstsw
imul
push
inc
faddp
inc
jnp
cld
cmpsl
and
dec
xchg
cmp
out
push
mov
outsb
movsb
in
pop
jle
cs
sbb
mov
aam
jge
nop
inc
sbb
cltd
pushw
repnz
push
jo
cltd
pop
sbb
orb
stos
js
mov
push
mov
add
add
or
subl
test
inc
pop
imul
add
xchg
rol
popf
xchg
shlb
mov
in
or
jne
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
adc
ficoms
mov
bswap
or
or
or
sub
xchg
push
pushf
dec
adc
cmpsb
aaa
dec
dec
movsb
jbe
dec
ds
xor
enter
aas
inc
add
mov
adc
and
push
ret
std
fbstp
cltd
mov
adc
ja
xchg
push
xor
adc
lahf
loope
cmpsb
and
adc
lods
inc
imul
mov
mov
and
imul
clc
loopne
fbld
sub
repnz
fisubs
lcall
pop
push
jmp
push
jne
cltd
pop
xchg
icebp
sbb
bound
inc
ds
mov
push
orl
jno
push
mov
inc
lods
nop
cltd
mov
movsb
stc
cltd
aad
jl
sub
add
fsubrs
test
push
pop
mov
cltd
sub
scas
pop
imul
lretw
mov
mov
mov
addb
xchg
cmc
or
sarb
ss
fbstp
out
popa
inc
lock
jl
jbe
push
mov
jbe
and
xchg
movsb
testb
pop
pop
les
pop
pop
jae
pop
mov
add
rolb
imul
gs
shrb
and
cli
pushl
fldt
into
lcall
addl
jg
cltd
dec
pop
iret
adc
cmp
and
and
bound
jg
jg
inc
mov
xlat
add
xor
es
call
sbb
push
push
xor
and
add
mov
sarb
push
popa
inc
sub
sti
or
daa
fdivl
mov
neg
test
jge
xchg
test
aam
push
xor
add
push
ss
int3
pushw
cmc
cmpsl
mov
push
aaa
fisubl
and
add
ljmp
push
into
movsb
ret
fstps
rolb
out
xchg
pop
lret
shl
push
lock
aad
sub
xchg
push
aaa
cmp
je
xchg
jne
add
out
movsl
xchg
rorl
push
sub
pusha
pop
fidivl
and
mov
push
cmp
jg
mov
aas
jp
das
and
pop
jnp
dec
xchg
xor
cmp
inc
leave
push
sub
xor
out
subl
xchg
outsb
dec
test
lret
enter
dec
mov
jg
cmp
push
lcall
or
cwtl
rcrb
loope
into
mov
adc
lcall
notb
dec
xlat
lock
pop
scas
ljmp
cmp
into
loope
andw
inc
pop
push
or
rolb
cwtl
inc
xor
mov
pop
out
or
sbb
sub
ss
and
jo
dec
test
int3
inc
lret
push
scas
fistl
repnz
jp
dec
sbb
test
faddl
stos
or
or
add
xlat
jecxz
loope
je
and
push
stos
repz
sub
fsubrs
add
inc
cld
mov
adc
ja
ret
sti
fwait
xor
xor
jl
jmp
inc
call
sub
mov
pop
add
jne
sbb
adc
push
cmc
xor
sub
jmp
dec
cmp
rcrb
cmpsl
jno
dec
icebp
sub
xor
cltd
roll
push
fisttpl
xlat
sarl
inc
inc
and
xor
int3
filds
aas
lret
and
sbb
or
arpl
mov
xor
jb
negl
cmpsl
push
or
fidivrs
mov
lods
lret
inc
aaa
push
cld
repz
rcll
mov
xorl
cs
aaa
adc
cmp
in
jns
ficompl
pshufw
and
dec
sbb
loopne
data16
cwtl
mov
adc
and
ss
cmpsl
and
push
int3
xor
sbb
fdivl
push
pop
pop
xchg
into
xlat
or
gs
notb
decl
scas
xchg
icebp
adc
cmp
shll
add
mov
dec
mov
and
jb
rcll
xor
fists
ja
cmp
leave
scas
clc
fwait
xlat
shrl
mov
call
lock
add
pop
jbe
ja
sbb
das
cmp
movsb
sub
shll
insb
in
cmp
sbb
pop
les
lods
ret
or
mov
and
movl
cmp
shl
hlt
out
lock
push
iret
sbb
mov
sub
mov
jecxz
js
cmc
dec
sub
add
sbb
xchg
pushf
push
push
mov
add
jae
in
sub
push
inc
cmc
add
dec
and
jle
cmpsb
pop
cmp
loopne
lock
cs
loop
dec
inc
cmp
gs
mov
mov
inc
push
leave
call
out
testl
fiaddl
lcall
shll
sub
in
push
xchg
cwtl
enter
dec
cltd
out
push
sbb
fidivs
test
sahf
mov
ds
addr16
pop
inc
sub
out
and
mov
bound
loopne
xor
aad
loopne
sub
pop
cli
push
ficompl
mov
dec
repz
cmp
in
jmp
cmp
or
add
std
into
sbb
cmpl
in
sbb
mov
add
aaa
cltd
jae
xchg
push
call
pop
neg
stos
xor
sub
cmp
lea
xchg
push
das
addr16
adc
test
mov
cmp
les
ja
je
ret
scas
repnz
lret
icebp
and
mov
pop
je
jns
sbb
incl
jp
xchg
push
xor
mov
mov
subl
and
int3
jge
cmp
dec
add
jmp
in
test
lea
mov
and
pusha
add
mov
test
mov
xor
jbe
add
scas
add
xor
and
adc
cltd
out
add
fmuls
scas
movsl
inc
xchg
sbb
sub
jae
add
mov
xchg
mov
in
call
pop
add
xor
mov
incb
mov
sarb
fldl
or
sbb
into
push
mov
dec
ss
scas
sbb
sahf
test
xchg
pop
and
or
loop
lahf
xchg
hlt
fisttpll
std
xchg
or
fndisi(8087
xchg
adc
scas
mov
cmpsb
pop
push
push
dec
shl
inc
les
je
pushf
push
gs
movsl
mov
in
inc
inc
xor
popa
or
push
ja
jp
mov
divl
sub
adc
aad
or
les
cmc
out
xlat
jp
dec
xor
inc
inc
add
nop
pop
add
cmc
xchg
cmp
push
mov
adc
pusha
adc
inc
int3
adc
and
mov
or
in
ja
dec
and
sub
adc
adc
and
int
popa
pop
cmpsb
fidivs
insb
imulb
sub
out
out
push
inc
add
cmc
pop
or
pop
adc
dec
mov
inc
mov
ret
out
jae
sub
ss
xchg
inc
mov
in
es
add
in
icebp
inc
lds
jns
arpl
arpl
daa
jecxz
loopne
rorb
scas
popf
popf
cmpsb
sbb
push
adc
push
pop
push
cltd
and
dec
std
test
jae
test
cli
dec
xor
ja
mov
aam
push
in
push
add
xchg
xor
mov
or
int3
int3
and
jbe
das
cmc
ljmp
inc
sub
xlat
pop
mov
enter
pop
jecxz
cmp
sbb
lds
fbld
mov
rcr
jae
fsts
jnp
adc
lock
divl
adc
test
call
test
dec
dec
cmpb
out
mov
aam
sub
je
xor
shll
push
fcoml
cmpsl
xchg
sti
in
cltd
stc
out
or
loope
mov
jno
pop
rol
in
test
dec
stc
out
mov
xor
pop
stos
pop
aaa
mov
fmuls
pusha
insl
jnp
xchg
test
mov
and
and
iret
sub
mov
mov
and
popa
xchg
sub
mov
bound
push
inc
imul
mov
cmp
sub
stos
inc
adc
shlb
cli
cmp
popa
cmp
sub
adc
cmp
add
test
lret
cmp
add
mov
adc
enter
pop
push
lds
into
xor
ficompl
ret
loope
int3
dec
push
push
in
dec
xchg
sbb
repz
loop
mov
cmpsb
mov
pop
mov
outsl
inc
dec
repnz
gs
push
push
shlb
out
ljmp
lods
cmp
push
roll
adc
xchg
arpl
pushf
sbb
jl
into
insl
movsb
dec
data16
pop
inc
dec
out
add
jg
cmp
mov
pop
add
lcall
in
outsb
jge
popf
push
outsb
imul
movsl
movsb
lds
pop
cmp
jae
cmp
mov
xor
mov
push
pop
xor
popa
inc
cmp
repnz
jnp
loop
cmp
cs
repnz
jmp
push
test
pop
mov
in
push
sub
pop
mov
test
mov
aam
lock
je
imul
repz
push
fcomps
outsl
add
mul
lcall
jnp
cmpsb
adc
inc
sbb
ret
adc
mov
jge
insb
fstl
and
fnsetpm(287
dec
cltd
test
or
and
jp
pop
es
insb
es
fisubrl
daa
aaa
fmuls
aas
dec
fdivrp
repz
cmp
and
loop
loope
mov
and
mov
mov
mov
mov
mov
add
popf
stos
adc
jae
iret
xor
add
cmp
es
add
jo
sub
mov
cmpsb
xchg
stc
inc
xor
enter
or
aam
mov
inc
ja
out
mov
ret
xchg
jnp
xchg
cld
mov
adc
rcr
ficompl
xor
rcrl
out
mov
test
mov
in
notb
jns
adc
and
test
jmp
pop
imul
fildll
jge
or
mov
es
call
cmp
add
sbbb
ret
inc
xor
scas
dec
aaa
cld
int
mov
and
shlb
ds
mov
popa
lahf
inc
popa
out
sub
or
gs
fs
sub
sub
dec
das
push
bswap
lret
adc
movsb
pop
mov
sbb
enter
int
lods
pop
xchg
mov
push
add
test
int3
out
mov
les
add
movsl
xor
push
and
mov
fisttpll
mov
aaa
fdivl
addl
mov
push
adc
fsubs
and
sbb
push
test
mov
movsl
xchg
aas
imulb
adc
pop
insb
hlt
lcall
cmpsb
sahf
mov
mov
lahf
cmpsl
test
imul
outsb
aad
mov
pop
lret
in
push
sub
inc
sub
adc
fwait
fbstp
add
adc
in
scas
push
xorb
lds
in
jnp
out
mov
fcoms
fidivl
or
seta
das
dec
jecxz
lretw
lret
outsb
mov
dec
ljmp
inc
or
and
fmul
cs
xor
adc
mov
imul
lods
cmpsl
div
ljmp
bound
jge
sbb
mov
cmp
mov
mov
shlb
mov
fwait
pushf
pop
mov
cld
lods
js
outsb
daa
lret
ss
xchg
xor
xchg
inc
fwait
xchg
stos
cmp
ret
or
push
and
jge
mov
and
ja
dec
xchg
or
dec
mov
repnz
enter
jmp
jno
jbe
lods
dec
out
push
sti
pop
xchg
jle
test
je
inc
clc
dec
jmp
jo
xchg
jmp
std
test
xor
inc
cmc
outsl
mov
jnp
pushf
fwait
xor
pushf
push
orl
pop
pop
sti
in
repnz
jb
push
mov
int3
jnp
cmpsl
push
or
cmp
jge
or
mov
sub
xor
int3
mov
fildll
pop
cs
jle
ficoml
adc
jmp
subl
sbb
aad
les
and
add
cmp
fiadds
cs
lds
sub
push
add
dec
mov
je
out
es
lret
gs
pop
ljmp
insl
cmp
arpl
sti
out
xchg
lods
test
shl
call
mov
loope
jns
shrl
test
sbb
outsl
fdivr
and
mov
iret
stos
push
addb
test
push
insb
shlb
imul
mov
mov
ljmp
pop
fdivl
ret
jnp
out
movsl
stc
hlt
aaa
fisttpl
xchg
aad
xchg
and
sbb
jle
into
int
dec
fs
push
mov
dec
and
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
ss
pop
mov
arpl
pushf
fmull
arpl
daa
movsl
adc
cmp
add
add
loopne
shl
mov
std
mov
add
cli
mov
add
pop
xlat
pushf
mov
imul
cmc
sbb
sbb
call
je
cmp
jae
xor
insb
cmp
lock
pop
and
or
adc
xchg
popa
mov
addl
imul
pop
xor
dec
jbe
and
mov
push
gs
aam
scas
shll
pop
pop
cli
hlt
cmp
sbbl
pop
cmp
sbb
xchg
cmpsb
xchg
inc
and
push
fs
jae
je
cltd
lret
loopne
jb
fnstenv
cwtl
pop
inc
gs
mov
lret
out
cs
enter
fs
lahf
add
movsl
xchg
dec
scas
mov
sub
ljmp
aam
rcr
jl
push
mov
aam
je
lea
fidivl
adc
push
ss
push
push
adc
xor
mov
sub
int3
inc
out
iret
push
pop
xlat
mov
lcall
lods
ret
daa
ljmp
imul
jo
fmulp
jecxz
or
cwtl
push
roll
xchg
iret
push
add
fsubl
and
das
xor
mov
loop
sbb
cmpl
cmpsl
insb
fnstenv
popf
ret
mov
pop
addb
iret
jae
fstpl
cmp
ja
mov
lds
movl
lods
mov
xor
lods
or
lret
fdivrs
scas
sti
fildll
in
dec
sbb
js
jb
pop
test
inc
and
xchg
inc
pop
lods
lcall
adc
xchg
out
shl
inc
and
push
cmp
mov
pop
jecxz
inc
ffreep
nop
jno
push
push
movsl
call
mov
lds
or
lea
dec
ret
in
jmp
clc
orl
and
int3
cld
pop
sti
xchg
push
repnz
loopne
fwait
dec
idiv
mov
mov
mov
xor
lods
adc
pop
and
jmp
es
gs
imul
mov
add
push
cwtl
addr16
dec
stos
adc
dec
stc
lods
add
cmp
push
jae
dec
aad
out
cld
mov
js
sar
jg
cmp
rcrl
mov
xchg
in
fisttps
sbb
xorl
sti
sbb
push
add
jno
lcall
leave
or
fidivrs
inc
pushf
xchg
adc
mov
movsb
loopne
inc
mov
jge
pop
xor
ret
mov
inc
xchg
cmp
mov
cmp
movsl
jl
pop
cwtl
sbb
mov
movsb
xor
xor
jns
das
cmpsl
je
fwait
test
shrb
mov
mov
fdiv
jl
movsl
adc
and
std
xchg
or
or
push
jge
ljmp
dec
cmp
lret
jmp
mov
mov
and
cmpsl
push
fbld
inc
lret
dec
movl
shlb
and
ljmp
and
cmpsb
cmp
repz
push
in
or
das
mov
into
aas
jg
aad
jle
xchg
int3
xor
adc
data16
dec
inc
jno
jae
popf
add
adc
aas
mov
shll
inc
pop
out
and
cli
mov
xor
or
insl
pushf
insl
push
imul
or
sbb
addl
cwtl
movsb
icebp
shr
mov
mov
dec
xor
xchg
adc
fildl
jle
imul
pop
fidivl
mov
and
rcrb
xor
scas
dec
mov
dec
lods
cli
lcall
xchg
dec
add
fdivs
outsl
sbb
pop
icebp
or
dec
jecxz
cld
xor
jmp
in
scas
sub
ret
dec
ja
dec
add
out
ret
sub
imul
xchg
jae
shr
addr16
add
stos
fsubl
or
mov
jns
repnz
pop
mov
out
xchg
mov
cltd
outsb
lcall
xchg
mov
std
repnz
in
ret
lock
loop
sti
std
push
setle
cmp
lea
bound
sub
mov
mov
jae
test
ljmp
aas
mov
out
xchg
in
jl
decb
or
dec
push
jl
js
jg
lods
cmp
mov
or
cmpsl
scas
in
mov
sbb
mov
add
nop
jmp
inc
daa
sahf
in
sbb
or
push
js
jnp
hlt
lock
cmp
shrb
inc
mov
fcmovu
sub
xchg
jl
aaa
pop
mov
xchg
es
dec
pop
push
fisttps
sub
sub
imul
jb
push
pop
clc
pop
mov
addl
or
pop
dec
pop
xchg
push
jne
rorl
pop
mov
cmp
xlat
or
jle
cmp
and
dec
xor
cmp
mov
aas
mov
mov
sbb
fcmovnu
in
int
mov
fs
fistpl
fdivrl
jg
xor
je
mov
divl
fs
in
jo
arpl
rcrb
mov
test
mov
lods
push
aaa
shlb
mov
sti
jae
or
mov
pop
and
je
add
mov
fsub
rol
cmp
lret
jl
jmp
test
sub
adc
mov
xchg
int3
push
shlb
push
std
shrb
push
or
popa
mov
ds
pop
sbb
les
aam
outsb
push
pop
mov
es
int
push
and
or
dec
sub
leave
mov
iret
int3
enter
movsb
lret
mov
push
mov
cmp
pop
pop
mov
sbb
mov
mov
sbb
mov
shlb
sbb
loop
lret
popa
lods
jns
lahf
push
test
mov
mov
andb
addr16
pop
cli
sub
addl
sub
mov
jb
xchg
xor
add
mov
add
insb
dec
cmp
pop
fwait
sub
pop
aad
pop
xor
adc
or
mov
leave
xchg
ljmp
dec
push
movsb
xor
rclb
mov
loop
xchg
and
movsb
repnz
ss
ficoml
or
add
aad
xchg
pop
addr16
and
lahf
cmp
mov
pop
add
adc
cmp
xor
lahf
mov
arpl
xchg
lret
mov
std
lock
pop
fldl
add
jmp
jne
add
subl
xchg
dec
push
push
mov
and
aas
lods
mov
adc
inc
cmp
jae
jmp
data16
bound
cmp
jnp
rorl
lods
or
aaa
xchg
mov
mov
push
mov
sub
lahf
push
sbb
pop
xor
ror
inc
icebp
mov
imul
xlat
rcrl
fiadds
stos
mov
mov
es
and
test
rclb
inc
cs
mov
sub
pop
xor
outsb
inc
je
mov
ffree
nop
sti
inc
push
mov
add
jnp
jne
out
mov
inc
cmp
addr16
mov
lock
mov
adc
mov
scas
push
xor
scas
lea
push
mov
sbb
lock
fdivrp
and
fstps
adc
push
sahf
xor
pop
push
inc
shlb
xlat
adc
sbb
jb
int3
push
je
fwait
fwait
add
lret
or
je
jae
stos
mov
loope
cmp
mov
lret
into
inc
dec
inc
dec
dec
add
insb
in
orb
stc
inc
scas
daa
cmp
cmpsl
icebp
leave
push
sarb
xor
je
sub
mov
adc
mov
sub
inc
xchg
loop
dec
jae
inc
cld
testb
push
add
rolb
iret
dec
out
cmp
push
cmp
jb
dec
mov
sub
aas
out
mov
mov
or
push
addr16
mov
lcall
mov
cmp
arpl
jl
cmp
shrb
jo
movsb
outsl
push
mov
lods
rorl
in
addr16
push
in
ss
shl
xor
pop
dec
pop
shl
mov
out
sub
rolb
cld
push
jl
or
fiaddl
xchg
inc
enter
push
fidivl
mov
in
adc
js
xor
dec
xchg
add
in
pop
cmpsl
shll
cmp
adc
inc
out
cmpsl
int
mov
in
test
data16
adc
mov
xor
mov
scas
in
mov
ds
dec
add
enter
in
movsl
rcr
dec
jno
lds
lock
sti
jle
cmc
popf
sbbb
dec
push
lods
inc
ret
push
data16
in
rcl
lret
add
and
jg
mov
xchg
jnp
pop
dec
popf
out
push
movl
push
loope
and
push
mov
dec
or
pop
xor
push
pop
cwtl
faddl
push
movsl
mov
add
js
sub
cmc
adc
pop
lds
clc
sub
out
and
cmp
dec
inc
add
cmp
push
mov
push
xor
pop
mov
ljmp
fiadds
mov
mov
mov
pop
mov
insl
dec
xchg
mov
aam
lahf
cmp
cmp
outsl
inc
int
gs
in
inc
ficoms
pop
ljmp
mov
stos
cmc
mov
mov
push
fmul
cli
mov
gs
push
xchg
outsl
lods
shlb
mov
inc
aam
cmpsb
lea
out
ror
shlb
xor
loope
mov
clc
ss
push
inc
inc
and
dec
testl
shlb
pop
push
lods
popa
lods
std
mov
xchg
jle
add
lcall
pop
jae
mov
dec
jmp
ret
add
stc
sub
inc
fistpll
xchg
push
mov
or
and
insl
jecxz
dec
pushf
jno
xchg
call
pop
sbb
or
cmp
aaa
mov
sbb
jmp
jmp
outsb
dec
push
sub
lock
scas
cmpsl
stos
les
add
jo
mov
rcrl
jle
lds
lahf
data16
jae
cwtl
das
or
lods
insl
jb,pn
or
xor
sub
jne
jecxz
jecxz
adc
iret
push
rclb
mov
stos
mov
stos
clc
dec
mov
cmp
push
out
pop
mov
add
and
push
mov
mov
in
mov
lret
adc
clc
cli
je,pn
or
out
nop
aad
sarl
dec
popa
push
cmpsl
popa
inc
mov
mov
scas
add
and
out
adc
xchg
das
mov
in
xchg
cs
xorb
or
push
xchg
inc
xor
pop
fildl
aad
pusha
jb
and
xchg
xor
adc
ss
pushf
int
push
dec
jo
in
test
or
pop
dec
fst
cmp
out
ljmp
jno
dec
pop
mov
cmp
nop
jb
ds
xchg
mov
je
dec
push
and
lahf
mov
mov
lods
xchg
rol
in
mov
sub
push
jb
in
inc
and
add
xor
xchg
testl
jno
jg
inc
mov
hlt
pop
pop
movsl
inc
sub
add
cwtl
push
cmp
mov
add
lret
inc
mov
in
into
out
iret
int3
and
pop
push
mov
int3
cli
jo
std
sti
les
jae
hlt
lock
jae
out
pop
mov
dec
jge
cmp
cmpsl
inc
repnz
xor
jmp
sbbl
clc
insb
cli
loopne
ss
pop
ljmp
xchg
outsl
fldcw
ds
mov
add
cwtl
sub
sbbl
std
aad
pop
pushf
cmp
push
test
add
cltd
xchg
mov
addr16
jo
jp
mov
or
fs
xchg
popa
sub
imul
and
xchg
hlt
dec
add
add
lret
pop
mov
sahf
and
sbb
sahf
imul
mov
inc
add
sti
aaa
rcl
fistpll
adc
jmp
stc
or
jle
pop
xor
and
std
out
mov
fdivrs
sub
cmpsl
repnz
mov
sub
aas
fistl
push
sub
cmp
add
addl
sub
outsb
cmc
cmp
call
cmpsb
cmp
add
outsb
testl
cwtl
loopne
faddp
ss
out
mull
push
inc
ffreep
push
fnstsw
es
in
cmc
cmp
xorb
mov
movsb
jmp
inc
inc
push
aad
je
or
pop
push
mov
cwtl
or
sti
out
push
out
divl
push
rcrl
fstpl
outsl
mov
out
movsb
mov
push
sbb
cmp
pop
rcrl
xor
jle
jg
dec
call
ret
mov
or
into
mov
insb
dec
dec
push
sub
in
enter
or
mov
add
mov
add
jmp
nop
shrb
sub
addr16
sub
xor
add
and
js
bnd
push
outsb
hlt
cmc
or
mov
xor
cli
inc
or
lock
or
jecxz
pop
push
cwtl
or
pop
imul
fisubs
xchg
mov
xchg
cmp
rcrl
daa
add
cmp
mov
outsb
loopne
mov
push
sbb
and
iret
jb
and
daa
adc
pop
sub
xchg
push
cmc
movl
add
and
push
jb
test
test
in
sbb
addb
in
adc
or
or
pop
add
cmp
push
das
mov
lahf
xor
test
pop
mov
jp
cmp
mov
insb
or
and
lea
in
test
scas
gs
lea
push
sub
mov
xchg
mov
push
dec
mov
sub
jmp
imul
mov
stos
stos
icebp
repz
jae
push
fsubl
movsl
lea
jl
scas
fwait
push
pop
mov
icebp
mov
mov
push
cltd
popf
out
std
pusha
jo
jno
mov
dec
xor
nop
inc
je
incb
cmp
in
ja
cmp
pop
or
es
rorl
mov
loope
pop
add
push
addr16
fstl
int
adc
cwtl
movsl
enter
push
inc
cmp
imul
xor
inc
mov
lods
cs
push
dec
cmp
inc
jnp
cs
fimuls
inc
cmp
xchg
mov
push
iret
cs
rcll
popf
mov
cs
loopne
int3
loop
imul
pop
mov
adc
fimull
notl
insb
aaa
and
lret
pop
mov
mov
jl
repz
mov
cmp
stc
xchg
shll
mov
repnz
lret
mov
repz
loop
out
insl
dec
sbb
rep
mov
mov
jb
dec
push
lea
aas
es
mov
loopne
stos
mov
in
xchg
jg
and
fists
mov
cmp
cli
scas
fimull
xorl
xchg
sahf
xchg
cmp
xlat
lds
push
xchg
loop
std
add
cltd
push
sbb
adc
int3
add
or
jecxz
pop
pop
jmp
lret
mov
ds
xchg
sbb
pusha
repz
subb
ja
jp
jo
xchg
add
mov
xor
sub
pop
cmp
push
imulb
sbb
pop
cld
xchg
jmp
and
jne
fwait
leave
arpl
loop
jo
xor
loope
lret
cli
bnd
ret
jno
push
lods
jb
rclb
jl
dec
fbld
imul
mov
andb
imul
inc
je
sbb
pop
jns
imul
push
insb
mov
xorl
shlb
add
outsb
inc
add
sbb
xchg
clc
cwtl
fisttps
xor
gs
jno
ss
and
sbb
xchg
dec
xchg
dec
push
sti
sbb
sub
bound
pop
push
push
aas
sahf
cmc
into
icebp
pop
pop
dec
sub
cli
cli
pop
in
lahf
adc
xor
adc
xchg
out
cmc
movsb
adc
sub
mov
pushl
outsl
or
dec
movsl
mov
xlat
mov
mov
jmp
xor
hlt
ficompl
clc
imul
pop
push
js
out
lret
loopne
aad
pop
pop
out
dec
shr
movsl
not
inc
xor
fisttpll
xlat
movsb
mov
das
scas
movsl
outsb
es
call
movsb
xchg
mov
dec
fwait
lds
imul
insb
out
outsb
cmp
fs
pop
enter
arpl
xchg
leave
sub
imul
mov
test
insl
sbb
dec
sub
mov
repz
push
mov
and
popf
loop
xor
xchg
aam
cvtps2pd
pusha
out
pop
loop
addr16
inc
out
adc
sub
pop
push
xchg
jl
movsb
xchg
stc
movsb
mov
mov
inc
dec
jne
xor
clc
incl
push
xchg
jecxz
adc
rcrb
dec
mov
mov
mov
mov
gs
jne
cmp
outsl
xlat
and
ds
mov
cwtl
or
pop
icebp
or
adc
dec
push
mov
or
arpl
insb
jne
dec
push
scas
xor
jo
fsts
aas
repz
outsw
add
push
mov
loop
sub
pop
and
test
pop
mov
scas
and
sbb
cmp
icebp
imul
hlt
cmp
push
dec
xchg
push
aam
xor
push
aad
outsl
int3
inc
adc
cmpl
pusha
cmp
fiadds
mov
shrl
pop
jecxz
out
lahf
dec
fstps
xor
cmp
leave
es
xchg
fisttpl
in
xchg
bound
mov
bound
aam
jo
jge
mov
xchg
inc
lcall
iret
cmpsb
in
sbb
sub
adc
mov
insb
inc
cmp
mov
inc
xor
scas
sbb
and
adc
jb
cmp
ljmp
xchg
loopne
icebp
push
movsb
mov
sub
push
cld
mov
push
repz
push
sub
push
aas
dec
xor
insl
jbe
mov
push
lret
sbb
jb
lock
les
subb
cmp
push
mov
jle
rcl
jge
ror
mov
dec
adc
cli
leave
popa
add
scas
push
jmp
xchg
inc
or
mov
insb
mov
and
outsb
push
dec
aam
dec
mov
lea
insl
cmp
mov
pop
data16
add
test
dec
aaa
adc
inc
mull
fisubl
jmp
add
inc
in
or
or
mov
xlat
pop
push
sub
pop
xor
popl
pusha
cmp
out
adc
xchg
lahf
add
mov
or
jb
mov
and
jns
jb
lret
sbb
mov
idiv
int3
mov
xchg
lock
xchg
test
xor
mov
adc
adc
jb
sbb
bound
pop
jecxz
xor
mov
xchg
dec
xchg
push
push
pop
mov
inc
inc
hlt
call
mov
sbb
inc
and
fimuls
jnp
inc
push
sub
aam
push
fdivl
ret
push
add
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
jbe
and
fs
adc
in
stos
icebp
ss
mov
and
mov
fstl
or
cld
push
mov
and
mov
mov
xor
test
sti
inc
sahf
ficompl
jg
movsb
mov
pop
aas
push
call
les
leave
out
ficoms
jg
xchg
sti
std
das
mov
leave
cmpsb
dec
loopne
insb
dec
mov
rcr
or
mov
int3
sbb
add
mov
mov
dec
shlb
adc
adc
je
xchg
sbb
int
imul
or
pop
data16
lods
cmpsb
mov
mov
pop
pop
cmp
in
push
mov
dec
fcomps
xor
testl
test
stos
mov
out
stos
movsl
enter
imul
loopne
sbbl
scas
sub
inc
scas
ds
popf
fbld
pop
dec
jae
xchg
mov
aad
mov
lods
icebp
cwtl
dec
aad
xchg
or
fsubrs
iret
mov
dec
stc
fwait
int3
lods
call
test
push
jecxz
cmp
xor
out
mov
outsl
addb
shl
add
adc
movsl
xchg
pop
add
notb
sbb
mov
je
push
arpl
ss
mov
cli
daa
jl
mov
mov
cwtl
add
xor
xorl
call
push
add
repz
fmul
xchg
out
push
cmpsl
outsb
cmc
and
xchg
cs
stc
cmp
sub
push
movsl
and
pushf
sbb
push
ret
or
test
add
adc
adc
pop
mov
popa
out
add
lcall
push
dec
cmovl
orb
loopne
mov
jbe
jg
movb
stc
movsl
cmp
outsb
pop
adc
scas
adc
mov
arpl
inc
call
push
add
lret
adc
gs
iret
sub
outsb
leave
xchg
fcomp
adc
push
popf
xchg
jp
fimuls
cmp
jbe,pt
lea
test
enter
mov
xchg
xchg
or
push
cmp
jbe
das
push
push
xorb
inc
imul
outsl
rcl
clc
inc
add
xchg
flds
lret
outsb
int
leave
xchg
adc
push
pop
mov
mov
jge
sub
xchg
dec
pop
mov
test
in
jne
cmp
pop
sub
neg
ljmp
inc
adc
stc
lods
mov
pop
and
jmp
lcall
dec
out
out
mov
fdivrl
shrl
std
ret
sub
mov
sbb
mov
pop
pop
mov
xor
cs
sub
insl
fsubrs
pop
repz
test
dec
sahf
insb
adc
into
add
cmc
pop
sbb
test
fildll
or
mov
ss
or
jecxz
cld
ficoml
push
jbe
stos
pop
cltd
jbe
inc
pusha
js
and
pusha
xchg
in
insb
ds
adc
addr16
cmpsb
pop
shlb
mov
mov
jecxz
sbb
test
jb
cs
addl
lds
pop
lods
dec
sub
int3
dec
test
mov
mul
mov
into
int3
xlat
cli
xchg
filds
sahf
inc
in
mov
dec
mov
out
mov
jp
loope
pop
les
pop
cld
flds
sub
test
cwtl
aad
inc
and
mov
in
sub
jle
fidivl
cli
and
or
jge
pop
adc
je
pop
add
mov
and
lret
jae
push
dec
outsb
xchg
cltd
add
dec
dec
dec
dec
dec
cld
out
jg
aad
jae
mov
inc
xor
sbb
and
cmpsl
xchg
clc
adc
and
xchg
mov
pusha
sbb
loopne
jl
insl
pop
and
mov
add
out
jbe
pop
dec
fildl
dec
pop
cltd
mov
jmp
mov
fisttps
mov
sbb
lds
out
xchg
dec
movsl
cli
dec
xchg
push
pusha
mov
inc
jge
cmp
mov
ret
or
loop
cltd
fwait
cs
pop
sbb
mov
jmp
mov
xor
pop
push
in
lods
jl
rclb
in
jmp
mov
xchg
hlt
pusha
sub
filds
loope
push
cli
pop
sbb
daa
call
xchg
mov
clc
jne
scas
in
std
jbe
imul
adc
adc
std
data16
lea
sti
pushf
xlat
mov
iret
jmp
lods
and
sub
cmp
mov
dec
xchg
sahf
inc
fs
jg
loopne
jp
dec
jmp
insb
cld
mov
imul
loope
lcall
inc
dec
insb
add
aaa
cwtl
inc
jecxz
xor
mov
ret
sbb
fnstenv
bound
pop
shrb
adc
or
lock
xlat
or
jnp
inc
popa
mov
and
mov
out
call
jbe
int3
dec
dec
mov
mov
mov
gs
insl
mov
popa
dec
sbb
sub
mov
pop
and
xchg
push
jge
pop
and
mull
fiadds
mov
in
dec
mov
xchg
aas
xchg
arpl
fwait
andb
pop
mov
push
frstor
push
or
fildl
add
aam
xlat
lahf
mov
mov
lea
stc
jne
adc
dec
mov
xchg
add
dec
pop
mov
mov
mov
sbb
jb
push
out
gs
and
xchg
aaa
or
cmp
popf
arpl
fstl
rolb
xchg
jge
add
test
xlat
inc
adc
mov
cli
push
xor
pop
xchg
out
mov
fstpt
jge
mov
stc
mov
xchg
dec
adc
stc
sub
sahf
stos
lret
dec
ljmp
xor
shll
or
stos
or
adc
jnp
xor
out
sub
sub
out
jo
mov
fdivs
xchg
test
xor
push
pop
jo
inc
mov
xchg
sub
or
imul
pusha
jno
push
dec
sbb
out
adc
in
fs
sub
in
push
or
pop
inc
pop
call
arpl
dec
xchg
in
or
loope
sub
call
mov
jbe
std
jl
jne
scas
mov
cmp
mov
sbb
cmp
xor
jmp
add
mov
test
mov
lret
clc
and
cmc
outsl
std
or
mov
cmp
imul
mov
out
jg
adc
add
push
push
jmp
sbb
push
adc
xchg
int3
xchg
nop
adc
and
cmpsl
test
sub
icebp
sub
test
cli
and
jge
call
stos
out
js
fstl
mov
xor
xchg
adc
rcrb
subb
push
insl
iret
nop
mov
ficoms
jno
scas
fsubrs
ja
je
jmp
jbe
call
imul
idivl
fwait
sbb
stc
mov
shll
push
fidivs
sub
cmp
decl
xor
dec
xor
fcompl
scas
jb
mov
cld
mov
cmp
jno
inc
std
xor
and
std
lret
shll
xor
mov
adc
data16
popf
pop
stc
sbb
push
cmpl
insl
push
xor
lret
imul
hlt
rcrb
mov
out
mov
mov
rclb
cld
fbstp
in
in
adc
nop
push
jle
xchg
cltd
call
sub
cmpsl
sub
xchg
adc
xor
inc
pop
nop
out
xchg
push
pop
jae
js
out
sbb
out
rclb
lret
ds
jp
sub
mov
inc
mov
and
dec
adc
sub
add
and
cld
xor
adc
hlt
sahf
mov
cmp
push
push
ds
add
mov
adc
pushf
aad
repnz
xchg
in
cmpsl
into
dec
insl
push
mov
sub
inc
cmp
cld
lcall
cmp
sti
adcl
das
rcrl
mov
cmp
pop
pop
or
xchg
sbb
adc
inc
iret
call
repz
jg
cmc
cli
adc
dec
jns
dec
loop
out
outsl
sbb
out
nop
lcall
scas
or
psraw
pop
or
gs
adc
in
fstpt
push
pop
xchg
je
sub
xchg
loopne
push
add
lock
scas
pop
xchg
fadds
xor
push
jl
outsl
aam
xor
jno
or
xchg
add
cmp
pushf
jo
fwait
xlat
cli
popa
pusha
sbb
ss
xor
cmpl
push
clc
fadd
outsl
dec
dec
xor
jbe
shlb
cmp
sti
pusha
in
xchg
mov
popa
dec
stos
pop
add
xchg
testl
push
jno
sub
insl
movsl
jbe
imul
imul
in
cltd
arpl
test
jmp
imul
inc
mov
dec
fmull
cmpsb
stos
nop
shr
jle
data16
mov
lods
aas
jg
ficomps
pusha
ss
jl
cmpsl
pop
idivb
insb
insb
imul
and
mov
mov
repz
jnp
stc
mov
test
popa
incb
or
jecxz
ss
push
fimuls
cmc
mov
jecxz
mov
adc
jge
ficompl
subb
mov
repnz
ficompl
dec
imul
movsb
jge
arpl
aaa
jmp
sti
cmpsl
mov
push
mov
push
sub
loop
pop
ret
into
add
scas
push
test
jmp
shll
scas
cld
imul
mov
lea
and
rol
bound
in
pop
sub
fs
or
dec
fs
jae
mov
jmp
sbb
cmp
jns
sbb
cmc
sbb
popf
and
test
xchg
iret
fs
inc
pop
sbb
shr
scas
fs
mov
test
push
adc
int3
cli
mov
or
jbe
cmp
xor
jb
mov
mov
and
sbb
iret
jno
mov
insl
mov
dec
sub
mov
int
mov
dec
cmp
stc
dec
adc
and
cld
fsubr
sub
sarl
mov
pop
or
xor
push
mov
lock
dec
in
ljmp
dec
or
or
mull
mov
mov
sbb
int
pop
push
idivl
pop
dec
sbb
cltd
cmp
push
call
cld
pop
nop
cmpsb
std
movsl
push
mov
inc
inc
shrl
sbb
sbb
xchg
sbbl
outsb
add
es
mov
mov
popa
and
mov
outsl
adc
das
cltd
jo
xor
mov
imul
push
sbb
jl
adc
sub
test
jle
addr16
jnp
mov
jl
xchg
imul
adcb
shlb
mov
dec
cwtl
jbe
mov
out
xchg
xor
in
dec
jo
mov
stos
sub
push
pand
push
test
inc
add
jnp
pop
in
sbb
mov
iret
push
xchg
cli
insb
xchg
ret
loopne
mov
pop
stos
mov
aad
js
mov
mov
addr16
push
and
mov
cmc
jne,pn
cltd
scas
sbb
pop
mov
or
push
ljmp
mov
fisubrs
popa
ret
jns
stc
add
in
fnsave
jae
aas
push
mov
or
mov
mov
ret
lods
popf
movsb
stos
arpl
jae
movsl
loopne
test
mov
jb
pop
mov
cmp
stc
enter
js
int
ljmp
lock
cmp
inc
jbe
sub
cmc
aad
adc
ljmp
roll
push
divb
sahf
xor
into
jmp
movsl
sbb
cmp
and
xchg
push
aad
into
jl
mov
add
inc
test
dec
test
movsl
or
inc
fnstcw
cwtl
andl
cs
into
jo
xor
mov
cmp
jns
test
inc
mov
testl
into
andl
push
and
out
addr16
push
rorl
stc
mov
cli
cmp
std
cwtl
xchg
cmp
scas
enter
ss
mov
in
mov
or
rorb
jae
movsl
fst
out
sbb
pushf
ja
frstor
inc
pop
xchg
pusha
test
test
aaa
xor
out
fisttpll
lea
dec
jecxz
lock
ret
push
or
fdivrl
psrld
loop
mov
nop
mov
sub
adc
inc
jbe
wrmsr
sbb
movsb
lock
mov
out
and
jbe
inc
or
dec
lea
out
jo
std
pop
adc
or
aad
and
xchg
adc
lds
ljmp
mov
loop
jmp
rcr
inc
adc
dec
inc
sub
cli
sub
lcall
ficoms
cmp
mov
add
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
mov
xchg
jno
sub
pop
sbb
pop
orl
or
lods
fcmovnu
outsl
hlt
adc
fimuls
or
lods
mov
pop
xchg
dec
dec
jg
in
mov
jns
jbe
or
aas
nop
addr16
das
push
adc
movsl
push
xchg
in
xor
std
loop
jmp
inc
mov
enter
push
js
xor
int
test
dec
push
add
fiaddl
inc
js
stos
pop
xchg
cmp
call
rolb
inc
das
les
cmpsl
mov
xlat
ljmp
scas
das
std
push
sub
xor
sbb
and
push
movsb
outsl
sbb
push
pop
pop
push
test
ret
dec
int3
std
mov
cmp
lea
adcl
inc
xchg
decb
xor
xchg
clc
fnstenv
mov
dec
sub
mov
js
shll
ss
test
cli
jae,pt
push
pop
sbb
pop
out
xchg
loopne
sub
iret
add
shlb
adc
cwtl
out
je
adcl
mov
ss
pop
fdiv
arpl
aas
mov
aad
lock
mov
iret
mov
cmp
pop
out
ljmp
notb
daa
fcomip
push
je
mov
adc
mov
ss
jno
jnp
mov
orb
leave
int3
imul
mov
mov
lea
adc
mov
and
scas
loop
pop
or
imulb
fcomps
leave
testb
mov
push
push
dec
arpl
jecxz
sbbb
sahf
inc
aas
lahf
push
shlb
and
lock
inc
les
cmp
insl
movsb
int3
mov
sarl
fnstenv
dec
mov
add
cmp
test
lahf
aas
aam
jbe
cli
arpl
sbb
sub
add
dec
and
cwtl
nop
add
inc
test
imul
ljmp
mov
sub
stos
and
mov
gs
add
out
cs
pop
xor
cwtl
std
iret
adc
jae
mov
adc
sbb
je
or
sub
fildl
fwait
mov
inc
fisubrs
mov
xor
cld
shlb
mov
bound
cmp
fcom
mov
cmp
xchg
es
mov
dec
xor
orl
in
pop
outsl
mov
sub
pop
xchg
inc
icebp
lods
ficoms
lret
addr16
and
popf
jbe
mov
ds
fs
test
jnp
xchg
xchg
repnz
hlt
lcall
xchg
idivl
mov
cli
repz
mov
stos
jbe
aad
call
out
or
xor
lret
or
xorl
test
jb
add
mov
cmp
mov
cltd
insb
jno
xor
jne
cmp
sub
outsb
mov
cmp
imul
into
add
mov
mov
cmpsl
or
push
mov
mov
sbb
jnp
popf
cmpsl
movsb
aaa
push
push
jmp
cmpsb
fmull
sub
movsb
inc
mov
cmpsl
iret
or
xchg
ss
movsl
insb
mov
dec
jb
aaa
mov
cmp
cmp
cmp
pop
stos
xchg
push
popf
jl
add
xchg
int
rcll
lods
stc
insb
jmp
sarl
sub
inc
rcl
mov
out
mov
jmp
popa
push
inc
int3
in
inc
fprem1
lods
rcl
or
lret
dec
out
enter
aad
notb
xor
xchg
inc
fstpl
int
pop
fildl
xchg
mov
xor
mov
fs
push
das
into
sbb
mov
mov
sub
sub
neg
stc
fiaddl
or
mov
sarl
mov
cmp
test
xor
mov
ror
push
mull
insl
mov
lret
sbb
and
sbb
inc
dec
inc
mov
cmp
add
divb
lods
dec
aas
mov
fs
dec
push
mov
scas
adc
sbb
cli
pop
dec
inc
jp
aaa
xorl
mov
push
dec
shl
xor
cmpb
xchg
fisttps
jbe
cmp
ss
ja
lods
div
fwait
jnp
addl
jmp
inc
xor
push
jg
decb
js
dec
sbb
pop
scas
stc
ret
in
movsb
inc
sub
jae
pusha
mov
jge
cmp
inc
ja
lret
push
pop
aad
sbb
add
orb
fsubs
sub
mov
call
subb
in
or
mov
sub
inc
stos
shlb
and
dec
shlb
cs
adc
mov
jbe
ss
adc
mov
sbb
orb
pushf
dec
out
out
jle
loope
adc
in
mulb
inc
stc
sbbl
dec
jge
sbb
mov
xor
cmp
notb
and
mov
push
push
out
lret
push
or
mov
nop
mov
push
in
xor
cmp
and
jnp
and
cmc
jmp
adc
sbb
mov
mov
cmpsl
cmc
and
sahf
push
xor
test
lds
jnp
xchg
inc
or
jnp
sub
xchg
dec
test
push
sub
mov
mov
mov
cmp
arpl
inc
into
jns
in
ss
out
lods
arpl
jnp
sbb
bound
sbb
pop
pop
push
sti
inc
mov
cmp
sub
mov
sti
jge
cmp
out
rorb
aas
movsl
ljmp
and
icebp
xchg
dec
lret
test
add
insl
frstor
fdivs
bound
jp
cmpsb
jl
addr16
cmp
mov
pop
or
mov
bound
je
cmp
in
cmp
sbb
mov
outsb
pop
mov
out
sahf
push
aad
out
daa
push
or
cltd
inc
jle
inc
and
imul
out
and
fs
adcl
jecxz
dec
pop
lret
and
cmpsb
pop
or
outsl
test
shll
sub
fidivrl
stos
xchg
dec
imul
hlt
add
cmp
or
push
imul
and
scas
add
mov
scas
adc
dec
jg
loope
stc
sbb
adc
xchg
ds
push
and
mov
xchg
jmp
int
leave
adc
out
jns
add
xchg
or
or
mov
inc
out
roll
rcrl
insb
dec
idiv
mov
rcll
mov
push
roll
popf
push
test
sub
ret
mov
cmp
mov
inc
xor
and
cli
mov
push
ljmp
add
pop
jnp
cld
push
push
mov
mov
cmpl
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
ljmp
addl
and
adc
sarb
xchg
xchg
inc
int3
arpl
add
rcrl
mov
sbb
jns
int
jmp
xor
jo
push
xchg
and
pop
inc
jo
push
sahf
sti
sbb
mov
loopne
jnp
loop
mov
arpl
jg
push
in
iret
sti
mov
jae
lock
xchg
fcmovu
adc
shrb
xor
movsl
jg
je
jmp
sub
mov
jne
xchg
arpl
jnp
mov
push
mov
xor
out
push
ss
sahf
cwtl
popa
mov
dec
pop
xchg
clc
sbb
insl
jp
dec
imul
mov
lahf
in
jbe
shll
and
mov
cmc
sbb
xchg
add
into
stos
push
lea
jns
test
mov
mov
ljmp
orb
mov
mov
sbb
jecxz
dec
or
push
inc
fisubrl
es
pop
in
adc
push
test
ss
imul
mov
xchg
je
fcomi
inc
lret
xchg
cmp
addb
pop
or
dec
rcr
cmp
sub
shrb
or
out
xchg
lds
cmpsl
pop
push
xchg
loopne
pop
movsl
adc
mov
ja
aam
xchg
add
cmp
pop
jge
rcrb
lcall
call
filds
out
sarb
and
jbe
ja
push
jecxz
std
test
dec
fbld
lods
fwait
sub
adcl
je
jo
push
fwait
mov
jmp
aas
pushf
loop
add
lahf
lods
sbb
mov
sub
roll
fldt
and
fildl
in
jbe
mov
divb
data16
rorb
mov
in
mov
shrb
jno
lds
jo
insl
mov
push
and
test
cmp
orb
xor
loop
bound
push
nop
mov
xchg
mov
enter
sbb
add
and
mov
jae
cld
xor
jmp
xchg
leave
cmp
je
cli
lret
pop
mov
mull
daa
pushf
bswap
mov
addl
mov
add
xor
shl
xor
ss
xor
pop
in
loopne
shl
inc
imul
push
mov
loope
je
bound
push
inc
push
test
sbb
cmp
sub
loopne
inc
cmp
scas
xor
test
pop
cli
add
sbb
ss
add
push
nop
or
jne
xor
cmp
dec
aam
scas
push
adc
inc
loope
push
sub
dec
sub
mov
mov
loopne
dec
pop
xchg
mov
or
or
std
pusha
jae
jmp
movb
or
aaa
pop
xchg
sbb
cmp
cmc
ror
js
stc
fs
mov
test
push
pop
mov
or
and
hlt
pop
sub
test
jg
push
push
push
sahf
out
insl
mov
shl
add
hlt
lods
pop
clc
into
jns
mov
mov
mov
cmp
push
in
add
outsb
cmp
jecxz
mov
cmp
or
movsb
rorb
xchg
into
push
cltd
cld
mov
jge
pop
inc
jns
dec
outsb
xor
subb
mov
xorb
lcall
out
mov
jecxz
push
inc
mov
out
pop
xor
cmp
sbb
cmpsb
pop
sti
stos
mov
clc
sbb
in
push
daa
dec
or
sbb
sub
fs
shrl
push
sub
mov
xor
pop
xor
popa
adc
mov
insl
and
pop
gs
inc
fcomi
faddl
jmp
insb
sub
es
mov
pop
and
loopne
adc
xor
mov
xchg
adc
xlat
mov
jb
or
or
jbe
maskmovq
dec
das
jb
aad
adc
gs
cmc
lods
addr16
xor
lea
dec
sbb
loope
rcr
loopne
lods
mov
pushf
stos
mov
bound
test
xor
jl
enter
mov
jno
add
scas
xchg
loope
pop
xchg
in
ds
xchg
aam
je
sub
in
pusha
inc
push
lods
pop
mov
icebp
cltd
lcall
repz
mov
popa
push
aaa
das
idivl
inc
pop
sti
add
jmp
or
pushf
mov
test
add
add
push
push
int3
or
mov
rorl
mov
mov
adc
push
mov
xchg
mov
mov
pop
testl
jmp
cli
cmp
ret
push
mov
gs
sbb
xchg
xchg
mov
mov
lea
add
mov
push
dec
sbbb
mov
jp
xchg
ret
or
and
and
mov
jl
mov
xchg
cmp
aaa
or
mov
icebp
cmpsb
out
sbb
sti
bound
lock
mov
inc
int
pop
in
or
dec
mov
sbb
call
fmul
jle
std
mov
jae
aaa
cmpsb
adc
cmp
mov
cltd
xchg
push
cmp
dec
push
sahf
adc
test
lds
jno
loope
inc
adc
inc
add
dec
ljmp
cltd
je
sbb
or
inc
mov
sbb
mov
cld
in
in
or
pop
addr16
pop
and
ljmp
in
adc
push
pop
test
imul
add
xorb
mov
div
out
xlat
mov
jge
jnp
jns
insl
adc
cmp
pushf
popf
in
mov
into
xchg
push
int
jo
hlt
xor
mov
cwtl
cmp
jnp
xor
cs
sbb
shr
gs
lret
fidivs
jnp
mov
scas
dec
iret
movsb
push
cmp
adc
mov
xchg
lds
jb
data16
pusha
stc
jge
notl
pop
jle
push
mov
mov
dec
in
mov
mov
gs
mov
add
jg
push
jne
dec
xlat
xor
xchg
ds
xor
hlt
pop
dec
mov
loop
fiadds
mov
xchg
fwait
push
cmp
cli
mov
push
sub
test
adc
pop
in
ds
mov
push
fidivl
push
fucomp
mov
add
int3
xor
das
dec
push
test
add
jo
nop
cs
mov
push
aaa
lods
xor
fidivl
and
loop
mov
imul
adc
add
ljmp
out
ds
lock
pop
test
cmp
mov
das
sbb
enter
mov
fcmovnu
aaa
sub
arpl
in
je
in
inc
jecxz
mov
andl
imul
loopne
mov
pop
cwtl
cmp
sbb
adc
push
dec
or
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
and
mov
jno
mov
xor
popf
add
inc
xor
xlat
shr
sub
sub
lea
rcrl
or
shrl
rorb
outsl
lcall
add
xchg
aaa
shrb
inc
pop
cwtl
cwtl
inc
jno
leave
rorl
adc
push
adc
lods
push
mov
call
imul
leave
test
sbb
pop
mov
outsl
psubsb
rcl
movsl
sub
adc
arpl
addl
cmpsb
ja
shl
insl
xchg
cmpsb
cs
icebp
jb
mov
mov
int3
fs
push
pop
mulb
movsb
in
cmp
subl
out
inc
popf
pushf
bound
arpl
xchg
jecxz
push
lcall
repz
enter
cli
sbb
pop
xor
popf
jg
leave
xor
das
outsl
hlt
aam
mov
aam
cwtl
jecxz
or
iret
scas
add
into
dec
cld
pop
sahf
mov
dec
add
xchg
and
cmp
insl
in
add
int3
repz
cmp
lret
shrb
cli
fnsave
hlt
inc
repnz
add
jae
jge
mov
negl
rcll
sub
pop
sub
jl
in
and
pop
push
jge
fcmovu
jae
push
pop
add
es
xlat
inc
nop
hlt
dec
mov
jnp
jp
push
imul
jg
push
dec
iret
mov
call
xor
pop
xlat
test
fiadds
sub
and
mov
insl
jne
sub
pop
mov
fs
mov
cmp
fmul
cmp
les
and
adc
and
xor
fisubs
bound
cmp
std
stc
xchg
daa
ficoms
adc
xchg
or
mov
jg
inc
xor
pusha
lock
cli
sub
push
js
adc
inc
and
cs
stos
icebp
mov
xchg
pushf
jo,pt
jns
scas
and
mov
push
cmpsl
leave
inc
xchg
jb
cmp
lret
xchg
adc
out
dec
out
push
xor
mov
repz
mov
out
cmp
dec
inc
stc
out
inc
pop
or
jge
ret
and
dec
psubusw
mov
sbb
or
in
inc
adc
mov
bswap
sub
mov
mov
sbb
pop
pop
sub
iret
mov
pop
add
fldenv
mov
inc
jg
fucomip
cli
scas
xchg
xchg
sti
jg
bound
add
xchg
repz
cmpsb
outsb
sbb
pop
int
loope
loop
or
fdivr
sti
lods
stos
xchg
mov
xchg
jge
jl
xchg
push
mov
lea
pop
dec
mov
and
aas
bound
and
into
jecxz
fcompl
lock
pop
mov
repnz
jg
popa
in
add
mov
dec
andl
pop
pop
shrl
scas
and
pop
mov
and
out
adc
shll
out
cmp
push
mov
xchg
cli
cmp
jmp
cmp
pop
xchg
pushf
or
jmp
subb
shll
or
js
jge
pop
ret
adc
ljmp
sbb
arpl
sahf
or
push
lods
lea
dec
cmp
or
xor
lcall
cmp
das
add
fcoml
push
les
and
sbb
xor
ja
scas
aam
push
mov
out
ret
xchg
or
jg
cmpl
ret
test
mov
cmpsl
mov
push
imul
pop
call
scas
mov
push
ds
push
loopne
xchg
lods
gs
mov
pop
imulb
ja
and
mov
mov
xchg
outsb
adc
rclb
and
pusha
sbb
shr
mov
iret
cmpl
or
out
loopne
gs
cmpsb
mov
pop
add
dec
pop
aam
rolw
push
inc
das
sbb
mov
adc
dec
stos
fisttps
shrl
in
adcl
js
mov
outsb
push
jnp
incb
mov
ficoml
into
bound
loop
sub
push
fucomi
sub
pop
adc
adc
into
sbb
divl
push
int3
lcall
sbb
sbb
mov
pop
lds
fs
mov
rcl
add
arpl
and
fst
xor
loop
jb
incl
hlt
mov
mov
sbb
scas
movsl
cmp
data16
fldcw
fldcw
sub
loop
iret
ljmp
fmulp
std
fwait
lahf
sub
xor
lods
scas
add
nop
jecxz
fistpll
insl
sub
jecxz
test
test
mov
and
inc
push
and
cmp
sub
pop
xchg
repnz
cmp
scas
fcomip
mov
out
divl
lods
push
inc
cmp
inc
test
fs
xor
fstps
mov
dec
jbe
lea
int
jp
paddsw
cs
gs
loop
push
inc
lahf
das
repnz
mov
mov
push
lahf
dec
pop
push
addr16
lock
sbb
sub
xchg
mov
mov
test
orl
pushf
inc
cmp
jb
fnsave
cltd
test
mov
imul
jne
test
push
fisubrs
mov
sub
mov
jo
sar
adc
fistpl
ds
dec
and
inc
cmp
lcall
xchg
add
adc
adc
mov
mov
repnz
jns
push
pushf
dec
in
loop
fwait
xor
imul
in
negl
or
fs
leave
sub
or
xor
imul
sarb
inc
sbb
sbbb
xchg
hlt
xor
int3
adc
adc
add
or
xchg
push
dec
jl
shrb
out
shlb
cltd
inc
hlt
pop
or
xlat
pop
mov
or
stos
sbb
mov
mov
mov
clc
in
push
int3
push
pop
orb
imul
movsl
lods
movsl
jno
add
enter
out
jmp
fists
xor
or
aas
in
pop
xor
inc
push
sub
out
fiadds
inc
jae
cmp
insb
aas
or
lret
in
popa
mov
pop
jne
loop
jb
push
and
jbe
fnsave
sub
les
mov
test
adc
orb
inc
push
mov
icebp
and
xchg
adc
icebp
cmp
pop
pop
sti
dec
aad
fs
xchg
dec
cmp
inc
dec
adc
cmp
je
push
cmpsl
jle
in
mov
cmpsl
xchg
test
dec
arpl
sub
fsubr
ljmp
xor
incl
sbb
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
and
addl
xor
daa
out
sub
or
popa
adc
fidivrs
jle
push
mov
sub
xchg
add
inc
mov
rcrl
sti
fwait
mov
ds
insl
test
inc
sbb
push
and
outsl
push
fdivs
add
ret
andb
push
mov
push
ljmp
test
inc
pop
imul
or
in
lret
jne
jp
outsl
xor
pop
inc
push
mov
in
and
loope
scas
cmp
xchg
das
jae
cmpsb
inc
ds
popa
fstps
add
repz
xor
mov
aaa
out
fsubs
inc
les
les
lahf
scas
push
addr16
xchg
sbb
sti
cs
or
outsb
jle
lcall
push
jb
nop
sub
xchg
cmc
mov
lock
addb
xchg
test
fs
out
push
sub
or
adc
sub
dec
adc
shrb
fistps
addb
pop
sbb
inc
loopne
loopne
sbb
repz
hlt
push
in
aas
mov
aam
pop
add
movsb
in
xchg
adc
and
inc
and
mov
xchg
addr16
sarb
mov
adc
and
jle
mov
ss
push
xchg
aam
and
in
clc
sub
xchg
cmp
xor
shrb
sti
sbb
ljmp
test
out
andb
hlt
mov
arpl
add
pop
scas
outsb
mov
jg
lahf
call
fsub
or
dec
iret
daa
ret
les
inc
pushf
into
xchg
pop
imul
sub
pop
xchg
sbb
enterw
pop
inc
mov
fstpl
and
pop
loope
cs
cmpsl
lahf
mov
mov
out
int
sub
lods
fisubl
adc
sahf
scas
mov
rcrl
daa
shl
jo
das
adc
out
dec
or
rcrl
dec
pop
mov
mov
xchg
mov
lods
sti
fs
jg
mov
push
sub
stos
test
inc
mov
rorb
xor
in
movups
incl
pop
lock
or
mov
pop
mov
mov
push
push
aaa
mov
pop
movsb
out
pop
ds
js
cs
jecxz
lret
les
in
lock
and
mov
out
mov
mov
sbb
or
shlb
or
icebp
push
add
push
gs
jge
repnz
xor
popf
adc
ja
fistps
ret
shlb
leave
fimuls
xor
dec
lods
imul
insb
ret
int3
push
mov
push
xchg
loop
mov
push
cmp
sub
xchg
in
xor
orl
sbb
cwtl
stos
ret
div
cmpl
jbe
or
js
negb
dec
int3
scas
pop
call
mov
push
inc
out
out
and
xor
imull
push
sub
data16
sbb
jo
mov
sbb
mov
insb
or
mov
sub
push
inc
pop
xor
pop
mov
inc
cmpsl
add
dec
rcrl
cmp
xor
or
push
push
test
stos
xchg
jle
leave
je
xchg
push
adc
xchg
sahf
test
cmc
ret
and
popf
push
mov
outsb
movsl
and
xor
in
sbb
les
push
decb
or
jle
xor
and
in
imull
nop
push
hlt
add
push
dec
shll
or
shr
nop
test
movsl
mov
add
mov
inc
mov
daa
mov
aad
lahf
icebp
jge
int3
mov
lock
ret
jmp
pop
loop
and
aad
cmpsl
cmp
xchg
xchg
push
insl
add
loopne
pop
pop
sbb
in
mov
sub
and
shr
leave
or
ja
jbe
jb
xlat
cmp
out
sarl
xchg
push
xor
into
mov
repnz
mov
call
out
cli
push
inc
cmpsl
sub
test
pop
xor
les
cwtl
lds
aas
fildl
xchg
icebp
cs
xchg
xor
mov
mov
sti
fwait
xchg
cmpsl
scas
xchg
add
jae
mov
js
out
sti
xor
and
in
xchg
cmp
xchg
mov
xchg
jbe
rorb
xlat
rorb
xor
jb
push
inc
das
js
icebp
fisubrl
ja
xchg
adc
jge
or
xor
sbb
sbb
data16
xor
xchg
ss
adc
and
add
push
mov
or
aad
sub
mov
call
dec
in
or
cmp
sahf
test
pop
ljmp
sub
arpl
lock
push
jne
inc
call
xlat
popa
shufps
fwait
cwtl
out
cli
cltd
jo
push
sbb
xchg
xor
sbb
jb
cmc
sahf
xchg
test
xchg
repz
sub
fsubrs
repz
pop
jns
or
cwtl
leave
cmc
sbb
mov
push
gs
adc
mov
jb
mov
pop
daa
mov
cmp
or
mov
pop
push
cli
out
inc
sbb
icebp
hlt
stc
add
sub
inc
jbe
fadd
fs
lds
jne
mov
divb
push
or
movsl
scas
cmpsb
push
subb
hlt
ljmp
into
cmpsl
insl
mov
push
adc
sbb
cmp
in
retw
push
sub
pop
sub
mov
and
adc
leave
repz
xchg
and
mov
inc
lea
sub
iret
or
inc
iret
daa
mov
out
or
sbb
scas
and
inc
add
sbb
iret
pop
inc
jmp
stc
push
stos
and
or
mov
jo
inc
mov
jnp
into
inc
sub
aas
cs
popa
cmpsb
addr16
icebp
loope
or
push
data16
push
xor
jmp
xchg
fistps
sarb
jno
xor
and
mov
sub
and
mov
sub
cmc
ss
inc
call
mov
insb
fmul
lcall
ret
pop
cmc
cmp
in
pop
inc
mov
es
lahf
push
popf
sbb
adc
adc
int3
pusha
cmpb
cwtl
fisubrl
les
stos
pop
xchg
adc
cmp
inc
loop,pn
popa
in
hlt
dec
in
dec
xor
pusha
shl
cmp
outsb
xor
movsl
in
sbb
loopne
and
insl
aaa
add
cmp
into
pop
cmp
mov
adc
ret
lcall
pop
cli
cwtl
dec
sbb
scas
mov
test
pop
add
or
adcb
mov
xchg
neg
cld
popa
pop
add
ss
fs
cmp
and
push
mov
push
cmpsb
lods
xchg
jmp
bound
pop
cld
inc
scas
jp
in
mov
adc
mov
cmpl
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
jl
mov
mov
mov
movsb
fidivl
ret
pop
push
cli
mov
fdivrs
and
push
incb
lock
sbb
addr16
mov
mov
xchg
cld
mov
sbb
in
mov
cmpb
jge
testl
in
mov
sub
movl
shl
jp
and
cmp
hlt
inc
outsb
mov
or
out
shll
pop
rorb
cli
mov
jns
lods
dec
adc
mov
cmp
sub
push
xchg
pop
sbb
das
mov
xchg
mov
aad
jnp
xlat
inc
ds
sub
jmp
loopne
and
in
ss
lret
push
jo
lea
stos
inc
pushf
push
call
test
add
cli
add
out
negl
icebp
mov
cs
cs
fs
dec
or
ljmp
and
jl
jnp
fcomps
negl
leave
pop
fsubs
ss
js
xor
dec
popf
lods
jp
pushf
adc
lock
xor
mov
jns
gs
sub
fwait
mov
nop
pop
repz
sub
loop
xor
or
rorl
sbb
sub
rcll
ret
push
cltd
add
mov
das
pop
inc
movsb
gs
popa
es
mov
mov
aas
push
cwtl
cmp
cmpsb
shlb
cld
inc
inc
and
jle
jge
ret
push
and
repz
out
std
shlb
sub
mov
xchg
les
and
pop
mov
lcall
imul
push
mov
pop
inc
xlat
xor
push
pop
sub
cmc
or
mov
cmp
push
mov
and
dec
movsb
or
xorl
sbb
call
out
cmp
lock
std
cli
test
sub
sti
test
pop
mov
sbb
mov
pop
idiv
outsb
sbb
out
mov
adcb
pop
pop
jp
ss
stos
add
mov
in
push
loopne
outsl
and
enter
arpl
pop
or
test
fdivl
and
dec
testl
jl
mov
xchg
int3
mov
jl
insl
mov
xchg
int
mov
adc
aam
sub
fisttpll
dec
dec
cmpl
mov
ret
cmp
cwtl
xor
xchg
mov
ret
scas
icebp
sub
daa
test
jle
mov
jne,pn
adc
sub
data16
enter
neg
jbe
push
mov
jl
jae
cmpb
sahf
nop
rorb
fdivrs
test
in
dec
xor
lock
cld
aad
lock
movsb
iret
fsubl
mov
xor
pop
and
shll
jbe
mov
cld
enter
mov
dec
mov
push
dec
pusha
xchg
mov
lea
in
pusha
or
inc
decb
aas
and
ds
test
inc
jmp
or
mov
aad
std
adc
incb
adc
cld
mov
out
stc
movsb
outsb
dec
push
cmpxchg
pop
dec
enter
imul
mov
movl
inc
loop
sbb
bound
xor
lds
push
xorb
rcl
test
mov
fwait
adc
std
jae
cmpsb
mov
imul
jns
std
adc
xchg
or
adc
aaa
lock
mov
mov
push
jns
or
cmc
mov
fistps
test
repnz
orb
sti
or
adc
cwtl
cs
xchg
mov
call
and
andb
jg
sub
std
mov
es
sbb
add
jne
sub
mov
push
das
inc
add
sub
mov
sbb
shrl
dec
cmc
out
push
repz
aaa
mov
movsl
test
jnp
jns
pop
add
xchg
cmp
rcl
rclb
popa
jg
lret
std
jnp
and
jg
subb
popl
rorl
aas
stc
mov
loope
adc
inc
or
out
jbe
movsb
jp
cmp
lea
mov
pop
or
les
aas
jecxz
cmc
popa
mov
xlat
jb
and
sub
adc
leave
pop
add
pop
add
or
add
ljmp
cs
mov
sub
cmp
push
mov
xchg
sub
push
shrb
mov
xchg
insb
outsl
mov
xor
pop
stos
add
mov
fwait
push
sub
pop
mov
ljmp
cmp
jmp
xor
cmpsl
add
rcrb
fildll
pop
pop
jno
stos
mov
mov
inc
pop
adc
insb
sbb
push
xchg
loopne
test
cmp
into
sbb
add
push
jmp
sbb
inc
xchg
add
and
push
les
fildll
sub
rcrb
cmp
scas
cltd
or
mov
pushf
shll
ret
inc
rorl
jbe
jg
lea
mov
ret
pop
pop
popa
test
jae
sub
cmp
fwait
mov
cmp
in
ljmp
sub
pop
inc
std
xor
mov
or
es
mov
xchg
leave
and
jbe
leave
push
pushf
aad
dec
outsb
xor
fnstsw
mov
lea
fisubs
rcrl
add
loop
mov
shr
imul
mov
mov
cmp
out
jle
pop
push
xchg
add
hlt
test
pop
adc
sub
roll
mov
imul
outsl
scas
je
dec
sbb
jmp
jp
sbbl
cs
ljmp
ss
dec
xchg
bound
push
pop
push
jnp
mov
dec
pusha
outsl
cmpsl
scas
push
es
ret
test
mov
xor
js
cmp
xchg
aaa
pop
addb
or
icebp
add
adc
sbb
pop
int
adc
or
and
int3
popa
cli
mov
test
jg
pop
fwait
in
sub
sbbl
inc
popf
mov
les
dec
das
dec
fistpl
dec
sub
sub
out
sbbl
das
dec
ja
mov
dec
or
inc
in
inc
add
inc
mov
ret
fnsave
cmp
mov
jmp
sub
or
adc
mov
popa
jle
cmp
cmpsl
push
lods
shrl
and
ret
shrl
inc
add
cmp
dec
call
js
fcoml
lock
in
test
mov
jbe
inc
lods
sub
mov
outsl
and
xchg
xor
inc
int
cmpsl
fisubs
fcmovne
inc
out
lcall
dec
adc
add
sbb
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
sub
xor
jno
xchg
adc
repnz
fptan
in
fistpl
jno
roll
enter
test
mov
jo
jle
jle
dec
into
jne
jne
mov
xor
sbb
fwait
lods
or
call
xorb
cvtdq2ps
rcrl
mov
enter
clc
div
aas
and
pop
mov
imull
fsubl
and
sti
cmp
aam
in
adc
jl
jbe
cltd
je
or
sub
imul
push
inc
hlt
jmp
cmp
test
leave
push
sahf
rolb
inc
push
test
push
dec
pop
xlat
test
sbb
adc
push
mov
stos
pop
xchg
xchg
or
or
jno
pop
pop
cmp
or
shrb
push
dec
xor
inc
popa
adc
inc
rolb
push
sbb
les
pop
dec
adc
jle
inc
add
inc
mov
pop
jg
rcr
mov
ret
xchg
mov
lds
cmc
sarb
cmpl
mov
sbb
gs
mov
out
and
mov
dec
jecxz
scas
or
test
push
stos
xor
loop
aas
cwtl
add
ficoms
and
lods
mov
frstor
outsb
pushf
xchg
jmp
aas
test
push
and
inc
mov
imul
jecxz
jg
inc
jo
das
jge
and
sahf
jo
aam
dec
xchg
xchg
push
xlat
mov
je
pusha
repz
adc
movsb
inc
cmp
adc
xchg
jnp
lea
adcl
mov
push
fiadds
dec
test
testl
push
mov
xchg
scas
dec
xchg
adc
and
xchg
lock
push
fidivs
ljmp
popa
mov
mov
stos
cmp
sahf
jnp
sub
sbb
fsubrs
aad
iret
mov
or
mov
dec
pop
pop
xor
dec
mov
push
push
adc
int
sbb
push
adcb
call
inc
dec
cmp
rclb
xchg
sbb
shll
arpl
lods
rol
cmp
subb
jo
ja
std
pushf
stos
fcoms
cmp
jmp
add
inc
add
cmp
aam
test
mov
and
test
iret
add
inc
test
lret
fsts
xchg
or
xor
bound
sbb
outsb
xchg
and
adc
shll
aaa
jmp
mov
in
jne
outsb
xchg
pop
cmc
mov
jge
out
fsubr
lahf
dec
jle
xlat
and
dec
push
xchg
fadds
js
xor
mov
imul
sbb
xchg
ror
mov
sub
push
push
xor
pop
cltd
mov
pop
jnp
popa
shlb
jp
sbb
cs
pop
and
mov
mov
sbb
pop
xchg
stc
cs
xor
rcrb
push
in
dec
or
sub
mov
mov
sbb
push
cmc
dec
dec
popa
repnz
xchg
jp
sbb
test
and
shlb
je
outsl
sbb
mov
ret
andl
mov
mov
add
and
imul
mov
pop
js
data16
imul
add
std
fmulp
stc
fwait
xchg
adc
call
loop
adc
lods
in
add
scas
bound
ss
jg
add
fs
or
jb
sbb
sbb
push
in
sti
lock
xchg
pop
ret
mov
adc
loop
mov
imul
and
and
jb
stos
pop
mov
jno
ds
divb
imul
mov
dec
lods
sub
inc
in
xorb
jae
frstor
mov
mov
cld
lock
and
repz
std
pop
test
shl
push
cmp
insl
dec
sub
mov
inc
fsts
movsl
xor
outsl
dec
pop
cltd
enter
test
lock
fisubs
cmpsl
out
test
addr16
test
in
cli
jmp
pop
add
sub
imul
push
mov
sbb
xchg
push
xchg
mov
mov
inc
dec
aaa
or
loopne
das
inc
gs
mov
das
sbb
repnz
inc
repz
sub
jg
stos
andb
and
lahf
imul
and
pop
sub
inc
inc
push
mov
mov
mov
dec
into
pop
pop
and
leave
hlt
mov
shl
inc
adc
xchg
shr
stc
inc
adc
mov
jne
aaa
popl
sub
faddl
and
fbstp
adc
out
mov
jnp
push
push
cli
mov
js
push
mov
movsb
and
sti
jns
cmp
mov
adc
fwait
mov
xchg
enter
xor
adcb
jo
ds
movsl
sub
jge
pop
lock
pop
pop
pop
out
push
fwait
cmp
aas
mov
cmp
jge
jg
mov
xchg
push
adc
xor
mov
mov
mov
in
add
sbb
enter
sbb
shlb
mov
sbb
jb
or
ljmp
push
inc
int3
pop
rol
and
cmp
pop
in
sub
in
push
xchg
add
cmp
outsl
loop,pt
aas
push
loop
aas
push
sub
adc
imull
pop
stc
stos
out
hlt
aad
aas
cltd
or
bound
sub
fs
shlb
dec
xor
fstl
stos
sub
pop
pop
lret
push
mov
lret
xlat
mov
sub
cmovb
sahf
adc
js
fcoms
lahf
cmp
adc
jne
mov
adc
das
mov
jb
inc
loope
inc
adc
ds
mov
ret
mov
inc
icebp
icebp
fwait
mov
aam
cmp
push
cmpsb
loopne
str
lret
xchg
shr
lods
mov
sub
push
fs
push
test
inc
hlt
dec
add
orl
mov
jo
out
pop
in
stc
rolb
dec
mov
jl
nop
inc
dec
dec
jbe
xchg
insl
movlps
dec
add
les
shrb
fbstp
popa
fisubrs
mov
adc
sub
andb
andb
or
test
bound
pop
test
pop
mov
pop
add
cli
mov
or
aad
mov
jbe
mov
movsl
daa
in
fildll
leave
mov
mov
add
dec
std
or
push
movsl
aad
jbe
push
push
mov
cmp
ret
add
mov
jne
mov
jecxz
sbbl
push
popf
js
cmc
ds
dec
cltd
testl
cltd
pop
sbb
add
jbe
mov
pop
mov
orl
xor
orl
shr
xorl
shl
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
inc
fs
push
sub
sub
mov
cmp
es
lret
jmp
sbb
and
iret
mov
pop
idivl
scas
lret
xchg
xor
popa
movsb
and
mov
clc
pop
mov
push
in
loopne
outsl
clc
out
dec
xchg
mov
sub
sub
xor
and
lods
dec
xchg
insl
std
in
sti
psubq
sbb
testb
xchg
rcrb
push
fcompl
rcll
in
xor
add
cmpsl
aad
pop
sbb
shlb
xchg
add
test
jo
push
inc
cmp
mov
repz
fwait
inc
lahf
jg
push
inc
pop
test
inc
testb
das
mov
add
add
pop
push
jg
cmp
push
jle
mov
leave
sti
xchg
jno
fs
scas
lea
nop
xchg
loope
mov
ja
js
jp
lea
sbb
leave
mov
in
mov
je
xor
cltd
inc
bnd
divb
mov
lds
jne
mov
sub
fiadds
xor
xchg
outsb
je
mov
add
gs
stos
fsubrl
fisubrl
pop
outsb
cs
inc
lret
dec
add
test
addr16
dec
scas
lcall
shlb
sub
cmp
xor
repz
push
nop
notl
dec
loop
add
xor
mov
xchg
cmp
lcall
add
push
lods
pop
inc
mov
fwait
xchg
and
int
push
jecxz
cli
add
mov
sub
add
dec
outsb
test
je
jle
pop
shrb
pop
fxch
lahf
out
lock
xor
cli
xchg
movb
in
push
mov
cmp
repz
xchg
mov
lret
pop
out
rorl
jne
xor
cmp
cltd
mov
xor
in
imul
flds
pusha
subb
cmp
daa
mov
add
repnz
dec
mov
add
mov
adc
data16
add
xchg
inc
pop
and
ja
xchg
stos
mov
add
or
pop
insl
ret
andb
jbe
loop
xor
xlat
call
mov
iret
gs
mov
test
mov
push
push
xor
and
lods
pop
sbb
imul
lret
sbb
xlat
push
dec
push
sub
rcl
out
aad
rorb
xor
pop
mov
fwait
adc
jne
test
outsl
lods
jp
gs
add
bound
cmp
dec
pop
xchg
movsl
int3
xchg
push
inc
cmpl
cmp
sbb
mov
cwtl
dec
sbb
push
pusha
push
cmpsb
mov
shrb
js
shlb
into
fnstcw
mov
inc
inc
or
xor
sbb
add
pop
lods
rolb
nop
cmp
cmpsl
fdivrl
into
push
push
stos
fisubrl
test
cs
nop
or
aad
outsb
and
xchg
ljmp
pop
loopne
pop
fisubrs
loope
push
out
insb
inc
fstps
mov
mov
loope
lods
shrl
sub
scas
pusha
inc
dec
dec
lods
shll
ja
cmp
mov
jl
xchg
cmp
pop
jecxz
test
leave
loopne
sahf
repnz
std
or
loop
add
mov
pop
ret
lea
pop
mov
cmc
jle,pt
repnz
lahf
clc
dec
mov
or
lret
mov
sbb
and
into
int
adc
data16
lcall
fcompl
leave
fstpt
push
ret
mov
jge
sub
xor
adc
stos
and
sarl
or
mov
adc
lds
sub
sahf
add
addr16
jl
nop
sub
mov
pop
addr16
movsb
xor
push
arpl
dec
mov
pop
jo
jnp
shr
inc
test
loopne
xchg
in
or
ja
mov
sub
mov
arpl
movsb
push
jl
jbe
jae
pop
inc
sarb
and
das
pop
xchg
xor
and
xor
push
dec
xor
shrl
outsl
mov
mov
in
fdivrs
call
stc
pop
jns
rcrl
lahf
jne
push
xor
fistpll
aam
add
lods
pop
clc
xlat
les
jno
imul
test
or
jno
lret
ja
imulb
popf
ret
cmp
movsb
lea
stos
pop
cli
or
inc
mov
js
dec
jb
xor
xlat
add
lret
or
xor
pop
mov
lock
or
mov
jb
psraw
mov
loopne
inc
or
cmpsb
loop
xor
push
imul
test
xor
stos
rolb
fdivl
lds
jp
les
and
mov
and
and
xchg
push
lods
mov
pop
fldt
pusha
push
ja
xor
popf
scas
imul
mov
imul
mov
or
rolb
mov
popf
pop
mov
cmpsb
lret
idivl
add
sbb
fsubrl
push
pop
shll
xchg
xchg
stc
mov
fisubrs
cmp
stos
dec
cmp
cmp
aaa
xor
mov
pop
movsl
imul
push
daa
fprem1
dec
aad
push
repz
ret
test
sbbb
sti
jg
pop
push
mov
pop
adc
cwtl
inc
test
pop
arpl
cltd
fbstp
inc
insb
in
mov
fisubs
add
xorl
inc
or
add
mov
add
ss
icebp
lret
fcompl
adc
push
lcall
sbb
fisttpll
adc
leave
es
inc
mov
dec
adc
arpl
jle
push
xor
cmp
pusha
std
enter
cmpsl
pop
sub
or
inc
xlat
adc
push
cmp
in
sbb
out
pop
mov
je
iret
xchg
addr16
or
stos
push
adc
cmc
push
arpl
mov
enter
lds
sar
addb
push
das
fwait
lea
jecxz
mov
pop
sub
mov
jo
sti
add
lds
dec
mov
mov
insb
popf
and
stos
call
push
pop
repnz
js
push
dec
stos
filds
push
ret
fprem1
sbb
pop
xchg
js
pop
push
jnp
xchg
cmp
lock
aad
and
and
shrl
imul
add
pop
loope
mov
dec
fs
cltd
ret
sub
push
divl
mov
pop
dec
push
push
lcall
jno
cmp
daa
loopne
out
xchg
sub
test
fucomi
shll
dec
imul
aad
xchg
sahf
hlt
push
ss
xor
imul
stc
sbb
ret
jp
cmp
adc
push
daa
sarb
insb
ret
daa
into
sbb
test
mov
push
lea
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
outsb
into
xchg
add
jge
test
mov
sti
sub
mov
popf
scas
adc
in
cmpsb
jmp
out
dec
xor
mov
mov
push
iret
mov
loopne
leave
popa
ret
sbb
or
mov
mov
inc
es
xchg
and
xchg
scas
xor
mov
loope
repnz
pop
lret
dec
rolb
mov
adc
lcall
ret
cltd
and
loop
jl
and
test
test
dec
cmp
mov
testb
pop
add
cmp
mov
adc
mov
aad
jns
rolb
sub
sbb
adc
test
movsb
pop
mov
wbinvd
scas
adc
pop
in
mov
cld
enter
xor
jecxz
in
mov
lahf
mov
shll
insl
lds
pop
loopne
ds
mov
out
add
pop
sub
pop
sar
mov
lcall
dec
mov
std
fwait
dec
push
jg
mov
iret
imul
xor
sbb
mov
xor
mov
stos
sbb
cmp
jne
add
ds
in
push
sub
jmp
cmp
sub
jnp
mov
shrb
vpmaddwd
sbb
mov
js
mov
fdivrs
add
pop
out
jb
or
xor
add
popf
inc
pop
cld
clc
or
mov
movsl
fs
push
cmp
inc
fldcw
xchg
sbb
push
data16
call
lahf
sarl
mov
repnz
jmp
fistpll
mov
mov
das
mov
cmp
fcmovb
enter
mov
mov
cld
fnstcw
inc
jbe
dec
pusha
ret
ds
mov
fldcw
mov
shll
jecxz
sbb
mov
fdiv
sahf
xorb
cmp
clc
insb
sub
and
xchg
sbb
rorl
fucomi
push
arpl
mov
xor
pop
or
dec
pop
jns
dec
adc
lods
fdivr
pushf
sti
loope
jne
inc
adcb
out
sub
xchg
push
or
jo
enter
testb
add
lcall
pushf
jge
mov
mov
aaa
pop
jp
mov
jno
pop
fidivrl
sbb
dec
cli
popa
faddl
gs
aaa
xchg
test
pushf
adc
bound
adc
repz
push
xor
test
cltd
pushf
adc
mov
aaa
lahf
mov
jae
lret
jl
cmc
test
jecxz
test
pop
icebp
lods
out
aaa
dec
insb
scas
rclb
imul
mov
lahf
and
jns
mov
or
nop
mov
xor
lret
inc
adc
push
in
cs
loope
cmpsb
ds
adc
push
pop
mov
inc
fs
pop
ficoml
cltd
fs
in
in
inc
lods
daa
pop
jne
and
dec
shl
push
push
lcall
lret
imul
js
cmp
inc
out
mov
pop
dec
push
jl
lds
outsl
mov
pop
mov
pop
jo
cmp
or
inc
xchg
daa
cs
ret
repz
push
fwait
icebp
mov
jmp
dec
popa
mov
xor
push
icebp
xor
ljmp
ficoml
inc
imul
inc
xchg
pop
mov
movsb
repnz
or
add
fimuls
out
mov
icebp
or
mov
push
xor
imul
xor
in
pop
jns
sub
jmp
fidivs
inc
cmpsl
cmp
add
stos
int
mov
add
shrb
loop
xlat
mov
jb
lods
mov
mov
imul
add
fincstp
cmp
sub
mov
mov
push
ss
push
ja
mov
fsubr
ja
stos
daa
push
and
xor
inc
cwtl
imul
cmpl
hlt
aad
xor
ds
push
inc
std
cld
stos
ljmp
mov
pop
ret
lock
sub
pop
xchg
mov
dec
push
movsb
xchg
jnp
xor
jle
and
mov
lea
test
fldcw
out
xor
adcl
repnz
mov
hlt
ret
xor
ss
cs
lods
xlat
cld
jno
mov
fcoms
xor
leave
add
stc
mov
sti
mov
sahf
adc
and
pushf
inc
mov
jb
xor
add
fmulp
and
std
cwtl
push
add
outsl
xor
push
add
cmp
outsl
aas
push
dec
mov
out
repnz
xchg
rorb
sahf
sahf
addb
lds
push
jno
mov
mov
fsubr
xchg
jnp
mov
push
mov
xchg
adc
fisubrl
in
cmpsl
dec
jmp
into
cwtl
push
imul
and
in
push
ficoml
sbb
adc
dec
pop
movsb
hlt
xchg
ror
das
jp
cmp
stos
jg
sbb
movsl
sbb
jb
imul
or
add
insb
fistl
and
inc
pop
jnp
mov
out
mov
scas
mov
shll
gs
and
ret
or
lods
ds
mov
and
add
mov
sbb
nop
lret
out
cmpsl
xchg
inc
cltd
mov
pop
iret
or
jae
dec
pop
inc
test
insl
ljmp
mov
lea
dec
mov
mov
jae
cmp
rcrl
sbb
lds
icebp
dec
xchg
mov
popa
cmc
xchg
push
pop
das
je
fwait
pop
xor
mov
xchg
xlat
xor
xor
mov
mov
jl
jo
dec
mov
xlat
cmpsl
push
sbb
cld
into
mov
or
shll
test
xor
adc
lret
or
xlat
into
and
push
sti
pop
mov
xor
lahf
dec
scas
pop
xor
loop
add
cmpsl
cmp
out
cmpsb
bound
aaa
push
lds
pop
jne
add
mov
push
daa
jmp
sub
gs
fwait
xchg
popa
mov
cmp
lds
jmp
call
std
fstl
push
scas
inc
ss
ja
in
inc
push
bound
cli
out
and
insb
nop
sub
sub
cmp
mov
and
add
dec
cmp
xchg
xchg
inc
addr16
push
ret
mov
adc
gs
jno
jne
mov
out
xchg
mov
jae
xor
cld
jmp
leave
mov
jg
std
adc
dec
hlt
cmp
sahf
adc
sub
jnp
sbb
fnstsw
push
loope
push
lret
insl
ror
cmpsl
repnz
cmpsl
rorl
mov
ss
or
fs
rcll
push
cmpl
ja
inc
add
inc
inc
add
lret
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
mov
cli
adc
add
dec
and
aas
shl
pop
ja
imull
movsl
roll
clc
cmc
js
push
insl
lock
ljmp
push
cmpl
loopne
arpl
and
sbb
scas
xchg
divb
adc
mov
push
mov
xchg
jg
leave
arpl
push
test
sub
fwait
and
roll
flds
ficoms
pop
lea
cwtl
andl
lret
insl
sub
or
add
cs
jmp
and
les
pop
mov
pop
dec
scas
push
sub
xor
ss
pop
mov
addr16
imul
xchg
mov
ret
pop
and
mul
movsl
push
fsubrs
sbb
jge
pop
jo
xor
pop
jbe
ret
cmp
sbb
sti
dec
jecxz
outsb
or
fisubrs
and
and
and
inc
jae
mov
adc
add
ljmp
or
jb
push
mov
jge
adc
sbb
lcall
sub
mov
mov
pop
nop
je
mov
test
call
sub
mov
lahf
jbe
ret
jno
push
ds
xchg
pop
cmp
inc
ljmp
cmpl
or
push
or
mov
lcall
idivb
aaa
adc
push
mov
push
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
