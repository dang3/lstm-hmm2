push
mov
sub
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
subl
push
mov
mov
sub
add
push
mov
xor
xor
mov
sbbl
add
andl
mov
mov
sbb
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
mov
mov
sub
add
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
mov
movl
sbb
mov
and
xor
add
adcl
mov
mov
mov
mov
mov
and
mov
adcl
mov
and
mov
xor
push
neg
pop
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
movl
mov
and
movl
mov
xorl
mov
mov
orl
mov
and
mov
xor
movl
add
mov
adcl
lea
sbbl
mov
mov
or
mov
adcl
xor
add
mov
lea
andl
push
mov
movl
xor
add
andl
push
subl
mov
xorl
push
subl
pushl
xorl
call
andl
mov
inc
mov
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jb
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
movl
mov
incl
mov
lea
incl
mov
movzbl
or
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
push
call
jmp
mov
sbb
xor
sub
mov
sub
mov
mov
movzwl
movl
mov
mov
cmp
movl
je
add
mov
mov
sbbl
xor
xor
lea
mov
orl
xor
div
mov
xor
mov
xor
orl
xor
orl
sub
cmp
jne
mov
mov
add
mov
mov
subl
xor
addl
xor
add
add
movl
mov
movl
cmp
movl
jae
and
lea
not
mov
mov
xor
xorl
add
lea
mov
mov
mov
cmp
jbe
addl
addl
movl
jmp
addl
addl
sub
mov
xorl
xor
decl
inc
sbbl
incl
addl
add
cmp
movl
jb
notl
mov
xor
mov
movl
xor
xorl
mov
sub
add
mov
adcl
xor
sub
andl
ror
movzwl
sbb
xor
mov
mov
mov
adc
mov
orl
jmp
pop
mov
pop
mov
add
fildll
addl
sub
and
cmp
jae
jb
fcmovu
imul
jb
int3
bound
lea
xchg
xchg
inc
mov
sub
push
rol
repnz
sub
nop
ss
mov
aad
jb
adc
and
aaa
jo
lods
sub
mov
notb
test
pusha
push
and
cmpl
fwait
dec
or
jecxz
imul
xchg
ss
leave
int
outsb
cmc
pop
imul
or
mov
shll
imul
jno
add
test
add
push
test
lea
xor
mov
mov
mov
sub
fcmovne
xchg
adc
fs
add
int
stos
and
inc
neg
divb
pop
mov
iret
xor
aas
int3
xchg
dec
insl
pop
mov
fsubrs
lds
lcall
mov
xchg
jno
mov
push
insl
fdivrl
jle
aas
aaa
fwait
xor
scas
pop
addr16
lock
mov
sti
out
xor
scas
es
int
adcl
mov
push
cmp
das
gs
adc
les
pop
pop
shrb
loope
dec
mov
stos
push
push
shrb
push
add
setne
daa
inc
cwtl
icebp
mov
cmc
or
pop
sub
sbb
test
dec
jns
pop
inc
fwait
xlat
in
jbe
xchg
xlat
jle
xor
and
dec
sub
mov
nop
mov
pop
xchg
jns
sbb
push
cwtl
inc
lret
cmp
jae
bound
sub
sub
push
sub
mov
out
and
mov
xchg
pop
dec
shll
repz
ffree
sbb
test
or
dec
mov
push
mov
jg
mov
mov
imul
cmpsl
jecxz
cmc
pop
cmp
pop
sbb
and
lds
scas
mov
scas
xor
and
mov
aaa
jo
test
mov
fdivrl
mov
and
push
push
sbb
cmc
addr16
in
mov
aad
scas
bound
js
push
fwait
push
aam
inc
les
pop
aas
jge
adcl
int3
push
js
clc
jmp
pop
leave
cltd
popa
dec
pop
and
adc
stos
sti
xor
test
std
sbb
sbb
test
adc
xor
dec
push
push
sub
mov
and
ss
jp
mov
and
adcl
dec
sub
js
les
out
enter
add
repz
icebp
mov
movsl
xchg
aas
shrb
jmp
and
pop
xchg
jl
and
cmp
test
dec
aas
mov
inc
les
mov
cmp
daa
push
jns
push
pusha
push
xlat
insl
imul
cltd
popa
inc
xchg
faddl
push
inc
mov
dec
mov
jl
inc
into
andb
aas
cmc
xor
mov
movb
dec
ljmp
scas
push
bound
xchg
fdivp
loopne
lods
adc
dec
cmp
mov
pop
jae
or
cmp
aaa
lcall
sarl
scas
arpl
bnd
insl
push
mov
xor
aad
adc
mov
cmp
fldl
push
outsb
js
cmc
add
cli
and
or
lcall
fsubl
mov
jl
sarl
aaa
aas
jb
movsb
faddp
and
xchg
mov
xor
push
inc
jb
rcr
xchg
lret
sub
cmp
test
or
xchg
adc
leave
loopne
es
lahf
adc
enter
aas
test
inc
inc
xor
lds
sahf
adc
insb
cld
cmp
shll
sbb
add
cmc
sub
nop
popf
inc
mov
loope
cwtl
shrl
adc
mov
arpl
mov
or
mov
out
mov
out
mov
data16
push
pop
das
mov
jne
out
push
jl
dec
pop
jbe
sub
enter
out
push
popf
lret
xchg
mov
inc
mov
jle
pop
sbb
cli
mov
dec
dec
and
call
sbbl
mov
and
lcall
ljmp
ret
cltd
mov
xchg
push
call
fmulp
mov
stc
cld
sbb
fstp
sub
cmp
dec
fsubs
mov
inc
out
mov
adc
or
xor
je
xor
fsubr
mov
fstpt
or
into
xor
mov
outsl
mov
xchg
dec
je
clc
adc
xor
mov
imul
adc
sahf
iret
repnz
sub
pop
mov
in
movsb
test
mov
enter
pop
shrb
popf
jp
ja
cmp
add
fisubl
roll
jecxz
movsb
add
or
mov
leave
in
add
lcall
and
add
ja
mov
test
inc
add
sbb
dec
lret
insl
mov
sbb
dec
mov
sub
in
fsubrs
cmp
add
and
std
fidivrl
les
andl
mov
test
lea
jno,pn
jmp
hlt
push
jae
mov
dec
rcrl
pop
fiadds
and
sub
daa
gs
xchg
mov
mov
sub
test
xor
stc
mov
loopne
mov
lock
fwait
inc
jp
test
sti
sub
stos
ja
les
and
mov
push
lds
nop
adc
mov
out
sub
xchg
mov
sbb
mov
jp
and
aam
test
push
pop
add
lods
pop
je
or
and
cld
rcrl
mov
adc
inc
cmpb
add
cmpsb
dec
sbb
xor
jg
shl
mov
testb
lock
jmp
loop
cmpsb
dec
cmpsb
iret
jmp
and
es
fstl
rorl
mov
aam
popa
je
mov
out
mov
test
sbb
inc
out
pushf
jle
pop
and
pop
xchg
out
and
or
jp
lds
xlat
movsb
pushf
xchg
push
dec
out
lret
cmp
test
es
idivb
cmp
mov
rol
repz
cmc
clc
lea
pushf
sub
ss
sbb
mov
mov
jg
pop
dec
nop
or
or
cmpsl
pop
pop
adc
sarl
xchg
fmul
xor
insb
lcall
and
inc
lock
leave
jae
mov
lahf
dec
inc
ljmp
push
ret
lcall
cmp
xchg
aas
notl
mov
add
dec
adc
push
repnz
ficomps
out
mov
jge
sbb
or
xor
cld
es
adc
dec
enter
xor
ja
xor
push
lds
hlt
test
loopne
imulb
mov
mov
pop
arpl
xchg
lock
pop
and
ljmp
popf
scas
fiaddl
movsb
jl
push
ret
out
ds
dec
cld
pop
fdivl
mov
xchg
and
mov
call
dec
push
test
add
out
push
mov
fcomps
jb
pop
ss
sbb
dec
inc
or
insl
aas
aad
out
mov
and
and
inc
xchg
add
ljmp
mov
fildll
push
cmpsl
push
ret
sar
mov
repz
and
lea
dec
jbe
inc
insb
xchg
pusha
pop
loopne
insb
cld
repnz
mov
add
mov
mov
sti
fst
or
nop
jmp
adc
es
pop
icebp
push
cmpsl
addr16
test
nop
xchg
push
dec
cmp
mov
mov
mov
into
scas
rcrl
pop
inc
sub
jb
test
push
push
jmp
or
stos
mov
mov
xchg
test
mov
add
xor
in
mov
into
xor
xchg
addb
decb
xchg
pop
sbbl
jecxz
xchg
adc
add
ljmp
mov
js
mov
or
cmp
das
adc
lret
push
dec
loope
ret
outsl
jbe
mov
dec
int
testl
mov
jnp
push
out
or
mul
xor
ret
sarl
xchg
mov
xchg
push
fucom
fs
in
push
sti
lcall
xor
test
mov
jecxz
mov
jmp
xor
xor
sbb
out
mov
and
fisubs
push
push
inc
xor
sub
sub
int
cltd
mov
cmp
mov
lea
flds
and
sbb
lods
xlat
dec
add
push
ret
jge
insb
cmp
push
lcall
adcb
jmp
inc
mov
xchg
or
dec
mov
rcrb
sti
mov
jp
cmp
popa
sbb
xor
add
test
adc
or
jae
shlb
xorl
arpl
lret
jnp
aaa
arpl
sbb
xlat
jb
mov
inc
jp
sbb
daa
jg
fsubs
cmp
aas
and
and
jo,pn
fldcw
adc
and
dec
inc
push
mov
or
lahf
jmp
hlt
movsb
in
sbb
mov
pop
rclb
xchg
bound
dec
push
fstl
mov
pop
lcall
sub
cli
sarl
sub
sbb
pushf
push
mov
jnp
jbe
inc
jge
add
aad
out
sub
jbe
data16
jno
fstpl
lahf
mov
scas
negl
fldcw
or
push
movsl
or
xor
mov
sub
outsb
les
add
xor
pop
push
inc
sbb
cpuid
or
push
jmp
cmpsl
fidivl
ret
call
jp
shrb
sbb
sub
repz
jae
adc
loop
mov
cltd
or
adc
lret
insl
clc
add
inc
lret
aas
outsl
fidivs
call
dec
mov
test
stos
cmpsl
pop
xchg
mov
lods
cmpsb
push
daa
jns
add
andb
lods
add
jnp
adc
in
inc
fdivp
or
stos
scas
pop
mov
adc
lret
push
aad
ja
scas
dec
rcrl
push
in
cmp
ljmp
mov
fwait
pop
pop
push
sar
out
sbb
pop
jp
mov
scas
dec
mov
femms
sub
xchg
xchg
inc
xor
test
mov
pushf
gs
into
xchg
cltd
add
mov
xlat
add
test
or
out
int3
std
pop
enter
imul
movsb
push
and
es
mov
jecxz
into
inc
xor
sub
cmp
push
lods
xchg
in
jmp
adcl
mov
add
cmpsb
sub
mov
push
sbb
add
push
test
add
inc
xlat
mov
add
mov
insl
and
out
pop
mov
out
outsl
dec
pop
mov
xlat
test
repz
out
roll
xor
fdivs
push
jo
dec
and
sbb
pop
xlat
push
xchg
pusha
outsb
or
xor
subl
pop
insb
movq
mov
cmp
inc
es
xchg
inc
inc
sbb
xor
repnz
sbb
dec
xlat
adc
inc
sub
push
out
arpl
scas
jnp
movsb
cmp
imul
adc
into
ja
aad
cmpl
inc
out
push
sbbb
leave
mov
jo
lcall
subl
dec
fbstp
mov
xchg
add
outsb
pusha
mov
popf
jb
mov
sub
push
in
add
outsb
loop
inc
mov
lods
iret
cmp
dec
jmp
lret
inc
or
dec
mov
shlb
push
mov
or
fcoml
push
add
mov
sbb
in
fisubrs
xor
mov
push
pusha
sbb
ret
shld
ljmp
xchg
lcall
sbb
xlat
ljmp
xchg
xchg
and
add
add
icebp
inc
lods
lds
and
pop
movsl
loope
aad
add
mov
inc
pop
inc
xchg
push
xorps
cmpsl
jns
and
mov
push
pop
mov
es
roll
mov
cmp
test
xor
dec
sub
or
add
xchg
inc
pop
add
mov
jno
scas
in
mov
outsb
mov
mov
xchg
dec
popf
pop
or
fimuls
dec
cmpsl
mov
pop
mov
sub
inc
jns
enter
daa
bnd
push
inc
fdivrs
fs
jne
inc
out
mov
int
pop
popf
mov
stc
xor
addr16
xchg
fsubrs
lock
mov
mov
sub
adc
negl
mov
and
loop
cld
int3
push
push
sbb
fidivs
scas
jecxz
fistpll
xchg
sahf
in
mov
inc
xchg
rorb
insb
mov
gs
out
loopne
xchg
popf
push
push
pop
out
out
mov
stc
sbb
adc
jb
and
mov
pop
inc
fisubs
inc
in
lods
jno
jecxz
and
fdivrl
pushl
dec
mov
call
pop
loope
das
lds
mov
inc
ret
vmread
xchg
jno
dec
dec
mov
outsb
mov
push
subb
icebp
jns
inc
pop
adcl
repz
xlat
mov
or
xor
es
cmp
enter
inc
pop
das
push
fwait
les
mov
and
aam
xchg
mov
dec
outsl
sbb
pop
jne
jg
aaa
lahf
xor
cmp
mov
xchg
ret
xchg
xchg
lret
xchg
pop
lahf
cmp
fldt
dec
ljmp
cs
testl
xchg
addb
arpl
pop
inc
aaa
lahf
mov
outsb
mov
push
push
jp
mov
je
loop
or
into
cmp
enter
icebp
inc
mov
mov
cmpsb
scas
cmp
xor
mov
xchg
xchg
enter
rcrb
and
xchg
in
jns
mov
int
mov
xor
pop
ja
std
bnd
ret
js
fdivrs
ss
add
mov
xchg
dec
push
frstor
push
push
mov
fldcw
adc
ret
jg
mulb
or
in
std
adc
pop
pusha
insl
cmp
jp
call
andl
insb
mov
inc
jg
xchg
mov
pop
test
sbb
jecxz
test
into
lods
aam
ja
inc
jae
push
repnz
mov
or
ficompl
rolb
mov
jb
or
or
push
push
pminub
orl
xchg
xchg
inc
std
aam
inc
roll
and
jg
fcoms
mov
jne
mov
xor
test
fistpll
std
fmuls
dec
mov
push
loopne
loop
fnsave
pop
sbbl
and
mov
cs
into
repz
dec
fnstsw
int
pop
or
iret
push
add
xchg
push
ror
and
enter
in
jecxz
xchg
loope
sahf
gs
add
int
arpl
or
mov
pop
mov
hlt
in
xor
mov
inc
push
movsl
jb
jp
orl
mov
jbe
and
lcall
add
ss
cld
ljmp
xor
in
jbe
lds
xchg
xchg
or
es
mov
ja
cld
cmp
push
les
mov
fs
imul
cmc
fisttpl
data16
stos
pop
jmp
notl
cmp
jle
or
lret
fwait
push
inc
fcmovb
dec
fnsave
mov
jnp
lcall
xchg
leave
jae
test
sbb
test
xchg
cmp
pop
pop
addb
cli
push
test
mov
cmp
ret
mov
inc
push
daa
imul
loope
cmp
sub
popa
or
clc
cmpsl
stos
xchg
sahf
inc
lock
ds
dec
cmp
movsl
shr
js
xchg
and
mov
sbb
cmp
mov
pop
mov
bound
sbb
jb
adc
notl
bound
sarb
shll
testl
rcrb
stos
leave
dec
pop
push
movsb
mov
mov
outsl
addr16
hlt
or
test
fidivrl
inc
in
mov
or
in
sbb
mov
adc
cld
stc
jp
int3
jmp
sahf
push
loopne
sub
sbb
dec
sbb
popf
mov
fs
sarl
xor
ja
dec
jl
xchg
mov
push
and
popa
cmc
popf
jle
mov
in
fmuls
inc
pushf
in
pop
xor
adc
fs
pop
jns
cmp
pushf
pop
ss
mov
sub
or
xchg
or
jmp
xor
mov
das
cmp
imul
sub
hlt
jmp
and
jo
cltd
repnz
and
mov
xchg
xchg
inc
adc
clc
xchg
push
sbb
push
xchg
add
std
pop
repnz
arpl
outsl
shll
cmp
loope
cmc
pop
insb
pop
aam
pop
iret
jae
mov
repnz
fwait
mov
cmp
pop
bound
push
shlb
sbb
dec
std
ja
int
sahf
xchg
pop
xchg
and
pop
ljmp
fcom
gs
sbb
or
and
sbb
mulb
mov
pop
insb
cltd
dec
mov
adc
push
shlb
movsb
sti
imul
loopne
icebp
inc
insb
jo
inc
jecxz
lods
call
mov
pop
push
push
jmp
sbb
mov
test
shll
outsb
ficoml
sbb
mov
xor
outsl
mov
pop
pop
pop
clc
ret
movsl
hlt
sbb
mov
add
ss
cmp
iret
inc
jge
inc
repz
mov
lret
mov
xor
lret
nop
ss
xchg
test
rcll
insb
lods
pop
addb
scas
dec
ljmp
add
mov
cld
iret
mov
scas
cmp
add
cwtl
popa
add
mov
les
shrb
mov
rorb
les
xor
fucomi
xchg
rorb
mov
scas
xor
shl
lds
jbe
cld
insl
int3
and
inc
pop
insb
insl
or
mov
mov
pop
outsb
jmp
int
gs
sti
mov
sarl
rorb
out
sub
mov
jmp
cs
bound
fidivrl
in
mov
and
adc
sahf
mov
xlat
mov
mov
jne
cmc
loopne
and
push
cmpsb
hlt
add
add
aaa
pop
pop
cmp
push
aaa
pop
pusha
push
insl
mov
inc
test
push
jnp
dec
sub
pop
leave
jns
and
mov
add
out
mov
fwait
sbb
pop
xchg
xchg
adc
movsb
mov
repnz
adc
arpl
mov
jg
pop
pop
test
or
push
mov
xor
jge
jne
test
int
adc
lahf
mov
add
out
adc
jns
xchg
movl
pop
push
jnp
inc
mov
xchg
std
mov
push
mov
fxam
jmp
adc
pop
xor
clc
fs
scas
movsb
mov
lret
xchg
clc
push
mov
fstl
arpl
cmp
xor
xchg
aas
pop
in
push
lea
xor
jno
add
jae
pop
mov
sub
nop
cs
mov
sahf
scas
outsl
std
ss
mov
fstps
and
std
out
cwtl
fnsave
lea
addr16
add
in
out
repz
jbe
inc
sbb
adc
scas
mov
ss
fbld
jb
jns
dec
adc
inc
iret
sub
call
push
std
fimuls
imul
push
add
jbe
ss
outsb
push
enter
inc
mov
pop
add
xlat
aaa
push
inc
ror
cmp
xor
sub
loope
lret
fbstp
test
lret
test
std
cmp
pushw
test
jns
jle
xchg
int
add
cmp
mov
jp
data16
jb
cmpsb
int
push
mov
fiaddl
insl
jns
jno
insb
stos
pop
mov
push
movsb
xchg
mov
mov
jo
lods
nop
xchg
push
std
adc
cmp
push
or
inc
jnp
mov
aam
pop
jno
ret
rolb
iret
adc
subl
mov
sub
mov
or
xor
aas
push
daa
push
mov
scas
push
shrl
jne
stos
sar
testl
test
testl
xchg
sub
jmp
cwtl
mov
jnp
ljmp
ds
flds
loop
mov
mov
push
ret
jae
movsl
nop
mov
fldl
xor
stos
and
mov
mov
out
shll
sahf
push
or
stc
sahf
dec
cmp
inc
pusha
push
xor
jns
xchg
int
fisubrl
hlt
test
pop
loopne
fmull
adc
mov
add
jge
pop
push
jg,pn
aas
and
ss
or
mov
mov
sub
dec
test
loop
xor
cmpsl
insb
aaa
jbe
mov
xchg
mov
lock
sub
pop
adcl
loopne
int3
stc
inc
inc
jle
shll
out
mov
loope
nop
stos
ret
mov
add
out
cmp
cmp
les
adc
push
add
fsubs
xlat
aaa
dec
push
jmp
jo
lea
scas
cmp
dec
jns
xlat
lret
pop
push
arpl
lea
jle
pushl
push
shll
out
gs
imul
xchg
push
xor
xchg
cmpb
test
push
push
inc
sbb
popa
popa
movb
jae
repnz
inc
iret
jae
in
jo
nopl
mov
push
jg
or
pop
or
leave
movaps
add
sbb
fwait
sbb
ds
xchg
cmp
mov
mov
push
mov
pop
shrb
out
ret
ret
jmp
fsubr
jecxz
cwtl
cwtl
roll
imul
pop
sar
add
jae
add
push
sub
into
dec
sar
clc
rol
fsts
mov
test
mov
int3
xchg
pop
mov
out
into
inc
shll
mull
popa
stos
out
jle
repnz
loope
je
es
rcl
aam
or
mov
mul
add
jne
adc
mov
jmp
enter
inc
push
xchg
je
and
nop
sbb
mov
fs
imul
nop
repz
jbe
jbe
int3
leave
sub
cmp
cmp
xchg
and
ret
aas
loop
testb
adc
ja
xor
pusha
pop
inc
lods
push
rcrb
sub
scas
inc
test
cmp
pushf
pop
jbe
sub
aaa
cmc
jge
or
add
popa
test
pop
mov
dec
pop
js
inc
bound
pop
mov
lcall
push
insb
mull
sbb
jbe
imul
xorl
adc
adc
cmp
mov
dec
lea
pop
adc
sarl
ljmp
xchg
scas
push
or
dec
iret
jae
pop
inc
in
dec
adc
sub
inc
icebp
mov
adc
sub
xchg
jg
lods
fsubrl
push
adc
adc
jns
mov
icebp
sub
enter
add
std
mov
out
bound
sbb
sahf
aas
fsubrl
repnz
outsl
fistl
jbe
cwtl
ja
pop
prefetchw
popw
xchg
cmp
lcall
add
loop
mov
ret
repnz
jp
cmp
aad
xor
pushf
xor
ljmp
cmc
lods
xchg
rorb
inc
popf
stos
lock
sub
repz
xor
dec
pop
xchg
push
dec
or
jp
pushf
add
imul
sbb
lods
add
imul
daa
sbb
imul
dec
adc
dec
xchg
dec
lret
sub
inc
mov
les
ret
or
daa
mov
mov
ror
loope
loopne
mov
lret
push
rolb
push
sbb
and
mov
and
aam
hlt
jne
je
loopne
inc
xor
mov
pop
mov
sub
in
add
fwait
add
or
cmp
push
add
int3
ss
adc
sub
mov
incl
adc
push
jbe
lret
sbb
fidivrs
or
push
dec
mov
clc
faddl
push
dec
and
cli
jmp
es
pop
jb
sub
and
xorb
inc
jmp
pop
in
repz
iret
pop
ja
outsl
sub
loop
sub
and
aas
and
test
mov
jmp
cmp
adc
xor
popa
inc
xor
ret
outsb
or
jle
and
sub
in
out
std
add
inc
xchg
inc
notb
cwtl
adc
ljmp
jecxz
push
push
loopne
adc
dec
jnp
sub
mov
xchg
decb
pushf
dec
add
xor
iret
movsl
js
cmc
stos
jne
lods
add
scas
stos
fs
mov
sub
stos
enter
popf
sbb
sbb
nopl
add
outsb
or
out
xchg
stc
add
sti
outsl
ret
out
rcrl
fmull
pop
dec
xor
test
outsl
ss
xor
into
cwtl
insl
outsb
dec
dec
cmpsl
in
rcrb
ljmp
sbb
inc
popf
sbb
pop
fbld
xchg
test
jp
imul
cmp
out
add
movsb
push
dec
in
inc
out
and
mov
dec
add
jl
out
scas
mov
pusha
and
add
adc
sti
dec
or
flds
lds
xchg
aas
mov
das
shrl
pop
xor
lea
cmp
call
gs
sbb
test
mov
fs
rcl
out
daa
xor
imull
pop
cltd
inc
sub
lods
sbb
aad
dec
fadd
mov
imul
cmp
jg
dec
cmpsb
sbb
daa
sbb
push
cmpsb
imul
mov
xchg
add
adc
or
adc
pop
test
ja
add
in
std
pop
and
into
jbe
adc
sbb
repz
stos
push
shll
or
adc
push
jecxz
jno
or
push
hlt
mov
movsb
mov
mov
push
push
push
jb
loop
mov
test
lret
out
jl
mov
add
cltd
jne
xlat
sub
es
filds
dec
popf
scas
mov
cmpsl
mov
and
mov
and
hlt
push
sub
scas
icebp
ljmp
jno
xchg
push
test
mov
inc
mov
daa
mov
xchg
push
cmpsl
jge
cmp
jle
mov
loope
mov
cmp
ficompl
int3
add
ss
out
xchg
cmpsl
mov
imul
test
mov
inc
addr16
xlat
xlat
loop
pop
mov
cmp
imul
add
aad
sahf
mov
int
jge
fs
sub
mov
cltd
loopne
shr
cmp
fisttpl
sub
and
imul
push
mov
jbe
and
daa
xchg
jl
and
add
sbb
imul
adc
js
xchg
push
xor
inc
roll
xor
test
inc
jecxz
jb
test
aaa
repnz
subb
iret
mov
sub
cmpsb
push
ror
test
nop
xchg
out
in
negl
or
into
je
enter
pushf
mov
mov
push
imul
in
lahf
add
mov
inc
nop
and
rorb
cmp
sub
add
sbb
mov
jne
jmp
jecxz
xlat
cmp
out
xchg
sub
cmp
mov
add
fstps
xchg
mov
mov
mov
xchg
xchg
push
lcall
stos
rol
aaa
fmul
mov
divps
and
inc
push
push
shrl
mov
cmp
jmp
cmp
stos
cld
into
push
scas
inc
adc
inc
shrb
xor
data16
xchg
xchg
push
sbb
shlb
scas
outsl
and
cmc
das
mulb
mov
popa
dec
pop
cmp
and
and
sbbl
xchg
ljmp
movsb
sub
jnp
xchg
cld
sti
bound
mov
push
idivl
mov
clc
ret
aam
sarb
xor
gs
mov
out
hlt
imul
frstor
leave
adc
clc
or
jnp
out
push
sbb
pop
sub
push
dec
loop
mov
mull
inc
lods
addr16
pop
push
add
in
test
les
sbb
inc
int3
xor
das
inc
fisttps
xor
gs
sub
push
bound
mov
imul
out
movsl
xchg
sbb
fisubrs
repz
add
and
vaddss
bound
mov
pop
sarl
jbe
dec
sub
pushf
arpl
in
push
mov
sub
cmp
cmpsl
ljmp
dec
stos
sbbb
fcoms
cmp
mov
add
cld
int
jno
popa
shl
adc
icebp
mov
push
lahf
jmp
push
sub
ret
mov
ucomiss
pop
imul
adc
push
adc
adc
aas
push
push
fbld
outsl
jg
pop
mov
sub
mov
cwtl
iret
mov
inc
ds
les
roll
pop
adc
xor
mov
and
mov
ja
mulb
push
enter
jno
adc
mov
add
add
sarb
xchg
enter
int
jb
jns
je
mov
xor
pop
dec
out
movsl
int3
sub
cld
stos
push
andl
stc
out
add
xchg
repnz
in
inc
rorl
push
jp
das
testl
bound
andb
mov
jg
inc
mov
sbb
pop
push
mov
mov
mov
repz
stc
out
cltd
inc
mov
sahf
mov
int3
gs
arpl
leave
cs
and
ss
mov
outsl
mov
aad
into
lea
xor
lcall
loopne
stc
filds
repz
sbb
push
jnp
mov
cld
mov
pop
mov
push
mov
ja
sub
outsb
fstps
loop
jae
mov
test
mov
jg
repz
shll
lods
push
std
push
push
pop
shl
adc
fisttps
pop
pop
mov
xchg
mov
jne
jne
dec
inc
movsb
mov
shl
stos
cli
mov
cmp
push
pop
loope
push
cld
mov
mov
addr16
es
jo
jbe
es
fcomp
mov
movsl
std
leave
sbb
sbb
and
mov
inc
aas
inc
leave
fstpl
pop
push
int
adc
inc
mov
cmp
xor
inc
sbb
scas
pop
cmp
jle
push
push
add
xor
cmp
jne
or
mov
andl
mov
adcl
xor
xorl
xor
sub
sub
mov
mov
xor
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
jmp
mov
and
out
mov
fldl
pop
addl
push
aas
nop
cmp
jo
or
lea
or
add
cwtl
nop
outsb
add
inc
scas
out
nop
mov
movsl
mov
mov
sbb
mov
into
push
adc
push
adc
mov
sub
call
popa
movsb
mov
xchg
cld
pop
adc
out
ficoms
lock
mov
insb
xor
add
pop
ficoml
adc
adc
or
scas
cwtl
imul
pushw
imul
and
sub
sub
cs
jnp
int3
pushf
mov
pusha
xchg
out
aaa
or
stos
outsb
mov
xchg
jno
fstpt
stos
testb
jecxz
inc
int3
sarb
jno
aam
xchg
sbb
sbb
popa
icebp
push
sbb
cmp
les
insb
nop
fidivl
call
jmp
jns
data16
imul
add
push
je
cs
icebp
dec
xor
push
lahf
xchg
xchg
xlat
ja
and
bound
rcrb
popf
sar
cli
add
pop
mov
cmpsb
outsb
sub
lods
or
mov
xor
pusha
lcall
xchg
imull
jmp
hlt
adc
inc
xchg
xor
or
xchg
dec
in
das
xor
ss
jo
fidivl
inc
jae
lcall
push
dec
jno
pop
enter
sti
stc
aaa
faddp
mov
inc
test
test
sbbb
pop
call
push
push
fildl
xchg
nop
arpl
sarb
push
lods
mov
cmp
neg
mov
mov
mov
stos
cmp
pop
add
lret
dec
rcl
cmpsb
js
aaa
mov
xor
pop
xor
or
xor
push
sahf
insl
adc
or
jbe
mov
insl
outsb
push
cmp
adc
mov
push
es
std
jb
fcmove
sbb
push
lea
jmp
dec
push
dec
mov
imulb
fstpl
ficomps
mov
xchg
cwtl
xchg
divl
push
add
clc
adc
pop
stos
arpl
ficoml
dec
jne
hlt
dec
std
cltd
fsts
lea
insl
push
out
lahf
lds
sub
lock
jle
push
insb
pop
iret
scas
mov
or
sub
nop
or
xchg
add
dec
cli
dec
sbb
and
sbb
repnz
and
loope
xchg
adc
jl
scas
or
ss
push
push
fidivrl
in
inc
fstp
jmp
pop
mov
sbb
jae
sahf
out
cmp
fists
mov
aad
or
jecxz,pn
add
jne
sti
pop
shll
cwtl
mov
pop
dec
add
push
jno
mov
stos
xor
andb
or
mov
inc
adc
adc
sub
insl
or
dec
fcoml
cld
pop
and
jb
pop
ret
pop
pusha
push
je
inc
mov
inc
outsl
popa
jg
pop
pushf
adc
movb
dec
mov
in
fstl
data16
mov
stos
pop
nop
jno
ds
adcb
repnz
das
fcmovbe
or
std
or
sbb
dec
lahf
add
testb
pusha
movsl
jl
sub
loope
sbb
inc
stos
fs
xor
sbb
pop
lret
stos
jb
shll
mov
dec
jl
jae
jge
sub
mov
xchg
aaa
repnz
fwait
push
sbb
inc
or
xchg
jmp
sub
lret
inc
xchg
xchg
aas
ret
outsl
jge
out
movsl
movsb
pop
call
dec
test
mov
loope
jb
push
les
cmpl
mov
sub
sbb
cmp
inc
inc
mov
clc
push
fldcw
insl
imul
mov
sub
nop
xchg
or
stc
jns
sbbl
lret
xor
cmp
icebp
push
mov
mov
sub
or
imul
sbb
inc
xchg
xchg
insl
jb
xchg
dec
dec
sub
sbb
jo
sub
jle
or
xchg
pop
mov
daa
inc
arpl
clc
jae
jne
mov
int
out
mov
xchg
out
cmp
inc
jg
stos
or
and
int
out
inc
mov
push
add
repz
enter
push
ret
adc
fdivrs
into
cltd
mov
test
out
cmpsl
mov
testb
popa
sbb
outsb
mov
nop
lods
pop
dec
xchg
sbb
dec
add
cmp
mov
mov
sti
add
push
push
sub
xor
fisubs
pop
mov
aas
pop
lret
loopne
xor
cmp
pop
xor
dec
or
lods
mov
mov
push
cmc
cmp
fldl
stos
dec
jp
fs
fistpll
es
les
aas
es
int3
ss
pop
mov
cmp
pop
addb
mov
shll
xlat
push
and
push
movsb
and
je
ja
data16
cmp
jne
adc
scas
sub
cvtdq2ps
dec
in
push
aad
dec
mov
push
or
addr16
out
mov
out
jmp
xchg
adc
sbb
add
sub
xchg
sbb
call
insl
outsb
push
loope
cmp
push
icebp
pop
sbbb
bound
pop
in
rcrl
cmp
cmp
test
xchg
pop
mov
add
mov
jae
cld
fldcw
filds
inc
out
xchg
loop
pop
cld
cltd
je
in
cmp
xchg
xchg
mov
dec
mov
add
in
fucomi
sbb
imul
cli
popa
pop
xlat
or
fs
das
dec
push
xor
dec
insb
int
cltd
insb
cltd
adc
fdivs
sub
cli
lock
mov
nop
cmpsl
sar
ret
xor
xrelease
jnp
jg
inc
xor
jns
xchg
adc
pop
sbb
out
mov
mov
lahf
fcmovnbe
pop
mov
jnp,pn
lret
sar
cwtl
in
aam
mov
cmp
out
test
pop
imulb
xchg
pop
rorl
lret
fiaddl
xchg
dec
xor
out
popa
fdivs
leave
pushf
jns
stc
ficoml
sbb
push
lods
sar
pop
cmp
xchg
cmpsl
and
add
sbb
sti
xor
cmp
stc
mov
movsb
loopne
sub
bound
inc
xchg
in
inc
lds
mov
hlt
jle
jle
in
nop
rol
addr16
sti
stc
mov
mov
aas
adcl
inc
mov
pop
cmp
mov
ljmp
nop
xchg
cmpsb
cs
push
jnp
add
test
cmp
sbb
aad
push
fdivs
mov
jp
in
xchg
dec
lret
int3
mov
push
jnp
dec
jle
js
push
jns
adc
push
xor
xor
insb
xchg
lea
add
adc
cmp
rcrl
mov
jg
xor
lock
aaa
xor
xor
dec
and
fsubrs
dec
cmpsb
ret
mov
and
sub
and
adc
lods
dec
mov
xchg
jns
lret
mov
fisttpll
pop
pop
insl
mov
jmp
mov
popf
and
es
repnz
and
xchg
jns
cmpsl
and
dec
or
push
push
daa
push
divb
popa
push
mov
jmp
test
push
push
mov
and
pop
cmp
in
dec
dec
xor
sbb
aaa
aam
fwait
lea
dec
pop
cltd
int
inc
dec
jb
sti
sbb
xor
dec
jecxz
jbe
mov
sub
inc
push
xchg
cmpl
sahf
mov
xchg
aam
adc
inc
push
rcrl
mov
adc
xchg
daa
dec
xchg
jmp
les
in
cmpsl
mov
loop
jbe
repz
push
nop
mov
and
popf
cli
int
mov
negb
cmp
inc
dec
cmp
mov
mov
mov
cmp
out
push
fs
clc
cmp
loop
fwait
or
inc
mov
test
ja
aam
fistps
mov
ret
xchg
insb
push
pop
gs
je
push
lock
adc
xchg
xchg
dec
mov
clc
ss
cli
stos
xchg
cmp
cwtl
inc
and
cmp
mov
mov
ja
aad
and
test
sub
int
ds
mulb
xor
pop
mov
fadds
xor
sub
xor
scas
cmp
push
sub
mov
mov
aad
sbb
inc
inc
nop
pop
pop
scas
in
sti
sbb
popa
js
adc
pop
call
testb
adc
stos
cli
push
mov
inc
pop
push
dec
push
loopne
push
incl
push
outsl
mov
or
dec
xor
lds
pop
push
jmp
inc
clc
inc
loopne
mov
pop
das
lods
xor
cli
pop
mov
xchg
in
aaa
ret
mov
lods
stos
inc
mov
cld
repnz
mov
adc
lods
add
insb
cmp
pop
aam
subb
sub
inc
push
push
std
aas
or
lcall
test
jns
and
scas
icebp
pop
pushf
imul
sub
cmp
enter
subb
lret
ret
add
adc
cmpb
lret
xlat
pop
and
and
mov
popf
adc
popa
mov
movb
data16
lock
dec
sahf
adc
pusha
pop
xor
test
pop
dec
lock
sub
mov
repz
lds
icebp
test
or
xchg
idivl
fiadds
pop
icebp
mov
out
roll
dec
sbb
jp
sub
cld
popa
inc
jno
stos
and
das
xchg
push
and
in
xor
jl
scas
xor
mov
stos
int3
subl
pop
xchg
je
pushf
ret
sarl
mov
lods
cmp
imul
test
lock
mov
js
out
ret
add
sti
stos
fs
jns
xchg
ljmp
or
lock
lods
jb
popf
in
loopne
mov
jl
nop
push
adc
pop
fucomi
popf
repz
pop
fwait
pop
cmpsb
ret
outsl
loop
lods
sbb
leave
jmp
fstpl
push
mov
lret
inc
push
jae
sahf
push
jae
ljmp
mov
add
pop
dec
repnz
push
divb
movsl
mov
jb
incb
push
pop
cmp
pop
pop
sbb
pop
test
and
add
mov
std
mov
push
mov
inc
stc
cld
lret
inc
iret
jne
in
icebp
pop
add
jmp
lods
aas
lcall
dec
ds
cli
fwait
dec
dec
nop
dec
mov
or
add
mov
mov
std
sbbb
cmp
mov
mov
bound
mov
mov
int
sbb
lds
mov
mov
lds
out
in
loop
xchg
inc
jo
jg
lret
sub
pop
xchg
push
stos
arpl
sub
mov
andl
or
lods
sti
mov
jno
pop
mov
imul
ja
jmp
shll
movsl
int
xchg
cwtl
adc
cwtl
cmp
into
jle
jno
jg
mov
lea
shll
loop
call
mov
in
pop
xchg
inc
mov
dec
aas
xor
sbb
sbb
inc
test
or
push
pusha
mov
fwait
mov
push
rorl
dec
and
cmp
sbb
cmp
sub
popf
rclb
mov
mov
mov
adc
repz
mov
outsl
jmp
stos
sbb
xchg
mov
adc
pop
pop
iret
fwait
lock
inc
movsb
adc
rcrl
mov
jae
into
jbe
hlt
fdivp
lods
adc
push
sbb
sub
out
movsl
xor
pop
add
aam
fstl
dec
dec
es
xchg
mov
pop
adc
or
andl
mov
lret
or
fldl
dec
imul
out
inc
pop
in
mov
test
xor
or
fstps
mov
cs
cmp
cmc
subb
cmc
ffree
cld
jl
cmp
dec
mov
pop
add
dec
dec
mov
push
inc
mov
mov
push
cmc
pop
in
ss
test
bndldx
sub
loope
ror
fdivl
adc
jl
lcall
jge
fisttpl
mov
jb
imul
inc
mov
in
aas
in
movsl
sub
cmp
mov
xchg
inc
push
mov
movsb
and
xchg
mov
dec
enter
je
sub
pop
add
mov
push
inc
lret
add
call
sti
clc
push
push
shlb
xchg
movsl
repnz
lods
mov
adc
mov
cltd
xchg
xchg
sti
ljmp
xor
lret
jecxz
inc
scas
daa
add
outsl
push
xchg
push
test
pop
addr16
add
imul
and
mov
shll
cmp
dec
inc
jmp
inc
lret
invd
jnp
lret
mov
sbbb
adc
cmp
test
sbb
dec
and
loope
mov
addb
mov
pop
adcl
adc
shrb
inc
inc
pusha
out
xchg
movsl
shrl
fsubs
into
arpl
cmpsl
pop
aaa
repnz
cmc
out
fnstsw
push
sub
std
dec
add
lock
cs
daa
jo
pop
mov
popa
sub
mov
push
sub
xchg
addr16
ret
sbb
pop
sub
xchg
movsb
jbe
insl
addb
pop
jno
push
pop
repz
sahf
or
pop
and
mov
pop
fwait
cmp
sbb
nop
add
out
popf
pusha
rorb
and
mov
and
jb
xchg
movsb
jno
packuswb
orl
pop
push
sbb
mov
and
mov
pop
cwtl
jle
cmp
push
gs
push
and
cmp
leave
mov
pop
push
cli
std
inc
pop
or
xchg
xchg
pop
repz
mov
xor
lea
xchg
cltd
lods
add
dec
inc
aad
cltd
nop
mov
mov
cmpsb
cmp
enter
mov
and
pop
dec
scas
lock
cwtl
mov
xor
and
je
repnz
les
ja
les
add
push
or
push
sbb
cmp
lds
mov
xchg
lods
mov
xchg
mov
mov
aaa
xchg
inc
movsl
or
sti
push
and
mov
ja
push
lds
sahf
test
sbb
arpl
jge
mov
xchg
pop
sbb
xchg
fs
lcall
addr16
mov
pop
addr16
sbb
mov
mov
jno
sbb
and
pop
scas
lods
jecxz
call
jp
lds
sub
daa
dec
and
xor
outsb
ds
inc
scas
pop
jb
push
sbb
sahf
icebp
lcall
out
test
into
cmp
mov
push
mov
loope
filds
lock
jae
fwait
xchg
cld
xchg
or
int
aam
scas
xor
dec
ficoml
adc
popf
jle
das
mov
xchg
inc
sub
jecxz
add
push
mov
dec
lret
dec
push
pushf
mov
lods
fldl
inc
mov
rorb
sbb
movsl
mov
dec
mov
inc
lods
cltd
mov
in
out
sbb
sub
ds
and
xlat
jmp
cmp
shl
push
stos
inc
jmp
mov
int3
jne
jl
movsl
xchg
jb
jmp
aam
addr16
xchg
mov
add
xor
xchg
mov
add
movsb
loop
fwait
mov
sub
adc
inc
cmp
sbb
testl
fdivrs
mov
push
jnp
push
test
aad
and
and
sub
cmc
dec
stc
shll
ss
xor
mov
add
pop
xchg
cmp
cmp
mov
or
daa
lret
fwait
sbb
repnz
outsl
gs
mov
jecxz
fisubrs
sbb
mov
sbb
ret
enter
into
insl
aam
leave
or
sbb
cli
ja
or
jno
cld
sarb
or
loopne
mov
xor
mov
push
loop
xor
xchg
mov
pop
xchg
and
xchg
cld
dec
mov
call
push
into
lods
lea
jmp
mov
inc
cwtl
insl
loop
rcrb
call
add
xchg
push
ret
int3
idivl
fdivrl
aaa
cli
outsb
inc
lock
sarl
jnp
js
push
aam
add
sbb
shl
add
inc
add
add
push
je
xlat
cmpsl
ficoms
das
insl
ror
adc
rclb
xor
lods
push
push
pop
cli
nop
sbb
dec
repz
pop
mull
pop
iret
xchg
mov
and
mov
cmc
push
cmp
jle
xlat
lret
add
sub
jbe
xor
bound
mov
clc
dec
pop
aaa
xchg
adc
in
push
jbe
push
lock
ret
enter
add
mov
ret
push
cld
jp
push
xchg
es
inc
fs
fbld
push
aas
jmp
cmp
mov
cmp
int
hlt
push
bound
adc
mov
inc
mov
addr16
adc
sub
dec
mov
aam
adc
jg
mov
pop
test
cli
mov
push
adc
daa
dec
xchg
or
pusha
pop
lcall
inc
pop
scas
mov
bound
pop
sub
shlb
fwait
jae
jecxz
jns
ljmp
xchg
ficompl
xor
cmpsl
adc
cmpsb
mov
fdivrs
push
xchg
loope
gs
xchg
shlb
jne
mov
mov
dec
xor
jne
push
nop
lds
dec
push
cmpsb
int3
mov
mov
shr
sub
mov
sbb
inc
mov
push
insb
jbe
fcompl
sub
ror
out
add
sbb
aas
inc
sub
jp
subl
mov
lods
or
enter
fcmovbe
dec
dec
mov
ret
loopne
sbb
xchg
jmp
xchg
jo
in
sbb
mov
inc
es
add
sbb
mov
inc
mov
mov
adc
cmp
jnp
pusha
stc
sub
xchg
jge
mov
mov
pop
data16
xchg
cwtl
push
and
jne
mov
xchg
add
sti
and
clc
and
mov
pop
les
cmpsl
enter
lret
stos
push
ret
xlat
movsbl
pop
cwtl
jge
cwtl
int3
sahf
fcom
in
sbb
pop
mov
outsb
cmpb
sub
dec
stos
test
fimull
sub
shl
mov
sahf
jno
inc
sub
adc
push
cmp
push
jg
mov
lahf
inc
pop
add
push
popf
rclb
hlt
sbb
sub
xchg
adc
cmpsl
clc
das
xchg
test
repz
sub
lds
cmp
mov
and
sbb
or
push
cmpsb
mov
hlt
cmc
cmc
adc
sbb
mov
xor
lds
std
pop
add
js
adc
and
cmp
std
shlb
je
sbb
and
stos
sbb
add
mov
out
pop
sbb
adc
sbb
adc
loopne
out
ret
lcall
mov
cmpsl
adc
jmp
out
or
mov
adc
popa
jnp
out
sbb
or
xor
mov
shrb
stos
lahf
adc
xor
clc
jmp
add
inc
mov
sub
mov
and
sbb
sub
push
pusha
sti
lahf
inc
mov
cmpsl
xchg
push
in
into
imul
lret
inc
in
in
mov
push
call
add
cli
and
fs
sbb
in
out
jo
add
mov
jbe
mov
aam
pusha
fs
or
cwtl
pop
das
int
jmp
adc
cmp
dec
jns
je
push
xchg
insl
mov
xor
into
lods
sbb
aam
ja
bound
and
fdivrs
push
test
sbb
data16
sub
fcomp
jecxz
jg
andb
outsb
and
jnp
add
jge
mov
jnp
aad
loop
idiv
pop
sub
push
cmc
scas
js
mov
cmp
xchg
std
iret
push
push
or
leave
aaa
xchg
ds
scas
sub
inc
outsl
out
adcl
and
mov
mov
mov
rorl
pusha
mov
mov
mov
add
dec
cmovge
out
xor
cmpb
ljmp
cs
fidivs
loopne
add
dec
lock
lock
adc
mov
dec
add
imul
scas
lahf
je
mov
pusha
mov
xor
inc
dec
xchg
inc
fsubrp
sub
add
sub
out
cld
push
in
in
jl
cwtl
mov
dec
out
arpl
adc
test
cmp
dec
stc
fcomi
jl
xchg
lods
pop
rclb
sub
sbb
movsb
cmp
scas
in
clc
fildll
jp
or
dec
fildl
insl
cmp
lahf
in
popa
cwtl
mov
lret
jb
fs
popf
mov
add
jle
pusha
ret
lods
in
push
std
lods
push
adc
xchg
mov
add
lahf
test
push
in
data16
mov
pop
add
mov
push
ret
jecxz
pop
adc
pop
inc
cmp
or
dec
inc
pop
adc
sbb
xor
mov
dec
dec
pushf
push
jo
test
cmovp
outsb
push
mov
push
sbb
hlt
hlt
sbb
mov
mov
shrl
negb
pop
insb
inc
nop
ret
dec
dec
jmp
or
inc
jo
cmp
and
cmp
push
adc
popa
out
cld
mov
call
test
and
dec
mov
sub
cltd
rcll
pop
ljmp
and
insl
inc
mov
fs
test
testb
cmpsl
sti
mov
ret
fcompl
mov
dec
outsb
lock
dec
mov
pop
in
xor
loop
in
or
mov
mov
mov
addr16
aad
idivl
pop
nop
cmp
jg
push
ret
cmpsb
mov
lcall
mov
nop
popa
lods
jle
and
rcl
loope
fsts
push
cmc
mov
icebp
xor
inc
jnp
adc
fisubl
cmp
decl
jge
and
and
test
cmpsl
cmc
jle
cltd
fs
mov
mov
icebp
lock
xchg
adc
xchg
mov
shrb
cmp
andl
push
fbstp
dec
cld
pop
mov
adc
imul
in
or
and
jecxz
addr16
adc
dec
mov
jne
inc
mov
push
arpl
pop
test
add
sub
repnz
out
icebp
push
push
je
xor
add
xor
jge
sub
call
lock
in
enter
mov
popf
push
inc
rcl
call
mov
cld
pop
mov
sub
mov
scas
aaa
and
xchg
daa
and
jb
out
rcrb
xchg
mov
subb
add
push
inc
dec
push
add
jne
pop
pop
pop
ficoml
lds
xchg
lods
mov
leave
cmp
inc
push
icebp
sarb
test
inc
push
out
pop
nop
lahf
addb
sbb
sbb
sbb
fcmovne
stc
jp
cmp
mov
sahf
push
data16
sbb
mov
fcomi
out
sti
sbb
inc
icebp
pop
inc
push
and
movb
mov
sub
test
jg
ljmp
sahf
lahf
mov
test
icebp
lods
jmp
xlat
push
shll
dec
mov
jmp
or
sti
xchg
cld
ret
add
xchg
dec
push
cmp
insl
jl
add
xchg
arpl
jg
lret
nop
out
mov
pop
pop
in
ret
mov
mov
jb
xchg
xorl
and
push
leave
test
push
jbe
movsl
test
and
xchg
jbe
daa
aas
aad
call
fisttps
dec
sbb
bound
dec
xchg
lcall
mov
dec
jg
jmp
repnz
xchg
adc
outsb
sbb
jg
mov
mov
xchg
adc
int
nop
inc
pop
out
aam
jg
je
movsl
pop
mov
adc
push
cmp
or
jnp
cltd
and
inc
ja
jmp
xchg
xchg
mov
push
inc
ret
std
cltd
xchg
push
xchg
push
inc
lret
pop
xor
add
aad
mov
das
arpl
mov
push
scas
push
mov
and
push
cwtl
ret
mov
ficomps
mov
jbe
hlt
ljmp
jmp
dec
mov
inc
adc
fbld
cmpsb
mov
test
and
repz
jb
pop
mov
hlt
cmp
out
rcrb
jb
add
popf
fwait
or
clc
shl
mov
scas
mov
test
xor
cli
dec
lret
jge
pop
push
movsl
mov
sbb
mov
xor
out
mov
xor
iret
loope
add
jp
xor
das
andl
nop
lret
mov
flds
pop
and
cmp
popa
push
cmp
incl
add
in
mov
jns
jo
insb
fldcw
xor
andl
xchg
xchg
icebp
sub
mov
ja
cs
shlb
mov
sub
cmp
pushf
xchg
scas
and
pop
jl
jns
push
aas
loope
push
xorl
adc
enter
nop
cmp
cli
xor
into
sti
push
fstl
lods
ja
rcll
int3
je
xor
cltd
cli
mov
sub
andb
cli
repnz
jbe
dec
aas
jo
xchg
lods
pop
adc
fcmovne
je
mov
push
jb
inc
xor
icebp
mov
mov
out
outsb
xor
mov
out
shll
push
ljmp
mov
pop
inc
push
fstpl
dec
or
sbb
iret
daa
xchg
cmc
xor
ret
push
cmp
stos
mov
mov
scas
aam
cmpsl
xchg
ds
scas
enter
push
dec
or
int3
mov
cmp
outsl
ret
cmpsl
sub
mov
inc
mov
push
repnz
imul
popa
addb
push
sub
jo
jns
xchg
fsubs
jbe
mov
cmp
cld
dec
imull
fistpll
or
and
ja
inc
cmp
push
fs
sbb
sahf
push
add
sub
shl
daa
jge
cmp
in
mov
mov
aam
pop
mov
loop
push
push
cmpsl
in
cmp
movsl
dec
mov
pop
or
mov
push
dec
add
jns
jmp
push
out
test
adc
out
jmp
jo,pn
js
xor
in
lods
fldenv
and
cmc
push
sarb
cmp
decb
sahf
adc
jecxz
ds
add
and
enter
inc
mov
mov
lcall
sbb
add
jbe
push
jge
fbld
dec
es
mov
notl
mov
mov
sar
or
loopne
gs
sbb
mov
cs
nop
into
les
in
jo
outsb
jmp
push
xchg
popf
mov
testb
sub
mov
arpl
cld
add
pushf
cltd
lahf
aad
shrb
mov
mov
push
loopne
iret
sub
mov
out
dec
mov
cwtl
jns
cmp
mov
popa
hlt
in
jbe
shl
les
adc
sbb
lds
pop
aas
or
mov
scas
pushf
sbb
mov
add
jecxz
movsb
pandn
jmp
daa
cmp
cmp
mov
addb
adc
add
ja
das
je
popa
loopne
flds
jp
ret
jecxz
in
es
adc
out
xchg
enter
das
xor
enter
cwtl
pop
push
subl
mov
xor
xchg
mov
push
xor
jbe
lock
fldl
movsl
xlat
into
mov
xor
rcll
adc
sbb
sbb
xchg
cmp
cwtl
lret
pusha
xor
andb
out
ja
ljmp
jae
push
adc
call
push
ror
cmpsb
sbb
std
outsl
loop
xor
mov
shl
inc
mov
fbstp
pop
sahf
lahf
mov
repnz
jmp
rcl
add
fisttpll
push
mov
add
out
in
pop
imul
fmuls
mov
mov
sbb
iret
ljmp
insl
inc
insl
outsl
xor
mov
lods
mov
pop
pop
cwtl
jo
jnp
lods
daa
insl
testl
dec
icebp
mov
dec
repz
test
cs
inc
imul
push
pop
mov
adc
cli
sbb
lods
sub
push
jno
loop
or
fs
xchg
repz
pusha
lods
push
mov
sub
add
fists
push
jmp
adc
stos
imulb
push
aaa
cmp
jbe
sbb
insb
pop
add
nop
repz
addb
mov
je
pop
pop
mov
repnz
xor
adc
enter
inc
ret
mov
repz
cmp
sub
popf
xor
lods
add
jo
fdivrl
pop
xchg
fidivrl
pop
adc
sti
cmp
out
jne
fcomi
ret
push
inc
in
cmp
and
lods
push
jp
push
outsb
leave
mov
xchg
test
lret
xchg
xchg
lret
dec
in
mov
mov
pop
jg
pop
lods
jmp
mov
cli
xchg
outsb
sbb
push
rol
mov
fwait
jae
push
xor
scas
fst
rorl
inc
into
mov
cmp
cmpsb
stc
roll
dec
jle
roll
jg
icebp
jle
sub
mov
adc
lock
daa
sub
loop
jne
mov
call
xchg
dec
mov
vmovhps
out
jb
fnstcw
cmpsl
loopne
mov
xor
in
sub
sbb
adc
ds
mov
adc
mov
mov
push
jae
pop
cmp
mov
lahf
sbb
or
fldl
adc
pop
out
scas
push
xchg
lea
inc
jbe
imul
mov
mov
adc
neg
jns
push
adc
in
out
inc
mov
xchg
out
aaa
rcr
std
cmp
mov
bound
and
push
pop
stc
loope
test
in
lods
out
in
sahf
shl
jecxz
sub
xchg
test
mov
test
jge
sub
xchg
xor
sahf
pop
out
push
xchg
xchg
add
xchg
mov
aaa
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
movsl
mov
sbb
scas
mov
nop
xchg
cmp
sub
addl
hlt
pop
loopne
in
mov
outsb
popf
cmp
cmp
or
dec
pop
stos
fidivs
pop
gs
push
add
dec
mov
mov
mov
lret
bound
mov
inc
or
out
std
in
insb
mov
adc
lahf
or
lock
scas
sbb
repz
cmp
sbb
hlt
adcb
push
sbb
addr16
dec
loope
add
mov
pop
sub
pop
mov
mov
push
icebp
lock
loopne
jmp
mov
repnz
orl
inc
cmp
icebp
mov
or
jb
and
sub
test
adc
sar
mov
add
jge
iret
mov
pop
sub
adc
or
add
lods
ljmp
jecxz
add
loop
movaps
sbb
fsubrl
mov
xchg
lods
adc
push
and
or
nop
mov
lock
daa
xchg
xor
scas
ja
out
pop
stos
cld
scas
or
loopne
mov
inc
adc
jne
loop
call
imul
and
stc
dec
test
inc
adc
pop
scas
mov
nop
push
inc
iret
fimull
cmp
xor
or
cmp
stos
data16
dec
sub
add
sbbl
rcr
scas
lea
dec
push
inc
sub
inc
cmp
ljmp
cwtl
es
fdivrs
dec
faddl
lahf
pop
arpl
leave
sub
aas
xorl
mov
loope
out
lahf
xchg
in
xchg
push
mov
scas
inc
enter
push
mov
fstpl
add
fstl
icebp
cli
dec
add
xor
test
lds
jne
mov
pop
or
bound
scas
movsl
stos
ficomps
add
pop
js
cmpsl
cmp
cmp
dec
xchg
rdtsc
mov
xor
scas
mov
lcall
xchg
cmpsl
inc
pop
nop
jp
subl
aam
mov
lret
test
imul
add
jb
ficompl
jmp
xchg
call
jp
xor
lahf
pop
in
int
das
or
aad
into
mov
lret
inc
inc
sbb
repnz
adc
push
cmp
mov
shll
jg
push
adc
add
jl
add
icebp
negb
pop
fsts
mov
shlb
cmp
push
shlb
dec
push
cli
ret
push
add
or
push
cmp
call
cmp
mov
inc
lret
rcrb
xor
movsb
std
jge
ret
int
movsb
aas
adc
out
repz
lcall
dec
dec
in
testb
jbe
lods
or
push
pop
push
cmp
pop
jmp
dec
mov
es
push
std
inc
jle
mov
mov
lret
popa
mov
sub
xchg
or
jecxz
inc
jle
lcall
lcall
pop
shlb
jae
mov
outsl
leave
push
sub
movsb
push
jp
pop
imul
mov
mov
and
mov
mov
int3
sub
xchg
je
jno
dec
cmpsl
mov
adc
mov
js
add
loopne
dec
ss
les
push
push
fwait
sub
cs
mov
ds
insb
lret
xchg
mov
inc
push
and
adc
lahf
jle
jg
xchg
das
push
ja
int3
orl
dec
xor
inc
jle
rolb
xlat
lods
xor
lcall
jp
movsl
outsb
adc
sbbb
cmc
dec
dec
mov
xor
pop
dec
lock
outsb
loop
imul
xor
sahf
sbb
inc
scas
jbe
push
negl
daa
add
clc
cmp
scas
fwait
xchg
and
stc
xchg
stos
mov
mov
jl
pop
es
movsl
jp,pt
mov
sahf
scas
lret
jl
xchg
cli
jno
lea
mov
push
popf
rolb
nop
sub
in
xorb
aad
jmp
aam
inc
mov
loopne
or
mov
xor
outsb
push
and
adc
dec
add
insb
push
add
fisttps
or
int
lock
aas
push
cwtl
pop
lcall
inc
pop
adc
dec
jb
std
adc
xchg
inc
ret
xchg
cli
stos
enter
mov
mov
ss
test
je
mov
fstl
xchg
idivl
and
add
and
inc
cmp
adc
mov
and
das
or
ds
xchg
push
inc
push
or
cli
jmp
aaa
arpl
mov
dec
leave
ficompl
hlt
push
pop
rcrb
not
js
pop
movsl
mov
call
pop
sbb
sub
imulb
or
cmp
dec
lahf
inc
je
fwait
sbb
lods
dec
push
cmc
out
dec
dec
out
xchg
sbb
cltd
je
stos
inc
lea
shlb
push
sub
push
xor
xchg
push
ss
push
cmp
sbb
stc
aaa
int3
aas
mov
mov
xchg
andl
ja
inc
fistl
xor
movsb
jge,pn
inc
test
jo
mov
hlt
out
jmp
testl
arpl
or
inc
pop
stos
sbb
sub
mov
mov
in
push
mov
pop
sbb
cmp
bound
push
sub
jecxz
pop
push
push
sbbb
int3
or
test
addr16
lret
xchg
loope
xchg
cmp
xor
lock
leave
lret
mov
push
dec
popa
mov
stc
sbb
mov
xchg
pop
jp
or
dec
mov
xchg
cmc
adc
cmpsb
adc
scas
xor
xchg
sbb
dec
xchg
and
push
xor
arpl
xchg
les
imul
stc
idiv
jg
lret
pop
mov
xchg
js
jmp
push
cmp
ret
mov
or
cmp
or
ja
data16
repz
mov
leave
xchg
pop
jnp
mov
repz
arpl
sbb
dec
jle
mov
pop
mov
ret
mov
mov
sar
inc
xchg
js
dec
cmp
hlt
out
insb
stos
clc
lret
xchg
js
xchg
rcrl
lds
inc
mov
subl
add
add
ffreep
sbb
test
mov
test
mov
jp
xchg
dec
retw
cmp
adc
mov
or
cmp
call
fisubrs
jb
xlat
push
out
call
loope
mov
push
push
and
fadds
out
iret
in
out
and
mov
mov
cmc
dec
xchg
out
cmp
mov
pop
push
jb
call
orb
cwtl
jb
cmp
mov
adc
and
repz
out
xor
or
fdivrl
imul
scas
mov
and
les
or
rcll
sbb
gs
sti
jb
bnd
imul
ret
aas
cmp
mov
jl
or
mov
jle
mov
add
jle
dec
mov
aas
cmp
or
shlb
insl
aam
xchg
mov
sbbb
int3
xchg
icebp
inc
mov
cmp
pushf
pop
mov
mov
aaa
adc
jmp
push
mov
flds
add
or
xchg
pop
out
stos
jae
je
inc
adc
cld
mov
fwait
pop
rcr
loop
pop
adc
mov
push
jl
or
jg
mov
mov
repnz
jge
sub
rorl
test
mov
mov
pop
mov
pop
adc
inc
mov
shl
fcompl
stos
or
jle
mov
bound
pop
scas
push
icebp
clc
add
dec
insl
ljmp
cmp
push
dec
dec
insb
subl
into
mov
addr16
push
inc
lret
int3
and
sbb
ss
fcoml
enter
jecxz
fcom
shrl
aad
or
pop
and
dec
mov
jno
mov
arpl
mov
fsubl
std
xchg
idivb
vpmaddwd
cmp
ret
decl
imul
loope
dec
cmp
in
mov
add
in
push
repnz
sbb
into
pop
sub
testb
sbb
imul
rcll
adc
jnp
jge
sahf
shll
jp
fnstsw
les
cmc
jp
scas
call
sarb
shll
das
sarb
xor
inc
jmp
scas
mov
jno
mov
xchg
push
inc
fstpl
push
pop
mov
sub
jmp
sub
movb
sbb
jecxz
loope
push
fwait
in
cmpsl
mov
jo
cmp
fnstenv
push
notb
xchg
push
popf
push
and
sbb
fwait
mov
adc
stos
xor
out
sti
jne
xor
in
ds
dec
push
nop
fs
call
imul
inc
add
sub
adc
mov
cmpsb
xchg
mov
cmp
inc
loopne
enter
xor
fisttps
pop
outsb
lods
fyl2x
testl
outsb
leave
ss
push
lcall
bound
or
outsl
xor
inc
and
fldt
and
push
aam
pop
daa
lcall
fs
xchg
sahf
sahf
inc
leave
dec
or
sbb
in
lock
pop
lods
std
je
mov
int
lret
addr16
enter
xchg
mov
mov
sub
cs
pop
das
jecxz
in
fstl
addr16
clc
cmpsb
lods
loopne
pop
xor
add
imul
and
int3
test
sbb
mov
cld
das
mov
pop
in
sub
adc
inc
popf
mov
inc
add
xor
cmp
movsb
in
pop
ds
fsubrp
or
js
icebp
jno
test
shll
test
data16
and
test
dec
mov
inc
sbb
cmpsb
sbb
or
cli
lcall
jnp
push
enter
or
cwtl
add
xor
sti
addr16
push
mov
mov
jmp
add
mov
add
in
call
push
dec
das
pop
arpl
addb
arpl
ret
nop
cltd
fld
insb
cli
aad
lcall
sub
lahf
dec
pusha
filds
gs
jl
iret
aad
sbbl
push
pop
dec
stos
lahf
sbb
pop
adcb
dec
inc
pop
dec
xor
popa
jmp
inc
xchg
mov
or
aam
xchg
sar
imul
addr16
jnp
xchg
dec
in
outsl
dec
dec
aam
xor
xor
mov
push
push
jne
arpl
imul
imul
lds
scas
aad
inc
nop
gs
iret
mov
and
lds
dec
mov
lock
psllq
jmp
pop
data16
hlt
mov
lret
js
mov
or
mov
pop
sbb
movsb
les
lock
pop
repnz
outsl
or
outsb
hlt
xchg
arpl
test
xor
call
adc
loope
pop
push
mov
add
and
outsl
iret
out
rolb
dec
xchg
rolb
xchg
into
or
mov
mov
cltd
in
mov
out
into
or
and
pmulhuw
fisttpll
mov
rol
out
lods
pushf
pop
ret
mov
push
leave
jecxz
stc
or
stos
add
stc
pop
sti
orb
sbb
xor
dec
sarb
aas
addb
insl
cmpsl
sub
xchg
mov
aaa
sarb
lods
mov
xchg
mov
shlb
dec
roll
clc
sub
cmp
mulb
insb
inc
sub
sahf
pop
jno
push
in
mov
cmpsb
pusha
push
idivl
push
sbb
int
jne
cmp
imul
inc
call
mov
out
sub
xchg
movsl
call
sub
in
sti
and
test
dec
jge
inc
cmp
fldl
leave
jo
lods
shll
addr16
loop
stc
inc
stos
push
lret
mov
lods
adc
mov
pop
int
sub
addr16
call
pop
pop
and
xchg
movsl
pushf
imul
aas
test
push
dec
push
test
cltd
movsl
icebp
push
xlat
pop
out
orl
adc
pop
dec
js
data16
loop
movsl
push
pop
mov
test
out
mov
repz
stc
pop
das
cmpsl
in
out
mov
aam
pop
push
pop
in
aaa
mov
pop
push
rcrl
push
cli
cmp
xor
xchg
mov
mov
mov
stos
cmpsb
xor
xchg
out
pop
mull
cmp
or
mov
mov
aaa
scas
loope
fstl
cmpsb
push
stos
xor
ds
nop
add
add
sbb
xchg
xchg
sbb
lret
dec
xlat
sub
sbb
je
es
dec
adc
and
idiv
mov
stos
cmp
sbb
push
mov
dec
shll
lock
add
jno
mov
mov
divl
mov
and
or
daa
mov
inc
fistl
adcb
dec
xorb
mov
push
rorb
je
icebp
scas
push
sub
or
cwtl
pushf
fadds
stos
inc
rolb
lcall
int
mov
lsl
iret
jno
and
out
incb
outsb
jmp
movsb
cmpsl
push
dec
push
sbb
inc
imul
fistl
mov
push
add
adcb
mov
pop
push
fstl
clc
out
pop
mov
add
addl
dec
xor
mov
mov
mov
add
lret
addr16
fcomp
or
pusha
sbb
sub
sub
out
aas
rcrb
lock
mov
in
mov
shr
cs
lods
loope
jns
inc
jae
addr16
in
jge
mov
add
and
jnp
mov
insl
mov
pop
dec
jmp
das
cli
xor
outsb
fs
jp
outsb
cmp
out
adc
test
out
clc
dec
hlt
test
daa
dec
in
or
pop
and
cld
mov
push
leave
in
test
add
stc
les
jp
nop
sahf
addr16
mov
shlb
dec
out
lret
inc
test
mov
imul
scas
in
inc
sahf
lock
push
jge
out
outsb
inc
jns
push
sbb
orl
sub
sub
gs
mov
cmp
imul
jbe
pushf
mov
lahf
push
push
call
pop
pushf
push
enter
iret
or
mov
ja
popf
into
push
dec
les
xor
stos
dec
in
and
sti
outsb
sbb
mov
jmp
clc
mov
jne
sti
push
add
fdivr
ret
and
fstl
daa
shr
add
jno
pop
inc
xchg
repz
movb
adc
dec
mov
fsubrl
dec
ds
xchg
out
cmpsl
and
push
sub
aas
pop
push
popf
inc
jae
xlat
push
jb
lds
inc
inc
int
arpl
dec
fsubs
inc
push
das
add
or
inc
xchg
fldl
ja
push
jge
sub
out
sub
mov
lock
mov
movsb
inc
das
sub
bound
mov
cmpsb
and
dec
xchg
repnz
inc
xor
ret
pop
inc
inc
insb
mov
jns
push
mov
mov
jo
shlb
xor
jecxz
push
xchg
movsl
in
cmp
outsb
fcomps
hlt
hlt
pop
mov
fnstcw
mov
jmp
das
add
aad
dec
mov
jb
scas
push
xor
clc
fsts
out
cmp
in
ja
aas
fstpl
push
fsubrs
mov
insb
mov
pop
out
mov
fs
add
cld
rcrb
jl
lds
arpl
pop
xchg
fadd
and
cli
mov
outsl
loope
je
cmp
dec
sub
call
inc
jnp
int
dec
fistl
adc
adc
mov
ss
aaa
int
dec
xchg
dec
inc
ds
aad
int
test
push
mov
out
imul
dec
lods
or
and
sub
test
sbb
jmp
sub
or
sbb
mov
or
mov
xor
das
or
pop
leave
ds
int3
insb
test
aas
shrl
push
push
inc
jne
imul
in
hlt
push
daa
mov
dec
push
xor
bound
push
or
enter
xchg
pop
pop
movl
xor
dec
jns
int
lcall
std
enter
shrl
sub
dec
inc
xor
cmp
test
dec
jno
sbb
add
cmp
pushf
popf
das
and
lods
xor
mov
into
ja
sbbl
sahf
adc
add
mov
fbstp
add
xchg
andl
mov
and
jo
les
mov
and
mov
mov
shl
enter
add
or
sub
mov
pop
add
enter
int3
div
mov
and
mov
movsb
je
lods
outsb
xchg
fs
dec
pushf
xor
and
roll
shll
jmp
or
jnp
and
mov
jp
int
jg
add
jg
xchg
ss
cmp
outsb
ljmp
mov
outsb
movsl
pop
mov
push
mov
sbb
ficoms
xchg
lret
xchg
lock
inc
stos
test
push
in
call
jbe
rorb
jns
add
subl
xlat
cmpsb
push
fsubr
fucomi
dec
cmpsb
insb
sbb
lock
fists
sti
cli
pop
rcll
ja
movw
stc
cs
repz
add
repnz
cmp
jmp
lds
ja
icebp
add
nop
add
push
jmp
arpl
dec
dec
add
ret
push
out
jns
xor
dec
in
rcrl
and
rorl
jp
push
stos
pop
jo
or
mov
adc
les
add
add
push
test
mov
jp
inc
cmp
xchg
outsl
mov
add
pop
into
fidivrs
aas
and
lret
cs
pop
or
cmp
xchg
add
cwtl
addl
movsb
lods
pop
jg
nop
add
test
jo
call
scas
xorl
mov
pushf
je
xchg
ljmp
adc
repnz
sub
lea
mov
fstpt
insb
fwait
adc
mov
repnz
dec
push
les
mov
fcmovu
dec
repz
dec
fisubl
inc
fadds
jecxz
and
ret
inc
inc
cmp
cmp
outsl
paddusb
push
imul
leave
pop
movsb
imul
out
pop
push
add
push
sub
mov
mov
inc
test
pop
shll
pop
dec
ror
xchg
imul
in
shlb
es
xchg
cs
jle
cltd
testb
add
push
in
inc
add
mov
mov
pop
adc
not
daa
pop
add
scas
inc
arpl
xor
pop
sub
jb
push
icebp
and
cwtl
mov
xlat
jb
pop
pop
insl
inc
lret
add
lock
mov
ja
jbe
repnz
push
cmp
xchg
push
xchg
xchg
push
test
out
push
inc
adc
js
sub
insl
jns
loope
mov
iret
mov
repz
mov
dec
push
into
mov
xchg
pop
dec
out
mov
push
mov
pop
call
cli
aam
or
adc
lock
scas
icebp
aad
outsb
pop
mov
int3
jno
aas
int
sbb
mov
inc
sbbb
sbb
push
hlt
mov
enter
xlat
mov
mov
ds
daa
jb
daa
repz
mov
push
adc
lds
mov
adc
aam
adcl
lret
xchg
adc
push
add
les
and
cmpsb
outsl
mov
xorl
mulb
xchg
xchg
push
cmc
out
sub
inc
jg
mov
xlat
xchg
lock
das
int
xor
push
lcall
jecxz
pop
dec
outsl
pop
cmp
ja
test
pop
sub
or
pop
inc
lret
imul
fcomip
jg
push
addr16
test
adc
ds
in
dec
sarl
dec
fmul
nopl
mov
xor
popa
jl
cmp
mov
push
pop
addl
shrl
pop
inc
sbbb
dec
mov
icebp
push
xchg
mov
jns
jnp
rorb
pop
or
or
mov
push
jnp
push
data16
adc
sub
jl
jmp
repnz
cmpsb
push
push
aad
jo
sub
xchg
add
daa
cmp
in
inc
adc
push
jp,pn
mov
pop
int3
dec
adc
cmp
jne
xor
fidivrl
icebp
mov
sbb
andb
int3
test
xor
jle
lods
je
sub
ljmp
push
mov
cmp
jbe
or
dec
mov
inc
fnstcw
push
pop
xchg
js
mov
xchg
ret
cmpsb
mov
dec
jmp
rol
inc
pushf
fwait
repnz
dec
in
lret
sti
inc
mov
xchg
or
inc
xchg
sbb
push
fldl
cwtl
sub
lea
lcall
add
ja
mov
data16
push
mov
orl
insb
sarl
not
sbb
rcrb
imul
scas
sub
bound
adc
leave
inc
push
and
pop
sbb
lock
cmp
cmp
in
mov
pop
mov
push
push
mov
leave
lahf
aam
ds
and
push
cs
jns
dec
push
and
sar
cwtl
call
xchg
insb
pop
dec
in
sub
xchg
inc
push
and
mov
arpl
lea
pop
sbb
add
mov
mov
ficomps
ds
loopne
aaa
xchg
int
ss
scas
jno
rep
lret
xlat
add
out
stc
stos
stc
xchg
xchg
sbb
xor
movsl
mov
stc
push
cmp
jae
cs
xlat
inc
or
lret
rcl
fcmovne
insb
aam
popa
fstpl
add
in
stos
arpl
push
jg
jns
sub
int
clc
fmuls
xor
out
mov
jae
cmc
cmpsl
cltd
mov
and
pusha
ja
push
inc
sbb
inc
sbb
iret
lds
clc
or
shlb
push
orps
scas
jecxz
inc
in
mov
orb
jo
xchg
out
mov
in
cwtl
mov
and
stos
pop
adc
out
rolb
stc
aas
push
push
inc
ret
movb
enter
lret
and
xlat
clc
sub
push
push
adc
xchg
pushf
pop
ret
inc
xchg
mov
into
inc
call
sbb
adc
lods
adc
sbb
fstp
incb
or
hlt
mov
adc
subl
pop
cli
or
dec
movsl
xchg
enter
add
ja
test
sub
in
mov
insb
and
lahf
insl
inc
or
xchg
je
mov
pusha
mov
sbb
pop
adc
repnz
sub
mov
sti
jnp
mov
sub
mov
jecxz
iret
xlat
push
jno
mov
xor
lods
in
inc
add
mov
push
scas
les
dec
push
jno
in
push
dec
adc
and
dec
out
xor
xlat
jnp
cmp
inc
jno
arpl
jmp
sar
sub
cmpl
pop
jp
jns
pop
data16
sub
daa
cmp
les
movsb
cmpsl
sbb
inc
adc
xor
repz
cmp
cmc
int
outsl
mov
rorl
or
movsl
mov
mov
arpl
add
mov
cld
sbb
lds
ja
mulb
xchg
insl
cmp
mov
stc
xor
lahf
push
hlt
or
ds
dec
sti
scas
mov
mov
pop
stos
jl
nop
andl
inc
pop
iret
sbb
arpl
mov
adc
mov
cmp
nop
shrl
push
mov
adc
cmpsl
push
sub
scas
push
add
rclb
cmpsb
or
mov
jnp
loopne
dec
loop
add
ror
shlb
aad
push
xor
adc
nop
add
pop
les
fdivs
mov
sbbb
and
inc
out
int3
mov
icebp
fwait
add
ja
inc
or
scas
cli
mov
mov
push
add
xor
xchg
into
ljmp
mov
into
push
jl
mov
jg
scas
in
fildl
lcall
push
cli
add
mov
adc
mov
mov
lcall
sbbb
call
adc
dec
rolb
pop
dec
fnstcw
xor
stos
sahf
in
movsl
cwtl
pop
ret
scas
dec
add
xlat
adc
repz
xchg
adc
fs
adc
ds
mov
inc
mov
mov
data16
add
adc
fwait
xchg
mov
nop
test
sbb
mov
clc
push
iret
pop
jns
push
mov
or
add
mov
and
js
insb
mov
out
jo
mov
stos
jmp
push
stc
xor
or
jl
and
cltd
xor
push
xor
pmullw
loope
mov
jbe
xchg
sub
scas
xor
dec
or
jmp
add
dec
pop
bound
xchg
cmpsb
mov
lds
mov
xchg
sti
cmp
call
adcb
add
jno
lcall
les
push
mov
inc
mov
pop
out
inc
negl
cmp
push
aas
clc
test
dec
mov
fistpl
adc
dec
push
icebp
shlb
arpl
xchg
sahf
fnstenv
pop
jle
sbb
les
inc
cmpsl
push
push
je
jl
movsl
cmc
cmp
jne
sub
mov
mov
sub
add
popf
sub
test
incl
imul
js
imul
sub
xor
xchg
cmp
dec
or
adc
bound
inc
int
movsb
lret
xchg
in
mov
ret
in
xchg
add
sarl
add
jne
ret
inc
and
stc
mov
jb
lods
out
or
cli
jo
xchg
mov
xor
data16
xchg
pop
mov
dec
or
cmp
leave
mov
ret
lods
xchg
lcall
dec
mov
mov
and
pop
cmp
xchg
pop
push
jne
aaa
xlat
nop
or
movsb
mov
cvtps2pd
fisttpl
push
vunpckhps
pop
lock
push
mov
sub
je
lret
xor
pop
or
in
xor
jne
scas
push
inc
out
xchg
sbb
std
mov
call
xchg
in
inc
int
and
sub
push
xchg
insb
ja
mov
inc
adc
insl
cli
idiv
subl
fsubrl
xchg
mov
xchg
cmpl
cmp
inc
xor
jbe
dec
push
sbb
idiv
les
pop
jge
testb
cmp
icebp
sbb
cmpsb
pop
or
xchg
pop
rcr
dec
push
ljmp
xchg
xor
imul
add
sbb
fldt
cmp
jnp
fisubrs
pop
icebp
sbb
pop
les
mov
jo
dec
lock
jmp
add
imul
repnz
mov
mov
pop
cmc
xlat
in
sub
imul
mov
xor
icebp
les
inc
loopne
cmp
jecxz
pop
xchg
fnstenv
andl
mov
cmpsb
add
adc
or
sub
ror
mov
dec
mov
xchg
orb
pop
or
pop
pop
mov
loopne
out
mov
das
inc
je
lret
mov
and
pop
push
daa
and
jne
and
negl
mov
std
mov
or
add
inc
lock
ljmp
andl
nop
cmp
xor
mov
pop
lods
out
cmpsb
ja
popf
aad
in
mov
mov
sub
shlb
jecxz
ret
xchg
arpl
repnz
jp
fbld
or
das
andl
ja
mov
fwait
jp
dec
cmpsb
popf
js
outsb
jle
or
es
dec
test
dec
mov
nop
imul
outsl
outsl
sub
mov
decl
sbb
add
push
fiadds
sbb
sub
out
ljmp
movl
dec
xchg
and
sub
xchg
fwait
aam
in
cltd
inc
outsl
add
push
add
jmp
pusha
ds
pushf
loop
dec
adc
jae
cmp
push
enter
cmp
sbb
insb
cs
out
hlt
cmpsb
jae
push
push
add
jb
inc
or
int
cmp
lods
lahf
or
jecxz
call
push
sbb
inc
aaa
or
inc
shl
dec
xor
scas
cltd
je
or
dec
sahf
or
jb
sbb
push
mov
out
sbb
ficomps
out
popf
xchg
mov
test
inc
repnz
sub
rolb
xor
cmc
fwait
out
or
and
sbb
sahf
dec
inc
or
subl
mov
xor
push
cli
adc
int
adc
pop
icebp
cltd
fisttps
lods
mov
sbb
lahf
repnz
fiaddl
sub
icebp
das
jnp
lcall
ret
rcr
movsb
sub
mov
push
lea
ja
fwait
test
adc
xchg
jb
inc
fstps
sbb
imul
outsl
pop
scas
ret
inc
push
nop
pop
push
rcl
xorb
imul
xor
jg
nop
sbb
lock
pop
sahf
je
es
xchg
add
iret
popf
and
push
inc
push
inc
inc
inc
pop
pop
adc
adc
mov
mov
xchg
sub
out
insl
sbb
arpl
xchg
fstpt
mov
adc
sbb
add
cmp
add
std
cmpsb
shrb
jge
shrd
xor
dec
int3
pop
in
push
xchg
push
and
movsl
nop
insb
fstps
mov
and
loop
inc
mov
fdivl
cmp
xor
mov
imul
pop
mov
pop
fists
push
xorl
insl
cmp
imul
test
enter
cwtl
lcall
clc
stc
xchg
push
mov
adc
mov
pop
jnp
pop
cs
lret
sbbb
add
addl
lahf
pop
sar
or
cmp
repz
andb
leave
in
stos
inc
dec
push
xchg
mov
jge
dec
inc
fwait
mov
mov
xor
and
outsl
or
popa
test
inc
or
jae
and
stos
push
xchg
in
inc
es
cmp
pusha
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
movl
push
adc
movl
subl
mov
push
mov
adcl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
orl
add
andl
mov
mov
addl
test
movl
je
movl
cmpl
je
cmpl
jle
jmp
push
call
mov
dec
mov
jmp
mov
sbb
mov
addl
mov
mov
xor
xor
add
and
mov
mov
and
xor
mov
and
mov
add
sbb
mov
mov
xor
mov
or
mov
add
or
mov
orl
mov
xor
mov
xor
mov
add
mov
sub
sbbl
lea
xor
xorl
xor
movl
cmp
movl
je
xorl
mov
subl
xor
adcl
add
cmp
movl
jne
pushl
call
mov
not
mov
adcl
mov
addl
xor
add
movl
cmp
movl
je
pushl
sbbl
pushl
call
mov
xor
mov
xor
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
jmp
mov
add
sbbl
mov
mov
mov
sbbl
add
orl
mov
jmp
push
mov
andb
test
add
sub
addl
inc
adc
xchg
out
jne
jns
jnp
mov
out
sti
outsl
mov
lods
daa
sbb
mov
inc
mov
add
jge
adc
out
cmp
hlt
mov
jg
mov
sbb
mov
push
mov
and
fists
andl
inc
jge
add
les
int3
mov
out
mov
or
test
cwtl
insb
lcall
push
out
ja
adc
loopne
jge
lods
test
dec
sti
and
in
adc
push
ss
cld
dec
sub
sbbl
cmp
js
xchg
aam
mov
call
sbb
dec
fsubrl
jo
ret
cmpsl
or
push
add
push
xchg
ljmp
adc
or
dec
adc
lds
push
movsl
add
movsb
andl
xor
shr
inc
mov
push
hlt
stc
sub
lds
std
fwait
test
addl
or
mov
in
pop
scas
dec
movsb
in
shlb
mov
jbe
xchg
jl
popa
dec
mov
in
mov
gs
js
repz
mov
mov
dec
jmp
sbb
loopne
push
inc
stos
scas
jp
adc
cli
stos
repz
xor
loopne
add
shl
push
and
sbb
leave
push
es
dec
xchg
mov
lock
ss
lds
jp
inc
cmp
andl
mov
shl
push
mov
lahf
dec
and
and
movsl
push
xor
js
fwait
inc
add
mov
in
cmp
and
inc
mov
hlt
jo
fs
ffree
mov
and
iret
sbb
mov
mov
add
and
push
leave
sbb
lahf
scas
xchg
in
popa
jns
lods
data16
shl
push
xor
icebp
addr16
mov
xor
xchg
xor
jl
jno
inc
test
dec
xchg
inc
jnp
stos
adc
mov
pop
and
sub
push
adc
loop
push
mov
inc
arpl
xor
mov
sbb
push
mov
daa
shll
stos
adc
testb
mov
cltd
in
jo
adc
packssdw
bound
out
pop
mulb
ret
pop
sub
cli
fwait
in
sarl
iret
lds
inc
pop
into
dec
fcomps
inc
inc
aaa
or
mov
push
mov
aaa
hlt
ret
xchg
lcall
js
jmp
out
inc
inc
movsl
shr
hlt
cs
lahf
or
imul
notb
pop
loop
divb
shl
mov
cwtl
outsb
or
test
daa
cld
lret
xor
push
into
lock
loope
jmp
js
xor
setnp
pop
sbb
dec
adc
pop
stos
xchg
nop
cmpsb
adc
dec
notl
fs
repnz
jmp
js
test
sti
pop
inc
jge
push
mov
pop
in
xor
insl
or
stos
sub
add
popf
test
gs
rcrb
dec
inc
add
or
mov
push
fwait
lret
lret
pop
cmpl
mov
and
in
mov
jae
sbb
dec
pop
or
mov
dec
lcall
sub
es
cs
hlt
shrb
out
ss
jge
hlt
mov
inc
and
sbb
push
bound
shlb
mov
dec
lret
mov
lret
mov
fstpl
enter
sti
pop
cwtl
call
jl
fsubrl
adc
push
das
decl
adc
xor
mov
ret
push
rcrb
ret
out
sub
orb
push
sub
movsl
addl
jmp
mov
mov
lret
mov
add
jle
scas
mov
negl
out
test
out
fsubrp
inc
mov
pusha
insl
or
add
or
loope
dec
cmpsb
add
je
cmp
mov
push
ljmp
test
sbb
test
std
mov
mov
jae
das
jmp
sbb
sbb
mov
xchg
xor
insb
pop
out
xchg
cmc
inc
mov
push
xlat
fcoms
jp
sti
lods
mov
jo
cmpsb
jge
pusha
pop
pop
mov
movsb
jbe
and
dec
pop
mov
lds
scas
sti
pop
mov
push
sbb
sub
add
xchg
clc
test
insb
sub
mov
mov
scas
and
dec
popa
lock
js
add
cltd
or
mov
ret
outsl
sub
clc
jae
jecxz
cmpl
push
or
jl
insb
dec
xchg
ret
xlat
hlt
cwtl
data16
push
dec
xchg
adc
push
mov
test
in
cwtl
xor
jmp
push
add
clc
iret
insb
push
cltd
mov
mov
fucom
adc
js
out
in
loopne
lds
sub
pop
scas
jne
or
xor
mov
cmpsl
pop
aad
addr16
or
sahf
add
dec
repz
std
repnz
int
mov
mov
mov
sub
mov
loopne
movsl
xchg
inc
inc
push
jne
and
lock
imul
push
sbb
mov
inc
or
push
mov
ret
or
sarl
in
xchg
fistpl
cmp
push
shrl
or
mov
cltd
adc
xor
leave
jg
or
mov
fldcw
dec
bound
dec
mov
mov
fwait
push
stc
and
push
inc
fists
fs
jg
and
pop
negb
cltd
mov
outsb
inc
add
or
pop
sbb
inc
lods
fstps
xor
adc
jmp
sbb
hlt
aaa
dec
jle
sbb
lret
mov
ljmp
pop
insb
mov
push
adc
inc
aad
xor
push
cmpsl
leave
or
mov
packuswb
pop
push
xor
jecxz
js
shrb
mov
xchg
or
mov
in
orb
jle
and
fmull
cmp
mov
not
pusha
xchg
out
call
mov
and
dec
xor
and
das
mov
imul
negb
lahf
sub
sarl
aas
xor
xlat
sbb
imul
push
lahf
lods
inc
mov
ds
xchg
or
push
into
adc
popf
pop
push
sub
movsl
mov
fidivrl
lahf
ds
scas
std
sbb
movb
adc
jnp
inc
popa
pop
mov
test
dec
mov
cwtl
push
adc
xchg
int3
xchg
test
lods
inc
jbe
imul
jnp
jae
leave
sarl
lcall
int3
cli
add
or
jge
mov
daa
xor
in
movsl
out
sahf
loope
or
xchg
std
fcom
adc
pushf
mov
jo
sahf
cld
fcoms
jae
mov
adc
test
add
test
outsb
mov
sahf
add
mov
ss
mov
dec
push
cmpsl
mov
xchg
jno
shlb
push
xchg
push
mov
out
mov
or
movsb
add
pop
inc
inc
mov
mov
cld
sahf
out
fucomp
sarb
popf
push
fdiv
rclb
mov
pop
xchg
xchg
adc
mov
cmp
pop
outsb
jmp
and
mov
cmc
sti
mov
loop
sub
push
jl
fs
jge
lret
pushf
mov
lds
sub
lods
cwtl
imulb
adc
xor
pop
notb
repz
lock
lcall
pop
loop
pusha
imul
mov
mov
out
movsb
cltd
xchg
pop
mov
push
mov
cmp
xlat
xchg
push
popa
cmp
push
push
and
mov
sbb
jecxz
pop
inc
es
and
in
scas
sahf
imul
and
push
sbb
loop
into
cmp
cmpsl
loopne
xorb
outsl
sahf
sti
enter
xchg
inc
imul
sub
andl
fld
dec
jp
call
call
cmp
inc
cmc
mov
lds
push
fs
dec
xor
enter
fmul
sbb
jl
mov
cmp
dec
push
loope
inc
into
adc
cmc
add
push
lds
data16
enter
in
arpl
jecxz
lods
test
or
sbb
inc
fcoml
xor
icebp
test
xchg
mov
cmp
outsl
pop
mov
stos
stos
mov
mov
push
daa
pop
pop
xchg
fildll
js
ljmp
arpl
or
inc
lahf
pop
rclb
pop
mov
inc
lret
inc
ljmp
cltd
lods
mov
pushf
movsl
xor
add
adc
ret
jg
xchg
pop
jo
fisubs
or
jnp
push
divl
xchg
sub
clc
cli
faddl
or
push
or
dec
sub
lret
arpl
add
daa
pop
scas
adc
out
jae
addr16
adc
fcomp
dec
sahf
mov
jg
lahf
es
pop
out
dec
push
pop
imul
lea
lahf
mov
and
push
imul
mov
push
inc
mov
and
ss
mov
pop
pop
xor
repnz
out
pop
push
mov
mov
repnz
jl
jmp
scas
cmp
popa
push
outsl
push
imul
or
jge
xchg
gs
dec
out
subb
xor
sub
mov
std
fdivs
in
inc
xor
push
ljmp
stc
frstor
sub
hlt
dec
mov
jge
mov
fadds
aaa
cmp
nop
cmp
pop
jg
add
testl
inc
mov
lods
loopne
or
das
fcom
mov
mov
inc
jnp
mov
add
dec
xor
stc
pop
lods
orb
jp
imul
test
lods
pop
in
fadd
ljmp
daa
fcoml
ds
dec
mov
loopne
inc
mov
cltd
iret
jecxz
pushf
aas
lahf
sub
pop
and
mov
adc
mov
push
xor
mov
sahf
outsl
pop
mov
mov
inc
jmp
mov
in
mov
pop
and
sbb
fisubrl
mov
xchg
push
adc
lret
sub
mov
mov
sub
mov
mov
adc
test
sbb
add
imull
mov
repz
rol
pop
clc
push
insl
cmpl
popa
pop
xchg
rorl
xchg
test
cmp
xor
aaa
insb
mov
aam
sbb
ret
push
and
outsl
and
popf
xchg
rcll
adc
xor
test
jb
enter
inc
mov
fldenv
push
jg
xor
mov
inc
cmpsl
mov
sti
adc
je
fiaddl
imull
add
fdivs
popf
fdivrs
jl
std
adc
push
xchg
xor
pop
push
out
mov
and
repz
cmp
cmp
into
call
push
lret
fs
in
pop
in
or
jmp
lcall
dec
bound
push
lods
add
mov
xor
sub
pusha
aam
pop
ja
mov
imul
mov
or
adc
sbb
jns
mul
xchg
jge
push
push
mov
sahf
xlat
fidivl
inc
int
push
jno
into
arpl
movsl
dec
test
xchg
mov
in
movsl
xchg
push
jne
arpl
adc
andl
dec
pop
sbb
jmp
mov
lock
adc
cmc
test
inc
add
xchg
std
dec
roll
cmpl
stc
decl
testb
shll
xor
sar
inc
xchg
jmp
jbe
fs
fwait
pop
and
push
pop
int
cli
fwait
into
loopne
sbb
or
xchg
inc
mov
or
in
jl
repz
mov
jecxz
adc
mov
in
pusha
lock
add
sbb
repz
cmp
int3
flds
ljmp
and
mov
push
lods
xor
lret
cmpsb
out
fimuls
mov
add
sbb
fistps
xor
xor
ret
inc
push
bound
rcrl
jp
clc
or
dec
jp
dec
cmp
sub
repz
loope
mov
fwait
sub
scas
lock
js
sub
ffree
adc
jge
cli
pop
sub
pop
push
inc
int3
xor
in
andb
into
test
dec
cs
xchg
pop
mov
es
sbb
in
inc
xchg
fstpt
add
cmpsl
fldt
adc
mov
mov
adc
orl
test
dec
sbb
and
loop
adc
add
fldt
lret
dec
mov
cmp
or
test
sub
and
push
mov
cmpl
cld
inc
mov
pop
loopne
fnstenv
iret
pop
pop
pop
fnstenv
test
sbb
adcb
jmp
es
push
jo
ret
loop
pop
jle
nop
or
inc
sbb
xchg
ds
popl
mov
mov
and
fistpl
dec
stos
sub
jne
push
jns
shrl
fdivrs
add
inc
cmp
outsb
adc
es
sbb
push
js
mov
dec
test
stc
inc
mov
inc
sbb
daa
insl
cmp
adc
or
mov
mov
pop
xorl
cmp
cmpsb
aaa
cmp
dec
pushf
mov
add
xchg
mov
leave
shrl
sub
cmpsl
pop
mov
sub
push
cltd
imul
dec
outsl
sbb
mov
ror
sbb
ljmp
roll
lods
jmp
pop
mov
add
mov
lret
pusha
mov
and
loope
gs
inc
xchg
mull
xchg
or
lret
xor
cltd
pushf
lds
movsb
movsl
enter
cmpsl
mov
push
sbb
pop
push
push
jp
jno
clc
xchg
imul
mov
and
jo
fistps
inc
push
scas
adc
push
adc
push
das
push
in
test
or
jecxz
fwait
icebp
aas
lea
inc
inc
movsb
sti
mov
pop
push
jle
mov
outsb
dec
int
mov
fldenv
and
cmpsb
inc
mov
xchg
ja
push
repz
dec
add
lcall
sti
ret
sti
gs
mov
hlt
sti
add
jns
push
rcrl
xchg
push
loope
or
loopne
add
sbb
bound
sub
push
mov
or
push
enter
mov
daa
scas
es
xchg
mov
sub
add
aas
rorl
mov
inc
or
fadds
loope
je
jae
jno
pop
mov
jmp
cwtl
add
adcb
push
inc
aad
in
test
sti
aaa
jg
mov
fsub
jo
mov
std
sti
outsl
mov
push
clc
repnz
dec
mov
std
xor
sub
and
lods
pop
and
or
sbb
adc
cld
cmpsb
outsb
iret
jle
lret
or
mov
push
subb
push
daa
iret
sub
jno
push
xchg
push
int
lret
mov
adc
xchg
mov
adc
adc
jp
movsl
adc
stc
xor
rorb
push
lret
inc
out
mov
jecxz
sbbl
or
roll
popf
and
xorb
add
pop
icebp
rcl
jo
lcall
mov
dec
out
leave
mov
inc
ret
pop
jno
ss
push
in
fsubs
xchg
fucomip
nop
lock
shl
sahf
push
loopne
or
inc
add
rcll
xor
pop
xchg
mov
in
inc
aas
jnp
je
push
loope
fbld
ss
sub
mov
es
enter
inc
jne
adc
outsb
mov
scas
rcl
and
imul
push
loope
inc
pop
xchg
cmp
into
inc
stc
and
dec
cld
push
out
ret
pop
filds
xchg
jnp
jg
das
sub
add
aam
in
mov
fidivrl
dec
sub
sti
xchg
scas
pop
adc
push
repz
dec
push
in
add
mov
mov
pop
popf
and
or
ret
push
pop
dec
jle
mov
and
adcl
push
sub
adc
rorb
dec
mov
add
xor
or
xor
mov
xor
repz
jae
loope
shlb
shll
inc
push
xlat
rorb
push
inc
cli
sub
lds
xlat
sarb
cmpsb
lret
pop
dec
sbb
push
lret
in
jae
pop
call
loop
pop
andb
sub
data16
sbb
int
or
pusha
mov
mov
inc
mulb
cmp
insb
pop
loopne
or
sub
xchg
lret
repnz
idiv
iret
out
jecxz
rcrl
roll
pop
and
lret
mov
add
fadd
int3
jecxz
out
pop
stc
loop
push
js
int3
insl
mov
jmp
pop
out
addl
xchg
out
ja
movl
int
mov
push
push
pushf
leave
adc
jnp
out
sbb
and
push
loop
fdivl
mov
addr16
imul
imul
loopne
test
test
data16
daa
shll
lret
mov
adc
jge
repnz
push
jle
xchg
arpl
scas
and
add
leave
pop
push
shlb
out
in
sbb
jl
rclb
divl
in
fcmovu
jne
pop
inc
insb
inc
or
add
rolb
imul
dec
les
xchg
mov
inc
lcall
xchg
ja
jo
xchg
jecxz
outsl
sbb
orb
cltd
sub
xor
xchg
adcl
mov
clc
cmpsl
imulb
inc
mov
push
jae
or
sub
add
mov
fstpt
add
and
fs
jg
addr16
addr16
push
data16
adc
ret
out
cwtl
jmp
push
sub
insl
sub
xor
fcmovne
pusha
sarl
jmp
popa
lcall
mov
dec
adc
ret
call
lods
mov
movsb
inc
xchg
sbbl
jno
and
std
mov
test
xchg
rcrb
sub
xchg
mov
push
lds
mov
dec
outsb
stos
sbbl
sti
jmp
popa
xlat
loope
sub
mov
mov
xchg
jo
hlt
sbb
mov
dec
ss
or
roll
xchg
inc
mov
rcll
dec
jmp
add
daa
and
int
adc
or
mov
dec
and
mov
xchg
and
sti
outsb
cmp
xor
lds
mov
shll
in
push
lods
dec
gs
inc
test
es
popa
pop
cli
sbb
dec
push
lret
gs
fldln2
pop
cmpsb
adc
xor
mov
inc
sub
xchg
cmpb
cwtl
sub
mov
cwtl
adc
or
mov
and
push
lods
daa
jl
lret
xor
enter
nop
movsl
pop
adc
push
mov
add
jb
stos
dec
push
push
iret
xorb
loopne
addr16
pop
clc
out
pop
rcrl
sbb
lret
and
mov
mov
push
mov
cmp
mov
jge
jo
xchg
imul
xchg
dec
pusha
fists
lds
loop
subl
aam
je
js
icebp
out
cmp
lock
add
movsl
or
jae
sub
and
sbb
mov
cs
add
rorb
sub
rol
mov
pushf
andl
push
push
das
arpl
jg
and
xchg
push
int3
ja
lock
loopne
icebp
hlt
adc
cmc
jp
sbb
pop
mov
aaa
jecxz
enter
adc
cltd
pop
cld
mov
mov
inc
outsb
fs
cld
pop
adc
xchg
push
ja
imul
sub
and
fistpll
fnstsw
nop
out
mov
sub
pop
call
pusha
test
or
cmp
mov
mov
aaa
shrl
fldenv
sbb
mov
dec
addb
adc
push
fnsave
or
push
andl
les
scas
out
mov
inc
test
pop
xchg
jecxz
aas
xor
cld
xor
mov
cmp
xorb
jg
mov
insl
popf
mov
loopnew
dec
cli
cld
adc
adc
gs
mov
sar
std
add
jo
test
std
pop
into
xchg
testb
push
and
mov
test
xor
inc
dec
add
addr16
out
jmp
fcomi
fwait
sbb
adc
hlt
shl
out
inc
fstpl
lock
jae
ret
mov
or
jo
rorb
xchg
mov
std
inc
mov
fidivrl
movsb
mov
push
xchg
repnz
jnp
adc
jmp
pop
jno
fnstsw
adc
or
pop
ss
pop
std
ret
pop
jno
shll
sub
fiadds
ljmp
in
add
sti
or
dec
je
add
push
es
ja
push
mov
stos
mov
js
pop
add
cmc
rcrb
dec
aas
cmp
xchg
les
les
pop
and
push
pop
out
pop
popa
dec
into
push
sbb
xchg
pop
pop
popa
fnstsw
ds
dec
push
aas
pop
xor
lock
into
pop
xchg
adc
jmp
xor
lea
ja
pop
aad
rcrl
mov
sti
sbb
jge
repz
movl
dec
sub
popa
push
mov
test
das
test
leave
outsb
andl
jne
cs
fs
hlt
or
xlat
aad
adc
cmpsb
or
adc
movsl
bound
in
or
aas
das
cwtl
sub
and
mov
out
mov
and
adc
mov
mov
mov
add
jno
in
das
aaa
inc
subb
faddl
push
adc
and
je
seta
cmpsb
cmp
push
bound
adc
cmp
cmp
dec
cmp
mov
pop
lret
mov
lock
fidivrl
in
add
xchg
jecxz
pop
negl
inc
orb
test
or
inc
inc
fs
mov
dec
mov
jecxz
fcmove
mov
dec
gs
jns
jg
mov
test
fimuls
push
out
cmp
popa
or
mov
ret
cmpsl
sbb
fists
and
sbb
add
adc
int
gs
lcall
pop
cmpsb
xchg
insb
shr
es
sbb
cltd
push
mov
dec
mov
lcall
jne
xchg
fistpll
mov
ficoml
aad
inc
addr16
nopl
jmp
lds
push
adc
cld
adc
pusha
cwtl
in
test
imul
pushf
xor
xchg
in
sbb
inc
push
push
clc
sub
jl
and
imul
bound
pop
dec
fisubrl
lcall
mov
xchg
repnz
push
mov
divb
push
jle
movsb
daa
xor
sbb
dec
push
scas
in
bound
or
cmp
hlt
popa
and
loopne
leave
les
jmp
nop
pop
in
xchg
or
lret
or
ljmp
lahf
daa
std
shll
mov
mov
mov
into
mov
int
or
fbstp
loop
lods
inc
xor
cmp
in
sbb
pop
data16
outsb
push
cmp
in
pop
psrlw
sbb
dec
pop
fcomip
subl
jo
shlb
pusha
movl
cmc
jae
repz
xchg
int
mov
xchg
fdivr
lock
adc
iret
push
scas
inc
loopne
movsl
lods
aaa
int
sahf
cmpb
lods
sbb
jns
test
fld
push
daa
popa
push
dec
pop
je
dec
hlt
fstpl
jmp
mov
daa
cmp
xchg
xchg
roll
ss
call
cmp
and
xchg
jns
jb
les
in
pop
mov
mov
js
dec
xchg
stc
insl
in
cmp
ss
inc
in
inc
rorb
fstps
test
pop
xchg
frstor
lahf
pop
fnstsw
aam
bound
adc
outsl
xchg
fisttps
out
jmp
loop
pop
int3
rcll
dec
lcall
stos
or
icebp
or
scas
xchg
mov
and
lea
in
mov
movsb
inc
movsl
sbb
mov
enter
sub
dec
push
aaa
mov
enter
ds
hlt
sti
icebp
xchg
ljmp
test
push
xor
stos
sti
push
fidivrs
sub
cmp
aam
in
mov
sub
movl
push
jl
xor
sbb
cwtl
in
add
xor
int
cmc
out
cmpsb
aam
enter
add
mov
ja
xor
movntq
add
outsb
movsl
jg
cmp
call
add
or
push
cmp
movsb
push
jmp
xor
mov
push
outsb
mov
push
mov
sbb
sub
cmp
imul
imul
jle
sub
dec
fstpl
xchg
sar
mov
in
in
push
adc
cmpsb
pop
repz
test
ja
mov
push
cmp
mov
xchg
add
adc
push
inc
jnp
movsl
cmpsl
jno
mov
rcrl
dec
xchg
aas
roll
dec
pop
xlat
ret
pop
xchg
test
mov
test
jo
outsb
in
jge
pop
mov
je
je
mov
or
cmc
pop
xchg
pop
test
add
fwait
pop
xor
mov
mov
lret
xor
fs
add
idivb
loope
push
jl
cmpsb
cmp
dec
xchg
xchg
loop
insb
in
fistl
outsl
sbb
push
add
pop
pop
insl
lods
rcrl
arpl
mov
push
inc
rcl
dec
inc
jmp
push
sub
jecxz
sbb
dec
rorl
fwait
cmp
sub
gs
pop
adc
insb
mov
pop
or
clc
push
in
cmpsb
mov
aaa
push
stc
jecxz
xchg
pop
push
cwtl
add
xor
mov
lret
dec
jbe
push
mov
aad
sarb
mov
mov
pop
add
dec
cmp
loopne
hlt
jmp
fdivrs
push
mov
mov
inc
aaa
push
jne
push
cmc
mov
loopne
add
rcr
clc
test
xor
stc
insb
mov
mov
mov
outsl
jle
out
out
or
sbb
popf
pushf
mov
fcmovu
sbb
jl
xchg
test
clc
sub
loop
mov
or
adc
shll
ja
fucomp
out
and
mov
push
mov
pop
mov
or
mov
fldt
cli
inc
scas
cmc
jge
xor
mov
in
xchg
add
push
fsubl
sub
and
push
or
push
add
or
out
jmp
mov
mov
and
pushf
adc
out
jns
inc
and
gs
gs
add
push
scas
push
les
pop
loop
sarb
iret
sarl
push
out
je
dec
pop
pusha
xor
dec
cld
psadbw
sahf
dec
cs
mov
nop
jnp
fsubr
ljmp
cwtl
jb
gs
sub
fnsave
pushl
dec
call
int
jns
stos
jge
shrl
int
dec
dec
aad
dec
xor
mov
cli
icebp
mov
call
xor
or
lock
inc
in
ret
mov
inc
gs
push
sahf
pop
xchg
arpl
and
ret
mov
and
xchg
pop
jmp
arpl
out
sti
xchg
pop
in
sbb
cwtl
test
aam
adc
inc
cmp
test
je
in
push
add
rcrb
pop
xor
pop
ret
data16
push
popa
and
and
and
jo
cld
xchg
pop
std
jo
outsb
dec
scas
add
imul
jo
and
scas
into
push
mov
inc
out
lahf
popa
jae
adc
incl
mov
addl
mov
dec
and
and
lock
movsb
fs
push
pop
js
cmp
dec
lods
je
sub
push
jno
lds
xchg
inc
movsl
lea
jbe
mov
repz
aas
sbb
xchg
cmp
push
imul
cmc
lret
mov
and
push
adc
arpl
dec
add
hlt
inc
popf
xor
loop
fisttps
mov
inc
enter
repz
or
xchg
ja
pop
sub
mov
xchg
jae
js
add
fisubl
xor
sbb
sbb
ss
mov
insb
push
or
mov
out
stc
mov
push
ss
aad
push
lret
mov
dec
sbb
rolb
mov
dec
popf
fcmovb
mov
adc
insb
icebp
mov
ficompl
and
inc
or
or
or
test
sub
daa
sub
mov
loopne
xor
adc
dec
or
xchg
mov
dec
mov
xchg
arpl
outsb
jle,pt
mov
mov
loop
push
repz
mov
aad
clc
mov
cmp
jnp
xchg
lods
data16
in
mov
in
cmp
repnz
adc
movsl
lds
add
imul
push
or
iret
or
fnstsw
or
cs
fstpl
xor
jbe
mov
ds
call
sarb
movsl
dec
pusha
ror
ljmp
mov
aas
ljmp
mov
outsb
lea
not
imul
int
cmp
jmp
iret
shlb
mov
jle
popf
dec
jne
inc
mov
sti
pop
pop
or
test
rorb
and
scas
imul
out
xchg
or
out
dec
xor
sub
mov
addr16
es
aaa
mov
ficoms
mov
sti
aas
or
push
push
pop
fsubr
ret
daa
scas
mov
in
popl
inc
sub
cmp
jb
push
sarl
je
inc
andl
sarb
push
jne
dec
ss
out
pop
pop
dec
lahf
setl
mov
dec
ljmp
push
lea
les
inc
mov
cmp
or
xor
pop
xchg
in
je
popa
cltd
pop
loop
add
int3
pusha
test
add
push
push
aam
pusha
lea
popf
mov
xchg
mov
jno
push
cmp
cld
outsb
mov
adc
cmpsl
sbb
loopne
fwait
test
dec
xchg
jl
rcll
push
std
or
or
sub
push
cmp
les
push
sbb
outsl
ds
adc
rcrl
xchg
pop
sub
sub
jge
in
inc
mov
or
jae
mov
fcompl
popf
mov
test
mulb
cmc
cmpsl
sub
jl
inc
in
movzwl
or
mov
add
mov
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
mov
xor
jmp
add
cld
sbb
nop
andb
push
sub
addl
int3
pop
fbstp
and
mov
adc
push
adc
ffreep
mov
ja
dec
clc
out
mov
mov
jecxz
inc
lahf
movsb
and
sub
rclb
dec
pop
and
push
jmp
cmpsl
outsl
hlt
mov
push
pop
inc
outsl
fadds
in
enter
ret
mov
sub
jge
gs
or
nop
pop
pop
data16
and
imull
xchg
jmp
push
sbb
dec
stos
push
add
fs
inc
movsb
mov
jno
sahf
xor
fnsave
pushl
dec
fcmovu
push
dec
lods
movsb
out
ds
mov
push
or
sub
inc
insb
gs
mov
scas
pop
inc
lods
test
and
aam
and
lret
js
pop
mov
and
cmp
sahf
add
cmp
mov
and
fwait
pop
cmpsb
or
cmp
mov
mov
pop
mov
lcall
jg
into
lahf
push
mov
inc
scas
das
rcll
jge
xlat
repnz
inc
jnp
sub
call
out
mov
and
ja
popl
xchg
call
xchg
imul
push
cmp
lahf
mov
xchg
mov
addb
inc
lds
xchg
movsb
bound
xor
arpl
adc
cli
fbstp
mov
adc
mov
adc
fwait
sti
xchg
test
hlt
or
push
mov
pop
or
sbb
ljmp
leave
mov
mov
add
sub
xchg
negl
shll
std
dec
xchg
xchg
in
std
jg
loope
es
les
jl
pop
mov
cmp
adc
sub
or
popf
int3
lret
cmpsl
insb
mov
sbb
push
mov
jl
and
push
fs
xor
mov
push
jp
pop
add
cmpsl
add
fidivs
xchg
push
jnp
outsb
insl
cli
mov
shrl
add
inc
cmpsl
pusha
cmp
cmp
add
pop
adc
push
xchg
jmp
mov
pop
stos
scas
pop
in
push
and
lea
cld
in
jmp
jl
pop
push
xor
mov
inc
xchg
lds
add
in
sbb
mov
loope
mov
sbb
daa
test
cmp
ljmp
jne
sbb
outsb
nop
out
test
jl
int3
inc
sbb
ds
cli
push
mov
cmp
push
cmp
xchg
mov
mov
xorb
mov
aam
enter
and
push
nop
push
jge
or
push
sub
mov
ret
pop
cmp
jmp
mov
repz
pop
je
pop
cmp
push
test
mov
shl
sbb
je
fs
sbbb
jl
xchg
in
loop
cmp
mov
inc
loope
push
adc
repnz
mov
sub
xor
daa
inc
cmp
mov
fsubrl
mov
push
and
pop
iret
repz
and
cli
pop
pop
jp
inc
and
enter
or
dec
out
jne
test
inc
or
adc
js
xlat
push
lock
fsubl
loope
mov
popf
movsb
pop
jmp
dec
sbb
popa
rcrl
ljmp
out
dec
out
daa
mov
mov
pop
into
adc
cmp
xor
fistl
jb
cmp
xor
jecxz
int
jbe
movsl
push
aas
pop
adc
fbld
pop
xchg
cwtl
xor
mov
in
adc
int
insb
cmp
or
sbb
imull
push
add
notb
outsl
inc
mov
push
xor
stc
cmp
loopne
cli
addb
pop
push
mov
sub
js
adc
arpl
dec
lret
and
imul
mov
pushf
xor
testl
add
das
xor
out
das
pop
inc
mov
jg
ret
stc
jmp
imul
lret
jne
dec
lret
inc
xchg
out
loop
stos
jp
clc
out
and
popf
gs
and
mov
in
jb
shrb
loop
mov
inc
cli
jo
fidivl
jae
adc
push
inc
and
addr16
loop
fidivrs
mov
lds
daa
cmp
lea
rorl
pop
jmp
and
data16
sub
or
popa
sbb
push
fwait
imul
pusha
inc
and
cmpsb
sub
and
out
sub
pop
out
aaa
inc
xchg
push
sbb
stc
sub
outsl
ret
sbb
mov
add
push
es
insb
adc
push
popa
fisttps
addr16
xlat
popa
pop
fisttpll
repnz
cmc
cmp
xor
or
les
imul
inc
std
daa
js
mov
push
cli
out
push
pop
movsl
xor
xchg
out
cmp
sbb
xor
mov
push
fdivrl
iret
jae
test
lcall
lret
shl
and
aaa
xchg
out
out
stos
pop
insb
jb
sar
mov
jns
pusha
mov
inc
aaa
pop
in
inc
sub
movsb
inc
push
loop
dec
cli
shlb
lods
mov
sbb
in
fcomps
pop
nop
imul
push
cwtl
add
idivb
js
jl
pop
addb
pop
sub
mov
mov
push
enter
inc
je
lds
ds
gs
push
mov
gs
fldenv
lods
jle
lahf
xchg
mov
adc
divb
adc
mov
inc
mov
xlat
hlt
inc
pop
int3
mov
inc
add
fcoml
and
push
mov
enter
rcll
je
push
xor
lahf
pushf
sti
gs
adc
hlt
dec
mov
pop
pop
inc
push
push
lods
js
cs
nop
xor
aad
mov
sub
out
clc
xor
and
push
out
in
fcoml
fistps
ljmp
lds
cmc
cmp
and
inc
dec
xchg
jo
lds
xor
mov
flds
das
xor
xlat
loope
lods
rolb
inc
xchg
sub
xchg
or
push
in
pop
test
sub
call
pop
mov
sbb
jmp
movsb
mov
xor
adc
push
xchg
inc
mov
push
idiv
jmp
shlb
inc
call
pop
loope
pop
pop
rorb
test
pop
icebp
pop
repz
clc
pop
sti
adc
negb
sti
xor
sub
aaa
push
in
push
faddl
test
enter
xchg
cmp
xor
inc
test
adc
mov
lock
push
mov
subl
std
add
mov
add
js
adc
fwait
aaa
jp
xchg
and
addr16
out
xor
dec
iret
imul
fs
mov
stos
or
insl
iret
adc
adc
pop
call
rol
inc
mov
mov
mov
stos
pop
or
popf
stos
pop
push
aam
int
mov
cs
dec
fadds
dec
pop
int
sub
aam
ret
iret
jo
shll
and
push
dec
mov
adc
and
lret
cmp
mov
dec
dec
fidivrl
pop
mov
loope
mov
and
sbb
dec
pop
ja
rcrb
jmp
jbe
jg
jp
mov
mov
dec
jmp
push
inc
bnd
ja
pop
add
push
add
leave
repnz
jecxz
in
cmp
inc
jmp
push
jno
lret
stos
dec
clc
push
cmp
and
shlb
mov
test
adc
imul
dec
cmpsl
call
mov
lods
sbb
jge
dec
out
and
daa
lds
jne
pop
hlt
push
pop
or
shll
insl
push
lahf
sub
rolb
add
jl
fadd
adc
test
mov
jnp
pop
mov
movsl
lods
adc
enter
repz
pop
and
fdivl
lea
cmp
push
jp
add
call
mov
cwtl
aaa
roll
adc
mov
les
mov
mov
dec
in
lea
mov
sti
pop
cmc
mov
jge
xor
out
add
mov
out
scas
jb
jne
fcmovnu
mov
js
aad
insb
and
imul
adc
repz
xchg
dec
bnd
xor
sar
imul
sahf
dec
dec
inc
sbb
cwtl
add
bound
adc
xor
les
mov
out
lret
mov
cwtl
push
repz
filds
and
jne
movsb
ja
or
addl
stc
jo
notb
outsb
mov
in
xchg
repz
xor
inc
adc
add
mov
imull
dec
test
shrb
movsb
mov
clc
out
or
fwait
add
dec
cmpsb
cld
mov
dec
pop
aam
es
push
inc
push
jmp
cmp
lods
add
test
cmp
dec
sti
push
push
iret
mov
lcall
stos
jecxz
xchg
ficomps
xchg
sub
ljmp
mov
mov
ja
mov
mov
ljmp
test
sarl
push
inc
rorb
sahf
sarb
push
js
fwait
popa
pusha
js
popf
fdivr
cmpsb
addl
mov
ret
incl
jo
fadd
icebp
xchg
fistl
cmp
dec
and
add
sbb
mov
movsl
popf
cltd
inc
dec
in
cltd
inc
clc
imul
fimull
xor
xchg
xchg
dec
les
daa
sub
dec
daa
test
xchg
mov
or
outsb
fbld
mov
outsl
ljmp
aad
sub
popa
ffree
sbb
jp
stc
sub
push
in
imul
loop
stc
sub
jecxz
cmpsl
iret
sbb
adc
cmp
jne
add
inc
pusha
and
rcrb
ljmp
jmp
sbb
ja
mov
jmp
mov
push
lret
das
test
mov
push
or
push
cmp
xchg
sbb
arpl
pop
in
adc
mov
sub
dec
and
daa
stos
xchg
icebp
repnz
dec
push
sub
add
das
aaa
lods
add
cmpsl
lret
add
ds
jmp
mov
sub
int
mov
cltd
add
cmp
ja
dec
imul
mov
bound
xchg
inc
es
in
or
sbb
test
cmp
ret
push
scas
push
mov
pop
mov
mov
mov
aad
stos
inc
stos
arpl
lods
fcoml
insl
dec
repnz
out
scas
lcall
fmuls
sub
in
mov
outsb
cltd
jg
fs
repnz
inc
loope
popf
daa
cmpsl
pusha
lock
fiaddl
mov
leave
test
mov
clc
gs
cmp
imul
shlb
xor
add
mov
jmp
xchg
sub
mov
mov
bound
shl
inc
dec
ljmp
mov
lock
push
push
pusha
dec
das
cld
cmp
inc
adc
lods
xchg
shll
and
scas
cmp
xchg
cmp
pop
add
dec
cmp
out
mov
sti
pop
cltd
outsb
rorb
mov
xchg
fdivrl
sub
in
dec
adc
sbb
pop
ljmp
push
lods
dec
push
cltd
jecxz
repnz
mov
ret
loopne
xchg
and
push
rol
jg
sub
xchg
sbb
lods
mov
xor
mov
xor
cmp
jne
lods
mov
adc
cmpsb
xchg
fsub
jmp
add
inc
mov
or
loope
int
dec
popw
xlat
push
std
pusha
sarl
or
test
mov
adc
or
test
push
inc
push
or
cwtl
xchg
mov
mov
xor
inc
pop
or
xorb
jbe
cmp
push
movsb
inc
or
mov
mov
lret
pusha
les
fisttpl
adc
jmp
fidivrs
enter
mov
push
out
and
stos
mov
inc
sbb
inc
sahf
ss
dec
in
sar
push
filds
cmpb
xchg
and
orb
sahf
mov
and
lahf
or
shrb
sbb
adc
fdivl
push
addps
imul
sbb
and
stc
punpcklwd
mov
pop
xchg
mov
dec
scas
and
outsb
mov
add
xlat
xor
pushf
dec
fdivrl
test
out
mov
dec
cmc
or
pslld
jo
pop
ss
push
call
ljmp
pop
pop
in
subb
add
jne
jge
mov
or
in
xchg
call
jmp
mov
nop
xchg
inc
sbbb
lods
rol
orl
mov
dec
pop
iret
mov
mov
cmc
dec
out
cli
out
inc
jno
xchg
sbb
xchg
cmp
call
mov
int
dec
push
push
mov
bound
das
cmp
push
cld
jno
int3
pop
cmp
stos
pop
jns
inc
bound
add
stos
sbb
je
rolb
pop
outsb
cli
sbb
lcall
std
test
xorb
lea
and
pop
ret
xchg
pop
rorl
jge
xlat
inc
mov
aam
mov
jge
sti
add
lock
hlt
int3
jo
int3
add
inc
sbb
sub
push
lret
xchg
xor
insl
enter
popf
sahf
mov
cmpsl
and
jbe
lret
push
jns
ja
out
rcll
jo
arpl
xor
gs
scas
inc
and
and
add
icebp
cmc
jl
aam
and
out
cmp
add
sbb
and
or
xchg
mov
or
dec
inc
add
dec
jg
jge
sub
adc
mov
in
in
stos
cli
add
pop
hlt
inc
dec
mov
pop
cmc
mov
sbb
mov
sbb
pushf
xchg
ficoms
mov
call
rolb
test
or
out
xchg
std
mov
out
int3
out
pop
dec
sub
xor
push
imul
and
lds
out
mov
mov
mov
idivl
xchg
pop
mov
std
pop
pop
or
pop
in
stos
popa
call
lahf
and
enter
sub
cmp
fincstp
add
sti
ds
fisubrl
iret
push
mov
or
or
loop
ljmp
movsl
pop
xlat
in
dec
mov
adc
stc
test
xor
jmp
out
adc
lret
pop
dec
jo
lret
jp
xchg
jae
sbb
sbbl
loope
jne
jne
std
repz
mull
jle
mov
cmpsb
pop
cmp
push
pop
sub
lea
sbb
repnz
cltd
addl
push
add
loop
or
les
jbe
mov
adc
shrb
or
ror
mov
or
sbb
pop
mov
sarl
push
and
push
aas
xchg
pop
aam
add
or
inc
push
add
fwait
popf
fdivs
dec
jnp
pusha
add
test
sub
sbb
pop
push
cmp
lcall
xchg
xchg
mov
hlt
sti
jae
out
stos
les
jge
sub
add
mov
ja
dec
jp
sbb
inc
mov
cld
cld
pop
scas
push
add
mov
xorl
pop
ds
jecxz
mov
mov
mov
or
mov
xor
or
mov
ret
lret
jg
imul
les
sub
stc
inc
cmc
mov
xor
aas
fidivrl
and
add
ja
inc
push
add
les
mov
inc
mov
push
mov
xor
xchg
push
ret
add
shlb
test
aas
outsl
ss
int
loope
add
mov
add
push
shll
lahf
clc
sub
sbb
pop
fistpll
lret
mov
inc
cmp
push
adc
fadds
ffreep
in
mov
gs
push
adc
sub
adc
jae
mov
pop
idivl
sbb
and
jb
xchg
xlat
je,pt
das
adc
adc
rcrl
out
cmpsl
sbb
add
out
push
jae
sub
fcoms
mov
daa
test
mov
arpl
xorl
fbstp
adc
cmp
popa
jmp
cwtl
lret
jle
hlt
jae
push
and
rcr
cli
rcll
inc
add
xor
mov
jno
lahf
mov
inc
or
dec
jns
or
xlat
fwait
ret
add
loopne
les
adc
push
addr16
pop
rcll
fs
fldl2t
mov
test
and
outsl
rolb
hlt
cmc
adc
dec
sub
mov
rcrl
adc
lods
xchg
lds
test
imul
movsb
pop
adc
popf
mov
or
mov
cld
loope
pop
ds
add
push
cmpsl
sub
sahf
mov
subb
sbb
out
rorb
daa
fisubs
lcall
fs
pop
loop
pushf
fnsave
pop
add
sub
push
sub
pop
popf
push
and
sti
pusha
outsb
xor
repz
cmp
aam
and
pop
pop
cmp
add
jle
fnstsw
mov
imul
das
movsb
push
cmp
or
mov
inc
cli
and
daa
rcrl
jns
add
xor
sahf
xor
jb
sbbb
cmpb
lds
add
movlhps
xor
shrl
sub
push
jmp
add
push
dec
jns
push
movsb
xor
test
add
push
lcall
xor
add
pusha
movsb
enter
inc
mov
push
mov
ret
mov
cmp
icebp
inc
insl
cwtl
dec
mov
sbbl
jbe
jo
rcrb
cmp
xchg
push
xchg
adc
inc
shll
add
dec
ss
mov
or
loope
mov
jge
daa
mov
movsl
pusha
dec
push
mov
mov
lods
xchg
push
pushf
jmp
mov
scas
cmp
stos
dec
sub
inc
fistpll
push
in
xor
mov
jg
loopne
arpl
fildll
or
rcrb
push
mov
out
add
mov
out
cmp
jmp
xor
mov
in
sbb
idivb
jmp
stc
dec
nop
cmp
mov
in
ljmp
dec
dec
loopne
sbbb
mov
or
mov
imul
mov
andl
cmp
jle
ljmp
xor
mov
sarl
ror
pop
mov
fistps
mov
shll
das
and
sbb
pop
sbb
xor
push
mov
jbe
addl
das
outsl
call
pop
push
pcmpeqd
pop
sbb
es
cld
add
adc
cld
roll
and
icebp
mov
out
shlb
bound
adc
cmc
jb
daa
clc
lahf
mov
mov
lahf
fld
push
jb
push
push
fwait
enter
or
mov
cmpsl
imul
mov
inc
jge
cmp
or
loopne
testl
stc
inc
aas
sub
push
mov
adc
add
inc
jne
popa
pop
pop
shl
int
inc
mov
imul
pushf
ds
loopne
aaa
dec
mov
iret
test
call
xlat
pop
and
xchg
sti
pop
jl
cmp
repz
insl
inc
sbb
mov
dec
hlt
daa
das
outsb
push
push
rcll
dec
aad
pusha
ret
pusha
push
push
sbb
insl
cltd
add
push
sbb
cld
enter
jb
mov
loope
rolb
test
cmp
jmp
cmp
sbb
std
sbb
test
mov
jle
mov
mov
cmp
or
in
push
fucomp
inc
sub
push
add
cs
mov
xchg
pusha
and
sub
jo
xlat
push
and
es
pusha
mov
pop
loop
and
test
inc
xor
fcmovnbe
out
dec
mov
rcrl
test
aas
test
xchg
inc
inc
xor
sub
cmc
cmp
cmp
movsb
sbb
iret
sub
mov
adc
or
mov
push
icebp
mov
push
inc
dec
mov
adc
clc
xchg
pop
movsb
cmp
es
popa
pop
bound
adc
gs
imulb
or
dec
arpl
out
dec
out
or
dec
dec
aas
pop
nop
mov
jle
out
cwtl
or
jnp
fnstenv
loop
adc
mov
cmp
das
or
ret
mov
dec
dec
ret
inc
outsb
mov
int
adc
inc
inc
ret
insb
push
pop
and
mov
ja
push
out
popf
in
jle
jo
test
sahf
push
aaa
inc
std
xchg
mov
xchg
pop
xchg
mulb
cli
rolb
adc
pop
lods
or
pop
mov
in
xor
push
sbb
movl
in
std
sbb
ret
jmp
outsl
sbb
inc
jmp
inc
xchg
mov
or
pusha
xchg
inc
push
dec
aas
mov
mov
mov
xchg
pusha
testl
jg
icebp
and
les
out
push
or
mov
mov
test
pop
daa
sbbb
hlt
mov
jns
outsl
inc
test
and
lret
pop
jbe
or
les
push
fadds
and
inc
fs
out
push
inc
lods
push
mov
mov
addl
andl
inc
cmp
sbb
outsl
loop
fnsave
xchg
jb
sti
mov
out
push
jge
andb
sub
roll
imul
mov
push
je
push
in
sbb
aam
cmp
rcll
les
pushw
adcl
xchg
lahf
fwait
in
mov
call
popf
ficoms
xchg
pop
std
push
adc
mov
add
push
pop
jbe
adc
inc
pop
das
lods
sbb
jmp
and
mov
sbb
fld
lret
and
jnp
adc
imul
push
sub
xchg
orb
aas
xor
mov
call
cmp
test
and
call
out
or
mov
pop
pop
push
cmp
test
movntps
sub
stos
mov
lods
cmc
dec
in
je
jp
or
xchg
or
add
loop
add
or
xchg
cld
cmc
daa
int3
cmp
dec
jno
xor
mov
das
std
add
push
dec
or
xor
adc
mov
iret
and
insl
inc
jp
pop
fnstenv
pop
sbb
sbbb
out
aam
xchg
sahf
add
out
outsl
movsb
and
in
xchg
mov
lods
insl
lret
adc
mov
mov
xlat
dec
dec
arpl
push
int3
cld
imul
mov
lock
pop
add
cmc
inc
push
add
pop
push
outsb
out
xchg
inc
jnp
add
cmp
lret
fildl
ret
scas
shrl
test
adcl
jae
dec
jle
or
repz
push
xchg
add
jo
fistl
jnp
mov
mov
cmc
movl
test
out
mov
push
mov
cmc
and
loop
stos
dec
out
xchg
jnp
test
jge
pop
pop
cld
dec
lret
int
push
pop
and
js
jo
mov
jl
clc
lds
test
out
add
out
cmc
call
push
sarb
xor
sahf
clc
adc
in
inc
push
hlt
jns
fwait
jnp
and
loopne
popf
cwtl
ret
scas
add
adc
add
fs
sbb
xlat
lret
or
pusha
addr16
sbb
fs
pop
and
xchg
aaa
outsb
rcr
add
or
enter
enter
xor
js
pop
mov
mov
movsl
std
movsl
outsl
and
sarl
mov
ja
mov
clc
mov
pop
jne
jg
in
and
imulb
dec
xor
iret
das
inc
ss
je
loope
dec
fidivrl
cmc
into
push
leave
xchg
jge
pop
dec
and
and
lds
les
jns
insl
push
loope
dec
sbb
jge
jbe
xchg
xor
popf
call
or
icebp
add
imul
cmp
cs
xor
sti
hlt
aad
fildl
cmp
sub
fs
stos
mov
add
scas
jne,pn
push
leave
fstpl
loop
jae
dec
imul
fdivrs
hlt
push
and
add
pop
fnsave
pop
ss
faddl
pop
fwait
nop
test
sub
out
movsl
sbb
movsl
out
inc
cmp
outsb
leave
enter
xor
jl
add
data16
ds
les
in
nop
aam
sbb
push
sbb
sub
hlt
movsb
xchg
ja
jo
gs
test
dec
adc
inc
jne
pop
or
imul
mov
xchg
mov
mov
pop
jbe
pop
inc
adc
bound
xor
out
push
jmp
mov
test
sbb
push
cwtl
orl
bnd
mov
ss
je
jg
outsl
or
add
jp
sub
pop
pop
xor
sahf
mov
frstor
inc
ror
dec
scas
pushf
and
repnz
in
dec
icebp
add
add
rorb
cmp
pop
mov
ret
push
push
out
cmovp
pop
fwait
mov
inc
mov
in
testb
incl
fwait
dec
insb
sahf
les
les
in
jg
mov
ret
dec
std
sbb
push
lret
cmc
sti
scas
cmpsb
cltd
cltd
inc
mov
adc
insb
xor
mov
push
dec
out
mov
andl
ljmp
pop
fsubrs
aad
pop
pop
shll
push
in
jno
mov
outsl
inc
mov
inc
js
out
js
push
lcall
or
fwait
xchg
cmp
shlb
notl
and
int
lahf
xor
mov
or
add
sti
fdivrl
adc
inc
loopne
orb
enter
push
jp
jp
call
dec
xchg
pop
out
cmp
loop
and
xchg
push
pop
adc
outsb
pop
mov
mov
and
lret
lds
rol
or
mov
jl
mov
popl
adc
add
fistl
sbb
cmp
aas
clc
leave
mov
mov
cmc
mov
fcom
lds
sub
mov
fnstenv
mov
call
out
and
push
cld
sub
push
cmc
lock
stos
fmul
pop
lods
loopne
cmpsl
xor
fdivrl
mov
push
cs
fwait
outsb
push
xor
outsl
sub
stc
jb
jno
or
cmp
push
dec
inc
or
sub
loop
lcall
dec
mov
sbb
loopne
in
add
and
adc
les
jmp
add
aaa
imul
imul
jp
adcl
nop
xor
xchg
je
add
push
lahf
aaa
repz
negl
mov
xchg
mov
sub
xor
or
jno
pop
dec
xor
out
mul
lock
invd
xor
lods
lea
ljmp
pusha
pushl
dec
xchg
in
inc
xor
rsqrtps
push
pop
dec
das
jbe
mov
fisttpl
sbbb
dec
les
movsl
jbe
pop
jg
and
adc
sbb
or
xchg
cli
xor
xchg
and
daa
xor
mov
leave
fcompl
cmpsb
aaa
testl
data16
sbb
cmpsb
jns
outsl
xchg
popf
scas
mov
and
jg
mov
jne
rorb
cs
das
fbld
scas
pop
dec
jl
xchg
mov
fisubl
hlt
xor
push
cmp
daa
lds
enter
xor
popf
sbb
jae
xor
leave
clc
repz
insl
outsl
popf
sub
test
addb
pop
xchg
pop
xchg
xchg
out
mov
out
mov
mov
decb
pop
adc
sub
inc
ljmp
xlat
add
mov
leave
leave
mov
pop
fcoml
sbb
pushf
gs
xchg
fistps
movsb
dec
shrb
cmpsl
dec
mov
stos
dec
or
jmp
clc
lock
rorl
or
fcompl
mov
sahf
sub
adc
mov
test
xor
cmp
cli
ret
pushf
insb
adc
jae
cmp
fmuls
sub
call
inc
lods
cmpl
gs
and
push
fwait
addr16
shlb
in
outsb
aaa
es
mov
insb
jae
test
mov
or
cmp
insl
lret
dec
ret
test
pop
divb
aam
cmp
rorl
popa
mov
or
pop
idivl
jbe
fstpt
aas
mov
data16
jmp
movsl
sbb
inc
jp
outsl
shrb
shll
mov
in
fst
popa
cmp
push
adc
shrb
sub
rcll
cs
mov
inc
mov
sub
inc
mov
sub
jmp
sbb
mov
or
pusha
lret
stos
dec
jae
lret
test
jge
inc
pop
pop
subl
stc
ret
leave
nop
jg
hlt
push
lret
mov
sub
ret
arpl
icebp
adc
jmp
mov
adc
out
push
add
out
int3
ljmp
mov
mov
loope
sub
lods
movsb
movsb
and
daa
xor
es
ds
adc
fwait
add
movsb
loope
jne
fisubrl
and
cmp
repz
xor
inc
or
loope
or
ja
cmp
aad
push
aaa
inc
adc
movsl
adc
mov
jl
xor
lea
push
add
push
dec
mov
push
mov
push
punpckldq
maskmovq
mull
repnz
aas
imul
push
mov
add
ss
mov
bound
fdivrs
fisubrs
ror
xchg
adc
into
fmull
xlat
fsubrl
popa
push
popf
xchg
inc
xor
and
ss
call
out
ret
pop
aad
mov
inc
lock
dec
xor
pop
lahf
mov
out
ds
push
cmpsb
mov
frstor
repnz
mov
es
push
sti
shlb
xchg
ss
stc
jg
and
mov
sub
into
fistpll
jb
add
pop
cmp
cmp
mov
sbb
test
push
xlat
jg
mov
shrl
adc
rcrl
jmp
inc
cmpb
pusha
sbb
movsl
cli
mov
cltd
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
jmp
add
mov
hlt
aas
push
out
movsb
cmp
call
xor
iret
rcl
mov
js
sbbl
pop
adcl
sub
and
cmp
rcrb
and
xchg
loopne
leave
shl
or
pop
cmp
std
push
push
mov
in
sub
fwait
test
outsl
jge
pushf
out
lret
xor
cmp
ds
mov
cmp
inc
lock
dec
pop
cmp
orl
cmpsb
mov
or
filds
sbb
lret
jecxz
ds
icebp
mov
into
jl
pushf
xchg
and
or
mov
mov
cld
das
mov
or
int
jnp
push
jle
outsl
mov
jle
pop
dec
ja
xchg
inc
and
lods
xchg
mov
lret
stos
lret
inc
mov
sub
icebp
cmpl
mov
or
sbb
push
stos
inc
sbb
mov
xor
jp
mov
cmp
ljmp
ja,pn
out
pop
sbb
enterw
inc
out
pop
mov
call
daa
inc
push
in
push
js
xchg
jg
pop
sub
pop
inc
js,pn
jns
pushf
xchg
jo
aad
add
push
bound
pop
or
je
mov
push
clc
push
xchg
es
outsl
mov
insb
mov
roll
xchg
std
inc
hlt
loope
insb
add
push
jge
mov
mov
sbb
movsb
sub
pop
pop
cmp
gs
dec
jno
sub
je
mov
test
cli
lahf
cmp
or
enter
add
cli
xor
xor
out
sub
xlat
cmp
add
dec
adc
mov
mov
inc
adc
dec
jne
sub
lahf
cmp
in
ljmp
fldl
mov
push
jbe
aaa
popa
xchg
adc
pop
pop
adc
icebp
pop
mov
cli
rcrb
fdiv
js
test
push
mov
mov
rorb
mov
pop
jl
mov
movsl
and
mov
xchg
inc
jbe
pop
jns
and
push
inc
cld
xchg
xorl
movsb
sub
and
push
lods
add
and
xchg
or
fidivrl
adc
or
lret
stos
adc
adc
fyl2x
dec
lret
cli
insb
sub
jne
xchg
arpl
xchg
mov
push
mov
dec
aaa
leave
daa
mov
xor
jo
xlat
jmp
es
jp
nop
dec
lret
jp
xor
add
jmp
cmp
mov
inc
or
and
xchg
and
decl
dec
andl
pop
jbe
scas
jbe
xorl
bound
fdivrp
adc
sub
stos
cmpsl
add
and
call
push
jo
adc
aaa
ja
scas
ret
mov
sub
lret
ret
popa
in
cli
push
outsl
aad
faddl
cld
fldcw
push
loopne
outsl
sub
cmp
in
mov
pusha
ljmp
mov
aam
sub
test
outsb
mov
les
push
out
xchg
sbb
aam
pop
inc
xor
cmp
adcb
bound
popf
mov
popa
cwtl
stc
stc
icebp
and
and
pop
jno
cli
cmp
mov
sbb
pushf
movsl
push
sub
fcoml
xor
mov
inc
hlt
out
and
popa
mov
jns
fsubrs
push
cwtl
loopne
clc
icebp
xchg
add
push
mov
ret
lret
fcmovne
fbstp
xchg
inc
and
mov
jge
push
inc
loop
in
sub
scas
clc
icebp
fiadds
cmpsl
pushf
inc
mov
in
or
sahf
pusha
bound
mov
mov
lret
xor
stos
fimuls
es
mov
fsub
ficompl
add
or
inc
xchg
adc
imul
cmp
ret
fisttps
push
fidivrs
sarl
fsubrs
and
cltd
mov
push
pop
sub
push
mov
and
std
outsb
mov
cmpsb
push
push
jp
mov
inc
loope
xchg
and
or
cltd
int
push
mov
push
pop
out
and
jo
cld
sub
lret
sbb
clc
inc
stos
fldt
xchg
inc
sub
dec
and
mov
push
sub
pop
xchg
clc
out
scas
ljmp
push
cld
xor
icebp
call
jmp
and
jmp
hlt
ss
mov
fcmovnu
adc
stos
sbb
xchg
jno
jns
les
lods
adc
jle
cli
neg
push
push
xchg
aas
leave
rorb
jp
out
cwtl
ds
mov
inc
loopne
jge
or
lods
popa
xchg
cmp
stos
stc
popa
jmp
lcall
add
xchg
jge
incl
lds
fxch
cli
pop
lea
jns
jae
or
icebp
imull
cli
fcoml
sub
cmp
xchg
jl
adc
cwtl
js
inc
add
and
leave
or
mov
xor
rorb
jl
jae
lock
cs
ljmp
xor
fwait
and
dec
stos
jp
scas
mov
mov
push
mov
pop
adc
xchg
repz
cwtl
les
lahf
add
jns
jg
ret
jnp
iret
or
leave
pop
shlb
aad
repz
addl
gs
sub
mov
or
jl
jae
sbb
loopne
adc
xor
push
or
hlt
cmc
xor
subb
dec
push
loopne
xchg
mov
iret
jae
xlat
sub
cltd
jle
pop
mov
stos
dec
scas
jne
pop
lock
das
cmc
xchg
lahf
in
lret
xor
mov
jne
pushf
mov
mov
sbb
je
sti
xchg
push
adcb
jmp
jle
das
adc
iret
pop
cltd
jo
and
ljmp
dec
adcb
lea
loop
sahf
es
sbb
adc
jne
jb
mov
pop
inc
xchg
ljmp
mov
in
and
jge
dec
dec
arpl
mov
es
mov
push
in
enter
fcomi
xchg
imul
scas
xchg
or
sub
mov
sbb
pop
pop
fimull
jmp
test
jno
inc
sub
cmpsl
test
mov
stos
dec
addl
sbb
sbb
cmc
repz
lods
mov
inc
push
or
loop
in
jbe
out
int
insl
xchg
fwait
sbb
data16
adc
xor
dec
inc
fcoml
sub
mov
cmpsl
sub
imull
mov
ds
lahf
fsubrl
das
adc
mov
jbe
push
or
out
fcmovne
xchg
jne
add
cs
sub
lea
mov
insl
xchg
push
add
mov
sbb
call
xor
mov
enter
xchg
add
sub
out
jns
inc
out
cmp
and
ds
lahf
leave
add
out
les
in
mov
lea
lcall
cmp
fs
jmp
xchg
loopne
cmp
jns
inc
cmp
sbb
jmp
rorl
xchg
mov
or
push
xchg
outsl
sbb
in
outsl
loop
cwtl
ret
adc
mov
pop
pop
bound
xor
xchg
jne
scas
dec
mov
xchg
add
stos
jg
cmp
push
sbb
pop
aad
jmp
xchg
inc
pop
xchg
testl
mov
orl
scas
repz
nop
jl
lods
mov
int3
or
cmpsb
push
sbb
add
je
and
jbe
jns
lret
rorb
sbb
cmpsb
cs
ret
repz
gs
aam
xor
jecxz
test
sub
cld
inc
push
aad
sub
shrl
aam
ret
or
xchg
jle
fldpi
scas
push
mov
shlb
mov
scas
add
movl
xchg
mul
cmp
ss
shrl
adc
inc
jne
xchg
mov
jp
mov
sbb
jle
movsl
lods
test
jns
rcrb
mov
cwtl
in
lock
nop
mov
fstpt
mov
scas
fwait
pop
and
out
xchg
xlat
dec
sub
xlat
dec
xchg
adc
leave
insl
jbe
insl
int
lods
mov
subb
cs
lock
lahf
roll
insb
cmp
inc
shlb
je
add
push
fs
sub
dec
sub
adc
add
mov
sub
ja
adc
call
rolb
cmpsb
orb
mov
testb
out
push
dec
scas
pop
imul
out
sbb
jno
ds
push
xchg
repz
sub
xor
jmp
out
xchg
nop
outsl
xlat
insb
sahf
mov
or
movsl
cmp
jp
fnstsw
movups
and
jbe
sbbl
in
fdivs
dec
sti
mov
sub
cmp
loop
call
stos
test
cmc
jmp
push
insb
es
mov
mov
lret
pop
xchg
jg
pop
push
lcall
sub
jecxz
mov
cmp
es
in
xor
or
xchg
into
mov
imul
jne
pushf
loop
mov
stc
jmp
xchg
rorl
add
xorb
xchg
lret
or
out
cmp
test
repnz
pop
lods
or
jmp
xor
cmp
pop
inc
in
fimuls
jl
addb
imul
das
or
aas
inc
xor
flds
fstpl
test
leave
pop
lret
mov
popl
mov
inc
sbb
push
mov
icebp
iret
xchg
int
adc
or
clc
mov
jle
xchg
aam
cmpsb
dec
jle
add
outsb
or
inc
xchg
inc
and
fldl
fwait
movsl
les
ja
sub
adc
mov
inc
jne
mov
xchg
sbbl
outsl
xor
mov
pop
out
push
xor
cwtl
cmp
aaa
inc
data16
hlt
je
fstpt
jb
inc
jle
addr16
jg
mov
or
sbb
and
cmp
inc
jecxz
popa
shlb
das
andb
xor
movsl
dec
insb
dec
ss
sub
mov
inc
shll
cmp
jecxz
add
cltd
mov
cwtl
add
mov
mov
dec
mov
mull
imul
adc
sub
nop
filds
jnp
popa
mov
xchg
in
pusha
jge
outsl
jge
icebp
add
push
push
dec
into
xchg
sbb
roll
mov
dec
fwait
inc
sub
cld
push
push
mov
enter
lock
jns
jp
sbb
push
andl
mov
int3
mov
stos
push
cli
jnp
out
movsb
fldcw
lahf
push
pop
popf
sahf
ljmp
xorl
push
lahf
mov
sti
loopne
jecxz
jbe
and
jne
jl
movb
repz
or
je
cli
jl
loop
or
xchg
inc
cmp
test
fsubrp
xor
sbb
outsl
jnp
aaa
js
mov
adcb
fmull
les
add
addb
inc
mulb
stos
test
outsb
fwait
cmp
xchg
shrb
js
outsl
test
fcoml
je
or
add
jae
xor
dec
sbb
fbld
cmpsl
std
cli
adc
cmp
pop
dec
jnp
xor
sub
movl
push
jmp
dec
mov
ljmp
andb
xchg
mov
shrl
push
inc
cmc
aad
cmc
jns
or
mov
lahf
sahf
imul
sbbl
mov
xor
cmp
lods
dec
outsl
cld
xchg
inc
xor
fmull
ljmp
dec
stos
xchg
stos
lahf
inc
xlat
sub
mov
mov
stos
push
pop
hlt
fdivl
imulb
rcrb
mov
xor
dec
mov
test
cmp
push
jbe
jae
mov
and
lea
stc
repz
push
push
cs
inc
cmp
mov
adc
xchg
mov
mov
adcb
push
ret
fwait
xchg
out
frstor
pop
xchg
mov
mov
xchg
inc
mov
dec
lods
inc
pop
push
jae
stc
adc
pop
add
sbb
mov
les
je
mov
mov
repnz
xchg
xor
rolb
in
enter
fimuls
adc
shll
mov
mov
fwait
jo
inc
sbb
int
out
inc
inc
gs
cmpsl
xchg
sub
in
cmc
mov
pop
into
mov
add
movl
jb
push
jmp
push
jne
cmc
lahf
push
cmp
push
or
adc
push
xor
mov
cmp
imul
mov
scas
jne
cld
mov
jne
xlat
xchg
sub
xor
mov
pop
pop
or
in
mov
cmp
pop
sahf
xor
movswl
push
popf
mov
xchg
lcall
xchg
adc
negl
stc
jge
rclb
cmc
stc
dec
mov
aaa
inc
ficoml
dec
xchg
sbb
pop
mov
pop
das
push
std
movsb
movsb
movsl
mov
lock
out
ja
movsl
and
in
and
xchg
jmp
popa
mov
xor
popa
xor
movsb
addr16
pop
adc
dec
mov
xor
push
sub
cmpsb
nop
shrl
aam
xchg
pushf
jne
jb
int3
in
or
push
int3
xor
dec
andb
mov
and
add
mov
repnz
jle
push
sahf
mov
jno
arpl
adc
xchg
hlt
aam
and
xor
and
push
jmp
test
in
ffree
push
mov
push
xor
imul
shl
jmp
movsb
pop
pushf
ret
cli
mov
lods
mov
push
mov
mov
jb
int
sarb
mov
push
cmp
js
sbb
cwtl
inc
pop
xlat
xorb
pushf
and
loopne
cmp
lods
std
mov
jne
loopne
stos
dec
push
xchg
jecxz
int3
jb
lock
and
cs
mov
xor
subl
adc
dec
sub
fisttps
push
aad
roll
imul
push
rcrb
push
clc
push
mov
sti
push
adc
sub
jnp
jmp
or
mov
fcmovb
mov
dec
stc
lcall
gs
leave
cmc
mov
jnp
xlat
adc
push
adc
in
sbb
mov
sti
je
mov
or
rcl
push
cmpb
xchg
or
mov
xchg
in
and
jle
jl
push
or
popf
cmp
cmp
xchg
leave
scas
xlat
sarb
popf
out
pop
cli
lock
xor
pop
sbbb
aaa
mov
sub
pop
into
stc
xor
popl
stc
lahf
pop
xor
and
jecxz
out
jmp
lahf
push
fstl
jb
ja
stos
std
xor
dec
mov
push
jne
cld
push
stc
mov
jg
or
mov
daa
jno
jp
scas
inc
or
rorl
mov
pop
mov
lods
pop
clc
icebp
mov
bound
mov
mov
lea
xchg
das
leave
or
pop
mov
push
sbb
mov
add
xor
or
nop
fiaddl
cli
mov
clc
call
mov
repnz
add
cmp
inc
int3
pop
sbb
mov
fsubs
fldcw
push
sbb
jecxz
sub
dec
mov
dec
cmpsb
sub
jb
xchg
movsl
mov
jmp
cmp
int
pop
mov
lea
mov
xchg
fs
lahf
or
hlt
jecxz
sti
psllw
and
dec
lret
cmp
ret
jmp
add
data16
cwtl
xchg
out
jnp
inc
jo
xchg
cmp
inc
bswap
mov
inc
movsb
mov
mov
inc
div
or
fwait
enter
push
jb
lock
popa
mov
jg
rclb
sbb
adc
pop
mov
stos
movsb
lret
movsb
jg
jmp
xor
fsubp
jecxz
and
or
leave
ja
push
fwait
push
and
mov
lea
or
daa
xor
aad
jae
xchg
popf
daa
test
mov
ljmp
push
hlt
push
jecxz
and
mov
shrl
lods
inc
lds
xor
sub
jle
cmc
sub
ss
adcb
sahf
mov
pop
int
in
adc
fwait
dec
sub
dec
add
lcall
cmpb
rol
cld
cmp
or
jle
or
add
pop
sbb
pop
adc
orl
jmp
adc
mov
test
aas
clc
jno
out
imul
daa
sub
add
shlb
or
sbb
or
sbb
fwait
out
loopne
dec
mov
outsb
push
jl
pop
out
mov
fidivl
push
mov
mov
loopne
jnp
popl
psubsw
sub
cmp
leave
outsb
push
and
pop
in
add
dec
nop
xlat
jo
imul
mov
leave
loopne
add
jns
pop
jae
sub
movsb
dec
pop
test
mov
stos
sti
lods
movsb
stos
add
fcomps
xchg
in
xchg
xor
scas
cltd
lea
or
dec
jno
xor
add
push
pop
cvtps2pi
mov
lcall
arpl
inc
or
out
ss
pop
push
add
mov
popa
pop
addr16
mov
xchg
mov
fstpt
xchg
sbbl
fiadds
imul
push
cmp
fstl
add
push
test
lock
imul
xchg
inc
mov
scas
inc
dec
mov
in
jnp
and
das
push
pop
xchg
inc
dec
mov
lods
popw
fs
add
xchg
push
pop
xchg
andl
xchg
or
push
inc
aam
arpl
cmp
std
or
nop
outsb
dec
es
mov
jecxz
je
shlb
rorl
dec
int3
fistps
std
jl
testl
xor
pop
mov
in
push
rcrb
xlat
pop
dec
push
ret
dec
fisubl
loopne
cltd
ficompl
lods
aam
sub
repnz
xchg
lret
cmpsl
frstor
or
sahf
outsb
mov
mov
inc
fwait
xor
mov
subb
inc
jns
stos
jmp
or
inc
jo,pt
pop
je
xchg
sub
test
adc
pop
jns
lods
test
in
push
test
pushf
jnp
sbb
sub
test
mov
sahf
movsl
push
inc
adc
push
fs
das
inc
or
mov
add
and
in
xor
sbbl
ret
lahf
addr16
adc
insl
push
call
push
shr
nop
and
fstp
leave
dec
stc
jle
testb
in
test
or
sub
dec
aam
xor
sbb
add
insl
insb
test
jmp
inc
mov
cld
sbb
xchg
mov
addr16
add
and
pop
adc
pop
push
rorb
loopne
repnz
inc
int3
add
push
int
xchg
rcrl
add
fstps
xchg
mov
xor
mov
sarb
sub
add
andb
mov
push
pop
inc
out
loope
jnp
shr
add
dec
dec
adc
sub
dec
pop
das
or
adc
push
dec
daa
sbb
aas
xchg
jl
mov
dec
stc
push
mov
add
adc
jp
bound
jg
aad
out
shlb
pop
pop
pop
mov
ljmp
ret
fistpll
jle
fwait
pop
or
icebp
scas
pop
sbb
add
xor
or
cwtl
insb
adc
push
mov
or
sbb
pusha
mov
push
dec
lret
or
fmuls
subb
addr16
push
mov
xchg
mov
pop
adcb
std
shlb
sarl
add
pop
addl
mov
jae
loope
shll
mov
imul
push
xchg
dec
dec
dec
addr16
xchg
jp
adc
aaa
ljmp
cmp
js
mov
sbb
and
loope
cld
cmp
mov
scas
sub
ja
ljmp
sub
shll
mov
movsl
lea
or
xchg
cmp
mov
adc
popl
aas
and
xor
push
xchg
lcall
cld
ficomps
scas
mov
sub
dec
or
cmp
cmpb
aam
xor
mov
push
sub
xor
lret
xchg
mov
cmp
ss
cs
sbb
stos
lahf
out
ja
pop
jle
mov
pop
push
cmc
sahf
faddl
shll
loopne
jbe
xlat
push
cmpsl
fdivrl
mov
add
into
insb
dec
sub
nop
pop
cwtl
xor
insb
dec
loop
pop
arpl
jle
cmpsb
loope
repz
pop
inc
xchg
pop
mov
sub
jp
addr16
inc
fdivs
inc
xchg
test
mov
pop
fadds
cmp
jge
and
sbb
scas
mov
mov
sbb
in
sbb
or
and
jg
out
addr16
aam
pop
nop
xor
pop
push
arpl
pop
int3
xor
dec
sub
fmuls
sub
clc
inc
movsl
push
fwait
lret
mov
in
xorpd
dec
int
fsubl
pop
mov
mov
push
shrl
jmp
lahf
adc
jne
adc
cmp
stos
push
mov
pop
lret
clc
mov
lock
xchg
mov
mov
rorl
orb
pop
mov
repz
inc
jne
movsl
cltd
mov
ss
fisubrl
jge
andb
mov
dec
push
test
cmpsl
mov
shlb
xchg
mov
or
leave
jl
or
mov
adc
push
in
in
and
sbb
jo
sbb
push
jb
inc
jns
adc
sbb
rolb
in
callw
xlat
cmp
idivb
scas
movsb
lock
dec
inc
xlat
dec
mov
and
xchg
xchg
mov
mov
repz
outsl
push
jg
loopne
icebp
addr16
xor
data16
inc
xchg
shll
fisubrs
sub
jno
aaa
dec
push
dec
pop
xchg
insb
in
dec
mov
loop
inc
cli
mov
ja
rclb
bound
adc
xchg
rcrl
into
jle
pop
add
dec
inc
xchg
lock
sub
test
inc
daa
repnz
mov
xorb
je
add
clc
add
jo
sbb
insl
ss
mov
sub
gs
clc
or
sar
jp
mov
cmp
xor
scas
cmp
pop
xchg
repnz
test
mov
les
in
xor
mov
xchg
rolb
sti
popf
cmp
lock
inc
and
mov
cld
int
inc
ja
xchg
adc
push
adc
rolb
dec
lods
movsb
dec
mov
sub
and
or
in
jle
insb
std
mov
mov
mov
repnz
aad
notb
imul
mov
adc
pop
xchg
xor
or
pop
cltd
mov
es
fldt
call
push
mov
xor
cmp
jo
add
cmp
jge
and
repnz
or
call
adc
insb
popa
nop
pop
out
xchg
mov
clc
jne
mov
scas
xor
add
xor
xchg
sub
xor
inc
sbb
clc
or
stos
add
mov
sbb
lret
or
pusha
bound
mov
cmp
call
repz
out
pushf
lahf
mov
push
sub
stc
ret
push
mov
push
cmp
add
xchg
cli
xchg
in
mov
int3
cmpsb
xor
dec
aas
sub
mov
daa
int3
sbb
dec
push
dec
repz
mov
mov
sbb
or
loopne
xor
jb
rep
imulb
std
loope
jp
inc
inc
jae
cmc
andb
lods
add
shll
in
jecxz
mov
out
in
push
loopne
sub
fdivr
cltd
or
testl
and
inc
cs
lea
mov
fisttpl
or
loope
gs
mov
int
shlb
in
jae
cmp
jb
add
push
int3
adc
hlt
dec
je
adc
xor
and
xor
cmc
xchg
adc
dec
sub
sti
xchg
inc
pop
pushf
ja
jl
mov
push
mov
adc
cltd
je
mov
sbb
xor
add
dec
dec
xor
pop
xor
cmp
jl
push
mov
jno
xor
push
into
inc
aad
pop
mov
testl
lods
sub
daa
imul
or
and
cld
sti
inc
xchg
lods
psubusw
ret
push
int
jb
mov
lods
jb
sub
scas
sub
fidivrl
and
fldenv
in
xor
pop
enter
mov
call
and
aam
daa
gs
aaa
mov
jmp
add
push
bound
mov
cmp
jno
jno
lods
lcall
lahf
push
adc
xor
dec
sub
icebp
js
in
xchg
fdivp
nop
mov
push
mov
hlt
insb
subl
imul
mov
mov
test
ds
cwtl
mov
out
insb
daa
hlt
rcr
pop
add
repz
xor
out
ret
or
aad
cmpsb
shl
into
popf
lods
sub
jl
adc
hlt
decb
ss
jge
and
or
mov
jmp
jns
cmp
mov
push
lea
aaa
dec
adc
jnp
xchg
and
iret
scas
insl
or
fsubrl
push
lret
xchg
xor
insl
mov
scas
scas
mov
lcall
addr16
xor
inc
push
mov
push
in
mov
nop
mov
adc
rclb
jmp
mov
gs
sub
mov
sahf
inc
mov
dec
mov
cmp
icebp
sarb
nop
and
cmp
sbbb
pusha
fsubp
arpl
xchg
inc
into
les
jp
lahf
jge
jle
into
into
stc
ret
adc
sbb
inc
int
add
je
and
pop
sti
lret
jns
out
add
cmp
pop
mov
mov
addl
dec
fnstsw
jns
adc
push
mov
cmp
and
aas
sbb
cmp
popa
or
xor
mov
inc
int
in
repz
adc
movsb
push
cmpsb
and
xchg
pop
shll
aaa
jmp
and
and
inc
jle
in
sub
mov
pop
and
inc
adc
mov
bound
out
bound
push
sub
fdivl
es
add
or
stos
mov
sbb
inc
clc
sub
mov
add
xchg
sbb
fisttpl
aas
push
test
aad
xor
push
inc
rol
movsb
sub
ret
push
pop
insb
push
fstl
insb
cltd
add
dec
addl
xor
sub
push
push
imul
hlt
sti
fs
inc
lcall
pop
fistps
in
cltd
lods
sti
xor
imul
mulb
pop
sub
sub
negl
xchg
mov
in
mov
int3
call
inc
sub
ljmp
outsb
es
add
mov
xor
jge
xchg
or
adc
ret
into
dec
sbb
add
inc
int
stos
mov
or
movsb
andl
into
cltd
cli
es
cmp
jne
ret
lahf
jg
icebp
cld
pushf
mov
test
flds
push
aad
frstor
fistps
sub
xorl
xchg
mov
xlat
lea
push
out
scas
shrl
repz
dec
fmul
jbe
push
hlt
jne
adc
aaa
rcrb
js
outsl
xchg
pop
cmp
jmp
popa
cmc
rorl
mov
cwtl
mov
iret
out
insl
imul
adc
mov
or
scas
test
lret
push
lahf
inc
punpckhwd
sarb
adc
sbb
jg
hlt
push
mov
mov
cld
mov
xchg
into
in
into
sbb
jns
pop
bound
dec
sbb
sbb
inc
in
sbb
into
xlat
testl
roll
in
aas
out
pop
hlt
sbb
loope
mov
roll
and
adc
mov
cld
add
or
loop
cmpsl
aas
stos
sbb
jns
rclb
inc
or
push
push
mov
cmpl
sub
test
dec
push
lret
in
xor
fsubrl
inc
dec
ljmp
lcall
sub
jmp
add
ret
lea
fnsave
adc
das
add
jmp
dec
sub
sti
mov
and
cmc
sub
test
mov
ljmp
cmc
or
jmp
inc
icebp
or
adcb
sti
pop
fcmovnbe
popa
std
movsl
jno
dec
addr16
mov
int3
fbstp
push
xchg
out
mov
nop
push
jg
inc
jg
mov
sbb
add
out
add
cmp
cld
mov
int
aad
ds
test
sbb
lret
test
lret
daa
sahf
sub
add
repz
std
cmp
mov
inc
sahf
ja
xor
pop
jne
mov
incb
aas
movsb
xor
xor
jecxz
jbe
and
fs
jp
xchg
ja
psubusw
fwait
dec
movsb
cld
sbb
lds
xlat
stos
or
ret
ja
dec
jnp
adcl
mov
lds
out
pushf
sbb
mov
pop
jg
das
mov
jnp
stc
cmp
mov
mov
fisubrs
add
adc
cmp
pop
aaa
stc
lahf
or
into
dec
adc
test
inc
or
inc
mov
sarl
jo
mov
jne
int
and
add
sub
popa
pop
mov
jp
lock
cld
je
mov
addr16
sbb
sbb
pusha
add
cmp
pop
sbb
test
shlb
mov
pop
mov
add
lahf
in
ja
imul
sbb
mov
lock
jmp
bound
cmpsb
clc
inc
and
jae
gs
ror
mov
lods
mov
adc
outsb
add
call
js
pop
ret
cli
and
test
lcall
movsl
lcall
pushf
dec
xchg
out
mov
sbb
sahf
adc
jo
andl
jno
out
push
add
add
aaa
iret
pop
sbb
mov
sti
push
push
fstps
or
bnd
add
and
dec
fucomi
lods
std
repnz
lret
cs
jecxz
or
pop
mov
dec
int3
jno
sbbb
arpl
in
scas
xorl
push
fiaddl
lret
fbld
icebp
popa
insb
fwait
dec
test
int3
repz
stos
fidivs
popa
push
mov
jl
pop
jno
cmc
mov
iret
ss
mov
xor
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
jmp
outsb
lods
or
mov
cmpsb
or
push
and
scas
addl
pop
pop
test
clc
xor
xchg
lock
adc
cmpb
idiv
addr16
add
rcl
mov
xchg
cmpsb
rcr
insb
pop
pop
xlat
rolb
push
ja
cmp
mov
ds
inc
pop
icebp
xlat
sahf
jno
pusha
push
dec
push
add
aaa
dec
push
setne
or
push
add
pop
inc
bound
mov
jb
xor
adc
mov
push
aad
int
fildll
cmpsb
mov
xchg
fimuls
sbbl
push
jbe
mov
push
nopl
lock
inc
and
xlat
or
std
ret
outsb
rcr
sbb
nop
mov
jmp
leave
insl
sti
inc
pusha
fcmovne
inc
cmp
dec
fbld
fisttps
inc
es
mov
aaa
inc
stos
sub
inc
pop
xlat
and
aaa
fsubrl
in
dec
loop
fisubrs
pop
mov
dec
xor
sbb
or
mov
xor
mov
loopne
pop
pop
je
cs
std
clc
arpl
orb
shlb
jb
or
cmp
int3
or
out
fsubrl
and
xchg
dec
int3
cmc
out
out
mov
mov
xor
test
dec
idiv
dec
pop
xor
push
es
lds
cmp
jl
mov
pop
push
outsb
xchg
fisubs
addl
fs
dec
jb
mov
clc
movsl
xchg
pop
jbe
inc
lcall
pop
fbld
stos
or
push
fisttpll
cmp
aas
std
lret
inc
add
loopne
pop
fidivrs
push
stos
inc
jge
movsl
enter
shll
cmp
jbe
sbb
xchg
lcall
in
adc
cmp
insl
lds
adc
push
mov
loope
adc
js
inc
push
mov
inc
ret
lret
jae
xor
popa
lods
mov
pop
push
adc
hlt
pushf
push
push
icebp
inc
shlb
lock
push
movsb
and
jbe
sbb
sub
dec
pop
leave
scas
movsl
sub
mov
adc
xor
inc
aas
xchg
adc
ficoml
mov
adc
mov
pusha
add
scas
scas
inc
dec
setge
cmp
sahf
sarb
sub
mov
icebp
fldenv
pop
add
fwait
loop
das
jmp
jno
hlt
insb
xor
nop
jns
rolb
gs
int
mov
outsb
adc
add
into
pop
jb
dec
add
inc
mov
je
adc
insl
adc
out
dec
leave
popa
inc
mov
push
xor
mov
ss
iret
imul
add
dec
jns
push
mov
xlat
addr16
inc
mov
jecxz
pop
dec
add
and
aad
std
adc
data16
jbe
push
cs
push
mov
jb
pop
pop
loope
mov
cmpl
int3
cmp
mov
popf
shlb
cmp
inc
dec
fnstcw
cs
outsb
push
test
mov
jnp
and
dec
fdivrs
xchg
dec
inc
rcll
or
mov
or
or
cmp
lods
ret
cmp
push
ja
and
shll
mov
ja
push
jl
int
jb
std
insb
sub
push
pop
pop
lret
in
sbb
js
cld
enter
hlt
dec
out
fs
xor
inc
out
out
push
push
dec
repz
adc
sub
or
push
outsl
faddl
mov
pop
mov
sbb
mov
in
int
cld
sbb
dec
mov
add
int
sbb
mov
mov
sbb
add
push
jns
jp
sbb
movsl
fmull
xchg
lret
dec
adc
jns
shrb
stos
cmp
lods
aam
add
or
add
or
add
sub
sarb
subl
mov
dec
scas
xor
outsl
clc
fstpl
jne
add
xchg
lods
mov
xchg
call
jno
fimuls
popa
jmp
inc
repz
xchg
int
jo
sar
in
jp
rolb
dec
call
ret
adc
sub
xchg
stc
mov
lahf
outsb
mov
xchg
jo
cwtl
negb
or
arpl
popf
add
sbb
repz
lds
xor
sub
inc
sti
or
adc
adcb
insb
shrl
dec
enter
div
rcr
leave
aas
sbbb
cltd
add
icebp
shl
lcall
mov
movsl
imul
divb
add
lock
aaa
addl
mov
loope
int
jb
test
push
nop
ljmp
iret
mov
pop
mov
into
mov
add
jo
xchg
stc
pop
dec
sub
es
cmpsb
sahf
lea
mov
or
jns
fildl
lret
bound
les
jne
or
mov
outsl
adc
loop
pop
push
bound
mov
jns
or
cmp
sbb
inc
inc
mov
cmc
inc
fs
rcrl
lcall
xchg
scas
fnsave
jp
stos
jmp
push
xor
pop
ds
sbb
mov
cmpl
daa
test
insl
mov
jmp
ljmp
stos
in
repnz
mov
inc
jecxz
imul
mov
sbb
mov
push
sub
shl
xor
out
and
in
daa
leave
lods
xchg
push
inc
jbe
mov
int
add
dec
test
push
rcl
into
nop
fdivl
xchg
fsubs
imul
and
jp
std
addr16
lods
repnz
ret
mov
jbe
stos
mov
out
and
or
scas
jecxz
lea
ds
jge
xorl
xorl
pusha
push
outsb
enter
push
xor
mov
loopne
jnp
jecxz
loopne
and
sti
cltd
ss
icebp
cltd
sub
adc
xchg
and
push
and
popa
xlat
rcll
imul
inc
sar
pop
mov
notb
jge
lock
xor
push
ret
sub
das
jg
add
mov
cmp
xor
rorb
pop
xchg
roll
cmpsl
insl
jl
gs
inc
cmp
dec
lret
sub
pop
or
fists
or
xor
enter
inc
or
push
repnz
pop
mov
ja
lods
imul
jo
int3
stc
mov
mov
in
xlat
fisttps
jnp
sbb
sbb
sarb
sbb
inc
ds
call
loope
xchg
pop
mov
add
push
add
mov
ficomps
std
mov
push
push
pop
les
out
sbb
cmp
lret
jge
icebp
idivb
push
inc
inc
stc
es
or
add
insb
mov
push
in
aas
push
dec
in
movsb
cmp
inc
push
inc
xchg
shrl
popa
cmp
xor
call
lret
je
test
sbb
adc
mov
cmp
imul
fs
je
dec
jb
sti
add
mov
add
push
divl
add
adc
inc
enter
or
cmp
xorb
arpl
in
pop
inc
inc
scas
ficoml
sbb
les
xlat
mov
negb
std
leave
mov
lret
in
or
dec
jmp
aad
sbb
imul
cwtl
imul
jecxz
and
lcall
int3
push
repz
popf
xchg
jbe
rorl
mov
sbb
push
pop
loop
add
imul
sar
outsb
pop
xchg
pop
js
lock
inc
cmp
pop
jmp
mov
ds
jo
mov
fcoml
sbb
dec
xchg
jo
ss
fimull
push
leave
rolb
xor
lods
insb
push
mov
push
push
pushf
dec
or
dec
loop
js
bound
popa
les
test
mov
inc
jo
jl
and
repnz
jo,pt
xchg
outsb
mov
mov
ficoml
flds
mov
lea
sub
cmpsl
sub
push
mov
dec
push
subl
into
inc
fldcw
pop
out
imul
adc
mov
mov
ss
inc
call
xchg
fisubrs
testb
push
adc
jle
xor
xchg
leave
cwtl
btl
and
addr16
jbe
leave
fdiv
roll
add
lahf
enter
nop
mov
or
imul
cld
repnz
add
cld
and
lret
fwait
aad
xor
or
out
pusha
lods
mov
and
dec
pop
mov
mov
mov
scas
imul
xor
mov
sub
in
lock
daa
jno
loop
jg
inc
sahf
lds
data16
test
mov
shrb
sub
dec
cltd
xchg
addr16
and
pushf
and
inc
mov
lret
loop
call
push
lret
repnz
icebp
sub
xchg
xor
push
cs
popl
sbbl
lcall
add
jle
daa
fsub
adc
das
jae
nop
mov
das
adc
psllw
nop
dec
xor
call
push
addr16
iret
repnz
mov
js
dec
out
xchg
jb
bound
sbb
ss
fldl
xchg
mov
mov
push
lret
addr16
dec
and
nop
std
aam
fwait
cwtl
stos
test
std
inc
cmp
push
and
add
add
push
cmpsb
sub
pushf
in
mov
sti
scas
push
mov
jne
push
ds
push
xchg
mov
sbb
daa
lods
ret
mov
xlat
inc
mov
pop
or
inc
and
pop
xor
es
and
icebp
jecxz
cwtl
mov
xchg
movsl
mov
xlat
aad
gs
sbb
adc
push
jo
ja
mov
insl
jecxz
jbe
mov
pop
outsb
xor
loop
inc
arpl
cli
dec
xchg
xchg
mov
inc
jmp
leave
insb
mov
in
mov
imul
push
push
sub
lds
jge
sub
leave
mov
incb
sbb
lret
outsb
ljmp
dec
scas
in
hlt
pop
sbb
add
pop
push
ret
ret
ret
movsb
pop
fwait
mov
pop
int
lahf
imul
lds
push
cmpsl
adc
stos
inc
inc
jecxz
mov
es
popf
in
xlat
inc
xchg
add
xchg
jns
test
xor
xor
xchg
orl
ja
sti
je
insb
ret
shr
lret
sbb
repz
jge
mov
mov
rcrl
inc
in
adc
adc
icebp
sub
add
mov
add
jae
mov
xchg
jle
mov
mov
add
sub
lock
loop
and
data16
push
jl
pushf
jg
mov
pop
dec
dec
fnstsw
jge
sub
and
cmp
xlat
dec
in
movsl
push
push
sbb
sub
fwait
adc
jmp
ret
leave
jl
jmp
stos
sub
inc
fdiv
jp
stos
lods
push
int3
das
sbb
sub
ret
mov
xchg
pop
sbb
lret
test
adc
jno
cltd
fcoms
sbb
push
aam
xchg
hlt
pushf
out
nop
imul
test
insl
iret
out
cmp
jbe
add
and
xchg
jb
ja
fldenv
fnstenv
popa
adc
dec
lahf
push
jmp
push
das
es
jmp
mov
dec
into
dec
inc
sbb
sbb
sub
shlb
cmp
ds
lock
cmp
mov
inc
into
imul
ja
sbb
dec
and
jl
push
or
js
sbb
sbb
mov
cmp
aaa
pop
scas
xor
les
lahf
mov
pop
xor
leave
mov
pop
insb
fstps
xchg
push
dec
pop
cwtl
rorb
shll
popa
xchg
jmp
sbb
aaa
dec
scas
pop
jmp
sub
test
roll
ja
xor
fs
jno
imul
jne
fisttps
sahf
mov
int3
jp
jns
jo
mov
mov
jg
icebp
test
adc
jbe
sub
mov
iret
inc
mov
push
out
xor
sub
mov
in
incb
sar
inc
stc
push
in
test
sub
adcb
cmc
call
xor
lcall
bound
ss
mov
cs
inc
inc
sub
sub
cli
push
sbb
sbb
insb
and
das
jbe
cmc
ret
or
cmpsl
repnz
xor
dec
fstl
push
mov
and
invd
cmp
test
jl
je
leave
or
pop
mov
imul
ror
adc
sub
cmp
dec
dec
shl
cmpsl
negl
jmp
fsub
stos
loope
adc
mov
fisubs
movsl
arpl
adc
inc
jbe
jp
shlb
or
xlat
mov
sbb
push
xor
add
dec
es
sub
xchg
sbb
daa
and
or
dec
sub
pop
ret
jle
aas
lock
adc
sarb
or
xchg
mov
pop
lahf
scas
inc
inc
inc
rcll
jo
and
fsubs
popa
adcl
scas
mov
pop
xchg
ds
ret
inc
cmp
mov
aad
pushf
pop
and
jns
adc
xchg
xchg
jb
out
mov
inc
std
mov
mov
sbb
pop
pop
sbb
stc
sbb
sub
mov
jno
in
sub
jmp
popa
out
insl
fs
imul
ss
imul
push
stos
insl
sub
aad
out
loope,pn
jge
in
mov
xorl
push
xor
mov
test
bound
sbb
dec
push
ljmp
add
inc
dec
in
push
xor
mov
mov
cwtl
add
sub
pusha
xchg
cmp
mov
aas
daa
je
cli
mov
cmpsl
jnp
jo
pop
adc
int
insl
std
repz
xor
in
dec
sub
sbb
xchg
std
xchg
test
and
scas
dec
sti
adc
adc
stos
or
dec
sub
xchg
or
jl
jno
pop
jmp
or
mov
and
mov
nop
lret
jbe
mov
mov
and
sti
pop
pop
popf
and
jnp
loope
mov
pop
repz
or
sbb
fidivrl
pop
loope
adc
ja
xor
adc
orb
ret
mov
sbb
pop
xor
inc
fsubrp
jne
lret
sbb
pop
out
or
or
mov
aad
stos
or
addr16
add
outsb
add
nop
in
sub
jle
mov
aam
mov
push
mov
inc
testl
xchg
xchg
stos
iret
inc
arpl
inc
inc
dec
push
fdivrl
fildll
pop
mov
dec
scas
dec
sub
jnp
mov
dec
mov
test
jle
mov
or
fs
and
add
xchg
loope
data16
jmp
or
ja
mov
xchg
movsb
subb
ljmp
outsl
aas
lock
je
call
push
test
lock
xorl
jp
adc
xchg
push
sti
les
ud0
lods
mov
mov
dec
cs
mov
adc
fcmovbe
or
xchg
fucomp
xchg
arpl
repnz
mov
mov
cmp
fdivrs
mov
jp
lahf
or
test
mov
xchg
inc
xor
out
mov
outsb
call
imul
jmp
out
add
loop,pn
jne
xchg
fldcw
push
cmp
mov
jo
lods
out
mov
out
les
mov
xor
aam
dec
xlat
and
addb
fists
pop
insb
test
scas
sub
sbb
insb
outsb
cltd
out
push
in
dec
pop
movsl
push
lahf
outsb
and
repnz
mov
lods
call
xchg
xor
inc
mov
dec
lods
scas
loop
outsb
or
je
and
cmp
or
test
dec
int
cmp
mov
jbe
mov
xor
icebp
loopne
push
divb
sbb
into
adc
loop
push
sub
inc
es
dec
rcll
pop
imull
mov
dec
mov
pop
es
out
push
sub
fisubs
or
adc
adc
cltd
jns
mov
sub
js
out
mov
sahf
mov
sbbl
dec
push
in
shrb
cltd
lods
rol
jno
adc
iret
dec
mov
add
dec
cmpsl
dec
arpl
jno
jp
ja
in
lcall
pop
xor
aas
in
adc
mov
mov
inc
mov
jno
and
cmp
dec
push
outsl
rcll
je
jecxz
test
push
or
addr16
sbb
fstpt
inc
dec
insl
xchg
inc
pop
in
mov
stc
xchg
scas
jle
sarl
jp
jle
adc
or
shll
negl
inc
fldl
mov
ss
mov
hlt
out
or
and
pop
in
ss
enter
jp
bound
rcrb
call
and
iret
and
js
cld
push
test
data16
fimuls
xchg
rcl
in
push
std
jbe
jmp
scas
push
mov
fstps
xchg
jbe
push
rclb
sbb
out
dec
inc
in
add
adcb
mov
data16
mov
push
bound
cs
lods
loope
mov
mov
mov
cmpsb
xchg
mov
mov
inc
push
dec
cli
jnp
cmp
sbb
xlat
scas
cmp
mov
out
push
lret
jge
loope
jmp
sbb
les
out
test
idivb
mov
ficoml
iret
insb
mov
add
jnp
in
mov
in
les
loopne
sbb
push
dec
cltd
iret
inc
out
lret
movsb
lret
mov
dec
sub
sarl
cld
adc
dec
cmp
pop
test
pop
xor
test
add
or
inc
movsl
fdivl
pop
stos
std
addr16
sahf
fists
fbstp
xor
sub
sbb
loopne
ret
adc
jg
in
sub
sti
fsubp
call
lret
clc
mov
push
cmp
lods
ret
lret
mov
mov
mov
xchg
mov
mov
lods
imul
pop
test
mov
ficomps
call
fwait
pushf
xchg
cmpsb
push
cmp
cmp
mov
das
lret
sbb
lock
dec
loopne
mov
xchg
push
add
lds
mov
sub
dec
push
xor
mov
cwtl
popf
cmc
hlt
leave
std
sbb
dec
dec
loope
outsb
repnz
pop
and
rorl
repnz
mov
arpl
fwait
jecxz
pop
imul
push
ds
sbb
jg
js
inc
adc
inc
push
es
or
mov
aam
inc
push
shrb
push
mov
bound
push
lret
or
pop
negl
xchg
and
push
pop
jo
add
test
fldl
inc
push
fcoms
dec
add
push
mov
and
mov
xor
idivb
je
jb
pop
inc
mov
adcl
cmp
push
push
in
jno
sbb
jmp
in
mov
and
pop
aaa
es
lret
mov
push
ret
out
dec
mov
inc
andl
xor
imul
aas
sti
lret
aad
cmp
fldenv
ficoms
fsubl
ret
in
loope
pop
mov
popf
cmc
push
fadds
push
out
pop
mov
pop
sbb
sbb
popf
lods
test
mov
dec
mov
das
popa
jle
fimull
jg
push
push
inc
pusha
dec
cli
lahf
cs
dec
push
jg
ficomps
in
push
mov
nop
pushf
negb
inc
jae
sbb
add
das
adc
mov
or
iret
pop
adc
repnz
fidivrl
in
sub
aaa
xor
xchg
insb
xchg
pop
enter
rol
lock
test
xchg
sub
repnz
push
sub
jne
mov
js
imul
fcmovbe
pop
or
jecxz
loop
mov
mov
dec
jge
sbb
cmp
mov
mov
rolb
mov
inc
test
cmpsl
cmp
push
mov
mov
in
iret
lret
pop
daa
sti
dec
sbb
adc
nop
dec
xchg
out
subb
jge
push
push
cs
sub
dec
jmp
adcl
jl
jl
lods
cmp
xor
push
jge
jg
mov
push
mov
lods
jno
lret
dec
dec
add
dec
fcmovbe
adc
adc
cmp
mov
cld
mov
sti
mov
cltd
xlat
mov
sub
lods
mov
shlb
call
add
pop
sub
frstor
incl
lahf
sub
push
int
mov
clc
and
pop
dec
in
cmp
sbb
jl
sbb
pusha
ror
nop
mov
xchg
and
dec
lcall
fmulp
jmp
out
jp
mov
dec
add
xor
fsubs
scas
mov
iret
lea
pop
adc
add
add
sub
cli
cld
mov
sub
push
pop
jmp
ret
lret
or
jmp
inc
jg
iret
mov
fildl
sbb
and
int3
fimuls
push
movsl
clc
mov
mov
mov
jnp
jp
lock
xlat
push
pop
cmp
jno
es
fldt
sub
mov
scas
mov
hlt
mov
int
mov
push
push
push
push
xchg
cs
push
fimull
cwtl
cli
loopne
mov
push
sub
push
sbb
data16
inc
mov
fucomip
insb
outsb
sbb
mov
pop
loope
rorb
ret
imul
ljmp
sub
mov
add
jmp
xchg
sbb
mov
add
ss
loope
bound
sarb
push
mov
xlat
cmp
jmp
testl
lods
test
addb
mov
or
adc
dec
repz
xchg
cs
push
sub
mov
enter
shrb
jp
jbe
pop
pop
push
sbb
int
loopne
push
mov
mov
insl
in
adc
add
mov
test
mov
imul
repnz
inc
in
in
jns
jno
cmp
fidivs
cwtl
pushf
xor
shrb
adc
mov
mov
push
inc
dec
fs
lcall
inc
mov
fldl
dec
dec
dec
lcall
scas
ss
outsl
inc
jle
jns
dec
shl
jnp
outsb
sbb
outsb
test
jle
cld
dec
push
in
pop
popf
fistpll
loopne
jp
enter
or
insl
jge
sar
push
push
mov
into
jae,pt
add
sub
and
xor
cmp
sbb
pop
mov
fisubs
ljmp
dec
mov
pop
fistpl
push
mov
push
out
inc
out
pushf
xchg
dec
std
push
fmull
xor
push
incl
mov
out
cmpsb
mov
cmpsb
cmovno
outsl
sub
or
rcl
adc
ja
dec
int
addl
xchg
lods
add
mov
jb
sbb
mov
sub
mov
jl
leave
sub
shrl
jno
hlt
inc
pop
jb
dec
inc
ja
sar
mov
push
clc
add
inc
add
dec
mov
push
daa
or
sarb
repnz
das
inc
fldenv
mov
mov
and
icebp
ret
mov
pop
mov
xchg
cltd
inc
cltd
loope
rolb
mov
xor
xchg
mov
and
or
scas
daa
or
dec
cmp
push
sahf
in
adcb
cmp
xchg
pop
xchg
loopne
or
mov
push
mov
and
rcrl
and
sbb
inc
out
mov
mov
sbbb
pushf
mov
xchg
sub
cli
inc
mov
lea
arpl
adc
je
lea
imul
ss
bound
cmp
std
xor
push
adc
addr16
mov
jb
pop
sub
mov
call
cld
jb
test
aam
inc
pusha
xor
or
inc
inc
push
repnz
dec
shll
inc
xchg
mov
je
dec
cltd
imul
mov
jmp
pop
mov
test
dec
test
sbb
push
subb
mov
call
or
add
bound
cmp
ror
push
add
adc
gs
jo
xchg
xchg
lret
ret
cmpsb
xor
daa
dec
data16
lahf
mov
push
and
pop
mov
dec
xchg
icebp
sahf
mov
xchg
daa
and
mov
mov
sbb
dec
mov
ror
dec
xor
stc
fidivrs
popa
scas
pop
aam
fildll
test
sub
fstpl
add
pusha
inc
jns
or
rcl
mov
leave
int
cmp
inc
lret
pop
push
bound
mov
push
adc
sub
jno
fcomps
mov
jge
push
sbb
add
mov
push
fidivs
jg
aaa
inc
jns
icebp
pop
ljmp
adc
ret
icebp
leave
pop
or
out
mov
cmp
ror
ret
sbb
cmpsl
pop
or
xchg
cmp
and
repz
addb
sub
mov
aad
mov
ss
push
mov
add
fwait
cmp
mov
add
pop
mov
in
es
cmp
mov
ds
loope
cli
jp
int3
and
mov
addr16
shlb
cmp
ja
push
iret
ds
push
cwtl
push
ja
adc
js
lret
pop
rolb
insb
sub
jns
dec
add
xchg
aaa
and
mov
cmpsb
dec
jge
adc
lret
push
jnp
xor
sub
rcr
cmp
jae
push
and
subb
sbb
push
fdivl
xor
sub
fistpll
xchg
and
outsb
test
outsb
ret
rclb
arpl
out
xor
aas
testb
movb
xchg
fstps
and
add
cmp
in
mov
pop
xchg
add
xchg
addr16
outsl
push
je
int
cs
jo
adc
arpl
cmp
sahf
cmp
mov
mov
add
sarl
push
sbbb
mov
stos
bound
pop
ret
push
pop
and
repnz
pop
mov
jnp
bound
mov
jnp
pop
lret
push
insb
shll
jbe
fucom
fidivl
fwait
mov
and
add
int
sbb
and
pop
pop
repz
sub
lcall
sub
hlt
ret
popa
mov
xchg
add
inc
sbb
mov
mov
dec
push
insl
rorb
xchg
les
clc
cmpsb
mov
int3
arpl
rcrb
pop
js
jbe
and
call
ljmp
ret
push
clc
mov
pop
add
xchg
loopne
enter
dec
jo
inc
mov
mov
idivl
fbstp
lods
adc
gs
lret
mov
lahf
adc
jo
jae
mov
dec
mov
pop
jle
sub
inc
add
sbb
sbb
inc
and
setge
mov
pop
out
repz
pusha
and
jmp
outsb
lcall
dec
xor
je
add
cmp
cmp
lds
cmpsl
into
or
iret
adc
lods
iret
jo
push
dec
aaa
das
or
mov
loopne
popa
shrl
sbb
sub
sahf
cmp
xchg
xlat
jge
and
jne
shlb
mov
cmp
jns
das
jae
mov
in
outsl
jo
icebp
push
shl
mov
shll
mov
enter
movswl
xchg
sub
sub
shlb
lea
in
add
push
pop
sub
sbb
cmp
fiadds
mov
lds
push
mov
sub
sbb
mov
cmpsl
lret
pop
mov
push
es
movsb
mov
jbe
mov
or
or
ja
dec
sbb
sahf
sub
mov
and
mov
mov
inc
mov
push
cmp
mov
cmp
out
jbe
dec
loop
adc
mov
aaa
adc
adc
cmp
movsb
add
pop
xchg
pushf
out
mov
add
push
jo
xchg
add
fcmovnb
jmp
xor
adc
test
or
sbb
daa
stc
cmp
out
hlt
movsl
mov
addr16
xchg
dec
sub
xchg
adc
mov
adc
test
xchg
xchg
fcom
inc
es
adc
insl
into
icebp
rorb
shl
test
fwait
outsl
or
imul
shlb
mov
fisubl
cmpsl
movsl
test
lea
cli
mov
test
mov
scas
lahf
outsb
cpuid
jno
cmp
jge
push
div
in
inc
lret
pop
lret
ljmp
mov
idivb
jae
cmp
cs
stos
nop
cmpsb
cmpsl
inc
xor
clc
gs
pop
sahf
fwait
mov
lods
push
cmp
pop
rcl
loope
inc
inc
pushf
add
pop
scas
sbb
cltd
inc
or
fisubs
dec
push
rolb
test
out
xchg
adc
adc
adc
adc
sti
pop
push
xchg
in
ja
aam
or
mov
jp
pop
dec
inc
pop
or
rcll
inc
jp
fwait
push
pusha
mov
inc
inc
das
mov
jle
rcr
mov
add
test
test
rcrl
mov
xchg
jl
pop
mov
lea
aas
or
add
xor
int3
out
and
cmp
mov
dec
jno
inc
dec
sti
inc
in
jp
int3
into
jg
out
inc
les
pop
sub
loop
jmp
jnp
enter
rol
mov
loopne
and
push
push
aad
pop
jge
jecxz
cmp
je
sub
shl
xlat
mov
push
fists
jno
inc
fninit
stos
jp
pop
stos
push
inc
fldenv
movsb
mov
aad
sbb
inc
imul
jmp
adc
inc
mov
cmpsb
jmp
cmp
clc
inc
faddl
pop
xchg
push
addl
roll
ret
jmp
add
enter
cs
rcr
dec
mov
hlt
xlat
testl
mov
popf
mov
cmpsb
sbb
add
lods
mov
loop
cmpsb
insl
sub
jl
mov
xchg
cld
mov
adcb
add
lret
loopne
lock
add
test
repz
add
loopne
add
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
mov
xorl
mov
mov
sbbl
xor
xorl
add
mov
and
mov
and
xor
xorl
push
xor
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
or
mov
mov
subl
xor
mov
add
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
movb
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
jmp
lea
incl
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
xor
movl
add
andl
mov
sbbl
movl
push
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
or
push
mov
xor
xor
or
xor
mov
sbb
mov
mov
push
add
jmp
incl
mov
mov
inc
movl
cmp
jb
not
mov
xor
movl
add
jmp
movzwl
or
mov
adc
mov
adcl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
add
addl
movzwl
sbbl
mov
movzwl
and
mov
sbbl
movzwl
xor
add
mov
movl
mov
mov
inc
not
mov
movl
cmp
jne
and
mov
sub
mov
xorl
xor
and
add
mov
mov
sbbl
xor
add
adc
mov
addl
movl
movl
movl
movl
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
xor
add
movzwl
mov
mov
je
mov
subl
mov
xor
xor
notl
sub
notl
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
mov
movl
add
andl
imul
mov
xor
mov
mov
add
mov
add
incl
or
mov
mov
mov
sbbl
add
xor
mov
dec
mov
add
mov
add
and
and
mov
xor
mov
subl
mov
lea
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
or
mov
sub
movzwl
and
add
mov
andl
mov
xor
adcl
add
movl
jne
movl
jmp
xorl
mov
subl
sub
xor
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
or
dec
mov
jmp
mov
subl
mov
mov
xor
decl
xor
adcl
sub
sub
xor
mov
mov
mov
jmp
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
addl
imul
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
addl
add
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
mov
mov
andl
add
movl
xor
mov
subl
mov
mov
xorl
add
xorl
and
or
mov
mov
sbb
mov
xorl
mov
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
jmp
rcr
sbb
mov
nop
cs
or
aaa
imul
addl
clc
mov
pop
push
das
hlt
data16
mov
mov
mov
cmp
ficompl
jle
mov
xor
ja
sbb
data16
or
mov
and
or
xchg
xchg
enter
inc
lods
ret
sub
aas
es
xchg
sbb
xor
or
bound
fistps
dec
adc
push
cmc
xor
mov
faddl
xor
push
xchg
adc
into
ss
fidivrl
rcrl
cltd
dec
fnstsw
ret
fs
xor
scas
or
xchg
test
or
test
aas
aam
popf
decl
pop
push
mov
sbb
jno
and
xor
out
mov
push
scas
or
addl
aam
aad
ret
jae
rep
mull
scas
repnz
mov
dec
in
arpl
and
mov
and
or
scas
sub
loopne
in
ds
mov
cli
and
xchg
lods
push
xor
fldl
and
mov
insl
jge
in
xor
jo
imul
xchg
andl
adc
in
out
popf
out
jge
push
hlt
jmp
insl
sbb
jne
dec
inc
mov
adc
xlat
cmp
xor
add
mov
mov
jo
mov
xchg
fs
dec
dec
sub
fsubrs
and
inc
sbb
imul
aaa
je
mov
sar
rorl
xchg
sub
je
sbb
inc
cwtl
popf
mov
inc
jg
dec
mov
in
cmc
mov
or
cmc
fwait
int3
xchg
sbb
mov
dec
mov
daa
out
insl
lods
test
mov
fsub
mov
icebp
sub
icebp
jmp
fsts
jl
xchg
jecxz
insl
fimull
jle
in
xchg
mov
in
push
and
stos
mov
add
fidivl
jbe
rorl
not
xor
push
push
sbb
in
push
outsl
inc
outsb
loope
out
ret
mov
sbb
enter
jns
pop
adc
cmp
lret
pop
mov
mov
rcrb
fwait
push
sub
cld
enter
scas
inc
push
xchg
nop
or
fdivrs
cmc
pop
mov
sbb
dec
arpl
add
push
fbstp
inc
jg
push
jo
aaa
lods
idivl
mov
inc
inc
add
xchg
rorl
popf
sub
mov
dec
cmp
orl
fisubrs
push
movsb
pop
push
push
movsb
push
scas
clc
stc
mulb
inc
mov
mov
stc
dec
jmp
mov
popf
mov
popf
inc
outsl
ja
test
in
dec
add
popa
pop
lds
outsw
cltd
pop
push
push
xor
stc
push
into
icebp
push
lds
inc
jmp
sub
push
jo
icebp
cmp
aas
int3
pop
xor
xor
xlat
sub
push
in
jae
push
and
adc
loop
sahf
jns
and
mov
out
fcomp
loopne
scas
push
push
adc
pop
xor
int
mov
les
out
mov
cli
aas
ss
jle
out
pusha
aaa
mov
iret
into
fimuls
ss
inc
pop
cmp
mov
ret
cmc
mov
push
dec
mov
jp
adc
mov
mov
ss
aas
cmp
in
cmpsb
loop
nop
mov
popa
mov
cld
inc
loop
and
popf
mov
or
insl
negl
add
jb
out
adc
insb
and
ficomps
sti
es
jb
mov
xchg
imul
test
xor
jno
push
xchg
imul
repnz
arpl
lods
loop
xchg
jge
fcomps
adcb
in
in
xchg
jecxz
hlt
adc
jne
mov
loop
leave
divb
add
int3
movsl
mov
jle
sarl
xchg
mov
lret
push
test
enter
cld
hlt
and
incb
flds
repnz
push
mov
push
xchg
adc
mov
pop
mov
adc
pop
rol
cmp
push
pop
ret
pop
mov
jb
push
movsb
and
iret
sub
pop
pushl
outsb
or
test
insl
lcall
inc
cmpsb
cmp
fisttpll
xchg
sti
xchg
and
xchg
sbb
and
and
fisubl
push
pushf
call
pop
inc
xchg
and
mov
cmp
cmp
mov
scas
adc
cmpsl
sbb
cmc
cli
mov
mov
std
aas
and
loopne
rcll
sub
imul
popa
data16
push
dec
sbb
loope
dec
lods
outsl
mov
dec
add
pop
enter
push
fnsave
mov
scas
push
xor
xor
daa
lret
add
pop
sub
jbe
sbb
movzbl
or
cmp
push
into
shrb
loop
adc
sbb
aaa
adc
leave
rorl
adc
dec
xchg
imul
pop
xchg
cmp
hlt
cmp
mov
fisttpl
jae
dec
sbb
into
outsl
jnp
inc
cmpsb
outsb
add
scas
cwtl
xchg
scas
mov
fnsave
jp
mov
mov
sbbb
dec
shll
popf
ss
adc
aad
jp
mov
and
or
adc
jle
lods
out
jb
inc
sub
push
ret
add
push
pop
add
xor
lahf
cwtl
mov
push
pop
xchg
bnd
xchg
xor
xlat
mov
fisttpll
push
jp
decb
push
inc
pop
jle
sub
push
or
hlt
stos
adc
inc
subb
ja
add
inc
das
loopne
shll
ds
fldenv
mov
add
rorl
mov
subb
cmp
bound
sub
call
xor
mov
enter
call
aad
jo
test
insb
shr
int
mov
scas
ret
cmp
imul
xor
push
out
adc
ffree
cwtl
aad
lret
int
mov
pop
bound
sub
xor
add
jle
jno
iret
inc
push
daa
xor
lcall
dec
or
adc
fwait
out
pop
push
stos
lods
and
sahf
and
pushf
dec
dec
ret
push
cmpsb
and
sbbl
cmp
xor
rcr
inc
test
add
dec
xor
push
pop
xor
mov
shll
sahf
mov
or
dec
out
aam
std
inc
out
and
test
inc
cmp
push
mov
push
testb
sbb
add
or
inc
cmp
cs
ror
cmp
and
xchg
loope
mov
ja
xor
and
push
mov
xor
es
movsl
mov
test
sbb
xor
push
adc
jl
push
sub
insb
shll
sbb
pop
sbb
and
sbb
test
sbb
sti
mov
into
arpl
add
inc
roll
adc
out
lods
loop
mov
fiadds
push
mov
mov
mov
lcall
stc
pop
jo,pn
scas
cmp
aas
mov
bound
xchg
rep
mov
dec
sub
fmul
xchg
jno
jg
push
fidivrl
stos
loope
xchg
jno
out
adc
movsl
add
imul
push
and
jmp
dec
cmp
push
pop
xchg
pop
outsb
inc
jge
sub
jl
push
stos
dec
jnp
jne
xchg
cmp
mov
jmp
sbb
insl
mov
outsl
push
imul
test
jg
mov
fists
mov
push
and
adc
clc
sub
xchg
out
xchg
imul
and
inc
es
dec
push
lods
mov
fnstsw
xchg
jne
mov
fs
jbe
or
sub
cld
sub
sbb
or
sbb
movsl
push
pop
adc
movsb
cmp
loop
cmpsb
xchg
add
jle
imul
sub
pop
dec
scas
fldz
cmp
or
xor
out
jle
repz
rcrb
lock
in
push
or
pop
or
cmp
inc
pop
cmpl
scas
in
jmp
cwtl
nop
rolb
jmp
cmp
adc
xchg
adc
and
stos
push
mov
xor
lea
test
js
mov
js
inc
add
jle
cmp
mov
leave
mov
jne
or
call
enter
xor
int
cmc
adc
push
xchg
sub
dec
jmp
xor
addb
pusha
in
jns
arpl
inc
push
lret
in
xor
mov
jns
mov
neg
mov
enter
mov
xchg
and
dec
pop
outsb
arpl
mov
mov
loop
in
inc
int
xchg
pop
xor
icebp
jle
xchg
sub
mov
leave
rorl
ficompl
in
xor
cmp
rcrl
dec
jg
dec
xchg
mov
andl
push
xchg
or
cld
std
fwait
jb
cmc
imul
pop
add
mov
jnp
xchg
adc
mov
out
insl
xchg
push
add
inc
pop
loope
fcoml
div
or
pop
int
dec
jecxz
push
pushf
push
xchg
andb
xor
push
lods
sbb
inc
jp
testl
faddl
xchg
mov
test
dec
jb
fwait
js
dec
push
and
push
jnp
push
xchg
stos
push
andb
mov
add
fcmovb
ljmp
hlt
hlt
js
cli
test
fisubs
jg
cmp
pusha
ja
add
sti
sub
les
sahf
ds
adc
push
aaa
pop
out
aas
pop
mov
in
jl
push
fcoml
jge
clc
leave
das
testl
sub
xor
pop
icebp
xor
out
cld
ja
in
lods
and
jns
popa
pusha
arpl
xor
jne
sbb
sub
inc
fsub
pop
pop
and
sbb
aam
dec
sub
lods
lods
adcl
sbb
testl
xchg
addb
sub
xor
jb
push
fimull
and
or
push
btsl
mov
fnsave
call
add
aas
dec
xchg
adc
cmp
mov
inc
add
adc
dec
lock
add
jmp
sub
loop
inc
popa
pop
mov
xchg
push
in
cltd
imul
or
inc
out
jl
cmp
sub
in
ja
das
call
cmp
xor
scas
arpl
fdiv
mov
pop
repnz
loop
and
iret
hlt
push
sarl
mov
and
fs
lahf
stc
sub
and
mov
cld
jns
dec
std
xchg
xor
cmp
das
sub
push
icebp
imul
push
sahf
jp
dec
stc
test
scas
jmp
jg
mov
inc
adc
subb
idivb
pop
loopne
xchg
cmp
mov
aas
mov
dec
mov
outsb
sub
lret
dec
inc
out
fdiv
aad
cltd
out
add
fidivs
rorb
mov
push
sbb
ss
pop
pop
loop
xor
xchg
xorb
aaa
dec
push
sub
cmp
or
es
mov
xchg
aaa
in
xor
pop
mov
bound
mov
nop
jge
mov
sbb
out
rorl
scas
sub
es
ja
mov
inc
or
mov
dec
or
in
in
mul
test
jecxz
pop
push
push
mov
outsl
seto
adc
fadds
test
sub
jp
mov
std
scas
mov
ret
mov
jnp
test
out
je
jb
loopne
xor
pop
stos
adc
push
jb
adc
xor
mov
pushf
leave
sahf
push
xchg
mov
sub
sub
ret
and
lea
sub
sbb
mov
dec
pushl
pushf
cld
push
fbld
hlt
icebp
test
repnz
fs
and
jp
lcall
enter
cmp
lock
pop
or
sbb
jecxz
daa
inc
insb
add
cmp
loope
mov
xchg
adc
mov
mov
push
and
inc
cwtl
call
gs
add
lods
inc
sbb
arpl
jp
mov
cmp
sbb
rcrl
and
rcll
popf
inc
lds
out
mov
xor
or
xchg
or
push
lret
pop
mov
lahf
cmc
repnz
xchg
sub
mov
gs
mov
dec
clc
stos
arpl
dec
loop
pushf
inc
mov
inc
adc
add
mov
and
jno
stos
stos
xchg
out
sbb
pushf
push
xor
call
cld
inc
xor
stos
or
test
mov
mov
ret
and
in
mov
inc
mov
scas
fcom
in
sbb
or
mov
sub
inc
jo
mov
sbb
mov
adc
outsl
stc
aas
pop
loope
fwait
xlat
pop
stos
mov
scas
fnsetpm(287
pop
dec
mov
adc
hlt
and
xor
cmp
mov
jbe
int
xchg
pop
adc
push
cli
xchg
adc
jo
leave
cwtl
jp
sub
fprem
fstsw
outsl
sub
daa
cmp
test
cmp
bound
es
in
push
dec
push
dec
pop
loopne
dec
addr16
push
and
sti
push
mov
inc
dec
mov
inc
inc
fisubl
dec
cmp
mulb
mov
rcll
cmp
ret
and
aad
jl
inc
data16
cmc
imul
ss
and
fdivrl
ret
mov
mov
mov
shl
jg
jbe
icebp
out
repnz
push
lret
bound
jbe
aaa
xor
mov
mov
jb
lods
sub
cmpl
insb
lods
repz
push
or
mov
outsl
inc
inc
xchg
push
dec
mov
xchg
dec
fisubs
and
jnp
fimuls
test
or
clc
sti
mov
and
out
and
popa
ja
out
jle
outsb
stc
mov
mov
jl
inc
sbb
sbb
mov
lahf
mov
call
push
jl
ds
and
rcll
sbb
cltd
pop
sbb
test
outsb
popf
jp
pop
add
dec
or
in
inc
clc
jns
stos
or
in
mov
push
push
lea
sbb
xor
mov
push
mov
dec
mov
pushf
inc
cmp
icebp
pop
test
push
loopne
mov
add
std
stos
mov
sarb
outsb
push
pusha
mov
sbb
cmpsb
jmp
sub
sbb
jne
mov
mov
icebp
mov
mov
mov
add
fwait
push
and
sbb
and
mov
xlat
dec
and
lcall
inc
pop
or
mov
scas
outsl
xor
mov
push
movsl
lods
dec
sahf
aad
test
negb
pop
pop
movsb
or
out
xchg
pop
stos
insb
inc
pop
int3
rolb
jnp
lods
test
sub
shl
xor
cli
mov
scas
stos
cmp
clc
int3
cmp
pop
sbb
outsl
sbb
mov
xor
jg
mov
mov
stos
cmc
std
roll
cmc
js
jmp
inc
jl
lcall
stos
mov
or
mov
and
mov
ljmp
int
push
popa
dec
loopne
neg
cmpsb
test
roll
stc
lcall
mov
push
int3
icebp
mov
pop
lret
pop
call
push
lahf
clc
add
movl
stos
push
cmc
mov
adc
or
push
aaa
pop
in
faddl
mov
adcl
int3
cmp
push
or
mov
pushf
xchg
inc
scas
push
push
insl
dec
cltd
sbb
xchg
mov
pop
iret
repz
mov
movsl
pop
cltd
cld
inc
icebp
imul
push
pop
dec
jecxz
cmp
out
push
push
imul
mov
cmp
or
sub
lahf
sahf
pop
jmp
mov
or
cld
je
and
movsl
xorb
rclb
mov
ljmp
rorb
imul
loope
ljmp
fbld
push
mov
loop
inc
inc
mov
cli
shll
add
lea
loop
leave
adc
dec
mov
int
mov
jge
push
icebp
pushf
dec
mov
mov
sbb
xchg
xor
rcrl
lcall
mov
jge
push
into
xchg
test
fldt
popa
inc
xor
xchg
adc
cltd
inc
in
sbb
and
or
sarl
pushf
sub
xor
jg
inc
sbb
mov
daa
or
jl
gs
aas
popa
movsb
push
sahf
aas
adc
xlat
mov
mov
lods
mov
fstl
movsb
mov
insl
mov
cs
int3
sbb
sbb
ret
in
or
and
jl
fnstcw
jno
scas
pop
scas
xor
cmp
cmp
mov
je
lock
pushf
cli
mov
pop
les
inc
cld
cwtl
lret
or
in
je
xor
or
fistpl
into
in
sub
out
pop
imul
int3
fbld
dec
jg
or
lock
xor
movsl
adcb
inc
dec
je
mov
js
mov
cmpsl
push
push
or
add
sti
sbb
into
mov
sbb
rclb
mov
cmc
cmp
in
das
sbb
dec
sbb
push
mov
pop
sub
or
fwait
int3
sti
test
js
pop
test
addl
mov
lret
xor
ret
in
or
mov
dec
testl
ja
and
ret
jp
je
fldl
inc
jp
xor
enter
lods
sbb
mov
cmp
mov
dec
pop
jne
push
gs
mov
mov
fmul
out
lods
pop
out
test
inc
mov
mov
lret
sahf
aas
repz
jns
push
mov
adc
testl
imul
jge
jo
mov
mov
inc
ljmp
or
mov
imul
imul
or
xchg
sub
pop
mov
movsb
orl
xchg
fnstcw
mov
roll
push
shlb
sbb
movsb
mov
shrb
loop
mov
std
lea
pop
xchg
loop
pop
fsubrl
sbb
inc
flds
in
ror
dec
sbb
and
jno
stos
add
add
cmp
repz
aam
and
push
push
sarb
dec
in
jmp
jecxz
pushf
dec
shll
inc
sbb
cli
add
lret
push
push
mov
pop
and
inc
mov
and
or
aad
cmp
cs
in
add
popf
arpl
fsubrl
loope
lds
cmp
fldt
cmp
xor
pop
shlb
in
fcmovnu
xchg
jmp
mov
jae,pn
inc
sub
sahf
outsb
loope
es
push
push
popa
pop
lret
adc
cld
mov
push
stos
cmpsl
mov
test
jmp
xor
repnz
adc
mov
out
sbb
mov
popf
lock
int
jg
or
aaa
push
jle
cmp
test
mov
ds
adcb
aam
or
subb
dec
push
add
xchg
adc
jnp
xchg
and
push
fbstp
clc
call
pop
push
addr16
daa
in
hlt
outsb
pop
lock
repnz
orb
ficomps
add
ljmp
mov
push
outsb
mull
aad
jl
mov
adc
mov
and
clc
and
outsb
mov
pusha
sub
jnp
rolb
cmpsb
scas
mov
jnp
ret
arpl
idiv
les
push
cltd
hlt
int3
mov
xchg
into
mov
inc
pop
lods
fists
lret
push
add
add
sub
xor
mov
aad
cmpb
add
leave
mov
mov
mov
or
xchg
xor
push
scas
add
lods
jbe
cmp
xchg
data16
dec
and
lahf
lock
jno
xchg
ss
hlt
out
add
or
sarb
sahf
in
loope
xchg
das
dec
movsb
loopne
test
mov
cltd
pop
fcom
fcmove
or
cmp
mov
push
sar
in
xchg
and
insl
pop
add
ss
xor
push
in
dec
jmp
xchg
cmp
push
jns
lds
pop
pushf
dec
xor
ja
jmp
jno,pt
lahf
mov
mov
shl
and
push
pop
sti
popf
push
sbb
subb
in
sti
sub
ficomps
dec
cwtl
adc
daa
mov
in
and
icebp
jmp
outsl
mov
adcl
fs
jno
daa
repz
ret
sub
out
push
call
push
cmp
pop
push
mov
jle
test
daa
xchg
or
cmp
popa
mov
stos
cld
insl
cmp
lret
aam
dec
or
cmp
cld
lea
mov
add
in
out
xchg
jo
test
cmpsb
sahf
mov
pop
or
call
scas
fwait
jge
subl
shlb
push
negb
cmp
and
je
sahf
add
xchg
inc
adc
sub
lods
cwtl
rcrb
nop
xchg
pushf
insl
mov
cli
call
inc
ss
orl
xchg
mov
lret
mov
imul
fldt
adc
mov
lret
out
mov
iret
xchg
divb
jp
cmp
inc
mov
in
inc
addl
cld
in
jb
jbe
and
test
xor
enter
xchg
call
fwait
jo
mov
bsr
lods
fisttpl
push
push
xchg
mov
sbb
rol
pushf
rcl
test
std
jg
test
jmp
pop
lahf
insb
outsb
push
loope
test
sti
pop
dec
and
add
adc
mov
push
jg
stos
fildll
xor
xlat
cwtl
in
fs
xchg
sub
push
lret
cmp
cs
inc
cmpl
repnz
sbb
hlt
adc
push
pop
in
adc
rcll
in
loopne
ret
xchg
mov
rorl
movsb
lret
inc
rcl
xlat
cmp
movsb
sub
sahf
inc
rorb
and
popf
imul
pop
push
mov
push
dec
pop
push
inc
push
cmp
mov
push
xor
pusha
frstor
out
lods
adc
dec
popa
push
popa
jo
xchg
jle
cwtl
pop
mov
stos
fdivrp
ss
sbb
mov
mov
mov
jb
add
insl
cmc
sub
push
cmpsb
xor
adc
push
stc
nop
rcll
xchg
mov
cmpb
dec
jns
shr
push
mov
xor
cmp
sbbb
adc
loopne
adc
imul
xor
std
inc
mov
in
cmp
jle
les
rolb
adc
mov
idivl
mov
scas
fld
inc
xchg
idivb
clc
mov
fdivs
adcl
lock
and
xchg
icebp
cld
shll
cltd
dec
data16
pop
dec
and
push
fwait
imul
je
out
inc
cmp
pop
or
and
repz
adc
test
or
xchg
call
inc
cld
or
mov
fld
clc
push
cmp
dec
pushf
vpsrld
cmpsl
dec
aaa
bound
insl
mov
xor
dec
arpl
pop
mov
icebp
jb
dec
into
push
lahf
and
int3
repnz
sub
inc
pop
and
out
xor
push
subb
mov
shrb
leave
movsl
and
orb
and
xor
pop
out
stc
aaa
pop
ja
fwait
stc
jne
shlb
scas
jo
je
push
push
jmp
lahf
and
sbb
popf
push
insb
fidivrl
jno
ds
sbb
andb
in
int3
lret
pop
call
xor
pop
jbe
mov
sbb
add
inc
sub
push
mov
mov
aad
xor
xorb
jo
push
call
sub
push
enter
loop
aas
and
adc
frstor
icebp
mov
xchg
sbb
out
dec
adc
dec
fldcw
mov
mov
cwtl
in
rorl
push
cmpsb
popa
test
cmp
outsl
cmp
push
lcall
lret
shll
mov
or
mov
scas
test
push
adc
xorb
subb
push
jle
pushf
lahf
rorl
xchg
push
daa
std
jecxz
cwtl
ja
lock
jne
mov
push
xor
std
aam
lods
data16
pop
cmp
jns
adc
std
dec
fdivrl
outsl
hlt
dec
sarb
test
dec
inc
test
pop
loope
pop
or
push
mov
ret
xlat
nop
testb
movsl
pop
sti
mov
mov
sbb
sub
cltd
out
fwait
lcall
test
inc
fwait
jno
jge
sbb
sbb
sarl
mov
orb
das
cli
inc
mov
pop
ficoml
repnz
sub
test
jle
in
addb
ret
cli
dec
repz
fmull
sbb
fdivl
xlat
in
sub
push
adc
ja
or
fstpl
fdivrs
and
shl
xchg
jae
stos
loope
dec
jne
js
pop
cmpsb
push
adc
push
or
mov
dec
sbb
cwtl
adc
inc
bound
sbb
leave
or
add
imul
out
sub
fiadds
xchg
out
adc
and
aad
cmpsl
xchg
sbb
ficompl
out
mov
or
ret
aam
pop
inc
aad
inc
shl
pop
iret
ficoml
dec
out
mov
loop
push
icebp
push
sbbb
aas
movsb
in
icebp
mov
flds
adc
lds
je
inc
movsb
dec
mov
push
loope
js
ja
leave
or
inc
sub
aad
xchg
clc
sbb
ds
cmp
and
jp
and
loopne
inc
adc
mov
les
andb
pop
xchg
out
cli
xchg
push
dec
scas
sbb
and
rclb
imul
inc
loop
dec
and
jle
inc
es
ret
or
aas
cmpsl
enter
sub
les
ret
xchg
cmc
mov
or
sub
pop
jge
push
or
adc
push
jge
mov
jae
inc
jmp
mov
or
dec
mov
fldcw
shrb
das
push
jno
push
cmpsb
and
xchg
push
xchg
data16
or
mov
inc
ds
jmp
xchg
sti
test
dec
je
rorl
xchg
fistpll
rorl
jmp
data16
lds
xchg
or
stc
sub
fcmovnb
pop
adc
adc
imul
mov
fisttps
mov
xchg
jbe
imul
mov
and
mov
cld
mov
mov
cmpsl
je
jg
adc
cmp
in
out
movsb
sub
fs
fs
xchg
mov
insb
jnp
pusha
ja
outsb
daa
imul
jb
pop
jl
std
out
cmp
in
iret
out
stos
adc
inc
push
out
leave
jmp
xchg
or
mov
pop
dec
iret
pop
gs
rolb
mov
pop
mov
test
jbe
jno
jns
mov
imul
jae
dec
and
cmpsb
pop
adc
xor
aad
clc
dec
mov
popf
push
mov
jns
repnz
push
mov
cmc
push
pop
adc
stc
sbb
lods
push
insl
rorl
test
cld
ljmp
ss
cmpsl
out
pop
dec
dec
push
mov
pop
sti
icebp
test
mov
clc
lods
sub
cltd
mov
jmp
mov
mov
cmp
pop
inc
iret
mov
movsl
fldln2
push
int
add
add
scas
pop
mov
mov
xchg
pop
sub
addr16
in
fstl
data16
pusha
pop
or
or
mov
adcb
loope
out
in
int
outsb
fcmovb
in
add
or
pop
push
outsl
inc
push
shrl
or
xchg
ljmp
test
mov
sbb
pop
ret
or
push
pop
cmpsb
and
inc
test
cmpsl
and
ficompl
std
mov
cld
pop
shlb
pop
or
out
aad
daa
inc
cmpsb
adc
or
xor
imul
mov
jl
mov
and
out
clc
pop
mov
xchg
inc
jae
loope
jge
cmp
mov
mov
jnp
mov
inc
ss
enter
sub
jmp
int
add
mov
lret
push
inc
dec
stos
sarb
mov
dec
stos
xor
jae
fs
fwait
icebp
subb
fwait
push
stos
mov
jb
ficomps
xlat
xchg
sahf
or
lock
popf
insl
inc
mov
jae
cmp
cld
inc
mov
gs
out
push
fcmovnbe
push
enter
mulb
lcall
cmp
rorb
outsb
movsl
jg
or
jg
mov
jmp
fucom
fldt
gs
push
in
aaa
jns
mov
outsb
xor
cmp
fstps
js
xchg
dec
push
daa
jne
leave
leave
aas
in
cwtl
fstpl
lret
je
cmp
mov
sbb
xor
adcl
mov
sub
xchg
mov
outsb
mov
adc
arpl
lcall
sub
je
pop
test
loope
popf
pop
inc
bound
or
pop
pop
gs
sub
push
push
adc
ljmp
enter
xchg
lea
out
and
cltd
dec
sub
ljmp
out
aad
push
mov
or
test
mov
arpl
nop
jg
idivb
rcl
mov
mov
loop
jmp
ds
imul
iret
jo
mov
negb
ret
push
lcall
xchg
dec
iret
jae
imul
fmuls
push
xchg
popf
cs
dec
in
shll
jecxz
testl
das
inc
adc
insb
or
pop
mov
clc
mov
xor
dec
jmp
jge
pop
add
sub
mov
cmp
roll
fistpl
pop
ljmp
int
cmpsl
inc
cmp
aaa
mov
xchg
les
adc
fsub
rcl
test
add
jp
lret
popf
xchg
pop
jb
sahf
cltd
push
xor
outsb
dec
pop
jo
mulb
loope
push
push
push
cld
cmp
leave
push
mov
ss
jge
lods
jns
sub
pop
xchg
sahf
cvtps2pd
and
mov
imul
xchg
mov
mov
fwait
ret
push
ljmp
or
popl
insl
dec
inc
les
jo
add
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
jmp
repnz
repz
repnz
js
addb
cmp
into
in
rcr
xchg
adc
out
adc
push
fcoms
es
or
loop
pop
lock
mov
aaa
imul
add
add
jo
add
scas
mov
fdivp
or
pushf
mov
xchg
inc
loop
orb
aaa
enter
out
add
loop
push
mov
js
lcall
sbb
mov
inc
movsl
std
xor
call
addr16
cmp
in
push
mov
push
jmp
lcall
xchg
fs
push
ss
sbb
add
daa
pop
mov
lret
inc
pop
mov
test
xor
hlt
and
xchg
lret
mov
mov
mov
loop
imul
xchg
xor
adc
sub
add
mov
add
push
lahf
or
mov
jl
xchg
cmp
dec
jae,pt
add
sub
loope
loope
loope
mov
fisttpl
je
jl
repz
dec
insl
pusha
xchg
mov
pushf
push
cmp
mov
stos
cmpsl
stos
mov
fnstsw
popf
push
cmpsl
inc
dec
push
rcrl
jl
inc
push
mov
sub
ss
mov
daa
and
enter
pop
les
cld
rolb
movsb
add
adc
out
inc
jb
dec
and
mov
rcrl
jmp
xchg
mov
pop
inc
popa
daa
test
mov
ds
xor
cmp
rol
js
mov
inc
mov
or
sub
inc
add
lret
pop
inc
lea
out
lock
jge
cmp
xor
arpl
xor
in
in
pop
or
stos
or
insl
inc
pop
dec
out
and
dec
repnz
mov
bound
push
sbb
jg
fdivs
mov
jge
xchg
lods
sub
pop
mov
arpl
sahf
in
sub
push
xchg
fisubrl
ret
inc
pop
aad
rcrl
jmp
adc
aam
movsl
or
xor
add
push
cmp
scas
jl
imul
or
into
jge
dec
xchg
data16
ret
aad
push
mov
call
mov
scas
daa
test
cwtl
arpl
shll
stc
fs
popf
xchg
in
jmp
lret
mov
or
mov
mov
pop
mov
scas
repnz
push
setge
in
jo
and
test
adcb
xchg
sbb
cmp
or
sbb
shrl
dec
mov
pop
enter
mov
sub
sbb
jl
mov
jns
xorl
adc
sub
push
mov
aam
xchg
cli
xchg
sub
sub
mov
scas
sti
add
das
int3
loop
cmpsb
in
cmp
das
xor
icebp
mov
cmpsl
push
sti
int
not
sbb
push
int3
mov
ss
ljmp
cs
in
or
sbb
addr16
jecxz
inc
iret
mul
mov
into
test
jecxz
insb
sub
ljmp
pop
jb
stc
sahf
xor
xchg
cmpsb
outsb
jge
imul
aas
mov
xchg
imul
int
adc
fcompl
scas
movsl
imul
mov
sbb
mov
imul
add
xadd
push
lods
fwait
repnz
je
push
rorb
or
inc
lock
bt
mov
add
fbld
mov
and
dec
lods
fwait
mov
or
inc
aam
add
imul
xor
jl
lods
push
and
mov
sbb
jb
sub
jno
popa
cmp
xchg
jbe
pop
js
adc
repz
cli
movsb
movsb
int3
jge,pt
rorl
and
aam
stos
lahf
jo
jb
sbbl
mov
stos
xchg
mov
jmp
adc
in
push
push
adc
add
aad
xor
sbb
jno
sbbb
ret
push
nop
in
xchg
adcb
call
pop
xor
adc
incb
pop
clc
mov
incb
jecxz
jnp
and
mov
inc
mov
filds
loopne
adc
add
mov
mov
or
mov
mov
repz
lods
push
fistpl
sbbb
out
cmpsb
xchg
pusha
sbb
aaa
xchg
mov
aas
sub
mov
mov
cmc
outsl
inc
jo
inc
mov
inc
prefetch
or
int
mov
or
test
xor
cld
call
cmp
sahf
pop
inc
xorl
inc
in
dec
in
mov
xor
gs
dec
into
aas
cmp
cltd
rcrb
xor
rclb
push
mov
lahf
sbb
clc
scas
daa
mov
push
mov
mov
push
je
pop
fidivrl
pusha
ss
fistps
shll
dec
xchg
int
push
push
sbb
cmpsb
clc
in
mov
jg
jmp
fbstp
jbe
sbb
xlat
iret
fdivrl
ret
sbb
mov
shll
or
in
jne
fbstp
out
mov
test
insw
pop
push
sarb
dec
sbb
jl
int
sub
cmpsb
fdivrs
and
ret
stos
je
test
jnp
insb
loop
push
xor
inc
dec
int
dec
aaa
cmpl
and
xor
in
popf
subl
ret
mov
push
mov
scas
jbe
and
int3
imul
sub
insb
and
lods
test
mov
push
sbb
ficoms
stos
jnp
or
xchg
xor
bound
lss
ret
cmp
mov
mov
sub
and
xlat
xchg
lods
inc
std
fisubrl
je
add
cmp
scas
and
subps
dec
daa
mov
dec
and
sbb
and
sub
aad
inc
jb
mov
or
add
pop
fsubr
xor
and
push
jecxz
je
int3
push
mov
mov
mov
sahf
es
fcos
sbb
add
rolb
cmp
push
cmpsb
jnp
movsb
imul
mov
jecxz
test
xchg
pop
sub
movsl
insl
ljmp
mov
aam
insl
pop
inc
je
sbb
sbb
push
shrl
loope
mov
xchg
adc
mov
fsubs
lret
push
outsl
daa
cld
sti
dec
inc
push
xchg
dec
cmp
test
bound
lahf
cmp
pop
fmull
pop
cmpl
jmp
inc
insb
adc
inc
fldln2
ficoml
inc
xchg
fists
inc
jg
sub
clc
xchg
or
int3
xchg
inc
push
mov
mov
mov
jnp
lods
jnp
jo
mov
mov
push
lret
push
testb
fisubl
mov
jnp
in
inc
dec
push
adc
cmp
jns
sub
sbb
push
push
movsl
mov
mov
inc
add
ja
ljmp
and
sub
mov
push
neg
pushf
std
push
xchg
dec
cmp
dec
imul
cwtl
scas
ret
popf
and
pushf
and
or
lea
inc
hlt
sar
cltd
into
subl
dec
inc
out
ja
xchg
cwtl
leave
add
loop
cli
icebp
fimull
sub
jns
pop
jl
fistps
mov
adc
dec
ds
imul
or
inc
arpl
push
std
push
imul
clc
aaa
add
dec
xlat
jns
iret
jl
xor
in
rclb
push
adc
clc
sbb
sahf
mov
xchg
and
mov
mov
orb
pop
push
jg
lock
lods
popf
pop
lods
aad
cld
fildll
cmc
aad
xchg
dec
dec
mov
out
call
mov
ljmp
mov
xchg
or
cmp
inc
aas
clc
loopne
iret
in
cmpl
jb
ja
add
sub
out
push
jo,pn
mov
sbb
push
imul
pop
cld
es
hlt
sub
ds
mov
inc
in
sahf
xor
pop
clc
sbb
or
xchg
mov
mov
or
and
mov
loope
int3
pop
lods
cmpsb
enter
imul
jmp
les
das
add
data16
aam
fwait
mov
sub
bound
mov
les
ret
xorl
insl
movsl
add
imul
jp
fsubrs
push
push
je
sub
mov
movsl
cmp
or
sub
imull
cmp
sti
xchg
out
xchg
push
adc
jns
inc
fstpl
imul
cmp
hlt
gs
inc
aam
fists
push
mov
pop
adc
and
adc
jbe
add
testl
fisubs
in
mov
fnstcw
push
bound
xor
mov
movsl
ficompl
outsb
insb
int
sub
inc
in
ret
iret
mov
lea
add
scas
sbb
mov
sub
dec
shl
and
mov
push
into
inc
push
xchg
ret
sub
adc
sbb
pop
adc
sub
sbb
mov
sbb
shlb
lret
addr16
xor
popf
leave
push
push
ljmp
rcrb
stc
jno
test
xor
dec
push
repz
pusha
daa
cmp
movl
jb
push
adc
lds
lea
insl
mov
loopne
cmpb
mov
mov
test
mov
inc
leave
add
xchg
out
push
fwait
imul
push
dec
pusha
pop
pop
lea
cmp
aad
fiadds
or
mov
ret
xchg
mov
dec
hlt
int3
xchg
jg
inc
pop
repnz
mov
push
or
cmpl
call
mov
adc
jno
push
xchg
in
dec
pop
inc
push
das
mov
cmp
push
outsl
cli
stos
sub
inc
in
jp
stc
cmp
sub
add
cmpsb
jbe
lret
sub
push
adc
mov
aam
mov
jp
pop
addr16
xlat
xchg
das
pushf
xchg
mov
call
jle
ret
jl
jmp
jbe
in
dec
subb
sbb
mov
das
lds
jb
fcoml
int3
mov
xor
mov
xor
call
into
or
cmp
push
dec
rclb
mov
je
scas
xchg
or
push
pop
jnp
sub
idiv
loope
xchg
nop
mov
add
repz
cmpsl
rcll
xor
push
pop
into
push
xchg
cmp
push
dec
or
imul
scas
imul
pushf
sub
addl
cs
jmp
fisttps
pop
mov
in
ds
sub
or
pop
enter
pushf
pop
dec
dec
cmp
mov
mov
push
adc
or
cmp
in
iret
inc
jle
dec
cmp
mov
lods
mov
jbe
dec
sti
inc
xchg
xor
cld
pop
ljmp
mov
xor
jne
test
pop
aam
cmp
cmp
fsub
inc
nop
push
or
inc
mov
shl
push
xor
jl
jb
add
jge
xor
movsb
jns
outsl
inc
cmpl
addr16
movsl
jg
mov
scas
adc
sub
andl
aam
popa
pop
mov
int3
fdivrl
xchg
loop
out
js
mov
ret
adc
mov
and
sahf
push
jbe
fisubrs
inc
sub
lds
xchg
imul
or
gs
jecxz
popf
imul
dec
ret
inc
out
xchg
pop
in
popf
lret
mov
aaa
fbstp
pushf
and
xor
arpl
jmp
dec
inc
xchg
andb
test
jns
fsubrs
movsb
mov
add
ret
inc
mov
sub
gs
adc
mov
les
sub
mov
and
inc
mov
jge
test
push
aas
movb
push
mov
xchg
inc
mov
or
jp
notb
fdivrl
mov
or
test
jbe
in
mov
mov
in
xchg
leave
jae
sub
imulb
pop
mov
and
adc
xor
sbb
inc
loop
das
dec
and
xchg
stos
jle
mov
and
aaa
push
push
arpl
pop
fs
dec
or
stos
jae
insl
cmp
cli
jge
sbb
or
inc
insb
xchg
repnz
xchg
aam
cmpsl
or
push
fcompp
dec
roll
fmull
test
call
out
push
sub
dec
movsl
loop
mov
in
in
mov
push
lock
repz
jmp
stc
or
push
xor
divb
shrb
xchg
xchg
jg
dec
xchg
ret
or
inc
shl
adc
ja
cmp
sarl
sbb
pop
push
mov
sbb
int3
mov
cmp
pop
cmpsl
or
and
inc
jo
les
xchg
sub
in
sub
xor
push
aas
nop
mov
inc
test
in
inc
push
inc
outsb
mov
out
inc
xchg
mov
mov
xchg
aad
scas
dec
insl
std
inc
mov
fdivrs
cmpsl
adc
insb
mov
pop
inc
mov
rcr
ret
adc
je
imul
inc
aaa
aaa
ja
sahf
jns
mov
dec
loope
pop
xorb
add
pushf
xor
add
fidivs
es
mov
sub
xchg
hlt
mov
mov
cld
std
inc
xchg
pop
iret
std
adc
push
stos
lret
pop
push
mov
divl
cmpsb
imulb
and
mov
push
inc
sbb
push
xor
add
ds
nop
push
je
test
lods
adc
push
sbb
out
inc
push
push
ljmp
mov
adc
fstl
mov
lods
jmp
outsb
adc
dec
add
int3
pop
lock
daa
fs
and
js
ljmp
daa
daa
mov
cmp
in
lds
test
and
mov
cmp
icebp
jg
fnsave
xchg
shlb
loope
je
xor
jnp
lea
or
out
ja
xor
outsl
dec
mov
jle
jne
inc
faddl
mov
push
loope
mov
pop
lcall
iret
pop
jo
dec
sarb
push
cmp
and
shlb
popf
xchg
jecxz
mov
jp
jmp
mov
push
aad
xchg
mov
popf
adc
mov
dec
add
jae
dec
ljmp
pop
mov
inc
cmc
in
pop
mov
mov
sub
dec
dec
lcall
je
jge
cmp
fcoms
mov
ljmp
mov
into
shlb
xor
xlat
stc
sbb
stos
adc
sbb
sub
jnp
or
sub
pop
jmp
ds
jg
mov
jnp
sub
movb
in
add
inc
push
scas
xchg
js
xchg
inc
sbb
cmpsl
sub
rcll
test
lea
jnp
rclb
pop
daa
scas
stos
jae
jle
and
fmul
push
push
pop
insb
or
int
jg
push
xchg
lods
rcll
andb
jmp
data16
out
push
int3
adc
jle
sti
and
xchg
mov
mull
adc
movsl
or
and
push
push
cltd
sti
mov
push
pop
push
add
ror
ret
or
lea
lahf
hlt
imul
jg
in
cmp
ud2
std
popa
or
xchg
dec
cmp
inc
xchg
fcompl
xchg
sbb
iret
clc
cld
fmuls
jb
ror
jp
xchg
out
enter
sbb
xchg
cld
xorps
mov
mov
and
xor
repnz
add
push
mov
mov
cmp
mov
lret
shrl
inc
dec
add
popa
add
mov
dec
ljmp
mov
lods
repnz
push
sub
sbb
mov
cld
pop
mov
pop
test
sbb
pop
pushf
jl
mov
loopnew
jmp
xchg
inc
xor
inc
jmp
dec
pop
mov
pop
lock
rdmsr
mov
iret
mov
or
les
fstp
cmpsl
lahf
add
es
push
xchg
stc
mov
inc
in
call
xchg
push
xchg
dec
fucomip
xor
adc
pop
sbb
pop
mov
add
and
or
lods
loopne
movsb
push
outsl
das
dec
inc
inc
imul
and
mov
adc
dec
das
setne
mov
out
sbb
mov
rolb
inc
and
data16
push
cmp
pop
outsb
shll
aas
or
scas
sbb
lods
jmpw
inc
data16
test
scas
inc
lods
push
and
add
sub
je
dec
xchg
call
sti
test
test
jo
ja
loope
push
lock
jo
mov
push
adc
mov
cmp
xor
test
mov
pop
xchg
lahf
notb
xchg
add
xchg
xchg
mov
mov
arpl
out
sub
movsb
mov
enter
pop
stc
movl
in
iret
xor
and
sub
dec
xor
inc
dec
fimuls
add
sbb
loope
pop
xor
scas
scas
inc
loop
cmp
pop
jmp
test
push
cld
aam
lahf
ss
jp
jb
add
sbb
addr16
push
xchg
dec
cmpsl
sub
test
clc
jbe
mov
adc
pop
push
mov
icebp
jge
aaa
out
and
and
sbb
pop
add
cmpsb
cmp
mov
add
and
inc
jo
les
xor
adc
ficoml
stos
xchg
outsb
cmp
push
sbb
int3
pop
int
and
and
mov
inc
push
push
jl
stc
and
aad
testb
fcomip
sub
scas
add
sahf
and
push
clc
clc
fs
popf
lods
or
andl
xchg
insl
push
repnz
inc
jnp
std
ret
pusha
mov
mov
cmp
int
aam
stos
into
lea
xchg
data16
mov
divl
pop
or
mov
arpl
and
pop
jb
mov
mov
stos
lods
test
stos
cs
cmp
xchg
fidivs
das
das
arpl
mov
mov
push
push
jb
pop
in
dec
or
fidivrs
into
mov
xchg
push
es
mov
aas
jo
inc
out
test
mov
into
lret
popf
lea
mov
cmp
repz
mov
fucomip
xchg
scas
inc
and
bound
xchg
adc
mov
dec
lret
cmc
xchg
inc
addr16
sbb
out
pushf
popa
cmp
ljmp
sub
stos
dec
jb
pushf
pop
lock
shrl
cmpsb
jecxz
xor
mov
into
mov
or
jne
pop
mov
mov
lock
or
dec
xorl
or
xchg
mov
pop
lds
dec
xor
faddl
ljmp
jle
inc
and
scas
mov
lcall
mov
call
jmp
aad
call
sub
ret
mov
sub
push
and
jnp
shl
repnz
jle
and
mov
mov
int
daa
aaa
out
lock
or
cltd
push
shll
dec
cltd
or
push
popa
or
gs
push
mov
mov
or
xchg
sub
lods
cmp
push
add
js
sbb
popa
jnp
and
sub
outsl
jg
and
pop
test
repz
mov
fwait
adc
add
fidivrl
imul
push
or
fiadds
add
add
sahf
les
push
pop
aad
ret
cwtl
mov
scas
cs
pop
xor
data16
add
cmp
sbb
and
sbb
in
pop
xor
sbb
inc
mov
mov
popa
pushf
ret
jnp
insl
sbb
xor
mov
mulb
lods
and
in
dec
jmp
in
in
lock
ss
sub
shl
rclb
and
xor
iret
data16
scas
push
mov
adc
shll
insb
jle
and
mov
or
or
or
or
add
fsubl
adc
loop
sub
dec
xor
or
push
daa
and
mov
pop
data16
cmp
arpl
sbb
xchg
lret
outsl
in
nop
popa
cli
dec
nop
jne
xor
aam
dec
pop
stos
push
add
decl
mov
add
inc
les
mov
sbb
push
dec
add
lcall
int
add
push
test
daa
dec
adc
inc
sti
aam
sbb
jo
pop
scas
test
jecxz
repz
or
jge
ja
push
test
cmc
idiv
lods
push
add
popf
xor
scas
mov
rcrb
dec
and
inc
mov
xor
loopne
sbb
in
mov
cmpsl
mov
lock
mov
push
mov
sbb
add
inc
icebp
shrb
push
sbb
sub
adc
add
sub
dec
sbb
cli
adc
mov
xchg
imul
mov
or
cli
clc
test
push
ja
pop
cld
dec
adc
scas
cld
je
push
je
scas
mov
mov
sahf
push
mov
mov
cmpsl
xor
adc
pusha
xchg
mov
cmp
or
movsl
divb
sub
nop
pop
pop
jge
ljmp
shl
adc
dec
mov
out
ds
xor
push
hlt
pop
mov
outsl
mov
sti
inc
lahf
ds
cmpb
push
repz
pop
aas
sbb
gs
inc
push
aad
push
dec
out
repnz
loope
jns
pop
out
inc
test
push
fadd
and
pop
sbb
pop
dec
pushf
or
mov
lods
lret
push
inc
sub
pop
push
repnz
call
repz
cmp
sub
mov
pop
mov
push
dec
inc
xor
mov
ret
inc
mov
inc
aam
and
mov
insl
rcrb
mov
mov
jmp
dec
dec
mov
add
jecxz
sbb
in
xchg
add
les
adc
jnp
repnz
nop
inc
push
stc
divl
jbe
push
sub
or
cli
repz
out
popa
cli
ror
insl
jae
daa
rorl
into
sahf
out
daa
jl
jnp
or
clc
adc
xor
mov
and
leave
popa
in
cwtl
es
daa
push
sbb
xor
ljmp
movsl
jmp
push
ja
and
adc
shll
fs
idivb
and
pop
cmp
jno
sub
jnp
mov
jno
pop
lods
sub
push
or
daa
lahf
or
dec
cli
jge
or
xchg
or
mov
push
adc
xchg
test
pop
sub
es
mov
addr16
cwtl
mov
lock
pop
inc
add
dec
dec
in
jbe
lahf
xchg
or
unpcklps
pushf
out
testb
jmp
fildll
add
stos
adc
mov
shlb
dec
push
sahf
sbb
sub
cmp
inc
leave
notl
xchg
add
loope
adc
cltd
xor
lret
xor
fistpl
mov
in
imul
sub
inc
and
xchg
pop
in
out
mov
cli
lea
add
clc
push
stc
pop
aad
and
or
lret
or
je
test
mov
cmp
or
hlt
mov
xor
dec
mov
insb
and
sbb
add
pushf
xchg
push
and
aaa
pop
mov
shl
push
pop
lods
emms
sub
rorb
mov
sbb
push
sub
cltd
xchg
pop
pushf
add
xor
dec
ret
fistpll
lret
jne
daa
cs
jns
das
or
out
dec
fcomps
mul
sbb
aam
nop
sbb
lret
pop
cmp
out
insl
pusha
inc
xor
xor
pop
ror
pop
icebp
enter
je
or
icebp
jmp
mov
sbb
or
adc
inc
in
push
pop
lret
cmp
push
jae
dec
sbb
lock
cmp
nop
lock
fmul
insl
jns
test
push
inc
frstor
and
dec
mulb
add
fisubrs
cltd
push
sbbl
xchg
sbb
inc
sub
xor
cmp
test
or
fcompl
sbb
dec
xor
loope
sti
dec
scas
imul
and
sti
fcmove
aam
rol
mov
into
fcomps
pop
fsubl
cmpsb
sar
dec
jno
mov
jp
addr16
inc
dec
lock
cmp
jae
cmpsl
sub
push
jo
mov
cld
adc
les
dec
pop
ja
jmp
push
xor
pushf
or
xchg
lret
pop
pushf
pop
xchg
jg
sahf
and
testb
push
xor
addb
das
int3
pop
inc
mov
or
inc
push
aad
mov
cmpsb
int
lcall
sub
inc
fbld
mov
repnz
jmp
jge
push
mov
lcall
je
inc
jg
or
cmp
sbb
add
jp
jb
shll
jo
cwtl
mov
das
cld
outsb
push
outsb
popa
test
les
insb
adc
xchg
inc
mov
mov
js
mov
xchg
jecxz
fcmove
cmp
js
push
adc
cmp
cmc
add
addr16
cwtl
ja
aad
je
inc
pop
in
xchg
les
popa
pop
cld
add
push
mov
cs
stos
popf
sub
mov
mov
test
outsl
or
in
add
sub
mov
cltd
adc
xchg
popa
nop
mov
inc
cmp
push
mov
fwait
shl
popf
shll
ljmp
mov
push
out
shll
mov
adc
jns
jo
pop
or
fdivl
andb
das
mov
xor
call
cwtl
sbb
or
loopne
xor
push
xchg
mov
pop
and
push
push
jecxz
jbe
mov
lcall
in
or
das
test
push
dec
test
popf
xor
push
sar
out
sahf
pop
les
push
jns
cltd
rcr
aam
imul
jle
cmp
insl
stos
adc
jae
clc
sbb
adc
shlb
xchg
dec
mov
mov
xchg
int
jb
jns
push
push
cwtl
mov
add
sahf
or
hlt
pop
dec
inc
pop
pop
and
and
cltd
xchg
push
and
and
test
out
inc
inc
das
adc
push
insb
shlb
dec
popa
mov
jbe
xchg
push
xchg
loop
xor
lds
ss
in
andb
pop
mov
jmp
sbb
mov
pusha
pop
xor
cmp
jl
mov
daa
lods
je
iret
dec
outsb
and
dec
fidivs
stos
mov
cmp
adc
iret
popa
daa
shll
test
xor
data16
push
dec
or
aam
repnz
stc
dec
cld
scas
push
jp
pop
sub
rcll
push
aaa
test
ficompl
push
adc
fwait
mov
aam
int
imul
push
pop
fdivr
sub
inc
mov
sahf
testl
aaa
dec
jbe
daa
adc
cltd
test
mov
int3
xchg
xor
gs
push
int3
inc
inc
adc
adc
cmp
mov
sbb
xchg
xchg
push
pop
push
cmp
insl
jns
inc
loope
movsb
jns
popa
push
mov
frndint
push
test
stos
or
insb
inc
mov
adc
aas
mov
dec
test
int3
pop
movsb
jns
out
shlb
in
mov
shrb
and
frstor
imul
aad
in
flds
mov
rorb
lods
add
ror
jecxz
mov
adc
fists
mov
fwait
sbb
and
lods
aaa
dec
inc
xchg
or
aam
fdivl
fsub
test
sub
cli
enter
js
fcoml
mov
jo
mov
jg
sub
dec
pop
out
xchg
mov
push
repnz
pop
int3
add
cld
xlat
xor
arpl
dec
cmp
mov
imul
loopne
inc
push
fdivs
lcall
push
mov
xchg
xchg
jmp
cmp
pop
ret
push
mov
lahf
cltd
imul
inc
jnp
cli
adc
loopne
aam
mov
adc
jl
pop
insl
movsl
jmp
loop
cmpsl
lahf
mov
push
test
xchg
cwtl
push
mov
sub
aam
in
pop
sahf
adc
subl
push
test
es
cmp
add
push
adc
je
or
pop
pop
fistps
aaa
pushf
add
out
sub
mov
adc
adc
jp
mov
pop
loopne
push
dec
fadds
xchg
xor
push
clc
in
pop
cs
adc
push
jmp
movsb
in
scas
mov
fs
xchg
or
shlb
lahf
jecxz
sarl
test
pop
mov
inc
push
cltd
push
xchg
push
enter
dec
idivb
mov
movsl
xchg
dec
pop
rcl
sbb
repz
fisubl
and
mov
push
sbb
xchg
push
mov
repnz
xchg
lods
dec
movsl
push
add
mov
xchg
mov
mov
mov
xor
or
adc
push
mov
roll
jp
sbb
fisubs
es
mov
pop
push
frstor
mov
mov
sub
scas
push
cli
sbb
in
int
repz
fists
outsl
pop
xlat
call
sbb
test
bound
movq
leave
and
out
imul
and
popa
aam
out
leave
sarb
test
les
sbb
aad
jecxz
push
push
sbb
dec
push
xchg
pop
dec
jl
into
loope
pusha
xchg
loop
push
int3
sbb
adc
dec
shll
jl
cmpsb
iret
popa
mov
test
arpl
jle
xchg
pop
sbbb
outsl
lret
test
fsubp
inc
fcmove
push
sarl
inc
xlat
lcall
add
mov
into
dec
xor
mov
push
inc
call
stc
out
mov
sbb
mov
rclb
xor
mov
lret
push
push
enter
jns
inc
scas
dec
mov
in
sub
dec
jp
orl
xchg
pop
jne
jae
xchg
std
pop
inc
dec
mov
int3
inc
sahf
fistpll
push
icebp
cmp
popa
rclb
pop
jbe
stc
cltd
sub
jg
mov
add
fwait
lcall
mov
inc
inc
and
mov
sub
xchg
dec
cmc
mov
push
cmpsl
in
in
cmpsb
sbb
jle
adc
daa
jo
mov
mov
cmp
popf
inc
mov
in
pop
and
mov
shrb
lret
jmp
adc
test
inc
add
adcl
addl
push
sub
mov
xor
jg
imul
movsb
in
fcmovnb
pop
sarb
pop
push
aam
push
roll
movsl
into
sub
inc
jl
das
push
inc
jbe
mov
mov
fs
int3
mov
mov
divl
ss
gs
and
aas
dec
add
out
xor
pop
pop
xor
mov
hlt
dec
xchg
imul
push
xor
leave
mov
sarl
cmc
pop
mov
lock
push
mov
scas
pop
jg
dec
clc
xchg
aas
cmp
sub
pop
data16
insl
dec
xor
mov
jb
dec
popf
ss
gs
sub
mov
enter
inc
ja
xchg
dec
pusha
adc
and
jno
pop
cli
or
jg
xchg
stc
test
jmp
mov
out
mov
scas
add
cmpsl
std
lret
push
pop
xchg
into
inc
and
cmp
cltd
fists
pop
test
out
scas
mov
iret
push
stc
jle
icebp
sub
mov
cltd
mov
in
push
adc
fiaddl
ljmp
sbb
or
and
mov
aam
ljmp
rcr
lahf
jmp
add
insl
push
inc
xor
hlt
hlt
inc
loopne
dec
jb
cltd
mov
stos
cltd
je
cmp
or
push
mov
fwait
and
cmp
pop
outsl
push
test
jnp
repz
push
adcb
imul
push
jnp
and
out
ljmp
xor
ret
mov
push
sbb
or
jge
sub
scas
aas
add
out
and
mov
out
pop
xor
ds
imul
inc
aad
mov
pop
cmc
cwtl
jg
cmpl
mov
fidivrs
sbb
mov
stos
sub
mov
mov
test
push
add
pop
sti
sbb
dec
mov
popf
cld
pop
popa
mov
addr16
pop
or
pop
dec
push
iret
inc
and
dec
push
push
into
mov
inc
xchg
into
xchg
cltd
pop
insl
push
mov
and
into
inc
xor
and
mov
hlt
inc
outsb
int3
out
inc
into
ss
push
mov
add
std
insb
pop
pop
inc
imul
cmp
pmulhw
jo
mov
xor
lcall
push
lret
jp
rcrl
int3
lds
int3
inc
mov
lret
sti
adc
repz
inc
fldl
inc
outsb
push
ss
xlat
std
pop
dec
push
das
test
fldcw
rorl
push
mov
mov
int3
dec
out
pop
mov
js
add
lret
push
sbb
int3
pop
test
es
jne
outsb
aaa
cmpl
sub
push
cwtl
push
mov
dec
arpl
pop
rolb
fnsave
xor
sub
out
fiadds
mov
sub
xchg
movsl
sub
iret
or
enter
fmull
xchg
fimull
sbb
xchg
sbb
std
ret
movsl
mov
mov
jne
xor
pop
mov
pushf
hlt
shl
xchg
sti
pop
nop
push
negb
shll
mov
sub
xlat
add
mov
mov
inc
arpl
js
add
inc
bound
jb
jl
sbb
shll
imul
shlb
xchg
iret
fcomip
mov
fxam
mov
es
xor
or
mov
into
push
sub
mov
fstpt
xor
push
ljmp
push
cmp
shrl
mov
add
test
inc
sub
dec
ret
mov
fsubl
lock
jae
xchg
std
repz
mov
inc
insb
or
ficoms
xchg
dec
rorl
pop
iret
xchg
push
push
daa
jmp
xor
inc
jl
ss
xor
push
cmp
ret
test
lods
aas
shl
add
mov
mov
add
or
cltd
adc
arpl
aad
inc
sub
inc
xchg
test
rcll
frstor
push
lcall
mov
or
cld
fsubrs
add
pop
add
xlat
sub
add
fwait
or
mov
mov
cwtl
jne
adc
loope
clc
cmc
jno
ret
jmp
dec
xchg
enter
ss
iret
or
sbb
fs
iret
int
nop
movsb
imul
xor
in
pop
add
jns
stos
negl
sub
shrb
mov
add
aaa
add
dec
iret
xor
int3
cmp
hlt
ficoml
push
fisubrl
mov
and
pop
xorl
stos
mov
cs
push
inc
pop
sub
clc
and
and
sar
and
mov
mov
xor
push
push
repnz
sbb
jle
loopne
nop
inc
lods
notl
fstpl
cmp
mov
mov
push
xchg
inc
add
imul
int3
mov
int
xor
xor
sub
and
cvtps2pi
ret
stc
aaa
rclb
data16
push
sbb
std
loop
in
cmp
cld
outsb
cld
lret
jne
or
test
adc
inc
jg
inc
jbe
xchg
clc
seta
jbe
je
add
or
mov
fst
aam
or
mov
push
xchg
vpmullw
call
mov
push
and
repnz
push
dec
xor
or
ja
mov
push
xor
inc
test
adc
mov
push
inc
andl
inc
cmp
cmc
jno
in
bound
lea
jle
outsb
push
sbb
leave
mov
push
xor
and
lcall
push
jb
incl
jbe
xchg
push
jnp
adcl
in
ret
pop
inc
sub
xorl
sub
mov
cmp
out
cmpsl
cwtl
jecxz
popf
jns
dec
icebp
outsl
cld
xchg
fldl
lret
aas
xchg
and
push
jg
mov
test
scas
movb
xchg
xor
lahf
lock
dec
roll
fcmovnb
add
mov
pop
sub
mov
xlat
data16
inc
xchg
lahf
pop
pop
cmp
cld
jl
das
xor
lret
popa
push
movb
mov
jns
outsb
pop
jb
shl
aas
ret
call
movsb
dec
or
outsb
je
fwait
lret
push
test
jne
fwait
daa
dec
and
mov
int
rcrl
pop
pop
popa
shll
jp
add
andl
stos
shl
xor
or
xor
push
pop
out
pop
lods
xchg
orl
sbbb
ds
movsb
push
sub
orb
jns
lcall
sbb
scas
mov
push
mov
and
push
jp
movsl
scas
gs
xchg
sub
aaa
add
rcl
dec
sbb
inc
loop
pop
icebp
js
xchg
mov
adc
mov
pop
pop
out
jno
or
pushf
dec
les
loope
and
inc
es
cld
mov
push
jg
into
repz
or
inc
adc
popa
push
push
scas
jle
jb
and
loopne
cmc
xorl
pop
das
mov
testb
popf
and
add
jge
mov
clc
jne
gs
lods
and
xor
push
jmp
divl
leave
push
push
outsl
pop
mov
shrb
sbb
imul
pushw
stos
loopne
addr16
dec
orb
xchg
mov
inc
into
add
jae
xchg
test
pop
lret
cmp
daa
cmp
cmp
xchg
dec
in
cmp
mov
movsb
jb
push
or
rorl
adc
lods
popa
je
and
jp
sbb
xor
jecxz
test
lods
clc
sarl
adc
ja
js
xchg
or
jle
add
lock
xchg
inc
dec
test
fs
repz
jle
jmp
xlat
fisubs
cwtl
mov
mov
mov
xchg
or
jmp
jb
fists
stos
sbb
jb
pop
add
and
js
cmpsl
push
xchg
mov
fistpl
fwait
out
push
repz
pop
mov
stos
mov
ret
adc
ja
pushf
cmp
or
or
mov
mov
fwait
xor
test
sbb
not
cmp
push
and
jb
xlat
dec
or
xchg
xchg
xchg
push
lret
sub
aam
and
sub
iret
rcrl
mov
test
jecxz
mov
pop
push
xchg
pop
xchg
jb
loopne
cmp
in
sbb
lret
jae
sar
add
inc
popa
shl
push
xor
mov
sub
rorl
dec
pop
test
sub
mov
les
enter
or
and
add
stos
subl
out
testl
fwait
cs
jb
xor
cmpsl
scas
fs
movb
xlat
cli
or
nop
das
ret
cmp
stos
ds
test
das
std
int
sahf
mov
into
mov
rcrb
add
sub
adc
test
into
test
mov
jnp
vmovddup
inc
push
add
ljmp
dec
loopne
xchg
ret
xchg
jb
popa
outsb
pop
pop
pusha
xor
cltd
insb
aad
sbb
pop
idiv
ja
cmp
dec
mov
xor
dec
mov
adc
shrl
sbb
dec
mov
mov
mov
pop
xchg
fstpt
stc
ja
shrl
push
pop
jle
and
jmp
adc
mov
or
cmp
or
push
xlat
pop
mov
jmp
mov
or
push
xchg
fwait
out
das
push
push
inc
sbb
lea
or
adc
call
cwtl
fisttpl
mov
xor
pop
mov
mov
mov
stc
mov
scas
mov
xchg
fiaddl
test
addb
mov
add
divb
add
mov
xchg
or
jp
pop
fldt
ret
std
pop
loope
jno
xchg
popa
out
mov
pop
stos
out
pop
loope
outsl
jno
xchg
ds
dec
sbb
and
sub
and
pop
adc
pop
mov
sahf
mov
push
imul
aas
push
and
cmp
fsub
push
leave
push
int
pop
cmp
inc
aam
call
mov
loopne
inc
cmp
test
jge
loop
enter
int
loop
popl
inc
pop
or
ljmp
clc
test
mov
add
mov
fwait
mov
lea
dec
or
xchg
adc
gs
aad
sub
adc
inc
push
jb
add
or
push
scas
xchg
hlt
mov
test
test
mov
sbb
pop
and
lret
adc
rcrl
aad
scas
and
adc
out
xchg
je
fs
gs
jecxz
sub
cmpsl
ljmp
mov
subb
ja
push
xchg
in
out
scas
cmpsb
or
and
push
out
pop
mulb
inc
rol
loop
aas
in
xorl
cwtl
lcall
stos
stos
push
pop
cmc
test
outsb
lahf
aaa
shll
xchg
add
add
pop
incb
jb
loopne
push
ds
bound
sub
cltd
inc
and
sbb
nop
sub
mov
push
inc
std
in
ret
xor
mov
pop
fstpt
lock
add
out
ljmp
fcom
imul
mov
or
adc
xchg
jmp
or
jnp
cmp
jle
adc
test
rorb
stos
cli
fistl
add
sbb
push
lret
jmp
cmpsl
insl
fdivp
jl
cmp
and
or
pop
lret
xor
adc
scas
adc
xchg
push
jno
lahf
add
out
jb
mov
mov
and
mov
int
and
sub
mov
and
mov
icebp
pop
mov
push
ficomps
sti
lcall
xor
dec
hlt
mov
jge
lret
xchg
add
jp
mov
imul
negl
enter
call
inc
sbb
mov
out
push
sar
test
fcompl
aad
push
mov
lcall
lods
test
les
adc
mov
and
mov
mov
sahf
adc
push
in
sbb
lret
nop
addr16
cmp
mov
stos
xchg
inc
push
xchg
arpl
jmp
imull
push
inc
fadd
aas
xor
jo
jmp
push
cltd
dec
or
mov
int3
push
cmp
mov
shlb
jb
aas
mov
pop
repz
test
push
mov
push
aad
leave
repnz
imul
loop
or
mov
sbb
pop
shlb
xlat
daa
sbb
sub
in
scas
andl
popf
dec
xor
aas
fsubrs
and
or
pushf
xor
adc
dec
or
mov
clc
fs
xor
add
jge
adc
pushf
sub
xchg
add
rcrb
cmp
and
psllw
cli
std
nop
shrb
fsubrl
fadds
or
adc
xchg
fstpl
sahf
jnp
pop
movsb
cltd
mov
push
aam
aam
xchg
or
scas
into
sbb
arpl
bound
jb
inc
adc
dec
ret
jle
push
outsb
fmuls
mov
sbb
ja
fnsave
and
ljmp
push
repnz
test
loope
push
hlt
test
add
inc
test
ret
ret
ja
sub
cmc
das
cmp
sbb
mov
outsl
dec
leave
mov
add
cmpsl
and
daa
std
int3
sbb
mov
sti
pop
and
inc
jge
mov
outsl
mov
cwtl
inc
push
mov
mov
push
mov
fcom
fcmovbe
bound
jp
mov
inc
push
xchg
jbe
lahf
mov
inc
std
sub
imul
mov
loopne
or
and
std
jns
test
test
mov
ljmp
jae
bound
adc
testb
lds
jne
push
enter
int3
sub
cmc
cmp
or
dec
popf
sub
icebp
addl
aam
adc
or
nop
jge
pop
jge
and
push
push
dec
jno
push
xchg
lock
pop
xchg
cmp
sar
les
inc
rorl
inc
mov
and
aad
jae
je
push
inc
insb
je
xchg
push
jmp
mov
jb,pt
sbb
add
add
setae
jae
xchg
cld
call
push
rcrl
ljmp
sub
pop
pop
lea
mov
push
in
xor
lahf
scas
cld
cmpsl
mov
es
fs
push
shr
shll
es
xchg
out
adc
mov
mov
sbb
das
aas
ret
dec
int
rolb
in
mov
sub
and
stos
mov
sub
fldl
pxor
mov
inc
or
jno
lahf
gs
adc
loope,pt
push
add
les
mov
ret
popf
and
dec
aad
dec
jle
nop
jle
sbb
in
mov
push
stc
xchg
add
cmpsl
add
icebp
pop
cwtl
xchg
in
out
sahf
dec
arpl
push
and
xchg
fiadds
into
lahf
sbb
fmul
mov
cltd
imul
in
jle
sbb
stc
or
test
fdivs
fdivrs
or
sub
sbb
dec
mov
aad
inc
loope
popl
push
push
jge
js
cmpsl
frstor
inc
mov
mov
stc
fmull
mov
inc
xor
loopne
into
mov
mov
mov
repnz
and
adc
sbb
repz
or
or
loopne
fs
loope
and
call
mul
aad
push
cld
adc
pop
mov
xor
negl
or
mov
inc
subb
sbb
clc
push
and
push
xchg
dec
or
xchg
push
sarl
mov
mov
dec
test
push
pop
cmpsl
and
fdivrs
repnz
push
bound
mov
stos
jae
mov
mov
mov
and
inc
sbb
insb
push
sub
outsb
xchg
leave
pop
ljmp
ds
jge
pop
cmpsb
mov
jns
mov
fisubs
hlt
inc
sarl
inc
pop
inc
push
lret
rorl
aaa
inc
mov
sbb
mov
call
jne
sti
adc
pushf
inc
test
push
in
cld
jecxz
xchg
mov
jmp
inc
jns
cmp
in
sub
lds
lods
icebp
mov
int
cmp
out
jae
mov
lcall
mov
mov
cmpsl
ret
cltd
xor
test
in
cmc
loope
cmp
lahf
js
dec
nop
pop
jg
imul
mov
fcomip
adc
in
lock
lret
push
cmpsl
jge
mov
jmp
sub
jbe
add
movsb
out
xor
pop
mov
inc
sarb
hlt
fcompp
scas
imul
hlt
inc
xor
mov
or
pop
fistl
add
fdivrs
sbb
dec
mov
arpl
je
enter
enter
sub
out
push
xchg
inc
sbb
clc
movsl
cld
into
test
imul
ds
imul
dec
test
push
sub
mov
pop
loopne
mov
test
repz
adc
sub
rclb
out
js
sub
jno
addr16
xchg
mov
fmul
insl
jl
or
jno
inc
mov
jae
mov
loope
sub
mov
mov
sub
xchg
sti
sub
or
fdiv
xchg
push
adcb
fcomps
push
push
hlt
jne
movsb
jle
pop
mov
mov
mov
subb
orb
rorb
xor
pop
push
lds
lret
cmp
lcall
adc
adc
mov
rorl
mov
push
or
decb
cli
dec
mov
dec
std
dec
out
mov
gs
xor
test
sar
inc
mov
or
fisttpl
mov
mov
mov
push
int3
mov
in
clc
mov
xor
dec
leave
gs
loop
add
inc
dec
lret
mov
ret
repz
cmc
and
js
enter
push
loopne
and
pop
repnz
scas
add
jge
add
sbb
lods
dec
cmc
sarl
push
push
pushf
mov
pop
icebp
in
cmc
or
or
mov
lds
jns
int3
insb
mov
lds
fwait
cmp
adc
adc
xchg
dec
mov
scas
xchg
or
inc
xchg
add
xchg
inc
sahf
cmp
aas
sti
add
ljmp
gs
or
lods
nop
inc
js
shl
cmc
jecxz
shr
mov
mov
movsl
jno
or
or
sarb
andl
add
cmp
insl
adc
out
mov
aam
cli
pop
aam
ret
or
mulb
lret
xchg
in
nop
data16
add
and
leave
call
cld
fldenv
ljmp
xor
insl
sub
adcb
das
orps
dec
cltd
xchg
xchg
leave
pop
nop
icebp
add
fcompl
xor
and
insl
cmp
add
lea
xchg
xor
sub
decb
xor
xor
mov
rorl
xchg
rcrl
mov
sbb
inc
rorl
test
rcll
push
sbb
jnp
cs
cwtl
jp
mov
push
xchg
jecxz
adc
jns
clc
leave
dec
jo
cmp
imul
test
push
lea
mov
mov
mov
jle
lcall
ljmp
mov
aaa
test
jnp
adc
pop
inc
cld
imul
sub
xor
pop
jno
or
mov
mov
pushf
push
mov
xor
mov
fldl
push
sub
push
xchg
xchg
leave
imul
js
or
fbstp
aaa
inc
and
cli
push
jmp
movsb
popf
pop
leave
pop
mov
imul
stos
idivb
test
scas
and
mov
frstor
mov
mov
push
cmp
scas
mov
sub
shl
cmp
mov
xor
dec
les
movsl
cltd
test
inc
push
xchg
jno
into
insb
addl
bound
in
mov
scas
mov
add
sub
movsl
call
cmp
rorb
add
inc
gs
jae
dec
ss
pop
xor
pop
int3
cwtl
test
mov
lods
popf
mov
cmpsl
jno
sbb
push
inc
or
in
dec
xor
pop
fnstsw
jbe
popf
aad
int3
cmpl
icebp
cmc
and
imul
jle
fs
dec
js
or
sbb
ret
rcrb
xor
movsb
push
je
cmpsb
scas
cmp
stos
push
xchg
mov
rcl
inc
int3
je
es
sub
std
sub
aaa
jp
lods
pop
and
imul
cmp
icebp
fisttpl
mov
pusha
pop
rorb
scas
adc
sbb
and
prefetch
repz
popa
dec
cmc
mov
lds
inc
xor
in
cmp
push
or
push
in
and
jne
xchg
jle
adc
cmp
sbb
cmp
or
dec
ds
dec
out
mov
testb
push
fdivl
inc
push
or
ljmp
orb
xor
stos
lret
popa
ljmp
add
stos
mov
inc
call
lock
sbb
fiadds
xchg
add
mov
jbe
repnz
int3
flds
mov
rcl
inc
sub
test
and
test
insb
xchg
je
push
icebp
pop
sahf
pop
add
lds
jae
sub
mov
test
jle
jl
push
or
mov
inc
data16
mov
mov
fucomip
imull
lods
mul
xchg
inc
loop
xlat
mov
push
sub
lcall
push
stc
and
pop
xlat
sub
push
mov
xchg
lret
movsb
ret
orb
test
push
cmp
lea
ds
mov
xor
cmp
cmpsl
mov
imul
dec
jge
repz
add
cmp
incb
out
nop
int3
stos
out
push
push
add
int
adc
mov
ret
mov
push
dec
cld
push
inc
imul
lcall
mov
mov
popa
decl
mov
or
mov
and
push
cmpsb
xchg
idivl
add
jb
push
ror
pop
mov
push
jp
fwait
sub
jnp
in
orb
jge
sbb
insl
mov
xchg
push
push
xorl
dec
sbb
mov
in
adc
aam
push
aad
insl
mov
cwtl
pop
inc
cmp
inc
int
loop
jne
inc
xor
repz
clc
fldt
jge
jns
int
push
cmp
cltd
bound
sarl
and
and
xor
mov
movl
mov
push
out
push
or
mov
ja
mov
mov
mov
jmp
scas
sub
icebp
jle
insb
sub
adc
jae
cld
nop
fldcw
pop
popw
decb
dec
shlb
mov
sub
or
data16
loop
inc
sub
repz
and
ud0
fmul
add
fstp
inc
lret
cwtl
xchg
aam
xor
xchg
or
xchg
ljmp
repz
out
push
cmp
int
cld
lds
mov
and
dec
adc
inc
inc
push
xor
sub
xor
mov
and
faddl
enter
inc
ja
and
adc
hlt
add
fwait
inc
roll
xor
les
push
inc
mov
sbb
xchg
aas
in
cmp
bound
cltd
out
push
fmuls
or
repnz
ret
data16
dec
jmp
gs
pop
or
adc
movsb
stos
push
lahf
rcll
mov
lret
sbb
sbb
fldt
into
mov
rcll
jge
stos
outsl
sub
call
mov
cmpsl
icebp
jo
dec
imul
pusha
je
daa
and
sub
mov
sub
ljmp
mov
pop
cwtl
fwait
sub
push
mov
das
xchg
jl
adc
iret
popa
clc
out
xchg
push
xchg
inc
loop
mov
sbbl
mov
add
cmp
aaa
or
mulw
mov
mov
lret
push
fsubs
aas
push
push
test
pop
sub
faddp
push
popf
sub
leave
cmpsl
push
inc
inc
xor
add
or
lret
stos
mov
jge
push
mov
or
mov
push
add
and
iret
inc
scas
fmuls
xor
inc
push
in
js
and
std
jns
push
cli
enter
pop
pop
or
xchg
les
cltd
adc
push
pop
fdivrs
or
ret
lock
push
cmp
cwtl
mov
xor
xchg
xchg
push
mov
lock
clc
cli
cld
cmpsb
push
add
jae
pop
js
add
js
out
pop
icebp
dec
dec
lods
int
sar
xchg
mov
test
push
mov
lahf
in
jle
push
mov
adc
xor
lret
insl
stc
mov
out
mov
gs
jns
cli
jl
in
les
or
mov
cmpsb
jmp
daa
popa
ret
xchg
mov
sbb
movsb
inc
xor
aam
and
xchg
inc
jl
orb
jl
mov
in
push
out
out
add
or
mov
mov
movsl
or
adc
mov
mov
aam
sbb
dec
call
inc
push
pop
pop
and
rol
iret
or
jl
lret
enter
out
inc
or
xchg
and
in
adcl
sub
insb
imul
lcall
sub
mov
cwtl
sar
cmp
dec
mov
clc
call
add
add
push
inc
or
sbb
and
or
cwtl
leave
ret
jp
daa
adc
shr
adc
lahf
mov
in
testl
cmp
and
enter
push
in
push
stos
pop
cmc
adc
xchg
jp
dec
cmp
lahf
xor
fs
sbb
add
cmp
or
in
add
jecxz
cmpsl
push
in
jb
and
popf
inc
data16
and
cmp
adc
dec
movsl
mov
inc
in
cs
mov
jg
jbe
es
ja
jbe
dec
ret
jg
sub
std
adc
lods
into
inc
cwtl
dec
es
adc
xchg
mov
pop
cmpsb
sti
fdivrp
addl
nop
lea
shrb
call
jge
push
dec
or
sbb
icebp
pop
mov
mov
les
sbb
sbb
jb
in
das
xchg
mov
push
cwtl
sub
loop
adc
inc
fmull
ret
shl
in
mov
loop
repz
cwtl
push
lcall
jno
test
fisubrl
ret
jecxz
pop
dec
pop
inc
xchg
or
rcrl
push
mov
push
push
and
daa
test
jne
lcall
lret
shrl
sbb
loope
or
shrl
movsb
mov
std
and
dec
xchg
inc
adc
sub
repz
outsb
pusha
mov
push
cld
dec
dec
xchg
jp
dec
ficomps
add
dec
movsb
leave
aam
ret
dec
ja
cmp
outsl
mov
sub
add
lahf
fists
xchg
jne
xchg
add
rclb
mov
pusha
fdivs
cmp
inc
das
dec
inc
or
imul
imul
je
add
lea
push
or
dec
pop
sub
fucomp
cmp
aaa
jp
out
aaa
daa
xlat
lods
insl
mov
hlt
or
xchg
xchg
insb
mov
pop
clc
xor
pop
adc
gs
test
or
push
fstpt
fcompl
mov
in
xor
sub
jle
and
movsl
out
cld
mov
xchg
ror
in
adc
cld
sarl
lock
test
fisubs
mov
repnz
in
mov
inc
popf
mov
movsb
xor
cmp
xchg
nop
jno
fidivrl
fidivrs
mov
daa
sub
dec
movsl
or
cmp
clc
xor
pop
test
mov
mov
add
cli
cs
scas
cmp
add
push
cmc
out
mov
mov
mov
push
push
xlat
mov
mov
or
mwait
and
inc
xorb
test
cmpsb
or
mov
repnz
xchg
mov
jecxz
jae
shlb
mov
adc
pushf
test
jo
push
fisttpl
xchg
call
cmp
sbb
mov
nop
mov
pusha
daa
jno
cmp
das
mov
sbb
mov
lahf
cwtl
out
jle
xlat
movsl
mov
ds
sub
loop
mov
push
nop
pop
jge
loope
mov
jbe
fmul
int3
xor
push
push
push
call
aad
dec
cmp
and
pusha
std
pop
jle
jmp
lods
pusha
dec
popa
arpl
test
sbb
ds
push
lret
and
jne
mov
inc
inc
repnz
push
lret
sti
mov
mov
test
lahf
arpl
push
add
mov
push
leave
cmpsb
sbb
adc
pop
leave
add
ret
cld
lods
mov
notb
add
enter
dec
or
mov
gs
loopne
or
dec
aaa
sbbl
ud0
out
les
call
add
call
sub
sub
dec
cld
add
pop
je
cmp
cld
popf
pop
sub
inc
mov
push
data16
xchg
fsubrl
xchg
scas
into
push
and
mov
insb
shufps
imul
rclb
dec
sub
pop
xchg
ss
mov
incl
push
cmp
repz
dec
dec
sbb
mov
lock
cmpsb
aad
and
je
imul
dec
unpckhps
lods
sub
pop
add
sub
add
mov
cmp
aaa
in
or
mov
adc
stos
and
sub
jb
sar
sub
imul
mov
jle
sbb
jbe
pop
xor
add
add
mov
or
imul
cmp
adc
push
shll
adc
dec
cli
mov
dec
or
test
shl
push
add
scas
lret
test
dec
or
pushf
clc
add
lret
lods
mov
jmp
aad
mov
mov
rorb
cmc
lahf
frstor
sbb
adcl
addl
out
test
outsl
cli
inc
adc
jge
popf
pop
inc
pop
ret
jnp
push
add
in
repz
lods
mov
dec
and
pop
cmc
cmp
lods
pop
loope
repnz
faddl
mov
ret
xor
push
mov
sbb
push
pop
mov
mov
incb
pop
outsb
lock
xchg
stos
sarl
adc
shll
mov
lcall
or
jb
cmp
test
cmp
ss
mov
lcall
jns
lcall
mov
test
fcoml
push
cmp
test
xor
int
mov
ret
insb
push
in
out
hlt
add
insb
jae
fwait
cltd
cmp
clc
insb
sbb
arpl
ret
loope
dec
pop
das
test
push
xchg
sub
sbb
mov
adc
or
int3
dec
addr16
test
push
inc
scas
aas
lcall
mov
movsl
fisubs
xor
sarl
pop
add
push
js
xor
ss
test
push
in
and
sub
adcb
adc
jg
mov
push
movaps
sub
xor
push
and
inc
dec
out
ret
or
sbb
xor
mov
enter
enter
or
bound
idivl
and
xchg
subl
mov
pusha
and
adc
cmp
std
stc
faddp
in
fstpt
or
cltd
test
and
je
sub
jae
dec
adc
adc
and
sub
cld
xor
push
sets
and
or
xlat
int
xchg
adc
inc
and
push
cmpl
loope
inc
mov
pop
cld
xor
adcl
xchg
popa
fiadds
add
movsb
push
inc
repnz
out
sub
sub
in
pop
mov
or
pop
mov
push
or
loope
dec
mov
cmc
mov
cmp
fwait
push
inc
or
loope
push
or
rorb
push
repz
and
mov
aaa
pop
pop
data16
mov
sbb
mov
sbb
push
xchg
iret
cmpsl
insb
and
sti
insl
mov
cld
inc
and
sub
sub
push
inc
cmp
data16
out
mov
cs
out
insb
sbbb
cmpsb
icebp
lret
pop
jbe
gs
cmp
aad
lds
clc
jbe
aam
mov
sub
sahf
call
sub
inc
testl
cmpl
pop
ret
sti
arpl
mov
cmp
jp
mov
push
jecxz
pop
mov
pop
jbe
pop
pop
cs
ret
shlb
cmp
mov
cmp
xorb
mov
aas
insl
hlt
mov
nop
mov
aad
sbb
fistl
adc
out
push
mov
clc
in
push
fimull
fwait
inc
xlat
sub
and
sahf
inc
jg
inc
xchg
jae
les
lret
sub
lds
cmp
shl
mov
dec
repz
sub
std
hlt
mov
xchg
les
in
popl
cmp
cmpsl
scas
dec
mov
mov
cs
sub
in
jo
loopne
inc
xor
movb
aam
jecxz
dec
cmp
les
lret
vandnps
mov
roll
into
dec
addl
push
xor
sub
sahf
jmp
and
pop
push
add
insl
out
mov
out
and
mov
ja
dec
out
cmp
idivl
adc
dec
xor
arpl
shll
in
sub
inc
push
mov
jns
flds
push
xchg
cmp
sbb
add
inc
push
in
dec
test
out
dec
jns
insb
repnz
add
hlt
mov
aam
lea
mov
inc
mov
push
dec
inc
jp
pop
ss
mov
xor
inc
add
adc
inc
push
pop
jbe
push
adc
push
addr16
incb
or
or
loope
cmp
xor
ds
cld
pop
lret
arpl
add
divb
sbb
xor
sarb
or
pop
cmp
ljmp
cmp
and
sti
outsl
push
pop
inc
fidivl
out
adc
or
adc
sbb
pop
lods
mov
mov
in
dec
adc
sahf
insl
mov
cld
mov
subl
add
cmpsl
push
aam
ss
sub
pop
and
adc
imul
popf
imul
data16
in
dec
ljmp
mov
xor
lret
not
xor
orb
ror
dec
jmp
sbb
jne
mov
cmp
cmp
adc
movsb
fs
adc
mov
shll
push
and
ja
fcompl
inc
pop
test
adc
cltd
pop
aad
leave
jae
and
popa
and
icebp
outsl
rorb
mov
jbe
testl
sub
in
stos
sahf
out
dec
test
popa
push
push
imul
jae
pop
push
imul
and
jge
fisubl
sub
or
idivl
jecxz
cmp
dec
fmulp
mov
mov
inc
jns
adc
pop
dec
js
jl
movsb
push
imul
fiaddl
pop
iret
es
les
je
push
lcall
xor
push
cltd
push
add
push
xchg
mov
sub
sbb
mov
arpl
ss
dec
adc
and
cmp
movsb
xor
jae
nop
int
mov
adc
add
pop
fildll
popf
xchg
scas
fists
jno
add
push
jb
xchg
outsb
shrb
out
flds
mov
xor
ja
jp
out
add
andl
dec
cwtl
or
jp,pn
dec
cmp
cmp
lea
test
sub
cltd
push
aam
or
jmp
pop
cwtl
dec
das
cmp
sets
xchg
mov
fsubs
push
je
pop
notl
inc
je
out
sbb
fsubrl
mov
stos
jns
xchg
mov
mov
adc
aad
sbb
or
ds
das
mov
lret
nop
inc
repz
lahf
in
pop
push
popl
das
mov
adc
aas
in
adc
fs
in
shlb
push
les
repnz
call
jle
mov
popf
shrb
dec
mov
add
and
and
addl
adc
and
jl
inc
popf
or
dec
js
lret
jmp
cli
xchg
sbb
mov
pop
out
inc
xor
vpandn
in
leave
leave
sbb
out
push
push
push
movsl
daa
and
push
movsl
repnz
cmp
jno
xor
loop
dec
ljmp
stos
cmp
ret
imul
push
push
mov
hlt
pop
out
sbb
loopne
cmp
xor
or
sbb
inc
inc
pop
outsb
xor
push
bound
ss
xor
bound
mov
rcll
push
out
adc
xor
cmp
xor
mov
out
psllq
addb
or
sbb
div
sub
and
pop
mov
mov
shlb
and
sbb
ja
xchg
dec
sarl
inc
test
add
lret
lret
movsl
repz
mov
jbe
jno
inc
aas
lods
arpl
mov
or
orl
or
xchg
add
sbb
notb
pop
sbb
and
repz
test
inc
aad
popf
popa
add
sub
inc
jnp
out
test
cltd
pop
std
into
push
add
mov
and
in
sbb
or
and
mov
push
inc
lcall
adc
jle
mov
sbb
seta
mov
sub
cmp
mov
sbb
nop
pop
jecxz
xor
lods
mov
insb
dec
jno,pn
xor
pop
testb
ja
fldenv
enterw
fsubs
cmpsl
inc
scas
mov
mov
pop
adc
outsl
cld
int
mov
out
rsm
or
sub
mov
jnp
xor
dec
push
cwtl
shll
std
cmpb
lds
jne
sbb
sub
shll
incb
inc
cli
addl
adc
dec
dec
add
cwtl
push
jl
sbb
mov
add
adc
cli
ljmp
pop
stc
repz
or
pushl
mov
movsb
inc
jb
cltd
test
icebp
mov
arpl
mov
xchg
inc
dec
stos
insb
mulb
stos
jne
ljmp
jecxz
push
xchg
fnstsw
sbb
in
in
ret
push
es
xchg
fcomps
sti
xor
ja
and
xchg
fldl
add
mov
mov
adc
and
out
xchg
inc
ljmp
cli
sbb
jae
mov
jle
push
gs
mov
fnsave
pop
pop
mov
push
jbe
xchg
mov
repz
subb
scas
icebp
daa
je
and
insl
xlat
jg
clc
pop
movsl
push
push
ret
test
push
pop
das
in
fwait
ljmp
jle
add
out
aam
jp
xchg
loope
fwait
adc
mov
ds
stos
jo
add
jns
jl
testb
shlb
push
and
pop
jo
mov
aaa
lods
outsl
dec
aaa
mov
jb
je
sti
push
sbb
popf
push
scas
or
pop
out
dec
int
xor
mov
lcall
push
lods
fnstcw
adc
std
imul
ret
jecxz
mov
in
pushl
push
dec
xor
pushf
and
cmpsl
es
add
inc
outsb
inc
aad
outsb
loopne
adc
mov
loop
mov
sbb
cmp
dec
test
jno
push
sti
xchg
mov
push
daa
jecxz
mov
sub
mov
xchg
jle
dec
inc
push
pop
dec
ds
outsb
pop
mov
lret
sbb
daa
lret
test
mov
addr16
ret
sbb
lea
movsb
push
mov
lock
or
sahf
imull
push
push
cmp
xchg
dec
xchg
test
ret
fiaddl
imul
mov
ljmp
mov
fnsave
jnp
stc
mov
bound
fisubs
test
mov
imul
aad
push
rcrl
loope
and
or
xchg
xor
call
cltd
push
into
test
lea
jo
inc
xchg
mov
push
and
mov
pop
cmp
sub
pop
pop
cli
inc
add
in
lcall
scas
bound
fsubl
pop
notl
xchg
inc
filds
sti
jnp
testl
mov
cli
imull
sub
sbb
dec
dec
in
fistpll
push
sti
pop
mov
mov
sub
dec
sbb
loope
sbb
cmpsb
popa
xchg
push
in
lods
ljmp
cli
cmp
outsl
fildll
or
int
jae
aas
cmpsb
inc
jne
mov
pop
movsb
loop
xlat
pop
cmp
cmp
cltd
cmp
mov
jmp
sti
cli
jbe
pop
mov
xor
movsl
daa
cmpsl
dec
addr16
mov
call
push
pop
test
shl
jl
mov
jge
cmpsb
or
mov
outsl
xchg
inc
xchg
in
js
pushf
cli
icebp
jg
mov
adc
dec
and
mov
adc
repz
push
cmpsl
and
mov
rcll
insb
je
mov
cmpsb
in
insb
hlt
jo
arpl
bnd
and
int3
cmp
lods
add
imul
repz
xchg
push
sub
push
pop
xor
adc
lds
push
fwait
sti
das
inc
popf
mov
lods
push
mov
inc
stos
pop
stos
dec
or
push
pop
push
insl
push
leave
cli
inc
push
fimuls
adc
out
popa
sbb
push
xchg
ja
loopne
push
out
xlat
fldl
out
xchg
or
xor
bound
cmpsl
inc
mov
and
loop
ss
mov
mov
ret
mov
movsl
sbb
cli
pop
jne
test
ljmp
ret
sub
xor
std
xchg
and
andps
mov
sbb
insb
lods
dec
mov
mov
sbb
ret
add
push
xor
lods
xchg
clc
std
cmp
lds
mov
sbb
in
inc
es
mov
or
or
mov
loopne
pop
fcomps
mov
sub
jo
cmp
lret
sti
sbb
push
inc
jle
inc
imul
xchg
mov
inc
and
fptan
push
sub
xchg
in
iret
out
mov
xchg
mov
aam
sub
fs
scas
fidivrl
cmp
jge
push
cmp
sbb
xchg
xor
push
dec
cmp
fsubs
push
cmp
rcrb
cltd
inc
imull
xchg
insl
mov
les
icebp
les
fldt
push
pop
iret
iret
and
call
sub
cs
inc
pop
mov
xor
shll
cltd
or
int3
scas
daa
xchg
mov
ror
call
lcall
xor
fldl
dec
cmpsb
fiaddl
pushf
pop
or
call
pop
jg
jno
mov
xor
lret
and
dec
jne
jle
subb
mov
lcall
adc
adc
cmp
enter
insl
dec
sub
adc
stc
pop
and
sbb
lea
addb
addr16
or
jl
and
out
fisubrl
loope
mov
inc
add
push
mov
les
test
shrl
ljmp
pop
push
das
adc
jno
adc
xorl
and
out
leave
dec
test
dec
adc
jo
mull
pushl
jno
cmpsb
ret
das
sub
int3
pop
dec
jmp
xor
pop
lods
and
outsl
das
enter
mov
lret
xchg
movsl
imul
sti
nop
and
pop
pop
sub
sbb
pop
mov
jne
nop
sbb
stc
fsubrp
adc
and
pop
cmp
mov
dec
rorl
fcoml
push
cmp
icebp
mov
pop
pop
scas
dec
out
in
mov
outsb
cmpsl
cltd
push
push
dec
pop
out
add
pop
jge
pop
movsl
lock
sbb
out
mov
xchg
jae
dec
call
fs
pop
push
sub
pop
jg
je
add
jae
inc
and
mov
aad
adc
xchg
call
rcrb
cmp
cs
test
stos
cs
out
fadds
jmp
gs
mov
xor
sbb
mov
sub
into
gs
xlat
stos
jp
mov
cmc
jbe
xor
vphaddubw
sub
push
and
hlt
jno
adc
cmc
pop
sti
lods
cmp
int
add
push
xor
inc
jns
add
inc
ljmp
and
add
stos
and
sahf
mov
lret
mov
dec
mov
xchg
test
add
das
mov
stc
or
push
jae
xor
xchg
inc
mov
add
or
sbb
and
aaa
jbe
and
or
cmp
rcr
test
pop
arpl
inc
out
sbb
sarl
movsb
add
pushf
outsl
sub
mov
das
mov
adc
adc
cmpsb
pusha
pop
sbb
jns
loop
jg
or
adc
sbb
sub
or
pop
mov
outsl
pop
jne
pop
jb
nop
fcmovnu
scas
mov
gs
outsb
in
mov
cmpsl
xor
dec
inc
clc
dec
mov
add
sub
daa
mov
dec
and
add
or
sbb
adcl
xor
xor
pop
dec
jns
mov
daa
test
jno
or
loopne
adc
movsb
movsb
ret
in
or
shrb
and
sub
mov
sbb
movsb
ret
push
jecxz
enter
sub
inc
cmp
jnp
stos
popf
dec
mov
sbb
sbb
outsl
rcrb
xchg
adc
mov
jae
test
shll
sub
xchg
mov
or
dec
mov
dec
xor
adc
xor
jmp
into
pusha
jmp
add
jae
cmpsl
outsl
xchg
mov
fs
dec
pusha
loope
hlt
push
hlt
enter
xor
add
mov
pop
dec
popa
pop
gs
push
dec
ja
fwait
in
jb
mov
xor
inc
push
mov
mov
xor
push
xor
hlt
add
ficoms
xchg
add
adc
inc
mov
push
xor
xchg
ret
je
rolb
std
pop
movsl
je
pushl
jp
pop
lods
lret
es
sub
shlb
aam
mov
out
in
test
data16
in
jecxz
xchg
insb
adc
jmp
lea
push
fwait
stos
lcall
icebp
push
int
int
icebp
mov
stc
sti
sahf
push
bound
lock
inc
xor
out
add
movsl
imul
sbb
and
loopne
jge
lret
pop
int
push
inc
daa
cmp
push
aad
xchg
inc
mov
int
fldcw
cmp
mov
xchg
subb
xor
shlb
lock
add
push
adc
outsl
adc
js
pushf
xor
cmpsl
ret
xchg
xchg
xchg
pop
mov
stos
scas
decb
add
ret
jp
shrb
hlt
sub
adc
aam
test
dec
popa
xchg
push
aam
fwait
test
pop
dec
push
orb
stos
lcall
in
fistps
cld
and
jmp
decl
out
dec
incl
inc
std
stos
lock
mov
lret
jge
push
cmc
adc
xchg
jb
inc
rclb
rep
pop
movsl
push
cmp
cltd
or
cs
call
cmp
dec
shl
aam
dec
repz
jo
push
mov
sbb
cmc
add
outsl
sbb
shll
cmp
shrb
push
inc
jecxz
outsb
leave
push
fisubrs
jge
jg
pusha
arpl
mov
fisttpl
jge
xchg
addb
daa
pop
mov
shll
jnp
aad
lock
mov
data16
adc
mov
sbb
test
sub
lods
sahf
jmp
mov
ficoms
xchg
or
testl
cltd
rcr
sti
iret
js
ljmp
rcrb
xor
mov
mov
mov
cli
pop
mov
sbb
and
sub
xor
test
cli
fnstcw
nop
sub
lret
xchg
shll
leave
add
les
pop
mov
leave
popa
iret
test
cmpsl
lret
aam
std
sbb
insb
mov
leave
fisttpll
dec
stos
lea
pop
sarl
cmpsl
or
ret
inc
pop
pop
inc
fnsave
aas
int
xchg
clc
out
push
shlb
xchg
push
sahf
xchg
mov
ljmp
fidivl
push
stos
xchg
cmp
adc
into
enter
mov
arpl
pop
gs
leave
data16
into
lahf
cmp
or
orb
int
push
push
repnz
repnz
lods
xchg
lods
inc
frstor
popa
mov
test
hlt
jge
mov
inc
repnz
jne
dec
xor
mov
jle
pop
cs
addr16
fcomp
sbb
cmp
xchg
sub
fimull
hlt
in
push
pusha
jl
sbb
jbe
ret
sub
mov
jo
in
push
xor
das
pop
es
in
out
out
xor
push
push
xchg
scas
sbb
cs
clc
sti
or
outsb
jmp
adc
gs
sbb
mov
popf
scas
scas
xchg
out
mov
xchg
out
push
mov
ret
dec
and
pop
mov
int3
insw
fimull
cmp
lea
loopne
loop
xchg
dec
out
repnz
test
repnz
hlt
into
cmp
mov
mov
insb
or
sti
sti
insb
data16
stc
sbb
jle
mov
sub
jno
cld
add
scas
inc
pop
adcb
cmpsl
inc
fists
add
pop
add
fcoml
sbb
nop
mov
clc
inc
jmp
out
jae
pop
addb
leave
or
lock
data16
cmp
mov
or
stc
gs
cmp
and
and
jbe
sbb
mov
cmp
or
inc
mov
imul
scas
jp
push
adcl
lods
and
sbb
push
add
into
rcrb
mov
mov
movsl
xchg
lods
mov
mov
adc
jmp
inc
sbb
adcl
pop
hlt
push
and
test
and
xchg
pop
mov
or
arpl
fnstcw
xchg
insb
fwait
out
sub
pop
fstpl
stc
mov
dec
or
pop
xor
xor
pop
pusha
icebp
pop
in
stos
loope
subb
mov
ret
aas
mov
cwtl
cmp
and
or
sbb
ffree
pop
pop
fnstenv
inc
fwait
les
lret
mov
inc
adc
cld
movsb
adc
movsb
push
add
lcall
stos
adc
add
js
sub
and
movsl
jg
andl
lock
lcall
xlat
mov
cmpsl
or
fdivrl
or
push
sub
mov
shlb
dec
js
push
das
mov
dec
mov
pop
les
dec
call
std
cltd
lock
out
js
lahf
xor
mov
or
scas
cmpsb
adcl
adc
sbb
sub
sub
add
add
dec
popf
fmulp
mov
xchg
jl
or
addr16
aam
test
fcoms
das
inc
inc
inc
sub
xchg
bound
xchg
jmp
leave
rcr
pop
mov
in
scas
lcall
mov
shll
subb
sbb
popf
popf
sbb
mov
xor
push
sub
daa
or
pop
dec
mov
scas
inc
scas
iret
idiv
loop
mov
mov
jmp
jp
and
ljmp
out
nop
mov
stos
cmp
stos
sbb
shrl
popa
inc
leave
popf
xor
in
fisubl
mov
jg
movsl
push
aas
outsb
int3
gs
sbb
fcomps
mov
pushf
or
adc
aam
fdivrl
scas
stc
xchg
cmp
rclb
xchg
xchg
dec
push
into
and
adc
cmc
addr16
jnp
in
in
xlat
lcall
inc
add
sbb
add
popf
ss
and
mov
pop
clc
and
cld
gs
fisubs
inc
dec
push
loope
inc
add
in
pop
jle
sub
dec
adcb
fldl
push
stc
pop
dec
and
test
sub
out
fwait
ror
push
dec
sahf
shrl
cmpsb
cmpsl
dec
jmp
fdivl
sarb
inc
std
cmc
fwait
cli
dec
scas
and
dec
jno
pop
aam
pop
enter
aam
jo
cwtl
mov
lds
in
fildl
mov
lahf
outsl
mov
stos
mov
aam
xchg
cmpsl
scas
pop
test
inc
jb
cli
inc
fidivs
fldl
insb
sbb
jmp
inc
inc
inc
lea
push
jmp
pop
and
mov
aaa
mov
nop
mov
jmp
sbb
test
into
sbbb
sub
fst
push
or
dec
jnp
cltd
in
les
outsl
push
je
test
sbb
lock
outsb
test
insb
mov
pop
jl
adc
nop
xor
sbb
push
and
xor
cmpsl
fisttpl
dec
xchg
mov
inc
sub
sub
inc
int3
sub
xchg
fcmovbe
mov
inc
push
jno
inc
lods
mov
daa
inc
inc
sar
xorl
lahf
cmp
in
mov
mov
loop
mov
dec
aaa
jns
mov
js
jne
jl
xchg
mov
fsubr
data16
mov
cmp
ds
and
gs
mov
fmull
jl
mov
stos
sub
cs
shll
fwait
add
sbb
aaa
hlt
in
iret
int3
mov
xor
das
jbe
outsb
pop
sub
movsb
mov
stos
enter
jecxz
cltd
cmp
mov
ljmp
fstps
mov
loope
push
ds
inc
ja
stc
sbb
and
cmp
int3
std
negb
inc
jmp
or
push
dec
test
add
dec
mov
lds
std
adc
into
dec
inc
mov
repnz
mov
mov
cmp
mov
sbb
push
mov
sub
arpl
pop
jae
jge
call
inc
clc
decl
pop
dec
xor
lock
in
xor
fprem1
adc
mov
jbe
jle
test
sar
out
enter
daa
ret
fmul
shl
stc
movsl
push
imul
shll
test
adc
fsubr
rorl
mov
aad
out
add
cmp
ja
pop
stos
push
jle
clc
popa
pop
sbb
sbb
stos
ja
add
cltd
jae
and
pushf
sti
mov
pop
xorl
daa
out
mov
dec
test
ret
shrl
cmp
stos
arpl
mov
std
or
or
outsb
arpl
xor
ja
aam
push
sbb
inc
cmp
enter
fisubrs
neg
lcall
ljmp
adc
xor
adc
mov
je
fwait
mov
mov
enter
jo
add
fcoms
inc
sbb
xchg
push
add
sbb
std
cmpsb
jle
stos
adc
stos
jbe
xchg
ret
add
push
mov
or
push
adc
lock
pop
daa
or
mov
sbb
test
mov
sub
mov
out
jb
stos
jbe
jge
push
popa
sbb
sarb
and
mov
dec
and
xor
loope
and
push
pop
dec
rolb
xor
stc
xchg
cmpsb
dec
push
iret
xchg
cmpsb
in
movsb
xchg
mov
jmp
int3
lds
pop
mov
sbb
xor
ds
xor
fidivs
test
scas
and
lods
dec
ret
popl
popa
inc
ljmp
pop
addps
es
popf
cmp
pop
mov
sub
cltd
pop
sub
or
push
subl
mov
add
in
mov
stos
rcl
insb
fidivl
js
ja
cld
cmc
xchg
lods
mov
push
lods
dec
fsubrs
and
pop
std
push
notl
mov
mov
xchg
pop
adc
mov
xchg
std
mov
add
mov
xchg
pushf
push
dec
test
inc
xor
cli
sbb
cs
fstpt
rcll
mov
sbb
pop
xchg
lods
xor
xor
cmp
es
out
push
add
pop
cli
repnz
mov
test
push
rclb
arpl
add
adcb
and
xchg
cwtl
cmp
or
mov
mov
daa
mov
cmp
rcll
add
adc
fsubs
adc
aam
cmp
repz
sbb
repz
lahf
pop
outsb
inc
sub
pop
pop
insl
add
mov
inc
push
and
das
in
insl
call
mov
pop
mov
jl
dec
fsubrp
imul
push
movsb
das
sub
insl
jb
lahf
xchg
and
pop
cmp
pop
push
sub
xor
sti
bound
pusha
frstor
and
stc
sti
and
orb
fdivl
fistpll
sub
in
jae
sub
outsb
xorb
mov
sti
add
push
add
mov
std
out
imul
push
sub
outsl
mov
pop
int
std
test
and
inc
mov
cmc
mov
jg
cli
pop
outsl
lea
and
sahf
fidivs
xchg
or
mov
push
add
jb
pop
leave
xchg
mov
lret
mov
mov
jp
pop
jecxz
std
je
mov
rol
lret
pop
outsl
insb
iret
je
push
jmp
pop
sbbb
mov
xchg
xchg
test
ror
add
icebp
test
mov
int
jecxz
cmp
mov
lret
in
arpl
sub
xor
inc
ds
outsb
ftst
adcl
les
inc
repz
xchg
mov
xchg
adc
loop
enter
repz
outsb
lcall
inc
shl
mov
movsl
cmpsb
sbb
jge
loope
out
pop
test
xor
jge
sub
in
mov
movsl
cmp
sub
mov
add
add
fs
add
loop
mov
fwait
test
sbb
pop
inc
insl
insb
xchg
rcll
xchg
sub
je
adc
pop
out
mov
loope
pop
push
scas
leave
test
lods
mov
pop
mov
vhsubpd
cli
repnz
mov
cmp
mov
lret
fidivrl
dec
hlt
test
xchg
sarl
dec
mov
imul
dec
xor
clc
mov
fs
cmpsb
pop
stos
dec
fsub
push
inc
cmpsb
jecxz
mov
jecxz
push
mov
pop
jg
xlat
fmuls
push
or
cmp
arpl
cld
pop
push
stc
ds
jmp
inc
sub
push
roll
and
int
pop
cmp
pop
jnp
sub
sar
lret
push
addr16
inc
adc
mov
cmp
push
inc
sub
cli
mov
dec
das
sub
push
cmp
mov
sarb
cmpsb
pop
cmp
inc
loop
aam
lea
lcall
and
push
and
ds
int3
movsl
xor
sbb
lret
sti
sbb
xor
mov
push
stos
cld
rol
adc
mov
mov
mov
cmp
sub
cmp
add
push
adc
sbb
push
dec
lret
push
loop
xchg
aaa
add
jno
sub
je
mov
push
xchg
scas
scas
mov
pop
jl
add
jno
jo
adc
std
dec
test
into
int3
add
or
inc
mov
sbb
inc
push
or
sbb
pop
lahf
dec
aam
mov
mov
mov
ret
iret
pop
loope
xchg
clc
xor
clc
add
lahf
fldl
pop
cmp
and
imul
xlat
sahf
outsb
sbb
imul
inc
xchg
and
cmpsb
in
pop
cs
popa
add
test
aas
xchg
cli
lret
mov
popa
add
sarl
aad
sub
into
xchg
mov
sahf
adc
aad
cmpsb
add
adc
leave
sbb
fs
xchg
mov
jle
test
inc
jge
lret
pusha
and
pushl
or
outsl
mov
mov
push
or
add
in
int3
scas
les
jg
mov
bsr
or
in
mov
push
das
xor
xchg
cltd
psrlq
hlt
pop
ret
xor
sub
and
push
imul
icebp
aam
xor
jbe
and
and
arpl
ror
inc
add
lret
mov
dec
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
notl
push
sub
push
sub
mov
mov
mov
inc
mov
or
movl
movzbl
adc
movl
adc
mov
add
mov
adcl
sub
adc
mov
xorl
xorl
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
pushl
call
cmpl
jb
mov
sub
mov
orl
mov
andl
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
mov
xorl
orl
mov
andl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
mov
orl
add
mov
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
mov
mov
neg
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
adcl
movl
subl
lea
movzbl
sbb
mov
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
jmp
lea
add
mov
xor
mov
mov
mov
sub
xor
mov
adc
mov
adcl
xor
orl
add
xorl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
mov
mov
add
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
or
dec
mov
jmp
push
sub
mov
mov
mov
mov
mov
adc
mov
xor
and
mov
add
movl
cmp
movl
je
notl
mov
jmp
mov
xorl
xor
push
add
xor
xor
sub
mov
add
movl
push
adc
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
push
pushl
call
jmp
mov
xor
subl
xor
movl
cmp
movl
jne
movl
cmp
jne
push
movl
jmp
mov
xor
adcl
add
subl
xor
add
movl
adc
subl
xor
orl
xor
movl
cmp
movl
jne
cmp
movl
jne
addl
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
xor
xor
dec
mov
jmp
xor
add
mov
subl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
jmp
mov
movl
xor
add
adcl
imul
mov
orl
xor
add
movl
cmp
mov
je
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
orl
add
and
mov
mov
xor
add
imul
sbbl
mov
mov
mov
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
jmp
pop
push
xchg
dec
add
shrl
xor
sbb
addl
xchg
cmpsl
test
jbe
jl
sarb
mov
cmp
test
jbe
loopne
inc
and
mov
les
daa
xchg
repnz
lahf
aam
cmc
out
je
cmp
mov
int
add
ja
pop
fistps
or
loopne
jnp
jge
mov
adc
dec
cmp
inc
sbb
movsb
adc
hlt
fcomps
subb
scas
mov
das
ja
jne
sbb
inc
xor
call
outsb
sub
push
xchg
test
or
roll
ljmp
dec
shrl
cltd
loope
xor
arpl
call
jne
xor
popa
adc
mov
pop
adcl
inc
inc
mov
mov
push
and
mov
mov
mov
ja
sbb
imul
adc
lcall
sub
test
loopne
sub
mov
add
icebp
jle
orb
dec
adc
stc
pop
insl
ret
std
sbb
inc
or
fldcw
mov
and
xchg
dec
jne
call
pop
loopne
aam
out
push
dec
mov
push
xor
jae
outsb
loop
mov
jmp
imul
push
pop
fimuls
icebp
mov
sbb
mov
stc
jle
mov
push
xor
arpl
int
mov
bound
dec
mov
test
add
adc
dec
out
push
mov
push
in
int
cmc
lea
xor
wbinvd
stos
jne
or
popl
cmp
out
xor
add
insl
bound
xchg
sub
add
pop
nop
ds
mov
sbb
rorb
jmp
mov
xchg
xchg
add
cmp
decb
mov
or
hlt
cmpsb
push
or
jecxz
mov
add
scas
lret
pop
push
adc
out
xchg
mov
negl
inc
stc
pop
adc
ficoml
mov
xchg
fst
adc
add
and
fcomp
dec
mov
adc
push
sub
in
gs
dec
pop
adc
xorb
mov
nop
xchg
mov
lahf
xor
imul
adc
xchg
bnd
pop
imul
nop
stc
mov
push
or
dec
fidivrs
xchg
mov
and
and
ds
cs
jmp
mov
lahf
inc
mov
cmc
in
fadd
outsl
mov
fstps
ja
ret
jb
push
pusha
std
adc
dec
adc
push
pusha
ljmp
adc
out
je
movsl
repz
xchg
adc
pop
jns
popf
mov
ljmp
dec
sbb
gs
into
dec
jmp
jnp
sbb
fs
rorb
lea
test
inc
sbb
adc
femms
daa
popf
mov
mov
ljmp
jns
stc
shll
mov
mov
gs
pop
jecxz
arpl
inc
test
ss
mov
inc
or
lods
test
pop
out
incb
push
mov
xlat
cltd
jo
test
push
aad
mov
sub
out
jnp
mov
push
dec
fsubp
jb
imul
xor
add
clc
inc
shrl
nop
dec
mov
inc
gs
lods
int3
iret
push
xor
call
pop
sub
or
and
push
aas
subb
and
mov
adc
push
stos
cli
aam
cld
test
pop
xor
ret
int
xchg
inc
data16
jg
ficoms
les
sbb
or
jle
or
addb
mov
idivb
mov
sub
xor
fisubs
sbb
shll
adc
fisubrs
inc
rclb
lret
dec
pop
pop
mov
loope
or
das
pop
imul
das
xor
orb
mov
or
addl
cmp
jp
mov
push
test
mov
add
sbb
ret
outsl
pop
mov
int3
roll
mov
shll
in
stc
arpl
adc
and
pop
mov
sbb
scas
addl
shl
push
cmp
stc
cmp
cmpsl
jno
ror
aam
stos
lcall
sub
mov
xlat
pop
cmp
mov
push
clc
int3
adc
jecxz
pop
mov
pop
push
xchg
pop
icebp
inc
sub
int3
roll
lret
pop
push
xchg
pop
ljmp
imul
mov
repz
mov
or
xor
sti
or
sbb
into
cmp
pop
popf
in
daa
sbb
sbb
pop
popf
fisubrl
push
or
insl
and
jmp
sbb
fsubrs
nop
shl
lcall
mov
into
sbb
scas
mov
sbb
stc
cmc
mov
rcrl
aaa
xchg
cmpsl
bound
sbb
lahf
in
out
repz
jle
mov
jg
cmc
push
jo
stc
inc
cmp
mov
data16
sub
xor
daa
dec
int
add
mov
sub
xor
mov
rcrb
pop
jl
rorb
cltd
sti
mov
test
shll
leave
push
orb
mov
and
lcall
cltd
cli
mov
les
and
in
xor
inc
sbb
movsb
mov
cltd
mov
push
mov
pop
lret
inc
mov
decl
sbb
dec
adc
jmp
outsb
popf
mov
mov
loopne
add
lret
fcom
pop
push
pop
jmp
sub
mov
pop
in
into
iret
sub
fcomps
mov
imul
ret
mov
fs
insl
out
js
sbb
jle
pusha
pop
push
ror
jge
dec
jge
and
mov
or
and
inc
enter
out
or
mov
mov
lds
clc
sub
fsubrl
add
inc
xlat
push
and
xchg
inc
mov
dec
repnz
shrb
mov
idivb
xchg
bound
stos
xchg
mov
jge
mov
pop
int3
push
leave
add
jmp
in
sub
fnsave
roll
xlat
stos
mov
scas
and
gs
pop
movsb
jae
icebp
das
add
stos
insb
adc
aaa
ds
mov
inc
push
movsb
pop
clc
jp
mov
cltd
or
sub
pop
mov
test
das
pushf
adc
xlat
xchg
dec
jo
mov
fisttps
sub
insb
xchg
jmp
jno
repz
sub
cld
sub
fnstsw
pop
fnsave
stos
andb
fists
mov
je
pusha
iret
pop
xorl
lcall
fldl
scas
call
inc
pop
push
fs
and
add
gs
lea
add
sub
pop
out
sbb
adc
cmc
add
fadds
add
xlat
pop
movl
dec
pop
or
xchg
add
inc
mov
xchg
lea
mov
inc
test
sbb
sbb
inc
pop
add
push
push
ds
test
and
roll
push
sbb
mov
loopne
addr16
sbb
xor
mov
and
insb
mov
test
cli
xchg
adcl
sub
in
test
dec
mov
inc
or
sub
xchg
movsl
and
dec
dec
outsl
dec
in
xchg
ds
iret
mov
imul
and
inc
jp
popf
cmovae
add
cmp
test
out
push
add
mov
jnp
ljmp
xchg
arpl
test
cmp
sbb
xchg
in
jle
push
mov
mov
arpl
ds
cmp
jne
adc
dec
jge
jecxz
sub
popa
fs
fsts
or
add
jae
pop
xchg
movsl
cmpsb
inc
add
dec
enter
jns
xor
rol
jo
rorl
repnz
aaa
and
roll
inc
repz
and
push
out
xor
adc
test
xor
incl
popf
loopne
out
fdivrs
xchg
pop
xor
inc
pusha
sub
out
jp
jbe
out
xchg
push
sub
das
xchg
mov
add
push
mov
into
add
inc
loope
mov
lcall
lock
in
lahf
mov
sbb
xchg
cltd
lret
cwtl
dec
mov
icebp
push
dec
push
orl
bound
pop
push
hlt
add
rorb
ret
shrb
nop
cmp
dec
sbb
ds
mov
scas
jnp
xchg
incb
lock
in
push
xchg
call
xor
jge
scas
lock
mov
repnz
sbb
int
dec
mulb
stc
hlt
jmp
outsl
lock
mov
adc
and
lahf
inc
dec
movsl
lahf
stc
push
repz
jo
pop
sub
jg
lods
ljmp
lret
jne
cmp
loop
imulb
dec
aam
loope
bound
jo
adc
popa
mov
loop
aam
inc
mov
fnstsw
mov
pop
arpl
inc
inc
inc
and
lret
cld
or
loop
or
jne
jno
movsb
sahf
jp
or
aad
test
scas
jge
cs
lcall
sahf
or
add
jbe
pop
lret
std
dec
je
push
rcrl
add
fcomps
dec
out
mov
sbb
aaa
jge
xor
fwait
andb
out
les
fistpll
jmp
bound
and
mov
jge
mov
pushf
cmp
xchg
jnp
fisubl
jno
jle
sub
mov
call
dec
notl
rcrl
in
jnp
dec
js
das
jl
rcrl
call
and
add
cmp
sets
mov
adc
jg
xchg
icebp
rolb
adc
popf
in
jns
mov
in
inc
fnstsw
sbb
repnz
sub
mov
test
pop
or
fstps
cmp
xor
mov
mov
dec
stos
in
sub
cmpsl
jge
pop
int
enter
shlb
mov
inc
add
dec
jnp
mov
lods
push
into
sahf
sbb
ja
sub
out
xchg
jno
roll
pop
sub
fsubp
test
in
dec
sbb
xor
loope
pop
faddl
mov
mov
push
rol
ret
js
insl
test
inc
mov
stc
or
adc
xchg
outsl
jnp
and
sub
push
or
or
dec
inc
pop
out
or
or
xor
push
cli
ljmp
push
lcall
sub
imul
cmp
mov
xchg
clc
xlat
ss
es
push
daa
and
xchg
mov
jae
xor
cmp
dec
inc
gs
scas
mov
inc
or
rclb
mov
fwait
push
and
outsb
lcall
out
fs
test
push
andl
push
sbb
xchg
sub
fcomi
out
lret
outsb
popa
lcall
sarl
pop
pop
mov
loope
scas
stc
jo
popa
fisubl
outsl
jae
push
movsl
inc
push
cmp
sahf
add
push
stos
je
hlt
push
cwtl
filds
cltd
inc
push
cs
in
scas
and
push
jg
push
cli
sub
jmp
cmpsl
mov
mov
std
dec
out
inc
mov
add
testl
xchg
pop
lock
in
icebp
xor
cmp
fsubrl
cmp
mov
push
push
popa
subb
adc
pop
bswap
icebp
pop
add
movsb
mov
cmc
mov
cmp
xchg
dec
lcall
or
ffreep
jg
fsubl
test
fwait
adc
test
ret
fwait
mov
push
add
jne
jb
adc
add
mov
mov
xchg
in
fs
adc
dec
adc
lcall
movsl
dec
mov
mov
jae
xchg
sti
mov
pop
push
jle
mov
shll
and
gs
mulb
fbld
out
ds
pop
adc
ret
mul
and
clc
mov
cmp
pop
mov
out
sbb
out
adc
orl
xchg
lds
fimuls
testl
subb
adc
pop
mov
testb
js
sahf
or
movsl
flds
mov
dec
inc
imul
mov
repnz
and
mov
rclb
cmp
es
inc
xor
dec
or
inc
pop
cmp
popa
mov
dec
ljmp
push
push
shlb
repz
and
mov
lret
imul
std
repz
push
es
or
dec
dec
das
test
rorl
pop
xlat
iret
gs
jb
mov
jae
sbb
and
push
cltd
imul
sub
in
insl
push
jnp
bound
iret
pop
insl
sbb
decl
icebp
lock
cmp
mov
rcrl
inc
or
push
inc
sbb
movsl
inc
jle
aad
sub
pop
scas
mov
cmc
push
pop
add
repnz
dec
ficomps
dec
adc
lahf
in
inc
cs
mov
xchg
idiv
lds
or
or
pop
mov
add
cld
stos
cs
call
adc
das
mov
rclb
or
popf
jbe
enter
pop
jg
sbbb
sub
sysexit
sub
ret
jle
sub
in
and
push
sub
outsb
lahf
pop
jmp
mov
fbld
cmp
sarb
pushl
cmpsl
rcrb
push
jp
in
fcomi
fcompl
fistps
pop
inc
or
fisubl
testb
pushf
pushf
mov
out
jae
lcall
inc
movsl
xor
das
out
push
sub
cmp
mov
mov
mov
and
insb
add
insb
jns
pop
sbb
jl
push
pop
ss
cmp
add
xor
mov
jno
popa
cmc
push
nop
push
fbstp
testl
sub
pop
push
jb
ljmp
xchg
jg
movsb
xor
pop
cwtl
fldl
push
xchg
dec
xchg
loope
jnp
inc
mov
mov
pop
push
hlt
cld
je
frstor
pop
movsl
lgs
jne
stos
in
jg
sub
pushf
shlb
mov
pop
jo
add
addl
jns
and
adc
mov
repz
jge
inc
or
xchg
clc
push
lds
pushl
idivb
cmp
push
adc
sbb
dec
mov
scas
adc
out
and
mov
nop
jns
cmp
mov
add
es
aaa
ror
jae
ret
jno
xchg
sbb
outsb
loopne
adc
adc
jbe
add
lahf
mov
xchg
das
cmpsl
mov
cmp
sub
xlat
or
inc
scas
cmp
stc
sub
cwtl
jnp
fidivrl
and
in
jbe
leave
je
test
xchg
addr16
jmp
fldt
hlt
or
repnz
std
and
push
out
cmp
push
mov
inc
rclb
fldln2
xor
push
jo
outsl
jl
or
fs
jno
pop
shrl
or
push
sub
xchg
pop
push
and
pop
ret
or
xor
rorl
or
jmp
scas
add
inc
xor
or
cmp
stos
fs
jle
mov
aas
inc
ss
je
mov
in
call
cs
icebp
mov
addr16
aad
js
xchg
lret
and
push
stos
inc
add
test
sub
push
jns
sub
cmp
dec
mov
push
jmp
jecxz
lahf
loop
push
pop
lea
xchg
mov
pop
pushl
pop
dec
addr16
pusha
sub
pop
ljmp
mov
adc
inc
cltd
cmp
out
int
inc
arpl
mov
aaa
leave
stos
jecxz
cmpsb
push
xchg
sub
dec
sbb
iret
pop
pop
mov
ret
in
lea
repnz
xchg
sar
aam
addl
pop
cmc
xchg
lret
scas
mov
cld
cwtl
mov
cmp
pop
js
aaa
xchg
jp
push
ret
push
sahf
jecxz
and
or
frstor
movsl
aad
sbb
cmp
loopne
and
repz
jle
cmp
fdivl
or
into
adc
xchg
pop
xchg
mov
imul
rclb
scas
test
leave
or
nop
pop
gs
push
in
aaa
mov
jl
lcall
xor
adc
movsb
imul
lea
dec
mov
je
mov
je
mov
int3
sbb
stos
mov
ja
xor
pop
andl
fst
push
nop
mov
lods
jb
pop
xchg
std
shll
mov
inc
cld
sub
ljmp
dec
ror
pop
jns
int3
mov
cmp
in
add
imul
repz
and
scas
pop
out
or
mov
mov
ffree
push
in
sti
stos
in
dec
cltd
ss
insl
imul
mov
dec
sti
push
sbb
cld
xor
jl
enter
cmp
lea
xlat
loopne
jo
push
and
mov
aam
andl
add
pop
pop
xchg
inc
mov
ss
xlat
mov
jbe
test
nop
cli
shrl
sahf
pop
jp
icebp
jecxz
les
rcrl
scas
repnz
movsb
andl
jnp
scas
dec
imulb
les
push
enter
mov
adc
repnz
inc
pushf
mov
fldl
shlb
jo
adc
add
aaa
mov
sub
cmp
loope
out
mov
arpl
in
mov
sbb
notb
outsb
jne
test
mov
cmpsb
or
mov
rcll
es
dec
out
inc
sub
sub
icebp
inc
nop
jge
dec
lock
iret
push
mov
inc
pop
imul
xor
loopne
cmp
fistpll
andb
icebp
pop
cmp
or
cmpb
xchg
mov
pop
pop
ja
and
nop
xchg
rolb
xchg
pop
decl
sti
lds
loopne
xchg
cmc
in
fsubrs
push
int3
inc
dec
scas
add
std
iret
mov
pop
gs
pop
int
insb
xor
mov
cmpsb
push
or
or
int3
push
inc
cmp
xchg
fisttps
lcall
inc
mov
push
cmpsl
lea
push
ss
mov
inc
or
xor
or
mov
and
sbb
mov
xchg
lahf
sti
pop
inc
xor
mov
push
jo
ret
shl
cmp
sub
mov
or
repnz
inc
mov
add
jae
lods
inc
xor
sarb
mov
jbe
dec
fdivrl
stos
call
xchg
lcall
jae
insb
imul
imul
shlb
mov
dec
jns
mov
xchg
inc
loop
out
jp
mull
pop
mov
dec
popl
mov
xor
dec
nop
mov
mov
push
pop
inc
stc
push
sbb
cmp
dec
sub
adc
movl
dec
fcompl
dec
dec
mov
testl
push
xchg
jl
push
lods
jo
mov
sbbl
loop
lock
pop
inc
cmp
imul
pop
mov
jge
imul
lret
and
lds
dec
cmp
in
insb
mov
repz
jmp
xchg
cmpl
loopne
cmp
jp
sub
push
mov
int3
jns
fcmovne
ja
lock
lret
rolb
cmpsb
cwtl
push
rcrb
dec
jae
mov
test
fsts
loope
jecxz
andnps
jo
mov
lret
cwtl
cmc
aad
mov
jnp
rorl
sbb
into
xor
jecxz
in
jo
pop
scas
icebp
sub
popf
mov
add
and
add
mov
test
mul
outsl
adc
ljmp
and
rcr
lds
loope
sbb
cli
mov
cmp
stos
cli
pop
sbbl
sbb
fstpt
push
pusha
lret
movsb
inc
rcl
pop
cmp
data16
push
push
xchg
es
or
push
xlat
xchg
adc
pusha
xor
flds
incl
add
cmpl
jb
int3
popf
dec
in
addl
push
jge
dec
mov
gs
in
jg
mov
stos
push
jecxz
jae
or
and
mov
cmp
mov
or
jle
jbe
jl,pn
movsb
dec
push
pushf
push
sbb
in
cld
repz
xchg
inc
push
sub
add
mov
xchg
mov
aaa
shlb
push
add
outsb
lahf
fneni(8087
sub
ret
adc
aad
pop
popf
in
orb
lcall
dec
jle
stos
push
int3
out
add
imul
bound
fisubrs
and
sbb
imul
mov
ja
or
mov
icebp
add
mov
aad
xor
je
lret
in
je
cmp
cli
sbb
mov
push
mov
sub
jmp
xor
dec
or
js
dec
idivb
sbb
sub
orb
xchg
xchg
add
scas
lret
js
and
pushf
mov
xchg
out
test
and
fnsave
lods
mov
pop
fcoms
and
outsb
aas
sti
push
push
pop
out
pop
add
mov
lret
pop
xor
jge
in
sub
mov
outsl
mov
xchg
fucomi
push
ret
into
or
xchg
sub
mov
ret
jge
lret
lret
jl
ds
push
sub
sbb
mov
xor
leave
cmp
and
mov
lds
ljmp
outsb
jnp
jbe
mov
mov
mov
mov
loope
lods
cmp
cmp
movsb
mov
popa
sub
dec
movsb
mov
popf
ret
lea
idivb
loop
iret
lods
lock
inc
enter
iret
sti
stc
out
sbb
loope
aad
mov
nop
mov
mov
addl
pop
or
loope
or
cmpsb
jg
mov
mov
cmpb
push
mov
ljmp
addr16
mov
fcmovnbe
call
test
xor
inc
mov
adc
out
mov
rorb
aaa
lea
idivl
xchg
inc
stos
jo
or
jge
hlt
xchg
jns
add
popf
dec
sbb
pop
shll
jmp
inc
cltd
cmpsl
ret
sbb
mov
jp,pt
inc
jmp
mov
int3
dec
xchg
jmp
adc
push
sub
pop
jnp
xor
mov
loopne
pop
repnz
ret
in
ror
loopne
bswap
mov
cli
test
cltd
lds
pusha
jno
movsl
mov
push
pop
sbb
out
push
cmp
xchg
jmp
adc
in
fwait
dec
xorb
sbb
pop
pop
inc
sti
aam
cwtl
sub
insb
push
or
sbb
sub
in
add
out
inc
inc
jmp
cmpsl
data16
push
add
cmp
fcomps
sbb
testb
daa
ljmp
icebp
sarl
outsb
pusha
cmp
mov
inc
and
xchg
in
ja
mov
das
lret
push
mov
adc
lret
imul
loopne
dec
fdiv
insb
arpl
fsubrs
and
dec
sbb
inc
jb
jno
mov
es
sbb
cmc
in
sub
push
idivl
call
jne
stos
imul
and
xchg
dec
insb
dec
mov
mov
fnstcw
dec
call
inc
mov
or
mov
mov
sahf
loop
test
popf
aas
xchg
inc
pop
jmp
rcrb
adc
bnd
sub
fsubl
test
xchg
inc
loop
lods
dec
aaa
push
out
stos
add
xlat
shl
lods
aas
sti
daa
cltd
mov
xor
adc
pop
sbb
bswap
mov
mov
iret
sarl
inc
es
push
daa
mov
xlat
or
std
mov
bound
pop
or
sub
cmp
loopne
pop
sbb
ret
mov
jge
or
sub
loop
movsl
dec
lcall
adc
test
es
stc
movsl
or
mulb
mov
cmp
adcl
push
stos
or
popa
loop
push
push
das
fisubrl
mov
lret
stos
push
inc
loope
lods
es
add
mov
lcall
sbb
xor
xorb
js
adc
cmpl
push
mov
aas
test
or
mov
jmp
jge
pop
xchg
fisubrl
gs
and
xlat
out
into
std
mov
fidivrl
std
fdivl
testb
pop
mov
lahf
sti
mov
mov
dec
mov
or
xor
inc
push
cmp
xor
jmp
hlt
test
jns
pop
std
filds
sbb
movsl
in
in
xchg
sbb
scas
inc
pop
xlat
inc
mov
mov
in
pop
test
ret
iret
gs
out
and
mov
cmpsl
sti
js
jno
sbb
xchg
adc
divb
cld
push
ljmp
push
push
test
lret
pop
adc
sbb
pop
mov
mov
xor
test
enter
fdivrs
xchg
sub
js
incl
xorps
addr16
bound
pushf
clc
or
pop
loop
stos
mov
cli
and
iret
in
ja
xor
pop
clc
das
xlat
mov
sub
leave
adc
outsl
mov
mov
insl
add
aaa
ret
mov
in
fbstp
push
xchg
insb
cmp
adc
ss
data16
pop
push
repz
push
ja
sbb
or
add
test
in
push
sub
ljmp
andl
dec
xor
dec
cmp
pop
lods
lods
es
mov
inc
ret
sarb
mov
rorb
aaa
scas
das
inc
inc
out
push
std
jl
mov
or
mov
scas
jmp
adc
lock
scas
js
cwtl
or
jb,pt
sbb
movsb
pop
int3
lods
add
or
jo
jbe
lahf
xor
bound
ja
lds
jecxz
rol
jns
cld
xor
in
mov
adc
and
stc
push
cmp
lret
lods
add
sbb
out
out
dec
ljmp
arpl
sbb
lahf
mov
popf
lcall
dec
movsl
lock
cmpsb
xor
sub
int3
mov
jno
popf
or
jmp
xchg
js
push
je
add
test
dec
add
pop
pop
sub
mov
iret
sub
psllw
mov
loopne
out
data16
sbb
std
ret
das
inc
dec
int
sahf
je
sbb
nop
imul
sub
sbb
mov
mov
inc
sahf
fsubrl
push
xchg
mov
stc
mov
iret
sub
mov
inc
add
ja
mov
fs
xor
stos
cmp
push
pushf
into
aaa
into
test
push
pushf
mov
mov
cmpsb
mulb
mov
clc
xlat
scas
mov
pop
sbb
xchg
ljmp
bound
dec
or
mov
cmpsb
push
mov
cmp
pop
sbb
aas
or
xor
push
stos
mov
pop
repnz
mov
mov
jl
insb
test
mov
mov
or
cli
and
rcrl
clc
insl
repnz
inc
and
xchg
cld
push
mov
inc
add
push
adc
push
add
xchg
movsl
outsb
xchg
mov
add
rclb
lahf
out
pusha
cwtl
mov
mov
push
mov
test
in
sbb
ret
mov
jno
jmp
gs
mov
or
dec
add
ds
mov
pop
pop
push
aad
cmp
enter
mov
xchg
or
insb
inc
adc
mov
fsubs
add
mov
pop
lds
mov
pop
je
push
lahf
xchg
sarb
push
ja
xor
movsb
xor
cmp
jmp
out
insl
and
xor
sub
mov
dec
div
xchg
sub
fs
pop
nop
daa
mov
mov
or
mov
push
daa
fs
idivl
pop
mov
aas
mov
mov
or
out
test
sbb
cmp
and
pop
loop
sub
fisttps
xchg
pop
inc
add
ljmp
aaa
add
stos
inc
sub
add
stc
or
aaa
push
stos
sub
ljmp
cli
mov
movsb
rorl
mov
mov
push
fisubl
push
mov
xlat
call
jae
fiaddl
inc
add
jno
push
scas
sbb
xor
scas
mov
loope
test
fst
pushf
insb
out
test
jmp
cmp
jg
rcl
mov
dec
pushf
mov
inc
adc
rclb
lcall
and
ret
xchg
cmpsl
fwait
popf
xchg
mov
xchg
jg
ljmp
sub
add
xchg
fwait
add
pop
jne
pop
inc
adc
mov
mov
roll
data16
cld
xchg
jle
or
daa
sbb
xor
jae
movl
push
add
cld
aad
mov
out
into
jle
push
out
data16
mov
push
adc
call
lds
bound
cmp
aaa
cmpsb
leave
daa
push
ja
cltd
jno
adc
and
mov
mov
ret
imul
fucomp
cmp
mov
ret
adc
xchg
rcr
inc
mov
push
push
in
jno
loope
cmp
or
mov
stc
cmp
movsb
lods
dec
inc
inc
cli
lea
daa
pop
idivl
mov
ffree
or
outsb
nop
dec
lea
jmp
call
push
sbb
stos
sub
test
testl
pop
mov
fucomip
std
test
dec
pop
cmp
mov
leave
aam
mov
out
sbb
outsb
ror
fdivl
mov
test
inc
cmp
ljmp
imul
test
jge
xchg
fs
psubsw
je
mov
sbb
fcmovnbe
cmp
or
js
mov
sbb
and
xchg
push
sub
mov
and
mov
enter
xchg
sbb
hlt
ret
push
adcb
stos
ficomps
sbb
and
jo
jg
ljmp
or
mov
mov
dec
daa
mov
data16
gs
push
int
sbb
pop
inc
xlat
out
inc
and
mov
in
popa
jg
push
push
pop
aad
out
cmc
and
lret
aaa
push
pop
daa
movsl
lret
sahf
aad
sbb
or
mov
lcall
and
das
mov
push
rcrb
icebp
push
hlt
popl
inc
jae
xchg
sarl
mov
jb
jb
rorl
dec
mov
sbb
cmp
xorb
imul
pop
loope
cltd
lods
fucomp
xor
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
jmp
test
lock
orb
enter
inc
or
adc
addb
add
out
test
imul
pop
test
loop
aas
push
mov
cmpb
hlt
lret
mov
fildll
add
mov
inc
mov
stc
sbb
adc
int3
stc
jl
xchg
mov
sti
paddusb
adc
pop
add
pop
in
ljmp
ret
pushf
xchg
imul
aam
cmp
out
push
mov
psrlw
mov
fbld
inc
inc
inc
enter
sahf
cmp
out
xchg
inc
pop
add
insb
outsb
pop
cmc
repz
add
aas
pop
cmp
jbe
fisubl
pop
sbb
jg
sti
dec
xor
sti
cs
in
sbb
js
inc
stos
and
fisubs
jg
cmpsb
push
inc
mov
leave
sub
hlt
test
jno
scas
daa
daa
inc
mov
mov
mov
push
mov
repz
or
adc
fwait
or
fmul
leave
sub
or
jecxz
push
add
add
push
jge
pop
xchg
sbb
and
sub
cltd
aas
xchg
jge
mov
das
mov
cmpsl
flds
mov
cmp
add
aam
ja
adc
pop
pop
xor
test
lahf
jae
mov
fbld
push
cwtl
dec
push
daa
hlt
sub
pop
lret
inc
lock
lahf
jns
popf
sahf
jo
xchg
ja
in
lods
or
add
int
sub
add
cmp
add
arpl
dec
repnz
sbb
jcxz
xor
xor
lods
daa
mov
mov
les
or
enter
in
fwait
clc
and
outsb
sub
cmp
data16
mov
out
push
pop
aam
rcll
pop
inc
xchg
jge
lds
adc
add
add
idivl
dec
lock
pop
dec
jmp
add
push
jge
rol
xor
sbb
js
mov
std
lret
jb
lahf
cld
aas
in
push
sbbl
sub
push
mov
xchg
xchg
jl
dec
mov
xor
add
je
call
fcmovbe
orb
shll
jle
outsl
push
data16
inc
ret
dec
out
push
gs
scas
or
data16
insb
or
sbb
jle
ret
ret
imulb
dec
inc
inc
cltd
cmp
sub
dec
scas
cltd
cltd
mov
xor
jmp
fcmovnb
popf
inc
dec
stos
and
test
sub
or
fldenv
inc
fldl
xchg
inc
inc
mov
test
je
je
cmpsb
mov
ds
das
fisttpll
jae
test
jg
adc
mov
out
xchg
pop
out
test
mov
ds
lcall
cmp
push
cmp
negb
and
movsb
and
sbb
add
push
sub
mov
lods
xchg
jp
out
cmpsl
sbb
inc
pop
addr16
dec
bound
add
push
ja
ss
jp
pop
lcall
and
aaa
bound
idivl
std
dec
insl
bound
es
sbb
or
lahf
loop
pop
push
dec
psubusw
dec
sub
cmp
mov
push
cmp
mov
data16
adc
xchg
cmc
sbb
mov
pop
adc
aaa
clc
insl
das
jnp
add
sbb
cwtl
incb
xchg
pop
test
test
xor
js
std
test
sub
adc
cmp
cmpsl
mov
mov
or
adc
shrb
xchg
dec
and
test
fwait
aad
fistpll
push
push
mov
xor
and
or
push
push
fdivl
sub
xlat
aas
and
fcmove
or
mov
push
xor
sbbl
adc
mov
inc
cwtl
nop
cmp
subb
inc
je
inc
addr16
arpl
mov
and
adc
enter
mov
shll
loope
adc
ret
lret
popa
add
in
stos
adc
outsb
pop
add
mov
out
icebp
arpl
repnz
std
push
push
xlat
add
add
jg
int
dec
pusha
xchg
stos
gs
cwtl
adc
rolb
jne
stos
mov
clc
sbb
cmc
aam
insl
in
pop
arpl
int
jecxz
andl
ss
mov
mov
sbb
and
cld
bound
in
out
decb
mov
popa
in
dec
repz
scas
mov
pop
rcl
in
cmp
xchg
insl
xchg
and
loope
pusha
xor
jbe
xchg
adc
and
lods
pop
jno
data16
cmp
sti
fmuls
out
mov
jmp
adc
std
dec
test
add
dec
out
push
dec
lock
popaw
fldcw
aad
popa
sub
cmp
adc
js
mov
add
mov
lcall
popf
add
adc
xchg
sub
fsubp
mov
scas
sbb
int3
daa
int
dec
fwait
pop
jne
inc
or
mov
add
cs
insb
adc
add
rcrl
pushf
sub
and
pop
jge
adc
addl
lret
sub
mov
rcrl
inc
jecxz
testb
jo
mov
mov
jle
movsl
push
setle
cmp
jae
push
sub
lods
sti
ret
sub
pop
xlat
pop
xchg
test
jmpw
je
pop
jmp
dec
jno
cs
push
dec
fistps
rclb
sub
xor
idiv
imul
aaa
in
sbb
dec
xchg
cmp
cmp
imul
subl
cs
nop
test
icebp
lods
and
mov
push
pop
cmp
repnz
mov
or
and
mov
cmpsl
stos
pop
mov
subl
xchg
add
and
test
pop
mov
add
pop
cmp
sub
mov
in
imul
insl
cmc
jns
sub
xchg
lds
popa
loope
xchg
sub
mov
fbld
xor
fnsave
jp
inc
jl
repnz
push
orl
xchg
inc
inc
aaa
mov
outsb
sub
lds
pop
or
xchg
nop
mov
fmulp
mov
fstpt
out
test
sbb
pop
mov
into
sub
sub
fisttpll
and
in
aad
mov
and
sbb
sarl
ret
push
gs
adc
lods
popf
shlb
xor
pop
pusha
push
mov
cmp
scas
xor
imul
jae
test
fcompl
and
inc
sti
lds
add
mov
loope
inc
xchg
mov
sub
inc
pop
lock
test
popa
push
arpl
sbb
mov
lock
push
mov
push
testb
push
lods
in
or
mov
sub
sbb
dec
cmp
int
shl
sub
lock
xchg
dec
in
push
add
add
fwait
std
daa
push
pop
cmc
aam
inc
inc
popf
test
test
mov
ret
jmp
loopne
sub
stos
mov
in
add
fchs
mov
fistpll
mov
icebp
jmp
ja
mov
clc
outsl
adc
rclb
imul
aas
fnstenv
pop
and
jb
sbb
ret
repz
adc
jecxz
mov
popa
imul
jg
jne
ds
stos
adc
stos
sbb
cltd
mov
and
andb
gs
aaa
or
or
mov
shlb
pusha
out
bound
mov
sub
adc
lret
xlat
adc
mov
fiaddl
sahf
and
pop
sbb
js
cmp
rol
inc
aad
add
sbb
pop
out
ds
cmp
mov
adc
adc
or
pop
in
mov
jl
pop
in
hlt
movsb
sbb
jge
cmp
or
xor
or
xchg
ss
outsb
imul
dec
or
xchg
outsl
stc
movsl
fs
aad
nop
pop
ljmp
xchg
jb
int
xor
daa
and
scas
jno
sbb
shll
mov
pop
push
mov
in
adc
lock
daa
mov
jno
scas
mov
pop
sub
xchg
push
ja
xchg
movsb
popa
aam
xchg
out
aad
ss
mov
mov
aam
call
imul
mov
xchg
fldt
cli
pop
jg
cmp
fidivrl
jns
add
daa
inc
mov
jo
sbb
lock
push
add
stc
mov
dec
dec
pop
or
xchg
test
nop
enter
mov
push
fstps
cmp
adc
arpl
jge
ret
mov
push
mov
adc
repz
stos
insb
repz
cmpsb
aas
xchg
sti
loope
std
dec
push
popa
cli
mov
fdivl
xchg
mov
je
mov
rclb
or
test
xor
ss
xor
sbb
push
jae
jbe
adc
and
mov
mov
mov
xlat
jb
fs
stos
or
or
dec
inc
add
daa
mov
and
iret
shrl
clc
clc
push
call
sbb
dec
inc
mov
pop
xchg
or
push
cmpsl
ljmp
mov
mov
mov
cwtl
ja
add
les
push
push
scas
sub
movsb
jge
adc
pop
mov
push
inc
xchg
sub
adc
ss
out
pop
mov
xchg
push
cmpsl
ljmp
mov
xlat
rclb
fisttps
aas
roll
out
inc
imul
mov
andb
xor
add
jp
pop
xor
subl
lret
into
mov
mov
out
cltd
cltd
mov
cs
addr16
dec
sahf
ret
in
add
fldcw
fistps
cmp
jl
pop
jecxz
sarb
adc
jge
xor
shrl
fs
sub
jae
in
xchg
xor
mov
pushf
gs
cwtl
push
adcl
sub
push
rcrl
cmp
add
mov
xor
insl
add
bound
out
enter
stc
popa
insb
out
in
lret
std
pop
xchg
pop
and
xlat
scas
testl
faddl
push
ror
scas
and
inc
not
mov
fdivs
arpl
cmpsb
dec
push
pop
pop
adc
dec
mov
aas
jmp
pop
lods
testl
push
leave
mov
pop
sub
aaa
popf
mov
inc
cld
mov
int3
push
xchg
into
sub
fwait
or
das
std
es
inc
or
iret
or
out
dec
out
nop
mov
xchg
fldl
xchg
inc
repz
xor
xchg
popf
and
push
mov
mov
pop
cwtl
and
cmp
das
nop
jmp
sbb
jns
sbb
sbb
cmp
dec
subb
idiv
and
mov
mov
test
data16
xor
subb
pop
scas
movsl
jg
and
inc
pcmpeqw
lahf
aaa
mov
dec
ja
sub
add
dec
and
xor
xor
into
dec
scas
jp
or
lcall
rcrl
test
dec
mov
pop
push
xchg
adc
imul
cmpordps
push
jno
in
fs
cmp
stos
mov
out
add
jbe
sbb
xchg
rorl
mull
cmpsb
dec
lret
pop
jl
sbb
dec
adc
divb
jbe
sub
dec
mov
arpl
inc
xor
std
jnp
test
ds
push
int3
lahf
loop
sbb
pop
js
pop
pop
iret
sbb
testb
xchg
push
das
mov
cmp
je
mov
or
add
jnp
subb
dec
push
jge
and
subl
ret
mov
int3
adc
lret
inc
mov
cmp
mov
lret
movsl
pop
lock
add
dec
loope
mov
xor
lahf
dec
jne
cli
or
fsubs
adc
icebp
pop
cmc
mov
mov
lds
fcmovb
push
xor
add
jl
inc
repz
mov
js
outsb
add
fcomps
xor
pop
mov
lods
cmp
xchg
hlt
xor
mov
mov
jne
adc
mov
into
lods
add
inc
aas
mull
fldenv
mov
stos
mov
dec
mov
mov
push
dec
sbb
js
pop
xor
nop
cmp
fidivl
mov
jecxz
decb
push
neg
ds
add
fisttps
inc
jno
pop
stc
imul
xchg
or
sbb
jle
xor
jmp
jns
and
rorl
ds
push
jmp
pop
insl
sti
out
mov
xchg
jmp
cmp
test
clc
ds
repnz
xor
sbbb
sub
inc
adc
cmp
sub
push
addr16
sub
daa
inc
aam
mov
lock
push
loop
or
or
in
into
pop
mov
xchg
or
and
data16
in
scas
out
lret
adcl
push
xor
int3
jle
and
xor
mov
push
mov
lret
sahf
je
mov
ret
pop
mov
sub
loopne
les
and
clc
fs
jge
out
outsl
stos
lcall
push
push
dec
push
enter
inc
cmpsl
divl
cmpsl
out
xor
push
in
or
add
lahf
nop
iret
mov
mov
adc
xchg
lea
fsubrl
iret
fiadds
repz
aam
aad
xor
leave
pop
js
pop
sbb
mov
fnstsw
dec
pop
sbbb
pop
dec
aaa
add
loope
mov
shll
daa
fwait
xor
int3
aas
shlb
push
popf
mov
or
adc
call
mov
jl
sbb
outsb
ljmp
jle
stos
mov
mov
cwtl
xchg
inc
xchg
xchg
les
aas
pop
sbb
xchg
and
ret
movsb
leave
add
ljmp
stc
lds
mov
in
out
pop
and
jmp
mov
cld
or
adc
sbb
and
xor
mov
test
jmp
sub
lahf
add
mov
sbb
out
push
icebp
push
lret
mov
mov
outsb
ja
adc
inc
sahf
inc
inc
sub
in
les
icebp
jge
jmp
add
xor
pop
int3
xor
in
push
pusha
add
add
xchg
mov
insl
mov
fildl
stc
adc
inc
pop
mov
pop
in
testl
in
sbb
lods
sbbw
cmpb
nop
xchg
cld
mov
jl
mov
add
mov
js
mov
xor
ja
iret
imul
ret
adc
adc
dec
xor
cltd
hlt
jg
mov
mov
test
sbb
pop
andl
loopne
jno
popa
mov
lock
or
jb
loop
xchg
dec
push
mov
lcall
cmp
pushf
mov
sahf
sbb
xchg
jg
lds
loopne
mov
mov
inc
pop
xor
out
add
add
mov
cmp
dec
sahf
jmp
pop
mov
adc
cli
mov
mov
lahf
cmp
test
hlt
mov
shl
into
mov
mov
inc
inc
test
das
andl
pop
movsl
mov
rclb
mov
mov
ret
lods
push
lret
dec
and
dec
mov
imul
std
pop
lods
mov
pop
addl
lea
lea
jl
mov
add
dec
pop
jns
dec
push
mov
stos
jbe
cmc
ret
notl
xchg
movsb
test
and
inc
or
push
out
loop
out
fwait
sbb
push
cmp
jnp
and
popa
sbb
aas
dec
add
mov
mov
dec
add
rol
push
test
into
push
cmp
inc
movzwl
jno
jb
jmp
dec
pop
jb
inc
mov
jl
adc
mov
sbb
adc
cmp
repz
or
test
and
addr16
push
mov
adc
inc
je
fldcw
jg
jno
daa
rcll
push
mov
and
insb
mov
pop
repz
sub
leave
aam
sbb
popf
push
sub
cs
sbb
dec
push
subb
cmp
xor
dec
dec
jg
cmp
push
jmp
cmp
sbb
xor
dec
push
xchg
xchg
push
sbb
sub
cmc
xchg
sub
mov
mov
push
cli
add
cwtl
ja
inc
push
sub
sarl
notl
mov
push
stos
push
pop
cwtl
stc
or
std
rclb
insb
imulb
add
test
mov
add
filds
xor
pop
sar
cli
jbe
push
pop
sub
nop
mov
orb
fucomp
es
and
jo
pop
inc
mov
dec
cmp
sub
es
aaa
repz
sub
sar
cmc
xor
insl
or
mov
jge
mov
xchg
fldt
mov
test
das
pop
out
dec
in
lahf
adc
lods
pop
mov
and
mov
cmc
les
ljmp
lea
mov
dec
hlt
sub
aam
add
cwtl
push
sbbl
test
dec
sub
stos
loop
lock
or
rcll
push
push
add
cmp
xor
les
inc
cmpsl
pusha
mov
movsb
jb
lcall
jle
mov
push
insl
push
mov
jg
call
jle
addb
inc
mov
dec
call
es
cmp
mov
xor
push
jo
dec
add
mov
aaa
filds
sub
test
mov
outsb
xchg
mov
adc
xchg
mov
mov
hlt
push
loopne
not
mov
shlb
movsl
imul
jle
adc
pop
xchg
mov
adc
mov
mov
push
mov
mov
cmpsl
std
push
data16
mov
xor
in
test
fstpt
inc
data16
clc
sahf
xchg
inc
lock
push
push
ret
push
mov
inc
adc
test
mov
aaa
mov
ds
out
mov
es
adc
lods
mov
mov
jp
inc
mov
int
shl
mov
sti
sub
adc
and
xchg
or
push
daa
push
cmpl
loope
push
outsl
adc
cmp
sahf
xor
sti
pusha
mov
shlb
hlt
lock
adc
test
arpl
bound
jle
lods
out
fsubrp
jle
ret
dec
loop
imul
mov
push
cwtl
fadd
movsl
test
or
jae
rcr
and
pop
sbb
leave
sub
sbb
xor
in
sub
jnp
mov
and
imul
pop
cmp
in
test
pushf
insl
mov
icebp
mov
fstl
shlb
sbb
cwtl
clc
loop
dec
jg
jns
es
mov
arpl
aad
test
jmp
push
lea
lahf
dec
inc
xlat
dec
push
movsb
repz
decb
xchg
out
xor
aaa
js
mov
cmpsl
xor
push
lcall
out
popa
sbb
push
loop
lods
dec
push
out
push
push
push
popl
mov
add
or
sub
push
dec
mov
lret
sarb
cmpl
and
cmp
daa
inc
bound
mov
sbb
nop
pop
dec
call
pushf
mov
jl
test
cmp
cmp
dec
jns
enter
sub
sub
fcmovnu
out
jnp
int3
xor
adc
dec
xor
mov
push
in
push
push
mov
or
iret
sbbl
mov
adc
pop
ffree
mov
stos
sub
and
mov
ljmp
enter
cld
pop
rorl
dec
fmuls
cmp
cmp
in
int3
ljmp
hlt
jne
adc
cltd
or
sbb
adc
popf
inc
nopl
xchg
mov
pop
cmp
add
movsl
cmp
adc
push
mov
mov
fnsave
out
cmc
cmc
dec
in
stos
ljmp
icebp
push
mov
repnz
add
mov
push
push
sbb
sbb
cmp
bound
or
inc
pop
sub
cmc
popa
push
xchg
enter
pushl
fs
in
ss
cs
mov
jecxz
jno
lock
cmp
jmp
sub
inc
arpl
js
shll
lds
movsb
imul
add
mov
mov
push
cli
xchg
cmp
inc
js
jmp
sub
int3
arpl
jb
xor
out
xchg
daa
dec
in
fdivs
mov
push
shrb
rcrb
int3
mov
inc
xor
sub
sub
mov
je
shr
mov
insl
stc
sbb
jno
pop
in
popf
cmp
ss
pop
push
jbe
dec
sahf
daa
std
jns
cld
xor
mov
idiv
mov
fcomps
cli
add
stos
fs
insl
fs
fimuls
pusha
sahf
insb
lcall
jmp
cmp
repnz
in
cmp
test
mov
call
jmp
dec
push
ror
and
xchg
outsl
sti
mov
adc
jmp
mov
mov
sub
push
cmp
xchg
xlat
aas
ljmp
rol
enter
cltd
add
es
popf
inc
out
push
xchg
jge
sub
sub
inc
or
cli
mov
test
push
test
inc
in
hlt
inc
daa
pop
and
inc
in
xor
lahf
xchg
les
cltd
xchg
rol
jg
movsl
push
dec
enter
nop
aam
cmp
bound
fsts
outsl
movsb
mov
xchg
shll
or
cmp
and
leave
ret
jg
inc
icebp
sbb
cmp
adc
mov
xor
and
mov
fldt
adc
and
aaa
outsl
aam
in
lret
xor
mov
pusha
testb
mov
mov
insl
inc
hlt
push
jge
mov
ja
cmp
popf
mov
lret
sub
sbb
push
sahf
xor
sub
call
gs
mov
into
jb
faddl
pop
rorl
aas
out
std
cmp
lods
ret
dec
shrl
stos
or
das
stc
lret
js
and
outsb
arpl
inc
xchg
fs
add
pop
jae
adc
cmpsb
inc
shlb
fnsave
cmpsb
pop
mov
rorb
adc
xchg
stos
or
xchg
rorb
mov
fdivs
popf
add
dec
or
mov
insl
scas
pop
jmp
decb
jae
push
adc
dec
sub
fldt
jl
mov
inc
push
jae
mov
cltd
lods
mov
mov
je
add
fidivrl
fstl
and
push
mov
in
subb
push
leave
dec
and
inc
or
call
pop
nop
repz
stc
mov
fcmovne
dec
pop
mov
popf
into
mov
push
sbb
jge
jmp
and
jmp
pushf
push
mov
mov
bound
ret
in
movsb
into
inc
lahf
xchg
push
pop
sbb
and
dec
adc
pop
sub
adc
adc
and
bound
xchg
stc
mov
cs
enter
outsl
xchg
dec
mov
or
jb
adc
pushf
and
scas
add
enter
and
cmp
andb
mov
mov
insb
mov
push
loope
push
push
inc
sub
aas
inc
cmp
leave
xor
or
int3
das
lcall
inc
mov
mov
popa
mov
pop
orl
shlb
pop
int
cmp
sti
cmp
lahf
inc
je
in
dec
les
bound
ds
inc
stos
loop
fs
test
jge
in
mov
sbb
pop
test
rcll
jne
testl
icebp
jl
mov
xor
pop
or
orb
mov
cmc
jo
lea
push
add
sub
punpcklbw
loop
enter
sarl
test
jo
sti
xchg
out
fs
jle
pop
nop
mov
ret
stc
fcoml
fdivs
lahf
pop
dec
adc
cmp
push
sbb
sub
inc
adc
dec
pop
mov
adc
mov
aaa
jno
adc
lock
dec
test
pop
jae
xor
ds
addr16
mov
push
in
push
and
scas
mov
fcmovne
stos
insb
and
lods
sub
push
cmp
sbb
movsl
clc
jo
or
int3
subl
xchg
or
std
inc
or
std
jmp
push
jle
sar
ja
movsb
arpl
cmp
nop
bound
lock
jb
xor
mov
or
sbb
lea
dec
imul
test
dec
fwait
xchg
stos
xchg
adcb
or
add
mov
es
outsl
sbb
pop
inc
fildl
loope
pop
leave
sti
nop
js
push
outsb
push
and
aam
xchg
or
out
xchg
ja
jl
mov
das
bound
add
push
mov
lahf
popf
and
addr16
push
mov
inc
xor
push
leave
loope
leave
xor
pop
cmpsl
lock
xchg
dec
and
pop
rolb
add
insb
out
adc
dec
jl
ret
dec
push
cmc
lods
scas
jbe
xchg
mov
cs
push
ljmp
movsb
cld
ret
inc
ljmp
xchg
and
push
sub
clc
nop
orl
int
mov
pop
stos
ret
push
pop
repnz
loop
pop
testb
out
out
loop
and
dec
mov
out
loopne
push
mov
jne
mov
cwtl
xchg
aaa
dec
jge
jecxz
popf
adc
loope
dec
cmp
pop
push
das
dec
xchg
jne
lcall
push
sbb
jae
cmp
push
fwait
jl
mov
shlb
ficompl
clc
sbb
enter
aas
sbb
cltd
enter
sub
lret
jbe
pop
and
xchg
xor
mov
fisubrs
mov
cmp
and
adc
lds
xchg
jns
cmc
xchg
out
js
pop
int3
movl
cmp
and
cmp
xchg
push
sahf
arpl
cmp
or
xor
stos
inc
nop
shlb
push
adc
stc
push
ja
notb
add
cli
enter
dec
mov
insb
sub
adc
cmpsl
sar
mov
add
jle
adc
leave
xor
cwtl
fadds
bound
cwtl
icebp
dec
jp
xchg
iret
inc
push
xor
jp
xor
loopne
pop
xchg
pop
sub
mov
inc
adc
ljmp
pushf
rclb
and
adc
cmp
imul
data16
fistpll
sub
data16
jae
and
jmp
push
xor
pop
sub
cmp
into
add
aad
shlb
jne
dec
or
shlb
fwait
sub
and
dec
sub
and
inc
jo
loop
sbb
pop
and
cmp
xchg
jge
mov
mov
je
notb
rcrb
pushf
stos
or
lret
inc
add
sti
shrb
fldl
or
data16
pop
push
and
pop
sbb
mov
out
mov
jb
subl
mov
aaa
mov
push
ljmp
aad
xchg
mov
mov
adc
xlat
inc
push
xchg
dec
cmp
movsl
mov
addl
enter
dec
gs
push
jp
dec
lcall
daa
or
pop
mov
ret
jmp
mov
mov
push
pmaxsw
rcl
xchg
fwait
ljmp
int
xor
mov
pop
das
pop
out
scas
dec
jne
call
jae
cmpl
hlt
fwait
push
fnstsw
out
xchg
sahf
fidivrl
or
in
lahf
or
int
scas
sub
addr16
es
lahf
orl
inc
cmpsl
loopne
ret
or
lret
inc
mov
lock
jmp
pop
jmp
mov
xchg
xchg
lds
incb
loopne
clc
or
pushf
stos
jnp
xchg
sti
add
clc
pop
jmp
icebp
xchg
xor
pop
mov
cmp
or
lret
leave
and
movsb
jbe
fs
push
jnp
mov
or
jge
lahf
fimull
mov
dec
or
adc
pop
xchg
cmp
mov
cmp
test
sbb
mov
adc
orl
adc
sarl
aaa
cmpsb
inc
mov
jb
jno
out
jecxz
xchg
xchg
subl
xchg
jae
add
pop
int
shl
insb
movsb
fists
push
int
ficompl
mov
lods
cld
xchg
and
cmpsl
dec
push
xchg
mov
inc
dec
add
inc
pmaxub
lret
cmp
or
stos
mov
into
insl
mov
mov
sub
push
aaa
mov
in
ret
and
ja
les
lcall
ja
jnp
cmp
fstpl
fidivrl
adc
or
jge
ret
leave
mov
sti
aam
sbb
dec
ret
fisubl
xchg
or
xor
popf
cmpsl
xor
push
xor
and
iret
div
fcomip
mov
iret
movsb
pop
add
leave
pop
fiaddl
cmp
popa
ds
xor
jmp
insb
leave
push
mov
jne
mov
inc
pop
pop
leave
leave
mov
leave
pop
das
fcompl
mov
mov
dec
jno
movsb
mov
xchg
inc
push
movsb
fidivrl
mov
pop
dec
xchg
sub
shll
mov
imul
jmp
or
shr
or
sbb
stos
je
jge
lahf
ss
in
imulb
push
and
lcall
sbb
test
add
nop
cs
add
call
mov
cmc
xor
mov
cmp
and
lock
xchg
xor
add
jmp
add
mov
jae
iret
rolb
adcl
xlat
in
aas
pop
mov
cltd
popf
fstpt
outsl
push
cmpsb
and
repz
jnp
pushf
repz
ficoml
aam
bound
int
outsl
ret
loopne
cmp
jae
nop
xor
mov
std
push
dec
xchg
sbb
add
cld
scas
lock
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
orl
sub
sbbl
push
push
push
andl
push
orl
push
orl
call
subl
mov
lea
push
subl
push
movl
call
cmp
je
xorl
xor
jmp
mov
xorl
push
lea
push
push
push
subl
push
adcl
call
imul
cmp
movl
jne
orl
lea
andl
push
addl
push
andl
call
cmp
jne
addl
movl
or
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
addl
movl
mov
or
lea
mov
xor
lea
sbb
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
xor
add
dec
mov
jmp
mov
mov
mov
mov
mov
sbb
xor
adcl
mov
addl
add
notl
mov
movl
mov
cmp
movl
jne
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
adcl
xor
subl
add
addl
mov
mov
xor
notl
add
sbbl
mov
mov
sbbl
xor
subl
add
mov
andl
xor
xor
inc
mov
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
mov
addl
mov
mov
mov
mov
addl
mov
orl
mov
mov
decl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
sbb
mov
xor
xorl
add
jmp
lea
subl
push
addl
push
addl
call
movl
cmp
jne
push
lea
addl
push
adcl
push
push
orl
push
call
imul
movl
cmp
movl
jne
sbbl
lea
push
push
sbbl
call
movl
cmp
jne
mov
xor
mov
sbbl
xor
sbbl
lea
incl
push
add
mov
xor
lea
xorl
push
movl
mov
xorl
pushl
adcl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
xor
and
lea
mov
neg
mov
orl
xor
orl
xor
xorl
add
mov
addl
xor
movl
lea
movl
mov
cmp
jbe
xor
or
or
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
call
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
movzbl
adc
mov
subl
sub
andl
xor
mov
lea
mov
xorl
lea
subl
mov
lea
subl
push
addl
push
call
movl
cmp
movl
jne
push
lea
xorl
push
push
adcl
push
push
call
imul
cmp
jne
lea
push
push
subl
call
movl
cmp
movl
jne
lea
addl
push
negl
push
addl
call
movl
cmp
movl
jne
xorl
push
orl
lea
andl
push
subl
push
adcl
push
xorl
push
orl
call
imul
movl
cmp
jne
orl
lea
push
subl
push
notl
call
movl
cmp
movl
jne
lea
push
subl
push
subl
call
movl
cmp
jne
addl
push
lea
push
sbbl
push
push
push
call
subl
imul
movl
cmp
jne
addl
lea
orl
push
push
andl
call
movl
cmp
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
imul
movl
cmp
movl
jne
addl
lea
orl
push
andl
push
andl
call
cmp
jne
orl
lea
subl
push
xorl
push
addl
call
movl
cmp
movl
jne
adcl
push
xorl
lea
xorl
push
adcl
push
push
sbbl
push
adcl
call
imul
cmp
jne
movl
lea
addl
push
notl
push
call
movl
cmp
jne
lea
xorl
push
push
addl
call
movl
cmp
movl
jne
push
lea
adcl
push
xorl
push
adcl
push
xorl
push
call
adcl
imul
movl
cmp
jne
lea
xorl
push
push
orl
call
movl
cmp
jne
addl
lea
movl
push
push
adcl
call
movl
cmp
jne
andl
push
lea
push
push
subl
push
sbbl
push
call
xorl
imul
movl
cmp
movl
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
sub
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
push
movl
cmpl
je
cmpl
ja
jmp
push
pushl
call
mov
dec
mov
jmp
mov
xor
mov
push
mov
add
cmp
movl
je
movzwl
adc
mov
mov
incl
xor
andl
xor
add
addl
add
movl
adc
orl
xor
adcl
mov
movl
cmpl
je
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
jmp
sbb
cmp
xchg
xchg
dec
push
iret
lret
loop
outsl
mov
addl
addl
subl
xchg
test
call
cmp
cmp
inc
addl
jns
cmp
jecxz
mov
cli
outsb
fiaddl
jo
or
repnz
pusha
cwtl
movb
dec
into
mov
jge
mov
mov
mov
mov
aaa
mov
fdivs
cmp
and
mov
mov
xlat
or
pop
pop
jo
rolb
ret
outsb
adc
adc
or
lods
add
lea
outsb
subps
sub
rolb
imul
push
mov
xchg
fs
jnp
xor
outsl
sete
sbb
hlt
cmp
push
fisubl
fcoms
movsl
cmp
sbb
leave
das
mov
lock
pop
aam
or
push
inc
sbb
dec
push
stos
rcl
test
pop
or
ja
inc
cs
sbb
xchg
adc
fwait
aas
mov
xor
bound
ja
add
mov
loope
dec
rolb
rorb
pop
stc
jge
adc
rep
and
addl
in
mov
nop
mov
fdivrs
sub
pop
jns
fldcw
jbe
mov
push
aam
mov
cli
ds
add
mull
sub
mov
mov
mov
mov
popf
adc
jne,pn
or
push
xchg
mov
sti
stos
pop
fldt
popa
push
mov
lods
ret
shlb
jge
mov
cmpsb
add
out
loope
push
mov
adc
lcall
sbb
cmpsb
jno
or
xor
cltd
inc
ror
jmp
outsb
inc
daa
inc
xor
inc
cwtl
enter
psllw
int
mov
stos
outsl
adcl
dec
xor
push
and
xlat
push
xor
inc
notl
and
sub
sub
mov
adcl
lods
fwait
pop
repz
into
jb
add
iret
test
aas
lahf
or
in
sbb
jne
loopne
loope
call
dec
xchg
ljmp
mov
inc
fwait
or
dec
cld
popa
das
movsb
inc
pop
sbb
daa
dec
inc
mov
xor
mov
inc
jno
daa
stc
pop
inc
inc
loop
out
mov
or
cmc
xchg
arpl
add
dec
pop
mov
inc
data16
hlt
xor
add
xor
mov
insb
scas
jno
push
jp
adc
cmp
jmp
scas
cmc
cmp
mov
push
cmp
cmp
cs
std
cli
add
dec
or
cmpsb
push
mov
fimull
xor
in
inc
sub
push
scas
ja
and
dec
js
jecxz
hlt
inc
fidivs
xlat
ret
or
cwtl
movsb
imul
pushf
adc
test
jo
add
and
mov
or
cmp
cmp
or
aas
lods
pop
mov
and
cwtl
mov
mov
aaa
dec
cmc
enter
sub
fwait
or
xor
pop
pop
push
out
les
xor
xor
mov
repz
into
mov
int3
call
jno
cmpsl
pop
sub
into
sahf
test
fcoms
clc
jge
jecxz
insb
pop
mov
test
sarb
sbb
adc
hlt
xchg
mov
shr
ljmp
cmpsl
inc
inc
mov
aad
dec
mov
jl
outsb
xor
pop
push
sbb
push
pop
jmp
push
adc
mov
orl
imul
movsb
loope
sbb
test
ljmp
mov
lods
sbb
call
out
inc
clc
mov
lret
cltd
fiadds
hlt
mov
add
push
jl
leave
cmpsl
dec
cmp
jecxz
push
xor
pop
pop
outsl
push
lret
push
sahf
xor
or
out
in
inc
and
aam
sub
cmp
sub
scas
outsb
mov
inc
jle
clc
mov
jb
jmp
or
dec
in
fistpl
push
sar
xchg
inc
sbb
in
stc
leave
scas
aaa
ds
and
mov
mov
or
push
inc
jo
scas
mov
clc
icebp
shl
and
in
inc
xor
xor
fstpl
lds
leave
sbb
ja
in
and
cs
loopne
cmp
rorb
jb
mul
sbb
jmp
xbegin
pop
pop
cltd
mov
mov
dec
cwtl
stos
rorl
pop
lret
daa
ljmp
je
sub
icebp
dec
stos
call
push
xchg
adc
or
inc
outsb
call
clc
or
popf
loop
push
adc
sub
mov
stos
xlat
mov
and
push
mov
cli
dec
call
roll
jbe
jp
ss
outsl
call
mov
enter
mov
add
and
out
xchg
xor
imull
ficompl
mov
inc
and
clc
push
cmp
xlat
lds
stos
cmp
sbb
sub
jae
mov
insl
push
roll
mov
test
fldl2e
mov
pop
loopne
push
xor
subb
lret
mov
aad
xlat
inc
scas
nop
cmc
lcall
iret
xchg
mov
call
adc
add
or
sbb
and
dec
jp
sbbl
ret
lea
xor
nopl
pop
mov
xor
popa
mov
mov
pop
sbb
lret
dec
ljmp
hlt
jmp
cltd
mov
in
push
pusha
sbb
into
adc
mov
pop
imul
xchg
add
push
add
adc
pop
add
inc
notb
jne
insb
or
dec
mov
pop
push
stc
or
sub
out
cs
icebp
jecxz
dec
cli
sub
xchg
enter
lods
sub
arpl
mov
fwait
gs
mov
sub
call
mov
and
sub
into
pop
and
stos
jae
jb
divl
cmp
mov
leave
inc
xor
push
fwait
test
jmp
and
lret
mul
sub
shlb
xor
loope
xor
mov
push
sub
lahf
sbb
and
mov
lahf
out
dec
xchg
mov
mov
aad
xchg
into
xchg
adc
pop
lods
fildl
jge
hlt
or
mov
dec
jmp
and
pusha
loope
in
ljmp
adc
popa
adc
imul
sub
in
xchg
loope
pop
pop
pop
xchg
cmp
inc
rcll
arpl
lds
shl
imul
xchg
pop
lret
mov
call
js
js
cli
es
fnstcw
adc
sarb
mov
xchg
fs
out
in
cmp
mov
mov
cmc
mov
movsl
inc
xchg
mov
dec
in
xchg
push
push
icebp
call
mov
xchg
mov
rcl
jb
jg
rcrl
pop
mov
popa
sub
dec
and
je
scas
fs
xchg
pop
into
movsb
and
in
and
not
ds
push
pop
shl
enter
sbb
and
xchg
mov
stc
in
add
and
inc
jle
cmp
icebp
mov
xor
lods
ret
movlps
jl
adc
mov
aaa
push
js
stos
push
les
jg
lcall
scas
xchg
xor
cmp
adc
ja
fwait
pushf
xchg
outsb
cmp
and
scas
ljmp
cmpsb
pop
mov
add
scas
icebp
push
xor
arpl
xlat
outsb
sti
movsl
inc
mov
mov
and
or
outsl
lret
js
sbb
testb
xchg
push
mov
push
fcmovne
xor
xchg
mov
adc
dec
leave
mov
add
mov
mov
dec
mov
mov
mov
xorb
scas
lret
jnp
mov
push
inc
iret
andl
cmp
dec
stos
and
nop
dec
xor
mov
pushl
flds
ja
adc
and
ds
into
sub
repnz
xchg
int
shlb
cmc
std
xchg
shll
mov
stos
push
ret
sarl
mov
out
daa
cs
xor
les
dec
push
push
jns
jg
ficoms
shrl
mov
jg
sbb
dec
pusha
xchg
test
mov
icebp
inc
jo
push
or
imul
std
pushl
adc
test
pop
imul
mov
mov
xchg
lds
jmp
jl
inc
cmp
test
call
mov
inc
sahf
and
cmp
clc
sub
cwtl
jno
push
push
and
sub
in
pop
adc
outsb
cmc
and
orb
jl
mov
lods
fs
stos
and
xchg
ss
out
dec
ret
outsb
add
clc
mov
aas
movsl
aam
nop
movsl
lock
bound
inc
in
cs
lahf
mov
ja
roll
nop
pop
or
je
out
leave
sbb
cld
cmpsb
shll
or
inc
fwait
xorl
sub
jnp
outsb
mov
add
repnz
loope
pop
xchg
mov
xchg
add
cmp
mov
mov
and
scas
fsubs
push
mov
cmp
mov
xchg
rcrl
test
or
jecxz
mov
loopne
outsl
xor
lock
neg
call
aaa
mov
flds
dec
mov
cmp
fcomps
addb
mov
jno
test
mov
ljmp
inc
enter
movsl
cmp
stc
popa
ja
jmp
pop
push
pand
stos
mov
or
lcall
mov
sub
inc
dec
jg
mov
mov
push
mov
add
in
incl
scas
gs
lock
sti
int3
push
push
insl
aad
mov
jl
movsl
scas
pop
sub
push
push
cmc
imul
ret
divl
sbb
popf
push
lret
div
xchg
jnp
mov
mov
ret
and
pusha
insb
rcll
lret
rolb
bound
jne
insb
cmpsl
daa
popf
repnz
inc
movsb
in
cmc
sahf
xor
insl
aaa
cltd
aam
out
inc
js
adc
test
das
inc
sbb
out
push
or
cmp
andl
loope
into
imul
es
sti
add
mov
pop
imul
xor
shl
into
or
mov
mov
notb
pusha
popa
stc
rcll
outsb
popf
bswap
xchg
inc
lods
in
or
pop
outsl
stc
push
call
dec
insb
lret
jne
insb
test
ret
fwait
mov
sbb
or
jbe
jmp
ret
inc
xor
dec
dec
icebp
movsb
in
aam
and
dec
xor
popa
aad
cli
mov
icebp
xorb
fimull
test
mov
add
add
xchg
adc
xor
test
pop
sbb
test
pop
pop
imul
sbb
flds
loope
push
js
leave
inc
sbb
movsb
in
inc
fsubrp
inc
pop
mov
into
cmp
xor
mov
testb
stos
xor
and
or
cmp
push
sbb
push
cmp
dec
mov
loop
rclb
shlb
lret
mov
adc
xor
sbbl
out
addr16
inc
mov
ret
push
ret
addl
das
and
adc
xor
lods
add
mov
or
cmpsb
movsl
rorl
xchg
sub
dec
mov
mov
rcr
dec
test
mov
js
jbe
pop
push
xchg
fidivrl
filds
das
inc
cwtl
mov
cs
insl
inc
adc
mov
push
push
push
lret
pop
gs
or
pop
aad
xor
outsb
inc
mov
repnz
in
call
je
cmp
fbstp
mov
pop
ss
cltd
mov
jmp
push
push
push
pushf
aad
jno
pop
dec
fs
push
sbb
mov
pop
mov
jmp
adc
mov
inc
out
std
lods
scas
insl
enter
scas
push
dec
add
js
push
pop
adc
mov
lods
jg
adc
scas
insl
int
xor
shlb
add
dec
call
dec
movsl
gs
addr16
pminub
xchg
cmpsb
nop
test
cld
icebp
dec
inc
imul
mov
xorb
sub
imul
daa
in
mov
sbb
aas
shlb
cmp
in
dec
and
scas
loope
movsb
sti
and
dec
sbb
enter
cmp
pop
sti
mov
cmp
insl
push
in
sbb
push
imul
sub
popl
stos
aas
cmp
push
outsl
jp
shll
stos
out
arpl
mov
cmp
leave
push
sbb
push
add
outsb
and
xchg
add
out
jo
daa
sbb
push
in
scas
mov
and
add
sbb
repnz
push
cmpsl
inc
jle
inc
lods
add
adc
aaa
sti
cmp
test
jecxz
in
je
push
les
sbb
mov
fbld
ljmp
les
pop
fistpl
test
enter
adc
ret
jne
sbb
in
test
inc
fwait
or
pop
stos
les
ja
clc
jp
imul
xchg
gs
call
daa
ficomps
sahf
jbe
test
inc
xor
out
cmp
jl
sbb
fwait
lcall
xchg
push
shlb
leave
fwait
cmpsb
je
loope
jae
in
int
push
sbb
cmpsl
inc
fcompl
inc
imul
and
aad
sahf
sub
xchg
cmpl
push
imull
and
mov
mov
pop
pop
test
inc
sbb
pop
push
lods
inc
mov
out
ret
push
and
jbe
push
lcall
xchg
or
loop
jl
clc
in
scas
sbbl
mov
mov
dec
insb
push
das
sub
mov
pop
in
scas
and
ret
mov
xor
shll
mov
leave
xor
xor
and
rcr
push
dec
lret
dec
and
testb
xor
test
int
inc
and
pop
out
cmpsb
mov
out
cltd
push
lods
xchg
test
sbb
aas
add
dec
gs
out
mov
mov
cmpl
loopne
cmpsl
push
icebp
sub
cld
fs
dec
mov
jne
out
dec
adc
pop
push
adc
inc
xor
mov
sbb
inc
sub
push
lods
roll
clc
lods
sbb
push
mull
dec
mov
pop
aas
cld
sub
jge
stc
ret
mov
inc
push
mov
xchg
pop
dec
sbb
inc
jmp
sbb
dec
or
and
push
scas
dec
mov
mov
shrb
enter
popl
jmp
loope
in
jg
es
mov
out
and
arpl
add
push
rorl
iret
cwtl
test
out
lcall
sar
lret
xchg
push
pop
imul
sub
inc
xchg
arpl
mov
jae
and
ss
push
cwtl
ret
jb
sbb
or
cmp
push
sub
and
mov
sbb
fcompl
jmp
je
xchg
adc
lock
fmuls
jno
scas
pop
push
push
mov
adc
dec
cmp
inc
push
pop
inc
in
movsl
loope
outsb
inc
sub
clc
enter
test
inc
repnz
sub
fmull
lock
outsb
push
les
mov
fcomp
divl
std
pop
mov
dec
jo
mov
cmc
enter
aaa
or
mov
inc
push
nop
sbb
and
inc
jge
mov
lahf
test
add
pushf
insb
fidivl
ficomps
cs
mov
and
es
ja
shl
movb
add
lock
mov
or
sbb
jb
leave
mov
sbb
rcrl
mov
xor
mov
lds
xor
hlt
pop
jno
and
pop
dec
inc
pop
dec
inc
scas
dec
test
jae
inc
idiv
and
mov
push
test
jbe
cmp
pop
xor
xchg
cmp
sbb
push
jge
fwait
mov
mulb
pop
adcl
mov
and
push
rcrl
inc
fcoml
or
adc
dec
je
cltd
popa
gs
dec
outsb
jge
pop
loopne
outsb
js
lea
loop
dec
cmpsl
pop
addr16
mov
mov
jo
mov
lods
mov
stc
cmpsl
push
sub
scas
mov
sub
ljmp
inc
scas
fistl
repz
jge
daa
lahf
mov
pushf
mov
xor
stos
pop
mov
dec
push
sbb
xchg
push
mov
out
pop
aas
jmp
fmull
loopnew
mov
icebp
adc
add
shl
mov
call
dec
subps
std
scas
les
jecxz
inc
inc
icebp
fnstenv
iret
iret
dec
loopne
adc
fstps
mov
mov
or
dec
std
mov
jae
mov
and
cmp
inc
loop
out
xor
mov
lret
addr16
inc
xchg
lea
mov
xor
mov
sub
mov
jle
cmp
lahf
jg
mov
sahf
xchg
loop
add
or
mov
push
mov
sub
js
fildll
aas
incb
add
lret
orl
dec
dec
mov
jg
insl
adc
sub
xchg
fcoml
push
dec
ds
inc
pop
in
out
dec
fsubrl
out
das
enter
pop
pop
adc
loop
imull
jl
outsb
dec
cltd
sbbl
mov
mov
in
cs
cli
mov
pop
sub
imul
testb
inc
scas
fcomip
xor
lcall
clc
rorb
imul
fadds
jmp
cmc
cs
hlt
imul
cmp
xor
shll
je
iret
les
incl
push
cwtl
into
dec
sbb
cmp
out
mov
cs
imul
subb
fisttpll
mov
aad
out
cli
test
notb
and
lret
sbb
jge
adc
cmp
add
push
fs
dec
into
jno
push
iret
scas
data16
pop
stc
lods
subl
out
enter
adc
and
adc
pop
jecxz
mov
sbb
xchg
adc
out
shr
mov
js
mov
jecxz
sbb
mov
cmc
sbb
dec
pop
loopne
pop
sbb
jae
cltd
fucomip
adc
mov
or
ljmp
mov
cmp
movsb
fnstsw
sbb
subl
movsl
scas
ret
stc
push
cmp
mov
inc
pusha
sbb
push
fldcw
insl
ret
les
lods
dec
rcll
in
imul
fisubl
mov
popf
dec
cmp
or
cmp
fnstsw
stos
dec
cld
dec
lods
cmp
mov
shrb
sbb
xchg
pop
je
mov
int
popf
cmpsl
push
mov
in
push
int
sub
mov
jg
sub
jg
dec
pop
cld
inc
sub
mov
sbb
scas
jo
mov
decl
repz
jns
xchg
icebp
cmpb
fs
pushf
fisttps
fstpt
mov
mov
push
sub
or
jo
mov
sarl
sub
inc
fscale
cli
dec
lock
xor
imul
daa
int
out
fsubp
paddq
jns
cmp
lds
dec
xor
pop
mov
and
push
sbb
adc
sub
sbb
out
out
mov
cltd
pop
push
pop
inc
std
mov
idivl
inc
das
es
lret
add
inc
arpl
xchg
mov
inc
mov
mov
add
xchg
push
daa
sub
mov
out
sbb
mov
sar
xor
mov
outsb
das
cmc
adc
shll
outsl
or
fs
jne
jo
sti
ljmp
pop
push
ljmp
sti
cli
add
fdivs
mov
xchg
mov
js
fwait
int
sti
orb
lods
cmp
es
es
jmp
test
outsb
mov
icebp
and
popf
adc
inc
cmp
getsec
outsl
cmp
int
and
sbb
xchg
push
dec
mov
xor
or
mov
sbb
inc
int
cmpsb
ret
stc
or
mov
mov
inc
pop
jb
xor
pop
test
cmp
sbb
mov
pop
mov
ret
jns
push
and
xor
lret
pushf
cmp
rcr
and
inc
test
outsl
jo
and
scas
frstor
ss
and
push
or
dec
xchg
jb
out
pop
cltd
popf
pop
add
mov
mov
sub
sub
outsl
dec
or
imull
shrb
cmp
push
cmp
cmpsb
sub
pop
push
add
push
push
xorl
das
in
mov
cli
mov
xor
in
dec
cmp
fstps
pop
push
mov
push
ljmp
fsubrl
and
mov
popf
push
mov
xor
insl
icebp
out
orl
cmpb
cmpb
or
dec
mov
inc
addb
sbb
je
pop
popf
or
or
xor
test
mov
adc
rolb
xchg
inc
or
pop
gs
mul
push
int
push
xchg
cmp
jmp
imul
xchg
das
add
shll
jge
push
mov
push
sbb
fdivrs
das
out
out
xor
pusha
xchg
nop
movsb
pop
mov
fisttpll
mov
jbe
add
push
lahf
cmpsl
ss
test
push
sti
int3
or
cld
push
lea
mov
ss
jno
les
xlat
jge
adc
xchg
or
scas
cmp
sar
add
mov
push
int3
out
and
arpl
movsb
lods
pushf
cltd
insl
cmp
and
lods
cmp
xchg
shrb
inc
sbb
arpl
xor
mov
pop
cs
clc
pop
stos
dec
loop
xor
ds
popf
cltd
sbb
cwtl
cmp
ja
mov
xchg
dec
mov
adc
push
andl
imul
inc
jae
loop
add
pop
sub
rorl
fucomip
or
dec
pop
int
out
dec
stc
mov
imul
add
scas
out
push
pop
mov
iret
test
movsb
mov
mov
or
cmpsl
adc
xchg
call
mov
dec
loopne
mov
pusha
popa
addr16
mov
scas
std
pop
flds
and
mov
mov
push
mov
xchg
jle
cmp
ja
dec
sbb
adc
pop
jns
shll
mov
outsb
lods
scas
orl
hlt
xor
sbb
and
mulb
mov
jne
outsb
fldt
sahf
stos
mov
shrl
mov
or
cmp
dec
cmpsb
out
clc
sbb
pop
pop
ret
cmp
push
mov
lret
jecxz
out
xor
fildll
or
inc
insl
cmp
hlt
ret
loopne
pop
mov
dec
fisubrs
push
mov
pop
aad
loop
add
or
dec
imull
sub
xchg
mov
mov
cmp
mov
or
pop
mov
stc
fnsave
daa
mov
jl
stos
cld
xor
orl
inc
fidivl
decl
inc
repz
or
inc
sbb
jbe
or
push
orl
pusha
lahf
fdiv
push
mov
push
xchg
addl
and
mov
xchg
outsl
push
out
loop
and
push
out
and
shrb
fstl
mov
cmovl
mov
lahf
fwait
pop
push
dec
mov
or
sbb
sbb
pop
mov
pop
stos
or
sbb
jns
and
ss
scas
outsb
push
adc
dec
and
sbb
iret
mov
fcomps
and
loop
pop
aas
cmpsb
stos
adc
adc
or
stos
lods
enter
inc
xor
arpl
ljmp
mov
jle
ja
shl
adc
sub
jl
jmp
or
pop
leave
push
xlat
pop
jne
inc
xchg
int
insb
aam
mov
xchg
mov
inc
iret
lods
cmp
push
into
sbb
sub
stc
and
fldenv
push
sub
aas
je
popf
lahf
and
cmp
popf
cmp
aas
dec
cwtl
in
pop
insl
push
movsb
pop
sbb
rol
jne
lods
pop
std
push
enter
gs
xchg
push
mov
mov
dec
mov
dec
pop
into
sarb
mov
clc
stos
jb
xor
fistps
aad
ret
jae
mov
insl
pushf
xchg
test
aam
mov
add
in
jl
lds
cli
repz
pop
int3
repnz
xor
jbe
mov
push
xchg
sarl
inc
or
sbb
mov
loopne
in
mov
enter
xlat
mov
insl
fldenv
push
push
std
mov
add
nop
stc
sbb
iret
adc
dec
jmp
jno
shlb
cmpsb
stos
je
or
and
icebp
rclb
popa
clc
in
xor
arpl
mov
sub
add
jge
lds
ror
sbb
xor
or
gs
hlt
shll
xlat
negb
mov
lcall
ljmp
dec
jbe
xchg
pop
in
jb
mov
push
push
cmpsl
cmp
xchg
insb
addr16
fisttpl
push
mov
and
adc
pop
das
stos
push
dec
add
popf
imul
mov
push
fs
xchg
mov
test
sbb
push
out
mull
lret
inc
jne
sbb
jmp
je
xchg
loopne
rcll
clc
xchg
cmp
lock
or
int
push
mov
pop
push
push
ss
test
lods
ja
jne
adc
shlb
cmp
or
pop
dec
mov
lods
mov
sbb
push
jno
xchg
addr16
pushf
ss
je
ret
mov
rorb
adc
sbb
pop
mov
outsb
test
dec
cmc
adc
pop
cmpsb
push
repz
or
pop
or
xchg
adc
jmp
inc
iret
call
mov
pop
and
jecxz
test
mov
inc
mov
adc
ja
mov
sar
shrb
ljmp
add
ljmp
jno
mov
pop
cmc
push
iret
or
jbe
in
bound
adc
aad
fists
shll
sub
lret
xchg
insb
insl
sub
dec
cmp
pop
in
adc
and
sub
push
push
xchg
scas
mov
js
mov
add
jp
xchg
adc
pop
adc
fucomp
popf
jne
adc
mov
inc
ret
push
filds
mov
cmc
xor
mov
cmp
xchg
dec
inc
cmp
out
popa
inc
out
ds
xor
fcomp
add
push
xchg
xor
repnz
jns
addl
orl
fsts
push
or
mov
inc
mov
dec
js
cmpb
mov
mov
sbbl
mov
jl
enter
int3
and
int3
sub
pop
int
loopne
and
xor
pop
pop
movsb
or
xor
mov
test
xchg
dec
data16
enter
sub
sbb
xor
xor
aas
arpl
insl
mov
pop
shl
push
movsb
testl
dec
adc
sahf
das
cmp
xchg
xor
std
sbb
push
adc
es
jbe
jp
jns
xor
cmp
or
mov
repz
mov
mov
stos
mov
outsl
lds
mov
loopne
or
inc
cmp
push
scas
addb
mov
call
repnz
hlt
in
sahf
fwait
adc
cmpb
add
rorl
xchg
mov
call
dec
repnz
das
fs
repnz
in
lea
pop
inc
in
clc
mov
out
int
inc
int3
push
jl
fldenv
push
lcall
lahf
or
xchg
int
xor
aas
daa
dec
leave
inc
dec
pop
cmpsb
pop
jge
in
sub
jnp
stc
into
mov
fldcw
mov
sub
mov
xor
push
ret
push
outsl
dec
sub
sbb
in
lods
xchg
push
xchg
mov
jl
rolb
dec
pop
fildl
or
sub
push
mov
push
xor
int3
pop
and
insl
adc
repnz
fwait
mov
xor
icebp
mov
popf
enter
push
inc
in
fldt
mov
xchg
jb
and
aas
sbb
sbb
mov
xchg
cmc
adc
cmp
cld
fwait
lret
pop
rcl
xor
aad
mov
insb
pop
out
es
leave
cmp
insb
pop
mov
sbb
ljmp
mov
daa
adc
mov
and
ljmp
add
mov
jle
sub
or
and
ds
mov
mov
push
sbb
lcall
mov
nop
stos
adc
xchg
inc
jle
sub
into
mov
jae
dec
shlb
mov
repz
fs
lods
or
xchg
sub
mov
xor
mov
adc
or
andl
push
jl
mov
inc
mov
xor
les
hlt
jecxz
dec
sahf
dec
in
mov
lret
gs
rorb
mov
or
sbb
sti
sub
sbb
call
add
adc
mov
mov
repz
cwtl
mov
add
xchg
xchg
dec
out
icebp
xor
daa
ret
mov
sub
lcall
fadd
js
jb
jmp
in
sub
cmp
xchg
fstps
daa
in
imul
pusha
aaa
je
rcl
cmp
testb
mov
ds
xchg
and
mov
sbb
inc
into
inc
loopne
xor
movsl
fwait
cwtl
mov
mov
stos
test
shr
xor
cwtl
push
repz
cmpsl
xor
xchg
loopne
jo
dec
adc
lds
mov
xchg
add
mov
cmp
test
mov
testl
outsb
outsl
fucom
subl
mov
lahf
dec
mov
data16
fisttps
std
add
cld
scas
aas
jne
pop
in
gs
xor
or
pop
or
cmp
pop
add
fisubl
cmpsb
clc
in
mov
fs
xor
pushf
sbbl
inc
jnp
jl
outsb
xor
outsl
mov
jns
je
adc
popf
sub
call
push
or
gs
push
pop
shlb
adc
mov
sub
cltd
mov
repz
js
ljmp
xor
jb
push
push
loopne
nop
push
dec
inc
into
movsb
mov
jns
jb
fidivs
or
pop
adc
lret
int
fadd
xor
xchg
mov
pop
dec
xchg
mov
pop
rol
dec
push
pusha
ficompl
cmp
jl
jo
pop
mov
mov
push
fstpl
out
fisttps
or
sub
jmp
ret
pop
jmp
mov
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
movsbl
or
mov
addl
sub
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
push
mov
mov
mov
sub
sub
mov
andl
movl
sub
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
call
jmp
mov
andl
mov
addl
mov
adc
mov
mov
and
xor
addl
xor
mov
mov
adc
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
push
test
add
add
add
add
add
add
add
push
cmp
add
add
add
inc
push
stos
lock
je
loopne
dec
scas
mov
hlt
add
add
inc
cmp
outsb
outsl
ja
and
pop
inc
imul
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
jl
lods
outsl
scas
hlt
add
testl
jbe
xchg
mov
cmpsl
loopne
pop
push
pop
notl
pushf
or
pushf
or
mov
lcall
xchg
pushf
sub
popa
mov
stos
mov
mov
jbe
xchg
mov
pop
pop
cmpsl
jae
pop
clc
push
stc
mov
xchg
cmpsl
test
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
