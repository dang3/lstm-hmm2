push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
jmp
mov
cmp
ss
dec
clc
out
fucomi
bound
fstpl
bound
sub
pop
add
pop
jne
lea
jb
jno
into
push
hlt
and
xchg
fbstp
icebp
aaa
movsb
add
mov
in
pop
cmp
pushf
mov
addl
scas
sahf
test
js
iret
mov
test
xlat
rcrb
aam
dec
std
mov
in
fbstp
push
pusha
stc
mov
cmp
cmpsb
loope
ret
push
sub
jmp
pop
or
inc
insb
stos
cltd
aad
dec
pop
xor
test
mov
rcrb
out
pop
idiv
xor
lods
inc
xor
cmc
jne
push
push
xchg
xor
fsts
mov
mov
outsl
pop
dec
test
push
dec
cmpsb
sbb
scas
jge
jmp
ds
push
jge
mov
cmpsl
adcb
or
int3
inc
mov
out
inc
imul
arpl
out
xchg
dec
idivb
js
rorl
divb
int
pop
das
repnz
dec
jle
xor
lds
fxch
dec
mov
push
push
inc
in
push
sbb
inc
cmp
push
mov
aad
les
lods
adc
leave
cmp
out
sahf
ja
adc
xor
cld
sbb
sbb
jbe
fcompl
adc
add
dec
dec
push
dec
push
jg
adc
cmc
insb
shr
in
rcll
dec
mov
shll
lds
jecxz
and
stc
push
mov
xor
lcall
cmpsb
mov
fisttpll
xor
dec
jl
adc
cmp
push
mov
in
mov
cmpsb
daa
pushf
jge
shrl
arpl
cli
daa
in
lcall
sub
mov
cmp
cmp
jbe
idivl
jns
add
sub
or
xchg
or
lahf
xchg
xchg
outsl
movl
cld
stos
jg
and
ret
pop
sbb
sub
add
lds
movsb
gs
xor
gs
mov
or
icebp
insb
cmpsl
jecxz
push
mov
inc
in
sbb
sbb
mov
jge
pop
mov
lcall
push
add
or
cmp
lcall
movsb
jnp
ret
sub
mov
je
and
mov
mov
daa
pop
cli
imul
push
xor
fs
pop
arpl
jg
xor
in
orl
sub
mov
or
pop
movsl
push
in
imulb
sub
mov
fnstsw
fst
mov
add
ljmp
mov
mov
enter
jp
sbb
rorl
dec
adc
push
das
inc
loope
into
pop
push
mov
mov
pop
mov
xchg
decl
das
xchg
add
lock
push
jns
pop
mov
popa
mov
cwtl
out
inc
push
sub
inc
inc
or
lea
daa
sbb
cmp
xor
andl
xchg
mov
icebp
imul
and
add
jae
xchg
mov
das
shll
test
adc
icebp
and
sub
enter
fs
sahf
outsl
ficoml
cmpsb
jg
out
push
stos
fildl
or
or
and
mov
pushf
outsl
jecxz
or
outsl
lods
stc
stos
pop
push
push
cmp
popf
pusha
push
lea
mov
movsb
push
iret
push
xchg
dec
dec
mov
push
out
ds
outsb
dec
mov
test
or
ss
inc
mov
add
or
or
sub
fucompp
xchg
jns
lds
dec
dec
mov
mov
or
add
pop
adc
roll
leave
xchg
inc
add
ret
add
push
sbb
outsl
push
cld
sti
add
mov
add
int3
adc
lea
mov
jo
stos
jecxz
mov
xor
jmp
mov
lock
pop
cmp
je
push
movsl
sub
bound
lret
inc
xchg
sbb
cmp
ret
push
leave
scas
into
or
gs
cltd
cmp
cmp
dec
push
cld
ja
std
xchg
xchg
inc
out
pop
xor
mov
jge
cmpsl
lahf
adc
aaa
sahf
and
imul
and
aam
pop
add
cmp
aaa
fnsave
dec
jae
xchg
jo
cmpsb
scas
in
jmp
jnp
into
inc
or
je
sub
lret
or
addr16
scas
gs
fistps
push
cld
cmc
shll
lods
push
sti
adcb
shll
sar
dec
ds
daa
repnz
out
nop
add
xchg
inc
rcll
push
mov
jae
push
imul
fwait
xor
mov
adcb
xchg
xchg
mov
test
xchg
dec
enter
mov
dec
dec
mov
adc
push
cmp
sbb
int3
xchg
and
mov
in
fsts
std
push
data16
mov
dec
pop
cwtl
mov
enter
lea
fdivrs
in
stos
or
pop
repnz
mov
mov
push
xchg
cmp
arpl
or
sub
lret
mov
mov
add
scas
jne
mov
xchg
xchg
push
arpl
sub
add
push
xchg
push
data16
insl
mov
lods
xchg
mov
int3
stc
adc
sbb
jne
push
add
ljmp
dec
imul
pop
xor
fstl
add
std
mov
mov
fcomp
and
add
lcall
lret
adc
or
jne
mov
pop
mov
add
add
inc
xchg
rcll
fists
dec
or
sbb
enter
cltd
jmp
cmp
inc
movsb
or
push
xor
mov
xor
sub
shrl
mov
jl
or
das
arpl
or
xor
cltd
mov
scas
adc
sti
cs
out
or
push
leave
hlt
push
push
dec
leave
popf
in
xor
pop
out
mov
scas
insl
push
out
push
repz
jle
cmpsb
jecxz
test
lret
pop
les
pushf
scas
ret
pop
daa
jp
xor
mov
push
cmp
mov
inc
jl
jbe
cmp
or
inc
jmp
inc
outsb
mov
xchg
xor
paddw
dec
sub
push
jb
repz
out
sbb
adc
adc
add
add
mov
fldl
out
dec
test
jg
jb
or
pop
sub
ret
leave
icebp
loop
mov
jmp
stos
pop
add
inc
xchg
or
jle
mov
push
sbb
cmpsl
rolb
outsl
rcr
and
add
cmp
sbb
into
xorb
std
repz
or
mov
jbe
movsb
arpl
data16
adc
cltd
xchg
fwait
mov
push
imul
cs
add
and
sub
int3
adc
test
pop
sbb
bnd
pop
push
sub
inc
inc
cmpl
movsb
inc
push
das
out
adc
pushf
xchg
pop
inc
mov
xor
dec
pop
aam
mov
pop
or
sub
lds
inc
fisttpll
testl
dec
adc
imul
inc
js
inc
jb
dec
sub
std
push
std
xchg
push
jbe
cli
and
cmp
dec
push
aam
jmp
dec
push
add
dec
out
pusha
add
pusha
jmp
mov
xchg
xor
mov
jge
idivl
pop
mov
lea
jo
ljmp
popf
insl
mov
fs
cltd
and
dec
loopne
or
xchg
jns
lea
dec
lea
xor
lods
dec
or
out
in
orb
mov
pop
sti
dec
lock
int3
cmp
ja
cld
vorpd
int
xchg
xlat
sub
mov
mov
jno
adc
or
ja
lcall
adc
xchg
das
inc
push
fdivl
jp
jnp
test
and
xchg
mov
js
in
in
adc
xor
sub
cmc
cmp
ds
cmp
cmp
push
sti
add
xchg
lcall
movsb
cmp
lock
adc
je
mov
add
imul
cmpsl
jbe
cltd
sbb
jb
fstpt
insl
insb
or
add
sbb
xchg
lcall
or
mov
imul
mov
mov
adc
jg
test
cmp
lcall
pop
cmpsl
pop
or
out
imul
xchg
xor
pop
mov
movsl
shlb
shlb
dec
jle
mov
xor
xchg
inc
pop
pop
sbb
lcall
jmp
mov
jle
adc
sahf
stc
pop
pop
and
fucomip
pop
and
int3
enter
push
cmp
mov
shl
repz
push
xor
jle
test
repz
lea
mov
addr16
xchg
clc
mov
mov
pop
test
and
ds
ret
leave
pushf
bound
mov
or
mov
insb
sbb
inc
scas
push
fmuls
sbbl
sub
sub
test
push
sbbl
jmp
and
out
mov
xchg
lods
jbe
cmpxchg
daa
sub
mov
test
cmpsb
dec
xchg
in
cmp
fidivrs
push
mov
test
divb
pop
cli
dec
jle
jl
insb
inc
pop
movsb
and
xor
clc
and
hlt
add
loopne
add
out
jl
test
dec
popf
jne
scas
jo
ds
push
mov
mov
and
push
or
or
or
cli
sbb
cmp
les
push
pop
mov
adc
jns
aam
and
fmuls
orb
inc
or
lods
cmp
push
mov
mov
fdivrl
lret
jnp
jmp
push
inc
test
xlat
dec
sub
imul
dec
imul
mov
xchg
insl
arpl
mov
cmp
jae
ficomps
mov
aad
mov
cmp
add
xchg
jge
stc
std
sbb
call
bound
jge
addr16
inc
mov
icebp
push
mov
sbb
pusha
jnp
lods
rcr
aas
les
cmp
jmp
je
xchg
push
sbb
cld
mov
imull
bound
add
in
fcomps
movl
cmp
mov
adc
dec
imul
pop
insb
sub
xor
mov
mov
addl
pop
aas
testl
movsb
mov
roll
je
fdivs
pop
stos
xchg
push
insl
xchg
sahf
repnz
les
lret
aad
lock
sub
in
stos
jl
das
dec
mov
leave
jge
aas
cmp
add
lcall
cmp
inc
push
stos
jg
bound
push
jmp
loop
sub
mov
aam
push
sbb
call
inc
xchg
xchg
fcoms
or
add
cs
jle
push
mov
out
mov
push
inc
icebp
and
mov
ljmp
inc
adc
fisubs
jns
aaa
sbb
or
and
push
ret
or
add
push
add
out
dec
testb
push
jno
pop
or
mov
inc
in
inc
dec
fdivrs
inc
and
add
pushf
out
cmovnp
daa
imul
pop
sbb
push
xchg
ss
dec
jg
ljmp
out
sbb
mov
sbb
ficomps
outsb
in
sub
jae
push
fidivrs
aad
push
lea
popf
pushf
jb
ljmp
incb
push
jae
pop
lods
cmp
test
jb
or
or
inc
call
lahf
mov
repnz
movsl
lea
lock
pop
ds
xchg
int3
and
pop
movq
pushf
pop
push
push
stos
dec
pusha
sub
into
pop
shlb
pop
add
mov
stos
jns
pop
test
out
addr16
mov
lock
daa
dec
lods
or
dec
std
outsb
loope
arpl
adc
lahf
mov
movsl
or
cwtl
pop
ja
fadds
es
pop
das
jne
ret
nop
aad
es
xchg
test
fs
pop
sbb
cmpsl
arpl
es
add
nop
enter
cmpsb
mov
in
subb
dec
das
mov
fiadds
icebp
push
add
pop
fsubl
hlt
fistpl
out
sub
cmp
jmp
test
test
imul
fisubs
cmp
enter
fdivl
sbb
dec
es
in
add
pop
out
call
adc
nop
add
cltd
inc
je
sub
out
loop
iret
cmp
aam
scas
cmp
in
shll
lret
scas
adc
pop
dec
and
rorl
xor
data16
inc
jns
and
xor
sub
repz
mov
icebp
pop
fdivrs
push
leave
and
adc
cld
jns
dec
outsb
mov
test
testb
inc
jns
gs
cmp
xor
mov
mov
ss
jae
sub
cmp
lods
clc
and
lret
cli
jmp
sbb
dec
sbb
xor
int
cmpsl
test
loop
fdivs
mov
pop
pop
fdiv
inc
pop
jp
inc
shll
aaa
sbb
sub
lock
push
and
addl
cltd
adc
xchg
push
leave
mov
movb
sbb
sub
shrl
sub
ss
fwait
gs
repz
inc
inc
jecxz
dec
jne
sahf
loopne
sub
test
cmp
sub
xor
lds
lcall
dec
jno
scas
or
pusha
xchg
jge
pop
mov
pop
ret
or
or
xlat
lock
decl
je
mov
loope
adc
iret
mov
pop
shll
sti
dec
fdivrp
and
test
mov
data16
cwtl
jl
gs
mov
out
popa
sub
ds
movl
dec
cmc
pop
jecxz
xor
scas
imul
int
sub
cli
rolb
or
jne
xor
mov
and
mov
imul
repnz
ret
pop
movsb
dec
xor
mov
and
lods
lahf
out
pusha
icebp
xchg
cmp
jle
jnp
fs
xor
dec
xchg
bound
mov
and
pusha
lods
dec
shll
scas
adc
pop
cmp
dec
pop
mov
stc
jae
inc
jp
mov
dec
cmpsb
mov
jp
cmpsb
mov
clc
push
sub
cmp
jno
enter
inc
ficomps
push
inc
sbb
popf
int3
cmp
mov
fsubrs
cltd
xor
or
sub
pop
fidivl
js
aad
inc
bound
jne
jge
or
mov
xor
testl
testl
repz
mov
fstp
insb
mov
or
out
dec
or
xchg
mov
jmp
mov
adc
lods
pop
std
add
add
push
fbstp
dec
mov
rcll
sbb
lret
shlb
mov
adc
adc
adc
jns
out
mov
jne
jno
mov
fwait
int
ficoml
pop
push
jmp
test
fdivrp
test
push
jmp
cmp
fstpt
sbb
sbb
pop
popa
dec
insb
inc
or
gs
pop
add
loop
mov
loop
add
ret
pop
outsl
and
dec
xchg
or
jp
add
stos
outsb
stos
por
idiv
dec
and
inc
icebp
mov
push
les
fstps
sbb
arpl
inc
sub
arpl
ds
and
jnp
lret
mov
xchg
mov
int3
fs
fcompl
mov
or
shr
cmpsb
fisttpll
idiv
loopne
lret
xor
xchg
lret
adc
sub
addb
dec
pop
xchg
aad
adc
pushf
xor
xchg
shl
jl
cmpsb
fcomi
into
adc
nop
mov
or
push
dec
pop
bswap
push
pop
push
push
out
pop
lods
imul
jl
xchg
add
xchg
into
xor
cwtl
int
aas
sahf
roll
or
xchg
mov
stos
jmp
jle
out
pop
push
sub
mov
jno
pop
loopne
sub
jnp
push
popf
inc
inc
andb
rol
les
aad
dec
pushf
fdivrp
cmpsb
js
xor
es
or
stos
ror
stc
aad
jecxz
leave
imul
aaa
dec
jg
cmp
push
data16
cmp
xchg
ret
cmpb
inc
lods
mov
mov
sbb
add
gs
daa
lahf
inc
scas
loope
lcall
mov
fwait
mov
adc
jecxz
adc
fisubs
fisubl
jl
cwtl
dec
push
jbe
mov
imull
in
mov
aaa
jae
stos
push
and
test
sahf
icebp
out
adc
daa
add
pop
pop
fisttps
cmp
pop
enter
sub
push
pop
pop
push
scas
dec
dec
pop
cmpsb
adc
jge
imul
aad
mov
mov
popa
out
lock
cltd
dec
sbb
lods
and
pop
sbb
xor
sahf
sub
sbb
dec
int3
call
popf
sub
dec
andb
shlb
out
hlt
das
mov
dec
jnp
jne
inc
sub
inc
mov
in
or
lret
out
leave
inc
adc
jbe
inc
insb
imul
mov
popf
in
xorb
idiv
loop
mov
cmp
jmp
sbb
fstpt
or
mov
fwait
outsl
stos
sahf
jp
dec
cs
pop
pop
xchg
mov
call
mov
fwait
mov
adc
ds
mov
lret
outsb
jae
push
mov
mov
push
xchg
lds
test
pop
mov
cltd
lret
sbb
mov
aad
jb
sahf
lds
cmpsl
test
fs
or
shll
jmp
push
adc
adc
pop
pop
ret
sub
int3
sub
lahf
lret
xchg
mov
movzwl
add
icebp
test
push
cmp
pop
mov
xor
sahf
inc
and
pop
sub
stos
les
lds
imul
lock
lods
push
out
xor
mov
out
push
in
or
sub
dec
outsb
xchg
out
pop
and
fs
ss
into
call
dec
mov
add
add
js
push
and
jae
dec
popf
ret
icebp
cmp
daa
sub
lcall
mov
les
ss
jo
test
mov
pop
mov
fwait
fwait
adc
xchg
scas
lcall
mov
sarb
sbb
push
addr16
push
out
push
mov
cld
and
enter
xlat
test
add
ja
stc
int
xor
repnz
jne
and
mov
scas
xor
fmuls
popa
loop
xor
out
adc
cmpsl
cld
push
test
ret
mov
jp
popa
pop
les
mov
sti
mov
hlt
mov
mov
adc
decb
xchg
sbbb
cmp
add
adc
jb
inc
fwait
mov
dec
and
jg
jle
arpl
mov
popa
cmp
mov
push
lea
inc
fcomip
stos
and
out
loope
stos
cmc
into
aas
mov
add
dec
push
inc
mov
cmc
xchg
in
fdivrs
push
jae
mov
sbb
mov
inc
sbb
pop
mov
pop
fidivl
mov
sbb
pushl
outsb
xchg
xor
fistpl
jns
mov
xchg
add
or
arpl
loop
adc
int
aad
sub
test
and
sti
fs
or
push
or
ret
push
cltd
lods
push
xorb
sbb
popf
lea
enter
ja
lock
push
fcomp
loope
ljmp
or
data16
out
cmp
popf
inc
in
mov
leave
dec
sbb
add
mov
in
out
or
jg
dec
ss
mov
push
andl
lods
shll
mov
adc
mov
ret
jo
sbb
xor
inc
mov
mov
and
xchg
or
outsl
adc
sbb
mov
push
xchg
loop
ds
enter
cld
into
sub
jne
add
sbb
dec
sub
dec
test
in
lahf
xor
mov
sbb
inc
popf
jb
aas
push
repz
jecxz
jmp
bound
xor
rcrb
ret
divl
pushf
lods
pop
mov
daa
inc
jbe
and
je
xor
dec
lods
lret
mov
mov
pop
jne
lahf
inc
xor
test
or
idiv
and
repnz
repz
cmp
in
stc
and
xor
jo
cmp
enter
repnz
push
aaa
movsl
in
pusha
cmpsb
in
lcall
imul
pop
arpl
rorl
lea
ljmp
cmp
jnp
mov
das
fistl
cld
iret
sti
js
out
push
cmp
or
loope
mov
cmp
test
fdivp
adc
ss
pop
push
enter
mov
xchg
ja
cmp
inc
mov
stos
data16
outsb
mov
test
jno
push
shll
or
inc
push
pop
test
pop
and
xchg
movsb
inc
ljmp
add
lcall
and
dec
loop
rclb
pop
sub
sbb
push
inc
and
jge
or
xchg
xchg
mov
push
into
lahf
pop
add
in
movb
mov
inc
mov
mov
rolb
shll
mov
xchg
dec
xor
add
mov
xchg
jns
jb
dec
adc
scas
shl
lret
mov
pop
jle
out
bound
sub
outsb
ljmp
push
push
mov
jae
push
mov
or
ljmp
rorl
and
xor
sbb
mov
cmp
data16
out
cmp
or
pop
imul
xchg
in
fildl
mov
repz
xchg
ds
dec
inc
insb
je
add
or
xor
cmp
xchg
adc
in
sti
adc
xchg
outsl
mov
jp
sarb
mov
push
sbb
inc
stc
push
and
adc
lea
mov
not
and
or
xchg
stc
sarl
std
pop
rcll
mov
nop
adc
fnstsw
lret
bound
mov
je
cmp
add
imul
shl
cs
inc
dec
fisubrl
std
push
lahf
dec
sub
add
arpl
shlb
std
out
pop
and
aad
lahf
lret
pop
scas
cmpsb
cmp
mov
into
pop
cwtl
pop
lods
cwtl
adc
xchg
pop
call
pop
cwtl
clc
hlt
ljmp
adcl
ret
mov
push
dec
adc
pop
cmp
cli
je
in
test
ffree
aas
jb
lret
mov
shrl
xchg
ret
add
loopne
into
test
fistps
in
jae
loop
test
sahf
xor
mov
daa
cmp
mov
ja
push
adc
stos
out
sub
push
rol
lahf
mov
out
add
and
fisubl
mov
push
cld
xchg
das
inc
push
rcll
adc
testb
daa
mov
divl
aad
dec
and
xchg
mov
dec
xor
cmpsb
fcompl
sti
stos
in
into
or
xor
sbb
inc
popf
lret
scas
cmp
hlt
ds
pushf
lcall
cmp
push
mov
int3
insb
mov
vcmppd
jmp
xchg
push
adc
inc
shl
mov
cmp
cld
sub
notb
bound
pusha
test
test
sbb
xor
repnz
or
rol
and
shll
insl
xchg
fsubs
mov
rclb
sub
mov
sbb
push
cmp
out
cmp
jnp
mov
cmpsb
clc
shl
sub
inc
movsl
imul
repnz
imul
jmp
pop
scas
inc
dec
scas
mov
test
pop
imull
aaa
jg
cmp
mov
cld
xor
adc
mov
dec
frndint
add
insb
xchg
sub
mov
aaa
adc
dec
cmp
mov
dec
leave
adc
inc
dec
jp
push
and
xor
push
stos
rcrb
mov
icebp
movl
mov
push
push
xchg
test
das
add
lods
xchg
mov
cmp
cwtl
mov
cmp
or
stc
repz
xchg
mov
out
push
push
push
jbe
jbe
xchg
fnstsw
jle
lcall
mov
sarb
xor
es
mov
mov
add
lds
call
stos
and
push
xchg
stos
lret
test
pop
fwait
adc
sahf
ficoms
mov
test
ja
and
xor
aas
shlb
push
add
jns
stos
lret
arpl
leave
rep
loope
mov
inc
cwtl
lea
fs
mov
pop
loopne
call
fwait
addr16
push
loop
adc
outsb
push
icebp
les
jno
aaa
jns
iret
ss
mov
pop
cwtl
das
sbb
jl
jmp
nop
dec
cmp
mov
hlt
add
fidivs
bound
cmp
push
icebp
or
call
imulb
mov
call
pop
add
bound
imul
push
fdivrl
dec
out
cmp
xor
test
sahf
addl
popf
fstl
adc
jb
sti
adc
inc
imulb
push
dec
bound
mov
xor
pop
adc
ds
push
lods
loop
adc
cmp
or
mov
pop
adc
test
outsl
cs
mov
stos
mov
jbe
push
inc
bound
std
or
fcompl
rcrl
push
xchg
popf
pop
xchg
add
inc
pop
into
outsl
mov
aas
test
add
sub
mov
jle
jge
mov
std
sbb
cmpsl
scas
std
and
push
cmpsb
mov
jns
cmp
les
idivb
scas
inc
mov
arpl
clc
fmull
cld
mov
inc
pushw
or
mov
xchg
push
fwait
pop
mov
jecxz
push
sbb
or
inc
cmp
js
addr16
xchg
imul
and
mov
push
jno
push
xchg
int3
js
or
in
in
cmpsb
jnp
hlt
cmp
and
into
aam
cmp
jb
iret
stos
cltd
xor
out
sbb
ret
shll
push
mov
mov
cmp
push
lret
ret
sub
push
fwait
mov
push
loope
mov
loop
inc
pusha
das
iret
test
enter
xor
lea
inc
mov
sti
push
lods
xchg
push
push
and
clc
jno
mov
push
cltd
mov
mov
clc
sbb
or
jge
dec
xor
cwtl
das
inc
scas
cmpsb
mov
jl
imul
sbb
enter
mov
inc
inc
adc
inc
mov
xchg
mov
testl
cmc
rcr
popa
push
stos
scas
loop
orl
insl
sub
xor
in
dec
out
cs
cli
mov
adc
hlt
mov
fwait
lahf
inc
loope
jle
xor
nop
fnstcw
push
push
ds
mov
mov
sbb
ror
movsb
jnp
jno
fsubs
mov
cmpsb
add
xchg
insl
jmp
or
sti
fbstp
and
push
test
push
test
jle
mov
cmc
push
or
ret
mov
mov
sbb
out
or
shlb
jg
lock
xchg
sub
xchg
clc
pop
dec
lea
repz
hlt
stos
cmp
dec
dec
mov
int3
mov
cmc
inc
cwtl
xchg
leave
sbb
cmc
pusha
or
xor
adc
push
cmp
mov
push
mov
xor
mov
cltd
push
sahf
push
pop
movsl
cmp
insb
pop
je
insb
sarl
mov
sarl
or
pop
lods
inc
lods
popl
lods
aas
mov
jo
push
ret
cmp
repz
popa
out
sbb
pushf
jp
xchg
xchg
in
shl
add
stos
mov
and
adc
int3
pop
pushf
sbb
mov
aam
arpl
mov
mov
xchg
mov
and
gs
mov
inc
xchg
in
or
xchg
std
cmp
ffree
cltd
jns
pop
movups
push
mov
aad
push
xchg
push
and
push
inc
int
xor
mov
adcb
cmp
sbb
aam
mov
add
xchg
mov
or
es
cmpsl
test
jg
cmpsl
inc
popf
pop
stc
rolb
imul
push
pop
lds
xor
insl
ret
fiadds
imul
scas
sbb
js
push
outsb
xchg
adc
or
xor
test
fadd
push
lret
or
pop
mov
push
sti
enter
cwtl
jbe
repz
cmp
subl
in
pop
mov
lock
add
enter
imul
xchg
stos
in
xchg
scas
cmc
into
hlt
inc
mov
xor
sub
adc
iret
push
mov
mov
mov
nop
add
or
subb
mov
hlt
cmc
jmp
and
xchg
sub
cli
lds
pop
xor
pop
sub
shlb
mov
mov
loop
lret
jno
out
imul
adc
in
sarb
push
inc
sbb
aas
inc
pop
call
sub
push
iret
lss
enter
sub
fs
mov
fstp
fdivrl
add
in
out
dec
stos
mov
xchg
rorb
bound
jno
decb
test
arpl
test
xchg
cmp
cwtl
add
fsubrl
in
or
adc
and
scas
add
cwtl
pop
inc
xor
xor
test
or
lret
ret
aam
dec
mov
inc
outsb
popa
xchg
rolb
xchg
cld
les
dec
scas
and
add
daa
jbe
gs
xor
mov
lea
adc
lods
mov
push
cwtl
and
rorb
shlb
ja
mov
ret
cli
mov
push
inc
iret
adc
push
dec
adc
mov
pop
mov
or
shll
test
mov
push
add
in
jl
into
mov
gs
jl
push
mov
fmuls
aad
jnp
mov
inc
mov
jle
loopne
ficoms
adc
push
inc
fcmovnbe
jns
ja
fidivs
mov
add
add
fadds
ret
es
lods
jmp
xchg
or
push
test
fcomps
dec
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
jmp
lods
mov
ja
mov
fs
cmp
movsl
fstpl
fstpl
bound
imul
fwait
dec
ljmp
xor
andb
repz
fs
xor
cld
mov
hlt
sbb
hlt
stos
lea
out
mov
ss
jl
cmpl
or
ljmp
adc
popf
adc
lea
test
or
ficomps
jg
sub
sahf
aad
xchg
mov
xchg
aam
rol
cmpps
movsl
or
push
roll
les
insb
or
pop
adc
movl
bnd
adc
subl
xlat
test
fistpl
lods
xchg
push
imul
push
sbb
pop
add
sbb
cld
or
or
push
subb
es
aad
add
dec
test
adc
pop
fs
daa
notl
xchg
pushf
mov
pop
rolb
test
fs
rorl
aas
mov
pushf
je
jg
lret
repnz
jb
mov
lock
mov
aam
movsl
loopne
bnd
xchg
mov
and
inc
jns
fistps
mov
mov
mov
fistps
lret
loopne
lcall
xor
leave
jae
xchg
in
mov
mov
shll
jmp
cmp
scas
mov
adc
mov
jecxz
or
dec
or
cmp
in
idivb
and
cmpsl
mov
and
mov
aad
xchg
inc
outsb
push
cltd
rclb
xchg
push
jmp
not
loopne
xor
and
and
and
aam
fmull
dec
lcall
pop
test
dec
add
lods
les
ja
inc
call
fwait
pop
jae
jae
addl
sbb
xchg
sub
xchg
push
jle
mov
sub
fwait
sub
add
push
push
test
dec
stos
mov
or
outsb
push
add
cli
les
lret
add
pop
mov
jno
and
push
cwtl
push
repnz
xchg
shrl
inc
cmc
inc
push
push
adc
mov
push
fadds
das
adc
hlt
int3
cltd
push
dec
or
jb
cmpsb
outsb
sti
scas
pop
xor
pop
sbb
mov
jl
lock
mov
stos
xchg
mov
pusha
cltd
xchg
pop
stos
jnp
loope
push
mov
ds
into
fnstsw
push
fstpt
sub
dec
psllq
mov
pop
mov
add
inc
shlb
adc
jo
sbb
and
jge
loop
pop
or
and
pop
mov
sbb
push
jl
lods
or
dec
cwtl
fdivrs
mov
addb
insb
std
jp
outsl
out
cmp
out
ds
mov
sbb
ret
sbb
mov
ljmp
mov
rcrl
popf
fidivrs
cli
test
push
arpl
and
sbb
pop
shll
ja
pop
lret
dec
xorl
adc
vpaddsw
aam
xchg
test
movl
addr16
sbb
xor
jmp
fwait
and
fs
xor
sub
mov
and
js
fwait
pop
xchg
pop
and
stc
sbb
movsl
mov
aas
mov
jle
jge
out
jle
sti
bound
mov
divb
shlb
jp
jl
pusha
inc
clc
jne
jbe
jb
or
aas
jno
cmp
push
pop
lock
add
add
mov
mov
shlb
mov
or
xchg
aas
cmp
mov
ja
or
mov
imulb
popf
addl
sub
bound
fmul
test
arpl
push
jbe
adc
loop
arpl
sub
std
adc
stos
daa
pop
out
lock
out
mov
and
adc
or
lock
and
pop
fs
leave
ds
in
out
add
in
adcl
sbb
lahf
add
sbb
out
repz
adc
mov
daa
call
in
push
xorl
aam
cs
aas
sbb
cmc
fsubs
dec
ret
outsl
mov
arpl
in
dec
add
aad
in
add
out
adc
sahf
mov
jb
lahf
ss
rolb
mov
jns
xor
mov
pop
loope
cmp
mov
xchg
scas
or
outsb
and
push
repnz
repnz
inc
sbb
fwait
jmp
subw
aas
pop
mov
push
test
ljmp
mov
xchg
mov
pushf
loopne
dec
pop
xor
int3
sub
adc
xor
rorl
aad
sub
aam
insl
jp
mov
js
mov
mov
sub
lcall
popa
shll
cs
lret
inc
sub
test
fsubrs
sahf
pop
adc
mov
xor
xor
mov
jp
aaa
insl
in
call
xchg
js
mov
aam
push
add
push
cld
xor
fnstenv
shrl
in
mov
xlat
insb
icebp
and
jbe
pop
test
push
lret
sub
mov
andb
mov
ret
lcall
mov
popf
jmp
cwtl
ss
iret
ret
stos
lods
out
sbb
mov
sub
dec
mov
add
jae
scas
sub
mov
mov
iret
sbbb
fidivrl
and
lods
lret
pop
scas
dec
movsl
mov
and
lea
sbb
shrb
imul
popf
test
mov
mov
out
loop
mov
dec
jl
mov
cmp
enter
mov
dec
cmpsl
add
add
aaa
pop
pushf
push
push
and
dec
adc
push
pop
into
ret
stc
lea
sbb
decb
adc
lods
push
jl
push
jb
imul
data16
incl
jl
rclb
jecxz
clc
es
bound
jge
cwtl
adc
scas
or
jle
xlat
add
dec
cmp
mov
popa
cltd
cltd
pop
repnz
jmp
lret
sub
out
movsb
pop
cli
stos
sbb
cmpsb
lahf
mov
push
add
cmp
fcomp
das
xor
pusha
xorl
cltd
rcrb
jmp
aad
pop
lcall
bound
mov
pop
out
daa
and
frstor
add
pop
push
xchg
dec
push
in
out
jp
or
std
ss
mov
xchg
rcll
mov
mov
cmp
fwait
pop
mov
aad
das
xor
mov
xchg
stc
or
pop
ret
push
push
shlb
xchg
mov
aas
pop
jge
imul
mov
dec
sbb
ss
xchg
cmp
inc
aaa
add
xor
push
dec
cmp
or
mov
es
adc
jg
jmp
lahf
sub
xor
push
add
xchg
movsb
jnp
cmp
jecxz
pop
add
cltd
push
sbb
lret
mov
dec
in
jns
cwtl
loopne
mov
bound
mov
out
mov
incw
mov
jne
frstor
push
aaa
out
xchg
mov
paddusw
out
fnstenv
push
jecxz
stos
shlb
pop
mov
push
jl
or
jnp
stos
mov
xchg
clc
cmpsl
mov
jg
addl
add
mov
sub
shlb
mov
orb
sbbl
xor
or
mov
add
or
lahf
jl
out
jge
stc
push
xchg
mov
sbbb
xor
iret
xchg
lret
xlat
mov
adc
push
pcmpeqb
fstl
or
pop
mov
icebp
mov
aad
daa
inc
cmpsl
adc
lret
and
scas
or
jns
lock
adc
inc
adc
std
mov
leave
inc
lahf
cmp
jmp
jmp
sub
negb
mov
ss
in
add
roll
pop
and
mull
mov
xor
mov
pop
mov
loope
or
and
xchg
xor
pop
sbb
iret
repnz
pop
pushf
xor
into
vpavgb
stos
jne
add
cltd
push
int3
pop
cmpsb
inc
repnz
popf
and
lea
sbb
nop
sbb
mov
movsb
xor
xchg
js
xlat
pusha
in
xchg
or
cmc
jl
enter
mov
xchg
fdivrs
cmp
cmp
out
ret
xor
add
leave
dec
cltd
mov
dec
cmp
lock
push
mov
lods
repnz
stos
hlt
rclb
push
mov
cmp
sub
sarb
push
das
iret
je
aad
or
adc
cld
es
pxor
call
inc
pop
fwait
std
dec
sub
ljmp
int3
adc
mov
pop
xor
mov
lods
jmp
mov
mov
push
pusha
aas
in
jge
jmp
js
pusha
push
bnd
sbb
data16
lds
out
sub
sahf
data16
pop
divl
dec
xchg
faddp
lret
loope
xor
cwtl
pushf
add
in
popf
xor
push
dec
aas
dec
stc
and
dec
cmc
sub
dec
ss
mov
add
outsb
xor
sahf
mov
fistps
into
loope
in
sbb
outsl
jecxz
mov
mov
or
xchg
or
adc
out
xor
sbb
xchg
jle
popa
cmp
jle
pop
in
out
lock
orb
sbb
xchg
cs
push
mov
cmp
mov
xchg
test
mov
mov
mov
int
xchg
ret
stos
dec
int
lret
fnstenv
mov
neg
add
sub
out
int3
mov
test
cmp
ss
fidivrs
xchg
fadd
lds
decl
pusha
sbb
test
fs
add
fnstsw
test
jge
outsb
fsub
mov
arpl
push
sub
mov
jnp
mov
sbbl
xchg
and
and
stos
sub
sar
adc
sub
xchg
sbb
gs
jmp
pop
mov
test
cmp
loopne
pop
mov
aaa
lahf
arpl
push
popf
cmp
imul
div
in
jp
scas
cltd
push
fcompl
pop
pushf
or
mov
out
lret
cmp
add
mov
cmp
fnstenv
pusha
push
mov
mov
test
xchg
sbb
inc
mov
jmp
sbb
mov
and
add
mov
ja
dec
sbb
scas
jns
je
push
cwtl
mov
gs
shr
in
test
aad
pop
inc
add
mov
mull
mov
sub
daa
cld
push
sub
sub
mov
cmpsb
shll
adc
int
push
cmp
leave
sbb
mov
scas
cmp
rclb
pop
mov
push
cmpsb
and
in
repz
cld
inc
and
mov
push
ret
call
jmp
jns
shrb
clc
or
bound
subl
shll
insb
xchg
fsub
je
jb
data16
iret
enter
add
lret
fs
cs
repnz
out
or
jb
push
jmp
ss
negb
int3
arpl
aaa
fiaddl
jle
sahf
lds
daa
cmpsl
outsl
cs
or
dec
push
sbb
test
ret
sbb
jle
into
sti
xchg
and
stos
add
cmp
shlb
pop
and
pop
sar
or
test
push
add
xchg
popf
iret
mov
mov
in
int
lret
clc
xchg
stc
inc
cmpsb
xor
and
enter
aam
ss
pop
pop
jecxz
inc
nop
xchg
pop
xchg
cltd
shrb
xorl
push
jae
aam
pop
es
xor
lods
sub
repnz
or
xlat
mov
data16
mov
jge
fdivs
add
mov
jno
sbb
sti
repnz
mov
je
ret
lret
xor
mov
inc
mov
pop
xor
pop
inc
ljmp
clc
cmp
pop
mov
and
inc
in
sahf
jne
jne
pop
cmp
ficoms
lcall
add
fistpll
cmp
mov
test
cmp
gs
into
outsb
cmp
lret
sarb
inc
mov
jb
adc
popaw
aas
int3
loopne
pop
mov
and
pop
sub
fdivp
or
lds
aam
pop
sub
aam
push
pop
mov
cmc
sbb
jmp
lahf
sahf
inc
shlb
ret
or
ljmp
or
mov
test
pop
add
mov
fwait
dec
mov
subb
cmpsl
es
ss
inc
push
imul
push
jecxz
into
xchg
ljmp
jo
data16
lock
out
test
xor
imull
jge
add
jmp
es
arpl
jo
jmp
jb
sub
mov
add
das
rcll
in
ss
xchg
enter
and
pop
sti
hlt
popf
popa
jo
data16
loope
jbe
mov
sub
push
std
mov
loope
sti
push
or
mov
shrl
fistpl
negb
pushf
lcall
negb
mov
adc
inc
test
inc
jne
pushf
mov
enter
mov
xchg
push
xchg
ret
stos
test
add
add
lcall
insb
sti
fidivrs
xor
in
js
adc
stos
mov
sahf
fbstp
push
jmp
push
pop
mov
imul
sub
adc
jl
dec
and
sub
movsb
ds
dec
mov
sbb
push
lret
and
roll
shlb
sbb
idiv
in
sbb
pavgw
popa
enter
cwtl
rolb
add
out
aas
adc
popa
add
aam
fwait
movsb
xchg
icebp
xchg
in
xchg
mov
mov
gs
push
mov
sbb
shrl
lods
add
push
mov
mov
into
cmp
sbb
lods
push
aad
xchg
enter
push
lcall
add
push
shl
imul
stos
cmp
cld
push
mov
sub
mov
cwtl
mov
in
mov
sub
push
aas
loop,pn
inc
cmp
call
dec
pop
lret
loope
jmp
sbb
jnp
xrelease
and
pusha
sti
push
nop
lea
xchg
call
adc
adc
repz
or
clc
cmp
bswap
adc
ret
ror
pop
push
pop
lock
xor
pop
xor
ds
shlb
inc
xchg
out
sbb
push
mov
ret
iret
imul
or
out
xor
pop
push
fwait
pop
add
int
dec
adc
in
jbe
test
iret
pusha
pop
ret
leave
dec
scas
shrl
lock
mov
loopne
xchg
and
cmp
stos
frstor
sbb
popf
mull
pop
jns,pn
icebp
inc
outsl
repnz
ds
arpl
xor
movsb
aas
rcr
jbe
xchg
and
dec
dec
lods
stos
fsts
jecxz
and
pusha
ljmp
mov
insb
lds
es
gs
jnp
sbb
jmp
negl
test
inc
das
jge
ds
lret
stc
out
or
adc
mov
or
jg
test
push
filds
sub
jg
jb
sahf
xor
lock
outsl
push
loop
adc
sub
mov
sbb
ds
jne
dec
adc
out
outsl
hlt
adc
roll
add
mov
in
pop
lods
cmp
in
popf
pop
xchg
dec
xchg
cmp
sti
flds
pop
sahf
rcll
cmc
xchg
cmp
repz
ficoml
sbb
sub
lea
loope
and
das
dec
popa
xlat
js
xchg
rorl
addb
mov
cmpsl
imul
lds
and
xchg
xchg
mov
jbe,pt
cmp
jae
inc
push
jns
pop
loope
mov
mov
cmc
data16
pop
and
pop
adc
lds
sbb
fstps
push
dec
hlt
cwtl
sbb
mov
push
xchg
call
test
sbb
cmp
and
jo
pop
leave
or
int
push
test
sahf
leave
and
adc
in
gs
dec
sbb
push
pop
insl
stc
sbb
xchg
icebp
dec
mov
js
ret
lret
fsubrs
jbe
mov
cltd
cld
dec
lods
dec
ja
sti
add
cmp
mov
ss
fnstsw
xchg
adcb
xchg
gs
lcall
and
data16
mov
lcall
xor
xor
ljmp
inc
push
adcb
sub
cmc
daa
mov
shr
inc
and
adc
pop
stc
dec
addr16
adc
inc
je
cmp
sub
stc
mov
fisubrl
sbb
lods
das
adc
in
loop
rolb
sti
jecxz
testb
or
outsl
fadd
mov
jp
pop
sub
movsl
xchg
fisubrl
push
dec
in
stos
sub
dec
xor
or
adc
xor
mov
lea
sub
les
dec
movsl
in
xor
and
shl
inc
jbe
fsub
rep
arpl
rcll
mov
sbb
sub
mov
push
push
roll
popa
xchg
cmp
push
lods
iret
popf
cltd
sub
mov
jp
icebp
aad
cmpsb
int3
mov
mov
push
mov
and
push
dec
ss
inc
sahf
lret
adc
adc
xchg
mov
insb
and
ret
lret
mov
stos
les
je
mov
popa
dec
mov
adc
loop
pop
in
xor
gs
lret
rcr
or
mov
and
jnp
mov
lret
sbb
mov
mov
imul
outsl
repnz
mov
mov
lods
bound
testb
rclb
lods
movsb
add
inc
fdivl
rclb
shrl
idivb
mov
js
pop
inc
mov
pop
mov
push
push
pusha
dec
lods
pushf
test
jge
mov
das
sbbl
scas
sbb
or
mov
leave
subl
mov
mov
adc
sub
adc
inc
adc
or
push
cmp
inc
js
lods
adc
lret
push
movsl
enter
ffree
or
cs
jmp
ret
xlat
pop
mov
push
rcrb
loopne
xchg
jbe
movsb
outsb
lock
xor
jl
and
aad
pop
ret
or
pop
sub
add
pop
or
adc
in
movsb
jl
and
lods
xor
xchg
inc
or
jbe
ljmp
mov
repz
xchg
add
xor
sti
jg
fwait
stc
leave
push
sub
xor
xchg
out
dec
aad
pop
and
in
jns
xor
pop
data16
and
xor
aad
pop
sub
decl
dec
ja
sahf
lret
sub
test
cmp
sub
xchg
cs
pushf
fisubrs
pop
fcmovnbe
fdivrl
test
jno
arpl
lods
jb
inc
mov
in
fcomps
loope
aam
test
or
jle
and
test
ffreep
faddl
lock
inc
repz
pop
cmp
push
ret
inc
stc
add
push
mov
jmp
test
aad
or
and
pop
jnp
xor
js
rorl
sbb
int3
fxch
dec
enter
and
sub
fimuls
push
fcmovnb
dec
xor
sbb
lock
add
scas
lahf
or
shll
rcrl
femms
ljmp
dec
pop
lods
in
mov
shl
repz
icebp
call
sbb
popa
leave
xchg
lret
mov
fstpt
mov
push
xlat
lahf
sub
sub
inc
cmp
jmp
pop
inc
je
mov
loopne
inc
cmc
xor
add
test
pusha
cmp
les
mov
rol
aaa
pop
add
cmpb
daa
int3
in
and
loopne
sbb
leave
sub
inc
inc
daa
in
dec
scas
sub
mov
inc
les
inc
arpl
cld
lcall
in
sbb
sbb
inc
es
sub
push
cld
push
push
mov
xor
jno
cltd
xor
pusha
pop
and
ret
bswap
rcrb
push
lret
sbb
rolb
mov
mov
push
or
or
sahf
shrl
int3
jmp
mov
xchg
cmp
hlt
xchg
imul
pop
notl
pop
sahf
ds
xor
add
outsb
cmp
scas
xchg
int3
or
cmp
inc
test
xor
jg
aaa
pop
push
or
pusha
jns
fisttpl
int3
popf
sbb
dec
mov
rcrl
jns
std
pusha
inc
ss
idivl
xorl
sbb
xor
insl
insl
rcrb
mov
movl
rorb
jbe
jns
adc
nop
mov
pop
movsb
mov
sub
pop
pop
mov
pop
sbb
add
into
in
dec
push
and
mov
lcall
dec
jecxz
int
cmp
inc
add
fs
jecxz
and
xor
jge
sub
dec
cmp
cs
mov
jno
mov
nop
shlb
leave
pop
outsb
jbe
pushf
push
push
shr
xchg
fs
xchg
mov
mov
mov
call
neg
add
mov
lock
cmpsb
fldcw
je
addr16
mov
mov
fwait
push
or
add
insb
in
dec
cmc
add
test
test
ret
pop
out
sarb
jg
and
sbb
fnstenv
inc
addr16
and
and
xor
pop
adc
loope
jns
mov
jno
mov
sti
pushf
cmp
orb
aam
cmc
into
movsb
sarb
fistps
mov
xchg
lea
aaa
sbb
aad
mov
add
sbb
ja
mov
mov
ja
mov
popa
jno
xchg
inc
fldl
and
sub
bt
gs
mov
push
pop
xor
and
pop
scas
data16
cmc
dec
inc
jmp
mov
out
and
ds
cmp
sub
adc
jb
clc
mov
lods
push
xchg
mov
adc
push
add
xor
inc
cld
xor
mov
lods
xlat
movsb
pop
xchg
arpl
cli
sub
cwtl
cmp
into
loopne
enter
in
int3
add
lock
int
mov
push
sub
sub
ret
imul
mov
inc
sahf
hlt
xchg
or
outsl
inc
out
mov
aad
sarb
pop
daa
idivb
mov
and
in
ja
pop
mov
std
enter
push
imul
inc
xor
mov
insb
aaa
sbb
push
inc
int
and
xor
sub
push
inc
addr16
mov
and
inc
imul
and
repz
scas
jg
test
pop
dec
and
xchg
lds
in
repnz
push
pop
lea
sub
pop
test
dec
cmp
aam
jne
test
jo
and
and
pop
adc
lret
fs
enter
cmp
fnstsw
pop
mov
rcl
or
pop
movsb
repz
sub
popa
pop
lods
and
rcr
push
jge
inc
jns
xor
xlat
rcrb
stos
mov
jmp
mov
jb
cmp
pusha
push
dec
sti
push
sti
and
add
dec
sbb
push
aas
popa
jle
lock
push
push
and
dec
jae
adc
ja
or
fstps
rcrb
test
into
jbe
sarl
fldt
add
adc
sbb
and
nop
or
xor
out
cltd
push
popf
cltd
mov
lcall
mov
sub
out
loopne
je
mov
int3
cmp
pop
sub
and
push
int3
sub
in
in
cmp
add
shlb
jne
loope
pop
jb
adc
jbe
inc
jge
cld
cmp
rcrb
mov
nop
daa
sbb
push
xchg
cs
jae
int
dec
jo
jle
pusha
in
mov
or
mov
or
and
arpl
push
mov
and
data16
cs
mov
adc
xchg
cltd
ret
xchg
sbb
mov
loope
sub
sbb
jmp
mov
negl
addr16
inc
and
jno
xchg
scas
out
mov
push
loope
push
inc
or
ja
add
addr16
push
add
arpl
or
lock
inc
push
les
arpl
sbb
ss
lods
ss
in
sbb
cmpsb
rcrl
mov
xor
inc
push
call
hlt
xlat
pop
xchg
test
sbb
and
push
adc
mov
loope
adc
add
cltd
repnz
jle
out
cmc
or
imul
call
imul
dec
pop
jb
sub
ss
mov
jne
xchg
sbb
orb
les
cmp
jl
sub
aaa
mov
inc
gs
sbb
pop
mov
adc
push
inc
mov
das
call
aam
jle
cmp
rcl
sahf
mov
loopne
leave
roll
test
adc
in
insb
out
lock
pop
fsub
outsl
mov
fwait
xchg
xchg
fidivrs
scas
adc
mov
mov
das
je
mov
cmp
ret
lret
enter
shr
dec
pop
push
repnz
dec
pop
push
add
out
stc
rcrb
lock
out
lret
jne
inc
sbb
shlb
sub
sbb
and
sub
in
push
or
xor
push
mov
xchg
xchg
fs
inc
les
in
push
pop
push
es
imul
cltd
stc
loopne
xor
pop
pusha
fdivl
outsb
push
test
dec
test
int
test
sbb
mov
imul
call
je
pop
add
imull
in
mov
push
sbb
inc
push
imul
sbb
mov
cmpsl
data16
lea
call
cltd
fbstp
pop
cltd
mov
cli
arpl
jns
mov
jne
pusha
rorl
dec
js
jp
outsb
sub
mov
js
pop
adcb
sbb
jnp
je
sbb
bound
xchg
xchg
ss
and
jmp
jmp
xor
test
jecxz
push
addr16
inc
cmp
and
scas
dec
or
and
adc
fstpt
aaa
scas
loope
aas
fldenv
inc
in
adc
mov
mov
js
xlat
ja
fwait
out
mov
in
cs
and
jb
test
rol
pop
mov
push
lret
and
or
sbb
sub
mov
fisubrl
repz
pop
inc
dec
dec
push
fwait
je
pop
xor
lret
jp
jno
dec
xor
lds
add
lcall
jne
aam
test
dec
popa
pop
dec
cmp
jno
xor
cmp
nop
test
das
out
push
dec
sub
ret
outsb
adc
or
push
mov
push
ror
mov
xchg
mov
jo
mov
cwtl
aaa
pop
sbb
cmpsl
das
notb
leave
idivl
push
into
xor
mov
movsl
adc
mov
loopne
rolb
jmp
ss
dec
pop
mov
pop
mov
push
shl
cmpsl
dec
rcll
lds
pop
mov
mov
pop
push
cltd
push
lds
repnz
sub
dec
push
pop
push
or
sahf
fldt
lfs
mov
jo
popa
gs
cmp
pop
jbe
sbb
mov
cmp
insl
in
mov
xor
xor
jne
or
mov
movsb
cltd
sbb
inc
repz
xor
insl
pop
stc
mov
mov
sub
sti
mov
dec
sub
pusha
sbb
ret
pop
je
in
movsl
movsl
jno
push
cld
mov
jge
xlat
xchg
or
das
xlat
fwait
ja
lock
pop
dec
jnp
sub
lods
cmp
mov
sbbb
ds
inc
fldenv
pop
rcll
inc
ficomps
test
sbb
mov
movsl
dec
xor
stc
cmp
hlt
dec
add
and
add
in
scas
mov
xchg
data16
cmpb
loop
jge
fistps
pop
mov
pop
not
pop
mov
mov
filds
mov
inc
js
mov
loopne
mov
add
shrb
adc
push
or
or
mov
das
scas
push
lods
js
insb
pop
push
loopne
push
add
sub
fldl
inc
mov
fstpt
loopne
mov
test
ds
jb
cmpsb
fdivl
stos
jmp
push
adcb
gs
add
ret
inc
popa
cmc
xor
mov
stc
sahf
adc
xchg
mov
orb
or
push
outsl
ss
scas
push
inc
inc
aam
pop
push
mov
mov
icebp
cmp
pop
test
push
xlat
adc
dec
adc
adc
in
insl
cmp
out
sub
mov
xchg
test
and
lds
js
mov
insl
inc
cmpsl
mov
jns
repz
int3
popf
cmp
out
addr16
outsb
rclb
inc
mov
jb
pop
and
push
xchg
fwait
mov
and
ret
aaa
push
pop
test
out
xor
lea
push
cli
xlat
add
es
testl
inc
xor
into
cmpsb
shll
pop
shll
out
and
test
out
sbbl
mov
cltd
leave
in
fidivl
inc
test
shll
mov
testb
int3
push
cmp
jmp
adc
xor
leave
lea
rcr
inc
pop
sbb
xchg
mov
sub
mov
mov
sbb
adc
fistpl
pop
mov
jo
fnstenv
gs
sahf
jl
xchg
int3
cs
mov
daa
rolb
das
fdivrp
incl
xchg
addr16
das
add
out
repnz
fists
cmp
mov
sbb
cli
mov
cmpsl
sub
lret
mov
sub
in
outsl
hlt
sub
xor
xor
loopne
rorl
dec
mov
lods
cmp
rolb
adc
push
or
pop
aam
xor
sub
sub
jne
sbb
lea
mov
jbe
sbb
faddl
je
cmp
fxch
lds
add
cmc
test
cltd
and
ret
aam
jb
nop
sub
push
insb
or
jo
jl
or
jecxz
fwait
jmp
push
inc
mov
lcall
push
dec
cmp
mov
fwait
rcr
mov
fsts
mov
movsb
lret
pop
sub
or
mov
sub
push
pop
jns
and
fucomip
adc
outsl
mov
xor
inc
add
xor
xor
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
xchg
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
jmp
insb
pop
call
xchg
imul
jge
nop
dec
cmp
bound
pop
bound
lret
pusha
lcall
jbe
and
mov
sub
lahf
xor
mov
sbb
jns
fcmovu
in
in
in
rclb
sarb
xor
out
popa
add
call
bound
mov
mov
aad
cld
mov
sarb
ja
daa
pop
faddl
pop
in
xchg
stc
leave
xchg
pusha
add
ret
orl
xchg
stos
xor
add
ljmp
je
mov
inc
or
outsl
and
fdivl
into
ret
jl
imul
gs
addr16
int3
jb
pop
mov
aad
out
cmp
or
bound
inc
push
pop
test
inc
push
inc
adc
and
aam
aaa
mov
adc
mov
jp
sbb
imul
jne
push
int3
adc
push
sbb
pushl
xchg
mov
or
out
inc
dec
inc
xor
fmull
movsl
mov
jl
xor
cmp
call
idivl
inc
imul
adc
sbb
popf
add
mov
rorb
and
cld
push
jno
cmpsl
xor
xor
test
fmull
test
or
test
or
testb
lcall
negl
sbb
ljmp
aad
sbb
push
cmp
stos
jo
push
mov
test
fwait
or
mov
lods
sbb
daa
cmc
add
leave
mov
mov
popa
sbb
jmp
sarl
imul
movsl
sbb
adc
xchg
cmp
mov
out
popf
out
adc
mov
stos
lret
adcl
jo
mov
repz
inc
lcall
ret
and
orl
stos
ja
cmc
dec
lock
jns
repz
stc
enter
push
or
sub
mov
jbe
inc
mov
ljmp
dec
add
in
xchg
xchg
popf
push
cltd
mov
mov
lods
xchg
jnp
popa
rcl
push
cmp
fisttpll
cltd
jecxz
stos
push
in
sbb
cmp
aad
mov
stos
mov
test
and
adc
fmuls
push
sarb
cmpsl
out
in
data16
jge
xor
sbb
out
outsb
call
mov
neg
add
scas
in
mov
out
aad
adcb
mov
ja
testl
iret
repnz
push
fwait
lds
adc
jg
clc
sar
mov
mov
int
sub
inc
lcall
and
sbb
push
or
jb
out
mov
xchg
test
sbb
test
jge
or
inc
ret
jecxz
imul
shll
jecxz
add
movsb
add
and
jb
jb
repz
aaa
mov
fbld
mov
stos
mov
sub
pushf
insl
lods
imul
sub
lcall
xor
ret
xor
dec
or
inc
or
cs
add
test
rcrl
out
andb
pushf
pop
ficomps
data16
setle
nop
lahf
xor
mov
scas
and
sbb
ljmp
pushf
and
popa
sub
jnp
test
in
aas
push
adc
xor
daa
push
push
stos
int
mov
jo
bound
sub
adc
out
fnstsw
imul
sub
mov
sub
jb
lods
mov
or
addr16
imul
setbe
call
xchg
in
mov
divl
jb
rorl
mov
push
push
add
pop
lods
fs
out
cmpsl
xlat
xchg
jl
cmp
jg
sbb
fsubr
fwait
xchg
sbb
jl
repz
dec
xor
ffreep
pop
mov
xor
jnp
aam
fdivp
stc
xor
js
test
pusha
adc
shr
push
mov
lcall
sbb
out
in
mov
add
leave
sub
lcall
cmp
and
mov
fildll
sub
push
jbe
in
mov
hlt
xor
pop
xlat
dec
jne
outsl
pop
lcall
xor
aaa
jmp
mov
mov
push
adc
xchg
shll
mov
cmp
cltd
push
inc
in
sar
dec
std
sarb
jbe
push
dec
lcall
or
insl
add
ds
lods
cld
mov
jns
das
movsl
lret
outsb
rcrb
xor
or
out
mov
or
test
push
repnz
popa
dec
add
cmp
int3
sub
pop
dec
sti
daa
push
mov
fcmovnu
pushf
dec
addr16
lcall
xchg
aaa
loope
lahf
hlt
adc
imul
in
ret
jge
adc
je
pop
in
les
xchg
jmp
sub
arpl
ret
faddl
fs
ret
pop
jmp
ret
aaa
jnp
cmp
xchg
sub
stos
in
push
test
or
insl
push
es
xor
xchg
sbbb
sub
add
jo
dec
lea
mov
mov
addb
push
clc
sub
dec
mov
cmp
arpl
pushf
inc
jb
rorl
jecxz
mov
inc
cmc
push
loopne
lods
pushl
jnp
rcrb
inc
sub
mov
jle
fistl
mov
aaa
add
iret
pop
push
sbb
mov
out
push
scas
into
mov
lret
jge
push
in
pop
add
clc
sbb
stos
mov
jnp
mov
sbb
jmp
adc
sub
pushf
lock
xlat
sahf
mov
adcb
aad
in
scas
clc
mov
mov
jp
jle
outsb
addr16
nop
pop
stc
mov
lcall
mov
and
subl
popa
loop
or
mov
sub
out
outsl
jb
lret
and
jne
or
les
pop
inc
cmpl
outsb
fwait
and
or
add
cwtl
iret
lods
lcall
test
outsb
test
or
or
test
mov
ja
popa
push
jmp
cmp
sbb
or
pushf
lods
mov
and
or
jb
aam
shlb
lahf
les
push
lock
fldcw
jmp
insb
mov
pop
jns
enter
fwait
imul
or
insb
inc
pushf
sbb
pop
mov
stos
shlb
icebp
push
inc
mov
mov
mov
xor
js
pop
cmp
leave
ficompl
das
jp
sbb
push
das
gs
and
lahf
in
and
stos
sahf
cmc
ret
aaa
sti
cmovno
roll
test
cli
jecxz
push
into
xchg
mov
std
cmpsl
xchg
adc
orb
pop
cltd
pop
daa
in
pop
dec
and
loop
dec
or
popa
jge
add
mov
lcall
mov
test
mov
fwait
add
iret
aam
and
test
xorl
pushf
dec
inc
loope
ds
ja
mov
pcmpgtb
repnz
js
gs
mov
add
addl
inc
insb
push
cltd
dec
push
sub
cltd
dec
loope
xchg
push
pop
movsl
pop
fiaddl
cmp
test
insl
mov
int3
nop
std
push
push
mov
std
fdivrs
xchg
sahf
or
stc
pushf
cmp
sbb
dec
dec
jle
xor
sbb
jg
jge
repz
frstor
adc
xchg
mov
repnz
adc
mov
imul
mov
mov
ss
out
lods
pop
adc
mov
divb
inc
jecxz
pop
mov
inc
mov
cmp
mov
hlt
decl
fdivrs
dec
scas
into
xchg
cmpsl
fbld
ljmp
pop
mov
push
popf
cmpsb
cli
insb
push
pusha
cmp
mov
xchg
sub
cli
mov
ja
or
and
dec
lahf
out
nop
or
mov
pusha
movsb
in
pop
test
mov
mov
mov
ss
jnp
sahf
cli
sbb
repz
mov
lds
ljmp
cmp
jno
cmp
jp
cmp
dec
xchg
test
jns
ret
inc
push
push
out
out
sub
aad
mov
movsl
xchg
ss
mov
fldenv
and
mov
mov
pop
xlat
es
mov
pop
outsl
mov
mov
int
incb
xchg
xorb
sbb
imul
push
sbb
dec
dec
pop
xor
movaps
mov
adc
and
jl
rorl
dec
adc
push
mov
insl
in
popf
maskmovq
idivl
add
int
mov
sub
orb
testb
xchg
in
sub
cmpsl
sub
les
rcr
mov
in
xchg
clc
adc
push
lahf
push
jge
fs
fcomps
sbb
rorb
dec
inc
pop
or
adc
pop
test
sbb
mov
sub
lcall
dec
mov
sub
stos
jbe
xchg
loopne
les
test
pop
and
push
xchg
lock
jae
mov
repz
in
mov
jnp
aad
leave
adcb
xor
mov
mov
lods
mov
cmpb
xor
push
pop
int3
jbe
xor
cwtl
push
mov
out
xor
push
cltd
fldt
mov
mov
mov
das
aad
imul
lea
mov
cmpsl
stos
lock
xor
jl
popf
jae
xor
jge
lock
les
ror
je
jecxz
bound
lret
cmp
add
aaa
pop
mov
and
cmp
inc
xlat
in
adc
jae
jbe
lcall
fstl
out
xchg
pusha
outsl
sahf
and
test
ja
sbb
xchg
xchg
inc
jge
mov
out
or
les
addr16
mov
pop
push
orb
enter
mov
data16
cmp
dec
mov
dec
sub
xor
sti
psubd
loop
cmp
adc
pop
into
xor
add
jecxz
xor
push
pop
push
push
adc
mov
add
xor
fs
push
xor
lods
add
adc
mov
sub
test
leave
dec
lds
jl
mov
sbb
fisubrl
std
push
adc
push
inc
sbb
mov
dec
mov
shrb
or
sti
cmp
and
pop
inc
sbb
sbb
xchg
mov
es
xchg
or
loopne
sbb
daa
je
lret
ja
hlt
adc
jnp
adcl
push
out
cmp
mov
add
hlt
xorb
or
mov
fs
cltd
sbb
inc
arpl
mov
int3
popa
xlat
jbe
les
jecxz
adc
inc
xchg
jo
fildll
sub
outsb
test
adc
fsubrp
lahf
lea
ror
sub
ror
mov
adc
nop
push
orb
mov
bnd
sti
push
mov
stos
repz
dec
out
insb
test
pop
sub
mov
xchg
sbbb
xlat
arpl
pop
pop
push
add
scas
sbb
aaa
and
cmpsl
jge
xchg
xchg
jmp
xor
or
daa
aam
sarb
bound
xor
loope
insb
xchg
xor
decb
cmp
inc
mov
movsl
repnz
sarl
aam
cmpsb
cmpsb
xor
inc
mov
xchg
jno
jmp
sti
cmp
pop
das
xor
and
dec
call
dec
inc
jnp
push
ret
pop
lea
dec
sti
rorb
dec
add
jae
ss
out
int
repnz
or
test
fistl
dec
mulb
mov
sahf
hlt
insl
sbb
lret
pop
cmpsb
test
mov
jp,pn
push
cmp
inc
andb
jae
cmp
pusha
out
fmull
xor
int3
cmpsl
fdivl
add
rorb
cltd
pusha
jns
xchg
call
sub
cwtl
jbe
dec
std
pop
inc
push
sbb
and
sbb
nop
lahf
xor
dec
mov
es
ds
mov
push
mov
push
ljmp
enter
inc
in
arpl
push
sbb
in
dec
jl
ret
in
inc
fiaddl
jg
pop
rorl
push
xor
push
lea
inc
leave
shr
dec
push
or
jo
repnz
push
test
add
sub
mov
or
cld
cmc
mov
std
lret
push
push
rol
mov
sbb
pop
xorl
insl
jnp
sub
sbb
jns
ret
cmp
mov
xlat
sbbl
imul
addl
outsl
das
fs
js
int
ss
das
sub
pop
stos
or
mov
adc
shrl
pop
ret
insl
popf
push
add
jle
dec
ret
dec
imul
hlt
lock
cli
cmp
rorl
jnp
inc
mov
lahf
scas
inc
cli
pop
or
clc
das
and
xchg
call
add
xchg
jb
test
pushf
fidivrs
push
pushf
aaa
or
pusha
aaa
inc
popa
pop
xchg
xlat
lods
pop
inc
sbb
lds
cmp
jo
push
jg
std
mov
jg
popa
and
test
mov
inc
imul
lock
outsb
scas
xchg
mov
movsb
xchg
lcall
and
jno
jmp
nop
shrb
jae
mov
cmc
mov
xor
jno
stos
adc
dec
mov
push
mov
in
in
cmp
addr16
add
repnz
and
movb
dec
sub
sbb
add
icebp
inc
imul
stc
mov
sub
insl
dec
sbb
sbb
push
leave
aas
jo
out
mov
sub
push
dec
iret
sub
ljmp
and
or
or
push
test
scas
mov
or
popa
mov
in
xchg
jno
xchg
fidivs
push
jno
arpl
inc
dec
popa
call
sbb
and
xor
das
sbb
inc
pop
es
lods
rcl
rcll
dec
cmpsl
scas
sbb
nop
xor
dec
lods
mov
mov
outsb
mov
repnz
add
outsb
push
mov
adc
sbb
movsb
xor
mov
push
jo
imul
bnd
dec
cltd
xor
mov
inc
out
daa
mov
or
xor
les
jnp
lock
add
int3
aas
lods
inc
cmp
hlt
jbe
inc
repz
movb
mov
dec
and
mov
mov
inc
out
push
fidivl
jbe
lcall
mov
mov
fnop
push
or
call
mov
mov
xchg
lods
sub
or
cmp
sub
mov
mov
mov
or
mov
mov
adc
insb
call
add
arpl
in
andb
mov
and
adc
pop
in
test
jl
rcrl
iret
fnsave
xchg
adc
add
push
bound
mov
sbb
popa
xor
xor
loopne
leave
add
cmp
and
sbb
xchg
test
shrl
loopne
xor
loopne
insb
push
sbb
insl
push
sub
ds
dec
into
nop
inc
lods
movsb
inc
cli
es
or
clc
out
popf
xor
insl
cmp
pop
iret
es
imul
push
ret
dec
cmp
popf
jo
pop
adcb
jge
mov
adc
pop
lret
cmpsb
mov
addr16
xlat
sbb
fisubs
notl
mov
jmp
cwtl
xlat
lcall
jge
and
mov
jmp
shll
cmc
repz
lret
arpl
lods
fcmovnu
pop
sbb
loopne
push
shlb
adc
jne
ret
add
mov
ficoml
loope
cmp
popa
mov
rorl
xor
not
stc
mov
popa
faddp
lea
sub
jle
or
xchg
stc
pop
cmpsb
arpl
adc
roll
ljmp
std
dec
rolb
pop
out
cs
sub
mov
insl
into
lahf
cs
mov
xor
imul
jl
xor
mov
movsl
cmp
std
inc
aam
ds
mov
inc
addr16
sub
adc
push
mov
mov
mov
pop
mov
cmp
stc
mov
inc
mov
sub
jb
cmp
shrb
pop
mov
add
add
shll
inc
xor
test
idiv
mov
int
filds
jmp
cmp
or
test
addr16
mov
ss
pop
int3
sahf
movl
jnp
mov
enter
mov
lds
sub
fisttpll
adc
das
dec
ja
sbb
cmpsl
popl
into
adc
push
or
mov
int
sbb
pop
xlat
pop
inc
repnz
jl
aas
adc
fidivs
adc
mov
push
push
add
cmp
dec
dec
cld
mov
mov
sbb
cmp
int3
mov
insl
daa
mov
ror
push
jl
les
jmp
pop
add
into
and
and
int
jmp
js
inc
xchg
and
aam
add
sbb
and
sbb
iret
xchg
xor
repz
pop
add
movlps
add
mov
cmc
cmp
push
or
add
inc
sbb
inc
or
aad
add
jecxz
repnz
mov
push
mov
cmc
cmpl
mov
lea
pop
and
mov
adc
push
dec
in
mov
rolb
gs
sahf
jno
lret
imul
pop
and
mov
es
sub
ret
xor
cmpsb
mov
notb
fildl
fidivs
iret
out
xchg
int3
xchg
leave
fwait
ja
nop
add
stos
ja
sbb
imul
pop
icebp
inc
mov
xchg
cmp
or
jae
lock
jns
shlb
sbb
mov
mov
or
mov
test
fnstenv
sbbl
cmp
xchg
scas
sub
xlat
mov
lahf
lods
loope
push
out
add
adc
push
jge
test
aas
push
scas
lcall
in
lock
jae
push
adc
cwtl
in
mov
xchg
lcall
inc
scas
sbb
int3
std
and
sub
les
dec
push
pop
adc
fcomi
or
or
fisttps
sub
andb
gs
sub
xorl
pop
out
jle
imul
dec
movb
dec
ret
popa
mov
mov
mov
dec
cli
pop
mov
enter
fisubrl
cmp
leave
into
stos
mov
test
xchg
in
leave
sbb
mov
or
jae
xchg
aad
dec
adc
xchg
sub
out
mov
mul
insl
mov
pop
enter
adc
movl
jae
fs
xor
lds
mov
imul
mov
inc
and
ret
repz
push
sbbb
pop
pop
cmp
jge
sub
and
sub
mov
mov
outsl
fnsave
shrl
xchg
lock
test
int
lret
push
sub
mov
or
sarb
loopne
push
addr16
clc
xor
push
outsl
mov
cld
aas
xchg
push
fcmovnu
xchg
rclb
sub
pop
push
adc
sahf
or
mov
cmpsl
push
cmpsl
mov
pop
iret
std
mov
mov
les
fsub
fndisi(8087
fmul
std
mull
sub
jle
repz
pushf
fildll
sbb
div
inc
sbb
aaa
or
loope
mov
or
popa
or
xor
mov
mov
imul
nop
in
movsb
les
cld
scas
jb
stc
sbb
movsl
fdivrs
push
loop
cmp
icebp
movsb
fstpl
mov
cmp
or
mov
test
sbb
pop
aam
mov
ljmp
pushf
push
add
sbb
ss
xlat
pusha
stos
push
fisttps
fucom
push
jb
push
jne
jle
addl
lahf
sar
pop
xchg
adc
fsubl
shll
je
bound
lahf
push
jl
push
xor
mov
int
push
and
add
xchg
pop
mulb
or
cli
shrb
push
ret
mov
and
jns
les
mov
push
and
sarl
mov
xor
addb
mov
shl
adc
and
lods
xorl
insb
enter
xlat
push
push
push
test
in
dec
mov
sub
nop
or
inc
fmul
push
mov
or
div
lcall
outsl
cs
mov
sbbl
lods
mov
xchg
push
push
dec
xor
xchg
mov
pop
scas
push
sahf
ljmp
ljmp
dec
repz
lods
jbe
jmp
inc
mov
stos
jge
rcl
adc
xchg
adc
xchg
fnstenv
mov
cs
or
out
aaa
into
adc
in
daa
and
or
mov
adc
ret
dec
subl
call
mov
sub
pop
ss
pop
test
rolb
or
subl
jno
out
movsb
cs
insb
not
mov
pop
pop
ja
adc
scas
js
or
in
sarl
aas
mov
stos
pushf
test
cltd
repz
mov
push
jo
imul
cmp
ljmp
pop
ja
outsb
clc
xchg
aaa
sbb
mov
xchg
add
shr
jecxz
push
sbb
pop
sub
mov
les
push
push
xor
add
jb
jno
xor
aam
fisubl
push
ret
stc
pop
fiadds
orl
lea
in
addr16
adc
addb
int
dec
decl
sbb
imul
and
test
or
subb
pop
pop
or
pop
idivb
push
jmp
xchg
add
mov
sbb
sbb
lret
xor
jp
jne
adcl
fwait
mov
sbb
sub
pop
js
sbb
push
or
inc
mov
jae
out
popa
dec
dec
out
lds
ss
in
test
cli
cwtl
mov
std
in
cld
stc
xchg
adc
insb
push
iret
std
mov
add
imul
add
push
pop
push
insb
clc
xchg
incb
cli
or
push
lods
test
mov
mov
mov
popf
fwait
add
out
testl
int3
fs
mov
push
cmpsl
adc
inc
ss
arpl
fdivl
cli
lcall
sub
cli
int
stc
pusha
dec
pop
pusha
mov
mov
inc
scas
icebp
add
mov
jle
nop
sbb
scas
mov
and
out
cwtl
mov
arpl
dec
lret
nop
pop
cld
cli
movsb
sub
cmpsb
and
jmp
push
mov
es
imul
jae
adc
cld
lcall
pop
mov
addl
hlt
jp
push
enter
mov
fisubrs
or
or
push
xor
lods
lock
fidivrs
mov
ret
pop
xchg
mov
test
into
jge
stc
scas
dec
push
pop
push
sbb
and
idivl
xor
pop
pop
and
inc
out
jmp
and
push
loopne
stos
push
xlat
push
or
pushf
cmp
fst
push
mov
gs
pop
adc
imul
cld
xor
in
cmpb
xchg
jbe
into
and
xchg
cmp
push
mov
scas
and
rorb
jle
sub
sub
pushf
fisttps
dec
push
push
jbe
sahf
bound
xchg
jne
in
aas
pop
mov
cmpsl
push
add
out
pop
dec
scas
pop
repnz
hlt
lods
adc
arpl
aad
jns
push
xor
xorb
adc
sbb
aad
scas
jnp
lret
adc
pop
sbb
dec
nop
xlat
shll
movsb
sahf
ja
mov
push
mov
adcb
bound
test
adc
cmp
and
outsb
mov
stc
iret
jo
and
push
lcall
lret
sbb
repnz
incb
dec
xchg
pop
or
pop
cmpsb
adc
cmpsl
cld
mov
mov
add
aaa
sub
rorl
cli
imul
fisttps
lods
leave
push
xor
add
jae
mov
sbb
mov
in
in
rorb
cmpsb
lea
divl
jb
arpl
ljmp
mov
and
mov
mov
ljmp
mull
bound
inc
mov
fcomip
jl
nop
lret
push
inc
ficomps
cmp
push
mov
sbb
dec
mov
or
push
lods
into
ja
std
push
inc
ss
ja
out
jno
and
mov
lret
hlt
push
and
rcrl
leave
cld
in
cmp
inc
jg
imul
out
enter
jae
gs
inc
ret
fucomp
mov
jle
test
inc
mov
hlt
adc
xlat
pop
push
push
aas
mov
xchg
xor
sub
fidivl
jp
jecxz
inc
pop
stc
fadds
imul
jl
sub
mov
out
add
jg
cmp
push
insl
mov
out
xchg
sbb
jp
in
in
inc
test
cmp
pop
jo
lret
add
in
adc
or
xchg
popf
dec
dec
cltd
clc
movb
sbb
into
push
or
sbb
cld
push
rol
adc
sbb
xor
in
sbb
cmp
scas
inc
repz
out
hlt
iret
cwtl
and
scas
push
and
xchg
xchg
loope
cmovns
sub
rcr
xchg
decb
shrl
ljmp
pop
popa
xchg
bswap
lahf
or
mov
data16
mul
adc
repnz
mov
sbb
or
rclb
dec
mov
jge
or
inc
stos
add
shrl
ror
pop
inc
xchg
leave
inc
inc
pop
mov
mov
cli
mov
sbb
jnp
scas
rep
mov
cmp
sahf
fcompl
inc
ret
xchg
nop
addr16
or
stc
fucom
shrl
jmp
push
cmpsb
xchg
adc
inc
sbb
and
insb
loopne
xor
imul
mov
and
xchg
sub
jle
and
bound
pop
pop
mov
insb
cmpsb
sbb
sarb
push
adc
mov
fs
leave
push
dec
iret
and
or
aad
inc
sub
out
mov
aad
mov
cltd
lods
rcr
jne
push
loope
mov
outsb
dec
stos
fs
sbb
mov
ret
std
out
pop
lret
nop
scas
lret
fidivrs
int
fwait
xor
sub
mov
xor
push
pop
aad
and
popf
push
sbb
xor
push
mov
mov
lahf
rcl
ret
mov
jecxz
mov
jne
mov
lods
in
call
push
lock
cli
sbb
adc
dec
loopne
xchg
xor
jbe
repnz
in
cld
vpaddd
in
push
test
inc
pop
jl
jno
jnp
aas
xchg
lock
pushf
cmpl
inc
in
stos
jo
fdivs
sbb
in
push
jb
inc
ret
pop
mov
jae
insb
inc
out
and
sahf
push
insb
sub
jae
and
sti
and
add
xor
xchg
data16
sbb
mov
adc
sbb
cmc
hlt
daa
data16
adc
shl
sbb
adc
test
jmp
jg
mov
and
or
cmc
dec
mov
sbbb
xor
mov
push
cmp
movsl
xchg
push
add
dec
xor
pop
cmp
mov
stc
in
lret
mov
aam
xor
pop
sub
imul
outsb
insl
push
sti
xchg
fwait
lds
sbb
cs
sete
mov
mov
adc
sti
mov
mov
adc
int3
pop
cmp
push
xor
pop
inc
test
inc
or
iret
jge
shll
les
pop
das
adc
orl
popf
movsl
jle
int
or
sbb
mov
jb
addr16
je
sahf
push
divl
jge
shll
mov
fldln2
pop
adc
out
icebp
jecxz
mov
leave
test
iret
test
mov
outsb
mov
outsb
push
inc
pusha
jns
xchg
movsl
test
cmpsb
add
ja
inc
cltd
inc
jne
or
fidivs
lcall
jb
shrl
icebp
repz
xor
roll
les
push
xor
fnsave
push
and
xor
cltd
stos
fdivl
jl
aam
adc
shlb
sbb
pop
out
add
mov
mov
jne
or
icebp
gs
lret
add
fildll
or
icebp
cmp
sbbl
dec
das
nop
aad
inc
add
mov
mov
push
and
xchg
mov
repnz
outsl
sbb
popa
sub
je
stc
fsubrl
ss
out
testb
xchg
sub
push
mov
hlt
test
mov
mov
mov
cmp
enter
lcallw
into
pop
mov
dec
in
out
add
or
jge
xchg
ret
cmp
rcll
sarb
sbb
push
idiv
popa
into
dec
push
sbb
imul
clc
sti
adc
fildl
fdivs
push
adc
gs
sbb
push
out
cmpsb
lahf
push
jmp
lock
data16
movsb
mov
push
in
cmpsl
outsl
pop
pop
sub
pop
rorl
lret
jl
adc
in
stos
cwtl
sbb
mov
pop
xor
lods
enter
xor
jo
add
int3
pusha
lcall
les
adc
add
bound
xor
sbb
sbb
mov
insl
cli
int
fstpl
subb
mov
cmovg
xchg
pop
cmpsb
rcrb
inc
in
and
cmpsb
add
rcll
inc
and
jl
sub
cmp
cmp
movsb
mov
insl
cmc
jle
insb
xchg
inc
rolb
fmuls
adc
sbb
cmp
cltd
into
push
addr16
sti
insl
mov
mov
repnz
shl
mul
mov
cmpsb
ja
fwait
enter
sub
and
arpl
jg
nop
imul
and
lahf
add
mov
lods
sbb
outsl
jmp
je
loope
rol
adc
shrb
dec
ss
test
jbe
inc
aaa
xchg
xchg
test
inc
call
pop
out
fwait
movsb
cmpsl
fisubrl
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
dec
mov
cmpsb
mov
mov
mov
cmpsb
sbb
adc
bound
mov
pop
inc
ret
push
jne
lods
in
xchg
push
pop
lds
cmpsb
cmp
loopne
out
mov
adc
push
push
imul
lea
inc
lahf
dec
cmp
int3
or
imul
leave
or
les
adcb
xchg
int3
jge
mov
fdivr
and
add
int
cmp
mov
inc
sbb
dec
mov
loop
inc
popf
dec
rcr
pop
and
mov
hlt
add
clc
out
cmp
add
dec
xor
dec
fwait
into
mov
outsl
out
ljmp
mov
pusha
pusha
in
jecxz
push
sub
inc
xchg
and
fisubs
out
out
push
cmp
add
add
cmp
cmp
loopne
push
ret
scas
adc
mov
int
xor
stos
add
stos
sbb
jbe
push
add
or
cli
leave
xchg
jmp
sbb
popf
jmp
xchg
fcoml
fs
or
adc
test
pop
xchg
ja
lret
mov
lods
pop
add
xor
and
arpl
insb
cmp
xchg
mov
or
das
lcall
push
movsb
mov
push
xchg
mov
dec
adc
jo
jae
inc
push
mov
cmc
cs
addl
jg
arpl
je
insb
subl
jmp
push
and
jmp
and
mov
push
sar
jge
cmp
lret
mov
mov
je
out
pushaw
aas
xor
and
nop
sub
add
rcll
scas
pop
inc
mov
xor
std
mov
adc
jnp
aaa
pop
sarl
test
add
into
push
ds
dec
out
xlat
in
mov
push
std
flds
inc
clc
mov
stos
jge
mov
push
loope
es
pusha
sbb
pop
mov
std
push
mov
xchg
jmp
mov
imul
rolb
popf
xorl
lcall
or
mov
cmp
lods
push
pop
xchg
dec
jmp
mov
and
movsl
fwait
std
jecxz
jp
pusha
inc
adc
sbb
sti
adc
js
xchg
cmp
xchg
xchg
addl
pusha
pop
and
push
sti
inc
fwait
lcall
data16
movsl
fstl
pop
add
mov
dec
xlat
mov
push
push
xchg
mov
pop
lret
mov
xchg
mov
int3
xchg
pop
clc
jmp
sahf
sub
shlb
mov
and
sub
and
sbb
mov
rcl
pop
mov
push
insb
out
shrl
stos
jbe
add
imul
jb
mov
push
adc
ret
mov
and
movl
jne
movsl
sub
inc
ret
loope
mov
sub
and
cmp
jg
shlb
xor
sbbl
movsb
adc
mov
mull
pop
insb
xor
and
cmpsl
test
adcb
out
imul
mov
sbb
push
mov
pop
in
sub
stos
jmp
aaa
pop
mov
loope
cmp
les
mov
mov
and
pop
adc
fs
dec
fwait
mov
sbb
or
jl
inc
jp
and
pop
mov
das
aas
aaa
cmp
xchg
in
add
mov
dec
ljmp
dec
push
pop
mov
mov
inc
sbbl
lds
pop
negb
insb
hlt
push
in
in
hlt
adc
cwtl
iret
stos
cmp
insl
cmp
addr16
jbe
mov
pop
sbb
sbb
insb
pop
mov
lret
enter
sbb
inc
cmc
jmp
dec
int
or
and
fs
jecxz
push
xchg
lcall
subl
inc
mov
dec
pop
ja
jge
mov
bswap
mov
jns
cmp
testl
aam
inc
call
fildl
in
in
xchg
mov
mov
push
lods
push
cmp
sub
add
fsub
mov
fcmovu
lret
ljmp
or
sbb
mov
mov
les
cmpsl
mov
jp,pt
xchg
mov
imul
loop
ret
dec
stc
daa
int
das
pop
or
fisubrs
sbb
jo
call
jb
call
out
test
cmp
rcrl
or
in
sub
test
push
jl
jp
ffree
les
jno
add
mov
jle
rorl
dec
jmp
outsb
adc
jl
lret
cmp
xlat
cmpl
sbb
aas
mov
mov
je
mov
xchg
ljmp
fcom
jmp
fsubp
mov
je
les
andl
cwtl
in
mov
sbb
or
push
mov
cli
add
nop
or
data16
mov
das
cmp
iret
push
dec
mov
sbb
ds
jecxz
test
rclb
inc
and
jae
push
sarl
xor
aas
mov
inc
add
sub
cltd
adc
in
imulb
adc
jne
sub
sbb
aaa
adcl
cwtl
into
aam
clc
mov
or
jg
pop
mov
ja
xchg
push
push
mov
mov
rcrb
xor
cmpsb
stc
mov
mov
xlat
mov
ds
jbe
sub
pop
jge
imul
and
test
int3
jno
jg
rorl
push
sub
fisubl
aad
push
jge
mov
jo
movsb
fildll
cltd
add
inc
pavgb
and
bound
cmp
dec
in
mov
ficompl
pushf
add
xchg
jmp
push
cmp
sti
mov
adc
das
push
cmc
ss
xchg
popa
pop
lds
jge
fwait
add
out
jp
ljmp
mov
popf
inc
out
inc
jmp
sub
fstl
inc
bnd
inc
mov
std
pop
xchg
test
mov
xchg
jle
loopne
rclb
mov
lcall
addb
adc
pop
imull
fistpll
mov
push
push
js
sbb
je
int
inc
std
in
pop
and
add
mov
sbb
add
cmpsl
dec
mov
out
aad
cmc
jnp
add
jae
jns
ds
mov
aaa
int
or
add
int3
lods
cmp
inc
xchg
test
movsb
rclb
mov
fstpt
dec
add
sbb
pop
movsb
daa
daa
xor
jno
loop
scas
sub
rcl
pusha
movsl
xchg
push
sub
rcl
jns
std
fwait
mov
pop
cmp
jmp
out
scas
dec
fsubrl
cmp
sub
movsl
pop
scas
daa
jecxz
cmpsb
adc
popf
shr
loop
push
data16
sarb
xorb
add
and
movsl
pop
xor
fld
movsb
stos
mov
lea
ret
push
insl
cmpsl
jnp
mov
repz
insb
inc
das
inc
jg
xchg
mov
mov
in
std
movsb
pop
jecxz
pop
jg
jo
add
adc
ja
jp
lea
ss
lcall
inc
adc
jg
inc
pushf
mov
jbe
pop
xchg
ret
inc
pop
shrl
popa
fnstcw
lods
or
sub
xchg
mov
insw
enter
inc
jb
push
dec
bound
pop
sbb
lahf
jl
fiaddl
je
out
push
mov
push
mov
adc
xor
fsubs
mov
lcall
cmp
out
inc
enter
dec
int3
fldenv
cmp
lret
outsb
mov
in
xorl
adc
and
or
jo
pop
movd
or
jp
jecxz
push
out
sbb
aas
dec
iret
push
dec
cmp
ljmp
sti
inc
adc
dec
sub
or
push
dec
jae
jne
inc
cltd
mov
cli
mov
jg
mov
sub
out
adc
adc
jnp
aam
mov
fsubrs
push
add
inc
cs
mov
inc
jo
popa
cmp
push
jmp
pop
and
mov
stos
cmp
sbb
xor
mov
mov
leave
push
mov
or
ret
xchg
gs
fcmovb
int
cmp
pop
clc
xor
cld
iret
mov
adc
out
je
les
mov
dec
idivb
adc
jge
ret
cmp
sub
fisttps
push
fbstp
cli
dec
xchg
sti
sub
aaa
jae
dec
sbb
sti
cmp
jmp
mov
sbb
add
sub
cmpsl
inc
sbb
jne
sub
aad
or
cmp
in
in
clc
and
cmp
xchg
dec
mov
rcrl
popf
jnp
sbbl
sub
sbb
push
mov
and
mov
stos
inc
data16
pop
mov
sarb
int
jno
xchg
add
push
sbb
es
mov
mov
aad
gs
or
xchg
jge
test
jmp
jae
jo
cwtl
jge
jmp
mov
inc
fnsave
mov
adcl
fisttpl
ret
imul
pop
or
cmp
bound
xchg
mov
ds
test
outsl
ljmp
std
pushf
ljmp
test
insb
out
in
jbe
fsubrs
sarl
push
lret
pop
mov
aaa
sub
std
xor
jbe
adc
add
jnp
out
nop
cmpsb
push
cwtl
add
sahf
sub
push
fidivrl
sbb
test
or
in
mov
iret
nop
adc
shll
es
xor
ss
or
dec
cmp
test
mov
xor
sub
popf
out
ljmp
dec
inc
cmc
dec
ljmp
aas
dec
mov
pop
fldl
dec
pop
adc
mov
push
push
xor
data16
je
fldt
int
addb
inc
bound
aas
xor
daa
out
cli
xchg
ret
or
mov
push
notl
pop
cld
jmp
lea
scas
das
mov
adc
outsl
add
and
fldcw
xor
fisubrs
jg
adc
xchg
push
sarb
sahf
jp
add
iret
pushf
add
lods
push
in
fcmovnb
dec
xchg
jo
xor
in
cmp
push
add
fmull
dec
add
addb
nop
xchg
enter
loop
xor
idiv
arpl
push
fwait
mov
or
in
push
pop
negb
mov
pop
dec
mov
xor
dec
jg
adc
jb
xchg
cmp
push
mov
cmp
mov
repnz
cmp
or
cmp
imul
jecxz
mov
or
xor
call
and
cmp
xchg
test
xchg
fistl
fmuls
rolb
mov
push
sub
cltd
mov
es
sbb
mov
cli
test
and
pop
mov
dec
icebp
adc
push
xchg
mov
fwait
or
cmp
mov
cli
pusha
out
sub
sbb
js
test
pop
push
test
sbb
mov
and
xchg
pop
mov
out
sub
aad
sub
push
xchg
stc
mov
ss
mov
sbb
adc
jne
hlt
push
jle
lods
cmp
lock
or
jns
imul
dec
fiaddl
jo
scas
inc
ror
das
jmp
cmpsb
or
loope
test
xchg
stos
or
das
aas
daa
adc
add
dec
fcomp
mov
sarl
mov
jo
or
lds
loop
push
lods
cmpsb
int3
sub
lret
or
lret
mov
hlt
call
ja
jb
outsl
mov
pusha
sub
xor
movl
or
adc
xor
mov
adc
push
out
inc
mov
sub
mov
test
lods
fsubl
stc
lock
insb
addr16
jmp
jb
xchg
xchg
shrb
rcrl
mov
or
mov
add
sub
fs
jge
or
pop
int3
mov
cld
sbb
jnp
cli
fwait
mov
sbb
inc
lahf
test
push
jns
add
mov
xchg
push
cmp
adc
rcll
movsb
testl
sbbl
cmp
inc
pop
xor
mov
jne
xor
push
xlat
and
nop
cltd
aaa
ljmp
sbb
mov
add
mov
test
loop
or
cmpsb
out
push
inc
cs
push
sub
fwait
push
jg
jge
mov
jecxz
adc
loope
push
sarl
iret
push
fistl
inc
insl
fistl
out
mov
pop
dec
dec
inc
in
popa
fisttpl
mov
call
stc
mov
xchg
push
fwait
jne
bound
xchg
sbb
mov
jnp
push
leave
pop
jno
adc
xchg
mov
and
and
push
hlt
cmc
xchg
inc
lods
push
mov
lret
jo
mov
js
and
inc
ds
sbb
jb
int3
sub
imull
pop
add
pushf
nop
je
or
stos
mov
and
mov
mov
cmpsl
movb
cld
lods
sbb
dec
out
pop
pop
mov
or
divb
lahf
pop
arpl
pop
scas
out
cmpsb
push
es
cmp
add
dec
inc
xlat
pop
mov
cmpsl
negb
pusha
ret
inc
mov
ret
inc
mov
les
sbb
sbb
jbe
cmp
xchg
test
insb
cmp
ffreep
lret
mov
je
in
lods
ret
or
mov
mov
pop
mov
jae
cwtl
in
jg
fbstp
sbb
fucomi
imul
cs
lcall
movsl
or
push
dec
aam
je
outsl
sub
mov
xor
rcrl
jae
cmp
aaa
pop
dec
inc
test
xchg
sbb
and
pop
nop
adc
pop
jmp
popf
pop
fisubs
cltd
pop
sbb
call
loopne
ja
xchg
std
mov
sbb
lcall
outsl
test
mov
lahf
mov
imul
stc
push
cmp
outsb
jne
or
push
mov
dec
jmp
mov
imul
movsb
sti
rolb
loop
sti
add
test
pop
and
xchg
push
loopne
out
movsb
inc
stos
jp
imul
loopne
xchg
insb
sbb
xor
cmpsb
xor
push
lock
je
cmp
adc
cltd
movsb
add
push
jp
pop
and
and
pushf
jb
and
push
pushf
dec
pop
mov
neg
sbb
scas
sbb
in
pop
sub
test
inc
xchg
xor
popf
testb
or
cli
cmp
mov
lret
addr16
lret
cli
movsb
ss
pop
std
repnz
in
inc
xor
xchg
shl
sub
test
loop
out
mov
add
cmp
mov
sub
push
or
ret
dec
loop
movaps
mov
jb
int
rcrb
sub
mov
arpl
cmp
and
repz
add
mov
fs
mov
insb
adc
mov
mov
sub
addr16
icebp
movsl
pop
mov
push
stos
cmpsl
xor
adc
sub
icebp
mov
push
repz
mov
icebp
movsb
ffree
fistpll
adc
pop
adc
push
sarb
sarl
sub
fistpl
ljmp
stc
pop
repnz
xchg
in
enter
fildll
and
into
inc
jb
and
pushf
sbb
in
xchg
mov
inc
push
mov
repz
scas
adcb
add
xor
addl
aas
xor
div
adc
std
sarl
divl
adc
dec
jmp
fcmovnbe
dec
dec
mov
imul
xor
jg
cmpsb
add
out
mov
mov
fisubrs
cmp
jns
das
test
mov
in
push
mov
xorl
ret
xor
pop
cmp
in
dec
mov
lahf
push
enter
test
xchg
sbb
dec
push
mov
push
inc
or
int3
pop
nop
sbb
loope
mov
popf
inc
xchg
sahf
or
push
hlt
into
sbb
push
not
push
lods
rcll
jmp
pushf
xchg
xchg
into
fwait
int3
pop
jne
pop
or
add
test
nop
shll
sub
xchg
aas
repz
mov
pop
pop
push
mov
ret
shlb
adc
xor
ss
mov
push
ja
mov
jmp
mov
pop
sbb
xor
pop
push
jp
xor
cltd
or
mov
int3
jecxz
pop
imul
adc
adc
jae
cli
fidivrl
jp
push
mov
jmp
xchg
stc
xchg
push
addr16
fmuls
in
sbb
adc
jnp
faddl
inc
jg
stc
mov
sahf
stos
xchg
mov
mov
mov
inc
adc
ret
cmpsb
mov
sbb
fdivrs
xchg
pop
stos
or
ret
pop
push
loop
xor
movsb
popa
mov
mov
test
mov
adc
andb
into
adc
mov
test
sbb
adc
mov
dec
add
pop
imul
jmp
pop
pop
pushl
inc
pushf
lock
test
mov
rcll
in
lahf
inc
cs
xchg
and
mov
sbb
push
pop
dec
test
cltd
pop
add
pop
pop
jnp
and
mov
or
jp
test
jmp
out
pushf
aam
or
cmp
or
mov
imul
sbb
enter
sub
and
pop
in
jbe
imull
pop
xor
push
adc
and
push
inc
cmp
leave
test
push
shlb
cwtl
sbb
xchg
in
jb
xchg
int
pop
ffreep
pop
out
push
and
mov
outsb
jne
sahf
pop
mov
sbb
ret
insl
outsb
sub
push
adc
ja
sbb
push
ljmp
adc
mov
xchg
in
push
aaa
jmp
fld
shr
jmp
mov
jge
lods
in
mov
dec
out
xchg
lcall
sti
or
jge
push
or
push
lock
inc
cmp
rcll
mov
xchg
or
movzwl
jl
or
shrb
in
lock
loopne
ret
mov
or
clc
hlt
jb
push
mov
xchg
mov
movsb
arpl
xchg
adc
in
adc
cltd
xchg
jp
shrl
fldlg2
in
pop
xchg
xlat
cmp
bound
inc
lret
push
inc
decl
mov
and
jp
daa
sbb
jge
mov
stos
or
sbb
adc
jns
mov
pop
and
ss
dec
sub
sti
pop
push
cld
mov
icebp
fwait
cwtl
das
xor
insl
fisubl
or
das
mov
pop
mull
push
je
jle
and
movsb
or
out
mov
push
mov
mov
mov
clc
mov
xchg
jmp
mov
cld
cmp
popf
insl
sti
shl
jnp
jbe
or
or
and
movsb
jecxz
xchg
jl
xchg
sub
push
test
negl
jbe
scas
push
jge
cmpsb
and
repnz
jp
mov
in
shll
push
repnz
pop
pop
and
outsb
rolb
mov
jge
nop
inc
cmp
jnp
lret
addr16
int3
adc
lret
or
leave
xchg
outsl
imul
pop
mov
and
insl
ss
test
cmp
mov
push
ficoms
aam
shrb
aas
fcmovnb
adc
ljmp
mov
sbb
outsl
mov
pop
notb
mov
sbb
ds
int3
xor
jg
dec
shll
sub
or
int
xchg
scas
inc
mov
sub
mov
addb
mov
mov
dec
lahf
pop
lds
xlat
cmpsl
aad
pop
pop
scas
shll
sub
cmp
imul
call
or
cmp
enter
out
push
mov
loop
aam
push
les
loop
ret
mov
jns
rorl
cmp
addb
clc
arpl
adc
lods
fldt
sbb
cli
inc
movsb
js
jg
xchg
fimuls
xor
jl
fsubr
xor
sbb
or
pusha
movsl
sub
or
sub
push
mov
test
mov
or
pop
push
cwtl
sub
sub
dec
test
push
ffreep
sub
xchg
adc
xor
sbb
mov
jge
pop
repz
xchg
dec
xchg
mov
in
cli
lods
dec
in
mov
call
inc
sbb
dec
dec
cmpsl
xchg
sti
ljmp
inc
or
adc
or
dec
lods
popa
insl
lret
sbb
fwait
movsb
jnp
leave
mov
scas
loop
push
jmp
inc
shl
xlat
lahf
mov
lods
mov
popf
xchg
adc
dec
push
in
cmpsb
inc
mov
loopne
ljmp
sarb
fwait
jle
jns
jp
or
push
cmp
repz
pop
jge
cwtl
test
inc
lds
aad
lret
or
xchg
pusha
aas
pushf
mov
push
fistl
insb
pop
pop
sti
pop
aaa
popl
adc
out
ret
add
or
mov
add
arpl
pop
dec
daa
out
mov
inc
repz
add
lea
pop
sbb
loop
mov
in
cmp
mov
or
cmp
mov
insl
int
pushf
pop
or
push
xor
ficompl
movsl
cmp
cmp
pop
pop
jmp
int
stos
inc
movsb
push
pop
sti
xlat
cmp
xor
mov
mov
cld
mov
mov
inc
cmp
jbe
push
and
shl
je
jno
cltd
sbb
subb
sbb
cmpsl
mov
inc
add
scas
add
push
sarl
or
xchg
scas
mov
xor
sub
xchg
cmpsl
inc
adc
push
loop
push
push
cmp
mov
call
repnz
mov
push
test
pop
cmpsb
sbb
xchg
movl
xor
out
popa
test
in
jl
inc
jo
pop
fimull
inc
push
scas
pop
repnz
xchg
dec
add
push
mov
adc
lcall
add
inc
add
and
into
dec
pop
cmpb
inc
sub
sbb
rolb
fldenv
and
mov
cmc
sub
es
xchg
mov
sub
stos
aaa
cmp
pop
aas
lods
push
xor
repnz
stos
mov
cld
shll
cmp
or
mov
aad
and
or
fstp
flds
mov
out
xchg
aaa
dec
subb
jle
jae
dec
xor
imul
push
xchg
lock
mov
and
insl
cli
pop
push
popf
cmpsb
mov
mov
add
fidivs
push
jae
mov
mov
enter
sti
adc
or
dec
in
xchg
mov
arpl
faddl
ret
jge
ljmp
adc
mov
sbb
das
sub
scas
push
ljmp
jle
xchg
lock
vmovdqa
cmp
inc
cld
clc
or
jb
push
ja
outsb
mov
cmp
cmp
pop
ficoml
cmp
push
or
add
movsb
ljmp
dec
clc
cmc
cltd
bndldx
fstps
cli
inc
add
push
and
cli
and
int3
cmp
or
hlt
decb
xor
sub
fimull
jno
push
add
mov
clc
loopne
lcall
js
push
aas
jne
mov
mov
inc
jp
mov
sbb
frstor
andb
sub
jge
mov
lcall
or
sub
mov
outsb
popl
push
cmpsb
and
movd
into
or
push
sahf
xlat
xor
inc
jge
adc
stos
mov
push
cmp
cmp
mov
stos
hlt
and
in
js
leave
jo
adc
and
popl
inc
daa
cmp
xchg
push
test
lods
xchg
xor
xchg
sub
mov
call
xor
lea
pop
mov
inc
or
popa
mov
mov
mov
inc
jle
rolb
sbb
stos
mov
adc
push
ror
push
rcl
inc
xchg
data16
pop
js
inc
mov
dec
mov
jp
test
sbb
in
xor
call
lcall
xor
add
pop
dec
pop
dec
and
ss
xchg
loope
push
and
push
mov
fwait
in
ja
cs
cli
addr16
jecxz
push
lea
loope
pop
nop
sub
js
push
and
or
in
repz
lahf
andb
lahf
lret
stc
int3
cmp
inc
sbb
imul
pop
mov
push
out
imul
sbb
into
loop
adc
pop
inc
dec
inc
sub
and
loopne
rcrb
cwtl
and
aad
movb
jae
inc
inc
es
les
pop
pop
adc
int3
imul
test
mov
xchg
mov
xchg
cmp
jge
outsb
xor
pop
adcl
push
orb
and
es
add
and
aas
lret
mov
sbb
jecxz
aam
xor
cmc
mov
xchg
and
xlat
stos
test
push
out
push
out
mov
cmpsb
movsl
nop
int3
cwtl
dec
add
pop
xchg
movsb
push
iret
push
bt
dec
lds
push
in
xor
in
enter
mov
bound
mov
xchg
xchg
mov
ret
xor
dec
in
adc
loopne
mov
mov
imul
out
adc
mov
nop
aam
add
enter
inc
les
repz
movsl
sti
call
xlat
mov
cmc
xlat
sbb
dec
xorl
data16
sbb
add
pop
xor
clc
jle
aad
not
mov
jne
orl
movl
pop
ret
rorb
ficoms
inc
xlat
ret
movsb
ja
adc
adcl
roll
and
movsb
rdmsr
fdivl
insl
shl
in
inc
jnp
ss
int
xorl
mov
hlt
mov
jecxz
or
movsb
mov
jmp
mov
xlat
pop
add
jne
pmaddwd
add
push
jne
mul
inc
push
fadd
adc
mov
jmp
sbb
cmp
xlat
sbb
data16
aam
cs
mov
incl
std
inc
cld
cmc
mov
cmp
add
int
add
mov
out
fildll
fstpt
es
fwait
stos
call
inc
stos
push
hlt
shll
enter
dec
sbb
aad
jp
xchg
sub
incb
mov
cwtl
mov
pop
lret
call
out
stos
gs
push
cmpb
push
lahf
fildl
add
js
jp
test
jg
cmp
dec
roll
pop
ja
sub
jl
ds
shl
or
in
or
ja
inc
add
xor
xor
fcompl
and
fmul
out
clc
imul
pop
cmpsl
aaa
add
icebp
aaa
fs
mov
add
push
pop
xor
out
insb
bnd
inc
inc
xor
cmp
sbb
jae
das
and
xchg
and
enter
jne
stc
int
pop
lret
sahf
xlat
mov
repnz
je
ljmp
inc
pop
fsubs
xor
mov
popf
xchg
jge
sti
mov
fstpt
mov
jns
ljmp
add
dec
in
gs
push
xchg
mov
icebp
adc
dec
pop
daa
sub
push
not
dec
sbb
shl
sub
jle
out
js
fwait
int3
divl
repnz
push
xchg
add
sahf
and
fisubl
pusha
loopne
out
mov
movsb
lahf
push
xor
sbb
sub
xlat
lahf
inc
sub
cwtl
daa
xchg
push
lock
sbb
repnz
loop
sbb
mov
sbb
call
mov
jle
push
mov
or
pop
mov
ss
lret
dec
fstpt
int3
push
popa
cmc
adc
push
xor
adc
mov
fs
rol
and
lock
pop
xor
enter
out
lods
mov
sub
or
jns
mov
loop
cmp
dec
lea
fcompl
pop
add
fwait
sbb
fmuls
push
popf
insb
xchg
and
pop
out
clc
rcll
dec
in
jno
andb
pop
push
sbb
jl
fnstsw
jmp
fisubl
add
inc
pop
rol
mov
shl
mov
test
ja
pop
xor
and
outsb
pop
repz
dec
ret
inc
or
mov
fcoms
and
outsb
push
dec
fidivrs
mov
ja
dec
call
pop
call
xor
mov
imull
dec
push
fdivs
test
loopne
subl
dec
enter
pop
xchg
and
popa
dec
cmp
into
push
mov
loopne
in
into
mov
lcall
cmp
lock
adc
int
popa
xor
iret
or
mov
push
xchg
or
xor
ret
mov
out
inc
cwtl
mov
scas
push
inc
dec
xor
sub
pop
pop
sub
popf
cltd
test
rcrl
and
mov
push
es
stos
cmp
lret
int
cmp
sbb
je
ljmpw
xchg
clc
test
xor
call
dec
jmp
cmp
mov
int
mov
or
jne
lret
pop
ja
cmp
sub
lods
push
test
cwtl
ret
dec
jmp
rep
hlt
test
das
pop
cmp
mov
mov
pop
xchg
inc
or
enter
movsb
leave
popf
mov
pop
inc
jns
inc
dec
in
rolb
ret
sbb
movsl
mov
jb
cmp
inc
lea
bound
xor
test
jg
repz
sub
inc
pop
dec
jno
fiadds
xchg
mov
pushf
fiaddl
fistpl
scas
rcrb
mov
aaa
inc
cmc
lahf
adc
std
xor
lods
push
xlat
dec
je
pusha
test
push
jecxz
lcall
mov
inc
push
scas
hlt
call
and
dec
xchg
cmp
xor
jae
or
jbe,pn
out
in
push
lea
int
mov
pop
gs
loope
das
adc
cmp
mov
pop
pop
mov
lret
movsb
les
mov
nop
ficomps
add
xchg
xor
push
cmpl
sbb
mov
jp
mov
push
and
mov
cwtl
adc
inc
in
clc
and
jbe
in
addr16
hlt
adc
mov
sub
pop
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
jmp
inc
outsl
mov
outsl
rcl
mov
xor
bound
pop
bound
int3
movsl
sbb
out
cmp
xchg
dec
xor
inc
mov
jb
in
in
repz
adc
out
pushf
dec
in
mov
jmp
rep
into
jnp
mov
mov
fstpl
jnp
stc
sub
sbb
push
popf
negl
xlat
cmp
cltd
leave
adc
lock
out
and
inc
add
pop
enter
or
mov
inc
inc
xlat
mov
cmp
aas
mov
pop
popf
push
fwait
orl
and
repz
stos
dec
xchg
xchg
jo
shll
mov
lods
test
xchg
inc
or
inc
inc
lods
and
mov
or
jo
mov
mov
mov
sub
vmaxpd
mov
loope
testb
mov
mov
outsl
xor
out
daa
mov
mov
cltd
stos
popa
xchg
mov
fcmovnbe
dec
mov
push
xchg
jg
aam
sbb
flds
fidivl
jg
sub
aas
push
movsb
in
in
fs
ret
pop
outsb
movsb
cwtl
ret
mov
sbb
pop
movsb
xor
outsb
dec
notb
insl
push
xor
clc
sub
sbb
dec
cmp
fildll
adc
cmp
imul
xchg
jne
push
cmc
pop
xchg
or
xor
xchg
addl
pushl
cli
mov
loopne
out
aad
mov
mov
dec
or
dec
jecxz
scas
dec
outsl
adc
xor
in
subl
scas
lret
add
xor
inc
ljmp
dec
cli
inc
fsub
test
sub
inc
sub
mov
xlat
add
cltd
cs
das
xchg
imulb
shll
push
lods
jb
jmp
stos
mov
dec
les
fisubs
int
mov
bound
arpl
mov
loope
addr16
cmpsl
xchg
jmp
dec
call
jmp
jo
insb
xchg
sbb
mov
xor
mov
int3
test
push
pop
xchg
outsl
std
scas
and
lods
dec
lods
cltd
enter
and
or
inc
xor
dec
jg
stos
fsubrl
or
cmp
mov
jmp
sahf
pop
mov
mov
adc
pop
dec
fdivrs
xor
sbb
repnz
fsubrp
int
repnz
jb
bound
and
mov
jp
xchg
orl
jae
shrb
jbe
into
jle
daa
push
push
ret
mov
mov
arpl
add
push
ljmp
cmp
or
out
cmp
jge
inc
pop
sub
cmp
push
push
jo
cmp
pop
cmpsl
xor
or
mov
stos
call
fldcw
lcall
sbb
add
aam
les
cpuid
nop
pop
arpl
movsl
lock
sub
add
enter
dec
jo
and
sti
fstp
pop
lods
lahf
and
and
insl
xor
push
cmpsl
mov
mov
test
jl
fwait
sahf
and
fisubl
dec
dec
and
sub
add
in
shrb
jne
stos
jb
mov
mov
std
lea
add
xor
push
dec
lret
scas
stos
sbb
icebp
test
lcall
arpl
adc
and
mov
push
cmp
cmpsb
clc
xchg
bound
in
mov
pop
aad
xchg
bound
out
cs
inc
jnp
mov
loop
insl
and
or
pop
sub
test
cwtl
lods
shll
push
fsubrs
jo
jecxz
dec
cld
jne
cwtl
movsb
lock
cmp
sub
or
out
jo
cmpsl
inc
mov
xchg
les
and
pcmpgtb
mov
gs
mov
leave
jl
out
lock
fcmovnu
das
mov
dec
in
hlt
push
fnsave
sti
jns
cmp
cmc
shr
sbb
test
xchg
rcrb
bound
pushl
popf
pop
sbb
stos
inc
inc
dec
movsl
enter
loopne
dec
xchg
cld
js
xor
aam
cmpsl
xchg
mov
imul
dec
jnp
adc
inc
push
repz
jbe
popf
mov
xor
or
inc
push
mov
test
mov
cmp
fnsave
stos
loop
mov
xor
sbb
ss
inc
mov
in
and
sbb
adc
sub
jae
or
rorl
addl
outsb
push
scas
jg
ljmp
sub
and
cmpsl
push
gs
loope
sbb
add
hlt
test
das
mov
fsqrt
data16
mov
jo
push
push
add
lods
xor
and
loope
sbb
test
pop
js
ret
ss
movsb
fimull
mov
cmc
pop
inc
xorl
addr16
nop
push
aad
cmpsl
sbb
cmpsl
or
sub
dec
jg
and
mov
mov
shlb
mov
sbb
call
pop
shr
push
mov
lock
insb
scas
xchg
xor
and
nop
and
vxorps
loope
lret
int3
out
mov
sub
pop
push
test
xor
jecxz
shll
adc
in
enter
aas
sbb
sub
fstps
dec
mov
sub
jl
ljmp
rcrb
and
std
sbb
fs
mov
rcll
aam
fisubrs
sbb
add
or
in
jecxz
ja
lods
out
pop
mov
dec
lcall
or
adc
jo
leave
dec
or
mov
fsubrs
xlat
adc
imull
test
push
flds
lcall
in
repnz
les
arpl
mov
xchg
out
mov
mov
mov
pusha
std
lahf
sbb
js
les
mov
mov
mov
idiv
xor
cs
and
in
pop
and
imul
das
adc
and
cmp
pop
pop
dec
xlat
sub
sub
cmp
cli
inc
pushl
cmc
sub
das
out
jge
out
movl
inc
cmp
icebp
fbstp
popf
iret
pop
mov
cs
insb
inc
mov
out
adc
adc
mov
push
lods
mov
push
cmp
push
cltd
mov
clc
jp
adc
mov
xor
jmp
mov
dec
cwtl
xor
cmpl
pop
aas
adc
xchg
xchg
loope
test
push
stos
dec
aam
sub
and
out
adc
inc
ljmp
or
sbb
arpl
test
dec
add
pop
test
lods
lahf
cmp
pop
test
movsl
dec
fstl
imulb
das
sahf
cli
test
bnd
insl
xchg
rol
xor
pop
mov
lret
mov
movsl
nop
int
ffreep
cltd
add
shlb
xchg
jbe
adc
popf
adc
xchg
push
loope
pop
sti
jmp
mov
out
mov
scas
mov
add
dec
clc
aam
popa
outsb
lods
jns
ret
mov
das
enter
adc
xor
test
lahf
mov
dec
fldcw
pop
lahf
mov
enter
in
push
mov
inc
xor
lret
out
pop
jl
jmp
adc
push
jns
inc
data16
mov
pop
adc
pop
dec
aas
inc
cmp
cli
stos
push
out
lea
ljmp
dec
inc
call
dec
jne
jns
cmp
pushf
sub
fldt
xchg
movsl
outsl
xchg
in
pusha
xlat
cmc
std
inc
mov
lock
mov
push
inc
jnp
add
cwtl
mov
mov
movsb
cmp
push
rclb
ljmp
gs
push
ret
pop
test
xchg
adc
shll
es
fstps
jecxz
sbb
rcrl
xchg
sbb
cld
hlt
mov
xor
out
stos
and
or
or
lock
xchg
pop
jns
movsb
add
test
stos
cmc
out
rolb
adc
bnd
pop
repnz
scas
ja
inc
inc
gs
adc
inc
inc
dec
mov
aad
mov
xchg
mov
add
mov
inc
adc
mov
decl
inc
jne
into
xchg
fistpl
mov
repnz
mov
push
adc
lahf
jns
and
addl
les
lds
in
cmp
clc
mov
mov
ss
mov
xor
mov
lock
fbld
out
adc
dec
dec
and
mov
mov
sbb
mov
jo
sbb
popf
xor
dec
pop
pop
mov
sbb
jmp
mov
jge
xor
shll
repz
adc
int
icebp
repz
pop
call
or
ss
ds
or
jecxz
fisubl
popf
cmp
sbb
ret
repnz
ljmp
mov
in
sub
test
decl
xor
divl
aas
dec
xchg
movntq
testl
leave
dec
sbb
out
sub
leave
mov
xchg
dec
popf
stc
aam
mov
xchg
xchg
sub
dec
aad
pop
mov
xchg
fcompl
je
mov
add
scas
cmp
sbb
or
cmp
mov
push
add
pop
pop
sbb
into
sbb
xchg
nop
jbe
shlb
or
xchg
jae
pop
jg
mov
lock
in
arpl
push
lret
pop
addr16
pop
push
popf
arpl
mov
pop
sbb
mov
or
xor
dec
pop
mov
data16
int
hlt
push
mov
sahf
loopne
lods
insb
fisubrl
fmull
mov
xor
incl
cmp
mov
mov
rcrl
out
mov
nop
mov
sbbl
push
xor
push
push
mov
cltd
ret
fadd
popf
ds
pop
inc
outsb
es
jl
pop
arpl
xchg
repz
in
sub
dec
mov
nop
inc
or
or
sbb
stos
bound
cli
out
dec
inc
insb
xorl
adc
xchg
mov
pcmpgtb
or
jns
xor
arpl
jns
mov
addb
add
jne
call
cmp
cmp
fcomps
xor
je
test
pop
shll
xchg
push
dec
shrl
jg
sub
and
lock
adc
jno
out
arpl
xchg
push
imul
sbb
fwait
xchg
cmp
test
jg
add
in
mov
es
enter
in
icebp
xchg
jb
cld
mov
cld
jl
xorb
hlt
scas
adc
loop
mov
sbbb
mov
pop
or
xchg
add
cmc
mov
daa
call
mov
pop
inc
cmp
insl
sbb
mov
inc
pop
aaa
shll
push
push
sub
sbb
lret
mov
mov
sbb
xor
into
cmp
sbbl
push
pusha
std
cwtl
in
or
inc
push
scas
mov
divl
lds
dec
in
scas
dec
xor
pop
jo
out
jae
dec
push
cwtl
push
pop
sbb
and
add
pushf
add
cltd
push
nop
es
cmpsl
push
pushf
movsb
dec
xlat
jnp
test
ja
fdivp
mov
or
dec
adc
andb
inc
xchg
xchg
std
inc
movsb
and
out
iret
stc
push
add
adc
adc
dec
ss
outsb
or
xor
jle
pop
sti
cmp
push
xchg
mov
jbe
sti
js
loop
jl
lods
or
int
dec
fdivl
dec
popa
or
inc
jg
fs
xchg
data16
sbb
mov
dec
gs
loop
test
repnz
mov
lret
dec
adc
js
gs
aaa
or
sahf
scas
xlat
nop
jmp
pop
inc
xor
mov
push
stc
xchg
dec
std
xchg
mov
mov
push
mov
jne
and
ficoml
popa
in
mov
adc
inc
xchg
mov
sbb
xor
mov
pop
std
ficompl
clc
stos
push
xchg
pop
pop
xchg
pop
pop
push
mov
and
test
fnstsw
sbb
sti
sahf
and
or
xchg
or
sbbl
ret
iret
xchg
dec
into
mov
sbbb
add
cld
fucomip
pop
test
cmpsl
mov
push
pop
and
jne
in
and
xor
mov
or
stc
aas
les
jp
stos
aaa
push
mov
loopne
sbb
jae
fs
shl
push
imul
adc
in
and
stos
lods
cmp
js
dec
mov
sbb
mov
mov
push
cmp
push
inc
test
pop
xor
mov
mov
and
mov
fstps
stc
scas
cmp
push
cli
sub
mov
shll
stos
xor
adc
mov
dec
enter
js
jg
dec
ret
push
pop
sbb
mov
jl
add
dec
inc
xchg
xchg
cld
dec
dec
mov
ds
mov
in
mov
insb
mul
push
stos
jb
fldl
sbb
shrl
mov
xor
icebp
or
leave
loopne
jle
mov
ljmp
sti
dec
push
sbb
sbb
loope
jnp
cmp
inc
mov
cs
stos
leave
insb
xor
cld
je
loopne
cmpl
aaa
ret
mov
sub
popa
ljmp
sub
lea
stc
jp
jl
or
popa
add
cld
jge
popf
aad
mov
in
inc
or
push
adc
fbld
into
adc
ja
sbb
push
ror
cmp
xlat
outsl
push
or
add
arpl
and
pop
outsb
xchg
fldln2
pop
and
lock
movsl
arpl
adc
shr
and
sub
cmc
xor
adc
pop
in
sbb
lret
xchg
inc
lock
into
xor
mov
loopne
sti
fwait
mov
gs
cmpsb
sub
sub
xchg
push
notb
sarl
sub
sub
mov
or
mov
loop
fldcw
mov
lcall
cs
push
test
out
sbb
adc
cs
or
sbb
int
inc
mov
cmp
iret
pop
inc
cmp
fs
jae
test
sub
or
xchg
outsl
inc
cmp
fwait
mov
sbb
arpl
mov
js
push
jbe
fidivl
mov
jmp
xchg
cli
les
jg
cmp
lret
outsb
cmpsl
loopne
lea
inc
xor
sbb
jecxz
mov
xchg
jns
mov
std
push
ss
iret
jo
push
or
inc
shll
out
cltd
jbe
in
cmp
scas
mov
bound
in
out
mov
fmul
push
pop
lds
cltd
ljmp
rol
xor
js
xor
sbb
fs
add
je
ret
imul
ret
ds
mov
out
gs
mov
daa
popa
push
push
out
movsb
ds
cmpsb
pushf
adc
aam
mov
jno
xor
das
adc
idivb
sti
outsb
push
dec
inc
xchg
outsb
add
int3
imul
ss
sti
sbb
test
mov
shrb
jnp
fcoms
xor
shrl
rolb
push
mov
jo
mov
adc
cmpsl
ror
mov
inc
cmp
int
inc
fnsave
repz
cmp
cmp
repz
shrl
rorb
jnp
add
inc
jp
popf
push
out
or
pop
stos
xor
xchg
cmpsl
ja
data16
lcall
mov
inc
adc
mov
xchg
into
mov
or
pop
mov
or
mov
xor
dec
cli
pop
push
repz
fwait
call
fs
push
mov
jo
in
jo
sahf
mov
out
stos
pop
fwait
xchg
inc
pop
dec
rcrb
add
sahf
test
es
imul
cs
les
and
fldt
sbb
mov
enter
mov
xchg
jp
mov
and
push
adc
fbld
dec
xchg
mov
movsl
pop
shll
ret
cmp
hlt
pop
cmp
cmpsl
mov
mov
mov
xchg
ljmp
aam
xchg
sub
jae
xor
lds
loope
jge
cltd
mov
out
imul
push
mov
mov
repz
fiaddl
pop
xchg
mov
adc
out
icebp
aad
popa
jl
push
out
ss
push
aas
xor
orl
pop
mov
out
sub
xlat
lods
mov
pop
call
adc
and
lret
pushf
mov
and
int3
xchg
push
in
dec
or
push
stc
into
inc
lock
dec
xor
sarb
dec
sbbb
mov
cmp
cld
xchg
add
out
rcrl
dec
fmuls
xorl
shll
addr16
mov
mov
into
fldl
add
sub
subl
rorl
stc
popf
push
loopne
sbb
mov
inc
loopne
jae
dec
in
les
js
dec
in
sbb
mov
test
pop
xor
xor
mov
in
push
jecxz
es
pop
mov
xor
sub
inc
and
out
xlat
lods
dec
in
aam
ljmp
lahf
pop
pop
sar
lods
fwait
or
adc
adc
fsubs
xor
xor
or
lahf
xor
mov
xchg
sbb
mov
sub
aad
daa
loopne
out
sbb
das
cmp
pop
pushf
bswap
sarl
mov
rcl
pushf
sub
sahf
out
dec
mov
fnsave
sub
push
cmpsl
popf
jo
loope
add
ds
mov
adc
jns
push
sub
ret
data16
mov
lds
rcl
mov
frstor
fsubl
pushf
xlat
jno
push
jae
xor
and
lahf
insb
and
loopne
cmp
jl
xchg
jecxz
or
jmp
sarl
xchg
fs
movsb
mov
mov
or
daa
and
mov
xor
pop
mov
ljmp
add
fadds
cmp
in
xchg
mov
lahf
jae
add
inc
stc
daa
in
test
movsb
jbe
lret
or
dec
adc
mov
or
inc
movsb
insb
lret
push
stos
dec
and
jno
push
push
sub
nop
movsb
jl
mov
mov
xchg
xchg
cmpsb
mov
pushf
inc
xchg
adc
sahf
out
push
popa
insl
data16
insb
clc
mov
test
test
enter
cmp
icebp
mov
aaa
adc
or
je
fidivl
outsl
push
test
pop
repnz
pop
sub
je
cli
js
xchg
jno
cmpl
add
shrl
je
and
gs
mov
aad
inc
stos
sbb
mov
xchg
arpl
lcall
mov
fists
hlt
cwtl
test
stos
in
xor
xorl
fcompl
push
sub
popl
jmp
adc
dec
popf
in
jne
icebp
mov
movsl
ds
pusha
inc
ljmp
cli
mov
loopne
push
mov
aam
or
cli
inc
adc
xchg
std
mov
jae
sbb
dec
call
mov
push
gs
int3
mov
cltd
fwait
iret
jge
incb
mov
xchg
div
push
xor
or
push
and
test
push
in
aam
shrl
fmull
into
movsl
inc
xor
push
inc
and
cmpsl
ja
push
add
or
add
ret
cmpl
ljmp
sbb
in
int3
cmpsb
mov
sti
orl
xchg
out
mov
cmpsl
mov
xlat
lock
icebp
inc
dec
mov
xchg
jle
jae
mov
je
outsb
in
and
push
inc
add
test
xchg
pop
jne
sbb
enter
mov
cmp
xlat
pop
jp
mov
add
adc
adc
mov
jbe
cmc
lea
xor
and
xchg
jl
notl
cwtl
out
dec
dec
scas
push
push
stos
rcrl
xchg
jne
jge
imul
popf
add
aad
sbb
inc
std
xchg
insb
lock
sbb
movsb
sbb
pop
and
rorl
dec
mov
pop
cltd
ret
mov
pop
imul
test
inc
sub
ja
bound
push
fldenv
aad
das
xor
imul
mov
adc
repz
sbb
pop
pop
daa
sbb
fwait
push
rclb
adc
or
nop
mov
dec
cs
or
adc
clc
fsubrs
adc
xor
nop
mov
xchg
mov
cwtl
lcall
mov
pop
rcrl
xor
dec
clc
test
xchg
call
inc
add
cld
xor
dec
mov
mov
fnstenvs
mov
arpl
fldpi
mov
bound
hlt
test
call
pop
std
fldenv
mov
aad
cmp
int
ss
add
mov
mov
lret
lahf
or
xchg
lret
sub
hlt
mov
rcl
hlt
stos
xor
sbb
test
mov
mov
stos
ret
sbb
or
push
jb
stos
ret
push
lcall
lods
jno
add
test
pop
adc
xchg
loopne
rcrb
mov
daa
ja
pop
mov
imul
push
cmpsl
jne
or
int3
int3
pop
fisttps
xchg
inc
jge
loopne
sbb
push
or
bound
mov
pushf
cmp
out
jne
dec
mov
jns
roll
adc
in
cmc
push
aaa
push
inc
sub
xlat
stc
lds
mov
in
adc
jge
push
ja
adc
pop
fcmove
mov
shrl
mov
insb
push
mov
or
push
push
in
andl
inc
mov
frstor
add
mov
xor
mov
sbb
outsl
jo
insb
sbb
mov
stos
push
add
xor
or
ss
daa
push
stos
inc
push
push
push
in
cmp
call
hlt
push
orl
inc
fcomp
call
jp
cmp
stos
sbb
mov
sbb
cmp
push
pop
lock
iret
push
push
add
jecxz
int
bound
pop
imul
jo
xor
leave
cmc
inc
lahf
fwait
pop
push
test
ss
lods
imul
adc
pop
test
sub
adc
push
out
pop
or
push
sub
hlt
loop
and
mov
adc
insl
and
mov
add
push
mov
xchg
pop
xchg
sbb
addb
dec
in
adc
mov
clc
shl
sub
dec
fsubrl
xchg
jbe
dec
stc
pop
in
mov
xchg
aas
xchg
xchg
ret
in
lods
inc
jmp
stos
add
sub
or
out
pop
nop
pop
fistpll
dec
mov
out
add
test
xchg
movsb
sar
fldt
dec
sbb
and
xchg
hlt
xor
push
sub
outsb
cs
pop
push
js
cmpxchg
fcoms
fdivs
fcomps
jnp
prefetchwt1
dec
rcrl
dec
cmp
cs
out
out
xchg
insl
mov
dec
pop
add
push
mov
xor
mov
into
je
das
das
fcoms
test
lock
or
xchg
lds
adc
push
arpl
xlat
mov
rorl
dec
outsb
in
adc
inc
call
adcb
add
les
into
xor
push
sub
dec
das
push
xor
mov
jl
sub
lods
outsl
and
xor
repnz
xchg
sub
mov
xchg
out
loopne
jmp
mov
dec
fcmove
push
pop
adc
icebp
repnz
pusha
mov
xor
iret
js
and
mov
sbb
cmp
clc
stos
insl
loop
movsl
mov
adc
in
mov
das
adc
mov
out
pop
mov
pop
movsb
xchg
xlat
xchg
call
push
hlt
inc
leave
sahf
addr16
or
test
push
cmpsb
mov
mov
push
repz
mov
cmp
jmp
popl
repz
outsl
adc
and
or
aas
dec
mov
sbb
push
dec
mov
xlat
rorb
repz
dec
in
xor
push
add
pop
mov
cld
dec
bound
push
jb
jne
test
jg
xchg
xabort
int3
out
pop
sbb
aad
iret
adc
inc
cmp
in
pop
ror
mov
scas
leave
jp
mov
mov
rclb
push
xchg
stos
mov
fidivrl
cmp
out
jne
and
sub
stos
jae
clc
test
and
mov
mov
xchg
sub
aam
movsb
lea
push
lret
mov
imul
mov
icebp
notb
lods
icebp
dec
and
andl
adc
ficomps
bound
mov
cwtl
mov
push
lea
jb
push
xor
out
sbb
stos
lds
in
mov
les
push
jl
jp
bound
jg
std
jmp
pop
imul
shll
in
outsb
ss
mov
rcrb
mov
adc
shll
push
xor
mov
loope
popf
je
sub
aas
das
sbb
pop
pop
dec
iret
cmp
aas
mov
pop
push
les
jb,pt
jmp
inc
sub
enter
jns
das
lcall
cmp
jno
sub
dec
icebp
xchg
cmpsl
int3
inc
mov
inc
out
and
in
xlat
hlt
jecxz
movsb
ds
cli
aam
scas
mov
xor
cwtl
xchg
adc
insl
nop
adc
stos
xchg
out
pop
cld
outsl
cmc
sbb
sub
dec
adc
data16
dec
incl
movsl
push
andb
jg
mov
sbb
fwait
mov
addr16
pop
cmp
and
cmovne
and
ss
outsb
lret
push
adc
in
adc
add
push
xor
inc
in
jg
rolb
jns
imulb
xchg
stos
mov
jp
loope
data16
xlat
mov
fadd
loope
loop
sti
sarl
and
or
outsb
in
add
mov
outsl
subl
loopne
push
xchg
pop
imul
sbb
popa
mov
lods
icebp
int
ret
btc
popa
aas
xor
divb
sub
mov
icebp
jbe
data16
jmp
sbb
shll
mov
cmp
sub
mov
repz
pop
rolb
jp
or
mov
or
dec
jb
sbb
push
mov
xor
and
xor
into
std
add
push
and
sti
dec
jl
mov
cmp
lods
cltd
lret
mov
rorl
add
add
aas
xor
cmp
jg
test
cmp
shll
aam
test
cmpl
sub
mov
xchg
repz
outsl
add
testb
or
xor
addb
jle
repnz
lahf
insb
lret
rcll
scas
jo
and
xchg
mov
jmp
push
jnp
je
rcl
mov
adc
and
xchg
jmp
int3
mov
js
js
dec
fcmovb
sbb
ret
dec
sahf
inc
in
xor
dec
push
mov
loop
out
mov
mov
loop
ljmp
cli
add
aad
lods
sbb
je
pop
xor
callw
ja
mov
add
sahf
push
roll
push
addb
dec
sbb
mov
add
and
or
push
sbb
inc
sub
out
push
mov
mov
leave
adc
cwtl
pushf
push
add
xor
rcrl
xchg
aam
fstpt
mov
lock
fwait
and
sbb
push
pop
stos
rcrl
cmpsl
cmp
push
jnp
push
out
movsl
mov
rcrl
sub
push
sub
shll
mov
leave
addr16
lea
lret
pusha
vsubpd
adc
loop
xor
mov
add
shl
into
jnp
inc
repz
imul
inc
dec
je
pop
pop
imul
loopne
mov
mov
mov
adc
push
adc
movsl
ja
in
clc
pop
es
negl
jnp
cltd
cmova
push
orl
jp
clc
lods
mov
sub
sbb
jb
mov
mov
add
filds
jne
and
mov
or
dec
pop
xchg
mov
xor
aas
xor
inc
bound
mov
fdivrp
pop
leave
mov
jbe
push
sub
add
addr16
out
sbb
jecxz
fldenv
jge
push
mov
xor
push
inc
js
in
ret
ret
jge
inc
in
je
or
and
and
mov
pop
pop
cmp
hlt
prefetch
or
popa
cmp
pop
cmc
movsl
in
adc
fiaddl
lcall
ret
sti
pop
xchg
push
push
ret
mov
divl
adc
arpl
fiaddl
lods
movsl
adc
int
or
inc
out
jae
push
xchg
in
xchg
fwait
sub
pop
iret
hlt
xlat
test
mov
push
jle
aad
hlt
cmp
outsb
mov
and
pop
rorl
cmpsl
js
jecxz
sarb
in
pop
daa
mov
fsubrs
arpl
inc
cmc
jp
out
repnz
fdiv
sub
xor
cmpsb
shlb
jbe
or
sbb
es
popf
mov
push
cmp
stos
mov
daa
iret
and
into
out
mov
outsl
fistl
push
xchg
add
jle
and
mov
or
adc
sub
pop
sub
xchg
ss
pop
mov
inc
aad
scas
ficomps
adc
dec
or
or
sti
push
push
or
sub
mull
and
in
test
es
daa
or
mov
inc
iret
dec
and
mov
inc
mov
pop
mov
fdivrl
rcl
adc
lahf
jle
push
subb
cltd
clc
vcmpss
sub
scas
stos
and
mov
xchg
cmpsb
stos
insb
or
dec
out
jl
setp
push
mov
cmpb
pop
push
push
icebp
enter
adc
fimuls
and
sti
dec
dec
std
adc
jno
sub
inc
mov
add
add
outsl
pop
pop
lds
test
fstps
insl
movb
pop
add
leave
mov
push
shlb
mov
mov
cli
imul
aam
and
dec
add
pop
fwait
mov
psubw
cmpsb
sub
mov
xchg
outsb
cmpsb
arpl
in
pop
fbld
insl
dec
jb
xor
xor
andnps
push
call
leave
data16
dec
mov
mov
addr16
add
cmpsb
sub
mov
fstpt
jmp
enter
pop
idiv
and
enter
add
add
or
addb
or
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
pop
xchg
add
imul
mov
shll
jmp
bound
daa
jnp
adc
cld
pop
pop
sti
repnz
inc
dec
lret
cmp
sub
lods
cmp
ficoml
sbb
jne
sbb
sbb
mov
adc
popf
xchg
aas
push
xor
ljmp
in
add
xchg
test
shll
sarb
cmpsl
cmpsb
dec
push
sbb
pop
or
xchg
sub
mov
or
cmc
inc
push
ljmp
mov
lods
cmp
or
pop
sbb
cli
sbb
mov
sbb
and
sbb
inc
nop
inc
sub
in
add
pusha
sub
xor
xor
fsubr
sub
pop
pushf
out
dec
not
inc
iret
mov
sbb
dec
xchg
push
push
rorb
adc
sub
inc
or
ret
inc
pop
xchg
loop
fwait
test
fimuls
adc
ljmp
iret
aad
xor
pop
dec
cmpsb
push
icebp
test
jae
out
cmc
shrl
lret
cmp
dec
lea
movsb
adc
aas
adc
incl
xchg
sub
xor
dec
xchg
or
jno
push
aas
cmc
jne
push
add
pop
bt
dec
xor
test
sub
mov
enter
xor
sbb
jae
loop
cmp
dec
or
or
lret
hlt
rorb
fwait
ret
pop
popa
imulb
and
lods
push
mov
test
mov
push
cmpsl
mov
out
pop
addl
xlat
inc
ss
inc
inc
xor
inc
dec
mov
or
adc
xor
leave
push
ficompl
loop
ljmp
shrl
hlt
pop
push
push
mov
stos
movsb
jb
sub
mov
repnz
cmp
pop
adc
mov
jnp
cmp
js
cmovnp
adc
add
push
insl
sbb
push
cs
addl
sbb
push
leave
or
xor
in
cmpsl
lock
mov
sysenter
mov
lcall
sahf
pop
rclb
nopl
js
jge
mov
xor
jmp
cmp
or
mov
cltd
lahf
adc
popf
ds
inc
or
xchg
test
out
adc
test
imul
ffreep
nop
mov
lcall
ret
stc
ja
add
inc
or
xor
and
sbb
sub
mov
xlat
pop
push
mov
jne
inc
mov
mov
push
mov
inc
sbb
pop
inc
mov
pop
sub
add
jmp
movsl
lcall
and
repnz
xchg
test
shrl
mov
jl
sub
push
mov
xchg
sbbb
out
shrb
gs
pop
pop
dec
jecxz
dec
lds
cwtl
sub
sbb
movsb
mov
jge
mov
push
or
jb
cmp
mov
pop
cld
in
sbb
lret
xchg
jb
jecxz
jnp
push
xchg
xchg
sbb
push
push
aam
sbb
outsl
iret
inc
pop
push
repnz
dec
les
mov
mov
clc
xor
sar
imul
arpl
jnp
xchg
nop
popa
jle
cmp
jg
leave
push
inc
pop
leave
fs
push
push
dec
jb
dec
pop
fwait
or
ds
loopne
and
out
inc
sbb
sub
mov
lcall
scas
inc
xchg
sbb
xor
xor
ja
or
cmpsl
icebp
roll
xchg
xor
inc
lret
mov
mov
lret
fisubrl
mov
adc
mov
inc
cmp
loop
fadd
cmpsb
fs
push
fisubs
or
jl
push
jmp
sbb
sbb
out
sahf
outsb
push
test
fs
adc
sbb
addl
in
sub
or
scas
sbb
rcl
pop
cld
lret
scas
xor
sbb
lahf
lret
add
icebp
out
das
popf
int3
test
ret
inc
in
xor
fwait
loope
cli
mov
pop
lret
xchg
lods
das
mov
sbb
clc
daa
adc
int3
ss
loopne
insl
ds
lock
jo
push
push
add
ljmp
addr16
arpl
sbb
pop
adc
lods
add
pop
fdivrl
mov
outsl
imul
adc
ljmp
inc
xchg
nop
push
mov
dec
mov
mov
or
push
insl
pop
ret
mov
or
jmp
cltd
add
sub
pop
mov
pop
pop
pop
jbe
mov
inc
test
cs
xchg
pop
or
fildll
shrl
cli
mov
mov
movsl
xor
fnsave
xchg
push
imul
lock
mov
sti
insl
dec
jl
sbb
outsl
movl
fcmovbe
daa
push
call
fidivl
outsl
push
mov
mov
push
xor
cmp
ss
jne
push
mov
lcall
jl
mov
jbe
aas
ds
test
out
pop
push
jl
test
sti
and
repnz
icebp
mov
sbb
aas
dec
jno
xchg
inc
pop
sahf
adc
insl
ja
and
fnstsw
les
dec
imul
je
mov
mov
ret
mov
xchg
mov
xor
stos
and
mov
push
inc
xor
pop
add
sbb
gs
pushf
lret
mov
and
es
mov
nop
lret
sub
out
xor
jno
mov
in
rcrb
jnp
imul
ja
les
sub
stc
cld
js
in
fdivrp
mov
dec
fcmovne
dec
test
movsl
fcmovu
xor
or
lret
lds
sub
sti
gs
inc
rorb
push
and
out
push
ja
pop
negb
shll
sti
dec
repz
loope
mov
popf
je
push
fs
test
ds
mov
mov
sub
stos
aaa
dec
cltd
xchg
fsubrs
repz
jnp
cs
cli
icebp
adc
jg
fcmovnb
xor
add
pop
mov
mov
jne
es
pop
xor
pushf
call
and
or
loope
inc
mov
dec
add
js
push
dec
js
lds
aas
sub
je
jp
dec
jns
adc
ja
jne
mov
lds
dec
cmp
add
jns
sbb
shlb
xchg
xchg
fmuls
lock
out
inc
pushf
sti
inc
push
int
jg
das
ja
daa
stos
int3
in
ds
lock
imul
pop
loop
or
repnz
inc
inc
stos
loopne
mov
dec
stc
insl
cmp
xchg
jo
sbb
mov
jno
lock
cmpsb
mulb
xlat
sub
mov
sub
lahf
cmp
jmp
mov
xor
stc
sti
mov
xchg
or
xchg
ror
int
add
add
clc
invd
fwait
cmpb
into
data16
and
daa
movsl
sbb
mov
xor
sbb
sub
jo
pusha
and
dec
mov
sbb
cmp
add
add
adc
fimuls
mov
aam
int3
pop
rorl
ret
mov
in
push
or
mov
adc
push
sub
xlat
arpl
push
sbb
lods
xchg
cwtl
add
dec
pop
cltd
out
push
insb
dec
xchg
inc
pop
cmp
push
pop
add
loop
or
out
aaa
adcl
add
or
mov
pushw
pusha
adc
out
popa
std
sub
int
inc
scas
push
pop
jns
pusha
data16
or
mov
outsl
aam
outsl
aam
push
sbb
xor
xor
sahf
add
mov
notl
mov
push
pop
dec
fildll
push
das
movsl
push
or
fdivs
cmp
and
push
fs
popf
push
push
fwait
iret
add
sbb
mov
leave
ret
sbb
fidivrl
out
dec
cs
daa
mov
dec
adc
es
add
loopne
mov
cmpsb
add
inc
push
aam
lret
lcall
push
call
andb
sub
or
cmp
pusha
sub
sbb
cmp
add
insl
push
movsl
lcall
dec
cmpsb
push
adc
nop
mov
sbb
inc
sub
inc
pop
mov
sbb
fbld
enter
adc
icebp
push
dec
dec
sub
fildll
adc
jecxz
xchg
sti
cmp
jae
arpl
add
pop
cmpsl
xchg
jl
cmp
movsb
mov
push
push
dec
gs
xchg
ret
cmp
loop
add
hlt
push
pop
or
jge
mov
mov
dec
mov
fadd
fildll
clc
pop
pushf
mull
mov
repnz
add
pop
out
push
es
xor
dec
jmp
es
mov
sub
sub
push
scas
jb
mov
mov
jmp
xor
sbb
jnp
fcoml
cmp
roll
jbe
cmp
xchg
stos
and
pop
out
fmul
mov
aam
sti
lods
push
mov
icebp
scas
loop
fs
shrb
push
lds
dec
and
inc
imul
xor
rorb
pop
mov
jl
jmp
clc
insb
jl
lea
lcall
add
cmp
in
and
xor
divl
dec
cmp
daa
jle
stos
xchg
stc
mov
xchg
xor
or
inc
sbb
push
sub
mov
dec
cmpsb
test
push
ret
les
xor
xchg
mov
pusha
jne
movsl
jg
pop
sbb
mov
cmpl
mov
dec
adc
push
inc
lds
loopne
or
std
lods
into
xchg
outsb
push
add
mov
dec
mov
xor
iret
cmp
lods
inc
mov
xchg
repz
out
mov
sub
dec
cmpsb
mov
divl
sub
sbb
ret
imul
cmp
lcall
cmp
mov
adc
add
jle,pt
mov
cltd
mov
imul
je
in
xchg
int
push
pop
push
lods
sub
jne
mov
pushf
es
and
inc
sub
jbe
sbb
push
xchg
lods
shrl
adc
inc
int
push
mov
outsl
sub
or
sbb
and
ret
adc
sbb
mov
sti
scas
cmp
mov
test
adc
aad
mov
divb
clc
xlat
pop
fimuls
push
adc
adc
outsl
xlat
inc
jecxz
loope
add
add
xchg
repnz
stc
xchg
cmp
iret
mov
dec
cmp
addl
adc
in
and
jge
xor
jp
incb
psrad
dec
pusha
and
rorl
xchg
pop
push
call
and
fldlg2
inc
and
add
jmp
popa
mov
mov
and
into
les
lock
and
scas
mov
mov
mov
dec
and
sbb
pop
aaa
test
fcoms
adc
cbtw
ds
cmp
scas
push
jp
aas
insb
mov
sbb
test
jle
movsb
in
ds
aad
pop
mov
adcb
lods
leave
mov
outsl
sbb
cltd
sbb
mov
push
jno
mov
and
push
pandn
sub
sahf
mov
mov
add
xor
sbb
fidivl
ror
mov
in
jecxz
sahf
xor
js
dec
cmp
xor
push
cmpsb
xlat
mov
pop
pop
popf
adc
jge
bound
popa
aad
mov
ljmp
in
rcrl
in
push
xchg
shrl
jge
and
inc
insb
dec
test
sub
fists
xchg
push
mov
cmp
cltd
and
jg
enter
imul
roll
test
jge
cs
inc
mov
filds
clc
repnz
scas
xor
mov
adc
or
add
mov
mov
andl
jne
dec
into
data16
cmp
outsb
jmp
cmp
fmuls
sahf
fsub
sbb
shl
push
adc
dec
movsb
fildl
fs
mov
movsl
push
sub
xchg
dec
sbb
inc
inc
lea
push
mov
xor
test
push
xchg
sub
fiaddl
add
movsb
gs
push
push
mov
mov
popf
test
into
add
sbbl
cmp
int
inc
lret
push
repnz
test
popa
and
jns
pop
adc
test
ret
dec
inc
or
test
push
fcompl
mov
push
inc
jmp
jbe
pop
jae
and
sub
sub
jecxz
sbb
jge
and
cmp
pextrw
push
ljmp
into
xchg
pop
repnz
mov
or
lds
push
jo
lds
dec
sbb
cltd
adc
jmp
cwtl
xor
mov
or
mov
mov
inc
jbe
scas
cmc
mov
and
push
mov
std
pop
xchg
add
pop
ljmp
sub
jno
and
and
lds
xor
push
xchg
mov
xor
inc
jne
loop
push
lahf
pop
scas
outsb
jo
dec
cs
cmp
xchg
shl
xchg
sbb
bound
dec
fcmovnbe
mov
roll
push
or
inc
scas
mov
inc
pop
cli
cwtl
xchg
mov
inc
inc
add
xor
or
jno
or
leave
ja
cmp
xor
xor
dec
shlb
imul
jbe
sub
mov
mov
insb
mov
mov
or
nop
mov
cmp
cmpb
clc
add
xor
test
dec
mov
das
sub
call
fwait
lds
loop
ret
cli
or
jl
out
scas
and
and
rorl
stos
movsb
dec
sub
lods
push
je
cmp
imul
and
jl
xor
sbb
mov
bound
add
sub
pop
test
stos
hlt
pop
fmull
rclb
and
shll
jg
and
sub
dec
dec
ret
int3
fldenv
dec
cmp
xchg
popf
movsl
lcall
and
push
dec
shll
push
cwtl
aaa
icebp
fcmovu
xchg
mov
and
xchg
push
push
fs
xor
xchg
leave
push
popa
aam
inc
popf
adc
pop
ja
inc
in
out
pop
testl
cli
pop
mov
loopne
xchg
jecxz
mov
adc
jb
insb
dec
push
in
sub
addr16
mov
lahf
or
pop
jo
lret
stos
wbinvd
in
testl
ss
jg
adc
xor
pop
lock
mov
mov
addr16
out
fiadds
mov
xchg
scas
sbb
seto
aad
ret
cmp
nop
clc
xchg
jbe
lcall
out
mov
dec
jg
mov
shll
add
xlat
sub
je
xor
cmpsl
sbb
sti
xor
cmp
push
jl
add
mov
les
lcall
pop
dec
rclb
jmp
mov
inc
je
rorb
inc
cmp
cmpsb
loope
or
cmc
mov
jle
mov
int3
test
cmpsl
dec
jb
gs
mov
jl
pop
sbb
xlat
ja
dec
adc
sbb
mov
xchg
mov
ret
cmp
aaa
mov
jp
in
push
das
stos
lret
repnz
fwait
jbe
cmp
movsb
sbb
ljmp
enter
outsb
es
add
inc
out
push
add
in
mov
jns
aad
jl
subb
xchg
fidivs
scas
adc
popf
pushf
or
or
fadd
nop
inc
mov
out
enter
add
inc
pop
xadd
shll
jb
mov
jl
push
sbb
shll
sahf
lret
pop
dec
lods
dec
out
dec
jmp
popf
sub
imul
shr
xchg
inc
es
push
pop
xor
nop
inc
js
insl
aaa
insb
jmp
add
xchg
out
icebp
ljmp
pop
mov
in
imul
and
das
jecxz
xlat
sbb
lock
roll
push
stos
mov
sub
stos
mov
xorl
sbb
xor
popa
adc
lret
push
pop
and
imulb
mov
cld
cmp
call
loopne
ds
or
faddl
push
pop
cmp
mov
cmp
pop
test
xchg
aaa
and
subb
test
lea
out
xorb
fwait
jbe
cld
ljmp
lock
dec
fildll
pop
sub
in
jl
sbb
dec
inc
aaa
jecxz
mov
sub
or
adc
cmc
js
test
lods
jge
fsubp
mov
or
jbe
xchg
pop
popa
push
xor
and
mov
popa
inc
adc
cltd
dec
movsl
insl
fyl2xp1
test
mov
out
dec
clc
jno
rclb
lea
pop
adc
dec
push
aad
inc
mov
in
orl
mov
and
adc
pop
mov
std
rorl
xchg
enter
cmp
cld
lock
repnz
dec
or
hlt
lods
or
mov
cld
add
jae
ds
push
addr16
rcrb
mov
jbe
leave
lret
mov
out
leave
outsl
sbb
mov
mov
mov
loopne
js
mov
pop
call
jle
and
lods
repz
push
push
mov
jl
mov
cmp
cmp
xchg
inc
rclb
fcompl
push
fists
lcall
xchg
pop
push
mov
mov
adcb
int
sbb
call
inc
add
push
jbe
and
mov
dec
jg
inc
insl
popf
pop
cmp
inc
test
idivl
inc
mov
jae
sbb
sbb
cltd
shl
sbb
pushf
xchg
roll
out
mov
xchg
adc
cwtl
fcoml
jg
popa
dec
cld
and
sbb
inc
es
inc
cs
fsubp
cltd
add
mov
dec
bound
xchg
iret
and
push
or
loope
dec
out
sub
arpl
ss
out
pop
dec
push
push
and
pop
cmc
ret
pusha
mov
scas
fs
cmp
ss
ss
dec
mov
adc
hlt
and
inc
dec
jno
sub
shl
fidivs
dec
xor
in
push
push
loopne
sub
sti
inc
add
xchg
test
push
fs
ret
mov
inc
sbb
push
ljmp
ss
add
das
sbb
ret
cmp
stc
dec
jbe
imul
mov
ja
jp
pop
mov
xchg
adc
cmp
bound
ljmp
in
and
lcall
arpl
dec
movsl
js
pop
mov
stos
cld
adc
inc
dec
test
pop
adc
pop
xor
dec
fdivrs
mov
data16
das
xor
mov
pop
les
jl
inc
das
aam
addr16
data16
mov
mov
test
es
subl
inc
jle
inc
xchg
push
dec
inc
push
lret
lret
daa
dec
les
sub
mov
cli
fnstcw
mov
out
cmp
xor
cmpsb
and
lds
cmpsb
shll
pushf
in
push
xor
push
sub
arpl
sbb
sub
add
jbe
rcrb
xchg
scas
push
test
sar
repz
rorb
or
out
mov
dec
sahf
bnd
outsb
mov
or
cwtl
mov
fwait
aam
fnsave
ds
scas
hlt
and
cli
mov
movsl
jb
pushf
mov
push
jo
inc
js
mov
fldcw
xchg
and
dec
xrelease
xlat
aam
psadbw
hlt
jae
lret
or
loop
imul
sbb
and
push
and
dec
pop
and
cmp
ret
adc
xchg
or
xor
leave
pushf
jg
or
imul
flds
leave
mov
enter
test
pop
js
dec
jp
sahf
lods
mov
ja
push
cmp
mov
jo
cmpsl
mov
xor
hlt
push
xor
mov
xchg
lock
in
ret
and
add
jnp
pop
mov
push
test
xor
mov
pusha
add
mov
push
je
scas
das
jbe
iret
pop
mov
xor
push
rcll
dec
and
popf
mov
xlat
pop
je
mov
xor
clc
add
in
in
enter
pop
and
pop
fs
ljmp
ja
mov
dec
cmp
jge
or
xchg
mov
iret
and
dec
jecxz
pop
xor
fsubrp
addr16
popf
mov
cltd
inc
addr16
mov
dec
test
popf
outsl
adc
aad
or
mov
je
icebp
stos
cmp
mov
cmpsl
clc
cmc
sbb
jns
mov
cltd
push
das
pop
outsl
sti
cmp
xchg
loopne
and
data16
mov
icebp
loop
les
into
aam
add
enter
mov
jge
push
test
adc
mov
push
jge
js
adc
mov
xchg
inc
inc
dec
jns
je
inc
roll
mov
pop
lcall
jns
dec
daa
xor
or
in
dec
cmp
in
jge
shll
fstpl
mov
dec
ret
lods
cmp
sub
add
add
shr
shl
test
add
cmp
test
in
ret
bound
xchg
out
push
arpl
jns
pop
movsb
xchg
xor
xor
sarb
repz
jae
fsubrs
push
nop
xchg
mov
movsl
and
mov
cmp
loop
xchg
push
jne
sbb
dec
std
repnz
mov
jle
dec
add
jecxz
mov
add
jae
mov
orl
pop
or
data16
out
cltd
mov
inc
mov
fstps
leave
rcrb
mov
test
testb
pop
push
add
xchg
mov
mov
out
std
jb
mov
adc
or
cs
push
data16
cwtl
lods
out
sahf
das
xor
lods
dec
lods
pop
aaa
cmpsl
inc
mov
jmp
sti
push
scas
inc
addl
mov
adc
inc
xlat
scas
es
ja
outsl
pop
xchg
dec
sbbl
mov
out
mov
and
mov
sbbl
adc
mov
push
das
push
pushf
jo
sbb
imul
mov
push
mov
in
movsl
mov
inc
cmp
rcrl
jno
faddl
or
mov
or
pmaxsw
sti
mov
jle
push
dec
mov
sub
sub
pop
pusha
in
scas
sub
push
cmp
xchg
mov
rcr
sbb
iret
jmp
xlat
mov
hlt
or
jns
xchg
sbb
or
xor
xor
mov
mov
jp
orb
pop
shlb
movsb
sti
jnp
stc
mov
into
mov
jnp
les
test
push
mov
mov
dec
sub
lock
addl
repnz
sbb
test
adc
xchg
mov
sub
outsb
int
test
pop
stos
xor
cmp
xchg
add
adc
mov
movsb
out
inc
add
mov
int3
add
mov
out
sahf
cs
add
sub
fsubrl
dec
mov
sbb
out
adc
inc
stos
insl
adc
mov
add
pop
pushf
das
or
popf
daa
sti
cmp
pcmpeqb
nop
cmpsb
pop
push
sbb
mov
and
add
xchg
xchg
outsl
in
jno
iret
call
mov
les
lcall
pop
mov
call
pop
inc
stos
jp
cmp
xlat
mov
loopne
je
lock
sbb
sbb
jg
aas
cmp
imul
int3
je
inc
mov
mov
lock
xchg
ds
lods
and
mov
mov
subl
inc
ret
lea
movsl
inc
pop
fadd
fld
cmpsb
mov
jl
outsl
lret
push
cmpsl
or
aad
in
xor
lea
dec
fildl
add
mov
es
pop
fstl
out
call
sub
cmp
arpl
imul
xor
mov
xor
in
xor
mov
xchg
rcr
ds
std
imul
cmp
xchg
pop
mov
out
es
out
adc
fs
out
mov
push
sub
orb
jo
je
xchg
dec
mov
out
lcall
adc
or
mov
sahf
mov
pop
sbb
dec
shlb
cld
cmpsl
and
orb
adc
xor
jmp
jno
mov
mov
or
test
mov
and
dec
mov
inc
xchg
push
adc
xchg
pop
mov
cmp
and
repnz
inc
fstl
cmpsl
jb
sbb
rcr
sub
fs
inc
adc
inc
cmpsb
cmp
fcoml
fimuls
lahf
fidivs
test
lret
popfw
sarb
orl
loop
xor
rorl
mov
xchg
add
sbb
daa
test
jp
in
dec
lods
inc
push
push
inc
jb
lcall
call
jecxz
adc
iret
iret
mov
pop
notl
imul
into
add
xchg
mov
out
stos
or
stc
push
push
adcb
mov
jle
leave
mov
mov
xor
xchg
inc
xchg
das
dec
jg
lods
in
sub
sub
in
into
scas
lock
loope
pop
out
dec
mov
push
mov
cmpl
adc
mov
mov
add
aam
iret
ffree
iret
add
dec
dec
movsb
test
add
cwtl
mov
lret
jb
rolb
xor
jmp
inc
in
fistl
cmp
subb
xchg
and
push
movsl
inc
ret
shll
sbb
mov
ret
push
mov
sub
cli
mov
fisttps
mov
call
ficoml
and
and
fnstcw
pop
mov
cmp
repz
fwait
sbb
inc
mov
cmpl
lret
iret
cld
mov
and
fsubl
into
mov
scas
divl
fisttpll
pusha
jno
lds
fstpt
cmp
push
in
sub
shll
jne
repz
int
cmp
in
sti
insl
insl
inc
push
mov
inc
icebp
sub
pop
adc
and
sahf
jo
lea
fsubrl
xchg
repnz
int3
int3
cmp
ds
xor
lods
int
fisubrl
shlb
mov
cmp
pusha
jg
lods
cmp
dec
sub
push
jle
call
jnp
fwait
lret
mov
iret
adc
xchg
add
cld
jbe
sbb
jbe
pop
and
cmc
pop
xchg
cmp
mulb
sub
dec
dec
in
push
sub
dec
icebp
rclb
pop
pop
icebp
xor
pop
outsb
inc
mov
fld
push
sbb
pop
sub
pop
out
cmp
out
aam
les
xchg
fucomi
outsl
jmp
adc
adc
jb
mov
negl
shll
xor
jge
imul
pop
repz
out
pop
jno
das
fidivs
iret
shlb
or
hlt
loope
lret
in
and
mov
jno
bound
dec
lds
push
leave
mov
or
or
sbb
add
call
ja
fsubrs
sub
xor
call
test
jge
adc
bound
mov
push
mov
add
iret
imul
pop
add
pop
inc
mov
ror
icebp
cld
fdivr
and
xchg
cmpsb
adc
mov
aaa
aam
jnp
push
inc
iret
pop
in
cmpb
xchg
push
jns
lea
pushf
sub
aas
arpl
pop
sbb
and
inc
jo
inc
or
jb
iret
inc
mov
xor
mov
mov
loope
repnz
shrl
push
das
lock
scas
lds
popf
ja
icebp
jb
xor
incl
ljmp
cmp
jmp
outsl
cld
stc
adc
rorb
push
mov
sbb
adc
js
lret
pop
fnstsw
jb
xchg
aaa
ja
cmpsb
shll
andb
jl
mov
dec
mov
scas
mov
cs
insl
dec
daa
jo
and
fldenv
and
nop
push
loop
popa
repnz
nop
cmp
cmp
sbb
dec
push
xlat
incl
sub
mov
push
iret
and
subb
jg
push
and
pushf
mov
adcb
je
outsl
test
jmp
in
pop
lods
adc
dec
ficompl
lods
inc
and
jbe
adc
pop
inc
lea
cmpb
dec
fcomip
shll
jl
pusha
outsl
jp
fnstsw
adc
ljmp
dec
je
stos
stos
and
rorb
sub
dec
xchg
mov
jecxz
repz
in
cs
fxch
and
into
loop
or
push
adc
adc
lock
mov
cs
in
cmp
rcr
and
pop
fsubrs
fmul
sub
dec
mov
add
fimuls
lret
es
addr16
push
sub
adc
lods
fcom
aaa
push
add
push
jecxz
loope
test
outsb
jae
sub
jae
dec
cmp
les
inc
mov
push
in
es
pop
ret
call
test
pop
xor
loope
hlt
and
mov
leave
push
xchg
dec
sbb
lahf
ljmp
shr
xor
inc
sahf
mov
push
push
outsl
out
shll
add
sbb
mov
jmp
rep
in
fadds
in
mov
dec
scas
outsl
enter
mov
int
cmp
jl
iret
dec
add
jno
repz
sbb
pop
xchg
mov
ret
xor
mov
out
xchg
dec
fistpll
aaa
sub
mulb
lock
inc
lret
test
jl
enter
add
pusha
push
aad
push
imul
xchg
lret
xchg
ror
enter
fs
sti
inc
cltd
inc
pop
pop
adc
std
stc
inc
inc
sbb
and
mov
push
out
out
mov
shlb
push
movsb
add
shll
arpl
gs
push
mov
pop
or
jl
lds
sbb
mov
mov
jno
outsl
pop
outsl
jbe
popf
xchg
inc
sti
adc
insb
cld
cwtl
mov
sub
ljmp
cmc
adc
jmp
notl
xchg
movsb
in
mov
cmp
adc
mov
adc
repnz
lcall
cmp
mov
mov
add
mov
mov
xor
add
jmp
jae
mov
xchg
movsl
jecxz
pop
sbb
jb
jmp
dec
lea
jmp
bound
jae
cmp
fadd
mov
mov
pop
xchg
ret
sarl
dec
mov
sbb
mov
loope
fwait
add
mov
jle
xchg
jge
mov
insb
and
sbb
in
and
push
jl
aaa
mov
pop
in
or
dec
pop
add
fwait
nop
lods
mov
or
fsts
sbb
mov
cmp
dec
jmp
mov
adc
pop
add
icebp
push
pusha
fnstcw
psubusb
repz
or
adc
inc
out
insb
cmp
cmpsb
mov
ror
push
mov
test
mov
lods
sbb
fsub
or
xchg
inc
mov
xchg
cltd
movsb
lea
cmp
mov
shr
cmp
sbbl
sub
push
outsl
out
xchg
out
sbb
push
add
movsl
roll
nop
sub
mov
xchg
jecxz
push
imul
dec
cmp
fs
mov
push
cmp
int
pusha
out
movsb
das
addr16
bound
jge
jo
into
add
ret
lock
icebp
shrl
enter
cmpsb
add
cmpsb
ljmp
js
push
out
notl
clc
push
loop
mov
inc
xor
mov
mov
pop
xor
mov
dec
lea
inc
fldcw
sub
pop
negl
mov
add
cmpsl
popa
scas
jne
mov
sub
or
xchg
dec
out
shll
adcl
scas
pop
sub
loopne
cmp
push
jle
jno
cmp
mov
push
scas
jg
lods
xchg
rolb
xor
mov
dec
lods
loope
and
bound
mov
inc
sub
icebp
or
and
cwtl
loop
mov
cmp
pop
push
lock
inc
movsb
adc
cmpsb
out
fs
mov
fbld
and
sub
cltd
cmovb
aad
gs
in
loope
sti
mov
sub
data16
jmp
lahf
pusha
loop
mov
sub
jb
into
fistps
daa
pusha
cmp
imul
dec
mov
fimull
insb
lret
repnz
sub
mov
mov
adc
cld
mov
sub
cmpsb
call
lret
mov
inc
fldcw
mov
and
push
ds
pop
std
push
js
jnp
outsl
ret
adc
jns
cmp
outsl
jne
push
pop
loope
inc
mov
scas
sbb
cmp
test
incb
lds
in
push
loope
rcrb
mov
push
int3
movsb
mov
jne
ret
xor
xor
inc
test
idivl
sahf
xchg
sbb
and
mov
insl
ss
int3
xor
clc
add
js
inc
mov
aam
test
xchg
iret
ds
mov
ja
stc
add
sbb
add
xorb
pop
xchg
fadds
iret
mov
ja
dec
jo
es
nop
sbb
pop
pushf
inc
mov
cmp
dec
pushf
jge
into
add
cwtl
in
loopne
mov
ljmp
dec
mov
test
fs
jb
xor
fistpl
int
sti
sbb
cmp
sbb
pop
or
jo
mov
inc
les
xor
cmpsl
mov
nop
mov
xchg
inc
jl
dec
shlb
push
test
cmp
xlat
enter
fbstp
cmp
or
pop
in
pop
xor
lret
ss
idivb
mov
in
pushf
icebp
add
mov
sbb
add
mov
cmp
push
inc
adc
or
sbb
cmp
cmp
insl
js
lea
pop
inc
push
mov
pop
clc
mov
inc
jns
daa
mov
xor
jmp
aam
pop
xor
inc
cmpsl
mov
add
rorb
xor
sti
stos
sbb
in
pop
lds
pushf
xchg
pushw
mov
popf
xchg
jns
jns
test
movsl
repz
push
and
xchg
in
lock
dec
add
iret
and
mov
shlb
loop
jecxz
shl
xor
lea
mov
ja
adc
and
jno
pop
cmp
jb
or
mov
mov
mov
jno
in
dec
lods
mov
inc
mov
and
ret
and
out
sub
xor
out
mov
mov
push
jle
push
test
jg
mov
fwait
jle
aaa
repnz
scas
jo
jo
mov
repnz
adc
dec
lods
and
repnz
testl
or
and
pop
xchg
inc
stc
daa
push
fyl2x
mov
outsb
pushf
dec
inc
add
mov
push
adc
in
inc
loop
aaa
in
inc
push
loopne
mov
pop
sbb
jno
data16
pop
jle
fs
inc
push
jmp
lea
insl
test
mov
mov
dec
inc
imull
arpl
adcb
ja
dec
sbb
and
sbb
pushf
dec
rol
jmp
inc
or
dec
scas
or
testl
repnz
fidivl
lcall
mov
jp
mov
jle
int
sbb
inc
mov
stos
jle
sbb
lock
ss
inc
jg
shrl
fistpl
aaa
test
gs
aam
mov
test
mov
sbb
data16
pop
xor
test
mov
gs
test
adc
bound
push
inc
jne
add
dec
mov
sbb
jle
call
leave
add
lret
les
iretw
dec
stos
std
rol
std
in
pop
daa
xlat
js
mov
xchg
mov
clc
adc
cmc
imul
ret
xchg
int3
ret
push
mov
call
daa
xchg
jo
xor
mov
out
or
jge
and
xchg
pop
test
nop
xor
pop
sahf
ss
int3
dec
std
jecxz
push
rcll
pusha
insb
rep
push
fistpll
cmp
leave
inc
rolb
cmp
ss
stc
dec
cmp
inc
push
lock
dec
int
xor
dec
data16
aad
mov
add
out
mov
ljmp
xor
in
lahf
mov
rcl
jbe
mov
add
mov
add
push
sub
mov
mov
and
aad
fadd
in
scas
outsb
fidivs
mov
fnclex
addb
aaa
fidivl
subb
stos
popf
loop
cwtl
adc
cmpsb
roll
popf
xor
jmp
cmpsl
xchg
stc
out
out
push
ss
ret
je
cld
out
andl
testb
das
fldl
xor
lods
add
push
xchg
lock
push
rorb
mov
mov
test
mov
sub
adc
daa
sub
ja
push
add
cmp
mov
mov
insl
pop
neg
jg
dec
mov
fidivrs
push
and
push
push
mov
xor
jno
aaa
popa
leave
aaa
xchg
clc
push
add
adc
popf
inc
out
xor
lret
inc
sub
in
mov
pop
int3
int
insb
or
dec
xorl
add
clc
scas
cmp
xchg
cmpsl
insb
sub
test
out
loope
mov
xchg
jp
add
xchg
jnp
jb
mov
mov
pusha
test
rcll
negb
jge
das
jl
cli
popa
es
jae
jmp
mov
sbb
pop
arpl
subb
adc
fisttpl
xor
fcmovne
les
and
jmp
mov
fistpl
and
inc
test
nop
ss
push
roll
je
int3
mov
je
jg
mov
inc
push
and
cmp
dec
xchg
inc
int3
js
cmp
mov
mov
lds
cmp
pop
dec
push
sti
dec
jbe
cmp
or
aas
cmp
adc
mov
sbb
xor
loopne
out
jae
js
notb
fnsave
popa
test
nop
mov
add
pushf
xchg
cmpsl
hlt
or
mov
adc
movsl
jno
add
loope
stos
cmp
jmp
test
jge
pop
xlat
dec
je
adc
cs
loopne
or
imul
icebp
inc
in
icebp
lods
mov
lret
jge
je
xor
mov
cmp
sub
leave
jge
and
xchg
add
jb
cmpsl
fdivrl
int3
xchg
pushf
push
pop
mov
in
pop
jmp
xchg
sbb
add
lcall
push
into
andl
nop
mov
xor
mov
dec
cmp
lahf
lret
or
xlat
mov
add
jo
outsb
test
inc
xor
movb
in
gs
loopne
outsb
lea
sub
xor
ret
inc
push
ds
push
inc
xor
inc
sub
cli
lret
aaa
ljmp
mov
push
xchg
cmp
aaa
je
test
js
adc
jb
sub
mov
push
jae
mov
push
cli
xor
faddl
cmc
cmp
pusha
mov
xorl
jb
mov
pop
pop
stos
dec
repz
mov
sti
mov
or
or
pop
in
mov
ret
sbb
or
fisubrs
lahf
sbb
imul
clc
lret
dec
dec
in
lret
mov
cwtl
inc
mov
out
xchg
sbb
jbe
pop
mov
mov
fucom
fdivrs
aaa
jg
inc
lret
addr16
push
dec
and
sub
fdiv
lods
cmp
dec
out
icebp
jo
mov
adc
repz
xchg
movsl
push
xchg
mov
addr16
movsl
sub
pop
test
mov
xor
inc
sub
dec
jnp
cmp
lahf
adc
sbb
fdivs
outsl
inc
in
jge
dec
pop
xor
into
xor
jo
inc
sub
cltd
loop
pushf
ss
jge
push
xlat
xchg
pop
xlat
int3
lret
and
sub
xchg
mov
or
push
sti
xchg
aam
or
rcrl
jge
dec
jns
lcall
lds
xor
in
das
xor
mov
fcmovnbe
cltd
in
or
mov
add
aad
ja
push
pushf
push
inc
inc
shrb
push
jmp
lahf
push
rcll
out
xchg
imulb
pop
daa
fs
add
imul
out
ss
sub
icebp
dec
jle
xchg
shll
or
scas
xchg
jle
sub
out
mov
jp
xor
daa
insb
in
push
sbb
lret
je
fwait
xchg
stos
ljmp
dec
add
shrb
stos
sarb
fistpl
xor
adc
fisubl
xchg
sbb
xchg
sbb
xor
das
fadds
das
jecxz
int
or
mov
jg
stos
push
jle
jg
jo
out
mov
fs
loop
mov
test
imul
daa
popl
dec
iret
cltd
out
leave
fcoms
fxch
jmp
aaa
pop
cmpsl
mov
dec
shl
jl
push
stc
cltd
out
xchg
scas
push
stos
int
mov
lahf
ret
jnp
mov
bnd
adc
xchg
aas
aam
lret
adc
mov
movsl
in
arpl
cmp
add
cmpsl
clc
shrb
mov
outsl
xchg
mov
push
ds
lock
jns
lret
xor
xlat
mov
outsl
mov
mov
mov
xor
and
dec
inc
dec
mov
int3
xor
test
mov
dec
mov
cmp
gs
es
les
mov
rcl
out
cmpsb
dec
daa
bound
or
jae
ret
and
inc
jne
xchg
repz
xor
and
cmp
fmull
xor
pop
test
cmp
pusha
push
or
dec
mov
jno
rcl
out
inc
popa
mov
hlt
dec
sub
jo
scas
es
dec
cmpsb
lahf
xor
stos
xchg
das
mov
or
sub
fdivs
fstpl
mov
pusha
pusha
xchg
xchg
fildll
sub
cmp
push
dec
aas
mov
xchg
sub
je
or
pop
cmpsl
push
imul
ret
pop
iret
fistps
out
mov
insb
hlt
jbe
decl
sub
mov
mov
jnp
adc
dec
add
sbb
in
cmpsb
cmpsb
popa
int
jnp
jne
mov
adc
scas
dec
mov
cmp
jmp
insb
shll
loop
bnd
jb
add
adc
pusha
out
and
xor
cld
std
popf
and
lds
loope
cmp
dec
inc
mov
ss
insl
pop
and
int
cwtl
sbb
ss
xchg
push
jmp
rcrl
sub
jecxz
jne
mov
daa
sbb
inc
cli
hlt
xchg
push
pop
fstpt
mov
dec
sti
out
fs
sbb
push
sub
mov
push
cmp
rorl
add
jecxz
mov
xchg
cmp
jbe
das
or
or
or
xlat
ficomps
call
imul
jns
cmc
sub
popf
pop
hlt
lea
mov
inc
frndint
movsl
xchg
jp
sbb
dec
imul
and
hlt
and
cmp
test
nop
insl
ret
or
or
dec
sub
scas
jbe
mov
ss
cltd
mov
and
fildll
mov
sbbl
jae
faddl
mov
xor
out
or
adc
sub
mov
mov
add
cmpsb
shll
aaa
fst
cld
or
dec
xchg
in
xor
jbe
push
dec
mov
bnd
sbb
addb
testb
jb
lds
adc
in
aad
mov
stos
fldl
jae
test
arpl
mov
fdivrl
ss
std
push
jecxz
das
addr16
adc
xor
ljmp
sub
dec
cwtl
cwtl
mov
sub
loop
push
jae
jb
adc
mov
fstps
add
pop
jno
mov
pop
add
mov
mov
lret
into
cltd
dec
add
cmp
xchg
push
subb
lret
jae
mull
jns
mov
pop
sbb
mov
aas
cmp
mov
xor
inc
outsb
test
add
repnz
pop
test
xchg
push
stc
lcall
inc
dec
inc
push
in
mov
mov
inc
dec
jmp
cli
pop
ja
xchg
fwait
clc
lahf
cmp
add
shrl
out
mov
sbb
pop
push
in
test
push
test
stc
mov
cltd
adc
out
xchg
jecxz
jecxz
fstl
jp
pusha
stc
push
ficoms
aas
or
pop
test
xor
in
inc
xchg
cmpsb
sti
mov
out
pop
cmpsb
xor
mov
xor
repz
xor
outsb
push
mov
les
push
mov
inc
popa
xor
sub
pop
out
add
fdivrl
mov
leave
push
hlt
sub
ss
adc
imul
lock
jg
jge
pop
into
mov
pop
inc
scas
vfrczpd
and
pop
jns
mov
test
mov
push
cmc
loope
ljmp
mov
dec
mulb
mov
lock
hlt
dec
outsb
pusha
scas
lock
in
push
inc
addl
out
and
int3
mov
pop
daa
testl
sub
sub
mov
mov
and
and
aad
ja
arpl
sub
or
and
adc
xchg
inc
dec
mov
das
adc
outsb
mov
daa
loope
mov
jns
movb
mov
add
dec
ljmp
inc
and
push
in
ds
imul
dec
in
fucomi
lods
mov
cltd
pop
xlat
daa
jp
mov
pushf
jg
leave
addr16
roll
dec
jo
ret
pushf
leave
stos
mov
in
testb
jp
inc
jne
shrl
cmpsl
add
jmp
fistpl
jae
imul
push
inc
dec
imul
sbb
lcall
mov
mov
push
adc
push
push
out
push
jno
data16
jnp
int
lret
jl
push
adc
sbb
xor
xor
push
and
bound
fcoml
movsl
fwait
dec
les
test
aas
leave
test
pop
gs
lret
stos
call
inc
push
inc
fists
test
xchg
mov
adc
ja
loopne
dec
subl
arpl
insl
pop
test
and
sti
cmp
arpl
pop
pusha
mov
fwait
popf
fidivs
shlb
sbb
dec
in
sub
sub
imul
mov
push
popa
jge
lahf
sub
jg
icebp
sub
sbbb
call
cs
lea
fsubrl
mov
pop
in
outsb
xchg
dec
out
sbb
push
adc
lds
jae
pop
pop
and
fidivrs
jge
test
ret
aam
pop
add
das
or
loop
mov
push
leave
dec
pop
sbb
add
in
jno
pop
mov
loope,pn
mov
mov
test
or
shlb
or
push
cli
mov
add
or
mov
or
fstl
jno
sub
mov
sbb
adc
mov
mov
insb
arpl
outsl
fidivrs
mov
lods
xor
cmp
insl
xchg
mov
ja
sub
inc
daa
scas
test
push
jnp
jns
ja
jne
mov
mov
dec
mov
add
cwtl
or
cld
xchg
das
shll
sub
push
inc
mov
adc
into
or
int3
gs
fwait
bound
mov
cmp
pop
lret
mov
pop
pop
ret
enter
push
cs
adc
xor
arpl
shr
ja
pop
frstor
jle
cld
xlat
dec
mov
lret
mov
outsl
arpl
jnp
add
pop
add
popa
mov
or
repz
jnp
push
dec
jne
mov
pop
mov
and
mov
or
mov
insb
jecxz
sbb
int3
imull
sub
jbe
inc
inc
xlat
pusha
imul
bound
mov
movsl
lods
sub
stos
xorl
es
insl
add
imul
adc
push
push
imul
and
push
push
cmpsb
into
divb
lahf
fs
sarb
dec
mov
cmp
icebp
adc
cmp
jb
sbb
fdivs
and
leave
icebp
xchg
into
mov
xchg
hlt
int
adc
or
fcomps
adc
sarb
arpl
fldcw
dec
push
shl
pop
fcoms
cld
je
xor
leave
jns
or
clc
adc
cwtl
pop
mov
pop
mov
dec
sarl
scas
loopne
mov
cwtl
push
call
inc
pop
add
jns
les
or
xor
or
xchg
test
ret
push
jg
inc
add
mov
fwait
popf
add
jae
sub
hlt
pop
xorl
cmp
cmp
push
pop
stos
popa
adc
test
in
loope
mov
fidivs
aas
out
shr
jno
sarb
jnp
gs
fcoml
lcall
inc
mov
lret
in
dec
fisubrl
xchg
cli
mov
sarl
jo
rolb
and
ret
dec
mov
loopne
jecxz
adc
in
daa
int
inc
jmp
clc
mov
pushf
adc
sbbl
icebp
sbb
dec
bound
jge
repnz
fsubl
or
aam
mov
mov
test
pusha
aad
popa
adc
pop
dec
mov
std
mov
sub
push
out
stos
mov
pop
push
fsubrl
xlat
lret
cmpl
add
dec
or
xchg
scas
xchg
iret
jne
lret
xor
or
push
xor
mov
fstl
mov
gs
lds
xchg
pop
mov
lds
push
stc
push
jno
add
daa
dec
orb
hlt
fdivs
outsl
sarb
pop
xorl
adc
popl
xlat
dec
cmpsb
xor
imul
into
lds
inc
filds
cmc
mov
cwtl
push
cmc
subb
and
mov
xor
jg
div
inc
popf
mov
or
lea
not
xchg
xchg
xchg
push
iret
sbb
xor
jle
push
fildll
stos
jle
out
xchg
jecxz
mov
es
stos
dec
aad
push
mov
mov
test
and
movsb
dec
push
push
fisttpl
jbe
hlt
pop
push
push
add
shrl
popa
popf
mov
outsb
stos
out
pusha
push
mov
cmpsb
test
jns
cwtl
dec
inc
pushf
dec
sti
or
cmc
sqrtps
inc
js
mov
xchg
jle
sbb
hlt
jo
sti
movsb
arpl
xor
scas
adc
loope
jo
xchg
nop
loopne
add
pop
pop
or
fldl
mov
out
add
addr16
fbstp
mov
in
and
cld
ss
mov
mov
jbe
dec
cmc
push
jnp
lcall
add
pop
jge
xchg
mov
in
push
cwtl
rol
jno
fs
sub
and
and
and
lock
xor
push
insb
add
xchg
inc
inc
sbb
ja
jge
xorl
add
inc
mov
aas
cltd
into
xor
adc
pop
add
xor
daa
xchg
add
into
push
stos
enter
fwait
fs
cmp
pop
cmpsl
xchg
notl
pop
mov
pop
test
push
adcb
sub
mov
or
jg
std
and
add
lret
hlt
out
out
lret
fstps
adc
ss
fs
jnp
mov
adc
mov
mov
ror
dec
adc
sub
aad
and
adc
lret
sbbl
pushf
movsl
sti
inc
mov
fisttpll
cmp
fldcw
xchg
out
and
rcr
movsl
cltd
loop
pop
inc
leave
test
test
mov
pop
sbb
xchg
in
loopne
sub
or
push
aam
jg
sbb
jae
jp
rorb
xchg
std
pop
mov
lods
adc
sahf
mov
lods
repnz
and
inc
popf
inc
sbbb
repz
mov
stc
mov
mov
mov
pop
mov
jl
add
mov
cmp
mov
mov
mov
xchg
cmpb
and
xorl
andl
inc
ja
pop
cmp
aaa
mov
jl
mov
inc
ja
pop
add
push
loope
mov
add
cmp
sub
in
xchg
sti
jmp
jp
and
push
sbb
mov
repnz
cmp
stos
clc
pop
jle
ds
push
mov
pop
sahf
cwtl
cltd
xor
push
mov
ss
sub
jecxz
scas
or
in
jae
push
mov
inc
pop
shll
dec
lock
sbb
mov
mov
daa
scas
in
and
pop
jp
pop
push
js
xor
push
mov
add
mov
icebp
dec
cld
aam
ret
ficoml
push
ror
in
jnp
push
mov
jl
idivl
inc
mov
sub
inc
std
adc
xchg
iret
add
aas
out
push
mov
negl
pop
cs
ficompl
aas
ss
mov
and
or
lahf
cmp
fmuls
dec
mov
sub
adc
cmpsl
repnz
push
xchg
orb
in
adc
add
and
movsl
or
xchg
ja
push
scas
push
std
xor
pop
dec
orb
jmp
and
hlt
or
in
cmp
pop
out
lds
inc
cmp
xor
mov
das
adc
mov
fs
leave
std
dec
mov
sti
mov
jl
mov
in
dec
in
mov
jmp
mov
inc
cmp
fldcw
sbb
stos
movhps
mov
rol
and
cmpl
popf
pop
fistl
jno
popa
cli
insb
leave
push
xchg
sbb
aaa
stos
sbb
add
add
and
repz
insl
es
cmpsb
lahf
sub
xchg
or
dec
sub
insl
jg
pusha
jge
push
orb
mov
cmp
test
fisttpll
jb
mov
fldt
lods
hlt
mov
inc
mov
adc
jl
aaa
or
shll
dec
and
xor
mov
repz
paddusb
lahf
mov
push
daa
sub
test
xchg
leave
es
lods
inc
lfs
idivl
les
xchg
sub
movsb
mov
cmp
fcomp
roll
gs
sbb
dec
loope
inc
adc
push
push
add
mov
aam
jbe
mov
sub
ss
dec
fbld
lahf
decl
arpl
pop
mov
fadds
mov
lods
adc
push
mov
shlb
movb
stc
inc
call
psrld
push
push
std
mov
adc
mov
ret
cwtl
pop
leave
repz
or
loopne
scas
sub
push
mov
jge
pop
insl
sub
pop
popa
ret
sbb
lods
xor
imul
xor
sub
xchg
sbbb
test
lcall
xchg
mov
push
pop
xor
aas
pop
aas
sub
sub
je
or
lahf
fistps
lahf
sub
mov
sbb
mov
popa
xor
sub
inc
insb
mov
and
addr16
sti
cs
pop
adcl
xchg
xchg
cld
xor
push
inc
test
lcall
fwait
hlt
xor
js
sbb
negb
mov
lods
sub
cmp
jbe
pop
xchg
adcb
int3
testl
mov
pop
enter
or
aam
inc
pushf
shlb
and
mov
push
loop
ja
mov
inc
cmpl
loopne
imul
in
in
insb
mov
repz
pop
lea
into
dec
clc
and
sahf
push
push
push
push
dec
dec
js
icebp
rcll
call
or
mov
cli
lds
test
popf
pop
sub
push
adc
aaa
aaa
and
xor
repnz
push
int3
adc
sub
fcmovnbe
jae
fstpl
repz
inc
ljmp
dec
jb
mov
jnp
shrb
sub
and
jmp
push
sbb
sub
inc
aas
scas
or
inc
dec
mov
lret
or
out
repz
mov
pop
repnz
in
sub
adc
out
insb
daa
sub
dec
push
xor
out
jo
mov
in
or
push
jae
mov
pop
add
inc
xchg
arpl
lock
inc
xchg
ficoml
mov
popa
ljmp
iret
and
std
xchg
pushf
xor
mov
insl
gs
pop
and
mov
vpmacsdqh
jns
cs
lods
and
in
insl
movsb
xor
rolb
loope
sbb
std
popf
or
stc
pop
jmp
inc
jg
or
jge
hlt
cmp
inc
xor
outsb
ret
and
push
sub
push
sub
aaa
mov
jle
fldcw
movsb
add
jl
sub
mov
xrelease
push
dec
jb
sbb
fs
imul
jns
loopne
leave
daa
push
faddp
jmp
cltd
sahf
cmp
add
jmp
bound
cmp
roll
adc
mulb
add
jo
nop
addr16
pop
inc
lcall
stos
js
push
cmpsb
sub
addr16
ss
sarl
mov
and
int
mov
xor
fdivl
decl
xchg
mov
xor
fldenv
incl
mov
rcrb
sub
cld
mov
xchg
decb
mov
pusha
jg
and
xchg
call
add
test
int3
mov
outsl
into
out
lds
pushf
pop
das
std
pushf
aam
and
cmp
sbb
out
dec
lea
mov
imul
nop
cltd
sub
and
inc
outsb
sbb
arpl
aad
ja
xchg
and
mov
je
test
jae
es
jae
sbb
imul
repz
lcall
or
xor
ret
lea
cwtl
fs
xchg
xor
jno
jns
data16
fistpl
mov
pushf
aam
gs
mov
dec
mov
imul
push
test
test
inc
or
lock
es
jg
jecxz
dec
enter
dec
adc
adc
inc
mov
inc
cli
jno
jae
aam
aam
shll
push
cmp
sub
orb
lret
mov
jb
mov
mov
negb
cmpsl
bound
dec
push
scas
inc
xlat
push
ss
bound
pop
repz
cmp
mov
fwait
jecxz
scas
and
mov
imul
jmp
jle
out
movsb
mov
aad
sbb
hlt
or
pop
aaa
mov
jb
nop
xchg
sub
adcl
jns
jno
fnsave
push
pop
pop
pop
sbb
mov
sub
aad
insb
sbb
aaa
ret
ret
and
inc
xchg
out
in
sub
inc
pop
add
pop
gs
xor
add
ficoms
cmpsb
adc
or
mulb
sub
or
lret
or
iret
adc
sbb
leave
pop
push
fmul
inc
lcall
jae
mov
insl
pop
pop
scas
mov
scas
cmpsb
in
lock
and
int
mov
mov
pop
jo
loop
test
xchg
in
pop
out
adc
rep
sbb
add
out
addr16
add
add
or
or
imul
add
push
testl
xor
inc
xlat
adc
outsb
js
jb
mov
inc
mov
in
lcall
mov
jl
cmpb
inc
push
out
fimuls
ret
jg
jl
inc
ljmp
mov
out
cmp
jo
push
lea
out
mov
fwait
or
daa
or
cmpsb
inc
dec
xchg
mov
sbb
xor
pop
mov
lret
in
mov
repnz
cmp
leave
xor
cmp
sub
iret
subl
push
wbinvd
push
mov
mov
inc
push
rclb
xlat
lea
sti
jmp
fnstenv
ljmp
mov
cmpsb
jns
les
aaa
leave
ds
test
imul
sar
xor
xor
xor
jmp
pop
push
mov
aam
imul
mov
jmp
bound
or
and
fcmovb
jae
sub
notb
nop
sarl
pop
js
or
div
in
ret
mov
pop
or
out
adc
mov
icebp
fildll
cwtl
dec
das
push
xchg
arpl
mov
dec
mov
in
mov
repz
sbb
hlt
mov
and
push
shll
push
jns
xor
sub
bound
xchg
out
inc
mov
sbb
addr16
sub
inc
mov
xchg
shl
jnp
xchg
xor
mov
push
cmpsl
and
aaa
jno
xor
cld
inc
adc
sub
fwait
idivb
inc
je
bswap
dec
adc
sysret
aam
jo
adc
xchg
cs
in
js
xchg
out
jge
xor
xlat
mov
add
repnz
jbe
ret
sub
fiaddl
repnz
sub
loop
inc
fcom
adcl
inc
add
cmp
orl
into
jae
xchg
mov
or
imul
js
cs
mov
mov
sub
fstpl
and
fcomp
xchg
int
cli
xchg
mov
repz
cmc
dec
out
fadds
fistps
pop
lea
std
daa
dec
sarw
xchg
push
jg
mov
inc
loope
push
xor
popa
aaa
aad
jp
xchg
sbb
sbb
dec
xor
inc
arpl
lcall
and
jbe
add
stos
aas
cs
xchg
sub
mov
lret
jo
mov
dec
inc
jno
repnz
cli
or
mov
jne
mov
out
sbb
scas
mov
xchg
xchg
xchg
sti
enter
sub
jb
pop
dec
andb
add
xor
lret
jns
sbb
push
inc
insb
outsb
orl
fists
das
or
or
push
ret
jg
jge
addb
xchg
add
xor
mov
pop
jecxz
xor
cli
xchg
mov
adc
cmc
in
sub
fbstp
push
and
push
test
sbb
push
xchg
dec
pushl
mov
xor
jl
fldl
jmp
mov
push
rorl
aaa
push
sti
push
and
sahf
mov
loope
cli
in
sahf
pusha
idiv
popf
addr16
sahf
out
push
push
call
ja
pop
xchg
jp
and
xor
adc
pop
inc
in
movsb
imul
mov
fucomip
std
xor
addr16
mov
pusha
scas
lds
out
mov
out
insl
insl
xchg
xor
cmc
xor
pusha
push
pop
aad
adc
test
pop
adc
mov
imulb
dec
fiadds
cwtl
push
repz
adc
sub
jp
out
mov
adc
cmovge
jecxz
jle
imul
inc
push
repz
daa
fidivl
fnstcw
cmpl
pusha
push
sub
popf
fimull
jo
sub
fistl
jle
jns
nop
pop
movnti
stc
stc
xor
sub
mov
mov
pop
clc
jbe
sti
jns
pop
push
sub
inc
ljmp
popf
and
or
testb
leave
sahf
jmp
in
lods
inc
addr16
cltd
es
xor
sub
sar
imul
and
add
xchg
out
xor
das
mov
out
lock
cmp
jo
inc
cmp
iret
fisttpl
jmp
pop
into
xor
repz
bound
pop
aas
addl
test
popa
lea
ja
xchg
push
push
ja
inc
cmp
ret
sbb
mov
mov
insb
and
mov
inc
dec
andl
mov
ss
mov
jne
add
test
adc
lods
int
aaa
xlat
int3
jl
je
mov
out
or
fistpl
sub
aaa
push
pop
inc
test
insb
movsb
cld
stc
xor
test
mov
mov
pop
icebp
cmp
push
xor
xor
aad
dec
clc
add
inc
repnz
insb
adc
out
dec
iret
or
stos
fisubrs
or
insb
mov
mov
insl
imul
fcoms
push
loop
pop
insl
int
inc
cmc
hlt
mov
jbe
push
lods
scas
lcall
decb
fwait
push
cmpb
push
mov
dec
fidivrl
push
mov
pop
or
adc
es
and
ja
repz
cld
pop
ret
cmc
rcr
mov
lret
fcoml
mull
mov
inc
andl
incb
xor
lcall
sbb
test
aaa
xchg
mov
loopne
movsb
sub
jns
bound
xchg
or
out
repz
dec
iret
fwait
cmp
jo
dec
pop
add
sbb
sti
insl
cld
jge
in
aam
and
cmpsb
jb
push
xchg
das
or
jnp
cltd
dec
inc
fwait
enter
sbb
repz
inc
sbb
xor
int
push
mov
push
sub
faddl
shlb
mov
js
les
loop
lret
push
bound
inc
push
cs
sub
mov
mov
xlat
pop
out
incl
out
arpl
cltd
shll
mov
js
inc
es
add
in
xchg
inc
push
test
jae
mov
push
xlat
push
sti
fsubs
ja
mov
mov
mov
cmc
add
adc
sbb
cld
loope
sub
das
add
or
xor
push
dec
adc
xor
inc
in
idivb
dec
std
lret
push
insb
sbb
iret
int3
sub
test
aad
xor
out
out
movsl
scas
pop
fldcw
dec
loope
mov
sbbl
adc
xchg
xchg
or
push
dec
loopne
leave
inc
jl
mov
or
popf
pop
pop
cld
jp
mov
push
lods
aad
int3
jmp
jge
jmp
mov
pop
inc
or
mov
insl
bnd
imul
dec
jmp
inc
scas
push
icebp
hlt
jne
cmpsb
xor
stos
bound
je
add
mov
push
xchg
das
mov
call
or
xor
call
and
daa
and
aam
and
out
xlat
xor
not
add
mov
sub
jns
and
icebp
cmpsb
xchg
es
jp
mov
adc
inc
lods
loope
push
ret
out
ja
test
mov
cmp
ja
insb
orl
lods
mov
adc
mov
jmp
mov
nop
push
pop
xor
mov
out
dec
jp
mov
jbe
out
pop
push
ffreep
lahf
mov
sbb
sbb
and
ficomps
add
aam
js
jl
in
xor
aad
add
dec
push
test
imul
inc
adc
stos
cld
or
add
pushf
cmp
data16
xor
fcmovne
add
add
jmp
test
sbb
clc
inc
sbb
rcrb
push
out
notb
mov
scas
hlt
sub
mov
push
adc
push
scas
inc
mov
cmp
adc
mov
sbb
lret
xor
lret
pxor
mov
pop
lods
cmp
cld
ss
dec
scas
repz
or
mov
push
ljmp
lods
add
pop
jnp
pop
add
inc
hlt
push
mov
mov
xchg
adc
imul
fidivs
pushf
test
cli
dec
in
jp
cmp
jmp
loop
fwait
es
pop
xor
dec
push
outsb
mov
lret
out
je
inc
or
sbb
push
sarb
sub
sbb
not
or
and
mov
adc
dec
ss
into
js
jle
push
inc
add
adcb
mov
adc
loopne
xor
ss
ret
ret
fsub
repz
mov
mov
ljmp
lods
dec
cwtl
orl
es
push
fistps
xchg
lret
test
mov
pushf
inc
stos
push
xchg
stos
xlat
out
test
xchg
cmp
jmp
xor
cwtl
loop
scas
loopne
mov
lods
pop
mov
cmovp
push
and
xchg
enter
mov
mov
ss
nop
iret
pop
sub
fistpll
filds
outsb
mov
ret
arpl
bound
inc
stos
or
xor
sub
xlat
sub
out
jecxz
fs
mov
fcmovnb
mov
add
sarb
dec
lds
inc
pop
out
popf
mov
xlat
or
lsl
jecxz
lcall
scas
mov
dec
xchg
jo
nop
loopne
into
gs
or
xchg
inc
xchg
adc
rol
loopne
dec
incb
mov
push
cmp
cld
adc
inc
into
adc
add
dec
pop
add
cmpsb
sbb
sbb
mov
jecxz
mov
mov
adc
stc
xchg
mov
mov
mov
sbb
dec
cmp
push
shll
int
lds
jns
dec
aam
xchg
push
mov
daa
iretw
xor
xchg
ss
and
sahf
mov
sbb
jl
pushf
or
imul
aad
push
cmp
test
outsb
test
pop
movsl
imul
adc
movl
mov
jle
sti
mov
sqrtps
lea
mov
adc
cltd
nop
pop
add
cltd
pop
cli
rcr
std
or
sub
outsl
lods
call
mov
inc
clc
jg
adc
xchg
dec
popa
lock
mov
xor
std
xor
insl
or
mov
and
dec
mov
xchg
jno
aam
fs
into
mov
inc
mov
xchg
pop
mov
add
movsl
std
dec
in
cmp
cli
fsubr
sahf
hlt
inc
sti
jae
shrb
jl
dec
cmp
mov
js
pop
pop
lods
xor
stos
in
cld
or
add
jnp
test
mov
adc
and
xchg
sbb
push
dec
push
xchg
dec
push
idivl
pop
xor
push
add
mov
popa
fldt
hlt
rol
mov
mov
mov
mov
jae
mov
sbb
mov
xor
lahf
mov
push
fbld
jno
push
cmc
test
cli
jg
inc
lcall
stos
xchg
or
mov
mov
mov
mov
jecxz
jge
xchg
scas
std
mov
insl
mov
cmpsl
idivl
decb
rclb
jnp
and
gs
push
stos
lods
sti
and
mov
mov
cld
movsb
or
cmpsb
rclb
xor
xchg
fnsave
daa
adc
jns
cmpsl
mov
inc
popa
jmp
daa
push
mov
int
or
inc
mov
imulb
loope
out
scas
xlat
mov
leave
jne
outsl
outsl
adc
cwtl
rcr
imul
fisttpll
arpl
das
sbb
std
xchg
hlt
dec
rcll
dec
push
out
pop
ret
sarl
fisubrs
push
ficoms
dec
xor
mov
ss
iret
arpl
pop
das
push
shll
repnz
mov
sbb
inc
add
sub
or
loopne
dec
fwait
adc
test
sub
pushf
jge
sub
inc
push
aas
dec
push
gs
lea
int
cltd
pop
cmp
scas
adc
cmp
int
cld
inc
imul
fnstcw
or
into
push
cmc
test
push
xor
mov
mov
inc
jnp
sub
mov
push
movaps
jno
cmp
sbb
sbb
push
jecxz
mov
lahf
lods
test
jmp
int
enter
imul
mov
cwtl
mov
sub
adc
jp
cltd
sub
push
jae
je
ljmp
fsubrl
cmp
test
xchg
and
pushf
and
mov
pop
data16
add
adc
jnp
pop
xchg
xchg
pop
pushl
mov
testl
imul
das
adc
ds
mov
and
add
leave
es
call
shlb
push
xor
cmp
dec
cwtl
aaa
jle
cs
out
adc
out
sarb
loop
std
mov
imul
dec
sahf
daa
insb
dec
fwait
leave
pop
mov
rorb
fs
mov
jnp
jg
or
add
jecxz
add
iret
add
clc
sbb
pop
leave
stc
cmpl
or
mov
in
cli
ret
sub
cltd
cmpsb
mov
or
add
iret
ljmp
out
fs
pop
cmp
sti
xchg
jae
sti
clc
or
in
ficomps
lods
pop
rcrb
popa
dec
push
adc
lods
add
mov
dec
mov
push
cs
adc
shll
jnp
sub
andps
cmp
mov
jo
push
shrb
or
pop
dec
out
leave
iret
dec
xchg
std
loop
cmp
mov
push
fbstp
leave
dec
pop
les
lcall
mov
arpl
rorl
mov
mov
or
imul
mov
sahf
aam
pop
xchg
jae
movsl
hlt
xchg
in
push
fs
lcall
cld
sub
xchg
fidivs
sub
sbb
mov
arpl
test
into
jb
mov
dec
xchg
test
jmp
ret
jg
loop
test
lds
xchg
push
ret
sub
xchg
xor
mov
movsl
test
int3
or
mov
pop
lcall
or
pop
shl
es
ficompl
gs
sarb
lea
mov
jmp
dec
inc
pop
movsl
inc
lea
in
adc
test
ljmp
mov
lock
rcl
shrl
fcmovnb
or
cmc
rol
inc
jne
or
pop
hlt
jns
push
lcall
jb
fldl
sbb
mov
dec
jmp
cld
lea
pop
sbb
jmp
sbb
leave
cmp
fs
cmpsl
int3
mov
jge
adc
mov
into
incb
or
cmpsl
in
fidivl
inc
test
lea
sbb
cmpl
jns
sub
js
push
fbld
or
pop
xchg
leave
ret
and
popf
mov
cmpl
sbb
inc
cmc
mov
lock
or
ds
jl
fs
push
rcrl
rcrb
add
jecxz
adc
stc
stos
scas
ret
push
sbb
pop
out
das
jge
sbb
add
roll
adc
sub
jno
mov
mov
dec
dec
xchg
mov
test
imul
mov
jb
jnp
dec
or
dec
inc
test
mov
mov
xchg
sbb
mov
mov
fcomps
in
inc
lea
mov
adcl
xor
cmpsl
sub
mov
push
cwtl
outsl
push
lock
out
clc
push
xchg
cmp
or
mov
add
cmp
roll
jp
js
lea
cmp
dec
sub
pusha
ja
cwtl
and
pop
sti
stc
lods
fs
jbe
inc
lods
push
pop
jno
stos
jbe
pop
in
into
sbb
mov
sub
test
adc
je
ficomps
jnp
out
pop
daa
mov
cmp
sbb
cmpsl
out
out
add
out
pop
sbb
les
or
push
adc
rcll
repz
xchg
mov
shrb
mov
in
xchg
dec
push
mov
mov
or
adc
adc
lds
cmpsb
out
int3
xor
movq
mov
movsb
inc
adc
pop
call
mov
mov
insb
dec
fcmovne
hlt
test
out
push
lods
pop
push
fsubp
repz
xorl
insl
aad
xor
pop
cmp
jecxz
push
push
stos
ljmp
sbb
orl
loopne
lahf
ret
sbb
fucomip
aas
mov
add
add
ffreep
sub
clc
add
or
pop
xchg
adc
sub
mov
and
dec
das
or
js
mov
mov
lods
xor
shll
sbb
divl
adc
sbb
pop
mov
push
js
dec
fildl
ror
cmp
aaa
jmp
adc
cs
repz
push
lcall
ljmp
decl
mov
ss
mov
div
mov
lcall
cltd
in
dec
repnz
popa
pushf
and
cmp
dec
testb
shrb
enter
pop
data16
nop
and
lock
rol
loop
clc
dec
lret
adc
inc
les
hlt
push
mov
mov
xor
jo
fidivrl
jae
inc
inc
sub
push
js
daa
push
mov
dec
ror
jo
push
adc
lret
push
dec
lock
lock
sub
pop
cmpsl
jl
nop
pop
ret
xlat
sbb
add
sub
sbb
lock
inc
jl
jbe
xchg
stos
imulb
push
mov
lds
outsb
loop
adc
pop
scas
push
add
fdivs
mov
imul
pushf
xor
out
jo
add
out
mov
lret
xchg
addl
test
cli
lock
aad
test
xchg
add
xor
xchg
fdivrs
inc
cmpsl
lcall
inc
setge
incb
andb
add
popa
jmp
flds
mov
lods
jle
cltd
test
push
mov
out
mov
push
adc
jo
xor
lock
aas
jecxz
add
test
and
lret
fmul
push
vandnpd
lahf
cld
push
and
cmpsb
ret
inc
add
movl
cltd
mov
test
or
test
mov
stc
mov
dec
ds
jmp
xlat
mov
dec
add
ljmp
lret
jecxz
pop
add
mov
ds
add
sbb
cmpsb
inc
xchg
sub
rcr
or
fnsave
pop
pop
imul
cmp
push
push
aaa
push
mov
add
pop
xor
cwtl
dec
and
xchg
or
mov
fcompl
inc
inc
std
cmp
aaa
add
sub
or
or
fistl
popf
sub
shll
pop
in
adc
adc
outsb
mov
and
sub
sub
sub
mov
push
mov
mov
push
mov
sub
pop
cmpsl
outsl
lret
cld
pop
mov
fistps
cld
int3
addr16
push
pop
stc
mov
mov
add
xchg
lcall
test
test
pop
xchg
push
lret
mov
lahf
fdivrs
scas
test
fwait
cmp
movsl
pop
leave
roll
into
adc
imull
sahf
xchg
pusha
push
sbb
xlat
dec
movsl
mov
xchg
test
xchg
mov
pop
push
mov
dec
xor
or
testb
cld
fistps
or
push
cwtl
jb
outsl
andb
out
xchg
dec
scas
ret
mov
je
lret
xor
jmp
icebp
cmp
adc
pop
ja
mov
cwtl
dec
popf
das
add
call
outsl
std
adc
add
in
add
mov
sub
mov
sub
into
movsbl
mov
subb
cli
repz
lds
or
fbld
cmp
xchg
push
inc
xchg
and
nop
or
xor
cmpsb
cli
dec
das
adc
out
add
movsl
das
mov
in
mov
fwait
ljmp
pop
loopne
je
mov
fnstenv
adc
sbbl
sahf
push
xchg
pop
fstl
shll
fmull
js
cmpsl
jecxz
inc
xchg
sub
popf
jb
cmp
mov
mov
rorb
mov
fists
or
mov
clc
mov
sub
into
add
dec
inc
pop
fstps
push
dec
push
push
shrb
ffreep
aas
dec
xchg
subb
stc
ss
and
sbb
inc
xchg
sub
xchg
sub
mov
into
xchg
lea
jle
jmp
sbb
xor
ljmp
iret
stos
dec
repz
ret
xor
mov
mov
or
adc
pop
sub
jbe
icebp
sbb
rcll
movsl
inc
repz
in
dec
or
push
arpl
into
cmp
inc
sbb
pop
jmp
insb
mov
stos
adc
ret
ds
mov
and
rcrb
push
jbe
js
aad
dec
testb
or
lea
clc
bound
jae
cmpsl
fidivrs
cmpsl
lcall
push
or
pminub
dec
sahf
cmpsl
or
push
testl
inc
mov
mov
mov
inc
cmpl
pop
push
sub
cmc
adc
xchg
shlb
or
cmp
jne
imul
and
lcall
xorl
mov
notb
rcrl
sub
dec
daa
lcall
cmp
imul
dec
out
or
les
dec
mov
xchg
inc
sub
and
inc
sub
repnz
fwait
idivl
je
fsubs
or
test
lret
lds
stos
xchg
xchg
mov
in
adc
fwait
test
mov
inc
cmc
hlt
lret
arpl
insb
dec
mov
jl
scas
xor
dec
sub
xchg
sub
push
adcl
mov
pop
mov
andb
scas
int3
inc
loope
adc
nop
in
sub
mov
nop
fdivl
pop
adc
leave
mov
cwtl
pop
or
mov
scas
inc
imul
or
lock
jecxz
popl
cmpsb
fsts
mov
fidivs
fisttps
aam
xor
dec
xor
xor
in
fs
cmpsl
xchg
pop
in
lret
cs
push
sub
cs
cli
mov
xchg
mov
xchg
mov
aam
test
cmc
data16
cmp
movsb
or
mov
cmp
call
inc
in
push
pop
test
fcomps
adc
sub
ds
js
sarb
stos
mov
sbb
ret
dec
dec
jb
mov
imul
inc
clc
gs
insl
jae
inc
xchg
arpl
pop
sub
mov
inc
and
dec
jp
jb
aaa
or
mov
xor
pop
or
cmp
in
mov
hlt
add
insb
or
xchg
adc
dec
leave
dec
cmp
ret
test
inc
xor
or
mov
imul
pop
cmp
jns
std
xchg
sti
cs
rclb
shlb
adc
out
cli
add
inc
loop
icebp
mov
mov
aaa
dec
jmp
rol
stos
int
rolb
outsl
ljmp
pop
das
mov
cmc
out
pop
loope
pop
mov
dec
or
orb
ds
stos
loop
fidivs
xor
dec
push
in
rorb
pcmpgtb
inc
imul
push
jns
push
pop
out
xor
jl
ret
mov
es
rcll
add
xchg
dec
fstl
int
popa
lods
mov
aam
xchg
nop
inc
cld
push
bound
test
fs
add
cmp
jne
into
lock
iret
data16
jb
insb
add
push
outsb
or
stos
scas
pop
jmp
repz
cltd
je
sub
lret
lds
pop
nop
inc
mov
sbbl
rolb
sbb
sar
and
roll
aas
cmc
in
movsb
add
xor
popf
sbbb
hlt
xchg
sbb
incl
nop
cmpsb
mov
and
mov
adc
adc
push
adc
sub
icebp
dec
pop
pop
xor
cmpb
jae
ficoml
adc
aam
jne
lret
mov
ret
pop
testl
sbb
xchg
lea
and
dec
ret
pop
adc
lret
pop
arpl
sti
aas
rclb
arpl
mov
inc
in
inc
rcr
and
fdivrl
in
xchg
jno
into
into
inc
std
xchg
test
aaa
push
ljmp
cmp
imul
imull
scas
int
mov
cwtl
xchg
pop
icebp
aad
push
int
movl
div
adc
mov
pusha
cltd
sbb
inc
push
mov
test
gs
fwait
dec
pop
test
dec
add
dec
jp
iret
jmp
addr16
inc
das
in
repz
xchg
or
add
dec
and
push
mov
sbb
xchg
fnstenv
mov
mov
dec
mov
cld
nop
pop
hlt
inc
sub
push
xchg
or
lret
add
sub
mov
mov
loope
cmc
data16
ret
insl
dec
xorb
sbb
xor
mov
jbe
mov
add
sbb
push
xor
test
aad
dec
test
pop
push
sub
inc
jmp
sbb
mov
jb
call
or
pushf
dec
addb
inc
jl
es
sbb
fdivrl
fwait
jg
imul
xchg
mov
add
mov
rclb
add
mov
shrl
je
fs
inc
lcall
mov
repz
push
das
adc
push
sbb
push
add
ljmp
lahf
pop
mov
call
rcll
jl
and
push
pushf
lods
aas
and
jo
test
roll
inc
lock
jb
push
movsb
stc
sbb
rolb
push
push
adc
mov
dec
repz
lret
sub
roll
fisttpl
mov
outsb
xor
sbb
bound
cmc
sahf
pop
xor
jp
stos
xor
dec
xor
push
test
mov
and
sub
jnp
jb
sbb
ficoms
push
xor
or
jge
xchg
testl
sbb
popf
or
imul
push
and
les
insb
jmp
jecxz
or
sar
test
dec
xchg
adc
inc
cmp
stos
int3
sbb
maxps
cmpsl
sub
popa
aaa
adc
gs
xor
nop
outsl
push
mov
fwait
js
lock
mov
jl
cs
mov
mov
mov
push
adc
push
mov
test
mov
test
inc
cli
out
dec
and
mov
jno
mov
jmp
test
int3
xor
cmpsb
fisttps
cmpsl
in
shl
cmpsl
or
int3
aas
cmpsb
loop
mov
out
std
into
xor
mov
fisubrs
dec
daa
inc
or
mov
mov
add
xor
fwait
jmp
mov
cmp
jns
lahf
adc
shl
or
out
stos
cli
stos
xor
mov
add
and
scas
arpl
cwtl
in
push
mov
insb
jmp
mov
mov
xchg
ja
jmp
inc
scas
jnp
cld
sbb
daa
movsl
insb
iret
inc
adc
hlt
movsb
aas
test
notl
sbb
xlat
mov
test
xchg
mov
je
adc
adc
mov
mov
das
inc
es
cmpb
lods
sbb
pop
lret
fnstcw
mov
jge
or
test
rcll
push
mov
xchg
or
clc
repnz
inc
push
cmp
fimuls
or
or
sbb
add
xor
xor
cs
rorb
leave
out
xchg
and
repnz
mov
pop
adc
xchg
outsl
push
jg
or
inc
imul
rorb
shr
jo
xor
adc
inc
outsl
inc
jnp
dec
inc
insl
loopne
sahf
es
pusha
fldenv
packssdw
mov
sub
int
repnz
out
mov
lcall
adc
sub
fsubs
xchg
and
inc
sti
mov
or
iret
or
lahf
dec
in
nop
inc
sbb
ret
aas
hlt
jg
cmp
jns
call
mov
lcall
mov
and
mov
hlt
xor
test
fmuls
push
or
fisubrs
or
rcrl
shll
addr16
mov
jg,pt
ret
sub
and
ret
test
fistl
xchg
imul
pusha
add
mov
loopne
fwait
xor
push
pop
pushf
lock
fisubrl
jae
xchg
mov
lret
pop
xchg
ds
and
js
inc
sbb
jbe
scas
cmpsl
push
pop
xor
movsl
add
pop
mov
dec
rcll
insl
sbb
cwtl
jmp
addr16
xchg
test
inc
pushf
sti
lods
aad
push
fdivl
jns
mov
xor
cmpsl
test
xchg
mov
sti
jle
aam
ds
std
scas
add
imul
ror
pop
inc
insb
addr16
cmpsb
pop
cmp
pushf
fistl
xor
stc
push
push
mov
outsl
stos
mov
jb
orb
dec
cli
int
stc
das
pop
pop
aam
sbb
inc
adc
push
mov
dec
ror
xchg
lods
cmp
push
inc
ds
sbb
lock
shll
popa
std
mov
repnz
out
gs
xor
jbe
gs
mov
js
jb
stos
jge
dec
sub
lret
stc
into
sub
push
or
lock
xchg
sub
dec
int3
sbb
inc
dec
xor
sbb
sbb
mov
mov
mov
and
pop
add
cmc
lret
xor
clc
adc
mov
aaa
cmpsl
das
mov
int
scas
int
dec
leave
stc
jno
iret
js
dec
out
nop
testb
cmpsb
adc
or
pusha
xchg
jbe
push
loop
lods
aaa
sar
pop
or
adc
int3
stos
push
aas
in
xchg
jge
lahf
movsb
in
mov
gs
or
inc
or
xor
dec
inc
fstpt
push
insb
mov
out
mov
mov
pop
stc
xchg
or
std
push
ja
sub
into
push
push
test
add
dec
add
int3
shlb
push
aas
fucomi
xor
inc
dec
push
out
jmp
and
pop
mov
fsubrs
or
xchg
inc
xchg
pop
xchg
dec
push
cwtl
adc
inc
mov
mov
out
jo
adc
and
loopne
lcall
xchg
add
cmp
jle
push
sub
pop
jge
jo
daa
xor
dec
sarl
scas
pop
stos
cmpsl
jo
add
enter
pop
stc
cmp
mov
popf
sbb
pop
add
sub
ds
cmp
jl
pop
push
adc
mov
pop
in
in
jmp
jb
xor
ret
dec
cltd
mov
xchg
add
cmp
frstor
cld
lock
adc
push
popa
push
fildl
imul
mov
add
and
fistps
roll
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jmp
out
add
outsb
sbbl
hlt
add
enter
popa
rcrb
dec
mov
andb
dec
mov
ss
je
in
into
hlt
aaa
shlb
push
pop
mov
sub
fucom
fstps
lods
ret
sub
aaa
inc
push
add
mov
xchg
push
cmp
loope
outsb
leave
in
xchg
mov
cmp
pusha
dec
inc
in
xchg
xor
and
lea
sub
fs
inc
into
loope
push
sbb
sbb
mov
adc
xchg
xchg
jo
fmull
and
add
out
punpckldq
in
icebp
mov
fldenv
inc
fmull
inc
push
cmp
pop
ret
and
pop
push
pop
jg
iret
dec
or
cltd
push
inc
fisttpl
add
adc
dec
pop
hlt
xchg
fidivrl
aam
mov
scas
sbb
aas
adc
rol
cltd
xor
out
mov
into
lods
xchg
adcb
mov
cmp
mov
je
js
sahf
xor
mov
pop
testl
or
das
int3
inc
ja
fnstenv
jo
scas
jg
xchg
mov
push
xchg
ds
pop
fwait
test
or
imull
dec
cmp
sbb
test
test
test
in
cld
fs
push
shrl
int3
repnz
lods
insl
clc
jecxz
fdivrs
outsb
imul
pop
lods
lret
lcall
jmp
loop
int
jl
addb
mov
pop
pop
int
adc
inc
mov
pop
pusha
lods
mov
xchg
movsb
mov
xchg
fsts
gs
mov
test
xchg
adc
int3
adc
test
aam
leave
lcall
cmpb
inc
mov
std
and
scas
lret
mov
sbbl
fdivrl
rcr
mov
jl
int3
movsbl
aam
xor
or
scas
loop
pop
mov
mov
hlt
rolb
jp
xor
mov
cld
outsb
jnp
push
adc
decl
add
test
and
mov
call
sti
mov
xor
mov
jle
sub
sbb
or
hlt
jl
sbb
les
push
sbb
push
sbb
out
ret
add
jp
dec
in
mov
icebp
and
jmp
push
pop
ret
mov
cltd
test
aas
sbb
aaa
mov
mov
loop
or
adc
pop
in
mov
arpl
fs
push
cmp
jp
out
mov
mov
shrb
xchg
push
mov
mov
dec
jmp
fildll
xchg
sbb
loopne
movsb
or
push
mov
imul
lret
mov
mov
mov
pusha
les
sub
dec
loope
sub
dec
xchg
push
cmp
shrl
cmp
flds
shl
push
lea
push
loop
sahf
aas
test
cmp
add
stc
int
test
sub
and
nop
mov
test
inc
mov
mov
ss
xor
xchg
arpl
mov
jbe
add
and
shlb
pop
bound
bound
push
pusha
nop
jb
orb
out
std
mov
cwtl
adc
in
sahf
roll
lods
loop
out
push
mov
adc
xorb
das
mov
jp
push
mov
sbb
mov
dec
push
xor
fistl
cmp
sbb
aam
dec
fstpt
pop
lock
jle
data16
addr16
lds
sar
clc
fmuls
pop
cmp
pop
cmpsb
push
mov
cltd
das
scas
adc
ret
jp
inc
lods
push
xor
bound
inc
mov
mov
call
in
xchg
arpl
xor
and
loope
push
out
pushf
es
inc
pop
sbb
and
es
loope
mov
ficompl
test
adcl
out
cmpl
xchg
loop
sub
jmp
outsb
inc
jp
cli
jge
add
bound
mov
lret
lahf
push
add
mov
xor
jl
lahf
lahf
sti
mov
dec
cmp
sub
outsb
call
add
push
mov
mov
divb
jno
popa
movsb
xchg
test
imul
jb
test
sub
sbb
jp
mov
std
ljmp
jb
xchg
nop
add
jp
shrb
ficoms
mov
push
and
fucom
pop
add
sub
jg
adc
cmp
jmp
test
mov
lahf
xchg
adc
ret
pop
or
in
push
xchg
pop
sti
pushf
movsl
sbb
repnz
out
jecxz
cmp
je
imul
xor
xor
in
pusha
addr16
stos
insl
cwtl
jg
jnp
shl
testb
dec
cmp
push
push
sbb
aad
mov
mov
sub
into
cmp
mov
out
fmul
test
scas
aas
mov
shll
stos
aaa
and
pushf
out
cmp
fisttpl
dec
mov
jg
roll
ret
adcb
push
jge
pop
dec
dec
sub
inc
mov
test
test
mov
outsb
imulb
push
loopne
push
addr16
xchg
mov
mov
pusha
into
push
out
xchg
shl
jae
sub
sub
add
out
or
jle
stc
ds
jle
sub
mov
sub
mov
test
dec
out
test
out
push
sbb
loopne
or
xchg
push
push
pop
add
inc
in
mov
mov
mov
imull
mov
ds
sub
ja
ljmp
test
or
lock
mov
sub
scas
mov
cmc
shlb
stos
and
jbe
stc
or
ja
mov
and
mov
outsb
or
mov
mov
sahf
push
add
mov
movsl
je
and
stos
push
add
pop
js
insl
adc
add
xor
ds
dec
clc
jle
cwtl
mov
in
sbb
arpl
fs
cmp
add
or
stos
add
ficompl
fs
inc
adc
cld
flds
lods
mov
int
hlt
int
adc
xchg
cmp
shl
frstor
xchg
or
je
repz
out
in
xchg
xor
sbb
dec
sub
out
fwait
cmpsb
ds
sbbl
cmp
out
clc
add
adc
dec
mov
add
jmp
xchg
inc
shrb
insl
adc
adc
fwait
push
push
pop
cltd
aam
fwait
push
je
mov
int
push
xchg
jns
push
pop
fldcw
cmp
push
jl
inc
mov
pop
inc
clc
iret
ret
xchg
dec
sbb
sti
mov
jecxz
jno
gs
push
movl
in
in
shl
loop
xchg
sub
mov
sahf
cmpsl
js
cmc
lahf
sbb
pusha
stos
xchg
xor
in
iret
int3
leave
inc
and
sub
fdivr
gs
enter
imul
cld
and
mov
fnsave
xor
jb
adc
mov
je
addl
mov
xor
jmp
cmc
jnp
inc
inc
cli
dec
hlt
dec
pop
mov
div
imul
add
sub
in
push
jle
in
inc
ret
mov
in
and
ret
out
or
stc
imul
repz
addr16
pop
popa
out
std
shrb
in
and
fadds
insb
jae
movsl
push
mov
dec
addl
fildll
mov
xchg
stos
sbb
xchg
mov
das
cmpsb
jge
mov
jns
or
pop
lret
insl
mov
ja
cmp
enter
push
psllq
push
sub
adc
jle
aam
mov
jo
bound
repnz
sub
xchg
movsb
inc
arpl
test
stos
imul
sub
inc
gs
mov
xor
dec
push
outsl
jmp
fs
pop
stos
xor
jnp
fistps
add
loope
sub
sub
bsf
cltd
movsb
xchg
outsb
push
xchg
insb
test
stos
aam
or
pushf
lea
push
mul
loope
aas
mov
mov
int3
imul
add
inc
jae
pusha
mov
push
pop
lcall
call
inc
add
lods
imul
mov
xchg
inc
outsb
pop
jae
clc
mov
sub
in
mov
and
je
xor
sbbb
jmp
test
inc
add
push
mov
js
rorl
jmp
je
jnp
push
jne
lret
sub
jge
mov
out
stc
into
fwait
in
mov
cld
add
xchg
sub
dec
divl
stos
test
fwait
pusha
pop
lahf
sub
sub
mov
sbb
stos
sub
pop
adcl
adc
mov
push
pop
sub
mov
loop
lods
mov
and
sbb
add
gs
mov
sbb
test
jp
mov
mov
cmpsl
scas
jne
sti
sub
jle
push
sbb
lods
aas
pop
mov
mov
mov
inc
fidivrl
add
notl
je
push
inc
incb
cmpsl
mov
fdivrs
adc
or
cmp
lahf
adcb
nop
frstor
jle
lods
sub
xchg
pop
add
adc
mov
loopne
mov
pop
add
and
mov
mov
fistpll
push
stc
pop
into
gs
jp
sub
pop
jmp
std
ret
daa
pusha
jl
aas
cld
cli
lods
cmp
das
addl
or
lret
jecxz
out
and
xchg
lret
sbb
loop
leave
or
lret
ja
pop
mov
je
pop
lods
popa
cmp
pop
mov
dec
or
fcomps
fcoml
mov
cld
mov
mov
in
mov
sti
inc
test
mov
movsb
sub
fidivrs
cmp
icebp
adc
mov
ds
movsl
cli
dec
inc
imul
outsl
ds
push
insb
mov
and
mov
das
jne
sub
inc
test
call
ret
push
test
mov
rorl
aad
lods
and
xor
call
mov
adc
add
mov
sahf
sub
adc
mov
loopne
jp
mov
hlt
test
loopne
cmpl
cmp
stos
jbe
scas
push
mov
xchg
leave
push
es
insl
jl
dec
xor
jb
jp
test
stc
in
fiaddl
stos
add
and
test
fcompl
jne
imul
sub
pop
mov
push
das
insb
sub
icebp
sub
push
sbb
out
inc
pop
xchg
mov
arpl
jnp
lock
in
mov
and
les
mov
in
shr
xchg
inc
jo
jnp
and
cli
pop
sbb
cmpl
movsb
sbb
jo
sub
or
fwait
dec
lcall
sbb
push
fs
sub
out
je
aaa
jmp
ret
mov
mov
out
mov
addr16
mov
xor
mov
xchg
rorb
mov
mov
dec
xor
rcr
push
mov
sub
jl
jp
jnp
xchg
xor
jb
pop
cmpsb
cmp
xchg
sub
mov
cmp
repz
mov
int
into
insl
adc
adc
push
jp
shrl
outsl
in
sbb
mov
imul
outsl
ss
fistps
cli
int
sub
nop
jp
int3
cmp
jno
pop
dec
repnz
aas
or
das
mov
sti
fisttpl
and
lods
test
cld
insl
icebp
imul
mov
push
out
rcll
xor
ss
ss
lods
addl
add
sarb
push
pop
jle
aas
and
push
es
dec
ret
mov
fwait
testb
jne
mov
cwtl
sbb
movb
cmp
icebp
or
fdivl
dec
ret
clc
lret
stos
test
out
push
xchg
ret
imulb
cltd
ss
arpl
inc
pop
dec
jnp
mov
sbb
sti
or
pop
lds
adc
into
ja
mov
ss
outsb
popf
xchg
inc
aas
mov
sbb
jne
pop
dec
insb
arpl
add
mov
call
xchg
popa
mov
xorb
pop
ret
xchg
sahf
mov
rolb
add
inc
fwait
mov
sub
sbbb
test
and
pop
sti
push
pop
mov
add
mov
std
es
push
fstpl
cmp
aam
adc
xchg
and
add
push
adc
dec
ja
and
movsb
fists
xchg
lcall
std
and
cmpsl
out
ja
adc
dec
mov
cmpl
cmp
stos
js
add
xchg
pop
pop
jb
mov
jecxz
aas
hlt
xor
pop
mov
push
popa
lret
dec
pop
rcrl
fcom
sbb
push
fldl
cltd
xor
sti
lea
scas
xor
hlt
sahf
fsubrl
add
mov
cmp
sarl
aam
int
test
cmpl
add
insb
fs
mov
sbb
and
jae
or
loopne
inc
insl
adc
mov
sub
sub
shll
adc
arpl
push
xor
movsb
sub
sbb
loopne,pn
ja
scas
jno
mov
push
fwait
jecxz
stc
mov
push
xorl
xlat
sbb
mov
sbb
loope
jl
sbb
adc
sbb
rcll
mov
sub
push
pop
mov
insb
dec
pop
call
xchg
cmp
jbe
out
adc
cld
addr16
dec
add
loop
push
mov
mov
outsb
or
outsb
test
add
faddp
stc
jns
lods
out
orb
and
dec
fidivrs
into
xchg
insb
dec
mov
imul
add
aad
ja,pn
mov
cmp
outsb
jnp
mov
bswap
psubq
push
cmpsb
pop
iret
ds
and
pop
pop
pop
cmpsl
fs
out
aaa
mov
dec
ret
mov
imul
sbb
dec
fwait
sbb
pop
or
pop
es
fs
and
and
pop
in
mov
and
jbe
outsl
sbb
pop
hlt
icebp
orb
push
sbb
mov
xchg
aam
mov
pusha
mov
cmp
inc
std
fidivrs
jg
into
shlb
xchg
in
pop
or
lret
cli
mov
ret
and
pop
push
jo
les
dec
or
mov
ret
pop
roll
xchg
pop
fs
mov
sub
stos
mov
lahf
inc
jb
inc
mov
and
fwait
je
ss
packuswb
aaa
sbb
inc
adc
push
push
insb
in
mov
addr16
sbb
es
movsb
mov
cmp
mov
xor
and
or
mov
fcos
xor
xor
js
test
pushf
into
lea
dec
mov
aam
fdiv
int3
inc
mov
cmp
jb
mov
cli
sbb
loop
aad
rcll
xchg
xchg
or
pop
les
loope
lea
add
scas
xor
and
jae
push
nop
push
out
sbb
pop
out
rcl
ds
cli
sti
inc
mov
mov
gs
jne
mov
divb
inc
aas
leave
lret
fcmovbe
push
xchg
jl
int
jns
outsl
leave
jne
daa
inc
je
mov
cli
adc
clc
adcl
movsb
adc
outsl
testb
mov
lods
jl
xor
mov
dec
mov
cmp
dec
cmpsb
cmp
inc
xor
mov
pop
adc
std
mov
add
jecxz
ds
inc
xchg
mov
inc
push
jne
add
pop
pushf
mov
pop
jne
push
jnp
push
dec
nop
imul
jb
imul
sub
imul
lea
adc
cmp
ja
dec
out
mov
inc
jo
jp
mov
inc
mov
fistl
aam
insb
in
scas
xchg
stos
dec
mov
dec
fs
push
cmpsl
js
scas
das
cmc
test
sbb
sub
pop
test
inc
jmp
ljmp
sub
fwait
cmp
rclb
cmpsb
jnp
jle
jmp
adc
inc
je
pusha
jbe
inc
daa
cmp
cmp
mov
and
inc
cld
hlt
roll
jl
adc
xchg
add
pop
mov
clc
leave
and
jnp
fmull
leave
je
insb
cmp
mov
push
jo
mov
jmp
sub
out
cmp
sbb
sti
out
jecxz
aaa
insb
mov
int
sbb
inc
insb
outsl
mov
push
enter
sub
or
lock
ficoms
aad
xchg
push
fcmovnbe
sbb
cmpsb
je
push
mov
arpl
adc
mov
cs
adc
pop
xchg
adc
xor
push
in
cmp
mov
aad
adcb
adc
mov
xchg
mov
pop
add
ret
pushl
movsb
sbb
pop
and
pusha
jnp
jne
idiv
scas
imul
pop
mov
mov
cmpsl
mov
fidivl
mov
dec
popa
dec
popf
and
rolb
call
insb
enter
in
xchg
js
rclb
or
dec
pop
or
test
jae
into
cmp
hlt
push
inc
jg
mov
pop
and
negl
mov
push
or
add
dec
pop
cs
icebp
dec
orb
jmp
stc
sub
sti
jno
sarl
in
lret
rsqrtps
fstl
add
pop
mov
movsl
addr16
mov
jp
adc
and
inc
mov
jns
js
mov
aaa
ficomps
insl
push
jb
jg
sbb
xchg
repz
call
mov
mov
xchg
or
jmp
sub
cvttps2pi
sbb
adcl
fwait
push
int3
fucom
ret
add
dec
insl
pop
lock
adc
aam
movl
imull
xchg
iret
jg
out
repnz
lret
mov
pop
xor
and
xchg
cwtl
movsb
push
lcall
subb
pop
mov
scas
jne
mov
enter
xchg
mov
jp
xchg
and
int
dec
pop
jmp
verr
dec
data16
and
jmp
cmpsb
stos
in
out
add
roll
andl
andl
out
adc
inc
daa
cmpsb
xchg
je
inc
ss
pop
pusha
jns
push
out
mov
inc
mov
pop
imul
stos
and
push
xsavec
lret
or
call
jecxz
xor
add
inc
jl
addr16
bts
cmp
sub
icebp
cld
adc
test
movsl
negl
flds
enter
mov
inc
push
and
jbe
loopne
cltd
xor
aam
call
test
lcall
jo
mov
mov
xchg
andb
jns
ljmp
xchg
sbb
movl
mov
or
popf
xchg
out
add
ds
fsubrl
shrl
int
push
in
data16
lods
pop
lcall
inc
jmp
sub
lea
es
arpl
jmp
jge
and
adc
xor
cli
mov
data16
adc
xchg
xchg
cmp
inc
fwait
cltd
lods
das
lcall
sbb
out
sbb
and
aas
xchg
je
movsb
dec
jl
mov
lds
lds
sbb
mov
pushf
decl
int
arpl
inc
inc
test
jmp
push
inc
mov
pop
daa
and
add
cmp
and
jo
jle
inc
xor
lods
int
dec
push
push
push
sbb
test
ret
sti
adc
insl
or
les
and
mov
sub
bound
and
inc
sbb
mov
cwtl
loop
adc
xor
inc
mov
cmc
add
add
lock
dec
cs
inc
cmpsl
and
add
jo
rcr
cs
test
mov
bound
push
jge
or
add
int3
push
or
movsb
pop
xor
inc
xor
orl
xor
adc
ja
mov
stc
ret
int
inc
and
fwait
xor
mov
movsl
pushf
jmp
mov
jle
add
sub
addr16
stos
dec
adc
pop
sbb
fdivrl
cmpsb
add
lret
jb
mov
jo
mov
ret
adc
arpl
imul
sbb
fst
pushf
adcl
in
popa
mov
pop
lret
push
pop
or
cli
out
xchg
cmp
cld
cmp
ret
cmp
or
dec
orl
pushw
sbb
push
adc
pop
mov
mov
pop
sub
test
pop
decl
mov
and
cmp
sbb
add
inc
push
mov
test
repnz
sbb
inc
popf
jmp
xchg
pusha
or
sub
sbb
adc
xchg
sahf
data16
in
pop
mov
aaa
jo
cmp
jmp
push
clc
lods
push
stos
pop
sub
movsl
test
and
mov
xchg
and
push
and
imul
xchg
scas
mov
or
aaa
push
pop
dec
dec
shll
lret
mov
xor
rcr
adc
aaa
int3
add
cmp
imul
imul
out
cld
repz
sub
add
pop
push
fwait
xchg
adc
lret
and
and
fdivrl
xchg
mov
cs
or
aaa
sbb
sub
pushf
jg
mov
jb
jns
insb
fisubrl
xor
jl
lock
mov
test
fcmovbe
in
add
out
sub
sbb
sarb
pushf
fistpl
std
add
ret
das
mov
imul
mov
outsl
test
lds
cld
dec
daa
jae
push
shrb
cli
lret
outsl
dec
xor
jle
push
mov
mov
orb
lods
fadds
sbb
lret
icebp
xor
cmp
cwtl
movsb
test
pop
popa
adc
data16
sub
jmp
js
es
jp
pusha
adc
mov
mov
cltd
or
sar
mov
clc
xchg
cmp
lds
pop
imul
aam
cld
arpl
xchg
es
nop
adc
sbb
and
pop
lds
decb
dec
scas
fdivrl
jp
mov
je
imul
imul
int3
or
lahf
femms
fcomp
std
cmp
jmp
mov
ljmp
nop
cltd
arpl
fwait
lods
iret
addr16
dec
inc
add
imul
jno
cwtl
in
or
add
jbe
push
ss
fistpl
sbb
pushf
cmpsb
mov
cltd
movsb
lods
mov
pop
mov
stos
stc
push
sub
or
je
mov
fs
add
shrl
mov
test
mov
inc
xor
popa
pop
test
test
jno
mov
lcall
and
jnp
les
inc
test
fcompl
xor
scas
out
movsl
push
inc
scas
jae
in
leave
jl
push
enter
pop
nop
jns
push
in
jbe
fidivs
aas
pop
push
shll
xor
inc
push
add
out
pop
stos
push
jo
cmp
das
cmpsb
sub
mov
sub
lock
lcall
xchg
sbb
sti
adc
sbb
and
cmc
clc
iret
xchg
scas
inc
fstpl
sti
fists
in
dec
lock
mov
or
scas
pop
jns
incb
outsb
and
fistps
hlt
xor
and
sbb
inc
out
sbb
pop
daa
inc
jns
lods
pusha
xchg
cmc
adc
das
push
mov
fwait
mov
inc
imul
rcr
gs
pop
xlat
fst
insb
call
xchg
jae
scas
adc
xchg
inc
cmpsl
mov
jb
pop
ds
add
and
fs
inc
push
jno
dec
sahf
xor
inc
nop
push
inc
cmp
jmp
xchg
mov
leave
ficompl
in
push
pop
mov
cmpsl
fs
into
xchg
lea
dec
or
sahf
and
pusha
mov
out
iret
out
jae
out
dec
fistpll
cltd
mov
test
out
shll
jnp
push
ljmp
jnp
repnz
lcall
xor
in
add
daa
jl
jmp
inc
sarl
jge
fwait
push
add
pop
xor
pop
push
add
mov
lods
rcll
jmp
je
sub
fyl2x
sbb
aaa
fwait
movsl
push
mov
or
xlat
adc
ss
loopne
adc
negb
xchg
roll
rcr
cmpsl
das
insb
not
cmpsl
ds
icebp
lret
in
xor
aad
insl
les
int3
inc
push
push
divl
mov
je
stos
std
outsl
lea
aas
inc
iret
mov
jge
notl
pushl
test
xchg
dec
cmpsl
inc
adc
adc
inc
mov
js
mov
mov
int3
inc
and
cli
pop
icebp
in
inc
xlat
loop
mov
dec
pop
cs
or
jp
mov
jle
out
sti
cmp
lea
cmp
unpcklps
dec
xchg
in
jae
fidivrl
cmp
dec
roll
add
push
inc
ljmp
aas
push
js
and
adc
xchg
aam
out
mov
jg
insb
addl
arpl
je
outsb
repz
mov
lahf
mov
dec
ret
and
into
or
push
out
xchg
xor
jmp
cmp
push
in
add
sbb
mov
and
fs
lods
orb
in
insl
out
jecxz
dec
jb
push
mov
jno
addr16
popf
arpl
sub
enter
and
xor
jg
ss
data16
and
cmp
cmpb
and
aad
es
push
sub
xchg
test
jp
fcmove
inc
out
mov
xlat
dec
xchg
dec
pop
xor
cmpl
fimull
dec
shll
cmp
add
leave
mov
push
xchg
jb
pop
and
xlat
sarl
add
inc
xchg
xchg
stos
cwtl
add
mov
mov
xor
repnz
mov
cltd
out
movsl
rorb
adc
inc
fisubrs
fimull
rolb
out
ja
inc
jne
add
cmp
fists
ret
lock
cld
es
fwait
hlt
jp
sub
jg
pop
inc
dec
and
jl
int3
gs
jo
dec
adc
out
stos
lret
sbb
jp
fstl
out
mov
out
sbb
ljmp
arpl
out
sbb
dec
mov
arpl
or
test
dec
inc
jnp
or
stc
inc
ja
loope
adc
mov
inc
add
push
sbb
cltd
xchg
insl
popf
hlt
in
push
or
iret
enter
popf
sbb
cld
aam
add
aad
pop
jnp
enter
xchg
or
xchg
testb
ljmp
push
imul
daa
add
add
xchg
clc
rorl
testl
lock
push
insb
and
sahf
xchg
leave
adc
das
push
rcrl
int3
cmc
jg
mov
lods
xchg
xor
sar
pushf
push
call
add
enter
dec
mov
repnz
push
ficomps
sbb
je
mov
fscale
sahf
jns
jl
inc
or
andl
inc
mov
cmpsb
pushf
insb
addl
call
cwtl
ficoms
pop
cs
scas
or
cmp
loope
pop
and
mov
cmpl
sbb
or
sbb
daa
mov
dec
jo
cwtl
fsub
sub
sbbl
ret
pop
lret
inc
mov
roll
fnstsw
or
inc
dec
fisttpll
in
and
pop
inc
ds
xchg
lcall
scas
imul
jo
test
ja
push
xchg
stos
sbb
xchg
out
adc
push
ljmp
das
add
repz
adc
mov
stc
mov
stos
out
cmp
insb
repnz
ret
dec
mov
std
push
cmp
xchg
lret
mov
jp
adc
call
insb
pop
movsb
cmp
sub
fdivr
adc
nop
add
and
sub
and
cmp
adc
xchg
fucomi
in
out
mov
ss
fadds
push
cmpsb
xor
in
lcall
xlat
in
mov
cmp
iret
rorb
faddl
add
jg
lods
repz
fwait
pusha
lods
mov
jbe
fcmovnbe
add
jne
pusha
test
adc
js
mov
mov
dec
lahf
aaa
push
jecxz
xor
xchg
je
mov
pop
int
ret
ja
mov
pop
shl
js
jb
and
mov
jb
cwtl
cs
aam
out
pop
je
outsl
lret
xor
fwait
neg
mov
adc
xchg
jge
xlat
loopne
pop
push
pop
arpl
dec
out
in
xor
es
out
cmpl
enter
xchg
cmp
loop
xorl
adc
mov
icebp
fs
sbb
ja
or
js
dec
push
cmp
xor
mov
xchg
lods
add
add
movsb
int
adc
xor
test
dec
inc
dec
xor
test
outsl
or
add
lods
pop
inc
addb
cmp
stos
fwait
sub
in
loop
sbb
mov
push
and
fisttpl
adc
xchg
enter
mov
or
xchg
loope
jmp
sub
inc
cs
imul
and
mov
sbb
sub
inc
jo
adc
jnp
or
movsb
xchg
repz
add
stc
cmpsb
fstpl
fwait
int3
aaa
int3
sub
ret
xor
inc
xlat
sbb
push
sbb
rcrl
lcall
jmp
jb
and
jae
imul
dec
sbb
lcall
mov
fisubs
xchg
dec
hlt
int3
fiaddl
pop
and
test
mov
divb
jns
adc
dec
push
mov
or
mov
insb
ljmp
cmp
pushf
aam
arpl
je
test
push
ds
sbb
mov
xchg
pop
mov
ret
lods
cmpsb
mov
push
dec
jg
fimuls
lret
cwtl
and
sbb
sbb
aaa
ret
push
sub
or
daa
stos
aas
dec
cld
inc
fistpl
sub
xchg
arpl
dec
ret
mov
fidivs
lret
mov
dec
and
dec
test
mov
xchg
ds
push
adc
cmp
or
or
mov
addr16
adc
repz
jg
sbbb
jl
dec
mov
adc
jno
pmullw
push
mov
mov
xor
hlt
xchg
mov
rolb
push
sbb
or
dec
dec
jae
cld
xchg
pop
cs
shr
outsl
xchg
add
test
xlat
add
jp
pop
xchg
jle
xchg
mov
xchg
getsec
out
pop
or
or
mov
fwait
mov
xchg
outsb
imul
repz
clc
mov
test
add
add
mov
add
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
jmp
fnstenv
xchg
gs
test
sbb
mov
rcrb
or
push
add
data16
add
and
je
call
loopne
xchg
fiadds
sub
sub
icebp
hlt
pop
dec
nop
xor
add
xchg
push
sub
mov
das
pop
into
pop
jecxz
scas
jae
sarb
pop
xchg
lods
xor
jne
test
mov
inc
sbb
or
icebp
addr16
jnp
ret
shrb
mov
insb
les
sub
test
xchg
je
and
adc
fidivrs
pop
xor
movl
push
daa
inc
dec
clc
pop
repz
xor
mov
fdivrs
clc
mov
add
push
add
push
inc
std
in
add
and
pop
dec
mov
or
add
shrl
inc
sbb
icebp
hlt
or
sti
call
cmp
mov
jae
dec
sub
pop
dec
aam
pop
std
rorl
fildl
inc
fwait
insl
push
insb
jp
dec
mov
repnz
mov
push
jae
loop
mov
dec
jbe
sub
stos
leave
mov
cmp
shrl
mov
leave
mov
clc
xchg
mov
sub
fldenv
cmp
rcl
call
std
lcall
addb
push
fsts
push
loopne
pushf
sahf
or
call
xor
or
xchg
aaa
xchg
sbb
in
sbb
mov
in
sahf
js
inc
jb
mov
fsubrs
sbb
leave
inc
adc
fistpll
pop
je
in
imul
mov
enter
inc
popa
xchg
xchg
stos
pop
push
push
push
aaa
lret
adc
pop
sub
pop
mov
movsb
mov
es
xchg
aaa
stos
ret
pop
test
out
dec
dec
sub
adc
fadds
or
mov
les
sbb
lret
rolb
ds
lcall
inc
icebp
bnd
inc
jo
adcl
stos
xchg
shlb
cmc
and
add
inc
mov
ret
mov
cmpsb
jb
inc
push
mov
scas
adc
mov
mov
xor
xchg
xor
push
shl
inc
shlb
sub
mov
pop
push
add
daa
dec
rorb
cld
pop
popa
jecxz
movsl
pop
sbbb
adc
jmp
sbb
push
sub
mov
sbb
xor
mov
ja
sub
lret
daa
aaa
mov
dec
xor
test
sbb
into
dec
or
subl
mov
movsb
scas
push
sahf
sbb
sahf
push
or
movsb
lea
or
testl
ror
push
sti
stc
loopne
or
imul
mov
arpl
mov
inc
es
sub
pop
push
popa
stos
sub
adc
dec
pop
and
icebp
push
movsl
fidivl
rcrl
ret
pushf
sbb
int3
arpl
pop
xchg
cmp
es
stos
outsl
aad
push
inc
out
push
gs
popa
xchg
or
popf
aad
adc
lret
out
ss
add
inc
es
and
das
dec
testl
pop
aad
bnd
mov
adc
sbb
cwtl
sti
mov
push
jno
pop
mov
push
adc
add
mov
cmp
enter
std
add
lret
stos
push
enter
pushf
mov
xchg
mov
test
loopne
iret
mov
add
lea
mov
xchg
insb
inc
popa
jb
repz
cmpsb
xor
pop
das
push
mov
or
pusha
pusha
sti
stos
fs
aad
rorb
mov
movsb
in
iret
xor
imul
jle
cmp
hlt
sub
adc
into
push
dec
inc
and
test
lds
js
sahf
mov
mov
mov
or
mov
das
in
push
and
icebp
cs
xchg
nopl
inc
add
push
lods
mov
out
xchg
fs
mov
imul
jae
fcoml
mov
sbb
sub
fst
std
pop
push
jecxz
xchg
leave
sub
add
sbb
push
das
sbb
cld
stos
pop
push
lds
mov
mov
frstor
push
add
mov
fstpt
sub
or
mov
in
jg
dec
push
sub
jb
pop
ret
out
shrl
or
loopne
ja
pop
loop
scas
cmc
adc
inc
int3
cmp
jns
add
andl
test
movsl
jns
mov
cmpsl
cmp
lahf
lods
xorl
pop
xchg
inc
mov
shlb
sbb
pop
mov
jno
mov
neg
cmp
retw
mov
mov
mov
pop
das
mov
mov
and
push
stos
arpl
add
push
push
sub
adc
test
pop
sub
loope
push
adc
imul
fsubrs
aas
ret
outsb
loop,pt
in
jl
mov
mov
popf
pop
jae
test
cmp
mov
fcmovbe
sub
jge
sarl
dec
xchg
xchg
out
inc
cmp
add
xchg
sbb
jge
and
jecxz
aam
es
dec
dec
out
jmp
repnz
fwait
mov
out
in
or
cmpl
sub
into
sub
insb
cmp
hlt
mov
pop
mov
or
popf
enter
aam
ficoms
xchg
or
fs
cld
movsb
popa
stos
scas
test
or
loope
inc
mov
push
pop
outsb
or
shr
decl
and
jp
in
cmc
subl
js
sub
mov
loopne
sub
ja
inc
popf
popa
test
ja
adc
gs
cwtl
pushf
adc
dec
pop
mov
xchg
out
mov
adc
add
jmp
leave
pop
xchg
das
dec
mov
xchg
pop
inc
mov
mov
mov
pusha
cmpsl
jl
rcr
push
mov
mov
add
mov
pushf
add
pop
loopne
mov
lea
cmp
mov
cmpsl
push
push
mov
xlat
inc
jns
lret
push
sti
sbb
loopne
cmpl
mov
into
sub
je
out
push
hlt
sbb
adc
adc
lret
adc
call
cltd
inc
rcrl
or
jecxz
mov
xchg
sarb
hlt
fwait
adc
dec
mov
mov
cmp
loopne
and
adc
add
pop
dec
rcll
stos
inc
mov
mov
sub
test
xor
insb
sbb
add
imul
mov
jecxz
xchg
push
mov
jmp
adc
xor
les
and
add
mov
cmpl
daa
push
add
sbb
sar
mov
out
in
inc
mov
jb
std
imul
outsb
jnp
dec
or
jae
stc
lcall
outsl
lret
fistpll
mov
arpl
mov
fdivl
ja
out
mov
bound
lahf
push
popa
cmp
sbb
das
pop
add
dec
fidivs
sub
inc
inc
outsl
fldcw
test
movsl
mov
rorb
mov
repz
ficoml
int3
test
dec
ja
leave
inc
les
ss
lret
dec
cmp
in
fldl
shll
inc
sbb
insb
cld
pop
iret
repz
push
cmp
xlat
sti
pushf
jle
ja
or
sbb
lret
loope
ret
aam
cmp
pushf
fcomps
in
les
xor
pusha
je
fsub
xor
jp
adc
mov
dec
mov
pcmpeqw
inc
mov
mov
pop
jl
out
out
inc
xchg
cld
imul
loopne
mov
nop
mov
mov
sahf
push
cltd
popa
push
fnstcw
push
les
decb
pop
push
cmpsb
push
cmpsl
test
movups
push
lret
repnz
xchg
mov
scas
jecxz
push
fnstenv
addb
xchg
inc
rcrb
mov
jle
dec
outsb
fsts
orb
sub
ljmp
mov
fmuls
pop
je
and
cmp
jo
hlt
push
xchg
push
movsb
loope
xchg
in
xlat
dec
divb
xchg
mov
push
mov
daa
and
cmp
mov
test
int
aam
mov
pusha
sbb
outsl
dec
loop
pusha
xchg
fstpt
mov
pop
push
jp
and
mov
insb
mov
xor
push
lods
cmp
cmc
arpl
data16
ss
push
jae
adc
popf
or
xchg
add
pop
cmp
jle
repz
loope
adc
test
ret
pop
add
push
dec
movsb
call
out
test
jno
imulb
movhps
jle
jbe
int3
out
outsb
mov
mov
repnz
call
jp,pt
outsl
jo
rorb
dec
insb
jae
pusha
in
add
xchg
and
adc
adc
inc
jecxz
call
sub
push
fwait
leave
test
aas
jne
insl
xor
fisttpl
aam
stc
movsb
js
mov
sarb
clc
call
jp
dec
int3
or
add
loopne
movsb
es
loope
jecxz
mov
adc
loopne,pn
and
sbb
test
push
add
xchg
lds
out
gs
aam
mov
lods
mov
outsb
out
and
jns
xchg
adc
mov
je
lods
fcoml
aas
xchg
clc
stos
popa
mov
adc
nop
mul
stos
mov
mov
push
cmp
sbb
sub
mov
fistl
push
push
dec
and
push
clc
mov
call
hlt
popf
pushf
push
mov
mov
xchg
ja
inc
outsb
lods
and
jp
cmp
sub
test
sbb
sbb
jl
add
fildll
dec
mov
mov
push
out
mov
xor
cmp
push
inc
mov
jb
xchg
imulb
fstpt
jp
pop
pop
outsb
or
loop
stos
jg
push
sar
pop
add
pusha
roll
lcall
or
pop
and
and
je
lret
pushf
push
pop
jecxz
stos
sbb
xlat
and
popa
arpl
fstpt
fstl
daa
sub
sbb
jle
das
lret
mov
adc
add
cmp
pop
outsb
xlat
or
aas
rolb
jecxz
and
adc
jo
cld
std
xchg
dec
mov
test
js
jg
enter
sbb
mov
inc
or
in
jl
fldenv
cmp
and
fbstp
mov
jg
cld
jno
scas
mov
dec
test
lcall
ret
popa
bound
out
mov
clc
or
daa
dec
into
add
mov
mov
cli
mov
inc
xor
pop
mov
push
fcoms
test
shrl
pop
js
fs
xor
inc
push
jge
subb
push
test
repnz
jne
xchg
es
test
iret
lahf
clc
xchg
mov
pop
xor
adc
lds
call
or
inc
into
aas
mov
jne
lcall
and
cltd
mov
lods
jo
inc
and
test
hlt
add
jge
or
cmp
shlb
inc
call
mov
jge
mov
mov
stc
popf
mov
and
jae
or
sbb
sbb
adc
jg
fucomp
lret
mov
mov
jp
daa
scas
xchg
adc
sub
aas
jo
test
jmp
mov
push
adc
outsb
pop
or
pushf
ret
and
test
js
ror
push
stos
outsb
pop
dec
dec
pop
jg
movsb
lret
xchg
add
dec
sbbb
aas
pusha
dec
xlat
idivb
or
outsb
popa
out
es
cmp
pop
push
dec
xor
pop
outsl
add
xchg
jle
sbb
outsl
and
sbb
ret
cli
mov
jp
mov
and
dec
add
inc
xor
or
add
mov
arpl
test
test
andb
es
lods
mov
push
movsb
adc
inc
jnp
movsl
js
inc
aas
movsb
scas
lret
lds
shll
jecxz
pop
sarl
mov
test
add
in
popa
ds
jns
inc
and
mov
mov
xor
shll
and
sbb
and
dec
cmp
pop
pop
lret
lret
mov
push
mov
ljmp
jle
ds
mov
adc
call
dec
call
push
fnstenv
xchg
pop
or
imul
fs
cmp
leave
sti
cwtl
xchg
sbb
sbb
push
xchg
rclb
adcl
cs
mov
sub
fisttpl
mov
jmp
inc
fnsave
xchg
jae
scas
arpl
xbegin
and
jnp
sbb
adc
xor
lahf
jg
lods
stos
sti
rclb
jnp
pop
stos
es
jg
in
rclb
pop
push
fisubl
pop
hlt
mov
das
dec
filds
and
xor
jecxz
lret
jge
lret
stc
insb
les
mov
sub
psadbw
pop
sarb
fstp
mov
mov
mov
rcrl
push
mov
cmp
cmc
sub
jae
movsl
pop
push
enter
aaa
pop
scas
inc
add
mov
loopne
push
popf
mov
jmp
add
emms
mov
push
scas
test
sbb
jo
rcrb
jle
inc
ljmp
fimuls
mov
cld
pop
cmp
dec
les
jne
xchg
mov
mov
mov
mov
sub
mov
dec
push
xchg
inc
test
xor
jns
arpl
mov
or
enter
les
jbe
xor
sub
adc
xchg
cmp
add
mov
or
inc
movntq
mov
setle
iret
mov
jle
cmp
mov
lea
testb
orb
jns
or
rorb
pop
pop
cmp
repnz
xor
pop
or
add
call
inc
jle
mov
push
ret
imul
and
xor
inc
inc
sub
pop
loope
insl
push
push
sbb
xchg
dec
xchg
pop
push
mov
pop
inc
cli
add
bound
shl
sbbb
stc
sti
fisttpll
push
mov
jl
and
push
and
test
test
vpsraw
into
cmpsl
mov
nop
and
sub
es
lret
mov
mov
pushf
adc
cmp
idivb
insl
mov
fisttpll
fisttpl
mov
dec
jl
pop
add
out
adc
in
jl
mov
pop
mov
repnz
adc
imul
mov
loopne
mov
xchg
popf
push
and
and
aam
xchg
mov
lahf
push
popf
add
lods
mov
xor
jnp
outsb
stc
xor
dec
inc
rorb
push
and
add
xchg
xchg
cmp
xchg
and
push
add
mov
sub
pusha
jp
push
mov
shlb
nop
xor
jne
js
sbb
shll
adc
dec
outsb
notl
adc
popl
jp
andb
lret
mov
pop
aas
push
cld
pop
push
dec
sbb
outsb
pushf
inc
xchg
scas
fcompl
outsl
inc
repnz
lock
and
mov
dec
inc
or
arpl
fmull
mov
int
in
stos
jge
hlt
scas
sbb
or
scas
mov
xor
jmp
xchg
push
lea
xor
lods
lods
xchg
iret
pop
les
sarl
xor
in
sub
xor
shr
aaa
mov
pusha
xchg
outsb
lret
in
mov
fcoml
xchg
aam
mov
push
ficoml
int
xchg
sub
jge
pop
sbb
or
xchg
xchg
sbb
outsl
or
pop
loop
or
inc
fadds
cli
fcoms
int3
sub
adcb
ss
pop
push
in
cmpsb
clc
sbb
jnp
inc
xchg
or
jle
mov
pop
fsts
int
pop
jne
int3
add
lods
xchg
out
xor
pop
lret
leave
jo
dec
sub
mov
adcb
inc
sbb
shrl
pusha
cwtl
ret
sub
insb
ss
cltd
out
and
ss
movsl
gs
aam
pop
push
das
jmp
sbb
pop
sahf
dec
add
sti
cmp
dec
je
or
lea
xlat
scas
imul
xchg
arpl
or
out
les
xorl
xor
cld
mov
xchg
add
dec
mov
aad
in
pop
sbb
imul
mov
jbe
pop
imulb
lcall
nop
jge
jo
mov
cld
inc
gs
sbb
test
adc
scas
icebp
scas
in
inc
pop
xchg
lock
cmp
ja
negb
sub
cmc
jecxz
shl
jl
mov
add
inc
out
int3
test
sahf
lods
ja
or
bound
fs
lds
iret
mov
jge
cmc
fisubrl
shrl
es
js
ret
push
pop
xlat
dec
cmp
andl
dec
rcll
shl
mov
pop
fmul
xchg
pop
xlat
notl
mov
adc
adc
or
add
ss
mov
sub
and
shl
or
or
and
adc
lea
push
int3
mov
dec
pop
mov
xlat
xor
xchg
mov
add
jl
lea
pushf
int
lods
adc
jp
jge
nop
mov
sbb
push
xchg
shll
mov
mov
jl
xor
sub
mov
jbe,pn
insl
jo
rcrl
out
and
xorb
pop
fwait
ret
xchg
mov
outsl
pop
push
fbld
and
nopl
pop
insl
inc
outsl
popf
aaa
jne
pop
mov
jb
dec
int
push
call
pushf
pop
sbb
pop
push
addl
sbb
pop
nop
xor
fisubrl
mov
xorb
sub
std
jp
arpl
cmp
movsb
and
out
aam
int
fcompl
xor
rorl
movb
xchg
lret
mov
jecxz
ds
fldenv
inc
lock
pop
into
dec
fcmovu
jb
gs
and
fstps
outsl
sarb
dec
inc
xor
xchg
mov
addl
fs
adc
inc
aad
inc
std
mov
cmp
orb
cmpsb
jle
jge
xchg
push
inc
repnz
arpl
call
lret
imul
int3
xchg
inc
dec
mov
addb
push
push
and
js
arpl
add
popa
mov
outsb
lods
xchg
sub
inc
pop
hlt
lahf
cld
pop
lods
mov
shrl
mov
mov
cmc
int3
mov
push
and
les
rclb
xchg
aas
lods
cmp
jae
cmp
cmp
sti
inc
clc
rcll
sub
mov
jecxz
jmp
stos
outsb
dec
pop
imul
hlt
andl
cmp
sbb
dec
inc
into
and
sub
mov
push
push
cmp
push
sbb
dec
call
cmp
imul
add
or
std
dec
pop
dec
scas
push
mov
rcrb
inc
dec
std
cmc
loop
stc
adc
push
aaa
icebp
or
es
cmp
sbb
push
popa
mov
in
cli
pop
insl
enter
add
shl
jno
scas
pop
je
lock
pop
jg
sbb
jp
mov
sarl
gs
xchg
and
das
mov
aam
inc
in
test
and
cmp
pop
and
fs
jecxz
jno
jne
mov
sub
outsb
mov
pop
pop
lret
xchg
lahf
stos
lods
std
inc
out
xchg
loope
jbe
mov
xchg
shlb
aaa
or
lret
push
push
les
movsb
adc
or
sbb
subl
push
sti
les
add
out
jno
adc
insb
cmp
xor
inc
shll
leave
iret
xorb
xchg
sahf
cmp
pop
insb
xchg
arpl
test
shrl
push
xchg
lahf
gs
ja
pusha
loope
stos
movl
cmc
ret
push
push
mov
testl
or
ja
xchg
cwtl
sbb
cmp
daa
cmp
daa
xchg
imull
inc
pushf
stos
daa
or
scas
daa
ja
and
imul
add
nop
inc
mov
jbe
out
jno
push
lea
mov
sub
ljmp
adc
sbb
dec
stos
outsl
pushl
mov
cmp
aam
pop
dec
ljmp
repz
pop
faddl
outsb
test
hlt
repz
jo
or
pusha
mov
and
inc
scas
cmpb
daa
data16
sub
in
notl
mov
loop
fstpt
stos
inc
test
dec
out
ret
mov
mov
ss
dec
push
jbe
push
test
cwtl
and
std
jns
inc
adc
pop
into
shlb
outsl
nop
lahf
sbb
je
loope
aad
test
das
lahf
fstps
idivb
js
aas
dec
cs
stc
imul
mov
sbb
adc
fiadds
cmpl
and
test
or
int3
pop
into
hlt
js
sub
jp
or
insb
sub
add
pop
push
jne
ja
xor
push
test
cmp
in
and
bound
mov
add
jb
xor
jmp
cld
sub
sbbl
into
xor
adc
pushf
push
mov
jmp
jmp
fdivl
adc
lock
fwait
cmp
push
xchg
xor
jecxz
sbb
cld
sti
outsl
sub
and
sub
or
data16
cmpb
and
scas
and
fwait
lret
shll
mov
sbb
jbe
and
cmc
inc
lea
scas
je
add
shll
or
and
stos
jg
xchg
fldl
sbb
pop
push
fwait
lcall
test
movsl
cmp
push
inc
out
mov
and
icebp
mov
dec
mov
shlb
ret
pop
rcrb
test
push
mov
sub
jnp
mov
jle
ss
adc
hlt
mov
lahf
lret
cs
sbb
push
arpl
int
xchg
push
ljmp
int
xchg
push
stc
mov
test
xorl
xchg
inc
xchg
xchg
xchg
cltd
add
rol
mov
icebp
sarb
out
roll
out
and
aad
cld
icebp
push
lret
mov
xor
inc
inc
jmp
sub
jb
add
jno
movb
pop
dec
cmpsl
and
rorb
jl
sbb
std
adc
mov
mov
cmp
push
pop
adc
cmc
scas
cld
out
inc
scas
pushf
mov
sub
inc
mov
mov
out
sar
mov
dec
add
fdivs
xchg
mov
cmp
push
xor
xor
jnp
and
movsl
aas
cld
mov
sbb
sbbb
xor
sbb
insl
xchg
add
vpmacsdql
fstps
push
addr16
xchg
cmp
pop
push
or
aam
in
xor
clc
into
add
gs
out
scas
lret
aad
out
pop
pop
cmpsb
filds
mov
inc
add
sbb
sub
mov
and
adc
xchg
and
int3
insl
not
loop
jo
iret
xchg
mov
xchg
adc
and
xor
repz
push
push
dec
pop
adc
sub
adc
iret
or
out
lea
cmovs
mov
test
aas
jns
fnstenv
pop
repnz
add
adcl
in
fstpl
cmp
scas
jo
sub
xor
jmp
sti
repnz
sbb
in
cwtl
inc
pop
sbb
fcmovnu
xchg
imull
hlt
loope
je
scas
out
jbe
mov
inc
pop
lds
cmp
jge
add
imul
jmp
dec
test
cmpsl
test
push
out
pop
inc
lock
scas
add
sahf
lret
mov
aad
xor
das
pop
lods
in
cmp
mov
repz
icebp
insl
xor
fisttpl
stos
lods
add
pop
fidivs
mov
incl
cmp
out
mov
or
imul
dec
or
loopne
loope
js
in
adc
shlb
sbb
push
stos
iret
mov
cmc
dec
xor
mov
or
popf
shll
xchg
sub
adc
fiadds
and
lock
popa
fnstsw
mov
jae
or
sbb
pop
scas
loop
fdivrs
jle
repnz
ss
les
dec
push
dec
cmpl
jmp
pop
sub
push
jmp
mov
xchg
ljmp
call
dec
cmpsb
or
push
jns
out
and
sti
and
dec
testl
ret
lcall
ret
fstps
inc
in
or
mov
cmp
nop
adc
sbb
push
mov
std
addr16
insb
pop
pop
call
pop
dec
mov
xor
xor
and
jp
fsub
lods
loop
adc
add
shrb
cmpsb
add
in
sar
mov
dec
rcrl
add
jp
in
mov
cmpsb
mov
and
cmp
insl
push
divb
pop
jge
lds
pushf
dec
and
mov
popa
xor
pop
adc
jo
shll
das
jnp
roll
pop
vminss
icebp
jg
sub
ret
mov
addr16
jl
push
cmc
mov
adc
lcall
mov
lods
js
pop
outsl
test
mov
ret
inc
mov
cmc
adc
and
pop
ljmp
add
cli
lcall
loop
ret
fistpl
decb
mov
das
sub
mov
xchg
icebp
jle
decl
dec
cld
rcrl
mov
out
fwait
dec
stc
inc
push
sti
int3
mov
mov
xor
pushf
push
inc
dec
xchg
inc
aaa
cmp
stc
jne
add
adc
lods
lea
cs
inc
fisubrl
test
push
pusha
mul
fucomip
jecxz
lahf
test
mov
int
sub
jae
jne
dec
cmpb
aas
loopne
xchg
xchg
jge
pop
push
xchg
xchg
pop
addb
mov
mov
in
xchg
mov
testl
in
ret
jne
cmpsl
add
mov
adc
xor
je
xor
sbb
mov
jne
aas
xor
dec
pop
je
pop
xor
inc
or
popa
jbe
or
fwait
inc
fwait
pushf
subw
popa
test
repnz
ss
dec
repnz
movb
sbb
outsl
push
xor
pop
add
add
xchg
cld
jne
add
adc
sub
fstps
xchg
mov
movsl
jmp
push
lcall
mov
aad
push
mov
dec
add
pop
jo
push
mov
insl
aad
or
jl
xchg
jg
mov
pop
jnp
xchg
repnz
pop
aaa
adc
xchg
and
fimuls
imul
mov
stos
sbb
push
stos
xchg
fbld
lea
jnp
scas
aam
cmpsb
aam
insl
call
sub
cltd
xchg
xchg
cmpsl
scas
sub
xchg
adc
cmp
add
add
mov
sbb
mov
push
pusha
push
mov
xor
push
nop
in
add
pop
push
fisubl
imul
pop
xchg
and
gs
in
jno
mov
push
std
fwait
push
add
out
popf
loop
or
aaa
or
rclb
push
adc
stc
jae
jecxz
data16
lcall
mov
and
out
adc
mov
jg
jle
mov
lods
adc
mov
fldt
inc
outsb
ss
aam
rcll
jp
dec
in
add
hlt
jge
mov
xchg
sbb
mov
fildll
imul
and
inc
jp
or
enter
sbb
nop
mov
sbb
imul
lods
mov
icebp
js
mov
ljmp
stos
mov
xlat
xchg
xor
aam
mov
int3
adc
stos
push
enter
adc
dec
outsb
jno
stos
pop
push
negl
ficompl
scas
imul
pop
outsb
push
popl
push
cli
jecxz
cmp
call
or
fidivrl
ds
sbb
dec
or
incb
ljmp
push
or
sub
inc
jge
ficoms
icebp
sarl
fsts
sbb
mov
aaa
popf
jns
mov
ljmp
outsb
adc
es
cmp
dec
icebp
loop
jge
adc
sti
mov
sbb
sbb
or
dec
xchg
out
scas
pop
jmp
cmp
sub
pop
inc
xchg
fcoms
insb
stc
dec
rolb
outsl
bound
jg
and
ss
ja
fists
xchg
scas
pop
sbb
xchg
push
scas
xchg
rclb
sub
and
jp
pop
inc
enter
inc
dec
mov
insb
lret
sti
push
xchg
push
les
in
xchg
out
shr
insb
ret
jbe
das
xor
pushf
xor
and
popf
stos
xchg
std
leave
or
jl
xchg
jge
sbb
cli
inc
xchg
sub
xor
cmp
mov
xchg
js
pop
push
addr16
push
mov
cwtl
and
push
xor
xor
ret
sub
cltd
mov
sub
add
wbinvd
push
insb
icebp
gs
lcall
and
sub
dec
shll
mov
mov
push
xchg
lds
mov
call
or
add
cmp
xor
outsb
movsl
adc
dec
into
rcll
jb
stos
in
insb
sbb
shrl
xor
push
xchg
popf
jg
out
clc
lods
shr
sbb
movb
pop
sub
pop
add
jge
push
and
out
xchg
testl
imul
fcmovne
jle
mov
sahf
in
jb
ljmp
mov
in
ds
icebp
mov
add
jnp
or
cmp
mov
pop
or
pop
pop
test
mov
repz
mov
hlt
pushf
nop
sbb
mov
or
lret
add
xor
ss
lcall
sbb
sti
cld
mov
rcll
cmp
hlt
adc
int
mov
push
inc
pop
mov
int3
lock
ficoms
jnp
jp
fistpl
push
iret
and
fisubrl
cmp
adc
mov
inc
sbb
outsb
ljmp
adc
dec
mov
and
push
dec
cmp
hlt
cmc
das
ds
dec
sbb
or
jl
mov
jnp
mov
mov
aad
ja
dec
cmp
push
ret
insl
xchg
movsl
push
sahf
sbb
lret
inc
fnstsw
or
out
out
xchg
sbb
and
or
subb
push
push
out
test
dec
cmpsl
test
jp
daa
dec
ret
inc
xchg
or
mov
mov
mov
inc
adc
sbb
sub
mov
nop
repnz
or
xor
mov
add
imul
jmp
clc
loope
mov
test
mov
shll
rcrb
inc
lods
sbb
sub
rcrl
dec
mov
cld
jnp
push
ja
xchg
repnz
or
stos
push
jp
lea
test
add
push
cmc
push
iret
sahf
ss
jno
sbb
push
and
push
mov
jo
scas
cmpsb
enter
sub
cmp
andb
std
mov
and
rorb
out
xor
add
pop
lods
add
insb
sbb
xchg
and
push
adc
xchg
xor
iret
cmp
das
fcomps
fidivrl
movsb
les
or
nop
lret
stos
adc
stos
pop
clc
xlat
popaw
iret
es
pusha
into
xor
sub
and
lahf
xchg
jae
fs
imul
ss
pop
add
loopne
loope
rcrl
sahf
out
cwtl
lcall
jbe
pop
and
int
test
mov
movsb
jno
jae
push
insl
mov
add
fisubs
jne
ret
js
inc
ficompl
aad
mov
sub
pop
fisubrs
inc
push
fs
lods
mov
shll
sbb
jl
mov
rol
mov
and
cwtl
push
ficomps
sbb
call
nopl
pop
and
mov
int
sub
mov
dec
xchg
mov
es
sbb
pop
pop
hlt
xchg
xor
add
daa
sbb
xor
mov
shl
lret
aaa
cltd
or
sahf
es
inc
push
dec
sbb
ljmp
lret
cmp
jnp
outsb
ret
js
cmp
xor
sub
adcl
daa
shll
adc
int3
push
add
adc
inc
in
in
push
mov
xchg
dec
stos
ret
xchg
dec
sti
fstpl
push
outsl
add
leave
aas
sbb
pushf
jecxz
gs
lds
push
or
or
icebp
mov
cmp
faddl
lahf
rcll
out
movsl
xchg
dec
div
sbb
rcrl
mov
gs
call
mov
sbb
or
btc
movsb
cs
sti
pop
and
es
insb
mov
pop
dec
sub
loopne
pop
pop
mov
dec
or
xchg
mov
xor
xor
add
dec
bound
out
stc
out
in
adc
cmpsb
mov
sub
jnp
lea
pop
mov
scas
sbb
leave
dec
inc
mov
inc
pop
xchg
xor
dec
enter
xchg
inc
add
push
push
inc
sub
mov
sarl
sub
fucomi
mov
cs
and
jle
pop
xchg
jmp
push
icebp
scas
mov
outsl
stc
test
jge
in
cmp
out
jae
gs
jecxz
popf
js
sbb
outsl
lods
dec
imul
pushw
lea
mov
cmpb
mov
sub
pop
jbe
pop
jns
outsb
popf
sbb
jp
pop
xchg
data16
into
pop
pop
and
fiaddl
add
inc
push
sub
pushl
in
js
inc
into
push
inc
clc
or
xchg
lea
fucomip
ljmp
xor
add
aaa
or
loope
test
pop
or
jg
loopne
sbb
out
and
fnop
movsl
mov
cmp
jbe
ret
jp
adc
enter
xor
and
xchg
mov
mov
sub
jle
add
adc
add
fstpt
insl
rcrl
sti
aam
dec
jns
or
notl
movsl
movsl
jmp
scas
mov
xor
sbb
mov
lret
and
lock
jp
xor
scas
cmp
mov
push
sbb
int
cmp
shlb
xchg
test
and
shlb
pusha
dec
pop
add
aas
mov
test
jecxz
xchg
sub
pop
dec
jp
das
ja
mov
int3
mov
push
dec
add
cmp
rcll
mov
fistpl
stc
mov
movsb
xlat
ja
pusha
out
cmp
fcmovbe
sub
pop
dec
jne
movsb
outsb
or
rcr
lahf
or
add
adc
xor
fmuls
pop
sbb
dec
pop
data16
les
lahf
aaa
or
and
cmp
add
std
jl
push
popa
mov
scas
xchg
test
mov
cmp
mov
mov
jl
xchg
fcompl
pop
ss
pop
shr
xchg
neg
out
sub
mov
ds
or
sbb
inc
aad
out
icebp
loop
fcmovu
ds
or
aam
push
xor
adc
fistpll
adcb
and
imul
fstpl
jns
mov
rcl
pop
push
arpl
leave
mov
sbb
arpl
push
mov
pop
jp
adc
inc
in
ds
mov
jle
xchg
adc
aaa
test
call
aad
out
or
sti
mov
outsb
mov
imull
or
ljmp
or
inc
js
push
incl
lahf
mov
dec
stc
sub
pop
out
push
inc
xlat
cwtl
rcrl
sub
inc
fistpll
or
pop
dec
sub
jne
inc
mov
leave
or
js
xor
or
push
sub
mov
es
or
sti
imul
and
jge
inc
test
nop
lcall
xor
pop
cwtl
jecxz
cmp
jle
or
je
mov
out
fildl
pop
ja
mov
outsl
addr16
pop
jb
out
inc
je
pop
mov
test
lret
pop
pop
imul
mov
pop
out
fs
enter
inc
xchg
shrb
insl
xchg
mov
push
shl
mov
push
test
inc
out
jp
mov
insb
xor
mov
fs
xchg
in
add
adc
mov
jle
cmpsb
int
jb
out
ds
lahf
push
xorb
pop
cmp
adcl
mov
push
cld
jp
inc
sbb
push
mov
mov
mov
xor
fs
push
cwtl
bound
mov
loopne
jb
and
movsl
mov
ret
cmp
in
pop
and
fs
inc
sahf
jb
rorl
aam
pop
push
aam
mov
pop
sub
pop
push
mov
push
mov
cwtl
sub
jmp
dec
adc
mov
mov
les
mov
adc
aad
insl
movsb
mov
sub
jb
jmp
and
pop
lret
into
push
jns,pt
daa
in
dec
dec
or
mov
mov
cmp
dec
movsl
fisubs
mov
sbb
xchg
sbb
jbe
adcl
jge
jp
or
mov
lcall
repnz
andb
fucomi
cwtl
aad
mov
lods
test
pop
outsl
mov
inc
pop
ljmp
orb
aaa
in
in
repnz
test
sub
xor
inc
subl
aam
mov
ficomps
sub
push
inc
push
stos
xor
cmpsl
xor
jne
jmp
stc
mov
push
sbb
adc
xor
test
filds
test
mov
lods
daa
in
add
jg
ljmp
jbe
and
je
cmpsb
loope
sub
clc
push
jne
ss
out
scas
inc
adc
adc
sub
ds
push
xor
mov
mov
cld
xchg
mov
jecxz
iret
sbb
sub
jmp
std
jl
pop
sub
insl
mov
jae
push
sub
jge
jecxz
lods
add
push
cmp
sbb
mov
ss
pop
and
fadds
pop
pop
and
bound
fwait
lods
push
daa
repz
or
incl
into
mov
cs
xlat
push
mov
pop
and
mov
aaa
bound
mov
in
jno
arpl
cmp
add
lods
sub
loopne
dec
test
jmp
movsl
inc
sub
les
lods
or
cld
pop
jmp
aas
std
push
pop
mov
lahf
ret
dec
and
fidivrl
mov
pop
std
jne
sahf
clc
lahf
or
jbe
icebp
fistl
sub
mov
icebp
cmp
pop
or
aam
mov
or
mov
dec
jo
addb
jns
ljmp
pop
lds
cli
or
xchg
shl
arpl
ret
test
into
int
enter
cmp
jbe
mov
xchg
lret
inc
outsb
push
jp
in
mov
mov
mov
dec
add
adc
std
addl
mov
push
mov
sub
loopne
fmull
cwtd
je
xor
pushf
idiv
fwait
mov
lahf
mov
je
sub
fidivl
dec
add
loopne
inc
xchg
insb
mov
lret
ret
mov
imul
and
xorl
add
xor
xchg
daa
in
push
dec
inc
mov
push
ja
mov
fstp
jbe
jbe
and
push
dec
int3
imul
popf
out
dec
cwtl
nop
call
fcmove
jo
push
push
out
movsb
outsl
pushf
jns
xchg
or
pop
lcall
loopne
cwtl
push
movsl
inc
push
add
pop
xor
add
or
rcrl
mov
xor
shlb
xor
inc
jne
xchg
outsb
repz
ror
rcr
lock
int3
sti
lret
addr16
cmpsl
les
xchg
pop
ret
pop
ret
push
insb
add
push
fidivrl
pop
repz
fisttps
adc
sahf
out
adc
lahf
les
adc
fldcw
imul
mov
fiadds
fadds
out
and
filds
mov
es
gs
test
jne
vxorpd
mov
cmp
insb
out
fldl
add
sbb
push
add
aas
or
outsl
test
dec
dec
adc
ffreep
incb
imul
in
pop
pop
shrl
mov
sub
pop
mov
inc
and
divl
stos
out
add
inc
iret
sbb
sub
int
loopne
cmc
push
into
mov
jmp
out
ljmp
or
iret
aam
inc
inc
sti
into
adc
sti
aad
shlb
les
jg
xlat
fidivrl
mov
sahf
cmp
hlt
and
adc
inc
inc
popa
xchg
or
movsl
test
stos
and
mov
call
int
jge
popa
fcoml
xor
or
jl
dec
es
inc
cmc
test
add
sub
stos
add
cwtl
lods
inc
sub
loope
loopne
rcrb
test
jge
inc
mov
ss
push
mov
dec
cmp
test
insl
mov
xor
add
arpl
pop
lods
push
sbb
int3
or
lea
xor
ja
in
inc
cmp
mov
adc
pushf
popa
insb
aam
mov
and
loope
and
dec
sbb
mov
jno
sbb
inc
cwtl
in
inc
push
pop
aad
adc
mov
xor
aam
stc
mov
lea
in
inc
jle
test
and
jne
scas
cmpsb
push
xchg
enter
ja
daa
inc
push
test
subl
and
aaa
divb
mov
cmp
and
test
out
or
sbb
lcall
adc
subl
xor
outsl
mov
subb
rorl
or
cld
inc
fisubl
mov
xchg
and
mov
cmp
dec
std
ret
inc
daa
rcrb
ficompl
rclb
cmp
aas
orb
lods
pop
outsl
lds
arpl
xor
jnp
mov
repnz
scas
fistpll
cmpb
adc
adc
inc
bound
mov
sub
pop
bound
mov
popf
mov
inc
mov
inc
and
inc
jl
pop
dec
push
insl
insb
sbb
test
enter
jnp
out
adc
lcall
clc
scas
lret
popf
sub
or
lods
and
cmpsb
mov
jnp
xor
xor
mov
jnp
lret
test
test
test
jae
pop
test
adc
and
sbb
adc
out
add
insl
test
out
ljmp
ds
in
test
enter
popa
jnp
mov
mov
je
jnp
cmp
or
cmp
mov
cmc
pop
add
sub
fistl
dec
roll
insb
dec
mov
lcall
xchg
mov
jns
das
pop
pop
jnp
es
aaa
fsubrl
inc
xchg
xor
jae
call
push
test
push
add
roll
mov
mov
dec
loopne
xchg
cmc
add
mov
push
lret
ret
dec
stos
sub
jle
pop
leave
jb
out
xlat
pop
out
jns
mov
int3
xchg
enter
fiadds
and
ljmp
xchg
and
addb
and
dec
aas
or
push
ja
sbb
pop
sub
insb
pop
dec
dec
dec
hlt
push
or
mov
and
push
nop
and
sub
nop
mov
xchg
dec
inc
test
iret
mov
jmp
push
popf
aaa
test
cmp
add
cmp
lds
push
mov
or
push
jb
jae,pn
mov
lret
icebp
stos
and
pop
jo
sub
and
test
iret
adc
mov
data16
addr16
arpl
pop
shll
fisubrl
push
fldz
inc
aam
jg
testb
es
int3
adc
cmpsl
cltd
sar
cld
xchg
cmp
mov
sbb
add
pusha
inc
push
cmp
mov
sbb
fisubrl
hlt
xor
test
push
mov
mov
pop
popf
push
jbe
and
mov
dec
or
jmp
jne
push
and
ffreep
mov
sar
test
sub
outsl
shrb
test
xor
cmp
lods
and
idivl
imul
inc
jne
int3
jmp
mov
scas
leave
movsl
stos
pop
fbld
lock
fnstsw
call
call
lret
and
loope
xor
cmp
mov
shlb
jp
shl
test
ss
or
fsubrl
ds
call
ja
ja
inc
mov
cmpsl
add
lods
mov
pop
lock
nop
dec
and
jno
jg
in
lds
pop
lods
repz
lods
out
jmp
and
js
add
fadds
loope
pop
add
push
sub
imul
sub
jmp
cmc
loop
xchg
stc
gs
dec
jb
rolb
nop
or
sub
stos
insb
inc
xchg
xor
outsb
lods
aam
sti
or
sahf
hlt
xchg
mov
test
out
push
pop
and
enter
in
aam
jmp
push
and
pop
mov
sub
sbb
sub
scas
fnsave
mov
test
int3
push
mov
fcmovbe
pushf
cmp
fdivrs
xchg
test
mov
ret
insb
call
scas
scas
push
pop
and
fisubrl
outsl
mov
inc
loopne
add
push
ffreep
clc
or
clc
andb
bnd
out
mov
and
bound
sbb
pusha
push
shl
bswap
mov
or
pop
xchg
push
clc
pop
dec
das
xor
jns
negl
xchg
dec
jns
pushf
clc
and
add
pop
outsl
pop
push
pusha
lret
push
cltd
mov
jno
jg
add
iret
ljmp
outsb
mov
lahf
mov
push
or
and
mov
sbb
into
mov
fcmovnu
loope
lcall
mull
sbb
add
and
adc
cmp
mov
sub
ret
inc
adc
cmp
jbe
lret
les
int3
xlat
mov
and
daa
mov
push
out
fisubrl
mov
repz
lahf
insb
add
xor
daa
or
sub
xchg
rcrb
daa
and
xor
jge
inc
mov
and
test
stos
jle
xorb
add
aas
sub
mov
sar
jne
fstl
mov
cmp
or
fwait
xchg
sub
insb
cmp
gs
xcrypt-cbc
cmpsl
push
repnz
lea
jp
pop
cmp
cli
lea
cmpsl
fbstp
fildll
pop
push
movsb
adc
sbb
push
xor
jns
add
hlt
aas
sbb
lret
dec
push
data16
shl
cwtl
mov
enter
cmpsl
inc
inc
test
xorb
notb
test
daa
adc
push
xchg
and
add
fnstcw
or
std
ret
add
push
xchg
mov
arpl
dec
xchg
nop
mov
cmp
in
fidivrs
mov
xchg
loope
aaa
fists
add
outsb
push
add
add
test
xorl
sbb
pushf
mov
lea
popf
xor
sti
mov
xor
mov
sbb
xchg
mov
cmpsl
stc
lcall
je
loopne
jle
inc
stc
jle
xchg
pushl
idivl
mov
push
std
dec
sahf
mov
imul
stos
repnz
stos
dec
dec
pop
into
iret
pcmpeqd
xchg
and
subb
jo
add
std
inc
ss
push
xchg
mov
cmpsl
cmp
sbbb
lods
jmp
loop
mov
mov
or
stos
test
adc
scas
cmp
mov
ficoms
scas
mov
push
lahf
int3
mov
shrb
add
and
jmp
movsl
push
xor
movsl
sbb
push
mov
xor
lcall
push
jo
imul
imul
mov
fldt
adcl
and
adc
in
mov
jg
mov
cmc
daa
movsb
xchg
sahf
in
mov
mov
mov
scas
lods
imul
or
cmc
jb
pop
lret
pop
fwait
loope
push
mov
add
jo
jge
lods
pusha
or
sbb
cli
cmp
int3
lods
int
mov
mov
xlat
in
adc
stc
sbb
pushf
xor
imul
addr16
and
and
mov
imul
jb
stos
sti
adc
cmc
stos
add
inc
pop
xchg
fimuls
add
cmp
jecxz
movsl
jecxz
rcr
stc
mov
rorl
pop
cmp
or
loopne
addr16
xchg
pop
xor
jbe
scas
js
mulb
out
fdivr
add
int3
fs
stos
jbe
rclb
mov
mov
sbb
mov
dec
pop
xchg
imul
nop
jbe
pop
sub
nop
sbb
nop
mov
cwtl
in
in
pop
xor
jne
sub
lcall
sahf
and
mov
mull
popa
sbb
dec
aad
inc
movsl
aam
adc
jbe
clc
scas
popf
out
mov
popa
leave
push
mov
or
jle
nop/reserved
mov
xchg
and
xchg
lock
push
out
jp
cmp
cmpsb
int
dec
scas
daa
cs
pop
cmp
fisubrl
jmp
movsl
mov
jmp
fisubl
lea
inc
scas
mov
add
jbe
mov
arpl
sub
mov
sbb
out
push
call
push
inc
mov
pusha
pusha
cwtl
and
stos
add
imul
in
jae
stos
cmpl
outsb
push
repnz
movb
stos
sbb
jne
mov
out
negb
sbb
mov
adc
mov
js
inc
mov
pop
aad
push
lock
mov
cs
jbe
cli
pop
xor
adc
in
sbbl
jne
xor
hlt
cmp
xlat
adc
mov
inc
mov
adc
xor
lret
mov
icebp
test
mov
fcoms
pop
lcall
xor
push
push
out
xchg
xorl
cltd
xlat
stc
inc
cld
sub
pextrw
fs
jg
jne
xor
ret
aam
pop
mov
cmp
fs
test
clc
insb
push
pop
sahf
dec
add
adc
sbb
jns
add
lcall
adc
out
add
gs
enter
daa
jl
cmc
repnz
mov
stos
dec
or
and
les
cmp
cmp
out
pop
aas
inc
cmpsl
out
into
xchg
mov
out
mov
cmp
jl
cmp
xchg
lds
inc
pushf
add
mov
sbb
je
mov
sbb
push
ds
orb
lods
add
mov
fs
adcb
lea
es
and
mov
fwait
sub
rorb
cli
mov
jbe
shll
jge
sbb
push
into
jo
leave
and
or
push
negl
test
pop
popa
add
xchg
add
ror
imul
pop
cwtl
and
repz
lcall
shlb
mov
sbb
xchg
mov
jge
fs
loop
cmpsl
pop
push
movsb
mov
loopne
inc
mov
ja
inc
dec
decl
cmp
xor
push
cmc
add
out
ficoml
xchg
inc
add
sbb
repz
sub
push
rorb
mov
sub
loop
mov
mov
jp
fs
lret
adc
xchg
inc
rorb
xchg
jge
dec
adc
int
push
stos
dec
arpl
aas
dec
jge
mov
mov
stos
or
aas
int
fistl
je
push
pop
insb
cmp
sub
ret
icebp
jmp
jnp
loope
repz
clc
mov
lods
negl
jecxz
or
imul
es
sub
mov
jae
ret
sahf
jbe
fnsave
sub
mov
rcr
xor
lcall
xor
adc
mov
fs
pop
test
dec
out
stos
movsb
clc
enter
mov
das
and
ret
dec
mov
add
jmp
sti
mov
cli
sbb
add
jbe
lock
loope
pop
test
fistpll
sarb
dec
outsb
jle
and
fdivrl
flds
mov
inc
cmp
inc
jno
pusha
cmc
mov
icebp
cs
movl
ret
cmp
js
xchg
aam
insl
fildll
lds
adc
mov
mov
test
cmp
xchg
scas
ss
dec
leave
push
shrl
rclb
inc
cmp
scas
sbb
mov
mov
outsb
stos
mov
fcmovnu
push
xor
call
insb
rclb
int3
popa
lahf
sub
test
mov
repnz
fsubs
inc
es
aam
or
xor
movsw
hlt
and
dec
mov
cwtl
jp
sbb
adc
lret
pop
and
ret
push
jae
mov
adc
pop
jnp
add
out
cmp
sub
xchg
lret
in
xchg
adc
lcall
and
mov
shlb
sbb
xor
xchg
push
mov
mov
arpl
rolb
cmpsl
rcrb
rorl
into
cmp
adc
imul
test
gs
mov
xor
loop
imul
add
fwait
mov
jle
dec
mov
jmp
rcrl
push
push
cmc
adc
nop
adc
inc
dec
mov
jae
leave
add
icebp
rol
fwait
adc
bound
fidivl
divb
in
aaa
fcomps
jge
add
dec
jne,pt
jnp
mov
das
cli
jnp
js
pop
test
lods
adc
jge
xorb
js
fsubp
push
repz
cmp
xchg
jb
sarb
fs
data16
dec
push
adc
ds
out
push
ss
sbb
mov
mov
sub
cmp
xor
iret
lret
dec
popa
jb
sbb
cmp
ja
lret
rorb
gs
inc
test
push
xor
fistpl
mov
out
dec
push
xor
out
and
cmpsl
ds
adc
inc
sbb
cmp
movsl
mov
push
lock
mov
xchg
enter
xor
add
sub
jmp
xor
dec
mov
adc
movsl
cmp
cs
cmpsb
mov
sbb
cmpsl
or
pop
jge
sbb
in
and
xor
shl
mov
mov
sub
fidivrs
cltd
xlat
das
imul
mov
stos
sub
and
test
inc
mov
lret
cmp
leave
add
and
fidivrs
jecxz
test
fmuls
lret
or
outsl
adc
cmp
sahf
lds
and
shlb
subl
inc
or
pop
mov
dec
dec
sub
stos
cmpsl
cmp
mov
jg
stos
pushf
sbb
hlt
stc
mov
clc
add
xorb
cmp
mov
sub
loopne
dec
or
xor
subl
jae
pop
add
int
or
idivb
sbb
mov
sub
repnz
std
fldt
push
outsb
xchg
jp
mov
jg
cmp
pop
aam
movsb
loopne
jg
mov
xchg
loope
jecxz
cmp
ljmp
or
test
push
int3
dec
add
cs
test
repnz
in
or
xchg
stc
cmpsb
mov
jl,pt
sti
scas
or
and
fistps
and
movsb
out
or
dec
inc
fwait
xchg
jmp
add
xor
rclb
xchg
and
insl
stos
out
sub
mov
add
pushf
in
stos
cmp
ss
bound
mov
imulb
loopne
xchg
dec
icebp
sub
inc
xchg
or
xchg
in
mov
outsl
mov
pop
fcomip
insl
pop
xor
xchg
icebp
add
sarb
and
mov
mov
mov
inc
mov
jle
cld
add
fbstp
hlt
flds
sar
ficoml
in
in
test
hlt
test
inc
les
pop
push
insl
fdivrl
cmc
out
and
mov
pcmpgtw
clc
mov
imulb
mov
sbb
mov
sbb
imul
pop
in
notl
std
iret
in
repz
dec
fistpll
mov
mov
lea
aaa
push
ret
in
cmc
je
sbb
sub
xchg
pop
fsubrl
xchg
das
in
fs
dec
rol
int3
xor
dec
mov
loopne
mov
lcall
jecxz
popa
mov
jg
sbb
out
sahf
xor
jle
cltd
aam
stos
xchg
insb
cmp
dec
mov
outsb
mov
enter
push
int3
inc
inc
xor
int
jae
push
ja
fucomip
std
push
dec
sbb
jns
xor
add
lcall
imul
out
in
sub
mov
xlat
scas
stc
sbb
inc
jne
rcl
push
jge
setns
xor
icebp
mov
js
cwtl
cmp
mov
bound
xor
and
mov
mov
mov
lods
inc
pop
cs
out
add
xorl
inc
and
xchg
in
push
lahf
test
out
xchg
ret
lret
mov
and
icebp
ret
jecxz
int
sub
cmpsl
sub
pop
inc
leave
xchg
pushf
jnp
inc
in
cmpsb
sbb
test
dec
pop
mull
sbb
movsl
mov
frstor
iret
addb
lcall
or
repz
subb
aam
fsub
pop
mov
cmpsb
add
add
rorl
popf
arpl
or
jmp
push
sub
jecxz
mov
in
push
out
sarl
pop
lods
jmp
inc
test
dec
ss
sahf
sub
mov
xorl
cmp
cmp
mov
xor
test
arpl
jl
arpl
sahf
pop
jmp
enter
arpl
out
xchg
repz
or
pop
ja
ret
adc
xchg
pop
jb
or
adc
aas
jmp
out
adc
fsts
scas
sbb
into
sub
push
inc
outsb
cli
pop
mov
push
inc
fisubrs
pop
hlt
push
ja
mov
loopne
cli
testb
cmp
jmp
add
cmp
js
or
sti
out
bnd
cli
or
pop
and
es
inc
cmp
paddw
cltd
cmp
push
lods
outsl
hlt
into
loopne
imul
xor
cmp
mov
es
and
jl
sahf
out
pusha
inc
or
or
js
inc
lret
lods
inc
inc
daa
cmp
testb
xchg
outsb
xor
mov
cmpsb
dec
push
mulb
test
ds
cltd
shrb
mov
or
fsubl
loopne
sub
in
xor
cltd
jo
cmpsl
ss
dec
insb
sub
or
push
arpl
mov
inc
add
dec
jmp
leave
popa
data16
in
fldcw
out
jbe
cli
loop
adc
inc
in
push
out
lea
jbe
mov
imul
js
or
scas
pop
sbb
icebp
push
jecxz
sub
mov
ljmp
dec
ja
testl
xchg
popl
and
dec
xor
mov
nop
fstl
mov
gs
jle
and
rcrb
cmpsl
push
cmp
or
jb
ret
cmp
fildl
pop
and
add
in
add
push
mov
mov
roll
mov
sub
movsb
adc
stc
pminub
hlt
cltd
inc
sahf
or
mov
ret
push
and
gs
push
lods
divb
arpl
notb
cmp
pop
dec
mov
test
xchg
cmp
cld
adc
cmpsb
fnstsw
loope
dec
cld
cmpsb
jno
in
jns
lret
jno,pn
sub
dec
push
rcrb
jae
int3
pop
or
mov
or
jno
les
cmp
push
pop
mov
jae
pop
inc
test
and
hlt
or
dec
aam
or
cld
adc
pop
cmp
stos
and
add
fsubs
sbbb
stos
pushf
push
xor
mov
sahf
dec
sub
inc
inc
jnp
ja
loopne
loope
dec
xor
out
sbb
lret
lock
add
fists
pop
xor
jns
daa
clc
jmp
and
and
add
sahf
mov
nop
test
xchg
cmpsb
ds
sbb
xor
out
aaa
pop
dec
cmp
add
addr16
cmpsl
mov
outsl
fdivl
sbb
scas
iret
hlt
xor
ror
test
out
in
jecxz
pop
sub
lahf
inc
mov
ljmp
mov
ja
cmp
add
clc
ret
lcall
cmp
gs
jno
lret
cmpsl
out
or
lret
aas
xor
jmp
lds
shrb
sarb
out
pop
hlt
mov
in
push
enter
clc
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
push
adc
push
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
xor
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
cmp
movl
jne
subl
xor
inc
xor
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
jne
orl
pushl
andl
pushl
addl
pushl
call
mov
mov
mov
mov
movl
inc
movl
cmp
jne
movl
inc
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
movl
add
lea
xor
xor
add
mov
mov
lea
or
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
or
adc
mov
mov
mov
or
mov
xor
movzbl
adc
mov
mov
addl
add
movl
mov
mov
mov
cmp
movl
jne
or
mov
decl
mov
adc
mov
add
xor
sbb
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
and
xor
xor
add
mov
sub
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
xor
xor
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sub
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
orl
mov
sub
mov
add
movl
mov
movzwl
add
mov
adc
mov
xor
andl
xor
add
movzbl
and
mov
xor
xorl
xor
sbbl
add
lea
mov
mov
mov
movl
cmp
ja
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
xor
lea
orl
mov
mov
xor
adc
lea
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
adc
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
movl
sub
mov
or
mov
xor
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
subl
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
subl
mov
xorl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
mov
and
movzwl
xorl
mov
andl
movb
xor
lea
subl
mov
add
mov
and
mov
xor
andl
sub
adcl
mov
add
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
sbb
push
sbb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
push
movzbl
sub
mov
mov
mov
adc
mov
xor
neg
mov
push
add
movl
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
and
mov
sbbl
xor
add
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
adcl
mov
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzwl
sub
mov
add
movzwl
mov
mov
subl
movzwl
addl
xor
subl
add
mov
movl
mov
movzbl
inc
mov
cmp
movl
jne
and
mov
mov
addl
xor
add
subl
mov
subl
mov
xor
subl
add
mov
mov
movl
movl
movl
movzwl
mov
mov
movl
jmp
xor
mov
mov
add
mov
xor
xor
sub
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
xor
adcl
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
jmp
mov
enter
imul
sahf
arpl
xchg
cld
popa
bound
bound
xchg
movsl
sub
adc
sbb
aam
adc
sbb
in
jbe
aam
repnz
xchg
sar
jno
xor
push
mov
js
xchg
data16
cli
fisubs
ret
leave
jecxz
faddl
inc
out
xor
adc
xor
sahf
test
test
popa
cmp
rcl
mov
jne
rorl
loope
inc
scas
sbb
pop
out
and
sahf
cli
popa
out
mov
scas
vmovupd
jge
loop
ljmp
dec
dec
loopne
pusha
in
dec
mov
rorb
orl
push
mov
orb
or
jae
test
lods
js
mov
push
stos
or
pushf
mov
lahf
push
adc
and
mov
insl
imul
mov
jmp
outsl
xor
in
or
cmp
xchg
pop
lods
mov
outsb
cmp
icebp
add
add
and
xchg
test
std
mov
jg
cmc
inc
jl
lods
repnz
fs
push
sahf
into
push
jp
repz
push
in
pushf
insl
adc
xor
add
add
xor
xchg
mov
pop
test
mov
pop
add
cmc
xor
xor
and
repnz
or
sub
sub
pop
push
movsl
ret
jmp
sub
outsl
call
ljmp
into
sbb
xlat
fdivrl
sub
cmp
mov
jb
mov
and
mov
out
cmpsl
sub
pop
xlat
fisttps
stos
mov
dec
cmp
js
or
pop
pop
xchg
roll
lods
xor
push
xchg
out
add
loope
inc
sahf
loopne
xchg
push
ja
cmpsl
adc
scas
cmc
mov
out
test
js
jge
dec
mov
sahf
sbb
mov
cmp
xchg
js
lret
cmpsb
loope
push
jno
mov
out
pop
mov
mov
loopne
jbe
fs
jne
adcl
arpl
dec
adc
cltd
arpl
jb
scas
or
fidivrl
lods
pop
mov
nop
out
xchg
mov
dec
les
mov
cmc
aaa
push
aaa
popf
test
pop
cmp
mov
jne
and
inc
psubsw
mov
gs
cmp
cld
xor
pusha
in
sub
xchg
xchg
scas
aas
ret
and
lods
stc
out
cmp
or
sub
fldenv
sarb
xchg
cmp
push
pop
xchg
add
repz
movsl
aas
jg
sbbb
stos
mov
mov
je
xchg
aas
mov
ret
jbe
xor
xor
rcr
or
sti
iret
shl
pop
ja
or
dec
pop
xlat
mov
and
movsl
sbb
cwtl
and
sbb
lods
and
jne
lret
mov
stos
xor
pop
inc
daa
jns
cmp
and
mov
jae
cmp
jecxz
shlb
sbb
lret
xchg
js
mov
jp
push
xchg
adc
imul
mov
je
add
adc
icebp
mov
lahf
test
cs
cwtl
cli
or
xchg
je
data16
mov
fwait
jp
out
test
in
ljmp
xchg
fs
and
icebp
mov
enter
mov
repz
fidivrl
movsb
call
stc
enter
sbb
and
in
aas
popa
jne
dec
xorl
xchg
and
and
cmc
cmp
add
xchg
push
mov
inc
adc
xchg
xchg
push
dec
out
add
pop
mov
clc
sahf
in
xchg
jb
es
stos
push
push
dec
leave
dec
sar
imul
shr
imul
push
inc
add
sub
adc
push
sbb
nop
cmp
lods
sub
xchg
mov
call
mov
pushf
pusha
cld
push
nop
add
sbb
lock
dec
movsl
lods
dec
popa
or
push
or
push
in
orb
sbb
mov
dec
loopne
or
test
mov
jo
addl
cmpsb
push
xor
outsb
cld
ret
mov
sarl
xchg
pop
sti
icebp
mov
sub
cmpsb
adc
aad
mov
push
roll
push
aaa
dec
sbb
mov
fs
pop
or
aad
movsb
daa
mov
andl
dec
push
and
push
lock
imul
fisttps
dec
sarl
add
pop
test
ss
or
or
in
cli
xchg
inc
out
out
and
push
iret
mov
cwtl
shll
addb
mov
int3
js
ja
ja
movsl
cmc
cmpsb
cmpsl
sbb
scas
xchg
rolb
loop
lods
bound
cwtl
ss
mov
addb
idiv
mov
aas
lea
push
inc
fimuls
outsl
addr16
mov
cmc
adc
push
xchg
cmpsl
sub
in
xchg
mov
mov
push
mov
inc
or
push
push
mov
jecxz
adc
test
scas
mov
fcmovnb
scas
mov
and
into
mov
movsb
inc
cmp
sbb
push
fdivrl
adc
flds
hlt
fisubrs
mov
jo
push
cmp
push
dec
mov
aaa
lods
jg
popf
aas
sti
loopne
andb
and
sbb
call
rclb
aas
les
inc
in
imul
push
inc
int3
push
imul
xor
xchg
rcrl
sbb
inc
cmp
inc
push
pop
add
pop
dec
and
in
cltd
and
loopne
dec
adc
adc
dec
ljmp
fadd
lret
pop
pop
iret
lds
sub
mov
inc
sbb
js
stos
ror
icebp
jae
jbe
popf
icebp
sbb
aaa
lahf
jg
rcrb
inc
dec
lds
data16
in
xchg
dec
jp
jmp
jecxz
xor
scas
nop
jge
fstpt
inc
inc
add
sub
mov
pusha
enter
rclb
out
sbb
dec
pop
xor
stos
mov
sbb
loop
stos
imul
lcall
xchg
pop
cmpsb
mov
jmp
push
sbb
lret
in
lahf
adc
push
loope
fbld
mov
hlt
mov
fstpt
clc
loope
inc
xor
xor
add
push
adc
or
fsubl
in
repz
xchg
pusha
insl
cmp
push
mov
cmpl
push
dec
and
xchg
pop
push
repnz
sbbb
movsb
jp
sahf
fsts
adc
dec
fisttpll
jns
cmp
test
cmp
mov
mov
std
rcll
inc
push
jo
mov
cmp
adc
mov
subb
sub
mov
imul
cs
in
and
xor
jg
cwtl
mov
jmp
gs
adc
out
aad
les
out
xor
std
mov
mov
loope
and
add
push
xor
pushf
mov
sbb
std
in
sbb
adc
hlt
mov
or
test
pop
mov
mov
xor
mov
mov
jg
lds
shll
rcl
mov
loop
mov
cmp
xor
mov
add
fsubrl
sbb
jbe
or
dec
outsb
sbb
shlb
loopne,pt
inc
out
divl
es
jo
fsubrl
pop
arpl
adc
cmp
popf
cmc
dec
add
fisubrl
movsl
or
cli
cld
iret
fisubl
fildll
nop
jae
inc
fisttps
daa
in
mov
adc
push
pop
jbe
call
inc
pop
sbb
pop
xor
inc
sbbl
ds
mov
rclb
push
mov
mov
test
sbb
andl
call
rorb
pop
mov
inc
bound
aas
mov
aam
mov
pushf
dec
jno
test
inc
jb
ja,pt
jp
lahf
pop
lret
test
pop
stos
outsl
cltd
call
cmpsb
jb
add
andl
dec
push
or
mov
and
incl
loope
sbb
mov
sub
loop
pop
inc
mov
push
mov
sbb
call
cmc
shl
in
xor
xchg
fsubr
ja,pn
mov
aaa
aaa
jg
imul
cmp
jecxz
sbb
push
stos
scas
push
les
dec
es
pop
lret
insl
jp
add
roll
xchg
adc
and
inc
xlat
pop
gs
add
icebp
mov
pop
and
lahf
add
sbb
scas
lods
loopne
cmpsb
hlt
test
xchg
push
or
pop
xchg
push
or
xchg
mov
out
in
or
inc
inc
and
imul
ja
rcr
movsl
inc
leave
and
jle
test
cmc
inc
xor
cmpsb
dec
mov
or
mov
enter
mov
sbb
popa
fs
pop
int3
lcall
mov
inc
in
pop
jg
cwtl
std
cltd
add
pop
push
mov
sbb
xchg
push
scas
sahf
stos
jecxz
pop
testl
ds
cmp
jle
arpl
icebp
or
jnp
jnp
shlb
pop
cmp
loopne
add
into
jne
imul
jae
outsb
add
push
and
mov
xor
jmp
ljmp
mov
mov
push
sub
inc
mov
mov
leave
or
ja
pop
and
stos
mov
negl
cmc
stos
pop
pusha
loope
mov
pop
and
fnstcw
icebp
add
cld
lea
pop
cmpb
popf
in
mov
fs
in
fidivrs
jo
shl
mov
cmp
push
pop
into
jbe
fdivs
dec
popf
xchg
insl
sub
stos
mov
hlt
or
adc
dec
imul
js
fcompl
sti
inc
add
mov
push
movl
push
add
adc
jge
scas
nop
mov
xchg
xor
popa
or
lods
xchg
inc
sub
and
dec
inc
aas
fstl
es
lcall
lret
xorl
sbb
into
sbbb
and
iret
xchg
test
jg
rcll
lret
notl
lock
dec
inc
outsb
xchg
or
xorb
movsl
inc
mov
xorb
sub
pop
cltd
pop
inc
and
push
mov
aam
insl
popa
leave
pop
inc
and
add
mov
mov
push
loop
mov
faddl
mov
and
cmpl
fimull
dec
lret
cltd
xchg
mov
mov
outsb
lret
fsts
scas
mov
daa
js
lods
jae
mov
sete
sarb
sbb
add
leave
sub
cmpsl
xchg
fadds
or
fidivl
inc
mov
in
arpl
push
xor
bound
mov
fcom
xchg
sub
xorb
push
movsb
mov
lock
sub
or
repnz
in
and
lods
inc
push
pop
sbb
sti
lcall
insl
sahf
add
xchg
push
mov
je
jbe
push
push
mov
lock
jae
pop
fdivrl
hlt
push
dec
sbb
jl
jge
xchg
dec
ss
arpl
sub
xor
lods
out
mov
adc
inc
fldcw
fstpl
mov
fisubs
cmp
and
or
aad
push
push
sarl
mov
jbe
sti
pop
jb
jbe
daa
jp
xchg
add
popa
in
imul
mov
xchg
and
test
push
pop
call
mov
leave
out
out
fs
adc
xor
mov
in
add
je
cmp
call
or
xchg
xchg
mov
popf
xchg
and
add
inc
in
jnp
push
xchg
or
adcb
jnp
pop
movsl
push
xchg
hlt
push
jno
push
daa
imul
xchg
push
and
pop
push
cld
xchg
mov
dec
enter
mov
je
add
push
out
lret
enter
inc
sti
lcall
cld
std
shlb
cmp
lods
sbb
push
xchg
pop
jb
dec
adc
adc
pop
push
sbb
jmp
and
out
xor
add
pushf
dec
push
mov
ret
pop
lahf
scas
rcl
dec
inc
pop
outsb
into
out
jbe
mov
and
xor
dec
insb
sub
scas
jp
add
jmp
push
mov
int3
imul
sets
dec
lahf
das
les
mov
jp
adc
jg
jge
xchg
stos
movsl
pop
aad
xor
aam
cwtl
mov
xchg
cmc
mov
pop
mov
out
ja
mov
dec
loope
jo
int3
inc
scas
imul
test
out
jg
enter
call
dec
and
or
push
popa
mov
lcall
push
and
xchg
js
hlt
push
or
jp
add
pusha
mov
xor
out
jae
cmpsl
sub
shl
ljmp
fcoms
cmp
fidivl
jmp
or
jae
fsubrp
data16
imul
mov
sub
or
loopne
xchg
mov
adc
xchg
ja
fsubrl
mov
scas
or
fimuls
pop
push
and
mov
into
jl
pop
cmpsl
dec
js
movsb
mov
lds
and
mov
cwtl
xchg
push
sbb
cmpsb
enter
ret
in
cld
loope
push
jno
xor
and
es
cs
or
xlat
push
or
ss
jecxz
inc
inc
test
aaa
push
je
adc
shll
movsl
mov
adc
mov
shrl
mov
push
inc
lret
mov
js
and
int
or
stc
out
cmpl
sbb
lods
xchg
pop
lret
lcall
xor
cmp
fwait
into
out
ds
fwait
inc
adc
test
lock
pop
push
inc
inc
fmul
mov
sarl
sbb
lods
mov
es
adc
sub
ret
aaa
adc
stc
or
addr16
jns
inc
mov
mov
and
sub
pop
stos
mov
sub
adc
xchg
mov
lret
mov
popa
in
lods
dec
ret
dec
xor
cmp
xchg
pop
xlat
ss
fwait
cli
sbb
orl
rcrl
push
aaa
sub
pop
xchg
pushf
inc
mov
mov
or
push
mov
jno
insl
adc
jp
test
add
stos
cmp
add
cmc
dec
insb
lods
shrb
inc
and
inc
lahf
inc
mov
pop
out
jmp
mov
arpl
cwtl
rcrb
fadd
sahf
enter
outsb
adc
sub
in
lods
inc
test
dec
shl
dec
push
jg
mov
mov
jne
testb
cmpb
lock
jbe
jge
mull
dec
mov
pop
jbe
dec
add
adc
insb
inc
add
out
pusha
or
sbb
push
pop
ret
insb
sbb
clc
adc
andl
shr
movsl
add
dec
add
xor
xor
and
subl
into
fidivs
stc
jno
mov
fldenv
bound
or
xor
test
ja
mov
inc
rcrl
or
pop
loop
pop
hlt
push
lods
inc
incb
daa
test
jecxz
inc
lds
lcall
add
adc
mov
adc
sbb
lock
stc
das
xchg
push
mull
cmp
fsubs
adc
mov
jo
add
add
fmuls
and
and
pop
jmp
insl
nop
cmc
sbb
dec
mov
loop
push
or
les
ret
dec
push
hlt
in
mov
push
sub
push
mov
inc
pop
mov
es
push
push
pop
cmp
je
cmp
push
nop
fsubl
sbb
cs
xor
jmp
mov
push
pop
js
lcall
repnz
in
or
fistps
adc
aam
mov
add
jnp
xlat
jle
cmp
jge
nop
aad
push
lret
rcrl
lret
in
mov
out
iret
daa
mov
sbb
push
mov
decl
movsb
and
jnp
stc
mov
pop
pop
arpl
in
jae
out
sbb
ds
loopne
mov
jp
mov
jnp
push
push
imul
mov
in
push
in
stc
inc
jbe
jmp
adc
mov
mov
test
cmpsb
pop
jp
pop
out
jg
ret
mov
dec
gs
jb
add
scas
mov
das
cmpsb
sarb
or
inc
xchg
jle
xchg
dec
cmp
adcl
jne
sub
shrb
sahf
hlt
pop
insb
out
adc
adc
imul
xchg
ret
lods
jns
mov
repz
shll
mov
mov
mov
lcall
ret
jge
out
dec
pop
sub
xchg
mov
sbb
mov
pop
cmpsb
mov
fimuls
cltd
pop
push
aaa
cmp
sub
int3
inc
stos
inc
lret
imul
sti
rorb
push
repnz
xor
adc
aas
ret
sahf
inc
dec
mov
pop
je
mov
push
xor
inc
dec
ja
mov
jp
lds
lods
jbe
shlb
test
adc
or
int3
pop
cmp
aas
dec
sbbl
ss
stos
mov
dec
out
lods
xchg
out
xchg
fwait
jmp
aas
add
mov
push
and
dec
add
repz
je
inc
cld
xchg
imulb
dec
scas
pop
mov
in
or
inc
mov
repz
mov
fdivr
test
xchg
xor
rclb
lods
jno
js
and
pop
push
mov
jmp
je
mov
insb
cs
in
test
imul
aas
in
adc
stos
jecxz
aaa
ret
fbld
jb
insb
xchg
mov
xchg
ret
or
push
loope
mov
and
dec
mov
insb
mov
cld
lret
int
inc
jp
js
aas
jp
sub
xor
xor
and
leave
lret
xor
push
je
ds
lret
movsl
ret
or
dec
pop
cwtl
ja
dec
popf
shr
pop
inc
mov
mov
out
pusha
movsl
jnp
push
lods
hlt
cli
loopne
lahf
movsb
ret
sub
fistl
inc
and
repnz
mov
inc
leave
adc
mov
das
scas
outsb
pop
in
and
mov
push
in
pop
mov
arpl
sub
sbb
loop
pop
test
adc
cmpsb
cmp
xchg
jne
xchg
shl
popa
das
mov
fidivrl
adc
jg
cmp
and
xlat
lods
cmp
jg
xchg
pop
push
sbb
fnsave
cwtl
and
testb
xor
push
and
adc
jmp
pop
shrb
imull
and
pop
jne
pop
stos
imul
sbb
out
sahf
and
jo,pt
stc
sahf
fwait
push
cmp
xchg
sub
fcmovnu
test
icebp
mov
shll
and
test
test
subl
adc
shlb
cmpxchg
sub
ret
pop
pop
arpl
mov
xorb
mov
push
mov
mov
xor
cmc
jl
scas
xor
sti
xchg
imul
xor
cs
xchg
stos
mov
sub
jne
jo
xor
loope
sti
in
xor
xchg
fistl
dec
mov
leave
pop
shr
jae
xchg
rcl
jmp
addr16
das
xor
std
mov
jmp
sarb
xor
jns
lods
pop
mov
outsb
adc
outsl
pop
mov
insl
jne
into
xor
pop
out
int3
inc
dec
les
into
insl
cmovbe
or
adc
mov
xchg
xchg
sbb
adc
fimuls
pop
cmpsl
filds
push
mov
hlt
jge
insb
mov
jb
mov
loop
pop
add
jb
stos
push
fs
dec
jo
jmp
leave
cmp
daa
es
mov
mov
lods
inc
mov
in
loop
dec
and
adc
push
insb
stos
out
imul
mov
aas
je
fisubl
in
stos
mov
adc
cmpsl
mov
xchg
jns
aad
cwtl
push
les
hlt
jb
push
sti
adc
jnp
cmpsl
out
mull
lods
pop
mov
push
add
push
cmp
in
or
xchg
mov
cli
or
iret
cli
loop
movsb
lahf
imul
ret
dec
sub
push
adc
aad
sub
dec
and
test
icebp
mov
mov
dec
in
and
cmp
in
adc
bound
xor
stc
fdivrl
xor
xor
pusha
cli
int3
data16
push
repnz
and
mov
cwtl
les
shl
xlat
push
stos
jbe
adc
jge
mov
lahf
jle
addr16
daa
push
jns
mov
cmp
sti
testb
test
incl
lea
das
testb
xchg
popf
sub
sub
stc
es
mov
mov
and
out
ret
int
hlt
std
lock
jle
popa
or
mov
idiv
sub
push
pop
mov
mov
mov
jae
sub
xchg
movsb
fbld
lcall
cmp
mov
mov
clc
push
pop
aaa
lret
xchg
sub
loop
jnp
lea
out
mov
mov
jg
dec
pop
mov
lods
mov
aam
jmp
jbe
dec
xlat
js
add
add
add
movsl
mov
inc
mov
cltd
mov
leave
inc
xor
movsb
mov
xchg
jmp
push
fbld
mov
mov
xor
mov
and
shll
jnp
sub
push
cmp
mov
mov
dec
mov
dec
pop
inc
jle
insl
jecxz
popf
and
add
loop
push
or
push
mov
mov
imul
std
and
add
dec
mov
sub
push
fidivs
lds
ja
test
jp
ret
jl
mov
gs
xor
subl
mov
outsb
jmp
mov
mov
xor
xor
inc
pop
pop
sub
stos
and
jae
and
xchg
pusha
adc
xor
sbb
lods
jo
pusha
sub
test
sbbb
dec
and
add
sub
xor
out
fsubrp
pop
xchg
sub
mov
and
out
rclb
pusha
mov
nop
scas
jmp
sbb
ret
xchg
scas
xchg
xor
sti
dec
scas
xchg
add
sub
iret
mov
leave
xlat
lcall
push
imull
mov
cmpsl
dec
cld
xchg
jecxz
fiadds
sub
leave
lds
roll
je
sbb
shll
jmp
add
push
and
jne
xor
stc
fbld
mov
lahf
cmp
pop
insl
cld
fwait
lret
or
sub
jp
lods
leave
mov
loopne
and
mov
mov
or
pop
jmp
pop
cwtl
or
arpl
aas
popf
mov
les
push
addr16
mov
enter
popf
out
fs
or
dec
jnp
mov
enter
add
les
mov
push
aaa
mov
scas
call
rcll
adc
add
call
cld
xchg
ja
pop
ret
clc
and
into
mov
inc
xchg
repnz
adc
in
ja
or
arpl
and
or
lods
popl
jecxz
mov
aam
movsl
inc
gs
dec
mov
js
icebp
mov
adcl
outsb
dec
leave
stc
mov
ret
shll
or
shl
stc
outsb
mov
and
pop
test
adc
pop
cltd
and
test
lret
push
scas
dec
andb
inc
cmp
fists
jo
add
jl
test
fimull
addr16
rolb
mov
xchg
lret
out
mov
pop
fstps
sbb
push
cmp
cmp
in
lods
inc
out
in
icebp
negb
jns
dec
std
stc
sbb
cmp
icebp
dec
test
movsb
dec
pop
push
sbb
imul
push
or
mov
xlat
divl
in
add
lret
clc
sarl
jg
mov
lock
shll
movsb
movsb
push
mov
add
pop
and
cmpsl
fildl
addr16
mov
pop
fadds
mov
dec
xchg
push
ret
sbb
out
aaa
stos
outsl
insb
shll
cmp
add
fisttpll
notl
mov
cwtl
insb
add
cmp
lret
add
jnp
enter
dec
mov
or
das
adc
inc
pusha
jle
stos
or
cmp
in
std
xchg
xor
test
nop
jle
cmc
aaa
popf
mov
push
sbb
cmc
loop
popf
cmpsl
sbb
pop
movb
mov
jnp
xchg
mov
cli
popa
cmp
push
fs
imul
inc
test
call
adc
dec
cmp
aas
adc
mov
das
or
iret
adc
mov
jne
loopne
fistpll
cmp
xor
sbb
push
add
leave
push
dec
sahf
jb
mov
aas
es
push
sti
inc
sbb
sbbb
ss
loope
inc
push
and
mov
lcall
inc
jb
scas
sub
ds
xchg
and
adc
dec
ljmp
std
mov
pop
enter
mov
mov
fsubl
pop
ja
into
in
cli
in
jb
mov
mov
in
xor
or
cmpsb
jb
push
sbb
dec
out
in
popa
jge
xchg
xchg
xlat
fcom
lock
lea
addr16
arpl
mov
mov
mov
pushf
pop
iret
in
jb
stc
jle
jle
dec
xchg
test
movsb
cmp
iret
push
xorb
jp
aaa
jnp
xacquire
call
xor
mov
cmpsl
pusha
enter
ds
jno
ljmp
call
add
mov
jmp
bound
or
pop
aas
and
cmc
cmp
loope
pop
into
push
dec
test
fadds
cld
add
aad
push
sbb
mov
in
aaa
mov
and
es
pushf
sahf
mov
loope
sub
push
clc
xor
mov
inc
out
sarl
jne
jle
mov
repnz
xchg
icebp
stc
jbe
je
push
xchg
ss
adc
mov
movsl
pop
dec
xor
mov
sbb
push
imul
or
jecxz
rolb
push
xor
iret
and
fildl
lea
add
ret
jno
das
fbld
std
mov
or
xor
sbb
fcompl
xor
mov
sbb
inc
sbb
mov
pop
sbb
and
pop
nop
fiadds
pop
xchg
test
and
xchg
sub
rcrb
and
sbb
cs
pop
call
xor
inc
pop
jmp
scas
fdivl
lds
mov
sub
push
je
popa
fmull
sti
js
push
pop
lds
in
scas
jo
leave
jmp
push
mov
popa
outsl
pushf
insl
xor
scas
lds
pusha
scas
lods
fmul
lret
popa
mov
cld
test
and
and
fisttpll
pusha
orb
ja,pn
aas
inc
push
jae
stc
mov
sub
and
mov
inc
mov
repnz
arpl
mov
daa
subb
cmp
les
into
idivb
mov
mov
sub
jb
push
xchg
push
shl
add
mov
les
sarl
loope
or
insl
enter
repnz
pop
dec
out
xchg
bound
loop
andb
nop
cld
mov
ja
andb
ljmp
aaa
icebp
aas
mov
jbe
xor
push
das
imul
cld
ja
push
xchg
test
mov
push
call
inc
pop
sub
cli
into
cmp
inc
lret
and
inc
fcmovnu
or
jl
loop
cmp
dec
xorb
loop
ss
xor
inc
in
fdivrs
pop
and
inc
das
fidivrs
mov
test
cmp
mov
pop
in
js
stos
xchg
sub
lcall
add
push
pop
cmp
cltd
lods
or
mov
pop
int
push
or
adc
add
dec
out
fwait
and
outsl
mov
sbb
clc
sub
into
fcomip
popa
imul
inc
lods
mov
pop
mov
jecxz
push
movsl
subl
cmpsl
add
mov
repz
ss
test
aad
dec
xor
int
pop
int3
std
mov
pop
pop
or
je
ret
or
inc
ljmp
and
mov
inc
jb
sbb
jl
push
add
xor
les
sbb
aaa
push
shll
sub
push
scas
out
fildl
or
daa
stos
pop
push
push
cmpsl
fidivl
jo
pushf
stc
pop
add
xchg
push
rolb
add
pop
jg
pop
testl
andl
adc
push
mov
xchg
clc
outsb
pushf
adc
sbb
sbb
cmp
in
sub
mov
mov
fiadds
cmp
in
insl
xchg
cmp
ja
mov
imul
inc
xchg
add
xor
cs
inc
cmp
fistps
adc
loope
loope
insb
popa
inc
sbb
inc
and
jge
ljmp
inc
dec
sbb
sub
xchg
fldt
xchg
add
mov
mov
mov
push
fistps
call
xlat
or
mov
in
lea
orb
leave
xor
fcomps
lahf
push
sub
leave
mov
imul
test
test
add
test
das
cmp
pop
or
in
fiadds
push
ja
fstpl
push
fwait
pushl
and
mov
mov
cwtl
jae
mov
cmp
mov
sbb
fdivrl
movsb
mov
push
scas
aam
mov
cmpsb
lcall
add
lock
cli
add
sbb
pop
mov
mov
lret
xchg
shrl
pop
roll
inc
lea
leave
sbb
pop
jmp
sbb
inc
scas
lret
jnp
adc
iret
repnz
jnp
push
in
dec
int
xchg
shrb
fwait
mov
lods
mov
pop
out
je
gs
adc
adc
jl
int3
inc
arpl
adc
loopne
push
sub
mov
rclb
loopne
push
inc
lahf
dec
aad
cmpsb
sub
xlat
dec
imull
sarl
xor
cld
xor
fisttpl
xchg
nop
add
call
jl
or
cmp
out
push
adc
decb
mov
pop
test
xchg
lret
jnp
int
xor
sbb
pop
decb
mov
jmp
sbb
test
pushf
shll
cmp
mov
enter
test
decl
or
sub
dec
or
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
jmp
cmpsb
or
imul
cmp
fsubs
cmp
bound
sub
daa
cmp
or
lods
inc
push
xor
pop
sahf
cmp
out
adc
ja
movb
cli
fsubrp
pop
int
test
imul
or
aad
lock
xchg
out
sti
or
aam
xor
jns
inc
rorb
je
inc
and
lret
push
fwait
adc
adc
in
mov
or
movsb
dec
inc
and
mov
mov
push
cli
and
and
mov
div
sbbl
hlt
jbe
leave
xchg
pop
push
mov
lods
sub
sbbl
xor
mov
xor
stos
sbb
xor
sbb
ret
dec
xor
loopne
cmpsb
addr16
pop
lds
push
xchg
in
je
filds
cmpl
imul
xor
mov
pop
dec
and
sbb
or
es
sbb
out
test
push
ret
mov
negl
das
push
xchg
fsubs
lock
cmc
lds
jmp
out
cmp
inc
jbe
pop
fldcw
and
in
test
dec
push
or
adc
cmp
pop
ficoms
test
jne
out
push
adc
arpl
mov
sar
inc
sbb
mov
test
hlt
mov
push
adc
insb
bound
addr16
inc
pop
cmpl
sbbl
movsl
xchg
outsl
mov
test
inc
push
add
iret
call
mov
mov
test
xchg
jmp
loopne
cmp
inc
leave
mov
pushf
adc
add
dec
out
movb
insl
mov
dec
or
inc
push
loop
mov
or
xchg
addl
orb
andb
push
addr16
xor
shlb
arpl
jns
xor
lret
sub
daa
lcall
outsl
rol
bound
lahf
or
js
jl
add
xchg
mov
ss
mov
xchg
jo
sbbb
mov
adc
mov
dec
addl
pop
pop
push
sub
popf
outsl
cmp
pop
mov
push
or
rclb
add
lcall
add
jbe
rcrb
iret
out
negl
jb
pop
push
test
or
fwait
dec
mov
mov
fdivl
cmp
cmpsb
aaa
or
dec
push
add
inc
cmp
test
lods
in
cli
mov
jge
scas
mov
icebp
pop
fbld
pop
icebp
push
dec
push
mov
and
mov
jle
jno
ret
movsl
cmpsl
in
pop
push
add
out
repz
fcmovb
cmp
xchg
sub
in
ss
push
loope
dec
lahf
clc
inc
cmp
testb
xchg
scas
xor
and
push
push
mov
shl
push
pushf
xchg
ret
and
xchg
fnsave
xor
jp
imul
out
or
loop
cmp
jb
subl
push
xor
call
stos
sbb
inc
pop
mov
clc
xchg
and
in
sahf
fs
adc
clc
inc
add
jne
movsb
lds
jg
aam
mov
xlat
stos
loopne
es
xchg
sbb
mov
call
int3
or
mov
daa
pop
push
shll
shl
xchg
cmp
mov
int3
inc
add
sub
mov
in
cmc
jbe
and
pop
addr16
dec
mov
adc
jle
dec
pop
pop
popa
push
xor
cmp
pusha
cmpl
xchg
mov
cmpsb
cmc
mov
inc
sbb
adc
add
mov
shrl
mov
cltd
sub
sub
fisubrl
in
adc
jmp
je
pop
fisubrl
dec
mov
lds
xor
in
or
jns
jmp
insl
fadds
inc
and
mov
mov
iret
jb
cmpsl
xchg
sti
pop
jns
fstpt
push
cmp
mov
mov
pop
and
loop
inc
int
jmp
pop
push
cwtl
js
mov
fsubs
fs
cmpsb
neg
daa
sbb
shll
call
sub
test
sub
int
pop
sub
sub
div
jbe
cmp
in
push
cmp
or
mov
pop
push
icebp
adc
push
out
addb
mov
cmp
mov
pop
shl
mov
mov
jl
sub
or
movsl
or
cld
sahf
mov
into
sbb
lret
jmp
rcrb
sub
add
test
ljmp
jne
cmp
nop
mov
les
adc
sahf
cmp
mov
test
ja
or
cltd
push
add
pmulhw
and
pop
leave
cli
sub
test
sbb
and
scas
push
adc
jne
pop
andl
sbb
cwtl
aaa
outsl
les
jg
mov
push
sub
and
rcll
add
cltd
outsb
mov
js
inc
outsl
scas
leave
jge
push
xchg
out
jb
sub
into
insb
leave
mov
loop
out
and
or
pop
jl
std
dec
cmp
outsb
sti
mulb
lea
cmpsl
dec
lahf
sbb
jns
jle
dec
insl
inc
mov
mov
loopne
sbb
jecxz
imul
lahf
sub
adc
push
popa
fdivp
xorb
scas
lods
sti
ss
xor
dec
or
push
mov
ret
push
jns
imul
loope
repnz
add
in
push
enter
ror
pop
adc
out
or
hlt
xchg
sub
mov
lret
fildll
scas
repz
push
xor
inc
decb
lcall
mov
mov
pusha
hlt
push
andl
jp
rcr
pop
sahf
in
inc
cmp
jge
pop
in
and
sub
mov
je
jge
dec
sub
cmc
leave
and
jbe
jnp
sub
pop
and
jp
mov
repz
xchg
sbb
lret
fmuls
mov
pop
sub
lret
and
insl
pop
or
fcmove
push
mov
sbb
scas
insl
xor
sub
lods
xor
xor
jbe
repnz
mov
sbb
pop
push
mov
sbb
neg
js
mov
cmp
push
je
push
mov
outsb
fimuls
cli
sahf
in
jns
test
bswap
movsb
lahf
push
mov
mov
mov
or
jbe
fmuls
inc
add
push
or
shr
stos
and
adc
fidivl
loope
push
ds
aaa
or
andb
cltd
rol
lds
aas
mov
into
mov
xchg
mov
test
xchg
jp
ss
jnp
mov
jb
mov
mov
cli
mov
push
mov
lret
scas
movsl
int3
push
push
inc
xchg
xchg
lds
inc
icebp
icebp
cmpsb
and
insb
lahf
imul
cmp
mov
dec
repnz
repnz
xor
push
ret
mov
cmp
mov
ljmp
mov
sahf
mov
jne
scas
lcall
shll
sub
aaa
push
daa
dec
fmull
in
jge
jp
sbb
out
loopne
stos
lea
hlt
pop
lea
push
adc
in
scas
lds
js
out
gs
fists
cld
nop
add
xor
scas
mov
icebp
xor
cmp
inc
cmc
in
and
les
dec
sub
mov
jmp
popa
or
sti
jno
incb
loope
jne
inc
jne
pop
aaa
and
mov
out
mov
imul
pusha
insb
dec
mov
push
mov
leave
cwtl
popa
xchg
test
xchg
adc
mov
mov
fld
inc
mov
lahf
mov
push
lods
pinsrw
lcall
jp
cwtl
aaa
arpl
sahf
and
push
hlt
push
sbb
sbb
aaa
fs
cmc
adc
pop
adc
adc
add
out
inc
popf
inc
outsb
and
movsl
adc
pushf
cmp
fidivl
sub
mov
in
pusha
sub
cmp
xor
jne
jle
in
or
repz
scas
jp
fcoml
xchg
mov
scas
aas
mov
jno
cmpsb
add
mov
adc
inc
mov
add
sub
addr16
imul
adc
sbb
outsl
mov
dec
or
sub
rorb
fsubrl
push
ss
mov
bound
dec
and
cs
jb
or
mov
int
pop
leave
fisubs
xor
mov
mov
sti
pop
cmpb
sbb
inc
xchg
lret
cmp
xchg
faddl
mov
into
cwtl
iret
inc
into
push
sub
and
stc
les
dec
push
pushf
fucom
cmp
adc
inc
shlb
xchg
mov
jecxz
outsl
cwtl
cmp
push
mov
arpl
or
mov
mov
jecxz
mov
scas
jp
dec
mov
dec
stc
scas
cmc
cmp
inc
add
jle
aad
push
pop
hlt
dec
scas
imul
jbe
and
cwtl
lods
cmp
and
in
jecxz
mov
sub
fstp
rolb
push
bound
cmp
loope
xor
pushf
sub
inc
mov
and
jmp
sbb
nop
pop
mov
jge
jbe
cmc
incl
mov
add
xchg
loope
pop
stc
jbe
xchg
cmp
xlat
insl
mov
dec
push
loope
mov
mov
lods
repnz
xor
mov
ds
test
push
imul
ror
movsl
sub
or
sarl
adc
repz
data16
testl
push
dec
or
mov
xor
data16
xor
mov
mov
jns
enter
or
lcall
outsl
cmp
add
push
sahf
pop
js
adc
or
push
xor
pusha
jg
cli
jo
pushf
xor
loopne
sti
imul
mov
mov
add
cmpsb
push
pusha
lret
mov
mov
xor
loop
stos
sti
dec
mov
sbb
push
popa
insl
je
aam
jne
sub
mov
push
mov
fsubr
xchg
jae
out
inc
dec
fnsave
pop
and
pop
repz
mov
xor
xor
scas
push
mov
adc
adc
mov
cwtl
in
jecxz
gs
test
ja
jbe
shr
pop
icebp
not
adc
xchg
xchg
mov
inc
jecxz
fs
fistl
int3
pop
addr16
add
sub
leave
rep
dec
mov
aad
roll
imul
mov
dec
stos
sti
and
fninit
add
cmp
push
mov
add
je
and
jns
sub
xchg
outsb
or
sub
mov
loop
icebp
fildl
dec
fwait
mov
mov
loopne
mov
xchg
addr16
mov
lret
lea
push
cmc
es
ret
insb
xchg
mov
and
pop
xor
push
bound
sub
cwtl
jnp
mov
testb
int3
daa
lcall
xchg
dec
add
in
ljmp
adc
jnp
pop
xchg
rcrb
out
cmpsb
loop
into
hlt
push
dec
nop
pop
xchg
clc
repz
mov
add
es
sub
out
xchg
popf
xchg
pop
and
lret
subl
jbe
clc
popa
in
fnstcw
adc
stos
cltd
sub
stos
push
das
add
fisubs
arpl
in
xchg
cmp
push
sbb
lcall
push
xor
jp
jb
push
aas
pop
hlt
lret
dec
aaa
fists
xchg
nop
repz
adc
jge
cmp
mov
out
mov
loop
pop
inc
fmuls
pop
gs
testb
push
mov
dec
jle
pop
pop
mov
adc
stos
jp
and
loope
add
xor
gs
fildll
xor
stos
cli
gs
cli
out
leave
mov
std
lods
in
mov
mov
pusha
ret
xlat
loope
or
aaa
ss
sbb
push
iret
roll
scas
jne
xchg
mov
jl
pop
sbb
scas
hlt
test
lret
paddb
push
and
ja
int
add
xchg
sub
dec
and
clc
mov
add
or
ret
sbb
into
inc
jmp
pop
loopne
xor
pop
icebp
push
loope
mov
xchg
add
out
jb
jno
mov
jge
pop
xor
add
fistl
lock
xchg
jge
ja
sbb
and
sub
add
lea
lret
cmp
xor
lea
xchg
movsl
dec
movsb
mov
data16
or
add
lea
dec
and
rorl
adc
popf
push
sub
in
fs
xchg
orl
in
jne
or
ss
daa
sub
xor
shr
stos
out
in
gs
or
dec
xchg
inc
mov
sbb
stos
daa
push
lock
bound
inc
popa
scas
stos
cwtl
ljmp
push
jge
push
out
add
pop
mov
mov
ret
or
push
test
push
sti
xchg
out
push
pop
pop
addl
test
mov
or
sbb
mov
movsb
mov
xchg
sti
shll
dec
scas
and
cmc
xlat
dec
test
sbb
es
cmp
fsqrt
mov
imul
lock
aad
ja
ficoms
add
jae
push
shrl
sub
loopne
lods
jl
mov
pop
scas
int
aaa
sub
enter
adc
test
lock
mov
testl
cltd
loop
movsl
xor
xlat
fwait
cmpsl
jecxz
fildl
sarl
shll
das
aaa
jae
mov
lds
inc
cmpsl
imul
cmp
faddl
sub
mov
xchg
js
fdiv
pusha
test
pop
xor
outsl
inc
aaa
dec
and
in
mov
lcall
jne
sbb
jp
hlt
ja
dec
popa
js
addr16
xchg
cs
xchg
dec
push
enter
or
shlb
lahf
fs
lahf
pusha
xlat
test
sbb
inc
or
lods
add
sbb
jl
jno
push
dec
or
nop
inc
jle
xlat
shl
jp
pop
mov
and
push
in
loope
daa
call
xchg
es
lea
xchg
iret
or
pop
repz
xchg
test
jmp
inc
sub
push
out
cli
mov
adc
gs
cmp
xchg
cmp
lret
lea
ss
mov
and
test
adcb
lds
idivb
hlt
sub
dec
mov
xchg
and
inc
shl
stos
sbb
lea
inc
jge
mov
jne
cmc
dec
js
imul
jg
or
pushf
shl
ds
xor
adc
dec
cmc
sbb
imul
dec
dec
cltd
test
jecxz
and
std
or
add
pushl
lods
arpl
or
fadd
lcall
cmpsl
jbe
mov
rolb
add
pop
and
and
jecxz
out
push
pop
test
into
jecxz
out
out
and
arpl
movsl
mov
andl
fwait
int
mov
fstpt
jmp
leave
mov
jbe
adc
imull
cmp
mov
pop
and
and
mov
push
in
jmp
mov
mov
jl
sub
lret
test
loope
cmpsb
push
je
push
mov
mov
cmp
mov
ja
call
enter
and
fwait
sub
sbb
rcrl
push
pop
jo
data16
adc
jmp
lock
loopne
adcb
mov
adc
mov
jns
mov
popf
addb
inc
jl
pusha
push
and
rclb
ja
ffree
rorb
nop
mov
adc
dec
out
xchg
les
das
cmp
jp
mov
je
dec
pop
repnz
ficomps
or
rol
cmp
aaa
xor
ss
loopne
jnp
fwait
cmp
xchg
cwtl
mov
sbb
ja
xor
xchg
jge
inc
jle
insl
fs
loop
popa
push
out
cmpsl
lods
jb
mov
aas
jp
rolb
test
aaa
lods
pop
pop
add
decl
fwait
test
and
out
jmp
and
mov
push
jge
iret
das
gs
sbb
sbb
xlat
xchg
js
fdiv
std
cmc
jle
enter
jb
push
or
jo
pop
pop
cwtl
sbb
xchg
dec
dec
push
mov
cmp
sub
pop
xchg
sub
cs
cmp
pop
push
mov
xchg
cs
mov
push
mov
fadds
jne
cwtl
in
and
fisttpl
push
or
ds
aaa
inc
push
sbb
popf
pop
and
lods
lret
mov
outsb
cmpsl
jmp
jg
xchg
adc
jb
loopne
xchg
xor
push
mov
or
inc
adc
test
pop
jnp
mov
ss
test
movl
aam
in
sbb
aam
les
shll
push
adc
stc
outsb
push
in
lock
and
adc
cmpsl
ret
inc
xor
aaa
pop
sbb
shrl
daa
adc
lcall
ret
inc
jg
scas
sahf
je
mov
lods
xchg
jge
in
sub
cld
repnz
outsl
popf
dec
sti
out
xchg
roll
jl
arpl
sti
out
sbb
lods
fildl
sbb
xor
stc
leave
popf
ljmp
sub
and
jp
mov
mov
jge
outsl
xchg
push
or
rolb
push
dec
mov
add
sub
mov
repz
ret
ret
add
dec
sbb
inc
xorb
sub
mov
pop
push
cwtl
push
out
repnz
and
sub
dec
and
or
push
dec
add
and
cltd
das
jge
inc
pushf
mov
ret
mov
lcall
jl
jle
push
push
shll
xor
std
xchg
cmpsl
sarb
ret
add
test
dec
inc
mov
fucomp
mov
sub
stc
out
dec
sub
std
loop
out
dec
dec
in
insb
dec
add
daa
bound
dec
es
popf
pop
stc
enter
sub
dec
sbb
push
cmp
fwait
push
xchg
jecxz
sub
stos
xchg
mov
out
mov
jo
aas
cmp
mov
adc
in
cmp
out
mov
mov
out
push
pop
pop
clc
xchg
jl
mov
pop
std
loop
sbb
cwtl
xor
loop
or
mov
loopne
jnp
mov
push
cmpsb
outsb
in
mov
out
lock
imul
xchg
jmp
mov
cmp
sub
ret
and
pushf
mov
call
inc
push
or
jbe
xchg
fsubrs
movsl
mov
int3
dec
adc
je
jne
mov
or
mov
mov
int3
mulb
fwait
and
mov
je
je
adc
aam
xchg
jl
cltd
pop
push
push
test
jle
pop
adcb
pop
test
jp
dec
push
cmp
aaa
lahf
jb
jnp
or
mov
cmpsb
loope
pushf
js
unpckhps
and
dec
ficompl
fwait
dec
mov
xor
dec
and
rol
sub
daa
sub
inc
mov
leave
sub
rclb
mov
mov
stos
inc
and
add
or
mov
sbb
jnp
jno
adc
mov
nop
test
lock
cmp
iret
inc
ja
adcl
incb
ja
adc
or
into
out
in
push
aam
pop
mov
inc
imul
xchg
into
dec
gs
cmpsl
cli
lret
xchg
cmpl
enter
call
jnp
test
mov
mov
aaa
sub
cmc
xchg
jbe
int3
clc
and
cvttps2pi
mov
mov
aam
pop
mov
mov
ss
and
lahf
lods
lds
js
data16
mov
fucom
sub
mov
mov
or
xchg
mov
push
adc
mull
xchg
jne
add
xchg
daa
in
adcb
cltd
es
sub
fildll
or
sbb
in
adc
mov
push
adc
pop
insb
es
gs
pop
or
push
xchg
fsubrp
pop
mov
push
mov
xchg
lods
cmp
inc
xor
lret
and
decb
aad
adc
insl
xchg
nop
sub
pop
pop
rclb
dec
jecxz
and
or
ret
in
int
movaps
fcoms
pop
aaa
imul
movsl
bnd
and
into
push
sub
xor
sbb
pop
scas
fdivl
add
mov
inc
jnp
insb
pop
stos
push
push
test
ror
adc
inc
ret
jae
test
outsb
insl
outsl
cmp
icebp
cmpsb
inc
push
test
cmp
leave
push
sbb
loop
sub
and
in
popf
cmp
shll
leave
push
cli
mov
les
jge
jl
das
mov
int3
or
ljmp
xor
gs
repz
outsb
imul
jnp
ljmp
inc
lahf
sahf
fiadds
cs
stos
cltd
dec
scas
and
pop
iret
jmp
push
loopne
dec
imul
cwtl
out
xchg
add
xor
xchg
loopne
test
cmp
dec
or
fidivl
sbb
jmp
lcall
xchg
sub
packsswb
xchg
xor
inc
mov
dec
fdiv
sub
mov
push
mov
mov
movsl
xorb
in
gs
inc
mov
in
int
push
dec
dec
lods
out
push
adc
pop
cmp
sub
pop
mov
ror
cmp
pushf
sub
cmp
shll
out
lahf
loop
fnstenv
es
or
or
sbb
pop
dec
xlat
mov
adc
mulb
jnp
faddp
jne
xor
pop
outsb
xchg
adc
xor
insl
sti
pop
int3
shl
mov
repnz
hlt
dec
testl
xchg
ss
mov
adc
cmp
lea
add
lcall
mov
loopne
jmp
out
fs
cmp
mov
test
js
cli
les
rorb
lea
push
fistpl
sbb
mov
pop
shll
pop
fildll
push
dec
jne
cld
mov
dec
cmpsb
xchg
lret
ret
stos
pop
push
xchg
jl
int
fsubl
call
cmp
mov
pop
mov
divl
sub
cmpsl
out
jp
bound
sbb
jecxz
mov
addr16
iret
test
lds
repz
mov
sbb
mov
sbb
cmp
lahf
sub
sbb
adc
xor
pop
lret
lods
out
aam
icebp
shll
popa
pop
pop
adc
mov
incl
insb
xchg
js
dec
cmpsb
pop
pop
adcb
mov
sub
mov
insl
lret
jnp
xchg
aam
cmpb
popa
dec
sar
ss
jge
loopne
push
rep
xchg
or
stos
cmp
fdivp
cmp
xchg
inc
jmp
fdivrs
roll
loopne
iret
sub
xchg
and
enter
push
add
lfs
jg
add
mov
mov
and
and
subb
test
negb
pop
repz
pop
pop
sbbl
push
shrb
add
pop
arpl
sti
outsb
sub
outsb
mov
dec
mov
lock
insl
aaa
xchg
dec
xor
pop
xor
out
ret
sbb
test
mov
push
jb
sub
push
dec
cs
out
scas
add
je
les
les
mov
adc
and
cmpsb
out
inc
mov
int
add
and
sub
gs
ds
push
sbb
aaa
xchg
pushf
cmp
shl
adc
in
and
push
adc
push
outsb
rcrb
sub
pop
mov
lods
push
and
lock
imul
dec
and
sbb
rolb
testl
mov
mov
sbb
arpl
xchg
pop
sbb
inc
js
movsl
pop
repnz
mov
sti
mov
push
adc
jmp
dec
bsr
fildl
mov
jle
in
mov
mov
jmp
lcall
sbb
notl
xchg
pop
cmp
cs
test
and
adc
std
mov
cmpsb
mov
pop
lods
sub
cld
inc
cli
push
sti
xchg
push
movsb
or
and
jl
push
cmp
adc
or
xlat
jno
adc
mov
ja
ror
jbe
popa
jle
loope
adc
fistpll
test
mov
xor
mov
mov
sub
ja
push
and
adc
push
fistps
sub
and
add
ss
jg
fmuls
scas
xor
sbb
mov
je
call
pop
notb
or
gs
adc
or
jae
add
mov
jmp
lcall
mov
xchg
and
xchg
cwtl
fildl
test
vaddsd
adc
sbb
cwtl
mov
fs
mov
scas
ljmp
jp
dec
jge
mov
aam
not
or
pusha
cmp
call
push
test
mov
in
lahf
mov
lahf
sbb
cmpsl
out
test
gs
pushl
ret
test
clc
xor
xlat
sub
test
pusha
pop
cld
jp
push
hlt
fimuls
pushf
cmp
jg
daa
push
xchg
lods
pop
jnp
xor
sbb
out
push
jge
pop
jns
mov
add
mov
cmp
cmpl
imul
sbb
xchg
stos
ja
pop
sbb
sbb
xor
cli
push
test
jge
popl
sbb
mov
ljmp
and
lods
cmpsb
loopne
dec
dec
jae
xchg
jge
mov
sahf
sti
hlt
and
sub
ss
cmc
insl
adcb
jle
sub
mov
fnstsw
lret
adc
setp
lea
mov
and
jge
jae
nop
clc
ret
test
pop
mov
xor
add
notl
pusha
cmpsb
ficoml
mov
cmpl
xlat
dec
inc
mov
nop
subb
sub
nop
jb
xchg
hlt
addr16
in
xor
scas
adc
and
adc
jns
inc
pop
mov
popa
popa
mov
xchg
bound
or
xchg
sbb
popf
daa
data16
mov
imul
xchg
push
ja
les
test
test
ret
rclb
mov
or
pop
ret
pop
sub
or
js
jns
mov
sub
mov
mov
movzbl
xlat
fimull
lahf
imul
addb
inc
mov
mov
ja
jge
cmp
xor
add
test
and
adc
daa
pop
fidivl
jmp
imul
aam
inc
fwait
pop
jo
cmpsb
sub
stos
out
push
out
cld
and
mov
shll
repnz
mov
xor
test
mov
push
rcr
pop
stc
add
cltd
or
movsl
or
xor
lds
and
insl
cmpsl
mov
cmpsl
ja
js
paddd
xor
cmpsl
fldl
adc
xlat
mov
cmpsb
or
jmp
sub
notl
mov
xchg
sbb
sub
push
jae
jns
and
jecxz
ljmp
sbbb
mov
push
sbb
fnstcw
adc
sti
clc
jnp
mov
or
push
jg
mov
jns
xchg
nop
leave
sbb
add
sarb
jne
in
mov
lret
testb
cmc
inc
test
add
and
cmpsl
daa
pop
mov
fwait
cmpl
lods
sub
sub
enter
sti
shl
mov
xchg
sbb
ss
ja
sub
mov
xor
repnz
dec
and
jno
fadds
lret
inc
insl
call
bound
jns
hlt
in
shl
nop
int
hlt
or
lock
scas
lock
mov
jl
xor
adc
dec
adc
je
pop
or
test
pusha
cmp
out
addr16
xchg
insb
sub
inc
dec
rcl
mov
fadds
dec
push
inc
ss
push
jns
lret
fbstp
inc
cmpsl
xchg
xchg
lock
loop
inc
sub
cmc
arpl
stos
pop
jp
cmpl
pop
subl
xor
bound
ret
test
jle
and
sahf
mov
popl
sbb
inc
jo
sub
cmp
shlb
out
adc
lret
sbb
inc
adc
rcrb
in
mov
add
jnp
sub
cs
xor
cmp
and
add
sahf
aaa
out
sub
ret
incb
pop
mov
jae
out
push
mov
jne
call
bound
jbe
aas
in
push
or
sub
push
pop
mov
sub
mov
stos
mov
dec
movsb
inc
push
iret
loop
insb
jo
int3
pop
add
add
sub
test
fwait
xchg
xchg
gs
arpl
or
test
ja
mov
in
sbb
scas
ss
pop
or
pop
ret
decb
imul
stos
scas
dec
data16
sbb
test
repz
mov
mov
xchg
jne
scas
into
ja
idivb
cli
movsl
shlb
int
inc
outsb
inc
pop
cmp
ret
lock
adcl
loopne
stos
jge
pop
push
xor
pop
mov
ret
lods
jnp
out
lcall
jae
add
stc
push
test
fdiv
sub
gs
test
or
ljmp
sbb
movsl
push
dec
sbb
dec
dec
inc
fdivp
pop
jbe
movsb
int3
data16
stc
hlt
push
adc
cmp
mov
push
enter
out
js
or
icebp
push
and
loopne
cmp
adc
mov
dec
ljmp
data16
insl
xchg
xchg
xchg
das
insl
adc
lods
cmc
ret
and
repz
movsl
sub
and
lods
in
fcoms
out
cwtl
aam
sub
inc
push
inc
loopne
jae
xchg
dec
popf
cmp
aam
xchg
push
sub
je
pop
pop
je
sbb
sub
xor
out
add
push
daa
ficoml
and
nop
fldl2e
arpl
insl
pop
xor
or
and
in
cmp
push
out
mov
pop
negl
cmpb
mov
ljmp
pop
fyl2xp1
xchg
leave
mov
jno
or
ss
mov
cmc
xor
pop
or
leave
inc
les
iret
and
pop
inc
inc
loope
xor
int
into
mov
lahf
setb
adc
sbb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
xchg
ja
add
add
add
lcall
and
outsl
loopne
std
in
jae
sbb
pop
push
popf
sbb
mov
adc
cmp
insl
popa
mov
aad
in
sub
gs
pop
in
sub
enter
pop
add
adc
pop
shrb
push
je
mov
pop
jmp
add
adc
xor
inc
pop
jmp
adc
jnp
add
add
add
sub
adc
cmp
out
pop
xchg
push
fcmovne
add
add
add
out
dec
loop
shll
sub
call
sbb
xor
cs
rclb
imul
stos
dec
mov
push
out
out
xchg
push
dec
lods
cmpsl
bound
xchg
shlb
cmp
xchg
jno
shrb
mul
pushf
sbb
nop
add
add
pop
sub
sub
addb
into
add
add
add
call
rcll
add
jecxz
jecxz
shrb
std
test
fndisi(8087
dec
lret
testb
add
cld
fldenv
push
fsts
mov
xchg
jge
lds
pushf
xlat
cmp
or
lods
bound
xchg
mov
add
add
das
and
aam
aam
ljmp
je
and
add
add
add
xchg
sbb
ror
push
call
and
stc
and
and
push
pop
fnstcw
shlb
mov
jns
test
jmp
cmp
icebp
out
filds
cmp
loopne
decl
adc
stos
or
icebp
adc
sub
repz
out
mov
add
add
mov
sti
cmpsl
mov
dec
mov
pop
iret
add
add
add
out
mov
mov
mov
add
rcrl
adc
data16
lea
mov
cli
test
pop
push
jp
repnz
push
inc
aaa
cwtl
xlat
dec
and
out
inc
sahf
xchg
push
addr16
xor
pop
mov
mov
aad
and
in
pop
bound
movsb
mov
jae
lret
bnd
add
add
out
lods
cmp
stc
stc
xchg
mov
imul
add
add
cmp
hlt
dec
cmp
pusha
shrb
int3
sbb
divb
sbb
rep
aad
shlb
pop
mov
adc
sbb
test
add
scas
add
sahf
testl
xchg
sbb
sarb
adc
adc
movsb
mov
mov
sub
jle
lret
add
add
inc
gs
aaa
push
jge
add
add
add
mov
test
push
mov
leave
stc
dec
dec
mov
je
in
mov
add
aam
dec
add
mov
inc
sbb
mov
out
xor
aad
lds
or
xchg
add
test
movsl
mov
stos
cli
cmpl
nop
mov
jb
lods
adc
pop
sbb
adc
push
adc
cwtl
out
and
fdivrp
repz
add
add
jnp
xchg
addr16
push
mov
pop
pop
rorl
lods
mov
sub
movsb
lock
and
xchg
mov
fists
mov
mov
xor
or
add
push
inc
sbb
mov
aam
xchg
mov
lahf
movsb
sbb
cmp
imulb
xor
lock
sub
add
sub
das
jle
jg
imul
push
es
push
jecxz
add
add
mov
testb
sub
push
or
xchg
movsl
cmpsl
ja
and
dec
mov
jns
and
popa
dec
add
roll
sub
mov
push
ret
cmp
jecxz
inc
pop
jo
aam
inc
into
add
sub
sbb
divl
mov
shlb
mov
and
repz
int3
or
add
add
and
mov
mov
shll
add
add
inc
in
popf
outsl
mov
jecxz
dec
pop
inc
xchg
add
lock
pop
and
subl
popf
neg
dec
push
cmpsl
mov
pop
loop
test
xlat
mov
mov
stc
rclb
icebp
cmpsl
cmp
mov
cmpsl
lock
mov
jl
mov
adc
mov
add
add
ret
or
ret
lods
sub
mov
loop
in
add
add
jp
imul
push
pop
adc
jmp
or
inc
in
sub
add
xor
jbe
das
add
outsb
lret
mov
adc
push
ljmp
and
dec
sarl
leave
jmpw
jb
cs
imul
jns
cli
mov
mov
add
add
fld
add
ror
outsl
clc
rorb
in
add
add
mov
jp
inc
adc
xchg
call
cwtl
test
jne
movd
or
dec
cli
stc
out
adcb
mov
xchg
sbb
in
pop
jnp,pt
lret
fiadds
lcall
fdivr
call
sbb
lret
sbb
add
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
push
inc
add
sbb
mov
jns
xor
dec
cmp
dec
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
out
sbb
loop
inc
add
sbb
add
sbb
inc
add
sbb
add
sbb
add
inc
add
sbb
pushf
clc
ss
inc
add
sbb
inc
add
sbb
inc
add
sbb
ds
inc
add
test
repnz
add
push
orl
add
cmp
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
sbb
add
ficomps
inc
add
or
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
dec
lahf
dec
mov
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
rcrb
add
sbb
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
fsubl
add
add
add
jecxz
pop
xchg
push
sub
in
sbb
in
enter
sub
dec
lret
or
in
cwtl
or
xor
pop
stos
or
fnstsw
xchg
xchg
sbb
xor
leave
mov
lret
aad
ja
jae
movsl
xchg
outsb
nop
cld
mov
mov
movsl
inc
and
dec
pop
je
add
gs
jnp
xchg
cld
add
add
sub
cli
jl
xlat
push
bound
in
xlat
add
add
add
xor
mov
xchg
adc
add
aaa
adc
pusha
mov
aas
out
lds
pop
jg
xor
xor
div
out
lods
aaa
movsl
fadds
xchg
mov
pop
aam
repz
jmp
movsl
jnp
xor
xor
push
xor
imul
mov
das
repz
loope
mov
add
movl
push
jg
ljmp
push
mov
add
add
sbb
push
add
sub
xlat
lea
and
fstpt
orl
popf
pop
jae
sub
call
ror
add
cmp
call
jl
xor
sub
into
sub
out
dec
mov
stc
out
dec
push
mov
stc
add
add
cmp
cmp
in
fimuls
mov
add
add
add
cmp
sbb
dec
sahf
cmp
stos
add
lcall
xor
jp
cli
fs
push
adc
add
fisubl
testl
xor
cmp
add
jae
lret
in
xorb
call
add
add
add
mov
sbb
std
negb
sub
in
jae
lret
fadds
add
add
mov
jge
gs
subb
jnp
dec
ds
pop
pop
fbld
daa
scas
clc
xchg
sbb
mov
mov
push
and
icebp
mov
mov
loopne
ja
test
outsl
push
lahf
scas
testb
movsb
pop
ds
xchg
dec
or
scas
jecxz
mov
dec
add
add
fidivl
xchg
mov
scas
fbstp
inc
mov
lahf
das
flds
add
add
mov
je
outsl
push
pop
pop
push
ss
pop
fsubrl
inc
sbb
xlat
jnp
dec
out
repnz
and
rcl
inc
aaa
add
jne
movsl
mov
stc
ror
int3
insb
sub
dec
mov
jmp
pop
rcrl
cltd
mov
fidivrl
leave
aas
cmp
add
add
add
pop
sub
fsts
add
add
scas
aad
mov
ja
aam
pushl
stos
or
divb
or
in
or
jl
add
pop
gs
es
adc
xor
imul
xchg
es
sub
flds
aad
mov
lahf
cmpsl
xlat
sub
xor
mov
loope
jnp
push
mov
arpl
mov
add
add
mov
aam
xor
and
neg
add
add
add
cmp
and
xchg
adc
add
loope
adc
adc
ja
js
mov
xchg
xchg
rcr
fucomi
pop
pop
subl
adc
dec
incl
insl
pusha
fsubs
call
aas
ljmp
jg
jb
jno
gs
lds
inc
dec
cmpsl
cwtl
jp
fcmovnbe
sub
rcll
cmp
add
mov
out
sub
das
pop
fiaddl
add
add
out
mov
push
dec
inc
mov
stos
jecxz
insl
sbb
add
stos
loope
fstps
outsl
jne
push
scas
in
sub
jle
ja
dec
jmpw
repnz
mov
out
xor
scas
enter
push
xchg
push
xchg
mov
inc
testb
inc
std
adc
popa
outsl
daa
mov
add
add
mov
jmp
fimull
jne
roll
add
add
aaa
add
rcrb
popa
mov
ficompl
mov
jl
in
incl
in
stos
in
lock
inc
xor
jb
aad
dec
pop
pop
imul
add
lahf
mov
add
add
jo
jl
sarl
mov
xor
push
and
inc
lahf
std
test
fsubl
jle
add
add
pop
inc
pop
iret
pop
aad
ss
dec
outsb
mov
stos
and
add
add
add
mov
loope
movsb
push
arpl
scas
mov
pop
add
data16
mov
inc
aaa
push
fdivs
jae
xchg
inc
gs
push
push
xchg
push
cmp
mov
in
dec
xchg
pop
jle
out
das
push
add
lahf
or
push
xlat
push
imul
add
cld
jns
fisubrl
add
add
or
pop
bound
push
imul
je
pushf
jmp
fnstcw
outsb
xchg
push
std
je
lods
lods
in
mov
push
loop
adc
cltd
inc
cmpsl
fcompl
xchg
inc
add
in
stos
sub
xor
cmc
pop
dec
sbb
mov
icebp
xchg
jo
jb
aad
pcmpgtw
and
lods
hlt
loop
add
add
outsb
jae
lret
jle
repz
scas
pusha
jmp
add
add
add
sbb
call
ds
cwtl
dec
imul
ret
jno
lcall
add
sbbl
xchg
adc
shl
jns
loopne
outsl
jle
xor
inc
inc
in
or
sub
xor
cmp
popf
jl
jl
sub
jo
push
push
jp
cmp
hlt
scas
out
and
pop
add
repz
sub
cmc
adc
adc
mov
lds
dec
faddl
add
add
lcall
push
add
adc
pop
shrl
es
mov
shlb
mov
xchg
inc
inc
jecxz
test
rdpmc
arpl
scas
sti
jae
fnstsw
push
sti
mov
jecxz
out
cmp
rcrb
mov
in
out
dec
int
mov
fidivs
cmp
mov
shl
push
shlb
add
add
xchg
xchg
xchg
lea
jo
and
and
or
cmpsb
pop
or
push
or
repnz
mov
add
lret
and
push
fcompl
shr
adc
sub
test
out
xor
decb
xor
rcrl
idivl
add
call
jp
sahf
xchg
sub
add
sqrtps
cmc
das
sbb
xchg
iret
js
pop
sbb
fldl
add
add
adc
push
or
and
inc
rcr
ret
orl
lea
scas
repnz
adc
push
xor
movsb
sub
enter
out
fldz
mov
or
outsl
jg
xor
imul
inc
push
or
mov
pusha
fucom
loopne
pop
jns
mov
add
sub
fildll
popa
arpl
sarl
add
add
add
scas
sbb
mov
sbb
lods
mulb
xor
and
in
mov
xchg
or
inc
lret
scas
inc
push
ljmp
xchg
sbb
add
inc
dec
inc
mov
xor
inc
movb
in
mov
sbb
adc
add
add
fs
testl
xor
add
add
mov
lea
mov
sub
pusha
lret
das
inc
and
cmp
dec
test
sub
sbb
cmp
jle
sbb
xchg
imul
pop
sbb
lret
mov
cmpsb
push
mov
sub
sbb
iret
and
sub
mov
pusha
add
fdiv
inc
add
add
add
jne
jg
clc
cs
push
xor
add
add
add
int3
stos
xchg
vunpcklpd
pop
dec
xor
push
mov
or
out
jnp
mov
sub
ffree
pop
mov
sub
jb
dec
xbegin
arpl
sbb
add
cmp
push
pop
aas
mov
iret
call
cmp
jl
sbb
dec
lock
fisubl
add
or
dec
mov
je
lcall
add
add
add
cld
ds
mov
out
bound
xlat
pop
xchg
mov
jge
adc
sbb
je
sub
out
or
orps
out
dec
pop
fwait
test
or
sbb
mov
lcall
inc
je
mov
fists
dec
mov
xchg
adc
sti
or
sti
rolb
add
add
pop
pusha
lret
lahf
inc
mov
imul
inc
cli
lahf
mov
xchg
pop
mov
xchg
sahf
pop
lods
pop
loopne,pn
nop
inc
cmp
insb
jno
ret
enter
jmp
imulb
enter
add
movsb
inc
push
sub
push
push
push
icebp
shrl
dec
push
mov
adc
sbb
sbb
jns
add
add
xchg
fcmovu
fisttps
push
push
sarl
add
add
push
in
sbb
push
insl
movsb
sub
xchg
out
mov
jns
mov
xchg
pop
jo
push
data16
adcb
aaa
jecxz
cli
jo
sahf
adc
repz
call
rclb
mov
mov
cmp
imul
lea
cltd
adc
test
insb
xchg
add
add
add
lahf
arpl
std
jle
out
sbb
mov
roll
add
add
rorl
sti
pop
sub
fwait
push
pop
pushf
enter
lahf
imulb
cli
ja
inc
nop
mov
imul
movsb
pop
mov
testl
arpl
mov
cli
sarl
stos
add
popa
cmp
xor
jle
pop
std
push
cmc
sub
dec
std
out
jne
add
add
and
cmp
fisttpl
add
add
sub
or
inc
pop
dec
pop
push
cmpsb
push
lock
sbb
pop
dec
mov
inc
dec
cmpl
ror
jg
aaa
imul
cmp
inc
subl
xchg
rcrb
add
mov
xchg
mov
cmp
xchg
or
mov
ret
leave
mov
add
popf
aam
sub
sbb
rolb
add
add
incl
loop
dec
mov
ffreep
pop
ror
jle
lea
mov
in
sub
sbb
dec
cmp
ss
rorl
jnp
push
gs
jns
mov
cmp
fldcw
les
rcrl
mov
addl
add
hlt
mov
jbe
hlt
mov
and
cmpsb
sbb
add
add
add
js
cmp
mov
lcall
subl
mov
pushf
fs
iret
ret
sbb
mov
cmc
fiadds
pop
fidivrl
push
rcrb
les
xor
push
mov
xchg
lock
mov
mov
movsb
lret
sub
push
inc
add
stc
push
or
clc
jne
add
add
ror
mov
sub
out
xor
roll
add
add
bound
ss
mov
bswap
ret
inc
dec
loop
and
push
icebp
pop
shlb
repnz
icebp
pop
jl
jno
mov
sti
xorl
mov
push
loop
xor
shlb
add
mov
mov
push
xor
cld
cmp
cmovl
add
add
in
outsb
and
pop
mov
mov
add
add
add
fisttpl
jge
push
data16
mov
cs
fs
idivb
repnz
xor
les
fcomip
and
ret
xchg
sti
test
testb
loope
adc
arpl
push
pop
pop
adc
and
int
lods
jne
cmp
rolb
or
adc
cmpsb
imul
add
add
mov
and
loopne
aam
add
add
lcall
inc
call
push
push
roll
cmp
out
xchg
loope
dec
sbb
jns
push
outsb
and
mov
cld
mov
xchg
mov
test
not
fdivrl
sbb
std
fmuls
xlat
cmp
aas
sbb
fidivrs
sub
push
add
add
stc
call
into
inc
mov
ficomps
outsl
jg
add
add
add
lret
sbb
cmp
adc
jno
sub
mov
mov
aaa
ljmp
xchg
sub
dec
test
or
inc
pop
inc
int3
mov
mov
pop
popa
negb
test
nop
pop
popa
jae
arpl
or
mov
xor
out
xchg
sub
js
insl
sti
push
call
les
add
add
fisubrs
cwtl
sar
repz
inc
sbb
add
add
mov
lcall
add
dec
aam
dec
fnsave
sub
cmp
dec
mov
idivb
inc
nop
mov
imul
mov
sub
xchg
out
arpl
dec
cmp
cmp
jmp
mov
xchg
sub
and
insb
push
aam
add
add
dec
aas
int3
sbb
out
loopne
lods
jne
or
inc
aad
add
add
les
cmp
shlb
int
mov
mov
adc
adc
andl
outsl
icebp
sarl
fwait
lds
jle
out
mov
cs
push
in
add
xor
fidivl
push
insl
inc
mov
xchg
or
cmpl
add
add
push
test
fildll
adcb
add
add
cwtl
dec
adc
xchg
mov
jp
push
cli
cmpsl
out
cmp
in
dec
test
js
ljmp
repnz
dec
shrd
lcall
in
icebp
add
loop
std
dec
incb
mov
xchg
lret
jne
loope
fcomi
aaa
decl
inc
xchg
pop
ljmp
out
mov
xchg
xchg
add
add
fwait
loope
sub
sarb
add
aaa
push
lock
add
add
add
repnz
cli
cmpsb
cmp
fs
push
xchg
mov
std
mov
add
adc
call
mov
lods
xor
es
pop
xor
mov
adc
stos
cmp
sbb
fcomi
xchg
int3
and
testl
add
add
or
ja
dec
cmp
dec
inc
dec
adc
add
add
inc
das
mov
jnp
cwtl
pop
push
jo
addr16
cmp
shll
dec
sub
je
mov
data16
arpl
cmp
mov
cmpsl
cs
in
or
nop
mov
mov
ds
pop
fnsave
inc
adc
mov
call
cmpl
cmpsb
mov
xchg
test
xchg
add
add
arpl
jge
mov
daa
xor
insb
xlat
add
add
add
cmp
cmp
ljmp
jae
lcall
mov
sbb
jno
fdivrs
push
adc
sub
mov
mov
js
sbbl
cmp
sahf
and
rorb
inc
xchg
test
lods
jle
lods
add
mov
add
aad
jmp
imul
jl
add
add
push
imul
imul
add
fnstsw
movsb
mov
sbb
ret
cltd
or
sbb
mov
or
fimull
push
push
daa
es
aad
lahf
popf
shll
add
hlt
in
mov
fdivl
ret
ret
jo
xor
push
movl
sbb
push
mov
push
push
aad
sbb
je
filds
add
add
ss
xor
and
out
cmpsl
fiadds
add
add
xchg
cltd
movl
enter
cld
sbb
mov
sub
cmp
mov
adc
mov
int3
and
pop
inc
cmp
popa
andl
in
pop
xchg
adc
int3
adc
add
pop
and
popa
aaa
mov
dec
xchg
or
rolb
add
add
out
mul
aaa
cmc
xchg
lcall
or
add
add
add
fisttps
push
or
mov
mov
pushf
push
arpl
inc
mov
lea
jl
adc
sti
jnp
cmc
jns
scas
push
mov
lcall
les
pavgw
push
dec
add
outsl
or
loope
js
loop
add
in
aam
push
lret
or
add
aad
out
fucomip
ss
cmp
or
outsl
filds
add
add
out
fs
jge
arpl
mov
outsb
daa
mov
add
pushf
or
xchg
cmpsb
xor
lahf
jae
mov
cli
cmp
cmp
push
push
bound
movsb
dec
inc
roll
hlt
lods
icebp
fmull
xchg
nop
je
ret
aam
out
ja
ljmp
cmp
inc
fdivrs
add
add
in
cld
fisubrl
sbb
pop
out
rcr
add
add
add
push
or
jnp
push
xor
xchg
mov
xlat
aam
outsl
jmp
cltd
push
pusha
xchg
mov
push
call
push
ja
shl
push
test
jnp
dec
jmp
gs
leave
nop
cwtl
xchg
cmpsl
hlt
inc
enter
ja
inc
mov
dec
xor
or
dec
xchg
jne
add
add
cmp
paddsb
nop
shll
loopne
add
add
pop
mov
xchg
dec
sbb
data16
and
sbbb
fs
jl
ds
or
stc
mov
mov
ja
out
mov
push
or
mov
pusha
xchg
inc
adc
jns
outsl
rol
shr
jmp
das
or
jmp
mull
lret
pop
mulb
loop
or
mov
add
jle
call
cli
lcall
add
add
add
sub
call
bound
jmp
jns
inc
and
add
icebp
xchg
xor
mov
inc
mov
lods
dec
lock
ja
sub
xor
xchg
xor
popf
ds
mov
mov
jne
xchg
repnz
test
xor
pusha
or
sti
add
push
add
add
test
and
pop
dec
inc
outsl
push
and
loopne
add
add
fdivs
out
out
ja
insl
gs
adc
into
pop
xor
fsubrs
jecxz
xchg
sbb
in
cmp
pop
popf
sarb
int
int3
inc
xor
mov
push
loop
test
push
mov
pushf
mov
je
push
cmpsb
lahf
aaa
outsl
xchg
and
das
push
add
add
outsl
mov
jmp
push
fcmovu
in
sub
int3
arpl
add
add
add
push
mov
in
icebp
test
sub
mov
inc
faddp
lods
fisubrs
dec
xchg
idiv
lcall
jmp
or
cs
repz
fcmovbe
fcoml
mov
push
cmpsl
xlat
int3
lret
add
loope
sbb
mov
inc
sahf
fs
mov
inc
cmp
jno
loop
mov
mov
add
stc
sbb
inc
jecxz
mov
jmp
loope
add
add
out
dec
ljmp
jns
mov
xor
jbe
dec
fwait
or
jmp
mov
adc
hlt
pop
and
push
push
pop
and
mov
add
nop
xor
and
gs
icebp
loop
add
pop
popa
inc
pushf
iret
shl
jge
push
push
aaa
movsb
mov
clc
xor
add
mov
icebp
and
lods
and
loop
add
add
inc
sbb
mov
pop
aad
andb
fwait
xor
cmp
sbbl
jg
pushf
sub
mov
and
loopne
mov
jmp
adc
mov
inc
mov
xchg
fidivrs
pop
jmp
add
loop
pop
inc
sti
mov
and
lods
mov
add
xlat
repz
das
cli
fists
dec
es
insb
sti
sub
add
add
push
lock
sahf
jb
pusha
inc
in
sub
lahf
xchg
mov
and
jge
test
push
fwait
rorl
xchg
outsl
cli
push
xor
in
mov
cmp
sti
jbe
mov
neg
and
xor
shl
fnstcw
push
incl
pop
cltd
enter
mov
add
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
sbb
add
adc
add
add
add
add
add
add
add
or
add
or
add
adc
add
inc
iret
add
push
cmp
add
add
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
