add
add
call
add
add
add
add
add
add
add
add
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
pushl
mov
mov
cld
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
test
pandn
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
rorl
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
addr16
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
enter
incl
in
xor
mov
cld
jle
mov
add
mov
decl
add
inc
das
mov
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
lds
add
push
cs
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
lahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
ret
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jp
add
mov
inc
lret
inc
iret
jb
mov
enter
cmp
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
fadds
xor
mov
clc
enter
mov
test
clc
incl
aas
mov
test
clc
pushf
inc
pushl
cld
pushf
inc
mov
insl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
cmp
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
lahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
lahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
lahf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
cmp
rolb
clc
popa
jb
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
cmp
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
popa
xor
mov
popa
xor
orl
fsubs
int3
lea
push
cmp
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
cmp
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
lahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
lahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
sar
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
adc
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
loop
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
loope
push
push
incl
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
jmp
inc
jmp
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
xlat
ss
aas
loope
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
cmp
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
cmp
pushf
mov
jl
add
add
or
test
clc
or
cmp
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
data16
push
rorb
incl
inc
add
decl
mov
add
add
xor
cmp
jbe
lea
mov
jae
mov
decl
add
call
add
mov
jb
incl
mov
sbb
push
je
incl
data16
test
lea
cmpsl
movw
mov
lea
js
incl
mov
pop
jmp
add
out
pusha
out
call
jmp
inc
add
in
mov
addl
mov
data16
addl
push
in
dec
inc
add
mov
in
incl
sub
incl
jle
leave
add
test
push
addl
outsl
in
add
test
ljmp
data16
inc
inc
xlat
cmp
jle
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
sub
jne
movl
int3
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jle
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
loope
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
int3
mov
cwtl
movl
ljmp
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
jmp
pushl
add
push
loope
jae
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loop
adc
call
mov
sbb
loopne
cmp
dec
mov
sub
inc
mov
xor
test
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
push
sbb
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
cmp
cld
xor
cmp
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
lahf
mov
add
add
cmp
je
add
mov
pop
mov
lahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
orl
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
lahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
lahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
lahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
cmp
fadd
test
jne
decl
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
aas
mov
jne
mov
or
icebp
lahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
pop
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
repnz
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
cmp
fdiv
test
clc
mov
rcll
stc
or
mov
in
lahf
jne
mov
or
lahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
add
add
mov
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
cmp
pushf
or
rcrl
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
cmp
cmp
clc
ret
dec
inc
xor
inc
add
add
dec
mov
cld
mov
cmp
pushf
dec
mov
xor
mov
cmp
push
mov
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
in
mov
hlt
mov
mov
in
jb
push
inc
push
jle
leave
cmove
lods
add
mov
or
xor
mov
orl
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
lret
mov
sbb
inc
call
and
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
or
test
clc
incl
cmp
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
lahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
data16
add
andl
mov
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
lahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
data16
add
pop
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
add
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
inc
data16
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
mov
cmp
je
push
pop
sysenter
leave
dec
popa
jle
popa
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
add
mov
cmp
repz
xorb
inc
inc
add
cmp
pushf
push
je
xor
mov
andl
add
in
push
mov
add
mov
clc
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
add
dec
push
mov
add
rcrb
add
ret
jne
mov
xor
mov
test
clc
fs
mov
pop
sub
add
xor
xor
add
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
testb
sarl
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
lahf
in
xor
mov
clc
test
cmp
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
cmp
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
pop
mov
add
xor
sub
mov
inc
inc
mov
dec
lahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
data16
pushf
mov
mov
cld
test
push
inc
mov
lahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
lahf
xor
add
inc
cmp
pushf
std
xor
inc
fadds
inc
mov
inc
lahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
lahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
mov
inc
or
shlb
jne
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
pop
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
add
data16
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jle
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
add
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
ljmp
add
inc
or
dec
add
test
push
ret
lea
pushl
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
pop
pushf
dec
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
ds
or
rorb
push
inc
in
mov
or
lock
test
clc
rolb
cmp
add
mov
xor
xor
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
cmp
add
inc
cld
cmp
hlt
inc
test
clc
hlt
inc
test
clc
pushf
push
push
inc
inc
fdivrs
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
cmp
cmp
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
mov
sbb
ljmp
mov
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
lahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
cmp
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
pop
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
cmp
cmp
adc
test
cmp
pushf
sbb
add
add
dec
jnp
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
push
adc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
cmp
pushf
add
add
mov
test
clc
inc
inc
cmp
mov
or
bound
clc
lea
xor
lea
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
cmp
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
lahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
pushf
ret
mov
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
pop
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
ds
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
aas
add
aas
add
jne
incl
clc
add
inc
jne
call
fadds
mov
add
add
add
incl
push
and
roll
inc
adcl
inc
adc
inc
lcall
je
sbb
lea
je
sub
je
and
mov
clc
and
and
add
and
add
cmp
or
pop
push
mov
sub
xor
mov
mov
mov
orl
mov
movl
mov
and
movl
mov
xorl
push
push
andl
push
mov
xor
addl
mov
orl
add
mov
movzwl
and
movl
dec
movl
movl
add
jmp
xlat
mov
and
mov
aas
lret
jle
fidivrl
jle
cmp
fxch
ja
or
pop
or
cmp
enter
pop
mov
or
rol
or
dec
add
push
in
outsl
add
pushf
jo
dec
mov
cmp
xorb
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
sub
jae
lret
lcall
mov
loop
cmp
fs
sub
or
sbb
and
add
fisttpll
popl
shll
movb
pop
rcll
jns
mov
daa
add
fstpt
dec
loopne
xchg
popa
repnz
pop
int
push
lock
subl
repnz
mov
mov
cs
test
lcall
es
test
sahf
cmp
mov
push
mov
cwtl
test
into
mov
dec
mov
cmc
xlat
aas
lahf
rcll
jg
clc
lods
fiaddl
pop
mov
jae
arpl
inc
mov
or
int
gs
test
inc
insb
dec
or
push
leave
stos
push
shl
gs
or
lea
fcmove
outsb
outsl
dec
outsl
je
add
shlb
jae
int
out
or
orl
movl
mov
sbbl
xor
subl
jmp
fstl
cltd
loope
jns
and
scas
pop
addr16
jg
jle
jg
jle
mov
fcoms
movsl
enter
mov
adc
xor
sub
hlt
xchg
push
and
arpl
sub
testb
push
cmpsb
lds
repz
sbb
mov
fstp
jecxz
sbb
lret
mov
mov
shlb
add
dec
jle
and
enter
call
les
in
in
pop
and
cmp
xchg
je
lds
jnp
stos
xchg
pop
sar
lods
addr16
jbe
std
adc
test
jg
mov
push
or
jp
adc
popa
rcrl
adc
mov
lock
mov
sbb
mov
ss
inc
add
jg
out
mov
and
outsb
mov
jmp
fcom
rcrl
add
mov
mov
loopne
push
jo
push
pusha
icebp
and
and
mov
fst
test
jecxz
xchg
jne
mov
jbe
inc
adc
adc
jnp
scas
pop
daa
adc
cmpsb
iret
sbb
xlat
out
add
aaa
mov
push
and
fdivp
outsl
call
adc
xor
push
out
xchg
popl
push
push
ret
inc
sbb
jno
popa
das
inc
frstor
xor
notl
addr16
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
subl
movl
movb
sub
mov
xor
andl
add
mov
mov
xor
adcl
add
andl
push
dec
mov
xor
andl
add
xorl
push
andl
mov
jmp
push
mov
xchg
push
mov
in
xchg
cmpsb
jl
jle
jg
jle
jno
sub
or
jl
movb
lret
add
fs
xor
mov
jae
mov
lea
xchg
pop
jge
lods
jecxz
pop
xchg
inc
cli
xchg
push
add
pop
cmp
fidivl
nop
sbb
test
mov
mov
push
push
adc
and
inc
call
mov
sahf
loopne
in
lds
adc
mov
mov
aaa
xorps
cmp
dec
test
int3
xor
add
jne
int
add
mov
push
mov
rorb
add
dec
push
loopne
inc
sarl
arpl
xchg
add
fisttps
mov
adc
rorl
mov
jge
xchg
mov
sub
inc
inc
loopne
add
or
jne
push
out
jecxz
int3
in
adc
fbld
mull
or
inc
enter
sub
add
mov
out
mov
add
push
lods
jo
lods
mov
pushf
sti
cmp
cli
push
lea
mov
push
pop
push
add
sbb
mov
rcrb
cwtl
xor
negl
add
xorl
push
lea
push
movl
pushl
subl
pushl
subl
call
incl
test
movl
je
subl
lea
negl
push
add
mov
andl
xor
add
andl
push
mov
add
push
andl
mov
subl
mov
pushl
addl
call
movl
mov
movl
cmpl
notl
lea
mov
je
lea
jmp
ja
je
je
test
push
outsl
jne
cmp
js
jb
jle
jg
jle
push
cmp
jmp
push
adc
jb
test
les
sahf
cmpsb
xchg
xchg
mov
stos
inc
lahf
rorl
mov
sbb
insb
lods
dec
mov
jmp
sbb
xor
sahf
cs
aad
aas
sub
outsb
sub
mov
jge
les
jmp
dec
or
sub
mov
sbb
or
sub
cmp
add
rcrb
adc
sub
adc
push
bound
mov
loope
insl
mov
xor
sub
lret
shl
cwtl
pop
cs
sub
cmp
cmc
or
movsb
imul
pusha
test
bnd
mov
mov
or
sbb
mull
mov
inc
dec
stc
ja
aam
xchg
arpl
loopne,pt
aas
out
js
in
and
adc
das
adc
scas
stos
fisubrs
push
sub
sbb
or
adc
loope
dec
pop
mov
inc
xchg
out
xor
mov
xor
pop
hlt
fcoml
scas
ss
mov
loopne
mov
xchg
into
sbb
pop
add
xor
sarb
mov
or
mov
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
adcl
xor
add
andl
jmp
adc
imull
mov
and
out
jae
jle
jg
jle
jle
ficompl
in
mov
inc
dec
inc
push
jmp
dec
mov
or
mov
or
jo
ss
push
xor
add
add
fisttpll
repz
pop
inc
mov
xor
or
xchg
fnsave
loop
aaa
push
jns
pusha
jns
push
imul
out
mov
ja
fwait
push
push
fisubrl
pusha
aad
xchg
cmp
dec
or
inc
movsl
xchg
pop
cld
cmp
jle
dec
mov
shll
mov
xor
xchg
xor
and
nop
cs
jg
mov
mov
mov
js
adc
scas
test
fcmovbe
iret
mov
xchg
jae
lcall
adc
inc
lea
xchg
and
sub
cmp
sbbl
mov
dec
mov
mov
lcall
jmp
jo
xchg
dec
mov
lahf
cmp
lock
add
shlw
add
mov
add
out
push
xlat
dec
dec
not
lods
mov
mov
addl
adc
inc
divb
cld
fwait
iret
idivl
in
rol
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
jmp
sbb
clc
and
fldcw
scas
ja
dec
jo
jle
jg
jle
test
outsb
fsts
daa
fimuls
adc
mov
dec
xchg
je
call
out
adc
inc
xor
das
scas
repnz
push
xchg
rol
popf
inc
cmpsl
int
fmuls
lahf
xchg
jae
add
idivb
dec
out
daa
test
inc
mov
sub
xchg
push
xchg
fs
mov
aam
sbb
leave
sti
jge
rolb
enter
mov
pop
push
mov
in
sbb
or
xchg
ja
inc
js
inc
pop
in
mov
cmp
sub
cmp
testb
cmpsb
mov
adcb
mov
cmp
test
fimull
negl
xchg
inc
repnz
push
mov
call
adc
addr16
xor
push
cmpsl
xchg
pop
push
fsubr
push
inc
jp
xchg
dec
and
movsl
lock
xor
repz
mov
adc
gs
sub
adc
jg
jo
adc
lret
pop
pop
or
cmp
test
mov
inc
sub
pop
and
mov
xchg
je
repz
mov
fmul
inc
dec
cmp
mov
xor
cld
lcall
hlt
cmp
and
pop
mov
xor
clc
lea
push
pushl
pushl
jmp
loop
cli
cs
cli
cli
ret
cmpsb
push
xor
jle
fidivrl
jle
clc
iret
fsubs
cltd
and
mov
sbb
mov
fisubrl
and
xchg
xor
ds
stos
push
movsl
rolb
dec
jmp
out
or
rcr
in
push
arpl
adc
ljmp
test
push
icebp
loope
xchg
popa
loope
data16
outsb
notl
xchg
xchg
jp,pn
out
and
cli
jnp
adc
shrb
and
fisubs
fists
testl
jmp
out
sbb
pop
test
sub
mov
cltd
jne
xchg
jecxz
and
dec
mov
cmp
js
and
movsb
testl
jnp
push
inc
in
sub
fnsave
dec
stc
inc
xchg
daa
mov
sub
xor
dec
cmp
out
loopne
lods
push
or
flds
stos
lret
jbe
pop
mov
jnp
xchg
fisubs
lahf
roll
jo
pop
adc
les
fisubrl
in
mov
jl
pop
dec
scas
cmp
jl
dec
and
sub
cli
or
xchg
fistps
clc
or
leave
jg
push
push
mov
sahf
insb
pop
enter
sub
sub
pop
notl
xor
dec
jg
rolb
dec
inc
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
jmp
lahf
icebp
shll
icebp
addl
dec
adc
fidivrl
jle
lcall
pop
ficomps
mov
jle
fcoml
xor
dec
push
fldln2
shlb
xchg
xor
pop
add
punpckhbw
pop
ljmp
shll
dec
rcr
mov
jecxz
repz
dec
pop
in
lea
and
mov
cld
insb
addb
sbb
fs
mov
and
jne
rcrl
mov
add
decb
jb
jns
add
mov
test
pop
fstl
sbb
inc
outsl
fdivrs
jo
inc
or
push
cmp
mull
push
lret
sbb
pop
loope
cmp
out
cmp
loopne
or
cmp
xchg
cmp
imul
shr
test
jo
sbbb
mov
stos
jmp
mov
dec
and
add
hlt
sbb
leave
sbb
sbb
fiaddl
cmp
jnp
rolb
jo
fnstsw
rcl
xchg
int3
out
sbb
adc
jo
dec
pop
push
sub
repnz
adc
movl
mov
cli
add
and
hlt
mov
repz
add
dec
inc
lret
aad
sahf
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
mov
in
stc
andb
cmp
je
testb
je
jle
jg
jle
mov
divl
push
mov
gs
js
pop
out
pop
mov
cmp
and
cmpsl
dec
adc
pop
rcr
cmp
or
mov
in
fsubl
cmp
adc
out
repz
mov
mov
ficomps
and
test
loope
out
xchg
jns
scas
mov
pop
inc
sbb
aad
loopne
iret
loope
mov
dec
adc
into
and
test
dec
loop
cmp
incb
scas
jne
cld
and
cmp
daa
sti
in
pop
adc
les
lods
out
je
ja
int
leave
in
loope
inc
push
pusha
popf
leave
push
out
push
pop
dec
clc
sbb
inc
testl
jne
or
jnp
fld1
std
sarl
imul
imul
daa
sub
dec
loopne
jb
bound
into
xor
jl
lods
nop
loopne
lret
jmp
outsb
fucomp
push
inc
add
outsw
hlt
lods
dec
push
mov
mov
cmp
pop
int
sub
lods
and
push
dec
rcr
ret
repnz
sbb
mov
add
lods
rorb
ret
dec
scas
mov
push
or
fnstenv
insb
arpl
jae
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
jmp
mov
fidivl
or
stos
mov
pop
cmp
jle
fidivrl
jle
ficoml
and
and
repnz
sbbb
and
sti
mov
dec
outsb
sub
jp
mov
sbb
gs
jmp
testl
add
fnstcw
lahf
xchg
xchg
je
jmp
and
out
inc
jmp
and
cmp
ficompl
aad
xchg
sub
jns
out
add
enter
jle
mov
xchg
pop
jne
mov
pop
pop
push
mov
mov
stos
mov
arpl
repz
shrb
or
cmp
or
stc
adc
popf
ss
and
popa
dec
lods
xchg
repz
or
pop
and
mov
push
popa
lea
or
in
xor
or
mov
mov
in
cltd
pop
ret
adc
aad
and
mov
xchg
cmc
inc
mov
lods
shl
dec
lret
or
and
mov
lret
and
out
pop
mov
xor
scas
push
sub
or
mov
cmc
fs
xchg
js
pop
mov
daa
insl
cwtl
imul
dec
int3
int3
popa
jbe
sbb
mov
mov
ficoml
dec
jg
push
cltd
loop
mov
add
pop
pop
pop
leave
ret
push
mov
sub
push
sub
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
orl
movl
xor
add
and
movl
mov
mov
mov
xor
adc
mov
movzwl
sbb
add
addl
mov
jmp
mov
cmp
or
sbb
xchg
jle
and
jle
cmpsl
es
push
fistpl
enter
push
add
aaa
jne
sbb
outsl
scas
mov
dec
fstpl
mov
es
and
fnstcw
mov
je
or
pop
repz
mov
roll
roll
into
xor
int
mov
pop
jg
add
sahf
movsb
pop
aaa
stos
mov
jl
arpl
jo
push
add
je
scas
daa
push
arpl
push
daa
movsl
ret
insb
xor
mov
sub
ret
fsub
dec
sub
pop
ret
movsb
loop
call
repz
test
fwait
jl
add
pusha
mov
outsl
mov
test
and
das
pop
pop
ret
movsl
mov
in
push
xor
adc
xchg
add
adc
sub
cld
inc
mov
xchg
jns
adc
scas
adc
jae
pushf
dec
test
xchg
sbb
enter
dec
lahf
cmp
adc
mov
int
push
jp
shl
fcompl
push
lcall
scas
ret
jge
incl
lock
and
add
add
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
xor
add
jmp
xchg
lcall
pop
jb
in
imul
or
and
jle
loopne
sbb
fdivrl
lahf
dec
out
in
push
in
xchg
nop
and
jmp
jl
mov
insl
repz
insl
lcall
mov
cld
push
fsts
in
lods
xchg
lock
inc
into
call
cltd
dec
lcall
stos
loope
sub
mov
popa
sub
xor
xor
idivl
sbb
in
jne
mov
mov
xchg
mov
dec
popf
push
sbb
fidivs
lods
out
pop
fs
push
mov
mov
ja
and
or
jns
lods
insl
ds
imul
push
push
mov
mov
popf
pop
neg
aas
out
dec
ret
adc
cld
mov
popa
imul
and
and
outsb
cwtl
lods
xlat
sub
mov
push
mov
cmpsb
in
mov
dec
shlb
lret
dec
push
out
jge
inc
and
js
sbb
insl
adcb
daa
push
loope
aad
adc
loope
dec
aam
mov
pop
sbb
push
stos
outsl
or
js
sbb
xchg
push
js
and
inc
popf
jns
jle
push
or
jmp
or
mov
or
adc
add
and
jle
push
ja
cmp
out
jbe
fcoml
mov
sbb
lcall
adc
shl
and
pop
sub
mov
fadd
stc
jmp
fistps
xchg
xchg
call
add
repz
aam
mov
or
mov
fcomi
sub
push
pop
jnp
les
aaa
push
xor
xor
mov
cmp
cmp
rcl
lock
sub
lods
add
sbb
shl
jo
popf
push
loop
lret
ljmp
mov
data16
fst
mov
xor
in
pushf
jno
inc
jno
stos
pop
scas
xchg
xor
pop
lock
dec
in
adc
lds
cmp
xchg
cmp
xor
mov
jecxz
cwtl
push
sbb
xchg
into
cmp
sbbb
repz
lea
xchg
and
shl
cli
jnp
fsts
sub
hlt
incl
mov
subl
push
mov
sahf
mov
dec
insb
xor
lock
shlb
adc
rol
pop
adc
dec
xrelease
xor
xor
adc
mov
movl
movl
adc
movl
or
movl
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
andl
movl
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sub
xor
mov
add
cmp
movl
je
movl
jmp
lock
jns
mov
push
scas
and
jle
and
jle
iret
fisubrl
loope
scas
mov
int
movsl
lds
imulb
call
fcomi
push
stos
mov
inc
mov
out
add
mov
scas
addb
shll
pusha
and
xchg
mov
cwtl
fwait
sub
pop
aaa
pop
dec
pop
aas
inc
inc
xlat
repz
push
jge
xchg
inc
bound
outsl
lods
sbb
jo
rorl
sbb
jl
js
cmp
aaa
adc
mov
movsl
mov
add
movsb
push
ljmp
mov
lods
xor
and
jmp
loope
mov
stc
shl
ljmp
out
daa
pop
sub
ljmp
test
lods
stos
xchg
pop
and
dec
mov
lahf
ljmp
xor
sub
push
or
cli
fwait
sbb
sbb
and
lret
test
push
movsb
lds
xchg
out
push
jmp
jnp
int
lret
push
mov
mov
ficomps
jle
ja
mov
push
std
shlb
iret
sbb
sub
mov
mov
sldt
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
orl
sub
adc
mov
adcl
xor
sbbl
add
movl
cmp
movl
jb
mov
sbb
mov
mov
or
xor
xor
movl
add
dec
add
dec
imul
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
sbb
mov
incl
sub
movl
cmp
movl
ja
mov
movl
xor
addl
add
movl
jmp
mov
sbbl
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
add
mov
inc
popf
imul
ljmp
jle
inc
rcll
mov
shlb
adc
push
jne
outsl
pop
jle
ja
pop
aam
xchg
sbb
bound
cmp
sub
jns
xorl
jmp
cmp
mov
or
mov
mov
jno
mov
out
sbb
lret
ljmp
js
jne
scas
push
adc
int3
add
iret
push
gs
ja
push
repz
leave
pop
shr
inc
lret
or
lcall
adc
ljmp
mov
push
mov
icebp
daa
add
cmp
hlt
inc
inc
inc
inc
mov
dec
inc
leave
adc
fldl
pop
insl
sub
ficompl
addr16
rcrl
xor
sarb
jecxz
in
or
insb
pop
sub
pushf
add
mov
xor
aas
jns
and
mov
sbb
aaa
mov
xchg
fistpll
cltd
xor
mov
loope
mov
lock
and
out
adc
adc
je
jae
stc
ficoms
dec
aas
sbb
inc
xlat
mov
dec
push
xor
add
add
imul
mov
jmp
jbe
xchg
call
adc
clc
inc
lahf
or
jle
pop
push
pop
jae
in
push
aam
rol
or
sub
popa
loopne
clc
popa
bound
rcll
inc
cli
adc
ja
repz
imul
cwtl
scas
xchg
bound
lret
xlat
repz
jbe
std
pop
clc
stc
fadd
or
xchg
addr16
pop
dec
xor
dec
push
inc
test
pop
shll
push
data16
cli
jmp
shlb
pop
adc
mov
out
iret
lret
jae
stos
and
cltd
mov
fidivs
fadd
xlat
lahf
sbb
fistpl
shlb
or
scas
int
jge
xchg
in
xchg
sbb
nop
stc
xor
inc
mov
cli
icebp
adc
jle
daa
dec
adc
jb
call
mov
fsubs
lret
daa
pop
test
iret
xor
mov
inc
mov
cmc
xor
fs
flds
xor
jecxz
jne
shll
mov
data16
xor
jnp
xchg
dec
inc
cli
xor
xchg
stos
cmpsb
pop
shr
repz
pop
out
xchg
pop
sti
repz
ret
mov
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
jmp
lock
xchg
mov
and
mov
add
and
jle
or
mov
les
xor
ds
fcmovnu
push
popa
enter
mov
je
adc
pop
sbb
mov
ja
jp
les
pop
into
imulb
faddl
je
pop
xor
push
and
jmp
push
ljmp
push
aam
ret
jge
mov
pop
outsl
andb
movsb
fld
pop
repnz
mov
bound
lahf
test
lahf
dec
out
adc
push
psubusw
test
dec
js
xchg
or
sub
loope
imul
inc
jle
jnp
fisttpll
mov
jnp
sbbl
jae
mov
sbb
push
mov
leavew
and
xor
push
popf
cmpsl
xchg
popf
xlat
lods
cmc
lret
jo
cld
sub
sahf
adc
outsb
mov
cmp
lds
xchg
outsl
data16
xchg
add
lret
push
push
scas
jbe
imul
shrb
dec
incb
js
mov
dec
movsb
out
jecxz
dec
or
and
pop
leave
hlt
adc
pusha
test
aas
movsl
mov
movl
mov
movl
movl
mov
jmp
daa
mov
in
dec
push
push
cmp
push
jle
and
jle
mov
mulps
leave
ljmp
cmp
add
frstor
adc
shrb
movsb
push
cmc
subl
stos
mov
jo
sub
sbb
leave
testl
jecxz
or
mov
add
jae
sbb
xor
mov
pop
rorb
pop
call
add
adc
lods
jmp
out
pop
lea
cli
data16
shl
dec
push
mov
sbb
call
and
enter
test
into
aaa
jmp
pop
lods
mov
or
stc
mov
sub
fimuls
sbb
mov
xchg
dec
or
inc
sbb
divb
xor
mov
fdiv
stc
dec
jmp
loop
inc
fisttps
pop
jns
loop
nop
xor
and
data16
add
mov
mov
and
repz
push
push
xor
rorb
and
push
cli
xor
stos
into
mov
shrb
daa
in
pop
stc
mov
movsb
xchg
aas
ja
ljmp
outsb
sbb
or
cmpsb
jp
iret
lods
or
cmp
xor
jmp
int
mov
stc
repnz
lods
xchg
add
and
jle
xor
sub
loopne
outsb
outsl
jge
xchg
arpl
lret
mov
ret
jg
mov
stos
push
push
push
jbe
mov
dec
mov
movsl
and
movsb
xlat
sti
iret
lods
or
insb
imul
xchg
addr16
sbb
xor
xor
fxam
adc
ljmp
or
cld
mov
xchg
cmp
clc
les
pop
push
mov
loopne
sbb
out
xchg
das
inc
outsb
arpl
add
mov
mov
stos
pop
mov
aad
jo
hlt
je
cmc
testl
push
in
cmp
test
lods
dec
sarb
mov
jmp
cld
adc
aas
das
inc
inc
test
dec
shlb
test
jns
rolb
xor
and
out
into
cmovno
inc
dec
stos
jb
or
clc
sbb
or
mov
mov
repz
jns
repnz
mov
pop
insb
jmp
mov
lea
es
hlt
int3
xchg
jp
fsqrt
adc
pop
inc
and
shr
pop
add
add
add
mov
mov
mov
mov
xor
add
jmp
mov
scas
pop
popa
cmp
xor
jecxz
jle
and
jle
cmpl
fisttpll
lahf
xchg
sbb
fstp
mov
pop
jp
rcrl
aam
imul
test
mov
mov
cli
cmp
adc
jge
inc
es
dec
xor
inc
push
gs
and
nop
sub
jmp
leave
add
insb
sbb
leave
addr16
jbe
mov
sub
cmp
push
adc
test
subb
leave
lods
and
jecxz
dec
pop
xor
pop
cld
int3
in
cmp
pop
mov
jae
xor
loopne
scas
in
mov
jae
add
mov
push
pop
pop
cmp
fucomp
out
sbb
push
jmp
call
cmp
out
lds
nop
out
dec
adc
cmpsl
adc
and
int
cli
mov
shll
cmc
loopne
sbb
mov
lods
pop
sbb
dec
push
jg
xchg
jecxz
cwtl
outsl
jo
sbb
mov
adc
cwtl
cwtl
mov
xchg
mov
subb
dec
gs
or
js
push
icebp
je
pop
fimuls
ror
jge
mov
mov
mov
mov
xor
add
mov
jmp
stos
out
pop
sbb
test
leave
ss
test
xchg
pop
jle
and
jle
jmp
jae
into
adc
popf
cmp
lahf
sarb
or
jbe
loope
imul
mov
xchg
repnz
cmp
cmpsb
mov
fdivr
mov
in
ja
cvttps2pi
imul
inc
dec
jecxz
popf
cmp
jo
cmp
lret
ds
out
sub
pop
out
clc
adc
enter
enter
mov
rolb
test
add
addr16
lret
stos
jge
inc
ret
or
push
inc
dec
lahf
andl
push
push
cmp
sbb
xorl
test
mov
push
adc
nop
jle
jae
testl
lret
imul
in
adc
dec
pop
lods
in
scas
jmp
in
ds
rcl
mov
jmp
mov
int3
mov
or
sarl
and
xor
xor
out
mov
aaa
adc
fmuls
push
ljmp
cli
xchg
adc
movb
cmp
xor
sbb
jge
lcall
shrb
mov
mov
jmp
jns
mov
dec
js
movsl
mov
lods
ret
sbbl
jle
scas
fsubrl
cltd
out
inc
loop
das
gs
push
mov
stos
test
push
cwtl
jmp
les
pushf
popa
movsl
mov
dec
xor
push
inc
push
movsb
mov
or
pop
mov
cmp
nop
jo
movsb
cmp
xor
jecxz
push
inc
mov
test
sbb
pusha
loopne
testl
mov
sti
xor
mov
rclb
add
xor
pop
js
out
iret
pop
mov
dec
cmp
icebp
rorl
loop
xor
idiv
js
iret
stos
sbb
push
mov
push
cld
push
pop
faddl
leave
pop
fsubs
and
pop
outsb
clc
cwtl
cmp
push
enter
pop
nop
hlt
scas
pop
push
in
aad
xor
cmc
loope
mov
dec
je
cs
cwtl
cltd
cwtl
mov
pop
pop
mov
mov
xchg
pop
mov
mov
adc
or
mov
outsb
mov
scas
jbe
dec
scas
xor
and
stos
fiaddl
insl
inc
andl
pop
divl
repz
imul
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
jmp
hlt
jae
pop
mov
pushf
sbb
fmul
call
jle
jg
jle
mov
sbb
daa
pop
jno
pop
shlb
push
lret
lds
jl
std
loopne
ds
inc
js
bound
xor
es
mov
push
js
mov
adc
or
jae
dec
add
push
testb
push
or
cmp
out
ljmp
aam
inc
bound
jl
push
out
dec
xor
mov
xchg
push
and
daa
scas
pop
xor
add
aas
popa
fisttpll
call
jnp
int3
out
mov
shr
lret
loop
xorl
pop
mov
pop
jle
addr16
lahf
cmc
dec
insb
lret
lret
pop
andl
or
ja
xor
sbb
popf
inc
adc
push
xor
imul
push
outsl
and
add
fstl
sahf
cltd
jb
int
dec
xchg
lea
xlat
std
sbb
insb
neg
cmp
test
fnstsw
and
jo
push
lcall
and
int
sub
mov
ficomps
mov
decb
je
ret
inc
add
mov
lea
mov
mov
xor
mov
sub
add
jmp
sub
jmp
sub
jge
sbb
sbb
and
jle
out
mov
sub
std
lock
mov
sti
cmp
in
pusha
mov
shll
je
cmpl
xchg
lcall
xor
jne
sbb
push
sbb
adc
lock
xchg
loope
ret
mov
fnstenv
outsl
ret
idiv
scas
jo
flds
cmp
or
inc
inc
jae
in
or
insl
aaa
dec
push
or
out
xchg
push
ss
cmp
and
popa
rcrb
dec
insb
push
push
xchg
add
lods
std
push
sub
daa
pop
imul
out
mov
lret
sbb
je
dec
repz
push
loopne
in
andb
test
or
in
int
mov
adc
inc
jp
inc
and
aad
and
inc
shrl
cltd
test
sub
pop
mov
loop
jns
aaa
addr16
in
sub
stos
jne
orl
mov
daa
imul
js
sbb
mov
or
sbb
andl
sbb
push
loopne
pop
clc
xor
add
imul
cmp
jbe
pop
jmp
push
cld
dec
or
jp
adc
dec
cmp
and
jle
fdivp
mov
dec
or
add
sub
pop
or
subl
xchg
or
mov
dec
js
insb
ja
fimuls
adc
in
adc
push
jge
fdivrl
ja
xor
jnp
leave
lahf
sbb
xor
sub
das
ss
inc
push
outsl
pop
scas
inc
pop
push
and
mov
in
loope
lret
loop
lods
adc
loopne
mov
cmc
icebp
inc
jo
cli
and
sbb
mov
inc
shrl
and
imul
outsb
xchg
outsl
test
nop
add
sub
daa
out
rorl
imul
jno
inc
or
mov
jo
pop
out
roll
adcb
daa
push
movsb
idivb
dec
xchg
mov
ret
sbbl
add
jecxz
cmp
aas
arpl
push
xchg
outsb
imul
sbb
jb
push
xor
push
data16
jns
inc
and
aad
loopne
push
movsl
push
dec
dec
push
xchg
cltd
mov
fdiv
addb
js
jl
jecxz
mov
pop
in
pop
leave
ret
push
mov
jmp
jb
test
adc
xlat
mov
jmp
cld
cmpsl
xor
cwtl
xor
jno
adc
mov
or
rol
ja
inc
jmp
sub
hlt
or
mov
in
movsb
mov
in
jo
cmpsb
cmpsl
loopne
lret
xor
pop
pop
jmp
stos
aaa
mov
xchg
icebp
or
mov
mov
pop
nop
pop
arpl
adc
aam
outsb
push
arpl
xor
mov
mov
sahf
cmp
in
test
mov
fisttps
adc
sbb
in
lods
inc
je
or
movsb
fidivl
daa
inc
dec
jbe
cmpb
push
cmpsb
mov
lahf
in
jae
xor
xchg
pop
sub
lods
cmp
jg
sub
lahf
inc
jl
and
imul
lods
mov
inc
cmp
rol
into
nop
cmc
adc
enter
mov
dec
dec
push
pop
jmp
stos
aam
out
lcall
jg
jbe
cwtl
or
nop
xlat
out
and
testb
fwait
cmp
mov
dec
fisubl
lcall
xchg
mull
fildll
aam
xor
clc
mov
xchg
or
add
dec
fnstsw
xchg
sub
or
mov
insl
rep
jp
loop
addr16
sub
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
call
jmp
xorl
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movl
mov
push
adc
mov
xor
mov
push
mov
add
cmp
jmp
iret
in
push
adc
jns
int
les
sbb
sbb
jle
jmp
jp
fdivl
enter
imul
adc
push
and
jo
pop
adcb
addr16
and
aas
xchg
pop
scas
push
roll
stos
mov
push
ret
jbe
sub
sub
pop
adc
scas
adc
xchg
sbb
stos
notl
fs
lods
test
add
cltd
inc
unpcklps
mov
nop
sub
mov
jp
bound
inc
sub
scas
or
lahf
stc
dec
das
cmp
aad
pushw
lock
sbb
mov
mov
mov
add
push
aaa
lcall
sub
pop
rcrb
jmp
lods
pop
pushf
stos
prefetch
sub
inc
xor
add
aas
insb
cltd
push
popa
es
xor
sub
push
sbb
invlpg
pop
mov
cmp
pop
cmpsl
xchg
daa
mov
sbb
adc
js
inc
lret
mov
jecxz
pop
mov
add
ljmp
push
fsubl
xchg
push
leave
fs
push
and
out
sub
cwtl
imul
or
in
sub
push
dec
popa
and
int3
dec
and
adc
xor
adc
sub
aam
aas
je
jmp
in
pop
jg
cmpsl
insl
in
imul
sbb
jle
jg
jle
dec
into
fucom
push
xor
sbb
movsb
cltd
push
iret
cwtl
pop
ss
ljmp
sub
xor
mov
test
add
xchg
fs
jbe
arpl
mov
aas
rorb
lods
pop
pop
adc
dec
sub
addr16
sub
repz
xlat
jno
cmp
inc
sbb
sbb
push
xchg
das
cs
cld
pop
push
cmpsb
iret
mov
push
lahf
mov
scas
fstpt
repz
jnp
lret
aas
dec
scas
testl
movsl
pop
push
xlat
adc
pusha
xabort
inc
xor
cmp
push
fldcw
fstpl
imul
mov
or
mov
dec
fbld
jno
ret
inc
jnp
cmp
jo
mov
mov
repnz
ljmp
mov
sbb
in
dec
rorl
clc
mov
or
pushf
movsb
and
sbb
aaa
jle
push
jmp
call
gs
cwtl
mov
mov
sub
add
sub
jmp
aad
xchg
movsb
andb
pop
jmp
cwtl
test
popa
sbb
cmp
ss
pop
mov
loop
adc
xchg
sub
sbb
fstp
cmpsl
push
popa
inc
xchg
dec
cmp
in
enter
mov
xor
mov
sub
jmp
les
add
gs
dec
hlt
sbbb
lods
jle
jle
jmp
or
test
mov
fsubs
jmp
out
push
xchg
aam
and
leave
rcrl
les
jp
rol
push
dec
mov
mov
cli
cmp
mov
cmp
add
dec
mov
mov
popf
or
pusha
shl
push
std
enter
test
ret
xchg
inc
inc
addr16
xor
and
shrb
movsb
out
fldt
ffree
lods
faddl
inc
fldcw
stos
mov
push
test
adc
insb
out
push
adc
push
add
ret
push
mov
aas
xor
movsb
inc
inc
aad
add
test
push
arpl
and
sub
sub
pop
and
xor
jmp
pop
clc
xor
ljmp
xchg
or
mov
mov
decl
push
test
jbe
out
shrl
jge
retw
adc
hlt
je
lods
lahf
jo
sti
bound
mov
or
sar
jbe
adc
pop
cmp
push
push
cs
into
add
jns
bswap
push
js
in
mov
and
jmp
out
pushf
js
xchg
xor
pop
or
ret
jge
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
mov
andl
push
andl
pushl
pop
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
xor
mov
xor
jmp
xchg
bound
pusha
ljmp
mov
adc
fdivrl
jle
movsl
xchg
les
nop
ret
test
inc
inc
push
iret
imulb
mov
aad
pop
xchg
stc
stc
scas
push
add
inc
dec
loop
aaa
cmp
das
data16
dec
jns
leave
push
sbb
cli
add
mov
sub
jne
cmp
in
arpl
push
mov
jns
test
add
loope
or
imul
mov
stos
lcall
and
idivl
mov
outsb
fsubs
cmpb
movsl
adc
fs
xchg
jmp
loopne
mov
ja
ficoms
push
imul
sub
or
dec
push
sbb
ud1
fwait
rcrb
ret
cmpsl
stc
test
jns
adc
sbb
idivb
sbb
fs
xchg
movsl
lea
ficompl
xchg
ret
loope
sub
punpckhwd
pop
pop
push
addr16
out
fmuls
and
neg
stc
jne
movsl
push
stc
cmp
loope
xchg
call
adc
jno
ds
push
jge
pop
mov
lcall
xchg
add
adc
sar
xchg
mov
cs
or
andb
stos
fisubrl
cmpsb
jns
test
jmp
mov
aas
out
push
jmp
mov
push
stos
inc
add
inc
add
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
jmp
icebp
mov
mov
cmp
clc
pop
xor
jle
fdivrl
jle
stc
xor
fwait
int
filds
ds
jb
leave
cmp
repz
sahf
repz
add
adc
out
add
jne
setle
sahf
out
sbb
shrb
aad
mov
sbbb
pushf
fistpll
xor
and
int3
inc
xor
push
cmpsb
mov
shlb
ljmp
test
push
outsb
sbb
and
mov
mov
mov
sbb
xor
lea
lahf
jl
push
pop
clc
das
call
sahf
mov
pusha
mov
movsb
pop
sbb
test
or
je
sahf
inc
pop
or
and
inc
test
inc
cmp
rorb
in
adc
sub
rcrl
jl
sbb
dec
loope
int3
sub
addr16
incl
test
movsl
pop
dec
jae
cmc
fsubrs
cmp
dec
xor
and
in
jmp
add
repz
ret
int3
int3
test
cmp
fisttpl
pop
pop
fcoml
jo
xchg
sbb
mov
xor
jne
fdivrl
mov
das
adc
mov
outsl
push
sbbl
adc
add
ret
inc
add
add
add
das
pop
xchg
adc
arpl
pop
cli
arpl
fdivrl
jle
pusha
sti
xchg
repz
popa
je
inc
mov
cmp
cli
mov
push
out
outsb
loopne
inc
stc
insw
mov
cwtl
push
lcall
jecxz
sti
or
cmc
out
xor
push
xor
lock
scas
test
call
std
mov
mov
fisubrs
movnti
pop
pop
lea
mov
out
inc
cmp
dec
pop
movb
push
lcall
lock
mov
inc
sub
fwait
fs
dec
sbb
lret
xlat
mov
sub
and
aam
dec
mov
sub
dec
dec
mov
jae
mov
fwait
test
movsb
adc
es
xor
adc
and
sub
xor
adc
xor
mov
and
sahf
mov
xchg
pop
ret
gs
jne
mov
inc
jp
sbb
jp
cmp
sbb
popf
rclb
or
pop
pop
das
test
xchg
jge
pop
push
fsubrp
rclb
movl
xchg
jmp
inc
cmp
mov
mov
add
aaa
aad
rcll
push
sti
or
push
test
sahf
xor
roll
mov
jmp
mov
jmp
push
gs
movsb
es
pop
jle
fdivrl
jle
pop
dec
xor
shr
jne
or
lods
mov
test
dec
imul
inc
inc
jp
pop
je,pt
dec
jecxz
imul
insl
pop
leave
or
mov
xor
cmp
cmp
das
dec
mov
cli
pop
rolb
mov
psrld
out
fs
dec
gs
enter
add
jl
ret
pop
jg
arpl
dec
and
stos
movsbl
cld
mov
jecxz
cmpsl
addb
and
arpl
push
lcall
pop
ret
cmpsl
popf
pop
movsb
repnz
cli
insl
sbb
shl
sbb
push
sub
aas
xor
sbb
bound
and
dec
sbb
xlat
pushf
aam
pushf
ja
fists
sti
mov
pop
pop
nop
icebp
jl
js
cltd
shl
iret
cli
prefetch
stc
lods
and
push
and
jne
push
jecxz
sbb
insw
leave
repz
mov
and
and
inc
hlt
insb
jno
lods
push
adc
insl
dec
aaa
aam
jle
and
jg
cmpsb
dec
fidivrl
enter
ds
mov
movsb
lahf
insb
sbb
flds
loope
mov
test
and
mov
fisttpl
repz
ss
dec
inc
add
mov
add
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
incl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
mov
subl
jmp
dec
pushf
push
in
imul
mov
adc
jle
jg
jle
ljmp
nop
mov
inc
in
aad
les
je
pop
outsb
mov
roll
mov
sbb
das
fisttpl
adc
sbb
les
rorb
mov
shrb
or
subl
dec
mull
jl
imul
nop
test
mov
inc
xchg
adc
push
cmp
ret
add
jge
xor
inc
in
fldt
push
xchg
cld
movsb
jg
mov
inc
in
xor
imul
xchg
insl
pushf
pusha
lahf
push
cli
cltd
sub
lods
fsubl
adc
rcrb
sub
add
inc
jmp
and
iret
stos
jl
lret
cmc
cmp
scas
pop
mov
sbb
test
push
ljmp
cmpl
rcr
mov
into
dec
mov
outsl
enter
pop
or
jl
nop
cmp
inc
inc
mov
cli
xor
ja
mov
xor
mov
notl
add
mov
or
mov
jmp
sub
xchg
jns
jns
or
and
xor
or
jle
push
enter
cwtl
scas
mov
lods
fwait
call
addr16
int
fistpll
jp
in
lret
in
cmpl
mov
test
stos
addb
jae
mov
sti
jle
push
or
shl
xor
xor
leave
test
ds
sbb
popa
and
xchg
pop
and
out
test
jb
add
icebp
cwtl
popa
lea
cmpsb
ja
push
push
mov
jnp
adc
xchg
es
shl
rcrb
adc
ret
aaa
pop
ja
push
mov
insb
or
push
arpl
sbbb
repz
outsb
dec
inc
add
push
rcrb
add
push
pop
cltd
insb
jno
das
xchg
xlat
xor
mov
addl
repz
lcall
fsts
inc
pop
jge
xchg
cwtl
mov
xchg
cmp
and
fwait
dec
stos
mov
inc
pusha
rcrb
movzwl
add
mov
movb
lea
and
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
mov
xor
orl
sub
mov
xor
jmp
adc
fs
jmp
fisubl
roll
or
jle
or
jle
cmp
outsl
mov
lock
push
sub
imul
orb
jp
inc
stc
inc
fildl
pop
shl
not
scas
out
adc
lea
or
push
andl
xor
mov
xchg
or
std
jb
nop
fildll
inc
and
dec
xor
inc
jg
enter
xchg
dec
dec
ss
jb
imul
xchg
mov
out
inc
jecxz
std
cwtl
mov
xor
pop
in
add
sbb
and
mov
in
cmpsb
cmp
data16
add
out
jle
push
mov
dec
push
imul
hlt
mov
mov
mov
insl
insl
mov
jno
sbb
adc
out
add
push
pushl
outsb
sar
mov
divl
jmp
adcl
daa
xor
std
out
and
jae
fcomip
xor
into
jge
imulb
cmp
cmp
inc
sub
jno
inc
clc
cmp
add
inc
add
inc
lock
clc
xor
add
sbb
mov
addl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
sub
fwait
and
sbb
jle
jg
jle
cmpsb
sub
int
test
fcomip
sbb
inc
das
stc
inc
adc
lds
arpl
test
sub
fildll
cwtl
push
pop
sbb
adcl
or
insb
xor
xor
push
sbb
loop
mov
xchg
dec
and
xchg
jae
xor
or
jmp
in
dec
int3
out
or
push
or
enter
dec
nop
dec
xchg
aam
inc
mov
jbe
push
jno
stos
mov
mov
inc
dec
scas
lret
call
dec
ds
or
dec
cli
cmc
pop
enter
orl
mov
fmulp
stos
cwtl
xor
push
xchg
push
pop
fcompl
int3
fldl
cmp
clc
and
hlt
xchg
mov
mov
je
sbb
repnz
pushf
test
jae
ljmp
pushl
hlt
xor
add
cmp
je
jmp
xor
cltd
js
popa
cmp
nop
push
inc
adc
jle
or
jle
cmc
iret
add
enter
cltd
hlt
cli
or
cmp
jb
fisttpll
lods
scas
insb
out
xor
sbb
dec
es
sahf
lea
or
scas
cmp
mov
xor
mov
and
fmulp
aad
lock
outsl
mov
test
pop
and
pop
aaa
loop
lds
popa
loopne
adc
sub
jecxz
pop
mov
adc
fstpl
lret
sbb
shrb
test
sbb
repz
arpl
mov
cmpsb
fbld
shll
iret
mov
sub
arpl
loopne
mov
mov
inc
cmc
enter
jnp
into
out
shl
xor
xor
ror
ja
add
test
pop
jne
aam
pusha
mov
sbb
rorl
sub
lods
fcmovne
int3
xor
jp
inc
shr
push
arpl
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
jmp
fcoms
sub
clc
fcomps
sub
sub
jg
jle
sbb
test
dec
orl
xchg
mov
xlat
xchg
cmp
loop
data16
lds
pop
adc
or
dec
hlt
insb
std
fwait
adc
mov
xchg
push
addl
fwait
xor
ljmp
shl
or
iret
add
mov
push
imul
stc
lahf
movsb
call
inc
or
dec
xchg
push
and
pop
inc
dec
insb
insl
and
leave
js
cltd
test
subb
mov
cmp
cli
pop
test
jnp
cld
xor
mov
stc
clc
sbb
xchg
mov
add
mov
adc
je
in
pusha
dec
mov
decb
scas
sbb
jo
fwait
sub
loopne
sub
jbe
mov
cmp
cmp
lret
adc
adc
sarl
loope
pop
sahf
pop
inc
nop
mov
mov
xor
pop
lods
das
divps
inc
cwtl
into
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
inc
jno
icebp
stc
js
xchg
insb
lret
sub
cmp
jle
or
jle
sub
notl
or
xchg
sub
icebp
jb
leave
nop
loope
dec
into
rcrl
adc
jle
pushf
stos
test
pop
adc
mull
es
xchg
icebp
lods
xchg
xchg
mov
push
and
addr16
xor
hlt
mov
mov
pop
pop
ror
sbb
movsl
mov
sarl
adc
ljmp
std
out
movsb
cmp
fdivr
dec
xor
cmp
repz
fdivrl
xor
int
push
mov
addl
or
icebp
mov
push
or
cli
mov
push
push
fsubl
jecxz
sbb
or
loop
sti
add
and
iret
pop
incb
test
sub
aad
pop
jbe
addr16
inc
iret
rcrl
dec
sub
pop
push
test
repz
add
and
add
dec
sub
lock
xchg
cmp
or
jle
and
ljmp
test
push
int
mov
cltd
add
jle
cmp
mov
or
push
xchg
iret
add
mov
sarl
add
mov
leave
inc
test
outsl
inc
and
jle
xor
cmp
mov
loop
shrl
xor
aad
sub
test
paddsb
sub
mov
cmpsl
and
popf
loope
lea
jnp
push
outsb
and
out
or
xchg
mov
mov
loope
xchg
scas
aaa
xchg
mov
mov
or
loope
pop
or
or
cmc
dec
mov
jb
ret
mov
add
mov
pcmpeqw
test
ret
pusha
loop
mov
mull
jle
and
in
repz
cmp
xchg
pushf
sahf
xor
adc
aaa
sbb
fldenv
mov
cmp
out
adc
enter
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
jmp
jmp
loopne
mov
jmp
jno
shrl
jle
jbe
lods
sbb
jmp
push
adc
pop
jbe
aaa
cmp
jle
xlat
push
test
dec
dec
push
ja
add
testb
popa
mov
or
pop
push
xor
adc
xor
or
lods
sti
fs
or
push
sbbb
es
pushf
ret
sub
xor
insl
pop
movsb
adc
mov
mov
repz
in
sub
mov
sub
fildl
jne
mov
ds
mov
jbe
jecxz
push
and
mov
popa
adc
aas
jne
jns
jbe
lret
jne
pop
cmp
aaa
lods
mov
fsubs
mov
insl
inc
mov
mov
dec
push
addr16
cltd
push
mov
lock
cmpsl
das
cltd
inc
inc
xchg
in
xor
leave
imul
or
aam
cwtl
sbb
in
icebp
push
mov
xchg
es
lcall
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
jmp
lods
lock
sbb
daa
loope
mov
frstor
jle
or
jle
aas
fcoml
xchg
dec
inc
pop
fcompl
pop
lret
sahf
test
xchg
scas
scas
mov
sbb
add
mov
dec
pop
dec
outsl
insb
sarl
add
inc
adc
push
fcoml
mov
lds
inc
int
pusha
movsb
xchg
inc
or
cmp
daa
pop
lcall
nop
mov
pusha
cmp
xchg
mov
aam
cmp
mov
pushf
inc
sub
in
jecxz
mov
inc
test
push
mov
xor
aas
sbb
fsubr
mov
mov
cmp
cmp
cmp
or
dec
mov
sti
fnstenv
sbb
or
int3
cmc
test
xchg
fimull
inc
ficompl
push
push
mov
mov
xchg
mov
ss
and
jo
and
cwtl
jge
hlt
sub
mov
pop
clc
or
lods
ret
push
insb
test
xor
push
or
rorl
add
or
inc
std
decl
jmp
or
stc
jno
aad
and
or
jle
out
pop
jge
rcll
mov
adc
and
lret
push
mov
jl
adc
sbb
dec
ja
out
dec
sahf
sub
mov
mov
mov
fnstenv
data16
push
mov
cmc
mov
bnd
inc
push
fnstsw
repz
dec
inc
mov
bound
push
push
subb
xchg
fwait
shr
sti
push
xchg
add
icebp
pop
mov
rol
rclb
inc
push
sbb
push
cmpsl
cwtl
lds
pop
cmp
mov
loope
mov
scas
jns
cltd
xor
int
aaa
out
mov
addl
add
dec
pop
cmpsl
pushl
loop
daa
mov
xlat
mov
mov
push
pop
lret
filds
cmp
mov
shlb
scas
adcb
insb
adc
sub
hlt
pop
lods
sbb
data16
adc
jge
sub
mov
add
mov
pop
leave
ret
push
mov
push
not
movl
mov
mov
add
mov
adcl
xor
add
andl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
xor
adc
push
add
mov
mov
add
xorl
mov
mov
mov
sub
xor
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
jmp
andb
xchg
xchg
mov
xchg
xor
in
jle
cmpb
xchg
mov
es
lods
pop
arpl
movsb
dec
shr
lods
jo
pop
add
movsb
aam
daa
das
jmp
xchg
push
test
jo
and
out
stos
adc
aam
mov
loope
mov
aaa
mov
pop
cmp
movsl
pop
in
aas
imulb
out
inc
push
mov
fxch
cmc
out
pop
mov
mov
mov
and
cmp
icebp
or
or
fstl
push
push
movsb
setp
jg
mov
cmc
mov
es
mov
mov
mov
mov
jmp
es
mov
les
xor
shlb
or
jle
cmpb
mov
lock
popf
fdivl
pop
filds
negb
inc
push
dec
mov
lret
dec
in
ret
in
test
mov
push
daa
in
sbb
and
and
mov
push
ja
xor
inc
rcl
rcrl
pop
cmc
pusha
xor
sbb
fwait
icebp
push
xchg
lahf
jbe
out
mov
push
push
adc
sub
xor
mov
jecxz
inc
adc
jbe
or
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
test
pusha
test
cmp
adcl
and
push
jg
jle
nop
cmp
data16
mov
lret
mov
pop
pop
insb
mov
lods
fwait
iret
mov
cmpsl
cmp
in
add
idiv
sub
test
dec
cmpb
testl
lret
pop
pop
sbb
inc
test
and
jnp
adc
insl
outsl
mov
pop
xchg
aaa
pop
test
mov
mov
jno
mov
push
mov
pop
in
xor
inc
sub
lods
sbb
xor
jl
jecxz
sub
xchg
out
nop
ljmp
roll
in
mov
cmp
shlb
add
and
testl
add
inc
loopne
outsb
jo
add
jle
loopne
or
mov
jnp
bound
pop
insl
andl
inc
lds
lahf
dec
cmpb
test
mov
inc
lret
fbld
imul
out
push
push
xchg
sbb
sub
inc
inc
hlt
iret
in
movsb
xor
cmpl
testl
sbb
movl
or
mov
orl
mov
movzwl
adc
mov
subl
xor
adcl
add
movl
mov
xor
jmp
push
xlat
lcall
jl
or
inc
lret
mov
jle
push
jg
jle
mov
loopne
cs
xchg
sbb
and
ljmp
xor
shll
mov
fs
cmp
sarb
out
mov
adc
sub
inc
rcrl
lods
mov
mov
mov
test
pusha
adc
xchg
dec
loopne
test
add
js
out
mov
xchg
lods
add
movsb
xor
imul
mov
repnz
inc
je
scas
popa
hlt
pop
push
daa
push
test
js
cmc
ds
mov
testb
jo,pt
or
mov
hlt
in
xchg
js
or
rcll
fidivrl
add
mov
pop
mov
and
pop
aad
rcrl
sub
push
cwtl
aad
das
lock
adc
and
and
clc
les
jne
aam
mov
div
mov
mov
movsb
cli
mov
out
rorl
add
jo
imul
outsl
cmp
xchg
sahf
outsb
adc
add
test
pop
pop
jge
call
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
mov
jmp
add
cmp
jns
gs
movsb
or
leave
insl
daa
jle
push
jg
jle
out
ss
sbb
and
test
pop
ret
dec
mov
ljmp
test
pop
pop
mov
cmp
push
rol
pop
popa
iret
lods
dec
dec
add
mov
outsb
pop
push
out
sahf
mov
mov
jae
and
sahf
adc
ss
loopne
mov
xchg
and
dec
inc
sub
rcl
inc
fwait
repz
lea
push
leave
inc
repz
jp
sahf
xchg
test
adc
cmp
adc
sahf
jl
xchg
rorb
rolb
add
mov
xchg
mov
jbe
iret
das
loope
inc
fisubl
ljmp
inc
jbe
mov
jns
cmc
xchg
cmp
stos
sub
xor
hlt
negl
stc
out
push
adc
or
adc
mov
ja
push
hlt
dec
cmp
mov
xchg
rcrb
mov
movl
stc
inc
cmpsb
daa
inc
adc
sbb
in
sub
ss
mov
and
loope
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
orl
push
incl
push
mov
subl
push
push
xor
adcl
push
adcl
mov
xorl
call
cmp
je
xor
jmp
push
mov
mov
push
adcl
push
andl
push
andl
lea
mov
andl
push
negl
call
adcl
mov
mov
test
movl
je
notl
pushl
adcl
call
addl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
xor
shll
and
inc
mov
imul
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
add
or
mov
movl
mov
cmp
movl
jne
movl
inc
movl
cmp
jb
andl
push
subl
call
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
shll
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
and
mov
inc
imul
mov
mov
xor
mov
or
movl
mov
mov
mov
cmp
jne
inc
movl
cmp
jb
xor
sbb
shll
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
xor
imul
mov
sub
mov
and
or
mov
mov
movl
cmp
jne
movl
inc
cmp
movl
jb
xor
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
addl
shll
and
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
push
push
call
jmp
mov
imul
mov
or
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
mov
sub
imul
xor
shll
and
or
mov
xor
imul
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
or
or
mov
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
jb
xor
orl
shll
and
and
mov
adcl
imul
adc
mov
xor
or
xor
or
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
movl
jb
sbb
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
shll
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
neg
and
mov
neg
imul
xor
mov
adc
or
mov
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
xor
shll
and
mov
imul
mov
or
mov
mov
cmp
jne
inc
cmp
jb
inc
cmp
jb
mov
mov
movl
lea
mov
lea
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
cmp
mov
je
mov
xor
add
imul
mov
jmp
xor
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
movl
add
mov
mov
addl
add
sbbl
xor
cmp
movl
jne
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
push
sub
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
sub
movl
jmp
jmp
aam
push
pop
jnp
fwait
jne
clc
jecxz
pushf
add
jg
jle
nop
mov
mulb
divb
movsb
jae
jp
push
mov
inc
pop
cmp
jbe
jle
jnp
aad
fwait
scas
mov
sub
ja
push
pop
add
jle
prefetch
sti
lret
out
loopne
out
lret
push
stos
inc
lods
scas
popf
mov
sub
enter
push
or
ret
mov
push
or
inc
push
repnz
fs
subb
cmpsb
jmp
stc
and
psubsb
push
gs
imull
fcomip
loopne
aad
lods
scas
mov
lds
jg
jle
aas
dec
pop
dec
in
push
push
push
pop
sbb
and
lods
loopne
es
repz
sub
fsubr
mov
xor
dec
repz
int
cmp
xorl
loope
gs
loope
jecxz
sbb
xor
and
rorl
push
xlat
js
sbb
rorb
xor
dec
push
pop
mov
sbb
sub
iret
fsub
adc
inc
pop
dec
daa
test
and
imull
fnstcw
mov
xchg
mov
jge
pop
sbb
xchg
mov
sbb
sti
mull
popf
mov
push
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
jmp
addr16
mov
jl
arpl
es
sbb
cmp
lds
jle
outsl
stos
cld
push
mov
mov
lcall
pushf
mov
nop
sahf
inc
jecxz
sub
xor
shll
push
les
repnz
movsl
lods
ret
push
lds
dec
pop
lret
and
leave
imul
xchg
imul
jge
pop
stos
cmp
imul
mov
cli
xchg
imul
decl
dec
adc
call
mov
jle
push
insl
cmp
outsb
je
xorb
leave
scas
int
sub
adc
or
call
or
sbb
inc
mov
mov
pop
testb
psrad
xchg
div
daa
inc
add
jbe
es
es
lods
sbb
adc
std
pushf
sbb
js
jno
lds
loopne
adc
xchg
adc
movsb
out
jg
mov
xor
push
loopne
scas
inc
xchg
push
mov
ja
mov
les
adc
lds
mov
fdivr
jl
sub
inc
mov
repz
or
push
cmp
jo
sub
pusha
mov
test
jp
or
adc
or
ficomps
lahf
lds
or
mov
xor
xor
add
jmp
jg
add
jns
cmp
jmp
cmp
lds
jle
leave
sub
loop
rcr
xchg
mov
cs
jae
pop
rclb
xor
jecxz
sub
pop
pop
mov
sbb
dec
push
lock
insb
adc
xor
lods
cmpsl
insl
xor
xchg
inc
fbld
sahf
into
sbb
cld
stc
xor
push
decb
xchg
inc
jbe
ja
repnz
test
xlat
push
xchg
and
mov
loopne
inc
or
cmp
and
mov
and
pop
xchg
inc
mov
push
test
cmp
ja
insl
cmp
loopne
cld
insl
into
imul
fidivrs
in
std
mov
sbb
xchg
lods
leave
sbb
mov
xor
pop
jmp
iret
outsl
pop
cld
in
inc
sub
or
cs
xchg
out
jbe
cmp
adc
aas
cmc
arpl
int3
lods
push
pop
and
test
repz
jo
pushf
pop
cli
lds
or
repnz
out
sbb
ljmp
mov
mov
inc
adc
fs
loop
sbb
add
lret
and
popa
aaa
push
lds
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
push
mov
sub
cmc
sub
cmp
lds
jle
adc
inc
dec
and
rolb
shll
es
lea
xchg
jns
mov
lods
xor
inc
mov
imul
sti
sti
lods
bound
cli
bound
sub
jl
out
shlb
inc
repnz
in
xchg
or
xchg
xchg
push
call
mov
ret
jg
add
lahf
sub
mov
fcompl
mov
dec
xor
sbb
dec
jmp
xor
addr16
cmp
jnp
rorl
mov
bound
out
aas
jb
fidivl
sub
jns
in
fcoml
push
or
mov
mov
fistps
leave
xchg
inc
rol
xlat
jb
sti
sbb
outsb
fbld
fcomp
xor
sbb
ljmp
mov
mov
in
mov
test
lods
ret
inc
jle
sbb
clc
sbb
xlat
dec
and
mov
cltd
shll
cld
stos
fstl
or
out
jb
mov
mov
sti
mov
gs
cmc
std
jmp
push
aad
iret
mov
dec
in
ds
loope
add
jbe
testl
jl
xlat
pop
push
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
addl
movl
movl
decl
mov
push
mov
xor
xor
jmp
je
jg
addr16
test
dec
adc
jle,pt
mov
jle
adc
sbb
loop
push
cltd
xor
mov
add
or
hlt
mov
repnz
xor
mov
pop
filds
and
leave
pusha
cltd
ja
adc
mov
xchg
or
jnp
imul
test
lds
dec
lds
mov
cmc
inc
mov
data16
stos
aaa
ret
or
dec
pop
test
xchg
mov
mov
dec
pop
sub
inc
fs
cld
jp
and
int3
cli
push
xor
jae
inc
pop
out
test
push
cmp
into
mov
jl
jo
imul
cmp
inc
in
dec
gs
add
andl
mov
movl
mov
addl
push
push
orl
test
je
mov
mov
mov
movzbl
and
imul
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
or
mov
mov
movl
xchg
mov
mov
or
sub
and
xor
adc
mov
mov
add
mov
and
jmp
scas
mov
imul
pop
pusha
fisttps
dec
ret
mov
aas
jle
mov
jle
stos
inc
insb
aaa
jp
fnstenv
xchg
sub
xor
cmc
outsl
jno
mov
mov
mov
add
leave
popf
leave
pop
and
outsl
add
movsl
lods
sbbl
jge
xlat
es
std
dec
inc
sbbl
mov
add
orb
cmp
movsl
test
mov
loope
adc
add
insb
loope
loopne
repz
xchg
dec
shlb
push
popf
cmp
sub
and
out
pop
jb
rclb
pop
jmp
xchg
sub
jnp
add
or
andl
out
pop
push
or
xor
adc
and
jnp
mov
sbb
mov
jne
movzbl
and
jmp
mov
stos
popa
jns
in
mov
shl
add
jle
jle
jle
aaa
xchg
fsubl
test
jecxz
mov
adc
xchg
mov
pop
stos
loop
fs
sbb
mov
sbb
push
jp
lret
daa
pusha
push
je
cld
push
xor
fistpl
insb
jns
push
fstpl
pop
scas
inc
lods
sar
lods
mov
aas
jle
add
std
or
and
fwait
in
xchg
cmc
pop
div
lock
out
dec
lret
adc
mov
push
add
stos
mov
fldt
sahf
xchg
pop
jl
aas
scas
xchg
shrb
js
sub
in
ret
xchg
lock
in
cwtl
xchg
outsl
jge
rorl
fidivrl
sub
dec
stos
inc
add
enter
cmp
add
not
mov
mov
je
mov
xor
mov
xor
andl
add
movl
cmp
jmp
push
pop
popf
aam
fs
test
push
mov
jle
jle
jle
int3
push
sub
xlat
or
icebp
dec
push
jp
js
mov
jecxz
mov
insl
shll
mov
inc
mov
pop
pusha
js
pop
sub
adc
cmp
in
int
xchg
jl
ret
clc
es
lds
cld
jno
xor
push
dec
sub
or
mov
inc
fcompl
xchg
jecxz
fwait
and
sbbl
rcrl
incb
add
mov
iret
shufps
cmc
push
lcall
leave
bound
repnz
inc
imul
adc
arpl
sub
sbb
ret
mov
icebp
sbb
out
bnd
pushl
movl
call
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
mov
not
mov
xor
subl
add
cmp
jmp
add
or
in
loope
js
dec
inc
jmp
lret
xchg
cmp
jle
loop
push
xor
sub
pop
dec
cmp
add
add
insb
stc
mov
inc
mov
fs
mov
subb
enter
dec
jo
js
sarl
mov
mov
pop
movsl
sub
ss
mov
fld1
nop
fiaddl
mov
shlb
or
inc
inc
fcoml
mov
addl
add
int3
arpl
push
cmp
icebp
xor
lds
pusha
mov
clc
add
jb
cmp
dec
pop
test
jns
xor
xor
aam
xchg
dec
and
ret
js
fldlg2
test
mov
cmp
mov
add
add
and
pushl
jmp
sti
loopne
lock
cltd
sti
jns
cmpsb
pop
out
dec
data16
xor
mov
jle
jmp
push
cld
movsl
test
and
jo
into
js
jbe
push
in
popa
loopne
mov
sub
daa
inc
pop
pop
add
sarl
jae
cmp
pop
aam
insl
cmpsl
lods
shrb
dec
mov
inc
sahf
jo
xchg
sub
popf
in
sbb
xor
into
popa
jg
mov
dec
jnp
or
sbb
lret
cwtl
lods
pusha
cs
out
cmpsl
jmp
jbe
push
jno
daa
or
sets
shrb
das
ss
mov
push
xor
pop
inc
lock
test
cli
iret
popl
inc
mov
adc
daa
push
sub
cmp
inc
mov
divb
or
clc
test
pop
pushl
call
or
mov
mov
adc
mov
adcl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
movzbl
sbb
mov
xor
or
xor
xor
sub
sub
mov
subl
mov
addl
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
jmp
mov
or
pop
pop
aas
mov
cmpsb
xor
xor
mov
jle
test
inc
fdivs
daa
push
adc
mov
scas
jp
adc
sbb
dec
mov
mov
notl
add
adc
mov
mov
imul
xor
das
popf
dec
jl
jecxz
test
add
addr16
ja
cmp
fs
push
push
xchg
arpl
push
jne
jae
roll
inc
cmp
cs
jno
loope,pt
mov
xlat
mov
call
mov
out
push
std
jle
scas
or
and
push
mov
push
pop
int
int3
dec
mov
ss
sti
inc
rolb
aaa
movsl
mov
fists
sbb
movsb
popf
ljmp
in
mov
add
xor
mov
mov
mov
add
jmp
pop
pusha
pop
movsb
jns
out
cmpsb
push
jg
dec
outsl
std
cld
jns
jle
mov
jle
or
mov
lds
sub
xchg
sti
jae
popl
arpl
dec
sub
jae
cmp
jp
push
imul
mov
pushf
jecxz
sbb
movsl
test
xchg
repz
pop
fucom
ret
aaa
pop
out
sub
rolb
dec
repnz
sbb
aad
jge
mov
adc
fstl
sbb
inc
jnp
mov
add
mov
pop
gs
inc
sub
mov
int3
mov
dec
xchg
in
mov
adc
inc
mov
mov
out
mov
mov
mov
out
sbb
aaa
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
jmp
test
scas
pop
cmpsb
jns
and
lock
jl
xor
mov
jle
pop
lods
and
outsb
call
mov
push
adc
jge
outsl
cmp
inc
add
aad
pop
push
pop
mov
in
push
jecxz
xchg
dec
mov
mov
add
or
adc
movsb
out
jg
scas
stos
mov
stc
decb
sub
shrb
cmp
and
push
aas
and
fs
mov
je
xchg
mov
enter
mov
aas
sahf
dec
inc
cmpsl
fistps
xlat
pop
push
cmpsl
shlb
aaa
mov
icebp
adc
mov
push
or
and
rcl
inc
rolb
jl
pop
mov
incl
add
sbb
mov
jg
into
jmp
shll
fistl
mov
jno
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
pop
imul
mov
jnp
push
pop
and
add
pusha
mov
jle
mov
jle
sbb
adc
insb
mov
lods
push
jne
xor
call
inc
push
or
in
mulb
rorb
ja
pop
out
stc
sbb
pop
dec
xchg
mov
mov
movsl
mov
xor
rolb
pop
pop
push
pop
rcrl
mov
sahf
xchg
adc
lods
cmp
xor
lods
mov
jb
mov
repz
sbb
inc
xchg
lods
sbb
xchg
mov
rol
jl
push
adc
jl
push
push
sbb
nop
pop
xchg
pop
and
xchg
icebp
mov
fistl
inc
neg
sbb
in
enter
mov
inc
out
xchg
mov
fisubrl
lret
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
xchg
adcl
mov
insl
jg
out
ss
mov
jle
push
xchg
out
push
sbb
or
scas
lret
xchg
bound
cmp
aam
popa
mov
adc
jne,pt
or
in
in
jns
mov
mov
and
mov
mov
xbegin
pop
jle
cld
xor
aaa
jbe
cwtl
mov
sbb
ret
jne
cs
in
xchg
xchg
popa
push
jbe
mov
shrl
aaa
jb
leave
push
or
mov
les
push
mov
jnp
outsl
pop
pop
jnp
inc
jge
out
into
and
and
push
or
and
adc
mov
mov
test
addr16
xchg
repnz
es
hlt
fstpt
dec
je
sarl
ret
or
add
mov
jmp
decl
xchg
push
inc
push
das
sbb
jle
mov
jle
dec
adc
aad
cmp
xchg
xor
push
das
sub
xchg
jg
inc
stos
mov
sbb
push
test
aad
rol
test
xlat
popa
sub
or
jae
rcr
fldt
push
sub
dec
or
ds
inc
ja
cmp
adc
mov
dec
add
push
pop
inc
loope
push
popa
rcll
mov
cmp
jg
xchg
into
and
stos
and
test
sub
add
hlt
mov
jne
into
cmovle
out
xchg
imull
adc
push
inc
sbbl
push
lock
decb
ss
xor
stc
int3
xchg
sbb
pop
jecxz
incb
shl
fwait
test
jb
xor
loopne
add
inc
loop
xchg
imul
xor
jle
jle
stos
out
and
je
repz
mov
out
pushf
jae
push
mov
aaa
fnstenv
sub
notb
xchg
outsl
mov
push
out
xlat
dec
add
rorb
ss
push
xorl
loope
fdivs
loopne
pop
dec
jl
pop
insb
stos
movsb
int
lock
add
mov
fwait
inc
mov
jne
out
push
dec
mov
aam
inc
add
mov
cmp
das
cmp
pop
pop
or
lock
jbe
shrl
out
das
sahf
sub
inc
mov
jbe
and
mov
cmp
std
sub
xlat
sbb
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
jmp
pop
sub
sub
jne
stos
movsl
mov
jle
mov
jle
sub
sub
pusha
pushf
mov
add
pop
add
inc
xor
das
lcall
test
mov
les
xchg
cmpsb
mov
mov
in
inc
add
add
push
sbb
push
aas
mov
shlb
imul
adc
pop
fistpll
inc
jb
scas
xor
adc
mov
leave
mov
test
loopne
cmovge
xchg
bound
and
frstor
jecxz
bound
lahf
mov
mov
loope
jnp
jg
cmp
push
sbb
mov
mulb
mov
ficomps
mov
in
jecxz
dec
jle
fldenv
fidivrl
pop
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
jmp
mov
pop
mov
xchg
inc
mov
repz
jle
mov
jle
dec
mov
popa
aad
sbb
push
outsb
and
pusha
xor
sub
or
push
add
mov
movsb
and
outsl
lock
or
push
testl
fdivrs
aad
movsl
add
int3
incl
fisubrl
cmp
notb
add
cs
int
xor
pop
es
mov
jle
inc
mov
sub
out
sbb
push
xor
push
cltd
and
pusha
fwait
jle
mov
pop
ficoml
cmpsl
push
loopne
adc
xchg
test
aad
mulb
and
inc
mov
ret
or
std
stos
ljmp
jmp
cmp
lea
cmp
jne
mov
jmp
mov
jmp
mov
or
leave
jns
or
cmp
jle
mov
jle
mov
adc
inc
and
mov
stos
arpl
xor
ljmp
je
ljmp
arpl
jbe
pop
mov
je
xchg
or
add
cmp
cld
cmp
out
push
xor
add
test
push
jno
and
movsb
js
movsb
jecxz
mov
jp
add
adc
sub
cs
xchg
in
add
mov
mov
xor
aam
push
clc
adc
and
adc
imul
movsl
fidivrl
bound
xchg
fildll
imulb
aam
xor
es
fwait
stos
jg
and
mov
xchg
popf
mov
mov
fisttpll
cmp
mov
xor
add
mov
xor
lea
add
jmp
sbb
cmp
pop
inc
and
gs
inc
stos
fimuls
jle
mov
jle
inc
lcall
pusha
icebp
sub
loope
sbb
cld
inc
and
popf
mov
rorb
push
dec
lret
lods
dec
aaa
pop
loopne
adc
sbb
rcrb
push
sti
cmp
dec
movsb
insl
sti
or
iret
sub
dec
sarl
mov
test
sbb
xchg
or
imul
xor
stos
mov
ficoms
mov
in
jnp
xor
cmpsl
bound
fistps
adc
or
pop
in
pop
je
cmc
sub
xor
xchg
pop
aas
lahf
scas
bnd
and
pop
rclb
xchg
fbld
fwait
push
fists
cltd
out
cmpsl
sub
lret
jmp
negb
adc
push
xor
loopne
sub
in
shll
fucomi
loopne
add
popa
jno
jnp
jnp
or
insl
mov
jle
jle
jle
out
mov
mov
lret
add
and
sbb
sbbl
push
in
sbb
and
enter
sub
push
xchg
jecxz
add
call
ljmp
cmp
aad
dec
fnstenv
jl
fwait
shl
cltd
add
add
in
xor
add
add
fcmovnbe
adc
jbe
mov
push
out
lret
mov
aaa
mov
out
scas
mov
sub
scas
or
mov
cmp
ficoml
es
idiv
lret
addr16
mov
call
inc
cmp
dec
into
lods
outsb
ss
jge
mov
cmp
scas
mull
inc
cmp
jmp
test
xchg
push
stos
push
push
gs
mov
jle
mov
jle
test
popf
mov
arpl
pusha
ds
dec
pop
sub
inc
jne
inc
sbb
lahf
jp
jge
lret
into
pop
push
mov
stc
push
ds
pop
js
nop
pop
in
mov
out
inc
and
and
dec
or
inc
push
pop
sub
xor
inc
inc
xor
pusha
rcl
adc
adc
add
push
pop
sub
adc
jl
fnstsw
mov
dec
inc
pusha
xor
adc
pop
imul
pop
imul
mov
mov
xchg
filds
lahf
jmp
jle
int3
popa
lahf
or
std
mov
mov
pop
push
data16
mov
push
std
mov
pop
push
sub
cs
imul
std
add
add
add
inc
xchg
sub
xchg
jmp
xchg
out
jnp
jns
add
call
fxch
jle
mov
jle
mulb
test
xchg
pop
and
es
push
gs
and
mov
add
sbb
leave
cld
mov
fldcw
loopne
scas
xorl
pushf
pop
inc
imul
add
aaa
out
ret
pop
shll
pop
jg
jle
int
or
sub
xchg
inc
insl
insl
sub
rclb
cli
or
mov
loop
popa
fidivrl
stos
loope
and
xchg
dec
xchg
sbb
adc
ret
jns
jae
loop
rcrb
sbb
stos
sub
cmpsl
ficoms
and
pop
repnz
push
incl
js
incb
or
mov
pop
jb
or
nop
mov
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
