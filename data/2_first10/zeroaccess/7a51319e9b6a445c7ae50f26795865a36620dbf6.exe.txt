push
mov
sub
xor
mov
xor
mov
adc
mov
sub
push
mov
mov
mov
mov
jmp
mov
or
inc
pop
xlat
jbe
adc
adc
push
clc
adc
pop
push
inc
add
xchg
add
fcompl
or
adc
jo
movsb
xchg
jle
dec
mov
mov
xchg
mov
daa
and
push
sbb
sbb
pushf
dec
out
sbbb
add
sbbb
inc
ret
mov
movsb
in
jne
loopne
jno
aas
xchg
in
rolb
pop
or
sbb
notl
add
pop
fidivs
cli
xchg
cmp
or
pop
or
cmp
inc
cld
mov
leave
push
jbe
push
fcoms
or
ja
jmp
xlat
xchg
add
cwtl
leave
add
bound
or
loope
imulb
lods
cli
in
outsb
adcb
fsts
xor
sub
add
mov
sar
xor
pop
cmp
std
mov
arpl
xor
adc
es
stc
loope
stos
into
rcll
push
and
pop
andps
aas
jp
inc
xor
imul
lds
lods
inc
lahf
repnz
icebp
and
nop
push
sahf
jno
insb
inc
je
mov
scas
mov
xor
jp
dec
ss
push
mov
push
mov
and
add
jae
imul
pusha
scas
shrb
sahf
jge
push
movsl
lcall
stos
rolb
push
fwait
pop
ret
movsl
inc
dec
push
cmp
cmp
push
mov
sub
push
in
jne
in
cs
fidivrs
rep
lods
mov
xlat
sub
addb
xor
insb
sub
cmp
cmc
dec
decb
sbb
xchg
jne
in
rcl
int3
test
push
mov
das
add
inc
mov
mov
jo
pusha
inc
mov
shrb
cli
mov
shll
cmpsb
mov
sbb
jmp
or
adc
jne
test
lock
mov
jecxz
mov
dec
les
dec
jb
pop
push
fcmovnu
and
add
es
push
xchg
mov
jb
out
push
mov
add
std
hlt
test
fmull
lcall
mov
inc
cmp
lods
or
and
mov
cltd
cmp
loop
lcall
xchg
stc
push
int3
mov
mov
aad
dec
in
cmp
mov
xor
jnp
add
or
gs
aam
sbb
mov
lods
std
push
xchg
sbb
loope
mov
aaa
mov
push
adc
je
call
jb
dec
inc
push
dec
push
push
sahf
sub
adcl
adc
jp
lea
push
cs
dec
cwtl
test
loope
jecxz
outsl
or
inc
mov
pusha
rorb
lret
test
je
out
bound
dec
add
fists
outsb
cmp
jno
jnp
push
insl
or
inc
inc
push
das
push
loope
xorl
or
cmpsl
mov
and
lret
repnz
mov
shlb
sub
repnz
cwtl
dec
orb
push
xchg
cmp
push
mov
jae
aam
xchg
or
mull
les
jb
lcall
or
cmp
xlat
in
in
dec
into
sub
gs
adc
sub
daa
jg
mov
insb
out
les
sub
push
pop
dec
inc
xor
pop
roll
xor
in
cmp
movsb
fsub
cmpsl
ljmp
lcall
movsl
negl
sub
filds
enter
int
ja
jg
dec
leave
outsl
inc
cld
sbb
leave
mov
out
addr16
loop
loope
cmpl
and
dec
lods
mov
dec
inc
pop
repnz
into
cltd
icebp
out
xchg
jbe
int
cli
sub
and
in
popf
rorb
popw
jg
icebp
pop
adc
in
push
les
dec
mov
andnps
dec
outsb
xorl
and
pushf
cmpl
mov
inc
lcall
jae
loope
lret
xor
stc
popa
fisubrs
jge
mov
pop
jecxz
lods
xchg
out
je
mov
inc
xchg
mov
mov
out
fwait
push
xchg
mov
addr16
inc
xor
mov
dec
pop
mov
lcall
sub
dec
jl
push
enter
mov
shlb
in
mov
lods
jno
aaa
imul
inc
inc
fiaddl
mov
adc
outsb
in
repnz
stc
jecxz
adc
xchg
pop
adc
inc
cld
add
repnz
adc
push
pop
testb
mov
scas
ret
jne
imul
es
clc
out
ss
mov
jbe
xor
xchg
mov
int3
add
xorb
ret
cmc
in
or
inc
fistl
insb
clc
add
sbbl
fldcw
enter
lret
test
test
insl
jbe
mov
bswap
popf
aam
sub
dec
add
adcb
xor
inc
repnz
cmp
aaa
xchg
mov
shrl
and
and
in
xor
iret
push
stc
inc
loop
ret
loopne
mov
movsl
push
mov
sbb
pushf
jecxz
mov
iret
ja
push
ds
pop
subl
shr
hlt
ljmp
in
pushf
jp
test
and
loop
jl
adc
inc
sub
lret
push
fimuls
mov
call
cld
push
outsb
imul
push
popa
sarl
inc
ja
sarl
jmp
ficoml
cmpsb
xlat
lahf
dec
xchg
cmp
push
ds
jb
rorl
mov
pushf
push
sbb
xchg
test
jnp
lods
adc
mov
dec
mov
add
outsb
push
pop
sarl
sbb
aad
movsl
or
dec
lahf
xor
out
add
cmp
mov
sti
arpl
dec
push
std
lock
les
mov
int
sbb
mov
mov
data16
xchg
sbb
iret
mov
orl
orl
orl
mov
cmpl
movl
movl
jmp
movl
jne
push
push
push
call
xor
adcl
sbb
mov
and
sbbl
xor
adc
mov
sbb
mov
inc
mov
sub
mov
sbb
cmpl
mov
not
mov
jmp
movl
jg
pushl
call
sbb
or
adc
xor
or
or
sbbl
mov
orl
sub
orl
cmpl
mov
mov
movl
jmp
movl
jbe
pushl
push
pushl
call
and
and
xor
add
and
movzbl
add
mov
add
mov
sub
movl
lea
cmpl
mov
movl
jmp
movl
jg
push
call
movl
xor
add
sbb
or
and
xor
mov
addl
mov
and
mov
or
mov
mov
add
mov
add
orl
mov
mov
mov
or
mov
movzbl
or
shrd
cmpl
mov
mov
mov
mov
jmp
mov
jl
push
pushl
push
push
push
call
and
or
adc
mov
sub
shr
andl
mov
cmpl
not
notl
jmp
mov
movl
jne
push
call
movzbl
adc
and
movl
sbb
xor
add
adc
mov
mov
xor
orl
xor
or
mov
movl
sbb
jmp
push
test
pusha
stos
xchg
nop
hlt
lods
dec
sub
push
clc
adc
push
clc
adc
lea
sub
inc
fistl
in
or
cld
sbb
lods
mov
or
and
mov
in
add
fwait
orl
xchg
adc
add
dec
lods
sbb
iret
test
lret
sub
shlb
mov
fiadds
in
xchg
shrl
notb
adcl
sub
mov
jg
jg
jl
ficoms
push
mov
ljmp
sub
jb
ljmp
mov
test
jnp
mov
jecxz
movsb
shrb
push
into
pop
sub
pop
cmp
pop
nop
sti
jne
inc
dec
cs
cmpsl
filds
or
shrl
add
push
lods
mov
sub
imul
jmp
jo
movsl
jl
pop
or
jge
testl
mov
or
movsb
jp
mov
fldt
clc
fildll
repnz
or
or
jp
lock
insl
scas
into
mov
in
test
dec
xchg
sub
popf
fists
in
mov
int
idivl
mov
invd
jnp
aas
cld
push
insb
icebp
lea
sbb
int
pusha
mov
arpl
lock
mov
xchg
and
jge
ja
sbb
push
or
mov
or
loope
iret
mov
cmpsb
dec
scas
dec
daa
add
add
scas
push
gs
jbe
cmp
insb
lock
cmpsb
fimull
xchg
adc
push
jg
lods
gs
sbb
in
pop
in
add
aam
test
cs
jo
dec
test
jae
loope
and
jns
fidivrs
sub
test
fs
imul
test
repnz
cmp
ficomps
std
mov
adcb
dec
ret
shrb
adc
cmp
mov
sar
mov
fs
add
mov
push
mov
sub
shll
xchg
pop
inc
repnz
add
in
mul
imulb
popa
lea
inc
js
xor
mov
adc
mov
loop
mov
xchg
xor
add
stos
adc
mov
cli
movsl
jl
sub
popf
cwtl
push
mov
xor
cltd
pop
mov
sub
je
fscale
xchg
sub
loop
inc
daa
out
repz
js
fcmove
jae
jae
stos
push
fwait
testb
cmc
mov
cmp
mov
loop
mov
lcall
sbb
inc
aas
incl
adc
out
adc
jbe
sub
sub
adc
mov
push
and
jns
and
sub
dec
xor
mov
sub
scas
rol
push
or
add
cld
pop
out
add
adcl
xlat
lcall
adc
xchg
shll
push
jl
cmp
jp
xchg
test
push
ss
pushf
sub
dec
mov
pop
jg
xor
push
sbb
popa
shll
lahf
and
pop
pop
pop
rorb
xchg
std
and
or
hlt
aam
fs
fnstsw
or
repnz
mov
pop
xchg
mov
imul
cmp
add
inc
and
jno
add
sbb
push
repnz
out
popf
mov
out
pop
xchg
dec
fmull
fs
outsb
movsb
xor
out
leave
pop
mov
sbb
popf
and
mov
lret
and
pushf
sbb
dec
lret
fdivs
fisubl
pop
fsubrl
xor
repnz
test
jecxz
xchg
ss
xchg
pushf
jle
and
sub
add
xor
cld
lock
imul
int3
pop
or
inc
cmp
and
pop
mov
mov
push
mov
pop
sub
ja
cmpsl
movsb
pushf
rorb
cmpsl
push
and
push
push
pop
mov
mov
shlb
out
dec
mov
jo
dec
and
imul
mov
sarb
pop
mov
popf
pop
loope
jbe
aaa
test
in
or
imul
pop
or
mov
jecxz
orl
mov
fistl
arpl
nop
loope
addr16
pusha
jg,pn
mov
and
push
jae
std
mov
popa
or
inc
mov
sqrtps
add
dec
mov
xor
icebp
mov
ja
inc
xor
xchg
sbb
scas
mov
lods
imul
iret
mov
int
add
pusha
adc
push
jae
negb
in
pop
aaa
and
in
lds
sub
pop
pop
jo
or
mov
push
popf
imul
sti
testb
jnp
dec
out
mov
fdivrl
mov
and
addr16
xchg
inc
jo
xchg
dec
xchg
cld
push
int3
enter
aaa
shr
add
cld
leave
scas
push
icebp
sub
scas
nop
mov
andl
cmp
mov
jmp
imul
xor
and
lods
or
push
out
adc
std
jmp
outsl
shlb
enter
cmp
rclb
dec
xor
aas
or
and
add
mov
jecxz
pop
nop
mov
mov
and
xchg
jae
imul
test
push
les
dec
add
push
cmp
fwait
les
adc
ret
aam
aas
jecxz
lods
and
xorl
jmp
fisubrl
or
sahf
cmp
es
push
int3
cmpsb
ja
out
add
sub
imul
repnz
rclb
ljmp
pop
cmp
into
add
jg
xchg
js
call
iret
insb
xchg
push
sub
sub
ficoml
out
aad
ja
in
lret
cmp
mov
add
movsl
xor
xor
mov
scas
add
ljmp
ljmp
cwtl
adc
mov
xor
cmp
ret
push
rol
xchg
outsl
inc
add
negl
movl
neg
movl
neg
movl
movl
add
movl
or
movl
mov
adc
movl
cmpl
movl
mov
jmp
not
mov
jle
pushl
call
sub
orl
movl
andl
movl
and
adcl
and
movl
movl
jmp
push
sbb
sbb
sbb
sbb
add
inc
xchg
ljmp
ret
add
icebp
push
adc
les
cli
pop
pop
out
xchg
cmp
outsl
mov
dec
fldt
hlt
hlt
sbb
push
jg
fldt
xor
repnz
adc
push
jp
mov
fisubl
pop
cpuid
shlb
insb
into
enter
pusha
rcl
lcall
movsl
test
icebp
cmc
jns
stos
pop
arpl
cltd
xor
stos
mov
jns
xor
mov
mov
clc
push
cltd
xchg
sbb
dec
xor
lds
shll
jbe
sbb
adc
cmpsb
je
xor
xlat
xchg
cmc
push
loopne
dec
mov
adc
mov
xchg
movsl
sub
ret
outsl
outsl
mov
mov
sub
int
and
enter
dec
xlat
xor
xchg
fcomp
pop
insl
cmp
popl
jne
push
pop
and
dec
loopne
jb
ds
pop
mov
iret
int
aas
movsb
fisttps
jge
int3
push
fwait
inc
add
sub
adc
adc
jb
ljmp
xor
arpl
push
or
dec
jnp
sbbb
and
and
rorl
inc
jae
int
adc
fwait
and
rorl
fbld
cwtl
out
lret
pop
add
bnd
or
inc
scas
pop
mov
repnz
mov
dec
insb
js
mov
fistpl
fidivrl
cmpsl
jl
or
les
xlat
jl
xchg
movsl
xchg
push
lret
dec
lock
icebp
xchg
or
cmp
mov
lock
nop
cld
ds
lods
call
out
pop
mov
push
daa
jecxz
and
inc
lds
notl
cmpsl
cmp
jnp
xchg
enter
cwtl
rolb
pop
iret
pop
leave
call
lock
xchg
je
lret
clc
mov
mov
dec
cmpl
ds
outsl
out
and
push
inc
lahf
enter
sub
mov
pop
push
jmp
adcb
add
xorb
or
push
cmc
mov
fstl
loop
rcll
sub
pop
xor
iret
mov
aas
imul
add
test
movsl
mov
or
les
jae
xchg
sti
xchg
adc
cmp
mov
xchg
test
lock
fbld
andb
inc
scas
or
loop
push
jno
iret
inc
or
rclb
adc
jg
and
outsb
mov
add
decl
inc
mov
or
inc
loop
or
or
inc
xorl
cmp
inc
mov
out
cmp
push
pop
mov
add
arpl
mov
push
sbb
enter
hlt
push
nop
add
sbbl
xchg
pop
and
add
ja
imul
bound
cld
hlt
aam
jb
add
pop
push
sbb
stos
cltd
iret
loopne
push
fwait
mov
in
or
or
adc
jns
pop
push
into
dec
aas
cmc
xor
adc
hlt
fbstp
adc
cli
jg
sarb
leave
mov
sub
sub
outsb
out
lds
test
pop
mov
leave
loopne
mov
dec
cmpsb
aaa
dec
ss
jge
inc
xchg
icebp
cmp
push
and
lcall
mov
in
inc
aam
cmp
bound
rorl
jo
loop
insb
cld
dec
in
cmp
addr16
cld
fs
repz
xor
std
sub
popf
es
lea
lahf
scas
lods
out
daa
lods
inc
mov
shl
cmp
sbb
repz
mov
cld
add
xor
dec
xor
jo
push
add
mov
jg
push
pop
xchg
cmp
pop
test
lea
icebp
xchg
arpl
sub
jl
push
pushf
inc
imul
dec
in
clc
or
clc
std
repnz
push
add
in
mov
into
mov
push
dec
add
fcoms
pushf
adc
cwtl
loope
dec
push
xchg
jo
negb
pusha
lret
lods
jo
test
stos
inc
xor
inc
fdivp
scas
pushw
and
or
lret
xchg
clc
fisttpl
mov
jo
and
iret
mov
lret
jae
ja
orb
pop
sahf
mov
add
inc
sub
jl
test
test
das
inc
or
mov
sub
xchg
insb
xor
and
cmp
insl
into
out
cmp
push
mov
sub
lcall
mov
daa
hlt
dec
dec
pop
inc
dec
and
or
or
and
pop
test
mov
cld
or
dec
sbb
cli
repnz
push
ja
andb
aad
int3
xlat
lcall
sti
fildl
loope
stc
mov
cmp
pop
jno
fdivr
int
fistl
ret
test
lods
cmc
hlt
sub
cwtl
addl
stos
adc
mov
dec
jmp
cmp
add
scas
sub
loop
mov
or
insb
add
adc
inc
in
sub
cs
loopne
hlt
sbb
sub
add
cmp
push
add
stc
mov
xchg
imul
fdivrp
loop
aad
loop
pop
jnp
jbe
scas
push
xchg
popa
push
mov
jmp
stos
bound
fbld
enter
dec
add
aam
movd
inc
mov
inc
fstpt
xchg
adc
push
aaa
or
aam
rcrl
mov
lret
push
ljmp
xlat
fildll
sbb
mov
fistpll
push
mov
nop
mov
dec
jne
repz
mov
jno
push
clc
add
jnp
lcall
clc
ret
int
dec
mov
adc
iret
xor
mov
ret
sbb
hlt
adc
lods
push
call
js
mov
mov
pop
adcl
jle
in
push
in
pop
inc
cmpsb
push
lcall
and
mov
push
call
subb
in
scas
xchg
mov
mov
addr16
andl
inc
xchg
mov
inc
cwtl
inc
sbb
add
inc
pushf
jge
add
not
movl
cmpl
movl
movl
jmp
movl
not
je
push
push
push
push
pushl
push
push
pushl
call
sbb
negl
orl
subl
subl
orl
movl
movl
movl
sub
movl
jmp
loop
in
gs
ljmp
aam
adc
push
clc
adc
sub
pop
pop
or
int
push
loopne
mov
sub
test
adc
jnp
mov
sbb
lods
popa
cmpsl
add
out
mov
mov
xchg
outsl
add
gs
cmp
jp
aas
imul
xchg
mov
push
aas
lahf
repnz
or
cmpsl
xor
stc
adc
mov
mov
jle
cmp
or
in
rorl
inc
les
mov
jb
jno
fstpl
in
lcall
pop
jl
pusha
add
inc
shlb
pop
insb
push
jecxz
push
rcrb
push
sbb
gs
testb
das
mov
shrl
sub
pop
mov
xchg
pop
imul
mov
mov
sub
and
in
andl
jl
int3
push
imulb
andl
fwait
je
shr
jns
cmpsb
xchg
jecxz
insb
cmpsl
adc
and
cmc
and
push
xlat
adc
fwait
and
sbb
add
and
cmpsb
xor
sub
and
fcomp
in
stc
subl
push
psrld
jnp
mov
pusha
negl
imul
cmpb
loop
in
pop
cld
cld
mov
adc
mov
xor
cmpsl
test
push
inc
sub
loopne
push
std
sbb
add
lret
or
dec
sub
mov
out
sbb
dec
stc
es
outsl
repz
popa
sti
clc
jg
icebp
jnp
cltd
mov
mov
fsts
outsl
adc
cmp
sub
sub
mov
movl
stos
cwtl
stos
cs
sub
sbb
adc
inc
leave
fwait
ljmp
pop
xchg
mov
inc
mov
lods
idivb
cmp
ja
testl
add
sub
aad
fsubs
hlt
push
js
imul
gs
lock
subl
gs
sub
push
dec
add
out
loop
test
mov
and
add
fs
out
int
adc
dec
or
bound
cmpb
stc
add
cmpsl
test
negl
xchg
int
xchg
pop
in
pop
sbb
mov
js
dec
sbb
jp
adc
nop
jmp
xor
out
fistpll
lahf
pusha
pop
cmpsl
xor
test
imul
mov
inc
test
inc
ret
inc
push
jne
in
lret
jle
fwait
adc
mov
mov
jns
push
push
inc
mov
fnstsw
inc
jo
sbb
pop
cmpsl
incl
xor
sub
mov
out
mov
mov
sbb
add
mov
shlb
xchg
shll
ljmp
stos
loope
es
shlb
dec
dec
in
test
mov
jecxz
sbb
arpl
fimuls
repz
mov
test
int
and
pop
nop
jmp
in
lods
pop
mov
fsubl
lds
lret
outsl
push
inc
jns
test
or
inc
mov
std
mov
xchg
lret
push
out
dec
test
add
addr16
add
pop
sub
xlat
xor
xor
mov
je
scas
flds
fmul
fiadds
in
dec
scas
shl
ss
cli
cmp
lock
ret
dec
test
fisttpll
fisubrs
std
repz
aam
movsb
dec
pop
cmpsb
push
outsl
mov
fists
and
jae
xchg
ss
add
mov
je
cli
or
or
xor
inc
push
jecxz
pop
mov
std
ret
mov
mov
or
jo
loop
add
popf
mov
lock
orl
insb
mov
xchg
xlat
xchg
xor
les
arpl
repz
lods
cmp
jmp
lock
cmp
sbb
das
stos
dec
mov
mov
inc
or
lods
xchg
cwtl
sub
pushf
adc
sti
lahf
ret
and
sub
in
jbe
pop
sub
roll
adc
mov
sti
loopne
push
adc
mov
bound
and
push
daa
add
and
popf
mov
dec
xorl
data16
jne,pn
mov
jo
fisttpl
push
mov
insb
imul
aad
sar
push
pop
or
mov
dec
and
mov
pop
push
call
movsl
scas
mov
mov
inc
aad
add
mov
imul
into
jne
sbb
imul
cmp
jge
daa
stos
pop
jg
loopne
lock
mov
cmp
rcrb
adcl
scas
xlat
push
in
cmp
jnp
rorl
inc
pushf
push
sbb
xor
cmp
aam
aas
xchg
cld
mov
push
dec
gs
xchg
and
arpl
sbb
add
push
mov
xor
push
arpl
xchg
pop
repz
inc
insb
orb
addr16
js
mov
test
pop
pop
fistl
loop
in
rcrb
loop
xor
or
inc
outsb
or
stos
dec
mov
mov
inc
hlt
ja
inc
mov
stc
fsubrs
and
stos
and
jb
add
dec
and
pushf
clc
dec
or
daa
cli
std
and
sub
shlb
mov
jne
cmpsl
adc
enter
cmp
mov
adc
pushf
stos
push
push
sbb
lods
mov
loop
fcom
add
stos
fs
add
sbb
sub
mov
jecxz
xor
dec
pop
xor
je
mov
and
mov
xchg
adc
adc
dec
mov
cmpsl
xchg
cmp
aaa
mov
les
movl
mov
mov
dec
mov
aaa
test
leave
pop
cmp
jmp
mov
or
push
xor
dec
iret
pop
mov
sub
mov
jae
je
cmpsb
sti
rclb
sub
inc
imul
sbb
lds
cmpb
hlt
insl
ja
mov
std
cmp
adc
imul
sbbl
pop
pushl
les
mov
fisubl
ret
push
popf
lods
inc
shl
sub
into
movl
movl
movl
mov
adcl
shl
xor
or
and
mov
push
xorl
push
sbbl
push
push
call
mov
mov
xor
mov
and
mov
orl
xor
mov
cmpl
mov
not
movl
not
jmp
movl
movl
jb
pushl
push
push
call
sub
and
subl
xor
andl
add
orl
xor
or
mov
adc
mov
cmpl
mov
movl
movl
jmp
movl
jg
push
push
pushl
call
or
sbbl
and
xor
not
subl
cmpl
movl
movl
mov
jmp
movzbl
jge
push
pushl
push
push
call
xorl
sbb
sbb
movzwl
xor
xor
xor
and
sub
not
mov
lea
cmpl
mov
mov
jmp
movl
ja
push
push
pushl
call
sub
mov
or
sbb
or
adc
or
cmpl
mov
movzbl
jmp
mov
jl
pushl
call
xorl
mov
mov
xor
add
xorl
mov
mov
orl
or
andl
and
cmpl
mov
movl
movl
mov
jmp
movl
movl
jne
pushl
pushl
call
adc
movzwl
sbb
add
mov
sbb
mov
or
or
xor
or
or
mov
or
xor
cmp
jne
mov
and
mov
or
shrd
shr
mov
sbb
mov
shl
orl
xor
subl
xor
or
mov
cmp
jmp
pop
fdivrs
sbb
cltd
fbld
cmpsl
fs
adc
clc
adc
cmp
aad
dec
insl
dec
int
imul
and
jns
gs
in
sub
push
stos
mov
mov
mov
jbe
or
mov
scas
test
jle
push
mov
lret
inc
movsl
jnp
das
inc
and
sub
dec
pusha
xchg
loopne
jno
dec
loope
repz
pop
mov
sti
add
jnp
rcrb
jne
in
dec
lcall
pop
mov
in
mov
adc
add
dec
jo
out
or
repnz
inc
push
jecxz
ds
fs
and
mov
pop
aam
mov
cmp
enter
dec
dec
pop
sbb
jb
popf
sbb
pop
lods
dec
xor
sub
push
out
adc
movsb
and
sub
shll
mov
hlt
sbb
jnp
sbb
jle
mov
or
popa
repz
jmp
mov
pop
jb
inc
jp
or
adc
imul
inc
outsl
bound
mov
icebp
xchg
sub
cmp
xchg
xlat
push
jbe
jbe
repnz
aaa
sbb
stc
cwtl
xor
sub
lods
lcall
mov
jne
inc
adc
push
pop
and
ret
mov
lods
pushf
sbb
cmpsb
xchg
adc
xchg
lods
sti
shr
mov
or
mov
pop
cmpsl
or
ljmp
inc
mov
and
cmpb
jb
ljmp
xor
pop
rorl
push
test
das
xchg
pop
cmp
adc
push
adc
ds
adcl
push
xchg
cmpl
leave
inc
fdivl
inc
imul
das
push
inc
mov
adc
jo
dec
scas
add
sub
inc
stos
test
pop
xchg
and
mov
cmp
stos
inc
add
push
popf
lcall
test
add
jns
cmp
push
aaa
push
or
add
orl
jmp
stos
mov
loop
jge
mov
push
ret
outsb
xchg
mov
inc
jae
adc
lods
jb
lods
sbb
mov
add
jge
xchg
mov
xchg
mov
shl
xchg
fcmovnbe
sbb
les
jmp
xor
push
jmp
mov
sbb
int
or
mov
aas
movsb
loop
in
and
cmp
shll
mov
aam
lods
sub
mov
fs
xchg
push
push
stos
lods
sbbl
negl
pushf
xor
lea
xchg
jp
loope
insb
data16
adc
sub
xor
movl
in
mov
sysret
ja
int3
out
and
ja
xchg
outsb
popa
fistl
pop
inc
jg
sub
inc
mov
push
adc
clc
jno
mov
fisttps
cmp
xorl
mov
push
pushf
mov
outsl
out
lret
gs
mov
ret
fnstcw
bound
faddl
in
dec
push
adcb
sub
lock
nop
mov
out
into
pusha
sar
mov
fs
jnp
or
cmp
add
sbb
mov
jae
repnz
dec
test
hlt
out
out
mov
xchg
or
mov
stos
popf
jb
pop
jmp
inc
push
sub
orb
push
dec
outsb
mov
sbb
insb
push
dec
mov
test
into
add
dec
aad
testl
js
fstpl
and
add
adc
in
aaa
xchg
mov
xor
lret
mov
jno
push
arpl
insb
fmull
ficomps
fwait
std
cli
jb
xor
call
fldl
bound
gs
xor
popa
mov
xor
testb
sbb
xchg
shr
cwtl
out
jo
push
push
mov
jne
loop
jnp
push
je
cmp
test
push
cmp
jo
mov
fistps
or
fidivrs
add
jmp
sbb
rcl
jmp
push
sub
mov
cmpsl
std
loopne
mov
fwait
sub
push
pop
or
out
sub
push
mov
divb
inc
mov
jnp
leave
scas
cmpsb
int
cmp
icebp
jno
lret
stc
mov
inc
xor
cmp
cld
sub
in
jb
fs
call
aam
xor
or
jae
mov
out
test
or
inc
lret
sub
pushf
sbb
lahf
sbb
push
cmp
mov
dec
and
push
jnp
iret
mov
lea
mov
lods
cmp
pop
stos
dec
sub
mov
cmp
lea
inc
jge
cmp
lahf
scas
dec
xor
and
pushf
mov
push
dec
pop
inc
mov
enter
cmp
fwait
push
xor
fistpl
xor
inc
sub
mov
sub
decb
fidivrs
mov
adc
loopne
mov
add
or
mov
data16
mov
jmp
clc
repz
test
jbe
icebp
or
mov
aam
pushf
xchg
push
outsl
cld
push
fistl
add
in
cltd
shlb
fcomps
push
test
cmpsl
or
cmp
adc
or
sarb
sub
adc
pop
insl
outsb
dec
xchg
cwtl
jbe
lea
jge
pop
ret
fisttpl
and
add
or
lahf
fstps
out
push
cltd
es
lret
pop
js
into
xchg
repnz
adc
andb
jae
ljmp
sub
pop
aam
sub
repnz
in
cli
and
dec
sbbl
and
sti
sbb
xchg
cmc
mov
out
dec
aam
movsb
fsubr
adc
sarb
fldl
inc
in
fisubl
mov
int
shll
and
das
cwtl
mov
ljmp
or
jle
inc
push
mov
adc
pop
dec
int3
negl
fwait
lds
repz
push
test
add
or
sbb
sub
inc
int
stos
pop
mov
adc
adc
std
addb
sbb
cmpsb
or
cmp
mov
xor
xor
std
sub
jl
sbb
sbb
lcall
es
add
movl
mov
mov
jmp
movl
jae
push
push
call
inc
addl
sbb
mov
xor
mov
negl
sbbl
mov
cmpl
movzwl
mov
mov
jmp
movl
mov
jle
push
push
push
push
push
push
call
subl
xor
add
sbb
mov
xor
addl
mov
jmp
std
fnstsw
pop
sbb
cmpsb
pop
decb
jo
push
rcll
push
clc
adc
cmp
mov
sub
mov
out
xchg
jb
adc
fiaddl
push
pop
call
in
adc
jg
or
jno
xlat
imul
imul
mov
imul
dec
dec
inc
addb
fldenv
mov
adc
stos
scas
jo
mov
aaa
jne
push
mov
jae
sti
daa
or
arpl
in
cmpsl
leave
dec
add
enter
lret
dec
or
add
loope
jae
add
out
popa
scas
push
rclb
add
pop
cmpsl
shl
cld
out
sbb
xor
pop
xor
cmp
pop
jp
add
repz
xor
cwtl
sub
lock
aaa
loopne
cbtw
imul
mov
mov
popf
and
pop
add
ret
cmpsl
fs
mov
popa
aad
je
out
repnz
inc
ja
pop
push
mov
mov
fucom
das
outsl
lods
mov
mov
sub
ss
out
add
dec
das
xchg
pop
push
fimuls
pop
pop
pop
xor
rolb
jnp
icebp
pop
shl
mov
pushf
xchg
and
loopne
mov
push
mov
adcl
xchg
sbb
lds
add
test
push
repnz
and
out
jbe
sbb
sub
or
lret
mov
out
addb
mov
adc
xor
lahf
or
or
sub
mov
push
mov
sbb
addr16
cwtl
lret
lcall
fs
sti
or
mov
xor
aam
iret
inc
filds
mov
mov
cmpsb
imul
sub
das
inc
add
xchg
sbb
and
mov
dec
xchg
fs
mov
sub
push
adc
push
sub
fcoml
mov
and
jb
push
mov
xor
jmp
cmp
sbb
mov
pusha
push
leave
mov
or
hlt
mov
dec
les
sbb
mov
pop
aam
shlw
and
mov
hlt
fnstcw
mov
xchg
movb
ljmp
pop
inc
lods
inc
loopne
mov
fsubrp
adc
sbb
and
sub
movsl
int
push
cmp
push
call
mov
xchg
xor
lods
popf
cwtl
dec
repnz
and
pop
mov
mov
repnz
hlt
insb
push
mov
mov
into
jno,pn
pop
push
dec
js
ficoml
fstps
imul
xor
sarl
inc
bound
sub
mov
fidivl
jbe
dec
jns
mov
pop
push
cli
xor
cmp
adc
dec
cmp
mov
and
cmp
je
imul
decb
sub
insl
and
in
sar
inc
push
push
lahf
inc
rcl
repnz
jnp
xor
js
push
add
faddp
ja
hlt
mov
test
push
inc
in
mov
sahf
xchg
add
icebp
add
jg
mov
push
and
testb
lret
add
int
lods
aad
js
pop
lods
loopne
dec
xor
inc
bound
aad
cmp
jge
lea
mov
jo
adc
jecxz
jg
push
aad
test
dec
cmpsl
mov
sbb
data16
mov
gs
mov
dec
test
push
dec
mov
lret
das
in
jp
jae
test
push
leave
test
jae
in
pop
shlb
ja
cmp
sbb
movsb
sub
shr
add
xor
aas
inc
adc
ror
mov
pop
pushf
call
fidivl
pop
xlat
adc
es
fidivs
xor
and
cmp
xor
adc
lahf
inc
jbe
push
mov
lds
mov
dec
jmp
movsl
pop
sub
popl
fmuls
jmp
adc
stos
cld
test
cmp
push
add
push
mov
jbe
mov
aam
cmpsl
pop
cwtl
inc
push
mov
jns,pt
sub
sub
cwtl
aam
ss
xchg
std
cmpsl
pop
in
mov
mov
enter
xlat
jns
xchg
repz
and
iret
ficomps
pop
cmp
mov
fs
xchg
in
dec
mov
stc
js
xchg
loope
push
ljmp
das
fnstcw
push
and
repnz
lahf
mov
in
sbb
push
fdivrs
inc
lods
lock
sbb
mov
in
call
mov
cmp
adc
shrb
sub
push
iret
bound
nop
lea
test
and
leave
cld
dec
cli
jge
xchg
lds
ljmp
stc
adc
xchg
aam
jl
and
xorb
arpl
imul
pop
jg
fwait
mov
pusha
add
lea
iret
adcl
xchg
dec
dec
sub
adc
clc
add
add
fwait
mov
lods
addr16
push
xor
add
xchg
jmp
aad
push
rcrb
filds
nop
mov
imul
jle
aam
xor
jmp
insl
pushf
ds
mov
adc
pop
mov
mov
add
movsb
ja
loopne
lods
or
pop
test
mov
repnz
jge
dec
jne
lock
cmc
or
or
rcr
int3
sub
add
lahf
sbb
jo
jle
lret
adc
xchg
ret
sbb
aaa
pop
mov
out
ja
push
ds
aaa
mov
pop
ljmp
add
xchg
sbb
ss
lods
nop
inc
sbb
xchg
adc
rcrl
stos
repnz
inc
mov
jl
pop
push
mov
ror
out
inc
cmpsl
sub
ds
xor
pushf
and
jmp
dec
shll
sbb
loopne
cmp
pop
rorl
stc
mov
call
ds
jns
into
ljmp
push
push
mov
imul
adc
arpl
adcb
push
push
adc
out
cld
daa
push
fwait
or
xchg
pop
lock
rcrl
jno
adc
ljmp
cmpsb
call
fcoms
pop
push
pop
mov
lfs
jmp
mov
aas
mov
shlb
adc
add
mov
shrd
incl
mov
cmpl
movl
mov
mov
not
jmp
movl
movl
jne
pushl
call
sbb
neg
or
add
or
mov
adcl
xor
shr
mov
xor
or
shl
sub
mov
mov
mov
orl
add
mov
sbb
mov
sub
mov
shrd
or
jmp
je
stos
cmc
sub
inc
inc
stos
enter
adc
push
clc
adc
stos
rcl
cli
lods
fcompl
xlat
sbb
jnp
outsl
or
mov
pop
daa
fcoms
add
push
jecxz
jne
mov
add
adc
out
xchg
sbb
fisttpl
aas
rorb
xchg
daa
ret
sub
mov
insl
insl
jno
addl
ret
or
test
and
fwait
push
pusha
aas
cmp
add
cli
mov
mov
xor
pop
mov
test
sbb
into
add
xchg
jle
mov
adc
dec
mov
pop
add
scas
lods
shlb
insl
mov
push
mov
dec
or
xor
test
sti
lock
add
dec
xlat
pop
mov
fisubrs
cwtl
pop
arpl
cwtl
daa
lea
insb
loope
addl
xor
sbb
pop
add
xor
call
int
xchg
stc
inc
outsl
pop
sbb
enter
out
ds
sub
fldl
mov
adc
push
push
jmp
push
aam
jno
iret
movsl
jns
stc
inc
mov
or
pop
pop
popa
mov
jge
pop
mov
jmp
mov
lret
cwtl
in
ret
cmc
mov
pop
jmp
push
mov
xchg
sbb
mov
xchg
ja
cld
aam
add
inc
fimuls
mov
and
jno
outsb
fisttpll
loop
cld
cmc
mov
stos
rclb
test
cmpsb
mov
fadd
pop
jp
ret
pushf
pushf
xchg
iret
jmp
xchg
pop
jae
xchg
mov
roll
mov
and
in
inc
jae
dec
nop
bound
fists
pushl
jb
cmp
cmpb
fldt
mov
jecxz
xor
iret
jnp
movsl
les
mov
add
adc
pop
mov
and
ljmp
pop
lock
or
xor
fbstp
or
negb
in
int3
fsubs
xor
roll
je
pusha
mov
and
add
inc
or
xchg
into
enter
arpl
pop
mov
leave
jmp
sub
pushf
dec
xchg
daa
movsl
nop
call
je
dec
fbstp
xchg
stos
leave
mov
sub
inc
mov
xchg
pop
dec
ret
call
rcll
cmp
loop
out
push
mov
push
cmpb
notb
push
lods
and
mov
lahf
cmp
pop
jne
jge
push
aas
adc
xchg
sub
dec
push
int
loop
movsl
mov
and
push
idivl
testl
pop
inc
arpl
mov
outsl
ja
pop
push
mov
nop
cmp
sub
jp
mov
sbb
pop
out
aaa
in
dec
pop
jge
xchg
inc
lea
push
cmp
addr16
sbb
inc
fnstsw
push
and
or
mov
cmp
pop
aaa
xchg
dec
jns
pop
xor
in
mov
stos
add
frstor
nop
jge
jb
ss
mov
jno
cmpsb
xchg
cmp
xor
fsin
sub
xchg
inc
jge
stos
xor
and
xchg
add
and
cmp
mov
sbb
gs
mov
xor
rorl
setl
push
jle
mov
ljmp
shl
pop
scas
xor
mov
orl
aam
mul
lock
push
fidivrs
jb
adc
pop
test
sbb
mov
movups
xlat
sub
test
xchg
mov
sar
shld
mov
pop
pop
inc
iret
outsb
sarl
mov
int3
adc
repnz
out
out
xchg
push
adc
stc
push
jle
or
xorb
push
adc
cmp
inc
xor
lea
cmpsl
lea
ror
pop
dec
loopne
scas
mov
inc
sub
mov
adc
testl
ret
or
sbb
cmp
dec
shr
stos
or
xor
orl
out
das
ficoms
repz
add
inc
test
loop
add
or
push
in
jne
cmp
dec
fstpl
popa
fmull
inc
inc
cmp
mov
mov
lahf
fs
mov
adc
cltd
imul
stc
iret
inc
inc
fsubr
inc
pop
mov
mov
xchg
lret
or
pop
mov
fnsave
dec
fs
pop
test
das
inc
xlat
cltd
insb
cld
mov
shlb
movb
lds
cmp
xchg
mov
inc
lods
fidivrs
and
dec
jmp
pop
mov
mov
ret
xor
or
mov
out
ss
nop
cmp
repz
sub
lods
dec
shrb
ja
xchg
cld
in
and
jb
aaa
addr16
mov
or
shlb
scas
add
popa
popa
dec
test
nop
push
popa
ficoml
pop
ret
pop
outsb
xchg
mov
cmp
je
popf
add
daa
cltd
jmp
pop
push
and
adc
sub
pop
xchg
push
mov
jns
cmp
or
aaa
xlat
jp
push
mov
addl
sbb
mov
scas
push
pop
add
cmp
fisubl
xor
jmp
nop
and
push
mov
jo
or
xchg
ret
das
stos
outsl
je
and
sbb
das
jmp
and
sahf
mov
fmul
out
sub
shr
pop
xchg
hlt
dec
mov
cmp
adc
stc
orl
mov
jecxz
dec
out
push
mov
aas
dec
jg
or
adc
jl
in
push
icebp
ret
inc
enter
sub
ljmp
mov
sub
mov
out
and
adc
sbb
jae
mov
les
jns
cmc
inc
jns
ja
add
push
mov
jle
sub
fisubrs
jae
fisttpl
push
push
mov
dec
lret
add
scas
in
jno
outsb
adc
ds
mov
shll
ja
aam
xor
jo
sbb
ret
pop
sbb
dec
ret
inc
cmp
xchg
shr
cmpl
movl
movl
mov
jmp
movl
movl
jb
push
pushl
pushl
push
pushl
push
pushl
call
incl
mov
and
mov
xor
xorl
sbb
movzbl
sbb
mov
mov
sub
sub
mov
cmpl
movl
mov
jmp
mov
mov
jb
pushl
pushl
push
push
call
movzwl
xor
adc
add
inc
mov
mov
adc
mov
xor
notl
shl
cmpl
not
mov
mov
jmp
movl
jl
pushl
call
or
xorl
xor
sbb
adcl
movzbl
sub
xor
sbb
or
cmpl
movzbl
mov
mov
jmp
movl
not
jae
pushl
pushl
push
call
mov
sub
orl
adc
neg
mov
or
mov
mov
or
mov
and
mov
notl
shrd
xorl
shr
mov
cmpl
mov
mov
mov
jmp
movl
mov
jl
pushl
pushl
push
pushl
pushl
call
mov
mov
adc
xor
or
sub
addl
addl
mov
cmpl
movl
not
jmp
movl
jle
push
pushl
call
adc
xorl
or
subl
movl
or
add
add
mov
orl
xor
xorl
xor
or
shl
negl
jmp
test
out
pop
mov
mov
ss
inc
aad
adc
push
clc
adc
mov
or
pusha
mov
or
adc
xor
xchg
movsl
je
or
mov
add
test
ds
pop
mov
jecxz
push
stos
mov
cmc
lock
in
loop
sbb
scas
nop
adc
setbe
adc
ljmp
insl
mov
scas
dec
pop
xor
insl
loope
in
jg
pop
add
jmp
and
orb
lea
fcom
leave
xor
cmpsl
out
xchg
add
je
rorl
sbb
dec
mov
jno
imul
jle
test
out
sub
push
push
cltd
jp
xor
mov
aaa
pop
pusha
sub
add
popa
xor
mov
mov
std
cmp
out
aas
fimuls
data16
sub
lds
push
sbb
stos
test
push
push
movsl
inc
dec
push
fisubrl
sub
shlb
shl
int
test
and
xchg
pushf
shll
ret
adc
push
aad
add
pop
ss
imul
fimuls
push
int3
jnp
je
push
dec
lods
pop
in
sub
sahf
or
ficomps
mov
push
jmp
fdivrs
divb
inc
enter
sti
into
movsb
sbb
xchg
jae
movsb
imul
mov
dec
cmpsb
mov
xchg
xchg
push
movsl
sub
pushf
and
ret
xor
cld
and
xor
scas
jge
test
aam
push
mov
jae
cmp
das
adc
repz
call
mov
repz
jp
or
cltd
dec
xor
jecxz
dec
test
pop
insl
mov
movsb
inc
ss
lds
fs
idivl
in
pop
cli
sub
repnz
fstp
in
and
push
pop
sbb
negl
test
jo
jge
cltd
mov
lret
push
sahf
es
xchg
pop
pop
das
data16
or
push
inc
ds
clc
sub
out
lods
adc
mov
inc
push
push
negb
filds
fnsave
mov
test
insb
or
into
pop
movsb
icebp
and
jmp
push
jns
ja
jecxz
push
rolb
adc
xchg
mov
ljmp
push
loope
cmp
mov
mov
bound
dec
enter
jg
mov
lock
push
xchg
sbb
cli
repz
pop
jmp
test
fs
mov
les
inc
cmp
loopne
xchg
lret
or
rcr
mov
pop
mov
fcmove
pop
pop
sbb
pop
call
xor
inc
and
add
mov
push
fs
in
xchg
fdivr
xchg
jne
add
test
jl
imul
stos
outsb
arpl
dec
add
in
sbb
aaa
dec
jbe
mov
leave
mov
pop
aas
lea
or
mov
pop
movsb
enter
inc
cmp
movsl
lfs
ljmp
incb
dec
out
cmpsb
mov
in
adc
inc
xor
mov
jecxz
add
fstl
je
lods
mov
aaa
lret
sti
push
and
sbb
xchg
movsl
mov
and
sahf
mul
mov
cltd
cltd
mov
test
inc
inc
cmpsb
and
sub
inc
mov
add
mov
xor
pushf
and
rorl
push
push
shl
xor
flds
daa
mov
dec
sub
mov
dec
lods
icebp
or
icebp
cmp
push
out
xor
ret
jnp
data16
arpl
cwtl
push
lds
dec
call
jg
addr16
adc
data16
jb
fistpll
stos
test
in
sbb
sbb
testb
loope
dec
pop
popl
lret
fwait
jns
sub
adc
sbb
shrl
and
mov
cmp
fstpl
popa
cmp
iret
leave
push
subl
stos
pop
mov
loop
imul
cmpsb
ret
sbb
or
sahf
jg
test
jle
icebp
mov
stos
and
cmp
inc
mov
outsb
mov
dec
xchg
inc
shrl
dec
or
call
push
aad
icebp
or
stc
mov
sbb
sahf
push
dec
pop
mov
inc
push
add
mov
out
and
pop
std
push
pop
jl
ftst
mov
mov
btc
or
dec
enter
xchg
and
fisubs
sub
ljmp
cmp
push
inc
ret
jno
mov
mov
jno
stc
sbb
jl
cmp
lock
cld
and
mov
jno
sbb
stc
xchg
push
xor
je
call
pop
cli
add
insb
jns
adc
mov
repnz
adc
rclb
xchg
or
stos
jge
mov
and
movsl
sub
and
mov
and
lods
mov
mov
repz
je
ljmp
lods
outsb
mov
insl
inc
stc
dec
loop
cmp
jle
push
fadds
shlb
cs
push
add
xorb
lods
adc
cmp
push
dec
pop
cmpsl
enter
jbe
cli
aad
or
or
mov
xchg
and
mov
rcll
dec
and
cs
dec
or
dec
cmp
cld
sahf
sub
add
ficomps
pop
sbb
mov
ja,pt
sbb
sbb
ja
sub
xchg
out
pop
add
mov
sbb
inc
sub
mov
mov
pop
incl
cwtl
mov
jmp
out
sbb
sbb
jno
int3
xor
aas
rcrb
lods
adc
dec
push
dec
add
test
stos
pop
fiadds
insl
cmpsl
in
xor
or
ss
std
cmp
dec
mov
and
sub
mov
cwtl
hlt
jne
mov
mov
jl
lret
cltd
xchg
or
mov
mov
mov
repnz
mov
js
inc
lret
ss
sbb
icebp
aad
stc
outsb
jb
cmc
das
loop
sub
outsl
fmuls
inc
movsb
imul
xor
insl
clc
mov
ret
xor
or
sub
mov
subl
shrd
shr
mov
cmpl
mov
movzbl
jmp
movl
jb
push
push
call
mov
xor
sbb
sbb
andl
sbb
sbb
mov
mov
cmpl
mov
mov
notl
jmp
movl
mov
jne
pushl
push
push
push
call
add
mov
or
addl
xor
mov
add
mov
adc
adc
xor
mov
andl
xor
adcl
or
shl
or
imul
mov
mov
addl
shrd
xorl
mov
incl
mov
andl
xor
shr
incl
mov
cmpl
movzbl
movl
mov
mov
jmp
movl
jg
pushl
push
push
call
adc
mov
or
mov
dec
andl
adc
adc
sbbl
mov
xor
or
subl
shl
sub
jmp
jl
mov
xor
push
push
adc
push
clc
adc
push
lcall
fs
pushf
pop
andl
cmp
dec
je
mov
ja
jns
adc
andl
pop
push
jecxz
mov
fbld
dec
xlat
ret
cmp
fnstcw
jns
add
ljmp
test
gs
ds
jl
push
inc
or
jnp
movsl
pop
sbb
popf
mov
xor
xchg
into
push
daa
sti
aas
mov
gs
in
imul
adc
mov
pop
or
out
out
cmp
shl
lcall
mov
sub
push
lds
sbb
in
cmp
dec
sahf
push
imul
inc
xchg
dec
mov
pop
xor
xchg
push
push
adc
push
sbb
mov
icebp
rorb
fcmovnbe
call
sub
nop
xor
fbstp
ja
jae
les
mov
dec
cmp
jo
pop
jecxz
ret
aad
in
adc
popa
mov
pop
stc
inc
insl
clc
movsb
cmp
xor
and
out
push
movsb
addr16
pop
mov
pop
jg
push
pushf
imul
cmpsb
dec
jnp
add
lock
cmp
addb
sar
ss
stos
push
mov
scas
or
dec
xor
push
shll
int3
gs
rorb
xchg
xchg
enter
test
mov
stos
lcall
inc
cwtl
sub
pop
and
jnp
mov
push
mov
mov
aad
inc
adcb
jecxz
iret
frstor
inc
and
ja
lahf
rolb
mov
fs
jge
out
xlat
pusha
int
xor
les
stos
lcall
mov
jmp
mov
dec
aam
add
push
pop
xlat
insl
or
rorl
xchg
shlb
mov
dec
fcmovnbe
cmp
fbld
nop
ss
divb
outsl
arpl
pop
dec
fisubl
and
xorl
adc
mov
cs
ljmp
jnp
call
and
pop
and
iret
in
imul
xchg
cli
mov
rcrl
dec
sub
or
scas
mov
pop
arpl
sub
nop
cmpsl
mov
rcll
in
in
add
push
add
inc
ljmp
mov
push
adc
mov
mov
lcall
dec
ljmp
cli
dec
loopne
sub
xor
pop
out
dec
or
into
inc
cwtl
les
in
roll
sub
lods
xchg
cmp
sub
mov
adc
pushf
xor
fwait
mov
out
adc
mov
or
cs
bnd
mov
fcmovnbe
js
and
loopew
scas
not
jnp
cmp
ficoms
andl
and
pop
in
xchg
and
mov
addl
dec
leave
das
xchg
sti
scas
fsubs
in
lret
add
fstl
xor
fiadds
out
jns
xchg
outsl
xchg
repnz
ja
in
pop
fnstsw
dec
push
jle
hlt
sub
ljmp
mov
test
mov
jnp
fldl
cmp
pop
aad
outsl
insb
mov
mov
aad
pop
xor
shrl
xchg
call
aam
push
push
mov
jp
lods
pop
sub
ljmp
jns
aaa
roll
out
std
in
mov
jne
test
inc
xor
add
push
cmpl
pop
mov
mov
inc
pop
push
xchg
mov
xchg
push
adc
mov
sbb
mov
inc
inc
popf
stos
and
and
fs
xor
xchg
loope
jmp
ret
mov
mov
push
add
decb
movsl
mov
jo
inc
loopne
dec
and
xchg
cmp
xchg
je
jno
jo
lret
adc
jecxz
fsubrl
jl
add
lods
insl
movsl
dec
pop
sarl
les
jecxz
inc
xor
out
test
iret
sub
and
bound
xor
stos
lock
enter
lcall
into
clc
loop
cmp
inc
es
push
es
adc
mov
pop
ljmp
cmpsb
mov
fimull
ret
sar
popl
leave
sti
sti
push
jg
movb
enter
xor
out
jle
insb
mul
decl
dec
mov
insl
fildll
jle
push
lret
stos
mov
fisttpl
add
adcl
pop
sbbl
inc
add
into
arpl
push
pushf
insl
push
cwtl
mov
jb
addr16
adc
dec
and
mov
ljmp
xchg
and
pop
push
fcompl
fstpl
fidivrl
cmp
inc
mov
pop
jnp
inc
pop
je
not
lods
ds
inc
jecxz
and
leave
or
rcrl
sbb
mov
fnstcw
jo
notb
xchg
or
sub
loopne
ljmp
fidivrl
add
sub
pop
fcmovnbe
sub
xchg
and
lock
orb
fisttpl
stos
and
inc
pop
pop
or
shll
or
jmp
lret
ret
out
out
cltd
adc
jbe
mov
int3
xor
mov
push
mov
mov
push
test
push
loope
jmp
faddl
js
inc
test
cmp
and
in
jns
fcoml
aaa
sbb
stos
std
and
add
int3
ficoms
mov
rclb
pop
push
int
pop
sbb
stos
mov
aas
insb
mov
mov
inc
aad
pop
cmp
sar
sub
outsl
mov
in
mov
inc
mov
rcl
sti
int3
push
xchg
dec
jmp
fstl
mov
push
loope
in
repnz
push
xchg
push
mov
sti
dec
mov
mov
aad
xchg
cmp
test
mov
icebp
push
loopne
decl
lods
cmp
in
pop
repnz
mov
mov
loope
imul
cltd
imul
inc
shrb
loop
add
dec
inc
and
aad
outsl
cmp
and
add
lahf
add
cmp
mov
movl
jg
or
mov
orl
mov
shrd
xorl
mov
mov
subl
xor
shl
addl
xor
subl
or
addl
shr
mov
mov
sbb
mov
and
mov
shrd
shr
mov
and
mov
mov
xor
subl
xor
andl
jmp
pop
leave
sti
subl
xlat
or
cmp
push
mov
push
clc
adc
push
push
jns
mov
jecxz
cmp
cmc
sbb
mov
cli
aad
daa
xlat
jo
mov
inc
icebp
mov
mov
cmp
xor
and
fcomps
inc
flds
imul
jmp
jns
int3
popa
add
pop
xchg
pop
bnd
mov
ljmp
enter
stos
sub
adc
xor
ret
xchg
fbstp
cmp
add
push
dec
out
test
nop
and
cld
push
mov
mov
out
pop
int
dec
add
push
scas
loopne
pop
jb
adc
inc
mov
outsl
jmp
dec
mov
aam
cmp
add
mov
push
les
inc
cltd
adc
push
mov
mov
jne
xchg
push
insl
mov
pop
test
gs
mov
lcall
jns
xchg
or
imull
mov
xor
or
pop
in
xchg
unpcklps
sub
popa
sub
xchg
pop
in
pop
mov
dec
add
popf
mov
push
leave
test
jne
xorb
mov
imul
xchg
into
movsl
inc
sub
loope
jl
mov
hlt
jns
in
mov
or
pushf
add
int
mov
fisttpll
pop
push
inc
je
cmp
pop
adc
insb
icebp
stos
push
hlt
fwait
scas
mov
and
cltd
dec
xor
pop
out
push
push
and
icebp
iret
or
leave
or
push
hlt
stos
push
fnstcw
mov
mov
jb
aaa
mov
test
pusha
or
ja
dec
ss
aam
pop
adc
push
push
mov
inc
add
cmp
icebp
fsubl
pushf
dec
repz
and
cld
jg
incl
leave
clc
repz
movsb
stos
outsb
inc
or
fs
addr16
sbb
ljmp
shlb
sbb
push
xchg
add
xor
adc
into
xor
pop
sbb
jnp
xchg
imul
not
jae
or
push
adc
icebp
xor
es
icebp
es
out
push
push
adc
imul
push
add
lret
std
add
lds
mov
adc
or
xor
bound
ftst
pop
aam
loope
jecxz
inc
mov
xor
insl
inc
je
and
push
lahf
iret
loop
add
loopne
loop
cmp
xchg
pop
js
push
adc
fidivs
jo
rclb
das
popf
dec
xor
icebp
dec
xchg
repz
mov
ja
mov
push
popl
mov
cld
xor
inc
push
roll
dec
iret
pop
adc
jb
arpl
xlat
fcmovne
loopne
cmp
adc
scas
rcrl
imull
jne
or
mov
jl
loop
out
add
jp
movsb
sbb
mov
enter
fwait
loope
mov
ret
dec
pop
push
mov
ds
push
sbb
loope
stc
add
add
arpl
cmp
xchg
xor
icebp
lcall
icebp
fwait
shlb
ss
enter
cmpsl
lea
mov
sub
mov
dec
cmc
stos
js
jmp
push
push
inc
lret
xorl
push
fcmovnbe
cmp
xor
int3
xor
mov
inc
ret
loopne
add
rcl
mov
loop
pop
jnp
xor
jle
add
movsl
stos
shr
xchg
mov
mov
mov
in
pop
shlb
xor
cmp
das
add
cmp
dec
or
cltd
enter
stos
and
inc
pop
aam
mov
or
stos
mov
std
adc
in
jge
pop
mov
jecxz
loop
pusha
dec
in
pop
imul
adc
and
fsubrs
adc
mov
xor
jle
add
loopne
daa
and
push
test
sti
add
loop
test
cmp
imul
mov
insl
cmp
es
lds
pmaxsw
and
sahf
insb
ret
dec
xchg
out
cwtl
mov
sbb
and
pop
mov
xchg
or
dec
sbb
aas
out
mov
cmpsl
in
and
mov
cmp
loope
push
pop
repz
js
jne
cld
jg
in
mov
pop
add
shl
sbb
ss
xor
cmc
dec
sub
call
fs
cmp
push
inc
movq
or
or
loopne
add
mov
sub
sbb
pop
lods
push
pop
pop
mov
imul
je
dec
jnp
incl
pushf
jl
andl
sub
stos
push
cmp
outsl
out
adc
int
out
inc
or
mov
das
addb
rorb
or
or
inc
enter
imul
lods
dec
mov
in
dec
sbb
inc
imul
mov
mov
pop
int
and
loopne
cltd
cld
mov
je
fs
pop
dec
je
lret
sar
sti
sub
mov
xlat
rolb
fcom
cmpsb
adc
cmp
repz
aam
mov
enter
mov
jbe
js
shlb
mul
nop
jns
xchg
lret
fadds
cmpsb
in
push
aam
mov
fcoml
mov
ja
mov
daa
xchg
push
lahf
lds
add
lods
or
fildl
xlat
mov
push
movsb
mov
aam
push
cmp
hlt
and
xchg
loope
daa
push
cli
jnp
jl
xor
mov
ret
jne
popf
neg
fldenv
pop
test
dec
std
sub
fdivs
jge
xlat
loopne
fsub
cmpl
mov
cli
outsl
scas
cli
aad
out
sarb
mov
lds
cli
push
sbb
aas
sti
xchg
pop
daa
xchg
adc
leave
xor
fidivrl
outsl
cmp
push
imul
ljmp
jo
daa
inc
mov
cmp
aam
mov
iret
stos
fisubs
push
jge
andl
lret
sub
enter
inc
roll
mov
push
in
loope
andl
imul
jmp
mov
or
push
and
ljmp
pop
xchg
jge
adc
clc
adc
push
dec
xchg
sub
cwtl
popf
outsb
mov
mov
movsl
bnd
inc
push
add
repz
test
cmp
ret
dec
push
push
inc
in
and
ss
imul
bound
xchg
lret
enter
je
mov
les
arpl
push
jmp
mov
jg
inc
cmp
pop
jg
adc
or
test
jmp
push
and
mov
rclb
mov
adc
pop
sub
aaa
mov
ja
inc
lahf
movsl
pushf
loope
jbe
xor
sub
shlb
push
movsl
int
push
fcoms
ljmp
lods
cmp
jbe
outsl
aam
or
adc
jbe
inc
or
dec
je
jmpw
jecxz
inc
shrl
leave
popa
fldt
jp
adc
andb
test
pop
push
add
xor
dec
inc
push
jne
leave
and
push
roll
and
shrl
push
mov
mov
cwtl
testb
lahf
repz
cld
adc
inc
xchg
mov
aam
cmp
outsb
iret
dec
adc
inc
jg
bound
lea
mov
jae
rolb
nop
mov
inc
clc
mov
in
imul
mov
xor
and
pusha
sar
push
call
fsubrp
lret
cmc
push
sbb
mov
fists
xor
gs
ds
notl
fs
sbbl
jae
pushf
jle
or
fisttps
xor
rol
cmp
pop
stos
pop
fldenv
js
sub
sub
or
mov
mov
pop
xchg
cmp
aas
add
jmp
jns
xor
subl
add
push
inc
mov
dec
lods
bound
xchg
test
dec
fmuls
stos
mov
push
cmpsl
sbb
dec
mov
push
js
in
mov
add
mov
mov
std
inc
hlt
in
and
or
mov
out
add
adc
mov
out
ds
hlt
inc
testb
adc
repz
dec
adcl
cli
sub
stos
lds
adc
push
sub
loope
mov
and
cwtl
jae
dec
add
iret
jbe
pushf
fcompl
js
test
ljmp
xchg
mov
push
xchg
add
mov
lcall
inc
dec
loope,pn
mov
mov
xor
rolb
pop
imul
inc
pop
adc
add
ljmp
sub
xor
cld
gs
lahf
hlt
mov
divb
les
negl
mov
mov
fs
lods
dec
es
xchg
push
mov
or
js
cli
xor
sub
loope
out
adc
cltd
xchg
test
sub
sub
lods
jmp
in
lahf
daa
leave
xor
ret
fisubrs
mov
stos
mov
fwait
push
sub
dec
lods
lret
push
push
rcll
jg
mov
scas
xor
ljmp
inc
mov
aad
and
mov
xchg
test
lret
xchg
fsubrs
daa
add
shll
pop
mov
mov
jp
lahf
mov
fs
addr16
jmp
mov
out
int
adc
hlt
fdivrs
xchg
and
int
pushl
popa
cmc
sub
sahf
mov
pop
shll
and
cld
cmpb
fadds
or
or
outsb
mov
jmp
nop
mov
cmpsl
push
push
xchg
dec
insb
imul
inc
addb
fwait
int
pop
mov
int
xchg
mov
push
add
aam
pop
jae
mov
pop
sbb
cld
mov
sar
std
stos
enter
das
adc
test
ljmp
mov
sbb
inc
jnp
mov
jge
pop
or
popf
pop
pop
mov
stos
pop
sahf
cwtl
in
shr
push
adc
in
inc
cmp
push
mov
cld
xchg
in
mov
inc
pushl
sub
lds
ficoms
imulb
cmp
add
leave
test
ds
cmp
jno
fdivrp
aaa
dec
cmp
and
testb
mov
daa
or
bound
or
mov
mov
dec
and
ljmp
das
mov
fisubrs
outsl
enter
mov
mull
popa
adc
add
sbb
popa
dec
sbb
add
or
mov
push
push
movsb
daa
cmpsb
aad
pop
cmp
or
adc
sbb
dec
push
sbb
mov
fdivl
fcomps
sbb
mov
dec
mov
imul
fwait
mov
pop
cmpsl
hlt
sbb
add
sub
dec
ret
mov
lods
push
push
cmpb
add
sbb
movsb
iret
in
jp
mov
push
mov
push
push
sub
cld
push
dec
sub
xor
jmp
inc
push
xchg
es
jmp
ds
lds
popa
dec
lods
lock
sub
inc
ja
andb
dec
mov
cmp
enter
hlt
out
push
gs
imul
filds
lea
out
popa
sub
scas
stos
inc
scas
mov
jae
push
sti
cmp
or
pop
push
cltd
xchg
arpl
movsl
jg
cmp
mov
lods
mov
pop
mov
cmc
sub
pop
ljmp
pop
pop
lahf
add
scas
ja
outsb
mov
push
sub
dec
in
sti
or
or
das
inc
push
cltd
adc
xor
inc
mov
pop
xchg
sbb
mov
mov
or
xor
inc
mov
aad
mov
sar
jge
test
ljmp
push
cmp
jmp
jg
pop
mov
cmp
mov
call
jle
cmpsb
mov
mov
push
add
mov
xorl
mov
orl
shrd
mov
orl
jmp
or
dec
addr16
adc
push
shlb
clc
adc
repz
push
jp
sub
pop
rorl
insb
jno
and
aad
unpckhps
dec
adc
clts
xor
mov
xchg
mov
mov
xorl
sub
lods
mov
jl
sarb
lcall
int
rcrb
setb
cli
dec
mov
and
sbb
popf
cwtl
cwtl
sbb
test
lds
imul
test
jno
cmp
mov
cmp
push
sbb
mov
movzwl
xchg
in
push
pop
or
cmp
sub
mov
loopne
jmp
arpl
imul
lret
jo
sbb
in
add
adc
stos
jecxz
pop
sub
dec
adc
mov
and
jae
ficoml
push
pusha
push
or
xchg
popa
xchg
mov
sbb
repnz
addr16
dec
icebp
dec
xor
jmp
dec
pop
add
add
adc
out
mov
pop
sbb
mov
or
push
cwtl
adc
sub
ficomps
sbb
inc
aam
or
or
push
fldt
xor
push
int
jl
inc
xchg
or
xchg
rcll
aad
xlat
push
ja
aam
or
test
cwtl
sti
xor
xor
push
push
sub
and
inc
lahf
out
mov
nopl
fwait
ljmp
fcompl
out
adc
or
cmpl
ret
popf
and
adc
pop
jae
add
dec
sbb
mov
dec
sbb
sbb
test
rcl
mov
pushf
lret
cwtl
cmp
jne
sub
in
push
scas
js
mov
int
xchg
add
stc
sub
inc
adc
xor
loop
and
lahf
dec
cmp
mov
stos
into
mov
int3
ret
shll
mov
lock
into
dec
shl
mov
and
jns
insb
inc
inc
push
lods
push
ljmp
pop
repz
dec
push
push
cmp
cmpsl
cld
out
aaa
mov
pop
jb
push
mov
xor
and
movsb
scas
jae
xor
dec
xor
lds
fnstcw
fiaddl
or
jp
adc
sub
daa
fisttpll
jnp
test
xchg
jle
push
es
lahf
fdivs
dec
jb
cmp
mov
jo
mov
out
ror
xchg
sbb
push
cld
xchg
cmpsl
subl
xor
xchg
dec
call
int
pmulhuw
jl
scas
jbe
jno
cmp
mov
or
andl
push
aas
and
and
xchg
add
clc
cwtl
push
jmp
inc
fwait
fs
push
xchg
and
mov
add
adc
cmp
test
shl
adc
test
sbb
rcl
dec
jl
das
imul
in
inc
pop
dec
cs
lea
and
lods
cmp
mov
dec
jbe
mov
cmp
les
sub
sbb
mov
xor
xor
cmp
jno
push
fwait
pop
inc
scas
fbld
mov
shlb
loop
movsb
out
cmpsl
xchg
mov
inc
cld
jmp
iret
je
imul
mov
in
jo
jle
mov
aam
mov
mov
mov
mov
hlt
lods
xor
push
mul
mov
subl
aad
inc
adc
loop
push
out
je
mov
push
sti
pop
mov
cmpsb
in
ljmp
mov
lock
add
aad
jl
mov
push
jl
push
pop
xor
jbe
xchg
imul
aad
xor
test
push
loop
les
mov
js
sub
and
outsl
jp
icebp
sub
rorb
and
pop
inc
sub
mov
into
pop
std
jl
in
mov
xchg
shrb
xor
stc
adc
adc
jl
out
aaa
cli
sub
mov
pop
adc
cmp
imul
sub
xor
xchg
pushf
incl
shld
ret
or
repnz
xchg
insb
in
push
icebp
cmp
sti
dec
outsl
mov
pop
pop
push
push
out
add
icebp
inc
jmp
pop
lahf
andb
lahf
push
scas
xchg
push
mov
ds
pop
stos
cli
xor
adcl
push
icebp
pushf
lods
in
or
test
sbb
call
jl
das
cmp
insb
cmp
xorb
les
pushf
loop
fstps
cltd
out
pcmpeqb
adc
adc
pushf
call
and
arpl
fdivs
fdivrs
les
js
adcl
arpl
xchg
push
push
test
add
dec
iret
shlb
inc
test
dec
or
mov
shlb
lods
push
add
loope
sbb
pop
outsl
stos
inc
jae
push
push
xchg
test
rolb
xlat
pusha
mov
dec
fwait
jmp
cmp
xlat
jg
ret
loop
or
roll
sahf
sub
jnp
cld
mov
icebp
and
jecxz
loopne
mov
mov
repz
and
dec
aam
arpl
sbb
mov
les
mov
xor
icebp
test
and
scas
nop
movsl
or
cmp
movsb
scas
fbld
dec
pusha
and
push
in
lret
stos
push
jge
sbb
inc
xchg
xor
or
sbb
cwtl
out
ret
stc
loope
fistl
out
repz
mov
add
test
pop
or
dec
jo
adc
dec
lret
pop
sarl
sbb
inc
or
test
inc
into
sub
data16
or
dec
push
out
xor
dec
aaa
fmull
jnp
adc
sub
scas
pop
mov
rorb
jo
in
jg
stc
xchg
mov
mov
rcll
stos
xlat
lcall
mov
cltd
dec
mov
cmpsl
push
inc
add
mov
xor
push
inc
cltd
loopne
mov
addl
xor
orl
shl
xor
orl
or
shr
xorl
mov
sub
mov
mov
mov
shrd
shr
jmp
ljmp
sub
xchg
mov
adc
push
clc
adc
jmp
cltd
das
xor
sbb
xorb
in
and
mov
mov
xchg
fs
mov
xchg
imul
loop
rcr
lods
pop
cmc
and
adc
scas
clc
cwtl
inc
jnp
jle
sbb
adcl
call
cltd
mov
int3
push
loop
lahf
stos
ret
out
mov
int
stc
lcall
push
adc
outsl
mov
push
adc
sub
cmp
xchg
fs
cmp
aam
imul
push
in
mov
sub
scas
ret
inc
sub
andb
loopne
lock
mov
sbb
jecxz
mov
cmp
xor
push
xor
inc
mov
add
out
xlat
repnz
push
ret
lcall
adcl
clc
mov
jg
xchg
int
pop
mov
jno
stos
inc
gs
test
jg
add
cmp
out
add
inc
jp
xchg
mov
mov
jge
fwait
lret
std
or
xchg
or
xor
leave
push
jno
mov
ret
fldcw
or
aas
mov
lret
adc
outsl
in
inc
leave
and
push
xor
pop
push
cld
push
cmp
push
mov
mov
jb
pop
cwtl
pop
lods
lahf
ss
in
xor
icebp
pop
hlt
lret
scas
fidivs
xor
push
sub
jne
adc
adc
or
loopne
and
inc
cmp
fmul
arpl
push
stc
adc
ret
testb
adc
mov
cmp
loope
ret
pushf
ds
xchg
jge
and
sbb
mov
xor
cmp
insb
mov
or
fadds
push
mov
cld
aad
mov
and
lds
and
mov
arpl
cltd
outsl
jp
mov
mov
shll
cmpsl
xor
xchg
or
lods
movsb
sti
hlt
hlt
fnop
fwait
mov
stos
call
int
cmp
shll
push
xchg
xor
rcrb
enter
mov
mov
xchg
test
psubusb
xor
jp
xchg
jns
out
adc
add
lahf
sbb
lods
ljmp
je
in
adc
jmp
insb
scas
int3
pushf
rcl
jbe
imul
xor
fldcw
aaa
adc
xchg
shll
rorl
pop
pop
stos
xor
imul
into
add
jmp
mov
xchg
xor
jg
ret
or
dec
mov
es
cs
sbb
sub
mov
test
std
push
loopne
pushf
inc
add
jmp
mov
dec
ljmp
fwait
cmpsl
and
notb
sub
roll
ja
out
call
pop
inc
imul
jb
and
adcb
data16
aas
sbb
aaa
inc
jle
push
pop
mov
sbb
dec
mov
mov
mov
mov
pop
scas
in
jmp
inc
mov
ja
inc
sub
lret
jg
nop
aaa
stos
jb
sub
cs
xor
stos
fistl
jg
loop
mov
int
sarb
shll
jmp
cli
pop
dec
pop
mov
add
das
sahf
and
data16
out
ja
and
or
mov
lods
sbb
cltd
bound
out
mov
outsl
jae
jmp
rcl
repnz
lods
dec
and
mov
mov
popa
cmp
sbb
loop
pop
bound
hlt
lret
aam
movsb
and
js
repnz
mov
dec
jo
jno
je
stos
pop
push
cld
enter
je
inc
jle
int
inc
insb
les
jle
xchg
dec
dec
push
mov
mov
lock
mov
and
push
push
testl
insl
sbb
gs
out
mov
bound
xchg
aam
jne
out
decl
divb
mov
cwtl
mov
enter
xor
clc
repnz
dec
test
or
add
xor
cltd
lea
and
push
add
xchg
inc
xchg
jmp
leave
sbb
idivb
ss
imul
sbb
mov
test
outsl
push
xchg
fwait
push
cmpsb
mov
incb
sahf
jecxz
push
scas
and
fs
adc
inc
mov
xor
jmp
jmp
dec
push
jno
adc
sub
adc
lods
outsl
pop
push
add
inc
pop
adc
scas
xor
lods
movsb
inc
push
orl
xor
push
out
pop
add
out
scas
or
cmp
xchg
adc
ja
inc
test
jo
mov
mov
int
cmpl
lea
sbb
mov
or
push
xchg
xchg
pop
sub
ret
pop
int3
and
jno
imul
jae
pop
push
mov
call
pop
leave
xor
pavgw
ret
sti
jmp
or
call
adc
bound
lock
push
pop
mov
das
mov
and
cmpsl
push
or
outsl
push
lcall
xlat
mov
push
into
cmp
push
xchg
sarl
inc
pop
stc
stos
pop
sar
stc
push
ss
ret
dec
xchg
dec
push
mov
imul
cltd
je
mov
mov
pop
loope
mov
pushf
push
or
inc
jge
in
outsw
push
mov
mov
mov
call
adc
mov
pop
sbb
sbb
dec
jle
add
lret
mov
xchg
push
scas
pop
bound
sbb
add
movsl
jle
movsb
push
aaa
and
imul
ret
enter
repnz
bound
xor
cmp
jge
imul
sbb
lock
cmpsl
pop
dec
fbld
arpl
mov
fs
pusha
sbb
add
repnz
movsl
fwait
xchg
sahf
cmpl
inc
xor
xor
ror
clc
insb
nop
repz
hlt
xchg
xchg
cli
sbb
mov
imul
push
stos
loopne
mov
or
sub
cmc
rcl
clc
add
mov
icebp
lods
dec
and
lock
jb
mov
dec
in
adc
mov
xor
add
sub
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
jmp
out
add
and
xlat
es
test
inc
add
adc
push
clc
adc
mov
cmp
gs
push
imul
mov
lret
shll
sbb
nop
cwtl
mov
mov
push
dec
loope
out
sub
scas
push
scas
inc
mov
in
aas
add
in
sub
sbb
shrl
push
movsb
fisubrs
movsl
aam
inc
int
push
ficompl
xchg
divb
pop
scas
pop
dec
xor
into
lods
dec
cmpsl
sub
or
dec
or
sub
mov
sub
sub
push
sti
xchg
cmc
test
lahf
adc
push
insb
jge
cmc
push
fdiv
das
jg
push
add
test
xchg
test
push
or
loope
test
sbb
mov
jae
push
mov
mov
pushf
ds
cmpsb
enter
in
loope
roll
imulb
inc
xlat
add
rolb
loopne,pt
cmp
neg
sbb
or
test
repnz
pushf
mov
mov
fs
sbb
inc
xchg
mov
xor
inc
jge
lahf
push
mov
adc
add
fdivr
cs
mov
lock
scas
arpl
push
popf
jb
ret
cwtl
cli
dec
xchg
dec
mov
jne
scas
adc
lods
sub
dec
sbb
pop
cmp
pop
dec
dec
insb
jle
mov
cmc
insb
pop
xor
inc
sarl
daa
in
rorb
push
xor
out
sub
lods
dec
fmuls
and
jg
pop
mov
not
popf
gs
pop
sbb
push
rcrb
and
xor
and
and
aam
ffreep
adc
dec
cmp
or
push
out
out
cmp
cli
ljmp
or
push
xchg
mov
test
test
adc
xor
sub
adc
es
imul
and
fidivl
dec
inc
jb
mov
jbe
outsl
cwtl
dec
cmp
pop
sarl
test
adc
pop
pop
out
adc
das
sub
xchg
lock
xchg
mov
push
cwtl
out
push
xor
es
lea
les
adc
inc
mov
decl
icebp
inc
fcompl
pop
jl
or
imulb
cli
push
jb
xorb
repz
mov
push
jns
jg
push
sub
inc
movsb
loop
nop
mov
xchg
adc
cli
inc
inc
add
das
scas
in
bound
mov
dec
adc
cmpsb
mov
pushf
lret
popa
test
adc
and
in
sub
xorb
xor
pushf
fcomip
int3
mov
shrb
push
neg
xchg
or
cmpsl
mov
fs
add
mov
inc
into
push
fucom
aam
lods
xchg
movl
movsb
lock
jge
ret
dec
cmpsl
call
repnz
lods
sbb
mov
xor
inc
andb
jecxz
sub
insl
idivb
enter
mov
cmp
cwtl
icebp
pop
jecxz
cmpsl
push
dec
xchg
dec
inc
dec
js
mov
nop
pop
xchg
addb
rcl
in
adc
pop
aaa
stos
test
pop
test
out
push
mov
shll
enter
mov
or
scas
push
repz
lret
jle
scas
xchg
addr16
es
cmpsb
daa
test
add
mov
mov
stc
sbb
or
fildll
mov
mov
lods
das
mov
ret
jge
cld
mov
mov
cli
adc
insl
cmpl
mov
imul
pop
cwtl
inc
loope
outsl
das
mov
adc
lret
iret
subl
mov
lods
xchg
xor
push
test
sbb
into
scas
and
cs
es
jmp
jne
adc
pop
xchg
jl
arpl
int3
cmpsb
mov
in
adc
sub
andb
jbe
cmpsl
ljmp
lods
rcrb
sti
xchg
jg
shlb
outsl
push
xor
sub
push
sub
clc
pop
mov
mov
popf
mov
adc
inc
xchg
scas
pushf
ja
out
cmp
lahf
adc
sahf
aas
cmp
mov
fdivrl
iret
add
adc
pop
jnp
push
sbb
xchg
sbb
push
call
sub
cmp
pop
add
add
cmp
or
pop
imul
out
push
cmc
and
or
dec
pop
pop
movsl
adc
jae
scas
jns
dec
sub
lahf
xor
push
adc
adc
xchg
shl
std
jmp
loop
in
stc
cmp
xor
sbb
test
mov
xchg
dec
push
and
outsl
repz
jge
out
mov
adc
push
push
bswap
fcmovb
inc
daa
ds
xor
mov
or
icebp
add
dec
push
divl
clc
mov
push
fmuls
ror
cmp
lock
or
icebp
jmp
jge
faddl
faddl
addl
mov
and
and
or
mov
stos
in
outsb
out
nop
push
inc
mov
stc
pop
inc
pop
pop
push
icebp
fdivr
xchg
mov
sub
cmp
xchg
int3
or
outsb
push
mov
mov
sti
lret
inc
dec
fsts
sub
push
mov
iret
repz
bound
mov
out
mov
mov
inc
jne
add
subps
cmc
ja
cmpsl
and
pop
adc
xchg
mov
inc
out
test
xor
js
and
testl
adc
arpl
xchg
repz
movsl
stos
rcr
mov
push
aaa
jbe
lret
push
lds
ss
cmp
or
pop
in
je
and
imul
pop
mov
incb
and
cmp
inc
cmpsl
mov
insb
insb
clc
in
ja
dec
fcomi
loopne
sbb
xor
jns
adc
pop
jle
xchg
and
andl
les
push
sbb
adc
pop
stos
incl
mov
jle
jmp
shll
vpshufd
mov
sti
daa
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
jmp
inc
mov
mov
int3
mov
adc
clc
adc
jl
lea
add
xchg
gs
mov
push
ja
std
sbb
iret
lods
das
aam
mov
aam
pop
ds
xor
mov
in
sub
push
das
xchg
jnp
pop
pop
push
adc
xor
pop
mov
call
and
aad
push
sbb
push
divl
adc
cmpsl
jo
mov
or
push
mov
mov
add
insb
cld
test
xchg
pusha
sub
or
mov
pop
and
lods
xchg
fadds
call
mov
lret
jno
rcl
loop
push
mov
int3
dec
push
stos
insl
jno
mov
jl
mov
mov
imul
pop
popf
cmp
sbb
or
dec
mov
xor
mov
pop
test
rorb
add
mov
ret
sbb
lea
mov
aam
mov
ja
or
sbb
mov
into
xchg
adc
fmull
insb
lods
mov
mull
add
push
inc
fcompl
cmp
mov
push
movsl
dec
shlb
lahf
pop
sub
test
pop
ljmp
jnp
mov
xor
sub
clc
sar
xlat
enter
ficompl
dec
add
loop
mov
andl
mov
jecxz
arpl
sub
xchg
pop
cmp
ret
dec
mov
push
add
loopne
adc
into
inc
sub
leave
mov
inc
sbb
inc
iret
add
out
sub
inc
loopne
add
cmp
xor
int
cmp
fwait
inc
outsl
mov
pop
sub
insb
sub
pop
mov
out
daa
add
adc
and
les
ss
xchg
sti
ret
cwtl
pop
cmp
mov
push
lods
imul
jmp
add
in
popf
shl
fneni(8087
addr16
push
mov
mov
iret
inc
cmc
sahf
dec
lods
mov
dec
sbb
mov
test
mov
cltd
and
adc
cmp
push
sti
fisubs
outsl
pop
inc
adc
add
fisubl
mov
xlat
out
ret
jg
sahf
bound
lock
xchg
cmp
push
and
sub
dec
add
repnz
and
and
stos
cmp
mov
sbb
jo
fdecstp
sub
shlb
inc
xor
into
push
lret
repnz
sub
xlat
or
lods
xchg
cld
dec
cwtl
adc
dec
pop
push
mov
cwtl
scas
out
ljmp
add
mov
dec
jne
test
das
ret
aas
cmpsl
and
icebp
outsl
xlat
das
hlt
sti
push
lret
mov
das
insl
jnp
rcr
push
repnz
mov
nop
fwait
sub
andb
sbb
mov
jbe
add
jno
adc
mov
push
gs
push
and
iret
es
jmp
sub
lods
cltd
jns
push
mov
cmp
jbe
call
in
fisttpll
outsb
int
and
mov
hlt
mov
nop
scas
inc
xchg
pop
clc
aam
dec
dec
inc
lahf
sarb
outsl
or
cmp
rcl
out
in
xchg
pop
sub
inc
std
mov
aam
popf
pop
mov
dec
sarl
xor
mov
xchg
adc
call
pop
adc
adc
add
push
pop
les
add
and
mov
sbb
fwait
dec
leave
jns
push
jns
mov
cli
mov
push
pop
jno
stc
js
das
xchg
xor
sub
pop
dec
ss
insl
inc
fldt
loope
sti
test
cs
mov
nop
adc
jnp
icebp
sbb
xor
add
jge
leave
into
and
outsb
je
mov
jl
fidivrs
lds
push
pop
adc
push
xchg
filds
and
xchg
icebp
mov
mov
popa
jbe
lret
sub
in
call
arpl
add
sbb
push
lds
jg
mov
out
js
aam
sub
loopne
mov
or
mov
cmp
xor
add
jb
dec
inc
mov
into
mov
leave
inc
adc
sbb
lret
jnp
pop
and
sub
push
dec
sets
clc
mov
js
cwtl
push
popf
pop
inc
jne
in
mov
xchg
daa
sub
mov
rcrl
cmp
push
pop
jb
popa
mov
mov
stos
inc
cmp
jbe
out
inc
cmp
das
popa
mov
lods
fcoml
stos
sub
push
mov
in
mov
aas
outsl
mov
push
das
push
mov
xor
pop
or
push
or
cmc
xor
mov
insb
insl
lods
add
or
lcall
and
nop
dec
xchg
jo
les
inc
add
lea
faddl
loop
xorb
lods
jle
pop
mov
sub
mov
and
dec
insb
lret
clts
mov
jae
mov
or
push
movsl
mov
adc
shll
lds
cmp
xchg
les
and
pop
cli
enter
xchg
int
nop
dec
mov
test
or
sub
shlb
in
push
out
in
cmp
scas
xor
out
mov
inc
fmul
cmp
dec
es
sbb
mov
mov
push
pop
jb
into
lea
mov
inc
ss
push
jmp
ret
data16
pop
sbb
pop
pop
movsb
test
mov
mov
xchg
push
cmpsb
imul
push
push
cmp
xor
pop
push
sub
scas
in
lock
dec
xchg
cmp
pop
jne
sbb
fdivrl
mov
or
aaa
xor
or
data16
loop
mov
jno
add
xchg
rdpmc
cmp
dec
loopne
aad
xchg
add
cmpsb
mov
xor
arpl
stc
cpuid
ja
pop
orb
in
jl
insb
cmpsb
popf
mov
lahf
xchg
lock
arpl
rcr
adc
insl
xchg
stc
xchg
rorb
ret
or
cld
push
add
add
mov
sbb
dec
ss
xor
push
clc
adc
or
push
pop
xor
mov
pop
test
dec
xlat
fstpl
adc
xlat
xor
or
outsb
sahf
movsb
jle
cmp
xlat
out
je
pop
dec
arpl
mov
aaa
jnp
xchg
inc
or
je
cltd
cmpsb
mov
jle
lret
mov
add
cld
mov
mov
and
cmp
cltd
sub
mov
and
mov
out
ja
sub
lcall
cmp
movl
fldt
mov
daa
aad
adc
sbb
pop
subl
jg
shl
add
ret
xor
in
push
addl
js
push
and
sbbb
add
sbb
xchg
inc
pop
push
cmp
mov
mov
mov
jae
clc
xor
xchg
in
jge
adc
xor
mov
pusha
stc
add
mov
movsl
mov
adc
iret
cmp
inc
adc
sub
stos
ret
sub
jecxz
and
pop
push
movsl
pop
std
push
mov
dec
add
cltd
cmp
adc
data16
in
inc
sbb
inc
mov
gs
aad
jne
push
js
gs
or
out
aam
xchg
and
or
push
rorb
loopne
pop
pop
cmp
xchg
scas
dec
decl
mov
into
and
pushf
jne
jmp
cmp
fcomps
in
rcr
mov
dec
cmp
mov
xor
mov
push
div
mov
ljmp
in
pop
pusha
add
or
loop
pop
mov
insb
je
shll
jbe
call
call
fdivp
dec
scas
pop
mov
sub
insl
lock
cmp
push
dec
cmc
out
xchg
pushf
sbb
cltd
shl
roll
and
cmpl
mov
mov
or
dec
testl
fdivrp
andb
insl
mov
cmp
pop
orl
lahf
fildll
js
push
xchg
xchg
das
add
xchg
imul
jae
or
push
fwait
jmp
scas
xchg
xchg
sti
jns
mov
xchg
pop
out
les
sbb
push
cmp
and
mov
lea
shl
fistpll
and
das
and
sbb
pop
enter
bound
cmp
mov
xor
negl
xchg
cmpl
or
ljmp
pop
push
jp
jmp
adc
fldl
iret
cmp
mov
sbb
ret
xor
xorb
and
sbb
into
aaa
pop
and
jge
shll
xor
aam
xchg
and
push
enter
xor
fstpl
outsb
dec
loop
push
jmp
mov
mov
inc
sbb
mov
mov
inc
push
lds
xchg
adc
into
repnz
xchg
les
nop
push
cmp
lahf
xchg
das
imul
cld
dec
std
and
push
push
push
add
cli
fidivrl
and
mov
test
pop
jnp
and
mov
in
cmovl
loopne
xchg
inc
lds
in
insb
xchg
test
mov
clc
xor
fmull
lock
or
and
jo
rcrb
mov
popa
jle
inc
fimuls
rcr
loope
and
clc
xchg
push
cmp
mov
and
mov
into
push
jo,pt
inc
sar
adc
decb
lret
mov
mov
stos
jl
dec
cmp
sub
jmp
stc
ds
rcrl
cwtl
dec
xchg
mov
dec
je
ljmp
pop
jmp
xchg
cli
cmp
in
in
test
popl
iret
imul
xor
popf
divb
test
dec
test
jmp
bound
or
cmpsl
arpl
lds
fists
out
lock
dec
push
xor
inc
iret
cmpl
lods
ss
xchg
inc
fbstp
sbbb
ja
lahf
orb
mov
fs
in
leave
pushf
scas
cmp
lds
jle
test
lret
and
ret
mov
in
and
je
jo
push
add
xchg
pop
inc
push
inc
pushf
stos
cmp
outsb
jle
sub
shrl
sub
mov
add
push
or
cmpsl
push
push
ljmp
enter
lret
pusha
add
rcll
dec
mov
inc
cmp
xor
cwtl
inc
or
int
inc
ds
sbb
lcall
incl
subb
pop
cmp
xor
pop
adc
lods
or
mov
aam
ja
cmp
lods
mov
pop
cmp
dec
inc
add
cld
sbb
add
mov
cs
int3
insl
clc
mov
mov
inc
sbb
jmp
scas
lea
dec
fidivs
sub
or
int3
jns
shlb
rcll
jno
in
std
loopne
test
dec
lock
xchg
sbb
arpl
ljmp
hlt
jae
fsub
fisttps
mov
fmuls
stos
mov
xlat
inc
lods
jne
int
xchg
enter
xor
fcomps
fisttpl
push
and
cmp
xor
sub
enter
push
fcmovnb
aas
jb
ja
mov
movsb
xacquire
push
jmp
jmp
leave
mov
out
adc
xchg
repnz
dec
rcr
xchg
leave
mov
imull
loop
and
adc
inc
inc
out
mov
cmp
dec
dec
repnz
push
mov
mov
negb
sub
test
ret
stos
fldl2e
aaa
rcr
mov
lahf
jae
dec
fwait
jecxz
mov
jg
mov
dec
out
inc
jecxz
pop
test
dec
shrb
ljmp
dec
and
cltd
lret
pushf
cwtl
dec
pop
nop
imul
xor
int3
dec
aad
mov
ljmp
fwait
lea
mov
mov
dec
mov
iret
sarb
insl
and
stc
jno
jp
enter
push
cmp
or
in
lods
enter
add
in
mov
or
lea
mov
mov
jmp
fs
xor
push
fs
fisubrs
adc
adc
push
clc
adc
xchg
jmp
add
lret
mov
cmp
xchg
cs
mov
push
mov
push
fldt
sub
jl
enter
cwtl
dec
mov
cmp
jb
bswap
push
frstor
pushf
scas
std
push
pop
enter
movsb
sbb
data16
popa
xchg
adc
xchg
pop
pop
ret
pushf
xchg
adc
cmpsb
cmp
shrb
enter
mov
outsl
pusha
ret
cmp
or
lods
fbld
jle
hlt
add
jns
sub
test
adc
sarb
adc
pop
jge
sti
ficomps
js
sbb
mov
inc
mov
sbb
push
movsl
lea
dec
cwtl
inc
sub
out
mov
pop
fiaddl
adc
mov
adc
add
inc
popa
jmp
and
mov
sub
aaa
repz
outsb
sub
xchg
mov
and
pop
mov
int3
mov
dec
mov
out
lea
pop
push
je
gs
cmpsl
fistl
inc
ret
gs
adc
xor
dec
imul
mov
stos
inc
pop
jle
addr16
dec
je
dec
mov
mov
outsb
cmp
xor
push
fistl
mov
sahf
aaa
mov
sbb
je
cmpsb
or
pop
push
movsl
push
adc
vandnps
mov
sti
mov
sbb
js
inc
sar
or
repz
mov
mov
insb
inc
sub
mov
ljmp
rcr
ja
mov
icebp
je
xor
cmp
add
lock
and
out
call
repz
mov
lds
cmp
add
dec
and
sbb
xchg
ds
mov
imul
mov
and
mov
scas
daa
sbb
adc
adc
je
rolb
adc
cmp
sbb
gs
push
mov
lret
push
jno
loopne
je
pop
popl
sub
sbb
push
lret
xor
bnd
ss
inc
imul
pop
lret
pop
fisttpll
pop
cli
mov
inc
xor
xchg
add
adc
testl
icebp
imul
outsb
adc
outsb
cmpsb
ret
sub
cmpsl
mov
scas
jl
push
and
inc
inc
add
inc
mov
icebp
push
sahf
test
enter
cwtl
mov
inc
sarb
jns
fists
lret
out
inc
rclb
mov
clc
mov
jg
mov
inc
scas
call
dec
shl
lret
stos
enter
rcrb
sub
ficompl
lret
inc
imul
sub
int3
xchg
pop
jne
mov
ss
xor
cltd
orb
mov
repnz
popf
xor
mov
xlat
jge
cmp
adc
or
adc
sub
shrl
mov
test
sub
xor
lahf
push
pop
ss
js
cmp
es
cwtl
pop
sbb
inc
xlat
cmpsl
hlt
jae
pop
lea
aas
xor
pop
fcoms
lods
in
sbb
and
push
jne
lods
mov
jno
dec
xorb
test
js
mov
andl
xchg
mov
inc
lods
xor
sbb
dec
push
sbb
arpl
add
int3
push
inc
sbb
inc
jne
mov
sahf
popa
or
mov
cmp
fsts
sbb
and
iret
movsl
xchg
xor
nop
mov
fwait
fwait
stc
sbb
ret
int
ss
pop
cmc
jmp
mov
or
jg
xor
sub
mov
xor
cld
adc
imul
pop
mov
sti
fcmovb
mov
sbb
pop
lods
ja
mov
lret
sub
repz
aad
loope
les
pushf
jp
ss
push
in
xchg
push
int3
and
cmc
pop
or
cli
jne
pop
addr16
or
jecxz
sarl
aam
in
xlat
jo
fs
push
mov
push
mov
out
fcomps
xlat
xor
mov
cltd
cld
pop
xor
stos
ljmp
or
es
xor
add
or
inc
push
daa
pusha
push
ret
rolb
pop
or
lds
in
pop
and
or
imul
and
add
jp
sarl
movsl
test
pop
bnd
adc
out
add
mov
fs
push
mov
and
dec
jmp
shlb
jno
xor
jp
xlat
shll
test
push
mov
int
call
xchg
push
insl
jmp
jmp
test
test
mov
lea
enter
push
mov
test
xchg
xor
xchg
cld
aad
sarl
sbb
mov
cltd
mov
dec
test
mov
dec
sub
adc
les
mov
lods
pop
add
lds
out
mov
inc
cld
mov
flds
loop
lds
xchg
subl
stos
xor
test
jae
icebp
shlb
push
inc
push
outsl
shrb
outsl
add
xor
test
out
xor
jge
pusha
lret
xlat
dec
jl
sahf
sbb
in
pop
pop
mov
xchg
repz
inc
push
popa
out
movsb
dec
and
arpl
mov
stos
lahf
cltd
or
jge
xchg
mov
or
cld
mov
decb
or
xor
pop
lock
mov
dec
call
push
add
into
imul
adc
rcll
xchg
inc
adc
jbe
pop
addb
test
es
jecxz
mov
jo
pop
addb
js
jle
fimull
lahf
push
add
mov
and
fmull
add
adc
cli
mov
and
mov
mov
jns
and
sbb
cmc
popf
mov
fdivrs
xor
or
movsl
addb
lock
ds
fld
mov
out
imul
cmc
loope
shll
push
sub
icebp
lahf
push
test
imul
add
jmp
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
rcr
out
xchg
xchg
push
inc
es
nop
hlt
mov
stos
add
adc
clc
adc
test
mov
repnz
fbstp
push
mov
or
xlat
add
pop
push
loop
push
movsl
add
cmp
scas
jbe
sbb
mov
xlat
loope
roll
xchg
cmp
insl
lret
sbb
int
lret
push
push
lea
loopne
sbb
movsb
or
or
cs
dec
stos
mov
scas
inc
scas
out
stc
mov
outsl
or
rcl
dec
sahf
lock
dec
lods
pop
add
jae
lds
inc
sbb
les
sub
fstl
ljmp
add
ja
iret
outsb
adc
inc
je
pop
ljmp
sbb
mov
scas
inc
cli
loop
mov
cwtl
call
xchg
mov
fsubrl
mov
popf
rolb
fidivrs
test
jae
adc
out
push
mov
sbb
stc
shll
loopne
rclb
leave
mov
imulb
fbld
or
int
mov
cmp
mov
cmpsb
push
cmp
or
or
sbb
in
sbb
inc
mov
scas
ljmp
push
or
add
add
mov
push
mov
cmp
xor
int3
ja
rclb
fwait
jnp
push
stos
mov
mov
and
test
lcall
and
cmp
enter
pop
push
or
lahf
mov
rolb
inc
orl
mov
xchg
cmp
ret
push
sub
pop
inc
out
jp
clc
insl
in
xlat
sub
test
mov
xchg
cmp
xchg
and
add
dec
mov
pop
ficomps
cmp
mov
add
sbb
inc
mov
jecxz
dec
sub
jmp
push
push
add
pushf
mov
lock
iret
and
mov
push
sbb
cmp
xchg
dec
xchg
adc
push
test
adc
nop
push
push
mov
cmp
out
sbb
xchg
js
mov
jcxz
insl
ljmp
fwait
scas
and
lret
adc
pop
mov
jns
outsl
pop
lods
or
xchg
jmp
jno
repnz
rclb
jae
arpl
inc
inc
push
fstl
loop
daa
xchg
xor
or
sbb
mov
mov
ret
jno
xchg
jo
mov
int
add
rcll
mov
jns
sti
outsb
push
sub
adc
dec
mov
movsl
insb
fscale
data16
mov
jp
aaa
test
mov
xchg
testl
jle
xor
cltd
cmc
shl
ret
fisubrl
rorb
into
cmp
enter
retw
jg
push
xchg
nop
int
test
insl
and
test
addr16
mov
jmp
add
mov
mov
call
sub
adc
xchg
xor
shrl
sbb
push
out
adc
mov
fucom
stos
imul
mov
xchg
or
jl
and
sbb
lods
push
dec
test
out
fucom
adc
xchg
pop
push
mov
jne
push
pop
std
add
shll
loop
into
int
imul
nop
dec
cmp
cmp
mov
push
xor
nop
stos
pop
jb
lea
mov
add
shll
in
xor
adc
dec
ds
sbb
xor
push
jns
shll
scas
mov
or
rol
sbb
push
mov
adcl
cmpsl
push
jle
xchg
mov
adc
lock
mov
lret
movsb
jbe
aas
scas
stos
out
push
mov
pop
mov
sbb
in
mov
xchg
rcr
inc
and
lods
lock
xchg
loop
dec
cmpsl
mov
xchg
out
rcrb
inc
jg
push
rol
lock
movsb
popa
rol
pop
push
cmp
sub
test
dec
repz
push
arpl
rol
sub
push
fidivrl
popa
lret
pop
test
sahf
cmpsb
hlt
push
stos
fsubr
nop
test
adc
pushf
add
roll
xchg
sub
add
mov
mov
sub
ret
cli
sti
je
jg
test
pop
test
mov
fwait
outsl
movsb
push
ret
mov
jno
pop
lea
fcompl
add
mov
sub
add
notl
xchg
add
adc
mov
cwtl
out
enter
decb
seto
movsb
push
jbe
out
xchg
aaa
aad
adc
lods
cs
dec
mov
stc
or
pushf
out
int3
ljmp
xchg
outsb
inc
es
jge
inc
hlt
jmp
fsts
add
mov
cli
scas
loop
pop
push
push
imul
iret
aam
pop
pop
inc
lea
add
jns
rcrl
rcrl
mov
push
rorb
cwtl
pop
adc
dec
popf
outsb
shl
jae
sbb
icebp
push
loope
inc
pop
add
dec
sbb
xor
and
fsubrl
pop
les
sbb
cltd
mov
int3
inc
scas
in
add
cltd
insl
and
or
mov
sbb
or
inc
rclb
or
and
mov
sbb
lret
ret
stos
ret
ret
mov
leave
sti
into
inc
push
sahf
nop
inc
jp
loop
gs
mov
lcall
test
sub
flds
adc
mov
scas
fcompl
xchg
out
popf
pop
jnp
adc
mov
iret
mov
pop
mov
and
xor
test
hlt
jl
xchg
sub
je
inc
fisubrl
push
cmc
rolb
aaa
jmp
pop
loope
ljmp
imull
add
aam
sbb
sub
pop
xchg
outsb
aad
out
sub
imull
faddl
jle
pop
loopne
mov
jle
adcl
mov
or
mov
out
outsl
stos
pusha
dec
cmpb
mov
ja
sub
imul
push
push
test
dec
cld
jecxz
shll
aaa
jno
rcrb
pop
cmp
js
mov
enter
add
hlt
xor
shl
jmp
add
xchg
rorb
gs
xchg
unpcklps
clc
adc
dec
sub
push
test
push
mov
bound
dec
xchg
adc
mov
push
mov
add
cld
and
mov
xor
pop
jno
xor
loop
push
inc
jo
mov
mov
dec
sahf
cli
inc
dec
mov
cmc
stos
mov
inc
in
pop
xchg
rcrb
push
fbld
jp
mov
aaa
loopne
sub
xor
lods
in
mov
ret
and
jae
mov
ret
mov
leave
jno
andl
adc
push
cmp
xchg
add
pop
sbb
inc
inc
std
mov
jecxz
sub
mov
push
mov
xchg
mov
loope
lea
mov
jl
cltd
scas
pop
loop
pop
push
or
inc
fdivrs
dec
scas
loop
xchg
enter
enter
mov
lods
mov
ds
push
mov
imulb
dec
adcl
testb
out
cmp
int3
pop
or
aaa
out
jmp
add
jmp
mov
sti
lods
push
int
push
int3
xor
jecxz
lret
fcmovu
mov
aad
cmp
je
in
lods
push
mov
cmp
mov
add
jecxz
mov
call
jo
mov
sub
dec
outsl
cmp
popa
std
sbb
mov
fisubs
subl
pop
xor
cli
or
jmp
cmpsb
aaa
jno
sub
sbb
insb
nop
enter
movl
xchg
jne
inc
xor
push
fiadds
mov
cmp
call
push
jbe
lret
push
jne
popf
pop
xor
rclb
jbe
mov
ja
mov
popa
fwait
add
arpl
cmpb
lea
movsb
sbb
loop
mov
idivl
fisubrl
jmp
or
xor
inc
xlat
dec
or
xchg
popa
sub
mov
inc
push
xor
xchg
jmp
les
insb
jecxz
test
mov
cltd
mov
adc
mov
in
xlat
xor
or
lahf
sbb
sub
inc
fcompl
pop
inc
mov
enter
stc
outsl
outsl
and
rorl
lods
mov
jge
cmp
sbb
adc
mov
and
jmp
rcrl
cmpsb
cmp
jbe
adc
push
pop
in
cmp
sbb
mov
sbb
pop
mov
icebp
pushf
ljmp
fs
jg
pushf
cmp
fldenv
out
mov
inc
cmp
aas
leave
or
ficoml
adcb
jge
add
pop
cmpsb
pop
pop
xor
inc
fndisi(8087
xchg
scas
lret
jns
fnstcw
roll
sarl
pusha
insl
aam
and
mov
xchg
push
pop
ret
add
xor
push
sub
mov
sbb
jg
call
jbe
jg
dec
enter
xchg
test
out
cmp
mov
in
cmp
shrl
xchg
mov
lods
sub
insl
fstpl
sub
xor
xchg
jge
cmpsl
sub
mov
rclb
out
cs
mov
test
idivl
dec
rorb
pcmpeqd
je
in
shr
lds
pushl
mov
push
scas
lods
mov
pop
adc
lret
popa
dec
enter
pop
and
sbb
inc
or
scas
inc
cmpsb
xacquire
pop
push
inc
scas
mov
aaa
fisubrl
lret
lea
movb
mov
jl
cmc
or
sbb
aaa
enter
xor
pushl
in
add
sbb
inc
inc
dec
pop
lret
loopne
add
or
fnsave
aaa
enter
xchg
icebp
xchg
nop
orl
push
dec
std
mov
mov
xchg
out
dec
push
in
in
cmp
mov
mov
xlat
mov
clc
inc
test
sub
or
pop
mov
arpl
stos
pop
std
addr16
stc
xlat
mov
dec
std
or
test
test
fcoms
jmp
ljmp
imul
mov
push
push
aas
sub
ljmp
mov
and
xor
roll
push
xor
mov
adc
sub
popf
out
xor
pop
jl
cmpsl
cmp
in
mov
xor
ds
incl
rcrl
jl
shrb
jp
outsb
scas
mov
inc
push
add
inc
jo
shll
outsl
mov
sti
rcl
pusha
les
loop
mov
in
sub
mul
ss
xchg
imul
inc
aas
iret
dec
int
xchg
scas
cmp
loopne
mov
push
or
stc
push
outsl
cmp
mov
cli
in
aad
xchg
sbb
fiaddl
ds
dec
or
push
push
jmp
mov
pushf
mov
push
cmp
sbb
pop
mov
mov
je
loope
std
adc
js
adc
adc
jbe
lods
lods
cltd
mov
mov
outsb
push
divl
in
cmp
inc
cmpsl
push
sub
mov
aam
adc
gs
call
repz
xchg
insl
adc
dec
mov
shlb
lahf
stos
xchg
loope
loopne
out
fadds
subl
rcrb
cld
dec
or
aas
leave
in
inc
mov
pop
stc
add
cmp
sbb
scas
dec
and
test
out
xchg
incb
loop
fiaddl
adc
push
loopne
aaa
adc
fldcw
push
mov
cmp
movsb
xor
mov
in
cmpsb
mov
xchg
rcrl
mov
lock
shl
inc
adc
xor
dec
scas
outsb
ss
xchg
sahf
mov
inc
pop
lret
push
fistpll
fdiv
push
ret
pop
push
xlat
int
mov
mov
mov
ret
addb
push
dec
push
in
mov
inc
repnz
dec
mov
jg
pop
sti
fisubrl
imull
jle
je
and
xor
and
push
jne
sub
mov
ja
add
call
lret
repz
inc
in
mov
sub
sarb
dec
push
shlb
push
in
mov
out
mul
es
push
push
mov
cmp
mov
or
aaa
pop
cmp
or
lea
mov
mov
mov
shrd
jmp
aaa
aas
lods
and
andb
add
adc
push
clc
adc
inc
jae
add
or
add
jp
test
push
and
fwait
mov
fsubrs
xchg
bound
sub
stc
cmc
sbb
push
sti
in
nop
jnp
fnstenv
pop
int
push
hlt
pop
stos
jecxz
test
aam
pop
sarl
mov
cli
rol
push
insb
aam
jo
pop
stos
lret
dec
paddsb
push
mov
test
jl
mov
pop
mov
xchg
adc
xchg
pop
jge
cmpl
xchg
jae
jl
or
imul
test
repz
lds
popf
pop
shll
jg
scas
pop
out
cmp
jg
pop
hlt
lret
fidivrs
lahf
push
gs
xor
xor
pop
pop
inc
addb
addl
jecxz
addb
lret
xor
and
ja
scas
loopne
fisubs
jmp
push
test
subb
xor
aaa
jb
loop
sub
and
aam
xchg
std
push
adc
cmp
das
adc
in
popf
dec
push
adc
sahf
ret
and
enter
fnsave
lahf
lods
or
pop
push
not
int
adc
out
movsl
test
jb
push
inc
xor
lds
cmpsl
enter
data16
loope
loope
pop
test
mov
sbb
or
inc
sahf
sub
jns
push
test
fwait
adc
rolb
mov
pop
imul
mov
xchg
and
pop
sub
xchg
xchg
into
push
jb
xor
adc
push
xchg
pop
out
or
scas
hlt
mov
sub
iret
pop
mov
lods
es
push
pop
jp
jmp
scas
in
pop
push
mov
push
iret
add
nop
add
jl
test
cs
testl
mov
xor
add
mov
fisttps
sbb
push
push
mov
test
repnz
sub
int
divl
jle
inc
cld
nop
movsb
xor
rorl
lahf
aaa
jae
imul
xor
sub
add
js
fsubrl
scas
ja
in
movsl
lret
adc
jle
cmp
gs
jmp
jg
jnp
fnstenv
scas
pop
adc
sub
mov
inc
jnp
icebp
push
mov
bound
outsb
das
int
into
insl
pusha
and
pop
cmp
repz
enter
ljmp
mov
fcoml
aas
jmp
inc
inc
rclb
mov
psubd
frstor
cltd
ss
out
mov
push
cmp
mov
push
bound
std
jl
cmc
pop
sub
out
xor
sbb
sti
cmc
sbb
mov
dec
adc
lahf
cmp
lahf
push
incl
mov
shl
add
lahf
cmp
sub
iret
pop
cmp
rcrl
inc
enter
dec
pop
lret
pop
test
mov
cli
out
add
in
fmuls
std
dec
xor
sub
push
arpl
mov
cmp
insl
or
ljmp
cmp
mov
jo
nop
inc
loope
icebp
or
jle
pushf
movsb
xor
dec
fwait
push
dec
loop
in
adc
jle
mov
add
and
dec
nop
loopne
inc
xlat
into
sub
or
adc
dec
jg
hlt
popf
and
push
pop
cltd
shrb
or
sbb
sahf
sti
pop
mov
aam
and
ret
lock
mov
outsb
scas
xchg
lret
mov
jbe,pt
jae
mov
xchg
mov
pop
pop
ljmp
js
mov
jae
xor
repz
adc
push
testb
in
mov
fwait
add
mull
stos
mov
sbb
sub
out
sbb
add
ja
out
out
sbb
and
stos
iret
stc
stc
mov
xchg
jg
xchg
icebp
insb
and
sahf
mov
mov
stos
sti
dec
mov
jp
adc
pop
fwait
or
outsb
iret
sbb
xor
nop
cmp
jmp
hlt
cmp
xchg
int
enter
mov
scas
pop
outsl
add
enter
out
inc
notl
mov
je
jb
mov
and
adc
cmp
fistpll
adc
and
mov
xor
aas
xorl
sub
lret
push
je
sbb
push
xchg
xor
add
icebp
mov
inc
les
insb
call
add
sub
sti
mov
push
adc
outsl
cmp
lcall
rorl
sub
ja
mov
cmpb
cmp
mov
adc
out
xor
or
add
mov
xchg
test
pop
or
dec
xor
mov
xchg
sbb
jae
fildl
jb
leave
stos
sub
in
push
mov
push
or
push
dec
pop
imul
out
lcall
inc
inc
cmp
or
inc
repnz
mov
push
or
mov
sub
push
jno
rorl
jmp
push
add
or
sub
dec
dec
mov
ret
fucom
dec
movsl
pop
fimuls
pop
sar
stc
cs
xchg
shl
in
mov
enter
mov
aam
push
jnp
mov
mov
rcrb
dec
enter
sub
pop
mov
loop
mov
in
or
shrl
mov
jp
mov
add
rorb
mov
push
daa
lods
int3
aad
jmp
stos
aam
mov
in
push
enter
adcb
xchg
cmpsl
lret
movsl
adc
jecxz
aad
xor
fwait
movsb
mov
dec
cwtl
int3
mov
pop
pop
out
enter
and
inc
les
test
adc
sub
mov
hlt
int3
xor
fdivs
stos
dec
shrb
int
push
sarb
inc
jp
push
pcmpeqw
xor
mov
dec
push
pop
clc
hlt
outsl
inc
xor
stos
mov
add
hlt
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
jmp
dec
jmp
dec
xchg
and
mov
inc
test
adc
push
clc
adc
hlt
cmpsl
adc
icebp
mov
add
in
add
or
jecxz
jmp
test
lahf
cmp
out
dec
negb
inc
add
and
fwait
sahf
mov
add
lcall
or
insl
push
jp
sbb
xchg
aaa
mov
ljmp
jo
lcall
push
cmp
ret
pop
adc
lahf
mov
dec
data16
loope
inc
mov
jbe
or
push
and
jae
notl
les
xchg
cltd
in
push
jno
cwtl
aas
inc
push
mov
mov
shlb
xchg
subb
xchg
incb
dec
xchg
es
and
in
stos
jbe
xlat
mov
add
jb
aam
cmpsl
mov
pop
into
xor
andb
and
imull
in
rcl
cmpsb
pop
pop
jne
mov
dec
mov
and
and
mull
xchg
clc
loop
push
orb
rcrb
inc
xchg
pop
addr16
sub
aas
add
enter
in
ja
test
mov
insl
jb
sub
pop
sbb
icebp
pop
pop
push
sub
push
adc
rcrl
and
popa
out
or
adc
mov
arpl
mov
cmp
shrb
mov
shl
push
outsb
mov
lods
out
add
mov
or
ljmp
pop
rcll
fisttpl
fcmovbe
sbb
dec
cld
inc
add
cld
sub
adc
jns
xlat
test
jnp
fiaddl
pop
ret
mov
sub
push
rclb
in
sbb
cld
test
call
pop
cmp
xchg
lahf
leave
mov
mov
push
jo
pusha
mov
inc
loop
cmc
arpl
jns
test
sub
loopne
push
fs
and
aas
adc
cmp
rorb
cli
aad
mov
mov
push
sub
jnp
cmpb
fsubrl
dec
and
outsb
mov
jecxz
pop
cmp
test
out
push
paddsw
jl
dec
fs
pop
mov
outsl
and
xor
jns
xor
lret
add
jecxz
xchg
jb
sahf
jle
insl
rorb
xor
fidivrs
mov
push
adc
pop
jbe
sbb
sbb
repz
push
mov
cmp
mov
jne
dec
sub
pushf
cmpsb
jnp
inc
cld
mov
fsubr
mov
pop
lahf
pop
lahf
jmp
fwait
dec
cmp
les
sbb
sub
sbb
dec
lret
pusha
mov
outsb
cmp
jl
adc
adc
mov
lret
jb
and
sbb
pop
xor
inc
fistpll
cmpsl
test
or
daa
sub
sti
int
negl
sbb
mov
lahf
fsubrl
sub
pusha
adc
das
shll
inc
mov
ret
lret
outsb
sbb
jecxz
sub
dec
adc
mov
sbb
das
mov
test
mov
pusha
xchg
xor
mov
pop
or
xchg
dec
sub
push
mov
fmull
mov
sub
pop
add
outsl
ficoml
push
sarl
mov
and
fmuls
push
cmp
adc
or
mov
xchg
cmp
and
jns
outsl
mov
add
repz
pop
add
push
js
push
sub
sbb
inc
mov
xchg
cmp
sub
sub
cmp
dec
in
loope
and
jmp
pop
outsl
out
sub
xchg
push
lods
stos
and
cmp
pop
dec
xor
leave
xor
pushf
jge
xor
xchg
add
flds
in
mov
and
push
inc
pop
inc
add
ret
dec
ret
lcall
cmpsb
or
mul
fists
jp
hlt
stos
data16
popa
cltd
lret
and
adcb
sub
div
or
ja
mov
xchg
adc
and
push
mov
sub
mov
addr16
rorl
aam
sbb
clc
add
pushf
or
ret
or
les
jl
into
movb
jne
sbb
and
sub
cmpb
sahf
mov
lea
movsl
mov
jno
es
jns
jno
or
lods
ds
pop
inc
jmp
push
jl
or
mov
stos
inc
scas
loopne
enter
pop
add
inc
loope
fistpll
daa
add
shl
cmp
ret
pushf
enter
stos
or
daa
mov
jns
int
lods
push
inc
cld
mov
out
das
xor
inc
aad
ja
mov
inc
mov
inc
mov
fisubrl
dec
mov
cmpsb
sbb
mov
mov
jae
lahf
repnz
mov
cwtl
mov
pop
je
fldenv
mov
add
mov
dec
out
out
add
in
in
pop
push
enter
jno
out
cwtl
cmp
bound
into
enter
add
imul
add
or
sub
mov
cmpsl
nop
sbb
mov
jmp
xchg
sub
adc
in
inc
push
pop
cmp
or
pop
mov
in
cld
sbb
das
or
data16
sbb
int3
jbe
shlb
jne
adc
jns
fs
into
test
mov
hlt
sub
dec
popf
dec
cli
fidivrl
fisttps
sysenter
in
mov
cld
mov
pop
daa
addr16
or
push
popa
mov
loop
orl
push
iret
xor
or
cmpsb
or
xchg
cmp
pop
jae
jl
pushf
int
xchg
xorb
push
mov
push
ss
mov
adc
dec
sets
out
ret
mov
adc
push
out
xor
enter
sub
xchg
inc
bound
cmc
aad
xor
sahf
outsb
pop
mov
sbb
popa
aam
stc
out
in
adc
and
mov
ja
loopne
sbb
or
adcl
push
aad
shr
imul
icebp
lcall
push
mov
shrd
shr
mov
mov
jmp
pop
inc
inc
mov
aas
push
sbb
rolb
adc
push
clc
adc
add
inc
add
jecxz
xorb
sub
inc
dec
ret
cmp
ret
jl
aad
stos
cmp
adc
xchg
lds
mov
sbb
das
repnz
add
xor
shll
loopne
mov
les
cmp
cmp
cmp
out
pop
imul
pop
push
sti
xchg
sub
outsb
and
sub
add
pop
aam
jnp,pt
hlt
jmp
or
inc
in
push
aad
or
mov
sub
mov
jmp
inc
pop
push
dec
pop
out
jecxz
xlat
xchg
ret
push
cmp
nop
fwait
jb
test
push
dec
mov
xor
fs
or
and
aad
dec
in
js
adc
adc
je
lret
xchg
mov
cmp
xlat
mov
mov
testb
mov
shrb
ds
xchg
das
jb
mov
pop
repz
leave
pop
push
inc
jbe,pn
addr16
sub
or
or
in
mov
cmp
pushf
sub
jbe
bound
xchg
add
push
sub
dec
test
jno
cwtl
pushf
mov
in
aad
mov
xchg
adc
in
dec
cmp
lcall
sub
mov
pop
mov
cmp
movsb
adc
filds
and
mov
xchg
cmp
add
arpl
jp
mov
mov
push
mov
xchg
or
jle
push
lret
push
mov
lret
push
jl
inc
bound
stos
repz
enter
sbb
cmp
pop
scas
mov
aad
arpl
into
insl
sbb
inc
sub
in
mov
loop
fsubrs
sub
or
mov
lahf
and
push
pop
sti
fwait
and
jl
outsl
lds
jle
outsl
dec
popf
outsl
xchg
dec
push
inc
xchg
add
dec
dec
dec
in
push
xchg
xor
push
das
sub
and
fildll
xchg
incl
das
adc
add
pusha
jle
out
or
pop
lahf
loop
xlat
in
sub
sub
jp
mov
dec
dec
push
jae
cmp
scas
div
negb
pop
xchg
jg
lods
dec
lcall
push
in
fwait
loope
loope
insl
xor
and
dec
add
pusha
xor
sub
stos
ficomps
or
mov
sbb
push
outsl
ljmp
or
gs
cmp
push
xchg
mov
and
mov
xchg
mov
mov
xchg
lds
aam
mov
andl
mov
or
mov
addr16
jle
sub
jle
push
insb
pop
jl
incl
jg
addr16
sub
cmp
out
push
jbe
loope
pop
in
inc
mov
loope
sub
repz
mov
out
cmc
add
mov
jle
enter
mov
dec
repnz
ret
rcrl
cs
and
dec
enter
data16
add
fs
ja
sub
out
cmpsl
push
ret
mov
pop
inc
pop
inc
mull
adc
xchg
add
dec
movsl
cmpb
mov
lods
sub
js
xlat
jmp
iret
mov
inc
sbb
mov
or
xor
xchg
xchg
xor
repnz
inc
das
mov
orl
mov
adc
sbb
add
shrb
sahf
xchg
dec
push
xor
fwait
add
jbe
push
dec
push
jbe
mov
call
or
dec
mov
xor
add
jecxz
xchg
jo
sahf
inc
sub
mov
aam
fstpl
jecxz
cmp
loop
movsl
pop
in
stos
xchg
sbb
hlt
popf
adc
mov
mov
push
les
sub
sbb
pushf
cld
jo
pop
cli
in
test
das
push
lahf
add
sub
sub
cmp
cld
push
out
aad
adc
daa
repz
jb
cmp
popf
xchg
xchg
outsb
mov
je
cmpsb
fdivl
and
popa
dec
mov
rcrb
bound
jne
jp
test
mov
jnp
xchg
pusha
test
popf
in
push
pop
sbb
pop
lahf
mov
mov
ss
pop
adc
call
jmp
mov
mov
test
cltd
adc
pusha
fwait
push
inc
roll
ljmp
dec
daa
enter
cltd
and
push
push
pop
popf
mov
mov
pop
cmc
bound
imul
mov
lahf
test
push
in
add
out
aas
out
push
rcr
lock
dec
aas
jb
addr16
fimull
aaa
dec
loopne
xchg
cmc
or
inc
inc
shlb
leave
movsb
jmp
inc
jb
pop
bound
inc
pop
and
lods
rcll
rol
fdivl
inc
popa
inc
sub
imul
jb
cs
fwait
push
inc
pusha
mov
sbb
stos
out
jge
push
ret
mov
xor
jb
comiss
shll
stos
add
xchg
push
mov
jo
sar
lret
jmp
xchg
out
pop
lea
sub
sbb
push
and
mov
cli
mov
push
mov
cmp
xor
cltd
mov
jmp
bound
mov
test
mov
aas
inc
dec
movsl
mov
shll
pop
sub
add
and
bndstx
mov
pop
int3
out
data16
leave
lret
ret
and
cmp
inc
add
loopne
add
daa
ficomps
notb
xchg
rcl
mov
mov
or
shl
add
in
sub
lods
inc
imul
sub
mov
lds
sar
test
ret
stc
mov
or
xchg
arpl
fidivrl
push
ret
aam
jle
pop
inc
test
cmpsb
lods
sbb
lret
xor
push
or
cmpsb
insl
icebp
outsl
jecxz
clc
xor
movsb
ss
and
cmp
sbb
mov
rorl
xlat
pop
and
or
mov
shl
jmp
push
xchg
push
pop
push
es
xor
xchg
out
adc
clc
adc
test
std
sub
je
sbb
lcall
je
add
imul
pusha
pop
adc
add
mov
fstps
dec
jb
movsb
pop
push
xchg
pop
out
sbb
jne
repz
push
ret
repz
test
push
cmc
popf
dec
mov
fcomps
sbb
mov
ret
shlb
jp
push
rorb
pushl
in
dec
dec
mov
jmp
stos
sub
idivl
jmp
jle
push
outsl
movb
cmc
out
imul
jl
cmpsl
cmp
jo
lcall
call
mov
les
test
bnd
mov
mov
loope
fs
and
mov
and
in
outsb
sbb
inc
lods
cmp
xchg
adc
movsb
out
les
std
mov
mov
and
inc
mov
je
loop
sub
xor
daa
shrb
jmp
int
pop
push
pop
cwtl
cs
pop
sub
iret
and
xor
inc
pop
scas
insl
out
test
lret
mov
popf
jg
aas
rorb
sbb
js
outsl
push
push
bound
inc
out
into
and
cli
pop
mov
scas
sahf
mov
adc
lods
push
jmp
cli
jmp
pushf
sahf
sar
pop
subl
push
lcall
cmc
addl
cmpsl
and
addr16
cmp
sub
jp
iret
sbb
int3
cmp
test
cli
mov
jns
hlt
jl
pop
cmpsl
jnp
sub
cmp
xchg
mov
push
sti
jge
mov
adc
mov
jno
aas
test
in
pop
daa
insb
das
pop
push
insb
dec
lea
push
cltd
jne
xchg
push
and
ficoml
mov
and
jle
xchg
mov
ret
popf
xor
mov
xor
inc
mov
mov
pop
xchg
and
mov
loope
add
or
jae
xor
stos
outsl
aaa
lea
call
mov
je
sub
fsubrs
or
scas
lds
fstpl
xor
andl
xchg
mov
cmp
cmp
and
pop
out
into
push
adc
daa
mov
andl
sahf
mov
mov
aas
sbb
divl
jl
push
loope
mov
int3
mov
pop
or
cmovl
inc
gs
cmp
sub
or
jmp
pop
mov
ds
fs
sub
fisttpll
shl
and
nop
out
stos
xchg
add
mov
fnsave
iret
stos
fdivr
lods
arpl
dec
pop
lahf
inc
mov
inc
popf
popf
in
jp
pop
push
sbb
in
ror
xor
out
xchg
pop
sbb
add
pop
lods
jo
imul
adc
sbb
pop
cmp
cld
sub
adc
outsl
inc
loop
or
lods
xor
ret
ds
mov
subl
nop
pop
dec
pop
mov
sarl
out
push
repz
repz
js
int
jo
iret
jecxz
in
scas
push
bound
lcall
inc
push
pop
imul
stc
aaa
addr16
ds
mov
fbld
rcl
pop
xlat
aas
mov
inc
mov
lds
cmp
xor
aas
pop
andl
push
sbb
or
testl
pop
js
cmp
daa
cmpsl
mov
int
jl
movsl
loope
pop
addb
repnz
adc
es
mov
jnp
clc
pop
or
ret
je
xchg
test
aad
xchg
sub
movsb
mov
mov
loopne
add
cmp
dec
cmp
das
sahf
mov
in
ret
sub
stc
js
mov
enter
dec
jae
mov
pop
repnz
into
sahf
ja
lods
cmpl
dec
mov
or
xchg
push
mov
setno
pop
insb
daa
mov
in
xor
mov
fnstenv
jb
out
jne
aam
lret
xchg
hlt
scas
or
add
data16
lahf
pop
adc
fsubrl
dec
fisubrl
mov
scas
sahf
push
mov
out
pusha
iret
dec
dec
lret
xchg
int
pop
cmp
pop
xor
hlt
adcl
shll
out
mov
es
lods
pop
jmp
cmc
imul
lods
mov
push
mov
int
mov
jne
push
cmp
jno
dec
enter
xor
sub
iret
sbbb
decb
aas
rorb
and
mov
int3
test
fcmovnu
out
xchg
push
pop
cmp
pop
mov
in
add
or
adc
sub
imul
cmp
stc
add
jp
out
sbb
add
outsb
daa
sbb
js
xchg
or
add
aad
incl
ss
fdivr
clc
jp
cmp
pusha
mov
pop
adc
das
and
xlat
repz
add
dec
adc
pushfw
pop
movsl
sub
cli
xchg
dec
pop
test
pop
inc
ds
sub
gs
lods
aad
and
jae
notl
add
clc
popa
sbb
cmpsl
mov
or
icebp
daa
jecxz
aad
push
insl
gs
mov
xchg
int
pusha
pop
sub
sahf
jg
add
jmp
aas
dec
lods
es
mov
xor
rcrl
push
add
imul
lret
rorb
sub
fwait
push
sub
cmp
sub
nop
data16
mov
jae
cmp
notl
sub
repnz
pop
sub
jmp
imul
popl
inc
xor
shl
mov
or
push
int
sub
mov
adc
clc
add
movsb
aas
hlt
cmpb
movsb
int3
and
add
mov
dec
sahf
mov
push
mov
or
mov
cmp
xor
push
push
std
xchg
add
xor
bound
mov
push
mov
lret
imul
and
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
jmp
pop
mov
push
xchg
enter
mov
mov
enter
clc
adc
mov
movl
test
int3
aaa
out
sbb
popa
lods
mov
adc
imul
lret
insb
cli
xor
fstl
pop
sub
jmp
xor
ja
or
stos
sbb
mov
or
fildll
jnp
pop
dec
pop
pushf
inc
inc
dec
jp
jl
in
fs
test
xor
mov
xor
rcll
in
lret
js
stos
stc
js
ds
popf
sub
sub
ja
hlt
test
adc
fmuls
and
mov
out
xor
lahf
push
adc
add
sub
xchg
mov
cmp
or
jb
popf
mov
inc
andl
xchg
jno
dec
imul
push
outsl
dec
shll
cmp
inc
lret
insl
jae
jne
pusha
adc
cmpsl
aas
push
bound
test
stos
mov
mov
push
aam
and
pop
nop
pop
adc
pusha
lahf
push
test
lods
dec
mov
cmp
mov
mov
xchg
xchg
xchg
mov
repnz
add
das
call
shlb
jb
out
inc
pop
xor
pop
popf
les
popf
adc
pop
mov
mov
xor
std
aas
mov
xchg
outsb
adc
inc
push
jno
lea
outsb
repz
ljmp
mov
xchg
or
fcmovu
cmpb
jbe
test
dec
data16
in
add
add
stos
xchg
imul
sub
xorl
adc
popa
pusha
push
push
and
or
jne
jl
adc
and
push
dec
sbb
out
es
jge
das
or
inc
test
sahf
inc
add
sub
pop
iret
sub
add
lds
in
in
cmpsb
pushf
rcrb
mov
sbb
jae
ret
inc
sarl
sub
call
sbb
out
fcomps
pop
notb
or
cmp
push
push
and
push
ret
lahf
jb
mov
adc
and
cmp
and
inc
mov
mov
pop
mov
js
jae
std
addr16
and
scas
daa
ret
sbb
xor
lea
int
shr
ja
mov
or
xchg
jne
jg
jbe
out
sbb
jne
pop
lea
inc
insb
xchg
out
jo
adc
sbb
sbb
mov
in
mov
repnz
dec
pop
sub
push
jl
jp
int3
mov
js
xchg
mov
mov
pop
jecxz
dec
jecxz
or
mov
fwait
lods
jns
loopw
and
cmc
xor
flds
xchg
mov
cli
imul
push
jmp
dec
movsb
testb
xor
push
in
jb
dec
add
cmc
cmpsb
inc
mov
hlt
jp
cmp
in
jp
les
xor
loop
insl
push
fs
rorl
xchg
lahf
dec
ret
sub
sub
mov
add
sti
jae
adc
push
and
out
jg
jmp
cltd
xchg
sbb
dec
xor
cmp
xor
ljmp
lcall
or
xor
mov
mov
mov
out
jb
ja
mov
cmp
cmp
popf
xor
jne
pop
mov
pop
sbb
sub
jne
sbb
test
add
or
add
subb
into
pop
lcall
out
lds
jne
sbb
loope
jae
cwtl
and
push
cs
hlt
and
les
std
mov
mov
pop
repz
ja
push
inc
push
sbb
add
stos
es
flds
hlt
xchg
ja
stos
or
sbbl
xchg
mov
jo
push
pop
xor
inc
mov
lock
xchg
adc
lods
add
fisubrl
jp
ja
lret
adc
dec
lods
leave
adc
es
pop
xor
push
xchg
pushf
xor
dec
cmpsl
and
cmp
arpl
data16
sarb
jne
mov
jg
ja
adc
jl
out
repz
cmp
out
push
ds
leave
jle
inc
cmp
and
fwait
mov
inc
pop
gs
pop
mov
popa
sti
data16
and
outsl
sbb
lock
dec
jge
or
dec
cld
mov
jns
sti
sti
inc
cmp
xor
pop
loope
stos
inc
jl
lea
cmp
loop
shrl
cmp
repz
mov
enter
xchg
xor
push
add
das
insl
mov
loop
or
mov
sbb
mov
roll
cmp
pop
es
mov
xor
adc
insb
scas
loope
mov
lcall
test
jno
xchg
ret
cmp
xchg
lret
iret
outsl
jns
hlt
mov
jge
xchg
ret
fcomp
pop
test
adc
and
pop
adc
adc
sub
inc
lahf
xor
cmp
pop
dec
pop
mov
jmp
sub
pop
cmpsb
ret
or
fincstp
push
mov
and
fnstcw
je
scas
dec
aad
cmpb
cmpl
lret
jo
lods
dec
sub
xor
mov
cltd
xor
imul
and
push
movl
aam
jl
negb
xchg
cmp
imul
cmp
hlt
movsl
jnp
fdiv
iret
sub
add
dec
roll
dec
pop
mov
xchg
bnd
pusha
mov
cltd
jle
popa
mov
cmp
add
sbb
adc
mov
xchg
mov
mov
cmp
pop
dec
pop
pop
push
sub
push
push
lock
mov
mov
jle
mov
sahf
xchg
popf
adcl
pop
lret
shll
das
adc
daa
ljmp
pop
xchg
out
mov
or
mov
sbb
dec
in
fs
std
mov
or
pop
lcall
aas
push
rclb
mov
dec
mov
mov
pop
imul
sti
mov
sar
pop
dec
scas
push
ret
es
jecxz
pop
roll
xchg
loopne
dec
not
and
xor
mov
mov
xor
or
mov
mov
jmp
lds
jno
push
push
or
inc
outsl
je
xor
push
clc
adc
shlb
push
or
pop
rcll
enter
lock
loop
cmc
lea
nop
mov
pop
jecxz
ficoms
push
add
mov
cmp
scas
fstpl
enter
into
xchg
push
fdivrs
loop
out
cmp
xor
mov
mov
lret
lods
mov
popf
sbb
xor
dec
adc
sbb
inc
xchg
mov
mov
aaa
adcb
ja
pusha
xor
iret
inc
cmp
shll
xor
rclb
sub
clc
mov
xchg
mov
adc
dec
mov
xchg
scas
push
sbbb
jmp
jne
adc
dec
in
ss
aaa
jns
adc
jg
inc
in
shll
test
fabs
insb
popf
adc
popf
xor
or
daa
xor
decb
dec
fistl
or
inc
imul
aas
push
cmovb
adc
stos
mull
pop
xor
push
sbb
adcl
pop
and
aad
into
into
inc
and
mov
mov
inc
pop
push
add
jg
jmp
repnz
pop
mov
je
xchg
or
pop
aam
mov
lcall
sbb
and
fnsave
lods
push
in
icebp
mov
sub
ljmp
sbbb
cwtl
loop
pop
push
jbe
lret
movsl
add
mov
push
sti
mov
ja
sub
stos
inc
push
cmp
std
xor
mov
fucomip
cmp
in
xchg
push
decb
jecxz
int
in
test
push
imul
cmc
inc
ds
xchg
mov
sub
mov
fldl
dec
cmp
out
jae
scas
jle
dec
insl
shrb
jo
mov
mov
pushf
mov
ret
mov
lcall
sub
sbb
sti
addr16
add
js
repz
sub
das
mov
aam
mov
mov
cld
subb
repz
jecxz
dec
loop
adc
imul
push
notb
gs
sbb
xchg
pop
adc
cmp
stos
pushf
jle
inc
and
xor
mov
inc
nop
sub
inc
ficomps
scas
sbb
xchg
test
pop
fisubs
cmp
inc
or
outsb
mov
dec
mov
cmpsl
icebp
sbb
pusha
pop
cmc
aam
dec
test
aas
mov
and
stos
loop
fists
int
inc
and
stos
push
lcall
xadd
jecxz
push
mov
push
pop
mov
pop
lcall
fistpll
mov
pop
add
xchg
mov
jne
push
cmpsl
ljmp
pop
jle
jbe
push
pop
fiadds
mov
lcall
push
adc
andb
xor
or
sub
or
in
xchg
cmp
test
ja
sbb
in
push
mov
cmp
lds
divl
sarb
cltd
insb
inc
push
adc
dec
mov
and
cld
push
pop
aad
sub
xor
pop
in
hlt
push
sbb
dec
and
loope
inc
dec
stos
popa
dec
in
cli
adc
inc
flds
mov
shrb
or
bound
in
mov
popa
push
js
pop
mov
mov
cmpsl
insb
sub
cmp
inc
add
sbb
and
lods
xor
sahf
add
test
pop
subb
fidivl
dec
jmp
popf
insb
lcall
add
cmp
adc
sub
mov
push
xor
sub
sti
mov
xchg
stos
dec
imul
scas
push
cs
pop
add
xchg
mov
dec
pop
out
shrl
jle
call
sub
andl
insb
xchg
rclb
sub
lods
sbb
mov
jo
jae
push
pop
rcrb
mov
in
sbb
sbbl
in
adc
gs
movb
mov
add
cwtl
pop
jge
ret
mov
pop
ret
addl
add
push
sub
push
sub
cmpsl
xchg
jg
or
push
std
mov
xchg
or
incl
gs
xchg
sub
scas
or
shl
ss
js
push
inc
je
ljmp
aad
jne
clc
andl
sub
jae
xor
scas
xor
push
mov
pop
loope
fwait
cmp
inc
fcomps
xchg
inc
scas
shl
and
mov
fists
in
fwait
pop
clc
movb
pop
jbe
adc
jg
fcomps
pop
arpl
and
add
lahf
shll
sub
mov
in
or
daa
jge
popf
ss
or
sbb
sbb
mov
dec
cli
dec
out
mov
sub
pop
mov
out
cmp
sbb
out
xchg
pop
pop
aad
jb
pop
adc
faddl
cmp
loop
in
adc
or
fisttps
xchg
dec
sub
lahf
pop
push
pop
sbb
call
mov
mov
jge
push
test
gs
iret
and
dec
and
or
jecxz
fs
adc
imul
pusha
mov
mov
sahf
test
cmp
or
cmpsb
and
or
sub
xchg
scas
jecxz
shl
test
popa
test
es
sbb
mov
inc
aaa
pop
jle
mov
das
flds
or
lods
mov
sub
test
dec
lea
add
or
call
push
inc
xchg
adcl
dec
and
add
jecxz
fnstenv
fisttpl
jecxz
roll
mov
xchg
arpl
in
xor
pop
ret
adcb
je
mov
js
mov
leave
fcomps
lret
ja
sbb
loope
enter
cmp
and
jnp
js
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
jmp
inc
jle
add
add
add
scas
adc
push
clc
adc
repz
sbb
and
sub
mov
push
xchg
sub
mov
mov
add
cmpsl
push
test
xchg
mulb
xchg
lock
push
xlat
or
scas
std
xor
repz
ret
jg
scas
mov
arpl
aas
mov
or
sbb
mov
js
cmpsb
cmp
cmp
mov
je
pusha
inc
repnz
pop
mov
mov
dec
into
cmc
push
mov
cmp
in
mov
addr16
dec
mov
jg
adcl
sbb
loop
xorb
iret
and
and
mov
testl
out
cmp
aaa
push
mov
push
mov
testb
imul
add
xor
dec
cmp
xor
mov
dec
cmp
cli
pop
hlt
lods
add
cmc
mov
popa
lret
and
daa
rcll
lods
pop
cmpsb
inc
add
and
ficoml
outsb
mov
push
jae
stos
jge
and
shlb
and
dec
xchg
shlb
bound
js
cltd
xchg
jmp
inc
loop
ljmp
or
push
dec
mov
mov
jne
outsb
inc
push
outsb
cmp
ss
push
test
add
jnp
dec
jnp
or
fisttpll
outsb
xor
cmp
add
xor
shr
ja
mov
mov
xlat
mov
out
lds
mov
iret
insl
sbb
mov
and
xor
arpl
cltd
lods
js
mov
stc
fdivs
adc
cmp
xor
and
sub
mov
push
mov
out
fbld
and
aad
stc
push
movsl
sub
or
out
neg
jle
mov
or
mov
cmp
mov
adc
add
pop
icebp
sub
movsb
or
inc
push
addb
mov
inc
in
insb
iret
mov
xchg
cmpsl
push
adc
sbbl
xor
popa
std
movb
xchg
fst
mov
adc
rolb
mov
inc
pop
into
pusha
adc
push
add
scas
outsb
movsb
adc
fadds
fsubrs
cmpsl
loope
add
dec
cs
in
or
push
std
int
loopne
push
lock
pop
sbb
mov
nop
xor
shr
repnz
cmpl
hlt
push
icebp
fisubl
aad
adc
xor
clc
mov
in
xchg
in
push
fmuls
les
sub
fdivl
push
and
lea
out
mov
scas
and
test
pop
popa
imul
pop
fdivrs
sbb
int3
xor
fldl
pop
sti
mov
mov
je
dec
xor
jl
addl
and
ja
rcl
int3
sbb
push
cwtl
adc
lahf
add
adc
xor
bound
aaa
xor
cmp
fcmove
and
xor
test
ss
pop
in
shrb
dec
call
scas
jnp
mov
in
add
and
mov
out
std
xchg
xor
push
and
mov
pop
pop
xchg
xchg
outsb
sti
push
loop
aas
daa
push
mov
lock
inc
cld
test
add
sbb
sbbb
mov
or
cmp
pop
dec
stos
inc
sbb
inc
xchg
mov
xchg
les
add
fmul
xor
ret
push
and
subl
xor
outsl
inc
jge
pop
insl
jecxz
js
push
jge
adc
xorw
push
cmp
xor
es
rorl
pop
popa
mov
into
enter
and
sti
and
sub
mov
cmpsb
mov
push
or
sbbl
lret
aad
jne
cmp
lret
jns
mov
subb
jo
out
mov
js
test
mov
inc
pop
or
insl
test
or
orl
imul
pop
int
push
das
sbb
inc
add
addr16
mov
xchg
cmpb
push
mov
add
jmp
ss
ficompl
jg
mov
hlt
cwtl
inc
mov
jle
andb
xor
loop
add
mov
adc
scas
lods
stos
movsb
mov
movsb
pop
ds
and
cmc
es
xor
inc
loope
das
testb
mov
adc
aad
mov
inc
dec
std
xchg
mov
fadd
adc
inc
sahf
cmp
inc
mov
inc
int
mov
pop
test
sub
enter
cmc
and
test
mov
or
and
mov
and
inc
jle
jae
adc
xor
push
xor
xchg
mov
jle
or
fidivrs
lret
ljmp
stos
decb
gs
jl
or
int3
sbb
leave
enter
push
cli
cmp
adc
loope
xchg
pop
inc
and
lcall
lods
flds
repnz
in
out
xchg
stos
inc
cmp
mov
mov
lods
sub
fstpl
loope
jecxz
test
adc
xchg
xchg
push
iret
movsl
popf
orb
ss
jle
xchg
push
stos
pop
and
adc
mov
add
and
pop
sbb
repz
outsl
outsb
or
mov
fdivrs
sub
lea
gs
div
cmc
jb
pop
push
enter
lods
test
cmc
add
adc
rcll
push
pop
mov
rcll
push
inc
jl
mov
subb
pop
and
lods
pushf
jno
push
gs
sub
jg
repz
jmp
sub
je
add
mov
test
mov
mov
inc
in
sub
sub
ds
sbb
push
stc
push
int
cmp
int
jmp
xchg
iret
iret
js
or
push
pop
arpl
data16
inc
jmp
jmp
imul
xor
lds
mov
call
mov
inc
sub
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
jmp
test
and
push
mov
repz
inc
cmp
inc
xchg
mov
adc
clc
adc
mov
cmp
pop
test
lcall
jp
xlat
dec
mov
jns
dec
pop
cmp
fs
lods
call
mov
aaa
inc
gs
pop
stos
paddq
cmp
les
aaa
jmp
cmp
xchg
push
xorb
ljmp
push
out
sub
xchg
repnz
inc
das
sbb
adc
mov
sbb
inc
adc
jecxz
ds
leave
fucomi
stc
mov
dec
xchg
call
inc
std
mov
in
inc
cmp
mov
mov
lret
sti
loopne
shrb
loope
iret
jecxz
lds
ret
enter
movd
int
lock
mov
or
xchg
push
in
clc
push
push
adc
pop
jno
jb
xchg
xlat
cmp
ljmp
sub
cmp
mov
cmc
xor
pop
negl
cld
pop
data16
cmpsl
lods
out
add
push
sbb
push
stc
cmpsb
fnstcw
int
pop
xor
out
or
cwtl
in
add
cmp
pop
sub
sbb
jmp
movswl
jle
imul
mov
in
xor
mov
or
lahf
jo
jg
pop
and
popf
dec
mov
and
je
or
lcall
push
ja
rcr
lods
stos
add
xor
fadds
pop
pop
jl
mov
test
inc
mov
sub
push
fstps
aas
fstpl
xor
popa
mov
mov
pop
and
cmpsl
jge
add
mov
dec
mov
adc
sbb
test
push
push
dec
mov
inc
pushf
add
or
ficoms
mov
sub
shrb
push
outsb
jmp
cmpsb
xlat
pop
jnp
pop
add
faddl
cld
test
inc
mov
mov
mov
ja
xor
inc
pop
pop
inc
cmp
xchg
jns
mov
push
or
out
stc
pop
or
roll
pop
jle
cmp
jnp
test
fsubrs
mov
popf
mov
loop
loopne
pop
mov
fiaddl
jnp
dec
xor
dec
les
and
mov
jge
adc
mov
inc
shr
lret
orb
jle
mov
and
cs
xor
repz
mov
push
mov
push
rcr
sub
mov
jl
mov
test
xor
push
movsb
test
fildl
jns
mov
sub
jg
or
xor
test
repnz
and
jnp
mov
mov
mov
test
cmp
jecxz
in
rorb
jg
sbbl
jg
mov
pop
mov
mov
movsb
in
or
dec
inc
or
out
push
cld
push
popf
jne
jns
xor
xchg
ss
das
mov
es
mov
ss
pushf
notl
or
xor
mov
jns
lret
gs
aad
mov
or
insb
movsl
jbe
call
rcll
aaa
mov
xor
das
mov
dec
jb
push
es
ss
dec
jo
mulb
inc
or
and
pop
add
ja
or
mov
push
sbb
xchg
lock
out
and
addr16
into
test
xor
jb
fnstcw
xor
xchg
dec
and
int
outsl
jbe
or
jb
xchg
rorl
and
test
aas
sub
lods
mov
push
roll
mov
jg
daa
scas
fcomps
sub
dec
clc
cmp
les
cwtl
lea
xchg
into
jl
jg
sbb
out
loopne
int3
push
or
or
bound
sti
ret
push
dec
xlat
adc
mov
fcoml
setg
inc
test
leave
push
enter
shl
aad
dec
aam
cmp
cmp
in
out
inc
inc
pusha
lods
push
gs
gs
out
and
mov
stc
mov
lods
icebp
pop
xchg
sub
inc
out
lcall
pop
loope
mov
mov
or
subb
xorl
das
outsl
cmp
std
add
xchg
xor
sub
lods
cmp
xchg
push
into
loop
sub
movsb
mov
movsl
outsb
sub
test
in
scas
fistps
mov
mov
jle
jmp
jns
and
push
int
aad
stos
roll
adc
dec
loopne
cltd
loop
shrb
dec
cli
jg
cmp
es
or
xchg
popa
jne
push
mov
sbb
cmpl
inc
mov
cli
fidivrl
mov
mov
mov
xor
cmpsl
add
dec
and
mov
popf
out
and
lods
sahf
je
dec
or
jp
int3
das
les
std
fstps
add
xor
mov
and
es
mov
mov
int3
lcall
jle
je
push
scas
and
mov
add
add
and
je
repz
test
xor
cmpsl
icebp
sub
stos
adc
mull
pop
xor
jo
mov
xchg
mov
xlat
mov
sbb
or
inc
or
mov
dec
push
jle
xor
mov
xor
or
fdivl
jno
inc
rorl
repz
cmp
mov
das
jle
js
dec
loopne
mov
sbb
andb
imul
inc
shll
push
or
cmp
in
adc
das
mov
xchg
fisubrl
inc
dec
push
mov
test
pop
and
outsb
cmp
pop
out
adc
inc
incb
cmpsb
andl
in
or
xchg
cmp
mov
out
mov
adc
xchg
jno
ret
aam
leave
leave
jp
ret
adc
insb
aad
fdivrl
aas
mov
push
outsl
push
cmovno
push
or
sub
idivl
movsb
cld
test
les
stos
mov
or
xor
decl
rcrl
sti
fwait
mov
jbe
sbb
add
dec
nop
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
jmp
movsl
mov
mov
inc
repz
cmp
mov
adc
int
sti
pop
sub
mov
mov
inc
mov
xor
daa
aam
xchg
cmp
push
mov
bswap
mov
es
ret
cmc
cwtl
ficomps
jmp
xor
jle
icebp
mov
out
aad
aaa
adc
dec
and
sbb
sub
xchg
iret
mov
sbb
mov
movsb
leave
jg
jb
or
daa
adc
aas
push
out
decl
mov
movsl
idivl
sti
xchg
jl
push
jge
sbbb
adc
lcall
addr16
shlb
jns
lds
push
test
push
icebp
cmp
fsubrl
sar
push
mov
xlat
dec
not
adc
jne
jle
ret
btr
mov
into
xchg
data16
dec
shll
test
callw
cmp
leave
fwait
je
or
mov
jp
loopne
and
sbb
sbb
fidivrl
jbe
sub
loope
cmp
sbb
orl
sub
dec
bound
push
in
stc
mov
pop
clc
and
pop
mov
cmc
and
cmp
and
popf
or
inc
pop
mov
out
subl
jge
enter
outsb
xchg
ss
pop
push
test
cmp
push
mov
ret
sub
cwtl
xor
int
xor
fs
pop
mov
sbb
insl
add
fcom
sti
in
sbb
int
jg
or
iret
push
scas
pop
pop
pushf
nop
ret
dec
and
jg
mov
inc
std
and
icebp
sbb
movsb
mov
aam
movsl
xchg
and
movsl
and
push
in
pop
and
cmp
sahf
adc
test
inc
inc
xorl
pop
jmp
jl
stc
jnp
pop
push
xchg
adc
aaa
push
push
shrb
aas
into
sbb
scas
sbb
jmp
popl
or
out
inc
add
sbb
in
sub
pop
pop
idivb
inc
sbb
lods
push
cmpsl
cmp
gs
push
jb
fcmovne
sahf
loop
test
cmpsb
pop
or
cld
mov
mov
push
shlb
mov
mov
cs
fdivrl
inc
lret
or
in
loop
mov
subl
sub
ss
stos
mov
ss
dec
pop
push
out
dec
jae
jmp
je
aaa
iret
mov
xchg
adc
je
jl
ljmp
add
int
pop
test
inc
sahf
outsl
or
mov
sbbb
pop
xchg
sahf
mov
xor
loopne
cmp
xchg
imul
push
mov
and
mov
inc
cmp
jecxz
pop
inc
mov
and
push
and
jo
push
mov
cmp
and
mov
xor
aas
repz
push
mov
jp
mov
int
arpl
push
adc
ja
pop
pusha
popa
push
or
mov
mov
loope
mov
sbb
sub
leave
hlt
pushf
jne
aam
pop
in
imul
push
mov
into
add
daa
jo
adc
mov
flds
xor
cltd
es
fildll
xor
and
xor
mov
popf
inc
cmp
mov
int
aas
and
mov
js
jmp
scas
ds
lock
out
shr
aas
push
imul
mov
jae
cmp
fcmovne
fnstenv
adc
inc
xchg
sti
int
pushw
stos
mov
mov
jge
cwtl
cld
stc
sub
sahf
fwait
repnz
push
loop
cmp
sub
imul
lret
push
sub
or
sub
aad
divl
cmp
dec
popa
pop
sub
fildl
mov
xchg
repnz
bound
mov
push
jo
push
cli
daa
pop
cli
mov
xchg
into
in
mov
inc
ja
andb
dec
test
mov
ret
insb
bound
insb
dec
adc
aad
push
and
icebp
sub
ret
push
xchg
mov
push
pop
test
mov
mov
push
add
ret
push
andl
push
mov
xor
lock
pop
jns
add
pop
push
popa
sbbb
and
and
les
inc
mov
call
and
adc
fildl
jo
lcall
fsubr
hlt
pop
into
cmp
rolb
fsubrl
repz
pop
pop
or
sahf
dec
pop
xor
fildl
das
out
sbb
aad
adc
sbb
cmp
xor
adc
jnp
xorl
add
mov
push
in
xchg
dec
sub
fwait
mov
inc
pop
xchg
sub
int3
rcrb
sub
xchg
leave
lcall
outsl
cld
mov
int3
dec
int3
pop
inc
int
mov
lcall
mov
mov
pop
mov
mov
out
and
mov
test
mov
test
mov
jb
and
repz
pop
adcb
fdivrs
inc
cmp
inc
test
loop
xor
sub
outsl
std
dec
xor
jno
pop
jno
mov
dec
out
divb
jnp
lahf
test
mov
dec
sub
aad
gs
roll
mov
jnp
sub
ljmp
inc
or
pop
pop
ret
incb
lods
leave
mov
push
fisubl
pop
scas
xor
jmp
fdivs
les
push
and
mov
test
jbe
lods
ds
loope
or
pusha
mov
ss
or
xchg
mov
cli
fildl
cld
lret
cltd
lret
test
mov
cmp
add
dec
ja
orb
or
cmp
xorl
mov
pushf
iret
aad
pop
xchg
fidivrs
pop
mov
jp
xlat
add
xorb
cmc
pop
insl
add
scas
out
notl
push
imul
imul
mov
push
aam
lcall
jbe
sub
int3
or
xchg
mov
rorl
add
jmp
inc
bound
or
mov
inc
cs
arpl
mov
cltd
push
mov
movsl
xchg
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
jmp
xchg
inc
aad
les
push
fmuls
add
xchg
adc
push
clc
adc
sbb
dec
out
xchg
mov
xchg
faddl
sbbb
pop
jo
in
or
int
sbbl
and
mov
dec
xor
fidivs
sub
mov
sub
nop
jl
vpminub
sub
mov
sti
sbb
test
cmp
lea
rorl
xchg
roll
cld
xchg
dec
arpl
fcoms
mov
aam
daa
inc
or
xchg
pop
xchg
cld
out
and
jmp
dec
sbb
xchg
xor
add
std
sbb
mov
out
mov
ror
int3
mov
maskmovq
mov
pop
jg
aam
jno
imull
out
rcll
lcall
subb
fistl
jae
rclb
jno
mov
or
jo
pop
popa
aam
insl
mov
cmc
jns
jo
es
xchg
pop
daa
divb
jae
jae
mov
pop
push
les
clc
pop
aam
loop
xchg
jmp
loop
mov
das
mov
enter
sbb
rolb
test
mov
add
add
clc
xor
aas
pop
outsb
les
xchg
mov
stc
arpl
push
adc
loope
sub
or
sub
xchg
cmp
and
or
lods
xlat
add
imul
adc
mov
sub
popf
icebp
and
lret
jns
int3
xchg
sub
jge
pusha
mov
repz
dec
dec
cmc
in
or
jecxz
cwtl
idivb
lret
mov
sub
push
stc
xchg
ja
daa
cmpl
ja
jge
fisubrs
jb
int
js
je
ja
and
adc
data16
ror
les
xchg
inc
sub
loope
lds
mov
add
or
mov
and
adcb
mov
jge
imul
adc
mov
jg
bound
pop
iret
sahf
mulb
mov
sti
mov
loopne
adc
xor
addb
aam
aam
subl
inc
ret
sarl
mov
lahf
icebp
aam
xchg
or
pop
xor
or
inc
jg
inc
loop
notl
xorb
and
pop
pop
popf
sahf
inc
dec
cmc
int3
jg
jo
mov
push
std
hlt
pop
shl
hlt
mov
jne
movsl
mov
dec
movsb
ret
or
dec
jo
push
cmp
sbb
sti
inc
adc
lock
inc
cmc
stos
and
adcl
and
push
jp
sahf
cmp
lods
loopne
std
andl
mov
andl
pushf
or
cmp
es
sbb
add
jge
cli
sbb
fldcw
xchg
mov
in
mov
jge
or
orl
lret
lods
outsb
aad
int3
push
xorl
addl
fidivrl
pop
mov
xchg
or
dec
dec
xor
xchg
mov
sbb
into
sub
dec
insb
fistpl
xchg
mov
inc
dec
sbb
jb
add
add
stos
jns
cli
dec
movsl
dec
in
test
mov
cwtl
lret
mov
xor
popa
xchg
lahf
movsb
movsb
and
or
cmp
fcomps
xor
mov
xor
enter
mov
frstor
xchg
pop
test
inc
in
jp
cld
sub
mov
pushf
sub
sahf
imul
shll
out
inc
scas
cmp
xchg
xchg
arpl
xor
and
mov
insb
lods
fists
inc
xor
int3
enter
xor
sahf
pop
stos
ds
fxch
pushl
xchg
jge
pop
push
dec
mov
inc
inc
inc
mov
js
cmc
inc
rcrl
jge
add
cmp
out
arpl
mov
xchg
fmuls
incb
or
push
loopne
jmp
iret
jo
dec
jne
sub
loopne
adc
xor
pushf
mov
loopne
fildl
clc
loop
sarl
and
sbb
mov
push
fs
fists
cmp
lods
sub
fbstp
fiaddl
xchg
sub
dec
in
or
cs
cli
ja
xchg
adc
mov
xchg
test
mov
rcr
and
push
out
movsl
fwait
sahf
sub
sub
pop
cmp
pop
cmp
imul
fldl2e
out
push
inc
or
out
adc
push
pop
cmc
jnp
pop
fnstenv
sbb
xchg
aam
ret
add
jne
cmp
jno
shll
outsb
sbb
fcmove
xchg
je
jge
mov
je
cmpsl
pop
sbb
movsb
bnd
inc
lret
xchg
mov
mov
pop
pop
repnz
mov
lcall
ja
sahf
loopne
movl
clc
scas
fstl
addb
lds
fcomps
xchg
insl
imul
push
loope
dec
pop
in
sbb
cmp
xor
xor
enter
aam
adc
ret
hlt
fdivrs
inc
cmp
inc
jmp
cmpsl
jnp
roll
enter
call
arpl
insl
xor
cmp
popa
push
fnstsw
test
push
xor
lods
mov
bound
pop
in
andl
push
lods
call
push
sbb
inc
inc
mov
jae
cmp
mov
dec
jb
and
pop
stc
rclb
call
sbb
sbb
and
push
rol
mov
sub
sti
push
dec
pop
test
int
dec
sub
les
into
daa
inc
aaa
cld
into
es
jae
insl
pop
push
aad
mov
adc
mov
imul
ds
mov
mov
and
out
hlt
negb
insb
aaa
push
xchg
mov
mov
lea
add
nop
mov
jae
adc
fdivs
dec
xor
loope
popl
test
sbb
out
cs
test
in
dec
pop
cmpsl
xchg
cld
xchg
leave
push
jne
movsl
inc
sti
push
call
pop
call
cmp
lock
cltd
sub
xor
push
and
mov
xor
sbb
mov
xor
shld
xor
mov
mov
shl
jmp
lret
xchg
cli
icebp
mov
fiadds
xchg
cmc
inc
push
xchg
push
clc
adc
sbbl
cld
xor
mov
xor
mov
push
cs
xchg
jg
test
pusha
jmp
adc
fsubs
jmp
jo
test
and
add
sbb
aad
mov
int
pop
call
push
jbe
jg
fbstp
inc
xchg
mov
popa
insb
xor
and
xchg
mov
mov
repnz
clc
fadd
iret
stc
xchg
imul
stc
das
push
push
ds
or
pop
jno
add
mov
test
mov
ljmp
inc
fsubrp
or
test
and
in
lcall
push
mov
std
loope
jno
into
add
dec
cmp
and
clc
dec
scas
imul
lods
push
inc
stos
ljmp
pop
in
fldl
inc
pop
and
aas
movsb
xor
test
and
push
test
add
dec
sub
push
add
leave
rorl
mov
ror
mov
cmpl
xchg
movsl
or
sub
add
cwtl
xchg
xchg
sahf
loope
ffreep
insb
xchg
cmp
xchg
xchg
decb
imul
and
or
mov
add
or
cmc
and
push
xchg
mov
pop
mov
inc
out
daa
push
mov
fs
iret
inc
arpl
mov
out
mov
push
cmp
test
loop
xchg
sub
pop
daa
mov
add
jb
bound
out
inc
adc
loop
out
jnp
push
xor
push
dec
dec
xchg
jl
mov
outsl
fdivrl
pop
or
jl
cmp
and
lds
dec
rorb
loope
mov
scas
repnz
push
das
jae
rorl
je
xlat
loop
mov
mov
out
inc
fwait
jge
rcrb
mov
push
ret
shrb
adc
subl
sub
dec
sub
and
bound
adc
mov
es
mov
rorl
lock
jb
pushf
int
inc
js
push
or
push
mov
or
mov
subl
decb
cmp
mov
mov
mov
xor
adc
xchg
std
aad
fxch
inc
cmc
enter
sarb
dec
pop
pushw
or
mov
sub
dec
mov
mov
pusha
jo
sbb
mov
xchg
out
arpl
ljmp
pusha
or
add
ljmp
sub
dec
lahf
in
aaa
test
repz
pop
test
mov
inc
loopne
rorb
pop
jge
aaa
fstl
std
mov
cli
adc
mov
cmp
inc
dec
jecxz
in
fldcw
add
inc
dec
fld
in
pop
adc
xchg
ret
loopne
pushw
add
or
adc
push
jp
push
mov
and
mov
jl
daa
adc
scas
pop
ret
push
sub
dec
xchg
jns
rcl
mov
cmc
or
sbb
enter
push
xchg
in
ret
je
das
jns
mov
mov
sti
push
subb
or
pop
loop
sub
mov
cmp
sbb
mov
push
jno,pn
out
jo
push
mov
jbe
loope
and
sbb
movsl
lret
push
mov
inc
cmpsb
addr16
sbb
inc
mov
bound
lret
add
aam
cltd
push
pop
xchg
mov
xchg
mov
adcb
xchg
popf
mov
pop
jne
sub
aad
cmp
in
jg
and
xchg
enter
movsl
or
popa
mov
es
pop
push
movsb
adc
js
mov
xchg
fldl
push
aam
lahf
sbb
pop
test
lods
cmp
andb
rclb
push
jp
push
ljmp
iret
cmp
push
fstl
mov
xchg
mov
mov
cmp
loope
add
outsb
mov
rcll
and
ljmp
lods
add
mov
cmpsl
fildll
ds
negl
test
call
add
ret
clc
xchg
dec
pop
popf
fiadds
push
sub
cmc
pop
dec
and
lock
sbbl
ret
mov
xor
inc
repnz
or
int3
movsb
or
movsb
dec
dec
and
clc
and
scas
push
mov
inc
daa
in
or
popf
and
cmpsb
imulb
mov
in
cmc
daa
rorb
addr16
shll
jp
xor
dec
sub
out
subl
scas
cmp
movsb
movsl
add
xlat
fsubp
jl
int3
mov
pop
cltd
add
insl
push
jmp
sub
mov
cld
jnp
dec
aam
push
mov
sub
repz
std
cmpsb
cs
push
cmp
adcl
fucom
inc
sub
cmp
pop
cltd
sti
shll
sbb
or
sbb
xchg
cmp
fwait
popf
iret
loop
outsb
cmp
insb
mov
imul
ret
leave
rorb
lahf
mov
sub
addr16
fwait
movsb
jns
bound
or
ret
pop
adc
rcl
stc
outsb
jae
loope
adc
test
nop
and
and
shll
cmp
test
sahf
test
cwtl
push
pop
out
mov
sahf
pop
push
xchg
add
aas
loope
sahf
fisttpll
cli
cmpsl
aad
aaa
jnp
sub
enter
xchg
jno
stos
mov
push
dec
and
out
mov
mov
out
nop
add
mov
aam
adc
jmp
ret
cmp
mov
cmp
xchg
mov
jmp
cmpsb
or
add
jl
mov
pusha
mov
mov
in
lods
push
sub
cmp
cld
lahf
stc
jge
push
inc
push
inc
xchg
push
or
adc
ljmp
movsl
js
std
sub
push
lods
mov
jl
stos
xchg
ds
cmp
popa
sbb
rorl
pop
clc
in
mov
inc
mov
push
xchg
dec
cld
fimull
inc
mov
daa
int3
lret
add
dec
movsb
pop
dec
ja
pop
iret
and
mov
in
mov
mov
xor
mov
cmp
jne
mov
jmp
mov
imul
push
mov
push
adc
push
nop
mov
or
sub
out
xor
and
inc
jnp
sub
mov
sbb
dec
popa
jno
xor
inc
popa
push
cli
sbbb
shl
insl
arpl
iret
mov
inc
add
jbe
push
jecxz
push
cmp
lret
insl
movsb
mov
xor
pop
dec
mov
es
inc
insl
push
xor
and
aam
das
andb
or
dec
dec
out
mulb
jg
mov
inc
inc
push
dec
fld
sbb
or
mov
pop
mov
es
lock
sarl
mov
adc
addl
mov
in
push
in
pop
loope
fcomi
je
pop
fwait
sti
subb
loope
push
mov
cmp
repnz
call
xchg
inc
cld
xor
adc
outsb
into
popf
sub
loope
jg
sbb
xor
imul
jae
inc
xchg
inc
es
adc
imul
mov
loopne
jmp
cmpsb
frstor
fists
sbb
dec
loope
cmpsb
mov
push
cmp
xchg
mov
push
rcll
stos
mov
test
xor
lods
or
adc
or
push
sti
mov
inc
push
lds
ja
fisubl
sub
aaa
ja
or
retw
cltd
sub
jp
mov
or
cmpsl
orb
mov
stc
arpl
sbb
leave
jp
sbb
inc
scas
cld
sahf
inc
imul
cmp
nop
mov
arpl
movsl
inc
test
or
push
pop
out
jbe
xor
lods
xchg
pop
push
pop
push
js
imul
cmc
std
jne
test
inc
push
int3
push
xor
test
add
enter
add
mov
fdivp
xor
push
mov
rcrb
lea
jge
dec
mov
movsb
data16
cmp
and
rclb
sbb
dec
inc
test
outsb
jl
icebp
in
movsl
ret
stos
dec
jo
ret
add
inc
push
lret
roll
testl
dec
cmp
lea
in
fcoml
out
bound
lods
sub
pushw
and
mov
push
sbb
inc
rclb
js
mov
in
jno
rorl
jo
andl
add
insl
ss
push
bound
add
push
pop
negb
negl
jmp
out
add
xchg
cs
lret
mov
daa
mov
or
adc
pop
sbb
fistl
and
insl
cmp
fcomps
xchg
mov
loope
pop
int3
xchg
rolb
mov
jl
xor
mov
clc
sbb
loope
jecxz
push
ret
das
stos
push
pop
cmp
jl
fldenv
shl
xchg
mov
inc
pop
jecxz
scas
int
jl
inc
popa
lret
push
xchg
ljmp
pop
inc
dec
xchg
inc
movsl
or
and
or
rcrl
iret
push
in
inc
mov
je
inc
sbb
sub
push
pop
jp
lret
lret
mov
adc
fimuls
test
push
out
repz
xchg
push
out
cmp
icebp
jnp
xchg
inc
loope
mov
push
or
xchg
iret
shrb
in
push
inc
pop
jle
push
in
adc
ss
add
ret
movl
loope
cwtl
add
das
xor
mov
ror
ret
idivl
jmp
nop
or
out
in
fisubl
mov
mov
lods
das
enter
mov
jns
pop
repnz
or
jecxz
xchg
add
mov
aam
in
jnp
sbb
sub
jbe
or
sarb
or
and
shll
in
movsl
push
iret
imul
pop
ds
lea
rcrl
hlt
push
aam
and
fwait
pushf
mov
push
push
inc
jmp
fwait
sub
xlat
mov
sbb
test
test
stos
lret
push
xor
xor
lret
cmp
orl
xchg
imul
jnp
cmp
cmp
neg
pushf
push
mov
add
xor
mov
mov
cmp
jns
push
imul
mov
jns
cmc
pop
dec
je
aad
push
sbb
in
push
pop
test
fisttps
mov
mov
cmpsb
mov
mov
call
fsubl
inc
mov
cld
add
xchg
fucom
fcomp
push
fwait
add
fwait
cwtl
push
movsb
fucomi
ret
mov
sub
arpl
dec
aam
cmpb
dec
sarb
xor
adc
nop
lcall
jmp
jbe
and
push
cmc
subb
hlt
push
push
pop
lret
jecxz
jmp
push
and
fldenv
sbb
sub
pop
icebp
roll
arpl
rorb
add
xchg
jns
add
addr16
in
pop
movsb
dec
mov
leave
adc
cwtl
or
push
inc
xchg
rolb
imul
push
insb
pop
jmp
push
rorb
push
iret
cmp
aaa
std
pop
mov
mov
andb
test
xchg
mov
insb
add
int
mov
mov
dec
mov
out
jl
jae
mov
dec
cld
outsl
lods
dec
daa
lcall
outsb
dec
pop
xlat
cmp
xor
movl
pop
sbb
or
sti
lcall
imul
lret
jae
pop
and
ret
and
out
and
es
or
cmpsl
sahf
out
and
or
jbe
cli
jg
loop
mov
fisubl
mov
dec
bnd
push
popa
dec
mov
lret
mov
pushf
int3
jecxz
jp
inc
js,pt
mov
pop
xchg
inc
mov
cwtl
sub
sub
scas
adc
daa
mov
pop
sub
push
aaa
stos
jp
inc
test
pop
es
pop
aam
xor
fwait
adc
mov
mov
pusha
adc
and
pop
lret
inc
rorb
pushf
ret
ret
push
and
lods
idivl
cmp
testb
cmpsb
sbb
add
mov
mov
mov
xor
shl
mov
mov
xor
jmp
dec
lds
stc
or
loopne
in
daa
loop
aad
adc
push
clc
adc
mov
std
inc
sbb
jp
push
rorl
mov
or
push
xor
insb
pop
mov
lods
jne
xor
mov
dec
cmp
lods
in
xchg
adcl
loop
int3
clc
imul
mov
movsl
jge
xlat
dec
inc
mov
add
jae
xchg
out
xchg
inc
sarb
call
jecxz
or
aad
sbb
lods
fidivs
sbb
mov
pop
imul
movsl
and
outsl
sahf
jmp
jg
repnz
fisttps
sar
mov
mov
popa
data16
lock
mov
jo
idivb
sahf
fs
xor
cmpsb
mov
test
out
push
or
sbb
pop
test
cmp
cmp
mov
mov
or
push
or
lods
jl
pop
dec
rcrl
push
sbb
cmc
int
inc
cmp
push
adc
sbb
mov
mov
ret
adc
mov
aas
and
mov
mov
shll
movsl
not
shl
in
stos
xchg
pop
test
scas
repnz
into
sbb
push
pop
es
lahf
ljmp
xchg
jae
cmp
ljmp
out
push
add
pushf
adc
pop
or
push
push
cltd
es
pop
test
stc
stos
adc
adc
sbbb
out
mov
aas
stc
xchg
sbb
dec
push
push
test
in
jl
sub
fists
cmc
xchg
pop
mov
stos
lods
xchg
jno
lret
push
loope
push
rcll
fs
pop
mov
stos
mov
in
add
std
jbe
mov
cs
or
ret
xor
mov
shl
jg
inc
repnz
and
pop
out
mov
rcrb
fcomi
sub
daa
cmp
mov
rcrb
sub
les
mov
mov
adc
xchg
dec
inc
scas
jl
cmpsl
and
mov
lods
loopne
cwtl
jae
and
mov
push
jb
cmp
inc
insl
lock
in
fiadds
inc
test
jmp
mov
repnz
shr
add
or
sub
mov
cmp
call
stos
sub
mov
out
cvtpi2ps
inc
push
cs
je
cs
std
sbb
or
mov
sub
push
pop
in
outsb
decb
and
fstps
divb
xor
lods
insb
jg
mov
add
and
xchg
inc
sahf
outsl
pusha
mov
ficomps
aaa
sub
dec
add
imul
fnstcw
mov
fwait
ret
repz
inc
mov
test
rcrl
xchg
pop
cld
cmp
jb
sub
xchg
jae
inc
mov
pop
push
mov
jnp
ret
roll
dec
lock
push
outsb
ss
int3
fs
shl
sub
inc
stos
andb
les
das
ljmp
sbb
mov
xor
jle
mov
mov
or
out
jbe
lods
xor
xlat
push
xchg
mov
ret
repnz
jp
sub
jbe
ret
xor
pop
xor
push
pop
or
pop
push
lea
inc
xchg
inc
loopne
mov
jle
nop
or
dec
mov
cmp
cmp
xor
fldl2e
lcall
and
or
leave
pop
or
pop
shlb
aam
std
mov
xor
pop
popf
jmp
je
jmp
xchg
aaa
jge
ljmp
push
cmp
shlb
mov
out
sub
dec
mov
fdivr
hlt
pop
jle
mov
jl
add
sub
in
or
xchg
mov
or
push
inc
aad
ja
pop
mov
dec
scas
push
xchg
cltd
clc
out
jge
enter
jmp
mov
lods
cmp
add
cli
aam
add
nop
mov
enter
icebp
xor
jne
call
int3
ds
subl
cmp
jnp
int3
cs
xor
es
xor
mov
gs
push
leave
int
out
rcl
and
ret
adc
in
fsts
mov
or
aaa
sub
fisttps
or
lods
and
sbb
mov
pop
aad
cmp
xlat
sbb
xor
sub
repnz
push
cli
shll
push
ljmp
decb
pop
jg
and
loopne
pop
cmpsb
shlb
cltd
jo
call
add
pop
sbb
in
lods
and
and
sahf
cmpb
lret
add
mov
mov
xchg
outsl
xchg
dec
out
stc
lods
sub
adc
dec
cmpsb
imul
ljmp
fstps
cli
xor
push
data16
jnp
mov
ds
dec
pop
fistl
popf
bound
mov
sbbb
insl
nop
dec
lahf
mov
iret
xchg
mov
push
lcall
mov
daa
sbb
ret
dec
sti
mov
sub
inc
pushw
arpl
scas
cmp
enter
loopne
push
pop
dec
inc
cld
cwtl
mov
bound
mov
mov
cmc
lods
jbe
cwtl
and
movnti
cmpsb
and
notl
leave
cwtl
scas
xor
mov
sti
shlb
ss
xor
aaa
into
jb
and
aaa
push
je
scas
out
mov
pop
test
pushf
dec
fdivs
mov
outsl
jl
push
sahf
jae
cmp
sti
jle
add
or
ss
scas
jle
sub
mov
sub
sub
jbe
push
pusha
or
outsb
das
push
jl
cmc
dec
push
push
cmp
pop
push
pop
jp
incb
das
shl
enter
add
xchg
mov
sahf
test
cwtl
mov
and
sub
imul
pop
mov
sbb
push
and
idivl
notl
or
push
in
dec
jbe
mov
sar
jb
add
mov
ds
pop
jne
out
mov
push
rorb
inc
imul
incl
xor
pop
outsb
mov
adc
push
add
cld
push
add
cmpsl
sbb
jbe
es
sbb
test
push
clc
adc
or
push
dec
or
jp
hlt
xor
push
ret
add
dec
jp
pusha
ds
dec
mov
sbb
add
insl
cli
sbb
cmc
add
mov
push
scas
daa
mov
add
aaa
xchg
insl
aaa
or
push
add
sub
in
mov
test
cld
push
int
mov
jmp
push
xchg
mov
fcoms
dec
push
mov
jecxz
mov
sahf
xor
push
in
push
cmp
test
stc
pusha
clc
jp
sbb
in
dec
aaa
test
sub
ljmp
stos
in
sub
es
out
fucomp
and
add
shlb
aas
int3
inc
xor
aam
ret
sbb
sbb
fwait
push
je
shlb
jbe
push
dec
aam
pop
rorb
xor
xchg
dec
mov
mov
xchg
scas
pop
ror
push
dec
sub
mov
aaa
and
inc
add
and
ret
dec
imul
xlat
sbb
cmp
dec
out
xor
cmpsb
dec
repnz
fs
mov
sbb
imul
aam
hlt
int
je
dec
addr16
add
push
pop
jae
mov
cmp
in
jbe
cvtps2pi
adc
or
leave
shrl
ret
les
cmp
sbb
mov
movsb
in
mov
lret
adc
stos
jp
fstl
mov
push
jecxz
adc
repz
aam
dec
jns
data16
es
push
xchg
jo
jmp
adc
in
add
or
push
dec
mov
sub
mov
jo
or
jg
fwait
jp
test
mov
cmp
into
mov
inc
cmp
jno
pop
xor
loop
lret
minps
daa
jmp
insb
clc
int
mov
loop
je
rolb
fiaddl
repz
sbbb
mov
mov
cmpsl
sbb
outsl
stos
mov
push
inc
orl
sub
in
pop
xchg
scas
loop
fistps
mov
pop
in
fldpi
inc
ja
mov
push
mov
fidivl
rcrb
adc
fnstcw
xchg
jbe
sub
outsl
outsb
and
xchg
mov
mov
in
cmpsl
sbb
mov
xor
push
cli
cmpsb
mov
or
inc
jecxz
stos
fldt
daa
lock
shl
mov
pusha
and
pop
sub
stos
add
xchg
ss
dec
movsl
test
cwtl
pop
sub
pop
sbb
inc
aaa
push
repnz
roll
loop
inc
cld
mov
dec
sub
rorl
ret
sub
push
pop
xchg
cltd
xor
jge
jnp
movl
sbb
jb
mov
mov
dec
xor
push
insb
dec
cld
lret
mov
xchg
xchg
sbb
loope
xor
cs
sbb
mov
pop
aad
mov
stos
add
les
hlt
pop
push
xchg
or
add
in
pop
inc
cli
insl
scas
mov
mov
push
pop
inc
mov
sub
out
push
test
iret
mov
int3
cmp
mov
negl
and
mov
sub
loop
daa
in
test
and
jp
rcll
adc
je
sahf
adc
pop
xor
loope
in
or
cmc
fstpt
xlat
sbb
mov
nop
imul
xchg
inc
enter
insl
xor
jnp
jl
lds
cmp
sbb
mulb
mov
iret
mov
pop
mov
ds
mov
cs
rorb
lock
repnz
or
lods
stc
mov
dec
sti
jno
pop
jo
push
sub
mov
movsb
mov
scas
push
int
fdiv
je
mov
ljmp
mov
inc
xor
addl
aam
test
out
mov
loopne
sub
fldt
iret
call
lret
repnz
loopne
cmp
shlb
aam
cmc
adc
xchg
pop
pop
or
jle
cmp
pop
orb
mov
inc
and
jmp
jg
cwtl
mov
inc
adcb
jg
and
shlb
in
adc
pop
add
movsb
pusha
mov
mov
fistpll
push
test
cmpsl
pop
es
mov
add
enter
push
jns
int
imul
push
fwait
popf
jno
mov
int
inc
stos
mov
andb
adc
cmp
adcb
adc
push
cmpsb
dec
pop
push
mov
push
inc
pop
or
cld
sti
in
cmp
hlt
data16
into
dec
dec
push
xchg
mov
ds
testl
adc
out
out
jecxz
les
sub
xchg
fstps
fadds
repz
shll
push
or
mov
add
repz
cld
and
divb
mov
cmp
cmp
scas
push
and
mov
and
in
icebp
or
lcall
sahf
outsb
pop
enter
jb
iret
mov
mov
mov
mov
sbb
cmpsl
lds
adc
sub
fdivl
jno
ret
pop
loopne
xor
inc
cmp
dec
cmp
add
push
ss
test
shl
iret
jge
and
mov
lock
mov
jns
pop
xchg
and
jecxz
jp
mov
dec
rcll
mov
fisubs
nop
inc
imul
imul
ja
inc
sarl
sub
sub
jnp
push
addr16
push
cld
mov
pop
push
inc
and
fdiv
cwtl
cmp
dec
gs
hlt
jge
das
push
ss
int3
sub
adc
ss
add
enter
js
lock
mov
rorl
test
test
xchg
pop
sub
shl
sahf
xorb
aas
lea
jge
pop
xchg
inc
cld
leave
fs
add
andl
repz
lret
xchg
adc
cmp
inc
out
popf
cmp
stc
mov
jbe
arpl
shrd
or
shr
mov
mov
or
mov
mov
push
jmp
adc
outsb
mov
mov
rcl
hlt
push
push
adc
push
clc
adc
cld
cld
dec
push
or
dec
sarb
popa
test
clc
es
lret
add
xchg
push
cmp
shrb
pop
movsl
jecxz
cmp
lea
das
dec
sahf
mov
jmp
int
cmc
jnp
jmp
add
xchg
xor
repz
pop
and
sub
inc
aaa
lods
daa
movsb
les
mov
sbb
pusha
cmp
inc
mov
and
pop
stc
es
push
and
push
sub
inc
sub
inc
call
or
sbb
mov
or
lret
sahf
emms
addr16
adc
xchg
loopne
pop
push
pop
xchg
add
dec
dec
fildl
roll
cmp
lahf
sbb
pusha
dec
negb
mov
rcrl
or
dec
mov
inc
jbe
xchg
lds
adc
adc
pusha
sahf
lock
shrb
or
fwait
lods
shlb
adc
pushf
scas
pop
and
fisttpll
mov
jge
pop
or
mov
movsl
xchg
adc
je
ja
mov
out
mov
adc
and
fwait
xchg
rorb
arpl
push
inc
sbb
andb
pop
xor
and
test
ds
xor
sub
mov
outsl
iret
or
je
lret
mov
and
orl
mov
cmp
rorb
adc
int
std
inc
mov
xchg
lcall
add
stos
andb
and
pop
cli
subl
ror
push
jne
hlt
xchg
fsts
xchg
sbb
pop
leave
adc
adc
aad
push
adc
addr16
xchg
subb
sub
pushf
sub
and
lahf
mov
sbb
mov
test
pushf
mov
scas
cmp
rorb
decb
jne
cmp
xor
jae
sub
fdiv
dec
fstps
or
push
shll
mov
arpl
lods
sti
xor
jl
xchg
cs
dec
xchg
jo
insb
or
fadd
dec
movsl
push
sbb
jp
xlat
in
push
pop
lock
popf
jnp
dec
jge
mov
out
xor
sub
test
add
js
sbb
cmp
jne
inc
loopne
push
sub
les
outsb
pusha
xchg
mov
cmp
outsl
push
out
cmp
cltd
push
js
dec
mov
out
cltd
mov
xchg
sub
xchg
jb
inc
arpl
pop
mov
inc
inc
out
adc
push
mov
and
sbbb
adc
clc
xlat
push
popf
push
dec
subb
mov
xor
add
fisttpl
push
push
sbb
push
jb
jbe
xchg
jne
sarb
movsl
and
in
cmc
int3
or
ds
incl
arpl
test
jle
aaa
dec
mull
cltd
xchg
out
mov
push
mov
in
xchg
mov
push
or
lods
dec
aaa
data16
mov
pop
mov
pop
push
fidivrl
aaa
nop
adc
popa
xchg
pop
sub
or
push
fists
out
jecxz
pushf
in
ret
scas
inc
aaa
and
hlt
ljmp
mov
fsubp
lahf
rep
lods
push
xchg
fisttpll
push
dec
out
mov
in
imul
sub
sub
int3
xchg
fbstp
in
xchg
inc
push
sbb
lea
ret
aam
in
mov
and
xchg
nop
push
xchg
ficoml
dec
xor
push
les
inc
jbe
pop
sub
pop
push
pop
mov
std
divb
jecxz
shll
or
ljmp
loope
nop
cld
xor
fs
lahf
pop
das
sub
jmp
mov
mov
stos
or
and
add
lea
mov
enter
sbb
out
mov
dec
call
loope
cld
outsb
and
or
stc
pop
daa
loop
js
adc
or
pop
out
dec
scas
add
or
ret
cwtl
call
loope
pushf
xor
cwtl
pop
test
jmp
out
cwtl
adc
adc
sbb
pop
jl
fstpl
xor
dec
xorl
nop
out
imul
sub
push
add
jae
clc
xlat
sub
neg
xor
ret
inc
inc
jno
mov
aaa
mov
mov
lcall
dec
fldt
pop
lret
movsl
adc
lock
imul
fsts
imul
adc
add
outsb
ljmp
aas
or
jmp
cmpl
jecxz
dec
cld
add
jg
inc
rorb
or
stos
out
mov
cmpsb
in
jnp
in
sti
lahf
daa
push
in
xor
in
pop
sahf
jecxz
imul
pop
or
shlb
xchg
dec
in
sahf
pop
into
mov
add
imul
clc
sbb
popa
pop
test
test
test
das
cmpsl
sub
mov
lods
xor
cmp
adcb
mov
lods
or
xchg
cwtl
sub
and
sub
popf
bound
sub
loope
xchg
sbb
lock
cmc
mov
jmp
pop
push
lahf
aad
mov
loopne
sbb
cwtl
pop
pop
mov
scas
fiaddl
push
ss
aam
fwait
insl
cmp
xor
pop
loope
cmp
inc
xor
pop
lahf
cmp
rcl
mov
ljmp
paddusw
push
pop
sub
jb
mov
push
into
test
or
nop
xchg
dec
or
inc
push
pop
cltd
sahf
mov
bound
mov
lods
mov
int
jmp
jne
scas
test
xchg
mov
dec
ss
inc
fmull
hlt
inc
pop
push
inc
push
adc
repnz
fprem1
aas
fildl
popl
and
out
stc
nop
add
jg
lock
mov
test
andl
cmc
jnp
sub
xchg
lock
pop
cld
addl
sbb
dec
fisttps
cmp
aam
mov
pop
xor
arpl
in
jecxz
fstps
cmp
mov
fsubl
aam
jge
jne
jmp
add
mov
inc
insl
inc
pop
repz
adc
push
clc
adc
sbb
cld
pop
mov
movsl
fnsave
mov
shlb
je
xor
push
sub
push
repz
inc
pop
mov
cmp
cmp
mov
xor
pop
jge
jp
xchg
pop
jno
and
mov
loope
les
and
iret
cmp
pop
inc
mov
sub
xor
mov
mov
lds
ret
pop
lods
and
addr16
mov
xchg
xor
or
cmp
loopne
push
int3
mov
sub
in
or
mov
and
push
push
dec
and
mov
sbb
dec
ficoml
adc
notl
inc
and
fwait
pop
mov
sub
dec
rcrb
push
je
jns
test
cmc
adc
pop
lcall
ja
rorl
xchg
mov
repz
mov
jmp
dec
std
fldenv
cltd
mov
jge
mov
lods
xchg
loope
mov
xchg
or
mov
push
lret
pusha
fiadds
lods
sub
fwait
dec
pop
inc
push
push
std
cmp
icebp
jnp
test
xor
roll
mov
inc
sti
sub
fcomps
add
xchg
xchg
cld
dec
inc
mov
add
dec
lods
sbbb
cmp
pop
ret
jbe
mov
xor
cmp
daa
fwait
out
out
push
insb
and
xchg
clc
push
sahf
inc
addr16
cmp
lret
dec
or
incl
adc
out
pop
fldenv
stc
sbb
add
ret
int
enter
cmp
es
sub
int
jg
fstps
shll
jae
scas
stc
daa
push
or
cli
lea
or
fdivrp
jns
test
and
outsl
xchg
fsubrl
stos
mov
and
adc
mov
fldenv
sbb
into
or
mov
and
nop
dec
pop
pop
fwait
jb
loop
push
in
xchg
mov
repnz
sbb
int
jecxz
sbb
andl
divl
mov
sub
xchg
push
sti
pop
sbb
xchg
stc
out
xchg
inc
enter
cld
xor
js
mov
or
addr16
test
out
mov
xchg
js
sbb
in
or
adc
aad
testb
rcrl
mov
inc
push
imul
popa
adc
arpl
mov
stos
fstpt
std
fnstcw
aad
dec
out
rcrb
ficompl
ja
outsb
jecxz
daa
and
mov
pop
cmp
dec
popa
sbbb
push
cmpb
add
dec
push
push
rcrb
ja
icebp
jp
dec
xchg
push
ljmp
je
ret
nop
inc
add
xor
lds
mov
ljmp
jle
arpl
push
jle
iret
popa
sbb
push
and
adc
pop
cmpsb
sbb
fcoms
cmc
jle
xlat
push
call
push
rclb
data16
xor
fyl2xp1
lea
cli
aam
dec
jmp
lock
mov
aam
jl
repnz
jns
inc
mov
out
cwtl
cmpsb
data16
adc
xlat
inc
push
fmuls
jno
out
and
lahf
idiv
dec
int
roll
xor
dec
lret
pusha
outsl
jbe
mov
jb
dec
push
xchg
sbb
stc
stos
lods
push
movsl
xlat
lret
mov
dec
xchg
mov
dec
push
pop
outsl
mov
fwait
insl
xorl
popf
xchg
cltd
test
mov
sub
push
fdivl
cmpb
adc
jno
inc
pop
aam
push
cmp
int3
das
adc
push
pop
mov
test
mov
into
inc
mov
mov
fstpt
push
push
push
scas
insl
pop
sarb
dec
xor
mov
mov
je
adc
cmp
xor
push
push
sbb
subl
adc
out
scas
rolb
push
cli
and
cmp
jno
mov
aam
in
lea
pop
cltd
aam
xchg
test
out
test
inc
cmp
and
mov
mov
xor
adc
inc
and
repz
in
cmp
jns
test
shll
inc
insl
cmpsl
push
mov
addr16
adc
adc
xor
cmp
pop
adc
push
lea
cmpsb
sti
mov
popa
ret
jnp
jb
jne
stos
fimuls
mov
sbb
xchg
xor
popa
lea
push
mov
lds
mov
in
or
sub
and
sub
sub
mov
fwait
xor
or
mov
mov
mov
cmpl
or
enter
js
adc
decl
mov
dec
xchg
fsubs
test
mov
sub
movsl
pop
mov
jle
addb
pop
push
and
add
mov
test
insb
mov
mov
lods
vcvtpd2psy
repnz
xchg
bound
fistpll
xchg
mov
pop
icebp
sbb
push
sahf
push
movl
out
jae
push
in
fistl
popf
sub
push
or
pop
sbb
dec
push
cmp
mov
jg
push
jb
and
leave
rolb
jb
add
mov
outsl
adc
testb
loopne
hlt
arpl
dec
or
pusha
sub
subb
lock
dec
mov
stos
shr
dec
dec
outsl
or
pop
adc
push
bound
popa
aas
sbb
das
mov
mul
add
fisubs
adc
loop
dec
add
imul
out
add
addl
and
mov
jg
cmc
fistpl
cltd
push
jp
les
sub
std
mov
pop
insl
pop
lret
in
shrl
push
mov
add
inc
mov
sbb
aad
sub
mov
add
push
fcoms
leave
xor
push
inc
inc
lret
cmp
fnstcw
sub
bound
idivb
les
movsl
pusha
dec
push
and
sahf
mov
xor
enter
inc
mov
adc
sub
sub
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
jmp
jae
jmp
dec
movsb
xchg
hlt
into
dec
mov
aam
adc
push
clc
adc
push
and
add
mov
rcl
adc
mov
sub
sbb
or
jno
jo
movsl
movsl
sub
subl
xor
inc
sub
imull
mov
jb
fidivrs
ja
pop
cmp
leave
lahf
scas
dec
mov
add
shlb
ljmp
pop
andb
shlb
dec
je
enter
out
ror
push
jecxz
shl
sbb
sub
inc
dec
add
dec
mov
xchg
xor
pop
xchg
test
mov
arpl
xchg
cmp
adc
pop
sub
lods
cwtl
and
in
cmp
or
pop
and
in
test
mov
iret
inc
fstl
rorb
fwait
and
lret
sbb
mov
jns
bnd
pusha
loopne
xor
xor
mov
insl
pop
xchg
sub
sub
mov
ja
or
pop
popa
icebp
sub
daa
dec
push
cmpsb
sbb
xchg
mov
mov
cs
and
dec
aaa
add
inc
stc
pop
xchg
mov
gs
fdivp
aam
icebp
jecxz
dec
aaa
out
jmp
incl
out
cmpsb
nop
or
pop
rcll
push
nop
inc
shrb
fildll
das
daa
out
push
mov
jl
mov
test
ret
xor
jbe
inc
fsubl
test
or
clc
push
adc
out
cbtw
cmp
test
cwtl
cmp
stc
hlt
cmp
popa
sbb
fsubl
insb
shrl
jl
fs
leave
in
adc
or
and
lret
push
cld
inc
pop
fsts
popa
jno
mov
dec
sbb
das
add
pop
fisubrs
psllq
sub
aaa
xor
mov
cwtl
or
fildll
mov
jae
xlat
lret
cmp
sub
and
iret
fidivl
adc
sbb
das
push
lret
int3
cmp
loop
repnz
xchg
add
and
sbb
in
mov
xlat
imul
mov
pop
and
stos
mov
out
loopne
stos
stc
mov
cmp
mov
or
push
fcompl
fcmovnu
xchg
mov
or
xchg
in
push
inc
lods
pusha
xor
xchg
repz
outsb
iret
test
pop
sti
pop
lock
test
mov
sub
jl
xchg
mov
icebp
inc
add
and
mov
or
call
sub
jge
pushf
push
push
orl
push
in
jp
iret
mov
or
mov
imul
out
mov
lahf
jno
adc
popf
fbstp
rcll
add
sti
cmp
xorb
fldt
lock
lea
aad
fwait
mov
sbb
mov
push
clc
sub
repnz
sete
add
shlb
aas
sbb
push
lods
jmp
nop
out
jmp
hlt
push
xchg
xor
clc
insb
inc
sbb
xor
fimull
and
lfs
push
fs
jge
sahf
pop
xchg
filds
mov
pop
jne
out
int
adc
add
inc
mov
dec
sub
dec
stos
cmpb
into
les
iret
aaa
push
stos
mov
clc
sbb
inc
fidivrs
lea
dec
dec
inc
adc
mov
add
push
xor
xchg
mov
repnz
mov
sarb
xchg
push
arpl
mov
sub
mov
inc
adc
xor
or
mov
or
pop
int3
push
cmp
insb
daa
cmpsl
imul
dec
aaa
jno
jecxz
out
jecxz
ret
pop
fld
sub
cwtl
pop
sub
mov
aad
inc
pop
sti
and
push
decb
notb
roll
arpl
mov
jg
xor
out
lods
rolb
mov
test
pop
mov
mov
xor
stos
lcallw
pop
xor
rolb
clc
jge
inc
fistl
fcmovne
lret
or
mov
sti
mov
pop
sbb
mov
cmp
jmp
subl
aam
pop
or
mov
testb
int3
mov
inc
jmp
das
push
imul
leave
xchg
int
lahf
stc
int3
add
out
jnp
fistpll
andl
pop
adc
mov
push
pop
jmp
cmpsl
mov
jecxz
xchg
rolb
stc
in
imul
pusha
dec
movaps
cmp
dec
sarb
sub
in
lret
add
mov
clc
inc
mov
lret
mov
lds
mov
outsl
mov
cmp
sbb
test
inc
xor
push
out
push
ss
xchg
daa
and
inc
sub
mov
sbb
sbb
je
dec
testb
mov
filds
pop
cmp
outsb
repnz
cmpsb
inc
and
cmp
or
xor
neg
pop
dec
push
xchg
lret
mov
dec
push
arpl
pop
xor
scas
out
xchg
lret
push
sbb
js
mov
xchg
int
dec
arpl
dec
jmp
dec
and
lock
sbb
cmpsl
mov
sahf
mov
popa
inc
cmp
gs
test
add
add
call
jae
mov
mov
aaa
xor
and
loope
stos
mov
fdivl
add
les
xchg
adc
jle
gs
cmp
pop
ret
or
loopne
repz
out
repnz
mov
cmpsb
in
std
mov
int
pop
cmpsl
or
jbe
add
xor
jbe
repz
fwait
into
cld
push
add
add
xchg
xor
outsb
mov
inc
fdivl
xor
hlt
xchg
push
daa
dec
enter
push
cmp
inc
pop
inc
inc
sbb
cmpl
mov
out
lret
push
and
orl
pop
cli
pop
add
jne
daa
mov
ret
test
xchg
and
lret
mov
fidivrs
push
or
repz
sub
sahf
or
push
jp
sbb
lahf
movsl
stc
stc
dec
aad
dec
or
lods
enter
add
or
mov
push
add
lods
jmp
nop
cmp
push
add
mov
add
clc
adc
mov
popa
sti
xchg
test
out
adc
mov
sbb
scas
cmp
movsl
and
cmc
les
dec
push
inc
popa
mov
mov
outsb
pop
cmp
mov
push
hlt
movsl
inc
test
fistl
stc
pop
out
cmc
outsb
cli
subl
pop
ljmp
dec
inc
jbe
xor
in
ret
cs
add
in
xor
sar
xchg
mov
jb
adc
shrb
inc
inc
cli
cmp
xchg
sti
pop
adcl
ljmp
aam
pop
aaa
insl
mov
push
pop
loope
fstpt
inc
jl
inc
ja
push
mov
ja
cmp
mov
dec
mov
leave
dec
or
dec
outsl
cmp
and
movsl
xor
pushf
lret
jae
rcrl
mov
jns
inc
cmc
mov
daa
cld
into
jae
push
mulb
icebp
jg
idivl
cmpsb
mov
xor
fld
mov
cmp
cwtl
mov
or
mov
jb
cmpsl
and
pushf
mov
sbb
and
shlb
cmpsb
and
xchg
pop
and
mulb
dec
push
cli
cmp
add
xor
divl
lods
sahf
js
pop
dec
loop
outsb
xor
or
ja
pop
enter
cwtl
jae
inc
sahf
pop
fldenv
push
sar
xchg
cmp
call
pop
imul
dec
sbb
ret
mov
fldenv
sbbb
adc
sbb
and
jle
dec
add
test
pop
or
inc
jmp
aad
data16
dec
cmp
subb
xor
cmpsl
xlat
test
outsl
ds
orl
jmp
xor
xor
notl
movsl
jne
testl
lods
sbb
adc
cmc
dec
popa
add
jle
sub
push
push
dec
pop
mov
add
sub
mov
pop
mov
add
xor
aaa
arpl
scas
lods
sbb
mov
inc
or
or
jb
aaa
in
sub
jp
and
or
cwtl
mov
fbstp
lcall
xchg
stc
fsub
dec
ds
fistpll
lods
dec
sub
adcl
and
ss
mov
push
mov
jnp
mov
loop
negl
add
adc
rcrb
sub
cmp
shll
or
pop
dec
movsl
sub
fdivs
xor
push
push
pop
cmpsb
rcrl
xchg
dec
notl
mov
xchg
or
ja
xchg
inc
lds
pop
or
shrl
repnz
push
in
out
add
sub
mov
fcmovbe
call
xchg
pop
dec
cmpb
or
rclb
sub
ja
xor
aas
flds
jnp
jno
mov
pop
mov
mov
popa
cs
test
cwtl
xchg
sub
fsubr
movb
ret
imul
mov
cli
add
fildll
inc
dec
xor
loop
fsubrl
jne
jnp
xchg
push
mov
clc
test
leave
rcll
dec
or
rorb
mov
add
cmp
pop
dec
fmulp
inc
inc
xor
inc
mov
fmull
inc
jb
mov
xor
or
je
pop
jnp
outsl
adc
or
aaa
mov
xor
push
push
cmp
test
inc
push
or
std
mov
test
outsl
adc
cltd
pop
sti
push
fstpl
popf
lret
adc
sub
adc
mov
fnstenv
sub
mov
dec
fcmovnu
or
in
add
stos
inc
cwtl
add
cmc
fiaddl
jnp
mov
mov
adc
fcmovnb
movsl
adc
popf
xchg
mov
sbb
shrl
inc
xchg
imull
inc
xor
sbb
pop
es
pop
sub
pop
sbb
jo
adcl
cmp
loope
xor
xor
push
mov
int
popa
sbb
push
ja
push
xchg
mov
xor
jl
cltd
stc
jae
mov
data16
lcall
cmp
mov
sub
in
cmp
aaa
xchg
pop
fadd
ret
push
xor
loop
pop
jae
daa
fdivrs
push
xchg
push
test
xchg
mov
cmp
aas
dec
mov
je
sbb
popa
cmpsl
mov
mov
ret
rclb
emms
pop
jge
adc
jl
sti
cmp
sub
pop
lea
jmp
jl
cli
iret
mov
sbb
in
mull
ret
mov
inc
dec
je
fwait
and
or
icebp
insb
andb
or
daa
lods
enter
sub
cmc
out
jp
rorb
int
cld
repz
mov
pop
pop
imul
adc
sub
pop
popf
push
repnz
clc
pop
mov
leave
xchg
cli
push
xor
jmp
sub
adc
inc
inc
outsl
mov
adc
outsl
test
aaa
rcrl
dec
je
mov
ds
sbb
das
shrl
loopne
mov
nop
outsb
sub
addr16
cmc
ljmp
inc
es
or
mov
or
inc
push
les
dec
ss
cmp
hlt
pushl
jne
cmpsb
scas
dec
push
cmp
insb
mov
mov
sub
sahf
xchg
sub
in
pcmpgtw
ret
or
mov
testl
nop
xor
mov
and
add
jp
mov
cmpsl
mov
mov
mov
push
lds
pop
adc
xor
data16
dec
mov
cmp
mov
adc
stos
push
rol
jp
add
int3
jecxz
cmp
aad
mov
inc
and
test
sahf
stos
inc
int3
cli
xor
push
int
es
insb
lea
sbb
inc
cmc
dec
mov
cmpsl
mov
outsb
sbb
add
sahf
mov
xor
rolb
xchg
out
mov
push
fmul
push
pop
adc
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
jmp
mov
push
pop
or
jmp
push
or
push
clc
adc
int
push
sub
rorb
out
loope
mov
mov
popa
and
es
clc
test
nop
incl
push
cmc
lret
inc
pop
dec
push
loopne
sahf
incl
xchg
mov
xchg
and
jg
add
or
mov
pop
adc
clc
out
testb
addl
mov
mov
out
xor
insb
ret
lea
scas
dec
stos
fnstenv
xchg
push
aas
sbb
and
or
cmp
cmp
ss
push
or
adc
sahf
imul
pop
ljmp
incl
cmp
mov
std
test
imul
dec
dec
loope
and
ja
out
xchg
xchg
jmp
pop
outsl
add
out
cltd
fmul
fcmovbe
mov
gs
imul
addl
pop
hlt
imul
je
sub
inc
mov
cltd
ja
push
cmpsl
xchg
ljmp
sbb
xor
stc
and
jge
jb
fidivrl
outsb
leave
out
aas
sub
jmp
sbb
pop
in
push
xlat
sbb
dec
jb
add
lret
jns
jae
call
mov
sti
sub
fwait
ljmp
inc
push
sbbl
xchg
sub
adc
or
cmp
mov
or
mov
aaa
movsb
ja
cwtl
jne
js
xchg
or
ret
sbb
fistps
fs
mov
push
inc
cmp
jp
cwtl
cwtl
and
add
jo
mov
sub
mov
adc
out
cmp
push
push
arpl
movsl
aas
pop
or
std
and
xchg
fiadds
mov
arpl
jbe
sub
lcall
dec
sti
mov
push
arpl
push
xchg
sub
sub
addb
sarb
outsb
xchg
sub
cmpsl
daa
loop
div
add
cmp
stos
xchg
popa
push
xor
xor
std
fnstcw
mov
out
jg
xchg
fdivrs
out
testb
movsb
push
idivl
outsb
aas
ljmp
xchg
cmp
xor
and
dec
inc
push
mov
test
xor
jae
fstl
repnz
icebp
sbb
add
mov
jge
xchg
xchg
jg
outsl
ds
push
xchg
ds
jo
add
ja
jbe
jnp
in
and
cld
out
adc
lcall
daa
xchg
mov
push
mov
add
mov
cmp
and
mov
sarl
push
shll
mov
adc
inc
jnp
dec
fsubrs
mov
pop
loop
and
dec
rcrl
inc
fisubs
cmp
arpl
int3
cmp
imul
mov
xchg
mov
aam
scas
cmp
sbb
push
ret
movsl
hlt
test
in
loope
cwtl
jp
xor
sub
mov
leave
xor
pop
nop
or
sbb
cmp
repz
test
xchg
lds
mov
jne
jno
ja
js
je
mov
pushf
or
add
or
jno
aam
dec
sbb
cmp
aam
andl
ret
xchg
fwait
sub
xor
cmc
jbe
dec
outsl
iret
pop
sbbl
cmp
sbb
jmp
dec
sub
enter
aas
or
jle
jl
jecxz
lds
loop
and
xchg
mov
sbb
int3
cli
sub
cmp
lea
inc
js
out
movsb
jmp
dec
ja
mov
xchg
mov
cs
xchg
adc
or
mov
mov
dec
fsubl
inc
sbb
cs
xchg
das
push
cld
fisttps
sahf
sbb
sar
das
dec
pushf
adc
dec
ret
sbb
push
adc
mov
wbinvd
cli
cmp
aaa
push
sub
shlb
push
pushf
mov
call
enter
stos
sub
pop
aaa
fimuls
js
rol
imul
pop
in
inc
in
and
cmp
out
stc
mov
xchg
or
cmp
mov
sub
and
nop
loop
insb
mov
and
cmp
lret
cmp
fldenv
add
loope
in
fimull
push
enter
loopne
sbb
mov
or
cmpsb
test
loop
out
flds
gs
sbb
push
pop
jo
push
inc
outsl
mov
ret
push
pop
imul
xor
leave
sub
repnz
fs
int
push
jecxz
dec
mov
sub
je
mov
push
adc
loop
fildll
push
and
push
inc
push
arpl
ror
mov
lret
hlt
fstl
es
pop
movsl
adc
ret
pop
sub
mov
push
sub
rorb
add
inc
sbb
out
stos
pop
imul
aad
xor
push
pop
jnp
and
inc
or
or
imul
pushf
stos
cli
or
loope
inc
inc
push
outsb
inc
das
bound
jmp
cmp
add
jl
andb
negl
cwtl
xor
xlat
stc
stos
fs
test
add
popa
fadd
sub
adc
push
fnsave
xchg
adc
or
cs
mov
out
jns
pop
mov
dec
inc
imull
outsb
sti
jp
jnp
pop
push
xor
mov
sub
or
hlt
xchg
lret
sbb
shrl
inc
int
mov
push
ficomps
movsl
push
dec
sub
mov
fistpl
dec
rorb
lds
incb
cld
cmc
sbb
xor
enter
xor
adc
nop
fldenv
enter
pop
adcl
mov
inc
mov
inc
jne
call
dec
lea
mov
leave
hlt
lods
or
scas
popf
jno
repnz
aam
lods
std
int
sub
sub
fdivs
cmpsb
inc
jp
imul
clc
testl
adc
jp
popa
cmp
ljmp
test
shr
sub
mov
pop
movsl
dec
outsb
xor
dec
shll
lea
nop
pop
in
arpl
xor
arpl
sbb
loop
inc
adc
inc
mov
lods
enter
add
movsb
xor
shl
xor
or
mov
jmp
loopne
rcl
mov
mov
dec
mov
adc
clc
adc
and
and
dec
pop
cmp
pushf
or
push
xor
cld
pop
test
and
shl
sbb
mov
test
mov
mov
add
orb
xor
sahf
in
inc
cwtl
dec
out
xchg
push
dec
sarb
out
mov
mov
dec
adc
sub
pop
cltd
inc
cmp
mov
lret
xor
lret
and
arpl
aaa
adc
mov
push
cmpsb
push
ds
mov
icebp
xchg
and
mov
mov
loope
in
xor
add
mov
imul
imul
addb
int
jbe
ss
outsb
stc
xor
inc
rcrb
mov
jmp
xor
cld
out
adc
pop
cmp
pushf
xchg
jle
jne
xor
mov
aaa
std
sub
mov
or
pop
mov
pusha
addr16
pop
bound
mov
mov
xchg
sbb
andb
mov
rcrb
add
test
iret
icebp
out
stc
and
or
add
and
or
or
adc
mov
aad
lahf
addr16
sbb
lcall
cmc
push
mov
movsl
dec
adc
mov
or
jne
out
dec
mov
sbb
lcall
sub
aas
fisttpl
push
mov
jle
xchg
mov
daa
push
clc
inc
sbb
cmpsb
orl
js
ljmp
dec
cmp
mov
jg
adc
adc
add
int
mov
inc
pop
out
inc
pop
sbb
mov
adc
in
xor
sbb
sub
pop
sbb
pop
loope
leave
xor
or
mov
mov
adc
pusha
xor
icebp
and
cmp
cmp
shr
jno
dec
jae
dec
xchg
sub
shlb
pop
ds
insb
lods
push
inc
stos
lcall
cltd
jle
push
adc
in
sub
or
test
jl
popf
daa
cmpsl
sti
sbb
pop
jnp
daa
shll
jmp
push
stos
fiaddl
lds
mov
mov
in
sbb
repnz
fstps
jno
jnp
pop
adc
lret
mov
daa
mov
mov
ficomps
ja
add
cmp
pop
data16
inc
and
sbb
mov
push
jnp
rcl
pop
and
lcall
jb
jo
lcall
ljmp
hlt
into
lods
stos
inc
or
jp
inc
sub
mov
sbb
bound
gs
cmc
xor
repnz
fcmovu
enter
jle
fwait
jne
jmp
pop
or
inc
sub
fdivs
xchg
pop
test
sbb
scas
mov
sahf
in
mov
cmpsb
jg
mov
jnp
test
in
add
mov
sbb
aam
pop
or
sbb
sub
jmp
mov
or
push
mov
or
popa
mov
or
xchg
cmc
or
inc
xor
sub
jb
pop
addr16
jge
in
xchg
pop
int3
popl
inc
out
jbe
xchg
jae
xchg
sub
mov
and
cmp
cmc
lock
inc
xor
rcll
xor
mov
mov
loope
cmp
mov
sbb
push
xor
push
inc
imul
decb
andl
dec
call
shlb
mov
call
mov
es
push
out
and
cmc
jnp
mov
mov
or
pop
scas
mov
sbb
jae
mov
into
out
xor
out
in
lds
iret
adc
lret
jmp
xorb
adc
rorb
mov
testl
push
xchg
iret
cld
mov
mov
sub
sbb
cmp
ljmp
jl
xor
mov
jmp
mov
pop
jmp
bound
lods
stc
lret
xor
jg
ss
outsl
aaa
fwait
sub
mov
stos
xchg
call
loop
lcall
xchg
into
sbb
std
adc
mov
jle
pop
jg
test
fdivrs
jbe
push
lea
jl
idiv
jb
cmc
add
inc
pop
out
sbb
cltd
or
sub
scas
or
pop
cmp
lds
scas
inc
mov
bound
movsb
adc
faddl
gs
pop
xchg
and
loope
dec
dec
jmp
addr16
movsl
sub
leavew
mov
loope
and
cmp
es
and
hlt
cmp
dec
xchg
lahf
lea
jb
arpl
repnz
sub
lret
jg
or
jmp
imul
loop
sub
pop
test
outsl
xchg
data16
pop
push
jns
push
or
int
nop
fxch
sbb
sub
mov
stos
daa
orl
mov
mulb
loop
nop
or
fs
ret
and
in
and
pop
testl
popf
mov
mov
cs
mov
mov
cmp
ja
add
lahf
and
mull
xlat
add
push
sbb
cwtl
add
sbb
pushf
lods
add
dec
ss
or
movsl
sub
mov
and
mov
add
mov
fadd
repnz
mov
or
stos
adc
bound
and
lods
xlat
int
aad
js
test
mov
shrl
jbe
or
mov
cmp
xchg
mov
nop
movsb
pop
iret
mov
lret
mov
call
ss
inc
mov
js
sbb
ljmp
roll
adc
cmp
xor
arpl
pop
daa
scas
sub
sub
lds
mov
jnp
inc
jo
push
adc
and
hlt
call
and
out
mov
xchg
outsb
negl
scas
lret
aad
mov
popf
mov
adc
pushf
rorl
test
mov
lods
int
mov
dec
xchg
sub
jecxz
cltd
lret
loop
mov
adc
lods
cld
mov
add
pop
sub
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
xchg
hlt
rol
xor
mov
inc
aad
adc
clc
adc
repz
incl
adc
or
mov
pop
mov
hlt
mov
mov
daa
lods
mov
out
ror
xor
hlt
ss
fdiv
and
push
ror
les
mov
aad
fidivs
and
sbb
jmp
or
lret
inc
add
shl
add
xor
xchg
les
daa
or
fstpl
pusha
out
mov
adc
data16
or
pop
pop
jmp
ds
icebp
out
fldl
popf
adc
test
pop
fs
imul
ss
or
dec
shlb
jmp
inc
in
mov
jne
test
roll
pop
jmp
into
sub
add
lds
inc
in
fcomps
add
dec
cmp
outsb
rcl
xor
aas
sbb
mov
jg
sbb
xor
mov
pusha
mov
dec
sbb
jecxz
and
inc
lcall
push
in
out
ljmp
mov
addr16
repz
add
push
push
add
push
sarl
dec
clc
fiadds
and
mov
mov
jns
push
insb
xor
ret
xchg
sub
pop
push
push
insb
adc
or
data16
movsb
shlb
mov
mov
aam
mov
stc
test
pop
es
add
rolb
dec
add
hlt
cmc
repnz
ret
iret
mov
mov
ret
imul
cli
mov
mov
test
adc
addr16
popf
jecxz
and
int3
push
adc
pop
rcrb
xchg
inc
repnz
and
ljmp
sbb
jmp
ja
mov
adc
sarl
mov
xorb
imul
call
int3
cmp
movsl
stos
cmp
popf
cmp
jns
dec
loope
movsl
dec
xchg
mov
in
out
out
inc
call
jb
loop
cmp
inc
pop
out
out
jne
test
add
ret
mov
cmc
inc
cltd
pop
adc
cltd
dec
int3
mov
repz
push
cwtl
int
mov
sub
inc
pushf
es
dec
inc
fs
js
fwait
mov
push
je
mov
pop
cmpsl
add
mov
rolb
and
pop
loop
jmp
ficoml
push
arpl
stos
stc
popf
inc
adc
inc
push
adc
int
lahf
les
out
push
adc
loopne
or
xor
adc
push
sub
std
pop
xor
jp
dec
dec
mov
cmc
movsl
cmp
leave
cmovb
dec
out
xchg
jmp
mov
xchg
jmp
lret
mov
push
into
xchg
lea
icebp
popa
imul
add
cmpb
push
dec
mov
cmpsl
xchg
mov
repz
jae
sbb
mov
adc
clc
push
push
mov
repz
xorl
int
inc
ficompl
lcall
js
in
adc
arpl
into
mov
repz
rcll
mov
lods
mov
push
call
push
sub
xchg
cmpsl
pushf
dec
cmp
mov
fld
loopne
push
popa
mov
out
jno
xchg
mov
lahf
notl
and
test
xor
add
push
mov
aad
jmp
shr
dec
mov
loopne
cmpsb
xor
or
fidivs
mov
fistpl
mov
into
icebp
mov
popf
pushf
insl
and
or
xlat
ret
inc
jecxz
push
pop
stos
std
outsb
ret
push
lcall
loope
ljmp
test
mov
insb
or
push
xchg
cld
and
scas
and
mov
fidivrs
data16
adcb
iret
push
scas
imul
dec
fstpl
pop
add
inc
cmp
repz
sahf
dec
sub
jl
jmp
scas
sbb
push
jae
pop
leave
sbbl
imul
mov
jle
mov
adc
ja
fmul
enter
in
add
out
jnp
jmp
and
in
fs
jbe
push
ljmp
lret
pusha
or
mov
arpl
lahf
sar
clc
push
sbb
leave
mov
pop
jae
out
js
insl
fs
mov
adc
add
inc
imul
dec
in
push
adc
daa
outsl
xlat
jnp
fdivrl
arpl
cmp
fcmovnbe
sub
inc
mov
addr16
push
leave
loopne
sub
dec
mov
psubsb
imul
sarb
add
sub
mov
xchg
insb
or
mov
mov
lds
jnp
cltd
sbb
shr
dec
xor
test
jle
or
arpl
repnz
addr16
mov
cmp
and
rorl
jae
cwtl
lret
mov
lods
add
mov
popa
mov
lahf
call
xor
aad
js
les
imulb
lea
mov
adc
jb
enter
sahf
fldt
dec
inc
cmp
pop
jge
aam
out
push
add
jle
mov
lahf
xchg
pop
or
mov
in
push
cmp
js
aas
stos
xor
xchg
jo
inc
ret
dec
mov
dec
scas
add
lea
mov
pop
inc
or
xlat
jge
ss
jl
out
add
popf
out
gs
ja
inc
shrb
pusha
xchg
int3
jg
icebp
loop
dec
lods
inc
shlb
sub
ja
dec
jg
xchg
aaa
mov
jl
mov
das
lods
mov
jnp
or
jg
rorl
pop
lcall
push
rolb
flds
jp
xor
ljmp
loop
and
sub
lock
or
pop
call
rcrb
pusha
fdiv
mov
out
test
jge
aad
xchg
jno
data16
adc
mov
andb
mov
movsb
mov
inc
dec
mov
add
pushf
mov
aam
outsb
dec
cld
fwait
and
and
xorps
dec
addr16
mov
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
jmp
jecxz
fstl
inc
xor
adc
adc
clc
adc
xchg
pushf
pop
std
mov
lods
es
cmp
dec
rol
lcall
add
dec
adc
push
aam
shrl
xor
adc
shlb
xchg
test
push
dec
add
pop
les
out
xor
fldl
stc
xor
cmp
mov
in
call
lock
test
shll
pushw
cld
lret
add
push
nop
cltd
adc
testb
enter
xchg
lods
pushf
out
or
ljmp
or
dec
jb
popf
add
fdivs
pusha
jne
xor
jb
jecxz
jb
mov
cmpsl
xchg
sbb
inc
mov
pop
gs
notb
push
push
lock
addr16
sbb
xlat
fmul
inc
or
adc
arpl
mov
jo
insb
mov
xchg
push
inc
sub
pop
lret
sub
mov
pop
in
pop
in
ror
stc
popa
inc
mov
mov
adc
jge
mov
sub
adcl
imul
int3
mov
roll
push
mov
repz
cmpsb
mov
and
mov
in
scas
int
push
jecxz
xchg
fldl2e
fidivrs
hlt
jge
adc
repz
mov
test
pop
iret
cmp
cmp
mov
or
es
jle
sub
adc
pop
push
push
sub
xchg
loope
push
push
in
cmp
inc
sbb
out
lock
pop
sbb
xchg
shr
js
cmp
cmp
pop
inc
jmp
mov
lahf
jg
and
movsb
das
cmc
outsl
xchg
and
pop
pop
divb
pushf
dec
in
cmp
jg
sub
cli
push
adc
sub
xor
add
xor
dec
orb
push
adc
insl
pop
lods
pop
mov
movsb
jb
out
in
rcll
xor
add
mov
mov
aaa
divl
std
pop
jo
int3
cs
test
inc
lret
sahf
negl
mov
ret
dec
push
mov
xchg
bound
fadds
jecxz
clc
mov
push
movsl
ret
cmpsb
jne
popf
imul
mov
fildl
data16
loop
test
or
mulb
divb
in
lcall
imul
push
pop
pushf
pop
mov
stos
es
mov
sti
or
cwtl
rcr
mov
sub
mov
dec
lods
and
movb
mov
pop
iret
dec
cmp
shlb
adc
aaa
mov
cmc
inc
rcl
imul
cwtl
push
cmp
push
outsl
push
inc
and
cvtps2pd
das
clc
sub
sti
mov
push
adc
daa
push
xchg
mov
or
xorb
out
xor
enter
pop
jp
movsl
orl
enter
push
out
mov
pop
lods
pop
shlb
stc
or
xchg
daa
imul
pusha
add
xchg
or
ljmp
loope
aas
mov
push
inc
sbb
lea
fdivs
mov
loop
scas
hlt
jo
and
dec
lods
out
cmp
adc
adc
pop
and
sub
movsb
mov
xchg
repnz
cltd
xchg
mov
mov
mov
inc
and
sbb
stc
test
sbb
jnp
cmp
xlat
and
cmp
mov
fs
insb
inc
mov
int3
pop
xor
inc
adc
sbb
xchg
dec
mov
loop
movsb
or
xchg
imul
or
dec
push
mov
push
repz
in
and
dec
mov
pop
pushf
aam
dec
jp
lcall
arpl
sub
lea
pushf
es
push
stos
scas
jl
dec
and
bound
mov
rcr
add
mov
adc
dec
add
or
push
and
fidivrs
dec
pop
sbb
adc
adc
sbb
fbstp
push
fistpll
mov
jno
or
cltd
and
dec
js
dec
lock
mov
xor
or
xchg
dec
lods
lods
jmp
push
leave
nop
xlat
jle
and
cmp
fidivrs
cmpsl
sarb
ds
and
cmc
clc
xorl
shlb
pop
mov
inc
jnp
sbb
or
mov
enter
lret
in
aam
mov
imul
jns
adc
imul
js
popf
sbb
rol
xchg
ret
mov
sbb
push
or
iret
sub
clc
dec
or
adc
and
lea
pop
sti
jb
shrb
mov
dec
dec
fsubrp
add
loopne
jbe
popf
in
fbld
mov
xchg
pop
xor
cvtpi2ps
pop
xchg
ds
pop
mov
mov
sub
jle
mov
in
js
mov
data16
xchg
or
cmp
cli
mov
leave
xorl
push
dec
dec
movsl
push
add
test
js
jcxz
mov
in
js
jl
mov
xchg
pmullw
mov
push
aaa
rcr
xchg
inc
pop
test
shll
mov
enter
das
movsl
adc
or
adc
xchg
jbe
sbb
sbb
inc
dec
cmp
js
mov
pusha
xchg
jne
aas
xchg
test
imul
mov
push
adc
xchg
cwtl
outsb
or
mov
insb
hlt
stos
lods
fs
mov
std
out
loop
pop
pop
jl
push
rcrb
fadd
fmull
es
js
aam
xor
rolb
xchg
data16
or
inc
call
loopne
adc
dec
xchg
int
les
aaa
test
test
mov
fs
push
dec
int
pop
ret
adc
inc
sbbb
ret
push
scas
push
pop
imul
xorps
call
and
jmp
js
jl
fwait
loopne
dec
out
jecxz
fldcw
mov
cmp
jnp
leave
cwtl
enter
int
inc
jb
adc
loop
xchg
push
push
jp
jp
sahf
cmp
cmpb
fs
sub
sbb
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
jmp
pop
mov
push
or
pop
in
fisttps
mov
fists
adc
clc
adc
sbb
enter
and
and
and
lret
jno
push
call
pop
popf
jecxz
stc
cmpsb
adc
std
das
pop
cmp
adc
sub
add
mov
xchg
sub
jmp
cld
mov
hlt
dec
xchg
sti
nop
lds
test
push
xchg
xchg
sub
mov
imul
push
inc
clc
std
cltd
xchg
adc
jecxz
inc
dec
dec
fisubs
int3
jbe
loope
cmpsb
add
dec
jl
lcall
andl
cmc
pusha
dec
and
fstps
int
pop
and
mov
cmp
ljmp
gs
idivl
and
jge
push
shlb
xchg
das
push
and
sub
jno
push
jbe
movsl
in
mov
enter
jne
fildl
mov
jnp
pusha
cli
adc
iret
call
ljmp
sbb
popf
push
sti
or
fwait
add
dec
mov
fs
inc
lret
nop
mov
jo
mov
push
daa
repnz
aas
push
je
aaa
inc
subb
clc
sbb
mov
cmp
ficompl
popf
test
xchg
pop
add
adc
shr
jmp
xchg
fwait
jnp
movsb
add
aad
add
dec
pop
mov
jg,pt
jp
cmp
in
dec
rolb
sbb
orb
ja,pn
je
xlat
aas
fildl
xchg
scas
sbb
xorl
enter
mov
pushf
mov
mov
out
bound
or
sub
adc
push
mov
insl
mov
xor
xor
pop
loope
add
fsubp
sti
fisubl
nop
or
mov
push
addr16
push
jmp
lea
or
loope
cltd
sbb
or
add
outsl
sarl
lods
push
out
jge
daa
push
jp
mov
and
and
std
mov
xor
pop
movsb
lea
pushf
mov
out
adc
pop
mov
movsl
dec
aas
int
push
out
push
pop
fucomip
or
mov
fbstp
adc
mov
test
gs
pop
and
pop
or
ja
push
jns
aaa
pop
aad
lea
push
adc
cltd
jecxz
incl
in
loop
mov
insb
and
pop
push
jo
imul
rorl
sub
sub
das
loopne
lahf
enter
repz
jp
xchg
aad
mov
out
push
iret
test
xchg
push
imul
sub
push
jecxz
jbe
jg
jp
jne
cmp
xor
jmp
arpl
jecxz
add
scas
pop
jbe
push
lods
mov
jge
popa
or
and
loope
dec
andb
cmc
cmp
jns
mov
xor
sbb
lcall
xor
mov
faddl
jp
xor
add
insl
dec
or
icebp
xchg
xor
push
lods
je
out
loop
push
add
cltd
daa
sbb
jno
loop
pop
cld
sbb
jb
adc
cltd
sub
mov
push
shrl
sbb
pusha
mov
cltd
sbb
jp
and
imul
adcl
or
jp
lret
and
mov
neg
or
rorb
shrl
orl
and
adc
mov
out
rcll
shlb
push
int3
rcrl
loopne
loopne
insl
lret
xchg
jmp
jmp
lea
inc
aam
bound
cmp
leave
push
mov
sahf
scas
hlt
inc
iret
xchg
push
push
ret
in
push
jmp
aad
pop
lock
sarl
pop
and
push
pop
test
clc
xchg
cmp
push
mov
das
ja
dec
push
call
ja
ss
xor
sti
arpl
jbe
aaa
stos
adc
and
les
pop
pop
fstpt
xchg
push
push
icebp
orb
stc
aaa
out
dec
and
lods
mov
outsb
pop
or
es
pop
js,pt
outsb
and
mov
mov
inc
cmp
int
push
xor
xchg
test
imul
mov
xor
arpl
lods
sub
xchg
cmp
adc
jecxz
and
je
mov
loopne
mov
ret
push
ret
mov
push
mov
pop
sbbb
inc
mov
xor
cltd
add
fbstp
xchg
imul
pop
cmp
ret
scas
push
stc
or
sarl
movsl
ja
outsb
inc
mov
fld1
outsl
cwtl
jb
pop
adc
decl
lcall
lret
inc
jbe
xchg
xor
mov
insl
pop
ret
mov
fsubp
add
mov
jbe
jmp
and
push
sub
stos
mov
lea
into
scas
lcall
dec
mov
addb
adc
mov
jmp
fiaddl
cmp
xchg
addb
mov
lahf
aam
push
xchg
roll
cld
fidivl
push
adc
adc
xor
mov
push
cmp
mov
popf
and
das
xchg
jecxz
movsb
jl
pop
adc
sbb
outsl
repz
pop
mov
enter
shlb
and
loop
add
jns
test
je
xor
xchg
add
push
or
lahf
ljmp
pop
repz
cld
cs
sub
popf
das
dec
push
pop
push
sbb
je
insl
xor
or
pop
cmp
mov
stos
mov
mov
jne
retw
sub
test
cli
iret
jne
or
xor
les
paddsw
xchg
sub
lret
inc
pmaxub
mov
mov
push
mov
fisubrs
leave
lea
daa
xlat
mov
test
jp
fscale
sbb
shl
add
repz
ss
test
test
shll
sub
subb
sub
dec
mov
pop
xor
mov
adc
lea
xchg
dec
xlat
add
lds
hlt
jp
inc
mov
test
out
iret
inc
or
es
sbb
fadds
push
sbb
and
fisttpl
adc
mov
imul
mov
addr16
pop
mov
ja
testl
mov
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
xor
mov
push
and
mov
int3
mov
adc
clc
adc
or
mov
popf
adc
jae
stc
mov
movq
mov
adc
bnd
stos
pop
cmc
ss
das
sbb
test
pop
insb
shlb
jne
push
sbb
jbe
cmc
xchg
cmp
cs
push
jno
ret
ss
mov
scas
push
outsl
mov
push
xor
mov
push
mov
mov
fdivrs
loope
pop
mov
sbb
ficoml
in
imul
mov
aaa
push
pop
lcall
mov
mov
fstps
push
lock
mov
hlt
adcl
cmp
fs
cmpsb
cmove
xchg
mov
addr16
mov
insl
xor
inc
lret
inc
pop
xor
lret
addr16
mov
dec
lock
cmp
aas
sbb
aas
pop
lea
daa
aas
dec
pop
lods
mov
push
jp
rclb
push
shll
dec
adc
sbb
cmpl
mov
into
je
enter
inc
pop
cmpl
fsubrl
xchg
popa
repnz
mov
insb
repnz
lock
add
fnstcw
mov
jge
or
arpl
mov
int
js
icebp
cli
pop
mov
inc
adc
fidivl
sbb
sarl
push
push
inc
test
cmp
leave
and
out
test
lcall
data16
cmp
adc
loope
mov
push
and
xor
adc
mov
xchg
in
int3
aam
pop
pop
push
ljmp
adc
int3
in
mov
adc
arpl
mov
shll
dec
daa
bound
jnp
cmp
test
fildl
mov
xor
mov
push
mov
sti
pop
pusha
rolb
jae
iret
xor
cmpsl
pop
add
out
ja
fcmovb
fsts
in
jmp
and
mov
aam
xchg
shlb
repnz
sbb
push
addr16
pop
in
pusha
jns
cmpsb
add
insl
outsb
jl
scas
ja
inc
pop
int3
mov
in
pop
mov
cmp
jmp
add
jbe
insl
dec
xor
in
pop
arpl
mov
push
push
push
and
mov
jnp
cmp
mov
fisubs
push
mov
in
rcrl
and
mov
pop
int
data16
xor
test
push
push
aad
xchg
adc
cmpb
jge
sub
cmp
mov
call
push
ret
push
jnp
stc
lret
in
cmp
shlb
add
mov
adc
push
scas
dec
cwtl
mov
xor
call
push
pop
lods
pop
aaa
lock
xchg
jl
mov
sbb
mov
jle
mov
xor
jp
outsb
dec
pop
and
push
xchg
push
sub
loope
ret
fwait
adc
stos
sub
repz
mov
pop
push
and
pop
cmp
adc
pop
xchg
insl
rorb
jge
lret
sti
cmpsl
mov
lea
dec
ret
fisttps
in
pop
outsb
pop
loop
test
xchg
fisubs
adc
mov
xchg
fimull
mov
mov
stc
mov
arpl
cs
mov
inc
cld
pop
bound
repz
dec
inc
or
cmp
push
jbe
aad
iret
mov
mov
pop
inc
mov
leave
inc
mov
jns
imull
mov
add
cmpsl
push
sbb
mov
sbb
pop
jp
outsb
clc
bound
jge
call
popa
out
je
lock
in
dec
inc
push
shrl
pop
cmpsl
addb
and
es
popf
cmc
je
lea
or
mov
jbe
mov
std
mov
pop
arpl
dec
rorl
xchg
adc
dec
sahf
mov
cmp
mov
dec
mov
mov
xor
mov
inc
push
cmp
loop
adc
loop
rorb
addb
jno
sarb
imul
out
pop
idivb
and
imul
rcrl
lods
or
je
cltd
and
dec
mov
pop
aam
outsb
jbe
sbb
sub
mov
dec
and
xchg
ficoms
insl
fistpll
and
je
ja
imul
xchg
sbb
icebp
adc
orl
popa
mov
dec
push
loop
icebp
fildl
cld
and
dec
adc
es
jmp
mov
inc
cmp
or
and
mov
movsl
aas
mov
mov
pop
adc
enter
cmpb
pop
mov
jae
sub
mov
lock
mov
fildll
arpl
pop
mov
movsb
aas
filds
imul
icebp
fstpl
mov
cvttps2pi
jl
lret
loope
mov
mov
test
aas
addb
mov
or
inc
or
or
in
aam
dec
aaa
pop
or
dec
jmp
in
movsb
adc
sub
data16
jns
stos
sub
inc
loop
in
std
jnp
dec
xlat
fmuls
xchg
adc
fisubs
dec
mov
push
inc
imul
dec
jae
sub
into
and
les
pop
xor
sbb
mov
adc
and
scas
adc
pop
push
cmp
lods
push
or
xchg
adc
subl
adc
dec
addr16
inc
add
lahf
and
inc
jecxz
push
mov
and
mov
out
enter
std
pop
pushf
xor
fs
xchg
in
data16
mov
shrl
fs
jmp
out
or
aas
jmp
daa
mov
fcoms
mov
enter
test
push
cmc
ficompl
cs
fsubrs
jg
rorl
mov
call
push
push
outsb
test
popa
fwait
lods
sub
jg
add
cs
subl
sub
negl
pop
push
mov
jae
pop
mov
push
add
jecxz
sti
cmc
data16
cmp
cmp
push
aam
insl
scas
sarl
sahf
mov
dec
push
data16
outsl
jb
movsb
mov
repz
mov
mov
push
add
sub
ljmp
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
jmp
popf
scas
add
mov
aaa
shlb
adc
clc
adc
in
stc
add
push
cld
dec
std
dec
inc
dec
sarl
daa
insb
mov
dec
pop
mov
cmp
jno
jmp
pop
cmp
out
xor
inc
arpl
xchg
sub
cmpsb
psllw
push
and
sub
es
bound
jmp
js
sbb
jb
jmp
sti
mov
mov
sbb
repnz
sbb
cmp
in
push
fwait
arpl
cmpsl
mov
pop
test
loopne
daa
xor
imul
shlb
dec
mov
imul
mov
mov
stos
clc
push
dec
mov
in
adc
xchg
stc
xchg
insb
daa
arpl
popf
aam
daa
and
aaa
lods
mov
sbb
adc
dec
js
pop
cmpsb
adc
repnz
lea
or
mov
cmpsl
xchg
push
pop
filds
jle
popf
loopne
mov
mov
cli
and
stos
mov
pcmpgtb
fs
aad
xchg
cld
pop
pop
cli
adc
mov
jo
jb
pop
jae
fdivr
sbb
test
addr16
inc
sbb
xor
mov
rcpps
stc
repnz
pusha
adc
mov
nop
adc
dec
jb
mov
jne
xchg
gs
int3
dec
xor
mov
cmp
push
inc
pop
push
int
adc
fldenv
out
lcall
mov
pushf
orl
dec
pop
lcall
xlat
jge
inc
mov
jmp
dec
push
sbb
out
xchg
dec
jle
sbb
ss
out
daa
xchg
mov
pop
cltd
and
jge
lds
mov
or
pop
xchg
jge
ret
mov
out
inc
mov
inc
add
push
mov
repnz
dec
mov
pop
jp
cmp
xchg
jb
insb
sub
sbb
data16
mov
xchg
mov
jns
xchg
jo
stos
in
inc
aaa
cmp
xchg
sub
pushf
test
add
subl
mov
push
dec
mov
scas
jg
pop
mov
pushf
pop
sbb
inc
imul
adc
push
ljmp
jl
adc
and
dec
push
mov
mov
fisttpl
dec
mov
jg
jo
xchg
jb
jg
ss
inc
inc
mov
adc
imul
pusha
and
scas
jb
push
aad
dec
jne
ss
out
add
arpl
pusha
aaa
jle
fs
dec
mov
ret
or
dec
lock
testb
mov
outsb
mov
xchg
pop
adc
scas
pop
ror
inc
les
mov
addr16
mov
push
daa
lsl
mov
rcrb
daa
out
fidivs
push
dec
fsubs
mov
outsl
dec
mov
add
loopne
mov
xor
cmpsb
dec
sbbb
mov
cmpsl
xor
lods
push
sub
cs
outsb
inc
xor
inc
or
mov
mov
cmp
loop
xor
pop
sti
dec
mov
pop
cmp
cmp
mov
ss
aam
pop
popf
dec
cmp
dec
and
pushf
sub
lret
dec
mov
test
mov
jle
cmp
fcoml
mov
adc
pop
pop
movsl
out
sbb
cmp
pop
in
pop
dec
pop
pop
mov
or
cld
mov
dec
mov
out
pop
ds
into
adc
sub
lcall
scas
mov
lahf
or
mov
stos
push
adc
push
mov
or
pop
test
clc
fwait
imul
fucomip
pusha
dec
cmpsb
test
adc
aad
lahf
mov
dec
push
cmc
enter
xchg
addb
in
and
jmp
outsl
movsb
mov
enter
dec
aaa
sbb
cmp
push
xchg
out
out
scas
int
jmp
or
insl
fadds
add
and
out
or
push
xor
add
xchg
jmp
xchg
std
cmp
sbb
xchg
inc
test
mov
ljmp
pop
sub
pop
daa
mov
dec
sub
xchg
rolb
andl
imul
jb
lods
push
push
shll
push
mov
and
cwtl
pushf
dec
bound
jno
int
mov
rorl
fwait
ljmp
scas
cmp
cmpb
or
adc
xor
pushf
xor
sbb
adc
mov
mov
adc
cmp
pop
cmove
add
ret
xor
xor
cmpsb
push
pop
fwait
mov
mov
sbb
add
add
mov
mov
push
adc
mov
popf
cs
xchg
push
in
shlb
faddl
rcl
shll
sub
ret
scas
and
mov
push
repz
pop
in
push
inc
xor
cmp
lods
jmp
clc
xor
lcall
adc
adc
adc
lahf
xor
rcrb
xchg
test
jp
in
in
mov
xchg
mov
cwtl
sub
or
mov
movb
mov
cmp
jge
jno
pop
lods
lret
aam
push
aas
xor
mov
mov
mov
pop
sub
mov
mov
jo
adc
xor
insb
xlat
stos
pop
jmp
inc
or
inc
popf
or
pop
pop
mov
ss
lods
wrmsr
fs
jmp
sub
pop
and
out
adc
int3
mov
jno
mov
insl
inc
icebp
jne
push
repz
jmp
fsubr
mov
xchg
and
insl
lock
push
shrb
mov
cld
lret
mov
pop
mov
push
xchg
les
sahf
xchg
cmp
fmull
cmp
ret
in
inc
xor
jge
rcll
cmp
cmpsb
dec
xchg
ret
test
lea
sub
daa
mov
lods
cli
add
out
add
jge
xor
or
jmp
lea
cwtl
sbb
sbb
adcl
adc
mov
or
mov
inc
xor
test
cmp
lahf
outsb
pop
mov
jno
in
shrb
pushf
or
leave
add
and
add
ret
mov
lcall
faddl
hlt
or
divl
jne
pop
stos
push
cmp
nop
mov
cmc
mov
inc
mov
push
push
movsb
lret
sbb
push
out
xchg
lds
fstpl
fwait
add
adc
jo
stos
xchg
mov
adc
aaa
arpl
inc
and
outsb
cli
xor
sbb
shrb
pop
sub
jge
call
out
mov
mov
add
cmp
out
mov
loopne
mov
sti
sbb
roll
fistps
mov
adc
adc
add
cld
loopne
pusha
orl
or
pop
cltd
shl
scas
inc
pop
cmp
jb
push
and
stos
or
cmp
rcll
cmp
iret
jle
mov
rorl
mov
in
ds
sbb
jp
cmpb
push
mov
stc
rorl
or
fcompl
inc
out
or
pop
js
push
fstl
mov
rcl
and
push
insl
push
inc
mov
add
mov
jecxz
mov
sub
adc
mov
mov
push
push
fcmovnb
pop
lock
mov
or
inc
aas
jmp
inc
repz
mov
test
push
test
cli
mov
fcmovnbe
leave
mov
mov
cmpsl
test
xor
push
sbb
xchg
dec
outsl
out
mov
xchg
lcall
jb
xchg
cmp
cmp
mov
or
pushf
mov
fwait
push
cmpsl
loop
xchg
push
negb
cmpsb
scas
scas
mov
mov
xchg
mov
es
lods
pushf
cmc
cmp
and
inc
jns
popa
out
es
mov
mov
cs
pusha
or
sub
out
insl
test
xchg
xor
push
insb
jb
mov
les
aam
outsl
cltd
shl
or
mov
cmp
repz
jp
leave
push
sbb
sbb
pop
mov
inc
push
inc
loopne
adc
inc
ss
std
and
sbb
aas
push
movsb
dec
into
jmp
mov
movaps
lret
mov
repnz
mov
xchg
test
test
or
cmp
cmpsb
or
mov
div
ss
shrl
xlat
xchg
xor
repz
cld
ror
daa
add
in
sti
mov
mov
push
shlb
mov
out
sbb
sarl
add
sbb
xchg
ss
mov
push
in
stos
fdivrs
in
dec
inc
xlat
pop
rcrb
pop
outsl
dec
pop
std
mov
adc
movsb
scas
push
jmp
in
out
js
loopne
mov
mov
xchg
cmpsb
xor
sarl
lsl
sti
add
add
jae
icebp
test
push
cmp
repnz
pop
xchg
mov
in
pop
loopne
cmp
jecxz
enter
mov
aad
and
or
movsl
fwait
dec
mov
add
lcall
dec
cli
adc
movsb
adc
mov
or
and
mov
mov
mov
jmp
lahf
mov
cmp
jns
or
add
add
push
jae
lret
cwtl
scas
in
sub
pop
addr16
mov
std
out
outsl
sub
dec
call
xor
lds
shrb
pop
add
cli
mov
rcr
addr16
xlat
fadds
xor
jle
pusha
nop
and
jb
scas
xor
out
sti
lahf
xchg
int
sub
inc
cmpsl
mov
adc
jg
jnp
mov
xor
sbb
xchg
insl
mov
jge
lret
jbe
aad
shrb
adc
xchg
dec
mov
pop
and
jae
test
sbb
icebp
lret
int3
adc
pop
xchg
les
or
xor
aad
out
mov
adcl
adc
xchg
rcll
popa
inc
repz
jp
fwait
pusha
int3
cmc
mov
mov
mov
cmp
and
mov
xchg
cmp
mov
cwtl
push
imul
out
push
mov
mov
mov
and
push
inc
push
sub
imul
add
push
mov
imul
das
jnp
neg
and
ret
decb
sub
dec
ror
mov
lret
mov
rol
loopne
jno
fbld
jne
movsl
in
and
lock
loop
sbb
jg
and
lcall
jbe
xor
push
lock
out
dec
movsl
adc
ret
jae
jbe
stc
adc
repz
or
das
mulb
xor
cmp
iret
push
scas
pushf
pop
and
add
scas
js
dec
rcr
sub
shll
incb
dec
cmp
stc
lock
inc
pop
sub
sub
mov
sub
pop
mov
and
inc
push
mov
pop
mov
std
int3
or
int3
push
xchg
rcrb
pop
pop
push
pop
cmp
push
adc
dec
das
out
mov
jnp
cmpsl
xchg
adc
inc
in
stos
jns,pn
nop
adc
mov
ror
or
in
jl
push
shlb
pop
jae
dec
std
push
dec
sbb
shlb
mov
dec
decl
add
mov
pusha
std
inc
imul
cmp
rol
sub
and
int
aaa
cmp
push
mov
mov
push
or
loop
loope
in
mov
cmp
push
dec
les
cmpsl
fsubp
add
ss
pop
cmp
mov
jo
or
xor
fcoms
mov
or
and
lea
inc
mov
sub
ljmp
imul
cli
movsb
mov
cmc
cmp
sbb
adc
mov
cmpsl
ficompl
enter
xchg
sar
pop
mov
popf
icebp
adc
and
dec
outsl
test
pusha
roll
mov
mov
lret
test
push
mov
mov
mov
xor
shl
xor
jmp
dec
fisubs
dec
dec
push
out
xchg
repz
inc
fdivl
adc
clc
adc
ret
dec
hlt
push
stc
mov
mov
or
xchg
adc
push
movsl
popa
jl
pop
lea
js
test
cmp
pusha
push
into
fidivrs
and
inc
andl
mov
jle
cwtl
les
xor
fs
shlb
stos
lahf
loop
repz
push
mov
out
repnz
ret
pop
push
shll
push
dec
mov
dec
cmovns
rolb
test
aad
sti
sbb
in
push
push
int3
fistpll
in
cmpb
nop
popa
and
loop
inc
sub
je
xchg
push
sti
gs
adc
notl
pop
fisttpll
hlt
fwait
dec
fcomp
push
jecxz
adc
imul
mov
shll
leave
cli
ja
push
in
push
inc
popf
add
mov
daa
das
popl
mov
xor
cmp
mov
adc
fst
fistps
or
jl
jnp
add
push
mov
mov
shrb
inc
inc
sub
stos
movsl
pop
push
cmpsl
sub
add
roll
jnp
push
lea
movsl
in
das
pop
push
lods
push
or
repz
lret
pushf
dec
sub
scas
dec
dec
imul
sub
rorl
and
rcrl
cmpsb
jge,pn
shl
and
xchg
into
leave
dec
out
fs
push
sub
imul
out
mov
sub
decb
adc
mov
push
sti
hlt
adc
mov
mov
pushf
stos
sub
mov
test
xor
cmp
xchg
lods
fldcw
pop
loopne
and
or
ror
sub
pop
adc
setae
repnz
bound
ret
negb
adc
ljmp
incb
sub
outsl
mov
push
mov
jecxz
inc
jnp
inc
popf
mov
dec
push
add
add
mov
int
cld
data16
jb
xor
inc
stc
xchg
push
aas
add
int
push
sar
fldenv
push
jmp
jne
jns
adc
mov
push
cltd
xchg
lock
mov
lret
imul
pop
cli
push
movsl
pop
aas
cmp
iret
inc
aas
pop
shll
mov
cmp
ljmp
pusha
push
push
adc
mov
movb
mov
jnp
ficoml
test
jns
into
xchg
jmp
xchg
fwait
lods
xor
lods
adc
out
mov
pushf
pop
dec
cmp
in
mov
out
push
xor
add
jle
stos
xchg
int
sub
test
xchg
sar
fdiv
ljmp
add
and
pushf
fildl
mov
inc
in
fisttps
cmc
ss
xor
lcall
sub
stos
and
xchg
inc
pop
ret
lea
inc
jbe
dec
mov
jns
popa
mov
or
cli
push
push
orb
xchg
xor
popa
imul
push
xor
add
scas
add
or
cmc
popf
inc
nop
cmpsl
sub
xchg
rcrl
out
sbb
adc
stos
ret
xchg
mov
outsb
mov
adc
outsl
xchg
roll
fcmovu
dec
cmpsl
adc
js
rorb
popf
xchg
xor
cmp
push
in
mov
dec
jb
adc
test
aad
jns
outsl
mov
jle
push
outsb
daa
sub
mov
rolb
popa
add
mov
ljmp
jge
jp
add
push
mov
stos
dec
fnstsw
sub
adc
jns
shl
inc
or
jp
mov
dec
sbb
ficompl
jno
add
inc
push
sbb
call
sub
jmp
ret
sbb
xor
inc
push
dec
insb
js
cltd
shlb
aaa
test
sti
dec
dec
lods
lock
push
insl
jo
mov
inc
popa
xchg
push
dec
push
jne
in
leave
cmc
int3
add
pushf
inc
ja
lock
push
test
ljmp
stos
subb
push
fisttpll
xor
mov
popa
sbb
out
xchg
or
clc
dec
repz
push
int
push
cs
fstps
fs
fs
mov
push
mov
cmp
sbb
fucom
adcb
lcall
test
jno
shlb
sub
nop
mov
jmp
jmp
jno
fists
loope
imul
xchg
outsb
fs
ds
sar
enter
cmp
vpunpcklwd
jnp
out
jns
inc
and
or
ret
gs
jno
or
je
xor
movsl
push
mov
add
cmpsl
lds
aaa
add
nop
pop
mov
jecxz
loope
dec
lahf
jl
push
lds
and
lret
mov
in
jno
jmp
sbb
ret
fdivs
jg,pt
int3
mov
imul
sbb
xor
push
sbb
sub
push
cmc
fwait
sub
mov
inc
inc
in
sbb
gs
mov
sub
push
in
notb
push
push
sti
lds
lds
sarl
stos
test
xchg
mov
push
dec
mov
cltd
cli
xor
push
dec
push
push
push
dec
in
inc
aad
notl
sbb
imul
xor
imul
dec
insb
scas
sub
lds
lods
mov
xchg
mov
arpl
mov
lods
mov
das
mov
jne
mov
stc
pushf
fnstenv
sub
daa
ss
push
leave
test
pop
xorb
add
loop
leave
arpl
mov
loop
in
dec
jp
adc
rcrb
add
mov
jae
xor
ds
fchs
inc
out
iret
push
dec
xor
cmpsb
xor
fisttps
xchg
jecxz
popf
mov
jne
ljmp
call
dec
out
leave
pusha
in
mov
out
iret
pop
ljmp
mov
pushf
xor
add
stos
and
mov
sti
popa
cmp
aam
pop
jae
xchg
call
add
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
jmp
cmp
sub
jae
sub
enter
adc
clc
adc
mov
pop
lcall
loop
das
cltd
push
jmp
pop
fstpt
mov
and
fisttpl
add
enter
iret
pop
mov
pop
call
imul
inc
sbb
repz
mov
mov
jno
xchg
pop
mov
push
test
loopne
add
jge
ret
je
es
int3
loopne
shr
push
mov
cmc
stos
les
lret
cmp
pop
test
jno
inc
out
pop
fnstcw
es
xchg
adc
or
insb
push
mov
lods
xchg
cmp
cmp
dec
and
scas
push
lahf
or
mov
clc
fwait
xlat
js
cmp
fcoms
jmp
pushf
adc
or
push
mov
and
xor
out
cltd
fisttpl
pop
or
fisubrl
aas
pop
scas
dec
inc
daa
imul
inc
ret
loopne
sub
dec
lret
scas
fldenv
and
cmp
imul
dec
inc
scas
rolb
mov
mov
lods
add
data16
es
mov
fadds
mov
mov
pop
jp
pop
aad
fwait
ja
dec
lret
fsts
iret
sub
aad
push
mov
fistpl
sbb
lds
test
add
gs
adc
cld
pop
scas
xlat
push
jno
xchg
in
inc
mov
notl
add
and
xchg
cwtl
loop
les
nop
inc
push
outsb
scas
push
mov
into
sbb
daa
out
jno
adc
mov
cmc
rcrb
bound
jg
pushf
jo
stos
lods
sahf
lds
rclb
fldcw
jmp
repz
jo
out
sbb
fisttpll
mov
xor
mov
inc
ficoms
sbb
cmpsl
pop
lret
cmpsb
out
pop
icebp
dec
cltd
fstl
jg
mov
mov
call
or
adc
out
das
sar
popa
movsb
aas
mov
mov
roll
rolb
sub
rclb
xor
push
inc
je
and
testb
movsb
mov
dec
add
fidivrl
test
jo
js
sub
or
in
push
dec
cmc
xchg
sbb
daa
repz
adc
push
ret
out
push
jmp
in
das
test
push
aad
lahf
xlat
insl
ret
inc
xchg
iret
sub
sub
mov
and
xchg
cmp
xor
bnd
ja
mov
dec
int
decl
jae
icebp
pop
mov
clc
bound
push
fnsave
mov
or
or
icebp
iret
or
sub
cmpsb
loopne
scas
das
mov
out
cmp
sbb
nop
fiaddl
jl
adc
jnp
es
shrb
pop
xchg
pushf
mov
aas
xchg
push
arpl
dec
mov
lds
ret
sub
jb
mov
daa
dec
dec
inc
push
sbb
roll
sbb
mov
ja
test
push
cmc
pusha
out
cmc
cmpsl
imull
sahf
aaa
int
pushf
cmp
bound
adc
decl
cs
sub
lds
shrb
sbb
push
fdivrs
mov
jp
cmpsl
int3
jg
push
test
jmp
sub
in
daa
ss
inc
inc
xor
mov
mov
test
imul
add
and
rdpmc
bound
repz
rcll
shlb
aas
es
sbb
dec
cs
lcall
mov
jle
and
lcall
aad
lods
notb
mov
or
out
lods
mov
lods
sbbb
cli
out
push
aad
fcmovnbe
jmp
adc
popa
dec
test
ljmp
int3
pop
in
jne
jo
xchg
and
outsb
pop
fsubs
ja
ss
lret
adc
enter
push
sahf
push
repnz
into
mov
insl
stc
xchg
inc
loope
cmp
jo
jle
fs
in
leave
sbb
dec
pop
sub
and
xor
mov
mov
cmp
jo
test
or
bound
mov
fstpl
mov
push
lret
dec
add
lock
sti
pop
les
fildll
out
fs
out
push
xor
daa
aaa
mov
dec
and
cltd
pop
notl
clc
pop
sarb
cmp
mov
mulb
iret
pop
add
mov
enter
adc
mov
fwait
orl
in
stos
adc
jmp
push
xchg
jle
pop
nop
mov
mov
inc
cs
xchg
dec
sbb
pop
inc
or
enter
push
adc
cmpsb
mov
andl
negb
jbe
sbb
dec
leave
push
scas
sub
sbb
push
cmc
ret
sub
enter
leave
cli
bound
daa
fidivrl
ja
push
cwtl
test
fsubrl
ret
mov
or
and
aaa
or
ljmp
push
jmp
sub
dec
dec
loope
pop
push
push
and
cmp
sbb
inc
call
or
push
popa
cmp
xor
daa
sti
aaa
cmp
into
clc
jo
jp
dec
jae
adc
mov
pusha
and
pop
xor
in
scas
pop
sbb
mov
jmp
and
sub
enter
xor
jecxz
and
mov
jl
xchg
sti
pop
fcoml
mov
je
rol
jno
aas
inc
mov
pop
dec
dec
mov
inc
jne
push
out
or
dec
shlb
mov
and
adc
mov
push
xchg
andb
push
dec
std
aam
js
loop
mov
adc
movsl
cld
xor
sub
mov
mov
daa
mov
mov
xchg
cmp
cmp
mov
jo
adc
or
scas
fwait
stc
pop
insb
jge
into
adc
mov
push
jecxz
cld
adc
ja
sub
scas
cld
sbb
dec
pop
mov
and
push
cs
mov
loop
stos
shrl
in
rorb
mov
mov
in
mov
mov
lahf
out
mov
pusha
clc
cmpsb
jp
ja
pop
inc
xor
lcall
inc
adc
jmp
mov
or
mov
mov
push
pushl
push
jmp
jmp
or
aam
mov
add
jg
adc
clc
adc
lods
idiv
add
ficoms
fldl
mov
imul
mov
sti
xchg
push
addr16
adc
das
test
cmp
fisubl
mov
mov
scas
lock
mov
pop
mov
push
xchg
jl
enter
bound
imul
das
adc
divl
fwait
ret
jle
xor
jne
mov
imul
or
adc
pop
sbb
sbb
int3
sbb
popf
pusha
fadds
shlb
shrl
add
push
lock
loop
pop
iret
mov
subb
add
fildl
sub
lds
aam
repz
shl
mov
add
sub
xchg
js
add
dec
jnp
inc
inc
mov
mov
xchg
test
pop
imul
adcl
test
bound
adc
movsb
push
shl
leave
and
jl
mov
pop
cmc
push
testl
dec
push
bound
pop
aad
fisubrl
out
rcrb
daa
addr16
in
mov
sbb
lock
jae
insb
mov
mov
out
mov
insl
dec
ss
add
add
in
mov
jge
lock
lret
dec
push
lret
lds
nop
cmc
xor
sbb
pop
and
rol
xor
test
inc
cli
lods
ljmp
jl
imul
xchg
andl
and
mov
xchg
shl
subb
insl
insl
cmp
cmp
cld
xchg
loopne
and
cmpsb
mov
inc
jbe
rclb
mov
sahf
popa
mov
mov
jl
sub
xlat
lds
inc
jne
call
adc
pop
nop
int
sbb
cmp
or
push
or
stos
pcmpeqw
mov
fnstsw
pop
loopne
mov
mov
mov
and
jmp
aaa
xchg
sahf
outsb
dec
inc
imulb
or
sbb
daa
or
loopne
scas
or
cltd
xchg
sbb
into
add
nop
lcall
fldcw
les
shll
adc
leave
mov
add
outsl
pusha
test
loope
pop
aas
xor
out
icebp
mov
xor
sub
stc
xchg
mov
adc
dec
imulb
faddl
das
cli
cltd
sbb
outsl
or
inc
xchg
dec
push
mov
mov
shl
cmp
out
mov
out
movsl
movsl
jle
lahf
fwait
xchg
add
test
cs
lret
push
ret
or
inc
adc
mov
imul
sub
cli
lock
test
sbb
jmp
out
or
repz
and
and
xchg
outsb
pop
push
xor
jl
leave
mov
xor
iret
mov
add
jo
fwait
cmpsl
repnz
insl
jg
pop
push
movsb
mov
lea
idivl
mov
inc
into
or
into
hlt
cmp
pop
pop
cltd
cmp
mov
ss
les
imul
jmp
pop
sbb
cpuid
repnz
or
xchg
dec
sub
sbb
scas
mov
rorb
fildl
push
or
cwtl
ja
cltd
fnstsw
fdivrl
pop
in
xchg
jbe
sub
stos
insl
clc
jge
addr16
ret
cmpsl
imulb
out
arpl
or
mov
mov
ret
cwtl
icebp
cld
jg
das
dec
cltd
enter
adc
inc
mov
or
jmp
ficomps
add
mov
jae
pop
test
ja
faddl
push
pushf
ds
nop
lods
jb
mov
xor
inc
test
mov
mov
mov
daa
inc
daa
inc
add
js
std
and
xchg
mov
dec
sbb
movsl
push
jno
xchg
xor
mov
int3
xor
push
push
sahf
aaa
pop
decl
sub
and
call
cmp
pop
adc
je
sub
push
loopne
btc
add
sti
xor
dec
rcrb
jmp
and
imul
sub
and
scas
ss
fstpt
mov
cmpsb
arpl
mov
scas
adc
ja,pt
ffreep
mov
jno
jnp
push
adc
in
add
and
sub
xor
pop
scas
xchg
jmp
cmp
std
gs
hlt
rolb
lock
out
pushf
pop
cmpsl
cmpsl
push
std
push
int3
and
mov
jg
cld
mov
jns
jbe
cmpsb
lock
int
lds
jbe
ud0
ss
jle
cmp
imul
fists
sti
aas
daa
js
setnp
icebp
insb
shll
inc
sti
aas
lods
gs
cmp
scas
dec
iret
pop
test
fmull
mov
xchg
cmpsl
or
xchg
add
xor
sub
rolb
lods
lea
mov
aas
pusha
sti
push
loop
mull
push
and
fisttpl
leave
push
sbb
es
mov
mov
stc
xchg
mov
add
xchg
outsl
icebp
ret
jo
popf
in
pop
cmp
fisubrs
pop
inc
push
in
mov
inc
call
mov
dec
pop
hlt
ja
dec
pop
jmp
shlb
ret
pop
pop
jno
mov
in
sarb
jnp
cltd
and
das
out
js
cli
pop
xchg
jbe
jb
or
adc
cmpsb
adc
add
add
cmc
pop
pop
xchg
je
leave
sub
hlt
lods
ret
pop
adc
outsl
jle
pop
mov
mov
mov
pushf
inc
nop
adcl
dec
push
mov
call
cmp
add
add
pop
sub
neg
cmp
ffreep
bound
mov
push
out
sbb
test
mov
test
sbb
gs
pop
out
das
jp
data16
pop
or
out
daa
repnz
loop
adc
or
mov
dec
popa
dec
pop
cmp
and
pop
lock
mov
fwait
add
push
adc
jnp
ljmp
xor
inc
ss
mov
sbb
jnp
clc
mov
cmp
xchg
adc
inc
xor
cmp
mov
popf
dec
xor
jmp
or
in
enter
imul
add
adc
clc
adc
fs
sti
jae
mov
out
movsb
push
leave
jnp
sub
enter
popa
addr16
sub
inc
pop
mov
sub
hlt
and
enter
push
jo
scas
xchg
lahf
dec
jb
fistl
adc
push
insb
int
shlb
fldl
xor
lcall
mov
mov
es
aad
gs
inc
pop
divb
dec
adc
mov
out
inc
mov
xchg
add
in
or
mov
mov
sbbl
mov
cld
mov
pushf
inc
mov
jge
jbe
icebp
jbe
notl
out
xlat
scas
lods
push
add
pop
mov
mov
cld
cmp
imul
arpl
or
aaa
cmp
loope
daa
jge
lods
xlat
test
stos
xor
repnz
and
cmp
push
call
add
xchg
mov
xchg
mov
cli
mov
stos
out
ficomps
int
cwtl
movsb
ja
inc
adc
push
inc
mov
dec
sbb
push
lret
je
rorb
add
lods
aad
jl
xchg
xor
cwtl
loop
sbb
sbb
push
movsl
inc
jbe
cmp
push
and
mov
cli
cmp
jne
and
mov
leave
fwait
insl
out
cld
xchg
lds
pop
sahf
fstl
mov
popf
shll
insl
fdivrs
push
cmp
dec
push
dec
fs
xor
and
xchg
add
mov
stc
sti
xchg
push
lock
dec
mov
sahf
movsl
inc
call
pop
cmp
xchg
icebp
addb
outsb
xor
sti
xor
push
out
test
dec
mov
loopne
daa
adc
into
push
sbb
xchg
bound
out
nop
xchg
push
psubd
xchg
in
stos
adc
hlt
and
push
stos
das
bound
lret
push
add
lret
test
clc
and
sub
imul
lock
sarl
fstpt
bound
sbb
cmc
repz
inc
test
shrb
pop
push
mov
test
daa
jo
mov
aas
into
inc
rclb
repnz
mov
adc
stos
push
adc
pop
imul
fadds
dec
pop
and
mov
sti
out
int
addr16
js
push
repz
pop
jp
mov
mov
mov
add
mov
loop
inc
dec
jns
xor
inc
sti
inc
out
cmp
inc
je
test
stos
rol
mov
dec
scas
xchg
sbb
xor
jo
bound
ljmp
lahf
inc
cmp
jle
hlt
sub
stos
stos
push
lahf
xchg
mov
push
xor
fldt
pop
jbe
rcrl
popf
cmpsb
inc
sahf
push
leave
mov
pop
pop
xchg
fldl
or
mov
js
movsb
or
dec
sbb
xor
xbegin
adc
sti
sbb
test
pop
es
pop
lcallw
cs
jb
addr16
pop
pop
or
pop
lods
push
mov
inc
pop
aam
imul
mov
lea
add
mov
clc
aad
outsb
push
pop
mov
insl
in
std
mov
add
imul
test
out
fucomi
cmpsb
out
jg
div
or
jbe
test
xchg
mov
cs
mov
js
xchg
jbe
into
add
fstpl
out
lret
or
cmp
enter
mov
sbb
xor
mov
test
push
stos
sub
jg
pusha
in
cld
xor
pop
enter
sub
inc
popf
dec
inc
dec
or
lods
pop
scas
or
pop
xor
inc
arpl
in
outsb
add
push
mov
pop
lods
xchg
stos
add
cwtl
aas
addr16
dec
das
popa
pop
dec
and
nop
leave
lahf
iret
mov
adc
stos
add
and
cwtl
dec
cmp
push
dec
outsb
jle
mov
clc
cmp
sahf
in
push
mov
mov
cli
and
test
sahf
pop
xor
sti
pop
stos
scas
stos
jmp
cli
shr
xor
bound
out
jmp
ror
insb
xchg
dec
inc
das
fcompl
push
fbld
flds
lcall
cli
jbe
aad
hlt
sarl
add
add
or
in
pop
ror
mov
inc
std
rcrb
mov
and
xchg
push
lods
or
mov
jg
in
fmull
adc
out
int3
lret
shr
mov
and
sbb
test
add
lret
rol
ljmp
out
push
push
inc
fwait
subb
cmp
xchg
cmp
mov
adc
popf
cmp
jp
mov
imul
add
adc
fistps
out
sub
jo
js
rcr
inc
xor
jecxz
or
lea
xor
lret
sbb
rcrb
inc
shrb
in
andl
shrb
mov
clc
cmp
out
je
out
ljmp
inc
nop
clc
xchg
inc
mov
adc
repnz
mov
pop
inc
out
sub
mov
jnp
je
add
mov
je
rorl
xchg
loop
lods
inc
push
loopne
cwtl
lds
push
adc
xor
xchg
js
ljmp
jge
lret
daa
jl
shlb
adc
jno
cmpsb
mov
mov
inc
push
test
sbb
jle
adc
sub
mov
ja
inc
repnz
repz
mov
add
dec
xor
xchg
test
cs
pop
mov
out
out
mov
mov
adc
cmc
push
sahf
mov
mov
mov
aad
aaa
push
adc
in
cmp
lret
push
nop
sub
fcoms
jge
push
xor
loopne
jns
call
pop
cmp
shrl
push
arpl
jo
pop
aad
adc
xor
mov
mov
les
sbb
mov
mov
mov
push
add
fs
jnp
pushf
jmp
fcmovnu
jle
adc
out
push
insb
shll
inc
mov
xor
cmc
sbb
addb
cltd
mov
call
jmp
in
cmc
dec
stos
dec
sub
add
aad
inc
push
jne
adc
clc
adc
sub
add
movsb
outsb
aad
lds
lret
mov
mov
jae
arpl
cmp
xor
aam
jnp
push
icebp
inc
ret
pop
insb
lcall
dec
jno
pusha
xor
mov
and
mov
cmp
and
mov
jne
es
cmp
adc
jb
cmp
inc
aas
mov
cmp
mov
insb
das
push
in
inc
out
nop
mov
push
lcall
cmp
xchg
mov
cmc
lcall
filds
int
jbe
bnd
cmpl
int3
inc
push
dec
sbbb
ror
xor
lods
cwtl
jmp
loop
loop
mov
loop
jmp
cmpsl
mov
rcrb
ja
jns
and
fdivr
movsb
sub
rorl
adc
dec
jmp
add
mov
js
mov
ret
mov
div
xor
xlat
arpl
aam
dec
in
lods
pop
or
test
jo
shlb
enter
cmc
jb
push
adc
enter
mov
loopne
mov
pop
pop
jne
push
out
sbb
in
loop
mov
call
push
stos
mov
mov
clc
adc
add
lret
xchg
test
inc
test
lods
shlb
inc
clc
mov
adc
or
sbb
ja
decl
and
xchg
push
mov
addr16
inc
fsubs
adc
cmc
mov
aaa
mov
add
xchg
mov
jge
out
push
repz
adc
inc
fldcw
orl
jp
mov
ret
inc
or
sub
icebp
movsl
push
int
push
adc
scas
sub
lgs
data16
mov
scas
aam
in
imulb
ds
inc
xor
push
sti
pop
jle
pop
je
sub
ljmp
or
mov
xchg
dec
or
push
dec
sub
dec
leave
jmp
xchg
adc
dec
inc
or
sub
mov
loopne
mov
lahf
jne
lods
cmp
cs
out
push
mov
jp
hlt
pushf
mov
xchg
dec
mov
cmpsl
popa
shlb
outsb
test
jns
jbe
or
push
aam
xor
loopne
or
xor
xchg
and
or
cwtl
cmp
jne
lock
mov
mov
outsl
xor
sti
adc
cmp
mov
add
sub
je
rorb
push
lea
and
mov
mov
mov
int3
or
rcrb
mov
pusha
dec
jno
mov
add
addr16
test
and
js
loop
fwait
pop
repz
push
and
in
mov
rolw
push
out
jl
imul
adc
cli
ret
inc
push
flds
into
in
xlat
cmp
add
cmpsl
clc
mov
or
in
xchg
loop,pt
dec
fwait
dec
dec
lahf
cli
test
inc
cltd
shlb
mov
push
mov
mov
test
mov
adc
adc
mov
pop
ds
es
adc
mov
enter
fwait
pushw
ds
fs
and
and
inc
mov
cli
adc
mov
inc
xchg
push
pop
cmp
cmpsb
fucomp
dec
into
imull
fcmovnbe
fidivrl
jg
cmp
jno
xchg
xchg
idiv
xchg
xor
mov
jg
test
and
dec
dec
sbb
lret
jecxz
cmpl
aas
movsb
xchg
lods
push
inc
dec
or
call
lahf
daa
bound
jnp
jns
testb
mov
in
repz
adc
adc
lds
jb
popf
daa
pop
adc
ss
or
in
pop
jg
repnz
loope
lds
add
fisttps
xchg
popa
adc
fwait
scas
jae
pop
enter
pushf
out
xchg
mov
sahf
sub
cmp
mov
mov
mov
xchg
xchg
int3
pop
lea
mov
cmp
ret
outsl
mov
ljmp
mov
lods
vsubss
icebp
flds
imul
test
mov
xor
sar
xchg
filds
mov
sbb
cmp
popf
loop
in
lock
add
rclb
scas
loopne
dec
push
dec
mov
sub
stc
jl
jb
push
mov
into
sub
adc
xchg
xlat
cmp
movsl
jmp
stos
ror
jle
mov
and
loope
inc
push
pop
scas
out
andb
pop
fld
jbe
sbb
add
push
xchg
jo
aad
loope
repnz
adc
mov
mov
adc
cmp
int3
fwait
in
dec
cmp
test
sub
xchg
fistl
mov
stos
loopne
aaa
add
lret
fcompl
je
inc
imul
pop
shll
rcll
and
jae
dec
sub
loop
shrl
cmpsl
mov
testl
test
push
or
add
insb
clc
xchg
add
in
rcl
cwtl
lret
faddl
sbb
gs
or
stos
xlat
pop
mov
outsb
push
loop
sub
xchg
rorl
xor
sarb
jb
inc
test
dec
mov
into
mov
xor
push
add
dec
cld
mov
loop
jmp
roll
fs
pusha
or
loop
push
sti
test
and
movsb
mov
adc
imul
pop
xorl
and
aad
loopne
ret
aaa
mov
inc
sub
mov
push
pop
push
xor
jl
jae
daa
in
mov
push
adc
out
cmpsl
mov
sbb
pushf
clc
imul
and
inc
or
sbb
mov
sahf
lods
loopne
pop
add
xlat
fcompl
xor
inc
pop
jecxz
pop
and
mov
jnp
in
mov
and
dec
outsb
inc
lods
mov
add
je
ljmp
mov
shrd
jmp
sbbb
pop
mov
pusha
push
push
out
cmp
or
adc
push
clc
adc
or
add
mov
stc
stos
fwait
xor
addl
lock
das
sub
mov
fadds
dec
xchg
pop
lret
inc
pop
push
mov
je
pop
jno
lret
fmuls
ret
popl
push
sub
icebp
orb
adc
lret
sahf
movsl
sub
add
ss
add
ret
jmp
sub
ret
adc
mov
and
pop
and
lods
clc
fcompl
add
test
push
pusha
rcrl
mov
cmp
xor
dec
and
mov
imul
mov
mov
pop
ficoms
mov
roll
test
ljmp
push
sbb
cld
aaa
sbb
sbb
sbb
sbb
je
mov
cmpsl
std
std
je
pop
mov
mov
xchg
jae
xlat
loopne
pushf
xchg
adc
leave
xchg
test
mov
arpl
xchg
insl
push
or
filds
mov
std
cmpsl
mov
insb
dec
mov
and
rcll
fwait
add
out
inc
insb
sbb
int
xlat
sbbb
out
imul
pop
inc
sub
jns
cmpsb
inc
ds
mov
sub
mov
in
or
or
xchg
xor
cld
addr16
mov
inc
outsb
dec
je
out
and
cmpsb
mov
fdivl
jge
mov
call
xchg
ja
outsl
pop
stos
or
inc
push
mov
xor
sahf
ds
dec
sbbl
icebp
outsl
rcrl
jno
mov
mov
inc
fdivrl
sbb
hlt
jp
mov
bound
imull
or
add
dec
or
std
xchg
jl
sub
cmp
leave
test
inc
or
hlt
xor
ret
mov
mov
mov
lahf
movsl
pop
orl
cmpl
hlt
add
in
in
test
jb
cmpsb
rorl
pop
hlt
mov
inc
popa
inc
fdivr
lock
or
cmc
mov
into
sti
push
int3
ss
mov
and
pop
icebp
cmc
es
ljmp
push
mov
adc
sbb
ljmp
int
dec
cmp
jnp
shr
xchg
jmp
cli
mov
push
dec
ja
sbb
or
in
enter
ss
dec
xlat
clc
aam
jbe
hlt
adc
inc
lods
mov
out
adc
fwait
jb
aas
dec
and
out
mov
and
scas
leave
xchg
lahf
dec
fildll
pop
int
sbb
test
int3
jecxz
fwait
out
dec
push
xchg
lods
mov
ret
lods
and
xchg
adc
popa
push
loope
dec
adc
loopne
imul
inc
into
movsb
and
movsl
pop
pop
mov
sub
fstl
pop
xchg
clc
sub
and
data16
lods
fadd
cmp
arpl
aas
lcall
xor
aad
outsb
sub
scas
and
sub
xchg
adcl
fwait
xor
test
add
lea
push
and
jp
out
movsl
in
or
repz
and
push
repnz
add
mov
loope
shlb
sub
adc
les
push
push
aaa
sub
inc
add
std
loop
sub
jg
scas
cmp
push
sbb
stos
rcrl
sbb
adc
dec
pop
aam
insl
adc
int3
jge
stos
pop
sub
movsl
cmp
adc
jle
jg
dec
push
stos
push
mov
cld
mov
fcoms
pop
lea
jecxz
adc
imul
movsb
aad
insb
in
inc
and
pushf
pushf
add
loop
xchg
add
mov
or
fnsave
jge
shlb
fmul
fdivp
add
pop
lds
inc
int
std
aad
test
call
lcall
leave
ficomps
rcrb
dec
or
dec
aas
mov
lea
aad
cs
cwtl
mov
inc
pop
mov
std
inc
xchg
rcll
fs
roll
jo
sarb
mov
jge
xchg
xor
mov
jbe
mov
call
push
jle
lahf
push
ds
sbb
fisttpll
fucomip
mov
pop
shrb
push
sub
push
pop
jae
push
mov
mov
dec
lahf
xchg
xchg
mov
shl
outsb
cmp
aam
mov
xchg
lahf
fcompl
in
in
xchg
add
dec
push
and
or
cmp
fists
add
mov
mov
mov
mov
cmp
movsl
iret
mov
fisubl
mov
jecxz
shr
aad
dec
sti
mov
test
jg
pop
xor
test
aad
and
sub
sbb
push
mov
mov
ds
fisttpll
jl
fs
push
aaa
or
test
inc
push
xchg
push
cmc
and
and
leave
loop
test
test
fadds
push
pop
adc
fwait
push
adc
aad
add
sahf
pushf
aam
xchg
aaa
pop
enter
xchg
mov
or
rorl
test
dec
dec
cli
jne
enter
stos
lds
scas
mov
jnp
je
jecxz
mov
sub
adc
jbe
mov
xor
int
xor
jecxz
stos
loope
xor
call
stos
and
outsl
mov
adc
mov
add
xor
pushf
cmpsl
cmp
mov
stos
inc
imul
xchg
hlt
arpl
mov
repnz
mov
pop
idivl
jl
dec
ret
add
andb
jp,pn
cmp
dec
enter
sbb
lret
cwtl
clc
in
xchg
rorl
aas
cmp
lcall
sub
scas
movb
mov
xchg
sub
mov
stc
int3
cmp
sub
sbb
adc
xor
mov
jnp
rol
cld
push
hlt
jle
mov
sub
test
aaa
xchg
and
mov
jmp
xor
push
xor
jmp
mov
push
push
push
mov
loope
add
dec
adc
clc
adc
insl
cmp
add
repnz
out
xchg
push
idivl
xchg
and
cmp
mov
pop
ljmp
push
mov
lret
addr16
cmp
mov
ror
xor
stc
or
cmc
cltd
jbe
add
test
inc
sti
repnz
mov
cmpl
or
sbb
cmp
jno
popa
fcmovne
mov
fsubs
or
xchg
inc
sub
and
jle
rcll
loope
popf
xchg
dec
mov
mov
fistpl
in
or
jns
fisubrl
mov
cmp
xlat
pop
inc
adc
jg
test
dec
jle
fdivrs
fcoms
xchg
push
add
rorb
xchg
pop
js
sbb
enter
jnp
inc
sbb
mov
addr16
mov
push
cmc
jmp
sbb
add
adcb
call
mov
and
add
out
xchg
mov
in
jl
mov
aaa
rcll
adc
lahf
dec
outsb
push
nop
xchg
mov
inc
dec
adc
mov
dec
arpl
xor
std
cs
outsb
mov
repnz
stos
or
cmp
repnz
push
in
loopne
popf
jns
add
iret
cvttps2pi
loopne
scas
int3
repz
jecxz
mov
sbb
xor
xchg
sarl
and
fildl
imul
dec
jnp
inc
add
cmp
int3
in
stos
jl
sbb
inc
sub
pushl
jle
push
and
mov
jg
add
leave
ret
lret
cmc
popf
sub
dec
in
xchg
icebp
mov
cwtl
sbbb
and
test
ret
mov
imull
pop
sbb
jnp
frstor
mov
dec
mov
xchg
sub
int3
mov
enter
sbb
lret
ja,pt
jmp
mov
jp
pop
mov
add
aas
or
or
xor
call
test
aad
sti
lcall
enter
mov
dec
push
mov
inc
call
jno
test
aam
xchg
icebp
insl
test
push
insl
mov
sahf
jge
and
roll
mov
fwait
insl
in
push
test
dec
lahf
inc
and
in
fnstsw
stos
xchg
xchg
push
adc
xchg
sub
ret
mov
push
daa
jp
ret
sub
jp
jnp
ljmp
test
mov
out
fcoml
xor
pop
xor
loop
insl
add
outsl
scas
rolb
xor
mov
jae
inc
lcall
lahf
pop
and
shr
xchg
jns
fisttpl
lahf
ljmp
cmp
cmp
pop
fidivl
mov
int3
adc
loop
xchg
inc
xor
cmpsb
jb
jb
xor
incb
in
xchg
test
ret
lods
xor
or
aaa
mov
push
outsl
outsb
cs
cmc
sbb
and
jo
inc
out
fbstp
pop
jg
clc
ror
in
cwtl
icebp
push
cmp
or
pusha
fcoms
push
mov
scas
sbb
mov
inc
push
sbb
add
inc
pop
xchg
pop
or
mov
pushw
aas
icebp
mov
push
sbb
xchg
pop
repz
test
out
inc
imul
add
mov
nop
cmp
out
les
jnp
xchg
std
add
xchg
ja
shl
das
push
addr16
dec
xchg
mov
dec
hlt
and
pop
pop
test
push
and
sahf
sbb
cmpb
xor
cmp
xchg
push
inc
dec
or
lds
push
add
mov
xchg
and
cmpb
mov
pusha
lret
aam
int
movb
movsb
xor
xor
std
int3
mov
ja
sahf
mov
clc
mov
mov
push
ja
and
and
shr
inc
nop
popf
mov
sub
rcrb
dec
out
xchg
inc
sub
push
mov
xchg
pusha
add
xchg
mov
movsb
int3
xchg
lret
mov
inc
lcall
jae
push
addl
mov
jp
vpshufd
roll
xor
mov
aam
push
movsl
cwtl
dec
xor
addr16
test
jmp
cmpsl
inc
nop
outsb
jle
inc
xor
jns
cmp
cltd
lods
add
mov
out
inc
add
cltd
int
rsm
mov
dec
push
test
pop
shll
fnstenv
movsb
fs
jne
pop
mov
add
push
gs
cltd
rcrb
jp
xchg
cmp
cmp
jmp
cmp
inc
cmp
pop
jecxz
and
xchg
inc
call
push
lahf
fsts
iret
mov
test
push
in
movsl
xchg
call
or
dec
cmp
xchg
pop
ljmp
pop
pop
and
pop
dec
sahf
out
xor
std
jmp
xchg
fcoml
xor
lret
pop
mov
mov
repnz
dec
loop
adc
stos
mov
fists
mov
shlb
aad
iret
inc
movsb
js
adc
mov
cmpsl
cmpsb
lods
add
pop
cltd
jnp
inc
lods
repnz
or
dec
dec
or
or
sarl
test
dec
inc
pop
in
jge
decb
loop
add
cmp
dec
out
sbb
idiv
lahf
arpl
jns
mov
aaa
roll
xchg
cmp
and
fnsave
repnz
xchg
fwait
xchg
cltd
sub
aas
dec
add
lea
dec
or
cmpsb
mov
leave
subb
dec
rolb
add
je
add
xchg
xchg
sub
or
mov
enter
and
and
push
mov
scas
mov
cmp
dec
cli
cmp
icebp
cld
add
mov
sti
jbe
dec
dec
push
jno
insl
jb
xrelease
loopne
test
fmuls
aaa
inc
sahf
fisubrs
adc
lret
daa
xchg
iret
pop
push
xor
in
stc
repnz
sti
cmp
clc
sarl
push
shrb
pavgb
lcall
xchg
push
mov
jge
getsec
mov
mov
mov
push
push
push
call
shld
shl
mov
jmp
push
hlt
jmp
push
or
movb
hlt
dec
stc
add
cmp
adc
clc
adc
sbb
xor
scas
add
int
cmp
in
inc
out
mov
data16
mov
movsl
mov
jge
sti
jb
jp
cmpsl
jl
jb
lock
cwtl
loope
aaa
fsubr
and
shll
sub
jge
or
sub
incl
mov
dec
push
clc
add
loope
cmp
or
in
roll
jne
cmp
xor
or
ret
mov
es
cmpsl
popa
cld
int
jecxz
xor
cmc
pushw
fdivrl
arpl
out
push
scas
dec
mov
xor
js
bound
inc
add
enter
cmp
or
ljmp
iret
xor
fcoml
fsubs
mov
idivb
fiadds
repz
jp
sarb
in
dec
scas
repnz
fldenv
dec
lds
cmpsb
mov
push
cmc
mov
pop
dec
arpl
jle
es
aad
and
sbb
jno
jge
ror
loop
jl
idivb
inc
imul
mov
loope
aam
daa
popf
stc
stos
fildll
mov
ljmp
addb
xor
or
inc
movsb
add
insl
out
cmp
cmp
int
jge
out
ljmp
addr16
and
and
fsub
pop
dec
mov
xchg
cld
jno
jbe
inc
sbb
repz
hlt
jge
std
div
cmc
cli
cmp
adc
pop
test
dec
es
icebp
or
std
cmp
stos
test
rcr
sbb
and
mov
or
enter
fsubs
fisttpll
xchg
std
movb
js
mov
outsb
imul
mov
mov
jecxz
mov
outsb
cmp
jl
mov
dec
fisttpll
add
mov
or
add
xor
jae
sbb
xor
pushf
es
lods
push
mov
mov
mov
mull
in
or
nop
jmp
push
sub
xor
into
sbb
push
add
sbb
dec
cltd
je
inc
insb
insl
nop
pop
mov
mov
jg
mov
inc
pop
aam
loop
cmpl
test
dec
sahf
in
outsb
ds
filds
cmpsl
cltd
test
cli
loopne
and
shlb
or
rorb
push
lcall
js
cwtl
and
fbstp
ds
mov
adc
mov
inc
sub
pop
movsl
sub
call
cli
mov
mov
xor
jge
pop
lock
rcrb
xchg
imul
mov
jge
mov
mov
xchg
add
ljmp
repnz
in
mov
add
push
in
jns
je
jecxz
mov
test
mov
jl
cmp
dec
xchg
and
sub
clc
cmp
sub
and
out
out
movsl
mov
adc
xchg
and
out
xor
ror
and
mov
inc
pop
stos
fs
or
dec
xchg
xor
sbb
daa
pop
fcmovnb
call
cmp
sub
lret
shr
rol
test
mov
arpl
and
lret
push
and
dec
mov
inc
jmp
lcall
cld
xor
fsub
sub
out
aas
std
jg
xchg
aam
dec
jle
pop
mov
xchg
mov
out
pushf
pushf
add
cmp
and
mov
jbe
mov
cwtl
jbe
in
pop
xor
inc
mov
aad
movsb
pop
sti
hlt
dec
adc
insl
sbb
mov
inc
cs
lret
push
mov
inc
dec
jl
rcrl
roll
test
mov
stos
cmp
dec
stos
mov
mov
pop
jne
dec
jmp
popf
push
cmp
dec
ds
pushf
sub
lcall
sbb
sbb
sbb
leave
pop
lcall
mov
dec
xchg
lcall
movsl
jg
mov
fildl
arpl
mov
jo
loope
icebp
fnstcw
mov
dec
cld
sub
xor
popf
insb
mov
pop
xchg
mov
daa
in
mov
sub
fsubl
push
pop
test
dec
lcall
mov
aas
mov
shl
sub
and
and
loop
fisttpl
bound
sub
mov
mov
mov
adc
jnp
lret
xor
xchg
cmpsl
pop
sub
jecxz
fstl
stos
and
bound
js
test
loope
jns
adc
dec
outsb
mov
pushf
in
adc
icebp
jmp
mov
bound
push
insb
in
mov
test
xchg
fisttpll
adc
int3
pop
pop
mov
stc
cld
fisttpl
lcall
push
cli
jecxz
and
jns
push
jnp
mov
add
jo
dec
and
adc
inc
test
cli
sbb
jo
cltd
out
in
pop
pop
shll
cmp
sahf
ja
adc
adc
in
sbb
inc
dec
rol
test
pushf
jle
hlt
mov
cmc
inc
sbb
sahf
insb
outsl
push
jge
xor
bound
ds
test
sbb
push
jb
in
stc
ret
jo
mov
fmull
stos
sbb
xchg
xor
adc
ljmp
movsl
mov
mov
jmp
addr16
mov
loope
push
push
ds
popa
lods
out
mov
or
sub
stc
pusha
or
int
mov
or
xchg
jmp
cmp
dec
adc
imul
out
jge
fildl
jp
cmpsb
mov
sub
sub
or
les
adcl
and
nop
adc
mov
pop
fdivl
mov
es
in
and
jmp
add
movl
push
lfs
es
stos
cwtl
arpl
inc
add
fmuls
mov
dec
sub
pop
sarl
mov
shrl
in
insb
xchg
xchg
popf
sarl
test
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
jmp
inc
mov
cs
jmp
inc
repz
push
sub
adc
repnz
test
inc
and
into
or
fsubrs
lahf
stos
and
clc
xchg
out
pop
mov
test
mov
push
icebp
cmp
adc
push
jo
jecxz
adc
mov
sti
push
jnp
pusha
mov
outsb
mov
and
dec
pusha
add
mov
scas
add
sbb
rorb
dec
cmp
hlt
pop
inc
addb
pop
adc
push
jmp
xchg
roll
dec
mov
daa
xchg
mov
inc
sbb
mov
push
xor
hlt
dec
and
xchg
inc
xchg
mov
ss
mov
pop
add
cmp
mov
pushf
mov
enter
sub
xor
loopne
test
clc
int3
jp
cmp
repz
push
lahf
xchg
cmpsb
fwait
enter
cwtl
out
fistl
out
and
mov
loopne
push
mov
jl
dec
loop
daa
add
sub
repnz
out
in
mov
cld
dec
sub
push
out
xchg
aas
jmp
int3
xchg
cmp
sarl
cmc
test
je
xor
int
pop
mov
mov
and
cmpsl
out
jl
mov
add
lock
sbb
leave
fildl
sbb
sbb
ret
pop
repnz
lret
push
js
sbb
iret
addr16
dec
lods
sub
pushf
out
fldenv
jl
pop
sti
inc
repz
enter
pop
xchg
jmp
xor
repz
push
xchg
shr
pop
xchg
lods
xchg
shll
test
push
scas
xor
and
fwait
shll
inc
cmpsb
add
or
dec
jmp
sbb
mov
sbb
pop
scas
andb
push
je
push
imul
adc
inc
inc
adc
bound
xor
daa
adcl
cmp
or
shr
adc
cmp
add
stos
testl
or
scas
std
xchg
lods
xchg
push
mov
dec
xchg
xor
xchg
dec
les
in
dec
lods
rcll
mov
inc
xchg
push
jne
dec
mov
sbb
dec
sahf
cltd
notb
and
loop
xchg
lret
pop
mov
dec
pop
cmpsl
cli
pop
sbb
sbbb
int3
mov
sbb
xchg
scas
mov
shll
mov
fisubrs
imul
movsl
lcall
xchg
aas
test
jne
addr16
ret
repnz
lock
jecxz
jne
adc
sub
cmpl
add
adc
pop
movsl
mov
sbb
jg
mov
adc
inc
adc
xchg
js
adc
mull
or
xchg
or
dec
jbe
pop
les
push
fisubrl
lret
ret
shl
mov
add
mov
scas
xchg
add
movsb
shlb
cmp
or
lcall
push
addb
mov
and
daa
inc
fs
xor
test
lds
lods
test
int3
add
bound
add
test
jne
cli
arpl
mov
xor
cli
stos
push
sbb
mov
or
ljmp
mov
andb
inc
pop
js
jecxz
cmp
aad
insl
pop
lods
pop
in
sbb
jnp
dec
fildl
push
inc
dec
imull
lret
std
jae
xchg
adc
popa
cmp
xor
cmp
mov
ja
push
into
cmpsl
arpl
hlt
dec
mov
aad
pop
pop
andl
jmp
jns
daa
xor
dec
inc
test
lea
push
loopne
add
lcall
imul
test
cmpsl
mov
sub
sbb
loope
test
cmpsl
mov
dec
shrl
add
pop
xchg
in
xchg
movsb
adc
cs
add
or
scas
xchg
mov
adc
pushf
popf
arpl
test
arpl
pop
out
xchg
sbb
mov
push
xchg
std
jge
outsl
adc
outsl
mov
mov
sub
ret
sbb
mov
dec
or
sar
js
cli
shll
pop
lahf
bound
xor
mov
cmc
in
shlb
cmpsb
into
mov
xchg
loope
leave
push
mov
xor
and
inc
push
push
mov
fbstp
fisttps
ss
int
loop
xor
lods
xchg
lds
imul
pop
lea
in
lcall
pop
mov
stos
leave
scas
stos
sub
lret
lds
fcmovbe
sub
fstl
jno
jns
inc
sub
xchg
sbbl
add
insl
pop
fildll
cmpsb
xor
pop
aaa
out
mov
mov
rcrl
sub
std
sti
je
cltd
mov
es
lock
jp
loop
sbb
pop
mov
xchg
xchg
sbb
jle
mov
shlb
fistpl
sub
cmpsb
push
mov
and
dec
jbe
shrb
ss
or
add
mov
fnstsw
add
xor
add
pop
out
outsb
add
mov
add
lea
add
pusha
jmp
les
aad
mov
pop
outsl
sbb
test
cwtl
pusha
jl
pop
push
jbe
mov
jbe
cmp
and
jne
mov
test
leave
inc
push
sbbl
outsl
icebp
mov
push
jl
mov
push
cmc
add
pop
xor
mov
stos
subl
outsl
xchg
mov
add
mov
mov
mov
call
inc
int
mov
or
mov
sbb
inc
sub
out
cmp
loope
clc
xchg
fiaddl
add
push
test
loop
inc
adc
cltd
cmp
mov
inc
adc
push
jne
add
sti
loop
sub
cmp
mov
cmp
inc
dec
rol
clc
dec
addr16
out
negb
mov
push
mov
push
cmpsb
sahf
icebp
sbb
shr
fs
fcmovnbe
clc
fmull
adc
cmc
inc
or
sub
sbbb
or
xor
fbstp
and
ljmp
sbb
test
leave
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
jmp
jmp
dec
int
xchg
jle
or
hlt
xchg
pop
adc
clc
adc
pop
icebp
cwtl
push
stos
adc
mov
mov
test
dec
xchg
adc
rorb
lret
iret
movsl
adc
enter
fcomps
xor
sub
scas
mov
sub
adc
push
mov
adc
out
jl
insb
mov
push
imul
pop
push
test
loopne
sub
fcoms
out
pop
icebp
stos
ret
out
outsb
out
pop
mov
iret
out
and
mov
in
insl
or
and
push
lret
std
or
add
fucomip
push
test
sub
clc
sub
pop
lods
jne
inc
sbb
xchg
movsl
imul
lock
dec
ljmp
cmp
mov
xchg
xorl
xor
dec
add
aas
xchg
lea
add
aad
push
xor
test
and
daa
dec
sarb
arpl
inc
movsb
test
mov
push
out
mov
dec
dec
push
daa
pusha
les
ret
xchg
dec
arpl
js
jle
mov
ljmp
hlt
push
inc
dec
and
cmp
sub
adc
dec
nop
or
icebp
fisttps
jle
mov
jbe
popl
aam
jg
push
loope
mov
in
das
into
subl
sub
and
call
push
mov
adcb
in
dec
mov
andl
mov
mov
pop
and
orl
inc
inc
lahf
push
or
lock
pop
ljmp
cmp
leave
stos
push
or
repz
jo
ljmp
or
mov
mov
cmpsl
mov
scas
pop
clc
mov
mov
je
mov
ljmp
jecxz
sbb
mov
out
leave
or
lahf
dec
aad
aad
xchg
dec
popa
movsb
jg
lret
and
jns
cld
xchg
sbb
push
adc
jno
pop
lods
addr16
arpl
cli
ret
fmulp
popaw
jmp
loope
mov
mov
xchg
mov
xchg
jecxz
enter
cmp
mov
mov
inc
xorl
das
hlt
pop
adc
jmp
out
mov
pop
add
pop
mov
out
int
push
add
ds
std
push
xorl
pop
clc
xchg
sub
mov
cli
sbb
flds
push
add
inc
mov
xchg
je
xor
mov
lea
push
pop
inc
xchg
dec
or
addr16
cmp
out
imul
inc
into
jle
imul
xchg
adc
sbb
push
xchg
mov
cmpsb
test
shrb
sbb
sbb
in
and
mov
lahf
cmpsb
jbe
scas
aad
pop
icebp
and
and
push
pop
mov
xor
jnp
xlat
into
sub
dec
ret
dec
shl
sub
sbb
aad
shr
lret
mov
adc
test
jle
jbe
outsb
add
adc
dec
repnz
adc
enter
xchg
repnz
mov
push
into
inc
testl
ficompl
xlat
xchg
cmpsl
insl
ljmp
xor
flds
add
mov
inc
dec
js
xchg
hlt
mov
push
or
cmp
in
xchg
xchg
enter
dec
cmp
push
dec
cltd
add
cwtl
cmpb
xchg
fimull
pop
orb
push
sub
cwtl
out
dec
cmpsb
jnp
sbb
movsl
add
testb
xor
push
or
adc
sti
fmul
popf
push
aaa
aas
push
and
jae
movsb
xchg
fisubs
inc
mov
in
xchg
ja
sub
mov
mov
std
lret
push
ret
sbb
jbe
out
jns
mov
mov
out
add
cltd
in
inc
inc
enter
sar
test
mov
jno
out
enter
jecxz
xor
xor
ds
sub
shlb
jb
sbb
cltd
pop
xor
mov
cwtl
sbb
sbb
stc
sbb
out
and
fldcw
movsl
cld
clc
repnz
out
jg
mov
movsb
outsb
cs
shrb
into
into
call
jne
mov
xchg
xorb
popf
pop
dec
cltd
stos
xor
je
ja
sub
mov
data16
mov
jle
lahf
pop
div
mov
inc
hlt
xchg
inc
jp
ret
pop
mov
inc
xchg
or
adc
push
sahf
adc
cmpsl
ja
aam
xor
sete
jp
push
and
xchg
imul
loope
and
fiaddl
inc
xor
mov
aam
mull
adc
lock
andl
cltd
int3
or
out
pop
push
inc
cmp
outsl
scas
test
pop
loop
and
js
jb
pusha
xor
inc
out
les
pop
andb
cmp
pop
push
popa
gs
sbb
punpcklwd
dec
in
xor
ror
outsl
jle
push
call
imul
mov
fdivrp
jns
sub
pop
push
xchg
test
stos
cmp
cmp
xlat
cli
jg
int3
fwait
jmp
nop
mov
notl
adc
dec
pushf
lods
outsl
test
mov
push
xchg
pop
inc
out
xor
push
jns
mov
cmpsl
mov
clc
jle
stos
push
data16
add
fwait
lcall
fldcw
ss
lret
or
enter
push
lock
out
adc
mov
movsl
push
mov
lea
pop
insl
popl
mov
mov
mov
idivl
test
gs
or
cwtl
inc
mov
inc
sub
push
mov
rolb
pop
rcll
or
sbb
xor
xlat
jbe
mov
into
call
pop
xorl
mov
lds
cmp
push
cmp
jmp
shll
pop
push
ficoms
stos
sbb
in
sbb
call
add
subl
adc
shll
mov
lods
dec
sub
xor
sub
push
in
shll
in
add
ljmp
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
jmp
ret
icebp
imul
scas
sbb
sbb
aad
adc
arpl
jle
xor
cmp
xchg
sbb
xchg
adc
js
dec
bswap
mov
mov
cmp
mov
fistl
mov
lret
jbe,pt
dec
lret
sar
sub
outsl
sbb
cltd
fcompl
sbb
pop
adc
test
je
cmpb
mov
add
ljmp
inc
cmpsl
inc
fldenv
add
jle
test
pop
loopne
lds
cmpsl
mov
jecxz
hlt
inc
inc
cmp
push
gs
addl
xchg
lret
mov
cli
jno
hlt
roll
aad
lret
mov
ja
test
mov
pushf
test
pop
mov
push
dec
sub
or
push
cwtl
pop
fmull
xor
xor
sub
mov
cmpl
sarl
lret
loope
leave
jno
test
jl
pop
out
idivl
and
in
iret
or
push
div
push
subb
arpl
and
mov
add
lcall
adc
dec
jp
rcll
nop
or
pop
push
pusha
pop
mov
fwait
ret
adc
jp
adc
mov
mov
or
rcrb
mov
or
lods
mov
in
outsl
lcall
xchg
js
stos
scas
repnz
push
and
push
jecxz
adc
mov
xor
add
fs
shll
and
into
stos
jle
xchg
sti
test
sub
mov
mov
sbb
xlat
and
and
orl
mov
push
int
jno
int3
ljmp
or
ficoms
out
jmp
inc
push
push
xchg
lret
es
cs
leave
leave
and
mov
out
dec
jecxz
fsubrs
add
or
enter
cmpsl
add
mov
lahf
mov
adc
movsb
pusha
test
adc
addr16
scas
cld
out
push
insb
pushf
mov
fcoml
sub
iret
in
sti
mov
mov
push
jno
dec
jne
fcomps
mov
cmpb
ljmp
mov
stos
loope
arpl
fiaddl
inc
inc
cwtl
imull
popa
jne
mov
adcl
jbe
jge
out
stos
cmp
mov
pop
leave
add
fcmovnb
imul
shrl
add
adc
imulb
inc
inc
fdivrp
popf
or
addr16
insl
inc
and
xchg
int3
test
add
jo
pop
add
mov
sbb
push
push
mov
jmp
scas
push
in
push
mov
inc
xorb
jns
popa
mov
pop
cmpb
jbe
fsubrl
jmp
cmc
cli
movsb
movaps
repz
pushf
push
aas
pop
xor
int3
fidivl
cmp
mov
xchg
add
out
lret
fwait
cmp
stc
mov
pop
test
mov
shl
jbe
ja
pop
pop
lods
add
xchg
pop
rolb
dec
repz
mov
hlt
sbbl
sub
jmp
xor
xor
aam
xchg
and
fisttpl
xchg
movl
outsb
cmpsl
sub
shrb
les
frstor
push
repz
pop
sbb
in
popa
jae
dec
sarb
pop
inc
mov
lds
jb
rcr
stc
push
fnstsw
pop
inc
pop
jno
out
jmp
xor
jmp
mov
push
mov
stc
iret
add
add
aam
mov
sub
outsl
nop
out
daa
fisubrs
mov
das
div
xchg
and
jne
test
out
fisttps
ljmp
mov
ds
or
push
leave
aaa
call
bound
xchg
mov
and
sbb
mov
xchg
and
faddl
addb
idivl
push
push
mov
cmc
adc
push
test
push
insb
in
add
adc
mov
sahf
mov
push
push
popf
mov
jg
fsubrp
es
lea
cld
jo
xor
jne
or
push
add
cmc
sub
shlb
imul
scas
jb
sti
gs
leave
push
lea
je
inc
xor
push
clc
pop
sub
sbbl
shlb
adc
outsb
cmp
pop
push
in
js
jmp
cmp
fidivrs
mov
gs
xchg
mov
pop
mov
jae
dec
cltd
mov
and
loopne
xchg
arpl
subb
sbb
or
lea
movsl
ljmp
testl
out
sub
daa
push
mov
mov
out
hlt
sub
push
mov
push
or
stos
ss
pop
clc
push
outsl
int3
lods
shrb
dec
xor
mov
mov
pop
push
dec
mov
sbb
sbb
sub
hlt
xor
xchg
mov
and
xor
inc
jnp
mull
in
adc
cmp
push
fwait
cmpsl
mov
jnp,pt
ja
mov
or
gs
lret
sbb
movsl
outsl
icebp
pop
push
outsl
push
lret
popf
push
xlat
imul
aaa
arpl
dec
push
pop
cmp
mov
push
cmp
out
push
mov
add
clc
pop
add
jg
inc
jno
lods
cmp
cmp
daa
in
out
push
pop
jbe
or
stc
loopew
ret
inc
and
and
test
repnz
push
sbb
es
in
mov
push
imul
enter
fstps
test
pop
lret
cli
pop
cs
rdtsc
enter
sbb
pop
lret
call
pop
loop
hlt
push
dec
push
insb
icebp
ljmp
dec
gs
shrb
iret
sub
and
popa
cwtl
sub
mov
push
je
daa
sub
cmp
mov
ret
es
cmpsb
cmp
xchg
adc
xor
cmpsl
jmp
inc
xlat
sub
mov
mov
jmp
in
fmuls
adc
mov
add
cmp
loop
push
into
aas
xchg
and
pop
xor
shr
incb
stos
test
les
jmp
sbb
sbb
orl
rcr
in
mov
push
mov
popf
lcall
outsl
test
sti
lods
fwait
xchg
lock
and
mov
lods
or
jg
popaw
mov
sbb
jne,pt
mov
jle
clc
in
into
jno
sub
mov
aad
mov
xor
jns
jae
sbbl
shrd
movl
shr
ret
mov
xor
orl
and
jmp
add
ss
ss
cs
mov
cmc
inc
or
cli
adc
xor
pusha
std
push
cmp
mov
dec
shl
jnp
and
adc
lods
xor
rcrl
jmp
shr
add
add
mov
adc
and
call
scas
cmpb
pop
jmp
dec
xor
xor
data16
xlat
movsl
mov
mov
mov
mov
lds
mov
xchg
daa
or
push
and
outsb
out
mov
cmp
loope
cmp
aam
in
mov
mov
scas
xor
cmpsl
and
pop
add
fisttpl
rcr
jmp
fwait
idivl
negb
xchg
jo
mov
dec
fidivrs
lods
sbbl
and
nop
or
xor
jae
sub
movsl
fstps
nop
and
cmp
movsl
dec
mov
lcall
out
adc
xchg
test
inc
clc
push
idivb
add
pop
int
sbb
enter
jno
lds
jg
in
xor
pushf
in
sbbl
mov
stc
xor
icebp
push
rolb
add
mov
incl
mov
jg
pop
dec
sbb
push
sub
push
daa
in
loope
push
fwait
cmc
mov
fdivr
and
mov
push
adc
xor
dec
data16
ror
in
sbb
sar
pop
sar
dec
addb
jle,pn
pushf
mov
pop
mov
adc
inc
sbb
jo
aad
sbb
jmp
stos
sbb
jp
rorl
movb
cmpsl
ret
lods
xchg
lods
popa
xor
xor
jae
dec
test
adc
ds
in
fimull
inc
sub
cmp
aad
adc
pushf
fdivrl
rcrb
shll
sub
sub
or
mov
pop
mov
mov
adc
push
push
ror
enter
stos
sub
push
sti
adc
push
repz
loopne
jle
cld
mov
shll
into
and
pop
push
fsubs
adcl
xor
outsb
ret
in
mov
mov
push
mov
outsl
inc
pop
jo
cltd
int3
adc
mov
loope
ret
inc
loopne
pop
add
pop
shlb
lret
xlat
pop
mov
mov
mov
ja
add
jle
mov
insl
data16
mov
and
ret
add
les
push
jmp
dec
aad
add
iret
mov
inc
clc
stc
xorl
xchg
sbb
pop
lahf
and
es
and
inc
cmpsb
fs
add
mov
int3
xchg
jp
test
or
pushf
rolb
pop
ja
rorl
mov
int3
adc
cbtw
repnz
sbb
in
fistl
cmp
das
add
addl
roll
jge
mov
addb
jo
shl
jge
xor
mov
mov
std
loope
jae
adc
iret
cmp
inc
mov
bound
arpl
stc
xchg
mov
dec
enter
bound
xor
sbb
es
scas
pop
mov
hlt
out
fldcw
dec
ficomps
cwtl
mov
mov
stos
jecxz
inc
out
pop
adc
inc
flds
sbb
dec
or
aas
scas
ja
sti
mov
jp
int3
insl
testb
in
jnp
xchg
repz
in
test
in
and
imul
xor
movb
cmp
idiv
cwtl
mov
in
sahf
mov
sub
mov
dec
psubq
push
mov
cmp
cmp
xchg
dec
fimuls
popa
mov
adc
sahf
clc
cmpb
mov
mov
jae
and
or
sub
jmp
or
pop
dec
adc
hlt
or
dec
pop
std
sub
and
push
iret
mov
sbb
fcmovb
cmp
lret
lods
inc
cs
enter
std
cltd
mov
aas
cmp
dec
imul
imul
mov
and
mov
aaa
shr
mov
data16
dec
je
or
sub
fst
js
insl
push
mov
jge
outsb
into
pop
xor
enter
mov
jecxz
push
xor
add
cltd
push
jae
scas
xchg
mov
movsl
push
js
jecxz
xchg
out
out
inc
sub
gs
cmp
insl
jp
fwait
jecxz
rorl
adc
aam
dec
stos
test
xchg
jl
ss
or
pop
out
pop
adc
into
pushf
adc
jmp
aaa
out
adc
jae
mov
mov
das
sub
pop
sahf
outsl
sub
adc
mov
push
movsl
mov
outsl
mov
push
pop
push
mov
pop
addr16
pop
and
jge
addl
int
lcall
mov
shll
idivb
scas
ffreep
mov
and
adcb
hlt
lods
cwtl
in
mov
dec
and
stos
std
xchg
mov
pop
inc
mov
adc
add
sahf
leave
cwtl
pop
sahf
mov
xor
std
outsl
movsb
into
inc
xor
pop
ss
daa
das
xchg
adc
inc
xchg
cs
push
push
jmp
pop
pop
sub
inc
pop
into
mov
bts
rcrb
call
rol
push
mov
sub
cmpl
movl
movl
jmp
movl
jbe
pushl
pushl
call
adcl
subl
sbbl
add
xorl
incl
movl
xor
xor
add
mov
mov
movl
andl
mov
movb
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
push
pushl
push
call
incl
subl
xor
xorl
orl
orl
or
orl
or
movb
subl
movb
movzbl
mov
addl
sub
addl
imul
cmpl
mov
mov
jmp
mov
jne
pushl
pushl
push
pushl
pushl
pushl
call
movzbl
xor
sbb
orl
andl
subl
orl
movzbl
subl
push
adcl
and
mov
movb
orl
movb
andl
movb
sbbl
movb
andl
mov
mov
add
adcl
imul
mov
or
mov
subl
and
mov
movl
cmp
movl
ja
mov
and
mov
sub
mov
cmpl
not
mov
jmp
mov
ja
push
push
push
pushl
pushl
push
pushl
pushl
push
push
push
pushl
push
call
movzbl
and
sbb
xor
xor
or
adc
mov
sub
mov
not
mov
mov
movzwl
movl
movzwl
shr
andl
or
xorl
sub
andl
mov
movb
xorl
movb
mov
mov
xor
add
movzbl
cltd
push
pop
idiv
mov
movb
movb
mov
mov
add
movzbl
movzbl
cltd
idiv
mov
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
mov
push
push
push
call
mov
mov
mov
or
mov
mov
shl
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
orl
push
add
push
xorl
mov
dec
mov
shrd
cmpl
mov
movl
jmp
movl
jg
push
push
pushl
pushl
call
or
xor
or
mov
sub
xor
adc
sub
xor
xor
adcl
neg
shr
xor
mov
not
mov
cmpl
mov
mov
mov
mov
jmp
mov
mov
ja
push
push
push
pushl
push
call
addl
movzbl
sbb
sub
xor
xor
mov
xor
or
mov
notl
mov
shl
subl
mov
xorl
shrd
add
xor
movl
shr
adc
mov
mov
xor
mov
sbb
or
mov
or
mov
sbb
mov
mov
mov
mov
add
mov
cmpl
movzwl
movl
jmp
mov
notl
jae
call
adc
sub
and
xor
sub
adc
movl
mov
mov
add
mov
addl
mov
cmpl
movl
mov
movl
jmp
movl
jne
push
call
neg
xorl
or
xor
xor
or
or
add
incl
inc
mov
add
shl
xor
shld
movzwl
or
mov
shl
mov
xor
xor
movl
movl
movl
movl
cmp
jne
cmp
movl
je
mov
and
mov
mov
cmpl
mov
mov
not
jmp
movl
je
pushl
call
adc
or
incl
subl
sub
mov
movl
xor
shld
orl
shl
sbbl
xor
decl
xor
movl
cmp
jne
cmp
movl
je
mov
mov
sub
and
mov
mov
add
mov
addl
shl
mov
addl
xor
andl
shr
addl
or
mov
cmpl
mov
movl
movl
jmp
not
jl
push
pushl
call
add
and
or
adc
and
adc
adc
sub
mov
orl
mov
adc
mov
xor
add
mov
add
mov
sub
mov
orl
push
adc
pop
orl
sub
mov
add
notl
mov
cmpl
mov
mov
movl
movl
jmp
movl
jb
push
push
push
pushl
pushl
call
orl
or
mov
adc
dec
sub
sbbl
lea
cmpl
mov
mov
mov
jmp
movl
je
pushl
push
pushl
pushl
pushl
call
movzwl
and
xor
adc
neg
subl
xor
mov
movzwl
add
mov
mov
orl
xor
adcl
shr
addl
shl
or
mov
adc
movl
cmpl
mov
movl
not
mov
jmp
not
movzbl
je
push
call
sbb
xor
or
add
and
mov
mov
movl
xor
shr
addl
shl
andl
or
push
lea
push
lea
xorl
push
adcl
call
cmpl
movl
mov
mov
jmp
mov
movl
jge
pushl
push
push
push
pushl
push
call
sub
adcl
movzwl
adc
or
movzbl
sub
mov
mov
xor
or
sub
and
mov
add
mov
xor
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
call
adc
mov
mov
or
adc
and
adc
orl
notl
shr
cmpl
mov
movl
movl
jmp
movl
movl
je
pushl
pushl
pushl
call
subl
or
sub
neg
notl
adc
shl
cmpl
movl
movl
mov
jmp
notl
mov
ja
push
pushl
pushl
call
movzwl
sbb
xor
and
sub
sbbl
adc
or
push
lea
adcl
push
or
mov
mov
or
shrd
xorl
shr
sbb
mov
mov
adcl
xor
adcl
xor
xorl
or
subl
lea
adcl
push
shl
orl
call
dec
mov
and
mov
xorl
xor
mov
sbb
mov
shl
shr
movzwl
sbb
or
or
push
lea
xor
xor
sub
push
add
mov
neg
mov
and
shrd
cmpl
movl
not
mov
jmp
movl
movzbl
jge
push
push
pushl
push
pushl
pushl
call
mov
mov
or
sub
movl
movzbl
sbb
mov
or
mov
xorl
xor
xor
sbb
shr
mov
or
mov
xor
andl
shl
sbbl
xor
addl
or
xorl
lea
push
call
inc
mov
adc
mov
movzwl
or
xor
xor
shl
shr
cmpl
movl
movl
jmp
mov
mov
jg
pushl
pushl
push
pushl
pushl
pushl
call
movzwl
xor
inc
or
inc
mov
xor
add
sub
or
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
shl
or
mov
xor
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
shl
or
mov
xor
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
andl
or
mov
movl
jne
cmpl
movl
movl
jmp
movl
not
jl
pushl
call
and
adcl
subl
andl
movl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
push
call
pushl
call
test
jg
movl
movl
movl
mov
adc
mov
sbbl
imul
orl
or
and
mov
xor
mov
movl
movl
mov
or
mov
subl
mov
push
subl
add
movl
push
movl
adc
orl
push
push
andl
call
add
mov
adc
mov
movl
or
movl
cmpl
mov
mov
jmp
mov
movl
jle
push
call
adc
movzwl
sub
adc
subl
adc
mov
mov
sub
mov
and
and
movl
xor
movl
cmpl
notl
movl
movl
jmp
movl
jae
pushl
pushl
push
push
call
movzwl
adc
mov
sub
andl
xor
xor
and
cmpl
mov
movl
jmp
mov
mov
jbe
push
pushl
call
addl
xorl
adc
sbb
add
add
movl
movl
and
mov
cmpl
mov
mov
movzwl
jmp
mov
mov
jne
pushl
push
call
sub
mov
adc
mov
adc
xor
add
xor
mov
xor
mov
mov
mov
movl
and
cmpl
movl
mov
movl
movl
jmp
movl
movl
ja
push
call
subl
sub
andl
adc
sub
xor
or
sbb
cmpl
movl
movl
movl
jmp
movl
jne
pushl
push
call
mov
add
neg
sbbl
or
subl
sbb
cmpl
mov
mov
mov
jmp
movl
je
pushl
call
adc
add
inc
or
and
add
mov
and
mov
movl
or
andl
or
add
adc
and
and
subl
xor
mov
orl
xor
movl
cmp
movl
ja
movl
jb
cmp
ja
cmpl
mov
mov
jmp
movl
ja
push
push
call
xor
sub
subl
xor
or
sub
add
movl
or
movl
movl
add
movl
cmpl
movl
mov
mov
jmp
notl
movl
jg
pushl
push
push
call
not
sbb
or
or
xorl
add
movzwl
sbb
mov
xor
or
mov
sub
or
movl
cmpl
movl
mov
jmp
mov
movl
jne
push
push
pushl
push
push
call
xor
movzbl
or
xorl
mov
add
or
and
adc
movl
movl
sbb
mov
mov
subl
sub
incl
and
and
or
mov
sub
adc
pushl
cmpl
movl
mov
movl
jmp
movl
not
jl
pushl
push
call
sbb
xor
sbb
or
adc
mov
and
mov
cmpl
mov
not
movzbl
jmp
movl
jae
pushl
call
xor
sbbl
mov
mov
sbb
or
mov
xorl
lea
sub
push
pop
subl
xor
div
add
mov
sub
xor
pushl
mov
movzwl
or
pushl
cmpl
mov
mov
movzbl
jmp
movl
mov
je
pushl
pushl
push
call
xor
or
add
xor
adcl
xor
or
addl
adcl
mov
sbbl
pushl
and
or
pushl
mov
addl
pushl
addl
xor
xor
pushl
adc
mov
sub
pushl
orl
call
movl
add
movl
mov
or
movl
xor
movl
mov
mov
or
mov
mov
subl
sub
xor
mov
and
mov
orl
xor
shr
imul
pushl
call
xorl
dec
cmp
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
call
movzwl
sbb
movl
xor
xor
and
xor
add
add
xor
adc
neg
movl
cmpl
movzwl
movl
jmp
movl
movl
jbe
call
negl
xor
add
xor
neg
xor
adcl
cmpl
mov
mov
mov
jmp
movl
movl
jae
push
call
xorl
xor
adc
add
and
movl
adc
or
mov
movl
mov
andl
movl
mov
sbbl
call
cmpl
movl
not
movl
jmp
not
not
ja
pushl
push
push
push
call
mov
mov
sub
and
neg
adc
sub
or
add
sbb
lea
cmpl
not
mov
jmp
mov
jae
push
pushl
call
adc
mov
mov
sbb
andl
adc
adc
adc
mov
addl
lea
cmpl
mov
movl
mov
jmp
mov
movl
jge
push
pushl
push
pushl
push
call
xor
and
movzbl
and
mov
and
addl
mov
mov
sbb
mov
and
mov
sbb
mov
and
xor
cmpl
mov
movl
jmp
movl
jge
pushl
push
push
push
pushl
call
orl
addl
xor
add
xor
xor
sub
add
mov
mov
sub
or
sub
xor
cmpl
movzbl
movl
movl
mov
jmp
movl
movl
jne
push
push
push
call
or
sub
xorl
xor
or
mov
mov
or
sub
shl
cmpl
movl
movl
mov
jmp
mov
movl
jg
pushl
pushl
call
mov
xor
xor
sub
imul
mov
mov
sub
and
sub
add
not
shr
dec
or
mov
xorl
mov
sub
mov
mov
xor
add
or
mov
mov
mov
sub
shrd
shr
cmpl
mov
mov
jmp
movl
jg
push
call
adc
xor
add
adc
adc
or
adc
xor
and
mov
mov
xor
xor
or
mov
push
pushl
lea
push
shl
call
lea
push
mov
mov
lea
push
mov
lea
mov
mov
mov
push
call
push
push
pushl
call
mov
mov
mov
mov
shr
shl
or
mov
xor
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
add
mov
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
adc
push
push
sbb
push
movzbl
sbb
movl
movl
or
movl
movl
neg
mov
mov
mov
mov
xor
and
subl
mov
cmpl
mov
mov
jmp
movl
movl
jb
pushl
call
and
adcl
mov
and
add
dec
xor
and
subl
add
mov
xor
xor
movzwl
xor
mov
orl
movl
neg
movl
adcl
mov
xor
cmpl
movl
movl
mov
jmp
movl
mov
jne
push
pushl
push
push
call
sub
add
sub
mov
mov
or
mov
mov
sub
sub
cmpl
mov
movl
movzwl
mov
jmp
movl
movl
jge
pushl
push
push
call
add
inc
movzwl
and
adc
and
sub
subl
mov
add
imul
not
xor
or
mov
div
adc
sub
mov
mov
sub
and
mov
or
movl
movl
mov
mov
and
movl
movl
add
movl
sub
movl
movl
mov
mov
imul
add
or
and
sub
sbbl
mov
sub
andl
mov
sub
mov
sub
andl
add
sub
mov
andl
xor
subl
div
mov
adcl
sub
mov
add
movzwl
sub
mov
sub
movl
xor
movl
mov
mov
sub
and
movl
add
mov
xor
cmpl
mov
mov
mov
jmp
mov
je
push
call
and
or
sbbl
mov
adc
addl
movl
adc
add
mov
xor
div
cmpl
mov
movl
mov
mov
jmp
movl
movl
jb
push
call
or
mov
sub
xor
or
adc
andl
dec
sbb
and
cmpl
movl
mov
jmp
movl
movl
jl
pushl
push
pushl
push
push
push
pushl
call
sbbl
sub
sbbl
mov
sub
mov
and
mov
or
and
sub
sub
mov
movl
and
movl
mov
mov
xor
movl
sub
movl
mov
cmpl
mov
movl
movzbl
jmp
movl
ja
pushl
push
pushl
call
mov
sub
movzbl
add
mov
orl
xor
mov
xor
mov
and
mov
xor
adc
xor
adc
push
xor
pop
movl
div
cmpl
mov
mov
movl
jmp
movl
movl
je
push
push
push
pushl
call
inc
inc
xor
sbbl
mov
xorl
xor
orl
div
movl
mov
movl
or
sub
sub
cmpl
mov
mov
movl
movl
jmp
movl
movl
jb
push
pushl
push
pushl
pushl
pushl
push
push
call
negl
xor
mov
and
mov
adcl
mov
adcl
movl
mov
cmpl
movl
movl
movl
jmp
movl
mov
jle
push
push
push
call
andl
addl
andl
sbbl
sbb
sbb
mov
andl
xor
orl
div
andl
imul
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
push
call
or
and
adc
or
neg
xor
orl
xor
sbb
imul
add
xor
mov
sub
mov
mov
subl
movl
movl
subl
movl
sbb
mov
cmpl
movl
mov
jmp
movl
jge
pushl
call
adc
subl
xor
xor
mov
sbb
adcl
or
cmpl
mov
movl
movl
jmp
notl
movl
jg
pushl
push
pushl
call
orl
sub
sbb
xor
xor
adc
andl
add
orl
or
and
or
mov
addl
xor
sbbl
div
sub
mov
sbbl
imul
or
add
xor
mov
incl
sub
cmpl
movl
movl
movl
movl
jmp
movl
je
push
pushl
call
addl
movl
subl
or
xor
andl
mov
cmpl
mov
mov
mov
movl
jmp
mov
mov
je
pushl
pushl
pushl
push
pushl
call
xor
add
sbb
or
adcl
mov
mov
adc
sub
xor
movl
mov
and
and
cmpl
movl
mov
jmp
mov
movl
jge
push
push
pushl
push
pushl
push
call
orl
xor
xor
adc
mov
xor
add
xor
mov
not
movzwl
sbb
sbb
add
cmpl
movl
notl
mov
notl
jmp
movl
jb
push
pushl
push
push
push
call
adc
movzwl
sub
adc
add
adc
andl
mov
sbb
or
xor
cmpl
mov
mov
jmp
movl
je
pushl
call
movzbl
or
mov
andl
mov
adc
addl
mov
sub
mov
movzbl
adc
adcl
sub
mov
mov
xor
add
sub
imul
movl
cmpl
mov
movl
jmp
notl
movl
ja
push
call
sbbl
mov
sbb
sub
sub
add
xorl
movl
xorl
movl
neg
mov
adc
and
mov
adc
add
adcl
add
add
or
cmpl
not
movl
jmp
mov
mov
jl
push
push
call
mov
adc
movzbl
adc
sub
notl
sbb
add
or
xorl
sub
mov
movl
xor
movl
adc
movl
cmpl
mov
mov
jmp
mov
mov
jg
pushl
push
pushl
call
andl
orl
not
add
add
mov
shr
sub
xor
xor
mov
lea
movl
push
orl
call
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
push
push
push
call
or
neg
add
sub
xorl
xor
add
cmpl
mov
mov
mov
jmp
not
jl
push
pushl
push
call
mov
xor
xor
or
xor
xor
sub
or
or
xor
or
mov
sub
and
or
mov
mov
sbb
or
xor
add
sbb
and
lea
mov
mov
mov
sub
or
movl
sbb
movl
cmpl
movl
mov
mov
jmp
mov
movzbl
ja
push
push
pushl
push
call
mov
mov
sub
imul
mov
mov
and
sbb
subl
xor
movl
movl
movzbl
adc
mov
movl
movl
movzwl
sub
movl
movl
subl
mov
add
mov
and
dec
sub
mov
sub
lea
mov
orl
mov
mov
sub
mov
imul
sbb
and
cmpl
mov
not
movl
movl
jmp
movl
movl
ja
pushl
push
push
call
add
orl
adcl
negl
andl
subl
movzwl
and
not
imul
cmpl
mov
not
jmp
movl
jl
pushl
pushl
call
adc
add
adcl
sbb
subl
mov
or
mov
lea
mov
cmpl
movl
mov
movl
jmp
mov
jbe
push
call
sbbl
and
movzwl
adc
sub
mov
mov
sbb
xor
or
and
mov
cmpl
mov
movl
not
jmp
movl
mov
jge
pushl
push
push
push
pushl
push
call
add
orl
sbb
add
neg
addl
sub
movl
adc
movl
movl
cmpl
mov
mov
mov
movl
jmp
movl
jg
pushl
push
push
call
sbb
xor
sbb
mov
sub
mov
sbb
adc
movl
cmpl
mov
movl
mov
jmp
mov
ja
pushl
push
call
mov
mov
sub
or
inc
add
sbb
or
and
add
mov
mov
mov
xor
xor
xorl
mov
addl
call
adcl
mov
orl
mov
orl
mov
cmpl
movl
mov
mov
jmp
movzwl
mov
jl
pushl
push
pushl
pushl
push
call
add
movzbl
adc
mov
xor
add
add
mov
sub
add
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
not
push
push
cmpl
mov
movl
movl
movl
jmp
mov
mov
jge
push
pushl
pushl
push
push
pushl
call
xor
add
subl
adcl
add
sbb
mov
sbb
mov
xorl
or
movl
jne
xor
xor
mov
sub
or
mov
mov
cmpl
movl
mov
movl
jmp
movl
je
push
push
pushl
push
pushl
push
push
push
push
pushl
push
push
push
call
or
decl
andl
adc
sbbl
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
andl
subl
cmpl
movl
je
and
add
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
jae
cmp
movl
jae
shld
notl
shl
ret
mov
xor
mov
decl
xor
and
shl
ret
xor
xor
ret
