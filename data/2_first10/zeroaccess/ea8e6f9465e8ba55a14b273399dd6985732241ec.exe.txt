push
mov
sub
mov
movzbl
mov
mov
movl
movl
cmp
movl
jne
or
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
push
pushl
pushl
call
xor
or
dec
mov
jmp
add
push
xor
or
adc
mov
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movzwl
not
and
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
push
mov
movzwl
mov
mov
mov
movl
movl
mov
jmp
sbbb
cltd
js
mov
ret
aas
push
inc
jo
jo
jo
jo
rcl
aad
ror
rol
pop
push
add
lods
add
xor
ret
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
into
cmpsb
popf
mov
sub
sbb
cmp
stos
arpl
inc
ss
add
mov
imull
mov
adc
stc
fldcw
dec
lods
xchg
roll
xchg
aam
xor
mov
ss
cli
hlt
cmp
into
pop
push
cmp
outsl
loope
gs
test
xor
cltd
and
sbb
cmp
call
mov
jp
mov
out
not
fwait
cwtl
ljmp
mov
gs
ficoml
sub
movsb
shlb
jne
icebp
lret
inc
iret
ficoms
gs
les
fistps
ret
pop
sub
lea
xchg
adc
insb
mov
out
mov
sub
push
sbb
and
cmp
imull
add
cmpsl
sbb
adc
pusha
repz
cmpsb
sbb
cmovs
mov
dec
je
out
push
cwtl
mov
arpl
and
popf
fistpl
stos
mov
dec
mov
ret
movsl
push
mov
mov
adc
push
jmp
pop
loope
inc
push
push
jecxz
out
shll
icebp
lds
or
mov
push
mov
mov
into
jle
add
mov
jmp
clc
icebp
mov
icebp
ficompl
arpl
jo
jo
jo
jo
repnz
push
addb
fadd
pop
or
adc
lock
dec
inc
lea
je
and
xchg
inc
sbb
stc
aam
sub
push
adc
out
adc
in
mov
out
lods
mov
dec
pop
gs
mov
call
xor
jmp
icebp
hlt
lds
fldl
sbb
vpsubd
scas
je
pop
ds
in
shlb
push
shll
sarl
cmpsl
loopne
cmp
cld
fucom
cmpsb
pop
mov
adc
int
cmp
in
add
nop
ljmp
outsb
insb
jb
push
dec
or
push
outsb
pop
inc
mov
ja
lret
ret
pop
jne
mov
xor
xchg
hlt
xor
mov
inc
mov
jge
sti
and
mov
sbb
jbe
dec
int
stos
sbb
fldenv
int
adc
xchg
adc
nop
loope
or
je
das
call
jmp
repnz
jmp
dec
rolb
cmpsl
shll
adc
lea
jb
fldl
pmulhw
ss
test
js
xchg
add
aas
lock
mov
fisttpll
mov
pop
sub
xor
into
ljmp
add
pop
scas
fmull
cmpsl
xor
testb
cmpsl
xor
jne
flds
or
lret
cli
jp
cmc
adc
mov
jne
lahf
inc
das
arpl
test
daa
ret
mov
hlt
pop
dec
lock
sub
sbb
icebp
inc
fcompl
in
xchg
inc
dec
movb
loop
scas
cmp
sbb
fbstp
xchg
lds
ja
cltd
int3
pushl
lds
dec
lock
ret
call
mov
inc
int3
mov
mov
lea
jmp
dec
iret
lods
dec
lods
imul
insb
aam
jo
jo
jo
jo
mov
fcompl
pop
rol
mov
enter
push
mov
icebp
sub
cmp
jo
cmp
fnstsw
ffreep
sub
xchg
lods
adc
sti
and
jbe
jbe
call
fs
adc
push
imul
pusha
into
mov
sarl
add
lahf
pop
clc
test
lods
xchg
inc
xchg
lcall
pop
add
push
push
pop
aas
je
cmc
aad
clc
cmp
mov
and
pushf
jge
xchg
aam
lods
xor
ror
jns
gs
sub
cmc
jmp
dec
fists
pop
add
stos
add
cmpl
or
cmp
sti
imul
test
test
lcall
jge
adc
lds
inc
stc
movsb
pop
inc
sbb
das
outsb
loopne
daa
push
outsb
mov
lea
push
pop
mov
sbb
neg
loope
dec
stos
fdivrl
fcomps
sub
sub
pop
je
mov
xor
mov
xor
in
add
fwait
imul
loope
iret
jne
add
mov
mov
pop
or
cmovns
aad
mov
and
xchg
std
xor
or
lods
mov
flds
sub
test
stos
iret
jp
and
leave
jp
pop
ret
xchg
cmp
inc
fnstenv
mov
cmp
je
lods
xchg
jmp
fldcw
stos
sub
xchg
imul
lahf
pop
hlt
pushf
adc
and
sub
or
in
jbe
int3
inc
or
and
fstl
add
dec
cmp
and
mov
mov
sub
mov
pop
or
inc
sub
ljmp
inc
in
inc
in
add
inc
in
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
jmp
int3
sub
push
mov
cs
jo
jo
jo
jo
into
imul
pop
les
mov
xlat
or
lret
add
jne
in
jge
jno
inc
dec
shlb
enter
fldenv
cmp
adc
aad
outsb
aam
bound
pop
neg
stos
das
add
lods
xchg
pushf
call
sub
lea
add
mov
subb
mov
mov
adc
dec
inc
insb
cld
aad
mov
xchg
jns
jg
jno
add
roll
xchg
and
bound
lret
mov
or
data16
test
popa
pop
outsl
xchg
or
mov
sti
das
ja
mov
jmp
sahf
push
repnz
movsb
nop
aaa
add
xchg
and
das
sbb
xchg
xor
js
ficoml
cmp
jmp
push
movsb
shl
gs
imul
ret
push
mov
imul
adcb
sub
pop
pop
xchg
sub
dec
imul
out
lods
pop
mov
or
jb
sbb
test
and
inc
lahf
incb
push
sbb
and
loopne
mov
mov
or
adc
gs
jge
mov
pminub
hlt
inc
add
outsl
dec
add
loop
outsl
dec
xor
xchg
mov
pop
xchg
mov
dec
rcrl
adc
sbb
xchg
dec
mov
push
dec
in
xchg
imul
shll
add
adc
into
mov
push
fs
iret
push
pusha
dec
inc
sbb
ljmp
outsl
cmp
xor
xor
or
jnp
pop
movsl
mov
adcl
cmpsl
xchg
cmp
xchg
cmp
in
loopne
xchg
mov
lock
imul
mov
mov
cmp
je
mov
orl
jmp
mov
jmp
popa
ja
add
xorl
adc
mov
jb
jo
jo
jo
jo
frstor
push
cmp
pop
mov
pop
mov
sbb
pop
fldcw
aam
mov
shlb
push
aaa
xor
or
nop
mov
stos
cltd
addr16
clc
cmp
sbb
jmp
add
in
push
fistl
jmp
mov
adc
das
daa
cld
fsts
popf
push
and
push
jmp
and
mov
imul
pop
addr16
or
dec
sbb
imul
xchg
push
dec
push
and
shll
sbb
add
and
aad
mov
inc
rorb
addr16
sti
fs
hlt
out
dec
jo
ret
cli
inc
mov
xorb
xor
in
icebp
lcall
cwtl
rcrl
dec
cmpsl
push
mov
movl
mov
push
test
clc
xchg
push
sbb
orl
push
mov
fs
inc
lret
dec
rcrb
push
jle
lea
jge
mov
fdivrl
jnp
mov
sbb
cltd
movsl
add
stos
and
movsl
stc
or
test
in
push
mov
pop
inc
pop
adc
popf
mov
adc
xor
into
sub
cmpsb
out
inc
dec
pop
sbb
addr16
aas
lds
lods
aam
mov
cld
shll
mov
pusha
xchg
daa
jg
jns
mov
and
add
stos
cmp
out
test
push
xor
adc
out
in
and
inc
repz
inc
lock
jp
dec
js
add
mov
cmpl
aaa
jne
dec
mov
xchg
jb
pop
cmp
popf
aad
fwait
xor
and
call
test
cwtl
sti
sbb
inc
inc
popf
push
test
loop
xchg
daa
ljmp
xor
push
sbbb
jne
arpl
in
fcom
iret
lret
cli
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
jmp
cld
test
jb
stos
inc
inc
cmp
rorl
jo
jo
jo
jo
cmp
test
mov
inc
scas
ljmp
in
and
ja
push
jge
lds
enter
inc
xchg
push
mov
fimull
jl
or
dec
ret
cltd
sub
push
into
inc
scas
fists
ljmp
jnp
ret
sub
ja
repz
push
xor
mov
iret
xor
daa
jbe
add
shll
jns
repz
out
jb
fwait
test
xor
scas
in
arpl
cmp
sub
push
in
pushf
cmpsb
rcrb
mov
pop
fnstcw
sub
xchg
adc
adc
faddl
sbb
ds
cmp
enter
aaa
jl
outsb
js
or
lods
sub
xchg
je
stos
pop
cmp
jl
outsb
f2xm1
xor
sub
into
xchg
sbb
insb
ds
daa
mov
mov
out
es
nop
or
jg
iret
push
pop
call
lret
shll
inc
cltd
pop
in
out
cld
or
jl
ret
jne
push
icebp
in
shlb
mov
cmp
popa
and
loopne
and
or
mov
pop
mov
jg
mov
jl
gs
push
cld
addr16
mov
scas
cmc
jle
mov
in
movsb
jno
pop
or
and
call
pop
loope
mov
leave
fisubl
or
rol
aaa
or
lea
insl
mov
adc
outsl
mov
dec
into
fcoml
lahf
cmpsl
mov
and
out
push
stos
rorb
out
mov
rclb
loope
adc
xor
and
sarl
or
shrb
mov
add
cmp
jmp
ret
gs
cmpsl
insb
andb
loopne
add
jo
jle
jo
pop
out
sub
mov
fdivs
repnz
jmp
pop
mov
int
xchg
iret
jnp
daa
fisttpll
sub
add
cmpsb
das
sbb
mov
insb
jno
andl
push
in
mov
subb
cmp
scas
pop
lcall
call
xor
std
test
sbb
in
lret
sbb
xorb
cmp
adc
das
cwtl
xchg
or
adc
jbe
add
mov
and
mov
jp
mov
out
push
push
icebp
add
sbb
mov
mov
xor
stc
loop
jg
xlat
push
hlt
mov
int3
test
fwait
sub
data16
lods
mov
cmp
xor
push
fbld
jmp
xchg
xor
sub
add
cmp
lds
jle
mov
jp
hlt
mov
ret
dec
and
add
pushf
dec
pop
cmp
rcll
add
icebp
out
loope
or
jno
frstor
test
rorb
call
ret
jmp
xchg
in
fnstsw
mov
stos
lret
sbb
lea
fisubs
scas
sbb
dec
or
sbb
jo
test
jp
sbb
fsubs
jns
dec
and
addr16
xchg
shrb
mov
dec
cmp
fxch
pop
lods
jp
iret
pop
loope
ret
cld
and
inc
sbbb
jl
outsl
ficoml
inc
cs
int
cmp
xchg
add
scas
and
push
push
ja
loopne
adc
jb
jbe
mov
xor
dec
nop
cmp
je
mov
xor
add
mov
mov
jmp
jp
sbb
cltd
ja
jno
sbb
sub
push
lret
fdivl
jo
jo
jo
scas
fidivrl
dec
inc
in
addr16
stos
push
dec
arpl
dec
add
cwtl
xchg
mov
aad
rcl
inc
dec
rclb
enter
or
repnz
pop
cld
cmpsb
pushf
fnstsw
gs
jne
mov
dec
lahf
daa
jge
push
push
xor
pop
jl
sub
adc
cmp
ja
dec
mov
cmp
mov
sbb
mov
sbb
cmp
push
aad
bound
pusha
repnz
inc
xchg
sahf
int
xchg
ja
fs
lods
mov
rorl
dec
pop
sub
sub
xor
std
cs
mov
push
test
xor
xor
adcw
pusha
cmpsl
shll
push
cmp
cmp
mov
xlat
shl
push
xchg
pop
mov
aaa
cmp
mov
mov
mov
popa
xchg
shr
pop
mov
add
imulb
push
ljmp
aas
in
outsb
jmp
call
hlt
cmp
fnstsw
xlat
loop
and
lahf
push
and
jns
jp
push
mov
xchg
sub
mov
aad
test
lds
jbe
lock
xchg
jns
fidivrl
inc
sbb
xlat
jnp,pn
or
cmpb
mov
sub
in
sbb
mov
jmp
repnz
sub
jbe
fcmove
or
out
test
aaa
call
out
je
pop
insl
loope
icebp
pushf
cmp
adc
nop
sub
add
add
mov
mov
jne
loop
test
jnp
popf
mov
add
stc
push
xor
ljmp
sti
add
push
pop
in
ja
stos
mov
data16
dec
sbb
leave
push
mov
mov
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
jmp
and
jae
xor
jge
add
jo
jo
mov
arpl
bnd
mov
mov
sbb
imul
push
cmp
stc
push
push
std
inc
fsubrs
inc
pop
mov
pop
push
js
testl
outsb
ffree
leave
push
cmp
mov
cmp
inc
mov
dec
xor
jle
xchg
dec
ja
jbe
div
inc
cwtl
adc
pop
adc
and
add
cmpsb
xchg
add
push
push
push
sub
shlb
ss
leave
imul
enter
fidivs
jmp
mov
adc
mov
jae
jle
nop
and
das
pop
je
sbb
data16
push
jmp
iret
idiv
xor
xchg
mov
movsb
xor
pop
lods
xor
test
stc
xchg
nop
jl
out
int3
lods
jecxz
pop
dec
mov
xchg
daa
data16
inc
xchg
push
add
add
xor
xchg
pop
sbb
pop
lret
dec
call
jbe
shrb
fistl
cmp
mov
inc
cs
jle
mov
and
lahf
xchg
cmp
inc
pop
mov
inc
and
jns
dec
sahf
add
test
inc
repz
xchg
sub
xor
jnp
adc
adc
adc
ficompl
add
inc
dec
ds
mov
sub
arpl
adc
jg
mov
aad
fnsave
call
cld
add
enter
in
cmp
scas
pop
sbb
mov
or
adc
decb
jge
sub
lcall
xor
add
xor
jae
imulb
mov
out
lcall
lret
cwtl
out
jmp
fcoml
pop
xor
shl
mov
xchg
dec
scas
rorb
testl
mov
stc
bound
cmp
inc
hlt
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
jmp
cs
add
popa
push
in
jno
imul
jo
jo
jo
jo
xchg
sub
frstor
sar
std
insb
mov
adc
mov
mov
mov
or
lds
xor
loope
and
and
fdivs
or
push
mov
out
enter
dec
jge
jmp
mov
sbb
inc
jmp
cmp
stos
jl
push
sar
sub
mov
mov
ss
adc
pop
and
xor
xchg
lret
mov
lahf
aam
sub
ret
sbb
sub
xchg
dec
mov
mov
call
inc
outsl
mov
ja
xchg
cli
mov
pop
mov
repz
xorb
xor
cmp
repz
sahf
pop
inc
dec
sbb
push
roll
roll
cmp
and
cmp
ret
sub
xchg
int3
inc
mov
xchg
fldenv
inc
mov
inc
scas
loopne
push
in
jbe
mov
das
mov
movsl
movsl
in
xchg
inc
cli
das
and
push
mov
divl
inc
frstor
aaa
dec
int3
into
cli
or
in
jnp
imul
sahf
sbb
mov
popf
inc
mov
sbb
das
call
inc
sahf
aas
lret
loopne
sbb
ja
cmp
bound
sub
xor
pushf
leave
call
aaa
pop
xor
jns
iret
sbb
movsb
add
outsl
xchg
cs
notl
sub
mov
lock
iret
out
inc
and
cli
push
pop
int
das
loop
into
add
mov
sbb
jp
sbb
mov
dec
mov
cs
pop
nop
pop
mov
jge
rcr
aam
mov
subb
ret
mov
and
sahf
and
dec
mov
popa
xchg
mov
andl
mov
xor
xor
shll
push
test
adc
pusha
or
inc
imul
aad
or
test
fwait
push
push
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
push
movzwl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
mov
mov
xor
push
mov
or
xor
sbb
mov
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
jmp
imul
cmp
jae
jl
dec
mov
jo
jo
mov
and
jl
pop
mov
and
adc
adc
shlb
fnsave
cmc
mov
out
mov
shl
dec
cs
jle
ret
ja
int
adc
adc
insb
xor
mov
push
cmpsb
adc
pop
in
insb
xchg
popa
sub
add
inc
inc
pavgw
mov
push
stos
mov
cmp
shrb
imul
inc
daa
mov
inc
fcomps
lock
jecxz
mov
xchg
je
lods
cmp
pop
ss
mov
addb
int
or
jbe
lds
sbb
out
xor
pop
imul
repz
inc
mov
sbb
rolb
xchg
out
or
pop
call
ja
pop
mov
push
je
lea
ret
push
cld
dec
push
int3
inc
shlb
add
push
cmp
push
lret
lret
ret
mov
mov
nopl
and
cmp
mov
sub
xchg
add
movsl
dec
sub
add
sub
sub
jno
loop
jo
xlat
pop
add
icebp
sub
xor
and
and
cmp
fisttpl
pop
sbb
cmp
inc
pop
ficoml
xlat
stos
aas
jg
ds
cwtl
hlt
pop
bound
nop
push
lret
sbb
test
pop
mov
scas
movsb
inc
mov
das
pop
mov
adc
ljmp
and
sub
cmp
adc
into
push
outsb
push
dec
test
aaa
push
jp
enter
xchg
jae
jo
pop
aaa
and
dec
mov
gs
sbb
cmp
les
pop
repz
es
filds
mov
cld
xchg
pop
cmp
stos
fnstenv
inc
inc
and
and
adc
mov
mov
mov
into
pop
cmp
cmp
daa
loopne
mov
adc
popl
fcompl
das
mov
insb
mov
or
std
push
push
push
mov
stos
mov
dec
and
movsb
mov
aad
mov
clc
sub
xchg
mov
or
pop
insb
cltd
nop
pushf
scas
insl
push
xlat
pop
jmp
dec
shll
shlb
loope
imul
call
mov
or
jmp
ror
inc
mov
jge
and
insl
test
adc
pop
xor
push
xor
mov
inc
mov
aas
aaa
mov
and
test
je
jbe
sti
jbe
lea
rclb
cmp
ja
push
jmp
jmp
mov
ja
push
aas
xchg
out
fwait
add
jo
jle
jo
test
pop
and
testl
sbb
cmp
mov
in
testb
mov
loop
fs
rorb
and
rcll
dec
sahf
mov
clc
scas
inc
es
lods
pop
pop
dec
mov
sbb
js
mov
lds
xor
and
clc
mov
mov
sti
mov
jnp
fnsave
in
dec
cmp
lret
scas
sbb
inc
and
rcrl
mov
mov
lock
flds
xchg
icebp
pop
pop
fucomi
out
lahf
mov
cwtl
outsl
inc
sbb
arpl
pop
xchg
push
lcall
mov
aas
jge
das
fsts
jae
adc
ss
dec
loop
mov
inc
and
push
or
dec
add
movsl
popf
lret
imul
dec
pop
mov
int3
je
ja
mov
cmp
cmp
dec
pop
cmpsb
sub
cmp
outsl
cmp
int3
adcb
inc
pop
adc
and
cmc
push
mov
adc
mov
pushf
pop
int3
aam
das
je
rorb
in
mov
stos
sbb
xchg
aas
in
push
in
nop
lds
sti
adcl
movsb
gs
jbe
fisubrl
pushf
insb
push
xor
pop
add
lds
gs
imul
neg
movsl
idivb
cmp
inc
xlat
out
int3
ret
in
sub
adc
pop
aam
pushf
sub
pop
pop
movsb
cmc
jmp
dec
sub
and
add
jg
adc
xor
cmp
icebp
mov
sbb
add
std
addr16
sti
int
mov
call
mov
sub
cmp
push
pop
testb
and
mov
jmp
push
xchg
push
xchg
xchg
lahf
sar
push
pop
lret
xchg
sbb
test
inc
and
pop
pop
das
mov
mov
int3
lret
test
jns
inc
scas
aad
push
fsubs
adcb
sbb
aas
andl
mov
out
fidivrs
adc
add
cli
or
jecxz
inc
push
and
test
clc
out
lock
iret
dec
popf
or
mov
fucom
add
negb
mov
daa
push
cli
jp
cmp
mov
movl
sbb
mov
dec
fisubl
mov
imul
fldt
hlt
cmp
popa
inc
scas
sub
sub
ret
das
outsb
jle
jle
sahf
test
les
fwait
jg
jle
pop
cld
cli
push
cld
lods
xchg
cmpsl
int3
into
pop
mov
mov
mov
xor
add
jmp
fistl
loope
lds
add
cmpsb
add
cld
pop
jo
mov
loop
xor
jg
jecxz
addr16
jl
inc
in
pop
pop
enter
out
ret
aas
pop
add
test
clc
fistps
sbb
push
add
das
int
xchg
mov
pushf
sbb
ljmp
push
roll
mov
mov
iret
aas
inc
lea
outsb
pop
xlat
mov
sbb
xchg
mov
jecxz
add
xchg
mov
data16
fistpll
push
mov
mov
inc
mov
xchg
push
lea
or
cltd
sub
fs
mov
arpl
sbb
xchg
loop
out
loope
ficomps
push
mov
and
push
mov
inc
xchg
cmp
jns
test
aas
mov
and
mov
push
pusha
int3
push
bnd
out
xor
ja
jle
push
pop
test
fstl
andb
dec
outsl
or
inc
xchg
mov
add
es
aas
mov
addr16
pop
or
andb
sbb
sbb
outsl
pop
shll
push
mov
bound
jno
push
insl
jp
mov
mov
dec
rcrb
es
loop
xor
and
dec
cmpsb
xor
scas
mov
out
mov
pop
ret
and
adc
xchg
push
popf
push
dec
sahf
pop
enter
push
and
xor
int3
mov
push
adc
daa
xchg
adc
sub
inc
mov
arpl
and
sti
insb
stos
cwtl
mov
aad
jle
mov
push
rcr
idivb
popa
popa
out
aas
push
icebp
xor
movsl
and
sbb
cmpsb
clc
ss
iret
mov
faddp
mov
sub
xorl
add
mov
rorb
std
mov
adc
fists
sub
lods
cmp
cld
daa
mov
sbb
loopne
pushf
xlat
or
mov
in
in
adc
dec
stos
mov
cld
mov
stos
sarb
cmpl
into
xchg
into
cmpsb
xchg
push
pop
mov
lock
push
test
adc
cmp
dec
imul
adc
push
clc
mov
jb
imul
add
push
and
jnp
lods
cltd
sbb
fisttpll
sbb
insb
xchg
fbstp
pop
push
add
fstp
pop
or
adc
fcomps
add
lds
mov
in
aam
clc
pop
inc
jnp
lds
jne
imul
mov
xor
add
jmp
jecxz
fcoms
out
icebp
icebp
pop
xchg
aaa
aas
lods
and
cmp
jo
jle
jo
push
daa
push
pop
or
or
add
negl
pop
js
movsl
aam
jmp
inc
and
loope
ljmp
push
xchg
insb
xchg
daa
pusha
pusha
xchg
jp
test
mov
adc
and
sub
into
jnp,pt
xchg
in
adc
adc
clc
inc
loopne
cmp
mov
lds
mov
std
and
sub
inc
sti
div
xchg
pop
loop
gs
outsb
popf
mov
scas
mov
fbld
mov
xchg
cld
leave
flds
lock
xchg
pop
frstor
loope
and
and
mov
xor
add
jbe
int
iret
pop
mov
es
aas
fcompl
ljmp
adc
movsl
xchg
int
xchg
cwtl
jp
test
or
or
cmp
dec
cmc
push
cmp
in
into
cmp
or
and
scas
push
aaa
add
gs
stos
inc
cmp
pop
inc
jmp
xor
and
lcall
fsubl
or
imul
dec
outsb
jl
ret
dec
shll
sbb
xchg
mov
push
movsl
sbb
insl
out
in
int
ret
dec
pop
mov
data16
fildll
sub
cmp
push
mov
add
jmp
faddl
pop
scas
insb
repz
hlt
ljmp
subl
scas
xor
roll
sub
jb
leave
sti
inc
inc
imul
jns
adc
int3
xor
shl
insl
add
cmp
cmpl
mov
inc
lret
pop
jno
xor
sub
outsl
sti
adc
outsl
aas
and
cltd
clc
push
test
and
sub
mov
gs
in
pop
mov
push
jbe
jg
rorl
mov
inc
jns
outsl
loope
nop
jo
cwtl
sbb
out
sbb
outsb
inc
add
lds
xor
stos
and
ret
aad
decl
jns
out
add
cmp
push
mov
pop
adcb
lret
stc
shlb
jno
sbb
scas
sbb
and
or
cmpsl
scas
lret
loop
leave
leave
clc
lea
jns
mov
scas
rcl
sub
or
cmp
or
mov
arpl
sub
nop
ljmp
dec
push
das
inc
fwait
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
adc
mov
addl
mov
adcl
xor
adc
mov
andl
add
movl
movzwl
mov
orl
movb
not
lea
mov
or
jmp
out
out
jno
in
or
and
or
js
jo
cmp
mov
arpl
dec
lock
xchg
xchg
xchg
jmp
sarb
sub
pop
pushf
jae
subb
cmpsb
cmp
mov
push
push
mov
aam
ljmp
pop
loope
test
divl
pop
push
pop
and
inc
dec
mov
jne
xchg
push
fstpt
rcrl
xchg
loopne
popl
dec
inc
pop
sub
outsb
pop
cmp
hlt
pop
mov
out
aas
insb
sbb
inc
and
cltd
pop
cmpsb
or
adc
in
xchg
push
mov
or
push
inc
fsubrs
mov
push
in
mov
mov
stos
xchg
push
sbb
mov
fldenv
call
iret
mov
add
inc
push
jne
es
ja
sub
mov
pushf
cmp
push
pop
fldcw
jae
add
dec
xor
ds
inc
fisubrl
push
jb,pn
mov
sbbl
sbb
cli
stos
testl
xor
out
btc
add
test
cmp
mov
or
orl
sbb
rcl
jl
dec
push
cmp
inc
aad
dec
pop
shl
push
or
dec
andl
add
push
ret
or
inc
inc
mov
push
ret
sbb
fidivrl
jp
es
and
xchg
data16
cmp
xchg
lret
filds
popa
or
xor
sbb
jns
aad
push
mov
sahf
jp
mov
into
dec
jae
sub
out
mov
loopne
aaa
call
cwtl
mov
cwtl
fs
insl
popf
lret
repnz
mov
dec
cmp
shll
testl
push
mov
iret
sbb
mov
xor
xchg
pop
sbb
addr16
jb
mov
imul
push
adc
or
adc
jmp
jmp
push
lahf
pop
adc
push
push
testb
repz
punpckhbw
mov
cmp
sbb
dec
or
xchg
repnz
lock
loope
pop
cli
mov
cmc
push
icebp
pop
lahf
inc
lock
and
stc
xchg
mov
xchg
xchg
add
sahf
sarl
test
test
ret
popf
xor
cmp
stos
stos
jg
jmp
sahf
cmp
jecxz
test
lcall
inc
rcrb
sbb
jo
jecxz
or
iret
push
movsl
pop
jmp
notb
stc
pop
jmp
clc
inc
out
fs
imull
inc
adc
fisttpll
jns
mov
movsb
lahf
mov
sbb
test
sub
fdiv
scas
cmp
stos
cmp
enter
ret
fdivl
test
and
pop
push
pop
add
xor
arpl
adc
insb
lret
xor
clc
ja
push
push
jo
mulps
add
ret
sbb
mov
movzwl
adc
mov
subl
xor
sub
andl
mov
negl
movl
jmp
fists
cltd
mov
addr16
push
and
jb
push
jo
cmp
push
push
out
movsb
jnp
ljmp
mov
test
sbb
push
imul
inc
jae
sub
pop
jmp
xor
repz
mov
sbb
mull
lea
xor
out
cwtl
cs
jge
adc
push
or
mov
bound
leave
push
pop
add
xchg
push
sub
jp
sbb
add
shll
pop
dec
pop
dec
daa
push
push
inc
xchg
ficomps
fstpl
int3
repnz
sub
orb
add
outsb
cwtl
in
add
pop
dec
and
xchg
aam
iret
testb
cld
mov
je
sub
jg
adc
push
dec
pop
xchg
and
je
mov
push
jp
jno
jne
pop
cmp
insl
and
jnp
mov
jns
mov
test
mov
inc
push
or
int3
aad
sub
bound
cmpsb
fcmovnbe
jae
insb
out
jg
pushf
out
adc
inc
insb
addr16
push
adc
add
jno
int3
inc
mov
mov
test
jne
dec
lods
stc
dec
int3
jno
bound
add
add
pop
sti
sbb
icebp
jnp
dec
sbb
jae
scas
movsb
and
pop
lock
push
scas
pop
push
jge
fistpll
sahf
xchg
lret
pop
inc
push
ret
repnz
cmp
ja
jbe
cli
pop
dec
sub
inc
sub
pop
test
jnp
repnz
das
mov
mov
test
scas
pop
les
ficoml
dec
pop
gs
sub
mov
jne
jno
and
fnstsw
mov
cmp
sub
xorl
fsubs
cmpsb
mov
lods
cmpsb
rcrl
outsl
sub
xor
jbe
and
jnp
pop
xor
pop
push
push
mov
push
nop
jno
sbb
pop
mov
xlat
xor
dec
inc
dec
imul
outsb
testl
fnstsw
sub
leave
test
fsubl
pop
std
xor
pop
dec
fwait
mov
sub
sbb
dec
rclb
or
les
ja
cwtl
adc
mov
stos
fldl
pop
lcall
push
and
movsl
addr16
inc
push
shlb
out
mov
loop
inc
lret
mov
sbb
xor
bound
mov
movsb
push
jecxz
subb
sub
shll
out
mov
inc
cmp
mov
dec
sti
int3
popf
jmp
ficomps
ja
movsl
mov
aad
and
dec
push
mov
out
lods
test
dec
mov
mov
xor
bound
xchg
push
lock
scas
inc
pop
xchg
mov
ret
pop
dec
ja
adc
push
dec
loopne
sbb
cmp
fstpt
imul
rorb
icebp
lret
mov
rcrb
add
lods
cwtl
adc
call
xor
clc
mov
push
xor
mov
adc
mov
add
movl
jmp
mov
movl
mov
movl
jmp
jge
lret
in
icebp
ss
and
cmp
out
mov
jae
adc
pop
jo,pt
pop
sti
imul
cmp
mov
stc
mov
jmp
mov
sub
and
cmp
mov
xchg
in
data16
xor
lods
mov
sub
fidivrs
outsl
jne
out
mov
add
hlt
push
fs
push
jbe
pop
arpl
cld
test
arpl
or
std
mov
push
movsl
or
sub
je
jno
sub
sub
imul
adc
lret
and
dec
push
dec
push
loop
xchg
out
xlat
movsl
insl
sbb
fucom
loope
aaa
ljmp
or
jle
ret
pop
shll
lods
mov
ret
mov
subl
int3
jmp
mov
jge
and
out
jb
lret
fs
add
repnz
push
jg
add
test
or
ret
es
cmc
push
jp
test
jle
sbb
pop
sahf
stos
rep
ret
in
iret
in
imul
mov
adc
mov
and
xchg
jp
int
and
adc
push
cmp
xlat
mov
sbb
sar
rorl
mov
in
imul
movsl
int
mov
jl
mov
sbb
sub
adcb
mov
into
mov
lods
xchg
xchg
mov
or
out
jle
xchg
stc
add
add
push
inc
jmp
stos
imulb
xchg
jnp
pop
lret
sub
mov
popa
lods
mov
adc
sbb
xchg
mov
cs
cmp
scas
xchg
inc
out
cmc
jb
add
pop
mov
loop
cmpsl
movsl
cwtl
shll
xchg
cmpsb
cmp
inc
sub
leave
or
mov
push
leave
into
pop
pop
adc
lods
cli
es
cmp
push
lods
adcl
aam
mov
adc
repz
or
mov
or
repz
dec
mov
jg
ret
mov
adc
xchg
pop
xor
leave
sbb
pop
xor
scas
pop
jecxz
fdivs
shr
and
das
leave
aas
push
js
add
arpl
jge
pop
test
rcll
repz
loopne
fnstsw
pop
sbb
add
push
lea
or
stos
dec
test
and
sub
fsts
and
aas
loop
jns
inc
in
movsl
mov
in
cs
movsl
repz
or
dec
aam
hlt
mov
pusha
out
sub
bound
lahf
fisubl
cmp
icebp
inc
std
int3
test
andb
bnd
ss
sub
cltd
fisubs
inc
in
add
xchg
movsl
pushf
pop
mov
jo
call
fstpt
scas
mov
dec
jp
adc
inc
jg
and
stc
push
xchg
inc
mov
pop
jns
mov
int3
jnp
cmpb
out
sub
cmp
fstp
fdivrp
add
xor
mov
xchg
lret
subl
rorb
stos
inc
cmp
movl
jmp
leave
daa
rclb
repnz
jecxz
cmpsb
dec
push
lret
sbb
cmp
push
aas
inc
inc
pop
fwait
and
test
sti
call
cmpsb
jecxz
mov
ljmp
jecxz
pop
jp
aas
jae
sub
cltd
out
adc
xor
dec
in
pop
notb
cli
xchg
nop
xchg
cmp
add
stc
mov
cmpsl
jno
and
shl
lods
xchg
sbb
sbb
mov
fwait
icebp
sbb
arpl
xor
out
movsb
push
add
jo
add
ror
jle
in
stc
sahf
outsl
jge
arpl
and
jge
mov
imul
cmp
mov
inc
and
in
mov
addl
aaa
xlat
pop
es
push
out
data16
lahf
insl
popf
xchg
adc
clc
pop
scas
fistl
mov
inc
xor
aad
js
push
test
pop
add
cmpsl
leave
aad
adc
fcmovu
fwait
imul
aas
add
cmpsb
out
mov
in
mov
movsl
fs
cmp
push
mov
test
test
pop
out
sub
cmp
subb
stos
pop
xor
xchg
jge
hlt
sub
adc
sub
outsl
cmp
add
str
sbb
scas
cmp
jne
mov
dec
insl
lahf
shll
mov
in
push
ja
cmp
xchg
mov
lahf
cmc
mov
cmp
mov
or
add
jo
sti
test
mov
xor
pop
repnz
fisubrs
stos
or
dec
sti
and
ds
int
mov
out
pop
mov
inc
adc
into
mov
std
sub
xchg
mov
adc
mov
xor
popa
sbb
adc
jmp
adc
fsubrl
lcall
dec
or
testb
push
sub
mov
ljmp
xchg
xchg
add
jo
ret
pop
out
lret
out
es
push
lods
mov
jge
or
fldl2e
xchg
mov
enter
push
xor
mov
push
mov
jecxz
loopne
lods
jg
clc
sub
test
inc
test
pop
call
pop
and
scas
mov
mov
popa
out
mov
mov
test
mov
call
lcall
rorb
pop
sbb
push
and
es
add
ret
mov
leave
repnz
aam
pop
add
hlt
dec
lahf
je
pop
das
outsl
xorb
sub
loope
xor
in
dec
rclb
or
shll
pop
cmpsb
xor
cmp
and
je
mov
psubsw
test
lcall
sub
pushl
imul
inc
lods
paddusw
bound
mov
jno
loop
jge
xchg
or
sub
ret
repz
add
inc
es
pop
lahf
imul
daa
call
inc
adc
in
adcl
cmp
add
int
aaa
cmc
sbb
int
adcb
jmp
adc
mov
jmp
push
jge
add
jb
inc
sbb
lock
repz
jo
cmp
xchg
lcall
mov
cmpsb
add
sub
cmp
testl
mov
jns
pop
mov
sbb
cmc
sbb
hlt
mov
movsl
pusha
fdivs
add
mov
jne
xor
mov
mov
jl
push
ljmp
dec
dec
ljmp
jbe
push
sub
dec
cmovb
loopne
push
push
enter
dec
sbb
sbb
push
xchg
sbb
jl
aaa
cmc
push
inc
sbb
stc
pop
fbld
xor
lds
cmp
outsl
push
jo
xor
dec
enter
sub
xor
mov
cmp
dec
jnp
sub
mov
mov
adc
mov
inc
enter
xchg
mov
mov
jns
xlat
and
xlat
aad
sbb
pop
mov
pop
xorl
sarb
stos
mov
jbe
repz
mov
stos
mov
andb
mov
or
rcrb
repnz
bound
scas
frstor
sub
pushf
mov
jmp
iret
dec
fnstcw
jnp
ds
pop
or
hlt
insb
fs
loop
jmp
xchg
adc
push
mov
aad
ja
cmpsb
jg
xlat
mov
dec
pop
and
les
lea
fldt
stc
ret
mov
mov
or
fldenv
mov
into
push
aaa
push
xor
cmpl
pop
aam
lock
adc
mov
pop
movsb
mov
push
outsb
dec
dec
ret
add
and
inc
test
or
jo
mov
add
aaa
arpl
sub
test
add
or
jmp
push
mov
push
xchg
adc
ss
inc
mov
adc
insb
jl
inc
ss
repz
mov
mov
mov
dec
cwtl
cmpsl
xor
insl
add
cld
testl
daa
jb
add
pop
sub
push
and
add
sti
loope
fisubl
rolb
cwtl
xorl
rcll
ja
jnp
lods
xchg
push
ud1
ljmp
inc
jmp
call
pop
js
or
push
stos
test
xor
stos
loope
aaa
in
shl
add
gs
mov
movlps
push
cmp
std
mov
sub
dec
call
add
and
push
xor
enter
nop
lock
les
mov
push
inc
mov
out
std
push
int3
mov
jo
mov
sbbl
in
mov
dec
jne
stos
cmp
imul
in
adc
sub
mov
fistps
roll
cmp
movl
je
add
push
adc
push
mov
mov
andl
xor
mov
add
addl
movzwl
andl
mov
sbbl
mov
addl
movzwl
sbbl
xor
addl
jmp
fdivl
dec
rsqrtps
icebp
inc
sub
xor
arpl
leave
and
cmp
xlat
js
call
ds
iret
and
adc
mov
adc
scas
dec
insb
inc
scas
mov
ret
and
pop
jp
lret
cltd
xchg
std
cld
xchg
mov
cwtl
popf
mov
cmp
out
leave
push
and
mov
ljmp
imulb
push
pop
cmpsb
aam
xchg
sbb
lea
in
mov
mov
mov
frstor
xor
xor
dec
aaa
mov
xchg
stos
sbb
lock
mov
int3
in
daa
dec
and
jmp
pusha
push
mov
jb
aam
add
pop
mov
mov
push
xor
cld
inc
cmpsb
clc
into
arpl
mov
mov
push
jns
fistpl
aad
js
das
arpl
and
inc
adc
add
ja
add
leave
xor
or
aas
popf
dec
add
gs
push
rorb
pop
mov
data16
push
in
das
jae
pop
pushf
lds
fisubl
iret
stos
push
outsl
cmpsl
lods
jle
loop
js
push
push
imul
adc
inc
fdivrl
sub
stc
sub
stos
ret
ja
jb
push
cmp
cld
jno
std
pop
xor
add
outsl
icebp
sbb
rolb
dec
adc
clc
cs
fwait
xchg
stc
pop
jl
and
gs
mov
cwtl
lahf
push
push
add
es
pop
xchg
add
sub
mov
bound
lods
mov
rolb
popa
mov
jmp
flds
fstl
jge
cmc
lock
mov
inc
mov
in
xchg
rorb
das
lcall
loopne
inc
cmpsb
sti
lret
ret
les
push
aas
je
sub
jnp
add
push
inc
or
pusha
sbb
cmp
add
xlat
jne
push
shrl
out
push
sti
xor
ficoml
insl
loope
fldenvs
dec
and
xor
add
call
mov
inc
aas
mov
or
cmp
xchg
pop
loop
scas
mov
dec
pop
add
adc
out
xor
push
push
xor
lods
sahf
call
cmpsl
fidivs
dec
add
dec
in
orb
push
push
sti
enter
leave
pop
in
mov
push
daa
jg
jo
in
loop
cmp
and
dec
push
into
lods
call
jb
jo
add
push
mov
dec
push
jmp
ret
and
push
mov
in
sbb
movsl
adc
leave
popf
gs
cmpsb
pop
cs
je
inc
inc
xchg
movsl
push
lods
cli
punpckhwd
pop
dec
sub
sarl
mov
test
fldt
and
shr
or
jge
push
nop
inc
add
pop
dec
sti
mov
cs
loope
subl
push
mov
add
add
mov
movl
mov
jmp
or
daa
arpl
fisttpll
outsl
inc
mov
jo,pn
cmp
cld
movsl
call
mov
push
mov
add
xchg
and
movsb
jne
lods
mov
stos
jno
dec
lods
dec
sahf
sub
push
outsl
xor
jns
aaa
aam
repz
cwtl
js
xor
das
lret
and
test
sbb
daa
dec
pushf
rcr
in
pop
push
mov
arpl
inc
or
add
mov
adc
xor
inc
lods
in
int3
add
shrb
dec
insl
aas
jg
imul
icebp
stc
cmp
adc
stos
push
filds
sbb
pop
cmp
test
lret
movsb
imul
cmpsb
les
jmp
lret
push
fnstcw
inc
add
mov
push
or
fwait
mov
dec
dec
es
xor
mov
dec
sbbb
pop
cmp
test
adc
out
xor
inc
fdivrl
ss
push
push
pop
xchg
sub
bound
add
out
scas
rcr
dec
push
pop
pop
mov
subl
cli
push
add
pop
inc
sub
lret
xor
push
push
out
pop
mov
adc
push
stos
loope
sysexit
repz
testl
cld
pop
pop
push
dec
imul
out
sbb
addr16
lcall
push
jmp
lds
lods
js
fldcw
sarl
jg
adc
stos
pop
xchg
fcmovbe
push
push
push
inc
testl
shll
fwait
mov
push
and
or
lock
lods
jnp
xor
sbb
out
push
dec
pop
xor
ret
out
mov
stos
das
push
inc
imul
cmpsl
mov
lret
and
fnstsw
lock
mov
dec
gs
in
sti
das
stc
xor
cmpsl
shlb
enter
aaa
or
mov
mov
test
in
stos
lods
push
aad
out
sub
xor
das
imul
sub
lods
xorb
pop
push
jmp
iret
pop
cmp
add
out
orl
ds
sub
imul
and
mov
movsl
xor
repnz
out
mov
ret
xchg
cmp
cmc
push
ret
push
shrb
add
aas
imul
mov
inc
adc
std
mov
xor
daa
into
jbe
mov
dec
inc
jmp
out
fdivs
out
into
out
pop
or
jmp
test
and
bound
std
mov
pushl
popa
xlat
mov
dec
sub
sbb
cmp
fimull
cmc
ja
fmul
fbstp
mov
int3
mov
push
dec
out
jp
jns
mov
dec
popa
and
mov
xor
cmp
into
dec
mov
mov
lret
xor
push
cmpsl
dec
fmull
leave
xlat
dec
cmp
hlt
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
jmp
xchg
roll
icebp
lods
add
roll
pop
push
sub
cmp
sarb
push
push
ret
test
push
fmulp
pushf
or
sub
out
push
xchg
lods
test
cmp
pop
inc
push
mov
and
jmp
sub
add
push
adc
enter
call
test
pop
jno
push
mov
mov
xor
xlat
push
mov
fimuls
cld
cmp
aas
dec
push
push
ret
addr16
fs
sub
pop
pop
insl
inc
xchg
loope
data16
repnz
negl
xorps
sub
mov
imul
in
dec
shlb
jae
adc
mov
jae
cmp
inc
dec
mov
repz
cmp
jp
rcll
rcrl
aam
loopne
xlat
aaa
xchg
cmp
lahf
inc
adc
rolb
and
mov
cmp
inc
stc
test
repnz
movb
mov
jl
cmp
mov
mov
push
movb
ds
jns
jno
pop
nop
lretw
std
xchg
sbb
subb
mov
dec
jo
rep
push
push
fmuls
mov
adc
inc
dec
mul
or
sbb
and
and
adc
jo
jle
dec
pop
add
add
sub
movsb
sbb
push
add
ljmp
mov
mov
mov
mov
std
jno
push
loope
jecxz
loop
shlb
jecxz
inc
push
jb
addr16
and
xchg
push
idivl
das
jle
rolb
dec
clc
js
lods
or
lock
aad
sbb
adc
fisttpll
int3
nop
and
fimull
inc
mov
pusha
loope
aaa
mov
inc
jo
shlb
insl
lods
pop
adc
test
test
dec
cs
ret
xchg
push
xchg
jno
scas
sahf
mov
and
mov
mov
xlat
and
scas
adc
int3
mov
fidivrl
jmp
jl
push
xor
repnz
mov
jge
mov
pop
fbstp
notb
loope
add
das
lcall
xchg
jne
dec
sub
sub
push
push
fstps
arpl
mov
xor
std
mov
in
push
mov
jl
out
imul
in
adc
adc
ss
cmp
ret
push
mov
in
cmp
pop
ror
test
sub
rclb
push
rcll
xor
cmp
cmp
xchg
mov
out
ret
std
js
js
adc
push
push
inc
fidivl
push
in
insl
clc
outsl
or
out
push
std
roll
outsb
add
cltd
fnstenv
lahf
adc
or
data16
sub
test
sub
xor
sbbb
pop
push
mov
insw
sarl
sub
push
sub
fisubl
push
outsl
xor
jl
cmp
inc
pop
cmpsb
pushf
push
jne
outsb
sub
dec
fstpl
cmc
outsl
aam
adc
adc
ljmp
mov
xor
add
in
push
mov
mov
sbb
jmp
pop
scas
sbb
push
pop
mov
lahf
loopne
rclb
aaa
jo
stos
jle
jo
repz
pop
fsts
push
jae
roll
lahf
sub
cmpsb
fnsave
subb
rclb
std
fwait
popa
shrl
sub
flds
adc
pop
push
fdivrs
dec
or
popf
adc
adc
adc
mov
loop
xor
loope
mov
js
in
push
pop
mov
mov
icebp
stc
test
lods
bswap
cmp
mov
imul
pop
pop
scas
sbb
div
inc
lcall
lcall
test
jbe
cmp
loope
xchg
test
scas
mov
push
xchg
dec
cmp
pop
lds
sub
push
jg
inc
subl
ljmp
mov
and
push
popa
popa
icebp
cmpsb
inc
cs
ret
icebp
mov
dec
sbb
mov
mov
shll
mov
es
cld
andl
mov
fwait
mov
out
fadd
mov
jg
xor
sbbb
je
lea
xchg
fcomp
in
dec
pop
cmp
pop
or
aad
add
pop
outsb
xchg
jnp
loope
lds
je
lea
daa
cmc
mov
sar
mov
push
hlt
mov
aam
and
andb
cmp
call
pop
pop
inc
inc
in
stos
in
daa
ljmp
out
repnz
add
lahf
sub
pop
cld
testl
mov
push
cmp
lods
dec
shrb
lea
ljmp
push
shll
mov
lods
leave
data16
stos
inc
mov
aam
insb
sub
movsb
lea
mov
pop
fimull
or
out
xlat
sub
pop
jbe
hlt
je
lods
xchg
jnp
pop
mov
outsb
sbb
mov
imull
fdivrl
js
push
insb
sbb
cmpsl
pop
in
mov
ja
daa
mov
test
push
xor
adc
out
sub
push
mov
xchg
xchg
stos
in
in
jb
clc
xor
push
ret
cmp
ds
xchg
aas
frstor
dec
stos
push
mov
cmp
addb
icebp
or
jp
jg
inc
aas
xadd
dec
dec
nop
xor
rorl
xchg
mov
add
outsl
rorb
push
movzwl
and
mov
jmp
ja
and
dec
xchg
push
arpl
jo
stos
jle
jo
mov
cmpb
cld
addb
orl
fistpl
pop
jmp
dec
adc
mov
es
repnz
sub
jmp
or
divl
xchg
scas
dec
roll
dec
out
dec
data16
addl
sbb
inc
jno
push
test
push
add
pop
das
and
aam
adc
or
and
gs
iret
mov
and
inc
out
fists
and
inc
inc
push
mov
int3
shl
test
and
mov
push
and
pusha
scas
jae
xchg
out
testl
mov
sbb
iret
or
and
push
gs
movsl
mov
add
sbb
retw
mov
xchg
clc
lds
and
cmp
popa
pop
aad
popfw
fstp
in
rcll
inc
xlat
cmp
xchg
sub
jo
cmc
adc
test
xchg
dec
daa
scas
fldt
mov
sub
loope
in
ret
ret
dec
rcll
mov
stos
add
jmp
inc
ret
in
xor
or
jl
mov
bound
outsl
shll
std
xor
mov
inc
sub
nop
out
int
int
mov
movsb
andl
incl
lahf
bswap
enter
imul
push
add
sbb
aaa
inc
lds
imul
pop
cli
cld
mov
inc
jae
xchg
push
push
cmp
xor
mov
jne
sti
cmp
addl
push
add
and
sbb
and
jmp
sbb
or
sub
mov
pop
adc
aam
push
call
xchg
fcmovnbe
inc
inc
sub
xor
and
mov
cmc
jp
pop
mov
stos
sbb
mov
inc
push
inc
sub
in
jmp
inc
and
cmp
arpl
xor
add
add
dec
adc
mov
cmp
inc
mov
xchg
push
cmp
lock
leave
arpl
popa
cmpsl
mov
and
adc
enter
rorl
push
fwait
add
cmpsb
adc
xchg
out
sbb
in
orl
cmp
ret
bound
push
repz
xlat
popf
cmc
lea
roll
and
jge
inc
clc
xor
jnp
add
movl
and
mov
sbb
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
call
xor
xor
dec
mov
jmp
mov
add
xor
and
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
jmp
xchg
imul
addl
stos
jle
jo
dec
jg
mov
je
aas
mov
hlt
mov
movsl
mov
adc
jmp
out
push
popa
ja
push
leave
fdivr
mov
jno
stc
jbe
cmp
test
jbe
test
dec
pusha
add
sbb
adc
test
or
mov
pop
fwait
cmpsl
dec
mov
scas
cltd
sbb
mov
or
call
inc
mov
xor
mov
popa
dec
adc
mov
jecxz
call
xor
insb
xchg
ss
aas
jle
stc
dec
xor
adc
filds
int
push
stos
add
in
inc
out
adc
jg
inc
test
sbb
enter
inc
dec
aas
pop
xchg
das
mov
jae
mov
fisubs
lds
ja
fildl
mov
std
ftst
cmp
cmp
add
outsl
and
mov
pop
mov
lcall
cmpsb
outsl
sbb
and
ret
mov
cltd
jle
mov
sahf
pop
lret
cmp
ror
pusha
test
lret
inc
fmuls
fimuls
mov
mov
jo
mov
xchg
inc
mov
movsl
sub
and
jl
sub
dec
aaa
out
inc
xlat
int3
out
sbb
push
push
aas
adc
pop
mov
cmp
or
cmp
push
scas
in
lahf
push
loope
outsb
ffreep
mov
fwait
mov
mov
in
rcrb
xchg
lds
shr
sbb
outsl
push
lock
insl
lods
movsl
cmpsb
adc
or
inc
int
fwait
bound
sbb
lcall
jo
mov
clc
imul
movsb
jg
dec
xchg
inc
pop
adc
out
add
or
repnz
add
mov
lock
mov
mov
aam
add
shrl
pusha
add
stc
xor
lock
push
fcomps
dec
add
lods
xlat
xchg
rorb
mov
fwait
cmp
fdivp
notl
mov
inc
mov
fs
sub
mov
inc
pop
pop
mov
ja
push
xor
aas
lock
push
stos
xchg
cmc
pushf
push
fnstcw
movsl
or
mov
mov
aad
nop
xor
jle
jbe
out
jge
iret
pop
mov
repnz
mov
insl
aam
scas
push
clc
mov
lcall
xchg
jmp
xlat
dec
push
pop
or
cld
push
pop
stos
leave
add
sub
mov
xor
cltd
mov
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
addl
movl
mov
mov
adcl
mov
xorl
xor
jmp
fidivl
jle
jne
jb
sub
pop
cmp
ds
jo
cmpsl
jg
jo
cld
sbb
and
sub
test
cmp
jns
cli
icebp
cmc
pop
jno
mov
adc
pop
rcl
inc
aad
call
arpl
lcall
cmp
jle
or
jns
pop
mov
imul
xor
and
int3
test
xor
fldl
clc
fistl
pop
scas
rorl
pop
mov
movsb
add
fmulp
sub
orl
test
jae
sub
jecxz
mov
int
xor
xchg
test
xchg
mov
lret
mov
and
repz
insl
in
or
aam
hlt
mov
sub
fdivr
lock
mov
cmpsl
mov
sbb
pushf
and
into
ja
and
mov
rcrb
shrb
nop
int
test
xor
add
clc
jb
lods
pop
aam
insl
test
outsl
lds
in
stos
jns
dec
sub
dec
in
lds
pop
jae
iret
mull
gs
jae
add
pop
jmp
xchg
scas
inc
and
sbb
cmp
mov
subb
sbb
repnz
inc
fdivrs
cli
mov
ja
mov
mov
sub
mov
mov
push
mov
add
sub
cmpsb
icebp
call
rcl
xchg
mov
mov
or
push
std
xchg
xor
clc
ds
mov
repz
mov
xchg
add
orl
mov
mov
xor
push
sbb
mov
or
mov
sbbl
add
adcl
mov
sbb
mov
adcl
mov
subl
mov
or
jmp
out
hlt
arpl
popa
xchg
insl
hlt
pop
xor
in
gs
cmpsl
jg
jo
dec
inc
mov
xor
pop
mov
icebp
jno,pt
pushf
outsb
push
lahf
sub
add
mov
idivb
ljmp
iret
add
jmp
xchg
repz
xor
pop
subl
cmpsb
ret
out
mov
mov
ja
mov
dec
push
mov
fisttpl
xchg
push
std
lahf
xchg
lock
jo
mov
dec
pop
es
pop
cmp
arpl
mov
sbb
add
cli
popa
add
and
ljmp
in
pop
jo
jmp
push
jbe
pop
fsubl
cmp
in
inc
sub
sub
incb
data16
bound
scas
dec
lods
cmp
les
sub
jae
jb
and
xchg
sbb
xchg
push
mov
push
pop
call
shl
xchg
sbb
mov
inc
mov
inc
mov
cwtl
cwtl
xor
xchg
push
ds
sub
xchg
cld
int
xchg
sbb
ljmp
xchg
lea
mov
cmp
jne
jg
push
xor
arpl
test
push
arpl
out
jns
mov
adc
and
cmpsl
xchg
mov
pop
lea
push
aad
add
out
and
dec
mov
imul
ret
mov
cmp
xchg
je
jp
add
add
movsl
shrb
inc
or
int
inc
mov
push
mov
das
mov
test
inc
sbb
or
inc
add
inc
or
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
xor
add
jmp
jge
gs
gs
sti
ret
pusha
jo
daa
lods
insl
enter
jo
jg
jo
rolb
insb
mov
pushf
dec
outsb
add
add
lret
mov
lea
pushf
dec
ret
xor
and
imul
lahf
jno
rorb
pop
fildll
and
out
stos
mov
mov
cld
xor
rcrb
and
fidivs
inc
push
ds
lcall
movsb
lds
es
mov
mov
sbb
adc
adc
pushl
jbe
das
movsb
jb
into
jg
jecxz
aad
aas
sub
pop
jae
and
jecxz
sbb
and
dec
sbb
enter
loope
in
xor
and
push
jns
clc
mov
repnz
loop
and
adc
pushf
adc
decl
dec
outsb
cmpsl
and
mov
ficomps
push
dec
je
adc
in
int3
sub
aam
sbb
sti
scas
stos
xchg
ficompl
or
add
or
add
dec
enter
jmp
aad
cmpsb
mov
jge
inc
jecxz
jb
icebp
pop
cli
cltd
jge
jbe
mov
adc
fs
sub
sarl
cmc
icebp
or
clc
andb
cld
ds
rorb
jg
xlat
mov
aaa
in
add
xlat
stos
jmp
and
add
sub
push
push
jecxz
ja
and
adc
lea
insb
out
ret
shlb
outsb
jle
aam
adc
pop
jbe
xchg
or
in
adc
sub
sbb
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
adc
movl
mov
sbb
mov
mov
xor
add
mov
sub
mov
sub
mov
andl
mov
mov
jmp
mov
jg
inc
rorl
jae
pop
dec
andl
jo
jle
jo
gs
add
aad
repnz
jo
mov
mov
or
call
pop
loopne
inc
daa
mov
jno
daa
sbb
cwtl
dec
jb
ja
movsb
out
add
xor
fldl
mov
push
mov
dec
stc
sub
sub
push
jne
jne
or
inc
orb
rcr
mov
mov
jmp
adc
je
rorl
dec
fidivrl
movsl
leave
das
stc
mov
sub
mov
mov
cltd
cld
lds
iret
test
pop
pop
mov
dec
cmp
xor
orb
std
mov
pop
jg
sub
or
cwtl
sti
hlt
rorl
cmc
adc
std
arpl
mov
pop
pop
mov
jle
clc
push
xor
or
jns
sbb
icebp
loope
aad
mov
add
punpcklwd
adcl
adc
in
out
ss
shrd
push
out
inc
inc
sahf
sub
lods
clc
xchg
pop
cld
fwait
jmp
add
jb
mov
mov
cwtl
fdivs
mov
adc
leave
mov
dec
sub
ret
mov
scas
and
cmp
jge
int3
insb
pop
rcll
fcoml
jmp
mov
mov
ret
shll
cmp
push
xchg
negl
ja
popl
stos
or
xor
lret
push
cwtl
push
push
cmpl
insl
dec
pop
mov
adc
push
push
loopne
std
jne
inc
push
dec
push
popa
sahf
jmp
test
cmp
mov
bound
ljmp
pop
adc
into
inc
mov
xor
out
xor
iret
insb
adc
pop
inc
lahf
adc
push
mov
xchg
fcmovnb
push
cmp
mov
mov
in
outsl
sub
andps
jle
fisubrl
pop
mov
hlt
pop
aaa
ss
jno
dec
je
popf
mov
cmpsb
jne
popa
scas
rcrb
add
adc
sahf
cmp
in
stos
call
jbe
inc
push
sbb
bound
dec
call
xor
or
push
lahf
test
repz
insl
pop
andb
ljmp
sbb
insl
pop
in
cmp
xor
dec
hlt
fwait
push
ret
dec
mov
mov
xor
mov
mov
adcl
mov
mov
orl
mov
subl
mov
andl
mov
mov
test
mov
jne
mov
jmp
sub
test
pushf
inc
jge
lret
movsl
cmp
loop
jo
mov
pushf
dec
cmp
pop
fmuls
mov
xchg
push
add
pop
jl
js
sub
aas
mov
jle
mov
mov
push
pop
cmp
jmp
mov
and
mov
sub
sub
dec
ja
jo
sbb
xor
gs
or
lcall
nop
mov
push
sbb
sbb
lret
iret
push
sbb
mov
adc
test
cmp
aam
loopne
pusha
sub
stc
fadd
loop
dec
mov
jb
aaa
xorb
lods
pusha
add
fistpl
mov
bound
adc
inc
gs
cli
mov
ret
fldcw
mov
loope
lea
in
xchg
adc
adc
popf
ret
fwait
cli
pop
mov
adc
mov
xor
and
push
jnp
scas
inc
adc
mov
cmp
icebp
and
bound
aaa
mov
movsl
mov
adc
mov
mov
mov
xchg
jns
jno
mov
imull
popf
ficomps
or
xchg
inc
adc
mov
push
xchg
nop
imul
cmp
pop
testl
popf
cmp
cmp
fisubl
pop
out
je
xchg
loopne
loop
jle
jecxz
dec
pop
cmpl
mov
add
jne
js
pop
cmp
iretw
mov
inc
jns
insl
xchg
popl
mov
mov
pop
jae
scas
pop
xchg
inc
and
lods
mov
loopne,pt
into
adc
inc
xchg
mov
subl
dec
sbb
loopne
dec
rcr
lods
push
imul
jne
and
outsl
mov
cmp
sahf
fnstcw
jmp
dec
or
mov
jb
and
cmp
lahf
xor
sbb
pop
test
jbe
cwtl
mov
loop
mov
int3
or
and
adc
jae
jno
std
jnp
outsl
cltd
mov
jecxz
fs
imul
pop
dec
mov
xor
gs
mov
dec
xor
mov
xlat
jecxz
fwait
mov
mov
iret
adc
les
roll
ret
push
mov
sub
mov
mov
mov
subl
mov
xorl
movl
incl
movl
subl
mov
push
push
push
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
add
xorl
mov
movl
jmp
inc
jae
pop
sub
jae
and
mov
xchg
fistl
lds
and
jo
or
ret
jnp,pt
xor
jb
xchg
xchg
pusha
out
jecxz
dec
iret
loop
enter
mov
add
adc
pop
mov
enter
outsl
fildll
push
cs
or
jmp
or
pop
cmp
out
fcomps
jmp
add
sub
dec
rorl
iret
pop
pop
out
jne
or
dec
int3
and
and
cmp
clc
sbb
add
cs
inc
icebp
dec
xchg
mov
lret
inc
xor
sub
sub
jl
add
repz
adc
loop
mov
sub
mov
pop
scas
adc
sahf
aam
mov
add
mov
loop
sahf
jbe
dec
sbb
sub
push
cmp
int3
mov
jns
insl
mov
incb
sbb
jno
lahf
mov
jg
in
int3
dec
mov
sbb
cli
popa
cmp
mov
pop
sub
movsb
sub
fwait
jb
xchg
add
fnstcw
pop
xchg
inc
sbb
pop
jae
ss
jl
inc
cli
adc
outsb
xchg
cltd
add
sbb
and
in
insb
fdivrl
icebp
mov
dec
sbb
dec
cltd
daa
adc
in
aam
test
shl
fdivrs
sub
sbb
out
and
rol
pop
pop
mov
or
push
mov
inc
xchg
xchg
jno
mov
sahf
and
mov
testb
rorl
mov
mov
enter
jge
in
iret
enter
cmpsl
sbb
jl
push
add
cmp
sbb
enter
leave
scas
test
cwtl
insl
and
mov
int
mov
sti
dec
mov
leave
xrelease
jl
out
adc
push
daa
cmp
and
push
pop
xchg
mov
xlat
movl
notl
mov
imul
jne
ljmp
in
gs
jo
pop
dec
int3
inc
jp
cmp
push
insb
ja
cmc
push
or
scas
jae
mov
mov
insb
lcall
stos
inc
les
aad
movsb
cltd
push
cmpsb
das
cmpsl
push
negl
cmp
pop
sar
mov
cmpsb
jns
xor
test
lds
lds
push
roll
daa
pop
sar
popf
dec
fimuls
mov
adc
inc
pop
les
sti
or
jno
sbb
mov
cmc
clc
fnsave
addr16
fwait
cmpsl
mov
frstor
leave
int3
jae
imul
mov
dec
icebp
push
fidivl
call
xor
xchg
imul
mov
xchg
stos
add
out
push
sub
xor
xchg
cmpsl
stc
add
ds
dec
ljmp
pop
xor
repz
cmpsl
mov
arpl
fscale
lock
rol
int3
xor
jb
inc
add
out
add
inc
aam
test
test
add
dec
add
add
mov
lahf
popa
sti
arpl
xor
adc
ret
and
jo
nop
push
test
fcmovb
sub
fldenv
xor
enter
pop
pop
or
cmp
jo
pop
dec
jmp
outsl
mov
imul
pop
imul
xchg
jbe
sub
dec
push
les
iret
xor
test
dec
cld
mov
dec
clc
ds
add
ljmp
aad
mov
clc
arpl
adc
sbb
lock
dec
lock
addl
jae
call
insb
sub
andl
adc
or
push
xor
sbb
fdivrp
pop
cmp
inc
insl
pop
adc
lds
dec
mulb
add
cmp
mov
test
mov
test
into
jl
enter
dec
jns,pt
fsubr
cmpsl
lods
jbe
xchg
flds
jmp
fidivrl
rclb
push
sub
rol
lock
shll
in
fbstp
mov
in
xchg
mov
pop
loope
aam
insl
sbb
or
ss
cmc
stos
jmp
lahf
push
push
sbb
das
mov
sarb
fsubr
adc
sub
jno
dec
pop
xchg
das
shrl
daa
repz
add
xchg
pop
mov
fwait
push
shlb
jne
fnstenv
cmpsb
stos
mov
push
mov
inc
push
ss
sbb
movsb
xchg
mov
scas
and
inc
lret
leave
mov
das
lods
xor
fistpll
jae
ds
cmp
inc
loope
hlt
stos
or
xor
push
push
add
push
push
cmpsb
les
rcrb
cmp
pop
dec
mov
out
inc
lret
hlt
outsb
mov
cmc
pop
xor
pushw
mov
rol
push
add
int
adc
xorb
hlt
xacquire
inc
sahf
sarb
or
std
scas
mov
nop
or
into
cmp
out
push
mov
lcall
pop
lods
or
inc
out
test
roll
lcall
addr16
pop
pop
test
rclb
lret
pusha
sar
jb
xchg
adc
rep
scas
lret
call
pop
xor
dec
hlt
jge
xor
xchg
jo
xor
int3
movb
cs
negl
dec
xchg
imul
scas
mov
mov
push
popa
test
jo
mov
push
aam
leave
int
lahf
out
xor
fdivl
or
jmp
pop
jns
fnsave
out
lahf
mov
lea
sbb
and
jp
push
push
xor
scas
call
cwtl
adc
addb
sbb
jae
and
pop
cwtl
push
jnp
mov
cmp
inc
jg
lea
arpl
pop
and
or
and
lds
and
in
movsl
cmc
mov
gs
cld
push
jl
jb
add
add
insb
mov
int3
mov
jne
ss
decl
add
add
inc
add
movb
notb
add
movl
add
in
test
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
add
orl
mov
adc
jmp
or
rcl
cmp
pop
jns
popa
mov
iret
jo
and
jo
jo
and
adc
mov
loopne
xchg
scas
test
and
ss
addr16
sbb
ja
jno
push
jbe
xor
outsb
je
cmc
adc
jne
test
dec
dec
pop
adc
mulb
lock
mov
stc
fstl
adc
push
int3
pushf
sbb
xlat
out
call
orl
push
mov
xchg
insl
mov
test
xchg
scas
push
inc
aad
inc
icebp
test
mov
dec
fdivs
xchg
dec
cld
and
xlat
mov
sbb
fsts
test
mov
cs
cwtl
sbb
ret
push
and
sahf
int
into
mov
das
mov
in
pop
repz
adc
mov
mov
test
adc
test
pop
xchg
or
inc
outsb
and
sub
jmp
jp
aam
xor
push
fcmovne
orb
lea
xor
and
and
imul
and
pop
sti
pop
in
push
int3
out
dec
int3
jb
mov
jns
and
cld
testl
jb
or
cltd
stc
cwtl
push
inc
dec
ja
sub
xchg
jne
loop
add
cmp
jg
cmp
xor
and
inc
jecxz
daa
and
das
add
jns
add
or
adc
jge
sbb
mulb
ret
xlat
inc
xchg
sub
repz
dec
dec
push
push
pop
push
cmp
xchg
xchg
jbe
mov
mov
int
loopne
add
mov
icebp
cli
xchg
inc
pop
jno
or
hlt
movsb
dec
pusha
and
inc
push
mov
mov
ja
adc
xchg
imul
stc
mov
in
sub
lret
jne
push
pop
jg
and
push
jae
and
cmp
xor
ret
imul
cmp
ja
bound
imul
jae
jmp
push
ret
in
xchg
cmpsb
popa
rcrb
test
pusha
scas
ficoml
popa
arpl
mov
cmp
adc
xchg
mov
push
data16
mov
jge
aas
pop
jmp
movsb
inc
mov
or
xor
into
imul
lods
jae
leave
rcrb
push
test
call
fisttps
push
inc
or
add
jbe
push
leave
in
adc
popa
jae
daa
inc
fstp
test
fs
cmpsl
aam
mov
scas
imul
push
test
inc
jns
sbb
lret
sub
pop
movsb
push
repz
jge
ss
cwtl
orl
push
movsb
fsub
dec
jle
cmp
daa
ret
add
mov
sub
loop
lahf
mov
int3
arpl
loop
pop
xor
mov
aad
add
or
mov
cmpsl
xorb
sbb
rcrb
imul
inc
fdivl
movb
adcl
push
inc
mov
sbbl
xor
add
push
mov
orl
xor
addl
add
xorl
push
lea
push
addl
pushl
adcl
pushl
call
adcl
test
je
lea
sbbl
push
mov
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
divb
adc
jge
jo
sub
roll
cltd
fisubrs
roll
dec
mov
and
lret
cld
call
add
inc
cmpsl
and
adc
test
xorl
jecxz
xor
pusha
mov
lods
xlat
inc
jbe
cli
add
lods
and
mov
mov
loopne
loopne
add
test
and
into
cli
lret
or
mov
or
out
dec
mov
cmpsb
and
enter
sub
or
popf
push
or
sbb
xchg
push
imul
or
or
lahf
shlb
ficompl
test
sub
add
insl
movsl
clc
jge
push
jmp
adc
push
xchg
jne
jae
jno
lret
dec
fnstcw
push
mov
push
test
mov
inc
or
shll
cmp
push
mov
into
sbb
cmpsb
int
in
add
rorb
cmc
fcompl
pop
push
fisttpl
loopne
rol
cli
cld
jle
stos
sub
lods
inc
pop
ds
mov
in
mov
xor
and
insb
push
mov
sub
xchg
push
stc
fldl
sub
enter
mov
add
push
cltd
push
mov
pop
gs
sti
movsl
fmulp
mov
xchg
and
test
mov
push
in
inc
addl
mov
sub
mov
into
xchg
pop
pop
lret
xchg
jno
xchg
insl
imul
loop
adc
lods
push
mov
insl
push
add
popa
mov
push
vpsrlq
fs
ja
jne
rorb
xchg
imul
mov
add
cwtl
push
mov
jns
lock
add
push
aad
sub
push
push
jbe
scas
jb
cmc
aam
lods
xchg
sub
or
pop
jecxz
sbb
sbb
sahf
pop
cltd
mov
nop
mov
add
push
jnp
adc
jp
bound
jbe
xlat
mov
sar
mov
imul
xchg
adcb
cmp
mov
adc
js
cmpsl
jl
icebp
sub
pop
call
inc
mov
push
sahf
loope
xchg
inc
adc
mov
outsl
pop
mov
out
ja
testb
push
loope
dec
inc
loop
pushl
mov
inc
jge,pn
popa
pop
inc
in
xchg
sub
dec
js
shll
fs
xor
sbb
stos
out
inc
jecxz
and
xor
mov
pop
int3
sub
add
mov
jns
mov
push
insl
iret
xchg
add
lcall
pusha
ljmp
divb
mov
mov
enter
jl
pop
xchg
clc
push
or
std
mov
fistps
cmc
sub
sti
ljmp
ss
push
fimuls
inc
aas
jle
mov
pushf
fidivl
add
push
mov
add
push
mov
mov
pushl
jmp
sahf
das
or
mov
mov
pop
mov
xchg
sub
stos
push
leave
jo
and
jo
sub
repz
mov
and
xor
ja
sub
cmpsl
cmp
nop
add
xchg
in
xchg
xlat
jg
cmp
mov
imul
imul
iret
test
adc
sbb
mov
shlb
fnstsw
pop
sub
mov
add
jnp
mov
stc
mov
push
insb
fcoms
outsb
mov
adc
mov
stos
test
cmp
xor
out
mov
xchg
xor
push
pop
mov
out
inc
out
add
push
lret
test
xor
les
or
pop
or
adc
roll
add
dec
pop
xchg
test
and
fldenv
stc
std
and
fs
mov
and
ljmp
fidivrl
int
dec
inc
dec
xor
xor
in
insl
xchg
add
adc
test
les
into
pop
pop
jp
push
mov
ljmp
mov
mov
bound
jo
jecxz
lds
lock
lock
sbb
imul
inc
pop
mov
push
xor
dec
daa
push
sub
in
adc
sub
inc
xor
pop
mov
add
popf
sbb
pop
fwait
test
xchg
dec
add
push
mov
repz
icebp
cmp
stc
int
mov
test
adc
cs
or
mov
jb
out
std
cmpsb
xchg
push
aas
inc
insb
mov
outsb
inc
sbb
dec
sbb
adc
cmpl
push
sbb
inc
or
ror
test
push
out
inc
xchg
rcr
sbb
scas
das
addb
adc
push
aam
daa
in
call
std
inc
jbe
add
sbb
push
adc
pop
adc
dec
cld
enter
mov
and
ret
inc
and
adcl
jp
stc
bndstx
loope
out
hlt
lea
or
stos
dec
popa
adc
imull
push
sti
mov
in
sub
test
and
test
dec
inc
sbb
lahf
pusha
jecxz
shlb
mov
xor
jg
push
mov
imul
fisttpl
add
and
iret
xor
fcom
mov
pop
dec
xchg
call
sub
mov
inc
pop
bound
idivb
das
stos
cmp
add
hlt
into
mov
jb
mov
ja
jge
dec
fsubrs
add
and
mov
fcom
aam
mov
mov
or
xchg
fsubrl
mov
jecxz
xor
mov
dec
cmp
out
mov
mov
lret
insb
sbb
cmp
fdivp
jbe
push
outsb
sub
inc
rcl
call
jb
mov
push
fs
xchg
mov
cmp
clc
cmpl
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
or
jo
and
jo
stc
jns
mov
jge
lret
jecxz
sbb
sub
out
ljmp
mov
pop
in
xor
stos
mov
cmp
jle
movsb
roll
push
shll
insl
sbb
jo
loop
lods
repnz
cld
lret
add
fsubrl
mov
mov
xor
pop
push
push
imul
xchg
and
out
arpl
shrl
add
fcmovne
in
add
mov
push
scas
mov
pop
push
fwait
xor
popf
add
out
in
sub
cli
andl
mov
push
jge
jbe
xchg
adc
push
test
pop
mov
mov
repnz
repnz
or
pop
pop
call
fidivrs
mov
xchg
aam
mov
orb
sarl
or
xor
dec
out
xchg
std
inc
xchg
fidivl
loop
mov
sbb
xchg
repnz
mov
int
ja
movsl
sbb
popf
push
aam
jge
rolb
pop
xor
or
mov
fisttpl
pusha
sub
pop
or
movsl
sbb
rcrb
test
sbb
int3
sub
subl
add
test
sub
adc
paddb
out
pop
pop
mov
cmp
xchg
mov
andb
dec
adc
in
dec
adc
cli
scas
inc
cmp
test
jb
adcl
pop
shll
sub
mov
popf
sub
add
clc
shrb
fsubl
lahf
dec
leave
loopne
lahf
imul
jge
imul
inc
jo
jge
adc
inc
int3
lahf
les
dec
sub
sub
ret
popa
mov
or
push
jle
mov
movsl
aaa
sbb
pop
scas
shll
push
push
hlt
out
sbb
cmpsl
jns
adc
test
ja
mov
insb
fcmovnb
fldenv
imul
pusha
enter
cmp
push
xchg
inc
rol
bound
fildl
xor
mov
jae
pop
sub
push
out
dec
pop
outsb
stos
lds
in
xchg
jle
orb
imul
inc
add
inc
push
mov
jl
adc
je
arpl
out
dec
push
xor
jb
dec
xchg
push
and
in
jae
fistpl
push
mov
xor
roll
pop
test
jle
mov
imul
mov
cmp
in
into
sbb
push
mov
test
mov
out
ja
popa
xlat
imul
stc
mov
mov
fcmovu
inc
pop
lea
shrl
pop
aas
lret
pop
inc
mov
xchg
add
test
stos
rcll
daa
jo
mov
mov
data16
pop
sub
pop
test
inc
loopne
test
call
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
jmp
ja
mov
mov
insb
adc
mov
shlb
and
jo
hlt
pusha
dec
push
inc
mov
push
neg
fdivl
adc
inc
mov
in
xchg
cmpl
popa
fidivrs
xchg
inc
or
scas
scas
add
int
and
cmp
xchg
jg
sbb
add
popa
adc
movsl
xor
dec
sbb
pop
jp
jge
test
inc
add
pop
js
jle
out
pop
dec
jns
cld
gs
xor
sub
pop
das
aas
test
es
inc
out
xchg
test
xor
dec
jp
shlb
mov
es
lret
xchg
arpl
jge
sti
pop
adcb
orl
mov
add
adc
xor
stos
mov
inc
subb
cld
ret
xchg
loop
aas
inc
sbb
push
dec
stos
mov
mov
dec
nop
pop
push
subb
ljmp
xor
push
pop
and
add
lret
mov
hlt
pop
pop
sub
ja
cmc
pop
jno
lock
pushl
pop
push
pop
push
ja
std
jecxz
cltd
adc
mov
mov
in
push
loop
sub
mov
cli
scas
cmp
pusha
push
in
loope
xor
imul
cltd
sbb
cmp
fisubl
ljmp
cmc
jge
adc
push
push
lock
dec
pop
or
lods
stos
xchg
loop
and
mov
jb
push
xor
mov
mov
iret
lcall
hlt
sub
scas
shll
mov
xchg
pop
xchg
add
or
and
mov
lea
jne
shlb
andl
mov
je
popa
outsb
or
iret
xor
jb
lret
xor
nop
adc
outsl
jno
bound
stos
stos
inc
sahf
imul
add
or
test
mov
sbb
push
add
ss
and
push
rcl
insb
xlat
fimuls
ja
xchg
mov
aas
mov
mov
mov
hlt
mov
adc
xchg
xor
sub
mov
rcrb
dec
ja
inc
mov
pop
inc
lret
mov
mov
cmp
insb
addb
push
mov
rclb
ja
dec
and
mov
popf
ja
pop
sub
mov
outsb
in
fsubr
sbb
push
mov
sub
roll
cltd
mov
scas
movsl
fiadds
dec
mov
lock
lds
outsb
xchg
test
cld
push
xor
in
loop
out
dec
pop
mov
movsb
iret
xchg
dec
mov
pop
test
lcall
xor
cli
fs
add
cmpb
push
dec
push
aam
mov
mov
or
mov
jmp
inc
cli
fisttpl
jp
xchg
mov
out
jo
and
jo
out
lock
pop
in
jp
add
push
sbb
dec
xor
in
or
bound
adc
mov
sbb
insl
daa
push
mov
mov
andb
leave
or
pop
push
pop
push
movb
dec
dec
push
fwait
jl
outsb
repnz
jmp
cmp
jge
shrb
scas
lret
test
iret
add
fidivrl
mov
xor
cmp
cmpsl
dec
inc
lahf
js
ljmp
sub
dec
nop
jecxz
icebp
ucomiss
sti
dec
rcll
bound
dec
or
mov
inc
and
arpl
jne
dec
pop
jae
sbb
ljmp
pop
data16
fistl
xlat
dec
dec
scas
jo
pop
pop
and
repnz
mov
pop
sarl
into
lcall
sbb
xchg
int3
xchg
and
pop
xor
cmp
jne
mov
shl
enter
aaa
xchg
repz
sahf
pop
es
cs
push
push
iret
icebp
add
inc
in
lret
mov
lahf
imul
subl
je
mov
inc
sbb
shll
cmp
ljmp
shl
insb
cmp
cltd
push
add
push
or
daa
inc
mov
push
stos
inc
push
xchg
lods
xor
ficompl
push
mov
add
outsb
jnp
fs
adc
testl
mov
mov
fidivl
mov
dec
mov
rcrl
rcrb
sub
js
iret
sti
and
mov
inc
dec
pop
sbbb
test
mov
arpl
out
jecxz
cltd
imul
setl
aad
sub
lahf
jg
fucomp
ret
fdivl
cmp
enter
push
clc
repnz
sub
in
scas
in
push
mov
stos
test
mov
sub
fsts
inc
clc
jnp
cmpsb
sbb
loope
enter
push
mov
hlt
sldt
or
cltd
dec
mov
aas
sbb
lahf
sbb
push
loop
inc
xchg
mov
pop
cmc
and
or
repnz
div
sti
mov
call
movsb
mov
inc
mov
pop
jg
lock
pop
cmp
stc
fwait
sarb
sub
xchg
inc
js
ds
xor
xchg
push
adc
cmp
je
insl
sub
adc
add
mov
fmull
aaa
cmpsb
add
sub
aaa
shlb
bound
cmp
add
or
jge
mov
shll
arpl
loopne
adc
inc
cmp
cmp
sbb
pop
add
stos
dec
pop
fucomp
cmp
dec
sarb
lods
sub
pop
push
push
mov
jge
test
ja
icebp
fmul
xchg
mov
movsb
fcmovne
negl
arpl
sbb
add
jmp
mov
fwait
xchg
fwait
jae
roll
adc
dec
xchg
fdivl
and
jo
lds
mov
add
jmp
jnp
in
sbb
inc
xchg
repz
dec
stos
aam
pushf
sahf
imul
mov
mov
sbb
jns
or
std
add
js
cmpsl
rol
dec
stos
pop
std
dec
jbe
cmp
repnz
xchg
xor
in
xor
dec
dec
mov
sub
and
mov
push
das
cli
xor
mov
or
push
test
add
test
pop
loop
xor
fs
mov
daa
cmpb
push
daa
popa
into
cmp
into
jmp
fldl
ror
inc
mov
xchg
mov
loop
jbe
ret
jmp
sarb
loop
mov
dec
sbb
loope
or
gs
dec
shll
popa
mov
inc
adc
inc
ja
dec
outsl
sub
insb
test
test
and
push
jp
ret
addb
ja
dec
xchg
neg
push
insl
push
dec
stos
in
mov
pop
test
je
mov
aam
push
add
xchg
notb
fwait
daa
neg
test
inc
pop
stos
inc
xor
jecxz
enter
sub
sarl
lret
xor
ljmp
je
imul
dec
je
rorl
add
jbe
push
jmp
das
mov
inc
push
ds
lcall
in
xor
fbld
mov
sarb
fwait
cltd
cmp
mov
xchg
push
xchg
out
insl
addr16
imul
das
inc
clc
loope
add
pushf
outsl
mov
xchg
int3
sub
pop
dec
cmp
cmp
pop
loope
dec
jns
sub
repnz
movl
add
dec
dec
sahf
and
cltd
movd
pop
sub
inc
jne
mov
nop
loopne
out
pop
and
cmp
enter
xchg
fnstcw
jmp
cmpsb
gs
push
cmp
jecxz
mov
xor
pop
insl
mov
iret
in
adc
outsl
and
scas
ret
or
sbb
mov
mov
in
pop
xor
neg
ret
ss
sahf
push
jbe
dec
or
out
push
iret
stos
or
and
stos
add
insl
ljmp
pop
inc
jle
fwait
mov
addr16
xor
loope
test
cltd
dec
iret
jae
rorl
push
jbe
and
mul
adcl
leave
cmp
xchg
cld
cmpl
mov
ret
or
fisttpl
into
jmp
and
adc
sbb
pusha
mov
fs
pop
add
pop
fildl
mov
iret
xor
jg
icebp
cmpl
push
add
pushf
dec
mov
jp
mov
push
cld
xchg
gs
hlt
mov
sti
jle
ds
sahf
pop
push
test
mov
inc
add
inc
sbb
rol
nop
lcall
pushl
mov
mov
pushl
lea
jmp
mov
push
mov
bound
fnstenv
and
jo
cmp
push
popf
jne
sahf
pop
int3
imul
rorb
test
int3
add
xchg
insb
test
gs
dec
jle
mov
aas
mov
sahf
loopne
cs
mov
enter
mov
xor
sbb
ss
inc
je
xor
fcompl
test
inc
fimuls
cmp
shlb
loope
inc
inc
je
sbb
loope
data16
xor
ljmp
xor
mov
lea
iret
add
jmp
mov
hlt
jae
in
mov
outsl
test
push
fidivl
add
dec
inc
jp
dec
out
xor
lods
xchg
inc
push
mov
or
push
jb
xchg
or
ds
les
jae
mov
outsl
ds
fisubrl
dec
lea
xchg
aam
ljmp
shll
sbb
sbb
add
adc
sbb
inc
inc
adc
shrb
and
sbb
mov
cmpsl
aaa
jecxz
xchg
iret
cld
ret
and
cmpsb
cmpsb
jns
popf
xor
pusha
cmc
fildll
dec
loope
bound
int
jb
stc
ljmp
add
std
fdivrs
iret
mov
dec
jle
inc
push
rcrl
add
out
xchg
xchg
pop
mov
mov
iret
out
inc
sbb
in
or
test
pushf
stos
adc
stos
dec
dec
bound
push
fmull
cmp
stos
dec
fwait
inc
pop
lds
xchg
or
jb
js
rcr
test
sub
push
stos
or
test
pop
cli
repz
sbb
push
push
push
inc
ss
and
or
dec
scas
jge
aad
adc
mov
cmpsb
mov
sbb
divl
idivb
jecxz
bound
adc
cltd
aam
cmp
push
enter
cmp
fisubl
jnp
rcll
loop
rorl
cmp
push
fcoml
movb
sub
ja
ret
aas
and
fsubs
movsb
ret
fistpl
inc
jno
push
dec
in
dec
cwtl
xlat
dec
stc
xchg
add
mov
shll
sar
pop
loope
jmp
mov
pop
repnz
test
dec
push
ret
in
sub
sbb
cli
push
outsb
in
jp
and
mov
lods
pop
jecxz
shll
xchg
aad
mov
mov
subb
dec
sbb
sbb
xor
xor
jb
arpl
in
pop
cmp
stos
jae
or
inc
aam
mov
mov
jmp
mov
mov
cmp
out
push
mov
faddl
adc
test
cmc
int
adc
fcmovnb
inc
xchg
xor
div
inc
out
sbb
leave
pop
and
popa
mov
adc
shll
repnz
lcall
mov
loop
xchg
cltd
imul
jns
mov
js
pushl
lea
jmp
add
out
out
xor
call
xchg
add
out
jo
jge
jo
xchg
aam
daa
orl
insl
xchg
pushf
out
push
jmp
aaa
add
jmp
fcompl
data16
mov
sarb
mov
mov
dec
lods
and
fwait
cmp
add
mulb
mov
push
mov
and
cld
jecxz
fidivrl
xchg
popl
jecxz
movsl
mov
sub
or
dec
push
daa
pop
enter
dec
cmp
cmp
push
pop
xor
into
pushf
mov
loope
movsl
aam
fmuls
pop
movsb
fildl
and
inc
cmp
out
loope
push
add
adc
lret
lods
fcmovnu
imul
push
mov
pop
nop
jge
sarl
jb
xor
subps
push
push
mov
lahf
into
ds
add
enter
in
and
jg
xor
add
jno
scas
sbb
sarl
lcall
rorl
push
adc
lret
push
loopne
adcl
jecxz
out
add
xlat
push
add
mov
pop
cmp
adc
push
push
add
mov
adc
mov
fsubs
adc
js
or
jnp
sti
fxch
imul
xor
cmp
mov
or
enter
bound
shrb
hlt
aas
bound
cmp
call
mov
mov
js
mov
push
mov
push
cmp
imul
data16
inc
ja
add
jae
cli
cmp
or
jno
ret
mov
jo
or
lock
mov
nop
xor
sti
in
loope
push
push
call
loop
ror
xor
outsb
das
pop
push
in
cmpsl
stos
movsl
xchg
inc
cltd
xor
dec
inc
xchg
pop
mov
les
xchg
add
insl
mov
or
dec
fbstp
je
inc
mov
xchg
xchg
cmc
aam
jmp
xchg
jns
inc
sbb
in
cmc
xor
sbb
imul
push
into
loopne
pop
ljmp
repz
call
cmpsl
bound
ret
imul
in
gs
push
sub
pushl
sbb
shll
push
ret
fimuls
js
ret
mov
lahf
test
lret
test
test
jo
cmp
push
cmp
mov
ret
sub
inc
call
mov
sub
mov
mov
lods
daa
mov
cli
pop
cltd
mov
dec
mov
sbb
mov
cwtl
clc
or
rol
shl
mov
jb
xor
cmp
sub
add
adc
rcrb
outsb
repnz
lock
shlb
popa
ljmp
adc
mov
dec
andb
mov
pusha
mov
add
xor
add
xor
jmp
push
pop
jmp
cmpsb
jnp
or
lahf
jo
daa
loop
jo
jge
jo
aaa
pop
push
out
mov
fwait
mov
lret
fiadds
decb
xchg
xrelease
push
mov
fwait
and
psrlw
pop
cmpsb
and
pop
cltd
jmp
jle
cmpsb
pop
xchg
inc
or
out
inc
maxps
add
dec
cmp
pushf
and
add
jns
addr16
mov
dec
lods
and
dec
repz
cmpsb
es
test
dec
sub
mov
xor
or
sub
dec
sub
pop
inc
push
jle
cld
iret
push
adc
cld
xor
filds
jne
test
cmp
lahf
add
inc
lods
sub
sbb
cli
xchg
psrlq
out
cmp
mov
test
pusha
dec
aam
aaa
pop
jle
mov
dec
enter
outsb
daa
or
inc
sub
and
sub
clc
push
jb
dec
fcomi
fmuls
adc
cmp
or
jb
insl
addb
xor
ja
movsb
mov
test
push
cmpsl
and
movsl
push
sbb
cs
add
les
or
adc
dec
and
jbe
cltd
inc
jbe
icebp
inc
cmpsl
pop
jbe
mov
dec
mov
mov
in
dec
insb
enter
xchg
mov
add
add
mov
andl
push
add
or
mov
test
aam
add
jp
jbe
cmp
sub
repnz
mov
std
inc
mov
jbe
js
add
jbe
and
jbe
hlt
out
pop
pushf
decb
ret
fisttps
test
add
cmp
push
jmp
or
shlb
jle
ret
inc
add
mov
push
xor
test
mov
in
xor
mov
add
push
rcl
movaps
inc
pushf
sti
daa
test
sbb
and
mov
shl
jmp
fcoml
mov
sbb
pop
rorl
jns
in
xor
or
sahf
sub
sti
stos
mov
loop
imul
mov
mov
xor
jle
xchg
loop
push
inc
std
lea
jne
enter
sbb
adc
mov
xor
scas
js
loope
fimuls
test
xchg
add
jle
mov
js
ljmp
stc
js
insl
fimuls
stos
movsl
cltd
xchg
nop
or
sub
xor
scas
pop
jns
jle
jne
xor
pop
imul
add
mov
lret
stos
and
add
inc
fidivrs
adc
or
push
mov
lcall
jecxz
sbb
js
inc
mov
mov
inc
or
jnp
pop
repnz
and
and
ss
lahf
dec
arpl
dec
add
xlat
push
divw
inc
in
cli
es
push
add
and
inc
add
dec
add
add
mov
ja
add
xchg
out
jo
and
jo
or
xchg
shrb
iret
ja
push
sbb
cmpsl
aas
add
jl
add
pop
scas
mov
pop
inc
mov
xor
fnstsw
adc
rol
mov
out
xchg
adc
and
les
into
dec
adc
jo
movsl
mov
ret
push
idivl
xchg
pop
jae
jmp
in
bound
inc
add
xor
pop
cmp
out
shrl
sub
rcrb
sbb
lods
mov
arpl
cmpl
push
lods
hlt
jecxz
push
loop,pt
das
push
lahf
cmpsl
pop
call
xchg
stos
jnp
call
out
sbb
add
dec
xchg
add
mov
gs
mov
mov
outsb
push
mov
shll
fldl
sub
outsl
push
decl
cmp
pop
loopne
aas
jo
cmc
mov
mov
sbb
cmp
jbe
scas
inc
adc
or
aaa
inc
mov
ret
mov
xor
or
rorb
cmp
pop
pop
enter
in
popa
lods
test
icebp
dec
lahf
arpl
ud0
push
mov
mov
and
inc
das
or
mulb
push
aad
enter
jle
icebp
mov
outsb
cld
mov
xchg
mov
cmp
insl
test
shrb
loop
sbb
sbb
cli
stos
push
push
rolb
and
mov
lock
ljmp
into
lcall
daa
xor
repz
cmp
popa
mov
test
pop
sub
hlt
jne
out
xchg
loope
xlat
pop
inc
jns
scas
push
inc
cmp
leave
xor
sarl
adc
aas
lea
dec
pop
or
push
mov
test
inc
push
mov
fwait
nop
inc
hlt
jg
pop
movsl
dec
mov
sub
cmp
and
sub
fisubrl
jns
mov
inc
pop
sub
aas
mov
into
subl
ja
je
dec
sti
add
add
xchg
scas
push
or
cmp
stc
dec
sbb
je
ret
test
mov
daa
xchg
lods
lret
outsl
mov
jne
push
dec
enter
sbb
and
inc
out
fists
add
or
or
inc
xor
ljmp
sub
add
testl
sub
mov
fnstenv
mov
jmp
push
pop
inc
sub
mov
xor
mov
leave
cmp
push
sub
cld
mov
stos
cmp
pop
cli
pop
stos
pop
sbb
mov
frstor
js
das
pop
lahf
rorl
push
imul
xor
xor
cmp
ds
xchg
sti
in
push
mov
or
dec
adc
add
mov
popf
outsb
repnz
adc
lock
add
pop
pop
pop
leave
ret
push
mov
sub
push
subl
mov
sbb
mov
mov
mov
sub
imul
mov
movl
neg
movl
mov
mov
or
mov
add
mov
adcl
mov
xor
xor
mov
sbb
mov
jmp
arpl
cmc
xchg
cmc
arpl
pop
das
negl
in
jo
lahf
jge
jo
inc
lds
pop
push
aad
jp
or
int3
adc
jo
aaa
ljmp
loopne
fistpll
jmp
dec
fcompl
mov
negb
xor
js
ljmp
push
cmp
cltd
rcl
das
mov
mov
ss
repz
pushf
subb
cmp
pusha
xorb
add
lods
stc
inc
jnp
addl
jecxz
hlt
pop
sbb
xor
push
leave
push
cmp
dec
popa
stos
cwtl
inc
rcll
mov
lods
fdiv
jne
xor
inc
sbb
in
loop
call
inc
push
aad
pop
dec
add
arpl
push
cmp
ss
push
test
xor
inc
stos
dec
lcall
inc
cmp
aad
mov
mov
in
cmp
ds
sti
movsl
jmp
sahf
mov
push
je
pop
pop
jle
mov
test
call
sti
out
or
push
sbb
btr
lods
xor
jnp
adc
out
mov
clc
push
xchg
stos
div
movsb
std
mov
gs
jl
fsub
pop
stos
sub
sbb
cmp
into
iret
or
pop
and
jmp
aad
push
decb
fnsave
cmp
daa
enter
pop
or
cwtl
cwtl
test
cmpsb
push
jecxz
jno
enter
mov
adc
leave
adc
cmp
mov
lret
push
xchg
jnp
fisubs
stc
mov
dec
push
enter
arpl
insl
das
push
rol
clc
loop
repnz
push
pop
movsl
cmp
fimuls
mov
mov
in
jle
jle
or
fildll
les
dec
push
add
jle
lret
dec
in
call
mov
pop
lahf
dec
sti
ds
cmc
fdivrs
sub
loopne
clc
sbb
fmuls
imul
add
lods
mov
pushf
icebp
std
mov
lcall
xchg
xor
ret
fisttpl
cmc
jno
pop
pop
and
out
dec
sbb
mov
fidivrs
std
mov
ds
sub
inc
ds
jg
int
dec
cmc
xor
js
sti
or
xchg
aaa
and
arpl
ret
rolb
insl
daa
jge
stos
das
mov
mov
push
adc
push
push
dec
jne
mov
jecxz
jnp
push
inc
mov
and
fdivs
add
mov
rcr
mov
test
mov
push
lds
mov
ret
mov
testb
dec
in
sub
sub
orb
cmpsb
xchg
pop
add
or
shll
pop
loope
pusha
loop
jle
out
test
cltd
popf
mov
out
movsb
jns
xchg
sub
or
cmp
xor
lcall
sub
jle
sub
and
pop
mov
dec
shll
sbb
addb
dec
pop
scas
call
es
pmulhuw
mov
xchg
in
pop
add
xchg
and
cld
pop
mov
adc
xlat
mov
push
xor
xor
cmp
in
mov
ret
dec
inc
inc
push
arpl
and
sbb
pop
jmp
or
mov
inc
mov
outsb
push
inc
fsubr
sub
jl
add
xor
mov
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
adcl
jmp
xlat
mov
mull
mov
test
call
jo
imul
insl
adc
test
andl
adc
dec
mov
xorl
dec
jne
pushf
in
mov
pop
jmp
jae
fcmovb
xor
pushl
das
mov
ret
enter
cmp
or
adc
xchg
mov
add
jp
sbb
xchg
lret
bnd
aaa
mov
cmp
xchg
and
mov
idiv
cld
inc
xchg
cs
test
cmp
hlt
aad
cwtl
push
add
sahf
mov
fisubrs
push
ss
or
arpl
nop
mov
mov
inc
pop
imul
adc
mov
xor
dec
ss
xchg
clc
dec
test
add
hlt
in
add
mov
inc
imul
sarb
jo
lock
pop
cs
ret
push
pop
or
or
daa
jle
cwtl
stos
sub
mov
mov
fsubrs
fdivrs
repz
dec
fisttpl
jg
add
push
aas
xchg
adc
pop
testb
cmp
or
data16
insl
fadd
ret
adc
xchg
stc
sbb
mov
adc
push
mov
insb
sbb
sub
dec
nop
xor
fcoml
pop
in
addr16
jecxz
call
inc
shrl
and
orb
xlat
lds
test
pop
dec
sbb
and
push
rorl
inc
mov
jmp
xor
stos
ret
and
clc
clc
lea
adc
loop
outsl
stc
jmp
mov
fidivs
fnstsw
sbb
adc
adc
fsub
cmp
and
lds
sbb
pop
mov
scas
mov
fidivl
and
adc
push
mov
push
sub
out
cmp
iret
negb
rorb
inc
dec
mov
cmp
dec
add
imul
jle
and
jo
imulb
fucompp
adc
sbb
ret
icebp
ja
jge
in
and
fs
add
lcall
aam
mov
push
repz
xchg
out
or
shrl
jb
rep
push
mov
dec
and
and
adc
das
lea
push
adc
mov
add
inc
jae
dec
dec
scas
dec
iret
rcll
adc
sub
xor
pop
and
in
rcll
lock
movsb
sub
sub
movsb
cmpsl
lea
sbb
dec
jl
jle
xlat
xchg
int
js
mov
sbb
insb
rorb
pop
or
push
lea
push
stc
aaa
cmp
sub
icebp
fnstsw
mov
add
cmp
jl
imul
adc
mov
push
hlt
inc
push
mov
mov
arpl
mov
filds
mov
gs
loope
idivl
sbb
aas
outsl
mov
mov
jbe
fisubl
loop
rcrb
filds
xorl
inc
xchg
or
lahf
addr16
mov
shlb
pop
mov
or
jmp
mov
mov
xchg
ss
test
mov
mov
cld
roll
fdivs
test
aam
test
inc
add
add
add
sldt
add
rorb
adc
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
add
movl
andl
jmp
into
iret
cmpsb
cmp
sbb
inc
cltd
or
jo
jge
jo
cld
mov
mov
pop
call
loope
and
push
iret
sti
ljmp
out
add
mov
fiaddl
jo
outsb
std
xchg
test
pop
popa
stos
or
or
xor
stos
or
cmpsl
ss
pop
into
lret
mov
xor
in
xor
iret
bsr
call
or
inc
stos
aad
or
loope
pop
hlt
pop
popf
jb
rcl
or
rep
push
lods
rol
push
std
xchg
fs
xchg
popa
pusha
sub
in
inc
xchg
dec
stc
mul
in
push
sbb
mov
fmull
add
dec
xchg
aaa
mov
adcb
mov
add
jno
add
punpcklwd
sbb
call
data16
xchg
jno
fdivrl
mov
jmp
ret
adc
call
adc
mov
cmpsb
jmp
fldl
jmp
sbb
sahf
sbb
fdivs
cwtl
sbb
sar
jmp
mov
js
bound
leave
test
and
ljmp
xchg
xchg
ret
les
sub
xchg
mov
lcall
call
sbb
and
test
jne
stos
jge
xor
popa
add
lea
stc
iret
and
xor
push
adc
push
or
jge
shlb
rcll
inc
push
jmp
push
movsb
cmpsb
ret
orb
filds
push
pusha
and
or
jg
pop
xchg
les
mov
lahf
frstor
lock
jnp
pusha
mov
sbb
mov
lods
mov
in
out
add
jb
jno
sub
shrb
enter
insb
dec
add
fdiv
and
or
andb
rorl
add
sbb
lods
xor
mov
fs
hlt
xchg
sbb
pop
xchg
lret
data16
sub
inc
mov
mov
mul
or
repz
jno
ja
jb
mov
repz
xor
cmp
push
mov
sbb
and
xchg
arpl
in
inc
fidivrl
jnp
int
sbb
cs
movl
jo
mov
je
cltd
cmpsl
cltd
aad
jp
mov
lahf
arpl
aaa
sub
insl
aas
icebp
push
les
pop
cmp
pop
add
lds
push
dec
mov
mull
xchg
bound
and
arpl
popa
pop
jge
arpl
js
enter
lods
jbe
int3
add
bnd
je
adc
sub
lea
shll
mov
mov
popa
enter
gs
xchg
repnz
les
push
rcr
xchg
loopne
repnz
push
mov
aas
btr
cmp
xchg
jg
cmpsl
dec
insl
cmpsb
push
cmpsb
mov
ss
push
jbe
adc
divl
cmpsb
lds
mov
and
outsl
and
add
test
add
xor
adc
out
cmp
aas
incb
jns
pop
adc
xlat
xchg
sub
icebp
dec
frstor
cli
ficoml
cmp
sub
sub
mov
or
mov
jp
xor
or
add
imul
ret
lret
sbb
sbb
inc
int3
cmp
pushf
clc
movl
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
movl
adc
mov
xor
sub
mov
add
movl
cmp
movl
je
movl
push
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
sub
mov
add
mov
jmp
addr16
xchg
jno
ja
dec
in
std
push
nop
adc
in
jo
lahf
jge
jo
push
lods
xor
ds
in
sub
lcall
pusha
sbb
repnz
mov
xor
daa
sub
in
push
sbb
pop
dec
enter
push
shlb
lods
xchg
ja
pop
jae
mov
loopne
sub
je
and
fwait
add
lock
lret
jns
jne
outsb
loop
shrb
insb
dec
or
sti
jle
jae
incb
aas
test
mov
inc
cmpb
xor
dec
jg
test
fiaddl
jl
andb
sahf
sub
lret
mov
jge
xor
rorl
in
mov
dec
call
shll
adc
or
jbe
dec
icebp
nop
lock
in
jns
dec
sub
mov
sub
xlat
sub
adc
inc
sbbb
jne
popa
stos
pusha
lods
flds
jg
ss
mov
mov
lods
mov
sahf
xlat
int
cmc
insl
fdivrs
outsl
push
pop
jl
sbb
mov
inc
push
sahf
dec
mov
orb
mov
push
fs
out
and
mov
mov
repz
mov
inc
cmp
adc
jnp
inc
xchg
subl
stc
push
add
insb
cmp
cmpsl
mov
xor
jp
insb
ud2
jbe
loop
mulb
test
mov
adc
dec
dec
das
jge
mov
mov
jecxz
jmp
lahf
and
sub
enter
push
and
mov
xchg
clc
mov
pop
inc
in
fildl
fwait
mov
rcrl
push
adc
add
divb
lret
mov
push
test
das
ret
mov
xor
and
mov
and
adc
mov
in
rol
xor
je
push
or
adc
mov
mov
pop
pop
adc
aas
sahf
movsl
inc
repz
stos
mov
cmp
mov
cmp
cli
mov
mov
xchg
add
mov
hlt
add
loopne
orb
xchg
imull
movsl
adc
or
cmc
cmp
dec
lcall
lret
mov
dec
lods
lret
outsb
data16
ret
and
not
xchg
push
js
lcall
repz
aas
xlat
adc
repnz
cmpsl
loope
sbb
iret
adc
arpl
mov
or
xor
imul
rclb
mov
pop
fs
inc
arpl
andb
jns
and
push
jl
cld
sarl
mov
cltd
shll
in
insb
cmpsl
shll
or
push
fs
je
mov
xor
popf
cmp
test
dec
mov
add
xchg
mov
or
sbb
aad
push
pop
pop
inc
and
aas
cmp
and
scas
xchg
fmuls
adc
xor
aad
cmc
shrb
faddl
and
add
pop
notb
icebp
fmull
dec
dec
pop
into
rolb
push
xor
jne
repnz
scas
vsubss
orl
mov
repnz
jnp
and
mov
push
xor
xorl
add
movl
cmp
movl
jb
mov
sbb
mov
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
add
sbb
add
imul
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
xor
mov
mov
jae
jg
ja
xchg
dec
pop
add
jo
lahf
jge
jo
out
mov
int
pop
mov
in
cmp
ret
push
dec
ret
ds
jge
les
sub
shrl
out
lods
push
ss
pop
repnz
sbb
popa
xchg
jle
ss
insl
pop
cmp
lret
into
das
cmpsl
and
imul
dec
sub
mov
adc
sbb
je
adc
pop
negb
lods
sub
idiv
fs
gs
inc
fistpll
xor
fstp
inc
ret
jmp
adc
mov
and
rol
popa
insl
mov
mov
repnz
lret
jp
cli
test
xchg
and
or
mov
jae
xor
aas
push
mov
xor
into
lods
lock
jl
cmp
ja
mov
or
adc
sbb
sbb
cmc
cmc
lock
pop
into
inc
dec
nop
sar
fs
sub
das
pop
fildl
mov
lods
out
test
or
push
js
fwait
adc
faddp
xlat
xor
jno
outsl
adc
testl
test
sub
inc
int3
xchg
pushl
and
sti
cmp
pop
xchg
dec
and
adc
push
jo
xchg
jp
adc
mov
scas
pop
mov
subb
push
mov
je
popa
gs
pop
iret
and
mov
adc
adc
sbb
push
jle
cmp
loope
sbb
aaa
add
fsts
adcb
in
dec
push
js
sbb
jmp
bound
fistps
push
jecxz
jbe
inc
pushf
jbe
je
push
lcall
mov
nop
or
iret
adc
lods
test
das
fdivl
js
outsb
mov
pusha
inc
mov
sub
pop
jl
sbbl
sub
cli
lea
mov
inc
fsub
adc
xchg
je
sub
cs
lret
sbb
cmpsb
cwtl
faddl
mov
fneni(8087
test
in
stc
adc
xor
notb
adc
sbb
mov
xor
mov
xor
pop
cmp
test
push
sahf
in
cmc
jl
add
adc
mov
inc
push
stc
imul
and
inc
xchg
cld
or
mov
inc
aas
sbb
mov
out
push
inc
fidivrs
rclb
mov
mov
test
or
lahf
mov
loope
pop
mov
adc
ret
jnp
sbb
aad
cli
adc
mov
fdivrs
jns
adc
push
fbstp
hlt
cwtl
sub
sarl
imul
xchg
std
inc
sub
jne
mov
xor
mov
or
xchg
inc
push
or
pop
jmp
outsb
bound
add
push
daa
lcall
arpl
push
jmp
push
mov
sub
cmp
sub
cmc
loope
lea
nop
out
sbb
stc
pop
cmp
lods
jle
dec
imul
push
jb
inc
loope
in
leave
sub
cld
cmp
pop
cmp
xchg
loop
dec
incb
mov
adcb
ss
pop
test
xlat
rclb
cmp
jecxz
or
repz
jl
xlat
in
movsl
dec
add
jmp
shlb
sub
lret
adc
mov
jo
jge
jo
rcrl
loope
mov
aad
mov
add
mov
adc
mov
mov
aad
or
add
or
xlat
stos
cmpsl
fwait
mov
cmp
pop
sub
jbe
push
add
insb
or
aaa
cld
daa
sbb
icebp
xchg
arpl
pop
sub
xchg
mov
jo
sub
sub
nop
popl
movsl
cmp
popa
cmc
out
jb
cs
aam
sbb
nop
pop
insb
push
push
mov
pop
cmp
add
sbb
inc
loope
fs
dec
aam
pop
adc
fs
xor
dec
enter
sbb
sub
repz
mov
push
in
and
pop
jmp
add
xor
and
add
outsl
stos
cmc
add
je
adc
mov
hlt
jecxz
adc
lock
cltd
mov
stos
in
sbb
inc
test
pop
push
ja
cli
xchg
pop
jo
clc
and
stos
cmp
mov
out
jl
dec
adc
push
push
or
lea
adc
aad
bound
xor
and
testb
leave
test
pop
jne
fisttpl
mov
push
xlat
jge
ret
mov
ret
cwtl
mov
jecxz
popf
stos
repz
lods
sbb
jbe
lock
inc
movsl
dec
push
pop
jecxz
insl
icebp
push
adc
dec
outsl
imul
test
loop
inc
ljmp
out
pop
push
rolb
inc
in
sub
shl
push
scas
sub
xchg
int3
les
sub
aam
inc
push
mov
or
mov
in
aad
in
push
dec
sub
data16
jmp
cwtl
and
lahf
int3
pop
xor
enter
pop
es
sub
inc
jmp
lret
lock
pop
lea
fsqrt
jmp
inc
mov
out
sbb
fisubrl
sbb
iret
mov
cwtl
xchg
pop
dec
ja
into
ljmp
sti
xor
or
xor
xchg
mov
jae
rcll
add
mov
xchg
push
in
fcomps
push
divb
out
xchg
adc
mov
test
test
mov
adc
sub
jmp
fsubrl
ret
ja
out
jnp
xor
insb
sbb
add
sahf
and
sub
test
lea
sub
cli
or
cs
lds
mov
xchg
jnp
cmp
ss
cmc
cmpsb
pushf
insl
mov
cwtl
sbb
pop
mov
dec
push
jo
mov
jno
push
pusha
xchg
and
imul
rclb
pop
insl
jae
ret
daa
and
mov
adc
or
dec
ljmp
xchg
push
fmuls
leave
push
repz
frstor
push
xchg
ja
mov
xchg
inc
out
ret
sbb
mov
cmp
rcll
icebp
jb
lret
dec
test
loopne
jb
pop
or
sub
adc
sub
imul
adcb
mov
test
inc
inc
lea
lcall
pop
shrb
es
mov
cmp
adc
xchg
sub
jp
neg
aas
adc
fimull
mul
ljmp
xchg
add
pop
mov
cli
inc
or
add
stos
test
xlat
mov
mov
sub
cmp
ja
mov
jmp
mov
jmp
cmp
mov
loope
loop
pop
mov
jo
lahf
jge
jo
dec
sar
adc
inc
mov
xor
jae
inc
mov
ds
cli
shrl
les
pop
and
aas
lds
pop
imul
sbb
adc
fisubrs
mov
gs
sbb
mov
outsl
mov
in
sbb
enter
imul
je
enter
fildl
xchg
mov
adc
out
aad
and
xchg
mov
sbb
xchg
jbe
rorb
addb
mov
mov
icebp
or
call
pop
loopne
push
sub
push
imul
fs
mov
dec
cmc
leave
jae
mov
mov
negb
pop
idiv
loopne
add
in
sbb
int
stos
mov
popa
idivb
push
cs
shl
pop
enter
mov
adc
dec
mov
out
cmp
push
cmc
and
outsl
adc
cmpsb
mov
push
jl
jo
pop
popa
enter
jne
xor
call
jne
in
push
xchg
iret
mov
cmp
nop
clc
imulb
pop
mov
stc
pop
std
mov
xor
sub
sub
pop
shl
or
leave
jnp
pop
and
loopne
add
cmp
dec
sub
stc
ss
clc
mov
inc
dec
adc
mov
inc
dec
stos
sahf
xchg
pop
sbb
ja
inc
pushf
inc
sub
into
jecxz
mov
mov
fs
pop
loop
lret
pop
or
imul
cmp
sub
ja
mov
out
loop
pop
dec
sbb
loopne
fcomps
scas
stc
push
sti
xlat
mov
add
dec
pop
repnz
push
push
mov
test
push
pusha
mov
stos
scas
jl
mov
jb
dec
outsl
inc
xchg
aaa
andl
and
mov
std
sub
xchg
cmpsl
add
rclb
cmpb
push
adc
lret
sub
push
jns
shrl
xchg
sub
in
jecxz
push
fiaddl
push
jne
mov
mov
inc
js
mov
scas
inc
das
sub
pusha
iret
mov
sub
xor
xchg
cmc
inc
test
leave
jno
loopne
dec
popa
xchg
btr
outsl
mov
loope
stos
cmp
bnd
or
pop
dec
push
outsl
out
enter
or
cld
or
push
inc
fimull
enter
dec
dec
or
arpl
scas
pop
xchg
fs
pop
jecxz
fwait
push
mov
cmpb
mov
pusha
xchg
icebp
sbb
test
sti
mov
fwait
add
add
sbb
adc
xchg
outsl
dec
lcall
push
pop
pushf
stos
xchg
sti
je
xchg
pushf
mov
or
stos
mov
xorb
push
jo
out
xchg
faddl
mov
pop
inc
imul
lds
mov
jno
jns
hlt
cmp
or
inc
scas
loop
jecxz
jp
shlb
int3
cmp
jle
cmp
inc
cmpsb
cmp
loop
lock
fnstenv
int
lods
cmp
ret
push
scas
lahf
or
mov
inc
sbb
les
mov
inc
js
je
sti
push
xchg
mov
mov
inc
loop
ret
outsb
out
loop
arpl
insl
add
lea
xor
mov
outsb
jl
adc
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
xchg
fcomi
push
jb
mov
shlb
insb
pusha
xorl
jge
jo
outsb
inc
mov
les
lock
mov
lahf
xor
fnsave
shll
sbb
xchg
jns
jmp
push
pop
pop
and
in
jbe
xor
mov
or
mov
out
scas
jno
mov
sbb
shrb
iret
sbb
in
mov
inc
mov
movsb
mov
add
mov
sub
adc
mov
push
test
insb
sbb
imul
fsubp
dec
movsb
sub
out
rorb
sbb
mov
cli
lahf
movl
push
das
add
cmc
pop
roll
insb
push
fidivl
cwtl
jne
mov
sarl
fisubrl
outsb
dec
hlt
fimuls
xlat
cmc
pop
inc
dec
test
fwait
ret
xchg
and
add
jp
xchg
and
into
pop
repnz
rclb
incb
pop
int3
sub
jl
rcr
mov
mov
std
adc
and
push
and
lods
add
jne
les
inc
addl
les
je
movsl
dec
hlt
xchg
int3
jle
adc
lods
pop
inc
dec
outsb
lret
inc
fistps
pushl
test
mov
push
sbbb
sahf
shr
pop
clc
lretw
inc
xchg
scas
mov
adc
sbb
out
cmp
nop
push
fwait
cltd
jbe
nop
sbb
mov
lds
push
pop
jbe
push
test
xchg
mov
adc
fimull
xchg
ss
int
mov
mov
shl
stos
pop
sub
mov
inc
mov
aaa
cmp
inc
das
dec
int3
lods
shl
pop
outsl
addb
xor
in
add
mov
icebp
aas
test
ftst
dec
mov
pop
fidivs
sbb
out
lds
xchg
imul
lret
inc
mov
push
mov
sbb
jp
sub
div
insb
popf
fdivl
int3
fcompl
ljmp
and
and
clc
sbbl
cmp
out
sub
lods
inc
inc
out
js
into
adc
mov
popa
mov
mov
sub
in
jecxz
lea
mov
ja
imul
mov
adc
sub
jecxz
js
push
loopne
xor
lds
lcall
push
mov
aas
fbstp
subl
jbe
out
cs
push
pop
add
test
cwtl
add
cmp
push
jp
dec
mov
bound
inc
cmpsb
cmp
ficoms
std
outsl
cltd
or
cltd
mov
lods
mov
cmc
adcl
add
loopne
push
xchg
ljmp
repnz
fs
adc
aaa
xor
daa
mov
mov
xor
lret
arpl
pusha
sbb
sub
imul
add
dec
lock
xor
jmp
enter
inc
mov
outsb
or
add
cltd
test
cmp
lds
jmp
movsb
ja
xchg
sub
mov
push
push
hlt
and
rol
lret
je
cmp
adc
jo
in
mov
push
stos
pop
jge
mov
sbb
pop
cmpsb
repz
jg
int3
or
add
push
imul
xchg
jbe
iret
lret
sti
inc
jl
lods
in
and
inc
mov
ss
repnz
sbb
and
shrl
pop
mov
lock
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
xchg
dec
inc
inc
inc
push
xchg
dec
fdivs
adc
or
jo
lahf
jge
jo
xorb
pop
mul
cmovnp
add
jne
jne
jne
adc
dec
xchg
out
sbb
add
repz
dec
adcl
out
movb
lahf
add
dec
call
inc
sbb
sbb
jge
add
adc
mov
andl
inc
pop
stc
into
cli
cmp
cwtl
dec
mov
hlt
mov
sub
int3
fsub
in
mov
and
cmp
sbb
aaa
mov
dec
xlat
push
mov
aaa
test
jl
ljmp
es
push
mov
cmp
push
mov
notl
mov
rcrl
jle
jo
jmp
hlt
lods
movsl
xchg
xchg
push
mov
cmp
mov
pop
sub
sti
sarl
mov
daa
push
cmp
push
mov
inc
pushf
in
adc
shrl
add
push
pop
faddl
into
scas
out
inc
cltd
xchg
sub
das
mov
mov
std
inc
dec
cld
inc
jmp
stos
enter
and
xor
adc
sahf
xor
push
pop
jns
or
lret
adc
xor
sub
mov
data16
mov
pop
mov
jno
lods
popf
or
pop
lds
js
xlat
dec
lcall
mov
inc
dec
daa
repnz
sbb
xchg
insl
dec
pop
mov
ret
sub
arpl
mov
xor
out
popf
int
repnz
cwtl
jmp
or
cmp
imul
push
cs
ss
jle
xchg
jbe
imul
stos
jns
adc
out
push
sub
fiaddl
shl
pop
into
sub
pushf
mov
adc
and
pop
out
out
push
inc
shlb
lods
int
dec
mov
pop
mov
aad
cld
mov
adc
stos
mov
in
jne
clc
sbb
ds
dec
mov
mov
cmpl
cmp
scas
cmpsb
mov
add
lret
jecxz
push
mov
ljmp
add
push
mov
mov
pop
xchg
pop
dec
cmp
mov
ret
pop
out
je
sbb
mov
in
pop
pop
dec
push
lret
fwait
sub
in
mov
out
dec
xor
dec
adc
mov
xor
xchg
fnsetpm(287
stos
sbb
int3
push
adc
mov
push
mov
das
inc
sub
pushl
mov
add
mov
mov
push
jge
jp
adc
jp
in
lock
sbb
push
aad
jnp
test
orl
popa
pop
rol
ret
mov
mov
out
leave
aas
add
jmp
pop
sti
movsl
xor
ja
fcmovne
inc
cmp
enter
movsb
jns
fsts
lcall
test
adc
out
out
jmp
cmp
pop
xchg
fcoml
mov
push
inc
inc
fld
es
ret
sub
inc
cmpsb
xor
fidivrl
subb
cltd
pop
ret
ja
add
and
shrl
addr16
in
out
ret
leave
in
sbb
inc
adc
pop
cld
cli
xor
jle
stc
mov
jb
and
mov
out
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
lcall
out
mov
or
mov
lahf
jge
jo
and
sbb
testb
mov
push
insl
dec
negl
shlb
mov
sub
cwtl
cmpsb
imul
call
cli
push
cmpsb
ficoml
test
cli
sub
fcoms
push
lret
in
aam
aas
stos
test
jmp
mov
mov
icebp
das
pop
sti
push
lahf
cmp
pusha
imul
sbb
adc
jbe
in
jae
sbb
cmc
leave
insl
pop
clc
mov
add
rorb
fcmove
paddusb
push
xchg
in
mov
xor
fsts
and
aam
inc
insl
rolb
ja
sbb
and
mov
jnp
repnz
addl
add
loopne
or
aaa
mov
inc
mov
arpl
inc
pop
ficoms
push
lods
shrl
addr16
push
in
ss
lahf
jle
cmpsl
divl
rcrb
dec
pop
jge
push
lret
jp
jmp
push
fwait
dec
test
push
cmp
mov
push
xchg
push
mov
leave
xor
sub
fistpl
inc
fnsave
mov
xchg
adc
inc
bound
mov
cld
cmpsb
xchg
cld
call
xlat
popf
shr
and
push
sbb
loope
cmp
push
adc
test
loopne
dec
pop
inc
cmp
fwait
jb
or
int
sahf
cmp
jl
jb
daa
mov
mov
mov
push
popf
das
pop
sub
push
inc
jle
jge
mov
push
cwtl
push
and
lock
cmp
outsb
add
stc
jmp
inc
xchg
gs
sbb
dec
lcall
cmp
xchg
in
aad
lret
shrl
addr16
inc
sahf
test
push
into
pushl
in
mov
pop
stos
cli
pop
stc
cmpsb
fbstp
dec
mov
cmp
aam
ds
push
add
add
mov
push
mov
repnz
jl
mov
ljmp
fidivl
and
fnsave
sub
scas
cmc
jnp
mov
inc
aad
mov
fwait
lds
faddl
and
das
cld
add
mov
ja
in
pop
leave
sbb
pop
xchg
sbb
je
pop
int
mov
xlat
pop
mov
lcall
mov
sbb
sbb
dec
lods
mov
outsl
pushf
pop
lods
pop
cmp
add
and
les
fwait
pop
sbb
push
int3
sahf
add
shlb
divl
gs
add
das
add
fcmovne
dec
jbe
mov
loop
mov
test
xchg
jl
aam
adc
inc
arpl
mov
add
push
jb
cs
bound
data16
jmp
sbb
jge
and
dec
pop
mov
jne
add
push
sub
xlat
pop
pop
inc
pushl
add
rcll
mov
adcl
mov
subl
jae
out
mov
and
xchg
inc
test
dec
testl
sbb
movsl
loop
jno
adc
sub
inc
or
in
lock
cmpsb
idivl
enter
mov
pop
mov
arpl
cmp
push
fnstenv
psrlw
mov
aas
xor
and
dec
pop
leave
das
subl
rorb
fcompl
rolb
push
in
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xchg
dec
push
adc
push
xchg
dec
lock
pop
mov
mov
lahf
jge
jo
arpl
pop
popa
or
sahf
pusha
inc
add
and
mov
mov
mov
sbb
popf
leave
cwtl
jg
or
into
mov
lods
arpl
pusha
ja
add
lcall
popf
add
xchg
sub
sbb
push
lret
jno
pop
imul
in
fidivs
cwtl
daa
call
shll
dec
xchg
or
in
aam
pop
sahf
mov
xchg
les
lods
xchg
inc
sbb
sahf
std
stos
sti
mov
mulb
shll
pop
pop
pop
stos
mov
mov
subl
leave
or
adc
in
movl
sbbb
sahf
aam
int
scas
adc
ds
jnp
std
nop
repz
dec
adc
rol
das
push
sbb
ret
mov
mov
rcrb
mov
or
pop
call
pop
xchg
mov
repnz
pusha
cmpsb
add
addr16
dec
loop
jl
mov
sbb
inc
mov
popa
ss
mov
mov
orb
jns
sbb
cmpsl
rorb
mov
mov
ss
pushf
out
lcall
subl
sub
mov
and
mov
lahf
call
mov
pop
cmp
cli
stos
mov
in
subb
and
in
inc
scas
adc
fmuls
xchg
inc
popl
dec
icebp
mov
jbe
icebp
dec
ljmp
aas
inc
orl
imul
dec
enter
mov
dec
sub
je
popf
out
stos
cmp
jo
adc
or
xor
xor
mov
xor
movsl
fdivl
lods
push
fptan
stos
mov
jge
push
sbb
cmp
xor
out
mov
pushf
outsb
pop
loope
hlt
xchg
in
scas
jno
sbb
mov
andl
dec
out
mov
jmp
arpl
mov
cltd
dec
in
push
call
out
inc
test
lock
fwait
loopne
rolb
pop
movsl
mov
aam
fstps
inc
maskmovq
idivl
mov
dec
into
jmp
pop
sbb
fistl
popf
pop
lahf
sahf
jne
out
dec
in
call
and
adc
mov
inc
imul
roll
mul
fwait
ss
xchg
cmp
lods
and
push
scas
int
mov
fcomp
push
sub
mov
scas
mov
jns
adc
leave
xchg
jle
outsl
fidivl
push
das
add
jae
out
enter
mov
scas
icebp
loopne
cli
sub
push
jmp
sub
add
mov
mov
in
mov
push
mov
or
stc
fsubl
arpl
lret
mov
neg
push
add
imul
mov
andl
xor
cmp
jmp
or
stc
in
in
int3
or
bound
sbb
in
sbb
imul
ret
scas
and
add
mov
xchg
icebp
ss
adc
sti
mov
clc
add
mov
mov
mov
mov
xor
jmp
sbb
pop
pop
pop
pop
sbb
adc
and
scas
in
xchg
jo
lahf
jge
jo
jle
fists
adc
jmp
add
and
nop
jns
pop
cli
repz
lock
push
or
push
inc
sbb
add
stos
push
mov
fidivl
in
mov
call
inc
and
jo
jns
add
jg
mulps
sub
adc
xchg
pusha
mov
test
aad
jnp
popf
loopne
fists
out
rol
rep
push
or
sub
jnp
fdivl
cmp
push
lds
xor
jp
and
jle
lods
mov
or
cmp
and
cmpsl
mov
mov
imul
pop
cltd
cmpsb
in
mov
mov
imul
and
out
or
in
aam
movsb
inc
pop
xchg
jg
int
clc
enter
maskmovq
testl
jno
push
adc
jge
inc
adc
inc
and
xchg
rcll
out
pop
mov
push
cmp
jp
sahf
xchg
cmpsb
pop
inc
add
lods
test
lgs
pushf
mov
pop
push
rolb
jecxz
mov
sbb
mov
jb
daa
std
std
jle
out
lcall
mov
sub
cwtl
push
push
nop
loope
stc
and
inc
mov
pop
fistpll
cmp
cli
push
js
push
pop
xchg
lods
mov
aam
jle
jo
ficoms
das
stos
xchg
xchg
xchg
mov
mov
push
mov
lea
and
push
cmp
add
insl
outsb
lret
mov
sbb
and
mov
pop
out
or
pop
push
or
pop
adc
repnz
adc
cs
hlt
frstor
and
scas
cmp
cmp
push
scas
mov
sbb
push
subl
div
mov
adc
cli
sub
sub
je
mov
in
rolb
bound
aas
loop
cmpsb
pop
popa
jnp
outsb
add
inc
pushf
test
cs
or
inc
pusha
cli
lods
push
inc
loopne
daa
jns
push
and
lock
add
rcrb
andl
mov
loope
in
mov
sbb
iret
sbb
scas
fidivs
int3
pusha
xor
int3
mov
fisttps
mov
add
jg
fiadds
adc
lods
or
into
pop
push
test
xchg
xor
xchg
in
sub
lahf
imul
out
call
repnz
mov
lods
mov
pop
xchg
clc
fldcw
sbb
jge
fidivl
push
adc
fs
cs
mov
xor
jle
outsl
sub
pop
push
adc
repnz
xlat
popa
rorb
sbb
cs
ret
jae
loope
jns
push
lret
stc
imull
jnp
scas
jbe
shlb
stc
das
jae
add
hlt
push
fsubrs
add
and
sub
mov
call
sub
jmp
or
imul
ljmp
and
into
aam
fstps
mov
mov
scas
push
or
js
mov
clc
lahf
adc
iret
pop
lret
pop
pop
fistl
stos
stc
fdivs
clc
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jmp
mov
popa
jbe
xchg
or
xor
or
jo
int
xor
aas
dec
subb
fnsave
lock
xor
pop
lds
arpl
dec
and
xchg
or
fnstsw
icebp
loopne
out
aam
jno
mov
xchg
insb
cmp
jo
push
mov
xchg
or
stc
adc
jae
lods
cli
pop
jge
pop
dec
mov
cwtl
mov
ss
push
mov
daa
aas
jge
cli
pop
jecxz
jmp
leave
mov
test
add
sub
mov
ja
bound
jne
cs
mov
pop
or
shrd
fwait
xchg
loop
orl
xchg
cmp
les
jne
inc
inc
xor
test
popf
sarb
lock
mov
imul
adcl
mov
push
pop
add
movl
sti
shrb
sbb
int
lods
jb
es
jge
push
mov
enter
out
icebp
pop
add
iret
fsubrs
mov
sub
push
lahf
jae
dec
cmp
stc
nop
jmp
outsb
jl
push
xor
stos
aam
xchg
or
imul
icebp
mov
rolb
je
cli
cltd
xor
sbb
or
inc
sbb
add
lahf
or
sbb
inc
push
dec
stos
jg
push
pop
mov
call
js
xchg
ret
cmp
sbb
test
ret
mov
mov
cmp
je
jo
out
popf
repnz
test
stos
sbb
ret
std
mov
mov
mov
nop
fistl
popf
stos
call
pop
xlat
sbbl
fwait
and
loopne
loopne
out
cmp
lds
repz
mov
movl
pop
int3
in
fs
pop
push
jp
jmp
xchg
fnstenv
leave
bound
bound
imul
outsl
dec
imul
adc
fsubl
repnz
jl
outsb
imul
pusha
jbe
int3
out
aaa
bnd
cltd
ret
lret
mov
lods
sub
in
push
mov
mov
sub
or
pop
mov
adcl
mov
cwtl
and
mov
adc
sbb
push
insb
xchg
add
int3
ljmp
gs
jl
jl
jg
mov
cmp
and
pop
mov
fcmovne
popf
mov
dec
in
jne
sbbb
pop
jp
and
adc
xchg
aas
pop
fsts
inc
push
scas
je
outsl
je
int
push
loop
pop
ss
jge
push
mov
jl
or
xchg
xchg
push
jnp
outsl
cmpsb
fldl
pop
in
pusha
fisttps
pop
aas
mov
xor
mov
mov
in
aad
adc
in
xor
pushw
push
mov
sbb
add
push
ss
xor
mov
lahf
mov
mov
test
scas
or
mov
frstor
mov
xchg
push
mov
and
daa
fwait
fwait
aam
and
jbe
out
cmpsl
decb
adc
adc
daa
jnp
lcall
in
out
into
cli
pusha
aas
insl
jbe
mov
mov
xor
add
imul
mov
xor
add
jmp
xor
out
icebp
xor
cmp
lods
les
xchg
punpckhdq
jge
jo
adcb
push
in
add
test
mov
lret
idivb
outsb
dec
sti
push
or
adc
sbb
cmpsl
dec
cmpb
test
lea
std
jbe
sbb
dec
mov
inc
insb
ja
nop
mov
mov
clc
mov
dec
dec
lret
out
add
cld
adc
cwtl
mov
arpl
sbb
int
adc
mov
jb
push
jns
popf
dec
in
call
stos
outsb
popa
int3
lock
stos
or
faddp
mov
cltd
adc
in
jb
xchg
mov
adc
adc
iret
loopne
mov
test
cmpsl
push
sti
xor
push
test
jge
lods
adc
addr16
aas
outsl
fdivrl
push
das
dec
std
mov
enter
sbb
pop
cmp
loop
or
and
into
add
sahf
decb
mov
repz
popf
mov
sub
adc
enter
pop
adc
mov
and
testb
pusha
imul
mov
cltd
and
out
push
pop
outsb
fadd
mov
or
xor
push
jecxz
cmp
cmp
mov
negb
ss
lret
bnd
xchg
mov
cmc
scas
add
pop
cli
and
cs
push
icebp
jae
add
mov
and
mov
lods
popa
xchg
leave
push
xor
mov
inc
mov
inc
shrl
sub
ret
js
pop
jb
sti
and
sub
notb
mov
and
jno
sub
in
call
lret
jmp
ljmp
imul
lret
call
mov
pop
pop
lock
sbb
jne
ljmp
mov
push
push
or
xchg
mov
jge
pop
add
or
shl
out
adc
cmp
leave
test
or
sbb
cmp
into
ffree
inc
enter
xchg
outsl
cmp
popf
addb
ret
add
pop
in
dec
je
bound
stos
cwtl
mov
xor
mov
push
pop
lahf
cmp
adc
sub
lods
lcall
lret
add
pop
adc
jge
inc
sub
adc
imul
jbe
outsl
mov
cmpl
imul
mov
rcll
dec
inc
icebp
bound
cwtl
xchg
mov
mov
test
rcrl
lds
cwtl
call
cmp
outsb
scas
enter
push
rorb
jnp
stos
dec
xchg
inc
xchg
add
lds
mov
lret
and
call
xor
popa
outsb
testl
xor
cmpsb
icebp
cld
insl
or
scas
ljmp
loop
xor
pop
cwtl
je
xor
mov
dec
rcrb
sub
add
lods
sbb
out
or
xor
jp
fcmovb
lahf
jge
icebp
daa
fdivrs
push
mov
daa
mov
sbb
mov
arpl
enter
hlt
test
push
dec
add
lret
or
stos
out
dec
mov
adc
and
xor
mov
sahf
cwtl
ds
repz
xchg
cmc
es
mov
lock
data16
inc
inc
cmpsb
mov
mov
shll
cmp
clc
mov
xor
mov
sub
jmp
out
inc
push
jno
ljmp
lea
adc
cltd
jo
lahf
jge
jo
mov
mov
lret
dec
mov
and
fcompl
inc
imul
jnp
daa
outsl
js
mov
cld
sub
and
rcrl
xchg
jbe
inc
pop
sbb
add
in
xchg
ds
jno
dec
dec
sbb
dec
xchg
add
fbstp
bound
sar
lret
push
pusha
pop
scas
sub
fmull
ss
test
cmp
mov
rorb
dec
cli
test
or
out
sti
push
in
add
aad
adc
sub
std
inc
xor
adc
push
mov
sub
ret
aam
inc
dec
hlt
cmp
mov
push
addb
lahf
ret
cmpsl
mov
aam
mov
fs
movsl
dec
pop
bound
loopne
fimuls
pop
xchg
nop
ret
dec
gs
push
stos
enter
xchg
or
mov
fmul
out
in
mov
sbb
add
mov
add
mov
sbb
cltd
cmp
std
jl
push
mov
orl
jns
add
and
in
enter
and
and
xchg
push
or
xor
shl
int
xchg
stos
or
insl
jbe
shll
or
jg
mov
cmp
lods
mov
and
xchg
mov
outsb
test
push
inc
inc
push
mov
and
out
mov
repz
xor
cld
mov
cmp
gs
sbb
or
jne
popa
jmp
imul
int3
int3
ss
nop
sahf
movsl
push
lret
mov
add
cs
dec
ret
mov
das
shl
lcall
sbb
xlat
cmpsl
inc
inc
adc
pushf
push
fdivp
mov
js
and
cwtl
mov
add
xchg
mov
fiaddl
nop
add
add
fchs
ss
jbe
mov
out
ret
mov
ret
dec
jae
dec
sub
shll
add
cmc
adc
push
out
dec
jg
fdivr
and
cmp
adc
lahf
mov
mov
stc
fdivl
mov
cmp
sbb
lret
lock
pop
lahf
fcomip
mov
pop
and
sbb
fnstcw
mov
lea
popa
dec
call
cmp
jbe
int
cvtdq2ps
xchg
scas
push
xchg
ficoms
pop
cmp
scas
shrb
daa
in
movl
mov
sti
xor
loop
js
mov
inc
jle
cmc
daa
ret
ljmp
pop
inc
jae
mov
xor
daa
xchg
xchg
mov
mov
mov
fsubl
lret
insb
add
pop
test
mov
cs
push
fwait
xchg
jp
mov
enter
das
call
inc
dec
cltd
sbb
out
mov
xor
sub
ljmp
cmp
mov
jb
pop
aam
dec
out
jge
data16
mov
pusha
ljmp
mov
sbb
orb
scas
and
call
lahf
push
aas
mov
stos
ret
out
xchg
cli
sub
shll
push
ja
jno
inc
sub
jmp
sbb
xchg
dec
xchg
jge
outsb
cmpsb
mov
lock
push
pop
dec
jns
imul
neg
stos
xchg
hlt
fadd
push
jns
jnp
das
xor
sti
rcll
and
cmpl
lock
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
orl
push
sbbl
call
andl
test
jne
xor
movl
jmp
adcl
push
call
sbbl
test
movl
je
call
cltd
movl
cmp
jne
movl
cmp
jne
push
push
adcl
push
push
push
push
push
xorl
push
orl
call
movl
jmp
push
call
test
je
sbbl
push
andl
call
movl
jmp
push
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
movl
lea
adc
mov
adcl
lea
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
or
mov
or
mov
mov
push
mov
subl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
jmp
mov
add
mov
mov
mov
movl
cmp
mov
movl
je
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
xor
andl
add
imul
mov
movl
jmp
sbb
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
or
xor
sub
add
mov
mov
mov
xor
add
movl
cmp
jne
subl
pushl
andl
pushl
adcl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
adc
mov
mov
xorl
push
push
mov
xor
not
push
mov
add
sbb
jmp
sub
gs
mov
fstps
int3
punpckhbw
jo
gs
testb
push
pusha
imul
dec
inc
xchg
mov
insl
xchg
orb
daa
mov
adc
addr16
int3
xchg
adc
stc
insb
or
mov
and
mov
mov
incb
mov
adc
pop
and
add
mov
imul
jae
adc
movsb
pop
dec
push
out
lret
add
arpl
negb
cmc
xchg
mov
ss
loop
pop
mov
pop
das
repnz
scas
xorb
lods
fsubrl
push
mov
pushf
mov
mov
ror
pushl
out
pop
or
fistps
sub
cmp
rcrl
pusha
inc
pop
jae
sub
cld
pop
int3
cmp
dec
mov
scas
dec
int
iret
in
xchg
inc
push
adc
add
lret
stc
mov
mov
orb
lcall
add
fisubrl
mov
xor
in
inc
or
inc
push
insl
mov
sbb
cmp
call
popf
cs
fcomip
dec
pusha
stos
pushf
clc
sbb
jle
iret
js
jbe
xor
cmp
insl
inc
fmull
cld
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
imul
mov
sub
mov
and
mov
sbb
xor
add
mov
jmp
icebp
ja
pop
inc
scas
icebp
jno
push
inc
movsl
sub
pushf
cmp
jo
dec
orl
pop
mov
test
mov
push
cltd
or
adc
fnstsw
jne
loop
clc
mov
in
mov
inc
sbb
je
or
mov
popa
loopne
dec
leave
in
leave
loop
jecxz
pop
xchg
daa
je
xchg
dec
mov
jge
ret
xchg
or
shrb
shlb
out
mov
jecxz
push
movsb
fisubs
sub
jl
xor
std
hlt
aad
add
push
sub
push
jae
je
jge
ret
dec
push
push
js
dec
out
loop
clc
imul
test
xchg
leave
int3
mov
loope
insl
sbb
inc
roll
jns
jge
push
cmpsl
sub
sbb
cmp
and
stos
cmp
sbbb
pavgb
xchg
dec
leave
cmp
cmp
dec
jl
xor
add
mov
imul
xlat
sbb
jmp
out
sahf
mov
test
inc
sub
sub
cmpsl
mov
dec
push
fimull
and
outsb
data16
add
cld
cld
push
push
mov
test
add
lea
mov
jmp
rorl
sbb
adc
mov
jo
mov
aad
fwait
rol
push
movsl
stos
fdivl
xor
or
pop
jbe
js
subl
test
inc
cmp
xchg
sub
jl
cmpb
call
add
shl
dec
test
or
jo
cmpsb
das
xchg
or
adc
xor
je
imul
push
fistps
nop
stos
and
or
and
xchg
int
les
push
cli
adc
pushw
popf
push
outsl
gs
dec
cmpsl
std
nop
data16
addr16
pop
or
stc
xchg
and
in
cmp
lahf
add
imull
in
gs
pop
aad
dec
ss
out
dec
imul
scas
cld
sub
movsl
ficoml
in
and
mov
ret
sbbb
mov
andb
mov
dec
insl
leave
fwait
aad
xchg
js
sub
test
shr
and
iret
outsb
outsl
pop
mov
mov
pop
bnd
cmpsl
mov
mov
popf
in
jne
cld
push
movsl
nop
cmp
inc
xchg
orb
add
sbb
mov
xchg
jno
and
out
mov
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
neg
mov
add
xor
add
sub
mov
mov
adc
mov
mov
adcl
jmp
cmp
in
fcomi
jecxz
icebp
xor
iret
cmpsb
dec
inc
mov
push
mov
jo
dec
out
cld
sub
fsubrs
ja
cs
ficoms
jb
and
add
add
dec
loop
cs
mov
push
inc
out
cmpsl
leave
sub
test
negb
pop
mov
int3
pop
xchg
xchg
aam
lds
push
imul
fadds
jne
mov
cmc
mov
xchg
sahf
jne
pusha
loopne
imul
sub
movsl
mov
pop
dec
out
stos
sub
mov
pop
cmpsl
mov
mov
inc
add
push
cwtl
test
cmp
mov
jno
mov
inc
adc
lcall
dec
bound
int
dec
in
ds
jne
rolb
lcall
push
xchg
pavgb
xor
stos
push
mov
cld
mov
pop
mov
mov
leave
fs
push
cmc
test
ret
popa
jmp
sub
jecxz
mov
pop
add
xor
xchg
push
cld
setg
cmp
jno
sbb
imulb
push
fidivl
call
dec
xchg
adc
pusha
leave
adc
pop
sbb
pop
les
pop
add
sbbb
daa
fmull
jmp
add
and
loop
jmp
imul
jmp
push
add
mov
xorl
movzwl
add
neg
movl
sbb
mov
mov
sbb
mov
xorl
xor
andl
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movzbl
adc
mov
xorl
mov
andl
xor
notl
add
movl
cmp
movl
jmp
fistpl
shlb
sub
in
mov
jo
sub
sub
cmp
lods
cmp
cmpsb
push
inc
push
add
pop
pop
ljmp
imul
arpl
rcr
imul
lods
ret
cmpsb
sbb
pop
add
adc
nop
fcmovbe
cmp
xchg
in
adc
fnstenv
mov
push
test
into
inc
xchg
fisubrs
cli
or
icebp
xor
repz
push
sub
ss
out
xchg
ljmp
ja
loop
mov
mov
add
lock
or
adc
cld
xchg
movsb
jg
pop
aas
xor
sub
inc
enter
cwtl
push
sbb
dec
cmp
imul
pop
nop
sub
dec
and
out
pop
cmp
or
dec
loop
add
xchg
mov
add
cmp
add
push
mov
sbb
int
pop
sub
push
push
lock
shl
test
sub
add
repz
in
dec
xchg
cwtl
sub
xor
xchg
push
mov
fnstcw
stc
pop
adc
adc
mov
adc
stos
and
pop
iret
fsub
insl
outsb
clc
loope
xchg
inc
jne
add
mov
sbb
mov
adc
xor
add
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
jmp
or
shrb
mov
inc
pop
mov
xor
scas
jo
ret
jg
jo
jo
add
stos
insb
rcrl
mov
fisttps
or
mov
cmpl
xlat
loope
loopne
or
mov
inc
dec
je
cmp
xchg
cwtl
or
outsb
add
jae
addr16
jl
and
push
fnstenv
in
out
sbb
fxch
out
rolb
adc
jo
roll
or
sbb
fsub
mov
ret
lcall
rcl
xor
xor
shlb
das
lret
mov
clc
rorl
xchg
inc
push
jnp
lret
push
jno
daa
fs
mov
mov
mov
cmp
into
andl
jae
inc
into
fldcw
cmp
pop
ret
je
inc
cld
in
jp
outsl
xor
out
das
and
lock
scas
icebp
out
xchg
dec
sub
pusha
cmpsb
fcoms
inc
cmp
pop
push
cmpsb
xchg
pop
out
in
imul
fisttps
pop
lds
test
sbb
mov
cmp
fcmovnu
sbb
xor
xor
sub
xchg
fsubrs
mov
or
adc
mov
rorl
cld
jmp
movntps
push
rep
mov
push
jle
sub
jo
jg
jo
aam
ljmp
faddl
jb
push
out
adc
cmpsb
insb
xchg
sub
aas
cld
sbb
stos
push
sub
sub
js
es
dec
sub
push
das
fucomp
cmc
pop
sub
xchg
call
pop
push
inc
adcb
out
imul
and
or
loopne
je
push
mov
jae
adcl
push
int3
jae
dec
popa
ss
or
test
inc
sub
pop
mov
repnz
ja
sbb
push
stc
sbb
es
push
sbb
sbb
mov
inc
das
jecxz
in
pop
push
test
aam
jne
popf
mov
outsl
aaa
loope
je
shlb
js
xor
jecxz
inc
mov
jnp
or
int
les
mov
mulb
and
lods
rcll
push
insb
ret
cmp
std
mov
insl
sbb
adc
repz
stc
lods
insb
inc
fs
sbb
jns
pop
shrl
imul
fwait
addl
pop
notb
addr16
jnp
push
or
loop
mov
cmpsl
inc
jg
xor
sub
sub
mov
jmp
jmp
int3
push
icebp
xchg
icebp
je
in
pop
mov
cmp
or
jg
jo
cmpsb
xchg
jmp
xchg
leave
fimuls
jmp
or
shl
pop
in
sbb
gs
fiadds
sub
pop
dec
cmp
in
push
sub
sub
mov
xor
jnp
inc
jle
mov
fucomp
jnp
shrb
test
fstps
inc
inc
imul
add
and
fcmovnbe
or
push
nop
test
pop
scas
lcall
loopne
in
call
out
xchg
daa
test
xlat
in
push
pop
sub
into
in
cld
loope
rorb
dec
sub
sbb
xchg
xchg
ret
in
cmp
test
mov
sarb
pop
fisubrs
es
push
and
pop
sub
mov
xchg
aad
ss
xlat
lods
pop
imul
addr16
test
add
aam
enter
aam
icebp
fwait
icebp
and
push
adc
shrl
popa
test
and
mov
pop
jge
jbe
mov
test
dec
fisttps
and
add
fsubrl
push
adc
xor
add
fmull
jp
in
or
xor
inc
ret
pusha
loope
divl
lea
mov
mov
cmp
jmp
mov
enter
lea
leave
inc
inc
pop
and
stos
jo
ret
jg
jo
xor
add
sbb
pop
lods
cmp
hlt
rep
cmp
xchg
dec
cmpsb
mul
fucom
add
push
adc
stos
pop
jae
ret
aaa
gs
ret
sub
sub
sahf
aaa
pop
lds
lods
xor
sahf
lcall
xchg
pop
pop
fidivl
sbb
mov
jns
mov
pop
ljmp
xor
mov
cmc
lods
sbb
js
pop
pop
adc
jmp
mov
sbb
dec
sub
inc
iret
pop
arpl
mov
test
cmp
in
icebp
dec
cs
int3
insl
loopne
jmp
filds
xchg
in
lret
push
cmp
imul
xchg
push
dec
testw
negl
bound
cmp
pop
adc
push
or
inc
cmp
cltd
xorl
cmp
mov
cmp
pop
inc
sub
dec
call
dec
cs
bnd
lock
pop
movsl
push
pop
call
in
cwtl
nop
mov
insl
out
inc
in
lcall
mov
mov
popf
subl
mov
push
addb
cmp
insl
fsubrl
sub
lcall
add
add
add
rep
popa
fdivrs
xchg
test
push
dec
mov
jg
jo
dec
call
loope
sbb
dec
xor
pop
adcb
push
and
mov
cmpb
add
outsl
jns
cmc
sub
ds
cltd
cs
mov
pop
roll
and
push
popa
fldcw
stc
rolb
push
add
mov
mov
insl
js
pop
aad
leave
or
or
cmp
cmp
aaa
dec
inc
sub
out
enter
je
jg
aam
int
ror
sbb
movsb
mov
pop
lret
mov
lock
add
push
sub
add
ret
popl
out
imul
push
pop
mov
filds
in
sbbb
jge
xchg
dec
mov
jae
inc
mov
push
jecxz
mov
or
les
jmp
mov
lret
mov
cmp
js
mov
cmp
icebp
fs
xor
incl
inc
cmpsb
inc
aad
pop
push
stc
daa
sbbl
testb
jp
lds
call
xchg
scas
data16
mov
xchg
inc
sbb
pop
aaa
out
stc
jecxz
pop
and
mov
xor
jmp
mov
mov
xor
add
cmp
je
mov
jmp
dec
int3
cmp
mov
add
shlb
adc
ret
jg
jo
ret
inc
out
stos
cwtl
js
int3
xchg
and
sub
shrb
dec
fs
mov
mov
rcr
pop
sub
push
ljmp
dec
xchg
adc
or
adc
pushf
fstl
inc
aam
xor
push
cwtl
mov
mov
mov
repnz
test
sti
dec
mov
int
mov
inc
sub
movmskps
pushf
cmp
cmc
mov
or
insb
or
leave
clc
sarb
inc
adc
lock
out
repnz
stos
inc
out
or
ffreep
cmp
xor
nop
rcrl
pop
outsl
xor
sbb
mov
sub
sahf
mov
sub
popf
outsb
fpatan
jno
dec
mov
arpl
xchg
jnp
xchg
pop
jb
push
and
mov
mov
mov
or
xor
push
shl
xchg
add
and
and
js
xor
js
inc
xor
lods
add
ljmp
std
mov
data16
adc
pop
inc
lcall
dec
sar
popa
xor
lds
push
ficoms
loopne
xor
add
jnp
cmp
mov
add
add
ror
icebp
imul
push
add
sarl
jo
ret
jg
jo
out
fisubrl
out
cld
rcl
add
add
stos
add
push
push
loop
nop
xlat
dec
inc
or
aad
xor
ffree
mov
stos
jecxz
lret
sub
ds
mov
loope
cmpsb
pop
outsb
adc
push
aad
fmuls
lret
out
hlt
popa
pop
push
cwtl
mov
inc
xor
loopnew
ret
mov
cmp
add
cmp
push
pushf
and
cltd
xor
sbb
jne
es
aad
stc
sub
data16
dec
orb
sub
ror
add
cs
scas
jge
pop
shrb
int3
call
subb
push
push
data16
hlt
les
adc
subl
pop
shll
pop
cmc
inc
enter
mov
and
and
call
outsb
mov
mov
pop
aam
mov
ret
sub
or
iret
xor
pop
out
pop
stc
xchg
cmp
sub
testb
or
inc
daa
daa
dec
cmp
int3
lcall
aad
lock
jbe
stc
dec
in
in
or
popa
xor
idiv
lahf
bound
je
xchg
jle
inc
xchg
jno
icebp
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
jmp
pop
out
dec
mov
mov
testb
dec
pop
adc
jo
ret
jg
jo
fisttpl
sub
insl
and
mov
scas
add
aaa
mov
and
fdivl
das
mov
push
dec
imul
ret
xor
dec
test
cmp
xor
pushf
ss
jbe
cmc
mov
stos
and
fmull
dec
jp
jp
enter
sahf
sub
daa
push
cmc
mov
jns
lea
nop
in
dec
sbbb
call
sti
outsb
jp
out
mov
xor
enter
mov
jo
pop
popa
repnz
cwtl
mov
js
gs
scas
insl
outsl
push
xor
out
xchg
jnp
sub
sub
mov
call
sahf
cs
in
inc
pop
stc
cmp
sub
inc
into
dec
mov
push
dec
mov
jb
rcrl
push
mov
push
stc
jo
sbb
xchg
in
lret
test
mov
sbb
cmp
add
adc
push
test
push
lret
cs
js
stos
pop
lds
aam
and
mov
push
mov
rclb
aaa
cmp
pop
push
mov
sbbb
jne
dec
adc
fsubl
rclb
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
ds
adc
dec
xor
maxps
mov
fisttpl
sahf
imul
pop
jp
push
push
rclb
sbbl
or
leave
mov
xlat
testl
mov
imul
leave
mov
and
bound
aad
out
add
lret
ret
push
mov
jg
in
dec
push
mov
lds
int
xchg
mov
and
inc
loop
rcrl
push
dec
jns
add
mov
xchg
jb
and
sti
add
jbe
or
push
cwtl
mov
sub
push
jl
inc
test
pushf
mov
sarb
xor
cmp
shrl
pop
mov
lock
or
cld
xchg
scas
lret
cmp
stos
or
cmp
ret
test
pusha
adc
aad
test
btr
push
xchg
fwait
dec
and
lea
pop
mov
std
jne
das
sub
fiaddl
mov
cmpsb
sbb
push
or
or
movsb
test
pop
cmp
xor
xchg
push
add
fs
jne
data16
or
and
and
adc
sbbl
orl
dec
add
adc
ljmp
ret
sbb
lret
inc
inc
pop
sti
adc
dec
jbe
pop
addl
inc
jb
in
movsl
xlat
and
cmp
or
lret
and
sbb
movsb
cli
mov
inc
call
aaa
push
adc
sbb
mov
mov
hlt
sbb
push
ds
enter
int3
cmp
insb
adcl
test
push
mov
sbb
xlat
dec
ds
cwtl
or
jb
je
je
mov
sbb
pop
xchg
cmc
call
pop
xchg
outsl
div
ljmp
xor
fldenv
mov
pushf
adc
inc
fcoml
jecxz
jnp
icebp
push
or
popf
shrl
pop
pop
mov
push
std
pop
stos
sub
int3
sub
mov
aas
imul
cmpsb
mov
js
hlt
and
pop
out
mov
xchg
jg
enter
push
addl
into
lods
psadbw
bound
mov
mov
adc
push
sbb
fs
ljmp
out
push
stc
add
repz
mov
stos
ficomps
icebp
clc
xor
mov
jp
cmp
pop
jne
in
lret
fildl
scas
sbbl
lret
rcrb
or
and
jns,pn
jge
cmp
add
test
mov
loope
dec
movsl
cmpsb
xchg
mov
inc
or
and
sub
mov
jle
pop
mov
fwait
scas
addb
insl
xor
fmuls
pop
cmc
popa
test
xor
pushf
or
inc
sbb
inc
ret
sub
cmc
mov
data16
out
dec
mov
adc
cs
outsl
xchg
pop
addr16
std
pop
xchg
lcall
pushf
mov
int
mov
sub
xor
mov
sbbb
bound
pop
xchg
pop
xchg
rolb
das
adc
xor
dec
mov
cwtl
mov
decl
out
sub
stc
cmpsl
dec
push
negl
jmp
mov
cli
xor
testb
mov
dec
xorb
jo
jnp
xchg
cmpsl
xor
sub
sarl
cmpb
pushf
push
test
push
cmp
and
mov
flds
rcl
and
pop
push
fdivs
sbb
mov
imul
scas
dec
push
mov
mov
and
insl
imul
dec
push
les
ljmp
inc
push
in
cmpsl
lea
loope
hlt
out
mov
ds
loop
and
adc
and
pop
pusha
ret
sbb
and
inc
jno
or
xorb
cwtl
jbe
mov
jp
cwtl
cmc
pop
xchg
rcrb
add
push
mov
jmp
sbb
in
mov
cmp
addr16
rcl
xchg
in
cmc
adc
leave
ja
dec
sbb
sbbl
and
cmp
shlb
into
pop
out
mov
push
shll
xor
xorl
fildl
je
mov
ror
imul
mov
jnp
gs
adc
stc
jmp
mov
sub
mov
fcom
inc
call
lcall
test
and
pop
sbb
insl
mov
adc
xchg
adc
push
ret
cmpsl
aad
jno
mov
insb
mov
pop
outsb
xchg
repz
push
pop
pop
movsl
push
pop
add
mov
mov
cmpsl
sti
pushl
gs
mov
xchg
out
std
stos
jmp
add
xlat
imulb
call
xchg
sbb
mov
pop
and
xor
out
cmpsl
jb
jns
mov
dec
mov
sti
cmp
in
xchg
xor
pop
and
outsb
js
push
insl
in
mov
mov
cmp
dec
mov
adc
mov
jne
lcall
cmp
mov
sbb
jb
ljmp
or
sub
sub
imul
mov
xchg
leave
pop
fidivrs
adc
adc
dec
inc
dec
out
fscale
fmuls
loopne
iret
mov
and
mov
mov
rcl
sar
bound
inc
mov
mov
adc
fld
and
sbb
jne
fsubl
sbb
ja
pop
push
repz
dec
out
nop
mov
in
jbe
pop
je
sub
lahf
cwtl
loopne
dec
inc
mov
sub
out
sbb
push
mov
pop
mov
adc
ja
sbb
mov
out
imul
fnsave
jmp
mov
ss
in
sbb
loop
ficomps
out
xchg
lret
pop
stos
cmpsl
cmp
jne
pop
ret
ss
dec
push
cmp
stos
enter
orl
arpl
and
or
imul
xchg
out
xchg
mov
mov
ficompl
adc
icebp
dec
xchg
add
mov
enter
push
nop/reserved
push
aas
adc
sbb
sbb
insl
inc
push
jmp
mov
iret
pop
jle
xor
aas
imul
jo
clc
add
in
xor
aam
mov
incb
pop
daa
es
fmul
mov
jno
movl
mov
mov
movl
add
xorl
xor
movl
cmp
jne
mov
mov
and
mov
mov
movl
add
mov
jmp
fcmovnbe
aam
repz
push
jae
jge
xlat
xor
jge
jo
xchg
jg
or
cli
sub
bound
xchg
js
pop
mov
dec
jnp
push
add
icebp
rcl
cmp
mov
std
add
jge
and
pop
in
cmpb
xor
xor
dec
add
decl
mov
shrl
aas
jne
sub
aad
mov
icebp
push
mov
lcall
and
cmp
inc
cmpl
cli
pop
pop
loop
and
jb
mov
std
ss
jae
jl
cmp
sub
push
cld
das
or
addb
mov
and
xor
aaa
cmp
aas
bound
mov
cmp
mov
jge
sub
push
and
mov
test
or
sub
mulb
aas
mov
in
in
into
pop
xchg
and
out
add
mov
fdivs
mov
jae
mov
mov
ret
dec
add
lods
pop
cmp
out
insl
div
mov
jbe
aad
ret
mov
or
inc
inc
add
mov
test
fists
fstps
test
add
clc
mov
mov
and
mov
fldl2e
outsb
jg
cmc
out
sbb
addr16
cmp
daa
rorb
das
xchg
mov
aad
fcom
adc
jmp
xor
enter
bound
loop
int
test
or
add
push
addr16
leave
pop
push
mov
rorb
ja
dec
jne
out
bound
arpl
xor
clc
movsl
pop
xchg
xlat
cmpsb
xchg
sbb
movsb
test
cld
and
test
fadd
jmp
cmp
pinsrw
adc
jl
cli
pop
outsb
push
dec
mov
adc
cwtl
loopne
dec
inc
in
dec
jo
pop
rcrb
hlt
les
xchg
dec
adc
fs
int3
loopne
lret
mov
imul
mov
mov
bnd
int3
jge
and
lahf
xchg
sub
ret
jmp
out
cli
popl
xor
lea
mov
sub
add
pop
rcrb
and
inc
addr16
addb
inc
dec
aam
push
mov
imul
lods
into
adc
mov
xchg
or
jl
dec
aas
gs
leave
fsubrs
mulb
xchg
inc
negb
outsl
ret
fwait
or
mov
pusha
add
push
cli
cmpl
mov
fists
sub
gs
sbb
and
push
test
pop
push
mov
fsts
addr16
outsb
xchg
cmc
inc
shll
sub
add
jbe
pop
xchg
rol
imul
fldenv
movsb
clc
jne
jl
les
ja
mov
ljmp
jmp
fcom
sbb
sahf
shl
daa
dec
pusha
int
jno
sub
jo
in
popa
popa
and
pop
push
jno
jge
sub
sbb
push
jmp
inc
inc
sbb
mov
cmp
iret
fcoml
mov
fmuls
mov
add
test
aam
je
xchg
hlt
mov
jns
outsl
mov
in
jge
mov
mov
lock
pushf
lret
js
aam
push
lods
jbe
into
dec
ficoml
pop
out
scas
daa
aaa
insb
jg
inc
xlat
dec
push
ds
mov
pop
sbb
cmp
sbb
mov
add
mov
mov
add
mov
xor
sub
push
sbb
jmp
lods
das
mov
mov
lcall
pop
mov
jo
ds
add
lods
xchg
sub
test
add
sub
lahf
push
nop
jns
jp
shl
mov
in
je
xchg
fisubrl
inc
xor
add
andl
and
ret
out
lret
cmpsb
fmuls
and
das
and
ret
cmpsl
inc
sub
adc
jbe
cmp
jno
adc
jl
js
mov
sarl
dec
adc
mov
pushf
or
pop
outsb
jne
ret
pop
push
enter
cmc
xchg
xlat
aad
stos
cmp
or
data16
pop
out
mov
mov
jmp
das
leave
sub
fwait
jge
or
xchg
inc
lahf
push
cmp
out
test
mov
push
lcall
add
daa
inc
movsl
inc
xchg
cmp
push
jbe
dec
cmp
jb
fdivrl
xor
fisubs
mov
or
cmpsb
mov
and
jb
jne
jecxz
lret
mov
cmp
aad
and
mov
dec
pop
es
ss
mov
fs
and
mov
xchg
lock
sbb
mov
shrl
cmp
out
and
xchg
or
cli
pop
addb
nop
hlt
xchg
sub
imul
pop
and
cmpsl
outsb
cmp
add
and
mov
gs
push
dec
subb
xor
andb
lret
loopne
or
daa
sbb
adc
add
lock
inc
add
das
dec
push
and
pushf
push
adc
pop
fwait
mov
jne
sub
push
xor
out
lea
xchg
pop
xchg
inc
sub
mov
lods
aas
sbb
lods
les
loope
out
sbb
cmp
int3
adc
subb
inc
pop
inc
cmp
sbb
mov
mov
imul
sti
or
out
pop
jmp
push
xchg
outsl
call
mov
mov
sbb
hlt
mov
lea
or
xchg
jmp
lock
pop
daa
mov
mov
sbb
test
xchg
in
addl
mov
cmp
repz
pop
add
dec
imul
xchg
arpl
inc
cmp
rclb
sbb
inc
pop
in
push
xchg
adc
and
dec
and
push
jp
test
sub
enter
push
fcmove
xchg
gs
addr16
outsb
lcall
cmp
mov
call
mov
repnz
pusha
pop
test
mov
mov
or
add
xchg
iret
or
push
ja
push
leave
xchg
pop
setns
pop
push
mov
insl
and
inc
cmp
push
or
das
and
xchg
pop
mov
addb
lods
js
jmp
push
pop
ss
lcall
addr16
dec
mov
sbb
insb
mov
repz
sub
inc
in
sti
ficoml
les
dec
push
xchg
add
dec
jp
mov
push
lods
lcall
pop
test
adc
push
push
inc
lock
fdivrs
push
mov
jg
inc
inc
pop
addl
fisubrs
mov
sbb
mov
add
jmp
outsl
mov
or
imul
sbb
insb
lds
jge
jo
jbe
xor
push
lods
mov
sub
cwtl
shrl
mov
mov
cmp
daa
and
lock
sbb
jmp
out
mov
or
pop
testb
mov
movsb
and
fsub
flds
mov
mov
or
stc
xor
sbb
setae
inc
pop
stos
add
jno
out
pop
mov
rcrb
inc
leave
mov
aas
mov
add
sub
sbb
cld
add
addr16
loope
std
bound
cli
cmpsb
dec
fwait
adc
cmpsl
mov
in
in
adc
adc
push
adc
xchg
xor
xchg
inc
xchg
sub
lcall
mov
arpl
pop
xchg
inc
cmc
jne
sub
mov
mov
roll
fistpl
mov
jbe
xor
mov
andl
iret
subb
xchg
push
sub
pop
adc
js
push
lea
sub
or
int3
mov
sbb
fdivrs
xor
xchg
or
fimuls
jp
cmpsl
je
xchg
stc
fwait
jno
inc
xor
mov
sbb
test
cmp
je
imul
ds
sbb
cli
mov
call
dec
xchg
lret
adc
ss
sarl
dec
inc
and
xor
xchg
loop
leave
and
add
xor
test
daa
call
jne
pushf
inc
push
int
js
pop
add
adc
jne
loope
or
les
test
sahf
push
inc
mov
int3
jge
xchg
cwtl
mov
mov
fcmovu
add
jg
xchg
insb
lods
jecxz
push
enter
je
daa
sub
mov
outsl
cmp
xor
sbb
sub
sbbl
jae
or
std
xor
xchg
push
cmp
xchg
into
fstp
imul
adc
mov
mov
dec
dec
mov
out
pop
movsl
and
cmpsb
cmp
cmp
jmp
into
popa
jmp
cmpsl
inc
or
lcall
jge
mov
ret
sub
add
mov
xchg
rorl
xor
sub
cmpsb
sbb
dec
clc
and
es
enter
and
and
and
mov
outsl
inc
mov
inc
push
shl
fdivs
adc
mov
andb
fwait
pushf
sbb
int
gs
call
add
sbb
ja
arpl
out
std
pop
jo
pop
jnp
aas
push
push
jl
ds
shll
dec
inc
inc
arpl
enter
mov
je
adc
dec
imul
cli
imul
push
sbb
adc
aad
js
cli
enter
xor
push
js
dec
out
dec
jp
js
pop
fistl
and
ja
jbe
mov
sti
jnp
adcb
mov
sub
pushl
pop
pop
pop
pop
shl
fs
cmc
clc
xchg
add
fdivs
cmp
loopne
fistpl
test
cmpl
jmp
iret
ja
mov
imulb
sub
add
adc
add
notl
imul
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
jmp
outsl
mov
jae
dec
cmpsl
repz
cmp
ds
jo
pop
jge
jo
mov
xchg
pop
ret
mov
add
rolb
xor
stc
arpl
adc
sub
dec
pop
sub
lods
jo
mov
fsubrs
cmp
jg
rolb
xchg
lea
adc
sub
fstl
push
sub
inc
jecxz
mov
add
mov
jae
iret
in
cmpsl
pop
or
enter
pushf
out
shr
xchg
iret
jcxz
fwait
orb
mov
inc
or
push
pop
mov
or
shrl
xor
jle
fdivrl
jno
scas
mov
fistpll
mov
push
stos
and
and
cmpsb
mov
std
and
mov
std
arpl
pop
iret
mov
xorl
and
cmp
pushf
jmp
push
sarl
push
dec
push
sbb
popf
xor
and
inc
into
mov
xchg
push
xor
lock
int
dec
loope
and
mov
push
jns
sarb
pop
jl
movsb
jo
or
pop
sbb
ss
fldt
sarl
cmp
popa
jo
xor
jg
cld
push
call
mov
inc
aas
xchg
pop
or
int
mov
outsb
mov
in
out
jbe
push
pop
lea
out
sti
pop
and
aaa
inc
push
sti
cmc
push
pop
mov
xlat
jge
movsl
mull
rcrl
jmp
and
arpl
push
add
stos
mov
pop
lock
pop
xor
aad
xchg
inc
xor
mov
jge
iret
push
or
shlb
push
lcall
xchg
stc
xchg
shlb
out
mov
sbb
nop
jne
or
push
int
fldl
lahf
fidivrl
int
addr16
mov
mov
push
add
cmc
cmpsl
in
or
cwtl
push
jb
subl
dec
mov
dec
pop
mov
ss
rcr
add
sub
push
pushl
xor
inc
ret
in
outsb
mov
add
sbb
push
xchg
das
sti
mov
pop
sbb
sbb
addr16
adc
cmp
mov
orl
mov
cwtl
sbb
pushf
cld
cmp
or
jo
lea
add
loop
pop
mov
out
xchg
xchg
jae
xchg
and
testb
mov
subl
and
fisubs
push
fdivs
imul
push
or
cmp
mov
bound
scas
cli
push
je
pop
push
cltd
sub
daa
lret
fs
inc
sbb
mov
out
adc
rcrb
jge
test
dec
into
add
ret
inc
add
call
sbb
inc
adc
clc
push
out
int3
fidivs
push
pop
cmpsl
popa
add
lock
sub
int
enter
clc
xor
rorl
leave
sbb
clc
lret
pop
sub
xchg
mov
enter
ss
cmp
in
push
sub
andb
mov
inc
addl
das
testl
mov
ss
in
test
cmp
int3
or
mov
roll
sbb
jo
shll
adc
mov
jno
imull
sarl
dec
cmp
xor
sub
and
mov
pop
daa
in
xchg
jp
loopne
pushf
xchg
je
mov
and
fcomp
sub
fsubl
lret
adc
fmulp
or
out
sub
or
mov
mov
insl
mov
mov
sub
adc
mov
push
mov
xor
movl
jmp
xchg
shll
push
paddsw
es
jo
pop
jge
jo
movb
add
mov
cmpsb
adc
jmp
add
into
push
test
push
rol
push
mov
fidivs
and
xchg
cmpsb
insl
jb
xchg
fsubs
cmp
das
jnp
pop
subl
in
jg
in
jae
pop
pusha
pop
adc
inc
stc
movsl
and
mov
xor
inc
jmp
fs
mov
dec
lahf
jmp
inc
sbb
clc
and
daa
and
scas
shl
mov
cwtl
dec
insl
mov
cs
push
xor
and
mov
fsts
fwait
add
adc
leave
or
stos
mov
scas
js
xchg
lret
daa
xor
leave
mov
test
outsb
push
in
test
scas
nop
es
mov
cmpl
lock
add
sub
pusha
xchg
jo
dec
or
jp
sbb
dec
add
xchg
pop
mov
dec
insl
cmp
mov
nop
call
xor
sub
fmuls
pushl
pusha
jnp
dec
jmp
jg
add
out
std
xchg
aas
and
push
push
orl
mov
add
jmp
sub
inc
rolb
scas
mov
mov
jl
popf
rcrl
push
push
mov
inc
sub
and
aam
popa
into
inc
lret
adc
aam
outsl
fwait
push
mov
es
add
xchg
in
pop
je
arpl
out
add
xor
dec
jmp
xlat
shrb
push
in
fistl
mov
les
mov
fwait
loopne
in
and
add
in
mov
test
popf
loopne
push
add
mov
mov
cmp
or
dec
and
in
addr16
fimull
int3
sar
dec
and
and
je
test
mov
sub
cs
inc
insb
pop
mov
movsb
and
add
inc
xor
lahf
xchg
pop
mov
ret
rol
loopne
mov
rorb
sub
push
pop
cmp
pop
sub
stos
mov
fs
push
mov
mov
aas
int3
or
lahf
and
adc
mov
iret
pop
insl
insl
adc
clc
push
test
cmp
push
cmp
fprem1
rorb
adc
xor
push
add
pop
loope
push
cmp
test
mov
jae
jo
push
fstps
pop
lock
cmp
mov
cld
mov
ret
and
sbb
ret
insl
xchg
jg
mov
fs
pop
ret
aad
jne
in
out
aam
aad
push
jmp
push
popf
xor
loop
rcll
into
sub
scas
cmp
rolb
mov
jb
es
pop
insl
lahf
mov
in
add
hlt
xchg
mov
add
lock
in
dec
rorl
call
lods
aad
scas
lods
lret
fbstp
repnz
or
mov
sbb
int3
dec
lcall
mov
in
or
jnp
mov
test
push
leave
insb
lock
fisttpl
mov
mov
ror
mov
sbb
jb
mov
cwtl
addl
movsb
lods
cmpsb
jb
out
incb
push
fisubs
and
mov
sub
icebp
mov
pop
dec
std
fdivrp
mov
aam
rcll
orl
and
cmp
ljmp
bound
xor
sahf
lods
sub
jl
fdivs
cmpb
and
cmpsb
lret
jmp
sbb
push
xor
push
or
add
mov
fsubl
cmp
movl
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
and
leave
adc
adc
call
add
pop
push
dec
jo
pop
jge
jo
jno
pop
and
dec
icebp
sbb
inc
repz
imul
mov
mov
jns
pop
int3
sbb
iret
sub
clc
iret
mov
jno
cld
inc
sahf
xchg
dec
mov
jmp
sub
push
hlt
js
jge
or
js
dec
data16
sub
inc
jne
inc
fldl
insl
out
out
cltd
pop
call
sub
imul
mov
jae
add
test
lods
pop
out
enter
mov
stos
xchg
pop
fsqrt
xchg
mov
sbb
jo
hlt
pop
or
fmulp
sub
or
push
sar
outsb
je
popa
pop
jns
sbb
ficoml
test
test
aaa
and
call
ret
xchg
or
cmpl
cmp
and
iret
mov
jbe
pop
int3
mov
dec
arpl
psrlq
pop
or
push
cmc
or
mov
int3
jbe
add
xor
xor
test
testl
insl
test
out
lahf
clc
xor
adc
les
xchg
dec
and
aaa
ret
dec
xchg
add
jecxz
test
lret
mov
mov
push
fsubrl
rol
adc
aaa
mov
insb
call
and
adc
adc
sub
jae
lea
arpl
out
es
jno
add
call
cmp
shlb
sbb
stos
in
cmp
push
mov
mov
xchg
scas
dec
loop
push
fidivrs
paddd
ja
addr16
mov
dec
jne
ret
sbb
dec
fisttpll
mov
pop
loope
enter
divb
std
std
xor
xchg
adc
aas
xor
orl
pop
icebp
mov
shl
adc
lcall
push
aaa
dec
sbb
test
inc
out
push
or
xchg
ljmp
and
cmp
in
outsb
inc
imul
dec
xchg
xchg
cs
ds
jmp
lret
mov
dec
aam
scas
outsb
xchg
xor
inc
iret
xchg
mov
leave
pop
bound
push
sub
loopne
pusha
hlt
adc
pushf
jp
jp
in
loopne
cmc
gs
dec
dec
mov
sbb
xor
andb
jo
xchg
mov
inc
xlat
int
fildll
sti
aaa
mov
xchg
xchg
xchg
dec
adc
mov
or
inc
subb
in
xor
lods
xor
int3
jmp
aaa
rorb
push
push
xchg
inc
cmp
das
or
aaa
and
sub
fldenv
dec
inc
shr
fimuls
push
inc
mov
lock
or
mov
std
nop
shll
scas
std
adc
pop
push
and
pop
dec
lock
lods
mov
rcrl
xchg
adc
fstl
push
lret
in
scas
frstor
push
push
push
popf
mov
loope
push
push
pop
hlt
jge
sub
jecxz
cmp
cli
xor
jne
mov
out
xchg
jmp
in
loop
or
and
sahf
daa
xor
out
mov
mov
mov
mov
loopne
xchg
imul
pop
cs
pushf
aad
jecxz
or
lods
pop
push
add
dec
push
ror
mov
adc
imul
push
arpl
mulb
ja
cmp
dec
dec
sbb
jmp
aaa
or
test
adc
add
test
jl
cmp
aam
aam
fs
fildl
jne
sub
addl
xor
movl
cmp
movl
jne
jmp
js
stos
loopne
jae
cmc
pop
sub
aas
jbe
jo
pop
jge
jo
loop
push
mov
jae
xor
popa
pop
in
pusha
into
fidivrs
cmp
daa
js
jnp
addr16
pop
pop
add
pop
stos
sub
inc
repz
call
or
cli
xor
movsb
mov
je
mov
sbb
lcall
mov
cld
push
cmp
out
pop
mov
notl
loope
cmp
mov
jl
fildll
pop
fimull
xchg
push
mov
aad
sbb
aaa
dec
mov
mov
es
rorl
adc
or
mov
adc
js
inc
mov
lret
fdivr
stc
repz
push
lret
ljmp
insb
push
jo
pop
arpl
push
cmpsl
inc
loope
ror
test
gs
add
and
or
lret
cld
arpl
insb
sbb
and
sub
daa
jl
pushf
ret
sub
xchg
fcomps
imul
mov
js
test
fwait
aaa
mov
mov
ret
mov
jle
push
cmpb
cld
outsl
int3
ds
leave
lcall
ss
inc
jecxz
pop
jae
mov
in
idivl
push
adc
add
mov
mov
and
cltd
inc
pop
xlat
out
mov
ss
cmp
jno
mov
sbb
filds
gs
add
in
fisubl
or
xchg
push
add
loop
push
pushf
stos
fidivl
stos
push
pushf
or
cld
test
push
in
xor
and
dec
mov
into
push
stos
es
xchg
add
mov
jge
cmp
pop
imul
mov
dec
addr16
das
clc
jae
xchg
testl
sahf
ficoml
out
sbb
leave
mov
fcompl
cmpsb
push
mov
mov
pop
pop
popa
aas
jg
rcrb
fstpt
or
int3
mov
xchg
add
cmp
push
push
enter
clc
loopne
pcmpgtd
inc
sbb
sbb
mov
xor
ror
and
lods
dec
outsb
das
mov
pop
ficomps
in
xchg
pop
in
in
sbb
icebp
addr16
movsl
mov
push
jo
sbb
gs
sbb
lods
sbb
add
shrl
or
shll
and
test
pushf
xchg
cmp
add
lock
jo
bound
sbb
pop
cmp
cmp
shrb
or
xchg
outsb
jg
and
das
mov
and
imul
arpl
xchg
iret
sub
mov
sbb
and
dec
jl
stc
and
add
mov
pop
inc
popf
push
es
stos
or
mov
and
dec
push
and
sbb
jmp
mov
add
xchg
scas
pusha
adc
sahf
inc
mov
insb
test
and
out
xchg
push
js
leave
push
sbb
fadds
mov
dec
sbb
push
lods
js
mov
xor
fidivl
outsl
cmpsb
pop
test
sbb
mov
fcoms
notb
xchg
pop
stos
in
js
arpl
mov
lahf
xchg
out
inc
cmp
pop
shlb
std
cli
mov
push
popa
xchg
lds
rcrb
sub
push
imul
sti
in
adc
mov
pop
nop
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
jmp
mov
cwtl
test
jb
jb
xchg
adc
jb
push
jo
pop
jge
jo
cmp
jo
inc
into
dec
into
push
mov
pop
or
mov
mov
je
shll
pop
fadd
js
add
cmp
push
loope,pn
rol
fistl
loope
cmp
xlat
inc
cld
call
test
sbbl
dec
lods
icebp
pop
rorb
call
or
sbb
dec
mov
jl
sbb
jmp
cmp
lea
inc
adc
lcall
lds
lret
mov
sbb
jmp
cmp
lea
int
fwait
mov
dec
jne
in
cmpsb
jae
mov
and
pusha
mov
adc
fistl
sarb
cmp
jnp
adc
std
dec
insl
in
loopne
mov
fmuls
mov
dec
in
in
jne
loopne
sbb
outsl
pop
cmp
push
add
fbstp
push
test
jne
lds
dec
mov
insb
mov
ljmp
std
data16
push
out
sbb
lahf
imul
scas
inc
out
cmp
lcall
adc
or
pause
push
dec
sbb
outsb
add
mov
daa
enter
ret
mov
test
pop
and
inc
ffreep
mov
fstps
fucomp
aam
test
jle
mov
or
test
lods
sti
das
out
enter
sub
inc
movsb
pop
pop
lods
add
stos
out
push
dec
popf
lcall
xor
mov
pop
sarb
sbbl
lcall
in
mov
test
mov
arpl
ss
jnp,pn
pop
adc
push
mov
data16
clc
int
sbb
mov
push
xor
xor
pop
add
repnz
sub
hlt
sbb
jns
mov
gs
lret
std
daa
out
mov
icebp
cmp
pop
mov
jno
mov
push
popf
jae
lock
addr16
nop
inc
dec
lds
fildll
mov
fdivrl
adc
mov
inc
test
call
mov
lock
sub
hlt
xor
inc
xchg
or
data16
std
addl
inc
or
lret
loopne,pt
mov
mov
out
mov
subb
mov
adc
xchg
imul
test
push
loopne
rol
adc
mov
repnz
fisttpll
test
insl
shll
xor
scas
or
insb
mov
xor
cmp
sahf
ljmp
sub
jge
cmp
mov
faddl
xor
jbe
pop
push
add
cmp
in
sub
jne
jb
mull
loopne
out
inc
test
lcall
pop
ds
jae
xor
aad
imul
cmp
and
dec
inc
aad
insb
adc
dec
ret
stos
add
inc
aam
fcoml
jo
mov
cmp
mov
jmp
popa
adc
sub
and
mov
imul
push
add
xchg
dec
pop
inc
pop
insl
icebp
lods
loop
xchg
xchg
sbb
add
cltd
lcall
mov
jae
out
add
lcall
lods
cwtl
mov
shlb
cmp
or
sub
mov
push
test
out
call
or
or
ret
mov
cmp
push
das
adcb
aad
adc
mov
add
pop
pop
ret
push
mov
sub
and
movl
mov
adc
movl
sbbl
mov
subl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
xor
sub
mov
sbbl
jmp
mov
mov
pop
dec
xor
out
test
cmovbe
jo
jle
jo
repnz
mov
sbb
push
es
and
sub
mov
push
les
ljmp
jp
repnz
add
out
xchg
neg
insb
pushf
or
ret
mov
or
iret
mov
and
test
lret
pushf
ljmp
imulb
dec
sbb
pop
xchg
add
dec
xchg
xchg
subb
loope
sti
dec
cmp
jns
mov
rorl
push
mov
jp
ret
dec
ds
movsl
out
push
xor
imul
xor
cs
jno
mov
inc
xchg
cmp
pop
pop
call
lods
test
cmpsb
pusha
lods
adc
sub
xor
test
mov
inc
mov
int3
mov
sub
jo
fisubs
cmp
push
inc
js
push
pusha
rorb
cli
inc
ds
gs
jg
outsl
fisubrs
or
gs
pop
lods
or
mov
add
inc
add
inc
ljmp
fwait
movb
inc
in
jg,pt
xchg
in
aad
mov
mov
cmp
xor
mov
add
in
or
xchg
push
cmp
dec
mov
ffree
push
mov
xor
stc
mov
mov
jns
jnp
mulb
and
cltd
or
loopne
mov
or
bound
daa
inc
mov
movsb
test
cmovns
xor
jbe
xchg
data16
add
xor
cmp
leave
or
adc
pop
hlt
mov
inc
pusha
aad
sub
cmp
push
xor
pop
lds
mov
lret
push
mov
addr16
xchg
sub
push
outsl
mov
iret
ja
psraw
adc
dec
aam
mov
aas
mov
mov
dec
xchg
aaa
out
jno
inc
into
pcmpeqd
pop
add
int3
into
inc
movsb
adc
mov
jmp
les
popf
mov
out
nop
dec
ret
mov
repnz
mov
popa
jl
into
sarb
out
mov
test
test
add
jge
lea
xchg
enter
ret
fimuls
stos
sub
and
mov
lods
insl
hlt
cmp
adc
cmp
loop
jb
mov
inc
inc
outsl
sbb
and
jecxz
fdivp
mov
loopne
mov
fdivrl
xchg
pop
inc
lret
dec
sbb
lea
push
dec
ficomps
inc
fstpl
cli
sub
xchg
adc
mov
nop
out
mov
or
dec
fs
add
subl
jmp
hlt
xor
fwait
repz
inc
xchg
aaa
mov
cmp
pop
jo
mov
push
sbb
add
fisubrl
insb
in
mov
inc
bound
push
test
cmc
fisubrs
mov
mov
insl
lock
fwait
jns
mov
jge
mov
pushf
scas
clc
adc
mov
mov
mov
push
pop
rclb
sbb
xchg
xor
movsb
cmp
mov
adc
mulb
jb
jae
dec
pop
enter
add
xor
lahf
push
inc
nop
mov
cmp
and
insb
cmp
jmp
sbb
orl
cmpsb
sar
jno
xchg
cmp
pop
inc
movsl
or
sub
jne
aad
mov
or
aad
add
inc
push
pop
stos
test
enter
pop
cmc
inc
cmp
test
mov
gs
call
dec
pushf
roll
call
or
pop
dec
lahf
mov
fsubl
push
mov
lods
in
jbe
jg
lcall
xor
or
out
sbb
lcall
adc
add
or
enter
js
mov
test
add
xchg
pop
adc
lock
mov
or
or
xor
push
cmp
enter
sub
popa
xchg
xor
mov
cmc
sahf
sub
fs
dec
ss
enter
or
mov
scas
xchg
mov
inc
push
int
gs
cwtl
addb
shr
jno
adc
pop
pusha
cltd
test
push
fsubrs
andb
icebp
inc
inc
outsl
lds
outsb
dec
mov
or
pop
stos
js
sub
lahf
mov
pop
cmp
arpl
jge
jne,pn
test
aaa
adc
pop
js
adc
fwait
dec
mull
xor
cmc
dec
int3
dec
push
mov
dec
into
jg
repnz
test
movntps
and
mov
lcall
es
data16
jno
pop
imul
xlat
push
aaa
cmp
cmp
test
scas
mov
bnd
insl
repnz
icebp
clc
int
addr16
addb
jns
mov
sbb
mov
lds
ffree
mov
dec
mov
pop
adc
pop
xchg
adc
add
lods
fistps
test
ljmp
mov
and
insl
lahf
int
roll
mov
fsub
sub
outsl
push
mov
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
push
xorl
push
test
jmp
mov
mov
jne
jne
sub
push
jae
enter
mov
and
mov
xlat
insl
gs
add
jge
sbb
xor
or
mov
push
mov
sub
or
jno
jecxz
inc
stc
and
push
aaa
cli
and
push
mov
sbb
rcrb
sub
inc
adc
outsl
inc
js
mov
clc
aam
xor
imul
inc
sti
sahf
cmp
or
out
cli
xor
xchg
arpl
inc
out
or
jo
add
sub
push
fstpt
mov
rcl
push
fisubs
rorb
nop
fldenv
add
mov
xor
loop
pop
mov
mov
adc
jge
imul
gs
daa
nop
daa
setb
fsubr
sahf
add
movsb
into
pop
iret
popf
ljmp
inc
adc
lock
xlat
or
repz
sahf
out
pop
fidivrl
sbb
lock
enter
cmp
or
dec
dec
jecxz
js
lcall
and
icebp
out
and
sub
dec
popa
stos
push
inc
dec
xchg
or
xchg
repz
and
fcomp
arpl
insl
outsb
cmp
adc
std
mov
mov
ss
and
idivb
les
mov
sbb
add
mov
stos
ss
mov
xlat
faddl
jbe
add
pop
lret
movsl
cmpsb
dec
or
add
mov
in
sub
out
mov
call
sub
out
pop
inc
outsb
scas
and
sub
add
pushf
mov
add
pop
jecxz
loopne
rorb
add
aaa
int3
mov
cmpsl
or
cltd
cmc
mov
mov
fcmovbe
cmp
mov
loope
test
adc
sbb
movsb
iret
daa
andl
xchg
out
dec
sbb
mov
cld
outsl
xchg
inc
in
dec
pop
lds
adc
pushf
fwait
enter
out
add
or
sbb
and
enter
pop
mov
sub
push
xchg
loopne
cmp
fnstsw
imul
fwait
sub
loopne
inc
cmpl
in
mov
xchg
arpl
outsb
test
jnp
pop
mov
inc
add
sbbl
pop
xchg
lods
enter
fs
shlb
popa
enter
repz
mov
adc
aaa
loope
scas
hlt
stos
adc
scas
push
jne
je
mov
add
mov
or
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
pushl
push
push
call
mov
dec
mov
jmp
and
imul
mov
add
add
mov
sub
mov
jmp
lret
sbb
inc
loopne
push
mov
rorb
ja
inc
dec
xchg
adc
jo
jle
jo
rol
mov
mov
jg
push
mov
or
push
and
push
add
jne
cltd
pop
movsl
in
dec
xchg
mov
mov
stos
mov
xchg
jns
daa
mov
in
fidivrl
xchg
sbb
jge
ljmp
pop
in
out
out
inc
adc
pop
lret
jbe
ds
or
insb
das
adc
push
add
pop
sbb
lret
into
insb
and
in
ds
xor
das
adc
xchg
loop
loope
sti
mov
mov
movsl
mov
sbb
pop
adc
cmp
call
out
cmpsb
scas
fldenv
daa
jo
test
cld
sbb
pop
fldt
mov
mov
lea
push
imul
mov
outsb
xor
mov
outsl
mov
inc
sbb
adc
jnp
push
inc
sub
dec
repnz
movd
filds
mov
jne
push
or
fwait
outsl
push
pop
shl
mov
sub
push
mov
xchg
jo
pop
push
jg
mov
jnp
xchg
test
repz
lret
rcrb
inc
mov
fchs
insl
cmp
ja
repnz
out
or
mov
imul
ret
mov
mov
leave
cmp
add
aam
jbe
jl
orb
mov
mov
add
rolb
inc
and
dec
jle
ficomps
adc
cmp
and
pop
orl
adc
or
aam
or
add
fdivrl
push
push
mov
push
ljmp
jecxz
aam
je
cmp
rorl
sub
push
adc
or
push
xchg
ret
add
and
cld
xor
dec
or
sbb
xor
sub
mov
pop
shll
cmpsb
int3
inc
xor
cmpsl
add
icebp
inc
test
jg
pop
dec
add
sti
divl
das
pop
jl
in
xor
aas
lock
in
xor
fildll
mov
mov
into
int3
clc
mov
sahf
leave
or
stos
xchg
cmp
jle
mov
scas
inc
push
sahf
dec
dec
sub
push
push
pop
and
inc
and
addr16
je
rcrb
iret
push
daa
mov
add
cld
push
sbb
xor
inc
jne
icebp
insl
test
mov
pop
sub
dec
adc
mov
xchg
out
test
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
sub
xor
jmp
call
jno
popa
push
xchg
arpl
cmc
mov
pop
fs
mov
mov
push
pop
add
inc
out
or
pop
push
xchg
or
mov
arpl
push
aam
pop
sbb
sbbl
inc
cmc
pop
push
sbb
std
mov
out
cmc
sub
dec
mov
jno
in
add
mov
pop
loope
pop
jb
mov
sar
cli
jl
insl
inc
xchg
mov
lret
pop
push
mulb
ss
mov
adc
pushl
inc
mov
enter
cld
xchg
les
push
int3
push
dec
add
ret
mov
loop
aaa
ds
pop
and
shl
ja
jb
ret
lahf
cli
arpl
cld
pop
push
dec
leave
inc
xchg
scas
sbb
pop
mov
jnp
jmp
ja
and
jg
faddl
xor
dec
and
lret
or
add
mov
cs
loopne
add
or
popa
test
and
adcl
push
cwtl
lret
push
mov
and
mov
outsl
add
push
xlat
add
sub
movsl
das
data16
sub
push
leave
fadd
push
inc
imul
push
mov
push
scas
pop
inc
popf
jae
push
jmp
ljmp
outsb
subb
pop
aam
mov
outsl
ljmp
sahf
outsb
xor
enter
jo
pop
jb
loope
adc
call
aad
pop
cltd
mov
adc
adc
mulb
ja
xchg
loope
les
sbb
mov
mov
int3
loopne
stos
jnp
movsl
push
stos
aaa
mov
add
mov
jne
pop
pusha
cld
push
std
pusha
mov
sbb
fs
sub
inc
call
cwtl
mov
test
push
fldcw
sahf
xchg
inc
cmp
adc
and
sub
xchg
xchg
rol
int
int3
dec
xchg
or
cmp
shrl
dec
pushf
sahf
pop
inc
fwait
cld
mov
gs
rcrl
jae
insl
je
jno
jmp
jno
enter
fucomp
scas
insb
js
jno
push
lds
mov
mov
push
aam
jl
cwtl
aaa
or
call
xchg
fiadds
pop
in
and
push
jae
cs
sbb
test
lret
bound
xlat
pop
in
cmp
fmull
cmp
or
xchg
ficoms
cmp
jmp
adc
int3
pop
sub
cli
sbb
stc
lcall
sub
aad
ljmp
mov
xor
fimull
jne
mov
mov
adc
mov
xor
mov
xor
adc
xor
jmp
push
popa
jne
add
cmp
push
lret
popa
jo
mov
movsb
loopne
xor
ret
sar
mov
mov
sbb
mov
dec
cltd
ja
push
mov
ss
xor
in
push
jmp
insb
scas
iret
out
int
cmp
or
scas
roll
faddl
fs
cmp
cmp
xchg
xlat
scas
sub
fstps
mov
sub
out
out
cmp
sub
fwait
xchg
sub
jmp
loopne
xor
insl
add
inc
add
rcl
push
and
mov
sub
cmp
inc
adc
inc
rcll
test
push
sbb
inc
or
ja
jle
cmc
dec
in
outsb
push
out
ficompl
test
fwait
and
repz
inc
push
loop
xchg
fwait
xor
lahf
in
rorb
andl
insl
add
roll
sub
xor
enter
je
inc
lcall
outsb
sub
mov
int3
test
imul
out
inc
jns
mov
adc
pop
pusha
std
addr16
loope
and
cmp
jno
dec
inc
push
das
mov
jbe
les
ja
jae
xchg
and
leave
mov
aad
in
test
xchg
aad
dec
mov
fisttpl
mov
ret
cld
push
push
mov
dec
mov
jmp
mov
pop
fxch
sub
je
xor
mov
call
fadd
pushf
scas
xlat
mov
clc
jp
adc
addr16
pop
lcall
ljmp
xor
daa
xchg
dec
cmc
int3
pop
mov
into
rcr
adc
add
pop
adc
mov
xchg
test
add
repnz
mov
pop
cmp
sahf
push
call
push
xor
lea
or
adc
push
daa
sbb
ds
or
xor
pop
xor
test
popa
mov
cmp
add
xchg
popa
adc
xor
jnp
xor
sbb
and
aas
scas
cmp
push
pop
dec
aad
jns
mov
adc
and
fwait
das
inc
filds
cmp
mov
jl
adc
out
adc
in
sub
add
mov
mov
stos
dec
loope
nop
sti
dec
mov
pop
or
insb
pop
or
xor
out
or
mov
jle
mov
add
imul
pop
push
pop
xor
fs
and
adc
mov
mov
mov
je
notl
mov
xor
xorl
add
jmp
inc
mov
jp
adcb
mov
jb
outsb
jo
mov
test
roll
nop
mov
push
fdivp
ret
imul
sbb
and
std
in
pop
imul
adc
sbb
push
sub
in
aad
aam
ljmp
js
insl
xor
cs
cmp
mov
inc
incl
orb
mov
pop
and
pop
ret
sti
pop
les
aaa
in
and
pop
aam
out
mov
lea
out
jmp
xchg
inc
mov
jmp
int
repz
hlt
xchg
mov
repnz
pop
mov
ja
add
xor
pop
ss
pop
cmp
imul
loop
sub
push
jge
and
lret
inc
arpl
cmp
aas
repnz
xchg
rorl
scas
repnz
xchg
and
jg
adc
xor
ljmp
call
push
mov
xchg
outsb
repnz
in
mov
out
fsts
xor
scas
sub
mov
rcrl
inc
out
push
mov
loop
jb
lods
mov
mov
add
mull
or
in
cmc
mov
pop
repz
dec
jnp
hlt
dec
mov
jl
fcmovnbe
ljmp
jbe
mov
test
loopne
cmp
inc
lods
xor
sti
inc
or
xchg
adcb
jns
or
mov
jmp
sti
jg
incb
mov
mov
aas
push
jnp
idiv
rcrl
xchg
int
clc
fistl
pop
fs
cmp
repz
and
popa
sub
cltd
fwait
rol
jp
aaa
pop
mov
add
insb
iret
and
lea
sub
push
and
adc
dec
jb
aad
push
int3
jge
dec
jo
cmp
rorb
or
cmp
fcompl
push
mov
push
or
loopne
loopne
dec
out
ret
faddl
adc
or
aam
xorb
add
inc
ret
jnp
lock
iret
push
xor
aad
xchg
push
mov
cmc
add
mov
movsl
pop
cmp
inc
out
out
mov
xor
out
loope
data16
ljmp
and
cs
jmp
push
mov
fsubrs
xor
sub
shr
cwtl
mov
inc
dec
test
add
lahf
dec
cmp
lcall
test
stos
in
push
pop
lahf
xchg
arpl
sbb
lock
aad
or
es
lcall
push
je
and
test
jne
jmp
and
lods
shrb
in
insb
outsb
push
jo
jle
jo
push
test
push
pop
xchg
iret
leave
lahf
cmp
ds
aaa
push
jo
jmp
insb
push
fneni(8087
ret
test
dec
fnstsw
mov
jae
jle
pop
xor
mov
lods
or
cs
lret
shlb
fdivs
pop
sbb
lret
push
cmp
cld
jmp
jl
mov
test
mov
lahf
sar
divb
cmpsl
loopne
in
rcrl
xor
outsb
mov
shll
jle,pn
in
mov
fwait
in
mov
mov
add
aaa
pop
rol
fwait
cltd
cli
push
aam
sarl
xor
push
jb
sar
xor
jb
daa
mov
cmp
push
push
push
or
sarb
mov
inc
or
test
mov
out
sarb
add
es
test
pop
mov
pop
aad
adc
movsl
orl
jnp
add
out
push
push
aad
mov
push
scas
mov
rcrb
daa
lock
add
push
xor
mov
ss
lret
mov
mov
push
fnstenv
rcrb
jp
mov
cmp
cwtl
aam
mov
mov
push
mov
lahf
out
and
pop
adc
add
fadds
or
pop
lock
adc
les
sub
sbb
adc
xchg
jecxz
mov
cmpsl
call
or
divl
adc
sbb
fdivl
mov
lret
jmp
xlat
cld
and
insb
jp
sub
jle
mov
ret
xor
inc
jno
adc
push
dec
add
sbb
leave
sti
test
cmc
nop
mov
addb
stos
lea
loope
push
out
xchg
push
jo
add
inc
pop
mov
mov
add
jbe
push
decb
xor
inc
mov
mov
dec
aad
ret
cmp
mov
imul
dec
out
arpl
pop
pushf
xor
or
add
int3
movsl
push
sbb
mov
pop
data16
mul
add
push
shll
xor
jge
hlt
xor
int
jecxz
pop
dec
popf
out
aaa
inc
mov
jno
int
sbb
insb
rolb
ret
mov
stos
inc
loop
push
add
cltd
and
in
adc
lahf
pop
sub
cmpsl
jmp
mov
jnp
shll
mov
mov
popa
call
jmp
pop
insl
and
xor
insl
jp
or
adc
insl
ja
push
jo
mov
mov
lds
add
pop
xor
lds
inc
je
out
pop
dec
frstor
pop
inc
js
mov
xchg
fisubrs
push
sbb
adc
jecxz
repnz
pop
cmpsb
dec
outsl
adc
pop
in
mov
inc
ficomps
adc
out
jmp
fcomp
andb
leave
aaa
mov
push
dec
sbb
jo
ret
rclb
dec
icebp
adc
mov
test
push
sarl
icebp
lods
int
cmpsb
fwait
das
adc
xor
push
dec
cmp
dec
sub
stos
xchg
mov
or
and
repnz
roll
cld
dec
xchg
movsb
nop
push
loopne
es
filds
fdivrs
in
xor
add
xor
pop
fdivs
mov
fildll
mov
sub
dec
and
push
sbb
ljmp
xor
mov
add
sbb
mov
cmp
xchg
aam
jne
dec
xchg
jmp
mov
xchg
lods
jbe
xchg
setbe
insb
mov
push
pop
adc
outsl
xorb
cld
mov
hlt
call
mov
scas
xor
out
pushw
jle
xor
jns
int3
cmp
out
xor
mov
insl
jecxz
sbb
out
push
repz
xchg
and
fldcw
shll
scas
in
test
add
mov
adcl
lea
cmp
mov
or
add
aad
jb
not
cli
or
pop
xchg
mov
push
add
iret
test
mov
jmp
call
dec
pop
scas
mov
add
icebp
or
xchg
aaa
loope
out
mov
and
jle
dec
sub
shr
dec
jns
stos
cmp
mov
inc
sarb
aaa
add
adcl
mov
inc
xchg
mov
inc
test
add
ds
inc
lcall
cmpsl
inc
sub
pop
or
mov
loopne
jmp
sub
mov
ret
xchg
jno
test
pop
push
xlat
and
lahf
repnz
jmp
mov
cmp
sbb
ds
jecxz
imul
adc
in
jae
xchg
ds
xor
lret
cmpsb
lods
and
sbb
aam
pop
fsts
mov
enter
jbe
outsb
mov
jnp
aaa
movsl
adc
fcomps
xchg
jns
stos
push
loope
mov
xor
jge
mov
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
cmp
movl
je
pushl
decl
pushl
xorl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
or
mov
adcl
xor
decl
add
movl
cmp
je
not
mov
mov
mov
xorl
jmp
lods
mov
loopne
outsb
push
repz
scas
cmp
jo
mov
add
or
scas
adc
mov
inc
inc
mov
or
fiaddl
push
imul
sub
call
or
aam
enter
inc
xchg
arpl
lea
pop
shrl
rclb
subb
dec
xchg
dec
loopne
iret
int3
js
cmp
enter
scas
push
sbb
and
in
imul
cmp
xchg
cmp
imul
pop
in
iret
int
insb
and
sbb
cmpl
cmp
jp
leave
mov
dec
push
test
pop
xor
adc
ficoms
movsl
popf
cld
out
cmp
mov
loop
mov
sbb
mov
and
popa
sbb
mov
faddl
cmpsl
pop
or
cmp
das
clc
cmp
push
xor
mov
cmp
nop
test
je
xorb
or
roll
sub
and
sub
inc
mov
fbstp
or
pushf
ja
pop
dec
sub
adc
ret
rcl
mov
push
jg
loopne
mov
neg
xor
pop
jbe
mov
pusha
cmp
add
mov
inc
jno
jne
xchg
jle
pop
mov
pop
pop
jp
push
or
in
mov
xchg
mov
dec
scas
mov
shlb
loope
in
gs
nop
inc
dec
xor
movsb
pusha
xchg
fs
pop
dec
cwtl
sbb
fisubs
sbb
adc
stos
test
lds
sbb
movsb
inc
enter
jge
adc
cmc
les
lods
mov
jmp
mov
shl
rol
dec
lret
dec
aad
mov
cmp
test
lods
aaa
mov
stos
mov
and
jns
jle
dec
or
dec
push
fmul
enter
inc
fwait
in
pop
in
mov
rorl
adc
cwtl
repnz
ds
vunpcklpd
ds
sbb
add
push
and
adc
scas
sbb
test
ret
lods
ss
into
cli
mov
mov
loopne
or
mov
push
lret
dec
add
dec
sti
into
cmp
inc
jnp
out
push
stc
lret
cmpsl
cltd
les
in
into
mov
cwtl
sub
hlt
aam
mov
scas
cmp
jns
mov
sub
sub
pop
ja
jecxz
test
lahf
mov
jae
push
outsb
mov
sbbb
mov
test
adc
orl
add
add
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
orl
add
mov
or
mov
mov
sbb
mov
addl
add
add
mov
mov
mov
add
neg
xor
and
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
add
lea
mov
push
jmp
add
xor
inc
cld
xchg
loop
js
flds
jle
jo
inc
insl
outsb
imul
popa
rep
fdivs
test
pop
mov
xchg
outsl
mov
xchg
and
sarb
ja
fldt
mov
xorb
loop
inc
mov
xor
sahf
andb
in
fldl
jl
cld
xor
mov
cmp
jmp
jg
jo
xor
ljmp
lods
insb
inc
sub
sub
ret
lahf
cmp
dec
sti
ret
jle
adc
xchg
mov
cli
adc
xchg
or
divb
adc
test
je
and
sbb
mov
sub
addb
int3
mov
pop
in
sti
push
xchg
dec
cli
sub
ret
adc
inc
test
shll
xor
or
and
add
dec
pop
sti
rclb
or
or
test
movups
repz
jl
pop
std
jle
pop
std
test
push
sub
lahf
jnp
add
mov
pop
sbb
mov
leave
xchg
adc
inc
fmul
das
pop
jne
icebp
jae
xchg
fs
lahf
insl
pop
pop
out
das
push
mov
and
push
cli
dec
jmp
add
dec
dec
jbe
mov
pushf
jae
xor
mov
or
daa
adc
lcall
or
ja
lahf
jecxz
sbb
shlb
cmp
or
pop
pusha
shlb
cmc
arpl
sar
cmpsl
outsb
mov
mov
sub
and
mov
dec
fwait
and
hlt
cltd
jnp
imul
push
das
add
popf
js
pop
sub
pop
jge
aam
cli
outsb
loop
clc
add
sbb
pop
jb
cmpsl
push
mov
inc
call
cmpsl
hlt
add
add
pushl
aam
push
scas
int
jl
movsb
int
int
arpl
ret
imul
lret
and
adc
cmpsb
call
push
xchg
sub
out
dec
xchg
aam
sbb
inc
pop
call
daa
mov
jge
lahf
dec
daa
lea
pop
data16
ja
mov
dec
divb
jae
mov
fimull
mov
ret
push
in
movsb
call
out
push
and
stos
fs
push
xlat
dec
or
pop
fidivrl
leave
popa
in
jmp
imul
and
sti
fldenv
test
popf
push
test
lcall
and
int3
outsl
xchg
cmp
xor
in
cli
add
pushl
pushl
call
mov
jmp
ret
sbb
sub
jno
pop
or
hlt
icebp
leave
jo
jo
jle
jo
mov
jb
pop
jnp
out
adc
adc
sahf
pop
popa
push
sub
arpl
push
add
insl
lock
cmpsb
es
mov
bound
movsl
fisubrs
ret
mov
shrl
and
add
aas
push
incb
iret
stos
mov
xlat
daa
and
loopne
stos
mov
scas
pop
dec
cld
enter
xor
hlt
cmpl
les
aam
fcomp
push
and
mov
mov
mov
je
cmpsb
sub
add
mov
push
out
jbe
or
dec
push
push
jb
jg
test
inc
and
jecxz
inc
add
std
mov
cs
mov
xchg
andl
pop
xchg
fisubrs
cs
push
cmp
dec
pop
dec
sbb
cltd
dec
or
cmp
push
orl
test
sahf
in
push
pop
mov
push
lods
scas
fsubrl
sub
pop
inc
aaa
cmp
and
std
ds
sub
dec
sahf
dec
push
or
mov
stos
jmp
adc
jnp
add
xchg
add
stc
lahf
aas
out
loop
popa
out
dec
mov
xor
mov
fwait
dec
jbe
fnstsw
xchg
jp
imul
out
dec
insl
xchg
jmp
or
pcmpeqd
cmpsb
sbbb
jecxz
es
lds
sub
add
shll
popf
adc
jmp
inc
gs
dec
sbb
mov
jmp
cmc
loop
sbb
xchg
jae
sbb
inc
push
leave
movsb
mov
push
inc
outsb
ss
push
test
cmc
mov
shl
or
aam
push
add
hlt
imul
push
es
xchg
movsl
repz
lcall
sbb
xor
cmovae
mov
test
jne
cmpsb
in
test
shrb
enter
inc
aam
or
clc
push
int3
in
cmp
or
or
jb
addr16
push
int
fisttpl
subl
adc
mov
clc
arpl
cs
dec
add
pusha
mov
fadds
orl
ficoml
mov
or
test
mov
icebp
mov
fwait
inc
int
and
cmc
mov
leave
dec
mov
cmp
fnstsw
das
xor
adc
push
mulb
out
mov
rcr
jg
mov
jmp
pusha
xchg
pusha
aam
push
data16
shll
adc
lods
xor
dec
mov
add
fdecstp
iret
je
dec
clc
xor
jmp
add
mov
jb
jge
jge
insl
divb
adc
jo
jle
jo
cli
inc
pop
in
stos
add
inc
push
aas
fcomps
sub
xchg
pop
adc
ror
push
out
push
lea
dec
ja
mov
lahf
mov
adc
adc
stos
pop
pop
inc
mov
cmp
add
enter
or
mov
in
add
mov
push
aaa
out
fildll
mov
dec
ss
outsb
inc
ret
sbb
outsb
adc
test
add
ret
sub
jg
xchg
or
in
rol
ret
mov
sub
fs
mov
or
mov
lahf
pop
fidivrl
cmp
jbe
aam
cli
fistl
mov
xor
sbb
sbb
mov
dec
jle
mov
jecxz
or
xchg
cli
jbe
sbb
sbb
xchg
insl
and
dec
scas
pop
bound
mov
sub
scas
daa
movsl
sub
mov
and
and
add
into
lcall
push
sub
cs
fs
pop
cmpsb
pop
lods
in
sahf
lcall
mov
cmp
adc
shl
movsl
inc
or
int
jbe
std
fbld
call
pop
inc
lcall
sarb
movsl
in
add
nop
pop
mov
stc
pop
lcall
jmp
cmp
pushf
lcall
mov
ljmp
test
cli
enter
fnstenv
shl
inc
pop
lock
sbb
mov
scas
cltd
xor
mov
cmp
push
pop
mov
lahf
mull
inc
mov
test
fisubs
pop
shr
mov
adc
test
sub
mov
mov
cmc
test
insb
inc
pop
dec
out
inc
out
cmp
xchg
pop
sti
cmpsb
adc
xorl
or
inc
adc
sbb
mov
inc
xor
stos
adcb
inc
mov
adc
mov
xor
and
sbb
jae
fisttpl
test
and
mov
lods
pusha
inc
in
xor
pushf
adc
lret
sbb
lcall
mov
in
negl
fistl
les
dec
stos
inc
dec
iret
xchg
aaa
cli
cltd
aad
mov
das
int3
into
sbb
pop
xchg
jb
test
pop
mov
lret
cmp
repz
sbb
pop
shlb
pop
and
mov
cmp
outsb
sbb
sbb
ds
add
mov
jmp
xchg
fucomip
stc
ja
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
icebp
sbb
imul
outsl
stc
cmp
jg
mov
mov
test
pop
ds
sub
push
adc
sbb
pop
and
int
hlt
or
movsl
test
lcall
sub
cmpsb
dec
dec
jo
int
in
nop
and
dec
decl
or
mov
mov
fstl
int3
inc
or
xchg
pop
jmp
adc
repz
shlb
enter
popf
scas
add
inc
pop
out
lret
cmp
in
pmaxsw
iret
lret
daa
leave
xchg
or
scas
fcmovb
add
andb
or
adc
inc
pop
lea
and
test
stos
cmp
cmc
sti
aaa
mov
insl
and
and
sarb
inc
push
sbb
xlat
pop
dec
cmp
jp
call
and
xchg
jle
xor
popa
inc
mov
xor
mov
sub
maskmovq
pop
mov
push
std
out
inc
mov
sbb
imul
enter
xchg
mov
push
fcmovne
in
sbb
inc
movsl
bnd
mov
cwtl
push
in
std
cmp
sbb
cmp
mov
push
rorb
pop
xor
dec
es
xchg
fisttpll
movsb
testl
mov
or
mov
mov
js
scas
mov
xor
mov
insb
sbb
out
mov
outsl
dec
add
adc
sub
jmp
add
mov
enter
mov
cmc
ja
sbbb
test
adc
xchg
push
xlat
sub
mov
cmp
sti
and
jns
fbld
pusha
mov
and
fiaddl
push
out
out
fdivrp
mov
sbb
in
sbb
mov
push
bound
dec
cmc
inc
jo
adc
fnsave
ret
into
mov
sbb
pop
xchg
mov
das
or
loope
pop
sub
ret
loop
mov
and
ljmp
jb
mov
jle
mov
dec
jae
inc
mov
fldenv
fdivs
into
mov
cmp
or
mov
sub
jne
shrb
int3
cs
mov
mov
sbb
xchg
out
inc
pop
outsl
jmp
adc
lods
xchg
repz
lods
sbb
scas
mov
xchg
mov
mov
jmp
stc
pusha
mov
sub
jno
stos
shll
icebp
lret
into
cld
jns
add
lods
cmp
mov
mov
imul
pop
xchg
sub
xchg
dec
mov
imul
jmp
aas
fidivrl
sbb
bound
sub
aas
or
data16
js
jo
jle
jo
adcl
pop
or
jg
jbe
bound
sub
mov
ret
jae
inc
add
mov
mov
lock
icebp
and
jnp
add
jp
push
mov
pop
sub
addb
stos
cltd
scas
push
inc
mov
push
mov
dec
dec
mov
inc
icebp
rcrl
in
sbb
add
xchg
data16
sahf
mov
pop
inc
add
adc
movsl
js
ja
ja
xlat
dec
push
cmpl
test
cs
in
sub
call
cwtl
push
daa
jecxz
lahf
push
cld
cwtl
divl
icebp
xor
mov
in
aam
jmp
mov
in
in
call
xchg
out
push
adc
pop
scas
aas
mov
loop
jnp
test
stc
adc
adc
adc
shrl
mov
ss
fsubs
mov
negl
jp
mov
pop
lods
push
adc
enter
pop
push
mov
nop
and
xchg
mov
cmpsl
sub
and
add
mov
cmp
jg
pop
sub
test
add
les
adc
stc
push
xor
ret
mov
fstpl
mov
int3
sti
movsl
or
xchg
adc
in
cmp
aad
and
scas
pushf
js
rcll
in
loop
sbb
add
mov
leave
sub
popa
or
pusha
or
dec
dec
pop
inc
mov
ret
imull
and
movsb
imull
cmpsb
xchg
sbb
rcll
or
mov
sub
pop
sbb
sbb
jns
std
sub
push
push
mov
add
call
or
mov
inc
jne
inc
sarl
sub
cmp
jle
in
cmc
cwtl
sbb
pop
pop
pusha
mov
rolb
cs
push
fnstsw
les
jecxz
push
out
cli
pop
jg
loopne
loop
repnz
add
jae
cmpsl
and
movb
add
orl
cmp
mov
fisttpll
nop
or
push
add
and
xor
and
add
scas
push
ds
pop
iret
shlb
mov
xor
aam
mov
add
mov
ss
xor
lds
sbb
leave
jbe
sbb
mov
sbb
rcrl
mov
or
cmpsl
jb
shlb
icebp
fcmovbe
sub
or
mov
xchg
cwtl
hlt
fmuls
add
sti
jmp
in
out
sbb
sub
mov
mov
mov
xor
mov
jmp
mov
jne
pop
push
fnstcw
add
jo
lods
xor
xchg
jge
lahf
pop
dec
lock
pop
mov
in
cmpsb
fisttps
lods
cmc
cmp
push
or
hlt
pop
in
inc
dec
jo
inc
cmpsl
xor
scas
adc
and
nop
mov
imulb
cmp
aaa
push
ret
je
push
mov
pop
dec
add
or
cmpsb
loopne
jmp
call
pop
add
outsl
and
cmp
ret
mov
xchg
pop
mov
mul
jl
cwtl
push
push
jmp
sbbb
mul
in
lods
mov
jmp
out
fsubs
out
jnp
xchg
aam
scas
cmp
and
mov
xchg
out
in
out
enter
lret
add
add
jle
push
mov
es
out
rolb
in
jns
add
shlb
and
js
mov
adc
cmp
imull
hlt
ficoml
pop
data16
out
xor
call
ds
loope
and
or
or
loope
divl
lods
ret
hlt
add
arpl
out
mov
or
xchg
test
pop
loop
arpl
jle
fnstenv
in
mov
or
nop
clc
mov
movsb
mov
lcall
lret
mov
xchg
xchg
adc
jb
aas
jle
cwtl
jge
jae
and
fdivrs
stos
test
or
std
cmc
fidivrs
scas
arpl
add
insl
jae
push
jp
dec
movb
fildll
xchg
enter
mov
std
push
aam
sub
push
fidivrl
mov
sbb
fdivr
sbb
ljmp
dec
sub
dec
sti
imull
clc
jns
mov
sbb
popf
cmc
loop
fwait
aad
or
adc
jmp
jnp
mov
sbb
ret
or
adc
lret
rcrl
out
inc
rolb
mov
xor
in
xor
repz
sub
addr16
shll
gs
sbb
dec
xchg
loope
push
mov
enter
mov
into
aaa
sbb
fxch
sbb
scas
dec
out
inc
mov
mov
out
ficoms
push
jne
cmc
in
pop
jns
aam
leave
std
adc
xor
inc
jb
pusha
insl
jo
mov
aam
or
pushf
lods
std
popa
call
adc
inc
dec
call
add
and
pop
xchg
xchg
inc
xchg
push
outsl
daa
je
sbb
in
pop
mov
fcomps
clc
insb
test
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
sub
sub
xchg
push
mov
sbb
jg
mov
cmp
jecxz
lods
clc
fsubrl
je
leave
outsl
je
cmpb
mov
insl
in
xor
fnstenv
add
sub
ret
adc
mov
mov
xor
adc
es
loope
pusha
jp
iret
lods
inc
sub
clc
insb
icebp
les
and
xcrypt-cfb
cmpsl
jecxz
push
lcall
popa
ljmp
mov
xlat
dec
out
sub
aas
adc
out
out
imul
lock
ficoms
sti
lret
xchg
xchg
fucomip
sti
leave
or
sub
jno
insb
movsl
pop
push
js
mov
pop
mov
xchg
pop
addr16
xor
rcll
iret
adc
fldln2
sub
rcrb
dec
pop
out
sbb
ret
cmp
test
push
jmp
and
pop
mov
fdivr
in
push
mov
loope
lahf
nop
xchg
scas
adc
lods
cld
mov
jge
adc
movsb
add
xor
or
jno
dec
out
sub
xlat
dec
sbb
test
jnp
outsb
pop
and
shll
mov
jns
add
bound
lret
add
jmp
push
sti
je
xor
push
or
dec
add
cld
aas
in
inc
rorl
mov
pop
inc
sub
push
mov
stos
daa
ss
or
in
xor
dec
and
jnp
mov
movsb
adc
loopne
mov
mov
xlat
pmullw
or
fdivl
cmc
sub
mov
aas
push
icebp
pop
scas
inc
sbb
inc
add
mov
lret
sub
das
test
push
repz
xchg
mov
add
inc
in
xor
push
popf
jne
pop
ficompl
xor
sbb
push
bnd
mov
cld
je
sbb
inc
mov
into
jo
xor
mov
mov
and
jns
mov
outsb
xchg
adc
mov
or
test
outsl
cltd
mov
mov
mov
inc
and
dec
xchg
adc
testl
push
cmp
jmp
cltd
lods
aad
mov
mov
add
add
jo
xchg
jo
sub
sbb
test
and
xchg
es
addb
jl
sbb
mov
push
insb
and
mov
jp
push
xor
cwtl
sub
lcall
dec
lcall
mov
aas
inc
mov
jb
push
push
mov
insb
pop
mov
add
div
mov
jmp
adc
inc
rolb
xchg
int
rcll
test
movq
jle
jo
outsl
das
pop
pop
rcrb
addr16
test
enter
insb
fmul
aas
push
add
xchg
in
ja
sub
addr16
cld
mov
cmp
add
cli
stos
xchg
sti
cmp
imul
jmp
insb
decl
ficomps
mov
sbb
jmp
test
sbb
mov
int3
ljmp
sahf
push
arpl
fidivrs
mov
cmp
push
lret
filds
enter
into
test
cmpsb
fcmovnu
mov
inc
mov
hlt
sub
and
adc
jle
dec
mov
out
subb
cmc
and
sbb
mov
stos
mov
and
mov
sub
lock
fnsave
pop
sbb
mov
adc
movsl
cmc
push
insl
leave
inc
push
movsb
mov
inc
cmp
loopne
data16
adc
je
and
jmp
cmp
mov
xor
and
sbb
sahf
shlb
jmp
bnd
push
ficoml
mov
pop
and
pop
mov
test
xor
push
es
adcl
inc
push
ja
dec
mov
and
push
rol
add
and
shr
adc
xchg
mov
mov
aas
xchg
sbb
aam
fcompl
push
lds
fmul
ret
push
movsb
loop
in
push
pushf
cmp
push
test
pop
mov
mov
clc
sti
ljmp
dec
popf
test
mov
pop
or
jl
in
adc
mov
in
out
fwait
jecxz
sub
adc
fstl
lret
cmp
or
cmp
leave
shlb
pop
mov
popa
fsubr
sub
lea
mov
and
and
js
shrl
lds
cltd
mov
leave
scas
orb
sbb
ja
cmc
lret
sti
test
pop
mov
xcrypt-ctr
cmpsl
pop
lahf
js
insl
or
inc
hlt
ja
iret
fsubrl
xor
inc
outsl
ret
jmp
inc
inc
test
fwait
rcrb
ja
mov
gs
loope
mov
out
cmp
aaa
setl
pusha
movsl
sbb
popf
lcall
sbb
lret
stc
push
push
cmp
imul
fstpt
dec
push
jno
xchg
sahf
inc
aad
std
xlat
ret
mov
popa
cmp
add
loopne
xchg
mov
sbb
push
xor
lea
jmp
sub
mov
popa
pop
xchg
aas
mov
or
jo
pop
lea
imul
inc
gs
test
jns
mov
stos
ja
mov
push
imul
aas
testb
adc
fimull
push
scas
mov
and
addb
sahf
std
xchg
mov
ja
lret
aad
push
jo
sub
sub
and
or
mull
repnz
test
into
or
fsts
add
jmp
leave
adc
sbb
push
stos
mov
loope
fimuls
xlat
outsb
mov
addr16
sarb
loopne
fmull
xchg
in
and
addr16
ret
aad
pusha
sti
sbb
cltd
jb
rclb
cmp
test
cltd
repz
sub
xchg
jge
jmp
mov
lret
jecxz
fldl
mov
clc
lret
cmc
mov
sub
popf
scas
push
xor
cmpsl
cmp
push
in
xchg
adc
sbb
shlb
lods
scas
cmc
lea
xor
pop
into
sub
out
mov
and
out
or
mov
out
sbb
je
dec
xor
mov
fucomp
dec
push
movsb
sahf
push
cmp
ficoml
push
push
imul
es
inc
data16
mov
arpl
jg
inc
push
jge
push
inc
xor
outsb
mov
les
or
mov
pop
ret
or
call
add
sbbb
pop
and
insl
lret
fimuls
nop
hlt
mov
fxch
pop
fnstenv
stos
pop
mov
jge
add
jmp
pop
mov
sarl
aad
call
adc
jnp
mov
mov
testb
imul
mov
push
repz
push
fnstenv
rol
leave
xchg
data16
enter
mov
cwtl
bound
jge
enter
std
mov
int3
pop
jmp
mov
stos
xchg
int3
rcl
adc
pop
cmp
outsl
test
inc
imul
ds
in
mov
je
push
sbb
in
mov
and
and
add
fildl
js
add
sbb
xchg
sub
cld
push
jecxz
xchg
mov
pop
bound
pop
pop
rclb
adc
call
leave
notb
inc
gs
and
stos
fs
add
je
sub
leave
sarb
leave
mov
in
in
mov
sahf
xchg
xor
cld
stos
test
push
or
xchg
mov
jmp
dec
fistpll
arpl
pop
jp
lea
xchg
mov
stos
xchg
and
sarl
and
jb
inc
xchg
xor
mov
rcl
add
push
dec
scas
dec
leave
ret
ja
or
push
adc
nop
dec
insl
cmp
adc
or
jecxz
mov
mov
lret
ljmp
add
sbb
mov
or
xchg
mov
out
mov
push
xchg
repnz
out
lods
cmp
or
xchg
jns
xor
dec
cld
mov
jg
data16
lret
or
jae
sarb
xchg
or
ljmp
add
lahf
push
fdivrl
sbb
in
pop
shll
jl
jnp
jo
xor
frstor
mov
jo
jbe
inc
stos
inc
push
pusha
test
mov
pop
mov
mov
jbe
sbb
or
int
jg
mov
pop
das
mov
gs
out
lods
push
sub
push
jp
pop
in
adc
lahf
call
scas
movsl
in
rorb
scas
dec
push
dec
lds
or
add
nop
push
inc
sub
gs
adc
pusha
jns
adc
mov
push
jmp
cwtl
and
or
cli
xchg
xchg
sbb
sub
jnp
stos
push
sbb
imul
fidivl
mov
add
inc
fstl
ret
imul
das
dec
mov
xchg
rolb
cmp
push
out
sbb
lret
mov
jl
adc
push
xchg
sub
nop
incb
sbb
stos
movsl
push
mov
inc
das
fistps
inc
out
jl
aam
jb
dec
jno
repz
push
test
lea
loop
jp
push
pop
xchg
sub
add
add
je
mull
add
fwait
aaa
iret
lds
cli
out
xchg
dec
push
sub
in
xor
sti
fmull
xchg
fstl
js
add
xchg
jp
shll
rcrl
pop
jge
sahf
hlt
jmp
test
movsl
xor
mov
adc
xor
stos
add
pop
pop
div
insb
jp
mov
cli
jmp
sub
aas
out
testb
inc
call
cld
ss
in
mov
test
inc
mov
cmp
cmp
adcl
jns
dec
and
adc
mov
ds
xor
ficompl
mov
xchg
pusha
in
pop
and
testl
push
pop
add
popf
mov
icebp
push
dec
cmc
and
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
jmp
adc
iret
cmpsl
aad
jae
jl
jge,pn
xlat
ljmp
jle
jo
or
jp
sub
popf
les
adc
pop
nop
or
dec
bound
insl
xchg
add
xor
inc
fstpl
scas
repnz
mov
scas
pop
sbb
test
sub
push
das
mov
das
movsb
adc
xchg
push
scas
test
jecxz
push
mov
cmp
push
sub
sbb
push
out
dec
mov
mov
imul
popa
pop
sti
push
test
dec
mov
iret
xchg
jge
pop
mov
xchg
idivl
imul
ret
addb
pop
inc
daa
lret
in
pop
out
ljmp
mov
mov
ret
out
sbb
pop
or
test
insb
mov
popl
scas
data16
lret
gs
repz
movsl
jns
fwait
cmp
fs
xor
or
test
inc
dec
roll
sub
leave
dec
or
xorb
inc
xchg
pop
or
inc
cmp
dec
jmp
iret
mov
jmp
jns
mov
dec
xchg
rcl
sub
adc
scas
shr
ret
popf
orl
sbb
in
imul
out
js
aas
pop
dec
inc
inc
xlat
addr16
cltd
jg
push
mov
xor
cs
sti
test
mov
add
jns
fisubrl
bound
es
enter
shlb
jae
ss
mov
xchg
aam
mov
jmp
pop
into
adc
test
xchg
jbe
add
xchg
cmpsl
cs
je
xor
out
iret
mov
jns
scas
push
call
xlat
lret
add
xor
xor
popa
cmc
or
xor
mov
mov
leave
add
pop
pop
fsubr
es
out
push
push
mov
ds
cmp
mov
jecxz
xor
leave
aad
jnp
lahf
and
in
nop
orl
sbb
jle
call
out
dec
insb
cmc
adc
xlat
je
out
std
addl
push
adc
dec
mov
dec
scas
or
xchg
call
dec
sarl
or
std
mov
cmp
pop
jle
adc
sub
popf
push
insb
je
cmp
dec
lahf
addr16
cmp
ret
jb
push
or
sbb
pxor
jno
stos
loope
cmp
aaa
mov
lcall
jb
cmp
adc
int
ja
sub
insb
shlb
daa
pop
mov
dec
movsb
lds
mov
or
xor
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
jmp
or
shll
jno
jmp
lds
enter
jg
mov
push
sub
fsubs
push
data16
push
andb
pop
movsl
dec
mov
hlt
cmp
inc
je
loope
inc
aad
dec
mov
mov
pop
lods
lret
scas
fldt
push
cld
jns
mov
push
pusha
sub
push
mov
adc
adc
or
lret
xorl
sahf
cmc
adc
aaa
negb
fnstenv
adc
arpl
stos
push
lret
imul
xor
ja
inc
sarb
insb
outsl
sbb
adc
fwait
loope
xchg
imul
adc
ret
repnz
lods
push
dec
jb
sbbb
mov
sbb
mov
idivl
inc
adc
jecxz
xchg
shlb
outsb
jnp
dec
sbb
jmp
movsl
mov
pop
outsb
push
or
mull
rol
or
imulb
sbb
repnz
popa
lock
insb
and
sbb
pop
fnstenv
push
leave
cli
jbe
inc
push
out
cli
std
popa
lret
in
or
iret
xor
popf
mov
push
xchg
or
xor
movsl
ja
add
lahf
push
nop
adc
jecxz
fiadds
and
jmp
adc
lret
mov
aas
lock
and
sub
mov
jecxz
cmp
test
stos
xchg
rcrl
aad
les
dec
mov
lods
iret
pop
out
lret
mov
push
xor
shrl
mov
inc
sub
pop
inc
push
sarb
xchg
shlb
push
sbb
and
xor
addl
pushf
pushf
popf
lods
mov
in
push
xor
in
fcmovu
scas
lods
subl
pop
add
xor
cmp
mov
push
push
popl
out
add
cmpsb
aad
mov
test
dec
outsl
scas
push
lea
jle
call
jecxz
jmp
into
ja
xchg
jl
jmp
cmpsb
pop
inc
fsubs
lods
xor
jbe
popf
fs
add
xchg
jl
je
fiaddl
dec
das
out
jno
push
jno
jl
gs
mov
or
shl
imul
sbb
jmp
test
inc
dec
push
rcrl
test
fldenv
int
jle
movntq
pusha
or
jno
jl
pusha
arpl
stc
inc
xor
mov
xchg
push
pop
push
pop
inc
xchg
sub
jmp
cmc
icebp
lret
mov
test
jnp
push
pop
call
mov
mov
arpl
sub
jnp
sti
adc
add
stc
mov
scas
stos
enter
loop
test
call
int3
fstl
sbb
pop
or
push
mov
mov
cmp
arpl
push
test
test
xor
hlt
fyl2xp1
push
xchg
xor
fnstenv
mov
loop
iret
arpl
fidivrl
insb
dec
mov
fcompl
shll
xor
dec
lods
or
jnp
int3
mov
in
dec
loop
push
arpl
push
xchg
and
jns
mov
mov
das
sarl
jg
cmp
icebp
adc
dec
iret
in
and
adc
lcall
test
pop
jns
or
into
and
in
lock
dec
clc
out
inc
pop
mov
loope
pop
lea
subl
xchg
into
sub
jne
ja
jb
fists
fnstenv
push
mov
jb
int
push
cmpsl
movsb
pop
sub
aas
arpl
cmp
xchg
ss
bound
ljmp
adc
push
rorb
loopne
imul
inc
mov
jmp
cmpsb
xor
adc
xorl
mov
jo
jns
test
push
pop
or
fmuls
sbb
aas
jbe
sub
jb
push
mov
dec
scas
jae
inc
popa
dec
cmp
mov
mov
rclb
out
fs
stos
and
hlt
movsb
dec
loopne
jg
sub
into
dec
adc
std
ret
stos
xor
imul
jns
pop
push
mov
idivl
fincstp
xchg
je
rol
shl
pop
das
dec
iret
sahf
shll
out
push
mov
pop
les
mov
xchg
and
loope
add
dec
mov
lcall
cmp
decb
and
inc
xor
sbb
cld
aas
ret
mov
push
mov
push
cmp
jae
mov
stc
jnp
or
call
clc
mov
sbb
mov
sbb
loop
in
push
push
or
divl
sbb
ret
fwait
es
icebp
fisttpll
fistl
divl
fnsave
xchg
testb
out
cmp
lret
or
xor
fstl
clc
cli
dec
sbb
mov
xor
jbe
js
lahf
jo
xchg
in
dec
roll
add
std
fs
jno
mov
ret
out
pop
jg
mov
add
decb
jmp
pop
pop
jge
push
cwtl
test
cs
mov
adc
ss
in
jge
push
mov
jle
xchg
pop
stc
cs
inc
test
movzbl
movsb
add
gs
push
push
mov
inc
mov
adc
inc
mov
mov
mov
push
inc
pop
push
jmp
or
jnp
sub
mov
je
push
mov
adc
lcall
cltd
sub
xor
jecxz
lods
sub
fsub
push
jo
pop
mov
outsb
lods
ret
shlb
subb
je
mov
sbb
cmp
jle
mov
sbb
mov
sbb
cmp
xchg
aaa
xchg
mov
mov
cltd
sub
test
push
popf
pushf
sub
mov
jg
jns
dec
mov
repnz
testl
enter
out
ret
inc
dec
push
mov
gs
enter
shrb
aas
int
fmuls
xchg
outsb
jmp
test
out
and
lods
push
push
dec
bound
push
inc
xchg
scas
sub
mov
dec
lock
fsubrp
in
jno
jae
aam
mov
cltd
mov
lea
adc
adc
in
gs
int
jbe
and
incl
xchg
in
jp
jge
mov
inc
outsl
mul
jg
add
push
mov
push
mov
js
xchg
ret
out
mov
pop
sahf
pop
pop
jecxz
fists
insl
xchg
sbb
lcall
fcmove
cmp
fwait
xchg
dec
test
scas
and
sbb
push
cli
adc
movsb
pop
cmp
sbbl
or
jns
int3
jg
sar
xchg
mov
jl
rcll
lret
push
insl
push
iret
fidivrl
shl
dec
mov
push
into
xor
mov
pop
ret
dec
add
mov
sub
mov
sahf
std
cmp
ror
xorb
fs
cmp
jb
and
movsb
mov
jg
xchg
or
push
and
out
mov
cmp
push
jl
sub
xchg
fs
jp
sub
adc
cmpl
je
test
in
push
fbld
inc
mov
inc
cmpsl
loope
or
dec
mov
cmp
mov
das
pop
adc
popl
jnp
push
or
add
into
enter
push
enter
lea
inc
in
filds
add
outsb
ds
loopne
outsb
outsb
mov
push
adc
out
sbb
jo
jle
jo
mov
inc
in
adc
sbb
push
rcrl
inc
outsb
adc
inc
jo
aaa
xor
daa
scas
adc
jl
aam
sbb
ljmp
sahf
iret
lds
push
jle
push
or
insb
ret
iret
mov
and
sarb
insl
popa
aaa
enter
ljmp
repnz
cmp
jmp
lock
add
add
adc
and
fmuls
mov
push
pop
mov
mov
lods
fbstp
pop
mov
push
pop
push
les
outsb
sahf
inc
imul
ds
cmpsb
lock
pop
cmp
sub
cmpsb
clc
pop
out
mov
cs
test
in
movsb
into
cmp
testb
sbb
or
xor
mov
inc
ja
mov
lea
jge
cmp
lret
setbe
jecxz
xchg
iret
shlb
jmp
pop
lock
sti
sbb
test
ret
inc
gs
jbe
pop
pop
insb
mov
fildll
in
sbb
les
and
je
lahf
int3
test
int3
cmp
es
test
loopne
sahf
imul
sbb
aam
xchg
mov
jle
jo
mov
jb
sbb
mov
and
sub
fdivs
lods
mov
bound
pushf
mov
push
mov
mov
jne
sbb
mov
xchg
xchg
push
sbbb
and
popf
jns
mov
cmp
shlb
ss
lcall
jle
fisttpll
push
icebp
mov
inc
or
decl
xchg
mov
dec
inc
and
dec
inc
lcall
mov
or
out
mov
xchg
and
lock
movsb
cmp
xor
jle
cli
pushl
rcrb
in
scas
sub
jecxz
adc
cld
adc
mov
dec
mov
dec
aam
imul
orb
scas
mov
in
xchg
fisubrl
xor
test
movsl
inc
jo
das
mull
les
and
cmp
cmpsl
fldcw
or
pusha
ret
lahf
push
adc
int
subl
xor
cltd
adc
fwait
orb
pusha
mov
cld
jg
sahf
sub
es
jae
push
mov
cmp
fmuls
roll
xchg
push
xor
mov
jmp
cmp
push
add
data16
and
movsb
mov
jg
mov
daa
jmp
in
xchg
cmp
cmp
mov
inc
dec
dec
mov
repnz
mov
popf
ja
dec
push
mov
and
nop
jo
push
insl
jmp
sub
idivb
icebp
leave
adc
lock
lods
ret
enter
fisubrs
adc
dec
xchg
loop
pop
push
push
mov
dec
fnstsw
mov
rcr
int
movsb
inc
xchg
dec
shll
cmp
mov
push
xor
xor
push
pop
inc
adc
fsubrs
insb
and
push
enter
sub
pushf
jbe
and
rcl
mov
add
cmp
popa
sbb
int3
loope
pusha
xor
cmc
inc
push
mov
jno
mov
mov
andl
jnp
mov
fstl
dec
lods
mov
adc
test
dec
jo
jae
movsl
mov
cmp
xchg
adc
and
test
movsb
arpl
das
mov
mov
clc
lahf
adc
negb
int3
testl
insb
xor
xchg
rorb
inc
sbb
adc
mov
lahf
xor
pusha
je
jle
dec
pushf
push
dec
xor
in
xchg
xchg
aaa
push
mov
xchg
pop
xrelease
xor
mov
xor
cmp
mov
jno
cltd
loop
cmp
or
shrl
xchg
popa
pop
mov
push
pop
bound
adc
xchg
sete
sbb
js
aam
and
popa
mov
test
mov
cmp
adc
or
mov
mov
aad
mov
pop
mov
lcall
xor
repnz
cmp
push
sub
rcrb
fucom
mov
push
adc
fldt
sti
mov
jns
pop
mov
push
into
push
jle
add
gs
adc
dec
xlat
iret
icebp
leave
push
dec
push
in
mov
sbb
ljmp
aaa
icebp
jbe
sub
sbb
sub
mov
inc
out
stos
jmp
inc
cltd
xor
pop
jnp
fsubrp
out
pop
jnp
fdivrs
in
jae
mov
loope
sbb
hlt
inc
cmc
xchg
shr
mov
enter
fmuls
lea
lods
adc
push
iret
jns
push
pop
cmp
pusha
cmp
fs
fcompl
mov
mov
cli
lahf
dec
mov
xchg
mov
add
repz
outsb
popf
cmp
jg
and
push
les
mov
cwtl
jg
push
xor
xchg
into
gs
xorl
fbstp
inc
dec
inc
add
dec
jmp
fsubp
stos
mov
insb
leave
pop
sub
jo,pt
pop
jo
jg
mov
sbb
sahf
mull
pop
out
adc
adc
xchg
pop
sbb
scas
adc
jle,pt
pop
cmpb
ret
and
cltd
xchg
addr16
jl
mov
jb
mov
inc
or
pop
lds
cmp
es
sub
adc
dec
jp
inc
jne
mov
or
cmp
hlt
gs
push
mov
lret
jb
mov
sti
or
sbb
push
sarb
out
push
shrl
dec
jmp
jnp
push
movsb
xchg
inc
mov
mov
sbb
out
sub
subb
shrb
jmp
lods
pop
pop
mulb
into
lods
test
jl
mov
and
dec
sub
daa
out
adc
add
xor
push
adc
insl
push
push
cli
pop
pop
pop
lcall
pop
ret
xchg
sub
add
mov
shlb
aas
push
mov
mov
popf
lods
mov
cmp
lret
rcrb
sub
lcall
ffree
sub
jbe
and
je
add
pop
addr16
cmpsb
out
testl
mov
pop
lock
pushf
pop
iret
jne
les
test
stos
sahf
cmpsb
mov
cs
ficoms
repnz
sbb
xor
aaa
dec
aam
jl
xor
cmp
mov
mov
mov
xchg
lds
call
fsubrl
adc
lret
mov
mov
push
xchg
mov
orb
sbb
sbb
adc
pop
xor
fadds
dec
popa
rcrb
mov
xor
cltd
mov
xlat
push
or
mov
mov
add
bound
sub
lret
adc
enter
jnp
test
cltd
adc
cmpsl
dec
sbb
ficomps
arpl
add
mov
push
xlat
pop
xor
adc
inc
xchg
push
mov
lcall
out
andb
sti
lods
xor
dec
shlb
inc
lcall
push
mov
pop
mov
or
int3
mov
andl
xchg
fwait
call
adcb
push
pop
imul
repnz
xchg
lea
sub
enter
int3
cmp
dec
inc
aas
push
rcrb
dec
icebp
daa
popf
mov
mov
push
outsl
ret
sub
xor
dec
jb
rolb
pop
hlt
pop
mov
pop
jmp
cld
pop
cmpsl
addr16
gs
mov
negl
and
jo
jle
jo
sub
pushw
mov
inc
inc
scas
insl
sti
das
dec
mov
and
nop
jg
vpslld
push
out
in
sahf
scas
lahf
push
filds
ffreep
push
cmp
int
cmp
cmp
pop
scas
xchg
mov
cmp
cmp
out
push
cli
xchg
aas
adc
repnz
imul
insl
ljmp
dec
mov
cmp
sub
pop
jno
mov
xor
outsl
pop
shrb
mov
pop
das
add
scas
push
lods
mov
into
inc
cs
xchg
add
insb
jg
add
xchg
jns
dec
inc
fistpl
mov
jb
lret
ds
jbe
fwait
xor
lea
or
inc
out
mulb
push
icebp
adc
pop
pop
pop
push
xor
and
stos
popf
mov
push
dec
xor
addr16
jmp
mov
mov
sub
xchg
sbb
lret
mov
inc
mull
sub
mov
addr16
mov
in
adc
in
sub
int3
lahf
push
cmpsl
lods
and
sub
outsl
jg
sbb
rorl
into
and
mov
mov
sarl
sbb
mov
or
nop
xchg
cmpsb
lcall
fbld
mov
dec
dec
imul
in
sub
push
ja
mov
sbb
lods
stos
call
mov
adc
xchg
int
push
dec
sbb
lods
andb
cmp
mov
mov
mov
les
adc
lcall
mov
lock
adc
add
or
mov
mov
dec
dec
icebp
or
andl
mov
int
ss
dec
stos
or
dec
clc
jo
dec
fistps
in
cs
cltd
outsb
jo
mov
lcall
mov
mov
sub
in
xchg
out
mov
mov
adc
pop
xor
daa
je
add
test
imul
and
adc
add
pop
popa
insb
gs
mov
add
sti
pop
dec
fstps
leave
add
xchg
or
jne
mov
xchg
lds
or
xchg
hlt
movsb
std
sbb
pop
loop
add
andl
imul
aaa
sub
mov
pop
sbb
add
sarb
mov
fs
mov
adc
daa
jbe
insl
mov
insb
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
