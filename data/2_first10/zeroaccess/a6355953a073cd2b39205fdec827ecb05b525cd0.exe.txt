push
mov
sub
sbb
mov
mov
mov
add
mov
decl
mov
sbbl
push
push
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
xor
push
mov
mov
sub
imul
mov
adcl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
jmp
test
push
movsb
jb
jl
pop
or
mov
jle
jg
jle
xlat
cmp
pop
add
or
xor
int3
and
sbb
inc
fs
out
mov
es
test
call
add
dec
stos
push
sub
sarb
mov
stos
push
rcl
test
pushf
mov
dec
out
dec
call
mov
and
jnp
ret
xchg
sub
loopne
cld
ljmp
sub
add
sbb
outsl
insl
add
cmp
jno
ds
or
adc
jge
inc
dec
aaa
adc
ja
sbb
ds
hlt
enter
fwait
arpl
inc
pop
aam
jns
js
mov
aas
or
cmpsl
adc
pop
jns
xchg
or
clc
add
push
xor
out
xchg
scas
dec
in
add
mov
xchg
out
add
xchg
out
xor
ret
add
push
aas
leave
xchg
sub
jnp
shlb
lods
mov
xor
sbb
lea
mov
add
mov
in
mov
outsl
int
mov
fs
leave
adc
jae
pop
sbb
dec
dec
int
mov
cs
cld
pop
pop
or
mov
dec
pop
adc
in
or
stos
cmp
xor
cmpsl
add
sub
aam
xchg
push
inc
ds
pop
add
dec
xchg
push
jle
mul
aad
push
jne
sbb
mov
mov
xchg
nop
test
xchg
sbb
imul
cmp
in
rol
and
inc
jae
movsb
icebp
imul
inc
push
mov
adc
lea
xorl
mov
adc
mov
orl
mov
xor
xor
neg
add
mov
movl
lea
sbb
mov
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
xor
add
mov
decl
mov
mov
mov
sbbl
mov
adcl
mov
xorl
movzwl
add
mov
jmp
fisubl
addb
lods
gs
aam
dec
xchg
test
mov
jle
mov
jle
ljmp
leave
mov
push
repnz
mov
in
fisttps
rcrb
pop
xchg
sbb
fdivrs
aas
mov
and
outsb
cmp
cmp
add
push
mov
xchg
pop
push
in
sub
jnp
dec
push
sbb
lods
push
or
dec
cltd
jecxz
mov
test
cmp
out
test
and
data16
mov
sub
outsb
dec
dec
inc
mov
in
test
mov
xchg
lds
pop
daa
inc
loope
shlb
imul
je
insb
hlt
push
inc
test
or
and
mov
inc
in
xorl
dec
into
jge
inc
outsl
je
das
mov
jge
loop
xor
sub
aas
push
mov
test
adc
mov
nop
addb
push
lods
test
mov
push
cs
xchg
cmp
andb
movsl
insb
push
xchg
mov
cmp
mov
adc
insb
add
mov
sub
cmp
cld
jno
pop
fsubrs
dec
adc
data16
mov
mov
xor
cmp
and
pop
pushf
dec
and
stos
test
movsl
in
and
test
mov
add
mov
mov
mov
adc
sub
inc
and
pop
notb
aam
bound
xchg
outsb
mov
inc
pop
fwait
stos
inc
test
or
fisttps
into
lahf
mov
dec
push
inc
pop
mov
inc
push
adcb
std
dec
inc
push
icebp
pop
mov
mov
and
mov
xor
addl
add
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
or
mov
sub
and
mov
mov
addl
xor
orl
add
movl
cmp
jmp
cmp
sub
mov
popf
pusha
div
in
jns
jle
jg
jle
test
shufps
bound
add
or
mov
mov
insl
aas
clc
out
sub
and
jl
outsl
cmc
aam
pop
pop
mov
clc
cmp
cltd
add
dec
pop
dec
dec
test
push
jb
loope
shll
lods
into
cs
arpl
nop
inc
das
pop
jnp
or
push
daa
std
adc
push
sbb
andb
repz
iret
or
je
sub
je
inc
js
jmp
mov
iret
pop
icebp
inc
daa
fstps
sub
jns
jo
xchg
imul
movsl
js
int
fwait
js
add
lretw
or
test
mov
mov
lods
ret
and
add
cmp
jecxz
test
enter
inc
cli
movsb
push
sbb
xor
sub
fisubrs
pop
add
sub
out
add
push
aam
sub
push
and
cmp
repz
inc
adc
pop
inc
push
and
adc
mov
je
test
xlat
pop
push
push
aas
mov
cli
lea
sub
das
jbe
pop
pop
adc
lds
loopne
xchg
and
add
adc
fs
cli
push
mov
je
xchg
cmc
add
lods
lods
mov
loopne
hlt
sub
cld
cmpsb
insb
loop
xchg
aas
loope
jns
ja
lods
add
xchg
or
push
imul
fdivrs
adc
dec
sub
rcrl
jg
xchg
dec
mov
push
ljmp
jbe
add
jnp
test
add
add
add
or
jmp
or
popa
sbb
sbb
bndstx
jle
jg
jle
cmpsl
nop
jnp
popf
mov
imul
mov
int3
icebp
cmpsl
das
xchg
push
xor
test
inc
xchg
mov
addr16
push
clc
imulb
and
std
and
and
push
xchg
push
mov
dec
insl
in
xchg
test
add
jge
rcrb
imul
pushf
mov
out
data16
pop
sub
cmpsb
and
push
jg
loop
sbb
pop
enter
adc
adc
push
push
data16
mov
jnp
add
xchg
mov
xor
jns,pt
pop
sub
jnp
lea
mov
inc
and
mov
dec
gs
scas
xor
adc
xchg
cld
jge
xchg
push
xor
dec
movsl
xor
outsl
adc
negb
shll
or
mov
rcrl
cmpsb
mov
inc
xchg
cmpsb
mov
push
mov
stos
xchg
pop
daa
test
xchg
and
and
push
xor
lds
sub
push
aam
orl
dec
dec
leave
mov
xchg
aam
jb
lods
mov
sub
repnz
sub
dec
lods
pop
cmpsl
pop
or
test
pop
lods
mov
in
pushf
and
out
and
daa
mov
leave
or
pusha
out
dec
nop
push
pop
and
setne
cmpsb
cmc
push
adc
icebp
cmpsl
lret
sub
inc
add
push
sbb
gs
inc
dec
mov
xor
inc
or
add
add
add
add
or
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
xor
mov
sub
add
jmp
icebp
jmp
imul
lea
mov
jle
cmp
flds
inc
shll
sarb
or
inc
cmp
add
cmp
jns
hlt
call
lods
dec
sub
sbb
lahf
lcall
movl
add
negl
and
sbbb
xchg
je
push
mov
out
icebp
divb
xchg
test
int3
in
sub
jb
inc
inc
shlb
mov
in
xlat
daa
call
fnstcw
lret
xor
enter
sub
out
popf
and
pop
loop
loopne
inc
mov
pop
imul
pop
cmp
fwait
sbb
sub
jb
push
js
sbb
jl
mov
cmp
pusha
imull
add
xchg
icebp
ss
cmp
das
push
jp
or
lock
daa
sbb
adc
movsb
aam
xchg
and
jbe
insl
in
or
outsl
add
cmpsl
push
cmpl
mov
xor
pop
lret
jmp
cwtl
clc
nop
test
in
adc
mov
ljmp
mov
call
rorb
mov
push
push
mov
mov
jp
insb
jns
mov
pop
sar
sti
sahf
ss
mov
cmp
daa
xchg
in
leave
adc
ror
popf
add
jge
in
push
add
lods
nop
push
adc
pop
ljmp
cmp
dec
mov
sbb
adc
out
cli
jge
outsb
push
stos
int3
das
cmpsb
xchg
test
sub
inc
or
ljmp
add
cld
movzwl
add
jmp
push
mov
test
mov
pop
push
mov
jle
mov
jle
pop
mov
jne
push
arpl
cld
jae
mov
xlat
xor
jne
aas
stc
das
push
test
mov
out
sbb
cmpsb
popa
mov
cmovs
aad
sub
dec
dec
mov
hlt
or
imul
sbb
ljmp
clc
outsb
dec
bound
inc
pop
mov
or
xchg
cltd
pop
xchg
aam
scas
cld
fs
out
or
adc
test
cmpb
xchg
xchg
jo
jns
or
lds
gs
stos
push
lds
add
addr16
fucomp
popf
int
or
xor
xchg
mov
adc
mov
add
inc
cmp
rolb
and
test
leave
xchg
loope
fstpl
pop
mov
mov
xlat
xor
or
add
mov
ds
xor
xor
mov
imul
or
fdivs
mov
dec
addl
push
xchg
cmp
xchg
mov
push
jb
imul
xchg
mov
aam
mov
mov
xor
dec
cld
das
test
jae
push
orb
pop
and
call
dec
sbb
push
push
jns
cmc
xor
jle
out
add
push
push
pop
nop
mov
xlat
sbb
in
stc
pop
pop
mov
jp
xchg
mov
movsl
jne
xor
xchg
repnz
push
aaa
jl
mov
fisttpl
fisubs
je
aam
jnp
add
adc
out
mov
add
add
loope
cwtl
pop
push
dec
push
and
mov
call
dec
or
movb
xor
sub
jmp
xchg
sahf
loopne
icebp
jo
popa
mov
cmp
cs
xor
rolb
jle
jg
jle
out
dec
test
adcb
push
stos
cmp
addl
int3
ret
ss
adcb
lods
mov
das
jp
push
idivb
out
jl
iret
repz
cli
push
jp
lea
jl
decl
push
jge
aaa
cwtl
pushf
mov
mov
imul
mov
fisttpll
xchg
jp
stc
xor
push
push
sbb
xor
out
pop
ret
jne
das
dec
add
mov
adc
ljmp
mov
mov
ficompl
pusha
mov
gs
push
xchg
sub
imul
sub
movsb
sub
xchg
jae
pop
dec
cmp
stos
dec
lods
mov
test
pop
frstor
addr16
or
js
rorl
gs
scas
xor
jle
jle
scas
mov
popa
push
adc
mov
frstor
test
mov
or
push
inc
mov
mov
sbb
int
mov
adc
or
test
inc
mov
out
pushf
xchg
mov
jo
loop
scas
jmp
pop
or
repnz
insl
pop
xor
cmp
cmc
dec
cmc
jnp
xchg
lds
xchg
popf
in
enter
jno
popa
add
test
les
lock
cmp
roll
ficomps
imul
add
jo
fldcw
aam
pop
push
flds
pushf
mov
mov
movsb
xor
sbb
sar
repz
sub
in
adc
clc
sbb
data16
hlt
dec
adc
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
jmp
pop
sbb
cmp
push
popa
movsb
insl
std
and
add
mov
jle
xor
sbb
xor
adc
add
lret
or
andl
pushf
js
push
sub
push
scas
sub
mov
std
shll
mov
jne
sbb
jmp
add
bound
push
jae
sbb
cmpsb
out
mov
pop
rclb
das
pop
in
insb
push
jo
aad
jge
adc
push
xor
rclb
ret
leave
mov
lret
mov
andb
sub
cmp
shrb
popa
add
cmp
dec
mov
fmuls
push
std
shlb
cmp
inc
mov
mov
in
int3
imul
daa
arpl
pop
popa
sub
loope
psubsw
xlat
adc
cmp
test
fistpll
cmpsb
scas
shll
andb
daa
lret
shl
es
push
xlat
cmpsl
into
lret
xor
adc
mov
shll
xchg
and
cmp
sub
push
out
fdivr
cmp
lret
mov
xor
cmpsb
sbb
gs
and
test
pop
sbb
jg
outsb
mov
pop
cli
negb
lret
xor
ds
sahf
push
loope
jp
cmp
mov
shrb
mov
dec
inc
sahf
add
sub
cmp
imul
xlat
xor
rcrb
and
push
rcl
nop
add
out
adc
fnstcw
inc
int3
incb
pop
aaa
mov
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
jmp
je
int3
xchg
int
jne
jae
pavgb
mov
mov
jle
mov
jle
cmc
insb
sbb
aas
popa
jl
rcrl
xor
bound
mov
nop
out
inc
fisubl
arpl
and
mov
das
jmp
xor
in
and
flds
jmp
ds
mov
fdivs
and
andb
pop
and
xlat
mov
xchg
and
sar
pop
and
xchg
mov
ds
cmp
clc
add
adc
popa
add
push
sub
sub
fisubrl
add
imul
lock
inc
push
leave
sbb
clc
dec
hlt
pop
mov
add
mov
mov
loopne
jns
test
lahf
fistpl
mov
daa
push
dec
pop
sub
inc
loopne
out
dec
leave
loope
jp
jb
movsb
cs
pusha
push
push
push
lret
or
xchg
neg
xchg
scas
call
je
in
mov
in
or
ljmp
push
push
or
adc
inc
jb
cmp
inc
int3
mov
push
sbb
xrelease
push
ret
pushf
jbe
cmp
jb
jb
cmp
daa
and
mov
sbb
pusha
jp
leave
leave
mov
mov
or
pop
inc
push
gs
push
fsubrs
mov
xchg
jecxz
inc
ljmp
xlat
xchg
or
jb
cs
inc
inc
adc
pusha
adc
jge
cmp
ret
adcl
cltd
jne
dec
enterw
mov
xor
xchg
aad
out
clc
test
push
xor
popa
nop
lahf
insl
or
or
in
inc
or
movb
mov
mov
mov
xor
add
cmp
je
mov
mov
add
jmp
xor
inc
pop
pop
jge
arpl
outsb
dec
or
in
or
jle
and
enter
xchg
stc
out
lahf
xor
lret
popa
mov
out
mov
ficomps
mov
sbb
cmpsl
and
mov
jbe
sbb
and
adc
ret
jbe
mov
pop
jge
rcrb
dec
rol
and
inc
push
mov
cmp
clc
insb
xchg
add
sub
iret
push
adc
inc
scas
fs
or
leave
mov
inc
inc
and
mov
and
add
ljmp
inc
push
sub
push
outsb
insb
mov
jno
add
in
lahf
push
je
jge
push
jb
cltd
jne
movsb
push
fmul
push
ljmp
movsb
lret
test
das
fistl
jns
and
cmp
lret
fwait
into
adc
jae
das
jno
les
popa
add
dec
hlt
rcl
inc
imul
push
hlt
repz
dec
aam
xchg
adc
stos
adc
mov
imul
popf
aaa
enter
mov
sub
cmp
dec
imul
mov
jb
test
cmpsb
hlt
inc
jno
or
int3
fcoms
xchg
test
call
or
mov
jmp
lahf
mov
mov
inc
jl
push
mov
jmp
dec
lret
xchg
sbb
in
subl
cltd
out
and
lods
mov
into
fwait
xchg
sbb
cmp
pop
jnp
stos
mov
in
rorb
lea
bound
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
jmp
insb
jo
arpl
jge
jno
adc
mov
xchg
xchg
mov
jle
sahf
call
shrb
js
lds
dec
xchg
push
iret
sub
fwait
inc
push
or
mov
mov
rcrl
int3
data16
sub
pop
push
sbb
es
icebp
or
and
jp
daa
push
lret
add
fwait
push
xchg
mov
inc
cmp
scas
arpl
xchg
push
xchg
add
in
and
and
loopne
enter
mov
or
jb
adc
sbb
or
sbb
sub
in
push
and
adc
pop
add
scas
fstpl
sub
pop
insb
inc
mov
ret
repnz
push
mov
popl
push
pop
and
subb
add
ror
and
mov
xchg
aam
xor
xchg
ds
fdivs
fld
jmp
int
inc
icebp
pop
sahf
mov
add
ss
add
cld
test
outsb
jo
ficompl
daa
push
mov
cmp
jns
repnz
jns
inc
inc
cs
cmpsb
push
aaa
mov
lock
adc
push
jo
cmp
add
adc
pushf
add
jns
test
std
cltd
adc
inc
add
mov
dec
fstpl
push
push
in
aad
movsb
out
push
mov
cmp
sahf
mov
add
xchg
pushw
xchg
jb
fcmove
cltd
in
cwtl
popa
ret
pop
jmp
cmpsb
insl
pop
cld
rorb
sub
addl
sahf
dec
daa
les
sbb
mov
cmpsl
lods
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
sbb
jge
fidivrl
ss
clc
push
or
push
jg
jle
inc
ss
je
adc
arpl
cli
popa
jmp
push
and
fnstcw
sub
daa
hlt
adc
mov
das
jno
ljmp
lds
outsl
and
xchg
xchg
out
into
test
mov
aas
xbegin
js
xchg
das
sbbb
adc
stos
outsb
or
mov
jns
shll
cmp
cwtl
inc
xchg
mov
lret
aad
imul
inc
fwait
add
aas
mov
xchg
inc
xlat
fwait
push
int3
leave
subl
mov
orb
sarl
mov
movsb
ljmp
xchg
bound
sub
cld
inc
mov
pop
pop
jp
push
lods
lret
inc
inc
jb
mov
pusha
ret
and
fisubrs
or
mov
in
or
mov
mov
je
pop
or
call
mov
mov
ret
ret
jg
scas
inc
push
test
mov
sub
repz
aaa
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
xorl
push
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
movl
mov
push
mov
or
mov
xor
mov
push
add
mov
sbbl
jmp
pop
imul
movsl
mov
jle
push
jg
jle
sub
dec
test
xchg
fisubrs
or
fidivrs
xchg
dec
adc
scas
frstor
scas
push
fldl
xor
aam
sub
je
mov
lods
lea
aad
and
jae
or
test
mov
fcmovnb
pop
push
xchg
aam
mov
mov
sub
out
rcr
daa
int3
mov
roll
stc
popa
sti
sbb
shll
xchg
pop
das
xor
jne
xor
mov
aaa
lcall
frstor
jmp
addr16
and
jb,pn
pop
dec
std
inc
adc
das
cltd
stos
push
into
lret
in
je
nop
ss
les
stc
aam
xchg
ja
inc
cmpsb
insb
mov
jecxz
imul
cmp
addl
sbb
enter
lret
rclb
xchg
mov
pop
testl
cmp
mov
push
das
js
insb
push
sub
jl
cmp
pand
xchg
sub
cmp
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
mov
xor
mov
xorl
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
jmp
push
nop
outsb
stos
jae
push
jo
sub
lods
jl
mov
jle
jg
jle
ds
cmc
inc
ljmp
stos
shrb
cmp
loopne
sbb
mov
sbb
loope
adc
gs
mov
loope
nop
and
fsubrs
into
test
sbb
fidivrs
sbb
ljmp
mov
push
mov
and
loope
lret
mov
xchg
fildll
push
hlt
mov
gs
pop
insl
fs
cmp
cld
inc
dec
sti
jp
das
push
mov
jo
sub
les
rorb
or
imul
cld
inc
jb
stc
sub
stos
cmp
sub
arpl
pop
pop
shlb
cmpsl
inc
cmpsl
cmpb
lods
pushf
sbb
or
aas
mov
cwtl
rcll
or
xor
nop
inc
dec
mov
and
cmp
xor
jp
or
cmc
test
dec
jg
jnp
push
push
add
add
push
pop
pop
inc
xor
push
sub
cmpsl
bound
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
and
mov
jmp
inc
dec
fwait
imul
add
les
xor
jle
jns
jle
stc
nopl
pop
pop
out
movsb
out
in
mov
and
and
xchg
dec
enter
add
shll
aaa
cmp
rorb
xchg
mov
mov
xor
or
mov
out
mov
cmp
jae
mov
les
lret
inc
cmp
sbb
aas
loop
mov
dec
adc
es
dec
mov
sbb
xchg
sbb
cmpsb
ljmp
push
aam
divl
cmp
movsb
or
fucomi
xchg
pop
pusha
fwait
mov
enter
stos
clc
mov
repz
rcrl
rolb
mov
lods
iret
rclb
cmp
adc
aas
cmp
jo
push
jno
shlb
cltd
mov
pop
aas
outsb
mov
out
mov
and
adc
es
xchg
push
sbb
sub
mov
mov
inc
adc
dec
int
adc
inc
mov
je
xor
cmp
push
and
lret
pop
jns
adcl
sub
jecxz
daa
inc
outsb
outsb
cmpsb
xchg
cld
jmp
mov
mov
loopne
pop
adc
imul
xchg
int
ret
cmc
outsl
ror
fwait
sbb
fsubl
fdivr
push
out
pop
inc
sub
enter
pop
xchg
mov
adc
cmp
cmp
ret
sub
fidivrl
je
pop
sti
stc
in
sbb
je
sbb
pop
fildl
fs
mov
dec
jo
or
jne
push
dec
mov
fs
out
cmc
mov
xor
add
leave
inc
lret
enter
into
and
sub
out
repz
pop
inc
and
inc
cmp
iret
dec
mov
mov
jg
inc
loope
aad
xchg
pop
sbb
jno
pop
mov
dec
leave
jle
sahf
inc
test
out
cmp
imul
mov
sbb
addb
mov
or
cmp
jg
outsl
sti
mov
cmp
mov
lock
sbb
negb
in
lcall
cltd
jns
sbb
movsl
adc
inc
int3
or
lods
jns
and
mov
push
imul
sbb
lcall
cld
jl
inc
hlt
and
dec
out
mov
push
and
negl
insb
stos
out
adc
and
add
das
rcrb
mov
shrl
xor
xchg
enter
or
iret
pop
add
shll
adc
jo
inc
idiv
fwait
pop
fldt
jmp
sbb
ss
shr
mov
or
insb
mov
pop
repnz
ficompl
cmp
pop
sub
mov
stc
int3
fdivs
test
cmp
push
repnz
sbb
jo
pop
in
mov
dec
inc
dec
test
inc
or
cltd
dec
inc
shr
stos
loopne
sbb
sahf
sarb
add
add
lock
mov
xchg
push
int
lcall
jne
in
xchg
pop
scas
xorb
sti
cmpl
divb
pop
sbb
sub
adc
xchg
pushf
pop
inc
xchg
cmpsl
shll
jne
and
scas
cmp
push
fs
mov
dec
lock
and
stos
and
and
lods
pusha
fdivrs
jb
inc
mov
mov
mov
or
aad
dec
cmc
adc
push
xchg
std
add
lret
xor
movsb
stos
jbe
push
jp
dec
and
dec
cmp
inc
or
mov
ret
flds
mov
jnp
leave
xchg
insb
or
cmp
inc
and
andl
add
mov
xor
mov
movzwl
mov
xor
mov
mov
sbb
mov
movb
lea
orl
mov
and
jmp
jo
inc
xchg
jo
jne
xchg
or
je
or
jle
push
jns
jle
mov
lahf
mov
mov
inc
adc
xchg
jb
or
les
sbb
xor
pop
movsl
divb
cli
mov
push
push
imul
ljmp
pop
rorl
out
gs
test
xor
pop
jg
out
pusha
pop
mov
ja
xchg
sarb
or
daa
dec
jns
inc
add
push
sub
ljmp
loope
pop
adc
fisubrl
adc
hlt
dec
in
mov
clc
sahf
in
in
fcmovne
out
gs
sub
mov
ror
and
sbb
xchg
sbb
push
and
add
fcoms
lret
pushf
lret
dec
in
adc
outsl
sub
lock
lock
out
xchg
pop
jae
dec
pop
cli
lret
repnz
lds
cmp
fimull
nop
mov
shr
xor
dec
shrl
fisttpl
lea
dec
cmp
push
cs
pushf
add
ret
or
and
loopne
cmp
mov
ss
and
cltd
lock
pop
enter
mov
icebp
cli
sbb
lds
mov
fs
sarb
mov
out
lock
in
sbb
mov
jle
lret
cmp
push
inc
mov
jns
dec
push
xchg
loopne
into
lret
jbe
ljmp
add
cmp
pusha
ror
iret
cli
xlat
ror
outsl
lods
cmp
push
loop
mov
lret
pop
les
jl
lret
loop
cmp
dec
adc
insl
loope
xlat
pop
mov
add
sub
sub
cmpl
jno
sub
mov
loop
pop
rol
divb
std
ss
cmp
addr16
lret
adc
jo
xchg
loope
addr16
mov
adc
xchg
fnsave
and
jbe
imul
pop
jg
call
shrl
mov
hlt
add
stc
pusha
mov
aad
sub
sbb
sbb
xor
pop
scas
and
mov
in
add
add
cld
cmp
mov
leave
push
jns
dec
lret
bound
xor
and
bound
xchg
fdiv
test
add
and
aas
fisttpl
shlb
jge
mov
jae
fwait
cltd
xor
jnp
ror
pop
sbb
inc
or
fbld
mov
sarl
xchg
lret
sbb
jle
rcrb
mov
adc
jnp
jmp
andb
icebp
push
xchg
mov
jbe
test
push
cli
jb
cwtl
jae
xor
out
add
lahf
repnz
cs
xchg
loopne
add
dec
sbb
mov
repnz
xor
imul
and
pop
dec
loop
jne
mov
xor
cwtl
cmc
dec
shrl
lahf
push
cmp
nop
nop
ljmp
add
xchg
scas
mov
test
cmp
cmp
mov
fwait
out
daa
pop
jne
mov
int3
xor
pop
scas
xchg
inc
inc
dec
repz
out
lods
rcl
sub
push
pop
sub
inc
sar
shrl
mov
icebp
pop
jb
fstpt
sub
mov
dec
incb
push
ficoml
das
icebp
enter
or
sbb
lcall
jle
int3
fcompl
push
addr16
hlt
pushl
mov
push
mov
pop
aaa
xchg
xchg
test
or
outsb
pop
insb
mov
or
sbb
mov
mov
sbbl
xor
addl
sub
orl
mov
xor
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
adc
mov
mov
push
adc
xor
incl
mov
subl
add
jmp
notl
mov
mov
movl
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
sbbl
jae
out
xchg
jns
mov
arpl
jle
push
jns
jle
pushf
push
pop
dec
leave
roll
in
sahf
xchg
or
nop
enter
out
jmp
pop
into
std
mov
cwtl
fnstsw
mov
leave
sbb
stc
jg
test
push
adc
lret
sbb
incl
lock
push
hlt
data16
mov
xor
inc
inc
lret
push
add
bound
scas
mov
imul
xchg
add
and
cmp
sbb
addr16
ljmp
popf
int
aad
inc
cs
into
lret
inc
push
loop
out
cmp
out
mov
mov
loop
std
subb
mov
jecxz
adc
jno
mov
fnstenv
xchg
and
mov
lods
inc
sub
dec
addr16
and
jg
fs
inc
aad
mov
inc
hlt
fcmovne
out
dec
andl
lret
mov
stc
dec
pop
pop
inc
leave
mull
xor
loopne
xchg
out
pop
cs
lock
inc
jle
icebp
adc
imul
fnsave
adc
mov
leave
pop
popa
sub
imulb
add
fcomi
fcomi
das
pop
and
icebp
insl
arpl
rcrl
lods
cmpsl
imul
push
mov
mov
dec
mov
inc
dec
jo
mulb
fwait
jp
mov
mov
popa
jno
in
cmp
or
mov
and
push
jmp
movsl
or
int3
out
xor
out
ljmp
fists
icebp
stos
gs
popf
fisubrl
sbb
mov
dec
mov
push
imul
dec
add
sti
leave
das
hlt
sbb
mov
ds
inc
movsb
jb
hlt
jge
fs
add
or
mov
fnstcw
mov
movhps
sub
pop
outsb
ja
mov
mov
jg
jne
sarb
insl
and
out
mov
push
jns
pop
push
mov
je
cwtl
xabort
cwtl
jb
pop
add
inc
mov
scas
adc
jg
mov
mov
cmp
ss
aaa
push
scas
jl
icebp
repnz
dec
sub
shll
xchg
cltd
icebp
jbe
jl
ror
fistl
iret
cmpsb
scas
mov
addb
in
std
xchg
insb
lcall
push
andl
sti
js
xor
fadds
ret
dec
outsl
pop
jl
test
adc
dec
mov
sub
xor
je
in
jbe
fisubrs
pop
fs
cmp
aad
pop
imul
stos
xchg
in
ss
outsl
add
rolb
int3
data16
data16
pushf
push
jb
int
push
sbb
das
ret
or
or
mov
sbb
mov
xchg
insl
rclb
sbb
cld
aaa
lea
fst
in
cmp
mov
out
loope
and
jae
mov
enter
in
pop
push
fdivrs
cmp
ret
mov
push
mov
rcll
mov
dec
mov
jbe
daa
inc
scas
sub
or
ds
ficoml
dec
jp
jmp
sbb
jnp
dec
aaa
pop
cmp
test
xor
mov
das
push
daa
pop
cmp
and
lea
into
or
aam
iret
and
mov
xor
rcrl
jb
mov
ds
sbb
je
aas
test
gs
xor
xor
and
add
lcall
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
jmp
mov
or
push
jge
inc
xchg
add
mov
jns
jle
into
shlb
jmp
fadd
rclb
sub
xor
call
xchg
sbb
push
int
daa
xor
inc
mov
sbb
cmp
xor
js
lods
jbe
jmp
or
pop
cld
mov
or
push
push
sub
add
lods
clc
sbb
stos
mov
std
test
and
xor
hlt
aas
jne
hlt
aaa
add
int
jb
js
mov
or
jp
adc
mov
shl
mov
rcl
jge
fdiv
add
mov
iret
sbb
imul
jp
popa
in
fistpl
xchg
shlb
jp
insb
movsb
or
cmp
add
outsb
out
loopne
leave
sbb
jo
xchg
clc
dec
mov
or
hlt
sub
orb
pushf
add
insb
push
dec
xchg
xchg
outsb
mov
jg
fiaddl
lds
mov
mov
mov
lea
mov
imul
loopne
daa
push
or
xor
mull
jmp
jl
sbb
jns
xchg
dec
sub
mov
push
stos
push
rcr
bound
mov
dec
insl
push
or
or
inc
mov
push
mov
bound
lods
inc
jecxz
mov
dec
int3
js
in
in
dec
dec
in
adc
lds
das
cli
jae
sahf
frstor
mov
jnp
sbb
inc
movsb
aad
cmp
das
cmp
repz
jae
test
cwtl
cmp
pop
dec
popa
and
iret
fadds
sbb
mov
and
addr16
bound
sub
scas
int3
es
cmpsb
js
sbb
jno
sbb
cmpsl
les
mov
lret
mov
push
pop
dec
lcall
dec
jo
loop
fsub
inc
fcomi
jle
mov
adc
mov
push
jmp
xlat
xlat
scas
xor
push
xchg
retw
jo
mov
test
iret
jno
xor
imul
shrb
cltd
jp
add
jb
lds
enter
inc
push
fiadds
imul
aaa
adc
fwait
ret
repz
dec
mov
je
adc
jno
mov
cli
test
cld
outsl
mov
sub
stc
jbe
enter
pop
cmp
mov
into
mov
adc
pushf
mov
subl
add
repnz
xor
in
add
lret
mov
sub
test
jl
mov
inc
popf
jl
fldl
cmpsb
add
lahf
cmp
cs
in
sarb
stos
inc
mov
leave
ds
daa
into
movsb
stos
cmp
jae
jl
fists
in
orb
xchg
popa
clc
xor
xchg
lock
mov
repz
test
bswap
mov
mov
call
loope
pushf
cltd
adc
dec
dec
dec
mov
add
paddd
scas
repz
jo
pop
pushf
xchg
and
aas
cmp
mov
mov
sbb
jmp
cmp
fldl
std
cli
loop
and
loope
pusha
jp
popf
lods
ss
or
or
subb
addr16
sbb
mov
mov
je
mov
sahf
in
inc
out
jno
inc
sub
cmc
jns,pt
dec
fldcw
clc
xlat
dec
push
jnp
test
jns
loopne
mov
push
lea
inc
clc
xor
add
mov
mov
jmp
pop
ret
jge
insb
jae
test
push
sbb
push
jns
jle
xchg
xchg
cs
popf
test
push
or
push
dec
subb
stos
mov
idiv
rcr
or
jns
mov
ficoml
sub
out
push
push
push
gs
stos
lea
xchg
lods
xchg
enter
push
lcall
push
stos
jnp
lcall
and
inc
enter
adc
pop
sbb
dec
cmpsb
cmpsb
cmpsb
mov
sbbl
js
mulb
mov
in
fidivrl
or
int
mov
mov
or
sbb
and
out
sbb
xchg
or
push
movsb
xor
adc
in
push
addb
mov
push
lock
mov
sbb
aaa
mov
hlt
xor
mov
inc
in
leave
xchg
cmpsl
testl
enter
lahf
and
jae
pop
pop
imul
scas
cmpsl
popf
lret
int
or
outsb
pop
inc
pushf
and
loope
pop
push
imul
mov
pop
movsb
int3
into
fstpl
bound
rcl
mov
pop
roll
inc
scas
xor
jecxz
test
pop
adc
mov
jae
inc
push
ret
pop
and
out
sbb
mov
dec
arpl
icebp
pushf
xor
scas
xchg
dec
jns
xchg
pop
mov
pop
stc
aam
mov
or
ds
sub
add
mov
mov
fimull
sub
push
ret
cmp
test
mov
ja
shlb
add
in
xchg
out
out
mov
inc
xor
pop
mov
sbb
jge
int
mov
inc
aad
mov
fcomps
or
pop
jno
jno
jbe
sub
add
and
adc
push
cli
push
das
mov
aaa
lods
sbb
das
cli
jno
bts
les
cmpsl
push
loop
int
adc
cwtl
jo
in
rolb
cltd
mov
inc
jnp
scas
push
mov
faddl
inc
pop
sbb
insl
iret
shr
rcrb
jne
imul
lcall
lahf
dec
bound
mov
sbb
push
mov
add
ja
data16
stc
lret
dec
insb
add
imul
test
shrl
xchg
lods
or
aas
or
mov
movsb
in
pop
push
sarl
mov
dec
push
dec
mov
sbb
sbb
fidivrl
push
adc
fcomps
push
inc
add
xchg
lods
mov
ss
sti
and
int
cmp
imul
and
cld
lock
sbb
mov
jp
jne
jl
dec
push
adc
or
push
mov
sub
push
fs
dec
std
mov
insl
imul
aam
adc
sub
aaa
xor
out
xchg
jge
out
mov
fstl
cmp
aad
jo
push
sub
pop
adc
mov
dec
outsl
loop
lds
lea
cmp
hlt
lock
stc
fsubrp
lcall
jne
xchg
xor
pop
jmp
rcrb
in
sbb
cmp
insl
inc
ret
sahf
xchg
stc
ficompl
rcrl
mov
or
cmp
push
xor
in
jnp
pusha
sbb
sti
jae
adc
jae
test
clc
xor
fldenv
mov
sahf
dec
pop
pop
mov
pop
xor
add
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
jmp
enter
cmc
jne
mov
pop
in
sahf
jmp
jle
push
jns
jle
bound
jno
push
sbb
sbb
ret
sub
push
not
loope,pn
xor
mov
jo
test
mov
adc
mov
aaa
mov
add
stc
pop
popf
xchg
jge
adc
pop
add
lret
inc
xchg
inc
mov
xchg
paddb
stos
test
mov
nop
stc
push
jnp
es
lea
adc
gs
std
xchg
fld
dec
lret
aam
loop
in
xchg
push
insb
test
pop
lock
or
bound
mov
js
dec
mov
fistpl
sub
lds
dec
pop
jg
ficoms
jle
fadds
push
int3
jo
pop
mov
inc
dec
out
push
aas
mov
rolb
sub
add
cmp
cltd
jne
inc
jne
inc
mov
lock
mov
lcall
adc
mov
dec
lcall
jge
sbb
pop
insl
jp
mov
insl
jge
fsubs
pop
adc
cmp
mul
fisttps
and
dec
mov
pop
fists
inc
repz
or
jge
jae
mov
cs
jp
iret
pop
in
lcall
pop
jb
dec
fmulp
and
xchg
movsb
bound
xor
inc
ja
sbb
mov
into
out
xor
xor
sti
add
jmp
xor
aas
mov
cmp
pop
adc
sub
and
xchg
mov
scas
aas
mov
sbb
push
xor
and
ret
dec
jge
jp
adcb
jbe
out
cld
mov
push
shl
ja
fdivs
push
add
negl
jle
gs
or
push
call
sbb
inc
lods
outsl
inc
lock
call
mov
mov
sahf
pop
test
sti
add
and
or
xor
cmp
push
add
loopne
mov
and
mov
xchg
cli
ja
pushf
adc
and
clc
cmp
cmp
imul
xchg
addl
xor
rolb
iret
inc
sahf
scas
fs
mov
lret
fs
xchg
stos
cwtl
lcall
sbb
or
push
sbb
lret
xchg
and
inc
and
out
jl
repnz
int
jne
sbb
jmp
imul
and
xchg
stc
insb
mov
mov
xlat
xchg
adc
mov
mov
sub
fdivrs
fnstcw
loop
cmp
jbe
je
jp
push
es
insb
jne
aad
out
imul
subl
pop
cmp
sbb
pop
gs
test
mov
sbb
insb
ret
and
cmp
scas
cmp
jno
jne
push
bound
lods
jae
push
mov
idivl
aas
ljmp
jb
js
leave
ljmp
adc
xchg
and
movsb
mov
jno
into
pop
and
mov
inc
mov
pop
dec
mov
divb
push
sub
clc
sarl
push
xchg
loopne
or
outsb
stc
adc
inc
xor
push
add
sahf
jnp
test
aam
and
iret
or
jle
xchg
or
inc
xor
xor
fwait
addr16
dec
jle
fstps
jmp
stos
jl
movsb
dec
mov
dec
stos
cmp
pop
sbb
shl
jmp
out
push
dec
mov
cmpl
leave
pop
int3
xor
add
cmp
je
movl
lea
mov
jmp
push
fdivp
imul
mov
out
scas
push
ret
and
push
jns
jle
imul
adc
aad
jnp
loopne
mov
mov
sbb
mov
ret
leave
int3
neg
movsl
loope
jnp
cmp
add
xchg
ss
or
sbb
xchg
loope
popa
adc
or
mov
or
cltd
adc
aam
pop
fucomip
lods
outsb
jo
movsb
xchg
sarl
sbb
and
xchg
sub
fucom
std
pushl
int3
insb
mov
insl
pop
or
or
jbe
xor
add
mov
test
fcoms
cld
xchg
push
pop
or
inc
shlb
cmpsl
xor
in
daa
js
out
lret
fildll
xchg
mov
sub
mov
push
loope
mov
enter
rcll
shl
shrb
out
gs
je
movsl
inc
lahf
xchg
mov
mov
imul
and
js
ss
loope
in
movsb
and
iret
dec
scas
xor
xchg
fidivs
cmp
push
and
push
mov
mov
cli
lret
adc
out
fisttps
xor
pop
xor
mov
into
sahf
mov
jge
in
mov
push
loop
mov
mov
mov
lahf
out
lret
or
push
jecxz
jae
jl
sub
push
mov
notb
movsl
pop
cli
adc
fucomi
adc
shl
cmp
ret
xor
xchg
fdivrl
stos
inc
jge
idivb
das
mov
cld
in
movsb
or
pop
xchg
sar
test
lcall
mov
aaa
mov
sahf
cld
shlb
push
mov
xchg
lcall
pusha
mov
ficompl
jnp
pop
cmp
mov
in
fnstsw
test
in
ss
jecxz
pushf
pop
sbb
ljmp
shrb
pop
dec
fbstp
adc
jg
jl
jae
lret
add
sub
push
jecxz
push
cmp
stos
pop
push
push
inc
test
je
xlat
adc
loope
and
in
ret
fstpt
pop
inc
out
and
dec
lods
lods
inc
lret
cmp
add
add
cmp
lretw
add
fidivrl
fidivl
rcr
xor
enter
mov
push
pop
lds
lahf
pop
mov
imul
add
jns
popf
pop
push
sbb
inc
int3
xchg
xor
imul
inc
mov
dec
aam
out
pop
gs
jp
cltd
mov
sbb
sti
push
xlat
mov
cmp
jmp
mov
int3
and
testb
shrl
sub
call
sub
xchg
push
jnp
xor
jae
fnstcw
or
or
mov
dec
jle
mov
or
xchg
sub
cmpl
push
inc
sar
inc
outsb
pop
and
push
in
jge
cmpsb
mov
popf
xor
add
jg
ja
mov
ret
out
pushf
xchg
sbb
jbe
jp
sub
subl
cmp
jno
push
je
fstpl
in
push
xor
mov
dec
xchg
mov
pop
mov
xor
insl
out
cld
pushf
inc
loope
pushf
and
movsb
xchg
xor
aam
insb
sbb
mov
xorl
fsub
push
decl
mov
push
scas
adc
in
and
pop
jmp
inc
jmp
insl
sub
or
fwait
ret
push
mov
mov
enter
xor
mov
add
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
sub
jmp
pop
mov
and
jno
dec
call
push
cltd
cmp
pop
jg
jle
jbe
incb
jp
ds
and
das
les
push
loop
mov
sbb
dec
adc
mov
mov
add
test
std
xchg
or
sub
cmp
pop
pop
jno
mov
out
or
jo
jbe
test
ds
movb
mov
es
xor
ljmp
imul
lcall
loopne
jo
andb
fs
into
cwtl
sub
xchg
bound
inc
roll
lea
mov
xor
mov
inc
rcrb
mov
addl
mov
sub
and
aad
mov
sti
clc
fildl
sub
mov
and
jecxz
xor
mov
mov
out
xchg
mov
and
or
sarl
xchg
dec
xchg
stc
mov
cmp
mov
loope
lock
lcall
sbb
movsb
and
sbb
adc
mov
inc
aam
and
imul
lea
mov
sub
aam
negb
jno
and
and
std
or
shlb
imul
jecxz
lret
mov
xor
insb
testl
push
sbb
jno
insl
cmp
lret
lahf
push
xchg
sbb
xor
rcrb
test
lcall
mov
mov
jp
sbb
cmpl
fldcw
repnz
mov
jmp
dec
jo
repz
or
cwtl
mov
shrl
in
insl
andl
inc
inc
add
inc
clc
test
inc
add
add
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
pushl
call
mov
dec
mov
jmp
movl
mov
xor
push
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
inc
mov
incl
mov
xor
xor
mov
add
xorl
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
jmp
imul
jge
push
pop
loopne
jle
leave
xchg
jnp
jle
pop
jg
jle
and
int3
mov
and
popf
cli
ss
test
div
popa
push
push
push
icebp
jle
cmp
syscall
aaa
daa
loope
inc
cmp
lret
or
xor
mov
add
push
aas
insb
adc
arpl
data16
cwtl
andl
inc
gs
jbe
aam
mov
mov
mov
pop
int
pop
fisttpll
scas
push
and
push
enter
aam
in
ret
sub
jne
pop
add
xchg
xchg
sbb
loopne
add
loop
stc
enter
cmp
lock
outsl
xchg
xor
sahf
mov
or
popa
add
fwait
stos
gs
insb
outsl
xchg
ss
outsb
loopne
mov
push
fwait
push
stos
jl
pop
mov
std
fbstp
loopne
call
test
dec
ficompl
pusha
mov
adc
inc
sar
mov
mov
xchg
sbb
repnz
loopne
out
jns
and
add
mov
jnp
mov
fisttpll
mov
lds
lods
mov
imul
push
daa
xlat
jb
mov
les
xchg
popf
and
add
xchg
jmp
xchg
xchg
iret
push
mov
cli
xchg
mov
insl
adc
int
fsubl
cmp
lret
loope
jb
inc
mov
sahf
repz
hlt
pop
sub
or
pop
xor
movsb
xchg
dec
mov
xchg
loop
add
jbe
ret
mov
fidivrs
lahf
pop
stc
mov
push
pop
push
outsb
sub
dec
es
mov
fildll
inc
jno
scas
jbe
push
mov
cmp
cmovae
pop
in
fdivrp
jno
ficompl
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
jmp
sahf
jb
push
pop
jl
jb
ret
mov
aam
sub
les
jle
sbb
push
add
inc
push
jb
sbb
je
jo
mov
xchg
jmp
push
enter
mov
stos
pop
pop
subb
mov
push
inc
ds
mov
out
aad
cmp
sub
jmp
cmpsl
mov
jge
dec
xor
rcl
jne
cmpsl
test
std
push
mov
mov
xlat
or
out
test
fs
scas
mov
push
ror
pop
push
lods
xor
mov
fsubl
call
push
and
mov
dec
test
cwtl
adc
inc
mov
in
push
xor
aas
push
jb
mov
movsb
inc
test
xor
mov
stos
aam
je
push
insb
mov
addr16
jge
in
icebp
stc
sbb
pop
outsb
mov
clc
repnz
inc
daa
loop
add
outsb
cmp
aam
jae
inc
addr16
cmp
scas
faddl
sub
ret
sbb
pop
into
push
cwtl
pop
push
cmp
xorl
sbb
push
cmpsb
and
aas
div
cmpsb
outsb
scas
dec
orb
inc
sub
lret
xchg
push
sub
test
pushf
push
cmp
ljmp
gs
in
sub
cmp
popa
sti
out
daa
mov
lock
cmp
push
and
adc
dec
xor
xchg
xchg
jg
add
push
clc
movsl
mov
mov
loop
sub
incb
jne
popf
mov
sbbb
lock
mov
test
and
cmpsl
or
loope
jge
cmp
test
aaa
mov
test
sub
sbb
adc
pop
pop
inc
xchg
jl
and
outsb
xor
mov
inc
rolb
adc
xchg
xchg
imul
test
imul
pop
push
fdivs
sbb
lds
jbe
aam
scas
shl
sarb
test
inc
sub
popa
mov
inc
add
leave
pop
add
push
fdivrs
divl
dec
mov
sub
andl
out
pop
adc
cmc
adc
rol
or
out
mov
push
lock
mov
pop
out
lret
pushf
jl
dec
mov
sub
nop
das
repz
sahf
pusha
fidivl
pop
xor
inc
test
cs
lods
rorl
mov
in
es
sbb
inc
cmp
das
in
aad
adc
pop
mov
pop
call
out
repz
lcall
adc
call
sub
jmp
rcr
ficomps
fwait
xor
es
and
inc
push
mov
mov
sub
bound
insl
sbb
push
lods
push
test
cli
bound
leave
in
aas
cmp
xchg
mov
aaa
inc
mov
mov
or
push
xchg
mov
les
cmc
arpl
push
addr16
push
or
jg
jmp
sbb
pop
xor
mov
jg
and
insl
xor
push
bound
sbb
sahf
cld
push
mov
mov
movl
mov
jmp
xchg
jb
jg
dec
mov
adc
jle
les
jle
outsb
push
shll
pop
add
cld
popa
xor
mov
mov
movsl
dec
or
stos
nop
movsl
push
jae
push
repz
push
xchg
mov
std
push
jne
mov
push
cmc
cmpsb
pusha
fwait
or
mov
std
xchg
jno
lret
fsub
or
or
stos
jnp
mov
inc
mov
lods
daa
mov
add
ficompl
push
and
ljmp
nop
ss
mov
fs
subb
movsl
seto
out
adc
cmc
adc
pop
movsl
mov
push
mov
iret
fstl
pop
jae
pop
pop
test
dec
mov
test
jg
xchg
and
aaa
xchg
and
or
inc
xchg
xchg
push
adc
lods
dec
fldenv
shld
int3
outsl
jge
jecxz
lods
test
cmp
sti
xchg
xor
adc
popa
xor
add
cli
xor
pop
int
dec
cltd
fdivr
ljmp
sbb
icebp
pop
je
test
dec
push
mov
or
mov
sbb
push
mov
je
sub
out
loope,pt
and
jle
imul
and
jnp
jl
mov
stos
out
jg
mov
scas
js
jns
sub
mov
aas
jns
sub
mov
fnstsw
fs
dec
or
jb
sti
dec
clc
pusha
inc
cmp
testb
jle
xor
xchg
push
cmp
jne
icebp
pop
loop
push
test
adc
or
sub
out
cli
dec
mov
inc
dec
pop
shlb
lds
fistps
jmp
je
test
rorl
push
mov
imul
decb
pop
sbbl
push
jge
mov
sbb
jmp
dec
dec
ds
push
mov
sub
add
subl
sti
sub
push
pop
fs
add
stos
frstor
xchg
cmpl
mov
mov
fstpl
mov
sahf
add
xchg
in
fidivrs
or
mov
icebp
mov
ss
arpl
fdivl
out
mov
sbb
dec
push
gs
imul
mov
js
push
std
fldl
lock
testl
in
insb
sub
and
jns
sbb
push
jl
add
push
lcall
xchg
fsubrl
push
fadds
imul
ds
mov
sbb
jecxz
or
jae
outsl
adc
xchg
xor
inc
and
outsl
mov
fiaddl
inc
pop
shrb
and
icebp
sub
daa
mov
push
imul
out
fisubrs
pop
rcll
imulb
shlb
jno
test
mov
push
cli
sub
outsl
or
and
popa
mov
les
sub
arpl
jecxz
pop
jl
inc
xor
push
dec
add
movl
jmp
mov
pop
arpl
xor
inc
scas
out
xor
les
jle
and
xchg
push
push
and
dec
aam
daa
clc
sbbl
push
and
dec
movsl
inc
cli
sti
xor
lds
in
add
sti
ss
es
push
adc
or
push
rclb
sti
data16
ret
or
xor
enter
mov
xchg
and
out
in
sub
adc
adc
aad
mov
clc
inc
or
dec
xchg
inc
inc
testb
mov
and
add
mov
popf
data16
jns
ret
xor
in
aas
mov
lock
fisubrs
in
fsub
loope
sarb
add
int
clc
ds
add
faddl
movsb
inc
scas
cs
movsb
dec
loopne
cmp
mov
cld
jle
pop
inc
mov
in
nop
xchg
pop
rcll
mov
jns
dec
jns
jb
stc
es
pop
mov
cmp
add
movsl
push
rorl
mov
inc
std
repz
jbe
aad
mov
sbb
daa
int3
fldt
ffree
fwait
sub
push
mov
push
add
jnp
dec
pop
lret
repz
push
out
and
in
in
xchg
push
outsb
loopne
dec
pop
enter
movsb
push
int3
push
pushw
roll
cld
jbe
mov
mov
dec
or
mov
test
jmp
mov
mov
sbb
or
xchg
lahf
call
aaa
stos
cmp
pop
sub
cmpsb
push
mov
scas
or
mov
lea
jbe
inc
pop
or
mov
mov
fadd
cmp
jl
dec
add
and
fimull
shll
cmp
mov
sbb
sti
outsb
adc
xchg
sub
std
stos
inc
and
jecxz
hlt
iret
in
out
sub
xorl
mov
fwait
test
sbb
adc
adc
sub
fcompl
test
test
shll
cmp
sub
cmc
data16
xlat
ljmp
inc
fisubrs
int3
and
ljmp
lea
xor
es
cmpsb
xor
pop
loope
inc
xchg
inc
jge
jno
dec
sub
mov
pushf
rcrb
sub
test
bound
pop
lret
js
jecxz
mov
inc
lea
jno
jecxz
inc
xor
outsb
sub
sbb
add
shrb
push
jno
std
push
pop
or
in
push
xor
test
mov
jl
xchg
cmp
fimull
loop
and
sub
mov
sbb
lret
add
jl
loope
addr16
xchg
iret
test
dec
fwait
xchg
pop
add
xor
add
lret
icebp
push
add
sub
xchg
xor
or
out
movb
sahf
addr16
xlat
jo
xor
xor
scas
mov
lea
xchg
inc
or
jg
aad
outsb
cmp
inc
cmpsb
mov
lea
add
cmp
jne
add
mov
andl
mov
subl
xor
or
mov
andl
add
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
jmp
movsb
jb
push
cld
pop
gs
call
cmp
mov
jle
les
jle
in
in
fdiv
sbb
adc
cltd
addr16
sbb
ret
outsb
push
jae
shl
imul
imul
gs
pop
jno
inc
xchg
push
hlt
push
mov
xor
insb
lea
jp
rcrb
dec
test
push
sbb
int3
push
push
cmc
add
mov
iret
out
xor
icebp
cmc
mov
jmp
lds
and
adc
clc
lods
and
cmp
xchg
cli
lahf
mov
sbbl
in
lea
push
pop
pop
test
enter
fstpt
jbe
das
out
lret
out
loopne
or
or
stos
test
pusha
dec
inc
push
lods
insl
and
mov
dec
test
dec
dec
xor
rcll
and
lret
or
add
cmp
mov
fstl
shlb
stc
hlt
jle
cltd
out
fs
sti
popa
adc
dec
fsub
or
xor
js
adc
stos
sti
shll
jg
pop
xchg
pusha
or
pop
xchg
jbe
ret
lds
mov
push
lods
clc
or
push
jecxz
out
cmp
xchg
das
jae
ljmp
punpckhdq
mov
out
shlb
mov
insb
pop
leave
test
mov
jmp
ds
mov
es
push
sti
or
mov
cmp
aas
test
mov
lcall
sbb
or
ret
cli
aas
inc
inc
adc
jns
out
pop
fidivrs
jmp
inc
push
xor
mov
enter
into
mov
fsubrl
js
lret
mov
push
sub
sub
hlt
jp
jmp
mov
add
cmp
stos
push
es
orb
rol
push
adc
sub
mov
sub
testl
adc
orl
ror
das
pop
inc
mov
fwait
jns
mov
mov
mov
test
add
pop
mov
mov
test
and
iret
out
test
dec
bound
xor
jecxz
push
cmp
mov
or
test
gs
adc
ds
lods
aaa
pop
and
mov
repz
mov
mov
push
es
push
cltd
jnp
jp
dec
fildl
or
push
add
rorb
sti
clc
daa
inc
cmpsl
push
sub
and
lods
rolb
sbb
popf
lret
iret
jmp
sti
loop
iret
mov
cltd
cmpb
jmp
add
push
fldcw
inc
xchg
int
mov
or
into
lahf
xchg
cmp
out
or
jge,pt
cltd
inc
lret
dec
mov
shlb
mov
rolb
xchg
inc
xrelease
mov
jb
out
jge
jno
push
mov
mov
jmp
xchg
loopne
xchg
sti
jo
pop
mov
lds
cmp
je
leave
ret
push
mov
sub
movl
movl
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
jmp
and
ss
cmc
lock
sahf
rol
mov
mov
jle
jns
jle
cmp
out
loop
xchg
push
mov
iret
jp
idivb
lcall
mov
std
loop
enter
pusha
mov
mov
pop
dec
nop
shll
add
jne
cmp
cli
mov
mov
je
inc
adc
data16
in
dec
pop
or
cmp
mov
fcompp
fisubs
imul
arpl
shrl
jge
test
fs
out
xor
ret
jecxz
mov
and
movsl
stos
jle
imul
aam
lret
aas
sbb
in
adc
lea
or
loop
or
jp
jmp
and
int
xchg
cli
shll
jnp
adc
nop
cmp
mov
daa
jns
cld
sub
push
int
into
mov
cmp
sub
push
ret
xor
loopne
mov
bound
in
xchg
lods
sub
stos
pop
push
push
cmp
rcll
fistl
clc
mov
and
mov
mov
add
jmp
inc
xor
sbb
cmpsb
cltd
pop
push
mov
lahf
lret
adcl
inc
add
inc
fldl
enter
mov
pushf
aad
in
pop
ss
test
or
imul
pusha
jg
jle
test
sub
and
xorl
icebp
adc
or
mov
fidivl
arpl
pop
movsb
enter
lock
or
lcall
and
addr16
pushf
or
pusha
push
sub
sarl
in
aaa
add
lods
pop
xlat
stos
adc
mov
and
in
xor
or
sahf
push
cltd
lea
call
loopne
psubq
loope
pop
pop
push
pop
cmp
mov
addr16
lods
xchg
pop
sub
jecxz
add
fmul
xor
les
mov
js
pusha
sub
adc
pop
cs
test
inc
test
mov
push
rcrb
and
ret
sub
popa
cmp
cld
addr16
loopne
test
mov
and
add
push
cmp
daa
int
sub
aaa
in
mov
adc
sub
sqrtps
lahf
adc
mov
ret
jo
adc
adc
jecxz
pushf
rclb
nop
das
test
or
test
jmp
cmp
rorb
cmpsb
fwait
pop
out
sti
mov
aas
xchg
add
pusha
xchg
xor
push
sub
repz
fisubs
addl
jecxz
add
data16
frstor
test
adc
nop
jge
xchg
mov
sar
in
inc
xchg
cmp
int
and
hlt
push
pop
sub
pop
sbbb
and
pop
xchg
xor
jl
mov
xor
push
dec
cmp
add
lock
mov
mov
inc
jp
and
loop
xchg
test
insb
and
pop
mov
push
rcrb
cmpsb
dec
outsl
ss
in
pop
jbe
imul
icebp
and
or
int
inc
inc
arpl
out
or
addb
loopne
clc
xor
pop
das
inc
jno
xor
jl
mov
and
lea
jb
pop
jo
in
jle
cltd
push
ficoml
sub
cmp
in
cmp
cli
add
mov
movzwl
and
mov
mov
adc
mov
sbb
mov
push
sub
lea
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
jmp
call
mov
dec
mov
push
inc
frstor
jle
dec
jns
jle
jg
push
loop
mov
incb
gs
sub
into
pop
repnz
loop
outsl
push
cmpsb
inc
bnd
lret
or
jbe
pop
ret
push
cmp
mov
pop
inc
mov
data16
adc
das
xor
fsubl
inc
aaa
pop
inc
adc
xlat
in
ljmp
hlt
aas
push
pop
rcrl
xor
mov
test
mov
mull
mov
arpl
jns
shl
shrl
cmp
sti
xorb
and
stos
arpl
jo
testb
xchg
sete
lcall
dec
mov
push
jge
cmp
fisttpll
lods
pop
and
notb
inc
dec
out
cmc
adc
push
or
insl
jecxz
lcall
in
in
outsl
lcall
js
jo
mov
mov
mov
aaa
cmpsl
mov
push
je
movsb
push
mov
mov
push
dec
cs
flds
div
movlps
ret
and
mov
aas
dec
jge
sti
mov
scas
add
pop
sarb
pop
enter
insl
cmp
sbbb
daa
stc
leave
or
cmp
inc
cli
lahf
test
in
fidivrs
and
pusha
cwtl
in
jmp
inc
dec
aam
mov
rcrl
call
popf
cmp
push
lods
push
vmread
movsb
jecxz
jp
andl
sbb
nop
pop
push
push
mov
sub
das
pop
fildll
testb
xchg
inc
push
xorb
jae
test
push
sbb
xchg
xchg
push
into
fs
fwait
xor
cmp
fisubrs
push
pop
dec
fnstsw
fistpl
dec
mov
mov
pusha
cmp
leave
adc
sbb
jecxz
mov
into
cld
je
test
mov
orb
ss
mov
and
test
arpl
jg
lret
call
std
mov
pop
sbb
lret
add
movsb
incl
test
inc
mov
push
adc
cmpxchg
lahf
jecxz
pop
xchg
sbb
loopne
fistps
fisttpll
push
daa
lret
dec
clc
test
jg
sub
mull
clc
aad
lea
js
test
sbb
in
out
sti
jno
cmpsl
sbbl
jl
mov
mov
mov
xchg
dec
push
addb
or
mov
les
push
pop
ss
lods
pop
loope
inc
bound
std
push
test
repnz
push
pop
inc
inc
lcall
push
rcr
lock
sbb
pushf
pop
jp
lret
movsb
jne
xor
inc
hlt
fs
fistl
fcomi
mov
stos
sbb
add
xor
fwait
std
iret
jp
cwtl
jno
test
es
mov
das
push
js
data16
nop
int
test
das
jno
out
int
ret
aas
and
stc
movsl
imul
movsl
adc
add
cmp
add
add
cld
stc
pop
fstpl
push
sbbb
aam
cwtl
iret
push
mov
inc
dec
fcoms
jo
movsl
inc
mov
outsb
xor
das
loopne
pop
mov
lods
test
dec
cmp
mov
mov
xlat
jmp
push
mov
xor
dec
sarb
xor
inc
pushf
mov
and
iret
clc
lds
adcl
xor
pop
mov
rclb
lahf
dec
dec
pushf
push
push
xor
mov
mov
mov
mov
xor
mov
xor
sbb
mov
xor
addl
xor
add
sbbl
add
div
mov
jmp
inc
push
sti
sbbl
mov
dec
popf
jle
dec
jns
jle
inc
imul
adc
data16
fdivs
ljmp
mov
outsb
mov
inc
jno
data16
lock
repnz
pushf
dec
and
inc
cmova
mov
push
sub
mov
fiadds
mov
test
jecxz
mov
adc
lods
jne
inc
push
sahf
push
sub
dec
inc
jb
cmp
xchg
mov
pop
leave
aad
pop
pushf
jne
cmc
lret
mov
in
pop
pcmpeqd
stc
aas
mov
mov
pop
mov
sub
xor
mov
sub
lret
subl
inc
sub
outsb
lock
ret
js
test
ljmp
test
shlb
jns
lret
or
pop
pop
mov
push
aad
lea
mov
cld
loop
cmc
addl
inc
lret
shrl
jle
adc
fsubs
xchg
rclb
adc
jae
inc
lahf
cltd
xchg
mov
imul
dec
pop
in
fstl
xchg
test
jno
in
movb
call
jnp
das
shll
fdivp
pop
in
pop
js
ret
inc
test
xor
rcrl
sub
rolb
std
push
les
lret
ret
mov
push
test
fdivr
xchg
sub
inc
rorl
mov
mov
jne
ja
jns
xchg
mov
inc
mov
ret
pop
xchg
inc
gs
mov
test
and
lods
mov
xor
pop
arpl
cmp
xlat
pop
or
insb
les
fidivrl
inc
test
push
and
cmp
sbb
xchg
add
mov
mov
push
adc
fs
fcompl
xlat
mov
sub
xor
test
sbb
inc
leave
lahf
xlat
movsb
sti
gs
icebp
sub
xchg
mov
fistps
stos
push
or
frstor
jl
ficoms
popa
push
xchg
cmp
fdivs
fiadds
inc
lret
sub
push
mov
enter
test
lcall
aas
mov
mov
movl
sub
inc
daa
lret
fnsave
mov
adc
mov
dec
out
lahf
fwait
std
lods
sub
dec
hlt
mov
inc
imul
testb
pop
fstpt
sub
cs
lahf
enter
add
or
cmpsl
cwtl
cld
leave
sbb
lods
stos
insl
imul
add
mov
dec
repz
sar
sbb
pop
lcall
testb
rclb
xlat
xor
roll
inc
mov
outsl
shl
pop
push
dec
fisubrs
xchg
inc
pop
dec
ds
cmc
loopne
lret
add
jbe
std
imul
inc
jp
push
pop
pop
and
repz
mov
loop
add
xor
std
add
sbb
dec
cwtl
xor
movsl
mov
mov
mov
cld
inc
pusha
cld
jge
jno
pop
pop
or
into
mov
test
dec
fidivrl
hlt
mov
adc
roll
jns
jbe
in
in
mov
outsl
add
push
push
dec
int
mov
push
mov
mov
cltd
xchg
adc
das
add
mov
je
cmp
inc
stc
mov
daa
jge
call
push
mov
adc
add
mov
cmc
and
xchg
and
mov
ljmp
mov
movl
jmp
xchg
mov
jae
popf
cld
ja
or
out
ret
jle
dec
jns
jle
dec
lcall
push
jl
aas
loopne
pop
sub
push
cmp
push
out
inc
jnp
dec
popa
shlb
pushf
lods
cmp
dec
jle
mov
push
pop
int3
in
jmp
xor
loopne
popf
jecxz
cmp
mov
out
dec
jle
sub
mov
push
dec
imul
ds
fsub
mov
push
mov
push
hlt
rcrl
mov
loopne
movsb
push
pop
rclb
inc
mov
mov
call
mov
xchg
xor
lods
or
jp
sub
sub
aam
or
and
and
add
ds
add
push
sbb
ds
inc
cwtl
add
in
negb
fistpl
leave
stos
jo
fistpl
js
lret
or
jo
lahf
and
mov
lret
js
cmp
jl
fnstenv
ljmp
fcmovu
dec
adc
push
sub
add
bound
loopne
xchg
bound
fistpl
imul
mov
movsb
ret
push
and
push
jnp
xchg
std
push
ret
sbb
fcompl
xchg
leave
pop
sti
xchg
repz
into
test
jmp
iret
push
xor
sbb
mov
fisubrs
pop
rcrb
outsb
sahf
lods
es
ja
int
mov
ficoml
mov
loope
rol
ss
fwait
stos
stc
aas
lret
idivl
adc
lahf
mov
stos
jle
push
rcll
fisttpl
push
pop
cmp
iret
pusha
adcb
inc
sti
cmpsl
pushf
sti
gs
jle
sahf
add
mov
lahf
xchg
adc
sub
adc
cmp
mov
addl
ja
cmp
shll
sahf
loop
lea
popa
or
xchg
inc
cmc
xchg
jecxz
mov
add
mov
das
push
adc
mov
push
add
pop
push
jle
mov
xchg
jp
lods
mov
out
daa
loop
cwtl
cmpsb
and
mov
jp
out
or
push
test
dec
imul
xchg
push
dec
or
das
ret
insl
push
fistl
sbb
leave
aam
or
call
sub
push
je
ret
push
xchg
mov
leave
jo
lods
mov
xor
mov
mov
push
xor
movsb
divl
push
sbb
inc
cld
jns
insl
inc
xlat
xchg
rcll
out
xchg
iret
mov
js
ss
cmp
stos
sbb
or
fdivrs
or
adc
stos
out
dec
pop
sbb
out
push
jbe
data16
add
into
adc
adc
or
sbb
and
push
cli
repz
and
pop
rcrl
mov
adc
pop
fisubs
loope
xor
sbb
mov
ljmp
out
push
add
popf
stc
and
ja
xor
or
jp
add
das
movsl
fwait
mov
sbb
xchg
bound
mull
cmpsl
sti
inc
or
and
test
inc
xchg
lret
sbb
filds
aas
pop
cmp
int3
pop
or
mov
jb
inc
cld
add
test
cli
cmpsb
das
test
test
ja
lahf
adc
cwtl
cwtl
mov
lock
fwait
push
cld
sbb
lds
movl
movl
cmp
movl
je
movl
lea
addl
mov
xor
mov
not
mov
orl
imul
movl
mov
movl
mov
cmp
je
mov
mov
sub
sub
mov
orl
mov
xor
add
pop
pop
jmp
pop
add
or
add
sub
pusha
aas
iret
jle
dec
jns
jle
fadds
jnp
cmp
aad
fcoms
mov
cs
push
lea
cwtl
cmp
cmp
jmp
cmp
mov
adc
xlat
lret
adc
and
jmp
fidivs
push
add
out
lock
pop
mulb
mov
inc
and
push
mov
cmpsl
jge
push
pop
jecxz
lcall
inc
inc
fs
mov
mov
mov
add
push
pop
push
ss
ret
dec
push
gs
or
push
call
inc
sbb
ret
push
cmp
pop
stc
adc
fsubrl
pop
aam
sub
bound
mov
add
aam
sub
in
adc
in
cwtl
inc
ds
cmp
cmp
inc
inc
jl
add
mov
add
jl
imul
ret
jo
mov
data16
fisttps
mov
add
fs
pop
mov
cwtl
ds
and
pop
add
sbb
sub
pop
scas
je
inc
pop
testl
pop
negl
push
orl
xor
cmc
shlb
fs
inc
out
scas
ds
test
cli
popf
xchg
inc
cmp
sti
xor
dec
cpuid
xor
xlat
adc
xchg
inc
push
xchg
sub
fstps
fiadds
adc
cs
or
outsl
movsl
xchg
lds
mov
mov
je
jmp
mov
out
pop
add
xor
sbb
jns
jb
gs
cmp
leave
mov
rcll
lods
cwtl
adc
leave
cmp
or
mov
popf
sbb
mov
sub
jmp
push
sbb
or
or
repz
mov
cmp
divl
in
mov
movsb
sti
push
mov
push
out
add
sbbl
fwait
int
ret
insb
sub
jns
jb
cmp
leave
dec
cmpsb
adc
pop
test
push
add
inc
sub
test
aaa
je
or
repz
in
mov
add
jne
shrb
mov
xlat
push
enter
je
fdivrl
insl
sbb
pop
sub
jb
xchg
popf
xchg
or
jno
or
les
pushf
mov
aad
les
test
popa
rcr
popa
out
aaa
xchg
pop
hlt
test
mov
movsb
mov
push
adc
sti
mov
sbbl
shrb
adc
and
mov
push
inc
xchg
adc
push
add
mov
xor
iret
add
xor
add
sbb
dec
sub
cmpps
xchg
fmuls
mov
cmpsl
daa
fdivrs
xchg
outsl
data16
xor
or
sub
lahf
loope
ret
test
or
mov
push
in
sbb
inc
in
jp
xor
fisubrs
mov
xchg
adc
int
stc
sbbb
pushf
or
imul
gs
or
push
dec
pop
mov
stc
pop
fwait
stos
or
push
test
js
adc
cld
jns
jae
into
mov
outsb
inc
test
nop
sbb
mov
sub
sub
pop
add
inc
stos
imul
shl
out
and
push
imul
jl
jb
push
push
or
push
mov
daa
or
comisd
xor
inc
jae
movsb
adc
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
jmp
ret
or
insl
pop
jmp
pop
sbb
or
jle
dec
jns
jle
scas
das
sub
faddl
imul
cmp
das
fsubs
xchg
mov
mov
or
fists
nop
dec
stos
add
cmp
push
and
jle
lahf
cwtl
inc
cld
nop
test
stc
cmc
fs
and
aas
mov
pop
int
test
std
jge
es
ffree
adc
push
stos
and
das
in
pop
loopne
adc
xchg
sub
pop
fldcw
data16
mov
roll
cli
insl
or
adc
std
inc
sub
mov
aad
mov
or
fsubrs
push
mov
mov
sub
idivb
lods
lret
push
mov
xchg
rcll
cmpb
pop
mov
dec
jns
xor
cmp
sub
mov
push
xor
aas
les
mov
fdivrs
stos
and
sub
dec
or
and
adc
bound
js
jb
es
or
mov
in
mov
add
pop
cmp
test
cmp
xor
repnz
pop
repnz
add
idiv
pop
jl
lock
mov
mov
xchg
out
pop
data16
addr16
adc
mov
imul
pop
fidivl
mov
ds
jae
mov
inc
es
xor
dec
push
loop
int3
jl
mov
fcomps
scas
imul
pop
fldt
decl
adc
sub
push
ja
jl
add
and
mov
test
add
les
stos
int3
mov
sbb
inc
fwait
add
adc
mov
pushf
push
inc
daa
stos
xchg
pushl
xchg
adc
icebp
jo
punpckldq
scas
and
dec
fadd
addb
les
push
fistl
aas
xor
cwtl
mov
add
lock
aad
hlt
shrl
adc
fidivl
ds
add
mov
loop
sub
sarl
sbb
iret
dec
ret
clc
or
out
jg
bound
pushf
sbb
ss
int
xor
inc
fsts
hlt
adc
rclb
test
fldl
out
lds
rorb
out
jg
pop
std
repz
pop
lret
arpl
adc
jge
pop
iret
jns
sub
add
scas
xchg
mov
enter
insl
insb
dec
dec
repz
pop
clc
pushw
aas
call
loop
cwtl
pop
es
mov
ljmp
sub
cmp
aad
bound
scas
pop
sbb
in
ds
mov
mov
push
mov
stos
dec
neg
mov
inc
scas
in
xlat
roll
push
cwtl
jo
adc
lods
mov
push
scas
lret
incb
and
ss
out
popa
sub
repnz
rcr
or
sbb
cmpsl
lock
mull
xor
out
push
inc
sbb
jae
out
ret
arpl
xchg
or
jb
sahf
sti
hlt
daa
inc
popf
mov
pop
xlat
xor
imul
mov
mov
pop
cmp
add
push
aad
test
xchg
fwait
xchg
int
inc
dec
rorl
xchg
dec
xchg
ror
inc
cmp
data16
insl
loop
pop
xchg
adc
movl
sbb
int3
pop
aaa
std
les
mov
ljmp
arpl
sub
xorl
jmp
mov
mov
mov
mov
xor
mov
add
jmp
int
adc
push
pop
dec
xchg
leave
mulb
rorl
lods
pop
jle
dec
jns
jle
add
movsb
jmp
pop
pop
jp
repnz
and
repz
cmp
adc
pop
jl
mov
cld
cmovno
lahf
mov
mov
out
mov
in
cmpb
fcmovnu
cmp
mov
rcll
dec
mov
enter
jl
jge
cmpsb
mov
xor
movsl
inc
push
js
jns
ljmp
cmp
addr16
mov
cmpb
movsb
cwtl
enter
popf
in
cmc
xor
sbb
dec
adc
sbb
out
xchg
pop
mov
fistpl
bound
sbb
adcb
mov
rclb
mov
push
cmp
imul
inc
js
cltd
mov
adc
inc
inc
lds
int3
xorl
mov
lods
sub
jmp
sahf
loope
lods
dec
imull
and
lea
push
aam
mov
dec
inc
loopne
push
stc
inc
adc
orb
inc
in
cwtl
add
inc
popf
push
adc
in
lock
out
cs
inc
scas
dec
repnz
lea
xchg
and
idivl
or
dec
cmp
rorb
dec
ljmp
push
sbb
imul
sub
jge
lret
push
es
cmpsl
cli
clc
data16
xor
push
mov
mov
xchg
jp
mov
loopne
addr16
or
xor
popa
adc
das
and
sbb
cmp
decb
into
pop
xchg
and
dec
les
jg
dec
and
aas
xchg
daa
dec
jbe
xlat
dec
es
lcall
cmpsb
xor
inc
xchg
cmc
insb
outsl
push
pop
movl
cmpsb
lcall
push
inc
lret
sar
mov
fmull
mov
jnp
mov
mov
push
and
es
and
and
ss
inc
icebp
jp
sub
adc
and
inc
jle
fistpll
jne
arpl
mov
call
dec
jp
or
out
jecxz
jmp
insb
aaa
and
push
cmpb
les
int
call
dec
mov
sub
xor
stos
cmp
imul
and
jbe
outsb
jo
mov
out
sbbb
or
sbb
dec
lds
pop
adc
push
nop
cwtl
addr16
push
mov
repnz
and
mov
lock
or
inc
stos
popa
mov
leave
test
nop
int
xchg
inc
adc
xor
push
sub
gs
jg
mov
movsb
jle
imul
and
insl
or
test
push
dec
sbb
lahf
lods
xchg
or
push
pushf
ja
clc
inc
inc
cmp
add
mov
aas
aaa
enter
or
loope
inc
dec
je
stos
insb
sub
stos
mov
cmp
in
dec
fcompl
leave
pop
movsl
sub
outsl
dec
inc
out
mov
adc
jge
sub
fistpll
in
inc
outsl
mov
sub
add
fisubl
shlb
jl
jbe
jnp
aad
sub
cld
sub
into
cmpl
push
mov
jl
mov
in
jecxz
jg
jle
mov
mov
jb
xchg
inc
aad
call
enter
sub
inc
fisubs
sub
pop
clc
pop
in
sbb
out
imul
adcl
mov
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
fadd
test
rorb
insl
pop
jl
pop
jbe
stos
sarb
dec
jns
jle
dec
add
testb
mov
enter
shr
inc
jle
and
add
jns
loope
test
mov
xchg
insl
dec
push
aad
or
out
enter
sbb
dec
enter
subb
jae
or
lds
jno
jno
xor
mov
push
jl
adc
aam
xchg
jge
std
and
mov
lock
ret
sbb
sti
mov
add
leave
mulb
push
mov
iret
idiv
cmp
frstor
stos
mov
aad
das
loop
int
adc
popf
or
jnp
js
mov
and
mov
or
mov
ja
out
and
sub
push
sbb
shrb
adc
push
pop
dec
add
lods
mov
add
lret
ficoms
mov
ficompl
xchg
shrb
push
pop
adc
aas
xor
pop
loop
sbbb
jmp
ret
mov
push
jmp
nop
and
push
jbe
mov
add
or
pop
imul
cmpsl
adc
mov
rcrb
call
push
lahf
fcmovbe
aas
jns
icebp
sbb
xchg
int
fsub
cmc
add
sub
adc
aad
cmpsb
cmp
roll
push
jbe
mov
ftst
fcoml
cmpsb
hlt
mov
push
mov
rcr
inc
push
jl
fimuls
pusha
dec
mov
ds
data16
jb
imul
inc
fistpl
gs
incb
movsl
repz
cmc
int
pop
inc
cmpsb
js
ret
cmpsb
in
std
dec
je
dec
push
xchg
sti
imul
nop
aas
lcall
mov
add
sub
mov
shlb
pop
ss
lea
test
movsl
cmc
xchg
cmp
fiadds
jg
fsubs
and
clc
push
inc
push
push
mov
cmpsl
insb
iret
xchg
ss
pop
dec
neg
jo
icebp
int3
insb
pushf
xchg
jbe
mov
pop
xorl
or
sub
mov
mov
adc
inc
fs
sbb
adc
xor
jl
cmpsb
mov
loopne
lcall
add
sub
sub
enter
lcall
test
jmp
shrl
iret
push
dec
push
in
sbb
imul
cmp
loope
in
push
cmp
icebp
loope
push
xor
add
hlt
mov
repnz
cmpsl
mov
mov
adc
sti
add
ja
rclb
inc
ret
inc
xchg
sbbl
inc
pop
sti
rcl
mov
mov
jne
lret
out
sbb
sbb
loop
adc
adc
lea
or
jbe
aas
inc
aam
shll
fs
or
aas
lods
push
cmpsl
xor
and
dec
xor
out
xchg
mov
adc
ret
lods
rcrl
adc
adc
movsb
loop
dec
add
stos
push
fsubrs
push
jl
out
cmc
out
and
outsb
addr16
push
jecxz
fs
sti
mov
popf
xor
fsts
dec
pushf
push
fisttpl
push
in
jne
pop
jbe
and
mov
test
shrl
ficoml
sub
outsl
scas
sub
push
fs
das
xchg
test
ret
push
outsb
insl
div
mov
int
mov
imul
push
aam
mov
add
test
sbb
jb
fwait
pop
lret
and
movsl
test
enter
repnz
imul
lret
test
decl
add
inc
pop
jmp
mov
cmp
je
mov
jmp
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movzbl
sbb
mov
sbbl
push
xor
or
sbb
push
jmp
jmp
lahf
xchg
mov
sbb
and
fidivrs
loope
jle
fists
fcoms
xchg
jns
mov
sub
bound
xor
sbb
jmp
pushf
or
scas
pop
sbb
insb
mov
dec
xchg
lret
and
push
dec
cmp
mov
je
rcr
test
xchg
mov
and
mov
ja
addr16
jnp
mov
rcr
shlb
sbb
cli
lcall
aam
sbb
clc
cmp
cmpl
cltd
loopne
sub
roll
jo
lahf
dec
jg
cmp
or
adc
dec
sbb
jecxz
orl
pop
mov
and
cli
push
inc
and
pop
imul
and
mov
popf
or
std
or
push
int
ljmp
loope
std
fistps
push
add
mov
cmp
pop
lods
leave
or
push
mov
jp
scas
movsb
cmp
pop
movsb
sub
inc
push
inc
dec
aas
loop
xchg
pop
jb
jno
mov
mov
mov
mov
cmp
mov
add
sbb
sbb
int
js
hlt
mov
mov
push
or
ljmp
jecxz
insl
jb
lcall
dec
stc
or
add
sarb
in
mov
roll
or
push
setne
lcall
mov
in
xchg
inc
idivl
sti
and
jb
je,pn
loopne
or
add
pop
mov
xor
sbb
jmp
inc
xchg
push
push
fcoml
inc
mov
inc
mov
sub
pop
cmp
test
pop
jp
pop
call
xchg
call
and
xchg
sub
inc
cmpsb
xor
fsubs
dec
add
ljmp
incl
xchg
inc
xor
ret
or
cld
mov
scas
inc
pop
mov
jmp
aas
imul
dec
adc
jb
jp
dec
shrb
mov
test
imul
inc
adc
fs
lahf
aaa
stos
popf
ja
out
pop
ljmp
jg
into
cltd
int3
xchg
jge
adc
add
mov
pop
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
mov
add
push
sub
mov
xor
jmp
push
ja
push
aaa
push
jo
mov
enter
jle
loope
jle
movb
ds
mov
stos
clc
int3
mov
lods
inc
sbb
mov
dec
and
call
push
cmpsb
jb
movsl
or
iret
mov
popa
outsb
cmc
rcrb
int
cwtl
xor
jae
inc
ret
cld
dec
dec
jecxz
sahf
popf
pop
mov
popf
scas
xchg
or
sti
jmp
sti
dec
data16
in
hlt
mov
or
icebp
push
adc
sbb
mov
push
mov
mov
into
or
fsubs
add
test
dec
sub
test
jle
xchg
sbb
mov
adc
xchg
add
jno
ret
xor
push
mov
test
sbb
insl
add
cmp
std
andb
adc
inc
imul
push
ljmp
sub
fs
popf
lret
mov
and
push
xchg
push
and
sbb
scas
aas
lods
sub
into
push
jno
sahf
mov
push
xor
xlat
cmp
xchg
xchg
push
xchg
xor
sub
mov
jne
inc
jg
in
das
and
mov
pop
push
xchg
adc
int
aam
and
hlt
pop
cwtl
int
sahf
push
addr16
jmp
push
push
repnz
cmpsl
std
stc
mov
mov
out
fwait
jl
inc
push
sbb
stc
sbb
ficomps
fnstenv
cmp
xor
mov
or
test
pop
fdivrp
mov
aam
fadds
scas
std
fadds
mov
mov
repz
and
popa
inc
das
pushf
jmp
loope
sahf
shl
mov
fstpt
ret
stos
inc
cld
test
out
das
aad
jnp
repz
xchg
adc
or
cltd
lods
inc
mov
addr16
mov
into
xlat
and
shl
daa
popf
mov
pop
push
mov
addr16
push
fidivs
cmpsb
and
mov
jg
mov
and
sbb
xor
fmuls
addr16
pop
push
mov
pop
test
jmp
sub
cmpsb
les
mov
int3
sub
push
adc
jmp
jo
dec
sbb
xchg
mov
mov
xor
sbb
sti
mov
xchg
out
or
xchg
mov
jp
jbe
mov
xor
notl
movl
movl
add
jmp
cmp
jmp
adc
sbb
xchg
pop
adc
aad
jbe
rcr
jle
loope
jle
in
jle
xchg
and
dec
notb
sbb
sbb
arpl
xor
in
push
loop
or
repnz
test
jnp
sub
clc
push
push
incb
xchg
popl
movsb
mov
dec
sbb
add
sti
and
lret
cmpsl
loop
aas
fistpll
xchg
cmpsl
inc
in
jns
pushf
push
mov
movsb
mov
mov
fistl
fbld
pop
cld
or
ljmp
adc
test
sub
ret
mov
in
mov
lcall
pop
popl
pop
mov
out
jg
addl
out
pop
mov
iret
stos
aam
jmp
mov
sahf
lds
sbb
scas
mov
pop
dec
xor
mov
gs
aad
arpl
mov
out
test
fldenv
lahf
mov
mov
xor
mov
cld
fldenv
push
scas
test
fnstcw
xorb
adc
cli
adc
jno
sahf
pop
test
sub
push
mov
inc
adc
pusha
lcall
mov
daa
fidivl
xchg
add
mov
and
cmpsl
shll
mov
jecxz
orl
cli
in
rorb
lahf
lret
push
je
mov
iret
cmovb
ret
cmc
jmp
out
sbb
mov
out
dec
or
jecxz
cmp
pop
in
mov
jge
addr16
rcl
shlb
fcomp
pop
stos
inc
cmp
push
adc
mov
movsb
jnp
stos
sbb
repz
and
sub
push
xor
add
or
bound
orl
pop
jmp
outsb
jge
pop
and
jne
lret
popa
mov
mov
dec
in
pop
inc
xchg
imul
cmp
mov
xor
pop
mov
cwtl
inc
imul
push
fcomps
sub
mov
test
jl
clc
call
iret
rorb
nop
fstl
or
out
lret
push
sarl
cld
imul
and
cmpsb
mov
jne
mov
mov
movl
mov
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
jmp
call
je
fnsave
inc
leave
rorb
jle
loope
jle
mov
call
jmp
cmpsb
jno
and
mov
xor
fsubl
add
mov
in
imull
pop
orb
add
push
movsb
jo
pop
test
push
fsubp
rcl
mov
pop
out
push
dec
test
adc
pop
aam
xor
imul
cmpsl
pop
and
aad
outsb
cmp
ss
xadd
jmp
fcmovnb
mov
out
movsb
adc
cli
nop
imul
hlt
or
inc
xchg
xchg
scas
out
push
xlat
pop
inc
stc
xor
dec
push
dec
xchg
jmp
addb
mov
pop
es
push
pop
movsb
cmp
repz
xchg
dec
lds
fildl
fwait
stos
fldenv
push
pop
adc
sbb
dec
and
pop
test
xchg
dec
cmp
add
adc
dec
aad
adc
addl
testl
push
cmpsl
jbe
stos
push
push
shr
inc
in
push
or
sbb
lret
cmp
jae
sbb
mov
inc
xchg
jl
inc
xor
insl
out
lods
xchg
test
loopne
push
pop
incl
rcrl
scas
sbb
sbbl
adc
outsl
and
fptan
cmpb
mov
das
sbb
xchg
negb
and
repz
mov
push
cli
movsb
out
jmp
pop
outsb
stos
xor
iret
jmp
sub
test
adc
jne
push
or
mov
adc
and
adc
push
cmc
fiadds
idivl
repz
cltd
ret
or
jno
cmp
push
outsb
mov
jno
cld
shlb
sti
jecxz
nop
movsl
push
sub
in
mov
scas
daa
pop
inc
popf
fstl
sub
cmp
scas
xor
packsswb
mov
inc
cmp
xor
outsb
add
lcall
inc
and
inc
add
jl
sub
cli
cli
mov
ret
mov
jle
mov
cld
jl
ja
or
adc
fldenv
in
jne
and
push
adc
or
mov
orl
sub
push
mov
or
mov
addl
add
subl
push
decl
call
movl
incl
cmpl
movl
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
jmp
mov
xchg
jno
jno
out
fisttpl
das
loopne
jle
js
jle
or
pop
pusha
imul
daa
rorl
call
cmp
cmp
ficoms
mov
push
lea
pop
ja
pop
test
stos
xchg
cmp
pop
or
sub
mov
dec
add
fisubl
fmull
cmp
jge
pop
int3
fwait
cwtl
pop
mov
ret
outsl
adc
adcb
mov
movsl
popf
lcall
sbb
cltd
lods
jmp
mov
adc
add
mov
mov
sarl
cmpsl
arpl
xchg
adc
inc
bound
cmc
leave
adc
or
cmpsl
mov
loop
jns
jg
lret
add
dec
fs
jbe
and
fimull
popf
inc
jns
xchg
mov
loope
mov
and
dec
jg
pop
xor
pop
cld
xlat
ret
es
cmp
mov
lds
sbb
in
and
jno
rorb
mov
arpl
xor
andb
stos
dec
repnz
test
xor
mov
xchg
rcrl
jnp
jmp
dec
xor
xchg
push
xchg
mov
and
sti
mov
xchg
adc
push
jno
mov
pushf
add
dec
frstor
dec
inc
cltd
jae
orl
fcmovnb
mov
stos
in
arpl
or
lods
xor
fsubrp
inc
repnz
mov
cmpsb
enter
inc
fistl
sub
call
sub
mov
sub
cmp
xor
shl
mov
fisttpll
sub
jg
call
push
imul
mov
mov
outsb
inc
pusha
xor
sub
fwait
xchg
shll
add
add
neg
xchg
lret
jns
xor
add
sub
popf
les
push
scas
sti
push
inc
fildll
std
push
movsl
add
jmp
xor
mov
out
std
stos
lahf
sbb
inc
adc
jge
xor
xchg
ss
fdivrs
lock
xchg
mov
and
jg
adc
jecxz
push
ss
pop
xchg
pop
sbb
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
adc
mov
mov
andl
jmp
jns
out
std
jge
or
clc
les
pop
xchg
loop
jle
jns
jle
or
popa
pop
xor
mov
mov
pop
dec
sub
pop
in
mov
xlat
dec
fstpl
or
mov
inc
mov
in
push
loope
mov
jl
mov
jp
xchg
adc
mov
ss
out
loopne
push
fcoml
mov
jns
sub
jno
fidivrl
jnp
ljmp
int
cmp
cmp
inc
ret
mov
test
mov
sbb
mov
jl
in
ret
mov
fs
ret
sbb
arpl
ljmp
jnp
or
xor
das
cwtl
mov
pop
xchg
push
mov
inc
ret
or
sub
mov
mov
xor
je
icebp
mov
lret
icebp
mov
mov
in
jo
sbbl
pusha
call
mov
bound
cs
lahf
fbld
sub
popf
rcll
sbb
add
adc
xchg
int
imul
mov
loope
inc
pop
or
inc
ffree
call
sbb
or
add
sub
mov
push
int
fxam
jg
lret
insb
inc
enter
jns
iret
sbb
and
mov
sbb
addr16
das
int3
in
push
jl
sbb
push
ss
mov
pop
insb
add
cld
sub
xor
sti
out
aad
aaa
fdivr
loopne
push
ret
mov
jbe
inc
out
repnz
mov
push
test
jno
scas
insl
or
rcr
adc
jno
dec
adc
loope
gs
shl
out
ja
cli
mov
fxch
cmp
push
lea
cmc
dec
icebp
pop
mov
adc
dec
pop
cmp
lea
sub
test
call
dec
outsl
mov
mov
fs
and
cmp
out
mov
enter
sub
push
lcall
mov
push
push
repnz
mov
xchg
push
addr16
test
mov
jecxz
sahf
adc
daa
insb
stos
xchg
lcall
mov
into
fisubs
xor
adc
out
dec
xchg
addr16
addr16
add
and
test
bnd
xchg
cmp
jb
xor
push
iret
or
cmpsb
cmp
or
and
cmpl
mov
insl
insl
ret
ja
cs
fmull
sub
lcall
sbb
imul
lock
fiadds
mov
mov
ss
imulb
repnz
cmpsl
sub
push
mov
int3
lods
subb
mov
shr
pop
mov
jmp
or
inc
dec
fadd
cmp
imul
push
into
enter
push
add
fsubp
rclb
xchg
pop
out
push
aam
and
or
mov
inc
imul
mov
or
aad
xlat
idivl
aas
xchg
ja
push
adc
xchg
nop
push
addr16
jne
xor
jno
pop
pop
scas
dec
mov
clc
xor
xor
inc
mov
scas
sar
cmpsl
negl
clc
mov
push
xor
xor
iret
cs
fcoml
dec
rclb
loop
xchg
int
cmp
lock
xchg
ja
sbb
std
mov
xor
add
mov
sahf
fbstp
daa
pop
jg
adc
mov
int
sbb
jno
or
mov
lahf
lret
pop
jecxz
mov
lcall
cmpsb
pop
inc
out
add
push
out
inc
or
add
cmp
movl
xor
movl
movzwl
add
mov
mov
jmp
jmp
or
std
fdiv
sbb
out
mov
jle
jns
jle
adc
mov
inc
cmc
dec
mov
lea
sbb
nop
jle
or
cmpsb
fsubr
loop
pusha
add
fstl
out
pushf
insb
lret
mov
fs
nop
loope
mov
add
xchg
mov
and
xor
jno
add
sub
cwtl
shl
mov
mov
sub
cld
cmp
cmp
movsb
daa
outsl
jmp
adc
and
test
xor
mov
arpl
test
imul
xor
inc
addl
aaa
leave
mov
in
jno
xor
mov
repnz
push
in
repz
icebp
frstor
jnp
dec
jb
pop
sbb
repz
movsl
lods
pop
arpl
mov
lods
ljmp
dec
cmp
lods
das
push
hlt
push
arpl
std
mov
pushf
or
mov
lods
inc
movsb
adc
sbb
jmp
sub
pop
rclb
sub
fs
push
push
xor
dec
clc
mov
pop
jns
test
test
jno
fildl
and
mov
mov
fwait
dec
jnp
add
push
mov
loop
dec
jge
pop
addb
adc
xchg
xlat
scas
notl
rcrb
scas
inc
jge
adc
rolb
repnz
adc
pop
mov
inc
adc
test
cmp
insb
xor
mov
mov
mov
rorb
pop
hlt
lret
mov
cmp
stos
dec
popa
mov
mov
cmp
jle
and
nop
inc
loop
pop
dec
loop
clc
mov
in
out
cmpsl
enter
out
fildl
or
sub
sbb
pop
in
test
icebp
add
sahf
loopne
test
popa
lea
aaa
jnp
or
movsb
mov
lret
mov
mov
mov
xchg
adc
jmp
int3
adc
xchg
and
ds
or
aaa
mov
imul
mov
push
mov
data16
shrl
pop
mov
adc
dec
jo,pn
mov
clc
sub
mov
mov
or
inc
add
lods
test
mov
rcrl
adc
movsl
push
inc
mov
add
and
cmpsb
icebp
ss
mov
es
adc
in
shr
or
outsl
scas
push
aam
jecxz
mov
scas
sbb
in
mov
insb
push
xchg
jo
pop
adcb
sti
aam
les
pushf
in
xor
pop
jmp
leave
and
test
push
sbb
or
cmp
in
pop
ds
add
sub
sbb
aas
stos
add
in
lods
dec
loopne
clc
cwtl
add
and
pushf
arpl
xchg
inc
push
insb
mov
fnstenv
cltd
aam
pushf
data16
mov
mov
ss
daa
fcompl
pop
out
jb
stos
pop
jb
aaa
xor
sbb
add
je
ljmp
add
jnp
dec
push
cmpsl
hlt
sbb
mov
cmp
lods
jno
cmpsl
jmp
test
jp
test
mov
cli
push
insb
bound
cmp
push
leave
iret
inc
sub
sti
pop
push
inc
add
push
outsb
fstpt
push
ret
add
pop
xor
xor
adc
jge
dec
stc
xor
mulb
xor
mov
jns
push
pusha
xchg
test
add
in
scas
add
popf
xchg
ja
pop
add
mov
aaa
out
inc
sarb
dec
dec
repnz
pop
rclb
test
jmp
in
mov
aam
roll
mov
shrb
add
add
mov
or
xor
xor
add
xor
mov
add
mov
inc
mov
xor
add
mov
movl
mov
mov
sub
add
jmp
xor
xchg
mov
stos
cs
pop
iret
test
jle
jo
jle
movsb
push
sbb
xchg
in
mov
xor
jmp
hlt
push
add
cmpsb
pop
xchg
lds
in
and
sub
icebp
mov
inc
mov
mov
sub
enter
loopne
inc
mov
adc
cltd
in
or
fnstenv
pop
jle
mov
push
and
ja
mov
arpl
push
lcall
mov
mov
imul
iret
add
pop
xchg
or
push
test
push
mov
add
insl
int3
jb
and
lods
dec
fcomi
mov
mov
add
mov
mov
adc
sbbb
jns
and
cmp
out
cmp
cmpsb
push
lods
adc
ds
pop
loopne
mov
jp
or
lds
sti
add
jecxz
xchg
jge
mov
jle
fsubs
int3
call
dec
pop
push
cmp
data16
xor
push
push
sarb
cmp
sti
xor
or
mov
mov
cld
jecxz
inc
subl
sub
sub
cmpsl
add
cmp
mov
cmp
sbb
pop
cmpb
mov
pop
push
push
jae
repnz
mov
cmpb
xor
stos
push
insl
mov
pop
or
mov
int
push
mov
popa
mov
out
cld
xchg
cmp
popa
sbb
xchg
mov
nop
cs
or
jno
add
xchg
lret
xchg
adc
ja
mov
or
and
mov
add
xchg
dec
mov
fistpll
pop
jae
mov
push
pop
or
pop
cmp
ss
cmpsl
cmp
sbb
mov
test
movsb
mov
test
stc
lahf
sub
daa
dec
cmp
gs
ret
mov
cmp
scas
ja
push
sbb
std
lcall
mov
popa
mov
xor
push
xor
mov
mov
mov
xor
pop
movl
lcall
push
cli
xor
fisubs
inc
enter
pop
out
lcall
xor
inc
push
xchg
cmp
idivb
filds
stos
sbb
hlt
inc
xor
dec
jle
fnsave
shr
pop
shr
fldl
mov
pop
aad
adc
bswap
mov
and
test
mov
jno
jp
hlt
inc
sub
out
cwtl
loop
mov
das
add
cmp
push
ret
test
aad
pop
jmp
mov
sbb
mov
outsl
pop
xor
sub
xor
and
fcmovnb
andl
and
test
xor
mov
jns
jp
out
jl
xor
and
pop
push
ret
sub
dec
sub
dec
sub
jo
aaa
dec
cmc
in
in
mov
mov
dec
cltd
loopne
mov
mov
mov
mov
mov
xchg
and
loop
mov
jmp
mov
in
lods
test
pop
mov
sbb
jmp
and
xchg
imul
xor
xchg
jo
pop
cmp
vmread
xor
call
add
rolb
sbb
aas
and
dec
cmpsl
mov
xchg
mov
outsb
in
loopne
icebp
adc
dec
in
stos
and
add
sbb
je
out
std
popa
scas
fs
xchg
jp
inc
icebp
jnp
sub
lea
aad
xchg
mull
jo
lret
pop
movl
and
jmp
popa
imul
cld
popf
popa
imul
push
fldcw
sbb
xor
jle
jns
jle
mov
ret
cli
and
in
sub
lods
push
das
lret
mov
mov
mov
add
jle
xor
stos
and
inc
insl
jb
or
shll
dec
add
je
fs
lret
ficompl
and
call
sti
cwtl
pop
mov
pusha
mov
hlt
sbb
or
bnd
movsl
sbb
xchg
js
xchg
sub
cmpl
ds
and
pop
mov
pusha
lds
repnz
ret
pop
cmpl
mov
mov
cmp
push
lahf
data16
pop
cmp
xchg
mov
push
ds
das
jl,pn
movsl
fistpl
and
adc
movl
xchg
pushf
nop
lods
xor
add
call
inc
dec
aaa
andl
xchg
ljmp
pusha
scas
data16
dec
adc
test
sub
jne
test
xor
inc
mov
sub
xor
shll
mov
add
cwtl
into
adc
lods
xchg
bound
in
cs
sub
out
pop
or
jno
jl
push
clc
jns
inc
movsl
insb
rcrl
pop
data16
and
push
ljmp
rcl
and
xor
mov
add
fsubrl
mov
mov
cli
out
loope
in
push
adc
mov
sbb
pop
cmp
div
sub
jmp
xchg
pop
outsb
fstpl
je
cmp
adc
add
outsl
push
jle
mov
cmp
add
ljmp
mov
out
sbb
pop
pop
sub
jl
les
es
sbb
jmp
pop
gs
dec
push
sub
std
or
and
dec
jl
js
mov
adc
pop
sbb
lret
inc
loope
jl
mov
sub
sub
mov
xchg
mov
int
outsl
mov
ljmp
nop
mov
lar
adc
and
and
push
in
adc
repnz
aas
mulb
and
adc
push
push
fmul
aam
test
ss
lds
mov
mov
xor
out
mov
jg
pop
lahf
lcall
fs
out
jmp
shrl
out
push
jg
cmp
mov
and
js
jb
lret
data16
in
mov
pop
or
mov
jg
and
nop
lret
fst
lock
cmp
inc
push
jmp
jmp
pusha
xor
addb
test
lcall
fstpl
jo
inc
pop
add
adc
jb
sbb
pop
fwait
mov
lcall
sbb
xchg
sbb
fstl
addr16
push
dec
jo
add
clc
fisubl
fs
xchg
enter
lcall
or
jae
or
xor
mov
mov
xchg
lret
pop
mov
add
jge
or
into
inc
popa
stc
xchg
dec
mov
mov
int3
cwtl
xor
notl
in
xor
clc
mov
sub
pop
into
gs
inc
cmpsb
fsubr
add
adc
jp
mov
sub
popa
dec
push
ja
loopne
mov
das
pop
addb
js
mov
push
sarb
mov
shrd
cli
dec
lret
icebp
insl
add
xor
sbb
sbb
std
push
ret
scas
std
incb
mov
lret
or
inc
aam
test
test
int3
cmp
cmp
movl
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
pushl
push
call
cmpl
jb
or
movl
sbb
mov
xor
sub
mov
orl
add
cmp
je
movl
push
jmp
xorl
mov
add
mov
addl
sub
movl
mov
andl
xor
addl
add
movl
cmp
movl
jb
mov
mov
sub
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
inc
xor
sbb
add
or
add
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
and
mov
sub
cmp
movl
ja
xor
add
add
mov
orl
jmp
xchg
dec
in
in
test
out
jae
and
jo
jle
movsb
enter
and
call
loopne
rcrb
sub
pushl
mov
aam
adc
pop
sar
inc
add
dec
je
imul
fcmovnu
mov
push
repz
cmp
cmpb
and
or
adc
adc
mov
aad
xchg
call
add
into
and
movsl
push
pusha
cmp
adc
dec
push
dec
in
repnz
iret
adc
mov
mov
cmp
loopne
test
loop
fcoml
ret
out
mov
cltd
sbb
in
sub
idivl
sbb
fcmovnbe
mov
out
mov
loop
adc
inc
cs
ds
iret
adcl
sbb
dec
insb
mov
and
add
pop
add
xchg
cmp
jo
sub
pop
in
xchg
pop
lcall
and
enter
or
mov
pop
or
into
xorb
repz
push
add
fcoml
test
hlt
out
in
sub
mov
imul
or
data16
popa
test
lds
cs
ret
mov
shll
or
ret
ret
dec
add
sub
rcrl
jno
leave
outsb
sti
imul
jnp
inc
sub
sti
xor
cld
int3
sub
push
shrb
outsb
ret
loopne
subb
ja
loopne
jo
popf
or
sbb
sbb
js
sti
andb
sahf
mov
mov
ficomps
outsb
xor
jge
jns
pop
aam
data16
and
adc
push
mov
call
and
mov
jo
lds
fcoml
jp
pop
sbbl
adc
aad
popf
mov
leave
pop
stc
adc
jge
aas
mov
mov
std
push
das
out
repz
adc
in
ret
into
inc
inc
ja
sbb
cmp
cmpl
int3
sub
push
xor
sbb
mov
xor
mov
mov
fwait
add
or
sbb
push
or
push
pop
fdivrs
cltd
adc
lret
addl
test
inc
inc
mov
xchg
add
inc
dec
sbb
out
stc
xchg
cmp
ret
stos
cmp
inc
sub
ljmp
add
js
and
fidivs
xchg
mov
cmp
mov
and
jp
ret
or
sub
adc
jbe
xchg
arpl
adc
xor
das
and
outsl
call
adc
sti
mov
xor
inc
push
mov
popf
push
pop
mov
call
push
shl
jbe
push
xor
pop
xor
push
cmpsb
dec
pop
mov
loope
cli
mov
cmp
mov
das
jl
scas
pop
out
mov
cld
or
jnp,pt
leave
cmp
xlat
imulb
out
loop
mov
gs
test
xchg
push
out
sbbb
xlat
mov
int
mov
mov
cmp
bound
sub
cmp
inc
sbbb
jno
and
mov
push
fdivrl
add
mov
push
mov
and
pop
sbb
loop
in
ret
mov
add
inc
js
lea
cs
push
mov
test
xor
cs
ja
shlb
lcall
dec
jp
pop
scas
inc
mov
std
add
dec
lods
out
inc
inc
and
aad
push
fs
jge
int3
cmpsb
out
divb
imul
divl
xor
rolb
add
inc
inc
add
shr
jno
add
mov
subl
mov
mov
sub
mov
xor
xor
or
add
adc
jmp
test
jne
xchg
in
in
push
pop
jl
cld
jle
jo
jle
int3
out
inc
xor
mov
dec
cmpsb
roll
pop
fldcw
cmp
mov
xchg
ds
mov
add
ss
sub
add
or
xlat
mov
dec
jl
cmpsl
or
icebp
out
repz
xchg
test
ss
mov
ficompl
mov
xchg
daa
out
test
jns
dec
stos
clc
cmp
push
sbb
and
in
push
in
arpl
flds
pushf
cwtl
mov
cmp
cmp
es
mov
jb
sbb
xor
mov
data16
popa
int3
imul
inc
out
mov
adc
vmread
mov
xlat
push
cli
mov
movb
mov
sub
mov
cwtl
ror
icebp
aad
sti
repz
xchg
dec
leave
mov
sti
pusha
cwtl
rcll
mov
cwtl
sub
xchg
enter
lcallw
sub
mov
das
mov
and
sbb
loopne
pop
dec
stos
jge
pushf
aas
lcall
or
ret
nop
xor
out
dec
lcall
jge
sub
out
dec
call
ja
in
pop
lcall
bound
fistps
fidivrs
into
stos
lcall
push
cld
sti
bnd
inc
xor
je
inc
sub
sbb
jl
xor
add
push
test
jmp
out
mov
jge
out
stos
sbb
dec
gs
ds
push
add
cmp
loope
xchg
jnp
into
jne
dec
pmulhuw
xchg
les
pusha
nop
ljmp
std
pop
stos
and
xchg
ret
sub
addr16
mov
popf
xorl
or
fsubl
or
nop
add
ret
jge
mov
pop
or
cwtl
gs
daa
push
dec
jg
mov
mov
xor
insb
pop
mov
les
cmp
call
mov
sub
mov
push
mov
mov
in
sbb
push
pop
rcrl
pop
inc
jae
jb
mov
fucomp
into
outsb
sbb
mov
loopne
cmpl
xorl
jno
pop
dec
jle
lods
cmpsb
inc
and
cmp
or
outsl
adc
xor
cli
rolb
pop
adc
je
sub
xchg
cld
xchg
rcr
xchg
inc
in
sub
lods
push
js
es
jnp
xchg
mov
jae
xchg
shr
ljmp
jp
pop
outsb
mov
sub
testl
bound
aas
int3
mov
aam
gs
scas
loope
fwait
sub
fdivr
aad
cmp
xor
xchg
aam
and
mov
shrb
fildll
cmp
push
imul
shlb
sarl
inc
imul
pop
sub
aad
mov
sbb
push
test
dec
cmp
xchg
push
push
push
or
xchg
pop
repz
jecxz
cmp
jb
aad
add
pop
inc
jne
pop
sbb
mov
sbb
aam
xor
pop
out
mov
cwtl
jae
jae
push
test
mov
pusha
jne
stos
pushf
and
and
dec
push
add
adc
mov
cltd
mov
cwtl
lahf
mov
sub
pop
lret
xorl
lret
stc
mov
inc
cmp
mov
inc
jae
jns
inc
adc
xor
pop
push
adc
out
jb
xchg
scas
xlat
xor
mov
mov
xorl
sub
movl
cmp
movl
ja
mov
mov
movl
jmp
sub
mov
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
jmp
xor
xor
xor
add
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jb
add
imul
mov
mov
jmp
aas
andl
push
repnz
pusha
fstps
idiv
jle
jo
jle
add
sub
icebp
aad
cld
pushf
subl
inc
jae
repnz
lods
mov
andb
push
cmp
imulb
ljmp
mov
mov
arpl
xlat
loop
shrb
ljmp
push
loopne
adc
enter
add
out
pop
jp
sbb
mov
dec
jmp
clc
cmpb
out
dec
sbb
xor
cwtl
mov
or
cmc
jl
test
out
outsl
jp
jl
inc
mov
add
icebp
jp
add
jg
and
mov
out
and
mov
out
rolb
shlb
out
fisubs
lcall
mov
sub
cmpsl
pop
adc
shll
mov
stos
adc
add
fstpl
inc
and
jo
pop
cmpsb
mov
mov
jbe
lret
push
xchg
lea
sub
inc
movsl
xchg
dec
int3
dec
ja
jns
jno
mov
xchg
jge
addr16
inc
lcall
test
mov
inc
sbb
cmp
mov
and
rcrb
test
sbb
sbb
and
jb
ret
lods
jmp
cs
nop
jle
je
xchg
pop
hlt
pushf
out
sbb
mov
jo
ja
jbe
and
bound
xor
outsb
decl
imul
mov
xor
jbe
xchg
dec
mov
pushf
cmp
jecxz
cmp
jae
outsb
inc
add
stos
add
mov
shll
enter
cmp
cmc
test
xorb
stos
pop
sti
mov
dec
psrld
adc
jp
pop
fcomp
add
repz
cmc
fidivs
sub
test
add
sbb
xor
sbb
jp
jne
aas
push
push
jl
fs
cmp
sub
int
int
mov
scas
cli
mov
movsl
icebp
fnstcw
fnsave
inc
sbb
xchg
mov
xor
fcmovnb
sbb
dec
mov
mov
stc
js
sarb
cmp
adc
jne
add
arpl
mov
in
jl
or
mov
inc
inc
mov
call
icebp
mov
scas
out
pop
add
adc
sub
shl
sbb
scas
addr16
shrb
lret
xor
lock
gs
push
push
fistpl
xlat
sbb
mov
xchg
pop
dec
fs
sub
aam
cwtl
int
mov
mov
std
in
mov
xchg
sbb
xor
jmp
in
mov
pop
es
xchg
push
cltd
xor
jge
pop
pusha
xor
mov
push
loopne
shlb
sbb
pusha
or
out
xchg
pop
cmp
push
jo
xchg
cli
sbb
mov
lahf
xchg
xlat
add
shrl
fimull
lret
cmc
push
push
mov
lcall
push
out
out
insl
push
ss
test
mov
push
shrb
fwait
mov
dec
popa
jb
movsl
por
push
fidivrl
push
mov
mov
adc
mov
gs
dec
fs
in
jmp
outsb
pop
fwait
movsb
sbb
sbb
shll
jbe
fildll
inc
cli
int
pop
and
xor
jae
sub
jbe
insl
divl
dec
cld
loopne
loop
sbb
pop
fmull
loopne
push
enter
lock
ss
pop
sbb
sbb
sbb
xchg
gs
sbb
stos
lret
scas
hlt
jne
xchg
mov
bswap
mov
pop
xor
cmc
jle
xchg
or
stos
jmp
sbb
shlb
or
inc
jle
xchg
inc
popf
fdivl
fistpll
fimull
xchg
add
add
or
add
adc
add
dec
int3
aam
pop
rcll
xchg
mov
stos
jecxz
call
jns
jle
into
sub
mov
hlt
mov
xchg
addr16
fwait
and
cmp
ljmp
das
into
jne
push
and
inc
adc
or
mov
cli
add
mov
loope
sahf
mov
sahf
ficoms
pop
cli
pop
popf
dec
testl
rcr
loopne
jmp
mov
jns
xlat
scas
mov
jmp
arpl
xchg
bound
mov
popf
das
dec
mov
adc
jecxz
clc
das
mov
js
xor
xchg
sbb
inc
mov
push
inc
sbb
sbb
loop
je
in
std
cwtl
cmp
movsb
add
in
outsb
out
popf
mov
push
xlat
int3
in
incb
jg
mov
mov
imul
pusha
test
fldenv
sub
jg
pop
xor
mov
mov
popa
xchg
sub
and
insb
xchg
mov
call
les
push
add
adcb
mov
xlat
and
bound
test
mov
sbb
xor
nop
xchg
sub
cmp
sbb
nop
addr16
jns
jle
div
jbe
mov
inc
jle
pop
lds
insl
push
jl
out
idiv
andb
dec
std
dec
sbb
roll
xchg
mov
sub
int3
push
arpl
xchg
mov
movsb
gs
lods
pusha
xor
push
xchg
mov
xchg
fcom
mov
mov
jmp
subl
fnstsw
jle
andl
scas
mov
mov
mov
clc
mov
push
xchg
dec
hlt
aad
jp
cs
hlt
sub
pop
inc
mov
fs
into
add
add
in
cmp
mov
push
pop
push
mov
or
clc
incb
les
lds
inc
out
aas
loopne
cli
xor
dec
xchg
mov
cmpsl
xor
mov
pop
jmp
jecxz
nop
jge
jb
inc
push
and
inc
xchg
repz
dec
sbb
inc
scas
xlat
int
insb
mov
and
in
insl
loopne
push
movsl
addr16
sbb
pop
xlat
fcmovne
or
cmp
inc
cmpb
push
mov
imul
ret
in
inc
xor
sub
cwtl
mov
dec
pop
jb
sahf
pop
clc
jecxz
sub
in
loope
and
mov
mov
cmp
adc
je
insl
arpl
outsb
add
fs
push
aad
in
add
xor
call
mov
je
out
movntps
dec
sbb
in
and
or
fildl
xor
into
scas
push
xchg
iret
cli
pop
pop
lock
adc
jbe
bound
or
insb
pusha
fsubl
or
xor
rcr
add
insl
jo
aad
sahf
mov
int
es
shr
jnp
and
outsb
jge
aaa
scas
std
adc
pop
pushf
xchg
push
cmp
lods
pop
imull
aad
je
sbb
xchg
xor
inc
mov
xchg
subl
sbb
or
and
imul
push
or
pop
cmpsl
cmp
mov
dec
add
and
lahf
cmp
lret
cmp
sub
xchg
stos
xor
jge
shll
cmp
hlt
int
push
push
cmpsl
sub
add
adc
jbe
int3
cli
pop
orl
and
mov
add
xlat
lods
xor
mov
dec
iret
jb
xor
orl
cli
mov
popf
xor
sub
or
inc
sbb
push
fadds
pop
mov
adc
sub
mov
nop
lcall
int3
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
xor
outsl
jne
std
inc
sbbl
xor
lods
xchg
loop
jle
jo
jle
pop
dec
mov
cmp
test
mov
orl
pmulhw
sub
outsb
cmp
ja
push
xor
sub
enter
shrl
pushf
leave
je
mov
sbb
xchg
in
fwait
js
mov
test
lock
push
sub
add
fadd
cld
daa
int3
std
inc
in
add
lcall
xor
cmpsb
mov
mov
cwtl
test
cwtl
stos
adc
dec
mov
jg
adcl
sti
inc
mov
or
adc
stos
iret
dec
test
test
inc
and
movsb
aaa
cwtl
enter
imul
mov
rcr
xchg
or
pop
mov
jb
or
cmp
cld
pop
jge
cmpsl
mov
clc
adc
fs
lret
cmc
jns
ror
mov
test
outsl
fs
dec
inc
outsb
call
push
int
jmp
jns
sbb
and
jbe
push
loope
xor
andl
mov
mov
xor
push
subb
shlb
sub
pop
sbb
fcoms
jns,pt
add
add
and
sub
movsb
into
jnp
stos
int
lds
add
aas
arpl
xchg
pop
mov
iret
sbb
mov
out
repnz
das
cmc
std
lods
mov
daa
sbb
sub
push
and
pop
jne
dec
cwtl
jbe
mov
mov
sbb
adc
fisttpll
insb
lea
ror
pop
jp
jnp
cmpsl
in
mov
xchg
addb
outsb
sub
clc
out
jnp
hlt
imul
push
dec
popf
arpl
pop
pop
dec
xor
in
jecxz
and
inc
cld
sub
pop
mov
mov
push
pop
mov
dec
mov
mov
mov
jle
pop
or
or
hlt
mov
out
push
push
in
fucomi
mov
shl
mov
jmp
clc
fdivrs
mov
inc
ljmp
neg
or
inc
push
and
pop
xchg
fisubrl
sarb
shrb
adc
dec
bound
jb
shll
mov
dec
movsl
loop
sarb
icebp
mov
pop
int3
or
jmp
cmp
jmp
int
dec
push
fnsave
push
add
leave
movsl
pop
adc
stos
push
mov
jb
rorb
lahf
lahf
lods
sub
cmp
lret
pop
pop
and
xor
dec
imul
xchg
pop
ret
fsubrl
inc
mov
mov
push
xchg
imul
js
in
arpl
sub
iret
push
loope
inc
popa
xor
pop
les
sbb
jb
xchg
mov
nop
insb
xor
cmp
jnp
icebp
pop
pop
jecxz
test
xor
data16
xchg
jnp
loop
in
mov
lret
xchg
fmul
ret
pop
aad
lret
in
out
push
mov
mov
mov
lret
lret
push
sbb
cli
and
mov
les
xchg
xor
cld
shufps
lret
daa
push
arpl
repz
push
frndint
cmc
lret
mov
mov
or
int3
test
insl
sti
xor
das
sub
dec
mov
aad
ret
mov
jns
out
push
outsl
sbb
es
shrb
dec
out
jb
pop
into
outsl
gs
push
enter
fdivrl
mov
cmp
add
sar
sbb
dec
sarb
bnd
addr16
roll
xchg
cs
and
cmp
adcb
and
inc
sub
cmp
mov
jbe
mov
mov
xor
xor
jmp
test
rolb
dec
pop
repz
scas
push
push
or
mov
jo
jle
inc
ret
push
adc
pop
flds
adc
push
dec
lret
mov
inc
stos
adc
xor
ret
and
add
dec
movsl
push
mov
pushf
and
imul
xchg
lds
add
dec
or
push
repnz
cmp
jo
sahf
aas
addr16
xor
shrl
sbb
stos
add
out
lahf
insb
repz
mov
lods
mov
shrl
mov
mov
fisubl
lods
adc
sub
inc
jle
push
or
test
cmp
roll
data16
bswap
hlt
jb
shll
mov
orl
dec
adc
mov
ja
ja
fidivrl
pop
lock
add
fistl
stos
ret
rcrb
xor
arpl
test
lcall
dec
pop
xchg
out
adc
orb
pop
dec
addr16
imul
xor
imul
movsl
fs
cwtl
xlat
hlt
insb
sahf
loop
das
jge
jp
cli
jl
fnstenv
out
cmpsl
add
adc
into
fsubrl
or
pop
add
and
adc
push
add
mov
stos
or
dec
dec
push
int3
das
and
sbb
enter
mov
lea
pushf
push
test
aam
insb
and
mov
sbb
call
scas
xor
adc
in
bound
cld
mov
insl
jb
negb
imul
mov
js
sahf
mov
mov
sub
mov
lret
jne
pop
dec
arpl
or
sti
das
pop
andl
ret
mov
scas
push
loop
repnz
dec
mov
insb
int
stc
and
mov
test
xor
les
jp
rclb
xchg
shlb
test
mov
mov
xor
arpl
xchg
sbb
push
je
mov
pushf
outsb
pop
and
in
sub
mov
sub
daa
jmp
adc
mov
mov
rcrb
mov
pusha
and
jo
push
flds
jb
mov
jno
imul
push
scas
je
ds
jo,pt
cmpsb
xorb
pop
fimull
out
xor
pop
sbb
das
imul
cld
test
or
push
dec
fcmovnu
adc
mov
call
inc
cmp
mov
nop
sbb
mov
sbb
aaa
mov
fs
mov
mov
hlt
addr16
xchg
push
ret
xchg
mov
pop
mov
sub
adc
imul
bound
dec
sarb
int
mov
aas
jl
adc
clc
sub
roll
inc
add
out
out
iret
test
mov
add
out
push
emms
test
fnstenv
ljmp
mov
inc
jb
jmp
xchg
jecxz
lahf
and
push
push
pop
std
add
inc
and
stos
xchg
jne
pusha
and
mov
push
xchg
inc
and
js
out
sbb
xchg
rcll
xor
mov
out
jl
mov
lret
out
cmp
sub
xchg
sbbl
xchg
or
repnz
ds
cmp
stc
mov
ds
imul
cmc
adc
jns
insl
xchg
pop
sub
lods
sub
mov
fwait
sahf
sub
and
xchg
mov
add
jmp
cmp
dec
mov
sar
inc
ret
pop
fimuls
jle
aad
sub
mulb
das
lret
push
add
mov
push
sbb
ja
fisttpll
mov
andl
dec
test
cmp
mov
xchg
jo
divl
xchg
jno
das
test
inc
lock
adc
mov
cs
xchg
inc
jbe
adc
dec
pop
cli
mov
and
cmc
jbe
cld
daa
out
add
mov
add
mov
cs
jae
xchg
dec
divb
adc
or
out
inc
lea
dec
pop
aad
mov
lret
push
add
fs
test
in
add
mov
push
jae
push
scas
out
scas
inc
mov
stc
stos
loop
sbb
sub
ljmp
inc
inc
cmpsb
adc
imul
rolb
loop
adcl
inc
sarl
add
movsb
ror
jmp
sbb
pop
push
sub
test
mov
or
or
mov
mov
daa
cwtl
mov
mov
lods
mov
test
cmp
jge
negl
pop
sub
mov
sub
pop
or
cld
push
xor
shlb
xor
sub
pop
mov
scas
push
test
inc
push
inc
sbb
ja
jl
sbb
fdiv
mov
sub
sbb
int
repnz
adc
mov
adc
adc
xor
ds
push
ds
add
fnsave
mov
out
rcrb
in
mov
inc
mov
lcall
cli
movsb
sub
addr16
inc
popf
sbb
mov
nop
xchg
jl
inc
cmp
test
pop
jno
test
jmp
xorl
cmp
loopne
jb
pop
test
out
test
mov
test
test
cmp
ja
sbb
adc
push
mov
paddd
inc
in
loop
mov
xchg
jp
test
mov
lock
hlt
push
outsl
stc
icebp
in
bsf
cs
movsb
mov
cld
imul
pushf
pop
xchg
xchg
and
shl
in
jle
aas
sarb
sub
stos
jge
jmp
fsubl
arpl
cmc
popa
int
xchg
pop
pop
cli
scas
pop
in
mov
inc
push
xchg
mov
mov
in
popf
and
fisubrl
add
cmp
push
dec
push
adc
pop
je
pusha
xchg
fcmovu
sbb
add
jbe
sbb
shlb
or
call
imul
sbb
int
jb
jmp
inc
jnp
mov
jle
shrl
sub
insl
jge
into
sub
daa
mov
fstp
sbb
pop
icebp
adc
jo
sbb
test
jge
dec
stc
cmpl
pop
sub
mov
in
cmc
mov
in
xchg
out
stos
mov
call
in
insb
stc
into
push
dec
add
jnp
movsl
pop
lcall
push
popf
shlb
inc
pop
push
cmp
cmp
sub
pop
cmpsb
outsb
mov
cli
arpl
fsubrs
subb
lds
push
andb
in
or
subl
nop
enter
sub
inc
ret
cmp
stos
aas
inc
ss
xchg
and
pop
lahf
clc
mov
loop
in
sub
xor
fwait
or
pop
push
pop
mov
dec
out
and
sti
or
fiaddl
and
xchg
push
push
rorl
sub
cmp
movsb
sbbl
jmp
cmc
popl
hlt
add
in
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
jmp
sub
inc
dec
idivl
bt
mov
xchg
jle
jo
jle
fsubl
xchg
push
push
pop
cwtl
mov
add
cmpb
shlb
push
fs
in
adc
pop
rcll
test
xor
dec
movsl
inc
cmp
loop
in
dec
fdivrs
cltd
xor
mov
subb
js
pop
ss
icebp
lret
das
cmpsb
xchg
lds
je
fwait
fwait
jo
adc
arpl
lock
ss
inc
test
push
mov
shr
enter
sub
xlat
pusha
out
mov
std
in
cmpsl
cld
stos
push
add
punpckhdq
outsb
and
xor
sub
dec
jae
jb
sbb
xchg
mov
mov
push
adc
adc
adc
in
js
js
xchg
lcall
push
dec
mov
into
cmp
and
and
and
cmp
xor
xchg
or
jo
pop
mov
cmc
xor
dec
popa
lret
imul
lcall
sub
rclb
ret
xlat
loope
add
mov
mov
icebp
popl
or
xchg
jbe
ficoms
mov
icebp
dec
jmp
fnstsw
sub
rorb
jmp
inc
xchg
mov
sahf
pushf
sbb
pop
rolb
mov
push
fnstcw
xchg
test
push
fimuls
fidivrl
push
ljmp
lret
lds
cmpsl
xor
or
jp
mov
adc
dec
daa
xor
adc
dec
iret
das
int3
fs
insb
inc
sahf
adc
push
jg
iret
hlt
push
ljmp
pop
sbb
repz
std
xchg
pop
mulb
int3
out
fcomip
scas
je
mov
xchg
notl
mov
adc
lret
outsb
std
or
loop
cmp
pusha
rcll
aad
jbe
insl
pop
jge
cs
jne
movsb
inc
push
addb
jle,pt
fdivr
xor
xor
imul
or
inc
arpl
pop
int
sub
call
push
test
add
cmp
sub
push
bound
rolb
fsubs
int3
into
mov
notb
movsb
cmc
pop
aam
mov
ljmp
loop
popf
pushf
scas
sbb
push
cmp
sbbl
sub
enter
xor
cmp
sub
loope
stc
gs
mov
dec
ss
loop
dec
jo
dec
int3
testb
xchg
roll
mov
push
adc
cmpsb
es
inc
mov
faddp
cmp
ss
adc
es
int3
stos
movsl
sbb
inc
out
mov
shrb
add
xor
mov
hlt
insl
cmpsb
sbb
lcall
push
mov
dec
push
mov
adc
pop
popf
loopne
sbb
xor
xchg
cmc
jbe
je
shll
mov
sahf
pop
and
daa
in
fidivrs
inc
out
add
test
mov
xchg
sub
mov
jns
push
adc
pop
shlb
inc
mov
fisubl
xor
jbe
dec
test
fists
std
rcrl
out
push
add
jbe
pop
and
pop
insb
adc
syscall
push
inc
daa
xor
call
retw
es
in
movsl
in
adcb
cltd
push
mov
cmp
mov
mov
xchg
xchg
out
in
adc
sahf
testl
in
mov
clc
in
shl
mov
push
pop
les
aam
push
dec
sbb
testb
inc
fisttpll
dec
xor
sub
pop
loop
aas
sub
jle
pop
adc
aaa
mov
mov
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
jmp
and
mov
mov
jne
psubusb
scas
addr16
jle
jns
jle
xor
lods
add
lods
ds
mov
ja
in
mov
mov
scas
sub
sahf
jp
paddw
out
pop
pop
add
ds
sbb
daa
xchg
es
jmp
add
pop
add
dec
icebp
jno
jg
cltd
ret
jle
enter
push
pop
lret
add
aad
mov
adc
imul
push
es
pop
fildll
mov
sbb
scas
add
inc
dec
rep
add
stc
jbe
pop
jp
filds
mov
fisubl
fcoml
leave
std
or
int3
jb
jae
adc
push
cltd
insl
jecxz
sti
aad
std
mov
mov
dec
or
daa
notb
jb
cltd
lock
mov
sti
inc
in
insb
ficompl
leave
filds
add
xchg
sub
sub
out
mov
int
sub
sarl
stos
leave
in
fmulp
test
push
push
or
out
jnp
xchg
sub
lods
inc
push
adc
mov
push
lds
or
push
fstpt
xchg
pop
sti
pmullw
cmp
sbb
or
lret
addr16
loopne
pop
xor
stc
inc
mov
mov
mov
test
repz
xor
mov
jnp,pn
push
rol
out
sbb
jecxz
cmpsl
gs
sbb
mov
adc
xchg
jge
add
xchg
adcb
or
pushf
cmp
xchg
stc
orl
loopne
aaa
lock
jl
xchg
push
push
mov
mov
mov
jnp
or
mov
xor
jo
icebp
jno
jns
push
jl
sahf
cvtdq2ps
pusha
adc
mov
mov
mov
ret
fmuls
add
stc
adc
inc
fdivrs
sub
out
sub
ds
aaa
jecxz
sbb
mov
sub
pop
adc
fsubrl
fwait
out
jecxz
scas
xchg
inc
test
test
popf
or
dec
in
fnstcw
push
add
and
imul
push
sbb
push
push
repnz
or
mov
scas
pop
sub
or
ret
dec
pop
push
push
and
es
insb
cmc
xchg
iret
into
enter
mov
add
xor
loope
push
rcrl
sub
movsb
movsl
pop
dec
jmp
mov
inc
decl
push
pop
pusha
orl
xchg
push
in
xor
push
jb
xor
dec
push
dec
fdivrs
gs
pop
or
mov
mov
cmp
jg
hlt
test
mov
mov
mov
pusha
mov
dec
xor
mov
and
int
mov
add
jns
add
pop
subl
or
adc
cmp
std
pop
cmpsb
fstpt
mov
inc
dec
or
sbb
fs
insb
dec
dec
mov
dec
jne
and
sbbl
adc
mov
sub
ror
js
cld
loope
cmp
in
add
mov
in
std
iret
inc
xchg
sbb
add
xchg
mov
mov
fcoml
sbb
in
fsubrp
sub
adc
jae
add
pop
mov
cmp
stos
mov
sti
andl
sbb
jmp
and
negb
jg
call
lods
repnz
mov
push
fs
insb
pop
rol
imul
mov
mov
inc
arpl
dec
cmpsb
or
inc
int3
dec
xor
dec
sbb
fistps
mov
repnz
sbb
ficoml
ror
sub
pop
sbb
bound
and
jnp
mov
sahf
sbb
xor
pop
mov
xchg
pop
cltd
jb
add
hlt
xor
xor
add
add
imul
add
mov
mov
mov
jmp
push
and
jl
jge
movsl
sbb
jo
icebp
ror
jle
jo
jle
call
rorl
dec
lods
push
das
outsb
or
xchg
and
test
jmp
shl
fists
mov
cmpsb
sub
loope
scas
movsl
nop
mov
lods
push
adc
pop
xchg
out
xor
sbbl
xlat
add
popl
sbb
pop
scas
push
std
sbb
cmp
loope
sbb
mov
dec
outsl
inc
insl
mov
outsl
add
cli
lahf
ja
lds
adc
add
push
mov
jecxz
jo
movsl
repz
sbb
int
push
in
sarl
xchg
je
lods
sbb
nop
cmpsl
test
mov
out
pop
outsb
xor
add
aad
add
in
sbbb
ret
and
mov
mov
lods
addr16
mov
sbb
sbb
test
notb
lods
cmpb
pop
ret
aam
xchg
test
scas
pop
lods
shlb
std
xchg
or
icebp
into
adc
mov
mov
mov
mov
fidivl
mov
pop
or
cmpsl
inc
mov
clc
mov
repnz
fs
pop
jb
dec
nop
dec
mov
sub
bnd
loop
inc
xchg
sub
inc
jp
and
gs
mov
enter
or
int3
sub
iret
push
test
cmc
leave
icebp
push
sbbb
cmpsl
mov
je
test
cmp
or
push
add
xorl
push
dec
mov
and
jl
jo
fwait
dec
jge
enter
adc
push
out
mov
lock
es
pop
inc
push
daa
ljmp
je
fadd
sbb
test
lock
loopne
add
adc
out
mov
jle
sbb
lret
in
shll
fs
inc
pop
fiadds
in
dec
rolb
adc
sbb
adc
scas
cmp
ds
repnz
or
cpuid
dec
push
sbb
ret
lret
cs
fstp
outsb
pushf
out
lahf
insl
add
lret
sub
frstor
sub
scas
cmpsb
out
xor
fcmove
add
xchg
push
and
ss
mov
xchg
sub
orb
les
jnp
push
mov
mov
repnz
jnp
gs
jns
rcll
xchg
ja
jns
mov
faddl
mov
inc
iret
das
adc
stc
arpl
pop
lcall
popa
call
adc
jns
lds
gs
push
inc
rclb
movsb
rcll
jg
push
sahf
push
mov
pop
out
pop
push
xchg
pop
cmp
sbb
jmp
add
mov
jae
ficoml
jnp
scas
add
fisubrs
and
ficomps
inc
sub
adc
rolb
dec
je
paddusb
leave
fbstp
leave
sub
call
xor
jmp
lods
xor
dec
jle
lret
lods
cmc
mov
sbb
call
adc
pop
jns
mov
pop
fs
pop
jle
jp
mov
lods
add
cmp
fwait
mov
add
pop
int3
xchg
in
mov
addr16
shll
mov
in
and
cmc
mov
push
or
dec
fisttps
aam
add
mov
sub
lea
leave
mov
pop
test
lea
sub
xor
xor
lret
pop
lods
mov
mov
lods
mov
imul
xor
repz
ljmp
jne
and
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
jmp
pop
in
add
insb
xor
fcmovb
cmc
rorb
jle
jns
jle
test
ljmp
dec
and
jbe
mov
aaa
pop
sahf
lods
idiv
mov
lret
sub
lock
dec
clc
dec
jmp
jmp
pop
int3
fldl
bound
test
pusha
jg
inc
fbld
data16
enter
inc
jg
sub
out
test
xor
mov
sub
dec
push
jmp
dec
test
xchg
push
ja
add
dec
and
push
pop
push
and
and
add
lret
les
fdivrs
enter
mov
cmovb
out
test
mov
cmpsb
dec
and
xlat
and
add
imul
fdivs
popa
test
mov
xor
aad
mov
jmp
pop
adc
mov
adc
scas
aas
pop
mov
ret
fidivrs
xchg
lahf
push
js
sbb
jp
int
xor
out
cmp
out
cmc
inc
lahf
jne
mov
out
dec
sub
ficomps
imulb
xchg
popf
sub
fstps
jl
aad
mov
xchg
lods
addr16
loope
nop
fcmove
aas
adc
out
mov
flds
aas
fcmovnb
cmpsl
pop
popa
adc
pop
movsl
pop
ret
iret
faddp
add
mov
insl
in
xchg
fwait
cltd
cmp
mov
push
filds
int3
mov
test
in
rorb
pop
cmpsl
out
mov
and
mov
mov
cli
lock
sub
loope
add
out
fldenv
ds
aad
jg
dec
mov
jl
mov
jnp
fstpl
mov
cld
push
push
fildll
cmp
sub
push
xchg
iret
add
movb
dec
je
imul
adc
jo
sub
imull
pop
cmpsb
lcall
add
adc
cmp
rcll
mov
cld
mov
mov
test
push
stc
sub
add
pop
aaa
jno
mov
pop
inc
mov
pop
and
xchg
add
inc
cmp
andl
jp
stc
or
lahf
je
mov
add
roll
xor
mov
bswap
rcl
mov
ljmp
mov
sub
addr16
int
push
and
or
nop
out
pop
sbb
in
mov
lret
daa
leave
or
outsb
orb
jg
or
arpl
rolb
out
mov
cmp
cs
mov
je
adcl
push
jne
mov
fstpl
in
xchg
clc
dec
test
mov
std
xor
dec
push
cmp
sbb
adc
jg
or
sub
xchg
cmp
xchg
test
mov
out
mov
cli
ret
mov
test
xchg
pop
stos
aad
in
fidivs
cmp
jmp
adc
je
in
jmp
int
pop
xlat
js
add
mov
cwtl
gs
fsubrl
adc
in
cmc
dec
ss
in
jge
das
mov
loope
add
push
unpckhps
xchg
shlb
pop
adc
xor
sub
fildl
sub
dec
gs
fiaddl
outsl
shrl
cltd
clc
fiadds
rcl
pop
popa
movsb
adc
fwait
outsl
mov
das
movsb
fsubrl
jns
leave
dec
sbb
dec
adc
push
sbb
lahf
inc
gs
push
ja
or
lods
repz
xor
pushf
add
es
scas
mov
fsubrs
rorl
xor
cmp
jbe
mov
mov
xor
add
imul
mov
jmp
pusha
jecxz
jge
icebp
insb
fwait
mov
mov
cmpsb
jle
jo
jle
mov
jp
xor
mov
sub
daa
push
ret
adc
jle
testl
jmp
movsl
test
out
ret
and
fstpl
pusha
ljmp
xor
pop
cmp
cmp
xor
shlb
call
inc
fnstcw
data16
jb
daa
call
push
adc
mov
push
out
cmpsb
pushf
push
push
or
jl
aas
js
adc
mov
popa
adc
inc
adc
mov
lds
shr
or
or
sub
mov
add
xchg
imul
push
dec
testb
pop
inc
xor
dec
cmp
hlt
push
mov
shr
outsl
pop
xchg
lahf
push
pop
movsb
js
sarl
dec
lahf
jmp
outsb
scas
into
outsb
repz
push
sub
scas
lock
mov
xchg
ljmp
aaa
push
cld
jno
outsb
xor
push
push
inc
adc
jmp
js
mov
test
ds
push
jb
movsb
or
fstpt
mov
mov
ja
mov
adc
pop
and
or
xchg
imul
fcompl
jecxz
sahf
cmpsb
sahf
add
stc
pop
ds
popf
push
adc
push
lahf
xchg
iret
bound
push
mov
pop
int
std
adc
outsb
das
testb
and
dec
jbe
stos
addl
mov
add
jge
xchg
jecxz
bound
stos
dec
hlt
ret
stc
mov
fldt
push
nop
sbb
icebp
adc
and
movsb
cmp
mov
repz
popf
pop
pop
adc
xchg
cli
mov
pop
inc
jae
out
lock
sub
or
mov
int
mov
out
icebp
xor
movsb
xor
mov
mov
rcl
repz
mov
enter
add
cwtl
cmp
cmpsl
add
jbe
je
loopne
in
arpl
inc
lods
sub
jecxz
push
out
push
bnd
fcoms
xor
mov
rcrl
inc
inc
cs
fbstp
mov
rol
jb
mov
ljmp
cwtl
xchg
dec
lahf
or
pop
lahf
imul
mov
test
cmp
sti
add
mov
jae
hlt
cmp
or
jns
jns
js
mov
add
jne
sahf
dec
clc
pop
loop
xor
data16
mov
int3
lret
push
sub
in
stos
cs
int
rorl
jnp
mov
scas
or
jge
xor
mov
add
push
cmp
mov
pusha
mov
ss
addr16
xchg
imulb
js
and
inc
sub
popf
mov
push
xchg
mov
mov
push
lret
pop
mov
xor
jbe
cmp
and
or
in
int3
ljmp
loope
push
lock
or
xchg
jmp
repnz
push
add
pop
aad
popf
add
fimull
jnp
call
lret
andb
xchg
mov
stos
xor
cmp
xor
insb
sub
push
xchg
rclb
add
and
cmp
xchg
jg
mov
pop
cwtl
call
ds
leave
xor
sti
inc
into
sbb
mov
cmp
scas
sub
aad
jecxz
cmp
test
inc
fisttpll
cmp
scas
movsl
icebp
inc
pop
imull
insl
mov
mov
loop
clc
add
mov
lea
jmp
outsb
xlat
shlb
mov
pop
out
lds
jle
jns
jle
push
jbe
push
shlb
sub
jmp
leave
and
bound
jo
hlt
iret
popa
push
push
adc
lods
xchg
cmp
jmp
cs
cmp
jmp
out
dec
insb
popf
test
xchg
test
xchg
xchg
mov
arpl
movsl
js
stc
or
cmp
inc
mov
jmp
adc
cmp
sti
jbe
out
subb
neg
jnp
in
or
movsl
mov
or
ja
push
cwtl
int
mov
in
lea
jne
dec
test
push
and
or
pop
stos
lret
push
fidivs
sbb
int3
xor
inc
ss
mov
cmpsb
movsl
shl
in
adc
inc
or
sbb
pop
push
push
rorl
shll
pop
sub
mov
js
cmp
xchg
jl
out
push
daa
mov
mov
jl
mov
test
adc
mov
xchg
push
iret
jae
pop
fisubrs
test
mov
out
push
ss
adc
xor
or
icebp
push
cltd
mov
fnstenv
add
mov
mov
vmread
test
pop
movsb
lret
je
std
inc
mov
and
loopne
imul
repz
or
test
cmc
pushf
pop
shr
or
loopne
jmp
fstpt
outsb
jmp
fstpt
jl
in
out
gs
data16
out
lea
jle
mov
sub
jb
lea
xor
mov
sbb
repnz
jne
imul
int
sahf
clc
mov
and
push
out
mov
les
fildll
xor
push
rcll
push
mov
mov
fimuls
incb
mov
pop
or
repz
cld
xor
push
xor
mov
sub
inc
popf
xor
aas
call
mov
mov
xchg
js
add
imul
or
cmpsl
hlt
nop
in
icebp
int3
out
push
jnp,pt
popa
aaa
hlt
mov
sahf
shlb
pop
push
push
std
mov
sub
xchg
jb
int
jl
insl
pushf
out
in
adc
jo
cmpsb
loopne
dec
inc
mul
sub
pusha
fmull
xor
test
insl
push
decl
out
stc
cmp
mov
push
inc
sbb
lret
push
add
mov
or
movsb
mov
fwait
leave
jb
test
mov
aaa
pop
jne
sbb
notl
bound
aad
out
cli
add
adc
inc
daa
sbb
or
fisttpl
test
cwtl
rcll
xor
aas
inc
mov
test
xor
sbb
xor
push
lea
inc
sub
push
loopne
cld
sbb
or
pop
ret
push
pop
xlat
cltd
mov
movsb
inc
mov
adc
sti
adc
lock
iret
jl
inc
arpl
sub
scas
jno
ret
data16
jle
push
push
subl
dec
jae
add
ret
pop
fmuls
loopne
xchg
mov
pop
add
push
setle
and
cltd
in
stos
sub
and
mov
mov
in
jecxz
jmp
and
aaa
mov
bound
mov
outsb
or
xor
int
xor
fsubrp
mul
loop
inc
enter
shl
repz
imul
push
sahf
fnstenv
adc
add
mov
push
jb
dec
outsl
adc
jp
loope
pop
test
mov
sub
pop
mov
mov
xor
mov
jmp
sahf
lcall
adc
and
jge
sub
xor
jle
jo
jle
idiv
mov
jmp
shlb
fwait
push
pop
xchg
push
adc
addr16
fs
fsubrs
pop
movsl
icebp
mov
mov
loop
push
lods
jae
lds
test
mov
fstps
incb
mov
lret
push
mov
mov
sbb
push
popa
inc
loop
or
nop
movsl
fs
and
movsl
nop
test
xchg
fstpl
push
aam
movsl
lea
aad
xchg
cmp
mov
sti
addl
jnp
or
pusha
outsl
or
mov
pop
pop
ret
cmp
test
jp
sub
xor
gs
xor
test
xchg
push
popa
mov
mov
les
cmc
les
dec
mov
xchg
xorl
cltd
jae
ret
mov
pop
inc
inc
inc
pop
xor
bound
je
ja
insl
pusha
xchg
mov
inc
repz
movsl
inc
jge
xorb
aas
stos
in
test
pop
jmp
mov
pop
dec
or
cs
push
jle
aad
pusha
dec
pop
xor
add
scas
pop
pop
push
jl
lods
mov
mov
dec
inc
xor
xchg
xchg
mov
mov
shl
stos
insb
xorb
cltd
mov
pop
xor
outsl
mov
cmpsb
pop
aam
add
outsl
sbb
mov
bound
push
gs
leave
loopne
and
sub
xchg
fcmovbe
xorl
lahf
pop
mov
inc
lahf
sub
mov
divb
in
inc
mov
mov
test
push
xchg
add
lock
add
inc
icebp
xchg
pop
cs
fiadds
cld
dec
push
inc
imul
add
movsl
jbe
push
loop
xacquire
mov
mov
adc
mov
jge
jmp
jge
jnp
fcoms
sub
push
jne
jge
fimull
je
push
push
cmp
xlat
arpl
mov
xor
jmp
fwait
push
mov
in
xchg
aaa
shlb
jmp
das
loop
lods
leave
movsb
call
fwait
push
add
std
pop
pushf
xchg
push
jmp
sub
leave
mov
jp
sbb
sbb
lcall
fcoml
loope
fisttpl
and
test
fwait
outsl
push
dec
dec
add
pop
stos
mov
cmc
inc
cmp
clc
mov
arpl
shll
add
in
sahf
jne
adc
dec
cmpsb
cmp
adc
call
ljmp
into
jl
sub
push
sbb
dec
adcb
dec
ret
mov
xchg
loope
notb
dec
rcrl
xchg
sarl
and
cltd
mov
and
arpl
pop
dec
cwtl
loope
std
rolb
cmp
push
les
iret
out
outsl
xchg
inc
int
sub
mov
adc
outsl
loope
jmp
sub
gs
das
adc
and
adc
mov
push
mov
cld
lahf
push
cld
adc
mov
sub
inc
mov
inc
jb
ljmp
pop
ljmp
pop
sbb
push
mov
sbb
test
xchg
xlat
push
dec
dec
mov
xor
lods
leave
fidivs
inc
push
cmpsb
test
addb
jnp
push
xlat
pop
ds
fcompl
repz
mov
cmpsl
mov
add
mov
mov
addb
cli
add
mov
mov
xor
add
imul
cmp
jbe
pop
jmp
mov
xchg
imul
sub
jle
jo
jle
sbb
int
dec
dec
xchg
fcmovb
xchg
pop
mov
adc
sahf
jg
jne
sbb
addr16
rorb
mov
sti
jae
test
jae
rcrb
insl
cli
pop
movsl
mov
cmpsl
mov
shll
fdivrs
pop
jns
xor
inc
dec
int
lret
in
sub
das
insl
xor
popa
in
pop
movsb
aam
sbb
mov
fldlg2
insl
sub
je
lods
push
jmp
cmp
lods
push
mov
cwtl
sbb
adc
jns
aad
inc
mov
mov
sbb
loope
sahf
cmpl
pop
cmp
cld
popa
gs
fcomi
cwtl
push
jns
data16
ljmp
and
sbb
add
push
sub
jbe
and
addr16
xchg
ret
imul
mov
mov
push
pop
enter
mov
xchg
dec
mov
mov
push
jno
cmc
pop
inc
cmp
cmp
fistpll
jp
cmp
add
rcll
aad
in
insb
std
ret
loopne
cld
mov
xor
inc
das
fiaddl
out
cmpsl
out
xor
outsl
roll
jae
in
xor
dec
jnp
fsubs
fbld
test
and
imul
add
ds
sahf
inc
aaa
loope
das
mov
js
fcmovnu
fistps
pop
and
movsb
jg
dec
inc
leave
inc
pop
fiaddl
std
fnstenv
add
and
mov
pop
xchg
mov
fsubrs
pop
out
leave
ljmp
inc
pushf
xor
adc
jecxz
rcll
mov
mov
xor
mov
xor
fbld
fdivrs
andl
dec
enter
dec
inc
jnp
adc
stc
mov
movsb
jbe
mov
aad
mov
fwait
imul
inc
adc
xorl
sarl
push
add
xchg
mov
sbb
inc
sbb
jp
adc
mov
pop
imul
xchg
xlat
popf
jp
test
pop
lcall
push
iret
cmpl
lods
pop
outsl
jb
bound
sbb
xlat
test
mov
rorb
adc
test
push
cmp
into
sbb
outsb
mov
cmpsb
pop
cli
mov
mov
aad
stos
mov
mov
fcmovu
out
mov
in
mov
or
pop
jbe
frstor
mov
jns
out
movsb
shlb
in
iret
mov
movsl
or
jb
lds
add
add
dec
loope
lcall
dec
pushf
hlt
in
or
cmp
cmc
cmp
add
lods
int
bound
xchg
fdiv
orl
dec
movsb
lret
gs
test
fcmovnb
ror
xchg
sub
mov
adc
imul
mov
hlt
es
and
cmp
rcl
sbb
call
mov
loopne
aas
mov
rcrl
or
sti
jmp
lds
or
push
insb
sarb
aas
cmp
or
nop
in
pop
clc
xlat
xor
out
cltd
gs
lds
daa
add
fs
or
popa
fwait
mov
test
das
mov
jb
sub
imul
pushl
dec
push
xchg
or
sbb
inc
and
in
out
add
dec
rolb
or
dec
jb
shll
std
cmp
mov
int
and
lods
inc
xchg
xor
dec
mov
pop
out
dec
dec
push
cmc
fsubl
rcrl
call
cmpl
push
js
pop
leave
ret
push
mov
sub
sbbl
push
sbbl
push
incl
push
andl
push
adcl
call
test
movl
je
adcl
xor
inc
movl
jmp
add
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
sub
movl
sbbl
lea
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
sub
lea
mov
adc
mov
mov
xor
or
sub
or
mov
mov
mov
sub
mov
mov
or
mov
mov
andl
xor
sbb
mov
xor
add
mov
mov
movzwl
cmp
mov
movzbl
mov
je
sub
mov
xor
add
sbbl
imul
movl
mov
movl
jmp
addl
xor
sbbl
add
mov
movzbl
sub
mov
xor
adc
add
not
mov
mov
mov
xor
xorl
add
movl
cmp
jne
sbbl
push
movl
pushl
sbbl
pushl
adcl
call
and
mov
mov
and
mov
sub
mov
neg
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
or
sbb
mov
mov
mov
or
movl
or
mov
movl
xor
mov
and
mov
and
mov
orl
xor
subl
xor
adcl
add
mov
adcl
xor
xor
adcl
add
movl
lea
movl
mov
movl
cmp
movl
ja
jmp
adc
mov
addl
mov
xor
xorl
lea
push
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movzbl
adc
mov
mov
xor
movl
lea
subl
push
and
mov
adcl
pushl
call
mov
mov
mov
or
xor
lea
mov
or
mov
subl
xor
xorl
xor
add
mov
andl
xor
movl
lea
movl
mov
movl
cmp
movl
jbe
movl
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
mov
inc
mov
subl
pushl
orl
sub
subl
pushl
adcl
xor
mov
pushl
call
sub
adc
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
repz
jae
hlt
aaa
scas
aad
mov
jle
hlt
jns
jle
les
pop
push
jns
sub
xchg
or
fdivr
ss
jbe
sbb
cld
xor
lds
adc
insb
pop
or
jbe
aas
push
pop
pop
movsl
out
sbbl
std
lods
mov
movl
movsl
cld
dec
das
mov
mov
sbbb
fsubrs
iret
ja
push
sub
subb
fldt
rcpps
test
jbe
push
or
nop
jns
xor
push
pop
mov
outsb
cmpsb
push
leave
mov
aad
lcall
inc
dec
dec
outsb
fcoml
xorl
mov
sbb
push
movsl
mov
insl
cli
sti
and
inc
jp
jg
or
leave
pop
pop
testl
sub
dec
push
jno
js
mov
dec
icebp
jle
cwtl
or
or
int3
push
mov
call
ss
or
jnp
dec
jno
aas
and
icebp
jl
int
in
cmp
fdivrp
in
adc
imul
icebp
mov
iret
rorb
mov
lods
sub
jnp
cmp
sub
mov
push
jl
mov
insb
std
pushf
fwait
mov
or
cwtl
imul
cmc
dec
xchg
fbstp
lods
mov
xchg
jp
mov
or
call
rorl
mov
jne
movsb
pop
sub
insl
pop
xchg
in
cmpsl
inc
popf
pushf
nop
lcall
adc
in
mov
xor
bound
rorl
pop
or
in
aas
mov
out
lods
iret
call
cltd
push
fcmovnbe
fsubr
mov
xchg
jno
jp
pop
es
je
shrl
jne
les
lcall
scas
std
cwtl
dec
vmptrst
or
mov
test
hlt
cmovnp
jne
les
mov
lods
lahf
lret
adc
sub
in
sarb
pop
inc
mov
insb
jg
jo
add
add
ficompl
mov
ss
stc
cmp
adc
mov
add
pop
cmpsb
or
jecxz
std
push
sbb
dec
jmp
icebp
rclb
or
ljmp
push
mov
loop
scas
pushl
dec
sbb
out
mov
push
in
xlat
cmp
scas
sbb
adc
cmp
lea
sbb
sub
test
daa
insl
mov
push
test
sti
pop
inc
pop
stos
sarl
fucom
mov
sub
lret
ror
aas
jno
scas
sti
lret
sahf
hlt
int
ja
scas
xchg
dec
inc
cmp
adc
push
xchg
inc
mov
out
cmp
hlt
pop
iret
dec
test
nop
out
pop
test
std
add
and
mov
add
test
inc
aam
ljmp
adc
adc
mov
push
das
sub
mov
push
sub
jle
scas
cmpsb
push
mov
lret
sbb
mov
mov
dec
add
and
out
sub
add
lds
mov
inc
das
in
shlb
test
test
inc
add
mov
mov
mov
movl
push
movl
mov
movl
mov
movl
cmp
je
or
jmp
cmc
pop
inc
gs
jge
pop
push
add
sub
mov
jns
jle
sbb
mov
xor
pop
sbb
mov
pop
adc
or
call
ja
pop
sbb
mov
popf
jge
incl
lret
stc
aas
sbb
test
push
mov
imul
sti
push
mov
and
mov
inc
jo
xor
fisttps
push
xor
fdivr
inc
push
ljmp
jnp
in
mov
imul
mov
movsl
add
jbe
in
jp
pop
lea
mov
add
repz
stos
push
push
sub
js
ss
dec
xor
sub
cmpsb
xor
sti
adc
pop
cltd
in
loop
test
shrb
popf
scas
insb
inc
push
addl
push
mov
push
mov
push
push
out
jne
daa
loope
pop
mov
adc
insl
lret
inc
lahf
sub
mov
in
in
pop
call
pop
mov
inc
and
cmovb
mov
aad
roll
fs
or
cltd
ret
mov
mov
popa
jmp
sahf
pop
clc
data16
ljmp
pushf
dec
mov
lds
sub
mov
lock
mov
cmp
lods
xchg
pop
int3
aaa
stos
xchg
gs
out
mov
fs
mov
jb
mov
loope
test
test
mov
mov
cmp
xchg
pop
lods
scas
mov
fnsave
cs
movsl
dec
scas
cmp
cld
leave
mov
movsl
mov
jle
cmp
sbb
jp
divb
mov
movsl
enter
sub
jge
cmpsl
xchg
add
into
jo
adc
int
ja
addr16
cmp
test
mov
std
xor
inc
mov
jmp
les
cmpsb
push
cld
mov
pop
std
mov
jmp
clc
jge
jmp
jbe
es
add
mov
inc
setns
and
and
or
aad
iret
pop
lret
gs
hlt
int
cmp
mov
movsb
cmp
stos
sbb
shll
pop
das
adc
or
call
push
arpl
lcall
cmpsl
inc
lods
sub
mov
mov
add
fidivl
add
xchg
scas
iret
mov
fdivr
in
mov
pop
stos
repz
and
shlb
jbe
dec
lcall
inc
sbb
adc
mov
sub
xlat
movsb
xor
js
cs
aad
bswap
cmp
ss
aaa
cmp
jo
xor
imul
pop
cmp
pop
jne
repnz
or
bnd
aaa
inc
mov
jns
enter
add
repnz
popf
cmp
out
daa
and
mov
cld
sbb
fcmovne
jecxz
lock
call
xor
pop
inc
and
popf
mov
inc
add
stos
jle
xlat
cmp
sbb
dec
push
lret
movb
cld
xorl
imul
mov
push
jecxz
cmp
mov
mov
shlb
sub
int
mov
scas
lods
cmpsb
mov
dec
cmp
sbb
imull
add
inc
cld
mov
xorl
xor
add
movl
cmp
movl
je
and
mov
mov
xor
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
add
push
pushl
pushl
mov
jmp
pop
pop
cld
sub
mov
push
in
in
test
and
jle
ja
into
xor
pop
test
enter
mov
lret
cli
pop
pop
mov
push
enter
aam
pop
test
fwait
push
popf
xlat
add
mov
popf
sub
testl
cmp
xlat
aaa
in
rcll
mov
xchg
jo
cwtl
jg
cmp
add
inc
sub
add
lock
lock
sub
repz
push
mov
pop
cmp
divl
daa
data16
iret
lds
arpl
cmp
icebp
xor
xchg
jne
jp
mov
mov
and
jmp
push
aaa
or
adc
in
out
push
pusha
mov
ret
icebp
rclb
call
cld
push
sub
lock
das
lods
add
adc
add
gs
push
sbb
inc
mov
lret
add
sbb
sarl
cld
cmp
xchg
xchg
xchg
sbb
movsl
pop
dec
ret
icebp
xchg
xor
fidivrl
test
pop
pop
pop
adc
jno
loopne
cld
pop
les
inc
mov
loopne
shrl
push
xchg
inc
pop
mov
shrl
int3
adc
push
push
mov
subb
mov
adc
ret
lds
push
mov
test
les
les
push
sarb
dec
lods
shl
iret
push
test
and
jmp
add
jl
push
insb
lds
test
xchg
icebp
lock
lret
popf
mov
pop
xorl
in
sub
or
xor
das
jmp
imul
bound
in
add
shl
cmp
mov
arpl
cli
rolb
jo
stos
jnp
outsb
clc
pop
xor
pushl
rorl
and
test
mov
test
ljmp
jg
mov
cmp
lcall
xchg
cmp
cmp
jbe
mov
xchg
add
mov
dec
inc
test
sub
sbb
fs
or
jno
sbb
lahf
inc
int
adc
into
mov
pop
xchg
in
pop
sbb
add
adc
adc
movsb
cmc
iret
jl
mov
cs
mov
lcall
and
adc
std
ja
divb
jns
shrl
sti
xor
dec
lods
ds
roll
icebp
mov
jbe
lds
cmp
into
xor
pop
loope
push
pushf
or
jle
pop
inc
xchg
xlat
rcr
dec
adc
in
daa
dec
popf
movsl
adc
dec
add
inc
sti
in
repz
mov
or
mov
pop
aam
pop
add
mulb
xor
mov
jg
jge
icebp
stc
add
pop
or
sbb
mov
inc
pop
cli
mov
add
mov
jge
js
inc
sub
adc
cmp
adc
daa
movsb
jecxz
dec
mov
call
mov
cld
jb
jae
mov
mov
mov
jge
add
cmp
mov
mov
mov
filds
or
stos
xchg
shrb
cmp
test
xchg
push
sub
dec
or
add
add
add
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
jmp
in
ss
xor
icebp
add
sbb
jle
hlt
jns
jle
lahf
sbb
cwtl
imul
xchg
data16
ja
sbb
int3
in
movsb
daa
clc
imul
mov
fwait
cmp
pop
mov
es
inc
mov
xchg
lcall
int3
add
pop
or
and
adc
sbb
mov
pop
movsl
popa
mov
inc
push
add
xchg
int3
xchg
or
ffree
inc
scas
xor
repnz
xchg
std
lret
lods
addr16
mov
movsb
or
ret
rorb
add
and
xchg
or
ret
push
cmp
inc
into
movsl
dec
cmpsl
shll
repz
jnp
sbb
adc
dec
sbb
jb
mov
mov
cmp
sub
dec
add
push
lds
mov
es
call
lret
mov
sbbb
std
or
in
xchg
mov
sub
xchg
mov
pushf
out
mov
mov
dec
pop
ficomps
mov
inc
outsl
jo
jmp
xchg
jl
pop
in
cwtl
and
out
addr16
pop
or
push
imul
out
jae
mov
pop
jl
inc
inc
popa
lcall
inc
sub
fmull
fwait
add
push
ja
xchg
add
inc
pop
xor
fmul
jmp
ja
lods
dec
and
int
sahf
sbb
das
arpl
adc
inc
mov
cld
add
sbb
cmp
jbe
cli
sbb
mov
or
xor
dec
lcall
cmc
lret
push
je
push
adc
xchg
dec
push
loop
pop
int
cmp
xchg
jbe
mov
adc
shl
dec
push
sbb
inc
inc
movsb
jmp
lahf
mov
repnz
outsb
push
adc
cmp
adcl
pop
xor
add
add
ret
fs
xor
push
cmp
cs
sub
mov
adc
andb
neg
movsb
mov
mov
mov
data16
test
aam
dec
and
xchg
mov
divl
mov
mov
sub
je
sbb
int
and
mov
xchg
inc
adc
shrl
outsb
ja
js
jns
int3
inc
rep
xchg
jle
aaa
cmp
mov
int3
push
lods
cmp
adcb
cmpsb
cmp
xchg
js
and
ret
movsb
inc
or
jg
into
inc
adc
lret
jle
scas
xor
sub
jo
mov
out
cli
mov
and
imul
push
and
mov
push
cmc
sbbb
es
ret
outsl
ljmp
sbb
add
and
fiaddl
sbb
push
and
scas
inc
mov
fisttpl
dec
decb
xchg
psubw
popa
adc
pushf
lahf
push
pushf
orb
je
cmp
das
arpl
popf
loopne
push
imul
out
pop
mov
adc
mov
ss
ret
push
inc
data16
loope
cmp
push
jecxz
int3
mov
lret
jne
push
sahf
adc
inc
jne
pop
xchg
xchg
insl
sbb
mov
inc
movsl
cs
inc
sub
inc
cld
xor
pop
jmp
push
clc
clc
mov
test
adc
xchg
sbbl
pop
clc
mov
jmp
cmpsl
ja
popa
mov
add
lahf
test
in
ret
mov
push
fldcw
mov
dec
gs
in
std
lcall
and
aam
in
mov
sbb
pop
movsb
jbe
in
jns
xor
sub
test
out
aas
into
pop
push
ret
jbe
shl
sub
cmp
out
jb
jle
sbb
addb
xor
push
sbb
xchg
push
jg
sbb
pushf
mov
gs
xchg
cmp
mov
gs
xor
cmc
fld
popa
dec
push
lret
adcb
xchg
xor
adc
xor
dec
rcl
clc
cmp
mov
call
and
shll
adc
pop
or
test
mov
add
jo
pop
test
mov
pusha
xchg
or
mov
push
inc
cmpsb
xchg
sbb
dec
insl
test
xchg
test
xchg
cwtl
leave
mov
push
movsb
jmp
lret
xor
ljmp
and
mov
sub
pop
mov
mov
sar
add
xchg
sub
sub
and
add
xchg
cmc
loopne
lods
pop
push
shl
lods
xlat
nop
pop
dec
jmp
jge
orl
out
add
jle
fdivrl
sub
dec
sar
cmp
ja
repz
insl
cmp
xchg
je
add
mov
mov
dec
adc
push
xor
pop
ds
add
mov
push
cmpsb
mov
decl
push
cmp
push
pop
in
mov
mov
insl
stc
imul
pop
mov
adc
jecxz
subl
sbb
add
mov
lock
ret
fisttpll
filds
jmp
jb
in
cmpsb
scas
das
rep
sbb
fisubrs
leave
pop
and
mov
cmc
adc
push
stc
mov
sbb
or
fsubs
cld
adc
mov
aad
gs
lret
icebp
lock
bound
test
and
jge
bound
lret
xor
push
scas
xor
or
push
mov
dec
cmp
and
pop
dec
not
push
cmp
xlat
jo
lock
cmpsb
xor
and
or
cmp
cli
mov
sub
push
fwait
inc
sbb
divl
dec
pop
jns
js
out
mull
rolb
dec
cmp
cltd
mov
lock
inc
mov
call
or
sbb
popf
add
fisttps
jecxz
icebp
and
fimull
out
or
leave
mov
mov
dec
stc
test
addb
test
rorl
jp
aaa
scas
popf
test
pop
push
mov
loopne
adc
add
cli
loopne
mov
pusha
insl
push
mov
comiss
add
fbld
lret
mov
ja
jp
push
inc
inc
lcall
mov
loope
lcall
stos
add
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
mov
andl
mov
add
xor
cmp
movl
jne
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
jmp
mov
jae
mov
sub
add
jle
pushf
jg
jle
mov
fidivrl
fs
out
push
cmp
aam
jns
xchg
push
enter
mov
push
test
stos
sarl
dec
mov
arpl
or
arpl
in
test
mov
push
jne
and
data16
lock
pop
cmp
vcmpsd
ss
test
mov
xor
sahf
sub
sub
and
mov
jg
or
repnz
adc
shlb
jl
testb
adc
fdivr
fnstsw
aam
push
inc
std
inc
fxch
imul
cmc
orl
leave
in
pop
pmulhw
xchg
fdivrs
outsl
or
js
cli
jne
xchg
imul
arpl
xchg
iret
insb
je
sahf
nop
xchg
mov
insb
aad
fdivrs
mov
push
pop
std
orl
xchg
xorb
orl
mov
icebp
push
ret
mov
mov
scas
push
clc
sbb
add
xchg
xor
movsl
sub
inc
jbe
inc
test
leave
test
ret
xchg
ljmp
xchg
push
into
inc
mov
ss
jmp
arpl
cli
pop
inc
subb
lods
mov
movsl
and
jl
dec
psrlw
pop
mov
cwtl
icebp
out
or
cmp
xchg
movsb
pop
push
cmp
aam
fsub
adc
dec
inc
add
fbld
xor
jmp
in
stos
xchg
in
lcall
cltd
jb
add
mov
add
cmc
mov
enter
cmpsl
mov
inc
xchg
sbbb
jg
jle
inc
fdivs
lret
clc
movsl
cmp
jecxz
mov
sub
mov
insb
gs
ret
in
orb
push
sub
cmp
stc
xchg
xorl
gs
mov
sbb
jecxz
outsl
stos
jne
and
push
and
xor
push
pop
into
adc
lret
sub
cs
data16
into
fadds
ljmp
rclb
adc
cmp
xchg
and
xchg
movsl
cmp
cmpsl
mov
iret
adc
stos
scas
movsl
loop
inc
or
inc
out
pop
in
mov
cmc
cmp
add
js
jb
insb
inc
out
test
imul
push
sahf
aaa
lea
xor
fldl2e
pusha
xchg
and
data16
leave
push
push
jno
mov
imul
mov
and
jae
xor
adc
sub
movsb
push
jle
xor
mov
jl
xchg
stos
xor
pop
out
out
cmpsb
out
out
cmp
lods
jg
mov
cmp
cmp
push
adc
adcl
data16
lret
inc
or
pop
pushf
test
jnp
mov
out
pop
push
inc
mov
add
xchg
std
and
fs
jmp
adc
and
fnstcw
push
push
push
cmpsl
mov
jg
ficoms
adc
cs
sti
leave
rorl
push
add
test
and
inc
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzbl
adc
mov
andl
xor
add
movl
jmp
cmp
arpl
mov
arpl
fldt
jbe
inc
jle
popf
js
jle
mov
icebp
clc
std
neg
cmc
push
cmp
cmpsl
dec
pop
insl
bound
pop
xchg
fdivl
and
mov
loopne
xor
ja
xchg
addr16
mov
push
xlat
inc
cmp
lahf
imul
sub
int3
sbb
or
dec
fnstenv
mov
jbe
pop
push
jbe
mov
cmp
sbb
sub
mov
fildl
frstor
popa
fcmovb
test
xor
mov
and
mov
rcrb
hlt
sbb
stc
fisttpl
movsl
push
push
mov
fucom
jns
adc
jne
std
sub
fidivs
dec
adc
dec
shlb
sbb
dec
pop
stos
sub
movsl
out
jns
push
insl
cmp
call
inc
cli
mov
pop
xor
xor
dec
imul
mov
out
fistl
enter
dec
add
cmpsb
aaa
idivl
jbe
mov
loope
andb
add
mov
sub
adcb
xchg
cmp
pushf
xchg
sub
push
bound
push
data16
dec
leave
les
jbe
or
pop
sbb
mov
xor
js
out
mov
stos
es
mov
jb
jno
addr16
fs
les
add
shlb
test
into
xor
jmp
cmc
dec
cltd
jno
and
nop
int3
fistpl
adc
pop
pushf
dec
nop
push
or
std
cld
fimuls
rorl
push
mulb
mul
adc
insl
or
and
ret
aam
gs
enter
cmp
hlt
repnz
rol
sub
push
and
outsb
push
pop
xchg
lods
les
mov
cli
sub
cmp
cld
mov
pop
mov
paddd
subb
ret
fcomp
jo
daa
stos
or
aas
jae
fadds
sub
fwait
popa
enter
xchg
mov
inc
aad
sahf
daa
lret
cli
push
jl
fimuls
test
and
scas
sahf
jge
in
mulb
mov
jb
fidivl
add
lret
cmp
pop
test
pop
mov
pop
fs
jns
icebp
out
out
fstl
push
xchg
or
dec
add
sbb
mov
mov
movl
movl
mov
mov
push
movl
mov
mov
cmp
movl
je
mov
xor
subl
xor
xorl
lea
xor
cmp
jne
movl
jmp
jmp
inc
lods
xchg
addr16
mov
leave
dec
jle
popf
js
jle
sbb
fsub
jne
mov
add
out
jl
xchg
inc
ljmp
sbb
popa
xor
inc
hlt
inc
push
push
arpl
push
fmull
xchg
repz
xor
xor
sbbb
and
bound
fucomip
sub
lret
or
jecxz
jns
fiaddl
mov
cmpsl
cmp
xchg
mov
or
inc
enter
out
lcall
pop
push
cmpl
and
fdivl
push
loope
cwtl
popa
lods
dec
jge
sbb
test
int3
dec
repz
lcall
push
clc
fwait
sub
sub
std
cmp
sbb
lods
xor
dec
xchg
sarb
jno
repnz
push
aas
lcall
fcmove
movsl
ret
ja
pop
dec
cmp
jb
sbbl
xor
jge
xchg
jne
xchg
stos
lahf
push
icebp
out
js
ret
fldenv
cmp
jb
push
loop
add
movb
pop
inc
mov
inc
leave
adc
sahf
mov
cmpsl
add
jns
inc
lret
int
pop
mov
or
fisubl
lret
xchg
stc
push
out
dec
pop
mov
or
and
sbb
sbb
mov
pusha
inc
mov
test
fistl
lock
inc
xchg
xchg
dec
pusha
dec
stos
xchg
and
or
ljmp
out
leave
inc
adcl
frstor
cmp
loope
lea
je
push
push
jecxz
push
loope
jmp
pop
and
adc
mov
push
out
xchg
mov
mov
cmp
test
sarl
ret
xor
cld
in
fisubrl
sub
movsl
pop
aaa
pop
aas
push
scas
hlt
sub
insl
cmp
test
xchg
aad
hlt
fstpl
insl
rcrl
adc
dec
add
and
fists
mov
popf
roll
imul
stos
addr16
frstor
mov
sub
adc
faddl
mov
xchg
xor
mov
xchg
dec
fscale
fsubrs
decl
push
xchg
int3
jbe
scas
add
in
and
lods
fnstcw
mov
fidivl
arpl
mov
loop
add
adc
push
xor
outsb
and
movsl
cld
mov
jb
cmc
mov
lcall
shll
decl
jne
mov
mov
xor
jmp
jo
rsqrtps
pop
jge
pop
mov
mov
jle
js
jle
test
or
pop
sti
out
in
sub
adc
xor
lret
aad
lods
movsl
dec
pop
and
out
stc
jg
sbb
pop
dec
repnz
fsts
daa
cmpb
cmpsb
and
pop
shl
fwait
jmp
push
pop
out
jno
stos
mov
inc
adc
or
test
sbb
push
pop
push
adc
mov
xor
xor
inc
mov
sub
mov
inc
inc
sbb
jle
dec
adc
push
lahf
cmpsb
push
cmp
scas
pop
popa
inc
push
nop
pop
fidivs
mov
inc
push
xor
rcpps
jae
fistpl
out
jae
cmp
and
adc
sar
push
test
sub
add
cltd
jp
popf
add
xor
inc
inc
push
icebp
dec
int3
pusha
sub
jmp
testl
jo
jmp
iret
mov
aam
lds
ja
mov
clc
cmp
inc
pop
sub
and
inc
scas
push
cld
int
clc
push
enter
ret
fidivrl
loop
in
push
pop
dec
add
enter
mov
xor
icebp
push
cmpsb
inc
mov
clc
sbb
xchg
movsb
dec
mov
xchg
ret
sti
cmp
repnz
cltd
or
jbe
dec
in
or
jle
std
mov
sub
xlat
incb
sub
sbb
outsb
push
xchg
inc
je
ret
ret
or
imul
pop
mov
pop
sbb
mov
mov
xor
sub
and
inc
cltd
test
sbbl
inc
cmc
into
adc
mov
pop
push
in
lcall
scas
arpl
pop
rorb
jns
cmpsl
lahf
lret
scas
pop
ljmp
out
jno
or
fadds
sbb
aam
out
xchg
xor
cmp
add
lock
mov
cwtl
xchg
or
push
add
outsl
in
add
xchg
push
movl
mov
cmp
jmp
push
dec
push
or
outsl
push
dec
or
dec
out
xchg
mov
cmp
xor
add
movsl
dec
ret
fisubrl
lcall
mov
xchg
fwait
sub
dec
jns
imul
push
xor
nop
mov
insl
or
cmp
js
ds
aas
pusha
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
mov
xor
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
adc
mov
xorl
add
orl
mov
sbb
mov
xorl
push
movl
push
sbbl
test
je
mov
sbb
mov
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
add
jmp
roll
std
mov
xchg
inc
jg
pop
push
aaa
pop
jg
jle
mov
or
cmc
xchg
cmp
mov
xchg
and
fbld
rclb
aas
mov
pushf
mov
sub
enter
popf
ja
cmp
mov
sti
add
jle
xchg
sahf
es
mov
push
fwait
popf
pop
xor
faddl
mov
mov
aaa
inc
xchg
mov
ds
dec
jae
inc
push
xor
idiv
sbb
fbstp
xlat
hlt
xchg
xor
jle
jne
mov
dec
mov
cmp
inc
into
fdivrl
xor
cmp
out
lods
inc
mov
and
pop
rclb
ret
push
jo
add
es
dec
ss
push
jl
xchg
xor
clc
je
sbb
daa
rorl
add
sub
data16
adcb
test
mov
inc
sbb
cwtl
dec
adc
push
ljmp
mov
es
rol
subb
jmp
jge
das
cmc
xchg
loopne
adc
adc
mov
jnp
lret
arpl
push
sti
dec
popf
pop
inc
ret
in
icebp
xchg
stos
dec
adc
lods
clc
xor
xor
outsl
jae
mov
decl
call
ret
iret
xchg
cmpsl
pop
sbb
aaa
psubw
rcrb
out
jae
mov
cmp
ret
inc
fisttpll
sub
pop
mov
out
jbe
ds
fdivs
cmp
imul
int3
xchg
das
inc
lret
push
push
push
xor
out
xor
lods
ljmp
xchg
cli
jle
or
inc
adc
insb
les
cmp
xchg
sti
faddl
fnsave
repnz
fstpt
or
mov
jmp
lret
outsl
dec
jne
stos
movsb
loope
lods
data16
jb
push
jle
pop
jg
jle
jno
or
out
scas
pop
lret
xchg
vunpcklps
push
sbb
pop
incb
jae
outsb
loopne
jmp
add
dec
iret
loope
xlat
int3
dec
dec
xchg
arpl
jl
hlt
add
or
cmp
mov
mov
stos
lods
shl
pop
icebp
adc
sahf
pop
adc
negb
or
mov
idivb
cmp
in
icebp
jae
xchg
add
dec
mov
stos
leave
and
lahf
xchg
mov
xlat
mov
xchg
adc
mov
xchg
daa
int3
pop
dec
jne
or
test
sub
xor
sub
fbld
dec
notb
lods
mov
pop
or
jge
fdivrs
test
add
ret
mov
mov
and
or
out
mov
pop
aas
ficoms
dec
push
pop
pop
push
push
mov
sahf
xchg
mov
pmaxsw
es
icebp
add
pop
push
test
stos
lea
stc
xchg
pop
mov
insb
inc
sbbl
rclb
adc
mov
pusha
ss
adc
or
cltd
movsb
ret
sbb
jl
mov
cmc
mov
mov
insb
shrl
jecxz
daa
hlt
jbe
sub
and
mov
pop
daa
dec
aad
scas
insb
js
dec
in
call
clc
aad
push
push
adc
mov
cs
mov
pop
data16
je
and
loop
sbb
in
lcall
outsb
cld
loop
cmp
fimull
stc
jne
mov
out
lds
fiadds
aad
xor
jp
pop
inc
push
xchg
xor
sub
inc
test
arpl
xchg
sub
xor
xor
adc
mov
mov
decl
mov
mov
mov
addl
xor
xor
add
mov
mov
mov
movl
je
adcl
mov
adcl
xor
orl
add
movl
cmp
jne
sbbl
pushl
orl
call
and
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
add
cmp
je
orl
pushl
pushl
subl
call
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
jmp
scas
repz
add
push
out
sub
push
inc
cmp
pop
jg
jle
push
mov
scas
xchg
mov
scas
cmpsb
outsl
adcl
adc
repnz
push
icebp
loope
inc
mov
mov
mov
xchg
and
lds
jbe
rorb
xor
lret
nop
xor
jbe
or
ds
dec
sub
in
movsb
fwait
ja
mov
popf
dec
mov
mov
cmp
add
cld
mov
lea
and
add
imul
cmc
and
subl
cmp
out
dec
mov
or
push
mov
data16
pushf
sbb
stc
mov
popl
dec
push
pop
mov
fadd
lods
sub
icebp
aas
push
jb
xchg
mov
daa
jne
push
jge
inc
in
jle
jb
ss
pop
or
je
xchg
stos
jecxz
sbb
divb
aad
test
mov
add
outsl
add
cli
mov
das
into
out
xchg
imull
jg
cmp
sbb
and
rorl
cmp
mov
jmp
and
fadds
shll
jno
sbb
in
sahf
dec
cld
mov
addb
in
rcrl
jg
inc
lahf
xchg
aas
xchg
outsl
mov
insl
test
pop
lahf
cltd
fs
pop
mov
call
adc
in
push
add
stc
xor
ja
cltd
fldt
xor
push
sahf
dec
cmpsl
or
or
xlat
or
out
pop
dec
ss
loope
ljmp
lret
push
rclb
or
lcall
and
sub
add
test
out
and
rolb
mov
dec
rclb
jne
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
jmp
lret
dec
add
je
jge
sbb
jb
xor
jle
jg
jle
movb
pop
ficoms
dec
bound
scas
mov
sub
dec
xor
sbb
or
movsb
in
lret
dec
int3
js
jne
orl
mov
aaa
push
and
jecxz
addr16
jg
mov
jb
ficoml
pop
cmp
cli
adc
pop
popa
iret
or
sahf
xchg
mov
jg
mov
push
andb
sbb
cmp
jns
in
mov
inc
cmp
jns
int
mov
and
loop
jae
cmp
aad
int
sbb
adc
data16
nop
ficoms
ljmp
jns
mov
or
rorl
fistpl
iret
or
dec
xchg
imul
pop
and
push
std
mov
rclb
cltd
in
mov
lock
mov
pusha
in
subl
mov
mov
lcall
cmp
xor
ss
cltd
popa
push
and
push
cs
and
cmp
xlat
push
aas
pop
mov
xchg
jg
mov
dec
scas
negl
mov
repz
movsb
xchg
fld
cld
scas
push
xor
addb
jg
shl
scas
mov
xchg
in
fmull
jbe
lahf
xchg
inc
mov
lahf
sub
mov
inc
rorb
sti
lods
insl
int
idivb
push
cmpsb
in
pop
xchg
movsb
inc
push
sbb
xchg
mov
dec
mov
mov
adc
jnp
rcll
lcall
adc
xchg
jno
in
jl
rcrl
les
or
dec
cs
pop
dec
or
loopne
fildl
mov
or
add
out
mov
pushf
mov
addr16
push
int3
and
decl
sub
cmp
jne
xchg
mov
xor
mov
adc
jle
jg
jle
clc
cmp
daa
pusha
dec
xchg
add
cmc
mov
and
or
pop
or
jno
inc
outsb
imul
lret
nop
mov
ret
or
mov
dec
hlt
xchg
inc
aaa
xchg
lret
xor
mov
fists
fildl
xchg
cmpsl
mov
mov
ds
pushf
cmp
sub
jle
in
mov
fcoml
lock
sbb
scas
xor
das
sub
xchg
fs
aam
adc
stos
xor
fiadds
xchg
xchg
lahf
enter
jne
xchg
mov
jl
mov
mov
sti
loopne
iret
lea
mov
or
push
mov
sbb
imul
xchg
push
movsb
push
sbb
sub
in
aaa
je
rorb
mov
cmp
xchg
inc
ficoml
imul
icebp
mov
push
cli
repnz
imul
jo
ljmp
test
add
push
lret
lods
stos
adc
mov
scas
dec
je
mov
es
cmc
xchg
xchg
mov
jge
or
xchg
call
mov
mov
xchg
iret
dec
mov
mov
test
sub
leave
mov
inc
xchg
repz
inc
insb
and
cmp
or
test
pop
jge
scas
rcr
gs
imul
out
gs
aaa
stc
cmpsl
and
mov
xchg
sti
out
xchg
das
lret
jp
scas
in
xchg
cwtl
stos
and
xor
mov
fstpl
pop
add
add
sub
pop
jmp
shrb
in
iret
xchg
fs
jle
mov
jo
sbbl
ds
enter
inc
or
inc
cld
mov
xor
add
cmp
jne
mov
xor
jmp
mov
jmp
xchg
aam
jne
xchg
in
sub
rorl
pop
jg
jle
stos
imul
ret
lret
dec
pop
loop
inc
insb
fcomp
mov
imulb
jle
push
xchg
jp
pop
sbb
mov
bound
xchg
add
iret
mov
jo
mov
pop
sbb
jnp
push
test
mov
jmp
mov
add
pop
xor
rcrb
fwait
lea
push
mov
pop
test
mov
push
inc
jae
cltd
out
or
std
mov
dec
adc
xorl
pop
jecxz
leave
movb
push
clc
scas
pop
push
mov
pop
jmp
cmp
fidivl
pop
test
sub
jge
dec
mov
push
lods
inc
mov
icebp
lret
out
sbb
clc
adc
xchg
cmp
inc
iret
int
mov
pop
aad
or
scas
sbb
cmp
sarb
aas
jg
std
fistps
leave
cli
loope
adc
and
push
fadds
imul
sbb
sub
cmc
cmp
test
in
or
into
daa
cmp
sub
mov
adc
sbb
mov
push
flds
nop
xor
sarb
into
push
cwtl
sbb
jmp
jp
subb
xchg
out
loope
scas
into
mov
data16
mov
mov
lea
jg
xor
push
das
lea
mov
ret
xor
add
and
mov
sarl
scas
jb
es
pop
push
cmp
sub
pop
lret
sub
pop
aam
testb
xchg
shr
imul
lahf
mov
xlat
jbe
ss
push
cmp
jecxz
xchg
xchg
out
and
mov
int
cmp
pop
fiaddl
scas
dec
mov
dec
mov
inc
or
in
rorb
lret
add
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
inc
mov
pop
push
outsb
outsl
stos
test
cltd
sbbl
jle
jae
push
arpl
add
sbb
mov
mov
lods
negl
mov
cwtl
mov
fisttpll
sub
stos
pop
jae
adc
mov
jge
mov
mov
mov
mov
data16
dec
push
sbb
pop
push
mov
rolb
sub
lods
jmp
popa
jge
adc
push
js
scas
aas
sub
dec
sub
add
and
clc
lods
out
xor
jg
jae
inc
cli
sub
insb
hlt
pop
les
adc
out
pop
mov
add
xchg
test
mov
testb
mov
rclb
imul
dec
inc
gs
mov
fidivrl
pop
dec
add
add
pop
inc
sub
sbb
mov
cmpsl
mov
xor
outsl
aad
push
jp
outsl
bound
insl
ja
xor
dec
into
cld
je
and
call
les
add
xor
daa
or
rcrl
mov
imul
pop
mov
ljmp
dec
cmp
and
pop
mov
pop
jnp
push
jae
mov
sbb
sbb
int
pop
inc
enter
adc
aaa
xchg
or
push
jle
and
mov
add
adc
mov
mov
xchg
sbb
mov
out
jo
lods
xchg
ret
pushf
cmp
rolb
or
aas
das
mov
push
mov
xchg
xor
loope
push
add
and
or
and
jno
bound
pop
mov
or
add
xor
dec
imul
jo
adc
loope
and
mov
popa
mov
popf
out
dec
push
jge
in
mov
dec
xor
jmp
aaa
cmp
cltd
int
jno
ja
loope
dec
cltd
fsincos
inc
pop
jle
pop
jg
jle
dec
ja
pop
aad
xchg
nop
clc
dec
sahf
push
or
cmc
lret
ljmp
lods
sub
inc
push
clc
pusha
inc
or
push
out
xchg
stos
out
xchg
ret
and
test
and
sbb
sbb
shrb
push
sub
xor
rorb
jge
cltd
push
mov
jp
push
sub
xchg
mov
gs
popf
cmpsb
aas
adc
lock
sub
mov
jnp
orb
mov
into
lret
cmp
rorb
dec
loopne
arpl
cmp
adc
outsl
out
xchg
push
cli
mov
decl
pop
test
pusha
stc
les
inc
or
lods
xchg
pop
mov
mov
js
or
lods
testb
jecxz
push
out
xchg
es
mov
sub
or
fisttpl
sbb
jle
add
sbb
mov
dec
dec
pop
sbb
jnp
lods
mov
jns
pop
jle
adc
cwtl
jae
mov
mov
addr16
insb
mov
gs
mov
lcall
rcrb
and
xor
icebp
sub
xchg
xchg
push
sbb
jae
dec
mov
in
lret
pop
dec
cltd
sub
shrw
mov
pop
imul
jbe
jecxz
pop
ss
loope
movl
pop
dec
movsl
push
loope
jnp
ja
cmpsb
int
out
fdiv
sub
incl
cs
insl
aas
mov
push
sbb
lods
mov
imul
lret
xor
imul
push
inc
loopne
mov
inc
or
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
jmp
ljmp
popa
cmc
xchg
fadds
pop
jle
pop
jg
jle
orl
mov
push
sub
pushl
mov
jae
cltd
lcall
js
cwtl
add
cs
inc
xchg
pop
mov
dec
jl
xor
lret
jnp
cmpsb
in
jns
test
cwtl
repz
inc
movaps
adc
out
cmpsb
jmp
dec
test
mov
add
icebp
dec
pop
mov
adc
fcmovu
dec
in
jo
or
pop
push
or
dec
subl
arpl
call
push
in
test
xchg
test
scas
inc
inc
jl
gs
adc
cmp
xlat
or
nopl
sub
xor
aaa
pushl
jns
xchg
mov
mov
jo
sahf
mov
in
jecxz
popa
pushf
xchg
mov
out
xlat
xchg
pop
ret
loopw
jbe
lcall
cmp
outsl
push
mov
sahf
ret
ljmp
or
rcrb
adc
sbb
jge
aaa
push
pop
ret
pop
sub
push
movl
lahf
add
jno
gs
sbb
cmc
push
imul
add
add
xor
and
xchg
add
repz
xlat
sub
mov
movsb
xchg
cmp
scas
out
dec
inc
xor
ficoml
jp
nop
jbe
out
cmpsl
adcb
and
sti
mov
movsl
pop
mov
inc
cmc
daa
lret
aas
and
int3
nop
push
lods
or
mov
ret
ja
jno
out
jbe
rclb
dec
aad
cmpl
and
pop
mov
cmpsb
iret
mov
xchg
dec
and
inc
aam
cmp
out
add
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
stos
inc
push
dec
add
add
add
add
cmp
dec
add
inc
cmp
add
add
add
add
add
add
add
add
add
add
pop
xor
add
add
fs
add
sub
add
add
add
jb
insl
pop
dec
outsl
imul
ja
imul
fs
gs
outsl
popa
jb
dec
gs
inc
pop
inc
pop
inc
cmp
add
add
add
xor
add
add
add
and
add
add
add
aam
add
je
add
mov
add
nop
aaa
add
insb
inc
add
jo
add
dec
cmp
add
dec
add
sub
add
adc
add
inc
dec
add
hlt
xor
add
add
bound
add
add
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
add
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
arpl
insb
outsl
arpl
add
data16
outsl
outsl
jb
push
add
arpl
push
add
outsl
ja
outsl
ja
jb
add
gs
popa
jo
pop
je
jo
add
in
jae
jb
push
add
jo
pop
insw
outsl
fs
int3
add
outsl
jb
add
js
imul
imul
popa
add
fwait
add
jo
pop
arpl
insl
outsl
fs
sub
arpl
arpl
add
data16
add
or
je
ja
jo
gs
add
data16
je
add
outsb
jbe
add
arpl
imul
add
jo
imul
add
je
push
add
je
add
mov
outsl
ja
add
test
jae
popa
arpl
add
add
outsl
insb
outsl
ja
jb
fildl
pop
popa
insl
jae
pop
gs
je
add
add
imul
add
outsb
imul
add
jae
bound
gs
add
push
add
arpl
inc
imul
jae
jb
arpl
add
add
insl
outsl
jbe
add
cld
add
jb
outsl
insb
add
and
insb
outsb
add
and
pop
gs
je
call
js
je
add
jo
arpl
call
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
repnz
jb
arpl
add
imul
add
ja
je
jo
add
mov
insl
popa
insb
insb
outsl
arpl
add
pop
pop
addr16
popa
imul
add
ja
arpl
data16
push
inc
push
push
cs
insb
add
xor
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
outsb
fs
imul
inc
add
dec
imul
add
inc
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
jne
insb
push
arpl
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
imul
ja
jb
insl
push
outsl
imul
push
imul
ja
add
fs
outsb
jne
add
add
popa
bound
arpl
insb
insb
inc
popa
jb
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
outsb
fs
imul
rolb
dec
gs
popa
addr16
outsl
js
js
add
outsb
fs
gs
popa
addr16
add
outsb
imul
push
outsl
imul
inc
gs
imul
add
outsl
ja
arpl
insb
insb
inc
popa
jb
mov
dec
outsl
popa
fs
insl
popa
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
add
jo
imul
gs
add
sbb
push
gs
outsl
jbe
push
jb
jo
add
gs
jo
popa
je
push
outsb
add
add
push
imul
popa
jae
inc
add
add
je
insb
addr16
je
insl
push
gs
inc
add
ja
outsb
jne
popa
jb
sub
inc
gs
outsb
jne
repnz
jae
dec
gs
popa
addr16
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
push
imul
push
arpl
push
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
jo
imul
imul
inc
push
js
push
add
add
outsb
fs
gs
popa
addr16
imul
add
add
popa
jb
outsl
ja
jb
jne
push
add
insl
add
je
imul
outsb
addr16
add
mov
push
popa
imul
jne
dec
fs
add
movl
imul
gs
js
add
cmp
arpl
popa
imul
outsb
add
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
into
add
jae
popa
addr16
outsl
js
add
add
je
gs
popa
addr16
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
je
outsb
jne
je
imul
add
fs
outsb
jne
add
gs
jns
je
insl
dec
gs
imul
push
outsb
fs
gs
popa
addr16
add
aaa
add
je
outsb
jne
je
je
add
mov
inc
jb
ja
arpl
add
xchg
add
je
outsl
jns
jne
jae
jb
add
inc
fs
jae
push
imul
arpl
pop
add
je
jns
inc
outsl
insb
outsl
jb
jle
dec
imul
jne
je
insl
add
or
inc
jo
outsb
fs
outsb
jne
add
inc
push
outsb
jne
popa
imul
add
push
je
imul
push
arpl
insb
insb
push
imul
xor
inc
push
gs
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
sgdtl
je
insb
addr16
je
insl
add
dec
add
je
outsb
jne
je
insl
inc
imul
or
inc
gs
gs
je
jo
imul
inc
add
je
popa
jb
outsb
je
movb
outsb
fs
popa
jae
add
inc
jb
popa
je
dec
outsb
jne
add
add
je
popa
jb
je
outsl
jae
sub
push
outsb
fs
gs
popa
addr16
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
inc
add
je
outsl
outsb
imul
push
add
add
jo
imul
gs
add
out
inc
jb
insl
gs
arpl
add
popa
bound
outsb
jne
je
insl
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
mov
outsl
ja
jb
insl
push
outsl
imul
jb
ja
outsb
imul
arpl
and
push
arpl
insb
insb
push
imul
add
pop
add
je
arpl
add
je
insb
addr16
je
insl
dec
outsb
je
or
imul
add
pop
add
gs
je
dec
arpl
dec
outsb
imul
dec
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
pop
add
je
arpl
insb
insb
dec
outsb
outsw
add
add
popa
jb
outsl
dec
gs
inc
add
sub
fs
outsl
je
data16
gs
popa
addr16
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
push
jb
outsl
jb
add
push
gs
imul
js
inc
add
add
popa
jb
outsl
ja
jb
add
xchg
dec
outsb
jae
jb
dec
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
gs
imul
add
push
gs
arpl
jo
jns
add
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
jg
push
push
outsb
outsl
ja
add
inc
push
dec
outsb
jne
add
add
insl
push
outsl
inc
push
add
push
jo
popa
push
add
xchg
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
imul
popa
jae
push
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
mov
jb
outsb
je
inc
add
push
gs
imul
outsb
addr16
add
test
push
ja
je
push
imul
ja
add
add
jo
imul
add
inc
imul
jae
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
jne
inc
push
imul
add
inc
push
xor
cs
insb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
push
imul
iret
add
insb
arpl
insb
gs
add
popa
je
inc
dec
inc
imul
add
jae
jp
push
popa
insb
gs
add
gs
outsl
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
mov
imul
inc
gs
gs
inc
inc
add
aad
inc
js
push
gs
dec
jne
push
add
popa
je
inc
imul
add
arpl
jae
bound
int
inc
jae
popa
jo
add
faddl
push
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
jae
je
imul
dec
jb
inc
js
and
inc
gs
imul
jae
mov
inc
gs
gs
dec
bound
arpl
mov
popa
je
dec
popa
je
push
push
inc
jb
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
addl
imul
add
add
je
imul
jae
lods
add
insb
jns
gs
gs
add
add
je
bound
je
jb
arpl
add
jae
je
outsb
add
push
imul
add
popa
je
push
outsl
insb
imul
add
push
gs
dec
gs
imul
inc
gs
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
dec
inc
push
add
add
insb
arpl
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
add
je
jb
jae
dec
jb
inc
js
into
add
insb
arpl
push
arpl
addl
gs
gs
inc
js
outsb
je
outsl
imul
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
imul
add
je
je
arpl
bound
arpl
cmp
inc
gs
jne
jb
outsb
je
bound
arpl
jno
inc
gs
dec
push
xor
stos
add
gs
je
push
arpl
outsb
add
push
je
jb
inc
outsl
arpl
jbe
inc
imul
add
imul
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
inc
imul
je
imul
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
inc
gs
gs
inc
imul
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
insb
dec
popa
insl
gs
imul
add
gs
jb
outsl
jb
outsl
fs
pop
add
je
gs
jo
imul
add
cmc
add
gs
je
push
popa
imul
insl
gs
add
pop
add
outsb
fs
imul
gs
add
test
dec
gs
jo
outsl
arpl
add
jbe
inc
imul
jns
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
adc
dec
outsl
arpl
push
imul
gs
push
popa
je
dec
popa
insl
gs
add
dec
outsl
fs
gs
popa
outsb
fs
gs
add
mov
je
inc
imul
outsl
bound
push
imul
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
push
add
jmp
inc
gs
imul
bound
gs
js
add
mov
gs
jbe
outsb
je
add
push
insb
gs
js
int3
add
jae
jb
jo
outsb
push
add
add
gs
je
inc
jbe
outsb
je
add
push
add
je
jns
je
insl
inc
imul
jns
add
push
gs
gs
outsl
outsb
imul
imul
add
fs
imul
js
add
pop
add
insb
jae
gs
popa
insb
jne
add
add
inc
popa
fs
gs
fs
je
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
gs
jae
jb
gs
jne
je
popa
outsb
addr16
inc
add
adc
dec
outsl
arpl
dec
outsl
arpl
mov
jbe
jb
inc
gs
jne
je
outsl
arpl
add
incb
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
loopne
inc
jb
popa
je
dec
jne
gs
add
adc
inc
imul
outsl
dec
inc
dec
add
xor
inc
jae
popa
jo
inc
outsl
insl
insl
inc
jne
arpl
outsb
add
ss
gs
push
inc
outsl
outsb
je
js
add
sub
dec
outsl
jbe
inc
imul
add
je
push
dec
outsl
arpl
add
push
outsb
insb
outsl
arpl
imul
fs
je
insl
push
add
push
add
je
jns
je
insl
push
imul
jae
insl
outsb
je
mov
popa
imul
je
jo
gs
bound
arpl
add
inc
gs
gs
jo
popa
je
inc
add
out
add
je
imul
movb
je
arpl
imul
outsl
bound
inc
jb
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
cmp
dec
jo
outsb
inc
imul
dec
inc
dec
xor
cs
insb
add
push
add
imul
js
add
add
addr16
gs
jo
insb
addr16
add
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
or
inc
gs
imul
push
add
add
je
popa
jbe
inc
imul
add
arpl
fs
xor
cs
insb
add
inc
add
je
inc
imul
jae
add
dec
push
inc
push
dec
cs
insb
add
push
dec
push
jne
mov
inc
add
dec
inc
add
or
dec
ja
cmp
dec
jb
xor
dec
ss
jnp
sub
dec
sub
push
pop
push
xor
dec
cmp
dec
cmp
dec
jb
xor
dec
ss
popa
dec
sub
dec
sub
bound
arpl
dec
jno
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
jb
jae
addl
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
sbbb
setae
nop
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
mov
add
aas
dec
pusha
dec
cmp
dec
cmp
dec
pop
dec
xor
dec
xor
mov
ret
add
jo
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
ret
psrlq
shlb
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
cmp
dec
cmp
dec
cmp
dec
push
loop
jecxz
repz
jo
jno
jo
jno
ds
jg
cmp
dec
cmp
push
ds
dec
dec
xor
dec
xor
add
adc
adc
jno
aas
dec
add
xchg
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
mov
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
test
mov
add
or
inc
add
fstpl
inc
add
inc
inc
mov
jne
mov
incb
mov
dec
inc
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
and
pushf
clc
ljmp
add
inc
add
imul
pushf
clc
popf
jmp
add
jbe
inc
add
adc
pop
pop
inc
add
add
add
inc
add
add
dec
add
dec
add
add
add
add
inc
add
add
dec
add
inc
add
add
dec
add
add
jae
insb
popa
imul
dec
dec
inc
inc
insb
imul
imul
insb
jae
push
insb
imul
imul
imul
jae
imul
imul
dec
dec
inc
inc
push
outsl
imul
push
fs
imul
insb
imul
push
jne
jns
imul
jne
fs
push
data16
add
add
add
xor
inc
add
pop
dec
dec
dec
dec
dec
pop
dec
push
dec
or
dec
add
push
dec
pop
dec
push
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
push
dec
push
dec
inc
dec
pop
dec
dec
dec
push
dec
cmp
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jno
mov
outsb
jae
bound
add
mov
mov
inc
aaa
inc
jle
jno
mov
imul
inc
xlat
leave
xchg
inc
adc
jge
faddp
leave
xchg
fs
dec
leave
sbb
jno
rorb
add
shlb
xor
inc
push
outsl
push
push
inc
add
dec
inc
add
add
imul
pop
outsb
jbe
jns
push
imul
je
jp
arpl
push
imul
push
imul
push
jb
add
insb
pop
ja
je
bound
in
jnp
jnp
cmc
pushl
sar
flds
cvtps2pd
add
lds
jle
add
loop
stos
addl
mov
xor
hlt
sub
add
sbbl
adc
out
dec
shrl
test
inc
dec
and
inc
jecxz
aaa
pop
xor
sub
inc
push
jl
loopne
or
ja
rcrl
jg
lret
sahf
shr
dec
call
subb
cmpsb
mov
lret
mov
jb,pt
push
into
mov
push
cmp
aas
lock
xorb
jmp
dec
dec
and
int3
mov
repnz
repnz
movsb
rorb
xor
shrl
fldt
sbb
ret
inc
inc
inc
push
add
fwait
push
or
lods
mov
xor
and
sbb
mov
push
push
test
rorb
xchg
mov
and
fisubrl
push
cmc
push
or
movsl
mov
pop
ficoml
in
jle
cs
pop
ret
xchg
imul
push
addb
mov
or
aad
jns
clc
cwtl
jbe
ljmp
mov
repnz
or
lahf
inc
mov
mov
cmp
loope
mov
outsb
out
cmpl
lret
mov
cmp
push
ds
sub
fldenv
aad
xor
cwtl
rol
popa
and
test
add
mov
aaa
pop
cmp
cmpsb
call
push
push
xlat
sub
xchg
xchg
adc
adc
xor
pop
jp
in
sbb
xor
xchg
mov
popa
xchg
jge
inc
or
jne
leave
push
mov
push
xorb
push
dec
cltd
xchg
lea
repnz
push
mov
inc
push
mov
mov
mov
cs
mov
aam
sbb
in
frstor
sub
and
pop
dec
xor
stc
add
add
add
adc
std
das
js
add
testb
add
mov
or
mov
dec
sub
sub
jo
daa
push
sub
out
in
and
arpl
mov
pop
dec
mov
sbb
ficoms
add
or
out
push
jmp
or
pop
std
and
mov
pop
and
xchg
or
lods
std
push
xchg
sbbl
cmp
scas
stos
mov
jb
outsl
or
cmpsl
jg
js
shl
mov
int3
dec
mov
stos
xor
cmc
mov
lahf
or
aaa
pop
popa
addr16
cli
cmp
loop
or
cmp
lret
inc
mov
mov
stos
cmp
sub
movsl
add
cmp
xchg
ds
cmp
ret
inc
test
xor
xor
fstps
or
mov
test
or
mov
add
mov
stos
dec
out
jns
ds
call
add
stc
jb
mov
fnstcw
outsl
mov
call
xchg
stos
mov
add
push
xor
clc
lret
jge
mov
stc
mov
cltd
mov
mov
cmc
lds
mov
mov
sarl
movsb
ret
dec
imul
adc
fidivrs
push
imul
sbb
movsl
les
fwait
push
sub
push
fbstp
out
call
sub
pushf
dec
adc
pop
mov
clc
dec
fwait
xor
test
or
mov
pushf
pushf
arpl
xchg
mov
lods
stos
sub
mov
repnz
cs
call
into
pop
ficoml
lahf
sub
sub
orb
fxch
mov
es
icebp
aaa
sub
sbb
rolb
add
inc
or
leave
bnd
inc
dec
not
fs
add
repnz
aaa
sbb
xchg
daa
jl
insb
jnp
std
popa
mov
sbb
lods
dec
cmp
adc
aad
out
sarl
dec
call
dec
mov
mov
ret
imul
mov
mov
pop
jge
rcrl
push
mov
add
xchg
out
push
lea
adc
cmp
js
popa
fs
xchg
into
pop
dec
movsb
xor
cmpsl
xor
cmp
mov
out
sub
dec
movsb
xlat
pop
dec
push
cmp
xor
or
or
jmp
mov
sbb
inc
cltd
or
and
cs
jne
inc
subb
int
out
les
fmuls
or
sub
int3
dec
jmp
cmp
push
cmp
push
mov
xlat
push
sub
pop
sti
mov
repnz
adc
xchg
mov
lds
xor
sbb
add
jg
cmc
insl
cmc
out
lcall
sub
lock
pop
push
pop
ljmp
lock
mov
call
mov
mov
fisubs
lcall
mov
xchg
ficomps
les
shll
push
hlt
inc
outsl
or
cmp
xor
push
lds
push
test
jo
or
and
jle
adc
lods
data16
bound
mov
mov
dec
ret
mov
xorl
shlb
push
push
daa
aaa
fsubl
push
data16
inc
call
cmp
fwait
movsb
fdivrs
popa
jbe
pop
and
xlat
jb
jle
sbb
fldl
mov
mov
cli
pusha
addr16
test
xchg
fs
lock
loopne
add
and
add
popa
add
jle
std
adc
cmp
dec
das
out
dec
add
jle
add
outsl
jle
dec
xchg
call
dec
push
jmp
add
add
add
dec
int
mov
popa
out
hlt
leave
arpl
mov
iret
daa
sbb
rcrb
fnstenv
cmp
mov
pop
iret
movsl
pop
test
mov
out
inc
movsl
inc
es
cmc
dec
fucomp
jno
push
pop
fwait
mov
xchg
xchg
jmp
lds
fisttpll
insl
and
hlt
push
add
repnz
inc
and
insb
sbb
arpl
iret
sahf
sub
push
aad
insl
mov
adc
jmp
jmp
call
mov
mov
or
xor
test
sub
pop
ja
pop
pop
and
test
rcrb
insl
mov
in
or
mov
shrl
ds
fisttpll
outsl
push
lods
xor
cmpb
jne
jo
call
sbb
push
sub
inc
cmc
call
ret
add
jle
and
scas
sti
jle
inc
sbb
rolb
add
testb
add
ficoml
cltd
test
mov
shrb
and
adc
pusha
push
jb
and
inc
adc
dec
jmp
scas
inc
add
push
sub
lret
jmp
test
mov
jnp
pop
loop
out
xor
iret
ja
cmp
pop
adc
popa
jne
repnz
mov
rcrl
mov
xor
push
push
jns,pn
cmpsl
idivl
aaa
shrb
pop
aad
pop
jno
adc
sub
jae,pt
xor
mov
mov
sub
jecxz
lret
ljmp
pop
mov
sub
cmp
repnz
in
jp
movsl
fimuls
mov
push
add
jae
int3
bnd
mov
movl
xchg
mov
pushf
rolb
jb
push
sbb
adc
fidivs
mov
jg
das
insl
adc
xchg
or
insl
aas
add
lahf
fnstcw
ss
lahf
stc
inc
jb
lahf
mov
add
add
add
fcompl
push
jmp
jbe
js
movhps
lock
cmp
ficompl
adc
mov
push
mov
sub
cmp
xlat
shll
xor
mov
in
into
cli
clc
mov
and
cltd
mov
add
repnz
cmp
int
push
and
add
jno
cmc
push
sbb
push
les
jnp
int
aam
pop
fwait
stc
mov
jbe
add
jns
repnz
adc
sti
outsb
je
cmpsb
cmp
push
outsl
stc
and
repz
popf
dec
xchg
popf
aas
jle
jp
leave
push
pop
repz
fld
stos
enter
std
cmp
andl
jns
addl
inc
add
xor
xor
mov
roll
push
push
mov
icebp
adc
insb
outsl
cmp
push
mov
rol
jg
adc
add
xor
push
jl
jle
insb
pop
decl
pushf
nop
pop
dec
xor
add
testb
add
dec
or
jne
lds
int
mov
aas
xor
mov
in
inc
out
sub
push
mov
cli
scas
xchg
andl
sbb
loopne
mov
pop
jecxz
sbb
mov
in
jns
jns
xchg
jnp
push
adcb
shlb
loopne
jl
dec
fmul
adc
lea
in
and
sub
lea
mov
xlat
push
outsb
cmpsl
dec
ss
xchg
or
add
mov
jmp
in
mov
test
jnp
dec
jecxz
dec
cmp
fcmovb
xchg
adc
fwait
pop
inc
inc
sub
les
xchg
cmp
mov
hlt
shrb
jo
push
push
dec
or
xlat
lds
xlat
aaa
push
xorb
cwtl
xor
icebp
out
inc
aas
cwtl
loop
fidivrs
push
pop
data16
ljmp
int
daa
xor
and
pop
mov
add
mov
adc
pop
ljmp
sub
add
testb
add
fildll
cmp
add
clc
rol
in
ss
mov
jb
test
pop
xchg
loopne
xor
shl
in
mov
lods
in
sbb
pusha
jbe
js
fnsave
mov
ret
cltd
pop
out
cld
sbb
xor
sbb
push
mov
push
pop
les
xor
loopne
mov
nop
push
mov
out
loope
jb
mov
cmpsb
rcrl
dec
vmwrite
orl
xchg
roll
aad
or
addb
leave
in
insb
movsl
lret
ret
out
jle
jne
cmp
cltd
or
mov
mov
je
test
fcmovb
jp
lods
arpl
insb
xchg
rep
push
pop
dec
test
popl
adc
dec
push
cmp
inc
cmp
dec
fcmovnbe
sahf
mov
popa
and
dec
out
add
aaa
data16
jne
mov
gs
cmp
jl
lock
testb
add
nop
push
xor
inc
lea
repz
or
out
orl
scas
xchg
rorb
jns
inc
jbe
mov
inc
lock
or
mov
xchg
inc
ljmp
pusha
push
aaa
dec
aas
out
mov
push
and
inc
cwtl
sub
aaa
lcall
push
ret
mov
pop
mov
aad
ficoml
cmp
movsb
xchg
push
lret
inc
dec
mov
lcall
jg
movsl
mov
cmp
test
pop
add
dec
mov
insb
or
push
sbb
dec
xor
jmp
cmc
sub
push
sub
add
sbb
loop
jae
and
and
sbb
stc
leave
dec
push
pusha
cwtl
leave
fstl
outsl
push
out
in
cld
stos
insb
sub
bound
or
mov
test
mov
jns
inc
hlt
jge
add
add
jnp
sti
xchg
rol
imul
and
add
testb
add
mov
daa
pop
stc
lea
mov
cwtl
pop
mov
mov
jle
push
lods
fs
out
add
jno
dec
repnz
push
std
outsb
outsl
cmp
lahf
and
sbb
push
push
ret
fsub
aad
mov
nop
mov
popf
xor
cltd
fadd
jg
rcrb
sub
pushf
dec
pop
add
pop
lcall
mov
inc
sbb
pop
push
pop
cltd
push
loope
fs
test
rclb
cmpsl
in
rolb
jb
xchg
out
sub
stc
and
nop
mov
daa
imul
adc
jb
imul
dec
inc
cli
sbb
popf
or
jl
sub
sbb
in
or
pop
hlt
xorl
test
adc
popa
imul
sbb
add
add
pop
sarl
test
sub
add
testb
add
insl
ret
sub
rcrl
mov
addr16
lods
and
js
daa
xchg
sub
xor
add
jb
xchg
test
dec
push
data16
sub
movsb
daa
sti
fisubl
cmp
jb
dec
jae
les
pop
divl
mov
jmp
jmp
adc
mov
add
pop
lret
or
stos
and
mov
mov
pop
jecxz
push
mov
add
push
and
push
xchg
movsl
jbe
fsubrs
adc
ljmp
lret
in
test
add
dec
ss
dec
push
out
inc
adc
ja
arpl
add
cmpsb
hlt
cmp
ror
or
mov
in
outsl
adc
and
or
dec
sbb
adc
shlb
dec
lods
adc
xor
dec
mov
inc
sub
int
or
addr16
add
insl
lock
std
repz
xchg
scas
fstl
pop
stos
add
add
testb
add
or
xchg
sub
push
clc
leave
sbb
rorl
inc
dec
popl
push
cmp
out
sbbb
stc
std
xlat
test
pop
out
mov
xchg
sbbl
mov
ret
inc
insb
push
push
sbb
xchg
daa
adc
andb
jae
insb
gs
inc
mov
and
pusha
outsl
cli
ljmp
rep
divb
cmp
mov
mov
nop
jecxz
in
lcall
mov
mov
scas
sbb
xor
addr16
outsb
pop
xchg
pop
dec
cld
data16
or
stc
cmp
adc
adc
xor
dec
jae
cmp
xchg
mov
imul
and
add
add
movsb
ret
lds
sub
imul
add
lock
cmp
or
and
repz
testb
add
loopne
mov
mov
les
sbb
adc
lahf
push
or
mov
mov
cltd
adc
mov
popl
push
xchg
xor
sbb
int
sbb
inc
cmp
inc
movsb
cli
fiadds
mov
mov
pop
sbb
les
pop
sahf
lods
and
push
scas
mov
push
add
inc
mov
es
sub
aad
mov
push
adc
sbb
orb
fdiv
push
hlt
in
clc
add
pushf
call
out
or
scas
jge
cli
fs
inc
sbb
pop
dec
adc
movsb
push
roll
test
sub
bound
cmc
pop
or
push
in
or
addr16
ja
dec
enter
aaa
lahf
cmovb
in
cwtl
sbbb
xor
dec
pushl
testb
je
jl
add
mov
mov
scas
mov
add
testb
add
cmp
adc
lcall
mov
sub
out
fs
push
jl
test
or
and
push
mov
mov
pop
dec
fstpl
xor
mov
pop
ds
ficoms
push
hlt
addl
pop
test
scas
popf
vpsubd
rorb
dec
in
push
fnsave
xchg
jbe
xor
scas
hlt
xchg
ja
mov
mov
xor
or
jle
jmp
rcrl
or
xchg
movsl
je
sub
cmp
pushf
je
in
aas
int
clc
or
out
jecxz
xchg
sbb
sub
jle
mov
fists
out
fxam
repnz
mov
aam
shll
cli
and
les
sbb
xchg
jno
dec
sub
lret
sbb
insl
lock
and
mov
lret
xchg
in
mov
pushl
comiss
cmc
add
testb
add
mov
mov
push
ret
inc
test
lods
inc
fistpl
fcoms
add
ja
jbe
push
add
js
mov
imul
fmul
and
mov
dec
jg
bound
cmpsb
pop
out
stos
mov
movsl
std
fst
ficomps
pop
rolb
push
inc
lods
mov
add
and
lahf
shlb
cmpb
mov
xor
inc
pop
or
sub
mov
sub
shl
xor
adc
repnz
inc
repnz
mov
testl
jle
mov
push
out
pusha
mov
cmp
aaa
jae
pop
pop
test
sub
fimull
cltd
adc
shr
rolb
mov
movsb
outsl
fidivs
lret
or
add
mov
lahf
popf
pop
out
push
xorb
insl
add
inc
mov
in
negl
push
inc
push
xor
testb
testb
add
lock
cs
and
addr16
cmpb
psrlq
pop
xor
sub
mov
pop
out
xchg
js
and
jecxz
repz
xor
add
xchg
shrb
enter
jge
adc
cmp
enter
imul
sbb
mov
xchg
pop
mov
repz
cmp
aad
cmpsl
push
pop
lock
mov
or
or
test
xor
nop
push
int
push
pop
lea
mov
push
insb
adc
shrl
int
mov
push
aad
scas
jg
jmp
negb
inc
add
icebp
into
jo
outsl
push
or
test
ja
push
orl
sahf
sub
sbbb
mov
mov
inc
std
push
aaa
push
insl
in
xchg
ret
mov
add
mov
nop
fmull
dec
into
testl
add
mov
xchg
inc
out
nop
stc
adc
int3
subl
dec
shrb
xchg
fdivs
mov
lods
sti
sbb
push
push
push
les
lret
stos
push
lret
adc
in
push
push
add
inc
jmp
push
mov
add
ret
nop
pop
aas
pop
add
jmp
adc
pop
addr16
xor
xor
cmpl
xchg
pop
js
pop
inc
dec
sub
fbld
mov
scas
hlt
gs
mov
sub
jnp
das
xchg
and
lods
or
sub
arpl
shll
out
pop
mov
out
mov
xchg
testl
js
mov
sub
imul
jmp
cmp
jge
inc
aas
mov
adc
fs
sahf
pop
cmp
fnstenv
jne
mov
subl
cmp
mov
push
add
adc
push
jns
clc
add
testb
add
pop
xchg
mov
imul
pop
jge
cmpsb
outsl
testl
cli
in
adc
xchg
sbb
mov
cmp
adcb
and
mov
je
fbld
mov
mov
in
fstpt
fyl2xp1
pop
or
add
in
inc
add
xchg
adcb
push
jmp
dec
add
dec
push
popf
cmp
and
lahf
aas
sub
popf
sub
or
les
and
mov
mov
pop
dec
fwait
mov
pop
inc
stos
jle
and
mov
mov
xorl
mov
into
xor
mov
mov
leave
xor
mov
test
inc
jb
push
sbb
popa
daa
mov
mov
and
insb
sbb
pop
push
push
xchg
add
repnz
add
pop
inc
xchg
pusha
push
mov
add
add
in
or
jp
jmp
push
movsl
add
jns
add
pop
ds
adcl
xchg
lods
push
add
stos
test
mov
sbbl
lret
and
ds
cli
xchg
push
sbb
cmpsb
sti
out
push
mov
push
xchg
push
push
add
shrl
aad
add
xor
push
cmp
sub
insb
imul
mov
bound
jno
movsb
or
mov
sub
into
jp
cmc
or
cltd
inc
inc
xlat
mov
jp
push
mov
lock
push
xor
jp
pop
or
stc
jle
mov
push
push
mov
mov
rcll
xchg
inc
mov
sub
aad
add
loope
xor
mov
or
dec
repz
rclb
insb
push
testl
fsubp
add
pop
mov
push
decl
mov
inc
jmp
testb
add
jge
lods
outsl
shrl
fadds
dec
cs
pop
test
out
int3
or
lret
stos
and
xchg
cmp
pop
dec
mov
je
push
mov
mov
dec
xor
sahf
sub
sbb
test
mov
xor
mov
fdivs
pop
cld
cmp
xchg
icebp
or
mov
mov
dec
and
imul
push
das
push
pushf
lret
or
jbe
out
push
and
mov
sbb
pop
and
pop
xchg
push
mov
xor
and
mov
mov
push
mov
mov
add
ret
sub
test
sub
cmp
fnstsw
scas
jo
in
push
adc
fidivrl
das
fucomp
cmp
inc
sti
push
cld
add
sbb
lahf
jae
jbe
cltd
add
and
cmp
sti
fsubp
decl
ret
orl
aam
sti
add
testb
add
or
xchg
jmp
icebp
push
jmp
hlt
xchg
push
sbb
leave
xlat
xchg
push
dec
gs
leave
or
add
add
out
mov
adc
nop
adc
jns
ja
lods
cmp
mov
int3
ret
out
push
xchg
js
addr16
aam
enter
mov
xorl
andb
repnz
mulb
cli
add
es
xor
cwtl
xor
sbb
cmp
in
lahf
xchg
jno
cltd
cli
mov
adc
aam
push
or
inc
xchg
repnz
in
bound
mov
stos
xchg
xor
ja
jae
push
pop
push
icebp
bound
or
aam
iret
out
insb
jg
fisubs
lds
inc
and
pop
xchg
ffree
lock
sub
fstps
add
and
and
or
data16
add
add
cwtl
stos
lret
pop
pop
jno
rcrb
mov
xchg
dec
cmpsl
jp
lret
ds
mov
jae
shl
lods
cmp
sti
xchg
inc
fisttpll
inc
mov
jmp
xchg
repz
iret
push
enter
mov
rcrl
rcrl
cmp
cli
orl
stos
and
pop
jns
outsl
insb
push
movsl
pop
sti
mov
lahf
mov
je
call
jb
sub
jne
test
adc
test
dec
jno
ljmp
or
xor
add
xchg
push
push
jle
cmp
movsl
mov
xor
icebp
sarl
cmp
and
dec
dec
arpl
xchg
clc
xchg
xchg
push
mov
adc
cmc
aad
insl
push
nop
adc
out
add
dec
test
add
xchg
and
sbbl
rolb
add
repz
ror
lock
jnp
jmp
sbb
enter
std
add
testb
add
add
fstpl
jnp
mov
stos
pop
dec
insl
les
jbe
mov
std
cmpsb
les
pusha
xchg
je
fst
mov
imul
dec
cmp
mov
test
es
inc
jne
in
xor
lret
add
mov
bound
aad
add
rcrl
xchg
and
insb
and
fs
or
movsl
xchg
cli
stos
test
fnstcw
lahf
repnz
mov
loop
add
cmp
in
add
stc
dec
mov
rep
lahf
adcl
pop
mov
and
out
xor
data16
mov
push
dec
in
adcb
pop
fs
gs
lea
sbb
imul
fmuls
sub
std
sbb
sub
movsl
xchg
loope
jno
xlat
cld
or
pushf
sbb
and
repz
fimuls
mov
idivb
add
add
test
int
rorb
inc
sub
or
outsb
lock
dec
fwait
sbb
hlt
fimull
popa
mov
lahf
stos
mov
xchg
inc
or
push
ja
insl
scas
add
pop
shrb
mov
dec
xlat
cwtl
std
mov
daa
fcomp
repnz
add
std
gs
das
mov
jmp
mov
pushf
or
inc
scas
out
ss
movsl
xor
inc
and
ja
adcl
or
sarb
rcrb
aas
cli
icebp
or
adc
das
nop
shrl
mov
shlb
adc
jne
xor
hlt
mov
decl
pop
inc
sbb
mov
popf
and
incl
pushf
push
pop
lahf
negl
call
stos
dec
adc
ja
jle
out
push
repz
mov
add
out
xchg
jns
pop
mov
ja
incl
add
add
add
jo
pop
push
mov
dec
jne
ret
gs
test
inc
xor
and
xor
jo
arpl
adc
imul
fidivrl
add
inc
xchg
inc
jg
add
pop
or
inc
xchg
or
dec
push
or
jg
data16
sub
inc
outsl
sub
push
jg
mov
cmp
fwait
divl
mov
sbb
aaa
jne
adcb
jge
mov
mov
xor
gs
push
push
push
xchg
push
pop
fpatan
std
jmp
jnp
pop
aaa
test
cli
inc
push
sbb
xchg
loope
inc
xor
lds
in
popf
int
sbb
jp
mov
push
int
sub
xchg
ja
push
popf
push
add
mov
bound
cmc
stos
jne
mov
rol
mov
lds
pop
addb
shrl
cmc
scas
mov
or
add
testb
add
xorb
cmp
mov
gs
adc
fcmove
mov
pushw
add
imul
push
daa
mov
loopne
pusha
push
stos
pop
mov
aam
jb
pushf
fstl
stos
ljmp
cmp
dec
push
push
adc
xor
cmc
pop
mov
fucomi
insb
inc
insl
popf
in
pop
insb
stc
push
mov
mov
or
and
test
jg
mov
test
sub
lock
xor
pop
add
cli
fsubrl
pop
rcll
gs
xchg
xchg
or
mov
lods
ja
int3
out
mov
lret
popf
cld
lcall
dec
jmp
and
mov
jbe
in
mov
test
aam
mov
mov
fstl
sub
xchg
fstpt
fdivl
test
mov
add
jg
add
lret
pusha
rorb
lea
cmpsb
jb
add
add
add
add
pop
sub
sub
cmpsl
rclb
enter
jo
popa
push
xchg
or
sub
dec
pop
sub
sbb
lret
adc
pop
mov
stc
push
sub
adc
or
lret
gs
fwait
and
fstpt
movsb
mov
mov
or
inc
xchg
lods
inc
fcmovnu
push
inc
fisubl
loope
outsb
dec
out
mov
or
push
iret
in
das
xor
and
int3
outsl
icebp
dec
in
imul
adcb
les
adc
jnp
andl
and
mov
shlb
dec
test
sbb
pop
out
push
ja
cmpsb
test
sub
and
sbb
adc
inc
inc
mov
rolb
ret
sahf
shrl
pop
mov
push
jae
roll
fiaddl
sbb
mov
add
add
gs
testl
leave
cmpsb
or
add
add
add
add
out
mov
or
lea
inc
cmc
mov
xlat
clc
mov
aaa
adc
lods
popa
pop
mov
adc
sbb
inc
das
xor
sbb
xor
cmpsb
or
cli
jp
xor
in
cmc
push
movsl
mov
or
mov
ja
push
aas
scas
mov
cmc
jmp
inc
vandps
shrb
jne
lcall
push
adc
and
xor
sbb
xchg
xor
daa
adc
fcoms
das
lret
ret
cmp
xchg
dec
push
arpl
ret
nop
int3
xchg
outsb
adc
fstpl
jo
scas
mov
xchg
ret
int
lock
call
test
mov
jp
mov
insl
out
jl
loope
adc
les
inc
xchg
out
sub
push
mov
xchg
jmp
add
and
daa
lahf
jle
sbb
add
add
add
add
jae
std
mov
lock
test
dec
lahf
mov
in
cmovg
iret
and
fistps
movsb
jp
sbb
add
fsubl
in
imul
jl
aaa
xor
dec
ljmp
bound
jmp
call
js
mov
dec
iret
adc
sub
cmp
arpl
nop
test
lcall
movsb
sbb
inc
adc
push
sub
leave
cmp
xorl
lcall
or
cmp
int3
fcmovnbe
daa
out
push
adc
mov
jnp
call
and
xor
mov
scas
sbb
js
xchg
or
insb
into
xlat
add
sub
push
pop
mov
xchg
cmp
push
cmc
push
jnp
inc
mov
xor
pop
sub
out
bound
pop
add
mov
xlat
aam
pop
jecxz
in
dec
add
add
add
add
mov
jle
xlat
xchg
lock
sbb
sbb
xor
add
mov
push
and
aam
test
cmp
mov
movsl
sbb
shrl
mov
sub
ret
push
stc
mov
mov
out
aad
xchg
out
inc
stos
adc
ret
sub
xor
or
test
shll
scas
jp,pt
push
insb
dec
call
aam
adc
adc
xor
aas
cmp
cwtl
mov
shrb
jecxz
rol
add
shll
lea
into
mov
inc
scas
push
xchg
adc
fnstenv
outsb
and
fadds
mov
pop
mov
push
push
pop
and
or
mov
push
mov
sbb
add
jbe
push
inc
pop
jns
aas
fisttpl
inc
ss
adc
add
add
lods
pop
sub
lea
cmp
sub
jo
fcoml
adc
jp
cmp
xchg
out
fdivrl
loopne
xchg
mov
cmc
fisubl
inc
loop
dec
fsub
push
mov
aaa
iret
sub
cmp
cmp
jns
xchg
iret
xlat
adc
mov
mov
inc
mov
push
loop
dec
es
or
pop
push
mov
sub
stos
sub
dec
lock
pushf
or
dec
dec
sarb
lahf
pop
enter
test
fidivrs
mov
mov
inc
hlt
test
sub
in
mov
and
leave
sbb
popa
mov
jbe
popa
jb
gs
cld
insl
pusha
push
xor
cmp
int
in
mov
pop
mov
mov
clc
mov
ja
add
cmpsb
sbb
jnp
mov
dec
in
push
add
testb
add
sub
into
nop
xchg
dec
repz
cwtl
push
mov
jbe
mov
iret
movsl
pop
out
scas
inc
imul
cmp
xlat
stos
mov
inc
dec
popa
sti
fwait
dec
xchg
push
repnz
pusha
and
enter
lret
sbb
fs
mov
inc
push
std
push
stos
mov
sti
xor
push
rcr
pop
insl
rorl
jp
enter
lock
xchg
repz
je
stc
js
cmp
imul
clc
mov
out
or
fmull
or
add
idivb
test
adc
in
sbb
mov
add
lret
cwtl
mov
dec
mov
pushf
stc
inc
daa
inc
inc
movsl
pop
popa
dec
jb
mov
mov
sbb
nop
inc
or
jle
push
orb
insb
dec
xlat
repnz
mov
jl
push
nop
scas
lret
gs
sbb
inc
rcrb
into
add
adc
jb
add
imul
adc
pop
add
testb
add
sbb
xorb
sub
add
out
movsl
ljmp
mov
pop
scas
mov
dec
daa
cmp
pop
xchg
add
xchg
es
dec
pop
lods
xchg
sbb
jmp
inc
inc
fnclex
stc
mov
jne
aad
lret
movsl
mov
mov
subb
push
jle
inc
iret
sub
subl
lahf
enter
ja
es
mov
sub
xchg
xor
dec
sub
pushl
jb
sbb
lds
push
pushf
ror
sbb
int
adc
rorl
mov
push
fidivrl
or
movsl
push
xor
and
dec
mov
jb
push
fdivs
test
pop
nop
push
push
insb
int
add
lds
xchg
mov
idivl
mov
add
testb
add
enter
push
mov
out
sub
mov
mov
sbb
jae
xchg
mov
scas
sbb
cli
hlt
push
aad
pusha
dec
int3
cmp
xchg
adc
sub
pop
adc
call
jp
sbb
ret
sub
mov
jmp
mov
pop
popf
stos
test
sbb
mov
mov
hlt
mov
pop
xchg
push
lcall
fbld
mov
add
fs
pop
adc
in
mov
adc
imul
mov
and
jle
sub
fbld
jmp
ret
pop
add
jge
and
fiaddl
call
shll
xor
sbb
adc
fldcw
mov
test
pop
leave
js
mov
push
out
inc
mov
out
xchg
lea
add
mov
stc
ret
xchg
stc
sbb
add
testb
add
dec
sub
xlat
jmp
xchg
or
fisttpl
cs
out
mov
push
adc
dec
cli
dec
and
ja
jecxz
jp
je
lods
insb
in
ret
call
sub
scas
popa
xor
in
sub
shlb
ljmp
push
out
lret
mov
or
inc
test
cmc
mov
cmpsl
jnp
loope
cltd
es
cli
or
and
sbb
out
xchg
push
jge
mov
jne
aas
and
int3
jle
rorb
ror
jb
xlat
jne
imul
std
inc
fwait
lods
into
movsb
pop
inc
loop
add
pop
dec
daa
pop
dec
inc
push
leave
lods
jns
jmp
jb
mov
aam
inc
leave
inc
jp
in
sbb
push
mov
mov
sbb
jne
in
pop
xchg
xchg
push
inc
inc
xorb
jns
hlt
roll
int3
lret
lds
addb
js
add
push
pop
push
jmp
sub
arpl
adc
add
testb
add
and
faddp
shll
xchg
push
mov
mov
and
sub
or
addr16
nop
or
mov
jno
xor
mov
xlat
movsb
mov
jae
push
dec
fists
cmp
aaa
xor
repz
mov
nop
dec
mov
push
loop
iret
outsb
out
stos
div
iret
aam
gs
mov
fs
pop
pop
les
daa
jns
or
dec
shrl
out
dec
out
pushf
push
pop
mov
mov
jae
mov
daa
cli
cmp
mov
xchg
arpl
push
pop
inc
call
xor
lods
aaa
movsl
add
sbb
lret
or
push
mov
test
mov
repz
pop
sub
xor
mov
pop
lds
mov
jge
stc
push
insb
and
pop
mov
in
enter
mov
add
pop
inc
pop
lods
pop
cli
cmc
inc
mov
int
or
add
add
add
pop
inc
xchg
int
loope
mov
daa
aad
mov
cs
stos
ret
out
outsb
call
out
inc
pop
je
fcomi
lods
sub
in
xor
call
jmp
rolb
fisubs
or
notl
cmp
call
rcl
mov
in
int
push
add
mov
mov
test
mov
or
shrl
pop
fstps
fstl
inc
fbld
dec
std
lret
or
sub
lcall
insb
inc
imul
pusha
repnz
cmpsb
fsubrs
dec
out
or
and
out
aam
mov
or
iret
popf
scas
push
dec
test
pop
xor
pop
into
sbb
mov
lea
mov
xchg
add
stos
cltd
inc
popf
jae
out
inc
dec
clc
mov
or
add
add
add
pop
mov
jae
cmp
pop
pop
imul
jle
ret
sarb
cmpsb
jg
inc
and
push
mov
fucomip
scas
aas
cltd
or
pusha
ss
aaa
ja
add
ljmp
enter
adc
lods
push
lea
sbb
loop
sub
push
hlt
push
aas
ljmp
std
add
cltd
dec
jle
imul
add
add
rol
je
or
lods
add
fldenv
imul
fmuls
lods
dec
sub
xchg
xor
sbb
jmp
push
cmc
ljmp
loope
pop
push
cmp
or
cld
js
pop
repz
js
dec
jle
dec
jae
adc
xor
movsl
push
sub
out
dec
stc
lock
add
mov
nop
test
aam
int
xchg
clc
adc
or
add
add
add
mov
in
stc
int
test
mov
xor
insb
push
dec
icebp
cmp
mov
outsb
cmc
lret
sub
ss
push
adc
outsb
in
out
mov
lods
and
iret
ja
sbb
and
push
loopne
jbe
shr
in
jo
mov
jge
xor
leave
nop
jle
in
ja
sub
push
scas
mov
std
imul
aas
or
movb
arpl
cmpsb
xor
xchg
inc
inc
inc
fs
mov
sbb
push
adc
ret
mov
xlat
adcl
xchg
and
je
pop
push
rsm
jl
jb
imul
pop
or
and
aaa
push
ret
mov
push
out
mov
xchg
sub
dec
inc
lret
jg
pop
incb
xlat
cmpb
add
arpl
addr16
inc
jmp
jg
or
add
cmp
push
les
std
ret
aam
in
sub
xchg
rorb
repz
mov
popf
nop
or
enter
arpl
lret
pop
push
mov
inc
cmp
push
jns
repnz
cmp
orb
inc
sahf
mov
shl
lea
imul
fwait
xchg
mov
mov
mov
push
cmpsl
add
daa
out
and
cmp
test
lcall
xchg
inc
inc
jbe
sbb
mov
mov
ja
or
sar
and
lahf
and
arpl
xor
cmpsb
popa
and
shrb
or
mov
decb
movsb
adc
mull
xchg
test
jp
sub
add
insb
and
cmpsl
jp
cmp
inc
push
sbb
mov
fdivl
sbb
push
popf
aas
out
js
cmpb
add
out
out
pushl
jecxz
add
cmpsb
inc
fimuls
add
testb
add
dec
jge
mov
push
sub
sbb
sub
in
cmc
xlat
in
ja
mov
inc
push
lahf
pop
in
pop
lods
mov
lcall
dec
sti
mov
dec
push
dec
xor
in
inc
cmp
add
lret
inc
xchg
enter
cmp
int3
add
prefetchnta
xor
jb
adc
aas
cmpsb
fstl
xchg
clc
add
jl
jnp
testb
pusha
les
or
pop
dec
xchg
js
les
inc
cmp
cmpsl
dec
out
xchg
add
ret
jp
adc
in
cwtl
sbb
ljmp
insl
inc
dec
sbb
mov
icebp
movsl
and
call
hlt
or
outsl
mov
cltd
xchg
cmp
xchg
pop
in
aaa
jge
loop
lods
xor
aam
sbb
cmpb
mov
jmp
pop
stos
fisttps
cli
loope
sub
cltd
mov
add
add
add
push
scas
out
mov
shl
imul
add
add
int
jle
adc
or
dec
bnd
and
xchg
xchg
push
ret
add
add
addr16
xor
int
hlt
cmpsl
frndint
mov
cmp
js
into
inc
popf
fwait
mov
mov
call
sub
dec
dec
outsb
push
rcll
mov
shlb
xor
lods
jle
lcall
inc
sub
aam
pop
push
ljmp
xor
imul
jnp
jne
or
test
sbb
cwtl
dec
fprem1
lods
leave
pop
add
outsl
mov
dec
ret
movsl
cmpsb
mov
mov
cwtl
cmp
mov
rcrb
or
mov
dec
aam
jns
pop
sahf
mov
push
lods
xchg
add
lock
mov
push
sti
cmp
dec
cli
inc
icebp
inc
push
push
out
mov
insb
or
add
mov
and
in
aad
sti
sbb
pusha
incb
add
xchg
and
movsl
mov
mov
cmp
scas
adc
sub
testb
add
dec
dec
fisubrl
in
xchg
fs
push
ja
sub
mov
jp
in
popa
sub
js
jbe
fst
inc
xor
andb
xchg
add
mov
es
clc
lock
push
das
sbb
je
cmpb
push
gs
jnp
call
fcmovnb
inc
xchg
scas
lods
push
dec
je
jmp
sbb
gs
lahf
in
inc
rcrl
push
push
xchg
jp
aam
outsb
mov
fsts
xchg
in
stos
xor
in
xchg
jl
les
add
insl
icebp
and
cmc
hlt
inc
xor
mov
lds
jle
scas
popa
cld
sti
pop
adc
push
xchg
daa
pop
js
mov
data16
into
jae
mov
icebp
and
aad
dec
les
ss
pop
in
push
cmp
sbb
fdivl
mov
jl
push
inc
rclb
add
add
add
cmp
inc
xor
int3
sub
outsb
insb
sti
adc
add
in
ds
lds
arpl
hlt
add
nop
xchg
leave
sbb
int
in
rcll
fadds
push
sbb
shl
cmc
mov
adc
shll
out
and
dec
lods
cwtl
pop
pop
inc
push
ror
cmp
les
pop
cmp
mov
mov
mov
roll
jno
std
rolb
jbe
cld
outsb
loopne
add
jb
pop
jg
add
dec
stos
ficoms
loopne
xchg
mov
mov
cmp
push
xchg
ret
jp
data16
xchg
xchg
pop
jge
cmpsb
pop
clc
sbb
stc
add
push
jp
dec
pop
js
mov
out
push
add
xor
int3
popa
lahf
lahf
xor
pop
dec
sbb
test
jmp
add
mov
mov
fidivrs
int
dec
int3
mov
add
testb
add
pop
int
inc
movsl
mov
xor
std
jecxz
loope
fstps
mov
push
and
push
sub
fwait
imul
pop
add
push
fdivrs
add
dec
pop
lods
subb
lahf
shlb
outsl
cld
out
fs
and
icebp
int3
fidivrl
inc
and
fistpll
xor
in
mov
cld
stos
cmpb
mov
andb
xor
xor
mov
xor
mov
into
xchg
adc
es
popa
xchg
sub
data16
cld
cli
mov
jg
or
loop
data16
mov
daa
aam
cmp
inc
adc
fucomp
jmp
cli
or
test
mov
imul
adc
ficomps
add
mov
or
lods
adc
add
add
add
inc
or
mov
out
das
addr16
ret
add
pop
dec
lahf
pushf
pop
jg
int3
mov
das
lcall
inc
lret
int
mov
insl
jbe
addb
mov
sub
lret
loopne
mov
popa
dec
push
add
mull
adc
mov
js
not
out
pop
dec
jns
enter
push
das
pop
pop
fidivrs
dec
ret
pop
dec
sti
sbb
lock
pop
or
mov
leave
out
jmp
stos
out
andl
mov
pop
xchg
add
fidivl
int3
fnstenv
loop
or
test
clc
xchg
adc
mov
push
dec
pop
loope
pop
mov
popa
jb
xchg
xor
inc
insl
dec
scas
xor
add
ret
scas
sub
jb
and
sub
pushf
pusha
popa
and
add
hlt
fists
mov
add
testb
add
xor
ds
popf
xlat
sar
test
mov
xchg
jmp
jo
out
push
jne
jecxz
pop
fcmovne
adc
xchg
xchg
inc
and
xchg
mov
sub
push
xlat
mov
bound
dec
mov
inc
popf
sbb
pop
xor
pop
outsl
movsl
rol
outsb
fcomps
adc
push
loop
jb
addb
adc
dec
daa
xchg
or
clc
testb
cmp
subl
sub
sub
add
xor
nop
stos
std
popa
lods
scas
sub
jo
movsb
test
sub
out
inc
jb
popa
jno
pusha
jno
fsubrs
clc
cmp
cmp
sbbl
sbbb
adc
xorb
fs
mov
movsl
dec
in
test
out
xchg
sub
sahf
and
mov
mov
add
mov
into
fwait
testb
fiadds
sahf
cwtl
adc
add
aaa
mov
shrb
cltd
out
subl
stos
and
ljmp
dec
adc
jne
lock
jnp
in
jnp
or
xchg
adc
subb
jns
in
call
or
jo
ja
mov
mov
hlt
aam
iret
push
test
pop
jmp
add
out
adc
inc
cwtl
push
enter
sbb
in
lcall
mov
xchg
cmp
mov
movl
mov
iret
pop
lret
cld
jo
in
inc
cli
faddl
push
sub
mull
cmp
xchg
or
dec
idivl
aaa
and
fstpl
inc
popa
push
cmp
nop
push
add
repnz
ljmp
xor
push
mov
lcall
push
push
jb
add
xor
mov
pop
mov
lret
mov
add
testb
add
or
aam
in
icebp
je
lret
dec
mov
or
cli
iret
or
sub
pop
pop
or
arpl
mov
xor
jmp
std
dec
xchg
cs
or
sbb
dec
icebp
ljmp
xchg
movsl
push
mov
xor
add
xchg
movsl
push
sub
lods
loope
rcrl
fnstcw
or
fstpt
xchg
sub
mov
mov
aas
pop
or
nop
aad
sub
orb
inc
mov
jne
push
movsb
push
repnz
cli
xchg
fs
or
pusha
arpl
in
test
sbb
fimuls
mov
pop
stos
cld
out
mov
orl
sbb
popf
test
cmc
clc
je
xchg
shll
int3
xchg
xor
addr16
aam
pop
inc
aaa
jo
dec
jno
add
inc
out
aas
mov
sub
dec
and
add
add
add
xchg
test
insb
std
fnstenv
or
xchg
cmp
mov
xchg
jecxz
je
adc
inc
xor
repz
inc
outsb
fwait
sar
inc
dec
decl
push
inc
mov
sbbb
call
addr16
ret
and
dec
orl
in
in
mov
xor
stos
rorb
sub
mov
fs
add
cld
mov
xchg
and
test
jb
push
inc
fwait
leave
cli
add
test
in
dec
pushfw
jp
jns
test
push
mov
mov
mull
hlt
stc
clc
pop
jne
test
lret
mov
mov
and
lea
mov
ljmp
jb
inc
dec
leave
xchg
popa
xchg
popa
or
test
lds
add
bnd
jp
xchg
inc
push
dec
je
sbb
add
add
add
mov
pop
inc
add
sbb
mov
das
dec
xchg
sub
cltd
fwait
push
fldenv
add
lea
subl
call
into
push
data16
push
push
lods
adc
cmp
movsb
fdivs
cwtl
mov
push
or
dec
add
adc
aas
loop
fsubp
cmp
test
push
inc
ffree
xchg
xlat
rclb
add
rcr
or
push
xchg
sarb
mov
cltd
inc
movsl
jo
push
sbb
mov
sarb
push
imul
mov
stos
into
push
movsb
fst
ljmp
cmc
cmpsl
out
inc
cmc
inc
mov
orb
les
hlt
push
pop
and
test
fmull
inc
jb
jae
push
ss
subl
jne
mul
pop
in
xchg
inc
pop
jge
pop
xchg
add
sbb
in
out
ja
fbstp
or
test
add
testb
add
arpl
cli
ja
popf
lods
or
add
imull
lahf
adc
sar
loop
adc
cs
adc
inc
mov
adc
or
insb
sahf
xchg
mov
xchg
lods
push
or
pushf
data16
daa
sub
pop
jp
mov
inc
xchg
fldt
aad
mov
mov
ret
inc
mov
jmp
inc
cmp
mov
jp
mov
mov
xor
push
add
sti
sub
mov
or
add
and
and
cmp
rcll
jge
lret
int3
cmpsb
mov
jg
insb
into
popf
dec
dec
mov
mov
icebp
movsl
mov
pusha
test
movl
xor
cmp
das
jns
sbb
popf
jmp
adc
mov
add
add
pop
in
push
fisubl
add
testb
add
imul
push
pop
mov
add
jae
jecxz
adc
imul
mov
out
sbb
adc
sbb
aad
out
and
jge
shll
mov
es
mov
jle
adc
out
in
xchg
dec
test
push
inc
outsl
mov
aaa
jecxz
push
ljmp
adc
adcb
test
in
inc
inc
push
xor
sbb
add
icebp
ds
mov
xor
mulb
or
xorl
scas
mov
das
idiv
jle
add
sahf
jp
sahf
out
dec
mov
outsw
push
loope
push
inc
push
cwtl
push
and
sub
cld
adc
dec
sbb
xor
mov
adc
cmc
xchg
subl
ja
xor
and
cmp
push
hlt
push
pop
loopne
out
adc
hlt
push
lret
cltd
ret
add
jg
imull
push
idivb
pop
xchg
pop
sbb
add
add
add
pop
jnp
in
test
push
pop
cld
adc
js
and
loopne
insb
sbb
daa
sub
cmpsb
push
in
shlb
rcrl
pop
xchg
mov
inc
mov
aaa
sbb
test
and
mul
push
icebp
dec
and
xor
xchg
ss
mov
loopne
mov
fildll
mov
jmp
add
clc
push
movsl
add
and
out
add
cs
inc
cmpsl
mov
push
cmp
jl
or
sbb
ret
cld
and
cmc
xorl
inc
in
mov
pop
dec
es
or
popa
hlt
mov
in
xchg
mov
fcoms
dec
rolb
sub
fstpt
fadds
leave
mov
mov
inc
push
cwtl
inc
jmp
sbb
push
ds
add
inc
jns
add
and
lds
cmp
sti
jg
and
lret
stos
pop
fcoml
add
testb
add
enter
out
mov
add
dec
or
adc
mov
pop
mov
jl
scas
and
mov
jmp
xor
mov
dec
mov
sar
xlat
jb
ret
or
dec
mov
and
test
pop
push
ret
inc
and
std
xchg
fstl
jbe
stc
push
lahf
mov
test
fstpt
push
rcrl
dec
sahf
mov
stos
jno
sbb
dec
ficomps
outsl
cmp
sub
sub
popa
call
sub
push
xchg
jl
popf
fs
test
or
movsb
gs
cmp
sub
lods
mov
fisttpll
ds
mov
push
sahf
mov
insl
in
ret
jb
jecxz
inc
adc
vaddsubpd
jns
xor
das
inc
popa
sahf
adc
mov
add
jnp
fldl
add
add
add
add
jge
daa
test
fs
pop
add
lret
jecxz
sub
cmp
cmp
xor
sub
iret
xchg
nop
sub
push
les
sub
stos
movsl
in
sbb
aad
mov
cld
das
push
push
pop
inc
sub
cmp
out
sbb
incl
imul
mov
add
xchg
out
dec
decl
inc
sbb
xor
jecxz
ret
jb
out
or
sbb
push
les
loop
rcl
push
push
fucomp
addb
stc
aam
outsb
dec
add
mov
cmp
xor
pop
test
icebp
xor
dec
jb
les
arpl
sub
shl
xchg
cmpsb
and
imul
lret
insl
out
mov
stos
out
xlat
movsl
pop
jmp
outsl
sti
out
in
mov
mov
int
cmp
and
stos
cwtl
add
mov
jno
std
outsl
mov
xchg
pop
cltd
mov
pop
dec
ds
add
testb
add
push
dec
in
pushf
loop
mov
divb
xchg
sub
movsl
loopne
push
shll
mov
in
inc
addl
add
and
mov
popf
lret
cli
push
out
in
adc
int
pop
jg
sbb
rol
test
add
jno
outsb
sub
fcmove
test
clc
ret
jne
push
data16
test
pop
cld
cwtl
rcl
xchg
aaa
bound
add
xor
pop
sbb
stos
add
sahf
add
cmp
sub
pop
loop
loope
cmpsl
loop
or
cmp
mov
stc
inc
pushf
sahf
popa
icebp
fsubrp
pushf
mov
sub
jb
and
leave
ret
adcl
mov
xchg
mov
mov
xchg
imul
out
mov
pop
cltd
rcl
and
daa
test
adc
mov
mov
outsb
add
sbbb
loope
jmp
loop
outsb
sub
pop
add
testb
add
pop
mov
or
nop
pop
pop
hlt
add
cltd
fwait
seto
or
cs
sti
daa
jnp
cmp
and
aas
lods
mov
loop
fucom
cmp
jmp
and
cltd
pop
lret
adc
rolb
pop
js
push
mov
pop
pop
mov
mov
fsub
add
cmc
les
out
adc
pop
lret
add
adc
ja
addr16
lds
add
xor
lahf
xor
rorl
in
push
cmpl
cmc
loopne
in
leave
imul
push
mov
rcrl
inc
sbb
jae
or
cmp
loopne
pop
inc
xchg
test
scas
sbb
jnp
sbb
adc
and
fsts
test
push
or
std
push
sub
das
xchg
sub
xor
shrl
stos
pusha
icebp
xchg
lods
push
xchg
add
xor
xchg
lds
icebp
cmp
outsb
sub
add
testb
add
mov
addr16
and
loop
xchg
mov
andb
xor
mov
pop
fs
fildll
xchg
pusha
xor
mov
pop
iret
cmpsb
adc
int
push
or
loopne
shrb
out
fs
jmp
popf
mov
or
test
js
in
xchg
mov
int3
popf
rcrl
frstor
add
cmp
push
fstpl
jnp
sub
outsb
or
xchg
mov
inc
pop
orl
push
mov
ss
adc
push
ss
jecxz
pop
push
mul
in
inc
inc
dec
in
sbb
fisttpll
mulb
jbe
push
and
xchg
sub
cmp
ljmp
pop
sbb
adcb
lahf
sti
or
mov
push
insb
ds
push
or
or
movsb
ja
cmp
sub
in
push
mov
pushf
xchg
push
sarl
add
dec
cli
inc
jg
int
pop
sbb
inc
aaa
jg
and
add
add
add
aam
push
fcmovu
mov
addr16
push
inc
stos
movsb
add
mov
repnz
mov
pop
or
adc
sbb
and
push
imul
inc
popa
or
push
outsb
dec
clc
je
sub
fcoms
imul
sbb
in
or
dec
ss
cmp
shll
imul
jle
in
dec
rcl
adc
popa
xlat
cmc
lcall
cmpsb
mov
shll
in
and
jbe
fidivrl
xchg
outsb
ljmp
subb
push
push
out
fcmove
or
sub
int3
std
jnp
pop
pushf
sbb
xlat
stos
gs
xchg
repz
repnz
imul
ret
imul
cmc
xchg
cmc
push
icebp
mov
testb
out
xchg
jbe
jle
mov
in
xchg
push
add
xchg
std
cmp
jle
fisttps
cmp
rcll
and
add
add
add
bound
mov
lret
aam
movsb
enter
xchg
jne
shlb
mov
xor
sub
hlt
mov
outsb
mov
dec
ret
sub
cmpsl
dec
ja
aaa
sbb
xchg
pop
fdiv
sbb
faddl
jge
and
cmp
dec
jge
mov
jae
sub
pop
inc
cld
ja
sbb
test
jne
jp
mov
push
pusha
xor
sbb
push
inc
mov
pop
mov
dec
cmp
xchg
push
movsb
xchg
xor
mov
ds
xor
sub
push
in
pop
dec
adc
adc
cli
ss
sub
pop
mov
jae
xlat
into
dec
pop
adc
or
sub
xchg
add
loop
dec
dec
and
std
rcll
cmp
push
js
movsl
imul
ret
outsb
sub
cmp
inc
ficomps
xchg
pop
lds
xlat
ficoml
jecxz
xchg
or
add
testb
add
icebp
cmp
out
test
xchg
mov
sti
mov
or
repz
push
dec
dec
loop
in
adc
arpl
sti
faddl
outsb
or
leave
dec
mov
or
shlb
fistps
xchg
divl
leave
cli
push
push
je
cmp
mov
fsubrs
fsubr
pop
pop
fldl
sti
and
or
push
cmp
mov
push
sub
in
into
jne
mov
mov
mov
aad
ds
stos
xchg
enter
cmpsb
test
xchg
nop
stos
push
pushf
pop
repz
pop
cltd
pop
mov
push
add
xor
adc
cmp
dec
pop
pop
push
jb
xor
cmp
pop
and
out
fldt
insl
and
sbb
inc
cmp
incl
dec
jmp
dec
scas
iret
outsb
jmp
rcll
mov
scas
add
add
add
add
sub
push
imul
xor
xchg
jmp
decl
fdivrl
mov
cmp
popa
mov
or
jge
cli
outsl
in
cli
in
fcmovnb
adc
js
test
sbb
jb
in
mov
xchg
push
mov
insb
mov
nop
adc
js,pn
data16
inc
dec
and
movsl
mov
aam
mov
negl
sbbb
or
cmp
adc
mov
jo
nop
in
mov
push
sar
ret
jp
cmp
xchg
pop
enter
sbb
xchg
lods
jmp
rcll
fs
xchg
rcr
xchg
sahf
leave
push
aas
mov
ret
inc
jno
data16
das
xchg
aam
cmovno
int
movsl
mov
aad
jno
scas
orl
popl
sti
add
push
sbb
repz
xchg
or
mov
ror
cmp
add
sbb
std
sbb
stc
cld
or
data16
testb
add
cli
inc
xchg
or
push
insl
es
lods
imul
mull
mov
mov
xor
mov
mov
dec
call
mov
fbstp
pop
mov
xchg
push
or
xor
nop
arpl
shll
test
pushf
cmpsl
adc
aas
pop
aas
test
cmp
dec
cmp
push
popa
shrb
and
and
stos
adc
int
jecxz
jns
sub
pop
fidivrs
incl
push
inc
adc
lret
sbb
xchg
in
add
ficoms
test
loope
cs
sub
sub
cltd
jcxz
dec
and
inc
adc
cmp
or
adc
test
cmpb
rcrb
fcomps
xor
gs
lret
movsb
leave
push
xchg
lahf
or
je
ret
push
pop
lods
xor
les
jne
adc
mov
fiaddl
push
sbb
add
negl
adc
out
jl
or
cwtl
out
and
add
adc
mov
cmp
jle
sti
pop
lcall
movsl
imul
arpl
mov
sbb
push
iret
ss
rorb
jg
dec
cmp
mov
imul
jne
pop
int
push
fcmovne
jo
push
xor
pop
cmpsb
xor
mov
aad
cmp
fwait
mov
push
sahf
iret
pop
in
adc
gs
add
mov
jbe
and
dec
test
std
hlt
mov
lret
aaa
das
fstl
aam
pop
mov
mov
popf
mov
daa
cwtl
lahf
inc
and
push
mov
mov
fwait
sti
lret
jp
test
out
mov
mov
mov
lods
push
cmp
and
out
jno
pop
ja
and
adc
pushf
dec
dec
mov
aaa
sub
cmp
add
dec
pushl
sub
add
testb
add
pop
dec
push
pop
out
adc
adc
int3
movl
test
clc
mov
cmc
fucom
idivb
dec
jo
pop
cmc
pop
test
mov
fisubl
mov
cs
inc
pop
scas
jecxz
pop
ret
pop
dec
stos
cmp
daa
xchg
scas
sarb
orb
jmp
lods
dec
jb
xor
ss
sub
test
fucomp
sub
in
cmc
jae
je,pt
mov
or
push
fnstcw
xchg
inc
or
aad
dec
sbb
fsubr
mov
inc
push
or
mov
sub
cmp
rcll
nop
jae
rorb
xlat
inc
mov
andl
notb
or
sbb
lods
push
pop
mov
loope
fistpll
fsubs
out
std
ds
or
xor
hlt
jl
add
inc
ja
pop
aas
pop
pop
inc
adc
cmp
add
add
add
lcall
out
mov
mov
mov
aaa
popa
mov
sub
dec
jecxz
adc
pop
inc
push
ljmp
out
pop
jmp
stos
test
hlt
mov
outsl
ret
push
push
cmp
ss
dec
dec
mov
in
push
ljmp
iret
cmp
in
pop
das
iret
pusha
mov
and
aas
mov
movsl
push
push
or
mov
pop
jle
movl
push
iret
arpl
sbb
pop
imul
xchg
popa
insl
push
push
shl
push
and
repnz
popa
cmp
lcall
fwait
popf
jae
push
pop
lahf
sbb
sbb
inc
xor
pop
and
mov
and
loopne
push
shr
cltd
lea
mov
jae
dec
pop
jl
aam
push
mov
out
cmp
repz
jae
ja
div
dec
lods
push
mov
inc
test
sub
add
add
add
imul
jno
test
sub
insb
lock
es
mov
or
jl
mov
cmpsb
pop
inc
out
int3
mov
sbb
xchg
mov
jb
lret
xchg
push
jg
xor
xchg
jno
and
jns
jl
lods
sub
sbb
mov
push
outsw
into
cld
xchg
and
pop
cmpb
decl
mov
jmp
ljmp
stos
addr16
test
and
sub
imul
fdivr
cmp
test
popf
sub
push
xchg
gs
aaa
subb
jge
adc
mov
mov
pop
jmp
sbb
sbb
movsb
cs
fbld
pop
movsb
stc
and
shll
push
sbb
add
pop
mov
ret
clc
in
jl
in
loope
fcoms
fcos
inc
adc
std
pop
or
out
add
cli
std
jg
into
jno
std
and
test
add
testb
add
xchg
ret
fbld
and
fldl
jl
lods
mov
mov
and
and
sar
test
push
shrl
push
lods
xchg
std
cmp
bound
dec
mov
inc
movsl
xchg
movsl
iret
fistl
push
xor
mov
add
jge
scas
stos
repnz
cmc
inc
xor
mov
icebp
jae
xchg
data16
mov
xor
add
mov
mov
out
xor
pop
dec
mov
stc
cltd
das
sti
pop
pop
cmpb
dec
fmull
mov
push
arpl
lcall
add
pop
rol
clc
cmp
xor
subb
in
in
mov
popf
jl
jno
xor
mov
xchg
test
pop
push
jl
and
xchg
add
testl
incl
sub
pop
cwtl
xor
mov
add
add
inc
out
add
stos
loop
dec
jo
aam
sub
pop
mov
mov
mov
leave
mov
icebp
fwait
pop
add
jl
and
sub
dec
in
add
arpl
fstpl
mov
push
xor
pop
add
xor
shll
xchg
ja
sbb
or
outsb
psrlw
add
test
loopne
push
jbe
lds
fidivs
enter
mov
cmp
rolb
popf
ret
out
insl
movsb
das
add
cltd
push
xor
sub
push
xorl
lods
sub
nop
pop
push
jbe
sbb
xor
int
sbb
rorb
mov
fbld
jno
xchg
xchg
arpl
cmpb
mov
sub
cmp
mov
add
push
es
jg
pop
xorl
jno
clc
mov
add
testb
add
mov
outsb
hlt
mov
mov
ds
je
sbb
and
std
ljmp
push
mov
imul
ljmp
mov
popl
jae
das
outsb
loopne
push
pop
mov
pop
push
cmpsb
sbb
jae
pop
inc
clc
push
movd
in
int3
inc
pop
xor
iret
repnz
pop
lods
shlb
mov
loopne
popa
mov
mov
mov
add
pop
in
ret
mov
xchg
jmp
imul
push
ss
and
rcrl
in
lock
in
push
mov
adc
mov
frstor
cwtl
push
inc
xor
xor
cmpsl
jg
int
mov
push
or
jg
outsb
add
push
cltd
cs
jle
lea
cld
imul
sbb
dec
loop
cmp
xor
add
or
cmp
sahf
mov
testb
add
aad
ss
adc
adc
mov
das
mul
jb
pop
icebp
mov
ljmp
cmp
mov
jbe
xor
inc
and
adc
test
fiaddl
sub
testb
and
cmp
js
mov
popf
sub
adc
outsl
adc
je
pop
inc
scas
adcb
jnp
dec
stc
and
call
loopne
rcrb
fisubrl
js
ds
loopne
call
lea
popa
je
pop
imul
pop
push
push
push
xchg
inc
cmp
cmpsl
xchg
and
jp
cmp
add
mov
mov
xorb
cmp
inc
mov
mov
rcrl
out
in
push
enter
dec
jnp
jne
movsl
mov
shlb
push
jmp
jmp
subl
xor
ja
pandn
add
testb
add
mov
sbb
repnz
sub
sarb
inc
cwtl
gs
xor
dec
mov
push
mov
popa
push
add
inc
sti
add
aaa
outsb
inc
out
mov
push
or
lods
sahf
nop
int
mov
xchg
popf
adc
shl
jmp
inc
inc
and
mov
ja
sbb
cltd
and
out
das
ficoml
jmp
insb
xchg
test
mov
insl
add
mov
mov
dec
jno
mov
ret
or
mov
sbb
cwtl
or
mov
jg
and
fdivl
insb
push
and
mov
gs
xchg
lahf
xor
dec
aam
mov
sbb
adc
push
dec
lock
mov
out
inc
pop
add
push
sub
add
add
ficoms
stos
sbb
ljmp
push
mov
xchg
add
testb
add
xchg
pusha
loopne
je
test
shr
icebp
arpl
xlat
ret
jmp
cltd
mov
mov
loop
jbe
jb
dec
dec
lds
dec
je
les
sub
pushf
xchg
add
ljmp
mov
je
ljmp
jne
and
or
fimull
adc
insb
mov
vaddpd
lret
mov
rcll
lret
or
mov
sbb
jb
xor
jmp
addl
mov
jo
std
mov
testb
cmovae
icebp
dec
shr
je
in
push
sub
shr
sub
mov
adc
mov
push
and
mov
shlb
mov
lock
xor
sbbb
pop
jmp
add
add
mov
cmp
jb
sub
sub
movsl
fwait
jb
add
in
out
sbbb
sbb
mov
add
testb
add
in
and
mov
and
cmp
out
sarb
sbb
push
ror
clc
bnd
mov
xchg
mov
mov
out
clc
and
cmp
xor
je
mov
sub
add
adc
std
push
pushf
pop
lods
int3
insb
and
decl
jo
mov
fisttpl
sub
scas
pusha
in
lea
int3
mov
or
xor
pop
sbb
cli
out
push
leave
jg
iret
push
negl
aas
mov
orb
int
ret
xchg
flds
sti
sbbb
inc
sti
lcall
mov
cs
faddl
dec
subl
ja
jmp
imul
add
mov
pop
jnp
lret
xor
outsb
ret
js
mov
stos
fwait
inc
pop
sbb
subb
add
dec
or
out
aad
jo
xchg
or
testb
add
lods
add
incb
push
and
scas
xchg
jnp
out
fimuls
fisubrl
sbb
push
pushf
in
insl
std
xor
nop
ss
aad
push
cli
mov
ja
push
mov
popf
not
or
xchg
and
insb
push
pushf
add
fs
sub
dec
mov
inc
push
aad
push
in
mov
outsl
stos
outsl
xor
lahf
fildl
rcr
push
mov
cli
jge
push
or
dec
pop
push
inc
sti
mov
ljmp
fldl
scas
dec
dec
in
sti
sub
js
xchg
sub
xchg
and
xchg
scas
mov
mov
pop
lds
test
lcall
test
pop
jnp
inc
div
fsubr
or
sbb
cli
mov
es
lret
ret
sub
outsl
or
jl
add
in
add
cmp
out
dec
lret
fstpt
jbe
add
testb
add
mov
divb
pop
push
push
xor
xor
int
mov
jo
cli
cmp
and
cmp
jl
imul
sarl
lods
test
xchg
mov
adc
mov
xchg
dec
mov
xor
mov
imul
cmc
jge
movsl
loope
sahf
rorl
mov
fsubs
insl
add
and
es
movsb
mov
pusha
mov
cmc
negl
imul
jns
fs
popa
sub
push
fmuls
rolb
mov
cld
in
mov
adc
pop
and
jecxz
cld
inc
mov
jo
fs
cld
push
inc
sub
adc
adc
ljmp
mov
mov
loopne
movsl
jb
xchg
addl
cli
mov
test
sbb
out
add
lods
xor
rcl
xor
add
add
add
pop
int3
adc
mov
aas
mov
xchg
notl
popa
jns
cmpsl
andl
scas
push
add
and
scas
hlt
inc
divl
les
int
xchg
lahf
and
dec
repz
cmp
inc
test
jge
pop
xchg
rorl
leave
out
dec
jns
sub
mov
adc
sub
in
lahf
iret
test
pop
sub
movsl
and
dec
aaa
xchg
xchg
adc
pop
movsb
jmp
fnstcw
cmp
inc
cmp
adc
jmp
mov
mov
mov
sti
xchg
dec
jno
hlt
stos
pop
push
pop
xchg
ds
sarb
loopne
fimull
dec
mov
lret
sbb
lahf
sahf
movaps
add
adc
ret
sahf
adc
in
lods
xchg
dec
dec
cmp
test
push
gs
leave
or
incb
leave
inc
or
lret
inc
push
dec
sbb
jg
sub
add
jg
cld
add
adc
jg
xor
add
add
add
sti
mov
push
sbb
adc
les
inc
adc
fcmovu
inc
or
call
push
push
mov
insb
adc
stos
xlat
xchg
aaa
cld
and
mov
popf
es
scas
int
test
cld
and
pop
push
mov
sub
out
pop
movsb
pop
pop
pop
out
cmp
sbb
mov
or
adc
and
fists
inc
inc
popf
sarb
repnz
cmp
test
filds
and
pop
dec
add
call
dec
cmpsl
dec
out
sahf
mov
add
or
int
and
and
fsubrp
int
lock
imul
xor
fldt
pop
out
dec
fstpt
popa
mov
push
sahf
in
push
jge
xor
or
loope
pop
cltd
jo
xchg
fsubs
ret
mov
iret
mov
adc
mov
testb
add
and
in
dec
inc
pop
addr16
cmp
mov
loop
jnp
xlat
cmpb
sbb
pop
rcrl
push
shrb
sti
xchg
mov
punpckhbw
loope
mov
cltd
sbb
bound
jne
shrl
xor
es
xor
imul
stc
add
mov
imul
icebp
xchg
mov
jae
mov
test
pop
mov
mov
sahf
xchg
leave
fwait
jle
aad
pop
fbld
int3
aas
outsb
fdiv
jg
sub
mov
mov
addb
mov
pop
adc
aaa
jo
sbb
or
fisubrs
roll
testl
sub
movsl
xchg
fbstp
xchg
adc
in
jecxz
dec
in
andl
sbb
inc
sub
repz
lods
fsts
add
add
mov
sbb
les
xor
add
cmp
sbb
das
stc
dec
mov
lea
ljmp
add
mov
fisubs
movsb
es
cwtl
mov
stc
out
mov
mov
fmull
gs
xchg
inc
in
loopne
in
xor
dec
push
es
call
pop
stos
xchg
mov
ret
sbb
add
out
stc
jns
xchg
xchg
sub
mov
inc
in
cwtl
sub
pop
stos
aas
adc
jns
xlat
subl
xchg
mov
cld
loop
out
mov
push
repz
testb
data16
jl
jo
xor
ja
ficoml
jg
cmp
sahf
adc
add
jg
pop
push
int3
and
pop
mov
jae
or
cmp
pop
repnz
loope
inc
push
fwait
adc
jbe
imul
mov
push
mov
mov
add
shlb
cli
clc
cli
clc
sarb
repnz
inc
aam
imulb
add
add
add
je
xchg
push
jge
dec
bound
jns
xchg
divb
lods
dec
lea
mov
cmp
push
aaa
push
or
daa
mov
sahf
mov
sbb
es
rorl
sub
les
mov
push
mov
mov
jge
stos
cmp
xor
repz
xlat
cmpsl
out
or
cmc
sub
mov
cli
rcll
cmpsb
jae
shrl
and
or
rcrl
or
mov
cmpsl
outsl
jne
shl
les
loop
mov
add
outsl
in
in
jns
or
jno
mov
sub
lds
xchg
ret
loope
push
xor
push
mov
loopne
das
cmp
sbb
movsb
jne
inc
scas
int
and
cmpsb
xlat
jne
or
mov
stc
jne
sbb
xchg
and
cmp
cld
xchg
jne
es
jmp
jbe
gs
add
jnp
out
push
lcall
cmp
add
testb
add
scas
gs
lcall
fdivr
adc
pop
ficoms
xlat
sub
aaa
inc
aad
and
movsb
inc
sbb
repnz
in
sbb
adc
jl
dec
hlt
push
mov
inc
insb
ljmp
sub
adc
fdivr
sub
out
jb
xchg
fidivrl
xor
pop
ss
sbb
push
in
xor
sub
add
mov
mov
xor
je
add
int
mov
jmp
out
pop
mov
pop
xor
pop
jg
cmpsb
mov
rcrb
dec
cmp
or
into
mov
in
aam
or
mov
xchg
sub
mov
bound
movsl
icebp
je
shr
push
push
sub
scas
pop
push
cwtl
and
lret
popf
dec
add
or
nop
test
mov
jmp
mov
and
mov
add
fs
es
data16
cmc
jle
dec
xlat
pop
jno
cmp
add
add
add
fwait
cmpsl
or
push
cmc
lret
or
mov
add
mov
rep
ss
jo
cwtl
pop
push
in
xor
ret
adc
inc
rol
int3
jg
xchg
js
jns
ss
or
inc
and
jge
clc
ja
in
lret
pop
mov
and
sbb
test
mov
or
aam
push
rcrb
pusha
and
das
cmpsl
mov
or
dec
cmpsb
push
lret
cmp
movsb
mov
mov
insb
jb
into
sub
fwait
bound
jae
mov
xor
push
push
enter
mov
push
jae
jb
js
mov
inc
test
cmpsl
dec
aad
or
pop
xor
imul
dec
sub
test
xor
outsb
jo
cwtl
ret
xor
dec
pop
mov
int
mov
dec
in
xor
add
dec
mov
imul
test
cmp
add
add
add
cmp
mov
push
jns
lds
sbbb
inc
inc
insb
mov
xorb
push
out
rol
pop
pop
sub
sbb
out
mov
mov
cld
clc
pop
lock
inc
and
hlt
inc
jb
lea
and
sarb
push
ds
notb
int
mov
hlt
mov
cmp
push
pushf
mov
idiv
push
xor
sbb
bswap
pop
adc
scas
push
cmp
je
sahf
inc
pop
push
xchg
movsb
or
dec
inc
aas
xor
out
pop
push
lds
cmp
daa
dec
ret
gs
ds
ror
fistps
insb
add
add
test
inc
inc
aad
into
sahf
sub
cld
push
and
mov
fistps
xor
xchg
aam
je
iret
xchg
ds
fldl
push
push
notl
xlat
mov
xor
dec
adc
add
and
push
sti
cmpsl
pop
push
jo
rcrl
add
testb
add
or
mov
cs
into
sub
lret
out
dec
jmp
pop
es
lods
jns
jb
in
lret
mov
cmp
test
aas
js
or
daa
ret
ljmp
enter
mov
mov
cmc
test
dec
jmp
jecxz
pop
add
push
scas
cwtl
decl
jb
cmp
lea
or
push
push
cmp
fisubl
inc
push
shl
in
pop
adc
mov
mov
add
fimull
mov
sar
jp,pn
imul
in
push
out
dec
mov
popf
jbe
sbb
leave
xor
arpl
add
pop
mov
cmpsb
repz
sub
jmp
pop
stos
mov
dec
lock
popa
inc
fsubrs
push
push
dec
sub
mov
in
mov
add
push
and
std
cmp
outsl
dec
pop
adcb
add
testb
add
xor
fimull
xor
mov
push
out
insb
mov
aaa
adc
enter
xor
mov
je
or
scas
es
sub
jg
push
jns
fwait
into
sahf
xor
aad
pop
sub
cmc
imul
xor
iret
fcoms
mov
mov
mov
cld
imul
outsl
lods
dec
lods
aas
inc
in
lret
fs
mov
pop
pop
scas
cmc
mov
scas
lds
out
arpl
or
es
jbe
ja
push
jle
sub
push
cmp
mov
jns
push
sub
fistpl
and
or
divl
adc
fnstsw
mov
push
ficompl
clc
and
jb
mov
jge
ljmp
int
or
xlat
rcll
test
or
and
sti
add
lds
xchg
and
push
or
or
add
add
add
in
cmpsl
and
dec
sahf
shlb
dec
push
add
int3
shr
adc
xchg
xchg
divb
push
mov
adc
or
and
mov
cmp
pop
mov
bswap
ret
push
and
mov
out
ficoms
sbb
clc
mov
leave
leave
out
lea
sub
outsb
out
cmp
push
or
out
adc
fldl
popf
icebp
cmp
insb
mov
push
lock
push
mov
xchg
adc
idivl
les
inc
xchg
pushf
lods
xor
aaa
sbb
xchg
fldcw
and
mulb
sub
xchg
insl
xor
sbb
cs
loop
mov
mov
xchg
iret
pushf
lods
and
cmpl
pop
int
inc
adc
add
add
fiaddl
ret
ficomps
push
mov
add
add
add
insl
cmp
out
inc
mov
mov
add
cmc
add
dec
lods
and
aad
mov
mov
jae
or
adcl
imul
insl
daa
ss
push
or
adc
jl
adcl
xor
loopne
pop
test
sti
xor
outsb
fdiv
fldt
inc
cmpsl
sbb
sti
cmp
into
das
pop
adc
lea
popl
daa
pop
mov
jns
xor
pop
dec
movsl
popf
jmp
out
inc
adc
inc
sbb
aam
push
add
mov
jge
xchg
cmp
scas
pushf
enter
lcall
and
ljmp
add
data16
shll
fistpll
fidivs
bound
cs
jns
cmp
push
fwait
repz
dec
add
arpl
ja
repnz
add
mov
add
add
add
test
cwtl
cli
mov
xor
movsl
pop
or
push
push
outsb
das
je
pop
add
or
mov
test
pop
data16
mov
daa
adc
pop
jecxz
jg
cmp
out
gs
sahf
jmp
out
mov
lahf
cmp
mov
ljmp
loopne
cmp
xor
loope
enter
je
and
cmpsb
mov
jnp
mov
pop
push
rolb
dec
mov
add
push
jno
cmp
mov
xchg
shrl
shrb
push
ret
rol
inc
inc
jl
push
mov
pop
cltd
jmp
nop
mov
sub
xchg
movsl
cmpsb
subb
sub
ss
xor
lret
es
inc
movsl
lods
push
jo
push
pop
mov
push
xchg
mov
fcmovne
dec
ficoml
push
cwtl
daa
xor
add
lret
mov
cwtl
sbb
hlt
ljmp
add
push
inc
lcall
jge
mov
pop
cmp
fdivrl
fdivl
push
mov
mov
cmp
adc
test
lret
or
dec
fwait
sahf
cmp
ljmp
and
idivb
ret
push
mov
scas
stos
add
mov
sub
out
push
aas
jbe
outsb
sub
add
in
repz
rcl
into
dec
ds
stos
stos
xchg
dec
movsl
push
dec
or
scas
pop
inc
imul
pop
xchg
loop
xchg
inc
notl
data16
cmp
lods
mov
fs
add
jne
or
ss
cmp
fimull
sub
sti
lock
mov
fs
jmp
repz
cmp
inc
push
mov
es
inc
mov
movsl
mov
sub
fxch
jb
inc
xchg
inc
jns
mov
icebp
in
ffree
add
jmp
cltd
sbb
add
sti
pop
jge
div
cmp
pop
push
in
loopne
add
testb
add
mov
xor
mov
mov
testl
sub
push
inc
test
fiadds
adc
les
or
pop
jp
icebp
out
cwtl
out
mov
cwtl
out
in
mov
insl
movsb
and
mov
dec
stc
lcall
imul
push
sbb
xor
repnz
inc
sbb
inc
sub
xchg
addl
adc
insl
into
push
mov
add
sti
sub
jbe
or
arpl
cmc
dec
jo
scas
jle
push
push
popf
popf
mov
insb
pop
mov
imul
pop
es
cmp
lret
sbb
ret
ljmp
dec
jne
sub
into
jl
repnz
mov
jle
xlat
sub
das
stos
or
subb
enter
xorl
add
add
fsub
std
in
popf
jle
es
imul
testb
add
ficoml
xor
and
enter
fcompl
test
xchg
shrl
movsl
and
push
sub
movsl
les
sbb
lret
arpl
iret
cld
sub
imul
out
push
gs
js
sarb
aaa
mov
loop
cmp
stc
lcall
into
out
stos
and
lods
xchg
js
push
fstl
push
or
mov
leave
out
add
inc
inc
pusha
sub
cmp
dec
and
movzbl
movsl
ljmp
ret
sbb
inc
xchg
pop
in
bound
sub
test
cmc
fiadds
scas
mov
or
jns
xor
mov
daa
xor
sbb
iret
fdivs
loopne
pop
mov
or
or
nop
dec
push
pop
imul
add
xor
lahf
idivl
add
pop
jp
jnp
sti
xchg
jle
popf
loopne
pop
push
rorb
int3
inc
add
testb
add
and
enter
xchg
push
popa
enter
sub
pop
push
mov
jle
sbb
mov
arpl
sti
clc
sbb
push
into
pop
pop
dec
movsb
sbb
dec
fsubr
insb
xor
inc
int
call
and
repnz
dec
in
add
mov
dec
mov
mov
mov
sub
or
xor
or
int
push
aam
sub
andb
mov
ljmp
out
shlb
enter
jae
adc
insb
dec
jmp
vpsubb
dec
inc
int3
jmp
aam
addr16
add
aas
jge
ss
movsb
call
mov
test
mov
ret
and
jmp
mov
jnp
cmpsl
dec
lock
cmp
movsb
jge
imul
mov
push
sti
loopne
cmp
jb
jg
ret
add
add
add
inc
lds
les
jmp
xorb
xchg
outsl
ffreep
xchg
arpl
dec
sbb
movsl
add
das
sub
and
add
jb
mov
movsl
cmpl
cs
mov
or
out
out
push
lds
lea
shll
jo
pop
fists
dec
mov
jmp
lcall
adc
mov
push
mov
push
jmp
mov
fwait
pop
aas
mov
mov
fbstp
adc
pop
repnz
sti
ret
hlt
adc
into
sbb
adc
or
hlt
outsl
cmpsb
mov
clc
add
ljmp
mov
imul
fsubrs
loop
dec
repnz
aas
xor
cmpsl
aam
lret
mov
dec
fisubs
inc
lret
cli
adc
aad
xor
cmpsb
or
add
cmp
and
push
dec
icebp
xlat
dec
mov
inc
add
testb
add
mov
jnp
push
ds
imull
ja
lcall
insb
mov
sub
cs
test
scas
sub
inc
mov
inc
mov
je
sbb
out
or
ret
sti
and
xor
cwtl
mov
xchg
pop
push
je
xchg
jecxz
call
inc
addr16
and
mov
mov
adc
mov
and
mov
sub
sub
lret
subb
sbb
out
fwait
repnz
jecxz
fmull
dec
packssdw
sbb
clc
test
xor
jo
shll
push
out
push
insl
push
popa
add
mov
adc
push
pop
sub
mov
leave
cmpsb
mov
fildl
clc
int
mov
sbb
in
int
ficoms
add
dec
add
incb
ljmp
in
cmp
scas
inc
add
testb
add
pop
push
in
xchg
sub
push
jp
ja
push
movsl
aam
out
inc
add
or
repz
lea
push
and
sbb
clc
dec
popf
sti
mov
mov
add
xchg
cs
xor
jae
jmp
add
movq
aad
adc
cmpxchg
mov
cmc
cmp
push
xor
out
push
and
xor
sub
inc
push
mov
nop
and
rcr
inc
push
push
mov
push
adc
hlt
cmp
inc
jbe
pop
pop
xchg
inc
lock
lret
lret
and
jle
out
into
movsl
push
in
mov
mov
in
mov
lahf
out
test
or
pop
xchg
out
rcll
sbb
insb
sbb
xor
sub
stos
fstps
add
divb
rclb
mov
and
movsb
inc
add
testb
add
add
jle
xor
mov
shrl
push
pop
shlb
jns
sbb
sub
das
inc
ds
mov
cmp
add
lret
pop
loope
cmp
subl
jns
cmp
xor
fnstcw
ret
aas
data16
out
adc
fs
mov
adc
jb
and
pusha
sbb
enter
ja
into
adc
das
pop
lock
fdivrl
rclb
outsl
xchg
add
mov
imul
or
push
jl
pop
or
push
mov
gs
fs
sbb
dec
aam
test
cmp
rclb
lahf
sbb
dec
stc
pop
dec
outsb
movsb
xor
test
repz
cmp
jg
mov
andb
jns
push
lret
jl
dec
jbe
idivl
ss
repz
jne
out
inc
add
testb
add
stc
jae
cs
or
mov
inc
inc
into
ss
dec
cmc
addr16
jl
popf
test
decl
iret
mov
push
xchg
mov
std
or
and
mov
cmp
sbbl
add
jne
pop
adc
jge
cwtl
pop
sbb
mov
mov
sbb
int
aam
in
pop
daa
inc
int3
jbe
push
cmc
mov
ffreep
push
or
jecxz
lods
jl
lret
aas
add
int
adc
xchg
jno
sbb
pop
sbbb
sahf
mov
addr16
rcrl
int
orl
dec
or
add
jmp
insb
shrb
adc
xchg
ds
sbb
cwtl
mov
ja
fmull
inc
or
js
jle
cmpsb
gs
fldl
nop
addb
add
adc
add
outsb
sub
stos
fs
cmp
xor
nop
inc
add
testb
add
jecxz
xchg
enter
shll
sahf
loop
cwtl
repz
mov
scas
and
clc
dec
dec
punpckldq
fdivrl
imul
aas
xor
adc
bound
je
dec
or
imul
add
cmp
lods
cmp
mov
in
das
push
mov
and
or
add
fcmovne
jl
mov
mov
adc
fucomi
outsl
mov
adc
mov
sbb
xchg
mov
or
xlat
add
js
and
vcvtps2dq
popa
pop
mov
push
cli
jle
adc
fiadds
sbb
xor
jg
jo
outsb
lods
incl
push
sub
ficoms
aam
jmp
dec
adc
add
mov
jge
mov
pop
jge
push
mov
add
les
scas
fistpll
loop
sbb
jp
xchg
add
add
add
test
sbb
in
mov
xor
mov
dec
xchg
jmp
and
xchg
cld
pop
pop
lret
mov
in
xchg
pop
jp
pusha
call
pop
dec
pop
mov
jge
mov
stc
hlt
dec
cwtl
xchg
jle
lcall
shll
negb
dec
fistpl
inc
inc
dec
in
xor
lret
imul
dec
and
dec
imul
cmc
cmc
aam
outsb
xchg
cmp
cmp
sbb
dec
pushl
mov
aas
dec
xor
dec
push
inc
mov
lahf
loopne
ret
push
sub
ret
dec
jnp
gs
pop
sbb
lea
sbb
or
adc
inc
mov
pop
cli
int
fistl
cwtl
jecxz
or
cmp
push
add
mov
mov
or
mov
mov
xchg
mov
fsubl
add
stc
push
mov
mov
movl
add
add
cmp
les
fstpl
dec
add
testb
add
sub
daa
mov
popf
jbe
or
jno
sub
jbe
jle
std
iret
or
pop
rorb
sub
sub
shrb
repz
out
jb
rorl
loop
fwait
cli
into
inc
inc
xchg
in
push
ret
mov
shlb
test
cmpsl
jmp
int3
fucom
call
mov
mov
jl
mov
mov
sub
cmp
mov
mov
cmpsb
fildll
sbb
sub
push
and
add
stos
fiaddl
adc
enter
inc
push
outsb
adc
andl
popf
mov
and
and
scas
xchg
inc
je
xor
cmp
sub
aam
mov
jbe
out
sahf
pushf
or
cmp
jae
push
or
leave
jp
adc
mov
scas
int3
pop
sub
incl
add
adc
incl
arpl
cmp
outsl
cmp
add
testb
add
mov
sbb
mov
jl
in
xor
xchg
addb
fs
mov
imul
or
ljmp
aas
out
popa
fsubl
mov
in
sub
pop
mov
mov
adc
cmp
jecxz
cmp
mov
into
cwtl
call
jo
push
nop
clc
or
xorb
add
popf
inc
xor
xor
add
loopne
inc
cltd
pushf
enter
mov
dec
lret
cmp
dec
jne
loopne
stos
push
dec
xchg
das
rcrl
jns
inc
into
xchg
jp
rcl
leave
jb
fisttps
cmc
cmp
jecxz
pop
das
daa
pop
cmpl
hlt
dec
mov
fwait
or
imul
lahf
cltd
pop
stos
mov
repnz
jle
roll
mov
or
scas
scas
jnp
fadds
add
repz
cmp
lods
repz
in
pusha
out
xchg
fsubrs
push
add
add
sub
or
mov
movsb
inc
mov
pop
inc
or
inc
mov
cmc
push
int3
mov
add
fisttps
divb
sti
inc
fstpl
sub
call
outsb
movsb
dec
dec
cmp
insb
ret
adc
cmp
dec
mov
int3
in
xor
jns
sbb
mov
mov
push
push
sbb
cwtl
inc
call
ss
shll
inc
in
jecxz
imul
out
mov
into
cltd
inc
cmp
sbb
rolb
and
pop
sahf
int3
or
out
fistpll
mov
into
pop
ss
adc
mov
mov
mov
xor
orl
pop
ds
inc
cmp
mov
movsl
movsl
fsts
sub
movsb
push
jmp
mov
std
sbb
jne
std
dec
mov
out
sarl
add
aas
daa
push
cld
push
std
jmp
push
jg
push
loop
ss
testb
add
sub
cmp
stos
jns
xor
aam
addr16
fcomp
mov
xchg
outsl
je
std
out
dec
out
mov
jl
xchg
add
jle
lcall
insb
arpl
call
sahf
cmp
enter
das
pop
cwtl
add
jo
arpl
movsb
mov
xor
sarb
sub
mov
dec
pop
add
mov
cmp
clc
mov
xor
rcll
inc
push
push
fldcw
andb
incb
and
test
and
jecxz,pn
mov
stos
xorl
aas
inc
xor
js
daa
mov
popf
cld
insl
sarb
mov
cmp
xchg
push
mov
lcall
adc
pop
sti
mov
push
jp
dec
pop
mov
fisttpll
push
mov
mov
lods
les
add
dec
push
add
sbb
dec
push
cwtl
adc
cmp
test
testb
add
sbb
mov
lahf
sar
pop
dec
and
bound
lods
fdivs
and
add
or
inc
gs
jbe
pusha
lret
mov
sbb
push
push
lea
cs
movl
cmc
and
mov
xchg
sub
aas
leave
test
push
or
cmp
sub
adc
mov
sbb
mov
rcl
imul
shlb
cmpsl
sti
nop
mov
movsl
repnz
cwtl
pop
mov
or
mov
test
test
vaddsubps
in
call
dec
in
inc
xor
repnz
in
repnz
cmc
pop
inc
cltd
leave
xchg
cmpsb
mov
repnz
dec
daa
popa
mov
rorb
scas
pop
cmpsb
rolb
mov
jg
fstps
sub
xor
insb
fwait
dec
xor
add
idivl
mov
mov
add
add
add
jnp
enter
cli
mov
cmp
cmpsl
jg
sub
push
fsts
and
outsb
shll
and
dec
lss
sub
sub
xor
in
ljmp
and
movsl
movsb
pop
pop
or
xor
sbb
and
mov
jne
mov
mov
xor
sar
test
or
inc
aas
dec
sahf
xchg
loope
push
daa
data16
in
mov
pusha
push
in
call
bound
pop
stos
ljmp
lret
addr16
ret
jno
mov
xchg
adc
jo
cmpsb
cwtl
xchg
xlat
das
test
mov
jl
or
add
ljmp
push
jecxz
jmp
mov
cmp
ret
or
and
pop
sti
dec
lock
clc
pop
mov
add
mov
ja
jg
xchg
lcall
lcall
add
rcll
aas
lods
lods
jle
outsb
mov
mov
data16
loope
cmpsb
insl
stos
fldt
jne
push
js
mov
sub
add
jne
push
mov
repz
out
pop
xchg
jnp
fisttps
ljmp
mov
or
lret
scas
push
jno
cmpsl
movsb
fistps
loop
fildl
adc
adc
sub
mov
sti
data16
imul
xor
add
fcmovne
in
test
pop
icebp
fdivrs
pop
xchg
das
mov
aas
lcall
in
jns
fwait
je
and
roll
aas
sub
enter
lcall
mov
mov
jns
cwtl
mov
data16
cwtl
pop
adc
push
cmp
adc
cmc
inc
fucomp
push
das
imul
add
and
dec
lret
jmp
imul
xchg
aad
cmp
outsl
ss
add
testb
add
adc
xchg
ret
icebp
pop
or
xor
xor
sub
xchg
jne
adc
push
or
pop
testb
xchg
add
and
enter
push
inc
add
xchg
in
push
xchg
mov
push
jbe
push
cmp
les
pshufw
fdivl
mov
popf
mov
or
das
mov
popf
push
in
lea
dec
jne
adcb
iret
mov
push
loopne
mov
leave
add
movsb
mul
sbb
pushf
mul
pushf
roll
stos
mov
push
xor
insl
cs
pop
mov
lret
xchg
in
mov
addr16
or
je
jb
pop
add
pop
into
sub
adc
or
mov
dec
pop
std
gs
or
add
pusha
sub
add
lret
and
in
dec
fsubl
mov
movsl
sbbb
add
add
cwtl
loope
std
jge
cwtl
and
dec
sti
das
sub
add
testb
add
rcrl
pushf
sahf
mov
dec
or
cmp
dec
fdivp
inc
mov
sub
xor
cltd
xchg
mov
test
iret
jecxz
cld
mov
add
push
or
fwait
adc
push
mov
sub
fcoml
cmp
mov
adc
dec
mov
je
mov
out
mov
stc
movsl
xchg
cld
test
test
or
jp
cmpsl
push
and
mov
das
mov
rcr
dec
xchg
arpl
pop
lds
inc
mov
stc
xorl
pusha
mov
pop
les
xor
ret
sbb
adc
jmp
sbb
mov
es
xchg
sub
lret
push
dec
insl
in
mov
insl
inc
jno
mov
pop
add
es
fcmovnb
jne
and
add
stos
sbb
push
imul
and
ljmp
add
sub
jns
clc
mov
pushf
out
push
add
testb
add
push
jmp
push
pushf
cmpl
das
xchg
sbb
mov
mov
test
xor
push
inc
mov
in
inc
cltd
in
sub
icebp
test
test
inc
push
arpl
add
lock
test
aad
ds
cmpsb
je
int3
cmp
and
jno
pop
pop
shr
and
cltd
movsl
movsl
out
xchg
push
out
sbb
inc
dec
dec
mov
insl
sub
push
subb
daa
ret
mov
testl
in
cmp
lcall
xchg
mov
inc
xorl
jbe
sub
or
sbb
push
ja
push
outsb
jmp
inc
shrb
jnp
dec
lahf
ds
cmc
nop
shr
lea
mov
mov
popa
add
pop
mov
shrl
cli
jns
cli
movsl
sbb
xor
subb
add
js
ret
jg
mov
pop
and
testb
add
movsb
sub
iret
lea
mov
cs
pop
in
bsr
xor
jmp
pop
scas
jmp
cltd
sar
xor
sti
pop
dec
mov
inc
xchg
in
dec
or
mov
loopne
fbstp
mov
add
cld
mov
lds
ljmp
or
mov
dec
or
cmp
test
xor
out
mov
mov
inc
aad
ds
test
inc
and
sbb
in
cltd
jecxz
out
mov
rolb
jp
ljmp
lcall
or
test
leave
cmpsb
pop
cmc
mov
mov
rol
aad
test
out
aad
push
pop
int
call
mov
mov
stc
fnstsw
insl
add
adc
mov
cwtl
out
daa
fs
test
testb
add
cli
lock
stc
in
cs
jmp
lea
jecxz
lcall
mov
out
inc
dec
cwtd
pushf
mov
lock
adc
and
mov
cmpsb
adcb
inc
mov
hlt
mov
outsb
repnz
push
mov
pop
icebp
js
loopne
test
adc
icebp
call
lea
les
mov
scas
scas
push
popf
jnp
test
jmp
popa
xchg
fsubp
xchg
sahf
sarb
mov
dec
repnz
pop
pop
daa
or
lock
das
bound
jns
cwtl
out
mov
push
mov
sub
push
insl
adc
sbb
xchg
add
dec
test
push
adc
out
dec
imul
or
mov
ljmp
inc
push
xchg
out
mov
sub
lds
mov
icebp
cmp
add
hlt
gs
push
sub
add
add
add
testb
add
pop
daa
add
std
pop
test
icebp
push
jmp
loop
clc
adc
jns
pop
ret
ljmp
mov
lods
sbb
pop
ret
test
mov
mov
fildll
in
int3
cmp
pop
fldt
arpl
addr16
push
mov
fsubs
jg
stos
sti
ficompl
mov
rol
adc
lret
xor
mov
int3
ret
cmpsb
or
inc
xchg
cs
cs
iret
ret
scas
jae
xchg
adc
and
adcl
call
outsb
or
pushf
clc
bound
std
inc
mov
in
xchg
mov
gs
clc
xorb
dec
mov
or
sub
pop
jns
xchg
rolb
adc
inc
mov
je
lret
and
add
aas
gs
repnz
and
adc
arpl
testb
add
shl
lahf
xor
sbb
pop
das
test
sub
sub
pop
enter
or
xchg
sbb
add
imul
pop
adc
out
cmpb
or
ljmp
pop
mull
adc
adc
loope
xchg
pop
lcall
dec
lods
push
mov
je
xlat
add
ret
and
icebp
lods
mov
incl
mov
dec
mov
and
cmp
and
mov
xlat
sbb
int3
cmp
mov
in
mov
loopne
movsl
pop
loopne
xchg
cmc
jmp
mov
aad
mov
movsb
xchg
add
arpl
leave
or
cmc
cli
movsl
sub
add
rclb
xchg
xchg
sarb
push
xor
fsqrt
mov
pop
dec
jnp
mov
sbb
add
mov
out
fisttpll
mov
lock
add
testb
add
subb
ror
cld
idivl
xlat
shll
fdiv
js,pn
and
xor
stos
lea
cwtl
repz
lods
jns
int
xchg
sbb
push
movsb
sub
xchg
outsb
rolb
xlat
cli
in
shll
xlat
loopne
dec
ja,pt
mov
mov
cmpsl
cs
mov
lahf
add
xchg
push
dec
cmp
jl
mov
aam
das
lahf
mov
mov
mov
and
fstps
adc
mov
push
xchg
jo
cmp
test
clc
scas
fidivrl
mov
sub
movsb
push
or
dec
xor
arpl
xlat
in
or
lds
daa
add
loope
adc
mov
jge
dec
daa
and
push
xor
push
xor
or
andl
cmp
or
pop
add
fildll
mov
arpl
out
add
testb
add
dec
ja
xor
repz
xchg
push
mov
rorb
xchg
arpl
fsubs
fbstp
lods
dec
mov
lret
adc
dec
sub
into
test
sub
adc
std
out
stos
xchg
push
fidivl
mov
xchg
mov
xor
mov
add
mov
inc
lret
test
testb
xchg
aam
push
sbb
js
push
das
push
mov
movsb
test
dec
and
pop
mov
jno
inc
xor
rolb
or
mov
pop
or
sbb
sub
inc
lock
push
or
and
mov
lods
ficoml
and
mov
lea
nop
or
idivb
jle
mov
enter
jecxz
rcrb
mov
out
push
push
mov
sub
nop
shlb
push
sbb
jmpw
fnstcw
mov
mov
add
add
add
int
sbb
jmp
out
ja
rorb
mov
jb
sbb
scas
jo
cmp
pop
add
jne
cmp
mov
mov
sub
and
xor
es
inc
pop
push
xlat
inc
jmp
ss
stos
add
adc
jo
and
mov
mov
push
in
mov
cmpsb
repnz
xchg
addr16
loopne
xor
sahf
out
rcr
xchg
push
js
or
arpl
pop
and
lea
pushf
iret
sbbb
xchg
test
lock
sbb
and
mov
scas
pop
rolb
lret
aam
in
filds
pop
jb
aas
test
cmp
jbe
fcoms
das
cmp
sahf
pop
mov
xchg
cli
mov
stos
add
aaa
lcall
out
add
mov
out
sbb
icebp
ret
cmp
imul
out
mov
arpl
pop
add
testb
add
jnp
and
fidivl
push
adc
mov
pop
cmp
fistl
jae
flds
mov
pop
mov
sbb
aaa
xor
in
aad
mov
out
xchg
sub
jnp
mov
test
xchg
jno
js
fiaddl
xchg
lret
out
scas
ja
out
pop
leave
leave
or
das
mov
pop
sbb
ret
cmpsb
mov
out
fldcw
int
flds
jmp
cmpsl
mov
addr16
mov
dec
adc
mov
push
stos
clc
imul
pop
mov
ss
mov
jmp
mov
sub
lret
push
repnz
out
shll
ret
scas
xchg
and
ret
cmp
or
add
dec
push
and
cmpsl
push
jne
into
pop
xor
mov
add
add
add
dec
stc
mov
clc
add
outsl
cmc
mov
pop
add
testb
add
scas
dec
insl
daa
adc
jnp
fistpl
ret
xor
in
and
test
jbe
and
xlat
xor
aaa
xor
fbstp
lcall
int3
push
test
fwait
imul
mov
sbb
dec
icebp
lar
or
jge
aas
test
pop
dec
mov
cltd
inc
test
xchg
pop
jne
add
mov
mov
sub
sbb
inc
lret
xor
push
mov
cltd
test
and
sub
and
pop
push
adc
mov
inc
push
int
sti
stc
negb
test
or
sub
dec
je
mov
int3
pop
mov
and
loope
cmp
cmp
sbb
test
sbb
ret
sbb
jmp
or
ljmp
push
stc
adc
mov
add
add
jg
cld
jo
hlt
leave
lods
jae
mov
add
add
in
inc
in
vcvtsd2si
mov
div
jne
add
dec
pop
push
inc
and
or
cmp
lods
pop
push
js
and
xchg
test
clc
ffreep
dec
and
mov
add
sub
movsl
inc
xlat
adc
pop
cmpsl
jl
rcr
sahf
adc
pop
addb
mov
pop
rorb
stc
neg
add
adc
xchg
icebp
ds
incb
cmp
int
add
mov
outsl
jmp
ret
or
es
out
enter
negb
repnz
ss
push
cmp
xchg
push
aad
xor
cmp
std
jecxz
icebp
gs
in
pusha
adcl
imul
enter
mov
cmpsl
lea
pop
dec
inc
mov
lret
dec
mov
pop
lods
jl
inc
xor
and
popl
add
xchg
mov
mov
mov
add
testb
add
aam
data16
mov
cltd
dec
sub
out
scas
push
aas
jg
adc
fwait
push
add
movsb
jo
sub
stos
mov
and
or
dec
addr16
pop
xorb
aaa
enter
mov
sub
pop
into
add
mov
jp
sti
cs
xor
push
push
hlt
nop
imul
addb
mov
cmp
add
xor
or
dec
std
pop
push
pop
sub
scas
lods
push
adc
rorl
aaa
enter
cmp
adc
loopne
ret
or
pop
add
in
subl
fcomps
loop
rorb
add
bound
ret
notl
fdivs
sub
lods
inc
fstl
ret
mov
add
add
or
mov
rcrb
fildll
add
add
shll
push
insl
add
fistpl
ja
andl
sub
pop
or
cwtl
ja
aaa
fs
scas
mov
mov
ret
inc
in
jmp
xchg
cmp
fisubrl
push
mov
mov
cwtl
aas
jo
decb
push
popa
lds
push
call
rclb
orl
and
cmp
or
or
and
outsb
mov
movsb
js
jne
cmovae
ss
aam
inc
repnz
dec
aaa
mov
adc
insb
sbb
mov
adc
xchg
mov
xor
bound
mov
notb
inc
push
mov
stos
jp
mov
jne
ror
adc
mov
xchg
mov
fmull
mov
xor
add
fsubrl
mov
out
cmp
dec
lods
fs
testb
add
mov
imul
mov
xchg
call
lds
pop
push
jg
xchg
mov
mov
and
stos
xchg
out
sbb
mov
cmp
jmp
pop
dec
adc
jbe
xor
int
jb
fbld
into
mov
hlt
outsb
pop
push
jno
xchg
pop
cli
and
loop
daa
and
push
cmpsb
jae
inc
add
pop
stos
mov
mov
xchg
cmp
add
adcl
negb
jg
roll
mov
xchg
add
lret
pushw
cli
dec
cwtl
es
xchg
add
gs
jo
adc
sub
test
addr16
xchg
mov
test
jge
cmp
xchg
rolb
jg
ret
sarb
hlt
or
push
push
xor
fdiv
inc
decb
dec
xor
call
push
lret
sub
add
or
push
shll
out
xchg
inc
push
inc
xchg
pop
add
testb
add
imul
add
xlat
xchg
jbe
and
ret
mov
imul
pop
xchg
mov
push
sahf
incl
in
xor
pop
or
inc
cwtl
stc
gs
add
adc
outsl
adc
dec
push
mov
pop
inc
add
push
xchg
xor
leave
popf
mov
imul
ret
pop
notb
jbe
enter
jp
sub
aaa
movsl
jne
mov
mov
pop
movsb
mov
out
mov
jmp
push
xor
mov
fwait
dec
aad
mov
imul
pop
test
dec
and
push
and
arpl
in
movsb
mov
push
loop
sahf
sbb
std
xchg
test
dec
push
and
das
out
ss
fcomip
addb
gs
aas
mov
push
stos
dec
push
and
xchg
bound
mov
insb
adc
pop
or
stos
push
lcall
inc
and
jns
test
mov
add
add
add
out
mulb
inc
inc
jno
ljmp
push
rorl
dec
mov
inc
push
jp
sahf
cmc
shr
jne
adc
xor
jge
inc
push
dec
adc
dec
lahf
repz
test
dec
je
dec
jge
mov
mov
fnstsw
add
sbb
insl
xchg
enter
jg
inc
fildl
test
stc
repz
mov
add
pop
dec
xchg
jae
sub
mov
lods
jb
out
inc
fwait
cmp
mov
loopne
inc
cli
mov
push
icebp
mov
fwait
mov
mov
add
dec
loop
rcr
cmp
arpl
jb
xor
sar
mov
aas
rcll
and
push
and
jae
ja
jnp
rcll
lds
mov
push
negb
out
jnp
int
out
das
cwtl
dec
push
iret
sarl
fldcw
mov
add
jbe
idiv
imul
clc
jnp
andb
testb
add
inc
cltd
push
das
or
sar
mov
mov
jnp
jmp
fistpl
gs
in
dec
adc
inc
ds
lock
or
ret
pop
stos
loop
add
adc
int3
cmc
mov
add
into
movsl
in
mov
test
rcl
add
lea
stos
test
sub
test
jbe
dec
dec
push
push
mov
inc
jnp
and
sub
or
inc
or
lcall
add
int
sub
aas
push
orl
mov
dec
sbb
inc
cwtl
jns
es
sub
dec
imul
and
lahf
fwait
xchg
data16
cwtl
test
cmc
mov
ret
sub
pusha
mov
jmp
push
push
loope
push
lret
imul
lcallw
adc
or
xchg
mov
xchg
xor
add
fwait
cmp
dec
data16
xor
js
add
testb
add
cwtl
scas
popa
aaa
cmp
cmc
inc
xchg
mov
mov
outsl
dec
subb
pop
push
enter
es
dec
xchg
inc
adc
shll
push
movsb
jns
mov
add
push
pop
xchg
sets
jb
ficompl
push
push
inc
push
gs
sbb
sbb
xchg
xchg
loope
scas
mov
insl
jecxz
cmp
xchg
es
sahf
or
in
inc
xchg
cmpsl
push
jg
xchg
lret
cmpsb
mov
addb
sbb
sbb
cmp
mov
push
pushf
fsts
dec
push
pop
adc
sub
lret
sbb
xor
gs
outsl
cld
jmp
cmpsb
inc
cmp
insl
or
in
stos
pop
jbe
out
mov
or
call
cmp
jbe
pop
or
or
xchg
inc
cli
out
jo
xor
add
cmp
add
clc
mov
or
loop
add
arpl
add
add
add
cmpsb
imul
aad
sbb
lods
mov
add
int
mov
stos
in
out
aas
jno
push
clc
push
test
mov
loop
dec
das
adcb
into
clc
out
movsb
adc
or
les
and
add
test
and
or
adc
mov
ds
into
mov
cmp
pop
clc
cmp
push
rcrb
pop
fisubl
scas
popf
dec
jo
insb
adc
clc
scas
xor
cmp
push
and
sub
shlb
shrb
test
std
idivl
pop
mov
or
and
and
adc
pop
and
cmp
shll
push
push
rcl
dec
mov
xchg
pushf
dec
jno
mov
lret
loope
pop
pop
push
mov
test
add
add
shr
mov
fists
out
add
testb
add
cmp
pop
insl
fwait
sbb
stos
loope
mov
fsts
ss
ss
pop
outsl
pushw
mov
and
test
sar
sti
mov
xchg
xlat
mov
pop
jge
xor
jecxz
cmp
in
mov
popf
inc
mov
movsl
enter
or
xor
fwait
xor
mov
loopne
outsl
mov
sub
aaa
pop
and
add
lret
adc
dec
xor
add
jne
scas
sbb
inc
push
adcl
in
jno
iret
jl
scas
cmp
lret
stos
pop
lods
pop
sahf
pop
push
int3
lea
sub
adc
pop
es
popf
xor
inc
jge
fdivs
lea
xchg
lods
pop
add
sub
imul
scas
xlat
loope
es
or
add
test
or
fdivs
ret
mov
add
testb
add
xchg
lea
push
push
mov
or
pop
pop
adc
je
fisubs
aad
jne
dec
sub
scas
rcll
jle
js
outsl
sbb
fisttpll
mov
imul
pop
rcrb
mov
dec
jg
fiadds
xchg
repz
das
aas
inc
xchg
popa
add
fs
jle
in
or
and
dec
sbb
repz
dec
pop
lds
sbb
mov
dec
inc
jmp
sub
cmc
mov
cwtl
loope
xor
std
inc
dec
and
adc
and
and
cmp
or
data16
mov
sbb
jmp
mov
insl
shlb
nop
lods
test
inc
or
jb
push
mov
fsubrp
lcall
mov
or
xlat
push
inc
and
add
mov
and
das
lret
cmp
jne
push
add
testb
add
fcmovu
mov
insl
hlt
sti
repz
imul
mov
repz
xchg
cmp
es
pop
sub
aam
lock
adc
adc
jbe
sbb
jnp
lret
shrl
jg,pt
mov
int
jno
adc
jge
pushf
mov
or
mov
push
movsb
mov
es
daa
jle
add
jge
fsubl
cmpl
sub
imul
dec
js
ss
cmpsb
push
add
or
inc
and
or
push
xchg
dec
loop
les
pushf
add
mov
mov
clc
xchg
lahf
sub
inc
pop
fildl
rorb
ljmp
inc
dec
mov
sar
lds
pusha
repz
dec
ja
pushf
out
jl
adc
loop
jb
add
movsb
jae
jnp
mov
lods
push
adc
add
testb
add
mov
lds
aam
inc
and
inc
inc
mov
adc
mov
mov
inc
idivl
lret
inc
les
adc
push
lahf
adc
pop
dec
gs
sub
inc
jle,pn
jno
scas
cmpsl
lcall
lahf
inc
mov
mov
mov
scas
sbb
loope
repnz
orl
out
outsl
mov
psrlq
aaa
jecxz
sti
mov
stos
sbb
scas
andl
push
jae
lret
repz
jge
out
mov
pop
mov
sub
xor
jbe
xchg
pop
into
cmpb
jnp
or
jmp
rcll
pop
push
sbb
mov
or
mov
jbe
cmp
push
out
or
push
cmp
test
aaa
movsb
nop
mov
lret
add
fbstp
scas
adc
lahf
mov
and
cmp
add
testb
add
jne
mov
icebp
inc
xchg
inc
cmpb
rclb
jle
ljmp
push
lcall
inc
sbb
push
xor
push
in
addr16
mov
mov
fnstenv
jbe
nop
testb
xor
es
popf
jno
inc
out
arpl
aas
stc
jl
ret
mov
iret
fstps
sub
aas
pop
es
pop
pop
mov
lods
mov
jne
scas
sub
mov
or
jno
mov
sub
push
neg
xchg
jb
mov
cwtl
rcl
arpl
les
xor
stos
imul
or
jg
add
fstl
fbstp
dec
inc
sarl
push
or
dec
mov
lods
add
shr
push
mov
mov
xchg
test
xchg
aam
fistl
add
mov
mov
sub
sbb
testb
add
dec
cmp
and
sub
adc
lods
lea
out
test
or
xor
xor
inc
xchg
js
adc
fcmovbe
and
lods
fs
lods
loope
mov
cmp
rcrl
fsubrp
idivb
mov
rorb
in
add
mov
scas
inc
cltd
xchg
fistpl
adc
and
jecxz
sub
icebp
adc
cmp
or
sbb
or
mov
paddusw
rcrl
dec
dec
mov
cltd
sub
mov
jg
call
fists
push
dec
jl
and
xor
jl
rcr
je
movsb
in
cli
jl
push
out
mov
pop
stc
and
loope
jl
inc
mov
jmp
lods
insl
adc
call
inc
pop
mov
roll
mov
ret
out
into
push
cmp
sub
adc
xchg
push
add
add
add
scas
sti
sub
aaa
testl
and
adc
stc
xchg
stos
les
sahf
xlat
js
pop
popa
pop
stos
push
mov
sub
mov
or
enter
shll
xor
or
jbe
sbb
fcmovb
sub
sbb
insb
popf
dec
sarl
push
pop
jno
inc
lahf
jge
shll
pop
or
je
jno
sbb
xchg
adc
hlt
scas
sbb
adc
loop
jb
mov
test
bound
dec
add
rclb
xchg
jns
push
mov
or
xchg
jb
xor
sbb
or
test
cltd
insl
pop
cs
jb
ljmp
mov
or
cmp
in
imul
fldcw
sbb
fcoml
loopne
push
pop
push
mov
in
inc
dec
add
and
mov
fisttps
jo
jecxz
cmpsb
push
imul
testb
add
mov
test
lods
mov
lcall
xchg
push
sarb
in
and
aas
adc
outsb
outsl
imul
cmp
ds
daa
mov
ret
cmp
adc
incl
lods
sub
push
lods
pop
insb
stc
or
pop
rorl
insb
out
loopne
rclb
xor
jp
mov
jns
fs
cltd
out
cmp
pop
movsb
or
hlt
fs
push
push
dec
call
ja
cmp
inc
add
pop
ja
jp
cli
push
lods
dec
sub
stc
push
mov
pop
push
out
fstpl
cmpsb
cmp
sti
sub
mov
into
pop
in
pusha
decl
inc
ss
xchg
mov
loope
and
loop
hlt
aaa
sbb
cmp
mov
add
jbe
lea
push
mov
jp
adc
sub
dec
movsl
xchg
cmp
movb
lahf
pop
fcmovb
fcmovnb
lahf
pop
bnd
mov
adc
add
testb
add
pop
movb
pop
push
test
and
std
sti
cmp
movsl
lods
scas
mov
pusha
inc
in
mov
dec
or
sub
nop
pushf
repnz
add
mov
pop
mov
mov
sbb
outsl
mov
cwtl
dec
jne
mov
mov
test
scas
imul
test
fimull
xchg
cmp
or
sub
das
xor
sbb
xor
xor
jbe
or
push
xchg
jbe
xchg
aas
cltd
jns
fstpt
adc
jns
out
fwait
pop
imull
lds
inc
pop
pop
sub
pop
fsubrl
jne
push
aam
xlat
jns
aas
mov
inc
dec
ret
mov
adc
sub
mov
outsl
push
jo
fxch
repz
pop
rcr
clc
repnz
pop
sbb
push
cwtl
cli
adc
add
add
idiv
jg
data16
aad
insl
add
testb
add
fldenv
sbb
sbb
inc
fcmovne
push
aam
inc
xchg
stos
clc
clc
and
cwtl
add
mov
sub
pop
popa
lret
les
dec
cmp
jae
filds
clc
dec
or
pop
insl
push
sbb
clc
testl
mov
mov
mov
repnz
push
sbb
sbb
jae
lea
in
ds
push
adc
xchg
imulb
sarl
push
scas
lret
movsl
push
cmp
pop
xchg
sub
pop
jne
lret
in
pop
inc
mov
dec
andl
lea
mov
sarb
aad
sub
pusha
mov
js
repnz
loopne
test
xchg
push
aad
ret
dec
mov
out
ret
lret
sub
sub
mov
add
add
insb
jmp
lods
aas
xor
cld
mov
mov
adc
lods
rorl
and
cmpsl
ljmp
add
inc
pop
mov
movsb
inc
gs
pop
push
fidivrs
outsb
add
testb
add
fnsetpm(287
jl
xor
pop
lret
push
push
addr16
out
imul
xor
xchg
mov
mov
jno
or
push
cmp
adc
test
shrl
and
sbb
push
xor
mov
xor
dec
xor
in
mov
and
stos
scas
aam
mov
popa
adc
mov
cld
and
push
xor
std
es
fcompl
arpl
mov
mov
push
cwtl
jge
bound
jmp
push
ljmp
sbb
daa
mov
repz
data16
std
mov
in
lret
movsb
xchg
add
xchg
jmp
fsubrs
cmc
cltd
push
ret
lods
ret
ret
lods
jb
pushf
adc
out
dec
cli
stos
es
sbb
loope
aam
mov
jno
out
or
pop
cmpsb
push
sahf
cmp
pop
push
lea
add
repnz
movsb
jle
mov
cmp
add
add
add
adc
test
mov
dec
sub
mov
mov
cld
in
bnd
push
pop
je
repnz
fistl
mov
mov
in
bound
mov
and
sar
cli
fsin
js
bound
int
adc
pop
out
jnp
xor
push
mov
sahf
lahf
jne
faddl
std
dec
daa
stc
xchg
pop
mov
jg
push
and
xor
lods
lcall
adc
popf
push
sub
add
stc
push
rorl
mov
xor
repz
push
scas
enter
push
fwait
xchg
ss
add
fstps
fnsave
fldcw
rcrb
mov
mov
mov
mov
pop
sub
mov
push
pop
aaa
sub
pop
or
lcall
icebp
andl
adc
shll
jbe
add
stos
sub
stos
out
jmp
sub
xor
in
outsl
add
testb
add
repnz
push
loope
or
lock
fcmovu
pushf
and
jmp
clc
or
mov
jecxz
xorl
aam
sbb
fwait
mov
or
nop
fildll
mov
aaa
test
call
add
das
xchg
sbb
sti
sub
mov
fwait
icebp
stos
into
mov
xor
sub
xchg
aaa
sub
mov
into
push
jle
bound
out
mov
mov
mov
shrl
gs
sti
outsl
or
cmp
jno
fmuls
or
pop
or
add
jbe
movb
mov
mov
xchg
in
xchg
jno
cld
push
lret
icebp
and
out
cmc
dec
or
xor
aas
aad
outsl
mov
jmp
mov
sbb
or
inc
cld
fdecstp
xchg
ss
cmpsl
dec
add
shll
fnstenv
shlb
loop
add
testb
add
movsl
or
pop
pop
mov
in
leave
movsb
or
sub
outsl
adc
divb
mov
adc
fstl
mov
push
jmp
fstp
les
pop
shlb
fdivs
popf
loope
adc
jnp
loopne
ret
xchg
dec
mov
mov
in
xor
aad
dec
dec
sbb
pop
fdivp
sub
mov
jnp
push
mov
and
mov
adc
pop
inc
scas
or
fs
pushf
int
adc
jb
xchg
inc
stos
mov
lahf
popa
fadd
mov
gs
pop
lods
adcb
mov
into
ret
pop
mov
ds
popf
mov
adc
pop
cmp
ret
fisttpl
xchg
scas
int3
xor
outsl
pop
jns,pt
jmp
mov
mov
mov
int3
aaa
pop
fmuls
inc
cmp
jnp
add
cld
je
jbe
jmp
lea
xchg
adc
mov
add
add
add
adc
mov
mov
cmpsb
loope
out
push
mov
jno
outsb
cmp
loop
icebp
stos
ja
aas
cmp
sub
mov
mov
fsubrl
in
mov
pushf
repz
cmp
mov
loopew
xor
adc
shlb
mov
dec
fcmovnbe
scas
rorl
scas
das
jbe
aad
sbb
mov
mov
hlt
mov
pop
stos
sbb
orb
aam
inc
and
xchg
pop
scas
mov
ja
mov
in
xor
out
xchg
lret
lods
shll
aad
add
mov
xor
std
shlb
lods
loopne
and
fisubl
push
push
jns
ror
adc
sahf
mov
mov
scas
out
outsb
gs
sti
add
pop
nop
cwtl
sti
jbe
mov
add
cltd
jmp
fcmovnbe
cld
xor
fwait
lea
cmp
jb
add
add
add
hlt
inc
sub
lock
aaa
mov
rcrb
add
xor
jmp
sub
jb
pop
aam
mov
mov
jno
pop
insl
and
pop
adc
in
std
mov
enter
roll
jno
jl
sti
in
and
jae
insb
xor
xchg
xor
xor
cmp
loopne
js
or
push
std
mov
pop
pusha
test
cltd
imul
out
fs
jl
and
ljmp
loope
loopne
push
ss
mov
stos
mov
movsb
push
stos
jle
push
fwait
inc
sub
popf
out
les
mov
pushf
dec
sbb
pop
xchg
cmc
jo
sbb
mov
jecxz
inc
or
addr16
filds
xchg
cs
inc
push
fisttpll
adc
jp
dec
and
leave
push
pop
gs
mov
push
jle
sahf
add
mov
mov
push
jg
pop
jne
jle
inc
les
add
add
add
jns
inc
sub
lret
decl
add
mov
test
out
mov
repz
rcrl
sbb
in
xor
cmpsl
fmuls
mov
or
gs
add
pusha
or
pop
outsb
xchg
leave
sub
stc
lea
and
decl
sub
ret
addr16
pop
xchg
sub
movsb
andb
fsubrs
xchg
pop
push
cmp
lds
das
mov
subb
scas
fdivr
inc
adc
leave
mov
sub
jbe
adc
cwtl
xor
or
sbb
sub
cltd
mov
jnp
aad
and
mov
pop
cmp
pop
ret
repnz
jmp
jae
cld
sbb
les
loope
loop
test
vpmacssdqh
leave
out
inc
sbb
add
cld
inc
cli
sub
pop
loope
lea
xor
sbbb
add
mov
fucomip
addr16
jae
mov
add
add
dec
mov
mov
jns
mov
popf
sbb
leave
sbb
shlb
pop
in
xor
mov
xlat
aam
pop
mov
testl
dec
imul
repz
jo
fnstcw
shlb
inc
mov
xor
outsb
stos
push
pcmpeqw
test
test
pop
inc
pop
push
pushf
push
or
inc
add
clc
in
dec
cli
popf
orl
mov
dec
int3
in
bound
repnz
xlat
out
leave
in
mov
insl
mov
in
dec
mov
add
popa
mov
inc
lahf
dec
fisttpl
les
xchg
pop
fmull
in
pop
xor
jmp
dec
and
fwait
mov
xor
ret
xor
jmp
push
lods
lret
and
dec
into
mov
xchg
fwait
mov
mov
lret
adc
popa
andl
add
dec
out
iret
jmp
cmpsb
add
mov
testb
add
dec
pop
adc
mov
lcall
iret
outsb
dec
fldt
jmp
lock
out
push
sbb
jp
sbb
adc
test
arpl
dec
push
out
arpl
std
or
sub
iret
xor
dec
jle
aas
mov
loopne
add
xchg
pop
push
fadds
cwtl
mov
xlat
xchg
jmp
adc
sbb
jns
sub
pop
cmpl
pop
sahf
dec
imul
adc
insb
inc
and
pop
and
mov
xchg
popa
mov
sbb
pop
xchg
mov
mov
aad
cmp
jo
je
pop
dec
push
cs
dec
stos
gs
mov
ret
pop
es
ret
push
loope
pop
mov
dec
insl
cmpsb
push
pop
repnz
arpl
int
pop
fnstcw
clc
insb
sub
pusha
inc
add
cmpsb
push
jnp
std
cmpsb
pop
lods
jne
xchg
push
jle
mov
jbe
add
add
add
das
imul
add
rcl
cltd
hlt
xor
outsb
js
jns
mov
jl
dec
add
outsb
xor
fnsave
push
addr16
daa
sbb
jle
push
icebp
das
xchg
or
shl
jp
inc
xor
push
or
mov
cmp
mov
cmc
mov
and
test
or
shlb
in
xchg
repz
xchg
push
xchg
sub
inc
add
pusha
inc
inc
inc
mov
xchg
es
shrb
or
jbe
mov
addl
mov
adc
sub
cmp
lahf
or
jo
mov
jno
jp
dec
lods
out
rorb
push
and
ljmp
mov
cmp
mov
cmc
jp
add
neg
std
stc
idivl
sahf
pushf
ja
add
add
add
rorl
xchg
mov
cmp
hlt
ja
xor
pop
int
cwtl
test
inc
cmpsl
cmp
mov
clc
mov
xor
add
stos
rol
and
pop
outsl
cmp
add
push
jb
and
dec
pop
lods
and
stos
ss
cwtl
testl
fisubl
jl
mov
int
dec
test
pop
je
rolb
cmp
test
movsb
neg
or
jb
insl
jl
bound
std
test
js
dec
inc
movsl
mov
pop
dec
inc
dec
xchg
push
insl
dec
loope
ja
and
add
arpl
es
mov
popf
push
test
inc
mov
dec
mov
inc
pop
inc
ret
sub
stos
xchg
jmp
jae
data16
fwait
scas
cmp
aad
jno
fcomp
jbe
cmp
pusha
int
dec
dec
dec
add
push
subb
in
push
mov
add
fiadds
xchg
js
add
add
add
inc
idivl
pop
fbld
cmc
mov
mov
sub
and
jge
rep
test
ret
or
mov
mov
loop
addr16
dec
jne
cld
test
sub
sahf
jne
mov
add
adc
std
cmpsb
xchg
or
addr16
push
or
test
push
imul
push
out
adc
lods
std
in
nop
pop
mov
mov
sub
mov
pop
push
std
cmp
mov
lahf
adc
dec
negl
sbb
mov
clc
dec
add
add
mov
test
cmp
inc
add
mov
add
rcrl
mov
mov
call
cli
mov
test
sub
dec
lahf
arpl
and
lods
pop
inc
cmpsb
add
lcall
out
dec
jg
aad
inc
push
stos
mov
add
add
add
mov
out
xchg
xchg
scas
cmp
pop
cmp
mov
call
daa
nop
or
imulb
pop
xor
cli
mov
mov
and
cmpsb
out
xorl
popf
jae
push
or
inc
add
adc
test
push
adcl
cmp
or
imul
mov
mov
mov
push
ja
mov
pusha
outsb
pushf
outsl
xor
inc
in
stos
mov
sub
pop
aam
inc
loope
maxps
mov
test
sub
repz
das
lds
enter
data16
inc
xor
pop
test
addr16
test
inc
test
addr16
mov
adc
aam
icebp
push
pop
bound
mov
aaa
sbb
add
sub
data16
inc
jmp
mov
ja
cli
insb
mov
mov
pop
sub
xchg
add
daa
sub
ja
mov
paddq
add
testb
add
mov
stos
add
std
or
popf
out
add
je
fnstsw
aad
insb
outsb
jae
outsb
mov
xlat
mov
shrl
movsl
xchg
pop
insb
inc
cmpsb
push
add
dec
sbb
ja
jns
fnstcw
leave
or
stos
xchg
cmp
xor
add
sub
orl
mov
pop
outsl
cmp
sarb
mov
loopne
mov
test
call
mov
jp
jecxz
lock
adc
mov
mov
fidivs
inc
fs
push
push
sub
out
std
pop
imul
add
fidivrl
sbb
inc
xchg
push
jno
mov
inc
pop
nop
cli
ss
rolb
xchg
lahf
inc
loope
push
fs
inc
ja
outsb
mov
push
mov
in
dec
int3
inc
jno
inc
jne
or
push
cmp
por
clc
ret
ja
inc
das
xchg
lods
sub
popa
cld
enter
add
cmp
jnp
jge
xchg
xor
jnp
add
add
add
icebp
mov
shlb
out
push
test
ficoms
mov
popf
inc
inc
rorb
push
cld
pop
int3
add
scas
cmp
or
sbb
ljmp
sub
push
add
test
mov
jns
ret
sub
leave
in
pop
push
mov
pushf
aas
in
mov
xchg
ljmp
loop
ljmp
push
mov
into
and
jne
lret
push
int
mov
mov
ficompl
push
cmp
lcall
dec
cwtl
inc
rcl
or
mov
xchg
iret
ss
pop
iret
xchg
cmp
je
xor
mov
adc
ret
dec
mov
aad
pushf
mov
jl
in
sub
test
into
mov
sahf
cld
jg
add
xchg
push
mov
cli
xchg
jle
mov
mov
pusha
dec
push
testb
add
adc
dec
sbb
cwtl
jge
mov
hlt
push
sub
sbb
outsl
dec
push
mov
mov
jb
mov
sbb
movsb
imul
dec
popa
mulb
adc
dec
xor
fldl
or
leave
dec
pop
xor
dec
jmp
xchg
cmp
cwtl
lds
cmp
loopne
dec
sbb
jmp
push
mov
adc
mov
mov
or
fbstp
inc
pop
insb
dec
ja
dec
test
push
and
jmp
scas
push
inc
mov
mov
rclb
filds
bound
test
inc
je
pusha
out
std
mov
arpl
jns
pusha
test
push
fwait
sub
stos
push
aam
outsb
add
and
adc
sbb
jp
rolb
push
xchg
jnp
push
add
inc
aaa
dec
fwait
jnp
aad
gs
into
add
jmp
jno
jge
add
add
add
add
jno
fldl
adc
inc
mov
cs
mov
sahf
push
nop
sti
jecxz
pop
dec
cld
mov
lahf
push
add
int
inc
insb
sahf
scas
into
push
xorl
xorl
jnp
and
test
push
imul
int3
cltd
or
adc
shrb
adc
jg
or
mov
adc
and
fisubrs
incb
rcrb
into
ret
cmp
mov
and
es
mov
aad
add
repnz
pop
jbe
mov
aad
dec
jo
xchg
xlat
popf
add
mov
xor
adc
mov
xchg
push
jmp
dec
into
and
movb
mov
call
sbb
mov
dec
je
aam
inc
shl
xlat
add
mov
std
mov
enter
cmpsb
push
jle
add
add
add
icebp
test
inc
pop
or
sahf
jecxz
pop
sub
cltd
ss
push
adc
sbb
test
inc
rolb
js
cltd
dec
movl
ljmp
push
aaa
fwait
mov
repz
push
push
adc
test
dec
and
jno
jmp
inc
mov
push
mov
sar
fdivrs
pop
data16
pop
xor
scas
insl
in
sub
mov
xchg
push
pop
and
xchg
push
push
arpl
or
bound
fdivrl
and
leave
sbb
sub
mov
mov
dec
mov
sahf
arpl
repnz
cmp
xchg
cs
sub
rcll
test
inc
sbb
daa
adc
in
mov
xchg
addr16
inc
fwait
test
add
adcl
xchg
ffreep
dec
imul
pusha
mov
dec
jg
add
add
add
lret
cltd
divb
mov
xor
lea
arpl
js
sbb
push
leave
cli
sbb
inc
leave
in
outsl
icebp
mov
or
enter
cmp
xor
push
lock
pop
stos
test
xchg
adc
pop
shlb
and
add
bound
mov
xor
ret
jb
mov
jl
xor
mov
cmc
sbb
int3
rolb
mov
mov
ror
adc
xchg
lret
sub
jmp
mov
loopne
lea
gs
mov
mov
sub
sbb
inc
inc
xor
rcl
jnp
cmp
adc
sbb
lahf
push
je
fwait
sahf
xorl
and
mov
inc
pusha
mul
push
xor
dec
shrb
lods
stc
inc
jno
jle
scas
cmp
adc
add
inc
in
mov
mov
out
in
pop
test
cmc
fwait
inc
addb
testb
add
inc
cmp
adc
jbe
adc
or
push
nop
sbb
nop
lcall
test
ja
push
add
mov
cli
and
pop
lahf
into
pop
xchg
leave
xchg
push
adc
icebp
pop
stos
testb
lock
push
nop
inc
and
pop
aas
or
jmp
cmc
xchg
daa
xchg
mov
mov
out
inc
enter
es
inc
lock
jp
sub
pop
das
jne
add
and
loop
cmp
push
xor
sbb
imul
cltd
nop
stos
cmp
inc
or
dec
repz
pop
jae
fimull
sbb
in
mov
imul
sahf
test
pop
jnp
daa
mov
ds
mov
add
sub
xor
push
leave
mov
add
jns
divl
bound
xor
add
add
add
cmp
test
xor
mov
in
or
sub
in
out
call
mov
dec
int
ftst
dec
push
fisttpll
or
pop
xor
ja
fldenv
add
mov
or
or
lods
and
pop
lea
pop
cmp
xchg
inc
fs
dec
aaa
pop
or
add
test
popa
xchg
cmp
jae
mov
cmp
push
mov
test
and
out
shlb
mov
push
insl
pop
push
and
xor
fsubrs
add
mov
sti
sub
mov
jp
xchg
xchg
mov
sbb
sub
inc
cli
cs
daa
sahf
jg
mov
pop
das
loope
bound
mov
int
scas
repz
xchg
mov
mov
cmp
push
arpl
pop
jg
xlat
incl
test
js
repz
add
clc
fisubs
mov
push
mov
xchg
addb
testb
add
sub
in
add
sbb
or
push
pushf
ss
inc
mov
lret
mov
mov
mov
das
or
aad
xchg
add
jb
stos
xchg
stos
adc
vcvtps2dq
add
mov
add
add
jno
sub
inc
shll
lods
fldenv
inc
dec
xchg
bound
push
test
mov
aas
cmp
sub
cmp
out
es
or
mov
pop
pusha
daa
lock
xor
pop
pop
cmp
in
out
push
loope
push
jmp
mov
jnp
push
pop
addr16
cmp
sub
das
mov
test
jl
mov
inc
in
in
mov
repnz
fidivrl
mov
adc
movsb
mov
sti
pop
jns
jb
iret
pop
outsb
push
xchg
add
mov
outsl
jne
ljmp
cmp
and
add
testb
add
sar
pop
shll
xchg
dec
lods
xor
and
sahf
mov
loopne
cmpsl
in
xchg
add
xchg
add
jp
pushf
and
arpl
or
mov
das
mov
test
mov
aam
cmpsl
sarb
cli
imull
jge
xchg
jle
fcoms
dec
push
inc
add
jmp
cmp
pushf
les
sbb
and
xchg
lret
in
cmpsl
fimull
mov
jmp
repz
mov
out
push
and
stos
shlb
fcomi
mov
fisubrs
movsb
ret
inc
in
add
sbb
mov
sub
lods
in
jnp
adc
movsb
ljmp
cmp
jb
lods
mov
jnp
adc
mov
mull
fidivrl
fwait
test
cmovle
cmpsl
dec
insb
pushf
mov
add
testl
push
testb
add
loop
scas
lods
cmc
stc
add
xor
mov
rcll
add
jg
scas
cmp
push
pop
push
jae
adc
int3
xchg
or
xchg
xor
imul
insb
sub
das
out
xlat
sahf
mov
stc
sbb
and
pop
inc
mov
je
in
push
cmp
ja,pn
pop
jle
add
add
push
inc
add
lock
xchg
bound
mov
sub
dec
addr16
xor
sbbb
pop
inc
clc
gs
mov
mov
ret
xor
xchg
cmpsb
sub
pop
aam
lods
cltd
inc
cmc
xor
push
loop
cmp
push
mov
and
pop
je
loop
cmp
movsb
std
stc
inc
sti
nopl
add
lret
in
cmpsb
dec
out
daa
imul
dec
push
testl
or
add
jo
ja
std
stos
lods
and
inc
or
add
add
add
mov
fstpt
test
ret
pop
xor
bnd
add
fsubl
les
ds
loope
xchg
shlb
xor
jbe
std
and
hlt
pop
or
enter
pop
fdivp
pop
push
xor
xchg
shll
sbb
mov
pop
in
cmp
js
loope
movntps
and
mov
push
push
adc
mov
dec
insb
out
rcll
cmp
data16
inc
jbe
scas
loop
clc
bnd
insl
ldmxcsr
xchg
jge
sub
popf
in
push
cmp
pop
and
pop
adc
in
xchg
mov
movsl
push
gs
out
arpl
sub
jl
bound
and
outsl
xchg
push
jbe
mov
test
subb
stos
jo
push
aam
sti
sub
add
cmpsb
arpl
je
dec
mov
push
xchg
add
add
add
lock
outsb
and
icebp
mov
mov
movsb
push
repz
pop
loope
jle
daa
repz
xchg
lods
lods
or
and
xorb
mov
jns
or
cli
add
shrl
sti
leave
in
mov
push
mov
in
and
inc
test
icebp
lods
jnp
outsb
fs
ret
and
addr16
repz
es
and
mov
out
sbb
dec
adc
rorb
movsl
mov
dec
imul
cmp
daa
mov
mov
frstor
push
dec
lods
js
mov
out
in
sub
fs
aas
cmp
mov
push
xchg
repz
inc
call
cmp
xchg
enter
popf
mov
in
and
stc
jmp
xchg
jecxz
mov
xor
and
push
imul
idivb
fistpll
mov
notl
adc
add
cmp
cli
mov
sahf
adc
icebp
cld
xchg
add
add
add
popa
add
leave
cmpsb
pushf
and
cld
adc
push
orb
xchg
mov
lcall
mov
inc
popf
adc
mov
mov
out
loopne
inc
xor
push
sbb
xchg
push
imul
cld
movsb
dec
pop
dec
jns
das
shrl
cmpsb
adc
jmp
dec
xchg
push
xor
in
mov
stos
xchg
or
popa
or
adc
cmp
call
fs
mov
call
jno
sbb
xor
insl
sbb
push
js
mov
subl
lahf
xchg
stos
mov
push
inc
sub
lret
xchg
adc
adc
bound
mov
mov
addr16
lahf
adc
out
pop
dec
fs
inc
mov
test
pusha
xor
or
add
test
ljmp
dec
and
add
add
add
fistl
xor
aad
jge
enter
mov
fcompl
ret
inc
int3
inc
push
push
data16
and
mov
mov
adc
and
xchg
inc
inc
xor
pop
push
cwtl
pop
shll
dec
pop
pop
ja
push
ret
jno
add
dec
push
sub
cmpsl
mov
xchg
stos
cli
pop
mulb
stos
nop
mov
stos
mov
cmp
mov
cmp
jae
scas
push
in
daa
pusha
xor
faddl
out
cmp
xchg
lea
icebp
test
cmp
fisubrl
dec
sbb
out
pushl
push
push
mov
mov
inc
lahf
cmc
add
ljmp
ret
lds
shlb
fstl
mov
dec
mov
lret
sbb
dec
aad
or
clc
lahf
cli
push
std
ss
negl
mov
in
cmp
jg
sbbb
aaa
mov
pushf
fldenv
add
xchg
xchg
jns
incl
cmp
add
add
add
popf
xor
xor
ror
cli
sub
jle
and
in
cmp
mov
sbb
pop
shll
jae
sub
mov
clc
jp
jmp
iret
cmp
aas
dec
pop
jno
es
xor
ss
jl
jge
repnz
pop
and
mov
sub
jle
xor
rolb
mov
jo
xor
notb
cmp
outsl
lahf
shll
cmp
mov
popf
aad
or
lock
sbb
dec
mov
pop
inc
push
orb
push
scas
jbe
aas
data16
hlt
mov
imul
ss
pop
or
into
stc
jp
push
or
mov
cmp
add
push
popa
cmp
or
lea
mov
mov
ret
in
cmpsb
mov
add
outsl
repz
fldl
cltd
jno
test
mov
cli
pop
add
scas
lcall
xchg
dec
lea
fimuls
add
push
mov
or
sub
xor
dec
enter
fbld
leave
pop
adc
sbb
aas
loopne
rorb
sub
inc
ret
ja
jns
vmwrite
xor
sub
pop
out
mov
push
jne
mov
adc
cld
adc
xchg
stc
xchg
and
mov
xor
loope
and
mov
add
movsb
arpl
cmpsl
addr16
fsubl
icebp
and
xchg
imul
neg
jmp
push
push
lods
in
enter
outsb
shll
xchg
fcomps
daa
adc
pop
shr
das
lds
ret
hlt
push
andb
scas
lret
test
fdivs
lds
out
sbb
mov
xchg
cmp
sub
ds
or
ret
mov
jl
cs
idiv
fst
inc
sahf
pop
mov
mov
add
add
add
mov
cltd
mov
fsubl
adc
pop
call
std
push
mulb
xor
pop
scas
jmp
scas
inc
or
dec
xchg
and
lds
add
test
imul
pop
xor
and
iret
lahf
xchg
iret
lods
in
ja
jge
es
mov
fwait
iret
mov
aad
push
cmp
fwait
lret
outsl
lods
or
add
mov
adcl
sbb
push
fwait
movsl
xor
dec
in
in
stos
ret
fisubrl
cmpsb
addb
xor
ja
cmpsb
loopne
js
jne
in
sbb
adc
lods
ljmp
fsubp
hlt
pop
nop
lea
sbb
into
jnp
add
add
sub
push
add
cmpsl
pop
pop
xlat
pop
mov
adc
push
adc
add
call
and
movsl
fcom
lret
add
add
add
inc
stc
pop
pop
imul
sbbb
cwtl
mov
mov
mov
pop
test
sbb
pusha
mov
add
loopne
inc
dec
shll
dec
test
sbb
cwtl
push
cwtl
shrb
fisubrs
cmp
out
mov
pushf
les
imul
jp
pushf
lahf
cmc
push
loope
inc
inc
out
out
inc
push
xor
sbbb
out
in
popl
call
inc
ret
mulb
pop
popa
xor
shlb
dec
lock
xor
mov
cmp
and
fs
or
mov
rclb
adc
fwait
out
xchg
push
sub
xchg
sbb
sbb
mov
sbb
xor
fdivs
addl
add
sti
iret
and
repnz
rorb
sub
jb
mov
jnp
andl
das
adc
insl
jle
mov
imul
cs
dec
testl
std
testl
hlt
aaa
test
xor
test
call
in
mov
xchg
mov
or
inc
xchg
in
outsb
jne
sbb
mov
cmp
jge
xlat
mov
jmp
ret
std
stc
cmp
aad
xchg
and
or
jle
adc
jmp
jb
and
cmp
dec
add
mov
xor
ja
pop
inc
mov
mov
cli
fldt
pusha
mov
cmp
subl
shlb
cmc
adc
ficoml
add
fsubrs
jecxz
adc
jl
ret
lcall
js
testb
loopne
cmpsl
add
loopne
xchg
inc
lahf
sti
hlt
out
cmp
loop
dec
add
sbb
lea
add
add
add
test
arpl
and
je
lret
test
adc
xor
adc
js
fmull
cmp
stos
movsl
pusha
inc
insb
pop
lds
sub
fmull
jo
and
fldt
xor
test
mov
mov
inc
jecxz
outsl
push
push
hlt
out
push
pop
std
xchg
cs
dec
xor
sub
mov
in
iret
test
dec
gs
pop
mov
pusha
lods
xchg
aam
pop
scas
repz
test
and
hlt
add
sub
loope
or
fstl
mov
stc
cmpsb
xchg
inc
imul
push
rcrl
lret
rcrl
push
push
sub
mov
sbb
cmp
adc
jno
adc
or
sbb
push
arpl
aam
sub
fsubl
int
mov
outsb
hlt
mov
loop
pop
cmp
or
mov
enter
lods
push
scas
cmp
mov
mov
into
test
mov
add
add
add
sub
or
aas
cmpsl
ds
push
inc
mov
sub
push
jb
xor
add
sub
dec
sub
shrb
xchg
mov
dec
int3
dec
les
xor
andb
decl
jo
nop
repnz
push
and
adc
mov
xchg
testl
andb
jne
test
out
pop
into
pop
dec
mov
lret
mov
inc
mov
push
imul
push
lcall
adcl
les
dec
push
dec
xlat
and
push
xlat
adc
es
cs
cmp
scas
sbb
xchg
hlt
cmp
jmp
movsl
fcomps
loop
pop
mov
jmp
pop
sub
mov
imul
xchg
lcall
jae
xlat
xchg
imul
xchg
push
push
jae
add
pop
test
ljmp
jp
cmp
lds
sub
add
add
fsts
out
fucom
clc
insb
cmp
ljmp
repz
or
cmp
sub
iret
call
mov
sub
push
imul
stc
loopne
mov
lds
inc
pop
cmpl
js
jo
les
cmp
int
add
sbb
pop
dec
xchg
mov
mov
and
sub
jmp
aaa
aad
jg
xchg
scas
es
mov
sub
add
sub
loopne
fstl
in
push
mov
push
stos
pushf
popf
xchg
dec
jg
lods
loopne
cmp
xor
int
imul
js
and
inc
pop
data16
jno
pop
sbb
fsubr
jecxz
xchg
dec
js
inc
xchg
rorb
std
xchg
mov
std
jo
inc
sbb
dec
pavgw
mov
jl
or
loop
lock
inc
jo
inc
imul
test
cmp
and
and
fldl
and
add
add
arpl
jnp
sbb
xchg
sub
mov
aas
dec
cwtl
nop
add
testb
add
es
dec
pop
mov
xchg
push
mov
lods
bound
icebp
push
mov
add
add
xchg
and
mov
repz
inc
xorb
cmpsb
inc
fstl
aas
xchg
mov
shrb
rorb
inc
xor
or
add
fildl
cwtl
jg
sahf
nop
xchg
out
aad
push
jo
push
out
sbb
dec
fcmovu
loop
in
mov
dec
lcall
subb
sbb
mov
std
enter
mov
push
out
aas
and
push
cmp
add
test
jge
cmp
push
lods
bnd
insl
js
mov
out
clc
adc
movsb
ljmp
add
jb
inc
dec
push
lahf
sub
cltd
or
shrl
dec
orl
mov
or
xchg
insl
push
arpl
add
push
aas
or
mov
fwait
ret
mov
add
and
push
lock
cltd
faddl
fidivrl
mov
dec
dec
and
xchg
imul
sarl
mov
shll
cld
pop
jnp
in
std
mov
mov
push
dec
mov
arpl
popf
adc
test
add
mov
pop
inc
sub
test
jo
lock
ljmp
in
add
ficoml
lds
and
push
fstpt
gs
mov
out
cld
sar
cmove
rcrl
out
iret
pusha
sbb
jns
sbb
int
aad
les
repz
out
outsl
ret
mov
test
rorl
sub
jp
jbe
or
cli
cmp
sahf
jp
mov
xchg
sar
out
jnp
jg
jmp
hlt
imul
sti
cld
or
inc
dec
add
insb
fidivl
cli
sub
lcall
add
testb
add
sub
out
sbb
mov
lret
ret
cli
test
mov
loopne
sbb
pop
mov
cmp
pop
add
push
js
sub
btc
idivl
mov
aas
nop
arpl
loop
xlat
pop
js
dec
ret
sbbb
push
iret
hlt
jns
enter
jge
push
ss
and
ljmp
aas
rcrb
xor
mov
in
pushf
jl
stos
out
mov
imul
sub
mov
xchg
xchg
daa
lret
es
push
popa
push
lds
int
xchg
inc
jmp
mov
popf
dec
push
jne
sub
or
loopne
mov
xchg
mov
jo
lret
jge,pt
shlb
lret
push
std
add
popf
push
jae
or
cmp
mov
in
inc
and
add
add
add
jecxz
push
xor
mov
sbb
gs
or
popf
orl
or
jg
push
jle
ja
in
xor
fmull
clc
shl
cltd
cwtl
jle
mov
or
mov
xchg
pop
xchg
xor
add
sbb
outsl
in
adc
mov
mov
fidivrs
call
psubusw
mov
test
int3
or
mov
mov
jecxz
push
int3
inc
jmp
xchg
loop
sub
je
shrl
cwtl
jno
inc
adc
mov
mov
test
add
or
orb
push
mov
inc
fdivp
in
mov
jnp
inc
xchg
inc
pop
fists
xchg
cmp
sbb
arpl
jg
icebp
fs
or
mov
add
int
fstp
iret
push
lock
jmp
or
mov
xchg
add
testb
add
iret
cs
negl
adc
imul
and
pushf
enter
leave
imul
scas
int3
aas
mov
iret
jo
out
stc
lret
xor
shl
movsb
mov
adcb
lea
ja
dec
mov
inc
sahf
popf
mov
sarb
insl
or
sar
and
cmp
fistpll
lds
andl
stos
cli
add
push
jbe
and
pop
adc
add
pop
pop
xor
or
fidivrl
mov
insb
jns
inc
and
cbtw
dec
std
or
mov
xchg
aas
frstor
in
outsl
leave
mov
pop
loope
test
mov
add
out
sub
test
mov
pop
icebp
cli
fbld
mov
sbb
aaa
call
mov
test
call
add
ficoms
lahf
and
scas
std
sub
pop
mov
xchg
add
testb
add
inc
rcl
pushf
sbb
or
cltd
add
xchg
pop
hlt
pop
cmp
in
dec
aaa
and
xchg
rcrl
and
jp
ret
popa
mov
xchg
stc
in
ficoml
mov
xor
pop
clc
fdivs
xor
iret
pop
out
fildl
repnz
popf
popf
ds
mov
lds
xchg
int3
adc
in
bound
adc
push
pushf
dec
rorl
sbbl
pop
jae
in
cs
xor
ja
pusha
sti
pop
out
pop
pop
mov
nop
lock
lcall
rorb
mov
xchg
push
jnp
addr16
out
inc
and
push
lret
repz
pop
iret
pop
loopne
flds
popa
iret
aam
inc
scas
in
jg
mov
mov
jbe
pop
fxtract
sbb
outsb
mov
sbb
mov
hlt
iret
pop
nop
lret
inc
dec
and
into
mov
add
mov
push
out
lods
pop
pop
xchg
add
testb
add
pop
xchg
sub
pop
shl
dec
sbb
mov
cmp
fdivrs
bound
mov
test
idiv
addr16
pop
xor
cmpsl
sub
jmp
sub
fs
xor
add
les
sahf
xchg
push
ljmp
out
repnz
jno
int3
outsb
adc
es
push
fldl
mov
lcall
pushf
mov
scas
xchg
fwait
imul
xor
test
dec
in
jge
adc
xchg
or
sahf
xor
sbb
inc
mov
fcomps
cs
repz
pop
pop
sbb
dec
dec
xor
pop
add
enter
pop
test
pop
jg
cmp
loope
out
sahf
out
cmpsb
bound
in
in
sub
sbb
ljmp
or
jge
ds
add
push
sbb
add
les
mov
fiaddl
add
add
add
sub
and
adc
stc
out
xchg
xor
jp
movsb
addb
ja
mov
mov
dec
sub
out
mov
lret
loope
jno
add
and
mov
xchg
pop
pop
rcr
xchg
mov
pop
popf
popf
je
dec
mov
mov
inc
or
into
rcll
into
dec
mov
xor
in
out
xchg
ja
jns
inc
jecxz
stos
sub
ret
mov
movsl
lock
repnz
shll
cmp
pop
xor
sti
dec
inc
lock
cmp
ss
add
jnp
xor
mov
rcrb
or
sbb
pop
jne
push
ss
lods
sub
mov
jmp
push
cmove
addb
imul
xor
dec
mov
sub
scas
pop
stc
add
xchg
add
ljmp
loop
dec
pop
js
popa
sub
cwtl
add
testb
add
sbb
lret
lea
pushf
nop
fsubrl
mov
jbe
gs
cwtl
insb
mov
xchg
cmp
gs
and
scas
leave
mov
jl
aad
out
cltd
push
imul
pop
test
inc
int
add
push
sbb
dec
mov
notb
addr16
jmp
dec
adc
jmp
movsb
lock
movsb
inc
jbe
sbb
xor
add
cs
mov
fimuls
cltd
mov
call
rcr
scas
repnz
rcrl
subb
inc
add
mov
dec
add
push
dec
daa
adc
jne
push
cli
test
int
mov
divl
mov
fiaddl
push
add
jl
pop
imull
cld
mov
adc
and
movsl
sahf
pop
loop
mov
mull
arpl
and
mov
add
iret
jl
mov
mov
jns
xchg
adc
add
aaa
shlb
cmc
div
rcl
inc
pop
fbstp
add
testb
add
push
mov
jbe
inc
movzbl
adc
add
repnz
nop
or
sub
add
pop
jno
add
mov
gs
shrb
dec
push
lds
loop
negb
xor
add
loope
in
jmp
lret
push
imul
sahf
ficoml
cmp
and
leave
mov
into
inc
pop
hlt
sub
lret
mov
jne
jecxz
stc
inc
es
aad
mov
incb
xor
pop
fucomi
adc
idivl
and
xchg
fnsave
out
loop
xchg
out
ret
fsub
mov
and
rep
dec
pop
mov
jne
xchg
in
xor
xchg
xor
leave
popf
rcr
lret
fcmovne
mov
jmp
xor
daa
sub
into
sub
inc
add
pop
push
nop
push
sahf
rcr
pop
test
outsl
xor
add
testb
add
adc
ret
xor
sub
jae
jl
arpl
jmp
cld
or
in
pop
adc
int
stos
pop
mov
leave
or
aas
mov
mov
fsubrl
inc
pop
and
lods
lahf
out
popa
mov
daa
xchg
lods
add
lret
xor
push
or
popa
jg
mov
inc
inc
cmc
lods
add
xchg
fs
add
mov
cmp
xor
jae
leave
xlat
cmpsl
cmpsb
sub
push
cmp
sub
adc
dec
insb
testb
test
stos
pop
rcrb
andl
mov
jnp
fistpll
jge
test
ljmp
cmp
push
popa
lret
pop
in
lahf
test
cltd
sub
pop
jg
sti
xchg
jae
out
enter
inc
stos
cmp
jne
add
arpl
cmpsb
jcxz
jne
push
inc
cmpsb
mov
sub
fwait
add
testb
add
inc
mov
out
xor
add
mov
adc
call
pop
rcr
mov
dec
arpl
pop
hlt
dec
addr16
pop
je
testl
mov
mov
cld
mov
push
xor
lods
or
stc
in
jae
sub
fwait
cmp
push
clc
daa
repnz
ftst
ficompl
ja
andb
lock
pop
in
mov
mov
fidivrs
clc
mov
inc
data16
cmp
mov
lret
out
xor
dec
push
add
addr16
mov
and
push
pop
xlat
mov
jo
cmp
movsl
dec
lret
inc
clc
lea
inc
test
clc
and
mov
rcr
test
mov
lock
pushf
js
push
jle
inc
icebp
rol
fsubrl
imul
add
clc
jnp
jg
in
cli
cwtl
inc
mov
ja
fdivrs
pushf
add
testb
add
xor
and
fstp
mov
mov
gs
push
add
xor
or
shrb
out
sub
jbe
dec
or
cmpsl
bound
xchg
and
cmp
push
pop
xchg
insl
out
pop
inc
adc
mov
xor
std
or
xor
xor
fcompl
mov
push
lea
inc
xchg
mov
mov
call
adc
outsb
cmp
add
nop
push
push
push
gs
mov
pusha
enter
popf
addr16
ljmp
into
and
hlt
fs
mov
lcall
mov
adc
inc
loope
fiadds
and
das
sbb
inc
movsl
xor
in
int
mov
dec
mov
mov
jmp
mov
jle
fcomp
xor
push
add
and
push
cmp
add
lods
faddl
fbstp
cld
inc
push
cltd
das
insb
add
add
add
add
adc
gs
cltd
call
add
push
and
cmp
or
mov
push
mov
lahf
insl
mov
dec
cmp
and
insb
clc
imulb
sbb
sahf
jge
sbb
add
movsl
das
cmc
mov
repnz
dec
mov
mov
mov
mov
int3
adc
xchg
mov
lret
adc
cmp
push
mov
js
imul
push
jmp
iret
subb
and
mov
ss
push
das
dec
es
dec
cmp
xor
roll
test
sub
fcoms
aad
pop
inc
mov
pop
rcrb
call
imul
push
mov
or
push
mov
mov
sbb
outsl
inc
mov
andb
orl
xchg
pop
or
add
jl
sar
std
jle
loop
xchg
pop
addb
add
add
add
push
xor
push
aas
push
loope
mov
add
dec
xchg
movntq
push
mov
push
jo
inc
es
in
push
insb
hlt
jp
insl
sub
pop
scas
unpcklps
xchg
lret
mov
fwait
sub
inc
inc
lea
mov
lahf
xchg
xor
sbb
xchg
push
aad
movsb
inc
xchg
push
adc
add
inc
mov
and
in
sbb
mov
add
popf
das
mov
fs
bound
xor
mov
lock
out
pop
cmp
lea
push
and
scas
sbb
fcoml
lahf
xor
mov
lea
sbb
pop
sub
popf
js
xchg
xchg
mov
outsb
jo
fnsave
or
fstp
pop
dec
push
push
in
sbb
into
nop
jbe
andl
repz
icebp
arpl
sub
mov
add
cmp
cmp
pop
adc
add
testb
add
push
mov
fsubl
insb
ljmp
lock
popf
ret
xor
rcll
stc
mov
jne
xchg
sahf
push
stc
in
push
cld
mov
movsb
mov
addr16
or
shlb
sti
inc
bswap
daa
sub
cli
scas
dec
sbb
das
mov
mov
pushf
dec
test
mov
sqrtps
cld
dec
lea
jmp
fidivl
sub
cmp
pushf
in
push
xor
pop
and
push
dec
and
dec
inc
dec
pop
pop
jge
push
mov
daa
or
lret
arpl
bound
cmp
icebp
outsl
cwtl
sbb
fimuls
outsl
or
out
mov
jl
dec
lock
xchg
cli
aam
hlt
cs
loop
mov
iret
imul
mov
mov
pop
pop
out
mov
mov
fwait
and
popa
mov
aad
aam
aad
clc
lahf
add
testb
add
stos
cmpsb
adc
sub
int
adc
int3
aaa
data16
or
test
into
inc
rorb
push
push
inc
insl
pop
jmp
sub
daa
xchg
js
xchg
pop
in
in
add
jo
inc
push
pop
xor
sub
push
stc
adc
insb
add
ds
outsl
dec
nop
and
inc
pop
mov
and
jne
pop
pop
push
pushf
adc
xchg
loopne
out
leave
adc
idivb
mov
pop
aad
or
jge
sar
push
dec
das
lahf
bound
ss
xor
movsl
add
mov
and
subb
jl
rcr
or
pop
xchg
in
mov
stos
stos
adc
sbb
bound
push
jmp
and
mov
push
mov
xor
or
or
pop
push
repz
cmpsl
sub
rcrl
add
push
and
xlat
aas
jle
ds
out
mov
add
add
xorl
jl
adc
sub
inc
inc
mov
jnp
mov
jbe,pt
in
scas
ret
das
push
xor
repnz
xor
rcrl
ja
pop
sub
inc
ret
xchg
sbb
sarl
adc
in
jp
das
cld
lret
xor
rcll
push
pop
mov
jmp
out
pop
vperm2f128
mov
pop
int3
cmp
loop
cli
mov
rcrl
cmc
mov
mov
adc
ja
xor
sahf
cmpsb
fnstcw
pop
mov
push
notb
jo
cmpsl
std
adc
repz
jnp
imul
pop
outsl
pop
test
pop
push
or
mov
nop
sub
in
xchg
ss
imul
push
fistl
repnz
in
aas
dec
inc
sbb
jmp
mov
xor
sbb
add
mov
mov
jmp
ljmp
add
testb
add
int
shrl
fildl
repz
ja
or
flds
jp
push
sub
sbb
enter
push
add
pop
js
inc
loope
push
xchg
insl
lret
hlt
aad
les
mov
pop
lock
lret
and
outsl
lretw
repnz
push
mov
outsl
lea
enter
pop
sbb
adc
jne
in
xchg
or
gs
dec
shrl
xor
mov
je
test
inc
jp
sahf
sub
cmp
dec
adc
add
inc
mov
repz
pop
and
shlb
fldt
inc
ficompl
dec
ds
mov
clc
cmp
push
fildll
dec
rcrb
sub
mov
out
stc
ret
or
int3
sub
sub
add
adc
sbbl
mov
sarb
mov
add
mov
jnp
sbb
in
int3
sar
orl
cld
loop
bound
pop
sub
sbbb
adc
add
fistl
push
idiv
das
mov
ljmp
les
dec
push
cwtl
std
aaa
mulb
push
dec
dec
mov
mov
int3
add
xor
jbe
mov
enter
or
out
cmp
jno
imul
neg
cmp
rcrl
mov
es
xchg
repz
lods
mov
loopne
mov
lcall
xchg
in
ss
repz
lahf
dec
push
jmp
popa
push
mov
sahf
hlt
mov
aas
and
cmp
int
cmc
daa
mov
adc
dec
sub
stc
jle
imul
adc
pop
inc
call
pop
data16
xchg
lods
xchg
iret
sbb
ljmp
mov
imul
and
or
fdivp
dec
inc
shlb
add
mov
stc
out
in
lds
in
popf
adc
rcrb
mov
jecxz
pop
jp
hlt
leave
cmp
movsb
movsb
inc
jl
jmp
and
jo
inc
jno
cmp
dec
loopne
inc
xchg
inc
mov
loopne
xchg
push
bound
mov
mov
enter
out
in
push
call
sub
jb
mov
fs
jmp
shr
clc
fsubs
sahf
mov
leave
cmp
cmp
mov
and
aaa
andb
fmuls
mov
or
dec
data16
andb
stos
ss
jo
rcl
cmp
mov
stc
pop
sub
in
pop
in
imul
data16
add
push
mov
aas
mov
push
push
cld
xor
inc
cmc
addr16
jle
pop
subl
repz
sub
dec
dec
dec
mov
out
add
add
mov
jge
jg
decl
xchg
les
add
add
add
push
add
ror
add
arpl
stc
mov
xchg
sti
mov
enter
sarb
pop
test
lret
sbb
ja
sbb
rorl
out
fsubl
pop
push
outsb
push
dec
inc
push
stc
inc
cmc
xor
adc
ljmp
push
ljmp
xlat
pop
or
test
xor
mov
fstpt
dec
mull
mov
mov
in
jbe
je
fimuls
pusha
mov
fnstcw
sbb
cld
push
lea
mov
mov
or
cmp
popf
pop
lea
out
push
mov
pushf
push
cwtl
into
lret
push
lret
fwait
dec
pop
ja
inc
dec
mov
and
mov
mov
fmuls
lds
insl
or
lods
push
inc
add
jmp
push
or
jmp
add
ja
out
das
mov
aam
sbb
add
testb
add
repz
nop
cld
cmp
cmp
in
jnp
push
pop
ss
jmp
shll
mov
jno
jb
add
mov
xchg
dec
int
xchg
xor
inc
dec
arpl
popf
and
xchg
cmp
and
cld
movsl
js
pop
xchg
mov
and
fstpl
pusha
scas
insl
out
loope
repz
loop
and
inc
mov
xor
inc
pop
sbb
into
cwtl
aaa
cli
mov
fprem
les
xlat
lret
test
arpl
stos
scas
mov
mov
push
in
fimuls
push
rorl
es
add
adc
and
std
ret
stc
in
pop
pop
jbe
mov
or
cmp
jo
leave
push
ds
testb
ret
pusha
mull
fdivrp
push
add
jo
jno
in
push
push
test
add
xchg
pop
mov
mov
adc
jecxz
add
pusha
test
mov
pop
cltd
divb
add
add
mov
sbb
pop
cwtl
out
push
ret
popl
xchg
jle
cmp
jns
or
lods
pop
sarl
bound
mov
xchg
test
outsb
popf
mov
adc
xchg
and
mov
dec
xor
sub
sti
cld
fisubrs
cltd
stc
fs
and
mov
and
pop
push
cmp
lods
sbb
bound
insl
sub
push
sti
out
mov
jle
out
mov
cmp
test
push
movsl
mov
adc
push
push
inc
pop
shrl
cltd
out
xchg
pop
mov
push
or
bswap
lret
and
mov
inc
pop
les
lcall
cmp
cmp
mov
dec
or
andl
sub
push
add
or
lcall
jmp
jge
cmpsl
add
testb
add
scas
repnz
sub
jecxz
pop
xchg
loopne
std
and
adc
jno
shrl
test
inc
rolb
mov
cwtl
in
xchg
sub
sbb
or
in
ds
popa
mov
aas
mov
adc
add
insb
mov
inc
pusha
sub
sarl
fucomp
add
mov
xchg
aad
mov
sub
in
xchg
and
lea
clc
mov
sbb
in
mov
int3
jg
mov
xchg
cmp
inc
jp
in
cmpxchg
cmc
push
mov
add
xchg
mov
scas
gs
mov
notl
jecxz
jmp
lahf
cmpsl
inc
scas
jo
add
adc
fistpl
lret
sbb
mov
leave
fstpt
add
movsb
mov
mov
mov
cmp
dec
sti
aas
int3
sahf
test
add
add
add
xchg
fwait
out
and
ret
xorb
cld
inc
icebp
dec
and
andb
cmp
test
in
filds
je
jmp
inc
xchg
xchg
mov
xlat
mov
imul
or
or
clc
repz
adc
adc
sbb
or
jb
out
addr16
fdivl
test
fadds
jecxz
test
je
sub
jo
movsb
hlt
sbb
outsb
clc
and
fildll
aam
fcmovnb
cmp
xchg
in
xlat
mov
mov
outsb
lea
dec
andl
sbb
aad
and
push
push
mov
pop
aaa
and
pushl
arpl
test
inc
jb
call
sbb
xor
adc
std
cs
inc
inc
stos
sbb
mov
sbb
pop
cmp
add
or
sbb
mov
xchg
adc
add
testb
add
mov
aam
in
and
movaps
test
popf
ja
rclb
jno
daa
ret
sbb
pop
push
jl
in
dec
outsb
inc
mov
pop
inc
sbb
sahf
enter
xchg
scas
stos
or
cmp
repnz
sarl
ds
push
subl
xor
clc
fdiv
xchg
das
out
jbe
xor
rcrb
jl
inc
jo,pt
gs
pmaxsw
sahf
sbb
cli
add
jecxz
aaa
pop
mov
xlat
xor
push
pop
xchg
cmp
push
in
in
lcall
fs
add
xchg
xor
scas
sub
ret
in
pusha
aad
rcr
dec
sub
inc
add
stc
les
rorl
icebp
inc
dec
faddl
popl
leave
aaa
push
test
add
test
loopne
cmpsl
pop
loop
jne
cmc
add
push
inc
fdivl
stos
push
insl
mov
add
pusha
push
inc
jmp
dec
mov
insb
in
inc
xor
jno
pop
pop
pop
fbstp
adc
iret
out
stc
dec
es
sub
rolb
hlt
dec
dec
xchg
or
inc
jns
movsb
or
mov
sbb
gs
rolb
stc
sub
dec
push
mov
sub
push
icebp
rcr
dec
loopne
mov
dec
scas
jle
out
ss
loop
sbb
jg
mov
mov
mov
out
fstpl
sbb
in
stos
add
add
decb
pop
ficoms
inc
sub
xor
pop
cmpsb
das
sub
push
and
mov
jl
xor
inc
dec
fstps
repnz
or
dec
rorb
xor
sbb
into
insl
stc
or
cmp
addr16
push
repnz
xchg
pop
mov
psllq
int
imul
add
sbb
mov
pusha
clc
push
loopne
subb
add
js
mov
loopne
clc
pop
aaa
cmp
iret
mov
fstpt
push
ss
adc
xchg
shll
das
jge
ret
out
dec
xorl
roll
sbb
ficoms
add
loop
repnz
jno
mov
mov
or
imul
dec
lcall
add
sbb
xlat
in
push
test
movsl
push
xor
sub
adc
sbb
cli
sti
dec
push
aad
xchg
movsl
pop
pop
cwtl
jecxz
inc
sub
jecxz
xor
lahf
xlat
xchg
aaa
add
xchg
gs
popa
and
xor
add
shl
xchg
pop
mov
les
push
jmp
outsb
out
mov
xchg
adc
pop
jbe
mov
mov
iret
jle
push
lds
sbb
enter
outsl
popl
nop
ss
add
stos
hlt
jmp
ljmp
mov
add
testb
add
jg
int
sub
ret
popf
sbb
sub
inc
sub
sub
adc
push
jg
xchg
push
shlb
cmp
xchg
ja
dec
mov
and
jl
xor
and
insl
pop
stos
inc
lds
cmpsl
ljmp
jb
fst
cs
xchg
sahf
xor
frstor
pusha
mov
jbe
repnz
xchg
push
jge
or
inc
mov
mov
daa
imul
lods
cs
cmp
test
pop
mov
mov
jl
fimull
cmpsb
or
roll
iret
mov
sbb
imull
pushf
jae
imul
mov
xchg
dec
mov
ret
ss
andb
rcrl
xchg
gs
and
fcmove
push
arpl
pop
pop
clc
mov
sub
or
add
add
out
xlat
out
jg
dec
cmp
sti
push
push
add
add
add
sbb
inc
sbb
dec
ljmp
add
add
mov
sbbb
fistpll
xchg
icebp
orb
xor
or
fidivl
xchg
adc
sub
lea
sub
lock
mov
ss
or
out
xchg
test
mov
adc
orl
push
xchg
cltd
add
jnp
mov
mov
pushw
outsb
fadds
mov
sub
outsb
ret
or
jle
push
xor
mul
repz
popf
repz
fbstp
and
sarb
xchg
mov
push
push
lea
cwtl
xorl
std
or
insl
repz
inc
xlat
lcall
es
repnz
ja
out
lods
and
aam
sub
add
sar
stos
cld
lods
adc
outsl
in
je
mov
je
add
mov
inc
fwait
lds
xor
inc
dec
bound
add
int3
adc
lret
sbb
jns
push
addb
mov
pop
xchg
movl
or
xor
sub
loope
ss
stc
fadds
and
fcoms
dec
hlt
loop
gs
xor
jle
dec
rcrl
testl
out
jae
sahf
ret
loopne
xchg
fs
mov
jge
jmp
cmp
and
sub
adc
and
dec
mov
pop
cmp
movsb
mov
repz
inc
dec
popa
movsb
push
stc
sub
jp
rorb
bound
add
bound
xor
repz
outsl
or
popf
mov
pop
add
lock
rcrb
jecxz
add
push
lea
mov
pushw
divb
push
pop
lods
inc
shll
mov
sub
dec
out
mov
add
lcall
std
clc
jns
ljmp
add
testb
add
fwait
cmc
mov
lds
lahf
or
lods
xchg
jo
or
jbe
mov
cmpl
daa
push
je
imul
add
cmc
loopne
cmc
loop
and
sbb
xchg
addr16
and
add
mov
les
push
aad
inc
imul
je
cli
push
leave
movsb
adc
inc
mov
sub
pop
mov
inc
jno
jg
and
mov
ds
mov
lock
adc
lock
push
mov
mov
in
cmp
sub
in
test
mov
shrb
rcrb
push
jno
jmp
call
or
movsl
pop
push
sub
cmpb
jb
or
adc
lcall
enter
shl
stc
lret
jl
clc
adc
dec
fwait
add
lret
jnp
sti
jmp
xchg
sub
xor
testb
add
jl
xlat
and
arpl
push
xorl
mov
icebp
outsb
enter
sbb
popa
push
pop
ret
out
jg
mov
bsf
sbb
cmp
test
fistpll
popa
out
in
push
xchg
and
xchg
pushf
testl
sbbl
repz
fsubrl
insl
push
movb
fadds
frstor
xchg
lcall
and
inc
sahf
cwtl
xor
sbb
pop
icebp
sbbl
pop
cmpb
pop
aas
mov
mov
pop
popa
mov
xor
js
add
mov
jnp
mov
mov
and
push
lcall
add
call
ret
push
and
fstl
and
xor
mov
dec
xchg
sub
push
test
inc
shlb
dec
cmp
add
jecxz
lock
cmp
stc
inc
mov
add
add
add
xor
jno
sarl
in
sarb
insl
int3
pop
push
movsl
and
xchg
or
push
mov
ds
lods
push
mov
or
jne
rorl
mov
scas
push
daa
add
mov
push
mov
divb
aaa
je
push
insb
rol
push
dec
push
loope
dec
cmp
clc
mov
cmp
aaa
aam
scas
adc
jmp
rolb
fcmovnb
jns
sbb
pop
mov
fwait
push
aam
aas
addr16
push
outsl
iret
imul
jle
push
repnz
sub
xchg
mov
jmp
iret
inc
lret
shll
mov
out
cli
and
mov
arpl
scas
into
fisubrl
adc
xor
cmpsl
test
push
movntps
push
movsl
fs
add
adc
outsb
push
pop
add
mov
cld
mov
test
cmp
add
inc
jge
inc
xor
xchg
pusha
test
and
popf
enter
iret
jnp
pop
or
and
rclb
hlt
pop
aaa
test
sub
pushf
inc
in
adc
pop
mov
int3
xor
cmp
in
add
inc
xor
push
mov
xchg
xchg
popa
cmp
adc
or
pop
adc
inc
jnp
pop
sbbw
or
pushf
adc
mov
sub
sti
adc
jl
dec
mov
pop
add
push
inc
sub
fmul
jp
xorl
dec
cmp
int3
jecxz
outsl
mov
and
dec
and
cmc
or
in
add
pop
adc
lods
fwait
outsb
cmp
stos
out
adc
sub
xchg
jo
lods
pop
imul
sub
add
out
cmc
mov
mov
mov
add
add
add
or
loop
jge
pop
mov
inc
cld
call
jmp
in
fdivrl
pop
xchg
sbb
rclb
and
jle
or
sti
mov
dec
cmp
add
pop
movswl
pop
rolb
lahf
adc
andb
sbb
popa
mov
rcr
sub
sti
insl
xor
dec
cmp
jb
lret
mov
sbb
not
scas
int3
push
insb
popa
sub
sub
cmp
aaa
cli
adc
lds
sbb
mov
sti
jecxz
repz
call
inc
and
repnz
push
xchg
and
or
adc
out
fmuls
dec
mov
fs
or
jne
sub
add
or
mov
testb
aad
les
dec
ljmp
mov
push
gs
push
sar
mov
hlt
data16
mov
push
mov
fucomip
std
dec
std
pop
mov
shl
push
es
add
add
add
test
mov
popa
add
add
and
loop
cmpl
movsl
cs
loopne
lock
mov
add
ja
jle
imul
dec
negb
fcoml
popa
mov
lods
cmp
loopne
hlt
movsb
xor
out
pop
ljmp
pop
sub
cmp
or
push
insb
fisubrs
pop
add
fidivl
push
pop
adc
pusha
cmp
std
lods
std
out
mov
push
ljmp
adc
in
es
xor
fwait
mov
in
sub
push
mov
ja
xlat
xor
cmp
inc
xor
aas
loopne
inc
push
inc
into
test
test
sub
aad
mov
pop
push
not
pop
mov
scas
sub
xor
or
fsubrs
call
cmpsb
mov
loopne
nop
add
mov
add
add
fidivs
loop
ljmp
dec
loop
or
mov
add
add
add
pop
lret
and
loopne
sar
xchg
je
pop
aas
fwait
mov
jge
pusha
loop
jmp
or
mov
and
push
les
adc
incl
fidivrl
cwtl
cmpsb
adc
fdivrs
or
adc
xchg
push
and
jmp
bound
aaa
sbb
popf
popf
xlat
movsl
hlt
cli
inc
sub
or
addr16
movsb
dec
mov
mov
lds
repz
shll
or
xor
xor
lahf
js
leave
or
mov
cmp
or
popa
jns
ljmp
scas
std
mov
inc
jg
hlt
sub
fdivrs
xor
dec
mov
aaa
xchg
sbb
fwait
sbb
add
mov
cmp
cltd
xchg
orb
mov
add
xchg
jg
jmp
std
jge
in
xchg
lock
mov
add
add
add
push
test
mov
mov
mov
clc
incl
sub
hlt
loop
and
pop
xchg
ss
or
xor
pop
inc
addb
inc
adc
cltd
sub
or
cmp
cmp
test
lcall
pop
xchg
cld
aas
ret
mov
pavgw
clc
push
sbb
rcrl
hlt
enter
std
popa
call
cmp
into
add
inc
icebp
in
les
test
jae
dec
addl
je
adc
mov
fldl
fadd
mov
xchg
std
rcrl
push
pop
or
or
xlat
js
push
pop
mov
mov
les
outsb
xor
adc
inc
sbb
jb
fwait
je
adc
push
fsubrl
and
jae
add
loopne
gs
add
push
divb
std
cmp
and
or
add
cmp
mov
cltd
inc
test
sbb
cmp
fs
ds
lods
xchg
add
xor
sbb
sub
jle
int3
xor
push
rol
int3
sbb
sarl
popf
xchg
xchg
outsb
call
sbb
sub
test
lea
cwtl
int3
stos
sti
pop
mov
pop
ret
scas
and
in
pop
scas
inc
in
push
or
test
jne
roll
out
add
push
aaa
out
jp
sub
inc
xor
bound
ja
or
cli
daa
sbb
ja
adc
xchg
cmp
in
dec
data16
aas
test
jb
aaa
lods
icebp
sub
fists
xchg
push
es
cltd
ret
clc
jns
or
pop
frstor
dec
or
pop
xor
adc
and
mov
sub
push
outsb
add
ret
pop
dec
les
popf
out
leave
adc
stos
adc
fcmovb
pop
scas
sahf
filds
add
xor
cmp
ficoml
movsb
adc
mov
add
add
add
jle
sub
inc
pop
iret
push
cltd
iret
repz
mov
mov
sbb
pop
int
pusha
mov
aad
cwtl
xchg
mov
insb
hlt
add
inc
pop
pop
repz
mov
test
and
push
xchg
and
inc
or
test
sbb
sub
xor
lds
mov
arpl
test
out
mov
scas
sub
push
adc
scas
mov
and
fst
xor
push
data16
xchg
sahf
or
xor
pop
stc
adc
xlat
adc
in
outsl
outsb
js
ss
lods
cli
fnstcw
sbb
mov
inc
jo
loop
scas
cli
jno
aad
inc
jecxz
ljmp
test
mov
jg
pushf
mov
fucom
movsl
dec
pushf
add
pop
xchg
adc
push
and
add
jp
les
mov
push
push
adc
lea
add
add
add
mov
xor
or
cwtl
hlt
loop
sub
cmpsb
push
imulb
aam
or
in
push
mov
fxch
cmp
idiv
nop
sbb
sbb
push
lret
push
pop
loope
xor
fcoml
fisttps
jp
lret
mov
xchg
jmp
mov
ja
out
inc
pushf
jnp
push
pusha
out
aaa
cmp
rcl
iret
pop
frstor
jle
push
insl
cmp
andl
or
inc
pop
ror
sub
cmc
dec
stos
cmp
push
push
insb
mov
mov
aam
and
xor
add
jl
out
push
in
loop
push
filds
cmp
arpl
mov
arpl
scas
ljmp
scas
inc
out
in
sbb
out
and
mov
mov
jle
mov
cmp
jne
inc
xchg
cmp
lret
imul
enter
mov
add
dec
or
pop
stc
out
push
insb
xchg
cld
sub
arpl
add
add
add
mov
sti
mov
decb
ret
aas
lcall
xchg
pop
pop
addl
mov
out
decb
sti
cltd
in
push
fcoml
das
cli
xchg
cwtl
ffreep
mov
lods
call
mov
movl
push
pop
xchg
xchg
sub
and
push
mov
out
push
dec
lea
outsb
mov
push
pop
mov
push
sub
sbb
jnp
in
xchg
fcompl
mov
sub
pop
pop
fdivr
fwait
ret
mov
or
adc
popa
sub
mov
cmp
and
pop
test
in
pop
jbe
inc
xor
dec
pop
ljmp
adc
aad
push
ds
jmp
sbb
xchg
mov
scas
cmp
repz
push
shl
in
aam
outsl
fldl
ja
mov
pop
popa
js
cli
xor
icebp
xchg
mov
jmp
add
lds
cli
lcall
ret
jge
loopne
add
testb
add
or
mov
adc
addr16
push
push
push
pusha
insl
shll
ret
xchg
imul
adc
dec
xchg
daa
xor
popa
xor
or
mov
mov
dec
test
loop
addr16
or
or
aas
and
call
xor
loop
sahf
dec
lds
lods
sub
lahf
dec
iret
or
mov
mov
mov
shl
adc
add
mov
clc
mov
xor
iret
push
fimull
cmc
lods
mov
popa
imul
daa
push
test
xorl
sbb
mov
rcrl
inc
cmp
stos
mov
or
inc
dec
mov
adc
xor
popf
les
mov
mov
rcrb
mov
xchg
push
cmp
aam
push
sub
add
jne
mov
xlat
insb
scas
hlt
dec
mov
mov
add
lds
sbb
push
xchg
aas
popa
mov
aaa
data16
and
push
inc
lcall
mov
loopne
loope
mov
popf
daa
jecxz
push
popf
icebp
pusha
xchg
loopne
popa
enter
jp
sbb
mov
mov
sbbb
mov
add
popf
jne
popf
lret
repnz
lods
outsl
outsl
or
xchg
jno
leave
adc
scas
mov
daa
push
cmp
leave
push
xchg
add
int3
insb
push
clc
xlat
test
outsl
mov
cmc
std
rcrb
inc
repnz
ds
cwtl
fcmovnbe
cltd
add
shrb
inc
imul
cmpsb
sahf
in
mov
test
or
cmp
hlt
and
sub
jnp
les
rcl
fildll
ss
jl
call
loopne
sub
add
pop
sbbl
fstpl
in
repnz
mov
add
call
and
shrb
sbb
popf
movb
push
mov
jnp
adc
sbb
in
adc
test
outsb
mov
fcomip
cmp
pop
mov
cmc
sbb
nop
xchg
and
lcall
int3
dec
aam
adc
and
lods
sub
aaa
sahf
inc
out
xchg
lahf
and
cmp
inc
hlt
mov
adc
orl
mov
fildl
add
sti
jg
cmp
dec
lods
or
movsl
jmp
push
sub
fdivrp
fists
add
xchg
sbb
aad
movsb
pop
add
adc
in
jle,pt
mov
stc
inc
jbe
or
push
xchg
lock
add
cmp
cmp
icebp
sbb
shrl
scas
loop
adc
in
jb
or
push
jecxz
add
in
mov
jecxz
out
sub
inc
add
mov
add
aas
sti
mov
mov
pushf
fldcw
jp
pop
std
std
adcb
mov
pop
jns
xchg
ds
mov
icebp
and
mov
cmp
sbb
addr16
jbe
push
bound
jae
mov
mov
movsl
ret
fiadds
dec
adc
mov
test
push
ror
mov
xchg
or
nop
cmc
and
sbb
adc
rcll
int3
dec
lret
cmovl
add
or
les
fnsetpm(287
jae
mov
mov
negb
cmp
jmp
xchg
inc
sbb
sbb
fisubl
clc
in
push
shlb
rclb
sbb
add
pusha
test
aaa
pushf
add
cmp
out
inc
sbb
adc
xorl
jg
test
jmp
sub
pop
or
add
add
std
test
jg
jbe
movsb
ds
xor
add
add
add
add
and
cmpb
repz
dec
popa
pop
cwtl
mov
cmc
mov
jns
inc
push
inc
stos
sub
aad
push
or
xorb
lret
clc
cmpsb
repnz
dec
cmc
outsl
dec
inc
cmp
lcall
cmp
pushf
cwtl
lea
pop
movsl
or
pop
imul
dec
pop
aam
jae
shlb
jns
jbe
enter
out
mov
in
into
push
sub
sarb
mov
jns
ljmp
add
push
loop,pt
dec
rorl
add
test
mov
pop
inc
adc
and
and
popl
xor
repz
inc
je
inc
outsl
daa
dec
adc
or
dec
xor
push
mov
xlat
adc
lahf
xchg
icebp
testl
lods
push
pop
inc
dec
cmp
lock
in
lcall
xor
and
mov
add
enter
pop
sbb
lods
std
ds
outsb
xchg
inc
cld
pop
outsb
popf
idivl
iret
jge
push
loope
scas
mov
bnd
and
mov
jmp
mov
cwtl
orb
cmp
mov
xchg
jnp
cld
adc
cmp
in
xor
stc
cli
xor
out
insb
outsb
lock
cmp
jo
add
push
in
addr16
and
cmp
in
adc
cmp
adc
call
push
jo
les
mov
fldl
test
xor
or
mov
cmpb
jg
jbe
inc
push
push
mov
and
add
xor
stos
cltd
dec
mov
fstl
jge
rorl
jae
in
loope
mov
outsb
push
mov
or
fidivrs
fsubrl
cmp
lea
add
sub
jg,pt
stos
dec
push
jo
rcll
rolb
testb
add
ds
xor
les
bound
js
xor
ficompl
aam
addr16
sbb
xor
popf
cmp
jecxz
lock
cld
int3
insl
fwait
in
arpl
into
mov
mov
fxch
jle
fiaddl
in
int
dec
cld
jge
cmp
and
ss
pop
popf
fwait
popa
mov
cmc
lret
ret
scas
sbb
mov
mov
xor
sbb
jle
or
push
xor
jecxz
ret
addr16
vpavgb
jb
lock
fs
jb
dec
pusha
lcall
popf
adc
or
jle
les
fcmovne
and
jmp
sbbl
jecxz
movb
rorl
sub
jl
test
sub
lret
lock
inc
movsb
push
fistl
in
int
fiaddl
add
out
idiv
outsl
mov
inc
sbb
lcall
add
sub
mov
flds
pop
xchg
xchg
cmp
je
in
aas
mov
push
xchg
pop
mov
inc
pop
push
dec
sbb
andb
xchg
push
sbb
lret
adc
or
xlat
mov
pop
push
pop
mov
fwait
mov
outsw
out
fs
dec
add
mov
sub
adc
test
jge
ds
jbe
mov
xchg
in
out
negb
popf
bound
ja
xor
ds
inc
sbb
pop
add
les
jmp
xor
pop
push
out
out
push
cmp
lea
jg
jns
rclb
jno
jnp
xor
js
clc
cmp
jg
dec
repz
jae
arpl
jl
imul
mov
lock
and
je
inc
cmpsl
cli
lahf
cmp
xorb
outsb
pop
mov
add
inc
fbld
mov
cltd
mov
fcoml
nop
ret
testb
add
fidivs
outsb
mov
push
ja
mov
cmp
scas
fs
cmpsl
jge
das
sbb
and
fidivrs
repnz
fstpl
data16
push
popa
mov
lods
popf
outsl
mov
dec
aam
out
bound
mov
mov
imul
fisubrl
stos
int3
cmp
iret
adc
mov
dec
or
enter
push
add
in
sti
lods
nop
push
sub
rolb
jb
bound
add
mov
xor
pop
xchg
push
mov
fists
add
add
xor
sbb
xchg
jnp
in
xchg
lods
mov
lds
out
fistpll
sti
jne
loop
int
out
mov
push
les
mov
mov
je
xor
int
imul
mov
add
push
push
call
loope
dec
hlt
xchg
add
testb
add
in
or
fwait
dec
adc
cmp
sbb
cmp
bound
mov
outsl
push
cli
cltd
popa
scas
push
int3
clc
cltd
ds
mov
cwtl
lahf
popa
push
mov
pop
push
icebp
mov
xchg
fwait
lea
sbb
fcoml
imul
add
pop
stos
pop
push
or
imul
popf
rcr
jno
pushf
popa
cwtl
outsb
inc
fistpl
jmp
cmp
fcomip
lret
fwait
push
adc
mov
jl
add
pop
mov
add
mov
push
loopne
adc
xor
andb
push
sbb
jns
fcmovb
shlb
mov
fstl
jp
cwtl
jl
rcll
test
pushf
or
jle
fildll
mov
sub
ds
lock
mov
lret
or
lods
pop
fs
andl
pop
stc
inc
bound
xor
add
std
sti
leave
sti
iret
ljmp
or
inc
xchg
add
add
add
mov
xorb
rol
jp
pop
mov
and
cwtl
fwait
das
or
imul
mov
sbb
ja
ds
je
movsl
repnz
pop
adc
push
sbb
lcall
test
aaa
push
mov
push
dec
fwait
xor
pop
or
jb
lods
insl
cltd
js
ss
cmp
test
into
imul
fidivl
int3
pop
push
and
mov
push
xor
int
sub
adc
pushf
outsl
cmp
sub
xchg
rorl
ret
mov
sbb
pop
sbb
aam
sahf
push
leave
push
pop
sub
cmpsb
push
mov
cld
dec
jno
fisubrs
addb
push
dec
je
jecxz
cltd
lds
push
lds
or
enter
mov
add
mov
es
sti
dec
rcrb
lds
add
add
add
xchg
lret
ds
sub
lahf
push
cld
rolb
mov
xchg
loope
js
pop
arpl
xchg
mov
pop
fisubl
mov
out
xorl
addr16
in
popf
enter
clc
or
jbe
xchg
lock
test
in
mov
shll
sti
mov
cmp
std
pop
cmp
int
mov
pop
or
fmul
movsl
in
jle
rclb
sbb
pop
dec
scas
cmpsb
push
dec
ja
pushf
rol
adc
xor
jo
clc
sub
and
mov
incb
insl
movsb
jg
sti
movsl
insl
pop
scas
negb
xlat
sub
fisttpl
loop
sub
push
adc
frstor
inc
pop
daa
jno
stos
nop
scas
jne
mov
int
out
outsl
or
sbb
scas
js
stos
in
roll
fwait
mov
or
jg
mov
sub
psraw
fsubrp
push
add
add
xor
ja
dec
xor
arpl
jbe
pop
pop
inc
imul
gs
stos
push
jmp
add
jne
mov
xchg
cmp
mov
imul
inc
repz
in
mov
mov
xor
shl
nop
pop
mov
adc
cltd
lcall
lods
push
int3
repz
jle
into
rclb
push
sahf
insl
jmp
je
push
mov
push
jb
pop
fwait
jg
cli
mov
repnz
sarb
mov
popf
call
pop
push
out
gs
fucom
cli
iret
mov
jbe
mov
pop
cmpsb
bnd
repnz
push
or
push
cltd
fmulp
mov
inc
sub
adc
leave
mov
dec
jno
dec
cs
and
mov
dec
out
xor
pop
adc
movsb
jecxz
out
mov
cmpsb
add
xor
push
cld
pushl
out
adc
or
movl
add
daa
mov
and
ret
fwait
or
xlat
insl
jp
jmp
clc
ja
outsb
loopne
xlat
push
inc
data16
mov
cmp
xchg
je
mov
les
mov
std
dec
add
loopne
sub
add
pop
push
xor
pop
dec
push
loopnew
shlb
jns
in
sbb
sahf
fnsave
in
xchg
pusha
into
mov
aas
ja
push
push
cwtl
in
xor
repz
divb
fistpll
mov
cmp
push
scas
inc
lods
rcll
adc
or
scas
or
push
mov
lret
jmp
cwtl
or
add
mov
andl
mov
lret
cmp
sbb
push
jbe
mov
or
dec
or
dec
xchg
aaa
movsl
xor
jne
mov
adc
sbb
add
mov
out
mov
dec
ret
xlat
pushf
shrb
jb
ret
adc
push
enter
add
add
mov
push
mov
cli
jae
shll
push
cmp
mov
or
push
adc
aas
and
enter
inc
inc
std
jbe
add
insl
cld
dec
sub
lahf
aas
inc
in
js
sahf
call
sti
sub
dec
add
add
icebp
hlt
adc
push
and
subl
inc
repnz
pop
sahf
xor
out
xchg
popa
mov
cmpb
stos
mov
adc
sub
and
jle
mov
cmp
aam
push
xchg
xchg
push
rorb
in
movsb
mov
das
out
dec
adc
repnz
ljmp
out
ret
popa
add
or
mov
popa
sbb
popa
aaa
hlt
enter
push
test
cmc
lea
adc
cwtl
mov
jno
test
nop
fbstp
cmovb
sub
scas
mov
xchg
push
outsl
stc
loopne
xor
add
testb
add
push
fwait
loop
add
add
fiaddl
hlt
testl
mov
arpl
pop
dec
imul
lret
dec
and
imul
sub
xor
and
aaa
sbb
mov
inc
mov
insb
adc
dec
iret
jl
aad
aad
xor
sub
pop
ror
jnp
mov
pop
sti
inc
ljmp
aas
sbb
push
pushf
and
mov
outsb
fs
int3
jae
mov
data16
jl
aas
inc
leave
jo
in
cmp
inc
addr16
out
xchg
fmuls
movsb
xor
xchg
mov
xlat
jecxz
fld1
mov
sbb
pop
xor
enter
mov
mov
xor
push
sub
push
mov
xchg
add
ja
jne
sub
push
inc
ljmp
xchg
pop
sti
cld
dec
imul
mov
inc
cltd
loopne
test
add
jne
jne
jg
out
and
sbb
push
inc
lret
testb
add
int3
and
loope
mov
in
outsl
jmp
ja
push
into
icebp
rorl
jno
mov
pop
mov
insb
sub
lods
mov
add
pop
push
inc
mov
xlat
outsl
mov
xchg
xchg
sbb
push
cmp
call
stos
push
mov
cmp
mov
jo
xchg
push
mov
cmp
sarb
mov
dec
jno
fwait
rcll
rorb
pop
lret
add
fistps
and
mov
sub
xor
cmp
cltd
or
mov
jns
and
iret
mov
cld
sbb
dec
jb
and
adc
sub
xchg
rcrb
pusha
in
sarb
fistl
dec
inc
stc
push
add
mov
test
and
mov
push
xchg
aaa
stc
jmp
lahf
push
push
das
adc
add
dec
pop
mov
cmpsb
fstpl
arpl
pushf
push
lret
add
testb
add
cmp
xchg
adc
or
sub
mov
outsl
inc
pop
scas
jb
cmp
xchg
scas
cwtl
xchg
push
mov
ss
into
mov
rcr
mov
and
mov
sub
adc
cwtl
mov
mov
pop
test
inc
add
scas
stc
cmp
fldenv
inc
push
in
repnz
movsb
test
stos
inc
adc
stos
xchg
cmc
fs
push
mov
lahf
std
mov
pop
inc
push
lcall
movsb
xor
fadd
das
lcall
or
or
out
call
sub
cs
and
dec
cmp
xchg
movsb
sub
push
cs
cmpsb
xorl
cli
in
pop
pop
dec
das
idiv
je
xor
cmp
inc
jge
cli
std
cwtl
cmpsl
loop
cltd
or
pop
aas
mov
testl
add
outsb
jle
lods
not
mov
add
out
ret
add
testb
add
je
pop
mov
jo
or
add
inc
push
pop
add
or
add
pushl
pop
insb
addr16
adc
leave
rolb
sbb
jle
xchg
add
cmpsb
add
push
iret
mov
cmp
sbb
jnp
bnd
in
cmpsl
lock
jne
jge
cmpsb
sbb
pop
xor
cwtl
cmp
and
testb
xchg
scas
add
icebp
mov
mov
inc
in
in
mov
push
fcmovbe
mov
rdpmc
orb
jl
shrl
push
sbb
push
push
add
jecxz
and
add
push
int
lods
mov
aam
pop
and
bnd
add
inc
fwait
inc
mov
and
sub
shl
xor
push
xchg
cmpsb
cli
jae
scas
mov
xor
mov
lods
sbb
lahf
sbb
shll
add
add
mov
xor
sub
int
add
add
add
cmp
pop
cmpsb
sbb
andps
sbb
cmp
lahf
push
jnp
test
imul
mov
push
inc
mov
mov
cmp
sarb
push
pop
xor
data16
pop
dec
setnp
rcrl
pop
push
iret
pusha
xor
pusha
lods
dec
push
ss
jmp
sub
mov
or
or
jp
enter
addb
mov
push
inc
scas
test
mov
jns
lea
rcll
divb
icebp
jo
mov
mov
push
and
jnp
outsl
sub
fdivl
add
push
movsb
or
ret
pusha
fwait
fwait
jl
rorl
daa
test
or
push
adc
test
adc
cmp
mov
add
add
out
sti
xlat
ss
inc
movsb
pop
movl
add
test
mov
pop
cmc
pop
jb
dec
fisubrl
xor
push
sub
and
fisubrs
jp
movsl
mov
in
add
arpl
mov
sbb
xchg
pop
xor
dec
popf
dec
lcall
idivb
inc
sub
or
lret
and
lds
cmp
dec
gs
jnp
mov
push
xchg
inc
stos
push
sub
mov
call
and
dec
sbb
iret
sub
adc
inc
fiaddl
or
inc
fdivrs
sarl
push
sahf
idivb
pop
pop
add
jmp
pop
sub
mov
pushf
dec
repnz
adc
daa
aam
mov
inc
jge
mov
loop
mov
or
mov
fiadds
and
int3
inc
cmpsb
cmp
add
push
sub
cmp
jg
cmp
inc
aas
push
iret
add
testb
add
pop
out
jl
or
int
dec
jle
int3
mov
iret
loope
jg
dec
dec
pop
lcall
lret
cmp
lcall
mov
xchg
leave
cli
loopne
in
es
fs
add
mov
fadds
pop
arpl
jmp
ret
mov
pop
cmpsl
cmp
mov
add
push
jmp
adc
sbbl
or
ficomps
iret
imul
cmp
lret
push
iret
xchg
jne
mov
adc
lock
push
mov
mov
int
insb
lds
sub
leave
inc
sbb
sbb
dec
ja
pop
shl
sbb
mov
mov
sbb
add
or
xor
testl
lods
pop
jae
push
or
jmp
ds
repz
aam
shrl
add
add
testb
add
mov
sbb
ret
ja
outsb
adc
repz
xor
pop
bound
inc
xor
repnz
icebp
mov
scas
sbb
outsl
cmpsb
add
push
and
cmpsb
xchg
adc
rorb
std
les
or
dec
pop
mov
xchg
dec
clc
and
cmp
xor
push
rep
cli
call
jae
push
mov
ficoml
sbb
sti
or
les
dec
int3
shrl
inc
fs
add
adc
xor
cs
bound
outsl
cmp
inc
xchg
pslld
dec
movsb
mov
pushf
outsb
rcll
inc
fbld
cltd
dec
mov
pop
xchg
mov
mov
push
ret
iret
mov
out
in
imul
or
mov
mov
repz
dec
push
cmpsb
mov
pop
jb
mov
add
mov
jne
pusha
pop
add
rolb
add
add
add
sarb
cltd
bound
push
jne
pop
push
cmp
xchg
push
mov
daa
repnz
xchg
es
mov
or
or
inc
cmp
sahf
xchg
fnstcw
mov
cmpsb
neg
nop
aam
test
mov
xor
in
mov
sbb
not
dec
fwait
jo
sbb
dec
push
mov
in
cmp
push
into
add
inc
movsb
test
xchg
jo
push
xlat
mov
insl
sub
jns
das
xor
test
cmp
lahf
test
sbb
repnz
lods
fsubrs
aaa
scas
jae,pn
pop
mov
push
pop
mov
adcl
roll
xor
sbb
or
rcrb
and
xchg
sbb
sub
ss
add
outsb
fucomp
sbb
fistl
inc
mov
or
push
jl
lods
dec
pop
adc
testb
stc
enter
in
out
mov
dec
loope
arpl
testb
add
and
ljmp
mov
lods
pop
mov
shrb
add
dec
mov
ss
int3
nop
cld
rcll
mov
movsl
mov
push
cwtl
aas
pop
int3
frstpm(287
pop
and
push
mov
std
xor
push
sbb
xchg
xor
push
push
xor
inc
std
imul
mov
jb
stc
or
inc
xor
push
lret
adc
xor
mov
jne
sub
idiv
mov
iret
xchg
adc
xchg
pop
sbb
dec
sub
in
fwait
and
gs
sub
inc
and
mov
mov
and
mov
push
pop
xor
jmp
cmc
add
mov
pop
aaa
les
scas
cmpsb
cmp
ja
clc
pop
sub
lods
call
scas
ljmp
shrb
lahf
call
jne
imul
cmc
call
pop
adc
testb
add
xor
and
xor
ja
out
or
cli
sub
cmpsl
xchg
das
jns
sub
sub
das
mov
and
fsts
addr16
add
stc
insl
xchg
jge
mov
jl
dec
push
xlat
cmp
adc
push
jecxz
dec
pop
insl
sub
push
ret
aad
or
mov
sbb
xchg
jae
popa
inc
mov
pop
lods
dec
mov
pop
xor
mov
sub
ret
mov
sar
or
shrl
mov
xor
mov
movsl
push
or
mov
mov
gs
lret
test
mov
xor
and
lcall
cmp
into
lods
mov
sahf
call
and
sbb
add
and
add
add
ja
iret
xchg
xor
leave
push
pop
add
testb
add
dec
sbb
leave
loopne
sbbb
dec
iret
pop
jno
cld
lods
xchg
ret
popa
aad
mov
mov
xchg
add
aam
ljmp
ret
fcom
jecxz
cmp
pop
mov
xchg
pop
lcall
push
cltd
aas
mov
repz
sub
xor
sbb
mov
mov
inc
mov
lret
out
fcmovnb
xchg
int
mov
xchg
push
into
adc
test
xchg
mov
mov
int3
ds
out
fs
js
arpl
js
sbb
lahf
sarb
sub
mov
loope
pop
mov
stc
call
daa
fiaddl
inc
xlat
adc
inc
shll
mov
push
fistpl
imull
push
cmp
adc
xlat
lcall
xchg
cld
stos
and
cmpsl
push
add
out
into
gs
fsts
pop
sti
in
rcl
add
testb
add
in
out
fwait
punpckhwd
fwait
cmpsb
add
in
xlat
jmp
xor
jb
mov
add
mov
scas
dec
icebp
sbb
stos
inc
fildll
shll
pop
xor
ss
mov
les
fwait
cltd
mov
loop
sahf
test
ljmp
ja
fidivrs
or
icebp
pop
sub
mov
mov
or
pushf
sti
hlt
in
inc
in
aaa
jge
sti
dec
xchg
scas
dec
shrb
push
aad
xchg
sahf
leave
rorb
mov
jl
mov
lods
jp
jge
andl
xchg
paddusw
fiaddl
mov
mov
out
pushf
sti
xchg
sub
mov
xor
jge
sub
mov
inc
mov
pop
sub
lods
add
xor
es
pop
stos
adc
cmp
mulb
test
add
xchg
and
je
out
mov
jge
out
test
aad
add
add
add
and
sahf
cmp
push
cli
lods
cmp
shl
pusha
jle
jae
loop
ljmp
jbe
xchg
and
pop
arpl
jp
or
jmp
cmp
push
and
jne
sub
mov
or
cld
xchg
xchg
addl
add
js
shl
and
jbe
lods
fcoms
fidivrs
xchg
push
mov
imulb
and
cmp
cltd
lea
cwtl
test
xchg
mov
mov
aad
pop
es
icebp
dec
in
xchg
dec
pop
and
lea
imul
idiv
loopne
out
call
leave
sub
mov
mov
mov
adc
pop
mov
in
mov
rcrl
push
adc
sar
fcoml
jmp
aas
xor
lea
xchg
mov
add
dec
inc
dec
daa
dec
das
outsb
imul
enter
insl
aad
add
testb
add
aas
xchg
jo
inc
xor
jl
ja
dec
mov
popa
pcmpgtb
cli
mov
xor
xor
lahf
call
insl
sub
sbb
pop
sub
xchg
mov
cmp
sbb
mov
xchg
jle
fcmovb
sti
stos
pop
pop
xor
cld
cmp
lods
pop
rol
test
test
xor
or
es
pop
repnz
and
aaa
push
adc
sbb
sub
mov
mov
loope
ljmp
lcall
xor
jle
or
dec
push
jns
lret
or
or
shll
std
sti
sub
out
int
clc
in
jae
addb
mov
sbbb
and
je
xor
mov
mov
jbe
repz
xlat
sub
xor
xchg
fistps
insb
inc
mov
xchg
aaa
imul
push
adc
and
rolb
call
out
lahf
or
fdivs
mov
add
testb
add
dec
jp
cltd
popf
lods
adc
loopne
lret
dec
fisttpl
pop
add
test
or
aaa
dec
stc
mov
ja
adcl
push
mov
ffree
adc
out
mov
pushf
rorb
fmuls
mov
mov
in
adc
cmpsl
ljmp
lock
dec
push
int
cld
lcall
push
mov
out
aas
outsl
sarl
int3
aaa
push
jl
pop
movsl
sahf
test
xchg
sbb
dec
cltd
dec
aas
divb
inc
pop
jg
pop
insb
orl
mov
stos
sub
xchg
aas
adc
jno
in
dec
cmpsb
insl
insl
push
sub
mov
jb
push
jne
scas
cmp
mov
iret
xor
cmp
xor
cmp
imul
mov
or
add
insl
sub
das
std
ficompl
xor
xchg
shr
sub
add
neg
outsl
mov
push
and
fadds
add
add
add
pop
aam
and
push
inc
xchg
inc
xor
clc
addr16
adc
pushf
adc
arpl
mov
cmpsl
sbb
je
in
test
mov
xchg
enter
jb
into
lcall
mov
xchg
push
xor
inc
cmp
lea
les
push
std
xor
fadd
loopne
pop
dec
adc
cmp
test
jne
inc
dec
mov
sbb
test
and
shrl
cmpsl
jmp
sbb
and
xchg
addl
ret
dec
call
mov
inc
hlt
jb
jno
pop
dec
inc
sub
jns
mov
push
loope
jne
add
aad
and
cmp
and
jne
push
pop
out
test
shlb
aam
je
pop
sti
sub
lock
dec
lahf
sbb
pop
loopne
pushf
push
xor
pop
aad
scas
jns
pushf
or
or
add
add
sbb
sbb
sbb
sbb
add
add
mov
inc
test
mov
stos
loop
orl
add
mov
ret
fmull
aaa
testb
mov
xorb
bound
mov
add
cmp
jo
in
aaa
sub
push
test
movsb
lcall
in
and
int
lock
xchg
mov
jge
in
inc
push
ret
call
imul
xor
and
aaa
lods
mov
jl
aas
out
dec
mov
js
pop
ss
in
arpl
or
xor
dec
int3
test
mov
push
scas
push
mov
adc
push
xor
adcb
and
clc
shlb
dec
fs
bound
xchg
push
cmp
xorb
pop
sti
xor
sbb
push
sbb
mov
pushf
adc
ds
sub
pop
das
xchg
fiaddl
add
add
add
lods
in
or
pop
push
stos
add
aam
pop
jb
btc
dec
add
mov
xchg
fwait
movsl
flds
sub
or
ss
dec
mov
test
aaa
in
fcomp
xor
dec
adc
push
inc
adc
pop
cmpsl
add
and
mov
and
loopne
dec
mov
xchg
cmpsb
ret
cwtl
lods
ljmp
repnz
sub
ror
rorb
inc
movsl
push
aaa
or
jg
add
push
cmp
popf
cli
filds
add
sti
push
add
xchg
xchg
in
pop
push
je
dec
hlt
mov
push
aaa
xor
push
jle
dec
mov
lods
subl
mov
sbb
mov
sbb
cmp
daa
adc
mov
xchg
push
add
xchg
and
idiv
lahf
insl
mov
xchg
mov
add
testb
add
in
js
xchg
divl
movsb
xchg
fsts
xchg
jle
mov
sti
aam
dec
pusha
out
mov
ljmp
ret
or
out
and
fsub
dec
xchg
and
jb
inc
cmpsl
jl
in
ljmp
cmc
xor
and
cli
sub
dec
lahf
mov
sahf
insl
mov
test
cmp
push
mov
lahf
jg
test
loop
jmp
sub
loop
cs
call
push
xchg
add
push
and
add
mov
addl
and
es
ds
sbb
add
cmpsl
test
inc
add
int
fs
mov
fadds
mov
movsb
ret
sbb
mov
pop
pop
cmp
rcr
or
test
lds
or
add
xchg
ja
push
jg
loope
cs
sbb
sbb
add
add
add
pop
outsb
mov
das
add
push
ds
pop
ljmp
mov
dec
mov
subl
popf
sub
push
xlat
push
dec
sub
mov
out
cmp
cmc
outsb
xchg
sub
mov
cmp
mov
jmp
push
cmp
push
pop
and
dec
or
lret
fcomps
gs
sbb
cld
gs
je
pop
dec
cli
inc
push
in
or
inc
dec
or
leave
out
popl
cmp
jo
fldt
not
mov
inc
bound
movsb
mov
cli
pop
jp
ret
inc
movsl
jne
aas
mov
sbb
cmp
test
dec
insb
shrl
fdivr
and
mov
dec
call
fdivl
jle
inc
pop
cmp
mov
scas
jae
jae
aad
mov
icebp
xchg
mov
add
int
out
out
imul
cltd
xor
ret
add
testb
add
sbb
mov
push
adc
xchg
jae
int
aas
sub
je
adc
cmpb
or
fldt
movsl
jmp
aas
rcrl
cld
das
imul
in
dec
jns
mov
push
sub
push
fcmovnu
pop
and
adc
movb
sbb
dec
lods
pop
sub
dec
cwtl
adc
pop
dec
xor
mov
push
push
aaa
mov
out
push
add
cli
divb
stc
cwtl
xor
decl
xor
push
les
xlat
rcll
add
cmp
pop
push
insb
loopne
rclb
cmpsb
xor
test
pop
dec
flds
int
xor
adc
notb
aaa
jno
xor
test
cmpsb
imul
push
in
push
scas
in
dec
clc
in
add
out
fldcw
push
xchg
fsubrs
insl
popl
test
add
testb
add
inc
jb
or
enter
and
mov
xchg
lahf
xor
and
push
pop
movsl
clc
pop
and
nop
shlb
outsb
push
xchg
xor
ss
out
cli
xchg
sbb
add
adc
loopne
mov
push
pusha
inc
dec
mov
js
shlb
sub
push
fisubl
xor
mov
ficoml
rcrl
inc
add
mov
push
pop
aam
pop
repnz
adc
rcll
arpl
enter
dec
lahf
sbb
dec
test
inc
xchg
jmp
das
and
stc
xchg
adc
sbb
mov
jbe
popa
hlt
jmp
add
std
adc
or
inc
aas
xor
out
nop
mov
in
xor
scas
push
mov
mov
test
das
and
push
stos
push
lea
inc
pop
fwait
inc
add
in
sbb
sahf
cmc
fsubrp
jnp
mov
gs
filds
add
add
add
inc
test
or
nop
lods
nop
mov
cmp
cmp
cwtl
lcall
repnz
test
aad
in
mov
cmp
jnp
stos
sub
jne
mov
arpl
stos
jb
test
test
pop
inc
sbb
mov
mov
xchg
jo
call
adc
cltd
mov
je
in
fsub
loope
mov
sbb
popa
jae
mov
xor
jg
mov
push
cmpl
or
mov
jecxz
jl
aad
popa
aam
movl
bound
ret
mov
jl
push
jmp
dec
xlat
xchg
incb
movsl
ror
sub
or
insl
js
rcl
push
je
mov
xor
dec
and
jmp
pop
adc
cmp
adc
add
pop
dec
jle
jg
std
fldt
cmp
je
adc
add
testb
add
dec
cli
stos
rclb
jo
sub
inc
adc
cmp
push
ljmp
loope
outsl
inc
std
sub
outsb
xchg
addl
push
int
das
or
fwait
nop
dec
xor
jge
add
mov
lahf
xchg
add
xchg
pop
popf
inc
mov
in
js
cmp
jnp
lods
test
stos
cmpsb
sbb
lock
ret
iret
aam
insb
movsb
cmp
adc
dec
cltd
popf
scas
push
cmp
mov
loop
jae
or
icebp
and
sbb
inc
ds
cmc
cmp
add
mov
fisubrs
cs
aam
push
not
xor
jmp
sbb
cmpsb
fdiv
adc
mov
jns
ss
dec
ljmp
mov
mov
ja
inc
pop
mull
pop
andb
add
add
mov
sti
idiv
lods
jne
adc
adc
add
testb
add
push
pop
jge
jmp
mov
push
fistps
lret
dec
xor
sbb
push
dec
lahf
in
pop
out
lret
sbb
jno
imul
ret
inc
ja
imul
das
push
stos
movaps
fnstcw
loope
sub
das
nop
add
dec
xchg
or
adc
imul
push
in
sub
aas
xor
out
nop
scas
xor
push
mov
pushf
movsb
cmovs
aam
push
push
lea
pop
xchg
pop
jecxz
sbb
hlt
xchg
xchg
jmp
cmp
out
lret
imul
push
mov
mov
inc
pusha
mov
loop
cli
ss
test
out
sub
cmp
inc
mov
mov
jbe
inc
jne
repnz
leave
pop
sbb
push
ljmp
add
adc
leave
jmp
mov
mov
jns
loop
add
add
add
dec
mov
hlt
xchg
mov
dec
xchg
es
pop
lahf
aad
mov
and
xchg
dec
push
xchg
cltd
fcoml
push
lds
inc
xchg
sbb
dec
inc
inc
xchg
mov
adc
push
sbb
stc
orb
test
rcl
sub
inc
invd
or
mov
push
incb
lods
xchg
push
sub
xlat
jo
jecxz
repz
jns
jns
xor
xor
lock
cmp
cli
lods
inc
mov
out
addr16
out
push
test
ds
sbb
js
jnp
in
aam
or
jle
jmp
and
mov
push
and
dec
xchg
push
stos
loope
inc
pop
sti
and
xchg
inc
cmp
ljmp
inc
inc
mov
sbbl
ret
jl
pushf
out
sub
mov
and
push
jle
mov
dec
out
push
dec
add
add
cmpsl
fimull
jp
dec
sbb
xchg
cmp
add
testb
add
in
test
es
out
inc
pusha
pop
pop
xor
outsb
movsl
xchg
sbb
in
push
or
lahf
loopne
inc
push
stos
lods
daa
xor
push
jo
pop
mov
and
scas
outsb
lahf
add
mov
sbb
add
fisubs
jbe
jmp
jae
dec
icebp
sub
sbb
dec
mov
movsb
mov
out
or
out
adc
xchg
xchg
inc
push
repnz
mov
imul
cltd
nop
shlb
test
ret
icebp
push
jmp
call
rcll
arpl
cmp
popf
and
daa
mov
pop
repnz
notl
ss
push
jge
fimull
stos
jge
pop
fsubrs
aad
xor
ljmp
sbb
mov
dec
push
sahf
or
pusha
mov
sub
movsb
jmp
push
ret
dec
cmp
aaa
sub
iret
push
cmc
add
jnp
and
cltd
add
jg
mov
lcall
mov
pop
xor
add
testb
add
mov
or
aaa
iret
jg
sub
and
pop
pusha
mov
inc
sub
jb
in
cmp
inc
movsb
pusha
cltd
and
and
xor
dec
iret
mov
xchg
cmc
cmp
testb
es
push
addl
push
lods
popf
js
pop
xor
xchg
popw
into
repnz
jge
pop
and
repnz
gs
out
adc
into
mov
es
cmc
outsl
pop
insb
scas
sbbb
mov
add
sbb
add
lods
mov
or
cmp
jp
pop
ror
fisttpl
add
adc
or
ds
fimuls
cs
sub
push
mov
ret
dec
imul
sbb
jne
pop
ret
jmp
and
mov
mov
gs
adc
dec
push
pop
mov
inc
insb
jle
jne
add
mov
jns
daa
data16
sub
add
testb
add
mov
xor
pop
pop
dec
lods
xchg
push
ljmp
pop
icebp
rolb
movsl
outsb
outsb
rorl
cld
femms
xchg
les
jns
inc
and
push
imul
out
xor
mov
xor
fsubl
mov
inc
icebp
addl
lcall
xor
repz
and
add
cmp
push
jge
mov
arpl
out
pop
out
cmp
add
popa
jl
inc
xchg
adc
jnp
lds
into
xchg
loope
push
sub
shrb
or
popa
lods
mov
lret
iret
lcall
cmp
jnp
sarb
addb
data16
loop
lahf
fisttps
push
stc
loope
mov
lret
jns
fidivrl
enter
push
rclb
addb
mov
stos
outsb
push
add
jae
fadd
fsubp
jnp
push
xor
loop
out
add
add
add
fs
es
xor
fs
cmc
xchg
sub
int
pusha
dec
pop
inc
mov
mov
inc
repz
movsb
or
and
push
sbb
aam
dec
lcall
xchg
jno
xchg
jo
insl
add
fisubrl
mov
and
mov
in
inc
int3
pop
andl
push
insl
not
push
cmp
add
pop
mov
add
jbe
popa
add
xchg
dec
jmp
mov
or
lods
pop
mov
outsl
sub
insl
push
adc
xor
rclb
sbb
je
fcmovu
pop
jge
dec
ja
aam
mov
dec
add
xchg
pop
out
push
jle
in
repnz
mov
ret
nop
in
pop
cld
mov
push
mov
es
and
and
in
jo
adcl
inc
clc
daa
stos
xor
leave
aas
out
mov
add
push
cmp
sub
cld
cli
jle
addb
adc
add
testb
add
dec
push
fcoms
jno
and
and
ljmp
pop
inc
cmp
loop
mov
cmp
jbe
push
mov
xchg
jp,pt
les
mov
mov
test
mov
mov
mov
hlt
mov
loop
and
stc
mov
dec
push
dec
dec
bnd
lds
inc
in
stc
mov
ficompl
cli
aam
je
pop
leave
pop
pop
shlb
xor
cmpsb
inc
sub
mov
insl
push
sbb
pop
adc
and
or
aaa
mov
test
inc
push
aas
cwtl
cmp
cmpsl
mov
fstp
sarb
add
dec
inc
fwait
mov
lcall
aam
movsl
aas
out
or
add
out
push
pop
sahf
es
sub
mov
outsl
stos
arpl
xchg
adc
in
mov
add
lea
pop
jbe
ja
sti
dec
push
sbb
lcall
add
pop
jle
daa
xchg
jmp
mov
decb
lock
jecxz
sbb
dec
sub
shlb
pop
out
daa
ffreep
fsubr
cld
std
ljmp
sub
pop
js
sbb
jb
cmp
jbe
loopne
sarb
pop
psubq
cltd
or
pop
add
mov
add
jbe
dec
mov
fistps
sub
lods
ficoml
or
ret
setns
xor
xchg
out
cmc
sahf
les
ret
in
mov
imull
mov
ficompl
ss
addr16
enter
sub
adc
pusha
add
xchg
xchg
adcl
fisttpl
mov
mov
xor
inc
or
pop
movsl
cs
mov
outsl
imul
push
dec
cli
jl
sub
pop
fcomip
mov
push
and
in
outsb
jo
in
push
pop
add
add
into
arpl
inc
push
cmc
or
inc
add
add
add
testb
add
mov
shll
mov
pop
dec
lods
jge
sti
cltd
push
sbb
lret
adc
lahf
rclb
jge
mov
addb
dec
imul
cmpsb
test
in
dec
sub
daa
xchg
jne
jp
lods
xor
mov
jmp
mov
xchg
mov
clc
rcr
lds
add
int
adc
add
xor
sbbl
jne
int3
and
push
cmc
sti
insl
out
dec
insl
mov
inc
js
pop
dec
xor
inc
fnstsw
and
xchg
inc
rol
les
or
repnz
xor
int
jg
daa
shll
pop
in
xchg
xchg
xor
jmp
xor
xor
roll
or
or
push
out
lret
xchg
pop
js
sub
jge
out
das
jecxz
xor
or
jae
loopne
addr16
add
cltd
cmc
adcb
fcos
pavgw
mov
imul
add
testb
add
mov
divb
lret
fsubl
xor
lret
cmp
mov
xlat
rcrb
push
push
mov
out
adc
jmp
out
sti
cmpsl
xor
popf
inc
in
jmp
aaa
fistl
cmp
sbb
mov
test
cmpsb
cmp
pop
sbb
xchg
sbb
pop
mov
push
pushf
test
xlat
sub
fistps
dec
ret
adc
pop
dec
pop
loop
outsl
lea
dec
fstpl
inc
cs
xchg
sub
mov
adc
fisubrl
addr16
or
jecxz
out
in
gs
cmc
loop
xlat
pop
ja
inc
ret
jb
inc
or
cwtl
daa
jmp
fs
adc
aas
mov
xor
lahf
dec
jbe
sub
mov
test
and
and
gs
xchg
push
in
adcl
lret
add
repz
lock
jg
mov
fld
and
testb
add
adc
shll
mov
add
rol
cmpb
push
in
imul
adc
js
jne
dec
and
xchg
push
jae
popf
jmp
mov
add
push
rorb
lds
icebp
mov
lds
dec
or
andl
andl
outsb
rclb
icebp
out
push
pxor
xor
fldenv
lret
cmp
add
pop
pusha
or
dec
imul
loopne
sbb
adc
dec
dec
push
enter
out
negl
hlt
push
inc
xchg
cmp
test
mov
cltd
sbb
fwait
push
bound
xchg
push
stos
push
loopne
ret
mov
sub
fdivrs
jge
jbe
sub
in
test
into
jae
lock
mov
adc
inc
leave
pushf
scas
arpl
shll
xor
pop
add
xchg
fwait
cwtl
pop
popf
pop
xlat
fisttpl
cmp
loop
add
testb
add
mov
mov
push
out
out
inc
sti
outsb
xchg
pushl
loop
xchg
fstps
mov
das
pop
popf
fcoml
push
ds
push
push
out
dec
loop
imul
mov
scas
faddl
mov
frstor
call
sub
push
xor
bound
pop
stos
push
cwtl
inc
lock
les
gs
fidivrl
sbb
xchg
dec
mov
sub
pop
leave
mov
mov
xlat
ja
add
pop
dec
stos
leave
mov
jge
mov
out
mov
jle
xchg
into
jb
fnstcw
ljmp
xchg
sub
notb
xchg
and
hlt
bound
movsb
sbb
mov
in
adc
daa
adc
inc
mov
popf
add
stc
mov
dec
js
stc
mov
push
nop
aad
sar
sbb
add
testb
add
fimuls
adc
jge
shr
imul
mov
dec
dec
nop
mov
cmpl
cmp
imul
aaa
cli
adc
cltd
inc
fs
loope
les
hlt
ja
xor
jg
movsl
mov
adcl
js
scas
out
sub
fsubs
fcmovne
arpl
out
les
pushf
adc
es
sub
adc
arpl
xchg
adc
dec
xchg
add
sbb
inc
or
xchg
iret
loop
jnp
call
fs
je
movsl
xchg
inc
mov
cmp
cmp
mov
dec
addr16
ficoms
js
cmpsb
pushf
testl
push
daa
int3
scas
xor
xor
bound
not
rcll
add
shrb
rolb
repnz
sbb
loope
lcall
mov
pop
insb
fildll
decb
add
mov
in
add
testb
add
push
cmpsl
scas
dec
inc
jmp
mov
imul
mov
cmp
cmpsb
push
xchg
rorb
sbb
push
cwtl
adc
sub
cmp
into
and
aam
mov
dec
test
dec
lods
mov
inc
scas
lret
mov
int
outsl
fdivs
push
ljmp
sub
adc
cs
sub
movsl
push
pop
rcll
bnd
add
popa
dec
movsb
push
mov
lret
xadd
stos
mov
mov
and
nop
or
xchg
lret
pushf
outsl
rcrl
mov
movsl
dec
and
out
outsb
in
mov
movsl
jne
and
addr16
mov
mov
sbb
sub
jmp
xchg
into
ja
dec
mov
mov
js
ljmp
repnz
push
push
add
test
add
mov
pxor
jnp
sbb
rol
add
testb
add
cmp
jns
push
lret
adc
cmp
inc
lods
leave
or
mov
push
rcr
loope
mov
insl
loopne
mov
js
mov
addl
aas
cmp
mov
cli
pushf
cmp
sub
test
adc
jae
xlat
sub
push
adcb
push
sub
adc
rcll
insl
pop
mov
mov
ret
jg
dec
frstor
cmc
fnstcw
leave
inc
mov
xor
push
push
loop
inc
sahf
mov
jnp
dec
sti
notb
into
movsl
insl
pop
mov
xchg
mov
adc
jg
popa
pushf
daa
xchg
jmp
ljmp
xor
adc
pop
and
pop
out
xchg
movsl
inc
das
in
stos
nop
ret
adc
jmp
sarl
xor
rcr
cld
adc
bound
add
add
subb
jmp
popa
test
mov
add
add
sub
or
iret
xchg
mov
iret
cmpsl
jmp
imul
push
cwtl
icebp
mov
push
jecxz
jp
repnz
sub
int
cmpsb
sub
cs
mov
rcrl
xor
enter
fdivs
adc
mov
mov
dec
cmp
push
aaa
sbb
jl
xchg
addr16
iret
and
pop
inc
add
mov
ja
pop
in
dec
imul
mov
and
lods
iret
lahf
loopne
aaa
loop
stos
xor
scas
fistps
pop
add
jne
sub
jo
mov
repnz
push
or
pop
scas
bound
xor
lods
cwtl
xchg
shll
mov
push
or
push
mov
jp
fildl
lock
adc
addr16
dec
std
sbb
add
add
jb
scas
cmp
int3
bnd
mov
mov
add
testb
add
add
repz
cmp
popf
inc
push
inc
scas
cmp
and
repnz
ljmp
in
dec
sub
loope
in
xchg
cmp
xchg
jl
mov
add
aam
daa
sub
inc
sbb
icebp
scas
adc
mov
fldcw
loope
inc
fisubrs
stos
jg
jnp
fstps
adc
sar
cmp
mov
movsb
push
movsl
push
inc
pop
xchg
inc
jne
hlt
cwtl
leave
or
dec
repnz
cmp
xor
out
call
jp
inc
das
sbb
mov
outsl
xchg
mov
imul
addr16
xor
mov
pop
push
gs
pushf
cmp
addr16
pop
mov
cmp
sub
add
push
xchg
mov
mov
fstps
pop
dec
mov
shl
pusha
fidivs
xor
mov
dec
adc
add
mov
xlat
mov
fucom
gs
icebp
add
testb
add
cmpsb
mov
lock
jno
sub
and
or
push
xchg
cmp
jns
push
xchg
clc
mov
jp
jge
adc
out
mov
jp
cmp
add
xchg
data16
pop
adc
cvtpi2ps
shl
xchg
cwtl
loopne
mov
cmovl
xchg
roll
pushf
fxtract
jecxz
and
adc
push
add
bnd
dec
mov
mov
ja
add
jge
loopne
mov
sbb
or
adc
cmp
lods
rorb
es
lret
fdivr
cmp
dec
mov
stc
sbb
xorb
fdivrp
rcll
aas
popf
test
jne
jl
mov
sub
adc
add
insb
cs
pop
mov
int
rcl
std
cs
shl
inc
into
sub
sub
popf
add
add
mov
aas
jp
int3
icebp
test
and
pushf
repnz
testb
add
lret
andl
outsl
push
or
scas
jmp
imulb
adc
pop
pop
add
andb
mov
jp
outsb
cwtl
bound
mov
push
cmp
or
sub
ds
cmpsl
mov
add
sbb
ss
mov
and
outsl
jae
dec
cmp
sbb
pusha
mov
scas
repnz
push
ret
hlt
lret
loop
popa
hlt
loope
xlat
aaa
mov
leave
mov
leave
add
inc
fsubs
pop
xorl
pop
pushf
je
dec
mov
dec
push
mov
dec
pop
jnp
out
push
pop
add
aas
loope
hlt
push
fwait
push
add
jns
loopne
iret
enter
jp
cmp
lods
or
sbb
jne
or
addr16
movsl
dec
jnp
mov
ss
jmp
pop
mov
popa
jbe
bound
inc
inc
lds
test
add
loop
fadd
sti
mov
ret
xchg
xchg
repz
testb
add
cmp
jno
push
aas
push
xor
imul
jmp
loope
aad
or
jecxz
sbb
jle
test
fwait
mov
loopne
lods
pop
xor
repnz
pop
test
inc
sbb
hlt
sub
fldl
sbb
jecxz
mov
out
lcall
pop
js
bound
mov
loope
cmp
jle
mov
sub
xchg
les
dec
stos
lods
lods
repnz
lock
cmp
imul
push
mov
add
fdivl
fcoml
lds
and
mov
jbe
cmpxchg
fcomps
mov
ret
ficomps
addr16
xorb
das
adc
sbb
insl
out
icebp
movsl
lahf
xchg
mov
aas
lcall
out
mov
dec
jo
add
push
cmp
adc
neg
jge
push
xchg
imul
add
data16
xchg
push
xor
test
fisubs
in
jns
jo
mov
inc
in
and
outsl
sub
iret
xor
add
sub
push
lock
push
inc
dec
sub
jbe
mov
mov
js
pop
jg
aas
inc
ljmp
stc
push
mov
stc
lea
cmpsl
adc
shll
dec
popf
jns
or
andl
daa
mulb
aam
clc
outsl
repz
dec
dec
or
imul
movb
addr16
lock
aad
sub
xlat
jae
arpl
in
or
inc
je
andl
lods
jbe
popf
adc
jecxz
cwtl
mov
dec
sti
mov
adc
clc
push
or
or
into
inc
into
fidivrs
sub
or
insb
insl
cmpsb
arpl
sahf
je
xor
and
cmc
add
pop
cmp
outsl
jg
jg
mov
xor
fyl2xp1
dec
jle
add
testb
add
dec
push
ja
test
or
mov
fildl
sub
cmpsl
das
fstpt
mov
fchs
push
fdivl
outsb
clc
pop
mov
in
addl
std
cmpsl
adc
jg
dec
cltd
stc
sbb
adc
push
jge
or
leave
xor
sbb
mov
pcmpeqd
jb
jge
and
cmp
idivl
std
pop
adc
adc
in
mov
inc
cmp
shr
mov
push
push
imul
shrl
shrb
jns
adc
in
jno
scas
roll
leave
xor
outsl
arpl
cld
mov
mov
fs
jmp
int3
xor
mov
mov
mov
sbb
adc
jo
pusha
mov
fwait
and
add
ja
and
aaa
negl
lock
testb
testb
add
sahf
and
lahf
arpl
pushw
scas
sbbb
jl
jg
fnsave
pop
imul
xchg
add
push
ret
stos
xchg
push
nop
mov
imul
icebp
dec
insl
cmp
sub
push
push
mov
jb
sub
insl
daa
push
fs
or
cmp
lock
push
mov
lock
pop
dec
dec
mov
jmp
sbb
mov
roll
and
adc
insl
sahf
pop
cmp
ffree
cmp
icebp
adc
cwtl
insb
clc
pusha
pushf
jno
loop
push
push
mov
cmp
pop
jne
out
lods
fisttpl
mov
jnp
es
das
sbb
inc
icebp
dec
xchg
sete
ja
adc
inc
push
adc
fistpl
dec
cmp
hlt
pusha
push
loop
dec
adc
or
jl,pn
xchg
add
mov
cmc
mov
lcall
add
add
add
pop
repz
je
add
inc
lahf
pop
add
imul
xchg
dec
iret
fnstcw
jne
cmpsb
lock
stc
dec
insb
push
shr
push
and
loop
cmc
js
scas
mov
dec
pop
adcl
cmpsl
mov
push
movsl
mov
pop
sbb
mov
lahf
xor
mov
insb
fmul
pop
inc
ds
insb
sub
mov
xchg
enter
adc
mov
and
or
push
loopne
stos
nop
add
sub
pop
sbb
push
call
mull
and
inc
sbb
sub
push
fsubrl
test
in
push
jae
or
adc
mov
ret
sbb
fcmovnbe
mov
xchg
jmp
inc
sub
push
in
pop
lret
ja
out
add
jp
aad
add
jle
jne
cmp
pop
aas
ret
pusha
clc
add
testb
add
xchg
adc
fidivl
je
fisubrs
shlb
and
jp
pusha
stos
jno
pop
test
insb
sbb
cmp
stos
pop
inc
sub
inc
aaa
jmp
sub
add
xchg
dec
dec
jo
dec
jp
outsb
rclb
aam
cmc
cltd
xchg
adc
movaps
dec
mov
lcall
sub
add
loope
ds
test
ficomps
lea
andl
mov
add
fldenv
and
and
addb
push
xor
aas
add
movsl
bound
lods
fwait
sbb
sti
or
sbbl
in
es
out
jbe
sub
iret
inc
mov
test
arpl
lock
cmpsl
sub
sbb
shl
sub
cli
jne
add
sub
jno
ja
into
cmc
rorl
pop
hlt
or
add
add
sub
scas
fdivr
fnstcw
cmpl
pop
push
stc
add
testb
add
xchg
cs
out
add
xchg
push
iret
stos
push
test
dec
add
out
dec
jns
pop
icebp
stc
pop
cmpsl
insb
add
add
pusha
outsb
mov
loopne
loop
mov
inc
sbb
in
clc
lahf
mov
rorb
insl
cs
mov
xchg
cmp
push
lret
std
fimull
jno
mov
xchg
mov
xchg
sub
sbb
inc
xor
rol
mov
pop
dec
popa
es
mov
xor
popa
cmp
es
dec
fsub
or
mov
xchg
popf
jae
adc
mov
or
push
ljmp
jg
pop
mov
lahf
sub
add
and
mov
sbb
mov
mov
sbbb
inc
ja
iret
sub
dec
fcoms
pop
in
add
ret
add
xor
xchg
fwait
bound
fnstenv
add
add
add
fimuls
adc
scas
mov
enter
adc
fadd
in
sbb
xorl
icebp
pop
push
in
dec
sub
lea
push
sbb
shr
mov
lods
lcall
push
je
add
mull
ret
cmp
push
mov
sub
cli
movsb
mov
dec
cld
or
ret
sbb
aam
frstor
push
popf
inc
aaa
mov
lods
pusha
out
sub
sub
xchg
arpl
imul
lods
pop
sbb
insl
stc
and
lds
lahf
mov
fisttpl
pushf
dec
jge
repz
or
mov
rorl
hlt
mov
fwait
pop
jns
test
mov
inc
or
xor
dec
dec
es
mov
mov
mov
adc
bnd
mov
aaa
popa
adc
add
adc
int
in
idivl
pushl
push
lods
or
sti
add
testb
add
xor
jbe
addr16
mov
aam
push
xchg
out
and
std
mov
sbb
jne
xchg
mov
int3
add
divl
sub
pop
add
imull
inc
adc
sbb
cli
mov
insb
ffree
lcall
mov
adc
mov
pop
add
xchg
pop
or
sbb
mov
mov
dec
test
mov
jge
cmp
int3
repnz
scas
sbbb
mov
test
or
lret
or
shl
sub
loopne
in
jns
sbb
xchg
xor
ljmp
out
pop
aas
fisubs
or
ret
and
fisubrs
jae
xchg
jecxz
jae
sbb
lahf
daa
push
xlat
mov
pop
jne
lret
enter
cmpsl
push
xchg
mov
loop
mov
add
jecxz
inc
cli
aas
push
ljmp
cmp
add
testb
add
shl
mov
inc
out
xor
scas
push
or
pushf
add
mov
lret
inc
and
insb
and
xchg
add
into
in
nop
clc
mov
sti
jae
pop
xchg
test
addr16
push
mov
lcall
pop
divl
or
or
jo
repz
mov
cwtl
int
jne
and
jmp
scas
mov
push
jne
adc
xor
push
test
sbb
fwait
stc
pop
sbb
inc
jp
test
jg
js
mov
sbb
ds
sbb
sub
mov
xlat
adcl
push
dec
cmp
sbb
add
daa
mov
notl
jg
sub
push
xor
and
subb
adc
xchg
xor
cltd
lods
add
mov
lcall
xchg
shll
shrb
std
add
testb
add
ret
mov
cmpsl
xor
adc
repz
xchg
push
in
xlat
repz
push
sbb
test
adc
cld
mov
mov
sbb
out
out
cmp
cmp
xchg
sbb
arpl
inc
lods
jo
mov
dec
mov
iret
xchg
sub
fistps
fisubs
jle
aas
mov
push
jge
sti
xor
repz
jg
and
ret
in
sar
add
aam
cmpsb
cld
and
sub
cs
jecxz
fsubrs
leave
jno
mov
clc
xchg
push
xor
cmp
call
fisttpll
dec
andb
mov
cmp
push
push
mov
jmp
pop
and
mov
cltd
pop
dec
mov
repz
cs
loop
pop
add
aaa
jae
cltd
dec
mov
fs
add
testb
add
inc
adc
sbb
xor
dec
push
testl
cmpsb
stc
das
adc
fidivs
mov
inc
mov
sbb
xor
sti
xchg
mov
fimull
fs
pop
push
push
jle
jg
lock
cli
mov
xchg
push
inc
jl
lret
pop
push
mov
sub
repz
fisubrs
and
mov
shlb
pop
test
dec
push
movsb
add
sbb
rolb
and
test
lds
fistps
fcomp
sbb
dec
outsl
push
mov
push
inc
out
push
and
pop
xchg
nop
fdivs
push
arpl
int
test
push
pop
push
push
xor
jle
cmp
pop
js
mov
imul
out
dec
jg
scas
xor
stc
jo
mov
das
sub
push
ret
mov
scas
in
repz
loop
jp
cmp
mov
int3
daa
or
push
scas
or
add
push
into
nop
out
cwtl
jle
xlat
movsb
add
out
add
incl
add
add
add
pop
push
push
lret
pop
push
mov
push
adc
pop
xor
push
fwait
xor
hlt
sbb
jmp
arpl
mov
jns
clc
pop
or
push
fisttpl
pop
insl
loop
pop
and
jo
pop
mov
or
mov
lret
test
fcmovnb
xor
pop
cmp
ficoms
adcb
jge
movsl
mov
mov
mov
and
or
sub
ljmp
jns
push
mov
das
jns
mov
cmp
movsl
mov
dec
sbb
cmc
loop
hlt
repnz
stos
lahf
push
lea
mov
mov
mov
cmp
jmp
sub
addr16
jmp
ds
pop
push
imul
dec
push
pusha
fsubl
pop
add
jno
test
jg
xor
or
pop
xchg
adc
add
testb
add
pushf
and
stos
std
in
xor
lds
sbb
mov
je
out
aas
xor
or
push
sbb
pushw
in
xchg
add
mov
daa
in
mov
mov
pop
adc
outsl
das
jle
and
mov
mov
aas
lahf
jns
push
jae
jbe
scas
test
sbb
js
mov
jmp
pop
das
adc
jns
loop
rcrb
sub
cmp
inc
mov
enter
insb
popf
rorl
cmp
mov
push
pop
sbb
sarl
popa
xor
stos
sbb
xor
sbbb
popa
clc
movsl
sub
pop
or
aam
imul
cmpsl
icebp
xor
setnp
je
add
adc
data16
sub
movsl
sub
mov
jmp
push
addr16
cli
xor
add
movsb
push
in
cmc
jne
pop
adc
leave
in
mov
push
add
add
add
add
or
icebp
loope
cmpsl
jg
pop
cmp
movsl
mov
jmp
imul
fisubl
call
sub
aaa
or
push
cmp
xchg
mov
inc
pop
jnp
cmp
lds
in
aas
jns
sbb
jl
xor
pop
repz
mov
pushf
loopne
push
test
pushf
adc
lcall
repnz
fmull
addb
sub
mov
sar
icebp
cmc
mov
inc
jae
lea
push
fadds
shl
std
into
pop
inc
xchg
outsl
push
and
push
loop
cwtl
lods
push
cmp
lea
mov
rolb
test
jo
mov
mov
sbb
cmp
xorl
pop
jge
and
mov
rcrb
sub
push
jg
cmp
cmp
movsl
jae
jae
lds
dec
fs
mov
push
jns
jb
lea
mov
add
out
shlb
aas
out
fwait
aaa
call
aam
add
add
add
add
jno
pop
xor
scas
jmp
sub
mov
add
lods
fiadds
out
imul
mov
shl
sti
stos
or
daa
dec
pop
push
mov
jge
xchg
jp
jle
adcl
ret
sbb
sbb
cmp
sarb
int3
adc
mov
xchg
cwtl
into
sub
adc
pop
sti
cmp
leave
loope
insl
enter
les
pop
jns
xchg
aad
jb
sbb
ljmp
and
mov
pop
cmp
ds
pushf
pop
jle
sbb
jp
test
outsl
je
std
mov
adc
adc
adc
pushf
ret
dec
pop
ret
push
aaa
aaa
pop
mov
std
sub
or
cwtl
repnz
mov
jb
leave
mov
test
push
rorb
add
loop
sbb
add
or
mov
aas
xlat
or
add
add
add
add
xchg
xchg
mov
pop
push
inc
push
mov
in
fisttps
jb
jge
lods
movsl
inc
push
leave
pop
out
inc
xlat
add
cmpsb
sbb
shl
add
test
dec
pushf
fldcw
mov
and
js
inc
dec
out
addr16
jle
xor
pop
push
shl
cmpsb
ljmp
and
mov
stc
int
les
addr16
pusha
lea
sub
out
dec
pusha
and
sub
or
call
xchg
jns
xor
in
xor
test
add
push
clc
aad
mov
dec
add
nop
int3
sbb
xchg
xchg
add
xor
mov
xchg
dec
into
add
sub
imul
jl
rolb
imul
dec
xor
and
xlat
xchg
arpl
bound
pop
adc
cli
pop
ret
cmpsb
int
cmp
add
ret
bnd
rorb
cltd
jl
fsts
add
add
add
add
xchg
jmp
in
cmp
fadds
pop
lea
out
adc
rclb
ss
std
or
dec
rcl
call
rorb
popl
add
mov
pop
scas
lea
outsl
ds
mov
pop
mov
les
cmpsl
xor
in
mov
sbbl
sbb
push
cli
inc
and
imul
and
je
test
push
push
jbe
ljmp
das
out
in
pusha
and
inc
insb
insb
andb
loope
cmpl
jns
pop
movsl
pop
mov
add
mov
mov
cld
jno
jmp
ss
sbb
movsb
dec
insb
fisubrl
xlat
addr16
push
loopne
imul
mov
in
xor
push
pop
jecxz
xor
add
add
std
aaa
mov
lret
jne
in
mov
fiadds
add
add
push
sbb
mov
ss
cmp
std
lret
and
push
xchg
xchg
sbb
xor
inc
and
mov
fldl
or
mov
in
mov
xchg
outsl
mov
or
mov
cmpsl
and
decl
jge
sub
add
add
add
mov
mov
or
dec
add
add
add
movl
add
lret
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cltd
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
test
inc
aas
inc
lea
inc
mov
mov
call
out
fisttps
jecxz
call
lea
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cltd
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
addr16
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
ss
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cltd
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
or
test
clc
testl
enter
ss
pushf
inc
decl
push
xabort
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
mov
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cltd
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cltd
lret
xor
mov
lea
xor
add
inc
dec
mov
addr16
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
cltd
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
cltd
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
mov
ret
xor
add
ss
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
ss
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
pushf
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
inc
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cltd
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cltd
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
nop
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
jmp
mov
jle
inc
nop
in
inc
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
leave
add
and
inc
jne
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
jmp
jge
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
cmc
or
out
mov
pop
push
cmp
sar
incl
inc
in
jle
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
mov
mov
push
insb
push
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
ss
lea
mov
fadd
dec
lds
out
inc
lea
inc
dec
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
jmp
addb
mov
sub
add
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
jmp
push
jmp
addl
mov
inc
out
add
mov
outsb
inc
jle
idivb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
inc
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
std
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cwtd
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
jmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
add
lea
push
rolb
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cltd
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jae
add
mov
mov
data16
inc
lea
test
inc
dec
test
pushl
jnp
mov
mov
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
ss
pushf
inc
mov
hlt
test
cmp
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cltd
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
ss
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cltd
pushf
xor
jne
mov
icebp
icebp
shl
mov
inc
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
testb
dec
mov
mov
xor
mov
in
jge
mov
dec
inc
xor
inc
hlt
ss
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
ss
fdivl
test
push
add
cmp
setns
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
call
jne
mov
inc
and
fs
bswap
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
sti
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cltd
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
jle
popa
data16
into
addr16
add
cmp
add
cld
add
cmp
pop
or
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
decb
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
cmp
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
cmp
add
data16
dec
fisttps
add
ret
lea
add
ss
call
clc
inc
shll
cltd
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cltd
cltd
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cltd
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
ss
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
ss
pushf
pop
mov
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
incb
cmp
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
ss
pushf
push
movl
inc
cmpb
pushf
addr16
shl
dec
xchg
jmp
aam
test
mov
or
add
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
ss
pushf
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
clc
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
dec
pushf
mov
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
mov
push
ret
call
call
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cltd
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
leave
call
call
in
jmp
and
call
pushf
inc
mov
pop
push
in
ret
and
mov
and
mov
or
lcall
or
decl
jl
adc
dec
cmp
mov
and
xor
test
jge
push
jmp
adc
dec
pop
ret
push
jmp
mov
add
adc
or
add
add
adc
std
dec
adc
outsb
adc
sahf
xor
add
adc
fs
add
inc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
inc
add
adc
adc
add
push
adc
roll
int
adc
mov
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
push
adc
sbb
adc
mov
dec
adc
inc
or
add
adc
mov
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
imul
sahf
push
adc
jle
adc
jbe
adc
cmp
add
adc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
adc
dec
dec
adc
dec
popa
adc
adc
add
push
adc
hlt
pop
adc
dec
pop
adc
ja
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
push
xor
cmp
push
add
push
xor
xor
push
add
inc
pop
dec
push
push
add
pop
aaa
xor
xor
inc
pop
add
cmp
push
cmp
add
cmp
cmp
pop
inc
dec
inc
push
add
xor
xor
inc
xor
xor
xor
dec
xor
add
inc
pop
ss
pop
inc
push
dec
add
push
pop
inc
push
push
push
dec
add
inc
pop
xor
push
pop
pop
xor
push
push
pop
xor
push
dec
xor
xor
xor
inc
pop
pop
xor
push
dec
push
xor
pop
push
xor
inc
add
push
cmp
pop
inc
xor
aaa
xor
pop
inc
cmp
dec
pop
dec
add
pop
push
push
aaa
dec
pop
xor
dec
dec
add
xor
push
pop
push
inc
inc
inc
add
inc
cmp
push
push
pop
dec
inc
push
pop
inc
add
inc
pop
push
inc
pop
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
add
add
add
add
inc
add
dec
add
add
inc
add
add
xor
xor
pop
add
xor
dec
add
pop
add
add
dec
add
add
dec
add
dec
add
xor
xor
pop
add
inc
add
add
push
add
add
pop
add
xor
add
add
dec
add
add
pop
add
pop
add
add
add
add
xor
xor
pop
add
pop
add
pop
add
add
add
dec
add
add
add
push
add
pop
add
xor
inc
add
add
add
add
cmp
push
add
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
push
clc
mov
sub
mov
pop
xchg
add
inc
sbb
add
push
cmp
jne
insl
dec
jb
pop
bound
gs
arpl
js
je
jno
jno
bound
jo
bound
