push
mov
sub
push
add
push
adc
push
adc
xor
sbb
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
push
mov
pop
push
call
push
andl
push
push
push
push
xorl
push
sbbl
call
push
addl
push
push
push
sbbl
push
push
push
incl
call
addl
dec
movl
jne
push
sbbl
push
push
andl
call
test
je
mov
adc
imul
mov
mov
movl
mov
movl
cmp
jne
addl
movl
pushl
subl
pushl
andl
pushl
xorl
call
mov
mov
or
mov
xor
mov
mov
sub
movl
lea
xor
mov
lea
mov
addl
mov
mov
adc
mov
mov
add
mov
mov
xor
mov
xor
mov
adcl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
xor
add
mov
xor
mov
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
mov
or
mov
xor
add
or
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
or
adc
mov
xor
xor
mov
sbb
mov
xor
mov
mov
mov
sub
mov
orl
mov
movl
add
mov
xor
add
mov
add
mov
andl
mov
adcl
xor
xor
sbbl
add
movzbl
and
mov
xor
lea
cmp
ja
or
mov
mov
xor
mov
sbbl
xor
andl
lea
subl
push
sbb
mov
xorl
xor
lea
orl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
mov
andl
pushl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jb
xor
lea
mov
mov
decl
xor
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
movzbl
sub
mov
mov
xorl
xor
lea
mov
cmp
movl
jbe
add
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
mov
xor
mov
sub
andl
xor
mov
not
mov
movl
cmp
movl
jne
addl
lea
andl
mov
lea
addl
mov
mov
xorl
test
movl
je
adc
mov
mov
mov
sub
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
sub
cltd
mov
mov
mov
or
add
mov
adc
andl
subl
xor
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
mov
dec
mov
jmp
not
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
negl
add
mov
mov
movl
adcl
xor
addl
mov
mov
xor
movl
mov
cmp
movl
jne
mov
mov
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
negl
mov
movl
mov
andl
xor
add
movl
adc
andl
xor
addl
xor
movl
cmp
movl
jne
cmp
jne
mov
addl
mov
andl
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
addl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
xorl
add
movl
jmp
movl
mov
movl
cmp
je
mov
mov
orl
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
movl
mov
mov
mov
adcl
pushl
addl
mov
pushl
addl
add
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
mov
mov
orl
pushl
call
mov
mov
movl
mov
movl
jmp
adc
mov
sub
mov
andl
xor
subl
add
cmp
jne
add
mov
movzwl
sbb
mov
adcl
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
andl
push
xor
movl
add
xorl
push
xorl
push
andl
pushl
adcl
pushl
sbbl
call
add
mov
mov
sub
mov
or
mov
sub
mov
adc
mov
xor
mov
sub
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
incl
mov
mov
mov
mov
mov
mov
mov
sbb
movl
mov
xor
decl
add
mov
sbb
mov
mov
or
mov
mov
and
mov
mov
push
sbb
pop
orl
sub
add
xorl
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
mov
lea
lea
xor
cmp
jne
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
mov
movl
movl
movl
movl
mov
mov
mov
andl
mov
movl
mov
mov
xor
mov
orl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
xor
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
inc
ret
push
mov
push
movl
movl
mov
addl
mov
add
xor
cmp
movl
jne
add
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
xorl
push
adcl
push
addl
push
push
andl
lea
push
push
adcl
call
push
call
sub
movl
xorl
movl
mov
mov
xor
mov
xorl
add
mov
sbb
mov
test
je
mov
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
add
movzbl
and
xchg
sbb
mov
movl
sub
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
add
mov
sub
mov
sub
xor
add
mov
sub
mov
mov
xor
xor
add
add
mov
movzbl
sbb
mov
mov
adc
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
or
mov
orl
sub
addl
lea
xor
andl
xor
movl
cmp
movl
je
sub
mov
xorl
xor
adcl
add
cmp
jne
orl
pushl
call
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
inc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
add
cmp
movl
je
adcl
pushl
addl
pushl
negl
call
mov
xor
mov
add
mov
subl
xor
subl
add
cmp
je
or
mov
mov
adc
mov
mov
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
jmp
or
xchg
xchg
pushf
cmp
jl
jl
pop
jl
adc
and
imul
xor
fsubp
push
dec
imul
bound
iret
pop
dec
and
dec
jg
jb
jg
movsb
cmp
ljmp
cld
push
jg
in
cmp
mov
mov
mulps
fldl
lock
sub
dec
push
sub
mov
test
jmp
lret
sbb
jp
arpl
lcall
xor
cmpb
jae
fsubrl
push
jecxz
mov
mov
out
push
dec
push
and
cmp
lods
dec
int3
cmpsl
xor
push
pop
std
push
pop
movsl
stc
push
cli
inc
push
pop
jl
sub
and
fbstp
adc
jl
cmp
cltd
or
dec
cmp
mov
xlat
push
insb
mov
mov
xchg
mov
bound
ss
sbb
mull
xchg
inc
inc
movsl
mov
pushl
repz
data16
orb
das
leave
cmp
jmp
iret
fwait
sub
addr16
nop
fcmovne
mov
scas
insb
sbbl
das
cwtl
jo
push
sub
icebp
or
inc
cltd
dec
mov
push
cwtl
fs
popa
xchg
jl
push
aaa
mov
and
add
stc
fnstenv
test
cltd
sbb
add
mov
pushf
fildl
jecxz
or
adc
sbb
sbb
push
je
cmc
lret
push
jnp
lea
push
clc
leave
push
je
packuswb
mov
rol
push
adc
sub
ss
clc
or
push
sbb
bound
sbb
lea
mov
jo
addl
adc
cs
rolb
loop
or
push
cmp
mul
add
outsl
adcl
xchg
iret
or
popa
mov
int
dec
push
inc
icebp
mov
xchg
sbb
or
sahf
mov
inc
mov
addr16
and
add
aas
mov
pop
fisttpll
out
push
lods
inc
sbb
sub
and
enter
addr16
cmp
test
sub
push
pop
stos
jae
dec
add
outsl
outsl
xor
fsubl
pop
jmp
in
jl
jo
hlt
jl
pop
add
and
adc
testb
push
xchg
imul
pushf
int
mov
mov
inc
cld
test
inc
pop
pop
and
inc
push
pop
add
sti
enter
in
in
and
push
adc
into
sbb
outsl
out
inc
cli
je
push
es
jo
cwtl
repnz
fs
hlt
and
jg
pop
mov
mov
stos
or
mov
pop
repz
popf
repz
xchg
or
or
jg
jne
inc
aaa
xchg
inc
pushf
jnp
sub
fwait
mov
mov
lahf
inc
lret
aad
dec
rcll
dec
push
rorb
pop
stos
stc
andl
push
aas
push
mov
push
es
sbbw
dec
outsb
xor
sbb
adc
popa
loop
imul
std
stos
dec
jns
int
aaa
add
loop
in
fstl
or
idivb
and
push
mov
lret
lret
xchg
ffree
or
pop
xchg
movsl
fdivrs
cmpsl
lock
or
and
mov
addb
mov
ja
xor
jne
sub
fs
adc
sub
pop
jae
pop
or
sub
inc
sbb
pop
addb
fisubl
fistl
fwait
mov
scas
jns
push
fdivl
sti
push
lea
mov
mov
jmp
push
push
lret
cmpsl
xor
test
add
cmpsl
inc
jge
out
jbe
inc
cltd
sbb
in
in
mov
addl
xchg
mov
fcmovu
pushf
xchg
scas
mov
lcall
jb
aad
add
add
idivb
cli
out
mov
popa
int3
sbb
movl
or
mov
out
cwtl
ss
mov
incl
adc
mov
into
mov
loopne
xchg
popa
ret
mov
xor
lahf
mov
xor
fstpt
es
imul
sbb
enter
mov
flds
in
testb
ret
mov
ljmp
pop
push
fiaddl
jmp
idivb
mov
je
inc
jns
mov
sub
mov
mov
imul
cmc
mov
dec
sub
negb
mov
xor
sbb
js
enter
mov
xchg
mov
or
nop
in
stos
push
shl
cmp
xor
add
pop
subb
in
jns
mov
xchg
test
mov
lahf
addr16
out
mov
cmp
jo
sbb
fdivp
jg
mov
xorl
mov
cld
nop
sub
inc
dec
sub
dec
xchg
mov
fwait
adc
mov
sub
push
out
mov
jb
cmpl
or
inc
sbb
imul
stc
jmp
aam
push
out
sbb
adc
cli
mov
cmp
cwtl
sub
sub
dec
push
arpl
pop
adc
lahf
adc
push
mov
mov
xor
pop
mov
aad
sbb
and
adc
jae
jno
sbb
bound
push
xor
jno
loope
lock
fmull
idivb
mov
cmpsb
das
test
popf
push
xchg
nop
ret
xchg
xchg
mov
push
stos
call
cltd
ret
add
xchg
push
mov
loop
scas
or
mov
inc
mov
sub
into
jne
xchg
dec
push
and
lret
fsts
cmp
mov
lods
xchg
inc
ficompl
jno
aad
mov
pusha
rolb
push
fsubl
xor
lods
lret
jp
sbb
mov
push
insw
jl
ja
lock
add
jnp
jle
and
lret
rolb
sub
call
mov
push
jae
shlb
orb
inc
js
cmpsb
mov
sti
sbb
pop
jge
cmc
jge
insl
lods
mov
popf
les
sub
gs
scas
dec
mov
cs
movsl
into
jae
add
stc
repnz
sub
mov
aas
addr16
mov
xor
rcrl
ret
setnp
push
std
push
aad
add
insb
dec
jo
subl
aas
pusha
addr16
adc
loop
pop
dec
add
jae
stos
test
out
cs
movsb
cmp
cmp
xchg
inc
cmp
xor
or
pop
inc
mov
dec
adc
push
rcll
xchg
adc
mov
sbb
cmp
bound
inc
mov
xor
mov
and
push
pop
lret
pop
test
xchg
in
jg
andl
imul
push
enter
xor
test
movsb
or
xor
mov
mov
in
fistpl
push
inc
imul
pushf
cmp
jbe
in
dec
jmp
mov
jbe
dec
mov
fdivrl
xchg
adcl
add
add
mov
jmp
push
xchg
outsb
inc
mov
cmp
or
outsb
repz
mov
bound
shll
bound
dec
mov
dec
jbe
inc
inc
ja
ret
jecxz
xor
mov
jae
push
jo
jns
pop
sbb
scas
sti
jnp
mov
mov
mov
pop
sub
ljmp
icebp
sbb
cmp
add
mov
mov
lock
pop
xchg
in
fwait
das
ret
or
gs
in
fidivl
sbb
pop
xchg
push
xor
repz
shlb
in
xor
test
jbe
hlt
mov
push
ds
dec
jmp
ret
cmp
idivb
push
or
or
sbb
or
sbb
stos
pop
jg
loop
fs
jecxz
push
xlat
call
pop
mov
popf
dec
mov
push
xor
imul
cmp
aad
outsb
add
xchg
sti
mov
xor
popf
pop
pop
pop
or
idivb
jle
in
dec
xchg
cmpsl
int3
leave
sti
pop
sti
mov
jb
xchg
xlat
adc
sub
ret
jae
rcr
mov
push
sub
dec
inc
xchg
addr16
sub
inc
cli
iret
jbe
aaa
test
mov
mov
mov
fildll
adc
loop
pop
loope
insl
stc
dec
add
fcmovbe
sarl
fs
or
xor
mov
xchg
daa
jb
les
loope
adc
es
push
sub
or
stc
jle
andb
mov
dec
repz
mov
pop
inc
xchg
loope
mov
mov
popa
jne
push
sub
fcoms
sbb
jge
lock
sbb
xchg
xor
xchg
pusha
mov
mov
shll
lret
xor
into
push
stc
aad
cmp
jns
movsl
rorl
adc
push
lea
or
pusha
rcrb
div
mov
jo
gs
mov
cmc
or
cmp
jae
xor
jae
in
mov
adc
mov
in
push
test
inc
popf
and
xchg
mov
scas
cmpsb
std
cwtl
dec
mov
int3
cmp
insl
sub
add
dec
into
lcall
dec
xor
jl
jge
and
push
push
xchg
jae
ljmp
insb
xchg
sti
mov
or
adc
push
iret
insl
pop
push
stos
aad
ds
push
jne
inc
dec
loop
loop
std
sar
add
fists
mov
lods
mov
jno
insb
sub
cmpsl
jbe
movsl
mov
add
cmp
data16
rcll
sub
decl
cld
adc
lods
js
mov
dec
jecxz
sub
dec
or
in
inc
lds
addr16
sbb
iret
arpl
nop
cmp
cmc
xor
mov
push
xor
xchg
test
jl
out
div
add
xor
xchg
adc
inc
cmp
in
test
imul
mov
imul
test
cmp
fildl
out
lock
scas
out
push
das
addr16
adc
jo
into
pop
push
cld
incl
mov
repnz
sbb
in
and
stos
adcl
lods
lahf
pop
adc
xor
jp
enter
gs
loopne
sbb
movsl
stos
loope
inc
add
cmp
cmpsl
cmpsl
or
mov
popa
test
pop
xchg
add
scas
sti
push
gs
sub
popa
sub
out
lcall
scas
mov
adc
mov
lods
inc
jne
sbb
test
mov
dec
stc
dec
xor
or
int3
cmp
or
fcmovb
adc
aas
sbb
scas
popf
aam
xor
dec
mov
mov
call
into
jle
jb
adc
bound
pop
sub
sub
sub
xor
test
adc
cli
pop
jmp
stc
aad
jg
insb
icebp
pop
call
adc
add
adc
mov
adc
test
icebp
pop
xchg
lock
mov
decl
lea
in
stc
and
test
jns
mov
mov
push
sub
push
adc
sub
sub
inc
jbe
xor
or
mov
addr16
push
dec
xchg
repz
in
push
push
fwait
push
and
mov
fisttps
push
cmp
cmp
jb
fisubrl
je
fldenv
pop
mov
xchg
insl
pop
sbb
xchg
es
fs
adc
sub
aad
into
inc
or
cmp
lods
data16
pop
lock
adc
cmpl
repz
cmp
push
divl
jo
mov
push
pop
push
out
and
test
sub
fiaddl
and
rcrl
push
fldcw
xor
fmuls
xchg
dec
dec
sub
jmp
sub
shr
inc
in
repz
cmpsl
inc
pop
lret
push
in
add
inc
in
sub
dec
les
jne
loop
jp
inc
adc
and
push
adc
loop
xorl
icebp
inc
mov
push
mov
cmc
xlat
cmp
lahf
or
or
sbb
mov
jge
pop
ret
lahf
roll
sahf
insb
jmp
push
or
xor
adc
imul
call
fsts
or
pop
loop
mov
hlt
push
pop
jns
dec
and
test
movsb
mov
daa
addl
bnd
mov
leave
divb
xchg
test
sbb
scas
or
mov
pop
lods
pop
out
negl
mov
inc
mov
loopne
jp
std
jmp
cli
xchg
aam
mov
pop
ds
mov
adc
push
or
repz
and
repnz
ja
xor
out
loop
test
icebp
mov
push
sub
jae
fsubl
test
pop
dec
sti
cmp
xchg
and
clc
scas
cld
scas
push
sub
adc
pop
xchg
xchg
ja
aad
stc
push
fdivs
lret
fistl
notb
inc
pop
rcr
mov
mov
lds
inc
aas
arpl
xchg
sbb
or
lods
pop
std
call
inc
cmp
mov
or
push
jp
les
inc
scas
call
mov
es
pop
iret
sub
lahf
ja
mov
mov
pop
test
cmpb
add
stc
fwait
xchg
jge
fwait
mov
pop
mov
subl
xor
je
add
sbb
rclb
into
xchg
xchg
fmuls
dec
out
mov
or
test
ret
lods
mov
imul
data16
rolb
dec
cs
mov
pop
mov
lcall
mov
pop
cli
sbb
push
mov
shrd
cltd
mov
or
add
test
sbb
mov
xor
test
xchg
divl
std
adc
pop
iret
je
push
test
shrb
cld
test
xor
xor
push
jg
adc
sarl
sub
or
stos
push
loopne
mov
bound
push
fucomp
pop
mov
and
add
test
and
xor
out
jb
imul
add
inc
jbe
xchg
inc
and
mov
xchg
mov
aaa
imul
repnz
sarb
fs
frstor
push
rorl
push
xchg
scas
and
int
jle
adc
push
sbb
arpl
negl
ljmp
in
push
out
or
mov
jecxz
xor
ret
in
cmp
cmp
mov
stc
js
jge
jno
or
jne
jle
or
aas
and
sarb
mov
and
rcr
in
mov
mov
cmpsl
int3
mov
xchg
frstor
add
xchg
lahf
pop
enter
ficoml
pop
loope
mov
and
xor
mov
mov
andl
and
fnstcw
mov
lock
imul
xlat
xchg
gs
xchg
sahf
xchg
mov
jl
add
lahf
mov
cmp
inc
inc
xchg
jp
mull
mov
push
fdivs
sub
fnsave
fcomip
shr
data16
fs
popf
outsl
xor
ficoml
push
test
arpl
mov
mov
adc
mov
push
and
cwtl
andb
jo
scas
xchg
std
jb
fidivrl
cltd
xchg
and
mov
lahf
and
scas
scas
ret
dec
enter
xor
ja
ret
cmc
xchg
lret
jmp
icebp
das
or
or
sub
sub
mov
sti
lahf
xor
int3
sahf
adc
aaa
pop
xor
lods
insl
pop
mov
sub
sub
bound
insl
ret
insl
mov
popf
or
fst
jae
jb
iret
ss
inc
pushf
hlt
enter
lds
xor
mov
xchg
push
gs
pop
cli
pop
xor
pop
mov
cmpsb
or
mov
inc
dec
out
sbb
mov
xor
and
imul
adc
pop
out
jnp
hlt
jecxz
push
call
mov
sbb
mov
dec
scas
test
xor
push
lret
sub
jb
repnz
in
xor
aaa
inc
xchg
in
leave
unpckhps
and
cwtl
loopne
sti
adc
push
and
sti
inc
aaa
pop
daa
lea
daa
out
in
mov
mov
aam
test
jp
cmpsl
and
cs
fisubrl
cmp
push
ds
rcrl
mov
int3
lret
cmc
or
ja
adc
lods
inc
out
and
das
sbb
adc
call
xchg
fcmovu
and
in
xor
cs
lcall
mov
lret
or
adc
pop
fldcw
xchg
in
incb
das
sbb
test
sub
es
add
shrl
repnz
sar
mov
pop
out
pop
bound
lahf
std
adc
push
enter
xor
in
or
arpl
fs
fmull
iret
mov
xchg
xchg
fdivl
add
lret
mov
sub
mov
or
int3
dec
and
ja
dec
and
adc
ret
add
or
outsl
adc
cmpsl
mov
sbb
in
or
out
jmp
stc
push
cwtl
das
xor
mov
daa
mov
outsb
inc
out
xor
push
pop
push
push
xor
js
jg
inc
lret
jmp
cmp
inc
jnp
mov
pop
arpl
pop
fcmovnbe
call
sbb
push
lds
jne
mov
xor
mov
mov
sub
push
in
mov
dec
xor
xor
cmovne
mov
mov
jbe
fwait
dec
das
test
mov
pop
push
in
jne
pop
dec
xchg
call
movsl
dec
mov
cmp
mulps
add
sahf
pop
or
pop
xor
std
jno
inc
rcrb
push
xchg
lcall
pop
cmp
jl
jae
insl
or
in
mov
int
faddl
leave
dec
or
int3
adc
push
mov
and
shll
jb
mov
pop
andl
xor
int3
xlat
dec
cmp
popl
testl
sti
add
test
push
stos
loope
mov
scas
in
shrb
mov
mov
sbb
mov
insl
and
in
into
sub
or
xchg
pop
outsb
jno
jle
insb
add
insl
clc
jns
stc
stos
cmp
mov
ret
lahf
lods
fdivrs
xor
and
cltd
js
cmp
dec
sub
jmp
mov
cmp
test
loop
lret
cmc
inc
pop
push
push
shll
pop
pop
repnz
jmp
fwait
outsl
pusha
js
pop
cmc
sbb
out
popa
mov
jecxz
imul
xor
jp
stos
jmp
or
sti
mov
add
aas
pop
imul
sbb
shll
rclb
adc
push
push
mov
cmpl
push
sbb
iret
aas
sub
or
cwtl
jmp
push
or
lcall
int
ds
or
movsl
xlat
push
mov
inc
movsb
cld
cmp
xchg
pop
dec
out
pop
cmpsl
or
push
add
in
and
jnp
inc
sbb
sti
mov
mov
pop
mov
xchg
sub
push
scas
inc
jb
cwtl
pop
mov
push
dec
push
lret
sbb
jns
and
insl
jae
and
fstl
imul
pusha
iret
add
nop
jbe
sbb
movsb
mov
push
sbb
xor
lock
pusha
mov
icebp
jmp
pop
loop
mov
jns
cli
imul
and
outsl
push
inc
call
dec
lods
iret
iret
cltd
std
xchg
scas
sbb
lret
enter
movsb
jae
mov
insb
adc
xor
pop
xchg
ja
mov
lea
orl
inc
out
mov
aas
pop
mov
aam
sub
js
test
cmp
push
aad
mov
dec
bswap
mov
mov
or
icebp
js
adcl
and
mov
cmp
xchg
cmp
cmovns
repz
loop
incl
das
sub
or
and
mov
in
push
push
outsb
repnz
daa
out
cmp
sbb
mov
xchg
dec
cltd
roll
mov
push
fcmovnbe
pop
scas
int
pushl
or
inc
sbb
or
lret
xchg
mov
push
loop
loopne
push
or
push
pop
cld
jge
sub
mov
and
jae
push
dec
insb
mov
cwtl
jne
mov
sbb
xor
push
push
cmp
pop
xchg
adc
dec
dec
out
aam
add
jo
adc
bswap
mov
and
jp
loope
push
std
inc
and
movsb
xchg
pop
mov
add
lock
rcrl
loop
dec
lea
jae
xor
adc
insl
movsb
scas
out
rcr
sbb
and
xchg
je
inc
int3
xchg
jns
xor
in
cmpsb
or
enter
test
movsl
imul
sbb
lods
and
pop
cmp
jbe
in
push
arpl
inc
cmc
loope
sbb
adc
loopne
sub
sti
stc
idivb
adc
test
jmp
cmp
ja
cmp
aam
scas
aam
les
mov
mov
fisubrl
insb
jecxz
cmp
jg
lret
push
icebp
lcall
cmp
xor
dec
lcall
daa
int3
rclb
sub
and
pop
jo
je
xor
stos
mov
adc
push
test
pop
jmp
pop
dec
lcall
xor
sub
rorl
add
mov
data16
test
push
dec
popf
xchg
testl
xor
idivl
lret
jmp
jae
movsl
out
jle
iret
dec
scas
daa
sbb
dec
fcoms
sbb
repnz
cmpsl
dec
into
aam
mov
inc
jb
scas
sbbb
mov
imul
push
jbe
lahf
mov
shl
mul
xor
leave
pushf
fdiv
test
jge
mov
inc
jmp
lahf
movsl
dec
rorl
mov
push
imul
out
stos
xchg
hlt
adc
sub
outsb
into
dec
into
js
popa
enter
inc
sbb
sahf
sub
sbb
test
jno
pop
xor
out
rcrl
push
dec
sbb
and
addr16
mov
push
lods
les
xchg
es
cmpsl
or
mov
cmpsl
xor
rorb
lahf
sub
mov
mov
fsubs
add
mov
adc
fsubl
push
push
stos
fcmovb
push
mov
frstor
pop
dec
imul
repz
jns
leave
xchg
jge
inc
ficomps
loop
jne
sub
filds
test
inc
adc
fcoms
fnsave
pop
mov
pop
loopne
push
or
mov
stc
movsb
movsb
sbb
cmp
cmc
adc
sbb
icebp
cmp
jl
les
dec
dec
fidivrl
dec
rcr
xchg
cs
or
sbb
jp
mov
lds
ja
rol
xor
test
cs
loopne
loopne
mov
xchg
jg
adc
xor
pop
clc
cmp
push
sub
adc
sti
inc
in
test
push
push
cmpsb
push
push
es
in
mov
sbb
test
mov
mov
stos
cmp
int3
outsl
sbb
lds
dec
sub
in
je
mov
clc
jno
arpl
xchg
or
push
lret
or
mov
cs
xchg
fimull
mov
cltd
and
sub
adc
sarl
push
aad
aaa
imul
call
and
jbe
and
mov
insl
xor
mov
mov
in
fimull
sbb
fwait
inc
jb
mov
test
add
xchg
scas
add
xor
sub
sub
push
pop
lcall
cmpsb
decl
sub
ret
mov
fs
add
jno
dec
adc
sti
pop
repnz
dec
mov
in
hlt
in
mov
in
add
pop
testl
negl
outsb
icebp
out
xchg
mov
adc
cmpl
mov
cmp
aad
mov
out
pop
test
daa
xor
xor
daa
sbb
das
cmpsl
xor
repz
mov
lea
inc
mov
adc
lret
loope
shrl
jg
jmp
je
shl
pop
add
pop
andb
push
inc
jg
mov
repz
sahf
mov
stc
addl
insl
shl
cmpsl
jns
js
cmpsb
and
jl
testb
mov
mov
notb
pop
dec
sub
cmp
xchg
jne
loop
dec
add
xor
mov
push
and
repnz
inc
push
test
inc
es
mov
xor
mov
or
int3
push
cmpl
aam
mov
daa
daa
lret
jno
xchg
int
jp
cmp
sahf
popa
inc
pop
test
bound
ljmp
pop
lea
dec
inc
push
mov
xchg
ja
or
xchg
fstps
inc
jns
cmp
cltd
dec
adc
jo
sbbl
test
repnz
lret
jmp
push
mov
dec
loop
xchg
dec
push
js
ror
push
jmp
add
and
add
or
mov
lods
out
iret
mov
dec
lds
xchg
icebp
xchg
jns
fldlg2
mov
adc
lods
mov
push
arpl
out
sbb
addr16
outsb
cwtl
jo
and
add
mov
cmpsb
stos
mov
out
out
xchg
jne
pop
cmp
or
ret
mov
adc
push
lea
adc
push
ret
cli
test
or
outsl
shlb
cwtl
jnp
les
imul
lock
out
in
sbb
push
sbb
mov
sti
in
mov
push
fnstsw
rolb
sbb
outsb
sub
cmc
jno
imul
hlt
jb
clc
icebp
adc
ret
pop
out
sbb
cwtl
cs
out
push
outsl
addr16
in
inc
cs
pop
in
dec
mov
data16
mov
xor
sar
xchg
mov
enter
push
imul
pop
fcmovne
das
dec
or
test
mov
cmp
aad
mov
pop
shrb
dec
inc
mov
dec
or
mov
pusha
mov
fld
ret
sub
shlb
repnz
inc
cmp
insb
xor
inc
push
sbb
lods
inc
mulb
and
push
stc
repnz
push
inc
pop
cltd
sub
icebp
jmp
inc
push
lret
cmp
test
js
mov
or
les
sub
and
mov
pop
fcoms
lds
adc
or
into
mov
test
loope
popa
dec
shll
push
and
int3
jne
add
mov
xchg
rcll
jmp
iret
iret
mov
or
leave
adc
jns
scas
adc
hlt
leave
or
mov
pop
insl
sbb
add
lcall
add
clc
mov
idivl
inc
xor
aas
xorl
out
ficoms
mov
inc
mov
stos
cs
push
jle
adc
jnp
pop
je
lock
or
push
dec
arpl
inc
mov
cli
pop
inc
jb
cmpsb
repnz
add
test
sbb
sti
and
mov
ds
shlb
add
adc
mov
lock
pop
pop
std
mov
lods
cld
nop
notb
js
pop
mov
mov
push
sub
sahf
rorl
and
pop
inc
inc
fstps
movsb
jecxz
sub
and
push
mov
andl
mov
cld
rol
enter
daa
sub
or
inc
ja
mov
push
rorl
enter
addb
jecxz
dec
cld
sbb
popf
in
push
add
lcall
movsb
insl
insl
xchg
leave
fbstp
jp
xchg
dec
mov
or
pusha
pop
test
sbb
push
pop
fidivl
add
adc
dec
and
int3
xor
mov
std
sbb
sub
out
dec
popl
cmpl
jns
adc
push
jge
rol
jecxz
cmp
sub
ficompl
add
cmp
pop
into
or
lcall
imul
push
dec
sahf
push
add
xor
sbb
adc
iret
cli
pushf
push
lea
rcll
rcrl
push
push
imul
test
cmpb
mov
insl
inc
or
movsb
cmp
and
jnp
int3
gs
add
and
or
mov
in
jg
jge
mov
arpl
jo
ret
sbb
pop
jns
mov
in
outsb
adc
lods
dec
nop
push
xor
pusha
les
jnp
xor
stos
out
lock
cmp
jnp
frstor
pop
jmp
mov
inc
jne
aam
and
sub
pop
pop
adc
data16
pop
add
setp
sbb
ljmp
and
sahf
fisttps
add
in
ss
out
in
pop
mov
testl
test
loopne
arpl
lock
lret
mov
jl
add
adc
sub
xorb
shrb
push
mov
mov
lcall
push
xchg
lret
call
sbb
cmp
mov
jne
icebp
push
enter
dec
mov
testl
fsubrs
into
aaa
mov
push
cmp
mov
cmp
xchg
outsb
popf
mov
mov
mov
loope
xchg
dec
push
sbb
rcr
pop
push
stos
cwtl
push
imul
mov
inc
clc
push
stos
and
sbb
inc
insl
scas
fimuls
cli
adc
jge
addr16
jae
mov
mov
icebp
and
int3
cld
and
mov
roll
add
test
push
push
and
xchg
cmp
fimull
adc
out
jge
jns
movsb
xor
divl
sub
mov
push
lods
pop
mov
in
add
pop
lret
fistps
push
shll
gs
setle
test
mov
mov
sbb
jnp
in
adc
cmc
aam
xlat
int
mov
adc
jo
out
call
cmp
xlat
mov
mulps
mov
mov
push
cld
movsb
push
incl
push
dec
xchg
adc
cwtl
sahf
mov
push
push
lret
mov
fsubrs
loopne
inc
stos
lods
push
stos
leave
mov
ret
xchg
lret
push
xor
xchg
gs
aaa
cmp
fwait
paddusw
test
mov
mov
shlb
ja
and
es
mov
fiaddl
out
xor
xor
sti
mov
ljmp
sbb
shlb
outsl
lahf
jecxz
jl
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
movl
xor
or
mov
and
lea
mov
push
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
lea
mov
or
mov
and
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
addl
mov
add
sbbl
push
xor
mov
mov
movzbl
sub
mov
mov
adc
xor
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
movl
cmp
movl
jne
push
jmp
mov
movzwl
mov
cmp
jne
mov
incl
xor
add
mov
adcl
mov
mov
xor
sbbl
add
imul
and
mov
andl
xor
add
cmp
movzbl
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
jmp
imul
stos
sbb
jne
loopne
jl
dec
pop
jl
lea
pop
out
loop
mov
mov
xchg
and
pop
jnp
stos
cmp
loope
into
sarl
mov
sbb
lods
data16
das
out
cmp
fistps
or
insb
cltd
jp
mov
xlat
adcb
push
pop
mov
mov
mov
repz
sub
add
sbb
scas
ljmp
out
pop
insl
adc
inc
aas
push
cmp
add
sar
fdivp
mov
mov
aam
aas
mov
and
sbb
dec
adc
leave
add
out
or
and
jbe
cmp
dec
lret
xchg
push
mov
test
dec
mov
popa
jge
arpl
mov
jmp
dec
xlat
xchg
sbb
mov
out
xlat
mov
test
movl
int
ss
xor
movsl
jno
rclb
cmp
call
aam
sub
fsub
lret
jle
scas
mov
inc
push
pusha
xchg
and
jmp
hlt
or
or
cli
pop
out
push
ja
mov
pop
push
hlt
push
mov
jl
ss
fsts
push
or
call
into
pop
mov
fcomip
fwait
push
pop
pop
sbb
mov
add
bound
jbe
push
cmp
sbb
xchg
loope
addl
icebp
imul
adc
dec
push
shll
adc
iret
jb
xorl
bound
adc
adcl
hlt
xchg
pop
into
test
add
dec
outsb
pop
adc
cmp
leave
addr16
cmp
mov
mov
fs
mov
add
test
xchg
inc
jne
mov
cwtl
iret
test
in
test
bound
sar
je
inc
out
xor
jg
dec
cltd
das
adcb
jbe
dec
sti
aam
mov
loope
push
arpl
testb
insb
fidivrs
fbld
sub
xchg
fistl
mov
sbb
cmp
and
pop
mov
stos
sarb
push
outsb
xor
js
in
pop
pop
dec
push
cmp
test
mov
test
mov
inc
imul
test
push
sbb
mov
xor
lods
fisttpl
sbb
or
add
adc
shl
int
add
inc
ret
cmp
rorb
add
gs
push
xchg
unpckhps
mulb
dec
insb
jg
mov
sub
xchg
sbbl
ds
pop
data16
flds
cltd
int
aad
ret
xchg
sub
out
lret
and
dec
add
and
dec
dec
mov
mov
sbb
and
xor
pop
jo
mov
outsb
loopne
cld
mov
mov
insl
das
push
aad
cmp
push
sub
mov
fisttpl
ss
xor
insb
xchg
add
or
xor
negl
call
mov
mov
scas
gs
call
pop
mov
dec
scas
popl
jg
fmuls
ret
sysexit
into
sti
jg
adc
fists
ss
mov
and
push
aam
cmp
cltd
pop
int
or
cs
push
mov
push
adc
imul
add
mov
fistps
xor
inc
inc
mov
pop
sti
out
fldt
and
ljmp
idiv
fsub
ret
or
das
add
out
in
inc
or
sbb
inc
out
fldl
data16
push
stos
stos
jp
pop
push
ja
hlt
sub
cmc
iret
or
adc
mov
scas
add
int3
push
push
in
jp
pop
fistl
pop
cmpsl
cmp
cltd
mov
cmpsl
mov
push
out
jns
add
pop
adc
xor
test
cmp
lods
aaa
push
into
shlb
jno
or
and
jne
daa
fmuls
dec
and
sub
pop
jne
mov
cmp
popa
or
adc
jbe
push
adc
or
mov
fldt
jl
loope
sbb
lock
sbb
mov
mov
pop
fadds
xlat
scas
testb
and
sub
xchg
cmp
pop
sub
mulb
sbb
mov
ret
mov
outsb
out
mov
xor
push
in
rclb
stos
jo
clc
inc
jns
gs
addl
push
mov
cmp
add
xchg
jle
sbb
icebp
rcll
idivl
lock
push
repnz
in
out
and
pop
cltd
loopne
enter
sbb
loopne
and
sahf
mov
cs
xor
scas
loope
pop
shl
mov
jecxz
jmp
pop
int
sti
and
xor
in
push
pop
jbe
adc
jne
out
ret
insl
icebp
fisubl
sbb
clc
shrl
inc
cmp
jne
cmpsl
stos
lea
mov
push
cmc
fstps
movsb
jo
and
sbbb
push
loopne
in
arpl
mov
addr16
dec
ffree
stc
cmpsl
inc
lock
sbb
mov
jecxz
sub
aas
xor
ror
mov
or
dec
cltd
pop
pop
lret
insl
push
pop
adc
idiv
sbb
push
push
dec
pop
in
icebp
adc
jb
fs
add
ds
test
mov
or
jg
xchg
add
outsl
fsts
icebp
xchg
mov
add
fdivs
dec
mov
shrl
sub
bound
loope
outsb
pop
or
mov
test
shlb
mov
loope
mov
repnz
adc
leave
daa
fnstsw
lret
popa
push
repnz
mov
fadds
scas
sub
jge
mov
pop
push
pop
jp
and
xor
fidivs
cld
hlt
jg
jb
sbb
add
movsb
sbb
and
or
and
mov
rclb
xchg
sbb
dec
jns
xlat
and
mov
or
pop
dec
xchg
mov
outsl
adc
ret
out
fwait
mov
inc
push
inc
in
stc
fldenv
add
pushf
lods
pushf
jp
sub
out
imul
fs
cwtl
jo
xor
mov
sahf
cwtl
sbb
sbb
jbe
fcoml
cmp
mov
inc
mov
inc
mov
scas
xchg
lret
jo
in
in
xchg
out
loope
ret
insb
inc
xorb
and
add
sbb
jge
mov
and
add
mov
sbb
lret
mov
jno
jg
pusha
pop
sbb
add
jp
fdivp
inc
mov
jecxz
dec
mov
cmp
and
ljmp
sub
cmpsl
pushf
hlt
sarb
loope
cmp
rcll
mov
push
mov
stos
xchg
add
outsb
imul
arpl
push
mov
arpl
xchg
sbb
push
arpl
xchg
xor
xor
jecxz
push
mov
push
push
out
int3
flds
xor
call
or
jae
lahf
add
dec
push
xor
popa
outsl
push
push
addr16
lock
push
lcall
mov
mov
cmp
dec
cmp
in
rcll
fmulp
orl
outsb
cmpl
fbld
adc
inc
in
or
outsb
pop
mov
mov
mov
movsb
adc
pop
dec
push
fldl
repz
iret
addl
push
sti
iret
pop
enter
lret
scas
xor
sarb
outsl
pop
sbb
xor
xchg
outsl
cltd
mov
loop
int
or
iret
cmp
mov
int
mov
insb
xor
ror
jne
fwait
cmp
mov
mov
sbb
push
shrl
sbb
mov
sti
cld
dec
mov
stos
call
fisttps
sbb
sbb
lcall
mov
test
inc
in
cmc
lds
fsubl
clc
xchg
adc
jae
mov
mov
xchg
xchg
jle
mov
push
push
pushf
aas
mov
mov
sbb
scas
adcb
add
negb
or
stos
pop
lret
imul
pop
and
and
jmp
dec
jne
or
cld
movsb
test
xchg
mov
push
aam
inc
xlat
lods
out
push
loope
sahf
out
inc
dec
adc
dec
outsb
movsl
mov
sub
pop
ds
add
add
rcr
cs
mov
or
jle
mov
or
xchg
scas
pop
icebp
daa
push
cmpsb
mov
jmp
shlb
into
dec
bound
mov
xor
ja
mov
ss
iret
jne
xchg
ss
js
mov
mov
js
push
mov
repnz
pop
push
and
push
testl
pop
stc
mov
lock
pop
or
ret
xor
fistpll
cmpsb
in
fwait
in
xor
xchg
dec
cmc
dec
xchg
loop
addr16
xchg
dec
dec
mov
sbb
loopne
cmp
jns
cs
lret
daa
cs
cmpsl
sbb
js
mov
test
jl
test
cs
outsl
idivb
sar
add
and
ljmp
out
in
push
popf
lock
push
jle
adc
lcall
sub
jne
sub
push
in
mov
jb
leave
xchg
xor
jne
lahf
es
adc
aam
sub
icebp
xor
cmove
nop
aad
xor
sbb
push
dec
ss
sbb
repz
jb
movsl
cmpsb
sahf
dec
add
inc
idiv
xor
repz
movsl
cld
xchg
adcb
fidivrs
hlt
lods
aam
data16
mov
icebp
sbb
repnz
stc
dec
dec
ficoml
and
push
mov
stos
lcall
rcl
mov
add
push
and
out
sbb
inc
jbe
cmp
cli
dec
je
and
data16
clc
jno
movsl
push
cmpb
lea
jno
xchg
inc
lods
arpl
and
pop
cmp
cmp
test
jp
sbb
cmp
mov
push
xlat
xchg
push
je
leave
clc
cmp
aaa
aas
jl
arpl
push
xor
bts
jb
andl
sbb
pop
in
lods
cmp
and
mov
jmp
push
xchg
cmp
adc
xor
and
nop
xor
test
dec
sub
add
push
push
cmpsb
push
jmp
sub
jmp
shrl
push
push
sbb
cmpsb
mov
xchg
test
sbb
mov
adc
fidivrs
repz
and
cwtl
scas
fs
mov
iret
pop
out
xor
std
fs
icebp
pop
dec
mov
or
lods
lcall
mov
and
xchg
inc
jae
das
scas
mov
pop
scas
sarl
push
nop
cmp
jle
ss
inc
rolb
movsb
test
xor
and
cli
adc
repz
mov
inc
dec
and
mov
sub
in
mov
push
pop
or
push
sbb
repz
jecxz
mov
dec
lock
and
movsb
mov
mov
arpl
mov
repz
jne
int
and
xor
push
xchg
popf
pop
sahf
cmc
insb
xor
adc
gs
stc
add
add
movsb
jp
lret
pop
adc
int3
adc
adc
mov
xor
rep
bnd
fnstsw
arpl
rorb
popf
jp
adc
mov
xchg
pop
cmp
jnp
jl
popa
push
cld
jae
pushl
js
movsl
adc
jge
rcrb
inc
mov
mov
daa
sub
mov
imul
lds
ljmp
psrad
and
mov
sub
sahf
std
rcl
jmp
sub
inc
loopne
dec
or
push
xchg
push
mov
lret
stc
xchg
cmp
scas
test
js
iret
pop
bound
lea
xor
jg
sahf
ds
mov
push
sub
inc
into
push
inc
push
cld
gs
sub
jmp
rcrb
mov
stos
fists
push
and
test
xchg
and
daa
ficompl
xchg
popa
sub
xor
mov
mov
enter
pop
ljmp
call
sbb
fidivl
jo
xchg
cmpsb
shll
add
xchg
and
adc
push
mov
bound
cmpsb
add
mov
sub
icebp
roll
dec
inc
xor
stc
push
shrl
flds
dec
pop
inc
inc
inc
add
cwtl
add
push
je
inc
sbb
mov
mov
loopne
cmc
inc
fimull
sbb
mov
xchg
xor
adcb
cli
pop
xor
daa
pop
ja
mov
mov
and
push
cmpsb
leave
xchg
stc
pop
mov
mov
sub
popa
fcmovnbe
and
inc
adc
xorps
pextrw
cltd
rcrl
andl
cmp
nop
notb
inc
cmp
shrl
jg
mov
into
mov
jae
mov
fiadds
mull
lock
lcall
lds
push
mov
out
dec
ret
pop
sub
adc
xadd
jp
imul
xor
cltd
mov
es
cmp
sbb
sar
cwtl
add
jbe
cmp
jno
xchg
mov
mov
pop
ss
movsb
or
mov
stos
nop
sarl
jl
jmp
xchg
lret
mov
test
test
lods
out
test
pop
das
mov
clc
sub
lahf
subl
xchg
vpunpckldq
pop
push
and
xlat
adc
xor
sub
mov
fbstp
ret
enter
push
jo
xlat
insb
fistpl
mov
lcall
addr16
lods
jne
fwait
lods
mov
push
fildll
stc
shlb
ret
mov
mov
decb
popa
push
sbb
jmp
dec
jae
jecxz
mov
sahf
movsl
adc
stos
cmp
add
xor
dec
sarl
jmp
fldenv
fcmove
es
shll
push
push
fs
lcall
pop
stc
mov
in
push
mov
lods
in
xchg
repz
push
mov
or
jg
les
xchg
movl
mov
push
test
add
or
mov
idivb
arpl
mov
mov
mov
jl
jo
or
cmc
xchg
mov
out
jnp
pop
and
and
fiaddl
divl
or
jns
cwtl
bound
out
loopne
neg
pop
fldcw
or
jmp
dec
inc
add
lret
pop
pop
idiv
ja
loopne
xchg
push
cltd
lods
mov
sub
sbb
loope
mov
inc
and
in
xchg
mov
lods
cmp
cld
xchg
adc
lock
pop
mov
lret
cli
push
or
lret
das
inc
aad
sub
test
sahf
popf
inc
pop
push
stos
and
fwait
imul
cmp
and
out
outsl
dec
daa
stc
jnp
xchg
pop
cmp
gs
mov
insb
add
pop
fsubrl
push
iret
loopne
in
iret
xor
jb
xchg
xchg
mov
and
sahf
test
out
xchg
push
cmp
mov
and
adc
jge
adcb
clc
fwait
repz
mov
add
add
jne
add
inc
int3
jl
jge
lea
or
pminub
add
movsl
or
test
ljmp
cmp
aad
int
dec
call
es
xor
fs
sub
rcr
sub
push
adc
and
fldl2e
shrl
dec
pop
or
test
in
xlat
aad
aam
aaa
subl
xchg
sahf
pushf
stc
jns
iret
mov
and
push
push
mov
and
xchg
mov
cmp
push
sub
or
xor
sbb
inc
add
into
ds
lret
push
cld
test
mov
call
shlb
and
pop
cld
adc
adcb
and
mov
pushl
jge
sbb
push
out
pop
jne
lods
nop
xorb
jecxz
daa
add
sbb
xor
mov
jbe
xchg
add
movsl
incl
add
nop
inc
mov
jmp
hlt
mov
popa
cmc
push
or
and
push
lds
adc
jmp
lock
pop
pop
data16
fnsave
cs
xchg
pop
add
jb
pop
cmc
push
and
mov
movsl
mov
xchg
mov
in
notb
mov
pop
repnz
adc
jo
movsb
jns
jne
dec
call
mov
fildll
cld
mov
aas
mov
clc
xchg
cmp
add
inc
out
mov
dec
sbb
movsb
imul
mov
jl
dec
dec
stos
mov
xchg
aad
hlt
fwait
bound
mov
pop
scas
xor
sahf
aas
add
mov
xchg
sbb
xor
out
sahf
loopne
out
mov
or
xor
inc
sti
xchg
xor
or
retw
imul
cmp
cmp
jbe
push
sub
idivl
jnp
mov
aam
dec
cli
jne
pop
jo
jo
leave
push
xchg
inc
xor
mov
jmp
mov
loope
push
xchg
inc
mov
addb
mov
push
xor
pop
arpl
xor
nop
lds
jmp
cmpb
jbe
xchg
xchg
test
sbb
into
add
fs
cmp
jbe
cmp
dec
imul
adc
fstpl
xor
xchg
jle
clc
mov
fstps
xor
mov
push
jecxz
or
xchg
test
mov
xor
pop
lock
jns
repnz
lret
and
mov
mov
into
cld
sbb
js
push
rclb
call
cmp
jae
mov
or
or
adc
push
xlat
test
ds
pop
jecxz
cs
mov
lcall
lahf
inc
out
fbstp
lea
or
popf
outsl
in
das
xor
in
inc
jns
ja
ljmp
jae
pop
mov
aad
add
push
fstpl
movsl
ja
add
orb
inc
mov
cmp
out
jl
lret
lret
pop
add
xchg
bound
push
dec
cld
sub
lea
fisubrs
jb
in
xor
xchg
sar
and
pusha
push
scas
je
repnz
mov
aas
sub
notl
jge
daa
gs
stc
int
fst
fistl
xchg
and
test
adc
xchg
cs
je
ficompl
ss
push
xchg
enter
outsl
hlt
lock
inc
mov
iret
add
inc
popf
mov
xor
sbb
fnsave
dec
aam
mov
rorb
dec
repnz
fs
push
sar
sbb
xchg
stos
mov
and
aad
ja
cmpsl
iret
dec
add
arpl
adc
xchg
pop
lds
xorl
xchg
scas
adc
out
adc
lods
lea
movsl
cmp
xlat
outsb
in
int
jno
mov
aas
push
loope
jge
std
aaa
pop
ret
mov
lods
push
mov
cs
shrb
inc
pop
aad
pop
mov
sub
pushf
lahf
and
ljmp
or
jne
inc
jae
cmc
ljmp
dec
cltd
cld
sub
mov
inc
or
adc
adc
push
and
ss
add
cmc
pusha
and
xor
dec
sbbb
cmpxchg
mov
insb
movsl
movsb
loopne
hlt
jo
jae
xchg
in
movsl
dec
shl
fs
in
pop
sarb
test
and
loopne
mov
push
mov
sti
hlt
lock
add
imull
cli
mov
cmp
pop
insl
imul
stos
mov
pop
pop
mov
clc
ret
cld
cmp
mov
aad
ja
mov
sti
jg
mov
movsl
push
jp
ficoms
into
std
fcmovnu
or
mov
mov
js
jle
mov
ret
add
push
xor
mov
mov
mov
mov
xor
pop
fcompl
sbb
add
xor
repz
mov
pop
test
lds
jmp
adc
out
sub
add
lret
mov
out
fsubl
mov
cli
cmp
xor
std
jbe
cmp
cmp
movsl
das
lcall
push
pop
or
and
xchg
int
repz
jnp
and
sbb
xchg
adc
pop
cwtl
inc
mov
std
cmp
loopne
stos
dec
mov
xchg
pusha
sub
dec
shl
dec
mov
adc
inc
adc
das
mov
and
adc
int
ss
push
pop
dec
pop
popf
outsl
pop
aad
mov
mov
inc
jb
clc
push
pop
adc
loop
jge
push
xchg
dec
xchg
mov
mov
pop
mov
xor
cmpsl
xor
mov
iret
push
jl
les
sbb
es
frstor
push
je
std
xor
or
aas
test
and
jae
and
mov
loopne
test
or
repnz
mov
pop
jl
xorb
mov
lahf
dec
mov
mov
stc
inc
add
fisubl
inc
mov
dec
cmpb
lahf
pop
add
inc
js
jne
mov
ret
sub
jp
push
aad
fcmovnu
cmp
es
pop
dec
mov
sbb
dec
cmpsb
stos
jp
add
insl
sbb
aas
adc
gs
aaa
popf
push
outsl
adc
pushf
mov
pop
jmp
pop
push
cli
inc
pop
lds
cmpsb
jmp
xchg
adc
mov
dec
mov
adc
cmpsl
lcall
sub
shr
mov
adc
pop
or
scas
imul
jge
xchg
in
xor
sahf
xor
mov
xchg
sub
inc
mov
in
push
push
pop
pop
sub
je
lods
lret
push
dec
xor
or
add
shlb
push
add
rclb
out
sbb
mov
pop
adc
outsl
jp
mov
sub
cld
leave
aad
inc
out
dec
cmp
icebp
push
push
mov
mov
popl
add
xchg
mov
dec
adc
popf
hlt
stos
inc
xchg
push
dec
jo
fildl
lea
adc
iret
in
leave
scas
mov
std
dec
ja
dec
sarb
mov
ficoml
test
fs
ret
pop
outsl
and
insl
js
test
mov
or
es
add
dec
inc
jge
icebp
add
stos
xchg
and
loop
js
inc
sub
ficoms
lock
das
outsl
mov
sbb
cmpb
jle,pn
mov
adc
pop
or
mov
cmpl
popa
stos
inc
xor
mov
cltd
push
outsb
imul
and
fiaddl
cmp
lahf
jo
mov
jne
pop
je
in
jp
shlb
lret
cmp
negl
sbb
mov
cwtl
loopne
jg
mov
inc
pop
mov
test
add
lret
jp
mov
xchg
outsb
pop
mov
test
in
mov
fimull
pop
xor
ds
xor
fisttps
sbb
add
into
xor
mov
xor
xor
mov
decb
test
ljmp
pop
push
fwait
daa
in
add
lahf
flds
mov
mov
sub
pop
bound
dec
jb
fcomps
lds
dec
stos
je
popa
inc
cmpsl
and
es
movl
repnz
test
dec
jae
adc
xor
data16
scas
jb
lret
mov
data16
sbb
into
push
add
dec
sbb
jno
fisttps
and
pop
in
mov
and
imul
xchg
cli
pusha
cmp
cmp
mov
push
in
mov
pop
jb
mov
push
std
adc
repnz
cmc
or
int3
dec
fwait
mov
add
mov
cmp
hlt
clc
dec
pushf
sahf
ds
mov
inc
jno
arpl
adc
movsl
dec
mov
cwtl
cmp
icebp
das
xor
clc
pop
ds
js
into
mov
sub
scas
sbb
adc
repz
dec
insl
scas
scas
insb
or
mov
mov
lock
stc
dec
pop
push
and
insb
fisttpl
sbb
pop
fidivs
sarl
test
mov
push
movsl
dec
and
cld
xchg
inc
cs
in
and
pop
cltd
repz
adc
sbb
mov
mov
in
add
enter
or
dec
hlt
dec
inc
scas
stos
jno
mov
push
fistpl
daa
cld
popa
stc
jecxz
cmp
shll
insb
sbbl
mov
jne
lahf
repz
adc
mov
push
add
pop
pusha
cmpsl
mov
outsl
data16
sahf
and
mov
test
xchg
hlt
std
xor
jns
xchg
insb
jecxz
lcall
jp
mov
lret
inc
lds
sub
push
out
or
jo
mov
and
out
add
add
test
popf
je
loope
mov
cmpsl
fs
imul
pushf
pop
or
mov
cmp
inc
jg
cli
jecxz
jl
pop
jo
ljmp
ljmp
int3
ret
xchg
and
into
inc
lret
les
fs
xor
dec
ljmp
add
push
push
push
outsb
sbb
add
std
cmpl
arpl
in
dec
cmp
xchg
dec
adc
sahf
lcall
in
loopne
mov
add
pushf
in
idivb
out
cs
xlat
push
repz
addr16
jp
jbe
dec
push
cmp
pop
or
das
repnz
dec
pop
xchg
inc
inc
xor
into
in
dec
cmp
pop
data16
mov
out
xor
xchg
cmp
jecxz
int
lds
movb
sub
cmpsl
out
fldt
and
adc
pop
jb
test
sub
movsl
fs
xchg
clc
decb
and
pop
mov
ret
add
push
lcall
insl
xor
mov
add
lahf
popf
cmpsl
jle
push
xor
sbb
test
fnstcw
inc
xchg
loop
cmp
stc
sbb
dec
jbe
test
pop
sub
sub
mov
iret
aaa
fdivs
xchg
push
enter
push
sub
shr
add
jae
bound
mov
mov
or
testb
insb
sbb
sbb
push
lahf
push
inc
or
mov
jno
jle
cmp
ds
jg
call
test
repnz
jmp
add
jecxz
cmpsl
clc
jbe
int3
and
aam
adc
test
push
cli
dec
stc
jl
test
arpl
push
fwait
stos
sub
popa
loopne
cmp
stos
xchg
add
cld
or
call
hlt
pop
jecxz
stos
mov
scas
inc
jp
cmpsb
outsb
add
push
andb
gs
cmpsl
clc
rclb
pop
enter
fiadds
push
push
sub
lods
rcll
imul
punpcklbw
add
sbb
aaa
and
lret
mov
sub
cmp
pop
or
insl
mull
mov
xchg
std
jl
in
bound
xchg
aad
gs
or
lea
inc
call
fwait
test
mov
pop
test
dec
mov
jno
lods
in
adc
sub
pop
test
loopne
push
iret
and
ljmp
arpl
adc
lock
sbb
and
loope
xor
jle
jbe
mov
fwait
or
inc
mov
ds
mov
mov
in
add
enter
xor
xchg
inc
sti
cmpsb
mov
push
mov
lock
jae
addr16
dec
cmp
add
ljmp
ds
bound
in
inc
mov
inc
mov
pop
lret
sbb
push
xor
push
push
movsl
sarb
mov
or
jp
xchg
es
sbb
hlt
out
shlb
bnd
jno
popf
mov
mov
rclb
lahf
jnp
pop
loope
or
into
mov
pop
sbb
jno
jno
pop
in
jl
cmp
fimull
mov
cmpsb
dec
mov
xchg
iret
test
in
fwait
rcrb
mov
rol
bound
mov
or
ljmp
dec
jns
pop
mov
mov
push
call
popf
test
cmp
das
lea
mov
aad
mov
xchg
fiadds
pop
mov
mov
outsb
push
loop
mov
in
and
mov
ret
je
xchg
push
into
or
movsl
jl
dec
jno
push
clc
and
sbb
add
fmul
and
push
out
inc
cmpsb
test
subb
push
testl
out
loop
fwait
mov
mov
push
sub
lret
clc
loopne
rcrb
or
icebp
inc
aas
mov
in
add
mov
insl
jae
scas
movsb
or
cmp
dec
rorl
jecxz
jbe
divb
or
xor
icebp
add
adc
xor
mov
mul
dec
fldl
mov
mov
fcmovb
inc
cmp
fcomps
sbb
mov
mov
addr16
insb
inc
adc
lds
pop
jl
inc
xlat
mov
jmp
sub
or
jmp
scas
dec
fildl
push
rcl
and
ja
xchg
stc
loopne
and
jnp
mov
loope
and
pop
sbb
js
cmp
dec
addl
dec
xor
pop
cmp
ljmp
mov
clc
shll
xor
inc
or
call
fisttps
mov
push
xor
or
daa
mov
xor
add
jb
and
xchg
pop
sub
mov
xchg
and
mov
sub
sti
jmp
xchg
int
rcrl
out
jo
cmp
scas
movsl
sti
mov
out
lds
notrack
rclb
les
and
std
pop
xor
aad
aad
or
push
cmpsl
mov
inc
ret
in
add
xchg
mov
push
push
les
sarb
jle
cmpsb
mov
mov
adc
cmpsl
mov
add
add
repnz
push
mov
movsl
je
lcall
in
fcomps
in
inc
imul
cwtl
adc
xchg
push
sbb
nop
push
push
inc
xchg
lds
cli
stos
loop
mov
mov
adc
out
arpl
push
out
xorl
add
xlat
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
andl
mov
mov
mov
xor
add
mov
movzwl
and
mov
mov
sbbl
xor
adc
push
sub
mov
movzwl
sbb
mov
negl
add
xorl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
push
call
jmp
and
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
push
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
mov
in
xor
mov
cmp
aam
jl
push
sub
out
adcb
adc
jno
or
sub
mov
xor
jp
cmp
inc
mov
pop
jns
adc
in
mov
roll
mov
jl
push
mov
inc
dec
out
push
sbb
cltd
test
roll
push
cmp
inc
daa
pop
adc
rcrb
jmp
xchg
ljmp
aad
jnp
icebp
es
jne
cmp
and
shlb
pop
mov
dec
cwtl
inc
dec
std
sbb
and
iret
mov
adc
push
pop
in
int3
pop
int
mov
xchg
outsl
and
xchg
and
xor
aad
sub
jne
adc
arpl
push
test
outsl
cmpsb
push
cmpsl
ret
cwtl
jg
cltd
push
lock
dec
jnp
mov
or
int3
dec
adc
mov
push
xor
sbbb
push
sbb
dec
xor
push
repz
fwait
cltd
add
inc
dec
xchg
xchg
sti
add
adcb
lods
test
mov
cmpsl
mov
aas
cmp
out
paddq
push
cmp
dec
je
aad
push
sbb
and
fistl
lods
mov
mov
mov
push
nop
add
clc
ret
movsl
jnp
stos
jbe
add
divb
sti
mov
inc
inc
pop
inc
add
inc
mov
jne
inc
addb
pop
pop
and
inc
in
inc
lahf
imul
adc
stos
cwtl
push
adc
insl
nop
dec
jbe
shl
dec
or
lret
mov
mov
xor
cld
mov
sub
les
inc
jnp
jge
jb
sub
imul
scas
push
jne
mov
stos
xchg
bound
adc
inc
adc
mov
mov
imulb
rorb
sbb
movsb
mov
add
mov
iret
dec
mov
rclb
push
mov
test
hlt
xor
adc
arpl
rcll
or
aam
pop
daa
das
lcall
pop
inc
jg
fcoms
xchg
mov
jnp
push
loop
mov
arpl
xchg
stc
and
arpl
insl
icebp
popf
fs
sahf
and
mov
push
mov
cli
xchg
es
adc
out
sbb
jmp
and
pop
pop
xchg
and
xorl
in
inc
mov
mov
xor
pop
cmpsl
in
xchg
cmp
add
loope
ja
ror
jb
lock
addl
jns
jne
jge
je
repnz
mov
aam
adc
jno
popf
mov
je
pop
xchg
jg
adc
jne
std
jbe
mov
push
hlt
push
xor
mov
sbb
imul
addr16
out
addr16
mov
pusha
push
mov
imulb
sub
pop
sub
jno
iret
popa
iret
dec
movsl
sbb
adc
inc
push
int3
lods
nop
aas
inc
je
aam
xchg
fstl
jno
xchg
aaa
push
int3
pop
es
iret
push
xor
add
mov
push
jbe
loopne
stc
xchg
stos
cmp
in
sub
aad
dec
sahf
mov
xor
push
jecxz
adc
repnz
loop
push
movsb
jmp
sub
push
cmp
pop
sbb
pop
cmpsb
shl
push
and
cmp
cmp
mov
pop
repz
push
jp
aad
xor
pusha
sub
mov
das
jns
cmpsb
sbb
sub
add
jmp
subb
out
sbb
or
push
nop
mov
subb
gs
add
pop
insb
add
cmpsb
add
add
xchg
fnstsw
mov
pop
sahf
test
jne
pop
movsl
sbb
in
and
lods
call
jecxz
push
fwait
sbb
jne
inc
inc
jae
add
cs
xlat
and
pop
rcrl
lahf
add
mov
sbb
jl
mov
add
lret
fsubrs
cmp
in
jns
hlt
pop
mov
pop
jmp
lea
subl
lret
push
jmp
jg
mov
dec
xchg
addr16
sub
cli
xor
push
xor
ret
notb
stc
clc
mov
push
ds
adc
scas
stos
data16
dec
insl
loopne
mov
sti
mov
das
sbb
xor
mov
jb
in
stc
dec
jge
and
dec
jbe
ja
lcall
movsl
mov
dec
pop
sti
jp
nop
fsubrl
sbb
jbe
cmpsb
cmp
sbb
or
hlt
fadds
int
pop
mulb
add
adcb
push
jmp
adc
push
fistl
icebp
jns
dec
enter
scas
loopne
jl
test
int
in
ss
jge
dec
jb
pop
loopne
mov
and
jp
dec
pop
jnp
in
jmp
mov
sbbb
jae
fwait
imul
sahf
mull
jg
fstpl
and
ret
xlat
int3
or
inc
adc
and
in
lods
addr16
dec
lahf
orl
adc
scas
dec
xor
ljmp
pop
subl
mov
xchg
aad
or
inc
jb
jmp
xor
mov
add
mov
mov
mov
sbb
push
mov
jbe
addb
pushf
fwait
arpl
or
ret
das
outsl
mov
jle
cs
test
lahf
mov
outsb
pop
scas
xor
sub
enter
push
insb
aaa
cmp
inc
fildll
add
mov
add
test
xor
jne
lods
lock
add
jno
and
test
lret
mov
mov
sahf
add
icebp
sub
inc
lods
xor
cli
xor
movsb
mov
cmp
jg
push
mov
cld
mov
mov
jle
mov
mov
sub
leave
cmpsl
scas
mov
mov
rcrb
out
inc
mov
enter
out
add
ljmp
dec
scas
aas
enter
int3
adc
xor
jns
ds
arpl
cmp
push
adc
sbb
inc
or
adc
add
cmp
jle
mov
xchg
xor
gs
jl
push
mov
add
lret
push
cs
cmp
inc
cli
repz
pop
in
or
scas
push
pop
imul
pop
mov
pmulhuw
xorl
inc
pop
fistps
mov
clc
xor
mov
xchg
enter
mov
inc
dec
pop
rorb
insl
mov
rcll
cmp
mulb
dec
ljmp
cltd
push
mov
mov
jb
popf
icebp
mov
test
loope
lret
aaa
jo
push
xchg
pop
and
dec
jmp
add
mov
cwtl
push
loop
sbb
pop
lods
cwtl
lea
xchg
push
lock
jge
test
cmpl
dec
gs
leave
mov
iret
mov
or
and
jnp
push
or
test
shl
mov
jne
mov
add
pop
clc
sub
cmpb
lea
dec
mov
adc
fwait
lods
cmp
push
add
jl
mov
xor
and
xor
sbb
inc
scas
arpl
jmp
xchg
movsb
cmpsb
pop
bound
sbb
popf
ret
pop
add
mov
mov
das
push
mov
dec
rclb
mov
fistpl
pop
icebp
je
xchg
xor
movsb
popf
cwtl
outsl
js
jae
jbe
mov
jb
pushf
in
cwtl
imul
push
lds
xor
push
sbb
jl
test
leave
pop
xor
mov
ds
and
out
or
mov
adcl
hlt
cmp
push
pop
imul
in
bound
inc
jo
sbb
aam
pop
ds
cmp
cmp
and
mov
ret
pop
add
xchg
jp
aad
mov
push
mov
add
mov
stos
cmp
and
sbb
jo
ljmp
sub
push
ss
fnsave
push
cmp
testb
inc
into
ret
arpl
adc
jecxz
jge
and
pop
fadd
mov
adc
les
push
or
pop
addl
pusha
sbb
movsl
jle
inc
xor
clc
jg
mov
imul
nop
dec
xchg
mov
fcompl
sbb
testb
sbbl
cli
mov
in
aam
mov
cli
push
adc
jo
inc
in
loop
aaa
sarb
sub
pop
pop
sub
fdivp
mov
or
add
fs
and
mov
cld
sahf
xchg
fwait
xchg
xor
shrl
jge
stos
sub
call
cmp
mov
adc
mov
lret
scas
lret
add
jg
popa
rol
mov
popf
pop
mov
pop
addr16
aam
mov
cmp
sbb
adc
stos
test
out
gs
sbb
xchg
adc
popf
fstpt
mov
pop
lcall
sbb
mov
test
adc
js
sbb
loope
pushf
test
add
cmp
xchg
dec
sub
loop
xchg
pop
push
xlat
lock
dec
jg
mov
mov
dec
data16
or
xor
das
xchg
in
pop
mov
in
or
out
ljmp
add
insl
insb
inc
shrb
lret
mov
movsl
inc
imul
xor
jecxz
add
push
xor
int3
or
movsl
or
fnstsw
int
jo
pop
xchg
mov
add
fildl
lcall
dec
rcr
or
mov
popf
pslld
xchg
inc
sub
mov
mov
loopne
pop
push
mov
shrb
or
out
movsb
jnp
pusha
push
outsb
mov
xchg
popf
negb
add
xchg
dec
adc
sub
arpl
cltd
add
push
push
cmp
dec
iret
outsb
lods
jg
jnp
movsl
inc
ss
pushf
inc
lret
int
cld
cmp
outsb
ds
mov
mov
cld
cmc
dec
shl
pop
iret
add
cmp
inc
sub
out
lret
in
in
test
push
cli
or
iret
and
push
pusha
dec
xorb
rorb
xor
out
add
xchg
cwtl
pop
xor
xor
push
jo
adc
addr16
mov
fisubs
ret
outsl
test
in
or
loopne
lds
cmp
add
adc
imul
cmc
jg
inc
dec
jae
push
and
leave
mov
es
enter
mov
leave
shrl
stos
mov
push
ret
pop
arpl
xchg
jle
shlb
les
repz
xor
and
jnp
xor
and
arpl
push
cmpsb
jnp
test
inc
fisubrs
and
insl
es
adc
push
xchg
dec
xchg
pop
sbb
push
fistl
cwtl
fisttpl
adc
loope
sarb
sbb
out
orl
ja
pop
inc
push
outsl
jp
dec
movsl
inc
or
adc
mov
jge
add
cmp
jp
pop
sbb
stc
add
xorb
fs
inc
xor
in
daa
push
xor
dec
leave
test
loope
mov
mov
jecxz
cmpsl
loop
mov
and
insl
lcall
add
aaa
pop
cmp
jl
lods
xadd
sub
pop
or
mov
mov
bswap
xor
sub
int3
mov
aaa
es
xor
inc
loope
mov
test
sub
loopne
sub
mov
sbb
push
rcrl
mov
clc
movsl
fnstsw
stos
mov
orb
xchg
mov
mov
rcrl
add
iret
dec
xor
jnp
data16
in
push
decb
aad
stos
xor
lods
daa
mov
jmp
lmsw
adc
push
push
cmpsl
out
cmp
xor
icebp
pop
daa
arpl
add
in
xor
xor
cmp
xchg
cmc
mov
mov
push
lock
jb
push
insl
orl
pop
sub
mov
push
pop
sbb
fwait
int3
sbb
arpl
dec
aad
nop
jno
pop
bound
daa
push
pop
mov
test
rorb
sbb
mov
sub
xchg
negb
jb
pop
and
enter
dec
clc
sub
popw
sub
lods
addl
dec
pop
mov
call
stos
and
xchg
fs
mov
add
je
push
mov
ss
shlb
or
or
call
negl
fnstcw
mov
gs
loopne
arpl
insb
jmp
cmp
cmp
out
mov
imul
fdivrs
sub
jne
dec
dec
add
inc
mov
in
and
pop
push
cmp
ret
rcrl
fistpl
jo
out
push
insl
test
inc
mov
daa
adc
jne
push
mov
and
aam
hlt
pop
sbb
xchg
out
jns
inc
jp
push
outsb
lods
pop
sub
scas
in
fwait
addr16
sbb
xchg
mov
add
adcb
xchg
mov
pop
push
mov
adc
sub
push
pop
fs
jecxz
inc
mov
sbb
je
jg
adc
cmpsl
xchg
cmp
ss
dec
xchg
or
add
lret
in
je
xor
roll
cmpsl
dec
mov
pusha
mov
je
out
pop
testl
aad
or
add
add
xor
dec
mov
pushf
push
fistpll
mov
std
imul
or
fisttpll
stos
inc
or
jg
stc
sahf
mov
lods
pop
adc
int3
aaa
xchg
xlat
mov
cmp
push
jno
jmp
loope
pop
jo
lods
adc
cld
mov
outsb
mov
cmp
dec
int3
pop
jp
shl
inc
arpl
in
outsb
lret
cmpsl
mov
xlat
cmp
into
pushf
or
adc
pop
dec
ficomps
adc
mov
js
test
ret
sub
adc
cmp
adc
pop
push
push
mov
mov
dec
xor
je
and
pop
or
imul
mov
cli
push
mov
mov
loopne
sbb
aas
or
xchg
bound
cmp
sub
out
sub
and
xor
fnsave
out
cs
xchg
or
ds
loope
and
cli
cmp
daa
test
aam
fldcw
scas
pop
cs
push
or
loop
adc
mov
sbb
sub
test
mov
aam
sbb
flds
aaa
or
xor
push
mov
mov
imull
lcall
fisubl
push
sub
test
push
loop
imul
jecxz
dec
popf
and
xchg
aas
subl
in
xchg
lret
pop
popa
mov
lds
cmp
or
xor
stos
sub
loop
notl
loop
negl
int3
mov
lods
das
mov
jg
or
inc
cmp
bound
push
mov
lret
shlb
mov
int
frstor
sbb
jno
pop
arpl
lahf
dec
xchg
and
xchg
je
pop
jl
mov
nop
xor
lock
pop
cmc
in
add
dec
xchg
sub
gs
fstpt
sub
push
aad
js
dec
mov
lods
dec
sub
into
jnp
into
rorl
mov
jecxz
inc
out
inc
popa
adcl
jg
mov
mov
or
adcb
sbb
out
call
lahf
clc
cmp
adc
mov
arpl
cld
inc
xor
and
std
daa
pop
imul
dec
xor
out
inc
pop
ret
out
fisttpl
dec
dec
jbe
pop
dec
sbb
or
rep
push
movsb
dec
jae
xchg
inc
jbe
xor
sub
leave
arpl
movsl
movsl
fcomps
insl
fildll
nop
mov
mov
jo
sbb
jno
cmp
xor
es
fimuls
xchg
fdivl
inc
cmp
mov
int3
mov
add
pop
out
iret
or
mov
mov
push
aas
sub
xor
push
or
movsb
cwtl
cmp
lret
mov
stc
rol
imul
and
in
popf
push
cmpsb
in
pop
inc
mov
pop
jo
mov
rcrb
mov
roll
mov
sub
ljmp
ss
sbb
arpl
xor
loopne
bound
out
xor
fwait
dec
scas
xor
inc
push
pop
mov
sbb
loopne
lcall
and
push
jns
movsb
inc
pop
fiadds
push
push
test
cmp
ljmp
mov
xchg
mov
packuswb
ret
lods
jmp
push
repz
std
xchg
std
sbb
push
cmpsb
add
push
pop
jo
push
xchg
ret
add
cld
xchg
xor
je
or
test
mov
loope
xor
jmp
mov
subl
aas
adc
jmp
fsubs
inc
pop
in
fstl
add
push
ja
fs
mov
mov
dec
arpl
xchg
sub
push
sbb
fmul
add
das
lret
sbb
xchg
jnp
pop
push
cmp
add
lahf
and
cwtl
out
test
popf
mov
sahf
adc
xor
fwait
lahf
repnz
mov
mov
hlt
inc
push
cmpsl
adc
das
data16
and
mov
push
push
idivl
scas
in
xlat
enter
movsl
sbb
loop
and
mov
inc
jp
in
inc
arpl
jg
int3
adc
add
dec
mov
sub
pop
add
xchg
and
lret
daa
loope
mov
subl
lret
ljmp
sbb
and
lods
push
jg
insl
dec
add
pop
lods
ds
xor
mov
dec
jecxz
and
fistpl
out
into
xchg
and
je
es
cmp
dec
pop
std
ret
jmp
mov
cmp
insl
or
cmc
fmull
jmp
inc
add
pushf
or
xchg
or
jle,pn
mov
inc
mov
jecxz
cmp
mov
bnd
inc
scas
clc
lock
shrd
ficompl
xlat
bound
in
cmp
clc
xchg
dec
pop
in
and
xchg
add
int3
notb
cld
mov
or
lcall
dec
lock
add
pop
xchg
ja
cltd
jmp
stc
pop
mov
jp
jno
adc
push
dec
pop
popf
shll
out
icebp
jge
or
xor
out
xor
pop
subb
orl
cmc
scas
cmp
xchg
add
and
xchg
repz
xchg
adc
or
js
mov
adc
adc
xor
add
cmp
and
inc
push
xchg
iret
mov
fsubrs
int3
out
in
arpl
push
lcall
or
cmp
add
inc
out
lahf
outsl
mov
fwait
jmp
lods
fadds
mov
js
jle
push
jmp
mov
inc
mov
mov
sti
adc
mov
and
sub
cmp
xchg
sub
mov
lea
push
jmp
cmp
fs
sbb
popl
sub
dec
mov
push
lahf
cmp
shrl
arpl
in
push
adc
cmp
gs
or
in
pop
push
pop
xchg
je
int3
fistpl
cmp
sarb
dec
cmp
sahf
es
jl
jle
jns
inc
dec
mov
scas
adc
cmp
dec
push
out
aas
sbbl
mov
jecxz
lods
mov
popa
xchg
in
jns
repnz
sbb
pop
clc
mov
aaa
rol
in
pop
stos
mov
mov
mov
cmp
frstor
adc
stos
cmpb
leave
in
imul
mov
mov
in
pop
cmpsl
loope
mov
jns
dec
mov
inc
or
jp
mov
jnp
and
adcb
inc
inc
cli
jge
leave
mov
fldl
out
es
jp
outsl
insl
adc
test
xor
inc
cwtl
nop
fisubrl
cmpsb
test
xchg
jo
popf
pop
add
inc
aam
sti
call
popa
stc
xchg
lods
sbb
push
jp
jb
cmp
sub
jns
pop
mov
push
inc
adc
je
xchg
xlat
and
ljmp
push
and
fiaddl
inc
cwtl
add
aaa
fs
pop
jge
and
mov
jae
cmp
jp
loopne
les
add
or
jg
push
inc
and
mov
neg
push
cltd
jno
les
mov
cmp
push
cltd
push
jnp
adc
fld
adc
repz
push
movsl
outsb
mov
push
je
lahf
sub
xchg
arpl
fidivs
ret
cmp
mov
aaa
incl
xchg
das
xchg
push
stos
movsb
orl
dec
inc
and
xchg
push
push
lahf
lods
fidivl
addr16
ja
fs
fmull
arpl
mov
jbe
pop
mov
jns
xor
inc
les
pusha
cld
fnstsw
jae
clc
and
mov
mov
cmpsl
call
push
and
dec
push
sub
sbb
cmp
add
sbb
or
scas
enter
cmpsl
sbb
xlat
xor
daa
test
daa
or
insl
and
imul
imul
jne
sbb
fistl
pop
sbb
add
mov
lcall
pop
es
and
repnz
mov
xor
pop
add
push
rorb
pop
pop
subl
nop
movsb
fstl
roll
push
pop
or
frstor
xor
frstor
mov
add
inc
test
jmp
dec
dec
jg
push
or
ficomps
push
or
ja
movl
mov
out
xchg
cwtl
scas
sbb
lods
pop
iret
sub
push
negl
jp
hlt
push
or
mov
int3
cmpsb
sbb
mov
pop
mov
cld
jo
pop
aaa
fsubr
pop
movsb
pop
pushf
and
sbb
loop
adc
jecxz
sahf
lea
mov
xchg
pop
cmp
mov
push
out
mov
arpl
pusha
inc
out
cmpsl
sbb
adc
jbe
adc
sahf
fsubr
rol
lea
inc
lock
and
out
mov
sub
scas
mov
sub
dec
dec
fwait
push
dec
dec
sarl
cmc
in
xor
add
sub
cwtl
hlt
mov
fildll
or
mov
jbe
out
xchg
or
sub
push
lahf
es
imul
xor
std
xchg
aaa
sbb
ret
sub
adc
stc
mov
daa
int3
iret
arpl
adc
sahf
inc
fistps
cmp
aaa
jae
mov
mov
js
imul
cld
pop
mov
xchg
xor
das
mov
xor
push
mov
roll
adc
push
mov
or
les
test
xor
std
test
xchg
xor
jle
imul
pop
xorb
pop
mov
xchg
test
lock
dec
insl
in
faddl
in
loope
ds
mov
and
mov
int3
cmc
call
cmp
jns
adc
and
rcll
mov
and
xor
push
dec
int3
mov
rcll
or
stos
inc
push
adc
or
cmpl
or
shl
fimuls
dec
push
mov
in
outsl
test
jecxz
and
lret
or
rolb
mov
repnz
dec
repnz
lahf
ja
mov
shlb
sub
stos
insb
loop
repz
inc
repnz
mov
xchg
in
pushf
jl
mov
scas
adc
cwtl
jle
xchg
jns
cmp
fnstcw
xor
sub
ret
subl
mov
or
inc
fwait
data16
das
stos
pop
jecxz
adc
mov
xor
insb
pop
ret
outsl
jb
jne
mov
xchg
inc
mov
inc
xlat
xchg
pop
addb
mov
popa
mov
pop
adc
mov
xor
js
mov
in
stc
xchg
fnstsw
jbe
jecxz
mov
pop
addl
mull
xchg
stos
insb
mov
mov
stc
sbb
outsb
js
jmp
js
scas
jae
adc
stos
jg
mov
push
cwtl
jo
pop
iret
pop
inc
fcom
ret
in
mov
mov
loope
inc
inc
sarb
dec
mov
push
rorl
cld
sbb
dec
adc
xor
lret
push
cld
in
stc
jge
cmpsb
das
jl
call
mulps
movsl
pop
cmpsl
daa
adc
ficoml
imul
jle
fmuls
pusha
adc
stos
jp
int3
jmp
insb
sti
aaa
jae
push
scas
mov
into
dec
xchg
jl
xchg
mov
jnp
or
and
or
sahf
pop
insl
out
pop
adc
gs
sub
shl
sub
jl
imul
pop
scas
add
dec
mov
aam
dec
push
aam
enter
clc
and
jmp
nop
dec
jb
mov
shlb
cmpl
clc
pop
int3
or
adc
shl
ljmp
mov
repz
push
mov
xchg
sar
inc
mov
mov
in
jo
sti
sub
xor
aad
adc
jp
adc
jbe
ds
insl
mov
xor
mov
pop
fwait
les
stos
xor
clc
repnz
push
add
xor
pop
jns
pop
daa
sub
pop
es
xor
cmpsl
mov
cld
xchg
cmc
xchg
add
test
mov
mov
jbe
decl
imul
cmp
and
push
xchg
test
jl
ds
mov
jb
sub
stos
imul
pop
dec
mov
sub
mov
add
jbe
jns
ficomps
int
add
fldt
xchg
popa
xorb
jge
das
mov
aaa
fucomi
movsb
sub
mov
shl
shlb
out
add
js
cmp
inc
mov
xchg
fld
call
mov
or
js
mov
and
mov
mov
push
inc
push
bound
cmp
out
imul
sbb
fsub
imul
mov
negb
inc
movsl
dec
sbb
cs
sbb
sbb
cmpsl
sub
out
mov
jle
add
inc
and
cmc
mov
pop
mov
cmp
int3
mov
ja
jecxz
repz
andb
dec
gs
cltd
out
addr16
push
movsl
sti
jno
imul
pop
mov
cwtl
xchg
xchg
in
cmp
and
loopne
mov
push
ficoml
fisubrl
in
cmp
lock
push
cmp
loop
jg
aad
mov
pop
out
imul
jbe
clc
mov
test
rcrl
in
fimull
jmp
push
or
imull
int3
adc
or
ror
dec
jp
insl
cmp
jp
mov
xchg
adc
aad
xchg
lods
jb
or
sbb
and
frstor
xchg
cs
jns
jno
ss
f2xm1
jecxz
jle
jg
pop
scas
push
sbb
daa
daa
es
xor
fwait
mov
jbe
notl
mov
test
fcmovbe
in
mov
jg
and
out
test
mov
pop
sbb
cmp
cmp
xchg
in
ret
mov
repnz
mov
cmpsb
adc
push
in
sbb
test
jns
stos
jg
stc
je
mul
ljmp
fcmovu
cmp
xlat
outsb
inc
out
negl
shrb
xor
jg
sub
pop
shll
mov
fdivl
or
ljmp
imul
hlt
push
cmpsb
adc
push
or
push
push
cmpsl
orl
add
pop
icebp
mov
jae
pop
or
mov
xchg
mov
fstpl
mov
aad
jne
pop
push
cmpsl
jge
stos
hlt
shll
cmpsl
mov
push
dec
pop
popa
lods
push
mov
pop
and
fmuls
lea
xorl
ret
fnstenv
jne
ljmp
sbb
adc
dec
int
or
jne
daa
mov
popf
gs
sub
push
xchg
pop
pop
stc
aad
jge
jnp
dec
dec
inc
imul
iret
dec
add
fsubrs
inc
add
lret
insl
push
loop
shll
mov
sbb
xor
mov
jb
lret
sahf
scas
outsl
cmpsl
pop
jae
scas
scas
jmp
movsl
aaa
mov
in
jl
call
push
shrb
jne
lcall
pop
mov
pop
imul
sub
mov
leave
push
fildl
xor
cmp
push
je
jo
popf
push
lea
push
cltd
lea
cld
stos
fcoml
mov
es
mul
into
mov
movsl
cmpsl
cmp
popf
imulb
push
mov
les
jecxz
lods
fidivrl
mov
scas
xchg
xchg
aad
inc
frstor
orb
push
mov
pop
add
outsl
or
loopne
clc
jb
mov
insl
popa
rorl
int3
mov
mov
jne
ficompl
dec
je
pop
add
outsb
sbb
fisttpl
cmpsb
xchg
pusha
sub
int3
pusha
out
std
jecxz
fmul
leave
mov
fisttpll
out
js
mov
adc
pushl
pop
jo
lods
into
test
xor
sbb
adc
and
or
add
cli
xchg
je
scas
in
inc
imul
xor
jl
add
loopne
mov
xchg
pop
popa
test
leave
sub
lock
fwait
jb
clc
dec
inc
les
fwait
mov
lcall
cs
push
sub
ljmp
mov
cmpsb
pop
and
fnstcw
lret
pop
and
xchg
cmp
repz
mov
mov
push
pop
outsl
ret
pop
dec
cmp
dec
jle
decb
sahf
fcoml
jl
jbe
xor
pop
pushf
jo
or
fwait
pop
pop
adc
loop
fmull
and
es
or
inc
xor
popa
and
stos
aas
xlat
test
xchg
sbb
out
and
scas
mov
lds
leave
std
jecxz
dec
xchg
jecxz
out
pop
sbb
cmp
mov
out
out
int
loopne
and
shl
popa
sub
mov
push
jl
cld
daa
mov
lock
call
cld
gs
loopne
add
scas
push
pop
mov
sbb
adc
xor
insl
pop
mov
arpl
push
faddl
pop
mov
mov
sbb
mov
scas
jno
mov
mov
popa
ss
sub
fsubs
pop
sbb
xor
dec
or
xchg
testl
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
sbb
mov
xor
xor
sub
mov
add
movl
or
mov
push
mov
add
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
mov
negl
push
mov
adcl
add
cmp
movl
je
mov
mov
xor
xor
adcl
add
add
adc
negl
xor
mov
push
movzbl
adc
xor
xor
mov
and
mov
add
movl
adc
addl
xor
movl
xor
movl
cmp
movl
jne
movl
cmp
je
jmp
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
sbbl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
notl
mov
adcl
add
movzwl
mov
mov
sbb
movb
add
lea
xor
mov
addl
mov
mov
orl
xor
andl
sub
andl
mov
movl
or
push
jmp
and
add
jns
popa
loopne
push
jl
pop
pop
jl
cmp
xor
xchg
into
push
movsb
imul
dec
test
sbb
imul
and
jp
iret
lret
test
aaa
dec
lcall
outsl
shll
cmp
lds
cmp
add
out
xor
xor
andb
or
xchg
jmp
sbb
push
sub
and
cmp
insl
notl
jmp
cwtl
das
aam
fs
inc
into
add
xchg
mov
pop
idivb
cmc
dec
mov
push
pop
outsb
mov
inc
rdmsr
jb
or
mov
je
sti
and
out
sbb
mov
in
mov
int3
jl
push
lock
int
dec
push
mov
adc
push
bound
mov
push
out
pushf
es
push
imul
pop
cmp
pop
xor
rol
sub
int3
mov
jge
mov
cltd
movsl
int
outsl
add
sub
jbe
lret
pusha
es
orl
push
cmc
pop
mov
push
jno
inc
xchg
jecxz
insb
jno
adc
xor
push
lods
cmp
mov
jmp
sub
mov
push
mov
icebp
or
xor
mov
add
and
inc
cmpsb
inc
push
test
mov
ret
cld
xchg
sbb
inc
insb
fisubs
roll
daa
or
jne
mov
cmp
test
fwait
xor
or
les
test
out
ljmp
jae
push
sarb
cli
hlt
or
inc
repz
sti
out
mov
push
int3
les
mov
push
stc
xor
or
gs
adc
out
adc
pop
push
mov
loop
jg
cmc
xchg
rolb
pop
shl
testb
mov
aam
add
hlt
daa
in
xchg
cli
xchg
fcmove
inc
imul
pop
xchg
xor
ljmp
inc
stos
dec
dec
sbb
ds
and
sub
int3
fwait
or
add
dec
mov
xor
mov
in
pop
ja
in
roll
shrb
imul
cmp
mov
aas
xchg
ljmp
push
lea
jmp
pusha
stos
and
aad
ljmp
add
in
pop
pusha
icebp
cmp
push
sub
adc
add
fsubrp
jecxz
xchg
jns
aam
cmp
jl
jmp
push
mov
lcall
mov
outsl
inc
stc
cs
sets
mov
int3
jle
les
pusha
call
adc
add
jmp
pushf
mov
ds
jb
shlb
xchg
dec
dec
ja
ljmp
stos
sub
out
add
dec
cmp
aas
movsb
data16
dec
push
inc
dec
imul
in
inc
aad
sbb
mov
cli
xchg
mov
insb
sub
cmpsb
fwait
lahf
int
mov
nop
movsb
daa
out
mov
jecxz
sub
fdivs
fcoml
mov
push
pop
and
jl
sub
ficompl
fdivrs
jae
ret
call
jbe
jb
or
nop
fwait
orl
cltd
ror
or
adc
js
jp
jnp
inc
cwtl
push
cmp
xchg
jp
cmp
jmp
mov
enter
test
cmp
dec
jno
jmp
mov
mov
mov
dec
xor
jp
push
mov
mov
or
sbb
jne
sti
dec
add
inc
mov
sbb
pop
ds
int
insl
sbb
int
and
inc
test
cwtl
test
push
inc
jmp
xor
inc
xchg
and
out
mov
lret
in
ret
xchg
dec
fdivs
xchg
push
rorl
idivl
cmpsl
jae
mov
test
add
xor
pop
imul
addl
sbb
xor
adc
adc
push
stos
or
cmp
or
sbb
cld
pop
jmp
test
jb
iret
adc
sub
test
sub
mov
in
call
jno
clc
xchg
ffreep
and
or
imul
adc
call
pop
cmpsl
mov
test
dec
ljmp
mov
sub
in
fsts
mov
cltd
icebp
cld
xor
repz
adc
inc
lahf
ljmp
dec
push
adcb
popa
imul
push
jne
insl
and
cmc
xlat
fwait
add
jg
ss
es
subb
popf
mov
mov
jae
lods
mulb
ret
xor
in
mov
cld
pop
mov
je
adc
mov
out
pushf
cltd
xchg
in
ret
and
mov
mov
popf
jb
sbb
fsubrs
popa
pop
insb
ficoml
mov
fbstp
xchg
and
jmp
sub
pusha
cld
aas
popa
sbb
cmpsb
ljmp
mov
pop
pushf
lock
dec
jg
lcall
adc
lods
pop
aaa
aas
sbb
jecxz
jo
in
adc
aam
stos
lds
es
adc
push
sub
sbb
adc
push
test
loopne
xchg
xor
mov
aaa
push
movswl
push
mov
test
lahf
add
ret
mov
fxch
mov
sub
dec
lcall
scas
loop
mov
jge
and
notl
xor
and
addr16
add
cwtl
mov
fbld
inc
loope
call
jne
push
adc
mov
and
scas
inc
mov
sub
pushf
lahf
xor
mov
push
ss
movnti
mov
int3
neg
sbb
sbb
xchg
jl
or
fdivrs
xor
fwait
cmp
sahf
jl
addl
leave
xchg
add
and
lret
movsb
inc
mov
jl
lods
in
orl
mov
fistpl
ret
out
rol
xlat
cs
mov
fwait
pop
loop
xor
jp
mov
inc
mov
jo
xor
iret
mov
popa
out
jae
movsb
and
into
adc
rcr
ja
jbe
cltd
cwtl
mov
cmp
cmp
sub
mov
xor
divl
mov
mov
das
movsw
sbb
dec
hlt
inc
into
jecxz
int3
or
testb
xchg
out
es
cli
sbb
mov
xor
cmp
fnstcw
paddsw
mov
mov
inc
sbb
cld
fnstsw
mov
fsub
cmc
cld
shr
inc
imul
xor
loopne
mov
ret
cmc
lea
and
lods
loope
push
lods
repz
push
mov
add
lods
popf
insb
pop
mov
aad
mov
lds
cli
adc
xor
cmp
leave
adc
int3
in
decb
push
inc
in
nop
mov
adc
lods
cmp
push
pop
into
lods
fstpl
out
mov
sub
sub
push
inc
mov
lods
call
stos
addr16
cwtl
cmpsl
int
pop
aas
pop
xchg
inc
gs
shll
popf
mov
aaa
in
cmp
xchg
jle
xchg
mov
mov
push
fldcw
mov
pop
xchg
das
push
repnz
mov
mov
insb
jmp
andb
sti
cmpsb
mov
push
pop
out
pop
das
inc
pop
adc
add
aas
out
xchg
sbb
icebp
sbb
or
ret
outsb
push
out
cs
ret
fdivr
and
add
xchg
out
outsl
lds
sbb
ja
pop
pop
xchg
stc
xor
and
xchg
push
sbb
inc
enter
lcall
cmp
insl
inc
jge
add
add
sub
pop
lret
sub
adc
aas
cwtl
nop
shrb
addr16
adc
out
jb
pop
push
inc
out
das
test
dec
sahf
mov
mov
mov
pop
addr16
push
test
ret
out
fwait
mov
aad
cmp
xchg
loopne
jns
mov
scas
sti
inc
stos
cmp
adc
nop
dec
fxch
xor
pop
das
xchg
hlt
int
mov
adc
sarl
mov
lret
mulb
mov
push
and
push
mov
mov
xchg
push
pop
in
mov
stos
inc
sub
cmp
nop
je
repnz
push
push
mov
in
jg
sub
dec
dec
cmp
mov
in
scas
sbb
stos
int
xor
push
xchg
mov
pop
les
jb
or
hlt
sbb
in
sbb
in
test
pop
fsts
out
ret
in
mov
or
and
fsubs
adc
cwtl
insb
lea
lcall
add
sets
sbb
dec
xchg
loope
jnp
repnz
aaa
sahf
adc
xchg
hlt
cmp
pop
mov
push
inc
dec
fcomps
popf
xchg
jmp
pop
add
fwait
push
mov
dec
push
push
cltd
mov
mov
and
xchg
rep
push
inc
test
adc
scas
rcll
clc
fsubrs
jns
jb
add
fxch
sub
test
lahf
std
adc
jg
lods
loope
jge
xchg
jne
in
and
test
movsl
stos
subl
mov
popf
dec
in
cli
push
sbb
xor
pop
fcoml
testl
cli
push
cmp
push
and
aas
xor
in
in
inc
les
popa
mov
mov
mov
pop
mov
rol
js
or
push
push
cmp
cmpsl
jge
xchg
dec
xchg
add
in
mov
orl
cmc
bound
arpl
xor
fwait
lea
repz
sarl
ja
add
addb
xchg
and
pop
test
add
sub
outsl
cmp
add
lret
pop
jmp
push
fnstsw
fmull
inc
push
imul
mov
sub
mov
test
mov
loop
sti
ficompl
ficoms
sahf
mov
adc
add
lock
cmc
pop
out
mov
ss
mov
and
lret
sbb
add
divb
cwtl
std
sbb
fdiv
es
pushf
loopne
xor
jecxz
ss
inc
adc
inc
inc
xchg
dec
sarl
mov
xchg
inc
sbb
push
mov
xchg
lods
mov
test
cmpsl
mov
lock
xchg
jmp
xor
notb
test
pop
and
pop
bnd
gs
sbb
ret
adc
cltd
data16
or
sub
data16
test
daa
test
cmp
inc
popf
cmpsl
lcall
ds
xchg
lahf
mov
or
into
and
mov
ffree
jl
cmp
cmc
adcl
sub
aas
test
into
mov
jle
and
or
mov
fdivrl
sti
or
mov
jmp
xchg
lahf
stc
sti
push
push
out
fdivp
sub
jns
mov
add
mov
push
imul
movsb
das
cltd
mov
fidivrs
popa
sub
jg
test
cmp
mov
jb
es
shrl
stos
xchg
std
mov
loopne
call
push
cld
xchg
mov
incb
add
xor
sub
lret
jb
and
inc
mov
inc
pop
mov
xchg
cld
in
jecxz
sbb
mov
fcomps
pop
imul
out
out
mov
mov
pop
orb
mov
loope
loopne
and
cli
mov
push
loopne
sub
adc
in
push
xchg
sbb
adcl
mov
pop
shl
aas
cli
pop
xor
lret
cmp
adc
inc
xor
nop
rcrl
repz
sub
aaa
cltd
dec
daa
fdivl
jecxz
lds
std
mov
repz
cmpsl
jno
into
sarb
pop
inc
test
icebp
pop
fiadds
mov
out
and
jo
in
popa
les
test
lea
mov
rep
dec
sub
and
mov
lods
pop
push
or
inc
adc
loope
lds
pop
daa
add
add
mov
dec
lahf
pop
in
jbe
add
dec
pushf
or
push
sti
fdiv
test
out
pop
xchg
dec
xchg
fbld
push
jle
mov
dec
jge
push
pop
mov
mov
sub
jae
push
mov
mov
or
out
push
aas
repz
mov
stc
cs
add
adc
push
sbb
lret
negl
or
xchg
mov
lods
fcmovb
pop
fnsave
mov
cmp
fimull
push
pop
divl
sar
ss
adc
xorb
xchg
sti
iret
inc
fstl
data16
jge
fsts
cmc
mov
data16
mov
push
lods
xchg
das
cld
stos
cmp
add
loopne
movsl
cs
adc
das
sti
das
cli
mov
xor
xor
dec
mov
cli
inc
sub
or
in
sub
arpl
mov
xchg
xchg
pop
mov
shl
jp
xor
popf
mov
dec
lea
fbstp
and
gs
mov
adc
inc
in
sbbb
cld
test
xor
les
andl
mov
aas
xor
push
push
or
adc
dec
aas
lret
scas
adc
test
data16
xchg
inc
pop
dec
je
dec
mov
out
or
mov
ds
lock
int3
mov
and
inc
pop
and
lahf
sub
add
dec
call
addr16
and
or
aas
insl
ret
repnz
jns
insl
xlat
push
cmp
pop
xlat
iret
add
xor
inc
pop
push
call
or
pop
in
and
sub
movb
mov
and
sub
in
xor
int3
pop
cmpsb
adc
jmp
add
sub
cld
aaa
mov
cmc
sahf
xor
and
adcb
or
or
mov
filds
xchg
insl
out
stos
mov
lods
jg
inc
fs
lods
das
fcoml
jo
add
and
pop
mov
sub
out
xor
insb
out
dec
movsl
sahf
fisttpl
scas
lods
jbe
inc
loop
xchg
ret
flds
leave
imul
mov
loope
hlt
mov
lcallw
or
fwait
ljmp
mov
xor
adc
dec
or
cmp
jb
rclb
rclb
out
jp
jo
movsb
out
pop
inc
jl
mov
jle
lds
mov
iret
or
test
ds
out
rolb
jge
pop
pop
inc
cmpsb
dec
testb
movsl
xor
sbb
test
sbb
xor
cltd
imul
jmp
or
mov
movsl
sbb
in
jmp
shlb
add
or
mov
out
push
daa
inc
cmp
pop
inc
popf
lret
and
push
xor
jecxz
fwait
mov
and
popf
add
lods
ror
mov
fisttpll
pop
inc
push
jl
in
xchg
pop
std
sarl
stc
lods
aaa
xchg
cs
or
insl
xchg
int
sub
cmc
add
pop
add
out
shrb
popl
sbb
adc
dec
push
xorl
fdivs
jne
jl
push
push
imul
mov
mov
clc
jb
xchg
xchg
rcrl
cmpsb
pop
and
pop
or
mov
xchg
loop
cmp
fidivs
sub
enter
xor
mov
fnstenv
ret
sbb
lret
jecxz
sub
add
lret
es
fstps
and
aad
xchg
cmp
aam
sub
inc
xor
or
pxor
fnstenv
pop
lods
aam
inc
fisttps
xor
outsl
pop
aad
cmp
rep
mov
xchg
icebp
test
cltd
lock
mov
push
in
jmp
in
dec
pop
outsb
ss
xchg
lret
dec
mov
mov
pop
insl
xchg
jbe
jne
jp
inc
lcall
cwtl
jg
dec
adc
mov
fdivs
outsb
add
out
shlb
or
iret
rolb
mov
cwtl
add
cmp
outsl
mov
into
add
push
aam
test
pop
fdivl
ds
fbstp
jns
stos
clc
xchg
or
and
add
sub
in
adc
or
stc
jae
loop
dec
hlt
sub
pusha
jae
and
adc
mov
cld
pushf
stos
jo
dec
mov
dec
into
fadds
jo
mov
cmp
inc
inc
ret
mov
addb
fiaddl
add
out
pop
dec
pop
outsl
mov
mov
mov
out
inc
add
jmp
fcmovb
int3
in
xchg
jp
add
divb
pushf
adc
movaps
jbe
jae
sub
pop
fiadds
fs
pusha
lret
pop
int3
adc
jb
dec
repnz
jl
shlb
lahf
push
std
add
mov
in
mov
mov
push
pusha
sbb
inc
mov
mov
jp
mov
xor
pusha
dec
mov
jge
fsub
inc
dec
scas
int
sarb
add
mov
insl
cwtl
sahf
popa
aad
das
cmp
loop
imul
add
inc
dec
push
inc
roll
adc
pop
ss
imul
mov
and
xor
repz
and
cmpsb
adc
inc
arpl
xor
mov
push
aam
in
push
mov
xor
out
mov
stos
ja
add
cld
jecxz
testl
imul
subb
mov
jne
push
jle
cmpsb
jo
jle
loop
adc
cmp
fisttps
mov
lods
xor
mov
gs
pop
pop
enter
push
pushf
stc
roll
mov
xchg
pop
inc
push
cmpsl
xchg
push
cs
das
scas
ljmp
and
pop
cltd
fldpi
add
rolb
and
xchg
xlat
data16
pop
jb
popa
std
movl
jnp
dec
outsb
xor
push
call
enter
out
je
mov
pop
jle
imul
mov
jg
jmp
xchg
mov
pop
mov
add
mov
data16
clc
rclb
loope
clc
out
repz
ja
ds
jns
xlat
mov
cs
filds
xor
leave
int
adcb
jmp
jecxz
and
orb
test
cs
mov
mov
jge
pusha
jns
aaa
jecxz
test
push
and
and
out
lds
leave
fidivrl
sub
xchg
aam
add
mov
add
lret
stos
cltd
cltd
inc
cmpsl
sahf
data16
test
push
mov
cld
inc
cmp
popf
andl
pop
and
aas
dec
cs
or
je
jp
stos
pop
addr16
sub
ret
add
jae
xchg
clc
or
ja
insl
aam
fsubs
fwait
dec
das
subb
mov
repnz
xchg
fstps
or
fmuls
xor
jbe
mov
in
xor
sbb
and
xlat
jmp
hlt
roll
mov
cmpsb
pop
je
sti
cmp
push
adc
mov
push
daa
dec
inc
xchg
xor
mov
je
popf
sahf
jne
nop
mov
insl
mov
call
push
cltd
xchg
sbb
rcll
or
outsb
pop
jge
inc
sti
test
inc
xchg
or
iret
loope
and
mov
lcall
sahf
mov
or
inc
adc
test
sub
sbb
xchg
pop
pop
sub
mov
das
fmull
pop
aaa
mov
test
add
or
dec
das
push
jno
loope
mov
inc
mov
xor
push
xlat
lcall
cmpsl
rclb
int
inc
cmp
std
inc
mov
jl
adc
cmp
test
outsb
ret
jp
xor
cmp
repz
mull
outsl
sbbl
inc
xchg
shll
jmp
xor
in
leave
jg
mov
out
mov
fisubl
mov
pop
dec
push
mov
pop
loop
jb
scas
sti
mov
xchg
sbb
aam
push
popf
lea
shll
or
fcompl
fwait
xor
orl
sbb
jl
ret
fistpll
inc
sbb
gs
inc
adc
sbb
jp
inc
in
pop
or
pop
push
call
xchg
cli
push
xchg
sti
or
popf
jne
inc
rcrb
jge
lods
das
adc
jae
in
shrl
cmp
in
pop
lcall
es
cmpsl
nop
pop
inc
push
xor
jo
arpl
cltd
mov
jmp
pop
fisttps
mov
lea
imul
xchg
dec
sbb
shlb
mov
xchg
cld
jne
lret
and
push
pop
sub
pop
dec
pop
fincstp
subb
jge
xchg
sbb
out
cld
cmp
dec
or
push
push
adcl
imul
and
pop
mov
bound
mov
jae
push
in
or
dec
popf
out
lods
leave
dec
mov
mov
xor
pop
int3
push
pop
dec
or
lcall
mul
sbb
push
cmpsb
andl
data16
and
pop
inc
mov
mov
cmp
test
or
and
push
add
fmull
sbb
pop
dec
jbe
jnp
je
and
inc
test
daa
push
jo
stc
pop
call
push
ss
xor
xor
cltd
in
call
mov
cli
fiadds
mov
es
pop
push
pop
mov
adcb
xchg
add
xchg
push
push
mov
xchg
xchg
lock
xorl
mov
les
fcmovu
push
bnd
cli
in
hlt
mov
imul
outsl
jne
clc
push
push
mov
adc
int3
xchg
push
cld
mov
mov
add
xchg
ljmp
mov
xor
movsl
lock
in
jmp
mov
bts
sub
das
mov
mov
call
fsubp
mov
sti
dec
testl
mov
push
mov
inc
sar
adc
sub
popa
cmpl
pushf
jns
sub
pop
popa
mov
push
test
add
jo
xchg
sbb
movsl
int3
shll
out
in
sarl
push
push
jo
jne
jmp
mov
and
pop
cmp
outsl
rclb
dec
popf
jmp
fsubl
test
add
imul
sbb
ds
test
roll
ret
inc
testb
ja
call
arpl
adc
stos
sbb
or
adc
add
fmuls
xchg
xchg
push
dec
and
fucomip
jns
daa
adc
sbb
insb
rorl
xchg
adc
call
xchg
jle
jcxz
lods
sahf
pop
incb
std
ja
jb
and
popf
test
mov
rcll
push
cmp
and
mov
shr
pop
sub
iret
imul
mov
notl
xlat
sub
or
xchg
adc
jmp
inc
jle
nop
and
sbb
movsb
scas
stos
ds
sbb
int
mov
inc
in
pop
aas
or
leave
or
inc
mov
cmpsb
ds
testl
push
sub
fdivr
stc
repnz
sahf
pop
nop
pop
add
mov
ret
hlt
and
jbe
int
fists
mov
sahf
push
add
mov
xor
xor
mov
jae
push
js
and
notl
jge
iret
out
repz
push
insb
pushf
push
jne
lds
mov
xor
sub
cmp
push
mov
sub
adc
inc
inc
pop
push
cmp
fdivl
into
push
ret
cmp
lret
iret
add
aaa
xor
cwtl
test
pop
pop
repz
pop
addr16
mov
push
xlat
inc
outsl
popf
mov
enter
sbbl
push
fsub
out
dec
jecxz
shlb
popa
mov
jne
add
add
sbb
push
addl
cmp
pop
nop
jae
ds
cmp
adc
inc
sbb
outsb
sarl
jo
adc
mov
xlat
mov
push
lea
push
lcall
fsubs
sub
negb
inc
pusha
mov
mov
add
pop
xor
adc
push
stos
in
cmc
mov
mov
xchg
xorl
mov
lods
cld
sbb
inc
outsl
sbb
mov
dec
lock
mov
insb
iret
mov
mov
fistpl
ret
push
fldl
jo
lea
aam
pop
add
inc
push
sbb
ljmp
jge
loop
xchg
pop
jecxz
push
mov
mov
sbb
inc
or
push
rcl
aas
int3
fadd
inc
fmuls
fisttpl
test
xchg
dec
mov
mov
cmpb
jbe
icebp
push
cmp
in
mov
pop
xor
cwtl
fs
add
pop
push
das
jl
sub
or
arpl
rcr
in
ret
push
xchg
or
les
daa
movsb
push
popa
adc
inc
jns
dec
cmp
leave
mov
dec
add
mov
loopne
repz
adc
lcall
cmc
les
lahf
push
insl
or
add
pusha
mov
mov
adc
sbb
pop
adc
pusha
leave
pop
jg
xchg
pusha
aaa
jmp
ljmp
add
adc
rcl
test
je
scas
pop
test
cli
leave
testl
pop
and
adc
mov
call
push
pop
cwtl
lea
dec
in
xlat
sub
lcall
loopne
jo
jmp
push
mov
fcmovne
mov
xchg
xorl
call
maxps
adc
jg
ret
stos
out
pop
lahf
mov
push
fidivs
stos
mov
push
sub
in
mov
jge
inc
pop
divl
mov
popf
aam
imul
lods
xor
mov
xor
and
mov
lds
clc
mov
sbb
or
jno
fstp
xor
mov
lock
repnz
ds
sbb
lret
int3
rcrl
faddl
cmp
outsb
in
out
daa
fs
stos
dec
rorb
lods
xor
push
mov
mov
cmpb
out
cld
fdivl
in
aad
or
sarl
lods
mov
jbe
adc
jno
les
adc
xor
inc
adc
imul
pusha
xchg
or
pop
sbb
mov
mov
mov
test
jp
test
cmp
es
push
mov
fisttpl
xchg
add
mov
or
sbb
pop
sub
ficomps
add
fdivrl
sbb
or
jl
jmp
cmc
fsts
adc
cs
cmp
sbb
clc
cli
mov
rol
or
out
std
sub
add
sub
adc
ljmp
std
pcmpgtb
push
gs
xor
mov
rcr
lret
jo
xchg
dec
pop
in
pop
pop
fs
or
lock
mov
hlt
sub
xlat
aam
out
add
mov
or
icebp
imul
pusha
sbb
fdivs
lcall
push
sub
jg
sti
cmp
push
roll
fwait
in
inc
int3
inc
rolb
ror
pop
and
hlt
movsl
sbb
sbb
out
mov
mov
cli
scas
cmpsl
mov
push
sbb
push
push
xor
and
inc
push
std
and
dec
dec
adc
imul
cmc
mov
in
push
lock
cmpsl
dec
mov
enter
add
jle
cmc
pop
pop
jecxz
cmp
fidivl
mov
inc
jg
rclb
xchg
popa
xchg
add
xchg
rolb
movsb
cmp
add
nop
fbld
dec
xor
lea
cmp
pop
mov
push
push
pusha
repnz
outsb
jmp
iret
lea
xlat
and
fxch
pop
or
mov
ljmp
pop
sub
xchg
popf
mov
cli
jmp
lret
jmp
ds
out
popf
push
out
dec
in
pop
push
or
sbb
adc
es
push
and
je
push
pop
xor
outsl
mov
leave
ds
jge
fcmovnb
jge
in
sbb
repnz
and
add
lret
fnsave
lea
jbe
movd
or
push
daa
iret
cmpsb
int3
cmp
mov
mov
jmp
pop
je
std
inc
icebp
jge
cmpsb
add
add
cmp
jmp
xchg
test
pusha
insb
sbb
push
inc
int
mov
mov
andps
cs
jae
loopne
sub
mov
ljmp
popa
or
cli
dec
pushf
jge
arpl
iret
push
inc
lods
sub
bound
push
testb
xor
mov
inc
lods
push
fwait
mov
sbb
cmp
xlat
xor
pop
sub
jmp
dec
push
mov
in
pushf
pop
jle
adc
loope
push
jge
pop
jae
mul
sarb
mov
jne
pop
dec
cmp
iret
cmp
adc
xchg
jmp
aam
jge
mov
jmp
filds
cmp
sub
insl
xor
pop
xchg
xchg
xor
and
in
cmp
push
or
mov
lea
inc
dec
xchg
hlt
ds
jbe
xor
das
dec
jb
roll
pop
or
jl
push
movsl
inc
lock
mov
xor
cwtl
dec
xor
push
pop
jne
or
sbb
dec
pop
xor
gs
es
incl
imul
shll
arpl
add
add
push
pusha
stc
jne
cmp
cmpsb
cmp
cmp
loopne
lret
push
sbb
scas
aad
adc
inc
dec
push
inc
in
fstl
adc
pop
pop
jo
lods
loopne
int3
push
sub
cwtl
incb
icebp
pop
adc
cwtl
jmp
cmpsl
add
das
imul
scas
pushf
pushf
movsb
mov
fsubs
jmp
loope
bound
mov
enter
std
sarl
cmc
adc
daa
push
lcall
adc
sahf
stos
pop
adc
xor
push
scas
xor
loopne
fdiv
xor
fcmovnbe
sub
mov
push
mov
iret
cld
add
pusha
mov
sbb
shll
outsb
sub
and
xchg
jmp
lods
movsb
in
das
fs
inc
lret
mov
jg
xchg
in
cltd
call
xchg
loop
dec
add
mov
int3
or
pop
shlb
lock
nop
sub
dec
add
cmpsb
rcrb
mov
xor
rcl
popf
fcmovnu
inc
int
movl
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
pushl
call
mov
dec
mov
jmp
push
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
inc
xor
sub
mov
movl
push
xorl
add
jmp
mov
notl
mov
notl
inc
cmp
movl
jb
adc
mov
xor
add
jmp
andl
mov
and
mov
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xorl
mov
add
sbbl
movzwl
xorl
mov
negl
mov
orl
movzwl
xorl
xor
add
mov
mov
inc
mov
cmp
movl
jne
mov
movl
mov
decl
xor
add
andl
mov
dec
mov
xor
andl
add
movl
mov
not
movl
movl
movl
mov
mov
movl
mov
jmp
mov
add
mov
andl
xor
xor
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
movl
mov
lea
mov
mov
mov
lea
movzwl
sbb
mov
mov
andl
mov
add
mov
negl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
orl
mov
mov
add
mov
lea
add
mov
mov
orl
mov
lea
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
sbbl
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
jmp
sarb
jae
dec
bound
xorl
jl
and
xchg
mov
loop
mov
push
sub
test
data16
adc
dec
in
ret
adc
push
gs
shll
lods
cmpsb
lcall
mov
mov
stos
lods
sbb
pop
loope
sahf
inc
push
mov
scas
test
cmpl
adc
ja
lods
mov
shl
rol
lcall
mov
leave
rclb
lock
sub
mov
mov
shrb
cmp
mov
sbb
enter
fnstenv
jns
imul
add
mov
xchg
movsb
mov
fucom
test
mov
mov
and
and
mov
jae
jcxz
hlt
in
nop
imul
pop
mov
nop
inc
sbb
insb
in
and
imul
sub
push
cld
imul
inc
push
outsb
add
sub
mov
mov
cmpsl
push
dec
addl
stc
ret
insb
cmp
cs
sahf
and
aas
cmp
jns
popa
fcoms
add
test
dec
mov
roll
pop
xor
cmp
or
daa
and
fidivs
mov
inc
sub
xchg
nop
scas
ljmp
xor
mov
fwait
sbb
push
mov
es
sub
rcr
cs
or
mov
add
in
push
cmp
cltd
xchg
mov
cmc
scas
aaa
ja
xorl
jnp
adc
popf
jns
fistpll
sbb
xor
into
cmc
shrl
insb
sbbl
test
mov
inc
test
jl
mov
push
fldt
lret
std
add
ja
popf
lcall
and
mov
sbb
push
ficoml
cmp
add
in
inc
out
data16
xor
sbb
mov
add
aas
lds
nop
aas
mov
xchg
popf
xor
mov
sub
popa
mov
test
dec
ds
addr16
sbbb
adc
in
xchg
sub
add
int
push
mov
mov
or
popa
mov
adc
jp
je
roll
and
psubw
mov
push
xchg
movsb
dec
jecxz
jmp
aaa
sbb
gs
addl
mov
dec
mov
iret
aam
enter
sbb
pusha
add
adc
fs
leave
fstl
inc
pusha
shrl
das
sti
gs
addr16
stc
mov
stos
and
add
push
mov
in
add
fmuls
xchg
jmp
adc
xchg
iret
pop
ret
jmp
xchg
lcall
push
mov
jno
ret
out
push
ss
adc
or
cld
dec
push
jg
stc
rolb
cmpsb
inc
mov
xlat
mov
add
mov
cmpsl
cltd
outsb
lods
aas
sub
shll
or
imul
dec
ljmp
int3
out
pusha
xor
and
dec
mov
addl
rolb
lret
pop
insb
push
add
mov
sbb
sbb
fnstsw
ja
mov
test
int3
cmp
cmp
inc
jne
xchg
xorl
inc
push
push
popf
sti
outsb
fmul
test
aaa
inc
push
mov
push
dec
dec
or
lahf
push
scas
cltd
jg
aam
lock
into
sub
lock
and
mov
lock
sub
xorb
daa
div
lahf
pushf
dec
inc
inc
imul
enter
mov
push
insl
jns
inc
fnstcw
sub
inc
mov
jmp
lock
arpl
out
or
sbb
add
adc
dec
out
jae
hlt
jp
clc
push
fiadds
clc
ds
leave
inc
push
push
or
adc
xchg
stc
stos
and
repz
clc
testb
lahf
pusha
mov
push
xchg
xchg
inc
into
test
dec
mov
fsubp
xchg
fwait
xchg
jg
lock
mov
push
or
pusha
call
mov
pop
pop
push
mov
into
adc
mov
cs
cmpsl
jae
jmp
aad
pop
cmp
lds
out
fcomip
pop
or
xchg
and
cmpsl
incb
or
and
cltd
push
retw
and
jno
xor
clc
dec
data16
xchg
sub
fdivl
push
jge
cli
adc
out
leave
push
lahf
inc
adc
popf
lret
clc
icebp
adc
ljmp
lcall
scas
popa
ja
push
arpl
decl
cltd
push
push
xor
cmp
inc
add
hlt
sub
out
xlat
movsb
fsubrs
and
fwait
jg
push
sar
imul
push
stc
pop
out
pop
or
mov
adc
dec
and
clc
sbb
jb
popa
popl
lods
dec
mov
jg
test
or
cld
sbb
leave
ds
sub
mov
mov
popf
xor
out
sub
leave
hlt
test
lods
into
mov
sub
ficoml
ljmp
sbb
xchg
mov
jnp
test
jne
movsl
div
adc
xor
and
insb
inc
dec
ficoml
dec
scas
adc
psrld
xor
fisttpl
ret
hlt
mov
dec
addr16
xor
inc
push
mov
xchg
cmp
cmp
sub
sub
movsb
inc
mov
js
bound
jp
lret
xchg
scas
stos
cmp
aaa
sti
pop
das
xchg
mov
mov
push
jge
out
orb
push
adc
cmp
ret
sbb
loope
jmp
jnp
dec
jb
push
cld
cmpsb
mov
push
dec
push
loope
pop
js
lock
xor
add
daa
fsubrs
scas
jbe
mul
repnz
cmp
and
mov
mov
pop
in
cmpsb
pop
jb
movsb
sbb
ljmp
movsl
fwait
mov
lahf
test
adc
or
adc
sbb
bound
xchg
fwait
xor
mov
inc
mov
xchg
sahf
les
iret
dec
push
fbld
addb
jp
pushf
scas
dec
loopne
push
dec
mov
les
jno
fstpl
mov
fdivs
mov
mov
bound
mov
jle
xchg
ds
out
sahf
xorb
xor
pop
jae
loop
scas
lds
dec
pushl
lret
inc
call
xlat
mov
rcll
je
ljmp
xor
inc
pushf
push
rcrb
shlb
out
daa
popa
adc
mov
out
jne
and
mov
xchg
push
sub
std
xchg
xlat
ret
add
mov
mov
aam
loop
jnp
insb
dec
xchg
mov
jb
scas
icebp
push
pop
mov
jecxz
mov
loopne
adc
sbb
hlt
mov
in
inc
jle
lret
popf
cmpsl
lret
and
add
dec
movmskps
jmp
jnp
enter
push
insl
aam
pusha
mov
xchg
outsl
jle
lcall
inc
repz
dec
or
and
xor
jo
lods
aad
and
je
mov
jno
mov
into
jno
mov
xchg
xchg
rcrl
loopne
xor
test
stc
pop
mov
outsl
dec
mov
xor
cmpsl
jp
sub
ss
shrd
push
pusha
mov
fcmovnbe
test
and
cmp
lock
mov
mov
xchg
jg
xchg
mov
lret
rcll
mov
sub
movsl
dec
cld
lds
lea
loopne
dec
sbb
popf
and
mov
jnp
shlb
int
ja
mov
sub
test
jl
or
xorl
std
repz
jge
pushf
mov
push
out
adc
push
loopne
loopne
insb
ret
sbbl
add
and
pop
dec
cli
in
test
mov
or
lds
dec
jle
cmpsl
cmp
nop
jge
ss
add
scas
lods
mov
in
sub
xchg
xlat
sbb
push
shl
movsb
pop
insl
sub
xlat
das
adc
sbb
fcoml
repnz
and
mov
sbb
and
sbbb
xor
inc
jmp
xor
mov
addr16
lret
fistps
ds
fadd
test
jp
test
fcoml
mov
cmpsb
mov
loop
into
jge
rcl
dec
mov
fcoml
adc
cmp
hlt
pop
push
xor
pop
mov
mov
inc
fldl
cmpsl
loop
scas
xor
mov
aas
call
sbb
adc
in
lea
push
js
mov
cmp
xchg
out
mov
jnp
dec
push
outsl
lahf
add
xchg
or
idivl
sub
push
out
cmpsb
pop
dec
lret
dec
pop
adc
cmc
cmp
push
xor
xchg
inc
or
filds
cmpps
xchg
sub
fldenv
cmpsb
mov
or
clc
sub
out
adc
pop
popf
mov
and
mov
bound
mov
push
cmp
jl
pop
hlt
test
sbb
cmpsb
ja
inc
add
andb
jno
nop
dec
fldcw
loopne
add
cmp
mov
das
test
in
sbb
push
sbb
xlat
aas
inc
or
fmul
testl
loope
rcr
and
mov
or
dec
push
cld
xor
sahf
sarb
inc
test
xchg
sub
pop
dec
loop
in
push
imul
cltd
sahf
movsl
sub
jno
inc
or
inc
push
pop
ds
mov
dec
pop
cmp
lock
push
imul
gs
popf
enter
pusha
test
add
mov
popf
push
or
adc
fisubrs
sub
xchg
ret
cs
ljmp
outsl
xchg
mov
jecxz
xchg
lahf
aas
jmp
fisttpll
repnz
or
test
dec
push
xchg
std
enter
fstl
mov
fwait
jge
ja
clc
xchg
enter
pop
jb
dec
pop
xor
das
mov
inc
mov
dec
mov
xchg
lcall
loop
and
loope
in
mov
test
icebp
jbe
frstor
notl
lret
lds
or
dec
or
int3
fldenv
push
inc
rcll
push
jl
clc
sub
fildl
push
imul
sarl
inc
into
xor
jecxz
hlt
and
add
gs
mov
push
int3
les
rcrl
adc
je
pusha
ss
jne
jecxz
dec
or
pop
in
ja
jle
pop
ret
sub
add
test
or
jmp
or
sti
lods
pop
hlt
dec
fwait
sbb
xchg
leave
idivb
pop
js
pop
cmp
scas
test
cmp
inc
mov
xchg
cmp
clc
dec
jecxz
loopne
or
pop
ljmp
inc
dec
pop
aaa
mov
enter
push
sarl
out
dec
pop
mov
inc
adc
mov
pushf
jno
or
mov
sbb
xchg
xchg
or
lock
adc
test
push
mov
mov
popa
xchg
jmp
out
iret
popf
cwtl
dec
cmpl
adc
jmp
adc
imul
mov
cli
hlt
gs
or
mov
pop
sbb
pop
push
aas
adc
pop
inc
mov
in
mov
dec
test
and
int3
dec
pop
mov
add
cmpsl
and
or
jbe
cli
adc
mov
inc
xor
mov
gs
and
stc
cltd
out
dec
lcall
push
loope
sub
pop
imul
fcompl
fld
in
out
imul
pop
repz
xchg
stos
fmulp
dec
faddl
add
stos
out
movsl
fsubrs
pop
mov
pop
sar
cmp
mov
int3
xchg
js
cmp
cmp
cmpsl
imul
shll
and
mov
ss
xchg
xorl
cli
lcall
push
sub
adc
xor
xchg
out
and
push
int3
xorl
mov
ret
mov
jae
sub
std
mov
gs
aaa
loope
out
jb
test
shr
jmp
or
pop
pop
jge
adc
sub
popf
push
fstps
cmpsl
out
cmc
test
sbbb
cvttps2pi
or
mov
sbb
push
or
hlt
push
jle
inc
roll
data16
dec
add
lahf
stc
xlat
cvtps2pi
sti
inc
inc
repz
jl
sbb
pop
xchg
inc
lods
sarl
jp
aam
push
xchg
jae
out
sub
testl
lcall
std
xchg
adc
lret
loope
push
int
inc
int3
xchg
adc
pop
sub
mov
xchg
jno
call
ret
lret
mov
test
cmp
scas
mov
testb
xorb
add
test
shll
or
xor
xor
addr16
popa
inc
sub
mov
mov
shrb
test
mov
cmpsb
fstpt
repz
add
scas
gs
mull
pushf
lods
mov
rclb
sbb
jg
gs
pop
cmc
enter
xchg
pop
sbb
insb
cmp
fstl
sbb
inc
xchg
fdivr
imul
cmp
sub
test
xchg
lret
out
cmp
fs
int3
xor
mov
clc
call
pop
aas
xor
push
mov
imul
les
fists
pop
inc
adc
mov
mov
push
mov
out
rcrb
xchg
push
je
sbb
adc
inc
cmp
and
adc
fwait
push
addr16
lcall
shlb
adc
jge
mov
or
mov
test
dec
push
mov
mov
div
mov
in
bound
clc
xchg
mov
push
pop
stos
adc
add
addl
leave
push
imul
cmp
inc
pop
cmp
pushf
outsb
idiv
sbb
push
in
fstpl
sbbl
lret
outsb
lea
inc
lock
mov
into
or
rolb
test
mov
repz
add
xchg
out
scas
cwtl
int3
cmpsb
pushf
ljmp
pop
push
aaa
pushf
jae
jbe
ret
mov
testl
add
test
mov
xor
arpl
and
pop
out
lahf
or
adc
cld
ret
cld
iret
dec
and
lcall
insb
jle
clc
xor
mov
aam
lds
xor
aam
mov
test
dec
adc
stc
cmc
mov
sbb
ret
xchg
aaa
xchg
fisubl
mov
xor
lods
inc
sbb
sti
jl
icebp
mov
push
test
insl
aas
xor
fistl
cmpsl
ljmp
ja
out
jl
pop
mov
fsubp
ficoms
xchg
sbb
fcomip
mov
mov
cli
push
daa
jbe
lahf
sbb
xor
ds
mov
push
lea
push
aam
cmp
sbb
or
sbb
push
imul
sahf
outsl
sub
js
mov
shlb
cmp
fisubs
std
dec
adc
mov
jp
daa
xlat
fildl
dec
push
cmp
ds
or
movsb
out
push
push
cmpsb
ljmp
je
jp
pop
mov
sbb
arpl
pop
mov
iret
add
lahf
decb
pop
mov
mov
sarl
sub
sbb
push
mov
test
repnz
jno
into
dec
and
lahf
lds
cmp
ja
jne
jecxz
cmp
loop
sub
in
xor
ret
cmp
mov
lcall
xchg
mov
movl
adc
and
add
shll
sbb
rcr
pusha
insb
ja
shl
and
dec
scas
mov
push
incl
jns
out
inc
stos
jle
and
adc
outsl
xchg
push
jae
jecxz
fwait
das
mov
subb
sahf
retw
ret
jne
or
mov
mov
and
int
jmp
pop
hlt
xchg
add
std
jnp
mov
std
clc
mov
jns
scas
loopne
mov
cmp
dec
adc
les
ss
pop
push
sbb
out
jb
lret
data16
pop
in
or
aas
mov
lea
mov
out
adc
repnz
jl
subb
pop
mov
dec
push
clc
in
add
pop
imul
cs
and
clc
lds
xor
push
aam
xchg
xor
xchg
repnz
push
adc
bound
out
pop
in
inc
xchg
popa
jp
or
inc
je
int3
push
movsb
xchg
jb
mov
test
in
je
stc
jmp
fisubrs
mov
jmp
clc
jecxz
imul
dec
out
xchg
xor
jne
arpl
and
lea
ror
mov
cmpsl
aad
sub
in
clc
ret
imul
mov
jno
push
add
lahf
lods
pop
xchg
push
pusha
and
sbb
fistps
scas
js
int3
push
push
or
mov
ja
inc
mov
ja
stc
xchg
mov
rdtsc
add
inc
outsb
cmp
arpl
push
daa
mov
cmp
shrb
jmp
push
div
xchg
cmp
jmp
mov
rorb
mov
cmp
loopne
pop
cld
xorb
jg
shll
inc
test
ret
push
mov
xchg
cli
and
stos
jns
lahf
mov
push
pop
add
mov
jo
cs
das
movsb
pop
iret
xor
xchg
dec
and
gs
mov
int3
daa
hlt
pop
iret
mov
add
mov
imul
mov
jae
aam
imul
push
lret
sahf
clc
push
ss
outsb
sub
sahf
fcoml
pop
push
iret
repz
nop
ds
xchg
ja
sbb
and
test
jno
jl
loop
xor
xchg
or
mov
arpl
leave
out
shll
stos
xor
sub
imul
sbb
movsb
push
push
clc
push
cmpsb
jle
test
enter
cmp
fmuls
sub
inc
pusha
repz
sbb
mov
pushl
mov
nop
xchg
xchg
jns
mov
sbb
xor
pop
add
sahf
xor
cltd
popf
outsl
inc
inc
je
mov
pop
addr16
popa
lods
xorl
jmp
mov
sbb
sbb
mov
cmp
mov
stos
adc
ss
xor
shlb
jl
fisubrs
dec
xchg
bnd
pop
dec
lods
jne
insb
xchg
cmp
push
movsl
mov
cmp
jmp
cld
sbb
sub
mov
jnp
pop
xor
jp
jmp
repz
and
xchg
loopne
fldenv
stos
fdivr
xchg
add
push
xor
cli
cmp
sti
int
push
push
out
icebp
pop
xor
stc
mov
fisubs
adc
inc
or
jnp
mov
sbb
dec
or
dec
fdiv
orps
push
mov
dec
outsl
lret
inc
mov
cmpb
enter
fildll
mov
int3
add
lahf
mov
rdpmc
jb
insb
lahf
negl
push
xor
xchg
and
clc
dec
ror
sbb
imul
dec
mov
std
push
jge
sub
push
movsb
adc
aas
jno
push
pop
pop
xor
insb
xlat
ljmp
add
sub
dec
fwait
cwtl
sub
jne
mov
cmc
inc
imulb
ficomps
push
jge
jg
stos
xchg
inc
dec
ss
and
sbb
cwtl
lock
jne
ret
repz
icebp
add
sub
popa
cltd
dec
pop
and
xchg
roll
pushf
or
or
lock
inc
fistps
push
add
and
xchg
loopne
mov
pop
lret
push
sbb
cmp
lock
mov
int3
push
icebp
and
test
out
ret
xchg
add
and
sub
stc
pop
nop
mov
push
movsb
mov
out
es
lcall
popf
and
in
jmp
decb
test
mov
fdivrs
dec
pop
out
cmc
jae
dec
jno
lock
adc
xchg
push
mov
sbb
mov
and
pop
in
push
adc
je
mov
sub
mov
mov
mov
fisubrs
test
fldl
mov
mov
test
gs
jo
test
ljmp
or
fcmovnbe
and
lret
orl
mov
pusha
iret
sub
mov
xchg
add
aam
adc
aas
mov
mov
stc
out
mov
push
imul
rcll
nop
cld
push
xchg
cmp
pop
inc
cmp
call
adc
mov
insl
test
or
lret
lret
cmp
pusha
addr16
mov
pop
jno
js
pop
jmp
lock
lcall
push
leave
mov
adc
cmp
and
push
lret
mov
es
fisttpll
icebp
inc
test
inc
repnz
mov
out
mov
pusha
mov
ljmp
sub
lcall
or
xchg
cmpsl
xor
enter
jp
cmp
mov
xchg
or
lods
sbb
mov
mov
xchg
imul
inc
aad
ret
mov
leave
into
mov
pusha
xchg
mov
jle
sbb
or
mov
sub
jne
push
xchg
mov
in
push
aas
lods
sarb
out
xchg
cli
testb
test
cltd
sub
add
mov
add
adc
cli
stc
sbb
nop
adc
adc
fisubrl
mov
cld
jo
outsl
fsubl
fnstcw
sub
divb
movsl
jb
sub
popf
jl
mov
ficoml
push
dec
pop
inc
xchg
xor
fists
cmp
aas
orl
or
ret
ficompl
icebp
push
stc
enter
pop
add
xchg
test
adc
and
jb
jge
sbb
sbb
leave
aam
add
in
mov
dec
divb
cs
inc
mov
bound
pushf
das
ljmp
dec
test
cli
or
lahf
inc
sub
aad
inc
adc
pop
mov
std
mov
pop
mov
ljmp
mov
jno
mov
fstl
stos
imul
mov
ret
fisubrs
ds
dec
dec
nop
stc
push
mov
xchg
fnstcw
xchg
cltd
out
and
mov
enter
mov
loopne
ja
lods
dec
cmpb
je
dec
out
es
mov
loop
js
ja
stos
loope
xchg
jae
test
out
es
pop
arpl
and
sahf
push
cwtl
xor
into
cli
test
push
pop
iret
pop
adc
inc
arpl
ja
repz
and
cmpsb
jmp
clc
sbb
roll
in
adcb
add
jae
cltd
xchg
cwtl
push
fisttpll
adc
fmuls
lret
insl
fldcw
sub
fcomps
inc
pop
xchg
xchg
imulb
mov
cmc
fpatan
pop
insb
outsb
mov
sbb
cmp
into
push
sub
fwait
or
divb
xchg
and
jb
cmp
dec
mov
sbb
push
in
out
xor
mov
pop
push
mov
push
mov
push
out
out
popf
or
mov
test
or
sbb
pop
pushf
push
sbb
aad
and
stc
adc
ret
add
ds
push
mov
push
or
xchg
fbstp
mov
rcll
pop
jnp
or
dec
loop
and
orl
or
lods
cltd
pop
lods
mov
push
arpl
sub
mov
inc
sti
pop
in
cmc
jne
jle
cmp
lds
ss
cld
icebp
shlb
int3
movsb
mov
jo
outsl
out
jae
inc
sbb
out
movb
jnp
add
repz
stos
dec
or
or
lret
dec
pushf
sbbb
stos
inc
mov
jnp
icebp
jo
dec
dec
push
inc
xchg
dec
sub
inc
pop
jns
cmpb
mov
mov
add
mov
js
sbb
inc
jle
fcmovnbe
stos
ds
mov
push
pop
push
jecxz
out
nop
jbe
div
stos
pop
cld
inc
rorl
pop
xchg
mov
aas
and
cmc
inc
cwtl
test
and
insl
mov
sub
xor
or
mov
les
dec
iret
aad
dec
dec
sbb
jp
mov
xor
inc
mov
popf
fwait
lret
in
jmp
push
out
mov
cmc
add
xor
aas
int
out
pop
sub
loopne
inc
iret
mov
lea
lcall
shr
pop
roll
ret
push
xor
cmc
cmpsl
dec
dec
nop
pop
mov
movsb
mov
ds
insl
fisubs
pop
mov
push
xchg
jno
mov
cmp
cmp
push
subl
mov
cmp
and
gs
xor
sub
ficoml
pop
movsb
push
sahf
subl
mov
pop
in
int
dec
lret
int3
sub
pop
testb
int3
or
xor
inc
dec
jge
sbb
call
xchg
scas
sub
cmp
movsl
ljmp
adc
dec
outsb
push
lods
jo
js
out
xor
adc
cmp
or
mov
jbe
loope
push
cld
int3
inc
dec
mov
dec
jbe
xchg
ror
pop
sub
fisubl
push
push
mov
mov
push
rorl
cli
mov
testl
aas
pusha
dec
loope
addl
and
roll
push
imul
insl
fs
negl
filds
inc
xchg
and
dec
add
ja
mov
roll
nop
lret
stos
int3
jge
jne
mov
sub
and
shlb
mov
lods
popf
test
ss
dec
jge
iret
repnz
push
mov
cs
fiaddl
pop
adc
xchg
hlt
jns
arpl
shlb
cmc
sbb
xor
dec
xor
sub
ret
xchg
pop
cmp
xchg
pop
bound
pop
xchg
ret
inc
push
out
scas
mov
xchg
fcomps
push
sbb
les
in
mov
or
sbb
jo
int3
sub
pop
pop
stos
mov
imul
stos
dec
inc
adc
sub
test
push
subb
outsl
test
push
dec
divb
dec
fildll
jge
push
lods
mov
xor
dec
test
xchg
fwait
push
sub
cmpsb
push
outsl
inc
cmovs
sti
int
test
shlb
push
loopne
jnp
imul
pop
addr16
pop
push
mov
sbb
inc
dec
repnz
call
mov
push
cli
negl
pop
daa
sti
clc
sahf
repnz
fistpll
xlat
and
fidivrl
je
xor
jne
orl
pop
pop
mov
pop
jne
pop
pop
fisubrl
mov
gs
jnp
shrl
shlb
shlb
ret
cwtl
add
adc
pop
popl
inc
cli
pop
testl
dec
inc
cmc
mov
pop
mov
hlt
dec
lret
pop
pop
roll
xchg
les
sbb
cmp
jne
lret
fadds
dec
push
addb
jg
and
out
dec
addr16
iret
inc
jmp
mov
shll
and
fwait
adc
fsubs
imul
dec
jno
outsb
pop
mov
cmp
xchg
cwtl
cmp
je
sbbl
jo
add
and
inc
adc
add
loopne
cmp
rcl
aad
cmp
mov
je
mov
mov
and
fstpt
sub
sub
mov
mov
push
pop
add
cmpsl
jae
imul
gs
or
les
dec
and
jnp
xchg
push
ret
fwait
mov
and
jecxz
mov
dec
shlb
cmp
jo
enter
into
push
stos
xor
sbb
hlt
and
jl
push
repz
repnz
stos
dec
scas
lret
ret
pop
lcall
js
loope
in
enter
cmp
sbb
adc
fdivl
fwait
jecxz
loop
shll
pop
xchg
loopne
dec
jmp
push
ret
mov
scas
stc
ljmp
inc
loope
push
mov
fidivrl
int3
mov
mov
sbb
inc
and
dec
push
rorl
add
sbb
je
pop
test
fldenv
cmp
add
pusha
cltd
mov
push
mov
mov
sbb
push
pop
add
fistpl
stos
scas
repz
idivl
sbb
inc
pop
repz
sub
or
mov
sbb
inc
sbb
mov
dec
outsb
adc
stos
mov
jge
dec
dec
fiaddl
xchg
cs
ficomps
pusha
xchg
repnz
sub
fbstp
dec
fsts
mov
jno
lret
in
pushf
sarb
pop
pushf
addr16
or
sarb
xor
adcb
iret
push
push
cmpb
inc
or
in
outsl
cmpsl
sub
mov
fsubrl
idivl
push
test
inc
gs
pushf
lea
stos
andl
jb
push
jl
test
mov
shl
loop
push
xor
pop
ja
inc
sub
insb
mov
pop
sahf
sti
sub
adc
jo
dec
shlb
mov
mov
xchg
mov
data16
sub
pop
inc
lds
xlat
das
shrl
lcall
mov
inc
adc
sub
xchg
jb
sbb
fdivrs
add
jmp
jl
sbbb
adc
test
pop
inc
sub
adc
daa
in
cmpsl
jbe
push
or
sbbb
inc
sar
sbb
inc
fnstcw
push
sbb
fcomi
cmp
cmpsb
in
mov
aad
mov
mov
xchg
cmp
ds
not
sarb
mov
stos
xor
subps
cmpsl
push
adc
mov
filds
mov
jo
pop
fadds
jg
mov
ret
in
sub
enter
daa
aad
out
leave
xchg
sbb
mov
addb
jp
or
sbb
adc
into
push
orb
sub
aaa
sti
addr16
push
inc
fidivrs
fdivs
mov
bound
cmp
hlt
or
xor
ljmp
dec
aas
daa
les
inc
ficompl
leave
mov
pop
mov
fst
pop
push
adc
addr16
inc
imul
imull
dec
daa
loope
pop
stos
pop
adc
int3
inc
add
dec
outsb
rcrl
shll
cld
adcb
add
sbb
sti
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
mov
cmp
mov
pop
int
jl
pop
jl
repz
pop
push
dec
mov
sahf
mov
movups
fmuls
push
pushf
cmp
sub
loop
idivb
cmc
mov
mov
add
insb
lret
pop
push
rolb
mov
outsl
or
or
xchg
out
outsl
lods
xchg
mov
xor
in
push
sub
xchg
in
out
push
loop
dec
lret
dec
sbb
popa
pusha
scas
mov
roll
fxch
pop
les
mov
xchg
or
cmp
lea
sub
loopne
sub
xchg
ret
inc
xchg
pusha
mov
ret
jle
or
bound
roll
sub
sub
mov
icebp
daa
hlt
xor
divl
push
push
jp
jle
or
addr16
sbb
outsb
pop
movsl
xor
mov
mov
pop
bound
pusha
ds
loopne
adc
insb
pop
sbb
push
inc
cltd
inc
push
jo
mov
inc
je
cli
cs
pushf
jb
stos
and
cmp
adc
sbb
pop
iret
sbb
aaa
gs
sbb
sarl
icebp
cmpsb
in
dec
sub
mov
rcrl
pusha
divl
int
jp
mov
testb
dec
jecxz
sbb
cmc
pop
movsb
mov
xor
sbb
jo
orl
mov
daa
loop
shrb
scas
xor
std
jp
mov
addr16
jno
lods
add
sbb
add
test
jg
cmp
bound
push
sub
insl
mov
and
mov
imul
xor
mov
mov
andb
xlat
adc
adcl
bound
arpl
ja
and
mov
inc
cwtl
movsl
shl
push
scas
push
jns
cmp
mov
dec
and
nop
bound
pusha
shr
mov
gs
in
dec
sbb
sub
cmp
cli
in
mov
adc
dec
test
push
mov
add
push
pop
lods
outsb
lock
adc
mov
mov
inc
pushl
stos
xchg
je
scas
xorl
ss
adc
leave
pop
jae
jo
mov
into
fldl
xor
std
movsb
jmp
bound
lret
les
pop
xorl
jge
sbb
out
outsb
cmp
fistpll
leave
sub
xor
mov
inc
jne
mov
subb
sbb
ja
and
push
pop
dec
xor
inc
push
jnp
adc
jp
andb
je
insb
xor
les
faddl
push
call
dec
loop
sbb
rcrb
cmp
dec
cmp
insb
scas
scas
cmpsl
sbb
and
jmp
jo
lds
dec
cmp
mov
insl
enter
xor
sbb
and
sahf
mov
inc
lods
call
andb
pop
fs
das
xchg
popf
sbb
jno
add
fbstp
sbb
cmp
shlb
pusha
gs
jno
xchg
sti
add
xorb
cltd
sub
pop
jg
inc
fisubrs
inc
or
sbb
repnz
negb
inc
sub
dec
mov
xchg
xchg
shrl
push
mov
adc
loop
push
dec
inc
out
xchg
jns
jmp
xchg
push
mov
stos
xchg
addr16
and
push
mov
in
das
ljmp
and
movl
pop
inc
in
cmp
push
add
shlb
inc
adc
push
aas
or
jecxz
js
sbb
mov
stos
xchg
and
insb
sub
mov
push
sub
inc
mov
xor
adc
fisubrs
ss
mov
jno
lea
dec
mov
or
out
or
cld
mov
cltd
xor
in
out
loope
addb
mov
scas
inc
xchg
adcl
mov
not
sbb
in
push
ret
push
mov
lcall
xor
push
or
sarb
lahf
cs
inc
mov
sbb
push
xor
add
sub
pop
mov
loop
pop
cmp
xchg
xchg
mov
sbb
divl
popf
cmp
test
fucomip
ret
sub
mov
mov
xchg
push
arpl
mov
add
lods
push
inc
jp
aam
jl
pop
mov
pop
cmp
cltd
pop
mov
lret
in
scas
les
mov
aam
fisubrs
dec
or
outsl
in
pop
hlt
stos
mov
and
out
loope
je
je
xchg
clc
in
icebp
insl
mov
hlt
test
fidivs
pushf
mov
cld
adc
cmp
std
pop
jb
jl
icebp
shll
mov
fnsave
dec
sub
mov
subl
sub
iret
push
stos
mov
add
loop
pop
in
sysenter
insl
pop
ret
and
int3
shrl
mov
sbb
loop
xor
icebp
hlt
xor
xor
xchg
cmp
std
xor
mov
movsb
mov
pusha
xchg
jo
push
fisubl
jb
xlat
scas
nop
sbb
push
mov
fucomi
push
xor
inc
mov
push
aaa
lahf
outsb
xor
and
or
iret
xor
push
pushf
shlb
scas
test
fidivs
das
negl
jnp
mov
sbb
sub
mov
movsl
outsb
popf
rcrl
repnz
or
push
js
jbe
cld
mov
icebp
push
adc
js
xchg
popf
popa
aas
je
dec
int3
and
leave
cmp
repz
fcomps
mov
fldt
loop
imul
lret
stc
pop
jnp
ja
aad
xchg
insb
adcb
and
and
or
imul
sub
mov
leave
out
mov
pop
adcb
lock
clc
sbb
pop
int3
xchg
or
and
test
xchg
jle
sti
cltd
aad
adc
push
xor
jno
pushf
aas
dec
popa
inc
mov
sub
mov
xchg
xchg
add
push
pop
pop
cmp
dec
push
and
rolb
xor
add
jnp
mov
out
mov
fneni(8087
mov
cmp
sbb
call
jb
test
and
in
addb
cmp
sbb
jg
test
or
push
pop
add
data16
dec
sahf
into
mov
jno
xorl
sub
mov
es
add
cmp
mov
mov
mov
dec
mov
xchg
fimull
cmp
add
cmpsb
xchg
lcall
pop
push
fildll
jle
aaa
daa
mov
test
xchg
mov
icebp
fiaddl
sahf
inc
loop
sarl
xor
sbb
repz
shlb
ja
movsb
cmpsl
lea
xchg
xor
pop
lods
shll
adc
js
vxorps
out
inc
and
popf
dec
cmp
pop
mov
pop
add
adcl
mov
mov
dec
jecxz
fadds
int
add
mov
mulb
in
xor
jb
clc
inc
push
sub
pushf
cmp
jecxz
in
dec
sbb
fwait
jp
cmp
xor
es
imul
inc
jle
int
sarb
repnz
stc
mov
mov
jo
mov
addr16
les
add
xor
pop
mov
nop
les
ds
or
mov
int3
mov
mov
ja
imul
and
inc
lret
loop
testb
sbb
lret
xchg
mov
xchg
add
jg
test
xchg
pushl
mov
push
fsubl
pop
lea
xlat
mov
sbb
cld
pusha
jns
sub
inc
fs
roll
arpl
in
das
pop
ret
stc
inc
xchg
push
and
mov
addl
jno
iret
into
insb
scas
xlat
push
xor
gs
hlt
test
les
stos
imul
ret
mov
and
inc
int3
pop
cmpsb
lcall
lret
push
jbe
inc
inc
lock
std
jns
jbe
aaa
stos
mov
add
push
repnz
rcll
add
js
xor
dec
movsl
dec
mov
pop
push
mov
add
xchg
mov
mov
aaa
scas
scas
sbb
sbb
lret
out
pop
imul
dec
leave
das
jl
mov
add
inc
xchg
outsb
les
adc
pop
add
sbb
sti
sub
sbb
pop
in
fistl
cmpsb
jnp
add
sbb
fimuls
int3
ds
bound
dec
inc
push
cmp
mov
xorb
mov
sti
sbb
std
jne
cmc
cld
je
sbb
andl
pop
xor
adc
movsb
cmp
out
clc
sub
iret
xchg
inc
push
jmp
arpl
mov
loope
xlat
add
popf
gs
out
or
aad
xor
std
arpl
pop
pop
push
mov
pop
les
fnstcw
out
pop
and
cmp
cs
dec
xor
pop
xchg
lock
leave
pop
lods
jnp
jne
and
daa
fsub
cmpsl
fstl
push
fcmovne
stos
and
out
adc
inc
mov
dec
repz
and
rcll
popf
sbb
sub
mov
dec
or
pushw
ds
out
dec
jbe
repz
and
stos
das
xchg
dec
addr16
les
and
jnp
mov
daa
sub
sbb
icebp
js
mov
test
loopne
cmpsl
push
sub
pop
test
and
xor
addr16
imul
jno
sbb
mov
ficoms
nop
or
jge
sub
sub
sub
outsl
pushf
xchg
cmc
mov
into
aaa
cmp
and
fisubs
mov
jmp
push
mov
inc
sbb
shlb
inc
pop
or
push
loope
mov
nop
stc
stos
jmp
pop
dec
xor
loope
shll
cmp
mul
sti
or
add
adc
xchg
adc
out
sbb
pop
lahf
sub
lahf
cmpsb
inc
add
stos
dec
jb
dec
repz
out
js
and
inc
push
repnz
xchg
mov
mov
mov
cmp
cmp
mov
ret
int3
jnp
and
mov
repnz
adc
out
cmpl
xor
or
outsl
in
movsl
lds
orb
je
inc
push
rcrl
or
jecxz
pop
or
in
xor
jnp
sbb
loopne
fadds
es
lahf
xor
inc
jnp
pop
mov
mov
cmc
lea
mov
gs
bound
cs
cmpxchg
dec
repnz
xchg
movsb
iret
lcall
jmp
jl
rorl
lods
jb
clc
dec
call
cmp
movsb
mov
mov
scas
arpl
jecxz
mov
mov
fcoms
scas
and
inc
icebp
fucomi
mov
pop
imul
enter
xchg
pop
pop
fucomp
mov
fisttps
mov
in
call
aad
sbb
lods
leave
test
or
cwtl
mov
mov
mov
inc
out
pop
mov
push
movsl
outsl
cmp
adc
push
testl
jle
ljmp
call
xor
in
mov
xchg
int
jae
and
lock
push
xchg
push
negb
ja
jo
pusha
and
and
xchg
dec
dec
sarl
rcrl
sti
cmpsb
mov
addb
add
orl
icebp
std
sub
sbb
sar
inc
cmc
bound
pop
leave
scas
ljmp
adc
mov
pop
imul
sbb
stos
inc
icebp
pop
mov
pop
xlat
dec
popf
notl
ficompl
jbe
xchg
adc
movsb
mov
ljmp
in
mov
mov
aas
jmp
xchg
iret
add
test
mov
aas
lret
shrb
lret
adc
inc
jbe
stc
sub
into
cmpsl
or
mov
iret
mov
ljmp
dec
mov
mov
push
jl
fwait
insl
sbb
int3
sti
dec
push
xor
push
sbb
add
cli
adc
pusha
cwtl
cmpb
inc
xchg
pop
gs
in
fwait
adc
adc
mov
cmp
inc
out
movl
decb
icebp
mov
test
insb
pop
gs
fimuls
jbe
pop
push
cmc
sbb
clc
scas
sbb
jge
lret
pop
stos
pop
mov
and
cld
fsubrs
pop
pop
pop
inc
adc
and
and
adc
mov
int
fnstcw
xchg
je
cmpsb
enter
jne
or
adc
imul
aad
loop
dec
movsl
mov
imul
mov
dec
push
sbb
mov
and
js
scas
sbb
jle
in
sbb
lds
daa
movsl
cld
bound
sub
jmp
sbb
mov
cld
push
and
insl
xchg
aam
mov
out
mov
loopw
fdivl
pop
outsb
shrl
sarb
mov
add
and
and
xchg
xchg
xchg
mov
mov
clc
dec
ljmp
mov
mov
js
and
xchg
jp
aad
imul
xor
sub
popf
jg
cli
dec
int
cmpsl
push
lods
xchg
xchg
jno
rcll
testl
stos
push
movb
mov
je
icebp
dec
mov
sbb
jo
xor
negb
iret
loop
xchg
cmp
dec
dec
mov
or
loopne
or
or
push
pop
mov
insl
leave
mov
sbb
ja
hlt
cmpl
pop
test
outsb
int
jne
sbb
push
cli
xchg
mov
jle
jg
sub
jmp
mov
cmpsl
pushf
into
mov
mov
lahf
cmp
and
pop
daa
scas
dec
mov
xor
movsb
xchg
pop
add
cmpsl
mov
iret
mov
fidivrs
adc
jecxz
test
das
mov
sbb
lods
pop
fisubrs
push
pusha
cmpsb
pop
push
out
xor
and
imul
or
lret
jns
xorl
push
sub
inc
in
mov
gs
xchg
sub
sub
andl
movsb
pop
ja
outsl
pop
mov
jg
add
add
pushf
jmp
in
mov
mov
adc
mov
popf
sub
jle
push
fbld
mov
push
addr16
popa
xchg
xorl
std
pop
push
xor
sbb
jmp
add
jecxz
fistl
cwtl
ja
dec
enter
mov
and
les
mov
outsb
add
mov
mov
and
sub
inc
push
dec
ja
jns
or
add
data16
jae
daa
cs
pop
xchg
cwtl
loopne
mov
mov
add
jne
jae
pop
sbbb
stos
inc
add
inc
aaa
outsl
cli
push
cmpsl
and
and
mov
mov
push
pusha
push
push
incl
mov
cmp
jns
mov
ds
xchg
shll
mov
into
add
push
out
jmp
xchg
xor
pop
clc
mov
push
xchg
sbbb
mull
inc
mov
popa
jae
sbb
mov
enter
lock
dec
push
jg
lret
mov
dec
xchg
aaa
pop
mov
sbb
pop
sbb
insb
sbb
add
test
or
jle
jno
xor
sub
mov
jbe
adc
mov
add
mov
xchg
scas
out
mov
mov
or
adc
and
mov
jge
js
xchg
mov
lcall
andb
in
inc
pushf
lock
jo
ret
cmpsb
adc
xchg
int3
lods
sahf
scas
jae
loop
sar
xchg
lods
sti
test
cs
xorb
aaa
ret
mov
mov
sbb
adc
push
hlt
scas
cmp
add
leave
addr16
mov
sbb
jbe
inc
lock
push
jge
push
mov
xchg
ds
or
arpl
push
loopne
jo
in
pop
or
shrb
or
rclb
lret
pop
popf
inc
jns
add
jne
cmp
lods
imul
inc
sbb
pop
mov
test
mov
xchg
mov
rcrl
pop
xor
clc
cwtl
movsb
in
xlat
loopne
insl
pop
stc
pop
aaa
imul
mov
loope
inc
dec
stos
rclb
push
mov
mov
sub
push
fxam
les
xchg
xchg
pop
cmc
cmp
jno
mov
push
sub
mov
mov
fcompl
jo
inc
gs
aad
leave
xchg
jmp
mov
add
ja
and
pop
ret
mov
dec
mov
inc
mov
sarl
cmp
lods
xchg
sub
and
xchg
push
stc
push
sub
test
int
test
pushf
int3
push
ljmp
jns
jae
pushf
xchg
dec
scas
jbe
mov
dec
fsub
into
xchg
cli
push
sbb
hlt
cmp
out
gs
dec
test
fwait
cmc
adc
cmc
hlt
or
frstpm(287
outsb
clc
ret
stc
repnz
cmp
in
hlt
rcrb
sbb
xor
sahf
inc
push
insb
jmp
aad
fldenv
add
cmp
sarl
jp
mov
sbb
data16
fistps
jmp
sbb
sbb
jp
mov
pop
mov
ret
xchg
fdivr
xorb
xchg
pop
sti
ljmp
and
or
iret
mov
sahf
mov
or
xlat
xchg
push
pop
or
adc
lret
sub
ret
xor
xlat
cmp
push
in
add
shlb
scas
mov
popf
mov
xchg
dec
xor
inc
rcrb
dec
jl
pushf
sahf
cmp
sub
les
repz
xchg
lahf
mov
sbb
mov
pop
mov
lea
pop
sbb
out
insl
fs
out
sub
sub
mov
fidivrl
les
iret
popl
lds
ljmp
xchg
sbb
mov
inc
stc
xchg
add
idivl
jae
dec
sub
orl
out
pop
mov
fld
aad
sti
inc
or
fsubrs
sbbl
hlt
push
lahf
mov
add
sti
enter
std
mov
inc
ret
fdivrp
jb
push
add
adc
cmc
push
xor
lea
mov
or
push
fildl
dec
mov
and
xchg
fnstsw
jge
mov
mov
fistl
push
fistl
dec
or
mov
lock
dec
jne
add
test
ret
adc
cmc
in
leave
rcll
push
dec
xor
ss
mov
outsl
fwait
jno
stos
pop
xor
in
mov
push
cmp
mov
jb
jns
sbb
outsb
lahf
out
insb
xor
push
jno
out
insl
mov
xor
xchg
sbb
cmp
fbstp
lods
xchg
in
lods
adc
jl
or
je
dec
xor
jle
xchg
lcall
lods
push
leave
clc
mov
faddp
cmp
fistpll
xchg
in
mov
mov
ljmp
pop
xchg
push
nop
test
loop
popa
jno
stos
loopne
fs
mov
rep
jl
lcall
in
loope
jnp
jmp
sbb
je
hlt
andl
bound
cli
inc
mov
dec
xchg
sub
cmp
das
cmp
xchg
xchg
shl
xchg
lds
leave
std
sbb
jp
inc
sub
in
xor
mov
shlb
mov
loopne
ds
cmp
jl
jno
repz
sbb
gs
loope
dec
mov
fwait
sti
loop
mov
imul
mulb
addl
inc
push
in
lahf
jbe
mov
test
xor
dec
mov
push
add
cmp
push
mov
add
adc
cmp
jmp
xor
mov
adc
repnz
add
jmp
jle
xchg
aad
sahf
out
jmp
adc
test
fsubrs
fprem1
lss
data16
in
mov
mov
ss
pop
roll
push
out
popa
jmp
inc
int3
dec
xchg
nop
jge
add
adc
daa
xchg
jge
cmpsb
or
xor
rcr
jno
hlt
push
jmp
mov
inc
jno
mov
lret
repnz
scas
xor
call
jb
or
mov
or
int3
daa
lods
ret
xor
mov
inc
xchg
hlt
push
adc
ja
lahf
cmp
sub
xor
inc
stc
sarb
push
outsl
cwtl
out
mov
enter
xchg
bnd
mov
mov
pop
jge
and
adc
std
test
xor
stos
jl
add
pop
clc
jno
in
rorb
andl
daa
xlat
lret
mov
in
movsb
inc
push
bswap
add
pop
imul
mov
imul
jne
arpl
popf
test
into
jae
popf
movsl
and
sbb
xchg
xchg
repnz
or
loop
adc
and
jmp
lods
not
jne
incl
or
jno
nop
mov
add
add
repz
dec
loopne
push
mov
cli
ja
call
and
sbb
sub
lds
push
or
fsubrs
push
test
stc
jnp
pusha
push
shll
or
je
mov
inc
adc
mov
pop
push
sahf
inc
dec
and
xchg
cld
shlb
sub
inc
rol
dec
mov
outsb
xlat
sub
mov
sub
sbb
and
fstl
sbb
xrelease
jmp
dec
loope
xchg
mov
lret
pop
sbb
cs
xchg
xchg
sub
pop
movsb
inc
xor
test
pop
hlt
jne
lods
push
dec
sub
fimuls
in
pop
aad
test
test
and
cwtl
addl
and
inc
xor
jb
aas
cli
je
adc
cmp
dec
mov
push
scas
xor
sub
pop
jne
pop
adc
push
jnp
fidivrs
dec
dec
hlt
xor
mov
mov
in
repz
or
sub
popa
rcrb
cmp
das
dec
jp
adc
sub
cwtl
fstl
lods
push
dec
cli
or
ljmp
inc
fwait
xchg
and
lahf
push
punpcklbw
test
mov
hlt
add
mov
or
pop
xor
or
nop
inc
sbb
call
add
xchg
dec
mov
mov
mov
in
inc
mov
push
dec
shll
gs
aam
icebp
jp
or
jnp
fmulp
lds
repz
call
cld
push
stos
jae
sbb
and
and
cld
outsl
fimuls
xchg
or
xor
insb
subl
pop
mov
rcl
dec
dec
cwtl
add
mov
and
push
jb
das
rol
cmpsb
xchg
xor
add
es
xchg
mov
dec
mov
cmp
adc
cmp
mov
cs
int3
jmp
xor
jbe
add
ret
jecxz
in
add
mov
xchg
push
push
nop
mov
cmp
es
pop
ljmp
add
rclb
pop
idivb
in
popf
cmp
fildl
adc
fwait
les
repnz
xor
mov
rolb
jp
add
pop
scas
jmp
test
je
xor
idiv
mov
inc
ja
dec
in
push
ds
xor
cmp
jnp
dec
mov
sub
cltd
jae
fidivrs
stos
xor
sbb
inc
push
or
push
xchg
popa
xchg
pop
lret
sbbl
frstor
imull
or
insl
arpl
outsl
sbb
mov
in
xchg
xor
loop
or
scas
inc
in
adc
push
inc
mov
out
and
xchg
ret
scas
cmp
fadds
jle
inc
ss
add
cmp
test
mov
aaa
fcoms
xlat
rol
mov
iret
xor
faddl
sub
fwait
stc
and
arpl
pop
es
out
cwtl
jmp
xchg
int
sbb
xor
fwait
or
jbe
sub
add
inc
jne
js
jle
sub
shl
push
add
dec
xor
scas
imul
int
ficomps
imull
jp
in
mov
and
enter
pop
push
data16
dec
or
jns
jp
jmp
or
test
cltd
hlt
js
mov
sub
push
and
sbb
jnp
jl
in
movsl
sub
loop
pusha
xorb
nop
and
cmp
cs
ljmp
pop
pop
or
leave
shrb
cltd
mov
movsl
pop
shlb
das
lcall
fwait
sti
push
call
mov
adc
in
or
mov
out
pop
inc
inc
push
jmp
or
xchg
cmp
adc
cltd
in
sub
dec
inc
push
test
jecxz
mov
push
or
sub
enter
sub
jge
xchg
mov
rcl
orb
xor
call
scas
sti
ret
ljmp
pop
adc
rcpps
mov
xlat
sbb
out
jl
push
sbb
jnp
dec
scas
cmp
call
jmp
mov
sbb
xchg
hlt
gs
stos
and
scas
addr16
pop
push
movsb
outsl
stos
icebp
insb
mov
inc
xchg
lcall
add
pop
mov
test
into
pop
icebp
stos
fisubrl
sub
cmp
ret
xchg
ds
add
jg
out
adc
idivl
adc
pop
xchg
and
les
mov
and
cli
and
jo
aam
dec
xchg
xor
out
loopne
pop
sbb
test
aaa
adc
test
dec
out
negb
pop
xchg
xor
dec
fwait
dec
cmpsl
inc
xchg
fimull
loop
leave
inc
in
cmp
nop
popf
jnp
mov
mov
add
inc
push
imul
je
mov
fildl
xlat
pop
fs
sbb
loop
shlb
ja
and
mov
xor
inc
add
mov
scas
jbe
cld
rcl
mov
test
je
add
and
cmp
mov
and
adc
push
out
idivb
lea
jbe
bound
fwait
incb
test
sbb
xor
inc
test
push
mov
lock
mov
mov
rcr
sbb
je
pop
out
jge
lcall
sbb
pop
in
out
mov
mov
movsl
loope
lea
xor
mov
lret
sub
pop
add
xor
in
push
orb
cmp
imul
push
cld
rcrb
insl
dec
cmp
cld
orb
sub
sub
inc
sbb
push
push
sar
sub
out
les
sbb
gs
jns
scas
dec
stc
xor
fcoms
or
adc
mull
ja
std
inc
loope
addr16
insb
sub
mov
lret
mov
out
bnd
aad
mov
mov
stos
xor
jl
inc
dec
sbb
push
fcmovne
push
dec
jo
add
mov
mov
xorl
xchg
dec
jnp
and
push
dec
pushf
stos
inc
mov
and
cmp
mov
push
pop
mov
jle
adc
cmp
pop
hlt
dec
mov
jnp
and
xor
shll
decl
jmp
pusha
jmp
jbe
test
lret
mov
xor
xor
roll
lret
fs
mov
sti
call
lcall
cmp
sub
enter
push
lahf
inc
popa
mov
out
pop
mov
xrelease
shrl
push
icebp
adc
fwait
fwait
pop
push
adc
inc
outsl
xor
mov
cli
jle
loope
mov
push
xlat
dec
or
ret
dec
scas
rorl
stc
xchg
cmc
sub
imul
loope
daa
iret
add
sbb
mov
dec
in
mov
into
mov
push
dec
jge
or
loopne
fnstenv
sub
and
jne
sbb
imul
mov
add
and
xlat
enter
pop
mov
out
test
stos
and
pop
loopne
in
push
jg
xorl
lods
dec
mov
adc
ja
loopne
pop
jecxz
cmp
sbb
les
pop
push
leave
inc
addr16
pop
mov
fbld
jecxz
imul
xor
mov
fisubrl
inc
sbb
bound
mov
push
aas
clc
xchg
push
push
sub
lds
xor
inc
mov
push
test
push
mov
insb
rolb
sbb
mov
pop
add
push
push
rclb
and
outsb
lods
ss
popa
scas
insb
movsl
loop
add
nop
mov
frstor
push
arpl
add
adc
fisubrs
pop
push
lods
push
pop
cmp
sub
jno
pop
popf
push
js
adc
and
sbb
imul
mov
fwait
xor
fcompl
movsb
outsl
pop
imul
push
out
lods
jmp
lods
andb
sub
pop
push
std
mov
ja
inc
sbb
sub
push
add
scas
stos
cmp
aas
movsb
movq
xchg
fnstcw
repz
outsl
call
sub
xlat
je
cmc
pop
jmp
into
or
in
rolb
push
mov
out
inc
daa
clc
adc
pop
add
mov
or
xorl
push
ret
loopne
jns
push
into
pop
bound
sub
mov
sbb
adc
or
xor
and
jg
cmc
mov
data16
mov
pop
jp
cltd
xor
xchg
and
mov
jnp
test
push
fs
adc
aam
or
cmpsb
dec
insb
mov
push
cmp
ficoml
sbb
add
mov
loopne
sub
ss
and
fdivl
inc
lds
or
in
pusha
aam
push
fs
lea
fdivl
mov
out
dec
ss
mov
xor
mov
hlt
in
cmc
xor
jnp
gs
and
stos
push
pop
sbb
add
or
ds
lock
jne
sub
jo
xchg
rcll
lds
out
mov
in
mov
mov
leave
daa
adc
adc
add
out
push
and
dec
push
popa
sub
push
add
lret
sbb
arpl
fwait
cmpsb
xchg
aas
test
es
mov
cmpsb
mov
mov
xor
sub
dec
pop
aaa
cltd
mov
mov
jne
rcrb
mov
lods
cmp
out
mov
mov
fidivs
xor
repz
scas
jno
imul
aas
mov
xor
xor
dec
mov
mov
and
out
jl
or
xor
out
inc
lcall
inc
sbb
shll
pop
mov
xchg
or
cmpb
stos
lret
xlat
das
push
jl
fld
add
xchg
add
pop
pop
mov
sub
or
mov
into
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
jmp
insb
jns
sbb
mov
push
outsl
out
jp
nop
jl
pop
pop
jl
pop
out
repnz
aad
xchg
mov
cltd
push
push
mov
loope
cli
mov
loope
and
ret
je
popf
xchg
lock
sub
stos
into
xor
movsb
inc
ljmp
imul
mov
xor
jge
or
mov
cli
or
enter
dec
mov
and
cs
mov
mov
mov
daa
or
cmp
pop
xchg
push
lret
dec
inc
xchg
jg
iret
daa
mov
cmp
ret
inc
es
xlat
arpl
and
push
jg
test
xor
jl
cmp
cwtl
push
sbb
mov
dec
scas
adc
sbb
xchg
cltd
mov
or
jno
cmp
dec
pop
out
and
ja
jae
cwtl
stos
cmp
mov
sarb
sub
and
adc
je
xchg
push
sub
mov
xchg
pop
test
mov
inc
push
fistpll
jle
jle
pop
adc
mov
pop
mov
jmp
in
adc
jns
xor
outsl
mov
jp
icebp
jo
push
aad
mov
mov
sbb
cmc
jle
loop
jns
jbe
mov
xchg
leave
cmpsl
xlat
pop
cmpl
cmovp
pop
pusha
pop
aam
aaa
and
lret
bound
fisttpll
push
cs
mov
inc
jl
das
jl
aad
push
mov
add
or
pop
and
adc
out
into
mov
roll
push
sti
xlat
inc
ja
sbb
mov
add
orl
adc
movsb
mov
pushf
push
jnp
sub
pop
mov
addl
inc
adcl
in
cs
pop
and
sbb
ss
mov
and
xor
repnz
mov
push
leave
stos
push
test
push
es
adc
or
in
push
scas
inc
ss
push
imul
and
lret
sbb
and
xor
xchg
inc
das
test
mov
jno
xchg
int
and
xlat
shrd
fdivl
std
clc
mov
ljmp
loope
push
fcomps
jnp
fcmovb
add
jge
loope
lods
jae
pop
sub
mov
xor
ds
or
mov
ljmp
mov
pop
or
inc
mov
data16
mov
outsb
rclb
inc
rcll
adcb
push
fisubl
lcall
sbbb
mov
inc
cmc
jo
popf
cli
adc
dec
jmp
jnp
adc
push
addr16
popa
pop
xchg
push
pop
enter
imul
mov
cld
mov
inc
ficoml
cmp
mov
rorb
clc
inc
dec
or
mov
xchg
xchg
push
xor
test
test
push
mov
cmpsb
data16
xchg
testb
lods
xor
popa
xchg
add
add
mov
cmpsl
push
sub
xchg
cmpsl
mov
loopne,pn
pop
sbb
in
pop
clc
addr16
fldcw
push
mov
popf
pop
imul
xlat
and
mulb
les
add
mov
imul
and
xor
inc
mov
repnz
adc
cmpsb
fucomip
add
xchg
lods
movsb
cmp
xor
inc
jle
ja
scas
xchg
insb
outsb
push
loopne
inc
dec
loopne
sbb
out
jo
sub
rolb
sahf
outsb
imul
adc
or
jg
jne
popa
fcoms
mov
cmp
xchg
dec
ret
shrb
add
sbb
pop
mov
xor
imul
pop
test
cli
pop
push
sti
cli
aam
iret
or
outsb
dec
push
ret
jg
pop
notb
xchg
aam
aaa
aam
loop
fadds
cmp
jo
dec
jle
test
xlat
loopne
mov
loopne
fstl
ss
mov
add
test
test
add
sbb
sub
in
ljmp
orb
pmaxub
inc
cmp
stos
stos
ret
cmpsb
loop
fidivl
shrl
pop
lret
mov
test
adc
dec
push
aam
call
std
ljmp
repnz
mov
add
or
cmpsb
inc
jg
int
mov
or
sahf
inc
lods
xor
fimuls
jns
outsl
jecxz
addb
sbb
or
cltd
pushf
std
push
test
lcall
push
ljmp
push
inc
and
mov
and
fwait
and
inc
popa
imul
dec
mov
sbb
loopne
stos
adcl
adc
or
mov
stos
and
leave
loopne
inc
inc
and
xor
dec
xchg
and
stc
adcb
sbb
inc
and
enter
out
mov
outsl
xor
fstp
ljmp
cmp
rep
movsb
cld
rcrl
lods
add
loop
jno,pn
adc
popa
push
xchg
mov
and
btc
mov
or
xchg
or
sbb
scas
scas
jno
sub
lret
fisubrs
adc
sub
sbb
cmp
jmp
test
addr16
daa
and
loope
add
sub
imul
push
xor
test
or
rcrb
adc
popf
jae
movsl
pop
pop
dec
xchg
sarb
outsb
xchg
xlat
mov
das
xchg
outsb
xor
stos
or
test
jno
stos
inc
aaa
adc
mov
adc
adc
mov
cmp
xchg
stos
push
mov
scas
aad
mov
scas
sub
or
in
loopne
int3
in
iret
jnp
sub
fdivrs
pop
cmp
add
adc
adc
push
das
fisubs
xor
mov
adc
lahf
push
mov
inc
imul
stos
mov
xchg
add
xchg
mov
sub
into
mov
adc
test
jns
cld
inc
js
es
xchg
sbb
mov
dec
jle
jg
cmc
cmp
out
xor
insl
xchg
out
in
pop
cmp
sbb
xchg
dec
mov
movsl
adcb
jmp
mov
addr16
test
ljmp
push
mov
enter
push
dec
ljmp
jbe
insl
mov
fldl
inc
in
les
push
call
cmpsl
pop
xor
out
sbb
mov
fbstp
hlt
xchg
lahf
leave
dec
stos
faddl
leave
jns
or
pushf
and
cli
movsb
in
iret
jns
mov
lcall
fs
in
mov
mov
int
cmpsb
lock
imul
faddp
adc
jecxz
xchg
xor
in
xchg
lcall
fisubrs
mov
popf
repnz
mov
and
xchg
adc
or
out
add
and
and
jmp
jle
mov
lds
mov
sbb
or
enter
mov
adc
sbb
pop
adc
xor
jg
sahf
scas
xor
or
int3
cmpsb
stc
adc
fnstenv
push
lea
in
mov
aaa
mov
test
aaa
mov
inc
push
andl
push
sbb
sbb
dec
mov
ficompl
fwait
xorl
mov
aam
xor
cmpsb
in
xchg
gs
out
add
and
mov
inc
mov
outsb
inc
into
push
mov
push
xor
mov
mov
adc
lock
sbb
adc
lds
jno
push
mov
stos
jns
pop
rcrl
inc
daa
sbb
mov
pop
xor
xchg
mov
enter
or
js
jl
inc
mov
mov
movsb
push
je
pushf
fsubl
adc
jns
and
insl
shrb
pop
hlt
gs
dec
incl
xorb
aad
imul
mov
rcr
add
jecxz
inc
jae
inc
daa
lds
add
mov
out
loopne
cwtl
out
pushf
and
les
or
jecxz
inc
sbb
mov
mov
pop
outsb
clc
cmp
adc
lods
pop
inc
popa
lock
mov
cli
inc
sub
push
rclb
out
sbb
inc
pushl
fistpl
fsubrs
fsts
iret
movsb
sub
xor
ja
int3
xchg
rcll
add
xor
cltd
and
inc
out
adc
or
mov
adc
call
cmp
cmp
jl
adc
popa
or
ret
in
pop
test
enter
adc
xchg
jb
jecxz
mov
andl
dec
aam
test
ds
xor
faddl
fcomps
cmp
inc
fdivl
xchg
addl
out
pop
mov
jns
cli
push
std
lods
sub
push
dec
sarb
sti
shlb
pop
xor
test
inc
cmp
bound
xlat
xor
fwait
rcrl
mov
inc
xor
inc
mov
jno
loope
xchg
jecxz
jns
movsl
cvtps2pi
inc
sub
inc
sbb
mov
cwtl
or
jnp
dec
jmp
mov
inc
fldcw
arpl
pop
std
in
mov
and
sub
lcall
scas
mov
pop
lods
pop
inc
mov
xchg
xor
jecxz
sub
mov
add
aad
ja
and
xchg
or
cmp
insl
and
jno
fwait
test
iret
or
push
es
pushf
addr16
mov
lods
sbb
pop
in
daa
add
loope
clc
imul
lock
in
fstpt
out
gs
adc
leave
cmp
scas
mov
cmp
imul
dec
filds
mov
xor
xchg
jle
push
pop
iret
xchg
push
dec
or
push
and
sub
addb
int
xchg
out
jae
stos
inc
mov
mov
sti
clc
mov
arpl
adc
adc
movsl
in
mov
ja
mov
push
sub
adc
xchg
stos
js
test
pop
rorl
and
jecxz
ss
xchg
mov
es
in
std
or
mov
xorl
dec
pop
orb
shll
jmp
fimull
or
rolb
fnstcw
and
push
jno
pop
scas
dec
cmpsb
sahf
lea
lret
fwait
jns
les
add
xchg
push
imul
cmpsb
nop
subb
sub
mov
ss
test
xor
jge
cltd
inc
pop
in
sbb
or
and
add
icebp
inc
and
and
xchg
movsb
jmp
dec
lret
mov
subl
lock
imul
lret
adc
ja
pop
daa
stc
dec
rorb
push
cs
aaa
mov
xchg
out
push
shlb
pop
jmp
mov
cmp
cmp
xchg
mov
xorl
sbb
pusha
push
scas
xchg
outsb
repz
push
mov
mov
dec
cmp
call
rorl
repz
mov
addr16
bnd
xlat
mov
jns
cltd
push
or
jno
movsb
jge
scas
outsb
inc
cmpsb
push
adc
fdivl
mov
stc
mov
in
xchg
gs
out
into
cmpsb
xchg
outsl
call
cmp
jmp
jns
js
push
jmp
sbb
cmp
inc
movb
adc
gs
movsb
mov
cmp
add
xlat
and
cmp
pop
mov
leave
add
sti
mov
into
cltd
mov
loopne
sub
pop
pop
xor
or
pop
xchg
std
repnz
jl
and
imul
mov
lret
jae
xor
push
and
mov
imul
call
divb
dec
ret
jb
mov
jns
xchg
mov
xchg
mov
mov
leave
imul
cmp
xor
xchg
rcr
std
xchg
xlat
inc
imul
out
lock
outsl
cmp
and
sub
je
mov
jmp
pop
mov
mov
or
das
sbb
fildl
or
dec
sbb
jecxz
inc
pop
adc
rolb
or
sbb
pop
cltd
or
addb
cmc
addr16
fidivrl
cli
aad
dec
pushf
dec
ret
cmp
mov
in
mov
sarb
cli
cmp
stc
adc
mov
loop
or
cltd
cltd
mov
mov
inc
fmull
xor
test
cmp
push
dec
xchg
jge
test
iret
lret
cltd
jl
xchg
xchg
test
imull
mov
or
shr
das
ss
es
jb
sub
xchg
inc
int
in
pop
mov
addr16
lods
pop
adc
inc
scas
daa
icebp
mov
xlat
xor
push
ds
jae
rolb
mov
test
or
pop
mov
adcl
pop
fiadds
loopne
adc
test
inc
xchg
mov
mov
or
imull
xchg
mov
ds
decb
mov
mov
sbb
sub
call
or
fstps
fdivrl
dec
roll
cmc
inc
mov
jmp
or
push
adc
sub
out
ss
and
test
mov
jae
cltd
daa
xchg
xor
sbb
sub
sbb
ss
push
fstps
mov
push
je
cs
ljmp
repnz
icebp
sbb
jnp
shlb
shlb
stc
mov
ret
mov
inc
aas
dec
je
outsl
in
fisubrs
push
clc
adc
sub
fdivs
mov
mov
mov
sti
jmp
xchg
xchg
lods
fcompl
outsb
cmpb
ss
adc
es
sub
mov
inc
pop
dec
imul
sar
mov
test
lea
mov
sahf
lahf
into
xchg
and
or
mov
inc
rcl
push
or
shll
dec
cmc
adc
in
mov
cmp
sub
cmp
ret
mov
lcall
dec
pop
fmull
stc
dec
xlat
loop
ret
popa
insb
xchg
and
fdiv
xchg
loop
inc
ret
sti
into
js
subb
in
mov
push
les
imul
ja
sbb
pop
mov
pop
mov
ficoml
cli
sti
add
leave
repz
push
inc
mov
sbb
movsl
loopne
or
sahf
mov
add
jns
jle
mov
mov
xchg
xor
data16
inc
jns
xchg
jle
mov
adc
jmp
or
cmp
xchg
adc
out
cmp
cmpsl
lods
mov
aaa
rcrb
lret
popf
or
scas
jae
or
sbb
lea
jmp
or
pushf
cmp
js
adc
fs
adc
test
in
adc
lret
faddl
mov
aad
scas
xchg
mov
lret
sti
push
xchg
inc
mov
fsubp
mov
sti
dec
sbb
std
mov
es
jge
and
pusha
push
cmp
data16
mov
insb
rcl
lcall
roll
pop
pop
xor
sbb
xor
adc
xor
cmpsb
mov
sti
fwait
in
and
pop
push
test
dec
push
sub
xor
mov
pop
push
dec
cmp
in
sbb
int3
inc
ret
js
mov
das
dec
push
cmp
lret
popa
mov
leave
sahf
mov
repz
push
sbb
cmc
push
mov
sub
loopne
sbb
or
hlt
outsb
mov
es
rorl
pushf
out
fucomip
fstpl
ja
les
shll
mov
orb
mov
pop
popf
push
dec
mov
xchg
into
mov
rorb
repnz
hlt
std
xchg
fisubs
cmp
inc
std
notl
jo
ffreep
sub
pop
inc
iret
mov
xchg
push
push
pushf
imul
jae
imul
cmp
mov
sbb
bound
aam
lods
sub
pop
notb
cmp
in
aad
mov
ja
and
xor
into
mov
aas
mov
mov
pusha
cltd
dec
adc
push
fistps
mov
dec
mov
dec
sbb
add
mov
stc
or
cmc
cmp
lret
dec
cmc
sar
lods
cmpsb
or
or
out
push
addr16
lcall
push
je
add
xchg
or
gs
lcall
sub
cmp
stos
push
mov
stos
movsb
lret
xlat
xor
cltd
imul
adc
adc
loop
xor
sbb
popf
push
andl
stos
mov
je
shl
mov
out
xchg
jle
fiadds
sub
cwtl
imul
cmp
loopne
shll
insb
adc
dec
mov
cmp
jmp
cli
mov
popa
js
add
out
or
roll
sbb
cmpsb
cmpsl
mov
xor
push
mov
out
stc
movsb
mov
jp
sub
adc
xchg
insl
and
aam
jl
or
ret
into
mov
adc
sbb
ficoms
inc
je
cmp
xor
or
sbb
pop
aam
push
int
int
fmull
jl
sbb
push
cmp
je
cmpsb
in
fnsave
or
mov
shll
out
xchg
jo
rorl
lahf
mov
stos
or
movsb
cmp
fwait
in
scas
mov
int3
fisttps
mov
jb
jp
dec
into
or
daa
xchg
and
xchg
mov
or
fildll
mov
jb
mov
jl
stos
cld
leave
enter
enter
xor
sbb
jl
scas
xlat
or
mov
cmp
dec
std
jl
adc
ss
jno
xchg
loope
test
call
cmpl
cmp
xchg
xor
lcall
pop
mov
pop
js
mov
xchg
xchg
call
add
mov
xor
ss
sub
dec
inc
lret
mov
xlat
sub
mov
test
ds
loopne
lahf
mov
xor
xchg
hlt
icebp
mov
jae
jns
in
repnz
ja
sub
inc
xchg
push
loopne
int3
popf
push
jns
push
xlat
data16
jne
push
les
xchg
cmc
sub
xchg
xchg
pop
jnp
ret
mov
scas
sbb
ja
xchg
cmp
in
jg
cwtl
xlat
loopne
mov
rorb
repnz
ljmp
rcrb
pop
sbb
aaa
xchg
loop
pop
pop
pop
sub
repnz
popl
sahf
lods
loopne
adc
adcl
cmp
xor
or
push
mov
xor
pop
stos
lret
in
and
icebp
inc
xor
adc
sub
push
dec
xor
roll
cmp
ret
ss
mov
insb
imul
jmp
push
lds
cmp
test
mul
cli
pop
xor
in
add
mov
shll
lods
test
shlw
and
ss
push
adc
or
lret
jge
pop
push
push
lcall
jnp
clc
test
pop
lock
std
xchg
ja
cmp
gs
fistpll
repnz
int
mov
cmc
loopne
mov
cmp
cmc
test
pop
xchg
mov
subb
or
iret
adc
repz
imul
mov
jns
hlt
lds
or
cmp
and
in
rclb
pusha
shrl
stos
lret
cli
and
push
pop
inc
aaa
sbb
fidivl
popa
repnz
popf
and
insb
cmpsl
jmp
int3
test
cld
xor
popa
dec
roll
jbe
rcll
insl
dec
fstpt
jno
jno
or
pop
xor
data16
and
mov
ljmp
mov
cld
jbe
jle
jae
repnz
push
ja
adc
xor
decb
popf
dec
ds
fwait
outsb
aad
add
call
in
les
das
inc
int3
lea
daa
mov
fisubs
lret
leave
pop
push
int3
iret
test
inc
sarb
mov
jno
mov
adc
lcall
or
sbb
mov
push
inc
sub
and
or
inc
and
cmpsb
jge
cmp
je
or
lock
add
pop
push
arpl
inc
dec
mov
xor
lcall
repnz
addr16
clc
loop
rolb
iret
adc
inc
or
stc
loopne
inc
mov
lcall
adc
clc
xchg
popf
les
pushf
mov
iret
mov
or
pusha
and
jmp
or
sbb
psubusb
test
in
int
enter
sub
in
xchg
scas
jb
into
inc
fxch
repnz
pop
ss
push
push
sub
xchg
aas
arpl
jecxz
mov
jne
pop
add
and
aas
inc
dec
popa
push
lret
xlat
and
cmpsl
jbe
push
cwtl
hlt
mov
out
mov
xchg
xlat
xor
stc
shl
addr16
popa
gs
test
fsubs
dec
add
icebp
loope
sub
sti
sahf
cmpl
or
xchg
xchg
push
leave
adc
and
fwait
mov
push
xor
xor
push
je
ljmp
mov
inc
aad
lcall
push
je
mov
mov
lret
cwtl
daa
mov
test
inc
pop
and
and
sbb
cmp
call
xor
or
pop
hlt
or
stos
fcos
inc
lds
cmpl
mov
xchg
sbb
das
add
test
stos
jb
loop
mov
rorb
lds
std
jg
iret
mov
and
or
lods
subb
lcall
insl
sbb
sbb
int3
xchg
imul
xor
fs
pop
das
shlb
ja
into
mov
hlt
popf
cwtl
fs
or
jmp
scas
mov
sub
andb
or
pop
nop
inc
orb
or
xchg
inc
test
xchg
push
sbb
jae
cmpb
enter
jns
inc
idivb
out
out
mov
fsts
and
or
cs
data16
int
mov
clc
sub
cmp
add
movsb
das
push
in
push
out
push
or
xchg
xor
cmpsb
mov
and
pop
pop
push
imulb
mov
sbbl
fisubl
arpl
call
addb
out
rorl
sub
stos
mov
xchg
into
jle
loope
jle
nop
sbb
pop
out
adc
in
xor
lcall
push
push
addb
push
xlat
in
dec
hlt
sbb
aaa
cmp
or
out
sbb
leave
jge
dec
imull
xchg
jae
xchg
clc
add
lret
and
enter
xor
aas
out
ret
adc
lcall
test
stos
ljmp
scas
or
ja
je
jb
push
mov
movsl
add
lods
dec
int3
pop
outsl
xchg
mov
mov
jns
xchg
bound
les
insb
shrb
or
in
mov
movsl
dec
mov
or
sub
ds
sub
lds
dec
mov
or
in
sbbb
or
filds
push
inc
lock
fidivs
dec
enter
jb
pop
mov
jecxz
data16
xchg
ja
dec
inc
enter
repz
mov
push
xchg
inc
dec
addr16
mov
pop
mov
scas
add
inc
sub
mov
xchg
and
fbld
int
lock
loope
in
cmp
js
or
mov
cmpsb
pushl
mov
shlb
sub
inc
popa
ljmp
aad
jecxz
mov
jmp
clc
cmpsl
mov
add
dec
rclb
sub
iret
and
fs
mov
jmp
ds
cmp
and
xchg
dec
in
push
xor
inc
cmp
dec
and
imul
xor
shl
lret
dec
mov
es
push
pop
movb
inc
fwait
fs
cmpsl
mov
jle
shll
nopl
mov
das
mov
fsts
fisttps
mov
int
stc
ss
jecxz
aaa
movl
sbb
push
sti
fstpl
push
aas
jp
jnp
sbb
dec
dec
inc
arpl
jg
ds
ret
inc
add
jl
xchg
movsl
or
adc
cmc
push
ud2
daa
mov
xchg
ss
stc
sub
cmp
add
repnz
inc
adc
pop
inc
mov
aaa
jb
iret
int
cmp
mov
mov
push
cmp
mov
int
mov
adc
repnz
test
cmc
jnp
mov
mov
cld
loope
or
loope
movsl
fadds
jle
in
mov
push
mov
sub
mov
movsl
in
and
pop
push
mov
mov
dec
add
jno
push
xor
jecxz
mov
mov
mov
sbb
filds
test
push
cwtl
cmp
insb
mov
xchg
rol
in
pop
push
imul
adcb
and
popf
mov
or
sti
std
xchg
mov
pop
js
pop
push
pop
sub
sahf
xchg
aam
pushf
xchg
or
jns
xor
inc
arpl
and
sbb
iret
mov
aam
and
mov
adc
jle,pt
adc
ret
xchg
adc
sub
jo
outsb
scas
out
insl
loop
jne
fdivrl
xchg
push
nop
add
jo
dec
mov
xor
inc
inc
push
test
mov
mov
or
insb
adc
inc
dec
cmp
mov
sub
mov
repz
sbb
mov
in
dec
and
in
outsb
mov
sub
pop
loope
cwtl
dec
js
gs
mov
pop
ret
sahf
popa
pusha
jns
jp
fdivrs
faddp
cmp
xor
adc
lea
add
sub
sbb
mov
enter
mov
icebp
cltd
in
mov
dec
jecxz
inc
cmp
dec
enter
iret
sub
adc
sub
inc
xlat
push
aam
push
lods
aam
mov
jle
lret
mov
iret
daa
out
je
je
mov
xchg
or
xchg
mov
mov
mov
mov
das
nop
and
add
pop
popa
pop
lahf
inc
fisubl
mov
rclb
mov
stc
mov
add
popf
stos
mov
in
outsb
cld
testb
xchg
mov
or
push
fwait
inc
adc
dec
int
pop
jb
mov
or
pop
sarl
sub
daa
outsb
pop
sub
push
cmp
addr16
mov
xor
pop
int3
jp
rorb
mov
mov
mov
scas
fnsave
out
imulb
jae
xor
push
push
ds
and
js
popf
xor
flds
cmpsl
rorb
or
into
jmp
jnp
stos
xor
aas
mov
cmc
jg
mov
jae
pop
ret
add
arpl
mov
add
std
mov
fwait
cli
push
adc
mov
xchg
shrb
ffreep
mov
and
in
mov
ss
iret
je
jnp
cmp
pop
pop
mov
imul
enter
aaa
xchg
fdivrp
sub
push
idiv
icebp
lahf
int3
repz
out
sti
dec
stos
jno
gs
dec
adc
cmp
sbb
lret
into
pop
xchg
scas
add
jbe
and
adc
rclb
fucomp
imul
insb
cltd
fcoml
adc
mov
jae
add
daa
popa
out
nop
push
push
test
add
imul
jle
jp
popa
jge
cmpsl
movsb
gs
inc
adc
ja
aas
mov
sarl
push
sahf
lods
jl
arpl
mov
jge
clc
call
test
mov
jno
lock
add
loope
mov
ror
or
cmp
xchg
mov
xor
movsl
lret
outsb
filds
add
pusha
mov
push
les
xor
ss
sahf
xchg
fiadds
adc
cs
aas
sbb
inc
fbld
mov
push
cmp
das
jmp
ret
jb
xchg
repnz
scas
jae
mov
push
pop
lds
xorb
out
insb
bound
fsts
pop
pop
ds
int3
sub
xor
and
xor
mov
mov
push
aas
or
fisttpl
mov
jno
sub
pop
ret
adc
movsl
or
ret
xor
cmp
out
fs
or
jnp
or
cli
mov
test
xor
add
mov
clc
fdivl
push
ljmp
add
shlb
and
cli
jmp
mov
jb
adc
scas
enter
mov
das
pop
and
iret
fcompl
clc
add
inc
imul
xchg
insb
clc
adc
aas
mov
aas
repz
inc
cmp
jo
mov
mov
cmp
push
rorb
lahf
sub
incb
add
jb
xchg
cwtl
cltd
in
daa
aad
lods
fadds
mov
mov
stc
add
cli
xor
stos
pop
out
dec
cld
call
lret
fisubl
fsubs
stos
xchg
sub
and
popa
loopne
push
xchg
jmp
imul
movsl
jp
pusha
enter
outsl
lcall
filds
push
popf
dec
ret
xchg
fstpt
mov
addl
xchg
inc
outsl
cwtl
ljmp
mulb
dec
cmp
in
lods
adc
push
out
mov
out
sbb
add
mov
mov
push
testb
popa
inc
adc
jecxz
jne
hlt
adc
fistps
mov
dec
and
popf
andl
sbb
sub
mov
pop
cmpl
cmp
and
add
adc
pop
loope
mov
das
add
jg
sub
orl
dec
pop
cmovae
stos
inc
dec
and
jecxz
fldt
pop
cs
loop
in
sub
push
cmpsb
ret
faddl
imul
adc
sbb
xchg
push
movsl
cmpsl
dec
or
push
ds
pop
jnp
ficoml
nop
pop
syscall
imul
scas
xor
cmp
sub
js
sbb
out
sbbl
cmp
aaa
push
mov
shrl
dec
fstps
xchg
pop
out
into
mov
cmp
push
in
popf
enter
aad
int
lret
push
insl
pop
jl
in
in
fildl
mov
mov
add
jnp
adc
jg
sbb
in
les
pop
sub
mov
sbb
mov
sbb
call
mov
repz
and
jl
jp
ljmp
push
cmp
pop
pop
and
insl
fs
xchg
popa
out
lret
popa
push
dec
incl
gs
lcall
and
scas
or
leave
push
lock
dec
fdivrl
movl
ret
xchg
add
xor
stos
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
jne
adc
std
push
adc
aas
adc
sbb
adc
sbb
add
push
adc
out
jg
add
dec
adc
mov
jns
add
inc
adc
sbb
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
add
add
add
add
add
add
inc
cmp
add
scas
inc
adc
inc
cmp
add
adc
push
adc
cmp
add
sbb
add
adc
idivb
inc
add
cmp
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
subb
cli
adc
sbb
adc
pop
inc
adc
sbb
adc
in
pop
adc
pop
sub
add
add
inc
add
add
inc
add
add
cmp
add
aaa
adc
cmpl
adc
push
dec
adc
mov
adc
lock
add
adc
outsb
or
add
add
add
push
push
inc
push
cwtl
fcmove
enter
inc
xchg
mov
insb
sbb
in
add
add
inc
cmp
jae
popa
insb
insb
and
je
pop
push
outsb
fs
dec
push
pop
dec
popa
imul
outsl
insb
fs
dec
outsb
arpl
gs
dec
outsb
outsw
inc
jo
add
add
add
add
add
cmp
add
add
add
add
add
mov
cmp
add
mov
cmp
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
