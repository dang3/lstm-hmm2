push
mov
sub
mov
mov
sub
xor
movl
not
jmp
cltd
data16
push
push
jge
jge
ljmp
insl
jl
jl
lods
jl
jl
xor
xor
ja
or
inc
or
cmp
lret
sbb
mov
or
rol
or
sbb
out
outsl
add
mov
mov
je
fisttpl
jecxz
and
aam
dec
incl
mov
loope
pop
sub
jae
lret
cwtl
sub
mov
loopne
cmp
sub
or
sbb
outsl
insl
jb
cmp
jns
cmp
add
movsb
add
rol
add
jge
mov
daa
sbb
addr16
loop
xchg
cmp
cmp
add
in
xor
pop
xchg
add
add
jmp
leave
mov
pop
mov
les
jl
jl
jl
jl
cmpsb
lods
inc
mov
mov
nop
sub
xchg
push
fcomp
sbb
iret
pop
mov
cltd
pop
add
sub
out
add
mov
fdivrs
dec
ja
jnp
insb
push
adc
loope
dec
dec
rcrl
xor
pop
dec
jmp
pop
inc
adc
arpl
jno
sbb
add
push
jl
ljmp
aas
inc
out
sbb
pop
js
daa
out
jmp
and
cmp
mov
mov
mov
add
xor
outsb
ret
lods
out
fistpll
stos
inc
sbb
pop
subb
push
rcrl
leave
sub
mov
popa
dec
mov
mov
lea
xorl
mov
notl
mov
movzbl
adc
mov
mov
xorl
push
sub
lea
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
mov
movzwl
and
mov
movl
push
push
or
mov
add
mov
sub
mov
addl
mov
mov
sbb
xor
mov
subl
xor
xor
add
adcl
jmp
rorb
std
std
std
fsubrs
aad
push
rcr
jl
lods
jl
jl
xchg
stos
xchg
fimull
or
fnsave
mov
push
mov
adc
xor
divl
jmp
stc
adc
xor
mov
sahf
out
lret
fs
cli
add
popa
or
push
sbb
cmc
cmp
lea
lahf
mov
in
imul
roll
lar
add
or
cli
lret
iret
rcrb
sbb
cwtl
fstcw
pop
subl
mov
xchg
pop
scas
in
dec
stos
ljmp
sarl
pop
inc
fdivl
sbb
int
push
leave
dec
sub
add
div
mov
mov
movl
jmp
mov
nop
jge
jns
imul
jl
lods
jl
jl
int
cli
push
add
dec
pusha
push
rcl
mov
pop
shll
mov
in
scas
add
or
mov
rcl
cmp
mov
add
and
xchg
or
cmp
add
xchg
lcall
mov
out
pop
dec
xchg
out
dec
aas
xor
lds
cmpsb
jg
mull
fadds
icebp
movsl
cmp
pusha
and
xchg
adc
pop
out
stc
pushf
ja
push
sarb
call
add
push
mov
loope
aaa
add
jo
call
gs
pop
mov
cmp
movl
je
movl
sub
lea
mov
sub
mov
not
mov
imul
movl
mov
movl
mov
cmp
movl
je
and
jmp
cs
inc
add
sbb
sbb
mov
jl
jl
das
cli
mov
push
mov
call
xchg
jno
xor
adc
xchg
cmc
push
stc
mov
bound
mov
lahf
fwait
pop
fdivrs
xor
mov
lds
mov
pop
test
mov
mov
push
aas
dec
das
or
xor
fimuls
push
cmp
xchg
dec
insb
pop
xchg
and
scas
or
sahf
or
mov
arpl
je
jmp
aam
stos
shlb
in
push
mov
push
xor
mov
jnp
ret
cmp
incb
orb
xor
filds
or
add
adc
add
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
mov
sub
sub
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
jmp
pop
and
jge
pop
in
lcall
in
jno
jl
jl
jl
jno
call
aad
push
dec
mov
leave
pop
icebp
nop
sub
fwait
xchg
and
rcrl
pop
pop
and
xchg
cmp
pop
sub
mov
aam
insl
cli
mov
fsts
cmpsl
mov
pop
loop
push
pop
out
xchg
dec
xor
xor
push
clc
jg
xchg
inc
cld
cli
hlt
inc
cmpsb
ja
ds
inc
xchg
inc
add
jbe
inc
movsl
and
jp
xchg
cmp
adc
shll
add
xor
mov
push
testb
push
pop
push
fistpll
std
adc
std
push
jl
in
add
movzwl
mov
jmp
repz
jecxz
push
scas
rorb
imul
jl
jl
jl
xorl
cmp
mov
loop
sbb
imul
cmc
xchg
push
subl
sbb
xchg
ror
jne
daa
std
ja
out
jnp
mov
dec
mov
mov
inc
popa
pop
mov
cmp
push
add
pop
push
sarl
adc
aad
adc
pushf
mov
push
inc
xor
mov
iret
mov
cmovl
dec
jle
inc
cmpsb
imul
fimull
xor
fidivrl
cwtl
mov
mov
sti
std
jns
ss
jo
rcrl
push
jns
pushl
stc
lea
add
mov
mov
mov
xor
add
imul
sub
jmp
pop
jno
loope
jge
lods
xlat
mov
jns
arpl
aas
dec
jo
jl
jl
jl
or
xchg
insl
push
push
out
jge
sahf
scas
add
in
pushf
cld
ss
xor
and
scas
ss
sub
dec
jge
hlt
mov
in
pop
push
test
fwait
nop
lods
mov
fdivp
mov
xchg
in
inc
sbb
subb
pop
hlt
pop
addb
ss
das
xor
addr16
call
ret
outsb
sub
in
call
add
and
icebp
and
inc
xchg
xor
fcoml
rcrb
scas
cmpb
ljmp
leave
and
int3
test
popa
ficoml
orl
dec
out
call
fcmovne
push
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
jmp
sbb
fcmovu
std
sarl
fstpl
orb
cld
jae
jl
jg
jl
scas
mov
fstpl
cli
cmpsb
lret
add
cmc
fdivrl
ja
mov
or
imul
cmp
cmpsl
push
in
jmp
scas
out
das
mov
aad
push
cmp
push
jb
inc
push
pop
xorb
cmp
mov
imul
faddl
mov
cmp
jmp
loopne
repz
lret
sub
or
and
sub
xchg
movsl
into
rcr
lret
into
ret
mov
adc
sahf
xchg
jno
lahf
dec
mov
fisubrl
xchg
pusha
mov
push
jge
mov
out
idiv
setge
call
jmp
cmp
mov
in
xor
ficoms
add
pop
pop
mov
gs
cs
mov
sbb
jno
inc
or
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
mov
movl
movl
mov
xor
mov
sbbl
mov
mov
adc
jmp
adc
push
pop
aaa
movsb
popa
lods
bnd
jl
jno
jl
jg
pop
fstpt
in
out
lock
mov
or
xchg
rcrl
pop
pop
movsb
inc
jno
or
cs
xor
pop
pop
xor
adc
in
cmp
xchg
scas
ficoml
mov
pop
jg
leave
sbb
xchg
mov
jnp
jns
ja
lds
mov
sub
jmp
popl
test
shrb
daa
lea
and
icebp
adc
dec
dec
daa
mov
cmc
lret
push
xor
or
dec
cmpsl
iret
pop
pop
push
jecxz
push
aaa
out
adc
lock
cmp
in
mov
and
dec
mov
mov
mov
jo
ror
mov
loopne
mov
push
js
jg
or
int
and
icebp
sub
testl
mov
adc
mov
sub
int
scas
fs
loope
std
inc
cmp
xchg
out
sbb
pop
xchg
ret
inc
insl
test
das
xor
adcl
jmp
mov
cltd
mov
cmp
jne
jl
jg
jl
rorl
dec
sbb
cmp
cmp
mov
xor
jle
int
adc
sbb
ss
push
clc
mov
or
jns
and
movsb
sarl
jae
fisttpl
push
sbb
call
adc
mov
push
pop
lret
test
repz
out
aad
pop
cwtl
sub
pop
add
jge
in
mov
sub
dec
push
int3
pushf
add
testl
add
adc
mov
bound
mov
jmp
mov
mov
xchg
mov
inc
in
add
in
cmp
inc
pusha
xchg
or
inc
iret
shl
add
imul
scas
mov
mov
cmp
icebp
pusha
cmp
fsubs
pop
or
int
sbb
clc
pop
dec
jl
add
jge
mov
xor
xlat
sub
out
pop
popl
loope
iret
test
sahf
jb
add
or
add
and
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
xor
add
adc
movl
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
jmp
loopne
sbb
mov
xchg
inc
pop
je
jle
divl
jno
jl
pop
fbld
imul
pop
push
inc
or
addr16
sahf
jmp
jmp
mov
add
mov
dec
sti
lret
dec
imul
fcmovnbe
popa
lahf
outsl
sbb
push
mov
xchg
pop
and
cmp
mov
out
arpl
icebp
pop
sbb
shll
jecxz
xlat
push
leave
xlat
mov
pop
loop
in
sbb
or
les
mov
adc
in
outsb
lds
lods
inc
jp
arpl
ficoml
stos
mov
lahf
rclb
pop
dec
pop
ret
in
xchg
data16
xor
mov
or
popa
adc
shrl
movsb
es
jb
aam
adc
and
ret
xor
iret
sahf
scas
call
dec
test
insb
cmp
add
inc
mov
pushf
and
or
sbb
inc
stc
sti
mov
in
sub
arpl
dec
push
cmp
movl
movl
or
mov
xor
mov
negl
add
movl
cmp
je
movl
push
jmp
mov
orl
mov
movl
sub
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xorl
mov
xor
xorl
add
cmp
movl
jb
mov
jmp
fstps
xlat
jns
stc
popa
mov
sti
or
ja
jl
jg
jl
in
imul
pop
inc
mov
mov
sub
incb
mov
ret
mov
outsb
movsl
jnp
ja
scas
frndint
xchg
nop
hlt
fisttpll
loop
mov
lds
mov
lcall
xor
inc
fists
mov
xor
dec
sub
iret
xor
xchg
repz
aad
xor
adc
cmpsb
movsb
mov
cmp
cld
sahf
and
cmc
insb
out
fidivs
cmp
mov
mov
dec
adc
pop
or
mov
cmp
add
shrl
pop
add
pop
mov
andl
jbe
fidivrl
subb
scas
out
les
xchg
cmp
test
jnp
mov
mov
shl
jp
repz
add
mov
push
outsl
rcl
adc
sub
dec
shl
leave
ret
mov
jg
loop
lock
jge
xor
not
xor
mov
add
mov
add
movzwl
or
mov
add
imul
mov
sbb
mov
mov
sbbl
sub
movl
cmp
movl
ja
movzwl
xor
mov
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
ret
fwait
dec
int
fldl
out
loop
pop
push
test
lea
jl
jg
jl
cmp
or
wrmsr
dec
lock
add
add
cmp
cltd
xor
cli
cs
mov
push
jnp
inc
addb
test
sub
sti
sbb
add
ds
cmpsb
stos
xchg
paddb
dec
mov
pop
lahf
scas
add
movsl
or
inc
fcmovbe
jp
fs
push
fsubs
fistpll
jne
aas
dec
loope
adcb
cmp
push
jp
mov
push
movsl
push
inc
dec
jno
or
or
icebp
sbb
mov
subb
add
jecxz
xor
sbb
movb
mov
mov
xchg
ljmp
daa
and
mov
pop
cmp
mov
enter
xor
push
or
jbe
mov
mov
fs
jmp
xorl
aas
cmp
push
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
jmp
push
in
pop
std
stc
dec
mov
popf
fwait
mov
mov
jl
jno
jl
mov
dec
add
push
mov
imul
aaa
jae
ficompl
pop
jo
in
mov
insl
pop
mov
and
ret
mov
mov
dec
js
mov
or
jno
shll
xor
sahf
lcall
int3
lahf
add
push
scas
jae
lods
in
mov
addl
sub
icebp
rcr
inc
xor
push
mov
out
fmull
push
mov
jecxz
and
pop
test
in
jp
xor
lods
clc
lret
jne
cmp
lret
add
lret
add
and
pop
lock
gs
sub
fiaddl
stos
iret
jmp
popf
xchg
lock
faddl
xchg
in
xchg
into
pop
ljmp
push
je
sahf
es
into
movl
imul
inc
push
outsb
fbstp
stos
shlb
scas
xlat
mov
jmp
test
sti
jge
testb
adc
orl
jl
jg
jl
cld
cld
lds
fidivl
fldenv
mov
and
xchg
dec
in
xchg
ljmp
cmp
jg
mov
dec
xor
inc
and
inc
loopne
cmp
rep
or
test
call
xchg
pop
repnz
aas
cmp
cmp
mull
cmp
popa
fsubrl
in
push
sub
push
jbe
cmp
addr16
icebp
aas
mov
hlt
out
push
roll
in
push
jns
jg
dec
mov
dec
sbb
sub
add
test
sub
js
or
push
sbbl
pop
dec
bound
xchg
mov
fbld
xchg
xor
pop
jae
cmpsb
or
mov
jmp
test
xor
movl
cld
or
or
popf
call
mov
jnp
xchg
aam
mov
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
jmp
push
in
dec
dec
pop
jge
in
std
ja
add
add
jl
test
cli
sub
mov
mov
mov
ljmp
pop
or
cmpsb
mov
jl
pop
or
mov
xchg
dec
dec
sub
mov
idiv
add
loopne
or
pop
pop
sbb
pop
cmpsb
push
mov
xor
dec
mov
jne
repnz
mov
sub
cwtl
leave
jp
sbb
mov
aad
push
bound
push
xchg
mov
mov
stos
addb
das
adc
pop
mov
sub
mov
dec
mov
pop
enter
daa
scas
fs
xor
fs
test
or
sbb
cmp
gs
or
dec
or
add
xor
daa
cmpsb
mov
dec
outsb
mov
cmp
adc
test
adc
push
add
mov
test
inc
hlt
xor
pushf
clc
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
jmp
inc
imul
jno
arpl
cltd
or
jg
jl
pop
addr16
dec
cltd
sub
insb
or
out
xchg
mov
xlat
ror
xchg
sub
ja
lret
lea
ret
lock
rorl
jecxz
jl
mov
inc
mov
dec
cmpl
xchg
fists
and
sub
in
into
pop
arpl
je
inc
lea
roll
or
int
les
sbb
jle
movsb
mov
mov
or
cltd
xor
add
or
cmp
sbb
cltd
dec
inc
sub
scas
loopne
dec
add
movsb
add
and
mov
fwait
ss
cmp
cmpb
push
push
mov
pop
fmuls
pop
outsl
adc
cmpsl
fiadds
xchg
arpl
xchg
orb
ljmp
fs
adc
gs
cltd
push
mov
iret
mov
sub
addr16
enter
shrd
dec
sub
mov
clc
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
jmp
mov
mov
mov
push
adc
mov
xor
jg
jl
mov
lods
adcl
or
incl
push
mov
bound
fs
cmp
xor
mov
sbb
bound
and
shl
iret
jno
subl
scas
shrl
lret
test
or
and
pop
mov
push
pop
jmp
scas
hlt
sub
and
repz
ret
cmp
jne
inc
pop
sub
sub
cmp
inc
fdivrl
data16
cmc
cwtl
leave
mov
sbb
jg
or
hlt
mov
pop
jg
and
mov
add
or
inc
clc
mov
les
jnp
xchg
dec
pop
and
nopl
jns
rol
cmpsb
mov
inc
data16
sbb
int
movsb
movsb
jne
or
mov
mov
les
test
loop
cmpsb
cmp
mov
int3
sti
sbb
sbb
int
test
sub
scas
xlat
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
jmp
test
iret
clc
fnstsw
outsb
ret
popf
aam
sbb
or
jl
jl
jl
jo
idivl
divb
xchg
popa
or
xchg
mov
push
in
adc
jmp
test
and
push
inc
add
inc
movsb
test
or
outsb
add
pusha
shrl
pusha
repz
sub
cs
ss
iret
pop
adc
scas
jae
hlt
xor
mov
aas
ds
xchg
fwait
or
mov
test
add
or
in
jno
outsb
fildll
mov
das
pusha
and
xchg
fdivrs
xor
in
push
addr16
mull
pop
mov
ljmp
xchg
add
and
lds
mov
getsec
cwtl
shr
pop
or
mov
popa
ljmp
iret
es
sbb
xchg
push
jno
sbb
push
and
push
and
mov
mov
mov
xor
mov
movl
jmp
aas
enter
jge
jge
int
jae
scas
inc
or
push
jl
jl
lcall
scas
stos
jb
cmp
movsl
frstor
jge
or
sbb
xor
stos
imul
adc
dec
int3
adc
jecxz
push
cld
dec
mov
sub
add
loopne
enter
add
stc
xorl
fnstenv
int
cltd
adc
pop
or
sub
aas
cmc
jle
cwtl
mov
adc
mov
mov
lds
cmp
ljmp
mov
test
mov
sub
add
ret
out
roll
leave
adc
test
lret
pop
xorl
insb
jp
mov
xchg
jno
movsl
and
xchg
and
xor
insl
fwait
int3
xchg
arpl
clc
mov
lods
decb
sbb
pop
cmp
lods
pop
dec
test
scas
add
cmp
mov
negl
push
jmp
xor
aaa
pop
pop
fimull
mov
icebp
sti
jmp
jl
jl
push
and
jmp
pop
mov
jmp
int3
ret
sbb
mov
push
fldenv
ds
push
mov
mov
cli
cmp
fildll
idivb
push
scas
adc
jo
sub
jecxz
jbe
fists
popf
fwait
jae
or
lcall
inc
cmp
shlb
imul
xor
sbb
inc
or
xchg
lret
cmpsl
pushf
lcall
ds
mov
shrl
adc
mov
insb
stc
ror
leave
pushf
iret
minps
sbb
jge
mov
mov
sub
xchg
outsl
enter
scas
pop
add
or
cmp
ficoml
mov
cmp
push
mulb
add
push
pop
jmp
xlat
push
imul
xor
xchg
jbe
lock
int3
add
jl
jl
mul
push
add
mov
imulb
cmp
pushf
shll
mov
repz
jns
incl
aaa
adc
pop
lahf
roll
jg
pop
movsb
stos
and
test
adc
or
cmp
test
sub
sub
je
mov
add
ljmp
inc
pop
nop
push
lahf
or
bnd
inc
cmpsl
rol
nop
addb
jle
mov
mov
xor
scas
imul
adc
scas
ss
fldcw
je
ja
test
pop
sub
lea
into
push
mov
sbb
das
fwait
inc
inc
and
xor
ds
sti
aaa
push
add
cmp
imul
mov
cmp
outsl
hlt
mov
gs
clc
add
rorl
add
xor
mov
push
mov
subl
add
cmp
jmp
in
ds
inc
jge
test
testb
loope
ss
add
jl
jl
sub
and
into
cmp
std
mov
mov
sbb
push
xlat
cmc
rep
arpl
xchg
mov
push
pop
cmpsl
scas
js
in
nop
dec
inc
sahf
sub
out
testl
jecxz
pushf
imul
stos
mov
pop
jno
sti
sti
inc
lea
dec
lret
adc
into
cmp
sbbl
lods
fs
inc
ljmp
leave
jnp
fmull
ja
insl
adc
stos
sbb
xchg
pop
lret
pop
adc
push
and
cmp
jmp
filds
jp
cmp
cltd
out
mov
inc
mov
rcl
push
xchg
ljmp
xor
inc
inc
inc
or
inc
mov
cvtpi2ps
sub
sti
adc
jo
xor
je
adc
mov
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
or
mov
sub
add
orl
xor
jmp
mov
dec
jecxz
popf
jp
sahf
js
xlat
stos
jns
push
add
jl
jl
popa
xchg
incl
ja
rclb
sarb
adc
test
xor
and
jge
add
pminub
cmp
orl
in
push
fisubrl
cs
fmul
ljmp
pop
stc
add
push
dec
push
icebp
sub
std
jo
mov
cld
add
add
cmpsb
mov
out
icebp
mov
aam
lock
xchg
pop
test
in
xor
push
out
popf
push
dec
aam
or
inc
jnp
sbb
push
mov
cmp
mov
hlt
in
lret
popf
mov
jmp
jbe
in
mov
repz
arpl
stos
cli
das
mov
xchg
test
insl
ljmp
fidivrl
fcmove
fisubrl
or
dec
xchg
or
insl
jmp
fwait
mov
in
add
cmp
movl
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
jmp
jnp
decb
pop
mov
pop
xchg
and
add
jl
jl
add
xchg
out
adc
cmp
aaa
mov
dec
mov
cld
xchg
test
push
adcb
addl
adcl
xor
fistpl
int3
sbb
repz
repnz
dec
inc
fs
sub
or
jg
xor
mov
xchg
push
sbb
inc
push
imul
sub
test
mov
fldlg2
add
pop
mov
pop
mov
nop
shlb
aad
jg
jecxz
xor
cmp
push
ret
aam
arpl
out
and
in
xchg
je
insb
adcl
cld
fnstcw
mov
xor
mov
cmp
push
inc
or
test
mov
enter
sub
dec
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
movzbl
add
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
xor
or
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
sub
mov
mov
sbb
mov
push
mov
xor
cmp
je
mov
mov
sub
jmp
notl
adc
lea
xchg
xchg
cwtl
xor
fiaddl
add
jl
jl
scas
mov
fisttps
sbb
sbb
aam
adc
adc
adc
stc
bsf
adc
sbb
fistps
xor
mov
mov
mov
lds
dec
stc
inc
iret
xor
pushl
fs
cmp
mov
loope
mov
pop
ds
dec
mov
or
cmp
mov
adc
dec
cli
scas
mov
add
add
cmp
add
in
cmp
imul
inc
sbb
aas
inc
or
cltd
pop
aam
push
call
push
fisttps
xchg
sbb
scas
add
push
pop
cwtl
roll
jns
fisubl
sbb
fistpll
or
adc
jae
in
in
fsubl
lcall
add
jne
mov
add
jmp
jmp
xchg
xchg
pop
test
imul
mov
jl
pop
jl
jl
add
xchg
lret
pop
fcomps
pop
mov
or
jl
add
pop
stos
frstor
loopne
fwait
aad
push
les
je
push
out
and
shr
fildll
clc
jmp
push
stc
lret
cmp
loopne
insl
call
xchg
add
pop
xor
jg
and
inc
cmp
cmp
pop
insl
xor
popl
arpl
cld
sub
aas
clc
imul
sbb
les
fistpl
dec
adc
jmp
adcb
in
xchg
bound
mov
pop
sub
jmp
outsl
imul
xchg
pop
and
iret
pusha
dec
mov
mov
or
arpl
pop
or
cmp
mov
push
enter
scas
mov
sbb
mov
stos
mov
jmp
add
andl
jg
and
cmpsb
test
xchg
add
jl
jl
jl
add
test
xchg
f2xm1
mov
and
pop
xor
jbe
jne
mov
ja
adc
or
lret
pop
pop
pop
or
add
ret
adc
xor
push
inc
jmp
scas
xor
xchg
jecxz
ret
jb
mov
scas
push
mov
push
jmp
inc
push
nop
or
adc
and
jbe
pushf
daa
and
jb
sbb
jmp
xchg
fwait
stos
pop
mov
aas
add
prefetch
aam
clc
shl
mov
push
nop
mov
push
push
repz
pushf
push
and
mov
xor
int3
outsb
lods
pushf
adc
mov
dec
movsb
imul
ficoms
cmp
decl
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
xor
add
dec
mov
jmp
mov
mov
xor
mov
add
jmp
sarb
jge
js
dec
mov
testb
jl
jl
jl
or
iret
dec
lea
jp
aas
dec
fs
repz
pop
xchg
mov
jae
dec
dec
mov
lcall
shl
xchg
mov
and
aad
mov
push
loop
mov
sbb
dec
xchg
movb
pushf
mov
sub
movsb
hlt
loopne
test
popa
mov
jg
subl
imull
push
popf
aas
test
testb
mov
pushf
aad
and
call
adc
add
imul
jbe
cmc
sub
hlt
arpl
inc
add
pop
jno
xchg
mov
adcb
cwtl
xchg
into
shlb
test
scas
mov
jl
xor
data16
push
arpl
addr16
clc
sub
mov
xor
xor
mov
or
mov
adc
movb
not
lea
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
sbb
mov
xorl
mov
xorl
xor
xorl
sub
addl
mov
xorl
movl
jmp
xor
adc
in
std
add
mov
out
push
jl
push
jl
jl
mov
add
push
nop
clc
push
push
jp
inc
mull
call
sarl
sahf
mov
sub
mov
mov
in
clc
xor
shrl
push
movsb
sbb
jne
shrl
jl
sub
jl
pop
mov
addr16
xor
lds
xchg
and
pop
les
into
nop
and
rorl
out
mov
iret
lcall
adc
xchg
dec
jge
hlt
rolb
mov
add
lret
jmp
outsb
adc
inc
xchg
jp
or
insl
xor
adc
je
add
loope
insb
sbb
in
xchg
test
cmp
out
inc
inc
pop
push
jl
mov
in
mov
sub
xchg
xchg
mov
neg
push
movl
mov
mov
sub
sub
mov
mov
push
xor
movzbl
sub
jmp
cld
pop
cwtl
daa
pop
out
jnp
or
cwtl
cmpsl
gs
sbb
jl
jl
pusha
push
xchg
pop
iret
scas
push
mov
xor
inc
or
lea
lcall
roll
rcl
adc
mov
outsl
cmp
ss
sub
aam
mov
lds
or
inc
test
mov
inc
jno
lret
icebp
notl
and
mov
fdivrl
aas
int
subl
je
aas
scas
insl
fildl
ds
mov
aaa
mov
js
das
jae
mov
in
jo
cmp
push
pop
jns
ficoms
or
xchg
mov
mov
sub
ds
out
sub
aad
adc
mov
mov
push
fistl
and
imul
mov
out
idivl
imul
add
add
add
add
movl
jmp
movl
mov
jmp
sub
cmpsl
sub
sbb
popa
ret
lret
sbb
jl
jl
dec
xchg
pop
iret
pop
movsb
divl
jmp
insl
cmpsb
push
sub
call
push
sbb
add
xor
add
loope
cs
leave
mov
mov
test
jnp
sub
rclb
and
mov
test
or
hlt
push
call
mov
dec
daa
add
rcrl
and
and
pop
orb
idiv
sbb
repnz
push
jp
pop
es
xchg
push
iret
inc
add
adc
lret
sti
shr
sub
rclb
push
sub
stos
or
imul
add
in
mov
sbb
je
movsb
cld
test
fcompp
std
cld
sub
in
dec
xchg
pmullw
mov
js
xor
add
cmp
rcr
ret
sahf
mov
adc
test
add
add
inc
cmp
movl
jb
mov
mov
xor
mov
xor
mov
xor
adcl
jmp
push
ds
fldl
sub
pop
mov
jl
jl
jl
xor
shrb
sbb
jmp
cmc
cmp
cltd
lret
sbb
push
push
lahf
and
popf
mov
imul
push
push
sub
cmpsb
repz
imul
popf
xor
mov
scas
call
ss
mov
pop
clc
shl
inc
pop
inc
push
rcrl
push
fwait
jno
bnd
jnp
ret
shll
inc
popa
loop
test
jge
pop
inc
dec
cmpsl
aas
cli
rolb
pop
cmp
in
cmp
pop
sbb
lea
aaa
fstp
movsl
jae
and
dec
iret
cld
xchg
dec
add
jg
and
jbe
or
xchg
mov
in
or
hlt
mov
repnz
jle
rclb
lods
xchg
cmp
mov
mov
out
push
sub
mov
pop
sub
inc
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
jmp
mov
mov
insl
jnp
stc
sbb
nop
mov
aas
add
sbb
jl
jl
pop
pusha
jno
out
lret
pop
sbb
adcb
add
adcl
lret
or
sub
xchg
stc
shr
inc
nop
punpcklbw
in
sub
jo
int3
xor
les
inc
inc
or
pop
xchg
sub
inc
lods
pop
in
insl
xchg
and
or
sti
ds
sbb
in
mov
dec
imul
xor
mov
xchg
lcall
imul
sub
dec
pop
sar
cmpb
cmp
sub
or
into
lock
incl
push
sub
popf
mov
pop
mov
pop
mov
sarl
lcall
lock
xchg
lods
dec
test
inc
ja
push
cmpsl
and
mov
xchg
adc
test
je
mov
jge
mov
xor
jmp
sbb
mov
std
adc
sahf
ja
sbb
jl
jl
pop
jg
cmp
rorb
fs
jb
mov
repnz
mov
dec
jmp
cmp
inc
cmp
jnp
arpl
mov
xchg
add
cmp
xor
daa
xchg
dec
stos
loopne
divb
out
jnp
xor
lahf
imul
int3
fstps
and
shr
lds
sbb
jg
cmp
movsl
mov
dec
adc
imul
out
mov
mov
cs
mov
sub
dec
mov
and
fwait
ljmp
add
loop
iret
pop
or
push
and
stos
cs
lea
scas
dec
or
pop
movsl
loope
outsl
push
or
mov
push
inc
jne
sub
out
adc
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jmp
daa
mov
mov
dec
clc
icebp
sbb
sbb
jl
jmp
xchg
xchg
pop
punpckhdq
iret
adc
sub
xchg
jl
jmp
iret
mov
test
in
add
mov
pusha
mov
arpl
adc
mov
mov
ds
shll
int3
rcll
mov
nop
pop
sbb
sbb
inc
xchg
iret
decl
stos
aam
sub
inc
int3
ja
lea
sbb
xchg
outsl
mov
push
insl
jae
xchg
dec
jae
dec
scas
xchg
cmc
scas
push
scas
dec
lds
or
mov
js
cld
pop
repnz
mov
mov
loope
jecxz
imulb
loopne
sahf
push
aas
pusha
mov
jmp
push
incl
fst
loop
jl
dec
pop
inc
test
mov
adc
or
mov
insl
or
xorb
lock
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
jmp
sbb
sbb
cmp
les
mov
jl
push
jl
jl
jp
fcomps
les
fimull
pop
mov
or
mov
fsts
out
cli
push
adc
pop
pushf
lods
in
xor
jns
push
cs
enter
add
outsl
xor
test
lds
fcompl
insb
push
movsl
cld
les
push
fistpll
jmp
inc
jb
loope
pop
popf
mov
in
pop
or
mov
cmp
mov
cmp
pusha
cmpsl
xlat
add
inc
jp
xor
inc
aas
add
mov
mov
inc
pusha
and
test
es
hlt
mov
xchg
inc
xor
inc
jp
sub
pop
test
jmp
imul
mov
or
inc
adc
adc
add
add
imul
test
xchg
lret
frstor
add
scas
pop
jl
push
jl
jl
add
or
cmc
mov
movsb
mov
imul
mov
push
sbbl
ja
jne
mov
lods
mov
adcb
push
cmp
mov
cmp
iret
icebp
adc
loop
aas
sub
pop
shlb
cmc
mov
xchg
jne
pop
mov
or
inc
xchg
imul
cltd
pushf
jle
push
icebp
adc
add
data16
ret
gs
out
mov
ds
dec
pop
leave
cmp
leave
mov
or
jnp
jb
call
and
rorb
xor
mov
xchg
xor
mov
test
je
pop
es
sub
sbb
jecxz
sbb
std
xchg
pop
mov
mov
lcall
stc
stos
push
das
dec
pop
and
mov
stc
pusha
movb
mov
pop
leave
ret
push
mov
push
adc
movl
sbbl
mov
xor
add
xor
add
sub
xor
mov
xorl
mov
sbbl
xor
addl
add
mov
adcl
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
xor
dec
mov
xor
xor
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
jmp
movsl
mov
gs
neg
cmp
adc
jl
push
cmp
ss
jns
push
inc
gs
and
daa
idivl
shr
mov
push
mov
fldl
mov
shll
dec
cmpsb
aam
pop
jae
xlat
mov
push
dec
mov
aaa
not
std
push
mov
call
push
test
add
xor
rclb
mov
mov
lret
pusha
cmpb
jne
dec
decb
lcall
lahf
lock
lods
push
insb
hlt
push
in
jg
adc
daa
pop
cs
push
call
cld
jbe
jne
jb
bound
mov
xor
cmp
subb
push
rol
jl
ljmp
jge
sub
jnp
jae
cmpsl
insl
cmpsb
fstpt
jmp
stos
es
mov
call
xor
push
pop
push
loop
adc
stc
lods
lods
xchg
xchg
andb
rcrl
addr16
mov
mov
cmp
mov
ss
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
shll
mov
mov
insb
iret
mov
jg
jl
cmp
hlt
sub
cmp
popf
xchg
cmp
movsl
test
adc
and
pop
mov
sahf
inc
xchg
shll
rclb
cmp
outsb
sti
xorb
push
aad
mov
adc
jecxz
clc
lock
inc
outsb
xchg
std
fwait
lods
ljmp
adc
inc
inc
in
pop
test
outsb
add
xchg
mov
inc
sbb
jp
pop
mov
lcall
shrl
inc
sbb
cmp
lds
push
jnp
xchg
jo
out
adc
and
adc
or
aad
pop
push
sub
jb
scas
sarl
xlat
push
jns
add
lea
je
cmp
ret
insb
dec
dec
mov
daa
shl
inc
pop
and
push
jne
pop
and
lock
ss
xchg
xchg
aam
pop
daa
jbe
popf
fldenv
stos
sbb
pop
add
push
cmpl
sub
dec
mov
jge
aam
pusha
aas
mov
and
inc
adc
xor
add
pop
leave
ret
push
mov
mov
xor
mov
div
jmp
outsb
stc
sti
movsb
jnp
gs
dec
xchg
int
adc
jg
jl
adc
jle
mov
idiv
insl
xor
test
mov
mov
push
mov
out
js
xchg
cmp
push
xlat
ljmp
in
ror
pop
cmp
shlb
pop
stos
je
loop
es
mov
pop
out
cmpsb
cmp
push
jp
aad
jl
inc
sbb
mov
cwtl
imul
test
hlt
fwait
and
js
push
mov
enter
jnp
loope
daa
shrb
sti
mov
xlat
lea
stos
and
negl
call
lret
aaa
mov
aam
ss
xchg
cmpl
dec
lret
not
sbb
or
inc
pop
cmp
jae
test
cmp
ret
shrb
dec
and
test
mov
jnp
push
xlat
popf
cmp
xchg
mov
jecxz
add
push
fwait
mov
aam
push
mov
cmpsb
jbe
mov
js
inc
push
xchg
lods
lahf
xor
mov
jns
inc
mov
push
sbb
out
add
gs
push
add
mov
adc
enter
sbb
add
add
xchg
imul
les
jmp
cmp
jl
jg
jl
pop
pop
jl
sub
div
popl
mov
and
jo
scas
int
repz
mov
pop
adc
mov
dec
insl
loope
mov
out
push
adc
cmp
cmp
dec
das
xchg
aam
xchg
mov
xchg
pop
dec
fimull
lock
mov
jmp
mov
add
repnz
aam
dec
push
or
lods
sbb
dec
jno
sar
insb
scas
hlt
xchg
pushf
frstor
and
out
cmpb
lret
sar
inc
pop
ds
pop
mov
addl
outsb
inc
jno
xchg
lahf
movsb
and
or
mov
shrl
mov
inc
mov
ror
and
das
imul
add
ret
mov
sbb
outsl
push
stos
repz
jg
add
jmp
mov
adc
and
outsb
sbb
std
xchg
insb
faddl
xor
xchg
sub
jb
sub
jne
mov
pop
ret
push
mov
push
add
movl
mov
and
mov
movl
mov
xor
add
jmp
jne
xchg
mov
arpl
mov
jo
adc
jl
adc
mov
ss
aas
mov
and
test
cmp
cmp
unpckhps
clc
cmp
and
mov
in
jno
jle
es
mov
mov
ss
mov
sub
sbb
xchg
popf
rcrl
loope
nop
pop
clc
cmpsl
sub
sbb
push
dec
stc
in
mov
xchg
inc
aas
out
cmc
pop
fmull
xchg
adc
mov
pop
arpl
dec
sbb
stos
mov
cld
add
lea
in
push
ja
mov
add
mov
sub
mov
sbbb
mov
lea
xchg
stc
mov
push
jl
ss
sbb
pop
aas
push
mov
xchg
loop
or
aad
push
mov
inc
mov
int
orl
into
mov
out
pushf
adc
dec
cmp
out
xchg
or
inc
stos
iret
cmp
imul
jl
xchg
mov
mov
or
loope
push
inc
cmp
sbb
mov
dec
repz
jno
and
sub
xor
es
pushf
add
pop
inc
lea
jbe
in
in
jo
mov
test
inc
adc
rorb
add
inc
sbb
add
adc
mov
mov
and
jmp
fdivs
dec
stc
gs
jg
pushf
mov
in
adc
jl
jg
jl
sarb
lods
mov
adc
push
bound
in
mov
cmp
mov
sbb
rorb
es
ret
sbb
and
push
lea
clc
xchg
mov
sbb
jnp,pt
xchg
inc
and
test
cmp
fs
push
inc
mov
cmp
into
xchg
mov
sub
daa
add
out
je
pop
dec
rcll
fadds
stos
fcom
sysenter
push
mov
repz
lcall
addb
adc
ret
jbe
imul
mov
cwtl
dec
mov
xorl
ds
or
call
in
add
stos
ds
cmp
ljmp
lds
filds
arpl
cltd
mov
jmp
iret
jne
pop
jns
lock
pop
ret
cmp
int
test
and
or
pop
lea
mov
outsb
mov
lret
scas
pop
movsl
arpl
sbb
sti
outsl
lea
cmpsb
sbb
jecxz
fisubrs
mov
push
mov
fbld
mov
test
cmp
ficomps
push
adc
inc
add
cwtl
jne
add
dec
add
jmp
jno
xlat
sti
sti
std
add
mov
dec
loop
movsb
pop
jl
aaa
jg
jl
mov
clc
mov
cwtl
jp
pop
push
bound
push
loopne
in
xor
add
push
and
aad
into
mov
push
push
imul
out
jb
adc
mov
inc
dec
mov
adc
mov
mov
cwtl
sub
or
push
cs
push
jp
daa
mov
adc
inc
loopne
popf
sub
decb
add
or
loop
fdivrp
loope
or
cmp
scas
sbb
adc
cs
jne
fdivrl
jge
cmpsl
mov
je
pop
scas
mov
lods
cmpsb
mov
xchg
mov
xor
cmpsl
cmpb
shl
dec
ret
bound
mov
add
in
and
ret
push
mov
add
or
pop
jle
test
ud0
dec
lcall
fs
loop
lods
imul
sbbb
sub
cmp
inc
add
movsl
inc
push
shrl
jbe
ss
out
frstor
out
xchg
add
xchg
cltd
mov
add
adc
lret
push
adc
test
cmpsl
cmp
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
adcl
push
push
push
push
adcl
call
test
movl
je
xor
jmp
andl
push
adcl
call
andl
test
movl
je
push
push
orl
call
movl
jmp
mov
mov
movl
sub
lea
neg
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jb
movzwl
adc
lea
sbb
mov
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
mov
mov
sbb
mov
xor
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
sbbl
add
movl
mov
mov
movl
cmp
mov
movl
je
mov
xor
add
imul
movl
mov
jmp
xor
add
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
or
mov
mov
add
xor
and
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
xor
mov
mov
movl
xor
add
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
negl
mov
add
mov
xor
add
mov
sub
add
mov
or
mov
sub
mov
mov
mov
or
xor
sbb
add
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
or
add
adcl
mov
and
mov
lea
or
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
orl
xor
mov
or
add
mov
sub
mov
sbbl
movl
sbbl
mov
mov
movzwl
and
movzwl
addl
add
or
movl
mov
sub
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
xor
orl
add
movl
cmp
jne
mov
xor
mov
xor
add
movl
cmp
movl
jne
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
mov
mov
xor
sub
mov
subl
sub
notl
add
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
mov
mov
movzwl
adcl
add
mov
mov
adc
mov
sbb
mov
orl
xor
lea
adcl
xor
sub
movl
mov
movl
movzwl
movl
cmp
mov
mov
movzwl
jg
orl
xor
sbbl
sub
sbbl
sub
movl
mov
jmp
xor
movl
lea
mov
mov
mov
mov
mov
cmp
je
not
mov
movl
movl
movl
jmp
mov
mov
movl
cmp
movl
jne
not
mov
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
movl
movl
movl
cmp
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
xor
mov
xor
mov
add
mov
movzwl
subl
not
addl
and
movl
mov
movl
mov
jmp
xorl
xorl
mov
pushl
call
test
movl
je
movl
jmp
mov
cmp
movl
jne
mov
movl
movl
jmp
mov
cmp
movl
jne
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
mov
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
andl
mov
sub
push
mov
add
push
call
incl
cmpl
jb
mov
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
mov
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
movl
sub
mov
orl
mov
add
andl
xor
movl
cmp
movl
jne
andl
xor
or
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
push
movl
xorl
movl
mov
push
mov
xorl
jmp
mov
data16
inc
xor
cmpb
jl
jg
jl
xchg
dec
xor
mov
mov
hlt
fucom
leave
sti
adc
push
inc
fstp
add
in
pop
jbe
pop
sti
cwtl
push
xor
dec
mov
sub
fcmovnbe
jge
fnstcw
divl
out
xor
mov
xor
das
sbb
cmp
adc
nop
pop
mov
mov
fldenv
popf
xor
cmpsb
ja
sbb
ss
pop
shrl
sarl
sbb
insl
jge
fldcw
adc
jae
jg
add
and
dec
ret
sahf
inc
mov
stc
dec
ss
xchg
jl
push
jae
stc
fwait
lret
call
int
jbe
movsb
sbb
pop
xchg
gs
repnz
fcmovu
fdivrl
jne
sarb
push
and
in
fwait
and
lea
arpl
ja
jle
hlt
sbb
jmp
mov
inc
repz
mov
icebp
inc
stos
incl
jo
push
lret
sbb
ret
clc
mov
pop
dec
test
popf
xor
out
gs
lds
adc
fdivrp
loop
inc
arpl
sbb
xor
aad
mov
mov
lock
or
je
ja
jns
cmc
cmc
add
or
push
or
xor
adcl
xor
mov
sbbl
add
orl
add
sbbl
imul
movl
mov
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
push
call
xor
or
dec
mov
jmp
mov
xor
xor
mov
adc
mov
xor
xor
add
add
jmp
dec
cmp
and
jp
pop
inc
push
and
fldt
jl
fdivrs
jl
add
jge
movsl
jge
push
out
pusha
adc
js
mov
add
cltd
push
stos
mov
pop
mov
mov
icebp
add
leave
jnp
and
nop
es
lret
aas
nop
ljmp
and
jl
jl
dec
nop
js
test
ficompl
ficoml
dec
mov
push
sbbb
test
add
aas
aad
inc
mov
sub
pop
sbb
add
sub
je
xchg
lahf
lock
or
not
icebp
adc
fimull
hlt
outsb
lds
pop
pop
ds
xor
dec
mov
insb
sbb
inc
andl
cmpl
fistl
repnz
inc
out
pop
xor
mov
or
in
mov
cmp
clc
cmpl
fimuls
in
lea
cmpsl
imul
sbb
fwait
inc
pop
add
adc
pop
lahf
dec
imul
repnz
inc
fcmovnb
test
inc
cmp
mov
sbb
sti
ret
pop
insl
lahf
loopne
sti
stos
inc
popa
lock
mov
aad
testl
jb
incl
sbb
shrl
and
out
xchg
scas
mov
int
mov
jmp
mov
jmp
mov
stc
mov
pop
scas
movsb
pop
mov
fdivrs
jl
sub
shr
aas
cwtl
xchg
dec
fs
push
mov
fistps
adc
in
pop
mov
mov
lods
rcrl
pusha
nop
mov
lock
popf
mov
lea
pop
lret
mov
cmpsl
pushf
pop
sbb
sbb
stos
jle
in
xor
jae
movsb
adc
xor
push
inc
enter
jge
sub
out
cmp
int3
lahf
mov
cltd
jmp
jl
insb
push
mov
pop
sub
push
rcrl
aad
imul
fadd
das
cmp
pop
insl
outsb
adc
lahf
push
mov
pop
lcall
add
ss
cmovb
xchg
mov
mov
pop
aad
jne
adc
push
xchg
gs
jns
aas
call
mov
fs
test
cmovg
sub
or
add
xor
mov
aas
popa
fs
cmpsb
xchg
loop
test
jge
pop
int3
in
push
cmp
mov
mov
fidivrs
mov
in
push
je
mov
mov
repz
dec
cmpsl
xchg
mov
aad
jo
mov
notb
fdivrs
jno
daa
int3
or
push
sti
dec
fwait
in
cmc
int
push
sbb
sbb
fisttpll
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
xorps
lds
in
bound
rcrl
cld
out
add
jl
stos
push
int
outsl
repz
push
imul
jge
push
je
dec
mov
pop
xchg
mov
adcl
add
cmp
push
loope
cli
inc
sub
add
xchg
inc
lahf
es
fidivl
xor
movsb
outsb
nop
dec
xchg
pop
iret
pop
loop
je
jl
int3
add
orb
xor
xor
out
mov
out
and
ret
ret
cltd
push
loopne
push
xor
sub
bound
pop
dec
shll
enter
imul
dec
add
xchg
dec
shl
xchg
jl
dec
test
outsb
mov
push
insl
xor
mov
je
mov
fldenv
mov
dec
cmp
pop
xchg
sub
push
dec
mov
inc
push
mov
mov
cmp
sbb
into
xchg
pop
rorl
movsl
outsb
mov
loop
out
pop
inc
jge
jns
ja
sub
daa
inc
cmp
adc
ret
inc
pop
or
fidivs
mov
movsl
out
push
fsubrs
inc
add
mov
pop
call
cmp
or
ficomps
test
repnz
dec
loop
ss
mov
fstpl
cs
mov
outsb
nop
mov
cmp
mov
je
xor
add
mov
jmp
stos
adc
mov
mov
jno
out
sub
jl
jg
jl
dec
das
test
int3
in
jle
pop
mov
add
sub
and
jbe
adc
shr
cmc
fstps
mov
dec
and
insb
dec
adc
mov
fldenv
jecxz
or
push
pop
pop
jb
shl
add
cmpsb
arpl
fnstsw
xchg
in
pop
push
sbb
and
mov
and
cs
cmc
mov
ret
jnp
xor
pop
out
out
mov
inc
out
fiadds
fcomps
xchg
in
adc
xchg
jp
mov
sahf
jle
pop
xchg
push
sub
cmp
jmp
scas
loopne
imul
sarl
mov
add
lea
movsl
adc
cmp
call
xor
inc
push
gs
in
andb
call
and
xor
fdivp
mov
add
sub
jl
jnp
adc
jp
mov
xchg
or
jb
cmp
pop
jnp
lret
xchg
out
scas
cltd
adc
mov
stos
cs
pop
iret
adc
hlt
xor
add
xor
cmp
mov
mov
dec
cs
clc
fldcw
nop
add
lds
imul
jmp
adc
mov
dec
insl
adc
sahf
stos
jmp
dec
das
jl
fdivrs
jl
ret
aam
cwtl
lret
jb
dec
sbb
ret
dec
push
insl
xchg
push
insl
std
icebp
adc
push
lahf
or
xor
nop
mov
mov
mov
ret
fnstcw
xlat
push
pop
xlat
roll
sub
xchg
sti
outsb
inc
and
pop
fiadds
sub
jbe
mul
cmp
nop
ljmp
cmp
insl
push
and
jg
sahf
fdivrl
mov
add
repnz
movsl
xor
dec
and
mov
outsl
fsubrs
jecxz
sub
inc
mov
jg
xor
orl
dec
gs
test
sbb
repz
mov
jecxz
mov
push
je
push
add
hlt
aas
push
inc
data16
and
into
stos
pusha
jno
dec
push
pop
arpl
sub
adc
push
sub
pop
jecxz
cmp
mov
leave
cmc
pushf
pop
arpl
add
movsl
dec
loopne
xchg
in
scas
sti
lret
cld
fdivrp
or
push
outsb
or
sub
in
mov
jecxz
mov
rolb
aad
and
and
vmovupd
pop
add
cmp
jne
pop
or
je
sub
pop
jno
push
xor
mov
lcall
push
nop
in
lock
pop
sub
insl
and
inc
or
or
leave
ret
push
mov
sub
xor
movl
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
xorl
movl
mov
push
mov
adc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
add
mov
negl
mov
subl
push
push
addl
test
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
xor
dec
mov
xor
or
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
jne
mov
mov
cmc
mov
pop
sub
pop
and
jg
jl
mov
mov
xor
sbb
mov
pop
jnp
cltd
xchg
mov
nop
stos
push
push
sbb
and
fcmovne
mov
loop
sbb
xor
stos
and
jns
jge
xchg
pop
mov
xchg
ret
jo
mov
push
imul
push
jne
repz
mov
pop
arpl
pop
dec
fbld
mulb
and
cwtl
jae
lahf
sbb
pop
js
addr16
repz
bound
outsb
les
pop
sbb
pop
aad
outsb
out
adc
in
jno
jnp
jb
mov
ret
in
icebp
pop
mov
addr16
mov
jnp
insb
push
jle
js
lock
pusha
imul
sub
jg
push
push
fidivs
ss
enter
dec
shl
jns
addr16
and
xor
lret
jb
fyl2xp1
lret
xchg
cltd
mov
fs
xchg
loope
imul
adc
sbbl
and
rol
clc
nop
cmc
test
ja
addr16
idivb
ss
shr
push
cmp
add
add
mov
mov
jecxz
lods
inc
mov
stc
ds
cmp
push
add
shrl
mov
and
imul
neg
mov
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
xchg
sub
sbb
xor
mov
or
mov
mov
xor
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
jmp
add
sbb
cltd
push
stos
cmp
inc
faddp
in
andl
jl
jg
jl
mov
lret
clc
ret
xor
xchg
add
jb
dec
dec
xchg
mov
mov
ja
or
dec
inc
stos
cli
or
xor
pushf
jge
xor
es
outsb
into
jge
fisttpll
cli
add
xchg
mov
mov
call
fstpl
push
js
cmp
push
fbld
adc
cmpsb
jo
cmpsl
outsl
in
xchg
pop
add
iret
xor
xor
rcl
jle
mov
fwait
push
out
mov
jle
add
add
xchg
test
adc
inc
mov
xor
daa
xchg
dec
movsb
and
jl
lcall
jmp
mov
jl
add
iret
jnp
jno
outsl
sub
imul
shll
inc
xor
outsb
push
test
mul
lcall
dec
and
pop
xchg
aam
xlat
subl
cmc
outsb
out
adc
pop
add
add
pop
stos
sbb
mov
inc
jmp
negl
inc
jns
mov
cs
out
cmp
sub
stos
jge
xchg
add
rolb
enter
lods
in
insb
mov
cmp
sbbl
ret
orb
xor
sub
add
rclb
mov
mov
sbb
rcl
ret
ja
mov
mov
xor
movzbl
add
mov
xor
and
jmp
dec
pushf
adc
repnz
xchg
dec
fstps
lock
mov
call
test
outsl
mov
into
pop
push
mov
sbb
mov
jl
add
jmp
and
arpl
fcmovne
or
sbbb
cmp
or
pop
xlat
push
pop
jne
jl
push
les
jmp
ss
jp
sub
mov
xor
lcall
xchg
or
push
or
mov
pop
add
pop
lods
xor
push
aaa
mov
mov
xchg
leave
insb
stos
cmp
and
loop
mov
ja
jmp
jp
inc
fs
jmp
imul
into
adc
mov
pop
test
xorb
pop
inc
sbb
pop
aaa
fsubl
stc
and
cmovno
cmp
idiv
jmp
jecxz
mov
inc
xchg
add
sub
hlt
xorl
fisubrl
data16
adc
sub
cli
jne
fwait
int3
inc
ret
jb
pop
in
seta
notl
cmp
push
inc
icebp
xor
or
inc
xor
push
push
xchg
push
mov
stos
sub
inc
sub
ret
add
cli
xor
fs
loopne
ret
push
push
xor
pop
in
movsl
pusha
xor
cwtl
imul
pop
ret
xchg
add
mov
mov
je
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
mov
xor
xorl
add
cmp
jne
subl
pushl
call
mov
xor
add
xor
xor
sub
sub
mov
sub
mov
mov
xor
adcl
add
cmp
je
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
jmp
lret
idivb
lods
out
scas
xchg
push
jmp
jl
call
imul
ds
sub
jmp
ljmp
adc
aad
out
pop
repnz
loop
cmp
add
out
jecxz
repnz
cmp
push
or
sbb
jecxz
jmp
and
mov
inc
inc
rcr
stos
jl
sahf
and
xchg
jb
imul
push
jb
and
fdivs
adc
fadd
jae
inc
jp
stos
call
sub
ret
out
adc
and
xchg
movb
scas
nop
mov
stos
cli
rcrb
sbb
sub
cmpsl
outsl
test
xchg
rcrl
mov
push
mov
cmpsb
xchg
out
jl
ljmp
push
sbbl
in
daa
clc
jge
push
subl
and
adc
add
and
mov
xor
jb
inc
push
fists
adc
lds
pusha
sahf
push
aad
xorl
aaa
fisubrs
push
mov
cmp
mov
push
ja
add
mov
push
lods
out
fs
aam
inc
imul
and
in
enter
daa
call
stos
dec
lock
addr16
add
ror
cs
add
mov
jecxz
push
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
jmp
adc
mov
inc
add
mov
call
out
sub
fwait
punpckhbw
adc
push
push
cmc
fs
mov
popa
negb
insl
push
stos
sti
push
adc
pushf
loop
sbb
xor
lds
loopne
sub
rcll
xchg
push
mov
sub
mov
jmp
sub
out
push
push
inc
pop
add
loopne
lahf
push
stc
popa
jmp
sbb
and
mov
lods
scas
mov
mov
mov
mov
loop
jae
sub
cmp
dec
sti
inc
cmp
jne
fs
insl
mov
insb
cwtl
es
std
fnsave
pop
add
inc
pop
int3
mov
add
xchg
in
nop
xlat
lret
mov
pop
and
daa
scas
mov
popf
ret
jae
sbb
push
out
popf
cvtps2pd
out
mov
push
ror
incl
mov
rcrl
sbb
lret
stos
in
rorb
sbb
sti
and
mov
hlt
andb
fadds
pop
cmp
pop
xchg
std
ret
jns
sbb
testb
jl
ds
xchg
lods
xor
sbb
movsb
or
and
leave
stos
into
lea
mov
push
cmp
mov
mov
push
pusha
adc
add
mov
imul
sub
mov
jmp
dec
cli
sbb
test
outsb
jp
out
shr
daa
mov
xor
jl
call
mov
sbb
and
rcll
push
xlat
clc
mov
xor
xor
imul
xchg
sbb
cmpsl
mov
cmpsb
dec
pop
sub
cmpl
test
aas
stc
loop
sahf
push
sub
outsb
imul
xchg
bound
pop
xor
push
ja
xorb
xor
adc
add
orl
out
scas
or
jl
inc
push
inc
addr16
jmp
stc
mov
dec
fs
daa
push
leave
cmp
inc
std
rcl
lahf
sbb
enter
dec
xchg
rorl
or
lcall
outsb
xor
outsl
or
sub
lock
and
pusha
push
jne
cld
mov
xor
rorb
mov
push
xorb
ret
dec
push
imul
pop
in
fwait
add
test
and
pop
jae
cmp
sbb
mov
add
sub
negb
cltd
mov
xor
xchg
dec
cltd
daa
xlat
dec
or
push
xor
ja
scas
rcrb
inc
rorb
bound
stos
adc
push
fwait
movsl
es
push
movsb
xchg
mov
sub
test
or
pop
adc
lds
ret
sbbl
imul
ja,pn
mov
mov
xor
mov
add
jmp
push
mov
aad
sbb
sbb
cmp
jg
jl
test
adc
rcrb
leave
cmp
xchg
out
sub
xchg
mov
bound
jnp
dec
loope
jns
push
lock
add
pop
pop
mov
mov
lods
movsl
pop
leave
mov
add
gs
rcrb
jecxz
and
scas
fsubr
jnp
push
popf
or
push
jmp
mov
repnz
sub
in
pop
pop
test
stc
shrl
mov
nop
out
push
imul
push
adc
ror
mov
in
cltd
fists
sub
iret
sub
inc
lret
gs
jg
xchg
xchg
xchg
in
arpl
mov
nop
adc
or
adc
pushf
call
jae
and
in
adc
sbb
insl
daa
mov
outsb
in
movsb
repnz
addr16
adc
movsl
inc
filds
frstor
add
stos
repz
cwtl
push
sbbb
loop
push
frstor
leave
add
pop
cmpl
js
push
jno
int3
dec
mov
add
daa
dec
mov
adc
xlat
repnz
adc
std
call
ljmp
dec
push
sub
mov
pushf
enter
dec
insl
rclb
jnp
mov
add
loopne
pop
fucomip
loopne
mov
dec
pop
mov
inc
call
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
jmp
je
jne
insl
gs
aam
pop
addr16
mov
jl
call
xchg
repz
mov
je
or
hlt
and
in
jo
lcall
out
shl
dec
int3
push
lret
sub
push
mov
xor
pop
cmp
fs
push
mov
jb
repnz
pop
mov
mov
fwait
xor
push
mov
clc
aas
pop
jnp
add
sbb
out
subb
xchg
scas
incb
sub
test
leave
or
rcrl
mov
add
fsts
pop
inc
es
popa
mov
adc
leave
mov
or
push
jnp
push
test
or
je
and
lret
push
mov
mov
jle
jne
repz
mov
mov
xchg
cmp
sbb
mov
mov
xchg
push
sahf
and
outsb
dec
push
rol
jo
fwait
adc
and
into
adc
sbb
jns
test
fstpl
or
insl
lods
test
xchg
sbb
js
xor
cmp
lds
rclb
inc
xor
mov
and
lahf
xchg
mov
jae
sbb
test
fiadds
dec
sbb
push
mov
outsl
clc
data16
jg
sub
mov
pop
ret
mov
sbb
push
sub
stos
mov
xor
call
push
mov
inc
repz
scas
pop
rcrl
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
sahf
mov
push
mov
add
ret
adc
cmp
jg
jl
mov
mov
ss
ret
mov
out
sbb
cli
fisttpl
sahf
jp
adc
repz
dec
ret
mov
add
mov
cmpsl
jbe
lret
imul
aaa
xchg
movsl
lcall
sbb
out
pop
and
push
jecxz
mov
lcall
call
jmp
stc
adcl
pop
jmp
inc
mov
pop
or
xchg
xchg
mov
pop
adc
bound
fcmovne
mov
ds
xor
inc
inc
ffree
fists
push
popa
push
inc
or
ss
jns
jno
aam
das
push
aam
jne
int
and
sahf
test
and
js
pop
test
adc
mov
dec
scas
push
fsts
test
popf
or
add
aam
orl
inc
adc
mov
add
cs
test
aaa
push
push
mov
popa
mov
mov
or
or
test
das
popf
dec
xchg
mov
add
aad
sahf
sub
sub
add
push
pop
scas
mov
sbb
add
fs
mov
jp
mov
enter
jbe
int3
sti
add
mov
ss
stos
les
rcrl
inc
fists
sub
mov
in
mov
jmp
ret
out
std
cli
cmp
mov
inc
ja
cmp
jl
push
mov
loopne
pop
fwait
pop
movsb
ja
add
bound
sub
stos
sti
cmp
bound
out
lahf
or
xchg
inc
adc
shrd
loopne
popa
mov
cmp
cli
out
repz
and
gs
mov
mov
fsub
xchg
mov
fisubs
adc
and
shrb
inc
loope
jo
jnp
xor
test
cld
mov
push
movsl
or
xchg
cli
inc
mov
insl
lret
xchg
loope
mov
aas
mov
dec
xchg
loope
mov
in
pop
sahf
push
pop
inc
cmp
enter
push
stos
push
movsb
ret
or
or
cmp
cmp
push
mov
mov
aad
xor
cltd
imul
mov
mov
lcall
sub
shll
lret
adc
push
adc
sbb
pop
std
push
lcall
xor
mov
sub
aam
jbe
push
mov
dec
test
adcl
out
adc
sbb
test
pushf
cmp
mov
mov
jmp
pop
push
sbb
mov
std
mov
add
hlt
std
xor
jo
push
in
cmpsl
fdivrs
mov
shr
add
add
or
je
out
sub
jns
outsb
fistpll
jl
call
cli
lahf
push
dec
loop
cltd
fisubl
sbb
pusha
lods
and
mov
aaa
ja
jae
xlat
jg
pop
sbb
inc
cltd
shrb
inc
mov
cwtl
scas
jae
and
dec
add
dec
faddp
mov
push
sbb
in
adc
fcom
jne
into
cmc
push
sahf
sub
mov
hlt
xor
pop
xor
mov
rcl
pop
xchg
aas
dec
add
mov
daa
test
aas
inc
in
mov
push
xor
imul
pushf
xchg
dec
xor
lods
inc
insb
xchg
inc
sub
shl
or
enter
addr16
inc
pushw
das
dec
stos
lcallw
sub
jo
fldl
or
mov
pop
lret
jbe
sub
jne
push
das
stc
dec
shrb
cmpsb
jecxz
inc
cmc
pop
rcr
or
mov
xor
inc
inc
pop
fwait
dec
push
add
sub
stos
arpl
dec
out
aas
stc
sub
es
or
mov
imul
push
dec
and
cmp
jle
lcall
pop
into
or
cmp
xor
popa
xchg
add
or
inc
ffreep
xor
ja
xchg
adc
jle
lock
cmp
dec
xor
sub
pop
mov
add
mov
decl
add
stos
add
imul
mov
xor
mov
lea
cmp
jmp
test
in
iret
jp
movsl
jge
loope
lock
jl
call
push
mov
xchg
mov
sahf
inc
lock
loop
jmp
and
outsb
or
xchg
popa
out
inc
clc
adc
pop
xor
xlat
test
jmp
in
dec
jp
and
ficoms
dec
add
in
aam
xor
pop
or
pop
lods
test
mov
jl
add
push
aam
xor
das
push
loop
aam
dec
mov
lea
cmp
push
jo
das
dec
adc
pop
es
dec
pop
inc
xlat
fisubs
mov
stc
lock
lock
pop
fisubl
sbb
jp
cmpb
push
cli
idiv
sub
jns
push
cmp
xor
movq
push
push
pop
mov
into
xchg
arpl
sbb
cs
or
push
rorb
in
jle
mov
mov
pop
xor
and
jno
das
cmp
rcrl
or
movsl
in
cmpsl
fidivrs
sub
or
jg
mov
hlt
or
xor
mov
sbb
subb
out
es
inc
mov
imul
push
add
stos
jb
mov
pop
adc
lret
dec
pop
scas
mov
cltd
push
pop
sub
inc
pushf
push
pop
arpl
sub
iret
test
push
test
aaa
mov
ja
test
idiv
decl
add
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
jmp
hlt
jecxz
dec
jnp
pop
std
sahf
lret
and
and
daa
xor
jg
jl
decb
push
movsl
jae
mov
and
jno
cmpsl
dec
test
adc
cwtl
jo
xchg
pusha
icebp
adc
pop
mov
cmc
sub
and
jl
test
adc
mov
rcr
jmp
aam
int
mov
in
insb
and
mov
mov
push
dec
insb
add
push
aad
pop
test
xchg
or
sarb
sbb
popf
sub
pop
mov
outsl
inc
sysenter
adcb
insb
ljmp
fsubrl
addb
jno
sub
pop
mov
aaa
test
imul
into
stos
ljmp
and
gs
sbb
cmpsl
das
adc
jne
ljmp
xchg
mov
mov
pop
out
xor
xchg
rsm
push
inc
jg
ljmp
sbb
mov
in
dec
loope
movsl
stc
pop
inc
out
mov
aad
stos
cs
jmp
mov
out
add
aam
fsubl
cli
inc
in
ret
xchg
xchg
js
mov
aad
imul
sbb
mov
data16
add
aaa
call
and
add
js
popf
mov
sub
push
xchg
rcrb
xchg
push
xor
mov
dec
jmp
xchg
mov
mov
xchg
xor
jg
jl
aad
bound
mov
cs
mov
sbb
jl
es
jno
repnz
jl
xchg
lret
sub
cwtl
ljmp
jge
bts
fdivrp
loope
mov
mov
mov
adc
out
test
shlb
sbb
mov
mov
xchg
pushf
xchg
pop
add
sbb
outsb
and
cmp
xchg
xchg
pop
aad
popa
jbe
cmp
xchg
js
push
fiadds
loopne
inc
aam
cmp
mov
insl
test
cld
jmp
jge
insl
cmp
sbb
mov
jl
mov
faddl
adc
jmp
sub
ljmp
lods
mov
adc
fndisi(8087
jae
in
movsb
cmp
sub
data16
inc
pop
pushf
sbb
xchg
jp
adc
xchg
stos
mov
ljmp
cli
and
mov
mov
cwtl
xor
cmp
lds
ljmp
ds
out
cmp
inc
or
push
fcoms
xor
cmp
xor
xor
xor
xchg
mov
push
daa
adc
rcll
out
stc
inc
hlt
sar
or
testl
add
sbb
dec
xor
add
pop
mov
pop
jmp
add
lret
mov
push
xchg
shl
das
mov
fildl
call
in
rcrb
push
cmpsl
mov
decb
mov
mov
les
daa
out
jae
int
adc
and
mov
cli
out
sub
inc
jp
out
sub
dec
sahf
outsb
into
into
dec
js
insl
pop
sahf
mov
push
sbb
push
push
test
iret
cs
add
mov
push
and
push
xchg
arpl
test
ret
repz
dec
jecxz
sti
add
push
push
fnstsw
fidivl
lods
mov
cld
int3
sub
mov
xor
xchg
sbb
push
cs
in
mov
ret
aaa
clc
int3
cmpsb
jl
pop
int3
ljmp
cli
rdtsc
insb
lock
cld
inc
jmp
cmpl
jl
add
stc
call
call
in
dec
dec
xlat
sahf
rcrb
mov
sub
mov
push
lea
adc
pop
fdivrs
int
loop
dec
cmpsb
mov
shlb
push
repz
add
gs
push
push
dec
mov
xchg
jp
mov
jl
adc
fwait
mov
cmp
mov
push
xorl
mov
push
fistps
and
pop
add
sub
add
loop
mov
sub
or
pusha
cmp
cmpsl
in
sub
test
pop
pop
leave
ret
push
pop
js
imul
popa
dec
arpl
pop
inc
dec
jne
push
add
add
push
xchg
inc
add
inc
add
or
dec
pop
dec
mov
dec
add
dec
push
dec
inc
dec
jnp
inc
dec
mov
push
pop
push
mov
dec
pop
dec
mov
dec
add
dec
push
dec
inc
dec
or
dec
dec
dec
pop
bound
mov
dec
or
dec
jnp
mov
dec
mov
jb
jae
subl
jge
mov
dec
push
dec
mov
dec
jnp
inc
dec
mov
sbbb
xchg
insb
nop
jl
jge
mov
dec
push
dec
mov
dec
or
dec
inc
dec
pop
xchg
pop
xchg
outsl
mov
jge
mov
dec
cs
mov
dec
and
dec
inc
dec
pop
mov
insb
mov
sarb
dec
or
mov
dec
jl
mov
dec
mov
mov
mov
ret
insb
sarb
mov
dec
cs
mov
dec
cs
inc
dec
mov
ret
outsl
shrl
loopne
loope
dec
or
mov
dec
or
dec
sub
dec
mov
rcrb
outsl
jecxz
loopne
lock
mov
dec
pop
dec
mov
dec
mov
loop
jecxz
rep
lock
jge
jl
jge
mov
dec
and
dec
or
dec
sub
dec
mov
add
outsl
adc
and
mov
nop
inc
add
inc
add
inc
add
add
xchg
inc
add
add
inc
add
xchg
inc
add
add
add
pushf
clc
and
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
or
subl
push
orl
mov
dec
cmp
inc
add
ja
cli
jne
in
incb
mov
xchg
inc
add
pushf
clc
xor
pushf
clc
xor
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
cmp
xchg
pushf
clc
and
stc
add
nop
inc
add
xchg
inc
add
dec
xor
jmp
add
sbb
add
mov
add
dec
add
inc
add
insl
add
add
add
popa
add
push
imul
add
add
data16
add
add
add
add
push
add
add
imul
add
insb
add
jae
add
jae
popa
add
imul
jae
insb
add
data16
add
push
add
insb
add
jae
add
add
outsl
jo
dec
dec
inc
dec
dec
insb
imul
imul
add
dec
add
inc
add
outsl
add
push
push
insb
add
jae
add
jae
popa
add
imul
jae
insb
add
data16
add
push
add
insb
add
jae
add
add
add
add
dec
pop
dec
sub
dec
pop
dec
es
imul
add
dec
imul
dec
sub
dec
sub
dec
push
add
dec
and
dec
sub
dec
and
dec
add
add
push
jge
lea
popf
push
lods
push
mov
push
in
push
std
push
or
push
cmp
push
jb
jae
jo
jno
jbe
ja
je
jne
mov
mov
mov
mov
mov
jl
jge
jge
jge
jge
cmp
vptestnmw
sub
hlt
xor
xor
jno
mov
imul
mov
xlat
movsl
xchg
sub
movsb
jge
fidivs
xor
pop
adc
and
movsl
sbb
add
je
inc
add
shll
mov
inc
add
push
addr16
inc
add
inc
add
popa
dec
push
dec
jne
pop
jns
dec
inc
inc
popa
jns
push
inc
inc
jne
push
push
jno
jb
insw
arpl
bound
js
add
add
push
ja
inc
gs
inc
dec
outsb
imul
push
dec
push
push
push
jne
inc
outsb
jo
inc
jp
add
dec
inc
inc
inc
jbe
push
outsb
add
pop
push
jp
imul
jbe
add
inc
inc
popa
addr16
dec
imul
push
jne
add
dec
gs
outsb
pop
push
push
dec
icebp
iret
mov
loopne
pop
stos
das
jge
add
insb
pop
add
int
cmp
imul
pop
mov
scas
pop
idiv
les
cmp
rol
mov
fcomps
sbb
cmpsl
mov
es
jmp
aas
jo
in
pop
rcll
icebp
inc
ret
mov
psubw
xor
shrb
in
addr16
loopne
mov
cltd
in
cmp
mov
bound
loope
data16
lret
jnp
out
jp
nop
repz
jb
add
jge
fildl
xor
mov
xor
jecxz
add
and
xchg
xor
push
and
xor
mov
add
adc
pop
repnz
dec
adc
nop
iret
mov
mov
fisttpll
push
push
js
mov
dec
mov
fmull
cwtl
push
into
jge
bound
pop
fs
push
aaa
xchg
mov
or
inc
xchg
dec
dec
cmc
sahf
in
and
mov
std
mov
lds
pop
inc
fwait
leave
out
nop
jge
xchg
dec
int3
scas
pop
xor
xchg
roll
pop
or
add
dec
rcl
repnz
mov
xchg
fcomp
push
dec
pop
dec
pop
mov
pop
dec
rclb
aad
mov
pop
or
mov
ja
sahf
test
arpl
xchg
mov
add
insb
inc
push
jb
dec
enter
push
sbb
out
mov
push
and
mov
push
sbb
pop
xor
lock
cli
jnp
sbb
pop
pop
int3
or
gs
outsb
xchg
fwait
push
jns
jg
xor
int3
shlb
cwtl
jg
sub
outsl
repnz
mov
popa
test
aaa
fiaddl
jecxz
push
orl
and
imull
inc
pop
imul
inc
addr16
inc
jne
sbb
mov
dec
insl
push
cmp
sbb
addb
lods
test
cmpsb
sbb
sub
and
add
out
jnp
lock
lea
pop
insl
mov
sbbb
imul
outsb
cli
js
push
xor
sahf
xor
mov
out
adc
out
test
sarl
mov
out
nop
push
ljmp
loope
ficomps
ljmp
mov
jnp
pop
lods
mov
in
mov
lods
xchg
mov
sub
push
cwtl
mov
aam
add
adc
cld
jo
ljmp
fsubrl
mov
and
xchg
mov
cli
cmp
cmp
mov
push
xchg
pop
sbbb
adc
mov
das
cld
jecxz
scas
dec
adc
clc
popa
inc
xor
imul
popf
cmp
adc
in
cmp
loopne
cmp
inc
inc
fsubs
push
cmp
stc
repz
push
out
bound
outsb
rcll
or
mov
lcall
mov
sub
xrelease
test
sti
rclb
add
in
lcall
inc
mov
popa
push
imul
cmp
cmpsb
idivl
pop
mov
aam
jb
lods
movsb
or
lock
stc
mov
mov
jl
pop
adc
sub
nop
pop
xchg
mov
dec
sub
or
sub
shlb
and
jne
mov
lods
mov
mov
push
inc
push
cltd
push
in
sub
scas
jge
ret
dec
xchg
mov
add
add
test
lds
jbe
push
add
ret
sub
dec
add
pop
xchg
lods
fistl
push
mov
loopne
cwtl
cmpsl
mov
xchg
and
jo
dec
fildll
jmp
rcll
hlt
movsl
jb
cmp
ljmp
cmpsb
in
repnz
mov
sti
push
pop
pop
out
scas
xor
push
cltd
dec
pop
xor
mov
jmp
sar
cmp
adc
sub
sti
shll
sbb
cmovp
addl
in
ss
mov
shlb
outsl
jo
cmpsl
int3
push
add
pusha
test
mov
or
addr16
inc
movsl
repnz
dec
mov
add
mov
fcomps
movsb
dec
sub
jg
pop
lcall
leave
aas
adcl
xor
test
add
movsb
inc
jle
mov
je
incb
out
push
rcll
adc
stos
rorl
jne
adc
mov
mov
push
shrb
push
jne,pt
hlt
ret
jb
mov
insb
mov
sbb
mov
cmp
daa
ja
rolb
mov
loope
test
hlt
popa
outsl
mov
cmp
mov
out
xor
ds
fldenv
fmulp
xchg
xor
roll
fmul
jns
das
push
mov
mov
aas
pop
iret
inc
rolb
out
sbb
mov
test
adc
pop
mov
and
movsl
add
jns
jl
sub
aas
cmpsl
jle
xor
add
xchg
and
enter
das
lahf
test
lds
mov
mov
push
stc
loopne
lods
enter
sbb
push
fisttpll
jnp
mov
jg
jmp
ja
cmp
popf
or
es
ljmp
rorl
inc
pusha
jb
xchg
orb
mov
imul
sub
push
push
scas
and
push
in
lcall
dec
nop
cmp
add
cltd
scas
xchg
jb
std
out
dec
mov
cld
stos
push
and
push
add
adc
roll
sbb
dec
lods
xor
jns
std
test
mov
push
push
or
dec
dec
and
xchg
or
and
mov
fmull
dec
dec
fisttpll
mov
mov
outsl
mov
lret
and
sbb
imul
mov
dec
fs
mov
inc
xor
and
or
mov
push
xor
das
xchg
sub
push
daa
push
fimuls
xor
mov
pop
push
es
test
cltd
pop
stos
lcall
lret
lcall
add
mov
jb
xor
cmp
add
xchg
cmp
inc
es
test
mov
pop
sbb
xchg
outsb
dec
cmp
dec
cs
ja
mov
neg
shrb
outsb
mov
inc
es
pushl
mov
movl
and
popa
inc
xor
filds
jp
fstpl
xchg
les
and
pop
out
jbe
mov
add
add
or
fildll
out
repz
jl
jae
dec
add
insb
pop
add
inc
or
int
or
loop
leave
daa
dec
xchg
dec
sub
jg
int3
mov
mov
pop
and
push
add
pop
dec
lahf
stos
mov
mov
cmpl
test
mov
jae
out
ret
mov
aad
xchg
lret
stc
xchg
mov
outsb
cmp
out
loopw
mov
lods
cld
dec
neg
mul
inc
adc
push
loope
repnz
push
and
mov
mov
neg
loop
xchg
outsb
mov
jle
cli
aam
xchg
jl
jne
clc
movsl
mov
or
rolb
mov
rolb
push
xlat
notb
ror
jb
stos
in
es
loopne
pop
ja
push
scas
pop
inc
sbb
fsubl
sbb
lret
out
lods
mov
pop
addb
js
xchg
loopne
sarl
xchg
test
rclb
mov
loopne
sub
or
jns
jmp
add
jbe
sar
mov
sub
and
fistps
ja
xchg
leave
loopne
xor
aam
xlat
mov
jb
sub
jae
pop
dec
push
mov
push
fldt
icebp
cmp
pop
push
mov
cmpsb
xchg
sti
cmc
jno
stc
ret
sub
push
fld
lea
fistpl
adc
notl
mov
daa
addb
mov
fbstp
aaa
clc
dec
shr
pop
pop
addb
xchg
mov
pop
cmc
push
sub
ljmp
ret
adc
push
pop
cmp
fildll
popa
push
jge
mov
inc
repz
push
or
mov
pushf
jno
dec
dec
incb
stc
or
out
push
adc
mov
das
pop
cli
sub
in
cmc
js
jno
and
aam
mov
pop
shrb
ret
adc
roll
jne
jo
xchg
enter
aas
andl
mov
sub
scas
orb
xchg
jg
mov
jge
mov
lds
add
repz
xchg
cmp
ret
dec
push
pop
lods
push
dec
xlat
ss
loope
jbe
aas
sub
aad
pop
fidivrl
mov
xchg
jbe
xor
mov
jb
xlat
or
xchg
pop
mov
sub
push
into
dec
hlt
pop
gs
mov
xchg
out
push
repnz
rcrb
xor
test
xchg
orl
ret
lahf
div
jno
xchg
imul
jmp
inc
jne
shlb
add
int
inc
sahf
gs
pop
repz
lds
roll
inc
icebp
xchg
jge
sahf
out
pop
pop
imul
pushw
aas
movsl
pop
lock
loope
cli
stos
ss
jb
test
rcrb
es
repnz
push
xchg
mov
sarl
adc
lcall
xchg
jb
scas
mov
push
cmp
mov
int
dec
shrl
xchg
inc
in
mov
cmp
insl
mov
sti
arpl
dec
ret
push
adc
addr16
inc
shrl
dec
sbb
mov
fcmovb
push
xchg
mov
fsubs
and
lret
js
add
or
add
jp
add
jne
mov
or
xchg
lcall
mov
sub
mov
jnp
sbb
mov
adc
sbb
add
push
mov
sub
xchg
out
lahf
xchg
mov
and
mov
imul
dec
push
popl
std
mov
jb
clc
aam
out
lea
sti
aam
xchg
adc
cmp
xchg
lods
pop
or
sub
push
cmp
into
pop
xchg
and
pushf
dec
push
gs
bound
call
inc
sub
mov
out
inc
xchg
xor
sbb
shrl
adc
xor
js
mov
push
test
dec
mov
mov
hlt
les
sti
sub
mov
lods
pop
imul
sbb
stos
sbb
cmpsb
mov
mov
rcrb
stos
adc
jl
push
cmp
bound
xor
pop
sbb
adc
movsb
test
imul
and
pop
cmp
jnp
icebp
in
fdivrs
imul
mov
mov
and
mov
ret
push
lea
jae
xchg
ret
jne
cltd
testl
lea
cmp
cmp
mov
push
mov
outsl
pop
mov
std
call
rcrl
out
dec
or
jg
cmpsl
cmpb
and
xchg
sbb
and
mov
int3
pop
jle
jl
adc
js
adc
pop
push
jno
out
pushf
cmpsb
adc
xchg
mov
pop
outsb
jecxz
sbb
inc
jbe
div
jns
add
jmp
xchg
insb
imull
je
inc
mov
jmp
and
inc
mov
repnz
inc
scas
mov
lret
cld
mov
cmp
xchg
mov
ja
ret
rcrl
bound
jnp
or
xor
and
mov
lods
lret
push
push
adcb
out
sub
cmpl
jbe
pop
leave
fcmovb
jnp
dec
fisttpll
dec
ds
cmovae
xor
mov
les
add
lods
xchg
add
cwtl
pop
mov
in
adc
fisttpll
call
fnsave
inc
xchg
mov
sub
hlt
arpl
int3
fs
jns
push
xchg
push
cmp
iret
mov
mov
adc
sub
dec
std
inc
imul
pop
je
push
mov
inc
push
mov
ret
jmp
inc
mov
lret
push
repnz
sbb
push
mov
xchg
xchg
or
mov
mov
movsb
pop
rcl
insb
xchg
rorb
faddl
loop
mov
xchg
shll
push
fnstenv
mov
sbb
ret
mov
xchg
loopne
sahf
mov
pop
lds
mov
jno
mov
icebp
push
mov
xor
pop
xchg
push
mov
dec
sbb
and
int3
xchg
test
cli
test
mov
mov
or
mov
xor
sub
fwait
aad
movaps
jae
rcll
rdtsc
je
xor
into
or
push
fldcw
xor
aas
xchg
cmp
es
pop
xchg
outsb
and
mov
lahf
cld
pop
mov
stc
imul
mov
shrl
xchg
push
pop
rclb
xor
jge
add
inc
das
insb
mov
xchg
popa
int3
push
jge
sti
sbb
enter
adc
in
push
scas
jp
push
add
insb
pop
add
aas
rcl
xchg
pop
jno
lods
mov
pop
bound
mov
orb
je
xor
test
xchg
dec
jbe
in
mov
outsl
in
mov
lea
jge
enter
out
into
cmc
paddq
dec
sarl
add
daa
pushf
loopne
add
xchg
in
rcr
pop
cmp
cmp
push
pop
cmpsl
loopne
repnz
fwait
dec
pop
inc
call
dec
xchg
daa
scas
mov
int3
imul
sbb
jnp
negb
dec
jl,pn
push
data16
sub
add
mov
push
mov
mov
shrl
inc
and
imul
fidivl
aas
rorl
repnz
mov
out
jge
je
into
dec
aas
int3
jno
data16
scas
or
repz
out
sti
xor
push
jno
xchg
clc
xchg
jecxz
out
pop
fcompl
or
xchg
xor
pop
and
leave
rcrl
jbe,pn
arpl
mov
mov
ret
adc
test
and
div
jnp
mov
in
lock
xchg
mov
dec
cltd
cmp
orl
shl
and
dec
popf
xchg
lds
int
int3
push
push
mov
outsb
jge
push
jp
repz
push
mov
inc
push
push
fmul
es
aas
jge
xlat
gs
imul
imul
mov
and
push
sbb
sti
adc
or
or
mov
adc
shll
adc
pop
rol
cli
push
sbb
repnz
and
ret
dec
xor
jne
sbb
add
fs
out
sub
test
inc
fidivl
ret
shll
xlat
jae
lea
test
repnz
subl
call
fistl
adc
bound
sub
pop
adc
pop
cli
adc
mov
xor
ss
lcall
ret
jl
cs
imul
aam
mov
pop
jmp
and
cmp
rorb
push
xor
mov
fimuls
repz
imul
das
mov
mov
pop
xchg
inc
movb
arpl
sbbb
cmpsb
call
mov
inc
popf
loope
out
cwtl
lods
inc
repz
in
stc
cltd
stc
jge
dec
cmc
sub
mov
imul
adc
addr16
adc
jbe
addr16
mov
sbb
add
lret
loop
dec
aaa
cmp
js
scas
test
and
lahf
sti
xchg
cmp
add
lcall
pop
jns
das
mov
xchg
mov
inc
data16
sahf
clc
outsb
dec
jns
into
lds
push
jg
mov
loopne
jge
cmp
fcompl
bound
outsl
xchg
pop
or
or
fidivrl
ret
jne
aaa
movsl
pop
xor
sbb
mov
mov
xchg
jl
dec
mov
dec
ljmp
mov
pop
test
pop
inc
cwtl
jns
sub
ret
mov
pop
adc
test
pop
mov
push
mov
cmp
cmp
rcr
cmp
jae
dec
mov
cld
add
and
in
es
sahf
xlat
xchg
xor
neg
je
and
or
mov
xor
aam
sub
insl
movsl
lock
sub
xchg
fists
hlt
shlb
faddl
fs
std
add
push
fwait
or
fidivl
cmp
sbb
dec
sub
hlt
push
push
mov
pop
or
mov
or
pop
dec
neg
movsl
adc
cli
mov
stos
mov
mov
mov
jmp
jns
xchg
xchg
jbe
addl
xor
push
gs
pop
pop
or
pop
sbb
sub
jno
inc
push
mov
es
adc
or
mov
push
mov
hlt
cli
cmpsl
dec
gs
xchg
mov
fs
rclb
into
ret
inc
pop
push
sahf
push
or
imul
ret
cmp
repz
mov
incb
jo
in
lcall
pop
mov
lock
in
xchg
rcrb
xchg
dec
xor
pop
sbb
dec
cmp
cmpsb
xchg
mov
ljmp
mov
lcall
scas
scas
es
inc
xor
lods
repnz
xor
ret
ljmp
cmp
adc
loopne
mov
and
inc
mov
aas
clc
fistpll
sti
addb
sbb
test
mov
fbld
ret
xlat
dec
imul
xchg
dec
pop
cli
push
in
xchg
inc
inc
fsub
insl
inc
dec
cli
jns
int3
push
std
cmp
xchg
and
pop
ss
sbb
mov
scas
popl
and
test
cwtl
cld
mov
fbstp
inc
dec
dec
xor
repnz
mov
jo
out
lock
and
inc
jno
sub
bound
cmpsb
insl
stc
es
sub
cmp
test
push
add
and
sbb
and
imul
rorb
push
mov
ljmp
adc
xchg
pop
fidivs
sub
les
loop
pop
mov
loope
xchg
mov
mov
out
sbb
jb
jne
inc
pop
push
push
pop
loopne
pushf
negl
ljmp
ds
loope
mov
xor
arpl
mov
iret
pcmpgtd
mov
sbb
sub
enter
pop
lcall
pop
xchg
mov
push
and
stos
dec
fwait
xor
loope
jns
iret
ljmp
mov
repz
mov
inc
jo
xchg
sbb
mov
lods
push
lock
mov
in
push
sbb
sub
push
aaa
inc
pop
stc
pop
js
xor
mov
inc
jp
lret
les
sahf
dec
fs
lret
xor
sbb
lret
sub
and
push
xor
out
pop
inc
jbe
rorl
pop
arpl
cmpsb
pop
pushf
out
and
or
jmp
pop
xlat
pop
jl
aaa
push
pop
mov
int
adc
xrelease
mov
pop
dec
adc
sbb
aas
test
sub
scas
xchg
pop
out
mov
test
in
xchg
fstl
cmp
cs
pop
fidivs
in
aaa
rcll
test
push
sahf
jl
adc
cmp
xchg
push
dec
in
jge
gs
outsb
rcr
jmp
outsl
rol
cmp
push
add
fistps
adc
mov
mov
cmp
adc
pop
clc
push
popa
icebp
xor
xchg
js
add
inc
fsubs
stos
adc
loope
push
mov
add
lahf
rorl
pushw
and
mov
pop
add
insb
pop
add
fimuls
adc
and
and
adc
jbe
inc
leave
pop
insb
jmp
imul
ljmp
adc
xchg
lea
xchg
punpcklwd
lock
in
xchg
loope
lods
xlat
fdivrl
mov
cmc
cld
xchg
rcr
mov
and
test
cld
sub
div
dec
loope
enter
scas
lcall
or
cmpsl
inc
aad
jns
call
mov
rolb
mov
scas
arpl
out
bndstx
jmp
sbb
mov
orl
cmp
mov
jg
das
lods
movsb
loop
xchg
xchg
popf
ja
clc
xor
into
lcall
rol
xchg
imul
cmp
adc
mov
fldenv
mov
gs
mov
and
scas
sub
out
insb
fistps
xchg
lcall
or
testl
xor
pusha
mov
fnstcw
add
adc
mov
psubusb
idiv
out
xlat
shl
call
fldt
sbb
outsb
aas
pop
xchg
push
out
fs
or
fsts
add
push
mov
insb
aas
sbb
xor
xchg
repz
mov
mov
xor
imull
dec
push
sub
lock
mov
dec
aas
sbb
loope
repnz
outsb
or
testb
cltd
loopne
lods
lock
rorl
call
dec
pop
repnz
pop
enter
push
xchg
test
jle
and
or
xor
push
push
leave
dec
sbb
js
fstps
cmp
adc
push
icebp
or
into
mov
xlat
mov
dec
jae
movsb
mov
aaa
std
sub
call
or
andb
cmp
push
je
lock
dec
or
ror
inc
pop
push
pushf
cmp
pushf
test
add
mov
add
cmp
push
mov
cmpsb
inc
xor
movsb
push
subb
mov
les
hlt
test
xor
das
add
sarb
cs
push
or
pop
lods
ds
mov
mov
adc
call
loopne
call
mov
or
ret
dec
arpl
mov
das
lret
and
jb
gs
jmp
or
dec
cmc
xor
xchg
and
ljmp
fdivrl
lds
xchg
std
jp
test
jno
pminub
push
test
jb
data16
xor
test
fstpl
dec
xor
xchg
sbb
cltd
test
es
sbb
dec
pop
sub
cmp
add
das
lods
inc
jns
scas
jae
or
xchg
xchg
popa
repnz
add
test
mov
and
adc
xor
or
insb
fldcw
lds
int
sbb
xchg
lock
lock
test
repz
fmulp
xor
mov
ret
cld
adc
inc
xchg
les
bound
call
mov
xchg
pop
and
inc
insb
xlat
push
outsb
sbb
daa
sbb
and
or
repnz
mov
and
fs
in
fsts
lcall
adc
adc
sbb
cmpsl
inc
scas
cmp
sbb
repnz
cmp
add
sbb
movsb
push
or
xchg
cmp
gs
lods
xor
or
lea
jmp
sub
aam
mov
subb
sub
pop
push
ret
pushf
add
test
icebp
cmp
test
jne
push
idivl
ret
jmp
and
loopne
push
leave
fadds
loop
sbb
mov
mov
cmp
sbb
jnp
xor
mov
outsl
aas
std
pop
or
hlt
dec
adc
stc
nop
fistl
insb
xchg
push
pop
fadds
adc
sub
sub
scas
inc
pop
and
adc
mov
inc
sti
roll
ficomps
lret
mov
mov
xor
mov
dec
dec
mov
pop
gs
pop
dec
inc
in
outsl
in
sbb
movl
adc
addr16
stc
xchg
and
hlt
clc
scas
fcoms
movsl
in
dec
xor
add
sbb
jmp
and
or
xor
std
loop
xor
mov
lock
mov
jp
jl
sbb
pop
lock
and
arpl
cmp
sti
es
xor
mov
cmp
int
add
pop
fst
xchg
mov
aam
mov
mov
popf
cmp
por
jne
fsubs
aaa
mov
cmp
xor
lods
shll
mov
mov
or
adc
sub
outsb
je
xchg
jg
inc
add
pop
jns
fs
in
mov
mov
dec
add
dec
cmp
fsubp
out
dec
dec
nop
loop
sub
jae
out
dec
xchg
xlat
shrb
sbb
or
movsb
pop
leave
pop
mov
and
push
dec
in
dec
jae
mov
mov
loopne
shr
push
jae
push
push
mov
xor
divl
in
inc
pop
xchg
or
mov
pop
bound
and
aad
sbb
pop
icebp
hlt
mov
mov
ja
xor
ror
xchg
xchg
push
sbb
movsb
test
je
gs
add
loop
dec
nop
std
movb
out
adc
cmp
stc
pop
loope
push
sahf
jae
dec
data16
cwtl
sbb
pusha
imul
jle
sti
mov
stos
push
xchg
cmp
clc
out
pop
adc
cltd
xchg
mov
xlat
outsb
mov
movsl
jae
mov
cmp
mov
cmpsb
ljmp
lcall
arpl
aas
xchg
jecxz
lock
dec
xchg
into
xchg
lret
adc
mov
cltd
mov
cmpsl
inc
in
cmp
mov
mov
ja
and
mov
inc
jge
andb
mov
aad
jo
je
js
bound
jp
or
fld
add
push
dec
fs
cmp
mov
popf
adc
imul
test
cltd
fcompp
mov
js
pop
call
jge
imulb
adc
adc
push
jge
and
cmp
shlb
push
lahf
mov
ss
pop
push
or
sahf
lahf
in
push
sub
mov
sti
mov
inc
lds
jp
test
sub
mov
scas
mov
test
inc
adc
lods
jno
or
sub
scas
subl
and
das
jno
jo
inc
push
std
pushf
out
jge
std
out
lods
add
shll
cmp
add
add
and
jne
out
dec
popf
cmp
test
out
out
push
out
or
sub
std
pop
movb
loop
mov
inc
js
adc
and
sbbb
cmc
mov
test
cmc
scas
xchg
pop
push
stos
movsb
mov
in
adc
insl
in
bound
lret
fadds
fimuls
mov
aaa
cs
inc
inc
pop
mov
lcall
adc
pop
jg
adc
jl
push
pusha
aaa
add
rorb
sub
fldpi
gs
arpl
movsl
sub
sti
daa
out
test
mov
insb
sbb
push
or
push
shlb
inc
pop
mov
and
sbb
ds
jo
enter
negb
test
cwtl
pop
hlt
sbb
addr16
mov
fsubrl
mov
ja
xchg
out
mov
aas
out
and
rol
fwait
outsb
add
mov
outsl
xchg
inc
fidivl
mov
and
xchg
push
stos
mov
call
cmc
inc
adc
add
fs
fisubl
push
pop
in
loopne
lret
fcmovnbe
sbb
hlt
mov
iret
jnp
outsl
push
pushf
xchg
aas
jns
mov
ds
lret
test
inc
xchg
pop
push
sbb
sbb
mov
mov
loop
push
cmp
movsl
mov
clc
addb
xor
or
adc
jnp
mov
fmuls
sbb
mov
rol
add
sbb
out
xchg
mov
adc
jbe
xor
movsb
sub
sbb
fcomps
loope
scas
lret
insl
mov
mov
into
aad
add
lods
mov
std
stc
das
or
jge
in
mov
leave
cmp
lret
xchg
xchg
pop
and
pop
imul
lods
loop
xor
push
test
fimull
inc
rcl
jne
js
lret
jle
mov
dec
and
xchg
test
incl
rorl
loopne
aas
ss
sub
mov
rorl
sbb
cmp
dec
inc
cli
fimuls
or
and
das
fwait
adc
cld
popa
inc
loop
out
push
ret
out
mull
push
push
dec
clc
stos
xchg
movaps
inc
and
xor
das
push
dec
inc
add
mov
xor
ret
pop
nop
lods
outsl
fisubrl
aad
xchg
in
popl
dec
lds
cmp
addr16
jb
inc
jnp
sbb
arpl
jo
or
rcll
and
jae
lods
pop
dec
adc
sub
divl
repnz
xchg
mov
sti
dec
imul
dec
imul
adc
lds
cli
dec
pop
into
lds
push
loope
ss
loop
cmp
scas
mov
mov
xor
ret
into
lcall
inc
aaa
xstore-rng
cmpsl
adc
mov
sbb
lret
pop
rolb
popf
insb
and
mov
xor
xchg
into
out
lea
test
in
lods
js
mov
out
cmpsb
mov
sarb
fwait
push
or
mov
push
xor
int
loopne
pop
dec
and
and
mov
popf
adc
rclb
mov
call
imul
ja
jae
inc
ror
es
pop
or
add
loope
je
cmp
xchg
xorb
xchg
lds
in
mov
icebp
xchg
sbb
cli
inc
cmp
push
mov
cltd
cmp
notb
mov
jg
mov
daa
lea
jmp
shll
mov
icebp
out
fwait
xchg
inc
pop
shlb
mov
or
and
jp
and
inc
sub
or
ja
adc
enter
jl
fwait
mov
jl
and
sub
sbb
push
adc
xorb
dec
cltd
and
aad
push
loop
add
sbb
sti
and
test
pop
jge
frstor
xor
shl
in
adc
jle
or
mov
or
cltd
fwait
jge
idiv
sub
inc
gs
cmpl
fiaddl
movsl
sbb
mov
out
xchg
test
jb
arpl
push
cmpsb
xchg
mov
shll
lea
sbb
push
test
cli
mov
xchg
and
cmpsl
popa
clc
loop
push
out
xlat
test
sub
xchg
faddl
lcall
jo
fcmove
leave
out
into
inc
stc
sbb
jne
jnp
mov
js
adc
fucomp
add
inc
in
cli
lock
inc
loopne
cltd
lods
add
jne
mov
adc
inc
sub
sti
fs
mov
jno
mov
repz
pop
push
push
imul
mov
mov
sub
or
jns
adc
jns
call
adc
sbb
adc
mov
xchg
sub
ret
or
pop
clc
fwait
or
pop
mov
clc
out
loope
outsb
lods
and
mov
dec
stos
int3
scas
jbe
arpl
stc
pop
rol
aaa
insb
jbe
outsl
inc
test
ds
and
pop
or
push
int3
ficoms
subb
iret
xor
movsb
mov
add
xchg
add
inc
push
int3
data16
out
and
cmp
negb
adc
inc
fistl
pop
int
mov
lret
ds
add
inc
sbb
ljmp
stos
mov
push
sbb
ja,pn
sub
and
sbb
pop
lret
sbb
fadd
adc
add
jg
movsb
and
mov
xchg
lods
test
add
out
jb
mov
call
mov
fildl
push
outsl
add
mov
mov
sahf
sub
test
push
push
stc
rolb
cld
inc
jb
mov
dec
xor
jmp
cmc
jae
fdivrl
inc
pop
mov
sbb
dec
mov
lahf
mov
imul
sarl
imul
sub
ret
pop
inc
pushf
sbb
lcall
pop
out
hlt
cmc
jg
xor
cltd
inc
enter
mov
cmp
jne
sbb
inc
negl
dec
mov
mov
pop
mov
jb
or
das
pop
mov
imul
leave
outsl
fucomp
mov
loop
nop
scas
mov
insl
cmpsl
jnp
add
add
outsl
push
loop
pop
sub
cltd
repnz
fcoml
enter
add
or
test
mov
stos
sbb
inc
test
push
sub
push
sbb
cltd
mov
or
cs
push
inc
dec
popa
xor
out
jecxz
repnz
add
pop
in
fnstsw
or
lahf
fs
cltd
insl
add
insb
pop
add
aas
pusha
dec
dec
imul
xor
inc
pop
lea
pop
and
out
sahf
xor
sub
sub
call
xchg
adc
gs
pop
sub
dec
movsb
lret
and
in
dec
ds
test
ljmp
jmp
les
addr16
call
mov
pop
cltd
inc
sub
and
mov
jge
sbb
stos
push
aam
jmp
sbb
add
std
jns
cwtl
sbb
jae
sbb
bound
pop
inc
fwait
and
sub
push
adc
sbb
mov
jmp
mov
pop
lcall
or
mov
repnz
lahf
lods
jae
insl
jnp
xchg
xor
jge
add
mov
scas
xor
sub
movsb
bound
scas
mov
stc
adc
scas
cmpsb
dec
std
pop
dec
lahf
pop
imul
leave
into
call
jnp
mov
pop
push
and
and
ja
rolb
mov
mov
imul
mov
cmp
cmpsb
sub
cmp
push
movsl
outsb
aam
pop
xchg
mov
scas
mov
aad
out
and
adc
fstp
aas
lahf
ds
outsl
icebp
stos
or
stos
mov
aaa
and
mov
inc
imul
cmp
inc
xchg
aaa
out
cli
cld
into
pop
mov
scas
js
out
xchg
jecxz
mov
mov
or
xchg
or
into
push
adc
push
pop
outsb
add
jbe
out
jns
std
lahf
iret
and
rcl
iret
inc
ja
in
icebp
and
sub
mov
out
inc
std
rcrb
xor
pop
xor
cld
mov
add
mov
mov
push
fdivr
ss
pop
rol
pop
push
scas
jge
call
xchg
rcrb
add
gs
scas
leave
dec
hlt
les
xor
nop
lods
xor
xor
or
pusha
aaa
jmp
inc
mov
xlat
pop
sub
sbb
insl
cmp
pop
or
cwtl
push
bound
enter
jmp
mov
jg
pop
xlat
dec
mov
jbe
push
sarl
notb
adc
add
cwtl
mov
push
sbb
ss
pusha
aad
enter
pushf
stc
xchg
push
adcb
pop
mov
and
insl
out
pushf
sbb
xchg
int
sbb
cwtl
mov
lcall
mov
leave
add
and
repz
xor
sbb
sub
fiaddl
pop
push
mov
sub
ja
inc
cli
fsubl
inc
jmp
outsb
notb
mov
fistpl
adc
cmp
or
inc
jle
add
inc
es
jno
jns
push
dec
sbb
repz
rcll
scas
stc
add
cmp
pop
xor
cmp
mov
jbe
jne
jle
ja
lret
aaa
std
hlt
adc
jecxz
je
sahf
push
jecxz
imul
int
mov
mov
mov
jno
jecxz
jle
and
insl
xchg
push
push
push
sub
cltd
ja
lock
add
push
pop
ret
inc
lods
scas
mov
or
xor
mov
xchg
push
jbe
divb
mov
loopne
sbb
out
jg
cmp
pop
in
out
jae
ja,pn
loop
dec
enter
xchg
cmp
jnp
add
inc
pop
fistpll
adc
fbld
cmc
mov
cmp
arpl
cld
xor
jp
mov
enter
or
stos
insb
nop
call
xchg
or
inc
test
mov
mov
popf
mov
fnstenv
bound
jnp
add
movsb
negl
jno
jle
out
mov
push
int3
jnp
mov
rol
addr16
pop
scas
test
in
jae
test
int
cmp
hlt
pop
sahf
adc
inc
cmpsl
push
pop
test
das
addl
inc
arpl
xlat
ljmp
sahf
sub
jo
in
insb
mov
mov
std
sbb
push
aas
imul
push
fs
call
push
fists
dec
in
lea
fmull
hlt
mov
loopne
in
arpl
push
lock
inc
mov
and
adc
cli
jl
sbb
dec
stos
pop
rol
lds
adc
int3
sbb
pop
data16
inc
inc
push
sub
pop
and
enter
cmp
movsl
repnz
dec
xor
ficompl
mov
or
jmp
add
jg
js
ja
stos
aaa
or
inc
sarl
insl
mov
xchg
inc
push
dec
add
cld
jbe
xchg
iret
xor
cmc
mov
add
punpcklbw
test
or
dec
inc
dec
fildll
imul
adc
mov
mov
cmp
and
int3
hlt
lcall
inc
addl
andl
clc
xchg
inc
pop
movsl
notb
cltd
push
ljmp
cli
jne
mov
imul
leave
mov
jae
sub
cmp
mov
xor
add
fldt
es
dec
jne
nop
mov
and
lods
pop
fcmovu
cld
mov
xchg
mov
or
mov
cli
push
pusha
jecxz
loope
push
push
int3
fwait
pop
stos
inc
push
stos
pop
and
aad
hlt
xor
adc
push
call
mov
jo
dec
pop
xlat
das
cli
pop
test
add
loope
pop
sar
or
inc
xchg
hlt
mov
int
out
stos
pop
push
mov
es
lcall
lods
mov
lcall
cmp
leave
stc
jbe
cmpsl
test
mov
xor
adc
adcl
enter
mov
dec
cmp
or
sub
sub
push
xchg
push
mov
xchg
sbb
xchg
pop
cmp
nop
sti
psubq
ds
push
mov
pushf
xor
aam
iret
pop
pop
rclb
sti
cmovns
push
repz
into
mov
call
dec
aas
sub
mov
jg
lret
push
insb
add
xor
xchg
xchg
les
sub
jg
ret
rorb
stc
mov
sbb
sbb
cmp
adc
jmp
jl
out
cs
pop
test
iret
mov
imul
ja
mov
stos
mov
push
mov
dec
push
mov
gs
mov
pop
push
fmuls
inc
aad
pop
lock
out
xchg
fwait
adcb
push
shrl
ljmp
dec
inc
xchg
loopne
add
push
cli
jns
imul
add
add
ss
sbb
loopew,pt
dec
inc
outsb
jecxz
push
add
pop
add
nop
mov
fidivl
or
xchg
stc
mov
out
and
sub
adc
inc
sub
pop
sbb
push
mov
inc
imul
xor
jge
pop
lcall
test
mov
les
xchg
dec
imul
jne
mov
pop
mov
mov
push
push
mov
ds
adc
add
jns
addr16
pop
sbb
ljmp
sarl
dec
dec
out
cmc
sub
xchg
mov
jb
mov
dec
dec
sub
insb
ret
pop
mov
xchg
sbb
insb
ret
data16
cmpsl
lahf
notl
rorl
add
into
adc
xor
call
pushf
cmp
adc
ljmp
enter
jne
xor
xchg
inc
mov
xor
jmp
std
push
ss
mov
and
test
cmpsl
fucom
sub
mov
dec
cmc
in
xor
xchg
mov
mov
push
rcrl
aas
and
mov
loop
inc
pop
fildl
loop
lret
lea
cli
xchg
lods
in
pop
and
add
jge
filds
mov
or
popa
lcall
or
mov
push
xor
in
je
dec
mov
fs
push
mov
leave
iret
adc
int
cmpsl
out
pop
adc
sbb
xchg
into
dec
cmp
lds
push
pop
icebp
push
or
push
and
stos
nop
xchg
pop
add
call
rcrb
fdivrp
repz
xchg
movsb
xchg
jecxz
and
push
and
jmp
pop
jns
mov
mov
lea
dec
out
jbe
xchg
push
jae
test
dec
hlt
xor
or
jle
mov
mov
fst
mov
sti
push
xchg
xchg
cmpl
jnp
fwait
outsl
cmpsl
mov
dec
mov
add
movsb
mov
mov
mov
jbe
mov
testb
out
lods
jno
mov
lcall
dec
popa
in
xor
loop
data16
sub
jbe
add
add
jno
cmp
addr16
je
sbb
mov
mov
fstpt
mov
cwtl
scas
fdivl
pmulhw
lret
ss
pusha
inc
test
out
aam
pop
xchg
push
add
jnp
cmp
lock
mov
xor
cwtl
clc
mov
lods
sub
xchg
loopne
sub
mov
cmpsb
cmp
test
dec
outsl
lret
jge
movsbl
popa
adc
mov
je
mov
cmc
adc
ret
mov
lcall
ds
fisttps
or
js
pop
stc
ljmp
fs
mov
xchg
dec
jne
out
imul
das
jp
je
dec
cmp
leave
push
inc
add
pop
subl
lods
mov
in
mov
cmp
sub
adc
jnp
inc
add
push
shlb
add
mov
callw
imull
jge
dec
ret
hlt
popl
mov
cmp
mov
xor
daa
pop
out
aam
inc
pop
jbe
pop
sub
shr
mov
mov
dec
sub
int3
mov
pop
xchg
mov
sbb
sbb
mov
jbe
aaa
mov
hlt
cmp
stc
div
movsb
cmp
fwait
lret
add
add
and
das
sub
xlat
vpmulhuw
and
int3
cld
inc
cmp
xor
mov
sbb
xor
mov
add
cmp
js
adc
or
in
push
aaa
mov
ljmp
push
and
pop
imul
dec
inc
rol
int
loope
pop
test
mov
xlat
arpl
inc
push
cmc
idivb
sahf
sbb
lret
and
mov
and
pop
movsb
fldl
push
pushf
pop
push
test
sub
in
sti
dec
daa
sub
dec
out
add
dec
out
sub
push
or
xchg
in
dec
push
int
gs
test
jb
pop
jl
mov
and
xchg
mov
aad
fists
loope
xor
std
icebp
std
lret
ret
out
fists
dec
insb
mov
in
xchg
and
pmulhuw
jge
jg
and
lock
mov
inc
loopne
enter
xchg
test
into
and
lret
cmp
inc
mov
xor
pminub
jb
add
sub
out
add
repz
outsl
leave
ret
cmpsb
test
and
push
add
sub
faddp
adc
std
pusha
ficompl
jg
arpl
mov
in
mov
adc
inc
icebp
push
sbb
sti
xchg
cmp
imul
push
fcmovnb
sbb
mov
jle
xchg
in
mov
push
mov
repnz
mov
shrl
dec
addr16
hlt
addl
mov
jo
sbb
aam
ret
mov
sbb
dec
or
dec
sub
sar
cmp
and
stos
lret
cmp
repz
xchg
call
in
pop
ljmp
and
push
pop
iret
mov
jmp
fmuls
sub
xchg
test
mov
cmp
fnstcw
or
int
mov
mov
adc
xlat
jns
adc
or
jg
jns
cmc
push
dec
imul
popa
adc
push
pop
fidivrs
pop
xchg
repz
movsl
mov
in
cmc
mov
jnp
in
cwtl
fstpl
pop
rorl
jns
xor
or
dec
xor
popf
mov
aam
add
fs
push
mov
stc
sbb
ljmp
sbb
out
sbb
inc
mov
add
test
xchg
cmpsb
sub
sbb
mov
out
mov
out
xor
dec
sbb
sbb
mov
stc
cmp
shl
xchg
scas
lret
xor
adc
arpl
bound
xor
pop
in
xorl
xchg
je
ret
nop
outsb
fs
mov
xchg
push
dec
and
dec
jmp
bound
pusha
fs
je
pop
push
mov
adc
xor
jno
sti
sbb
xchg
add
jle
pushf
push
test
sub
jno
lods
fimull
or
push
gs
and
das
sub
xor
es
pop
pushf
fwait
ja
pop
dec
pop
pop
in
das
fs
lods
fs
push
push
cmp
adc
pop
mov
loop
ret
push
sbb
mov
flds
dec
or
add
xor
shll
scas
cli
out
or
add
insb
pop
add
test
enter
fdivrl
fld
hlt
mov
and
mov
or
dec
adc
or
or
jno
jecxz
dec
fs
ljmp
sar
fiaddl
cld
addr16
lahf
mov
filds
int3
xor
add
mov
push
notb
sti
sarl
or
push
or
jne
shrb
inc
or
mov
jo
cs
fs
cmp
dec
popf
shlb
xchg
dec
cwtl
leave
dec
or
and
mov
mov
les
push
imul
sub
jmp
cmp
lods
jnp
jle
and
cmp
add
add
and
ljmp
xlat
in
pop
xor
insb
stc
bound
fs
mov
das
xchg
pop
test
scas
push
xor
shll
xor
cmp
xor
ljmp
mov
xchg
mov
std
add
bnd
mov
daa
and
sub
cmpsb
xchg
pop
mov
jge
pop
das
xor
xrelease
push
ret
out
mull
in
cmp
cmpsb
imul
mov
mov
shrl
xor
stc
cmp
mov
add
mov
aad
add
ja
mov
inc
lock
fwait
push
pop
add
mov
add
xor
xchg
xchg
jae
cmpsl
sub
call
lret
in
pusha
mov
cmp
dec
dec
fstl
andb
lods
lret
jo
mov
std
cwtl
push
in
mov
mov
arpl
test
cmp
mov
push
pop
sbb
popf
sbb
cmp
adc
pop
clc
mov
cmp
pop
mov
loop
mov
imul
cs
mov
in
ret
adc
loope
test
push
ret
mov
les
push
scas
push
test
push
sbb
inc
stos
sbb
sti
jne
dec
mov
cmc
daa
in
lock
inc
jbe
lods
imull
jl
cmp
sub
fwait
outsb
lds
and
inc
sbb
out
jb
mov
sub
xor
sahf
addl
sub
mov
mov
aas
pushf
loop
incl
xchg
mov
imul
cmp
test
sbb
jne
and
inc
mov
jl
lods
movsl
decl
push
lock
inc
xchg
sbb
fwait
or
add
or
or
sti
cmp
xor
pop
js
mov
fisubs
mov
data16
inc
cmpsl
pop
mov
test
out
mov
xchg
adc
and
lret
sub
test
xchg
cwtl
xlat
push
mov
loopne
push
adc
pop
scas
mov
xor
testl
out
arpl
jmp
cltd
dec
test
sub
lods
stc
push
pop
int
scas
js
subb
jnp
pushf
xchg
jno
add
les
jge
xorb
call
or
xor
pop
aas
mov
xchg
mov
out
adc
inc
data16
and
pop
daa
subb
rcll
in
lods
pop
jne
lret
dec
fcoml
shrb
jle
pop
div
rol
inc
cmp
mov
jp
mov
and
dec
loope
fs
loop
mov
pop
mov
jo
repz
dec
adc
cli
into
add
pushf
out
cltd
andl
and
imul
mov
push
fisubs
xor
pop
jle
hlt
mov
es
das
pop
bound
xchg
mov
ja
sub
jo
shrl
push
cmp
out
rol
xor
mov
xchg
and
and
adc
mov
fldcw
mov
mov
add
scas
mov
dec
call
jl
outsl
in
rol
divl
jmp
fcmovnb
fdivrs
xchg
aas
push
mov
pop
sarl
mov
cmpsb
sbb
adc
hlt
jg
ja
push
pop
gs
pusha
call
cmp
inc
xor
mov
mov
cmp
jno
ds
shrb
sbb
call
adc
outsl
cmc
xchg
inc
cmpsl
fsubl
lock
pop
jne
push
ss
int3
je
and
loope
and
mov
adc
pop
shlb
dec
cmp
mov
pop
or
push
inc
mov
test
pop
testb
cmp
or
add
inc
dec
psllw
loope
icebp
mov
xchg
adc
cmp
adc
jns
movsb
mov
fwait
sub
mov
scas
or
mov
ds
push
popf
cld
mov
pop
icebp
mov
outsl
call
mov
daa
ds
lea
lods
daa
stc
sahf
cmp
js
pop
addb
enter
cmp
and
push
add
and
mov
push
in
ljmp
popf
rcrb
gs
jb
into
push
mov
mov
ljmp
jg
mov
add
or
sub
pop
push
mov
fadds
arpl
mov
popa
clc
mov
and
push
sbb
cmp
dec
xchg
mov
jnp
loope
aam
mov
push
cld
mov
cmp
test
scas
in
aam
adc
jp
inc
sub
ja
jno
pop
cwtl
push
in
mov
mov
jp
and
fstps
mov
add
jnp
movsb
fwait
xchg
inc
cmc
xchg
cmpsb
and
add
xlat
cmp
sti
pop
sbb
imul
sti
push
fs
mov
jae
sahf
js
mov
add
mov
mov
outsl
out
addr16
lods
pushf
mov
addr16
jb
iret
shr
lea
mov
arpl
adc
jle
adc
imul
or
cmpl
jecxz
jns
lods
sbb
jl
sbb
cmp
jae
pop
into
mov
and
xor
pop
mov
inc
push
adcl
fildll
pop
ja
fistps
dec
andb
push
int
shlb
repz
xor
push
mov
xchg
and
xchg
fisubl
sub
push
or
idivl
or
leave
lcall
lret
or
push
xor
xchg
fldenv
xchg
pop
sub
mov
jnp
jnp
fldt
add
mov
and
pop
jne
xor
xor
cmp
xor
and
mov
and
dec
adc
js
shlb
mov
fldl
add
ljmp
push
or
in
push
cmp
mov
fdivl
iret
les
sub
inc
inc
iret
cmc
aam
lea
mov
aad
or
pusha
test
cs
loopne
adc
stos
subl
jmp
test
lea
push
aad
push
lahf
and
pop
xchg
stos
push
sub
pop
imulb
ljmp
test
sti
cmp
sub
xor
push
jg
inc
cmp
lds
ror
pop
and
lock
test
ss
push
or
divb
push
in
xlat
or
jnp
jmp
out
scas
push
sbb
subl
shll
sar
mov
push
or
stos
xorb
andb
rorb
mov
idivl
jmp
inc
inc
call
ds
test
das
push
out
in
mov
test
ret
dec
xchg
dec
cmpsl
jb
in
aad
cmp
mov
ficoms
mov
imul
cmp
jecxz
repnz
xchg
frstor
popa
adc
mov
imul
mov
fdivl
and
daa
shlb
add
inc
push
cli
pop
ficoms
mov
fs
jns
jns
cli
xchg
add
mov
and
cmp
pop
aam
cld
lret
jnp
add
faddl
cmp
aas
notl
xchg
xchg
push
psadbw
in
js
push
cltd
push
xor
cmp
lds
lds
push
jecxz
inc
sbb
xor
adc
bound
fucom
js
pushf
sahf
mov
mov
inc
mov
lret
add
jp
je
outsl
sbb
test
js
aam
fwait
movsb
leave
in
nop
fs
cwtl
fs
mov
mov
ret
pop
mov
insl
pop
push
lods
xor
mov
outsl
pop
icebp
ds
cmp
pop
scas
mov
inc
pop
sub
fnstcw
fstpl
push
jg,pn
xchg
and
bnd
pop
out
cltd
clc
mov
imulb
add
aam
or
dec
add
mov
push
fldcw
xor
add
mov
fiadds
xor
sarb
xor
xlat
cmp
adc
push
xchg
mov
mov
jmp
sub
hlt
cmpsl
cs
test
sub
inc
xlat
fistpl
mov
xchg
out
das
and
jb
mov
imul
icebp
popf
adc
enter
ss
aam
cmp
in
popf
mov
in
pop
xor
adc
out
nop
inc
cwtl
mov
out
lcall
sbb
repnz
sbb
xor
jo
inc
ret
sub
cmp
jmp
mov
xchg
sbbb
xor
push
lods
rcr
iret
sahf
adc
rol
or
sbb
push
lret
mov
lahf
mov
mov
test
dec
adc
inc
cmp
shlb
and
cld
mov
cmp
ds
outsb
fadd
sbb
or
or
scas
cmp
repz
repnz
int
mov
mov
lahf
out
adc
out
outsb
shlb
mov
push
movsb
mov
sti
lret
jae
jnp
into
and
ljmp
pusha
lods
cltd
addr16
vphaddubw
push
cli
mov
call
lret
cld
cmp
fidivl
or
rcrl
sbb
fnstenv
and
std
xchg
and
cmpsl
inc
in
lods
pop
xchg
mov
adc
test
pop
enter
cmp
mov
das
dec
int3
shlb
jg
pop
stos
xchg
rcrl
push
lea
lret
adc
aaa
scas
push
adc
into
jp
mov
neg
pusha
pop
sbb
in
mov
sbb
leave
sub
shr
rcll
or
sub
xor
bound
jo
dec
mov
mov
nop
es
jmp
mov
cmc
jge
xchg
lods
shll
xchg
add
sbb
stc
rcll
sub
and
xchg
movsl
jo
inc
aad
pusha
jno
xor
lea
mov
add
and
rcrl
out
add
les
pop
mul
xlat
in
push
mov
mov
rep
orl
pop
add
xchg
inc
and
jns
or
hlt
stos
xor
cmpsl
aaa
sbb
or
mov
mov
add
add
jmp
mov
jle
xchg
imul
push
addr16
xor
push
sbb
cwtl
cltd
fistps
sbb
cmp
aad
aam
pop
mov
out
ss
adc
cmc
iret
mov
and
not
sarl
fsubr
test
mov
int
imul
es
xchg
xchg
pop
adc
lods
add
or
jmp
jecxz
sub
pop
in
mov
cld
inc
arpl
dec
lret
or
jge
inc
xor
int
outsw
pop
mov
sbb
jp
xor
enter
ss
mov
aaa
mov
or
add
lds
dec
dec
pushf
and
lcall
jnp
fs
cmp
inc
fcoms
cmp
adc
scas
ret
mov
daa
pop
loopne
fs
in
mov
or
mov
and
cli
stos
and
jno
jbe
mov
pop
sbb
enter
out
lret
push
pop
test
out
jo
mov
movsb
popa
xor
and
popf
cmp
xor
lret
insl
xchg
pop
mov
inc
mov
mov
sbb
arpl
dec
aaa
notb
push
cmp
cmp
ja
shrb
mov
dec
pop
jbe
aam
aaa
adc
xor
jnp
div
fucomp
lea
push
jnp
mov
and
cmpsl
stos
inc
mov
arpl
mov
fsubs
iret
mov
mov
fs
pop
cltd
jecxz
pop
push
pop
arpl
outsl
xor
jp
lret
fsts
ja
or
xchg
mov
aas
scas
sub
scas
xchg
push
out
inc
cwtl
cmpsl
insb
fcom
test
jecxz
inc
adc
je
add
pop
call
jne
daa
mov
adc
imul
xchg
pop
popf
push
adc
shrl
inc
ss
push
fs
or
int3
loope
cmc
sbb
clc
js
inc
push
xlat
lahf
sbb
or
push
js
push
out
dec
xchg
xchg
mov
lret
jno
out
daa
jno
clc
mov
imul
ljmp
and
mov
int3
repnz
into
imull
pusha
rorb
add
insb
pop
add
addr16
dec
sub
iret
test
fisubrl
inc
xchg
jns
jmp
imul
ret
adc
mov
pop
adc
lahf
sbb
nop
jae
imul
out
rcl
adc
gs
adc
imul
push
jne
adc
dec
test
lea
pop
sbb
inc
das
or
mov
push
push
fistps
mov
out
loop
roll
fildl
jae
scas
xchg
xor
fmull
pop
dec
cmp
leave
xorb
out
jp
mov
dec
mov
adc
cltd
divl
js
call
insb
mov
jle
cmp
xchg
shll
hlt
cmp
cli
sub
int3
or
xchg
mov
sbb
adc
jbe
mov
or
xor
jnp
add
push
movsb
lret
testl
jp
mov
pop
push
outsl
or
out
inc
add
mov
mov
xor
mov
out
jno
pop
sar
mov
and
insl
pop
adc
mul
stc
mov
cmpsb
cmp
sub
fldenv
test
imul
dec
int
xor
and
jnp
add
jle
dec
mov
aam
imul
push
push
mov
frstor
dec
mov
int3
pop
sbb
jbe
mov
adc
jl
dec
loopne
inc
cmp
nop
sub
mov
popf
adc
inc
cmpsl
push
mov
push
pushf
push
ss
jmp
adc
sbb
xor
mov
or
in
xchg
sub
mov
imul
das
call
and
mov
add
sti
fmul
mov
cmpsl
imul
add
dec
ret
rcr
ds
and
jge
insb
lds
push
xor
lods
mov
pop
lret
mov
mov
xchg
int
push
lcall
data16
jmp
lods
lret
outsb
mov
adc
xor
loope
loope
in
jae
cmp
jge
xor
cmpsb
mov
std
add
aaa
pop
jmp
rol
test
lret
mov
push
sub
les
pop
sub
mov
mov
or
imull
clc
cmc
mov
scas
or
fcompl
sbb
aam
sub
cmp
mov
adc
cld
loopne
lret
pop
fcompl
jmp
or
xchg
aaa
out
arpl
cwtl
nop
pop
repnz
je
das
push
cmp
jnp
jl
or
lret
cmp
jmp
in
add
scas
adc
jnp
nop
push
out
xor
xchg
add
pushf
push
sbb
xlat
push
jge
scas
in
or
sahf
jbe
push
int
or
mov
sahf
mov
mov
fimull
pop
daa
ds
gs
arpl
int3
push
ja
arpl
stos
adc
mov
cmc
mov
aas
lret
aaa
jne
lret
add
and
in
cwtl
jno
pop
int3
test
out
sti
mov
sbb
andl
lret
push
add
xor
and
fcmovnbe
cmovb
aaa
pop
mov
dec
pop
aaa
add
repz
push
ljmp
leave
ret
pop
aad
inc
mov
imul
bnd
or
dec
loopne
lds
pop
xor
push
fiadds
je
es
push
sbb
push
clc
mov
mov
inc
cltd
xchg
lods
pushf
mov
xchg
mov
inc
pop
push
in
push
int3
out
mov
dec
lea
mov
gs
in
mov
jo
movsl
testb
or
sbb
loopne
xchg
jnp
lcall
xor
daa
sub
add
enter
mov
mov
or
mov
idivb
cld
add
pusha
das
cmc
outsb
adc
fldenv
cmpb
test
jle
jge
sbb
push
sbb
jns
outsb
leave
pop
push
mov
pop
jnp
adc
stc
lahf
in
pop
xor
inc
lret
add
sbb
push
add
mov
jb
xor
cs
cmp
jecxz
cmp
add
mov
xor
arpl
and
mov
pop
nop
xchg
inc
or
jno
dec
jne
jns
inc
mov
inc
fsubs
mov
js
push
dec
mov
push
push
les
cs
jg
aad
pop
push
xchg
fcmovbe
jl
movsl
mov
pop
insl
mov
loop
adc
mov
adc
les
xchg
xchg
dec
sbb
inc
sbb
xchg
xor
sbb
sbb
fcoms
mov
mov
pop
adc
push
dec
dec
jmp
sbb
adc
or
ficoml
lods
xchg
jnp
clc
lods
in
scas
sub
cmp
pop
lock
outsb
xor
xchg
jmp
add
xchg
pop
outsb
mov
addr16
test
sbb
fstps
fsubrl
out
cmp
cmp
dec
nop
push
imul
mov
push
imul
push
sbb
inc
xor
push
gs
cli
adc
push
test
arpl
insl
lcall
loope
outsb
int
jp
xor
mov
or
rcl
cmp
mov
and
les
inc
add
adc
xchg
jp
pop
lahf
inc
and
mov
test
fildl
mov
or
in
sbb
sbb
in
cmpsb
aam
popa
daa
pusha
inc
xor
in
fs
pop
ret
sbb
mov
mov
mov
aaa
xor
lds
mov
fadds
mov
aas
outsb
cltd
mov
adc
adc
sbb
out
dec
or
outsb
cmpsb
fcompl
jnp
test
movsb
sarb
sahf
mov
mov
test
shlb
sahf
pusha
testb
mov
mov
rol
test
push
pop
pop
adc
add
std
jnp
icebp
xchg
stos
sub
shrl
subb
orb
fsubl
gs
mov
push
test
mov
adc
and
xlat
fldenv
inc
pop
stc
inc
jne
sub
push
sub
iret
xchg
aam
leave
push
sarl
mov
outsl
xchg
addr16
adc
arpl
push
test
xor
add
add
add
pop
je
rol
and
mov
insb
pop
add
pop
mov
lret
ret
sbb
shrl
xlat
aaa
fildl
cmc
aam
push
popa
lret
or
enter
mov
lret
icebp
xchg
push
pop
mov
aam
out
sub
mov
xor
xlat
bound
sti
loop
out
rcll
mov
sbb
xchg
ja
ss
sub
rclb
or
sti
ja
add
xchg
dec
cltd
dec
sub
enter
or
mov
xchg
inc
jbe
push
shlb
aaa
jmp
add
lods
pop
sahf
cmp
in
mov
mov
aam
fwait
xchg
pusha
adc
inc
mov
out
xchg
or
mov
push
stc
movsb
jmp
pop
add
ds
sbb
out
mov
sub
xchg
sub
push
fdivr
xor
sbbl
mov
push
fistpll
repnz
lahf
popf
insb
sbb
pop
mov
ja
or
dec
push
mov
jmp
out
adc
fbstp
mov
push
lock
dec
out
mov
jae
inc
aam
jge
sets
js
jl
mul
js
orl
add
pusha
jo
lahf
xor
test
push
sub
jns
scas
jmp
lea
in
mov
out
lock
mov
mov
out
daa
or
cmpl
or
push
push
icebp
cmp
stos
mov
mov
mov
lock
pop
leave
xor
bound
push
and
jnp
xchg
mov
mov
lret
adc
pop
and
loopne
out
push
sar
adc
xor
xchg
mov
enter
es
negl
imul
clc
or
test
scas
scas
pop
ret
push
dec
xchg
fldpi
sub
push
xchg
hlt
xor
lods
pop
mov
lds
mov
pushf
popf
out
enter
mov
push
cmpsb
bound
mov
pop
int
scas
sub
movsb
loop
repnz
push
js
mov
adc
mov
or
mov
dec
daa
out
movsl
add
cmc
sbb
jl
data16
add
lods
hlt
mov
inc
push
lahf
repnz
mov
mov
xchg
lea
xchg
insb
xor
jne
icebp
sub
mov
push
std
pop
jae
push
insl
es
or
inc
mov
jb
mov
and
ss
mov
fdiv
push
inc
pop
add
inc
and
push
sub
and
shrb
sti
outsb
xor
mov
imul
sub
es
test
mov
scas
pop
push
outsb
jg
inc
orb
outsb
ja
adc
add
xchg
addr16
outsl
dec
jne
xor
dec
pop
cs
lea
xchg
xchg
into
jp
and
jo
je
in
mov
sarl
or
filds
lds
jb
pop
mov
sbb
add
icebp
push
shl
cltd
sub
cld
jbe
jno
sbb
inc
fsubrp
dec
add
daa
lcall
lea
add
popf
mov
fs
mov
mov
insb
lret
nop
dec
mov
loopne
mov
cmp
int3
sub
pop
aad
ja
add
aad
mov
xchg
ja
xlat
pushf
movsb
popf
addr16
sub
and
es
jnp
cmp
insl
dec
loope
test
inc
inc
sbb
aad
pop
xchg
ljmp
loop
ja
and
int
adc
mov
push
inc
jle
xorb
pop
fadds
iret
ret
lock
into
jbe
add
mov
ffree
pop
call
sbb
push
insl
cli
pop
jo
fcoml
das
cmc
mov
aaa
ljmp
cmpsb
mov
pop
out
imul
sahf
jmp
mov
popl
jnp
jp
scas
xchg
fdivr
fbld
bswap
mov
inc
rorl
loop
rorl
push
or
jp
mov
stc
jno
xor
jb
sub
pop
mov
call
adc
jo
jns
popf
xor
test
jge
lcall
js
inc
mov
insl
jg
mov
lret
pop
cmpsl
out
pusha
data16
call
pop
jns
pop
test
fadds
dec
mov
out
inc
popa
xor
adc
in
mov
into
push
mov
out
sbb
inc
roll
clc
mov
cmp
aas
fucom
xchg
push
das
rcr
test
mov
cs
rol
fsubs
push
aad
and
mov
pop
pop
jg
xor
sarl
sahf
dec
add
dec
mov
fcoml
cmpsl
ss
pop
jmp
mov
sub
fistpl
out
negb
mov
dec
push
xor
mov
mov
rcl
in
fwait
pop
aam
jne
or
or
jl
xchg
aas
mov
sbb
push
lea
in
filds
sub
cwtl
test
xchg
les
lea
les
stos
pop
mov
sahf
addb
je
jne
sbb
mov
aad
fwait
lods
cltd
pop
and
push
push
call
enter
mov
ret
dec
ret
mov
int3
pop
test
sub
pop
mov
shrb
push
aad
mov
movsb
outsl
aam
in
ret
adc
sub
dec
mov
iret
loop
int
inc
xchg
inc
sbbl
out
and
movsl
inc
xchg
sbbb
das
popf
cmpsb
jne
fdivrs
pop
push
lahf
jb
scas
mov
mov
ds
fs
es
iret
push
std
cmpl
add
inc
rol
jecxz
int
mov
xorb
sbbl
lods
ret
ret
jbe
das
sub
testb
aad
lods
stos
leave
jl
insb
imul
mov
stos
popf
shll
clc
push
sbb
jg
stos
jb
inc
stc
pop
decb
jp
adc
xchg
mov
xchg
add
inc
ja
and
or
cmp
pop
fidivs
inc
daa
cmp
mov
sub
push
inc
fmull
sar
hlt
icebp
in
in
mov
jl
lea
xor
mov
out
inc
xchg
jmp
dec
pop
fbld
test
inc
mov
inc
or
repnz
dec
mov
mov
popa
in
rorl
aam
or
adc
lret
push
mov
es
movsb
rcr
subl
sbb
jecxz
adc
outsl
bound
cli
mov
push
call
pop
inc
js
jbe
das
mov
mov
push
jl
sub
cmpsb
lods
leave
jnp
data16
jb
das
lret
cmc
pop
mov
adc
fnsave
mov
add
insb
sub
call
add
jmp
jne
pop
ljmp
lcall
repnz
inc
ds
push
pop
repz
xor
cwtl
mov
jbe
ret
dec
sub
mov
movsb
pop
test
inc
mov
int3
inc
xchg
movsl
pop
sti
pop
push
xlat
dec
inc
pop
in
sbb
push
int
sub
into
and
inc
sbb
mov
mov
cmp
rolb
xor
mov
mov
and
mov
jmp
push
mov
and
sub
out
and
stos
cmpsb
jo
or
mov
pop
inc
sub
jae
shrl
aad
sbb
and
dec
or
jnp
aad
loop
test
rcrb
mov
jp
out
mov
fs
repz
sub
scas
cmp
inc
mov
leave
dec
or
lods
ss
or
cmp
enter
sub
mov
sbb
es
mov
lcall
lahf
sbb
into
lea
enter
cli
fdivrl
nop
xchg
cmp
inc
xor
or
repz
hlt
aam
dec
outsb
loopne
xchg
and
or
xchg
in
dec
sbbl
dec
or
adc
mov
push
lret
and
xchg
gs
shll
pop
lcall
sub
test
adc
mov
and
add
sbb
or
sbb
lock
in
pop
sub
adc
addr16
cs
sub
outsb
cld
in
jle
and
sbb
and
sti
push
sbb
add
ljmp
test
dec
pop
mov
pop
mov
lahf
mov
pop
repz
fs
xchg
lcall
xchg
and
sub
ss
sahf
jns
push
xchg
mov
outsl
push
sti
fstpl
xlat
pop
adc
cs
jecxz
js
dec
rorb
enter
decb
rcl
outsl
stos
imul
test
xchg
sarb
outsb
adc
jecxz
fwait
adc
rep
adc
imul
inc
fwait
dec
loopne
xchg
subb
negb
adc
jmp
push
cmp
jmp
xchg
ficoml
out
mov
std
pop
jmp
into
xor
mov
inc
xor
mov
sbb
scas
xor
mov
flds
lods
fucomp
jo
das
cli
sbb
lods
cld
insl
pusha
incl
mov
loopne
lods
insl
adc
mov
sub
ds
jle
mov
adc
es
inc
and
pop
inc
or
mov
ss
in
lret
loope
and
inc
ss
mov
jecxz
and
movsl
xor
out
mov
out
sbb
rcr
pavgw
stos
adc
std
add
jbe
ficomps
lcall
cmp
fsubrl
lea
cltd
hlt
ljmp
lret
jmp
shrb
cltd
test
sbb
xchg
xchg
scas
pop
decl
mov
imul
jge
inc
out
das
scas
cmp
jbe
cmc
cmpsb
outsl
lea
jno
and
jle
je
xor
cltd
in
pop
cmpxchg
adc
jne
push
push
mov
fcom
fdivl
jg
sub
dec
cltd
test
xor
add
pop
imulb
imul
ss
mov
loopne
shll
inc
and
pushf
popa
mov
out
cmc
mov
pop
xchg
dec
rolb
ds
xchg
cmp
hlt
push
dec
aad
mov
mov
jg
loope
lds
mov
add
xchg
pop
cmp
orps
cmpb
cmp
fldcw
and
xor
cmp
addr16
adc
popf
cmp
outsl
fstpt
repnz
mov
jg
sbb
insl
jecxz
pop
push
iret
mov
xchg
mov
sti
test
cmpsl
xor
mov
add
js
lock
cmp
fsubs
or
divl
clc
push
pop
push
sbb
stc
push
sbb
jns
xor
or
sub
pop
bound
mov
or
sub
scas
test
movsb
cld
add
jae
and
enter
or
jge
into
aad
iret
stos
jb
mov
sbb
out
das
mov
stos
inc
adc
pop
iret
inc
and
movsl
pop
test
xor
dec
push
mov
test
adc
pop
push
loope
pop
push
mov
movsb
jbe
scas
int
ja
scas
rcll
dec
sub
dec
pop
pusha
sti
xchg
mov
dec
bound
insb
sbb
adcl
jecxz
hlt
jle
pop
dec
sub
dec
subl
pop
fstps
cmp
dec
mov
jns
adc
cmp
xchg
mov
movsb
adc
xchg
cmpsl
out
pusha
jle
cmp
ljmp
lahf
xchg
push
sbb
mov
aaa
in
xor
sahf
add
dec
mov
mov
jae
xor
into
mov
adc
dec
lret
adc
mov
pop
adc
pusha
decb
xor
dec
sub
jmp
mov
jg
push
lahf
les
jb
pop
jmp
mov
movsl
cmpl
add
out
sub
nop
decl
cwtl
xlat
pop
and
dec
or
flds
mov
inc
mov
jecxz
cmc
and
ja
adc
out
in
pop
int
femms
sub
mov
lahf
iret
clc
mov
clc
adc
stos
and
lret
pop
mov
pushf
xchg
xchg
sahf
adcl
pop
mov
pop
or
lods
movsb
mov
mov
add
lds
and
orl
ss
ljmp
mov
add
cmp
jae
lcall
add
mov
xor
and
mov
out
xchg
in
add
jns
leave
out
stc
add
mov
push
daa
fmuls
cwtl
sti
pop
pop
xor
in
cmp
js
pushf
and
ljmp
xchg
dec
shl
movsl
dec
mov
jle
mov
pop
cmp
xor
call
ds
inc
adc
jl
insl
xchg
mov
pop
mov
aaa
cmp
lods
xor
and
movsb
sbb
jp
adc
mov
test
pop
movb
mov
push
lret
fstl
sar
cmpsb
adc
cmp
sbb
fwait
std
push
inc
ljmp
icebp
xchg
sarb
enter
push
daa
popf
scas
into
sub
shll
loop
mov
add
test
js
std
in
mov
ds
add
add
inc
out
lret
loopne
dec
mov
push
dec
mov
daa
cltd
lods
mov
neg
daa
in
push
sbb
or
push
outsb
sub
pop
lcall
push
sbb
mov
lret
lods
xlat
dec
inc
incl
rorb
fisttps
xchg
sbb
jecxz
xor
xchg
mov
mov
stos
popf
jp
dec
cmp
addr16
sub
sbb
pushl
arpl
adc
pushf
inc
cs
lods
icebp
jg
add
imul
adc
pop
mov
popf
in
test
mov
pop
jl
add
hlt
enter
xor
arpl
lock
std
imul
sbbl
and
inc
and
adc
shlb
adc
test
jb
and
in
ja
hlt
push
cltd
cs
or
dec
inc
cmp
lock
repz
lret
sbb
or
aam
cs
pop
mov
add
aam
add
pop
add
or
dec
and
dec
mov
jns
adc
mov
loopne
je
cmp
lods
push
dec
mov
hlt
out
jno
jle
adc
adc
scas
pusha
adc
lcall
xor
and
mov
je
mov
sbbb
push
inc
lock
test
jo
out
adc
repnz
bound
sbb
or
pop
sbb
jbe
pop
out
jno
clc
mov
inc
pop
das
xchg
fsts
mov
pop
lods
fmul
daa
push
nop
in
inc
mov
pop
in
inc
call
push
xor
sub
xlat
aam
sahf
rcr
nop
movsl
sahf
sbb
mov
lea
sbb
inc
or
dec
mov
fwait
cwtl
push
popa
mov
cli
stos
loopne
push
or
ror
and
cmpsl
mov
jo
js
stos
aam
out
push
inc
and
ds
xor
adc
jmp
shlb
lods
int
popa
into
pop
in
xchg
inc
rolb
insb
out
test
mov
mov
lret
aad
push
mov
xor
cmp
idivb
dec
dec
pusha
jne
dec
mov
push
lret
add
lcall
sbb
sbb
shll
faddp
shlb
stos
push
xor
pusha
mov
data16
cmp
daa
orb
cmp
jno
sbb
inc
ljmp
rcrl
cli
aaa
data16
lret
movsb
xor
lahf
aaa
ret
je
int
push
clc
jp
stos
mov
movsl
push
mov
adc
stos
push
jmp
jg
mov
mov
adc
or
repz
dec
nop
lods
xchg
fisttps
mov
sub
sub
cmp
rorl
mov
hlt
mov
xor
add
push
fmulp
stos
nop
gs
xlat
push
mov
inc
mov
add
ja
jbe
sub
inc
scas
insl
popa
dec
lods
ret
leave
stos
out
inc
hlt
xchg
push
sbb
jbe
aam
clc
push
add
push
fisubs
addr16
add
jne
lea
xchg
sbb
subl
out
jg
mulb
pop
repnz
cmp
adcb
jbe
push
loopne
add
je
push
adc
std
mov
jae
nop
cmp
pushf
dec
mov
jb
sub
jmp
xor
repnz
push
jo
pop
hlt
dec
fsts
xchg
add
fnstcw
sbb
les
add
and
inc
shll
fisttpl
movsl
fcoms
cmp
cmp
push
jle
cmpsl
push
push
sbb
ret
hlt
adc
rol
psadbw
mov
pop
mov
sbb
std
dec
xchg
cld
in
out
popa
add
mov
adc
adc
out
push
mov
mov
push
push
mov
imul
sbb
sbb
loopne
xchg
aam
imulb
lods
icebp
pop
arpl
sub
push
mov
push
pop
dec
xchg
leave
bound
cmp
shrb
mov
pop
sbb
xchg
stc
roll
fidivrs
jo
pop
add
inc
sub
call
out
fwait
xchg
negb
mov
fdivrs
adc
mov
jno
push
clc
jle
out
jge
std
rol
cld
cwtl
push
inc
icebp
jl
test
test
test
inc
leave
out
fisubs
daa
outsl
push
adc
iret
das
push
imul
dec
loop
stc
fdivrs
les
fdivs
ficoml
push
lock
es
jae
mov
notb
pop
mov
dec
lcall
xchg
js
push
shlb
shrl
test
mov
jecxz
movsl
inc
mov
bound
inc
pop
add
aad
push
orl
aad
sbb
inc
cltd
cmp
clc
xchg
mov
xchg
sbb
sbb
in
fildl
test
outsb
test
xor
rorb
aas
jns
and
jae
stc
sub
lcall
icebp
adc
fnstcw
push
std
sbbl
outsl
pop
or
sub
cmc
dec
push
rcr
and
sbb
sub
adc
xor
ds
dec
add
and
sub
hlt
xor
mov
pop
sub
hlt
in
mov
insb
mov
js
popf
into
shr
lea
movsb
xchg
add
popa
xchg
cmpl
mov
shr
add
mov
adc
cmc
xor
das
imul
sahf
pusha
sub
or
cmc
push
and
cmpsl
cmpsl
punpckhwd
sub
xchg
arpl
jp
pop
movsl
inc
pop
inc
dec
mov
inc
pop
mov
not
shlb
stos
ror
lret
rcrl
mull
add
ret
jno
clc
daa
inc
mov
imul
in
mov
mov
jmp
cli
pop
orb
push
mov
xor
mov
dec
jp
div
mov
sbb
mov
mov
push
aas
mov
data16
jecxz
cmp
repz
lea
add
in
subl
fs
and
pop
mov
imul
add
loopne
divl
push
sahf
sbb
imul
js
lahf
cmp
ret
jb
push
cmp
popa
jg
jne
sub
mov
mov
push
xchg
aas
cmp
dec
movsl
sub
jg
adc
push
and
or
adc
mov
mov
loope
pop
in
in
mov
mov
out
adc
sub
pop
inc
pop
icebp
push
mov
jecxz
test
add
xor
mov
xchg
iret
mov
test
add
add
in
mov
pushf
sahf
jo
and
popw
xchg
inc
mov
ret
ret
cmc
repz
and
jg
xor
insb
gs
cmp
jns
xchg
jg
stc
or
and
and
stc
adc
pushf
lea
add
hlt
aas
dec
cltd
adc
mov
push
fwait
mov
bound
lret
inc
or
mov
aas
subl
sbb
orl
fs
or
jmp
xchg
rolb
jle
lret
movl
mov
cltd
sti
add
inc
mov
mov
mov
pop
pop
xchg
sahf
mov
incl
leave
dec
push
push
cwtl
inc
in
jae
sbb
sub
fmull
cltd
push
stos
test
popl
popa
into
lock
cmp
cmpsb
insb
dec
cmp
inc
adc
ret
mov
cmp
lcall
sbb
idivb
fsubrs
outsb
jb
cltd
rcrb
les
adc
adc
dec
mov
imul
mov
lret
mov
test
scas
out
movsb
xor
out
and
es
jo
cwtl
push
int3
and
into
shlb
rol
and
jecxz
xchg
xchg
ret
cmp
jg
and
mov
daa
mov
lods
or
pop
or
xchg
fcmovne
out
cmpsl
inc
sub
out
sbb
out
mov
xorb
xchg
ja
pop
je
lea
lea
sub
sbb
loop
imul
jmp
sbb
cmp
imul
jae
js
ja
or
fisubrs
push
xchg
insb
std
loop
movsb
movl
cmp
movsb
fwait
xchg
push
lock
aad
adc
mov
sub
and
jb
es
mov
jge
and
popl
and
mov
or
lahf
sbb
arpl
push
sub
add
shll
lahf
loop
lcall
push
iret
mov
mov
into
fnsave
xchg
dec
mov
and
orl
jecxz
mov
push
vprotb
arpl
jne
or
loopne
in
add
fwait
sub
or
and
jp
out
clc
mov
sub
mov
mov
data16
das
popa
ljmp
das
jo
jb
mov
adc
int
add
jae
cwtl
imul
mov
out
roll
jns
or
and
icebp
aaa
insl
xchg
out
mov
into
nop
xchg
jg
sbb
lock
xor
xor
iret
test
pop
sub
lods
inc
ja
cmp
pop
pop
jae
sbb
lfs
fists
imul
notb
stos
enter
inc
xchg
dec
repnz
fimuls
sub
mov
pop
les
xchg
jg
fidivl
pushf
mov
arpl
int3
imul
and
push
clc
mov
imul
and
insl
cmpsb
out
mov
jle
cld
xchg
push
sbb
adc
scas
aaa
mov
loop
inc
test
pop
pushf
push
add
mov
add
out
jno
pop
flds
or
out
add
mov
push
les
pusha
movl
jp
add
mov
sahf
mov
mov
sti
xor
xor
add
mov
fldcw
mov
xor
xchg
add
mov
push
sarb
xchg
jbe
dec
xchg
fwait
stos
out
aad
push
and
inc
push
icebp
scas
sbbl
call
rcrb
jmp
jnp
rolb
dec
out
fwait
xchg
mov
cmp
scas
aas
imul
mov
fstl
inc
mov
lahf
xor
and
mul
repz
push
mov
in
imul
aaa
popf
js
js,pt
jb
divl
scas
enter
shr
into
push
popf
in
nop
sub
insb
subl
ss
sub
inc
or
out
sub
xchg
popf
addr16
fisttps
ljmp
outsb
movsl
addr16
sti
scas
call
aas
sbb
xor
out
xor
or
sub
sbb
stos
pusha
cmpsl
pop
ret
or
and
jo
pop
xor
stos
or
aas
adc
dec
push
or
int3
adc
xchg
movb
gs
dec
scas
jno
xchg
sub
push
dec
jnp
pop
out
filds
sbb
push
mov
or
popf
orl
push
sub
outsb
xor
xchg
adc
inc
mov
movsb
pop
fs
and
cmp
pop
add
leave
in
push
fiadds
push
js
lcall
mov
shll
xor
fildl
or
mov
mov
cmpsl
test
sbb
sub
cli
in
loopne
pop
lock
jecxz
sbb
test
cmpsl
xchg
or
sbb
outsl
stos
sbb
popf
and
adc
mov
data16
leave
add
adc
push
adc
push
ficomps
es
lods
pop
push
test
cmpb
out
xchg
iret
insb
or
push
repnz
mov
fwait
sub
jge
icebp
xlat
js
lret
loop
push
addb
pop
mov
xchg
lret
stos
jno
jns
adc
sbb
decl
add
push
add
and
popf
xchg
aaa
lock
movsbl
push
jb
and
dec
push
inc
shll
daa
mov
das
jns
jg
cmpxchg
jecxz
repnz
stos
stos
push
adc
mov
mov
sub
sub
or
xor
and
adc
es
lret
ljmp
orl
test
xor
dec
jmp
insl
out
jae
leave
sbb
lods
test
ljmp
xor
fisubl
pop
push
iret
rorb
fs
add
cmpb
rclb
inc
loopne
dec
jbe
xchg
push
add
pusha
or
inc
cli
je
call
dec
pop
mov
add
or
sub
adc
dec
mov
and
add
in
xor
and
es
jbe
ss
sbb
inc
push
jle
pop
nop
icebp
sub
icebp
das
stos
std
leave
jge
enter
and
dec
adc
orl
std
cli
in
vmwrite
jmp
sub
ja
add
add
sub
out
insl
jmp
sar
sbb
dec
gs
add
add
jge
mov
add
push
cwtl
aas
pop
pop
sub
jle
adc
mov
jns
aaa
mov
sahf
test
xchg
jnp
jmp
pushf
jmp
and
jns
shll
js
inc
add
mov
scas
out
or
cli
imul
pop
lods
lock
push
loop
mov
dec
enter
cmpsb
in
mov
test
lds
mov
cmc
push
cmp
test
ljmp
lret
mov
inc
push
stos
inc
daa
inc
fnstsw
sahf
gs
fsubrs
and
and
xchg
dec
push
int
cld
push
or
mov
pop
out
jo
pop
mov
mov
cmp
inc
sbb
divb
movsb
or
push
out
clc
sarb
add
stc
mov
daa
pushf
pop
loopne
jns
cwtl
jo
test
movl
jle
mov
stos
inc
push
jb
mov
xchg
fsubs
dec
ficomps
lock
imul
mov
sub
sbb
push
test
mov
add
hlt
sub
pop
xchg
js
push
in
ds
sub
xor
jb
mov
mov
adc
aad
fwait
and
xor
jl
fwait
popf
repnz
ds
dec
xchg
jmp
scas
clc
aad
mov
fsubrl
xor
mov
shr
sub
ss
test
stos
iret
mov
push
push
push
adc
gs
stc
sti
mov
adc
mov
movsl
inc
inc
movsl
push
lret
mov
xchg
inc
add
push
mov
and
sub
scas
fstps
addr16
lret
xchg
add
mov
lahf
add
cmpl
outsl
daa
call
xchg
test
dec
inc
cmp
adc
xor
dec
divl
fisubl
fisttpll
lds
xor
mov
inc
inc
repz
ffree
imul
dec
jns
jno
pop
dec
push
pushf
pop
adc
lods
je
xchg
mov
lea
es
lods
mov
in
add
mov
mov
cmp
dec
arpl
dec
xor
pusha
jo
sbb
push
fisubrs
lret
sbb
imul
mov
xchg
mov
loop
scas
ret
xor
rolb
dec
dec
mov
push
orl
insl
jge
xor
test
xchg
cmp
and
dec
fs
xchg
adc
popa
add
lret
xor
jl
fistl
dec
xchg
in
scas
jecxz
mov
xchg
and
push
or
xchg
mov
xor
xchg
fidivl
push
imul
xchg
mov
jge
mov
ja
mov
push
shr
das
dec
pop
in
xlat
mov
out
test
cmpsl
mov
sub
mov
imul
mov
push
or
addr16
in
and
aad
xchg
dec
daa
arpl
scas
xchg
mov
add
add
jl
or
js
or
jp
mov
adc
stc
and
test
fcmovnbe
add
mov
cli
dec
inc
pop
cwtl
insl
cmp
pop
out
or
sbb
addb
jns
mov
inc
in
jmp
mov
xchg
inc
stc
push
mov
outsl
shll
push
lea
sub
rorb
cmpl
mov
xchg
out
in
imul
fnstsw
cmp
leave
jae
push
popf
mov
mov
jnp
xchg
xchg
int
gs
xchg
push
dec
outsl
and
insb
test
jb
add
sub
movsb
into
cmpsb
addr16
addb
loope
mov
mov
btc
jo
cmp
fsubrl
cmp
sub
inc
pop
and
xor
and
mov
push
push
jo
push
push
inc
lahf
mov
cmp
loope
repz
fisttpl
shll
jmp
dec
mov
scas
hlt
cltd
push
xchg
and
cmc
setg
sub
xchg
jb
mov
cmp
inc
aaa
dec
in
mov
xchg
dec
cmp
imul
pusha
jl
xchg
mov
jnp
mov
add
pop
shrb
add
or
pushl
lcall
cmpsb
mov
clc
xor
addr16
xorl
addr16
movsb
adc
and
repz
cmp
mov
call
sub
out
and
ss
lahf
sbbl
fistps
lret
jae
jo
jg
inc
sbb
mov
adc
ret
inc
push
jg
dec
push
je
test
jge
add
inc
sub
adc
cmpsb
test
data16
adc
adc
and
scas
add
mov
lods
pop
into
pop
adc
jecxz
call
mov
ficomps
int3
nop
test
out
dec
ss
repz
push
cltd
js
pusha
out
in
mov
sti
lret
jbe
cmpsb
and
stc
dec
mov
addr16
sbb
shr
add
inc
push
xchg
fsubs
or
cmp
pop
andb
mov
stos
inc
inc
addb
xchg
cltd
xchg
clc
inc
in
sub
mov
lods
repz
mov
mov
das
inc
fs
and
mov
push
scas
aaa
adc
adc
mov
clc
das
sub
xchg
pop
jb
pop
gs
jmp
jle
cmpsl
into
pop
rorb
xchg
sbb
int
and
int3
fisubl
or
and
mov
cmpsl
je
or
outsl
inc
sbb
lcall
dec
gs
sbb
loopne
bound
daa
int3
in
push
mov
idivl
mov
scas
push
adc
leave
and
mov
dec
xchg
push
adc
jge
sub
sub
cmc
xchg
adc
out
adcb
int3
stos
cmp
mov
dec
add
adc
xor
xchg
out
test
cli
pop
xor
mov
test
in
enter
push
jmp
jo
jno
std
cwtl
jg
leave
push
negb
and
std
stc
cmp
dec
test
rorl
cltd
hlt
push
loopne
int3
push
mov
int
int3
test
cmp
adc
dec
jecxz
aaa
xchg
mov
scas
xor
fcmovne
xchg
fidivs
xor
ret
por
pusha
cmp
imul
jmp
imul
subl
das
mov
popf
fimull
or
xchg
lods
mov
mov
mov
js
hlt
shll
add
shlb
dec
cmpl
and
xor
add
enter
sub
mov
push
lcall
xor
lret
fmull
adc
mov
pop
or
xor
lods
inc
pop
rclb
cmc
or
mov
lret
inc
xchg
add
ljmp
cld
xlat
out
fbld
cs
dec
ret
mov
mov
scas
mov
inc
cmpsb
lock
rcr
aaa
cmp
lret
jp
icebp
ficompl
sbb
inc
movsb
lret
and
dec
jae
sar
dec
cmpsl
lods
and
push
mov
pop
mov
cli
jne
add
and
pop
add
sbb
and
cli
shlb
sbb
cs
cs
mov
fmull
stos
into
adc
jnp
sub
lret
inc
pop
lock
scas
mov
fists
mov
imul
daa
push
pop
daa
add
movsl
mov
push
add
fwait
jbe
mulb
cwtl
in
call
inc
cld
and
loop
or
testl
loope
pop
mov
inc
cmp
ficomps
ss
pop
daa
push
xchg
jmp
lret
add
das
jl
fsubrs
inc
cmp
jb
lods
pop
or
or
scas
popa
add
dec
xchg
lcall
jecxz
or
pop
pop
mov
adc
xor
leave
add
jnp
loopne
push
ljmp
mov
dec
xor
out
scas
and
mov
mov
std
lods
repz
lret
jo
sub
hlt
je
jb
dec
mov
in
xor
jle
cmp
mov
lret
or
cs
ja
pop
mov
pop
sbb
aad
cltd
icebp
inc
sbb
testl
jecxz
stos
or
sbbl
jl
test
pop
fsubs
cmpsl
rcr
movl
ret
into
sub
mov
push
scas
out
ret
mov
dec
jg
popf
ds
xchg
orl
inc
and
jb
sbb
xchg
cli
push
fwait
sbb
enter
fdivl
sub
mov
arpl
mov
xor
call
das
adc
aas
jecxz
sub
movsl
lds
pop
std
sbb
cltd
fs
stc
sahf
ret
mov
push
lea
retw
jne
and
xchg
movsb
fisubs
xchg
cmp
sbb
rcr
mov
xor
add
shlb
sub
mov
jo
adc
sahf
rorb
loopne
pop
das
cs
loop
cmp
fadds
mov
idivl
mov
or
shll
adc
mov
jbe
adc
shlb
pop
jb
scas
jb
lahf
pop
call
lods
jae
orb
shll
jmp
add
lret
imul
xchg
mov
imul
cld
push
pop
gs
nop
loop
inc
pop
shrb
mov
stos
testl
adc
or
in
orl
loop
push
pop
test
or
add
addr16
sbb
push
gs
icebp
xchg
bound
icebp
sub
outsl
mov
cli
test
mov
pushl
pop
incb
subb
inc
mov
aad
das
fidivrl
inc
orb
xor
jae
outsb
cmp
add
es
icebp
sbb
bound
loop
addr16
popa
mov
fwait
loop
out
insb
xchg
lds
out
ss
sbb
pop
xchg
cmc
sub
lret
mov
pop
dec
clc
adc
dec
incw
mov
data16
shrb
cmp
sbb
push
imul
in
jl
dec
mov
and
mov
mov
dec
cwtl
imul
dec
loopne
xor
std
cld
mov
jnp
mov
ja
mov
pop
mov
adc
sahf
clc
loop
push
mov
mov
push
sbb
pop
lods
leave
sbb
xchg
mov
hlt
iret
xor
mov
and
mov
jae
pop
inc
xor
cltd
fcompl
lret
movsb
add
imul
mov
cmp
pop
imul
rep
ja
jae
imul
lds
iret
roll
movsl
test
add
sub
mov
mov
mov
movsb
inc
mov
addr16
sub
insl
mov
and
cmpsl
ret
and
mov
or
jmp
push
fistpll
adc
in
sub
jmp
sub
mov
ja
aam
mov
xchg
clc
and
add
stos
loop
sti
out
xor
fwait
movsl
repnz
mov
sbb
in
cmpb
pop
test
pusha
fiadds
add
and
es
js
cmpb
inc
push
sub
inc
push
pop
and
test
push
lock
push
ja
push
push
mov
scas
stc
cmp
pushl
jno
push
stos
push
popf
jno
adc
xchg
cs
testl
and
arpl
rcll
je
adc
icebp
jbe
mov
xlat
adc
inc
inc
insb
inc
mov
add
cmpsl
lods
sbb
cmp
std
sbb
icebp
lretw
mov
push
xor
xor
jle
pop
nop
xor
cmp
lods
push
mov
test
lods
push
cmc
sub
xor
insl
hlt
pop
pop
repnz
aas
leave
clc
inc
push
xor
dec
ljmp
mov
and
cld
push
cmp
lcall
jb
movsb
cltd
xchg
sbb
sbb
and
lcall
or
cmpsb
imul
sub
adc
sbb
mov
or
jno
xchg
ficoms
xchg
lods
push
ss
adc
pop
shr
pop
fiadds
je
sahf
mov
leave
pop
popa
dec
scas
xchg
or
jbe
jle
lock
test
sub
and
and
popf
into
jl
push
sbb
scas
jmp
adc
inc
cwtl
pop
inc
push
imul
dec
xchg
fisttpl
insl
imul
aas
call
adc
mov
inc
std
test
jb
cmc
add
lods
mov
lret
arpl
int
or
or
lcall
cli
inc
lods
in
push
pushf
add
mov
or
scas
jae
outsl
decl
cld
wrmsr
mov
fidivs
les
repz
and
in
xor
xor
cld
leave
sub
mov
fsubrl
adc
pop
jl
subl
leave
les
dec
inc
aaa
sbb
add
cmp
mov
in
mov
sub
dec
cmp
pop
add
xchg
out
mov
sbb
pop
lret
movsl
addr16
cli
scas
iret
xchg
lds
push
and
loop
sti
push
fnclex
inc
fsubrs
xor
push
xor
cmpsl
lahf
jg
pop
push
std
dec
cmpsl
cli
add
cmp
inc
cmpsl
jnp
insl
push
sbb
cli
loop
xorb
jg
push
or
mov
xor
xchg
movsl
push
loop
inc
xchg
int3
sbb
xor
test
push
loopne
cli
popf
xor
cs
xchg
jge
movsl
sbb
iret
lds
jb
cwtl
shr
stc
ja
xor
xchg
sub
dec
and
gs
jg
cmpb
mov
mov
imul
or
mov
cmc
fldl
arpl
xchg
pop
das
jo
mov
les
mov
repnz
mov
jno
mov
xlat
xor
in
aas
push
dec
bound
sbb
dec
ror
xorb
xor
sarb
lcall
cmp
mov
insb
jo
pusha
pop
popa
scas
test
pop
cld
sti
xor
mov
add
loope
pop
pop
inc
push
call
fmuls
in
inc
test
pushf
test
xor
data16
and
jp
jns
pop
pop
add
pusha
add
stos
adc
pop
fcmove
xor
ds
fimull
mov
xchg
int3
fbld
mov
fwait
cmp
in
and
jns
add
mov
pop
jecxz
adc
push
lods
adc
or
pushf
and
pop
inc
jecxz
cli
out
xchg
mov
dec
in
nop
movsl
xchg
push
loope
fiaddl
or
sub
cmp
loope
fisttpll
ss
dec
movsb
add
out
aam
sti
insl
hlt
cmp
sub
out
imul
nop
out
ficoml
mov
jne
jl
mov
mov
xchg
push
in
fldl
scas
xchg
and
dec
scas
popa
pop
push
iret
insb
mov
jge
add
dec
imul
addl
jle
lods
pop
sbb
dec
mov
push
sub
jmp
std
inc
nop
loop
mov
addr16
in
mov
mov
jmp
xchg
aas
aam
aaa
xor
aad
in
cltd
mov
stc
lods
mov
cmp
fs
cmp
or
hlt
push
jns
mov
mov
push
dec
inc
sbbb
fidivs
and
sbb
popa
inc
sbb
lds
arpl
sbb
and
cmp
jo
daa
adc
inc
fdivrs
dec
and
mov
sub
mov
mov
and
cwtl
aad
dec
rcl
push
push
pop
dec
fs
sti
sub
xchg
test
mov
xor
rorl
lcall
imul
ret
mov
pushf
sbb
add
movsb
in
adc
mov
cltd
fcom
sbb
mov
aam
ret
aas
xchg
insl
lea
push
loop
jl
mov
add
cmpsb
clc
pop
imul
and
xchg
jle
mov
xchg
cmp
and
and
adcl
xchg
pop
pop
and
jmp
int3
add
repnz
pop
jmp
icebp
jae
xor
cmp
mov
xor
mov
xchg
sahf
pushf
push
and
call
mov
inc
xchg
inc
lcall
inc
pop
or
orb
aam
mov
push
mov
icebp
movsb
hlt
xchg
jne
leave
lods
lds
mov
lret
and
imul
pop
cmpsl
xchg
dec
sub
pusha
mov
inc
jae
mov
jo
sub
frstor
cli
lods
adc
shlb
xor
and
movsb
jae
les
xchg
ss
pop
mov
in
test
dec
pop
cmp
push
es
mov
pop
add
xchg
xor
inc
jl
push
mov
and
sbb
push
lret
in
fadd
es
fwait
pop
ficoms
push
add
sti
adc
push
dec
ret
dec
pop
in
dec
xchg
push
inc
mov
mov
mov
dec
add
pop
les
mov
pop
imul
mov
dec
dec
dec
sub
rcrl
push
push
and
divb
mov
sbb
add
pop
sbb
out
bound
repz
jne
cmp
adc
add
sub
enter
mov
je
sbb
rorl
dec
or
imul
push
mov
pop
imul
clc
add
lds
mov
jmp
sti
mov
add
call
sub
fstpl
xor
or
mov
pop
scas
lds
cmp
inc
test
fs
jo
sti
into
je
xor
mov
imul
or
je
in
movsb
insb
lret
pop
in
lret
cld
xor
push
repnz
int3
loop
cltd
aad
out
cmp
test
mov
dec
dec
sub
out
ret
mov
mov
rcl
add
inc
push
fnop
testl
mov
shll
or
ss
clc
pushf
or
cmp
jae
cs
sub
cmp
test
cld
add
sbb
shrl
push
pushf
or
adcl
insl
lcall
dec
jbe
les
and
xlat
sbb
das
fnstenv
sbb
in
rorb
pop
mov
mov
pop
mov
lea
in
aam
lcall
out
cmp
in
outsl
xchg
cli
shll
inc
hlt
add
jo
xchg
push
pop
sahf
xchg
sti
jge
fmul
xchg
gs
adc
call
xor
mov
pop
jns
lret
out
add
ja
jae
xchg
stos
mov
pop
cmp
aaa
xor
mov
or
test
adc
inc
jno
xchg
lret
aas
jmp
lods
mov
scas
or
ret
push
and
xchg
mov
js
mov
orl
aas
lock
sti
hlt
mov
daa
mov
ret
adc
repz
lcall
or
push
xor
dec
push
and
clc
dec
push
xor
xchg
jmp
mov
std
jae
aaa
or
push
push
lock
or
loopne
bound
mov
or
push
loopne
call
jo
mov
sub
mov
adc
sti
dec
push
out
mov
mov
mov
adc
dec
pushf
dec
sbb
loope
data16
cmpsl
loop
insl
in
jp
jne
fcmovb
mov
scas
addb
iret
push
pop
xor
dec
push
or
mov
and
lcall
add
sub
sbb
jnp
lret
nop
int
push
test
pop
add
dec
mov
ja
mov
loopne
push
jge
rcr
dec
dec
dec
cmpsb
inc
xor
push
cmp
xor
sbb
int
pushw
xchg
cmc
sub
sub
mov
xor
hlt
mov
shrl
out
pop
inc
rolb
xchg
out
cmpsb
pop
stc
and
movsb
mov
jb
mov
scas
in
mov
rcrb
in
xor
in
sbb
fs
gs
mov
mov
das
mov
cmp
xchg
mov
ja
xchg
xor
jle
push
hlt
mov
int
in
xchg
fisttpl
jns
hlt
ljmp
aas
mov
ljmp
inc
outsl
mov
rclb
add
stos
jge
mov
and
xor
sti
lcall
shlb
mov
or
cmp
inc
mov
add
mov
mov
adc
lea
adc
loop
pop
adcl
fnstsw
jno
sbb
leave
call
lock
hlt
lcall
mov
aam
add
es
pop
arpl
cld
mov
sahf
pop
iret
and
aam
test
jns
js
push
cld
insb
xlat
and
cmpsb
fdivs
mov
and
cmp
add
rcr
push
jno
jg
dec
dec
fsubs
jne
or
push
fst
shlb
mov
mov
dec
jmp
dec
pop
mov
sbb
clc
and
push
cmp
repz
push
ss
add
jg
fldt
inc
mov
push
lods
xchg
mov
ret
dec
lds
dec
xor
sub
cli
subl
xchg
mov
cltd
pop
neg
pop
shl
xor
sbbb
aad
loopne
sbb
pop
push
gs
jmp
push
xor
jnp
inc
push
sub
test
bound
add
daa
lahf
arpl
add
loopne
in
addl
dec
dec
xor
adc
push
fmuls
ds
sbb
clc
jne
cwtl
hlt
jmp
add
and
dec
ret
in
inc
in
push
cwtl
aas
fs
xchg
jo
adc
arpl
lret
lods
ror
dec
orl
aaa
data16
pop
adc
sub
mov
xchg
jno
int
pop
test
or
mov
insb
push
into
dec
sbb
push
push
cmpsl
mov
dec
decb
or
jb
popa
pop
sbb
xor
dec
aas
mov
loope
imul
outsb
test
dec
push
bound
and
mov
pop
jp
push
rclb
xor
into
test
adc
insb
mov
outsl
xor
push
xchg
imul
jns
fbld
insl
push
adc
push
add
cmp
loop
leave
adc
in
dec
out
aas
mov
stos
hlt
sub
adc
arpl
outsb
mov
ljmp
inc
pop
rcrl
in
scas
test
pushf
mov
push
mov
mov
std
pop
in
loopne
xchg
imul
mov
lret
addr16
or
loop
mov
push
rolb
xor
xor
loopne
pop
gs
push
adc
inc
mov
test
ret
jmp
xchg
rol
jmp
outsl
subb
mov
out
xchg
es
call
insb
lret
dec
sbb
sbb
loopne
sbb
mov
in
cmp
cmp
fbstp
ret
enter
testl
stos
ljmp
test
cmc
xor
push
push
sub
or
xchg
cs
sub
add
push
mov
jge
inc
lods
xchg
repnz
fdiv
fcmovne
stos
cmp
in
mov
mov
popa
or
xchg
stos
les
push
add
mov
lret
arpl
add
pop
push
xchg
shlb
test
add
pop
jne
psubq
call
leave
xor
nop
and
outsl
insb
mov
fisttps
sbb
int
sub
sbb
xchg
test
lcall
stc
or
xchg
imul
pop
xor
dec
lahf
insb
or
into
movb
test
sub
mov
jne
jae
adc
sbb
inc
xchg
and
jb
mov
mov
lods
dec
push
and
cmpl
aad
xchg
mov
lahf
cmp
lahf
jbe
lret
push
lea
insb
lock
push
and
aad
sub
xlat
pop
test
jnp
pop
or
inc
dec
lahf
cmp
leave
out
push
aaa
incl
dec
mov
js
out
cmp
pop
pop
inc
movsl
stos
jo
mov
pop
push
sbb
ret
mov
mul
pop
or
push
cmp
cmc
xor
lea
mov
lret
mov
sbb
mov
lea
dec
jbe
sbb
enter
fldenv
orb
and
enter
idivw
xor
mov
ds
sbb
pusha
jmp
dec
shr
mov
ds
gs
lds
aad
add
jbe
out
sub
dec
fmull
pop
inc
sub
ljmp
sub
hlt
imul
cld
pop
outsl
ret
adc
xchg
imul
mov
inc
xor
xchg
cltd
pop
ficoms
dec
mov
mov
in
scas
cmp
jmp
daa
shrl
jae
pusha
pusha
inc
adc
insl
jae
adc
pop
mov
pop
add
mov
mov
xchg
sbbb
addr16
out
dec
jecxz
dec
movsb
cmpsl
or
loope
push
sub
xor
ret
insl
jle
cmp
fcmovne
mov
cli
jmp
push
pop
daa
and
stos
jmp
mov
stc
cmpsb
divl
inc
and
mov
das
pop
add
cmc
xchg
push
add
leave
pop
xchg
cli
jns
mov
insb
mov
cs
cmpsl
mov
jle
push
adc
adc
repz
clc
imul
push
rsm
mov
fistpll
das
and
jae
xor
mov
sarb
inc
dec
sarb
cmc
scas
xorb
mov
adc
sub
adc
xchg
divb
jle
mov
xchg
outsb
jo
scas
mov
jns
mov
out
loopne
lret
add
and
popf
outsb
icebp
out
int
add
add
mov
sub
jnp
imul
and
out
adc
pop
add
push
fwait
adc
and
inc
dec
lea
ret
push
in
imul
mov
sbb
add
popa
pop
data16
sbb
ret
add
cltd
mov
xor
scas
ret
cli
inc
je
dec
inc
jnp
sarl
sub
test
mov
push
adc
pop
push
xchg
sub
xor
add
jmp
add
cmp
adc
xor
lods
add
adc
cmp
pop
into
test
in
fwait
sub
sarb
adc
cwtl
mov
popa
xor
push
sbb
and
jb
dec
fs
sbb
add
ljmp
jmp
cmp
in
clc
outsb
mov
shl
je
push
int3
or
mov
sbb
adc
rcrb
out
inc
xchg
mov
or
or
add
and
and
ret
sub
lahf
or
mov
xchg
mov
mov
sti
inc
pop
das
mov
scas
cwtl
dec
pop
outsl
adc
pop
test
addr16
and
lods
ret
lea
adc
push
cmc
cmp
or
data16
mov
pop
cld
sub
lahf
xor
inc
inc
jg
sbb
icebp
aas
push
js
movsl
int
xchg
mov
sbb
daa
or
xlat
popf
push
pop
and
mov
rol
into
dec
cmpsl
fsubrl
fiaddl
daa
adc
sbb
sbb
divb
jge
roll
pop
insb
shlb
adc
mov
and
add
add
loope
xor
pop
pop
in
jb
repnz
iret
popa
mov
xchg
std
and
jb
bound
xchg
hlt
inc
fwait
add
inc
mov
sbb
jge
push
ljmp
mov
imul
sarb
icebp
repnz
je
inc
das
and
xchg
cs
adc
insl
out
or
adc
into
mov
pop
add
cmp
mov
or
in
sub
insl
dec
dec
sub
mov
pop
cli
test
add
fmulp
out
andb
and
insb
sahf
and
cli
xchg
repnz
aad
jmp
scas
mov
idivl
out
movsl
dec
pop
pop
stos
shlb
sbb
mov
xchg
mov
test
mov
mov
pop
lods
mov
cmp
cmp
scas
push
xchg
ds
aas
sbb
hlt
ss
sub
pop
jp
dec
and
stos
mov
int3
in
sbb
jb
std
subb
add
push
add
ret
xor
rorl
push
mov
sbb
aad
insl
or
fisttpl
in
in
clc
push
loope
mov
cmp
mov
pop
or
sub
add
or
add
pop
pushf
push
inc
je
arpl
icebp
imull
xor
dec
js
jg
sbb
sbb
jecxz
push
pop
adc
leave
cmp
call
scas
std
sub
xchg
dec
lea
stc
sub
imul
insb
pusha
aam
repz
pop
es
lret
push
sub
mov
xchg
call
jb
adc
dec
mov
pop
and
shll
pop
cld
lahf
js
daa
adc
in
ret
imul
sti
xor
jae
cs
dec
pop
call
sub
or
aaa
or
pop
lret
addr16
jmp
sbb
push
arpl
fwait
inc
movsl
and
clc
stc
push
sub
jmp
dec
ffree
je
fcompl
push
and
mov
mov
push
jno
xchg
in
cmp
in
lods
adcb
xchg
loope
jns
xchg
es
adc
xchg
dec
pop
jnp
xor
dec
push
mov
es
fsubs
push
pop
mov
xlat
bnd
js
add
iret
mov
imul
mov
push
xchg
dec
fdivrp
cli
cwtl
int3
aas
loopne
pop
lret
xor
rorb
jecxz
push
cmpb
into
jecxz
sbbl
aad
and
adc
push
cmp
jmp
add
int
jge
lcall
fs
shrb
xlat
std
insl
adc
sbb
fdivrp
and
pusha
pop
dec
fwait
push
stos
xchg
sbb
push
outsl
je
sbb
test
or
cld
cs
scas
test
or
xchg
repz
mov
dec
test
push
bswap
dec
mov
std
jmp
int
inc
cmp
popf
or
dec
cmp
je
inc
push
leave
fstpt
les
fcomps
xchg
push
adc
inc
repz
xor
and
cmp
fsubrs
sbbl
pop
cld
clc
lods
repz
inc
sub
sbb
pusha
ret
jne
pop
aam
jno
inc
mov
mov
ljmp
mov
pop
cmp
cmc
stc
insl
lods
cmp
lock
dec
dec
xchg
jmp
lret
push
push
sbb
mov
push
in
pop
out
aas
xchg
and
icebp
sub
mov
mov
fisubrs
shr
fwait
gs
imul
mov
push
push
loopne
jno
jne
sub
xor
inc
or
iret
jmp
js
fcmovnbe
loop
outsb
popf
gs
or
cmp
mov
xchg
into
lock
sub
cwtl
push
xchg
cmp
ret
sbb
pop
jb
pop
stos
xorb
sbb
jp
mov
sarl
mov
dec
popl
xor
fsub
ud0
mov
mov
leave
cwtl
into
mov
not
lods
lret
enter
outsl
jnp
jnp
add
push
pop
sub
mov
mov
inc
fdivrl
pop
xlat
jb
mov
mov
addr16
mov
push
mov
fldenv
shll
jbe
mov
lret
enter
cwtl
shr
jns
xchg
mov
or
out
std
xor
aad
loopne
ljmp
jge
xlat
mov
mov
scas
bound
lods
mov
push
gs
iret
push
adc
nop
sbb
stos
adc
sbb
inc
call
sub
pusha
lock
inc
mov
jp
hlt
mov
ret
mov
add
insl
fimull
inc
mov
inc
imull
sub
cmp
jg
ljmp
or
test
lock
test
or
sbb
nop
jmp
xchg
jne
jl
pop
or
cmpsb
dec
cmp
xor
hlt
inc
mov
sub
adc
dec
fstps
xor
ret
cmp
imulb
lds
shrl
pop
jmp
mov
mov
outsl
mov
jno
pop
arpl
cmp
sbb
add
add
in
jp
jp
jnp
adc
xor
adc
add
call
idivb
dec
mov
je
scas
ret
mov
cmpsb
popf
addr16
push
xlat
movsb
add
rorb
imul
mov
pop
rcrl
cmp
mull
repz
mov
add
cli
fiadds
mov
imul
stos
sub
popf
movsl
testb
add
inc
dec
adc
fdivr
xor
and
in
xor
fs
sahf
dec
mov
dec
into
or
sub
cmp
inc
lods
popa
fs
into
pusha
inc
daa
shll
sti
or
sahf
adc
dec
fsubs
xchg
fimuls
mov
pusha
adc
pop
and
popf
mov
mov
sarl
cmc
ficomps
mov
je
rorl
xchg
push
fcomi
xchg
shlb
add
jno
int
stos
insb
jnp
xchg
stos
cmpsb
out
jae
rcll
mov
adc
mov
out
mov
pop
mov
cld
lahf
sbb
mov
pop
clc
adc
cli
xor
cltd
repz
xor
or
add
inc
jmp
inc
or
stc
pushf
test
xorb
shrb
inc
ljmp
dec
es
int3
ja
adc
add
mov
and
xchg
jg
jae
and
xchg
cmpsl
pop
sbb
pop
loope
sub
leave
std
and
cmpb
movsl
shll
xorl
dec
scas
inc
or
cmpsb
xchg
cmp
xchg
pop
fs
movsl
add
cmp
xor
xor
xchg
aam
pop
int
adc
test
iret
sub
mov
dec
pop
mov
stc
les
bound
lds
push
push
sbb
pop
inc
loope
and
packsswb
sub
dec
mov
outsl
inc
out
adc
sbb
sbb
inc
jge
xor
mov
mov
enter
leave
sbb
mov
movsl
imul
push
cmp
pusha
push
decb
pop
clc
mov
pushf
loopne
daa
inc
insb
sbb
pop
ficomps
sub
aad
mov
cli
aam
dec
or
ret
iret
xor
pop
shll
pop
adc
xor
push
cld
pop
pop
lcall
repz
out
and
aad
jae
inc
adc
je
icebp
pop
cmp
in
dec
dec
push
jo
in
int3
jae
mov
and
leave
add
fdivr
xchg
mov
pusha
adc
jne
out
xor
cmp
sub
fstp
and
scas
bound
inc
xchg
imul
stc
imul
push
arpl
mov
mov
enter
xchg
fidivs
adc
cmpsb
cmpb
shl
ficoml
jle
das
je
inc
loope
sub
stc
aaa
les
xor
dec
test
imul
and
or
mov
out
hlt
popa
inc
jbe
mov
adc
imul
sub
mov
and
lea
fs
inc
mov
adc
icebp
sti
and
insl
add
in
xchg
ljmp
int3
sbb
mov
or
xor
stos
imul
add
mov
aaa
jbe
shl
lds
cwtl
leave
mov
idivl
rorb
add
je
insb
hlt
xlat
andb
pusha
or
jb
push
icebp
dec
and
pop
out
push
cmp
mov
stos
adc
loop
pop
ja
sbb
das
dec
push
out
sbb
je
sub
aad
out
gs
lret
cmpsb
stos
call
pushw
push
das
lret
or
stos
sbb
xor
stos
adc
pop
mov
out
negb
mov
adc
cmp
aas
pop
sbb
mov
nop
inc
cwtl
stos
cld
mov
pop
popa
in
lods
push
jg
jne
xchg
lods
mov
or
jle
cmpsl
dec
aaa
jb
mov
or
sub
inc
xchg
cmpsb
ja
aad
xchg
aad
pop
bound
xlat
or
popf
sbb
pop
jp
mov
fidivs
mov
or
fisubl
bound
sti
add
push
into
int3
mov
clc
fs
test
inc
pop
adc
orb
sbb
nop
imul
inc
or
stos
lret
mov
outsl
imull
adc
or
aaa
sub
push
pop
add
stos
shrl
jbe
arpl
sub
adc
inc
pop
pushf
jl
orl
xchg
movsl
pop
hlt
cmp
lds
mov
je
outsl
or
xor
repz
fisttps
loopne
mov
adc
mov
push
mov
jb
push
fcompl
scas
ficomps
loop
and
sbb
aad
and
lock
subb
cmpsb
add
orl
jecxz
out
hlt
fsub
dec
jp
pushf
mov
mov
jo
xchg
jns
es
arpl
pop
mov
aad
xchg
pop
repnz
lea
js
scas
movsl
in
mov
cmpsl
pop
inc
or
cmpsb
adc
imul
test
data16
pop
add
cli
xchg
xor
mov
sbbl
icebp
in
dec
lea
lods
jmp
daa
mov
or
mov
fists
rcll
inc
aas
sarb
in
in
cmp
movsb
repnz
xchg
cwtl
push
js
xchg
inc
fsubl
popa
sub
test
fwait
sbb
cmc
call
jns
cmp
pushf
add
mov
aam
dec
es
jb
in
std
ret
lods
testb
rcr
adc
xor
sbb
in
push
repz
jns
test
jecxz
push
lods
inc
imul
or
xchg
scas
jnp
addl
shll
out
dec
sbb
inc
gs
movb
aam
pop
scas
xor
dec
fiaddl
push
or
in
cmp
push
into
dec
daa
and
cmp
loope
push
adc
sub
fistpl
jle
xchg
mov
pusha
jle
loop
stc
jo
mov
pop
test
dec
popa
fnstenv
fstpt
or
rclb
jmp
in
in
in
cmp
dec
jae
or
jl
mov
mov
dec
mov
lea
jl
in
xchg
xor
mov
mov
jb
cmpl
cmp
and
das
pop
push
cmovg
mov
ficoms
lods
loope
dec
jp
pop
loop
mov
cmp
mov
mov
mov
in
add
cltd
shlb
rolb
inc
inc
push
jns
mov
repnz
das
xor
add
lcall
mov
stos
daa
mov
insb
pop
add
jae
clc
and
xchg
add
jnp
movsb
lods
aad
mov
push
pop
pop
pop
sbb
faddp
sahf
insl
jge
cwtl
scas
push
aam
dec
jmp
sarl
jecxz
xchg
jns
daa
cmpsb
jmp
je
pop
ret
xor
test
and
sbb
roll
mov
xor
ds
sbb
push
adc
pop
adc
fiaddl
in
in
out
js
dec
enter
iret
rolb
sub
xchg
loope
inc
and
out
xchg
cmp
dec
fidivl
mov
test
pop
pop
std
sub
sub
movsb
dec
mov
mov
stc
icebp
dec
fisttpll
out
icebp
push
fildl
adc
bound
lret
daa
push
lahf
clc
jmp
movsl
jl
add
enter
fs
or
addps
push
jecxz
mov
movsb
or
sbb
cmp
cmp
int3
call
mov
dec
cmp
stos
adc
fcomip
or
clc
adc
pop
cmp
sbb
ja
test
aaa
mov
xchg
addr16
fcoml
mov
int3
push
cmp
nop
sar
in
pop
adc
xchg
les
add
push
clc
ret
mov
in
inc
xchg
sbb
jae
pop
pop
lcall
mov
add
xchg
sbb
jp
push
aas
in
jnp
out
lret
adc
or
popf
sub
sub
adc
cmp
and
dec
fcoml
or
jo
xchg
jae
ljmp
inc
inc
push
orb
js
es
mov
neg
add
repnz
lcall
inc
jmp
call
push
mov
mov
out
aad
insb
mov
rolb
popfw
shlb
or
push
movsl
dec
mov
pop
icebp
test
inc
pop
addr16
xor
sbb
fldenv
push
jecxz
sub
nop
adc
mov
cli
xchg
ss
sub
inc
shrl
cmovno
push
inc
ret
std
fcomip
jecxz
out
push
icebp
adc
jo
push
inc
sbb
xacquire
pop
mov
push
xchg
cmp
jl
sub
movsl
lcall
cwtl
shll
push
cmp
jge
push
dec
mov
cmp
mov
es
sub
test
adc
or
testl
daa
repz
mov
scas
int
ljmp
cmp
mul
mov
xor
fsubrp
movsb
out
mov
pop
cmp
unpcklps
or
movsb
inc
sub
stc
stos
data16
xorl
cmpl
arpl
cmpl
xor
loopew
lods
jle
and
xchg
mov
test
jns
jae
inc
dec
arpl
sbb
sbb
incl
pop
xor
push
xor
test
inc
int3
int3
jns
mov
jl
inc
sti
mov
mov
sub
loop
push
xchg
addr16
mov
cmp
sbb
sbb
out
scas
out
jg
pusha
ret
repz
fwait
inc
roll
pop
aaa
push
nop
flds
jne
and
jecxz
xchg
xor
or
add
mov
std
loopne
xchg
and
inc
inc
inc
mov
imul
aad
cld
xchg
rorb
je
jb
sbb
imul
in
xchg
dec
inc
add
inc
xor
adc
fadd
xor
push
fcoms
cmc
mov
and
dec
fimull
inc
outsl
popf
inc
orl
jp
push
lea
pusha
jb
dec
pop
jle
arpl
clc
mov
je
data16
mov
xchg
add
insl
lcall
push
ljmp
pop
cli
imul
sub
jmp
in
in
scas
or
cmpsl
fistpl
mov
sbb
mov
test
pop
imul
add
mov
fdiv
pop
aam
push
aam
dec
scas
hlt
aas
push
adc
sbb
fistps
cmp
xchg
pop
mov
and
mov
ret
test
push
mov
dec
movsl
inc
lock
lea
jl
inc
xchg
sbb
sar
lret
faddl
hlt
xor
cltd
pushf
mov
and
ret
push
insb
adc
pop
sub
push
mov
rcrl
js
dec
mov
lods
adc
enter
loopne
add
xchg
mov
push
adc
ja
inc
repz
ds
inc
and
push
fs
sub
sbbb
xor
arpl
rcl
pop
mov
or
ja
iret
mov
mov
pop
pop
xor
xor
cmp
ds
hlt
cmp
ljmp
iret
add
mov
adc
sub
cmpsb
inc
inc
lea
and
scas
nop
pop
arpl
add
sbb
cli
ret
test
jae
cmp
js
es
xchg
jae
in
push
movsb
outsb
fisubl
fcom
xchg
sbb
dec
dec
orl
ret
xor
xor
push
mov
dec
andl
mov
add
and
popa
xor
sbb
and
push
js
rolb
mov
fcmovnb
jo
gs
inc
pop
cli
popf
xor
lcall
sbb
lahf
insl
mov
pop
xchg
inc
mov
and
cs
mov
cmp
jp
mov
imul
pop
adc
xchg
pusha
pop
sbb
adc
push
mov
aad
std
jmp
mov
outsl
mov
and
inc
aas
xchg
mov
ja
arpl
sbb
lods
xchg
mov
out
imul
push
push
cli
lea
test
add
push
fstpt
lret
xor
mov
imul
leave
sbb
cltd
jbe
imul
popf
repnz
push
adc
test
enter
test
out
mov
adc
ret
in
xchg
jecxz
push
add
rclb
cmpsl
sub
xor
jae
xor
and
addr16
negl
xor
mov
cmp
mov
xor
sub
popf
mov
cmpsl
fwait
movsl
lock
jo
push
vcvtsd2ss
and
lea
scas
cltd
fists
adc
inc
adc
ss
jl
jae
leave
mov
movsb
mov
std
ds
sub
xor
lret
push
in
aam
dec
adc
add
mov
outsl
mov
das
lret
inc
mov
in
and
int3
push
mov
and
ljmp
fwait
jbe
mov
imul
adc
push
out
js
add
xor
jno
ja,pn
je
repnz
cmp
add
add
push
cli
push
cli
divb
mov
add
insb
pop
add
daa
jle
dec
add
data16
add
fistpl
cmp
pop
and
push
out
inc
mov
test
dec
daa
aam
push
insl
iret
or
jp
adc
out
aad
lock
repnz
lods
popa
xor
stos
push
imul
int
movsl
sbb
dec
lods
fnstenv
pop
cmp
or
call
mov
cmpsl
jns
daa
mov
sbb
cwtl
mov
pop
cmp
mov
rep
mov
cmc
and
cmp
add
xchg
sub
out
mov
xchg
push
clc
addr16
lods
pop
dec
bound
addb
mov
xchg
lcall
int3
loop
adc
mov
jno
or
insb
fcoml
pop
push
or
push
loopne
xorb
sub
sbb
pop
movsb
cmp
movsb
mov
cmc
icebp
mov
daa
pop
dec
arpl
dec
sub
in
sahf
sbb
push
mov
sbb
inc
push
pop
xchg
dec
sub
mov
jo
adc
xchg
or
jb
jnp
jp
xor
je
nop
jnp
adc
adc
test
add
jle
and
dec
addr16
popf
sahf
aas
push
inc
and
pop
insb
out
popf
cltd
xchg
shll
and
push
and
fisttpll
int3
adc
shll
mov
xchg
mov
cli
enter
inc
fnsave
inc
add
call
or
jne
push
pop
nop
adc
mov
lock
xor
scas
gs
lahf
lock
ljmp
mov
lahf
cmp
jle
xchg
pop
xchg
or
dec
jg
cltd
outsl
xor
sbb
bswap
push
lods
imul
jb
dec
icebp
pop
dec
or
cmc
lea
mov
loop
add
hlt
cmp
shrb
stos
lahf
fmull
jle
loopne
sub
cs
ret
jbe
and
mov
sub
jl
jbe
loope
sbb
iret
in
sarb
jae
xchg
push
pop
mov
mov
ja
xchg
xlat
push
pusha
decb
add
pop
jle
mov
lea
push
dec
hlt
int3
inc
fiadds
add
lahf
inc
sbb
dec
enter
lock
and
clc
and
test
mov
jbe
push
cld
cmp
imul
sbb
les
cld
xchg
cmp
hlt
or
fldt
lds
ljmp
mov
xchg
jne
sub
sbb
aas
gs
inc
in
cwtl
lods
jns
mov
sti
in
fwait
lcall
fs
shll
insl
pop
outsl
ficompl
mov
movsb
push
ljmp
inc
xchg
push
xchg
xchg
or
out
dec
jne
clc
adc
adc
sbb
aas
add
mov
push
sbb
mov
mov
adc
xchg
shrb
int3
xchg
sub
dec
inc
pop
xlat
sbb
sahf
mov
mov
pop
stos
adc
loope
mov
test
adc
fnstsw
mov
mov
jle
and
xchg
xor
sbb
push
add
jbe
jg
in
mov
les
popa
inc
hlt
pop
in
xchg
test
sub
les
mov
xchg
stos
mov
cmpsb
lds
fcompl
inc
mov
mulb
sbb
fcoms
dec
sbb
cltd
aad
push
push
pop
arpl
repz
sub
xor
dec
or
cli
adc
mov
pusha
jg
ljmp
decl
sti
sarb
jnp
jnp
imul
push
xor
popf
divb
inc
pop
popa
shlb
dec
addr16
add
push
dec
fimuls
cmp
jp
fadds
sbb
inc
and
lods
or
aad
push
subb
sbb
xchg
sbb
addr16
int
sahf
or
out
pop
movsb
leave
push
imul
push
mov
aas
push
cwtl
dec
repnz
repz
sahf
aam
sub
pop
sub
data16
fsubrs
xor
push
inc
push
arpl
adc
std
cwtl
add
out
jne
gs
adc
pop
or
sub
jmp
jo
dec
into
leave
popa
pop
insb
or
imul
cmc
js
mov
or
clc
cmc
std
hlt
push
andl
mov
loope
in
jle
lock
push
cmp
mov
movsb
mov
sbbb
pop
cmpsb
inc
popf
rorl
aam
popf
out
loope
jne
inc
arpl
clc
lock
popa
inc
addr16
ljmp
roll
shlb
add
inc
push
pushf
add
bnd
sub
pop
shll
pop
adc
enter
jbe
mov
imul
mov
jae
insb
popf
std
or
jmp
cmp
add
mov
sti
test
mov
adc
and
xchg
loopne
mov
sub
push
mov
mov
mov
jmp
fsts
mov
or
gs
lods
xlat
fldt
jge
in
idiv
sarl
lods
pop
pushf
dec
push
mov
cwtl
icebp
xor
pop
and
scas
imul
adc
lahf
sbb
testb
js
add
sbb
ljmp
cmpsl
sub
sahf
and
dec
js
dec
hlt
loopne
inc
test
lret
pop
xlat
add
repnz
xor
mov
shlb
fld
test
push
loope
pop
cmp
mov
sarl
in
addr16
xor
cwtl
fs
aad
addb
fwait
movsl
sub
xchg
xor
fs
in
fisttps
dec
pop
push
cmpsb
mov
mov
or
call
jnp
movsl
gs
sbb
dec
mov
cmp
call
loope
pusha
imul
pop
lock
daa
insl
icebp
icebp
mov
xor
jae
ret
pop
adc
cmp
fs
les
or
mov
or
jle
outsb
cwtl
mov
mov
outsl
test
jno
cmpl
pop
mov
jge
xor
cltd
pop
pop
push
sbb
mov
data16
int
xor
sar
stc
or
jnp
inc
inc
xchg
mov
dec
add
mov
and
pop
js
mov
jnp
xor
mov
hlt
test
jb
outsb
shlb
push
xchg
stos
sub
xchg
mov
loop
mov
mov
aad
lock
jnp
jg
jmp
inc
and
add
mov
push
cltd
outsl
testl
push
in
ss
or
pop
in
testl
in
add
add
push
shll
outsb
testl
jge
ret
aam
jns
in
xchg
dec
sub
out
jecxz
hlt
ljmp
push
sub
stc
cmp
and
push
test
sub
loop
repz
stos
add
popa
pop
pop
xor
mov
jne
cmc
aad
mov
test
and
mov
cmp
add
outsl
mov
addb
add
sub
sarb
jge
xchg
sub
jno
pop
outsl
mov
mov
das
sbb
sbb
mov
mov
or
sbb
cmp
xchg
xor
adc
jns
js
ljmp
int
xchg
cs
xor
mov
xchg
or
leave
imul
xor
lahf
testl
cwtl
in
stc
sbb
dec
mov
mov
dec
mov
sbb
xchg
inc
pushf
or
push
adc
dec
aaa
aaa
loop
sbb
int
jle
or
fs
sub
pop
pop
sbb
nop
outsb
jb
or
shlb
int3
outsb
call
sbb
push
mov
lock
and
repnz
adc
iret
repz
lods
inc
mov
outsl
sbb
add
jge
mov
call
inc
sbb
test
dec
stc
or
stos
les
loop
adc
popf
adc
mov
imul
fimuls
sbb
xlat
stc
push
mov
aas
sub
add
xchg
pop
hlt
inc
or
in
roll
jle
jl
aam
sbb
subl
mov
mov
bound
inc
lea
les
aam
jg
rol
sbb
push
outsl
in
xor
inc
mov
pop
jno
fnstenv
jle
lds
cmp
imul
mov
imul
xchg
sub
in
sub
and
jle
int
rorl
dec
push
push
icebp
and
scas
out
mov
jl
sahf
sbb
or
xchg
jnp
and
das
cs
cmc
test
shll
inc
inc
aad
fs
pop
inc
jo
outsl
vpmacsww
push
xchg
in
and
stos
cmpsl
imul
pop
int
or
push
lea
push
arpl
jecxz
or
pop
js
outsl
cmpsl
pop
negb
push
sub
or
fiaddl
mov
mov
sahf
andb
arpl
xchg
jnp
fwait
add
lcall
push
repnz
xchg
jnp
jbe
test
mov
mov
mov
pop
or
imul
fdivr
push
mov
jg
shlb
sbb
push
adc
and
rcrb
jbe
xchg
stc
inc
pop
mov
test
mov
test
nop
lds
imul
sbb
cmp
ljmp
mov
pop
adc
out
negl
out
sbbb
mov
push
movsb
mov
les
inc
pop
aad
add
dec
sbb
cmp
xorl
mov
sbb
js
stos
pushf
aam
mov
cmp
dec
mov
push
ljmp
pop
adc
out
scas
js
dec
pushf
pop
inc
push
shrl
mov
repnz
in
lds
ds
iret
call
fwait
outsb
out
sub
inc
cmp
stos
cli
sahf
div
call
test
test
and
and
test
dec
jo
inc
adc
enter
cmp
mov
ss
sbb
aas
call
push
jl
mov
sbb
cld
xor
jl
dec
push
adc
sbbl
mov
addl
scas
out
test
out
push
rorl
or
lahf
push
mulb
jmp
std
add
push
je
adc
dec
cmp
dec
fimull
sub
or
lret
inc
repnz
push
jae
inc
mov
inc
push
jo
aad
push
ret
repz
out
aad
mov
push
inc
imul
cmp
push
ljmp
xchg
insb
xor
xor
std
stos
ret
inc
mov
push
call
jae
push
into
jb
negl
dec
sub
sbb
pop
in
sahf
jmp
mov
inc
ret
sub
fucom
aas
nop
pop
filds
es
mov
sub
repnz
loope
pushf
rclb
jg
xor
cld
inc
xchg
mov
sti
push
in
es
inc
xchg
icebp
dec
shl
iret
cmp
add
sub
xchg
sub
xor
pop
cli
sti
cli
lods
stos
bound
push
loope
push
sbb
jns
cmp
cmp
ljmp
push
cs
shll
decl
ret
dec
push
mov
fisttps
fiadds
testb
add
out
cmp
cli
test
push
dec
test
sub
cld
test
cmp
pop
iret
test
test
loop
xchg
lret
xlat
mov
xor
fs
mov
fimuls
jbe
xor
add
mov
test
dec
lods
stos
cs
call
icebp
add
jae
movsb
test
mov
dec
scas
cmpsb
mov
sub
mov
cltd
and
mov
ds
push
push
lret
sub
mov
addr16
xchg
dec
leave
push
cmp
sahf
ret
adc
xchg
addr16
das
stos
mov
inc
and
inc
mov
xor
test
push
mov
lahf
movsl
mov
mov
sub
pop
scas
les
sbb
mov
cmp
shrl
sub
decl
subl
aam
dec
jmp
sub
int3
jae
stc
stos
fsubrp
cld
sub
imul
les
mov
jbe
ss
fcoms
fnstenv
lds
pop
sub
gs
frstor
inc
sbb
lods
mov
js
aad
data16
sti
dec
fwait
pop
sub
mov
cmpsl
push
sbb
or
push
mov
mov
push
aam
mov
arpl
cmp
mov
sub
leave
push
sub
mov
testl
int3
cwtl
movsl
scas
enter
jg
and
sbb
cmp
jb
test
sub
push
and
popa
mov
enter
ds
lds
out
mov
inc
mov
sahf
movsl
jno
jno
int
fbld
jmp
mov
cmp
add
movsl
pop
xor
int
ficoms
adc
xor
add
insb
pop
add
push
cs
adc
xchg
sbb
ds
xor
rcrb
rol
mov
xor
mov
stc
gs
and
mov
loop
push
inc
mov
push
xchg
add
fimull
lcall
mov
mov
pop
movl
rclb
xchg
rep
mov
add
adc
test
inc
push
mov
sub
sahf
jne
inc
les
and
mov
xor
xor
mov
test
add
orb
xchg
jb
mov
mov
mov
or
lcall
enter
inc
nop
jns
lcall
jmp
and
push
xchg
add
stos
es
add
xchg
lods
test
pop
je
in
or
jns
mov
std
insb
sahf
mov
mov
sub
push
mov
rcr
sub
pop
cwtl
jecxz
inc
inc
outsb
test
daa
arpl
xor
sub
xor
dec
inc
push
insb
std
adc
mov
sub
lea
adc
ffree
jb
mov
fxch
mov
adc
pop
jge
sub
and
mov
sub
aam
in
inc
push
call
pop
gs
mov
sbb
inc
arpl
mov
mov
bound
inc
scas
push
jne
jecxz
jge
push
and
mov
lds
shrl
inc
pop
push
lret
push
cmp
pop
insb
test
push
lea
mov
xlat
mov
sub
xchg
test
add
jne
add
fsub
rcrl
stos
jae
mov
push
fs
xlat
xchg
adc
bound
leave
mov
mov
pop
cmp
in
scas
movsl
movsb
dec
fcoml
mov
insl
aas
aam
mov
lret
popf
mov
sbb
dec
sti
and
push
mov
test
add
inc
js
push
jbe
outsb
jecxz
int
repnz
sub
pop
shlb
mov
arpl
or
dec
xchg
and
movsl
fsts
cmp
repz
outsl
dec
mov
adc
data16
fisubs
enter
js
cmpsl
daa
outsl
inc
pop
sbb
xlat
xchg
fisubrl
dec
cli
lret
es
jne
aad
fisubs
cmc
mov
scas
test
xlat
cwtl
clc
jge
push
lret
cmp
xorl
out
loop
test
push
sub
movsb
cmpsb
sub
test
pop
icebp
scas
mov
inc
ljmp
lods
nop
repnz
fsubrp
inc
inc
push
shrb
mov
test
mov
mov
fsubr
mov
jae
inc
mov
je
in
push
dec
and
dec
or
mov
and
sarb
popf
orb
and
inc
out
stos
pop
ss
or
add
hlt
xor
jno
xchg
sbb
clc
ja
pop
mov
inc
pop
lock
mov
ret
loopne
lcall
ret
pusha
lahf
or
add
xchg
jnp
sub
rorb
out
pop
xor
cli
mov
adc
cmp
and
lods
icebp
shlb
stc
adc
iret
shll
pop
enter
push
shl
mov
adc
dec
pop
test
in
mov
cltd
negl
lahf
test
adcl
jge
and
aad
sub
lcall
cmp
inc
mov
mov
lret
icebp
push
and
test
cmc
int3
jo
movsl
sub
fs
mov
in
sub
mov
xchg
aad
adc
dec
popa
sbb
ja
in
aad
mov
mov
inc
mov
pop
in
jno
repnz
and
mov
lret
lret
dec
mov
and
sbb
mov
fldln2
stos
or
add
leave
mov
shlb
xchg
iret
inc
das
inc
aam
les
mov
sbbl
pusha
mov
add
rcll
sub
xor
fwait
and
dec
adc
stos
ret
shlb
push
sbb
ljmp
arpl
push
test
movsl
pop
sbb
outsl
rcrl
jnp
mov
sahf
cmp
xor
repnz
and
stos
repnz
mov
fadd
mov
mov
data16
test
pop
xchg
inc
mov
cmp
scas
jecxz
arpl
enter
dec
andb
jmp
and
int3
repnz
mov
dec
sub
jmp
dec
loopne
mov
add
fsubrs
pushf
mov
push
cwtl
dec
dec
fildll
ret
in
pop
daa
pop
mov
jmp
aam
sbb
leave
js
lahf
ss
test
lret
ljmp
cmpsl
in
fbld
sti
cmc
jae
jge
inc
aad
pop
dec
sti
cmp
jo
arpl
or
xorl
test
test
call
cmp
push
push
jmp
jecxz
lods
leave
push
mulb
jg
and
mov
pop
or
jo
xchg
push
push
es
jae
clc
fadd
ljmp
shl
inc
into
data16
loopne
mov
and
lret
loop
sar
mov
mov
enter
mov
or
cmp
adc
mov
mov
test
jns
mov
ja
sub
imul
or
jno
mov
sub
out
xor
aaa
pop
rol
hlt
xor
int
dec
clc
addr16
adc
les
jmp
jp
pop
cmp
fdivl
add
push
mov
xchg
call
push
in
push
notb
adc
movsl
addr16
mov
mov
fwait
fs
cmpl
xlat
decb
add
xchg
pinsrw
jno
lds
mov
in
outsl
sti
adc
adc
mov
loop
testl
pop
loope
mov
xchg
bound
mov
push
shrl
mov
dec
sbb
sbb
mov
jno
aad
xchg
sbb
repz
enter
mov
sbb
cwtl
call
mov
stos
aad
cmpsb
cltd
mov
fisttpll
hlt
cmp
rcrl
mov
mov
arpl
adc
sbb
adc
cmc
in
xchg
sub
lds
push
mov
pop
fists
loopne
popf
cmc
push
ret
xor
adc
repz
inc
mov
daa
cwtl
xchg
xorl
pop
jge
sbb
jmp
push
jle
inc
fsubrl
lahf
pop
inc
cmp
jne
inc
adc
out
jo
fldl
aaa
icebp
mov
ret
sub
add
add
daa
jbe
idivl
mov
out
cmc
inc
popf
cli
add
insb
pop
add
push
pushf
subb
out
notb
mov
adc
ss
mov
dec
or
inc
int3
push
mov
xor
fldl2e
icebp
cmpsl
mov
loope
mov
dec
pop
dec
pusha
fs
sub
insl
inc
mov
xor
cmp
cmc
xchg
imul
orl
je
cmp
xchg
pop
push
int3
fcompl
xor
cmp
lret
js
lahf
xchg
mov
and
add
roll
adc
arpl
or
adc
ds
addl
in
or
sub
popf
mov
cmp
add
imul
fcmovb
pop
add
loope
adc
push
ret
xchg
repnz
push
int3
scas
pop
aaa
out
repz
insb
jb
addr16
loop
push
or
fwait
ret
xor
in
lods
cmp
insb
add
jg
js
jl
xchg
loop
and
fcomp
scas
test
mov
scas
cltd
cmpsl
cmp
idivb
ljmp
or
mov
pop
mov
movsb
or
push
xor
ds
adc
and
lock
in
mov
pop
xchg
xchg
xor
lahf
dec
scas
xchg
lods
std
cmp
bound
sbb
push
mov
movsl
jbe
jge
in
mov
lahf
in
clc
xchg
clc
stos
or
dec
or
sbb
andl
and
add
cltd
jle
adc
jns
fwait
je
and
mov
mov
cli
xchg
fdivrl
inc
inc
sahf
data16
negl
jno
mov
ja
das
pushf
stc
rcrb
lods
jo
sarb
ficomps
fidivrs
lret
out
ror
dec
push
sarl
cmp
hlt
adc
adc
xchg
jl
ja
xchg
add
out
test
cmp
and
xor
and
adc
je
insb
and
jmp
mov
in
inc
rorl
mov
in
mov
xchg
int
sub
scas
mov
adc
lods
enter
insl
dec
adc
outsl
outsl
mov
sub
imul
cs
pop
push
lcall
sbb
js
mov
sub
push
shl
inc
adc
fsubs
push
sbb
dec
push
inc
rorl
and
inc
add
or
sbb
sbb
and
sahf
movsl
mov
out
or
xchg
and
cltd
add
movsb
xchg
adc
pop
incl
or
xchg
adc
repz
fwait
mov
push
cwtl
hlt
push
sbb
xchg
mov
mov
cmp
pop
mov
pop
pushf
push
andl
cmp
pop
lcall
add
jne
push
pop
sbb
adc
lods
xchg
push
arpl
mov
mov
ss
clc
mov
cmp
adc
push
cmp
stc
cld
add
jge
adc
jno
mov
jne
lcall
into
jl
into
test
out
xchg
mov
mov
jbe
jae
mov
sti
out
dec
test
inc
js
es
mov
es
cmp
inc
push
rep
cmp
jbe
in
cmp
mov
movsw
insb
or
ficoms
xchg
push
xor
jge
xor
mov
arpl
jns
add
int
lahf
jnp
cmp
outsb
repz
jecxz
mov
xorl
fisttps
inc
in
pop
xchg
movsb
xchg
push
leave
daa
icebp
xor
imul
xchg
mov
add
mov
jmp
cmp
aaa
xchg
jmp
dec
loopne
fsubs
int
sbb
jb
icebp
fdiv
dec
or
pop
repnz
mulb
pop
jle
sub
or
dec
mov
out
shlb
mov
add
shrb
mull
bound
xor
scas
insl
test
pop
dec
pop
leave
shrb
out
in
xchg
cmp
push
gs
jle
mov
sbb
dec
sub
scas
dec
push
lock
mov
inc
enter
push
fidivrs
xchg
cli
mov
dec
fldt
cwtl
imul
push
adc
out
jnp
daa
jno
jcxz
add
loope
mov
movsl
pop
xor
pslld
sahf
ds
cmp
sbb
xchg
js
fwait
or
xchg
push
sarb
xchg
mov
mov
or
in
in
pushf
cmpsl
inc
xor
fldpi
push
cmp
icebp
pop
cltd
fmul
jb
ds
js
mov
sti
imul
and
jl
xor
pop
adc
ja
aaa
mov
mov
imul
sub
pop
sub
adc
fdivrp
xchg
xchg
gs
iret
mov
push
call
jne
out
inc
lods
mov
imul
xchg
mov
mov
cld
cltd
cmp
pop
jecxz
outsl
in
stos
int3
rolb
push
mov
ljmp
outsb
clc
mov
les
and
inc
xchg
cs
and
mov
add
sahf
insl
outsl
mov
pop
daa
inc
outsb
mov
mov
sub
lds
push
cmp
cltd
shl
in
lea
lds
dec
jle
sbb
fsubrl
lock
aaa
lea
pop
lcall
push
add
mov
shl
xchg
dec
sarl
mov
jnp
ret
push
jmp
and
sahf
pop
jle
mov
sbb
add
imul
xchg
push
xchg
add
dec
adc
je
jo
jecxz
mov
pop
inc
mov
loope
push
mov
mov
insb
movsl
dec
dec
push
leave
pop
dec
movsb
ljmp
xor
dec
lock
xlat
jbe
jle
movsl
fdivs
aad
repz
aam
arpl
cmpb
mov
rcll
or
stc
pop
adc
push
out
movsb
imul
or
cltd
ljmp
push
push
mov
fcomi
pop
mov
push
lcall
xchg
and
popa
fs
pop
popf
into
hlt
xor
sar
cmp
pop
adc
mov
pusha
and
adc
mov
scas
addr16
cmp
dec
icebp
lret
cmpsl
rorb
or
mov
add
or
mov
xchg
and
add
inc
pop
testb
pop
and
pusha
xchg
in
sbb
aaa
cmp
inc
leave
test
xchg
sub
mov
mov
fs
repz
scas
fstps
jnp
popf
pop
or
cmpsl
push
push
nop
and
ret
jge
test
hlt
nop
cltd
clc
movb
aam
scas
jns
jp
xor
mov
out
ja
sbb
add
add
mov
xlat
lea
mov
add
add
add
mov
test
outsb
jle
xchg
push
adc
inc
add
sub
mov
bnd
ljmp
xor
cli
push
cmp
mov
dec
jb
sets
test
adc
sub
mov
or
in
ljmp
inc
iret
cmp
or
xor
nop
sub
loope
ret
cli
mov
pop
sbb
int
dec
pusha
out
lret
mov
sub
fadd
push
mov
in
and
rol
lods
lds
lds
inc
dec
xlat
mov
inc
fstpt
test
dec
movsb
and
push
inc
lods
fists
jge
push
xlat
mov
in
decl
jmp
cmp
adc
cltd
repnz
hlt
xchg
pop
pop
in
cmc
loop
cli
int
xchg
sahf
pop
stc
xchg
cmp
mov
inc
xorb
shrl
sbb
jae
add
sub
clc
jnp
cmp
in
cmpl
xchg
add
mov
mov
das
int
mov
mov
je
lock
push
mov
pop
pop
mov
in
sub
inc
xchg
and
fucomi
gs
ds
or
ljmp
test
dec
sbb
adc
loop
pop
sub
je
dec
and
test
xor
push
lcall
jp
popf
xor
jg
pop
das
push
jg
add
pop
and
push
mov
jne
mov
loope
xchg
shrb
add
inc
pop
jb
inc
push
icebp
stos
jle
mov
pop
nop
and
sub
mov
dec
and
sar
push
pop
add
imul
jle
incb
and
ret
pop
cmp
hlt
subb
fcmovu
jmp
mov
frstor
jne
movsl
cmp
and
sbbb
test
xor
xchg
ljmp
sar
jl
js
test
aas
mov
mov
lcall
loope
in
push
loope
arpl
insb
dec
push
lret
lock
mov
cmp
nop
sahf
jmp
in
outsb
cmp
inc
jne
in
cmc
push
mov
test
push
sub
loop
and
xor
lods
adc
aaa
lret
into
push
push
gs
jb
aas
push
mov
scas
inc
jb
mov
scas
mov
outsb
subb
pop
clc
lods
and
mov
rolb
ss
dec
call
pushf
ficomps
les
shl
js
xchg
jnp
mov
xchg
pop
and
mov
xor
and
aam
mov
push
jge
enter
shrl
and
xlat
mov
adc
add
jl
jnp
push
jle
inc
push
int
xor
dec
and
and
in
pop
imul
fnsave
cwtl
mov
jp
mov
mov
pop
ret
push
adc
or
add
sub
inc
xchg
in
push
lahf
movaps
cmp
in
lds
xchg
enter
scas
imul
pop
lcall
scas
add
js
xchg
xchg
jmp
inc
mov
xchg
incb
push
pop
and
sub
jmp
out
enter
mov
adc
xorb
imul
push
fcomi
dec
lock
adc
ja
adc
xchg
repnz
nop
shl
stos
mov
into
leave
rorb
out
mov
lds
cmp
lods
ret
jmp
cld
cmc
pusha
inc
xchg
loope
lahf
aas
popa
mov
lret
inc
gs
sarb
cmp
mov
inc
mov
push
in
add
icebp
call
add
cmc
lds
pop
push
push
addr16
inc
mov
ret
movsl
leave
popa
mov
sub
xchg
insb
das
dec
mov
test
cs
or
dec
subb
stc
loop
add
mov
push
fstpl
push
cmpsl
mov
call
adcb
inc
ret
out
mov
out
dec
repz
or
adc
xor
loopne
adc
in
iret
imul
repz
xor
cmp
xor
int3
imul
mov
sti
push
jae
es
push
inc
jb
dec
movmskps
and
push
cmp
les
push
jmp
adc
filds
or
sbb
mov
add
in
mov
ret
cmp
cli
test
mov
push
or
and
cmpsl
add
ljmp
scas
in
or
cli
adc
int3
bswap
mov
adc
jae
sub
rcr
jl
fistpl
call
movsl
xlat
inc
fisttps
gs
sbb
test
cmc
iret
cmp
mov
movsl
scas
sbb
mov
jb
les
cmp
stos
std
movsl
insb
scas
int
and
lods
mov
dec
divb
mov
jge
jl
fmuls
cmp
in
ret
xor
imulb
pop
push
sub
bound
loopne
mov
sbb
mov
hlt
inc
push
fs
loopne
je
mov
fidivrl
out
or
dec
sbb
inc
cmp
outsb
movsl
push
jmp
adc
lea
mov
mov
xchg
mov
test
in
mov
mov
adc
push
push
push
das
pop
sub
jg
cmpsl
dec
push
cmp
xchg
insl
sbb
inc
and
ljmp
filds
inc
mov
lock
cmp
inc
xchg
mov
call
repnz
iret
lods
and
jne
ficompl
cmpsb
das
cmp
xorl
mov
and
jae
dec
mov
movsb
sub
insl
and
ds
sbb
pop
and
stc
bound
cmp
add
or
jnp
mov
repnz
cltd
xchg
push
xor
icebp
outsb
jmp
dec
cmpsl
add
fwait
in
lods
lahf
rolb
imul
or
lcall
mov
adc
sub
mov
or
aas
enter
and
fnstsw
and
dec
fcompl
shl
fwait
in
fsubs
jp
in
inc
sahf
xchg
das
and
pop
mov
adc
adc
dec
jge
rolb
iret
out
mov
cmp
mov
cli
jo
outsl
mul
mov
mov
lcall
sbb
or
aam
xor
pop
xor
add
jg
stos
mov
cmpsb
add
add
insb
pop
add
or
sbb
mov
rcll
and
lods
leave
push
enter
sub
scas
mov
imul
cmp
shrb
cmpsl
xor
rol
jno
sub
in
test
stc
stc
icebp
iret
mov
lods
mov
pop
mov
setno
clc
add
test
pop
inc
lret
dec
xchg
shlb
sub
mov
hlt
dec
or
sarl
hlt
aas
gs
push
mov
sarl
cmp
fisubl
lret
std
mov
pop
mov
aam
sub
lahf
push
pop
lods
sbb
jnp
add
fwait
test
ja
clc
in
cmp
rcl
lcall
popa
cltd
insl
or
sub
dec
rcr
adc
or
mov
mov
lahf
xor
xchg
mov
lods
leave
fimuls
das
jp
ret
add
lods
test
xlat
std
dec
cmp
xor
pop
ss
popf
sub
int
ret
mov
sbb
add
jmp
pop
add
mov
shr
xor
lock
lret
into
popa
cwtl
rcrl
adc
mov
jns
mov
mov
or
or
leave
rcrw
clc
enter
dec
dec
fstps
into
xchg
and
mov
jecxz
in
lret
subb
and
inc
out
fisubl
scas
mov
aas
jge
jmp
lret
dec
push
adc
pop
rorl
imul
xchg
ja
sub
xor
aam
xchg
jbe
adc
pop
dec
mov
fwait
pop
arpl
push
add
mov
repz
lods
cmp
rcr
jmp
push
movsb
mov
inc
xor
js
xor
mov
bound
loope
inc
dec
jb
or
push
leave
lds
sub
push
push
das
push
sbb
das
fwait
and
sti
and
or
cmpsb
icebp
insb
xor
ret
and
add
into
adc
mov
test
jnp
add
stc
adc
add
mov
call
stc
mov
mov
push
sbb
sar
cvtdq2ps
dec
cltd
out
or
mov
fisttps
inc
and
lock
insl
loopne
ss
cmpsb
arpl
aaa
dec
loop
pop
data16
loopne
pcmpeqw
scas
sbb
jmp
adc
sub
jno
inc
push
aaa
mov
insb
push
or
fwait
aam
pop
scas
decb
loop
rclb
sti
mov
ret
outsl
mov
fbld
ds
add
cmp
arpl
jbe
pop
test
jl
pushf
roll
pop
popf
inc
cmpsb
fildll
out
mov
jg
push
add
xor
jno
xchg
pop
xchg
js
push
jp
add
xchg
pusha
xor
mov
jae
jnp
or
mov
lods
inc
cmpsl
iret
mov
or
jge
sbbl
sbb
xchg
mov
cmp
lret
repz
adc
orb
rorb
or
in
jns
or
fsts
push
push
mov
and
add
roll
add
jmp
jmp
push
sarl
orb
out
mov
mov
lods
stos
ffree
outsb
xor
jo
in
cmpsb
xor
push
push
add
lods
push
aad
push
push
pop
or
jno
sbb
add
sahf
mov
stc
mov
arpl
xchg
mov
sub
pop
jge
popa
ss
aam
mov
mov
pop
fnstsw
shlb
push
fnstenv
int
enter
xchg
stos
push
jle
mov
pop
fldl
adcl
and
mov
fildl
add
mov
push
sub
out
lret
push
xchg
mov
lret
add
add
xchg
std
cmp
cs
sub
jecxz
sub
aaa
leave
pop
out
mov
rcrl
add
or
push
sti
add
pop
mov
ss
in
pop
lods
push
push
clc
stos
cmpsb
add
and
mov
popl
mov
pop
lds
dec
insl
and
inc
cltd
inc
jne
or
inc
cld
push
sbb
fdivrl
enter
adc
mov
arpl
outsl
nop
ror
ret
push
mov
mov
int3
mov
xchg
adc
dec
push
pop
inc
mov
aaa
shl
sbb
xchg
lret
jge
push
cmpsl
or
repz
push
mov
incl
ret
inc
loop
int
sub
cmc
jle
jecxz
cwtl
pop
bnd
lret
xor
sbb
adc
push
adc
adc
jnp
aaa
jo
push
push
add
lret
adc
sbbb
cld
scas
mov
jae
sub
sub
pop
aas
mov
pop
ljmp
mov
in
and
or
adc
popa
xchg
mov
fcmovnb
lock
ficoml
pushf
in
sub
mov
push
pop
negl
aam
and
es
shlb
xor
clc
cld
repnz
mov
push
call
jmp
xor
ret
xchg
or
lock
mov
enter
lahf
aam
repnz
insl
lret
aaa
xchg
cwtl
shrb
sub
lods
xor
pop
or
mov
lret
aam
dec
fsubrl
or
push
lret
je
lods
jne
add
das
push
pushl
dec
test
add
mov
mov
sub
pop
jbe
xchg
dec
sub
cmpb
pop
mov
add
push
aad
jns
adc
cmp
xchg
test
hlt
mov
inc
pop
mov
xor
xlat
push
cvtps2pd
popl
test
mov
dec
cli
leave
loop
push
dec
sbb
push
push
mov
int3
dec
cmp
cmp
mov
dec
cmpsb
sub
lret
adc
cmp
mov
outsb
mull
mov
xchg
ss
pop
repz
cs
jmp
out
shll
rcl
lea
inc
test
ret
lock
cmp
cmpsb
pushf
xor
and
or
cmp
cmp
inc
arpl
in
push
push
xchg
xor
orb
cmc
je
fbld
subl
mov
xchg
mov
lret
mov
jmp
pop
popf
and
add
and
fildll
and
fnstcw
cwtl
loop
les
cld
jp,pt
push
mov
jo
repnz
cmpsb
shlb
and
lods
push
or
add
sbb
out
cmp
repnz
mov
jmp
insb
pop
add
aad
es
jns
icebp
sbbb
outsl
lds
in
jp
jno
cmpsl
loopne
pushf
hlt
pop
popa
loopne
mov
sub
or
outsl
mov
and
sbb
in
daa
xlat
je
add
or
xor
out
mov
cwtl
jo
loope
sub
negl
ljmp
mov
shll
lcall
dec
pusha
dec
jp
mov
push
ret
xchg
sub
jno
xor
adc
push
adc
orl
ds
adc
push
jg
cmp
pop
notb
pop
inc
push
pop
lods
dec
jecxz
mov
inc
xchg
xchg
mov
inc
dec
imul
xchg
scas
outsb
mov
subps
mov
cmp
hlt
sub
push
inc
lret
and
sbb
pop
repz
pop
xchg
jnp
xchg
jns
stc
sti
pop
data16
fbstp
shlb
cli
adc
jecxz
add
fisttps
setno
dec
fcompl
insb
mov
dec
in
dec
mov
lds
mov
insl
ret
adc
enter
inc
test
test
push
test
je
repz
mov
sarb
pushw
nop
mov
jb
xor
cmc
or
mov
ffree
mov
aaa
insb
out
add
js
cmp
cli
into
popa
fstpt
addr16
rolb
fs
int
nop
imul
out
outsl
dec
push
out
lret
cmpsl
ficomps
rorb
push
mov
sbb
add
inc
mov
sbb
lock
test
ret
lods
call
insb
pop
jmp
lods
pop
xlat
in
lcall
insl
xor
mov
movsb
sub
pop
stos
lods
and
push
mov
inc
ljmp
and
add
arpl
aaa
or
mov
jae
inc
lret
xchg
addb
out
in
movsb
cmp
add
xchg
jne
push
mov
mov
addr16
jg
out
sbb
outsl
fs
adc
cld
test
cmpsb
xor
and
jns
orb
sbb
push
jl
dec
lock
push
andb
leave
repnz
mov
loope
or
and
shlb
pop
decl
inc
mov
sub
mov
xchg
lret
loop
and
and
fcmovne
push
or
mov
sbbb
push
mov
xchg
add
les
add
lods
add
mov
shl
jne
xchg
mov
add
cmpsl
out
in
and
fcoms
lcall
pop
xchg
add
je
ret
xorb
pop
or
movq
js
or
decb
inc
movsl
roll
sar
addr16
dec
lret
cltd
int
jle
adc
cmp
or
pop
jb
loopne
cltd
dec
sarl
xchg
out
mov
dec
xchg
cmp
dec
in
je
pop
stos
ss
and
inc
mov
insl
in
xchg
scas
or
and
mov
stos
sub
fidivrs
xor
sbb
jmp
mov
jns
mov
mov
cmp
pop
sub
je
inc
test
je
cltd
repnz
aaa
pop
addr16
rcrb
fstl
mov
cs
push
hlt
fucomp
cmp
mov
das
ret
jno
add
ret
adc
arpl
enter
fnsave
mov
popf
sarb
pusha
push
push
sbb
ret
cmpsb
inc
jns
in
jge
je
sbb
xlat
inc
mov
push
das
data16
imul
and
mov
pop
in
jae
lcall
nop
gs
inc
adc
out
icebp
adc
stc
inc
mov
js
cld
mov
ss
fwait
inc
in
xor
dec
mov
push
push
mov
jg
jns
inc
mov
sub
lcall
movsb
sub
sbb
cli
aas
cmp
lret
xor
pop
lcall
push
in
jne
insb
xchg
mov
cmpsl
mov
adc
jbe
inc
popa
push
jle
jne
data16
mov
pop
cmp
cmp
sbb
int
call
sbbl
inc
push
inc
or
cld
loope
movsb
cmpsl
cs
out
sti
les
daa
dec
jge
add
stc
sbb
enter
xor
pop
pop
fs
inc
and
jge
std
rcrb
jo
jbe
mov
rol
adcb
dec
xchg
cmp
and
cmp
jnp
nop
xor
pushl
cmp
orb
sbb
cs
push
je
call
xchg
dec
cmp
sbb
mov
lds
xlat
adc
cmp
out
aad
mov
data16
loope
jo
mov
fcmove
jecxz
mov
lods
rorl
imul
neg
rorl
dec
sarb
inc
gs
test
repnz
and
call
jno
rcll
dec
imul
in
and
test
mov
push
adc
arpl
xor
fldcw
in
pushf
test
test
mov
leave
stos
cmp
push
sub
and
pop
jnp
icebp
adc
scas
push
mov
jp
xor
pop
bswap
xlat
pop
xchg
add
push
push
and
aas
push
add
push
jb
enter
insl
fidivrs
idivb
xor
dec
cli
jb
sbb
xchg
lea
aas
jne
xor
lret
inc
mov
push
clc
repz
mov
mov
scas
push
mov
adc
insl
jae
jmp
jno
and
mov
dec
sub
sarb
mov
xchg
pop
cmp
out
imul
in
mov
inc
orl
add
mov
sbb
push
or
cld
or
and
fsubr
out
pusha
lods
or
adc
adc
fcomps
mov
add
lcall
fwait
pop
je
xor
movsb
shlb
jmp
xor
pop
lods
stos
fs
xchg
popa
mov
mov
pop
pushf
int3
cli
or
add
cmp
and
add
scas
test
lret
xchg
push
jno
xor
js
xchg
lods
mov
gs
or
pop
xchg
and
jno
insb
pop
xchg
xchg
add
inc
mov
cmpsb
outsl
lret
lahf
negl
repnz
sub
xor
jge
adc
test
rcrb
push
push
jmp
sub
fcompl
mov
pop
lcall
pop
pushf
inc
and
test
outsb
enter
pusha
xor
push
jo
aad
pusha
cld
jne
inc
cld
hlt
adc
insb
pop
add
push
clc
aam
fisttpll
push
stos
pusha
js
jecxz
inc
push
sub
into
icebp
push
xorb
sbb
jmp
stc
mov
out
ret
inc
cmp
leave
icebp
scas
adc
pop
xor
xlat
icebp
fisttps
xor
or
add
cmp
add
lods
cmp
push
outsb
stos
xchg
lea
sbb
xor
lret
sbb
mov
cmp
aaa
mov
cwtl
insl
fidivrs
pop
in
test
dec
or
fdivs
popf
js
fdivr
pop
rorb
mov
mov
mov
insb
data16
pop
jns
dec
cli
movsb
and
incb
inc
inc
stos
fmull
loope
loopne
jnp
adc
xrstor
push
mov
dec
cmp
xor
daa
dec
adc
cmp
les
sbb
inc
and
cwtl
nop
cld
fildl
cmp
pusha
fistpl
and
push
xor
mulb
xor
mov
sub
pop
lock
insb
jp
inc
push
cmp
sbb
inc
std
test
leave
sahf
push
and
dec
dec
xchg
and
jecxz
orb
xlat
push
inc
add
cmpsl
mov
data16
iret
mov
fildl
xor
dec
pop
xor
pop
call
adc
push
mov
sub
cmp
fistpl
js
popa
sub
xchg
cmp
lcall
mov
popa
mov
or
cmpsb
and
jle
das
push
shrb
jns
call
pop
jnp
pop
stos
in
scas
fwait
outsb
push
add
mov
outsb
adc
adc
scas
shl
or
cld
gs
inc
clc
inc
add
jo
add
repnz
js
aad
push
mov
add
pop
lea
test
and
sbb
cli
icebp
fimuls
ss
adc
ljmp
mov
mov
or
pop
insb
cmp
push
decb
sahf
js
pushf
int3
test
and
imul
nop
dec
nop
mov
push
jnp
mov
push
dec
mov
push
ds
in
mov
pusha
ja
mov
test
push
js
mov
loop
cmpsl
cmpsb
and
mov
imul
lods
rolb
cmc
lahf
jg
pusha
dec
out
pusha
dec
ret
and
adc
fmuls
or
mov
xchg
push
xchg
adcb
imul
push
adc
sbb
cld
pop
sub
sbb
icebp
inc
and
cmp
out
cmp
push
inc
movb
fists
jecxz
inc
mov
sbb
mov
xchg
jae,pn
mov
int
dec
mov
callw
mov
xchg
mov
pusha
sub
mov
and
outsl
daa
xchg
add
mov
xor
push
xchg
bound
jb
jl
mov
xorb
cmc
lahf
xor
pushf
inc
mov
in
std
inc
arpl
scas
repz
icebp
dec
adc
push
ss
and
cwtl
sub
out
cwtl
xchg
lds
mov
push
mov
add
test
into
or
scas
inc
pop
pop
je
sbb
in
inc
aad
lods
push
cmp
pop
into
andb
imulb
cmp
cld
mov
adc
mov
cmpsl
sbbl
sbb
call
jg
les
inc
xor
inc
jbe
mov
subb
out
stos
lock
inc
jmp
lret
cltd
adcl
pushf
fsubrp
pop
cmpsb
sbb
or
das
push
inc
clc
shrl
cld
sub
shr
movsl
or
into
pushf
pop
cs
cmp
inc
cwtl
ljmp
and
push
cmp
dec
out
adc
jb
std
imul
push
or
dec
jne
dec
subl
sub
cli
sub
jmp
inc
xor
fstps
aaa
bound
dec
arpl
icebp
movb
sub
jle
movsb
or
xor
test
arpl
outsl
ja
dec
mov
inc
mov
xchg
pop
addr16
xchg
push
push
leave
pop
inc
lret
scas
fisubrs
fimull
ljmp
or
mov
mov
jmp
jnp
jae
sub
mov
daa
fdivr
mov
das
mov
insl
jno
pushf
mov
repz
push
push
aam
inc
jg
in
inc
lods
fs
sub
ljmp
invd
and
adc
push
cwtl
iret
inc
adc
inc
loopne
add
mov
push
adc
cmp
jmp
jnp
add
scas
dec
les
dec
fcmovnbe
hlt
xchg
jbe
sbb
jno
nop
cwtl
aas
push
icebp
push
mov
lods
test
mov
pop
cmp
ljmp
jb
pop
les
jns
cs
movsb
xor
int3
sarb
ds
aad
xor
xchg
call
pop
xor
xchg
dec
mov
xchg
adc
mov
arpl
push
jge
push
cmpsl
jecxz
addr16
out
and
mov
mov
sti
into
cmpsl
dec
cmc
test
repz
sub
int
sahf
pop
inc
shl
sub
xchg
lret
push
push
jge
or
in
inc
inc
mov
rorl
shrl
icebp
dec
or
clc
adc
mov
sti
fidivs
lcall
sahf
test
push
fcompl
lcall
mov
pop
or
fsubl
addb
pop
sbb
fnstsw
pop
sbb
and
cmp
inc
xor
repnz
and
or
cmp
ja
sbb
fcompl
fcomip
lret
sbbl
xor
in
xchg
lcall
jg
ja
outsl
xchg
mov
loope
or
cmp
scas
ja
aam
lret
jp
push
dec
xor
outsb
jne,pn
mov
icebp
loopne
fiadds
jno
xor
fs
inc
popf
adc
lahf
enter
and
gs
dec
lods
cltd
xchg
ss
sbb
fidivs
mov
je
daa
jbe
or
sbb
test
out
mov
adc
mov
cld
in
incl
xor
stos
lods
and
dec
inc
call
push
lcall
fstpl
mov
jge
lahf
inc
push
jmp
movsl
jge
mov
mov
lds
stos
mov
cwtl
dec
inc
sub
enter
mov
dec
mov
movsl
arpl
jg
leave
loop
clc
add
sbb
stos
add
xor
mov
clc
or
xor
push
popf
push
stc
addb
int3
ds
aas
in
mov
pop
faddl
xchg
xor
adc
inc
pop
call
jno
push
popa
lret
sbb
add
mov
jg
fists
arpl
into
mov
pop
add
fistpl
xchg
sbb
sahf
adc
popa
out
sar
popa
sahf
testl
inc
cwtl
fcom
and
sar
push
sti
mov
jecxz
or
das
outsl
sbb
hlt
sbb
pop
test
fwait
pop
push
and
int3
out
iret
mov
mov
push
xor
cmc
rclb
ret
jae
jecxz
push
adc
xchg
rcll
dec
push
xor
push
cmpsl
cmp
cmp
movsl
mov
in
adc
cmp
or
lods
mov
clc
cli
sbb
dec
loope
mov
adc
mov
fucomip
sub
jb
and
mov
inc
or
xlat
js
push
fs
aad
and
and
xchg
push
mov
sti
xor
mov
fbstp
cmpsl
das
sbb
call
mov
hlt
lahf
pushf
cmpsl
pop
out
xor
jge
outsb
push
loopne
fwait
rcrl
jp
nop
mov
and
adc
mov
dec
and
je
or
pushf
dec
hlt
cmp
cs
xor
or
mov
popf
popa
and
and
mov
inc
xchg
xor
in
in
adc
in
fs
lea
ret
lds
xor
and
sti
cs
inc
push
andl
negb
dec
outsl
orb
sub
sub
or
sbb
decl
push
in
jns,pt
test
cmp
or
movsb
dec
sub
and
ss
insl
adc
mov
std
xchg
pusha
fnstcw
fs
pop
inc
mov
cmp
ret
jbe
or
hlt
shll
push
movsb
xchg
cwtl
cmp
xchg
adc
and
testl
ret
push
pop
popa
adc
mov
dec
inc
push
aam
add
mov
rcll
dec
negb
cmp
cmpsl
popf
mov
dec
popa
cld
loopne
clc
and
mov
cmp
mov
lods
inc
sbb
outsl
mov
roll
std
xor
out
jae
repnz
mov
out
sub
stc
adc
jle
sbbl
sbb
mov
fstps
iret
loope
or
arpl
xchg
shrb
add
enter
nop
sbbb
pop
repnz
jne
scas
mov
and
pop
cmc
fwait
or
fildl
sbb
scas
in
dec
addr16
and
add
fs
xchg
addb
test
scas
cli
mov
lret
popa
pop
bound
leave
das
faddp
jmp
mov
mov
jmp
ja
hlt
cmp
in
sub
xchg
sub
or
repnz
mov
jo
leave
neg
mov
push
inc
adc
ficoms
mov
mov
jge
mov
or
fildl
xchg
nop
jp
mov
movb
push
ds
mov
call
push
dec
push
ss
adc
jecxz
imul
and
xor
xchg
add
sub
test
cli
push
jae
add
out
and
push
repz
pop
and
addr16
pusha
mov
shr
fisttpl
pop
cmpsb
xchg
jg
jle
cltd
pusha
ja
les
imul
shll
mov
cmp
leave
dec
mov
mov
or
in
mov
mov
sbb
das
inc
dec
jle
aam
movsl
jbe
in
cmpl
es
push
cli
jne
jne
xchg
xor
sti
nop
mov
dec
push
ret
mov
inc
mov
mov
sbb
cmp
pop
test
cmp
test
out
xor
jae
push
pushf
mov
shl
enter
stos
dec
or
ljmp
popa
mov
push
std
pop
popf
push
and
mov
subl
adcl
stos
subl
push
ds
mov
pop
repnz
or
jae
aaa
repz
inc
cli
xchg
inc
mov
lds
fstps
jg
and
stc
out
fiadds
add
or
inc
jmp
and
jecxz
fstpl
mov
pop
cmp
nop
aaa
jp
jmp
or
dec
push
xchg
mov
in
push
xchg
and
inc
out
cmp
xchg
pop
stc
and
test
cmp
mov
xor
jle
or
cmc
loop
cmc
and
mov
loopne
out
xchg
adc
xchg
or
xchg
pop
inc
add
and
cmp
add
pop
fistl
sbb
divb
popf
call
inc
nopl
bnd
jl
lcall
in
dec
mov
rcrl
dec
jo
test
jp
xor
jne
lret
or
dec
push
bound
cmp
dec
scas
mov
int
lods
inc
in
nop
mov
inc
jb
dec
aam
dec
out
flds
push
mov
mov
xor
jp
inc
icebp
mov
fs
fistps
xchg
out
push
jl
test
dec
out
loop
dec
pop
and
addl
sub
int3
inc
inc
and
add
pop
inc
adc
jl
push
inc
cmp
inc
sub
xchg
lret
mov
xchg
imul
cli
mov
jg
mov
rcrb
mov
pop
cmp
in
pop
inc
cmpsb
mov
and
es
mov
sub
test
jmp
pop
loop
mov
outsb
ja
jl
enter
sub
sub
arpl
mov
outsl
fdivr
in
repz
in
aad
mull
sahf
xor
mov
divl
out
cmp
lahf
push
xorb
addr16
pop
jbe
ss
sahf
or
insb
bound
cmp
arpl
or
mov
lods
decb
pop
mov
sub
adc
dec
jno
dec
cmp
push
rorl
inc
push
adc
sbb
into
mov
cmpsb
nop
ljmp
xchg
leave
and
test
ja
faddl
test
jae
mov
jg
xchg
mov
gs
xchg
fistps
sub
dec
ja
stc
inc
gs
popf
pop
xchg
orb
dec
in
mov
mov
sti
aas
fs
lret
mov
mov
inc
arpl
adc
inc
mov
or
stos
pusha
subl
test
or
je
jl
dec
mov
cld
and
mov
negl
dec
das
mov
ds
adc
les
loop
aaa
std
jns
imul
inc
add
mov
adc
push
lea
sti
pop
lods
into
fisttpl
mov
daa
add
insb
pop
add
dec
mov
jg
pop
xchg
imul
or
cmp
cmp
into
ja
adc
outsb
rol
loopne
cmp
outsb
cmc
aas
daa
cmc
inc
sub
sbb
scas
xor
lret
pop
adc
addr16
pop
sbb
sbb
les
dec
das
scas
pop
sub
jp
fiaddl
sbb
and
pushf
dec
lret
jbe
fldl
pop
gs
mov
mov
mov
inc
scas
test
call
push
sub
test
sbb
add
jmp
fstl
jb
jae
xchg
push
sub
loope
dec
aaa
repnz
or
sahf
dec
cmp
loopne
or
es
mul
test
imul
mov
xor
xchg
adc
sub
into
inc
jbe
cmp
call
xchg
lock
or
and
das
mov
shrl
loopne
add
xor
push
xor
mov
jg
cmp
dec
test
ror
xor
pop
mov
inc
and
push
xchg
lcall
shr
stc
pop
in
push
flds
out
pop
push
in
inc
js
int3
repnz
frstor
shrb
ror
iret
dec
fdiv
jmp
pop
sbb
or
dec
add
je
and
pop
subb
nop
movsb
cmc
and
inc
xor
jne
jp
add
adc
es
sbb
cmpsb
cmp
mov
push
pop
popf
int3
jbe
insl
test
sarl
movb
adc
jecxz
adc
dec
pop
out
jl
in
pop
pop
push
sub
mov
enter
xor
in
mov
xchg
push
pop
adc
dec
test
ljmp
sub
cmpsb
in
mov
inc
pop
mov
sbb
xchg
es
push
inc
imull
xor
and
adc
xor
jmp
addb
mov
ja
je
lock
mov
mov
sbb
inc
sbb
shrb
rolb
push
sub
inc
cmp
dec
mov
clc
jmp
jge
lea
fdivrs
cmc
clc
js
negl
add
int3
mov
push
lea
ja
pop
es
pop
xchg
inc
adc
pop
inc
clc
ljmp
add
lock
movsb
xchg
rclb
out
adc
mov
push
les
iret
mov
add
dec
hlt
jecxz
sub
jp
pop
push
cmc
ds
call
push
jb
je
mov
shrl
sub
xor
xor
fiaddl
shll
xchg
xor
jmp
loope
sub
movsb
rcrb
xor
test
push
or
sub
mov
or
push
pushf
dec
ret
pop
dec
enterw
pop
pop
inc
and
push
dec
inc
pop
mov
mov
pop
je
mov
sbb
sbb
adc
imul
mov
lret
lds
and
pushf
jnp
pushf
movsl
jmp
jb
pop
fiadds
sbb
ffree
add
cmp
add
ss
test
daa
test
jno
aad
lret
loope
clc
push
jne
xor
pusha
cwtl
sbb
out
mov
jmp
sub
adc
es
cwtl
lcall
pop
loope
mov
aas
or
pop
jmp
insb
iret
test
es
push
sub
push
aaa
cmp
push
fwait
sub
bound
cmpsl
mov
xchg
mov
sub
jmp
sbb
mov
repz
jg
and
sbb
push
hlt
push
sbb
cmpsb
push
mov
dec
movsb
lcall
lcall
inc
push
or
xchg
divl
mov
negb
sub
jge
cmp
dec
scas
and
adc
sbb
jae
jns
sub
inc
add
nop
mov
jl
dec
insb
mov
or
pop
jmp
mov
cmp
sub
clc
fcomps
jb
loop
rclb
int
push
ficompl
lret
repz
add
mov
ret
jp
mov
xor
mov
pop
push
test
cmp
mov
stos
aad
push
and
push
pop
or
test
jae
je
sub
testb
icebp
or
movsl
sub
dec
or
sbb
xchg
pop
fnstsw
out
sub
push
adc
sbb
mov
push
ljmp
rcr
cli
imull
movsb
stc
add
jno
popa
das
rorl
movsb
jle
sbb
add
dec
sbb
icebp
mov
and
aad
cld
imul
mov
test
push
std
lods
push
clc
dec
leave
shlb
stos
fbld
or
inc
mov
loope
hlt
mov
dec
lret
add
dec
pop
xchg
dec
movl
dec
sub
adc
addb
xchg
mov
pop
icebp
and
sub
rcrl
jl
and
add
addr16
ss
adc
scas
bound
mov
loop
ds
pop
test
jo
sub
scas
popf
add
inc
push
or
pop
sbb
aaa
mov
daa
es
mov
clc
aaa
inc
xor
mov
cmp
outsl
mov
imul
movsb
leave
inc
std
push
sahf
jne
insl
ja
in
inc
aam
iret
and
mov
add
pop
addb
mov
in
sub
push
adc
xchg
lcall
repz
xchg
int3
xor
mov
cmpsl
mov
inc
test
add
mov
mov
aam
pop
int3
cld
inc
adcl
dec
sub
or
ret
sub
inc
xor
hlt
sbbb
pop
add
cmp
in
cmp
pusha
sti
pop
jne
jle
jne
lahf
xchg
popf
ja
ret
cltd
loopne
lcall
dec
mov
sbb
add
cli
out
shlb
iret
mov
shrl
ljmp
cltd
xor
fistl
in
shrb
arpl
call
in
dec
sbb
inc
cmp
dec
pop
xchg
cmpsb
jecxz
pushf
dec
push
adc
sub
pop
movsl
fs
pop
xchg
mov
jae
int
add
pop
test
cwtl
out
in
arpl
int3
out
dec
fsubl
sahf
or
int
loop
adc
inc
test
das
inc
xlat
stos
push
inc
shll
mov
pop
mov
mov
add
add
pop
cmpsb
adc
mov
test
ret
pop
out
add
insb
pop
add
movsl
std
mov
sub
jns
test
inc
cmp
mov
mov
das
sbb
push
mov
mov
and
jp
test
pop
ja
sbb
ficompl
dec
mov
mov
mov
xchg
and
cld
sahf
sar
cmpsl
clc
inc
or
lods
xchg
icebp
pop
xchg
hlt
mov
xor
mov
hlt
mov
xor
ljmp
pop
sub
das
lret
adc
cmp
sbb
mov
imul
popa
stc
push
mov
out
pop
repz
test
insb
mov
imul
sub
mov
sarl
mov
cwtl
daa
lock
and
stc
dec
imul
notl
push
xchg
shlb
pusha
mov
into
loopne
mov
xor
scas
in
inc
xchg
inc
shll
push
cwtl
ror
js
std
inc
jne
and
fsubrs
jmp
mov
fcmovnu
je
ja
add
xchg
repz
adc
jo
and
repz
adc
mov
nop
movsl
addr16
and
adc
mov
xor
out
test
inc
sub
jmp
adc
mov
dec
sahf
sbb
push
in
adc
shlb
dec
inc
jne
adc
lahf
mov
mov
aaa
sbb
loopne
popa
and
pop
xchg
in
into
mov
mov
sbb
inc
jb
mov
cmp
ds
dec
ret
dec
cltd
data16
and
lea
push
push
inc
cmpsb
sahf
inc
fidivl
mov
icebp
cmp
loopne
and
push
movlps
repnz
out
jae
mov
mov
hlt
xor
mov
dec
push
jnp
inc
mov
mov
roll
shlb
lds
adc
mov
push
push
imul
pushf
test
in
inc
pop
jnp
pop
inc
jg
adc
sub
gs
stc
mov
pop
cmp
enter
shrb
leave
mov
cltd
sbb
imul
mov
movsl
xchg
sub
ja
add
xchg
xchg
xor
cmp
fidivrl
test
inc
or
sub
stos
jnp
mov
pop
jno
in
push
lods
call
stc
sub
xor
mov
cs
cmp
faddl
cmp
lahf
mov
xchg
add
push
and
cwtl
cmp
xor
jmp
lods
jns
cltd
pop
dec
das
jge
cs
push
add
mov
sti
cmc
fists
dec
fsubrs
ret
sbb
daa
and
addr16
unpcklps
push
adc
negb
aad
cmp
pop
adc
scas
push
push
mov
or
jecxz
mov
add
out
sbb
fwait
or
vpaddq
push
mov
ficomps
cltd
outsl
pop
loop
add
push
shrl
push
push
scas
jns
xor
xor
cwtl
cmp
or
mov
jmp
inc
and
push
jne
jle
lock
xchg
dec
cmc
mov
push
mov
sub
jne
jl,pt
mov
les
mov
xor
mov
dec
jle
mov
fnstcw
lock
add
mov
xchg
mov
enter
dec
pop
aad
inc
xor
fisubs
int3
push
mov
sub
shr
mov
mov
jb
lds
hlt
dec
decl
pop
inc
cmpsb
clc
mov
jle
xchg
adc
xchg
pop
shr
in
jmp
dec
xchg
cmpsb
dec
sahf
cmp
xchg
push
ds
dec
jbe
ds
cmp
les
ss
jmp
add
sbb
add
mov
mov
aad
and
dec
aaa
int3
imulb
jno
xor
cli
cmp
lret
mov
cmp
out
push
movsl
mov
lods
and
xchg
mov
cmp
xchg
or
iret
scas
dec
test
popf
mov
dec
adc
cmpsb
aad
dec
dec
and
es
xor
xchg
mov
inc
out
iret
jo
xor
lcall
pop
inc
pusha
adc
icebp
popa
ss
stos
mov
dec
inc
mov
adc
out
ror
sub
outsl
insl
adc
lcall
add
mov
aas
ret
push
fdivp
jmp
in
lret
lret
fisubrs
push
cmp
sbb
mov
iret
jno
lock
gs
lods
pop
js
ret
xor
pop
cmovne
xor
sub
in
enter
jg
clc
test
inc
imul
sub
sbb
out
pusha
jl
out
ja
test
inc
sbb
stos
sbb
clc
xchg
jp
mov
ljmp
fdivrl
xor
jl
outsl
xor
push
sti
icebp
xchg
ss
fs
push
jb
lahf
push
xchg
ljmp
mov
notl
sbb
mov
mov
dec
sub
jecxz
fisubrs
xchg
cs
mov
mov
ficompl
enter
mov
sub
fs
xchg
pop
rcrb
popf
fcomps
subl
xlat
addr16
lcall
dec
rcpps
arpl
sub
fistpll
mov
cmp
or
ljmp
xchg
mov
dec
mov
sub
mov
and
push
out
sarb
fsubs
cmp
mov
cs
out
shlb
inc
sbb
popf
jge
sbb
stc
imul
in
stc
dec
xchg
push
arpl
aaa
adc
pop
fsubl
inc
xor
enter
shlb
pop
push
fmull
rorl
mov
xchg
add
ds
lret
int
xor
shrb
mov
jmp
fidivl
jge
mov
push
dec
mov
sbb
adc
testl
dec
mov
push
cmp
push
test
icebp
loope
mov
mov
call
inc
std
into
call
loop
neg
test
mov
xchg
addl
xchg
enter
lock
inc
inc
dec
or
pop
xorb
pop
aam
ret
sti
pop
sub
adc
cwtl
dec
shll
leave
inc
mov
pop
jae
hlt
sub
mov
movsl
popf
hlt
ds
je
sub
cltd
nop
mov
or
sub
mov
mov
and
cltd
mov
inc
imul
fimuls
lcall
sbb
insl
les
mov
jae
out
inc
int
xor
add
pop
add
test
adc
jp
or
popa
adc
cwtl
mov
sub
xlat
repz
out
ljmp
cmpsl
aas
ds
push
into
ss
pop
fs
scas
pop
int3
xchg
jmp
mov
push
inc
icebp
push
inc
ja
fs
iret
lret
add
and
sub
ret
push
stos
jo
or
rcr
popf
fstp
push
and
repz
out
mov
mov
jp
std
into
mov
and
inc
out
repnz
mov
stos
loop
arpl
or
add
in
sub
pop
xchg
rorb
sbb
pop
es
out
inc
std
pop
mov
cmp
dec
popa
cmp
inc
out
pop
mov
mov
fadd
nop
inc
adc
ret
out
sbb
inc
cwtl
aam
pushf
sub
pop
inc
cmpsb
shl
lret
sbb
cmp
aas
aaa
xor
jb
rolb
dec
int3
sub
mov
xorl
mov
test
jmp
insb
or
int3
bound
fcompl
add
sarl
inc
test
out
pop
addr16
outsl
lds
out
fidivrs
lret
xchg
sub
adc
fisttpl
cmpsb
repz
loop
bound
jg
mov
cmpsb
jns
dec
cmp
out
cmp
lods
out
out
movsb
and
dec
mov
mov
xchg
add
ret
mov
into
xor
lea
fnstsw
out
int
push
lahf
pop
addr16
mov
cli
sub
jp
call
stos
adc
xchg
stos
sub
inc
pop
ss
mov
dec
mov
inc
adc
lock
stos
mov
andb
sahf
cld
js
mov
fimull
subb
loope
pop
daa
clc
jno
push
fists
lods
dec
popf
mov
sub
aam
hlt
jns
movsl
sbb
or
push
mov
sbb
jbe
xchg
xchg
cmp
dec
shrb
pop
nop
in
mov
test
mov
clc
aad
dec
test
inc
or
and
pop
in
jne
push
adc
imul
popa
mov
mov
mov
xchg
add
rorl
unpcklps
mov
sbb
pop
lods
sbb
jns
idivb
pusha
dec
nop
adc
fsubrl
pop
push
sti
pop
in
lret
xor
in
xor
lcall
scas
add
in
sbb
mov
subb
add
pop
and
inc
data16
test
mov
fisubl
xlat
push
mov
imul
andl
fwait
inc
dec
mov
fbstp
aaa
mov
or
gs
push
push
mov
dec
xchg
ror
fsts
cs
mov
ror
xchg
and
popf
pop
loopne
daa
jecxz
jmp
fstpl
jmp
push
xchg
mov
xchg
dec
push
mov
xchg
or
aam
lret
mov
xchg
xchg
jecxz
push
rcrb
cmpsl
arpl
jmp
pop
ret
jmp
inc
arpl
lahf
lock
or
nopl
sbb
cltd
jnp
loopne
xchg
xchg
inc
fnstcw
xchg
fisubl
gs
pop
fwait
pop
sub
in
jae
cmc
fwait
cmp
jo
gs
fs
cmp
push
sbb
pop
xchg
inc
push
ror
mov
lock
fsts
cmp
sbb
test
sbb
cld
js
mov
ja
add
xor
ss
and
dec
sub
jne
push
xor
clc
in
adc
pop
mov
jecxz
pop
repnz
orl
pop
mov
adc
dec
dec
and
or
or
mov
test
int3
jns
push
or
cld
repz
push
or
sti
mov
loopne
xor
enter
jne
ljmp
pop
gs
push
mov
jp
int
pop
je
push
add
rcrl
xchg
mov
jnp
data16
ja
call
out
cltd
or
mov
aam
loopne
ficoms
mov
adc
push
pop
pop
lret
aam
pop
rorl
jbe
pop
in
jbe
aad
pop
dec
in
call
or
out
cmp
push
inc
ljmp
pop
loope
dec
xor
mov
adc
lock
or
mov
pushf
mov
mov
test
dec
in
pop
sahf
xor
movsl
loope
lds
hlt
cmc
jmp
enter
sbb
sbb
mov
rorb
mov
mov
cmpsl
ja
mov
int
pop
mov
inc
cmp
mov
inc
test
cmp
and
cld
pop
into
inc
ret
ret
fsub
sbb
cmpb
sbb
push
mov
rorl
jecxz
pop
imul
cwtl
xchg
adc
loop
mov
or
dec
mov
lods
nop
dec
sub
shlb
jae
xor
mov
jge
jle
loop
lds
stos
or
mov
cmc
stos
jmp
mov
push
pop
add
push
inc
or
pushf
xlat
lods
dec
cmp
push
push
and
mov
dec
jecxz
in
imul
fdivrp
jp
popa
int3
inc
xor
es
repz
pop
fstl
add
push
push
sub
aad
mov
adcl
loop
pop
fisttpl
pop
and
movl
push
fstps
and
daa
sbb
jl
push
cmp
ret
imul
enter
sub
mov
push
negb
popf
fisttpll
xor
ja
lret
std
ja
insl
mov
xchg
cmp
addr16
sti
je
dec
pop
ret
jnp
pop
dec
xor
jle
fstps
sbb
insb
mov
jge
test
shr
mov
mov
add
fadds
scas
fisttps
sbb
clc
pop
add
dec
xor
sti
mov
inc
xchg
aas
cmpsl
sbb
xchg
out
mov
push
mov
lods
insl
push
mov
and
testl
orb
fnstenv
adc
test
inc
insl
or
ror
inc
cmp
inc
inc
adc
rcrb
mov
sub
outsb
insb
xchg
insb
enter
adc
and
aas
pop
sbbl
xchg
cltd
mov
sbb
cmp
cmp
add
add
lahf
arpl
mov
dec
mov
insb
pop
add
movsb
in
mov
fdivrl
adc
enter
jle
mov
jmp
cmp
rclb
jecxz
repz
xchg
cmp
sub
mov
sub
pop
iret
push
push
mov
inc
mov
imul
bound
addr16
or
mov
or
pusha
aas
cmp
dec
stos
fucom
lds
xchg
xchg
mov
jg
bound
dec
jne
bound
xchg
and
mov
mov
mov
sbb
mov
test
dec
adc
xlat
insb
cmp
gs
and
xor
adc
ds
je
call
fstpl
insb
pushf
sub
mov
mov
sar
movsb
sub
sbb
rcll
add
mov
lds
or
lcall
scas
push
and
dec
xor
mov
lcall
cmp
fwait
scas
outsl
outsb
inc
repz
sub
xchg
pop
test
cmp
mov
jge
lds
ror
std
cs
mov
and
xor
mov
daa
xchg
sbb
xor
cmp
sub
cmp
movsb
shrb
ret
push
push
push
mov
adc
xor
cwtl
push
push
stc
dec
mov
mov
repnz
mov
pop
fucomi
xchg
and
arpl
pop
fsubr
adc
xor
and
jae
lods
dec
xchg
and
add
hlt
push
mov
addr16
sbb
mov
push
aad
frstor
cmp
mov
pop
adc
add
mov
mov
imul
push
push
cmpsl
test
and
outsl
iret
push
and
mov
in
adc
xchg
ffreep
inc
out
dec
js
je
mov
in
jle
lea
ret
mov
data16
js
adc
ljmp
scas
or
int3
sbb
and
popf
xor
sahf
xchg
andw
data16
add
imul
pop
sarb
push
sbb
sub
movsb
inc
enter
xchg
jg
shrl
push
fstps
sub
testl
cwtl
jo
scas
iret
js
loopne
or
fldcw
mov
repz
das
std
insl
daa
cmc
fidivrs
add
mov
cmp
xorl
test
jmp
mov
sub
stos
test
sub
stos
mov
mov
cli
or
leave
lods
in
inc
jno
cmpsl
fbstp
shlb
add
cmp
pop
dec
stos
push
mov
sub
sbb
popa
add
or
xchg
or
sbb
mov
push
pop
mov
je
jmp
mov
and
gs
fidivrs
pop
movsb
cmp
xchg
mov
and
adc
mov
ret
sbb
fldenv
add
dec
into
mov
pop
mov
cmp
pop
jp
mov
sub
push
adc
mov
sbb
jmp
push
pop
orl
dec
sarb
adc
dec
adc
mov
lcall
pop
pop
cmp
repz
cmp
and
or
stc
sbb
movsl
dec
adc
cli
mov
mov
xchg
int
jnp
test
fwait
test
xchg
stc
inc
push
dec
sbb
mov
add
lock
dec
insl
xor
xchg
es
test
test
inc
icebp
mulb
sti
xor
fisubs
jo
imul
inc
sub
out
xchg
stc
push
int3
enter
push
mov
dec
adc
push
cmpsl
inc
add
in
mov
sti
cmc
mov
dec
cmp
jns
testl
clc
sub
rorl
popa
outsb
rol
sub
mov
and
insb
leave
add
jae
fwait
mov
bound
inc
xchg
mov
pop
andb
sarb
mov
cltd
fiadds
adc
add
jo
inc
cmp
js
pop
mov
fmull
add
xor
outsb
push
sub
fiadds
pop
xor
pop
aas
or
cmpsb
adc
mov
or
repz
dec
int
dec
cmp
jb
jb
xor
sbb
ret
ds
mov
arpl
jae
fwait
xchg
sbb
mov
pop
cli
popf
xchg
lahf
sub
in
shll
sbb
cwtl
cmp
and
clc
cmc
push
pop
lcall
shll
mov
and
mov
movsb
and
xchg
scas
out
mov
repz
ja
jmp
in
insb
or
sbb
push
hlt
jnp
pop
mov
call
lea
lds
xor
and
push
movsl
inc
or
push
lret
daa
mov
test
cmp
mov
add
mov
cmp
fs
push
inc
sbb
out
fsubrs
fsts
sti
stos
mov
push
jecxz
gs
lods
mov
lock
push
add
dec
sbb
gs
loope
pop
pop
sub
cmp
in
rol
sub
pop
lret
out
sub
mov
push
mov
xor
pop
inc
and
jp
mov
add
outsb
imul
ja
ljmp
frstor
testb
mov
or
jg
sbb
cwtl
mov
pop
mov
and
pop
dec
lcall
add
mov
int3
xchg
fmull
pop
addl
xor
add
aad
adc
jne
dec
test
adc
pop
loope
out
clc
dec
mov
je
stos
adc
pop
lods
jl
and
mov
mov
mov
xchg
push
sbb
pop
inc
fsubr
jbe
xchg
cmp
jp
jg
lret
xchg
xor
dec
mov
mov
xchg
sub
jmp
adcl
or
and
add
mov
inc
cmp
jnp
mov
adc
or
and
jb
shlb
inc
mul
sti
push
push
add
cmp
mov
imul
jnp
loop
daa
sbb
push
cwtl
dec
push
pop
cmp
jo
adc
int
fisubl
leave
fwait
or
int3
or
enter
cmp
jae
sbb
popf
xor
inc
clc
in
cwtl
in
jp
jl
loopne
lods
sbb
insb
jno
dec
add
mov
imul
pop
mov
mov
jmp
mov
add
add
je
inc
mov
and
fistpl
push
jno
inc
lret
bound
jl
mov
mov
nop
xor
jno
dec
sahf
adc
push
cltd
and
jno
xchg
xor
les
fcmove
mov
lret
cwtl
gs
cmpsl
ficomps
push
add
loop
pushl
loope
sbb
fwait
and
movl
stc
or
out
or
jge
xor
xchg
stos
jb
movsb
and
sbb
xor
xor
push
shlb
ja
mov
xchg
push
sbb
adc
mov
pop
dec
xchg
add
sysexit
xor
cmpsb
les
mov
es
filds
cld
inc
in
insl
lock
adc
es
int3
inc
inc
cmc
mov
fs
xchg
cmp
adc
aam
sti
lock
sub
scas
insb
push
out
inc
fwait
je
les
adc
xchg
push
mov
sbb
pop
stc
out
in
dec
push
in
repz
lcall
movsb
cmpsl
inc
aas
arpl
mov
sbb
pop
test
sub
or
ds
or
mov
xor
shll
inc
lcall
fbstp
cmc
out
push
push
jp
pop
pop
jl
leave
xchg
test
addl
xchg
jno
lods
inc
loope
mov
std
imul
inc
sbb
mov
inc
inc
fwait
xchg
outsb
mov
cmp
push
mov
push
imul
lds
and
in
imul
cltd
inc
cmc
jmp
xchg
xchg
imul
xchg
inc
adc
aas
inc
inc
jmp
ret
ds
sbb
movsl
or
daa
ficoml
daa
adc
jp
jecxz
push
mov
inc
inc
xchg
jp
sub
pushf
mov
dec
xchg
or
lea
test
aam
repz
adc
or
fisubs
xchg
orb
aam
ficomps
sbb
jmp
or
jmp
push
inc
mov
xchg
mov
mov
iret
push
and
inc
cli
std
xchg
mov
mov
fildl
mov
ds
lock
test
jnp
sbb
sti
jns
add
loop
mov
sbb
clc
mov
xchg
sahf
jbe
stos
iret
pop
fs
test
movsb
les
add
and
adc
es
lret
and
and
sbb
cltd
sbbl
cmp
icebp
add
adc
sbb
sub
ficompl
mov
stos
dec
sbb
push
fs
sub
add
cli
push
addr16
out
or
mov
addr16
data16
fcmovu
ret
jmp
lret
fstpl
pop
sti
xor
loop
loope
and
lahf
nop
xor
mov
xor
sub
stc
pop
and
fmull
fmuls
ja
in
fcos
pop
arpl
out
jecxz
in
dec
push
loopne
inc
xor
pop
std
pop
mov
xorl
mov
test
jnp
lods
fstl
es
dec
adc
sub
lods
mov
movsl
and
jmp
cltd
pop
adc
icebp
jae
push
push
clc
test
mov
faddl
daa
hlt
fcomi
dec
in
je
adc
test
fwait
ja
push
mov
or
pop
xchg
stos
ret
loop
jb
adc
icebp
pop
ret
popf
loope
lds
stc
or
dec
xor
cmp
arpl
je
cmpsb
dec
icebp
pusha
cmp
lcall
inc
rcll
daa
stos
nop
jl
mov
mov
in
cmc
stos
lcall
cmp
int3
outsb
cmp
sbb
sub
cs
call
jecxz
add
mov
adc
cmpsl
test
lods
push
xor
cmp
xor
xchg
jp
cmp
xor
sbb
lret
mov
outsb
pop
in
js
loope
pop
add
fsubs
ret
jp
inc
or
inc
jmp
xor
rcr
xchg
mulb
push
xchg
lods
cmpsl
test
pop
xor
lock
mov
shrl
cmpsb
les
test
sbb
mov
enter
push
lea
dec
dec
fbld
cmp
loop
ljmp
insb
cmpsl
mov
or
xchg
add
push
inc
lcall
icebp
jmp
pop
sub
cmpsb
and
inc
rorl
int
test
jne
add
loope
outsl
jnp
sbb
mov
mov
mov
lds
mov
add
bound
cmp
fnsave
cs
pop
xor
push
loopne
sbb
fwait
mov
ja
add
jg
jp
push
push
mov
jns
sbb
sub
sbb
sub
mov
push
scas
push
xor
cmp
mov
add
scas
inc
loop
pop
xchg
jne
shll
loope
mov
cmc
mov
or
or
inc
xchg
fldt
xlat
enter
mov
adc
cwtl
test
lret
or
shrb
mov
xchg
jp
push
mov
test
pavgb
mov
add
jo
fistpll
loop
enter
stos
imul
jnp
add
cmpsb
mov
test
pop
out
std
fldcw
iret
pop
sbb
out
inc
mov
outsb
lea
data16
pop
outsl
pusha
mov
dec
and
leave
loopne
outsl
sub
clc
or
out
ss
adc
cmp
test
sub
jns
ffree
jno
xor
sub
sbb
sub
les
push
xchg
xchg
push
jmp
in
mov
daa
jnp
mov
mov
jle
aaa
aad
stos
push
add
sub
and
jmp
pop
fnstsw
subl
lock
mov
ret
dec
mov
and
lret
jnp
and
push
divl
fwait
repnz
cwtl
push
pop
dec
lods
inc
push
punpckhdq
jne
pop
push
sarb
dec
movsb
mov
inc
incb
dec
sahf
hlt
mov
das
jo
cmp
inc
inc
ret
dec
sti
xchg
lods
pop
pop
js
test
sahf
xor
and
pop
ret
shrb
pop
push
pop
imul
xchg
jne
dec
or
mov
pop
sbb
outsl
mov
sub
repz
orb
pop
xchg
lods
xor
dec
jns
imul
hlt
sahf
cmp
xchg
inc
clc
pop
iret
or
push
lahf
mov
pop
cli
push
pop
cltd
loope
inc
lahf
xchg
int3
or
addb
out
jns
xchg
push
push
loope
pop
push
inc
or
pop
cltd
sarl
add
insb
pop
add
push
stos
mov
pop
sbb
push
sbb
mov
xor
mov
adcb
mov
mov
jb
data16
cmp
test
shlb
add
pushf
push
leave
sub
and
inc
pop
int3
aad
ret
imul
mov
lea
dec
stc
mov
insl
adc
les
ds
inc
inc
xchg
int3
shlb
and
leave
pushf
subb
jmp
and
shll
xor
jns
mov
jl
lods
test
jbe
jno
insb
dec
sbb
cli
push
call
fisubs
repnz
xlat
dec
fcompl
xchg
data16
les
lods
sahf
hlt
pop
fidivrs
xchg
shl
stc
fs
mov
push
adc
add
jno
arpl
inc
lods
and
sahf
bound
adc
shrl
sbb
addr16
insl
testl
push
fadds
stos
and
lcall
sub
lretw
loop
cmp
mov
dec
cli
push
rorb
and
sbb
xlat
clc
adc
xchg
mov
stc
bound
hlt
push
clc
cli
icebp
sub
testb
fstl
mov
push
jmp
or
add
jp
mov
test
jae
push
bound
lcall
add
xchg
stos
shrl
iret
mov
jge
mov
sbb
mov
mov
aas
pop
mov
pop
adc
and
getsec
ret
andb
stc
cmpb
in
adc
or
cmpsl
mov
sarl
mov
pushf
add
sbb
mov
adc
gs
test
shlb
lret
stos
loopne
and
das
pop
push
or
leave
xchg
pop
sbb
pop
xlat
or
adc
movsl
mov
and
cmc
sbb
jg
jne
or
mov
std
push
adc
movsl
lods
imul
xor
out
dec
cmc
movsl
popa
pop
jge
xchg
pop
lods
ss
decb
dec
dec
sbb
sahf
popf
jecxz
mov
lods
jbe
pushf
push
pop
mov
dec
adc
sbb
or
shlb
out
sub
mov
xchg
adc
outsb
xor
sbb
movsb
push
ljmp
or
shlb
fimuls
inc
jbe
mov
lods
xor
pushf
addr16
sbb
push
jecxz
andb
sbb
pushw
push
pop
idivb
lods
mov
and
test
push
rclb
loop
fsts
out
fcmovbe
and
push
and
stos
cmpsl
adc
arpl
xchg
jmp
jecxz
and
imul
push
scas
shlb
pop
imul
xorl
and
adc
xchg
xor
insb
dec
scas
push
add
push
repnz
sub
jo
test
inc
jae
lds
div
xor
mov
out
cltd
lcall
pop
jno
jo
dec
ficompl
dec
xchg
inc
enter
data16
arpl
mov
mov
outsl
pop
lret
fisubrl
or
subb
push
xchg
xchg
inc
push
clc
inc
fsubrl
jne
adc
out
jp
jb
cli
dec
jp
aaa
mov
stc
sbb
dec
js
adc
mov
push
inc
mov
pusha
mov
push
push
negb
jg
jle
mov
and
insl
mov
mov
xchg
fstps
daa
enter
dec
lahf
xchg
mov
mov
inc
out
push
adc
sbb
je
mov
dec
call
lods
mov
movsb
jle
adc
repz
and
push
pop
loope
popf
fnstcw
js
mov
out
mov
or
jo
dec
inc
xchg
adc
repz
fdivrl
inc
dec
insl
push
push
jp
pop
xchg
in
ficomps
les
add
xchg
sbb
mov
pop
lret
pusha
ret
lret
push
iret
add
jno
sti
popa
outsl
subb
jb
mov
mov
shrb
jp
xchg
pop
ffree
jg
pop
jne
jge
push
jecxz
leave
pushf
jnp
mov
push
sqrtps
sub
test
mov
icebp
dec
clc
dec
inc
stos
adc
lret
jmp
arpl
mov
push
xchg
jbe
add
jo
sbb
jg
les
psrlw
cmp
dec
in
push
dec
jmp
inc
inc
push
mov
stos
dec
adc
mov
dec
mov
shlb
je
test
arpl
hlt
cmc
cmp
insb
add
lods
mov
mov
adc
addr16
int
xchg
aad
andl
ret
in
xchg
mov
adc
pop
jno
pop
mov
adc
mov
popf
mov
loopne
xchg
adc
jns
mov
pop
xor
adc
outsl
out
lock
mov
xor
das
jle
push
shll
pop
insb
testl
loope
es
in
mov
jp
pop
pusha
lds
adc
push
inc
arpl
fs
mov
add
rorb
aaa
inc
mov
pushf
jg
fcmovb
in
xor
mov
sbb
pop
sbb
sub
addl
xchg
movsb
in
or
mov
inc
mov
inc
mov
icebp
sub
repz
cmp
adc
add
dec
mov
and
in
adc
inc
dec
and
shlb
call
xorl
lahf
or
idiv
pop
ret
xchg
jg
xor
shll
mov
mov
insb
dec
mov
push
pop
or
inc
pop
xchg
pop
inc
lock
mov
cmc
jle
and
xchg
iret
cmpsl
jp
jae
in
or
xchg
cmpsl
test
lods
add
push
es
sbb
int3
cwtl
pushf
mov
inc
addb
sahf
push
popf
fsubl
xor
imul
test
push
fists
cmp
sub
sub
test
scas
mov
test
mov
pushf
sub
mov
add
cmpsl
les
cmp
mov
push
test
lock
xchg
adc
mov
jbe
xchg
pop
fwait
mov
test
dec
loope
add
lret
xchg
int3
mov
cmpsb
inc
mov
mov
mov
xchg
jmp
xor
cld
cmp
push
jecxz
aad
dec
fsts
test
scas
sbb
lods
aaa
and
xchg
scas
pop
les
mov
sub
fwait
mov
cmpsl
das
pop
data16
cli
pop
addl
rorb
add
insb
pop
add
jp
mov
cli
push
pop
jge
sub
or
cmp
daa
xor
inc
rolb
lahf
cmp
push
cmp
addl
movsb
push
xor
cmpsl
rol
sub
call
test
jne
inc
daa
add
mov
pushf
cmc
adc
sub
js
push
sahf
push
mov
aas
jl
mov
aas
xor
lcall
aas
ficomps
jle
fmul
idivb
mov
int
jl
xor
loopne
mov
mov
cltd
bnd
lcall
xchg
inc
clc
dec
dec
mov
addr16
loope
or
inc
mov
lea
aas
jo
pop
arpl
mov
cmpsl
cmp
lock
sbb
inc
xor
stc
push
fwait
aad
add
mov
dec
adc
push
jle
and
sti
fs
subl
sub
mov
mov
inc
fcomi
xor
mov
stos
xchg
movb
add
sbb
xchg
rorb
inc
cmp
lret
repnz
xor
dec
cmpsb
mov
cmp
cmp
or
sbb
sbb
in
jmp
aas
or
fdiv
add
orb
push
add
enter
inc
jne
jae
shl
cmp
test
out
jnp
insb
sbbl
lret
and
inc
fwait
cmp
mov
test
mov
xor
xchg
fsubrp
stos
mov
xor
lahf
push
iret
cmc
sbb
mov
xor
jecxz
mov
je
xlat
fldl
movsb
enter
sbb
xchg
int
movntps
das
and
pop
mov
fldcw
mov
push
lret
daa
lret
add
mov
sbb
fidivl
nop
mov
cmpsb
js
mov
push
cmp
cmpsl
inc
xchg
mov
or
popf
inc
idivb
push
jb
loopne
movsb
push
enter
mov
dec
pop
inc
clc
and
xorl
nop
cmp
cli
insl
loope
dec
mov
nop
sub
mov
incb
sbb
push
dec
fs
lods
mov
repnz
mov
in
dec
aad
ljmp
mov
lock
xchg
out
imul
lock
inc
stc
pop
cld
add
in
xchg
xchg
adcl
inc
icebp
int3
js
sub
mov
and
push
adc
mov
lret
lods
pop
mov
icebp
xchg
mov
cmp
cmp
mov
int3
sahf
aam
and
cmp
adc
in
dec
dec
jb
dec
and
mov
cli
xchg
mov
int3
jae
jg
rcrl
xlat
or
xor
adc
dec
push
pop
enter
call
in
popa
pop
push
dec
mov
mov
cmp
add
ljmp
imulb
mov
jmp
jge
sbb
ret
add
je
and
xchg
mov
cmovns
xchg
out
inc
mov
icebp
inc
pusha
cld
call
cltd
lock
lret
or
xchg
inc
repz
push
inc
push
arpl
jne
shrl
jae,pn
adc
fbstp
add
xchg
adc
cmpsb
fucomp
cld
push
add
push
jbe
mov
inc
cld
pop
jecxz
add
push
dec
jge
xchg
adc
repnz
fldt
ret
jp
or
push
cmp
cmpsb
push
std
add
clc
jg
or
rolb
hlt
popa
fdivrl
ljmp
in
sub
out
into
clc
cmp
test
shrb
sbb
andl
jp
jmp
pop
jl
jae
pop
push
adc
mov
iret
stc
adc
mov
inc
push
sub
subl
xchg
iret
dec
ss
mov
add
or
and
imul
lret
xchg
and
fmuls
inc
pop
lods
or
enter
jbe
mov
out
lret
shlb
ficomps
lret
dec
insl
push
data16
scas
xchg
lods
dec
ja
inc
aam
rep
push
hlt
ret
mov
mov
xchg
sub
lret
hlt
mov
stos
cmpl
add
dec
xor
pop
cmp
lret
pop
faddp
xor
push
push
faddl
inc
sub
sti
dec
xor
cmc
dec
mov
fs
aam
repz
cmpb
xor
inc
pop
imul
push
adc
out
and
jecxz
insb
add
or
pop
push
int3
cmc
xchg
jb
jp
mov
xor
xchg
xor
jo
jo
outsl
inc
daa
push
mov
pushf
cltd
push
mov
push
inc
cmpsl
push
or
in
aas
ss
sbb
mov
jb
fsubl
gs
inc
mov
int3
adc
xor
in
arpl
popa
sahf
pop
fcmove
xchg
sbb
in
cmp
xlat
lahf
les
shrl
scas
cmp
and
sbb
movsb
xor
pop
sahf
jnp
subl
and
mov
cmp
jp
fldcw
push
mov
shrl
cmpsl
icebp
and
jae
movsl
pusha
mov
sbb
loopne
lods
out
leave
nop
mov
fiadds
pop
or
loop
mov
dec
push
rcl
jne
and
movsl
popf
out
mov
addr16
xor
jnp
scas
mov
inc
sub
jge
in
mov
sub
dec
testb
lds
push
sbbl
and
ljmp
xchg
fbld
and
sbb
or
xor
pop
sub
repnz
inc
fldt
and
jp
cmc
gs
mov
and
mov
pop
jl
jno
test
xchg
fsubrs
aaa
daa
int
and
aas
cmp
mov
add
jns
sub
sti
jnp
es
mov
xchg
es
fldcw
mov
mov
add
fs
push
mov
rcl
movsl
pop
dec
shll
xlat
dec
mov
xchg
mov
orb
jbe
pushf
imul
mov
mov
ja
icebp
mov
mov
mov
popf
cwtl
arpl
scas
dec
faddl
dec
inc
jbe
jg
repz
inc
mov
cmpb
sub
jno
pop
call
and
subb
mov
and
add
outsl
mov
insl
negl
movsb
into
jns
sbb
insb
adc
cmp
stc
inc
shlb
xchg
outsl
push
out
push
mov
add
jle
ret
repz
std
jle
loope
mov
push
jmp
insb
pop
add
sub
add
jae
dec
loop
jae
mov
aas
nop
mov
divl
push
out
outsl
orl
je
imul
xchg
mov
div
cs
rol
add
xorb
or
fs
addb
xor
cld
call
stc
std
test
bound
sbb
mov
jg
out
jge
pop
pop
hlt
or
xchg
push
inc
into
cld
mov
test
xchg
ja
punpckhdq
ja
inc
sbb
inc
sub
es
push
rolb
daa
es
sbb
in
push
and
adc
sub
stos
fld
out
rorl
out
clc
shl
lea
cs
nop
repnz
out
or
push
jb
pop
adc
adc
mov
test
jg
mov
arpl
xor
std
adc
outsb
push
fsts
aam
test
inc
and
add
adc
sub
add
push
cmp
inc
ret
dec
adc
cmpsl
xor
xchg
inc
stos
das
and
mov
mov
inc
in
adc
test
and
cmp
cwtl
push
and
movsb
xchg
push
mov
push
xor
out
push
pop
xchg
push
push
cld
jl
fmull
aaa
fs
add
popf
add
sbb
cmp
and
aas
orb
sub
cmp
jmp
xacquire
sbb
cli
push
orl
jp
mov
cmp
out
sub
sbb
cmpsb
push
lea
adc
aam
aad
call
shrb
hlt
aad
shl
loope
mov
pop
and
mov
lcall
inc
mov
mov
fld
add
push
shlb
out
insl
and
cmpsl
pop
notb
in
jp
push
aad
loop
mov
dec
cmp
xchg
sbbb
rcl
sub
fisubl
mov
ss
mov
insl
outsl
inc
push
cwtl
sub
xchg
adc
mov
push
icebp
mov
push
push
dec
call
fs
cmc
xchg
add
or
sub
in
enter
scas
jmp
orb
fidivrs
inc
lods
test
scas
movsl
dec
or
das
pop
stos
les
inc
loopne
mov
pop
xor
add
dec
or
mov
and
leave
or
add
or
sub
xchg
mov
lahf
mov
add
in
fs
sub
sub
mov
inc
lds
decb
stc
fwait
adcl
leave
adcl
dec
fwait
popf
shrl
jne
push
mov
push
fnstsw
mov
insl
hlt
add
mov
out
outsl
xchg
leave
into
mov
rcrl
and
mov
mov
pop
stos
xchg
bound
lock
lcall
dec
xchg
lahf
cs
mov
popa
dec
mov
ja
movsl
mov
aam
xor
dec
iret
sbb
imul
ds
mov
mov
bound
loope
int3
jnp
push
adc
outsb
mov
or
lahf
test
mov
jno
push
xchg
pop
sti
inc
lret
jne
mov
out
push
test
pop
xlat
jns
sbb
and
xor
xchg
lcall
jmpw
test
mov
sbb
xchg
fwait
sub
arpl
cwtl
mov
jb
or
cmp
adc
aas
and
repnz
xchg
pop
test
aam
mov
mov
call
pop
dec
xor
jg
or
or
jge
ds
fsubrs
shr
sbb
push
in
fcoml
push
stos
cmpb
ss
push
pop
test
nop
dec
xchg
add
inc
mov
icebp
lcall
fsubs
fwait
or
push
adc
jno
cli
push
add
in
xchg
ss
aaa
xchg
rcrl
push
or
cmp
sti
mov
stc
push
outsl
inc
xchg
xchg
push
mov
rorb
addr16
mov
js
mov
in
loope
jo
xchg
test
out
dec
add
xchg
inc
dec
pop
mov
jg
ss
pop
ror
xor
call
roll
out
stc
fdivr
int
pop
pop
shlb
pushf
sti
xor
add
push
mov
lcall
xor
jmp
rclb
xchg
jo
add
or
push
sub
call
and
pop
sar
or
jge
std
outsb
mov
data16
inc
xchg
jge
insb
mov
add
dec
data16
sahf
push
sbb
push
pusha
daa
inc
mov
rolb
mov
test
insl
daa
xor
sub
adc
test
ja
arpl
jmp
push
jno
pop
dec
mov
incb
push
xor
in
sub
cmp
jo
jo
mov
lret
aas
mov
aas
out
cwtl
dec
imul
push
ret
jge
js,pn
mov
subl
scas
add
out
stc
ljmp
push
fistpl
mov
adc
lock
ja
shll
fildll
lcall
pop
adc
pop
inc
fwait
and
pop
add
leave
lcall
fdivr
dec
shl
cmp
push
lea
cmp
lock
jno
cltd
int
in
inc
fistpl
clc
lods
icebp
mov
dec
xlat
jp
pop
es
xchg
push
imul
mov
inc
dec
enter
adc
outsl
test
rcrb
push
pop
and
mov
sbb
jmp
cmp
repz
icebp
fs
sbb
mov
fldcw
scas
int
jae
and
adc
jb
pop
add
xor
push
mov
mov
sti
shr
lock
ljmp
imul
mov
arpl
sub
in
mov
aam
xor
jle
mov
sahf
pop
jmp
jns
jo
shll
adcb
adc
out
xchg
jbe
jl
mov
push
fmuls
pop
shlb
sbb
cmc
lcall
sbb
xchg
cmp
mov
xchg
and
and
add
sub
jae
or
mov
add
clc
sahf
out
or
and
test
add
add
inc
in
sahf
pop
lock
jbe
sahf
test
sarb
cmp
add
xchg
mov
iret
loopne
ljmp
mov
mov
addr16
addr16
push
fwait
in
movl
mov
lds
icebp
sub
sti
sti
mov
push
or
popa
or
pop
push
jns
jmp
bound
and
push
movsbl
push
nop
rorl
mov
out
out
es
hlt
pop
push
jno
inc
into
mov
cmp
enter
cmc
loope
push
aas
adc
xchg
inc
push
or
mov
and
repz
sbb
icebp
in
or
push
mov
ja,pt
mov
mov
sub
arpl
sbb
shlb
js
bound
gs
je
xchg
mov
and
ss
shrl
mov
jb
mov
sbb
imul
shlb
arpl
mov
sahf
sub
and
dec
enter
adc
xor
notb
sub
sahf
sarb
or
push
mov
es
sarl
sub
in
pop
idivb
adc
inc
mov
std
repz
and
pop
and
in
fimull
jbe
fisubrl
mov
pusha
pop
pusha
mov
push
mov
pop
mov
pop
jo
push
push
sbb
imul
stc
or
orb
xor
gs
repz
add
cltd
lods
movsl
add
fdivs
scas
lret
fs
mov
xchg
mov
or
pushf
jno
mov
loopne
lcall
out
lahf
cmc
mov
icebp
cmp
nop
idivb
jge
mov
hlt
stos
enter
movsb
mov
mov
jnp
enter
pop
jle
fmuls
push
aad
add
adc
cmpsl
data16
lods
add
mov
inc
pop
incb
push
mov
xor
fstl
pop
jno
add
xchg
pop
popf
inc
out
jge
in
mov
mov
cmc
pop
insl
jle
test
cmp
push
add
push
jmp
cwtl
and
sbb
aaa
ret
pop
hlt
nop
dec
out
test
mov
cmp
aad
addr16
nop
pop
sub
xchg
loope
insl
sub
xchg
xor
imul
push
iret
pop
pop
ds
iret
xor
pop
add
pushf
sub
or
xchg
rcrb
cltd
pop
std
mov
stos
scas
lret
loop
gs
mov
nop
adc
xlat
pop
inc
sub
pop
aad
test
scas
xor
in
lea
jp
in
outsl
ss
rclb
rcrb
xchg
mov
std
push
insb
jecxz
clc
fwait
addb
in
enter
faddp
mov
call
pop
xchg
enter
push
xchg
mov
ret
inc
mov
out
or
in
inc
cmpsb
dec
int3
pushf
inc
mov
xchg
mov
push
int
incl
cmp
mov
insl
lahf
push
popl
dec
fldcw
jae
mov
lods
movsl
pop
jl
arpl
or
xor
cld
mul
adc
dec
inc
data16
cmp
fcmovb
into
jecxz
in
out
inc
dec
and
or
sbb
cmp
pop
mov
add
pop
enter
test
sub
and
sub
mov
sbb
addb
dec
lods
inc
mul
fisttpll
int3
xchg
adc
mov
mov
icebp
js
aas
push
lret
cli
push
out
or
fsubrl
shlb
movaps
addr16
out
rcrl
adc
out
dec
shrl
xorb
scas
or
fimuls
stos
push
js
xor
enter
mov
scas
sub
sub
cwtl
mov
icebp
movsb
dec
or
inc
test
shrb
mov
std
dec
adc
jno
jl
mulb
das
xchg
imul
push
inc
imul
sahf
lods
mov
mov
test
into
xchg
dec
inc
xor
bound
addr16
xor
inc
jns
cld
and
sub
test
push
jae
insl
out
dec
pop
push
mov
mov
xchg
pop
and
xorb
icebp
addr16
fisttpll
pop
fwait
out
xor
test
mov
loopne
inc
xor
mov
mov
xchg
push
outsl
pop
lcall
out
dec
push
pop
sub
inc
xchg
mov
out
fwait
pop
arpl
mov
int
lods
insb
push
xchg
popa
fwait
push
stos
xchg
mov
pop
mov
jne
sub
mov
jg
stc
scas
inc
cmp
sbb
test
jne
lods
jb
inc
fidivs
jle
and
add
adcb
into
and
inc
mov
outsb
add
jecxz
cmp
dec
loop
and
jg
nop
insl
pop
pop
cmpl
xchg
pop
popa
dec
xor
cmp
scas
sahf
call
push
cmp
push
inc
and
or
cmp
enter
les
out
jle
hlt
xchg
cmp
mov
int
std
iret
cmpsl
div
mov
sbb
sbb
ret
shrb
scas
add
sub
fldcw
jl
aad
xor
insl
ds
sub
test
int3
outsb
call
loop
aad
and
add
add
and
pop
sti
daa
jmp
sbb
rolb
mov
sbb
adc
and
push
push
out
sub
lock
addr16
push
push
jmp
add
es
stos
xor
es
mov
data16
adc
pusha
add
dec
ljmp
dec
mov
insl
ss
add
cwtl
test
adc
mov
scas
and
lcall
push
test
xchg
hlt
push
imul
add
test
sbbl
lock
lahf
mov
add
xor
mov
jns
xor
lds
or
ljmp
xor
inc
xchg
test
icebp
sbb
sti
mov
outsb
adc
xor
and
cwtl
out
mov
sub
sub
leave
add
ja
pop
inc
stc
jp
lret
in
push
mov
dec
or
inc
and
cmp
mov
sub
push
mov
mov
pop
adc
insb
mov
push
pushf
fidivs
scas
xchg
mov
daa
xchg
dec
jo
dec
insl
outsl
xchg
jne
sub
inc
rclb
push
fucomi
jae
aaa
ljmp
push
enter
pop
pop
scas
sbb
rorb
clc
call
idiv
ficoms
inc
and
xor
icebp
imul
add
pop
and
dec
mov
inc
je
jns
cli
and
xor
jecxz
lret
push
push
cmp
or
pop
push
cltd
mov
pop
rolb
or
mov
pavgw
scas
adc
pop
test
push
push
fildl
lds
or
testl
imul
pop
xor
pop
ds
into
sbb
xor
push
bound
movsl
xchg
js
test
mov
xchg
loop
ss
adc
sti
sub
std
div
adc
mov
lahf
loope
mov
jb
insb
lock
repnz
scas
cmpsb
pop
inc
fwait
cmp
repz
ret
stos
test
outsb
xor
sbbb
xor
xor
jp
xor
or
nop
into
mov
jp
mov
pop
in
jl
test
frstor
xlat
cli
cli
leave
xchg
lcall
add
mull
dec
cmp
lea
decb
add
inc
sub
pop
in
ljmp
jg
add
mov
aaa
fs
sub
xor
fbld
lea
ss
push
jle
pop
xchg
inc
mov
mov
and
aad
xchg
adc
and
xchg
adc
mov
mov
or
jo
mov
xor
adc
mov
jb
cmp
mov
fstl
rcll
mov
jb
les
xor
mov
pushf
ficomps
add
in
xchg
pop
jge
iret
out
cmp
loope
xor
test
rcrl
aam
push
mov
cs
cmp
inc
iret
jne
push
inc
ror
push
push
aad
xlat
push
add
jecxz
dec
inc
mov
push
rcrb
jg
sub
es
pop
popf
in
xchg
mov
cmp
push
push
shlb
repnz
cs
test
inc
xor
mov
sbb
fwait
xchg
outsb
std
fwait
and
dec
xchg
ret
add
ret
in
imul
ret
pop
fnsave
pop
sbb
sbb
aas
xchg
lahf
shll
push
add
and
testl
clc
aad
push
rorl
pushf
cmp
cltd
or
sub
inc
into
adc
insl
push
mov
gs
and
fsub
mov
ret
sbb
repnz
xor
mov
pop
sub
sub
fdivrl
les
push
inc
dec
xchg
push
imul
inc
bswap
popf
inc
adc
sub
stos
push
adc
jmp
and
stos
inc
push
jmp
daa
outsb
into
jbe
movsb
and
mov
cld
dec
mov
pushf
push
fistpll
adc
add
add
pop
dec
fwait
mulb
cltd
xor
mov
push
fmul
loopne
std
loope
inc
xchg
inc
shlb
mov
mov
mov
xor
je
push
fisttpl
int
add
std
pop
sbb
adc
xchg
lods
push
or
fdivrs
dec
jmp
xor
cmp
mov
in
shrl
mov
cwtl
in
cli
mov
sahf
subb
cs
fldcw
shld
jns
cmc
inc
cmpsb
cmpsb
xor
outsb
or
mov
mov
xchg
push
ficomps
push
xor
inc
mov
cmc
cmc
xacquire
fnstsw
mov
repnz
dec
cs
push
fs
aaa
dec
xor
mov
dec
mov
arpl
adc
sarb
in
hlt
inc
lock
js
pop
movsb
jge
iret
xor
mov
pop
imul
lahf
inc
dec
shll
mov
jb
inc
dec
mov
xor
pop
push
int3
pop
pop
cmpsl
clc
mov
inc
lods
mov
aad
cld
iret
add
std
sbbb
sub
push
sub
or
xchg
test
and
pop
jnp
lahf
clc
add
pop
sbb
sub
jno
pop
bound
sub
jmp
popf
sbb
mov
hlt
dec
cmp
rol
and
cmp
jmp
es
pop
clc
push
nop
jns
adc
in
fs
inc
adc
and
iret
fidivrs
les
cli
cs
xchg
cmp
xorb
call
inc
xor
xchg
mov
sub
into
cli
stos
test
inc
in
movsb
shll
scas
les
lods
cmc
int3
push
sbb
cltd
lahf
pop
enter
lcall
les
mov
xor
cmpsb
inc
out
dec
push
hlt
lret
pop
clc
cmc
mov
daa
inc
std
adc
icebp
xchg
xchg
in
lods
sti
push
dec
stos
mov
sarl
mov
pushl
insl
test
cltd
xchg
mov
test
repz
xor
sub
dec
dec
mov
dec
or
dec
fwait
pop
jmp
out
add
adc
lods
fdivrs
xor
cmp
arpl
cmp
in
push
mov
sbb
loope
and
out
pusha
adc
inc
std
shlb
sub
test
into
mov
int
inc
or
jmp
adc
mov
lahf
outsb
loope
push
and
subb
mov
mov
pop
push
adc
sti
sub
fisubl
xor
and
repnz
fstpl
fsubl
jmp
xchg
or
or
push
mov
lea
pushf
imul
outsl
mov
outsl
xor
insl
ds
inc
sbb
pushf
orl
push
nop
xor
xchg
xchg
and
mov
mov
pop
out
xor
sarl
loopne
inc
mov
inc
xchg
pop
dec
inc
xor
stos
xchg
sub
repz
fsubrl
dec
fmuls
or
or
cmpsb
jne
jl
mov
push
push
in
jbe
repz
sahf
xor
jp
rorb
int3
and
adc
int
pusha
call
sub
hlt
inc
mull
jmp
jae
sub
mov
mov
cld
in
push
pushf
aaa
int
scas
jno
fs
pushl
adc
jo
divb
sti
mov
sarl
push
addr16
or
out
jle
mov
xor
cmc
jge
adc
pop
cmp
adc
jl
xorl
pushf
test
lock
aas
es
inc
pushf
xchg
notb
inc
insb
es
jo
add
mov
daa
and
mov
pusha
cmp
jecxz
pop
jno
add
add
and
pusha
dec
incl
ret
in
fs
adcl
xchg
into
sbb
out
scas
test
lock
mov
leave
test
pop
movsl
sub
add
xchg
mov
fbstp
mov
mov
mov
loop
mov
push
xchg
pushf
pop
sbb
lret
test
jmp
mov
or
xchg
pop
pop
sub
and
inc
stos
shl
lods
out
or
sbb
lcall
pop
jg
pop
sbb
outsb
lods
inc
push
ja
xchg
outsb
jnp
movsl
dec
dec
lock
mov
roll
cli
jno
lds
jne,pt
shll
out
xchg
jp
pop
and
mov
mov
pop
jge,pt
inc
add
adc
dec
lcall
mov
jns
pop
jl
lcall
sub
cmp
jo
mov
cld
rorl
push
xchg
or
idivb
flds
fdivrs
push
push
adc
aad
cwtl
and
stc
es
call
inc
mov
or
cmp
xor
arpl
int
xchg
pop
aaa
mov
push
int3
outsl
sbb
jbe
push
adc
mov
sarl
inc
cmp
mov
addr16
inc
frstor
add
dec
cmp
icebp
and
stos
sub
and
sarl
dec
loopne
jg
lret
jecxz
mov
pop
xor
fsts
sbb
in
mov
aas
movsb
inc
xor
pop
xchg
lret
push
push
aad
cld
add
outsl
inc
pushf
imul
xor
sub
and
aaa
push
stos
cmc
mov
add
or
pop
repnz
mov
jae
lds
inc
xchg
imul
inc
popa
pop
inc
test
imul
jmp
insb
jo
test
mov
cld
clc
stos
imul
inc
mov
dec
cwtl
rclb
jae
insb
sbb
iret
or
sbb
scas
leave
test
jg
sbb
pop
mov
inc
call
lods
mov
dec
lahf
pop
jo
cmpsl
es
dec
push
test
sbbb
jns
in
ret
mov
mov
mull
fs
in
mov
jge
inc
popf
cmp
lods
out
scas
inc
xor
mov
xorb
fnstenv
adc
loop
lds
push
add
ret
imul
push
test
lahf
inc
sbb
jno
adc
sbb
jmp
popa
into
mov
pop
aad
out
push
imul
lods
shlb
rol
stc
lcall
mov
adc
xchg
cwtl
movsb
scas
jl
xor
pop
mov
out
hlt
mov
adc
shl
xchg
pop
dec
push
repz
into
push
sbb
sti
repnz
outsl
mov
lods
popa
and
mov
in
jg
pcmpgtd
insb
add
xor
cs
adc
ds
dec
test
fsubp
nop
xor
sbb
insl
das
shrb
inc
jmp
inc
inc
push
divb
add
sarb
push
sub
xlat
ja
subb
fiaddl
addr16
xchg
push
cs
in
push
fildl
adc
fwait
add
inc
push
sbb
dec
pusha
xchg
rcl
mov
filds
adc
out
adc
sbb
call
aad
fwait
push
add
arpl
pop
clc
dec
arpl
out
shr
scas
push
js
imul
xor
xor
adc
roll
inc
frstor
sbb
mov
xor
addr16
aam
or
xchg
outsl
add
cwtl
inc
cmc
sti
xor
dec
out
mov
sub
in
loopne
in
jmp
in
push
not
fiaddl
ret
mov
inc
add
adc
push
xorl
jno
popa
push
dec
adc
das
add
aas
jecxz
dec
dec
dec
and
mov
pop
rcrl
jle
cmp
in
cld
lcall
aas
in
test
mov
mov
or
push
sub
out
xchg
xchg
inc
or
xor
addr16
inc
jo
xchg
xchg
into
testl
psubb
jmp
cld
test
adc
push
add
fdivr
pusha
push
xor
cwtl
stos
sbb
jns
or
sub
flds
xchg
iret
ja
test
fldenv
js
push
rcrl
jp
xor
push
xchg
lds
rorl
lods
enter
mov
push
insl
out
aad
jnp
jo
imul
mov
add
cwtl
dec
adc
xlat
mov
push
and
mov
dec
inc
push
push
decl
inc
imul
or
aad
testb
push
or
clc
out
fadds
xchg
push
add
push
cld
jg
out
cmpsl
pop
pop
lods
test
cltd
addr16
cmp
sub
mov
sti
add
mov
inc
mov
sub
sbb
pop
in
jp
sbb
pop
push
pushf
ss
jl
jb
out
add
shll
mov
movsl
push
jl
cmp
add
inc
ljmp
movl
lcall
stos
push
sbb
pop
jmp
jbe
ljmp
aaa
sbb
xchg
mov
hlt
mov
sbb
rol
jo
pop
addr16
push
jmp
out
cmc
inc
and
xor
pop
sub
out
daa
hlt
rcrl
pop
pop
adc
jmp
pop
cs
fcompl
cmp
mov
sub
ret
jb
sbb
push
push
dec
push
fldl
add
push
jg
ret
jnp
aam
inc
inc
stos
lock
mov
mov
or
popa
ret
xchg
repz
idivb
dec
call
and
ljmp
jp
aad
dec
decl
inc
stos
dec
pop
or
xchg
gs
pop
jo
xchg
in
fcomps
sti
adc
jmp
test
insl
pop
incb
add
or
sub
and
push
mov
push
enter
std
jae
add
nop
lahf
mov
push
cmp
adc
cs
scas
inc
cmp
into
xor
push
mov
sub
mov
rolb
mov
mov
orl
inc
ljmp
std
in
xchg
mov
sbb
lahf
lahf
jl
les
mov
pop
ret
lds
xor
gs
ss
add
repz
and
push
mov
in
jge
fimuls
jno
xchg
jb
inc
sarl
add
add
jmp
jle
js
aam
repnz
mov
insb
pop
add
or
mov
mov
ja
jno
push
xchg
inc
jb
sahf
es
jo
and
sbb
sub
mov
add
addr16
icebp
xchg
lock
lahf
ss
mov
add
pop
popf
push
cmp
icebp
mov
xchg
push
mov
test
insl
dec
fldcw
sbb
inc
cmp
and
pop
sub
push
loop
cmp
mull
cld
fisttpl
in
out
xchg
popf
xchg
popa
push
mov
in
sti
iret
inc
lock
stc
sub
jmp
cmpsl
dec
hlt
repz
aas
es
jp
dec
loop
icebp
cmp
push
shll
sbb
cli
mov
adc
shl
sbb
in
mov
jl
sahf
outsb
leave
out
dec
sahf
xchg
inc
sarb
push
scas
sub
cld
bound
data16
or
pop
into
xchg
adc
imull
fldcw
sub
jmp
mov
jbe
ss
jnp
das
clc
pop
aas
cltd
imul
mov
mov
cmp
xchg
cli
ret
je
pop
aad
rcrl
xor
sbb
add
sbb
mov
js
xlat
lea
pop
imul
shl
popf
outsl
push
adc
xor
xor
xchg
xor
lods
xchg
jecxz
lahf
mov
xchg
dec
xchg
mov
js
icebp
mov
xchg
sub
mov
dec
test
call
cmpsb
jge
xor
sub
jne
test
cld
enter
fnstenv
add
and
aam
std
jge
int
dec
push
nop
xorb
mov
push
push
dec
jecxz
popa
fadds
out
sub
loopne
xchg
enter
test
fiaddl
mov
out
std
mov
xchg
je
lods
mov
adc
dec
inc
int3
push
mov
cwtl
test
cs
shrb
adc
mov
inc
sbb
ret
lods
in
pop
jb
adc
ljmp
push
sahf
jle
fcompl
mov
hlt
or
cmpl
test
xchg
enter
lock
cmp
mov
mov
data16
rorl
pmullw
into
lock
jle
stc
push
je
fmulp
jecxz
imul
cmc
gs
jge
jo
shrl
jge
push
jno
ret
mov
ss
mov
jne
sbb
gs
cmpsb
fnsave
leave
out
sub
fldl
pushf
int
push
mov
dec
and
and
xlat
add
stos
movsb
mov
mov
cmp
repz
cli
std
inc
roll
jns
mov
stos
shrb
jo
loope
in
imul
push
popa
stos
dec
sbb
mov
pop
jmp
ss
repz
adc
fdivrl
add
adc
negb
sbb
xchg
ljmp
jne
jne
adc
xor
xchg
fdivs
sbb
fcomip
jg
pop
adc
mov
outsl
pop
jmpw
sbb
cmp
scas
push
repz
insb
insl
loop
loop
xor
dec
in
insb
jnp
inc
xchg
sbb
inc
mov
mov
jg
loopne
and
call
jl
lock
rcrl
inc
jb
and
jg
adc
pop
mov
add
mov
stos
movsl
inc
xchg
sarb
pop
movsl
stos
xchg
clc
sub
dec
jmp
ja
cltd
pop
cmpsb
ljmp
daa
outsb
andb
cs
sub
mov
dec
push
inc
sbb
mov
xchg
jl
xor
std
scas
inc
mov
mov
pop
scas
jns
aas
add
mov
sub
loopne
push
mov
scas
mov
mov
push
sbb
push
cltd
stos
cwtl
movl
push
xchg
ljmp
stos
xor
mov
icebp
xchg
mov
clc
aad
into
dec
jnp
jecxz
into
xchg
into
lcall
mov
xchg
jno
mov
sbbb
jecxz
pop
mov
fisubrl
mov
cli
sub
xchg
sbb
add
pop
movsb
dec
into
xchg
out
ficomps
into
es
cli
std
test
and
cwtl
into
iret
inc
jmp
cli
pop
xlat
divl
scas
mov
push
lds
shll
jmp
in
mov
mov
xchg
out
idivl
ljmp
xchg
mov
cld
ret
test
insl
push
sub
std
pushf
dec
fwait
push
gs
das
xchg
pushf
aaa
xlat
push
xchg
loope
fisttpl
cltd
jp
shrl
jo
stos
fbstp
int3
mov
scas
cmp
cmpsl
int3
mov
dec
adc
orl
icebp
into
dec
pop
mov
das
divb
jl
pop
mov
mov
jecxz
das
test
mov
in
mov
mov
cltd
or
notb
enter
icebp
mov
out
call
lods
fnstcw
pop
scas
mov
mov
pusha
mov
or
adc
out
sbb
push
loopne
xchg
jo
add
cli
xchg
jbe
and
sahf
xor
aaa
cmc
pop
push
out
cmp
movsb
and
mov
or
pop
shl
dec
pushf
mov
mov
cli
adc
inc
shll
les
xor
push
sub
add
sbb
and
jb
or
pop
mov
daa
clc
inc
xor
test
inc
xor
jmp
fsubr
xchg
jae
xor
mov
clc
sti
ds
cld
dec
sbb
addr16
adcb
mov
adc
sbb
cmpsb
sub
scas
test
pop
jge
ljmp
daa
nop
inc
inc
aam
arpl
loopne
add
stos
sti
fstpt
rcpps
std
lods
add
scas
pop
cli
scas
js
jmp
jle
push
fwait
jnp
jnp
jge
pop
mov
push
aad
sub
pop
and
int
adc
das
push
aad
jb
adc
insl
adc
pop
in
test
adc
jb
mov
icebp
cmp
ja
hlt
add
xor
lea
loop
sub
cmpsl
jmp
addl
je
mov
rcrl
jecxz
push
xchg
mov
stc
mov
push
inc
mov
or
lods
mov
jecxz
nop
lret
lods
cmp
rol
adc
fwait
xor
sub
scas
insl
in
or
lahf
push
popa
lret
dec
inc
incb
push
jecxz
arpl
rclb
add
add
aam
push
sub
gs
xor
sub
js
jns
or
pop
test
mov
and
addr16
inc
ret
js,pt
cmp
xor
sub
fcmovne
push
and
aaa
enter
lds
jle
xchg
ja
shl
fiaddl
mov
mov
cltd
pop
mov
frstor
roll
data16
sub
mov
stc
pop
sbb
inc
dec
and
jbe
cmp
xor
inc
cmpsl
scas
out
xor
cmpsb
aas
je
dec
mov
cld
cmp
movhps
cli
cmp
lea
popa
push
outsb
out
xor
lea
pop
pop
adc
add
lods
clc
sti
loop
pop
jmp
inc
lods
int
inc
filds
xor
loop
mov
dec
fwait
jecxz
cmc
sbbb
repz
popl
sbb
pop
dec
pop
cwtl
push
std
jecxz
add
enter
gs
ja
cmp
pushaw
mov
sub
dec
jl
pop
aaa
rorb
mulb
cs
lahf
int3
es
les
lock
xchg
popa
mov
lahf
fucomip
lock
bound
mov
jo
in
jge
jne
xor
push
dec
pop
outsb
push
movsl
push
out
addr16
cld
popa
mov
push
enter
push
xor
adc
or
mov
or
jo
push
push
clc
out
dec
test
jg
pop
push
cs
mov
jno
out
mov
imul
repnz
insl
cmc
cltd
rcrl
ret
ret
pop
cmc
add
jmp
out
sub
dec
into
xchg
aam
and
adc
mov
add
stos
cltd
inc
cltd
lods
mov
xor
mov
icebp
stos
sbb
push
clc
stc
loope
and
push
jecxz
data16
fsts
jne
or
mull
dec
sti
cmpsb
out
dec
filds
int
jg
movsb
test
inc
xchg
or
xchg
cmp
mov
fstpt
stos
mov
mov
jp
xchg
pushf
push
lret
sbb
out
cs
in
fmuls
sar
xchg
jns
repz
lods
fisttpl
movsb
lahf
jecxz
insb
sarb
add
aad
jg
jne
jg
and
div
mov
test
jb
push
cltd
and
mov
jns
push
not
stc
subl
push
pop
fmul
adc
lods
add
in
push
cmp
sti
and
shl
fldcw
mov
pop
loopne
pop
popa
pop
pop
iret
lds
nop
cltd
mov
cmp
xchg
add
push
shlb
loope
xchg
shrb
mov
sbb
insb
aaa
out
ljmp
push
loopne
cmp
lahf
xchg
cmp
mov
shlb
jne
push
lret
je
mov
push
jp
stos
xor
xorb
mov
sub
xorl
insb
pop
mov
mov
popf
nop
loopne
js
into
jmp
mov
cmp
push
sbb
adc
sarl
outsl
xor
sbb
xchg
sub
inc
test
jmp
jge
jo
ret
ret
shlb
ror
cwtl
repnz
cmp
test
leave
push
cmp
and
cwtl
push
sub
sarb
mov
clc
out
andl
and
and
out
push
aaa
push
mov
push
mov
jecxz
mov
push
push
dec
jne
pop
stc
ret
mov
ljmp
push
cwtl
daa
enter
es
std
sahf
cmp
nop
cmp
test
sub
push
cmp
lods
and
sub
int
pop
dec
or
mov
mov
ds
jne
jecxz
hlt
js
jno
lods
outsl
aam
xchg
out
inc
inc
add
xchg
mov
lcall
xlat
mov
cmp
xor
cmpsl
jnp
test
shll
daa
mov
popa
jns
push
outsl
pop
cmp
in
adc
or
xchg
inc
sub
cli
mov
fdivl
pop
sti
clc
dec
into
ljmp
in
sarl
jecxz
mov
sbb
mov
sbb
pop
cmp
rolb
lock
std
imul
and
add
cli
push
mov
mov
cld
xchg
sti
jo
sub
pop
xlat
xor
stos
mov
jecxz
das
pushf
call
mov
dec
xor
sar
lea
cmpsl
pop
adc
mov
in
mov
fisttpll
pop
rcl
inc
cmp
gs
out
mov
mov
push
pop
iret
cmp
mov
mov
xor
hlt
and
or
aas
xchg
movsb
iret
or
addb
shl
xor
jg
dec
xor
les
jge
sbb
jno
addb
sub
xor
in
repnz
mull
cmp
lret
lds
add
arpl
cmp
ljmp
lods
mov
cmpsl
xchg
sub
mov
cmp
lds
fdivrl
cmp
dec
mov
pop
imul
adc
pop
ret
std
scas
daa
outsl
inc
insl
mov
scas
jg
lret
pushf
add
sarb
and
lods
insb
cmc
cmpsb
shll
js
inc
outsl
pop
cmp
push
pusha
jp
push
sub
popf
es
mov
repnz
mov
js
je
pusha
xchg
sarb
out
aaa
mov
jns
loopne
les
jno
mov
push
push
jne
mov
pop
sub
adc
pop
and
rolb
pop
daa
sti
stc
xchg
jb
les
push
cmpsl
xchg
mov
test
push
mov
mov
and
sub
jne
mulb
shlb
popf
dec
call
andl
xor
int
mov
dec
movsb
sub
fucomp
cmp
and
xor
and
popf
outsl
int
adc
push
movsb
mov
aam
shlb
sahf
mov
ret
pushl
sub
pop
test
ret
add
arpl
lcall
or
add
insb
orb
sub
andnps
nop
lahf
sub
imulb
test
mov
xchg
movsl
inc
mov
sub
sbb
stc
in
and
cs
pusha
mov
imul
mov
sub
sti
add
outsb
inc
mov
rorl
ffreep
es
iret
lea
cmp
dec
xlat
jmp
xchg
or
adc
add
adc
aas
pop
push
jb
stc
inc
cmc
call
insb
pop
add
dec
repz
inc
sub
jo
fbstp
add
fs
aam
dec
testl
mov
fistpll
inc
jecxz
cs
andb
mov
inc
xchg
cmp
in
dec
sahf
push
push
xor
repz
add
mov
sarl
push
loop
push
mov
jb
jns
inc
mov
mov
jge
push
fdivs
mov
mov
dec
push
fcoml
pop
lods
push
mov
inc
mov
jecxz
dec
loop
inc
fs
insb
push
rcll
jle
sbb
push
pop
jns
sub
fnsave
pop
add
xchg
inc
adc
scas
sbb
jl
sub
cmpsb
cmp
dec
fnstcw
and
cmpsb
inc
fistps
pop
popa
imul
aas
inc
cmpsb
inc
inc
adc
fwait
jne
in
dec
jle
push
iret
xor
mov
loope
cmp
out
mov
rcl
je
jg
out
clc
cmp
mov
outsb
jle
xchg
pop
pop
mov
mov
or
fimuls
inc
xchg
popa
dec
push
add
xor
sub
fsubrp
es
notb
cwtl
idivb
adc
outsl
fldcw
std
ret
test
out
push
inc
das
pop
sub
or
adc
jbe
or
push
test
daa
push
xor
pop
arpl
mov
test
cmpsb
outsb
aad
mov
scas
nop
outsb
and
xor
xor
mov
clc
jb
push
dec
pop
pop
out
inc
sub
mov
or
mov
sbb
push
xchg
fidivs
sub
je
mov
outsl
fmul
xchg
cs
faddp
jb
sbb
lret
dec
cmp
push
arpl
popa
mov
enter
ret
idivl
loopne
mov
test
or
lods
xor
xor
sbb
add
leave
sbb
aaa
sahf
mov
mov
ja
xchg
sub
cmc
push
xchg
arpl
idiv
je
mov
movsb
jge
sub
cmp
cli
test
pushf
mov
mov
shr
mov
inc
sbb
out
stos
sub
jg
inc
pop
mov
shr
cmp
cmp
or
stos
push
pop
mov
sub
pop
jns
loop
adc
push
test
cmpsb
adc
mov
and
mov
pop
push
mov
jge
xchg
mov
mov
pusha
jp
subb
dec
pushl
popa
jns
cmp
daa
dec
and
movsl
mov
push
lock
pop
xchg
sbb
ret
out
push
mov
dec
inc
add
push
cmp
cli
mov
in
cmc
pop
mov
je
mov
or
lret
push
loopne
mov
in
insb
sbb
xor
jb
pop
data16
push
sub
ja
rclb
cmc
imul
arpl
inc
add
scas
and
jl
fistpll
lds
push
mov
sub
out
lret
mov
jnp
fwait
jmp
add
sub
test
jp
mul
stc
mov
cmpsb
mov
loop
cmp
xor
sub
dec
or
jecxz
pop
add
fsubs
test
jle
or
mov
mov
in
cld
pop
cmpsb
insb
add
push
in
ss
scas
sub
push
dec
in
adc
dec
lret
stos
stos
leave
jb
dec
cwtl
push
sub
nop
daa
xchg
sbb
lods
fs
mov
pop
lret
fimuls
lret
push
cwtl
into
in
xor
add
insb
push
sbb
push
jge
dec
jns
sbb
xlat
fwait
push
or
fimuls
pop
cwtl
mov
push
dec
dec
xor
call
push
adc
cld
je
add
pusha
divl
rorl
push
xchg
pop
loopne
out
test
les
sbb
lods
mov
mov
sub
nop
sub
pop
fcmovnbe
cmp
xchg
xchg
xorl
sbb
lcall
outsb
outsl
adc
aas
inc
loopne
hlt
jle
jne
fwait
xchg
fwait
jl
imul
movsl
arpl
cmp
xchg
stos
pop
sub
mov
jnp
test
bnd
idivl
jecxz
mov
jnp
sbb
test
mov
imul
xchg
cmp
frstor
cmp
push
or
or
cltd
jge
add
xor
pop
jl
jecxz
repnz
mov
mov
cmc
je
jne
xchg
test
dec
push
inc
std
sti
stos
jne
pop
movl
and
out
inc
add
mov
aam
fldenv
cmpsl
int
in
jnp
push
sub
and
mov
dec
add
icebp
pusha
insb
subb
shrb
push
imul
pop
xor
dec
inc
xchg
fsubrs
scas
jno
les
cwtl
fsubr
pusha
mov
mov
cli
js
adc
and
test
inc
aaa
add
sbb
add
and
movb
adc
jo
jnp
int3
loope
cmp
mov
cmp
stos
xchg
fdivl
or
imul
das
loop
imul
jle
lret
imul
xchg
fucomi
adc
sub
fadd
clc
mov
push
jl
not
push
push
sbb
out
ja
std
rorb
lret
jmp
sbb
xchg
fucom
cmpsb
push
or
jb
mov
sub
jmp
loopne
mov
mov
jl
mov
pop
xor
fisubrl
sbb
add
xchg
leave
sbb
cmp
sbb
cmp
add
add
sub
mov
xchg
cli
arpl
pusha
fnstenv
jo
mov
lar
std
dec
sbb
lock
hlt
add
sti
aas
ja
mov
ss
aad
jle
mov
push
in
mov
clc
sub
jmp
stc
call
mov
shr
lret
push
fucom
popf
inc
xor
leave
push
int
out
repnz
mov
pop
icebp
stc
push
sub
xchg
out
jb
mov
lods
out
pop
mov
cmpsl
xchg
inc
sbb
cld
cmpsl
das
imul
jge
shl
add
pop
push
dec
dec
xor
mov
push
fdivs
cmp
test
sbb
movsl
in
dec
cmpsl
xor
mov
rclb
or
dec
fidivrl
xchg
mov
xchg
imul
mov
inc
or
cmp
pop
popf
daa
add
add
jne
loop
push
aaa
stos
xchg
insb
inc
add
xchg
les
fisubl
adcl
lea
sub
mov
push
lea
into
out
popf
adc
jmp
or
pop
add
cli
in
pop
add
push
fsub
mov
out
or
aas
xchg
sbb
pop
xor
ficoml
mov
add
addb
pop
sbb
rolb
movb
sarb
test
movl
int
cmp
xchg
add
ja
sub
data16
mov
cwtl
xchg
push
cmp
adc
inc
fwait
outsl
inc
mov
mov
add
aam
jb
push
lods
popf
out
movsl
in
popf
pop
pop
sbb
shr
stc
push
and
in
sbb
xchg
subl
mov
xlat
mov
fdiv
ret
inc
loope
stos
nop
mov
outsb
stos
out
mov
js
int
stc
mov
add
sar
outsl
jle
outsb
lds
nop
out
mov
inc
jb
pushf
pop
mov
repz
popf
fwait
out
add
push
cltd
xchg
ret
shll
mov
imul
mov
xchg
push
mov
jb
iret
mov
dec
mov
mov
aaa
clc
imul
push
sbb
lahf
adc
mov
inc
lret
mov
cld
adc
flds
and
add
push
adc
cmp
jbe
push
xchg
xchg
jmp
pop
add
inc
add
cmp
int3
sbb
cwtl
and
gs
stc
cs
or
outsb
add
test
mov
mov
insb
sbb
lret
in
jl
imulb
mov
push
cmp
or
outsl
sbbl
lahf
sub
cli
mov
ret
hlt
repnz
das
lds
ret
mov
adc
stos
pop
pop
add
incl
dec
sub
leave
mov
dec
jnp
mov
in
sahf
test
jl
mov
repz
sbb
pop
and
dec
shr
sub
stos
les
jecxz
lret
insb
ret
fstpt
adc
repz
pop
fwait
mov
xchg
adc
push
jae
test
cltd
fadd
pop
out
pop
mov
lahf
ret
or
fsqrt
test
inc
dec
dec
imul
cmp
xchg
jl
cld
sbb
loop
push
clc
dec
test
jp
add
js
jne
sub
mov
or
add
xor
repz
lahf
fisttps
push
call
sub
inc
cld
fisubs
jno
jno
inc
or
xchg
ret
sub
xchg
sbb
push
mov
aaa
insb
jbe
cli
pop
push
dec
call
fimuls
sub
les
xchg
push
ret
jl
mov
in
mov
push
adc
stc
je
jl
cmp
xchg
push
mov
jle
ljmp
mov
ja
add
cmp
mov
int
in
aaa
mov
mov
push
xor
and
lret
sbb
pop
dec
shrl
int3
mov
adc
test
and
ret
outsl
fnsave
jae
jne
jge
jge
into
add
icebp
sbb
stos
cmp
push
sub
leave
cli
xor
push
fucompp
mov
pop
inc
jecxz
push
das
push
sub
ret
vdivpd
mov
leave
int3
sbb
mov
dec
popa
fistl
imul
pop
outsl
out
daa
cmp
dec
sbb
imul
inc
mov
cmp
testb
in
pusha
fisubs
mov
icebp
dec
iret
ficoms
lret
mull
mov
stos
stc
gs
aas
das
lods
imul
mov
sbb
out
add
jnp
pop
and
mov
inc
hlt
inc
xchg
pusha
lahf
mov
jge
leave
rcl
out
dec
jbe
push
sub
and
push
sbb
in
sub
out
push
stos
mov
fbld
mov
mov
cld
fmuls
repnz
std
mov
mov
jnp
lock
push
adc
enter
mov
fs
daa
das
mov
insl
scas
mov
cmp
mov
data16
dec
popf
lods
faddl
in
test
or
xchg
jo
stos
std
jmp
jmp
cmp
pop
mov
hlt
clc
jg
in
jmp
xor
add
ljmp
lret
sub
or
pop
adc
mov
sbb
jge
mov
negb
iret
lret
popf
push
mov
xchg
sbb
loop
sbb
add
bound
or
std
aaa
and
cmc
aas
push
sbb
pop
test
lods
jl
jle
xchg
sti
cmp
adc
ret
scas
or
movsl
shrl
push
mov
pop
xchg
mov
jecxz
dec
pop
lods
mov
and
lods
sub
pop
mov
push
fs
roll
mov
fldenv
dec
push
add
add
stc
mov
xor
xor
push
jno
lahf
pop
out
adc
ret
cld
movsl
inc
pushf
shlb
dec
imul
je
ret
icebp
cmp
and
mov
addb
addb
or
dec
rcll
cmc
pcmpeqw
shll
sbb
lret
mov
pop
mov
inc
pcmpeqb
pop
aaa
out
incl
in
xchg
das
leave
inc
or
pop
pushf
cld
adc
popa
repnz
movsl
lcall
mov
mov
jo
adc
xchg
add
outsl
loopne
xor
movsl
cmp
sbb
xchg
inc
repnz
xchg
xorb
dec
inc
adc
testl
push
cmc
sti
repz
add
mov
inc
xor
or
fstp
and
cmp
cmp
and
sub
lods
pop
add
inc
movsb
iretw
push
fdivp
sahf
bnd
aas
sbb
out
cli
mov
push
fdivs
cmp
mov
adc
inc
pop
inc
rclb
out
mov
xchg
and
dec
rcr
mov
pop
sbb
hlt
jb
adc
mov
sub
popa
jp
jmp
arpl
inc
popa
jmp
lcall
mov
icebp
inc
jecxz
ds
mov
sarl
mov
push
push
jnp
fdivrs
lds
rcll
movsb
daa
test
sbb
in
xlat
popa
sub
loop
iret
ds
lds
js,pt
jp
int3
fnsave
out
push
add
add
fidivrl
sahf
into
sbb
and
inc
je
outsb
pop
mov
fcmovnb
lret
jge
movsb
stc
and
dec
test
ret
xchg
push
ror
xchg
dec
jnp
sti
mov
ds
ret
and
add
add
cmp
inc
icebp
movl
cwtl
out
mov
rcrb
jge
or
sub
mov
mov
stos
sub
loopne
pop
dec
jmp
inc
rcr
call
add
push
rcl
push
mov
pop
sub
add
push
sub
cmp
xchg
fs
repnz
in
aam
popf
xchg
cmp
ficomps
sbb
sub
and
or
mov
test
sub
loope
scas
out
cmpsb
int3
nop
ret
and
rclb
stos
sub
sbb
cli
out
sahf
mov
push
pcmpeqd
stos
popa
clc
into
repz
in
mov
mov
addl
decb
je
xchg
sub
xor
or
popf
aam
int3
push
iret
sbb
fwait
pop
inc
test
insb
sub
cmp
adcl
into
sbb
or
push
push
jmp
icebp
adc
mov
mov
cmpsb
stc
add
pusha
lret
cli
mov
and
inc
les
inc
out
mov
es
push
insl
jmp
aaa
cli
dec
add
outsl
dec
js
mov
hlt
xor
or
rcll
sub
cmp
xchg
outsb
cli
mov
into
push
jp
imul
push
pop
xchg
or
cmp
and
scas
lods
inc
mov
nop
inc
and
add
or
xchg
int
inc
seto
cs
int
mov
loop
push
inc
lock
lds
movsl
fadds
cwtl
out
pop
shll
mov
mov
stos
xor
clc
aam
icebp
push
push
mov
lea
jecxz
cmp
adc
loopne
dec
movsl
xchg
inc
shrl
jp
ret
mov
iret
std
add
movlps
push
pop
frstor
or
xlat
push
inc
push
jne
pop
in
lods
push
adc
inc
or
xchg
out
into
cmpb
je
lock
or
cwtl
lods
xchg
cmp
sub
xchg
pop
jae
xchg
movsb
scas
mov
pushf
movsl
add
sub
mov
movsb
mov
jo
jnp
fwait
push
popf
sub
imul
repnz
add
daa
and
xor
push
out
out
mov
rorl
stc
and
in
inc
lret
lret
cmp
in
xor
and
cmp
aas
sbb
xor
pusha
inc
adc
pop
cmp
inc
cmp
iret
shlb
movsb
lods
faddp
es
mov
nop
test
test
sub
out
imul
orl
and
add
sti
fst
mov
sarl
aam
fcmovnbe
pushf
inc
sbb
mov
ljmp
dec
fiaddl
stos
and
cmpsb
cmp
imul
xchg
jnp
xchg
cmc
aad
cmpsb
mov
arpl
cmp
xor
loope
insb
mov
jns
nop
dec
scas
add
cli
jnp
pusha
addl
jbe
mov
out
dec
rcrl
and
mov
inc
xor
xchg
fistps
cmp
movsl
lock
lahf
lret
rcr
arpl
jno
out
lods
mov
clc
add
lahf
push
cwtl
leave
das
pop
cld
movsl
push
mov
and
add
test
jae
sbb
es
inc
test
or
data16
iret
lock
lods
jecxz
pop
test
push
arpl
add
sub
push
and
pop
xor
lock
andl
mov
jecxz
lret
and
cmp
shll
and
cmp
aas
mov
xchg
ret
repnz
nop
test
mov
fmulp
mov
add
xchg
jmp
pop
rol
pop
jecxz
and
jb
jg
pop
push
imul
mov
ss
je
negb
xor
ret
ss
sarl
int3
outsl
ljmp
adc
pop
in
repnz
fiaddl
mov
pusha
mov
test
fnsetpm(287
repnz
das
test
jp
incb
sbb
jnp
xor
add
pushl
pop
mov
les
out
outsl
or
ljmp
push
or
adc
and
shlb
xor
data16
add
xor
popa
sub
or
and
shlb
popa
jle
add
popa
add
repnz
je
out
cld
pushf
out
enter
iret
adc
imul
adc
iret
cwtl
in
mov
dec
sarl
cmc
and
mov
test
mov
or
popa
and
leave
pop
inc
aad
sti
inc
and
and
mov
sti
inc
mov
int
out
fsub
push
pop
fnsave
in
mov
pop
mov
cmpb
jns
pop
sub
jmp
dec
or
cmp
sbb
push
insb
mov
popf
mov
in
inc
pop
pushf
push
xor
adc
add
cmp
mov
imul
mov
in
fisubl
cmp
scas
push
mov
and
shrb
in
or
stc
or
leave
sub
lcall
cmc
scas
in
push
pusha
dec
push
and
xor
mov
in
pop
mov
push
mov
sarb
repnz
mov
sbb
sub
xchg
fst
xchg
push
push
push
lock
inc
mov
cmp
aad
and
lea
ret
das
cltd
mov
sub
scas
rorl
lcall
in
lods
xor
cmpsl
flds
mov
not
aas
es
shrl
cld
pop
and
cmp
mov
enter
pop
fcompl
and
mov
sti
fists
lret
xchg
or
ret
cmp
mov
out
or
jo
bound
clc
in
nop
mov
test
or
jmp
and
aas
lcall
cwtl
lods
mov
adc
in
jge
jle
or
shrl
jae
dec
mov
loop,pn
repz
adc
or
pop
es
rcr
sub
aad
outsl
mov
dec
xchg
pop
push
incb
push
cwtl
mov
sub
mov
subb
inc
cltd
xor
mov
jbe
insl
mov
pop
sarl
xor
sbb
test
subb
fidivs
leave
subb
pop
jg
adc
pop
negl
xor
je
pop
repz
sbb
ret
mov
adc
not
or
fadds
add
add
mov
cli
cmp
mov
pop
pop
out
in
add
insb
pop
add
rorb
jns
dec
imul
les
sbb
mov
jb
mov
jns
dec
push
daa
mov
aam
cmp
lea
aas
outsl
cmc
push
hlt
xchg
inc
stos
sbb
iret
rcrb
fwait
add
push
mov
and
sbb
mov
je
xchg
aam
xchg
sub
push
jl
ficoml
cltd
or
imul
shrl
rclb
xor
daa
pop
mov
fildl
sub
subl
jl
push
popa
dec
scas
sti
xor
jno
mov
fimuls
andb
mov
popf
mov
popa
daa
fcoms
fsts
or
push
jl
subb
call
ret
sarl
adc
das
cmpsl
adc
adc
std
pushf
leave
lret
stos
call
mov
pop
and
and
mov
mov
push
loop
adc
mov
iret
pop
adc
cmp
add
sbb
and
xchg
dec
adc
push
jecxz
or
fidivs
lds
sbb
cmpsl
call
dec
inc
jecxz
mov
jae
insl
subl
lock
lret
push
and
dec
je
xchg
mov
mov
sbb
rcrl
jl
push
aaa
jp
dec
mov
add
pop
adc
inc
jmp
sbb
shlb
push
mov
push
aam
mov
mov
cmp
sbb
cmc
insb
adc
imul
aaa
jle
pop
dec
cmp
fldz
lods
sbb
cmp
xlat
in
scas
pushf
push
pop
mov
rcrl
movsb
sub
rolb
xchg
mov
push
sub
sbb
sbb
lods
xchg
xor
loopne
push
imul
jecxz
xchg
daa
mov
push
stos
mov
mov
outsb
orl
xchg
insl
jl
data16
mov
adc
cwtl
xchg
ret
cmc
rorb
roll
xor
dec
mov
jbe
lock
movsl
rorl
data16
push
mov
sbb
addb
cmp
jle
ret
sub
bound
and
xchg
jns
sahf
bnd
inc
test
divl
icebp
push
push
xchg
cmp
call
dec
in
cmp
imul
test
inc
and
inc
fldcw
clc
add
call
dec
ss
xchg
test
add
xor
inc
sub
aas
push
cmpb
push
ljmp
leave
lahf
icebp
cli
xchg
lret
clc
ret
shrb
jnp
or
jmp
mov
xchg
pop
in
jmp
mov
js
xor
sbb
cmpl
sub
inc
jp
vdivsd
inc
add
out
mov
adc
daa
mov
rol
mov
sub
mov
cmc
stos
xor
sbb
xor
not
vmovd
or
cmp
aam
inc
bound
cli
jno
push
sti
or
ja
jo
xlat
and
aaa
test
rorl
into
rolb
sbb
das
mov
xchg
dec
sub
cmp
push
sbb
je
das
adc
inc
cmp
pop
jg
jg
pop
push
loope
mov
ret
les
ljmp
sbb
jbe
mov
and
sbb
or
pop
mov
iret
into
xchg
and
ja
xor
arpl
shll
ret
sub
mov
adc
repz
add
jecxz
fs
in
out
sbb
dec
std
sbb
aas
and
and
stos
js
inc
test
roll
sub
push
daa
jl
sbb
mov
or
sbb
pop
mov
cmp
das
pop
inc
aaa
fstpl
pop
es
rcll
cmp
pusha
iret
out
std
je
mov
scas
mov
fwait
inc
hlt
rcll
in
mov
fs
mov
xchg
cmp
push
stos
stos
pop
sub
dec
mov
cmc
stos
lret
adc
repz
in
in
adc
sbb
adc
fistpl
xchg
push
xor
jb
inc
repnz
jb
mov
lock
div
shlb
jnp
in
lods
rcl
dec
xchg
jnp
stc
call
pop
jmp
mov
sub
stc
add
shlb
leave
xchg
lahf
lret
fnstsw
inc
pusha
cld
xchg
sbb
out
sar
jecxz
nop
push
jne
test
and
push
mov
sbb
sub
icebp
sbb
inc
cltd
adc
imul
mov
add
sbb
lods
stos
loope
dec
xchg
sbb
enter
faddl
mov
rcrl
imul
adc
jb
repz
inc
adcb
shl
sub
in
mov
incb
sbb
mov
in
or
loope
test
adc
mov
fcompl
pop
gs
pop
aas
ss
int
sub
and
jbe
iret
jns
push
push
jo
les
sub
repnz
mov
not
push
sub
pop
cmp
repnz
test
sbb
cmp
or
out
push
mov
std
sub
in
aas
cmp
push
mov
cs
fildll
push
xchg
lret
mov
cltd
mov
repnz
sbbl
fcoml
aad
mov
fwait
lcall
jns
test
push
fcoms
xor
cmpsl
add
filds
jne
and
adc
mov
insb
xchg
popa
je
dec
and
pop
jl
lods
mov
les
and
sub
pop
jecxz
cmpsl
test
sti
pop
fwait
xchg
mov
sti
movsb
insl
pop
xchg
dec
cmp
mov
std
inc
movsb
cmp
sub
imul
push
repnz
movsb
sub
into
cmp
and
dec
cmp
sub
scas
adc
shll
icebp
adc
test
push
lcall
sti
data16
xor
and
jnp
ss
popf
mov
pop
les
lods
lods
sarl
jae
or
or
mov
addr16
sti
sahf
xchg
scas
insb
sub
into
cmp
add
adc
fsubrs
push
xchg
in
fisttps
clc
push
or
arpl
pop
pop
outsb
mov
pushf
xchg
repz
xchg
mov
jbe
mov
jle
mov
es
in
mov
and
daa
mov
ja
pop
popf
adc
imul
int
pop
je
call
or
pop
mov
push
add
jmp
fs
push
getsec
movsl
sub
add
add
push
add
ja
xchg
popf
mov
jnp
push
movsl
add
insb
pop
add
add
das
fstl
stos
aas
outsb
rclb
push
xlat
sub
mov
std
jl
in
bound
lret
pop
and
outsl
out
test
je
stc
fwait
mov
mov
xchg
or
dec
inc
stc
out
mov
jnp
jecxz
push
mov
clc
out
in
xchg
fisubl
ret
or
pop
movsb
mov
mov
popf
xorl
decl
jge
cmpsb
cmp
cmp
mov
int3
fmull
xor
pop
cmp
xchg
jnp
pushf
aam
scas
rcl
xor
push
xchg
lcall
jbe
movsl
mov
push
add
add
imul
ret
mov
clc
pop
addr16
add
in
add
xchg
dec
gs
pop
cmp
addr16
rorl
test
push
mov
sub
push
lret
lcall
aam
push
mov
gs
lods
mov
fiaddl
fwait
rcrb
or
out
sti
stos
adc
fs
sub
dec
inc
pop
jnp
sarl
pop
jg,pt
add
mov
int
rorl
jg
or
les
dec
bound
leave
cmp
cmp
sarl
inc
jo
lods
sbb
mov
aad
mov
fldcw
mov
fadds
cmc
ficoms
dec
sub
jmp
mov
clc
jae
push
xchg
adc
jne
mov
adc
push
push
and
and
xchg
fildl
or
imul
mov
push
das
xor
aaa
ja
adc
sbb
sbb
inc
push
and
test
out
pop
clc
add
out
cmp
das
stos
aas
add
call
stos
fsqrt
xor
dec
cmp
fadds
enter
sub
sbb
inc
add
hlt
adc
pusha
mov
les
test
sti
testb
and
nop
lret
add
ds
sub
lahf
jns
add
add
incl
jo
sbbb
fistl
jp
xchg
push
jge
and
push
call
dec
pop
in
fldt
fisubl
outsb
mov
pop
xchg
repnz
loope
cmp
pop
sub
sub
cltd
xlat
test
fisubrl
mov
xchg
push
sub
fwait
stc
fcmovu
jno
sti
and
mov
mov
shll
jbe
int
hlt
xchg
insb
lock
jmp
and
jle
dec
inc
adc
imul
or
fldenv
mov
loope
push
inc
paddq
push
inc
popf
xor
mov
mov
mov
sbb
xchg
pop
xchg
inc
push
jb
shlb
imul
push
js
add
not
add
gs
lods
in
insl
pop
daa
ret
xchg
movsb
push
cmc
fwait
lret
sbb
scas
inc
mov
sbb
int
inc
js
jnp
or
or
mov
shll
cli
sbb
mov
push
imul
inc
add
test
aam
lock
js
mov
mov
sub
sar
pop
in
inc
jno
sahf
lock
sub
gs
push
test
shlb
xchg
les
scas
push
fadds
cmp
gs
mov
cld
nop
pop
dec
xor
or
ss
sbb
in
mov
dec
jb
add
sub
lret
sub
pop
scas
sti
into
jp
inc
bnd
sub
pop
int
fwait
push
push
cltd
std
dec
ret
leave
cmp
int3
jnp
xorl
lcall
enter
mov
fwait
leave
int3
jnp
sahf
addl
aam
loopne
fs
loope
inc
push
repnz
cli
pop
stos
in
outsb
std
jb
mov
dec
cmpsb
adc
jb
and
rolb
test
inc
adc
int
push
inc
mov
aad
rclb
sbb
sbb
divl
and
inc
mov
dec
mov
mov
mov
mov
mov
fidivrs
bound
xchg
adc
test
fwait
ret
xlat
lods
sbb
xchg
inc
rorl
loopne
loop
jno
fs
mov
dec
stc
cmpsb
cmpsl
mov
popa
stos
inc
and
pop
lods
or
cmc
mov
mov
push
xor
inc
mov
jb
ret
inc
push
jne
lahf
jns
pop
movb
cwtl
push
push
xchg
xor
loope
cmp
xor
xor
xlat
int3
hlt
cmc
shr
rcr
add
adc
and
repnz
inc
mov
sbbl
imull
or
push
movl
xchg
jg,pt
ss
jbe
adc
mov
dec
cltd
cmpsb
repnz
inc
mov
lods
loopne
out
or
add
mov
adc
in
xchg
addr16
orb
jb
push
adcl
inc
ja
bound
flds
hlt
inc
adc
pop
les
dec
push
push
jns
lcall
aas
addr16
es
pushf
arpl
stos
mov
mov
xor
pop
mov
mov
push
cld
in
daa
or
addl
adc
mov
dec
adc
jns
jns
ret
stos
dec
jnp
pop
xor
mov
cmpsl
jl
jb
mov
jl
daa
adc
jg
push
mov
and
ljmp
bound
cwtl
adc
mov
subb
pop
ds
and
divb
aaa
fsubs
clc
jnp
decl
xlat
jecxz
jp
adc
lods
mov
and
or
add
pushf
pop
fcomip
out
scas
push
rclb
lods
ss
add
hlt
xor
icebp
orb
pop
setg
or
pop
call
jecxz
xor
jle
je
push
fistpll
adc
mov
mov
adc
leave
mov
adc
cmp
cmp
pop
adc
shl
loop
fsincos
pop
add
and
jle
sbb
int
sub
fwait
cltd
test
out
mov
jno
pop
movb
xchg
jp
movsl
repz
sti
mov
popa
or
jmp
bound
test
call
fnstcw
mov
mov
int
xchg
cmp
xchg
bound
fistps
aam
pop
ret
ja
sbb
push
sub
mov
mov
lea
jb
dec
and
imul
sbb
cmp
jnp
inc
pushf
inc
dec
shlb
pop
imul
or
out
icebp
mov
in
pop
cmp
add
pushf
sbb
push
sahf
fidivrl
add
cmp
add
insb
pop
add
mov
pop
inc
sub
adc
loop
cmp
cmp
popf
pop
rcrb
icebp
adcb
mov
mov
sub
pop
xchg
sub
in
in
pop
shlb
stos
or
sbb
stos
add
repnz
mov
mov
hlt
jp
imul
pop
lea
push
sbb
push
inc
or
mov
repz
add
stos
inc
sbb
and
pop
sbb
leave
ret
loopne
jo
and
push
sub
jbe
mov
mov
push
leave
nop
and
adc
sub
dec
das
int
lock
pop
xchg
cmc
sub
vmwrite
div
mov
sbb
lds
and
jo
imul
mov
and
push
dec
mov
aaa
sub
enter
sbb
repnz
cltd
subb
leave
sti
test
xor
xlat
imul
rol
and
out
mov
mov
in
sbb
dec
xor
add
inc
fnsave
or
aaa
mov
cwtl
xchg
push
leave
sub
popf
add
frstor
cmp
scas
mov
push
jle
cs
in
ss
fidivs
stos
xchg
out
icebp
and
push
cmp
lea
inc
push
mov
mov
aas
fmull
xchg
repnz
insl
inc
jl
andb
stos
dec
jns
or
ss
nop
xchg
lret
in
jl
mull
hlt
lahf
sub
imul
lcall
xor
pop
push
adc
push
fildll
outsb
sahf
pop
sahf
push
xchg
or
mov
or
xchg
xchg
jae
gs
mov
jp
adc
adc
shl
and
addb
in
add
or
cltd
adc
add
add
push
xchg
test
mov
mov
in
add
es
mov
or
mov
cmp
jne
pop
lret
xchg
or
sahf
mov
jl
outsb
add
nop
adc
cltd
jns
cld
push
lds
sbb
add
dec
jge
and
mov
jmp
inc
sub
xor
dec
xchg
pop
insl
mov
inc
mov
add
popf
das
loope
imul
mov
gs
inc
cli
cmp
clc
dec
sbb
or
mov
xchg
loopne
inc
shll
inc
std
mov
shll
jg
pop
test
push
push
bound
pushl
call
jge
shlb
shl
mov
sbb
hlt
out
xchg
cwtl
iret
and
xchg
fwait
rorl
jl
inc
adc
inc
cmp
or
xchg
std
add
stc
js
xchg
mov
mov
fldt
xor
sub
loope
xchg
ss
jge
cmpsl
xchg
mov
add
lods
mov
adc
lock
jns
sbb
mov
xchg
adc
pop
fs
mov
test
lahf
mov
cmpsb
sub
sbb
mov
sub
cmc
arpl
xor
push
push
dec
push
test
add
pop
sbb
xor
sub
adc
gs
insl
orb
lret
aam
or
test
ja
flds
pop
frndint
dec
cmp
sbb
adc
cmpsl
fisubrl
sbb
clc
negb
pop
fwait
incl
cld
jae
test
loop
xor
inc
push
lahf
rolb
lods
push
mov
xor
stc
and
stc
cmp
clc
add
sbb
test
cmpb
push
sahf
inc
mov
mov
in
jl
fidivrl
mov
movsb
pushf
jp
imul
jmp
popf
sbb
sbb
sub
sbb
mov
mov
mov
lret
mov
sti
lret
xchg
lods
inc
sbb
xor
inc
sub
lahf
mov
adc
xor
imul
daa
push
dec
jg
cltd
jae
xor
xor
sbb
pop
adc
sbb
sbb
test
loopne
cld
mov
in
iret
adc
repnz
pushf
cmp
and
jmp
push
lea
movsl
incl
adc
leave
mov
nop
cmp
mov
out
xor
lret
push
adc
scas
mov
jp
les
movsl
xchg
sbb
xchg
aam
inc
dec
popf
xor
adc
jbe
or
or
sbb
xor
scas
cmp
inc
xchg
xchg
dec
mov
insl
lock
rorl
push
xchg
mov
pop
dec
fs
daa
cmpsb
and
popa
cld
mov
jle
ret
movsl
cmp
out
and
xor
enter
mov
push
or
mov
push
xlat
sub
xchg
fwait
mov
cs
add
rcrb
in
gs
pop
fnstsw
sti
push
jmp
push
popa
les
mov
xchg
or
adc
sub
shlb
push
cmp
sub
enter
mov
mov
aas
inc
shl
mov
push
scas
lock
inc
rol
and
push
push
push
popa
in
mov
aad
cmp
shll
test
pop
xor
pusha
je
mov
and
jno
js
andl
bound
mov
mov
insb
mov
fmul
jne
sub
into
mov
mov
pop
das
jl
xabort
xor
sub
or
jb
jne
cmp
dec
std
jae
pop
repz
cs
pushf
and
xchg
in
sti
fistl
add
sbb
in
aas
and
push
in
sub
xor
add
dec
in
lret
ret
xorb
xchg
subb
loope
mov
int3
xor
sbb
mov
dec
imul
bound
push
dec
jle
mov
ret
push
mov
xchg
int
xorb
fcoml
mov
adc
fmuls
les
cwtl
shll
shrb
lods
dec
int3
test
jecxz
sub
es
push
dec
xchg
xlat
int3
mov
pop
pop
or
shrl
rcll
xchg
jo
inc
dec
sub
xchg
movsb
cmp
scas
jmp
xor
pop
mov
repnz
mov
jmp
mov
sti
xchg
push
or
fsubrl
test
cld
push
or
in
inc
jmp
stc
nop
or
in
mov
push
push
jb
inc
fbld
mov
mov
cld
add
pop
ret
or
add
add
mov
sahf
and
out
sub
add
into
pushf
mov
dec
outsl
ror
push
mov
clc
subb
arpl
enter
idivb
testb
push
mov
imul
pop
xchg
jecxz
cmp
movsb
movsb
push
out
or
push
popfw
sarl
sub
add
add
and
sub
movsl
stos
lcall
mov
arpl
push
pushl
xor
push
push
mov
popf
cs
fstpt
inc
cmp
sub
sub
xchg
mov
sub
or
loopne
jg
mov
fsubrs
push
fdivrl
insb
stos
jb
adc
testl
movsb
or
mov
jno
adc
or
outsb
rclb
rclb
out
andb
or
aad
test
jnp
inc
out
in
in
cmpsl
out
rorb
pop
pop
or
fidivl
lds
aam
cmpsl
cmp
dec
mov
push
lret
fwait
outsb
push
mov
or
cmp
loope
cmpb
jg
call
shl
pop
mov
mov
jecxz
rcrl
fmull
mov
cmpl
lret
dec
dec
pop
inc
push
sub
adc
ss
add
cmp
add
jge
ret
iret
insb
mov
and
fldenv
mov
jmp
lods
jl
dec
mov
cmp
jmp
cwtl
pop
jbe
lds
inc
push
inc
sub
xor
push
mov
dec
mov
lods
cs
sub
in
daa
cltd
rcrb
sbb
xchg
shlb
add
out
push
or
in
imull
cmp
ret
sub
and
jmp
lock
jge
shlb
add
pop
pusha
lock
and
jmp
data16
cmpsb
rcrb
mov
jae
mov
std
mov
mov
pushf
outsl
inc
pop
pushf
jle
xchg
push
fmull
scas
jmp
xor
dec
lds
scas
or
leave
dec
or
cmp
mov
dec
mov
add
sub
push
dec
xor
imul
fsubrl
adc
movsb
int
jp
es
aaa
jb
jmp
js
movsb
in
pusha
movsl
cmpsb
lock
push
fstpt
cld
inc
icebp
mov
shll
mov
cmp
popa
ds
pop
push
mov
fists
and
int
sub
xor
int
dec
out
dec
xchg
fs
ljmp
ds
sub
dec
add
sub
test
cmc
bswap
ja
push
dec
movsb
mov
pop
lahf
in
pop
push
outsb
dec
pop
pop
mov
repnz
mov
or
mov
mov
lock
mov
test
or
mov
mov
es
pop
adc
mov
push
fcmovu
in
inc
test
sub
and
stc
add
stc
inc
shr
sbb
test
fists
out
or
cmp
pop
std
push
fidivrl
roll
cmp
pop
push
dec
aaa
xor
mov
stc
lea
mov
mov
out
pop
clc
mov
jmp
xchg
hlt
mov
cwtd
scas
jecxz
cltd
xlat
stos
int
lds
xchg
mov
jae
int
jmp
out
push
jmp
push
movsb
pop
xor
or
ja
adc
fsubrp
iret
fucomip
xchg
add
sub
lock
repz
movsb
in
arpl
xchg
icebp
xchg
fldcw
lea
xchg
pop
fists
mov
js
mov
lahf
cmp
aam
jg
enter
aam
fistps
sub
dec
outsl
mov
mov
iret
clc
ret
or
pop
sub
jae
dec
je
insl
inc
ret
js
mov
ja
cltd
sbb
or
sbb
imul
mov
or
aas
les
jo
dec
push
popa
aaa
fninit
adc
add
sub
rcr
cmp
push
add
xchg
loope
push
fdivl
arpl
scas
sub
add
push
inc
dec
cmp
mov
fdivrl
out
sbb
mov
in
or
xor
mov
push
mov
mov
xlat
push
adc
push
lods
rorl
pop
fs
push
cwtl
and
cmp
movsl
push
add
cmpsb
fsubrp
xor
pop
stos
in
int
dec
push
pusha
and
mov
adc
mov
ret
pusha
roll
jecxz
vprotd
adc
or
sub
cmp
movsb
out
push
push
and
dec
das
xchg
mov
ds
inc
jle
sub
andnps
movsb
lret
push
das
cmp
in
aad
jmp
lods
sub
sbb
xchg
std
xchg
xchg
lock
incl
ja
mov
dec
lahf
sbb
insb
sub
mov
xlat
fildll
push
push
jge
pop
in
lahf
add
pop
test
loop
inc
push
enter
cmp
xchg
hlt
fiaddl
ljmp
sbb
stc
jge
xor
pop
mov
inc
adc
xchg
call
xchg
add
or
cwtl
popf
or
in
daa
lret
fdivrs
pop
adc
sub
andb
faddl
ss
mov
aam
in
or
movsb
pop
jnp
mov
or
jae
imul
mov
sbb
mov
dec
ss
fistl
out
leave
sahf
dec
xchg
adc
scas
insb
xchg
fidivs
xchg
movsl
xor
rcrl
fs
fldl
sub
pop
mov
jg
cmp
sub
push
mov
dec
in
lret
notl
jmp
xchg
push
xchg
lahf
icebp
xchg
ljmp
scas
mov
add
jmp
gs
mov
in
mov
xor
inc
lea
jae
or
shr
imul
aaa
movsl
sarb
out
fiaddl
mov
ret
aad
pop
hlt
sbb
pop
inc
inc
xor
dec
sbb
sub
push
xchg
sbb
icebp
mov
dec
cmp
cmp
bound
xchg
lods
sahf
jmp
push
out
sub
das
dec
cmp
inc
xlat
adc
das
cmpsl
push
and
mov
rorl
fisttpll
mov
pop
fs
ret
sub
loop
inc
out
test
jmp
push
mov
das
call
fldt
pop
xor
jbe
ds
inc
imul
out
xchg
add
inc
sub
shrb
ljmp
and
add
add
stc
out
inc
std
fidivrs
movsb
dec
sbb
mov
xchg
mov
add
mov
sbb
rclb
mov
jle
ret
jl
add
mov
lds
loop
gs
xchg
push
popf
cmp
push
fs
and
ret
leave
xor
mov
sbb
ja
sti
cltd
arpl
sahf
xor
push
test
dec
ret
sarb
dec
xlat
xorb
lock
cltd
mov
mov
and
add
nop
adc
adc
mov
mov
add
jo
mov
movsl
adc
in
jbe
cmp
out
fimull
inc
inc
adc
in
std
icebp
sub
add
xabort
pop
popf
shll
pop
xor
jne
mov
ja
xchg
test
enter
out
test
add
das
scas
iret
ss
jmp
jecxz
in
lcall
or
push
in
jle
jl
movsb
ficompl
or
mov
maskmovq
testl
push
mov
or
fildl
sbb
test
out
test
aad
jnp
adc
fstpl
fidivs
cmc
xlat
and
in
mov
xor
mov
xor
test
sbb
sbb
fistpll
jmp
enter
cmp
mov
in
push
cmpsl
rcr
cld
clc
push
inc
iret
jnp
push
inc
sub
and
mov
fdivrs
sbb
mov
add
xchg
popf
arpl
pop
xor
mov
dec
aas
aam
repz
lock
mov
ficoms
int
xchg
mov
popa
mov
dec
xchg
or
fidivrl
popa
cmp
loope
aam
aaa
inc
sbb
cld
pop
inc
and
bnd
adc
inc
insb
aam
ret
jg
pop
inc
fisubs
cmp
cmpsb
xchg
movsl
in
xchg
inc
out
movsl
xchg
hlt
pop
xor
ljmp
mov
xchg
or
fdivrl
xchg
scas
dec
adc
pop
divl
inc
icebp
das
sub
mov
fldt
inc
std
scas
inc
sbbb
aaa
nop
adc
inc
movsb
jmp
mov
in
aad
into
cmpsl
jnp
lahf
pop
loop
enter
mov
xchg
out
in
sarb
xchg
mov
out
cmp
shrb
and
imul
ljmp
sub
psrlq
cli
stc
je
mov
mov
rorl
ja
lcall
push
mov
mov
idivl
in
int
addb
repnz
push
inc
fidivl
jl
aas
inc
pop
stos
sti
dec
and
push
pop
pop
push
xchg
popa
xor
addr16
or
mov
mov
scas
inc
jle
sbb
xor
out
das
enter
es
aam
push
sub
or
jns
jge
sub
pusha
mov
insb
in
mov
clc
ja
jecxz
and
aam
add
sub
movl
add
stc
cmpsb
jecxz
out
int3
dec
cld
mov
aas
adc
loopne
mov
mov
xlat
mov
sbb
clc
xchg
mov
xorb
pop
sbb
sbb
pop
push
sub
in
cmp
dec
xchg
into
je
daa
pop
cmp
inc
mov
push
cli
test
pop
ss
mov
jno
cmpb
jno
jge
jg
nop
dec
adc
adc
shlb
xor
cmp
sub
cmp
lret
popf
scas
add
js
bswap
push
add
sti
inc
movsb
loope
ds
mov
mov
sbbb
cmp
fldt
notl
jne
jle
mov
mov
subl
mov
in
push
sbb
pusha
pop
lods
sbbb
pop
pusha
sti
mov
mov
mov
leave
push
pushf
push
fsubr
inc
xor
pusha
cmp
xchg
fdivrs
lods
or
sub
jns
mov
push
inc
mov
adc
push
mov
scas
mov
inc
popa
test
stos
sar
call
dec
or
adc
cmc
lock
call
mov
loope
xor
push
scas
mov
dec
sbb
mov
cmp
xchg
inc
sub
imul
xor
cmp
cmp
jp
scas
push
fwait
adc
lret
xor
leave
mulb
mov
cltd
dec
bound
push
int
mov
pop
lea
in
xchg
ds
repz
push
test
sub
testl
inc
and
jg
fidivrs
xor
scas
xor
mov
insl
lret
mov
and
pop
dec
or
out
cmp
lods
lods
jno
jae
jle
add
mul
inc
dec
add
aad
mov
outsb
popa
shlb
gs
repnz
add
jo
xor
push
lcall
or
arpl
xchg
push
lds
in
inc
sbb
adc
mov
xchg
mulb
ja
mov
fs
andb
sti
pop
xor
cmpsb
es
mov
adc
paddusw
nop
test
aam
push
mov
andb
and
push
daa
pop
icebp
inc
push
inc
shlb
pop
int3
cmp
outsb
in
push
sbb
ret
mov
lret
cmp
jnp
mov
pushf
insb
lea
pop
push
inc
sbb
jl
sbb
fnstsw
adc
add
and
sbb
add
mov
mov
stc
pop
stos
into
xor
add
movsb
jb
jb
fcomps
lahf
push
cmp
imul
mov
push
xor
imul
fsub
popa
inc
int
adc
mov
in
cmp
andl
mov
mov
xor
cmpsl
je
mov
out
inc
cmp
dec
adc
scas
push
popa
pop
fldcw
gs
jge
divl
xchg
inc
fwait
in
add
ret
cs
dec
add
out
out
popf
adc
xchg
and
bound
add
jg
push
inc
mov
mov
push
cmp
lcall
sub
in
push
cmpsb
shll
xchg
or
mov
adc
adc
sub
sub
and
gs
sti
mov
fisubl
and
dec
imul
xchg
and
mov
mov
jg
mov
rclb
mov
es
scas
into
inc
add
mov
mov
xorl
dec
hlt
mov
lds
imul
mov
std
mov
sbb
push
dec
je
inc
loope
ret
std
jge
imul
lock
push
nop
test
mov
in
jge
dec
rorl
push
movsl
jae
add
add
cld
jg
and
es
add
add
insb
pop
add
das
pop
test
int
lret
cmp
sahf
mov
or
xchg
gs
out
mov
cmp
cmpsb
stos
dec
lock
push
stos
ja
call
xchg
imulb
and
jmp
jo
andl
pop
mov
icebp
push
fimull
jg
add
popa
jnp
popf
sub
repz
push
add
jne
pop
jl
iret
sahf
or
mov
ja
lret
sub
hlt
mov
pop
movsl
mov
test
shrl
jl
int3
rcll
sbb
xor
xchg
xor
push
sbb
jns
jne
cmp
dec
call
loopne
dec
cmp
cmp
lods
add
shrl
in
popf
ficoml
icebp
sbb
in
mov
repnz
pop
int
pop
push
inc
and
push
in
xor
cmp
cmp
push
loop
push
mov
hlt
lods
pop
lret
inc
mov
call
inc
mov
repz
add
clc
sub
fsub
pop
mov
pushf
lret
je
mov
dec
std
inc
out
test
out
xor
sbbb
lret
push
cltd
je
les
ret
pop
mul
pop
std
mov
or
outsb
cmp
pop
xor
cmpsl
pop
and
sbb
mov
sbb
in
sahf
cmp
out
in
sub
mov
pop
lahf
push
movsb
push
ja
andl
ror
xchg
popa
lock
mov
pushf
pop
repnz
lret
popf
leave
int3
sub
and
or
fildll
add
dec
cltd
sub
add
insb
xchg
and
inc
mov
cmp
cs
dec
cmpsb
call
loop
fs
jae
mov
cmc
clc
dec
shl
outsb
xlat
mov
mov
cmpsl
out
push
push
mov
and
push
and
jb
adcb
inc
pop
out
cmc
and
jl
repz
xchg
das
xor
in
jno
add
xchg
or
push
add
mov
jmp
push
sbb
mov
hlt
ljmp
pop
mov
loopne
sbb
in
or
stos
cli
ficomps
rorb
test
cmpsb
jae
icebp
movsb
lahf
add
xchg
test
scas
inc
adc
pushf
cwtl
sbbl
pop
cmp
mov
sub
rorb
jno
mov
test
and
adc
inc
enter
sarb
or
adc
mov
xchg
stc
sbb
pop
sbb
push
scas
data16
mov
push
das
lods
sub
sub
insb
das
cs
lret
xchg
jne
ss
push
test
xchg
fmulp
jl
or
mov
scas
inc
je
vcvtdq2ps
push
into
dec
xchg
movsb
mov
adc
pop
shl
stc
scas
mov
add
lret
xlat
xorb
and
clc
adc
and
movsl
mov
cmpsl
pop
pop
mov
flds
fsubl
mov
adc
pop
and
gs
add
dec
push
xchg
xchg
sahf
test
cmp
cwtl
and
mov
out
fndisi(8087
mov
scas
or
pop
sbb
jp
pop
push
or
push
xor
arpl
lods
das
push
rcrl
and
fmull
daa
xchg
dec
push
sbb
data16
xchg
fnstcw
mov
or
lods
rcrl
xor
mov
leave
adc
xchg
mov
repnz
fstp
js
dec
sub
jecxz
inc
pop
pop
mov
sub
sbb
dec
stos
mov
xchg
scas
push
insl
inc
aam
int
movsl
movsl
xchg
int3
mov
orb
mov
dec
sbb
repz
jae
ss
dec
adc
out
sbb
sbb
inc
repz
and
les
ss
xchg
mov
pop
mov
in
stos
xchg
sbb
ds
out
mov
mov
sub
inc
imul
imul
addr16
movsl
cltd
movsl
mov
dec
cli
out
in
aas
add
dec
jne
jecxz
pop
fs
mov
pop
jg
adc
jp
mov
aam
xchg
mov
out
and
popf
mov
test
dec
hlt
outsb
jno
push
add
test
into
dec
test
jp
outsb
xor
out
cmp
lret
int
pop
lds
out
sub
xor
mov
jno
fisttpl
fldcw
xor
ljmp
cltd
icebp
push
call
sub
ds
dec
cmc
hlt
repnz
loop
xor
jmp
add
mov
xchg
xchg
std
lahf
sbb
fiaddl
and
fmulp
stc
jmp
push
dec
std
jecxz
jno
xor
adc
pop
ret
shlb
arpl
push
jno,pt
mov
loop
lcall
pop
sub
cltd
add
or
lret
mov
dec
pusha
divl
inc
or
popa
xchg
or
lock
testl
into
mov
aaa
cs
rorl
dec
outsl
add
inc
mov
lods
mov
mov
mov
xchg
cmp
adc
push
mov
fsubr
mov
in
jb
add
mov
pushf
jns
or
push
mov
mov
or
xor
into
mov
xchg
xor
sub
mov
sbb
mov
bound
das
repnz
push
test
mov
scas
loop
hlt
mov
xchg
rolb
lahf
mov
jmp
inc
xor
push
out
push
push
fwait
out
movsl
cltd
lods
addb
push
add
arpl
push
push
mov
mov
sub
cld
fimull
push
mov
push
movb
int
lock
adc
add
push
xor
add
xor
jmp
push
push
subb
push
sbb
jb
in
mov
add
nop
bound
pop
and
in
in
push
cmp
into
jns
int
xchg
int
inc
cs
mov
repnz
fs
mov
and
fs
sub
movl
imul
stc
and
xchg
adc
shll
lods
add
js
aas
fiaddl
mov
xchg
inc
xchg
cmp
cmpl
jg
movsl
sub
jnp
sbb
bound
stos
lahf
pop
or
mov
imul
cli
mov
ret
mov
push
cmpsl
rcrl
xorl
les
ss
lock
shr
and
aas
fcomip
out
or
jo
insl
lret
insb
pop
add
int
jle
add
xor
lret
jmp
mov
inc
rcl
lahf
inc
adc
xor
jge
and
out
and
ret
movsb
cli
imul
sti
in
sahf
push
cld
sub
cld
je
adc
push
lcall
sti
adc
inc
lods
stos
enter
mov
sub
fstps
cmp
popfw
jb
xchg
inc
lahf
cmpsb
loop
sbb
add
push
fcomip
add
xor
pop
mov
adc
test
adc
adc
hlt
cmpl
lahf
fidivrl
into
mov
ds
xor
mov
or
push
leave
mov
aam
int3
and
cmp
jg
add
dec
jl
notl
gs
lock
fbld
add
outsb
adcl
push
cmp
aaa
movsb
cmp
inc
sbb
arpl
out
loop
xor
pop
xchg
push
inc
sbb
mov
out
loopne
push
fistl
inc
cwtl
gs
rcll
bound
cmc
int3
cld
ret
jo
sub
inc
aam
push
adc
jecxz,pt
push
lods
test
mov
repnz
pop
xchg
jle
ds
and
jns
rorl
mov
shlb
pop
scas
or
inc
out
pushf
test
lahf
lahf
in
xchg
imulb
cli
push
mov
or
shl
shlb
add
add
call
dec
ret
std
out
out
adc
mov
push
inc
sbbl
fbld
sahf
dec
mov
out
pop
cmc
jp
and
andb
loopne
fstl
dec
push
test
test
xchg
aam
mov
es
hlt
out
sub
fbstp
inc
sti
repnz
mov
scas
out
push
loop
xor
and
mov
out
daa
or
adc
or
push
cli
jp
jl
xchg
mov
pop
mov
push
sub
xchg
sar
jg
pop
sub
or
leave
inc
lock
dec
jo
je
jle
and
stc
xchg
sub
pop
cmp
xchg
jns
and
out
xor
lea
xor
bnd
adc
push
sbb
adc
arpl
sbbl
sub
sbb
xor
jb
mov
or
popf
add
cld
dec
inc
jbe
mov
cld
adc
loope
dec
jb
adc
add
pop
mov
mov
shll
jo
mov
xor
dec
pop
mov
hlt
into
mul
or
enter
jbe
jg
fmull
aas
push
push
inc
mov
xchg
aad
add
cmp
fstps
pop
insl
dec
pop
fwait
pop
aad
dec
or
add
loop
or
mov
and
mov
adc
pusha
xchg
push
mov
mov
shlw
push
in
cmp
ud2
xchg
mov
lds
test
push
cltd
add
jg
rcrb
sbb
data16
xor
fstpl
mov
ror
xchg
cltd
pop
mov
jmp
inc
mov
xor
add
sbb
mov
mov
sarl
push
fs
mov
loope
jg
test
jb
fdivs
loopne
or
loop
sarb
int3
ret
mov
sub
xor
leave
bound
jno
ret
ret
push
mov
fdivrp
or
cmpsl
je,pn
adc
pusha
sbb
gs
std
push
sbb
sub
push
jl
cmp
mov
fwait
cmc
sarl
push
jnp
push
hlt
adc
push
xor
mov
lret
xor
hlt
ljmp
or
dec
mov
fs
fwait
add
imul
sarb
and
mov
sbb
lcall
push
mov
push
div
lock
dec
mov
fwait
ret
mov
pop
adc
hlt
add
pop
hlt
movsl
pushf
fwait
arpl
mov
faddl
pushf
ret
push
shll
popf
sub
aam
inc
lcall
mov
jno
mov
xchg
mov
data16
mull
mov
push
jno
mov
mov
mov
nop
test
mov
or
push
lock
xor
xchg
push
jle
test
cs
cld
ret
cmp
mov
xchg
jno
add
addr16
sbb
sbb
imul
fsubrs
sub
xchg
shlb
ja
hlt
stos
mov
loopne
shrb
daa
lcall
push
addl
xchg
dec
fs
int3
imul
push
out
push
xchg
or
xchg
popa
lahf
and
leave
xchg
push
fdivl
mov
orb
sbb
push
mov
pop
sbb
es
inc
stc
test
cmpsl
movsl
and
or
arpl
mov
dec
xchg
push
mov
sbb
sbb
fsubs
mov
lret
add
and
adc
aad
clc
push
jmp
cltd
dec
mov
mov
push
inc
movsb
in
push
jmp
test
lea
fwait
pop
je,pt
mov
loopne
dec
add
les
sbb
pop
scas
incb
mov
call
shlb
add
outsl
xchg
out
fsubr
nop
cwtl
ret
test
cmp
add
or
lret
ret
ret
jo
shrl
mov
ljmp
out
movsl
xchg
imul
lods
xchg
ret
xchg
lret
push
xchg
hlt
xchg
inc
jle
pop
dec
data16
sub
test
add
mov
xor
dec
hlt
or
xchg
pop
sti
or
jmp
mov
xor
fs
sbb
iret
fildll
sub
ret
stos
dec
push
dec
sub
cwtl
clc
mov
pop
xor
xor
int3
call
pop
and
jnp
mov
aam
add
jnp
add
dec
notl
lock
fidivl
mov
mov
mov
addl
lahf
mov
push
xchg
jle
lods
pop
cld
and
rol
and
mov
adc
enter
pop
dec
xor
pop
push
and
testl
sub
inc
xor
sbb
roll
clc
bound
xchg
xchg
out
sbb
push
dec
push
not
mov
mov
pop
jns
jg
mov
lret
ja
daa
inc
call
sti
add
insb
pop
add
das
adc
xlat
ret
sub
add
gs
in
mov
and
rol
sub
and
sbb
fs
fisubs
movsb
lret
mov
jne
pop
mov
sti
cld
aas
xchg
leave
push
ja
out
rcll
xchg
mov
add
shrl
ja
test
jbe
mov
pop
lahf
stos
ljmp
ucomiss
ficomps
jmp
scas
in
cwtl
ljmp
hlt
mov
lods
xor
stc
ficoml
adcb
xchg
loopne
sbb
jecxz
pop
sub
addr16
seto
mov
loope
xchg
imul
inc
shr
inc
sub
add
nop
add
ror
inc
sbb
and
mov
leave
mov
jns
leave
dec
dec
ret
out
insb
mov
cmp
mov
loopne
scas
xchg
adc
mov
test
mov
adc
jmp
add
popa
idivb
lock
inc
das
or
sar
cmpsb
bswap
mov
xchg
stc
dec
cwtl
mov
leave
scas
jbe
xor
push
cmp
or
pop
add
sti
or
fwait
xor
xor
dec
arpl
subb
sbb
jle
add
add
sub
dec
cwtl
mov
xor
bound
jae
into
pushf
shlb
sbb
jmp
and
sbb
jmp
pop
in
adc
xchg
repz
out
jp
cmp
jnp
cmp
js
xor
outsl
cmp
out
subb
or
push
mov
jnp
jge
ljmp
mov
pop
push
sub
mov
lahf
lock
ss
mov
or
jl
adc
decb
adc
imul
or
test
xchg
arpl
es
xchg
xor
push
cwtl
mov
dec
xchg
cmpsb
rcrb
mulb
int3
popa
sarb
iret
push
cltd
xchg
push
xchg
adc
out
iret
bswap
cmp
fstpl
js
cmpsb
add
xor
test
xor
cmp
fisubrs
imul
sbb
mov
out
jnp
outsb
push
xlat
adc
add
cli
gs
int
xor
cmp
or
cli
cmpsb
out
out
js
aas
pop
fadd
js
sbb
ror
pop
inc
lds
mov
imul
popf
push
outsl
ss
xor
fs
fwait
xchg
out
leave
clc
sub
push
pop
mov
mull
pop
imul
movsl
fidivl
pop
mov
adc
aaa
sbb
outsl
sub
jl
xchg
mov
adc
cmp
xchg
mov
cli
mov
jnp
jl
mov
add
pop
fs
rcll
xlat
out
loope
aas
sarb
clc
cli
dec
scas
mov
popa
mov
xlat
mov
inc
loop
insl
aas
out
ret
outsb
popf
cmp
mov
jo
test
sub
xchg
test
xor
bound
das
pop
fdivp
out
rorb
mov
inc
mov
add
rorl
sti
movsb
mov
ret
mov
xchg
ret
xor
div
inc
inc
fimull
cmp
dec
or
rolb
and
adc
addr16
ja
in
dec
outsl
nop
in
pop
popf
mov
xchg
mov
in
xchg
aaa
inc
jns
mov
insb
adc
xor
push
xchg
addr16
mov
cmc
testb
and
mov
fwait
mov
cli
das
mov
iret
fs
lret
push
lock
push
iret
aaa
bound
mov
or
mov
mov
cmp
jae
leave
dec
std
dec
mov
scas
jmp
sarl
xchg
adcb
jp
inc
mov
jne
aam
out
xchg
add
sbb
xchg
or
jmp
cli
mov
pop
outsb
out
pop
movsb
xchg
addl
inc
lods
sbb
into
jge
and
push
push
out
push
pop
sti
mov
repz
mov
xor
int
jns
xchg
pop
dec
adc
pop
jbe
andl
out
push
leave
mov
xchg
push
jno
push
pop
mov
sbb
pop
jg
jp
mov
cld
std
dec
sub
test
aam
mov
imul
daa
inc
movsb
and
cmc
in
jge
mov
adc
cli
add
dec
mov
sub
stc
cmc
xlat
movsl
jae
xchg
and
pop
jge
sub
inc
cltd
aaa
xor
and
mov
test
data16
mov
cmpsl
outsl
mov
sub
loope
sti
xor
hlt
fwait
xchg
aaa
shlb
inc
adc
mov
inc
negb
pop
gs
mov
push
fnsave
jne
push
sbb
mov
aaa
and
xor
stos
push
push
fldl
xorb
mov
out
add
hlt
push
dec
std
out
es
pop
test
insb
or
jb
jl
bound
or
neg
ljmp
sbb
imul
jae
jp
out
dec
in
subl
test
inc
mov
into
xchg
gs
data16
scas
jmp
test
jp
lret
je
or
pusha
fwait
sbb
pop
ljmp
stc
outsb
cmp
subl
xor
inc
pop
cmp
test
test
sub
mov
pop
mov
sti
hlt
push
sbb
fisubl
mov
sbbb
cmpsb
loopne
pop
not
cltd
cmp
mov
adc
or
push
in
mov
dec
lahf
jbe
dec
xchg
sbb
loopne
outsb
stos
mov
shlb
data16
out
fcoms
adc
push
dec
and
iret
call
pushf
cmpsb
rolb
cmp
or
into
out
cmpsl
ss
cld
xor
sarb
cwtl
pop
movsb
out
sub
jecxz
jnp
ret
cmp
mov
cmp
add
push
cmp
scas
inc
sbb
in
push
jnp
mov
jne
cli
fisttps
xchg
imul
ret
cmp
mov
sahf
jne,pn
decb
adc
ss
fldenv
call
xor
stc
movsl
add
cmp
pop
leave
lahf
jbe
repz
xor
jl
notb
add
mov
aas
sub
dec
clc
and
jg
inc
stc
lcall
clc
mov
mov
lahf
sbb
into
cmp
jecxz
xchg
inc
xrelease
jge
mov
aam
out
sub
dec
movsl
jl
mov
int
shlb
leave
sub
mov
push
pop
mov
pop
es
shrl
insb
pop
add
sbb
pop
jne
and
test
pusha
fmuls
add
dec
sarl
lods
dec
sbb
mov
imul
jo
test
mov
cmp
add
addr16
movsl
push
sbb
les
and
cmp
mov
ret
fnstenv
mov
inc
add
out
cmpsb
fmull
in
adc
mov
inc
int3
sub
test
inc
cmp
jmp
sbb
nop
mov
std
lret
scas
mov
mov
jnp
xor
pop
cli
jb
dec
xchg
fmul
push
fisttpl
lcall
dec
sub
adc
and
test
pop
cmpsl
and
mov
test
fnstcw
dec
mov
hlt
std
shlb
mov
cmp
scas
dec
mov
aaa
fisubl
inc
movsw
or
sbb
fwait
xchg
test
push
jne
mov
fldl
mov
push
lea
out
ja
pop
mov
dec
iret
aaa
inc
mov
xlat
fs
lret
outsl
outsl
int
lret
xchg
xchg
mov
push
lods
mov
movsb
jae
loop
jl
inc
icebp
scas
ret
sarl
mov
out
add
in
mov
rcrb
xchg
outsl
lods
mov
lret
incb
test
push
out
adc
mov
arpl
push
into
iret
aaa
mov
adc
mov
push
add
in
and
sbb
test
imul
pop
jb
mov
les
fs
mov
sub
rolb
pop
or
xchg
add
pushl
jb
xlat
scas
mov
imul
jle
dec
mov
sbb
ja
lods
pop
lahf
fisubl
lret
inc
or
sbb
mov
lods
add
roll
cmpsb
inc
xchg
adc
dec
or
lds
or
aaa
shrb
dec
jae
adc
out
orl
subb
sub
rclb
sbb
jg
add
lretw
fwait
fwait
inc
adc
lahf
pop
iret
adc
or
les
and
or
leave
adc
nop
adc
dec
sub
repnz
or
mov
mov
push
cmpsb
adc
dec
inc
dec
add
jmp
dec
bound
jns
repz
test
cli
push
mov
iret
or
sbb
and
sub
loopne
mov
fidivs
lods
dec
fsubs
cmpsl
mov
ret
mov
jns
add
or
out
icebp
dec
xor
and
cltd
add
xchg
mulb
xor
sarl
je
loop
xor
cmp
mov
xchg
movsl
fwait
push
in
jge
pop
push
jbe
push
or
xor
nop
add
sub
aaa
add
cmpsb
xchg
fnstenv
pop
test
xchg
xor
sysenter
jge
aaa
push
xor
xor
lret
fmulp
xchg
nop
mov
push
sbb
enter
push
add
mov
idivb
mov
int3
lods
pushf
pop
xchg
mov
lahf
rolb
int
loopne
jo
push
rcrl
popl
cmpsb
cli
jmp
les
xchg
xchg
inc
push
mov
push
dec
iret
sbb
sbb
dec
sahf
add
imul
xchg
clc
adc
inc
cltd
mov
mov
dec
sbb
in
adc
sub
lods
dec
jno
hlt
dec
sub
arpl
scas
xor
cmc
or
ljmp
je
cwtl
sub
aaa
stos
stc
pop
adc
xlat
popf
fucomip
cwtl
in
dec
or
lea
jp
push
pusha
lds
sub
xrelease
or
adc
jno
sub
cli
nop
cli
das
cmpsl
out
jecxz
xchg
and
fwait
addr16
push
mull
out
js
lahf
adc
inc
mov
test
pop
dec
shll
in
add
scas
repnz
aaa
in
movsb
mov
cs
inc
fisttps
fimuls
clc
pop
sbb
or
push
inc
cmc
ja
adc
adc
test
orl
adc
test
aas
or
push
outsl
push
push
adc
xchg
sub
cmp
mov
bnd
mov
stc
dec
cs
jo
leave
and
fsubrs
fdivr
andnps
xchg
xchg
xchg
mov
mov
stos
mov
leave
push
inc
shll
movzbl
push
inc
mov
mov
insl
push
out
je
sub
pop
sti
jo
in
sub
clc
lret
repz
sub
pusha
or
xchg
jecxz
push
adc
xchg
pop
add
fnstsw
pushf
inc
xchg
sti
lret
cltd
add
repz
scas
gs
hlt
fcomps
rcll
jge
ret
cmp
add
loope
jle
in
or
pop
push
push
pop
faddl
jmp
adc
fdivs
sub
mov
cmp
mov
loopne
pusha
lods
sbb
fdivrl
pop
in
iret
mov
mov
ljmp
inc
stc
inc
inc
in
push
xchg
cltd
pop
dec
or
lods
out
mov
rorb
xchg
sbb
in
test
sahf
fwait
addr16
jo
add
push
mov
and
hlt
movsl
sbb
and
scas
jbe
fdivs
and
pop
call
aaa
jb
imul
xchg
sbb
data16
inc
fidivrs
or
ljmp
and
add
lods
aaa
jb
sarl
push
jmp
icebp
xor
sahf
or
pop
jl
mov
push
or
xor
and
push
jle
push
shlb
mov
int3
dec
and
mov
pop
shlb
pop
jecxz
xor
push
and
sbb
xor
mov
call
sub
mov
or
xor
mov
repnz
testl
or
fs
push
js
test
cs
insb
in
fstpt
adc
mov
rcll
dec
stc
push
mov
ss
cmp
rep
xchg
enterw
adc
bound
adc
pop
mov
mov
cltd
dec
mov
sub
cwtl
fstpt
outsl
xchg
scas
jo
test
insl
add
push
roll
mov
ret
clc
ss
inc
iret
push
cmc
cli
dec
je
je
inc
mov
pop
out
nop
lahf
push
dec
jbe
lds
pop
mov
jmp
cmp
mov
mov
pusha
mov
mov
push
mov
scas
ror
push
pop
mov
cmp
push
pop
mov
add
insb
pop
add
add
outsb
xor
pop
jne
lods
sbbb
bound
test
add
adc
outsl
lods
dec
adcb
into
aaa
pop
cmp
cwtl
sub
inc
push
jbe
adc
cmpsl
xlat
push
add
out
xchg
cmpsl
mov
sbb
push
xlat
pop
ss
sub
gs
sub
fnstenv
or
cwtl
test
sbb
mov
and
xchg
adcl
xor
or
dec
push
sahf
cmp
add
push
lds
sub
adc
lods
add
mov
das
cmpsl
popa
jae
fsub
mov
pop
out
bound
adc
add
jbe
dec
sbb
push
mov
ret
out
stc
push
lods
les
loop
dec
add
sub
in
and
ficomps
cmpsl
les
pop
adc
xchg
mov
cmpl
xor
leave
stc
mov
aam
xor
xor
adc
mov
sub
push
pushl
aam
test
and
mov
cmpb
pushf
sbb
sarl
aam
adc
xchg
lret
lods
rep
fwait
movsl
and
call
mov
popa
or
scas
xor
fsubr
pop
push
add
outsb
hlt
xchg
pop
imul
movb
jb
adc
fisubl
stc
push
sub
iret
std
ss
cmc
cmp
add
outsl
sub
jne
mov
and
jmp
lods
into
adc
sbb
sbb
push
mov
ficoms
push
sti
sub
fs
jl
sbb
out
mov
in
cld
sub
jo
dec
mov
pop
add
push
dec
dec
daa
pop
or
sbb
pop
sahf
js
xlat
cmpsl
push
fbld
sbb
ljmp
repz
flds
pop
add
in
and
mov
jns
cld
popf
clc
in
loopne
xor
jnp
leave
icebp
rcll
std
rol
cmp
sub
jg
sbb
rcr
lret
in
push
cmpsb
fisubl
pop
mov
stos
pop
push
sbb
iret
test
inc
mov
and
jmp
push
repnz
or
xor
mov
lret
sbb
pop
inc
fs
aam
xchg
lods
test
test
scas
xchg
cmp
jnp
and
dec
jmp
jo
xor
pop
or
mov
lret
adc
aaa
rcrb
mov
xor
sub
or
outsb
imul
mov
movsb
adc
std
rol
stos
fsubs
push
mov
mov
sub
pop
xor
push
imul
or
in
mov
rcrl
sbb
mov
dec
clc
or
or
mov
push
push
ljmp
and
cmc
xchg
mov
popf
add
sub
cmp
std
mov
arpl
pop
lret
cmp
test
fstl
icebp
loope
dec
cmc
cmc
ficomps
mov
out
cs
mov
jmp
inc
lock
mov
test
add
sbb
into
icebp
es
in
sub
push
negb
mov
xlat
adc
xor
mov
popa
jl
mov
mov
cmc
mov
adc
cmpsl
mov
fisttps
jmp
inc
mov
jno
movsl
inc
sbb
jbe
push
shrl
jnp
addr16
les
cmpsb
jb
fldt
or
fstp
mov
sub
cmc
mov
leave
pushf
imul
sbbl
cmpl
enter
cmc
add
cmp
lock
mov
test
repz
into
ret
pop
add
jl
shr
rcr
in
fsubrp
push
or
adc
mov
aad
scas
iret
mov
inc
pop
dec
in
adc
add
inc
mov
insl
dec
stos
or
ss
mov
inc
out
push
aas
sub
xchg
es
xchg
mov
into
movsb
jo
mov
jbe
in
leave
das
loopne
stos
inc
push
aas
subl
mov
mov
cmovp
in
xor
outsb
add
mov
jmp
int3
cmp
call
or
jl
mov
mov
in
into
cmp
mov
lsl
pusha
testl
jge
outsb
jmp
in
add
insl
ret
push
inc
test
mov
fs
sbb
mov
insb
cmp
fs
pop
imul
jg
push
push
sbb
adc
pop
pop
loop
mov
std
mov
xor
and
xchg
and
jbe
dec
and
cmc
mov
dec
xor
ss
insb
inc
jae
xor
pop
scas
adc
ficoms
sbb
and
xor
or
ja
sbb
filds
scas
outsl
mov
into
sbb
mov
adc
cmp
sub
outsb
mov
daa
in
mov
cmpsl
adc
pop
xor
inc
or
mov
pop
dec
add
push
fcom
dec
stos
ficompl
cwtl
add
jmp
pop
cltd
ss
repnz
lret
sahf
pop
imul
pop
jecxz
pop
roll
mov
and
mov
ds
inc
test
ss
push
testb
inc
jmp
stc
mov
lock
push
cmp
mov
push
sub
adc
shll
mov
sbb
popl
arpl
inc
dec
push
cwtl
dec
movsl
push
mov
inc
add
mov
xor
pop
or
pop
mov
std
dec
adc
cwtl
jle
jo
hlt
test
movsl
adc
out
mov
loope
jmp
subl
mov
and
push
jmp
stos
sbb
xchg
mov
ret
adc
jp
jae
bound
jge
pop
inc
jle
iret
cs
test
add
sub
clc
and
shll
cmc
cmpsl
lock
pop
adc
xor
stos
mov
psubusb
inc
push
add
dec
cmp
cwtl
lock
mov
pop
add
loopne
dec
pop
imul
dec
sub
sbbl
rcrb
push
sub
mov
mov
mov
imul
dec
and
pop
inc
push
xchg
mov
fiadds
mov
lcall
bswap
push
jns
mov
call
aaa
mov
mov
xchg
sbb
popf
rorl
xchg
xor
xor
loope
icebp
mov
in
test
addr16
sbb
pop
add
cmp
xlat
lock
mov
sti
and
fsubl
push
jmp
clc
test
pop
cmp
xchg
out
inc
popa
outsl
or
pop
dec
pop
aaa
mov
dec
les
cmpsb
or
pop
stos
test
in
jnp
xchg
push
out
pop
out
adc
sub
ret
push
pop
ss
mov
push
add
out
and
nop
xor
loop
fisubs
and
pop
push
pop
in
jle
pop
mov
add
ss
sub
inc
sahf
aaa
das
sbb
imul
push
mov
stos
dec
lahf
fyl2x
or
out
pop
jg
pop
cld
inc
xchg
icebp
sub
cltd
pop
sub
pop
imul
inc
fisubrl
movsl
out
movsb
ja
ss
clc
scas
or
add
movsb
stc
and
and
flds
fmul
mov
shll
mov
daa
pop
orl
movsl
mov
mov
and
aas
lock
lret
icebp
insb
push
mov
in
lret
fnstenv
inc
xchg
dec
in
xchg
mov
pop
push
call
pop
xor
mov
xlat
xchg
mov
xchg
cmp
mov
lret
add
cmp
pop
add
iret
mov
pop
pop
push
xchg
xchg
lods
fiadds
mov
bound
sub
lcall
cwtl
js
mov
fucompp
jg
ss
xor
imul
arpl
pop
fcmove
rolb
rcr
mov
outsl
sub
pop
adc
test
xchg
lods
xor
cmp
mov
inc
lea
lret
jecxz
leave
add
popa
xchg
bound
pop
lods
stc
cmp
pop
call
mov
push
inc
std
xchg
cmp
jnp
loop
jecxz
dec
mov
push
pop
inc
jne
dec
xchg
hlt
pop
iret
loope
xor
push
push
int3
or
ja
and
pop
faddl
aaa
cmp
fs
jne
inc
pop
jno
out
fsubrl
push
cltd
scas
les
adc
add
imul
sbb
jnp
or
dec
jl
mov
inc
and
mov
sbb
jno
xchg
or
int3
mov
fdivrl
or
ss
jp
test
xor
in
hlt
loop
cmc
sti
fucomip
sbb
adc
test
push
in
into
add
iret
fwait
negl
out
inc
pusha
inc
dec
inc
stos
fwait
xchg
das
adc
sub
pop
in
xlat
push
push
push
std
dec
inc
or
stos
sbb
bound
or
ljmp
repz
xchg
and
sbb
cmovno
cmp
xchg
mov
xchg
int
xchg
dec
icebp
add
loopne
lahf
stos
sub
pop
repnz
jp
popl
testb
push
cli
cmpsl
loop,pn
cmpsb
movb
add
xor
push
std
das
daa
int3
sbb
xor
xchg
lret
sbb
add
jmp
bound
enter
rorl
jmp
adc
jl
xchg
lahf
ret
pop
cli
icebp
cmp
pop
push
pop
int3
inc
rorb
insb
add
jge
dec
nop
cld
mov
sub
loop
sub
inc
nop
push
int
roll
pop
add
aam
cmpsb
enter
push
leave
in
test
inc
adc
add
fistps
pop
pop
testl
mov
sbbl
les
jmp
mov
mov
popa
popa
jnp
mov
pop
rcr
sti
pop
push
jp
rcr
arpl
mov
add
jl
mov
fucomip
jno
movsl
xchg
out
cmpsb
sbb
loop
data16
stos
mov
or
xchg
insl
shl
add
mov
pop
or
inc
add
sub
add
add
xor
xchg
shrb
mov
xchg
mov
cmp
ficoml
sub
and
add
inc
cmpsb
adc
in
push
fisubl
push
mov
pop
out
push
pop
or
jo
out
sbb
xor
fnsave
mov
or
sbb
movsb
mov
mov
sub
cli
fsubp
lods
sub
in
or
fdivl
cmc
or
adc
aas
stc
lahf
jl
mov
add
xchg
mov
out
addr16
fnstcw
fdivrs
add
mov
mov
cs
pushl
inc
clc
test
or
xorl
inc
stc
lock
in
rorb
sub
inc
cltd
mov
jb
mov
jns
jp
xor
mov
shl
adc
test
mov
iret
out
and
js
push
insb
ljmp
aad
mov
sub
icebp
push
enter
inc
sarb
fdivl
add
mov
and
and
jbe
lods
sub
pop
mov
add
cs
rorl
je
movsl
xor
dec
ret
dec
in
mov
movsl
mov
adc
cmp
nopl
mov
repz
ret
lods
xchg
inc
pop
add
addr16
hlt
in
aad
ja
push
push
popf
aaa
jl
sub
andl
insb
inc
pop
xor
out
sahf
xchg
or
or
mov
aam
or
rcr
or
jl
adc
addr16
mov
xchg
ljmp
int3
mov
dec
jmp
mov
push
je
mov
jecxz
mov
shrb
jns
call
enter
jae
sahf
sbb
xlat
adc
sub
mov
out
in
add
and
mov
inc
jb
ret
jo
stos
or
and
pop
dec
xchg
inc
ds
xchg
dec
loop
leave
lea
enter
test
out
mov
loope
fsubrp
cmp
aas
mov
leave
pusha
jns
lret
out
fdiv
ret
jne
lods
dec
orb
stos
lcall
or
xchg
ja,pt
cltd
or
testl
or
sarl
inc
adc
es
fcmovnu
dec
push
cmc
repz
mov
in
jno
incl
xchg
mov
add
cwtl
imul
adc
fwait
mov
in
xchg
xor
adcb
cmc
adc
mov
cwtl
and
inc
sbb
add
pop
ljmp
xchg
mov
test
mov
in
sbbb
push
add
icebp
fnstenv
frstor
data16
lea
xchg
add
jne
fxch
sahf
shlb
jo
mov
push
popa
arpl
hlt
mov
mov
push
mov
dec
insl
add
out
xchg
icebp
mov
out
aad
adc
int3
sahf
aam
out
add
insb
pop
add
inc
jmp
dec
je
add
pop
movsl
fwait
dec
hlt
mov
push
mov
fisttpl
mov
jmp
lods
and
dec
and
pop
bound
int3
add
ds
mov
mov
inc
adc
fdivs
arpl
dec
gs
jbe
pop
push
jo
data16
xor
xor
sub
inc
push
ret
fidivrl
lret
dec
jecxz
sub
std
cld
cmp
lret
popf
dec
push
enter
mov
adc
icebp
stos
adc
inc
or
add
out
or
mov
pop
gs
push
xor
cmp
mov
xchg
mov
pusha
or
add
mov
je
cld
dec
orl
sbb
rclb
gs
notl
push
insb
stos
cmpsb
fs
inc
ja
cwtl
out
push
fs
push
xchg
cmp
shll
test
and
mov
sbb
ds
xchg
sub
test
fistpl
adc
lret
out
icebp
aas
fwait
out
jno
jbe
daa
lods
xor
fdivs
jnp
mov
add
mov
xor
xor
inc
jmp
sub
adc
out
adc
cmp
test
cli
test
jp
xchg
test
or
sbb
or
repnz
jmp
sub
ror
in
daa
jne
jecxz
call
jle
inc
dec
shl
xchg
pop
sub
cmp
adc
fmull
jno
adc
fwait
xchg
sub
mov
push
ljmp
pop
enter
rol
lods
or
pop
mov
insl
repz
ffreep
add
inc
add
aam
clc
pop
adc
addl
adc
pop
pop
inc
mov
add
cmp
add
mov
push
dec
cmpsb
and
stos
arpl
mov
aad
jg
mov
dec
mov
jo
or
leave
les
pop
mov
mov
mov
cmp
xor
push
imul
mov
pushf
dec
sbb
jnp
fcoml
in
enter
and
add
or
mov
push
ljmp
ljmp
aas
cmp
mov
shll
aas
pop
test
dec
sti
dec
lea
cwtl
xor
shrb
shll
pop
repz
idivl
push
adc
pop
push
mov
pop
inc
cs
inc
adc
jne
icebp
ret
push
sarb
stos
cmp
xchg
adc
sbb
or
addr16
sub
daa
mov
into
push
xchg
int
test
dec
or
lahf
pop
stos
rcll
mov
into
out
push
mov
push
movsl
or
pop
jp
fsubl
pop
push
inc
jmp
sarb
arpl
call
ljmp
popf
push
mov
sub
test
mov
mov
mov
rcrl
decb
add
push
pop
icebp
lock
scas
cmp
fs
jns
dec
inc
add
shll
adc
jmp
dec
and
imul
pop
jp
les
movq
outsb
push
dec
loope
dec
mov
lret
movsb
and
pop
mov
push
scas
mov
in
into
mov
mov
inc
sbb
push
lahf
mov
inc
cmp
mov
mov
push
arpl
ds
imul
sahf
push
pop
aaa
xor
int3
rsqrtps
jmp
sub
cmp
iret
pop
jbe
jbe
hlt
fcomps
in
ds
pop
adc
push
push
and
push
xchg
lret
adc
cmp
repz
adc
testl
ds
xor
lods
outsb
gs
xchg
call
jge
outsb
push
cmp
xor
ss
jae
adc
dec
idivl
enter
jecxz
cmp
cmc
adcb
mov
pop
repz
popl
adc
stc
imul
out
sbb
stos
mov
fmuls
shlb
mov
popf
fs
jne
mov
sbb
in
call
add
mov
or
cld
imul
jl
sub
out
cmp
sbb
jl
shl
cmp
add
inc
lock
loope
loopne
shlb
dec
sbb
int3
jge
push
sbb
jmp
cmc
popa
add
mov
bound
iret
loop
add
push
xor
mov
arpl
arpl
repnz
push
popf
dec
xor
js
jo
orl
icebp
dec
int3
adc
imul
mov
mov
inc
sub
mov
lds
mov
loop
in
cmp
xchg
mov
dec
ret
mov
jp
pop
dec
sub
popf
ret
icebp
shlb
push
fwait
and
lods
mov
sub
shrl
test
xor
add
mov
push
fists
unpckhps
cmp
ficomps
into
ret
cmpsb
lds
lahf
aad
ss
enter
sar
sahf
jbe
ljmp
icebp
mov
inc
inc
jp
scas
push
xor
icebp
cmpb
xchg
xchg
shl
inc
jae
xchg
in
scas
cmpsl
movsb
popa
adc
mov
bound
mov
enter
pop
mov
cltd
xor
jbe
inc
inc
pusha
repnz
dec
movsl
orl
jp
in
or
pop
add
shll
ljmp
jmp
ds
sbb
push
xchg
subl
lret
and
jne
sahf
data16
jp
ret
jl
push
jb
imul
or
jle
push
mov
push
dec
mov
mov
adc
std
mov
sbb
cli
xor
or
pop
ret
arpl
or
test
inc
dec
mov
lods
mov
sub
out
stos
fistpl
inc
add
sbb
fnstcw
lahf
mov
and
test
hlt
testb
mov
add
or
adc
jmp
jb
dec
insb
fwait
adc
and
sub
mov
fbld
lahf
outsb
and
sti
fimuls
xor
adc
inc
enter
jmp
data16
aad
xlat
sub
lcall
leave
mov
cltd
pop
mov
inc
inc
jmp
cmpsl
push
xor
jmp
je
push
out
lcall
cmp
mov
mov
pop
mov
add
in
dec
sbbl
rorl
aad
mov
pop
cmpsb
pushf
ja
hlt
lcall
ja
ret
xchg
jbe
and
fs
jb
mov
add
mov
xlat
mov
rcrb
outsb
testb
insb
pop
add
xchg
addr16
outsb
imul
inc
leave
dec
ja
imul
ret
out
mov
das
ja
fisubl
addl
icebp
gs
xor
into
push
cs
inc
negl
lcall
xchg
mov
sub
shl
inc
or
mov
sub
and
push
out
test
xchg
sub
stos
mov
and
orl
in
stos
xchg
mov
pop
lea
fisubl
jmp
pop
and
shll
shll
mov
mov
dec
jmp
lock
or
pop
fs
sbb
test
nop
idivl
and
cmp
sahf
sbb
sub
adc
fs
and
les
aam
int
stos
cmovno
cmpb
jb
push
popf
or
das
mov
xchg
hlt
push
imul
aam
inc
dec
mov
or
mov
mov
jp
jo
push
adc
xor
cmp
xchg
fisttpll
icebp
push
mov
movsb
add
mov
mov
adc
cmp
clc
shlb
push
repnz
pop
stos
imul
test
cwtl
xor
popa
adc
xchg
stos
jl
out
enter
lods
mov
pushf
or
arpl
push
mov
xor
push
leave
test
rorb
cltd
je
cmpsb
pop
or
idiv
scas
cmc
es
pop
or
mov
std
shlb
push
adc
lods
mov
pop
rcrb
ret
popa
stos
loope
test
ret
mov
pop
or
mov
loope
shrb
mov
gs
fsubrs
add
push
jns
pxor
js
mov
ret
clc
stos
sti
sub
sahf
pop
ss
popf
scas
aaa
imul
jne
loope
dec
gs
dec
push
imul
in
andb
pop
xor
les
lcall
movsl
adc
es
int
outsb
xchg
outsl
lock
lret
xchg
xor
mov
mov
in
mov
and
inc
pop
call
lret
daa
test
push
jmp
cltd
or
test
xor
jmp
mov
ret
stos
pusha
or
lds
sbb
rolb
inc
cmp
out
test
xchg
mov
mov
fisubs
xchg
cmc
cmp
mov
pop
push
dec
int
add
fidivl
out
mov
sbb
jle
stc
sbb
mov
popl
imul
mov
daa
out
in
pushf
iret
mov
fbld
mov
push
je
rorb
loopne
sbb
push
dec
insl
mov
pop
cmp
aam
lret
cmp
aas
pop
jbe
ljmp
dec
sahf
xchg
and
roll
mov
ljmp
int
inc
mov
lret
add
mov
ljmp
jne
jnp
and
call
push
jns
or
pop
subb
mov
adc
dec
cltd
mov
adc
outsl
push
popw
sbb
jg
push
dec
insl
fisttpl
stos
aam
xchg
push
daa
iret
sbb
jge
jb
out
bnd
push
dec
cmpsl
pop
int3
dec
mov
repnz
jl
dec
cwtl
pop
das
in
xchg
add
daa
icebp
sub
cmp
and
lds
add
nop
or
push
xchg
jp
or
cli
stos
jmp
iret
adc
imulb
repnz
imul
shl
mov
mov
sahf
dec
test
xchg
int
sbb
or
inc
cmpsb
dec
sbb
bound
lahf
imul
cmp
inc
lret
adc
push
xlat
sbb
xchg
xor
adc
fdivs
push
xor
cmp
movsl
sar
dec
aam
push
int
cs
lea
sahf
out
or
and
in
dec
and
les
mov
jmp
fmul
mov
pop
xor
add
lds
cmc
aam
xor
pop
sub
loope
and
daa
mov
mov
sbb
jb
fidivs
lock
sub
aaa
mov
sarl
data16
lret
fcom
lods
push
mov
sub
fucomp
push
cmpsl
lea
nop
mov
push
sar
std
pop
dec
test
insl
mov
movsl
test
pop
sahf
push
popa
jbe
adc
and
rolb
xlat
and
jns
xchg
push
xchg
out
fistpl
rcl
sbb
cltd
rorb
ret
push
ficompl
dec
jnp
inc
push
cwtl
cwtl
inc
andl
jne
xchg
jecxz
cmpsl
xor
cmp
mov
lds
jnp
mov
or
push
dec
jl
push
add
and
and
shrl
pop
cmpsl
ret
cmc
cmpb
xchg
mov
sub
bnd
push
dec
fdivrl
lds
sbb
test
test
loope
mov
mov
mov
iret
mov
cld
xor
jbe
push
test
and
bound
rcl
stos
sub
pop
add
into
in
inc
stc
cmp
and
aaa
push
sub
inc
and
jae
lods
sbb
ljmp
lods
xchg
xchg
or
jo
push
sahf
cmc
inc
scas
add
xorl
mov
push
cmp
pop
push
push
fs
ficoml
repz
lods
sarb
xor
pop
sbbb
jecxz
outsl
ljmp
stos
lds
ljmp
cmp
into
and
cmc
sub
gs
popf
push
lds
adc
push
sbb
rolb
sub
cmc
mov
fnstsw
mov
or
and
loop
ret
dec
or
lock
push
inc
or
xor
and
xor
mov
mov
movsl
rclb
fbstp
popa
push
sbb
scas
aaa
cltd
mov
aam
mov
lock
ret
xchg
mov
and
insl
or
push
dec
add
push
test
nop
xchg
sub
into
cltd
push
jmp
xchg
fldt
scas
add
xlat
adc
ret
xchg
shr
or
lret
subl
sub
aaa
lods
jg
out
push
sbb
adc
cltd
loope
cwtl
jmp
ficoml
sbb
fwait
cmp
mov
sub
nop
lock
xor
imul
and
repz
movsb
adc
movsb
adc
test
popa
incb
add
add
leave
jp
push
add
call
jo
mov
push
xor
test
sahf
push
icebp
sbb
cmp
xor
insl
cmpsl
in
xor
icebp
mov
insl
js
pminsw
pop
xchg
fcompl
imull
std
repz
sub
out
pop
sbb
push
mov
jne
stc
inc
filds
sbb
mov
stc
jle
addb
std
call
pusha
stc
test
cmp
jo
loop
inc
pop
daa
in
mov
add
arpl
mov
xchg
in
dec
ja
dec
dec
lahf
or
ror
mov
cmp
dec
rcrb
fbld
push
pop
sti
xor
xchg
lods
stos
xchg
and
mov
cmp
xchg
xchg
iret
mov
movsl
cmp
xlat
ret
add
cmp
rorl
imul
out
push
mov
push
idivl
int
lds
inc
jecxz
hlt
int3
mov
jecxz
mov
mov
ret
in
inc
xchg
or
dec
in
dec
jl
push
dec
test
sub
sbb
xor
xchg
andl
or
adc
icebp
leave
xchg
cmp
incb
fmul
push
fstl
or
cmp
cs
fidivs
cmp
shlb
push
push
test
dec
imul
dec
or
inc
mov
sbb
aas
stc
out
adc
xlat
jg
fbld
movsl
mov
cmp
and
test
aas
push
test
or
jmp
mov
or
mov
xchg
test
out
sub
aad
push
adc
dec
leave
dec
repnz
and
pop
sbb
fdecstp
mov
in
mov
pop
cltd
mov
push
jb
push
sub
cmp
pushf
pop
mov
xor
addr16
jo
subb
mov
mov
insl
movsl
sub
mov
mov
cmc
xor
push
test
sbb
popa
push
cmp
ljmp
jns
lods
adc
pop
insb
mov
clc
in
jl
or
pop
pop
mov
xchg
jle
out
insl
or
push
sbb
mov
cwtl
loop
fistpl
add
cmpsb
test
out
pop
jle
daa
in
xor
imul
sahf
jnp
ja
fisubl
xchg
mov
inc
les
xchg
out
sub
mov
repz
les
call
push
sub
mov
es
jae
iret
cmpsb
sub
inc
push
or
inc
out
cmpsl
dec
mov
mov
sbb
xchg
push
inc
cli
fcmovnu
scas
popa
and
fisubrs
pusha
cs
movsl
xchg
je
or
cmp
popa
or
mov
rcrb
and
push
and
scas
push
dec
mov
mov
jecxz
fsubl
push
adc
sahf
xor
fwait
lea
inc
fs
ds
iret
movsb
mov
jmp
adc
call
or
xchg
push
mov
lock
or
enter
loopne
adc
push
lods
xchg
jae
mov
push
mov
pop
pop
cmp
cmp
lock
into
xor
sbb
scas
sub
adc
push
cmp
xchg
ror
adc
cmpsl
xchg
adc
lahf
mov
sbb
test
test
push
adc
mov
int3
aaa
fisttpll
aam
or
iret
loope
test
cmp
mov
stc
lock
mov
lcall
int3
fmul
cmpsb
nop
jbe
inc
fcoms
mov
imul
insb
cmc
dec
sarl
ljmp
jge
insb
sbb
jecxz
adc
sub
and
mov
stos
shlb
mov
aas
mov
out
insb
lret
call
les
xchg
mov
inc
icebp
mov
loopne
push
fstl
or
ret
stos
jbe
xor
adc
push
mov
icebp
cmpsl
lahf
cltd
mov
sub
mov
nop
icebp
ss
lret
dec
xor
mov
and
push
ret
cli
jg
in
dec
lds
inc
les
std
or
jbe
dec
js
jnp
mov
imul
scas
test
lret
mov
sub
dec
xchg
sub
shrl
stos
xchg
cld
mov
fwait
push
lods
add
sub
in
jge
dec
mov
popf
sub
mov
pushf
out
loopne
dec
out
nop
sbb
out
out
push
nop
call
inc
clc
pushf
popf
into
jle
scas
out
pop
mov
mov
cmp
insb
xor
outsb
fbld
movsb
push
js
sbb
jae
data16
imul
popf
lcall
movsb
push
out
or
dec
sahf
xchg
push
and
pushf
sub
stos
push
mov
mov
jne
xchg
sbb
pusha
add
push
add
fistl
ljmp
push
les
mov
clc
push
ss
push
into
sbb
fimuls
xor
ljmp
or
js
nop
jns
dec
ss
sub
push
fwait
test
and
int
loop
pop
mov
cmpsb
nop
cmp
iret
add
out
popa
call
mov
and
fstpl
wbinvd
push
sahf
or
xchg
sub
stos
add
pop
push
lcall
pusha
cmp
dec
jg
pop
loope
mov
movsl
roll
lods
imul
xchg
or
adc
mov
in
pop
arpl
fsubs
cmpsb
dec
lds
xlat
and
xor
sar
jnp
cmp
mov
cs
cmp
xor
fwait
cs
sahf
cmp
xor
cmp
mov
sbb
jecxz
push
mov
push
mov
mov
dec
shrb
cmc
jns
test
ficoml
call
in
adc
lods
or
xor
xchg
inc
and
mov
mov
adc
pop
data16
adc
mov
pop
or
div
pop
imul
pop
cmc
push
sub
push
sub
cli
adc
in
mov
jmp
pop
mov
mov
or
xor
push
cld
insl
into
jecxz
pop
outsb
xor
cld
ljmp
mov
mov
or
xor
pop
push
imul
arpl
add
xchg
outsl
sarb
sub
inc
mov
movsl
hlt
adc
icebp
xlat
inc
shll
pushf
xlat
inc
adc
movsl
mov
fistps
lret
imul
inc
mov
xchg
rcl
xor
hlt
sub
inc
mov
jbe
loop
out
bnd
shll
in
mov
sub
cmpsb
test
imul
and
mov
pop
fimuls
add
jbe
dec
jbe
ja
sub
lret
xor
int
add
sldt
add
scas
shll
sub
add
add
sub
add
and
add
adc
dec
adc
add
and
add
adc
cmp
add
push
aaa
pop
dec
push
ss
pop
xor
aaa
dec
inc
add
xor
push
push
push
pop
xor
inc
add
push
pop
push
push
inc
pop
xor
dec
add
inc
ss
push
dec
dec
pop
push
xor
push
cmp
pop
xor
dec
inc
aaa
pop
inc
cmp
pop
push
add
pop
push
push
inc
inc
dec
xor
inc
cmp
inc
pop
push
cmp
add
xor
push
pop
inc
xor
xor
push
xor
xor
inc
push
dec
push
pop
xor
push
cmp
cmp
xor
dec
cmp
inc
xor
pop
xor
cmp
dec
xor
add
push
pop
xor
xor
add
inc
pop
dec
push
dec
inc
pop
cmp
push
dec
push
pop
inc
dec
inc
xor
add
pop
xor
xor
pop
xor
pop
pop
xor
xor
xor
xor
inc
dec
pop
inc
push
push
add
ss
xor
pop
cmp
add
dec
cmp
dec
push
dec
add
xor
xor
ss
dec
cmp
push
aaa
xor
xor
pop
push
push
push
dec
add
push
pop
pop
xor
pop
dec
aaa
pop
xor
xor
xor
add
inc
pop
xor
xor
push
push
inc
xor
xor
push
xor
inc
pop
cmp
pop
xor
add
dec
pop
push
xor
xor
push
dec
push
cmp
dec
add
inc
pop
inc
dec
xor
add
xor
dec
xor
pop
push
add
pop
add
add
aaa
add
aaa
add
inc
add
add
inc
add
xor
add
inc
add
dec
add
push
add
inc
add
add
add
pop
add
add
dec
add
add
cmp
xor
pop
add
add
pop
add
pop
add
add
add
push
add
add
xor
pop
add
inc
add
push
add
dec
add
cmp
aaa
add
add
dec
add
pop
add
inc
add
xor
dec
add
push
add
add
dec
add
dec
add
xor
add
push
add
push
add
push
add
add
dec
add
add
dec
add
inc
add
dec
add
add
cmp
cmp
add
dec
add
push
add
inc
add
dec
add
add
add
add
pop
add
cmp
dec
add
xor
add
dec
add
xor
add
inc
add
inc
add
add
xor
inc
add
add
inc
add
xor
push
add
aaa
add
push
add
dec
add
add
cmp
cmp
xor
xor
xor
add
add
add
dec
add
pop
add
inc
add
add
pop
add
pop
add
inc
add
add
push
add
add
add
xor
dec
add
dec
add
add
xchg
jne
add
jne
add
jne
add
jne
add
add
add
dec
add
add
add
add
inc
add
add
loopne
add
movsb
add
add
add
aas
addb
push
addb
imul
add
stos
addb
add
add
roll
add
jmp
addb
std
addb
jae
add
and
addl
aas
addl
dec
addl
push
addl
pop
addl
addl
jno
add
jns
add
addl
add
lahf
addl
cmpsl
addl
mov
add
roll
add
addl
jecxz
add
out
addl
std
addl
pop
test
add
test
add
test
add
test
add
test
add
test
add
add
dec
test
add
add
popa
test
add
add
jg
add
mov
add
test
add
add
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
add
ja
add
mov
add
mov
test
add
test
add
test
add
test
add
test
add
xchg
add
xchg
add
xchg
add
add
popa
xchg
add
add
jg
add
lea
add
cmpsl
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
dec
xchg
add
add
jg
add
xchg
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
add
add
add
mov
add
add
test
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
test
add
stos
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jnp
add
xchg
add
lods
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jno
add
orl
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
ja
add
lea
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
lea
add
add
pop
lea
add
add
jnp
add
mov
add
scas
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
mov
add
mov
add
add
pop
mov
add
add
jg
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
popl
add
popl
add
add
popa
popl
add
add
test
add
add
add
mov
add
ret
popl
add
popl
add
popl
add
popl
add
nop
add
pop
nop
add
sub
add
dec
nop
add
pop
nop
add
addr16
add
jns
add
lea
add
scas
nop
add
ret
nop
add
rcll
add
stc
nop
add
add
xchg
add
daa
xchg
add
xor
xchg
add
push
xchg
add
imul
add
fwait
xchg
add
stos
xchg
add
mov
xchg
add
int
add
fsts
add
notl
add
daa
xchg
add
aaa
xchg
add
inc
xchg
add
push
xchg
add
arpl
add
mov
add
inc
xor
add
add
add
jge
add
jae
add
jae
add
adc
je
adc
sahf
jp
add
adc
add
dec
add
add
pop
jge
add
add
add
add
add
add
add
add
push
jge
add
add
in
arpl
add
add
add
dec
jno
outsl
pop
xor
jbe
dec
cs
jo
aas
inc
outsb
gs
je
push
outsl
imul
inc
pop
inc
inc
push
inc
pop
dec
inc
cmp
add
jl
add
jl
add
jl
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
add
das
jle
add
addb
out
add
dec
jle
add
jns
add
jle
add
add
mov
add
sarl
add
jp
add
add
add
add
add
jl
add
addb
push
addb
imul
add
stos
addb
add
add
roll
add
jmp
addb
std
addb
jae
add
and
addl
aas
addl
dec
addl
push
addl
pop
addl
addl
jno
add
jns
add
addl
add
lahf
addl
cmpsl
addl
mov
add
roll
add
addl
jecxz
add
out
addl
std
addl
pop
test
add
test
add
test
add
test
add
test
add
test
add
add
dec
test
add
add
popa
test
add
add
jg
add
mov
add
test
add
add
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
add
ja
add
mov
add
mov
test
add
test
add
test
add
test
add
test
add
xchg
add
xchg
add
xchg
add
add
popa
xchg
add
add
jg
add
lea
add
cmpsl
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
dec
xchg
add
add
jg
add
xchg
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
add
add
add
mov
add
add
test
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
test
add
stos
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jnp
add
xchg
add
lods
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jno
add
orl
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
ja
add
lea
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
lea
add
add
pop
lea
add
add
jnp
add
mov
add
scas
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
mov
add
mov
add
add
pop
mov
add
add
jg
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
popl
add
popl
add
add
popa
popl
add
add
test
add
add
add
mov
add
ret
popl
add
popl
add
popl
add
popl
add
nop
add
pop
nop
add
sub
add
dec
nop
add
pop
nop
add
addr16
add
jns
add
lea
add
scas
nop
add
ret
nop
add
rcll
add
stc
nop
add
add
xchg
add
daa
xchg
add
xor
xchg
add
push
xchg
add
imul
add
fwait
xchg
add
stos
xchg
add
mov
xchg
add
int
add
fsts
add
notl
add
daa
xchg
add
aaa
xchg
add
inc
xchg
add
push
xchg
add
arpl
add
mov
add
pop
add
outsl
jo
jb
jns
push
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
dec
insl
popa
addr16
imul
dec
popa
jae
gs
add
popa
addr16
imul
popa
je
add
inc
add
popa
addr16
imul
fs
insl
popa
addr16
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
bound
popa
jb
push
jae
jb
outsb
je
testb
je
jb
push
pop
pop
jae
je
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
jge
data16
add
fwait
add
jo
pop
arpl
insl
outsl
fs
and
insb
outsb
add
and
arpl
jo
add
or
outsl
jne
jo
jb
rolb
jb
insl
outsl
jbe
add
xchg
add
imul
jae
jb
jae
outsb
add
jae
add
add
outsb
add
mov
insl
popa
insb
insb
outsl
arpl
add
add
je
push
add
arpl
popa
je
add
arpl
imul
add
insl
jae
pop
gs
je
add
jo
imul
pop
imul
insl
add
add
jb
jb
outsl
jb
add
add
jb
outsl
jne
add
add
jo
imul
add
jae
bound
gs
add
flds
jae
je
bound
add
gs
add
push
add
arpl
inc
imul
pop
gs
je
in
jae
jb
push
add
jb
arpl
add
add
gs
je
add
data16
add
jb
push
ja
jae
outsl
insb
insb
add
add
arpl
data16
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
mov
data16
imul
je
jo
jb
add
add
outsl
jb
add
pop
pop
addr16
popa
imul
cli
add
jb
outsl
imul
dec
push
push
inc
push
push
cs
insb
add
je
inc
gs
jae
jb
gs
jne
je
popa
outsb
addr16
inc
add
jnp
inc
outsl
insb
fs
je
imul
push
gs
jb
outsl
jb
je
inc
insb
popa
jae
add
pop
add
outsb
fs
imul
gs
add
or
dec
outsl
popa
fs
gs
jne
arpl
add
dec
popa
outsb
fs
gs
outsl
jne
je
add
push
jne
jae
inc
jbe
outsb
je
add
inc
imul
outsl
dec
inc
dec
add
mov
inc
insb
outsl
bound
inc
outsl
insl
jo
arpl
add
je
outsl
fs
gs
imul
add
mov
inc
insb
outsl
bound
inc
gs
gs
inc
je
insl
add
and
gs
popa
jae
inc
jb
outsl
jb
add
push
insb
gs
inc
add
gs
imul
jne
push
imul
add
imul
outsb
insb
outsl
arpl
ret
add
jae
jb
insl
jo
add
dec
add
imul
jae
jne
arpl
add
inc
inc
push
add
jno
inc
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
jae
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
mov
push
gs
gs
jae
push
gs
popa
jo
outsl
jb
add
insl
add
je
imul
je
add
add
jae
jb
insl
jo
push
add
add
push
popa
insb
imul
add
add
jae
jb
insl
jo
add
in
push
gs
outsl
insl
insl
push
imul
add
gs
imul
popl
inc
insb
outsl
bound
inc
insb
popa
addr16
into
add
jae
jb
outsb
inc
add
sbb
gs
imul
gs
add
inc
gs
gs
jo
imul
add
sub
fs
je
insl
push
add
add
gs
je
push
gs
popa
jo
outsl
jb
push
add
faddl
push
gs
jb
push
push
add
jo
outsb
push
gs
popa
jo
outsl
jb
push
add
into
add
inc
popa
fs
jb
je
push
je
add
add
je
imul
xchg
add
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
mov
jb
popa
je
add
out
inc
jb
popa
je
push
gs
outsl
je
push
push
add
imul
insb
gs
js
gs
imul
gs
add
outsl
jbe
inc
imul
jns
add
pop
add
je
gs
jo
imul
add
out
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
in
add
je
imul
bound
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
nop
add
outsl
bound
inc
jb
add
inc
add
je
je
jb
jne
dec
outsb
outsw
push
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
mov
insb
dec
popa
insl
gs
imul
add
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
xchg
inc
insb
outsl
bound
inc
fs
je
insl
inc
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
sahf
add
push
arpl
jo
jns
mov
dec
outsb
jbe
insb
imul
je
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
add
insb
insb
push
arpl
jl
push
push
outsb
gs
outsl
jo
jo
add
add
jo
imul
gs
add
test
dec
outsl
popa
fs
arpl
insb
gs
je
jb
push
add
fs
arpl
inc
add
inc
gs
jne
dec
outsb
jne
add
add
fs
imul
add
popa
jb
outsl
dec
gs
inc
jne
inc
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
mov
push
outsl
push
outsb
imul
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
mov
dec
outsb
je
jb
arpl
arpl
add
je
jbe
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
out
add
imul
jae
addr16
add
add
inc
fs
jae
push
imul
arpl
add
cmp
inc
gs
gs
popa
addr16
outsl
jae
push
add
je
popa
jb
outsb
je
lahf
add
jo
je
push
popa
addr16
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
out
inc
jb
insl
gs
arpl
add
imul
jae
js
rolb
jae
jb
outsb
je
push
add
add
je
jne
jae
jb
sub
inc
push
js
inc
js
add
push
gs
arpl
add
je
arpl
insb
insb
push
outsl
jae
add
push
arpl
outsb
push
outsl
inc
insb
imul
add
fs
outsb
jne
add
inc
gs
outsl
outsb
imul
push
add
inc
gs
imul
add
je
outsl
arpl
add
bound
inc
gs
outsl
jo
imul
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
insb
imul
jb
add
inc
gs
arpl
insb
insb
push
popa
outsb
add
or
inc
gs
jne
jae
jb
outsl
jae
add
push
gs
arpl
jo
jns
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
outsb
fs
gs
popa
addr16
add
loop
inc
imul
outsl
ja
js
add
add
je
arpl
dec
outsb
outsw
add
arpl
outsl
push
push
outsb
outsl
ja
add
fs
imul
add
je
inc
inc
js
mov
imul
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
push
gs
imul
js
inc
add
rolb
dec
gs
popa
addr16
outsl
js
js
add
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
jge
push
push
jb
insb
insb
inc
popa
jb
cmp
inc
push
outsb
jne
popa
imul
add
fs
imul
add
ja
outsb
imul
arpl
mov
push
imul
push
arpl
push
add
addl
outsb
fs
gs
popa
addr16
js
insl
add
je
imul
outsb
addr16
add
jle
dec
imul
jne
je
insl
add
xor
inc
push
gs
add
add
outsb
fs
imul
sub
push
outsb
fs
gs
popa
addr16
imul
add
add
imul
popa
jae
inc
js
add
xchg
add
outsb
jae
popa
je
dec
gs
popa
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
movb
outsb
fs
popa
jae
add
add
jae
push
jne
je
gs
popa
add
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
or
inc
je
popa
arpl
push
dec
outsb
jo
je
adc
inc
gs
insb
addr16
je
insl
dec
outsb
je
mov
ja
je
je
push
add
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
or
inc
jb
popa
outsb
addr16
arpl
imul
ja
add
jnp
push
push
jb
outsl
jb
add
add
popa
jb
outsl
ja
jb
jne
push
add
mov
jae
pop
gs
outsb
je
mov
inc
jb
ja
arpl
add
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
push
imul
outsl
arpl
add
outsb
fs
gs
popa
add
add
je
outsb
jne
je
insl
dec
inc
add
imul
inc
push
ja
jb
add
jmp
inc
arpl
gs
imul
add
je
jne
jae
jb
outsl
jae
add
inc
outsl
jb
addr16
jne
fs
imul
add
je
gs
outsl
popa
jb
dec
popa
jns
jne
dec
imul
jb
popa
je
push
imul
push
add
popa
insb
imul
add
add
popa
jb
jo
gs
jne
push
add
mov
push
imul
ja
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
gs
dec
outsb
jne
add
add
je
outsb
jne
je
imul
add
je
insb
addr16
je
insl
push
gs
inc
add
imul
jae
popa
addr16
add
mov
jo
je
push
popa
addr16
add
js
inc
gs
imul
js
push
add
sub
fs
outsl
je
data16
gs
popa
addr16
add
and
push
arpl
insb
insb
push
imul
add
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
jae
push
push
dec
gs
popa
addr16
add
mov
dec
outsb
jbe
jb
push
arpl
xchg
add
inc
imul
jae
popa
addr16
add
mov
inc
jb
ja
outsb
jne
popa
jb
push
push
inc
push
xor
cs
insb
add
int3
add
insb
arpl
imul
add
gs
je
inc
imul
imul
rolb
outsb
fs
popa
je
add
add
insb
arpl
push
arpl
fiadds
push
gs
dec
inc
imul
imul
jb
popa
je
inc
outsl
outsb
je
add
add
je
je
gs
push
outsl
fs
popa
je
push
outsl
insb
imul
add
add
insb
arpl
insb
gs
add
je
imul
movsb
add
je
insb
je
add
popa
je
inc
dec
inc
imul
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
inc
gs
dec
inc
imul
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
add
je
imul
inc
js
inc
js
add
add
je
insb
imul
cmp
inc
gs
jne
jb
outsb
je
bound
arpl
xchg
add
gs
je
inc
dec
inc
push
arpl
outsb
add
out
push
gs
popa
jns
jne
add
jb
push
popa
add
data16
je
imul
dec
jb
inc
js
add
je
bound
arpl
add
push
imul
add
add
je
imul
addr16
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
movl
inc
outsl
outsb
je
push
add
pop
add
fs
outsl
outsb
je
gs
jne
arpl
add
xlat
add
je
jb
jae
dec
jb
inc
js
mov
je
outsb
push
imul
push
gs
popa
jo
outsl
fs
mov
inc
push
je
dec
push
add
mov
inc
outsl
arpl
add
popa
je
dec
inc
push
add
inc
imul
xchg
add
je
imul
addr16
js
add
popa
je
push
popa
je
gs
inc
jb
jae
add
xchg
add
gs
je
inc
imul
bound
imul
inc
jb
popa
je
push
arpl
outsb
add
jo
add
popa
je
push
popa
insb
gs
add
add
jb
popa
insb
imul
arpl
add
je
gs
dec
jne
inc
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
outsl
jne
fs
arpl
inc
dec
xor
cs
insb
add
adc
mov
adc
jp
adc
adc
adc
in
adc
inc
pop
adc
xchg
dec
adc
xchg
push
adc
or
add
adc
xchg
adc
mov
adc
cltd
js
add
data16
inc
sub
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
out
cld
call
fisttps
jmp
out
incl
xlat
lea
inc
ljmp
incl
aaa
add
repnz
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
call
jge
mov
fcom
add
mov
add
add
add
add
push
inc
push
fisttps
test
aam
lret
add
rcl
movl
jl
test
jmp
incl
loope
aam
test
out
mov
mov
add
call
lret
cld
incl
out
xor
mov
cld
jl
push
add
add
inc
inc
mov
decl
add
inc
lret
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
pusha
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
sahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
or
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
adc
adcb
or
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
xor
test
test
ds
pushf
inc
mov
popf
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
sahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
sahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
sahf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
bound
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
bound
inc
add
dec
bound
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
sahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
clc
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
sahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
shlb
add
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
pushf
and
xor
add
sub
aad
inc
add
add
xlat
insb
inc
inc
and
dec
add
inc
fnstcw
add
lea
ret
mov
xor
mov
sbb
stc
mov
les
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
or
movsl
fiadds
jae
or
loope
inc
xor
pop
inc
shr
inc
and
inc
add
add
in
clc
inc
ret
inc
mov
sub
add
add
sbb
stc
test
lea
mov
dec
int3
mov
movb
dec
ljmp
or
jge
shl
xor
add
rdpmc
sbb
mov
in
cmovne
jecxz
inc
mov
sbb
mov
add
out
add
and
inc
mov
movl
inc
add
inc
xlat
sbb
xor
dec
mov
mov
fadd
inc
rcl
inc
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
mov
cld
mov
mov
pop
sar
cmp
jne
mov
loop
pushf
jae
add
add
add
jmp
mov
pop
add
add
decl
mov
mov
data16
mov
add
add
data16
call
push
pop
jl
inc
sbbb
test
jmp
push
jne
lea
movl
into
jmp
loopne
rol
call
shr
inc
inc
mov
cwtl
movl
add
add
call
incl
xor
jne
mov
ret
out
mov
push
xor
mov
mov
mov
lcall
and
push
mov
decl
mov
jp
mov
mov
jl
decl
mov
push
decl
orb
xor
call
test
mov
int3
xchg
loopne
xchg
lods
ret
in
inc
dec
loop
ds
movl
loope
mov
mov
incl
jno
data16
add
mov
fmull
aam
call
push
mov
xor
add
subl
mov
add
pushl
push
lea
mov
sar
orl
fs
add
add
adc
add
test
inc
incl
dec
mov
mov
push
xor
push
inc
xorl
mov
push
inc
adcw
movl
clc
push
inc
data16
push
pushf
data16
dec
in
test
xor
in
add
decl
mov
lea
push
push
test
inc
inc
mov
push
shlb
test
cs
incl
data16
test
incl
incl
mov
lcall
leavew
xchg
inc
pushl
call
lea
mov
enter
mov
xor
sbb
sbb
dec
mov
mov
movl
mov
mov
sar
sub
mov
add
inc
mov
or
addb
xor
pushf
js
add
mov
inc
xor
lcall
cmp
movl
lcall
dec
inc
mov
mov
mov
nop
ret
add
jne
test
jne
decl
call
sbb
stos
mov
mov
inc
cmp
push
cwtl
inc
add
lcall
test
mov
adcb
add
add
movl
mov
inc
add
cmp
incl
inc
push
xor
add
mov
and
incl
lea
pushf
or
jmp
decl
mov
loopne
movl
sbb
out
mov
push
push
test
mov
cwtl
inc
add
movl
add
add
pushl
or
rorb
cld
sbb
inc
mov
movsb
add
push
movb
jmp
mov
clc
mov
incl
mov
cmp
push
add
xor
add
mov
mov
mov
hlt
movsb
add
add
mov
dec
inc
mov
add
add
add
mov
mov
push
decl
decl
xor
add
push
xchg
inc
incl
jnp
mov
pusha
add
test
decl
ret
add
mov
cli
incl
test
add
or
cmp
add
sub
mov
mov
add
inc
dec
mov
add
mov
inc
push
push
mov
mov
adcl
add
push
add
push
test
decl
mov
sbb
incl
movl
add
add
mov
push
push
test
decl
inc
push
xor
and
call
test
incl
decl
inc
decl
bound
int
xor
mov
cwtl
pushf
add
mov
mov
incl
adc
addb
adc
push
inc
add
mov
mov
push
adc
mov
mov
addl
incl
inc
cmpsl
mov
add
mov
cmp
movsb
mov
sbb
addb
hlt
add
mov
hlt
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
sub
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
pushf
add
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
loopne
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
sahf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
sahf
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
insb
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setle
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
clc
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
inc
adc
inc
inc
push
or
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
or
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
enter
dec
mov
ljmp
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
shlb
out
add
add
and
fs
inc
test
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
pushf
add
jne
addl
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
inc
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
inc
sahf
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
sahf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
movlhps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
inc
icebp
add
add
mov
mov
enter
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
ret
decl
xor
add
into
bound
add
mov
or
add
inc
pushf
add
into
ret
pop
fs
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
fs
mov
je
xor
mov
cmp
fs
mov
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
notrack
or
or
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
dec
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
leave
data16
push
add
jne
movl
clc
xlat
inc
mov
pushf
in
add
or
push
add
inc
add
inc
data16
lret
lock
inc
lret
xor
pushf
jge
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
mov
in
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
mov
adc
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
sahf
push
xor
inc
cmp
or
inc
test
xor
in
hlt
push
push
push
push
mov
sahf
sahf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
sahf
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
pushf
or
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
or
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
jne
mov
mov
movl
clc
dec
push
xor
xlat
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
clc
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
sahf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
aad
xlat
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
mov
sbb
nop
mov
addl
mov
jne
mov
push
pushf
push
mov
xor
add
lret
add
rorl
mov
mov
mov
fimuls
mov
xor
mov
or
dec
add
or
out
loopne
jmp
lret
xor
je
mov
mov
sbb
mov
fmuls
mov
mov
mov
sbb
sbb
add
movl
leave
mov
push
mov
add
mov
or
mov
or
inc
add
in
add
mov
adc
xor
adc
inc
sahf
mov
push
add
cmp
sahf
mov
dec
fwait
dec
jmp
or
sbb
or
dec
lret
dec
rcl
lret
inc
or
sar
lahf
inc
mov
inc
or
iret
add
mov
adc
inc
add
add
dec
mov
mov
ret
inc
add
push
or
test
test
pushf
inc
mov
lock
inc
mov
test
mov
mov
sbb
scas
dec
mov
xor
jb
add
add
add
mov
or
mov
adc
inc
mov
or
inc
inc
cmp
hlt
inc
jne
mov
inc
bound
clc
push
inc
inc
cmp
cmp
dec
mov
push
idivl
or
inc
inc
add
push
loopne
mov
or
xbegin
mov
or
mov
hlt
inc
inc
mov
xor
add
adc
inc
clc
xor
add
or
dec
test
clc
jb
mov
clc
pushf
inc
mov
xor
shr
add
hlt
mov
push
xor
test
clc
mov
mov
clc
mov
xor
mov
hlt
shlb
clc
fmull
mov
in
icebp
dec
decl
loopne
test
clc
dec
inc
mov
in
dec
push
xor
push
mov
push
mov
clc
cmp
inc
test
add
add
jne
lea
cmc
adc
inc
inc
xor
jb
add
inc
rorl
xor
mov
adc
mov
ret
push
push
lea
cli
add
or
mov
xor
mov
add
jne
lea
lods
psubsb
cmc
lret
inc
xor
add
inc
inc
mov
pushf
mov
add
clc
dec
inc
xor
setl
lret
int3
rorl
add
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
loopne
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
or
add
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
call
xor
mov
in
rorl
iret
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
in
or
mov
xor
inc
or
iret
add
cmp
jge
mov
in
add
mov
mov
clc
test
std
iret
decl
xor
mov
in
enter
inc
mov
or
jmp
push
decl
xor
push
jne
mov
in
add
dec
test
dec
add
cmp
or
mov
dec
push
lea
xchg
mov
call
inc
mov
or
mov
iret
movsb
mov
push
xor
cmp
jne
lea
lods
dec
call
cmp
cmp
decl
add
fadds
mov
lock
inc
test
xor
add
sbb
xor
rdpmc
testl
or
mov
rolb
iret
cmp
cmp
xor
decl
mov
add
mov
jmp
orl
pop
inc
pop
mov
loopne
mov
push
rorl
push
add
inc
push
sahf
dec
xor
add
adc
adcb
add
or
fadds
call
cmp
dec
mov
ret
mov
adc
add
add
mov
movsb
push
inc
add
adc
xor
add
add
mov
incl
mov
push
inc
decl
call
mov
mov
xor
lea
adc
add
dec
xorb
add
pcmpeqw
mov
pop
push
leave
or
xor
in
adcl
xor
push
dec
in
or
inc
inc
mov
push
and
mov
jb
add
inc
mov
or
jl
sbb
dec
xorb
add
xor
mov
add
dec
dec
adc
push
sbb
inc
push
decl
mov
or
mov
test
jge
xor
pushf
or
push
or
inc
or
jb
call
mov
mov
adc
and
lea
or
ret
je
sbb
mov
mov
je
pop
and
push
and
and
incb
and
pop
adc
in
ret
mov
pushf
incb
jge
mov
cmp
adc
push
decl
adc
mov
into
scas
mov
das
inc
jne
and
and
lea
jb
xor
adc
xor
jne
sbb
call
push
inc
push
sbb
movsb
rcrl
jg
test
sbb
add
add
push
cmp
popa
inc
jns
addr16
pop
ja
arpl
jne
dec
dec
insl
addr16
pop
push
jne
push
imul
insb
jo,pn
bound
cmpb
insl
das
adc
jmp
adc
jecxz
adc
adc
add
pop
adc
xlat
push
adc
cwtl
add
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
enter
enter
enter
enter
enter
enter
enter
add
add
add
add
