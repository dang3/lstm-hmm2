add
add
adc
cmp
add
add
adc
add
add
add
add
add
add
add
adc
add
add
xor
add
xor
add
add
jb
push
imul
aas
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
add
add
add
mov
add
inc
and
or
mov
xorl
add
adc
movzwl
mov
mov
sub
mov
and
movb
sbb
lea
xor
xor
adc
mov
mov
mov
sub
mov
mov
xorl
xor
sub
adcl
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
movl
push
sub
movl
and
mov
push
mov
xor
or
mov
andl
push
subl
add
movl
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
jb
sbbl
mov
addl
xor
subl
add
jmp
add
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
orl
mov
sbbl
xor
xor
mov
add
andl
movzwl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
neg
mov
movl
movzwl
xor
addl
add
movzbl
mov
mov
movl
inc
mov
mov
cmp
jne
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
addl
xor
add
mov
xorl
mov
sbbl
xor
add
mov
movl
movl
movl
mov
movl
mov
movl
mov
jmp
xorl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
adcl
mov
negl
xor
xorl
xor
orl
sub
movzbl
adc
sub
xorl
xor
not
mov
addl
mov
mov
orl
lea
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
pushl
push
push
call
jmp
mov
mov
subl
lea
neg
mov
adc
mov
addl
mov
addl
lea
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
mov
sbb
mov
xorl
mov
lea
xor
mov
mov
mov
adcl
lea
not
mov
mov
mov
lea
mov
dec
mov
xor
orl
add
movl
jne
movl
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
xor
xor
sub
mov
xor
xor
addl
sub
movl
sub
xor
movl
mov
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
jmp
add
xchg
dec
xchg
in
sbbl
adc
jbe
mov
bound
pop
bound
xor
cmp
jns
jne
push
jl
jb
sub
sar
push
jae
inc
mov
scas
inc
push
cmp
loop
inc
push
jg
insb
mov
mov
jbe
loop
jg
icebp
and
or
xchg
xor
fsub
jno
sbb
out
loop
add
adc
jae
movsl
or
mov
cmc
push
xor
aam
in
loop
mov
xchg
mov
jmp
and
adc
xor
sub
dec
sti
scas
xchg
xor
xchg
dec
clc
pop
dec
push
adc
jmp
sbb
fcompl
inc
loope
inc
mov
pop
sbb
cwtl
ret
aam
scas
cli
sbbb
ret
sub
cmp
test
fs
mov
sub
lahf
fnstenv
frndint
xchg
add
shrb
sub
arpl
pop
jp
out
cmc
out
pushf
popf
aam
add
in
lcall
inc
or
mulb
std
adc
movsl
sbb
jb
fwait
lcall
push
scas
iret
test
jl
nop
popa
mov
cmp
adcb
pop
pop
stos
jp
mov
aas
xchg
loop
sbb
push
cli
or
add
mov
and
data16
aam
clc
or
or
push
or
pop
aaa
movsl
in
fsubp
divl
adc
inc
cmp
or
mov
cwtl
test
adc
lret
aad
ret
mov
xchg
push
inc
lret
fimuls
mov
test
pop
inc
cld
fs
cli
das
clc
sub
arpl
es
push
nop
mov
jo
mov
lock
or
mov
pop
push
imul
ret
rclb
xchg
enter
xchg
out
mov
push
cld
loopne
sbb
and
cltd
clc
std
sub
repnz
popa
testb
xchg
xlat
addr16
int3
add
pxor
add
mov
repnz
mov
jp
dec
sbb
aam
pop
mov
jae
subl
jecxz
push
popa
adc
movsl
dec
sub
pop
adc
push
lret
mov
testb
pop
sbb
mov
repz
jns
movsl
call
int
adc
mov
stc
mov
rcrb
mov
pop
mov
push
fwait
gs
or
ds
nop
pop
mov
mov
clc
xlat
push
or
divb
cmp
push
mov
jle
cmp
jno
cmp
pop
ds
cli
cwtl
mov
adc
and
cmpsb
and
sahf
sbb
xchg
test
sbb
xchg
xor
and
in
or
sarl
mov
pop
mov
push
and
xor
pop
dec
stos
pop
push
lret
cltd
out
cmp
pop
ds
mov
jge
mov
sbb
inc
das
jne
scas
jg
dec
adc
pop
int
mov
xor
mov
inc
ret
dec
adc
cmp
jns
lea
cwtl
daa
add
imul
rolb
push
jmp
mov
addr16
addr16
ret
inc
enter
mov
sub
popf
aad
dec
jno
cmp
aaa
into
inc
xchg
jbe
lret
shlb
insb
cmpsb
arpl
xor
xor
js
decl
repz
lods
xor
scas
popa
pop
scas
add
cmp
inc
inc
jle
imul
xchg
inc
lea
mov
imul
lods
lock
xor
pusha
sti
popa
xchg
sbb
loope
inc
adc
mov
dec
lcall
sbb
je
pushf
pop
cs
ss
fildl
mov
mov
push
test
out
loop
scas
jle
lea
popa
push
pop
loope
cwtl
mov
aad
icebp
cmp
int
and
rclb
pop
aas
test
push
cli
cwtl
jae
add
pusha
xor
pop
sub
push
xor
pop
repnz
lods
jle
repnz
push
inc
insl
mov
aas
or
push
mov
popa
or
addr16
xlat
xlat
mov
jge
jno
mov
add
or
xlat
in
ljmp
mov
test
inc
mov
inc
jne
pusha
cmp
or
and
add
popf
pop
cmp
mov
test
mov
test
dec
push
add
sub
pop
mov
xchg
les
ss
push
in
jmp
lods
leave
nop
mov
aas
sbb
stos
jle
sub
les
fcmovnu
mov
pop
aas
filds
sbb
imul
addl
lds
repz
push
lahf
repz
imulb
xchg
pop
out
out
stos
es
mov
iret
psubusb
mov
lcall
pop
in
ss
loope
ret
push
imul
and
subl
bound
sarl
sbb
dec
or
mov
out
lods
test
addl
cmp
mov
xor
cmc
push
fnsave
loopne
jg
cmpb
mov
pop
fcoms
mov
in
mov
pop
cmpsb
sbb
and
sbb
stc
dec
pop
cmp
xchg
jno
fnstcw
lcall
push
fcompl
outsl
jnp
andl
cmp
xchg
pop
lea
rol
movswl
into
jg
push
in
xor
jmp
out
sti
jp
loop
movl
lock
mov
mov
test
push
add
cmp
mov
inc
cmpsl
jle
negb
daa
push
push
in
mov
lds
pusha
aaa
xchg
outsl
sbb
mov
and
push
lods
sbb
sbb
mov
add
adc
jae
insl
sbb
or
inc
in
jmp
mov
xchg
mov
push
ja
mov
dec
mov
popa
into
iret
stos
add
in
cmp
es
imul
js
pop
scas
xor
pop
cmpsl
jae
xchg
mov
sub
xor
xor
cs
or
jmp
test
loopne
xor
mov
fnstcw
test
fisttps
imul
test
mov
scas
add
jno
jp
cmpl
out
xor
adc
add
inc
push
notb
sbb
lock
adc
jmp
sbb
add
xchg
int
mov
mov
stos
mov
and
int3
sbb
xchg
pushf
stc
leave
mov
inc
adc
jnp
movsl
ss
mov
push
jae
addl
mov
xchg
push
jae
cmp
movsl
xchg
add
std
movsb
out
cmp
addb
rclb
cmc
jmp
adc
mov
sbb
fcom
jno
pushf
or
push
pop
f2xm1
adc
outsb
out
jecxz
cltd
mov
lret
mov
add
mull
sub
lods
jno
inc
rclb
jmp
mov
es
outsb
xchg
jne
rorl
inc
daa
xchg
xor
jae
stos
rcrl
outsb
mov
adc
cmp
test
pop
lock
add
and
cmp
sbb
adc
enter
lods
popf
dec
ret
mov
sub
dec
mov
in
inc
shrl
loopne
mov
int3
outsl
push
adc
imul
movsb
movsl
loopne
popf
test
inc
js
daa
fisttps
addr16
dec
dec
dec
and
imul
into
add
mov
sbb
xlat
test
jge
mov
jbe
dec
push
call
xchg
arpl
in
icebp
lret
mov
test
mull
mov
push
lahf
and
movsl
aam
lcall
ljmp
enter
cmp
mov
xchg
dec
outsl
aaa
std
jp
xchg
push
mov
and
adc
scas
out
sbb
icebp
sbb
mov
sbb
cmpl
sbb
std
inc
push
lahf
test
xor
popf
cmp
pop
xor
fldenv
mov
jmp
mov
xorb
mov
cmc
fidivrs
ret
adc
push
xchg
aas
out
add
out
dec
nop
xchg
fwait
nop
cmp
dec
into
icebp
dec
mov
fnstenv
ret
sbb
pop
dec
mov
movsb
rcr
outsb
adc
adc
aam
jg
adc
mov
mov
subb
mov
xor
and
data16
cmc
test
stos
divl
int
and
repnz
enter
or
push
mov
dec
cld
dec
xchg
aad
xor
jle
mov
scas
cmp
sbbl
lods
xchg
xor
mov
adc
sbb
clc
fcomps
xchg
outsb
sbb
rclb
pop
mul
inc
aam
in
adc
aam
mov
sub
arpl
xchg
loope
dec
cmpsl
sbb
mov
ss
lods
ret
test
xor
mov
cmpsb
xlat
mov
hlt
sbbb
movsl
mov
push
pop
ror
push
jge
daa
cmpsb
sub
test
mov
pop
decl
jnp
mov
icebp
dec
xchg
inc
out
pop
dec
xlat
and
mov
gs
mov
fdivrs
fcoms
push
aam
ja
les
cli
imul
jg
sarb
pop
jbe
sbbb
pop
cmp
pop
outsb
loope
lods
fcoms
pop
pushf
fdivrs
mov
mov
cmc
test
jmp
jmp
enter
jo
adc
in
loop
dec
iret
cmp
fcmovnu
mov
mov
cltd
popf
stc
enter
loop
mov
pushf
arpl
xorb
outsb
cmp
lahf
push
and
jno
sar
push
pop
es
loope
cmp
scas
sub
mov
push
mov
cmpsl
xchg
mov
jecxz
xchg
mov
out
dec
insl
ss
arpl
inc
pop
add
jbe
aaa
sahf
stc
and
dec
ljmp
mov
rcr
sub
pushf
inc
mov
inc
sub
or
xchg
mov
mov
call
inc
fwait
out
inc
inc
jno
cli
and
jnp
pop
sub
mov
xor
div
inc
xor
mov
pop
or
addb
popa
idiv
lds
andl
xchg
pop
fstpl
xor
je
jae
fcmovbe
jb
imulb
xor
xchg
cld
inc
adc
push
xor
rclb
or
xchg
icebp
addb
dec
lods
mov
jl
je
or
shlb
mov
int
mov
sub
xchg
adcl
mov
arpl
addr16
jg
xor
jg
aam
mov
xchg
or
fiaddl
add
mov
outsl
mov
cltd
pop
xchg
call
xor
addr16
or
jge
xor
dec
mov
aad
scas
fstps
cwtl
lcall
mov
fbld
aas
jb
out
adc
ljmp
mov
lret
dec
pop
sti
imull
and
jne
sbb
nop
fnstsw
pushf
imul
cli
mov
add
xchg
pop
cltd
push
jae
jno
pop
pop
sbb
push
cli
push
roll
imul
push
and
outsl
jl
jb
mov
push
dec
aad
inc
cmp
addb
in
mov
adc
add
pop
jnp
cwtl
andb
and
inc
shlb
sub
and
mov
out
jge
lods
mov
pop
std
jle
jno
push
mov
pop
mov
les
lock
xchg
xchg
sub
mov
or
sbb
aaa
stos
lds
fmull
subl
fstp
dec
sub
loope
aad
xor
or
xor
cmp
inc
daa
and
test
pop
notl
aaa
xchg
lcall
lods
fidivrs
fst
xlat
mov
fistps
repnz
add
in
loope
dec
inc
pmaxub
xlat
mov
push
sbb
cltd
push
pop
xchg
xchg
test
add
add
xchg
shll
xor
repnz
and
repnz
scas
sub
sbbl
push
mov
in
xchg
fldl
fdivl
lret
sub
aas
dec
mov
fcmovb
fsts
sbb
jg
add
push
sub
adc
xor
inc
jle
lods
pop
dec
mov
cli
cltd
push
sub
xlat
inc
jb
xchg
ljmp
mov
out
and
jnp
stos
mov
xor
sbb
or
pop
mov
out
cmpsb
push
jl
sbb
jnp
jns
mov
and
lock
and
loopne
adc
sar
sub
cld
sub
mov
clc
adc
fisubl
push
jecxz
fisubrl
push
pop
gs
sub
shl
dec
xchg
test
push
fwait
iret
mov
es
jp
cmc
scas
fcomi
fwait
adc
xchg
popa
jno
arpl
insl
xor
data16
aaa
and
rcll
jne
nop
inc
leave
add
mov
cmp
cmp
xchg
rcll
mov
call
xchg
ljmp
cmpsl
and
mov
push
lcall
or
mov
jle
repnz
aaa
jmp
sahf
mov
arpl
jmp
fwait
sub
mov
pop
das
enter
sub
xchg
jbe
jle
fldcw
jne
inc
negb
cmpsl
pop
mov
gs
into
mov
lret
jb
scas
push
adc
add
std
xor
fucomip
mov
lret
mov
lret
lea
pop
aaa
pop
scas
sahf
shrl
inc
je
pop
mov
jmp
push
jo
push
xchg
ds
and
xchg
rcl
mov
jne
jno
loopne
bound
cld
push
ror
push
ja
mov
add
sub
add
insb
arpl
out
das
or
push
push
enter
jge
dec
call
add
add
addr16
inc
xchg
xchg
test
ret
mov
sub
cmp
pusha
shl
mov
sub
pop
sub
std
fidivrl
aas
add
jecxz
pop
dec
repz
jg
sub
pop
add
aaa
pop
jmp
stos
or
mov
bound
adc
aam
mov
jg
fcoml
mov
out
cld
arpl
mov
add
or
mov
aad
rolb
mov
xchg
sbb
pop
punpckhbw
and
jno
xor
outsl
ficomps
dec
rorb
loopne
cmp
push
dec
daa
sub
out
lret
pop
cmp
fs
mov
sub
ret
test
mov
fwait
push
cvttps2pi
sub
ds
xchg
fxch
das
cmpsl
mov
sub
stc
lea
subl
outsb
imul
scas
lock
aaa
add
xchg
inc
mov
leavew
inc
cli
xchg
je
lods
xchg
or
jge
inc
pop
ficoms
inc
add
cmpsl
fsts
lds
pop
loop
repz
adc
sbb
arpl
mov
sbb
iret
push
insl
cmp
and
lahf
lock
adc
rdtsc
mov
icebp
sub
fwait
and
sub
rorl
insl
sbb
mov
ja
cmpsb
and
ljmp
xchg
clc
lcall
lret
std
mov
loop
cli
dec
dec
add
imul
push
cmp
mov
mov
mov
xchg
jb
js
adc
push
icebp
xor
or
loope
lods
lret
loopne
ret
scas
jmp
ljmp
int
mov
jp
out
mov
jne
repz
cmc
or
in
mov
sbb
and
dec
sbb
or
repz
mov
inc
scas
std
aad
shll
jp
fdiv
call
stc
sub
and
sub
mov
ficompl
cmp
stos
subl
out
ljmp
pusha
jmp
out
gs
ret
pop
lds
fwait
adc
enter
sbb
mov
mov
andl
enter
or
pop
ss
sbb
add
dec
mov
movsl
das
cmp
in
and
adc
xor
popa
sub
lea
xor
inc
xchg
lea
stos
inc
push
fidivs
arpl
jge
jbe
xchg
push
pop
xor
xchg
adc
push
dec
jp
roll
leave
and
nop
popa
add
lret
mov
fstl
loope
test
pop
mov
cld
dec
out
addl
cli
sbb
movsl
sub
push
push
popf
mov
mov
das
insl
ja
dec
xlat
pop
cmp
cmc
lods
push
pop
in
cmovae
pushf
pop
dec
mov
xchg
outsb
test
fbld
jg
add
jae
mov
aaa
inc
pop
shrd
bswap
sbb
mov
xor
sub
cmp
in
das
cmp
mov
xor
pusha
mov
out
jle
imull
mov
pop
xchg
lea
std
sbb
xor
mov
mov
stos
pop
push
push
sti
mov
adc
jae
aas
insl
test
ljmp
std
in
out
lahf
add
or
ficompl
rorb
push
loope
aad
outsb
outsb
testb
jns
xchg
ret
fndisi(8087
jmp
cwtl
cwtl
les
sbb
js
adc
jbe
mov
inc
test
inc
push
push
mov
fsubrs
sbb
movsb
in
xchg
out
adc
push
jnp
mov
lcall
jmp
lahf
cmp
inc
daa
cmp
sub
imul
fwait
lods
lcall
scas
push
sub
ret
jl
push
enter
lea
push
lcall
push
mov
inc
sbb
mov
mov
push
sub
xchg
imul
icebp
icebp
pusha
pop
mov
insl
push
imul
mov
push
mov
sub
cs
mov
mov
push
mov
sbb
cmpsb
pop
xchg
pop
pop
iret
mov
hlt
fnstcw
out
dec
inc
and
pop
pop
fiadds
sbb
mov
into
es
jge
xchg
or
into
jle
pop
imul
xor
mov
aam
cmp
inc
jmp
repnz
hlt
mov
jno
addr16
repz
jg
push
movsb
pop
sarb
scas
xor
mov
lods
aad
lods
add
cmp
sub
fwait
out
mov
xchg
dec
mov
and
lcall
in
or
gs
mov
leave
int3
pop
jge
dec
or
and
push
outsb
xchg
mov
fwait
in
mov
cmp
movsl
mov
sbb
sub
xchg
lret
imul
fsubs
push
stos
out
mov
nopl
jns
pusha
push
push
cmpsb
mov
dec
insb
ret
sub
divl
add
mov
dec
lods
inc
pop
pop
push
jp
inc
pop
inc
dec
jecxz
or
aad
or
lods
and
mov
vmulpd
shr
imul
sub
push
scas
int
pop
pop
pop
gs
int3
loop
sbb
add
inc
je,pt
out
ss
aas
pop
jle
lock
inc
data16
and
push
cld
push
or
push
movsl
cmpsb
or
lret
xor
les
xchg
test
xor
dec
xor
mov
mov
faddl
dec
mov
and
ret
pop
pop
cmp
xor
insl
out
dec
sub
icebp
outsl
lfs
cli
stos
or
stos
dec
or
ss
nop
sar
jmp
popf
and
loopne
rcl
rcll
pop
rcl
and
jg
pop
leave
cmp
xchg
or
out
in
push
iret
sahf
inc
std
mov
shlb
je
popl
lock
push
jp
out
repz
sbb
and
ds
xlat
dec
lret
jb
mov
jl,pn
jp
sbb
mov
xchg
cmc
cmp
mov
pop
push
int3
push
aaa
adcl
inc
inc
cwtl
jecxz
jnp
cmp
dec
insl
adc
movsl
add
xchg
cli
push
pop
aam
mov
icebp
cld
and
lret
fists
fistl
adc
inc
mov
loopne
add
ljmp
lret
shlb
jo
sub
add
add
sbb
jle
cmp
dec
repz
xor
rcll
xchg
insl
add
sub
lcall
inc
cmc
jl
pop
xor
js
push
in
xchg
add
xor
inc
dec
cmp
xchg
shl
add
pop
sbb
shlb
out
dec
addr16
xchg
or
mov
or
test
shrl
lods
stc
sub
xlat
inc
xchg
add
mov
cs
cmp
dec
xchg
mov
and
inc
adc
and
push
fwait
ret
sub
pop
cmpsl
faddl
jo
xchg
rcrb
add
mov
iret
xor
pop
inc
jae
pop
loopne
dec
push
dec
mov
jo
inc
pop
pop
or
push
std
jge
adc
jbe
and
jne
mov
loope
iret
xchg
lock
repz
mov
mov
mov
lock
mov
les
daa
push
push
ljmp
and
pop
push
dec
jbe
sbb
iret
sub
movsb
arpl
fwait
icebp
mov
lret
or
sbb
fldcw
out
xor
xchg
arpl
loope
mov
xchg
dec
mov
adc
pop
mov
aam
popf
test
fucomi
mov
mov
pop
sbb
jecxz
mov
cmp
or
jae
sub
mov
jecxz
inc
or
imul
dec
push
pushf
cmc
daa
xchg
cld
lahf
imul
xor
test
mov
insl
inc
sub
cs
cmp
mov
cli
es
filds
outsb
mov
or
loop
push
mov
mov
out
inc
inc
xchg
add
fsubrs
mov
jmp
leave
test
cli
pop
pop
jmp
ss
movsb
icebp
mov
ds
lahf
lock
mov
roll
scas
jl
cmp
fisubs
or
daa
and
or
dec
pop
out
dec
loopne
pop
add
mov
mov
inc
pop
stos
pop
imul
into
dec
mov
js
movsl
js
adc
pop
sahf
push
daa
adc
cld
xchg
scas
mov
aad
in
into
gs
jno
fimull
cltd
cli
pop
inc
clc
lds
testl
xor
xchg
cld
call
sbb
cltd
lcall
out
cmp
dec
lcall
cmp
pusha
stos
adc
les
push
inc
ss
adc
adc
call
idivl
dec
pop
adc
call
cmc
aas
nop
mov
ret
ss
pop
jge
adc
test
mov
xchg
bound
dec
outsl
cmpb
out
sub
ja
test
push
gs
pop
pushf
icebp
imul
jg
push
mov
pop
jg
inc
pop
push
test
xchg
adc
cmpsl
xchg
sbb
mov
loopne
xchg
sub
cli
and
leave
fistpl
es
push
sbbl
jb
insl
mov
adc
in
stos
mov
rol
jnp
and
enter
addr16
xor
loopne
jle
callw
add
dec
ss
adc
jmp
sub
ret
sbb
in
test
adc
adc
lods
push
push
bound
stos
mov
mov
jbe
dec
mov
je
daa
sbb
push
loope
insb
dec
xchg
test
cmpps
or
mov
es
push
xchg
sub
jp
lods
out
out
sbb
sub
cmp
aaa
aas
and
push
mov
inc
dec
mov
loop
adc
and
add
xchg
add
xchg
jl
push
bound
test
inc
es
fiadds
inc
loope
cmp
das
adc
adc
sub
cwtl
lods
fists
std
roll
xchg
out
test
stos
xor
popf
nop
cltd
es
mov
push
jb
adcl
scas
lock
cmpsl
aaa
or
or
push
stos
popa
mov
out
hlt
fs
dec
pop
rcl
pop
adc
pop
nop
sub
dec
adc
test
add
cmpsb
test
push
shll
addr16
jae
adc
jne
or
shl
mov
lods
mov
dec
loop
pop
sub
lea
xor
push
add
hlt
adcb
bound
and
cs
or
cmpsl
sti
dec
mov
dec
gs
pop
adc
inc
cltd
or
mov
ja
in
dec
das
add
jmp
xchg
or
test
sarb
jns
xor
outsl
xchg
das
mov
mov
lds
repz
xchg
or
imul
and
repnz
pop
add
cmp
jge
daa
sbbl
sub
cmp
jp
out
int3
mov
leave
testl
sbb
push
test
shlb
pop
xchg
pop
sub
adc
shrl
jecxz
cmp
out
aad
or
andl
dec
xor
test
push
sbb
and
sar
and
jg
or
and
nop
int3
cmpsl
mov
fstps
fimull
dec
jne
cmpsb
sub
out
into
and
stos
test
pop
sub
addr16
sarb
mov
out
push
push
jmp
ljmp
mov
insl
andb
lcall
sahf
movsl
pop
inc
outsb
and
sarb
add
cs
add
pop
lock
cmpsb
cwtl
pop
ljmp
lret
clc
out
sub
imul
xchg
call
xor
sbb
xlat
inc
repnz
cmp
pop
inc
leave
ficompl
dec
cmc
aaa
push
ss
out
jno
js
arpl
popf
jae
jmp
push
push
pop
jmp
arpl
filds
pop
and
rorb
jne
push
adc
xchg
mov
popa
and
test
xchg
adcl
loopne
fs
loope
mov
cmp
push
adc
jl
sti
ret
loope
mov
or
xchg
xchg
inc
xlat
dec
outsb
aad
or
mov
pop
aaa
out
pop
mov
push
aam
lds
adc
in
ret
enter
fucomp
decb
iret
or
icebp
ss
mov
add
test
push
out
adc
in
pop
inc
outsb
outsb
cmp
sub
cli
idivl
dec
dec
das
repz
test
xchg
repz
sbb
data16
ds
movsl
rorl
xchg
aaa
mov
movb
sbb
jno
jb
cmp
rcrb
cmp
push
xor
push
and
aam
jecxz
fadds
sbb
push
xlat
inc
lcall
xlat
inc
jo
movsb
xor
mov
cmc
mov
dec
jp,pt
pop
sbbb
fidivl
pop
mov
xor
es
lock
scas
mov
push
mov
addr16
vcomisd
fstps
popa
loopne
arpl
sub
test
movsl
scas
sbbb
cmp
repnz
sub
dec
inc
xor
push
push
fistpll
cmp
imul
sti
mov
xchg
ja
in
adc
inc
dec
pusha
and
in
rcl
repz
pop
mov
or
js
pop
mov
test
add
pop
iret
cmp
pop
nop
aas
pop
and
stos
mov
add
ja
cwtl
xor
movsb
xchg
xor
or
fstpt
insl
adcb
stos
movsl
push
adc
sbb
std
and
mov
pop
rcl
scas
ret
inc
mov
leave
mov
lcall
jne
out
mov
pop
pop
mov
xorl
pop
shl
pop
fimull
cmpb
movsb
xor
pushf
mov
inc
mov
imul
sub
or
xchg
iret
fs
add
dec
lods
push
push
push
sti
push
jnp
sahf
xor
jae
mov
push
dec
jbe
dec
sub
ljmp
clc
push
ret
sub
ja
inc
and
jge,pn
jle
sbb
sbb
adc
jnp
mov
gs
jmp
dec
xchg
add
addr16
stos
xchg
repnz
dec
cmp
mov
mov
adc
pop
sbb
mov
cmp
imul
stos
clc
push
mov
or
jns
mov
movsl
mov
test
mov
jmp
dec
in
cltd
xchg
inc
pop
andl
mov
aam
push
js
lret
mul
mov
jl
loope
pop
mov
or
sub
dec
dec
jbe
dec
pop
push
dec
mov
pushf
les
into
movsl
push
xchg
sub
fs
cli
into
pop
in
in
pop
jae
mov
out
cmc
out
jge
fcoms
xchg
mov
adc
pop
imul
or
and
push
sub
test
outsl
lahf
mov
fldl
into
mov
push
sbb
mov
roll
bound
out
stc
pop
shlb
pop
xchg
test
lea
mov
mov
fdiv
insl
mov
shlb
insb
clc
lcall
pusha
mov
sbb
adc
dec
cmp
call
call
mov
mov
pushl
jmp
xchg
pop
xchg
stos
dec
fisubrs
mov
push
mov
shll
loop
mov
sub
xor
jg
jb
out
call
pop
cmp
cs
mov
add
jae
mov
xchg
inc
xchg
arpl
fld
mov
outsb
insb
out
inc
push
aas
add
mov
and
push
pop
insl
lcall
xchg
jno
mov
jl
movsb
pop
scas
lods
mov
cmp
in
push
nop
fadds
sub
repnz
punpckhdq
aaa
add
xchg
stos
insl
adc
ret
sbb
dec
lcall
js
xor
bound
lcall
adc
int3
test
stos
mov
dec
mov
jo
and
mull
inc
inc
adc
dec
fidivl
int3
ds
mov
scas
stos
sti
adc
jle
icebp
push
sub
mov
call
outsl
xor
enter
pop
out
jmp
mov
dec
int3
mov
xor
mov
stos
pop
mov
or
push
jmp
movsb
lods
xor
sarb
icebp
mov
dec
push
fidivrl
popf
pushf
cmp
sti
mov
jecxz
add
sub
lahf
scas
fstpt
jnp
movsl
and
insb
jns
sbb
jno
and
gs
sub
jnp
lock
daa
add
xor
adc
dec
xchg
push
fmull
mov
jmp
out
cwtl
loopne
fmull
sub
aam
pop
in
mov
pop
loopne
pop
xor
testb
rolb
movsl
cmp
sub
jp
pushf
mov
mov
stc
or
or
out
mov
cmpsb
enter
clc
push
out
xacquire
pop
sarl
inc
push
mov
in
jbe
rclb
lods
sbb
xor
arpl
or
xchg
fs
movsl
inc
jge
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
jmp
pop
stos
sbb
gs
push
lds
mov
sbb
bound
pop
bound
shlb
xchg
aaa
xchg
xchg
neg
xchg
fisubl
xchg
sahf
xor
push
adc
pop
ja
or
xchg
dec
ds
cmp
and
movsl
jnp
xchg
sub
pop
jno
loopne
jg
pop
lock
mov
sub
fwait
or
inc
jge
rorl
dec
pop
das
sub
out
pop
pop
dec
fisubrs
in
mov
test
daa
arpl
mov
rcrb
lea
jle
sbb
je
pop
daa
cmp
and
push
adc
je
mov
mov
mov
pop
or
pop
out
in
movsl
iret
shrb
jae
and
mov
addr16
aaa
lock
fwait
sahf
mov
cmpsl
int
mov
std
aas
out
xchg
push
in
cmc
mov
bound
lret
pop
xchg
shl
mov
xor
or
mov
push
icebp
and
add
lods
hlt
fistps
sub
xor
xchg
repnz
mov
xor
push
repz
mov
clc
movsl
fcoms
cmp
or
xchg
adc
pop
stos
jp
orb
pop
inc
sub
popl
sti
lods
mov
icebp
lahf
or
mov
inc
imul
jns
scas
jp
pushf
cs
push
mov
pop
push
out
in
hlt
jecxz
loope
ret
jl
push
or
data16
sub
icebp
mov
repz
and
mov
aam
into
daa
cltd
loopne
jge
mov
sahf
or
sbb
jae
jo
fmull
lcall
jb
in
xchg
ds
jmp
call
out
andl
aas
cs
add
mov
roll
jge
in
push
inc
je
ds
inc
adc
xor
push
cltd
je
sahf
scas
mov
movsb
push
scas
aaa
mov
xor
xchg
ja
cwtl
fsts
xor
jle
mov
jns
inc
xor
and
test
data16
push
jae
ljmp
sti
sbb
in
sub
dec
mov
adc
pop
sub
js
cmpsb
int3
aas
mov
popa
add
scas
dec
jge
dec
daa
mov
xchg
mov
or
inc
lret
pop
pop
rcll
aas
nop
xchg
pop
out
test
sub
fistps
inc
ret
add
aaa
push
test
insb
or
loop
out
aam
ret
ja
scas
xor
dec
jne
xor
nop
insb
cmp
ja
lret
hlt
fisubl
and
jmp
hlt
gs
jns
popa
cmpsb
push
imul
fsub
add
xchg
call
jnp
mov
mov
and
jecxz
mov
inc
push
vcvtdq2pd
xor
xchg
push
jb
cwtl
xor
aam
mov
int
sub
pushf
sti
out
in
mov
inc
xor
in
push
flds
dec
mov
inc
repz
cli
mov
pop
fmulp
mov
ss
or
pop
ja
xor
add
xchg
mov
movsbl
mov
dec
mov
mov
inc
or
xor
cmp
repz
sbb
movsb
jge
mov
jo
negl
push
adc
inc
incl
lahf
push
sbbb
das
lahf
pop
cmp
dec
sti
fs
jg
sub
mov
js
adc
add
add
pop
push
mov
mov
loopne
test
pusha
out
incb
cmp
inc
popa
push
push
rolb
lods
arpl
imul
addl
test
aad
imul
xor
dec
outsb
xchg
sarb
dec
imul
sub
lods
popf
sub
int3
cli
inc
aaa
cltd
lret
sbb
push
push
sbb
push
and
or
mov
and
shrb
mov
and
inc
or
pop
cmp
jmp
iret
mov
xor
mov
or
cmpsl
push
fnstenv
jg
dec
aas
pop
pusha
or
mov
xchg
and
cmp
movsb
not
jmp
xor
stos
int
pop
jne
in
and
cmc
xchg
dec
mov
rcrl
add
jnp
sub
or
cmp
mov
xchg
xor
sbb
out
ret
add
mov
or
std
pushf
movsl
jae
repz
loop
lret
dec
out
adc
and
add
or
movsb
or
pop
cwtl
test
outsb
popf
dec
cmp
ficompl
sbb
xor
mov
test
in
dec
imul
test
cmpsb
fldenv
lcall
adc
or
enter
or
clc
lret
into
push
leave
lcall
xchg
xchg
adc
mov
add
fdivrs
push
and
pop
shl
loop
add
test
mov
mov
xor
pushf
in
sub
in
pop
xor
js
in
mov
cmpsb
fsts
xor
mov
mov
lods
xor
mov
scas
add
xlat
and
cmp
aaa
jne
fadds
lahf
or
xchg
imul
mov
push
sbb
cld
mov
mov
test
cld
enter
jl
sarb
and
mov
scas
lods
or
xor
and
adc
sbb
pop
js
lret
mov
clc
and
inc
mov
loopne
leave
push
and
imul
jae
sub
xor
cmp
add
sub
imul
push
xchg
xchg
pop
popl
sbb
enter
pop
cmp
mov
ja
push
xor
mov
sub
mov
loopne
sbb
sub
cmc
push
ds
faddl
ljmp
inc
aad
fiaddl
gs
and
xor
pop
mov
popf
xor
fsubl
das
jle
sahf
jo
fstpt
mov
mov
xor
inc
notb
sbb
xor
movsb
pushl
or
shll
or
pop
dec
fwait
push
test
mov
and
push
xor
pushf
test
mov
loop
pop
movsb
lret
daa
sub
mov
iret
into
sbb
jg
and
ja
add
jno
ljmp
push
mov
scas
dec
and
lret
inc
jg
scas
dec
sub
mov
sbb
mov
ljmp
jo
fdiv
adc
popa
fcoms
hlt
addr16
pop
add
nop
ret
fcoml
add
ljmp
xlat
cmp
cmp
jns
fists
icebp
loop
lods
js,pn
inc
cwtl
cltd
mov
int
pop
cmp
enter
addl
mov
xor
adc
outsl
loopne
sub
lret
fdiv
stc
sub
outsb
sarb
fisttpll
in
dec
gs
arpl
jmp
or
adc
cmp
sarb
push
mov
aas
das
in
test
or
xchg
push
out
push
int
cmpsl
lret
mov
jp
fs
test
mov
jge
sahf
or
nop
push
push
rol
cwtl
push
mov
call
mov
hlt
and
mov
popa
jnp
mov
dec
adc
arpl
push
popa
mov
mov
xlat
xchg
divb
inc
push
in
in
stc
mov
mov
ljmp
int
aad
inc
divl
sbb
push
inc
adc
sarl
xchg
mov
stos
jbe
sub
flds
add
repnz
shrl
xchg
into
sbb
add
xor
mov
or
mov
dec
dec
mov
scas
jp
mov
push
shrl
cs
mov
add
push
xor
ret
and
push
cmc
movsl
and
ds
and
xchg
xchg
adc
leave
lds
je
stos
mov
mov
mov
pop
iret
adc
fdivrs
pop
mov
mov
cmp
aas
cmc
fs
out
mov
xchg
and
decl
lahf
xchg
cltd
and
clc
les
lahf
jno
xchg
fs
data16
lea
adc
and
push
push
imul
sbb
push
roll
je
in
add
addr16
stc
incl
xchg
jp
cmpsl
cmp
lea
sbb
cltd
inc
icebp
adc
push
and
push
push
mov
pop
imulw
dec
sbb
je
int
mov
lret
jp
push
lcall
lock
pushf
push
fistpl
and
adc
pop
mov
dec
dec
cmp
sarb
stos
mov
test
or
mov
enter
mov
xor
adcb
subl
xlat
out
jle
lea
pop
subl
icebp
push
stos
dec
or
add
pop
mov
add
imul
aam
xchg
adc
add
xlat
out
sub
and
jle
out
jmp
int
xchg
sbb
or
test
scas
jmp
jle
pop
mov
aad
cmpsb
inc
das
sbb
popa
xchg
cmp
mov
or
out
int
adc
pusha
push
or
mov
ficoms
repnz
add
hlt
movsb
inc
repnz
dec
sub
and
sub
bnd
push
mov
or
insl
pop
daa
fisttps
int
fcmovne
outsb
repz
inc
mov
mov
cmpsb
cwtl
loopne
call
inc
data16
cmp
iret
pushf
inc
dec
fs
mov
fldcw
push
and
test
stos
inc
sbb
adc
je
xor
lock
mov
jecxz
jp
mov
lahf
dec
cmpsl
ss
lods
pushf
mov
call
lea
pop
pushl
lea
xchg
mov
pop
int
shl
pop
inc
fs
adc
push
mov
jnp
arpl
xor
rcr
pop
icebp
out
mov
cltd
subl
fdivs
cmp
outsl
adc
in
push
loop
cmp
inc
scas
sbb
xchg
mov
cld
cmp
fcmovu
out
cmp
pushf
fdivl
dec
dec
jo
ljmp
jb
mov
mov
xchg
add
cmp
mov
in
pushf
dec
cwtl
push
movsb
xchg
mov
cmc
cli
int
fwait
add
xchg
popf
aad
xor
mov
dec
cmp
mov
xchg
sbb
repz
or
adc
je
out
stos
enter
push
adc
fwait
mov
repnz
xchg
imulb
inc
or
cmp
loop
add
ja
push
or
push
push
in
dec
adc
jae
push
pushf
ljmp
test
adc
push
push
lock
xor
cmp
xchg
pushf
aad
and
scas
sti
pop
sbb
cwtl
jmp
loop
nop
push
or
lods
push
sti
repz
enter
sbb
test
into
add
insl
sbb
jg
jmp
sub
gs
std
outsb
inc
lret
add
jbe
mov
mov
insb
sbb
push
mov
inc
xchg
mov
mov
js
sahf
pop
testl
lret
stos
cmp
jmp
test
xor
and
ds
mov
mov
loop
test
mov
iret
jno
rolb
push
ds
loope
ds
nop
push
stos
test
adc
xor
in
out
add
addr16
pop
jle
sahf
leave
shr
jnp
es
ret
mov
mov
cmp
jne
xchg
aaa
dec
sub
icebp
add
out
push
adcl
enter
inc
mov
mov
int3
inc
or
push
mov
enter
into
enter
sbb
mov
fs
or
mov
in
cwtl
icebp
mov
ljmp
pushw
push
nop
xchg
scas
lcall
sar
cmp
adc
lods
xchg
fdivr
into
jno
push
lods
push
xchg
pop
or
mov
ret
mov
movsb
icebp
mov
or
and
imul
out
cmpsb
aam
fidivs
and
call
call
fwait
sarb
xor
jge
clc
call
sbb
fs
stc
fidivrl
loopne
sbb
xchg
pop
lods
cld
je
cs
out
dec
push
mov
ja
addl
jbe
sbb
xorl
inc
jb
aam
sti
dec
xor
mov
or
out
adc
and
lret
dec
xor
scas
aad
inc
or
cmp
dec
lock
mov
aaa
xchg
loope
push
ret
and
jl
xchg
inc
add
jge
inc
in
xor
cmp
pushf
rcrl
cmp
sbb
adc
sub
push
ret
lods
mov
mov
imul
mov
xor
push
ss
mov
pop
sub
mov
int
mov
test
xchg
jecxz
xor
stc
jno
lret
mov
pop
lds
cld
jns
testb
mov
mov
test
ljmp
scas
mov
shrb
mov
mov
xor
decb
mov
aas
inc
mov
repnz
imul
adc
repz
std
inc
sbb
cmp
and
xadd
fldl
popa
xchg
mov
jge
cltd
adc
pushl
jg
repz
add
icebp
mov
mov
addl
inc
and
ja
fwait
sbb
mov
and
mov
adc
fprem
repz
mov
sub
sbb
fwait
stc
mov
xor
jno
leave
and
lret
xor
pushw
out
gs
pop
insl
lds
test
add
int
cli
daa
mov
cwtl
jb
rclb
out
mov
out
aas
mov
rcrl
jno
sub
into
pop
jnp
pop
xor
inc
pop
push
cmp
pop
jae
jb
sar
js
mov
adc
cli
cmpsb
add
notb
aas
fs
sbb
outsl
mov
mov
dec
jo
les
sub
sbb
or
mov
inc
test
mov
icebp
mov
stos
dec
dec
mov
popf
add
rolb
mov
test
rorb
mov
mov
fs
cmp
mov
fidivrl
aaa
movsb
push
mov
in
test
push
scas
xor
enter
jl
xor
dec
adc
xchg
xchg
cmp
push
sbbl
insl
nop
and
fildl
or
in
call
push
dec
mov
lcall
scas
stos
in
insb
jmp
pushf
or
sbb
mov
cs
loopne
aas
jmp
xor
into
loopnew
add
and
inc
cmp
lcall
int3
push
repnz
test
jg
scas
ljmp
xor
mov
jns
cmp
jae
or
pop
push
pop
test
cmp
lods
pop
jle
dec
cld
push
in
xchg
ror
push
mov
push
insl
push
cmpsb
cld
cmp
or
scas
sarl
pop
jbe
xchg
pushl
das
push
xor
pop
out
repz
mov
hlt
sbb
lock
xchg
pop
insb
inc
leave
inc
das
inc
or
imul
loop
dec
inc
ret
add
lahf
push
mov
and
pop
int
adc
xchg
add
outsb
pop
insb
gs
xor
add
popf
das
push
movsl
adc
cmc
movsl
arpl
add
xchg
ds
in
mov
add
add
sub
data16
push
xorl
mov
adc
cmp
xchg
mov
pop
cmp
insl
test
out
testb
orl
aas
fs
pop
int3
fmul
sub
push
jnp
stos
fcmovb
int3
mov
pusha
and
out
xor
sub
mov
jmp
xlat
push
and
mov
xchg
xchg
xchg
push
pop
xor
push
and
and
xor
jmp
call
push
xchg
mov
cltd
xor
inc
cmpsl
or
pop
jmp
fwait
sbb
fnstsw
inc
stos
mov
repnz
adc
push
mov
push
cmp
filds
jne
hlt
test
mov
inc
test
pop
push
adc
cmp
inc
pusha
ret
test
pusha
orl
cmpsb
sahf
xor
popf
subl
rol
ret
mov
dec
adc
xor
inc
clc
sub
cmp
xchg
sub
mov
pop
sbb
or
in
lea
loope
mov
fbld
lea
popl
movsb
je
mov
inc
cmc
sub
fsubrl
xchg
ds
cli
out
pop
shl
dec
imul
pop
fdivs
fbld
roll
leave
sti
cli
js
sbb
cmpsb
or
adc
adc
cmp
pop
cmp
dec
hlt
mov
call
mov
in
test
bound
inc
and
iret
pop
inc
mov
stos
outsb
push
int
add
xlat
inc
push
gs
daa
leave
jl
jo
xchg
pushf
addr16
lcall
pop
int3
dec
cmp
popf
inc
rclb
jb
gs
dec
gs
push
ret
mov
xor
sbb
mov
adc
adc
jns,pn
mov
enter
popf
cs
arpl
push
jns
lods
push
out
push
mov
push
cmp
inc
and
xlat
or
jl
mov
out
ja
clc
dec
push
popa
repz
int3
sbb
sub
cmp
rcrl
or
int
into
aas
add
fistl
adc
fs
adc
sub
adc
pop
pusha
into
into
inc
test
stos
rcrl
popa
push
xchg
mov
jb
push
aam
add
dec
imul
fdivrs
push
cld
inc
mov
pop
inc
inc
sbb
sarl
fs
icebp
and
inc
test
shl
inc
mov
adc
add
cmp
push
hlt
nop
sbb
push
push
add
push
cld
or
jne
push
cmp
xchg
jo
js
push
xor
pop
vpunpckhdq
ljmp
adc
add
and
jns
pop
xchg
adc
and
push
scas
pop
dec
jae
das
adc
sahf
cmpsl
sub
roll
fdivr
lret
mov
adc
movsl
nop
arpl
pop
cmp
int
cmp
jg
popa
mov
gs
arpl
mov
mov
sbb
loopne
movb
dec
movsb
dec
push
fsubl
mov
in
gs
incl
inc
sub
fimuls
jecxz
mov
subl
adc
sti
in
lret
lea
push
mov
dec
fmull
push
fwait
push
add
add
clc
cs
mov
sti
sar
mov
div
insl
out
mov
daa
fidivs
adc
sub
and
add
xor
bound
dec
push
mov
subl
scas
jecxz
stos
push
in
push
stos
adc
sub
out
inc
jp
dec
or
jae
sbb
stos
cmp
mov
int
fildl
das
add
mov
rcrl
or
mov
mov
dec
imul
in
dec
push
out
faddl
sbb
dec
xor
cmp
and
loope
and
je
or
loope
out
cmovp
jbe
aas
mov
jmp
mov
xor
or
scas
push
lcall
out
xor
leave
out
and
adc
stos
mov
mov
cmp
push
scas
cltd
jmp
test
fiaddl
xchg
sti
inc
lock
sbb
cld
xor
mov
pop
mov
mov
lock
push
sbb
inc
scas
fidivrl
jno
les
out
push
icebp
lods
inc
jnp
push
and
mov
neg
xor
adc
xor
adc
mov
inc
ja
cwtl
mov
ret
push
adc
into
out
pop
mov
mov
xchg
push
lcall
fisubl
mov
pop
fst
cmpsb
mov
xor
rolb
aas
ss
xchg
leave
and
in
in
fldcw
pop
sbb
shlb
out
fisubrs
cmpl
mov
mov
sub
jnp
roll
loope
sbb
xlat
dec
xchg
lods
rol
addr16
lods
jns
sbb
clc
int3
mov
push
xchg
adc
jl
pop
dec
fsubrl
mov
roll
test
and
adc
jle
fwait
aad
sub
xchg
mov
lcall
jmp
call
and
lret
cltd
or
jp
adc
dec
sbb
leave
ds
leave
rorb
addl
js
xor
int3
aaa
inc
jno
cmp
pop
xor
cmpsb
jno
or
mov
leave
fs
insl
mov
pop
jb
inc
jp
sti
int3
leave
cli
cmp
sbb
insl
lea
add
call
xchg
inc
inc
xorb
cmp
mov
out
in
jmp
push
sub
push
mov
jle
jle
pop
and
adc
cmpl
or
xchg
mov
or
inc
ret
sbb
jo
das
add
add
jb
fsubrs
xor
mov
adc
or
mov
push
inc
adc
jge
jle
gs
scas
je
or
or
jno
sub
sub
or
and
xchg
lods
in
push
adc
iret
mov
mov
in
mov
push
inc
mov
xor
es
stc
jns
outsl
loop
or
ljmp
xlat
mov
mov
loop
mov
into
inc
int
punpckhbw
ret
cld
gs
pusha
cmp
xchg
fneni(8087
xchg
mov
cld
lds
add
jne
adc
jo
inc
gs
xchg
jmp
sub
sbb
movsb
icebp
or
mov
push
xor
cmp
movsb
jle
cmp
loope
fstpl
cmp
xchg
scas
sub
hlt
xchg
mov
into
cmpsl
addr16
sbb
out
or
fistpll
mov
scas
pmaxub
or
fistpll
mov
and
add
outsl
dec
sti
into
or
aam
push
xchg
add
and
jne
add
or
imul
ja
jle
jnp
pop
jbe
mov
mov
and
xor
inc
adc
repz
lds
push
push
mov
xchg
dec
push
pop
negb
sahf
clc
pushf
adc
inc
mov
jmp
aaa
mov
cld
lea
cmpsb
push
in
stos
movsl
xor
es
imul
mov
sub
cltd
fsub
adc
and
mov
sbb
imul
sbb
adc
sahf
jl
mov
loopne
out
in
sti
cld
mov
xchg
xchg
mov
int
pusha
es
mov
cmp
sbb
adc
hlt
jo
mov
cmp
jl
mov
lret
lods
xor
jns
add
push
push
arpl
adcl
xor
cmpsl
stc
loop
mov
mov
js
insl
adc
int3
or
outsb
clc
mov
enter
push
popf
jge
cmp
xor
dec
or
aaa
mov
hlt
aad
jne
dec
stc
sbb
pop
or
icebp
or
sbb
xchg
aad
mov
xchg
cmpsb
xchg
xchg
fdivp
jb
cld
pop
adc
jne
xchg
pop
mov
popa
adc
push
jne
push
mov
pop
mov
jge
mov
cmc
in
pusha
or
cltd
push
sbbl
mov
aam
nop
mov
test
movsl
inc
xor
pop
adc
cmp
or
cmp
fcompl
aas
xor
push
adc
lods
push
int3
push
repz
push
inc
cmp
cmp
inc
xchg
cmp
lods
cmpsb
iret
xchg
jb
bound
inc
les
je
bound
mov
rcr
push
pop
lods
cmc
fs
push
jge
leave
xor
fisttpll
lea
cs
push
outsb
pop
mov
loopne
leave
cmp
in
hlt
shlb
cmp
ja
push
xor
mov
sub
sbb
xchg
aaa
stc
inc
int
rorb
scas
inc
into
add
jae
sbb
mov
repnz
sub
lahf
imulb
aaa
icebp
jns
cmp
xchg
push
js
in
lret
inc
mov
loopne
cmp
fwait
xchg
adc
into
dec
sbb
inc
cld
popf
mov
mov
sbb
call
andb
jae
dec
push
xor
insb
cs
mov
sbb
mov
hlt
fmuls
sub
sahf
xor
jno
sahf
and
xlat
or
fsubs
mov
xchg
add
in
clc
and
dec
insl
mov
dec
and
dec
fsubs
mov
cmpsl
mov
rorl
popa
cmp
addr16
mov
cwtl
ds
mov
inc
fcmovnbe
daa
sbb
loopne
hlt
inc
cmpsl
ljmp
adc
cld
into
adc
mov
push
cli
inc
and
stos
sbb
xchg
and
orl
out
cmc
movsl
pop
insb
sbb
emms
adc
leave
int3
add
aam
out
movsb
pop
in
fcoml
rorl
push
dec
xchg
mov
jne
add
sbb
movsb
jg
xchg
popf
jl
jne
int
dec
cltd
jne
adc
mov
adc
cmp
cli
dec
fwait
test
lods
push
pop
jno
insl
mov
xor
int
xor
sbb
xchg
inc
xor
xlat
push
les
sbb
outsb
and
sbb
jle
call
push
push
repz
jmp
adc
jo
sbb
push
mov
imul
sub
lret
sbb
adc
cmpsl
sti
dec
and
mov
das
scas
xchg
cmpsb
xchg
adc
or
adc
inc
xlat
jmp
nop
inc
or
xchg
mov
xchg
mov
es
aad
mov
xor
xor
dec
pop
dec
in
sbb
push
popa
jns
sbb
lahf
push
xor
mov
jecxz
jbe
hlt
imul
add
inc
push
or
adc
shlb
adc
push
xchg
ss
gs
popa
add
test
add
dec
movsb
sbb
sub
rcl
repz
sub
call
mov
push
popf
testb
mov
or
enter
hlt
mov
add
and
mov
cmp
pop
sub
or
in
shrb
cmpsb
adc
xchg
xchg
adc
and
push
adcb
cltd
movsl
inc
mov
and
pop
or
test
inc
sub
test
pop
and
adc
dec
dec
pop
mov
outsb
adc
dec
jle
mov
xchg
sub
jbe
pushf
ret
jecxz
and
cltd
sub
and
dec
fs
jle
lret
mov
pop
fmuls
leave
and
test
xor
mov
xor
pop
sub
aam
inc
pushf
pop
xchg
das
jg
cmp
lock
mov
mov
lcall
sbb
gs
ficomps
pop
xchg
dec
cltd
outsl
jmp
in
ficoms
xchg
jb
dec
aad
xchg
es
adc
cwtl
pop
fbld
js
in
pop
fldt
push
push
popf
mov
jb
decb
loopne
or
jnp
leave
mov
movq
jl
es
xor
mov
xchg
nop
std
jg
adc
jmp
cmp
inc
mov
mov
xchg
das
inc
jbe
nop
arpl
mov
pop
sbb
cwtl
jne
int3
scas
fs
mov
sbbb
push
add
mov
rcrl
call
gs
xchg
lret
aad
dec
shl
push
push
out
xor
addr16
cli
int3
mov
daa
cs
adc
mov
and
dec
jmp
into
test
xchg
js
or
xor
outsl
xor
iret
pop
mov
xorb
xor
cmp
jge
push
in
mov
mov
lahf
cltd
xor
jnp
fs
aaa
in
pop
stos
out
lret
push
rcrl
ret
push
adc
jne
xchg
sub
rorb
inc
shll
ja
mov
fcomps
jbe
add
scas
testb
dec
hlt
mov
out
or
js
adc
not
ss
push
push
dec
into
sbb
cmp
iret
mov
pop
adc
cmpsb
stos
mov
adc
cmpsb
inc
js
pop
lds
sub
and
xchg
pop
mov
cmp
xchg
enter
fisttps
stos
in
insb
sbb
and
test
or
sbb
lret
in
and
les
insb
cmp
xchg
push
push
xor
push
cmp
pop
leave
sbb
mov
loopne
xchg
dec
cs
xor
adc
jo
nop
fwait
pushl
push
out
push
cld
fldcw
jg
call
pop
outsl
mov
xchg
sbb
stos
outsb
addr16
lret
clc
je
pop
lock
fwait
clc
cld
aad
push
push
movsb
sbb
or
cmpsl
adc
popa
test
sub
or
test
shlb
leave
mov
jle
dec
mov
int
cmp
jge
and
sub
imul
pushf
icebp
and
inc
add
xchg
cmp
out
pop
in
jecxz
lea
addr16
mov
lock
jge
jecxz
mov
orl
xor
pop
setb
movsl
or
mov
add
cmp
add
lahf
insl
sbb
mov
jne
cmp
in
and
or
cmpsb
lcall
pop
dec
std
mov
mov
mov
sub
decb
insb
insl
pop
mov
sti
arpl
jge
xchg
ds
and
nop
mov
pop
jne
std
rcll
mov
push
mov
cmp
dec
dec
or
loop
jb
or
add
inc
cs
inc
out
add
push
fst
insb
xor
into
dec
jecxz
outsl
sub
fst
cmp
inc
cmpsb
push
add
mov
mov
lcall
cmp
cmpsl
fadds
mov
add
xchg
jo
lods
mov
test
pusha
add
push
adc
inc
ljmp
imul
xor
add
mov
mov
mov
push
mov
inc
es
sub
jno
ljmp
das
bound
addr16
mov
inc
popa
and
cmp
mov
pusha
mov
sub
jecxz
nop
gs
scas
lods
cli
and
rcrl
stos
or
rclb
std
inc
sti
pop
add
xchg
cltd
jmp
stc
rcl
lret
xor
arpl
mov
lahf
hlt
dec
pop
mov
outsl
out
pop
lods
inc
or
sub
cli
mov
in
xor
jns
aas
dec
scas
sbb
negl
mov
sub
cltd
jmp
cmc
fsubs
xchg
ss
push
out
and
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
jmp
inc
push
add
imul
outsl
dec
adc
pop
bound
jae
negl
or
fwait
mov
ret
and
data16
add
mov
inc
faddl
xchg
dec
out
sub
fwait
push
cmpb
out
in
jns
and
fiaddl
mov
ss
test
lock
inc
stos
push
cmp
mov
cmp
incl
in
jae
fsubs
sbb
xchg
loopne
mov
pop
lea
mov
push
inc
dec
imul
in
cmpsb
mov
fisttps
xchg
fnstcw
dec
mov
call
fwait
rol
inc
mov
push
inc
or
mov
mull
addr16
inc
mov
push
push
lea
or
rcll
fwait
jbe
pinsrw
cli
mov
add
imul
sub
stos
enter
or
repnz
mov
push
inc
test
icebp
mov
lcall
or
cwtl
out
ret
loop
fidivrs
mov
sbb
mov
mov
sub
jp
inc
pop
aam
into
xchg
dec
adc
dec
push
insl
cmp
addr16
ljmp
push
cmp
cs
pop
les
jmp
je
push
jae
in
cmp
pop
push
mov
push
lock
ret
pushf
jle
daa
insb
pop
mov
shl
sub
cltd
xchg
sub
xchg
scas
aam
xchg
stc
cmc
shll
int
mov
in
verr
jle
mov
pusha
movsb
jnp
add
jle
mov
fs
push
call
xchg
mov
jg
stos
push
imul
pop
mov
aad
lret
jbe
mov
ret
in
xchg
cmp
lea
bound
repz
sbb
push
out
inc
sbb
xchg
or
outsl
lcall
outsl
dec
push
push
and
inc
les
mov
ljmp
rcrl
ljmp
popa
in
stos
test
inc
fisubrl
sahf
cmp
pop
add
xchg
mov
inc
push
pusha
sbb
or
sub
cltd
or
mov
in
jo,pt
shll
ret
sbb
mov
dec
mov
xor
mov
pop
or
inc
leave
xchg
dec
xchg
popf
cmc
xchg
mov
add
aaa
mov
fnstcw
rclb
jp
mov
aas
jle
mov
xchg
sbb
cmpsb
add
out
adc
sbb
sub
lahf
jae
cmp
lods
xor
mov
bound
loope
inc
jnp
dec
lret
aam
push
xchg
push
mov
das
sbb
lret
in
jns
jns
pop
lcall
fs
jne
mov
adc
aad
mov
cld
xchg
mov
pop
test
xor
or
inc
addb
or
pop
fistpll
out
lds
sbb
push
imul
aam
inc
push
test
inc
scas
fwait
ret
push
fmull
sti
jo
rolb
out
mov
out
push
mov
xor
push
ret
mov
push
mov
out
mov
test
or
aaa
ret
pop
xor
fcmovu
stos
ljmp
xor
xchg
fisubs
test
and
loope
mov
outsb
into
ljmp
push
cmp
stos
xor
cli
pop
mov
adc
repz
ljmp
mov
fisttpll
pop
push
fldenv
jbe
jecxz
int3
ret
cld
ds
xor
sahf
push
ljmp
aaa
inc
adc
pop
insb
xchg
int
into
xchg
mov
or
das
jg
or
repnz
daa
xchg
xchg
mov
xchg
loope
jbe
fldcw
push
add
not
cmp
cltd
stc
pop
pop
jge
xlat
mov
xor
dec
adc
pop
xchg
inc
xchg
das
pop
jg
pop
xor
insl
lahf
mov
pushf
insl
subl
inc
mov
adc
xchg
add
lea
call
incb
jge
jno
scas
in
xchg
add
aas
sbb
pop
and
pop
or
cmp
xchg
push
push
or
sahf
and
adc
test
cmp
inc
ds
and
pushf
loop
shll
in
test
mov
pusha
dec
cmp
jmp
xor
mov
push
call
xor
pop
sub
in
int3
stos
call
std
xchg
popl
push
add
and
push
loopne
les
jb
mov
dec
push
pop
or
jb
inc
cmc
daa
subb
mov
jnp
sbb
jp
cmc
xchg
rorb
ret
cmp
mov
adc
addl
out
icebp
or
lret
imul
test
xor
lods
jmp
sub
cmp
ret
je
xorb
stc
enter
hlt
or
inc
call
sub
jae
data16
out
cmp
xor
jmp
das
pop
jb
mov
inc
push
xchg
shlb
sti
fstpl
mov
shrb
mov
inc
sti
pop
ficomps
imul
imul
pop
leave
xchg
push
test
mov
daa
cmp
cmc
insl
push
in
ret
jbe
mulb
inc
outsb
add
mov
int3
aaa
jne
jnp
pop
xor
push
clc
inc
mov
add
test
sarb
sub
and
aas
ja
test
cwtl
push
adc
and
fisttpll
mov
add
adc
jo
enter
into
xor
or
mov
add
inc
lcall
jb
mov
loop
aaa
fmuls
inc
outsb
movl
push
shll
sbb
add
dec
mov
dec
mov
sub
cmp
loopne
mov
mov
lods
idivl
adc
or
adc
mov
insl
xchg
addr16
testb
push
mov
push
test
test
mov
push
push
jmp
bound
outsl
sub
mov
mov
push
mov
xchg
cwtl
mov
sub
pop
sbb
push
rcrb
addl
or
xchg
mov
pop
add
or
mov
and
and
jnp
jmp
repz
in
xchg
pop
mov
pop
daa
lcall
movsb
clc
mov
and
add
aaa
xor
cmp
pop
pop
push
mov
lock
sbb
test
dec
pop
cmp
insl
pushl
inc
add
fisubrl
mov
inc
cltd
push
mov
jecxz
out
sbb
es
outsb
cmp
fsubs
in
test
cli
pop
mov
fwait
adc
lcall
jl
pop
mov
imul
enter
and
push
mov
cld
push
nop
popw
ds
icebp
fisubs
sbb
cmp
loopne
stos
dec
push
sbb
add
out
sub
mov
add
mov
dec
jno
mov
pop
sub
pop
jl
xlat
jnp
dec
repnz
ror
outsb
test
mov
xor
cwtl
add
incb
fs
push
test
fcoml
mov
repnz
div
shl
in
or
mov
sbbl
dec
in
fcoml
gs
aas
sahf
push
sub
scas
lods
xchg
and
xchg
sub
lock
and
sbb
out
stos
rorb
or
mov
std
sti
movsb
or
leave
dec
out
sbb
xchg
popf
jb
fimull
mov
shll
sub
add
adc
pop
sti
popa
push
adc
xor
sbb
mov
js
inc
popa
sarb
mov
mov
insl
push
inc
cmp
pop
sub
add
lret
ljmp
xchg
mov
sub
mov
dec
xor
insl
mov
mov
mov
mov
push
dec
pop
repnz
add
adc
mov
movsl
add
xchg
test
xchg
lods
cmc
rorb
pop
out
xchg
pop
int3
adc
clc
iret
mov
imulb
mov
lods
stos
iret
imul
sub
adc
adc
lea
add
mov
popf
mov
pop
cmc
jl
xor
loopne
fisubs
in
call
xchg
xchg
fcoml
jns
or
ret
imull
lds
jg
scas
push
pop
or
push
inc
sub
adc
inc
pop
fcomp
es
jnp
push
dec
dec
cwtl
pop
inc
pop
fisttpll
mov
in
sbb
and
imul
addr16
sbb
aas
jmp
mov
insb
mov
push
mov
out
add
pop
and
mov
mov
int
pusha
pushl
icebp
sbb
notb
mov
shll
sbb
pop
in
xchg
frstpm(287
jmp
orb
xlat
scas
sub
out
test
out
add
sar
mov
jmp
pop
fs
jge
call
mov
sbb
adc
push
testl
lods
cltd
pop
jne
xchg
jo
ds
cmpb
fldcw
shll
cmp
std
mov
fimull
movsl
push
mov
xchg
push
push
add
sti
jbe
mov
push
bound
nop
out
and
jnp
ds
adc
jecxz
loop
or
ret
insl
test
cmp
ja
test
das
test
add
inc
sti
fiadds
xor
and
or
loope
add
cmp
inc
es
jbe
push
ret
pop
test
stc
lods
mov
lods
pusha
xor
fnstsw
jp
jbe
push
pop
xor
adc
add
sbb
push
lahf
pop
mov
stc
sti
stos
xchg
adc
mov
adc
jne
fs
out
jp
test
pop
mov
jbe
adc
clc
jnp
push
mov
fnstcw
xchg
xchg
sti
dec
scas
dec
lods
dec
rcrl
push
or
sti
imul
xor
out
sub
add
lock
adcb
std
jge
dec
push
scas
cltd
push
add
jns
jbe
mov
jbe
es
pop
inc
inc
pop
idivl
and
and
in
add
dec
ret
fnsave
je
in
add
mov
xor
adc
sbb
dec
sub
mov
ja
and
popf
movsl
int3
popa
adc
cmp
bound
mov
sub
jae
repnz
mov
xchg
pop
and
movsb
xlat
or
in
aam
xor
pusha
daa
cmp
ja
pop
push
ljmp
push
outsb
xlat
stc
es
out
push
fbld
xchg
jns
cmp
icebp
insb
lods
das
and
fs
ret
insl
jo
push
mov
add
add
sahf
push
jecxz
mov
and
push
jle
lds
aaa
adc
sub
mov
sbb
xor
xchg
idivl
subl
or
fwait
ja
push
fsubl
mov
or
scas
nop
fmuls
orl
lods
xchg
mov
outsl
cmp
lods
jae
stc
pop
sub
mov
incl
mov
sub
aad
shll
test
jb
stos
iret
mov
sbb
je
inc
dec
mov
jp
xchg
mov
into
or
xchg
push
cmpsb
inc
dec
pop
insl
mov
jns
daa
pop
or
popa
dec
aad
das
loop
jl
test
mov
jg
dec
jmp
xor
sub
push
test
shr
std
push
fldt
out
lock
test
dec
sbb
jp
ss
pop
xchg
fisubrs
cmp
dec
push
mov
or
mov
xchg
lods
aad
daa
mov
jmp
or
push
out
iret
pop
icebp
xorl
cmp
rcrb
push
adc
test
int
dec
xor
or
add
lret
mov
sbb
pop
push
and
test
aam
stos
sbb
xchg
popw
add
mov
cmp
xor
pop
jno
xor
add
test
jmp
sbb
lods
movl
sub
mov
pop
sub
jecxz
mov
shll
popf
xchg
int3
inc
adc
mov
sub
idivl
dec
cmpl
les
push
dec
cmc
loope
aas
cwtl
pop
test
or
insb
sbb
adc
subl
xchg
ret
divps
jecxz
lea
insl
pop
push
ficomps
add
mov
or
int
adcl
jae
xchg
push
cmp
jmp
dec
push
test
xchg
and
in
repz
insb
ljmp
inc
pop
aas
cmc
loope
mov
xor
jne
test
jnp
mov
in
xchg
lea
jge
inc
stos
test
xchg
vcvttps2dq
cmp
leave
mov
pop
xchg
fsubrs
insl
inc
or
insl
ljmp
jmp
in
pusha
push
pushw
int3
mov
sub
mov
sbb
pop
mov
xchg
xchg
mov
popf
mov
or
lods
popf
cmp
popf
shrl
in
aam
cltd
lods
adc
and
test
aaa
cwtl
jbe
cmp
jne
jmp
jnp
mov
nop
xchg
outsl
push
js
cs
dec
mov
neg
inc
rcrl
add
ret
imul
add
jmp
out
adc
fisubl
push
cmp
arpl
pop
or
pop
ret
test
jge
jnp
push
andl
mov
loop
adc
mov
or
stc
icebp
mov
lods
imul
push
hlt
xor
out
mov
sub
add
outsb
dec
jb
pusha
ret
push
pop
sbb
jecxz
xchg
or
popa
xchg
ror
dec
jmp
addr16
scas
repnz
mov
inc
jecxz
sbb
fmull
repnz
xchg
incb
xchg
icebp
cmp
repnz
sub
add
ljmp
out
sbb
fistps
mov
xchg
je
push
dec
mov
adc
push
lret
mov
mov
inc
lds
sbb
push
pop
push
cli
mov
inc
or
cltd
sbb
andl
out
in
outsb
jmp
movsl
stos
ffreep
inc
repz
jae
pop
test
outsl
fld
test
push
mov
and
pusha
cmp
dec
test
inc
fdivrp
insb
hlt
sbb
and
add
sub
push
iret
pop
dec
sub
iret
loopne
stos
sub
xor
inc
and
sbb
dec
add
or
xchg
push
inc
push
pop
sub
mov
jnp
repnz
pop
fcmove
mov
daa
dec
in
stos
adc
dec
shl
test
cs
iret
addr16
pop
sub
inc
xchg
jmp
pop
imul
ljmp
out
hlt
jb
pop
imul
dec
addb
mov
inc
loop
lock
mov
filds
push
clc
orl
or
push
jg
push
test
push
dec
cmp
daa
inc
xchg
mov
fcoml
repnz
shll
outsb
xor
xchg
lret
mov
enter
in
lea
lods
mov
mov
xchg
adc
sbb
mov
int
pop
shlb
inc
cmpsb
out
orb
insb
repz
out
lahf
pop
lods
cmpsl
into
stc
pop
cmp
cmp
pushf
and
cmp
mov
adc
repz
push
mov
sub
jl
pop
ret
aas
pop
shrl
adc
xchg
outsl
inc
aad
push
shrb
popf
jno
shll
scas
aad
xor
cmp
mov
jnp
outsb
mov
add
popl
push
mov
pop
maskmovq
notl
pop
mov
sahf
jp
jo
stos
xor
jle
mov
xor
scas
call
mov
or
outsl
inc
xchg
inc
lret
mov
push
dec
movsl
mov
insb
push
addr16
das
fldt
out
push
out
or
test
cmpsb
adc
movl
jne
and
push
pusha
or
sbb
sub
jns
stos
arpl
pop
xor
loop
pop
sub
dec
add
xchg
cmp
mov
xor
or
sbb
or
aas
pop
mov
stos
sahf
jbe
lds
daa
sahf
add
add
adc
jmp
hlt
mov
fs
jb
sub
out
lock
fcomps
movsb
hlt
sub
shr
sbb
jle
bnd
jnp
je
loopne
test
push
lret
push
insl
cmp
jbe
stos
dec
cwtl
bnd
shrl
xchg
add
sub
push
or
cmp
xor
xlat
andl
jbe
mov
push
push
or
adc
pop
sbb
sbb
int3
cli
add
dec
push
inc
push
push
adc
xlat
cli
gs
inc
cld
imul
mov
cmp
mov
aad
stc
xchg
jns
testl
sahf
mov
or
movsl
in
mov
mov
pop
cmp
aam
push
shll
mov
inc
imul
mov
shlb
enter
push
xor
cmp
fidivrs
jl
das
repnz
test
xchg
cwtl
icebp
push
sbb
push
mov
xchg
lret
pushf
push
out
or
pop
sub
mov
inc
or
push
lea
call
inc
out
push
sub
jecxz
mov
add
add
dec
lcall
cltd
cld
mov
mov
sub
das
cmp
popf
loope
jns
lds
push
movsb
lock
mov
mov
ret
mov
mov
dec
jle
xchg
push
popf
sub
insb
mov
es
idiv
xor
movsb
mov
add
ljmp
sub
xchg
xchg
imul
and
call
lods
or
dec
xor
jl
dec
das
sahf
pop
icebp
out
add
dec
lahf
roll
lds
add
sub
scas
and
andb
push
dec
sbb
icebp
xchg
sbb
sub
bound
add
inc
lcall
push
xchg
lods
mov
aas
ret
mov
inc
mov
sub
repnz
push
and
shr
dec
out
xor
and
sub
sub
gs
repnz
xor
mov
mov
jb
fsubl
divl
push
add
inc
stos
adc
add
pop
push
ja
dec
lds
in
or
mov
sub
pusha
out
into
and
bswap
dec
insl
jbe
adc
or
dec
sub
rolb
pop
push
adc
lret
fsubs
adc
sbbl
mov
mov
or
push
aad
bound
testl
jmp
mov
push
loop
cmp
js
out
lds
shll
nop
aas
aaa
pop
jns
mov
nop
mov
push
test
das
mov
mov
icebp
mov
out
jecxz
mov
pop
mov
mov
mov
nopl
jo
hlt
fucomp
gs
scas
sub
cmp
fsts
jle
push
les
shl
aas
call
jl
mov
add
inc
mov
inc
mov
imull
pop
adc
mov
sub
push
lods
out
jge
sbb
jae
into
stos
fisttps
push
sahf
fidivl
mov
pop
jae
adcl
add
pop
xorb
and
adc
popf
pop
int
pop
rorb
repz
sbb
subw
mov
push
mov
push
das
cltd
inc
push
or
and
mov
roll
dec
je
mov
mov
jp
sub
inc
insl
movsb
mov
test
ret
dec
lea
test
push
fidivrl
idivb
pop
mov
add
aam
cmc
or
repz
mov
iret
sub
jl
dec
jo
jae
and
lds
outsl
test
add
lods
test
je
ror
inc
cmp
mov
lret
aad
add
loopne
lahf
mov
les
insl
adc
push
mov
add
or
ret
mov
jmp
mov
jne
mov
and
push
jbe
mov
adc
push
mov
xchg
fwait
mov
jge
pop
mov
and
add
scas
inc
arpl
clc
test
roll
jecxz
mov
adcl
mov
mov
sbb
lret
add
inc
xor
mov
xor
push
sub
call
xchg
cmp
xchg
pop
pop
aam
mov
sub
stc
add
dec
cmpsl
mov
push
sar
std
and
jecxz
mov
es
mov
clc
and
stc
xchg
js
sub
pop
daa
ja
xchg
in
dec
sub
sbb
pop
in
xchg
dec
inc
push
or
fwait
sahf
cld
push
lock
pusha
imul
inc
cmp
cld
mov
scas
lret
cmp
jb
std
adc
sbb
push
insl
xchg
xchg
testl
test
add
jb
je
mov
insl
ljmp
inc
mov
arpl
decl
adc
out
mov
fnstcw
mov
jno
cld
cmp
dec
iret
push
idivb
imul
mov
popa
cltd
in
xor
fildll
cltd
js
sbb
cmp
push
sub
enter
roll
mov
int
push
aas
rclb
out
fistps
out
dec
fcmove
dec
push
mov
ret
mov
sub
jl
pop
leave
lods
xor
pop
cmc
pop
imul
mov
shrb
push
jo
mov
enter
call
or
sahf
adc
ficoms
jmp
push
call
push
jp
cmpb
mov
push
pop
pop
jo
pop
rcrl
fdivs
into
jle
add
adc
iret
pop
jne
loope
loop
ja
test
jmp
dec
push
mov
pcmpeqw
orb
shr
jno
lds
int
and
pop
pop
jp
xchg
lods
dec
add
cmp
xchg
cltd
inc
mov
arpl
dec
imul
push
cmpsb
mov
in
negl
movsb
sub
push
stc
fisttpll
aaa
fcoml
fldenv
movl
xchg
xchg
push
shrl
adc
scas
test
push
rol
inc
inc
and
push
lret
mov
add
leave
inc
mov
lds
outsb
fs
or
cmp
xor
bound
dec
ret
mov
jecxz
mov
int3
and
mov
test
gs
rcrl
fwait
sarl
or
mov
lret
popa
loope
cmpsl
xorl
push
scas
jbe
aam
out
ljmp
outsl
pop
pop
mov
fadds
pusha
adc
rolb
mov
dec
cld
push
out
test
subl
out
aas
or
mov
in
rorl
sbb
daa
inc
add
pop
repnz
les
out
cmpl
and
cld
rcl
cli
push
cld
jo
cmp
loop
adc
jne
or
lcall
mov
xchg
jo
adc
out
or
jp
xor
rcrl
cmc
jb
push
popa
aam
repnz
jmp
jns
stos
mov
aam
jecxz
xorb
or
jmp
or
and
ss
cld
addb
add
sub
push
test
loope
and
push
xchg
addb
mov
jbe
xchg
sbb
or
sub
adc
insb
inc
xchg
cs
shlb
int
cwtl
out
movd
call
mov
aas
jae
inc
cmpsb
cmp
jg
push
inc
sub
xor
inc
in
push
rol
mov
mov
xlat
nop
jb
in
out
ss
inc
and
pusha
cmp
popf
scas
jno
sub
push
or
fistps
push
and
or
repz
add
jo
sub
add
xor
int
add
inc
adc
popf
inc
fbstp
jg
nop
dec
mov
pop
mov
adc
icebp
nop
addr16
push
inc
decb
mov
loope
test
mov
lret
inc
inc
or
addr16
repnz
lock
ss
dec
mov
cwtl
fadds
addr16
roll
mov
jmp
lods
pop
shrb
ficompl
and
pop
aam
dec
icebp
inc
stos
insb
int3
nop
imul
push
inc
sbbl
imul
jp
inc
mov
mov
xor
jp
add
sub
int
mov
mov
and
nop
sti
push
push
mov
add
imul
fstl
imul
pop
std
lret
sub
mov
fstpt
daa
jno
sbb
daa
mov
scas
movsl
lret
jp
or
into
lret
fs
add
ljmp
imul
add
movsl
dec
fucomi
add
adc
fstpl
sti
int
fnstcw
scas
pop
push
or
shl
xchg
xor
mov
aad
push
stc
ja
in
lret
out
cmp
movsb
insb
dec
in
dec
clc
add
and
mov
sbb
mov
cmpb
and
adc
sti
add
dec
push
stos
sbb
mov
mov
xor
movsl
jae
mov
jge
jp
pop
jo
jo
add
popf
dec
cmpsl
enter
adc
lret
out
sub
cvtps2pi
cmpsb
hlt
into
xchg
das
mov
arpl
sbb
mov
and
fisubs
mov
fdivr
cmp
push
andb
inc
scas
push
fidivrl
sti
xchg
mov
mov
std
jge
roll
fimull
mov
shll
cmp
mov
test
push
add
mov
test
mov
fwait
push
jo
fs
ficoms
sub
stos
add
sarl
xchg
jmp
pop
jbe
ficompl
lahf
bound
ljmp
mov
ficomps
push
gs
es
in
hlt
aaa
addr16
jp
push
int
xchg
push
aam
push
loopne
in
and
dec
enter
adc
imul
movsl
cmp
jle
jp
sbb
fimuls
cwtl
inc
sar
add
sub
arpl
dec
popf
scas
es
lock
or
cld
pop
lods
das
sahf
aad
std
or
xorb
and
outsb
sub
shrl
dec
outsl
push
jg
dec
pushl
cmpsb
int
adc
xchg
popa
jbe
cmp
sub
stc
js
pop
pop
or
cmp
xchg
out
mov
push
pop
dec
testl
lahf
jno
jb
ret
lods
into
movsl
in
pop
add
cmp
xor
mov
sbb
xchg
jbe
dec
adc
push
iret
loope
mov
add
push
out
jecxz
aad
insb
dec
icebp
pop
lcall
mov
and
or
cmp
xchg
cmp
lods
xor
mov
push
mov
mov
xchg
xor
mov
push
test
ficompl
push
scas
movsl
pop
inc
cmp
loopne
jno
xor
clc
mov
pop
lcall
aad
push
imul
adc
out
fmuls
mov
adc
je
arpl
sub
loop
mov
dec
jbe
sbb
add
mov
sbb
add
pop
inc
lret
add
push
cmpb
mov
or
mov
test
xor
mov
sti
das
lret
jae
jno
xchg
in
mov
not
inc
fbstp
push
lds
mov
dec
inc
jp
fidivl
hlt
mov
aam
mov
setb
and
jae
sbb
arpl
pop
cs
mov
pop
stc
test
mov
in
mov
sub
xchg
sbb
sha1msg2
fidivrl
xor
mov
pop
in
cmp
xor
and
imul
sti
sarl
dec
shll
les
sbb
imulb
mov
in
sbb
mov
aad
repnz
and
and
push
sbb
ret
jno
insl
outsl
xchg
inc
push
sbbl
push
jle
cmp
sbb
repnz
mov
inc
cmp
push
push
push
or
sar
out
pop
orb
out
sbb
testl
push
or
ss
stos
test
loop
jmp
js
andb
or
lea
fdivr
add
xor
jecxz
mov
push
jmp
js
mov
push
push
sub
das
mov
fprem1
mov
adc
mov
sbb
and
cmp
add
mov
imul
cmp
neg
clc
pop
imul
cmp
push
ds
cli
pop
push
cwtl
dec
outsb
out
cmpsl
xor
jmp
scas
mov
ljmp
lods
pop
jge
fxam
jbe
fiaddl
push
inc
xor
jns
push
or
push
ret
sub
sbb
inc
je
insl
pop
cmp
adc
rcrb
addr16
mov
ja
mov
cltd
push
out
push
cmp
out
mov
inc
xchg
xor
xchg
cld
clc
mov
sub
arpl
idivl
xor
cwtl
mov
jae
out
aas
rcrl
sub
repz
outsl
xor
pusha
call
sbbl
push
cwtl
into
je
aam
push
xchg
add
adc
inc
shl
adc
popa
pushf
lret
inc
iret
outsl
ljmp
xlat
jge
dec
fildll
in
pmulhw
imul
sub
mov
jl
sub
jge
mov
leave
lea
subl
inc
fisubrl
mov
mov
sub
inc
testb
fistps
inc
addr16
xchg
sbb
sti
xor
test
pop
inc
frstor
je
lock
sbb
test
jb
jl
mov
divb
pop
scas
clc
leave
mov
shll
ret
dec
into
imul
pop
test
movsl
and
in
xor
jl
pop
adc
cmp
jmp
sbb
xor
aam
pop
movsl
fldl
mov
fidivs
dec
add
or
imull
pop
cltd
in
adc
shlb
ja
and
lods
repnz
add
mov
cld
imul
adc
rorb
ret
stc
lods
out
ret
int
mov
repnz
push
add
add
lods
mov
cmp
pop
in
dec
mov
push
jbe
jns
dec
popf
add
cmp
jmp
test
mov
jno
int
sbb
mov
test
push
jg
mov
insl
or
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
orl
inc
ret
push
mov
sub
sbb
mov
mov
add
mov
dec
movl
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
xor
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
andl
mov
movl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
dec
mov
xorl
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
adcl
push
orl
push
sbbl
push
push
andl
lea
push
notl
push
xorl
jmp
movsb
xchg
sub
out
arpl
sub
push
sbb
cmp
bound
fmulp
shr
in
add
imul
mov
es
jmp
sbb
and
int3
cmp
push
clc
stos
jge
divb
aaa
sbb
imull
stos
dec
ficomps
mov
cmp
rcll
pop
jo
pop
outsb
nop
call
jnp
loope
rdmsr
push
mov
aam
fdivp
adc
push
pusha
xor
dec
bound
sub
adc
pop
pop
xchg
insl
sub
out
cli
push
cli
jae
cmpsb
or
fsubl
sbb
arpl
lret
push
mov
pop
xor
mov
mov
popf
test
mov
leave
dec
fstpt
add
add
es
mov
inc
and
push
xor
mov
mov
jbe
std
je
into
test
xor
mov
or
lea
pop
mov
inc
or
mov
xchg
mov
xchg
imul
pop
inc
loope
mov
pop
mov
test
lret
das
repnz
xchg
rcrl
enter
rcrb
mov
stc
sbb
inc
jne
mov
dec
add
lea
bnd
inc
or
dec
ljmp
pop
add
out
andb
adc
lret
jns
stos
fs
std
sbb
inc
push
mov
inc
aam
push
jne
xchg
xchg
movsl
or
xchg
pop
dec
loope
mov
fsub
testw
mov
jo
lahf
jg
xchg
push
movsl
jns
sbb
inc
push
or
jno
mov
mov
push
sbb
adc
inc
ljmp
mov
sub
xor
xchg
jno
push
mov
xchg
fnsave
js
out
lea
or
frstor
xor
ljmp
pusha
testl
and
sub
push
stos
dec
in
sbb
sbb
push
bsr
hlt
in
call
and
inc
mov
adc
arpl
xchg
sbb
loopne
test
mov
dec
dec
icebp
adc
inc
neg
mov
mov
mov
push
pop
and
inc
cwtl
jae
nop
cltd
or
and
push
jb
jecxz
jg
mov
lods
aaa
mov
inc
xor
addl
mov
stos
rorb
popf
fisttpl
cmp
arpl
inc
std
adc
adc
aam
ret
dec
jb
mov
pop
pushf
add
push
push
push
mov
outsl
fildll
andl
call
ficoms
xorl
pop
jb
jae
mov
push
iret
sbb
arpl
cmp
jge
aas
xchg
mov
int
cmp
fsubrs
xchg
imul
aad
stc
sub
test
test
movsb
dec
cmp
dec
pop
jns
jl
shrb
jp
sub
jne
fmuls
mov
cmp
scas
stos
and
mov
xlat
insl
pop
dec
dec
pop
insb
movsl
mov
sub
dec
adc
xchg
jae
loopne
mov
inc
inc
xor
mov
aaa
mov
push
mov
in
sti
repz
or
jl
rclb
loopne
mov
pop
scas
mov
add
mov
fstl
inc
and
lods
mov
movsl
pop
aad
xchg
push
lock
les
mov
dec
je
or
sbb
nop
loop
les
outsl
and
pop
outsl
push
mov
stos
lret
or
insb
call
icebp
xchg
sub
pop
into
sbb
jg
popf
out
fsubrl
enter
nop
mov
inc
imul
mov
lock
dec
adc
clc
or
push
mov
popa
xchg
push
add
cmp
pop
cmp
sbb
pop
test
in
sbb
fisubrl
or
lds
cmp
add
mov
push
rcl
aas
xchg
mov
aaa
jp
out
sbb
pop
stos
dec
imul
xor
pminub
mov
jmp
arpl
into
push
aad
pop
jbe
data16
mov
in
or
stos
inc
push
mov
hlt
dec
insb
dec
xchg
adc
ret
movsb
ljmp
insb
fcomi
dec
mov
mov
out
pop
adc
add
fs
fwait
lret
ror
lret
dec
cld
dec
jno
cli
mov
fimuls
addr16
lods
xor
std
mov
lret
push
inc
je
pop
inc
inc
fwait
or
fidivs
adc
fstpt
mov
fs
dec
lahf
nop
mov
popf
jl
icebp
jno
xor
fcomip
in
adcl
mov
mov
pop
mov
adc
adc
pop
adc
pop
sub
and
popa
mov
xlat
mov
lret
dec
mov
pop
mov
les
in
cmpsl
pop
fiaddl
test
fdivrl
jno
js
in
imul
clc
adc
push
jmp
js
in
out
arpl
sub
mov
mov
push
or
mov
sbb
push
fidivrs
into
dec
lahf
int3
popl
lods
mov
cld
aaa
idivb
add
cmp
xor
jbe
mov
fwait
lods
movsl
mov
and
mov
psllw
mov
mov
imul
insb
or
lods
outsb
addl
jmp
sbb
into
daa
inc
xor
mov
add
mov
clc
adc
pop
ss
push
or
mov
imul
test
dec
popa
in
ret
leave
out
lds
andb
mov
jp
dec
clc
mov
jnp
ret
shlb
push
in
jecxz
inc
mov
fmuls
inc
xchg
fcompl
mov
lods
dec
lods
mov
das
outsl
mov
incb
fldl2t
out
and
add
inc
dec
push
test
ds
lods
push
adc
mov
les
lds
cmp
jg
sti
push
xchg
in
cmp
lahf
ds
cmp
dec
cmp
in
stos
mov
test
movsl
fs
aad
insl
test
cltd
sbb
jmp
pop
xchg
lcall
inc
cli
push
scas
or
push
rolb
pop
dec
repz
jge
add
adc
cmpl
cli
pop
lods
adc
dec
xchg
mov
mov
xchg
xchg
add
jb
sub
int3
cmp
xchg
out
test
xchg
and
lcall
mov
in
popf
sbbl
jbe
mov
jecxz
pop
mov
xchg
push
sbb
sbb
lods
mov
mov
add
ficompl
push
mov
out
push
cmpsb
mov
adc
add
jle
mov
jb
aam
mov
pop
pop
inc
ljmp
mov
mov
scas
adc
jne
insb
mov
stc
shlb
jg
adc
rorb
cmpsl
pushf
out
testl
cmpb
loope
add
cs
pop
popf
xor
leave
arpl
mov
repz
dec
xchg
sub
sbb
cmp
mov
fdivr
pusha
fsub
cwtl
in
fwait
sub
xor
mov
shll
jge
je
repnz
pop
std
bound
push
sub
sti
mov
test
adc
xorl
ss
mov
inc
pop
subl
inc
mov
scas
pop
xchg
jbe
cmp
loop
mov
jmp
into
lods
es
pusha
sbb
cmc
imul
dec
xor
shrl
subb
repz
imul
cmp
rcl
xorb
add
and
cmp
jle
fs
fldt
js
pop
ret
or
fadd
insl
inc
leave
mov
jae
push
mov
and
xor
adc
cs
ljmp
sbb
add
aaa
push
jno
xchg
loope
dec
popf
fisubl
inc
ret
ret
rorl
cs
in
in
jg
xchg
xchg
negl
jp
jmp
sti
sahf
jecxz
out
xor
mov
es
push
xor
pop
jns
outsl
cmc
xor
ret
mov
aam
sub
leave
mov
mov
cmp
out
out
and
push
pusha
sub
inc
jmp
inc
repz
pop
adc
mov
scas
das
jns
inc
test
movsb
in
or
scas
push
sbb
jnp
stos
sub
mov
stc
cld
adc
aaa
icebp
xor
xor
mov
stos
insl
outsb
outsb
cmp
adc
jns
fimull
nop
mov
jb
das
loopne
fwait
jnp
loopne
mov
dec
mul
fs
mov
icebp
jmp
sahf
xor
xlat
and
out
iret
outsb
rol
push
jmp
xchg
xor
sahf
imulb
add
jmp
inc
out
lahf
jecxz
insl
mov
jo
xor
loop
cmp
mov
out
xor
jnp
or
bound
add
xor
cli
rclb
lea
sbb
xchg
ds
jl
and
and
xor
jo
jae
mov
pusha
pop
or
push
xchg
adcb
test
mov
pop
lods
mov
pop
out
out
lods
cltd
stc
push
add
into
stos
pop
fsubrs
inc
jnp
sbb
push
mov
mov
icebp
jp
cmp
mov
sar
xor
imul
stos
xor
clc
jbe
jo
test
jecxz
pop
in
mov
cltd
testb
sbb
cmpsb
or
xchg
leave
aad
push
out
xor
movb
js
mov
loope
paddsb
and
xor
dec
pop
pop
sbb
stos
adc
sahf
loopne
and
mov
ret
repnz
and
jp
or
cli
loope
push
aaa
and
push
into
cs
lods
dec
fnsave
sbb
pop
adc
insl
fbld
mov
mov
pop
adc
std
add
push
mov
mov
xchg
imul
int
test
cs
enter
pop
cltd
ret
lret
mov
into
xor
mov
push
mov
pop
movsl
shrb
fimull
cmc
into
mov
pop
mov
mov
add
adc
sub
mov
adc
mov
xchg
loop
popf
clc
daa
mov
test
jl
popa
out
xchg
mov
fbld
sti
sarb
push
icebp
sub
rorb
test
xor
rcrl
fcom
pop
and
xor
and
out
sbb
cli
les
mov
ret
and
mov
xchg
jnp
clc
lods
loop
jmp
xor
add
mov
mov
xchg
icebp
sub
js
test
in
push
ret
push
add
je
fidivrl
in
je
inc
sbb
in
shlb
iret
jl
add
sub
pop
out
jae
lahf
xor
lahf
and
cmp
shl
cs
mov
pop
add
mov
add
test
nop
sub
sub
lahf
dec
adc
cmp
mov
loope
push
push
jge
dec
test
mov
insb
movsl
std
push
pop
sti
mov
mov
lods
inc
test
aam
pop
insb
xor
out
shl
add
call
jb
scas
cmp
and
sbbl
or
mov
js
jae
std
ss
or
push
pop
sti
gs
in
add
and
test
adc
mov
pop
jo
sbb
xchg
cmp
dec
push
jne
cmp
out
xor
aaa
outsb
mov
ds
xor
or
fdivrl
pop
leave
sbb
das
jp
push
xchg
stc
lds
and
pop
inc
and
cmp
dec
rolb
leave
mov
lcall
mov
shrb
mov
xchg
test
aaa
shl
jp
inc
xor
scas
cmp
xor
push
icebp
add
fdivrl
cmp
imul
sub
inc
xor
daa
pop
cmp
mov
or
subl
push
push
jno
stos
data16
mov
push
pop
add
dec
fildl
push
fldenv
pop
xchg
xchg
mov
push
xchg
mov
lret
shr
das
sub
gs
xchg
les
add
scas
adc
scas
mov
cli
cmp
push
mov
mov
aaa
sbb
jns
jae
mov
sti
xchg
jno
dec
divb
repnz
mov
sahf
insl
sahf
insl
inc
and
in
pop
sub
repnz
xchg
or
pop
lcall
inc
sti
mov
call
repz
or
into
das
cmp
mov
jg
movsb
xchg
ljmp
cltd
insb
and
mov
mov
mov
rclb
int
out
pop
iret
pop
sub
insb
mov
mov
sub
popa
sbb
push
lcall
push
add
xor
mov
sbb
jb
daa
fidivl
outsl
lcall
push
jae
repnz
mov
mov
xor
mov
cmp
adcl
inc
movsl
jmp
mov
addr16
mov
in
pushf
sbb
xchg
div
aaa
shl
dec
cmpsl
or
ret
add
or
mov
pop
xor
and
sub
xlat
xor
add
or
adc
inc
scas
mov
repz
mov
add
or
cwtl
sub
xchg
cmpb
js
fbstp
sbb
sti
loope
repnz
and
shll
add
gs
fldcw
and
dec
sbb
out
in
xor
mov
pop
sub
repz
inc
cwtl
cmp
adc
xor
in
adc
cltd
repnz
xchg
adc
inc
inc
push
mov
mov
movsb
and
pop
es
movsb
mov
lcall
inc
popf
push
push
scas
mull
testb
cmp
aaa
movsl
jecxz
les
add
cld
fwait
ljmp
popa
adc
mov
jl
adc
and
adc
inc
sar
ret
sub
mov
adc
lods
ljmp
or
sub
mov
dec
int
iret
fdivr
jge
push
cmp
fsubl
loope
cld
jecxz
popa
sbb
push
in
push
fstl
aas
or
sub
mov
xor
test
test
insl
ds
xor
cmpb
inc
mov
movsb
sub
jmp
push
neg
jle
mov
cmp
push
ds
dec
mov
insb
cmpb
mov
icebp
jmp
pop
out
xorb
xchg
cltd
test
lcall
add
fwait
gs
push
andb
enter
outsb
sbb
jae
cmp
int3
xor
mov
and
call
cmp
mov
add
sahf
aad
lret
stc
fstl
and
or
data16
lcall
cmp
ret
inc
cmp
clc
sub
fisubrl
notb
pop
mov
leave
fadd
and
lahf
aas
cltd
fldenv
mov
mov
dec
cmp
pop
inc
ja
dec
mov
insl
and
arpl
push
pop
mov
fcmove
neg
out
or
insl
xor
out
xchg
into
mov
or
arpl
fidivrl
pop
xchg
cld
ja
gs
iret
mov
xlat
xchg
inc
add
inc
push
das
das
lahf
add
adc
in
stos
jns
inc
mov
iret
xor
or
in
cmp
fldt
scas
in
jb
test
push
jecxz
push
cmpsl
icebp
push
sub
inc
jmp
push
aad
lods
in
dec
aas
jb
and
out
mov
jl
pop
fsubs
mov
pop
cltd
inc
add
ret
cmpb
invd
adc
push
aaa
addr16
out
inc
sbb
pop
mov
lods
dec
shrl
pop
int3
xchg
sub
cmp
pop
aaa
loop
jb
out
loope
pop
mov
sbb
and
sub
shl
in
ja
in
cmp
gs
jmp
outsl
mov
or
push
inc
rcrb
mov
push
mov
push
push
pop
fbstp
adcb
hlt
add
jg
mov
scas
or
repz
cmp
shlb
mov
out
mov
mov
and
mov
push
arpl
or
insl
scas
mov
outsb
jne
cmp
cmc
jb
ljmp
test
rorb
adc
dec
add
into
insl
aas
inc
and
mov
dec
xchg
inc
inc
insl
mov
loopne
add
mov
scas
xchg
push
out
test
and
mov
repz
negb
xchg
push
pop
sbb
movsl
adc
pushf
fnstcw
xor
es
mov
cmp
mov
push
loopne
pop
dec
or
inc
rcll
outsl
sub
insb
das
jmp
jns
push
mov
inc
sub
pop
or
sbb
shll
loopne
aam
and
shll
ljmp
mov
bound
shrb
pop
popf
test
shl
repz
pop
insl
out
cld
ret
jmp
aam
mov
scas
or
mov
cmpsl
push
shlb
mov
sarb
push
sbb
pop
xor
jno
sarb
mov
je
dec
ljmp
imul
jb
pop
add
add
sbb
sbb
test
ja
push
out
cmp
ret
ss
fs
add
clc
inc
insl
mov
repnz
jne
mov
fsubl
inc
add
gs
sbb
pop
mov
add
xchg
fimull
jno
mov
lods
adc
sbb
sbb
aas
out
aad
or
xchg
pop
mov
cmovne
bswap
js
sbb
out
and
inc
fisttpl
insl
sub
adc
ss
insb
repnz
pop
mov
dec
inc
pop
ja
push
test
or
mov
push
push
adcb
fsubs
loope
inc
add
insl
jns
jg
mov
push
jbe
sbb
mov
pop
mov
adc
and
cmc
and
pop
mov
jae
jl
cltd
cmc
inc
nop
push
lea
das
pop
lods
mov
pop
push
sbbl
outsb
adc
sbb
inc
push
cmp
int3
mov
push
sbb
cmp
mov
psubq
lret
push
imul
xor
mov
add
sahf
filds
xor
or
lret
jo
fcom
push
subb
pop
jg
push
mov
cmp
jp
sub
jle
or
fists
or
mov
insb
mov
mulb
xor
sbb
lods
xchg
or
iret
push
mov
stos
adc
aam
sub
jb
sbb
xchg
imulb
sub
xlat
cmp
mov
popa
lret
testl
mov
ja
sub
imul
add
loope
outsl
out
dec
movsl
fidivrs
addr16
andl
adc
por
popa
jge
repnz
push
sbb
mov
inc
jb
in
outsl
aaa
rcl
lods
jns
jmp
push
jno
dec
lret
jne
dec
dec
jo
cmp
push
loopne
xchg
icebp
xor
mov
enter
add
inc
cmp
shl
xchg
test
jo
sbb
mov
fs
out
shrb
cmp
gs
sub
mov
lret
jecxz
std
xor
outsl
jecxz
mov
les
xor
data16
mov
sbb
xchg
jecxz
in
out
mov
xor
stos
push
or
pop
mov
sub
fidivl
pop
iret
mov
add
test
js
xchg
ss
pop
adc
jae
pusha
dec
or
cwtl
sbb
daa
dec
loope
xor
fsubrs
icebp
pop
or
lahf
pop
mov
inc
push
push
adc
cmc
faddl
pop
insl
insl
inc
lock
daa
push
jecxz
pop
pop
xor
lods
sbb
jns
sbb
jmp
and
leave
mov
pop
push
sbb
pop
sbb
sub
nop
mov
shll
data16
adc
xchg
jo
in
sbb
xchg
xor
mov
nop
and
xchg
aas
mov
dec
xor
sbb
fadd
insb
ret
adc
mov
xchg
cmp
dec
xchg
icebp
sti
pop
in
xchg
divb
sbb
sub
pusha
adc
dec
stos
xchg
and
stc
push
and
pop
shll
scas
xchg
and
loopne
popf
fsubrs
hlt
notb
pop
ds
add
les
fs
pop
add
frstor
xchg
stc
call
pop
aad
push
and
push
pop
data16
imul
sbb
mov
inc
int3
dec
int
and
imul
out
lds
push
jno
insb
cmp
cld
fs
adc
repz
jne
cmp
jb
out
sbb
add
enter
push
iret
cmpb
out
xlat
adc
pop
aam
jae
in
mov
sub
fidivl
inc
ss
adc
mov
cmp
aam
ud2
cmp
xchg
xchg
inc
fwait
xchg
jne
addr16
mov
push
or
pop
scas
into
adc
or
sti
fs
sub
adc
loopne
fwait
mov
arpl
cmpb
lock
in
out
stc
ret
jecxz
xchg
push
andb
or
cmp
fcomip
fisubs
rol
mov
pop
vmread
lcall
xor
clc
fiaddl
ss
push
add
mov
loopne
lahf
push
add
test
mov
add
xchg
je
scas
lret
jne
mov
stos
dec
test
rorl
dec
dec
xchg
fsub
popa
mov
jb
sub
loopne
xchg
add
xchg
fs
mov
pusha
push
int
mov
pop
cwtl
or
imul
shll
mov
jns
dec
mov
out
mov
xchg
inc
push
popa
das
mov
push
pop
fs
imul
xlat
adc
in
rorb
jmp
jg
pop
push
data16
push
out
cmpsl
push
jae
popf
jge
cmp
mov
push
loopne
arpl
pop
push
xchg
jg
inc
cmpsl
xor
rorl
xor
not
inc
test
or
outsl
pop
xchg
pop
jo
xchg
xlat
xor
neg
xchg
or
stos
push
inc
pop
std
out
pushf
cs
into
mov
xor
inc
sbb
pop
mov
adc
rcr
cmpsl
pop
and
mov
mov
adc
inc
pop
cmpsb
mov
adcb
aas
cmp
prefetch
dec
sub
and
jbe
pop
aam
ds
dec
mov
sub
adc
ja
fwait
shlb
es
pop
scas
add
mov
cmp
daa
or
mov
pop
cmp
ds
or
cmpl
in
push
aas
mov
clc
aam
and
and
sbb
xchg
sbb
push
pop
cmc
cmpsl
lcall
scas
mov
xor
mov
jp
cmc
stos
fistps
scas
addr16
dec
xchg
test
cmp
mov
fcmovnbe
jge
push
jl
or
daa
mov
dec
lods
pop
lods
sub
dec
outsl
dec
and
test
shlb
cmc
fsubrs
pop
outsl
lods
ret
xchg
in
mov
and
in
out
ss
xchg
das
adc
pushf
jbe
ljmp
int
push
test
scas
aaa
pop
popf
sahf
ljmp
fdiv
popa
jg
and
sub
adc
push
and
fdivr
incl
mov
daa
push
fs
adc
std
je
pop
lret
lock
cltd
dec
sarb
sbb
xor
test
xchg
and
loop
cmc
icebp
mov
in
sub
lock
lods
pop
call
inc
in
inc
jecxz
mov
jmp
sub
dec
or
sbb
mov
or
test
inc
hlt
imul
fldcw
jno
gs
sbb
jl
pop
xchg
adc
pop
push
mov
mov
movl
fwait
inc
gs
pop
cli
movsl
popa
adc
test
leave
push
push
pop
jno
jb
loopne
sahf
sub
scas
cmp
and
push
lods
stos
popa
ret
jno
mov
dec
push
ret
and
jnp
mov
ss
loop
ret
push
and
popf
arpl
jmp
inc
inc
filds
mov
xor
adc
pop
pushf
lock
inc
icebp
and
outsb
addr16
sub
aam
push
mov
jl
cmc
jo
scas
mov
mov
test
cmp
jae
loope
icebp
adc
cmp
mov
cmp
stos
int
or
mov
pop
cli
mov
xchg
pop
jge
mov
call
fs
adc
loop
dec
mov
fadds
in
add
push
jbe
jnp
ds
jbe
mov
adc
in
and
mov
xchg
pop
in
les
sub
and
mov
xchg
popa
sbb
icebp
insl
push
les
loope
mov
divb
xchg
pushf
bound
notb
pop
and
mov
sti
icebp
xchg
inc
fistpll
cwtl
sbb
cli
sbb
push
xor
adc
fs
cmp
int3
mov
jns
and
jae
dec
ret
cmpsb
add
loop
jbe
cld
cld
mov
push
or
aad
sub
sub
sbb
clc
dec
jbe
aad
mov
lcall
mov
popf
dec
sub
outsb
and
pop
pop
jmp
sbb
push
push
ja
cwtl
xor
insl
jg
out
and
add
sbb
pop
loopne
xchg
cmp
divl
mulps
insb
dec
shll
iret
test
push
adc
sbb
xchg
or
ror
jbe
mov
std
add
pusha
pop
mov
int3
push
mov
loopne
aas
jnp
or
in
ret
add
ret
dec
out
das
mov
inc
dec
aaa
mov
and
and
xor
inc
mov
mov
bound
sub
xor
cmp
sub
sbb
repz
lods
and
dec
push
jle
dec
gs
add
fsubr
jge
idiv
mov
push
iret
mov
fdiv
fldt
push
mov
loopne
xor
dec
sub
rolb
lret
iret
xor
jecxz
jbe
shlb
sarb
ficoml
and
xchg
cmp
and
lcall
lods
icebp
mov
xchg
mov
aaa
xchg
and
cmpsl
mov
adc
inc
adc
enter
inc
xchg
hlt
in
jne
mov
dec
add
push
enter
lcall
dec
lcall
sub
leave
add
push
popf
jno
mov
shll
adcb
sub
cld
jno
mov
push
dec
rorb
mov
sub
arpl
xchg
pop
add
xchg
sub
movsb
sbb
jmp
push
add
stos
sahf
mov
adc
pop
addr16
mov
mov
push
aaa
jne
icebp
fwait
cli
in
movsl
fsubr
jecxz
pusha
sub
cmp
dec
movsb
xchg
add
pop
repnz
cmp
sbb
mov
std
lcall
pop
cs
and
imul
aam
jge
push
push
enter
mov
dec
and
or
aaa
jp
rorl
and
mov
and
in
jnp
cmpsl
jb,pt
dec
out
jbe
cmpsb
pop
inc
js
fstps
cmp
mov
inc
xchg
xchg
xchg
cmpsb
in
mov
pop
cli
jg
xchg
je
cmp
sub
in
pop
mov
xchg
mov
in
cmpl
dec
mov
jno
sbb
leave
cmpsb
jle
xor
fstpt
das
sbb
sub
lret
xchg
or
lahf
test
cwtl
inc
pop
rclb
cmc
pop
cmp
ficoml
iret
cwtl
lods
pop
movsb
mov
mov
movsb
mov
xor
pop
cmc
mov
jbe
mov
out
mov
incb
into
mov
jbe
push
fs
pop
outsb
xchg
sub
pop
xchg
je
add
pop
mov
pop
mov
jo
bnd
sub
insb
in
xor
cmp
cmpsl
cmp
movl
mov
or
rcr
mov
pop
je
xchg
mov
insb
push
je
in
mov
cmp
mov
pop
xor
scas
cmpl
pop
ds
in
or
divb
mov
aad
mov
fnstcw
in
mov
push
fmuls
rcll
xchg
xor
adc
push
cmp
mov
lock
into
jns
lcall
frstor
jb
mov
xor
xor
push
sbb
mov
loope
inc
orb
jnp
mov
pop
mov
aas
push
jge
lret
inc
dec
ficomps
adc
int3
mov
lock
outsb
push
shrl
xor
stos
pop
cmc
mov
ds
cltd
lds
aas
mov
bnd
mov
xchg
xor
xor
fiadds
call
push
jecxz
cld
movsl
and
lret
jns
gs
or
mov
mov
inc
mov
stos
loope
pop
insl
addl
call
xor
movsb
xchg
pop
cmp
push
jl
sub
bound
stc
fwait
test
mov
push
pop
sub
sub
and
ss
sbb
cmp
pop
movsb
mov
fstl
and
inc
add
mov
pop
cmc
and
loop
sbb
popf
test
mov
add
int3
cs
jmp
mov
ja
sti
pop
jmp
mov
rolb
xchg
iret
mov
inc
pop
nop
xchg
lahf
cmp
adc
pop
idivl
dec
in
out
mov
xchg
add
lret
xlat
push
out
fisttpl
sub
sbb
or
mov
jl
xor
jmp
lods
fstps
push
sti
stos
and
or
aad
jns
out
outsb
jg
out
fiaddl
push
insl
and
jge
mov
cli
jge
iret
adc
lret
int
divl
in
hlt
repz
mov
fisttps
cmpsl
cmp
les
hlt
fimull
dec
fisubl
or
pop
call
push
orl
call
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
xor
xor
movl
or
movl
mov
or
mov
xor
or
mov
or
xor
not
mov
orl
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
xor
xor
mov
sbb
mov
test
je
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
adc
mov
imul
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
add
xchg
or
mov
movzbl
sbb
sub
mov
sbbl
xor
and
add
mov
movl
mov
add
xor
addl
add
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
movzwl
adc
mov
xor
add
add
mov
or
mov
inc
xor
mov
mov
adc
add
mov
subl
sub
lea
xorl
xor
xor
movl
cmp
movl
je
sub
mov
andl
xor
addl
add
movl
cmp
movl
jne
pushl
call
mov
mov
xor
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
pushl
push
call
jmp
or
mov
add
movl
cmp
movl
je
subl
pushl
andl
pushl
decl
call
orl
mov
mov
sbbl
mov
xor
addl
add
movl
cmp
je
mov
mov
mov
xor
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
sub
mov
mov
inc
mov
add
mov
xor
mov
or
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
fidivl
jb
xor
ss
add
fs
pop
bound
mov
add
and
clc
ret
lds
jecxz
vpsrad
push
push
mov
add
inc
xor
sarb
and
or
push
cmp
push
push
add
pop
jb
cmp
iret
sbb
imul
or
pop
shlw
mov
mov
jbe
mov
mov
cli
dec
in
aaa
loop
adc
add
shll
or
es
test
rclb
add
adc
cmp
icebp
jg
dec
aad
add
sub
imul
fdivrs
add
cmp
imul
movb
pop
jnp
aad
sub
nop
xchg
sub
push
push
xchg
and
out
xchg
mov
jns
repnz
iret
rcrb
and
insl
xor
adc
aas
push
imul
jmp
ja
sub
jnp
xchg
out
lahf
inc
insb
push
stc
sub
lock
cmp
js
mov
sbb
jns
out
jno
insb
dec
cmpsb
test
xchg
add
in
sbb
addr16
dec
adc
pop
pop
stos
sub
pop
and
adc
xor
mov
jecxz
lahf
inc
aas
jae
movsl
lea
push
pop
lret
cmp
fdiv
jbe
xor
stc
push
stos
pop
ret
imul
ljmp
pop
into
and
jp
jb
push
test
mov
jne
pusha
jb
lea
dec
xor
fdivl
adcb
das
push
mov
xchg
es
into
push
push
sub
or
cltd
insl
fmulp
aad
aam
ficoml
jo
push
mov
je
cmpsl
jl
imul
mov
dec
adc
outsb
dec
imul
outsb
push
aaa
lahf
fsubrl
or
xchg
int
sbb
adc
aas
or
in
sbb
pop
imul
mov
add
jecxz
cmp
jp
fistps
out
sbb
fidivrs
add
pusha
insb
popf
enter
ret
outsl
mov
lahf
mov
addr16
dec
pop
jns
mov
sbb
shrl
xchg
popf
outsl
into
rcll
test
jnp
or
and
stc
andb
pop
inc
mov
dec
std
test
mov
int
ss
gs
add
lods
inc
inc
fdivrl
inc
and
jle
adc
and
dec
andb
cltd
pop
inc
notl
test
inc
inc
imul
ja
arpl
adc
fcmovnb
popf
cmp
sub
outsb
cltd
mov
mov
or
subb
sbb
inc
lahf
sbb
ljmp
test
fimull
cmp
cmp
sub
mov
mov
shl
aam
sbb
add
lcall
cmp
jp
mov
int
push
fmuls
xchg
jle
mov
into
mov
nop
into
and
xor
or
lods
test
pusha
pop
stc
sub
push
aaa
cmpl
lods
jno
leave
loope
and
out
push
and
mov
cs
cmp
dec
mov
es
bound
mov
add
sbb
lea
fcompl
mov
pop
xchg
ret
adc
mov
cs
push
sub
xor
xorb
cs
xor
fwait
sahf
scas
inc
jae
iret
fisttpll
in
dec
sub
jl
xor
aaa
out
scas
insb
lods
pop
sbb
xchg
pushf
test
xlat
fsubrs
sbb
repnz
in
adc
jmp
nop
push
loope
push
ljmp
lcall
xor
and
push
xor
dec
fildll
ljmp
lods
test
testb
mov
imul
test
dec
jecxz
jno
and
lcall
xor
test
cmc
fsubrl
fnsave
in
xor
push
sbb
jecxz
adc
xor
outsl
xchg
sbb
cmp
leave
xor
bound
pop
adc
xchg
sbb
mov
xchg
fidivrs
movl
mov
mov
cli
jnp
fidivl
jno
xor
dec
pusha
jnp
cmp
orb
movsl
sbb
imul
xor
aas
int3
enter
lret
pop
imul
push
inc
lcall
icebp
jno
jbe
mov
lcall
jbe
and
or
scas
or
jmp
cmc
cmp
das
add
mov
dec
insb
mov
fcom
pop
pop
or
in
mov
sub
push
mov
insl
xor
mov
mov
insb
xchg
arpl
pop
cwtl
fcomps
jnp
test
jp
mov
cmp
jae
jo
cmpsl
pushf
and
mov
cmp
jns
cld
lret
cmpsl
cmp
bound
push
or
adc
cli
cmc
aaa
popa
and
mov
and
jnp
adc
rorl
movsb
and
push
lock
adc
fstp
mov
mov
cld
mov
enter
pop
add
aaa
mov
push
or
pop
cltd
jns
adc
jo
mov
sbb
fs
inc
pop
icebp
jo
ljmp
sub
pop
nop
stc
or
pop
push
aam
notb
fidivs
jns
ds
push
je
sbb
jbe
fists
aas
insl
lcall
inc
mov
jbe
xchg
inc
push
out
sub
cmpsb
pop
aas
mov
inc
outsb
push
adc
lahf
xchg
cmp
push
out
jp
sbb
lret
push
inc
je
stc
je
jno
out
movsb
in
sub
or
sarl
mov
and
cld
jnp
pushf
xchg
mov
icebp
adc
sbb
cmp
or
repnz
mov
lds
int3
pop
jae
cmpsb
hlt
subb
aas
or
sbb
aam
inc
xchg
sub
dec
imul
rolb
jmp
aaa
xchg
mov
movsl
movsb
cmp
lahf
aas
cli
loop
stos
loopne
mov
bnd
rorb
ss
lds
aad
idivl
test
std
mov
jnp
mov
aad
arpl
jge
adc
jmp
jmp
test
jl
mov
pop
aad
inc
std
jbe
push
aad
cs
pop
popf
push
int
fcoms
dec
adcb
lods
rolb
scas
dec
cmpsb
gs
out
mov
push
arpl
xor
mov
mov
push
jbe
aad
insl
push
seta
inc
fwait
lock
cwtl
or
push
fbstp
std
adc
push
ret
xchg
push
das
add
loop
sub
stos
shl
adc
into
test
sbb
sti
stc
xor
cltd
xchg
icebp
mov
mov
sbb
xor
js
adc
pop
and
push
fs
popa
leave
mulb
or
mov
xor
stos
into
mov
sub
xchg
pusha
cltd
xor
and
inc
jge
xlat
mov
clc
mov
test
pshufw
outsl
mov
push
aas
stos
sub
scas
inc
fs
addr16
popf
loop
out
jne
aad
xor
mov
mov
cmp
fistl
dec
mov
or
in
push
pop
sbb
pop
push
outsl
cmp
jns
xchg
push
mov
cmp
dec
cmp
cli
out
xchg
rol
sbb
xchg
xor
sbb
dec
pop
popa
xor
push
jne
mov
mov
adc
push
sub
lahf
idiv
adc
inc
dec
pop
push
je
movb
cwtl
mov
add
push
inc
push
and
or
mov
addr16
push
scas
mov
jo
aad
sbb
lret
and
mov
and
xorb
shr
add
outsl
shrl
leave
xchg
inc
xchg
pop
lods
inc
or
inc
sub
and
mov
mov
xlat
xor
test
pop
jb
mov
push
xchg
inc
or
mov
aad
ret
clc
and
loopne
hlt
ret
mov
adc
dec
fcos
daa
and
jge
imul
lret
insb
adc
cld
jae
inc
data16
insl
xchg
es
jg
push
das
mov
pushf
add
fdivrs
xor
aad
lret
dec
in
inc
adc
rclb
je
sbb
mov
enter
add
mov
loop
push
xchg
cmp
cmpsl
aaa
daa
cmp
es
pop
xor
cli
push
mov
xchg
mov
cmp
cmpsl
xchg
shlb
fcoms
push
jo
jmp
mov
out
jo
add
mov
scas
test
repz
stc
dec
out
xchg
imull
cmp
xchg
movl
mov
mov
sarl
out
clc
cli
sub
test
and
mov
adc
divb
out
mov
mov
dec
sbb
popa
test
lods
mov
pop
rclb
test
cwtl
or
jmp
dec
push
mov
lods
sbb
shrb
or
sub
sub
cvttps2pi
das
dec
js
out
mov
lock
add
adc
imul
adc
mov
or
pusha
sub
lahf
ret
ficoml
fwait
std
mov
and
jne
mov
xor
xchg
cli
jo
pop
out
fdiv
ss
rorb
pop
push
xchg
lret
lcall
movsl
pop
insb
jnp
cmp
jg
incl
sub
les
pop
shrl
pop
or
or
mov
and
cmp
jb
sub
push
ret
lret
dec
mov
add
jno
and
push
inc
xchg
adc
inc
and
loop
je
and
sub
adc
fisubl
push
mov
popf
push
sub
sub
out
jp
push
mov
hlt
adc
jno
and
orl
icebp
mov
out
mov
jg
pop
pop
pop
pop
ds
dec
dec
xchg
push
push
cmp
xor
jecxz
jo
xor
adc
outsb
rcl
sub
xor
push
int
mov
dec
or
mov
push
mov
sub
test
cmp
stc
pop
inc
jge
and
cwtl
jne
pusha
mov
negl
nop
leave
test
jecxz
jns
fldcw
pop
shl
mov
push
push
inc
repnz
add
inc
jmp
jmp
xchg
mov
jl
test
xor
fstpl
or
sub
inc
or
jmp
in
shl
sub
movsb
pop
test
std
dec
push
mov
dec
sub
inc
aaa
ja
subl
les
inc
in
jmp
add
das
je
ret
pop
jle
inc
lods
loop
mov
std
nop
mov
cltd
pop
mov
lcall
clc
in
dec
sbb
lcall
rorl
pusha
fsubr
adc
xchg
xchg
pop
jmp
mov
inc
add
or
lret
lock
lods
dec
cmc
int3
add
mov
or
add
mov
test
mov
enter
daa
mov
push
push
iret
ljmp
test
inc
pop
xchg
xchg
lock
mov
pop
fs
mov
stos
pusha
xor
leave
frstor
jmp
sub
or
jl
iret
repnz
cmp
inc
popa
orps
fidivl
cmp
xchg
daa
popa
mov
cmp
push
push
enter
into
test
jp
dec
aas
dec
sub
adc
addl
adc
loop
push
push
jo
data16
cli
dec
add
negl
repnz
jo
jl
xor
jbe
loopne
jnp
sbb
mov
inc
pop
lock
inc
ret
das
cld
adc
or
cmp
inc
pusha
xor
pop
or
jmp
xchg
inc
push
arpl
ss
fs
adc
dec
adc
jo
inc
lds
sbb
fwait
inc
or
repnz
mov
xlat
daa
cmp
fsubrl
push
cltd
lock
pop
fdivrl
insl
jp
data16
lods
jnp
test
cmpsb
adc
dec
stc
hlt
movsb
cmp
xor
xor
xchg
mov
in
sub
push
jmp
sbbb
push
sub
roll
pop
clc
arpl
test
cltd
or
xor
cmp
sbbl
cmc
into
push
out
sub
movsb
pop
xchg
cmp
mov
dec
sub
xchg
mov
popa
aad
insb
jbe
or
aaa
in
loopne
out
push
test
mov
subl
insb
pushf
inc
or
mov
and
push
adc
mov
dec
into
mov
dec
mov
dec
mov
subb
ja
out
das
cmp
mov
ret
xor
push
mov
inc
lret
lods
and
mov
out
movsl
cmpsl
pop
push
jle
add
and
bound
sub
int
call
dec
sbb
daa
sarl
mov
jmp
fldcw
mov
sub
arpl
loope
mov
jmp
ds
outsb
andl
pop
in
mov
lahf
cmp
scas
out
xchg
test
mov
ficoms
jo
push
pop
push
cli
add
sub
movsb
stc
or
push
in
pop
mov
movsl
incb
aas
jg
adc
adc
into
or
inc
decl
insb
leave
into
aaa
mov
sbb
cmpsb
and
mov
mov
not
adc
adc
mov
mov
lds
xchg
fstl
pushf
mov
popf
rolb
mov
loopne
ss
or
scas
cli
into
std
arpl
mov
adcl
in
dec
imul
xor
jp
push
jg
xor
xchg
adc
add
adc
scas
adc
stc
add
insb
mov
jns
testb
loope
arpl
shlb
or
lods
and
fsubl
leave
jecxz
push
ss
jno
push
orl
push
cwtl
xor
lret
rol
xor
jp
xchg
in
sub
pushf
pop
lods
out
mov
xchg
leave
mov
sbb
popf
repz
or
sbb
rol
xchg
dec
iret
jns
pop
js
sar
or
lret
mov
jbe
jb
push
jle
mov
test
or
out
mov
mov
inc
push
cmp
push
inc
out
mov
aaa
inc
in
inc
pop
dec
gs
fldcw
test
add
sub
fdivrs
add
xorb
xor
sbb
fisubs
sub
xchg
outsl
jbe
pop
sti
pop
pop
andl
mov
mov
repnz
stos
stos
or
inc
scas
jle
sub
es
xlat
cwtl
xor
ret
adc
push
ljmp
lock
insb
push
lods
cs
movsb
pop
sahf
jne
or
jno
add
scas
jbe
lret
push
pop
pop
ljmp
xchg
push
add
fmulp
mov
add
xchg
jge
mov
std
push
push
mov
popa
movsl
sub
mov
scas
jg
int3
pop
addb
gs
sub
call
loop
or
mov
push
cmp
out
sub
or
pushf
out
mov
jl
scas
imul
push
int
inc
in
mov
je
sbb
fists
jecxz
adc
lahf
loopne
inc
xchg
loope
dec
pop
xlat
ficomps
mov
mulb
pop
push
hlt
pop
jecxz
sbb
pop
imul
jl
mov
das
jmp
or
jnp
push
or
jg
dec
out
mov
or
fisubrs
and
inc
adc
cmpb
mov
xor
pop
repnz
loope
out
popl
fwait
repz
stos
sub
out
incl
stos
loope
cmp
add
xor
adc
or
jns
cmpsl
jns
stos
sbb
repz
cmp
and
ja
sub
sub
jl
cmpsl
pop
push
ds
into
xor
push
mov
xchg
xor
and
sbb
and
repnz
and
ficomps
ja
test
sbb
lock
test
sub
mov
out
loope
nop
jnp
ljmp
push
out
aas
std
insb
push
popf
xchg
pop
push
mov
xor
mov
mov
stc
das
sbb
add
scas
push
idivl
jle
aaa
jmp
xchg
xor
movsb
stos
sbb
sub
add
and
lcall
sub
xchg
mov
outsb
dec
mov
dec
icebp
xchg
test
mov
nop
iret
cltd
not
or
mov
scas
sbb
and
cli
daa
sbb
xlat
pop
lcall
xchg
sti
shrb
into
push
ficomps
xor
xchg
mov
mov
inc
adc
movsb
push
push
mov
jmp
cmp
sbb
and
mov
sbb
pop
sbb
dec
and
xor
ret
hlt
cmpsb
decb
inc
loop
test
sbb
jb
and
aam
sub
cmp
jl
sbbb
jbe
jge
push
dec
jp
xchg
iret
fbstp
addr16
rolb
sub
ret
mov
push
shll
test
push
xlat
add
into
incl
cli
test
add
jns
cld
mov
popf
sbb
and
movsl
int
sbb
sarb
mov
adc
pop
xchg
rorb
jmp
dec
xchg
sbb
jecxz
mov
dec
lahf
in
out
idivl
push
insl
aaa
pushf
mov
and
loope
pop
mov
mov
add
outsl
push
dec
jnp
aam
cmpsb
inc
inc
cli
sub
jb
test
xchg
loop
push
xor
mov
mov
cld
sbb
pop
pop
int3
inc
test
and
fwait
out
shlb
mov
ja
mov
push
popa
inc
jg
sbb
pop
aad
pop
mov
into
fsubp
inc
xlat
xchg
shll
fdivrl
test
mov
cmp
xchg
adc
push
push
xchg
push
adc
bound
cwtl
rorb
fsubrs
insl
clc
pusha
pop
pushf
sbb
push
and
mov
aas
mov
mov
or
stc
nop
sub
dec
and
div
loope
mov
out
lea
aas
mov
push
cmpsb
test
jnp
mov
rclb
push
lock
std
or
fwait
dec
pop
fsub
and
dec
daa
xchg
bswap
push
or
and
cwtl
ret
or
icebp
pop
stos
incb
push
pop
cld
sbb
jbe
lea
out
mov
loop
outsb
rclb
scas
rol
or
dec
add
mov
movhps
lods
adc
aas
xor
inc
les
xor
mov
cmp
lock
cmp
dec
sar
mov
mov
cs
pop
bound
mov
and
push
xor
out
jge
and
fldl2e
enter
xor
add
lret
jge
and
pop
mov
ficomps
ljmp
lcall
mov
icebp
iret
cmp
pop
negb
addl
and
xchg
mov
mov
push
jae
sbb
cmpsl
jno
jp
in
sub
lret
clc
sbb
enter
add
add
fimull
loop
out
daa
pop
sub
popf
call
lock
add
xor
jle
add
sahf
pop
shll
mov
lcall
jo
push
jno
int
sbb
push
test
stos
xor
sbb
sub
insb
in
loopne
daa
dec
adc
push
mov
mov
xchg
mov
les
outsb
nop
aam
jge
xor
xor
cmp
inc
mov
add
cmpb
cltd
shrl
add
sahf
in
xor
daa
and
cmpb
shl
shll
xchg
fadd
stos
loope
adc
jmp
or
mov
test
sbb
inc
fwait
rcr
loopne
outsb
and
cmc
fbld
addb
lock
xchg
int3
scas
sbb
or
adc
mov
or
imul
rolb
xchg
bound
icebp
cli
xchg
mov
push
fidivrs
jl
addr16
and
int
out
jnp
cwtl
testb
xchg
push
lret
push
test
sti
sahf
ds
fnsave
popf
pop
insl
push
mov
sbb
mov
sub
sarl
scas
and
jl
pop
ljmp
call
orl
scas
jb
out
cwtl
popa
in
leave
popf
mov
adc
es
pop
sub
sbb
xchg
roll
je
jp
stos
fidivl
sahf
mov
sti
aas
push
lock
ds
jmp
fcmovnb
push
xchg
mov
enter
fwait
or
repz
xor
sub
adc
inc
mov
in
add
imul
dec
js
popa
xor
std
inc
mov
mov
sti
adc
jmp
mov
nop
lret
pushf
pop
sti
add
aaa
jecxz
mov
xchg
cmp
repnz
xchg
test
subl
ja
mov
mov
jecxz
xor
mov
cld
pop
mov
pop
xor
xor
sub
rcll
sub
sbb
xchg
cmp
repnz
cmp
and
inc
outsl
shlb
mov
stos
out
insl
out
push
xor
inc
fcompl
xchg
int3
lods
jp
or
xchg
scas
ljmp
pop
pop
push
jl
movsb
mov
mov
sbb
or
aas
fldenv
imul
les
fistps
xchg
push
outsb
call
sbb
int
nop
sbb
pop
pop
mov
mov
std
cmpsb
xor
mov
popa
inc
xbegin
cs
dec
mov
mov
test
inc
cmp
push
inc
lods
aad
pop
and
fimull
dec
jno
addr16
jmp
mov
inc
push
in
adc
outsb
pop
cwtl
lea
pop
sub
push
ret
sub
fsts
xor
xchg
repz
or
test
cmp
pushf
mov
gs
fcoms
sbb
jmp
gs
xchg
popf
xor
aas
dec
cmpsl
ds
inc
ss
ljmp
and
dec
sbb
sti
jno
lret
sub
sarl
inc
daa
xor
add
in
ljmp
add
jl
sahf
dec
adc
ds
mov
xor
jl
jae
repz
xor
and
dec
sub
aam
ja
outsb
stc
stos
cmpb
ret
ja
std
fwait
and
test
mov
and
cld
popf
ret
push
jb
and
pop
imul
pop
push
ret
or
jg
pop
mov
fldenv
or
mov
fdivrp
ss
pushf
test
mov
cmp
ret
or
shlb
in
std
push
sub
sti
sub
negl
leave
mov
shlb
loopne
in
inc
cmpsl
rep
js
and
hlt
mov
mov
sub
mov
push
sbbl
xor
outsb
flds
jg
add
push
out
and
sub
aas
xlat
insl
in
and
subl
xchg
mov
fwait
adc
sub
mov
jae
test
cli
fildl
ljmp
mov
jl
sbb
movsl
push
inc
sbb
sbb
inc
xor
mov
xchg
in
sbb
pop
xchg
mov
xor
sti
and
lret
out
daa
cwtl
add
mov
push
fdivrl
cmp
mov
clc
leave
sub
inc
cmpsb
call
sbb
pop
stos
jmp
inc
lock
pushf
das
scas
ljmp
jne
clc
dec
or
dec
sarl
xchg
push
das
rorb
sbb
sub
leave
mov
xchg
es
pop
in
cmp
inc
aam
imul
push
mov
sbb
mov
shlb
inc
cmp
cmp
popf
jne
test
push
push
mov
inc
xchg
aad
mov
xor
out
out
and
push
xorl
fs
mov
fwait
das
xchg
dec
in
jmp
sbb
insl
mov
xchg
out
imul
and
push
push
xchg
add
jg
jno
jmp
xor
sbb
in
sub
add
xor
pushw
in
xchg
sub
and
sub
add
mov
nop
and
fistl
fcomps
js
dec
jbe
mov
aas
xor
into
or
mov
pop
mov
pop
xor
dec
cwtl
sub
xchg
int
js
mov
or
std
mov
pop
or
adcl
jmp
hlt
dec
inc
les
add
sbb
adc
movsl
or
cwtl
pop
ljmp
adc
mov
xor
in
xor
push
cmp
or
hlt
sub
inc
dec
mov
mov
adc
ljmp
dec
push
lods
cltd
popa
aad
scas
sub
jae
cmp
jg
cmp
sub
js
add
and
and
mov
push
xor
in
fucomip
lret
lods
andl
add
out
xor
cmp
nop
inc
xchg
xchg
dec
lods
inc
mov
and
fnstenv
mov
jmp
data16
je
hlt
jg
xor
scas
addr16
pop
dec
loop
and
insb
ljmp
sbb
popa
cltd
pop
adcb
push
dec
in
data16
mov
jnp
mov
xor
mov
xchg
imul
ds
and
testl
jbe
push
shll
testl
push
or
clc
inc
mov
rolb
cmpsl
push
lret
daa
push
shlb
or
sbb
fnstsw
mov
pop
xchg
push
ss
mov
outsl
cltd
in
out
sbbl
cli
or
arpl
mov
loope
push
xor
fiaddl
shlb
xchg
ss
dec
add
neg
mov
mov
or
cmp
lret
icebp
fidivrs
xor
fwait
aas
repnz
repz
jle
and
lock
out
fs
loop
aas
pop
mov
aad
dec
jb
js
inc
int
cs
inc
sbb
and
pop
jmp
imul
mov
xchg
mov
loopne
and
fwait
mov
mov
inc
inc
je
bound
fistl
ljmp
jp
jg
scas
aad
fstps
dec
stos
sub
cmp
addb
sbb
adc
aaa
pop
rolb
or
test
sub
and
in
push
pop
add
and
sbb
es
into
xchg
and
loopne
cmp
sbb
push
sub
jl
mov
rolb
fsub
shll
mov
mov
push
push
fsubrl
push
cli
xor
or
jl
pop
jl
mov
adc
ss
pushf
outsb
out
aas
cmp
cmp
push
push
sbb
jg
sub
add
sbb
pop
push
add
icebp
imul
mov
je
sbb
gs
dec
int3
push
int
push
mov
rcrl
inc
push
jg
js
cwtl
lods
lock
aad
jo
rcr
shlb
lods
mov
mov
enter
fcompl
ss
push
cmc
xchg
aad
pop
xchg
mov
pop
cld
xor
push
je
stos
nop
xchg
sbb
in
add
inc
xchg
rcll
ja
inc
sbb
outsl
test
cmp
add
add
xchg
and
mov
mov
lret
sbb
push
lods
loope
cltd
into
xchg
adcl
sbb
popf
inc
xchg
jnp
add
ljmp
cmpsl
movsl
rolb
mov
loopne
and
sti
add
or
loope
sub
movsb
adc
xchg
jo
movsb
into
jae
stos
push
or
sub
mov
adc
loope
dec
hlt
lods
sub
inc
add
add
fxch
jne
push
xchg
cmp
lds
cld
jno
rcll
or
add
xchg
sbb
cmp
jg
nop
sub
mov
adc
out
mov
loop
push
shll
pop
fdivrs
jnp
or
mov
adc
in
cmp
and
push
inc
lret
jg
dec
sbb
add
dec
sub
aas
int
cmovo
jbe
xchg
lock
out
outsl
jmp
push
add
adc
mov
mov
cld
dec
mov
data16
lds
adc
sarb
dec
or
xor
les
fcompl
cmp
test
mov
ds
hlt
fidivl
sbb
cli
fs
cmp
and
js
push
mov
fsubs
pop
fcoms
xchg
mov
cmp
aaa
cmp
xor
or
xor
and
lea
mov
jns
cmp
dec
clc
jl
add
pop
sbb
div
negb
cli
dec
pushf
xor
xor
mov
sahf
fs
mov
mov
mov
fstpt
adc
cmp
in
dec
sub
pop
sub
movsb
xor
add
je
sub
rclb
jnp
push
jbe
xor
xchg
cmp
rcl
mov
inc
sub
sbbl
dec
aas
mov
test
pop
sub
mov
in
les
je,pn
mov
out
test
push
cld
mov
pop
jmp
xchg
or
mov
mov
rorl
aam
xor
mov
dec
xchg
push
push
fmull
scas
fs
mov
cld
int
fisttpll
mov
mov
xchg
push
in
push
in
into
add
dec
xchg
push
and
loope
pop
sub
dec
loop
xor
hlt
fsubrs
cmpsl
ljmp
sbb
mov
jecxz
subb
ret
fcomip
xchg
add
addl
out
cs
push
inc
sahf
es
popf
mov
mov
sub
xchg
pop
fbld
test
cmpsb
add
pop
sahf
jb
adcb
nop
jmp
add
push
adcl
out
adc
popa
jmp
mov
ljmp
jne
jle
sub
pop
cs
lret
out
ds
clc
and
pop
cmp
cmp
xor
sub
push
mov
inc
fistps
pushf
in
mov
popa
lcall
or
cmc
jle
rcrl
scas
sub
stos
mov
xor
aad
or
int
mov
bound
add
jo
in
aaa
out
mov
adcl
idivl
mov
push
inc
out
and
ds
test
ret
adc
cmp
push
jo
xchg
xchg
push
mov
enter
popa
cli
insb
popf
mov
fisubs
call
push
sub
test
imul
cmpsl
mov
mov
add
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
jmp
jl
pop
call
andb
dec
mov
pop
bound
xor
cmp
es
inc
or
sub
pushf
in
pop
das
or
ljmp
jae
mov
leavew
adc
inc
lods
mov
cmp
adc
dec
shll
fs
inc
mov
loop
push
mov
sahf
fnstenv
add
in
popl
sub
bound
bswap
lret
fbld
out
xchg
and
pop
ret
sbbl
test
and
adc
fistps
std
stc
fstps
mov
inc
add
lret
mov
in
xor
and
std
jg
adc
inc
inc
js
rorb
cwtl
jae
push
fidivs
nop
inc
mov
inc
lock
mov
daa
push
xor
movsb
sbb
pop
lcall
fstpl
rolb
je
clc
or
setb
idivl
in
sub
mov
gs
push
cmp
jae
jmp
orb
decl
pushf
mov
int3
push
adc
sub
inc
shll
outsl
and
jecxz
sub
movsl
sbb
sti
jns
call
mov
mov
xor
mov
xlat
dec
inc
popa
bound
lods
sbb
jae
mov
mov
jmp
fsubp
fisubs
jg
add
scas
mov
fisttpll
push
adc
insb
mov
sub
cmc
shlb
pusha
jge
cltd
outsl
clc
decl
add
addr16
rolb
jge
add
jnp
into
mov
push
mov
stc
xchg
ds
jne
jmp
push
stc
je
xor
cmp
push
add
push
aad
out
mov
mov
pcmpgtd
rolb
mov
push
fsubrs
mov
rcll
jae
xor
pop
inc
jnp
add
call
cmpb
and
mov
push
sub
fnstsw
and
jmp
lcall
inc
outsl
jnp
gs
cmp
push
jecxz
enter
and
ljmp
mov
mov
cmc
push
push
pop
pop
js
scas
or
jns
xchg
iret
push
mov
adc
loop
aam
mov
cmp
xor
cmp
jge
mov
je
leave
lret
adc
fwait
aam
mov
mov
das
orl
xor
dec
sub
and
push
push
test
std
xor
pop
fldl
mov
inc
xlat
adc
inc
mov
xlat
xor
insb
mov
sub
test
jo
lods
mov
enter
frstor
xchg
mov
pop
std
std
insb
mov
cmp
sbb
cli
ja
aad
mov
dec
popa
nop
mov
arpl
dec
dec
xchg
std
mov
movsl
jge
outsl
adc
je
lods
pop
adc
jmp
add
inc
rcl
movsl
ret
or
dec
lahf
sbb
inc
sub
xchg
xor
pop
bound
repnz
inc
std
mov
jge
mov
cmpsb
in
int3
push
xchg
ror
adc
shll
in
push
out
vmovaps
add
adc
mov
mov
add
dec
fisttpll
aaa
lods
mov
or
movsb
xchg
out
adc
das
push
in
mov
pop
sub
lea
dec
or
lcall
addb
mov
xlat
push
push
cmc
test
push
lahf
out
mov
sub
mov
mov
or
push
jns
push
inc
inc
xchg
loope
std
jl
aas
rcl
test
jne
and
rcrl
call
mov
cs
adc
fidivrs
andl
hlt
and
push
imul
subl
imul
pop
xchg
popf
sbb
std
xchg
lret
int
sti
sbb
fistpll
fs
ret
jns
mov
out
sub
cld
jg
add
adc
mov
jnp
aad
jne
jg
push
push
aas
clc
push
or
test
lcall
cmp
adc
scas
cld
cmp
mov
aaa
sbb
out
mov
jmp
mov
out
pop
xor
adc
sub
jle
push
sub
sahf
int
out
testl
or
bound
out
add
lcall
je
ja
rcrl
repz
fadd
rcrl
shlb
push
mov
jle
fidivs
shrl
imul
cwtl
cs
mov
mov
adc
jbe
xchg
mov
push
push
les
stc
adc
in
cmc
cmp
aad
mov
mov
pusha
fs
pop
dec
jl
mov
icebp
mov
adcl
add
mov
or
mov
pushf
jb
ret
cmp
addb
cld
hlt
sbb
and
inc
xor
cs
shrb
mov
movsb
cmp
fnstenv
outsl
push
pop
push
sahf
outsb
mov
add
shrl
int
xlat
stc
mov
ss
cmp
mov
in
ret
cli
int
xchg
dec
sahf
call
je
push
divl
mov
enter
push
ljmp
jecxz
cmp
and
adc
mov
cmp
stos
ss
sub
xor
lret
and
mov
lahf
mov
bound
cmpsl
inc
lock
inc
and
xchg
xorl
adc
test
leave
inc
popf
and
in
jo
loop
xor
push
cmpsl
fwait
lret
cmp
sbb
push
lahf
loope
enter
pop
shl
push
push
subb
xchg
cwtl
inc
rcl
adc
jae
or
pop
in
iret
push
xchg
xor
cmp
iret
out
mov
push
loope
mov
pushf
inc
std
cmpsb
cmp
xorl
adc
decb
ret
and
fcomip
ljmp
daa
jno
or
jae
lret
imul
int
lea
scas
lds
pop
mov
mov
lret
lods
leave
loop
pop
adc
movsl
mov
sub
adc
ljmp
xchg
xchg
ret
fwait
aad
push
add
enter
xor
jecxz
jge
cmpsb
adc
aas
mov
or
es
jge
push
mov
andb
fistpll
pop
xor
and
subl
cmpsb
mov
shll
int3
push
xchg
scas
or
sbb
mov
mulb
shll
aad
stos
stos
aam
ret
test
sti
xor
call
mov
test
das
repnz
xor
mov
jecxz
arpl
arpl
lods
push
aas
jns
pusha
outsl
es
push
lods
jbe
xchg
outsl
sbb
dec
cld
or
stos
sub
sub
adc
pop
sub
fbstp
push
and
subb
mov
sar
sbb
xor
iret
insb
add
inc
add
sti
add
xchg
xchg
cltd
outsl
movsl
notl
mov
pop
pop
push
push
scas
dec
mov
xorb
and
xchg
mov
dec
inc
out
es
movsb
mov
pop
stos
stos
mov
adcb
jo
dec
cmp
stc
jnp
roll
xchg
mov
cmpsb
lods
push
ljmp
adc
aad
inc
fldt
mov
insb
pop
into
scas
int3
fists
popf
mov
pop
jb
and
mov
push
popf
mov
sub
mov
fs
mov
mov
ja
stc
std
stc
sub
push
stos
sahf
sbb
pop
pop
mov
addr16
xchg
pop
lret
in
pop
inc
cmp
sub
inc
inc
pop
sbb
pop
push
imul
jns
mov
pop
jb
push
cld
shr
int
mov
jmp
cmpsb
add
pop
shlb
sub
in
scas
jmp
xchg
mov
sub
jecxz
sub
inc
pop
xor
jae
std
mov
cmp
rorb
xchg
push
and
and
insb
mov
dec
jl
sbb
jp
aas
inc
sub
and
hlt
sub
loop
add
repz
inc
sub
mov
mov
xor
mov
inc
mov
adc
sbb
or
test
ds
dec
mov
xor
sub
and
test
mov
mov
popf
sbb
xchg
sbb
adc
cmp
xor
lcall
sub
inc
das
adc
add
push
mov
iret
cmp
mov
jmp
popa
clc
sbb
sbb
in
shll
cli
inc
fmull
cmp
jo
push
xlat
pushf
mov
pushf
pop
dec
outsl
push
mov
lods
push
gs
mov
dec
and
jne
mov
or
xchg
dec
jns
repz
mov
fmuls
mov
push
jbe
lock
jecxz
call
jns
add
rorb
mov
out
xor
out
mov
sub
aam
xchg
and
jl
cmp
mov
cmp
mov
pop
outsl
stos
in
jmp
notl
mov
xchg
and
imulb
les
cmpsl
pop
in
and
adc
mov
or
test
scas
sbb
sbb
lcall
xor
inc
fadds
cltd
xor
mull
xchg
mov
push
cmp
xor
lret
or
jge
push
or
sahf
rcl
popf
xor
pop
rcrl
mov
xor
jecxz
in
and
iret
into
mov
out
jne
and
mov
adc
jne
sub
repnz
dec
mov
sbb
adc
push
ret
lahf
cmc
pop
cld
ja
or
and
pop
test
cmp
test
mov
or
pop
addr16
mov
mov
fsubr
inc
lret
pop
and
cmp
lea
movsb
push
cmc
jne
stos
hlt
push
cwtl
repnz
mov
shrb
xor
test
cmpsl
scas
add
jb
roll
add
add
xchg
inc
in
mov
dec
in
sbb
in
adc
arpl
test
dec
sub
stos
outsb
stos
lods
gs
adc
data16
imul
push
mov
cld
cs
pop
nop
ds
jecxz
and
jp
mov
sbb
hlt
lds
mov
outsl
push
loop
andl
ss
xor
jae
repz
cld
jle
sbb
push
and
push
jl
orl
and
mov
lahf
xchg
js
or
and
clc
bound
test
add
adc
mov
stos
inc
push
add
and
jnp
mov
mov
rcl
aam
ret
mov
dec
lcall
subb
mov
fs
lahf
out
cmp
popa
loop
mov
jmp
pop
in
add
imul
aam
loopne
rcrl
push
mov
cwtl
xlat
push
pop
or
out
scas
mov
sahf
addr16
pop
lods
fwait
loope
ret
jmp
out
out
shrb
cmpb
js
mov
xor
push
inc
aam
sub
test
nop
hlt
and
inc
dec
jp
xor
lahf
mov
jecxz
fadds
mov
cmp
mov
pop
aad
dec
mov
jno
push
jge
and
dec
dec
insb
fldt
in
sbb
mov
pop
hlt
fistl
fadds
xchg
lods
lahf
dec
pop
pop
into
pop
out
leave
push
cmp
pop
mov
adc
cwtl
adc
es
lret
jge
xchg
push
push
sub
andb
jmp
insb
inc
in
movsl
js
movsb
pop
mov
cwtl
pop
test
jns
outsb
call
nop
mov
sbb
and
icebp
sbb
lcall
mov
ss
push
cwtl
es
adc
cld
dec
cmp
movsl
mov
stos
ja
shl
sahf
xor
out
mov
test
mov
add
insb
inc
cltd
les
out
dec
jns
dec
stc
scas
fimull
outsb
cltd
neg
xor
sbb
js
adc
pop
imul
sbb
xor
nop
cmpsb
and
clc
sti
ljmp
fucomip
pop
fistpll
sub
mov
insb
test
jge,pt
dec
pop
mov
dec
dec
inc
inc
lods
adc
lret
hlt
sbb
repz
lea
jl
aas
push
adc
xchg
cmpsb
pop
cmp
add
jne
push
fdivs
cmp
imul
enter
leave
push
and
setnp
nop
nop
stc
gs
push
xchg
pop
dec
mov
aaa
or
bound
jmp
fldz
insl
push
icebp
mov
arpl
inc
dec
fsubrl
bnd
or
push
jmp
into
iret
or
aas
jmp
call
rep
mov
cmp
mov
repnz
cmp
dec
xor
push
or
xchg
mov
out
in
imul
loope
dec
pusha
xchg
cltd
inc
jae
cmpsl
xor
sahf
dec
jmp
gs
push
cli
outsb
jecxz
insl
int3
enter
mov
or
dec
lahf
sbb
enter
stos
fincstp
jmp
jae
sti
nop
sub
add
and
pushf
shlb
lret
shr
adc
sub
fldl
inc
xchg
sbb
add
mov
push
or
jbe
out
xrelease
lock
adc
sbb
div
sbb
mov
inc
in
pop
ds
fbld
jecxz
xchg
sbb
sbb
shr
hlt
mov
pop
gs
sbb
lea
inc
cmp
stos
fldl
inc
jle
adc
jae
roll
flds
enter
in
sbb
jo
negl
jmp
std
inc
in
xchg
xchg
push
jecxz
insl
aam
fmull
sbb
sbb
fnstsw
push
imul
mov
xchg
lock
js
xchg
sarb
movb
xchg
dec
jne
hlt
fisubrs
inc
dec
push
mov
lea
ss
or
mov
mov
and
insb
dec
xor
adc
mov
dec
roll
cld
fs
gs
cld
push
sbb
mov
enter
inc
iret
es
dec
dec
rcl
outsb
lods
xor
xlat
add
fidivl
addr16
orl
mov
shll
cwtl
std
mov
minps
out
lea
aad
add
sub
jl
pop
aam
imul
mov
repz
pop
push
mov
mov
into
cmc
mov
jbe
pushf
push
jp
in
jno
out
fdivrl
add
stos
cld
lods
mov
mov
int3
mov
pop
iret
or
push
mov
push
ret
mov
inc
cli
lods
loop
inc
shlb
cmpsl
mov
scas
push
stc
out
pop
push
and
ret
xor
inc
xlat
lret
data16
cmpsl
xor
jmp
clc
pop
notl
or
sub
stos
gs
aas
xor
adc
std
mov
dec
outsb
in
fidivrl
out
push
aad
sti
outsl
xor
mov
int3
and
push
lret
add
ret
inc
in
popf
popf
imul
flds
mov
nop
mov
stc
push
leave
sub
out
stos
add
mov
jg
or
bound
sbb
out
push
sti
hlt
fs
xor
sub
add
rep
test
sub
adc
push
or
sbb
or
imul
or
cmpl
lcall
xor
pop
popa
lds
push
arpl
sbb
and
xchg
scas
jns
xchg
pop
fsubrs
mov
andb
mov
imull
pushf
sbb
dec
cs
leave
inc
cmp
push
fdivrp
sahf
dec
arpl
ljmp
loope
sub
int3
sbb
dec
out
inc
cltd
outsb
shrl
pop
insl
push
xchg
mov
aam
cwtl
mov
sbb
insb
xchg
dec
push
sbb
fidivs
sub
daa
incl
sub
mov
jnp
and
lret
inc
rorl
sub
sbb
sub
inc
jg
call
cwtl
int
outsl
in
pushw
gs
jg
jbe
nop
cmp
sbb
fcompl
and
xchg
or
pusha
dec
xor
insl
xchg
call
cmp
inc
lret
inc
gs
out
cmp
cli
mov
xlat
cmp
mov
adc
hlt
sahf
push
cmp
scas
sbb
mov
jnp
or
mov
sti
pop
cmc
test
sub
clc
lret
or
popa
in
nop
ret
mov
pop
mov
mov
jge
mov
ja
or
push
ss
dec
lods
xchg
jo
jmp
push
nop
push
adc
and
sub
sar
and
jne
jno
jae
imull
into
test
lea
push
mov
int3
add
lahf
sub
or
mov
iret
popf
add
mov
ljmp
out
out
jge
pop
jp
dec
dec
outsb
popf
in
xchg
or
popf
push
adc
jo
out
test
inc
idivb
loopne
ja
roll
andb
outsb
or
icebp
insb
sbb
cld
shrl
lahf
mov
test
repz
cmpsb
subb
divps
sub
lret
add
adc
cmp
inc
cld
jmp
mov
data16
in
mov
insl
xchg
add
xor
out
ljmp
push
cmp
icebp
sbb
push
vorpd
push
out
or
adc
xchg
nop
shl
movsb
jmp
js
fimuls
mov
or
jo
mov
mov
push
xor
dec
and
inc
dec
es
cmp
test
xor
mov
shrl
inc
or
lcall
xchg
add
mov
sbb
ss
lock
jp
mov
arpl
call
fidivrl
call
es
dec
daa
fldcw
lret
push
loopne
imul
repz
popa
adc
sbb
insl
ret
xchg
push
sbb
cld
outsl
insl
push
test
in
lock
lret
fsubl
xchg
mov
out
push
imul
outsl
dec
mov
lcall
in
fwait
adc
inc
and
push
ficoms
xor
mov
mov
mov
pop
divl
lea
pop
hlt
lret
in
jecxz
mov
int
test
aaa
fucomi
nop
int
push
ljmp
jnp
xchg
lret
test
in
insb
sbb
mov
stos
sub
mov
aam
jge
and
inc
mov
repnz
insb
mov
out
mov
sbb
incl
aaa
ljmp
jg
repnz
shll
test
mov
loopne
mov
push
or
aam
cs
cli
hlt
das
xchg
inc
mov
mov
daa
push
rcll
mov
das
xor
xor
call
pop
int3
movsl
int
jp
stc
pop
dec
xor
pop
inc
jae
out
mov
mov
pop
out
rcl
mov
inc
pushf
and
ret
notl
mov
sbb
sahf
imul
ljmp
inc
test
sar
and
mov
sbb
gs
stc
sub
cmp
xlat
in
movsl
xor
xlat
dec
popf
mov
mov
jg
dec
fistps
gs
in
cwtl
ja
lock
sub
pop
xchg
inc
gs
ret
xlat
and
xor
rcl
test
dec
pop
push
and
and
mov
cmp
imul
adc
loope
loopne
sbb
nop
out
shr
js
cmp
das
mov
jmp
push
sbb
jl
mov
cmp
lods
outsb
and
add
sub
push
ret
cmpsl
and
jae
lahf
repz
es
mov
into
dec
sbb
or
jns
shlb
mov
lods
push
push
mov
mov
push
out
ljmp
inc
inc
js
inc
or
sarl
inc
sbb
cmp
sub
call
js
movsl
xor
rcl
fstps
jns
loope
pop
pop
rcr
pop
xor
push
jnp
movsb
ret
iret
jo
or
lret
sub
mov
mov
add
movsl
xlat
push
outsb
popa
xchg
hlt
push
cmpsl
pop
push
dec
inc
test
pop
jbe
xor
push
dec
adc
aas
mov
scas
cltd
mov
push
cltd
inc
test
push
hlt
std
cmp
push
adc
add
dec
insl
lret
leave
je
pushf
lods
ljmp
shll
test
mov
cltd
mov
pusha
std
push
cmpsb
pop
enter
adc
in
cmp
push
adc
movsb
loop
inc
and
and
lret
xchg
dec
mov
xchg
imul
push
clc
sbb
out
nop
shlw
pop
xchg
pop
or
cmp
fdiv
or
sti
jmp
xchg
cmc
lock
lods
sub
pop
sbb
ja
int
add
and
mov
inc
jo
fadd
lock
in
mov
add
call
jmp
mov
and
sub
adcb
sahf
leave
mov
xor
pop
pushf
mov
nop
push
push
adc
sti
jle
test
sbb
sub
jg
scas
insl
adc
push
popa
aam
xor
ja
pop
jl
and
add
jno
jmp
int3
rcll
mov
popw
jecxz
mov
add
insb
dec
popa
xchg
rclb
aam
out
jo
mov
std
cli
xor
push
fcoml
int3
dec
leave
pop
int3
adc
xchg
pop
mov
add
in
imul
pushf
and
xchg
cmp
pop
add
pop
push
jg
pop
jle
rorl
xchg
fcmovbe
or
xor
mov
sub
mov
inc
dec
cli
and
dec
das
push
lods
pop
lcall
push
popf
mov
adc
in
sub
pop
aas
cmp
mov
test
ret
xlat
inc
mov
mov
inc
dec
mov
and
in
mov
lods
fdivrs
lods
stos
cwtl
lret
jecxz
mov
adc
inc
cwtl
out
loop
cmp
outsb
cmp
negb
dec
rol
jmp
or
pushf
lahf
cmp
push
cmc
movsb
dec
jp
movsl
test
push
bts
int
or
int3
scas
cmpsl
sub
out
inc
inc
in
lahf
cwtl
adc
insl
adc
push
loopne
rcll
ljmp
icebp
rclb
mov
outsl
ret
mov
repz
mov
mov
scas
js
dec
cwtl
out
stc
add
stc
lahf
pop
subl
incl
xor
mov
sbb
in
xchg
gs
test
sbb
sbb
aaa
cmp
pop
or
shll
jl
lcall
pop
loopne
mov
imul
jmp
loop
pop
jl
jnp
pop
scas
repz
mov
pop
out
and
es
lret
and
jns
es
cmpsb
test
inc
cmpsb
mov
lods
xor
and
stc
cmc
mov
mov
pusha
xchg
lret
lahf
xor
push
mov
in
xchg
mov
stos
and
std
jl
mov
sbb
mov
mov
iret
sub
lock
stos
scas
mov
cs
popf
mov
std
and
mov
xor
add
and
sbb
push
or
mov
addb
arpl
mov
iret
dec
and
sarb
movsb
test
lds
cmp
mov
pop
gs
mov
ss
mov
push
icebp
out
lret
dec
and
sbb
outsl
push
pop
iret
adc
rolb
pop
xchg
xor
in
sub
popf
aad
sbb
sub
add
gs
cltd
xchg
jge
ret
out
mov
push
mov
fs
rolb
icebp
or
push
mov
lcall
sbb
nop
fldl
fwait
stos
push
std
add
sbb
fbld
sub
shlb
xchg
jge
add
shrl
lret
mov
mov
mov
jle
xchg
lock
mov
shll
jl
int
mov
loop
or
pop
and
popa
js
adc
jg
lock
cs
add
sbb
imul
xchg
jb
mov
movq
pop
pop
mov
push
xlat
jecxz
adcl
lods
jecxz
imul
xor
and
insb
jb
push
movsl
mov
lods
mov
sbb
addr16
imul
sbb
scas
or
fldt
sub
aaa
cli
jne
sbb
in
filds
jp
js
aad
test
aad
out
arpl
lret
add
cmc
mov
aad
ficomps
xchg
mov
out
arpl
cmp
ret
arpl
pop
push
insl
push
int
inc
jns
test
test
aad
outsb
jl
sub
cmp
es
pop
pop
and
push
iret
incb
lock
and
or
int3
jae
adc
in
jae
loopne
mov
stc
and
idivl
xchg
xchg
sbb
fdivr
cmpl
mov
imul
cmp
out
scas
cmc
sbb
daa
dec
negb
lcall
dec
ret
dec
out
call
add
enter
mov
out
pop
or
sub
xor
push
fdivp
push
and
dec
imul
xlat
dec
add
aaa
xor
mov
out
sbb
out
loopne
xchg
sbb
dec
ja
fstpl
push
stos
in
add
jb
jnp
push
ss
push
je
jno
rcll
hlt
pop
push
aam
fs
lahf
xor
mov
jae
icebp
or
cmp
lods
push
xchg
pop
dec
aad
cmp
js
gs
test
jl
out
out
jbe
mov
push
jp
lahf
fsubr
mov
insl
cmc
pop
ret
fmul
les
call
adc
and
xchg
xorl
dec
or
lcall
repnz
clc
testl
cli
mov
jo
mov
pop
cmp
cmp
ret
es
push
jle
and
or
fs
ss
outsb
fucomi
jno
adcl
jo
or
and
sub
xchg
pop
test
sbb
push
sub
mov
into
mov
mov
pop
inc
dec
push
int3
jae
xchg
sbb
pop
xchg
sub
cmc
push
xchg
lcall
shrb
pop
xchg
mov
cwtl
sbb
xchg
cmp
or
movsb
lock
mov
mov
pop
sbb
testl
dec
cli
jbe
jg
push
pop
mov
rolb
fnstsw
scas
sbb
in
cmp
sbb
dec
ja
mov
sbb
pushf
test
mov
jecxz
loop
sub
mov
add
rclb
punpcklbw
pushf
iret
add
int3
sbbl
cltd
in
fwait
cmp
mov
arpl
xchg
std
xchg
mov
mov
push
aaa
mov
jne
dec
jns
add
les
inc
xor
xchg
in
movsb
fwait
push
lock
ss
xchg
jb
testb
into
pop
into
mov
dec
out
imul
push
push
mov
inc
fisubrl
add
dec
push
and
movsl
cmp
cmp
les
sbb
push
fs
inc
aam
mov
in
scas
mov
cmp
repz
push
iret
mov
xor
pop
fildl
pop
push
es
jo
arpl
into
mov
js
test
aad
xor
jb
shlb
fcomi
movsb
sarl
mov
iret
es
mov
add
push
popf
inc
sub
daa
cmp
jae
sahf
call
inc
js
mov
and
into
push
push
xchg
stos
mov
cmp
loope
sbb
jg
jns
in
mov
divl
aam
dec
iret
mov
test
xor
cwtl
rcr
clc
jne
ret
outsl
or
or
jae
ret
ljmp
add
dec
mov
popf
pop
shrl
mov
stos
sbb
pop
pop
jno
outsb
jg
jbe
imull
inc
xchg
icebp
or
pop
pop
cs
std
mov
call
xor
in
pop
jb
je
jb
cmp
fidivrs
loopnew
imul
inc
sub
adc
cmpsl
jge
pop
call
clc
xchg
int3
in
daa
or
leavew
mov
mov
scas
sub
xchg
repnz
adc
adc
pop
pand
mov
mov
inc
mov
imull
call
pop
jmp
stos
mov
dec
dec
cmp
add
push
add
cld
push
push
add
repnz
mov
mov
pop
mov
xchg
xor
jmp
jnp
mov
movsb
nop
mov
lcall
out
xchg
cmp
jle
cmp
jne
dec
in
mov
adc
aam
dec
and
in
repnz
fs
addr16
pop
pusha
and
sbb
mov
leave
xchg
out
icebp
aas
fldl
in
test
cmp
test
pop
pop
xchg
inc
mov
inc
sub
xchg
xlat
sub
sub
add
add
sub
data16
repz
cld
inc
adc
out
test
jmp
shlb
bound
sbbb
in
cld
lock
adc
scas
testb
adc
cwtl
jge
mov
xchg
pop
xchg
test
push
mov
mov
xlat
cmp
das
enter
xchg
orps
hlt
icebp
or
cli
cpuid
add
jmp
leave
xchg
std
ficoml
sbb
insb
xchg
lret
icebp
lcall
pop
mov
adc
mov
push
call
mov
out
in
jl
xchg
or
dec
sub
jne
or
cli
dec
xor
xor
jns
hlt
and
mov
les
or
gs
jmp
dec
aaa
or
mov
or
dec
push
inc
inc
enter
adc
stos
dec
jns
push
imul
inc
cmpl
inc
jecxz
fs
rcll
xor
inc
sbb
ret
adc
mov
punpckhbw
lods
sub
dec
mov
outsb
add
adc
int3
cmp
pop
pop
dec
ja
adcb
rcrb
mov
shll
sbb
std
dec
movsl
adc
je
inc
push
mov
adc
ret
sub
loopne
aam
jb
xchg
xchg
jbe
sti
xorl
jb
incb
sahf
idivl
stos
cmpl
push
pop
scas
outsl
sbb
sbb
xor
out
inc
inc
mov
mov
rolb
add
daa
xchg
loop
lcall
outsl
sub
out
adcl
or
sbb
icebp
subl
pop
stc
adc
mov
pop
pushf
addr16
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
addl
mov
or
mov
mov
xor
andl
add
orl
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
mov
mov
movzbl
and
cltd
push
addl
mov
add
movl
adc
or
push
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
adc
mov
mov
movl
mov
andl
mov
xor
orl
xor
orl
xor
andl
add
adc
xor
orl
jmp
mov
arpl
jno
shlb
mov
enter
adc
pop
daa
out
hlt
mov
gs
pop
jne
push
pushf
or
fistps
add
and
or
xor
xor
sbb
pusha
pop
mov
inc
lret
xrelease
mov
cmp
and
das
mov
inc
in
dec
cmp
mov
addr16
inc
mov
inc
add
test
xchg
mov
cmc
in
scas
push
cmc
loop
xor
or
mov
lcall
and
and
dec
cli
xchg
mov
xchg
andl
add
dec
aad
ss
aaa
pop
cmovae
je
mov
cld
cmp
or
jle
mov
dec
icebp
add
sbb
mov
mov
je
mov
add
fs
stos
gs
jb
cmp
or
xchg
push
jo
xor
pop
pop
cwtl
fistl
stos
cmc
nop
lret
sbb
mov
jge
mov
mov
shl
and
shll
hlt
insl
into
mov
test
jle
psubsb
int3
push
sbb
cmp
xchg
addr16
sbb
sahf
insb
add
cli
test
pop
sbb
lcall
xor
leave
xor
insl
mov
gs
aam
out
lret
arpl
ret
repnz
mov
push
psubusw
mov
cltd
aas
mov
pop
cmp
rcr
cwtl
rol
add
movsl
mov
dec
and
ficoms
mov
and
cltd
push
outsl
xor
fnstsw
imul
lea
bound
in
inc
dec
cld
leave
mov
adc
js
pusha
mov
arpl
jo
js
mov
add
pop
adc
xchg
or
or
dec
fstpl
pusha
mov
iret
add
mov
jae
int
mov
mov
pop
xchg
pop
push
loope
nop
cwtl
or
aam
sub
lret
jo
pop
sub
fsts
cs
jecxz
mov
xchg
dec
push
arpl
js
outsb
cs
call
in
mov
es
xchg
les
fiaddl
les
ja
pop
jg
jmp
push
or
mov
sub
mov
popl
pop
xor
and
jmp
xchg
push
jae
dec
stc
jle
arpl
cmc
sub
test
jmp
jl
out
push
add
pop
testl
inc
inc
int
pop
jl
adc
js
fidivl
mov
icebp
hlt
cs
shrl
hlt
pusha
int
out
movsb
fildl
ss
addb
mov
inc
dec
sub
inc
cmp
push
mov
mov
push
xchg
add
inc
out
xchg
divb
shlb
and
xor
iret
jnp
enter
movsb
adc
sbb
aaa
jnp
cmp
sbb
cmp
push
or
mov
dec
inc
cmp
movsb
cmpb
jle
dec
inc
sbb
dec
xchg
data16
mov
cs
inc
addr16
mov
shlb
fwait
xchg
in
inc
add
in
cwtl
sub
inc
sub
repz
pop
into
test
movsb
fiadds
adc
in
jnp
xchg
imul
mov
dec
shl
xchg
out
jge
xlat
sub
nop
pusha
movsb
cwtl
and
movsb
push
loopne
ljmp
loope
and
jle
daa
add
push
in
lret
cmp
dec
xchg
inc
mov
int3
or
mov
xor
hlt
sarb
int
cmp
ja
mov
lret
mov
mov
mov
sub
pop
pusha
outsb
push
aad
aas
jnp
sbb
pop
jb
lods
push
dec
push
cwtl
mov
jne
xchg
iret
push
outsl
seto
cs
jp
add
xor
pop
and
xchg
cmc
test
sbb
mov
aas
pusha
loop
jns
int
xlat
jbe
jecxz
sti
orb
loopne
movsl
mov
std
xchg
sti
cmp
aam
sahf
jbe
xor
xor
adcl
ret
dec
ljmp
rcrl
mov
faddl
dec
lods
or
xchg
sarb
jo
inc
je
dec
fisubs
mov
push
push
popa
cmp
pushf
fcmovbe
pop
cmc
popf
mov
cwtl
inc
dec
ficoms
fnstcw
out
pushf
loope
test
ja
cmp
inc
stc
lahf
and
test
pop
in
lcall
jbe
mov
push
sbb
mov
inc
sbb
scas
shr
jno
mov
add
lea
into
icebp
inc
je
mov
pusha
sbb
xchg
jb
lea
and
leave
dec
xchg
dec
addr16
fs
test
push
outsl
or
pop
insl
sub
gs
lcall
icebp
out
and
mov
in
movsb
sahf
rcrl
mov
pushf
pop
xchg
add
fmuls
cwtl
mov
jmp
xor
sti
and
xchg
jno
scas
jecxz
pop
push
and
aad
outsb
pop
pop
aad
xchg
test
sub
arpl
fbstp
mov
mov
sbb
fbld
stc
das
cwtl
pop
cmpsb
sbb
bound
mov
cltd
push
imul
xchg
cmp
and
cmp
loopne
imul
mov
mov
div
jbe
add
nop
add
mov
subl
push
test
lods
lods
lcall
sub
or
enter
lods
int
add
popl
aas
cmc
iret
into
dec
and
mov
jmp
xchg
push
in
jnp
inc
cmpsb
add
jbe
scas
psrad
push
xchg
int
ss
loopne
sub
xor
ffree
pop
in
push
loope
cmc
add
adcl
out
and
push
inc
mov
inc
inc
ljmp
pushf
popf
fildll
inc
test
pop
stos
dec
out
mov
push
push
jno
xor
rorb
or
push
mov
mov
cli
adc
push
test
enter
adc
mov
loope
outsb
add
mov
jge
adc
adcb
leave
int
inc
call
cs
push
pop
adcb
daa
das
push
sar
fstl
jmp
pusha
insb
loop
mov
rcll
jg
ret
in
xchg
fisttpll
jmp
lahf
or
fs
aas
mov
lods
push
cli
xchg
jns
push
push
inc
je
in
mov
mov
out
mov
sbb
xor
enter
es
pop
push
loopne
sub
int
ljmp
aaa
lcall
aaa
in
dec
add
add
push
ret
negb
jo
mov
pop
pop
sbb
fisttpll
jns
xchg
es
adc
push
outsb
push
pop
adc
dec
ds
shr
jle
stos
xor
xchg
cmpsl
xlat
pop
fwait
or
movsl
gs
lock
aad
aas
nop
mov
or
stos
imul
xchg
insb
or
fs
iret
mov
jbe
loopne
mov
or
jne
stc
inc
fidivrs
push
out
push
xor
loopne
or
test
xlat
add
sub
mov
jb
push
and
flds
mov
mulb
xchg
mov
pop
mov
inc
jg
pop
arpl
lds
inc
pop
ss
lahf
out
jge
imul
push
scas
ficompl
out
pop
push
movsw
shr
aaa
xchg
pop
sbb
jns
ror
pop
pop
xor
xor
mov
mov
mov
push
adc
clc
xchg
dec
pop
add
pop
fwait
and
repz
push
mov
loop
pop
pop
mov
dec
xor
fmull
shll
or
fcomp
cmpsl
insb
mov
out
ljmp
jp
jb
ja
lods
or
or
pop
inc
cli
cmp
in
enter
push
lock
call
cld
xchg
aaa
xchg
js
int3
or
inc
std
fsubrs
push
inc
mov
std
sahf
flds
imulb
dec
xlat
les
push
call
js
xchg
and
add
push
pop
ret
cmpsl
jp
lret
and
xor
mov
ret
popa
mov
das
ja
or
sti
pop
ss
fsts
int3
mov
push
out
push
in
cltd
mov
shrb
clc
test
aad
jb
sahf
lock
cmpl
add
push
sbb
leave
cmpsb
shl
jo
xor
js
pop
xlat
sahf
enter
inc
jl
lock
jb
loope
ljmp
sbbl
rclb
mov
dec
mov
and
lcall
jnp
xchg
jmp
or
sub
clc
test
sti
cmpsb
inc
lcall
jg
aas
outsb
mov
out
cmc
into
add
divb
pop
xorb
insl
mov
adc
lcall
sub
aaa
push
push
sbb
aam
jge
js
lcall
iret
sbb
out
pop
mov
pusha
into
mov
outsb
in
cld
cmp
sbb
and
movsl
mov
imul
push
hlt
jecxz
xlat
mov
mov
pop
pop
mov
mov
jp
cmpsl
cs
adc
xor
mov
outsb
or
test
idivl
mov
dec
sub
lret
ss
icebp
es
and
std
icebp
enter
xchg
mov
cmp
inc
lods
dec
jecxz
and
test
dec
jle
das
inc
xchg
push
fdivrl
mov
imul
pop
mov
or
icebp
stc
xchg
cmp
add
adc
js
scas
or
mov
cmp
call
dec
pop
jmp
arpl
jl
gs
cmp
imull
mov
fisubrl
dec
ds
or
es
sub
jno
add
dec
jo
jle
inc
fldl
int3
add
sbb
das
cmp
in
push
fildl
xor
js
test
adc
cmpb
gs
lods
enter
lret
fcmovnb
pusha
sub
dec
and
pop
popf
mov
movsb
adc
inc
jge
arpl
pop
data16
push
jno
js
push
fmuls
mov
scas
gs
jle
je
mov
mov
movsb
js
jnp
push
and
add
and
in
dec
lods
popa
pop
or
inc
or
ljmp
or
enter
sbb
fnstcw
pushf
test
cmp
cmpsb
mov
mov
xchg
push
add
das
clc
lcall
movsb
jmp
xchg
fldcw
sbb
mov
stos
je
lock
loopne
into
std
push
and
andl
aaa
mov
push
mov
jae
xor
adc
fnstsw
pop
cmp
mov
xchg
mov
mov
fnsave
cmpsl
and
add
push
and
pop
or
ss
cli
test
ficoms
sub
pop
inc
lahf
adc
jo
arpl
sub
es
roll
sti
xabort
idivl
xchg
mov
dec
pop
out
sub
ss
test
popa
mov
or
idivb
cmp
rolb
add
stos
lret
inc
mov
jmp
push
adc
mov
jp
ds
mov
aas
sbb
push
or
dec
aas
out
inc
jmp
mov
inc
and
push
int
ret
mov
cmp
add
pushf
es
push
je
adc
pop
mov
std
jge
aas
adc
ficoms
mov
jmp
outsb
jge
adc
mov
sub
dec
and
cmpsl
decb
outsb
pushf
adc
mov
in
subb
add
repz
jg
mov
mov
inc
jmp
mov
xlat
jbe
insb
push
mov
call
mov
into
movsl
test
add
and
insl
push
iret
push
lds
es
insb
inc
sub
xchg
lods
ljmp
sub
lds
fsub
cwtl
mov
imul
jp
pushf
xchg
push
ljmp
add
rclb
jno
test
cs
xchg
loop
popa
xchg
popf
mov
or
lods
or
xchg
fisubrl
dec
push
ret
movsl
jae
out
inc
add
or
add
dec
mov
mov
push
stos
pop
push
cs
push
push
int
ss
mov
push
test
ljmp
stos
mov
jecxz
enter
sti
sarb
sahf
push
sbb
ret
mov
insb
out
in
jbe
mov
pop
insl
test
xchg
pop
sub
out
push
out
pushl
jge
fs
movsb
sbb
jecxz
push
jns
sbb
xor
push
pop
adc
mov
jb
andb
sub
adc
xchg
push
jge
or
outsb
cmp
jns
nop
jb
push
xchg
vcmpss
ret
cmp
mov
add
mov
pop
mov
xor
sbb
pop
jbe
and
inc
sub
fisubl
pop
jl
add
jns
push
mov
or
repnz
in
xchg
mov
or
daa
into
and
inc
push
mov
cld
or
jns
lahf
dec
sbb
lret
cmp
aas
cli
pusha
insb
fbstp
hlt
adc
cltd
nop
aad
push
push
ret
xchg
push
repz
or
cmp
mov
dec
insb
adc
push
ljmp
rcll
mov
popf
pop
mov
loop
lcall
fisubl
sbb
pop
pop
lret
cs
mov
icebp
call
pop
ja
xchg
fsubrs
add
hlt
add
adc
adc
mov
sbb
pop
xchg
xor
mov
sbb
xor
cmc
adc
gs
pop
daa
jle
int
scas
stos
jae
cmp
mov
add
mov
jmp
call
push
outsl
pop
push
ljmp
lds
push
push
xor
add
outsb
sub
push
cli
adc
jnp
dec
jge,pt
and
inc
mov
stos
cmp
mov
fldenv
ret
dec
add
and
loop
sub
stc
test
adc
push
jle
jb
fdivrp
dec
paddq
movsb
sbb
leave
repz
cmpsl
cli
sbb
and
into
jg
sbb
jb
sbb
mov
adc
cmpsl
test
jg
adc
fcompl
ss
cmp
dec
and
mov
dec
psllq
aad
inc
stc
dec
mov
push
or
jbe
leave
mov
and
outsl
cmp
xor
pop
xlat
js
insb
dec
cwtl
jnp
sbb
aam
fsubl
and
imul
dec
cli
insl
scas
add
mov
mov
cmp
subb
inc
jns
adc
add
addr16
test
shlb
jl
lret
cltd
cmpsl
out
shrb
or
popf
xchg
mov
lcall
push
dec
test
movsb
xor
dec
mov
addl
cmpsl
sahf
add
mov
shll
repz
inc
sub
inc
add
rcrl
sub
sub
cmp
adc
push
add
stos
xchg
ja
fimuls
in
jno
outsl
mov
and
ss
pop
shl
pop
add
mov
sti
rorb
pop
pusha
pop
shll
dec
repz
repnz
pushf
push
pushl
in
mov
jnp
es
mov
ljmp
xor
lock
push
pop
jmp
daa
jecxz
mov
push
mov
mov
mov
push
dec
call
cld
orl
aam
jmp
xlat
scas
sbb
mov
xlat
ljmp
pop
mov
and
ja
or
adc
insl
jnp
add
mov
pop
roll
mov
xor
jge
test
inc
imul
xor
cli
ficompl
fcmovne
push
add
nop
pop
ficoml
and
add
or
leave
rcr
jns
mov
cmp
jns
adc
leave
cld
adc
or
call
repnz
aam
pop
sti
fmuls
test
jne
and
jmp
jmp
cwtl
fs
pushf
and
sub
push
enter
out
jl
setle
lea
jg
mov
jno
rcl
and
stc
divl
iret
cld
sbb
pop
mov
push
shlb
pop
fsubrs
push
push
clc
or
aam
mov
mov
call
sub
mov
sbb
xor
data16
js
push
cmp
stos
loope
xor
lret
out
add
or
add
inc
xchg
cmp
xchg
cld
dec
sbb
xchg
fs
ret
jnp
sbb
hlt
lret
push
mov
dec
or
icebp
sub
js
int
or
dec
and
xlat
mov
es
xchg
adc
in
arpl
adc
push
cltd
pop
adc
xchg
stc
shll
lds
add
lods
repnz
sar
and
jne
loop
pop
adc
clc
cs
xor
xchg
fadds
dec
adc
sub
xchg
inc
icebp
and
cli
loope
jmp
sbb
jg
jae
mov
popf
dec
push
jmp
iret
xchg
je
push
outsl
sub
jle
jb
addr16
dec
jb
mov
mov
lock
dec
jmp
sub
ljmp
push
lods
jmp
adc
inc
imul
cs
jb
push
gs
mov
and
loopne
mov
outsb
sub
and
sub
fmulp
aaa
pop
fwait
jecxz
scas
icebp
movsb
cmp
js
cmp
out
mov
mov
jne
call
nop
pop
sbb
lret
rcll
fwait
or
pop
jl
jo
std
xchg
adc
iret
add
adc
jl
lahf
push
subb
xor
jne
mov
xor
mov
mov
cmp
xchg
adc
mov
stos
jge
out
shrl
shrb
cs
sbb
sub
nop
movsl
stos
arpl
or
ffreep
jle
cld
xor
jbe
pop
movsl
xchg
xor
clc
loop
lods
pusha
popa
xor
loop
sbb
ret
xor
dec
bound
mov
mov
cmpsl
xor
mov
sub
sub
mov
imulb
imul
call
dec
xchg
xlat
loope
movsl
dec
jns
stos
dec
or
sti
cli
xor
cmp
sti
push
sbb
fwait
mov
push
or
repz
pop
push
or
ror
clc
ret
jge
bound
stos
push
add
sahf
popf
adc
hlt
sarl
test
decl
xchg
outsl
cld
mov
nop
mov
inc
je
mov
cld
mov
pop
in
inc
call
stos
stc
dec
mov
mov
outsl
add
scas
jae
mov
push
pop
jle
sbb
repnz
jae
inc
xchg
out
mov
insb
in
fiadds
mov
push
mov
iret
xor
push
es
jae
pop
stc
outsb
add
dec
xchg
lods
scas
push
sti
and
dec
jnp
call
sbb
cmpsb
sub
dec
or
pop
xchg
mov
addl
mov
dec
jo
fucomi
mov
or
test
jbe
es
cli
insl
bound
mov
push
pop
xchg
add
sbb
movl
mov
or
shlb
pop
lea
movsl
test
sbb
int3
pop
push
sub
adc
xchg
add
inc
ljmp
sbb
mov
fstps
testl
sbb
sahf
shl
jnp
add
rcl
je
dec
cmpsb
xchg
inc
sub
scas
sbb
ret
call
sub
call
jb
add
loopne
lods
mov
loope
dec
cltd
jns
xor
popf
addl
lock
les
push
arpl
test
int
mov
push
pushf
pop
rcrl
movsb
les
popf
cmp
xor
fwait
ss
xor
xlat
fisubs
push
icebp
push
rorb
jmp
fcompl
pop
in
ret
mov
mov
sub
std
imul
clc
out
inc
mulb
xor
push
and
and
sbb
dec
leave
insl
adc
xchg
push
mov
xchg
test
or
or
pop
lret
push
scas
js
sub
pop
in
loop
jnp
sar
lods
test
mov
mov
mov
enter
jecxz
pop
inc
xchg
std
xchg
rcrb
inc
sbb
add
inc
mov
aad
pop
sub
mov
dec
imul
mov
movsb
popf
and
nop
gs
sbb
sub
pusha
stos
or
mov
adc
sti
push
aaa
popl
inc
fs
push
fs
or
xchg
inc
adc
fs
ret
jle
mov
jo
cmpsb
pusha
and
pop
cltd
adc
add
push
cltd
mov
sbb
pop
push
push
aaa
in
cmpb
ss
fdiv
mov
mull
jne
push
or
inc
fs
sub
andb
rcrb
or
rcl
and
jg
inc
cmp
adc
mov
mov
dec
jp
add
inc
jmp
popa
sti
mov
sbb
inc
jae
leave
push
jl
dec
jge
dec
icebp
ficoml
cli
ja
mov
add
add
mov
pop
jl
stos
inc
jno
mov
or
inc
movsb
popf
cmc
sarl
jae
mov
in
stos
test
inc
or
xchg
aam
aam
mov
lret
cmp
jle
jbe
lcall
insb
ljmp
aaa
xchg
cmp
cmpsl
push
pusha
and
je
jl
mov
jae
lock
mov
lock
lret
pop
popl
in
jb
mov
scas
jo
lods
test
jbe
rcll
jp
popf
mov
xor
int3
adc
mov
das
fisttpll
scas
and
adc
xor
repz
jo
mov
adc
or
inc
sbb
xchg
in
jp
lods
add
xchg
aad
data16
pop
repz
test
in
sub
out
pop
pusha
inc
lahf
imul
shrb
cmp
fs
int
leave
repnz
mov
out
fstps
push
outsl
mov
inc
inc
rolb
mov
mov
add
sar
dec
or
gs
mov
jmp
loop
inc
lret
imul
pop
mov
mov
add
push
test
mov
mov
sbb
pusha
pop
add
mov
dec
or
insb
sbb
adc
dec
mov
push
pop
pop
jle
jb
or
popa
add
xor
aam
cmp
sbb
icebp
orb
mov
mov
int3
inc
or
lds
js
xchg
lcall
pop
nop
sub
and
pop
lds
inc
repnz
clc
mov
inc
inc
cld
jecxz
fwait
out
mov
mov
adc
inc
lds
push
mov
adc
test
jle
inc
ljmp
data16
fmulp
add
xor
std
out
mov
push
shl
cmp
leave
cld
sbb
outsb
cmp
fs
ds
cmp
mov
jp
outsb
inc
lcall
test
rclb
and
nop
repnz
call
lds
sbb
ds
ss
sbb
fisttps
add
lea
incb
xchg
data16
stos
hlt
out
mov
inc
ret
insb
and
cmp
js
dec
add
push
pop
stc
add
pop
rorl
cmpb
pop
sbb
mov
inc
or
jp
sahf
fstpt
lret
daa
stos
cltd
sub
in
adc
movsl
xor
jo
testl
adc
jle
sbb
in
lods
sbb
imul
push
jne
test
in
mov
mov
aas
bound
icebp
add
bnd
and
call
popf
jno
cmpsb
roll
stos
push
js
dec
push
out
data16
xor
aam
std
sbb
fwait
clc
mov
pop
xchg
jnp
das
gs
shrb
inc
ret
xor
subl
int3
fcmovnu
sbb
cwtl
xchg
dec
mov
mov
or
sub
test
iret
cmpsl
cmc
test
or
icebp
mov
pop
rorw
xor
lahf
inc
jnp
dec
lods
pop
fiadds
xor
pop
add
imul
fwait
add
push
fidivs
nop
jno
pushf
adc
movsb
xchg
repnz
fimull
fdivs
test
ja
jns
mov
arpl
cmpl
cs
shll
int
jns
xor
dec
mov
pop
dec
arpl
nop
jmp
paddq
inc
shrb
mov
push
pop
iret
loopne
test
stos
or
popf
jbe
inc
pop
out
pop
push
dec
pusha
loopne
jb
aad
rcrb
sti
lret
xor
out
ds
daa
mov
leave
mov
mov
xchg
shlb
jno
insl
xchg
jg
adc
out
push
leave
cld
inc
pusha
and
popa
imulb
sbb
lock
enter
add
mov
stos
call
pop
inc
lock
dec
mov
pop
mov
pushf
push
adc
fwait
pop
jo
cwtl
push
xchg
xchg
inc
loop
test
sub
xchg
arpl
or
roll
ficomps
fwait
push
sti
int3
dec
jp
lock
xchg
hlt
mov
or
in
sbb
mov
cmp
hlt
testb
ficomps
mov
push
aad
push
out
es
mov
xor
xchg
mov
xchg
mul
in
lods
xchg
roll
cmpb
pop
int
xor
xor
push
push
xor
test
mov
popf
lea
mov
push
mov
push
test
or
cmp
push
sbb
mov
insl
mov
popa
jp
int3
loopne
into
insb
les
sbb
lcall
cld
inc
rclb
inc
fnstsw
outsl
adc
outsb
movsl
es
cwtl
jle
out
pushf
cmp
popf
lret
cmp
shll
push
sbb
mov
fsts
gs
out
xor
clc
pop
jnp
dec
or
dec
xor
aas
outsb
sahf
test
imul
loopne
and
cmp
stos
jno
flds
enter
push
and
icebp
ret
push
test
jl
push
scas
lea
push
push
imul
ljmp
and
or
shlb
ss
jmp
add
mov
testl
ret
ss
daa
jb
push
scas
or
aam
jnp
push
jns
jle
or
daa
add
mov
lret
dec
mov
cmpb
sahf
repnz
leave
insl
lea
dec
mov
loopne
in
jp
adc
lcall
push
mulb
mov
in
xchg
in
or
add
adc
je
and
ja
jo
fwait
mov
call
mov
lea
xchg
jle
repnz
loop
inc
cmp
jae
fs
lcall
pop
push
js
out
pop
mov
and
cmc
mov
fdivrs
inc
jne
mov
mov
out
mov
add
aas
adc
dec
testb
and
or
dec
movsl
cmp
and
sub
or
xchg
stc
xchg
mov
adc
mov
lds
mov
jecxz
ja
out
dec
mov
mov
rolb
mov
jmp
lret
pop
sbb
adc
rcrl
jbe
lock
hlt
fsts
in
pop
and
or
popf
jnp
gs
sarl
add
mov
pop
pop
test
sbb
movsl
leave
arpl
mov
xor
jle
scas
add
lahf
sbb
lods
adc
pop
lods
lock
xchg
and
mov
cmp
push
bound
dec
mov
and
mov
xchg
int3
imul
pop
pusha
sub
jg
mov
add
popa
cld
daa
nop
jle
mov
dec
push
daa
xchg
mov
out
and
adc
sub
cli
test
jbe
jge
shrl
inc
add
jge
imul
fildl
int3
sbb
lcall
sub
mov
push
inc
in
int
mov
jbe
dec
mov
mov
mov
xchg
dec
sub
out
rcr
sbb
adc
mov
cmp
pop
xor
push
xchg
mov
outsl
xlat
add
push
mov
or
adc
fldcw
sub
xlat
filds
sbb
xchg
rcrb
lea
xor
inc
mov
test
idivb
leave
mov
sub
insb
lock
and
jno
pushf
scas
add
sub
loop
lods
icebp
test
jmp
mov
mov
aad
out
incl
imul
sbb
ds
stos
dec
sbb
or
je
roll
dec
sub
push
pop
fwait
jo
call
pop
ret
sti
bound
and
out
aas
pusha
inc
add
insb
mov
xor
in
jp
loop
fwait
push
scas
nop
cmp
frstor
mov
aam
test
mov
and
inc
fsubl
sbb
sub
ljmp
add
mov
jo
and
jl
stos
adc
dec
mov
movsb
subb
rorb
pushf
cli
mov
adc
and
jecxz
imul
addr16
jge
inc
andb
add
mov
js
mov
mov
dec
xchg
dec
icebp
bound
out
mov
jp
jne
cmp
lds
int
cli
mov
clc
xor
xor
jge
mov
int
jle
sbb
in
pop
push
icebp
rcrl
das
jle
enter
push
das
int
dec
cmp
movsb
xchg
lcall
js
xchg
xchg
roll
data16
jp
icebp
dec
rol
push
mov
adcb
push
int3
mov
loope
sahf
xchg
jo
sub
out
mov
mov
and
loope
imul
subl
mov
loopne
mov
mov
mov
test
jb
scas
sahf
cli
pop
gs
dec
or
in
mov
dec
mov
ret
jge,pt
int3
test
pop
add
jne
mov
popl
enter
or
mov
sbb
repz
gs
push
jp
add
pushf
repnz
or
mov
orl
dec
in
pop
jmp
lret
cmp
mov
jmp
push
lea
in
dec
dec
mov
mov
or
push
mov
jbe
fisubrs
and
fdivs
cltd
sub
outsl
mov
inc
aas
aad
aam
mov
in
cmp
add
das
push
insb
into
pop
pop
add
dec
call
dec
in
xor
mov
sbb
pop
je
cmpl
pop
dec
push
test
cld
push
cmp
sbb
aaa
scas
mov
xchg
call
out
adc
fcom
test
mov
repnz
dec
test
push
inc
les
xchg
and
out
jns
xor
cmp
jne
movl
cmp
movl
je
sub
mov
mov
mov
subl
xor
add
adc
xor
andl
xor
movl
cmp
movl
jne
movl
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
sub
addl
push
xor
push
xor
mov
add
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
and
andl
xor
movl
movl
and
mov
mov
xor
xor
add
mov
orl
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movzbl
sub
mov
sub
xor
mov
addl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
mov
xor
xor
xor
sbb
mov
mov
mov
sub
imul
addl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
or
dec
mov
jmp
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
xor
mov
addl
sbb
mov
sub
mov
andl
xor
mov
mov
mov
dec
mov
andl
xor
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
jmp
test
icebp
arpl
scas
push
jnp
rcr
imul
pop
bound
sbb
push
xor
sub
incl
xor
test
xchg
enter
mov
inc
repz
adc
orb
inc
ret
jb
mov
push
push
push
jns
rorl
mov
pop
mov
sub
out
push
int3
inc
push
fsts
imul
lahf
imul
andl
jmp
dec
lock
ficomps
cmp
push
push
mov
adc
stos
adc
faddl
pusha
and
mov
das
add
shrl
outsl
jg
loope
sbb
jl
mov
add
inc
push
rcr
imul
dec
arpl
or
ret
mov
iret
clc
fidivrl
mov
es
mov
pop
dec
adc
dec
lret
pop
shlb
xlat
ret
push
repz
jmp
sbb
lods
movsb
out
scas
mov
es
add
pop
mov
movsl
jo
repnz
cli
jbe
cmp
ljmp
add
jbe
sub
xchg
es
mov
mov
out
push
out
xchg
cltd
mov
push
or
inc
out
add
popf
arpl
jb
insl
out
cwtl
mov
xchg
or
ret
xchg
fwait
sub
insl
loop
repnz
dec
jp
int
repnz
pop
pop
jns
inc
adc
arpl
test
xor
repnz
outsb
pop
xlat
movb
mov
in
add
ret
push
or
fcoms
pop
fsubrp
movsb
mov
sahf
mov
jnp
dec
sub
dec
or
pop
ror
test
push
jge
push
mov
inc
sbb
mov
imul
lret
push
jne
jmp
xlat
xchg
sbb
mov
lret
add
fs
push
leave
pop
pop
aas
jg
in
mov
popa
lods
pop
daa
jns
mov
or
xchg
jl
dec
data16
rorb
sbb
pop
dec
repnz
push
mov
sbb
mov
jne
xor
add
pop
cpuid
and
clc
cwtl
jb
in
notb
pop
push
cmp
mov
add
lcall
xchg
xchg
xchg
pop
jne
stos
lret
and
xor
push
ds
hlt
pop
cltd
out
movsl
jle
push
dec
lods
sub
imull
mov
mov
mov
adcb
out
out
scas
jne
lret
aas
notb
mov
test
out
je
arpl
sarl
fs
cltd
cld
add
adc
jge
lcall
mov
xchg
xchg
arpl
sub
add
add
stos
clc
pop
dec
push
xor
pushf
mov
xchg
jo
jp
scas
xchg
sub
lret
mov
cmp
jae
scas
sbb
push
mov
lea
jmp
sub
loop
cwtl
pushf
loope
jmp
aas
mov
lods
repz
mov
jecxz
mov
jno
and
fsts
out
push
inc
push
mov
and
mov
hlt
push
mov
iret
lahf
jne
repnz
or
pop
mov
jnp
pop
loopne
sbb
dec
xor
std
scas
insb
repnz
fnstenv
daa
inc
cltd
adc
sahf
in
fstps
sub
ljmp
xlat
xchg
roll
or
fwait
nop
mov
repz
popa
jg
adc
xchg
mov
js
mov
dec
adc
xchg
in
int
cs
icebp
lcall
nop
cli
outsb
xchg
push
stos
loopne
xchg
notl
jge
xchg
daa
push
lret
mov
pushf
and
push
jns
inc
jg
fcoml
stos
mov
push
dec
jbe
mov
fld
cmp
cld
clc
mov
cmpsl
sahf
fisttps
lods
inc
imul
popf
aas
rcll
iret
xchg
repz
es
mov
push
push
sahf
pinsrw
cmp
pop
dec
jno
or
aad
jge
xchg
arpl
push
mov
pop
rol
nop
daa
xchg
dec
adc
jmp
iret
add
mov
js
loope
xor
sub
incb
lods
ljmp
out
ss
popf
pop
jmp
mov
inc
inc
int3
int
sub
in
ret
mov
push
adc
adc
add
mov
lea
ja
cli
arpl
or
dec
adc
cmc
mov
shl
dec
push
out
dec
mov
mov
sbb
ja
push
pushw
cs
test
stc
dec
fsubs
or
and
fwait
sbb
mov
jmp
es
jne
ret
sub
inc
fwait
mov
dec
and
jle
cmp
pushf
std
leave
cwtl
fs
lds
and
ret
ret
add
mov
out
pop
jae
bnd
das
leave
sbb
je
pop
mov
rorl
bound
cwtl
jg
lret
dec
dec
and
push
adc
mov
pushf
and
xchg
cmp
add
add
or
in
and
mov
xchg
aad
ljmp
pop
push
dec
test
fld
cli
push
addr16
or
sub
mov
lock
jns
stos
ret
pop
movsl
mov
aaa
scas
mov
push
les
fadds
sub
sub
adc
int
inc
mov
pop
cmp
push
or
mov
cltd
jmp
fidivs
xor
aas
sub
leave
int
and
out
popf
cmp
lock
lods
mov
sub
clc
xor
hlt
loopne
jg
add
push
addr16
test
xor
jb
jae
shr
sbbb
inc
inc
pop
lret
and
and
or
es
pop
sbb
jmp
pop
jmp
add
jmp
push
call
test
jp
aad
mov
pop
cmp
and
cmp
test
stos
loope
scas
test
mov
mov
jge
outsl
or
dec
push
adc
les
xor
or
and
xchg
std
pop
push
dec
rcrb
lock
scas
test
call
push
xor
je
imulb
sbb
dec
ret
sub
or
add
pushf
inc
call
push
dec
frstor
js
scas
rcrb
push
dec
xchg
movsl
pushf
loopne
sub
push
cmpsb
jno
cmp
pop
cmp
mov
mov
add
or
dec
sahf
mov
xor
xchg
sbb
add
jbe
int3
mov
stc
pop
dec
fs
push
nop
and
push
sbb
mov
xchg
mov
je
not
test
leave
fs
xlat
icebp
add
addr16
jbe
push
clc
mov
adc
cwtl
cmp
mov
mov
es
mov
mov
dec
inc
rclb
out
aaa
loope
jl
lods
and
out
xchg
leave
lock
push
push
das
in
dec
push
out
xor
lea
popf
xor
cmc
inc
push
fildll
lods
jle
pushf
out
mov
aad
sbb
xchg
fsts
inc
or
ss
sub
lods
or
frstor
sub
sti
mov
sub
mov
je
sbb
lcall
movsl
jns
jle
push
or
stos
mov
xchg
out
add
mov
mov
sarl
ljmp
shrl
out
in
mov
xchg
cmc
daa
in
push
fisubs
sbb
mov
or
fildll
pop
gs
push
sub
mov
stos
test
arpl
stc
ds
and
scas
bound
sbb
aam
insl
or
xor
dec
das
enter
jae
pop
out
bound
mov
or
popa
cmp
icebp
jnp
fldl
movsb
jp
and
mov
sbb
and
cmpsl
inc
adcb
std
sub
test
lea
fldl
sbb
lret
out
add
add
jp
aaa
in
dec
loopne
sbb
sub
pop
aam
add
test
lret
add
shlb
bound
inc
mov
inc
or
pop
stc
inc
cs
add
fcmovbe
jecxz
jnp
mov
sub
lock
mov
pop
jge
lcall
xor
into
sub
sti
jno
in
mov
or
int3
ja
adc
push
into
and
in
push
lahf
push
mov
jl
push
xchg
xchg
bound
jbe
mov
mov
inc
cli
xchg
minps
cmp
repnz
out
pop
cmc
shll
inc
cwtl
add
out
lea
mov
mov
jo
or
jp
push
xor
insl
push
mov
lods
sbb
adc
out
xlat
ds
adc
mov
jnp
fistpl
fwait
adc
lods
sub
popa
ret
in
xchg
and
clc
mov
cmp
stos
lret
pushf
sbb
pop
ja
lock
int
clc
cmp
sbb
pop
cmp
inc
and
push
xchg
fnsave
mov
insb
dec
movsb
mov
pop
out
add
mov
or
dec
jbe
fldenv
gs
cltd
ja
imul
adc
lret
push
inc
dec
dec
push
mov
mov
je
aad
pop
mov
push
cmp
push
out
dec
fdivrs
push
out
stos
out
push
add
fwait
mov
not
xor
shlb
notl
and
mov
mov
xchg
lods
int
sub
movsl
enter
inc
movd
dec
sbb
sub
xchg
test
jnp
jae
ss
add
xchg
or
xchg
aad
jl
imul
divl
loope
cld
movsb
add
mov
mov
out
ret
push
pusha
shlb
shlb
outsb
lea
scas
push
out
cs
das
sti
jns
jb
push
mov
repz
xchg
iret
lahf
test
mull
das
nop
pop
fst
out
out
cmp
jbe
ffree
je
or
cmc
rcrb
clc
sbbl
pop
jo
push
and
push
jge
int3
aad
aad
pop
mov
int
lock
lahf
adc
repz
xchg
xchg
sbb
lock
out
cmp
pop
xor
jae
movsb
int3
lret
out
out
mov
subb
addr16
ds
lahf
jmp
push
inc
jl
jp
into
fs
dec
int3
cmp
stos
fcmovb
or
sbb
inc
pop
out
pop
pop
mov
inc
mov
push
xchg
dec
mov
mov
fistpll
test
sub
in
pop
mov
xchg
sbb
mov
inc
add
push
cli
scas
push
pop
lcall
cmp
mov
lods
push
addr16
xchg
inc
testl
xchg
jl
sbb
repz
es
mov
inc
nop
xor
sbb
int
mov
xor
mov
inc
adc
cmp
aam
mov
shll
dec
out
rclb
hlt
bound
push
mov
dec
xor
mov
pop
jmp
test
js
inc
ffreep
adc
pop
es
sbb
sar
bound
mov
fwait
pushf
shll
cmp
sub
inc
enter
btr
scas
das
cmp
outsb
in
out
ljmp
fdivrl
outsb
sub
push
adc
mov
mov
lret
fimull
ret
inc
push
lcall
mov
jne
int3
mov
in
jp
test
adc
rolb
pop
adc
fsubr
sbb
jge
ret
dec
push
pop
fchs
std
lahf
sti
in
pop
adcb
mov
shl
jl
into
cmp
fisubrl
or
imul
inc
imul
pop
sbb
dec
push
aaa
or
js
pusha
xchg
inc
push
and
and
in
xchg
aaa
push
adc
mov
push
cli
icebp
adc
pop
cmc
push
les
adc
adc
lock
pop
sub
test
pop
cmp
jnp
pop
enter
mov
repnz
rdpmc
sub
mov
mov
into
add
pushf
adc
orb
push
xor
jg
jle
ficompl
outsl
jecxz
out
outsb
bound
jle
or
lds
aas
cmp
dec
ret
hlt
adc
aad
mov
adc
rcrl
and
rol
sbb
xorb
lahf
pop
aaa
adc
push
mov
dec
stc
call
sbb
jb
push
popa
xor
xorl
stos
and
or
push
and
inc
lret
jb
je
roll
and
pop
je
iret
jl
test
inc
lds
adc
jge
xor
stc
xor
mov
push
and
push
movsb
into
mov
xor
stos
clc
imul
lds
inc
jp
fstps
sbb
mov
mov
sub
sbb
dec
bound
loope
or
clc
fwait
push
cli
cld
inc
pop
xchg
sub
stos
xchg
jmp
je
clc
std
and
lods
pop
mov
nop
enter
inc
mov
data16
es
out
sbb
je
push
aad
pusha
cs
cwtl
scas
jp
xchg
mov
js
pop
adc
int3
popf
sub
dec
mov
addr16
dec
jno
add
mov
mov
fisubl
mov
inc
xchg
pop
push
push
jle
andl
xchg
test
cmpsb
push
loope
push
adc
cmp
pop
jne
mov
xor
in
mov
pop
jecxz
lret
movsl
gs
or
cmp
xorl
add
lock
dec
mov
jmp
cmove
inc
aaa
xor
dec
lds
mov
jbe
enter
and
inc
cmp
insb
push
gs
jg
sbb
inc
aam
and
std
mov
nop
add
fdivrl
pop
inc
push
arpl
xchg
in
ds
inc
jg
fimuls
clc
mov
push
and
push
lea
fldt
mov
cld
mov
loopne
or
test
sub
outsb
sti
enter
clc
dec
orb
outsl
lock
lahf
or
xlat
ss
sub
lods
or
jbe
push
or
add
test
scas
jb
aad
mov
jl
roll
adc
cmp
mov
mov
inc
fs
fisubs
adc
dec
rolb
push
lods
aam
push
cmp
lret
test
ret
lods
jge
addl
stc
push
addr16
lea
adc
push
mov
pop
mov
mov
mov
out
pop
mov
sub
fwait
xchg
int3
push
jp
sbb
fsubrl
jno
in
in
pop
push
sub
adc
and
add
or
and
sbb
add
imul
jne
ret
test
sub
mov
sbb
loopne
mov
jmp
lret
insl
inc
jbe
or
xor
lret
xor
mov
adc
arpl
pop
lea
fisttpl
aas
xchg
movsb
iret
addr16
and
outsl
int3
mov
inc
inc
sbb
and
das
or
lcall
pop
shl
add
shll
cmp
xor
mov
cld
sti
pop
mov
pop
popf
pop
fsubrl
inc
mov
test
lods
clc
jbe
mov
xchg
cld
rcll
ljmp
lea
and
jp
jp
stos
pop
pop
loopne
aad
dec
and
xchg
aam
xchg
jmp
mov
lock
scas
movsl
stos
dec
cmpsl
test
xor
pusha
mov
fisubl
test
push
into
sahf
cmp
loope
out
enter
mov
push
int
sahf
js
inc
setl
push
mov
mov
popf
adc
sub
and
sbb
test
push
xlat
cld
add
push
aas
in
push
pusha
jns
dec
mov
inc
push
lcall
mov
stos
lock
push
gs
test
cmp
out
loop
arpl
xchg
inc
roll
aas
xchg
and
ds
fiaddl
pop
push
pop
lahf
enter
mov
jne
add
stos
cmc
flds
dec
ja
test
pop
popf
push
jns
push
xorl
invd
pop
pop
aaa
pop
sub
mov
fcomip
daa
aaa
mov
sub
test
fsubr
out
or
mov
iret
cs
ficompl
idiv
das
and
push
aam
mov
sbb
inc
faddl
jno
ret
push
push
mov
insb
push
je
mov
out
cmc
or
cmpsl
mov
jb
sbb
lret
jbe
scas
ficomps
xor
mov
fists
daa
out
stos
xchg
push
shrb
loop
cld
fisubs
out
mov
movsl
and
sbb
push
dec
push
dec
fldenv
fnstcw
lods
adc
mov
or
sub
filds
test
int3
sarl
mov
pop
pop
fwait
les
adc
js
call
pop
dec
aaa
add
jb
xlat
pop
push
daa
sbb
loopne
clc
cs
stos
dec
stos
mov
dec
cmp
hlt
lock
push
and
test
lahf
bound
adc
mov
ljmp
xchg
or
xor
lahf
xor
mov
fisttps
cmc
inc
in
stos
pushf
stos
fdivrs
xor
test
dec
or
add
cmp
adc
pop
pop
inc
pop
fcoml
rcrl
in
loope
imul
out
sub
lods
subb
loop
xor
push
dec
mov
add
sbb
push
repz
fidivl
mov
mov
and
adc
sbb
cmp
sbb
pop
xor
sar
xchg
aaa
add
mov
mov
cwtl
shll
jbe
push
repz
les
push
andl
xor
dec
xchg
inc
aam
xor
call
fidivl
push
aas
push
pop
in
pushf
cmp
insb
loopne
and
lcall
xor
jecxz
popa
pop
mov
mov
or
push
jp
push
das
adc
jae
push
push
push
or
push
int
aam
leave
jmp
in
pushf
pop
mov
std
iret
hlt
pop
loopne
rcrb
mov
push
cmc
mov
sbb
mov
leave
sub
or
fidivrl
sbb
add
jmp
push
hlt
aam
loop
adc
inc
mov
jne
mov
or
loop
addr16
mov
lret
fnsave
cmpsl
mov
pop
hlt
daa
outsb
repz
subl
and
cmpsl
push
out
or
sbb
inc
dec
push
xor
mov
shlb
fsubrs
repnz
xchg
fs
push
popf
cmpsl
cs
pop
out
fs
movsl
dec
mov
aam
jnp
outsb
jbe
imul
int
jb
addr16
in
sub
dec
dec
ljmp
sbb
jp
or
cwtl
cmp
add
adc
jecxz
insl
cli
add
jl
push
jns
inc
jno
out
mov
mov
pop
scas
jo
arpl
cmp
fldcw
or
ds
push
fwait
sbb
loopne
fiadds
jno
repz
out
xor
icebp
adc
pop
xchg
inc
les
xchg
push
add
aam
sub
loope
aaa
aaa
popa
sub
lea
inc
imul
adc
test
inc
xor
jbe
xchg
loop
test
leave
adc
imul
cmp
stc
repz
pop
inc
fisubs
cmp
cmp
jno
pop
xor
sbb
js
icebp
xor
loope
aaa
test
outsb
xchg
cmpsb
cltd
sub
scas
rorl
cltd
das
shrb
out
pop
push
js
fs
enter
jnp
enter
mov
pop
pop
or
xor
pop
xor
stos
jl
or
jp
in
pop
in
cmpl
fldenv
mov
repnz
rcl
fwait
dec
insl
jo
mov
mov
xlat
dec
in
sub
lds
and
xchg
pop
or
xchg
and
cs
or
ret
and
test
pop
mov
imul
cmp
and
int
fnsave
dec
adc
sbb
outsl
add
pop
repz
inc
clc
rorl
fwait
addr16
movsl
adc
int
and
movsb
neg
in
mov
push
out
movsl
add
mov
jp
cmc
pop
push
jmp
ds
insb
aaa
mov
data16
cmpsl
std
mov
cwtl
sarl
js
xor
mov
or
mov
movsb
pop
jle
stos
add
xlat
clc
dec
pop
in
xchg
mov
popf
xchg
inc
mov
xor
pextrw
sub
int
mov
subl
jecxz
out
mov
and
out
dec
adc
mov
xchg
iret
push
ljmp
sub
fimull
xor
dec
imul
filds
pop
push
xor
in
sub
jno
es
loop
inc
pushf
pop
mov
jle,pn
inc
cmp
scas
andl
mov
push
lret
addr16
ret
shll
sbb
and
jecxz
or
les
sub
sbb
sti
clc
push
dec
sub
arpl
loopne
push
pop
outsl
sbb
cmpsb
outsl
dec
mov
filds
or
inc
sti
xor
sarb
jecxz
sahf
inc
pop
xchg
mov
add
jno
add
xor
mov
je
ljmp
cmp
les
in
cli
cltd
popa
dec
call
pop
rcr
loope
nop
lods
xchg
sbb
pop
jo
cmp
call
nop
adc
jl
adc
pop
stc
imul
clc
imull
mov
xchg
loope
repnz
or
dec
loop
add
fdivr
fcomps
push
mov
out
cmp
mov
test
ret
sub
repz
or
push
insb
cld
sbb
incl
dec
fsubp
insl
loop
xchg
push
mov
dec
pop
xchg
in
jl
iret
rcr
xor
sub
rcrb
mov
js
icebp
mov
push
add
mov
shrb
and
outsb
or
mov
jbe
jle
mov
jp
mov
lds
nop
repnz
imul
xor
aam
mov
fcoms
shlb
cmp
mov
dec
fistpll
lret
cltd
push
xchg
xchg
lret
insl
jge
scas
cmp
sti
dec
icebp
movsb
sbb
push
or
sbb
cmp
add
jno
pop
pushf
cltd
shlb
and
ss
inc
jmp
testl
int3
fidivrl
jae
push
scas
cmp
ja
clc
mov
jecxz
aad
call
pusha
fwait
sbb
test
dec
inc
nop
addr16
xor
hlt
dec
cmpsb
sub
gs
sbb
shl
mov
xor
shll
mov
adc
iret
loopne
or
ss
pop
lock
loop
fadds
testb
jmp
aam
push
bound
arpl
fstp
and
and
jmp
in
aad
add
cmpsb
shlb
push
push
ds
xchg
dec
iret
int3
adc
push
dec
rcl
fistpll
mov
add
addr16
xor
jno
jmp
lds
push
and
movsb
sbb
xchg
and
mov
mov
shlb
pushf
roll
scas
push
jae
mov
cmp
add
int
iret
dec
addr16
jne
add
xor
and
cmp
mov
mov
jge
pop
hlt
inc
std
call
stc
cmp
std
scas
sub
adc
mov
push
in
mov
mov
daa
add
ret
jg
ds
push
jbe
es
inc
test
cmp
inc
faddl
stos
ds
sbbb
sbb
cld
xchg
fld
fs
xchg
jg
aas
sub
jbe
mov
cli
test
xchg
jno
adc
outsl
jmp
lds
push
testl
outsl
cmpl
cs
lret
je
enter
mov
fimuls
data16
sub
sub
sbb
out
push
mov
sbb
push
mov
xor
mov
pop
inc
stos
sbb
test
std
loope
andl
je
inc
cld
jo
jecxz
clc
cwtl
mov
cmpsl
insb
inc
xchg
lret
dec
mov
inc
les
dec
das
dec
fsubl
jbe
insb
rorl
mov
test
repz
or
into
pop
cmp
and
fidivs
cwtl
push
push
imull
sbb
mov
xchg
adc
in
shl
mov
dec
daa
and
pop
ss
and
push
mov
push
mov
jb
or
inc
lret
lret
cmp
imul
mov
sti
out
push
push
and
movsb
jae
pop
loope
inc
into
jne
mov
sbb
insl
sbb
dec
fs
int3
loopne
cmc
jmp
pusha
repz
ljmp
leave
fidivl
mov
inc
pop
xor
adc
or
repz
loope
push
pop
ja
pop
sub
mov
aad
xchg
insb
fxch
stos
into
stos
or
bound
dec
sub
scas
dec
xchg
inc
out
out
cmpsl
and
lret
test
loop
pop
cli
sub
cltd
mov
mov
push
dec
push
inc
xchg
mov
stos
ret
or
lock
js
iret
insb
sahf
add
push
gs
dec
xchg
push
stc
sti
test
push
inc
cs
dec
push
cmovns
mov
loopne
add
sub
cmp
adc
xor
pop
cli
out
ja
push
or
dec
push
dec
jnp
pop
inc
lret
out
jae
adc
test
rcrb
xchg
jmp
add
push
int
loopne
jg
or
fsts
stc
aam
aad
xchg
mov
loope
lds
pop
jp
mov
xor
ficompl
cmp
or
cltd
ficompl
push
dec
push
add
push
dec
xchg
or
mov
cmc
jns
sbb
inc
and
push
fcoms
pusha
std
addr16
mov
jmp
or
and
pop
mov
jo
rolb
imul
pop
clc
mov
xor
jecxz
mov
gs
jo
addr16
lahf
in
aaa
ljmp
leave
nop
scas
jle
adc
pop
push
or
xchg
mov
xlat
mov
push
out
mov
sti
sbb
fists
fcmovbe
xor
mov
repnz
repnz
push
xchg
gs
or
inc
lock
cmpb
repz
inc
mov
in
cmc
push
enter
xor
dec
ret
adc
pop
push
jo
shl
pop
add
and
inc
cld
jl
jmp
lret
out
mov
sub
int
cmc
pop
and
xor
pop
stos
arpl
out
aas
punpcklwd
mov
fcmovnu
mov
cmp
add
or
sahf
fisttpl
int3
pop
stos
cmp
push
out
pop
jg
verr
cli
sahf
bound
push
dec
dec
aaa
in
mov
inc
xchg
scas
jns
popa
mov
xlat
pushf
jge
mov
inc
sahf
popa
in
fisttpl
mov
cmp
fldenv
pop
cmp
sub
mov
loop
mov
rorb
lods
stc
xchg
or
push
mov
loopne
das
add
popa
repnz
out
data16
or
in
in
inc
popa
nop
ret
out
add
push
js
imul
movsb
icebp
push
popa
popa
les
aas
shll
adc
int
fdivrp
xchg
jno
gs
dec
add
iret
js
xor
or
and
nop
add
or
push
or
in
sbb
inc
xchg
xor
test
pop
outsb
dec
cmp
mov
out
inc
jbe
mov
dec
pop
shrl
push
xchg
loop
jp
pop
xchg
pop
inc
pop
jae
leave
jge
and
fcos
mov
adc
leave
aad
xor
mov
ss
rcrb
mov
xor
fstp
loope
sub
ljmp
adc
mov
les
gs
ficoml
jecxz
insl
push
cs
fisttpll
push
mov
cmpsl
mov
or
jnp
inc
mov
push
int3
push
inc
fmuls
add
jo
adc
in
hlt
xor
fwait
sub
cltd
mov
dec
testl
insl
lret
pop
cs
and
adc
fcmovbe
addb
push
popf
mov
aad
mov
fbstp
and
mov
cmp
jns
cmc
mov
xor
fsubl
movsb
xchg
jne
es
mov
sub
cmp
pop
mov
ja
bound
ds
cli
sbb
hlt
cmc
lret
cmp
aad
sub
push
aaa
and
das
xlat
cmp
sarl
mov
addl
rorb
add
shll
cmc
and
lds
mov
xchg
mov
cmc
sbb
sub
push
test
out
or
std
mov
shll
and
jbe
ds
cmp
fs
push
push
xchg
daa
jno
in
jbe
xor
mov
gs
enter
adc
js
jecxz
jnp
out
fists
jnp
push
mov
inc
jle
repnz
mov
cmpsb
iret
pop
adc
lock
xchg
xor
xchg
mov
pop
fwait
in
mov
push
inc
jmp
add
or
adc
pop
out
sahf
inc
add
pop
jmp
mov
mov
ffreep
cmp
cmp
adc
inc
xor
mov
inc
imul
cmpsb
and
sti
mov
mov
adc
outsb
push
mov
or
hlt
sbb
movsb
dec
ds
aaa
mov
lret
xchg
xchg
inc
loopne
out
dec
sti
stos
add
aaa
ljmp
sub
shrb
aam
sbb
stos
subb
movsl
popa
mov
push
sbb
jnp
jbe
fstpt
or
mov
and
mov
sub
das
rolb
or
xor
fcompl
lea
or
pop
push
inc
int3
leave
mov
into
scas
mov
add
sub
xor
inc
jle
mov
notb
push
shll
dec
cmp
mov
cmp
sub
inc
adc
orb
bound
push
xchg
movsl
stos
icebp
dec
inc
dec
add
sub
adc
adc
aad
stos
or
out
mov
cmp
jns
mov
fstl
mov
ljmp
jp
lcall
push
mov
les
xor
aam
pop
test
stos
ficoml
inc
pop
gs
dec
or
movsb
insl
lods
rolb
cwtl
adc
into
aam
jmp
mov
movsb
dec
in
adc
stos
dec
or
dec
lcall
or
push
es
shrl
mov
movsb
call
adc
jns
popf
rcrl
jae
clc
cltd
out
mov
pop
inc
shll
and
cmp
jg
push
inc
pop
adc
adc
push
test
pusha
dec
mov
iret
popa
adc
or
cmp
adc
push
fwait
mov
lcall
pop
lods
imul
ret
mov
sbb
ret
jg
in
sub
movb
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
jmp
jp
int
ret
add
pop
sbb
std
sti
mov
bound
bound
cmc
imulb
add
ds
inc
out
fnsave
mov
imul
out
js
pop
mov
pop
jno
ljmp
out
xor
into
hlt
cli
mov
mov
xchg
adc
je
pop
addb
dec
imul
insb
jp
test
loopne
pop
or
daa
jle
les
call
cmp
pop
sbb
popf
mov
and
sub
das
jg
cmp
mov
inc
and
pop
icebp
adc
stos
xchg
shrl
cs
fstps
xchg
into
sbb
das
bound
stos
daa
xchg
addr16
xchg
jge
call
xor
push
pop
add
loope
sub
add
xchg
out
add
adc
mov
roll
sub
xor
fistl
sub
push
push
xchg
nop
pop
dec
int
and
test
ficomps
jns
add
xchg
sbb
adc
dec
xchg
scas
xchg
popf
mov
pop
xor
push
lds
xchg
cmpsl
incl
xor
cld
lret
nop
sti
fstpl
pop
ss
mov
xor
call
jne
gs
data16
lods
jecxz
jecxz
xchg
mov
mov
rcr
and
pushf
je
lret
mov
sbb
mov
pop
lret
repnz
mov
jg
xor
mov
push
outsb
adc
mov
in
mov
das
lock
mov
mov
lcall
into
sti
out
mov
out
jnp
les
mov
xchg
mov
push
mov
shll
mov
aas
cmpsb
out
popa
int
adc
cmc
or
dec
or
mov
mov
addr16
js
push
add
jo
je
das
xchg
push
add
ret
repz
mov
inc
push
mov
push
insl
insb
aaa
sub
lahf
cltd
jp
sahf
incb
mov
mov
cs
xor
jge
fnstcw
add
hlt
pop
push
jl
stos
xchg
fistpl
out
dec
stc
loope
xor
mov
shlb
outsb
cmp
inc
ljmp
daa
xchg
pop
dec
push
pushf
out
sarl
in
outsl
inc
addl
inc
jns
sbb
lds
add
sbb
lea
orb
inc
imul
lahf
add
das
inc
jecxz
dec
std
cmp
lret
and
pop
xor
mov
es
rcl
mov
xchg
int
out
mov
cmpsb
xlat
jnp
jae
inc
arpl
pop
push
push
jmp
ja
out
and
loopne
and
popf
adc
aam
cwtl
mov
nop
jno
xorl
cmc
shl
sbb
cmpsl
add
mov
add
lods
push
in
imul
cmp
mov
sub
and
mov
cmovne
or
in
pop
lea
xor
or
pop
mov
div
jne
ljmp
outsb
xor
popf
dec
ror
lds
test
and
les
insl
lods
sar
cmc
mov
sub
jb
aam
inc
sahf
lods
ror
mov
sbb
sbb
or
pop
sub
outsl
xchg
dec
das
mul
fnstenv
insb
or
or
in
in
sub
inc
pushf
movsl
test
jae
push
stc
sbb
xor
loope
mov
inc
dec
les
sbb
cli
push
fildll
lods
jg
aam
dec
mov
call
dec
add
jns
sub
and
stos
popa
or
js
lcall
xchg
mov
out
jb
jno
rorl
cmpsb
jp
pmullw
outsb
pop
scas
or
pushf
mov
testb
roll
fildl
sbb
xor
or
xlat
fcmovnu
test
mov
mov
mov
cmp
jbe
pop
movsl
fnstsw
decl
aaa
pop
xchg
and
fdivrs
xchg
jl
scas
scas
mov
adc
xor
and
gs
xor
test
aad
jns
or
cli
cmp
jo
dec
pop
loop
repnz
jle
xchg
sahf
mov
dec
clc
xchg
jo
inc
xchg
xchg
nop
inc
xor
inc
cmp
les
push
xchg
imul
sub
bound
xchg
dec
dec
shrb
jo
pop
adc
add
and
and
mov
in
imul
and
or
lahf
inc
popa
dec
fwait
sub
push
mov
out
dec
mov
jmp
cmpsb
lahf
adc
sub
test
xor
adc
jbe
fnstcw
or
dec
cmpsb
negl
outsb
mov
les
jecxz
and
pop
lock
xchg
in
push
dec
cs
int
cmp
sti
frstor
loop
cs
shlb
push
lea
in
out
mov
mov
sbb
loopne
addr16
loope
sbb
xchg
jnp
cld
push
sbb
xor
popf
pop
cmpsb
es
xor
add
add
mov
xor
or
or
ljmp
sbb
dec
xchg
push
fcompl
lret
pop
out
idivb
xchg
ret
fucom
lea
sub
shll
mov
aaa
mov
stos
arpl
ret
les
dec
push
dec
push
mul
xchg
add
hlt
inc
jmp
hlt
mov
xor
ss
xchg
dec
repz
mov
or
lea
dec
mov
xor
mov
mov
dec
filds
cmp
rorl
sarb
mov
add
roll
sub
sarl
popa
and
cltd
jnp
jb
xchg
cli
hlt
lods
or
and
das
fwait
cwtl
imul
notl
jno
dec
shrl
leave
pop
cmp
inc
cmp
outsl
add
dec
xchg
addr16
inc
xor
pop
pushf
fnstsw
xchg
jp
insb
into
gs
data16
mov
fdivs
sub
aad
repz
dec
push
and
sub
loopne
dec
fsubs
add
cmc
les
jns
faddl
shll
jg
xor
jle
inc
lea
push
pop
jecxz
and
xchg
adc
cmpsb
add
mov
fcoml
push
mull
std
push
repz
push
cmp
pop
inc
pop
leave
or
aas
outsl
scas
xchg
jns
mov
jnp
adc
inc
pop
or
add
es
mov
mov
push
cmpsb
repnz
scas
int
int3
shlb
pusha
clc
inc
lods
sub
call
mov
xchg
sub
push
out
rcrl
ja
mov
jg
fisubl
add
xchg
inc
push
mov
popf
subb
sub
decb
lea
addb
xchg
fnstsw
push
adc
ja
das
repnz
xor
xor
jb
push
test
pop
pop
adc
xor
or
out
dec
push
int
fsubs
scas
push
inc
fwait
cli
jno
int3
adc
repnz
mov
int
loopne
ja
in
hlt
lea
fmull
mov
ret
sub
xchg
test
sahf
cli
out
adc
cmp
sbb
das
push
xor
std
decl
mov
pop
incl
stos
inc
iret
ss
lock
xorb
pop
push
adc
sub
mov
sbb
dec
lock
ja
mov
loopne
pop
leave
in
mov
int3
incl
cmp
test
sti
imul
mov
mov
jae
lods
cmpsb
or
sbb
mov
cwtl
fwait
imul
mov
nop
imul
dec
into
sbb
and
xor
dec
jbe
xor
adc
sbb
pop
jecxz
cmp
or
xchg
aad
and
test
and
es
xor
enter
sub
and
add
pop
sarl
mov
mov
mov
pop
dec
insl
scas
mov
adc
daa
aaa
cwtl
inc
fstl
cmp
cltd
insb
xlat
cmpsl
div
sbb
outsl
sbb
inc
mov
jge
cmp
xor
es
popl
xor
xchg
daa
out
mov
xor
jl
xchg
pushf
xlat
jge
cmpsl
jecxz
dec
sub
xchg
ja
scas
fidivrs
xchg
cld
jo
repz
aas
xchg
iret
sti
imul
icebp
addr16
and
adc
sbb
pop
xchg
test
dec
mov
and
pushf
pop
xchg
aad
popa
test
rcll
dec
rcl
mov
aas
mov
inc
mov
mov
popa
dec
jg
xchg
mov
cmpsb
in
aas
sub
jo
fwait
cmp
adc
adc
adc
xchg
test
cmp
xchg
scas
cmpl
pushf
jbe
pop
sub
insb
lret
cld
cld
push
mov
xor
jo
or
xor
push
or
pop
mov
cld
inc
add
mov
and
shl
hlt
cmp
inc
pop
sub
jbe
mov
into
mov
call
ss
jns
gs
push
sub
sbb
in
out
adc
xor
inc
cmp
fidivrl
dec
jecxz
xorb
cltd
sub
mov
sbb
mov
out
add
adc
ds
imul
push
inc
repz
inc
mov
pop
dec
lds
xchg
bound
scas
push
ja
pop
aam
addr16
aaa
jle
sub
mov
movsb
push
jae
out
int
cltd
data16
push
mov
jle
or
pop
scas
mov
rcrb
add
lods
call
lahf
lds
imul
stc
push
mov
iret
xchg
dec
jne
cli
sbb
nop
sbb
fwait
dec
xchg
loope
lret
add
lahf
adc
mov
dec
xchg
andl
sbb
sub
pop
dec
pop
xchg
inc
fs
popf
stos
sub
mov
inc
xchg
sbb
push
pop
pushf
adc
cli
jg
add
lods
xchg
pop
bnd
sbb
and
das
adc
dec
cmp
pop
negl
fists
int3
shlb
shrb
and
or
xchg
cmpl
mov
ds
or
arpl
add
ss
mov
mov
sbb
mov
or
repnz
cmp
dec
movsl
shll
jge
das
test
in
lret
push
stc
xchg
mov
mov
test
xchg
mov
dec
inc
xchg
psrlq
adc
scas
subb
daa
movsl
xlat
sbb
fnstcw
inc
jg
jb
sub
push
add
push
and
sbb
shrl
in
pop
shrb
sti
jb
jg
mov
imul
dec
das
sbb
push
cmp
cli
outsb
int
ljmp
stos
rcr
in
ja
test
sub
sti
mov
add
test
push
pop
fnstcw
addr16
xlat
test
push
stos
shl
orb
adc
sbb
test
jno
push
or
sub
ljmp
lods
mov
ljmp
mov
sub
push
int
cwtl
dec
insl
and
mov
icebp
int
loop
fsubs
pop
mov
outsb
sub
sub
data16
mov
js
cmpsl
andl
pop
outsl
rclb
sub
jp
jmp
loop
aad
mov
mov
mov
xor
pop
inc
out
cmp
inc
sbbb
in
add
xchg
sbb
lods
into
mov
fistpll
sbb
mov
leave
mov
mov
cmpsl
adc
mov
pop
lret
lcall
mov
pop
addr16
push
sbb
sbb
and
flds
rorl
xchg
lods
sahf
neg
sub
adc
mov
xor
enter
imul
addr16
and
dec
pop
clc
cmp
add
cwtl
insb
nop
dec
ljmp
mov
cwtl
or
pop
in
mov
mov
sub
movsb
xchg
or
bndstx
leave
leave
es
cmpsl
orb
jmp
cmp
pop
scas
stc
push
xchg
dec
jp
sub
iret
int3
push
push
das
cmpsw
jns
cmp
lret
pop
aas
and
push
sti
cmp
ret
pop
push
jg
mov
mov
roll
push
shl
cmp
mov
inc
lods
inc
pop
fstpt
sub
cmp
loope
ljmp
shlb
clc
xor
enter
fildll
xchg
or
dec
jecxz
addr16
xor
adc
xchg
cmp
inc
sub
out
shll
and
stc
popa
and
jl
sub
in
mov
push
sbb
and
stc
dec
cli
outsb
mov
ljmp
icebp
outsb
mov
int3
in
push
or
or
ror
aad
lock
or
pop
test
pop
lret
mov
and
loop
mov
push
xchg
fcmovnu
shlb
mov
lods
sbb
cmp
leave
cmpsl
aaa
push
fwait
jnp
pop
lahf
push
push
or
fs
push
imul
jmp
cmp
add
push
lret
cmc
cmp
mov
xor
xchg
dec
pop
xchg
mov
mov
dec
xchg
mov
ja
xchg
int3
loopne
push
fildll
lods
ds
mov
idiv
push
repnz
dec
fs
xchg
jne
adc
add
aam
repz
cltd
pushf
and
dec
imul
movsl
stos
sub
sahf
daa
push
pop
dec
daa
repnz
out
pop
mov
ficoml
dec
push
mov
jo
movl
divb
stc
scas
outsb
lods
and
mov
test
je
scas
or
mov
dec
jae
or
sarl
shll
mov
xor
push
mov
hlt
push
into
pop
test
in
mov
inc
pop
pushf
rorb
inc
mov
daa
xchg
dec
psubd
in
sbb
shll
mov
scas
insb
je
loopne
rolb
adc
xchg
lcall
sti
inc
sarb
mov
inc
xchg
scas
stos
lock
xor
xchg
mov
inc
addl
mov
adc
mov
cmp
mov
or
or
cmp
jg
pop
leave
xor
out
inc
xchg
fadd
std
dec
mov
aam
lods
pop
clc
sbb
daa
aam
dec
stc
push
out
into
in
push
sbb
inc
xchg
add
nop
or
aaa
xchg
jb
xor
xchg
loopne
push
aas
and
jnp
or
les
inc
mov
push
out
test
pop
sbb
mov
pop
push
xchg
push
sbb
mov
int3
loop
js
fs
icebp
icebp
rorb
cmp
sbb
mov
lcall
sbb
cmpb
imul
dec
adc
sub
popa
fwait
lret
add
push
js
in
into
pop
xor
cld
jecxz
pushf
cmp
pop
pop
push
dec
mov
notb
push
mov
mov
inc
push
aad
sahf
movsb
out
jae
in
cmp
jle
mov
xchg
push
cmp
cmp
inc
ret
shll
call
mov
adc
add
sbb
addl
mov
outsl
les
mov
xchg
sbb
das
or
xor
cltd
pop
sbb
push
out
inc
jno
mov
push
mov
jne
out
stc
sbb
out
scas
rcr
enter
popa
xchg
shr
in
mov
dec
xchg
nop
pushf
push
mov
iret
ret
sbb
adc
lock
pop
cld
enter
dec
push
sbb
fstpt
int
pop
xor
js
pop
jg
xchg
jnp
call
xchg
lret
mov
arpl
bound
ljmp
fs
pushf
add
int
add
push
repnz
jbe
movsl
sub
stos
ja
hlt
mov
push
in
jno
in
mov
imul
daa
cld
mov
lret
rclb
imulb
xchg
les
stos
pop
into
sbb
lods
cs
sbb
adc
xor
fs
mov
cmp
jmp
xor
xchg
cmpsl
stos
xlat
mov
cmp
xor
enter
sbb
and
or
pop
mov
lcall
jno
lods
cmp
dec
jnp
jmp
xor
insb
mov
popf
jo
es
jb
fnsave
loope
test
or
mov
movb
fistpl
push
push
pop
adc
adc
cmpsb
mov
pop
xor
mov
mov
lods
movsb
mov
sub
cmp
test
test
fadds
ss
cmpsl
imul
and
ss
shr
cmpsb
arpl
dec
or
fsts
ja
mov
pop
int
push
iret
insl
push
xchg
test
dec
mov
or
lcall
pop
mov
mov
cmc
and
fisttps
hlt
mov
pop
faddp
add
je
insb
mov
cmpsl
icebp
mov
mov
pop
mov
mov
inc
sbb
push
xor
lea
adc
xor
out
mov
fldt
jecxz
aas
sti
lock
dec
mov
sbb
insl
push
inc
add
jne
mov
aaa
mov
cmpsl
mov
enter
hlt
je
outsl
push
inc
lahf
sbb
pop
lret
add
adc
dec
inc
insl
xor
inc
jp
cmpl
add
rcl
jns
imul
repz
pop
lahf
loopne
and
mov
loopne
xchg
inc
mov
cmp
pusha
adcl
mov
adc
sbb
dec
out
aam
cmc
sub
ljmp
mov
stc
adc
sti
adc
hlt
mov
mov
loope
int
lods
stc
clc
xchg
xchg
jmp
or
add
or
movsb
xchg
cmc
add
or
sbb
out
sbb
jns
cmpsb
or
pop
hlt
mov
add
jmp
dec
jecxz
cli
aas
aas
and
filds
scas
cmp
adc
sub
mov
mov
dec
sub
xchg
jo
stos
cmpsb
fidivl
int
das
inc
xchg
loop
jg
shlb
xor
sbb
sbb
outsb
aam
fwait
xchg
and
sar
bound
roll
sub
mov
lcall
mov
xor
jb
xor
lds
les
xchg
stos
or
adc
adc
popf
shll
xchg
movsb
dec
push
roll
jp
pusha
mov
lret
pop
cmpsl
aas
jns
fscale
or
dec
add
test
jmp
add
mov
pop
mov
pop
lret
xchg
sub
roll
ss
mov
fisttpll
leave
imul
lret
scas
icebp
xchg
cwtl
loopne
imul
imul
sbb
xor
xor
push
lret
dec
addb
daa
xor
out
icebp
stc
sbb
pop
dec
in
or
push
mov
cmpsb
pushf
inc
xchg
ret
sub
sub
ja
push
pop
test
pop
push
push
scas
xchg
enter
outsb
dec
ficoms
fmulp
xlat
cmp
stc
into
je
push
cmp
pop
and
inc
or
loopne
jbe
shrl
fwait
testb
sub
pop
dec
pop
lcall
lret
ret
sub
loope
inc
push
xor
test
or
imul
or
rol
fistpll
inc
jb
add
les
xor
imul
sbb
fisubrs
mov
pop
add
adc
mov
fimuls
lods
fiaddl
push
xor
pop
ror
dec
das
daa
push
push
jg
ret
add
cld
mov
inc
movsl
push
mov
lret
in
xchg
icebp
xchg
cmp
xchg
sbb
ss
pop
cmp
xor
jne
jb
cmp
pusha
stc
iret
dec
mov
enter
push
dec
mov
inc
aas
shl
mov
add
jne
rclb
add
xchg
mov
add
js
cmp
sub
mov
adc
rorl
mov
or
cmc
and
cmp
or
mov
lods
fmul
lret
jne
stos
and
outsl
xor
xchg
mov
outsb
lret
dec
sbb
je
cmpsb
sbb
push
dec
fucomp
scas
xchg
in
xchg
dec
jb
mov
js
negb
jmp
cli
iret
test
dec
shlb
movsb
mov
lock
fcmovb
or
jmp
lods
cmp
mov
shr
mov
aam
pop
pushf
rorl
ret
cld
or
pop
xchg
adc
jecxz
cmp
dec
xchg
jmp
pop
fiadds
stos
inc
xchg
pop
lods
or
sahf
fnsave
push
pop
cmp
movsl
push
popf
popf
xchg
push
rol
repz
sub
xchg
nop
loop
stos
loop
ret
mov
xchg
mov
jmp
lds
jns
mov
ret
in
ds
out
out
add
push
push
ss
daa
jo
sub
js
pushf
jb
mov
popa
imul
sub
sar
sub
dec
pop
mov
dec
cmp
dec
imul
adc
pusha
sbb
xchg
ss
pop
int
push
add
xor
into
addr16
cmp
cld
dec
sub
adc
cltd
push
sub
pop
mov
outsb
mov
adc
ja
mov
jle
xor
loope
xchg
jns
js
and
fsubs
xorb
aas
jno
mov
leave
das
cmp
cwtl
rclb
outsb
loopne
mov
pop
popa
and
push
repnz
out
les
dec
pop
js
cmp
push
int
jns
mov
dec
cld
insb
mov
or
mov
in
xor
dec
ja
mov
xchg
les
adc
addb
pop
or
sbb
int3
aad
clc
xlat
pop
mov
jae
jno
pop
scas
vmovss
ljmp
jns,pt
std
add
sbb
negl
add
dec
movsl
sub
hlt
dec
mov
push
mov
jmp
mov
popf
enter
clc
test
insl
xchg
xchg
cmpsl
xchg
xor
xor
pusha
leave
adc
loopne
jp
ja
in
insl
jmp
push
adc
shrl
xor
enter
inc
lcall
negb
or
shrb
fsubrs
test
dec
stc
test
mov
xchg
rorl
xchg
mov
push
std
mov
pop
jge
xor
test
inc
std
and
addr16
cmp
dec
call
dec
inc
mov
adcb
inc
mov
call
cmpsb
push
inc
cs
or
sbb
nop
fwait
mov
mov
ja
aam
jb
lcall
into
mov
inc
xchg
dec
lret
stc
cmpsb
fsubp
and
xchg
cmp
stos
xor
dec
incb
test
cmp
in
mov
nop
cmc
or
dec
addl
test
xor
cmpsb
dec
inc
aaa
repnz
fcomi
add
xor
adc
sbb
or
in
jbe
or
loope
outsl
push
test
jecxz
mov
mov
out
and
or
cmp
jne
jo
mov
and
cmpsb
or
and
mov
sbb
push
adc
sub
add
cmp
adc
jmp
cmpsl
divb
fdivrl
movsl
lock
and
pop
in
lea
out
and
into
adcb
mov
xchg
add
push
test
and
iret
fcoml
fistpll
loopne
mov
std
mov
dec
adc
or
jecxz
cmp
divb
mov
pop
or
lea
int3
adc
or
test
or
xchg
imul
xor
jne
cmp
lea
daa
add
cmp
mov
clc
adc
fdivrl
push
insb
test
pusha
jle
stos
cmpsb
cmc
and
pop
shlb
mov
add
aas
subl
jecxz
or
push
lret
push
add
sti
push
inc
jns
cmp
adc
jo
test
es
mov
inc
push
cld
hlt
fsubrs
fbstp
sti
jmp
out
xchg
fwait
icebp
dec
pop
cmp
mov
inc
rclb
or
inc
ljmp
push
fimull
ret
popf
ljmp
xor
mov
or
mov
mov
and
mov
adc
out
insb
imul
out
lds
mov
mov
or
pop
ret
mov
or
outsb
out
iret
cmp
std
push
pop
pop
push
int3
cs
mov
cmpsb
jecxz
push
test
push
mov
lahf
into
add
add
sbb
scas
mov
popa
adc
imul
or
enter
xor
xchg
mov
sti
lods
mov
inc
mov
pop
fimuls
stc
lods
jg
iret
push
int
cmp
out
lcall
cmc
mov
dec
add
jb
jg
pop
pop
xor
fs
loop
mov
rcrl
mov
xchg
das
fwait
mov
inc
out
mov
jl
xor
or
mov
fnstcw
adc
mov
in
clc
sbb
das
mov
dec
xchg
cmp
sti
cmp
add
mov
push
pop
idivl
push
mov
sbb
sbb
mov
and
push
cmp
es
imul
sub
add
push
outsl
xor
outsb
xlat
es
sub
push
shr
rorb
pop
xor
adc
jmp
icebp
add
add
test
pextrw
subb
jp
push
cmc
xchg
mov
shr
lret
mov
es
mov
leave
and
cli
mov
call
dec
push
sub
sbb
ja
inc
int3
mov
int
jmp
bound
cmp
jbe
in
dec
jge
rclb
mov
or
fistpll
push
cmp
popf
push
cs
xchg
xchg
cmpsl
rcrb
inc
cmp
movsl
mov
cmpsl
enter
mov
fisubl
in
sahf
sub
imul
movsl
mov
push
and
bt
fwait
push
xlat
and
idiv
es
ljmp
lods
sbb
ret
dec
sub
cld
add
in
sbb
push
jge,pt
add
pop
adc
mov
sub
mov
icebp
cs
and
mov
imul
sbb
lods
sub
into
dec
sti
sub
xlat
and
jmp
and
jmp
lret
les
jge
in
push
xor
daa
adc
nop
lret
mov
cltd
lcall
xchg
sti
ja
leave
dec
test
or
pop
sub
jecxz
ret
inc
fcompl
pop
aaa
out
push
cmp
mov
dec
push
iret
pushf
testl
jle
je
sub
jg
jle
mov
jle
sub
or
int3
aad
mov
jae
out
and
add
xchg
xor
adc
into
jp
insl
popf
xchg
sbb
xchg
setg
loopne
cltd
add
loope
push
mov
mov
add
push
lods
sub
sarb
add
movsl
jnp
jecxz
pop
pop
clc
mov
into
xchg
jno
sbb
mov
icebp
adc
dec
ret
incl
and
into
cmp
sarb
jo
add
leave
mov
sti
or
mov
sahf
adc
mov
sbb
mov
xor
scas
fstps
and
loop
cmpsl
mov
mov
scas
pusha
aaa
mov
insb
cmpsl
jge
lods
mov
gs
cmp
addr16
rcr
jo
dec
movsl
outsl
jns
mov
cld
hlt
test
jo
dec
push
pusha
jae
inc
xorl
aaa
movsl
inc
dec
out
imul
ds
nop
xchg
cmp
enter
mov
xchg
es
push
mov
push
nop
adc
add
aaa
or
sbb
mov
push
xchg
mov
sbb
inc
andb
or
fs
lods
adc
sbb
cmpb
xchg
dec
xor
fs
cli
push
sub
outsb
clc
or
mov
jae
scas
ret
cmpsb
mov
scas
call
jo
and
xchg
sahf
aad
mov
lods
test
adc
inc
data16
pop
negl
popf
shlb
sti
lods
inc
fwait
insb
inc
add
cmp
sub
jecxz
cmp
xorl
ja
pop
filds
stos
jmp
scas
add
or
add
gs
aas
stc
pop
mov
push
out
add
arpl
dec
pusha
cmp
mov
cmc
imul
rol
sub
mov
sahf
scas
xor
add
pop
mov
dec
xor
nop
lods
fstpt
jle
jne
test
pop
and
cmc
add
push
xchg
loop
sbb
leave
push
int
cmp
les
sbb
loopne
addr16
mov
lds
and
das
sub
aaa
or
xor
xchg
icebp
push
cmpsl
mov
cmp
lock
fs
xchg
data16
aad
fistl
pop
cmp
pop
imul
xchg
jo
cmpsb
adcl
bound
addr16
fbstp
hlt
dec
xor
push
sbb
imul
jl
mov
xor
or
clc
dec
jg
mov
cld
mov
pop
out
cmp
imul
roll
jp
push
fstpl
into
cmp
mov
out
std
xor
cltd
sbb
in
pop
sub
xor
outsl
push
add
jbe
frstor
push
stc
das
mov
movsl
fidivs
xchg
into
fnstsw
fwait
push
sti
loop
pop
xor
sub
dec
inc
inc
insb
xor
outsl
mov
mov
cmp
movsl
add
dec
and
fadd
pop
adc
sti
inc
cmp
mov
push
test
pop
test
mov
cmp
ljmp
rclb
and
cmc
xorl
iret
fsubrs
pushf
or
adc
sti
lahf
xor
and
jmp
mov
addr16
jmp
cs
repnz
cmpsb
cmp
xor
cmpsb
notb
cmpsb
aas
adc
dec
jb
leave
cmp
mov
push
mov
scas
lret
mov
es
ds
and
pop
dec
sub
or
cmp
in
jns
jl
sub
cmp
inc
pushl
daa
mov
jge
pop
js
gs
shl
imul
mov
scas
in
inc
outsb
ja
sub
sub
nop
cmpsl
inc
cmp
into
jo
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
sub
mov
and
push
sub
mov
sub
mov
orl
lea
subl
mov
add
mov
mov
adcl
mov
xor
subl
add
mov
mov
add
mov
mov
add
mov
subl
mov
add
add
push
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
addl
mov
adc
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
adcl
mov
mov
mov
add
xor
or
jmp
paddsw
mov
pop
ljmp
jp
popa
pop
bound
push
jmp
mov
xchg
cmpsl
xor
mov
jo
push
xchg
call
xchg
mov
andl
lock
cmp
dec
sahf
cmpsl
inc
mov
pop
shlb
insl
rcrl
inc
dec
xchg
pop
lret
jge
dec
jmp
pop
sbb
aas
out
mov
adc
mov
rorb
jmp
or
inc
in
cmpsb
ficomps
outsb
neg
xchg
or
mov
jnp
popa
ja
mov
jle
int3
stos
aad
enter
fucomip
pop
nop
xor
and
or
addr16
mov
mov
mov
sub
ja
je
fcomip
pop
xchg
das
jb
sub
out
mov
pushl
jmp
lret
sub
stos
sbb
stos
imul
mov
loop
mov
jg
lods
add
filds
cmp
je
adc
stos
les
push
ja
mov
fidivl
pop
push
scas
shl
dec
lds
rorb
fs
xchg
xlat
lcall
daa
scas
rcrb
decl
dec
push
xchg
cmpsl
leave
lahf
push
aam
jno
cli
xor
pop
fs
int
lods
or
js
shll
mov
xor
outsb
add
push
movsl
loope
into
cli
mov
push
mov
add
arpl
mov
rorl
sbb
inc
das
je
dec
fisubl
inc
mov
mov
imull
pop
sbb
into
cld
int3
sub
jne
mov
dec
icebp
test
jl
pop
jl
inc
add
mov
sbb
xchg
mov
in
dec
pop
mov
cmpsl
ss
mov
xchg
mov
iret
arpl
repnz
cmc
in
pop
fcoml
aad
push
push
mov
stos
dec
data16
jle
mov
and
push
adc
cli
stos
bound
jl
xchg
loopne
push
or
dec
inc
out
roll
dec
pop
xor
sbb
or
out
cli
pop
or
ret
jle
mov
fcomps
loope
or
in
mov
dec
and
lock
push
mov
xchg
flds
xorb
or
ss
adc
push
insb
cmpsb
je
fdiv
and
clc
xchg
sahf
mov
adc
jecxz
jo
mov
jno
mov
cli
xchg
inc
andb
aad
js
aaa
inc
and
clc
and
mov
cmp
xchg
popa
mov
lock
test
push
adc
cwtl
int3
xor
xor
clc
ret
pop
stc
pop
mov
gs
mov
inc
arpl
mov
in
loop
jge
cwtl
sbb
fmuls
inc
pop
shll
insb
mov
imul
lods
or
mov
fucomi
pop
inc
adc
xchg
leave
mov
cmp
mov
mov
in
data16
cmp
cld
push
imull
mov
mov
and
mov
fistps
arpl
xor
scas
pop
adc
xchg
inc
out
sar
std
push
jb
sub
pop
cmp
into
aas
pop
fcom
push
add
and
fs
in
cmp
icebp
pop
pop
clc
push
jbe
or
mov
sbb
add
xor
popa
in
or
push
mov
dec
lcall
push
dec
inc
inc
inc
arpl
cmp
push
rorl
dec
mov
lret
sub
jae
rolb
test
or
hlt
jmp
mov
call
out
and
fstps
rorb
mov
jle
xchg
sahf
dec
adc
jnp
es
cwtl
or
pop
loop
mov
mov
sbb
imul
mov
pusha
loopw
push
sbb
pop
mov
stc
lret
mov
mov
loope
std
es
sahf
jle
adc
jmp
scas
fbstp
rcrb
add
aad
popf
out
aad
cmc
xchg
adc
adc
decb
aas
sub
pop
cli
iret
push
or
jecxz
sub
clc
or
cmc
loopne
pop
lock
pop
sub
in
insl
rcll
mov
rol
dec
dec
das
insb
push
mov
dec
cmp
mov
loopne
push
sub
inc
jmp
aas
ds
cmpl
inc
mov
fstps
aad
inc
mov
sar
and
mov
or
lds
xchg
mov
mov
sbb
mov
dec
cli
dec
xor
dec
sahf
call
lods
cmp
cmpsb
pop
mov
loop
movsb
push
sbb
stc
push
jnp
xchg
sbb
aad
jmp
nop
mov
mov
cld
js
int
movsb
xor
xchg
mov
jg
xor
adc
and
ljmp
push
cmp
push
mov
inc
xchg
inc
scas
pop
fstpt
mov
pop
dec
call
jo
adc
add
in
ret
jne
lds
loopne
pop
test
clc
inc
cmc
stos
movsb
lahf
jg
cs
jb
and
cmp
mov
popa
pop
jg
and
sub
out
add
in
jbe
add
orb
addr16
std
nop
or
out
and
scas
push
gs
cmpsb
cmp
or
sub
cmp
add
xchg
and
sbb
pusha
or
mov
rorl
cmc
cltd
out
lods
xor
sub
ret
cmp
dec
stos
or
imul
fs
or
jne
pop
ja
lcall
push
out
push
lcall
ss
out
cwtl
mov
inc
mov
repz
push
insb
sub
inc
push
lret
stos
sbb
mov
clc
scas
in
out
repz
fldt
xchg
inc
push
loope
into
adc
jb
pop
stos
cs
add
icebp
lahf
push
push
ds
clc
pushl
test
add
and
rorl
jp
pop
xor
fidivrl
in
dec
mov
pop
fs
dec
xchg
test
leave
inc
mov
mov
jb
dec
mov
sbb
xor
cmpsb
ds
or
fdivrs
in
jne
outsl
call
jge
jecxz
xor
and
mov
push
and
test
pop
addb
mov
test
xorb
and
cmp
arpl
push
scas
or
adc
adc
jne
jb
ret
loop
fidivs
push
movsb
mov
sbb
stos
dec
mov
adc
jcxz
jmp
jg
sbb
mov
rcrb
test
xlat
mov
inc
and
loopne
out
mov
out
in
out
cwtl
imul
jns
mov
repnz
adc
loopne
xor
jge
jmp
in
xor
mov
test
jno
pop
mov
mov
cmp
dec
pop
shll
or
add
push
or
jo
inc
test
jne
cmp
ja
test
xor
in
mov
js
jecxz
sbb
fildl
jp
jl
xorl
adc
std
stos
or
xchg
pop
test
inc
popf
mov
xchg
arpl
aaa
cmp
jp
xlat
popa
mov
jmpw
ffreep
mov
dec
inc
clc
js
xchg
xorl
pop
std
lds
sbb
clc
and
mov
lds
aas
jbe
test
pushf
mov
lock
jl
test
inc
xchg
jge
icebp
in
lods
aad
loop
dec
or
movsl
stos
push
fbld
loop
inc
outsl
adc
cmp
push
test
inc
in
out
sub
mov
out
orb
xchg
jp
or
jnp
andb
jno
jle
adc
push
cmp
outsb
jns
xor
scas
xor
add
push
shlb
jecxz
jno
add
and
daa
cmc
mov
outsl
inc
fldt
fnstcw
fidivrl
ljmp
cmp
jp
out
mov
fistps
mov
jmp
jle
mov
bnd
mov
stos
insl
mov
negb
pop
test
aas
add
mov
fs
inc
jmp
fwait
das
mov
add
outsl
mov
mov
data16
nop
lret
push
push
mov
or
adc
aam
jmp
pop
movsb
adc
or
jnp
call
dec
inc
mov
jle
xchg
movsl
imul
and
cmpsb
cmp
std
sbb
out
pusha
popf
lret
inc
jle
cmp
add
leave
stos
jmp
push
mov
xor
sbb
xor
adc
jo
icebp
nop
add
pop
xor
mov
test
cmp
rcll
fistps
js
cmpb
jbe
popf
mov
mov
and
sbb
inc
fldl
pop
repz
scas
cltd
cwtl
inc
aad
xor
xchg
fistpll
pusha
cmp
int
pop
cmp
mov
imul
rcrb
rcrb
ret
jno
mov
shl
aam
adc
adc
fs
xchg
fstps
mov
or
mov
sahf
xlat
or
ret
in
arpl
pop
and
add
dec
rolb
or
cs
cli
adc
add
cltd
mov
push
sarl
cmp
mov
or
popa
les
gs
js
insb
lods
cld
cmovb
jnp
aam
or
jecxz
mov
idivl
pusha
mulb
xor
rcrl
hlt
outsl
lods
adc
and
test
pop
test
jnp
mov
fld
add
and
push
cmpb
cmp
and
and
jnp
in
dec
fs
hlt
push
mov
jo
cmp
jnp
mov
enter
jmp
pop
add
inc
sub
jo
mull
mov
dec
aas
out
in
test
clc
out
fldenv
and
mov
push
rorl
cld
addr16
mov
cmp
push
lahf
dec
mov
dec
clc
xchg
lahf
arpl
jae
scas
gs
adc
xchg
mov
fsubrp
nop
cmp
jmp
loope,pt
jg
adc
sbb
mov
inc
mov
hlt
inc
fimuls
out
arpl
call
mov
stc
sbb
cmp
test
push
add
out
push
sti
and
xchg
std
ffreep
mov
and
dec
cld
mov
sbb
int3
inc
jmp
stos
and
jns
pop
sti
mov
push
xchg
xchg
push
cmpsb
jecxz
daa
js
fildl
imul
and
mov
mov
pop
inc
cli
jmp
loop
dec
cmp
leave
add
nop
sub
je
xchg
out
push
xchg
mov
xor
push
push
xchg
scas
jo,pn
xchg
pop
sbb
out
and
test
mov
or
int3
call
cmp
add
outsb
out
add
ja
and
mov
cmp
mov
fidivl
gs
stos
sti
mov
add
scas
sbb
repnz
mov
lods
inc
mov
movsb
push
sbb
shl
pop
sub
mov
cmp
or
rorl
mov
sbb
lcall
mov
xchg
add
stc
test
int
jo
stc
xor
jmp
xlat
push
push
push
mov
inc
dec
in
hlt
aaa
flds
test
test
jge
push
mov
push
int
mov
xchg
sarl
adc
push
lret
jge
imulb
adc
js
jo
jmp
mov
dec
mov
cltd
mov
pop
sahf
aam
enter
xchg
jne
sar
mov
test
mov
xchg
push
xchg
jno
cltd
sbb
mov
in
daa
cltd
popa
dec
xor
or
cmp
sbb
cmp
lods
sbb
mov
out
pop
mov
dec
aaa
leave
sbb
into
jmp
sub
adc
adc
pop
cmp
popf
or
loopne
ljmp
and
repz
sbb
arpl
adc
sbb
adc
cmp
in
push
lahf
cld
mov
jns
xchg
je
pop
pop
push
cld
das
cmp
mov
jge
in
push
fwait
pop
inc
decb
xchg
repnz
or
xor
mov
mov
jno
into
adc
sti
push
mov
mov
popa
mov
jns
push
jbe
push
xchg
and
mov
mov
and
dec
adc
mov
sub
ja
nop
and
cmp
leave
cltd
xchg
mov
ficoms
and
cmp
adc
mov
outsb
lahf
adc
pop
je
loop
shl
std
cmp
jno
mov
scas
imul
push
or
xlat
cmp
pushf
adc
mov
xchg
addr16
and
jno
in
adc
xor
pushf
dec
inc
mul
push
cld
repnz
mov
ss
shlb
jnp,pn
fiaddl
stos
stos
cli
sahf
sub
jl
lret
leave
mov
sub
int
cltd
pop
loopne
dec
inc
sub
or
inc
pop
push
test
test
cmp
inc
cmp
imul
inc
lretw
and
xor
mov
jo
in
or
or
jo
aad
dec
mov
inc
jmp
test
aaa
incb
dec
repz
ret
shr
test
xchg
lret
jae
repz
cmp
cmpsl
out
or
cmp
test
vmread
mov
xor
addr16
dec
jg
cmc
scas
ljmp
into
mov
dec
mov
push
mov
rolb
add
js
int
push
jo
aaa
cli
cmp
rorl
sub
ja
data16
loope
mov
xchg
call
pop
cltd
out
stc
inc
or
cmc
loop
stos
pop
inc
mov
repz
inc
in
inc
mov
fincstp
xchg
push
dec
sbb
into
push
mov
pop
inc
cwtl
sub
xchg
in
sti
sub
add
in
in
mov
or
sub
or
pop
xchg
sbb
sahf
dec
mov
xrelease
or
pop
jne
outsl
xchg
push
aam
pusha
add
mull
xchg
ret
cli
cltd
push
out
mov
int3
mov
orl
ja
fwait
ljmp
cltd
push
mov
mov
mov
adc
lods
mov
sbb
push
lret
push
sahf
pop
pop
or
lcall
out
fs
cmp
bound
icebp
imul
fisttpll
mov
sbb
jmp
call
xor
jl
imul
fnsave
push
loopne
dec
mov
int
adc
popf
shrl
mov
pusha
pop
ret
nop
insl
lock
fbstp
cmp
je
lret
pop
sbb
movsl
fdivp
lret
leave
adc
insl
loope
es
cmp
not
push
xor
mov
stos
pop
int3
jle
loop
movsb
paddq
in
gs
mov
sbb
out
and
lods
push
mov
in
jmp
sbb
loop
popf
fstpl
ljmp
add
dec
add
imul
sub
pop
hlt
dec
data16
mov
xchg
adc
sbb
mov
inc
insl
cmp
lods
mov
add
mov
stos
mov
push
add
push
aad
inc
inc
stos
and
out
push
jo
outsb
xor
mov
fmull
adcb
ss
in
jmp
push
aaa
push
mov
dec
push
push
and
cmp
sbb
xchg
int3
cmc
mov
call
les
pop
lea
jg
faddp
inc
pop
mov
jl
push
subb
imulb
mov
outsl
sahf
or
fnstcw
jbe
fiaddl
popf
je
mov
test
mov
bound
sbb
jecxz
ja
int
scas
mov
mov
jp
les
cltd
fildll
mov
jp,pn
mov
xor
jb
lret
js
mov
jle
or
aas
fmuls
dec
test
adc
jp
or
inc
outsl
loopne
fcomip
scas
inc
cs
push
in
fisttpl
stos
fwait
mov
push
push
fildll
cmc
xchg
in
rcrb
xchg
call
cmp
fidivrl
mov
lahf
dec
repz
push
adc
dec
mov
mov
jmp
pop
cmp
jmp
addb
ss
inc
sbb
les
push
loop
stc
out
subb
sbb
or
add
dec
aaa
pop
dec
push
push
sbb
pop
mov
pop
dec
jle
sub
adc
pop
dec
loopne
jg
clc
push
js
sbb
outsl
mov
je
push
adc
xchg
mov
sub
stc
decb
adc
push
jbe
cmp
mov
enter
stc
sahf
sbbb
adc
shlb
mov
test
insb
mov
movsb
push
mov
adc
xchg
mov
repz
gs
cmpb
and
fwait
adc
jnp
dec
and
sbb
push
dec
adc
aam
test
inc
cmpsl
cs
xchg
add
loope
les
jmp
sbb
negb
div
add
inc
xchg
xchg
mov
push
rcr
add
jne
arpl
mov
out
mov
xor
mov
sub
dec
imulb
mov
xor
cs
jns
or
mov
lods
lock
mov
jge
in
into
sbb
jae
mov
sar
mov
add
call
mov
or
outsl
cmpsb
mov
insl
clc
in
lcall
and
or
dec
push
cmp
nop
call
lea
ror
xchg
call
in
sub
sub
jnp
mov
pop
daa
movsl
xor
jno
xchg
cmc
adc
pop
push
sbb
push
mov
in
sahf
jbe
and
subb
sub
hlt
stos
pop
fs
dec
imul
pusha
xor
out
sub
imul
cmp
scas
jle
mov
mov
or
pusha
nop
mov
sub
or
xlat
icebp
mov
xchg
jo
mov
dec
pop
xor
fdivrl
xchg
or
scas
mov
in
out
jmp
sbb
test
or
out
in
dec
cmpl
sbb
clc
or
fs
add
jnp
mov
xor
lock
test
mov
dec
and
cmc
add
fucomi
and
xor
inc
add
je,pn
cmpsl
or
cmc
pop
mov
bound
dec
xor
push
push
stos
ds
out
lods
xchg
mov
mov
idivb
inc
test
push
push
lods
inc
inc
sub
jg
inc
push
icebp
ja
stc
cli
iret
xchg
mov
adc
pop
inc
push
adc
cmp
sub
cmp
xchg
pop
push
push
xchg
jne
jge
jbe
cwtl
sbb
nop
add
lea
aad
imul
fmul
xor
cmp
lahf
popa
movsl
cmpl
mov
sub
je
mov
insl
pop
mov
imul
lret
jbe
mov
lods
pop
jle
xchg
out
add
xchg
push
pop
je
mov
cwtl
lods
pop
or
cmovnp
adc
aam
cmp
loop
insl
or
ljmp
adc
jle
pop
ja
mov
xor
sti
les
sub
and
lcall
orb
xor
jge
jnp
adc
push
push
dec
les
jb
shlb
mov
add
mov
or
shlb
out
call
cmp
pop
xchg
arpl
adc
jae
out
ss
mov
or
add
jnp
filds
hlt
adc
and
inc
pop
xchg
test
mov
fsub
push
xor
xchg
jle
testl
imul
cwtl
leave
test
sbb
xlat
fwait
aaa
mov
pop
int
orl
and
test
mov
rcll
es
fs
lret
or
popf
jg
xor
data16
jo
jge
push
aam
cmp
and
pop
inc
int
push
or
mov
sar
mov
lock
fstpt
enter
icebp
stos
sbb
sbb
daa
popf
stos
cmc
mov
xchg
addr16
out
pop
adc
fs
sub
aas
jns
inc
xchg
rcll
xor
or
jae
xor
aad
cmpsl
sub
sbbb
pop
mov
mov
mov
jb
dec
js
mov
ss
lock
mov
jp
sahf
pop
and
dec
loop
mov
mov
icebp
jecxz
addl
push
lds
inc
mov
lahf
sbb
shl
shrb
xor
xor
shlb
cld
fisubs
sbb
mov
xor
mov
add
iret
or
hlt
cli
jg
movsb
adc
fildll
mov
popf
movsb
inc
cs
jge
dec
adc
leave
pop
lret
pop
in
cmp
loope
insb
cmpsb
inc
iret
popa
fwait
inc
daa
lea
jg
divb
sub
fdiv
jecxz
data16
pop
not
subb
sub
adc
lcall
mov
lret
xor
stos
insl
sub
sub
dec
or
in
dec
in
ret
mov
std
loop
mov
xor
add
mov
loope
out
jne
mov
xchg
sbb
mov
mov
fdivrl
pop
pop
dec
in
int3
sahf
sbb
pop
es
icebp
gs
roll
lea
adc
add
xor
cmp
imul
imul
sbb
pop
mov
mov
push
cmp
xchg
mov
les
jp
or
das
shrl
xchg
sub
add
loop
jns
fidivs
mov
dec
jo
sbb
mov
push
and
dec
and
js
push
sahf
jbe
insl
xor
xchg
sahf
cli
adc
sbb
and
mov
inc
xor
or
dec
scas
out
inc
rclb
lods
hlt
lret
cmpl
pop
mov
insl
movsb
and
mov
push
push
shl
mov
hlt
pop
pop
xor
sub
push
xchg
stos
shrb
and
icebp
and
sub
push
xor
jl
fsubrl
jl
add
or
mov
lahf
fimuls
mov
inc
psubsb
xor
jnp
js
mov
adc
hlt
adc
loop
mov
cmc
push
mov
js
or
fisttpl
adc
mov
push
mov
mov
les
jne
and
pusha
or
pop
test
sub
js
push
adc
sbb
imul
js
jp
jecxz
inc
or
sti
xor
mov
jno
sub
mov
mov
adc
pop
and
rcrb
fidivrl
les
aas
pop
loope
subb
xor
das
test
bound
lahf
sbb
std
add
push
mov
cmp
inc
jne
nop
jmp
add
mov
xor
mov
int
int3
icebp
push
movaps
xchg
std
mov
and
fwait
pop
je
gs
loope
test
call
xor
repz
lods
fisttps
mov
cld
inc
loope
lock
jb
cmp
add
pop
mov
stos
dec
rcll
adc
pop
mov
sbb
sbb
push
lea
pop
mov
inc
xchg
jbe
lret
push
pop
lret
adc
jecxz
cmpsl
push
sarb
arpl
hlt
lods
push
or
shlb
mov
mov
xor
scas
frstpm(287
stc
and
sub
add
popl
mov
inc
sub
cwtl
pop
adc
or
sbb
mov
or
lahf
enter
adc
test
out
or
sub
out
dec
and
dec
xor
cltd
pop
fcmovne
lea
xor
fincstp
scas
sti
pop
lahf
adc
lds
adc
cmp
mov
mov
out
push
dec
pop
xor
adcl
fldt
clc
or
rcll
fwait
sbb
push
jns
xchg
adc
in
and
testl
jb
lcall
jb
xor
sub
push
mov
shlb
xor
test
pop
ret
mov
adc
mov
test
mov
push
insb
mov
shl
negb
loope
mov
push
imul
leave
and
pop
or
mov
dec
loop
out
pop
cmp
xchg
xchg
xchg
fs
pop
stos
icebp
jmp
shll
sahf
xchg
mov
push
shlb
loopne
cmp
repnz
mov
test
icebp
lods
xchg
mov
fisttpll
mov
xchg
push
sub
sbb
xor
sub
or
test
mov
xchg
pop
bound
sub
mov
rcll
inc
mov
fwait
lahf
movsl
test
cmpsb
adc
xorb
notl
mov
testl
out
jno
shrb
dec
ret
cltd
mov
xchg
imul
insl
xlat
mov
fcomps
testl
into
or
in
mov
jae
aaa
or
lret
or
jecxz
jne
stos
out
pop
fwait
push
aas
xchg
push
push
arpl
mov
add
mov
ds
mov
jle
fldcw
stos
dec
mov
inc
cmp
pop
pop
mov
enter
pop
out
push
js
loop
repnz
ret
lret
insl
shll
imul
sarb
add
dec
push
or
repz
adc
jecxz
pushf
call
mov
xchg
cmpl
dec
lods
outsb
jp
mov
or
jecxz
orb
adc
das
and
add
cli
into
mov
ja
adc
sub
dec
xlat
iret
fdivs
cmpsb
outsl
loopne
add
or
pop
pop
inc
popf
pushf
mov
inc
lods
popa
push
into
les
adc
mov
shlb
cmpsl
xor
dec
icebp
les
nop
mov
leave
push
push
inc
jmp
adc
cmc
bound
mov
frstor
jns
push
int3
test
leave
ret
push
add
test
push
push
adc
or
adc
inc
mov
sub
mov
cmp
jb
dec
push
cmpsl
mov
cmp
inc
cwtl
pop
or
scas
repz
sub
and
rcl
nop
mov
or
rcrb
bound
inc
and
aas
int
mov
rorb
xorl
call
nop
pop
scas
add
jge
and
sbb
out
mov
xchg
cld
jne
cmp
lcall
and
imul
nop
inc
add
mov
arpl
push
sub
dec
scas
insb
push
sub
jl
test
ja
in
arpl
push
jb
daa
xor
cmp
mov
inc
mov
jecxz
pop
push
imul
ret
icebp
xor
lret
push
jb
mov
fwait
mov
jb
pushf
inc
adc
cmp
cmp
mov
mov
in
xor
test
cmp
adc
int
mov
aam
insb
mov
cltd
or
jb
and
mov
mov
mulb
sbbl
pop
daa
mov
jno
addr16
loope
xchg
mov
jl
jge
movsb
add
pop
addb
clc
in
and
leave
inc
hlt
insb
mov
mov
mov
jno
sahf
mov
push
lret
cmpsl
xor
inc
cmp
das
addb
jbe
cmc
jecxz
fs
mov
adc
pop
adc
push
jge
int
imull
jp
fs
xor
mov
adc
icebp
pop
pop
xchg
iret
iret
pop
outsl
or
mov
inc
hlt
cs
pop
mov
xchg
add
jae
and
mov
into
or
test
add
xor
mov
mov
or
sbb
or
inc
pop
cltd
fmuls
sub
loop
mov
cmp
scas
or
add
mov
repnz
and
push
mov
das
pop
clc
add
pusha
out
stos
nop
push
inc
sub
xchg
sbb
insb
insl
mov
adc
movsb
mov
dec
out
aas
sbb
pop
push
mov
mov
out
push
or
sub
les
mov
loop
test
add
jns
cmpsl
clc
jno
and
aam
in
push
insl
das
hlt
mov
dec
rcrb
sub
insb
icebp
add
xchg
or
jbe
lods
testl
mov
in
pop
fildl
and
mov
subl
je
push
xor
lods
jne
sbb
jnp
outsl
cmp
fcmovu
shlb
inc
sbbl
jnp
jg
repz
or
loopne
das
xor
pop
xor
inc
inc
aas
jae
call
pusha
pop
into
xor
loop
fmuls
sbb
int
roll
int
out
arpl
inc
push
mov
add
dec
std
bound
in
jne
sub
subb
pop
repnz
mov
sub
jge
mov
into
icebp
shrl
dec
in
data16
xchg
dec
and
sbb
fcomip
sbb
lea
cmp
in
adc
push
adc
xchg
inc
xchg
lock
jae
fists
out
push
mov
sbb
call
repnz
jae
scas
cld
sub
cmpsl
add
in
aad
fcomps
and
leave
inc
mov
adc
inc
lcall
adc
in
arpl
and
xor
sub
inc
mov
in
sub
mov
loope
or
add
xchg
mov
ja
fisubrl
shl
sti
mov
xchg
lods
jg
lods
xchg
pop
xchg
push
scas
loop
xor
ja
cmp
sbb
mov
sbb
lret
cmp
and
and
sbb
dec
cmpsb
or
stos
and
inc
pop
dec
enter
and
adc
cld
xchg
cli
adc
js
pop
xchg
lret
loop
xor
inc
lret
imul
inc
andl
fsubrs
es
test
int3
aad
enter
inc
push
sub
mov
fstps
int3
repz
xor
out
lods
testb
xor
xchg
adc
fistl
or
loopne
xchg
pop
cmp
aaa
mov
jge
inc
xchg
or
add
add
loopne
cmpsl
jae
xchg
fwait
lret
out
add
add
add
add
movl
cmp
je
mov
jmp
mov
movl
cmp
jne
push
movl
jmp
mov
mov
movl
cmp
movl
jne
mov
xor
add
mov
and
xor
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
negl
add
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
inc
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
andl
xor
incl
add
andl
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
jmp
dec
cmp
orl
push
mov
scas
neg
add
pop
bound
pusha
das
sub
jmp
lcall
adc
shrl
popa
rolb
xchg
cmp
inc
popa
inc
xor
inc
or
jge
popl
add
imul
movl
cwtl
jne
xchg
into
fdivl
movsb
in
pop
jo
adc
movsb
dec
push
cli
aaa
outsl
fsubrs
inc
loope
dec
xor
outsl
imull
arpl
fcompl
out
adcl
sub
jnp
cmp
pop
outsl
push
into
lret
or
mov
stos
mov
sar
mov
mov
in
sbb
ret
in
dec
mov
out
mov
or
jae
jg
inc
imul
shlb
push
fs
icebp
stos
add
ret
roll
sub
cwtl
mov
out
add
lock
jb
fildll
ljmp
sahf
mov
les
faddl
imul
xchg
sbb
xor
pop
fstpt
cmc
push
mov
sub
pop
cmpsl
mov
sahf
iret
lahf
mov
dec
jp
leave
dec
out
lahf
mov
cmc
mov
xor
push
mov
inc
pop
mov
or
mov
or
cmpsl
mov
push
and
and
or
aam
sbb
pop
movsb
mov
shrl
bound
rorb
mov
xor
or
stc
xchg
aas
cmp
inc
jno
mov
cld
push
aas
sub
mov
out
cmp
xor
fimuls
jne
imul
sbb
sub
mov
dec
mov
and
cltd
jmp
push
out
mov
in
push
cmc
roll
adc
std
es
hlt
les
cmp
jae
pop
xchg
loope
jge
mov
imul
out
xchg
sbb
adc
cmc
jge
mov
cmc
and
stos
xor
xchg
fdivrs
mov
jp
in
gs
sub
pop
sbb
sub
xchg
in
push
rcrl
cwtl
fists
mov
mov
das
ja
mov
rolb
ds
imul
and
jmp
sub
jg
arpl
cmp
scas
jp
mov
add
ljmp
sbb
stos
sub
lcall
stc
xor
mov
mov
cs
mov
dec
pop
sub
loopne
jle
pop
xchg
pop
jecxz
mov
in
cmp
xchg
mov
das
mov
mov
lcall
and
fdivrl
lahf
dec
int3
repz
pop
push
push
lock
scas
cmp
fdivl
movsb
dec
aad
jbe
push
pop
cmp
aad
pushf
jno
jb
insb
out
divl
sub
jmp
jmp
mov
add
aas
mov
inc
jbe
push
je
push
mov
js
xchg
lahf
cmc
push
sub
cld
inc
imul
out
outsb
adc
cmp
shr
mov
mov
lds
outsb
push
jmp
adc
xchg
sub
push
into
mov
or
push
negl
sbb
test
dec
insl
mov
cmp
popf
das
sarb
add
mov
pop
push
pop
std
daa
dec
and
aas
mov
sub
add
imul
fs
stos
jo
lods
pop
loope
lahf
or
test
push
fwait
push
fs
cmp
es
clc
pop
test
or
insb
mov
iret
orb
inc
xchg
and
xchg
xchg
cmp
jne
xchg
movsb
or
test
cmpsb
adc
outsb
ret
cli
in
mov
push
add
scas
cmpl
jo
cmp
stos
sbb
and
stc
or
insb
and
sarl
fildl
cltd
mov
mov
and
int
bound
aad
test
gs
pop
mov
ret
xorl
add
mov
hlt
test
out
dec
push
and
shl
jae
dec
sub
xor
js
ficompl
mov
mov
jo
pop
mov
dec
fsubr
dec
jae
xchg
add
fsub
int3
mov
or
dec
push
stos
jmp
lea
lret
imul
lret
out
push
sti
fwait
shll
push
das
in
fcmovne
cmp
arpl
cmpsb
sahf
mov
sub
mov
test
sub
mov
ret
ljmp
imul
rcr
enter
std
pop
adc
lods
stc
movsl
fwait
call
int
fnstsw
test
lcall
push
loopne
cli
cmpl
or
push
and
pushl
xchg
inc
inc
outsb
hlt
xor
push
shll
fwait
sub
push
or
adc
xchg
dec
fwait
xorl
mov
sub
daa
ja
push
repz
xor
and
xchg
in
cmp
fsubl
in
imul
or
arpl
jl
out
ret
fwait
out
ljmp
jns
inc
pop
and
int3
das
outsl
enter
add
ficomps
cmp
jae
inc
dec
cmp
data16
arpl
or
in
pop
adc
cmp
mov
adc
dec
cli
adc
out
cwtl
push
addr16
je
mov
jns
jmp
pop
insb
sahf
lds
jl
notb
fwait
sub
adc
test
rol
or
sub
or
adc
sbb
in
aad
pop
mov
xchg
xor
jcxz
cmp
or
jae
mov
jno
sbb
sahf
jno
mov
jnp
std
je
and
sbb
es
in
dec
jmp
aam
cmp
cmp
add
dec
ret
outsl
pop
sub
loope
out
and
mov
enter
les
pop
fs
xor
mov
int3
outsl
inc
sub
pushf
sti
adcb
mov
push
stc
bndldx
imul
mov
aad
out
add
push
andb
jl
ss
pushf
add
cmp
and
sbb
sbb
cli
add
xlat
jns
and
mov
lret
cmp
nop
mov
les
xchg
pop
dec
inc
inc
mov
cwtl
mov
out
dec
lods
in
mov
sub
add
cli
movsl
rorl
adc
sub
jne
jns
and
loope
push
add
fcoml
adc
and
loop
dec
addr16
insl
pop
sahf
mov
and
sub
push
in
bound
xchg
fs
mov
enter
cmp
sub
dec
mov
lahf
shrl
and
es
adc
pop
shrb
jo
dec
stos
fistl
cmp
stos
mov
orb
imul
repnz
pop
cltd
mov
dec
dec
dec
jle
jae
xchg
dec
xchg
fbld
enter
loopne
ret
inc
push
sbb
cmpb
and
ret
cli
jp
daa
lock
fcmove
cmp
push
sbb
jge
jle
mov
pop
imul
and
push
mov
jae
hlt
aaa
xchg
inc
add
ret
lea
mov
xchg
sub
cmc
xlat
dec
xorl
mov
lahf
or
dec
add
les
pop
cltd
repz
mov
jb
mov
mov
mov
mov
or
int3
or
mov
cmpsb
xor
adc
fmuls
fnstcw
mov
mov
push
out
out
mov
ljmp
or
push
push
adcb
xchg
dec
add
repz
mov
sub
inc
fcmovb
ret
daa
sbb
lret
add
cmc
dec
les
and
mov
xor
jle
push
ror
push
rolb
lods
xlat
pop
das
lret
adc
lret
adc
or
and
xchg
orb
in
stc
xor
jno
clc
mov
add
and
cmp
mov
xlat
pop
mov
lods
cli
sti
dec
loope
lcall
ja
or
dec
mov
fldl
push
arpl
stos
pop
sub
add
mov
and
jne
jne
call
add
ret
xchg
dec
flds
sti
push
xchg
cwtl
xchg
adc
test
mov
jmp
stc
mov
into
sub
mov
stc
adcl
mov
je
loopne
mull
and
lods
pop
or
test
aam
cmpl
cld
out
cmp
imul
sub
xor
adc
mov
inc
aad
mov
test
pop
call
out
mov
add
adc
jmp
test
sbb
arpl
fldpi
lahf
mov
sub
jg
fidivrl
sti
dec
jecxz
stos
loope
bound
mov
idivl
test
inc
aas
lret
cmp
jmp
fsts
mov
and
pop
add
leave
push
dec
jmp
add
mov
mov
aam
scas
add
cli
out
xor
mov
push
and
test
inc
sahf
mov
lret
xor
out
pop
nop
add
into
mov
pushf
jo
pop
mov
pop
pop
and
in
repnz
mov
jle
clc
jmp
movl
repz
outsl
add
add
push
lods
clc
and
aad
loope
fwait
sarl
sub
sbb
or
and
icebp
dec
xor
dec
and
and
cmp
mov
jecxz
dec
push
mov
xlat
jne
gs
push
pop
stc
dec
rorb
pop
mov
lret
stos
xchg
sub
imul
aas
xor
daa
lret
aas
stos
jmp
in
enter
outsl
mov
icebp
ds
sub
lret
mov
push
sbb
cmc
out
lock
jmp
mov
in
insb
fs
fsubrp
jno
ljmp
into
fcmovne
pop
inc
adcb
std
or
mov
test
aam
ss
faddp
push
sbb
pop
in
aas
dec
pusha
sub
push
adc
jbe
ss
xchg
stos
out
cs
xor
jnp
jne
or
pop
xlat
pop
dec
sub
hlt
es
mov
pop
mov
loope
stos
pop
mov
xchg
das
lcall
mov
push
fwait
lock
and
inc
xchg
push
aas
mov
jp
push
jne
rcrb
jecxz
aaa
xchg
imul
cmp
and
outsb
scas
loopne
ja
xor
test
lret
stos
sub
xchg
stos
dec
icebp
and
inc
imul
mov
stc
scas
cmpsl
add
out
xlat
or
pop
add
cwtl
mov
adc
jge
cmpsl
xchg
sbb
fdiv
adc
cs
sarl
not
jl
insl
test
daa
fidivrl
mov
fwait
inc
sbb
das
sub
xor
push
cmpsb
imul
popa
sub
enter
or
dec
mov
int
pop
xor
jbe
subl
sbb
push
mov
andb
jb
inc
xor
ret
xor
test
mov
pop
repnz
or
push
test
adc
mov
jge
ljmp
test
cmp
dec
lcallw
jns
stos
and
sub
adc
ficompl
and
mov
repnz
mov
pop
add
in
inc
xchg
jmp
xlat
into
pop
adc
stos
xor
lock
and
into
mov
mov
fsubl
mov
insl
inc
dec
or
xor
jbe
push
xchg
test
icebp
jo
movsl
sub
sar
cli
push
xorl
js
je
sbb
push
and
sbb
mov
cwtl
movsb
jg
mov
cmp
cmc
fwait
and
or
cmp
mov
cmp
iret
fs
or
cmp
pusha
out
int3
jecxz
loop
dec
js
push
xchg
pop
push
lea
mov
push
dec
repnz
ja
fdivs
jl
mov
cmp
nop
mov
cmc
adc
adc
inc
fldt
sbb
mov
data16
loop
imul
push
push
fsts
scas
cmp
arpl
xlat
mov
mov
fs
adc
mov
sti
bound
ret
icebp
call
es
mov
loop
pop
cmpsb
adc
imul
xor
jo
cmpsl
cmc
bound
notb
inc
xor
xor
out
arpl
inc
dec
dec
xchg
fsubl
lahf
xor
pop
roll
push
mov
cs
gs
xor
jp
pop
call
jecxz
subb
inc
pop
push
stc
sbb
adc
mov
adc
mov
inc
out
and
jmp
inc
lcall
push
jmp
mov
adc
and
push
mov
aaa
cmp
out
xor
adc
add
clc
mov
and
out
mov
aas
out
sbb
or
cltd
in
arpl
or
mov
jb
in
cmp
jo
push
pop
adc
push
jnp
xor
mov
sbb
mov
frstor
pop
outsl
push
push
lahf
dec
cli
jo
lods
cmp
jg
push
mov
dec
sub
pop
cmpsb
clc
mov
push
mov
mov
inc
mov
xor
mov
add
movsb
daa
xchg
sbb
lret
inc
out
mov
inc
mov
fcoms
repz
repnz
adc
iretw
aad
ret
outsl
jae,pt
arpl
adc
jne
sbb
xchg
lahf
inc
cmp
and
call
daa
out
sub
lcall
scas
pop
popf
push
sub
leave
mov
fcompl
js
mov
adc
and
mov
inc
and
and
loopne
adc
inc
and
or
jbe
xor
into
jno
aam
gs
test
xor
icebp
into
mov
adc
xlat
stos
inc
and
adc
jle
lret
repnz
xchg
mov
jno
lret
pop
jecxz
dec
call
les
mov
and
decl
nop
inc
lahf
push
xorb
inc
or
fs
inc
negb
lahf
lcall
int
loope
std
mov
mov
dec
add
adcb
fisubs
ret
mov
iret
jecxz
mov
insl
insb
scas
xchg
push
into
cld
inc
fidivl
movsl
xchg
popa
sbbb
fbld
imul
jl
xchg
and
out
mov
xlat
shrl
aam
sbb
jno
push
inc
sub
dec
cltd
nop
ficoml
push
adc
fstl
out
shrb
lahf
xchg
adc
call
divl
fistpll
aaa
add
cmp
sarl
mov
cld
jb
mov
leave
mov
pop
push
loopne
cli
jo
call
push
lods
mov
imul
ret
inc
lea
stos
mov
mov
and
jg
in
in
pop
mov
pop
shl
pop
outsl
sub
stc
inc
jo
les
mov
xchg
pop
pop
add
outsl
jmp
cmpsb
pop
or
pop
or
jo
inc
jg
or
rcrl
in
mov
xor
sti
clc
dec
imul
cwtl
add
sub
mov
push
outsb
pop
shlb
jnp
enter
dec
aas
mov
outsl
test
inc
inc
pop
or
popa
testl
cld
push
push
mov
rorl
sbb
pop
repnz
xchg
lods
push
xor
pop
or
enter
fistpll
jno
add
std
or
and
mov
cmp
lret
mov
fwait
test
loope
out
and
dec
ret
bound
push
fs
dec
cwtl
push
pop
rcll
test
loopne
xchg
xchg
dec
adc
pop
dec
xor
inc
outsb
mov
add
loope
arpl
push
leave
fidivl
cs
mov
insl
subl
xchg
test
lcall
incl
push
lods
cmp
aam
dec
jle
lea
outsb
sbb
ljmp
aaa
mov
pop
pop
std
jge
test
jb
imul
jmp
ret
clc
sub
ja
fidivs
adc
dec
mov
addr16
push
push
shll
int3
cmp
xchg
push
popf
movsl
ret
inc
mov
int
popa
fldl
adcb
sti
jne
xchg
loope
sbb
and
xor
mov
int
shll
mov
pop
jb
data16
shr
ljmp
lcall
sub
cli
out
sarl
int3
pop
iret
mov
sbb
inc
xor
int
sahf
jns
mov
aaa
jl
lock
dec
add
fstps
repnz
pop
inc
outsb
xchg
or
jge
xchg
and
in
jno
out
enter
mov
cmpsl
sarl
in
sarl
enter
lret
push
dec
ljmp
push
xchg
iret
imull
les
in
in
notl
mov
arpl
scas
iret
imul
mov
mov
xor
icebp
shl
movsl
sbb
stos
push
lret
push
lock
fsubp
sti
mov
aas
dec
divl
lock
lock
mov
adc
sub
adc
dec
in
scas
aad
movsb
sarl
inc
dec
pop
popa
dec
sbb
xor
pop
or
and
emms
out
jae
fcmovnb
outsl
mov
aas
sub
push
jmp
sti
lahf
cmp
mul
jb
mov
push
lret
xchg
mov
popa
leave
ljmp
mov
or
mov
stos
rorb
add
and
sbb
sbb
push
xor
mov
jo
and
dec
mov
push
repnz
adc
mull
repnz
sbb
or
cwtl
stc
mov
data16
ja
jne
jo
out
idivb
popf
jns
loopne
mov
mov
lea
lahf
arpl
test
lock
push
movsl
dec
sbb
mov
iret
ret
aaa
scas
orl
sbb
cmpsb
and
rcrb
pop
je
add
data16
ja
xchg
shrl
repz
mov
les
fadds
mov
sar
or
mov
ljmp
inc
push
es
mov
rcrl
loope
xorl
push
xchg
cmpsb
mov
ficoml
mov
or
sub
dec
xor
xlat
fimull
inc
cs
mov
mov
cltd
ja
fnsave
pop
or
data16
dec
imul
or
mov
add
pop
jg
sbb
or
or
jmp
inc
aad
test
push
andb
jge
push
dec
push
add
shlb
loopne
inc
je
xor
test
mov
add
mov
mov
lods
jae
jecxz
sbb
std
sahf
hlt
fcomi
pop
dec
or
inc
pushf
call
popa
jb
add
dec
inc
lods
lcall
fucomip
daa
in
outsl
xchg
mov
insl
je
pop
push
arpl
mov
pop
inc
jbe
xor
scas
divb
mov
incb
and
dec
lods
jo
push
mov
cltd
xor
test
test
sbb
push
bound
and
into
lret
pop
jl
push
gs
movsl
push
sub
add
mov
psraw
push
orl
pop
pop
and
pop
pushw
pop
cld
xor
shlb
xchg
mov
add
xchg
mov
inc
xchg
sbb
sbb
mov
inc
cmp
jb
add
roll
inc
push
pop
xor
test
xor
add
movb
pusha
daa
clc
stos
enter
fwait
xchg
xor
scas
mov
call
and
mov
rcrb
xor
adc
jae
push
pop
mov
aaa
push
mov
mov
adcl
test
xchg
mov
xor
cmp
decl
shlb
cmp
orb
inc
fimuls
aam
and
lret
hlt
inc
out
fwait
aam
or
fwait
movsl
pop
loope
pop
faddl
out
mov
mov
out
aas
and
jnp
lods
not
sti
mov
mov
inc
jg
mov
call
arpl
push
mov
dec
ds
imul
dec
mov
adc
adc
shrb
leave
bound
std
addr16
lret
sub
or
mov
and
outsl
jnp
xlat
or
add
xor
leave
push
inc
fimuls
mov
dec
pop
pop
test
ds
inc
jns
imul
xor
push
insb
test
mov
cld
fidivs
lret
mov
xor
inc
add
das
lahf
pop
mov
push
mov
mov
pop
xchg
push
and
xchg
movsb
xchg
inc
imul
pop
pop
cmp
cli
insl
out
das
jl
insl
aad
mov
add
scas
xchg
repnz
xor
repz
pop
fwait
sbbl
mov
pop
fs
sub
jo
aas
sbb
sbb
pop
xor
ret
stos
int
add
aad
mov
lret
dec
cwtl
add
xchg
rolb
mov
cs
in
stos
enter
bound
ret
or
cmp
mov
dec
shl
mov
sub
repnz
movsl
jno
cld
add
or
xchg
mov
popf
jns
cmp
gs
enter
xor
aaa
push
in
pop
test
sbb
lret
hlt
rcrl
dec
or
mov
fnstcw
push
dec
jmp
cld
sbb
xchg
add
cmp
mov
dec
and
cltd
fisubrs
fidivrs
mov
lea
movsb
ds
sub
xchg
xor
lods
imul
xor
mov
into
mov
xchg
sbb
xchg
outsl
inc
jne
int
jns
shlb
and
data16
nop
mov
fwait
dec
int3
jno
pop
and
mov
push
add
out
mov
call
test
jmp
jb
ljmp
popa
fdivl
inc
imul
int
inc
mov
lods
leave
add
add
shrl
comiss
lret
out
enter
int3
outsb
fsubrs
js
lret
cmp
es
cmpsb
pop
mov
push
out
mov
cmp
in
inc
adc
inc
push
sub
sbb
lcall
and
mov
insb
push
jbe
je
jb
push
ltr
pop
sbb
push
in
add
sub
sbb
subl
hlt
test
insl
cld
mov
add
enter
int3
mov
test
jb
aad
bswap
inc
mull
lds
add
ficoml
call
push
fidivrl
mov
jnp
cs
es
dec
pusha
push
addl
js
jp
cmp
andb
and
or
xor
push
test
mov
arpl
dec
sbb
jg
mov
xor
out
bound
repz
arpl
push
jbe
inc
aad
cmp
pusha
pop
movsl
aas
mov
sub
out
nop
jp
xor
jge
popf
gs
stos
xor
pop
mov
inc
pop
mov
adc
in
add
cmp
iret
cmp
movsb
mov
sti
or
icebp
in
or
mov
pop
mov
cmp
movsl
in
hlt
clc
and
inc
xor
popf
fisubs
enter
dec
xchg
add
ja
loopne
add
pusha
rcrl
fsubp
aas
loop
das
jb
je
sub
xor
test
fildll
sar
add
mov
cmp
mov
pop
in
fcomps
sbb
loop
push
xchg
stos
inc
sub
frstor
inc
xor
mov
cmpsl
xor
mov
ss
test
ret
mov
inc
aam
sbb
sbb
jbe
cmp
sbb
push
pop
shrb
incl
add
sub
dec
movb
push
lahf
pop
ret
push
and
cmp
and
mov
jo
decb
jns
enter
fwait
insl
nop
cmc
and
mov
and
jnp
call
clc
jmp
insl
ss
insl
xchg
dec
pop
or
notl
mov
xchg
loopne
sbb
fmul
loop
jge
stc
jb
lods
xchg
out
lods
lods
les
addb
inc
inc
mov
cmpb
les
lods
aam
pop
cmp
fiaddl
shrl
jnp
dec
in
mov
push
jne
mov
aad
repz
lods
cbtw
cli
pop
insl
mov
stos
arpl
fiaddl
ficomps
jne
dec
in
not
imul
mov
or
jge
out
mov
sub
rcl
push
mov
lea
add
js
ljmp
xchg
sub
shlb
cmp
push
icebp
mov
cmp
or
mov
mov
std
movb
cmpsb
or
mov
js
lods
sub
xchg
out
cmp
and
sbb
mov
xchg
pop
insl
sbb
lret
test
lods
stos
int
sbb
imul
mov
divl
jp
mov
dec
xor
js
mov
arpl
push
lret
cmp
adc
loopne
or
push
mov
arpl
incl
xchg
fsubl
data16
outsl
sbb
out
mov
fstpt
movsl
sub
jp
aas
or
hlt
add
andl
push
xor
in
dec
sub
jne
sbb
sbb
fadds
sub
mov
xchg
push
cltd
das
mov
and
jl
ret
mov
scas
imul
dec
pop
jae
fisubs
mov
push
aas
jle
add
xchg
lahf
bt
shlb
adc
mov
sbb
lcall
mov
mov
pushf
aad
or
mov
sub
popa
mov
adc
fistl
outsl
jg
ja
leave
add
test
or
mov
jno
mov
pop
fdiv
push
or
jno
fbstp
mov
std
mov
mov
mov
push
add
ss
stos
push
lods
in
inc
push
mov
jecxz
loopne
jge
outsb
jg
push
out
pop
push
fisttpl
jno
add
mov
outsb
lea
jne
out
inc
aaa
ljmp
das
loope
push
mov
into
ds
mov
test
enter
dec
jbe
test
sbb
sub
dec
fbstp
popf
pop
loop
mov
fstps
pusha
pop
push
leave
and
push
sbb
xor
mov
adc
jecxz
push
imul
lods
mov
outsl
ds
mov
inc
pop
pop
movsb
ss
pop
jns
lds
mov
sti
cli
loopne
mov
jno
xchg
sub
pop
arpl
xor
fisubrl
lcall
pushf
or
dec
rorl
mov
xchg
test
dec
cmp
mov
pop
out
pop
test
iret
mov
xchg
push
test
js
ret
and
mov
cmpl
enter
addr16
popf
add
in
push
and
sub
dec
gs
rclb
ds
inc
cltd
test
jmp
and
in
inc
leave
int3
lret
mov
mov
out
popf
cmovnp
mov
mov
xchg
lods
mov
lds
mov
and
scas
imul
xor
bound
jnp
pop
push
mov
lret
jge
inc
mov
es
repnz
enter
sub
inc
test
test
fs
nop
popf
mov
lods
ds
push
aas
dec
or
cli
xor
pushl
mov
xor
mov
mov
dec
scas
xchg
pop
xor
or
clc
mov
test
fmull
es
xchg
mov
jg
leave
jns
or
jne
push
adc
pop
loopne
js
or
and
jnp
mov
or
scas
pop
orb
add
pop
enter
dec
pushf
sbb
sbb
and
cli
nop
test
jp
aaa
pop
cmp
xchg
iret
cmpl
mov
jae
sbb
movsl
jo
out
adc
cmp
lret
push
inc
mov
cli
pop
out
mov
or
add
scas
jne
sti
call
cmp
sub
xchg
mov
repnz
fistpll
mov
and
inc
shlb
jle
jno
and
push
ret
pushf
sbb
inc
xchg
insl
push
fwait
int3
ss
xor
inc
dec
pop
in
cmp
push
fdivs
and
sbb
in
scas
or
mov
or
jns
push
adc
jl
sub
sar
inc
jmp
jno
test
test
fdivs
mov
je
cli
xor
dec
adc
mov
mov
fcomps
cmpsl
roll
xchg
out
je
inc
mov
sbb
test
and
outsl
in
push
insb
cmp
lcall
xchg
cmc
push
pop
push
xchg
jo
mov
mov
sub
or
mov
mov
mov
fistl
adc
xor
mov
pop
movsl
sti
pop
xchg
sub
je
jle
sub
lret
dec
dec
insl
repnz
dec
xchg
mov
adc
inc
mov
xor
imul
hlt
and
ljmp
pop
dec
sahf
push
fisubrl
js
jb
cmpb
xlat
and
cmpsl
shrl
leave
sbb
ja
popa
imul
aas
jbe,pn
and
jl
add
inc
aad
push
push
jo
les
sub
push
inc
dec
mov
mov
xchg
pop
and
or
xor
subl
xchg
ret
jbe
and
lcall
pop
in
adc
dec
cli
in
push
mov
add
dec
aam
movsl
xor
aad
xchg
mov
add
rclb
jae
sub
fcoms
divl
ret
cwtl
loop
loopne
test
mov
leave
mov
dec
fisubs
inc
lods
inc
stc
xchg
push
sbb
pop
jl
roll
mov
repnz
inc
mov
add
popa
jle
mov
movsl
shl
lret
mov
push
pop
mov
stos
adc
inc
lahf
push
xor
pop
mov
jl
test
fstpt
and
clc
ret
clc
int3
cmp
loope
sbb
stc
jbe
mov
out
xor
lret
mov
mov
sbb
jbe
mov
mov
mov
stc
or
fiaddl
das
jno
or
imul
sahf
frstor
dec
rep
dec
xchg
xchg
jmp
xchg
cmp
or
add
mov
push
insl
ja
ss
pop
aaa
movsb
lcall
sbb
fwait
or
lcall
mov
pop
xchg
adc
mov
test
repz
jmp
repnz
out
or
ret
fsubl
and
ds
pop
inc
mov
ror
and
xor
dec
mov
adc
dec
cld
lahf
out
mov
xchg
cwtl
popa
mov
jmp
lea
push
or
std
and
mov
jmp
les
pop
lea
icebp
js
dec
in
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
push
movzbl
sub
push
adcl
push
xor
xor
mov
sub
mov
push
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
pop
push
subl
call
adcl
push
xorl
push
addl
push
push
andl
push
andl
push
sbbl
push
subl
call
push
push
push
push
push
push
subl
call
xorl
dec
movl
jne
push
push
push
call
orl
test
je
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
add
imul
mov
not
mov
mov
mov
cmp
movl
jne
addl
movl
orl
pushl
pushl
pushl
call
adc
mov
mov
sbb
mov
mov
add
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
movzbl
xor
mov
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
cmp
jne
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
inc
push
sbb
push
add
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
mov
xor
mov
mov
sub
sub
mov
add
xor
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
jmp
icebp
push
inc
movsl
cmpsl
mov
aaa
and
inc
and
popa
bound
bound
xor
imulb
inc
inc
inc
testl
inc
cwtl
mov
jl
stc
sub
push
ja
lods
imul
mov
ljmp
xor
pop
addr16
push
or
push
inc
insb
mov
or
and
sbb
dec
mov
sub
cltd
pop
mov
or
inc
xor
jbe
enter
fcom
sub
dec
cmc
mov
mov
mov
loope
stos
ret
xchg
imulb
sahf
roll
fists
cs
adc
lret
sub
xchg
push
stc
inc
ljmp
jle
cmpsb
push
js
xchg
mov
xlat
xor
in
in
jb
aaa
je
in
mov
rorb
push
lods
xor
mov
or
movsl
int3
sbb
and
xor
ljmp
or
xchg
cs
add
mov
and
cmpsl
out
xor
loop
cs
fldenv
es
add
and
xor
aam
es
enter
in
and
cwtl
mov
ds
popa
pop
jnp
sahf
cmpsb
mov
es
xchg
gs
xchg
in
cmp
xor
fimuls
inc
add
xchg
in
or
or
or
fildll
ja
jae
clc
adc
shll
sbb
pop
ret
mov
imul
imul
pop
mov
cmp
test
dec
xchg
out
dec
sbb
in
cmp
movsl
loopne
pop
xor
cmp
xchg
push
inc
sbb
mov
fwait
sahf
mov
mov
dec
mov
sbb
jne
stc
lret
mov
jno
scas
xor
xchg
sub
pop
pop
sub
add
testl
push
sub
jl
aam
addr16
xchg
adc
inc
jmp
cmp
pop
cmp
push
dec
mov
jp
dec
jo
sbb
push
inc
aam
stos
out
mov
cmp
shlb
mov
les
inc
pop
dec
out
jne
repz
lret
push
xchg
aaa
pushf
into
insb
ret
push
int3
gs
add
jp
mov
push
test
xchg
and
addr16
adc
mov
fdiv
sbb
xchg
scas
xor
jle
or
or
push
mov
std
scas
push
pop
mov
add
bswap
push
and
and
xchg
fsts
push
test
pop
aas
out
add
xor
pushf
jg
icebp
mov
lahf
dec
and
mov
in
add
sbb
xor
jns
add
insb
xchg
dec
aaa
test
pop
inc
out
ret
stos
jmp
daa
pop
lock
pop
std
ret
lahf
xchg
push
dec
or
arpl
cli
ret
imul
sub
dec
jbe
jmp
sub
shlb
inc
cmc
leave
imul
inc
sbb
fs
imul
pop
push
pop
pop
cltd
pop
shrl
cmp
xor
and
add
outsb
add
gs
and
ret
adc
dec
out
shlb
pop
insl
jb
mov
add
push
mov
lock
sahf
incl
ret
andl
xor
stos
stc
mov
push
mov
xor
jbe
jle
mov
push
adc
jno
addr16
out
adc
inc
imul
lcall
mov
sub
push
fstl
loop
add
test
jae
popa
rcl
add
mov
rorb
ficomps
movsl
sarb
lcall
testl
int3
js
mov
aad
xchg
dec
push
data16
dec
leave
dec
add
inc
into
xor
rcll
jecxz
push
mov
inc
xor
pop
out
or
mov
mov
pop
lcall
xchg
xor
out
add
test
pop
xor
pop
jmp
sbb
xor
mov
mov
xor
sub
sub
shl
add
inc
lea
dec
fsts
inc
jno
xchg
adc
sahf
or
cmp
xchg
cwtl
popf
cmc
inc
dec
xchg
pop
fsub
movsl
xor
inc
ljmp
test
and
inc
mov
sub
cmpsl
outsb
ret
rep
loopne
sbbl
mov
dec
inc
push
ret
sbbb
imul
xor
pop
add
mov
div
jmp
je
xchg
es
pop
xor
sahf
arpl
add
mov
addr16
sbb
loop
pusha
add
jnp
sbb
out
inc
imul
mov
xorl
out
add
emms
pop
test
rcrl
in
or
sbb
movsb
pop
sub
mov
mov
inc
jns
mov
cltd
mov
cmp
adc
mov
xchg
sbb
xor
dec
les
jae
add
je
int
imul
xchg
dec
pusha
mov
push
cwtl
outsl
pop
or
sarb
out
rcrl
scas
sarl
xorb
sub
push
mov
lea
sub
loopne
pop
or
jg
adc
je
adcb
push
push
std
jl
cmp
mov
push
adc
sbb
jno
inc
repz
dec
mov
loop
inc
ja
xlat
rclb
cs
and
dec
iret
inc
rcrl
outsb
push
leave
pop
repnz
jge
lock
adc
in
jne
xor
cmpb
adc
mov
mov
mov
jge
addb
cwtl
jns
cld
push
mov
jl
pop
xchg
inc
inc
push
int
and
push
adc
push
test
addb
mov
loope
and
outsb
lahf
inc
add
into
dec
pop
out
add
pop
or
cmpl
mov
mov
xchg
or
fcoms
lcall
cld
add
shr
imul
mov
cmp
pop
jae
and
aaa
adc
sbb
cmc
adc
inc
xchg
jno
push
idiv
mov
pushw
inc
xor
lcall
repnz
push
and
push
cmp
fstp
sbb
shll
loop
addr16
mov
or
in
in
arpl
hlt
mov
adc
xchg
xor
xchg
xchg
sub
arpl
cmp
jmp
inc
test
dec
rorb
aaa
lods
lret
test
jno
cmp
inc
loopne
addb
mov
pop
sbb
fs
xchg
subl
mov
cmp
jmp
fsubrs
pop
fucom
cltd
hlt
adc
xchg
stc
sub
jne
sbb
mov
arpl
or
mov
sbb
jp
mov
outsb
dec
stos
call
das
push
outsl
dec
and
add
sysexit
out
icebp
imul
xor
cmp
loop
mov
iret
ret
or
repnz
rcll
rcrl
push
sbb
sub
pop
mov
and
xchg
mov
mov
pop
rol
out
stc
mov
iret
jnp
cmp
movsb
scas
xchg
insl
bound
inc
xlat
addl
in
lock
cmpsb
add
jecxz
inc
loope
sbb
into
insb
shll
xor
insl
xchg
sub
push
lcall
pop
sbb
call
ljmp
data16
add
cwtl
arpl
and
cmp
mov
xor
in
sbb
fnstsw
mov
xchg
fprem1
cli
imul
insl
mov
pop
mov
sahf
xchg
xlat
insb
xor
adc
xchg
dec
sub
xchg
outsb
int
rcrl
mov
inc
cmp
jbe
rcrb
mov
ja
or
push
mulb
dec
pop
mov
inc
out
sti
xchg
lock
pop
xchg
std
iret
cmc
pop
cltd
jecxz
jl
pop
imul
sub
addr16
cmp
jle
jae
lret
into
in
inc
out
cwtl
pop
in
shll
jmp
inc
pushf
cwtl
ret
or
test
fldl
jo
mov
iret
out
jnp
jecxz
lret
adc
daa
push
mov
sahf
adc
xor
jmp
scas
femms
out
pop
sbb
dec
or
stos
leave
test
inc
jae
mov
shrb
push
cmp
cmp
sbb
loop
lret
out
insb
test
cmc
sbb
in
stos
cltd
mov
outsb
mov
or
or
iret
and
jg
sub
dec
inc
push
xchg
call
cmp
adc
jne
fldenv
push
add
mov
int3
dec
cmp
pop
or
adc
mov
mov
and
add
jle
mov
aas
int3
xor
push
inc
inc
adc
sti
loop
xchg
stc
dec
jnp
adc
jle
mov
into
push
add
mov
into
sarl
in
aad
cwtl
xchg
idivl
or
jl
movb
test
test
or
cmpsb
push
dec
out
fdivp
inc
fs
mov
or
imul
data16
pop
mov
push
inc
js
imul
jne
sbb
ljmp
in
lret
pop
js
dec
xchg
inc
cmc
ja
xchg
dec
xchg
push
test
test
add
sbb
jns
sbb
or
out
jae
in
mov
clc
ljmp
xchg
enter
push
mov
test
add
std
jl
lahf
lock
add
cld
inc
and
push
inc
fstp
repnz
cltd
push
insl
xor
adc
xchg
or
insl
xor
or
ds
je
and
sub
addr16
in
movsl
xchg
andl
add
ljmp
sub
dec
or
js
or
sbb
push
dec
mov
ret
sbb
sbb
shlb
loope
cmp
mov
add
cmp
xlat
jb
out
and
repnz
das
push
mov
cmp
sbb
sbb
jmp
enter
xorb
sub
xchg
and
add
dec
insl
xor
xchg
dec
repnz
mov
into
pop
push
dec
adc
mov
push
call
add
push
pop
push
hlt
cwtl
dec
lcall
out
pop
sbb
add
andb
inc
push
fldt
addr16
xchg
xor
fldenv
xchg
and
stc
xchg
push
cmp
scas
popl
add
fcoml
lahf
add
dec
out
popf
cld
jns
mov
cmpsb
xchg
pop
and
mov
mov
jp
dec
sahf
ret
pop
push
lock
test
xchg
adc
adc
xor
ret
dec
in
pop
mov
subb
cltd
popf
inc
test
inc
js
xor
clc
xor
addr16
sbb
loop
adc
push
cmp
and
mov
adc
xorl
ja,pt
dec
lcall
xor
lcall
jp
ja
mov
data16
dec
sbb
pop
jg
daa
stc
popa
inc
xchg
mulb
xor
pop
lock
inc
adc
sbb
ret
and
testl
push
adc
jo
subl
pop
adc
mov
pushf
iret
mov
shrl
sbb
ds
inc
rclb
push
sahf
ds
ret
ja
sbb
jmp
pop
cmpsb
mov
cmp
loopne
nop
inc
testl
mov
notl
jecxz
sahf
cmp
mull
push
inc
pusha
push
outsl
adc
mov
inc
adcb
mov
push
das
fs
mov
repz
pop
push
xlat
sahf
int
sbb
scas
aas
xchg
sub
push
das
loope
into
sub
mov
fisubl
inc
ret
sub
jle
and
fwait
int3
jnp
dec
pushl
test
movsl
dec
xor
aad
cmp
add
int
rcll
and
push
cmp
pop
and
fwait
hlt
rcll
push
cmc
cmpb
mov
push
repnz
test
hlt
outsb
sub
ret
ret
inc
rclb
lcall
testl
stc
ficomps
mov
test
push
loopne
movsb
mov
cwtl
popa
pop
mov
dec
pop
dec
cmpsb
xchg
or
mov
mov
push
xchg
enter
lret
sti
pop
jo
rcrb
push
cmp
ret
roll
fidivrl
xchg
lret
jg
aas
icebp
adc
ja
divl
mov
ret
ljmp
rclb
mov
fwait
sahf
dec
jecxz
sbb
aas
xchg
lods
sub
mov
jge
jns
test
sbb
add
gs
sti
sahf
mov
or
inc
push
push
mov
adc
mov
enter
daa
and
sar
push
es
pusha
les
arpl
add
js
jnp
mov
fistl
dec
aad
insb
pop
push
cli
inc
and
xchg
sub
pop
jnp
cmp
cli
fidivs
jne
pop
aas
sbb
and
inc
negb
fwait
out
lea
lret
xchg
mov
jge
jo
aaa
or
testb
jge
xchg
dec
repz
jbe
push
jbe
lahf
cmc
and
jmp
aam
pop
stc
jno
xor
mov
aas
daa
aad
push
gs
jae
xor
cmp
int3
stc
fst
scas
mov
daa
mov
daa
mov
not
out
cmp
xchg
sub
jmp
arpl
jnp
cwtl
sbb
repz
mov
fiaddl
divb
js
push
xchg
movsb
loope
inc
adc
out
fwait
into
or
cmpsl
aaa
popa
pop
and
outsb
jns
inc
jmp
decb
and
in
loope
shlb
mov
cmp
mov
push
mov
fstl
jns
add
sub
sub
push
sbb
mov
movsl
xorl
aaa
and
xor
push
addr16
lds
sub
pop
sbb
das
es
dec
cmp
cld
sub
xor
lcall
sub
fs
mov
loopne
mov
jmp
dec
or
in
pop
mov
lret
and
int
loop
jp
shll
lcall
loope
jmp
aad
mov
pop
shrl
mov
outsb
jnp
je
dec
js
js
cmp
push
sub
jg
bound
pushf
ret
insb
pop
or
adc
inc
inc
aaa
icebp
mov
loope
xor
mov
andb
lahf
sbb
pop
ss
out
lea
push
repnz
shll
imul
loope
movsl
jbe
and
andb
xor
and
mov
loopne
addr16
outsl
shr
ss
pop
aaa
sti
xor
jmp
xchg
or
dec
push
push
or
lcall
fdivl
insb
mov
pop
mov
mov
jp
mov
push
push
xor
adc
ds
cwtl
mov
or
test
cmp
jo
push
inc
jno
pop
cmp
cmp
mov
fwait
shlb
imull
mov
mov
mov
outsb
lea
mov
arpl
mov
mov
out
das
pop
xorb
push
cmp
lock
in
ficomps
cmp
mov
sbb
sub
mov
lods
push
jle
mov
or
pusha
adcl
or
adc
mov
xor
dec
outsb
pushf
ficomps
mov
int
mov
add
je
stc
in
adc
icebp
xor
or
out
adc
int
ss
mov
test
movsb
adc
lret
aaa
daa
dec
mov
iret
cld
push
das
pop
lds
jmp
test
mov
out
dec
xchg
jns
in
sbb
js
inc
inc
int
add
mov
out
cmp
insl
pop
inc
xchg
loop
popf
shrb
sbb
sbb
xchg
js
sbb
out
and
repz
movsl
push
xchg
or
js
dec
adc
pop
jecxz
jns
out
scas
and
xlat
or
sbb
mov
mov
sub
test
jmp
dec
inc
sbb
test
mov
mov
addr16
inc
cmp
sub
jl
mov
pslld
or
out
xor
bound
push
pop
cmpsl
push
pop
shll
fisubrs
jo
cli
jge
push
daa
mov
stc
loopne
cmp
adc
jmp
shrl
jo
jg
out
sbb
mov
sbb
ret
pop
adc
movsb
jecxz
xlat
je
nop
pop
and
xchg
repz
or
pop
mov
cmpsb
cmpsl
das
aad
xor
ret
outsl
mov
jle
icebp
jp
mov
push
and
or
in
rcl
stos
xchg
mov
out
jp
mov
dec
je
pushf
popa
int
mov
xchg
cld
in
cmpb
cmp
adc
push
test
lds
and
lds
mov
enter
sbbl
icebp
pop
ja
xchg
mov
jmp
in
jge
jp
daa
push
push
and
cmp
jno
and
sbb
lret
lret
adc
mov
adc
sub
shrl
dec
or
movsb
andb
outsb
inc
mov
sub
sub
lcall
lock
push
sbb
shlb
mov
jae
pop
outsl
add
sbb
js
dec
dec
rcr
outsl
popl
xor
push
pop
cmp
div
add
sarl
enter
in
pushf
mov
in
mov
lahf
ret
sbb
xor
cltd
xchg
les
cwtl
insb
fprem1
xor
movb
jns
lea
mov
pop
mov
push
int3
popl
mov
std
call
cli
add
and
shll
inc
pop
and
xchg
add
mov
jno
arpl
jge
enter
jb
arpl
sub
xchg
ret
lock
mov
jmp
rorl
and
jae
lock
and
outsl
test
loope
nop
std
jnp
ror
icebp
cmp
xchg
test
mov
pusha
sbb
sub
dec
ret
jmp
and
dec
push
push
sub
or
mov
push
mov
sub
into
fnstsw
insl
or
jg
xchg
sbb
into
stc
fdivl
sti
dec
xchg
xor
cmpsl
inc
movsb
and
jno
mov
or
push
mov
and
outsl
sbbl
sub
xorl
out
aad
mov
inc
and
and
shr
pop
jecxz
popa
cmp
aad
dec
and
inc
pop
push
add
mov
mov
dec
mov
fs
in
and
jmp
xchg
aad
mov
sub
mov
ficompl
push
mov
dec
cli
hlt
add
aad
scas
test
dec
stc
sub
jge
push
clc
cmp
pop
xchg
or
loopne
or
pop
clc
adc
sbb
ret
shr
das
rolb
sub
loopne
and
cwtl
mov
stc
push
arpl
ficomps
into
sub
sbb
adc
aas
pop
jo
jle
xor
push
jle
jno
sbb
int3
push
adc
mov
xchg
sbb
outsb
pop
addr16
sbb
jno
data16
rsqrtps
push
or
sbb
daa
sub
lahf
add
xchg
inc
jnp
enter
xchg
jle
dec
and
aaa
pop
movsl
and
jo
mov
mov
push
pop
rcrb
push
mov
loope
call
push
mov
push
fidivrl
mov
dec
jns
test
mov
inc
add
push
mov
sar
xor
cwtl
or
movsb
pop
std
xchg
test
push
pop
xchg
xchg
out
cltd
loopne
mov
or
les
test
push
push
or
or
mov
pop
addl
add
add
loopne
dec
out
bound
inc
addr16
dec
addr16
sub
leave
push
fs
sub
xchg
or
test
fisubl
adc
add
add
sahf
or
stos
push
subb
dec
lcall
shl
pop
jge
aas
fcoms
xor
mov
lds
xor
mov
shr
sbb
popa
mov
scas
or
add
leave
adc
test
ficompl
and
mov
mov
es
pop
fbld
int
movsl
pop
jecxz
pop
ja
jle
or
push
rclb
push
repz
and
xor
lcall
add
or
xchg
lret
dec
aas
mov
int
adc
mov
jb
ja
inc
sub
and
add
idiv
sbb
sbb
enter
addr16
mov
dec
inc
cmpsl
mov
cmp
jo
mov
inc
and
jns
dec
gs
adc
fiaddl
push
ds
mov
xchg
sbb
adcb
or
inc
xchg
inc
pop
lcall
repz
or
mov
dec
jnp
pop
dec
push
xor
mul
aad
cltd
xchg
cli
mov
mov
sti
push
xchg
push
jle
sub
sbb
clc
and
outsb
ret
xchg
ja
cmp
xor
adc
dec
shl
rclb
mov
cwtl
and
sahf
xchg
arpl
lods
xlat
inc
frstor
lret
lods
xchg
jns
inc
sub
sub
or
inc
lods
cmpb
repz
js
mov
pop
push
ret
dec
in
int
repz
les
xor
pop
jno
push
das
mov
sub
sub
aam
dec
adc
mov
jl
jecxz
mull
cwtl
sbb
fsubp
setno
cmp
sbb
jl
xchg
push
pop
lcall
idivl
add
decb
pop
fimull
jl
orl
lea
push
push
mov
sub
adcl
xor
push
sbb
into
movsb
stc
dec
xchg
pop
fisubrl
or
outsb
flds
xor
int3
loop
jns
add
es
adc
dec
cli
push
insl
leave
dec
or
jp
cmp
cli
movsb
fwait
aad
data16
xchg
or
xor
test
dec
mov
or
pop
sub
push
cld
mov
das
cwtl
fwait
lock
jo
dec
lahf
mov
add
js
sbb
popf
fimull
mov
xchg
mov
out
stos
call
push
inc
test
mov
gs
inc
xor
ss
push
sub
je
in
not
fcoms
movsl
rcl
inc
pop
and
push
addl
jo
mov
int
pusha
inc
call
dec
sbb
bound
out
cmp
mov
xchg
jne
pop
push
dec
xchg
add
leave
ds
jbe
pop
pop
movsb
fldt
jae
xchg
mov
push
pusha
and
aaa
cmp
mov
stos
sub
mov
iret
scas
inc
imul
inc
out
imul
in
dec
repnz
aam
leave
imul
mov
and
icebp
pop
mov
dec
mov
idivb
lret
mov
dec
cmp
pop
pop
fnstsw
jo
dec
jge
ret
or
rol
pop
dec
xor
nop
aad
jno
out
sbb
pop
in
jno
xchg
js
push
sbb
adc
shlb
das
mov
xor
int3
inc
fbstp
out
leave
inc
inc
frstor
cmp
addr16
cwtl
fstl
pushf
mov
inc
push
sub
inc
cmpsl
dec
or
stc
pop
in
nop
std
push
das
inc
call
cld
jne
and
dec
mov
xor
or
lods
imul
inc
into
negb
insb
fimuls
jbe
xor
jmp
or
ljmp
lahf
and
std
mov
insl
nop
ret
xor
gs
out
mov
mov
cmp
xlat
add
sbb
push
xor
and
xor
sub
stos
int3
cs
cmpsl
mov
jno
xor
mov
xor
ficomps
subl
fadd
pushf
pusha
cmp
push
xchg
and
sarl
push
pop
sysenter
popa
push
xchg
iret
fisubl
cmp
xchg
daa
dec
cmp
jp
xlat
jne
leave
jp
imul
in
pop
shr
out
cltd
setne
sub
pop
adc
loop
fwait
mov
push
outsl
add
mov
fucompp
mov
cltd
pop
orl
sar
pop
inc
mov
pop
adc
xor
and
mov
int3
and
outsb
sbb
ss
in
lods
pop
inc
adc
jo
fldcw
mov
sbb
leave
clc
aaa
ja
xlat
nop
scas
push
outsb
ret
push
and
jb
ret
ljmp
fstpt
rcrl
jb
sub
xor
cli
jl
pop
test
xor
sub
les
adc
mov
sbb
loope
cmp
test
int
push
fstps
nop
ret
cmp
sub
aas
les
mov
clc
sbb
cltd
sbb
mulb
gs
xchg
push
sbb
jns
add
in
sbbb
sti
es
or
inc
and
ja
out
fwait
hlt
cmp
xor
pop
mov
sub
mov
std
icebp
xor
les
mov
inc
lock
pop
shll
xchg
mov
and
stos
fwait
dec
leave
loopne
xchg
inc
pushf
pop
pop
cmovle
sbb
jp
xor
xor
mov
mov
add
clc
and
incl
cmpsl
loop
push
pop
or
fldl
adc
stc
loop
dec
cmpl
cmc
cmp
sub
cmp
rol
in
ja
das
pop
fstps
dec
ja
add
cltd
jnp
loopne
mov
addb
js
adc
fildl
mov
jbe
rcll
cmc
lods
dec
sarb
cmp
mov
cltd
pushf
mov
aam
dec
inc
aas
cmp
add
add
in
cmp
pop
add
fwait
fwait
nop
pop
inc
jp
fisubrl
ret
outsb
adc
call
ror
cmp
and
push
ds
pop
lock
cmp
sti
nop
in
mov
xchg
clc
pop
xor
jge
xchg
jle
jle
jno
xor
pop
stos
jnp
cwtl
push
stos
sbb
or
mov
test
enter
mov
jmp
or
xchg
frstor
or
mov
sbb
inc
lods
mov
dec
scas
outsb
fmuls
ljmp
cmp
in
inc
outsb
imul
jno
ja
jg
mov
pop
cli
mulb
ss
mov
add
fsubrs
xrelease
outsl
xchg
push
sub
or
roll
aad
sbb
or
stos
scas
mov
in
and
fiadds
sti
insb
xlat
mov
push
ds
lret
mov
xor
mov
repz
jp
les
add
out
inc
push
arpl
dec
dec
aaa
stos
mov
std
and
sbb
mov
sub
pop
xchg
imul
lret
inc
ja
addb
mov
cld
xchg
sub
sti
mov
jmp
xchg
ror
sbb
jge
sbb
sbb
pop
adcl
rcll
fucomip
sbb
in
add
xchg
cmpl
jno
jns
popa
xchg
push
pop
pop
xchg
dec
shll
jl
or
xlat
cmp
push
xchg
rorb
xchg
in
rolb
sub
adc
xor
dec
addr16
mov
or
stos
iret
jecxz
xor
mov
inc
sub
inc
daa
add
xchg
adc
sub
xchg
mov
push
imul
in
pop
mov
test
mov
pop
into
imul
xor
mov
push
dec
cmp
fwait
enter
inc
pop
in
jmp
loopne
push
jno
dec
sub
addr16
fs
inc
inc
outsb
fcmovbe
adc
adc
and
and
lds
psubw
inc
mov
sub
je
fsubl
test
mov
inc
push
mov
xlat
es
add
push
inc
jns
xchg
jnp
jb
lds
dec
or
les
sub
xchg
or
cs
add
mov
subl
mov
ljmp
push
lock
fcmovnu
xor
ret
loop
cmc
mov
insl
lret
fwait
push
add
sbb
inc
adc
pop
pop
push
and
sbb
dec
cmpl
jo
stos
mov
rcr
int
fwait
dec
dec
xor
or
fisubl
pop
push
mov
subl
push
test
xor
std
jns
mov
icebp
lret
insb
shl
lods
loop
lods
pusha
shlb
mov
mov
outsl
or
das
jnp
push
ret
and
inc
in
adc
sbb
enter
jae
mov
cmp
cmp
and
cmpsb
xor
add
xor
wrmsr
inc
pop
inc
test
leave
ss
leave
std
rorb
cmpsb
inc
dec
cmp
les
or
pop
imul
imul
fldl
test
popa
hlt
and
out
aam
les
mov
ss
dec
icebp
ret
jne
int
lock
mov
outsb
jg
xrelease
pop
shlb
push
movsl
and
scas
cwtl
ret
pop
ds
jnp
ss
popa
jge
xchg
pushf
imulb
aaa
pop
bound
mov
fdivs
xchg
pop
push
mov
dec
out
aaa
jbe
popa
pop
pop
push
fmul
aam
stos
iret
jp
sbb
outsl
pusha
loopne
xor
mov
adc
inc
nop
outsb
enter
daa
xlat
outsb
into
add
sbb
movsb
push
jmp
out
xchg
adc
mov
scas
inc
jp
lcall
aam
mov
sbb
test
in
mov
xlat
insb
outsl
inc
jg
stos
bound
push
mov
leave
jnp
inc
cmp
dec
mov
cmp
cmpsl
xchg
mov
mov
mov
lahf
fisttpl
cmp
aam
cs
call
cltd
xchg
stc
or
bound
add
pop
xlat
inc
scas
pop
xchg
lcall
mov
or
mov
inc
inc
shrl
lcall
enter
out
cwtl
mov
push
fimuls
adc
sub
xchg
das
data16
cltd
cmpl
add
push
add
add
add
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
sub
or
mov
mov
mov
movl
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
add
xorl
mov
mov
xor
mov
sbb
mov
sub
mov
mov
mov
push
not
pop
adcl
sub
add
mov
or
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
and
mov
andl
movl
mov
subl
mov
movl
mov
mov
sub
mov
addl
xor
add
orl
mov
xorl
lea
subl
mov
subl
mov
xor
subl
add
mov
andl
lea
sbbl
push
and
mov
subl
xor
add
sbbl
push
and
mov
adcl
push
andl
pushl
xorl
call
inc
mov
add
mov
mov
mov
xorl
xor
mov
xorl
add
jmp
adc
lea
movl
cmpl
je
cmpl
jne
push
pushl
push
call
xor
add
dec
mov
jmp
and
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
sbbl
sub
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
jmp
iret
and
daa
mov
jle
or
popa
bound
bound
fwait
sahf
je
cwtl
dec
cli
movq
or
mov
jmp
push
int3
add
add
fwait
mov
imul
mov
test
clc
bswap
cmpsb
mov
ret
dec
ret
and
inc
pop
sub
inc
icebp
mov
dec
in
sbb
daa
and
add
movsl
jge
push
dec
adc
js
lods
gs
push
inc
enter
push
cld
jnp
outsb
sub
xchg
xchg
loopne
jmp
xchg
in
jmp
les
push
or
mov
cs
xchg
pop
in
jg
loope
sarl
pop
sub
ret
js
rcr
iret
lcall
test
mov
and
push
loopne
jne
bound
inc
xchg
stos
adc
iret
xor
inc
mov
cmp
push
jecxz
add
std
bound
push
sbb
sub
rcll
mov
mov
inc
push
notl
adc
pop
push
push
and
orb
dec
cmp
movsb
sbb
dec
mov
fisubl
push
inc
lods
pop
inc
les
mov
mov
mov
jns
inc
mov
mov
mov
pop
mov
ss
xchg
push
mov
mov
push
fisttpl
push
mov
movsb
in
pop
mov
push
inc
icebp
xchg
repz
push
or
cmpsl
inc
out
add
xchg
sti
fisubl
cmpsb
imul
mov
dec
xlat
imul
xor
adc
or
dec
push
mov
out
les
lret
leave
xchg
push
out
mov
push
push
in
cltd
cmp
outsl
cmpsl
jge
into
imul
inc
cli
loope
lock
out
lret
mov
push
jae
or
inc
mov
leave
aam
cmpsb
faddl
cmpsl
or
adc
aad
cmpsb
pop
and
sbb
icebp
xchg
cs
cmpsb
cld
shl
icebp
jle
fisubrs
popa
or
in
xor
mov
loope
fistps
jl
rol
lods
fsubl
es
inc
lahf
sbbl
push
push
add
cmp
mov
cli
jne
lahf
aaa
sub
xchg
xor
push
or
inc
cld
mov
mov
lret
inc
cmpsb
push
lds
or
mov
ja
sbb
add
jmp
lahf
xor
xchg
outsb
cmpl
adc
pop
mov
or
test
fildll
addl
jl
adc
rol
sub
repnz
imul
xchg
sbb
loop
mov
jge
or
cmp
xchg
js
je
adc
xchg
jge
and
xchg
sbb
and
push
jge
pop
push
xchg
sbb
dec
sbb
mov
sbb
ds
cmp
xor
ret
ret
jl
mov
outsl
adc
aaa
push
xchg
ficompl
cs
mov
xchg
bound
rol
add
jl
loop
sbbb
pop
mov
shll
ss
inc
jecxz
shlb
notl
fimuls
cmpsb
test
xor
icebp
cmp
in
fcomp
add
mov
fstps
js
lcall
adc
ret
inc
aam
idivl
mov
jnp
outsl
lahf
xor
in
out
insb
jno
mov
cmpsb
push
subl
push
out
add
xchg
aaa
out
mov
loope
rolb
mov
rclb
insl
das
sbb
add
out
sbb
inc
popa
fbld
lods
lret
in
push
shr
sbb
test
movsl
pop
scas
rol
or
inc
loop
push
lcall
push
pop
cmpsl
movsb
push
int3
push
push
jo
mov
jge
roll
pop
sbb
jae
cli
das
cmp
xchg
sbb
jle
jl
fs
in
fisttps
cmp
mov
imul
aam
cld
cmp
lock
int3
pop
mov
pop
inc
sarb
mov
outsl
jne
leave
xchg
mov
lret
lods
lcall
add
mov
xor
sub
push
dec
lahf
xchg
insl
xor
xchg
mov
pop
iret
mov
int3
sub
jl
add
in
cli
pop
shlb
aaa
and
popa
push
cwtl
mov
xchg
pop
mov
outsb
pusha
jae
aam
cmc
add
loop
or
dec
dec
rcrl
mov
inc
sbb
idivb
shl
inc
push
js
repnz
lret
pop
fmull
addl
and
fnstsw
jb
test
in
mov
lret
aas
out
std
movsb
cmp
cmp
push
imul
in
pushf
shll
xor
push
cld
pop
inc
mov
xor
sub
lahf
outsl
aad
ret
mov
mov
xchg
pop
push
dec
or
mov
dec
and
ja
cmpb
idivb
imulb
push
pop
lcall
imul
mov
jmp
iret
test
fdivrs
stc
push
test
mov
add
arpl
push
dec
in
stos
lock
out
xchg
int3
inc
cltd
xchg
jo
mov
daa
inc
test
sbb
fstl
in
daa
std
jmp
movsb
push
and
sbb
sbb
aad
pop
pop
adc
movsl
in
dec
jge
repnz
fdivs
inc
and
inc
push
push
sub
cli
ljmp
adc
xchg
cmp
jl
mov
dec
lcall
test
cwtl
mov
mov
mov
dec
cs
scas
call
out
dec
dec
cmp
imul
jmp
iret
lods
pop
xchg
das
lahf
std
cmp
add
mov
lea
test
dec
add
or
lahf
dec
mov
cmpl
push
dec
stos
cmp
movsl
and
pop
lahf
pushf
ljmp
mov
sbb
jne
xchg
cmpsb
cmc
std
push
ficomps
dec
ficoms
inc
in
ja
inc
mov
in
push
ljmp
pop
pushf
popf
xchg
ds
cmp
fs
adc
adc
movl
cs
lret
leave
jne
test
mov
fcompp
sahf
and
icebp
and
pop
fstp
neg
enter
clc
icebp
daa
pop
hlt
jg
mov
cmp
pop
out
lahf
mov
sub
mov
mov
addr16
xchg
mov
adcl
or
dec
xchg
fdivr
mov
clc
adc
into
xchg
fxch
lods
jle
add
xchg
lea
shl
add
push
aas
mov
test
int
insb
jle
test
arpl
xlat
inc
imul
aaa
clc
int
into
pop
jnp
dec
insb
lahf
aas
pop
adc
xchg
push
mov
or
nop
movsb
pop
cmpsl
test
icebp
fildl
lock
adc
dec
shrb
push
into
mov
hlt
fldenv
push
push
sbb
mov
sub
leave
pushf
dec
and
gs
sbb
inc
mov
cmpsb
aam
and
subps
pop
loop
into
lahf
or
and
inc
mov
and
jmp
testl
mov
rclb
mov
mov
add
xchg
push
xchg
out
stos
add
stos
in
and
popl
jmp
push
clc
jbe
sahf
ficompl
inc
or
fidivrl
mov
daa
or
ds
mov
mov
hlt
add
cmc
add
lods
dec
aam
push
sbb
push
rolb
in
pop
js
jnp
inc
in
lods
lea
and
sub
aaa
and
or
pusha
push
or
jp
and
add
sti
cbtw
mov
jb
jne
xchg
jne
stos
adc
jle
xchg
or
dec
mov
rol
xor
cltd
and
dec
and
add
push
cmp
sarl
gs
daa
mov
add
sti
push
rcrl
fisubrl
mov
dec
push
mov
daa
sub
cmp
ret
bound
mov
outsl
jecxz
lods
xchg
mov
hlt
aas
pop
inc
dec
xchg
aas
cs
in
push
js
mov
adc
and
dec
fnstcw
cmp
mov
mov
in
ret
repz
cmp
enter
lahf
ss
cmp
fcomip
mov
dec
sbb
movsl
pop
sub
push
into
and
inc
add
test
mov
dec
gs
jo
cmp
xchg
xor
sti
fimull
pop
test
in
hlt
pop
je
dec
mov
sbb
sahf
pop
gs
or
ret
fscale
je
int
xor
and
or
popf
mov
lds
mov
iret
pop
dec
mov
out
movsl
jmp
sbb
sbb
int3
and
xchg
mov
js
lcall
iret
jo
sbb
sbb
mov
fwait
and
dec
fldenv
jnp
push
movsb
arpl
mov
jge
sti
mov
push
dec
xlat
xchg
xchg
data16
dec
jmp
lock
pop
mov
dec
mov
icebp
ljmp
stos
mov
sub
cs
mov
gs
mov
and
xorb
cmp
push
xor
addl
dec
scas
mov
xchg
leave
fsubrl
call
aaa
sarb
sbb
sub
jbe
inc
pop
ljmp
movsb
cwtl
inc
cmpsb
or
fsts
icebp
push
stos
inc
rolb
xlat
rcrb
cwtl
mov
inc
ja
aad
pop
or
ficoms
cmc
je
push
and
jbe
test
push
cld
imul
lret
test
pop
mov
repz
lcall
jecxz
adc
jb
fucomp
mov
inc
enter
add
pusha
stos
loop
mov
mov
mov
in
sbbb
test
xor
mov
out
cmp
adc
adc
ret
test
mov
pop
mov
sbb
cli
and
jle
dec
out
divl
popf
xchg
mov
orl
aad
sbb
incl
jbe
sti
push
dec
aas
mov
pop
gs
xchg
fsubs
mov
xchg
push
imul
aas
mov
inc
mov
aaa
aas
pushf
cld
push
push
fwait
stc
dec
push
out
pop
push
add
daa
popa
push
push
add
jecxz
pop
pop
pop
mov
add
lcall
sub
repz
ss
repz
repz
in
flds
mov
xchg
and
popa
out
sbb
lods
sahf
xchg
fwait
repnz
insl
push
sub
cld
mov
and
adc
repz
scas
pop
lods
fisttpl
jne
cmp
aaa
sbb
jo
pop
jle
les
mov
mov
inc
jae
pop
push
jno
fst
mov
sbb
stos
mov
icebp
jnp
aaa
pop
sub
paddusw
inc
fs
xchg
fcmovu
hlt
pop
xor
fnstsw
mov
stos
arpl
fs
popa
push
jg
sbb
das
add
mul
imul
xor
loopne
leave
sub
push
sub
inc
adc
lret
adc
add
aaa
cmp
leave
xchg
bound
insl
or
push
xchg
cwtl
cmc
das
xchg
lcall
jne
aaa
mov
scas
inc
es
dec
outsl
iret
aad
bound
hlt
mov
lahf
loopne
sarl
out
pop
mov
sbb
jbe
inc
xor
cmp
dec
pop
pop
xchg
lods
stc
xor
mov
jbe
fdivp
mov
gs
adc
fwait
push
jae
out
enter
in
xor
and
fiadds
xchg
pop
fstpt
and
sbb
mov
xchg
or
popa
nop
mov
jg
test
dec
sbb
popf
bound
xor
sub
inc
leave
sub
xlat
cld
pop
jge
mov
enter
sar
dec
xor
test
sbb
adc
mov
bound
sbb
leave
sub
mov
adcl
aad
cmpsb
xchg
push
sbb
addb
xchg
pop
xlat
movsl
vaddsubpd
or
lock
sahf
imul
pop
mov
mov
js
mov
push
in
mov
fiadds
jecxz
sbb
jge
out
dec
xchg
mov
test
mov
aam
imul
xchg
xlat
dec
insl
xchg
mov
mov
mov
je
mov
ljmp
jmp
outsb
sub
jl
jmp
icebp
bound
mov
inc
leave
test
dec
jle
jle
out
addl
daa
dec
xor
arpl
mov
mov
ficompl
rorb
add
lret
rol
and
int3
jge
inc
lds
outsb
push
call
sub
js
loope
shll
cmc
or
fwait
out
cmpsb
xchg
sbb
pop
aad
in
cltd
dec
xchg
and
pop
dec
outsb
jns
push
ja
xor
popf
lret
add
test
pop
mov
push
lods
jmp
adc
jmp
lcall
add
cld
mov
cld
sub
cmpsl
repnz
or
cs
sub
ds
sub
loop
inc
bound
into
xorl
push
fnstcw
or
and
mov
icebp
xchg
adc
aad
scas
add
movsb
pop
cli
adc
lea
std
pop
sahf
cmp
pmaddwd
rorw
mov
mov
gs
push
jg
pop
cmp
or
test
sub
rcrb
mov
test
jge
dec
std
xlat
add
bound
std
adc
mov
jno
inc
lea
xlat
ret
sbb
jae
or
pop
sub
shll
sbb
inc
sub
xchg
and
ljmp
mov
imul
cwtl
cmpsb
mov
stos
lahf
out
dec
mov
shrb
sub
or
push
sbb
pop
sbb
test
nop
jb
mov
repnz
imul
push
xchg
inc
add
add
mov
push
xchg
mov
jecxz
jl
add
sbb
sub
je
stc
loop
mov
xchg
or
stos
inc
push
jnp
in
hlt
mov
fstpl
mov
mov
mov
daa
jecxz
dec
sbb
sti
imulb
insb
mov
pop
gs
ja
add
data16
loop
fwait
xchg
cmp
std
or
dec
xor
inc
and
sbb
pop
mov
cli
jns
pop
mov
pop
adc
lods
inc
outsl
das
or
lea
xchg
push
lds
fwait
or
cld
repnz
xor
sbb
pop
sbb
outsl
xchg
mov
bound
sbb
sbb
das
xchg
sub
mov
dec
hlt
pop
sahf
add
insb
sub
or
mov
aaa
rcrb
jecxz
add
out
inc
push
xchg
sbb
inc
fyl2xp1
push
adc
push
mov
jb
aaa
mov
jae
insl
fstpt
jmp
testb
fildl
push
in
insl
subl
sahf
pusha
inc
repz
es
notb
sub
pop
repz
push
cwtl
insb
cmp
mov
or
jp
aas
out
nop
lea
mov
mov
jmp
jbe
pushw
pop
icebp
jle
mov
adc
sbb
cmpsl
pushf
into
test
or
pop
push
in
mov
out
adc
mov
cwtl
mov
cmp
pop
push
or
sbb
scas
pop
mov
popf
dec
insl
xchg
adc
mov
add
sbb
lea
aam
pop
les
adc
loope
not
aad
addr16
xor
push
pop
out
xor
test
adc
adc
sbb
test
fistl
test
xchg
ret
jbe
out
sbb
insl
aad
jle
leave
cld
cwtl
xchg
pop
push
adcb
mov
push
xor
sub
xor
xorl
loop
xor
in
sbb
jbe
cmpsb
ds
push
in
scas
xchg
add
insl
idivl
rol
inc
mov
sbb
sub
mov
arpl
push
leave
in
mull
arpl
pop
fsubrp
pushl
xlat
repz
dec
push
sub
clc
jae
sbb
rcrb
or
sahf
arpl
stc
xchg
push
movb
inc
mov
sub
jmp
xchg
pushw
xlat
ficompl
outsl
inc
mov
fildll
shrl
add
sti
jle
gs
xor
mov
mov
insb
fdivs
rorb
bound
insb
push
popa
mov
pop
out
fldcw
jne
sahf
push
in
xchg
and
and
lds
lea
jno
mov
mov
add
mov
or
xlat
pop
cmp
daa
xor
jp
into
jle
fcompl
and
inc
stos
int
test
jge
mov
mov
and
push
xchg
jae
and
xchg
push
out
cmpsb
cmp
in
outsl
fidivs
push
hlt
movsb
aam
rorb
int3
jmp
lea
cli
sub
pop
inc
shrb
hlt
mov
lret
inc
nop
pop
jle
push
dec
xchg
mov
adc
mov
subl
aam
hlt
enter
sub
xor
pushf
jge
add
cmp
popa
xor
pushf
fdiv
fcomps
idivb
loopne
push
imul
leave
cmpsb
movsl
popa
mov
out
xchg
push
in
fldcw
lcall
add
mov
pushf
mov
repnz
add
fbld
movsb
ljmp
daa
mov
jne
lcall
das
mov
and
clc
dec
fidivl
test
lods
stos
dec
push
add
clc
cmp
repnz
push
cld
mov
jecxz
ljmp
lods
lret
aam
inc
inc
cmp
adc
and
mov
sbb
negl
int3
dec
push
adc
push
pop
fildl
shlb
inc
or
adc
push
mov
pop
push
movsl
mov
pop
sub
sbb
mov
lcall
cwtl
arpl
fimull
add
push
add
cmp
cld
mov
dec
cwtl
mov
push
mov
test
popl
test
cmp
push
std
into
push
sti
adc
inc
pop
aas
es
std
pop
dec
in
mov
jg
xchg
ljmp
fwait
jns
cmp
cmpsl
movsb
pop
jo
jns
xchg
xor
cld
adcb
mov
sbb
sbb
enter
aam
in
outsb
mov
mov
lahf
jns
cmp
aas
mov
push
scas
xchg
xchg
jmp
pop
mov
into
pop
jne
cmpsb
int3
sub
outsl
gs
hlt
lret
jl
mov
push
or
and
lret
stos
iret
jge
and
int3
pop
push
mov
fs
add
in
pop
mov
mov
out
into
jne
fists
push
sub
cmp
dec
cmpl
xor
pop
xor
filds
sub
add
xchg
lahf
imul
push
sahf
test
shlb
cltd
fdivr
dec
mov
mov
sarl
movsb
jl
loope
insl
xlat
jnp
pop
xchg
jae
push
rcll
jno
cmpsb
inc
push
ss
or
and
sbb
dec
and
xchg
cli
iret
sub
adc
daa
push
adc
pusha
add
loop
test
mov
mov
das
inc
movsl
cmp
pop
mov
out
mov
out
mov
inc
and
shrb
in
arpl
clc
adc
add
push
lcall
or
pop
out
mov
sub
cmc
xor
out
nop
inc
adc
sub
or
data16
jnp
jns
test
push
xor
ds
insb
adc
mov
push
sbb
movsl
or
xor
pop
jo
fbld
cmp
xchg
adc
push
aad
sbb
push
push
jns
das
or
inc
mov
out
sbb
and
subl
cli
mov
jno
js
popa
adc
lahf
mov
jae
add
fistl
lea
mov
mov
in
xor
outsb
ret
push
in
inc
cmpsb
sbb
lea
negb
push
or
inc
repz
inc
xchg
aam
imul
xchg
jae
jo
push
add
jmp
xchg
mov
enter
fidivrs
or
nop
pop
insl
aam
jl
mov
and
pop
ret
test
sbb
ret
and
adc
les
pop
jmp
sub
mov
idivb
xchg
or
pop
mov
push
add
cmp
fistps
sub
pop
cmp
xor
add
dec
aas
xor
das
imul
aam
ds
add
repz
fdiv
xchg
rol
cmp
inc
pop
sub
add
dec
add
dec
enter
mov
or
in
sub
in
push
xor
push
mov
sub
fwait
movsb
addr16
xchg
jg
outsl
outsl
fists
pop
push
fwait
dec
shlb
imul
sbb
popf
jae
or
adc
aad
lea
pop
imul
pop
xchg
dec
jnp
aam
add
fcomps
enter
int3
pop
shlb
in
pop
jns
xchg
shl
lret
sbb
cld
sub
daa
cwtl
mov
cmp
xor
jecxz
cwtl
bound
lock
xchg
in
push
jb
xchg
outsl
inc
clc
pusha
fistps
out
sbb
test
mov
sbb
xlat
add
pop
pop
insb
andl
adc
pop
ret
jb
out
dec
adc
dec
test
dec
pop
stos
popa
pop
cmpsb
xchg
cli
fmulp
outsb
loopne
fcomp
ja
nop
adc
push
pop
fsub
adc
pop
and
xchg
xchg
insl
dec
add
scas
sub
lock
pop
or
imull
sbb
lock
and
repnz
arpl
lahf
pop
fsts
mov
aas
xchg
aam
fstl
add
add
mov
cmp
aaa
jl
test
mov
icebp
and
dec
jmp
in
out
or
xor
xchg
and
rolb
sbb
adc
jp
icebp
dec
dec
add
out
or
mov
cmp
add
int
test
mov
movsl
xlat
popa
jnp
jle
pop
push
pushf
shrl
aas
dec
and
fwait
mov
pop
les
cltd
mov
mov
cmpsl
insb
test
fistps
je
jo
and
test
ljmp
cwtl
loopne
dec
lea
push
sbb
loopne
and
test
lds
lods
imul
push
or
or
outsl
mov
add
jnp
cltd
movsb
fwait
std
bound
push
xor
iret
mov
out
les
sbb
mov
jg
lock
inc
pop
adc
test
inc
int3
mov
mov
cmp
mov
fisubrl
jnp
push
xchg
insb
add
adc
sub
push
dec
mov
inc
movnti
scas
inc
std
ss
jmp
aaa
jl
fcoml
mov
mov
test
aas
pop
and
in
cmp
adc
shll
jne
lcall
mov
lods
push
and
ret
fildl
and
imul
jae
mov
jnp
adc
pop
clc
in
mov
cmc
aaa
jg
movsl
jne
dec
pop
gs
lahf
and
or
movsb
cmp
jnp
adc
pop
aas
inc
mov
mov
mov
mov
out
inc
sti
and
es
inc
pop
out
dec
adc
ds
mov
call
sub
nop
shll
gs
sub
pusha
nop
stc
sbb
sbb
or
loop
stos
call
rclb
std
call
mov
nop
cmp
xorl
cmp
fisttpl
xchg
loopne
adc
sub
es
pop
pop
loope
jge
jne
add
cmpsb
lea
and
cmp
int
dec
loop
lock
push
das
loopne
sub
xor
or
dec
jmp
icebp
imul
das
jge
out
sahf
add
fiaddl
jbe
jne
mov
inc
cmpsb
and
addb
loop
jno
test
jecxz
or
or
mul
les
das
mov
movsb
iret
das
inc
mov
sbb
inc
mov
inc
aam
dec
mull
jnp
sub
lea
inc
jmp
lods
or
jge
and
jnp
sbb
cmpsb
jge
lock
jb
leave
pop
inc
jle
out
aas
adc
fbstp
push
and
rcrb
or
inc
in
sbb
arpl
inc
out
inc
mov
sti
aad
addr16
das
fstps
fidivrl
push
or
imulb
xchg
in
gs
nop
jns
mov
push
dec
fldcw
sahf
ret
pusha
or
stc
jae
lds
jecxz
cld
ja
inc
aam
jle
incl
push
xchg
ret
push
or
popf
push
or
enter
out
adc
xchg
cmp
jno
in
lds
or
int
cmp
dec
sbb
mov
add
jmp
mov
sub
jmp
dec
jl
and
add
xchg
fistl
adc
jmp
jb
loope
adc
jl
mov
push
inc
sub
popf
mov
adc
enter
popf
mov
inc
adc
insb
cmp
sub
jle
aas
xchg
lods
callw
cmp
sti
mov
pop
rcll
add
inc
bound
pop
pop
loope
ret
je
jae
pop
loope
mov
icebp
dec
mov
fmull
xchg
sub
cli
movsb
jg
scas
dec
dec
and
ret
mov
jnp
sar
sub
lret
repnz
iret
mov
jae
addr16
dec
cmp
or
aas
sbb
emms
push
out
les
mov
push
mov
fbld
lret
in
ret
sarb
out
imul
mov
js
bound
dec
jl
jno
es
jo
icebp
loopne
cli
fdivl
xchg
inc
fwait
jp
aas
sub
push
jae
pop
mov
cmpsb
pusha
adc
adc
into
pusha
out
lods
or
jbe
mov
mov
sbb
add
and
cltd
sbbb
adc
mov
cmpsb
dec
lds
lret
mov
push
pusha
mov
mov
mov
adc
loopne
nop
push
out
add
les
call
pop
xchg
sub
push
sub
andb
mov
jae
imul
or
xchg
inc
hlt
cmp
enter
jmp
push
adc
jno
shll
sahf
xchg
jl
and
jp
dec
and
stc
xchg
inc
mov
push
lods
xor
mov
int
sbbl
test
mov
sbb
jnp
push
jne
mov
cmp
inc
std
inc
popf
insb
jecxz
push
mov
stos
rorl
add
push
imul
push
addr16
adc
test
mov
in
jmp
and
mov
mov
adc
repnz
test
inc
dec
fstl
mov
xor
xor
mov
into
int
adcb
clc
out
dec
mov
pop
sub
push
sbb
mov
aas
dec
loopne
shlb
dec
cltd
stc
adc
adc
jbe
leave
inc
in
fwait
bound
and
pop
add
pop
loop
jmp
and
xchg
fnstsw
bound
outsb
dec
jae
or
push
cmpsl
mov
pop
sub
pushf
shll
leave
mov
mov
ds
rclb
pop
pop
pop
xchg
push
insb
push
sbb
loop
in
ds
call
xchg
pop
fs
push
cmp
xor
call
sub
pop
sub
inc
outsl
mov
int
mov
xchg
mov
insb
mov
add
cmpsl
lahf
mov
mov
rcrl
and
dec
jne
and
push
faddl
cld
cmp
sbb
aaa
cli
adc
dec
rorl
dec
in
or
cmp
inc
mov
repnz
leave
xor
sahf
stos
xor
xchg
and
dec
dec
and
mov
pop
ja
cmp
loopne
fildl
mov
hlt
int
cld
aam
jo
stos
or
cmc
movsb
adc
or
dec
ja
rcll
and
push
repnz
and
rcl
jae
add
mov
inc
imul
repz
add
mov
xor
mov
enter
pop
jge
cmpl
push
pop
inc
fmull
into
inc
dec
ret
lret
mov
xchg
push
sbb
aas
stos
fldt
sbb
cs
or
cmc
sbb
push
mov
aam
mov
sbbb
xchg
or
aam
arpl
cmpsl
pop
push
scas
out
pop
xchg
movsl
mov
mov
dec
inc
mov
adc
dec
add
dec
inc
jbe
lds
cwtl
leave
pop
push
xor
or
ljmp
push
notl
sub
xchg
mov
sbb
mov
mov
leave
bound
out
sbb
fadds
jle
out
mov
pop
jecxz
adc
mov
cmp
js
leave
mov
sub
sbb
dec
out
out
into
push
cwtl
mov
repz
mov
jnp
and
jnp
cli
sti
fidivl
int3
push
sbb
outsb
mov
inc
pop
scas
inc
aam
fcoml
jle
xchg
and
fldpi
ss
or
aas
xor
es
rcll
push
mov
cmpsb
iret
lahf
jno
int3
out
loope
mov
sub
pushf
pusha
lods
mov
mov
movsb
lret
orb
add
lret
dec
cmp
xchg
rcrl
adc
divb
ficomps
xchg
in
stos
pop
pop
mov
mov
inc
aad
cld
cmp
mov
cltd
test
call
dec
scas
pop
jb
push
lds
xor
fisubs
sub
push
adc
push
fcoml
push
sub
cs
dec
xchg
push
pop
pop
push
loope
ja
es
add
pop
adc
js
cld
xchg
stos
outsl
je
xor
fsubrl
scas
in
andb
call
and
adc
dec
int
test
mov
pop
pop
lahf
adc
dec
or
xchg
das
cli
rcr
push
bound
mov
sahf
sbb
in
jp
mov
divb
loop
adc
cmpsb
int3
repnz
das
ss
or
cmp
jo
jp
inc
xchg
or
and
pop
dec
cli
sbb
mov
jbe
adc
sub
xchg
orb
aas
mov
in
clc
lods
jno
mov
sbb
ficomps
jg
and
aas
leave
push
outsb
sub
or
aam
fadds
pop
jecxz
xor
cli
je
inc
jmp
push
sub
aam
or
sahf
fnstcw
xchg
sub
xchg
dec
fldt
ss
cmp
jns
or
ds
in
out
mov
pop
or
jp
iret
sub
push
arpl
nop
inc
std
mov
mov
jns
dec
cwtl
inc
xchg
in
xorb
sub
fisttps
xor
push
ljmp
ret
test
or
pop
outsb
xor
cmc
mov
jmp
sub
fsubl
jle
and
inc
ret
bound
bound
ja
pusha
insl
fmuls
pop
dec
sbb
add
je
cmpsl
add
stos
cmpb
mov
ret
jnp
add
addr16
sub
push
add
mov
stos
subb
jp
cwtl
lahf
and
testl
in
loope
pop
and
stc
data16
inc
aam
xchg
cmp
insb
pusha
inc
xor
lods
mov
dec
mov
js
push
dec
pushf
push
sub
ds
fists
loope
xchg
fs
lods
pushl
hlt
incb
jns
jge
and
cmp
xor
test
jns
add
rol
and
icebp
cld
repz
sbb
into
sbb
jo
loopne
cld
out
leave
add
push
subb
jne
loop
enter
pop
and
cwtl
sbb
movsl
aaa
push
fbld
cmp
mov
xor
sub
mov
js
jp
mov
sub
xlat
neg
test
mov
rcll
jne
xor
xchg
loopne
mov
decl
popf
das
or
sub
inc
push
lret
xchg
in
fcoml
xchg
jno
stos
pop
jno
iret
movsl
mov
sarl
add
add
adc
mov
adc
dec
xor
sbb
mov
xchg
inc
xchg
xor
sbb
push
clc
mov
xor
sbb
sbb
outsl
stos
jge
movsb
adc
add
out
gs
and
test
ja
fists
xor
stc
xchg
loope
out
dec
cld
scas
cmp
jne
cwtl
imul
push
mov
sub
ljmp
mov
mov
push
fstpl
push
and
xor
add
pop
pop
outsb
xor
mov
mov
push
adc
fcmovbe
mov
and
dec
leave
lods
xor
stos
and
xor
cli
stc
push
movsl
dec
jne
cmp
test
into
ficompl
lods
pop
mov
or
sub
leave
rcll
rolb
stos
lods
gs
adc
scas
add
ja
push
aas
lock
shl
fcmove
cmpl
add
fildl
adc
jle
jns
ljmp
std
xor
shl
fldcw
int
pop
addr16
mov
cmp
pushf
jbe
aas
into
lods
and
lds
mov
adc
sbbb
into
dec
add
pop
out
and
leave
adc
dec
insl
lea
mov
mov
stos
ror
into
dec
xchg
leave
fimull
cmpsb
jnp
aam
cs
mov
fucomp
dec
cmp
pop
adc
je
nop
jbe
sbb
jo
cmpsb
js
pushf
adc
xor
dec
push
fdivrs
in
bound
mov
pop
jle
nop
xchg
cwtl
les
or
call
aas
fnstenv
out
shrb
neg
outsb
ss
cmp
lahf
ffreep
push
popa
lock
filds
mov
test
pop
out
fimull
push
aaa
in
sbb
scas
sbb
push
add
xor
xlat
jle
imul
xchg
cmp
sbb
fidivrs
out
or
jae
test
adcb
pop
sbb
test
pop
sti
cmpb
aaa
cmp
fsubr
jle
fld
pop
movsl
mov
insb
les
daa
mov
or
movsl
roll
sub
mov
jo
out
push
lds
add
dec
es
push
or
mov
call
sbb
in
xchg
adc
dec
jmp
sbb
bound
xchg
mov
pop
daa
push
xor
test
push
inc
shlb
data16
xor
sbb
dec
push
je
xchg
aas
popa
shl
aaa
clc
popa
cmpsl
dec
imul
stc
jecxz
xchg
push
pop
xchg
push
subb
mov
push
pop
cmp
mov
xchg
xor
popf
jle
fisttps
int
testb
inc
inc
das
nop
mov
sub
inc
push
arpl
xchg
dec
sbb
lea
cmp
aam
stc
jge
addl
lock
lods
int
insb
jmp
out
inc
mov
inc
jno
add
or
mov
cs
cmp
cli
mov
lods
mov
dec
jns
andb
lcall
and
adc
ljmp
shlb
mov
lods
lret
xchg
push
mov
or
cld
xor
xchg
sbbl
and
fndisi(8087
or
lock
leave
subb
fldl
mov
in
inc
jae
shrb
and
out
mov
inc
pop
aad
in
inc
jnp
inc
push
lea
add
roll
cmp
aam
ljmp
mov
adc
loope
in
stos
popa
lahf
mov
mov
and
dec
xorl
gs
sbb
jbe
mov
mov
xor
dec
aad
xchg
push
mov
nop
gs
movl
jnp
into
rcll
adc
xchg
out
mov
je
push
rcr
or
in
or
cmc
adc
or
stos
sub
loop
pop
mov
add
xor
xor
push
lret
pushf
inc
pop
mov
mov
icebp
cmp
inc
xchg
in
jl
sbb
ljmp
inc
sub
mov
inc
add
jo
cmp
xchg
cmp
mov
xlat
lret
jge
push
jb
and
nop
xchg
and
pop
xlat
add
popa
sbb
lds
dec
test
jne
lret
mov
icebp
mov
popl
ret
notl
fxch
or
pop
cwtl
lcall
gs
cmc
mov
push
sbbb
aaa
adc
push
mov
cltd
inc
je
or
cs
out
scas
pusha
gs
adc
mov
lret
mov
loopne
dec
bound
lcall
negb
xor
sbbl
mov
jecxz
dec
shl
cmp
fmull
cltd
xor
dec
push
mov
lcall
xchg
imul
iret
push
mov
and
xchg
mov
enter
ja
or
cmp
xorb
dec
fsubrl
xlat
pop
into
mov
lods
repnz
dec
movsb
cmp
je,pt
xchg
cmp
pop
push
repz
add
sub
sti
test
fsubs
push
adc
daa
mov
pop
inc
movsl
call
fisttpll
addl
test
mov
lods
out
fdivr
mov
dec
gs
mul
mov
lret
lds
cmp
lods
jnp
mov
mov
dec
mov
jnp
xchg
xchg
aad
int3
mov
adc
xor
call
add
rep
jge
rcrl
stc
xor
mov
jae
fsubp
xor
adc
push
lret
je
lahf
and
scas
stc
mov
fcomps
mov
hlt
out
cld
fcomps
dec
bound
in
cld
lahf
rolb
in
fisttps
fcoml
inc
cld
jns
jo
sbb
jo
iret
js
insb
push
inc
aad
cmp
jl
cmp
inc
jns
dec
xchg
jecxz
xchg
addr16
faddl
fnsave
pop
xchg
and
inc
hlt
lahf
or
xchg
mov
les
jns
adc
imul
xchg
add
mov
movsl
lcall
sbb
mov
cmp
xor
mov
sbb
lret
jno
or
xchg
or
movsb
enter
aam
sbb
add
add
lods
xchg
in
dec
add
ss
scas
jge
flds
and
dec
stos
jg
test
lods
xor
negb
pop
loopne
std
outsl
stos
push
sub
xor
jno
adcb
inc
gs
xchg
and
cmp
lcall
dec
sbb
jl
mov
mov
cmp
pusha
dec
sub
inc
cmpl
sar
inc
mov
popa
aad
xchg
dec
es
mov
jg
sbb
mov
cmpsl
dec
in
in
shlb
jbe
nop
arpl
shrl
and
dec
adc
js
push
aas
mov
cmpsl
jl
or
dec
push
fidivl
rorl
pushf
sbb
and
hlt
ljmp
icebp
push
nop
push
sub
sti
ret
mov
dec
add
call
mov
jp
push
push
adc
pop
pop
mov
lds
xor
in
lock
out
lcall
repz
pop
push
in
push
cmp
mov
bound
pop
test
sbb
mov
pusha
xchg
mov
jb
lcall
pop
jp
notb
add
dec
sahf
cmp
sbbl
jmp
lds
pop
outsb
outsb
mov
push
or
adc
and
push
jns
aas
and
stc
cwtl
push
stos
mov
pop
jp
pushf
push
mov
xor
sti
jmp
pop
mov
inc
jl
push
sub
jae
adc
mov
push
cmp
add
add
push
aam
test
scas
cld
leave
push
jecxz
adc
mov
mov
mov
mov
xchg
push
pop
in
and
cmp
ret
aad
mov
test
inc
xchg
jmp
inc
jmp
rorb
mov
call
push
xor
testb
cmpsb
adc
enter
xchg
mov
mov
dec
fmull
loopne
pusha
out
xchg
add
or
stos
jle
call
sub
popa
adc
push
into
lock
lret
dec
sbb
outsb
out
lahf
inc
mov
xor
fs
adc
mov
fs
fcomps
mov
add
fdivrl
hlt
pop
stc
pop
dec
cmpsb
imull
mov
cwtl
in
or
mov
dec
lods
mov
mov
fisubrl
mov
mov
pop
sub
mov
lret
rcr
out
inc
pop
or
mov
pushf
xor
fadds
rorl
ljmp
cmp
pop
jb
mov
mov
shl
cmpsl
jg
jg
ss
lock
mov
leave
dec
mov
imul
sbb
push
imul
mov
js
mov
inc
mov
loopne
pop
aam
jns
mov
fildll
or
cmp
adc
dec
xchg
lret
xor
fstl
loop
push
cli
vcomisd
sub
cmp
js
in
pop
push
pushf
fwait
imul
jne
or
jae
pop
push
dec
mov
lcall
aas
mov
or
mov
fcoms
jmp
xchg
orl
int
js
in
das
imul
cmpsb
inc
add
clc
repnz
test
imul
mov
lret
test
pop
push
mov
adc
fstpt
inc
xchg
push
pop
inc
outsl
dec
cmp
into
rorl
mov
add
je
les
into
jmp
in
mov
sub
adcl
sub
cmp
mov
jns
hlt
mull
adc
jbe
or
sbb
sub
or
shlb
rcll
mov
mov
int
mov
clc
imul
or
mov
iret
outsl
shlb
pop
test
sbb
push
cmc
add
ja
add
dec
pop
lods
sbb
xor
mov
jg
lret
jle
mov
shrb
ja
adc
cmpsb
sbb
popf
pop
sub
in
xchg
jl
push
fsubl
or
stos
out
dec
testb
or
xorb
jnp
mov
add
sub
jns
sahf
repz
sahf
sti
pusha
ljmp
jl
pop
xor
xchg
movsb
movsb
jmp
mov
sahf
cmpsl
and
cwtl
pusha
xchg
add
pop
mov
fstps
mov
aas
push
xor
sub
sub
mov
and
push
pop
jae
aas
jl
jnp
mov
push
lcall
lock
xchg
aad
dec
dec
add
sti
sbbb
ja
lret
lods
outsl
pop
pop
cmp
or
pop
pusha
mov
int
pusha
negb
cmp
adc
pushl
xor
mov
mov
inc
shlb
ficoml
or
xor
in
mov
xchg
inc
xor
ret
mov
mov
pop
andl
xor
mov
mov
test
ds
mov
popa
jnp
stc
jp
inc
sti
jle
lret
mov
push
enter
push
push
sub
aam
mov
or
js
pop
sub
scas
pop
fists
sbb
adc
and
dec
inc
add
mov
insb
shrb
adc
cwtl
or
rclb
jecxz
int3
push
and
mov
inc
sub
pop
outsl
sbb
pop
sub
jmp
out
shl
adc
cltd
and
xor
add
fdivrp
imul
scas
addr16
insb
jle
push
add
bound
jnp
mov
inc
mov
add
iret
sub
test
or
movsl
sbb
dec
aas
daa
adc
and
inc
call
push
xor
xor
lock
xor
test
je
cmp
fsubs
pusha
lods
adc
repz
jl
leave
mov
xchg
test
cmc
push
jle
mov
aas
add
jae
mov
jecxz
cs
push
cld
xor
cltd
jnp
aad
pop
xor
add
xor
jecxz
ficoms
rclb
xchg
jl
roll
fisubl
mov
test
cli
sbb
cmpsl
ss
inc
cmp
cmp
lock
stc
jne
xlat
jne
push
mov
mov
inc
cmp
out
push
add
std
std
inc
add
outsl
data16
shrb
repz
fcoml
jecxz
imul
jnp
int
gs
sbb
insl
and
or
aad
mov
fmul
sarl
shlb
mov
imul
dec
ret
and
sti
adc
dec
popf
rcrb
add
ljmp
into
mov
jge
and
xor
popf
mov
or
iret
mov
xchg
leave
aas
into
pushw
aas
aam
addr16
jnp,pn
pop
fists
sbb
mov
pop
inc
or
inc
sbb
sar
pop
sbb
out
inc
sbb
pop
sbbb
nop
pop
adc
shr
movsl
adc
push
fadd
nop
imul
call
aam
lods
imul
in
jecxz
mov
loop
sub
add
xchg
leave
sti
cmp
addr16
sbbb
dec
mov
sbb
pop
or
jl
outsl
adc
mov
or
fcmove
or
imul
xor
in
mov
adcl
mov
xchg
mov
push
jl
jns
fisubl
aaa
push
inc
sub
mov
aad
sub
in
push
jo
adc
into
loop
xor
mov
and
jne
ja
cmp
jg
lods
dec
pop
lock
or
dec
cwtl
cmp
cmp
pop
dec
add
xchg
dec
cmp
nop
aad
mov
xor
adcb
es
cs
xor
aam
negl
rcrl
xlat
jl
xor
mov
mov
push
icebp
jbe
jnp
pop
pusha
cmpsb
std
dec
in
mov
arpl
ffreep
lahf
movsl
jmp
outsl
hlt
pop
sbb
jo
jae
push
xchg
leave
jns
cmp
xorps
jno
inc
rclb
cmp
mov
jno
cmp
xor
mov
xlat
pop
dec
add
fiaddl
das
testl
lcall
rcrb
loope
lret
pop
movsb
and
sub
lods
lcall
sbb
sbb
jae
cmp
hlt
push
nop
jmp
sarl
in
xchg
lret
xchg
testb
mov
mov
imul
push
inc
push
add
add
mov
lcall
dec
hlt
pop
xor
andb
xchg
dec
push
adc
andb
push
push
push
lods
dec
mov
mov
or
xchg
or
push
inc
jae
aaa
in
pop
in
pop
dec
inc
ret
test
lods
pop
xchg
pop
dec
out
std
fwait
adc
test
out
pop
push
push
add
rorb
into
cmpsl
add
std
cmp
xchg
icebp
mov
in
inc
cmpsb
lods
jbe
lock
or
xchg
idivb
pushf
pushl
int3
testl
inc
ds
repnz
jb
sbb
pushf
repz
cmp
jle
out
jo
cmp
nop
lods
jnp
xor
jl
fnstcw
sbb
inc
daa
adc
lds
rcrb
mov
fcomip
mov
out
adc
add
pusha
dec
dec
stos
dec
imul
or
test
or
jne
ljmp
es
xor
test
mov
icebp
push
lcall
popa
mov
xchg
mov
mov
or
fistpll
loope
or
dec
fwait
jnp
or
inc
outsl
movsl
add
divl
outsl
jle
sub
mov
pop
mov
push
mov
in
gs
das
or
push
testl
sarb
add
pop
sub
lret
out
stos
mov
fld
mov
push
xchg
fdiv
ja
or
xchg
sbb
stos
or
or
mov
int3
mov
sbb
das
mov
or
imul
lcall
xor
movsb
jp
and
cwtl
mov
sahf
daa
arpl
pop
add
and
fistl
in
push
xor
inc
icebp
testl
cltd
xlat
gs
and
mov
out
xlat
in
mov
loop
push
jl
mov
ja
mov
xchg
sub
gs
inc
addl
xchg
push
add
adc
fs
ljmp
inc
out
test
jno
test
test
sbb
stc
cld
xchg
pop
mov
add
js
jge
push
dec
or
mov
xlat
and
movsl
mov
mov
enter
mov
movsb
stos
jge
add
jecxz
inc
out
ds
leave
sbb
dec
xchg
scas
into
inc
cltd
sbb
sub
movsb
shrb
lock
fwait
push
sub
icebp
mov
push
ljmp
or
jno
xchg
loopne
adc
push
cmp
sbb
xor
xchg
in
push
jns
inc
or
xchg
in
das
adc
out
and
adc
fmuls
sub
jo
movsb
loop
fldl
jp
mov
mull
scas
mov
xor
lret
xlat
aad
inc
movsb
rcll
adc
ljmp
adc
shll
pushf
xchg
cwtl
cltd
int3
pusha
cld
std
inc
addl
out
pop
sti
add
enter
loope
mov
in
orl
mov
jecxz
and
mov
mov
sbb
rorb
aas
xor
push
mov
mov
inc
jno
mov
jbe
call
xchg
add
mov
jb
xchg
outsl
mov
scas
loop
lock
lds
inc
pop
push
repnz
loope
cltd
inc
inc
leave
jg
jae
add
mov
aad
aaa
push
push
int
lcall
ret
test
faddp
data16
xchg
dec
add
bound
out
and
mov
movl
push
dec
sbb
cmp
dec
jb
cmp
cltd
inc
icebp
out
jne
xchg
int
or
in
adc
adc
adc
mov
push
add
jl
cli
aad
popa
rorl
fsub
test
mov
or
lret
pop
idiv
push
jnp
cmpsb
movsl
inc
pop
imul
dec
ljmp
stos
xor
cmp
stos
mov
insl
cmp
add
push
out
jo
jns
jnp
nop
jb
mull
inc
and
adcl
cmp
jnp
and
fs
loop
pmuludq
mov
in
out
sbb
out
xchg
aam
sub
xor
lock
out
mov
push
rcrb
dec
sub
pop
insb
adcl
mov
incl
add
xchg
or
and
shrb
in
cli
lret
rcrb
push
cwtl
mov
ficomps
push
push
xor
imul
and
inc
outsl
jbe
rorb
xchg
sar
inc
inc
or
push
in
inc
gs
addr16
jecxz
inc
xchg
pop
mov
dec
test
jbe
dec
scas
lret
sub
test
mov
xlat
cltd
mov
mov
inc
dec
in
leave
imulb
call
popa
xchg
loop
adc
mov
mov
lahf
jmp
call
andb
push
adc
in
jb
push
fwait
sahf
mov
sbb
sub
mov
out
jo
mov
pop
adc
fsubl
dec
lods
or
loopne
mov
clc
and
mov
pop
dec
dec
dec
xor
es
pop
arpl
sbb
or
xorb
add
push
cmp
jns
xor
stos
mov
int
push
add
inc
jo
stos
sbb
cmp
inc
mov
mov
aam
sub
jge
add
sahf
out
pop
imul
sub
outsl
ljmp
sahf
pop
mov
mov
cli
jno
sbb
sbb
xlat
sbb
pushf
rol
pop
mov
mov
shrb
aaa
mov
pusha
add
dec
xor
mov
movsb
call
and
mov
into
add
lahf
inc
mov
add
cmp
cmpsb
adc
es
cmp
mov
mov
push
jg
addr16
push
sub
iret
outsb
and
mov
or
cmp
stos
sbbl
pop
cltd
cmp
push
sbb
fisubl
and
jp
movsb
pop
fimuls
pusha
xchg
push
testb
xor
sbb
push
cmp
xchg
push
mov
fwait
jae
jnp
pop
xorl
call
xor
cs
jo
dec
rol
jmp
ss
jmp
lea
ret
shr
hlt
es
sub
clc
imul
xor
call
lret
lret
xchg
cmp
lock
test
js
jbe
sub
sub
pop
cltd
pusha
dec
movsl
pop
js
sbb
jnp
scas
and
hlt
test
mov
icebp
inc
orl
pusha
inc
iret
mov
jae
sub
out
sub
adc
sub
shll
pop
and
je
lret
sbb
int
mov
and
fdivs
and
add
ds
test
sub
jecxz
or
xchg
push
mov
inc
push
jge
push
and
cmc
popa
xchg
xor
mov
adc
jns
push
mov
and
loopne
int
enter
jb
pop
xor
and
lret
pop
xchg
push
shlb
scas
imul
sti
mov
aam
push
push
cmc
sub
sub
aam
imul
data16
lret
dec
int3
mov
inc
sbb
push
cmc
test
mov
adc
mov
cmpsb
mov
outsb
cmp
xlat
outsb
push
aam
inc
movsl
jg
in
bound
jle
loopne
or
test
cmp
aad
add
movsl
mov
fsubrl
xchg
xor
jo
es
into
jbe
or
dec
push
mov
sub
jns
jg
scas
dec
or
fiaddl
jle
jmp
push
dec
popa
std
mov
mov
or
pop
repz
loop
xor
jp
mov
cltd
dec
adc
repnz
movsl
pop
and
and
mov
lods
stos
jl
orl
fistpl
out
enter
rclb
fidivl
in
mov
cmpl
test
cmp
mov
pusha
and
add
push
inc
imul
outsb
adc
adc
push
cmp
dec
aam
aaa
outsl
mov
cmp
lea
shrb
in
hlt
notl
add
push
pop
add
divb
hlt
xor
pop
push
dec
es
test
pop
neg
fwait
cmp
movl
pop
call
icebp
sahf
and
stos
xchg
xchg
or
clc
loop
lods
aas
sub
mov
iret
roll
xlat
hlt
dec
jnp
add
loope
sub
sti
iret
cmp
cs
shrl
rcrb
mov
nop
push
insl
mov
adc
and
mov
xchg
push
cmp
xor
xchg
in
das
nop
shrl
sbb
lret
inc
in
in
out
inc
lahf
adc
imul
out
push
cwtl
cld
fcmovne
and
fcomi
fcmovu
leave
loopew
pop
cld
sub
cmpsb
lret
je
xor
and
cmpsl
popa
faddl
jle
incb
movsb
imulb
and
sbb
add
mov
xchg
cmp
movq
mov
jmp
adc
loopne
push
test
or
int3
add
jno
rcrl
fidivl
jp
into
or
xchg
push
testb
test
sbb
ret
bound
and
movsb
xchg
and
dec
popf
add
rorl
ficompl
fcomi
dec
xor
jmp
popa
mov
cmp
mov
jns
das
cs
xchg
mov
hlt
movsb
xchg
sbb
mov
jns
pop
mov
add
cmpsb
add
push
stc
and
fldz
pop
dec
ja,pn
movsb
insl
mov
mov
push
adc
pop
add
insl
sub
cmp
mov
inc
sub
push
outsb
cmp
stos
and
xorb
or
test
dec
mov
test
add
pop
add
xchg
mov
rorl
mov
sub
mov
out
push
js,pn
hlt
jge
sbbl
out
lcall
leave
stos
and
jl
idiv
lods
movsl
or
adc
lds
mov
fwait
add
inc
xchg
rorl
jno
push
xchg
adc
ljmp
push
mov
xorl
dec
cld
imul
adc
in
and
jge
dec
pop
mov
and
popa
ja
dec
arpl
enter
xor
pushw
and
sbb
sahf
mov
cli
dec
add
into
adc
shl
int
fwait
nop
hlt
xchg
xlat
cmp
aad
lea
pop
pop
ja
or
jno
push
out
push
ret
xchg
jo
ljmp
adcl
ljmp
or
push
cmp
and
jg
and
sbb
out
adc
andl
jmp
and
push
inc
bsr
push
sub
mov
mov
inc
fcomp
pop
adc
ficomps
mov
sti
xor
cs
xor
clc
dec
inc
in
cmc
jmp
push
jecxz
fiaddl
addr16
sbbl
std
push
sahf
push
jle
sbb
pop
xor
xchg
xchg
mov
mov
or
pop
lret
cmpsl
fs
sub
fldln2
out
lea
mov
lods
push
scas
popa
xor
fs
pop
mov
imul
movsl
mov
mov
push
out
adc
outsb
push
jno
inc
sbb
clc
mov
jns
and
lret
dec
mov
lcall
push
fcoml
jmp
insb
stos
cmp
jae
aas
testl
jg
add
mov
aaa
clc
jno
mov
mov
gs
pop
cwtl
imul
jmp
push
in
add
test
loop
in
jmp
insl
jnp
push
pushf
popa
fists
adc
mov
sbb
and
push
push
jnp
push
in
fwait
or
lock
cld
sub
ret
jae
push
mov
or
xchg
int
sub
out
out
dec
push
push
gs
stos
aaa
hlt
lock
and
mov
stos
loop
jle
mov
sub
std
icebp
xchg
cli
xchg
dec
cld
inc
mov
jae
fistpl
push
cltd
fsubr
int
mov
cli
fs
gs
xlat
fidivrl
pushf
push
xchg
fisttpll
hlt
sub
leave
mov
and
rclb
fstl
push
cmpsl
push
hlt
cmpsl
mov
lds
shlb
jb
nop
xor
pop
fisubrl
mov
and
subb
fcoml
xchg
shl
pushf
add
clc
mov
pop
inc
in
scas
outsb
add
sub
inc
mov
xchg
fsubl
add
xchg
dec
push
add
addr16
mov
in
inc
test
outsb
mov
jb
pop
or
and
jne
or
add
fwait
into
idivb
jl
jmp
sub
into
and
test
sbb
mov
or
cs
jns
je
imul
cmp
xchg
fnstcw
or
or
mov
mov
add
in
push
push
loopne
test
sbb
shlb
adcb
in
stos
or
rorl
das
sub
or
jb
aam
les
mov
push
addr16
lret
cltd
jb
fsub
push
pop
bound
or
pop
jno
stc
pop
aad
jmp
out
sbb
cs
sahf
clc
scas
xchg
inc
loope
xchg
ja
stos
or
adc
pop
incl
inc
fcomps
adc
xor
jmp
dec
mov
pop
test
ljmp
mov
adc
push
cmp
cmp
mov
add
aaa
loopne
loopne
nop
jecxz
xchg
sbb
xchg
inc
adc
mov
int
pop
hlt
jmp
cmpsl
sbb
mov
dec
or
xchg
mov
out
pusha
movsl
lods
sub
outsl
sti
cmp
in
lret
mov
mov
add
jp
xor
add
adc
lea
lock
les
mov
lock
sbb
and
adc
mov
dec
xchg
int3
stos
je
aad
pop
cld
and
inc
lahf
and
cmc
cwtl
daa
pop
data16
pop
sub
fs
les
inc
jl
pop
out
cs
mov
imul
xchg
and
das
lea
mov
cmc
mov
mov
jl
push
popf
cmpsl
xor
push
out
testb
mov
sub
or
sub
inc
mov
stc
dec
aas
jg
pop
xchg
mov
sbb
ja
roll
add
mov
push
loope
mov
add
iret
adc
cmp
ds
xchg
aas
setnp
testl
data16
sub
jmp
mov
pop
loope
mov
sahf
fwait
and
insb
idivl
ret
sub
pop
adc
push
or
inc
sub
test
add
mov
pushl
rorb
decl
hlt
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
jmp
mov
stos
arpl
jg
xchg
xor
mov
popa
bound
jns
mov
push
andl
sti
add
push
and
cmpl
xchg
int
and
imul
inc
xlat
loop
aas
mov
in
daa
cmp
mov
mov
push
inc
inc
sub
or
or
popa
in
lods
jne
daa
xchg
jno
inc
mov
jns
fucom
out
les
stc
mov
fdivrs
or
jno
push
les
inc
dec
movl
or
mov
lods
mov
dec
or
jo
xor
dec
push
iret
cli
mov
enter
cltd
shll
lea
mov
test
lret
mov
std
jae
adc
inc
mov
mov
or
jae
ret
pop
popf
push
cmp
pop
mov
xchg
xchg
fadds
adc
sub
repnz
imul
adc
inc
fcomip
sub
hlt
adc
xor
std
sub
jle
cwtl
in
int3
cmpsb
pop
mov
fsubl
sub
mov
shll
repz
pop
enter
mov
cmp
ljmp
or
addr16
lret
pop
rclb
and
pop
movb
pop
out
jle
stc
notb
lret
inc
xor
mov
jnp
cmc
jns
imul
sbb
int3
repz
loopne
push
sub
xor
fcmovne
pop
xchg
es
imul
pop
push
or
les
and
dec
jb
call
sbb
test
add
pop
lds
pop
in
xor
lods
xchg
outsl
dec
push
add
testl
int3
cmp
mov
mov
popf
mov
pusha
repz
out
out
cld
add
mov
rorl
mov
je
mov
ljmp
mov
lcall
test
movsb
mov
sbb
jmp
fdivrl
loopne
xor
xor
sbb
inc
cmc
in
jbe
mov
test
lret
mov
cmc
call
icebp
dec
and
shlb
stc
cltd
cli
push
repnz
movsl
push
scas
arpl
divl
or
int3
cmp
mov
aaa
icebp
fs
int
lods
imul
mov
mov
cwtl
stc
dec
add
xchg
adc
cli
sub
clc
xor
jae
jne
test
inc
xchg
and
push
inc
out
jo
pop
add
cmp
add
xchg
and
push
stos
xor
lahf
call
add
dec
insl
adc
sub
cld
sub
popl
sub
or
lods
dec
idiv
hlt
mov
sahf
sti
lea
mov
iret
gs
jg
ret
shll
jae
rcrl
orb
and
mov
xchg
mov
dec
ja
ljmp
xor
mov
pop
stos
mov
push
pop
pop
dec
push
rcrb
or
fdivrp
push
jp,pn
test
sub
dec
stc
sbb
cltd
push
faddp
sti
pop
lcall
repnz
imul
jp
dec
mov
pop
dec
jle
pushf
adc
jmp
test
pop
test
pop
loopne,pt
je
stos
and
shl
aaa
mov
push
jp
bound
lock
push
imul
push
insb
adcb
out
adc
sub
and
mov
iret
and
xor
adc
pusha
insl
ss
inc
mov
push
or
mov
push
jl
ret
into
mov
std
mov
ds
scas
xchg
stos
dec
sbb
sub
rcr
frstor
mov
and
leave
in
repnz
out
sub
push
and
dec
jp
cwtl
outsl
sbb
ret
not
in
jmp
dec
push
jl
adc
fwait
mov
mov
dec
jo
inc
and
inc
jmp
sub
push
cmp
jno
inc
loop
add
cmp
add
fstpl
je
push
add
gs
iret
cmpl
bound
mov
clc
stos
pop
lock
and
mov
addr16
xchg
leave
cld
xor
popa
adc
fdivs
push
mov
ficomps
sbb
mov
loopne
fimull
jmp
jl
sti
mov
push
cmpsb
sbb
lods
mov
jmp
cmpsb
in
push
sbb
les
imul
sarl
jbe
sbb
mov
mov
dec
or
test
aaa
sar
cmp
dec
mov
leave
hlt
mov
insb
aam
fdivs
pop
push
pop
xchg
rorb
js
push
xor
add
xor
mov
jae
pop
cli
xor
lods
lock
adc
rcrb
aas
out
lea
push
cld
js
movsl
pop
push
loopne
js
flds
mov
and
sub
jmp
cmpsb
dec
add
adc
imul
into
push
xor
mov
mov
xchg
icebp
bound
xchg
or
xchg
pop
adc
lods
push
popf
add
pop
adc
xchg
addr16
rol
and
addr16
push
jo
out
arpl
mov
clc
mov
sbb
int
inc
das
dec
sub
inc
mov
popa
sbb
mov
nop
sbb
incl
or
xor
loop
sbb
mov
mov
cwtl
bound
inc
adc
cmp
out
push
push
loopne
xchg
or
lcall
or
pop
xchg
adc
lock
cld
into
dec
insb
push
fwait
and
or
or
lahf
hlt
xor
or
out
mov
sub
push
daa
inc
cs
lret
incb
sahf
sbb
and
imul
push
aas
mov
out
jo
shll
shrl
lock
insl
stc
int3
int
jg
test
in
push
ja
xchg
out
ret
push
adc
jns
jg,pn
insl
out
hlt
cld
sub
mov
inc
push
test
adc
scas
movsb
movsb
arpl
mov
sbb
xchg
test
cmovnp
dec
jbe
jb
idivl
inc
mov
inc
fsubrl
and
push
dec
fimull
repz
jle
iret
sub
pop
adc
jbe
add
or
xor
stos
xor
cmp
mov
xor
out
mov
cwtl
fwait
aas
insl
pop
aad
stos
push
in
out
movsl
std
mov
pushf
imul
dec
lcall
xor
cwtl
mov
fcoms
cmp
inc
cmp
adc
mov
cmp
xchg
jge
loope
lret
scas
jge
stos
pop
lods
adc
in
dec
mov
jo
lock
cmc
lahf
test
push
mov
fisttpl
push
or
mov
cmp
jno
push
inc
loopne
lret
jp
sti
push
and
adc
loopne
push
cmp
push
push
xor
call
fadd
mov
shlb
mov
sub
imul
ret
in
insl
pop
or
pop
cld
mov
in
jp
outsb
cmpsb
fisttps
sub
mov
jl
stos
int
pop
rol
push
lcall
mov
pusha
mov
in
dec
fdivl
call
insl
sti
sarl
cltd
push
mov
mov
stos
subb
je
sbb
sti
mov
sarl
mov
mov
pop
jecxz
imul
iret
dec
xchg
cs
add
push
roll
pusha
out
sbb
stos
xor
cli
pop
ljmp
gs
into
fdivrs
stos
es
ja
fwait
loopne
aaa
insb
andl
jle
pop
pushf
sbb
cmp
cs
mov
clc
aaa
fadds
dec
daa
xchg
adc
lret
ds
ss
out
fidivl
cmp
cltd
jns
shlb
insl
aad
out
cmc
push
dec
call
cld
xchg
mov
repnz
fistpll
loopne
cmp
inc
jne
std
cmpsl
jbe
or
fnstcw
jl
cwtl
cwtl
lock
inc
add
testl
ret
inc
lea
and
pop
aam
popa
orb
nop
in
mov
in
pop
push
aaa
cs
jnp
imul
fs
dec
sub
scas
jns
addr16
pop
inc
aas
lret
pop
cmp
add
daa
pop
xor
insb
lods
fisubrs
cwtl
sti
jmp
sub
pop
pop
pop
jecxz
push
or
clc
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
xor
movl
mov
sbbl
mov
addl
add
xorl
xor
movl
cmp
movl
jne
mov
mov
or
mov
add
mov
adc
mov
mov
xor
adc
push
addl
mov
xor
xor
xor
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
subl
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
pushl
pushl
call
jmp
movl
movl
dec
mov
add
push
mov
adc
mov
sbbl
xor
sbbl
xor
subl
mov
sbbl
add
movl
add
incl
imul
mov
movl
cmp
jne
and
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
insl
push
push
jo
addr16
pop
inc
push
jb
inc
je
gs
dec
js
inc
js
arpl
inc
push
jno
xchg
inc
inc
add
inc
inc
add
or
dec
xchg
dec
scas
dec
ds
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
or
inc
add
aas
inc
add
inc
inc
add
inc
inc
add
aas
inc
add
aas
inc
add
inc
inc
add
mov
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
ds
add
inc
add
inc
add
test
cmovo
adc
push
orl
add
cmp
ds
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
in
add
sti
cmp
add
jl
inc
add
jne
je
jns
jb
addr16
imul
add
addr16
addr16
pushw
push
jle
inc
add
dec
cmpsb
dec
lahf
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
add
add
cmc
enter
push
inc
add
jp
out
aas
inc
add
inc
add
in
adc
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
dec
bound
inc
push
push
ja
jp
push
arpl
dec
dec
data16
imul
add
add
push
imul
push
je
push
jbe
jo
dec
dec
pop
jp
jbe
pop
jo
push
jbe
ja
js
jno
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
add
jae
dec
gs
insb
jp
add
fs
push
inc
inc
outsb
imul
push
push
push
pop
outsl
push
dec
je
jo
add
inc
dec
outsl
pop
inc
jb
jns
inc
pop
add
dec
dec
dec
inc
jno
jae
push
arpl
add
bound
dec
ja
dec
inc
inc
push
push
add
outsb
dec
jno
jbe
insb
inc
push
add
add
add
add
jbe
imul
insl
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
cmp
inc
aaa
dec
ss
xor
dec
add
xor
dec
inc
dec
xor
dec
xor
dec
inc
xor
dec
pop
xor
dec
pop
xor
pop
inc
push
aaa
xor
pop
cmp
xor
aaa
push
xor
pop
add
push
xor
dec
inc
add
xor
xor
inc
dec
cmp
xor
pop
pop
push
add
cmp
xor
add
dec
pop
push
inc
xor
inc
push
xor
dec
inc
xor
xor
push
cmp
pop
xor
aaa
pop
xor
push
add
push
pop
xor
inc
inc
ss
inc
dec
add
dec
pop
push
cmp
inc
add
pop
xor
pop
cmp
inc
dec
add
xor
pop
dec
inc
push
pop
push
add
dec
pop
xor
pop
push
inc
inc
dec
add
push
pop
inc
pop
xor
inc
dec
xor
push
xor
ss
xor
inc
pop
push
push
inc
pop
xor
add
dec
pop
inc
inc
push
dec
push
add
dec
pop
ss
xor
add
xor
add
dec
add
inc
add
add
push
add
add
pop
add
xor
dec
add
add
pop
add
add
add
dec
add
push
add
inc
add
xor
pop
add
push
add
pop
add
xor
inc
add
add
cmp
push
add
add
push
add
inc
add
add
pop
add
push
add
add
add
pop
add
add
add
push
add
dec
add
inc
add
add
add
add
add
push
add
add
add
dec
add
xor
xor
add
pop
add
add
add
pop
add
dec
add
add
add
dec
add
add
xor
add
inc
add
inc
add
add
push
add
add
pop
add
add
add
add
aaa
add
add
push
add
add
pop
add
push
add
pop
add
add
add
add
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
