push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
jmp
mov
cmp
ss
dec
clc
inc
sbb
bound
fstpl
bound
sub
pop
add
pop
jne
jmp
daa
into
push
hlt
and
xchg
fbstp
icebp
aaa
movsb
add
mov
in
pop
cmp
pushf
mov
addl
scas
sahf
test
js
iret
mov
test
xlat
rcrb
aam
dec
std
mov
in
fbstp
push
pusha
stc
mov
cmp
cmpsb
loope
ret
push
sub
jmp
pop
or
inc
insb
stos
cltd
aad
dec
pop
xor
test
mov
rcrb
out
pop
idiv
xor
lods
inc
xor
cmc
jne
push
push
xchg
cmp
lea
js
test
xor
push
pop
mov
xchg
xchg
or
and
sbb
int3
xchg
and
outsl
dec
stc
sar
lods
or
push
adc
fcomi
in
push
movl
shlb
dec
xor
and
jle
cld
inc
mov
dec
xchg
jo
insb
enter
clc
les
and
or
arpl
aam
int
cmpsb
fnstcw
daa
lret
xchg
insl
filds
rorb
and
insb
and
jnp
push
cli
sub
and
or
mov
push
inc
clc
ja
in
ds
lods
dec
pop
xchg
xor
in
loop
test
mov
jo
xchg
jg
fdivrp
in
test
jae
sub
lock
sti
mov
inc
xor
mov
jns
push
or
call
and
pop
mov
lcall
vfmsub231ps
add
cld
cmpsb
clc
jb
cwtl
vfnmsub213sd
shlb
fcomps
ffreep
mov
test
fnstsw
mov
adc
xchg
js
xor
movsb
loopne
popf
jo
jne
push
and
xchg
pop
fimull
movsl
rcll
mov
punpckldq
ret
push
mov
mov
inc
bound
inc
mov
and
sub
scas
and
and
arpl
dec
mov
inc
cs
mov
sahf
xchg
pop
das
xchg
das
sub
lret
push
pop
aas
js
pop
mov
push
add
icebp
loopne
xor
insb
ja
int3
xchg
cmc
loop
aad
test
es
int3
sbb
loope
pop
loopne
andl
mov
pop
mov
stos
mov
cld
out
add
jp
cmpsb
test
adc
xchg
punpckhdq
sbb
push
fcoms
cmp
in
sti
pop
cmp
loop
mov
lock
inc
jg
js
inc
adc
imul
lret
or
mov
xchg
dec
in
clc
out
gs
lds
dec
mov
adc
bound
mov
mov
xor
sti
aad
sti
call
mull
movsl
filds
iret
mov
add
pop
lcall
test
sub
and
sbb
stos
sbb
xchg
fisttpll
mov
sti
push
mov
cmp
pop
insl
xchg
push
arpl
mov
push
adc
lahf
incl
add
xor
mov
push
cmp
push
jne
mov
adc
mov
jbe
cmp
aam
jle
mov
clc
sahf
lcall
stc
ds
dec
mov
lods
ds
sbb
test
int3
ret
pop
mov
cld
pop
aas
and
adc
sbb
pop
lods
mov
or
pushf
popf
ds
mov
pop
push
flds
pop
cwtl
lret
pushf
jnp
aas
and
popf
and
iret
push
outsl
stc
enter
add
pusha
adc
push
aad
insb
adc
mov
jmp
inc
push
push
mov
cs
test
jae
lret
subb
nop
adc
jae
gs
cmc
das
adc
and
ret
add
in
imul
jae
sbb
repz
push
outsb
nop
popa
mov
mov
push
cmpsb
stos
jnp
out
or
push
lock
inc
jne
push
cmc
stos
mov
or
roll
mov
or
test
loop
xchg
daa
call
daa
sbb
fdiv
inc
rcll
jae
es
out
stc
sbb
ja
xor
sub
rol
pop
loopne
mov
loope
push
add
add
xchg
and
clc
xchg
and
lcall
out
sbb
mov
sub
imul
adc
xor
jae
lret
fldenv
adcb
in
lret
push
pusha
sub
cmp
lods
ret
push
fsubs
adc
pop
arpl
inc
shrb
xor
mov
mov
push
or
mov
int
cltd
xlat
pop
xor
mov
mov
pop
or
daa
cmp
or
jp
add
jb
daa
jb
iret
jne
repz
aaa
testl
jnp
repnz
aaa
clc
pop
adc
cmp
xor
in
jecxz
jecxz
popf
cmc
cmp
mov
adc
pusha
cmp
fdivrs
jne
stos
sti
add
sub
shll
push
push
hlt
push
mov
jno
or
les
pop
cmpsl
loop
jbe
push
xchg
mov
cmc
sti
repnz
add
xchg
mul
sbb
xor
arpl
pop
or
cld
cmc
scas
and
fdivl
or
sahf
faddl
push
fcoml
rcrb
or
sarl
adc
mov
enter
orl
aaa
cmc
movsb
adc
pop
xchg
jne
push
test
xor
adc
icebp
movsb
daa
dec
in
mov
push
xor
jae
aam
mov
adc
jns
pop
mov
inc
test
jge
nop
add
fwait
push
lret
jg
enter
jg
in
push
shl
xor
xchg
pop
dec
addr16
mov
flds
lret
and
jne
dec
pop
or
xchg
pop
stos
bound
dec
add
adc
dec
sub
jmp
cmp
mov
xchg
lcall
pop
es
lods
xor
and
mov
loopne
sbb
fwait
inc
lea
mov
movsb
test
jno
cmpsl
sub
fmuls
out
cmp
cmpsl
push
or
jae
shlb
stos
mov
lods
add
sbb
cmp
ror
mov
imul
stos
and
aam
mov
cmp
jbe
push
lods
mov
jmp
dec
push
cmc
adc
int3
aam
mov
scas
sbb
xor
inc
adc
xor
cmp
mov
cltd
sub
lods
mov
mov
lods
pop
daa
and
imul
aam
fldenv
push
jne
cmp
inc
arpl
repnz
fwait
and
sti
out
cli
hlt
mov
fwait
push
jo
adc
aad
xor
sbb
stc
inc
test
mov
dec
jmp
nop
xor
pop
mov
sti
scas
dec
scas
loop
aam
popa
cmp
add
lea
shll
ret
mov
stos
adc
rcll
push
cmpsb
cld
push
movsb
push
and
sub
push
nop
or
pop
stos
mov
cmp
push
arpl
mov
ljmp
push
mov
sub
scas
adc
aaa
xchg
sub
or
pop
add
jae
sbb
mov
out
sbb
push
xchg
dec
mov
test
ds
mov
push
mov
ret
lret
fimuls
scas
xor
aam
and
mov
inc
outsb
mov
cmc
or
in
int
pop
xchg
scas
inc
mov
adc
movsl
icebp
lret
test
es
loop
pop
xchg
shl
mov
sub
lahf
rorb
daa
mov
xor
sbb
inc
clc
test
dec
adc
xchg
xchg
mov
xchg
mov
dec
xorb
mov
shl
in
mov
or
popf
popa
dec
and
add
js
pop
loope
int3
cmp
or
sbb
das
in
insb
pop
lea
lahf
xor
mov
ret
mov
fnsave
aas
pop
jmp
fcmovnu
mov
imull
iret
ret
mov
xchg
cmp
jge
sbb
jle
dec
adc
xlat
pop
lock
les
ja
stos
bswap
nop
pop
sbb
divl
cmp
sahf
jns
xchg
sbb
pop
sub
mov
xor
enter
cmp
pop
std
sub
rol
sbb
dec
push
mov
jne
int
sub
pop
out
mov
in
cld
cmp
ret
ds
pop
add
adc
nop
and
insb
in
shll
lea
enter
rcrb
jge
and
pop
and
mov
jno
popf
iret
ftst
cmpsb
push
and
and
scas
mov
inc
arpl
je
aad
and
and
push
mov
xchg
mov
aam
test
aas
cltd
mov
bound
iret
leave
jae
jae
jo
push
add
iret
addl
stos
adc
inc
clc
std
gs
jl
cmp
pop
ret
mov
push
scas
push
in
mov
sbb
mov
repnz
sub
ljmp
rcl
pop
imul
fs
pushf
out
lods
jmp
cli
push
jge
leave
jns
mov
sbb
dec
mov
lahf
js
decl
stos
aad
out
add
xlat
or
mov
or
dec
scas
xor
sub
mov
test
push
dec
pop
jp
rcl
stos
fadds
icebp
mov
or
dec
outsl
mov
dec
shlb
nop
stos
call
insb
pushf
icebp
shrl
call
jbe
mov
mov
stos
sarb
aad
jg
xchg
pop
es
aam
iret
push
das
inc
jmp
jmp
stos
sbb
mov
nop
and
cmp
rcrl
pop
dec
movsl
int
js
jl
dec
xchg
mov
ds
push
xor
ja
mov
jnp
adc
in
mov
add
add
dec
cmp
pop
dec
out
jl
adc
pushf
sti
cmpsl
cli
mov
and
int3
add
enter
cld
ja
ficoml
int3
dec
sub
push
in
push
data16
push
xchg
mov
lret
inc
ret
mov
sub
and
cmpsl
jnp
xor
lea
cmc
xor
je
mov
jg
sbb
mov
subl
add
fisubl
mov
push
jl
push
mov
aaa
lret
and
pop
sub
fs
icebp
sbb
andb
mov
pop
xlat
push
adc
test
inc
and
inc
sbb
es
or
incb
mov
inc
push
fnstcw
push
xor
xchg
pop
ret
in
int3
andl
bnd
inc
mov
adc
fwait
je
sbb
xchg
hlt
imul
and
jno
and
mov
hlt
inc
in
mov
xor
ss
orb
lret
mov
cmp
iret
jns
cmp
and
outsb
xchg
sub
sub
and
dec
xchg
pop
mov
cltd
ljmp
lret
sub
test
inc
aaa
call
dec
and
mov
lahf
fidivrl
pop
clc
imul
push
shlb
push
out
push
inc
std
out
xchg
jmp
fsubp
adc
pop
test
insb
test
pop
adc
pop
test
fdivr
movsb
jp
clc
sbb
enter
xor
cmp
imul
insb
scas
js
sub
fsubrs
rorl
mov
add
ja
ret
sbb
enter
lds
shlb
add
xchg
jae
dec
xchg
nop
inc
jecxz
call
push
sub
sub
sbb
out
mulb
mov
cli
cltd
movsb
xchg
inc
or
mov
or
mov
mov
std
dec
sbb
popa
inc
je
insl
int3
lcall
inc
push
cmp
clc
adc
push
cmp
icebp
push
addr16
loop
or
xor
in
sahf
cmc
leave
popa
push
xchg
outsb
jo
data16
cmp
cmp
scas
jne
pushf
xor
push
cs
loope
out
divl
or
cmp
sbb
and
cmpsb
jno
dec
dec
daa
sbb
jmp
popa
ja
addr16
lahf
mov
stos
xor
arpl
outsb
clc
push
out
add
sbb
xlat
clc
les
lea
mov
fdivrl
call
cmp
inc
adc
sub
lds
pushf
mov
sbb
popf
mov
negb
fs
sbb
push
jno
icebp
jns
mov
stc
daa
adc
jle
push
lds
sub
or
push
mov
data16
mov
xchg
jl
in
mov
mov
int
cmp
movd
dec
aaa
fstl
pop
pop
fcomps
daa
rcl
mov
out
movsl
adcl
dec
inc
mov
xchg
push
aad
ss
pop
fists
fwait
xchg
xchg
lret
mov
pop
mulb
mov
push
adc
clc
stos
add
call
mov
jbe
dec
xor
mov
push
sbb
mov
aam
mov
ljmp
leave
sahf
repz
stos
jge
rcrb
sub
je
inc
dec
aam
xor
out
out
vmovmskps
pop
int3
leave
jmp
popf
insl
inc
jecxz
repz
mov
icebp
xor
addr16
stos
mov
in
mov
sub
icebp
call
or
adc
hlt
popa
neg
dec
iret
in
xchg
adc
loopne
mov
hlt
sbb
adc
adc
cmp
fwait
cld
xchg
jmp
add
sarl
jae
rorb
movsl
mov
pop
icebp
adc
call
jg
sbb
loopne
mov
mov
or
lock
test
sbb
popa
or
dec
bound
rclb
xchg
fidivl
neg
xchg
divl
lds
and
mov
inc
jecxz
inc
add
adc
xchg
fisttps
int
fisubrs
dec
dec
mov
mov
push
sub
inc
jge
mov
and
sub
mov
dec
or
popa
push
lret
mov
pop
addr16
pop
xchg
dec
inc
inc
dec
setbe
popa
in
pop
loope
or
int
xchg
cmpsl
or
push
out
notl
xor
adc
std
pop
test
das
add
inc
xchg
add
sarb
fcoms
cmp
leave
inc
movb
in
mov
cmp
cmp
mov
leave
jl
sbb
jno
cmpl
dec
dec
pop
dec
push
inc
mov
sub
adc
push
repz
mov
lods
das
adc
sub
or
out
pop
stos
lods
xor
je
lret
fisttpl
add
popa
fdivl
pop
cld
mov
in
icebp
xor
xor
pushf
fstpt
je
push
sti
pop
cmp
add
add
pop
cs
aam
daa
in
add
lods
and
mov
mov
pop
test
sbb
xor
and
icebp
std
gs
jecxz
lods
push
or
push
int
jo
sbb
dec
pop
stc
repnz
lds
inc
or
and
repnz
and
lret
pop
inc
pop
outsl
leave
add
ja
cmp
jge
xchg
jnp
je
insb
call
or
in
adc
cmp
xor
repz
sub
fsubrp
aad
bound
jno
sbb
pop
jb
popf
repz
lret
mov
inc
pop
movsb
push
icebp
push
pushf
andl
int3
xorl
insb
jmp
add
dec
pop
pop
scas
cmp
imul
dec
lods
inc
pop
inc
jl
inc
insb
dec
hlt
push
mov
dec
mov
icebp
lahf
cmc
xchg
jmp
outsb
pop
leave
adc
movsb
rorl
mov
pusha
aas
add
test
pop
sbb
jae
ret
dec
xor
jmp
push
add
xor
push
cmp
loop
push
cmc
test
jg
inc
stos
jne
scas
push
lock
lea
stos
rcll
mov
andb
jg
xor
sarl
lods
cmpsl
or
loop
inc
push
adc
gs
pop
int
ret
xchg
inc
jno
les
test
push
or
and
inc
aad
add
daa
pop
gs
xor
sub
mov
insb
dec
leave
cmp
mov
insb
jmp
orl
test
add
into
rclb
addr16
int3
pop
data16
repnz
mov
pop
sbb
les
test
xchg
hlt
out
jp
cmp
fldt
xor
inc
xchg
fiaddl
cli
les
mov
out
pop
fsubl
addr16
xchg
sbb
popl
dec
xlat
iret
pop
push
test
fistpl
cmpl
jp
and
andb
ja
and
ja
xchg
in
mov
push
adc
pushf
xor
mov
xchg
int
pop
jno
jecxz
pop
or
xchg
stc
rcrb
add
loop
leave
jmp
push
pop
shrl
push
push
push
lcall
sbb
xchg
rcrl
subl
stos
cmp
jg
sbb
pusha
sbb
jl
lea
sub
jo
inc
pushf
sbb
inc
lret
push
iret
ds
pop
loopne
jmp
push
or
rolb
data16
sub
movsb
ret
cmpsb
cmpsb
cli
sbb
subb
lock
xor
sbb
ffree
cli
jo,pn
or
inc
js
cmc
icebp
hlt
movsl
push
mov
xchg
imul
ss
rclb
cmp
std
pop
pop
jne
mov
mov
clc
int3
inc
jp
cmp
cmp
sub
pop
jp
dec
repnz
mov
mov
xchg
into
rclb
mov
xchg
xchg
cmp
mov
cld
mov
cmp
mov
fwait
mov
and
fs
test
or
js
imull
cmc
test
repnz
xchg
test
pop
sub
idiv
loope
cmp
lret
lea
cmp
and
cmp
fiaddl
and
sub
insb
or
testl
daa
inc
pop
mov
mov
andb
dec
out
lods
jns
popf
and
cld
loope
loop
cltd
dec
repz
jmp
ja
loope
ljmp
fdivrs
xchg
mov
pop
jmp
inc
stos
cld
andl
mov
push
hlt
jle
out
cmc
stos
enter
cmp
jl
and
and
sub
nop
dec
pop
clc
mov
int
arpl
ret
or
push
adc
push
aas
rcr
add
mov
std
push
bound
sbbl
mov
jmp
inc
sbb
hlt
push
push
mov
pop
ds
xor
mov
pop
adc
adc
dec
lret
into
dec
lods
jl
sbb
mov
jl
pop
mov
jmp
cwtl
inc
int
loope
add
and
lds
or
cmp
repz
fs
xor
or
andl
rclb
xor
icebp
adc
cld
push
das
scas
inc
movsl
mov
xchg
fs
hlt
imul
sub
pop
mov
inc
scas
daa
jle
loopne
pop
jle
lea
jecxz
pop
or
lds
inc
sbb
and
and
push
sub
jle
push
lahf
push
repnz
inc
sbb
xchg
in
push
push
and
outsl
movzwl
out
lret
nop
notb
xchg
xor
aam
sub
pop
pop
or
add
test
rorl
int3
xchg
mov
xchg
pop
xchg
cmp
scas
iret
or
ficomps
push
sub
mov
push
push
inc
pop
loopne
inc
ds
and
mov
cmp
frstor
fisubl
fwait
das
fistl
arpl
mov
int
xchg
mov
add
jns
and
rorl
ljmp
dec
mov
test
add
lret
dec
dec
ret
lods
int3
dec
arpl
ret
add
inc
dec
jge
cmp
dec
addr16
mov
cmc
ja
in
add
mov
dec
dec
jle
arpl
or
jmp
aaa
mov
enter
dec
mov
repz
hlt
fwait
test
stos
loop
cmc
ret
inc
pop
pop
mov
push
cmpsl
jb
ljmp
addl
mov
mov
adc
fisttpll
ffreep
jle
movzwl
xor
jle
lret
mov
sahf
inc
dec
pop
sub
xchg
ss
in
mov
jmp
fsubs
repz
in
js
or
ret
push
ret
push
andl
xor
or
cmc
xchg
pusha
push
xorl
mov
xchg
cmp
cmpsl
cmp
addl
pop
adc
adc
push
icebp
fists
mov
shrl
divb
sub
iret
idivb
test
xor
lret
inc
xchg
ss
in
outsb
add
or
test
push
cmp
lcall
cltd
repz
popf
pop
inc
sub
ret
cwtl
mov
and
lods
inc
push
xor
mov
dec
push
pop
fiadds
mov
cmc
mov
lods
out
adc
xor
ss
mov
mov
shlb
xchg
shlb
cld
xor
and
push
pop
fisttpll
adc
pusha
fidivs
push
jmp
fbld
enter
pop
jge
sbb
mov
out
mov
pop
adc
loope
sub
in
decb
mov
adc
or
push
ja
divl
push
jno
and
and
pop
ljmp
sbb
mov
cmp
scas
dec
xchg
xchg
lret
dec
pop
imul
add
call
add
mov
pop
xchg
pop
xchg
loopne
pop
scas
insl
mov
stos
jge
js
jge
xchg
ret
bound
push
cmp
jbe
cmpsb
lret
mov
add
scas
insb
mov
ljmp
int3
or
bound
cmpb
lcall
test
jns
lret
jo
add
jb
mov
repnz
rcr
xor
sbb
sarl
mov
insl
sbb
imul
je
xlat
cwtl
pop
fcmovb
mov
lods
ret
mov
fsub
lahf
cvtps2pi
add
mov
push
add
mov
or
addr16
adc
call
ljmp
ficoms
int
fdivrs
dec
xchg
sub
or
cmp
or
fisubrs
mov
mov
cld
sbb
adc
pushf
ror
dec
or
and
in
mov
pop
mov
jmp
mov
adc
xchg
pop
ja
xchg
sub
aad
add
ds
sbb
cmp
idivb
inc
negb
mov
sbbb
sbb
arpl
pop
test
rcrl
xchg
pop
es
xchg
jbe
cs
aaa
add
out
dec
icebp
imul
test
stos
jecxz
cmp
and
fcoms
mov
int
jbe
adc
dec
insl
je
pop
stos
addb
popa
hlt
pop
add
mov
negl
aas
flds
mov
adc
mov
jae
mov
leave
mov
cmc
sbb
icebp
push
or
push
push
cmp
popa
push
push
popa
or
shlb
sub
pusha
dec
sbb
xchg
ja
outsb
mov
pop
nop
sbb
outsb
mov
mov
leave
lret
scas
push
xchg
in
stos
push
lds
jb
rcl
je
jae
daa
insb
pop
add
insb
lock
outsl
adc
fisttpl
aad
cmp
into
cmp
ret
lock
jns
sub
subl
in
xor
icebp
jl
sahf
sahf
dec
fists
jmp
xor
sub
gs
daa
sbb
add
sub
out
xor
inc
push
mov
stos
ret
sub
sub
popa
inc
test
jl
jno
insl
xchg
pusha
ja
dec
popa
jecxz
push
lock
in
jl
or
je
cmp
and
jo
cmpb
es
inc
pop
or
mov
cmc
mov
testl
adc
sti
js
and
jnp
jno
sub
xchg
mov
pop
test
jl
icebp
dec
subl
cltd
pop
inc
jmp
add
push
dec
in
test
fcoms
fnsave
in
xor
call
in
xor
jns
mov
fwait
jle
sub
outsl
addl
cmp
jmp
adc
mov
sahf
or
xchg
mov
pop
incl
stos
inc
movsl
add
mov
rcrb
test
cltd
test
push
insl
jl
jo
cmpsl
leave
mov
orl
fdivs
mov
jge
add
mov
push
jns
sbb
inc
mov
test
push
scas
push
cmpsl
push
or
fs
sub
in
mov
jmp
push
int3
xchg
jb
cli
loopne
cwtl
mov
repnz
mov
lahf
fsub
loope
fidivrl
insb
fsub
xchg
cltd
jae
cwtl
fs
mov
pop
enter
outsl
leave
aad
fisttps
mov
or
in
leave
mov
stos
sub
repnz
test
jno
jle
stc
arpl
push
adc
push
repz
mov
ds
cli
cltd
es
mov
sarl
sbb
jnp
add
imul
mov
mov
jge
sub
sbb
xchg
xor
inc
jae
add
xlat
insl
inc
outsb
daa
jns
out
push
sbb
push
inc
cmp
pop
mov
shrb
sbb
movsl
jno
ror
cmpb
jp
adc
jg
pop
cmp
push
loopne
xor
shl
push
dec
stc
arpl
sbbb
dec
mov
sub
popa
sti
add
mov
pushf
xchg
push
je
aas
mov
cmc
mov
pop
mov
jmp
push
dec
adc
adc
adc
xchg
int
xchg
cli
loopne
lods
repnz
mov
sub
lcall
sbb
fstps
cmp
addr16
or
outsl
jp
adc
jb
rcrb
in
mov
xor
pop
test
xorb
and
out
inc
pop
das
out
pop
jae
in
mov
jmp
jno
js
lods
inc
js
scas
push
cs
mov
push
mov
fisubrs
mov
pop
or
xor
pop
lds
push
repz
test
mov
lods
lret
push
aaa
xchg
jne
sbb
mov
cmp
and
sbb
sbb
inc
stc
jne
mov
pop
ja
shlb
adc
mov
cmp
push
and
mov
jnp
fsts
sub
pop
lds
in
add
jl
inc
mov
aaa
cs
mov
fnsave
inc
fdivrl
mov
lahf
lret
push
lds
xor
rol
les
stos
hlt
sbb
xchg
ret
data16
adc
add
cmp
xchg
cmc
cli
dec
adc
pop
push
popf
adc
lahf
ss
mov
insb
out
in
pop
lock
pop
sbb
xor
dec
inc
xchg
bound
dec
sub
mov
sbb
push
ja
jge
je
out
xchg
pop
or
movsl
ja
das
and
xchg
hlt
dec
pop
ror
rcrl
fs
ja
leave
xchg
mov
xor
xchg
mov
je
dec
cmp
outsb
ss
dec
mov
outsb
dec
gs
adc
push
sub
in
pop
and
sub
xchg
lea
out
adc
mov
stos
mov
ficoms
jns
push
push
cmp
les
xlat
xchg
js
cmp
fstps
push
fcomps
addr16
push
pushf
imul
call
jne
sbb
push
cmp
ret
push
cmpsb
and
or
pushf
cltd
ja
adc
ds
sub
pop
mov
enter
and
xorb
data16
xchg
mov
aas
pop
iret
movsl
cs
lret
cld
adc
mov
inc
loope
nop
aad
aam
inc
adc
sub
cmp
sbb
mov
shrl
mov
and
sub
xor
xchg
push
adc
cmp
inc
sub
js
inc
cmp
push
aad
repz
xor
cmp
jp
stos
jbe
mov
std
xchg
clc
cwtl
cmp
or
push
repz
mov
dec
push
pop
cltd
out
jne
inc
inc
push
loope
mov
lahf
inc
mov
outsl
inc
xchg
dec
and
or
mov
push
movsb
mov
fildl
imul
cld
int
fwait
xor
pop
loope
xchg
lcall
leave
loope
mov
sub
mov
ljmp
cli
sub
and
push
test
add
repnz
and
fisubs
dec
loop
shrb
adc
xor
fwait
cmp
add
push
sub
movl
push
mov
stc
aad
adc
addr16
js
out
mov
stos
cltd
xor
jbe
cmp
pop
or
call
push
and
daa
mov
sub
in
lret
pop
pushf
xor
aad
lahf
sbb
cmp
iret
sub
gs
int3
mov
ret
jp
mov
repnz
fsubp
mov
ds
movsl
cli
mov
cltd
nop
in
jl
into
int3
push
push
loope
jmp
adc
push
ret
subl
mov
aaa
ret
movsl
xor
xchg
mov
mov
bound
icebp
jecxz
pop
push
and
inc
sbb
sahf
push
das
pop
jmp
and
loope
adc
mov
ficompl
jne
aas
xorb
sarb
fimuls
imul
test
test
mov
gs
push
fstpl
sub
cmpsb
repz
scas
std
in
xchg
fisubl
cmp
mov
mov
popa
fldcw
push
addb
add
lods
jmp
ret
cmc
fdivs
sub
loop
push
dec
fildl
mov
sub
sbb
adc
imul
sub
sub
sbb
dec
jns
sarl
repnz
fiadds
sahf
pop
jns
aad
inc
cltd
sti
leave
das
dec
enter
les
mov
ljmp
cmp
jmp
call
add
and
les
int3
jae
push
dec
cmpsl
pop
movsb
pop
mov
jg
insl
xchg
sub
in
mov
push
sbb
pop
cmp
movsl
inc
out
xor
cli
pop
lret
mov
pop
jmp
cld
stos
lret
cmp
scas
xchg
push
pop
mov
adc
cmpsb
pop
sub
daa
test
xor
sbb
idivb
call
jge
xchg
pop
pop
push
mov
or
dec
icebp
xor
push
mov
outsl
mov
jp
add
fs
sbb
repz
sub
lret
mov
outsl
jbe
add
add
add
call
inc
shlb
movb
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
jmp
lods
mov
ja
mov
fdivl
pop
bound
pop
bound
int
flds
sti
fs
je
mov
stos
add
sub
or
daa
nop
sub
xor
and
or
mov
ret
repz
mov
pop
mov
stos
lea
adc
fucomi
aaa
cwtl
loope
loop
popf
sti
mov
pop
mov
sahf
cmpsl
mov
inc
push
or
and
aaa
dec
lock
adc
loop
test
out
ss
cli
loop
sbb
sub
sub
jp
inc
and
repz
imull
in
inc
and
aad
adc
push
repz
push
mov
add
sbb
popa
test
jl
test
or
sbb
push
std
dec
mov
out
cltd
sub
jecxz
test
xchg
arpl
xor
or
pop
imul
int
enter
outsl
fs
sti
incb
mov
mov
dec
shrl
push
test
bound
pop
xchg
hlt
xor
add
cld
stos
out
mov
xchg
dec
add
sub
mov
mov
mov
lcall
add
jg
mov
dec
add
pop
cmpsl
loop
fstl
lahf
outsl
test
and
pop
mov
mov
inc
push
push
jnp
aam
ret
shl
idivb
sarl
jne
testb
loopne
sub
adc
xchg
push
insb
js
xchg
xor
and
sbb
cmp
mov
lods
stos
int
out
enter
xlat
test
mov
or
lcall
insb
sbb
cmpsl
cmpsl
mov
and
shrb
sti
and
push
add
loope
inc
sub
or
dec
mov
out
push
lock
mov
std
aad
cld
mov
sub
pop
ss
pop
inc
test
js
dec
shrb
std
cwtl
lret
mov
rorb
or
es
in
rcpps
lock
mov
sub
out
inc
scas
mov
ret
push
loop
sbb
cmp
pop
js
mov
jns
or
int
lcall
clc
outsb
adc
inc
adc
mov
lock
sub
and
and
orb
lds
cmp
mov
stos
add
insl
xchg
ds
cwtl
cmp
pop
test
pop
jmp
push
xchg
or
stc
loope
pop
subl
pop
es
into
dec
sarl
mov
dec
xchg
inc
mov
push
or
mov
dec
sti
call
ficompl
inc
fistps
cmpsb
pop
push
jmp
das
mov
int3
data16
and
sub
jle
loope
add
arpl
jg
nop
jns
std
pop
cmpb
mov
outsl
push
and
mov
or
inc
cmpsl
push
cld
dec
mov
adc
pop
dec
inc
arpl
mov
fidivrs
cmp
push
mov
cmc
or
jnp
xor
jl
stc
pop
shlb
sub
jo
inc
and
shlb
mov
and
sub
out
test
xchg
cmp
fisubrs
pop
repnz
fcmovnu
insb
shl
in
adc
fcom
pop
icebp
mov
push
jae
fisubl
fs
cmpsl
ja
out
pop
jb
lret
repz
fistpll
fidivs
sub
dec
mov
adc
or
lods
mov
push
ljmp
or
cmp
les
aas
js
pop
leave
rcll
jmp
aam
fcompl
sti
push
jp
sub
sub
lods
adc
test
add
mov
and
enter
adc
add
or
xlat
jo
test
or
test
or
ret
jp
mov
fists
lea
and
das
rclb
jecxz
pop
stc
cmp
inc
xchg
mov
mov
addr16
out
sub
and
in
push
lret
mov
in
add
loopne
insb
inc
fcmove
lcall
xchg
add
lods
add
fwait
es
sbb
inc
std
repz
add
popa
push
mov
or
popf
sahf
fdivl
lds
push
cltd
dec
ret
repz
repz
je
cmp
ret
ss
cmp
xchg
popf
mov
sbb
push
dec
scas
pop
or
insl
out
push
mov
pop
push
sbb
shll
sbb
inc
push
fwait
sbb
dec
xchg
int3
jno
jle
mov
or
cmp
in
mov
adc
stc
shlb
subl
dec
xchg
dec
movsl
xor
cltd
mov
sub
push
sbb
test
pop
lds
xchg
jge
addr16
mov
shr
pop
aaa
mov
cltd
jg
test
scas
adc
sbb
xor
xor
inc
mov
and
or
cmp
inc
aad
inc
dec
sbb
sti
pushl
movsl
and
movb
roll
push
push
rorl
adc
cmp
mov
cld
mov
imulb
cld
mov
sbb
and
shll
mov
jecxz
pushf
or
cmp
add
add
mov
mov
test
lcall
mov
divl
sbb
les
mov
push
fistpl
add
xor
cwtl
dec
mov
enter
cmp
mov
jge
adc
cli
in
lods
mov
jecxz
push
arpl
repz
adc
lock
lds
sub
jns
mov
sub
jbe
xor
imul
sub
pusha
arpl
push
outsl
fnstsw
inc
mov
mov
dec
xchg
ljmp
sub
pusha
mov
or
popf
out
or
xor
frstor
pusha
xor
popl
jnp
ret
mov
sub
mov
jge
in
lea
mov
cmpl
mov
out
jo
xchg
imul
mov
cmp
add
stc
xor
pop
out
mov
jb
mov
and
das
in
inc
imulb
jae
add
xor
out
push
clc
jecxz
xchg
leave
int3
ljmp
jmp
cld
cwtl
mov
ja
or
dec
loope
mov
shl
xor
popf
sbb
fcomp
adc
xacquire
cmpsb
ud1
inc
stos
pushf
pushf
out
cmpb
pop
mov
inc
fists
adc
mov
pop
inc
sub
test
sti
inc
xchg
cld
or
mov
push
sbb
mov
lret
aam
fwait
sbb
sub
sbb
lods
sub
lds
and
pop
out
in
sbb
insl
mov
sbb
clc
pop
inc
ja
stc
int3
scas
xor
cmp
and
dec
push
and
fwait
dec
je
sbb
popl
xchg
push
jle
imul
pop
andl
sbbl
xor
fwait
das
pop
hlt
or
and
pop
jecxz
xchg
clc
sbb
adc
lret
subb
cmp
pop
ret
incl
sahf
cmpsb
pushf
sahf
cmc
sub
pop
cmp
lahf
out
xchg
lods
push
fmull
cmp
fnstenv
out
xchg
sbb
xchg
jo
repnz
ret
xchg
repnz
fsubrl
dec
push
pop
ret
and
daa
or
dec
out
jb
lods
scas
mov
sub
orl
xchg
xchg
lock
push
out
xor
stc
or
or
inc
and
push
aad
test
in
jl
mov
push
xor
dec
adc
xchg
cmpps
outsl
hlt
adc
sub
pop
dec
negl
out
add
pop
roll
push
jmp
dec
addr16
sarl
ds
in
insb
sbb
xchg
stos
es
mov
add
xchg
xchg
jae
mov
add
test
stos
sub
xchg
mov
mov
or
and
push
int
push
lods
ficoml
loopne
add
inc
pinsrw
notb
xor
cli
shr
add
xchg
dec
fs
mov
or
xchg
mov
sbb
cmp
dec
pop
sti
mov
jge
push
sub
sub
jbe
jae
ja
and
hlt
aaa
rcl
adc
das
es
icebp
sbb
lea
arpl
jle
int3
mov
dec
aaa
mov
mov
jg
xor
or
stc
mov
mov
jp
movsl
mov
xchg
add
xorb
ds
xchg
mov
sahf
pop
rorl
lods
dec
pop
cmpsb
bound
and
lcall
mov
jo
add
mov
negb
mov
data16
shlb
mov
divl
inc
notl
test
rcrl
aad
mov
add
sbb
imul
scas
pop
ficomps
xchg
inc
fcomps
fiaddl
imul
lcall
stos
sbb
imul
hlt
in
xchg
sti
pusha
sarl
imul
adc
dec
rcl
dec
pop
xchg
fcompl
cmp
lahf
mov
imul
pusha
mov
and
ret
rcrb
fwait
add
and
pop
mov
lds
pause
lcall
adc
sub
inc
pop
sbb
jae
push
fmul
sti
pop
or
lock
sub
push
dec
enter
and
arpl
dec
push
lds
xor
sub
pusha
xor
push
mov
and
popa
add
push
push
pushf
call
fwait
mov
push
xchg
xlat
cli
push
push
jp
jp
adc
dec
cmp
das
sarl
add
inc
pop
inc
movsb
pop
cmp
mov
rolb
test
fisubrl
sub
mov
js
xor
leave
mov
adc
push
fidivrs
sub
out
xchg
add
rclb
in
mov
aaa
int3
adc
jmp
or
insb
adc
mov
adc
lret
xor
pop
jb
add
iret
rcrl
cmp
lahf
inc
rcll
clc
pop
insl
iret
mov
sahf
adc
sbb
lods
and
dec
mov
sub
in
add
mov
movsl
fidivrl
jnp
cmpb
sbbl
into
sbb
xor
ljmp
insl
xchg
shl
mov
cmpsl
leave
mov
add
xchg
movsb
mov
sbb
cmp
sub
jge
pop
dec
cmp
mov
fidivl
push
insb
sub
jl
xchg
push
imul
and
cmc
std
push
push
dec
mov
icebp
popf
jl
leave
and
mov
xlat
movsl
push
and
fdivrs
lock
js
stc
std
popa
das
outsl
in
xlat
xor
mov
call
test
mov
aas
outsl
pop
jle
push
lods
pop
inc
repnz
sar
nop
je
rclb
xchg
popf
add
xlat
insb
lock
jmp
sbb
inc
stos
cmp
cmp
ret
sbb
xor
adc
mov
imul
fstps
jo
mov
add
ja
mov
jns
mov
stos
out
iret
bound
jmp
cmp
iret
outsb
lret
int
sub
add
in
push
lret
mov
pop
ds
cmpsb
mov
jp
cmc
jl
subl
outsb
pop
xor
clts
cmp
gs
xchg
and
pop
sbb
add
fistpll
adc
call
lcall
out
outsl
xor
or
ja
hlt
loope
es
popa
xor
fcmove
fistpl
inc
adc
in
stc
mov
push
sahf
ret
dec
push
pop
outsb
add
push
jb
es
dec
mov
or
jl
loope
jmp
xlat
fsubp
sbb
xchg
or
popf
sub
imul
cmc
push
add
adc
xlat
and
test
mov
out
daa
inc
mov
ljmp
sbb
or
lock
bound
out
das
insl
xor
rcrb
inc
sbb
inc
sub
je
mov
shr
mov
popf
iret
sbb
or
cmp
sub
xchg
xor
stos
inc
loop
add
sub
popa
mov
imul
test
ss
cltd
cld
fwait
xchg
pop
out
mov
je
icebp
mov
pop
mov
ljmp
lahf
adc
inc
popa
sar
adc
xchg
sub
shlb
aad
and
in
mov
ss
out
or
icebp
stc
int3
inc
sbb
sub
shrb
cmp
cwtl
xor
mov
fists
fidivs
cmp
stc
fwait
lcall
int3
dec
cmp
imul
add
ds
int
movsb
shlb
addl
call
sub
adc
sarl
mov
or
dec
inc
and
cs
out
sub
xchg
in
out
icebp
adc
cltd
sub
jecxz
lods
test
dec
mov
cs
push
int3
jecxz
fwait
xor
imul
stos
sti
lcall
xor
or
mov
xor
push
push
jge
and
out
sbb
lahf
inc
inc
sub
sbb
stos
and
sbb
xor
out
clc
jns
mov
lods
subl
or
pop
pop
mov
stos
popl
test
insb
mov
out
inc
push
cmp
sub
xchg
loop
lcall
and
and
push
dec
hlt
rclb
out
sub
jnp
dec
adc
fcmovnu
fstl
pop
jnp
adc
inc
cmp
sbb
fsubrp
outsb
push
mov
shlb
sti
ss
sbb
inc
cmp
mov
jecxz
repnz
sarb
mov
xor
mov
cs
insl
or
mov
mov
mov
cwtl
insb
out
out
fisttpl
loopne
in
lods
cmc
cmp
ss
adc
push
cltd
out
hlt
push
imul
testl
imul
cmp
inc
add
mov
jbe
hlt
int3
jp
pop
jne
and
sub
shll
test
mov
mov
ss
jp
pushf
out
test
and
aaa
inc
cmp
and
aaa
shrl
neg
xor
lcall
cmp
inc
addl
push
sbb
fsubrl
cld
pop
sub
adc
jmp
loope
rcr
scas
pop
sub
fidivs
cltd
or
imul
fs
cmpsl
adc
adc
movsb
mov
call
addr16
add
xor
outsb
pop
mov
out
out
int3
lods
sub
bswap
xchg
in
mov
stc
int
fcomps
cmp
xchg
movsb
sub
cmp
test
cmp
je
mov
popf
lcall
loope
repnz
hlt
dec
or
aas
aam
popf
fstpt
addr16
out
imul
inc
mov
call
mov
idivl
xlat
xchg
es
add
cli
xchg
and
ljmpw
mov
int
inc
pop
xor
dec
add
pop
cs
cmp
mov
mov
cmp
xchg
push
dec
xchg
clc
jp
cld
stos
clc
sbb
push
std
mov
pusha
out
fwait
in
cmp
push
pop
jg
int3
daa
test
pop
pop
fldt
inc
dec
mov
sahf
mov
push
mov
dec
inc
vcvtsd2si
scas
je
jns
shlb
mov
outsl
dec
mov
jg
idivb
orb
pusha
rcrb
add
rol
cmc
jbe
fwait
mov
insl
mov
icebp
xchg
xchg
arpl
repnz
lods
jns
xchg
cmpsl
mov
idivl
cwtl
lret
cs
popf
push
fwait
push
mov
push
outsb
sarb
shlb
movsb
pop
xor
push
or
test
jnp
or
ret
rolb
or
cmpl
sahf
xlat
push
sbb
fimuls
cmc
les
mov
jnp
lea
mov
mov
xor
sbb
scas
jp
insl
orb
push
mov
loopne
sahf
pminub
mov
xchg
outsl
lods
dec
mov
pop
mov
leave
add
jns
sahf
pop
ficomps
mov
or
cmp
adcb
mov
jmp
test
pop
push
push
cmp
inc
pop
jno
shr
sbb
les
jmp
cmp
xor
movsb
sub
push
repz
push
cld
shll
mov
dec
pop
mov
in
cmpsb
sbb
mov
sub
sahf
repz
cmp
aaa
loop
or
jno
push
ljmp
xlat
mov
push
cmp
sbb
xor
push
adc
push
bound
jne
cmc
push
pop
cmp
fldt
and
dec
inc
dec
in
fadds
es
sbb
in
or
fwait
or
andb
adc
je
cmp
push
sbb
xchg
push
sbb
xor
jl
movsb
push
jle
push
inc
pushf
sub
pop
in
mov
xchg
push
arpl
and
push
xlat
sbb
frstor
add
xchg
dec
mov
xchg
push
sbb
pop
ret
std
xor
and
leave
and
pop
cs
xchg
xchg
jp
leave
jo
push
dec
xlat
add
push
add
jmp
std
jmp
rcrl
repz
pop
ss
ret
lcall
lcall
push
decl
fs
adc
and
negl
inc
xor
sti
cli
movsb
fwait
or
ds
pop
sar
xlat
cli
lods
jl
inc
inc
push
mov
cmp
leave
mov
stos
in
sbb
cli
out
adc
pop
call
subb
popa
rclb
lcall
lret
fstl
inc
mov
mov
in
fs
jne
adc
push
pop
out
out
push
or
sub
sahf
push
sbb
pminub
fsincos
ja
leave
mov
std
adc
aam
iret
out
inc
fs
cwtl
push
xlat
sbb
dec
push
fs
pop
inc
cmpsb
mov
test
sub
mov
jb
pop
inc
testl
mov
jg
rclb
lcall
bound
lock
jb
test
icebp
pop
gs
xchg
shlb
sub
stc
jne
mov
movsl
sti
mov
daa
cmp
mov
cmp
cmp
aad
push
out
inc
inc
cmp
into
test
xchg
sbb
push
pop
inc
in
or
ljmp
push
pop
xor
mov
pop
pop
mov
stc
add
pop
test
movsl
cmp
add
xor
cmp
inc
into
sbb
jge
mov
mov
pop
imul
pop
mov
popa
in
addr16
cwtl
lds
aad
mul
rolb
lock
les
rcll
sub
rorb
fidivl
cltd
stc
and
mov
mov
jae
pop
adc
jae
pop
rcll
imul
sbb
sbb
aaa
push
mov
data16
push
int
mov
push
sub
mov
inc
pop
fstl
aam
mov
sub
push
mov
in
in
popf
gs
pop
pop
mov
xchg
jle
cmp
and
lret
in
or
cmc
cmc
or
sub
aad
jmp
out
shlb
in
dec
lods
mov
aaa
loop
pop
lahf
jo
fs
shll
dec
inc
and
lods
sbb
movl
xchg
js
xchg
push
testl
xchg
cmp
xchg
and
inc
jns
jle
sbb
jae
and
sbb
mov
mov
outsb
push
addb
xchg
sbb
jae
cmp
jbe
hlt
subl
sub
jns
jno
ret
cltd
jp
sbb
out
fcoms
ljmp
iret
lds
lods
mov
fdivrl
xchg
mov
scas
sbb
inc
sti
mov
mov
jg
push
cmp
outsb
fnstenv
cmp
push
mov
pushf
loope
and
out
sarb
mov
dec
jge
mov
pop
movsb
cld
scas
jmp
xor
sub
pop
xor
push
xchg
or
cmpsb
xor
dec
testb
sub
mov
mov
repz
movsb
movsb
add
iret
mov
mov
xchg
mov
add
icebp
dec
es
mov
push
out
and
push
into
xor
ja
fldcw
xchg
mov
or
inc
clc
jne
movsl
push
add
fldenv
lods
addr16
mov
pop
jae
sbb
movsb
adc
xor
push
jmp
sub
mov
cmovl
sbb
adc
fsubr
mov
push
cwtl
aad
push
sub
fcmovnb
jmp
inc
loope
lods
xlat
push
test
fsubrs
cmpsl
sti
in
fs
popa
and
hlt
das
push
and
test
sbb
sar
cmp
xchg
andb
into
sahf
xchg
push
incb
xchg
push
in
xchg
sub
cmpsl
ds
xor
ds
jns
pop
jnp
sub
bound
sub
pop
bound
lcall
orb
cmp
inc
ja
shrd
gs
jnp
xchg
adc
in
faddl
cmpsl
jmp
adc
mov
xchg
ja
mov
mov
adc
cwtl
pop
cmp
stos
sbb
cld
dec
outsb
dec
divb
test
pop
cmp
mov
in
cli
inc
xor
movsb
pop
repz
xor
push
sub
mov
or
xchg
mov
cmpsl
jnp
hlt
adc
inc
es
divl
mov
adc
fst
sub
outsb
dec
cmp
outsb
int3
jnp
hlt
or
daa
imul
dec
xchg
out
addr16
sub
pop
or
fs
xchg
fildll
aad
jle
cmp
pop
jb
pushf
fdivl
shrb
or
lret
stos
and
lret
pop
addb
sti
inc
arpl
adc
push
rcr
sub
mov
cmpsb
nop
adc
cmp
sub
jbe
sarl
movb
lods
pop
fdivrs
test
push
js
push
inc
dec
push
popf
xorl
test
adc
mov
fimull
leave
xlat
adc
in
daa
pop
popa
stc
mov
test
push
pop
pop
sbb
xor
lea
sub
sub
shl
push
dec
sbb
jg
inc
lock
jmp
cltd
inc
out
lock
mov
xchg
push
push
mov
adc
les
push
sub
dec
mov
test
xchg
test
and
int
push
push
push
push
cmp
jmp
iret
sahf
int3
hlt
xchg
jo
pop
pop
push
push
adc
push
pop
lret
dec
mov
in
cmpsl
pop
jg
adcb
dec
cmp
pop
into
mov
lcall
mov
dec
fstpl
jbe
inc
pop
add
adc
out
mov
lret
mov
inc
sahf
dec
push
inc
mov
sub
sbbb
je
popa
inc
int3
ret
and
push
aam
js
movsb
sub
jb
add
jb
sti
adc
mov
xchg
pop
xor
xchg
stos
popf
jmp
pop
lods
faddp
xor
mov
fwait
pop
out
lahf
enter
jmp
lret
mov
outsb
ss
es
mov
inc
ficompl
loopne
les
sbbl
xor
xlat
sbbl
divl
mov
mov
mov
xor
icebp
inc
rolb
pushf
dec
in
mov
out
lcall
inc
mov
and
inc
fdivrs
cmc
push
cmc
aaa
repnz
pop
pop
or
dec
xor
jo
mov
sti
add
sbb
decb
mov
inc
sub
je
out
cli
xchg
sbb
add
lock
cmp
fcomps
hlt
mov
lcall
mov
test
add
nop
out
loop
fcompl
pushf
jae
sub
je
cmp
mov
cmpsb
fnstenv
lret
jns
lock
js
pop
shll
jecxz
inc
imul
jl
dec
mov
adc
adc
push
push
mov
inc
not
divb
xchg
sbb
test
sub
xchg
lahf
mov
int
mov
pop
inc
clc
jmp
mov
mov
xchg
ficoml
pop
aaa
or
and
int3
dec
jmp
pop
push
sub
adcb
xor
sub
push
shll
outsl
sub
mov
pop
jo
fnstenv
mov
mov
shll
std
arpl
rcrb
push
inc
jb
cmp
sub
pusha
test
add
inc
push
mov
xor
lds
jecxz
jmp
push
mov
or
outsl
subl
icebp
scas
push
sub
sarb
sahf
movsb
jmp
or
rclb
or
jae
mov
dec
cmc
jae
sbb
call
clc
xchg
push
inc
add
mov
pop
push
mov
in
in
arpl
loope
mov
inc
cmpsb
xor
mov
and
scas
jno
repnz
sub
jle
jmp
and
mov
mov
cs
lcall
stos
test
mov
mov
bound
sub
in
jae
lds
fistpll
out
mov
push
jns
cmpsb
jns
lds
mov
mov
pop
stc
insl
mov
xchg
jmp
pop
mov
jne
das
aaa
xor
pop
movsb
std
pop
push
inc
add
daa
out
adc
movsb
mov
add
add
dec
pop
or
jp
sub
sbb
leave
sbbl
insl
aas
aam
push
cmpl
lea
add
sbb
jecxz
mov
dec
scas
pop
stc
out
dec
xlat
push
fildl
test
test
fildl
mov
popf
inc
mov
xchg
pop
dec
push
mov
or
in
mov
jno
and
std
aaa
out
mov
popf
pop
mov
mov
inc
sub
cmp
out
push
mov
sbb
fsubl
mov
clc
daa
add
stc
std
inc
mov
mov
push
dec
push
cmp
add
daa
arpl
cmp
cmpsl
mov
adc
sub
pusha
jle
mov
out
inc
dec
jo
xchg
mov
pop
scas
ja
mov
cmp
stos
xchg
les
out
neg
xor
push
jmp
cmp
leave
sar
dec
ret
shrb
daa
xor
adc
or
pushf
xchg
pop
pusha
insb
mul
lret
jnp
lahf
xchg
imul
hlt
jecxz
jb
sbb
jecxz
outsb
pop
dec
or
add
xchg
in
push
add
insl
cmp
repnz
mov
cmc
mov
cwtl
mov
and
mov
sub
pop
and
clc
idivl
ret
lods
sahf
adc
rcrb
xor
popf
sbb
sub
sub
xchg
jnp
push
xor
out
push
outsl
mov
mov
inc
inc
inc
popl
push
mov
cmpb
push
icebp
cmpsl
push
push
pop
pop
mov
lret
es
add
popf
dec
pop
adc
incb
cwtl
xor
movsb
jno
mov
sub
cmp
and
pop
fidivrs
xchg
arpl
xchg
in
movsl
pop
jg
dec
cmp
js
pop
mov
out
cmp
push
sti
inc
add
mov
add
loope
dec
jo
out
sbb
pop
or
mov
xchg
imull
mov
adc
jecxz
sbb
popa
cmpsl
push
jnp
test
or
in
ret
dec
scas
pushf
xchg
pusha
mov
insb
es
and
dec
pushf
push
clc
sbb
sbb
pop
lret
shr
ds
ret
sub
out
cmp
mov
test
andb
dec
cmp
popf
lock
xor
popa
push
sbb
inc
cmc
movsb
xchg
jp
loope
mov
push
adc
adc
std
inc
push
inc
addr16
pop
push
in
or
inc
clc
mov
jbe
notb
pop
notl
bound
push
inc
jns
dec
xor
lahf
adc
in
sti
cmp
scas
lods
or
imul
mov
inc
rcl
or
jle
loope
lahf
adc
enter
xchg
lods
fstpl
add
jg
fisubl
push
aas
fwait
and
xchg
pop
mov
sti
icebp
jnp
or
push
std
cwtl
enter
aam
aam
lods
adc
mov
mov
xorl
shlb
sub
fs
and
inc
xlat
sbbl
cmp
ja
or
loopne
rorl
std
inc
cmp
inc
cs
push
daa
in
mov
arpl
lcall
dec
xchg
stc
jno
pop
push
dec
push
pushf
rorb
adc
and
outsl
pop
arpl
push
aad
add
and
pop
fucomip
and
test
sub
mov
add
xlat
push
ja
xchg
inc
mov
mov
test
sub
jmp
xlat
mov
jno
mov
and
push
mov
xor
pusha
pop
lds
data16
and
imul
or
in
push
sub
cmc
je
loope
popf
push
test
lock
jp
mov
mulb
sub
in
out
jne
test
pushf
ficomps
les
inc
inc
fstps
les
loop
cmp
adcl
xchg
pop
cmpsb
mov
sub
adc
pop
mov
sbb
and
xchg
push
rcll
cmc
sub
adc
ljmp
iret
repz
mov
test
loope
test
cltd
scas
imul
loope
or
iret
xchg
or
cmp
clc
fucomip
std
sub
fs
and
imull
add
xor
lea
sti
movsb
xchg
inc
jne
test
pop
insl
insb
dec
sti
rorb
mov
repnz
arpl
pop
pop
jmp
addl
out
inc
outsl
movsb
dec
jmp
hlt
xchg
xchg
aam
in
and
xchg
es
aam
mov
adc
mov
fsts
pop
in
in
cmp
cwtl
mov
jno
xchg
mov
repz
lret
and
inc
jl
pop
mov
mov
push
jne
jo
inc
fistps
not
inc
lock
std
cmpsb
sbb
xor
mov
nop
and
test
js
pusha
dec
cmc
test
xchg
pushf
out
aaa
cmpsb
push
add
lret
jle
dec
dec
bound
shlb
mov
mov
jns
mov
repnz
lret
jge
jecxz
add
imul
sbb
jns
or
inc
or
and
lret
shrb
jl
xchg
or
subb
pop
jo
push
add
je
xor
sub
and
mov
mov
fcomps
roll
mov
fcomip
test
lcall
cmp
dec
js
div
icebp
cmp
mov
cmc
push
icebp
jb
mov
mov
mov
mov
and
push
lret
push
int3
dec
sub
loop
pop
data16
ficomps
push
adc
mov
add
inc
cmpb
outsb
dec
add
cmpsb
adc
sti
push
jmp
mov
popl
add
mov
mov
xor
xor
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
xchg
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
jmp
insb
pop
call
xchg
imul
inc
ret
cmp
bound
pop
bound
mov
popf
xor
ss
fmul
jg
mov
sbb
cwtl
xor
jl
push
lods
aas
fisttps
sub
and
rcl
out
fwait
cmp
mov
iret
adc
iret
shll
mov
mov
add
push
xor
xor
pop
mov
adc
rorl
xchg
lea
jmp
hlt
subb
xchg
popf
jmp
jo
frstor
fwait
push
lcall
sub
adc
imul
cld
pop
arpl
sti
cmp
fmull
pop
push
sbb
or
or
pop
or
mov
pop
popa
dec
fsubp
ss
loope
inc
into
clc
mov
dec
fs
dec
and
mov
or
in
and
dec
push
xor
cmp
fcmovnu
lods
push
push
pop
mov
bound
lods
decl
push
mov
and
jae
rcrl
out
inc
jne
test
jns
inc
and
push
imul
mov
pusha
lret
dec
dec
and
lea
jmp
mov
mov
xchg
call
mov
dec
pop
stc
imul
dec
into
xchg
pop
adc
jns
push
scas
sbb
mov
dec
lret
jo
jp
xor
sbb
nop
jp
cmpsb
and
mov
int
jns
clc
pusha
std
mov
lock
dec
xchg
pop
sbb
or
jae
dec
add
or
into
scas
aad
push
lcall
aam
and
repz
adc
shr
shl
loop
frstor
in
mov
inc
test
ret
or
mov
cltd
aaa
jl
pop
add
push
pop
scas
adc
jbe
dec
pop
scas
inc
jnp
push
in
out
mov
leave
fdivr
and
sub
pop
les
mov
jb
stos
sti
pop
xchg
mov
mov
test
mov
pusha
hlt
inc
pop
repnz
aad
adc
xor
dec
movl
lock
cmp
push
xorb
mov
clc
imul
mov
sbb
inc
bound
pop
pop
inc
into
mov
sbb
push
test
out
in
loopne
xchg
clc
cltd
inc
out
jl
cld
xor
mov
xchg
out
pusha
lods
out
ret
mov
push
push
movsb
aad
mov
pop
inc
cmp
xchg
jl
out
gs
push
out
lods
inc
xchg
lods
push
insl
loop
addb
pop
out
lea
or
repz
out
mov
ja
add
addl
mov
hlt
rorl
cwtl
cli
jge
add
negb
xor
dec
mov
mov
data16
repnz
xor
jge
dec
cmp
mov
lds
in
mov
xchg
xchg
add
xor
or
aad
cmp
fisttpll
inc
push
lock
into
pop
xchg
xchg
sti
jo
out
dec
adc
jns
leave
lds
fldt
out
mov
dec
nop
arpl
add
inc
sbb
cmp
imul
movsb
orl
out
shrl
or
xchg
fwait
adc
and
test
out
dec
mov
stc
fdivrp
push
mov
xchg
shll
jg
sub
inc
sub
mov
ret
push
cmpsb
mov
xor
stos
sbb
and
cmp
jbe
enter
xchg
inc
xor
xchg
mov
dec
push
ror
push
xchg
jmp
mov
and
fwait
and
adc
jmp
jmp
fcoml
sbb
push
adc
xchg
popa
and
mov
mov
mov
scas
pop
outsl
push
imul
push
dec
mov
mov
mov
in
push
and
sub
out
jne
lahf
lock
or
mov
and
shlb
fwait
jb
jo
je
mov
ljmp
push
xorl
cmp
lods
call
ret
xor
lcall
jno
loopne
jle
idivb
pop
iret
cmp
outsl
addr16
or
push
adc
popf
shll
cmp
xchg
sub
mov
das
mov
mov
xor
sbb
aad
imul
push
push
mov
ficoms
pop
or
jno
clc
fisubrs
lds
adc
movsb
lds
leave
sahf
dec
xchg
inc
es
test
outsl
and
xchg
push
pop
jp
pusha
jmp
sub
jmp
in
add
adc
cltd
pop
cmp
shlb
mov
gs
add
add
adc
loopne
pop
shl
push
int3
mov
loopne
add
push
push
popa
sarb
sub
pop
pop
loop
and
or
mov
popf
mov
ficompl
dec
mov
lds
lods
jbe
mov
out
test
loop
dec
adc
lcall
mov
xor
mov
inc
repnz
mov
cld
and
ret
pop
lahf
adc
jo
aaa
into
mov
mov
inc
roll
pop
arpl
ficoms
pop
std
adc
stc
mov
push
aas
das
insl
ljmp
in
mov
xor
addb
cs
jmp
push
dec
or
jnp
lret
stc
dec
jg
lock
or
icebp
jne
pop
lgs
mov
inc
jmp
add
lea
mov
gs
imul
jg
push
shr
or
inc
jp
sbb
cmp
les
adc
out
sbb
push
mov
dec
mov
aad
pop
xlat
sub
test
xor
jmp
das
mov
xor
push
rcr
filds
dec
add
jbe
enter
cld
mov
dec
push
push
dec
mov
cvttps2pi
out
jle
mov
dec
inc
fildl
stos
fidivl
push
idivb
test
lock
inc
pop
pop
pop
pushf
dec
stc
fbld
decl
xchg
test
sbb
out
mov
push
and
sub
push
xor
and
shl
cmp
cli
test
or
nop
pop
push
lret
dec
std
xor
mov
jne
nop
and
inc
pop
xor
jg
decl
das
ja
or
dec
psrlq
out
scas
mov
jge
pop
mov
outsl
test
outsl
cmpsb
rcr
sub
jns
adc
add
sti
mov
addr16
mov
jmp
stos
or
rorb
jecxz
ss
jno
test
cmp
pop
imul
pop
ficoms
jnp
pushf
inc
xchg
ljmp
push
decl
or
js
xorb
sub
hlt
aam
cwtl
enter
out
imul
sbb
jle
fwait
arpl
imul
sahf
jp
jb
pop
inc
lret
cmp
pop
xchg
inc
mov
mov
jp
aas
xchg
pop
int
adc
lods
push
enter
inc
outsb
xchg
jae
decl
and
sub
inc
sti
sbb
test
scas
inc
inc
jg
out
and
sub
stc
test
ja
fists
cmp
adc
xlat
pop
inc
gs
ret
cmpsb
pushf
jae
imul
mov
aaa
xor
sbb
or
xchg
pusha
dec
out
outsl
icebp
outsb
pop
call
icebp
inc
sahf
xchg
orl
sub
mov
inc
mov
imul
dec
lds
xchg
sbb
dec
dec
adc
mov
clc
inc
outsl
cwtl
lret
lods
cmc
call
mov
test
dec
cld
mov
xchg
addr16
aad
ret
mov
lret
in
inc
das
stc
push
mov
leave
movl
sbbb
mov
push
pop
jnp
jmp
ret
push
and
lods
and
cmpsl
jmp
nop
mov
cmp
mov
xchg
rorb
xor
rorb
vzeroupper
mov
sub
xor
movsb
scas
mov
lds
sbb
stos
jns
mov
popa
rcr
cs
push
insb
jecxz
jae
iret
int
sar
cmp
pop
mov
jb
dec
push
jle
mov
test
insb
jecxz
pop
mov
mov
mov
movl
or
leave
dec
roll
hlt
aaa
ret
iret
push
data16
sub
add
push
repnz
popa
mov
movsb
sbb
mov
sbb
fisubrs
pop
sbb
mov
call
out
out
les
nop
daa
add
mov
lret
xchg
dec
icebp
xlat
mov
pop
mov
sbb
jmp
daa
call
dec
out
call
test
cmc
popf
dec
add
xchg
icebp
dec
adc
push
nop
das
ja
shlb
mov
dec
popf
cltd
push
inc
je
ret
stc
in
repnz
in
push
xchg
adc
adc
in
clc
push
pop
xchg
and
daa
pop
lea
fistpl
dec
jne,pn
sbb
inc
adc
lahf
push
inc
dec
lcall
lahf
lods
aas
inc
hlt
mov
repz
arpl
cs
sub
dec
repnz
and
jno
fdivs
jmp
or
mov
in
mov
mov
scas
cwtl
mov
cmpsb
or
mov
icebp
shrl
sbb
jmp
and
lahf
add
add
scas
mov
sahf
out
xabort
mov
ret
mov
fwait
sbb
jg
mov
sub
xchg
ljmp
sub
sub
je
mov
jl
shll
jo
mov
sub
xchg
test
jns
aam
call
jp
arpl
test
mov
popa
push
pop
movsb
xchg
scas
lret
stos
ret
mov
inc
lock
nop
les
stos
mov
push
and
js
mov
and
arpl
dec
std
add
or
mov
jae
outsb
inc
push
push
mov
cmp
repz
fnstenv
jmp
mov
rol
sbb
in
jo
ss
inc
outsl
enter
inc
idivb
mov
and
add
push
dec
pop
mov
dec
pop
sbb
mov
sub
lahf
pop
cli
lds
out
sti
cld
add
pop
inc
inc
repnz
push
fldl
fdivr
cli
jns
cmc
sbb
add
cmp
je
lock
inc
fiaddl
rolb
cwtl
inc
pop
pop
mov
mov
fcoms
movsb
dec
sub
push
int
jl
xchg
testb
les
stc
mov
push
inc
in
fs
jno
cs
push
mov
pop
shlb
sub
xchg
xorl
jb
sbb
bound
push
sbb
cmp
sbb
add
xchg
imul
fbstp
test
or
push
pop
into
add
push
sbb
push
das
cmp
scas
or
sbb
lods
mov
test
xlat
insl
xor
out
ror
jge
sub
mov
outsb
xor
and
mov
loop
dec
pop
xchg
lea
mov
fimull
mov
cmp
sbb
jnp
or
add
mov
dec
add
mov
push
dec
adc
std
test
adc
cmp
lret
lea
xchg
inc
faddl
add
iret
mov
mov
das
adc
xchg
xor
jg
popa
mov
ljmp
movsl
or
dec
inc
mov
sub
iret
mov
shl
out
jl
xchg
dec
in
push
jno
dec
mov
push
hlt
jo
lea
aas
mov
pop
mov
ror
add
fsubp
add
mov
arpl
outsl
adc
inc
pop
mul
jae
cli
sub
lods
mov
test
fildl
fs
stos
cltd
mov
mov
cmp
out
dec
mov
out
cmp
push
jns
fisubs
pop
xchg
mov
ret
and
out
push
sub
or
xchg
dec
aam
je
jae
or
call
sub
stos
arpl
cmp
fucom
in
sub
or
lahf
pop
or
dec
fisttpl
adc
fdivs
aad
pop
adc
jge
sub
inc
mov
fwait
in
sahf
xchg
cmpsl
imul
movsb
shll
jp
movlps
fildl
ret
inc
es
out
popa
cli
adc
mov
push
call
add
or
sbb
xchg
hlt
andl
push
mov
pop
lds
push
xor
xchg
xchg
testl
dec
and
dec
insb
sub
loop
pop
fsts
add
gs
mov
fistl
sub
mov
ss
insl
dec
pop
mov
out
push
xor
sbb
lret
sbb
pop
sahf
add
test
sbb
aaa
outsl
lret
outsb
or
push
fwait
mov
xor
xor
xchg
repnz
leave
xchg
jb
jb
jmp
sub
aad
cmpsb
or
jae
nop
arpl
xchg
aam
mov
or
jne
and
mov
icebp
add
jns
xlat
and
adc
jmp
xor
cmp
add
sub
icebp
movsb
and
mov
push
jg
xor
rcrl
pushf
dec
dec
popf
jmp
pop
fisubl
test
mov
xor
ss
push
pop
cmp
repnz
repz
incl
test
cli
mov
and
push
pop
jp
ds
sbb
push
pop
sbb
lds
cwtl
faddl
insb
or
jg
dec
mov
cmc
rcl
or
les
popa
cltd
or
addr16
outsl
adc
adc
xchg
add
push
les
iret
repnz
mov
cli
jmp
and
adc
xchg
xor
xchg
pop
js
scas
sbbl
mov
inc
outsb
sub
mov
pushf
addr16
pop
jns
int3
call
adc
xor
mov
fistl
pop
sbb
nop
fbstp
sbb
or
out
scas
insb
ficompl
sbb
dec
enter
fstps
repnz
add
xchg
mov
cwtl
aad
xorb
sub
enter
loop
mov
inc
sbb
mov
in
dec
lret
repz
jl
mov
sub
mov
sti
jbe
daa
xorb
and
ljmp
mov
ss
mov
xor
lods
mov
call
lock
shr
loope
mov
imulb
aaa
mov
push
push
sahf
inc
dec
mov
aam
daa
stc
rcr
or
repz
enter
je
push
test
and
in
ret
mov
jnp
mov
scas
and
nop
xor
lret
int
pushf
mov
jg
aaa
mov
fiaddl
pop
push
jp
inc
push
in
sbb
inc
xor
xchg
jnp
lea
lock
xchg
test
and
mov
adc
int3
mov
inc
js
jmp
xchg
pop
movsb
push
xor
jle
xchg
inc
call
and
lret
cmp
nop
sbb
push
popa
sbb
add
dec
and
shlb
out
jae
xlat
mov
int3
push
cmpsb
cld
xor
or
push
rcr
idivb
pop
fdivrs
push
pushf
das
aad
les
cmp
jle
aam
in
rclb
or
adc
push
test
call
add
je
out
ror
xor
jno
insl
out
xchg
test
cmp
push
mov
cmp
shll
aad
jno
jb
sub
shlb
or
cmp
push
and
mov
ret
inc
hlt
icebp
xor
data16
lret
jne
sarl
out
inc
in
adc
dec
aad
stos
jge
push
xor
into
fldcw
and
jg
dec
jo
xchg
xchg
cmc
out
ljmp
fbld
loop
out
cwtl
add
and
ss
daa
pop
fwait
sub
cmp
repnz
sti
cs
aad
jl
jnp
fnstsw
jae
or
loop
push
inc
repz
cltd
call
cmpsl
inc
es
push
and
or
test
dec
xor
es
insl
xlat
push
dec
and
sub
mov
test
nop
add
nop
dec
push
push
scas
daa
leave
push
mov
rcrb
lea
add
inc
jecxz
dec
test
inc
rol
xchg
movsl
push
mov
inc
lds
pop
scas
push
add
shl
outsb
and
scas
int3
cmp
les
cltd
int
fwait
xchg
pop
pop
imul
push
mov
xchg
out
jb
into
popa
divps
flds
or
push
jge
scas
popa
mov
xchg
es
push
or
addr16
pop
das
mov
or
in
and
out
scas
inc
mov
xchg
sbb
and
fnstcw
jge
add
inc
jl
push
mov
or
push
scas
fldenv
fadds
push
pop
test
pop
cli
add
ljmp
add
sarb
mov
std
stos
subl
jle
int3
mov
adcb
je
aad
sub
ret
dec
dec
pushf
dec
cmp
mov
sbb
fs
leave
in
daa
mov
dec
sbb
cmp
lret
iret
xchg
ror
mov
inc
jmp
jo
add
mov
ja
jmp
and
pushf
into
sbb
pop
dec
mov
es
cld
enter
push
popf
out
rclb
fidivl
pop
lock
push
or
push
into
inc
int
sarb
mov
aas
ss
repz
ljmp
mov
stos
mov
xor
ret
das
aad
sub
lds
sbbb
pop
mov
rolb
fsts
jmp
cltd
inc
sub
pop
clc
shr
pushf
addl
test
pop
gs
ss
xlat
lea
jmp
insb
ljmp
pop
mov
sarl
lods
cmc
jp
mov
ret
enter
or
in
repz
jmp
jbe
and
lret
leave
fsubrs
imul
into
movb
adc
adc
das
into
push
outsb
and
dec
mov
ja
xor
repz
scas
mov
or
out
jp
imul
xor
pop
iret
lods
popa
pop
enterw
fldl
dec
ret
shll
pop
xor
xchg
outsl
ljmp
add
pop
inc
orb
mov
sbb
mov
jnp
add
dec
movsl
std
ja
jecxz
and
cs
mov
jbe
loope
fsub
or
cmp
imul
xchg
cmpb
sbb
inc
or
rcl
or
jnp
jp
repz
scas
xor
test
jb
jae
nop
sti
push
xchg
pushl
int
ret
arpl
mov
fcomps
push
fsts
xor
adc
mov
cwtl
push
cwtl
mov
in
gs
dec
jbe
les
cwtl
mov
add
dec
loop
push
cs
pop
mov
movsb
jbe
sti
js
mov
pop
andb
loopne
push
push
dec
or
addl
aam
push
pop
sti
into
mov
add
pop
repnz
xchg
add
sbb
jecxz
mov
fsub
pop
lret
and
push
out
in
mov
sahf
adc
lret
rorb
jl
dec
ds
imul
push
add
aad
inc
adc
loop
add
outsl
sub
fildll
popa
pop
stos
fidivs
xor
dec
test
pop
dec
outsl
mov
pop
pushl
sub
xchg
push
out
stc
mov
hlt
mov
in
gs
mov
lret
lods
mov
pop
out
out
andl
ret
aaa
ret
push
lcall
pop
xchg
lds
dec
push
dec
jmp
mov
enter
vpsubb
rcr
cmp
cmp
out
and
ret
mov
aam
cmp
cmpsb
xchg
aam
mov
sub
pop
inc
push
jns
sub
inc
fs
test
lcall
cmp
test
mov
push
sbb
jecxz
xor
leave
mov
mov
gs
mov
scas
adc
in
test
mov
add
mov
scas
push
push
int
pusha
andl
jae
js
mov
icebp
repz
fstpt
pop
fdivrl
xor
movsl
clc
gs
test
mov
jmp
daa
inc
adc
insl
aam
pushf
dec
pop
sbb
lock
mov
lret
xor
pop
mov
in
and
out
cmpsl
and
nop
iret
dec
leave
mov
mov
inc
insb
lock
nop
fistps
out
mov
mov
pop
rorb
iret
push
add
lret
rcll
iret
push
in
pop
adc
sub
cli
mov
jmp
push
pop
pop
call
jmp
iret
cmp
lods
xor
js
popf
or
pop
mov
pop
mov
lds
popa
xchg
movl
lods
dec
popa
rorl
dec
xor
pop
mov
shlb
in
xchg
in
sbb
mov
lahf
loopne
mov
mov
inc
int3
rorb
inc
into
jge
cld
lcall
je
jns
ja
int
fxch
xor
mov
in
loope
pop
adc
push
sarb
xor
and
mov
dec
mov
sti
jl
jns
adc
mov
into
sub
aad
cmp
cli
xchg
movsl
ret
addr16
shll
fs
mov
jae
cwtl
aaa
ljmp
rcll
jb
enter
movsb
cwtl
sub
xchg
testl
jo
shll
popa
or
sub
imul
xchg
lret
scas
xor
push
fcoml
daa
dec
xlat
cmpl
dec
cwtl
and
in
out
movb
lret
adcb
pushf
sbb
shlb
cld
idivl
cmpsb
outsl
add
adc
rcll
push
fildll
sbb
inc
jecxz
xor
mov
mov
test
fildll
std
add
pop
push
cmpsb
dec
faddl
loope
push
or
ret
outsb
push
aam
pop
inc
inc
repz
sbb
jo
adcb
mov
cmp
mov
pop
mov
cs
jo
jle
clc
push
ja
mov
push
adc
push
pusha
movsb
daa
cld
sub
hlt
xchg
lock
cmpl
loopne
ja
xchg
jmp
movsb
jo
clc
ret
inc
jge
shll
xor
fsubrl
cli
out
movsb
pop
mov
jp
xchg
in
test
xchg
jge
fists
loop
sub
jmp
dec
fidivrs
mov
lea
pushf
jae
dec
and
imul
sar
and
aam
pop
adc
cmpps
addr16
test
push
sub
nop
adc
jns
xor
sbb
jno
sub
sbb
mov
inc
cmp
pop
adc
shrl
cmp
das
cmpsl
scas
loope
shll
cmpsb
orb
jmp
jb
addr16
dec
mov
bound
push
pop
inc
int3
icebp
movsl
adc
fcom
ficomps
out
je
js
adc
sbbl
cmc
xchg
sub
out
and
push
cli
push
aam
sbb
out
mov
xor
push
dec
inc
xchg
xchg
fadds
sub
jg
lcall
aaa
and
sbb
fimull
dec
out
iret
fs
push
push
pop
mov
into
push
loop
or
dec
push
sbb
and
mov
sbbl
pop
push
adc
mov
xor
mov
aad
pop
sar
xor
xor
mov
lret
movsb
addb
dec
mov
in
stos
test
push
dec
cmc
adc
jo
adc
pop
dec
out
aaa
inc
sbb
out
xchg
jg
dec
arpl
pop
mov
js
pop
dec
js
mov
adc
mov
dec
shl
sub
incb
mov
test
ret
fnsave
mov
ficoml
lock
out
mov
mov
imul
jle
stos
mov
test
sub
mov
inc
sahf
outsl
out
cmp
in
aad
push
cmc
pop
add
xchg
and
and
sub
ret
mov
xchg
mov
mov
mov
push
jmp
mov
test
cmpsl
jmp
fcomps
or
mov
hlt
rorl
add
popf
aam
adc
ret
stos
iret
cwtl
sbb
ficomps
push
xlat
cs
and
or
cmp
arpl
adc
jo
cmp
aam
mov
repnz
lds
lods
inc
dec
movsl
insl
jecxz
js
push
mov
sub
push
testb
sbb
nop
mov
lahf
jb
mov
mov
test
mov
xchg
fistpll
push
and
sbb
and
shl
test
dec
arpl
jb
adc
jb
imul
sahf
add
jae
fisubrl
pushf
jg
sahf
sahf
outsb
push
pop
pop
stos
fcmovne
xor
inc
xor
popa
cmp
pop
push
scas
mov
addr16
cld
es
xchg
mov
out
mov
lods
push
test
xchg
jp
lret
lods
xor
inc
mov
inc
insb
test
je
stos
lea
iret
inc
cmp
pop
inc
jbe
or
jge
sub
inc
mov
push
out
inc
je
adc
test
xor
inc
fdivr
xlat
sbb
mov
rcrb
or
nop
cmp
push
cmc
pop
cmp
cmpsl
pop
mov
cltd
sub
cmp
push
test
lods
cmpsl
rcll
enter
or
inc
aad
repnz
fstl
popa
jb
xchg
push
pop
in
cltd
inc
cmp
xor
add
imul
jno
mov
xor
lret
imul
lds
mov
fstps
pushf
and
movsb
add
imull
jecxz
jl
dec
leave
mov
lods
popa
imul
pop
cmp
clc
adc
jg
push
and
cli
stc
ljmp
add
mulb
mov
inc
inc
mov
bound
stos
push
cmpsl
lcall
fiaddl
or
push
pusha
imul
bound
mov
add
mov
aas
inc
mull
hlt
repz
stc
mov
dec
ds
fdivrs
inc
sbb
iret
add
or
aas
fisubrl
push
aaa
pop
push
icebp
adc
scas
cmp
scas
xor
insb
xchg
mov
jge
cmp
adc
loop
stos
stc
aam
add
lds
xor
adc
test
shr
js
test
cli
movsb
jmp
fs
pop
adc
push
clc
mov
icebp
mov
sub
ds
or
mov
fsubrs
rcrl
mov
ffree
and
lret
pop
and
xchg
pop
add
push
adc
addr16
rclb
xor
sti
sete
dec
or
into
outsb
in
daa
mov
fcomps
imul
insb
jbe
lret
xor
xor
fs
adcl
push
shll
dec
mov
inc
insb
fidivrs
inc
xor
pop
loop
enter
or
push
add
mov
jl
aam
xchg
fldt
mov
mov
xchg
lods
aam
cmp
bound
out
es
andl
nop
lods
pop
sub
jle
ja
stc
dec
pop
cmp
lock
cld
cmp
test
jecxz
insb
xor
aaa
addr16
pop
scas
insl
or
adcb
lock
dec
enter
in
mov
shl
enter
cmp
cmp
xchg
adc
cmp
sub
insl
and
push
sub
test
js
cli
imul
je
xor
aam
push
xchg
aad
cmpsl
dec
pushl
int
test
enter
push
inc
sbb
sarb
shll
sub
aad
lahf
lods
xchg
mov
add
pop
sbb
shlb
push
mov
sub
les
int3
cmp
sbb
pop
push
jg
movb
loope
test
mov
and
insb
sbb
in
cs
lods
mov
pop
lock
insb
inc
aas
fisubs
dec
dec
pop
jae
scas
push
pushf
inc
xchg
mov
or
in
es
sahf
jle
iret
push
loopne
movsl
movsb
repnz
addr16
adc
cmpl
add
inc
es
mov
jbe
push
push
pop
push
int3
movsl
mov
push
xor
mov
mov
mov
inc
pop
jle
out
pop
mov
nop
vmread
fmulp
shll
mov
lahf
dec
cltd
inc
mov
cmp
mov
mov
es
pop
push
push
ficompl
add
out
jne
xor
ss
and
pandn
call
repz
fisubl
pop
lret
inc
insl
fistpl
add
aad
les
pop
pop
jae
xchg
or
dec
mov
stos
pop
push
lods
push
int3
mov
loop
sti
mov
rolb
stos
fdivrl
clc
push
xor
int3
dec
dec
xor
or
int3
mov
out
pop
scas
inc
adc
fidivrs
lret
or
aam
cmpsl
adc
rolb
daa
mov
xchg
std
lds
insb
in
sub
wrmsr
fwait
and
mov
push
xor
add
pop
add
jb
xchg
test
ljmp
sub
sub
add
mov
lods
rclb
in
xor
xchg
mov
scas
jp
adc
jo
and
leave
js
sbb
lock
sub
mov
icebp
shll
jle
push
push
push
jne
mov
mov
lahf
incb
sbb
mov
test
push
jns
cmp
gs
psubusw
pop
pop
add
into
popf
xor
div
test
ss
jae
cli
mov
push
outsl
stc
and
test
inc
pop
scas
dec
das
push
mov
test
test
fs
popf
jb
xchg
cmp
test
js
scas
pop
push
aas
push
cmp
xor
imul
add
sub
repz
fists
sbb
ljmp
cmp
testb
arpl
andb
ljmp
mov
arpl
outsl
add
and
and
cmp
or
test
xchg
movsl
shll
out
sbb
xlat
lret
jo
enter
xlat
nop
in
test
gs
mov
sti
add
pop
sbb
nop
sbb
xchg
repz
jg
inc
sbb
mov
cmp
xor
inc
inc
lds
mov
loope
mov
movzwl
lock
mov
jns
or
xor
dec
and
mov
fildll
adc
sahf
xor
cs
mov
mov
sbb
shlb
or
push
ret
mov
pop
sarl
jmp
mov
stos
outsl
xchg
rcl
dec
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
dec
mov
cmpsb
mov
mov
mov
cmpsb
sbb
adc
bound
stc
jo
mov
pop
dec
pop
inc
loopne
xchg
and
hlt
std
mov
push
lret
sbb
or
jnp
cmp
or
sti
or
fdivs
pop
rcll
lds
add
test
cmpl
mov
into
stos
sahf
inc
sub
into
fdivs
rcl
ja
enter
xchg
cli
dec
loope
xor
jns
insl
sub
lods
gs
int
ljmp
sub
test
jp
mov
shlb
out
dec
push
shll
mov
js
pushf
rcr
jle
sbb
mov
pushf
pop
mov
jnp
xchg
jno
jmp
push
mov
jl
dec
lret
mov
pop
cmpsb
faddl
sub
iret
push
or
cmp
push
mov
mov
add
adc
sbb
cmp
insl
lret
mov
sub
inc
imul
fsts
cli
add
xchg
sahf
and
lahf
pop
adc
cmp
insl
enter
movsl
mov
lahf
test
push
jbe
inc
add
jae
xchg
mov
push
out
xchg
adc
and
adc
dec
lods
ljmp
div
test
jle
aad
push
cwtl
ja
mov
push
mov
mov
fistpl
popf
test
inc
repz
mov
mov
scas
xor
and
call
pop
int
mov
in
inc
inc
jg
dec
push
push
jo
in
loop
push
add
out
sub
fisubrs
push
fistl
xchg
pushf
mov
nop
outsl
xchg
mov
or
icebp
mov
shl
jns
mov
shrl
adc
js
cld
mov
out
outsb
js
push
stos
inc
lods
mov
jne
in
icebp
cmp
sahf
ret
sbb
aaa
push
lods
test
enter
movsb
inc
xor
pushf
sbb
xor
adc
enter
or
fadds
data16
jnp
test
lret
adc
int
pop
push
aam
clc
stos
inc
pusha
mov
test
sub
ret
or
in
jmp
add
mov
adc
ffree
sub
push
jmp
add
jge
xchg
cltd
and
out
pop
lods
int
push
or
test
in
pop
pop
sbb
pop
sub
jo
lcall
ret
mov
jnp
fstpt
jecxz
pop
out
dec
daa
lea
sub
dec
mov
in
xchg
in
icebp
cmp
cs
sub
lds
loop
pop
pop
popa
xchg
out
pop
cli
sub
inc
mov
pop
std
adc
outsb
fwait
pop
push
aad
lcall
test
xor
mov
repnz
es
push
out
xor
stc
lock
fcoms
pop
and
call
jmp
mov
pushl
add
and
cmp
icebp
popf
inc
ror
jno
in
sar
rorl
clc
and
pop
data16
ss
xchg
mov
and
pop
xchg
jl
xor
aam
push
jecxz
test
daa
cmp
icebp
loop
je
rclb
arpl
das
mov
or
daa
imul
je
mov
sub
imul
cmpsb
sbb
mov
xchg
inc
and
dec
imul
out
mov
cmp
dec
xchg
and
loope
das
and
or
dec
pop
or
fdivrl
add
or
jnp
mov
mov
sbb
icebp
jbe
jg
mov
jecxz
or
dec
lds
xchg
loopne
dec
cltd
idiv
push
out
jo
fdivl
mov
stos
cmpsb
dec
pop
test
sbb
jge
mov
sbb
shrb
negl
pop
aaa
mov
int3
lret
lret
fdivs
in
jbe
out
dec
mov
lock
aas
xchg
test
inc
je
sub
outsl
movsb
push
push
lds
lock
sub
jnp
sbb
fdivrl
jae
test
in
dec
jmp
ret
dec
inc
ret
in
mov
in
shrb
xchg
xchg
fs
in
addr16
mov
xchg
mov
jmp
ret
movsl
dec
xor
scas
push
insl
mov
push
fstpt
andb
int
iret
add
push
lds
xor
mov
adc
sbbb
add
pop
mov
sbb
out
mov
pop
movsb
pop
mov
push
xor
lock
dec
push
inc
mov
cmp
fisubs
inc
cwtl
pop
and
sub
cmp
icebp
ss
jb
xchg
pop
jae
shl
movsl
push
lahf
cmpsl
fsubrs
add
repnz
and
mov
xchg
insb
lret
and
aam
and
shll
xor
das
mov
jno
cmc
lods
std
inc
or
sahf
in
pop
lahf
sub
cmpsb
jge
repz
or
test
mov
test
mov
pusha
pop
subl
and
repnz
xor
or
loope
aaa
fwait
jg
sti
pop
push
add
mov
int3
mov
addl
sub
pop
adc
ds
addr16
popf
and
lea
lahf
fcomps
adc
push
iret
out
das
sti
xor
add
icebp
imul
add
jmp
stc
movsb
addr16
push
jb
movsb
mov
in
loopne
or
lds
mov
adc
daa
scas
dec
add
jle
test
inc
jo
add
sub
call
cld
and
mov
jne
loopne
pop
mov
adc
mov
xor
mov
mov
xor
or
arpl
cmp
push
jmp
adc
jmp
mov
xchg
xchg
mov
add
dec
add
add
adc
jle
pusha
mov
popa
adc
fwait
mov
push
leave
nop
into
and
inc
mov
psllw
sub
add
cmp
movl
xchg
insl
xor
sti
mov
cld
das
xor
dec
pop
pop
xchg
int3
adc
idivl
mov
roll
pop
into
adc
sbb
adc
push
dec
cmpsb
dec
adc
xchg
dec
cmp
out
mov
and
sub
out
adc
std
mov
bound
cs
lcall
arpl
xor
adc
in
push
xor
out
or
test
jnp
jl
adc
xor
rcrl
pusha
sarl
mov
and
dec
push
lret
in
jno
test
inc
sub
rclb
popf
call
mov
inc
nop
lcall
pop
jae
iret
out
adc
sti
pop
cmp
call
in
push
mov
xorb
loopne
clc
mov
and
outsl
sbb
pop
or
pusha
xchg
sub
sar
jbe
push
pushf
add
push
aam
leave
push
push
inc
mov
pop
xchg
cmp
inc
inc
test
jb
cltd
insb
lcall
scas
addr16
and
push
xor
aaa
cwtl
rolb
mov
insl
xor
push
jg
fwait
cmp
nop
aam
fbld
outsb
fldl
mov
cmp
test
dec
mov
mov
mov
cli
xor
in
js
mov
and
xchg
sbb
test
dec
out
xchg
bound
mov
dec
rcr
cs
xchg
inc
add
inc
scas
adc
push
or
lods
pop
or
popa
mov
or
mov
pop
and
adc
jl
enter
test
push
jle
pop
lahf
stos
add
cs
cltd
arpl
dec
adc
stos
push
pop
fldl
jl
inc
daa
jne
and
leave
mov
flds
inc
pop
out
out
push
in
adc
and
and
into
jmp
mov
cmp
push
jge
sti
dec
adc
dec
and
or
mov
nop
out
mov
arpl
mov
jnp
cmpsl
mov
fsubrs
cmp
inc
fistpl
sub
mov
mov
and
sahf
mov
sti
ss
adc
xchg
in
cmp
cli
jns
mov
add
xchg
add
shlb
adc
cmp
rclb
sub
bound
push
shrl
pop
sbbb
adc
inc
mov
leave
ljmp
jecxz
mov
in
iret
push
stos
jo
jb
imul
sti
ss
nop
mov
sub
pop
cli
adc
incl
jb
ret
lcall
pop
mov
jp
rcrl
sbb
addr16
mov
cld
ss
push
or
out
out
cmpsb
cmp
das
repz
xor
dec
mov
push
mov
outsl
jnp
inc
rcrb
add
pop
sbb
jge
pop
rcrl
aad
cmp
lods
bound
mov
les
pop
iret
movsb
cmpsl
mov
std
fistps
xor
je
mov
pushf
mov
lcall
ret
pop
subl
xchg
js
dec
mov
insb
jnp
xchg
mov
subb
pop
addr16
dec
mov
jge
aaa
test
add
dec
data16
jle
loop
test
subl
mov
ret
cmc
mov
scas
pop
stos
push
decb
mov
scas
jae
fidivl
inc
imul
lock
icebp
mov
push
mov
lds
dec
dec
xchg
cmp
jecxz
jl
push
jmp
addb
out
shlb
out
leave
adc
std
cmp
daa
pop
fldt
cs
xchg
xor
jp
cwtl
pop
cmp
fldl
sub
jnp
outsl
insb
in
and
sub
xor
arpl
and
imul
popf
mov
mov
loope
xchg
cmp
in
cmp
sub
cmp
mov
shr
sbb
mov
lret
jecxz
push
mov
xchg
pop
mov
outsb
movb
leave
lds
or
scas
add
rorb
scas
xor
stos
adc
fcomip
xchg
lock
lea
subb
mov
and
roll
pusha
aaa
add
and
inc
mov
lea
icebp
adc
push
mov
test
lds
inc
pop
push
mov
mov
xor
sbb
xchg
cltd
mov
dec
pop
pop
sub
push
dec
mov
jnp
jbe
push
out
scas
bound
xchg
not
leave
inc
xor
push
sti
stos
mov
mov
and
lret
ja
mov
ret
sbb
pop
jl
imul
sahf
loope
push
xor
scas
in
push
cmp
fnstsw
fucomip
push
aaa
aas
xchg
inc
jmp
clc
or
xchg
xchg
mov
repz
jle
and
into
cmpsl
mov
pop
mov
notl
cmp
and
hlt
outsb
rolb
add
or
jg
dec
das
rcr
ud0
adc
mov
test
and
add
sub
mov
cmpsl
fcmovu
adc
add
iret
jb
mov
push
cmpsl
mov
jne
mov
lcall
push
out
lahf
fisttpll
xchg
xor
ds
cmp
pop
outsb
pop
jnp
xor
dec
icebp
inc
inc
push
ljmp
rcrl
lods
jmp
js
sub
or
jbe
iret
ds
jbe
test
arpl
rcl
xchg
loopne
je
adc
cmp
fidivrs
pop
aaa
sti
inc
or
mulb
mov
fisttpl
scas
dec
pop
fsubrl
out
loopne
into
cmp
out
cmp
test
or
mov
add
notl
ret
xor
mov
orl
and
sub
nop
out
inc
outsb
fs
movsb
bnd
inc
jmp
leave
fbstp
mov
pop
xchg
mov
iret
repnz
test
inc
dec
in
mov
mov
xor
push
jbe
vpor
sarb
pushl
pop
fimull
pop
push
jmp
mov
ret
andb
mov
test
cs
xchg
jmp
xor
mov
and
xor
jbe
jo
xchg
out
inc
xchg
lahf
scas
addl
ja
ret
insb
adc
insl
cltd
imul
mov
bound
or
mov
and
mov
mov
add
mov
imul
in
jmp
mov
and
cli
loopne
out
lret
xlat
fsubrp
xchg
das
out
loopne
stos
fdivrs
and
add
dec
or
pop
pop
jne
lds
mov
jmp
jl
pop
test
jle
xor
outsl
imul
pop
stos
mov
cmp
pop
jo
xor
add
ds
fisttpl
stos
imul
xor
pop
and
inc
test
adcl
xor
lock
mov
mov
mov
or
mov
in
sbb
fdivrl
fwait
cltd
js
sbb
outsb
mov
bound
or
sub
add
jmp
dec
das
mov
enter
pop
push
fmull
cmpsb
pop
jg
inc
cltd
cltd
push
fdivrl
inc
mov
outsb
aad
movsbl
aaa
daa
mov
ss
mov
xlat
popa
fimuls
jno
mov
or
sbb
and
jb
out
in
ret
xchg
in
sbbb
push
movsl
sub
lcall
mov
verw
mov
mov
jbe
mov
stc
stc
dec
lods
cmpsl
fldenv
inc
add
popa
mov
and
push
mov
or
and
mov
sbb
push
sub
push
dec
aam
cli
sbb
mov
or
out
dec
int3
mov
int3
rcr
xchg
xor
push
sub
insl
mov
mov
jge
test
adc
cmpsb
adc
in
mov
jb
imul
or
pop
cmp
add
lock
bound
xor
adc
addr16
inc
stc
push
clc
sti
jp
fst
or
push
jl
call
sbb
and
js
and
fwait
jb
decl
out
add
jo
jmp
xor
pop
fwait
loope
pop
xchg
sti
jne
push
stos
sbb
dec
jno
lahf
data16
ret
pop
jo
aaa
fwait
out
inc
push
mov
inc
xorl
test
push
lcall
sbb
cltd
mov
jo
mov
xchg
negl
pop
jnp
add
add
fmuls
cmp
das
dec
or
adc
inc
mov
out
out
mov
mov
shlb
xor
test
es
jne
pop
adc
pop
mov
gs
sbb
inc
movsl
cmp
aaa
cmp
push
mov
inc
xchg
imul
movswl
adc
inc
lods
out
push
in
mov
dec
sbb
inc
insb
jge
ret
add
xor
enter
cwtl
and
mov
out
pop
sub
sub
mov
push
ja
aaa
mov
orb
loopne
icebp
and
and
dec
notl
mov
inc
cmp
aad
int3
xchg
pop
rcrb
pop
xor
pop
jl
jle
loop
jg
sbb
les
adc
mov
push
xchg
cs
test
addr16
inc
dec
sti
pop
pop
aas
data16
mov
and
ja
aaa
fisubs
fmull
fisubl
addl
leave
inc
and
sub
bound
inc
in
inc
jmp
outsb
sub
cli
inc
inc
xchg
lret
adc
stos
vminss
in
sbb
scas
cmp
xchg
jno
xor
out
arpl
daa
add
mov
in
inc
pop
loop
stc
and
adc
pushf
xor
lret
arpl
dec
nop
jle
fiadds
and
mov
sbb
cltd
gs
mov
sub
dec
jb
lcall
mov
mov
mov
in
mov
push
add
pushf
cmpsl
xchg
scas
nop
gs
out
mov
xor
aad
sub
ret
mov
mov
cmp
fldenv
lcall
and
pushf
mov
mov
mov
xlat
stos
push
add
mov
dec
lds
in
jnp
into
sbb
addr16
sbbb
lock
int3
ret
or
pop
into
push
sbb
add
clc
cmp
cmpsb
lods
mov
outsb
inc
sbb
push
sub
lock
add
jl
sahf
inc
jnp
mov
push
push
test
mov
or
mov
mov
jmp
icebp
xlat
add
sbb
aaa
movsl
mov
data16
push
in
ljmp
push
mov
adc
popf
fdivrl
or
rclb
filds
jne
pop
mov
movsb
dec
aaa
cmp
enter
nop
mov
sub
scas
cmpsl
push
pop
hlt
jno
sti
xor
inc
sbb
fbstp
push
mov
rcrl
lahf
jp
outsl
and
je
xor
mov
cltd
adc
dec
mov
pand
mov
jg
aas
rorb
mov
out
repz
sahf
add
shl
or
push
arpl
adc
pop
dec
push
addr16
addr16
mov
test
inc
xchg
movsl
xor
mov
pusha
ficoml
dec
xchg
ret
aas
loop
loop
mov
sub
jl
inc
xchg
in
ret
push
sbb
xor
jns
or
cmp
pop
cs
loope
outsl
xchg
fimull
jg
push
xchg
xor
into
xchg
dec
jnp
mov
lods
jg
cmp
imul
adc
aad
loop
mov
xchg
jp
add
lock
sti
out
mov
mov
pop
push
xchg
push
popa
xchg
out
mov
fdivrl
sbb
shr
aaa
xchg
and
push
fnstcw
aad
iret
es
out
stos
js
mov
inc
icebp
out
ds
pop
mov
cli
cmp
or
add
jae
or
inc
mov
xor
push
mov
inc
pushf
sbb
inc
sbb
or
les
adc
in
sbb
out
imul
mov
iret
add
sbb
push
and
dec
outsb
or
out
jne
mov
adc
pushf
repz
push
mov
xchg
testl
stos
rcl
jae
stc
xchg
sub
mov
lcall
imul
jne
stos
add
mov
add
das
mov
mov
iret
ja
int
sub
add
xchg
mov
andl
xchg
pop
push
pop
rcrl
dec
mov
adc
in
jo
or
mov
fsub
popf
sub
pop
jns
pop
xor
test
xor
cmpsb
sbb
inc
cli
and
add
bound
popa
popa
push
insb
imul
sbb
fs
mov
ja
sti
clc
adc
in
in
adc
sbb
sub
int3
ror
sbb
jae
dec
inc
out
cmp
jp
out
jbe
and
add
fwait
test
or
pop
or
push
repnz
jae
jge
cmp
jg
ret
jmp
and
arpl
ss
jmp
push
push
xchg
aad
pop
and
jecxz
fistpl
add
in
or
cld
pop
mov
fcmovbe
mov
add
stos
popf
mov
push
mov
loopne
ja
jae
push
xor
or
stos
adc
ja
inc
dec
xchg
push
lahf
dec
xchg
flds
rcr
fwait
pop
mov
test
dec
lret
jp
push
ficoml
imul
call
mov
int
mov
je
js
pop
jle
outsl
inc
xor
loope
cwtl
clc
test
adc
pop
daa
jp
push
or
sub
pop
or
or
out
mov
rcrl
adc
cmp
xchg
add
mov
and
mov
leave
jae
arpl
data16
mov
into
sbb
cwtl
cli
inc
mov
loop
xor
jl
xchg
pop
push
imul
pop
test
push
pop
cmpsb
and
in
hlt
test
push
adc
adc
mov
adc
outsl
xor
cmp
scas
add
sbb
filds
int3
in
jecxz
stc
add
inc
xor
xor
test
inc
adc
mov
out
in
push
sbb
dec
jb
out
or
push
xor
adc
mov
mov
lea
or
inc
std
xor
or
ss
fildll
lahf
cltd
pop
outsb
push
sbb
inc
insl
out
fisttpll
icebp
fcoms
jns
mov
xchg
push
mov
xchg
std
add
fisttpll
cmp
cmpb
stos
lock
iret
or
cltd
xchg
and
out
out
jge
loop,pn
std
adc
sbb
xchg
ljmp
fistpl
mov
push
out
push
les
lods
test
sub
mov
pop
xchg
psubd
mov
cli
pop
gs
loopne
rol
enter
mov
aaa
sbb
jns
outsb
js
cmp
or
cmp
or
enter
das
cmpsl
xchg
test
cmp
push
xchg
gs
xchg
lea
das
or
push
dec
iret
fwait
addr16
test
in
xor
roll
cmp
aaa
pop
stos
fldl
push
sbb
fdivrs
insb
push
or
outsb
jp
dec
data16
jle
rcl
das
pop
cmpsl
insl
add
sub
or
daa
mov
inc
inc
test
mov
mov
push
jae
out
shl
outsl
or
jbe
lods
sub
dec
adc
add
lock
clc
jge
test
and
scas
das
jbe
mov
jg
lcall
cmp
ror
mov
mov
and
movsl
cmpsl
pop
inc
repz
fwait
popf
xchg
lea
adc
in
jge
arpl
add
cmp
pop
popf
lods
in
cmp
dec
mov
jae
lret
mov
enter
pop
aas
lahf
jl
jge
pop
cmp
pop
sti
mov
into
mov
test
fmull
call
fistps
dec
lahf
test
int3
loop
push
adc
xor
inc
mov
sub
inc
lcall
dec
xlat
add
movsb
mov
sbb
aad
mov
adc
lahf
sbb
add
dec
pop
inc
fs
sub
xchg
jnp
jnp
cltd
nop
sbb
and
sub
xor
sbb
jno
or
adc
adc
negb
popf
xor
jno
je
in
push
sub
cmpl
mov
lods
cmc
imul
in
outsl
jecxz
outsl
loopne
jecxz
add
lahf
push
enter
testl
or
add
lret
push
push
pusha
and
aaa
scas
gs
lcall
mov
lret
cwtl
dec
push
inc
arpl
mov
sbbl
pop
xor
repz
jge
xor
inc
mov
jo
data16
add
sub
pop
mov
std
push
sub
pop
push
mov
push
shlb
int3
daa
mov
cs
adc
std
imul
jmp
repz
stos
decb
test
dec
jle
fdivrp
push
movsb
daa
sarl
stos
pop
inc
aad
sbb
or
sub
lock
mov
mov
push
adc
ja
fwait
xor
mov
fwait
out
dec
leave
push
je
add
cmp
adc
lahf
jne
sahf
in
cld
adc
shl
in
mov
pop
pushf
jnp
lods
xlat
or
int
xor
xlat
or
push
cli
mov
cli
out
push
and
sbb
cmp
fdivl
outsb
pop
les
pusha
xchg
xor
ljmp
mov
or
sbb
dec
shrl
adc
stos
or
shlb
into
in
cmpsb
lahf
pop
mov
push
push
dec
push
insb
push
inc
inc
imul
test
push
dec
fisttpll
dec
xor
jp
out
jne
mov
movsl
xor
pusha
dec
lds
bound
insl
das
jb
cmp
dec
xlat
gs
lret
mov
mov
sbb
sarb
stos
push
push
xor
mov
daa
ret
adc
cmp
and
addb
movsl
add
aad
std
pushw
or
stos
mov
cld
inc
and
into
test
ds
push
add
push
stos
adc
out
sub
mov
loopne
mov
mov
sbb
jb
xor
mov
jae
scas
mov
cld
lock
fstpt
dec
lea
js
push
insl
sub
add
mov
out
add
jl
stos
gs
add
xor
add
mov
call
fnstsw
call
sbb
jmp
mov
shr
mov
dec
mov
cmpsb
adc
add
imul
cwtl
mov
lcall
pop
jno
add
jae
adc
adc
lea
sbb
cmpsl
lock
jmp
jg
fdivs
pusha
cmp
test
mov
outsb
dec
or
pop
push
or
sahf
mov
imulb
pop
mov
xchg
add
jnp
dec
sub
push
or
lahf
fldcw
xchg
or
adc
stos
icebp
rorl
cmp
das
imul
fcmovu
in
jp
enter
and
push
mov
movsw
cmp
inc
cmp
mov
sti
add
cli
sub
sub
mov
pop
inc
xchg
mov
sbb
mov
dec
adc
mov
or
dec
cmc
add
arpl
push
mov
add
out
cmp
xor
cmc
mov
jecxz
movsl
add
lahf
fstpl
shlb
sbb
mov
fstps
bound
popf
aas
pop
loop
sub
test
xor
imul
arpl
sub
mov
loopne
inc
mov
pop
adc
loopne
and
cmovl
or
pop
clc
in
movsb
push
cmpsl
fs
jns
sti
int3
pusha
jns
lea
insl
and
je
xchg
jge
daa
mov
adc
xor
add
scas
test
adc
push
das
mov
xor
test
sarl
mov
dec
pusha
lcall
imul
movsl
jno
xor
adc
cmp
lods
insb
xor
shl
iret
jmp
pop
out
xor
popa
or
shrb
movl
bound
out
lret
jb
fcompl
outsl
mov
fidivrs
xor
mov
ficoms
mov
fdivrl
adc
mov
pop
dec
mov
jo
jp
add
cld
cmp
add
test
or
pushf
sbb
cld
idivl
mov
stos
push
inc
add
lds
xchg
pop
or
fisubrl
jo
shlb
pop
jns
push
out
add
insl
cltd
fcomps
jne
stc
mov
fisttps
inc
aas
pusha
mov
imul
cmpsb
push
inc
push
cli
frstor
mov
mov
adc
sbb
or
or
in
lods
ja
std
pop
fimull
inc
jle
sbb
jmp
cmp
or
loopne
push
int3
xlat
xchg
adc
cli
insl
into
insl
dec
test
mov
adc
dec
mov
mov
pop
lret
js
pop
mov
lcall
arpl
xor
push
xchg
lret
dec
stc
call
xchg
cmp
cmp
ja
and
mov
push
or
xor
ljmp
pop
mov
stos
in
imul
pusha
into
mov
sub
push
xchg
loop
insb
cmp
jo
cltd
mov
orl
ffree
adc
dec
sarl
dec
lock
jae
aad
or
xchg
jnp
pop
mov
sub
xchg
inc
dec
in
or
push
xor
inc
push
imul
pop
jmp
mov
lret
xlat
frstor
and
scas
adc
sub
orl
xchg
dec
mov
sub
lods
mov
mov
mov
cld
push
add
mull
or
push
pop
sbb
fbld
adc
adc
dec
push
mov
out
pusha
loopne
xchg
sbb
xor
fmull
call
dec
test
fldcw
sarb
pop
push
jb
lahf
dec
push
loopne
mov
iret
js
lcall
daa
push
inc
inc
aam
and
mov
test
inc
fsubrs
xchg
rcr
mov
push
inc
xchg
pop
and
add
or
or
mov
mov
rcrb
inc
imul
ficoms
movsb
mov
and
inc
dec
js
dec
mov
lds
sahf
xor
xchg
rolb
pop
xor
mov
sbb
inc
cmp
fstpl
mov
mov
mov
inc
mov
mov
mov
xor
add
ja
mov
insb
dec
std
shrb
xchg
adc
xor
mov
popa
cmp
cmpsl
fsub
or
jl
adc
adc
aaa
rolb
repnz
cs
pushf
mov
lret
pop
aam
int3
pop
roll
sbb
cmc
mov
mov
add
shlb
sbb
and
mov
pop
xchg
aad
pop
xorl
sti
dec
or
add
inc
fninit
or
jle
pop
inc
mov
adc
inc
jmp
lea
out
aas
lock
sbb
xlat
mov
adc
cmp
daa
cmpsl
mov
std
inc
xor
out
add
sbb
jge
shl
shll
imul
cmp
clc
xor
push
test
shll
ret
jno
xor
and
lcall
das
mov
mov
xchg
inc
out
and
dec
push
imul
ds
sub
popfw
int
jo
push
cmpsb
mov
push
cmp
xchg
mov
ja
das
add
repz
pop
pop
insb
jmp
decl
lret
cmp
hlt
mov
push
aam
test
mov
xchg
fsubr
add
add
clc
inc
lret
and
subb
aad
pop
cmovb
cmpsl
mov
repnz
js
lcall
lcall
testb
sbb
mov
jmp
out
pop
add
enter
sbb
iret
inc
ljmp
sahf
pop
movsl
mov
jbe
pusha
jl
sbb
testb
enter
inc
push
sbb
xchg
sub
leave
inc
and
aas
mov
sbb
ds
leave
bound
int3
jecxz
xor
out
shlb
fcompl
pop
pop
aas
jmp
inc
sub
push
or
mov
mov
push
dec
stc
mov
out
mov
fildl
push
lods
cmp
mov
lahf
sbb
je
fs
dec
nop
fsub
call
nop
fmulp
jecxz
inc
jno
in
xor
test
and
sub
out
inc
cmp
hlt
sub
pop
inc
out
or
xchg
jmp
ja
sbb
cmpsb
insl
and
aas
ret
shl
lahf
gs
and
and
mov
jns
push
add
out
pop
mov
cmp
orl
and
daa
xchg
scas
or
loope
mov
hlt
inc
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
jmp
inc
outsl
mov
outsl
rcl
mov
jmp
hlt
bound
pop
bound
sub
loop
jnp
sub
inc
lret
mov
pop
loop
add
pop
pop
movsl
sbb
fwait
jno
dec
imul
stos
and
mov
mov
or
dec
mov
jnp
std
outsl
mov
jecxz
lret
fdivl
ret
cli
mov
xchg
push
rorl
push
push
lock
inc
inc
inc
int3
js
sahf
add
sub
stos
inc
or
lea
ret
outsb
and
dec
mov
ret
pop
cli
push
iret
mov
inc
push
push
rolb
imul
cmp
xchg
sub
dec
cmp
mov
repz
mov
leave
orb
hlt
dec
mov
jp
pop
insb
mov
sub
sub
leave
lods
insb
inc
call
sub
xor
int3
repnz
inc
sub
mov
bound
adc
shlb
adc
jne
push
in
dec
call
fiadds
inc
fisubrl
aad
and
xchg
inc
mov
repz
mov
add
jns
push
fs
mov
leave
xor
outsl
out
inc
subl
mov
mov
lahf
out
sbb
push
mov
add
aas
js
xchg
pop
push
popl
subl
xchg
inc
push
into
xchg
adcl
scas
mov
es
aaa
pop
fisttps
stos
jno
loopne
test
scas
adc
cmp
xorb
jae
in
cmpsb
pop
mov
push
mov
or
xchg
cmp
pop
xchg
int
aaa
inc
aaa
mov
sti
sub
repnz
cmp
adc
imul
das
dec
loopne
iret
dec
clc
xchg
xor
fdivs
inc
and
push
sbb
xor
adc
mov
int
mov
subb
cmp
dec
shrb
fwait
mov
fdivrs
je
test
fwait
jg
nop
sub
jge
neg
test
add
ret
xchg
inc
loope
push
je
mov
or
and
pop
mov
stos
or
push
call
cld
popf
rorb
inc
les
push
in
inc
mov
xchg
mov
imul
push
xor
pop
mov
lcall
arpl
mov
mov
sbb
add
testb
inc
add
insb
scas
and
loopne
inc
add
xlat
std
dec
lock
imul
mov
adc
imul
and
loopne
stc
jp
jns
cmpsb
xchg
adc
arpl
jg
and
fdivrl
inc
shl
cmpsl
rorb
mov
arpl
add
cmpsl
inc
jb
repz
pop
mul
dec
insb
icebp
les
xor
pop
cmp
dec
hlt
jbe
icebp
loop
dec
lret
xchg
xlat
mov
inc
iret
push
and
xor
outsb
imul
xlat
xor
mov
test
and
mov
data16
xor
shlb
sbb
mov
jle
sub
mov
sbb
jb
xchg
push
shrb
cs
movsb
adc
or
xchg
jmp
or
movsl
or
xchg
leave
cmpl
hlt
sub
sbb
ds
cmc
dec
sub
or
les
subb
and
incb
inc
inc
inc
test
insl
push
mov
push
lea
repz
cmp
imul
mov
icebp
pop
stos
jmp
add
ficoml
pop
jne
mov
sbb
and
pop
loop
int3
cs
sbb
jne
insl
jnp
dec
pop
negb
sbb
lret
gs
sub
push
mov
cwtl
inc
add
adc
and
pop
pop
orb
jp
jmp
pop
jae
iret
sbb
pop
test
adc
sbb
loope
or
test
jecxz
mov
mov
imul
sbb
rcrb
or
xchg
mov
dec
add
scas
ret
fisubrl
inc
pop
adc
cmp
out
outsl
lea
fsubrp
js
ret
rorl
mov
idivl
add
and
inc
push
cwtl
leave
sbb
mov
stc
stos
leave
mov
mov
cmc
adc
mov
pop
jno
stc
push
cmp
mov
mov
jne
imul
push
jge
ds
rolb
gs
loope
outsb
or
sub
cmp
sub
dec
cmpsl
jle
xchg
es
and
sbb
repz
mov
and
xor
mov
jecxz
mov
dec
daa
or
in
std
fisttpll
mov
pop
outsl
ss
or
addb
test
sbb
or
add
fstps
in
in
outsl
sbb
fsubr
aaa
repz
inc
inc
test
shrl
popa
outsb
mov
sbb
jnp
decl
inc
push
loope
cld
addr16
mov
cmp
sti
jb
clc
jge
roll
push
sbb
aad
inc
cmp
pop
adc
sti
add
cld
adc
jge
sti
dec
push
repnz
pop
subb
sub
inc
lods
ljmp
jnp
inc
shll
scas
jns
add
jno
dec
das
pop
lret
lds
push
pushf
mov
xor
outsl
mov
rcrb
dec
push
ret
jnp
das
dec
dec
notb
xor
push
test
cmpsl
in
sahf
dec
cmp
adc
add
fnsave
into
rcl
jns
lds
out
pop
inc
fmuls
out
dec
in
cmp
imul
mov
push
pushl
daa
sub
data16
into
jbe
pop
std
cmp
sbb
out
loopne
sti
jno
jge
and
out
add
lds
test
in
mov
mov
ljmp
loop
cmp
xchg
out
scas
and
imul
mov
shrb
mov
or
imul
sub
inc
push
les
cmp
dec
cmp
jge
sub
xchg
xchg
sbb
outsl
popa
movsl
push
mov
sub
add
cltd
add
mov
and
add
icebp
in
cmpsl
lds
push
arpl
movsw
lcall
pop
xchg
jmp
mov
push
insl
imul
jecxz
lcall
out
test
testb
cmpsl
dec
mov
int
add
pop
jae
lahf
sub
loopne
movsb
mov
push
pop
push
pop
sub
sub
ljmp
jns
add
inc
orl
fildll
mov
ljmp
jg
fimull
lock
push
js
movsl
xchg
outsw
fdivs
mov
imul
shlb
fistps
fnstcw
cmp
pop
push
jmp
jno
fdivrs
xchg
gs
or
cmp
adc
fdivrp
fists
mov
xchg
push
mov
sub
std
pop
aad
sub
xchg
sbb
pop
xchg
ja
xor
imul
pop
mov
daa
sbb
and
ljmp
xor
ss
adc
int3
movsl
hlt
mov
pop
sahf
jp,pt
xchg
out
jo
into
jnp
nop
mov
or
inc
in
shll
aad
pop
aaa
rcrl
divl
xchg
cmc
in
fidivrs
ljmp
add
dec
sub
mov
sub
loopne
xor
out
pop
iret
sbb
aam
add
jmp
jmp
call
mov
cmp
icebp
fwait
lahf
shll
rcrl
shrl
scas
insb
xchg
hlt
pop
mov
cmp
pop
cmp
mov
push
sbb
mov
inc
in
mov
mov
dec
test
mov
xor
shlb
lods
fs
pushl
cmp
divl
adc
and
aaa
jae
mov
mov
test
jb
test
inc
xor
and
inc
dec
jb
mov
ret
inc
clc
fnsave
sti
lret
mov
mov
ds
sarb
sbb
jl
shrb
and
out
fidivrs
xor
stos
sub
loop
sbb
xor
test
add
jecxz
flds
in
xor
inc
dec
xor
jl
push
cmp
adc
sbb
clc
xor
dec
or
xchg
ja
pop
scas
fwait
out
push
dec
cmpsb
push
and
out
xchg
mov
and
dec
das
xor
adc
out
inc
test
je
mov
inc
insl
mov
pop
jae
lret
sub
cmp
inc
mov
xchg
jne
xchg
mov
dec
aad
rcll
add
imul
inc
jg
rcrl
loopne
xor
dec
mov
cmp
mov
adc
call
dec
jle
stos
cmp
mov
push
pop
pop
sub
loop
leave
mov
lea
ja
out
outsl
jg
clc
into
mov
adc
aas
sbb
push
mov
loope
cmpl
cwtl
rcrb
mov
scas
jae
jge,pt
repnz
pop
mov
xchg
movsl
or
mov
or
cmc
add
lods
pop
push
cmp
or
stos
push
loopne
and
imul
stc
mov
repz
and
int3
cli
scas
cli
pop
iret
add
add
insb
dec
adc
xor
nopl
xchg
lahf
fs
cmp
fisubs
popf
out
dec
addl
test
out
pop
pop
pusha
cmp
xor
outsb
add
les
xor
sub
xor
cmp
pop
aaa
xlat
cltd
mov
mov
jecxz
lcall
call
test
ljmp
dec
jae
sbb
bound
lods
inc
clc
lods
sub
and
and
bnd
push
insl
lock
fucom
sbb
cmc
in
or
mov
rolb
jns
add
cwtl
aam
iret
mov
and
pushf
mov
and
testl
jp
shlb
and
xor
pop
loop
dec
sbb
popa
fadd
cmp
add
mov
push
mov
jmp
pop
sbb
inc
stos
ret
cltd
movsb
shrb
xchg
aam
add
mov
cmp
fdivrs
dec
in
mov
cmp
daa
pop
out
repnz
cmp
je
and
dec
aam
mov
leave
shrl
ss
mov
xor
loope
jo
insl
jl
rclb
or
mov
sbb
mov
jbe
sahf
incb
sub
push
int3
in
rorl
add
call
xchg
loop
outsl
adc
push
fimuls
rcrl
fsubrs
sub
mov
rolb
and
inc
add
es
es
mov
cmp
imul
cld
adc
lock
inc
test
fsubr
in
out
add
dec
cmpsb
lock
lret
fcomip
push
cmp
cmpsl
or
fcompl
dec
adc
loopne
sub
xorb
shll
mov
aam
call
in
ror
ret
cwtl
shll
dec
mov
cmp
push
sub
cmpsb
sub
mov
mov
loope
pop
fsts
dec
js
xor
fwait
mov
pop
int
into
sbb
mov
jo
push
jmp
sub
push
and
pop
sub
jecxz
sub
pop
cmp
push
lods
out
clc
sub
enter
sbb
inc
fcmovu
fnstenv
iret
fildl
into
adc
cmpsb
cmpsb
fmuls
and
xchg
lahf
cmpl
addr16
jb
sub
js
push
mov
mov
xor
rcrb
adc
mov
jb
xchg
dec
stos
in
xor
xchg
out
adc
sbb
cmc
iret
cmpsl
and
insl
cmp
stos
jne
jp
fwait
jne
cmpsb
push
fucom
push
mov
popf
pop
adc
pop
xor
pop
and
xor
int
ror
adc
ja
push
pop
test
ret
lds
aas
add
pop
pusha
mov
mov
shll
mov
mov
bswap
shlb
dec
inc
pop
cmpb
arpl
mov
ds
orl
divl
popa
repz
aas
mov
cld
push
xor
mov
outsb
gs
sbb
das
call
xchg
movb
out
stc
and
loop
mov
push
iret
xchg
adc
int
push
xor
cmp
add
add
cli
or
movsb
push
mov
icebp
clc
add
mov
jno
int3
push
jno
mov
xorl
ret
sbbb
loope
lahf
fcomip
mov
fnstenv
push
pop
xor
jae
aad
in
push
orb
bound
add
xlat
sahf
push
sbb
aas
mov
out
inc
push
adc
xchg
xchg
les
daa
mov
adc
imul
or
lock
scas
push
dec
pop
mov
int3
xor
aaa
sbb
inc
sub
mov
inc
icebp
addr16
movsb
das
xchg
mov
in
pop
jmp
xor
xchg
pusha
mov
jnp
mov
negb
aaa
dec
stc
pop
xor
push
cld
outsl
mov
xchg
jae
pop
mov
test
adc
xchg
mov
sub
je
leave
cmp
aaa
xchg
jmp
loope
xchg
push
div
out
ds
pop
jle
and
or
in
insb
jmp
jg
inc
gs
lea
push
mov
mov
jbe
mov
mov
mov
add
push
lcall
sbb
ss
mov
stc
ja
jns
jb
jle
lods
testb
mov
jo
loope
and
mov
repz
lods
and
adc
sub
mov
jns
enter
in
js
jl
in
mov
pop
jb
push
ja
popf
mull
lret
addb
clc
push
pop
cmp
inc
inc
cmc
hlt
push
sub
xchg
sahf
loopne
adc
in
dec
push
ds
rol
sbb
es
pop
push
sub
sti
cmp
xchg
mov
xchg
cmp
seto
xlat
mov
das
push
pop
and
test
inc
fs
pop
mov
ret
push
mov
cli
add
mov
jge
cli
icebp
jle
in
ljmp
dec
int
out
test
or
lahf
nop
add
mov
out
jmp
mov
test
popa
fcoml
aas
fsubr
inc
push
fwait
cmpsl
cmp
int3
mov
aad
movsb
push
jo
fcomps
outsl
aam
shlb
int3
add
out
into
enter
fs
jne
lret
mov
repnz
in
dec
adc
test
inc
dec
cmp
insl
je
jg
scas
cld
rcr
mov
sbb
jg
mov
fisttpll
cmp
mov
inc
loope
popa
imul
repnz
lcall
lds
jno
inc
out
jge
xchg
std
mov
mov
inc
test
push
stos
jne
or
movsb
xchg
jb
jno
lea
ficoms
ja
lea
dec
mov
mov
scas
push
sbb
adcl
cmp
pop
hlt
lds
mov
cwtl
or
ficoml
cli
jg
dec
dec
fucom
mov
add
aaa
js
ret
cwtl
pop
popa
cmp
mov
aas
cmp
insl
ljmp
ret
inc
icebp
inc
in
mov
sti
ja
pop
pop
daa
xor
aam
popf
mov
adc
outsb
jns
cmp
es
clc
cmpsl
inc
add
mov
imul
loopne
mov
lock
push
fs
mov
in
mov
adc
add
lock
sub
add
jbe
xor
es
call
out
and
adc
jg
rclb
xor
movsb
pop
sub
mov
jae
imull
mov
loope
adc
pushf
leave
leave
loope
scas
enter
daa
dec
mov
xor
cmp
repz
add
fcomi
push
sbb
or
mov
sbb
mov
jl
popf
and
adc
ja
mov
cs
fwait
loopne
pop
into
sub
repnz
aas
cmp
rcrl
pop
pop
ffreep
icebp
sbbb
aas
add
lea
hlt
and
cli
dec
inc
in
push
imul
xor
push
jg
mov
outsb
cmc
cmp
lods
dec
xor
cmpsb
mov
dec
xor
mov
call
jecxz
inc
aam
xchg
adc
push
fnstenv
pop
ss
mov
dec
hlt
mov
cmp
pop
movsb
mov
fnstenv
popf
mov
sti
shlb
mov
daa
pop
jmp
mov
or
inc
mov
cmpsl
aas
inc
fucomi
inc
adc
fistl
mov
mov
mov
jl
mov
fwait
insl
adc
int3
lds
adc
add
rcrb
push
push
cltd
jb
and
or
xchg
insb
jle
xchg
aam
daa
and
popf
pop
stos
nop
cmp
or
cld
test
negb
clc
in
cwtl
out
call
lods
jg
mov
sti
or
push
push
push
ja
dec
subb
xchg
push
xchg
push
fucom
cmpsl
bound
and
mov
pop
aad
xor
in
mov
js
popa
adc
inc
cmpsb
add
mov
aam
pushf
out
pop
rcl
sub
or
lcall
xchg
push
dec
push
lret
adc
test
push
test
mov
lahf
pop
lret
punpckhbw
and
cltd
cmpsb
aam
push
imul
and
push
dec
sub
pop
testl
das
adc
dec
mov
cmp
std
das
into
fnsave
rcl
push
xorl
ret
hlt
hlt
jbe
pop
cmpsl
call
fwait
addl
aas
dec
xor
mov
jmp
mov
jno
lahf
cs
jnp
cmp
inc
int
enter
inc
add
jmp
fistpll
xor
ss
in
dec
add
and
sbb
fnstcw
fcmove
inc
cli
in
call
faddl
inc
inc
xchg
push
push
or
or
fcomi
dec
pop
xor
jmp
insl
inc
push
das
movsb
test
jmp
leave
pop
daa
clc
cmpsb
imul
fdivrs
arpl
push
mov
inc
cli
jmp
ja
loop
xchg
push
jae
sti
leave
mov
lock
push
mov
add
ljmp
push
leave
pop
dec
xchg
adc
sbb
jbe
fldenv
pop
test
lds
mov
adc
call
xor
push
orl
or
das
ja
and
into
xchg
mov
xchg
or
mov
shrl
das
hlt
push
roll
sahf
mov
lods
outsl
pop
xor
pop
rol
roll
mov
dec
xchg
inc
int
in
in
jge
in
ds
cmp
add
push
xchg
pusha
pop
cltd
inc
bound
jp,pt
fsubs
mov
inc
cmp
mov
fiadds
jno
xor
std
cmp
xor
gs
cmpb
mov
ror
jg
repnz
faddl
mov
sub
popf
add
or
or
mov
das
add
js
xchg
call
add
and
jmp
outsb
mov
or
and
add
pop
mov
inc
pusha
adc
jmp
push
cltd
mov
push
enter
aaa
ret
inc
rolb
xchg
push
jge
inc
scas
sbb
pop
pop
sub
mov
movsb
inc
insl
cltd
sub
adc
leave
jmp
adc
fs
ss
leave
adc
dec
idivb
push
lods
and
xor
popf
decb
mov
out
lea
fsts
or
fisttps
imul
ljmp
push
mov
xchg
out
repz
in
cmpsl
xchg
push
out
pushf
adc
adc
or
cltd
cltd
int
mov
ljmp
jge
out
pop
mov
pop
fdivl
cltd
add
inc
pusha
dec
ret
daa
mov
out
insl
leave
ljmp
test
insb
sahf
push
cmp
xchg
insl
xor
and
add
loope
mov
idivb
popa
fcom
loopne
stos
daa
hlt
push
mov
imul
cwtl
xchg
fnsave
mov
into
iret
pop
mov
ss
sub
and
arpl
xchg
pop
pop
inc
mov
ds
shl
cmpsl
pusha
cmp
cwtl
inc
outsb
dec
in
push
orb
xor
jns
ja
pop
call
outsl
aas
ret
add
pop
cli
adc
mov
or
xchg
push
mov
cmp
lock
in
repnz
loopne
loop
into
cmp
mov
jmp
lock
and
aad
adc
jo
pop
mov
lods
in
push
add
sbb
sub
lcall
xor
cld
das
ret
cmc
and
rorb
lds
sub
in
push
xchg
lea
and
jecxz
stos
inc
testl
jmp
xor
movsl
sti
pop
jle
lock
or
fistps
inc
testl
or
popf
pop
adc
or
adc
mov
popf
imul
insb
iret
or
xor
cmpsb
notl
push
pop
scas
fcomps
push
xorl
addl
xor
add
gs
stos
xor
or
and
jae
add
xchg
addb
ret
dec
js
hlt
sbb
xor
jb
and
push
movsb
fstpl
jno
xchg
clc
pusha
jge
xor
push
push
jmp
cmp
fdiv
das
ret
popf
lods
imul
inc
jl
xlat
mov
imul
out
or
sub
jne
cwtl
push
testl
cs
fsubl
jns
dec
xor
fsts
add
or
imul
mov
xchg
mov
das
cmp
cmc
mov
push
add
add
or
push
mov
sub
mov
ret
mov
ja
sahf
fwait
movsl
and
adc
inc
xor
xchg
cmp
push
pop
loop
in
into
shr
in
push
xchg
lret
les
xchg
daa
movsb
loop
test
jo
das
inc
sub
and
fildll
mov
fcoms
outsl
ja
movsb
push
lcall
jle
hlt
mov
pop
jb
inc
loopne
nop
mov
je
push
adc
and
dec
push
das
mov
orl
mov
dec
or
sahf
dec
out
mov
push
cmp
std
mov
and
mov
inc
inc
repnz
popf
cli
lcall
dec
cmp
insl
cli
inc
in
push
arpl
leave
in
jb
add
sbb
pop
push
arpl
jmp
mov
xchg
or
mov
jnp
lahf
and
out
dec
mov
icebp
push
jo
sbb
jp
mov
adc
lock
pop
shl
jo
cmp
insl
jecxz
add
dec
data16
insl
adc
icebp
sub
mov
imul
inc
scas
aas
ds
dec
nop
and
dec
sub
mov
sbb
scas
jmp
jle
dec
das
jp
adc
cltd
push
bts
push
addr16
inc
jg
fwait
test
cld
in
mov
push
test
cwtl
jecxz
int3
mov
inc
out
sub
leave
dec
repnz
jne
imul
repnz
adc
sub
flds
inc
les
add
pop
mov
sub
popa
push
xchg
mov
icebp
mov
iret
test
xchg
nop
add
jmp
and
sti
popf
xchg
dec
loop
mov
cld
arpl
cmp
inc
insl
mov
lock
sbb
sbb
movsb
mov
mov
xchg
cli
imul
out
jbe
and
int3
jae
incb
into
cmp
fdivrs
xchg
dec
repz
mov
mov
test
mov
icebp
test
pop
xor
xor
in
dec
aam
mov
loopne
xor
ljmp
aas
or
fildl
cmp
jl
push
jns
insl
insl
sarl
dec
rolb
inc
push
pop
mov
jb
mov
out
and
scas
sbb
add
sub
out
push
daa
adc
fs
adc
pop
or
jae
shlb
fwait
push
test
add
ljmp
push
and
lea
cmp
stos
sahf
mov
sahf
sbb
sub
mov
jle
mov
rcrb
imul
jnp
cld
push
repz
sbb
dec
xchg
loope
cmpsb
shll
mov
adc
les
popf
jno
or
mov
sub
cmc
in
sub
addb
js
lea
cli
loope
or
add
daa
pop
in
ds
jbe
mov
fsubp
inc
out
mov
les
rcrb
and
push
insb
or
pop
cmp
pop
push
jge
adc
mov
pop
mov
decb
push
pop
in
mov
fstp
jo
xor
neg
mov
mov
and
aaa
jo
mov
pop
inc
sahf
aaa
jbe
inc
notb
cmc
aaa
mov
adc
imul
out
mov
xor
data16
dec
xorl
xor
push
and
or
lock
push
jnp
adc
out
std
inc
into
push
inc
sbb
imul
ljmp
pop
mov
lock
rorl
pop
mov
xchg
mov
pushf
dec
sahf
push
cmp
mov
adc
mov
lock
aam
sahf
das
jo
pop
and
arpl
les
jbe
mov
rcl
dec
fnstenv
add
xor
jae
test
lods
movsb
or
pop
xchg
fiaddl
lock
mov
sub
dec
iret
lods
xchg
add
pop
fisubrs
lret
add
add
xor
int3
mov
pop
mov
repnz
jo
clc
xchg
xchg
leave
pop
push
bound
popf
cs
addr16
pop
xor
mov
fiaddl
sub
jne
jmp
push
ret
shll
jbe
push
outsl
push
sbb
inc
shlb
or
pushf
push
notb
in
ret
sti
bound
loopne
jns
mov
das
les
insb
pop
ror
jmp
testl
insl
xchg
mov
and
int
call
sub
aaa
sub
xchg
in
sub
cmp
sbb
jo
inc
push
ja
or
test
push
dec
loop
popa
mov
sbb
and
mov
mov
movsl
sub
int
mov
mov
xchg
movsl
outsb
es
xchg
adc
int
or
idiv
scas
dec
jecxz
aad
jnp
mov
mov
iret
scas
cmp
pusha
arpl
ret
mov
or
adcb
repnz
pop
cli
add
into
leave
mov
jp
ds
jp
push
loope
xor
sbb
add
cltd
rcrl
mov
sbb
pop
das
test
sub
xchg
push
bound
mov
cli
ljmp
insl
lock
std
in
sub
pop
shrb
ja
addb
cmp
je
sbb
and
cmp
add
sahf
lods
cmp
mov
mov
cli
fcompl
cmpsb
xchg
jae
rclb
arpl
cmpl
push
sbb
inc
cs
mov
int3
imul
xor
mov
je
insb
xor
shll
push
jle
mov
rcll
xor
mov
les
ds
jp
sub
mov
mov
sub
ret
mov
lcall
int3
mov
orb
sub
inc
test
xchg
jmp
inc
and
pop
je
dec
mov
sbb
pop
mov
dec
into
inc
inc
jmp
andl
stos
ficompl
jecxz
or
sti
fnop
push
out
push
lods
add
sub
mov
cmp
cs
jge
push
xlat
jmp
jp
mov
jnp
imul
js
lods
xor
mov
sbb
ja
xchg
sbb
xchg
or
imul
jg
dec
stc
imul
call
rcrb
push
in
xchg
ficomps
jp
faddl
sbb
mov
mov
int3
stos
or
xchg
inc
pop
dec
dec
stc
outsl
xchg
popf
lea
and
dec
daa
sbb
jbe
mov
sub
shl
mov
adc
fwait
xchg
arpl
lock
lods
inc
test
adc
into
xor
inc
xor
and
jns
fdiv
add
mov
add
mov
lea
and
lea
andb
sti
jg
dec
jl
inc
loope
popf
hlt
cmc
mov
or
xchg
pop
inc
jae
dec
add
rcl
lret
mov
mov
lea
out
out
push
jl
movsl
or
mov
jb
push
mov
iret
and
sbb
xor
cmpsl
jne
dec
cwtl
iret
aad
jns
mov
and
sbb
cwtl
or
xchg
sub
lret
cmp
sbb
pop
movsl
hlt
xchg
xchg
rcll
pop
lret
push
inc
adc
gs
icebp
pop
mov
inc
sbbl
adc
xchg
mov
scas
mov
cmpsb
js
or
loop
movsb
xor
pop
int3
inc
cli
arpl
jbe
dec
aam
add
ss
test
cmp
movl
pop
xchg
pop
scas
movsb
dec
dec
ret
iret
aaa
jle,pt
push
in
fisubl
repz
or
aaa
stos
popf
dec
sbb
fsubl
mov
test
push
jecxz
mov
fs
fldt
pop
mov
push
mov
inc
jo
sahf
mov
lea
pop
sub
addb
in
jmp
fs
shrb
cmp
or
mov
adc
ja
xor
jl
pop
std
stos
mov
sbb
psllw
iret
inc
sub
aaa
pop
jnp
shrb
int
arpl
xlat
leave
jle
push
les
je
mov
out
or
pop
and
movsl
mov
mov
push
imul
inc
mov
sbb
out
dec
subl
mov
decl
enter
sub
jl
int3
jge
aas
push
jg
bound
and
dec
lods
sahf
les
sti
mov
or
repnz
add
xor
pop
leave
std
negb
in
push
pop
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
pop
xchg
add
imul
in
out
ret
jmp
bound
xor
dec
repnz
push
insb
dec
cmp
push
cs
insb
cmp
sarl
mov
sub
inc
or
push
jmp
mov
addr16
call
adc
inc
sub
sub
ds
test
pop
cld
gs
xchg
jno
shrb
cmpsl
sub
rorb
ljmp
xchg
pop
ficompl
mov
push
test
mov
das
fdivrs
gs
cmpsb
cmpl
jecxz
test
dec
sti
mov
cld
int3
nop
or
out
ret
inc
jecxz
ret
mov
mov
rcl
int
mov
mov
rclb
sub
inc
outsb
ss
idivl
call
cmp
dec
and
sub
adc
rol
popf
mov
add
enter
mov
and
mov
or
xchg
mov
lret
mov
jge
fcmovne
cwtl
test
repz
xchg
ficoml
dec
jns
xor
push
cmp
add
inc
cltd
mov
push
mov
xor
mov
fisttpl
pop
sbb
lods
das
xchg
mov
xchg
es
out
adc
aas
aaa
movsl
loope
insl
jae
xchg
movsb
into
in
ret
repz
xor
andb
mov
stos
dec
imul
sub
sub
inc
stc
xor
ficompl
bound
or
subb
je
mov
xor
or
push
or
movsb
gs
mov
xor
fsubs
push
pop
xchg
leave
and
adc
imul
lock
ret
movl
insl
jg
clc
in
fs
sti
jmp
xchg
sbb
sbb
mov
test
xchg
roll
pop
sti
pop
cld
mov
fcoms
lods
adc
ds
mov
lock
mov
sbb
mov
and
jno
sahf
push
mov
add
int
push
dec
into
cmp
insb
fcompl
jns
jl
and
lcall
mov
sbb
xor
sarl
xchg
daa
jb
inc
and
mov
stos
fsubs
outsl
xor
mov
or
and
dec
adc
frstor
es
adc
out
sbb
ljmp
ljmp
mov
dec
mov
adc
adc
in
inc
inc
test
pop
or
lcall
xor
jo
or
add
movsl
cmp
sub
or
int
and
mov
test
inc
cmp
xor
ret
lds
cmpsb
les
ds
hlt
push
lock
jnp
mov
loopne
fildll
push
fsubrs
mov
dec
das
ret
jmp
in
dec
jns
dec
cld
shl
jl
mov
mov
cmp
ljmp
pop
mov
lret
jne
cld
mov
hlt
clc
shrb
inc
sbb
adc
cmp
cs
cmc
xor
and
xor
sbb
mov
xor
sbb
and
mov
xchg
pop
pushf
mov
aaa
movmskps
fistps
mov
jle
js
outsb
in
aas
dec
lods
adc
lcall
push
ja
fwait
inc
fsubp
out
push
lods
out
xchg
jnp
push
adc
mov
lods
sub
mov
insb
shr
std
push
xor
push
inc
sub
jb
pop
out
inc
in
popf
mov
rcrb
scas
push
lret
jmp
int
jmp
and
jp
psubusw
sarl
aaa
test
add
sub
pop
sub
mov
pop
push
inc
xchg
insb
stos
pop
jge
or
mov
or
repz
cltd
inc
sbbb
sbb
aas
out
xchg
in
lret
insl
push
insb
mov
adc
loope
pusha
cmp
add
cmpsl
sti
sbb
push
fadd
movsb
adc
xlat
push
or
aad
adc
mov
pop
adc
inc
pushf
mov
inc
dec
push
push
in
push
cmp
xlat
fcmovnb
fisttps
fistl
jbe
into
push
mov
stos
jl
sbb
loop
leave
loope
inc
negb
adc
fs
js
adc
pop
lods
sbbl
xchg
shl
int3
and
sahf
popf
push
xchg
sbb
add
dec
jne
sahf
xor
xor
sub
rol
orb
adc
cs
pop
dec
mov
enter
lret
inc
loop
sub
out
xor
popa
push
pop
cmpsb
xor
fcmove
jmp
ljmp
loope
pop
leave
add
and
add
jl
and
mov
adc
popa
cmc
call
jmp
fs
arpl
jne
aas
aas
and
ljmp
cmp
in
ror
fiadds
cli
ret
sbb
notl
decb
xor
add
mov
in
lahf
iret
imul
add
sbb
mov
push
divb
iret
dec
sub
jne
jo
icebp
push
inc
mov
xchg
or
adc
mov
dec
lods
test
jp
cmp
mov
cmp
out
lcall
fstpl
push
fldl
add
sbb
sub
stos
and
mov
loop
mov
insl
addb
popf
sbbb
aaa
test
jae
dec
stos
rcl
fsubrs
jno
mov
jno
imul
mov
sbb
fsubrp
sub
jp
lods
pop
mov
mov
test
dec
ljmp
in
push
sarb
sub
lods
mov
hlt
pop
xorb
push
psubq
and
dec
lret
push
sahf
popa
jecxz
adc
es
pop
jle
push
mov
jnp
ss
xor
pop
das
mov
aad
shrb
add
mov
xlat
jns
clc
and
xchg
jno
pop
loope
fadds
mov
insb
mov
mov
dec
hlt
addl
test
mov
test
push
lahf
cmpsl
fwait
xor
dec
stc
xchg
xor
sub
mov
push
fwait
adc
inc
dec
or
sbb
enter
or
popf
push
pop
xchg
cli
movsl
sahf
in
mov
bound
std
in
dec
xchg
in
dec
loop
mov
cmp
cmpsl
pop
add
pop
push
shll
cli
imul
aaa
orb
test
sub
lret
adc
mov
aas
movsb
pop
and
test
adc
xorl
aad
jmp
cmc
dec
mov
dec
rolb
xchg
aaa
sub
fsub
out
push
adc
pop
add
jecxz
fs
movsb
inc
sahf
mov
fs
cmp
sbb
ret
mov
jb
pop
mov
fwait
repz
mov
jae
stos
rorb
mov
add
xor
outsb
mov
or
mov
fwait
mov
cmc
insl
pusha
adc
adc
test
addl
sub
rorb
enter
aas
hlt
outsl
sbb
push
lahf
in
add
sub
outsl
xchg
ret
shrl
jg
jae
xchg
dec
outsl
js
rorb
mov
xor
push
fisubrl
push
push
insb
pop
aaa
shlb
in
add
push
mov
push
push
mov
fiadds
pushf
testb
push
lcall
pop
jge
push
adc
stos
in
jo
mov
and
mov
and
pop
sub
popf
cmc
sar
jbe
mov
add
testl
mov
fcos
aad
insb
sbb
cmpsl
sub
mov
mov
mov
dec
xchg
leave
adc
movsl
in
rcr
adc
out
adc
insl
inc
nop
std
rclb
jb
call
les
rcr
xorb
call
cmp
inc
loop
dec
pushf
mov
jg
hlt
push
sahf
hlt
lock
outsl
xlat
les
std
jae
lcall
mov
adc
jecxz
stos
fcomp
mov
scas
mov
ficomps
xor
jns
push
pop
or
addr16
dec
or
xlat
push
push
loopne
shll
loopne
push
jns
inc
jae
xchg
pop
cmp
mov
cs
and
and
jmp
jge
push
pushf
cmp
cmpsb
movsb
inc
orl
cmpsb
push
push
test
or
mov
aad
dec
push
xchg
jno
lods
inc
cmp
je
dec
outsb
out
jo
shlb
sub
cmp
lds
outsl
movsb
jl
adc
out
cmpsb
mov
jge
inc
mov
dec
mov
add
fstpt
adc
adc
loop
lahf
mov
inc
leave
adc
cmpsb
lods
daa
cld
mov
pop
sbb
mov
xor
adc
or
imul
sahf
icebp
mov
dec
adc
arpl
push
mov
lret
je
add
push
test
mov
int
xor
adc
into
xor
jb
and
lods
insl
arpl
xchg
xor
lret
arpl
pop
lds
in
and
lock
and
popa
movsb
xchg
cmp
lcall
popf
jle
sbb
ja
pusha
int3
pushf
jl
xchg
pop
mov
ds
mov
push
mov
addb
xchg
movsl
or
lock
in
or
push
mov
loopne
shrb
stc
dec
cmp
xchg
mov
jl
outsl
mov
or
dec
sbb
inc
mov
test
es
movsb
mov
pop
jl
xor
or
shlb
jmp
mov
mov
push
cmp
inc
and
fadd
adc
fistl
stc
and
pushf
loop
je
je
movsl
mov
outsb
adc
xchg
sbb
mov
dec
les
add
lds
addb
xor
mov
pop
sar
in
ss
inc
mov
lcall
adc
xor
scas
scas
mov
dec
cmpsl
mov
or
fwait
dec
and
mov
or
fisttps
stos
sbb
out
scas
imul
cmp
das
mov
jmp
and
mov
std
cwtl
inc
stc
inc
les
mov
adc
pusha
or
mov
pop
scas
hlt
fisubs
sub
xchg
lock
push
push
cmp
iret
xchg
in
cmp
mov
adc
push
mov
dec
sti
lahf
repnz
pop
jl
stc
mov
cltd
cmp
push
test
mov
bnd
std
mov
adc
das
xor
movsl
adc
fnstenv
pop
dec
loopne
or
jge
mov
cmp
insl
scas
data16
stos
icebp
mov
lock
daa
aas
in
in
test
pop
mov
das
push
push
inc
clc
enter
sub
sub
cmpsb
push
push
push
stc
mov
insl
inc
fidivrl
mov
and
aaa
jb
add
mov
mov
or
and
mov
add
not
sbb
arpl
xor
mov
in
fisttps
pop
push
jo
repnz
xlat
nop
movsb
mov
mov
fildl
mov
aam
and
push
shlb
cmp
jo
xchg
cmpsl
mov
fwait
sahf
cmp
pop
xchg
pop
lret
add
cmp
sbb
pop
jns
mov
adc
insl
mov
cmp
cli
fs
es
jno
pop
jp
sbb
imul
lock
int
das
sub
leave
test
les
jne
or
jae
arpl
mov
xor
addr16
int3
sub
add
add
out
push
cmp
sbb
xchg
pusha
mov
sub
and
xchg
hlt
adc
xor
mov
inc
lds
adcb
test
ret
ror
mov
cmp
push
sub
mov
or
js
imul
mov
outsb
les
mov
sbb
in
and
ret
adc
in
or
xlat
xor
cmp
bound
inc
lds
xchg
mov
ret
dec
lock
fstl
data16
ret
xor
mov
xchg
jp
aad
js
dec
sub
cmpsb
or
es
inc
sbb
inc
sbb
sub
sbb
cmp
push
aas
sbb
inc
adc
inc
adc
outsl
or
rolw
cmp
mov
inc
xor
cmp
and
push
jbe
pop
mov
sahf
mov
add
jmp
jmp
jns
mov
or
daa
cmp
es
bound
inc
mov
mov
sbb
dec
mov
leave
jmp
mov
dec
cmp
bound
sbb
xor
push
or
dec
lcall
cmp
inc
push
fiaddl
jg
sub
mov
lock
cwtl
push
int
xchg
mov
int3
mov
cs
dec
xor
and
pop
movsl
rcrl
push
lds
popa
imul
mov
adc
stos
mov
add
pop
aaa
les
lret
mov
push
dec
iret
mov
outsb
mov
mov
jg
int
mov
or
fstps
xchg
in
and
mov
push
stos
in
jge
imul
and
addl
jecxz
mov
xchg
pop
mov
scas
jns
fistl
loope
push
inc
and
mov
jbe
insb
sub
aas
pop
test
adc
enter
hlt
fildll
repnz
test
int
repnz
outsb
sti
jle
clc
mov
jne
lcall
push
mov
dec
pop
lea
imul
in
nop
and
pop
ret
gs
loopne
inc
xor
mov
adc
push
shll
iret
leave
shll
jl
xchg
bound
push
insb
jae
inc
mov
call
movsb
and
jl
cli
clc
sbb
or
lock
adc
pop
and
mov
rorl
lret
add
cmp
fldl
dec
mov
jecxz
or
xor
sub
pop
xchg
mov
mulb
dec
push
pushl
push
lret
jecxz
dec
lcall
repz
decb
in
nop
loop
push
sahf
sbb
pop
pop
test
sahf
sbb
sti
in
popf
aad
jnp
dec
lock
ret
test
sub
bound
mov
sahf
dec
aaa
in
and
mov
cmp
cmp
mov
int3
inc
loop
lods
jb
mov
sub
icebp
mov
shl
add
mov
shll
jbe
and
jno
jne
flds
loopne
mov
xchg
lods
fnsave
rcrl
test
mov
jb
adc
test
ljmp
jno
push
popf
xchg
cld
push
stos
repnz
stc
adc
shl
mov
dec
xor
outsb
arpl
lret
int3
mov
stc
pop
and
movsl
enter
mul
mov
cli
mov
jmp
hlt
jno
push
popa
lods
sahf
dec
int3
sahf
xchg
loope
in
enter
cmp
mov
aam
es
jg
pop
push
in
or
pop
inc
idivb
xchg
in
test
fisubrl
pusha
aaa
lahf
fnsave
xor
into
fsubl
ss
sahf
ss
lods
rorl
cld
ret
mov
lods
jg
mov
sub
in
jmp
test
lret
pop
ja
inc
int
mov
sbb
xchg
mov
jl
cmp
mov
test
call
mov
cmpsl
xor
cmp
and
cmp
mov
dec
adc
adc
jnp
push
fcmovnb
imul
scas
sbb
shr
dec
fisttpl
cs
ss
xchg
aaa
sarb
daa
cwtl
psllw
outsb
xchg
into
mov
sub
add
jnp
inc
sub
js
sub
inc
mov
into
pop
outsl
jno
jmp
movsb
mov
stc
in
dec
jmp
testl
lcall
ret
ja
pop
add
mov
mov
adc
pop
aas
insb
popf
ret
or
inc
aas
or
sub
mov
mov
mov
out
clc
data16
xlat
gs
cmp
xlat
sbb
mov
out
jecxz
out
popf
sbb
mov
ds
in
lcall
out
mov
lahf
lahf
ret
mov
cld
and
test
inc
call
lock
pushf
push
jbe
aad
mov
fstl
mov
mov
dec
mov
out
lret
sbb
jp
repnz
dec
jl
mov
add
and
xchg
mov
adcb
ljmp
cmp
ljmp
leave
jecxz
jecxz
push
int3
stos
mov
std
out
xor
cmc
hlt
xchg
es
cs
xlat
loop
pusha
sub
testb
jno
cs
xor
int
cli
pop
mov
or
add
mov
push
bound
shl
push
inc
pop
stc
fnstsw
fld
std
or
or
and
push
cmp
pop
in
out
fcompl
prefetch
pop
fadds
xor
mov
outsb
mov
ja
addb
adc
call
mov
add
jnp
jb
cmp
inc
loopne
sahf
mov
mov
pop
mov
popf
iret
or
cmp
xchg
and
cmp
aas
xchg
cmpsl
mov
cmp
insb
sbb
jge
dec
leave
rorb
mov
mov
cltd
cmpsl
pop
ret
mov
sub
icebp
xchg
ss
inc
iret
fcomps
test
mov
pop
fldcw
mov
xorb
sarl
pop
addb
push
rcrl
mov
sti
ljmp
adc
add
movsl
xor
outsb
push
inc
push
or
xor
mov
dec
jne
loopne
pop
xor
or
jecxz
sbb
sbb
cld
push
pop
pop
leave
inc
jg
or
xchg
xchg
xor
jns
adc
dec
out
rorl
dec
int
mov
and
cmp
jmp
lds
push
out
add
sarl
dec
pop
xchg
xlat
jl
out
inc
in
push
xchg
adcl
pop
mov
add
imul
cmpsb
pop
adc
bound
xchg
sbb
bound
push
adc
int3
cmpsl
jp
push
or
xor
jge
jl
scas
insl
dec
test
aaa
mov
test
fimull
repnz
pop
mov
mov
pop
add
shrb
shl
push
je
push
cmp
divb
adc
sbb
jns
ja
int
sub
sub
scas
jle
outsb
pop
add
jnp
lods
mov
int3
dec
gs
lahf
xor
sbb
ficomps
mov
add
test
jl
pop
lock
jno
add
fnstcw
sti
ret
mov
dec
xor
aas
ret
push
xor
fstpl
xor
nop
test
test
mov
xorl
testl
lret
outsb
shrl
xchg
jo
and
rorb
das
or
push
pop
pop
xchg
sbb
popf
cmc
jg
imul
mov
pop
mov
mov
mov
push
pop
scas
popf
fsubrl
xor
push
testb
mov
jmp
ds
mov
clc
mov
loopne
sub
ret
aam
add
adcb
xchg
out
loopne,pn
jne
and
imul
xchg
out
fiaddl
dec
cmp
dec
divl
jl
push
aam
push
pop
std
push
push
insl
mov
dec
roll
cmp
cmpsb
inc
movsl
dec
push
in
jmp
or
and
add
cwtl
out
mov
insb
bound
adc
loopne
sti
push
mov
repnz
outsl
mov
les
or
mov
push
data16
ss
cli
dec
adc
xchg
ror
sub
add
xchg
adc
jle
imul
mov
mov
das
lcall
std
jns
mov
xchg
jno
lret
or
mov
push
xor
mov
push
pop
cs
iret
dec
shl
or
icebp
pop
ret
mov
mov
cwtl
xchg
ret
push
in
pop
add
repz
hlt
popa
pop
jge
jl
sti
clc
out
in
xor
outsl
cmpsl
pop
not
sbb
pop
mov
es
aam
and
xorb
mov
and
stos
cmpsl
fs
js
mov
adc
leave
sbb
ja
jns
leave
mov
in
xor
or
fwait
mov
mov
pop
sahf
in
sub
adc
mov
mov
adc
mov
cmp
scas
jmp
aam
loop
fisubrl
fwait
sbb
fimull
lods
paddw
mov
cmp
jae
pop
mov
dec
lods
jge
imul
xchg
js
jns
mov
insl
and
stc
out
ret
mov
movsl
stc
in
pop
jl
hlt
mov
add
jne
leave
aaa
pop
sbb
mov
fs
push
xorb
and
xor
push
xor
inc
mulb
subl
clc
cmp
push
mov
mov
mov
pop
sbb
lock
adc
and
pop
dec
fbld
and
push
dec
sahf
jae
xchg
ret
inc
jno
xchg
sub
jno
repz
daa
repz
mov
sti
neg
fisttpll
mov
push
cmp
dec
imul
repz
sub
iret
das
jl
push
push
jp
cmp
fiaddl
mov
out
sbb
xor
aad
insl
test
adc
xchg
pop
push
jmp
repz
das
sub
add
mov
pop
call
data16
jmp
sbb
add
jnp
inc
popa
jo
pushf
sbb
jge
push
ljmp
insb
xchg
in
mov
addr16
sub
mov
mov
fs
test
jbe
sub
fstpl
stos
mov
das
aam
stos
lock
xchg
sahf
jae
les
xor
push
lret
and
or
insl
add
shlb
pextrw
push
xchg
cmpsb
adc
mov
xchg
adc
push
enter
mov
mov
pop
mov
pop
push
xchg
fldl
mov
test
scas
push
add
adc
jecxz
push
jns
push
and
leave
sbb
notb
aaa
es
pop
mov
pushf
loope
stos
loope
jae
loopne
cmpsb
jp
mov
mov
pop
addb
ret
and
rcr
xlat
ret
and
mov
lods
adc
cmpsl
dec
xor
rcrb
jae
in
and
cmc
add
xchg
pop
add
test
sbb
bound
dec
sub
stos
not
xlat
jl
fcompl
adc
or
cltd
bound
scas
mov
inc
test
pop
xor
imul
cmc
xchg
dec
sub
sub
aam
jb
fsqrt
outsl
sti
addr16
jp
stos
or
mov
sub
jecxz
in
loopne
pop
fisubrl
add
sbb
sbb
dec
imul
add
cmpsl
xchg
ljmp
cmpsb
out
add
out
xor
lret
xor
pop
cltd
stc
push
lahf
das
lods
or
lods
call
stc
repz
andl
bound
mov
add
daa
pushf
mov
subl
jb
pop
inc
dec
add
outsb
daa
aam
pop
pop
jnp
into
pop
jb
lret
lea
imul
dec
loopne
aas
lea
dec
xlat
subb
aam
pushl
lea
and
in
decb
xchg
addl
sub
jns
or
adc
mov
mov
stos
stos
aas
cmc
or
fpatan
mov
push
sbb
jo
sbb
jno
jb
fsin
decb
pop
imul
jb
inc
out
jb
add
xchg
call
hlt
inc
xchg
push
xor
lea
and
outsb
mov
cmpsl
es
and
pusha
fbstp
push
push
pop
leave
sahf
mov
jle
sahf
mov
xor
push
int3
das
cli
or
fistpll
jno
xchg
scas
pop
adcl
and
xchg
cmc
xor
ss
into
sbb
repz
xchg
sub
jo
das
test
mov
mov
loopne
filds
dec
sbb
rcrb
jmp
loop
mov
repz
xchg
and
jp
out
mov
push
adc
fsts
adc
pop
add
aam
sbb
or
push
js
aas
into
in
cmp
pop
or
pop
nop
add
pop
jge
xor
icebp
in
aad
mulb
movsl
mov
push
lret
jle
into
lahf
test
test
imul
cmp
popf
stos
cmp
lahf
jmp
into
add
mov
or
mov
push
xor
mov
call
xchg
enter
mov
mov
push
cmp
enter
mov
lock
stos
add
lods
das
sub
inc
mov
mull
and
fidivs
mov
pop
dec
jne
push
lods
enter
dec
xor
sbb
pop
mov
mov
fiadds
push
inc
add
mov
pop
movsl
and
imulb
idivb
popf
fsubrl
enter
ret
popf
push
lods
in
sub
add
cmp
int3
xchg
push
jo
add
add
push
xor
jbe
lret
andb
cmpsb
movsl
mov
adc
in
push
fidivl
lock
lods
or
iret
pop
cmp
loope
inc
sahf
int
and
cmp
cmp
dec
fcmovne
push
cld
popa
dec
ja
insb
or
fiaddl
or
jp
push
movsl
dec
lods
mov
dec
xchg
ret
inc
mov
inc
sub
jg
int
and
stos
repnz
lods
mov
xchg
xor
cmc
lock
mov
test
outsb
sub
stos
push
hlt
sub
sub
inc
insl
jmp
fsubs
mov
dec
push
or
xchg
arpl
adc
fdivl
lock
mov
icebp
cmpsl
lahf
jo
iret
xor
xor
adc
adc
add
inc
sbb
xchg
fadds
jecxz
lret
lods
inc
stos
ja
movsl
mov
sbb
xchg
in
popf
mov
js
fs
inc
mov
pusha
mov
sbb
jnp
add
stos
xor
rolb
scas
fst
adc
and
sbb
cmp
incl
sbb
xor
jo
repnz
and
or
icebp
fsub
sahf
mov
xchg
jp
test
push
and
cmp
jo
in
pop
sqrtps
mov
cmp
sbb
mov
push
hlt
push
dec
dec
cld
repnz
adc
jle
cltd
sub
sub
andl
dec
lods
cli
call
jle
cmp
xchg
pop
mov
jge
cld
loop
loopne
jle
xchg
xor
cmpsb
jge
enter
mov
dec
push
mov
aas
imul
jmp
movsb
ljmp
rcl
push
sbb
mov
pop
sub
pop
mov
test
mov
idiv
clc
int
bound
inc
loopne
scas
in
and
push
test
jge
sbb
jp
cli
pop
insl
call
in
push
jp
xorl
in
xor
dec
bound
fisttpl
adc
fstpl
sbb
xchg
cmp
stc
fstl
idivl
stc
mov
mov
pusha
stos
int
jecxz
sarb
in
out
or
scas
ficoml
push
push
mov
mov
sub
add
fisubs
pop
and
and
push
jle
pop
insl
push
js
pushf
call
sub
jbe
inc
jmp
sub
test
out
ret
adc
test
dec
sbb
push
push
lahf
addr16
in
cli
push
jo
fs
cwtl
test
inc
mov
and
cmp
cmpsl
imul
mov
das
orps
lds
data16
lods
push
pop
out
lret
inc
mov
mov
or
push
cmc
stos
cmp
js
bound
jmp
das
jne
adc
movsb
cs
int
fdivrp
xchg
cmpsb
fiaddl
scas
dec
ds
mov
jnp
insl
fcomi
lret
mov
js
insb
out
cmp
jl
cmpsb
add
mov
cmp
mov
xchg
and
xchg
aaa
sbb
iret
lret
inc
in
ss
add
and
add
clc
xchg
repz
leave
aam
aam
sbb
in
iret
pop
jge
insb
shlb
dec
sti
mov
xadd
sub
mov
pop
std
mov
insb
and
in
push
adc
dec
mov
cmp
lods
pop
sub
cmp
mov
popa
cli
loope
bswap
mov
nop
xchg
lods
inc
xor
sbb
lock
xor
mov
push
int
fbstp
sub
sbb
mov
cltd
mov
movb
dec
loop
test
push
les
nop
lahf
inc
lahf
xor
jno
jg
lods
mov
pop
mov
jae
iret
mov
jns
add
daa
inc
iret
dec
inc
scas
or
push
xor
aas
clc
lcall
fisubs
add
inc
inc
callw
lock
jns
lds
cmp
dec
sub
jl
mov
jns
xchg
and
pop
lock
icebp
dec
popf
ljmp
pop
test
stos
pop
hlt
mov
test
and
out
cmp
pop
xchg
lods
pop
push
rcr
leave
push
adc
xchg
aas
adc
xchg
mov
jmp
adc
jno
int
arpl
aam
lahf
pushf
bound
add
stos
aad
sbb
sbb
adc
ljmp
or
jns
jmp
pop
mov
pop
adc
daa
outsl
push
call
outsl
add
into
inc
jae
mov
xor
stc
movsl
mov
mov
nop
sbb
inc
gs
sbb
movups
and
xor
sub
adc
jns
pushf
fs
aas
rorl
add
nop
sbb
xchg
dec
sbb
fisubs
add
xor
mov
in
into
das
jp
dec
push
xlat
jb
arpl
jle
sbb
ror
cmp
jg
inc
mov
outsb
sahf
push
repz
jno
loopne
add
and
dec
dec
sarb
adc
dec
mov
test
repz
fs
push
enter
faddp
and
mov
dec
or
add
iret
pop
jge
mov
add
mov
test
mov
incb
sbb
pop
rcrb
ljmp
mov
loop
jge
jle
jb
jle
mov
sub
pop
adc
inc
bound
cmp
xor
xchg
fisttps
push
or
or
imul
mov
stc
or
mov
adc
hlt
insl
std
or
jne
add
sub
hlt
daa
stos
pop
push
bswap
addb
adcb
xor
mov
movsb
das
push
loope
mov
mov
add
mov
mov
xor
add
jmp
jae
mov
xchg
movsl
jecxz
pop
sbb
add
orb
jmp
bound
cs
and
cmpsb
pusha
iret
xchg
mov
lcall
sbbl
sub
cmp
cmp
lret
cwtl
adc
push
addr16
in
fdivrl
insb
adc
in
jle
inc
xor
mov
iret
out
aad
stc
dec
int3
push
jge
cmp
xchg
pop
lods
pop
push
pop
stos
stc
xchg
add
loopne
pmullw
adc
loope
popa
bound
mov
jnp
or
adc
jge
int
cltd
sti
pop
loop
ss
call
in
aaa
cld
jno
ret
xorl
inc
vphaddubd
push
ror
mov
jg
jbe
pushf
es
dec
sub
xchg
push
adc
jae
mov
cmpl
stos
jle
push
hlt
call
adc
lods
das
jno
mov
xorb
loope
or
mov
xchg
icebp
neg
nop
push
fwait
cmp
loopne
adc
inc
jbe
or
sbb
xchg
pop
mov
das
repnz
push
ds
and
dec
adc
jp
data16
adc
jp
xchg
ss
cmp
pusha
adc
mov
add
leave
pop
jle
dec
push
xchg
add
xor
out
lds
pop
add
stc
cmp
out
nop
inc
sub
xchg
cmpb
mov
jecxz
or
call
fdivrl
lea
or
and
adcb
cld
out
shlb
rorb
mov
or
mov
mov
mov
mov
shlb
jnp
in
jns
mov
aam
stos
mov
add
inc
push
fisubrs
mov
sub
fstpl
push
dec
test
jo
iret
lods
cmp
std
xchg
icebp
aaa
and
fisubl
mov
push
xlat
cmp
sbb
sbb
cmpsl
sbb
dec
push
popa
popa
imul
mov
in
mov
lret
inc
jb
mov
jnp
cwtl
mov
xor
dec
outsl
nop
sti
mov
add
mov
icebp
nop
mov
cmp
subl
xlat
in
push
int3
jge
faddl
add
sub
test
arpl
arpl
arpl
das
test
rcll
sar
pop
je
push
mov
jo
roll
das
jmp
sub
into
sahf
sbb
add
jno
cmp
pusha
mov
xor
ds
sbb
popa
fidivrl
fwait
dec
nopl
scas
repz
lret
subb
adc
shrl
fildl
jno
lcall
bound
add
jmp
xor
cmp
mov
mov
pop
adc
in
sbb
jge
wbinvd
inc
fs
lds
or
cmc
mov
jl
movsl
loopne
dec
or
sub
das
push
iret
cs
push
mov
in
test
and
cmpsl
ss
pusha
repz
cltd
push
xchg
stc
rcrb
cmpsb
jg
in
dec
add
mov
mov
fcmovb
push
mov
add
inc
mov
cltd
fwait
mov
sbb
inc
push
repnz
dec
push
popf
in
xor
movsb
mov
mov
enter
push
ss
leave
dec
loop
imul
mov
enter
in
jo
mov
mov
push
jne
mov
movsl
push
cmp
and
pop
mov
hlt
in
push
cmp
out
shrl
roll
adc
lahf
mov
cmp
cmp
pop
mov
inc
lods
cmp
int3
push
mov
popa
pusha
imul
mov
pop
push
mov
and
popa
adc
xchg
jmp
mov
or
xor
mov
sahf
scas
xchg
mov
in
in
or
sub
sub
int
pop
pop
lahf
fsubs
mov
and
pop
scas
pop
popf
mov
lcall
ficoms
mov
inc
enter
dec
xor
xor
sbb
test
mov
sub
add
sti
dec
mov
sbb
or
xor
push
stos
or
xchg
fisttpll
pushf
mov
pop
push
repz
ror
jl
and
mov
loopne
test
rol
das
jns
xor
mov
shr
xchg
adc
dec
xchg
testb
mov
sub
rolb
idivb
ret
xor
push
pop
adc
push
test
sbb
dec
cmpb
jmp
mov
mov
lret
popf
add
and
cs
popa
sub
mov
and
add
sub
fld
pop
lds
sub
repz
aam
mov
sub
jp
test
sti
aas
nop
xchg
lock
inc
add
and
arpl
adc
xchg
pop
mov
sbb
in
xchg
hlt
int3
jecxz
inc
scas
add
pusha
cwtl
fisubrl
sbb
mov
je
inc
lret
pop
out
aas
pop
mov
pop
mov
pushf
stos
loope
loopne
mov
inc
mov
andb
and
fnstenv
inc
xchg
or
cmpsb
dec
icebp
pop
push
lea
popf
or
ljmp
mov
int
mov
lea
test
clc
nop
xchg
and
lcall
pop
daa
in
inc
adc
or
pop
add
int
jbe
inc
into
dec
popa
xor
fcoms
cmp
xchg
iret
push
mov
cli
xor
inc
fsts
js
dec
cli
and
das
mov
cmpsb
cmpsb
sbb
movsl
aam
or
push
dec
test
std
flds
xchg
divl
fs
push
push
or
fisttpll
pop
dec
jecxz
outsl
add
jne
mov
sahf
vmwrite
aam
xchg
int3
pop
sub
dec
rolb
push
adc
pop
xor
pop
cmp
push
test
jbe
call
and
jns
mov
push
sub
add
mov
call
and
andb
mov
xor
inc
fmuls
test
insb
xor
pop
mov
xlat
xor
or
or
dec
or
popa
idivb
pop
add
cmp
shll
adc
xor
int3
sbb
mov
adc
push
leave
adc
pop
fildl
push
sahf
mov
push
fimuls
std
xchg
stc
mov
jo
dec
or
mov
cltd
fmul
jae
test
shl
into
cmpsl
pop
push
std
mov
mov
testl
testl
inc
into
mull
and
jne
in
sub
lahf
push
jbe
sub
aas
jmp
or
or
jne
jno
jno
jle
mov
xor
inc
mov
xor
andb
fildll
inc
test
aas
and
cmpsl
push
daa
xchg
movsb
adc
cmp
push
adc
js
mov
sbb
jno
add
dec
jns
lret
push
int
mov
hlt
fmuls
cmp
ret
test
mov
aam
mov
mov
mov
stos
test
mov
add
stos
inc
bswap
mov
mov
inc
lahf
call
add
adc
icebp
cmp
stos
dec
push
loopne
divb
data16
and
push
sti
test
stos
cltd
or
lret
sub
cmp
pop
pop
pop
cmp
add
test
fs
insb
jl
or
iret
pop
lcall
lods
dec
push
and
jno
xchg
mov
dec
js
lds
insl
sarb
lods
stos
adc
out
hlt
out
aas
jg
cld
cmp
cmp
xchg
jmp
cmp
std
lcall
arpl
bound
loop
push
adc
das
fdivl
mov
pop
movsb
insl
pusha
outsb
mov
mov
shll
in
je
mov
mov
insl
mov
jno
mov
ds
inc
test
adc
inc
mov
arpl
hlt
into
pop
cltd
ret
insb
jb
sub
jle
stos
adc
jge
mov
test
jae
mov
pushf
add
ret
shll
xchg
cwtl
mov
fsubrs
push
add
mov
icebp
xchg
mov
repz
or
mov
loopne
inc
test
adc
inc
dec
aaa
sbb
out
dec
jns
stos
rolb
xor
inc
push
pushf
shll
pusha
or
aas
test
fisttpll
or
add
stc
inc
xchg
mov
clc
mov
add
dec
adc
add
mov
dec
cld
in
jg
mov
fwait
adc
push
sbb
testl
mov
or
and
imul
mov
loop
mov
enter
sub
inc
sahf
adc
cltd
jle
xor
sub
std
mov
lods
mov
cmp
sub
cwtl
subb
inc
cli
insl
movsl
xchg
push
test
jae
jno
mov
xchg
adc
daa
jmp
jl
jae
push
and
sbb
out
cmp
ror
xor
test
pop
mov
push
cmp
aad
shlb
mov
dec
int
stos
ret
into
fists
push
loopne
shrl
scas
pop
mov
mov
push
and
dec
arpl
push
int
sub
pop
push
ficompl
inc
jge
add
bound
loopne
das
test
cwtl
sbb
cmp
mov
in
mov
pop
push
adc
adc
ds
sub
dec
std
pop
dec
xchg
cld
cwtl
cmp
push
jp
and
insl
in
fdivrl
sarb
sahf
jns
push
mov
jb
adc
mov
xchg
stc
inc
test
ljmp
xor
mov
or
pextrw
push
pop
ret
cmp
add
jne
jge
cmp
ljmp
sbb
jmp
push
outsb
dec
push
sub
out
xchg
or
and
jmp
loopne
lahf
aad
xchg
cmpsb
je
lods
push
in
mov
adc
insl
adc
icebp
in
mov
lds
jecxz
cwtl
cmp
mov
xchg
daa
ja
mov
in
lret
gs
push
stos
xchg
loop
sbb
inc
insb
pop
repnz
repnz
mov
push
mov
loopne
xchg
mov
scas
dec
dec
cltd
fldl
jns
and
inc
pusha
shll
jnp
jp
addr16
call
mov
leave
sbb
cmp
and
xchg
loope
arpl
or
xor
push
jp
ds
outsb
bnd
repz
in
int3
test
stos
inc
cmpsl
xchg
ljmp
out
popa
lds
cmp
jl
cs
gs
cwtl
in
shlb
xchg
sbb
sub
push
and
push
mov
dec
xchg
sbb
test
rorl
pop
cwtl
mov
cmp
rorl
test
cltd
or
inc
rclb
dec
pop
jecxz
in
insb
mov
adc
movsb
dec
stos
js
cmp
and
jmp
ss
mov
std
lahf
xor
andl
sub
xor
mov
mov
sbb
jae
mov
fsubr
jns
adc
std
pop
inc
inc
pop
lea
dec
jnp
xchg
test
lea
cmc
push
sbb
ret
mov
int
inc
int3
cmp
in
cmpl
das
mov
ret
mov
bound
xchg
inc
fwait
lds
cmp
inc
stos
jo
jae
movsb
push
mov
pop
mov
fistpll
out
jmp
lahf
lret
data16
sub
push
sar
movsl
dec
and
xor
sbb
fwait
and
loope
call
or
fmuls
push
xchg
in
jne
mov
sub
vpaddd
jb
xor
sahf
mov
push
lock
adc
sbb
daa
js
fldl
lahf
jo
mov
into
and
sbb
dec
and
xchg
mov
push
mov
mov
xchg
sbb
pushf
hlt
cmp
pop
xchg
or
and
je
imul
jl
jmp
mov
push
xor
cmp
or
mov
dec
sub
mov
push
aas
out
test
pusha
or
sbbl
sub
dec
es
xor
outsb
xlat
int
push
clc
mov
cmpsb
mov
mov
lret
xchg
push
out
add
jns
add
popa
mov
js
pushf
mov
fincstp
jns
xlat
jae
rcrb
imul
jb
out
ja
inc
jns
xor
ret
mov
jo
jo
xor
pop
jb
xchg
pop
mov
stos
xor
fsts
and
enter
adc
aas
test
test
dec
push
push
inc
xor
jecxz
dec
divps
and
lret
sahf
js
mov
insl
jns
insl
xchg
and
pop
in
mov
push
push
push
mov
sub
fistps
call
cwtl
sub
xchg
pop
push
jne
dec
inc
cmp
je
cld
sub
frstor
xchg
jae
push
jecxz
sbb
or
inc
loop
xchg
aas
jecxz
imul
adc
xchg
dec
add
and
add
jb
mov
add
fdivrp
and
jp
clc
dec
xor
movl
pop
xor
or
pop
test
push
fisubs
cld
xor
mov
push
cmpsb
inc
test
sbb
fidivrs
rcl
test
pop
leave
jle
add
cmc
gs
xor
arpl
cli
test
mov
int
rorl
pop
push
fdivl
mov
lock
sbb
pop
and
in
adc
fcoms
jle
aas
scas
mov
loop
jl
adc
sub
sbb
mov
inc
call
push
shrb
jecxz
mov
lahf
adc
jbe
inc
add
xchg
mov
inc
add
das
repnz
lock
loop
push
mov
jmp
lret
xchg
movsl
inc
mov
ffreep
jp
jg
push
sub
or
mov
mov
addr16
dec
push
repnz
push
arpl
add
dec
stos
add
cwtl
cmp
jecxz
and
mov
loop
notl
lods
subb
fstl
cmp
mov
add
adc
xchg
lods
jl
in
push
cmp
loop
prefetch
movsb
nop
inc
movsb
jp
and
loope
lds
loopne
inc
cltd
jp
pmaxsw
xchg
shll
adc
call
mov
cwtl
shr
loop
cmc
aas
cwtl
popf
inc
inc
sub
imul
addr16
outsl
push
loope
es
movsb
rcrb
and
mov
icebp
cmpsl
icebp
lahf
pop
cmp
insl
arpl
push
in
or
or
push
cwtl
pop
or
popa
imul
pop
adc
filds
iret
dec
hlt
data16
jno
pop
std
out
mov
jecxz
ss
test
lods
or
mov
pop
mov
jp
mov
enter
mov
push
arpl
jmp
dec
jo
xchg
fidivl
sub
jo
xor
clc
add
rorl
jp
xchg
dec
push
mov
scas
in
pop
sub
ja
popf
ret
ljmp
xchg
push
mov
in
pop
dec
push
lret
ret
mov
jbe
stos
bound
cmp
sbb
aad
hlt
dec
jbe
cmp
push
mov
outsb
aam
xor
es
add
cmpsb
dec
jecxz
ret
outsl
sti
sbb
sub
cmp
inc
pop
nop
addr16
pushf
inc
arpl
jb
movsb
imul
mov
int
bound
out
xor
andl
in
mov
or
testb
mov
dec
movsb
out
mov
cmp
xor
jbe
cmp
aas
sbb
mov
bound
adc
sbb
fmul
jno
in
daa
jnp
test
mov
unpcklps
xchg
xchg
push
mov
xchg
pop
xchg
iret
add
or
add
in
push
sbb
in
or
cmpsl
push
push
xchg
clc
jnp
pushf
sbb
notb
push
xchg
xchg
pop
cli
sub
mov
jne
pop
pop
int3
dec
notb
or
sub
shr
push
out
lds
or
dec
shrb
jae
loope
js
jnp
mov
ljmp
add
jp
mov
pop
cli
inc
in
push
or
jns
xchg
lds
cmp
jno
pop
test
inc
in
sbb
in
pusha
lods
popa
jbe
dec
out
test
addr16
xor
mov
push
pop
rorb
arpl
sub
xchg
dec
add
sbb
popf
je
aam
ds
xchg
out
loop
push
addr16
cmp
adc
adc
idivl
adc
and
lods
inc
pop
and
lods
loop
xchg
pushf
push
rcl
jle
mov
jne
mov
push
sub
dec
or
lock
rorl
push
xchg
pop
addl
jmp
out
sub
dec
lea
test
fiadds
pop
adc
ret
mov
stos
subl
mov
adc
mov
dec
push
xor
push
or
lock
shlb
test
dec
push
inc
cmp
in
push
push
shlb
fcoml
pop
jecxz
inc
cmp
or
pop
jle
cltd
clc
mov
pop
sti
mov
xlat
cmpsl
out
push
bound
roll
test
in
rorl
push
push
mov
int
sbb
or
add
gs
andb
sub
les
icebp
je
shll
out
sub
popf
int
push
aad
pop
and
imul
call
sarl
sbb
insl
adc
gs
push
sub
inc
xchg
push
mov
out
cmpsb
outsb
je
mov
outsl
add
xor
cmp
out
lds
pop
into
lea
enter
ja
fisttpll
ficoms
jle
xorl
sbb
imull
mov
and
mov
mov
mov
jne
sbb
out
psubw
mov
or
adc
push
adc
clc
hlt
and
pop
dec
dec
lcall
xchg
and
mov
cmpl
pop
and
fmull
pusha
sbb
xor
pop
mov
rol
cli
fsubl
jb
imul
fidivrs
xchg
jnp
std
sbb
data16
out
cmc
add
repz
aam
imul
or
mov
xor
pop
loope
mov
sub
sub
or
sub
roll
in
iret
inc
hlt
es
enter
cmp
xchg
fistps
fcmovb
repz
inc
scas
icebp
jecxz
mov
test
imul
jne
mov
fiaddl
jbe
and
jbe
outsb
int3
in
sbb
cmpsb
jne
cs
xor
sub
fsts
in
mov
hlt
loop
cmpb
mov
mov
cltd
in
pop
and
sub
mov
pushf
add
mov
inc
aam
xchg
mov
jmp
cld
dec
movsb
pop
leave
rorb
add
sub
cmpb
scas
rcl
inc
int3
mov
lods
adc
xor
fcompl
sbb
imul
inc
mov
aam
pop
ret
and
xchg
jne
in
mov
fdivs
inc
or
xchg
jbe
jbe
mov
push
cmpl
js
filds
mov
sub
leave
scas
mov
mov
cld
push
and
cs
pop
rcrl
lods
scas
mov
inc
jb
xchg
aas
mov
mov
subb
cltd
adc
aad
adc
or
jl
fildll
lret
push
adc
sarb
leave
xor
push
jne
cmp
jb
cs
adcl
icebp
lods
jecxz
xor
fldenv
pop
hlt
pop
jle
rcrb
int
inc
fdivp
inc
adc
outsw
adc
jnp
aad
daa
stos
je
and
xchg
xchg
push
clc
hlt
rcrl
or
push
xor
rclb
add
outsl
push
stos
push
and
outsb
jge
scas
cmpb
jle
je
scas
push
dec
lea
dec
into
mov
repnz
out
movsb
mov
lret
hlt
jge
test
and
cwtl
aad
inc
cld
inc
icebp
iret
mov
mov
add
xor
mov
jbe
lods
ss
dec
dec
insb
sti
sub
jae
popa
mov
push
mov
mov
sub
out
xchg
push
adc
sbb
in
xlat
je
and
push
push
test
mov
mov
xchg
add
push
roll
push
test
mov
mov
xor
xor
lret
mov
ds
pop
and
mov
lds
dec
cmp
xor
mov
sub
and
sub
pop
jae
push
pop
pop
icebp
repz
add
mov
enter
add
adc
push
push
pop
dec
not
lds
sub
popf
xor
xchg
mov
mov
inc
dec
jp
imul
fimuls
or
push
test
into
jl
add
xchg
mov
sub
cli
mov
repz
sahf
add
clc
jmp
sub
pop
arpl
inc
int3
and
divb
daa
jno
cmpl
sarb
or
mov
repnz
push
int
mov
data16
xchg
mov
pop
into
xor
aam
ret
movsl
movsl
fidivrl
xchg
push
into
andl
mov
out
outsb
mov
add
shlb
insb
repnz
scas
insl
mov
movsl
fnsave
push
jae
mov
repz
inc
insb
push
lds
add
mov
fwait
lods
xor
fstps
xchg
ja
ret
icebp
add
fdivs
les
mov
movsl
bound
or
lret
aas
inc
push
push
ret
in
aas
push
js
dec
mov
xorb
std
ret
es
add
int
add
ss
add
test
es
mov
sbb
fcompl
js
or
mov
or
mov
sbb
in
inc
notl
loopne
and
mov
mov
jns
xchg
ret
loopne
or
push
sub
fucomi
test
iret
xchg
xchg
mov
call
pop
scas
cmp
jae
pushf
cmpsb
sbb
add
pop
ret
mov
inc
ret
adc
stos
adc
clc
jo
adc
in
mov
sbb
int
ds
inc
and
mov
gs
fucomi
icebp
adc
and
mov
decl
je
addb
notl
into
xchg
or
fs
and
in
add
mov
sbb
cltd
cmp
mov
clc
pop
add
push
push
in
int3
repnz
es
mov
cwtl
add
jle
jmp
jmp
mov
or
xchg
xchg
repz
dec
je
cltd
lcall
pop
jne
setae
iret
aad
mov
add
lret
cwtl
pop
sbb
loop
hlt
in
out
jae
and
mov
sub
faddl
sub
inc
test
push
pop
or
jmp
xchg
pop
and
ja
dec
insl
aas
and
xchg
inc
int3
ret
out
dec
jb
mov
sbb
pop
pusha
cmpsb
dec
popa
ficomps
dec
shrl
xchg
mov
daa
xchg
jnp
cmpsb
inc
jle
das
andl
cmp
xchg
pop
dec
jbe
pop
int
mov
idivb
adc
mov
sub
leave
jp
or
fwait
mov
adc
mov
flds
lcall
lds
setp
or
add
mov
sub
xor
mov
daa
lock
ja
lret
js
and
mov
dec
mov
cmp
and
and
stc
push
inc
adc
leave
or
and
mov
imul
loopne
bound
gs
push
ljmp
jbe
shll
out
push
out
xor
cmp
mov
dec
and
push
mov
outsl
dec
movb
arpl
lret
xor
pop
push
pop
mov
outsl
jg
jno
and
push
push
pop
fistpl
clc
cmp
outsl
out
out
fmul
cld
fisttpll
push
dec
push
push
jl
dec
cmp
push
adc
jbe
cld
bound
inc
adc
jle
leave
rcl
ret
mov
mov
jno
pusha
aaa
add
inc
pop
and
and
fwait
hlt
stos
dec
mov
test
add
ja
jnp
mov
es
pop
js
cwtl
push
mov
test
mov
cmp
cmpsl
xor
push
ss
das
jns
imul
cmp
sbb
or
cmpsb
inc
test
mov
push
popa
scas
jle
add
into
mov
push
mov
outsb
repnz
mov
aaa
fsubl
outsb
cmpsl
out
inc
rorb
aam
outsl
aad
jl
test
stos
jp
cmp
jae
inc
test
aaa
mov
cmc
sbb
andl
mov
adc
int
push
stos
into
test
cmp
sbb
jp
inc
push
test
das
pop
pop
pushf
lret
jae
push
aam
fdivp
lods
xchg
xorl
stos
mov
xchg
addr16
cmpsl
repz
xchg
inc
and
loop
mov
sbb
fs
imul
add
insl
and
and
frstor
jo
jl
mov
jo
mov
cld
addr16
clc
cmp
orl
aas
arpl
jge
cli
cmpsb
inc
lds
inc
das
clc
sbb
mov
xor
pop
shl
jbe
push
gs
rorl
xlat
push
jmp
out
mov
std
mov
test
jmp
jnp
outsb
cmpsb
frstor
push
inc
and
pop
mov
ret
mov
sahf
pop
int3
subl
sub
es
mov
xchg
test
stc
data16
dec
dec
or
adc
or
pusha
dec
xchg
dec
mulb
mov
sub
add
repnz
and
mov
fsubrs
mov
enter
aad
inc
ret
mov
xor
leave
mov
ds
les
jge
inc
out
into
push
lret
loop
fbstp
mov
push
push
inc
lcall
mov
inc
push
divb
test
call
icebp
add
add
sbb
jne
adc
xlat
shll
loop
fmull
adc
mov
pop
mov
stos
lret
gs
mov
in
jae
jmp
mov
insb
pop
das
pop
popf
xchg
jo
xchg
and
inc
into
adc
xchg
xor
mov
xchg
les
push
aaa
lds
mov
daa
cmc
inc
jo
stc
sbb
imul
scas
xchg
jne,pt
push
cmc
lret
jp
aad
dec
test
mov
xchg
pop
cltd
in
jnp
sbb
xchg
pop
shrb
flds
daa
or
sub
adc
xchg
jae
pop
fiadds
or
xchg
fimull
lret
lret
int3
push
push
inc
pop
in
aaa
sbb
or
pushl
sahf
imul
leave
pop
xchg
xor
mov
lret
dec
and
popa
inc
xor
and
sbb
test
leave
out
out
push
push
pusha
xor
adc
out
cs
andl
add
mov
rolb
inc
bound
idivl
and
mov
insl
sbbl
div
and
pop
ja
mov
or
lret
std
push
mov
sub
pushf
mov
outsl
pushf
int
mov
jae
lea
mov
cmp
pop
scas
jo
nop
mov
push
rcrl
pusha
pop
jg
sahf
xchg
push
mov
inc
loope
addb
imul
push
adcl
fbld
xchg
or
mov
push
test
fwait
ret
mov
sbb
push
loope
test
jp
fdivs
adc
cld
or
js
daa
in
jb
add
fdivr
xchg
xchg
mov
je
test
or
pop
les
mov
imul
ret
sub
jnp
dec
mov
push
xor
bound
ret
sbbb
fsubp
pop
or
fwait
ret
out
scas
inc
scas
ss
fldcw
mov
sub
push
and
pop
call
iret
movsl
xorl
mov
into
jp
add
bound
int3
push
mov
outsl
insb
push
add
add
movsb
and
cwtl
int
push
iret
and
rcll
xchg
into
into
or
sub
ds
push
pop
push
insb
cltd
jl
imull
mov
ss
imul
xor
sbb
aam
int
mov
inc
orb
shlb
mov
notb
imul
sbb
js
sub
push
push
jb
pop
aas
lret
sti
push
sub
mov
adcb
push
mov
out
pop
data16
mov
mov
adc
dec
mov
dec
add
adc
add
loop
cmp
hlt
xor
xchg
mov
and
xor
dec
aas
push
mulb
sbb
fidivrs
andb
stos
xchg
rclb
cli
xchg
pop
adc
fldenv
jp
test
inc
pop
push
popf
fisubrs
ds
pushl
icebp
or
adc
aas
scas
pop
test
bound
sub
sub
sub
pop
jg
mov
sub
bound
jo
mov
das
cmp
dec
lock
cld
sti
test
dec
mov
in
xchg
push
shrl
and
fwait
sub
mov
and
cld
xor
inc
jg
pcmpgtw
push
loopnew
xor
dec
and
jo
xchg
pop
popa
xor
in
das
lahf
fnstsw
jmp
shl
adc
rclb
int3
mov
sbb
xor
testb
and
mov
xor
out
mov
arpl
dec
cmc
mov
sub
int3
arpl
or
sbb
pop
jno
imul
pop
outsb
pop
jg
mov
imul
pop
rolb
jb
inc
or
push
je
mov
fdivl
out
mov
cltd
addr16
ret
insl
jg
out
cmp
in
or
add
test
xor
dec
imul
inc
dec
imul
in
pop
jp
jl
mov
jecxz
lret
jbe
jbe
cld
pop
pop
mov
jle
fadds
notb
incl
xlat
gs
jp
push
mov
or
and
cmpl
loopne
test
pop
xor
add
adc
xor
xor
xor
jmp
pop
push
mov
aam
imul
cmp
jmp
bound
movsl
xchg
inc
je
mov
insl
es
loop
mov
dec
fadds
mov
hlt
push
jne
add
sarl
ljmp
cmp
mov
jecxz
arpl
inc
dec
daa
cltd
xchg
cmpl
pop
scas
dec
arpl
stos
das
scas
shld
jnp
or
dec
dec
inc
or
mov
or
push
ret
pop
mov
add
mov
sahf
loop
loope
movsl
or
hlt
lock
and
movsl
jne
or
aaa
clc
popa
popa
and
jp
adc
gs
pushf
cmp
add
cmp
imul
inc
or
cmp
xchg
push
decb
adc
jmp
mov
cmp
mov
cs
xchg
loopne
dec
dec
xorl
outsb
jge
xchg
xor
addl
mov
push
inc
cli
sar
and
lods
outsb
mov
jle
cwtl
and
and
add
aad
test
jg
lds
and
xor
sub
pop
mov
xchg
icebp
icebp
in
xor
les
fmull
test
ds
xor
out
push
jmp
sub
sbb
push
xor
shll
into
out
cltd
rclb
sbb
in
ljmp
add
inc
nop
pop
cli
arpl
xchg
pop
scas
mov
or
and
scas
pop
into
pop
cmp
test
stos
or
dec
cmp
add
add
sub
sub
inc
popa
ja
lock
push
out
push
and
idivb
sbb
mov
ljmp
push
loop
aad
sub
test
xchg
push
test
sbb
das
mov
clc
inc
sub
sub
cmpsl
outsb
pop
shlb
mov
mov
out
sbb
out
fs
dec
sub
xor
mov
inc
loope
int3
fnsave
popa
mov
mov
jmp
adc
aaa
scas
stc
popa
lcall
test
jmp
push
adc
stc
jl
inc
movswl
je
cmp
mov
dec
jge
fdivl
mov
imul
inc
sti
jo
jmp
sbb
push
and
rolb
imul
push
out
xchg
mov
jg
scas
lock
adc
enter
and
sub
clc
jp
mov
xor
push
inc
sbb
fdivr
into
push
dec
inc
insl
cmpsl
and
stos
leave
loop
ljmp
push
fsubr
sti
and
pop
data16
in
push
and
xor
movsb
stc
inc
aas
lret
add
rolb
enter
out
imul
nop
outsb
adc
adc
ds
insb
pop
push
mov
jmp
les
mov
mov
mov
xchg
jge
mov
loope
inc
shll
mov
push
or
dec
inc
ss
sbb
ja
jb
dec
xor
stos
pop
dec
pop
hlt
cli
scas
movl
pop
lahf
pop
adc
dec
mov
aas
lret
or
lcall
in
stos
cmp
add
fisttps
sub
enter
ret
push
sub
or
movsb
ret
inc
sbb
jae
xchg
loope
mov
xor
mov
es
mov
sti
mov
xor
loopne
popa
xsha1
cmpsb
mov
push
cmp
inc
mov
add
jnp
sbb
jl
jp
pop
ss
sti
lcall
xor
call
mov
adc
mov
pushf
fdivr
nop
fbld
repz
adc
loop
xchg
iret
sbb
cmp
cld
adc
or
lods
jns
jmp
ljmp
lock
lret
and
repz
and
and
sbb
adc
xor
ret
dec
jle
mov
sbb
out
or
loope
xchg
mov
mov
aaa
out
mov
jno
xchg
shr
jmp
imul
adc
or
lock
aaa
sbb
addr16
rol
out
stos
mov
nop
cmp
jo
in
cmpsl
jecxz
fdivrl
cmp
mov
cmc
pop
scas
mov
stc
push
jne
xor
bsr
je
and
and
das
or
jp
adc
mov
sbb
aas
or
add
xor
aad
push
mov
lcall
pop
ja
pop
out
mov
xchg
lcall
or
xchg
dec
jne
mov
jb
cmpsb
or
cmp
jg
and
or
push
cwtl
lods
and
jle
bound
loop
mov
mov
or
jns
push
lods
mov
sbb
sub
push
dec
sub
or
mov
or
cs
das
and
xchg
sbb
mov
jbe
test
pop
sub
fmull
inc
push
and
in
mov
sbb
adc
testl
or
lret
loop
and
sub
pop
adc
sbb
pushf
cmpsb
xchg
sarl
jo
stos
push
mov
pop
in
das
mov
lods
pop
iret
lods
divb
xchg
cmp
ljmp
dec
cli
lods
clc
cwtl
mov
push
adc
mov
adc
popf
and
push
fistps
rolb
mov
jo
movsb
jl
cmp
push
scas
pop
jg
in
cmpsb
orl
adc
outsl
mov
push
idiv
xchg
ficoms
aam
mov
cmp
cmp
cmpsl
mov
adc
inc
push
xor
push
jge
shrl
lea
out
or
inc
addr16
xor
push
pop
cmp
scas
outsb
jae
or
cmp
mov
daa
stc
xchg
icebp
nop
sub
lds
shrl
mov
sbb
rcll
in
icebp
dec
push
outsl
jae
jmp
xlat
pusha
test
movsl
pop
adc
loopne
mov
adc
arpl
cld
std
xor
jnp
cli
aaa
js
icebp
dec
test
xor
hlt
cmc
or
out
sti
into
inc
add
lahf
xor
inc
pop
xor
ret
push
ss
xor
mov
pop
jp
or
iret
jns
pop
pop
xchg
xchg
xor
int
dec
mov
sbb
pop
adc
sub
fsubl
push
sbb
push
ret
imul
fistpll
cmpsb
call
xor
shrd
adc
cmp
xor
lods
sti
orb
push
je
mov
sub
addb
dec
pop
cltd
ret
and
lret
sbb
lcall
xor
cmp
lea
cmc
clc
pop
sub
cmp
mov
sbb
fldl
in
adc
xor
xchg
jo
adc
enter
mov
xchg
cmpsb
push
popa
arpl
and
sbb
cli
sub
jae
sbbb
or
push
leave
jns
out
movntq
lahf
mov
or
fstpl
and
fdivs
add
ss
adc
sahf
enter
jecxz
lahf
pushf
jbe
cmpsl
hlt
adc
imul
xchg
test
pop
arpl
shlb
fidivs
sbb
cmp
imul
es
fsubl
in
ds
dec
xlat
xchg
test
aad
fisubl
jmp
dec
push
out
in
and
fisttps
movsl
outsb
bound
add
in
pop
pop
stc
ffreep
movsb
xor
xchg
lods
lds
jl
xchg
pop
mov
push
dec
sarl
xchg
sub
mov
outsl
pop
addr16
lods
cmp
nop
das
rcrl
test
aas
mov
or
cmp
mov
push
add
js
dec
ret
sub
and
sti
add
jbe
cmp
das
test
and
xor
movsb
inc
or
xlat
mov
adc
bound
jl
mov
dec
out
xor
jg
aam
rcrb
xor
xchg
mov
cld
jg
jns
sub
adc
addr16
adc
icebp
js
or
mov
push
ret
cmp
cmp
outsl
fistl
jge
enter
ljmp
test
jp
dec
in
imul
dec
fnstsw
push
cwtl
andl
inc
fwait
xlat
or
pop
and
ret
push
sbb
adc
xor
inc
fdivl
outsb
xchg
add
push
dec
enter
jge
popa
inc
imul
ds
jmp
scas
mov
cmp
push
inc
mov
js
in
mov
and
nop
std
bound
out
xchg
dec
push
jl
out
xchg
jmp
lret
imul
jae
imul
pop
pusha
jg
into
frndint
mov
or
mov
clc
ljmp
jge
add
push
add
rcl
bnd
loopne
xchg
mov
add
fnstenv
nop
leave
test
xchg
jbe,pt
pop
call
movsb
sti
xchg
add
out
xor
inc
pop
mov
loopne
lahf
jmp
dec
and
frstor
icebp
or
movsb
dec
dec
jmp
dec
nop
add
mov
jb
sbb
sub
jge
pop
leave
dec
xor
stc
push
in
sub
jge
inc
leave
stc
movsl
negb
addr16
in
push
sbb
leave
test
jmp
fdivs
loop
sub
idivb
inc
in
pop
shll
ret
mov
xchg
stos
adc
cmc
jb
int
lahf
cwtl
and
mov
jge
stos
into
push
arpl
test
pop
pop
xor
test
fs
push
jbe
push
sub
mov
push
stos
sbb
mov
insl
lods
mov
enter
enter
jns
sub
test
fsqrt
outsl
add
jecxz
mov
mov
bnd
pop
cmp
test
mov
fidivrs
push
lahf
enter
and
dec
dec
mov
jmp
dec
cmp
rcl
aam
jno
mov
sarl
inc
jge
jge
lahf
mov
aaa
out
push
fisubl
jno
sbb
inc
daa
jecxz
xchg
dec
push
gs
sub
loop
insl
adc
imul
sub
jge
adc
dec
pop
ret
pop
gs
jb
dec
jge
gs
les
lods
push
or
scas
adc
xorl
shll
and
sub
push
das
dec
sbb
sub
push
jmp
cmp
mov
dec
sub
xchg
lret
cmovne
sbb
dec
mov
aaa
mov
cmpsb
int3
cmp
and
jg
push
test
stos
in
mov
adc
jl
adc
mov
pushf
jmp
fbld
loope
out
jns
fnstenv
mov
out
mov
xor
pop
sub
pop
nop
mov
fnstenv
mov
or
cmp
jl
add
sub
aas
mov
lods
xor
fidivs
sub
push
aam
fcmovu
lret
xchg
out
shlb
ds
sub
std
call
sub
push
loop
mov
bnd
movsl
push
xchg
movsl
daa
pop
mov
adcb
jmp
out
inc
imul
push
xorb
jmp
icebp
jmp
mov
mov
ds
inc
sub
jnp
add
xor
mov
mov
dec
pop
aam
cli
rcl
sti
iret
add
pop
sbb
ljmp
lea
orb
xchg
inc
xor
fwait
cmp
sub
xorl
fwait
mov
sbb
divb
aad
push
pushf
add
cmp
hlt
cltd
fidivl
pop
mov
loope
add
sub
mov
mov
jns
fcom
iret
inc
mov
pop
ror
adc
loopne
adc
xchg
in
rolb
in
ds
pop
inc
fcoms
leave
icebp
push
jnp
mov
xchg
pop
loop
dec
enter
jne
enter
cld
dec
xchg
std
push
ret
loopne
shl
icebp
test
mov
inc
jbe
mov
imul
jbe
fs
cld
push
sub
xchg
ret
scas
add
adc
fnstsw
aam
jecxz
das
inc
ret
ss
arpl
cmpsl
icebp
mov
mov
xor
jnp
repnz
subb
cs
out
sbb
and
xchg
add
shlb
adc
fwait
sbb
rorb
mov
or
hlt
std
mov
jns
notb
ret
ja
cmp
add
ucomiss
faddp
xor
fsubp
pop
jns
sti
xchg
out
sbbl
pusha
in
add
int
pop
insb
pop
dec
stc
leave
lods
cmc
cltd
cmpsl
xchg
sbb
lds
sub
insb
mov
lret
rorb
data16
push
adc
cmp
test
lds
pop
xchg
lcall
and
ret
inc
nop
ret
cld
push
xchg
mov
sub
imul
mov
pop
pop
lods
mov
in
cmp
aas
mov
inc
in
int3
popa
daa
scas
jns
inc
aaa
or
adc
loop
xchg
pop
lret
pop
sub
adc
lock
inc
sbb
dec
stos
fs
lds
adc
fisttps
mov
and
loope
push
call
enter
push
cltd
out
mov
mov
add
push
sub
aas
test
js
mov
jmp
xlat
adc
pop
jp
xor
inc
jmp
loope
mov
mov
xchg
jge
or
into
adc
fiadds
mov
lds
stc
cli
loopne
ja
addb
xchg
out
rcrb
fnstenv
addb
addr16
addr16
lods
xchg
mov
iret
aas
pop
push
push
push
pop
jb
gs
dec
push
adc
arpl
sub
daa
and
imul
pop
aam
test
mov
mov
aas
nop
pusha
out
std
xor
loopne
shrl
pop
int3
push
mov
fldl
sbb
sbb
sbb
ja
mov
clc
lea
cmp
cmp
xor
subl
lock
loop
pop
pusha
jecxz
push
popa
call
dec
js
adc
lds
adc
cmpsb
mov
and
lods
mov
cmpsl
fidivrl
xchg
and
xor
jp
movsb
xorl
dec
inc
push
mov
and
cmpl
add
add
cmpsl
xor
fistl
pop
or
jbe
and
test
push
shr
add
add
pop
lret
ss
inc
push
dec
xchg
in
xor
add
loope
pop
aas
xchg
or
sbb
or
out
aaa
out
movsl
cmpsl
iret
adc
mov
mov
fs
aaa
repnz
sahf
mov
call
test
lret
test
mov
sub
fisttps
push
stos
xchg
loop
stos
int
mov
mov
repz
add
std
cwtl
mov
push
sub
cmp
xchg
adcl
fs
les
jecxz
mov
and
add
jmp
out
in
cmpb
rorb
outsl
dec
push
in
outsl
cmp
mov
lret
mov
sbb
pop
xchg
in
mov
add
cmp
aas
add
add
jecxz
inc
pusha
mov
dec
jle
es
mov
lcall
testb
in
xor
ja
inc
mov
mov
aad
gs
cli
out
xlat
jo
dec
inc
add
lahf
scas
xchg
push
or
and
mov
push
es
xchg
dec
push
dec
cmp
test
in
arpl
stc
ss
push
push
shrb
fcomip
mov
pop
cmc
ja
inc
mov
data16
in
cmp
cmp
lcall
add
dec
mov
mov
sbb
scas
in
aad
data16
scas
add
inc
addr16
or
rcl
mov
jl
inc
fistl
sbb
into
cld
xchg
js
adc
jns
ret
mov
in
add
pop
mov
ret
daa
push
pop
lods
inc
inc
outsb
inc
es
fwait
aas
jge
nop
and
jecxz
icebp
xor
movl
scas
inc
add
xchg
xchg
icebp
fdivp
or
arpl
jge
jge
cld
sub
mov
popa
cmp
sar
lahf
dec
mov
or
push
loopne
js
scas
or
iret
out
xchg
adc
lea
pusha
jbe
pop
xchg
fwait
or
aaa
mov
jnp
gs
repz
sbb
mov
into
mov
xrelease
jp
sbb
fsubr
and
arpl
adc
leave
add
and
les
call
push
ljmp
xchg
dec
mov
sbb
adc
sbb
sub
push
push
stc
cmp
xchg
lea
add
jns
divl
mov
bound
lods
mov
mov
pop
movsb
popf
jae
mov
test
and
aam
lock
cli
adc
aaa
and
fcompl
xchg
lahf
pop
push
sqrtps
xor
push
or
pop
jbe
std
nop
test
ljmp
push
lods
push
or
aas
repnz
jnp
bound
push
iret
sbb
dec
add
or
sub
lock
mov
call
das
pop
or
aam
mov
inc
jle
or
in
out
cmpl
mov
rcll
mov
inc
push
jmp
mov
stc
sub
shrl
jns
dec
mov
mov
cmp
cmc
mov
sub
cmp
mov
call
roll
sub
cmp
dec
and
out
or
lret
jno
inc
lods
popf
inc
popa
inc
ss
in
je
xor
mov
push
pop
enter
mov
and
addl
inc
out
mov
imul
movsl
rol
sbb
and
hlt
mov
mov
push
mov
sub
inc
mov
mov
decb
out
rcrb
in
xchg
pop
lret
push
insl
xchg
cmp
xor
inc
aam
push
dec
stc
dec
out
std
insb
and
mov
push
and
pop
pop
pop
lret
mov
movsl
mov
test
mov
fsubrs
adc
aas
sub
sbb
inc
divl
mov
dec
pushf
lods
shrl
mov
adcb
hlt
scas
test
mov
adc
shl
repz
inc
cld
sub
jo
adc
bsf
and
and
movsb
and
repnz
inc
pop
jge
fbld
nop
scas
push
mov
into
dec
or
outsb
sub
into
psrld
out
lahf
fs
aaa
and
push
add
mov
pop
dec
mov
dec
enter
gs
adcl
xor
stc
scas
cltd
inc
cmp
icebp
gs
hlt
scas
ja
cmp
lds
dec
sub
push
cli
aaa
addr16
cmp
inc
pop
imul
insb
cmp
test
frstor
pop
lcall
cmc
aaa
cmp
adcl
call
adc
bound
test
aas
subb
lea
pop
addr16
loopne
sbb
into
in
imul
mov
ja
cmpsl
mov
mov
call
mov
mov
adc
test
jge
hlt
out
nop
adc
and
jge
and
insl
loop
sub
aaa
sub
or
test
mov
hlt
loope
gs
push
sub
inc
mov
xlat
jmp
xor
sub
enter
fsubr
rcrb
adc
test
ret
adc
jne
mov
jae
test
mov
lds
enter
int
je
test
aam
pushf
lock
xchg
xorl
push
jae
out
jnp
in
enter
xchg
sarl
lret
dec
lods
insl
lahf
fs
out
movsl
jno
and
push
nop
pop
sub
cmpsb
mov
insl
sbb
cmpb
add
add
shll
es
std
pop
xor
adc
cmpsb
out
movsb
or
cmpsb
fisttpl
lods
pop
pop
les
out
out
hlt
push
cmpsl
call
nop
jno
aad
fisubrl
cmpsb
ds
xor
cmc
adc
cli
cmp
dec
or
jns
mov
and
test
sbb
cld
in
cmpsb
pusha
push
jmp
push
lods
xorb
std
imul
aad
add
push
lods
cld
insl
xchg
hlt
cmp
popa
sub
mov
enter
mov
sub
icebp
aaa
into
pushf
mov
and
mov
mov
sti
push
lret
ja
sarl
add
cmp
stos
cmpsb
and
subl
mov
lods
sub
pop
mov
test
push
adc
xor
pop
lock
push
sub
pop
popf
in
imul
pusha
mov
insl
ret
add
cmp
test
or
xchg
cli
pop
cmpsb
mov
mov
addl
inc
push
test
loop
mov
or
and
fcmove
incl
lods
aam
je
and
lea
std
ror
inc
sbb
xor
xor
add
sbb
pushf
or
mov
hlt
pop
outsb
adc
push
mov
dec
out
and
jae
hlt
or
in
mov
sub
mov
hlt
push
xchg
or
adc
cmovnp
jae
outsl
ds
orb
js
mov
mov
xchg
fbld
inc
sbb
xor
out
jg
std
xor
outsl
imul
insl
frstor
adc
and
jns
negb
mov
pop
xor
out
fnstsw
xor
fcomps
mov
mov
xor
ret
cmpsl
adc
and
inc
aas
cli
into
push
dec
outsb
out
int
outsb
mov
shrl
sub
xchg
cs
pushf
sub
cltd
ficompl
je
daa
js
scas
arpl
icebp
insl
and
sbb
xlat
mov
pop
jp
jno
in
push
add
mov
out
std
loop
pop
dec
sbb
data16
lock
lcall
lcall
stc
dec
andl
out
ret
xchg
dec
sub
xchg
inc
loope
push
and
jle
cmpsl
icebp
in
jns
lahf
jo
or
or
mov
sub
data16
xor
jecxz
push
outsl
mov
cmc
pop
daa
cmp
test
jo
add
test
mov
mov
mov
insl
inc
push
push
dec
mov
pusha
into
in
sub
jno
mov
lds
mov
mov
cmc
and
jbe
push
mov
sahf
sbb
xor
push
xor
div
jmp
repz
push
fldcw
xchg
fistps
es
test
lahf
push
xchg
js
push
or
divl
adcb
loope
jge
mov
or
popf
mov
xlat
fwait
xor
out
add
push
ds
xlat
scas
jle
xor
adc
test
mov
aam
cld
xchg
inc
or
dec
cmp
sub
test
pop
nop
call
cmp
ss
jl
mov
and
xor
sub
adc
push
mov
add
bswap
outsb
jmp
xor
xlat
cmp
fwait
loopne
mov
icebp
dec
cmp
fistps
add
add
das
fsubrl
sbb
repnz
or
popf
mov
push
jns
add
lods
xchg
dec
into
insb
lock
scas
movsl
or
je
cld
addb
cli
fs
mov
jmp
cmp
sbbl
adcl
add
cmp
sbb
mov
popa
rorl
sti
inc
adc
mov
sbb
aad
das
std
popa
pop
or
cmc
sbb
or
lret
sub
xor
clc
int
cltd
sti
jg
leave
test
dec
cwtl
pop
add
cli
xchg
sbb
pop
cmp
add
movsl
mov
dec
cmp
dec
and
dec
dec
mov
fcmovnu
adc
inc
add
sbb
aaa
arpl
ds
jnp
outsl
aaa
xchg
std
cs
jno
mov
pop
and
es
outsl
inc
cli
clc
mov
push
outsl
and
add
scas
roll
pop
mov
push
cli
pop
xchg
in
rcrb
fwait
movsl
sbb
jmp
push
add
cwtl
aad
sub
loopne
mov
and
dec
add
lods
rclb
xor
adc
imulb
pop
fldl
mov
jp
insb
jnp
stc
outsb
dec
and
and
and
out
jmp
call
sub
xchg
sub
add
scas
sbb
cs
mov
adc
dec
out
lods
xchg
mov
or
sub
faddl
sub
fwait
lock
mov
xor
xor
mov
test
jp
ds
jecxz
jecxz
ja
xchg
jmp
cmp
and
fmuls
or
sub
mov
popf
int3
faddl
cs
push
inc
push
sar
adc
sbb
add
sbb
scas
loope
cmp
xchg
lds
jge
pop
ja
cwtl
add
adc
ds
and
std
sahf
or
pop
cwtl
movsb
mov
and
call
xor
fidivrl
stos
stc
push
pop
pop
push
les
xchg
leave
add
jnp
mov
push
mov
adc
lods
insl
sub
movsl
dec
jmp
dec
in
xchg
push
repnz
pop
je
movsl
cld
into
stos
gs
jmp
dec
sub
orl
add
pop
ja
clc
pop
mov
mov
das
and
sbb
xchg
push
out
inc
mov
xor
cli
scas
mov
push
js
aas
daa
fnstcw
dec
in
push
and
jecxz
mov
hlt
movsb
dec
dec
stos
mov
bound
daa
lods
fidivrs
sbb
dec
sub
cs
xor
mov
mov
sbb
std
xor
mov
push
dec
fildll
test
inc
mov
call
or
adc
xchg
fisubrl
sahf
jnp
jno
xor
in
outsl
or
adc
and
fisttps
dec
ret
and
mov
icebp
ss
and
outsl
fcoms
push
out
loop
cmp
repz
cmpl
cld
add
das
shl
mov
mov
cmpsb
mov
pop
aad
sbb
lahf
mov
repz
test
loopne
fisttpl
xor
adc
enter
pop
es
xchg
cli
pop
mov
adcl
adc
cmp
aad
sbb
shl
mov
roll
test
mov
arpl
and
out
push
cmp
stos
mov
insl
jp
stos
pop
pop
lret
ficomps
sbb
addb
push
sbb
jb
insl
rcrl
and
andb
addr16
fsubl
pop
or
ret
je
aaa
mov
adc
aam
movsb
in
and
pop
mov
out
sbb
jb
mov
and
je
mov
jb
sbb
fsub
jae
mov
flds
pushf
out
add
pop
cmpl
cmc
jns
and
iret
sbb
push
pushf
frstor
imul
pop
cmp
push
iret
lret
hlt
adc
stos
mov
mov
jmp
test
inc
cwtl
mov
arpl
outsb
lock
lods
test
jmp
push
ret
xchg
jle
aaa
insb
mov
insb
xchg
mov
cmp
cwtl
ret
dec
push
jmp
mov
cld
add
repnz
ss
inc
jp
pop
jbe
sahf
shll
jae
jl
dec
sub
das
xchg
aaa
push
or
sub
in
xchg
mov
aad
cmpsl
xlat
ffreep
jg
push
mov
jecxz
adc
mov
lea
pop
dec
ffreep
stos
inc
je
out
dec
cmp
mov
in
jno
mov
fdivrl
je
push
jbe
cmp
int
push
pop
fdivs
pop
mov
in
push
jmp
enter
pop
jnp
and
fbstp
mov
imull
mov
lock
push
fcoms
jl
mov
loop
outsl
mov
pop
cmp
in
scas
adc
popf
or
fcomp
dec
das
icebp
out
xorb
filds
dec
fmull
mov
push
push
mov
movsb
cli
jb
insb
rolb
add
cmp
enter
mov
sub
sub
fbstp
repz
sub
loopne
rolb
sub
loopne
push
jbe
jl
addr16
mov
adcl
pop
cmpb
pop
sub
fadd
sub
inc
dec
in
paddusw
test
sub
pop
addl
mov
mov
mov
and
int3
aaa
int
pop
cli
pop
fdivrp
insl
push
loopne
inc
insb
mov
idivl
mov
arpl
iret
pop
mov
mov
loope
xor
repz
stos
sbb
idivl
inc
insb
or
aaa
mov
in
xor
xchg
in
push
or
js
xchg
mov
inc
and
mov
sub
sub
int3
mov
es
xchg
xchg
mov
mov
cmc
divb
adc
mov
popf
dec
enter
mov
movsb
add
ljmp
mov
sbb
cmp
out
or
jbe
inc
loope
gs
or
sbb
jecxz
jmp
ret
popf
add
fs
mov
loopne
movsb
pusha
inc
sub
dec
mov
mov
xchg
or
and
sbb
iret
mov
test
mov
ficomps
cmpsl
shll
mov
add
and
mov
push
test
repnz
lock
push
push
sbb
insl
jge
and
cwtl
mov
movsl
pop
push
daa
push
fstl
lods
mov
rcrl
xchg
sub
ds
stos
test
repnz
shll
and
adcb
jnp
out
cli
jb
into
in
pop
ficomps
push
push
lcall
dec
bnd
popf
xchg
inc
shl
mov
test
nop
and
rcll
jp
rcl
addr16
push
mov
and
mov
out
push
outsb
sbb
sbb
push
movb
pop
int3
mov
mov
push
pop
ret
icebp
cmpb
icebp
lret
mov
inc
cmc
sbb
and
hlt
lahf
movsb
test
aaa
out
cli
jb
int3
out
or
hlt
push
add
or
mov
outsb
jge
mov
pushf
adc
xchg
ds
inc
mov
pop
jmp
dec
xchg
adc
xchg
cmp
loopne
pop
cmp
mov
or
adc
fsubrp
jge
fisubrs
mov
add
test
jle
call
add
xchg
iret
ret
inc
ljmp
xor
adc
and
add
iret
sbb
adc
push
sbb
sub
mov
mov
jne
mov
pop
mov
dec
mov
dec
repnz
rcl
inc
jp
or
add
inc
imul
xchg
faddl
sbb
cmp
dec
mov
push
fisubrs
sbb
or
je
cmp
jle
push
rol
mov
mov
lahf
rcll
push
sub
push
out
mov
je
xor
aam
lods
mov
movsb
mov
roll
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jmp
out
add
outsb
sbbl
hlt
and
inc
popa
rcrb
outsl
sub
mov
mov
stos
repz
mov
sbb
or
mov
mov
mov
push
movsl
out
cld
movsb
sahf
mov
inc
test
add
cmp
pop
popf
out
ljmp
jp
xchg
cld
mov
in
das
cmp
std
and
dec
fisubrl
jo
jmp
dec
loopne
cmp
jae
scas
xor
fnsave
lahf
movsl
stos
inc
mov
dec
and
movsb
mov
adc
and
push
pusha
xor
aad
cmpsl
xchg
jo,pn
pop
pop
pop
addr16
int3
mov
in
pop
dec
push
shrb
mov
or
push
pushl
imul
test
enter
jl
pop
xor
test
jo
lea
scas
add
push
lret
sub
imul
push
bound
add
loopne
bound
inc
cwtl
movsl
rcll
jmp
add
fsubrs
adc
data16
cmp
jge
cmp
xchg
imul
push
int
push
out
inc
call
add
fcmovnu
int
shrb
lds
cltd
lods
cs
ret
adc
mov
fistpl
inc
mov
out
pop
data16
or
in
inc
ljmp
sbb
cmp
and
int
or
cli
call
call
jmp
inc
cmpsl
js
aad
aas
push
push
and
push
les
dec
or
test
or
ret
push
add
loope
into
sbb
sbb
bnd
jmp
adc
mov
aaa
mov
pushf
mov
mov
pop
jg
insb
pop
push
fmulp
add
mov
or
push
loop
xor
cmc
jp
cmp
sub
or
mov
jmp
cmpsb
cmp
in
cmc
sub
mov
add
into
dec
imul
push
stc
sbb
xchg
fists
leave
and
inc
imul
ret
mov
fidivl
push
mov
push
bound
pop
cmp
call
shll
sbb
jecxz
xchg
xor
cmp
gs
jmp
std
cwtl
mov
lock
xchg
pop
roll
nop
fists
ja
jno
mov
lods
fcoml
outsl
sbb
cmp
jnp
clc
cmpsl
pusha
pop
mov
xor
xor
jne
pop
mov
psrad
into
sbb
push
negl
sub
or
push
loopne
mov
dec
cmp
fwait
jae,pt
daa
hlt
xor
aaa
adcl
jb
popa
das
fcmovu
add
enter
pop
sub
cwtl
scas
fstpt
pop
push
mov
pop
xor
test
push
and
imul
lahf
addl
lahf
xor
aad
out
js
mov
pusha
jmp
push
cmpsl
cmp
or
lcall
fadds
dec
mov
mov
cmp
or
and
addr16
frstor
add
cltd
jb
loope
adc
ja
je
adcl
leave
dec
lds
inc
inc
inc
pop
rol
jae
fisubs
cld
dec
xchg
jb
mov
jae
add
cltd
outsb
aam
leave
mov
add
fistpll
push
fisttps
or
jno
in
lcall
jmp
push
cld
icebp
andb
lock
stos
pop
cmpsl
leave
pop
loop
pop
sahf
or
pop
pop
and
dec
push
lret
std
mov
popa
xchg
adc
sbb
push
popa
imul
dec
inc
aaa
mov
mov
repnz
js
or
pop
subl
cmp
das
out
cmp
test
lds
arpl
dec
stos
cmpsl
movsl
cmp
inc
lcall
faddl
inc
or
sbb
cmc
sbb
enter
lahf
adc
dec
out
dec
and
xchg
hlt
imul
leave
int
inc
jno
and
ss
addr16
int
loopnew
in
xor
popa
cltd
rcrb
mov
cwtl
push
dec
adc
loope
push
push
pop
subl
shl
mov
loop
sahf
aaa
ret
and
stos
add
aaa
cmp
mov
lret
push
push
imul
roll
ljmp
in
jle
xchg
fsubp
std
or
jb
xchg
push
adc
dec
lea
xchg
cmp
ljmp
in
adc
jns
jmp
mov
pop
sbb
mov
jno
movsl
js
and
and
or
enter
lret
sub
push
fldl
and
mov
dec
es
sub
mov
das
jmp
jmp
aad
pop
add
cmc
dec
shl
pop
cmc
insb
pusha
in
cwtl
dec
rorl
in
add
mov
adc
dec
mov
cmpsb
mov
xor
mov
inc
add
push
push
cli
add
cmc
lods
xchg
pop
bound
aam
and
je
adc
loope
mov
ror
or
mov
mov
es
push
mov
insl
gs
outsl
lock
sbb
mov
sbb
popa
adc
lock
loope
js
roll
ljmp
shl
insl
fisubl
adc
cmp
call
or
jmp
cmp
loop
sahf
iret
and
leave
xor
jecxz
mov
mov
jl
sbb
cmp
xchg
daa
mov
cli
shll
repz
enter
out
add
xor
sbb
in
lods
add
roll
push
das
insb
mov
inc
inc
lahf
dec
addl
xor
cmp
insb
xorb
mov
lock
pop
push
imul
mov
repz
call
fbld
jne
and
les
cmp
js
cmpsl
add
ret
rol
inc
pusha
mov
push
lods
fbstp
adc
pop
movsl
loope
ret
sub
cmpsb
or
ret
fsubr
nop
mov
stc
pop
hlt
push
adc
outsb
xchg
inc
loope
mov
mov
lret
mov
cmp
cmp
aad
jnp
push
repnz
xchg
lret
out
int
leave
shl
andb
inc
jnp
sub
int
sub
gs
cmp
cld
jg
ret
ja
or
popf
dec
jns
mov
dec
add
and
fldenv
sub
jl
push
push
popf
mov
push
inc
loopne
push
push
in
mov
and
pop
mov
dec
data16
cld
sbb
scas
jbe
out
mov
insl
add
push
xchg
test
leave
lods
lea
lcall
jne
adc
xor
int3
mov
mov
inc
xchg
push
sbb
inc
pop
ret
ss
pop
loope
add
jge
add
jmp
lock
shr
adc
negl
dec
lods
xchg
pop
frstor
fwait
popa
call
and
in
rcr
dec
adc
jns
test
ljmp
adc
jno
sbb
imul
pop
pusha
lods
mov
jg
sbb
bound
cmp
mov
sub
xor
in
sbb
and
mov
jl
shlb
xor
movsb
mov
aaa
adc
mov
sbb
jge
mov
imul
aam
rcrb
mov
nop
lret
lcall
loop
pop
enter
or
enter
and
idiv
add
xchg
jp
mov
mov
jmp
mov
jae
ret
cli
in
and
insb
pop
out
outsb
xchg
dec
jne
or
adc
mov
mov
fwait
push
mov
lds
adc
fndisi(8087
mov
out
inc
mov
out
out
in
dec
sub
push
mov
movsl
dec
pop
jge
mov
push
scas
and
pop
notb
in
subl
or
cmp
mov
mov
cmp
ja
adc
xchg
cld
repnz
mov
lcall
ss
push
out
inc
jb
nop
mov
mov
out
popa
fnstcw
js
fcmove
and
jecxz
jmp
xchg
add
leave
jg
arpl
fisttps
popf
mov
lods
test
ficompl
mov
in
cmpsb
inc
jbe
and
test
mov
imulb
and
ds
xchg
pop
cli
mov
hlt
mov
or
sti
jle
lret
fmul
insl
cmovo
addb
add
xchg
idivb
adc
cmc
test
mov
sbb
sub
sbb
jnp
mov
mov
arpl
or
ds
mov
fcomip
xlat
mov
fs
dec
cmc
cltd
jbe
cmpsl
nop
add
jb
and
lcall
cmp
mov
lock
push
test
insb
mov
jg
push
dec
mov
push
mov
lcall
push
sbb
add
mov
cli
push
jecxz
adc
cli
sbb
add
mov
adc
nop
cmpsl
or
repnz
pop
mov
shll
or
int
push
mov
call
xor
mov
movsl
adc
loop
out
stos
jae
aaa
mov
outsl
and
mov
out
push
push
sahf
std
out
lcall
jmp
sbb
push
lds
adc
mov
stc
pop
out
sbb
shrb
or
inc
sbb
aad
movl
aad
adc
mov
xchg
push
pop
fwait
aam
paddusw
iret
push
lret
ret
std
insb
xor
outsb
in
jl
out
jg
ljmp
or
jmp
aad
cmp
push
inc
pop
mov
mov
scas
push
sbb
or
xchg
int
jle
xor
subl
jl
push
sbb
test
rorl
stos
mov
inc
xchg
enter
and
loop
pop
adc
jb
int
mov
jle
lock
popf
out
pop
sbb
lock
mov
call
sbb
std
pushf
mov
sbbb
stos
jmp
or
jns
push
rcr
adc
mov
add
adcl
enter
sbb
sti
out
mov
dec
lret
fbstp
dec
js
aam
pop
adc
outsl
mov
fcoms
jg
sub
cli
or
sbb
mov
mov
outsb
std
push
test
movsl
insl
add
dec
fsub
pop
mov
into
lea
cmp
adc
cltd
inc
cmpsb
or
pop
icebp
pop
push
aaa
cmp
divb
stos
movsl
dec
pop
mov
test
xorb
inc
ja
ja
pop
call
das
cmp
pop
les
std
hlt
das
in
dec
cmp
dec
inc
jbe
inc
scas
mov
mov
inc
mov
jl
repz
dec
sub
push
mov
int
lea
jecxz
mov
mov
pavgw
xor
adc
testl
xor
cmpsl
add
or
pop
mov
push
pop
xor
sarl
mov
fldl
xor
xchg
sti
gs
or
out
popf
and
pop
std
mov
movsl
mov
and
lahf
dec
nop
mov
mov
jb
mov
pop
lods
lock
sbb
xor
or
xor
push
nop
stos
iretw
hlt
push
push
push
push
pop
addl
xchg
rcrl
lea
aas
sub
pop
ret
mov
and
cld
push
dec
inc
xor
dec
xchg
mov
dec
inc
leave
sub
inc
cmp
test
cwtl
jnp
mov
xor
add
or
pop
and
push
arpl
push
adc
int3
sti
dec
mov
enter
ret
push
fprem
and
xor
sub
and
or
repnz
sbb
mov
out
push
lods
iret
push
jbe,pn
aas
pushf
mov
xlat
dec
add
cmpsl
xchg
push
rcr
nop
mov
sub
inc
icebp
sub
lods
shlb
pop
push
mov
sbb
fsubrs
jae
scas
jl
inc
lods
insl
pushf
nop
sti
pusha
add
push
insb
and
sahf
mov
negb
jle
adc
sub
push
mov
cmp
sub
push
icebp
push
sub
inc
pop
loopne
mov
and
jne
mov
ss
movsl
loope
cmp
pop
inc
push
ret
inc
cwtl
inc
pop
jge
xorl
int3
jp
aas
inc
mov
mov
inc
loopne
mov
popl
inc
jmp
out
pop
aas
sahf
mov
add
ret
lods
lret
iret
cmpsl
sti
fcmovne
test
sub
jno
or
in
mov
sbb
cmp
shrl
pop
or
push
cmp
and
mov
ror
xchg
add
jnp
mov
xor
or
js
das
js
or
jle
sbb
mov
test
scas
and
fwait
push
push
adc
movsb
mov
mov
add
inc
or
push
decl
sub
push
mov
xchg
lds
and
arpl
sub
inc
pushf
pop
inc
adc
int3
dec
inc
mov
adc
sbb
mov
mov
sbb
outsl
jbe
lea
not
pop
mov
stc
mov
sub
mov
xchg
sub
popa
xor
push
xor
jmp
push
adc
add
xor
add
outsb
cmc
das
imul
push
or
adc
das
cmp
loop
adc
inc
or
push
fnstsw
push
pop
clc
dec
mov
je
dec
cwtl
and
das
mov
jge
jne
mov
push
subl
jae
mov
jae
cli
int3
es
imul
sti
cmp
lock
out
jo
add
xor
cmp
mov
test
cmp
bound
push
or
fsubr
fwait
pushl
mov
fdivs
push
jge
shlb
jno
adc
xlat
jnp
clc
mull
dec
xchg
mulb
fsubrl
mov
fwait
jbe
mov
repnz
lods
aad
in
popa
jp
inc
clc
ja
inc
fsubrs
fwait
shll
adc
out
mov
scas
mov
adc
mov
lahf
rcll
movsl
arpl
pop
or
clc
movsl
les
popf
icebp
rorb
adc
test
mov
outsb
inc
addb
aas
rorl
es
add
sub
stos
int
push
movsl
sub
mov
js
push
xchg
xor
dec
imul
mov
dec
jl
mov
enter
pop
aad
imul
adc
jge
shlb
jbe
std
leave
xlat
jmp
adc
fildll
push
mov
push
ficompl
dec
mov
bnd
das
inc
inc
mov
stos
daa
xor
hlt
pop
sub
xor
cmpsl
les
repz
icebp
mov
add
xchg
bound
in
push
xor
ret
xor
in
scas
scas
push
shll
jg
movb
insl
into
inc
or
adc
sub
popf
or
xchg
loope
jp
cmp
cmp
fistl
mov
sbb
fidivl
push
cs
xlat
mov
jne
fstpl
pshufw
popa
adc
ja
mov
xlat
jnp
imul
fucomp
test
xchg
adc
lret
pop
dec
addl
movsl
dec
repz
in
or
cmp
mov
div
out
inc
insl
and
fcmovbe
cmp
xchg
jle
ret
sbb
outsb
sbbl
call
xchg
mov
lret
mov
and
rclb
popa
cmp
sbb
adc
inc
scas
dec
and
push
or
jo
out
ss
iret
adc
mov
and
stc
xor
push
rol
stos
dec
lea
lret
lret
push
cmpsb
push
les
adc
ljmp
das
jmp
add
mov
addr16
loopne
cmp
cmp
lahf
mov
outsl
cmp
mov
pop
frstor
mov
je
jnp
jge
daa
push
mov
aam
decl
cmpsl
xchg
pop
out
loop
fdivrs
adc
aam
inc
fcompl
sbbb
ljmp
pop
sbb
cmpb
loope
adc
into
sbb
push
sub
test
loop
rcll
xchg
mov
out
xchg
ja
xlat
lret
fstps
sub
jecxz
movsl
sub
cmc
leave
push
inc
push
mov
xor
push
lods
mov
xchg
fucomp
das
popa
mov
out
and
inc
push
dec
xor
and
or
xor
sar
pop
lds
cli
mov
mov
xchg
jg
xchg
jb
jae
test
sbb
push
mov
dec
cmp
shlb
and
pop
fxch
out
or
pop
xlat
xor
mov
mov
psubq
push
sub
dec
loope
xchg
fstpt
int3
aaa
loop
adc
imul
pop
imul
or
std
sub
dec
mov
push
cmp
rolb
and
popa
pop
pop
mov
mov
les
xchg
loope
ja
mov
pop
push
aam
adc
sahf
xchg
and
sub
inc
cmp
cltd
pop
inc
xchg
inc
jnp
push
jns
mov
jecxz
xchg
pop
or
jb
jo
push
in
mov
test
es
mov
jecxz
cld
or
es
xlat
push
xchg
test
push
int
pop
fcoml
fdivl
xchg
sbb
lahf
jl
in
stc
mov
ljmp
idivl
adc
mov
les
popf
and
lcall
js
inc
xchg
adc
mov
mov
in
sub
and
fildll
fst
in
inc
dec
and
jns
in
inc
and
or
mov
sahf
sub
mov
out
lahf
xchg
add
jbe
in
into
mov
popa
shl
sbb
adc
jns
repnz
imul
mov
sahf
daa
or
mov
out
imul
dec
lcall
lock
dec
andb
jne
popa
or
mov
cmp
mov
aaa
adc
jo
pop
jb
cmp
in
push
jno
cs
icebp
je
out
pop
cmp
inc
pop
rcr
mov
lea
shlb
rolb
and
inc
xor
mov
ja
insl
shlb
dec
shrl
data16
jmp
je
fcomp
sti
fs
cmpsl
sub
jge
out
cli
inc
pop
shrb
fldl
cmp
add
out
xchg
lods
xchg
or
jp
bound
sti
cmpsl
fadds
inc
jne
xor
jmp
add
addb
xor
mov
add
sbb
xlat
cld
jne
icebp
pop
cmp
push
pusha
jp
xchg
lcall
cmc
sarl
sub
addr16
rolb
movsb
addr16
movsl
in
mov
push
sbb
xor
xor
push
pop
xchg
icebp
roll
and
push
or
inc
orb
adc
mov
ret
inc
popf
test
cmp
rcll
mov
ja
int3
testb
xchg
fdivs
cmc
loop
push
loope
andl
iret
cmc
xchg
and
ja
adc
dec
xor
push
mov
mov
fnsave
aas
les
mov
idivl
shl
icebp
push
sbb
and
in
fdivrs
je
adc
loopne
pop
rcl
xchg
fcom
or
or
mov
lret
icebp
mov
jl
out
push
in
nop
mov
xor
test
cmp
sti
jg
in
hlt
ljmp
pop
int3
mov
in
mov
push
sarb
fs
cmp
push
aad
mov
rep
sub
fcom
jb
and
in
mov
mov
inc
sbb
or
in
mov
jnp
inc
out
ja
imul
xchg
das
push
jg
es
out
leave
dec
mov
xorl
rol
mov
mov
in
pushf
mov
cmpsb
stos
test
call
xchg
adc
and
das
mov
jmp
add
xchg
mov
and
add
pop
jo
loop
outsb
inc
push
into
insl
fnstenv
stc
arpl
sub
xchg
leave
xchg
subb
arpl
mov
enter
aam
or
dec
sub
adc
test
adc
fcmovbe
into
in
or
test
push
push
dec
sbb
pop
push
cmpsl
bound
imull
fdiv
outsl
xor
outsl
flds
in
mov
cmc
inc
xor
push
rclb
int
push
xor
push
xor
or
adc
dec
test
and
jp
or
movsb
les
jne
push
dec
inc
add
mov
out
pushf
repz
sbb
cmp
les
pushf
mov
inc
xor
mov
xchg
or
sub
dec
cmp
inc
adc
mov
sbb
iret
mov
je
je
das
icebp
jecxz
lret
pushf
dec
fnstcw
pushf
fdivrs
fs
ljmp
pop
lds
insb
or
dec
add
je
push
aad
arpl
in
lret
pop
adc
sti
adc
aad
jmp
dec
idivl
sbb
test
push
in
nop
stos
and
cmp
push
pop
lock
dec
cmc
adc
paddq
scas
and
push
jns
enter
adc
daa
xor
inc
push
iret
and
insb
jb
or
xlat
incl
scas
cmp
cmpb
jmp
xchg
rorl
mov
ret
jb
fldl
ja
jl
xchg
daa
loopne
movsb
test
and
cmpsl
fnstcw
out
sbb
test
mov
pop
mov
sbb
sub
pusha
pmaddwd
or
sbb
lcall
aaa
dec
or
mov
jecxz
inc
icebp
xchg
call
ljmp
mov
push
xor
sub
pop
imul
rorl
push
sbb
cmpsb
adc
cmp
add
mov
pop
sub
notl
mov
cmp
inc
lcall
cmpb
frstor
cmp
inc
jae
push
mov
lcall
jnp
into
int
in
xor
mov
sbb
in
fcmovnbe
jg
xchg
bound
es
mov
and
jg
test
and
push
xlat
dec
sar
mov
daa
push
sub
aas
out
lahf
sbb
jns
mov
push
push
mov
fwait
stc
mov
jg
push
nop
int3
cmpsl
ja
pushf
or
negl
sbb
out
lret
ret
jge
rorl
repnz
xchg
ss
test
or
add
aad
push
nop
adc
scas
cmpsb
jo
cmpb
outsb
mov
incl
sbbb
xchg
outsl
pop
mov
loopne
pop
divl
stos
mov
faddl
out
shlb
out
xchg
jle
fwait
cmp
enter
or
inc
push
out
pop
xor
inc
or
dec
mov
ja
push
jae
sete
test
lods
imull
sub
sub
test
and
dec
mov
pop
call
jp
sub
xor
movsb
push
out
enter
js
jns
push
mov
pop
jne
dec
jg
nop
adc
push
xorl
jp
add
pop
xchg
daa
inc
push
mov
push
sbb
fwait
push
mov
mov
mov
add
insb
imul
xchg
lcall
mov
xchg
cmp
movsb
or
out
ja
sub
cmc
jmp
gs
xor
popa
mov
movsb
cmpl
xchg
insb
push
sub
inc
adc
jp
jp
push
or
mov
pop
xor
adc
dec
fistpll
bnd
sbb
ret
fwait
cmpsb
test
scas
jmp
mul
adc
jnp
or
leave
mov
mov
das
or
mov
jge
xchg
ds
jbe
xchg
jge
ret
mov
out
insl
push
in
add
arpl
pop
ret
adcl
aad
stos
jmp
add
xchg
push
dec
sarl
inc
push
cltd
rcll
jg
es
stos
mov
jb
and
xor
add
xor
cmp
xor
xchg
outsl
sub
pop
sbb
cmpsb
inc
addr16
jno
loopne
mov
ret
xor
push
cltd
or
fimull
xorl
pop
cmp
inc
add
bound
sbb
inc
mov
mov
dec
sbbb
sbb
out
testl
repz
mov
cli
mov
mov
les
jne
mov
outsb
adc
or
cwtl
xor
loope
pop
or
test
test
xchg
adc
add
cmp
test
add
cmpl
mov
xchg
jnp
fidivl
repz
jns
scas
loope
push
leave
call
in
divb
push
mov
inc
in
fcoms
clc
xchg
dec
push
in
lret
mov
mov
cmpsl
and
jb
sti
stc
and
sub
aam
lds
shll
cmp
jae
pop
and
lods
pop
insl
movsl
aas
push
fldt
fcoml
es
inc
push
pop
les
sbb
outsl
test
sbb
std
cs
pop
jne
test
xchg
sub
xchg
bndldx
sbbl
push
hlt
data16
mov
lock
lods
pushf
test
mov
hlt
rcl
shrb
xchg
lods
es
sahf
popa
ljmp
push
cmp
sub
shll
imul
jge
jle,pn
pop
pusha
inc
or
cmpsb
fs
fsub
std
sub
sbb
lahf
add
xorb
inc
imul
cs
jg
cmp
pusha
shlb
xor
adc
pop
pushf
shll
insb
loopne
ds
mov
shll
test
stc
xchg
adc
mov
rclb
fnstcw
addr16
xorb
mov
xchg
mov
popa
out
int3
add
and
cld
fidivrl
mov
mov
mov
test
mov
inc
xor
push
add
out
xorl
and
mov
sub
lret
neg
fidivs
lcall
and
test
mov
dec
adc
lret
leave
mov
jg
int
cmpb
xchg
adcl
cs
push
js
outsl
pop
into
gs
push
shl
adc
int3
jge
sahf
xchg
in
sbb
xor
lret
jns
sbb
pop
sbb
adc
sbb
data16
mulb
push
adc
mov
je
jne
inc
icebp
mov
das
pop
mov
in
mov
cmpsl
add
xchg
xchg
notb
fbstp
jg
pop
sub
lret
cmc
test
xor
xchg
mov
sub
sbb
ret
clc
test
out
ret
cmpsb
and
mov
mov
shrl
jge
mov
insl
add
inc
push
jl
es
scas
mov
and
fstps
test
sbb
and
outsb
push
out
dec
mov
rclb
mov
xor
pop
mov
mov
cmpsb
push
and
push
jecxz
dec
mov
mov
sub
inc
add
icebp
rorb
sub
rcl
movsb
js
aaa
lret
dec
out
bound
mov
cld
dec
bound
add
cmp
mov
mov
adc
fdivr
fcmovu
jnp
subb
cmp
leave
pop
dec
enter
cmp
xchg
rclb
mov
or
icebp
clc
inc
add
std
mov
aaa
adc
stos
shrl
jl
jg
pushf
cli
pop
aaa
insb
fs
ljmp
out
pop
gs
stos
aas
sbb
addr16
out
stos
ds
or
lea
lea
fistpll
push
inc
xbegin
ljmp
push
xor
push
lcall
jnp
lds
icebp
xchg
idiv
sti
aam
mov
pop
lahf
push
or
cmp
or
sbb
pop
stos
cs
fadd
mov
iret
lcall
lock
sub
xchg
pop
mov
les
xchg
sbb
dec
mov
and
cmp
xlat
xchg
cld
mov
and
mov
test
sub
xchg
sbb
and
inc
fildll
adc
jno
pop
sbb
jge
mov
cwtl
fldl
xlat
push
xor
push
cmc
pushf
cwtl
jae
andb
push
mov
sarb
es
inc
repz
mov
xchg
ds
xchg
repnz
insb
inc
xlat
xchg
and
shld
adcl
xor
test
mov
add
add
dec
jecxz
roll
pop
data16
hlt
pop
push
sbb
rolb
cld
inc
mov
les
xchg
push
add
push
adc
cmc
lcall
dec
jae
mov
jo
xchg
adc
mov
add
mov
inc
inc
push
lret
mov
paddusw
fld
std
pushf
lret
inc
fucomi
popf
call
cmpsl
fcmovne
pop
xchg
jmp
adc
cs
ja
mov
js
push
clc
sar
fildll
lret
and
jl
adc
out
repnz
and
dec
cmp
cmp
jb
mov
mov
adc
add
cli
in
outsb
bound
shll
inc
out
lcall
push
push
dec
fbld
dec
adc
movsb
pop
fwait
cmp
lret
ret
push
pushf
ret
pop
rorl
jl
imulb
mov
mov
inc
xor
fimull
xlat
adcl
fistpll
push
sahf
push
vmovss
sub
jg
aam
mul
lret
stos
movsl
jge
faddl
xchg
pop
outsb
cmpsl
or
mov
xchg
scas
xchg
negl
inc
sbb
xor
mov
push
jge
orb
lods
dec
xchg
mov
stos
inc
dec
and
jp
push
jbe
inc
or
call
out
pop
pop
outsb
cmpl
test
cmp
fisubrs
mov
inc
adc
cli
ljmp
xchg
jb
jbe
mov
mov
pop
add
cld
xchg
or
xor
or
mov
push
inc
je
test
xor
ret
mov
xchg
inc
mov
inc
cmp
cld
pushf
inc
mov
mov
mov
adc
xchg
cmp
mov
sbb
pop
ret
sbbb
rcr
cmp
pop
or
cmp
notb
dec
cmp
je
jl
stos
es
dec
or
pop
mov
mov
mov
aad
jne
negl
aam
scas
adc
repz
dec
cmp
shlb
pop
jmp
xchg
stc
data16
inc
mull
add
lahf
push
adc
popf
adc
or
dec
lea
mov
cmp
inc
loope
push
subb
and
jmp
fwait
loop
icebp
push
jae
fs
mov
sbb
mov
shlb
mov
icebp
adc
les
ds
fucompp
xor
push
cltd
cmpsl
test
pop
push
mov
call
mov
movsb
pop
push
shrb
jle
cs
push
and
pop
sbb
pop
lds
mov
add
xlat
sar
add
lds
or
test
push
pop
ret
ljmp
xor
adc
dec
sub
xor
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
jmp
fnstenv
xchg
gs
test
sbb
lret
fadds
and
rcrb
fwait
rcrl
mov
mov
ljmp
adc
adc
or
inc
xor
cmp
xchg
loope
adc
xchg
xchg
rol
inc
sarl
adc
mov
jb
outsl
in
sub
fimull
aad
jno
inc
cmp
inc
dec
je
das
sub
lds
in
cmpsl
add
mov
xor
lds
mov
mov
pop
lods
sbb
jbe
xchg
lcall
mov
inc
fwait
mov
cmp
sub
cwtl
cmp
fs
inc
scas
jecxz
leave
cmc
mov
mov
lret
pop
mov
push
fisttpl
xlat
test
cmp
lods
jae
xchg
adc
call
adc
and
mov
pop
jne
cmp
cld
mov
mov
jnp
jns
xchg
outsl
insb
xchg
push
xchg
js
jmp
pop
das
iret
gs
or
insb
sub
push
and
add
mov
jo
in
dec
std
es
cld
xchg
leave
add
out
outsb
ds
xor
push
sti
leave
js
fsubs
and
or
xchg
icebp
mov
mov
enter
xchg
xchg
cltd
mov
mov
dec
pop
push
xor
cli
jb
xor
scas
les
rcrl
ja
cld
mov
jecxz
mov
test
enter
inc
and
pop
and
shll
lret
enter
adc
add
cmp
popa
adc
mov
les
inc
pop
adc
add
add
xchg
mov
aad
pop
movsb
fwait
rorb
xchg
push
aas
test
jmp
mov
push
add
xor
xchg
cmc
clc
push
mov
jle
pop
fdivrl
sbb
sbb
aad
add
sti
lds
dec
inc
xchg
movsb
mov
dec
mov
sub
add
push
jl
testl
loop
gs
test
sub
xlat
daa
fcoms
cmp
fdiv
shrb
xchg
mov
sahf
add
loope
mov
or
imul
push
data16
pop
into
xor
das
nop
dec
fstpl
pusha
adc
mov
imul
cmp
sbb
mov
out
cmp
xchg
je
stc
sbb
cmp
xchg
test
xchg
jecxz
or
lret
add
aad
cs
push
xor
jne
in
sbb
movsl
adc
lds
mov
xor
iret
iret
jae
xchg
add
push
cmp
or
pop
lahf
xchg
inc
popa
cwtl
mov
adc
shll
roll
pusha
imul
pop
mov
sbb
out
push
out
scas
sbb
in
pusha
icebp
mov
pop
add
test
movsl
fwait
or
and
mulb
lea
jnp
xchg
fld
jns
mov
xorb
dec
mov
mov
sub
jmp
adc
sbb
out
jecxz
mov
or
loope
jl
adc
sbb
dec
into
std
rcrl
sbb
test
dec
push
jg
decb
stos
mov
insl
and
icebp
movb
dec
sbb
mov
enter
sbb
test
jmp
sbb
mov
data16
test
ret
and
ficompl
pxor
mov
mov
adc
and
push
jecxz
dec
mov
adc
sarb
push
in
and
lods
push
pop
cmp
addb
and
movsl
sbb
decb
pop
int3
arpl
repz
andl
and
push
mov
mov
pop
mov
enter
loop
sarb
mov
addr16
test
rclb
ret
mov
or
adc
stos
stos
dec
in
cmp
jne
mov
push
and
push
fbld
inc
jae
out
in
pop
fiaddl
and
ss
std
loopne
sbb
rclb
jge
xchg
jns
inc
dec
jp
js
out
callw
lea
push
lock
push
mov
jno
jbe
cmp
push
cmc
cmpsb
jge
push
aam
push
xor
faddp
addr16
ds
xchg
dec
mov
int3
mov
mov
das
lock
lret
lock
out
outsl
shrl
leave
or
fdivrl
mov
xchg
jle
call
icebp
ljmp
add
jne
dec
addb
adc
cmc
push
outsb
int3
or
in
rcl
jns
or
ss
out
mov
sbb
jne
cmp
fisubs
frstor
adc
imul
pop
repz
cmc
mov
xlat
add
repz
cmp
std
int
xchg
dec
cwtl
or
gs
lock
adc
and
jle
xchg
or
cmp
addr16
sub
sub
xor
jns
sbb
outsl
call
cmpsl
cmpsb
add
add
push
pop
cwtl
jae
pop
inc
dec
xchg
popf
pop
mov
and
fwait
xchg
jnp
sub
add
ljmp
sahf
pop
fcoms
hlt
pop
xchg
popa
jge
fwait
imul
inc
pop
sub
xchg
sbb
mov
push
push
lea
mov
push
mov
add
or
pop
mov
xchg
add
mov
adcb
dec
pusha
push
lds
nop
jecxz
push
in
imul
mov
jbe
mov
and
xchg
stos
or
xor
subl
add
jnp
push
mov
pop
sbb
icebp
dec
xor
lock
sbb
cmpb
mov
xchg
sub
flds
jbe
add
dec
fldcw
sar
push
pusha
mov
inc
cmp
lahf
icebp
mov
pop
jle
int3
shll
in
mov
sbb
xchg
xor
pop
ret
xchg
in
imul
push
subl
xchg
sbb
pop
push
sbb
push
shrb
adc
je
or
gs
lret
fildl
imul
cs
add
lods
shll
sbb
cli
lods
mov
ret
mov
jmp
push
xchg
std
das
lea
mov
dec
pop
movsb
jl
mov
dec
sub
outsb
data16
dec
mov
cltd
push
and
cmpsl
scas
inc
sbb
test
mov
rcrl
jbe
xor
mov
and
sub
fistl
divl
cmp
jae
mov
xchg
arpl
sarb
fsubl
shr
scas
add
and
lcall
adc
ja
loop
sbb
insb
fbld
dec
jnp
mov
push
jb
and
fs
pop
imul
std
fadd
cmp
xchg
int3
lock
pop
lahf
adc
cmp
pop
inc
loop
scas
push
inc
sub
xchg
jg
andl
add
mov
xchg
mov
jg
pop
xor
orb
cmp
jle
dec
lcall
frstor
in
jno
stos
rcl
imul
fistpll
arpl
stc
sahf
test
mov
mov
xchg
out
xchg
xchg
jbe
fistps
adc
test
punpckhbw
roll
mul
dec
cs
mov
arpl
jecxz
movsb
mov
lret
fsubl
and
ljmp
mov
imul
mov
fdiv
bound
mov
jmp
cmp
cmc
inc
movsb
pop
jno
or
mov
pop
mov
in
push
pop
scas
iret
mov
push
xor
aaa
cmp
je
fisttpll
and
out
push
ret
or
push
mov
mov
mov
or
rcr
imul
outsl
xchg
pcmpeqd
lea
sbb
insb
filds
ds
xor
push
cmc
fiadds
inc
ret
movsl
sub
into
adc
fwait
das
shrb
or
cs
pop
dec
xchg
in
mov
cmp
mov
or
mov
pop
xchg
or
outsl
cs
ret
stos
stos
fs
xor
mov
lret
leave
pop
mov
push
repnz
and
imul
push
inc
dec
js
mov
xor
pusha
push
jl
ret
cld
out
scas
je
lcall
jo
mov
push
or
jmp
or
gs
mov
xchg
std
add
inc
cmp
mov
nop
mov
push
pop
sub
icebp
aas
pop
insb
dec
pop
adc
mov
aaa
sti
push
int3
leave
pop
cld
or
push
fistpl
popf
incl
rcrl
mov
test
jnp
repnz
or
add
sub
cmp
sub
pop
stos
mov
movsl
mov
dec
lods
aad
pop
xchg
push
mov
push
mov
cs
int3
sbb
out
das
sub
inc
xchg
test
stos
enter
pop
into
xor
jl
mov
inc
cwtl
ret
jo
mov
fmul
insb
inc
js
scas
sub
fldcw
or
lret
xchg
fldenv
mov
data16
stos
pop
test
push
dec
pop
cmc
push
lret
and
dec
call
mov
int
push
cmp
push
jo
dec
popf
loopne
push
sar
in
aas
lods
lods
sbb
mov
lahf
les
mov
fwait
shl
insl
xor
mov
cld
sbb
adc
rcrb
mov
lret
sbb
pop
ficompl
push
mov
inc
into
negb
gs
mov
inc
adc
arpl
in
xchg
mov
jp
in
je
stos
mov
popa
int
aas
lahf
stc
out
lahf
sub
and
gs
aas
mov
cmp
stos
fisttpl
mov
inc
pop
jo
push
lds
pop
jle
or
adc
push
push
movsl
xor
add
movsl
add
lahf
test
dec
repnz
stc
in
xchg
out
fs
cwtl
mov
dec
jbe
dec
dec
cltd
dec
test
lret
iret
in
xchg
jp
call
scas
lea
insl
sbb
in
and
xchg
push
cwtl
push
imulb
aaa
repnz
call
lods
cs
inc
fsubs
test
sub
push
or
sbb
inc
xchg
scas
int3
sbb
cmp
dec
gs
xor
into
pop
mulb
sbb
mov
mul
sbb
inc
imul
mov
push
jmp
ffree
clc
in
sub
and
and
lret
in
out
jns
push
out
cmc
add
adc
push
mov
in
push
push
jmp
jne
outsb
push
ja
mov
or
dec
mov
lret
jns
inc
sub
jp
pop
push
push
mov
repnz
xchg
sahf
push
mov
xchg
adc
mov
shlb
fnstenv
cmc
clc
cmp
imul
mov
sbb
jmp
aas
push
xor
dec
outsl
sbb
call
bound
hlt
aaa
stos
mov
test
pushf
hlt
sahf
clc
and
lret
inc
out
xor
sub
pusha
stos
jne
mul
xchg
leave
pop
dec
mov
sub
xor
addl
pusha
mov
arpl
jl
sub
dec
jns
mov
bound
inc
jns
and
loope
outsl
arpl
lea
fisubl
stos
lods
jae
mov
sub
push
outsb
negl
push
jo
ljmp
push
or
js
and
inc
xchg
inc
mov
cmp
cld
notb
add
cmp
popl
stos
fnstenv
outsb
push
sbb
ja
scas
jb
gs
add
jbe
mov
out
inc
jge
loop
scas
inc
jle
cmp
dec
jne
sub
mov
clc
jno
insl
ljmp
pop
jle
lret
call
pop
sub
aaa
dec
cmp
loope
inc
sub
aad
inc
pop
pop
sbb
inc
mov
call
add
movsb
inc
lret
divb
inc
sub
or
xchg
in
arpl
popf
push
les
and
out
scas
ljmp
inc
add
pop
fnstsw
mov
jl
movsl
push
iret
xor
mov
mov
xchg
mov
and
and
and
das
adc
lds
outsl
sbbb
xor
scas
pop
mov
cwtl
pop
xchg
adc
arpl
in
idivl
frstor
pop
and
sbb
cmp
sub
sbb
fcomip
mov
out
stc
mov
dec
ds
sbb
jecxz
and
push
xchg
clc
mov
fsubrl
mov
push
shll
jb
jp
in
add
inc
cs
jo
loopne
andl
cli
movsl
fisttpll
or
and
xchg
test
loopne
xchg
out
jb
xchg
sub
xlat
cmp
push
out
sbb
imul
and
orb
dec
fsubs
fnstsw
sbb
adc
mov
mov
cmpsl
and
loope
xchg
fstpl
push
xchg
xchg
ret
inc
add
jp
stos
dec
gs
xor
jo
sbb
fldenv
loopne
dec
je
adc
sub
jo
jo
mov
fdivrs
dec
mov
jns
add
fmull
jle
mov
dec
dec
push
xor
sbb
push
fcoms
shl
and
in
push
lret
jp
mov
lods
imulb
pop
hlt
test
bound
or
mov
push
add
pop
movl
pop
or
and
xor
sub
cmpsb
int
pop
outsl
xchg
fdivl
add
and
fisubrs
sub
or
add
push
mov
out
add
into
dec
cmpsb
lahf
xlat
aas
xchg
mov
cld
mov
out
in
push
cmp
lahf
fcomi
mov
lods
dec
inc
xlat
std
repnz
ja
mov
sbb
jb
push
mov
xchg
and
and
mov
stos
sbb
sbb
fdivs
pop
jge
xchg
sbb
popf
xor
push
lock
lock
imul
inc
in
fprem
or
jnp
pop
outsb
xchg
testb
es
push
je
aam
test
in
xorb
cmp
add
adc
cs
fstpt
push
hlt
fs
adc
push
or
aas
mov
jl
ror
or
shll
into
mov
jge
cmp
dec
and
in
jae
shl
mov
mov
stos
ja
loope
je
mov
mov
insb
push
pop
inc
jecxz
shr
sub
inc
fidivrl
push
aam
and
cmp
lret
popf
mov
xchg
fwait
dec
shlb
into
pop
je
jge
int
gs
push
xor
adc
mov
sub
push
lahf
cmpsl
leave
mov
sbb
fisubs
int3
add
pop
fwait
enter
leave
jae
pop
out
movb
pop
sub
mov
inc
rolb
mov
mov
sub
lock
iret
adc
pop
adc
inc
xchg
xchg
jae
or
sub
aaa
fs
clc
mov
aaa
mov
lret
jb
sub
fisubrs
addr16
popa
cmpsb
sub
inc
ret
add
xchg
int3
mul
inc
sbb
in
sub
jl
or
lock
dec
jl
inc
fdivs
cmp
xchg
lds
js
inc
ret
jo
xchg
testb
scas
fnsetpm(287
mov
xchg
cmp
in
aas
lock
push
leave
cmc
mov
leave
mov
push
imul
adc
cmpsb
out
or
jnp
or
xchg
daa
dec
xor
dec
dec
jecxz
mov
pop
push
inc
mov
and
movsl
outsl
xchg
dec
mov
call
adc
xor
imulb
xchg
aad
cmp
dec
and
icebp
or
arpl
sahf
incb
adc
or
xchg
push
movsl
mov
jne
inc
into
shlb
mov
inc
dec
test
xlat
xor
mov
int
data16
cmp
ds
adc
repnz
sub
pop
sub
fbld
sbb
scas
xchg
mov
mov
xchg
cmp
aas
sbb
lods
loop
jp
loope
or
insl
jmp
inc
in
es
add
leave
cmpsb
pop
push
sub
push
pop
in
inc
cmp
jl
clc
leave
lods
push
xor
inc
xor
mov
fisttpll
mov
pop
inc
xor
inc
xchg
inc
jle
icebp
mov
mov
mov
fld
cmc
xchg
test
insb
adc
divb
add
jb
std
cli
mov
sub
sti
mov
data16
xchg
push
pusha
sbb
incl
pop
pop
imul
shrl
mov
cmpsl
push
fbstp
jne
or
stos
sbb
xchg
jp
or
add
inc
aas
stos
test
mov
mov
xchg
out
imul
adc
fisttpll
add
loope
shlb
dec
or
cld
lock
inc
inc
in
add
and
das
or
sarl
xchg
dec
dec
inc
fst
inc
cmp
enter
andb
and
xor
lds
xchg
or
mov
scas
rcll
dec
roll
mull
jmp
xor
xchg
add
shlb
cmp
mov
test
ja
push
xchg
pop
rclb
aam
scas
lahf
nop
or
fwait
dec
push
xchg
in
repz
mov
aam
test
repnz
cmpl
in
mov
dec
shll
js
xchg
stos
adc
das
sahf
adc
into
repnz
scas
imul
lahf
mov
dec
insb
addr16
pop
mov
lock
pop
cli
jge
and
add
xchg
rcr
fwait
or
out
stos
xor
sub
adc
das
xchg
mov
aaa
push
out
inc
in
cmpsl
bound
pop
add
cmp
jnp
cmp
mov
fsts
dec
insb
xor
xorl
ret
mov
stos
mov
jle
sub
pop
xchg
outsl
negl
mov
push
add
sub
inc
sbb
add
xor
lahf
xor
mov
xchg
sti
cmpsl
fsubrl
jge
inc
adc
pop
roll
pop
jno
and
push
ljmp
dec
xchg
mov
push
outsl
dec
lcall
sub
xor
divb
pop
ficoms
pop
stc
nop
jle
leave
sbb
jp
es
int3
and
ljmp
cmp
inc
mov
mov
lret
dec
adc
ret
loope
fdivrs
mov
clc
dec
push
xchg
in
and
iret
mov
popf
fcoml
pop
mov
mov
jmp
dec
or
pop
lahf
aas
gs
sub
popa
cmpsl
rcrl
jo
mov
arpl
cwtl
dec
movsl
cmpsl
ret
xchg
or
jl
rcr
push
rorl
sub
or
or
fisubrs
lcall
in
push
mov
pop
rcr
xor
inc
push
mov
loope
cmpsl
imul
and
fisubl
icebp
lcall
popa
loop
out
ss
mov
xchg
test
ds
imul
jb
xor
mov
bts
cwtl
aas
ret
iret
add
inc
or
mov
je
cmp
push
cmp
in
shlb
dec
outsl
imul
xchg
lret
inc
jle
inc
add
lock
sbb
xor
rcrl
bound
mov
or
fs
push
movsl
mov
fucomi
or
or
xlat
dec
mov
jle
push
jnp
mov
rcrl
scas
addr16
cmp
sbb
add
orb
out
nop
cmp
mov
or
pop
pop
in
or
jns
js
mov
das
cmp
aas
imul
inc
and
mov
adcb
sbb
mov
fs
and
inc
or
repz
int
rcrl
lret
push
mov
mov
sbb
fmuls
dec
sbb
and
cmp
in
fdivrp
scas
repnz
and
scas
clc
test
cmp
scas
mov
test
jecxz
inc
call
stc
mov
gs
cmc
add
icebp
mov
mov
shrl
xchg
insb
imul
adc
xchg
xorb
sub
or
in
sbb
aad
fptan
data16
aad
and
test
dec
xor
dec
aaa
jb
nop
int3
stc
mov
add
mov
outsl
es
sbb
in
mov
addl
lds
icebp
jbe
repnz
jge
add
pop
xchg
mov
insb
mov
jp
addr16
shl
pop
inc
in
cltd
jp
add
or
arpl
mov
mov
jns
sub
push
out
mov
push
xchg
stos
jecxz
push
repnz
cvtps2pd
fistps
and
das
or
lods
push
sub
sub
scas
xchg
pop
icebp
push
push
outsb
jnp
push
jno
call
dec
je
test
fnstenv
aas
popf
rcrb
leave
inc
dec
mov
pop
cmp
mov
push
mov
call
jnp
sub
mov
mov
in
or
xorl
jb
mov
icebp
mov
jl
pop
aad
rclb
cli
pushf
push
ret
rcrl
dec
dec
fwait
adc
dec
pop
mov
lahf
push
mov
mov
dec
shll
jecxz
push
add
or
adc
pop
sub
int
nop
ja
ret
jp
inc
mov
push
dec
dec
sbb
cmpb
dec
sti
pop
add
stos
mov
cmp
inc
sbb
out
cmpsb
hlt
or
mov
mov
jnp
mov
shrb
daa
stc
outsl
aam
and
cs
xchg
jo
xchg
cmp
push
and
jl
ljmp
je
scas
movl
cld
pop
pushf
or
sbb
into
mov
jle
sub
xor
cli
mov
jge
xchg
stos
out
and
arpl
mov
cwtl
or
pop
jo
cltd
jmp
mov
xchg
or
clc
out
jge
adc
or
sub
pop
sub
fsubrl
test
testb
dec
out
or
dec
and
jmp
xchg
sbb
and
adc
imul
arpl
int
cwtl
adc
inc
dec
pop
mov
outsb
adc
inc
insb
fwait
in
mov
xchg
sub
dec
test
arpl
rcrb
test
lret
xlat
xor
pop
cs
jbe
adc
or
mov
cld
sti
dec
xor
das
in
cmp
mov
jne
mov
pusha
cs
pop
mov
or
imul
ljmp
xchg
jp
jge
dec
adc
add
pushf
out
and
xchg
add
stos
sub
xchg
push
lock
pop
es
jg
scas
dec
inc
cwtl
pop
lods
jno
jae
pop
pop
or
fstpl
enter
jae
je
movsb
jo
stos
sbb
cmp
ror
in
xchg
dec
push
jmp
push
enter
inc
lods
mov
mov
xlat
insb
pop
xchg
js
fidivs
adc
pop
dec
pop
and
leave
mov
push
pop
sub
in
es
test
repnz
jecxz
sbb
cmp
add
inc
rorl
mov
or
mov
push
jmp
aad
mov
push
mov
sub
mov
adc
nopl
jmp
enter
inc
cltd
cmp
nop
push
inc
push
out
add
test
sub
ret
add
push
icebp
mov
mov
dec
jmp
lret
mov
push
ds
notl
mov
xor
xor
push
adc
mov
push
sub
rcl
fldenv
xor
inc
pop
jb
inc
mov
mov
nop
and
xor
mov
xlat
lret
inc
jno
setne
mov
pop
cmp
xchg
add
push
mov
pusha
jle
imul
cld
das
mov
jbe
mov
mov
das
nop
xlat
xrelease
jb
push
pop
shrl
movsl
jge
pop
loope
jae
shr
pop
add
inc
inc
dec
jmp
in
out
mov
nop
mov
and
xchg
adc
cwtl
xor
shrl
hlt
jg
sbb
push
iret
cs
sub
notb
and
jg
dec
std
xchg
int
mov
push
mov
jl
stos
cmp
repnz
pop
js
mov
clc
daa
adc
and
add
cmove
repz
sbb
clc
into
iret
xor
dec
xchg
subb
fisttpl
jge
and
icebp
inc
mov
movsl
imul
in
sbb
cld
int3
and
pop
mov
or
in
pop
out
inc
sbb
loopne
scas
lea
in
xlat
add
push
repnz
fcmovu
int
outsl
fsub
shlb
sbb
in
std
pop
outsl
lret
add
sti
jmp
sbb
mov
push
or
mov
in
mov
pop
bound
lahf
sbb
adc
in
in
mov
fiadds
mov
jecxz
scas
push
fdivrs
dec
pop
pop
je
sub
sbb
arpl
jbe
mov
or
xor
jno
push
ljmp
cli
repnz
mov
mov
in
push
mov
pop
addl
push
jp
and
or
mov
ljmp
xor
fwait
scas
add
jne
push
je
xchg
insb
pop
pop
addr16
jmp
xor
aaa
push
rcl
xor
add
mov
push
sbb
imul
sub
mov
push
and
mov
or
push
and
pop
sbb
xor
add
adc
xor
sti
lds
je
and
fstl
inc
fbld
mov
lock
loope
int
and
mov
mov
inc
dec
lods
and
sbb
pop
dec
in
arpl
lret
xor
jo
adcb
std
mov
sub
bound
adc
mov
adc
loope
cmp
jns
or
lret
xchg
stc
xchg
push
push
push
in
mov
and
flds
inc
or
in
jle
rep
sbb
daa
rcl
std
inc
dec
or
test
xchg
psrlw
cmp
or
stos
gs
stos
add
jmp
inc
loop
add
jae
sbb
adc
mov
insl
test
pusha
dec
xchg
mov
lahf
push
or
sbb
jge
dec
push
xchg
fmuls
sub
xor
inc
xchg
scas
shrl
repz
and
mov
arpl
dec
or
test
sbb
jne
xchg
pop
repnz
in
mov
mov
jp
loopne
mov
push
lcall
mov
push
aad
pop
in
push
shlb
mov
ficomps
jmp
pop
xor
pushf
add
sub
cmp
test
hlt
cmpb
jecxz
aad
jmp
insl
fwait
dec
fsubs
cmp
pop
outsl
jmp
jb
mov
pop
adc
int3
mov
sbb
fld
add
fcoms
loope
icebp
fists
push
out
fnstsw
repz
sub
movsl
rorb
and
arpl
into
loopne
push
add
xchg
aas
sbb
lock
xchg
xor
pop
sub
mov
mov
and
sbb
lahf
sub
sti
ret
or
add
push
mov
jmp
xor
xchg
rclb
test
shl
add
nop
jl
xor
pop
mov
inc
xor
adc
es
int3
jle
mov
daa
out
pop
jl
repz
imul
cmp
out
cs
xchg
imul
ljmp
shr
jo
repz
lret
xor
pop
cmpl
and
rcrb
popa
lret
mov
pop
xor
scas
shl
jbe
xor
and
movsb
dec
out
cltd
and
test
adc
cmovbe
es
cmpsl
xchg
xor
or
test
cltd
mov
mov
or
mov
jg
push
lret
lods
aad
jge
stc
scas
xor
sbb
push
pop
pxor
adc
jecxz
adc
pushw
lcall
pop
imul
jecxz
gs
stc
sub
cmp
sub
jb
cmp
std
sbb
leave
and
rcll
sub
and
sbb
rclb
mov
enter
test
dec
xor
sub
mov
fsts
pop
adc
mov
aam
movsl
nop
and
gs
fucomip
or
cwtl
enter
hlt
or
rep
inc
and
mov
xor
movsb
push
arpl
or
cld
leave
insl
fucomp
jge
pop
jge,pn
push
adcl
add
push
mov
and
pop
test
out
push
and
decb
aad
pop
sahf
jecxz
inc
gs
cmpsl
and
stc
bound
nop
jmp
dec
fsubl
adc
mov
inc
gs
xlat
test
inc
arpl
pop
pop
incb
data16
inc
or
aas
scas
pop
xchg
imull
fucompp
xorl
xor
cmp
and
add
inc
repnz
mov
mov
scas
jl
add
add
pushf
adc
roll
mov
divb
cmpsb
sbb
push
std
and
add
popa
loop
repz
scas
mov
sub
repz
xchg
sbb
add
xor
int
cmp
xchg
inc
xor
mov
inc
pop
or
dec
mov
sahf
sbb
sbb
dec
loope
clc
add
bnd
xor
xchg
adc
lret
in
push
loope
dec
pop
popa
push
push
add
jmp
fbld
inc
loope
xchg
cmp
push
insl
dec
ss
gs
iret
dec
imul
aaa
enter
aam
hlt
sbbl
or
push
mov
dec
push
and
mov
out
mov
mov
add
mov
jg
fstpl
stos
insl
ss
inc
push
add
hlt
jo
divl
cwtl
lcall
push
mov
add
pop
aaa
rolb
sbb
lods
and
cmc
and
jne
mov
xchg
int3
jb
fs
jns
xor
repz
inc
pop
pushl
dec
insb
xchg
mov
push
lock
xlat
gs
ds
test
push
mov
push
int
leave
cmp
leave
dec
std
inc
adc
jecxz
push
cs
push
inc
rolb
loop
mov
mov
data16
push
inc
loope
aaa
loop
sub
sub
les
pop
test
in
add
scas
push
in
mov
aam
inc
add
fwait
sub
js
adc
mov
mov
popa
cwtl
jnp
cmp
adc
sub
pusha
inc
dec
outsl
mov
lcall
das
pop
ljmp
pop
xchg
dec
and
add
jmp
jns
enter
mov
adc
lahf
cs
test
xchg
ret
cmp
push
scas
cs
add
into
pop
adc
dec
pop
cmp
lret
insl
xchg
push
jp
inc
or
rorl
scas
shr
and
add
loope
mov
test
mov
aas
dec
mov
rcrb
in
sarl
fistpl
xchg
lcall
mov
dec
lock
jno
push
pop
add
rcll
es
lahf
mov
pop
negb
xlat
cmp
push
inc
lods
jns
divl
push
fmull
sbb
icebp
flds
addr16
mov
repz
xor
push
pop
mov
sbb
outsb
xchg
addr16
out
or
fcoms
mov
or
scas
aad
sub
into
cs
out
or
scas
dec
add
stos
leave
jmp
stos
adc
cli
and
adc
ficomps
sti
cmp
or
shll
add
and
add
jge
addr16
jno
lea
pop
js
add
push
lret
aaa
pop
hlt
push
cli
das
pop
mov
mov
mov
xor
cmp
es
outsl
dec
imul
dec
xor
inc
sbb
mov
addr16
push
push
movsb
cli
xchg
mov
out
insb
adc
jbe
xor
and
faddp
cmpsl
ss
sbb
jmp
or
adc
testl
pop
loope
rcr
inc
js
jmp
mov
test
cmp
fcmovbe
arpl
hlt
jne
xchg
mov
lret
sarl
and
out
ret
daa
jecxz
sarb
pop
push
testb
aam
mov
sub
cltd
lcall
push
enter
mov
cmpsl
bswap
bound
fildll
ja
movsl
jns
popa
clc
jp
fsubs
jne
dec
cmp
pop
xchg
ret
popa
cmp
pop
jb
sub
mov
and
or
xchg
xchg
in
push
adc
test
jmp
push
mov
in
test
stc
stos
xor
fnstsw
ss
adcl
orb
sbbl
sbb
cld
pop
roll
mov
das
std
mov
pop
call
pop
mov
push
add
leave
dec
push
popf
xchg
cmp
inc
sahf
outsb
mov
and
bound
ljmp
fwait
or
cmp
xchg
mov
int3
ror
lea
adc
hlt
pushl
push
mov
push
jbe
mov
ret
cmpsl
clc
mov
sub
jecxz
push
mov
inc
mov
shl
adc
mov
add
xchg
aaa
bound
adc
sar
fiadds
mov
movsb
mov
fdivl
add
cld
push
dec
xor
adc
mov
and
sbb
cmp
mov
jno
add
addr16
xchg
sub
gs
lods
xchg
inc
mov
mov
stc
hlt
push
add
popf
lret
cwtl
push
outsl
pusha
sbb
outsb
mov
adc
out
rcrl
xchg
sbb
nop
clc
pop
mov
sub
xchg
lods
or
out
mov
shlb
push
xorb
cmpsl
adc
dec
adc
jns
dec
xor
aas
jl
sub
daa
adc
popa
sahf
push
mov
mov
or
clc
xor
fisttps
out
inc
mov
scas
int
adc
orl
pushl
pop
mov
rorb
int3
pop
cmp
cltd
cwtl
fnsave
adc
mov
int
cmova
adcb
iret
int
mov
iret
fwait
add
push
lds
out
inc
popf
mov
in
sub
je
bsr
cld
xor
call
adc
lds
cltd
test
mov
mov
and
pop
pop
push
push
mov
out
sub
dec
push
cltd
addb
xchg
sbb
dec
je
idivl
xchg
lods
sub
test
cmp
ret
add
mov
push
dec
clc
mov
inc
cmpsb
out
fcmovnu
sahf
mov
mov
sub
mov
adc
jne
test
arpl
out
out
push
dec
in
and
popf
xchg
insl
jmp
or
add
testb
pushf
cmp
outsl
jmp
jno
jg
mov
jno
mov
xadd
out
lods
or
rorl
push
mov
pop
mov
push
xor
imul
push
insl
mov
cld
cmp
mov
mov
add
jp
neg
dec
stos
je
loop
dec
nop
xchg
repz
inc
cmpsb
xor
cmp
mov
filds
mov
xchg
jecxz
add
int3
rcrl
sub
stc
and
mov
inc
dec
adc
or
add
ljmp
sub
push
push
out
stos
sbb
lods
test
lret
mov
popa
xchg
pushf
int3
jne
aaa
jb
sub
cs
mov
insb
push
in
pop
cmpsl
adc
xor
out
inc
jg
push
inc
outsl
or
xor
xchg
arpl
mov
xchg
cs
sub
jne
mov
jno
pop
loop
aad
xchg
xor
or
insb
xor
cli
dec
inc
flds
mov
mov
sub
mov
mov
jecxz
mov
out
es
xchg
sbb
mov
lret
stos
ficoml
inc
enter
and
outsb
mov
jg
or
sub
pop
int3
aaa
aas
fdivs
popf
in
mov
stos
ja
xchg
sub
cmpsb
adc
jns
bound
and
inc
addr16
add
sub
cmp
aaa
push
cltd
cli
ret
add
sti
bound
in
sbb
push
scas
scas
aas
xchg
xchg
movsb
mov
shl
pop
in
cmp
mov
sbb
jg
in
call
nop
lea
and
cmp
lods
mov
aam
and
sbb
decl
out
je
clc
or
adc
popa
stos
dec
cld
or
rorb
pop
jge
sub
sub
inc
enter
data16
jb
lahf
cmp
in
jnp
jge
push
loope
scas
mov
push
gs
mov
adc
mov
ficompl
push
gs
cmpsb
das
dec
mov
adc
sub
lds
rcll
and
xchg
loopne
stc
stos
ja
push
ret
cmp
fnstsw
mov
xor
jne
dec
lods
outsl
adc
fidivs
fists
notb
test
cmp
dec
push
movsb
popa
in
test
adc
bound
xchg
faddl
mov
mov
mov
xorl
test
adc
stc
mov
mov
shl
out
sub
mov
stc
outsb
sbb
pop
dec
pop
dec
shll
xchg
and
add
scas
xor
push
mov
cmp
pop
loop
int
dec
out
aam
sbb
mov
pop
mov
or
fdivs
jp
or
insb
mov
mov
dec
xor
add
pop
loope
loope
std
out
rorl
mov
xchg
dec
mov
mov
and
in
outsl
fcmovb
scas
inc
imul
lret
add
mov
xchg
mov
iret
std
or
add
insl
cmp
lea
loope
dec
ret
stos
jns
and
pop
jo
and
fstpt
popa
push
rcrl
gs
xor
jb
enter
bswap
add
dec
adc
popf
cltd
xchg
xchg
inc
cld
cmp
push
lcall
out
addb
shlb
jp
push
cmp
sbb
xor
add
mov
shr
aas
fiadds
pusha
push
insb
add
inc
pop
xchg
lahf
cld
sbbb
andl
leave
cmp
xor
lahf
repnz
rclb
js
and
test
icebp
add
stos
and
lds
ja
mov
dec
dec
aam
arpl
aaa
fwait
les
mov
sub
rclb
aad
mov
xchg
call
jno
aas
jl
dec
fcmovbe
in
iret
xchg
in
fistps
jno
aaa
dec
not
jmp
test
or
test
mov
mov
shr
inc
loopne
xchg
test
mov
cli
mov
mov
xchg
push
ds
adc
hlt
gs
mov
cmp
inc
fwait
sub
sbb
shrl
push
scas
jno
add
ret
mov
or
lret
scas
sahf
aaa
lcall
and
push
and
jl
scas
test
fwait
and
inc
jmp
js
pop
jne
lods
sbb
ljmp
mov
imul
pop
inc
sbb
mov
inc
addr16
xlat
inc
add
sahf
push
sbb
sbb
jg
xchg
xchg
les
push
popa
leave
inc
xchg
dec
lret
sbb
xor
aam
push
mov
or
ret
jno
mov
psubw
cmp
jge
cli
jg
call
mov
mul
les
ror
inc
btc
dec
out
sbb
into
rcll
pop
dec
jle
je
insb
loope
lock
ret
add
add
aaa
jg
jle
sysenter
loope
xchg
push
or
aas
rolb
sub
sub
cmp
out
sub
xchg
into
insb
int3
mov
or
xlat
ljmp
pop
add
sbb
shll
add
cmpsl
sub
cltd
js
cmp
lods
xchg
hlt
jnp
mov
lock
mov
and
sub
adc
or
ja
mov
fsts
jp
adc
andl
pop
jg
into
sub
dec
cli
ret
in
loope
imul
mov
jbe
pop
adcb
dec
dec
adc
dec
rcrl
fistpl
aas
xchg
add
in
lds
jle
mov
push
lret
loop
fcoml
push
cmp
adc
sub
sub
mov
mov
imul
xchg
pop
shrb
stos
push
test
mov
adc
mov
dec
cmpsb
mov
adc
xor
push
sub
inc
mov
push
dec
out
push
push
mov
sub
lret
mov
pop
lea
dec
cmp
pop
aad
xchg
icebp
jg
mov
das
je
add
sahf
cmpsb
dec
xchg
jge
push
sub
push
push
mov
cld
jmp
shrb
jmp
inc
ljmp
pop
movsl
cmp
and
dec
data16
fsub
lds
fldcw
stos
or
dec
sti
aaa
and
inc
jg
or
lret
mov
pop
adcb
jmp
aad
or
jecxz
push
dec
aam
inc
push
dec
shr
mov
pop
mov
mov
xor
rolb
popf
in
pop
popf
popa
mov
lret
mov
mov
xchg
sti
xor
xchg
mov
or
push
add
popa
mov
inc
out
and
out
push
inc
popa
mov
and
or
adc
push
les
aad
insb
dec
mov
inc
aas
pop
inc
sbb
add
ja
nop
lahf
test
mov
sbb
inc
jae
in
cltd
pop
pusha
leave
jo
out
mov
push
ss
scas
ljmp
mov
fists
addr16
pop
xor
mov
jg
mov
xchg
fdivp
popf
test
aam
cld
mov
scas
and
cmp
xor
scas
jnp
stos
das
cmp
cmp
push
mov
sub
jbe
push
mov
mov
pop
push
mov
jae
in
cli
mov
call
xchg
es
in
mov
lret
adc
loop
sub
nop
pop
dec
aad
mov
xor
xchg
cmp
pop
sub
mov
lahf
out
pop
push
jnp
pop
fnstsw
ss
fisttps
jg
mov
pop
rorb
mov
scas
xchg
sub
out
jae
jp
jecxz
xchg
sbb
and
cmc
mov
out
xlat
fistps
faddp
divb
gs
insb
mov
orl
daa
and
je
clc
mov
loop
cmp
andb
pusha
mov
js
inc
jg
inc
dec
rolb
mov
pushf
addr16
ljmp
jae
stc
imul
adc
pushf
cmpsb
ret
cs
add
add
push
jae
cwtl
and
sub
pop
pop
mov
sbb
inc
ss
xchg
aaa
mul
pop
adc
and
xor
push
test
xchg
jl
aam
test
and
mov
ret
mov
lret
fidivrl
and
in
das
ja
jmp
push
inc
push
cmpl
or
das
add
dec
fnsave
or
push
lret
adc
pushf
movsl
dec
into
shlb
mull
pop
xchg
cwtl
fldl
call
dec
lods
lret
popf
mov
sub
jg
cli
push
addb
cmp
testl
dec
jne
rcrl
xor
mov
sub
xor
mov
xor
push
mov
ret
fisubrl
or
dec
insl
nop
stc
push
fiaddl
js
inc
mov
mov
sbb
jae
out
adc
mov
jmp
ds
jecxz,pn
in
add
test
pop
fwait
or
xchg
pushf
aaa
inc
jbe
sub
lcall
cltd
xchg
loope
test
aad
imul
in
dec
inc
xchg
fildll
loope
push
mov
sar
cmp
in
pusha
insl
cwtl
mov
pop
sbb
xor
or
mov
popf
jmp
lods
xor
push
sbb
sbb
mov
mov
cmp
repnz
lret
pop
out
lret
icebp
sub
enter
pop
in
es
nop
sbb
xchg
repz
cmp
std
push
shll
dec
sub
ljmp
mov
mov
andb
fsubrl
insl
dec
mov
inc
inc
sbb
fildl
and
pop
test
xor
push
push
sbb
insb
mov
pop
pop
cmp
cmp
push
cwtl
insb
enter
iret
mov
jne
inc
xchg
mov
popf
les
sahf
xchg
adc
mov
or
pop
fwait
lahf
pop
test
scas
clc
repnz
outsb
test
adc
xchg
cmp
jg
insl
dec
nop
cmp
or
ret
test
push
daa
pushf
or
push
mov
mov
sahf
ficomps
in
adc
sti
insb
pusha
cltd
xorl
xor
iret
mov
jb
xor
ds
xor
or
lret
lahf
cmp
mov
shlb
pusha
push
inc
and
jns
jae
ret
pop
mov
mov
out
in
pusha
pop
ljmp
add
int3
nop
adc
sbbl
inc
ror
cltd
jae
and
sti
fsts
adc
hlt
enter
or
xor
addb
xlat
fwait
or
cmp
aas
adc
mov
icebp
ja
sar
fisttps
inc
cmp
or
out
out
jmp
mov
out
out
lods
dec
add
lcall
dec
push
jge
addl
push
xor
jno
or
punpckhwd
mov
jecxz
mov
int3
fwait
mov
fsubr
dec
mov
dec
inc
dec
and
mov
inc
jp
push
lahf
cmc
sbb
mov
movsl
dec
cmp
add
adc
add
ds
or
lods
xchg
scas
dec
in
in
xchg
in
sbb
rol
ret
cmpsl
lods
out
pop
push
mov
fistpl
ljmp
push
lahf
test
jecxz
into
das
sbbb
ret
jl
scas
scas
std
xchg
mov
xchg
and
dec
mov
scas
sbb
out
repz
fsts
loope
mov
movsl
loope
dec
int3
and
test
arpl
test
sahf
or
jl
or
inc
jle
je
mov
aad
pop
add
push
fiadds
mov
mov
mov
pop
adc
ss
mov
mov
movsl
testl
sub
xchg
add
add
hlt
dec
imull
mov
sbb
xor
sub
in
add
xor
cmp
pop
xchg
lea
push
stos
mov
xchg
cli
loope
jp
mov
gs
gs
push
js
stos
mov
sbb
and
cmpsb
xlat
cmp
incb
lea
dec
mov
xchg
xchg
dec
mov
shl
mov
aam
mov
dec
xchg
sbb
adc
or
jo
jp
movsb
imul
and
iret
mov
inc
dec
incl
lock
cmp
sahf
pusha
dec
loope
inc
fcmovnbe
mov
cmp
xchg
lcall
xor
in
pushf
jae
cmpsl
outsb
cld
sub
jle
push
test
test
sar
dec
mov
xor
fwait
xchg
sub
cld
mov
lock
push
sbb
sahf
mov
and
in
stos
push
lods
add
ja
inc
loope
push
stc
push
mov
inc
aad
cmc
dec
dec
xor
frstor
pop
inc
mov
mov
popf
pop
mov
insl
mov
and
cwtl
clc
or
cmp
cli
jns
jnp
icebp
sbb
push
pop
sub
mov
addr16
inc
pop
pop
loope
xchg
xchg
aad
leave
push
and
or
jo
popf
dec
inc
enter
sub
call
dec
inc
sar
mov
nop
and
pushf
add
jne
xlat
iret
jae
repz
lret
cwtl
and
out
jnp
inc
pop
insb
stos
pushf
jge
scas
out
push
ljmp
ss
xor
nop
les
cs
cli
jg
lea
jle
adc
sub
test
xor
and
jge
pop
pop
pop
out
fadd
pop
es
testb
gs
jnp
cs
fadd
or
mov
gs
mov
jae
mov
andb
pop
inc
dec
jnp
mov
or
or
filds
cli
imul
popa
std
popa
jecxz
js
pop
fldenv
ja
lock
add
pop
cmpsb
shrl
loopne
push
enter
fmull
jle
xor
loope
cmp
and
popf
mov
push
frstor
and
mov
adc
xor
push
mov
push
fcoms
fidivs
mov
or
ja
jecxz
xchg
test
imul
push
fisttps
inc
jns
loope
mov
xchg
mov
and
push
scas
jb
test
xor
jno
jbe
outsb
fwait
loopne
int3
cmp
mov
mov
pop
mov
test
xchg
ret
int
cmp
imul
dec
inc
cmp
lahf
cwtl
cmp
sub
idivb
scas
ss
add
xlat
inc
mov
cld
xor
cmc
dec
loope
add
push
movsl
jns
ret
popa
dec
rcrb
clc
push
enter
push
aaa
adc
stc
adc
cmp
dec
rol
sbb
nop
xchg
xlat
enter
fwait
push
scas
and
test
addr16
inc
imul
mov
dec
add
into
or
shr
and
sahf
in
rolb
add
cmpsb
pop
pop
add
loop
insb
in
cmc
pop
lock
pop
bound
faddl
dec
jmp
and
sbb
ds
test
insl
loopew
test
xorb
testl
jns
fcomps
fs
jns
out
and
sar
dec
mov
ret
xchg
scas
fdivl
dec
lret
add
imul
mov
mov
stos
push
pop
mov
test
pop
push
jbe
fimuls
push
mov
cltd
mov
and
add
xchg
inc
jne
bound
and
stos
test
xor
pop
lcall
pop
push
push
test
dec
shlb
xor
or
rclb
clc
mov
in
std
rorb
and
sbb
filds
lret
push
jge
imul
inc
or
push
mov
jns
push
or
push
mov
sub
jo
shl
adc
jnp
push
push
push
pop
addl
rcll
push
pop
jne
adc
mov
daa
jne
mov
mov
fdivl
mov
mov
cmp
add
adc
int
pop
dec
jp
ficoms
adc
mov
call
xor
cmpsl
xchg
jg
lea
cmp
jne
mov
lea
mov
xor
enter
std
lods
dec
push
daa
lret
fcompl
or
out
add
adcl
ret
icebp
adc
adc
leave
xchg
jae
dec
fs
stc
sbb
inc
or
out
insl
inc
cmpsw
dec
or
xorl
in
xchg
pop
daa
sbb
mov
lret
add
lret
and
xchg
dec
ds
cmp
stc
dec
inc
repz
push
shl
pop
push
cwtl
cli
mov
mov
pop
pushl
test
das
mov
outsl
dec
pop
insb
mov
sub
popf
fistpl
cltd
mov
leave
mov
movsl
push
dec
out
out
mov
repz
xchg
add
pop
cli
int
jno
scas
adc
dec
jne
cld
js
pop
jno
sbb
mov
data16
insl
mov
mov
or
inc
and
jmp
dec
rcrl
jp
add
data16
stc
movsl
push
fidivl
push
ds
add
into
ret
xor
sub
add
jno
sub
xorl
fwait
and
jg
xchg
mov
fcmovnb
mov
int3
ljmp
cmp
in
jo
adc
dec
inc
stos
mov
shlb
sti
push
jnp
adc
pop
cld
hlt
outsl
mov
sbb
lcall
xlat
es
pop
mov
ss
inc
sahf
popf
or
cmp
xchg
shr
dec
push
mov
mov
in
dec
pop
incl
out
mov
imul
ret
or
popa
push
pop
xor
xchg
setl
cmp
cmp
loope
and
cli
ljmp
sti
mov
pop
push
cmp
aas
jmp
mov
adc
adc
movzbl
pop
ljmp
ss
push
test
cmp
adcl
push
bound
pusha
push
mov
sarl
rorb
jmp
sarb
in
lea
jns
popa
mov
xor
jnp
inc
dec
push
pop
push
push
jne
push
sbb
push
jp
pushl
push
ds
mov
jg
scas
enter
mov
xor
movl
aam
sarl
std
lock
mov
mov
xor
dec
sub
push
dec
mov
xor
cmp
dec
scas
mov
adcb
fldt
dec
lock
xchg
jbe
cwtl
push
inc
or
fucomip
fwait
and
in
push
inc
stos
or
hlt
xchg
mov
or
jecxz
jp
arpl
mov
sbb
xchg
add
addb
xor
iret
and
insb
pop
jo
jne
in
ja
outsl
mov
sbb
mov
lods
lret
repz
mov
iret
xchg
pop
mov
cld
xor
mov
insb
pushf
fmul
hlt
push
ret
js
es
xor
mov
sti
repnz
jbe
mov
dec
lret
push
sbb
mov
loope
pop
mov
test
cmp
inc
es
imul
jbe
ret
divl
pop
push
xlat
push
lret
push
mov
or
add
stc
fistl
arpl
js
decl
jnp
and
adcl
pop
out
dec
dec
jnp
sti
inc
xor
ret
add
faddl
sti
sub
cltd
call
jl
imul
stos
mov
sbb
jns
inc
dec
push
push
test
inc
stos
mov
dec
stc
sub
or
es
stc
sbb
sbbb
push
in
movsl
lock
mov
loop
mov
icebp
stos
inc
fldl
enter
hlt
repnz
mov
inc
cmp
ss
sub
ret
cmp
adc
dec
in
insl
xchg
out
mov
or
movsb
decl
lahf
push
cmp
mov
sub
cltd
insb
jns
lahf
xor
mov
or
cmc
xchg
loopne
xchg
mov
sbb
in
addl
gs
add
scas
lds
sarl
and
arpl
mov
aaa
adc
mov
jmp
testb
sub
push
test
jmp
out
sbb
xchg
adc
mov
insb
add
repnz
int3
mov
arpl
insl
and
dec
inc
mov
sub
outsb
sub
mov
loope
sbbb
mov
in
outsl
push
in
dec
xchg
mov
out
jl
mov
aaa
sarb
out
cmp
and
jae
push
inc
aaa
jnp
shrb
jge
sbb
cmp
mov
pop
push
inc
jns
sbb
adc
inc
jge
mov
mov
jo
jo
sbb
sbb
inc
lcall
inc
mov
mov
and
dec
and
xchg
jp
sar
dec
hlt
jo
xor
out
mov
test
imul
in
out
fbstp
jecxz
ret
fs
mov
inc
call
cmp
xchg
fldcw
xchg
repz
mov
or
push
iret
cltd
mov
daa
sbb
mov
xor
cli
aas
or
add
into
xchg
mov
sbb
ss
mov
jo
pmaxsw
jo
dec
fnsave
add
inc
add
test
cmp
adc
dec
arpl
pushf
push
cs
in
pop
inc
aad
jp
jo
mov
mov
push
dec
in
nop
enter
hlt
fcomps
lods
test
adc
mov
icebp
es
call
test
jb
push
subl
stos
mov
sbb
xor
roll
mov
sub
aaa
sbb
pop
pop
jb
ss
mov
out
cld
pushf
xchg
dec
or
push
fcmovnb
pop
jne
or
jmp
movl
iret
push
sub
bound
lods
jmp
push
fcmove
lret
enter
and
leave
mov
mov
jp
inc
fsubl
pop
cmp
push
dec
icebp
sub
cmp
mov
rclb
repnz
cmp
clc
daa
jb
pop
arpl
leave
rol
cmpsb
ficoml
push
xchg
push
outsb
push
mov
shll
ret
push
inc
sbb
nop
mov
add
aaa
cmpsb
sbb
inc
neg
in
ret
add
addb
and
fdivl
mov
sbb
push
mov
jmp
xor
lcall
mov
test
sbb
push
mov
pop
pop
jns
mov
ss
loopne
pusha
jae
dec
lods
lcall
decl
jmp
repz
jne
mov
xchg
mov
pop
scas
loope,pt
mov
je
pop
dec
and
insl
dec
popa
add
xchg
stc
mov
dec
xor
jge
int
aas
sahf
enter
pusha
loop
mov
in
add
std
mov
mov
movw
ret
jo
pop
jmp
add
pop
int3
or
mov
push
mov
outsb
das
adc
adc
cmp
pop
gs
push
or
rclb
popf
cmp
ret
in
dec
outsb
test
xchg
pop
imul
jne
jecxz
fwait
or
add
lock
xchg
xor
gs
add
iret
cmc
je
ret
mov
or
dec
mov
sbb
pop
sub
loope
dec
push
dec
ret
sub
cmc
scas
subb
or
push
rolb
add
jnp
xchg
add
sbb
xchg
mov
test
lahf
push
dec
xor
decl
lcall
ret
jbe
pop
push
push
icebp
dec
mov
xor
sahf
dec
imul
pop
dec
lods
ljmp
and
pop
jae
push
push
fdivrl
ja
fidivs
dec
imul
adcl
fwait
into
pushf
shl
fucomp
stos
popa
inc
inc
fnstenv
and
and
into
sbb
push
lret
push
imul
divb
xor
outsl
and
pusha
inc
imul
xor
and
mov
cli
sub
xchg
pop
jge
clc
inc
cli
and
push
or
mov
inc
gs
jl
jb
lods
mov
push
shlb
pop
hlt
mov
xchg
push
in
cmp
dec
test
mov
aaa
mov
and
jg
sar
lock
in
popf
nop
in
imul
ret
test
lcall
and
and
lret
jg
loope
or
jae
and
mov
lea
sub
dec
cltd
addr16
cmp
mov
xchg
xor
imul
mov
rcrb
adc
fildl
dec
repnz
lds
gs
ljmp
jecxz
and
jle
adc
sub
je
popa
jge
push
leave
mov
xchg
frstor
sub
into
and
push
inc
or
add
les
fsubr
mov
ljmp
je
push
add
sbb
aam
xchg
clc
cmp
pop
cmc
xchg
into
outsb
xchg
or
aad
push
insl
std
xorl
ljmp
dec
pop
fidivrl
mov
roll
aaa
push
xchg
push
jge
stos
add
cld
adcb
mov
xlat
arpl
ljmp
pop
lods
and
cmc
aad
xchg
nop
push
mov
stos
xchg
pop
push
mov
ds
xchg
sub
fsubl
je
jge
fdivrs
pop
sti
or
mov
inc
adc
sub
decb
sub
ret
and
insl
xchg
jmp
mov
es
or
lret
mov
jbe
sbb
sahf
lret
sahf
cmpsb
jae
negl
push
out
lcall
sub
test
cmp
push
das
push
mov
mov
sti
cmpsl
in
adc
mov
push
pop
push
cmp
cmp
or
jno
cmpsl
mov
test
pop
mov
mov
jae
xor
iret
xchg
outsb
mov
loope
xchg
filds
loope
pusha
ret
fcomps
popf
and
add
xchg
repnz
mov
sbb
faddl
push
push
movsl
stos
pop
lock
and
jae
icebp
cmpl
jbe
inc
mul
adc
sbbl
loope
stos
fwait
xor
inc
mov
out
mov
push
xchg
xor
ljmp
inc
mov
in
pop
xchg
xchg
push
int
push
ret
push
js
xchg
xchg
jno
and
test
loopne
sub
add
sbb
cmp
cmp
mov
inc
icebp
xchg
xchg
and
cwtl
ss
dec
pushf
lds
push
mov
pop
mov
mov
inc
je
bound
jge
popa
adcl
jg
push
or
or
adc
push
test
push
jg
xchg
loope
mov
cmpsl
stos
inc
pop
push
cmp
jg
push
stc
insl
icebp
mov
or
push
js
mov
mov
jae
aas
insb
mov
pop
imul
sbb
loop
push
mov
lods
xor
or
push
into
movsl
adc
insb
cmovne
cld
mov
or
push
sub
imul
arpl
movsl
dec
mov
mov
cmpsb
jbe
inc
sub
xchg
aam
cmp
jmp
ds
aaa
sbb
jge
jle
jge
cli
push
das
nop
mov
pop
jns
dec
adc
scas
xchg
pusha
push
mov
push
dec
adc
push
std
xor
rcrl
cmp
les
adc
pop
repnz
ds
movb
inc
and
jbe
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
push
adc
push
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
xor
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
cmp
movl
jne
subl
xor
inc
xor
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
jne
orl
pushl
andl
pushl
addl
pushl
call
mov
mov
mov
mov
movl
inc
movl
cmp
jne
movl
inc
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
movl
add
lea
xor
xor
add
mov
mov
lea
or
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
or
adc
mov
mov
mov
or
mov
xor
movzbl
adc
mov
mov
addl
add
movl
mov
mov
mov
cmp
movl
jne
or
mov
decl
mov
adc
mov
add
xor
sbb
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
and
xor
xor
add
mov
sub
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
xor
xor
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sub
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
orl
mov
sub
mov
add
movl
mov
movzwl
add
mov
adc
mov
xor
andl
xor
add
movzbl
and
mov
xor
xorl
xor
sbbl
add
lea
mov
mov
mov
movl
cmp
ja
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
xor
lea
orl
mov
mov
xor
adc
lea
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
adc
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
movl
sub
mov
or
mov
xor
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
subl
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
subl
mov
xorl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
mov
and
movzwl
xorl
mov
andl
movb
xor
lea
subl
mov
add
mov
and
mov
xor
andl
sub
adcl
mov
add
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
sbb
push
sbb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
push
movzbl
sub
mov
mov
mov
adc
mov
xor
neg
mov
push
add
movl
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
and
mov
sbbl
xor
add
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
adcl
mov
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzwl
sub
mov
add
movzwl
mov
mov
subl
movzwl
addl
xor
subl
add
mov
movl
mov
movzbl
inc
mov
cmp
movl
jne
and
mov
mov
addl
xor
add
subl
mov
subl
mov
xor
subl
add
mov
mov
movl
movl
movl
movzwl
mov
mov
movl
jmp
xor
mov
mov
add
mov
xor
xor
sub
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
xor
adcl
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
jmp
mov
enter
imul
sub
popa
bound
bound
sbb
test
call
xacquire
push
mov
push
repz
and
dec
sub
into
outsb
xchg
fisubl
ss
fiadds
mov
add
outsb
rcrb
sbb
or
push
ss
ja
mov
xlat
cmp
cmpsb
push
push
icebp
dec
add
jb
jne
or
cmp
fwait
pusha
push
cld
pop
adc
clc
shll
jg
fadd
xchg
sar
jp
push
outsl
jle
test
scas
fs
xchg
popf
in
or
xchg
gs
stc
out
pop
pop
mov
rol
push
call
cmc
icebp
pop
sub
test
cmc
inc
mov
aam
push
adc
mov
dec
push
mov
cli
cmp
inc
ficompl
adc
cmpsl
ret
jge
ret
sub
add
stos
push
xchg
pop
mov
arpl
mov
sub
mov
sbb
jmp
or
jb
pop
movsl
call
pop
dec
dec
xlat
pusha
mov
cltd
ja
jge
test
adc
enter
and
fwait
dec
lds
jno
mov
fbstp
jmp
push
push
push
lods
roll
and
and
inc
lahf
and
insb
fsubs
inc
fisttps
adc
and
mov
loope
addr16
lock
xchg
push
push
pusha
rclb
lods
nop
or
add
insl
popf
mov
fdivs
sbb
mov
jecxz
adc
add
jle
subb
out
and
addr16
cltd
hlt
rclb
std
mov
or
sbb
mov
mov
mov
jne
js
mov
dec
jp
enter
push
mov
cltd
daa
and
xchg
push
aas
out
insb
pop
sub
ss
pop
jg
add
leave
mov
in
pop
inc
lea
cmpsb
adc
pop
out
inc
lcall
pop
jne
xor
lahf
call
ljmp
iret
ret
mov
stc
clc
mov
rclb
jno
xor
clc
ds
cmc
inc
test
inc
sub
mov
sub
and
or
sub
push
enter
sub
sbb
or
cmpsb
adcb
pop
pop
outsb
sbb
xchg
mov
mov
js
pop
adc
jbe
jge,pn
cmp
ret
push
fwait
sbb
cmp
pop
xor
pop
inc
xchg
aaa
xchg
ja
cmp
aad
popf
fldz
or
pop
mov
pop
mov
ret
fdivrs
sbb
clc
inc
cmp
xor
push
pop
mov
jge
stos
sbb
ljmp
xchg
dec
sahf
stos
outsl
popa
mov
and
loopnew
das
mov
jno
out
inc
pusha
or
pop
out
cmp
xor
and
ja
sbb
jg
test
and
xor
aaa
pushl
pop
popa
jae
repnz
in
jmp
cmp
pop
pop
mov
pop
sahf
xchg
outsb
mov
push
mov
mov
dec
lock
add
and
mov
jp
jbe
stos
rorb
sahf
or
or
and
cmp
cld
ret
push
js
pop
jne
scas
shrb
dec
fdivs
cmp
cmp
mov
jmp
into
adc
pushf
mov
daa
push
fnstsw
imull
mov
int3
out
pop
add
mov
sbb
mov
push
and
call
mov
push
mov
push
call
dec
xor
ret
xorl
jecxz
sbb
stos
mov
push
sub
nop
cmpsl
fiadds
lahf
pop
loope
lret
xchg
imul
add
mov
mov
dec
sti
jb
cmp
inc
cmp
sahf
dec
rcrb
sub
fbld
lock
dec
sbb
in
pop
mov
sub
cmp
movsb
jns
jg
arpl
aas
jb
mov
sti
push
xchg
add
xchg
lods
inc
mov
jecxz
push
ret
ljmp
imul
jae
cmp
pop
jns
scas
mov
mov
mov
jae
cmc
jmp
sub
in
add
sbbb
int
push
imul
mov
shl
sub
push
cmp
push
inc
inc
je
push
fildl
fldenv
inc
lock
jle
dec
in
mov
push
imul
push
cmp
inc
rclb
add
mov
xchg
shll
bound
pop
xor
js
cmc
mov
addr16
lret
or
mov
sub
mov
xlat
aaa
jno
push
shrb
stc
jno
push
mov
xchg
bound
mov
adc
or
mov
mov
jge
and
lret
call
adc
daa
jbe
scas
movsb
out
push
stos
data16
mov
fisubrs
fwait
repz
push
xchg
inc
mov
int3
or
cmp
xlat
cmp
dec
xor
mov
ja
fs
fimull
cltd
push
pop
sar
xchg
fmull
xchg
andb
jmp
mov
inc
pop
pop
dec
dec
dec
cwtl
movsl
rol
loope
jmp
mov
je
xchg
insb
aas
add
lret
lods
leave
cmpl
aas
sbb
sbb
xor
stos
into
inc
fstl
lahf
stc
push
jnp
sbb
fsubrl
test
arpl
pop
xchg
mov
adc
in
pop
iret
ljmp
lods
subl
inc
jae
add
pop
lret
inc
sbb
pop
shll
pop
out
ds
and
imul
pop
repnz
sub
add
jnp
call
jo
sarb
cli
cwtl
adc
or
add
xlat
add
ror
xor
mov
mov
and
dec
call
inc
movsl
lods
mov
push
inc
pop
sub
stc
jne
daa
rorb
sub
out
and
add
test
mov
je
lock
cmp
cltd
adc
mov
and
imul
mov
orb
lcall
adc
lods
sbb
out
fcomps
adcb
and
sbb
out
jge
mov
fs
jbe
mov
mov
mov
hlt
loopne
mov
pop
jae
jno
in
pop
sbb
fdivrs
mov
nop
leave
mov
into
xchg
lret
sbb
mov
pop
dec
cli
jp
dec
mov
in
out
pop
cwtl
fsubrs
cld
push
or
cmpsb
mov
mov
mov
orb
or
pusha
sub
cmp
mov
mov
addr16
pop
orb
rclb
or
leave
cmpsl
addr16
mov
jb
mov
cmp
fcomps
fimull
shlb
repnz
test
jge
fisubl
xor
mov
or
pop
mov
les
or
mov
loopne
pop
and
pop
popf
pop
xchg
out
xchg
mov
mov
fistpl
test
lcall
test
xchg
in
add
sar
aaa
jns
jecxz
cmpsb
push
dec
daa
arpl
sub
sbb
cld
sub
cmp
xchg
in
addr16
mov
nop
pop
ss
xchg
inc
fcmovb
ja
out
xor
ljmp
cmp
test
pop
fsubl
mov
cmc
jne
fsts
js
mov
adc
jae
or
mov
fcmovnbe
add
or
loop
sahf
clc
nop
movb
push
aas
sub
rol
imul
jle
sbb
test
push
int
fsubrl
sahf
pusha
je
mov
xor
jns
mov
testl
add
mov
lock
shll
dec
push
pop
push
jge
nop
ret
jecxz
nop
cmp
xchg
and
jnp
dec
xlat
xchg
pop
in
lods
std
xchg
cmpsb
xor
xlat
xchg
cltd
pop
imull
loopne
xchg
pop
das
xchg
ja
inc
dec
and
mov
stos
mov
jb
jae
mov
and
cmp
lret
xchg
icebp
imul
cmp
or
xchg
imul
mov
sti
shrb
jp
jo
cwtl
dec
shll
fcompl
imul
fstps
aad
jp
push
cmp
add
cmpsl
mov
sti
stc
add
int3
in
cmp
push
mov
cmp
cwtl
cmpsb
pop
mov
bound
cmp
fwait
pop
out
call
jg
inc
aaa
movsl
adc
mov
fiaddl
inc
and
or
nop
sbb
mov
cmp
dec
addr16
xor
fsubs
leave
sbb
xchg
fnstsw
mov
lock
mov
and
cmp
xor
mov
xchg
xchg
or
int3
fs
dec
arpl
leave
jmp
sti
adc
xchg
ljmp
jns
mov
pop
loope
ja
adc
mov
jno
mov
push
in
ljmp
add
fbstp
sub
add
inc
enter
add
and
popa
pusha
ficoml
lock
jg
repz
gs
cmc
jmp
push
and
cs
call
mov
pushf
cwtl
xchg
mov
cmpsb
push
test
xor
ret
jo
fdiv
test
adc
add
cld
jge
aam
in
and
push
out
jo
dec
lods
fs
outsl
rcll
pop
outsb
mov
mov
fs
mov
aam
sub
mov
push
stos
xor
rclb
pop
and
in
sub
mov
inc
xor
fs
or
push
jnp
hlt
jp
xchg
scas
jle
lret
mov
je
mov
and
ss
inc
test
push
or
sbb
fimull
mov
sti
rcll
mov
out
jno
test
shll
jl
movsl
mov
lret
sahf
in
fisubs
aam
ja
cmp
aas
jmp
push
fldcw
cltd
bound
gs
aaa
adc
sbb
ljmp
or
pop
dec
js
movb
xchg
aaa
loopne
xchg
sbb
imul
mov
iret
popa
push
pop
sbb
jmp
jae
jno
int3
push
int
inc
adcl
jge
movsb
pop
xchg
add
ds
mov
test
pop
jge
xchg
xlat
imul
out
stos
daa
andb
icebp
addr16
mov
in
lahf
pop
xor
sbb
xchg
inc
int3
mov
aam
jl
xor
cmpsl
lret
clc
imul
je
add
jp
lock
jno
mov
sbbb
cmovp
ret
push
in
out
sbb
insl
jp
aaa
in
cmp
das
lcall
push
mov
mov
sbb
and
pop
mov
inc
es
and
imul
xchg
or
je
test
jo
mov
sbb
pop
mov
mov
push
inc
mov
sahf
cwtl
pop
dec
les
or
cs
inc
add
adc
sarl
outsb
jae
xor
aad
loopne
imul
mov
sbb
loop
mov
cmpsl
mov
mov
aam
outsb
stos
sbb
mov
loop
push
mov
jecxz
imul
mov
ret
testl
push
pop
xor
inc
das
in
mov
std
pop
inc
push
adc
sub
push
push
aad
jmp
enter
lahf
mov
out
or
push
or
pop
cmc
outsb
fldt
call
rorb
mov
mov
movb
sub
dec
insl
mov
or
pop
test
aaa
movups
cmpl
loopne
movsb
shlb
cld
iret
inc
stos
fcmovnu
sbb
rolb
and
scas
dec
loopne
out
mov
pushf
lahf
aam
xor
loopne
pop
dec
push
jns
xor
test
ja
insb
addl
imul
push
mov
call
into
shll
repz
iret
sahf
aaa
cli
loop
inc
add
lret
adc
aad
cli
cmp
aaa
jg
rorl
jne
fimull
stc
imul
cli
imull
mov
push
imul
xor
cmp
adc
daa
fldz
dec
xor
dec
fimull
lds
scas
mov
lods
jnp
lds
sahf
pop
iret
xchg
daa
pop
in
loop
jbe
inc
jle
out
cwtl
xlat
inc
push
enter
movsb
xchg
add
add
negb
mov
jp
aad
xchg
cmpsl
gs
es
pushf
rcll
inc
movsb
push
cld
movsb
jne
pushf
jg
sub
pop
inc
push
lods
roll
loop
out
cmp
lods
hlt
jns
int3
jo
shlb
inc
ljmp
jb
lock
lgs
popa
push
adcb
push
and
aas
pop
stos
mov
insl
mov
push
hlt
icebp
jns
add
inc
int
fs
xchg
in
dec
ja
push
xchg
roll
lahf
inc
in
cmc
out
mov
sti
xor
sbb
sbb
jp
or
pop
popa
mov
jo
ja
jns
or
ss
imul
jmp
das
mov
push
and
imul
sub
mov
xlat
mov
int3
gs
xchg
loopne
add
add
mov
fwait
and
jp
ret
xor
movsl
push
sub
pop
cwtl
data16
pop
lds
pop
inc
out
push
insb
es
dec
pop
or
insl
out
mov
addr16
clc
jle
ret
clc
fdivs
pop
dec
shrb
int3
jg
hlt
push
or
add
mov
xor
cltd
or
xor
out
dec
sub
mov
mov
call
out
xchg
mov
cmpsb
adc
adc
mov
adc
pusha
mov
inc
movsl
leave
shl
mov
or
fs
adc
sbb
xchg
xor
js
push
rorb
adc
testl
roll
dec
cmp
xchg
push
bound
add
movb
aas
inc
mov
movsb
xor
and
sub
mov
jo
jp
lods
inc
mov
lds
pop
cmp
jno
xchg
push
lea
xchg
out
or
je
pop
jp
fsubrl
add
fidivrl
daa
aam
inc
pusha
aam
mov
dec
pop
add
movsb
cwtl
daa
cmp
push
stos
add
sub
rclb
inc
dec
loopne
jecxz
dec
sub
adc
sbb
loope
lods
inc
pop
xor
inc
xchg
pop
dec
mov
and
enter
push
aam
ret
mull
pop
movsl
shr
lret
adc
push
mov
popf
cmp
repz
jg
mov
aas
rcll
push
mov
hlt
push
xchg
and
add
push
mov
int3
dec
xchg
and
and
das
imul
dec
cmpb
mov
mov
sub
jmp
int
scas
inc
cltd
sub
lds
outsl
cmpsb
inc
xor
fisttpl
add
negb
adc
lret
jg
cwtl
mov
sbb
iret
adc
mov
mov
ss
in
mov
xlat
pop
dec
sti
in
enter
xor
das
fiadds
ljmp
cmp
mov
pop
orl
ret
leave
sub
fistpl
mov
mov
cmpsl
setbe
scas
ficomps
push
lods
sub
adc
pop
notl
aas
loop,pt
inc
out
and
in
in
mov
or
imul
testb
inc
lods
push
mov
jo
jp
xor
cmpsb
or
xchg
cmpsl
insl
jmp
int3
js
js
xor
sbb
andb
add
test
or
nop
mov
in
xchg
outsl
add
dec
and
and
lods
inc
sbb
mov
insl
add
and
aaa
xchg
push
or
mov
divb
outsb
mov
cmp
cli
dec
add
jp
mov
cltd
movsb
pop
push
mov
mov
or
out
push
gs
mov
imul
jmp
scas
cmp
call
cmp
or
mov
xchg
aad
icebp
push
andb
mov
sbb
cmp
ret
sbb
insl
sub
adc
outsb
je
rcrl
imul
xor
jno
gs
push
bound
sahf
inc
pusha
jle
in
out
pop
xor
repz
mov
fadd
xchg
movsl
pushf
es
insl
push
xor
push
push
sahf
xrelease
shll
fsubl
and
push
pop
mov
call
in
mov
in
and
in
pop
jnp
icebp
cmp
mov
mov
outsl
push
adc
mov
test
or
or
jb,pn
je
cmc
scas
in
pop
std
or
in
jae
jns
push
xchg
ss
aam
lock
jle
xor
stos
repnz
add
ret
ret
cmp
sbbb
arpl
cmp
mov
into
cld
addr16
adc
pushaw
mov
fcmovnb
xchg
repz
xchg
jle
fdivrl
xchg
pop
rorl
popa
pop
mov
mov
icebp
mov
shlb
test
arpl
cmp
ss
mov
push
and
mov
inc
mov
iret
pop
push
pop
dec
jbe
aas
mov
jo
aam
xor
push
mov
and
pop
inc
jmp
xchg
pop
push
popf
jns
inc
dec
stc
mov
xor
sub
xchg
test
mov
jp
adc
fcoms
mov
imul
sbb
fstl
jne
fidivl
sub
jle
rcr
fwait
jle
sub
adc
push
stos
ljmp
in
pusha
push
adc
cmp
fwait
jno
pop
push
dec
lret
sbb
dec
sahf
xchg
in
hlt
inc
dec
test
dec
add
and
ds
cli
mov
pop
pop
mov
xchg
movntq
mov
jnp
mov
imul
or
pop
repnz
jbe
pushf
or
and
jns
mov
xchg
imul
fs
jecxz
iret
cmp
fisttpl
add
daa
insb
inc
add
cmpsl
ds
and
cmpsl
push
cmp
je
adcb
notl
fsubrs
repz
sti
or
jl
imul
push
ret
mov
add
das
sbb
cld
popa
arpl
cmp
aad
dec
push
addr16
fneni(8087
mov
lahf
cmp
cld
in
gs
subl
imul
jp
dec
shll
insb
pop
jmp
jne
add
movsb
std
mov
jns
flds
xchg
xchg
xor
inc
cltd
push
dec
imull
and
mov
pop
nop
add
or
jb
fdivp
call
icebp
subl
lea
hlt
iret
cmp
hlt
or
xchg
mov
jne
repz
xchg
inc
testl
pop
push
mov
dec
jp
sbb
into
sbb
xor
int3
mov
and
mov
dec
nop
dec
pop
jb
rcl
inc
jns
lret
push
push
dec
jo
arpl
inc
outsl
or
pop
jns
fmuls
xchg
or
dec
mov
pop
and
xchg
push
mov
add
dec
adc
fiadds
repz
insl
pop
mov
mov
orb
adc
notb
stos
int3
ret
xchg
data16
into
jmp
cmpsl
mov
adc
jmp
sbb
shl
sub
lret
cs
mov
iret
sbb
shlb
sbb
iret
mov
enter
stc
cmp
sbb
or
out
push
dec
or
cmp
iret
push
lods
sbb
popf
fiadds
and
sbb
dec
in
xchg
xchg
std
cmp
cmp
sub
add
sub
xor
testl
lcall
sub
sbb
xor
cmp
mov
push
sar
push
fldcw
sub
in
xor
push
xor
dec
sbb
jae
xchg
inc
pop
cltd
pop
ja
cmc
sahf
pop
cld
and
jmp
lds
aam
cmpsl
sub
pop
in
sub
mov
les
call
adc
and
or
hlt
aas
pusha
outsl
or
jb
hlt
aaa
mov
icebp
pop
int3
lods
test
lds
mov
sbb
cwtl
jp
adc
push
adc
add
arpl
adc
add
mov
push
push
shll
je
out
sbb
test
cld
daa
xchg
rorl
push
push
xchg
inc
fbstp
cmp
mov
out
int
test
sbbl
scas
in
lahf
addr16
ljmp
insb
sbb
sub
imul
ror
jl
pusha
lock
leave
mov
jl
fcompl
jno
cmp
or
xor
cmp
cs
subl
idivl
push
mov
cmp
jbe
mov
test
push
jl
xchg
push
mov
mov
jno
pop
das
daa
cmpsb
jnp
rcll
xor
notl
mov
push
mov
pop
sbb
push
lea
pop
inc
xchg
test
mov
stc
mov
loopne
jae
movsb
sbb
push
hlt
xchg
mov
mov
jae
xchg
nop
cmovo
push
and
mov
out
mov
gs
or
outsb
fstl
shlb
in
jne
sbb
mov
mov
rcll
dec
and
sub
nop
cmp
mov
stos
rcr
or
fwait
jo
push
xor
pop
mov
pop
jno
sbbl
daa
sub
in
incl
sarb
push
xchg
mov
push
adc
idivb
rorb
outsb
in
adc
popf
push
out
mov
clc
das
mov
lds
lret
scas
lcall
push
adc
xchg
stos
push
xor
rcrb
xor
repnz
flds
int
cmp
xor
lret
ss
mov
popa
jo
out
nop
scas
pop
inc
movsb
inc
testb
jp
add
mov
loopne
push
loope
adc
add
push
pop
in
mov
adc
mov
mov
push
in
cmp
inc
push
lret
xchg
notb
int3
xlat
aad
jo
orb
adc
cltd
or
pop
gs
push
lret
jne
movsl
cmp
leave
mov
sbb
icebp
or
dec
adc
push
fst
or
cmp
fdivp
subl
addr16
jl
out
fistpl
icebp
clc
mov
enter
jns
shrl
mov
repz
xchg
cmp
dec
daa
sbb
hlt
jbe
stos
add
xor
dec
stos
aad
loopne
cmc
lods
adc
or
rorl
int
aad
fcompl
cmpsl
xor
cmovge
cld
jge
push
ja
sahf
mov
xchg
aam
nop
aad
xchg
sub
aas
xchg
out
inc
xchg
int3
and
test
out
out
inc
into
sub
or
jb
xchg
push
ja
pop
pop
adc
sbb
mov
push
std
cmpsl
xchg
cltd
subb
mov
adc
mov
sarl
xorl
and
lret
mov
les
enter
push
and
mov
cwtl
test
movlps
int3
in
sbb
fsubr
and
adc
mov
pushf
inc
sbb
flds
cmc
jmp
adc
or
cld
bound
icebp
and
jae
orl
adc
es
mov
ret
pop
xchg
in
lock
push
sub
loop
not
or
fsubp
push
imul
inc
jg
out
cmp
mov
rclb
or
fcompl
aad
or
or
add
in
push
jns
mov
inc
xchg
popf
call
sub
adc
iret
add
lock
ds
in
cld
sarb
jmp
jae
xor
mov
js
jg
das
cmp
js
jmp
or
sub
je
fdivrl
xor
jns
dec
cmp
and
jecxz
dec
fsubl
mov
dec
in
sbb
shr
insb
cmp
loop
cmp
push
sub
out
lret
loope
aas
fcompl
or
push
pop
sar
pop
sbb
pusha
push
int
imul
adc
popa
mov
testl
pop
mov
adc
test
sub
push
lds
loope
or
inc
in
mov
mov
cmp
dec
xor
gs
enter
dec
jmp
cwtl
xor
xor
rcrb
add
and
cmp
mov
loopne
leave
fs
shl
pop
stos
es
leave
dec
sub
pop
inc
push
or
dec
dec
test
xor
inc
pop
jle
mov
jne
add
lahf
ret
in
and
push
lret
clc
in
imull
pop
loopne
fwait
shll
aam
stos
xchg
sbb
jo
pop
jecxz
imul
stos
adc
push
addr16
insb
dec
fsubrs
icebp
mov
mov
jmp
add
in
cmp
jnp
mov
sbb
mov
pop
push
inc
or
or
imul
mov
popf
lods
and
sub
mov
fs
lods
cld
cmp
into
add
dec
inc
adc
fsubl
dec
pop
mov
xchg
sub
testl
imul
xor
or
int3
and
repz
xor
stos
cld
or
xor
push
scas
xlat
xchg
repnz
push
and
lret
pop
xor
scas
mov
adc
xchg
int3
test
insb
ret
pop
adc
mov
add
sbb
mov
xor
inc
and
mov
adc
push
in
inc
add
aam
inc
sub
fdivrs
adc
xchg
or
push
lret
ret
adc
jno
mov
mov
call
iret
push
push
or
in
or
sub
ja
add
out
jge
flds
mov
filds
jl
loope
mov
sti
mov
stos
mov
in
test
movsb
push
pop
pop
sbb
dec
int3
cs
test
mov
mov
cwtl
sbb
rep
fs
sbb
lock
and
outsl
test
inc
adc
jecxz
or
enter
cmp
push
mov
stos
test
xchg
shlb
jnp
or
mov
adc
out
inc
test
mov
jo
xchg
pop
lods
mov
insl
inc
sahf
push
cwtl
das
xchg
pop
jnp
fcoml
nop
pop
outsb
jmp
cmp
cli
sub
fsubrs
popf
push
pusha
cmp
jle
dec
push
adc
out
stos
mov
ficoml
lret
fwait
lahf
negl
pusha
sbb
add
aad
add
push
push
add
loope
fsts
adc
sub
imul
cli
sub
scas
out
pushf
inc
or
out
cmp
mov
pusha
mov
pop
cwtl
jo
ficomps
in
push
and
cmp
pop
mov
movsb
and
int
push
lock
or
insl
lock
mov
mov
hlt
lock
std
dec
insl
lcall
pop
call
mov
cmc
or
loope
loop
lret
in
imul
mov
pop
push
inc
lods
iret
sbb
or
aad
maxps
or
xor
dec
in
in
iret
jmp
mov
xchg
jmp
shll
cmp
sub
stos
mov
or
mov
sbb
jle
mov
enter
es
testl
inc
mov
nop
dec
daa
ret
xlat
sbb
out
inc
push
fs
ror
adcb
outsb
mov
out
adc
je
ss
xchg
fwait
or
pop
dec
cmp
ss
cltd
ficoms
in
rorl
sub
push
fists
stos
xchg
es
push
xlat
cmpsb
add
or
adc
pop
daa
adc
pop
cmp
fnstenv
sti
test
add
ficomps
insl
int3
les
xchg
js
push
push
ret
mov
jecxz
mov
push
jle
mov
jg
pop
fxch
outsb
inc
mov
mov
xor
xor
push
mov
iret
jae
jno
stc
push
cmp
mov
scas
out
int
popa
popl
mov
ljmp
fwait
mov
stos
das
imul
cmpb
out
lock
in
aam
popf
xchg
roll
mov
inc
or
lret
push
incl
adc
mov
xchg
stos
stc
in
add
inc
and
test
jmp
ja
dec
cwtl
je
jns
mov
cld
add
sti
adc
jg
repnz
nop
jbe
xchg
and
ja
jno
movsl
pop
sarl
jp
pop
int3
cmp
mov
adc
aad
lea
orb
mov
add
outsl
stos
jle
hlt
pushf
stos
mov
adc
sub
pop
and
jb
clc
dec
insl
repnz
in
jae
mov
movq
repnz
xchg
outsb
aam
movsl
aad
sub
cmp
push
inc
mov
xchg
test
pushf
dec
sub
enter
adcl
xchg
adc
insb
xor
push
pop
adc
ret
ret
dec
cs
jp
repnz
push
leave
cmpsl
push
addl
sbb
jbe
jo
or
xchg
repz
cli
pop
adc
mov
aad
pop
push
addl
cli
push
lret
stos
and
push
insl
sbb
int
mov
inc
stos
cmp
mov
lods
xor
cmp
push
and
or
jmp
les
test
jp
ja
dec
cld
inc
jbe
aad
mov
ljmp
sub
push
orl
in
push
iret
mov
sbb
pop
inc
rcll
mov
xchg
cmp
pusha
mov
mov
iret
xchg
cmpsb
insl
push
sarl
rcll
test
cli
imul
sub
push
gs
pop
pop
mov
xchg
data16
mov
outsb
outsb
and
adc
mov
jmp
dec
rcrl
xor
gs
push
nop
xor
loop
or
mov
cld
push
jecxz
xor
ret
sub
xchg
sub
push
test
add
je
dec
mov
pop
xor
sbb
add
xorl
adc
xlat
jg
mov
int3
sub
leave
and
adc
pop
mov
adc
or
and
push
dec
mov
and
dec
inc
mov
push
sub
out
iret
jb
jp
insl
sub
daa
push
lcall
clc
pop
sahf
mov
aam
push
mov
xchg
in
push
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
jmp
cmpsb
or
imul
adc
popa
bound
bound
repnz
mov
jo
mov
and
sarl
xlat
shlb
cmp
gs
mov
push
pmuludq
lahf
sahf
add
mov
lret
out
lods
nop
cmpsl
pushf
mov
loop
enter
lock
push
mov
imul
ret
jae
aaa
loopne
push
cmp
xchg
xor
push
inc
dec
pushl
shlb
mov
jp
inc
outsb
xchg
rol
int
adc
pusha
inc
clc
cli
sub
mov
cmp
mov
inc
rolb
lods
fldcw
mov
sub
sbb
mov
orl
and
mov
outsb
fldcw
sub
mov
cmp
in
mov
lret
add
jae
jl
in
jge
pop
mov
adc
mov
shrl
adc
or
mov
iret
mov
dec
fs
test
inc
in
aas
inc
sahf
ficomps
mov
mov
in
pop
leave
cmp
push
jb
pop
jae
je
cmpb
outsl
fs
ss
imul
notb
jns
test
outsb
mov
adc
jae
aas
divl
je
add
mov
xor
mov
std
cltd
and
lods
mov
imul
sarb
cs
mov
dec
dec
xor
lds
es
cmp
pop
loope
cmp
dec
lds
ret
sbb
lods
out
push
push
enter
icebp
add
aas
outsl
jo
cmp
add
inc
jae
pop
out
and
push
hlt
aaa
stos
call
push
xlat
fmull
sub
rolb
mov
pop
and
lock
add
mov
into
mov
mulb
movsl
mov
popa
out
cmp
scas
push
in
cld
pop
imul
or
std
insb
gs
jno
fldenv
nop
xor
pusha
clc
adc
cmp
popa
push
inc
mov
jnp
pop
push
pop
mov
dec
ficoms
outsl
lret
scas
loopne
mov
sbb
sub
adc
sbb
push
xlat
cmpsl
rep
pusha
orb
mov
dec
adc
push
jbe
xlat
int3
xor
daa
lahf
maskmovq
notl
repnz
xor
push
xchg
inc
or
scas
and
push
mov
inc
sub
cmp
and
ja
cmpsl
dec
in
mov
or
fnsave
test
push
add
cmp
cmpsb
rcr
pop
cwtl
cmpsb
cmp
test
repnz
jmp
sbb
add
cmpsb
icebp
add
pop
sbbl
addr16
cmp
jp
sub
or
sub
jns
ja
je
jecxz,pn
sbb
jg
in
aam
shrl
sub
adc
mov
ret
int3
hlt
jmp
enter
mov
bound
repz
mov
or
jnp
in
es
add
xchg
push
imul
jne
sbb
lahf
or
sub
add
inc
xor
jp
mov
mov
lret
gs
imul
push
adc
xchg
imul
int
ret
test
adc
rorb
out
xor
ja
ds
sbb
xor
fstps
sub
mov
mov
cld
js
aam
xchg
in
jae
ss
decb
jl
es
sbb
test
hlt
sub
jmp
sub
sbb
ss
cmpsl
dec
xchg
and
test
pop
les
pop
push
bound
je
sbbb
xor
loop
mov
mov
aas
push
outsl
or
adc
dec
inc
push
ljmp
xchg
dec
xor
mov
xchg
in
sbb
pop
gs
lods
out
mov
and
fcmovnbe
inc
les
push
mov
aam
mov
test
xor
out
ret
push
mov
jnp
dec
cmp
jp
sbbl
int3
fidivl
sahf
ret
or
adc
adc
pop
sub
movsl
je
jb
xchg
dec
push
jb
stos
lods
and
or
dec
jb
retw
pop
xor
in
inc
in
int
ja
dec
test
cmp
out
xchg
sub
jmp
push
lods
fstpl
stos
adc
cmp
addr16
fildl
pop
movsl
and
mov
daa
mov
scas
mov
fisttpl
mov
sbb
loope
and
or
mov
stos
jmp
pop
pop
cmp
les
loopne
lods
add
test
pop
push
add
test
rcrl
inc
cmc
das
add
add
dec
aam
xchg
mov
mov
addb
lahf
xchg
adc
mov
push
mov
xchg
fstl
sub
lret
xor
loop
jecxz
call
repnz
fcmovnbe
in
adc
fs
loop
xchg
sbb
in
or
push
in
daa
frstor
mov
arpl
imull
aaa
xchg
jle
pusha
jae
lea
push
aad
daa
adc
push
add
push
out
push
dec
mov
cmpsb
xchg
pop
sbb
pop
shl
ds
repz
in
xchg
call
fs
sub
outsb
out
std
dec
pop
xchg
cmp
xchg
arpl
push
mov
jno
gs
fbstp
ret
lahf
in
mov
fstl
mov
out
sarl
std
jmp
add
dec
flds
xchg
sbbl
push
aaa
mov
aas
imul
arpl
sub
movsb
arpl
sbb
icebp
cwtl
cmc
xlat
xchg
mov
inc
push
jge
cmp
cld
lea
hlt
mov
push
test
jmp
inc
fildll
cld
popa
mov
xor
sub
xchg
lods
push
lea
pushf
pop
lahf
lds
mov
aaa
sets
popa
xchg
popf
sbb
dec
insb
js
fsubrp
inc
mov
in
mov
or
inc
or
in
test
es
insb
jno
push
repz
jo
pop
rcr
test
mov
inc
jnp
lret
lods
inc
ss
mov
fwait
cmp
pop
cs
mov
pop
add
adc
ljmp
dec
sti
pop
les
inc
into
lcall
scas
jno
notl
or
mov
dec
fwait
fwait
and
adc
pop
mov
mov
int
add
scas
out
pop
popa
add
mov
addr16
cmpsb
int
mov
mov
jo
std
mov
adcl
sub
xchg
dec
andb
sub
mov
icebp
scas
out
pop
pushf
lahf
inc
bound
f2xm1
add
jmp
adc
xchg
or
jg
cmp
daa
cli
xchg
adc
fdivrs
xchg
and
mov
sbb
arpl
push
gs
out
jecxz
push
push
pusha
cmp
decl
pop
jns
mov
jbe
subb
mov
jno
jle
xchg
and
loopne
jmp
ja
xchg
ds
push
arpl
popf
imul
dec
sarb
std
or
lds
in
push
mov
xchg
test
or
gs
sub
add
test
pop
clc
push
popl
jp
cmp
pop
jo
add
sarl
movsb
cmp
adc
dec
xor
loope
fucomip
mov
jp
jnp
sti
cwtl
aam
xor
push
das
stos
in
push
daa
xchg
rol
repnz
xchg
pop
dec
pop
jl
mov
mov
xchg
jbe
mov
inc
mov
cwtl
aad
imul
jns
cmp
and
gs
shrl
xchg
dec
xchg
iret
scas
rcr
add
jle
fs
out
cmp
and
sahf
mov
cmp
adc
std
movsl
adc
pop
dec
add
aam
mov
xor
ret
and
negb
clc
imul
shrl
push
sub
add
aaa
xchg
push
mov
out
fwait
pop
in
jb
out
movsb
push
std
push
add
imul
and
pop
shrb
adc
push
jnp
mov
xlat
push
pop
cs
arpl
dec
mov
mov
jo
ret
pop
or
lods
icebp
adc
clc
adc
jo
inc
adc
setp
mov
jp
push
nop
inc
mov
pop
inc
ficompl
popl
inc
cmpsl
aas
aas
enter
std
push
mov
inc
dec
fcoml
aaa
push
arpl
int3
jbe
out
sub
jmp
insl
and
xlat
mov
popf
das
lcall
mov
push
sbb
dec
repz
pop
pop
sarb
shlb
jmp
mov
sub
fidivrs
fstpt
cmp
outsb
pop
in
mov
pop
sbb
inc
popf
pop
int
ss
adc
lds
lret
adc
fxch
pop
cmpl
fdiv
imul
stc
push
mov
lock
xchg
jp
orl
cli
stc
mov
add
xchg
jo
push
mov
push
ja
mov
jnp
inc
fdivs
jl
fimuls
adc
push
mov
stc
js
loopne
mov
outsl
cmp
jle
mov
popf
enter
cmp
push
sbb
lock
shrl
pop
lds
jns
and
push
andl
shll
and
or
scas
mov
jo
mov
cmp
jns
and
js
add
sbb
arpl
inc
lahf
push
mov
pop
fsubrl
leave
fildll
cmp
in
inc
out
clc
mov
sbb
push
dec
int
js
mov
or
dec
nop
inc
lods
imul
sub
jae
pop
ja
lea
pop
rcrl
or
pop
das
inc
mov
mov
pop
dec
loopne
sbb
sbb
cltd
es
push
nop
mov
bound
pusha
pop
jns
push
outsl
repnz
out
std
subb
push
repz
or
neg
hlt
cmp
sub
scas
ja
adc
jp
xor
sarl
sub
loope
out
dec
stos
mov
sar
dec
sbb
mov
xor
sub
pop
xor
pop
or
or
xchg
fxch
js
test
lods
mov
div
loope
lods
xor
xchg
push
pusha
aaa
das
add
dec
push
ret
mov
jge
hlt
roll
lods
mov
lds
xchg
addr16
jb
add
insb
pop
vaddss
xchg
jle
ds
jae
and
xor
xor
dec
and
hlt
pop
sar
rcrl
dec
pop
outsl
sbb
cmp
fistl
loopne
push
lds
jge
fcoms
mov
xchg
lcall
mov
pop
add
and
add
or
fdivs
shl
addr16
push
inc
xor
lock
pop
rcrl
inc
stos
hlt
sbbb
inc
or
push
leave
xor
fidivrs
jne
xchg
xchg
sub
shl
test
movsl
push
inc
mov
cli
xchg
jecxz
add
neg
bound
pushl
add
call
ret
pop
dec
jl
push
int
or
ret
mov
jb
xlat
aam
add
mov
push
les
cwtl
sub
mov
rorl
add
clc
sarb
imul
mov
cltd
dec
dec
mov
adc
roll
bound
inc
dec
mov
mov
stc
or
jg
outsb
sub
test
mov
scas
in
and
mov
pop
push
mov
mov
test
into
sub
or
sahf
testl
addl
jno
mov
push
js
iret
imul
cmpsb
xlat
ljmp
pop
sbb
pop
pushf
pusha
sbb
test
ss
cwtl
mov
sbb
aas
cld
imul
aad
clc
enter
and
lret
sbb
aad
sub
xchg
popf
mov
adc
out
sub
and
dec
arpl
push
xchg
push
icebp
imul
xchg
and
lahf
rorl
jp
icebp
shr
into
cld
ret
mov
pop
into
xchg
les
cmpsl
xchg
rcrb
aas
out
jo
jecxz
icebp
cmpsl
stos
gs
jecxz
pushf
mov
arpl
int3
push
jle
inc
adc
int3
shl
xchg
sub
divl
lods
pop
xor
cwtl
sub
stos
adc
adc
pop
sti
cmpsl
xor
nop
sub
and
and
xor
jecxz
xor
sbb
xchg
add
mov
mov
jecxz
xor
shll
lds
or
mov
cli
and
xchg
inc
out
cmp
aad
push
or
dec
sub
mov
test
call
dec
jne
fwait
pop
jnp
ljmp
xchg
js
mov
movsb
pop
out
xchg
test
fidivrl
jl
in
mov
les
fnstsw
mov
ret
leave
insl
dec
mov
pop
sbb
mov
dec
in
and
inc
cmp
push
ljmp
popf
xor
cli
mov
cld
jne
enter
jbe
push
rcll
mov
idivl
fmul
add
cmp
lcall
fwait
sbb
push
adc
loope
fldl
sbb
push
or
fstps
pop
jecxz
ja
fimull
and
sarb
ror
jno
mov
push
mov
rcr
fildl
add
lock
cmpl
lock
es
mov
int
bound
lds
mov
lods
nop
int
repnz
ja
jecxz
and
dec
and
call
mov
fimull
cs
imul
jle
dec
ljmp
loopne
sbb
repnz
cli
nop
cmpsb
sti
mov
xor
mov
cmpl
adc
push
xchg
int3
xchg
xor
pop
jae
and
int
mov
adc
mov
repnz
sbb
sub
test
mov
pushf
dec
test
sbb
stos
inc
jb
adc
push
fdivrp
push
sub
inc
jge
dec
fimull
pop
int3
fisubs
push
movsl
and
addl
stos
arpl
imul
push
mov
jecxz
adc
jno
mov
ret
mov
or
out
jmp
popa
mov
add
imull
pop
mov
test
xor
mov
int3
or
ficoml
mov
aad
xchg
fwait
xor
fucomi
mov
lahf
pushl
mov
out
movsl
rcll
decl
ret
ljmp
pushf
aas
mov
repz
xor
pop
fnsave
shll
jns
into
lahf
aaa
cwtl
leave
cwtl
jmp
pushw
and
pop
mov
sub
out
insb
fists
nop
bound
frstor
mov
out
mov
and
cmp
xchg
lret
std
adc
jnp
negb
ljmp
addr16
rcll
loope
icebp
mov
cmp
jae
mov
sub
mov
sbb
cmp
pop
mov
mov
mov
flds
insl
aas
xor
mov
pop
push
daa
jbe
lahf
fs
push
lret
outsb
int
and
and
fistps
jle
jnp
sub
cmp
aam
aaa
mov
mov
mov
mov
jmp
movsl
cmp
sbb
daa
jmp
data16
pushl
lods
adc
xor
mov
rcrl
out
jns
and
mov
dec
es
pop
leave
lcall
repnz
xlat
pop
mov
pop
test
push
pop
bound
dec
sbb
mov
int
out
push
xchg
push
lea
push
xor
in
popf
cld
lods
dec
mov
or
repz
roll
pop
insb
insb
ds
lods
jle
popf
test
and
mov
dec
inc
and
lea
jae
xor
faddl
and
jp
lods
mov
or
outsl
xchg
dec
out
repz
xlat
mov
fisubrl
jns
dec
into
or
pop
cmp
xor
addr16
test
call
jb
and
scas
mov
or
mov
movsl
stos
mov
int3
and
lock
sub
lds
and
pop
mov
push
sub
jae
cmpsl
cmc
call
out
pop
push
push
push
ss
in
icebp
mov
cmp
mov
cmp
and
insl
loop
outsb
lods
frstors
test
add
fmull
pop
mov
icebp
into
mov
xchg
add
and
mov
loope
pop
leave
sub
or
xchg
repnz
cmp
xchg
push
test
or
jne
jmp
ljmp
mov
jp
int3
jns
push
out
push
jecxz
or
scas
jmp
sub
xchg
stos
adc
adc
icebp
sbb
pop
int
je
mov
ss
xor
mov
in
push
xchg
mov
push
call
sub
test
rclb
sbb
mov
je
cmpsl
dec
imul
pop
pushf
fisttps
test
dec
call
scas
or
rcrl
aaa
lret
pop
sbb
inc
inc
cwtl
or
imul
mov
push
jge
sbb
andl
in
xor
cmpl
enter
mov
imul
lret
sub
pusha
and
xor
ret
je
cmp
sbb
sub
pop
adc
and
mov
lret
sbb
in
push
dec
inc
adc
adcb
dec
out
xchg
stos
sahf
pop
imul
cmc
dec
in
or
lea
inc
enter
dec
js
xlat
push
push
lcall
cld
test
mov
scas
loopne
les
inc
xchg
adc
aam
jl
pop
push
arpl
xchg
inc
in
ret
or
or
int3
fmul
jb
iret
jl
mov
push
mov
cmpl
jg
mov
fistps
mov
mov
repnz
outsl
cwtl
fwait
je
sbb
movsl
pushf
movsb
insb
push
sbb
pop
sahf
push
lahf
push
mov
add
pop
add
mov
lret
jbe
and
mov
cmpsl
cmp
stos
loope
adc
xchg
sub
arpl
loopne
push
jl
into
adc
shrl
insl
sub
jns
jns
popf
dec
rcl
outsb
sbb
loope
dec
sbb
test
pop
jmp
cmpsl
adc
mov
push
push
fildl
pop
jne
sub
in
or
addl
jno
testl
mov
sub
stos
ss
xchg
inc
iret
dec
int3
cwtl
bound
cmpsb
push
subl
std
pop
daa
pusha
loop
inc
add
cmpsb
cmp
mov
stc
gs
aam
fdivrl
shlb
inc
sbb
push
add
mov
dec
fwait
rcrb
xchg
mov
shlb
cmp
rcll
pop
xlat
in
sbb
pop
cmp
cltd
pop
mov
jb
ret
int
push
dec
clc
cmp
sar
out
xor
ljmp
daa
inc
push
ret
out
inc
and
adc
dec
in
int3
push
sarb
cmp
cli
adc
pop
lret
out
pop
mov
into
sbb
push
jg
adc
lahf
dec
aad
xor
daa
cs
cmpsb
mov
cwtl
cmp
xor
jae
mov
add
or
movsb
repnz
sahf
mov
mov
and
mov
in
mov
test
paddusb
in
shrl
mov
push
pop
std
ja
jne
addr16
stc
inc
push
push
dec
push
andl
cmp
pop
div
data16
cvtps2pd
inc
and
aam
mov
cmp
fisttps
lcall
test
add
jb
imul
jecxz
leave
push
mov
mov
in
sbbl
mov
outsb
movsb
mov
mov
jnp
pusha
add
dec
or
mov
sarl
mov
mov
push
fwait
shrb
mov
out
sub
cmp
lea
int3
imul
xchg
into
mov
stos
aad
mov
add
push
nop
adc
inc
mov
xchg
mov
dec
jne
sarb
push
into
xor
js
jle
lock
mov
jno
sub
addl
jg
inc
lock
std
sti
inc
add
inc
mov
arpl
mov
jno
push
push
pop
xlat
aas
iret
lods
jbe
notl
xlat
mov
push
jl
aas
not
fdiv
mov
cmp
shrb
shl
adc
loopne
pop
inc
cmp
and
mov
lcall
cwtl
fcoms
mov
inc
lret
mov
mov
popf
loope
xor
clc
jno
xchg
or
inc
sbb
pop
jecxz
repz
cmc
repnz
and
pop
sarb
ror
pop
sub
pop
mov
and
pop
sar
test
pusha
shll
mov
pop
mov
gs
sarb
jmp
mov
and
enter
or
mov
adc
jnp
pushf
pop
clc
loope
shlb
pusha
hlt
sbb
sub
imul
mov
ret
mov
mov
adc
sub
incl
mov
push
mov
lcall
xchg
cld
fiadds
sub
push
inc
addb
nop
mov
xchg
aas
roll
das
test
jo
incl
adc
sbb
mov
xchg
into
daa
movsb
push
pusha
adc
js
out
ss
je
sbb
icebp
jge
aaa
stc
sub
rorl
inc
pushf
fldl
pop
mov
cwtl
loop
xlat
or
dec
das
xchg
out
aaa
das
mov
rclb
pusha
aaa
lods
mov
dec
inc
bound
sbb
lret
dec
xor
out
mov
dec
stos
test
lea
push
dec
push
int
enter
lret
add
or
sbb
scas
fs
lret
xchg
aad
add
es
mov
cltd
or
clc
popa
loopne,pt
ror
add
mov
out
cli
fiaddl
push
jp
push
adc
dec
inc
fisubs
mov
lods
mov
dec
popa
adc
lds
mov
pushf
int
cli
lret
shlb
rorb
out
sti
xchg
pop
inc
inc
mov
dec
or
pop
imul
mov
out
inc
fs
addr16
mov
adc
outsb
mov
pop
fdivl
pextrw
cltd
cmp
sub
ljmp
int3
ljmp
cmp
repz
dec
lret
xlat
jns
imul
loopne
push
jnp
jno
icebp
idiv
arpl
cmpsb
pop
inc
xor
push
xor
push
pushf
xor
in
sub
lahf
jmp
imul
pop
push
sbb
xchg
cmpsl
loopne
jb,pn
add
sub
call
pushf
xor
or
and
cwtl
cmp
lcall
dec
push
jae
jno
pop
aad
cltd
mov
pop
or
and
mov
dec
add
jno
mov
daa
add
and
mov
sbb
pop
mov
pop
jmp
pushf
dec
mov
rcrb
stos
jmp
push
fistpll
cmp
es
jg
lret
jmp
into
xchg
cmp
xchg
pop
xor
pushf
fstl
sahf
mov
pop
sbb
rclb
popl
mov
rorl
rolb
mov
jne
dec
gs
movsl
inc
mov
mov
pop
xor
pop
fdivl
rorb
ljmp
mov
fiaddl
sti
leave
pop
add
stos
pop
mov
movsb
imul
mov
in
je
jno
cli
inc
popa
fbstp
mov
sahf
es
add
into
pushf
ds
scas
imul
mov
dec
lock
imul
pop
into
xchg
cmp
xchg
aaa
jno
dec
ficomps
xchg
or
xchg
aam
imull
jo
push
pusha
jg
test
jns
psrad
push
xor
mov
adc
movsl
jae
xchg
xchg
xor
ljmp
push
jge
outsb
scas
or
dec
or
xor
incb
dec
adc
mov
cmc
fisubs
loope
in
xor
sub
ds
pop
cmp
pop
loopne
in
iret
mov
aas
frstor
sub
mov
nop
pop
dec
dec
test
pop
fs
mov
xchg
dec
pop
iret
mov
sub
ret
cmp
jle
sti
pop
sahf
pop
ret
movsl
stos
popa
jle
mov
mov
lret
fadds
sbb
shl
mov
xor
das
dec
mov
out
repz
je
mov
push
mov
stos
sub
pop
push
dec
in
ret
iret
dec
pop
xchg
push
sub
fs
incb
sub
add
andb
pop
xchg
out
and
fsts
int
daa
shlb
sbb
cmp
cmp
out
outsl
frstor
pop
inc
push
and
mov
rcrb
add
jbe
push
stos
push
les
xchg
xchg
inc
sarl
jnp
mov
ja
loop
push
das
cld
xchg
cmpsl
pop
mov
inc
icebp
sub
loop
pop
loope
mov
inc
mov
and
rcr
sub
rol
xchg
push
adc
dec
pop
dec
or
ss
xor
push
dec
dec
arpl
imul
jp
sti
mov
inc
and
xor
jmp
sub
jle
hlt
pop
pop
enter
and
adc
or
xchg
icebp
mov
jecxz
mov
mov
lods
sub
rcl
xlat
and
xchg
out
jl
inc
movsb
and
pop
push
sbb
mov
sbb
pusha
rcr
fs
cmpb
nop
jle
jg
mov
outsb
adc
mov
fs
test
inc
push
repnz
imul
addb
loop
loop
repz
jmp
inc
lock
ret
cld
loope
sub
jb
inc
mov
fistpll
add
xchg
loop
aam
mov
out
sarb
je
xchg
fwait
insb
xor
scas
add
lds
in
shll
or
ret
test
ret
cmpl
movsb
jns
sbb
pop
popa
or
cmp
and
push
lock
add
adc
push
xor
nop
mov
or
loopne
xchg
cwtl
loopne
jg
and
pop
pop
adc
fs
jns
lock
xchg
fnstenv
adc
ret
lahf
push
jnp
push
les
mov
into
fcmovne
into
or
push
rcrl
pop
fwait
xor
out
fiadds
scas
cmpsl
dec
jg
xchg
add
push
xchg
mov
sbb
jo
popa
daa
pop
clc
pushf
repnz
mov
xchg
jmp
fbld
dec
sbb
imul
mov
lock
xacquire
add
jecxz
mov
fwait
shr
inc
mov
push
push
in
out
test
pop
test
xchg
xchg
add
xor
cli
xchg
cmpsb
jnp
test
lret
roll
gs
pop
int3
popa
mov
aaa
dec
jbe
sbb
dec
ja
cmpsl
lret
imul
ds
mov
ret
sub
cwtl
sbb
or
push
pop
dec
adcb
push
jl
or
jbe
mov
outsb
aam
hlt
mov
enter
enter
cmp
add
mov
push
out
outsl
dec
and
es
mov
xchg
sbb
sub
dec
test
jnp
or
mov
dec
cmp
jnp
movsl
push
xlat
sub
ret
mov
insl
push
test
sahf
inc
dec
pop
outsl
mov
mov
mov
enter
jo
negb
jp
loope
pushl
pop
mov
fcoml
icebp
jno
loope
jecxz
cmpsb
and
sbb
cmp
or
jns
js
and
int
mov
and
into
dec
push
dec
je
xchg
inc
lahf
das
dec
cmp
rclb
sub
mov
xchg
cmp
test
cltd
outsb
or
pushf
xchg
cmc
dec
adc
outsb
or
mov
cmovae
cmp
in
mov
add
jp
and
inc
imul
mov
rdpmc
sub
notb
push
xchg
rol
pop
mov
inc
ss
andl
sub
ret
orb
push
pop
add
ds
mov
adc
ljmp
xlat
mov
stos
xor
dec
adc
insl
jle
adc
cmp
push
rorb
cmp
in
scas
dec
lock
pop
mov
fprem1
into
pushf
int
mov
mov
sbb
scas
push
hlt
mov
xchg
jl
inc
shrl
or
leave
lds
mov
cwtl
push
lds
fnstcw
les
pop
push
mov
scas
mov
jle,pn
push
lret
xchg
adc
repnz
xchg
ja
adc
or
loope
and
test
jle
in
or
dec
or
gs
loop
fcomp
pop
dec
aaa
or
sub
pop
ror
adc
ret
jmp
fldcw
movsb
ret
push
andl
jns
sub
fimull
call
mov
inc
aad
lds
cltd
call
je
push
sub
punpcklwd
sti
call
fcompl
ljmp
in
cmp
js
adc
sub
cwtl
push
stc
mov
cmp
xchg
pop
movsl
or
push
popl
aaa
test
inc
xlat
jnp
mov
mov
cltd
out
ljmp
push
and
mov
or
jg
fistpl
dec
pop
loopne
fisubs
aas
pop
jecxz
daa
xchg
xor
xchg
mov
jp
jmp
add
insl
pushl
inc
idivb
js
fimull
stos
push
xchg
xorb
jge
cmpb
mov
inc
clc
pop
fwait
inc
push
dec
jo
movsb
mov
ror
jo
sub
popf
cltd
add
fnstsw
outsb
ret
out
decb
daa
dec
in
or
test
imull
pushf
xor
xlat
aas
movsl
add
dec
mov
mov
pop
or
mov
adc
push
sbb
mov
inc
loop
pop
inc
popf
push
gs
fistl
push
jp
add
or
push
shll
or
lock
sbb
sub
cmp
jle
std
int
cwtl
shl
clc
pop
jo
adc
movl
cmp
test
xchg
imul
xchg
das
stc
push
push
lods
sub
xchg
scas
lret
in
scas
scas
js
dec
ljmp
orl
sbb
sahf
aad
dec
mov
clc
cmpsb
loope
shll
fnstcw
sub
loope
stc
ds
bound
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
sbb
add
add
gs
pop
mov
mov
inc
into
repz
sbb
cltd
and
negl
mov
mov
das
mov
mov
sbb
pusha
sbbb
mov
dec
inc
cltd
or
imul
pop
cwtl
add
loopne
aad
mov
mov
mov
cli
lods
adcl
ds
add
add
add
sub
adc
cmp
out
pop
xchg
push
fxch
add
bound
add
nop
ret
and
add
arpl
dec
pushf
xchg
pop
popf
imul
fisubl
jmp
cmp
fimuls
cmpsl
jnp
lret
or
cli
divb
stos
insl
cwtl
add
rcrl
lret
inc
inc
scas
xchg
stos
fbld
mov
sub
jecxz
into
pop
inc
push
and
ret
fimuls
mov
dec
add
add
add
pop
sub
sub
addb
into
add
bound
add
and
sub
fucom
and
pop
jns
popf
pop
stos
dec
cli
stos
push
and
idivb
and
xchg
jnp
cmp
call
mov
dec
fstpl
sub
sub
lods
popa
pop
fnstenv
adc
imul
dec
sti
adc
scas
cs
jne
negb
cmpl
std
jae
jmp
add
add
add
das
and
aam
aam
ljmp
je
mov
add
bound
add
sub
je
xor
sti
test
clc
adc
mov
jno
xor
adc
cmp
fcomip
inc
xchg
push
jb
scas
xchg
js
fimull
push
outsb
sbb
test
adc
lods
repz
dec
push
xchg
push
cmp
loope
push
cli
adc
in
test
frstor
int
sahf
jecxz
adc
roll
add
lret
dec
jle
sti
cmpsl
mov
dec
mov
dec
add
bound
add
mov
push
push
mov
pop
sub
and
in
pushf
lods
jo
lods
or
xor
ret
mov
sub
jae
stc
adc
ret
mov
cmp
mov
test
adc
fcmovnb
es
fsqrt
fbstp
dec
inc
add
test
mov
inc
aad
add
add
add
out
lods
cmp
stc
stc
mov
iret
add
bound
add
push
mov
lret
pushf
testl
mov
imul
or
gs
push
sarb
or
clc
push
scas
pop
inc
sbb
cmp
jmp
dec
jae
xor
shlb
pop
ja
repz
loopne
push
cmp
jne
pop
or
int3
inc
rcll
add
push
xor
gs
aaa
push
mov
mov
bound
add
cmp
cmpsb
rolb
es
dec
xlat
mov
sub
insb
out
outsl
leave
or
in
jp
fwait
mov
aad
and
arpl
cmpsl
leave
jg
mov
cld
cmc
xchg
mov
addr16
jmp
es
jo
cmpsl
xchg
jnp
jl
adc
fwait
insl
adc
jae
test
xor
xor
jae
add
add
add
add
sub
das
jle
jg
imul
sbb
pop
out
add
bound
add
in
cltd
icebp
test
gs
clc
jmp
mov
xchg
xorb
shrl
push
cmp
xor
scas
push
fimuls
aad
inc
in
stos
pop
frstor
mov
push
dec
fcomi
in
ds
in
mov
andl
daa
cmpsb
mov
sbb
pop
insb
movsl
dec
or
pop
sbb
add
add
and
mov
mov
mov
jecxz
add
add
adc
out
into
je
ja
add
movsb
sti
jp
inc
hlt
sub
mov
fdivl
ret
clc
mov
les
mov
adc
ds
in
ficoms
sbb
out
mov
roll
cmc
out
pop
jle
movsl
push
movsl
add
xchg
lcall
inc
xchg
xchg
in
lret
pop
xchg
add
add
add
ret
or
ret
lods
sub
mov
daa
stos
jecxz
add
add
mov
aam
mov
jmp
jecxz
push
cld
lea
xchg
dec
xchg
inc
xchg
xor
stos
fldpi
fdivs
jecxz
fwait
stos
dec
xchg
bound
push
stc
in
sti
ret
sub
adc
inc
lea
xchg
ret
fstpt
andps
and
xchg
or
mull
add
inc
add
add
add
fld
add
ror
outsl
clc
shrb
add
add
add
fimuls
lods
ret
push
fdivs
daa
mov
das
jge
or
cltd
jmp
scas
scas
push
cmp
xchg
inc
mov
sahf
sbb
xchg
or
and
xchg
jl
push
xor
cmpsb
jbe
inc
inc
pop
cmp
mov
ret
pushf
inc
pop
aas
push
lret
loope
mov
add
add
add
popa
pop
lock
out
repz
mov
ret
in
mov
add
or
add
inc
add
sbb
add
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
push
inc
add
inc
add
sbb
add
or
dec
xchg
dec
scas
dec
ds
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
scas
sbb
mov
sbb
add
inc
add
push
inc
add
sbb
add
push
inc
add
sbb
add
mov
inc
add
inc
add
sbb
inc
add
sbb
add
sbb
add
sbb
add
inc
add
or
xorl
or
inc
add
inc
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
sbb
add
sahf
sbb
sbb
add
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
dec
lahf
dec
mov
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
xchg
sbb
add
sbb
add
in
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
les
add
bound
add
nop
in
jb
jg
jle
adc
loope
rcl
dec
push
pop
jmp
push
adc
fisttpl
decb
and
ficoml
sar
mov
jg
popf
out
jge
dec
in
cs
or
push
call
dec
shl
mov
int3
and
lds
aas
adc
mov
adc
add
add
add
mov
push
mov
xlat
push
dec
and
add
bound
add
cmp
sti
push
jnp
rcrb
dec
popf
loope
pop
push
stc
xor
add
aad
fstpt
inc
and
mov
inc
push
orl
dec
jb
sti
movsl
and
sarb
int3
cld
arpl
cld
aaa
cmp
jae
pop
and
mov
cmp
mov
and
test
mov
add
add
add
mov
jg
ljmp
push
sbb
xlat
add
bound
add
fldcw
push
jp
dec
pop
insb
push
cmp
inc
int
push
push
jns
adc
or
push
andl
mov
pop
mov
lock
mov
jle
rclb
dec
jge
adc
scas
mov
dec
sub
stos
jecxz
xchg
adc
cltd
data16
shrb
sub
incl
and
add
add
add
cmp
in
fimuls
xchg
dec
fs
fadds
add
add
and
popf
adc
mov
repz
push
pop
call
shlb
cmp
icebp
sub
push
sbb
loop
xchg
negl
pusha
mov
mov
aaa
subl
imul
pop
adc
mov
sub
or
xor
cmp
add
aaa
rorb
add
add
add
fnstenv
std
negb
sub
in
mov
xchg
fadds
add
add
pop
mov
data16
push
mov
sub
sub
fisubs
inc
fisttpl
test
andb
cli
insb
mov
in
nop
andb
cli
scas
ds
in
mov
outsl
or
adc
or
xchg
adc
adc
and
push
mov
lods
mov
add
add
add
fidivl
xchg
mov
scas
fbstp
inc
mov
stc
repz
add
add
sbb
xchg
inc
jbe
pop
sub
adc
push
add
aaa
push
push
cmp
and
data16
bound
and
lret
shlb
mov
imul
dec
dec
jns
mov
mov
outsl
pop
movsl
inc
sbbb
jne
xchg
and
int3
push
movsb
rcrl
sub
stos
pop
les
add
add
add
add
pop
sub
out
flds
add
add
sub
in
and
mov
call
addr16
mov
sbb
dec
mov
sarb
sub
jo
nop
mov
ss
push
mov
setae
pop
test
jecxz
lds
daa
in
data16
pop
cmpsb
cmp
inc
loopne
fcmovu
iret
dec
nop
lock
mov
add
add
mov
aam
xor
and
mov
add
bound
add
pop
add
sub
xchg
inc
nop
cltd
rcr
out
xchg
add
sbb
test
push
outsb
push
cmp
jmp
loopne
dec
dec
mov
dec
inc
imul
loope
sbb
inc
lret
pop
jae
inc
pop
imul
aam
fs
leave
fldenv
cltd
std
nop
cmp
or
nop
add
add
add
cmp
add
mov
out
sub
push
sbb
add
bound
add
and
test
jo
add
repz
roll
scas
rol
add
jmp
in
sbb
mov
jbe
fmuls
push
mull
lea
jg
hlt
adc
mov
cmp
mov
sub
xor
fisttpll
ljmp
icebp
mov
add
leave
xchg
sahf
fildll
loope
rcl
popa
add
add
add
jmp
repz
fimull
adc
mov
bound
add
cwtl
jl
shl
ds
adc
jno
clc
dec
outsb
xor
push
sub
scas
enter
std
sub
jnp
popa
xor
add
push
and
pusha
cltd
mov
push
pop
lock
xor
dec
adc
in
outsl
jo
xchg
push
adc
enter
and
insl
add
add
add
pop
inc
pop
iret
pop
aad
ss
dec
leave
lea
add
add
stos
bound
stos
cmpsb
icebp
xor
sbb
pop
adc
push
sub
mov
xchg
dec
icebp
jp
cltd
lock
pop
loop
out
cmp
shl
dec
lret
push
repnz
insl
adc
cmc
aaa
mov
hlt
dec
ret
mov
mov
add
sarl
push
cmc
add
lods
add
add
add
fwait
test
jg
in
lods
dec
aas
fildl
add
add
jnp
or
addr16
mov
in
sbb
out
xchg
addr16
gs
fcomip
test
test
mov
addr16
mov
popa
dec
or
cmp
xchg
jecxz
xchg
test
jb
xor
sbb
sub
or
addr16
icebp
xchg
js
rol
scas
inc
ficomps
pop
js
fldt
add
add
add
outsb
jae
lret
jle
repz
into
test
add
add
jle
lods
jg
pop
cli
push
fdivrs
jmp
into
test
stc
or
repnz
movsb
adc
hlt
stc
sahf
sbbb
in
or
cli
push
and
sbb
clc
jae
std
outsb
or
inc
xchg
fisttps
jne
push
sbb
mov
incb
addr16
sbb
push
add
add
add
cmc
adc
adc
mov
lds
add
add
bound
add
pop
ficoml
ficomps
mov
jno
ret
xor
push
push
push
xor
mov
subb
loop
and
cwtl
adc
into
scas
add
sbb
cmp
repz
imul
sub
jnp
sub
pop
ficoms
repz
or
adc
push
mov
and
xchg
sti
testl
add
mov
lock
mov
shrb
add
bound
add
aam
loopne
jge
lret
dec
jp
sub
mov
rcll
mov
sub
cmp
dec
lds
outsl
nop
cmp
sub
pop
and
negl
xchg
sub
bound
insb
or
mov
arpl
cld
out
mov
mov
dec
loop
xor
fiadds
add
add
add
aam
push
lock
cmc
das
sbb
xchg
iret
cmp
sbb
faddl
add
add
mov
outsb
sub
insb
aad
repz
testl
push
shlb
mov
push
push
push
adc
and
jne
xchg
ds
mov
cld
es
push
add
dec
cmp
ret
sbb
sub
pop
push
arpl
add
add
int
xchg
inc
cmc
sti
fildll
adc
add
bound
add
movsb
iret
push
fisubrl
add
addr16
lcall
xchg
cmp
outsl
jecxz
das
mov
cmp
jp
out
out
mov
lea
outsl
jle
cmpsl
test
call
in
mov
jmp
push
jl
pop
fcmove
rcr
insb
jmp
dec
push
fmul
xchg
pop
sbbl
inc
frstor
add
add
fs
testl
data16
fldl
add
add
out
jl
bound
aam
mov
inc
cs
jno
sub
cmp
hlt
pop
fs
mov
imulb
dec
hlt
bound
loope
fisttpll
cmp
js
shll
movsl
jmp
rolb
mov
adcb
sbb
loope
mov
sub
lret
loop
add
add
add
daa
push
imul
int
into
imul
add
add
fildl
xchg
subl
lods
inc
out
shr
std
imul
cltd
jo
out
inc
mov
inc
jo
stos
lret
pop
sub
mov
fs
or
repz
mov
mov
call
loop
enter
pushf
ljmp
jge
and
add
add
add
add
jne
jg
clc
cs
push
and
add
add
xor
mov
in
test
jb
jge
push
sub
stos
inc
fldpi
jg,pt
jp
sti
fwait
xchg
popf
xchg
scas
pop
mov
out
lea
xchg
lahf
mov
insb
mov
sbb
fildll
lods
outsl
shlb
inc
jp
inc
xchg
sub
jo
pop
adc
sbbl
add
add
add
mov
cmp
sti
dec
mov
je
lcall
add
bound
add
and
das
mov
jg
cmp
xor
push
mov
push
cmpsl
sub
and
or
and
and
push
add
cmp
mov
mov
jmp
add
outsl
pop
pop
out
push
ds
cli
and
dec
jl
mov
ret
mov
or
mov
lret
mov
add
add
push
mov
mov
xchg
adc
cmp
bound
add
aam
xchg
jge
dec
mov
mov
and
ja
pop
fwait
stos
enter
ffreep
jno
aas
jmp
mov
pop
push
xor
jnp
out
push
hlt
pop
cltd
out
sub
fstpt
cmpb
adc
fmull
xlat
jle
xchg
outsl
dec
roll
sub
or
jne
mov
in
cltd
add
add
add
add
fisttps
push
pop
and
dec
roll
add
add
push
movsb
xor
dec
xor
sub
fldcw
leave
lods
add
xor
fs
mov
cmp
and
cmpsb
insl
daa
mov
mov
clc
notb
mov
adc
stc
iret
dec
sub
les
or
imul
mov
and
fildl
add
add
add
jle
out
sbb
mov
roll
add
add
in
out
cmc
hlt
aam
fs
adc
imul
or
pop
mov
scas
cmp
pop
imul
aas
jecxz
jp
push
push
xchg
bound
outsb
adc
outsl
icebp
add
jp
jae,pn
and
jne
repnz
clc
xchg
sbb
lret
stos
ds
pop
in
push
and
add
add
and
cmp
push
stos
hlt
psrld
add
add
in
sbb
rcll
or
xchg
idivb
lcall
add
xor
popw
out
or
mov
xchg
nop
dec
push
movsl
in
jl
mov
imul
arpl
test
pushf
xor
or
sarb
fstps
xchg
cmp
ds
xchg
dec
test
mov
dec
add
add
add
xchg
nop
ffree
popf
aam
dec
sbb
jno
add
bound
add
js
scas
xchg
push
lock
mov
call
jl
add
ror
or
imul
test
ret
lret
jb
out
fisttpll
aas
and
sub
es
jb
lret
xlat
sub
sub
test
mov
jbe
sarb
out
andl
cmc
xor
adc
pop
sbb
add
add
add
mov
jbe
hlt
mov
and
cmpsb
in
call
add
add
addr16
adc
push
or
or
aas
mov
sbb
fdivs
test
adc
or
mov
lods
sbb
aaa
lcall
add
jb
call
pop
and
hlt
or
push
push
cmpsl
popa
add
add
fcomp
pop
jge
push
xor
ljmp
add
add
xor
into
mov
sub
out
rcrb
xor
add
add
pop
or
lods
jns
add
sar
push
pop
xlat
pop
stos
repz
aaa
sub
add
ret
fs
ljmp
mov
fistl
daa
repz
lret
jne
divl
lea
in
jae
or
jae
mov
and
test
push
xor
inc
scas
jg
aad
data16
add
add
add
in
outsb
and
pop
mov
xchg
roll
add
add
shrl
movsl
pop
cmp
mov
inc
cmp
les
sbb
loop
insl
mov
push
dec
add
push
mov
mov
mov
xchg
sub
inc
xchg
pop
push
add
xchg
xor
cld
sub
pop
icebp
jbe
push
shr
fcoms
sub
rcll
add
add
add
add
mov
and
cmp
add
bound
add
or
pop
bound
mov
out
int3
mov
push
sahf
cmpsl
push
daa
nop
mov
push
adcl
stos
sbb
and
and
cmc
nop
rcll
fs
push
sub
repnz
out
movsb
movsb
lock
inc
sbb
mov
adc
and
xchg
xor
add
add
add
mov
and
jg
call
into
inc
mov
dec
mov
mov
bound
add
fimull
lret
jae,pn
loopne
cmp
fwait
insl
cs
add
sarl
xchg
js
scas
lahf
lahf
cld
test
insb
jge
imul
leave
lods
lods
rcrb
pop
pop
mov
imul
ja
push
test
fdivp
jl
in
daa
mov
lahf
mov
lcall
add
add
add
fisubrs
cwtl
sar
repz
icebp
push
mov
add
add
movsb
inc
je
cmp
stos
rsqrtps
mov
adc
dec
xor
jb
jmp
xchg
mov
lock
or
mov
mov
sbb
sub
mov
lods
xor
xlat
cld
movsl
pop
mov
xchg
lret
loope
in
clc
rep
in
and
push
lods
sub
add
iret
aaa
add
add
add
add
int3
sbb
out
loopne
lods
inc
imul
aad
add
add
xchg
insb
dec
add
into
cmc
inc
int
push
int3
xchg
jl
mov
imul
push
push
cld
cwtl
jmp
pop
test
in
inc
outsl
imulb
fnstcw
aas
mov
ficompl
fstpl
sub
xchg
mov
shlw
jmp
js
and
fcmovnbe
add
add
add
push
test
fildll
jle
adc
bound
add
mov
stos
adc
mov
dec
fwait
movsb
out
jge
movsl
dec
push
push
xor
jbe
aas
jnp
mov
add
loop
adc
sbb
xchg
and
mov
jl
testb
or
cmp
outsb
add
dec
cmp
jb
dec
out
jmp
sub
add
add
add
fwait
loope
sub
sarb
add
aad
add
add
popa
aas
dec
and
or
hlt
in
and
stos
imul
aad
mull
pusha
jmp
cmp
les
mov
sti
mov
jecxz
xor
shrb
xor
cwtl
out
mov
fiadds
dec
xor
mov
das
dec
aam
mov
test
fld
add
add
add
or
ja
dec
cmp
dec
test
jno
add
bound
add
shrb
adc
mov
cwtl
and
or
cmpsb
out
sub
xor
adc
in
enter
push
js
arpl
data16
and
fnstenv
faddl
call
jbe
sub
faddl
shll
loop
mov
fs
test
jge
in
das
mov
add
add
add
arpl
jge
mov
daa
mov
add
bound
add
bound
shrl
into
shrb
loopne
lods
scas
pop
jl
sub
movsb
inc
aam
mov
pop
in
aas
mov
fstpl
int3
bts
and
lods
and
cmpsb
cmpsb
dec
scas
push
mov
pop
in
fiadds
adc
addr16
sub
cmp
test
sbb
mov
andl
adc
add
add
add
daa
ss
xor
and
enter
add
bound
add
dec
pop
push
ds
enter
pop
inc
ja
roll
out
add
icebp
stc
xchg
decl
sbb
jnp
and
dec
mov
cmp
scas
test
or
clc
pop
adc
jne
test
fnsave
xadd
push
loope
lds
int
lods
dec
sahf
stos
push
jne
sbb
sbb
add
add
add
out
mul
aaa
cmc
xchg
lcall
mov
add
bound
add
mov
xor
pop
sarb
xchg
scas
adc
lret
into
xchg
mov
hlt
lret
inc
inc
dec
cmp
jns
in
cmp
cld
or
lcall
mov
hlt
jb
ja
xorb
out
fidivs
lods
jae
pop
jl
push
xor
aad
push
test
add
push
aad
out
fucomip
ss
cmp
pushf
push
bound
add
cmp
int
jns
test
adc
sub
jbe
fisttpl
mov
test
mov
lret
or
xchg
sub
shr
jbe
loopne
and
test
sbb
shlb
popf
mov
xchg
add
or
inc
scas
fldcw
sbb
inc
add
add
add
outsb
jbe
lret
outsb
negb
xchg
xchg
jne
add
bound
add
outsb
mov
stos
sbb
lock
call
insb
lea
inc
cmovne
icebp
fists
aas
mov
xchg
test
repnz
shl
mov
mov
call
iret
lcall
cmpsb
add
push
cmp
xchg
push
or
jnp
dec
push
cmp
jle
add
add
add
cmp
paddsb
nop
shr
into
lret
filds
add
add
sub
decl
arpl
xchg
adc
popf
jbe
or
repz
xor
cs
cmp
inc
leave
dec
aas
inc
add
dec
adc
shlb
pop
fdivrp
pop
sub
es
push
mov
mov
add
push
cmp
gs
jns
lret
adc
add
add
add
xchg
cmpl
push
loopne
lcall
add
bound
add
cmpsl
shll
sbb
mov
les
or
xchg
cmp
leave
add
cwtl
shrl
push
mov
jg
cmp
sti
test
jb
scas
lea
add
adc
add
sub
mov
lea
add
sub
sbb
add
add
fincstp
shl
frstor
pop
dec
stos
push
inc
dec
fwait
loopne
add
add
add
cmc
mov
xor
test
xor
leave
stos
or
out
movsl
xchg
adc
mov
pop
mov
test
inc
push
scas
mov
loope
inc
sub
inc
jg
cmp
cmp
mov
fiadds
adc
dec
xor
mov
add
add
add
outsl
mov
jmp
push
fcmovu
in
push
cmc
inc
std
loopne
add
add
decl
test
push
pop
dec
jmp
mov
add
ret
mov
test
into
sbb
lods
pop
cmpsb
subb
push
fcomps
jbe
xchg
mov
daa
jecxz
pop
push
mov
push
imull
mov
cmp
fsubrl
rolb
xchg
jae
imul
fwait
nop
mov
and
std
push
gs
add
ja
inc
lods
ds
add
add
add
stc
sbb
inc
jecxz
mov
arpl
add
bound
add
in
mov
fs
scas
subb
lahf
insl
movsb
xchg
mov
fbld
and
mov
dec
add
adc
loope
add
or
dec
add
mov
out
dec
shll
jae
xchg
popa
mov
and
test
mov
es
pop
jge
xchg
xor
pop
push
popa
push
add
add
add
add
mov
mov
icebp
and
leave
lret
add
bound
add
mov
mov
push
xchg
addr16
aaa
add
inc
scas
and
js
rorl
jns
lods
adc
xor
pop
arpl
iret
pushf
lcall
mov
mov
outsb
movsl
std
mov
xor
mov
sbb
mov
or
push
or
out
inc
scas
mov
add
add
add
xlat
repz
das
cli
fists
dec
es
aad
dec
jb
loop
add
add
std
and
pop
mov
push
test
xchg
inc
cli
or
mov
cmp
or
leave
pop
jecxz
jmp
lret
fidivs
mov
in
mov
adc
xchg
outsb
mov
sbb
dec
aas
scas
jno
shrb
push
inc
mov
arpl
add
add
add
mov
push
adc
cwtl
out
xchg
adc
add
add
daa
jae
sbb
or
sbb
out
or
ljmp
je
clc
notl
fcoms
push
movsl
hlt
cmp
js
dec
mov
movsl
jo
je
js
mov
cmp
dec
addr16
mov
mov
add
dec
inc
mov
lods
daa
push
shll
popa
pop
and
ficomps
add
add
add
add
inc
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
sbb
add
push
cmp
add
add
add
add
add
add
add
add
dec
cmp
add
add
inc
iret
add
pop
cmp
add
add
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
