push
mov
sub
and
mov
xor
mov
mov
sub
inc
push
mov
movl
mov
sbb
sbbl
mov
and
orl
orl
mov
or
mov
neg
mov
cmpl
mov
movl
mov
movl
jmp
mov
mov
jle
pushl
call
add
mov
or
or
or
sbb
add
cmpl
movzbl
mov
movzwl
jmp
movl
movl
jne
push
push
push
push
call
adcl
sbb
inc
adc
and
mov
addl
sub
mov
mov
sbb
mov
orl
orl
lea
xorl
mov
add
mov
and
mov
cmpl
not
movl
jmp
movl
movl
jle
push
call
andl
addl
add
sub
or
xor
xor
mov
sub
or
mov
add
mov
sbb
mov
mov
mov
shrd
cmpl
mov
mov
mov
mov
jmp
movl
movl
jge
pushl
push
pushl
push
call
addl
subl
movl
sub
dec
shr
mov
mov
xor
xor
subl
or
movzwl
or
mov
mov
movl
cmpl
movl
movl
movl
jmp
movl
mov
jbe
pushl
pushl
push
push
push
call
addl
adcl
movl
movl
cmpl
mov
movl
jmp
mov
jl
pushl
push
push
call
sbbl
xorl
notl
xorl
decl
cmpl
movl
movl
jmp
movzwl
jb
push
pushl
pushl
push
call
add
subl
andl
decl
andl
cmpl
movl
movl
jmp
movl
movl
jl
pushl
pushl
pushl
push
push
pushl
call
and
movl
subl
addl
orl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
push
push
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
jmp
push
lods
and
cmp
sub
pushf
jmp
stos
sbb
sbb
and
sbb
mov
mov
cmp
cs
adc
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
jp
clc
xchg
xorb
jle
sti
xchg
mov
arpl
jmp
adc
mov
sub
mov
push
mov
inc
add
inc
add
xor
repnz
mov
dec
insl
stos
lahf
lret
add
lock
sbb
into
pop
pop
cmp
push
inc
inc
and
mov
xlat
jl
pushf
movsl
movsb
or
xor
imul
push
rol
sahf
stos
mov
fs
fcoml
xor
rorb
out
in
movsb
dec
shlb
shrb
adc
dec
scas
add
popa
sahf
push
popa
in
sub
push
push
push
xchg
xor
dec
push
test
stc
andb
jo
pop
jnp
not
mov
lea
cmp
xor
insb
ljmp
aas
rcll
outsb
fcompl
mov
mov
xchg
imul
jne
test
lret
cmp
mov
pusha
sbb
xchg
mov
sub
fadds
or
scas
mov
xor
add
arpl
lea
jp
movaps
iret
out
adc
or
mov
mov
jne
lock
cwtl
dec
stos
mov
pop
jecxz
test
bound
sub
mov
adc
xchg
lds
outsb
ss
mov
movsl
sub
mov
outsl
lcall
test
add
out
add
mov
das
les
in
mov
xchg
lds
xor
jl
fbld
push
cmc
movsl
scas
adc
fwait
inc
in
mov
js
je
out
popl
flds
icebp
jae
mov
mov
test
or
sbb
test
cmpsb
jge
cmovo
mov
jae
or
outsl
jb
out
std
push
pop
test
out
mov
in
icebp
push
mov
push
jo
push
lods
rorl
sti
sbb
push
movsb
cs
mov
sub
pop
mulb
cmp
or
or
sub
jno
fstpl
jle
pop
repz
jle
mov
dec
xlat
push
inc
stc
repz
movl
and
inc
mov
xlat
and
xchg
xor
insb
cmpsb
out
push
out
push
pop
pushf
cmp
and
fnsave
mov
in
imul
mov
insl
clc
pop
or
adc
int3
popa
add
add
jecxz
xchg
mov
aad
mov
cmp
add
add
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
jle
push
push
call
adcl
addl
subl
orl
mov
xor
movl
xor
movl
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
je
push
pushl
pushl
pushl
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
ja
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
movl
sub
movl
not
mov
shl
andl
mov
xorl
push
push
push
push
orl
call
cmpl
movzbl
movl
mov
movl
jmp
movl
jge
pushl
call
adc
orl
or
mov
mov
or
and
mov
mov
dec
xor
or
mov
mov
sub
cmpl
movzbl
mov
mov
jmp
movl
je
pushl
push
push
push
push
push
call
addl
sbb
or
or
not
mov
mov
sub
xor
sub
mov
lea
or
mov
mov
xorl
or
orl
and
mov
or
sbbl
xor
movl
cmp
jne
sub
mov
mov
orl
shrd
add
shr
mov
cmpl
mov
mov
jmp
notl
movl
jl
pushl
push
call
movzbl
sub
mov
mov
add
xor
add
mov
or
xor
or
adc
mov
dec
mov
adc
mov
addl
shl
xor
andl
xor
notl
or
mov
mov
cmp
movl
jne
mov
mov
xor
mov
xor
or
xor
xor
sub
or
mov
sbbl
mov
shrd
mov
xor
mov
andl
xor
shr
mov
xorl
xor
orl
or
shl
movl
sub
andl
mov
mov
mov
and
add
or
mov
sbb
mov
or
mov
shrd
shr
movzbl
sbb
mov
mov
mov
jmp
stc
dec
popa
test
mov
sbb
and
sbb
adc
sbb
mov
jo
jno
jnp
mov
inc
jb
lret
add
xchg
fnop
dec
stos
call
mov
popa
lds
xlat
je
sti
sti
shll
cmpsl
int
add
aad
icebp
sub
subl
shl
mov
jg
rcrb
cwtl
pusha
testb
aaa
in
xchg
lds
fsts
dec
int3
ja
outsb
mov
pushf
nop
cli
jne
cmpsb
mov
jb
mov
test
or
lods
jb
js
jbe
xchg
cmc
lods
mov
fs
sbb
nop
imul
int3
ja
mov
jge
and
ret
xchg
fcompl
movsb
adc
push
xchg
inc
js
sbb
lods
and
outsb
hlt
fisttpll
test
orl
push
and
push
dec
fcmovbe
hlt
sub
add
xor
cltd
into
xchg
xor
cli
push
pop
sbb
imul
add
mov
pop
fsts
inc
cld
leave
popf
jecxz
ret
mov
test
mov
int
cs
push
ljmp
sub
xor
mov
mov
sub
cmp
aam
insl
xchg
cmp
jne
add
cs
inc
xchg
rol
push
clc
lods
lahf
dec
add
ret
enter
data16
stos
push
imul
xor
sbb
or
sub
in
push
pop
out
inc
xlat
or
add
faddl
pop
xor
push
jns
xchg
jmp
daa
popa
nop
jne
fwait
push
mov
in
or
adc
mov
pop
dec
jmp
mov
dec
jns
shrb
xor
push
mov
repz
xorl
xchg
ds
out
loopne
cmpb
scas
repz
jae
or
test
loope
push
mov
jle
fs
push
ret
sub
mov
nop
cwtl
mov
or
mov
push
dec
jbe
inc
xchg
inc
int
xlat
mov
sub
cs
gs
mov
scas
aam
lea
js
xor
es
inc
in
sahf
or
mov
dec
sahf
adc
mov
imul
cs
das
sub
dec
jne
call
loopne
pop
dec
fidivrl
out
pop
xchg
test
jbe
adc
and
inc
mov
js
pop
or
aas
sti
xor
mov
call
jno
push
sbbb
mov
out
stc
mov
ljmp
cld
in
add
iret
aam
movsl
divl
je
dec
cmp
into
div
sub
mulb
xor
mov
aam
jnp
pop
pop
movsb
or
fsubrl
push
testb
test
dec
jp
dec
and
iret
sub
shl
xor
mov
adc
or
add
mov
sub
mov
sbbl
shrd
xorl
shr
mov
sub
mov
addl
mov
xor
adcl
xor
or
shl
jmp
pop
sahf
pop
add
cmp
inc
inc
mov
sub
sbb
and
sbb
mov
int3
pop
es
jl
mov
xchg
sub
mov
lds
mov
stc
sbb
cmp
leave
shll
mov
inc
and
xchg
cmp
mov
mov
loop
xor
rcll
ds
lahf
adcb
mov
loope
enter
aad
jmp
sahf
leave
add
or
adc
mov
or
cmpsb
data16
adc
shrl
stos
out
fcoms
or
subl
xchg
orb
push
mov
mov
sbb
mov
cli
out
lret
mov
dec
or
stc
sub
sbb
mov
and
xchg
mov
fldt
daa
lret
out
mov
xchg
sbb
jbe
push
ficompl
test
fldt
push
jb
int
ficoml
inc
xchg
pop
xorb
in
cmp
jne
ret
cmpb
in
mov
scas
loope
stc
cmp
jge
stc
push
enter
xorb
aad
mov
minps
bound
iret
xchg
popl
sbb
into
insb
xchg
fildl
push
mov
popfw
xlat
push
push
std
addl
ret
dec
pop
mov
mov
mov
lahf
inc
bswap
push
int3
jae
mov
lahf
push
dec
scas
stos
sbb
adc
jns
jp
into
xor
dec
in
movsl
les
jno
in
movsl
xor
popf
pop
push
mov
sub
stc
push
pop
and
mov
ret
mov
mov
out
popa
insb
add
mov
cmpsl
pop
sbb
mov
mov
test
jge
jp
aaa
test
pushf
jbe
cmpsl
popa
cmp
nop
mov
xor
imul
cld
cmpsl
lahf
mov
movsl
pop
lahf
jp
je
pop
lahf
fnsave
pop
das
test
push
les
jg
add
lds
lret
ja
gs
out
mov
inc
jg
xchg
pop
out
ss
jne
loope
push
ret
nop
pushf
aam
xor
push
ds
push
repnz
fidivrl
jl
fmull
mov
push
insb
jmp
lcall
test
pop
xor
addr16
inc
cmpl
out
xor
aad
popf
test
jle
cltd
loope
pop
fwait
mulb
push
pop
xchg
ret
shlb
xor
push
pop
mov
cmp
into
mov
pushf
data16
or
adc
in
andb
sbb
mov
sar
movsl
test
inc
dec
cs
add
repnz
gs
jb
mov
dec
jnp
shrl
repnz
xchg
adcl
add
movb
add
lods
rolb
subl
shr
cmpl
mov
movzwl
jmp
movl
jae
push
call
xor
not
movzbl
adc
xor
or
or
addl
adcl
mov
mov
mov
sbb
xor
sbbl
mov
xor
or
sbbl
shl
andl
imul
mov
orl
mov
shrd
mov
orl
mov
xor
shr
movzwl
sub
mov
mov
mov
adcl
xor
addl
or
shl
addl
sub
jmp
inc
ds
cmp
pop
mov
sbb
and
sbb
loope
fisubs
add
ret
dec
loopne
mov
ljmp
int
inc
mov
out
lret
xchg
pop
divb
fnstenv
xchg
push
push
arpl
push
hlt
push
or
mov
call
or
movl
add
xchg
and
dec
mov
out
inc
adc
hlt
push
push
cwtl
xchg
fidivl
sbb
mov
aam
jb
mov
cs
cmpsb
int3
lret
push
push
cld
mov
dec
inc
decl
mov
shrl
roll
aam
aaa
cltd
imul
jae
or
sbb
xchg
cmp
in
adc
arpl
cwtl
iret
leave
ret
and
mov
orb
ss
mov
ret
lea
cmp
adc
ror
lods
fwait
mov
aaa
rcrb
stc
pop
outsb
cmp
push
lods
adc
sub
clc
test
push
imul
jge
movsb
cmp
mov
mov
loop
das
cmc
idivb
cmp
cmp
inc
shll
mov
out
out
adc
sub
addr16
out
xchg
cmp
lahf
mov
jns
lahf
mov
fs
mov
inc
imul
push
ret
aam
repnz
hlt
xor
sub
clc
sbb
inc
dec
pop
loopne
shlb
push
or
xor
pop
shll
add
sbb
xchg
inc
iret
push
and
rorl
sbb
lret
sub
cmp
xchg
sbb
mov
mov
xchg
add
xchg
push
fld
inc
inc
sbb
xor
xchg
incl
mov
adc
stos
add
or
add
jns
lret
mov
jecxz
push
mov
mov
push
mov
insb
addr16
shll
xchg
addb
mov
decl
mov
pusha
mov
dec
adc
add
xchg
and
push
mov
sub
das
gs
pop
stos
jmp
or
adc
je
push
jnp
pop
movsl
lea
lods
ret
clc
xchg
ja
or
or
test
ret
inc
insl
sbb
lret
cmpsl
jp
scas
enter
lods
nop
cmp
shlb
jb
mov
cmp
inc
xchg
fistpl
mov
dec
sub
sub
shll
xchg
in
sub
cmp
push
dec
imull
push
sarb
jle
arpl
test
xor
pop
pop
cmpsl
mov
xchg
and
das
call
cmp
adc
cmp
cs
sub
xchg
sub
xchg
out
dec
jmp
dec
pop
push
in
jle
mov
divb
gs
js
mov
jecxz
add
inc
hlt
movl
cmp
movzbl
mov
jg
cmpl
mov
movl
mov
jmp
mov
movl
jae
push
push
pushl
push
push
pushl
call
and
and
sbb
negl
or
xor
xor
add
mov
inc
mov
subl
shrd
andl
mov
mov
xor
addl
shl
decl
xor
andl
or
shr
cmpl
notl
movl
jmp
movl
mov
jge
push
push
push
call
mov
mov
add
xor
xor
xor
not
and
adcl
mov
addl
mov
subl
mov
and
mov
shrd
jmp
dec
lods
adc
pop
movsl
cmp
stos
sub
jae
cmp
sbb
and
sbb
mov
mov
cmp
dec
add
jbe
aaa
mov
jmp
push
frstor
cld
imul
shl
jo
sub
sti
adc
mov
adc
add
fwait
jmp
out
ja
movsb
and
aam
xchg
data16
mov
mov
int
pop
cmpsl
cwtl
lahf
je
adc
andb
sbb
push
cmp
mov
loopne
jno
jmp
mov
nop
mov
xchg
cmp
xor
jg
sub
imul
jbe
cmp
insl
mov
pop
jb
repz
adc
pop
inc
push
inc
dec
pop
lcall
mov
dec
shll
cwtl
cmc
js
xchg
fwait
add
negb
std
inc
sbb
push
add
xchg
loop
xchg
add
repnz
sbb
mov
jb
and
xor
sahf
lock
pop
adc
pusha
sbb
jge
mov
add
insl
pop
pextrw
add
pusha
sub
ficompl
pop
push
mov
je
ret
xor
ss
adc
cmpsl
mov
lret
leave
xchg
clc
fildl
xlat
cmc
xchg
int3
sub
mov
andb
xor
sbb
mov
mov
cmpsb
sahf
sbb
pop
push
push
mov
mov
cmp
xor
mov
stc
pop
and
push
cmp
pop
out
inc
lods
adc
dec
cmp
fcoms
inc
lock
jmp
loop
pop
fsubl
adc
in
sbb
repz
mov
sub
push
push
dec
test
rolb
inc
push
pushf
pop
add
mov
aas
addb
jns
repnz
scas
leave
jecxz
sub
nop
xor
mov
mov
sub
iret
sbb
cmpsl
pop
pop
push
shll
cmp
xor
cltd
hlt
xchg
xchg
cmp
add
ja
cmp
addr16
lea
movsb
mov
mov
push
sub
and
jecxz
cmpsb
add
add
loopne
mov
jmp
call
pop
pop
inc
loope
adc
out
bound
gs
cmp
rcrb
cmp
and
mov
mov
sub
push
rorl
pop
xor
jmp
clc
lds
pushf
xlat
xchg
and
data16
dec
adc
out
xchg
add
dec
lcall
sbb
xchg
adc
ficompl
xor
in
xchg
pusha
add
mov
dec
cmp
pop
or
mov
push
adc
stos
fnstenv
pop
xlat
sub
ljmp
sub
add
sbb
add
add
ret
xor
sub
out
fnstsw
sbb
mov
and
sbb
pop
sti
loope
or
adc
sbb
and
xchg
sbb
std
dec
pop
jecxz
sub
mov
push
mov
mov
sbb
pop
sub
in
sti
mov
movsl
jns
add
pop
enter
mov
mov
xlat
in
shl
orb
or
icebp
jno
pop
lock
jbe
lds
dec
or
sti
mov
jnp
repnz
rep
lahf
add
das
adc
xor
repnz
mov
add
xchg
add
cmc
lods
in
ljmp
jge
xchg
and
mov
iret
pop
lods
xor
rcrl
add
cmpsl
jge
fs
gs
add
and
fbstp
sub
mov
jnp
inc
mov
popa
imul
lea
cmovae
das
stos
outsb
adc
pop
in
int
mov
inc
pop
orl
lods
mov
jmp
out
in
or
sbb
stos
test
ret
fsubrs
repz
das
adc
mov
gs
rcll
arpl
dec
dec
or
xchg
jmp
sbb
cmp
lods
and
mov
mov
popa
sahf
dec
test
or
jl
dec
sarb
xchg
into
ljmp
dec
xchg
adc
add
xchg
lret
mov
mov
icebp
and
outsb
pop
cmp
clc
insl
mov
sub
ret
je
push
mov
xor
sub
pop
dec
push
ret
ja
daa
sub
mov
in
lcall
ja
ss
xchg
ljmp
ret
jns
pop
pop
and
jb
xchg
clc
loopne
jl
sbb
cmpsb
leavew
adc
arpl
mov
lods
add
mov
out
fcmove
cmp
iret
mov
and
sarl
mov
lret
mov
add
pop
loop
mov
lock
or
fsubrl
jg
mov
push
push
sbbb
xchg
sub
inc
inc
dec
loop
push
push
fsubs
into
sub
test
test
aam
ljmp
lods
ficoml
sarl
jbe
push
lcall
inc
add
movsl
mov
mov
mov
imul
daa
ja
xchg
fwait
jl
push
mov
lds
mov
fildll
std
cltd
mov
xor
or
outsb
das
add
mov
bound
jno
sbb
xor
inc
or
xor
mov
lods
sub
adcl
push
inc
loope
repz
cmp
adcl
mov
xor
sbbl
xor
adcl
or
shl
adcl
imul
sub
jmp
cmpl
movl
mov
mov
jmp
movl
jge
push
pushl
call
movzwl
and
adc
or
sub
xor
mov
mov
sbb
mov
cmpl
movl
movl
jmp
mov
jge
push
call
add
inc
xor
add
mov
adc
xor
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
push
push
call
mov
xor
andl
sbb
subl
mov
mov
and
mov
shrd
mov
mov
subl
xor
subl
shl
subl
xor
or
adcl
shr
mov
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
pushl
pushl
push
pushl
call
or
adc
or
inc
subl
mov
and
sbb
sub
mov
cmpl
movl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
push
pushl
call
adc
or
mov
xor
or
sub
xor
xor
or
mov
subl
mov
sbbl
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jb
push
pushl
call
xor
addl
inc
xor
neg
notl
cmpl
mov
mov
jmp
mov
jge
pushl
push
call
mov
add
mov
not
subl
mov
mov
xor
adcl
mov
sub
mov
addl
mov
cmpl
mov
movl
mov
jmp
movl
movl
jl
push
push
call
orl
sub
sub
movl
or
jmp
subl
cmp
leave
jl
mov
sbb
and
sbb
sar
cs
lea
out
or
jns
ss
mov
mov
iret
subb
loope
scas
ljmp
inc
jmp
es
les
inc
stos
push
test
dec
test
push
pop
xor
xor
inc
dec
out
aas
sub
or
jge
sarl
popf
data16
xor
push
nop
je
leave
scas
add
or
mov
xchg
push
outsb
int
mov
std
add
push
lock
jle
pushl
lret
test
stos
push
hlt
fstpl
adc
and
xor
mov
mov
ljmp
pop
push
es
aas
fwait
push
lods
test
aam
fcompl
pop
pop
cmpsb
xor
mov
fldl
cmp
lret
mov
and
xchg
scas
dec
mov
sbbb
mov
faddl
js
dec
jbe
js
inc
add
iret
xchg
inc
pop
clc
pop
mov
aad
mov
jnp
push
inc
ja
js
outsl
push
ljmp
sbb
das
mov
shll
push
sub
dec
cwtl
push
jnp
jp
mov
jo
lds
outsb
mov
sarl
enter
shll
ds
push
dec
xor
jnp
pusha
inc
sub
jbe
jb
jb
cmp
daa
mov
ret
dec
mov
insl
push
jb
ret
xchg
pop
push
and
out
cmp
mov
inc
out
decl
test
addr16
or
sti
outsb
push
jmp
adc
add
push
xor
lods
xchg
mov
lret
dec
dec
jne
fsubr
and
gs
jle
orb
repnz
int3
push
jge
jecxz
out
xchg
aaa
iret
pop
ret
push
lea
mov
jg
pop
jp
inc
repz
sub
aam
mov
orl
xor
loope
push
loope
inc
in
mov
jp
cvttps2pi
adc
movsb
in
in
inc
push
cmpsl
mov
out
jae
push
cmp
daa
enter
mov
cmpsb
xchg
stc
shll
or
ljmp
mov
in
jg
stc
jmp
push
mov
sbb
jne
jg
movsb
cli
hlt
cld
scas
sbb
pop
xchg
scas
xchg
cmp
pop
mov
in
or
mov
xchg
xor
or
adc
lret
daa
push
sub
xor
cmp
outsl
into
cwtl
lods
mov
fimull
mov
iret
or
dec
push
mov
cld
popa
in
mov
xlat
dec
mul
sub
lods
and
ss
push
xchg
fidivs
rclb
js
les
mov
xor
hlt
push
pop
cltd
out
mov
xor
add
xor
mov
mov
xor
adcl
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
jmp
inc
mov
mov
and
and
sbb
adc
sbb
ret
lock
xchg
pop
cmpsb
jmp
hlt
clc
popl
add
adc
adc
and
mov
xor
and
push
lret
and
add
mov
cli
jmp
dec
push
xor
in
dec
das
adc
sub
test
sbb
pop
rclb
inc
repz
ss
ss
lea
sub
lea
jle
lret
repz
inc
int
lock
sub
cmp
sbb
sub
lea
mov
inc
andl
mov
cmpsl
jmp
dec
int
fisubrl
xlat
test
mov
lds
test
push
push
and
mov
sbb
and
jno
addl
jp
jp
iret
mov
std
xchg
cmp
cmpl
add
mov
iret
fsubl
jmp
cld
cs
add
sbb
or
push
mov
sub
pop
inc
dec
in
sub
icebp
mov
in
xchg
dec
push
mov
sbb
push
nop
dec
outsl
nop
mov
test
mov
aas
cld
mov
lods
scas
xchg
test
outsl
pop
xor
xor
scas
aaa
mov
push
mov
pop
arpl
and
xchg
cli
and
arpl
icebp
out
in
pop
inc
cwtl
popa
lret
xor
repnz
js
mov
push
hlt
adc
mov
ss
xor
pop
jns
stos
ss
and
adc
pusha
ss
mov
push
pop
in
leave
mov
gs
ret
mov
ljmp
stc
push
les
ret
pop
insb
loopne
adc
add
add
add
lret
leave
call
mov
sbb
jle
repnz
jnp
cmp
sbb
orb
cmpl
fs
inc
jbe
mov
cli
or
inc
cmpsl
xor
cmp
lods
pop
inc
cld
inc
dec
and
add
dec
or
push
xor
mov
fsubr
leave
insl
jmp
pop
inc
xor
ret
mov
add
jle
ds
add
std
fwait
and
mov
add
push
cmp
mov
mov
mov
lret
mov
push
cmp
push
mov
xor
leave
xchg
and
je
test
add
mov
ja
shll
js
jg
fimuls
push
fxch
mov
xor
pop
cmc
insl
dec
cmp
push
movsb
xchg
sub
ret
cmp
push
arpl
add
jo
push
sub
mov
movsl
or
cmp
sub
xor
subl
sub
or
mov
loopne
dec
jl
es
sahf
push
enter
dec
in
lods
enter
add
add
push
push
push
mov
in
repnz
jmp
sbb
adc
sbb
sbb
nop
mov
jl
push
jl
sub
sub
jnp
pop
add
cmp
ja
mov
inc
mov
stos
push
lret
cmpsb
ljmp
fistpll
mov
xchg
push
xor
cmc
sahf
insb
pop
pop
aas
dec
repz
shrl
xchg
loop
in
aas
inc
mov
xor
pushf
fstl
jg
gs
pop
mov
lret
shrl
fsub
jbe
loope
insb
insl
arpl
pop
xchg
pop
sbb
fsubr
cmp
mov
sub
lods
mov
insb
ds
cld
scas
push
inc
push
mov
stos
mov
add
or
ljmp
out
push
fdivrl
ret
jb
lret
popa
hlt
lods
push
gs
cmp
dec
ss
inc
cld
imul
push
test
aam
fwait
inc
or
jnp
sti
and
mov
cwtl
sub
mov
inc
arpl
xor
mov
pusha
out
and
add
dec
sub
push
mov
and
std
inc
cld
test
loop
inc
ja
jge
dec
icebp
ds
inc
lret
movsl
add
mov
test
imul
pop
jb
lret
sbb
jg
adc
push
jb
fnstsw
ret
in
dec
inc
mov
leave
add
add
jp
xor
or
stc
out
add
cwtl
xor
cmp
frstor
cmp
push
shlb
sti
stos
sbbb
in
cld
in
push
and
mov
xor
fimull
mov
inc
popa
mov
cmc
pop
out
out
jo
or
lret
dec
push
out
sub
cmpsl
test
popa
test
lret
pop
sti
mov
pop
jbe
and
pop
movsb
icebp
sbb
push
add
jb
das
bnd
rcrl
cltd
mov
lahf
xchg
adc
mov
test
adc
je
out
jo
inc
xchg
xor
and
mov
push
outsb
js
enter
jae
push
sub
pop
add
clc
cmp
repnz
push
cwtl
cmpsl
sub
aaa
xlat
xor
add
shll
stc
aad
xor
mov
xchg
cmove
mov
fsubl
mov
jl
add
cmpsb
mov
lds
adc
and
sbb
and
out
xchg
sub
jnp
xchg
sbb
fcmovnb
sbb
sbb
mov
dec
loopne
es
jmp
cmp
insl
jnp
scas
mov
mov
test
pop
loope
mov
cmpsl
bound
fldl
mov
or
idivb
cwtl
add
jmp
sub
mov
mov
jg
jnp
popa
add
dec
mov
inc
mov
pop
xor
repnz
sbb
mov
dec
jne
sub
xor
add
in
loope
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
jmp
loopne
cwtl
xchg
mov
pop
add
outsl
mov
int3
mov
sbb
adc
sbb
adc
loopne
stos
adcl
dec
fucomi
movsl
lahf
call
outsb
in
cmp
jmp
leave
mov
adc
and
andl
rclb
pop
nop
sbb
lods
shll
out
scas
leave
mov
sbb
lock
sub
loope
mov
aaa
jle
push
addl
daa
cmp
aaa
dec
dec
and
loopne
sbb
adc
mov
push
mov
pop
mov
aaa
pop
cltd
and
ljmp
or
jl
adc
in
in
in
mov
jmp
mov
inc
mov
outsb
popf
pop
xor
mov
push
mov
mov
cli
dec
movsl
outsl
ret
sub
mov
testl
push
xor
mov
lock
inc
leave
lret
xor
push
hlt
push
les
roll
cwtd
jbe
pop
fidivs
pop
lods
or
push
adc
mov
mov
and
ds
xchg
push
cmc
fstps
mov
clc
mov
jns
push
and
shll
adc
xor
mov
cwtl
sti
mov
aaa
xchg
stc
int3
xchg
or
push
xchg
sub
rcll
push
jo
jl
test
xor
out
sbb
sub
fidivrl
adc
ror
imul
xor
jo
jne
fldl
and
mov
fnstenv
pop
mov
popa
inc
sbb
leave
xchg
pushf
xchg
inc
inc
stos
adc
test
adc
dec
fldt
out
repz
cmp
cmp
pushf
cli
sub
cmp
cmp
adc
icebp
dec
jmp
push
test
sbb
jmp
popa
iret
pop
fnstcw
bnd
add
stos
repnz
adc
or
cltd
mov
loope
andb
cli
pop
mov
lock
pop
jge
xchg
stos
into
popl
in
hlt
push
pushf
insl
in
data16
sbb
aas
jne
xor
push
xchg
cwtl
jb
jmp
xor
inc
mov
negb
sub
or
adc
movsl
imul
cmpsb
movsb
mov
mov
pop
jecxz
sub
lods
sub
mov
push
rcrb
inc
sti
jge
cmpsl
dec
sbb
sbb
and
or
fwait
neg
or
lods
lea
xchg
insb
sbb
dec
and
push
sbb
xchg
js
stos
mov
mov
into
xor
rcll
ret
call
sub
cmpsb
jge
and
ret
or
add
add
les
or
xchg
pop
loope
push
adc
sbb
loop
stc
xchg
mov
dec
jg
adc
inc
xor
in
fs
xor
push
cmpsb
lods
jp
pop
hlt
in
jnp
arpl
fucomp
sbb
push
filds
dec
sbb
xor
jecxz
jmp
pop
and
stos
loopne
in
xlat
push
or
shll
pop
push
jnp
add
adc
dec
pop
fistl
pusha
add
mov
js
pop
jg
lock
dec
sbb
add
nop
mov
dec
data16
je
mulb
clc
aas
mov
mov
xchg
fidivl
and
push
shlb
mov
lea
jmp
mov
inc
out
lods
dec
cmc
insl
cwtl
pop
stos
cmpsb
aas
rorl
mov
push
add
dec
fisubrl
xchg
call
jge
ja
jg
and
insb
loope
dec
jg
movl
xor
ja
inc
lret
pusha
xchg
sbb
into
inc
xchg
push
jge
insl
roll
stc
xorl
inc
in
xlat
movsl
dec
jnp
idivb
cmp
fistpl
pop
push
cmp
push
xchg
mov
pop
push
xor
mov
lret
imul
fst
call
mov
orb
cmp
mov
jmp
xlat
cmp
jmp
inc
scas
xchg
js
std
cmp
loopne
push
aam
pop
out
lock
orl
fistps
or
sti
enter
in
test
pop
cmp
xchg
push
je
lahf
or
popf
pop
js
mov
mov
aad
iret
ljmp
imul
std
cmpb
xchg
loopne
pop
rcll
mov
fs
js
mov
xor
add
adc
aad
jecxz
int3
inc
xlat
loope
adc
test
ja
and
test
jmp
aaa
xlat
dec
push
push
stos
stos
cmpl
sub
fimuls
std
add
pusha
test
in
outsl
in
push
xor
pusha
xbegin
aad
fcmovne
daa
arpl
outsl
jp
aam
hlt
data16
mov
sbb
xchg
dec
push
cwtl
nop
out
aaa
xchg
or
dec
loop
imul
mov
into
jb
mov
stc
jne
push
dec
mov
in
imul
fcoms
loop
jae
jecxz
cmp
iret
lret
in
movsl
xchg
mov
icebp
jle
inc
xchg
and
mov
xchg
push
out
dec
insb
add
jmp
mov
push
mov
xor
cld
inc
xchg
leave
out
mull
in
gs
mov
scas
movsb
add
and
push
roll
arpl
push
stos
add
push
es
and
xchg
lcall
dec
pop
aad
les
orl
push
dec
mov
jle
add
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
and
xor
ficomps
mov
jo
sbb
and
sbb
push
push
xor
inc
adc
mov
mov
pop
sbb
in
sbb
lret
lea
lods
iret
mov
and
idiv
sti
pop
pop
sub
cld
jne
and
stos
int
mov
iret
fadds
push
mov
imul
push
imul
scas
mov
push
aad
mov
cs
jne
xor
sbbb
jle
lods
jmp
movsb
dec
nop
mov
out
sbbb
sahf
mov
mov
adc
hlt
out
imul
stos
jbe
and
icebp
jmp
fbstp
jb
rorb
ds
fiadds
fdivl
js
pop
addr16
or
sub
aas
xor
stos
xchg
enter
mov
mov
cmc
push
int
mov
in
cwtl
xorl
mov
in
adc
loopne
mov
cltd
pusha
sub
mov
sbb
sub
aam
in
addr16
sub
pop
std
jns
or
mov
jbe
jmp
mov
pop
frstor
and
push
lret
sub
gs
stos
lock
in
out
jl
ja
cmc
push
mov
lahf
movsl
adc
sub
and
pop
les
or
enter
aas
cmc
jb
sub
and
and
pushf
jo
mov
lds
sub
push
jno
adc
jmp
cmp
add
aam
push
mov
sbb
test
inc
cmp
dec
mov
jo
push
out
mov
pop
and
mov
ds
rolb
stos
xchg
adc
sub
jb
movsl
lret
mov
add
mov
roll
pop
dec
enter
mov
loope
jb
adcb
iret
nop
js
mov
call
rorb
sub
mov
mov
pop
sar
xchg
test
in
out
and
mov
arpl
pop
mov
jns
jbe
pop
mov
enter
call
sub
cmp
xchg
sub
enter
cli
xchg
pop
js
scas
xchg
bound
sub
sahf
ja
xchg
daa
jnp
fs
push
add
dec
outsl
mov
sbb
es
lock
dec
imul
mov
loope
add
jae
pop
mov
loop
inc
jg
out
dec
cmp
xchg
xchg
or
push
cmp
ret
add
pop
dec
movsl
jg
cmp
repz
mov
pop
lods
fstps
adc
js
pop
out
outsb
data16
adc
jno
lock
xor
adc
and
shll
jg
sub
cmp
lret
pop
ss
not
es
and
xor
divb
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
jmp
fdiv
sub
mov
jp
sarl
adc
sbb
pop
add
cmovns
pop
jle
jecxz
cs
xor
cmp
mov
jne
mov
mov
pop
mov
test
push
adc
popl
mov
jl
xor
inc
xlat
xor
jecxz
lods
sahf
push
int
enter
mov
fisttpll
ja
rcrb
stc
je
mov
repnz
adc
loopne
mov
pop
jle
pop
mov
mov
stos
xor
cs
dec
mov
jmp
insl
jg
cli
rorb
movhps
icebp
push
shll
popa
jmp
adc
dec
mov
dec
add
cmp
sti
roll
test
adc
mov
adc
mov
int
ret
cs
adc
es
fbstp
scas
int
dec
fnstenv
jae
je
loope
mov
jae
xlat
sub
adc
jp
mov
pop
add
dec
loop
iret
arpl
sahf
cmc
mov
pop
in
inc
test
out
std
mov
outsb
mov
cld
jg
mov
mov
outsb
mov
test
pop
test
ljmp
outsb
xchg
std
enter
in
sahf
push
sub
xchg
stc
insl
push
popa
punpckldq
and
dec
rcrb
imul
mov
cmc
jecxz
mov
sub
out
adc
lods
mov
je
xor
aaa
cli
push
adcl
push
pop
pop
cmc
movsl
sub
fisttpl
adcb
leave
shrb
dec
mov
cld
stos
imul
bound
mov
jmp
call
and
xor
mov
and
icebp
rcrl
icebp
ja
inc
jmp
cmp
adc
xchg
jl
sbbl
push
xor
stos
mov
aam
les
xchg
ret
call
stc
cmpsb
and
xchg
jo
push
into
repz
cwtl
lcall
lret
jns
add
dec
scas
cli
fcmovnu
out
std
jb
pop
sbb
roll
jg
std
sahf
out
sti
and
lea
mov
mov
mov
add
xchg
aaa
sub
aad
and
mov
mov
in
mov
inc
xchg
iret
mov
fwait
inc
pop
loope
push
sbb
jb
test
in
jp
jae
xor
ret
pop
xchg
mov
je
xor
jns
adc
enter
or
add
or
pop
fwait
dec
push
push
sbb
ja
es
vpunpcklwd
pushf
fdivr
adc
xorl
cmpsl
mov
iret
add
pusha
xchg
mov
add
push
scas
shrl
das
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
out
mov
stos
mov
push
dec
lds
sbb
and
sbb
sub
je
ret
lods
mov
scas
fists
xlat
jecxz
xor
ljmp
sbbb
pop
and
subb
push
pop
mov
enter
ds
push
int3
mov
cmpsl
inc
leave
lahf
dec
sub
sbb
nop
outsb
nop
outsb
xchg
jmp
ljmp
cmc
roll
sar
cmpsb
mov
pop
ja
out
mov
jno
insb
ss
add
leave
ror
xchg
xchg
and
lret
inc
daa
jno
mov
lea
cmp
insl
mov
icebp
jl
nop
sub
cmc
js
out
xor
dec
and
sub
scas
or
pop
xor
imul
fldl
xorl
in
xchg
pop
aaa
addr16
loop
sub
cltd
imul
jle
test
inc
fisubs
ret
push
pop
sub
loopne
ss
in
lret
inc
out
mov
pushf
imul
rcl
add
in
dec
ret
or
adc
inc
and
faddp
sarl
push
pop
inc
inc
sahf
movsb
fldcw
mov
dec
es
movsb
dec
jge
lods
jmp
push
hlt
adc
push
and
pusha
xor
or
pop
pop
mov
ret
mov
adc
lret
out
imul
add
mov
in
sub
data16
mov
jbe
and
cmp
sub
leave
fsubl
xchg
inc
ret
aas
xor
adc
nop
repz
das
lods
and
repz
add
test
or
out
pop
sub
cmp
aas
clc
inc
push
lds
pmulhuw
adc
sbb
pop
in
inc
roll
sbb
or
pop
mov
pop
out
imul
out
in
sahf
pushf
lea
sbb
dec
out
fucomp
sahf
add
rcrb
adc
mov
lods
daa
aaa
cmpsb
sbb
data16
lods
cwtl
jmp
sahf
stc
xor
sar
jne
imul
sbb
ds
mov
stc
mov
in
cld
mov
inc
sub
mov
arpl
dec
or
mov
push
sbb
repnz
jg
jp
jbe
hlt
decb
adc
xor
adc
jecxz
mov
inc
cmp
xchg
cmc
sub
or
gs
cmp
minps
nop
xorb
jne
out
sahf
stos
mov
mov
mov
mov
push
enter
and
mov
lcallw
hlt
pusha
jbe
ret
mov
or
addl
lods
fbld
xchg
adc
add
sbb
sbb
daa
stos
hlt
mov
push
cltd
sub
adc
cmp
and
stos
cmp
xchg
mov
cmp
je
mov
sub
mov
mov
jmp
dec
lret
repz
cmp
fildl
aaa
push
sbb
and
sbb
cwtl
es
pop
mov
jne
repnz
popf
imull
loopne
rcll
mov
add
cmc
mov
mov
out
pop
icebp
aaa
jle
xor
push
incb
pop
xchg
inc
mov
mov
jl
sahf
mov
mov
pop
and
arpl
mov
xor
xchg
cmp
or
pusha
jge
shrb
inc
in
cmp
dec
xchg
mov
jl
aam
lds
dec
cmpl
dec
mov
mov
insb
and
jnp
jg
pop
movsb
in
adc
and
sti
lods
call
stos
andl
insl
es
jnp
hlt
bound
and
test
cld
push
and
add
es
in
ret
mov
and
aam
ror
popa
cmp
outsl
insl
iret
xor
in
test
xchg
xor
pop
inc
in
scas
pop
pop
xchg
inc
pushf
icebp
test
jg
pop
pop
lahf
in
nop
sbb
mov
jl
test
ljmp
mov
enter
inc
cltd
push
lds
jno
push
sti
je
sbb
lock
inc
repz
add
fists
enter
mov
cs
cmpsb
jnp
in
mov
jae
mov
jb
dec
xor
and
or
sub
mov
aas
test
mov
inc
xchg
ja
push
orb
mov
loopne
adcb
cld
test
mov
cmp
clc
add
push
lods
popa
pop
rcrb
nop
mov
mov
jge
andb
aad
scas
mov
mov
andb
movsb
pop
fstpl
dec
jp
add
stos
adc
push
xchg
movsw
jnp
std
sbb
jle
xchg
out
inc
xor
lret
xchg
cld
sub
sbb
outsb
jp
lds
cmp
insb
inc
jne
pop
std
into
enter
je
mov
cmp
nop
push
insl
dec
in
test
jb
out
dec
xor
dec
and
pop
push
sub
lret
shl
or
ret
aam
add
pushf
pusha
xor
test
push
jp
leave
xchg
outsl
imul
and
mov
adc
mulb
jg
outsb
stc
lahf
leave
cltd
ret
fidivrs
inc
push
clc
jl
sub
adcl
xchg
pop
cmp
xchg
fimuls
pop
inc
mov
pop
loop
cmp
aad
xchg
movups
pop
cmp
out
fnstsw
ficomps
sbb
jo
sbb
aad
jb
mov
sti
push
sahf
aad
shrl
sbb
mov
push
adc
fdivs
xchg
test
repz
sbb
xchg
cmp
shl
pop
xchg
pop
pop
jbe
push
test
call
icebp
ja
jns
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
iret
xchg
ret
or
cmp
jo
insb
xorl
mov
scas
das
pop
lret
dec
pop
jns
ds
aaa
setae
stos
xchg
inc
add
mov
or
loope
in
cs
xor
outsb
mov
or
mov
xor
xchg
pop
and
and
cmp
out
ret
xchg
jg
mov
imul
test
stc
pop
mov
mov
test
lods
jb
in
out
out
call
pop
jg
mov
mov
mov
into
lea
into
mov
insb
lds
out
sbb
lretw
pop
fdivrl
sbbl
push
sbb
cmp
int
cmp
or
sub
push
sbbl
inc
pop
sbb
push
int3
rolb
lock
jnp
pop
mov
jnp
inc
popf
std
mov
pop
js
or
push
out
iret
out
int
push
sub
and
aad
sbb
orb
or
daa
mov
jo
stos
mov
push
or
and
sub
aam
js
sub
sbb
fisubrs
inc
call
loop
fucomip
mov
jl
arpl
jp
aaa
and
mov
sti
mov
dec
mov
popf
mov
sub
adc
pop
loopne
cmp
or
sahf
ja
vpunpcklbw
push
lret
lret
pop
add
jg
add
mov
and
test
mov
sti
push
sub
pusha
sbb
mov
ficompl
mov
and
jbe
out
inc
dec
and
test
cwtl
aaa
ja
mov
stos
cmp
cmp
or
mov
push
xchg
cmc
popf
das
mov
dec
dec
mov
jno
aad
mov
sbb
inc
cmp
jno
std
lea
lret
mov
jo
lret
dec
mov
rcrb
push
fcomps
arpl
orb
insl
and
add
xchg
ret
sub
inc
bound
fildll
dec
fidivrl
add
in
pop
sbbb
mov
and
in
and
aas
ljmp
pop
add
mov
lcall
aad
adc
jno
or
jp
mov
and
cs
subb
ljmp
ss
imul
push
or
mov
cs
add
push
test
xchg
in
push
test
push
jmp
jmp
xor
sarl
add
test
xchg
cmp
cmpsb
inc
mov
jnp
adc
fldt
xor
jo
out
mov
cmp
push
xor
or
mov
mov
xor
jmp
fstps
cmp
and
pop
xchg
rcrb
push
mov
sbb
ds
test
and
and
or
bound
cmpsb
insb
or
in
mov
insl
mulb
pushf
pusha
imul
xor
adc
mov
push
fimull
gs
movsb
push
push
nop
bound
mov
stos
adc
sub
mov
faddl
mov
das
sub
loopne
dec
dec
loopne
dec
dec
pop
popa
xlat
clc
push
sub
and
cwtl
fsubrl
cmp
rorl
mov
loopne
enter
jb,pn
and
mov
xchg
icebp
dec
push
daa
jmp
xlat
or
push
loopne
in
cmpsb
icebp
mov
test
cmp
int
pop
ja
arpl
cmp
push
mov
das
mov
movsl
leave
stos
ret
mov
or
add
push
or
ja
js
dec
cmp
nop
push
data16
adc
jle
into
inc
mov
pop
xor
xor
or
ss
cmpl
jmp
jle
or
or
mov
pop
and
cmp
cmpsb
int
neg
sbb
ljmp
xchg
stc
sub
or
sub
jge
jb
mov
push
loop
cmp
push
xchg
inc
clc
dec
jb
jmp
movsl
pop
dec
insb
loop
xchg
mull
jecxz
imul
adc
adc
ja
rol
mov
pop
stc
pop
cwtl
add
enter
dec
sub
test
add
mov
fs
jae
pop
cmp
rolb
jle
stc
xor
in
daa
sbb
sti
push
cmp
mov
mov
mov
clc
icebp
daa
enter
arpl
js
fisttpl
push
test
test
push
jns
adc
jg
sahf
cmp
add
jnp
jmp
fbld
xlat
or
cmpsl
cwtl
shlb
pop
popa
bound
and
fcomp
jne
ret
imul
scas
jmp
add
outsb
and
xor
adc
push
jmp
xor
push
in
xchg
push
mov
clc
test
mov
push
stos
rcll
or
jl
testb
daa
and
mov
scas
mov
outsb
mov
scas
cwtl
mov
outsl
mov
mov
push
fsts
pop
fisubs
inc
mov
ret
sbb
jge
sbb
mov
daa
add
mov
arpl
or
pop
aad
cmpsl
idivl
dec
mov
mov
int3
inc
fs
stc
test
jno
push
jl
incb
push
mov
loop
test
push
sub
jno
or
sbb
and
push
dec
push
icebp
repz
cmc
and
push
pushf
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
jmp
daa
into
dec
cli
sbb
sub
pop
jl
mov
sbb
adc
sbb
dec
loopne
mov
icebp
dec
movsl
pop
jb
dec
in
fsts
push
xlat
jle
ja
mov
xor
mov
in
icebp
mov
insb
fwait
pushf
es
lds
cmp
xor
sti
cmp
or
lret
clc
outsl
xchg
cmp
or
xchg
mov
add
xchg
lods
mov
pop
int3
xor
add
inc
add
into
sbb
sub
mov
mov
out
ret
lock
andl
push
adc
add
mov
icebp
mov
enter
and
cmc
inc
push
stos
fistps
enter
movsl
fsubp
mov
divl
mov
insb
cmp
xchg
mov
xor
test
inc
adc
xor
adc
sahf
leave
fwait
dec
mov
mov
aad
cmc
lods
nop
shll
sub
and
cmp
add
pop
adc
and
or
jg
sub
daa
shrl
xchg
xchg
push
jb
and
jl
push
and
lds
xchg
push
mov
jl
pop
cltd
jae
sahf
xor
mov
popa
repz
lods
lret
sbbb
loop
int3
mov
repnz
jnp
lcall
cmp
fcompl
aas
bound
clc
fists
je
jg
mov
push
pop
mov
or
mov
sbb
inc
fcoms
adc
insb
dec
in
mov
dec
cs
jno
and
fstpl
mov
mov
push
pop
inc
aaa
xchg
cmp
addr16
lahf
ja
mov
inc
pushf
rcll
push
sub
and
pop
adc
cmp
mov
iret
jmp
fwait
aaa
pop
pushf
mov
xor
arpl
or
dec
mov
jl
cmp
xor
adcl
mov
push
lds
loope
push
ljmp
xchg
repnz
in
adc
push
lahf
sbb
xchg
in
xchg
push
lret
cmc
leave
pop
mov
jnp
push
dec
inc
adc
stc
stos
mov
cmc
mov
inc
insb
rcll
aad
sub
cmp
push
cmp
add
imul
jbe
adc
sub
push
fidivs
lea
popf
pop
jnp
mov
adc
cwtl
outsb
gs
cmpl
add
xchg
fisttpl
mulb
aas
push
and
or
dec
scas
inc
jnp
out
dec
xchg
sbb
in
pop
stc
mov
mov
fldl
or
pusha
roll
shr
jmp
inc
inc
lret
dec
lret
inc
dec
and
mov
test
sbb
and
sbb
mov
imul
jnp
jnp
shll
in
xor
xchg
or
jmp
cli
sub
cmpsb
dec
mov
out
jne
addb
insl
push
enter
lcall
jecxz
pop
js
cs
sub
sar
mov
inc
shrb
ljmp
sub
outsb
jge
pop
insb
and
leave
jo
cltd
aaa
cmp
jb
std
sub
mov
js
mov
cmp
fisttpll
mov
adc
enter
mov
das
pop
jl
jmp
xor
cmp
push
cmp
daa
xchg
cltd
mov
add
packssdw
ljmp
andb
xor
or
jecxz
adc
inc
movsb
stos
dec
out
mov
nop
loope
jo
adc
popa
and
xchg
into
and
or
add
loop
sub
push
out
inc
rorl
sub
and
and
shl
jmp
lods
divb
push
mov
cmpsl
jbe
sub
pop
sub
pushf
adc
mov
fldcw
dec
push
mov
icebp
adc
fimull
or
or
mov
sarl
dec
fcomp
out
imul
xlat
rolb
daa
clc
mov
gs
or
adc
popf
out
cmpsl
aam
sbb
sub
call
and
mov
fsubrl
inc
lcall
sbb
cltd
pop
jbe
out
sbb
or
xchg
fisubl
test
push
jnp
icebp
mov
dec
outsb
jge
jae
cmp
mov
inc
dec
rcll
ror
xor
mov
dec
push
jge
sbb
fwait
scas
jo
hlt
stos
xchg
in
mov
xchg
mov
add
aaa
insb
push
dec
mov
popf
jp
inc
stc
sub
mov
push
push
pop
sbb
test
xchg
outsl
out
enter
in
sbb
jb
sbb
inc
dec
iret
roll
sahf
lods
adc
mov
gs
andb
sbb
mov
inc
jns
cmp
lods
and
mov
ret
in
cmpsl
pop
movsb
nop
insl
test
fs
lods
ret
mov
xchg
dec
jmp
or
inc
rorl
addr16
add
xor
mov
push
lea
sub
test
aad
test
repnz
es
fadds
ljmp
insl
sub
push
mov
bound
add
rcl
mov
jl
add
shl
cmp
add
je
sarl
aaa
notb
mov
lods
and
sahf
jo
dec
cltd
rolb
jge,pn
mov
scas
mov
jl
cmc
scas
inc
mov
inc
xor
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
jmp
mov
int3
xchg
sbb
dec
fstpt
cmp
sbb
adc
sbb
or
rolb
push
or
xchg
cwtl
and
ds
mov
ficoms
mov
lret
pop
adc
in
imul
dec
aad
addr16
int
call
mulps
sahf
daa
pop
mov
xchg
inc
pop
dec
test
push
inc
mov
dec
in
fsubr
enter
add
and
repz
inc
pop
pop
inc
mov
flds
mov
mov
fbld
stos
dec
inc
pop
cmp
dec
push
push
pop
ret
sarl
xor
lock
xchg
cmpsl
out
in
test
jecxz
mov
or
fdiv
mov
pop
mov
out
push
mov
ja
jg
push
std
add
data16
push
out
dec
fst
fsts
enter
loope
xor
cmpsb
or
pop
jge
and
movsb
sub
cmp
mov
dec
lock
iret
ret
bound
test
lods
insb
jne
jle
inc
nop
dec
incl
lret
push
dec
sbbb
xor
out
mov
lcall
or
push
sti
lods
movsb
lahf
pop
inc
mov
inc
aam
push
js
dec
mov
fidivs
jno
fwait
cmc
push
adc
insb
xchg
dec
adc
test
addr16
xchg
fsubrl
cltd
je
jmp
adc
imul
bound
aam
rol
cmp
push
push
les
pop
push
jae
negl
insb
and
cli
jge
lahf
fs
fstl
inc
les
xchg
jno
mov
stos
xor
inc
fcomps
cmp
enter
jns
xchg
adc
bound
insl
pop
xchg
in
pop
inc
or
jno
neg
mov
xor
jno
mov
mov
cmpsb
mov
mov
setl
mov
cltd
mov
and
lock
and
cmc
mov
xor
add
adc
lcall
mov
cmpsb
lahf
mov
sbb
push
std
aam
out
cmp
fcoms
cli
hlt
es
inc
mov
addr16
mov
jb
mov
fldt
push
cwtl
and
adc
dec
mov
int
or
sub
xchg
push
adc
dec
pop
dec
dec
pop
adc
sti
inc
and
movsl
nop
jge
mov
xchg
addb
test
loope
mov
push
std
icebp
imul
jecxz
mov
int3
add
iret
scas
dec
mov
inc
jne
and
inc
or
data16
pop
addl
sub
lcall
mov
icebp
jo
loop
xor
mov
sub
mov
ss
leave
stos
sbb
cmpsl
or
cmp
inc
or
test
push
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
jmp
subl
pop
rclb
and
mov
sbb
sahf
test
negl
lods
and
mov
sbb
es
scas
sub
pop
mov
in
xor
data16
arpl
es
into
push
mov
add
and
shll
incb
stos
add
ret
cmpsb
mov
sbb
and
out
pop
sub
into
inc
nop
clc
jmp
jle
or
adcb
aaa
lods
jae
aad
test
hlt
xchg
add
adc
int3
popf
mov
sub
and
mov
xor
pop
xchg
dec
mov
outsl
ljmp
xchg
and
xchg
outsb
xor
xchg
leave
xor
inc
in
fsubs
hlt
sbb
aas
mov
imul
cmc
xor
add
push
imul
int
lods
cmp
mov
stos
int
ss
gs
lcall
aam
dec
into
outsb
adc
stos
xor
aad
fdivl
imul
sbb
inc
mov
mov
mov
mov
cli
or
or
and
stos
cltd
xor
inc
fcompl
pop
xchg
leave
mov
mov
xchg
fldl
pushf
stc
push
mov
push
rclb
cmp
or
inc
dec
repnz
flds
jmp
or
repz
dec
push
pushf
and
outsb
dec
stc
adc
xor
popf
shr
add
jl
outsl
lret
or
mov
jp
xchg
jp
les
fsubl
sbb
hlt
jbe
and
outsb
int3
pushf
add
es
popa
add
mov
or
bound
jp
jecxz
es
mov
cmc
pop
das
xchg
add
imul
stos
incb
dec
aas
sub
add
cmpsb
mov
loop
push
insb
test
push
outsb
pop
lds
int3
mov
jle
mov
adc
cwtl
sbb
jmp
ds
pop
addr16
fstl
push
roll
jno
cmpsb
and
mov
sub
in
push
lods
das
mov
mov
xor
xor
cli
pop
xchg
mov
loope
xor
rorb
outsl
loopne
cmp
out
push
xchg
push
hlt
insb
inc
inc
movsl
push
lcall
pop
lock
add
mov
test
or
sbb
xchg
sbb
jns
and
jne
inc
jecxz
je
inc
cltd
jno
sub
pop
test
imul
mov
cwtl
and
hlt
xor
in
sub
cmp
add
icebp
pop
mov
rcrl
pop
mov
sbb
mov
stos
dec
or
jb
outsl
jne
int
inc
adc
stc
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jmp
lock
or
dec
loopne
pop
ret
sub
mov
sbb
and
sbb
fmulp
fidivrs
sbb
in
push
and
scas
add
or
daa
xchg
sbb
icebp
xchg
shll
sub
insl
jnp
cmp
rorb
push
adc
pushf
mov
ret
cmpb
sub
jns
sbbb
push
fistpl
loop
mov
cmpsl
sbb
sbb
notb
repnz
inc
aas
adc
or
sub
dec
pop
int
test
mov
xor
test
arpl
loopne
dec
adc
imul
mov
pop
sub
test
sbb
aad
mov
inc
adc
mov
dec
shlb
sahf
cltd
lcall
arpl
lods
call
add
and
or
push
xchg
enter
pop
push
add
enter
bound
rclb
enter
lret
rcll
inc
inc
sbb
shrl
popa
or
in
cmpb
ret
xor
movsl
jg
sub
xor
iret
stos
stc
xchg
or
insl
int3
or
xor
iret
fmull
mov
jbe
ret
sub
dec
test
and
dec
dec
pop
mov
xchg
in
mov
bswap
nop
rclb
nop
mov
in
inc
jp
movsb
xor
aaa
insl
roll
addr16
out
fwait
jne
mov
push
sbb
jg
out
int3
push
cmpsl
cs
shll
or
adc
pushf
push
imul
fsubrl
fisubrl
daa
cmp
xchg
sub
lds
bnd
push
divb
sarl
sti
fidivl
scas
mov
enter
xor
imul
lods
inc
enter
andb
xchg
jg
stc
dec
push
sbb
push
adc
scas
jno
pop
sub
jmp
mov
pushf
enter
jb
pushl
mov
aam
adc
sub
inc
or
sbb
jbe
add
arpl
mov
sbb
pop
jmp
dec
cltd
xlat
mov
pop
cmpsb
les
push
and
repnz
pusha
cmp
xlat
sbb
fs
cmp
lods
ds
rolb
imulb
and
fucomi
or
imul
div
mov
out
mov
sahf
add
push
inc
add
add
sub
movsl
push
jnp,pt
out
mov
and
xchg
xor
add
shll
out
es
or
icebp
stos
inc
dec
stc
fistl
mov
sbb
movsl
hlt
lcall
lret
jp
mov
or
mov
sbb
in
test
scas
mov
and
fucomp
call
or
add
bound
sahf
push
xor
clc
loopne
mov
sub
mov
add
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
jmp
fdivr
fists
ss
shlb
jl
xchg
sbb
and
sbb
shl
roll
push
stc
or
das
or
shl
mov
wbinvd
gs
inc
add
lds
int
sbb
lret
call
sarl
rol
test
push
xchg
jmp
test
pop
fldt
fadds
sahf
cmp
imul
push
pop
nop
leave
fdivl
scas
lods
fidivl
imull
nop
add
outsb
dec
pop
das
clc
push
into
stos
xchg
and
aaa
xlat
and
imul
jae
jecxz
sbb
inc
loop
out
add
xorb
push
rclb
out
inc
dec
leave
mov
enter
jnp
mov
lock
cs
retw
lcall
push
pop
lds
push
mov
xchg
pop
cmp
dec
mov
sahf
push
notl
lahf
add
aad
push
insb
pop
in
cmp
jge
sbb
imul
sbb
out
test
enter
pop
sbb
and
cmp
jno
sub
sub
aas
clc
orl
ja
pop
insb
add
jo
jne
in
jg
jle
popf
cld
call
sub
lods
xchg
das
rorl
push
push
movsl
dec
cmpsl
and
mov
mov
in
fwait
hlt
jl
pop
call
roll
xchg
cmp
bound
out
cs
dec
and
jns
mov
xor
inc
std
pop
fs
mov
lock
pop
cmp
dec
mov
dec
shll
pop
leave
push
mov
mov
inc
sbb
pusha
push
inc
into
xchg
or
rcrl
and
imul
mov
cwtl
jae
das
push
ss
sbb
cli
in
and
mov
bound
and
inc
jl
mov
sbb
movsb
divps
lcall
xchg
pop
lret
inc
pop
dec
mov
or
mov
sbb
push
sti
gs
aad
mov
mov
std
insb
adc
adc
les
lock
push
sarb
or
or
dec
mov
push
xor
test
mov
inc
or
aaa
xchg
or
and
cmp
push
jge
je
fistpll
or
pop
js
xchg
jns
sahf
pop
cwtl
ss
jb
cmp
xor
push
mov
scas
in
push
cmc
inc
sbbb
mov
mov
xchg
movsl
dec
cld
mov
dec
jmp
pop
call
cmpsb
adc
xchg
add
sbb
sahf
pop
jb
mov
stos
bound
fidivrl
pop
outsl
inc
cmp
out
mov
rorl
loope
jmp
cmp
sbb
push
push
out
push
imul
sbb
adc
sbb
stos
sub
movsb
push
jmp
ret
pop
sahf
scas
bound
push
rcll
imul
inc
sahf
leave
and
add
or
mov
shl
cwtd
xchg
test
and
std
insb
push
lret
rcl
jae
cmpsb
sub
add
mov
inc
sbb
adc
sbb
lret
into
push
popf
xor
rcrl
adc
shlb
in
scas
push
or
aad
jge
sub
sbbl
loope
push
push
pop
lods
int
push
sub
mov
repnz
fs
push
mov
inc
test
push
js,pt
lds
cmp
std
xchg
mov
add
push
xlat
call
lock
mov
and
jmp
push
jno
loopne
mov
repz
in
xor
push
xchg
imul
dec
test
pop
int
or
jne
call
jns
std
sahf
lret
ror
icebp
scas
rclb
pop
and
ja
or
movsl
sbb
mov
sub
ja
lods
jmp
cmp
push
mov
cmpsl
aas
les
in
or
imul
adc
aas
jo
add
push
or
icebp
lret
iret
adc
sbbl
aam
insw
sti
test
lods
pop
ss
or
subb
imul
xor
jne
repnz
jbe
icebp
testb
sbb
ror
aad
jnp
jbe
inc
add
dec
or
std
jg
fst
xchg
cmc
lahf
push
xchg
push
stos
fldl
fwait
enter
stc
in
aaa
or
sbb
leave
xor
movsb
xorb
push
xchg
dec
mov
mov
jbe
push
sbb
aam
cltd
xor
dec
jb
jge
inc
mov
jb
push
or
fdivs
xor
insb
loop
mov
and
repz
inc
sub
push
mov
je
shr
push
dec
insl
and
sub
push
daa
mov
mov
les
sbb
stos
inc
test
data16
mov
les
ljmp
cmp
movsl
pop
pop
lahf
sbbb
mov
dec
js
or
cmp
pmulhuw
mov
inc
add
inc
in
daa
adc
and
adc
mov
mov
and
out
and
orb
test
aam
mov
shl
call
cwtl
fneni(8087
fnstsw
pushf
shll
or
pop
insl
and
cmp
and
bound
mov
out
popa
sbb
fs
pop
les
enter
cli
jp
mov
scas
les
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
jmp
push
sub
fldt
mov
mov
fmuls
sbb
inc
add
cmpsl
mov
dec
sbb
jl
dec
lret
xchg
push
shrb
out
inc
jle
into
add
xchg
incl
lret
test
jns
fs
or
lcall
aas
repnz
inc
inc
std
outsl
jp
je
fsubl
rorb
fwait
rclb
sbb
mov
mov
mulb
in
sub
pushf
ljmp
aad
cmp
cltd
icebp
mov
sbb
jg
pop
test
daa
jae
test
xchg
notl
push
lds
into
mov
arpl
mov
push
adc
cmp
aad
mov
xchg
cmpsb
stos
jecxz
in
aas
dec
mov
cli
hlt
jle
ljmp
pop
mov
pop
jecxz
add
cmp
jns
ds
jae
mov
add
push
loopne
add
jno
inc
mov
aas
insb
sbb
or
fidivrs
add
lods
sub
std
push
xchg
scas
mov
ds
popa
std
out
cmp
ficompl
jnp
jno
add
insb
mov
aas
cld
ret
fwait
popa
push
push
and
adc
sub
lods
jmp
or
xchg
fnstenv
jp
mov
shlb
or
outsl
es
aas
pop
testl
lret
bound
imul
mov
pop
movsb
ret
lcall
cmp
mov
add
push
jnp
rcrl
lock
dec
sbb
add
sub
cld
adc
sti
pop
stos
movsb
lock
scas
inc
test
sub
call
lods
iret
pop
inc
and
or
sbb
ds
data16
cmpsl
test
outsb
clc
sbb
mov
rcll
add
mov
mov
jge
sarb
out
insl
paddusb
sahf
sbb
vpsubusw
jg
subb
mov
sub
push
xchg
xchg
or
pop
fisubs
pushf
cmc
test
jmp
sbb
adc
cmp
add
cmp
xor
and
inc
fsubl
add
cli
and
clc
rcrb
adc
xchg
sahf
jne
xlat
int3
add
sbb
aaa
loop
jle
push
push
add
int
icebp
cmp
mov
rep
xchg
jno
cmp
ja
jmp
jecxz
dec
movsb
and
aas
add
flds
add
xchg
cmp
ljmp
sub
inc
out
mov
testl
and
aad
pop
stc
pop
repnz
shl
cmp
pop
xrelease
sub
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
imul
fs
leave
leave
jl
es
loopne
sbb
and
sbb
and
sbb
in
rcr
xchg
outsb
adc
test
outsb
int3
fwait
dec
inc
dec
test
dec
hlt
loope
arpl
fwait
cld
jp
out
jae
adcb
shlb
xor
pop
gs
push
add
mov
movsl
hlt
xchg
jmp
aaa
xlat
andb
nop
xchg
sahf
sbb
and
jns
lock
dec
mov
and
pop
mov
mov
mov
sbb
sub
mov
mov
push
ds
inc
xor
aad
push
push
negb
stos
popa
lret
movsl
icebp
fbstp
jne
mov
cltd
and
push
cwtl
push
popa
mov
dec
je
add
add
lcall
outsb
test
dec
subl
jle
ficoms
jg
pop
push
mov
mov
cmpsl
jb
es
bound
pop
into
cwtl
and
sub
je
loope
inc
inc
cmp
test
push
enter
dec
repz
add
nop
jge
ds
aaa
movsb
ljmp
cmp
or
enter
aaa
clc
repz
add
lock
pop
je
test
movsb
outsl
add
and
divl
inc
testl
fcmovne
pop
sti
xor
shrl
out
mov
add
push
jg
insb
out
ret
inc
sbb
std
movsb
lcall
icebp
lods
adc
hlt
xchg
stos
out
sti
jb
and
inc
ds
push
lret
pop
or
xchg
inc
push
jle
ss
dec
inc
js
loopne
imul
xchg
icebp
push
pop
sti
rolb
xchg
and
stos
mov
shlb
stc
adc
mov
dec
lock
pop
mov
lock
xor
jo
xchg
and
mov
adcl
test
push
leave
sbb
jno
repz
push
cli
out
repnz
dec
jmp
jne
shll
jl
push
mov
movsb
lret
mov
dec
call
pop
mov
sub
pop
add
xchg
adc
daa
enter
push
pop
dec
jmp
or
and
mov
jl
pop
test
nop
popf
and
test
jb
mov
in
pop
inc
imul
outsl
out
dec
xchg
pop
add
mov
fldl
mov
add
inc
or
aam
jl
idiv
clc
adc
push
cmp
push
xor
ja
cmp
mov
in
mov
adc
out
pop
lods
fsubl
lea
test
sub
and
cmpsl
jae
jbe
fistpl
imul
jb
fsts
notb
pop
mov
adc
sbb
gs
or
pop
and
sahf
pop
xchg
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
jmp
dec
sbb
jmp
dec
mov
jle
jg
sbb
adc
sbb
pushf
call
inc
jb
in
pop
insb
inc
dec
mov
shlb
jne
jecxz
mov
popa
xor
je
push
inc
add
mov
iret
fistpll
enter
mov
jo
repz
sub
or
lret
jae
loop
mov
adc
frstor
cwtl
lea
cmpsl
dec
inc
jno
iret
mov
fidivs
popf
das
movsb
or
lea
xor
ret
dec
sub
lret
push
pop
mov
cmp
lret
out
dec
mov
movb
adc
mov
xchg
je
mov
cmp
insb
pop
inc
jecxz
xor
dec
dec
cs
jnp
add
mov
jns
xor
push
sbb
icebp
lret
cmp
pop
jne
out
mov
pusha
out
gs
cmp
sbb
es
ror
jb
mov
bound
movsl
scas
cmpsb
jno
aaa
xchg
jl
ljmp
mov
das
mov
push
pushf
push
lret
js
sbb
dec
sub
pop
popa
add
roll
xchg
mov
lahf
dec
mov
repnz
mov
test
mov
cli
xor
xchg
or
insb
sbb
mov
pop
cli
adc
mov
gs
cltd
rcrb
push
cmp
or
sbb
aad
test
mov
or
pop
or
pop
enter
sahf
fsubl
add
sub
pop
push
ja
cmp
pushf
stos
pop
stc
cmp
inc
punpckhbw
push
mov
rcrb
aam
das
data16
les
fmuls
jns
push
loope
and
jb
mov
rorb
pop
enter
imul
ret
fidivrs
fcmovnbe
adc
xor
or
lods
data16
jmp
fstps
xlat
cs
push
es
data16
std
in
add
in
push
dec
pop
cltd
xchg
mov
inc
inc
inc
push
mov
out
cmp
cltd
pusha
ror
cmp
movsb
xchg
or
stos
lcall
xchg
into
cli
xchg
mov
mov
pop
sbb
aas
jmp
add
stc
ds
ds
sbb
cltd
xor
mov
push
xor
inc
push
mov
sub
test
cmpsb
lock
pushf
cmp
cmpsl
and
js
mov
faddl
xchg
shll
leave
mov
push
sbb
sbb
sub
ret
xor
cmc
sub
aam
test
jmp
test
lea
cmp
sahf
out
test
pop
popa
fwait
ja
jecxz
jl
mov
xchg
inc
in
insb
push
xchg
inc
pop
sub
adc
push
lea
lods
jnp
negl
punpckhbw
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
jmp
mov
mov
sub
jle
lcall
and
sbb
push
sub
stc
inc
ficoms
shlb
sahf
inc
iret
aaa
cmpsb
sbb
shlb
mov
repz
xchg
dec
outsl
orl
pop
cmp
gs
adc
mov
nop
daa
ja
insl
daa
mov
dec
addr16
clc
and
mov
outsl
push
mov
pop
enter
lret
mov
dec
subl
aad
mov
xchg
xchg
gs
jmp
imul
push
inc
idivl
pop
jg
testb
cmp
cs
mov
faddl
mov
mov
test
jecxz
ds
pusha
lock
lods
jmp
cmp
pop
adc
or
fildl
xor
or
and
xor
clc
sub
inc
sbb
subl
xchg
jnp
es
mov
in
test
dec
insl
popf
xor
add
cmpsl
stos
movb
push
dec
or
xchg
ss
imul
dec
minps
idivb
leave
dec
inc
iret
ss
aam
cmp
xor
repnz
mov
pop
les
jb
lret
mov
out
aas
sbb
mov
push
xor
stos
fnstenv
cs
add
imul
cwtl
outsb
xchg
mov
mov
inc
fistpll
shll
movsl
fcmove
inc
popa
jle
inc
dec
sub
mov
sub
scas
stos
ja
push
push
mov
addr16
cmp
adc
inc
jmp
cltd
push
mov
push
loopne
cmp
sub
pop
mov
cld
aam
popl
inc
cli
pop
inc
sub
aas
push
mov
sbb
add
or
adc
jp
or
and
inc
xchg
fimull
push
mov
lods
mov
sahf
or
jl
out
hlt
sbb
pop
mov
fwait
adc
test
inc
inc
mov
push
push
sub
scas
enter
shlb
sub
sbb
cwtl
cld
insl
xchg
xchg
mov
clc
jg
sti
fisubrs
mov
repnz
ret
test
cwtl
adc
fwait
pop
xchg
leave
fcoms
repz
push
add
xchg
lock
inc
mov
repz
dec
xchg
icebp
cmp
faddl
and
movsb
or
xchg
test
pop
in
sub
or
sub
ja
icebp
xor
sub
push
out
aad
fdivl
dec
fcoml
daa
mov
orb
clc
bound
jmp
inc
movsl
push
add
test
loope
adc
fmuls
inc
test
jns
inc
push
sub
cli
push
mov
sbb
cmp
das
mov
add
push
pop
call
xchg
mov
mov
mov
xor
or
mov
shll
xor
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
loope
fidivs
insb
pop
pop
dec
xlat
mov
stc
jae
sbb
adc
sbb
inc
xor
jo
mov
fcom
pop
sub
repnz
pop
iret
lods
lahf
dec
jg
mov
mov
pop
and
inc
xor
push
sbb
fcomp
dec
ljmp
imull
mov
negl
clc
mov
mov
adc
pusha
arpl
imul
and
ror
das
lret
xchg
lods
push
sbb
js
mov
inc
sub
or
fdiv
dec
sbb
insl
mov
imul
das
sbb
dec
out
repnz
mov
jg
dec
dec
mov
mov
pop
hlt
subl
xor
cld
aad
insb
jns
test
negl
add
cmp
mov
popa
push
mov
push
pop
out
cmp
stos
xchg
fstps
jnp
add
pop
sbb
ficoms
stc
sub
rol
adc
sarb
je
mov
cmp
mov
mov
inc
mov
adc
in
fnsave
leave
mov
in
inc
out
mov
adc
xchg
ficomps
xor
out
loopne
inc
mov
mov
rorb
sti
mov
lea
repz
xchg
push
jle
outsb
bound
mov
sub
dec
xor
dec
dec
and
xor
lods
mov
in
dec
xchg
add
add
and
cltd
jbe
imul
cltd
mov
lods
repz
mov
mov
lods
stc
or
lret
push
dec
or
lods
jmp
inc
lretw
frstor
mov
sub
or
dec
mov
clc
and
xchg
push
or
es
dec
dec
adc
daa
push
inc
test
scas
adc
sbb
xchg
or
and
cmpsl
lcall
outsb
mov
into
in
or
dec
fistpl
inc
out
add
popa
sub
jae
or
xchg
sahf
or
das
mov
rcrl
pop
fmul
cmpsl
psllw
and
fs
push
and
jmp
mov
aam
sub
inc
repz
ljmp
jp
int
or
inc
sub
xorl
cmp
pushl
push
ret
inc
add
dec
adc
pop
loop
mov
idivl
orb
cmp
js
das
test
sbb
push
add
or
push
xchg
stc
xchg
insb
push
pop
xor
mov
mov
dec
test
lahf
pop
jecxz
fimuls
mov
add
arpl
cltd
adc
cmp
dec
andb
int3
mov
mov
pop
adc
xchg
leave
dec
fsincos
cmp
test
jl
jno
sub
pop
sarb
into
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
jmp
mov
pop
lcall
jb
mov
insl
sbb
and
sbb
pop
xor
outsb
ds
sub
sahf
push
and
mov
dec
out
shlb
insl
mov
popa
test
lods
loopne
popa
out
push
dec
add
scas
inc
push
pop
mov
pop
jo
in
jp
idivl
int3
daa
fiaddl
ret
arpl
out
test
xlat
not
jo
mov
mov
inc
in
pop
fwait
insb
stos
jp
push
jno
add
dec
push
popa
subl
lret
push
cmp
jp
int3
jmp
cld
call
stos
mov
cmp
inc
xlat
and
js
lcall
jbe
aas
mov
jp
sbb
les
sti
xchg
popa
inc
push
enter
mov
fbstp
bound
adc
add
rcrb
scas
fildll
pop
aas
or
imul
stc
push
rol
add
loope
push
rolb
cmp
stos
popf
and
inc
push
dec
mov
lcall
xchg
pop
jle
fistpl
aaa
or
fsub
sub
push
push
adc
imul
mov
sbb
cwtl
aaa
clc
pop
rcll
out
aas
js
aad
add
cmp
cmp
pop
mov
pop
lods
aas
hlt
mov
mov
stos
mov
mov
fbstp
mov
int3
lock
pop
inc
mov
lcall
mov
cmp
mov
jbe
fists
stc
or
add
and
pop
ljmp
dec
mov
add
push
push
cwtl
addr16
jle
sub
mov
pop
or
cwtl
push
scas
mov
cmc
scas
dec
shll
mov
mov
add
enter
jns
lret
loope
testl
test
and
and
sub
mov
movl
pop
lahf
jecxz
inc
mov
xchg
xchg
and
je
xadd
negl
mov
mov
xor
xchg
cld
cmp
adc
lret
mov
cld
dec
jns
ret
aam
push
popa
lahf
xchg
add
movb
push
jo
rcrb
pop
and
out
aas
adc
repnz
pop
sub
inc
inc
ss
iret
daa
imul
nop
pop
dec
fldcw
movsl
xchg
and
adc
push
jge
movzwl
call
mov
movsb
ja
cmpl
pop
in
repz
andb
mov
mov
scas
jecxz
inc
mov
cmpsb
cltd
mov
dec
ljmp
xor
sub
mov
test
insb
or
or
movsb
mov
dec
stos
cmp
addr16
mov
and
mov
shrd
shr
shr
jmp
and
push
sbb
push
sbb
sbb
adc
sbb
jle
mov
out
aaa
inc
gs
xchg
rolb
push
std
in
or
lock
shlb
aaa
mov
mov
bound
push
lock
enter
loop
out
lock
js
fidivrs
add
imul
xor
push
jb
and
cmp
jmp
jae
lret
dec
jns
sti
testl
pop
leave
push
adc
repz
xchg
adc
stos
mov
hlt
pop
imul
in
mov
jl
push
push
xchg
iret
push
out
pcmpgtd
jmp
sub
and
mov
insb
and
sbb
sbbl
mov
push
in
adc
and
das
push
pushl
lods
xchg
daa
add
cld
aad
cmpsb
pop
pop
test
mov
jmp
fidivs
cmp
outsl
orb
xor
es
xchg
ds
fprem
int3
mov
loop
adc
inc
std
push
loope
xorl
das
cmp
insl
loopne
fs
outsl
imul
xchg
mov
sarl
sbb
cmpb
roll
dec
leave
loop
jp
outsl
adc
fstp
mov
inc
pop
mov
add
pop
mov
mov
lock
out
jl
push
and
scas
push
push
lock
xchg
sub
data16
sbbb
pop
rcrb
cmp
add
dec
cmp
push
or
shlb
adc
sbb
lods
pop
pop
fcoml
jmp
xchg
xchg
adc
pop
ljmp
pop
ja
dec
jecxz
das
out
xor
movsb
push
sub
fstps
cmpsb
call
test
xor
insl
xorb
sbb
sbb
es
movsl
push
and
mov
les
xchg
mov
clc
push
out
data16
cmpsb
and
xchg
xchg
scas
jl
cmp
xchg
xchg
scas
sti
adc
dec
in
or
pop
cmp
xor
sarl
jae
push
ss
enter
imul
dec
and
aam
jne
out
adc
pop
into
dec
lods
fwait
xchg
je
inc
inc
mov
movsb
add
mov
cmpsl
dec
cmp
sbb
popf
in
in
sbb
fmuls
jo
dec
adc
mov
aad
xor
mov
push
xchg
cmpsl
nop
hlt
sub
ss
addr16
ficompl
xchg
test
cli
jecxz
out
das
cmpsb
popf
sub
pop
pushl
add
outsl
or
movsb
ja
das
lock
bnd
push
jnp
out
cltd
jl
add
add
push
std
or
sub
lods
scas
sbb
jge
cli
sub
xor
sbb
bound
jp
push
out
xor
mov
mov
mov
push
push
push
call
shld
shl
jmp
popf
xchg
dec
mulb
sbb
fdivs
gs
and
sbb
mov
fistpll
jne
mov
sub
iret
mov
dec
insb
mov
fs
pop
bound
push
out
mov
outsb
shll
lea
push
dec
imul
ss
js
into
and
mov
mov
mov
or
scas
movsb
sbbl
ja
jmp
shrb
mov
mov
or
jo
jne
inc
lea
jmp
dec
fstl
xchg
ljmp
test
mov
cld
push
jno
aad
addr16
xchg
and
in
test
add
in
pop
or
cltd
push
clc
mov
cmpsb
das
push
les
cltd
mov
rcll
pop
push
fcoms
xchg
daa
repz
jns
inc
push
cmp
lds
lods
mov
mov
pushf
jge
push
pop
sbb
add
mov
and
sti
push
and
mov
jbe
sbb
jo
and
sub
add
jp
cld
jae
fwait
in
adc
push
sbb
in
cmp
xlat
add
mov
shll
loopne
and
sbb
xchg
in
jns
jg
pop
lret
jge
mov
mov
jmp
or
pop
jns
adc
xchg
sbb
mov
cwtl
ds
lods
jnp
imul
push
dec
pop
and
jae
sahf
jnp
int3
lahf
sbb
cli
cmp
sub
mov
push
cmp
sbbb
push
sbb
xlat
mov
nop
pop
and
out
cmp
adc
jo
cmpsl
mulb
cmp
mov
fisubrs
pop
jmp
xchg
xchg
test
nop
mov
inc
jle
mov
imulb
sbb
jne
pop
ret
add
fsubrl
fmull
les
popa
sti
scas
sub
dec
dec
cmpsl
fimuls
mov
xchg
push
push
mov
movsl
push
lods
cmp
jp
sbb
cmp
lea
cld
mov
mov
lret
ret
leave
jb
out
xchg
mov
mov
jae
sub
scas
mov
push
fildl
lock
cld
sub
add
xchg
mov
xchg
cmp
nop
mov
cs
out
out
xchg
inc
in
cmp
std
or
adc
mov
push
mov
mov
inc
jne
mov
stc
or
inc
inc
jae
cmpsl
pop
mov
je
pop
je
lcall
xchg
jmp
movsb
sbb
xor
or
insl
lret
dec
add
jae
inc
and
mov
inc
add
movsb
shl
insl
test
iret
testb
mov
and
cwtl
adc
orl
add
bound
push
gs
or
xor
or
xor
xor
mov
mov
jmp
xlat
cmp
jge
jle
scas
xorl
and
neg
cs
gs
in
push
pop
mov
lret
or
insl
mov
mov
mov
and
jb
cmpsb
mov
inc
fwait
iret
daa
fwait
andl
mov
insl
jmp
leave
sub
add
push
mov
aad
push
adc
aad
xchg
das
add
lock
xchg
jno
inc
mov
call
fiaddl
mov
divb
mov
and
mov
out
jecxz
xchg
add
lretw
pop
xchg
dec
insl
testb
push
fimuls
jp
sbb
sub
test
lock
out
aam
sub
xor
xor
mov
in
xchg
fistps
sub
sub
lret
push
test
aad
or
mov
addr16
pop
mov
jmp
xor
sub
es
pop
in
jnp
sbbb
cmpsb
add
cmp
or
clc
inc
mov
and
jecxz
mov
sti
cmp
push
jmp
sbb
xor
scas
enter
in
pop
outsl
mov
loope
lret
mov
inc
subb
mov
in
lea
out
mov
inc
push
jle
pop
mov
adc
push
test
test
cmpb
mov
sub
jo
orb
daa
shlb
jmp
out
sub
imul
mov
lea
dec
pop
push
js
inc
stc
lret
pop
xor
pop
jmp
mov
xchg
xor
ret
rcl
ds
pop
incl
inc
insb
daa
sarb
cmp
mov
repnz
or
jae
iret
xchg
jecxz
faddl
xor
cmp
ss
adc
dec
cli
pop
shl
adc
xor
xor
adc
std
push
cmpsb
mov
jae
xchg
ret
jg
std
mov
fstpt
add
sarb
jmp
mov
xchg
dec
jge
mov
sbb
pop
push
out
fwait
in
pop
push
pop
dec
mov
shrb
adc
xor
xlat
notl
pop
ja
inc
or
sub
and
and
out
mov
cltd
fstl
scas
jp
outsb
sahf
insl
and
inc
lcall
mov
pop
fmul
cwtl
jmp
stc
xor
push
sbb
roll
sbb
xor
dec
mov
sbb
mov
scas
ljmp
add
dec
xor
pop
mov
mov
cmp
xchg
pop
cmp
sbb
rorb
xor
sbb
in
xchg
push
jmp
lret
roll
inc
cmp
clc
xchg
mov
adc
inc
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
jmp
fwait
ror
dec
mov
scas
in
mov
and
sbb
adc
sbb
mov
or
or
popf
jmp
ss
xor
stos
adc
ficoml
jb
jb
scas
dec
add
pop
loopne
popa
movsl
dec
addl
roll
data16
push
or
stos
cmp
or
test
nop
in
pop
push
int3
mov
and
les
push
jg
push
or
cmpsl
or
sbb
clc
mov
inc
lods
cmp
jnp
call
add
ret
jmp
sti
cmc
adc
shll
push
xchg
movsl
cmp
xor
jne
lds
cs
inc
or
test
adc
fmuls
mov
mov
push
pushl
xor
mov
mov
jne
movsl
push
push
jl
aaa
push
movsb
lock
pop
cmp
fsts
sub
and
loope
repz
pop
push
adc
cmpl
adc
sbb
add
ds
inc
popl
mov
outsb
mov
xchg
fistps
in
in
out
mov
test
movsl
test
xchg
mov
mov
lock
mov
sub
clc
jmp
xor
jmp
fucomi
push
and
xlat
xchg
lret
ss
push
fstps
in
ljmp
add
pop
arpl
bound
mov
sti
xor
push
dec
pop
imul
mov
fildll
imul
pop
popa
outsb
dec
out
int
jp
push
jmp
jns
stos
jbe
mov
jo
ret
ja
inc
addl
js
jl
xchg
ja
stos
gs
ret
outsl
cmpsl
pop
add
sub
jge
stc
push
xor
pop
dec
pop
movsl
inc
iret
ljmp
dec
idiv
fsubl
jecxz
xchg
loopne
xchg
enter
pusha
mov
adc
scas
fisubs
dec
mov
mov
pushl
sbb
mov
inc
mov
mov
cld
mov
pop
jns
jg
xchg
in
cmp
into
jne
push
lcall
or
cmp
js
add
xlat
fdivrp
mov
and
push
adc
cmpsl
xchg
add
xchg
jo
jno
inc
xor
loope
insb
shrb
pop
loope
mov
mov
xor
mov
ret
iret
out
mov
cmp
mov
cs
and
pop
adc
in
jo
mov
fstps
rorl
aam
cmp
repnz
jmp
sti
dec
xor
inc
pop
insl
cmp
cltd
jns
aas
adc
ss
insb
in
mov
xor
icebp
pushaw
cltd
aaa
cmp
and
dec
sahf
imul
mov
add
push
push
call
jmp
mov
dec
jb
insl
fnstcw
dec
sbb
and
sbb
xchg
out
test
pop
ss
in
jno
cmp
sub
bound
xor
mov
enter
loop
sbb
arpl
test
mov
rcrb
imul
mov
in
fiaddl
sub
pop
inc
cmp
out
scas
je
loopne
out
lds
adc
push
mov
mov
fistps
inc
jp
jp
repz
shrl
fdivs
lds
add
mov
outsb
sub
outsl
pop
cwtl
pop
mov
stc
dec
hlt
pop
mov
cmp
fldenv
push
call
sar
adc
mov
sbb
fld
or
sbb
aas
cmpl
in
mov
lock
cli
dec
imul
add
icebp
mov
xchg
mov
xchg
inc
std
shrb
mov
pushl
out
push
mov
ss
jle
push
push
sbb
insl
mov
lock
lret
pop
mov
pop
xchg
loope
mov
icebp
inc
cmp
push
shll
int3
mov
clc
dec
pop
repz
inc
ja
mul
les
lahf
cmp
and
orb
pushf
aaa
js
clc
or
inc
movsl
jnp
mov
cmp
dec
sbbb
adc
xor
js
xor
mov
xchg
cmpsw
pop
out
test
xchg
cwtl
sahf
xor
mov
pop
push
jle
fdecstp
jecxz
xor
mov
and
and
nop
push
sahf
aaa
rsm
and
ret
dec
or
lret
cmp
fnstcw
pop
or
loop
xchg
sahf
mov
imul
push
fistpll
inc
dec
cli
jl
mov
sbb
idiv
or
or
adc
xchg
lret
adc
fs
or
jbe
sarb
adc
addr16
imul
icebp
push
mov
sbb
insb
ljmp
jnp
cmp
stc
dec
push
fdivp
adc
sbb
cld
mov
jecxz
mov
dec
mov
stc
icebp
jns
pop
push
lods
stos
jp
mov
sub
loope
cmp
mov
cs
adc
cmp
in
scas
xor
and
inc
pop
pushf
xchg
into
clc
outsb
push
xchg
jno
psllw
mov
pushf
jg
lret
rorl
mov
subl
lea
add
sbb
scas
mov
cmp
cld
mov
jle
popa
inc
or
std
jno
in
addr16
xchg
out
inc
jecxz
je
sbb
sub
sbb
test
in
pop
jbe
jb
push
sbb
movl
cmp
movl
jae
movl
cmp
movl
jae
sbbl
shrd
movl
shr
ret
mov
xorl
xor
and
shr
ret
xor
xor
ret
push
mov
sub
sub
movl
mov
cmpl
movzbl
mov
movzbl
mov
jmp
mov
mov
jne
pushl
pushl
pushl
push
call
mov
and
xorl
add
not
sbb
adc
mov
movl
mov
movl
cmpl
mov
notl
mov
jmp
mov
mov
jbe
pushl
pushl
push
push
push
pushl
push
call
and
movzwl
add
not
mov
adc
andl
add
mov
sbb
movl
movl
push
movzwl
and
movl
cmpl
movl
mov
movzbl
jmp
movl
movl
jge
push
push
pushl
push
push
call
sbb
incl
xorl
add
movzwl
add
add
movl
xor
add
and
push
or
movl
cmpl
not
mov
jmp
movl
mov
jle
pushl
call
mov
mov
adc
not
sub
sbb
or
incl
mov
cmpl
not
mov
mov
not
jmp
movl
movl
jae
push
push
push
call
add
sub
mov
xor
sbb
neg
mov
push
push
sbbl
push
orl
call
jmp
inc
dec
cmpsb
movsb
lcall
mov
adc
sbb
adc
sbb
cmc
or
adc
scas
ss
pop
out
arpl
jno
not
lcall
mov
sbb
pop
xchg
punpcklbw
and
xor
ja
lock
or
jae
lds
xchg
xchg
enter
adc
jmp
dec
out
insl
iret
ss
jecxz
shll
rcll
into
adc
movsb
jecxz
lock
xor
cmp
icebp
jae
push
cmp
jae
push
mov
pop
into
push
inc
adc
jge
jp
addr16
ja
xor
cmp
add
shlw
adc
int
std
sbb
lock
stc
xchg
mov
lcall
ljmp
shrl
and
pop
jne
test
xchg
xchg
cwtl
cmpsb
pop
xor
xchg
pop
divb
les
or
rorb
xor
popa
leave
sbb
pop
rolb
adc
test
mov
mov
dec
ljmp
mov
pop
add
rorb
stos
inc
xchg
mov
mov
int3
daa
fcmovb
dec
cmp
shrl
xlat
xor
pushf
and
repnz
pop
ret
out
imul
es
ja
or
jecxz
sbb
pop
add
loope
mov
ljmp
mov
pop
and
mov
scas
mov
cli
in
mov
dec
insb
aaa
ret
cmp
push
rcll
sbbb
dec
add
sub
dec
popf
out
fidivrl
inc
sbb
push
jecxz
das
repz
ret
fwait
dec
pusha
push
add
mov
stos
ljmp
adc
jge
cmp
push
cli
insl
dec
and
sub
push
aas
fwait
add
dec
addr16
imulb
add
ficompl
add
pop
shl
add
xchg
mov
test
xchg
pusha
aad
cmpsl
pushf
in
dec
add
lods
imul
insb
aam
ds
sbb
push
adc
fidivrl
rorb
mov
ds
sbb
jmp
je
xor
xchg
push
cmp
ss
and
pop
cmp
jmp
cmc
adc
mov
mov
push
xchg
inc
ljmp
leave
in
loope
jb
jne
lret
ja
push
nop
cmpxchg
xchg
das
jae
jno
loopne
push
cmp
add
mov
ficompl
test
test
pushf
add
aad
rcl
jp
cmp
fdivp
arpl
in
mov
clc
mov
fistl
push
cmp
push
sar
adc
or
jmp
enter
fildl
cwtl
nop
shrl
cmp
mov
es
dec
loopne
jne
push
orl
or
push
addl
or
sbbl
xor
xor
push
push
negl
call
mov
cmpl
not
movzwl
notl
jmp
movl
jb
push
pushl
pushl
call
adc
movzwl
or
xor
add
sbb
xor
mov
or
xor
neg
sbbl
mov
adcl
push
adcl
push
movl
push
push
decl
call
cmpl
mov
mov
jmp
movl
jae
pushl
call
sub
subl
xor
sbbl
sub
or
xorl
jmp
mov
sbb
sbb
sub
out
sub
add
sbb
mov
rcr
mov
inc
hlt
mov
push
es
rorb
mov
dec
lods
mov
sti
neg
aas
mov
cmpl
or
add
jmp
mov
lea
cs
sub
inc
movsl
jo
fstpl
sbb
inc
out
bound
pushl
cmpsb
cmp
pop
and
frstor
or
or
iret
loop
rolb
in
sub
repz
ficomps
mov
loop
repnz
cld
jle
sbb
pusha
mov
xlat
mov
xchg
mov
test
pop
add
pop
sbb
mov
mov
out
or
loope
stos
mov
cmpsl
or
lret
add
push
sahf
cltd
push
adc
mov
pop
daa
push
ror
pushf
jae
in
pop
xor
mov
cltd
repz
or
add
inc
sbb
mov
icebp
stos
inc
xlat
movsb
stc
test
icebp
sbb
fst
test
jmp
pop
xchg
cli
fwait
or
jg
daa
adc
addb
lock
dec
ret
xchg
testb
cmpsl
and
xchg
jne
jl
scas
push
xor
mov
pop
xor
iret
sub
stc
lret
aam
lret
in
mov
lea
sbb
jae
jo
dec
inc
push
data16
fdivrl
mov
out
sbb
fisttpl
pop
pop
mov
data16
sub
adc
repz
xor
xchg
loope
sub
xor
in
push
or
sarb
inc
in
xor
sub
xchg
call
mov
mov
test
inc
cld
je
xor
xchg
cli
adc
rcl
mov
dec
das
nop
sub
das
mov
pop
inc
dec
adc
pop
mov
test
or
add
gs
sbb
shl
mov
sbb
shrb
cmc
fsubrs
outsl
jg
push
repz
sbbl
rcr
push
repnz
rorl
inc
stos
in
pop
xor
inc
data16
push
jp
sub
ss
sub
xor
mov
add
pop
nop
test
pop
test
xor
inc
mov
sbb
sbb
cwtl
mov
inc
or
mov
xor
mov
pushf
lret
sahf
data16
inc
jne
out
das
mov
loope
sub
mov
and
arpl
fldl
lcall
add
stc
rolb
sahf
cwtl
xor
in
jge
mov
in
xor
adc
dec
mov
ret
add
mov
in
imul
ret
and
rcrb
fstps
popf
ret
loopne
pushl
ds
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
jmp
add
pop
mov
pushf
lods
push
stos
add
sbb
jno
adc
cmp
push
inc
loopne
out
fs
cmpsb
fiadds
popf
push
jb
xchg
out
imul
fnstsw
aad
scas
lds
aas
pop
imul
sbb
and
adc
stos
xchg
sub
jo
inc
cmc
loopne
shll
push
aas
ud1
inc
push
add
sbb
incl
je
idiv
lock
sub
psubusw
mov
push
xchg
ds
add
mov
or
popf
or
pop
cmp
mov
leave
in
les
push
and
fsubp
mov
cltd
xor
push
dec
dec
leave
cmp
in
jbe
and
or
adc
add
mov
adc
fdivrl
mov
pop
lret
pusha
mov
test
add
cmpl
addr16
push
mov
aad
sbb
push
xchg
mov
dec
jg
push
in
sbb
out
iret
mov
dec
aas
ss
shll
inc
add
dec
sarl
mov
push
mov
cmp
ret
sti
subl
stc
and
adc
imul
aaa
push
icebp
fsub
push
lods
add
adc
xchg
cmp
divb
scas
inc
lock
cmp
lret
xlat
out
loop
push
mov
push
in
icebp
xchg
addr16
and
mov
adc
js
jo
mov
add
sahf
adc
imul
test
stc
inc
aad
sahf
adc
aad
inc
sbbb
push
mov
mov
xchg
jl
add
lcall
iret
dec
in
orb
inc
test
xchg
dec
in
aas
arpl
dec
mov
and
icebp
int3
into
sub
or
sti
fsub
in
test
nop
hlt
rolb
add
pop
cmpsb
cmp
inc
xchg
cmp
rorb
cmp
inc
mov
push
mov
dec
aam
cmpsl
push
pushf
mov
mov
fs
mov
movsb
sub
in
add
and
fsubr
xchg
xor
adc
jne
or
jge
adc
xchg
imul
add
push
scas
xchg
push
mov
push
cmp
cli
cld
sbb
scas
outsl
pusha
push
movsb
scas
add
flds
inc
int3
lret
loope
mov
cltd
fstl
pop
inc
xlat
cmp
imul
cwtl
cmp
and
aaa
ret
stos
nop
adc
xchg
adc
pop
popa
rcrl
in
das
jl
push
arpl
iret
in
das
pop
cmp
sub
dec
xchg
mov
cmp
inc
add
popf
mov
mov
repz
es
out
add
pop
adc
fbld
jbe
mov
xchg
sbb
dec
jb
cmp
cmp
test
std
divb
push
xchg
mov
mov
xchg
inc
mov
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
jmp
xor
jne
insb
sbb
push
out
int3
or
ja
call
adc
sbb
cmpsl
cltd
fsubrp
push
mov
out
push
imul
mov
dec
insb
pop
inc
fadd
addl
sti
out
cwtl
mov
sub
pop
lea
rorb
push
pop
test
ret
cwtl
add
add
xchg
fbld
pop
jno
inc
cwtl
jl
icebp
xchg
dec
xchg
cld
lods
cltd
pop
mov
test
into
cmp
sbb
notl
insb
shll
mov
inc
mov
xor
mov
mov
pusha
imul
add
lds
repnz
cmp
push
mov
mov
nop
cmp
xchg
cs
popa
mov
pop
mov
mov
sarl
shlb
arpl
pop
cmp
and
pusha
rolb
xor
push
or
sbbb
cmp
jp
testl
lds
dec
push
out
in
mov
cli
push
mov
orl
xor
insl
pop
out
sub
push
arpl
ljmp
test
pop
insl
mov
addr16
pop
jp
xchg
mov
mov
add
mov
pop
shrl
mov
es
lret
lods
mov
pop
lods
mov
lods
rcr
push
mov
cmp
div
es
insl
ljmp
shll
dec
mov
add
lods
xchg
jno
testl
adc
sti
cs
jecxz
mov
cli
add
addb
imul
push
inc
imul
iret
sbb
or
int3
mov
loope
sub
mov
arpl
jo
add
ret
adc
xor
push
push
stos
out
xchg
in
xor
js
xor
or
inc
jle
in
xor
dec
pop
fsubrl
and
jl
pop
sbb
les
stos
bound
sub
jne
add
push
jnp
xor
sub
sbb
push
pop
data16
dec
fdivl
xlat
push
adc
push
sbb
xchg
call
mov
xor
dec
push
ret
add
clc
loope
imul
pop
cwtl
mov
insl
movsb
stc
push
or
jbe
inc
jp
mov
or
pop
adc
sti
lods
xchg
adc
popa
in
sahf
mov
jns
out
cmp
pop
adc
adc
lret
pop
incb
repnz
jmp
std
sub
inc
ja
sbb
jae
pop
in
cmp
lahf
pop
pop
mov
jb
cld
xor
fildl
in
push
in
rcr
loope
push
add
ljmp
add
mov
sahf
xchg
inc
hlt
stos
cs
and
es
popf
call
jle
imul
sbb
jae
sbb
or
movsl
adc
mov
andb
jnp
inc
bound
add
hlt
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
jmp
in
mov
sub
push
xchg
mov
add
sbb
fxch
add
mov
or
add
dec
add
mov
add
call
sub
mov
bound
mov
lret
hlt
adc
jno
pop
sbb
in
pop
lods
push
mov
xor
addr16
jmp
mov
cmp
mov
lea
sub
andl
repz
xor
cmp
imul
ljmp
lcall
pop
shll
xchg
in
out
xchg
xchg
lahf
mov
xor
lret
jecxz
mov
int
jo
andl
push
lods
mov
cmp
cmp
jl
mov
movzwl
jmp
out
mov
and
shr
adc
popf
inc
jo
xchg
pop
push
mov
loopne
stos
pop
incl
jp
push
mov
stos
int
mov
loop
insl
mov
xor
and
outsb
push
mov
mov
jno
clc
and
mov
push
cld
mov
cmp
inc
ja
pop
sti
add
fidivs
out
sbb
mov
imul
sub
pusha
pop
pminub
repnz
lods
pop
loop
ret
mov
jge
mov
jo
jnp
shll
pop
arpl
and
es
lods
scas
xlat
or
scas
cwtl
andl
out
sbb
sbb
or
xchg
cmp
push
push
add
imul
pop
stos
dec
fldcw
fcmovbe
icebp
shrb
rcrl
stc
stc
pop
xchg
pop
sub
in
cmp
lahf
rolb
cli
mov
lock
jnp
jge
lea
loopne
iret
mov
inc
stos
js
icebp
jge
jl
out
pushf
lcall
aas
jl
icebp
pop
movsl
lret
push
pcmpgtb
mov
repz
push
popa
or
mov
mov
mov
push
filds
cmpsb
jno
aas
cmp
enter
les
adcb
pop
add
or
and
mov
mov
mov
in
mov
lods
imul
dec
and
pop
outsl
sahf
xorb
pop
jae
sbb
sbb
pop
in
jge
or
sbb
cmpsl
xchg
ds
jo
jl
dec
push
add
dec
outsl
xchg
arpl
xchg
push
mov
ss
popa
push
add
iret
outsl
out
and
out
shrb
xor
repz
push
inc
xorb
adc
jnp
dec
fcmovb
fnstsw
mov
mov
pop
and
je
std
pop
mull
ja
push
outsb
cmp
lret
inc
pop
in
clc
lds
push
es
out
jne
dec
sub
inc
movsb
and
dec
imul
add
sarb
add
sub
add
add
push
sbb
ja
test
mov
adc
sbb
jmp
sub
adc
and
je
cmc
daa
cmp
push
sbb
gs
cmp
jge
or
adc
mov
mov
mov
dec
pop
addr16
fists
inc
mov
aam
xchg
xchg
mov
dec
push
push
movsb
dec
add
xchg
cmp
nop
xor
es
push
lret
arpl
lret
push
mov
out
outsb
fistpl
jmp
sbb
pop
or
insl
mov
aas
test
arpl
stos
adc
mov
fnstcw
lds
jecxz
insb
mov
xchg
loop
loope
pop
repnz
fcoms
add
add
cmpsl
and
jecxz
aam
aas
data16
scas
cmp
orl
imul
ja
mov
pop
insl
jge
adc
inc
and
cmc
mov
mov
sub
fldt
hlt
adc
mov
mov
dec
popa
loopne
out
inc
inc
mov
movsl
mov
xor
out
mov
and
sbb
or
loope
jno
rcll
out
push
xchg
mov
push
lods
jno
push
shr
inc
and
ja
mov
xchg
pop
xchg
mov
pop
into
mov
xor
cmp
xlat
pop
jmp
in
rcll
stc
xor
fcoms
lea
mov
adc
cmc
lds
dec
add
and
mov
mov
test
lock
cwtl
mov
xchg
inc
outsl
test
mov
sub
and
insl
or
ljmp
dec
inc
sbb
mov
dec
add
and
jnp
pop
lret
cmp
fldl
dec
xchg
inc
out
fdivp
cwtl
xchg
repz
mov
stos
lret
xchg
rcrl
dec
xchg
cmp
adc
vcvttsd2si
mov
jg
lahf
xchg
xor
aam
dec
inc
dec
jne
sub
repnz
jb
inc
cmp
stc
mov
mov
cs
pop
fwait
loope
stos
js
aas
push
adc
loope
call
mov
add
out
push
lret
and
adc
add
adc
shll
jmp
arpl
lods
fwait
xor
test
mov
jnp
lcall
mov
out
fucom
jns
movsb
add
fs
dec
add
adc
mov
insl
add
notl
mov
int
sbb
outsb
addr16
jae
pop
mov
mov
inc
cmp
stos
pop
out
ret
or
jns
imul
mov
cmp
in
xchg
pop
imul
cs
add
jecxz
push
out
out
sub
xchg
or
es
mov
scas
stos
push
lret
and
call
mov
mov
push
push
and
and
push
jmp
addr16
bound
mov
and
jo
and
sbb
sahf
cmp
pushl
dec
cwtl
ds
cld
es
push
mov
repz
lcall
mov
cmp
stc
in
pop
dec
or
pop
repnz
sub
fcmovnu
aad
push
mov
mov
lds
sub
sbb
jecxz
xchg
xchg
inc
push
insl
sbb
mov
int
arpl
or
ja
stc
or
dec
xchg
sbb
dec
mov
sbbb
out
fiaddl
nop
xchg
fsts
shl
mov
and
xor
pop
dec
icebp
sbb
clc
cli
cld
mov
out
fstl
cmp
dec
mov
or
jmp
mov
xor
adc
dec
fdivl
sub
sub
xchg
sbb
cmp
jo
pop
sbb
inc
add
int3
xchg
cli
shrb
jnp
aas
fwait
inc
xchg
stos
jg
dec
sti
loop
add
xlat
lods
mov
call
les
rcrl
mov
jb
cld
cwtl
rcrb
fdivrl
into
arpl
dec
jecxz
xor
stc
out
cmpsb
in
dec
int
and
and
js
mov
popf
insb
jbe
insb
popf
test
xchg
clc
push
mov
dec
test
movsb
imulb
jge
popf
in
jmp
arpl
nop
jge
fstp
sti
lods
fs
push
adc
jmp
movsb
cli
loope
in
ret
cwtl
and
mov
js
cmp
dec
xchg
jns
or
stc
lock
xchg
lds
addr16
clc
shrl
loope
enter
aaa
mov
pop
mov
xchg
in
xchg
adc
subl
pop
fsubrl
xor
lea
inc
jl
mul
mov
in
adcl
shlb
xor
inc
movsb
scas
and
aam
jmp
cmp
test
jne
movsb
sub
jo
adc
ret
adc
in
jne
jge
ror
xchg
adc
push
pusha
out
ljmp
sarb
outsb
fimull
xchg
push
jmp
jmp
popa
sbb
adc
ja
xchg
adc
and
sti
fistps
mov
xor
incl
xor
xchg
add
popf
and
dec
jns
mov
iret
aad
adc
pop
insl
mov
jmp
and
ljmp
jns
shrl
push
pushf
adc
lods
jbe
and
inc
pop
test
fwait
decb
lods
pop
adc
loope
and
leave
inc
nop
add
adc
iret
loopne
xorb
mov
xchg
lods
cld
lret
insl
ljmp
adc
movsb
fsubs
mov
pop
test
cmc
lds
xor
jb
push
inc
ss
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
jmp
rcr
sub
sbb
loope
scas
mov
shr
stos
mov
sbb
add
sbb
inc
cld
push
sub
sbb
cltd
adc
mov
push
jmp
mov
fstl
int
push
in
add
mov
jno
cltd
outsl
ds
jo
cli
insl
mov
dec
aas
aas
ja
adc
sbb
das
rorl
mov
cwtl
loop
jecxz
insl
sub
mov
rol
jl
push
lods
aaa
jb
out
mov
dec
scas
push
push
sub
add
push
les
dec
add
jmp
sub
or
imul
repz
in
daa
cmp
imul
decl
push
lret
pop
push
ss
in
ficoms
pop
sarb
inc
pop
jmp
and
inc
mov
adc
pop
mov
syscall
pop
aaa
cmovne
stos
mov
outsb
cmp
int
mov
iret
jg
fs
mov
loope
loope
insb
lret
daa
mov
xchg
jno
cmp
movsl
mov
stos
stos
pushl
cltd
mov
cmpsb
mov
stc
push
and
lcall
lcall
mov
sub
dec
and
xchg
cmp
push
pop
jne
rcll
push
xchg
jp
ret
shll
jmp
add
xor
nop
test
fcmovne
fstpt
add
xchg
lahf
iret
sbb
rclb
fisttpl
cld
or
movsb
xor
fsubl
lods
test
repnz
mov
test
test
imulb
add
mov
sbb
fdivp
sbb
ret
out
mov
psrld
mov
lahf
testl
push
push
sti
pop
xor
xlat
mov
ret
mov
nop
icebp
jo
cmp
lods
push
jbe
iret
jns
imul
mov
and
and
add
push
push
movsl
xchg
gs
cmpsb
mov
mov
mov
pop
insl
sti
nop
push
sbb
dec
into
add
mov
jns
negl
jns
dec
in
mov
pushf
ret
push
into
or
pop
cwtl
clc
jle
push
lods
insb
nop
test
fs
ret
in
mov
mov
roll
sub
sbb
ljmp
pop
clc
mov
out
dec
xchg
fcompl
std
sub
rcrl
or
iret
mov
sahf
cmpsl
xchg
jmp
jecxz
xchg
mov
jg
pop
mov
push
lret
push
movsl
cld
jnp
in
mov
fwait
mov
dec
sbb
sub
xor
adcb
iret
frstor
dec
dec
and
inc
mov
and
dec
mov
cmp
pop
nop
mov
xor
addr16
test
lods
ja
push
xchg
mov
push
data16
pusha
sarb
lods
cmp
negl
movsb
loopne
pop
loopne
bound
loopne
loopne
ss
sbb
pushf
jae
jb
fidivrs
add
in
push
in
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
jmp
adc
nop
dec
mov
mov
add
sbb
mov
adc
in
push
xor
jne
pop
enter
cmp
and
inc
jecxz
xor
movsb
loop
insb
inc
xchg
adc
aaa
in
pop
fwait
or
mov
fadds
sub
rcll
decb
outsb
les
in
xor
lods
push
adc
mov
dec
jle
in
mov
add
xchg
stos
push
mulb
or
cltd
push
or
or
hlt
idivb
out
mov
repnz
mov
pop
xlat
call
out
sub
fstps
mov
testb
fs
jae
ret
xchg
push
push
push
out
push
mov
inc
lret
xchg
ljmp
std
fsubl
test
aas
ja
xchg
iret
sub
pop
jge
arpl
into
sbb
scas
and
flds
adc
out
loop
dec
add
add
sbb
int3
inc
out
andl
ja
sbb
push
sbb
cmp
xchg
lea
movsb
je
test
and
fistpl
pop
or
aas
push
push
je
notb
dec
add
xchg
mov
notl
repz
mov
xchg
ja
xchg
dec
stos
insb
notb
mov
lahf
adc
jne
jmp
aas
cmpsb
rcl
xor
mov
pop
lcall
push
add
mov
shrb
mov
ljmp
mov
push
into
sub
stc
and
rorl
adc
icebp
jmp
out
inc
push
dec
imul
fisubrl
sub
andb
adc
mul
test
mov
inc
daa
pop
sub
or
movsb
lcall
lds
test
cmpsb
xchg
cld
out
mov
dec
daa
or
mov
pop
and
mov
push
pop
fcomip
lahf
xchg
push
mov
mov
xor
outsl
popw
push
jge
push
or
lods
in
pop
push
insb
push
pop
mov
cltd
pushf
or
jle
fs
and
and
je
jl
pop
adc
dec
fucomp
mov
sub
jnp
xor
xor
imul
insb
sub
mov
andb
out
mov
in
push
push
cltd
pushf
testb
les
scas
mov
jge
lods
mov
push
jae
mov
mov
in
adc
push
sbb
outsb
and
xchg
sbb
fstpl
pop
mov
ds
outsb
mov
daa
fs
int3
shrb
cmp
dec
push
mov
call
jmp
loope
sbb
or
adc
cmc
lcall
icebp
push
lret
push
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
jmp
push
test
and
adc
sbb
add
sbb
fcomp
add
jae
mov
ds
mov
and
push
inc
pop
mov
and
shll
lock
cmpsb
push
add
je
into
mov
std
jno
inc
fistps
pop
cmpl
pop
pop
or
daa
ds
dec
cwtl
pop
stos
shl
mov
mov
bound
addl
fimuls
lods
loop
adc
xchg
push
xchg
test
jmp
xor
ds
sarb
in
sbb
in
mov
mov
xor
daa
arpl
mov
mov
rcrb
add
pop
int3
inc
dec
movsl
jmp
gs
push
jmp
sar
xor
cmpsl
or
test
sub
xchg
loopne
add
scas
mov
divl
jae
inc
jl
sbbb
inc
addb
mov
in
mov
lcall
ds
cli
aad
imul
cmpsl
fmull
mov
ret
cmp
out
xchg
xor
sub
or
mov
cmp
mov
incb
cld
sahf
add
scas
push
jno
cli
sub
mov
lahf
mov
test
mov
mov
mov
fdivrs
lods
rclb
mov
arpl
cmpsl
enter
repz
jp
push
adc
xchg
fwait
jecxz
and
pop
dec
test
dec
adc
sub
mov
idivb
fs
nop
pushf
js
das
dec
ror
daa
negl
adc
mov
xor
fimull
js
std
jnp
sbb
icebp
mov
mov
inc
stc
in
jo
adc
pop
add
std
lods
jg
addr16
push
loop
shl
pop
xor
lcall
ja
jp
aas
outsl
es
sahf
mov
movsb
scas
add
mov
call
imul
lcall
fstpl
addr16
lea
cmpl
scas
cld
sbb
and
aaa
push
mov
cmp
es
jle
lcall
hlt
orl
dec
push
xchg
or
jae
cmc
mov
movsl
jg
adc
fwait
scas
or
add
mov
mov
stos
mov
sbb
lret
stos
movsb
scas
out
xor
jno
scas
roll
inc
jo
imul
test
inc
call
xlat
push
sub
sahf
movsb
in
pusha
xlat
nop
nop
jmp
fbstp
hlt
fidivl
mov
fcomps
push
dec
and
add
ret
sarl
mov
dec
inc
sub
mov
mov
cmp
sbb
clc
icebp
aaa
stos
mov
loop
push
imul
pop
inc
or
cltd
push
sub
popf
mov
or
xor
les
pop
push
fisttps
fsubl
inc
add
ret
push
mov
sub
push
push
push
movl
jmp
push
lods
pop
inc
lret
jo
into
mov
or
sbb
es
cs
fimull
cmp
pop
sub
jmp
fstpl
fdivrs
andb
jae
mov
sbb
xchg
mov
lcall
sub
sete
cmp
push
lahf
mov
rcr
add
xlat
dec
add
ss
and
xor
add
es
or
dec
das
test
daa
icebp
or
sub
mov
sbb
dec
js
mov
ret
push
ss
add
add
jne
in
addr16
xor
adc
pop
iret
jne
mov
scas
and
and
push
dec
mov
and
insb
xor
push
lret
xchg
push
mov
gs
fldt
pop
mov
lods
xchg
shll
or
ja
sbb
popf
lods
in
or
into
inc
cmc
fwait
loope
lret
sbb
pop
cs
fnsave
stc
loop
or
sub
add
test
add
mov
aad
cmp
push
adcl
mov
icebp
mov
dec
inc
insb
test
xlat
mov
jne
jbe
cmpsb
xlat
movsb
lret
xchg
fldt
cld
arpl
add
adc
adc
imul
sub
rclb
cli
mov
sahf
jmp
add
divl
xor
sbb
out
mov
movsl
outsb
inc
insl
sub
adc
pop
nop
cs
jl
mov
xchg
movsb
mov
mov
add
movsl
out
dec
jge
dec
test
lcall
push
or
pop
insb
pop
mov
mov
jmp
ret
pop
sbb
and
and
xlat
sahf
nop
inc
xor
or
sbb
sbb
movsl
ret
pop
cwtl
mov
mov
pop
pop
add
aam
fdivrp
sub
lret
es
lcall
push
add
or
sbb
and
lods
sti
jns
and
enter
adc
mov
sub
lock
repnz
sub
out
or
xchg
cmp
push
fsubrp
mov
fisubrl
xlat
pop
popa
outsl
mov
bound
ficompl
fisubrs
cmp
test
jle
mov
lods
or
or
xchg
cmpsb
js
mov
adc
repnz
fs
test
mov
mov
sbb
mov
inc
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
jmp
xchg
jne
je
es
je
mov
push
mov
rolb
sbb
test
sbb
imul
inc
jge
mov
mov
push
sub
add
mov
sbb
add
add
mov
andl
loopne
push
imul
cmpl
and
mov
xor
push
hlt
hlt
push
pop
hlt
pusha
cmp
push
xchg
cmp
scas
inc
sbb
pop
mov
dec
negb
imul
lcall
into
imul
push
sbb
sbb
out
sub
and
int3
jns
pushf
xchg
pop
and
jno
mov
and
or
scas
lock
fs
jae
cwtl
add
add
fwait
lea
xor
imul
ds
pop
jp
pop
push
push
jae
scas
insb
hlt
ljmp
jae
cs
imul
pop
cmp
negb
push
icebp
out
cmpsl
push
mov
lds
mov
ficomps
push
ljmp
adc
xchg
outsb
insl
fidivrs
filds
add
push
lret
mov
fidivrs
call
cmpsb
push
cmp
mov
dec
jl
aaa
xchg
mov
popf
pusha
insb
mov
jnp
push
out
lods
fisttpl
mov
xlat
jge
test
rcll
add
movsl
in
leave
idivb
mov
in
mov
popa
mov
ret
mov
lret
mov
cld
xchg
movb
xor
mov
or
in
adc
ficoml
je
je
repz
pop
sarl
dec
jl
lods
pop
or
fwait
mov
mov
std
pop
inc
cs
shlb
add
mov
jg
jle
push
xor
test
mov
cmpsb
push
mov
sbb
lods
add
xchg
out
xor
hlt
inc
mov
and
pop
or
lahf
inc
and
leave
fbld
pop
les
movsb
xor
repnz
inc
hlt
popf
mov
in
jmp
insb
jg
popf
inc
add
cmp
out
sub
jecxz,pn
stos
js
stos
test
shlb
or
iret
and
xchg
outsl
xchg
hlt
dec
and
jbe
shl
mov
mov
push
jns
push
cmpsl
aaa
cli
dec
cs
xchg
movb
sub
push
call
scas
rclb
std
and
fxtract
or
jl
dec
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
jmp
pop
dec
ficoms
daa
ss
push
roll
test
sbb
pop
mov
sbb
jmp
sarl
sti
adc
scas
sti
pop
insl
mov
sbb
xor
leave
in
or
or
xor
lcall
pop
call
enter
stc
aaa
stos
push
or
xchg
mov
xchg
call
mov
jle
ret
test
insb
fsts
out
clc
push
in
jno
jmp
cltd
mov
cs
mov
push
xchg
out
sbb
icebp
adc
scas
and
nop
fisubrl
leave
mov
add
in
sub
mov
adc
push
xor
xchg
xchg
leave
insb
outsl
out
pushf
and
jge
aas
cmc
mov
mov
in
pushf
cmp
push
cwtl
xor
popa
clc
leave
hlt
lahf
cmpsl
lods
mov
and
sbbb
jmp
sti
sub
inc
sbb
int
mov
pushf
daa
lret
xchg
mov
scas
aam
mov
push
adc
push
sub
adc
cmpb
insb
fwait
or
add
sarb
cli
inc
or
jl
fwait
cmp
dec
xor
xor
rcrl
xor
inc
adc
xchg
dec
inc
mov
sbb
gs
aaa
mov
sahf
dec
xor
gs
fidivrs
and
les
test
mov
aam
in
jae
inc
pop
das
xchg
mov
loop
mov
sti
insl
xlat
clc
incl
addr16
mov
loope
jp
cmp
jnp
cmp
pop
add
jecxz
fistpll
mov
or
jecxz
sbb
mov
dec
or
xor
mov
or
test
ret
stos
bound
repz
jns
sahf
xor
mov
test
sub
sarb
fwait
or
iret
sti
scas
cmpsl
test
fistl
fstl
and
jbe
mov
xlat
push
and
jne
cli
test
add
push
cmp
popf
mov
ror
adc
and
inc
adc
fwait
or
scas
xlat
out
addr16
imul
cmp
sbb
mov
sub
push
xor
cmpsl
jno
ljmp
lret
negl
mov
jo
pop
pop
add
jns
mov
arpl
icebp
or
out
pop
fisubs
and
lods
xor
movsb
jnp
test
mov
dec
mov
adc
sbb
ret
fmuls
scas
ret
or
add
sarb
lret
mov
ljmp
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
jmp
sbb
dec
push
dec
and
and
lock
sbb
jle
imulb
adc
jae
subl
add
loopne
imull
lcall
movsl
push
stos
ja
sahf
and
dec
mov
jo
loope
push
imul
cmp
lret
mov
mov
lcall
filds
imul
mov
out
popf
xchg
ds
lds
dec
scas
mov
mov
cmp
cmp
or
xor
stos
cli
pop
jno
je
or
inc
cmp
sbb
sbb
or
stos
rorb
push
dec
push
xchg
sub
lahf
jnp
jg
sbb
btr
repnz
add
ds
adc
imul
insl
mul
jo
inc
adc
adc
shlb
xor
mov
fsubp
inc
int3
lods
lock
add
jbe
xchg
mov
mov
scas
sub
push
inc
fdiv
adc
cmp
test
xchg
aad
call
sbb
sub
jg
ror
pop
ljmp
jne
sbb
stos
cli
mov
es
mov
and
ljmp
sbb
xchg
ds
popl
call
and
mov
jg
rolb
cs
and
xor
push
js
cmp
pusha
fmull
or
sarl
aas
xchg
lods
and
lods
inc
add
mov
dec
shrl
loope
mov
mov
pop
jno
push
aad
in
jmp
into
testl
ja
or
jno
test
in
fsubrp
push
gs
in
fsubrl
out
adcb
ds
xchg
mov
xor
hlt
sbb
jbe
and
mov
fwait
ljmp
pop
cmc
xchg
dec
dec
xchg
adc
push
cmpl
inc
pop
jmp
adc
push
daa
popf
cwtl
add
add
es
cli
mov
das
aad
or
xlat
shl
aaa
mov
cmpsb
push
jge
cld
or
ret
sarb
lret
jmp
loope
filds
mov
xchg
test
pop
mov
jno
nop
or
cmp
mov
int
add
popa
jb
rcrl
hlt
xlat
testl
mov
xchg
inc
xchg
faddl
loopne
repnz
push
add
call
xor
in
sub
loopne
cmp
add
inc
fdivrl
cmp
add
inc
in
int
add
jmp
push
mov
fistpl
xchg
or
negl
sbb
mov
add
cmp
sub
ds
mov
gs
push
popa
pop
clc
dec
sub
lods
loopne
sti
outsb
pop
lds
inc
shll
mov
xor
pop
loopne
pop
pop
mov
mov
pop
xchg
xlat
jns
test
shrl
cmp
mov
jbe
in
das
and
or
pop
or
mov
clc
xlat
xchg
test
cmp
and
mov
mov
xor
movsb
xor
mov
les
out
mov
cli
adc
inc
and
movl
push
testl
add
call
outsb
and
and
mov
clc
icebp
jp
pushf
pop
or
orl
ror
or
stos
movsb
or
fisubrl
sbb
repnz
cmp
stos
xor
sub
dec
aad
sbb
mov
xor
mov
cmp
mov
sbb
shr
stos
popa
pop
std
loop
xlat
cmc
adc
in
inc
fdivl
shll
inc
fsubrl
pop
jecxz
not
lcall
push
repz
push
ds
xor
sub
push
ds
or
mov
enter
sub
sahf
mov
sar
xor
shll
imul
daa
pop
pushf
adc
jmp
jg
daa
sbb
test
add
inc
lds
cmp
movaps
mov
int
nop
div
leave
cmp
ljmp
mov
mov
test
cmp
ds
cmp
sub
ficoms
mov
xchg
cmpl
rcll
jo
data16
dec
nop
rcrl
ret
push
inc
fwait
cmp
jle
jne,pn
inc
pop
je
jae
in
test
ret
pop
mov
push
sub
rcr
jae
push
mov
les
js,pt
out
cmp
and
loope
mov
cli
lods
int3
push
push
or
fwait
addl
mov
push
lret
scas
cmpb
dec
push
sbb
pusha
adc
add
jae
aas
aaa
pushf
cs
rorb
fcomi
pushf
shll
rolb
mov
and
mov
movsb
and
push
lret
cs
les
ja
push
and
jne
dec
aam
lahf
je
push
mov
in
or
push
imul
ja
lahf
imul
movl
movl
jmp
aas
mov
mov
dec
mov
xor
test
sbb
sbb
insb
testb
mov
imul
inc
inc
jecxz
popa
filds
sub
into
mov
mov
or
inc
add
call
jp
cmp
push
or
scas
mov
cmp
pop
xchg
push
fwait
xchg
daa
pop
or
or
sti
lds
mov
in
or
scas
sub
div
cs
inc
cmp
pop
outsl
mov
mov
ret
mov
movsb
mov
outsl
leave
inc
aaa
clc
mov
dec
addr16
mov
daa
pop
jg
adc
movsb
mov
pop
movsb
cwtl
pop
add
into
aad
and
pusha
push
loope
push
loope
cmp
fcoml
aaa
mov
mov
addr16
imul
mov
pop
push
and
dec
xchg
aam
adc
push
pop
cli
sub
push
pop
out
sbb
push
aam
jecxz
les
adc
and
xor
aaa
cmp
cmc
scas
mov
shl
xlat
cmc
rol
adc
in
jecxz
ds
sub
push
pop
insl
and
jns
or
arpl
in
out
aad
dec
js
sbb
sbb
mov
imul
clc
loop
xor
popf
fs
sti
rorl
rclb
pusha
sub
dec
data16
iret
outsl
inc
ss
sbb
addl
in
dec
pusha
test
clc
cmp
popf
and
jbe
loope
das
jecxz
push
int
pusha
or
pop
xor
mov
mov
mov
push
mov
and
fmul
add
nop
negb
mov
mov
inc
and
mov
sahf
mov
jae
inc
mov
mov
fs
sub
dec
sahf
sbbl
dec
xor
js
jno
dec
test
clc
jne
cwtl
pop
dec
adc
push
loopne
push
fistps
push
pop
in
popa
std
pop
mov
jge
test
clc
lcall
jo
ljmp
xor
cli
mov
in
xchg
imul
xlat
jp
dec
xchg
lret
pop
lret
adc
leave
mov
in
or
decb
pop
jle
add
push
test
sbb
jb
add
xchg
in
loopne
dec
loop
mov
outsl
out
dec
cmpsl
sbb
sub
xlat
inc
inc
leave
push
dec
pop
sbb
mov
sarw
push
push
pop
pop
or
call
jmp
gs
jl
and
out
mov
push
pop
div
mov
jmp
lahf
ds
xor
lcall
cmp
mov
adc
sbb
stc
into
imul
sub
popf
jo
shl
or
or
flds
inc
pop
xor
gs
jae
test
pop
pop
or
mov
sbbl
jp
jle
cmc
sub
mov
xchg
shrb
push
pop
imul
inc
rcrb
wrmsr
rcll
and
sbb
test
int3
push
jmp
movsb
xchg
imul
and
mov
adc
repnz
fmuls
push
mov
pop
in
fmull
push
or
cmc
push
lock
test
lret
addr16
daa
push
push
adc
loop
xchg
incb
jle
jne
fldenv
insl
lock
scas
add
pop
cmc
sbb
lahf
dec
es
push
mov
out
xchg
inc
mov
mov
fs
push
dec
xchg
xor
negl
lods
inc
das
jb
xchg
xor
xor
mov
jg
xorl
mov
push
add
push
mov
pop
rolb
sub
arpl
sbb
lahf
push
sbb
xchg
sbb
inc
movsb
fsubrs
add
add
pop
fs
in
xchg
inc
test
mov
mov
ret
aas
movb
imulb
test
decb
cs
lea
cmpsb
fstpt
xor
or
rcrl
or
pop
and
mov
pusha
xor
jno
scas
jle
pop
aas
sbb
jo
ss
cmp
and
inc
movsl
in
and
call
call
flds
sbb
rorl
and
hlt
mov
sub
lock
in
into
stos
in
clc
fists
ljmp
fimuls
daa
mov
cmp
xor
clc
and
mov
andl
add
repz
add
xchg
fidivs
inc
je
cwtl
pop
out
test
popa
hlt
jno
aad
cli
jb
cwtl
test
pop
pop
test
hlt
xchg
pop
pusha
sub
sbb
aas
mov
loop
fisttpll
cmpsb
imul
xchg
mov
mov
sub
mov
push
jno
mov
mov
add
mov
icebp
and
sbb
or
push
mov
add
iret
sbb
inc
outsb
cmp
test
das
adcl
mov
or
sub
push
adc
add
mov
xor
and
mov
mov
mov
sbb
adc
ret
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
jmp
push
push
push
scas
sbb
inc
pop
jns
jo
imul
sbb
and
adc
or
xchg
jno
jb
call
push
ds
pop
inc
sub
fistpl
push
adc
push
pop
cmp
xor
adc
cmp
aaa
lea
and
movsl
faddp
push
pop
xor
xorb
push
pop
int3
dec
adc
int
or
or
and
repz
sub
into
or
loopne
push
xlat
xor
jg
stos
jno
or
fs
pop
jg
imul
pop
lds
xor
cmc
mov
adc
pop
add
inc
xor
push
bound
dec
mov
add
fcompl
push
sub
inc
dec
stc
jb
add
les
inc
cmp
push
xor
dec
push
ljmp
enter
xor
xchg
cmp
enter
or
adcb
mov
adc
pop
mov
mov
sbb
xchg
or
push
pusha
inc
lods
xchg
mov
cli
xor
es
xor
jne
pusha
lods
mov
mov
pop
leave
pusha
sub
adcl
into
cmp
push
ss
movsl
mov
xchg
mov
cmp
test
imul
nop
popa
icebp
js
sbb
std
adc
orl
and
aaa
mov
mov
loope
insb
stc
or
jle
xor
sub
lcall
inc
push
dec
das
push
xchg
push
mov
adc
jo
repnz
sub
sbb
push
fiaddl
mov
mov
imul
inc
call
inc
and
adc
jbe
in
pop
fwait
in
fld
loopne
jge
adc
mov
jmp
jmp
xchg
jecxz
out
push
mov
bound
ret
mov
mov
jp
mov
mov
imul
ret
lcall
jnp
sbb
or
sbb
mov
daa
aaa
shlb
int
jmp
cs
gs
arpl
in
mov
ja
neg
cmpsb
sti
lock
dec
ss
rorl
push
mov
insl
in
not
cmp
dec
iret
cmp
gs
stos
add
aaa
adc
ljmp
stc
push
adc
xchg
sbb
pop
sti
mov
clc
add
andb
push
lret
sub
dec
stos
daa
test
lret
mov
cmp
addr16
and
out
fcoms
icebp
xchg
and
push
mov
and
add
ret
div
mov
mov
sub
mov
mov
mov
jmp
jmp
push
and
cmp
jl
loopne
sbb
dec
jl
push
lock
pop
push
and
lret
xchg
test
arpl
xchg
cmp
icebp
jl
inc
pop
jl
adc
dec
mov
or
ss
xor
mov
imul
gs
out
cmpsb
fnstsw
push
test
jl
xor
cmp
dec
iret
in
incl
push
popf
fnstenv
rorb
adc
pop
dec
xor
inc
mov
mov
or
iret
mov
shll
popa
cmp
lcall
xor
lds
or
imul
es
cwtl
pop
mov
dec
daa
push
jbe
divl
ret
mov
cli
xor
cmp
push
shlb
imul
add
lods
aas
mov
arpl
cld
sarb
lds
popl
mov
xor
mov
out
mov
test
mov
aaa
shlb
aam
lods
inc
arpl
call
add
adc
cmp
jae
lret
pop
pop
clc
sub
push
divl
mov
movsb
fwait
and
dec
jbe
pop
js
push
pop
orl
repnz
push
out
sbb
or
add
xchg
adc
add
je
dec
push
inc
hlt
popf
arpl
scas
stos
jg
loop,pn
imul
fnstenv
mov
push
ret
arpl
scas
mov
repnz
pop
xor
imul
mov
cmp
aad
xor
scas
cmpsb
dec
ficomps
xlat
dec
scas
xor
lcall
cmp
pushf
repnz
outsl
pop
nop
dec
jne
fbstp
sbb
jbe
xchg
xor
cmc
dec
mov
popf
add
outsb
mov
loope
negl
cli
adc
cmpl
cmp
mov
mov
pop
or
test
out
in
push
loopne
pop
neg
jbe
cli
dec
shlb
xchg
xlat
mov
push
adc
loope,pn
cmp
jb
pop
lcall
and
stc
sbb
sub
cmp
and
inc
mov
sub
fld
sub
in
pop
sbb
imul
pop
fdivl
dec
inc
add
sub
add
add
and
stos
sub
cmp
pop
repz
aaa
orb
jg
push
test
in
out
in
rclb
push
in
xchg
into
mov
push
jg
xchg
mov
in
fs
cmp
stos
xor
xchg
jne,pt
add
stos
pop
aaa
adc
es
stos
jne
lea
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
hlt
aam
adc
pop
and
cmp
sbbb
ficompl
sbb
adc
sbb
mov
test
ds
test
dec
mov
rcrl
movsb
dec
add
cli
mov
adc
mov
xchg
jg
pop
pop
jge
cmp
mov
sbb
lock
pushf
jp
xor
cltd
sbb
fidivrs
jbe
pop
mov
out
jb
dec
cmp
and
pop
fidivl
pop
adc
xchg
mov
xlat
sti
xchg
decb
pop
mov
inc
xlat
popa
leave
jbe
stos
pop
mov
pop
or
test
in
out
pop
adc
add
es
jne,pt
and
xor
xchg
jl
out
mov
orl
movsl
or
sub
pop
cmp
sub
in
sbb
pop
add
cmp
rcr
jnp
jp
ljmp
into
push
jno
pushf
in
inc
pop
int3
ror
jmp
bswap
data16
mov
repz
test
push
fidivrl
sub
lods
out
call
push
jl
adc
xor
mov
pop
lret
mov
clc
cld
add
inc
and
cmpsb
scas
add
scas
mov
repz
pop
add
and
repz
inc
adc
xor
dec
sbb
mov
sahf
push
pop
stos
mov
sub
pop
dec
mov
in
inc
stos
fadd
xchg
or
enter
std
scas
lret
xor
mov
adc
into
mov
lods
aam
das
cmp
xor
mov
sbb
dec
sub
adc
and
lods
sbb
cld
loop
inc
das
fidivrl
test
iret
xor
cmp
data16
jae
mov
and
sub
pop
jmp
lahf
push
leave
ljmp
jg
sbb
psubw
jmp
lcall
pop
lea
loop
mov
dec
fs
lret
das
push
imul
jmp
data16
fcmovnu
xchg
inc
fmull
xchg
fsub
sub
insl
xchg
sbb
rcrl
int
jnp
inc
int3
sub
sbb
sbb
pop
mov
fnsave
pop
data16
mov
outsl
inc
adcb
sub
adc
inc
sbb
cmp
add
lods
ret
dec
jge
xor
ljmp
aam
pop
dec
out
mov
jne
push
ds
ret
aaa
je
test
leave
fists
leave
sahf
jne
sbb
jecxz
out
leave
mov
push
enter
sahf
jb
sub
fs
adc
add
testl
orb
test
dec
out
cmp
jp
or
ss
clc
push
lahf
jg
enter
pusha
cs
cmp
push
ljmp
outsb
dec
pushf
bound
iret
pop
push
pusha
imul
ror
cld
mov
cmp
sub
nop
cmp
pop
and
dec
xchg
fimull
pop
mov
sbb
or
and
sub
push
jg
push
mov
das
mov
out
sbb
add
push
mov
aam
xchg
push
stos
cmp
push
jb
xor
test
xor
dec
es
cmpsb
sbb
or
idiv
movl
mov
mov
add
or
mov
lea
jmp
lcall
ficomps
inc
dec
pop
jle
je
mov
xor
sbb
inc
push
clc
daa
loopne
push
sbb
push
inc
fmuls
xor
adc
insb
pop
xor
idivb
ljmp
inc
jbe
sbb
inc
push
in
add
dec
jnp
mov
ffree
sbb
inc
lcall
decl
mov
es
jnp
inc
in
cmp
sbb
inc
cli
lds
rcr
xchg
adcl
adc
push
inc
loopne
inc
or
sbb
and
inc
add
jns
push
dec
and
dec
pop
inc
sub
cmp
lea
das
fucomip
or
icebp
pusha
push
fstpl
adc
mov
mov
movsl
fbstp
shll
pop
scas
test
and
int3
jmp
insl
out
lds
or
sbbb
xor
hlt
add
cs
adc
out
pop
in
insb
outsl
pop
pop
inc
lods
test
cmpb
mov
test
fwait
aaa
fs
mov
pop
mov
das
test
js
jecxz
test
xchg
push
dec
int3
leave
dec
dec
mov
enter
ret
jmp
add
sti
jmp
mov
rolb
lret
xchg
lret
jns
cmpsl
lret
fisttpll
ds
xchg
sub
xlat
ds
in
cmp
pop
jnp
imulb
and
push
aas
and
mov
xchg
sub
pop
lock
inc
rcrl
add
mov
add
hlt
shr
push
sbb
addl
inc
aas
fs
mov
fcmovne
sbb
jbe
push
add
fldcw
pop
push
into
mov
out
mov
add
sbb
in
adc
add
dec
stos
push
test
shlb
cli
jae
push
sbb
test
scas
loop
mov
incb
imulb
sub
enter
adc
jno
sub
xor
clc
sbb
or
sbbl
enter
pop
aam
imul
shrb
aam
and
xchg
fstl
xlat
push
sub
lods
pop
fdivp
adc
dec
jne
xchg
jae
add
loopne
hlt
dec
dec
std
daa
add
lahf
xchg
or
loop
inc
xchg
add
sub
popf
lock
jno
pusha
int3
into
adc
lret
jmp
inc
push
cwtl
pop
mov
fbstp
pop
aaa
or
repnz
mov
add
mov
out
adc
pop
sbb
xor
insb
xor
jae
arpl
push
popa
sbbl
adc
dec
shrb
mov
adc
adcl
aad
insb
js
xor
xorl
sbb
stos
mov
popl
into
in
dec
dec
jne
push
int3
ficoms
lcall
push
jmp
fs
cwtl
shrd
push
hlt
outsb
add
add
loopne
jg
sub
cltd
pop
outsb
les
xchg
lods
sbb
adc
fdivp
cmpsb
and
in
add
cmp
or
jns
adc
cmp
xor
insl
cmp
mov
inc
cs
lds
pushf
xchg
sub
mov
dec
cmc
fwait
xor
xor
mov
movl
movl
mov
mov
and
xor
jmp
out
icebp
aaa
insb
aaa
sub
mov
or
sbb
pop
mov
cmpsl
pop
stos
push
mov
add
mov
push
cli
sub
pushf
sbb
adc
jo
add
push
in
mov
xchg
popl
fs
dec
stos
shrb
std
mov
popl
sbb
inc
adc
dec
cmpsl
add
xchg
and
clc
loope
insl
std
fbstp
loope
and
loopne
sbbl
fsubr
idiv
pop
push
loop
mov
mov
movsb
negb
addr16
push
pushf
mov
out
ret
cmpsl
repz
inc
lods
int
push
adc
jb
and
clc
test
cmc
inc
addl
inc
mov
push
inc
adcl
cltd
fstl
mov
scas
push
xor
sbb
inc
mov
sbbb
or
sub
mov
cli
jnp
ss
jb
jne
out
pop
add
loop
mov
arpl
lahf
rclb
sahf
scas
xor
xchg
cltd
mov
incb
pop
jnp
in
push
mov
enter
push
cmpsb
lcallw
mov
js
frstor
lret
maskmovq
testl
dec
enter
loopne
in
and
fstp
shll
sub
adc
cwtl
and
pop
and
adc
bound
xlat
fiaddl
sbb
dec
aam
rcrl
dec
pop
or
aam
add
pop
mov
jle
rcll
out
test
jp
or
into
or
dec
jb
ljmp
js
je
or
repz
push
int3
pop
lods
or
adc
sub
aaa
adc
cwtl
insb
movsl
mov
pushf
sbb
or
dec
xchg
pop
mov
and
movlps
pop
gs
xor
es
and
jg
fisubrs
divb
ror
jnp
dec
jo
shlb
lret
pop
push
and
sbb
mov
pop
lret
sub
imul
pop
jne
jge
aad
in
inc
sbb
push
cmc
leave
push
push
ret
rcr
cltd
mov
aas
cmpsl
sbb
dec
xor
loope
es
pushl
orl
lret
dec
inc
outsb
jg
sbb
popa
in
int3
push
rol
ret
les
inc
push
dec
lret
xchg
mov
mov
mulb
jne
and
dec
and
adcl
mov
mov
pop
ja
add
adc
dec
shll
mov
aad
push
jb
dec
movsl
mov
scas
pop
outsb
lea
cmpsl
shlb
and
jne
dec
lock
adc
icebp
cmp
out
jmp
mov
jge
jecxz
inc
out
ja
scas
or
jne
ret
jb
lock
test
sub
mov
xchg
push
clc
outsb
repz
call
nop
sub
out
out
jecxz
mov
cmp
int3
clc
adc
fsubr
imul
cli
imul
dec
add
and
or
jae
cmp
jp
sub
sbb
jge
cmpsl
cmp
cmp
sbb
mov
dec
push
fwait
test
add
sbb
lea
mov
movl
movl
mov
xor
push
pop
div
jmp
jb
pop
in
sbb
push
lret
rcrb
fnstcw
imulb
sbb
xor
sbb
mov
mov
in
mov
mov
mov
xchg
mulb
xchg
xor
mov
add
sbb
ljmp
mov
into
dec
leave
movlps
lret
fbld
adc
lds
mov
outsb
sub
pop
stos
push
pop
xchg
or
add
out
lds
stos
mov
mov
pop
into
cmpsl
dec
shrl
aaa
xor
in
shrb
in
fs
sbb
push
xor
dec
push
mov
stos
and
hlt
aam
in
xchg
jmp
movsb
push
add
cmp
ljmp
cltd
push
in
cmp
xor
xor
or
sub
xchg
xchg
std
std
in
test
jmp
ror
adcb
popa
push
into
imul
scas
xchg
adc
outsl
popf
arpl
repnz
jo
cmp
jo
out
ret
cli
pushl
dec
enter
mov
into
lahf
xchg
mov
fistpl
fs
sbb
mov
pushf
mov
dec
and
or
sbb
push
ja
paddq
push
dec
cmp
in
jecxz
shrb
daa
fucomp
lret
aam
inc
cmp
fists
ss
jo
adcl
lret
add
aas
clc
adc
test
sbb
sub
aam
pmaxsw
mov
popa
test
fld
adc
leave
jl
scas
stos
out
mov
mov
sbb
testb
jbe
add
cmp
fwait
leave
icebp
inc
push
push
xor
xor
sbb
xchg
inc
mov
mov
lret
sub
movsb
xchg
xchg
or
shl
or
sub
test
lcall
ficomps
cmp
movsb
pop
out
jne,pt
dec
cmpsb
xor
xchg
push
fs
jge
pop
insb
mov
xlat
sbb
out
gs
ficomps
sub
ja
adc
xor
fcomip
test
repz
rcl
int3
mov
pop
test
outsb
sbb
sbb
pop
adc
jb
mov
test
call
cmc
xchg
pop
scas
popf
mov
sbb
fucomp
aas
arpl
cmpsl
je
and
mov
daa
or
sub
in
in
push
dec
pop
mov
inc
pop
adc
ds
hlt
xorb
add
sti
xchg
pop
inc
pusha
jo
cmp
mov
sbb
pop
cmp
popf
popa
sub
cmp
adc
xchg
lea
sub
movsl
xor
lock
loop
xor
jb
pop
subb
dec
loopne
or
xor
xor
movsl
repz
cmp
adc
les
sbbl
and
sbb
cmc
std
xor
mov
mov
icebp
inc
fidivl
in
fsubl
scas
add
inc
ja
jae
inc
inc
dec
pop
ljmp
shrb
out
fisubrs
or
rorl
or
es
push
stc
out
repnz
jmp
sub
ljmp
or
push
nop
sahf
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
jmp
fmull
fiaddl
clc
push
xchg
aaa
push
mov
sbb
daa
std
xchg
filds
loope
dec
push
mov
subb
push
sbb
push
xlat
out
dec
cmp
jg
mov
jbe
imul
ret
sub
int3
int
sub
jnp
push
and
pop
mov
std
sub
fiadds
lock
outsl
or
cmp
add
cmpsb
adc
fidivrl
and
loop
stos
out
push
dec
movsb
ljmp
mov
in
notb
inc
mov
lcall
test
std
imul
orl
loop
and
xor
dec
popl
add
mov
jbe
sti
dec
mov
sub
jbe
dec
outsl
pusha
dec
ss
xchg
rcr
sub
sub
int3
hlt
jl
sub
mov
in
pop
sub
jae
ja,pt
mov
push
faddp
sahf
dec
jb
xor
cmp
mov
lods
sbbl
sahf
mov
mov
popf
pop
repnz
cli
icebp
inc
sub
ja
mov
xlat
xchg
or
daa
or
sarb
xchg
testb
pop
push
jecxz
shl
lret
inc
mov
cli
or
mov
ret
cmp
mov
outsl
mov
outsb
aad
and
inc
adc
stos
or
dec
jmp
inc
jb
arpl
jb
outsl
fistl
test
push
fcomps
push
int3
xchg
sbb
int
jb
loop
push
mov
negl
sbb
sbb
imul
out
popw
cmp
lds
lcall
or
scas
es
mov
out
cwtl
cmp
fdivrl
test
scas
mov
ficompl
aam
imul
inc
mov
add
pop
inc
adc
lret
fisubl
mov
jno
es
push
jno
mov
mov
icebp
lock
and
rcll
cmpsb
cmp
in
std
inc
add
jno
rcrl
jl
pop
add
push
inc
xor
jle
js
or
add
add
push
sub
jl
popf
cvttps2pi
ficoml
incl
pop
adc
pop
js
ljmp
push
movsb
mov
push
sti
cmc
xchg
xor
mov
and
lods
vaddsubpd
xchg
je
jmp
push
mov
lcall
dec
and
jmp
lmsw
aad
inc
pshufb
push
gs
mov
aaa
adc
add
mov
ljmp
stos
std
adc
shrb
ljmp
cmpl
inc
dec
sub
fmull
lea
pop
inc
pop
outsl
add
out
pop
lcall
pop
cwtl
int
or
lret
mov
loopne
push
dec
lcall
mov
fnsave
xchg
mov
lret
xor
mov
mov
adc
rorl
ret
sbb
inc
push
mov
jb
shrl
mov
arpl
jl
pop
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
jmp
xchg
fistl
sbb
sbbb
mov
sbb
xor
sbb
sub
cmp
stc
subb
pop
cmpsl
jne
nop
movsb
sbb
dec
ja
jp
xchg
jne
or
lahf
sub
inc
addr16
mov
sbb
fs
inc
push
notb
test
fbld
fsubr
lahf
inc
in
not
push
dec
je
xor
xor
cmpsb
add
imul
mov
movsl
fimull
pop
dec
or
mov
push
add
movsl
pop
imul
add
lahf
orb
inc
insl
adc
ret
cli
add
je
push
insl
dec
mov
push
ret
sub
imul
mov
push
add
lods
and
jbe
cmp
xchg
push
mov
mov
inc
lret
cli
test
mov
sbb
decl
cltd
rorb
movsl
les
das
in
pop
cmp
movsb
imul
push
xor
out
js
stos
pop
pop
lods
jne
push
pushf
dec
sub
cltd
jne
adc
cltd
cmpsl
sub
or
notl
pop
xchg
fnsave
hlt
je
lret
arpl
and
fwait
loopne
inc
mov
cmp
icebp
jo
cmp
out
ss
sti
das
adc
adc
and
dec
inc
lretw
stos
nop
rclb
fsubr
test
xor
mov
adc
lea
mov
stc
mov
fadds
mov
pop
outsl
pop
sahf
pushf
rcll
hlt
inc
movsb
inc
mov
ja
cld
data16
test
dec
dec
test
aaa
insl
aaa
jno
pop
inc
xchg
sub
daa
int3
js
mov
or
nop
loopne
cmp
popa
andb
xchg
pop
xor
fstl
jbe
sub
mov
loope
fsubrs
or
pop
insb
pop
insl
jns
insl
xor
adc
incb
mov
cli
adc
ljmp
sub
adcb
es
pop
jle
out
insl
dec
pop
icebp
or
push
mov
adc
cmpsl
rclb
scas
mov
aam
test
adcb
inc
cmp
pop
mov
mov
pop
std
popa
mov
rcrl
cmp
repz
out
sub
jge
pop
pop
cmp
jno
mov
fs
addl
fstpl
mov
movsl
test
pop
movsl
cs
xchg
xor
lcall
and
jl
mov
das
dec
jne
lods
addr16
adc
js
jae
out
jmp
sub
pop
stc
jnp
subb
push
hlt
fucomp
jge
daa
lret
fstpl
sbb
nop
mov
imul
xchg
cmpsb
add
sbb
sti
mov
push
push
jae
push
mov
inc
mov
push
mov
and
cmp
leave
insb
pop
or
and
add
lock
lcall
sbb
pop
loop
mov
movsl
adc
loopne
push
xchg
jno
pop
cmp
int3
inc
or
movsl
sbb
and
xchg
shll
sbbb
sti
mov
mov
fwait
bound
add
incl
add
mov
insl
ret
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
jmp
mov
push
sbb
sbb
cmc
cmp
mov
mov
xor
sbb
push
arpl
pop
pushf
pusha
xchg
sub
mov
lcall
add
add
push
lahf
sti
cmp
test
dec
fsubrs
sub
shl
jmp
dec
adc
andl
push
and
mov
int3
xor
mov
mov
jo
bound
or
out
cmp
xchg
push
nop
mov
ret
jg
jns
add
xor
jo
ja
pop
pop
adc
mov
inc
mov
and
pop
test
mov
mov
ficoml
sahf
arpl
jns
in
dec
jo
cmp
jnp
push
ret
xor
xor
pushf
push
adc
jmp
imul
lock
mov
push
and
add
mov
mov
in
loopne
sahf
adc
sahf
ret
in
xchg
shlb
out
aam
lods
pop
daa
es
idivb
dec
inc
call
push
in
xchg
xchg
add
mov
mov
and
mov
shll
and
sbb
stos
ds
test
shrl
inc
xor
imul
mov
mov
add
xor
mov
push
inc
mov
test
pop
pushw
sbb
or
and
inc
add
xchg
incl
add
xor
popf
pushf
shrl
lret
mov
scas
xchg
js
jno
mov
in
shlb
insl
ror
xchg
dec
shrl
sbb
mov
adc
pop
lret
lret
subb
cmc
xchg
push
scas
cmp
bound
or
inc
iret
xchg
stos
enter
aam
cmpsb
mov
sarb
fs
std
add
dec
mov
xchg
out
rorl
push
call
xor
shll
cmpsl
in
push
loopne
inc
mov
and
pop
into
mov
inc
cmpsl
pop
fmulp
aaa
xor
loop
cmp
lahf
or
cmpsb
xchg
je
push
ljmp
out
call
push
cmpb
push
nop
push
in
out
sahf
sub
pop
and
stos
jg
ret
pop
inc
sbb
mov
cmp
jno
ljmp
lret
mov
mov
aas
xor
imul
mov
pop
dec
fldcw
mov
cmpsl
mov
push
jns
std
adc
and
jns
cli
xchg
add
add
decb
jnp,pn
adc
pop
test
inc
mov
enter
push
sub
mov
and
mov
nop
ds
outsb
jle
cmp
mov
or
movsb
ds
outsl
mov
pop
pop
mov
lret
mov
add
and
es
and
xchg
xchg
dec
daa
into
inc
jbe
mov
inc
loope
test
inc
pop
push
clc
aas
cmc
and
push
mov
ds
mov
jae
lea
fcoml
ds
je
dec
pop
jmp
iret
mov
mov
inc
rorl
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
jmp
cmp
mov
xor
mov
cli
mov
test
aad
clc
mov
in
sahf
imul
xchg
jbe
push
fildl
popa
mov
cwtl
loop
mov
out
pop
mov
sbb
les
dec
inc
or
sahf
subl
scas
sub
xchg
cmp
xchg
fidivs
add
stos
dec
add
sub
mov
je
and
dec
icebp
aas
icebp
repz
aas
pushf
mov
mov
push
xchg
test
xchg
lods
pop
adc
aam
jp
cmp
fwait
jge
sbb
lea
jg
adc
frstor
enter
cmpsb
out
jge
leave
in
xor
dec
xor
inc
icebp
mov
test
push
mov
leave
int
sbb
adc
inc
mov
outsb
sub
cmp
lahf
xchg
addl
in
pop
stos
stc
and
cmovnp
insl
cmp
rcrl
or
dec
adc
jbe
enter
add
add
pop
mov
jp
and
push
cs
inc
dec
pushf
add
jl
push
mov
xchg
sbb
insb
test
pop
xchg
leave
cli
cwtl
rclb
shrl
and
inc
inc
pop
mov
arpl
aam
or
xor
fmul
push
icebp
gs
divl
inc
push
adc
pop
daa
outsl
inc
sub
mov
out
pop
mov
cld
or
fs
lock
imul
pop
sub
jle
jmp
stos
mov
push
pop
in
push
cs
or
aad
adc
xchg
jle
pop
movsl
sahf
cli
and
mov
int
sub
pop
sbb
mov
inc
popa
adc
clc
inc
stc
test
add
add
aam
cld
cld
enter
jbe
lock
dec
push
push
pop
shll
outsb
sub
sub
and
pop
cmp
rcrl
xchg
cmp
xor
mov
jl
pusha
push
loop
iret
jmp
js
adc
xchg
sbb
dec
xchg
mov
xchg
push
push
movl
movl
movl
movl
movl
movl
jmp
mov
xor
movsl
mov
mov
sbb
push
push
shl
leave
imul
inc
fadds
test
adc
and
enter
mov
xchg
and
jb
sub
in
lret
inc
inc
add
inc
lock
aad
xor
or
inc
sbb
mov
add
xor
mov
ja
pop
js
int3
pusha
push
lock
addr16
push
sub
mov
rcrb
hlt
push
jbe
push
cmp
mov
or
adc
and
lods
mov
mov
fucomp
testl
sbb
and
pop
mov
es
add
xchg
push
push
iret
sbb
cmp
int3
or
mov
jmp
out
sub
push
cmp
sbb
mov
pop
and
mov
lret
fnsave
push
div
pop
inc
pop
mov
jge
outsb
jecxz
jg
cmp
test
mov
test
push
repz
cmpsb
mov
call
das
sbb
and
add
xchg
jge
cld
les
imul
push
pop
pushf
aaa
leave
pusha
pop
jno
dec
dec
aaa
and
mov
dec
je
pop
mov
andl
mov
les
les
inc
ds
std
jne
pop
lods
popa
xor
lods
inc
or
cmp
stos
or
scas
mov
int3
insl
and
mov
and
ja
push
jecxz
pop
out
aad
pop
sbb
jne
push
fistpl
sub
iret
add
mov
je
jbe
in
cmp
inc
pop
aaa
rclb
mov
push
lcall
stos
push
sbb
std
shlb
inc
cmp
cld
sub
pop
dec
pop
lods
mov
and
pavgb
mov
or
push
jb
inc
mov
xor
pop
pop
push
mov
ja
push
test
and
push
andl
movsb
fiaddl
inc
call
push
lock
push
jmp
sub
and
jb
push
stos
pushf
loope
stos
sbb
sbb
jno
add
mov
rcl
sbb
jae
dec
xlat
nop
pop
lods
sub
insb
sahf
xchg
push
inc
and
xchg
add
sbb
fmuls
rcll
dec
xor
cmpsb
in
jecxz
jno
dec
push
int3
dec
push
and
push
pop
aas
xor
fwait
pusha
jb
gs
mov
aaa
outsl
adc
mov
add
jecxz
clc
cli
hlt
xchg
sub
ror
lea
sbb
pop
fisubrs
add
aas
dec
popf
nop
inc
jg
jl
push
sbb
fidivrl
pop
subl
mov
loope
mov
or
mov
cmp
add
andl
popw
push
loopne
hlt
jb
cmp
dec
and
adc
int
cmp
out
pop
or
out
or
xlat
test
cltd
je
mov
gs
sarl
lock
imul
mov
rclb
adc
int
pusha
pop
out
jle
adc
aad
sub
cltd
fwait
or
pop
mov
push
ljmp
sub
loope
test
fs
sbb
mov
and
lret
ret
sbb
repnz
jb
or
xchg
fcompl
cmp
lret
dec
clc
arpl
stos
pop
add
mov
leave
dec
insb
cmpsb
imul
add
into
xor
fdivs
dec
pushf
push
and
pop
stc
add
scas
add
ss
add
test
into
test
fwait
jno
in
xchg
lea
jnp
xchg
jae
mov
lcall
dec
leave
dec
or
pop
push
dec
add
ljmp
outsb
lods
gs
mov
jno
aaa
sub
lret
cmpb
cvtps2pd
mov
mov
pusha
adc
or
sub
add
outsb
push
enter
jge
pop
jno
ss
lods
les
out
rclb
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
jmp
leave
xchg
dec
sub
sub
mov
and
stos
test
adc
sbb
jbe
mov
lret
test
lods
sbb
push
imul
in
sub
movsl
xor
adc
insl
addr16
leave
insb
les
repz
fisttpll
cltd
jo
lret
jl
test
push
mov
inc
mov
push
cmp
testb
ret
bound
xor
pop
sarl
dec
daa
jp
push
lret
sbb
sahf
fisttpll
lds
out
and
lcall
lock
aaa
adc
rclb
xor
lods
inc
popf
sbb
pusha
jge
push
test
jbe
sub
std
cmp
loop
enter
inc
lds
mov
mov
xchg
into
lahf
push
sbb
pusha
sbb
loopne
jmp
mov
mov
popa
ret
inc
xorb
push
mov
test
xchg
add
jo
dec
cmpsb
cmpsb
jno
xor
icebp
dec
mov
fchs
out
fimull
lds
xor
push
or
cmpsb
rorb
mov
adc
dec
movsb
sub
adc
daa
movsb
pop
call
adc
mov
and
cmpsb
sbb
mov
repnz
cmpsl
and
jb
xchg
push
or
pushf
jnp
test
addr16
mov
adc
xchg
mov
adc
subl
xor
sbb
sub
ret
mov
popf
fiadds
fnstsw
shrb
icebp
push
pushf
cmpsl
cwtl
mov
aas
jne,pn
sbb
insl
adc
adc
ret
and
pop
or
pushf
or
cmp
insb
lcall
jns
dec
inc
std
cltd
aas
cmc
cmp
ljmp
xchg
adc
nop
xor
inc
leave
divl
nop
mov
insb
jmp
test
pop
fnstenv
into
int
outsl
dec
cli
int
faddp
fwait
sahf
aad
shll
int3
mov
inc
insb
jo
sbb
pop
mov
mov
stc
xlat
cli
cmp
inc
hlt
pop
xor
add
or
add
jge
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
jmp
insl
jmp
cwtl
xchg
popf
pusha
outsl
mov
scas
mov
cmp
sbb
jbe
jl
mov
shl
add
int3
aaa
inc
adc
popf
cmp
inc
or
mov
js
pop
outsb
jle
lods
mov
pop
hlt
xchg
lahf
jmp
or
jae
push
data16
and
xchg
mov
mov
cmp
int
mov
ljmp
xor
xchg
cli
xor
xlat
inc
lock
push
dec
sbb
inc
in
mov
bts
lcall
jbe
sti
cld
and
adc
into
pop
sub
mov
mov
arpl
sub
mov
xchg
inc
aas
mov
xor
mov
jnp
sub
cmp
and
inc
and
outsb
sar
xchg
sarb
cmp
push
adc
lds
rol
daa
pop
or
add
fstps
xchg
or
arpl
mov
push
and
mov
idivb
mov
out
mov
jne
lcall
add
mov
mov
orb
test
dec
jnp
dec
and
add
ret
and
pop
adc
stos
psrlw
and
jno,pn
cs
mov
repz
push
dec
push
add
cmpsb
inc
sbb
test
jl
cmp
in
jno
xchg
sbb
ds
call
sub
dec
mov
fbld
sbb
mov
mov
pop
xor
outsl
push
jge
push
xchg
cli
loop
loope
mov
xchg
neg
aas
lea
mov
pusha
jbe
jae
dec
fmul
add
ds
mov
cmc
cwtl
negb
outsb
out
adc
pushf
lods
push
or
add
faddl
ret
adc
leave
aad
lcall
jno
cltd
push
mov
lock
out
lods
and
orl
out
cmp
pop
int
jbe
dec
adc
out
test
dec
dec
icebp
outsl
sbbl
mov
mov
cmc
movsb
lcall
outsb
mov
push
cld
cmp
ss
xlat
testl
xor
inc
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
jmp
push
xchg
mov
and
int
mov
enter
test
and
jle
sahf
dec
lret
mov
mov
jno
sbb
jo
jmp
ret
sub
pop
push
and
mov
outsl
test
mov
sti
xor
sub
cmp
jp
push
data16
dec
mov
les
sbb
xchg
mov
ljmp
imul
and
insb
fucompp
ss
push
aad
dec
add
jns
stos
mov
xchg
in
xor
negl
pop
pop
fmull
mov
inc
pop
mov
xor
mov
popa
push
push
stos
or
dec
inc
cs
mov
xchg
movsb
cmp
or
fidivrs
push
rol
or
ret
mov
cwtl
mov
push
xchg
push
mov
mov
sub
stos
and
xchg
mov
push
iret
xor
add
rorl
pop
mov
pop
cli
ljmp
sbb
orps
imul
daa
jnp
aam
scas
dec
test
gs
push
inc
sbb
pop
mov
or
xor
push
mov
daa
cmp
inc
push
aam
mov
inc
aaa
pop
stos
xchg
fcompl
lds
jg
xor
pusha
shufps
rorb
sub
pop
xchg
mov
test
movsl
cld
xacquire
mov
cld
cmp
jle
les
mov
mov
mov
fildl
pop
cmp
les
iret
and
sub
ret
in
es
ret
jno
add
adc
xchg
xchg
pop
je
rorb
dec
das
popa
repz
xor
pop
xchg
sub
insb
or
push
push
int3
lock
add
sbb
mov
dec
cmp
loop
call
mov
mov
jle
fisubrl
mov
shl
or
or
dec
cld
stc
jg
aad
test
xor
mov
icebp
mov
xor
or
jmp
push
and
mov
push
nop
sbb
test
jp
adcl
dec
push
shll
xchg
xor
iret
outsl
pop
sub
cwtl
pop
or
or
pop
mov
cmc
adc
pop
movsb
jno
mov
call
jbe
xchg
lahf
inc
push
enter
shr
sbb
and
push
add
enter
adc
mov
pushl
lcall
mov
sbb
sahf
mov
insb
movq
add
loopne
enter
sahf
fsubrs
cmp
mov
or
bound
mov
or
xor
add
lds
imul
add
adc
mov
cmpsb
and
in
loope
enter
out
stc
fisubl
mov
rclb
adc
mov
push
add
jb
xchg
inc
scas
sub
mov
insl
fsts
xor
stos
mov
inc
jecxz
push
adc
cmpsl
and
movsl
je
lcall
sti
push
orl
mov
ds
imul
mov
mov
aam
filds
add
dec
outsb
repnz
in
adc
lret
jg
or
les
lahf
dec
sbb
scas
or
mov
add
int3
fsubp
mov
dec
std
in
push
aam
jbe
lret
cmp
daa
pop
mov
inc
cmpsl
mov
xchg
hlt
mov
pop
jnp
mov
dec
insb
pop
and
and
mov
das
pusha
fwait
shl
mov
push
jae
in
inc
hlt
sbb
loope
cmpsb
imul
pop
shlb
loop
lods
cmp
jb
inc
pop
mov
pop
push
in
push
xor
negb
popf
or
mov
push
jae
push
fcmove
push
bswap
std
and
jp
out
dec
and
xchg
test
ja
sbb
jb
jae
enter
frstor
fidivl
xor
shll
cltd
cmpsl
mov
jmp
add
jo
pop
mov
push
aad
loope
sbb
push
mov
pusha
fiaddl
mov
pop
in
rorb
mov
in
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
bound
and
lds
sbb
sbb
fistpl
sbb
aas
fdivs
leave
cs
xlat
roll
mov
enter
aas
orb
fucomip
cmpsl
mov
adc
pop
adc
dec
test
sub
ss
push
nop
mov
addl
cld
inc
iret
in
imul
imul
and
cltd
cltd
xchg
cmp
enter
shlb
sub
cmc
or
pop
int
fldcw
gs
pop
adc
jno
dec
mov
insl
cmc
or
test
lock
sti
jae
xchg
mov
lock
add
cmp
fld
aaa
inc
into
sub
js
xchg
stos
dec
ret
mov
ret
push
mov
jg
push
mov
push
pop
leave
aam
lods
push
adc
mov
ja
xor
lds
pop
push
inc
mov
out
inc
loop
leave
fdivrs
repz
and
in
dec
dec
sarb
mov
repz
push
dec
pop
push
lahf
pop
dec
in
cmp
lock
roll
xchg
fwait
addl
in
mov
or
test
jl
lret
mov
mov
or
imul
fnsave
xlat
fstpt
or
inc
test
ror
xor
movsl
ficoms
into
popa
ja
ret
jle
sti
js
popf
xchg
cld
outsb
dec
ret
pushf
fwait
mov
insl
mov
push
adc
shl
jns
das
loop
fbstp
dec
cltd
out
adc
mov
cmp
in
adc
mov
aad
jbe
popa
adcb
push
sbb
bound
jo
xor
jo
int
fstps
into
cmpsl
jp
dec
out
imul
mov
push
cwtl
push
xchg
lea
sub
jmp
xor
dec
jbe
lods
push
cltd
sbb
xchg
mov
mov
out
popf
jo
into
add
movsb
imul
sbb
xor
sub
imul
add
mov
inc
add
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
dec
mov
aam
movsb
sub
bound
mov
jns
sbb
xor
mov
movsl
sbb
sbb
add
arpl
adc
nop
inc
sub
int3
test
jl
imul
scas
sub
ljmp
sbb
mov
dec
xor
cltd
mov
xor
adc
mov
fcmovnu
cld
cmc
jmp
gs
test
or
mov
mov
mov
add
js
mov
push
into
into
pop
sbb
pop
repnz
and
push
jb
mov
into
pop
popa
outsl
movsb
popa
pop
loopne
push
sub
or
add
jge
adc
lea
das
dec
mov
scas
mov
test
mov
fistps
out
test
pop
cld
mov
sub
in
ja
dec
mov
jl
test
in
pop
adc
lock
fs
and
adc
mov
cld
cmp
xor
mov
dec
lock
mov
dec
or
inc
dec
in
xrelease
dec
popa
out
or
repz
call
jle,pn
inc
stos
sub
leave
mov
mov
mov
dec
inc
lock
popf
pop
add
push
pop
arpl
fwait
nop
mov
mov
lods
or
push
mov
popa
pop
out
mov
bound
or
xor
mov
jg
push
sbb
nop
xor
lods
outsl
inc
mov
test
jle
lret
lods
mov
in
pop
sbb
add
fmulp
xchg
inc
push
xor
enter
pop
and
in
adc
shll
bound
xchg
jno
jb
in
stc
pusha
daa
fwait
mov
dec
sbb
out
mov
sbb
sbb
cmp
mov
dec
and
jmp
or
repnz
adc
push
adc
or
mov
loope
xchg
mov
inc
xchg
push
mov
mov
loopne
loope
add
pusha
mov
mulb
push
pop
mov
jns
jb
ja
stos
cmp
in
rorb
jnp
lret
lret
xchg
dec
xor
nop
out
pop
jmp
sub
in
stc
out
in
js
insl
pusha
enter
shll
mov
jge,pn
adc
addr16
xchg
push
pop
arpl
sbb
xor
ds
jae
shlb
lds
mov
insl
lcall
aas
or
adc
jb
mov
daa
add
jns
dec
push
push
mov
les
jo
fisubs
jmp
loope
xchg
xchg
mov
int3
rcrb
pop
cli
test
jae
inc
movl
xchg
push
push
sub
icebp
adc
aas
daa
je
fwait
mov
rcll
stos
cmc
pop
xor
jbe
lea
lods
mov
jno
aas
scas
sub
sub
jb
cmp
pop
out
adc
aam
pop
fdivs
add
inc
or
xchg
jo
mov
shrl
popa
push
movsl
mov
test
in
mov
cld
movl
jmp
into
jne
inc
sbb
pop
clc
push
lret
jo
sbbb
jns
sbb
aas
xchg
xor
sub
mov
sti
mov
xchg
jo
sahf
je
mov
push
pop
sarl
pop
mov
int
in
cmp
sbb
lahf
negb
arpl
pop
je
dec
inc
int3
jo
mov
out
bound
arpl
jle
push
cli
stos
add
cs
sub
mov
cmp
push
sti
xchg
or
decb
fisubrl
xchg
clc
vmwrite
mov
in
xchg
popf
lds
leave
jno
and
mov
lcall
inc
xchg
repz
je
sub
jle
inc
ficomps
and
mov
mov
push
inc
mov
pop
xor
jo
mov
push
adc
loope
add
push
stos
lods
and
mov
addb
test
cmp
and
push
out
jge
rorb
jne
popa
test
or
loope
call
cltd
cli
adc
rorl
jb
pop
cmp
mov
add
mov
mov
stc
or
push
push
iret
xorl
ds
jp
xchg
scas
dec
lret
mov
xor
pop
pop
movsl
std
pushf
lret
hlt
jg
bound
test
jle
into
mov
jae
pop
or
push
das
xchg
divl
pushf
push
into
xchg
ss
loopne
sbb
outsl
in
aam
stc
lahf
imul
or
mulb
cmp
jl
cmpsb
inc
cmp
in
jns
inc
xchg
jmp
fidivrs
inc
adc
push
lock
mov
push
daa
cltd
and
dec
adc
pop
out
and
xchg
arpl
and
xchg
insb
in
jecxz
rcll
jmp
int3
mov
mov
dec
sub
sbb
jae
xorl
jmp
cmc
ror
mov
pop
jne
xchg
push
xchg
loop
mov
decb
cmp
mov
repnz
jecxz
dec
ja
movsl
xor
movsl
dec
test
in
jne
mov
enter
fildl
pushf
xchg
lods
push
mov
add
imul
dec
sbb
jno
inc
mov
scas
into
test
iret
outsb
and
lcall
movsb
imul
add
aad
hlt
fidivrl
sti
repz
mov
lret
push
mov
aas
bnd
xchg
enter
jle
mov
lcall
jno
lea
sbb
push
inc
sub
test
jae
push
mov
or
gs
push
push
or
push
std
xor
rcr
decl
clc
leave
pop
lret
mov
or
xchg
jp
pop
testb
inc
shrb
stc
dec
add
or
sbb
js
cmpsl
fs
outsb
jae
jp
pop
jg
xor
imul
sbb
xorb
enter
into
std
jp
addr16
lret
fwait
sarb
leave
pop
test
mov
dec
inc
test
lods
push
aam
negb
das
jg
cmpb
xchg
icebp
mov
in
inc
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
jmp
das
ret
pop
sub
ret
xchg
mov
cmp
sbb
sbb
mov
xchg
lock
mov
test
pop
sahf
outsb
xorl
sbb
clc
jo
mov
jae
test
pop
inc
fstpl
inc
sub
fwait
stos
jmp
xor
push
add
inc
mov
cli
lock
jnp
sahf
xchg
movsl
repz
sbb
sti
cmp
jge
cmp
push
adc
add
push
pop
decb
fmul
and
mov
inc
movsb
jae
xor
add
aam
push
mov
pop
mov
push
and
shrl
scas
test
push
fisttpll
flds
in
jl
and
fldt
jp
push
cmp
jecxz
pop
ss
sub
pop
xchg
mov
out
xor
sub
pusha
test
fisubl
fnstenv
mov
pop
cs
or
sbb
aam
aam
imul
jb
ja
insl
xchg
gs
push
sub
mov
popa
dec
mov
test
sub
jae
mov
inc
loopne
lcall
cmpsb
inc
jl
adc
mov
inc
jne
mov
mov
xchg
paddb
cmp
pop
sbb
nop
out
mov
fadd
test
sub
setnp
jae
cmp
pop
fs
sub
and
and
test
clc
xchg
push
inc
fsqrt
mov
fwait
sbb
je
ret
sub
mov
mov
inc
repnz
lcall
paddw
xlat
cmp
hlt
shrb
aas
adc
xor
push
pop
arpl
mov
jbe
mov
sbb
test
push
out
insb
fs
sahf
dec
xlat
bound
subb
aad
push
dec
outsb
outsb
mov
jne
jo
insb
sbb
mov
iret
mov
and
mov
mov
xchg
popl
test
aam
daa
lds
sahf
mov
out
jnp
rclb
arpl
fmuls
push
mov
xchg
imul
adcl
pop
insl
ljmp
arpl
cmc
pop
add
sub
fwait
ljmp
sub
pop
jge
ja
in
mov
pop
xorb
and
cmc
pop
pop
mov
xor
lock
jae
and
xchg
jge
ret
orl
repz
push
push
fdivrl
cli
xor
das
std
and
stos
mov
mov
imulb
and
clc
das
pop
jle
inc
daa
sbb
decb
fidivs
dec
jmp
test
and
push
leave
dec
push
ja
daa
rolb
clc
lret
test
push
aaa
inc
stc
inc
add
xchg
mov
ljmp
cmp
fldenv
into
mov
out
arpl
fisttpl
cmp
pusha
push
xchg
mov
es
test
inc
scas
fists
ja
pop
and
movl
jmp
jl
xchg
and
loopne
ss
fwait
pop
push
clc
fnstsw
xchg
popa
mov
xor
cmp
inc
fsubl
xchg
jb
add
les
xor
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
jmp
fs
cmp
cmpsb
dec
adc
cltd
jb
sbb
sbb
mov
imul
xchg
iret
xor
xor
shll
cmc
and
dec
dec
xchg
ljmp
cli
adc
fcompl
sub
int3
mov
inc
mov
leave
add
xchg
xchg
dec
loope
and
xchg
out
mov
mov
out
adcb
gs
dec
or
inc
mov
xchg
jle
js
dec
data16
icebp
mov
shlb
jae
lock
cmp
lahf
jnp
fwait
addr16
loope
movsb
je
mov
pop
test
mov
pop
dec
xlat
out
leave
xchg
outsb
push
cmp
add
mov
lahf
mov
cwtl
adc
dec
add
mov
mov
in
into
mov
roll
scas
jb
rcr
pop
dec
addl
inc
add
xchg
push
dec
push
lret
mov
xor
pop
addl
int3
loopne
pop
add
inc
add
and
test
jecxz
ficoml
imul
push
repnz
hlt
fs
sbb
data16
mov
push
out
pop
cmp
insl
mov
call
scas
sbb
pop
jmp
enter
loope
ret
pop
movsb
mov
or
push
faddl
mov
loope
mov
fdivs
push
lahf
mov
fstl
sub
adc
lds
adc
cmpsl
mov
xor
adc
aas
add
clc
jmp
stc
stos
mov
sbb
sbb
xchg
repnz
add
mov
inc
in
jnp
inc
sub
or
je
mov
inc
rclb
jp
ss
adc
sub
test
xchg
push
arpl
mov
or
and
andl
pop
or
loope
xchg
mov
outsl
add
out
inc
aam
outsb
scas
and
sub
add
adc
ficomps
jbe
push
mov
insl
cmp
jno
out
mov
xor
adc
jno
fnstenv
js
cmp
roll
cmp
push
push
cmp
push
dec
out
ret
pop
jmp
sub
cli
vmptrst
or
cmpsb
xor
movsb
push
xor
ds
repz
mov
add
pop
jns
mov
cmp
adc
and
fadds
add
repz
push
mov
add
fwait
add
sbb
lret
and
push
popa
dec
stos
fcmovnu
dec
xchg
mov
mov
sub
lods
ja
outsb
sub
sub
sbb
clc
cltd
mov
filds
dec
cli
insb
in
fnsave
lock
and
mov
push
int3
shll
fisttps
out
push
scas
sub
inc
loope
lds
jg
mov
mov
cltd
sbb
in
xchg
jns
gs
mov
dec
stos
in
inc
jns
xor
push
stos
adcb
push
lret
xacquire
pop
mov
or
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
jmp
sbb
sbb
jo
iret
push
stos
stc
insb
sbb
jns
sbb
mov
fwait
in
dec
jns
cld
and
mov
add
cld
pop
add
push
dec
mov
sub
xor
cltd
dec
inc
xchg
sbb
movsb
mov
loop
movsl
lods
pop
or
pop
inc
shl
mov
and
loop
movsl
pop
jne
rorl
lret
pop
shll
cmp
outsb
sti
leave
and
xor
cmp
xlat
lahf
imul
cmp
into
or
repz
sub
pop
mov
fcoms
add
push
and
add
lock
pop
insb
inc
les
ret
xor
push
add
fcompl
out
mov
not
scas
mov
ret
pop
cs
outsl
adc
dec
add
fwait
inc
jns
dec
jle
popa
fistpl
jle
lds
mov
mov
mov
pop
sti
jo
push
fisubl
loop
insb
pop
mov
pop
cmpsb
out
outsb
dec
xchg
xchg
sbb
aaa
imul
stos
jecxz
repz
sbb
loop
sbbl
pushf
jmp
mov
xor
arpl
push
xor
cmpsl
fstpl
adc
sub
divl
mov
shll
clc
push
inc
pusha
sahf
push
mov
mov
cmp
xlat
sarb
mov
ja
loope
push
push
adc
aam
push
xchg
adc
pop
inc
test
xchg
xchg
pop
pop
lcall
adc
jle
lock
std
push
inc
stc
and
mov
mov
fmuls
pop
and
int
int3
dec
imul
fisubl
iret
xor
push
lcall
int3
xor
push
js
cmp
dec
frstor
xchg
mov
adc
and
dec
orl
mov
and
mov
rcrl
mov
jg
sti
out
push
es
dec
jb
cld
pop
pop
jle
jecxz
movsl
xlat
divb
stos
das
fstpt
dec
ljmp
movsb
dec
pop
jmp
in
cmpb
leave
jb
leave
add
pop
cli
rcl
cmpsb
pop
jg
and
inc
dec
jl
rcrl
fldl
shlb
mov
jns
int
lds
test
aam
or
push
fsubs
les
inc
dec
clc
nop
pop
and
mov
scas
sti
jmp
xchg
mov
or
sti
mov
je
jge
test
imulb
scas
jb
or
std
mov
push
xchg
adc
ljmp
sbb
sti
rcrl
add
rclb
sbb
ss
loopne
mov
pop
xor
mov
cmpsl
iret
mov
sti
int
and
sbb
repnz
fcmovu
data16
leave
push
cmp
xlat
mov
lahf
int3
testl
test
add
cmpb
pop
int3
fs
cmp
popa
xchg
mov
inc
mov
ds
push
out
push
icebp
pop
inc
xchg
mov
and
cmp
dec
sub
inc
adc
dec
lcall
test
add
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
jmp
adc
xor
popf
sbb
sbb
jno
je
outsl
hlt
lcall
ficomps
stc
fwait
sti
repnz
lahf
add
mov
or
inc
adc
popa
or
pop
popf
dec
imull
cmp
push
les
insl
aas
mov
push
ss
sbb
mov
lock
outsl
mov
push
icebp
mov
rorl
push
jecxz
fdivrl
xchg
aad
fwait
add
jle
jl
pop
mov
int
shl
lock
in
jo
enter
daa
mov
std
xchg
out
dec
or
outsb
ljmp
daa
mov
mov
insl
cld
mov
mov
add
popa
mov
pop
insl
xor
and
pop
addr16
rcl
imul
inc
xor
inc
stos
jl
cld
stc
push
out
inc
mov
jb
sbb
sbb
fs
jmp
xor
push
insl
test
arpl
push
imul
lcall
outsb
cmp
leave
xchg
mov
sbb
jp
addr16
adc
mov
or
ret
rcrb
dec
and
mov
out
loope
jne
pop
in
out
mov
movsb
cld
jmp
mov
inc
sti
movsb
cmp
mov
or
enter
mov
sbb
fidivs
loop
adc
lock
pop
lret
mov
out
int3
je
movb
cwtl
cltd
loope
and
push
and
fisttpll
div
xchg
popf
mov
shrd
pop
iret
bound
insl
mov
mov
jno
xchg
test
mov
scas
repnz
les
mov
mov
icebp
scas
push
push
aaa
nop
xchg
or
ja
mov
mov
aaa
mov
add
std
insl
dec
cltd
scas
daa
cmpsb
mov
fcoml
mov
xchg
test
or
jmp
jg
push
inc
loopne
fidivrl
flds
mov
ss
test
cli
mov
pop
xor
sbbl
push
inc
mov
pop
inc
gs
int
data16
inc
das
mov
lahf
sbb
mov
nop
fstps
lods
mov
mov
stos
xchg
lock
sti
add
fstpl
ret
dec
or
cld
ficoms
iret
mov
cmp
push
movsb
adc
push
jmp
jecxz
jmp
iret
adcl
gs
jmp
mov
or
loopne
out
cmpl
mov
push
push
push
adc
pop
lock
sbb
in
jo
mov
lock
cmp
and
push
cmpsl
js
aad
or
dec
cmpsb
sti
jne
into
roll
push
lods
sub
sbb
add
fidivrs
mov
unpcklps
xchg
repz
mov
add
aas
into
pop
or
mov
sub
addr16
lods
out
stos
mov
jle
push
sbb
xor
mov
cmp
aad
sub
incl
rclb
icebp
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
jmp
or
hlt
add
fistpl
mov
stos
mov
pop
sbb
jns
sbb
aas
movsl
iret
faddp
outsl
pop
fsubr
dec
sub
mov
std
fwait
jecxz
cmpsb
ds
adc
pop
clc
mov
ds
aaa
dec
lcall
int
insl
and
int3
cmp
movsb
repz
dec
aaa
add
pop
mov
in
cwtl
sbb
orl
pop
or
and
sub
ret
in
inc
ds
enter
jno
mov
cld
xchg
sbb
xchg
arpl
mov
leave
pop
lods
hlt
repnz
push
xchg
jbe
pop
inc
pop
mov
lcall
scas
adc
xchg
das
stos
mov
ja
jb
adc
cltd
mov
test
sub
insl
sub
ja
cs
sub
inc
popa
jns
adc
iret
inc
sbb
enter
arpl
xor
in
sahf
mov
mov
sbb
mov
dec
or
mov
fidivl
lock
addr16
out
repnz
jge
cli
sahf
lock
mov
fildl
fdiv
cmpsl
daa
dec
xor
sub
jmp
push
dec
pop
mov
push
sti
adc
cmp
mov
mov
push
aas
out
pop
jmp
pop
loopne
test
arpl
mov
add
lods
lods
xor
out
aaa
xor
or
rclb
frstor
cmp
cmp
mov
push
push
mov
cwtl
pop
outsb
out
fisttps
sbb
sbb
inc
cli
cmp
cmc
jbe
sbb
mov
jecxz
push
scas
or
mov
imul
pop
jmp
lret
dec
insb
push
and
loop
lcall
xor
dec
ds
lock
pushf
or
jb
add
xor
xchg
movsb
jno
xor
jnp
adc
inc
jge
inc
push
aam
loop
lds
adc
mov
jge
cmpsl
std
xor
mov
aaa
push
mov
jle
nop
mov
jp
in
jle
push
test
mov
inc
jge
dec
popf
stos
fcomp
adc
scas
inc
test
pop
rorb
xor
dec
fdivs
stc
outsl
pop
add
je
adc
dec
int3
aam
jne
lcall
adc
or
mov
sbb
cli
mov
ds
xor
xor
mov
lahf
outsb
es
xchg
stc
mov
push
push
add
add
xor
jo
mov
call
aaa
sti
scas
xor
mov
lahf
mov
and
lock
das
pop
mov
je
pop
js
xchg
rol
dec
mov
adc
mov
push
sbb
mull
mov
es
sbb
repnz
pop
xchg
xchg
xchg
roll
ja
push
imul
mov
and
pop
out
xlat
shrb
dec
dec
and
fnsave
lcall
je
mov
shrl
sub
movsb
inc
inc
add
mov
shlb
jmp
cmc
clc
push
mov
and
out
dec
adc
lahf
and
add
in
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
jmp
aas
cmpl
mov
jecxz
jl
pop
sbb
je
sbb
scas
ss
ficomps
lea
push
test
inc
repnz
inc
xor
scas
inc
dec
orb
jge
mov
lods
in
mov
andb
jne
xor
out
mov
jb
xchg
nop
scas
iret
sbb
push
sbb
xor
add
inc
add
outsl
leave
aas
repz
inc
xchg
adc
fwait
sbb
sub
xor
xchg
xor
jne
mov
or
test
jmp
imull
push
scas
lahf
test
pop
in
out
int
loopne
inc
jb
pop
xchg
pop
mov
mov
popa
mov
hlt
cmpl
in
pop
aad
push
aam
adc
sub
mov
loope
repnz
jecxz
and
xchg
push
in
clc
push
inc
jno
xor
lock
das
dec
cs
add
sbb
incb
fs
add
add
jb
dec
fwait
xchg
xchg
dec
cs
pop
push
xorb
jns
pop
push
pop
fwait
cmpsb
add
cmpsl
pop
lret
or
xchg
neg
out
jge
mov
mov
dec
rcr
mov
and
fidivs
lcall
adc
or
je
cmp
pop
repz
mov
outsb
outsb
sbb
int
call
outsl
jo
jecxz,pt
movsl
dec
jmp
jo
cmc
in
add
sahf
mov
fwait
pop
mov
stos
cmp
cmp
and
add
and
jb
push
mov
js
pop
sbb
or
adc
js
pop
enter
add
or
push
xchg
roll
scas
sub
and
sbb
fwait
push
bound
dec
in
xor
inc
add
pop
rorl
lret
inc
mov
cmpsl
dec
mov
cmp
pop
stos
shl
pop
inc
ds
mov
adc
or
js
or
sahf
jo
cmpsl
fidivs
outsb
movsl
out
jg
imul
mov
lret
fadd
bnd
sti
and
or
imul
inc
push
cld
out
xchg
mov
xchg
pop
push
push
fbstp
or
fcom
mov
lret
lock
push
test
movsb
data16
mov
mov
push
scas
jae
loope
inc
cmp
mov
or
cmp
ret
lods
sbb
imul
ljmp
call
dec
adc
mov
sbb
mov
adc
xchg
xchg
scas
scas
mov
fists
scas
inc
mov
cmpl
mov
fildll
dec
icebp
mov
out
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
jmp
imul
pop
jbe
mov
cmpl
sbb
adc
sbb
cltd
ficoms
jne
adc
cmpb
xor
cmp
add
lds
jecxz
repz
mov
or
xorb
out
neg
sub
or
lods
mov
adc
and
xchg
push
loop
adc
into
fsubrs
aas
jnp
and
lahf
push
pop
xor
add
gs
cld
repnz
insl
inc
dec
shr
insl
cmpl
nop
add
inc
fcomi
mov
sub
push
mov
arpl
repnz
ficoml
xlat
insl
aam
repnz
inc
sbb
shll
push
cmp
inc
push
xor
or
push
lret
enter
dec
dec
nop
nop
shll
rorb
xor
pusha
cltd
jp
sbb
fdivs
dec
stos
adc
jae
jp
inc
sub
test
mov
js
lock
jmp
mov
pop
int3
aaa
xchg
rorl
test
lcall
push
fdivrp
lret
or
dec
push
sbb
mov
sbb
bound
inc
sbb
fstps
cli
rorl
adc
jecxz
fstpl
movsl
and
xchg
ds
mov
shll
push
fimuls
sub
adc
jbe
xchg
stos
mov
scas
sarb
adc
lcall
cwtl
mov
insb
adc
add
push
cmc
mov
in
add
test
xor
jns
js
sub
pop
jg,pn
xor
lds
jne
dec
pop
lret
sub
fstl
inc
test
outsl
pop
lds
or
das
out
dec
bound
pop
shll
jbe
xchg
out
sub
xchg
bound
mov
ds
jl
test
movl
cmpsl
sbb
cmp
and
dec
in
push
jae
ss
push
iret
jbe
sub
mov
lcall
imul
mov
add
push
push
dec
cmp
jle
test
mov
mov
jmp
mov
jmp
push
enter
add
leave
xor
scas
mov
push
outsb
mov
add
out
dec
out
or
divl
rcll
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
jmp
pushf
cmp
jl
mov
jl
sbb
scas
adc
sbb
sbb
mull
lahf
dec
cmp
punpcklbw
push
mov
or
outsb
das
and
int
outsb
pop
dec
sub
inc
mov
daa
jecxz
bound
leave
pop
stos
jbe
and
mov
bound
dec
daa
pop
or
dec
dec
rorb
dec
jnp
jo
xchg
out
and
inc
lcall
jp
ret
jae
mov
jl
lods
xor
xchg
adcb
ret
mov
popf
jp
xor
jp
push
test
jnp
pop
lods
aaa
jb
fwait
xchg
cli
test
call
mov
int
popa
sub
xchg
and
aaa
lret
in
lock
jo
push
call
adc
arpl
sub
pop
xor
mov
mov
ret
sub
mov
xor
mov
cli
sbb
xlat
mov
in
xchg
fwait
or
jbe
in
xchg
pushf
movsb
out
sti
and
xor
xchg
daa
mov
add
xchg
int
bound
mov
in
lods
cli
push
insl
stc
push
nop
ss
out
cmp
mov
sbb
mov
imul
lret
and
mov
pop
pop
jcxz
mov
xchg
push
dec
or
jno
sbb
roll
or
je
jns
lods
adc
es
xor
adc
and
mov
outsl
ds
push
sub
fisttps
pop
test
jo
lret
jae
and
and
xchg
aaa
arpl
mov
or
xchg
mov
neg
and
sbb
inc
push
shll
in
jo
mov
pop
sahf
pop
daa
int3
push
movsl
std
push
test
mov
xorb
pop
dec
pusha
or
rcr
pop
mov
pop
sub
mov
pop
filds
push
std
jbe
mov
fsubr
ss
cmp
cmp
popf
or
push
mov
jge
pushf
cmp
mov
push
mov
lods
movsb
pop
mov
sbbw
jbe
sarl
dec
xchg
rorb
int
cmp
xchg
rolb
cwtl
xchg
mov
call
jae
sbb
fldl
div
or
jle
out
xor
in
mov
mov
jo
imul
or
out
clc
push
rclb
add
mov
jno
push
ret
sbb
jnp
cmpsl
jp
stos
sbb
cmp
in
inc
add
add
mov
repz
cmp
popa
xor
mov
outsl
pop
cmp
jbe
and
lret
mov
lahf
cmp
enter
stos
outsb
mov
dec
sub
push
fadds
add
push
jp
mov
iret
adc
fidivs
flds
and
outsb
sub
cmp
rolb
rcll
mov
push
xchg
mov
xchg
icebp
rorb
jp
mov
test
out
adc
mov
or
ja
ss
mov
jmp
insl
inc
dec
mov
aas
xor
mov
jecxz
xchg
movsb
and
cmp
cmp
cmp
pop
sub
adc
adc
dec
inc
or
ret
mov
mov
or
scas
sahf
int3
es
add
testl
cmp
mov
clc
mov
fisubs
lea
mov
adc
andb
lret
data16
jb
mov
inc
and
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
jmp
roll
andb
sbb
loop
jl
inc
arpl
adc
sbb
mov
sbbb
mov
sbb
mul
pop
int3
inc
cmp
daa
outsb
cmp
jecxz
sub
fisttpll
inc
inc
cs
push
pop
pop
pop
pop
dec
subl
testl
pusha
lods
loope
push
roll
aad
je
popa
xor
lret
dec
movsl
das
cmp
ret
lods
leave
pop
lahf
aam
daa
lret
mov
les
push
hlt
mov
mov
ret
lret
sub
and
jle
mov
xor
insb
gs
or
arpl
stc
and
lcall
xchg
jmp
mov
out
test
addb
mov
rclb
outsl
mov
dec
push
std
pop
sti
push
push
imull
imul
out
mov
pop
mov
inc
rorb
add
insl
mov
sbb
daa
addr16
hlt
movb
and
and
repz
lods
dec
fwait
addr16
cmc
movl
push
sub
aam
clc
inc
push
out
pop
outsl
fmul
adc
or
mov
stc
ror
add
and
inc
loopne
jbe
jno
cmp
inc
cmp
shr
add
inc
cmpsl
inc
data16
mov
xor
aas
mov
adc
int3
xchg
cmp
push
jl
cmp
stos
push
aam
sbb
idivl
shl
ffreep
pop
fs
xchg
mov
out
repz
aaa
jno
lret
dec
inc
push
stos
cmp
outsl
add
cmp
aad
mov
sbb
sub
mov
inc
push
cwtl
mov
inc
inc
and
push
je
xor
push
mov
pop
ljmp
and
pop
push
jb
movsb
ljmp
push
jecxz
pop
arpl
les
mov
mov
nop
adc
mov
adc
fwait
mov
shll
mov
mov
lcall
dec
outsb
testb
xor
imul
xor
ds
leave
lcall
pop
jl
mov
hlt
mov
in
aam
sub
jle
sbb
out
arpl
jle
xor
data16
push
sarb
adc
lahf
out
dec
mov
jl
sub
lret
pop
xlat
outsl
inc
ret
jmp
nop
cmc
pop
in
or
cmpsb
sbb
test
dec
push
fs
inc
inc
pop
inc
cmp
mov
hlt
pop
jno
mov
xchg
inc
aas
push
mov
mov
das
sub
pop
pop
imul
push
push
loopne
push
dec
das
shl
cwtl
sahf
jbe
inc
fdivl
xchg
adc
cmpl
loop
mov
lret
iret
jecxz
in
out
std
cmp
dec
xchg
cwtl
repnz
jo
stos
or
cli
ja
das
pushf
gs
add
popf
shrl
mov
jo
ss
mov
jmp
sbb
cltd
jle
mov
mov
adc
add
lods
stos
jnp
idivl
mov
rcrb
aas
or
xor
or
daa
dec
xlat
psubsw
ret
and
pop
test
call
mov
daa
xchg
fmuls
cwtl
int
dec
or
inc
inc
test
inc
push
pop
xchg
stc
mov
cmp
rcrb
mov
add
aas
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
sub
push
push
push
adc
mov
cmpl
mov
mov
mov
mov
jmp
mov
jne
push
pushl
call
mov
mov
sub
and
and
xor
sbb
add
or
mov
or
shrd
shr
mov
and
mov
xor
mov
add
mov
sbbl
xor
xor
or
mov
add
or
mov
mov
adcl
shl
mov
and
shrd
add
xor
xorl
shr
adcl
mov
mov
xor
or
orl
mov
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
movl
jl
push
call
sbb
and
xor
xor
sbb
or
sbbl
xor
and
mov
sub
mov
mov
and
mov
dec
mov
cmpl
movl
movl
movl
jmp
movl
movl
jl
push
pushl
pushl
call
and
neg
and
adc
not
sbbl
shl
xor
shld
add
shl
mov
mov
mov
mov
addl
xor
xor
movl
movl
movl
mov
cmp
movl
jne
cmp
movl
je
sbb
mov
movzwl
xor
mov
mov
xor
xorl
shld
addl
shl
xorl
xor
mov
mov
adc
mov
xor
mov
mov
cmp
jne
cmp
jmp
push
inc
shlb
cmp
jo
and
test
adc
sbb
sub
test
jne
push
push
cli
jbe
jne
pushl
mov
push
add
jb
call
data16
push
pop
popa
add
cmc
pop
xlat
ret
loopne
xor
in
aad
int
js
sub
std
jge
in
cmpsl
roll
sub
and
xchg
imul
mov
adc
ljmp
test
mov
test
xchg
out
and
aad
adc
bound
and
scas
lea
adcb
test
push
imul
mov
mov
pop
xchg
insb
sarl
mov
insl
testb
mov
pop
ljmp
insb
xchg
cmpsl
lds
dec
decl
jae
push
sub
adc
subb
jecxz
add
jecxz
imul
jg
loop
push
add
and
adcb
pop
repz
insl
jne
das
dec
add
leave
lahf
mov
test
push
cmp
ja
inc
pop
popa
nop
mov
fsubrl
pop
cmp
jp
pop
movsb
mov
mov
or
adc
pop
rcrl
cltd
sti
pop
jl
cwtl
scas
dec
xchg
test
pop
sub
in
aam
icebp
xchg
subb
add
mov
sahf
xchg
scas
mov
int3
movsl
pop
loopne
sbb
mov
xchg
sbb
js
fstpt
push
lret
xchg
cmpsl
std
and
inc
fcomip
addb
dec
mov
xor
sbb
jnp
sub
adc
and
dec
je
sahf
sarb
jg
add
fcomps
xor
or
dec
lea
adc
rcrb
idivl
dec
scas
add
xor
scas
mov
xchg
mov
xchg
dec
xchg
adc
and
arpl
sti
pusha
mov
ss
mov
xchg
mov
and
out
addb
inc
add
mov
cmpl
movl
mov
mov
movzwl
jmp
movl
jle
push
call
mov
mov
sub
add
xor
xor
xor
sub
mov
sbbl
adcl
orl
or
mov
push
cmpl
mov
mov
jmp
mov
mov
jge
push
call
mov
sbb
inc
and
and
orl
and
pop
xor
mov
add
shl
neg
mov
xor
notl
shr
or
mov
or
mov
cmpl
notl
mov
jmp
movl
jge
push
push
call
movzbl
add
mov
andl
andl
mov
sub
sub
inc
mov
adcl
mov
mov
cmpl
mov
movzwl
movl
movl
jmp
mov
movl
jle
pushl
call
or
addl
sub
xor
mov
adc
or
mov
push
cmpl
movl
movl
movl
jmp
movzbl
jle
push
call
orl
and
adc
orl
adc
subl
add
sub
pop
sub
adcl
mov
andl
add
subl
mov
sbbl
lea
addl
mov
xor
add
mov
adc
mov
mov
xor
mov
xor
xorl
xor
shr
orl
shl
incl
or
addl
mov
movzwl
adc
movl
mov
dec
mov
xor
subl
xor
xorl
shr
shl
or
adcl
push
lea
xorl
push
lea
adcl
push
andl
call
mov
mov
mov
xor
mov
xor
cmpl
mov
mov
not
jmp
mov
jne
pushl
push
push
pushl
call
sbb
mov
or
mov
or
inc
xorl
inc
xor
cmpl
mov
mov
movl
jmp
movl
movl
jbe
push
call
adc
add
sub
sbb
orl
sub
shr
movzwl
add
mov
shl
or
subl
push
andl
lea
push
mov
mov
shrd
shr
mov
mov
xor
jmp
rorl
lret
jb
jns
cmc
inc
out
mov
notb
sbb
ja
sarl
xor
jle
adc
sbb
or
mov
rol
ficomps
loop
sub
sub
jb
cmp
push
rclb
xchg
mov
xchg
pop
dec
mov
and
arpl
push
mov
xchg
pop
push
loope
jle
std
push
test
lock
cmpb
xchg
lock
stos
stc
leave
lcall
nop
rorl
pop
xor
xchg
mov
and
iret
mov
lret
dec
rorb
clc
mov
ror
imul
sub
jnp
add
push
mov
mov
add
nop
call
dec
lock
pop
pop
incl
arpl
movsb
xor
pop
scas
je
cmp
aas
xchg
sub
sub
popf
div
adc
push
lea
sti
jne
push
mov
in
out
loop
add
xchg
in
sahf
ljmp
jp
jle
xchg
dec
xchg
or
in
lret
push
dec
sbb
push
adc
xchg
or
imulb
dec
mov
in
mov
cmc
cmp
push
sub
clc
jns
shr
sti
sbb
insb
or
int3
mov
mov
xchg
xor
mov
push
sub
add
add
and
into
jo
div
ljmp
adc
call
lock
in
enter
je
popf
roll
or
notl
incl
lret
mov
leave
dec
je
xor
fists
fwait
gs
fimuls
pop
in
shlb
insl
mov
push
mov
call
mov
cmpsb
dec
xchg
and
sti
arpl
inc
lea
aad
mov
xchg
lea
lret
cmp
add
das
js
mov
into
mov
lahf
push
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
jmp
dec
shlb
sbb
ds
jns
add
sbb
notb
sbb
pop
xor
jnp
out
int3
push
xor
push
cmpsb
push
pop
push
add
mov
iret
lods
mov
js
xor
mov
mov
jp
sub
dec
addr16
mov
mov
jle
dec
mov
out
push
push
inc
outsb
mov
sub
arpl
imul
js
movsb
jb
pop
push
fadds
jmp
inc
push
ss
ret
pop
push
xchg
push
fxch
sbb
rcrb
xchg
jl
ret
mov
push
jne
hlt
add
popa
bnd
pop
mov
fisubrl
daa
cmp
leave
cmp
xchg
mov
pop
jmp
pop
fwait
adc
inc
pop
and
jne
push
cmp
loope
pop
leave
push
popa
sarb
dec
sbb
out
or
xchg
jl
sbb
mov
mov
mov
scas
cwtl
mov
and
mov
jmp
test
jecxz
out
dec
inc
les
xor
add
pop
lods
adc
pushf
out
pop
fnclex
xor
dec
outsb
xchg
xchg
lea
and
adc
push
fcmovu
pop
test
cli
stos
jmp
inc
adc
mov
clc
sbbb
lds
and
or
lds
adc
push
xchg
fs
loop
dec
dec
xchg
ds
lock
inc
push
add
out
mov
push
jecxz
test
loop
stc
loop
js
mov
add
xchg
loop
mov
dec
sbb
adc
jmp
mov
pop
xor
dec
dec
repnz
lods
scas
roll
adc
imul
in
jge
lods
jl
add
rcll
jns
xor
mov
leave
loop
jnp
shlb
jnp
mov
ret
ret
or
mov
dec
sti
xchg
pushf
dec
xchg
dec
mov
lret
icebp
les
popa
lea
pop
xor
xor
or
shl
mov
jmp
in
je
push
fimull
movsl
mov
inc
xor
sbb
adc
sbb
repnz
push
mov
jecxz
test
jnp
mov
mov
js
pop
add
sub
pop
lret
je
stos
mov
sbb
dec
mov
sahf
fisttpll
add
loope
out
xor
mov
imul
inc
xchg
or
mov
sub
sbb
leave
fstl
inc
inc
out
xchg
and
test
sbb
sbb
in
int3
pop
scas
negl
fmuls
lods
add
mov
lods
dec
mov
push
xor
mov
scas
mov
dec
jne
faddp
xor
cmp
es
or
pop
push
popf
mov
sarb
push
adc
or
cmc
push
push
insl
inc
sbb
and
push
loope
subb
lea
sbb
aas
lds
repz
xchg
inc
out
lock
scas
mov
mov
lods
mov
inc
xchg
rolb
jne
das
mov
pop
in
ficompl
out
push
dec
push
jb
mov
pop
icebp
and
mov
cmp
add
push
adc
aas
in
jge
das
adc
mov
outsl
mov
push
mov
hlt
mov
in
jno
imul
jo
cmp
mov
inc
testb
aas
fiaddl
inc
jnp
mov
mov
lock
jmp
lea
in
enter
add
in
jmp
movsb
stos
and
and
in
sarw
sti
lds
aas
push
add
cmp
jb
repz
pop
lret
jns
push
jge
add
in
hlt
idiv
mov
loopne
push
scas
orb
cs
fisubrl
stos
inc
lods
rcrb
enter
jns
cmp
gs
imul
dec
icebp
adc
mov
loope
pushf
jo
pop
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
fdivrl
sbb
mov
mov
and
sbb
notb
sbb
pop
jnp
push
jae
cmp
fdivl
test
push
psubb
data16
loop
sarl
leave
idiv
xor
push
not
mov
sbb
mov
into
dec
ret
mov
sbb
pop
loope
and
dec
fnstsw
ret
decb
jg
js
js
dec
test
loop
jp
jbe
or
lds
dec
fbstp
jo
lods
push
pop
push
hlt
in
mov
xchg
sub
sbb
movsb
in
sub
imull
and
inc
add
push
xchg
jl
jne
inc
mov
or
mov
out
push
icebp
adcb
and
jne
jg
jne
pop
stc
repnz
test
xchg
jp
mov
cs
mov
cmp
movaps
outsb
rcrl
and
sahf
inc
lret
lds
fs
push
jecxz
or
stos
ret
rcl
inc
inc
cmpsl
or
sub
in
add
push
mulb
out
adc
lcall
sub
mov
subl
push
repnz
inc
push
int
rolb
andl
sbb
adc
sub
ja
push
fildl
xor
scas
push
push
pushf
lret
add
push
in
scas
mov
jnp
movsb
ss
pop
push
lods
mov
dec
int3
push
cltd
sbb
aaa
jae
or
mov
or
movsb
dec
fdivrl
data16
adc
lods
or
xchg
push
pop
push
shr
sbb
xchg
lret
ja
lods
xor
loopne
mov
enter
rol
int3
inc
push
scas
xchg
lds
sbb
fcmovnbe
repnz
push
sbb
out
lcall
jmp
pusha
sbb
or
cmp
cmpb
pop
cmp
cltd
inc
sub
lret
pop
mov
sbb
adc
loopne
add
fisubrs
stos
mov
lock
push
mov
mov
jmp
aaa
and
dec
mov
push
out
ror
lock
notb
sbb
adc
clc
popf
sbbb
pop
pop
pushf
test
int
sbb
daa
fwait
popf
popa
sub
lods
mov
lahf
adc
jl
xchg
mov
in
jnp
pop
mov
pop
shlb
sbb
mov
jecxz
aaa
or
movsb
and
add
ret
and
cmp
js
notb
lret
or
cmp
inc
aaa
adcb
mov
push
imul
movsb
add
push
cwtl
jecxz
add
popf
into
dec
pop
subl
jl
js
in
ja
add
sub
push
inc
mov
out
arpl
pop
clc
xor
adc
sbb
mov
icebp
mov
mov
xchg
popa
or
mov
push
sub
push
outsl
xchg
mov
jo
sub
sbb
jl
ljmp
popa
imul
push
ljmp
lahf
xchg
cmp
mov
out
ljmp
sub
cld
lock
pop
mov
and
mov
mov
aad
test
sub
cmp
loop
sub
jl
mov
movsl
xor
scas
dec
mov
jge
cmpsl
and
jb
sbb
add
jmp
sub
repnz
cmp
xchg
pop
das
into
addr16
int3
int3
daa
jns
js
jl
mov
dec
scas
and
sahf
jne
jmp
xlat
xchg
test
test
xchg
xlat
inc
sbb
iret
mov
xchg
in
or
sub
jns
stos
xchg
ljmp
movsl
mov
push
movsl
mov
adc
cmp
out
and
sbb
int
mov
mov
fnstsw
std
cmp
cmp
ja
jmp
mov
push
imul
popl
pop
pop
inc
ja
test
fstpt
cmp
dec
mov
dec
leave
lods
shl
xchg
gs
inc
mov
push
pop
mov
pushf
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
jmp
add
bound
cmp
push
fsub
xchg
mov
fsubl
sbb
notb
sbb
or
out
mov
mov
gs
addb
ret
fnsave
cmpsl
cmp
rcrl
mov
and
xor
lods
cmpsl
rcr
pop
pop
push
fisubs
push
fcomps
mov
iret
jle
loope
cmp
aas
pop
mov
out
dec
insb
pusha
icebp
mov
mov
cmpsl
aad
frstor
jmp
test
sbb
sbb
xor
sbb
hlt
stc
jnp
je
sbb
loop
leave
test
repnz
jp
in
int3
in
push
movb
pop
cmpl
mov
imul
mov
fmuls
cs
rcl
mov
jp
fsubrl
push
repnz
hlt
andb
xlat
mov
sub
pop
mov
or
push
bound
pop
out
jmp
daa
lods
or
mov
leave
xor
imul
mov
push
mov
inc
shll
arpl
add
xorl
lock
lahf
sub
mov
inc
insb
enter
std
mov
mov
aaa
push
mov
jle
sbb
push
mov
aaa
iret
cltd
and
test
cmp
pop
fldl
lods
out
pop
sbb
xor
fsts
mov
dec
nop
mulb
pusha
xor
push
dec
sub
call
adc
push
mov
sbb
pop
cmc
scas
add
or
sub
enter
mov
sub
data16
ret
push
mov
clc
sub
dec
cwtl
dec
sti
sbb
jl
ss
adc
enter
mov
pop
push
cmpsl
hlt
jp
xor
pop
push
rcrb
inc
aas
fisttpll
add
hlt
inc
std
xchg
call
sub
mov
popf
jp
mov
push
or
push
xchg
dec
pop
lcall
sub
mov
xor
push
ja
xchg
push
push
adc
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
xorl
or
mov
jne
mov
andl
mul
ret
push
orl
mul
cmpl
movl
movl
mov
jmp
mov
jbe
call
mov
sub
mov
sub
movzwl
or
add
adc
movzbl
or
add
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
jmp
ss
mov
in
movsl
mov
mov
adc
sbb
scas
das
popa
icebp
shl
stos
push
notb
lock
add
dec
ret
cs
mov
fidivs
lods
jp
lret
adc
adc
jns
rorl
test
jb
addr16
fnsave
sbb
add
out
hlt
xor
sbb
test
popf
in
sub
mov
mov
pop
icebp
pop
fwait
ret
stc
cmp
push
idivb
mov
je
mov
ss
inc
push
icebp
rcrl
insl
pop
sbb
lret
out
or
pop
fwait
inc
mov
mov
jg
in
xchg
jmp
imul
sub
adc
std
and
dec
xor
insb
test
and
aaa
cmp
jbe
mov
dec
movsl
movsl
pushf
ret
cs
inc
dec
in
mov
out
fcoml
cmp
xchg
jb
fdivrs
cmp
mov
xchg
add
mov
xor
lahf
es
mov
or
imul
mov
mov
xor
xor
pop
or
or
loop,pt
sub
mov
xchg
inc
push
xchg
outsb
pop
dec
or
xchg
rorl
xor
shrb
sti
in
pop
loop
sbb
jne
jecxz
mov
lahf
sub
pop
mov
jae
aad
popa
test
xchg
inc
xlat
mov
sbb
cmp
jb
test
mov
add
and
insb
mov
cmc
jno
inc
xchg
xchg
add
adc
mov
inc
dec
insl
push
pusha
mov
lret
cmpsb
imul
jge
adc
mov
xchg
mov
mov
jmp
pop
sub
adcb
enter
jno
cs
cmpsb
in
pop
rcrb
ljmp
aam
add
mov
sub
push
mov
sbb
mov
dec
cmp
add
and
stos
adc
jns
xor
sbb
shlb
sub
or
int
int3
cltd
stos
repz
xchg
xchg
cmp
ss
mov
adc
pushf
sbb
and
cmpsb
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
jmp
cli
push
test
adc
lods
aad
add
sbb
sbb
or
xor
out
ffreep
sbb
hlt
xchg
leave
loope
outsl
xor
clc
aad
aaa
xorl
push
mov
mov
push
sbb
std
mov
adc
loopne
jno
or
into
push
add
out
xchg
out
addr16
loop
mov
in
dec
mov
dec
push
test
xchg
mov
pop
pop
sahf
jge
fildl
add
inc
xchg
add
lods
and
adc
mov
adc
subps
bound
dec
cmp
mov
ret
push
cmp
rolb
int3
mov
ret
call
incb
ds
cwtl
into
jl
xchg
dec
dec
imull
rol
cld
insb
xor
hlt
sar
mov
add
sbbl
das
clc
sarb
pop
sub
ljmp
daa
fisttpl
fisttpll
mov
jne
rcll
mov
xchg
dec
test
lahf
fstl
push
outsb
pop
pop
leave
xchg
cs
in
pusha
xchg
fucom
test
pop
shl
fdivs
popa
and
clc
sti
std
mov
sbb
repz
mov
gs
cmp
imulb
sub
insb
jns
test
mov
dec
test
mov
xchg
rclb
push
popa
imul
or
xchg
sbb
das
test
sbb
enter
movsb
lods
jae
jns
out
rorl
out
out
out
ljmp
push
shlb
repnz
das
enter
sub
daa
jp
sarb
add
fmull
add
dec
adc
sub
mov
jne
and
sub
push
loop
mov
ljmp
push
mov
inc
push
jnp
xlat
push
sub
mov
sbb
cmp
and
add
xchg
and
fcoml
insb
adc
loopne
mov
mov
jae
mov
fs
mov
add
push
mov
popa
add
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
push
push
push
pushl
call
mov
movzwl
push
call
test
jne
movl
xor
movl
jmp
subl
mov
cmpl
not
mov
jmp
not
mov
je
push
push
push
push
push
call
mov
add
movzwl
xor
adc
or
or
xor
cmpl
mov
mov
mov
mov
jmp
mov
movl
ja
push
push
call
add
or
or
mov
mov
sub
add
add
movl
movl
xor
or
sbb
mov
xor
or
adc
mov
orl
xor
xorl
imul
adcl
and
subl
sub
cmpl
movl
movl
movl
jmp
movl
jge
pushl
pushl
push
push
call
andl
add
mov
sbb
sub
and
xor
add
xor
movzbl
adc
xor
mov
add
movl
xor
add
mov
sub
and
movl
movl
sbb
movl
mov
movzwl
sbb
mov
sub
movzbl
or
mov
xorl
and
sbb
jmp
dec
test
and
ljmp
mov
sbb
sbb
adc
sbb
mov
mov
roll
pop
xchg
rcl
fidivl
jg
fistps
ds
or
dec
cltd
xchg
shlb
sahf
inc
and
sarb
dec
xchg
mov
and
call
sub
lock
les
inc
popf
inc
push
rclb
hlt
pminsw
je
fsubs
jecxz
ficompl
enter
mov
sbb
inc
popa
push
fmuls
dec
lahf
call
std
inc
jg
std
pop
xchg
add
xor
push
subl
leave
std
clc
in
pop
sub
adc
push
and
ds
dec
ljmp
adc
and
ret
add
ret
pop
adcl
push
movsb
mov
bound
xchg
lock
mov
inc
mov
scas
pop
outsb
xchg
jno
mov
leave
pushf
insb
push
jle
imul
outsl
enter
xlat
or
sub
stos
lods
and
dec
mov
add
ror
inc
icebp
or
lock
cli
add
pop
xchg
jecxz
sbb
and
xchg
push
lret
jne
inc
rcl
sbb
mov
stos
sbb
push
xchg
ds
fsts
or
adc
push
push
xchg
sahf
adc
pop
fucomip
mov
inc
xchg
and
cmp
dec
pop
lret
push
sarl
dec
inc
in
mov
xlat
pop
sbb
push
js
adc
xchg
mov
cmp
inc
mov
inc
in
fcmovbe
jne
dec
sub
mov
fildl
stc
rolb
and
and
mov
adc
lock
mov
bound
push
js
shlb
sub
dec
jnp
test
xorl
jbe
out
lret
movsb
outsb
sahf
jl
faddl
cmp
testl
push
and
mov
mov
fsub
adc
stos
adc
mov
pop
xchg
push
mov
bound
mov
dec
or
mov
out
stc
dec
aaa
ficoml
mov
xchg
jns
jg
inc
testb
imul
movsb
std
divb
jo
stos
xor
pop
mov
shlb
mov
jg
jecxz
idivl
pop
adc
cltd
or
loopne
pop
mov
and
mov
subl
dec
sbb
pop
mov
into
sub
sarb
xchg
and
xchg
stos
xchg
movsb
imul
push
jbe
jns
lret
test
cld
ret
xchg
imul
xor
es
xor
and
das
mov
add
jg
dec
sbb
sub
sbb
cmpsl
pop
test
or
data16
mov
push
in
cli
jnp
pop
nop
loope
sbbb
push
movsb
rorl
test
sbb
pop
mov
out
dec
aaa
or
pushf
ds
push
pop
ja
push
loope
fucomp
sbbb
xorl
les
mov
enter
pop
mov
cmc
ret
dec
icebp
xchg
rcrb
xchg
push
hlt
add
mov
daa
mov
outsl
test
in
aad
push
sub
add
add
rcrb
push
sahf
inc
aad
mov
adcl
xor
sub
imul
movl
mov
movl
cmp
jne
movl
xor
xor
sbb
movl
movl
movl
pushl
mov
or
movl
cmpl
mov
notl
movl
movzwl
jmp
movl
jne
pushl
call
xor
add
mov
sub
orl
mov
mov
adc
movl
movl
movl
sbb
movl
mov
xor
xor
sub
sub
movl
sbb
movl
or
mov
cmpl
movl
mov
jmp
movl
jb
push
call
sbb
add
sbbl
addl
sub
xor
subl
add
mov
notl
imul
movl
or
xor
xor
adcl
pushl
cmpl
movl
mov
mov
jmp
mov
movl
jl
push
push
pushl
call
add
mov
xor
andl
sbb
and
xor
mov
add
push
pop
xor
subl
div
andl
mov
xorl
xor
or
xor
mov
or
sbb
mov
adcl
div
xor
xor
xor
adcl
pushl
sbb
mov
xorl
mov
orl
pushl
movl
add
pushl
imul
pushl
add
mov
adcl
mov
addl
xor
mov
div
and
subl
or
movl
pushl
orl
call
andl
dec
movl
jne
movl
mov
mov
and
mov
mov
andl
movl
adcl
mov
call
mov
mov
sub
xor
lea
subl
mov
add
lea
mov
or
mov
mov
cmpl
mov
mov
jmp
movl
jbe
pushl
push
push
call
sub
or
add
xor
dec
incl
cmpl
movl
movl
movl
jmp
movl
mov
ja
push
pushl
push
pushl
push
push
pushl
push
call
mov
xor
mov
adc
sub
add
adc
mov
sbb
mov
and
mov
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
push
push
push
push
call
sbb
sub
mov
mov
sub
add
xor
or
add
xor
and
mov
xor
cmpl
not
mov
movl
movl
jmp
mov
movl
je
pushl
pushl
pushl
push
call
neg
add
sbb
xor
movl
and
xor
add
shl
shr
or
mov
cmpl
movzwl
mov
movl
jmp
movl
movl
jae
pushl
push
push
call
movzwl
sub
mov
adc
mov
adc
mov
mov
sub
imul
inc
xorl
and
andl
mov
mov
mov
and
mov
movl
mov
mov
xor
mov
shrd
neg
shr
addl
mov
mov
jmp
push
lcall
add
push
jle
adc
sbb
adc
sbb
fs
sub
lods
aas
movsb
imul
dec
push
scas
jp
fwait
dec
push
jecxz
dec
scas
mov
adc
in
sub
lods
cli
daa
outsb
insl
inc
sbb
pushf
outsl
fldl
lods
inc
int
rorb
adc
jo
popa
int3
xchg
je
fnstsw
movsl
inc
pop
mov
inc
mov
andl
shl
insl
mov
dec
movsl
adc
mov
and
dec
jb
lret
lret
pop
jg
sub
jae
gs
getsec
out
push
push
mov
push
sub
lock
jo
xchg
nop
dec
scas
in
sub
repz
stc
les
inc
mov
and
push
into
mov
repnz
scas
fdiv
loope
ja
scas
mov
jae
jp
push
jmp
add
push
cmp
lods
mov
mov
aaa
mov
ja
ds
pop
and
repz
sub
in
movsb
sbb
add
adc
aas
test
xchg
mov
mov
jnp
daa
fidivrs
sbb
std
sub
dec
push
jge
jle
std
sahf
mov
je
xor
sub
jbe
div
mov
adc
sub
imul
shld
lahf
dec
hlt
push
in
pushf
mull
sub
sbb
jne
push
xor
or
es
mov
mov
xchg
fbld
push
fsubl
mov
pusha
int
or
xchg
dec
add
xchg
or
sub
das
shl
jnp
jg
ss
stos
sbb
lret
ret
add
mov
orl
adc
mov
sahf
test
mov
hlt
movsl
mov
ja
xor
jo
sbb
fcmovnu
in
jnp
add
jae
pop
iret
sbb
fcmovnb
pushf
in
and
xchg
aaa
bound
xor
add
xchg
clc
mov
movsl
incl
in
sar
les
cmp
lods
jne
pop
dec
lds
dec
icebp
scas
pop
pop
mov
mov
and
fstl
mov
xor
aam
or
and
mov
mov
mov
mov
dec
add
test
pushf
pop
pop
dec
pop
jge
es
outsb
scas
mov
pushf
scas
lcall
xchg
mov
xchg
mov
sbb
pop
adc
xchg
mov
lret
mov
xlat
push
hlt
call
xchg
adc
je
cltd
stc
cmp
sti
mov
rcrb
imul
mov
and
scas
test
lock
add
aad
or
pop
sbb
xor
lcall
inc
popa
jbe
jg
jg
orb
pop
dec
sub
cli
adc
ljmp
jo
dec
jp
ds
scas
daa
xchg
sbb
jge
mov
out
dec
jnp
or
mov
fidivrl
or
mov
sub
int3
inc
and
pop
mov
jo
adc
aas
out
ret
xor
shll
push
sbb
test
add
mov
and
inc
std
cmp
sbb
and
leave
sbb
xor
incl
xor
or
mov
push
pushl
lea
negl
push
andl
shl
call
subl
lea
orl
push
subl
mov
mov
subl
lea
push
mov
orl
lea
mov
xorl
mov
adcl
jmp
imul
inc
push
add
jle
or
sbb
adc
sbb
inc
push
loop
cmp
pop
pop
jl
int3
inc
fisubrs
push
pushf
and
and
fsubrl
jno
mov
pop
arpl
cltd
std
inc
out
fs
dec
dec
cmpsl
or
mov
fistps
sub
in
jmp
jnp
fistps
jle
mov
test
fdivs
push
sub
pop
sahf
cmp
icebp
jns
cmp
cs
aas
pop
pop
cwtl
jne,pn
jl
cmc
subl
add
out
pop
or
das
pop
test
inc
cmpl
std
xor
stos
test
adcl
or
dec
xlat
scas
leave
push
lcall
jecxz
sub
or
ss
xor
lods
imul
xor
cs
lahf
xor
orl
or
and
cli
dec
aad
movsb
cmpsb
and
sbb
mov
jnp
pop
int3
jmp
outsb
push
sti
jne
sub
subl
je
fsts
incl
cmp
mov
pop
sbb
shr
lds
pushf
inc
lret
and
sub
mov
outsl
flds
xor
shll
fmul
sbb
xchg
dec
clc
mov
ds
mov
jne
cltd
jg
shll
repnz
or
int
pop
sub
push
imul
in
lcall
ss
cmp
fldl2e
lret
xlat
loope
dec
and
aas
lods
outsb
std
test
js
sub
movsl
pop
loope
jns
or
pop
xchg
xor
cli
ret
add
mov
lahf
pusha
jbe
jmp
imul
sarb
cmc
pop
xchg
xchg
adc
jle
les
jae
out
sbb
inc
push
dec
lds
dec
nop
mov
cmp
mov
daa
sub
lods
test
inc
shl
jecxz
rol
fadd
adc
inc
nop
inc
xor
jo
outsb
clc
lods
pop
xchg
sbb
mov
pusha
inc
or
and
cmp
sbb
sub
bswap
outsl
leave
jmp
aaa
xchg
mov
cmp
dec
ds
xor
jnp
imul
fstpl
and
and
frstor
and
lahf
aaa
sub
or
mov
ja
gs
cltd
rcrl
popa
lods
stos
mov
andb
bound
adc
jns
pop
jo
inc
xchg
inc
mov
dec
pushf
shlb
outsb
fiadds
and
test
movhps
push
pop
xor
add
mov
mov
daa
push
xchg
ficomps
push
xchg
mov
jl
pushf
stos
call
aas
inc
lods
inc
mov
sub
scas
insb
fadd
fs
shll
jns
repnz
sahf
inc
push
pop
lret
nop
cmpsl
mov
dec
mov
mov
ljmp
mov
roll
xchg
or
into
jle
add
scas
leave
push
xor
push
icebp
adc
test
sub
in
movsb
lds
or
lahf
and
inc
sub
repz
and
loop
and
jp
lea
test
push
pop
xchg
bound
adc
scas
repz
mov
lea
in
lret
orl
ljmp
add
pushf
add
add
mov
push
in
xor
dec
add
inc
add
sbb
adc
sbb
sbb
fdiv
dec
fistpl
es
dec
enter
rclb
aam
out
scas
jl
mov
imul
jne
dec
jns
inc
mov
push
or
or
insl
jg
sub
jmp
mov
divb
and
cltd
add
inc
les
adc
jnp
xor
jmp
sbb
jl
stc
stc
int3
ds
mov
nop
lahf
daa
in
or
mov
dec
push
lahf
mov
inc
mov
and
mov
fidivl
mov
lcall
jle
and
xor
mov
cmp
lock
int
cmp
aaa
es
jne
pop
loope
stos
popa
jno
dec
jbe
or
daa
dec
stos
sbb
out
pusha
sub
sbb
clc
mov
xchg
mov
pop
mov
push
fwait
mov
dec
ret
lea
mov
mov
adc
jbe
jo
fwait
test
pop
arpl
or
xchg
cld
loop
xor
setle
imul
test
jns
mov
repnz
bound
or
mov
mov
inc
and
subb
rcll
in
jl
aad
dec
mov
fisubl
enter
and
or
stc
lods
jecxz
or
fisubs
enter
push
mov
mov
arpl
je
enter
loop
jmp
fstps
out
mov
out
sbb
and
ds
addb
and
shlb
push
dec
ret
int3
adc
in
or
mov
sub
inc
dec
ljmp
sub
push
std
sub
int3
xchg
filds
sub
mov
adc
add
push
das
jns
mov
mov
or
mov
and
pushf
mov
xchg
icebp
stos
insl
inc
je
mov
fldl
and
fiaddl
pop
xor
mov
mov
inc
xor
jnp
imul
pop
filds
jbe
in
adc
xlat
xor
push
ja
fistpll
pop
into
and
add
cmp
push
push
shlb
lret
int
mov
cmp
inc
xchg
or
loope
dec
stos
mov
mul
xor
pushf
orb
or
cld
leave
jecxz
mov
fcoms
jecxz
int3
aad
jb
or
data16
inc
xor
mov
mov
cmp
mov
pop
in
cli
push
out
arpl
cwtl
push
mov
lcall
arpl
inc
cmp
not
mov
cli
mov
push
and
clc
cmp
add
adc
dec
mov
shll
cltd
iret
lret
out
xchg
push
orb
in
push
inc
jne
xor
jmp
jmp
or
int3
jge
shl
push
mov
cli
sbb
cmc
shlb
xor
mov
and
jo
mov
or
pop
mov
fsubrl
mov
sbb
push
push
int
sti
sub
and
mov
jae
or
mov
or
negl
mov
xchg
insl
and
mov
xor
outsb
addb
add
xor
push
addb
pop
and
add
add
je
adc
in
decl
dec
and
and
mov
neg
mov
shr
shl
or
mov
xor
add
sub
or
mov
xor
mov
sbb
lea
mov
xor
lea
sub
mov
mov
sub
mov
sub
mov
mov
xor
lea
movzbl
and
xor
cmpl
movl
not
jmp
mov
movl
jbe
push
call
sbb
add
sbbl
subl
movzbl
sub
mov
movl
sub
movl
movl
subl
movl
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
call
sub
mov
sbb
adc
and
adcl
sbb
xor
mov
mov
xor
mov
movzbl
and
mov
xor
mov
add
movl
adc
subl
xor
cmpl
mov
mov
mov
jmp
movl
je
push
push
push
push
call
inc
and
orl
orl
xor
and
mov
mov
xor
mov
adc
and
mov
adc
movl
adc
movl
cmpl
mov
mov
movl
jmp
mov
jne
pushl
push
call
xor
sbb
sbb
movzwl
or
movl
movl
add
movl
movl
movl
notl
mov
movl
mov
cmpl
notl
movl
jmp
not
jg
pushl
push
pushl
push
push
pushl
call
xor
mov
or
sub
adcl
subl
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
jmp
je
or
pop
pop
mov
cmp
inc
cld
push
sbb
adc
sbb
push
cltd
shlb
sti
or
loope
sub
cs
ja
xchg
int
in
sub
or
hlt
add
mov
jmp
and
aas
mov
leave
dec
cmpsl
mov
mov
jo
outsb
pusha
loopne
int
adc
jecxz
lcall
mov
push
add
inc
jbe,pt
fsubrl
xor
jle
frstor
cmpsb
inc
or
jns
sub
outsl
stc
cmp
sub
out
push
adc
dec
mov
daa
push
call
mov
push
mov
jmp
xchg
stos
pop
das
jmp
aaa
adc
mov
lock
and
add
imul
in
cmp
push
mov
dec
ljmp
cltd
into
adc
sub
mov
push
mov
cltd
js
mov
jae
cwtl
iret
orl
in
test
sbb
pop
mov
hlt
inc
jns
mov
sub
sbb
jg
ljmp
mov
sbb
mov
incb
addb
mov
push
cltd
add
add
inc
ror
aas
xlat
enter
popa
shll
and
jl
lods
fimull
add
loope
fnop
fsubr
dec
sbb
hlt
shlb
cmp
in
adc
and
sahf
xchg
adc
jns
aam
flds
out
sbb
sub
adc
out
inc
iret
pop
jnp
lahf
fiadds
shl
inc
fcmove
addr16
and
sub
mov
sub
adc
pop
push
pop
cmpsb
imul
or
mov
adc
or
insb
sbb
imul
loopne
dec
jbe
dec
aam
mov
sahf
pop
add
adc
outsb
in
sbb
rcrl
imul
push
or
jno
sahf
xor
push
inc
xor
bound
or
bound
dec
test
jne
cmp
push
jo
dec
repnz
nop
pop
push
sub
orl
je
jl
jecxz
es
test
xchg
fwait
and
inc
push
mov
xchg
ret
out
rcrl
mov
jmp
ljmp
ds
cli
mov
cmp
push
adc
dec
adc
lock
outsb
mov
cmp
mov
sbb
push
out
xor
cmp
jbe
mov
pop
addb
in
loop
cmp
xor
sbb
sub
test
dec
imul
sub
in
sbb
sub
stc
adc
sbb
sbb
dec
dec
inc
push
leave
push
lret
pop
pop
sbb
int3
nop
xchg
mov
pop
pusha
shrb
andl
fcmovbe
inc
es
popf
mov
mov
imul
ret
add
insl
rcr
rolb
push
cmp
jne
lahf
xchg
sub
inc
fcomi
dec
xlat
xchg
std
out
hlt
test
pop
jp
push
insb
mov
cld
mov
jno
and
mov
ss
out
sub
dec
es
xor
ljmp
xor
add
mov
sub
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
jmp
and
and
mov
notb
sbb
adc
sbb
sub
andl
popf
rep
fwait
sub
pop
adc
mov
push
and
fisttps
cmpsb
sub
fldt
jnp
jae
pop
pop
ret
push
cmpsl
push
orl
cmp
enter
jl
add
or
sub
xor
bound
mov
movsl
push
xchg
sbb
ja
insb
call
into
and
or
lcall
jnp
dec
push
leave
mov
or
mov
adc
pop
scas
jle
sti
pushf
jmp
mov
push
adc
jmp
int3
and
pop
fmuls
jmp
lods
push
in
daa
pop
cmc
sbb
mov
rorl
pop
inc
cltd
xor
add
mov
sub
and
mov
in
or
cld
lock
cmp
push
dec
jl
cs
sub
jge
xor
icebp
jmp
daa
pop
jnp
mov
leave
fdivr
in
dec
push
pop
lcall
dec
jno
stos
stos
adcl
pusha
lret
aad
popf
jns
decb
jnp
insl
sbb
sbb
adc
addr16
gs
jns
adc
jl
xor
push
jno
add
mov
sti
mov
adc
mov
and
pop
aad
pop
scas
add
dec
aam
inc
test
jns
daa
xchg
loope
pusha
int3
stos
cs
inc
sbb
mov
imul
je
filds
fcmove
cmp
ficomps
and
popf
cltd
inc
ljmp
mov
cmp
lret
lods
les
jmp
adc
in
in
rclb
jmp
lahf
test
sahf
mov
lahf
mov
mov
push
dec
mov
cli
int
loope
mov
pop
cmp
frstor
pop
ret
setbe
pusha
loop,pn
mov
stc
adc
stos
in
out
and
cmpsb
mov
pushf
stc
cmp
cmp
mov
pop
popf
jae
sub
insb
xchg
adc
adc
mov
outsl
jmp
mov
das
lret
jno
adc
clc
pop
idivb
pop
jg
xchg
leave
cld
aam
in
pop
inc
sub
dec
outsb
mov
dec
dec
cld
mov
test
sub
or
xor
adc
pushf
pop
push
mov
xorl
stos
xchg
add
ljmp
rorb
push
inc
fisubrs
pop
add
arpl
popf
icebp
cli
xor
cld
push
les
or
scas
arpl
adc
mov
pop
data16
subb
sub
mov
mov
adc
test
push
pop
popa
popa
xlat
jl
dec
pushf
aam
adc
decl
shufps
enter
jns
cld
push
mov
pop
sbb
out
aam
sbb
repz
cmp
adc
mov
pop
mov
lock
inc
jo
adc
cmp
cli
cmpsb
imul
inc
imul
cld
in
addr16
mov
xor
fucomp
out
dec
movl
movl
movl
movl
movl
movl
movl
movl
mov
jmp
push
pop
xlat
jns
cmp
mov
std
adc
inc
out
push
sbb
adc
sbb
jp
fsubl
stc
in
pusha
pmaxsw
dec
adc
adc
popa
pop
pop
cmp
daa
lds
fnsave
cli
fildll
jg
cmp
ffreep
pop
fmull
cmpsl
xchg
nop
scas
push
es
aaa
or
xor
fstl
ret
xlat
mov
lds
repz
out
iret
sahf
fs
or
mov
mov
addr16
pop
mov
or
cmp
mov
out
decb
adc
push
insl
aad
and
jge
xor
fldenv
test
and
mov
mov
scas
jns
push
adcl
out
fwait
push
adc
mov
pop
fsts
adc
aas
mov
adc
adc
int3
in
in
scas
add
xchg
xchg
pop
fstpl
test
mov
lods
mov
std
jne
mov
xor
mov
ja
sbb
sbb
sub
mov
iret
fdivs
sbb
and
repnz
mov
jnp
lcall
push
xchg
xchg
add
lcall
data16
mov
push
push
lods
and
xchg
sub
and
shlb
cs
lahf
out
sbbl
icebp
or
and
jg
ja
cmp
xor
mull
das
add
and
adc
and
inc
mov
insl
dec
push
cld
fldt
stos
mov
xor
aam
test
push
sahf
mov
xchg
sbbl
add
stc
nop
pop
divl
inc
xchg
xor
fldl
sbb
pop
repz
jns
jl
call
adc
push
xchg
sarb
mov
dec
xchg
cmpsl
add
pop
dec
cmpsb
sbb
scas
xlat
mov
sub
lret
ficompl
mov
mov
sub
pop
std
cmp
popl
jl
aas
dec
cltd
insb
dec
es
pop
aaa
jno
stc
enter
xchg
imull
dec
out
add
lock
cmp
stc
lods
lret
mulb
cmp
dec
icebp
or
inc
push
popf
xlat
ficoml
adc
dec
jb
sub
stos
cmp
scas
into
les
repz
lret
sahf
mov
xor
hlt
inc
lret
xchg
jo
push
sub
js
add
test
inc
testl
mov
adc
push
es
and
push
add
fdiv
dec
in
mov
lahf
xchg
sub
enter
stos
jno
scas
inc
test
xchg
dec
xor
xchg
mov
repz
mov
in
leave
xor
pop
add
mov
jb
in
pop
xchg
add
fwait
not
inc
mov
xor
repnz
dec
leave
adc
push
les
dec
jbe
sbb
mov
inc
test
adc
pop
and
insl
insb
xchg
ficomps
pop
cmp
sbb
movsl
xor
outsl
inc
inc
mov
mov
rolb
add
pop
ja
jns
xlat
sbb
std
rcr
popf
jae
test
inc
inc
addr16
mov
pop
sub
dec
or
xor
inc
mov
add
in
frndint
lods
mov
xlat
fnsave
pop
pop
cmp
out
ss
or
imul
dec
add
arpl
int3
mov
and
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
jmp
sub
lds
and
ds
jno
stos
adc
jmp
sbb
rol
std
loope
arpl
loopne
fwait
xchg
jp
push
aas
and
push
mov
pop
es
fcmovb
lret
imul
jne
aaa
pop
adc
push
and
lcall
jnp
roll
mov
dec
ds
cmpps
dec
jbe
and
ret
cmpsb
fwait
cmpsb
mov
stos
dec
adc
mov
inc
test
fcmovnbe
or
mov
pop
xchg
insb
in
cmp
es
rcl
push
call
push
sub
fs
jno
stos
or
lret
cmovns
mov
loop
push
dec
mov
push
outsb
idiv
sub
jnp
jbe
add
repnz
mov
mov
jg
movsl
cmp
and
sub
popf
in
outsl
clc
pushf
cmp
fbstp
daa
jns
jg
cwtl
cltd
mov
jp
push
cmp
add
mov
fbstp
push
push
rep
ret
dec
add
imul
or
sahf
mov
loope
mov
pop
dec
shll
rclb
popa
popa
je
cmpsb
je
fcoml
add
dec
sbb
les
scas
aad
imul
push
outsb
lcall
dec
lods
push
jbe
lea
popf
xor
out
sbb
andl
daa
or
sbb
jo,pn
mov
out
inc
in
pop
inc
ds
sbb
pop
pop
scas
inc
lds
jmp
sbb
push
ret
scas
jbe
inc
inc
mov
lahf
or
test
aam
or
std
repz
adc
add
push
xchg
jns
inc
sub
jne
insb
jmp
aam
and
xor
add
int3
aad
inc
adc
pushf
inc
icebp
pop
lods
dec
fs
hlt
lods
stos
aad
nop
pop
das
mov
cmp
adc
imul
hlt
out
mov
or
cli
xchg
neg
dec
inc
imull
pop
mov
or
out
sahf
mov
mov
xchg
incl
jp
mov
mov
cltd
push
dec
fcmovbe
cmp
dec
adc
dec
jnp
movsl
es
rcr
fldcw
icebp
cmp
pop
adc
sub
jge
xor
cs
and
jno
stc
adc
adc
mov
nop
xchg
add
xor
imul
sbb
out
scas
push
xor
xchg
xchg
pop
dec
cmpsb
in
aad
std
push
push
orl
ljmp
add
jno
add
ja
or
dec
mov
xchg
pop
mov
sti
scas
sahf
fucomip
mov
call
and
adc
xchg
inc
pop
loope
pusha
popf
and
pop
aad
jbe
in
subl
cmp
pop
sub
aaa
std
int3
sub
scas
rolb
dec
repz
mov
jmp
dec
xchg
aas
out
lret
outsl
in
in
sbb
lods
pop
call
sub
mov
cmc
inc
cwtl
rcrl
cmp
sbb
push
inc
lcall
jo
jecxz
mov
pop
pop
inc
jmp
and
ficoml
mov
jno
xchg
inc
pop
rcrb
sbb
idivb
jne
jns
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
jmp
cs
and
push
mov
xchg
mov
sbb
sbb
pop
and
popa
xor
sub
jg
inc
movsl
push
jae
mov
xorl
mov
inc
cs
aad
arpl
push
pop
dec
mov
fwait
lea
icebp
aaa
andl
ja
lcallw
subb
adc
xchg
jecxz
test
aad
add
cmp
push
add
push
fisubrs
jl
pop
stos
imul
adc
lea
jp
xor
xchg
das
popf
pushf
aad
dec
orb
adc
stc
pop
and
sbb
and
sbb
cli
rcll
mov
gs
jo
insb
pop
aad
add
mov
add
loopne
ret
pop
push
sbb
das
and
inc
stc
pop
lcall
pushf
mov
dec
push
pop
int
rcll
xor
jno
dec
mov
cmp
imul
mov
enter
inc
push
out
ds
mov
or
fdivl
fdivs
dec
sub
dec
mov
fidivs
sbb
clc
mov
mov
mov
aam
adc
fisubs
xchg
inc
pushf
mov
dec
subl
and
push
out
mov
arpl
xchg
fbstp
ljmp
out
iret
outsb
adc
cmpsb
sbb
and
push
rolb
loope
xor
test
repz
dec
xchg
mov
jno
sbb
jnp
ja
enter
jno
outsb
aaa
test
sbb
lea
add
jp
cmp
cmpsb
test
pop
sub
or
add
fstl
jcxz
movsb
jg
adc
scas
insb
inc
lock
add
pop
out
pop
icebp
addr16
lret
fnstenv
ffreep
jns
mov
movsl
push
pop
sbb
mov
jae
xor
loop
add
adc
dec
fldcw
test
dec
jmp
cmp
loop
ret
add
and
xchg
rcll
dec
into
sti
mov
fistpl
mov
loope
pop
in
aas
sti
test
jns
sub
lret
xchg
jge
lea
test
jmp
dec
popa
rorb
mov
jae
adc
push
lods
repnz
push
lea
repz
jl
mov
test
test
andb
pop
ret
iret
dec
cmp
pop
pop
pop
push
mov
or
inc
jg
sbb
fcoml
lret
sbb
iret
push
inc
sbb
pushf
xchg
mov
sbb
dec
xor
int3
pop
outsl
jbe
pop
fsubr
popa
sti
shll
and
and
xor
cltd
sub
pop
pop
mov
xchg
sub
mov
in
sbb
cmpsl
and
pop
mov
push
add
sbb
popa
jbe
dec
pop
ja
mov
shr
int3
cmp
pop
mov
stos
or
mov
int
push
xor
mov
cmpsb
xchg
mov
fstps
insl
mov
xchg
subl
insb
outsb
pop
mov
mov
shrb
adc
sbbb
xchg
xchg
jmp
ljmp
mov
scas
jl
mov
test
ds
jb
and
add
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
jmp
cmp
cmp
sub
stos
inc
fistl
sbb
adc
sbb
sub
and
dec
and
jbe,pn
add
aas
mov
fwait
in
dec
rolb
xchg
dec
mov
aam
push
mov
test
popf
mov
lahf
call
mov
cltd
cwtl
mov
mov
addr16
sub
push
mov
mov
mov
negl
cmp
mov
sbb
mov
enter
daa
cli
addr16
fldcw
movsb
mov
dec
mov
cmc
sbb
mov
out
lds
jecxz
imul
xor
pusha
mov
and
into
mov
adc
pop
addw
inc
loope
add
push
insl
and
jo
mov
cs
pushf
and
mov
inc
and
dec
xchg
xchg
arpl
shl
fidivl
jno
scas
xor
jne
iret
jae
xor
push
xlat
jge
movsb
mov
not
lods
popa
or
leave
lods
inc
sub
arpl
loope
mov
pushf
sub
mov
mov
fwait
pop
dec
mov
sub
lret
test
lahf
into
jecxz
add
xchg
out
mov
sub
popa
pop
popf
mov
andl
sub
adc
fmulp
movsl
add
sbb
cmp
inc
test
cld
icebp
int
ljmp
sbb
lods
lods
mov
or
add
ljmp
ljmp
mov
mov
or
push
mov
add
pop
xchg
push
in
mov
and
xchg
shlb
out
mov
cmp
cld
mov
xor
jne
and
dec
incl
sub
mov
test
js
ret
call
xor
mov
aam
adc
adc
mov
ret
inc
ss
or
mov
jl
data16
jb
test
lea
mov
mov
mov
push
into
psubb
fisubs
pusha
cmp
imul
gs
ja
pop
test
mov
and
mov
leave
fcompl
repnz
es
mov
faddl
fbstp
sub
ret
add
mov
cli
mov
ret
je
cwtl
pop
push
lds
jns
fstp
roll
and
lahf
add
lods
cmp
popa
mov
insb
in
cwtl
psrld
push
mov
aas
aas
jmp
pop
push
data16
push
push
insl
inc
pop
fsubrl
decb
jne
jl
xchg
test
imul
shl
test
cltd
outsb
rcr
dec
cmp
or
pop
inc
cmpb
lcall
mov
fs
arpl
or
ds
cmpb
pop
sbb
out
insb
scas
cld
mov
xor
push
es
loop
add
cli
xchg
ret
lret
mov
outsb
dec
cmp
movsl
sbb
mov
in
mov
cmpsb
stc
negl
xor
push
popf
lods
mov
or
movsb
mov
push
jmp
xor
dec
insb
add
jne
aas
stos
xchg
popf
scas
adc
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
jmp
inc
inc
in
loop
cmp
pop
pop
or
xor
jle
rcll
sbb
adc
sbb
sbb
push
pop
pop
inc
and
mov
jecxz
push
cmp
scas
hlt
je
push
dec
mov
mov
pop
add
mov
outsl
scas
fwait
dec
scas
loope
call
inc
xor
xchg
mov
jnp
nop
leave
adc
callw
cltd
or
jo
adc
into
and
sbb
je
fcoms
jmp
adc
mov
and
jbe
add
dec
insb
mov
and
add
stos
movsl
xchg
pop
mov
gs
push
or
xchg
lea
mov
dec
pushl
hlt
xchg
mov
mov
hlt
mov
pop
mov
mov
nop
mov
xorl
sub
out
lock
es
cs
ror
lret
nop
pop
stc
or
fsubrs
aas
enter
and
and
fwait
jge
js
test
sbb
je
movsb
push
adcl
pop
jno
lock
aas
int
push
notb
fs
fwait
mov
xchg
loop
out
jns
jno
loopew
and
push
lea
in
push
push
lcall
cmp
jle
int
insb
mov
and
repnz
lahf
fsubrl
lods
xlat
mov
xor
pop
aaa
movsb
sub
mul
addr16
cltd
mov
sbb
xchg
pop
xor
flds
mov
lds
add
stc
pop
inc
dec
or
scas
inc
mov
int3
shll
inc
xor
incl
inc
push
and
cmp
push
push
push
xchg
int3
repz
push
xchg
sahf
push
rorl
mov
push
mov
add
xlat
addr16
mov
enter
pushl
out
or
push
cmp
fidivrl
push
outsl
xchg
test
sbb
xchg
jge
fwait
rorl
fldenv
addr16
pop
mov
xor
dec
push
xchg
scas
xor
jae
lock
cmp
repnz
insl
fnsave
push
or
push
aam
mov
push
outsl
sar
adc
xchg
jo
mov
pop
xor
pop
bound
and
xchg
lock
lahf
hlt
lea
sti
int3
push
andb
test
les
sub
dec
or
mov
mov
add
pop
adc
push
cmp
jl
test
push
sbb
adc
cmpsb
xor
popa
inc
aam
jecxz
sbb
lds
sahf
je
fildl
fldl
fdivl
adc
pop
mov
js
movsb
mov
sbb
jnp
sarl
sub
sahf
adc
jno
test
or
xchg
push
cs
xlat
lds
push
cwtl
push
add
push
push
inc
shr
mov
hlt
sub
cmp
clc
inc
insl
cld
jp
push
aad
loope
push
mov
jmp
jmp
jns
insl
or
mov
cs
mov
and
push
pop
lods
jg
daa
jmp
fisubrs
aad
pushf
pop
pop
test
jns
add
lds
into
inc
cmp
mov
jmp
inc
mov
jb
jb
cmpsb
xchg
sbb
push
mov
mov
sbb
sbb
cmp
inc
sub
cmp
dec
add
cmp
pop
subb
outsb
mov
xor
xor
loop
push
out
xor
and
icebp
mov
inc
or
aad
xchg
mov
jle
mov
sbb
and
push
sti
and
xchg
xorl
outsb
cmpsl
sbb
fld
mov
push
lock
push
cmp
sbb
cld
mov
mov
xchg
rcrl
daa
aad
das
movsb
test
insl
sub
aam
dec
jmp
mov
insb
sbb
mov
inc
or
mov
or
les
fsubl
mov
icebp
mov
jae
hlt
mov
sbb
sbb
hlt
pop
pop
xor
pop
lahf
repnz
push
rorl
push
fstpl
push
sub
dec
cmpsb
call
dec
and
cmp
xchg
inc
cmp
adc
pop
in
jno
in
push
icebp
push
pop
out
dec
scas
dec
gs
cmp
mov
inc
mov
sbb
xchg
mov
xchg
sub
nop
mov
ljmp
xor
fisttps
imul
pop
inc
push
sti
jl
popf
scas
lock
pop
sbb
cmc
push
scas
ficoml
cli
mov
cmp
xlat
bound
xorb
xchg
mov
jnp
iret
pushf
push
ss
cmpsl
cld
or
pop
cmpsb
cld
mov
mov
cmp
std
cmc
jge
push
adc
push
call
je
std
mov
data16
addl
cmp
ret
es
jno
imul
lock
je
sbb
lods
xor
xchg
inc
push
leave
xchg
mull
inc
aam
test
jne
cmp
sbbb
clc
jo
add
aam
adc
lret
lret
adc
repz
iret
add
jno
testb
cmpb
out
and
repnz
cmpb
and
and
mov
dec
fcoms
or
mov
cmp
inc
mov
sub
cmp
sub
sub
cmpsl
mov
mov
mov
addr16
cwtl
outsl
std
push
adc
add
in
cwtl
jne
ds
inc
mov
mov
in
inc
ljmp
cmp
fisubl
mov
int3
and
cwtl
xor
and
mov
and
rcrb
mov
sahf
and
add
inc
or
or
mov
sahf
outsl
popa
pop
jp
mov
lret
add
adc
and
stos
pushl
mov
lcall
fcompl
sub
dec
outsb
idivb
xchg
sbb
jae
and
xchg
mov
arpl
int3
rcl
inc
dec
fs
dec
arpl
js
push
add
dec
pop
xchg
outsl
out
and
decl
jno
pushf
adc
cmp
inc
in
jbe
mov
adcb
shl
mov
sub
fucomp
mov
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
jmp
xor
fistpll
popf
jo
jae
stos
inc
lds
sbb
adc
sbb
push
daa
xchg
and
sbbb
test
inc
add
lret
inc
sti
nop
add
bound
dec
pop
das
pop
lcall
cmpsb
xchg
daa
pop
cltd
dec
sub
cmpsl
fldl2t
pop
ljmp
dec
jge
cmp
cs
jbe
jmp
mov
nop
cmp
mov
in
push
movsl
and
mov
mov
cwtl
jle
ds
shl
lods
aaa
jp,pn
pop
mov
jbe
out
mov
into
testl
xor
iret
push
subb
lahf
leave
xchg
je
ja
lods
sub
fs
and
mov
repnz
lcall
jg
stos
sahf
sbb
ds
dec
cld
mov
jae
pop
ljmp
les
push
subb
fdivs
dec
js
imul
add
cmp
push
jns
inc
ss
mov
test
or
cmp
xchg
hlt
les
fsubrs
jo
test
fdivl
xchg
test
mov
je
sub
cs
repz
lods
push
adc
pushf
in
mov
lret
mov
out
sub
cld
sbb
dec
pop
out
mov
sti
lods
test
xor
pop
mov
jne
push
ret
int3
push
lock
test
push
push
dec
push
xchg
stc
sub
dec
imul
mov
addb
mov
mov
cmp
push
cld
and
ljmp
add
mov
push
data16
je
mov
sahf
imul
scas
lret
pushf
cltd
mov
fcompl
sub
cmp
ret
testl
test
aaa
enter
mov
push
xchg
inc
sbb
cmpsl
aaa
push
cmp
jno
or
lahf
push
mov
scas
and
xchg
push
fs
out
les
fwait
xor
enter
adc
sahf
aam
pushl
pop
gs
arpl
jle
cmpb
setb
cmp
movsb
insl
dec
xor
fisubrl
sub
in
aam
cmp
adc
or
sub
push
cs
imul
push
inc
pop
gs
das
lret
jno
and
mov
or
lea
inc
cmp
ss
in
es
lea
pushf
dec
out
xor
scas
jbe
ds
pushf
pop
sti
xlat
pop
dec
fxch
cld
mov
fistpll
shr
loopne
pop
es
scas
mov
test
je
add
test
pop
into
jge
leave
dec
xchg
test
imul
icebp
dec
adc
loope
out
xchg
outsl
mov
jb
cld
dec
jnp
pop
in
sti
dec
pop
mov
mov
imul
subb
lock
xchg
pop
push
testl
les
mov
inc
cmp
les
jnp
pop
aaa
sub
xchg
pop
lds
enter
pop
and
add
inc
call
fs
fucomi
pop
pop
js
mov
cmp
push
or
popf
mov
popf
pop
bound
pop
adc
pop
aaa
xchg
lcall
xchg
push
dec
pop
cmc
xchg
popa
pop
pop
leave
mov
scas
inc
lahf
popf
jb
mov
and
je
and
out
pushf
decl
inc
and
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
jmp
jns
imul
pop
notl
mov
mov
sbb
pop
push
jmp
mov
leave
push
jle
xchg
shl
mov
push
sub
sbb
add
sub
aam
test
dec
and
fdivr
loopne
xchg
pop
dec
xchg
loopne
inc
sub
jne
ds
add
addr16
xor
sub
push
mov
sbb
xchg
enter
xchg
int
out
arpl
pusha
mov
loope
lods
fsubr
dec
loopne
les
pop
loope
dec
jl
ret
hlt
push
ja
fidivs
xor
pop
or
jecxz
stc
xor
lods
scas
dec
cmp
out
mov
repnz
int3
cltd
stc
lcall
dec
fs
mov
add
jmp
cmc
fcmovne
dec
aas
jg
gs
xor
push
dec
out
mov
sti
into
outsl
lds
push
mov
ficompl
sbb
movsl
mov
call
movsl
sub
cmp
lods
jnp
push
sbb
iret
lret
aam
inc
ret
idiv
orl
call
push
dec
push
sub
and
jne
insb
mov
mov
hlt
or
mov
cmpsb
outsl
add
or
in
add
arpl
orb
xchg
lret
inc
lcall
jge
andw
cld
cwtl
add
popa
out
scas
lret
push
mov
cmp
sahf
pop
sti
push
scas
cld
push
je
mov
out
and
dec
cwtl
mov
push
jl
andb
cmpsl
andb
push
arpl
push
pop
or
sbb
mov
xchg
cmp
jo
aad
dec
leave
inc
mov
testb
ret
xchg
loop
or
movsl
jl
and
cs
jae
jbe
xor
cmp
pop
dec
gs
hlt
or
jmp
popf
sub
sub
adc
xor
pushf
insl
jbe
jnp
fists
xchg
in
lcall
sbb
scas
sub
aaa
sbb
add
cmp
jle
adc
cltd
or
jle
shr
dec
add
pop
jg
add
inc
and
mov
sbbb
fidivl
clc
ss
cmp
jmp
mul
inc
in
sbb
sbb
popf
sbb
push
or
inc
mov
lahf
xchg
loopne
fwait
add
push
mov
movsl
xor
aam
hlt
aas
fsubl
xchg
mulb
mov
push
cmp
cld
jne
movsl
call
xchg
mov
xchg
jne
xor
jge
pop
ret
mov
xor
push
movsb
xchg
mov
aaa
add
jns
repnz
lods
xchg
je
pop
xchg
adc
test
out
ds
pusha
pusha
xchg
mov
into
jae
mov
add
std
cmp
les
push
fwait
push
pop
mov
jae
sbb
aaa
shlb
cltd
daa
mov
cld
mov
mov
shll
mov
adc
xchg
ss
hlt
mov
outsb
ret
clc
ja
fbld
ret
iret
cmpsl
std
mov
cmp
mov
bound
popl
adc
into
mov
jbe
scas
adc
out
xlat
jb
insl
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
jmp
ss
cs
push
sub
loop
adc
inc
mov
sbb
adc
sbb
mov
adc
daa
jmp
and
push
gs
testb
inc
xor
shll
push
mov
adc
cmp
xchg
lret
and
dec
mov
xor
cmpsl
sub
faddl
pop
ljmp
lret
shl
ss
jle
and
or
mov
jno
sti
xlat
arpl
pop
mov
and
clc
sub
dec
insl
ss
push
cld
out
inc
jg
sbb
cmp
pusha
push
adc
aas
cmp
sbb
pop
dec
and
pushf
xchg
push
movsl
jnp
lcall
out
shrd
adc
xchg
cmp
push
xchg
push
hlt
lcall
pop
jne
sbb
arpl
dec
les
sahf
mov
in
xor
sub
jae
xchg
jb
out
cs
repz
cmp
outsl
inc
xchg
push
sbb
or
xchg
xor
push
push
cmp
jmp
xor
adc
xor
pushf
jp
cmc
mov
mov
clc
and
add
cmp
inc
sub
fs
xchg
pop
push
inc
in
xchg
pcmpgtw
fsubl
push
cmp
sbb
outsl
adc
fmull
sub
add
enter
hlt
cmpsl
cmp
ss
test
jbe
and
xlat
sti
lcall
pusha
mov
negl
or
sti
jge
inc
sahf
xor
jl
sti
xor
cmp
xor
fsubrs
movsb
adc
inc
sub
aam
or
xchg
clc
sbb
sub
sti
mov
stos
and
sub
fdivrl
lret
push
scas
test
test
sbb
cmp
mov
lahf
call
pusha
js
gs
cmp
add
mov
out
inc
imul
xchg
sub
xor
jge
fisttpl
jbe
xor
popf
xor
addl
cmpsl
dec
jg
cmp
stc
cmp
mov
mov
lock
add
dec
pop
mov
call
dec
mov
stos
daa
ss
add
pop
jb
hlt
stos
mov
imul
ljmp
movsl
popa
and
or
mov
int3
fs
mov
movsb
jmp
insb
fdivrl
sbbl
dec
or
pop
mov
sbb
and
roll
or
mov
fs
outsb
jno
lods
xor
mov
int3
mov
add
rcrb
int3
andl
imul
pusha
shll
mov
ret
lret
mov
inc
icebp
pop
testb
mov
rcrl
into
cmp
push
and
outsl
mov
sub
mov
sub
sahf
and
es
xchg
xchg
aas
mov
and
stos
ret
or
movsb
adc
inc
test
dec
cmpsb
lret
or
xlat
mov
xchg
sbb
mov
add
mov
adcl
movl
in
cmp
mov
xor
sub
pop
int3
push
lret
sti
add
std
add
push
and
mov
inc
xchg
sub
add
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
fistpll
jne
sbb
sarl
mov
sbb
adc
sbb
add
lea
jnp
pop
cs
sbb
pop
cmp
inc
mov
inc
nop
cmp
fiadds
cwtl
jae
dec
dec
push
mov
addr16
mov
sbbl
int
fwait
pop
js
lock
adc
sub
xchg
iret
push
test
insl
aad
roll
xchg
popf
xchg
ret
and
leavew
mov
icebp
dec
fnstsw
mov
call
call
adc
in
pop
xchg
push
out
lea
push
mov
lock
and
add
xlat
push
sub
sbb
inc
ret
loopne
add
sub
pop
stc
xor
jl
add
in
aam
jnp
pop
idivl
mov
dec
aam
mov
mov
jmp
jbe
inc
imul
fldt
or
sub
push
imul
insb
fildl
mov
fmuls
into
mov
dec
in
repnz
xchg
sbb
js
gs
cmp
or
inc
mov
push
sub
pop
pop
xor
int
stos
cs
push
xchg
das
loope
test
xor
shlb
ret
xor
adc
pop
sub
mov
add
outsl
cmp
aas
cmc
cmp
clc
xor
xchg
xor
aam
mov
push
sahf
jmp
sar
rcrb
jle
push
psllq
clc
dec
jle
test
mov
sarb
dec
push
push
mov
add
cmp
add
in
clc
mov
aad
adc
push
fdivrl
and
in
mov
xor
xchg
les
test
xor
mov
xlat
cmp
pusha
fildl
test
push
mov
jns
jmp
or
aaa
jg
cmpsb
push
dec
std
dec
push
es
xor
sbb
mov
popa
inc
rorl
into
or
mov
sub
nop
push
in
pop
jbe
and
jnp
mov
xor
lods
mov
cs
xor
sar
add
dec
popa
fcoml
fwait
cmpsb
in
daa
cmpsb
imul
les
add
test
pop
les
jmp
push
and
je
pushf
add
xor
in
pop
pop
mov
jmp
mov
sbb
pop
rcr
aaa
push
dec
sahf
fs
and
movsl
adc
cmp
loope
mov
and
or
or
push
sti
jmp
shlb
imul
mov
xchg
jno
dec
lret
adc
inc
push
cwtl
xor
or
fnsave
xor
jl
jae
push
mov
and
outsl
dec
inc
add
fwait
int
add
jle
add
insb
dec
in
xor
fcoms
nop
jno
pop
pop
gs
xchg
add
cwtl
aaa
lea
dec
or
rol
rcll
jo
testb
testl
and
icebp
or
negl
mov
mov
push
fsubrs
sbb
or
ljmp
mov
push
inc
and
mov
push
mov
or
mov
add
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
and
jmp
sub
push
test
sbb
cltd
push
sbb
adc
sbb
mov
sar
sbb
test
fwait
ljmp
cmp
lret
mov
push
scas
jae
fidivs
sub
xchg
jl
out
adc
in
mov
fmul
sub
inc
and
addr16
bound
jnp
xorb
pop
into
xchg
cmp
insl
add
dec
in
xchg
shll
call
xchg
cmpsb
pop
mov
mov
and
and
lds
cltd
cmp
in
iret
int
dec
sub
test
mov
out
push
inc
jbe
addr16
dec
xchg
mov
test
push
cvtps2pd
insb
cs
xchg
popf
fcomps
push
mov
dec
dec
fmuls
nop
push
dec
int3
add
xorl
std
adc
out
mov
or
arpl
sbb
sub
mov
and
sbb
fwait
sbb
push
addb
sbb
and
outsl
dec
lock
sbb
inc
bnd
imul
adc
mov
mov
ljmp
sub
push
test
aaa
mov
insb
fimuls
testl
inc
push
loopne
push
vcvtpd2psx
ljmp
lea
push
cmpsb
in
repz
xlat
mov
cmp
mov
int3
pop
and
fsubrl
je
test
nop
jmp
or
add
push
test
int3
test
mov
and
cmp
sbb
test
out
or
dec
xchg
jg
gs
gs
das
xchg
push
int3
push
cld
int
lds
cmp
adc
imul
mov
or
jge
vphadddq
inc
jno
xchg
leave
enter
push
stc
test
cmp
mov
int
in
inc
mov
xchg
dec
popa
fistpll
in
add
push
bound
or
test
loop
push
mov
mov
inc
adc
sbb
loope
cwtl
jmp
loop
mov
cmp
jmp
es
ljmp
inc
xor
rcll
cmpsb
xor
lock
aaa
sbb
cmp
loope
testw
xor
push
out
aam
shll
mov
outsb
movb
shll
push
cmpsb
into
addr16
push
ret
pop
outsl
push
sarb
add
sbb
addr16
lock
ficompl
subb
jne
mov
inc
popa
stos
ljmp
loop
call
cmp
add
mov
mov
sub
cltd
xchg
call
aaa
inc
add
adc
imul
cmp
int
adc
xor
and
pushf
pop
adc
mov
loope
inc
push
sub
push
push
pushf
jno
pop
bound
out
pop
scas
cltd
dec
mov
inc
imul
in
ja
sbb
inc
sbb
sub
xchg
cmp
icebp
xor
or
fistpl
ret
pop
cmp
pop
add
pusha
and
rclb
fdiv
scas
and
arpl
push
xorb
push
neg
push
xor
add
mov
sub
or
movl
or
movl
sbbl
movl
add
mov
mov
movl
xor
div
imul
cmpl
mov
mov
movl
jmp
movl
je
pushl
push
push
push
push
pushl
pushl
call
negl
and
andl
not
sbb
adcl
mov
xor
movzbl
add
and
mov
subl
xor
sbbl
div
cmpl
mov
notl
mov
jmp
movl
jle
pushl
push
pushl
push
push
call
add
movl
xor
add
and
subl
add
sub
cmpl
mov
mov
mov
jmp
movl
je
pushl
push
call
adc
xor
sub
add
mov
mov
and
sub
mov
add
movl
movl
neg
movl
cmpl
not
mov
movl
mov
jmp
movl
jge
push
push
call
negl
mov
mov
sub
and
add
sbb
movzwl
adc
mov
and
add
xor
inc
xor
and
imul
mov
xor
add
adc
and
add
sub
incl
mov
movl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jb
push
pushl
push
pushl
pushl
call
sub
orl
mov
mov
add
mov
mov
sub
or
mov
mov
adc
mov
mov
sub
sub
or
mov
imul
mov
cmpl
notl
mov
notl
mov
jmp
movl
ja
push
push
push
pushl
push
pushl
pushl
call
add
add
negl
mov
sbb
mov
sbb
xor
mov
sub
mov
movzbl
sub
imul
cmpl
not
notl
jmp
movl
not
jne
pushl
call
mov
mov
or
orl
subl
sbb
add
mov
and
mov
xor
imul
cmpl
movl
movl
jmp
movl
movl
jge
call
or
negl
mov
mov
sbb
orl
add
or
mov
and
or
movl
mov
addl
xor
andl
jmp
pop
push
testl
fistl
mov
mov
sbb
js
lcall
xor
xor
and
pop
std
stos
les
in
ret
mov
push
cmp
dec
je
dec
leave
mov
das
mov
xchg
ljmp
xor
pop
push
sub
pop
cmc
push
insl
in
mov
lods
aaa
ficoml
clc
dec
lock
daa
pop
xor
stc
shl
adc
xor
fistps
out
inc
clc
inc
aas
out
fsub
loope
inc
inc
xchg
and
push
aas
js
cld
pop
push
jl
sub
cvtpi2ps
enter
and
adc
movsb
cs
push
sbb
clc
lret
or
inc
dec
adc
fisubl
lret
xor
push
push
out
sbb
and
cmp
push
or
sti
pop
outsb
stos
clc
bound
add
xorb
push
inc
lret
out
inc
push
mov
inc
mov
insb
and
add
dec
std
cmp
xchg
and
lea
xchg
and
mov
xor
in
or
call
int3
pop
push
xchg
pushf
or
ljmp
fisubs
xlat
pusha
and
push
xchg
iret
mov
and
mov
cli
sbb
insb
adc
push
pop
or
mov
and
lret
pop
test
clc
adc
gs
jmp
lahf
ja
mov
in
push
dec
out
inc
icebp
jle
push
and
jno
cmp
test
jge
mov
stos
and
addr16
and
mov
jg
adc
mov
xor
test
fimull
int
sub
pop
inc
repz
inc
jbe
std
jg
jne
lock
pusha
mov
dec
adc
jl
les
mov
jns
iret
in
and
movsb
dec
adc
iret
cmp
pop
not
fistps
leave
lods
popf
loope
sub
inc
inc
ret
or
shll
add
jne
jno
das
push
gs
inc
mov
inc
in
xchg
mov
dec
adc
cmc
adc
push
jmp
data16
fyl2xp1
in
sbb
push
lret
mov
xchg
push
mov
adc
and
pusha
sub
mov
mov
sarb
das
sub
cmp
clc
cmpsl
xchg
pop
sub
fmuls
xor
inc
lret
cmpsl
jp
lahf
mov
jmp
xor
push
pop
mov
sbb
push
xor
jae
stos
idivl
sub
pop
hlt
pop
cmpsl
mov
frstor
movsb
es
and
lahf
dec
leave
mov
sbb
mov
push
int3
or
adc
scas
inc
xchg
mov
es
add
mov
pop
data16
adc
mov
lcall
and
fcomi
mov
adcl
or
cld
mov
in
add
xor
mov
mov
cmpsb
loopne
xchg
sub
pop
push
pop
call
or
inc
rcrb
xor
pop
and
pushf
jns
cmp
shrl
pop
xor
xchg
rcll
pop
aad
mov
xor
repz
dec
pop
in
pusha
ljmp
push
add
in
ljmp
addr16
jl
fnstcw
adc
cmp
mov
mov
andl
lea
mov
add
mov
mov
and
movl
subl
movl
movl
andl
mov
cmpl
mov
mov
jmp
movl
je
push
pushl
push
pushl
call
not
dec
sub
inc
adc
and
movzwl
sub
mov
xor
mov
or
xor
add
subl
mov
or
add
xor
xor
or
adc
mov
mov
mov
sub
sub
movl
movl
adc
movl
mov
cmpl
movl
mov
mov
movl
jmp
mov
jae
pushl
pushl
push
push
push
call
mov
add
add
adcl
decl
addl
sbb
orl
mov
or
add
cmpl
movl
movl
jmp
movl
jl
pushl
call
adcl
xor
xor
add
mov
adcl
sbb
movzwl
or
adc
xor
cmpl
movl
mov
jmp
movl
jae
push
pushl
call
xor
or
adc
mov
sub
movzwl
sub
mov
sbbl
addl
adc
mov
sub
xor
mov
lea
cmpl
mov
mov
jmp
movl
jg
pushl
push
pushl
call
xor
mov
or
mov
add
xor
add
add
and
or
dec
sub
not
mov
movl
movl
cmpl
mov
mov
jmp
mov
jl
pushl
pushl
push
call
add
or
or
and
mov
sbb
and
add
mov
and
add
sub
imul
mov
sbb
mov
imul
xor
mov
xor
mov
mov
div
andl
sub
movzbl
sub
mov
xor
movl
cmpl
movl
movl
mov
mov
jmp
movl
jne
pushl
push
push
push
push
call
xor
dec
add
xorl
add
subl
sub
movl
movl
cmpl
mov
mov
movl
movl
jmp
mov
movl
jle
pushl
push
push
call
add
xorl
or
movl
or
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
call
dec
add
movl
sbb
and
subl
mov
xor
sbbl
div
orl
imul
sub
add
or
mov
addl
xor
xor
mov
div
xor
movzbl
and
mov
cmpl
mov
mov
mov
jmp
movl
jne
push
call
orl
or
adc
andl
subl
subl
add
mov
mov
sub
and
movl
sbbl
movl
neg
movl
subl
mov
mov
sub
add
shr
sbb
sub
cmpl
movl
movl
movl
jmp
mov
jl
push
push
push
call
orl
xor
sub
addl
adcl
sbbl
mov
subl
imul
or
mov
and
adc
mov
subl
sub
movl
mov
cmpl
mov
movl
movzwl
jmp
movl
jle
pushl
push
push
call
and
or
mov
add
and
adc
movl
cmpl
movl
mov
jmp
mov
mov
jbe
pushl
pushl
push
call
mov
adc
sub
mov
and
mov
and
sub
movzbl
adc
movl
mov
sbb
or
mov
or
sub
sub
mov
movzwl
sbb
movl
movl
mov
mov
sub
or
movl
movl
inc
movl
movl
adc
movl
mov
and
mov
and
add
cmpl
movl
movl
mov
mov
jmp
movl
jbe
push
push
pushl
call
andl
mov
or
xorl
subl
add
dec
mov
add
movzwl
xor
mov
subl
sub
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
pushl
call
movzbl
or
sbb
or
xor
sbb
or
xorl
movzwl
xor
mov
mov
imul
imul
and
mov
or
cmpl
mov
mov
not
jmp
movl
jl
push
push
pushl
push
call
or
mov
xor
mov
andl
or
mov
mov
and
mov
or
mov
add
xor
add
add
mov
mov
movl
lea
orl
push
xorl
call
adc
mov
adc
mov
sub
jmp
scas
dec
jb
pop
and
push
popa
xchg
mov
and
sbb
test
cli
fistpll
andl
les
dec
insl
hlt
push
repnz
or
inc
nop
lret
jbe
pop
inc
pop
rcrl
mov
mov
lret
out
or
inc
xor
aas
cmp
stos
sbb
nop
icebp
loopne
stos
scas
cli
rcll
or
adc
imul
adc
bound
add
adc
sub
mov
push
inc
sbb
test
rorl
sahf
lods
int
rcll
sti
out
nop
adc
mov
data16
adc
popf
sub
sbb
add
fldenv
pushf
clc
jp
lret
lds
sub
fsts
mov
inc
leave
in
arpl
movsl
sub
dec
ljmp
push
dec
mov
imul
movsl
cli
in
aam
ficomps
les
sub
sbb
cmp
push
addl
mov
iret
mov
push
cmc
stos
fcomi
mov
lods
testl
jp
xlat
int
mov
mov
or
clc
mov
sub
push
pop
mov
les
in
inc
mov
inc
aad
ja
dec
mov
mov
jecxz
xchg
dec
xor
lock
fcmovnu
pop
jmp
and
js
adc
push
push
add
jne
jb
push
call
pop
xchg
push
xchg
mov
scas
scas
add
lret
sub
dec
insl
mov
inc
in
stc
pop
jge
mov
sbb
movsl
or
sbb
daa
stc
mov
fisubl
add
push
sbb
ret
pusha
mov
mov
mov
jmp
pop
pop
or
fxch
mov
add
cmp
jae
int
js
push
add
sbbb
xor
push
push
js
inc
push
rcr
std
repz
adc
jbe
imul
add
sbb
cs
out
jle
cmp
jg
sub
mov
loop
xlat
das
xor
jmp
xlat
add
shrl
sub
or
mov
ret
sbb
loop
insb
cmpl
xchg
sbb
lret
pop
arpl
cmp
test
enter
sbb
cmp
movsb
xchg
push
mov
sub
popa
mov
cmp
outsl
jecxz
aad
lds
in
add
mov
adc
and
add
sub
pop
inc
xlat
popf
jb
dec
cli
push
jg
cwtl
mov
dec
out
lea
add
dec
push
mov
call
pushf
arpl
adcb
in
rol
add
shll
sub
out
mov
pop
movsl
pop
out
cmpsl
push
pop
sbb
or
fnstenv
xor
or
aaa
mov
fs
and
fidivs
fldt
sbb
xchg
adc
loop
js
dec
inc
sub
xchg
aas
out
loope
stos
jo
xchg
enter
pop
and
fsubrl
push
fsubl
js
inc
inc
add
fidivrl
mov
xor
xor
xchg
inc
aad
pop
pushf
push
nop
cli
adc
adc
xchg
lods
mov
shlb
addb
lret
add
jnp
add
movl
jmp
movl
movl
jg
push
push
call
sub
add
xor
mov
and
or
add
sub
add
sbb
and
sub
xor
mov
andl
div
not
xor
add
mov
movl
dec
movl
movl
and
movl
cmpl
not
mov
jmp
movl
jae
push
call
not
orl
dec
sub
xor
movl
movl
mov
mov
sub
xor
movl
sbbl
movl
sub
movl
xorl
movl
movl
movl
mov
mov
cmpl
mov
not
not
jmp
movl
movl
jge
push
call
or
sub
xor
xor
add
add
add
and
mov
or
cmpl
mov
mov
jmp
movl
ja
pushl
push
pushl
pushl
pushl
push
push
call
mov
adc
mov
movzbl
xor
and
xor
or
xor
add
sub
xor
mov
mov
adc
mov
and
sbb
sub
sub
cmpl
movzwl
mov
jmp
mov
jg
push
call
mov
mov
sbb
adc
dec
sbbl
imul
mov
cmpl
movl
mov
mov
jmp
movl
jle
pushl
call
adc
mov
add
sub
addl
xor
add
sbb
mov
adc
lea
addl
mov
and
mov
adc
mov
mov
mov
xor
mov
xor
add
andl
mov
xor
lea
add
and
cmpl
movl
mov
movl
mov
jmp
movl
jge
push
push
call
and
or
xorl
add
mov
orl
sub
add
mov
movl
jmp
fidivrs
cli
sbb
dec
push
aam
mov
and
sbb
shr
sbb
shrb
std
fdivrs
out
push
push
pop
jns
int3
mov
add
lock
imul
inc
xchg
outsb
das
scas
add
out
push
cmp
cs
xchg
push
jmp
hlt
repnz
xchg
adc
pop
aad
mov
jbe
ret
cmpsb
gs
outsb
push
mov
enter
shlb
push
inc
lcall
sbb
lcall
in
int
xor
jge
out
std
add
fstl
jp
dec
add
les
popf
adc
jg
iret
jecxz
dec
in
mov
fisttpl
jl
lret
push
mov
adc
mov
stos
fcmovne
mov
loop
and
inc
xchg
ftst
rcrb
xchg
xor
mov
sbb
sbb
mov
and
int
mov
cs
mov
or
xchg
cvttps2pi
cli
test
jecxz
mov
enter
and
jnp
mov
fisubrs
mov
xchg
cmp
negl
mov
ret
es
mov
inc
cli
push
sbb
movsl
sahf
xor
std
and
sti
sub
ret
dec
call
jmp
sbb
push
xchg
ja
aad
into
push
pop
adc
test
lods
mov
xlat
or
push
sbb
mov
pop
push
imul
or
jp
jle
cmpsl
fisubs
push
addr16
shrl
pop
out
xorl
xor
imul
push
jns
pop
arpl
push
or
mov
cltd
ds
add
xchg
xor
adc
dec
rorl
jnp
sarb
fsts
jne
xchg
fsubr
fwait
mov
xchg
fisubrs
mov
mov
or
in
stc
add
sbb
rcrl
cmp
lret
mov
push
fs
adcl
outsb
cltd
pop
jb
frndint
lret
xchg
mov
pushf
mov
jae
push
insl
sbb
or
pop
or
repnz
and
in
ljmp
outsb
ljmp
xor
mov
xchg
xor
dec
scas
xor
es
cltd
jg
aad
clc
jns
pusha
inc
mov
sub
dec
out
mov
lods
mov
nop
sbb
sub
ret
out
cmp
xchg
dec
mov
aad
jnp
lods
mov
push
cmp
repnz
aad
fbld
std
pop
xchg
icebp
pop
clc
jle
cmpsb
mov
imul
adc
adc
lods
push
or
adc
or
mov
test
fisubl
loop
mov
sub
mov
jne
cmc
rclb
mov
xchg
test
push
ljmp
jecxz
out
bound
pop
inc
repz
xchg
mov
cltd
mov
mov
into
cmc
addr16
movsl
not
test
sub
mul
inc
cmp
int
cmpsl
std
out
ljmp
roll
subl
cmp
pusha
js
popa
jle
mov
test
int
add
dec
fucomi
fs
xor
inc
sub
sbb
lcall
call
test
jns
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
movsb
add
sub
movsb
jp
int3
push
stos
testb
lea
sbb
adc
sbb
push
shlb
aaa
test
test
xchg
pop
jno
jne
jge
pushf
pop
jmp
pop
and
mov
jne
negl
sbb
negb
lods
nop
sti
or
cmc
int
shl
cmp
cmc
outsb
repz
loope
movups
xor
sub
out
push
sahf
mov
bound
dec
vmwrite
inc
iret
lock
adc
cmc
cmc
jbe
lcall
cmp
inc
adc
stos
xlat
int
cmp
test
xchg
xchg
filds
dec
mov
cmpsb
mov
dec
rol
mov
cmp
sahf
cmpb
in
add
pop
andb
scas
decb
stc
cltd
mov
add
fadd
jmp
mov
lods
lods
add
or
sub
test
cmpsl
cmp
or
sbb
data16
or
cltd
ja
pop
shlb
sbb
pusha
push
arpl
mov
pop
xchg
sub
test
xor
cmp
push
adc
lods
sbb
mov
jge
mov
gs
jne
push
rol
ret
fimull
or
pop
push
mov
fisubrl
xor
cmp
push
icebp
pop
fwait
sbb
jbe
pusha
mov
cld
in
bound
aas
pop
popa
cs
cmp
cltd
dec
pop
mov
fiadds
insl
popf
mov
adc
sbb
xchg
xchg
pop
mov
aad
insb
mov
lret
lret
dec
stos
enter
incb
and
subb
cld
adc
adc
cmp
or
inc
leave
addr16
or
lds
faddl
or
mov
dec
cmp
aad
fwait
cli
data16
push
addb
cmp
or
in
scas
lret
mov
xchg
pop
mov
rorl
jae
lret
lds
xor
xor
pop
and
aam
inc
fisttpll
add
stos
sti
inc
inc
imul
mov
jbe
dec
inc
lods
adc
mov
data16
inc
das
aas
ds
aam
jno
inc
stc
xor
nop
xor
xchg
or
lock
sub
lret
fists
iret
fmul
mov
cli
mov
mov
pop
imul
push
ret
movsl
xchg
pop
aam
fsubl
fisttps
fyl2x
xor
pusha
xchg
in
ljmp
or
lds
sub
popa
jns
cmp
inc
jp
leave
xchg
daa
popa
adc
ret
jbe
push
or
stos
mov
jno
ret
mov
inc
sub
adc
add
cmp
and
adc
push
sub
mov
adcl
cwtl
sub
push
or
mov
lcall
call
movsb
fdivr
cmp
call
sub
sbb
mov
andl
mov
and
pop
in
mov
mov
arpl
pusha
fidivrs
out
xorl
sub
in
test
inc
mov
xchg
imul
pop
mov
out
fwait
dec
mov
sahf
ja
ret
in
push
lret
aaa
inc
flds
xchg
orb
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
jmp
loopne
add
sbb
fcomps
pop
orb
xchg
sbb
adc
sbb
div
arpl
jno
ficoml
cli
test
and
cmove
mov
fs
mov
sbb
push
lret
inc
rclb
dec
xchg
repz
js
sti
cld
push
pop
scas
addr16
pusha
lret
xchg
dec
jle
in
mov
stos
les
jbe
jle
jl
in
inc
push
sti
or
xorb
xor
and
xchg
mov
cmp
leave
cmpsl
mov
inc
mov
push
ljmp
cwtl
ret
movsb
in
fwait
jecxz
xchg
mov
xor
fadd
lds
pop
mov
lods
cmp
mov
xor
lahf
les
aaa
pop
shll
inc
jl
cmp
in
shrl
pop
jbe
cmp
mov
sbb
jge
jmp
leave
cmp
js
jle
scas
mov
mov
add
xor
jl
cmc
jns
cmc
push
hlt
xchg
inc
cmp
sub
cli
add
mov
cltd
leave
dec
adc
les
adc
into
cmpl
mov
pop
call
mov
mov
push
adc
dec
inc
insb
mov
add
pop
sbb
lea
dec
mov
xchg
jbe,pn
xlat
jle
dec
inc
popf
cwtl
xchg
mov
pop
stc
pop
mov
push
mov
outsb
rorl
mov
dec
xor
jae
or
movsl
or
inc
jmp
rclb
out
ret
jle
enter
sbb
out
popa
rcrb
adc
jp
movsb
test
push
cmpsb
fcompl
out
jo
stc
imul
fsubrl
pop
add
mov
hlt
jae
jo
dec
shll
lds
fs
je
shll
ret
add
and
inc
push
push
xor
mov
fdivs
mov
scas
fnsave
rcrl
jecxz
pusha
cmp
jbe
and
or
sub
mov
cmpsb
mov
dec
or
loope
or
jno
mov
fimull
inc
and
adc
jnp
add
sub
mov
jo
push
cmp
adc
mov
out
jbe
int3
lret
fwait
xor
cmp
cwtl
adc
and
adc
or
cld
pop
sub
arpl
and
nop
xlat
cltd
movb
jl
loopne
and
mov
std
pop
adc
scas
sbb
cmp
arpl
lds
cmp
add
xchg
push
adc
ret
and
xchg
add
arpl
xchg
movsl
iret
fs
int
not
and
jle
testl
arpl
stos
popa
sti
jg
sarb
out
mov
or
nop
add
jmp
enter
scas
lea
pop
or
in
xor
addr16
pop
fistps
jg
xchg
bound
sbb
push
shlb
mov
mov
jle
jl
add
mov
cld
or
xchg
jo
jecxz
stc
lock
push
repz
pop
jl
in
sbb
xor
push
xchg
arpl
adc
jge
xchg
js
pop
ret
push
in
or
fdiv
aad
mov
test
or
xlat
mov
loopne
pop
ss
inc
jno
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
jmp
adc
pop
out
loop
loope
add
movsl
mov
and
sbb
js
loope,pt
xchg
sub
ret
outsb
stos
xchg
inc
stc
adc
cltd
and
mov
in
rcrl
cmp
push
mov
mov
adc
xchg
sub
push
jecxz
out
fstl
push
in
cmp
mov
std
inc
or
clc
insl
addr16
jb
jbe
cmpsb
shr
sub
adc
and
adc
sti
notl
fsubrs
out
lods
inc
cmpb
and
xchg
ja
mov
and
pop
test
mov
mov
jle
mov
leave
pop
cwtl
jns
sub
cs
add
mov
xor
mov
jno
mov
xchg
jno
add
pop
cmc
arpl
into
cmp
sbb
dec
adc
lods
sti
mov
jl
in
jo
add
lret
hlt
rcrb
pusha
adc
aad
lret
sub
xchg
xchg
push
push
xchg
push
sti
xchg
mov
sbb
loope
lret
sub
adc
imul
or
addl
push
adc
xor
data16
idivl
aam
testl
push
ret
testl
cli
bound
xchg
bound
jecxz
cmp
cld
repz
insb
imul
rorl
push
pop
in
lret
and
push
xor
push
jb
cmp
clc
inc
jge
pop
mov
dec
test
jnp
dec
add
pop
cmp
mov
fiadds
sbb
mov
mov
ret
std
adc
mov
lods
xchg
rorl
push
pop
or
aas
pop
ret
or
mov
mov
fadd
sbb
fidivrs
jb
outsb
jmp
mov
imul
mov
stc
xchg
xlat
push
and
int3
jnp
loopne
gs
and
pop
jnp
mov
out
imul
andl
les
adc
enter
gs
cmp
or
xor
fsubl
and
lret
adc
sbb
fcomps
pop
in
je
faddl
mov
ja
shrb
mov
push
lock
fsubl
out
add
jnp
sti
es
sbb
lods
ljmp
sub
sbb
sti
call
nop
adc
and
aas
mov
iret
shl
xlat
mov
push
clc
insb
inc
push
mov
mov
pop
adc
mov
lods
push
data16
cmp
nop
ljmp
mov
sub
addr16
dec
nop
jne
jle
cs
fbld
xor
jb
sbb
push
mov
lret
dec
add
mov
scas
ret
frstor
ljmp
scas
push
push
inc
inc
jg
adc
push
shll
pop
jmp
repz
aad
cmpsl
repnz
push
mov
lret
sbb
mov
sahf
push
dec
leave
into
mov
ret
mov
jmp
xchg
je
jne
movl
movsl
add
jno
nop
test
retw
and
sbb
mov
scas
mov
sbb
shr
or
add
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
mov
xor
sub
jmp
and
push
sbb
adc
sbb
int3
sahf
outsb
jmp
sbb
ficoms
inc
pop
test
add
jecxz
pop
lcall
mov
adc
xor
jae
insl
pop
stos
loopne
dec
mov
push
call
cwtl
xlat
cmpsl
pop
out
dec
sti
and
pop
ja
out
fbstp
ja
dec
mov
leave
popa
xchg
mov
pop
adc
movsb
shll
mov
js
jne
loope
cmp
repnz
cli
jge
pop
sbb
stos
fstp
xlat
fsubp
std
push
dec
test
mov
arpl
jecxz
inc
mov
ret
mov
mov
xchg
jbe
sar
lcall
ljmp
notb
daa
in
ret
lret
imul
push
xchg
test
cmp
iret
cli
or
pop
mov
cmc
dec
jns
shl
mul
inc
mov
aas
lds
and
xor
dec
mov
hlt
into
mov
imul
leave
cmp
enter
loop
incl
add
cmp
push
or
mov
xlat
dec
in
cmp
sbb
push
rorb
out
rol
loop
sahf
push
sub
cmp
mov
xchg
xchg
in
or
inc
xor
bound
or
test
xchg
mov
push
sub
std
mov
lcall
stos
sbb
cmp
fldenv
shrb
mov
out
addr16
jo
mov
decb
mov
sti
lret
fs
and
push
in
mov
xchg
pusha
dec
pop
pop
mov
out
cli
pop
sub
pusha
leave
sbb
mov
xchg
in
out
pop
adc
xchg
inc
mov
shlb
cmpsl
pop
std
adc
inc
sbbl
les
and
repnz
cs
std
xchg
mov
sbb
inc
je
xchg
lds
xor
aad
inc
push
in
gs
mov
inc
push
or
dec
lahf
dec
bound
mov
pop
pushf
pop
or
push
sub
inc
dec
or
cmp
lret
rorb
mov
fs
rolb
xchg
pop
or
enter
in
rclb
testl
cmp
pop
icebp
cmp
xchg
mov
xchg
notb
push
mov
fdivs
push
aam
out
mov
inc
stc
imul
mov
pop
push
int3
bound
pop
push
movsb
lea
aam
mov
stc
loope
push
dec
adc
cmp
iret
lds
scas
xor
dec
adc
imul
and
ja
dec
icebp
roll
stos
fdivrp
scas
cmp
es
jecxz,pt
loope
divl
or
call
je
dec
call
outsb
imul
or
dec
cmp
cwtl
and
adc
add
das
jbe
xor
pop
cmp
and
cmpsb
xor
xchg
popa
stos
in
stc
mov
cmp
lods
test
divb
divb
sub
mov
ret
out
imul
cmp
daa
and
repnz
imul
jnp
nop
sahf
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
jb
adc
or
xor
shll
mov
push
sbb
adc
sbb
icebp
or
or
and
ret
fbld
cltd
dec
std
dec
xor
add
insl
pop
fimuls
scas
xchg
and
and
sar
ljmp
mov
jp
fldcw
sub
into
bnd
and
fbstp
mov
jae
push
jne
fcoml
popa
pop
pop
push
ljmp
insl
and
jb
jae
inc
fwait
lahf
sub
push
insl
mov
out
test
mov
mov
mov
or
jmp
cmp
xchg
adc
shll
lret
loope
fimuls
movsb
sub
leave
fwait
leave
rcr
insb
sahf
iret
inc
add
jo
pop
xlat
nop
xchg
mov
jle
and
fwait
adc
adc
sub
dec
ret
push
shrl
mov
cmpsb
mov
xlat
stos
out
mov
mov
stc
xchg
adc
pop
pop
dec
mov
outsb
add
shlb
dec
imul
inc
xorl
dec
dec
xchg
xchg
xchg
xor
aam
push
and
lcall
fstl
adc
loopne,pn
jno
mov
xchg
ret
daa
iret
aaa
xor
or
xchg
mov
or
adcb
dec
pop
push
pop
jae
inc
xchg
aad
fisubrl
mov
cmpsl
lods
std
mov
bound
jmp
or
jecxz
nop
jecxz
gs
sbb
cmp
inc
xchg
jne
dec
sub
push
int3
ljmp
idivl
dec
mov
out
xchg
sti
lcall
cs
movsb
cs
xor
xor
nop
cmc
xor
add
or
pop
and
in
lahf
fs
enter
mov
mov
sub
fstpl
popa
mov
xchg
and
arpl
gs
mov
in
xor
mov
das
fs
push
pop
xor
negl
movsl
or
icebp
mov
sub
sbb
jp
xchg
mov
sub
sub
and
repnz
lods
cmp
test
pop
mul
adc
insl
stos
dec
ret
push
add
mov
sbb
dec
dec
aaa
lock
movsb
jp
in
dec
dec
pop
add
cmp
jne
add
xchg
mov
aaa
xchg
sub
push
mov
push
out
sahf
insl
cld
inc
xor
loop
add
daa
aaa
mov
add
into
sub
jecxz
cmpl
and
inc
test
aad
lods
xor
pushf
mov
int3
popf
inc
or
fdivrs
out
imul
jnp
ror
es
xchg
in
test
nop
lods
mov
pop
repz
inc
and
lea
in
fucom
push
sbb
lret
pop
cmpsb
mov
sbb
pop
xor
push
inc
aam
iret
in
sbb
push
aam
pop
pop
mov
jb
imul
mov
dec
and
cmc
cmp
and
add
sahf
sub
cmc
testl
outsl
mov
andl
mov
dec
cmc
dec
pop
cltd
mov
pop
stos
js
ds
lods
or
popf
inc
and
mov
ret
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
jmp
add
jp
add
and
imul
and
sbb
movsl
xor
aas
sbb
test
movl
add
into
fcompl
inc
enter
cmc
sar
mov
xchg
jns
add
sbb
fldl
sub
imul
dec
pop
push
insb
pusha
xlat
pop
dec
inc
adc
sub
inc
xor
cwtl
jle
rolb
push
loope
out
jp
and
repz
pusha
popf
mov
push
xor
and
xchg
nop
add
and
mov
loop
inc
mov
adc
xor
mov
cld
jno
push
sub
sti
es
add
adc
hlt
test
in
scas
idiv
jg
orl
repz
dec
push
cmc
mov
stc
xor
push
cli
fwait
cli
jp
sub
mov
lods
mov
aas
inc
and
and
fs
jbe
jns
jge
stos
mov
cmp
mov
or
clc
cltd
inc
jmp
mov
jecxz,pt
aaa
aaa
pop
dec
sarb
xchg
xchg
jl
pop
lahf
adcb
outsl
lods
fcmovnbe
and
repnz
packssdw
sub
shll
dec
or
jp
ror
and
test
mov
movsl
pop
sub
test
test
inc
leave
ret
mov
imul
adc
lds
cltd
outsb
push
clc
popa
and
xchg
sub
fistl
leave
or
mov
jo
add
jecxz
and
mov
nop
mov
icebp
push
outsb
lahf
fnstcw
insl
ljmp
mov
push
sub
stos
and
lret
sbb
jge
dec
pop
or
test
outsl
cli
lcall
incb
jp
mov
push
into
je
flds
xchg
ret
sbb
sbb
push
fdivrs
in
mov
out
movsb
out
fmuls
mov
cld
jo
xor
push
mov
daa
into
fcoms
dec
sbb
adc
jp
xor
or
push
xor
xor
inc
xor
mov
stos
pop
jmp
mov
and
int
jp
xchg
inc
jo
outsl
jp
iret
xor
sbbl
mov
jl
push
lret
mov
push
cmpsl
xor
jle
idivl
mov
xchg
lock
inc
or
icebp
ja
push
ret
loopne
movsl
fcoms
or
les
mov
outsl
dec
pop
sbb
xchg
mov
rcrb
xchg
add
push
and
inc
sub
es
in
lods
mov
gs
sub
pop
in
xor
fwait
xor
xchg
insb
out
inc
rcl
mov
inc
xchg
mov
dec
xor
hlt
push
cs
xchg
xchg
dec
ja
inc
cltd
xor
out
ss
jge
add
xchg
jne
dec
pop
add
and
out
pop
add
loope
inc
hlt
fnstcw
xor
loope
pop
and
mov
add
mov
out
test
mov
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
jmp
loopne
xchg
es
in
jg
jo
arpl
sbb
adc
sbb
les
loop,pn
xchg
iret
xchg
std
inc
push
pop
js
pusha
adc
xchg
or
das
mov
fs
mov
ja
jo
aam
shlb
dec
mov
sbb
xor
ds
inc
lret
dec
xchg
in
push
cmpsb
or
xlat
jecxz
pop
mov
ss
pop
mov
pop
add
adc
push
lea
mov
xchg
pop
xchg
mov
jno
paddb
mov
sub
lcall
mov
lock
popf
iret
and
and
lcall
fwait
and
popf
sti
inc
push
stos
ljmp
mov
ficoms
arpl
mov
sub
mov
dec
fwait
and
push
xchg
cmp
cs
pop
mov
mov
shll
adc
mov
movsb
stos
or
jo
add
test
test
ror
xchg
repnz
sti
xchg
jo
arpl
out
ror
jmp
int
imul
pop
lods
sbb
rcl
cmp
int3
pop
lahf
je
inc
sbb
adc
dec
ss
mov
mov
popf
mov
and
daa
inc
sbb
jmp
mov
and
out
adc
les
shlb
andl
and
mulb
add
icebp
loopne
sbb
addr16
enter
dec
xchg
xchg
push
or
mov
das
or
pop
mov
loopne
add
loopne
stc
pop
mov
jmp
mov
mov
int3
lret
add
xorb
adc
bound
loopne
sub
lret
dec
fidivs
or
mov
in
inc
pop
xor
sub
ror
stos
add
sub
idiv
out
cmpsl
imull
mov
scas
sbb
das
pop
inc
cmp
or
and
inc
loop
sbb
mov
add
fucomp
and
shll
xchg
das
pop
enter
dec
shll
add
mov
lods
jge
mov
inc
jb
inc
sarb
sub
popf
mov
rcr
testl
xor
inc
mov
ljmp
xorl
adc
shlb
and
imul
sbb
add
mov
test
lods
sub
fnstcw
lods
adc
imul
xlat
icebp
add
mull
stos
mov
mov
clc
mov
push
in
cmc
fidivrs
xor
leave
dec
out
add
sub
leave
hlt
adc
in
popa
popf
xlat
inc
adc
jae
xchg
mov
adc
mov
lods
fmul
adc
hlt
mov
jp
insl
jmp
enter
out
dec
pop
dec
sbb
ret
shlb
fwait
clc
push
dec
push
sarb
cmp
pop
mov
mov
inc
mov
loope
push
clc
aaa
insb
or
jne
add
enter
sub
insb
jnp
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
pop
scas
push
sub
push
ja
fstpt
jnp
jle
pop
push
sbb
adc
sbb
inc
es
sub
imul
mov
jmp
addl
fwait
adc
aas
pop
pop
sbb
cmp
pop
ljmp
imul
daa
push
push
jo
mov
daa
xchg
into
imul
idiv
mov
mov
cli
in
push
cmc
shlb
imul
popf
insb
jecxz
push
mov
jnp
in
add
push
dec
adc
aad
xchg
inc
add
mov
lock
xor
xor
pop
mov
outsl
push
mov
test
rol
mov
jg
pop
mov
xchg
dec
mov
into
jg
aam
arpl
push
jmp
xchg
mov
fadds
jge
aas
stos
mov
mov
stc
cmp
dec
sbb
dec
stos
shrl
loopne
insl
inc
pop
and
lahf
in
mov
mov
je
or
shrl
jp
ret
inc
xchg
cmp
xlat
sub
pop
inc
popa
xor
or
add
xlat
lret
iret
push
fadd
loope
scas
cld
mov
and
sbbb
cli
dec
add
inc
adc
mov
xor
dec
xor
mov
imul
sub
push
imul
sbb
filds
push
xchg
stos
nop
adc
lcall
jg
or
push
lock
mov
lods
daa
loop
mov
adc
cli
daa
adc
int
mov
dec
sbb
xchg
lea
clc
jle
arpl
cltd
fmuls
ss
pop
xchg
addr16
sub
mov
mov
mov
das
movsb
and
jle
fwait
das
xor
pop
mov
add
xchg
jnp
and
leave
mov
loopne
mov
test
insb
rcll
mov
adc
or
push
test
inc
adc
bound
adcl
mov
shll
call
jno
clc
mov
testb
pop
or
mov
cld
jns
outsb
pushf
pop
leave
and
out
loop
cli
push
cmovb
add
das
mov
mov
jb
int
dec
sub
adc
jae
pop
in
scas
out
mov
outsl
rorl
fiadds
and
add
jbe
add
imul
rolb
xchg
push
pusha
add
and
lea
jge
push
outsl
in
push
push
test
adcb
cmp
lods
enter
jo
pop
movsl
xchg
hlt
add
lret
into
push
std
popa
xchg
out
pusha
nop
adc
dec
sbb
fdivp
pop
push
fisubs
mov
inc
imul
dec
es
lret
hlt
inc
mov
xchg
dec
jg
ds
mov
cmp
push
shlb
andb
shlb
fwait
inc
dec
dec
fcoms
jb
cmp
in
loope
nop
mov
int
cwtl
add
dec
outsb
inc
aam
stc
sub
add
rolb
nop
mov
std
xchg
dec
out
push
and
xchg
cmp
int
call
fidivs
add
in
sub
inc
imul
call
add
stos
cmpsb
decl
lea
test
incl
lret
call
test
std
decl
aam
add
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
jmp
shrl
into
and
fwait
outsb
mov
xor
jl
push
push
sbb
adc
sbb
imul
les
pop
cmovnp
cmc
mov
add
stos
outsb
mov
xor
dec
sub
and
mov
loope
sar
pusha
aas
in
sub
sub
jg
jno
test
rolb
pusha
sbb
add
mov
arpl
sbb
inc
bswap
pushf
adc
dec
jl
or
xlat
ljmp
pusha
pop
pop
cmpsb
cmp
cmp
push
out
imul
pop
jo
adc
adc
xchg
mov
jle
xor
test
xchg
shll
cmc
cmp
sarl
stos
test
inc
loop
push
or
outsb
insl
pop
add
pop
pop
or
shrl
and
push
cmp
dec
sub
sysexit
imul
add
pop
mov
sub
pop
adc
inc
pop
repz
repnz
mov
add
mov
pop
stc
jae
mov
iret
mov
bound
pop
dec
fcomps
pop
jecxz
and
push
test
jge
test
xor
or
aam
call
loop
cmp
mov
bound
iret
sbb
out
mov
enter
or
mov
push
xchg
push
or
mov
je
jmp
filds
out
sub
inc
loopne
mov
pop
dec
and
sub
xchg
andl
inc
jp
out
adc
cltd
aas
adc
add
inc
jo
stc
and
push
xor
mov
cmp
adc
mov
loop
iret
out
daa
jecxz
xchg
cmp
insb
cmp
xor
popa
sub
loop
inc
cmpsl
pop
adc
xchg
popa
dec
mov
out
out
cld
popa
push
ja
mov
push
and
stos
push
dec
cmp
mov
push
mov
sti
mov
aad
add
dec
popf
cmp
push
sti
pop
in
and
imul
gs
popa
cmp
loope
aas
xlat
dec
or
ja
push
mov
into
xchg
pop
adc
cmp
sub
fidivs
push
movsb
imul
xchg
daa
xor
scas
cmp
hlt
jg
popa
or
cs
push
neg
loop
repnz
cmp
das
add
cmp
loope
cmp
mov
loopne
adc
data16
loopne
rclb
test
sbb
inc
sahf
xchg
adc
outsb
les
pusha
cmp
xchg
xchg
sub
cwtl
sbb
push
and
jnp
mov
mov
in
and
lock
repnz
pusha
jbe
fdivs
std
add
movl
cmc
push
cltd
adc
push
clc
cs
lods
inc
lret
outsb
or
push
sbb
mov
or
aas
add
and
lods
inc
adc
xor
rcll
mov
push
cwtl
add
std
cltd
inc
pop
and
std
pmullw
push
jnp
in
pusha
cld
fs
int3
ljmp
xchg
loop
jmp
int3
cmp
pop
fcoms
ja
ljmp
mov
int
stos
loopne
jno
push
int3
aad
shrl
aaa
imul
mov
cwtl
mov
mov
clc
and
pop
imul
push
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
jmp
arpl
bound
aam
push
jle
fldcw
sbb
adc
sbb
cmpsb
mov
mov
imul
in
xor
loope
pop
add
aas
dec
xchg
sub
mov
aaa
lahf
lcall
xor
mov
repz
rclb
mov
mov
xchg
fsts
mov
out
jmp
jae
jae
std
jo
inc
pop
ret
jnp
inc
stos
mov
ds
ss
inc
mov
pop
add
push
fs
scas
lret
adc
lods
push
mov
into
dec
ss
sbb
scas
stos
add
pop
push
pop
push
es
mov
add
ret
jae
and
sbb
push
mov
sbb
cmpsl
test
popf
adc
push
mov
fidivl
sbbl
cmpb
dec
loop
jnp
add
enter
add
add
push
pop
daa
sbbl
jae
sbb
cmpps
xor
inc
jg
test
cmp
out
or
pop
cmp
xchg
pop
sbbl
pushf
ficoml
xor
lret
mov
jne
xlat
xchg
cmp
xor
dec
mov
aaa
nop
inc
and
xchg
cli
xor
or
or
arpl
jmp
movsl
jno
aas
fcmovu
adc
adc
mov
aas
imul
ljmp
push
movsb
rorb
sub
shl
pop
add
xchg
inc
outsb
hlt
mov
add
and
dec
aam
sti
jns
pushf
cmp
pop
adc
ljmp
ja
sub
mov
lods
cltd
sbb
pop
jle
stos
adc
iret
leave
nop
pushf
xchg
pop
dec
mov
sbb
push
jg
out
shr
adcb
mov
pop
xchg
cld
mov
sti
fildll
ret
int3
jg
in
into
jg
sbb
outsb
js
mov
push
inc
push
outsb
push
stos
xchg
stos
sysexit
pusha
scas
pop
sub
jl
fldenv
and
jg
stos
push
mov
push
mov
mov
fnstsw
adc
push
adc
inc
rcrb
jb
push
push
mov
aam
inc
push
xchg
pop
cld
mov
cmp
add
cmc
rcl
scas
aad
out
fbstp
and
mov
inc
in
test
repnz
inc
pop
insb
sub
xor
fs
into
int3
faddl
pop
inc
cmc
sbb
mov
icebp
sti
mov
stos
push
cmp
jp
and
mov
dec
push
jne
adc
jae
inc
add
std
dec
jne
lods
sbb
dec
idiv
mov
lret
push
dec
iret
pop
movsl
cld
sbb
fucomip
aaa
or
mov
addl
aas
cmp
je
dec
into
shl
movsl
mov
dec
cmc
adc
mov
mov
shl
dec
xchg
xchg
aas
cltd
mov
mov
and
sbbl
inc
lret
jp
inc
repnz
sbb
aam
push
inc
jnp
cltd
xorb
mov
mov
imul
add
cmp
inc
loop
jmp
sub
test
imull
mov
stos
insb
inc
mov
xchg
fdivs
push
inc
inc
lods
add
add
jmp
int3
insb
fwait
jo
push
cmp
ret
lahf
jo
jge
jl
inc
push
sbb
adc
sbb
lret
sbb
mov
push
gs
mov
psrad
cmpb
inc
aas
cmc
mov
sbb
sahf
dec
pop
adc
stos
add
jne
lret
or
or
lahf
adc
dec
mov
stos
pand
filds
and
cmc
movsb
insb
aad
shlb
mov
add
pop
push
xor
push
xor
stos
dec
inc
fnop
xor
mov
xchg
jns
pop
test
or
push
jae
mov
jne
and
xor
aam
xor
mov
sbb
pushl
lcall
add
out
cltd
push
mov
or
add
jno
sahf
popf
jnp
mov
movsl
add
xor
bound
mov
fidivrs
lock
in
lret
and
fdivrl
inc
dec
push
loope
xchg
pop
push
out
adc
out
pop
mov
xor
jae
hlt
imul
add
loopne
loopne
jecxz
test
xchg
pop
inc
sbb
test
sahf
mov
pusha
out
sbb
sbb
fstl
or
in
xchg
pop
add
mov
sub
jge
jecxz
ret
mov
xor
das
sbb
lods
lock
stc
sbb
or
scas
rcrl
pop
je
hlt
push
movsl
pop
cs
mov
mov
inc
lahf
jne
cmpsl
xor
xchg
cmp
roll
test
arpl
lret
sub
and
jne
cmp
ret
cmp
sub
roll
pop
cmpsb
addr16
rorb
sub
cmp
xchg
outsl
andb
push
out
outsb
pop
xchg
ja
scas
lahf
mov
push
pop
cmpb
aas
scas
scas
adc
xor
cld
pop
jbe
mov
mov
out
add
mov
fcmovu
ja
fbld
push
xor
imul
out
and
sub
stos
outsb
pop
cld
mov
push
bndldx
adc
jo
cmp
adc
mov
add
add
inc
add
ret
ja
mov
sub
xchg
call
and
inc
xor
pop
push
loopne
jno
pop
cmp
push
neg
mov
mov
mov
out
sbb
imul
in
xlat
jns
insb
push
or
aad
dec
popf
pop
mov
mov
adc
jmp
mov
sub
fimuls
or
xor
xchg
xor
or
mulb
cmc
inc
mov
imul
icebp
mov
mov
mov
pop
mov
mov
adc
aas
test
cwtl
adc
stos
add
inc
add
push
adc
add
fwait
mov
sti
xchg
and
inc
pop
js
lahf
clc
stos
rol
mov
or
pop
jg
push
xchg
sub
loope
cltd
cmc
sbb
les
lahf
inc
xor
inc
push
add
and
inc
js
rol
ds
mov
lcall
push
mov
test
addr16
shrl
shlb
pop
jg
out
das
mov
push
mov
add
shr
add
movl
movl
movl
jmp
jecxz
xchg
sbb
sbb
ret
movsl
mov
faddl
sbb
adc
sbb
jecxz
xor
xor
jno
xchg
lcall
js
and
jo
xor
add
and
xor
mov
test
and
ljmp
scas
cld
in
mov
sub
pushf
add
pop
sbb
lds
lock
pop
enter
in
jb
sbb
rcr
jl
xchg
mov
stos
adc
mov
ds
in
in
mov
aas
xchg
mov
add
jb
fs
inc
pusha
cltd
adc
bound
loopne
lret
xchg
lea
fs
xor
popa
ds
test
dec
add
jne
sub
insl
push
push
sbb
popl
out
mov
cs
adc
pop
xor
sbb
jns
pusha
mov
fistpll
or
insl
fs
mov
mov
clc
mov
mov
sbb
sub
jge
aas
cmp
mov
xchg
pop
mov
dec
cmp
sbb
adc
gs
loop
insb
jmp
iret
and
push
pop
data16
sbb
add
dec
mov
sub
movsl
or
loop
lods
xlat
mov
dec
mov
or
mov
fldcw
cltd
or
push
cmp
jo
in
and
xchg
je
out
imul
lods
icebp
fidivrs
shrl
push
xchg
dec
lahf
mov
insl
call
jle
push
fsubrp
push
aas
mov
test
arpl
add
xchg
dec
add
mov
cmpsb
xchg
inc
sbb
in
xchg
nop
sub
push
hlt
mov
ret
loop
push
mov
mov
or
push
dec
or
xchg
lahf
add
xchg
icebp
aad
inc
addr16
push
jle
dec
push
test
repnz
scas
or
movsb
cs
popf
lock
cmp
nop
and
sahf
negb
adc
scas
sbb
flds
bound
insb
xor
int3
pushf
jno
ja
inc
and
cmc
pop
aas
mov
aas
xor
inc
ret
dec
outsb
stos
jle
lods
iret
out
lcall
fidivs
dec
inc
stos
pusha
dec
or
xchg
add
js,pn
xchg
test
dec
and
dec
jno
cmp
inc
lahf
push
or
sti
lds
dec
xlat
gs
movsl
mov
jns
add
repz
pop
xchg
loop
mov
xor
adc
lahf
gs
lock
mov
loope
jb
push
dec
cld
std
push
repz
jmp
dec
or
jne
fistps
aam
imul
test
sub
ja
pop
jns
int
ljmp
lahf
stc
cmp
jo
mov
out
xchg
icebp
mov
cli
sahf
push
sub
int
xor
xchg
push
sti
cmpsb
shrl
jp
sahf
cmp
xor
jl
xor
pop
and
sub
repz
pusha
mov
xchg
lock
mov
in
aam
mov
push
pop
adc
fisubs
sbb
adc
inc
dec
das
std
sti
int
cmp
xchg
aam
insb
les
aam
add
push
nop
je
pop
notl
mov
pop
pop
out
push
out
ret
mov
pop
fs
push
jnp
lds
push
ret
loop
lcall
decl
and
add
push
pop
div
mov
or
mov
xor
div
jmp
and
popa
into
pop
dec
and
mov
mov
and
sbb
popa
pop
dec
loope
pop
adc
xchg
mov
jmp
repz
adc
dec
mov
and
das
je
inc
into
and
sti
dec
ret
loop
lock
cmc
gs
or
pop
xor
and
jmp
mov
mull
adc
aam
js
inc
and
ret
xchg
mov
add
aaa
adc
rcl
stos
or
sub
lea
mov
xchg
push
fs
mov
std
mov
aaa
lods
into
push
mov
add
lock
jne
fidivrl
test
jl
lock
pushf
daa
das
jg
sub
adc
sbbl
push
shll
dec
dec
aaa
inc
xchg
sbb
imul
popf
jnp
lds
dec
jge
bound
jb
or
pop
es
fildl
pop
jp
stc
les
jne
jl
cmp
dec
imulb
imul
jmp
pop
pop
and
into
jns
ret
rclb
inc
mov
dec
sub
std
xchg
call
ficompl
mov
mov
mov
pop
dec
inc
fidivl
std
pop
inc
mov
and
repz
ss
into
insl
mov
in
and
push
inc
xchg
pop
mov
imul
dec
insb
mov
push
aaa
fistps
sub
sub
scas
jmp
fs
xor
ret
sbb
jg
and
mov
jae
popa
clc
leave
inc
or
sti
out
outsl
sti
sti
mov
adc
nop
inc
sbbb
mov
and
stos
aad
xchg
xchg
popa
push
enter
aaa
fcomp
dec
mov
in
xchg
mov
fistpll
dec
cli
mov
mov
mov
mov
fildll
xchg
aam
lret
inc
xchg
xor
cmpsl
je
sub
mov
frstor
pop
jb
call
inc
loop
es
ljmp
lcall
out
and
and
lea
stc
jbe
jo
jecxz
xor
rorb
dec
addr16
push
mov
jmp
pop
mov
cmp
mov
cmp
lea
out
jb
xlat
and
imul
push
cwtl
xorb
mull
pop
fdivrl
mov
jae
cld
out
lods
mov
in
fsubrs
dec
jae
insl
sub
xchg
add
fnstenv
and
mov
and
testl
add
jp
shlb
es
or
int3
int3
repnz
cmp
cmp
icebp
mov
add
xchg
cmpb
sbb
div
xchg
sbb
push
cmc
out
outsb
lret
or
data16
sub
jmp
jno
jae
rol
adc
add
xor
rcrl
mov
fldl
gs
pop
loop
fisttps
and
icebp
into
push
ds
pop
das
bound
out
jb
iret
cmp
adc
cmp
ljmp
push
out
aaa
fwait
inc
sub
jbe
sbb
inc
xchg
cmp
fisubl
inc
lahf
cmpsl
xor
mov
cmpsl
push
loop
loope
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
jmp
add
mov
mov
sbb
mov
and
sbb
mov
cmp
sahf
sub
aam
sbb
loop
push
test
or
in
icebp
push
imul
cmp
sub
xor
adc
inc
js
push
jae
std
jl
mov
shr
mov
scas
pop
or
dec
rcl
inc
mov
daa
mov
mov
insb
cmp
je
add
mov
sub
pop
xchg
sub
repnz
pop
insl
rcll
bound
out
les
in
and
pop
cwtl
mov
scas
ds
ret
in
movsb
in
repnz
adc
lods
aas
repz
fcmove
jp
cs
add
cmpsb
pushf
bound
mov
sti
xchg
bound
pop
orl
xchg
mov
cmpsb
xchg
or
lods
repz
mov
leave
out
sub
std
lods
inc
jo
push
test
sbbb
fmulp
mov
test
push
push
dec
jge
push
mov
and
push
adc
fidivs
lret
add
push
out
outsb
fucom
repnz
int3
mov
inc
shr
push
jge
out
sbb
lcall
mov
sbb
insb
ss
pop
pop
mov
or
jmp
or
xchg
or
fsubr
add
push
mov
lret
adc
jmp
adc
pushf
sbb
rclb
dec
enter
stos
test
adcl
push
pop
jnp
and
adc
orb
inc
mov
sub
rolb
bnd
dec
jno
pushf
ret
mov
or
dec
enter
pop
int3
push
mov
lcall
stos
movsb
out
insl
inc
lcall
sub
jmp
shl
in
icebp
bswap
lea
jb
mov
ret
inc
adc
sbb
adc
aad
dec
test
add
mov
mov
mov
scas
push
cld
pusha
fsubs
pop
push
repnz
xor
and
push
test
daa
std
jno
dec
ror
xor
and
add
sahf
lea
out
dec
les
repz
outsb
sub
and
mov
jo
or
ljmp
mov
cs
inc
je
and
xor
lcall
xchg
test
sarl
emms
pop
dec
lds
mov
inc
dec
int3
into
xchg
dec
pushf
cmp
inc
fiadds
fidivs
inc
and
dec
ret
sbb
das
sub
shrb
loopne
iret
dec
cmp
ss
mov
xchg
ret
stos
loope
push
lret
push
or
vmovdqu
popf
fistps
sub
xor
mov
movsb
xchg
lea
add
and
ljmp
adc
shlb
in
or
mov
int
push
push
stos
cmp
sbb
inc
loop
cmp
xchg
int
fwait
out
lret
daa
and
pop
pop
pop
fsub
cltd
fsubs
popa
enter
sbb
xor
aaa
aad
out
fisttpl
mov
mov
inc
mov
decl
hlt
std
inc
test
pushl
jns
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
jmp
imull
mov
mov
jle
mov
and
sbb
fadd
mov
addr16
cmp
push
mov
xchg
ficomps
popl
scas
ss
ret
cli
jo
xchg
add
jg
ss
popf
adc
je
bound
inc
orl
inc
ret
inc
mov
or
pop
sbb
hlt
dec
call
pop
sbb
inc
dec
mov
test
or
imul
insl
jns
sbb
popf
call
in
cli
fstl
jp
add
dec
movsb
cmp
enter
out
push
push
cltd
mov
mov
cmp
scas
sti
dec
or
dec
je
ja
int
jb
push
ret
repnz
or
add
mov
inc
mov
nop
shll
inc
inc
adc
cmpl
mov
in
and
jp
adc
fdiv
mov
mov
sti
xchg
and
mov
cli
fistl
add
lahf
or
jmp
popa
sbb
jecxz
cld
pop
scas
mov
aaa
add
and
xor
subb
inc
pop
xor
mov
bnd
inc
dec
xchg
jle
pop
cs
and
cmp
or
push
and
lret
cmp
mov
sahf
xchg
jl
sar
adc
fsub
sub
push
xlat
lcall
stos
imulb
inc
dec
icebp
fstl
push
popa
inc
cmp
mov
jbe
popf
mov
insl
add
or
fbstp
mov
mov
push
fsubl
mov
jl
movsl
sti
popa
shrl
out
xor
adc
pop
inc
lahf
inc
mov
mov
push
cwtl
js
inc
ljmp
jo
pusha
movsb
sbb
sub
jns
andb
xor
stc
xchg
out
or
hlt
jne
loop
lcall
ja
sub
mov
clc
pusha
outsb
adc
add
and
vpshuflw
mov
imul
pop
xor
dec
cmp
jns
movsl
imul
fsubrp
js
cmp
jl
into
or
out
movsb
sub
jbe
int
rolb
mov
xchg
inc
fwait
insb
dec
push
lea
sub
int3
adc
imul
xchg
idivl
sub
inc
nop
mov
insl
dec
cli
fsubl
jbe
rcr
inc
jge
pop
push
cmp
into
cmpsl
cmp
sbb
or
sbb
push
ret
arpl
mov
xor
jmp
xor
es
sbb
mov
in
xchg
lods
aas
ss
xor
pop
fs
sub
notl
rcrl
popf
mov
arpl
loop
addr16
fwait
aaa
outsl
cmp
rolb
stos
sub
mov
xor
and
dec
or
dec
lret
loopne
ss
aam
lds
mov
mov
jb
test
sahf
rcrl
and
push
shr
jp
scas
in
and
ds
adc
movsl
jo
xlat
xchg
or
mov
iret
cs
jge
int
test
iret
and
pop
jne
sarl
mov
into
in
mov
pushf
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
jecxz
enter
sbb
cltd
mov
pop
jo
and
sbb
xor
ja
adc
or
sub
shrb
push
jnp
subb
xchg
push
out
push
push
xor
push
push
sbb
sti
addl
or
ja
or
dec
mov
push
dec
das
push
jb
mov
add
int3
cmp
jb
xor
xor
cld
fimuls
jnp
add
cmp
or
xchg
push
xlat
sbb
mov
shld
rcrb
sti
jo
or
mov
adc
add
pop
push
mov
mov
ret
lss
arpl
mov
fmull
add
mov
sarb
pop
js
mov
sti
mov
clc
lret
or
imul
xor
leave
jae
fs
push
decl
adc
add
ja
and
pusha
dec
jmp
mov
xchg
pushw
popf
mov
cmc
pop
xchg
mov
call
das
sbb
scas
jo
sbb
xorl
adc
jne
repnz
test
mov
jecxz
popf
addl
dec
scas
mov
mov
inc
and
scas
nop
std
push
inc
mov
cmpsl
cld
rorb
scas
cld
push
popf
ja
adc
scas
and
mov
jg
cwtl
movsl
fildll
jmp
hlt
shrb
mov
sub
jle
ret
dec
rcrl
push
mov
fsubs
mov
enter
jnp
add
pop
adc
fstl
mov
ljmp
pop
pop
xchg
cltd
push
push
xor
mov
jp
les
divl
and
sbb
and
inc
out
pop
insl
sub
sub
aaa
mov
test
xchg
movsl
testl
sub
dec
and
in
fadd
cmp
adc
xor
cmp
or
adc
shrl
push
adc
orb
idivb
fsts
popf
jl
aaa
cmp
inc
mov
fcoms
insb
es
testl
dec
jns
dec
xor
negb
cmp
mov
sbb
mov
lock
aad
xor
bsf
lret
sub
ja
out
jo
mov
daa
enter
dec
push
dec
test
cmp
cmp
push
gs
pop
and
imul
push
mov
sbb
clc
sbb
lret
push
pop
sub
xor
mov
push
hlt
cmp
cmpsl
pop
data16
add
ds
stos
mov
jg
aad
fcoms
fs
sub
sbb
insb
add
pop
xchg
sbb
data16
mov
sub
jecxz
jnp
dec
sbb
dec
inc
xchg
mov
adc
mov
in
ds
in
in
movsb
in
mov
daa
pop
mov
jmp
bound
insl
sarl
xchg
xor
push
xor
or
jno
sub
inc
pop
jle
shrb
or
inc
cmc
fstps
cli
insb
cmp
pop
jl
out
outsb
jns
mov
dec
xchg
xor
jnp
cmp
dec
add
test
adc
jge
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
jmp
push
mov
and
xchg
push
insl
mov
sbb
sbb
shl
pop
das
in
pop
aas
ret
fidivl
mov
sbb
insl
mov
int
mov
adc
and
push
mov
int3
imul
je
jns
or
test
xlat
cltd
lcall
mov
xchg
je
mov
scas
test
lcall
pop
mov
lock
adc
sub
cltd
in
xor
insb
adc
xchg
pusha
sub
cmc
out
aas
and
mov
int
mull
insl
jle
subb
sbb
aaa
push
mov
mov
es
das
jmp
push
mov
or
jo
xchg
push
andb
lahf
push
pop
push
cwtl
pop
mov
or
pop
cmp
fiaddl
in
imul
jg
push
push
sub
pop
shl
xlat
jno
inc
loope
pop
lret
mov
faddl
scas
pop
lods
lods
fidivrs
gs
mov
adc
inc
fisttpl
call
lea
out
xor
dec
jo
test
jg
data16
stos
cld
cmc
popa
sub
lahf
sbb
test
or
data16
sub
add
cmp
aad
push
or
into
xchg
xchg
mov
rcll
lret
jbe
fisubl
sbb
add
jmp
inc
push
das
lea
jnp
movsl
push
mov
add
arpl
imul
imul
daa
mov
xchg
repnz
xchg
push
insl
xor
fisttps
test
xchg
loope
bnd
loopne
pushf
lock
pop
xor
test
mov
xchg
xor
xor
insl
xor
xor
sub
and
dec
mov
iret
popf
xlat
push
jo
xchg
adc
in
rcl
or
mov
arpl
jecxz
sbb
jnp
loope
outsl
std
stos
jae
paddusw
jle
addr16
clc
mov
shll
sub
test
or
mov
xchg
sub
into
xchg
mov
xchg
push
xchg
aas
jbe
lock
fidivs
dec
ret
xor
out
aaa
daa
js
mov
push
push
daa
inc
or
dec
out
push
les
shrb
les
push
sar
sbb
pop
loopne
testl
jmp
ja
fs
fs
enter
or
push
js
mov
sbb
cli
push
or
shrb
mov
jo
ret
sbb
push
xor
scas
aaa
cmc
stos
ds
xchg
je
scas
mov
pop
inc
pop
and
imul
dec
push
ja
movsl
add
lret
mov
ret
push
into
cwtl
dec
or
gs
out
cwtl
jne
mov
ja
in
jae
cmp
test
pcmpgtb
mov
mov
jb
or
mov
setl
shll
fbld
stos
enter
push
cmp
call
jno
ljmp
imul
mov
dec
mov
dec
fnstenv
lds
fsubr
jno
aaa
loopne
insl
or
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
jmp
cmp
sub
pop
rcrl
mov
pop
push
sbb
adc
sbb
push
jb
sub
mov
divb
mov
movsb
repnz
test
jmp
notb
jbe
loop
add
cmpb
arpl
shl
xchg
lret
and
lods
dec
mov
nop
push
jge
sub
lret
cmp
dec
jnp
inc
jb
pop
xchg
jno
lock
pop
inc
add
arpl
in
stos
jb
int3
jo
sub
mov
mov
sub
scas
cli
pop
jl
jo
daa
icebp
push
loope
or
mov
cmpsl
ja
sbb
pop
inc
dec
inc
xor
xchg
pop
stos
sub
cmp
scas
scas
or
mov
fiaddl
jg
jb
inc
cmpl
sbb
jmp
sbb
dec
xchg
outsb
add
in
cld
lcall
popa
dec
lcall
sbb
sbb
mov
xchg
mov
xor
adc
bound
xlat
jle
es
ret
mov
fildl
or
in
inc
daa
outsl
dec
dec
lods
jae
sti
mov
out
test
dec
jbe
sub
xor
mov
lods
or
out
jle
sbb
mov
test
and
add
cmp
ljmp
sub
fisubrs
push
aam
ljmp
hlt
aam
adc
jp
sub
test
fiadds
dec
loope
cltd
mov
dec
dec
test
and
je
cmpsl
daa
dec
cwtl
hlt
fucomip
or
jae
gs
daa
fisubs
xchg
iretw
les
icebp
mov
aas
ds
mov
and
pop
ljmp
rol
xchg
lods
test
xor
dec
jmp
push
or
pop
fildll
jb
mov
popa
mov
and
mov
movsl
or
sbb
inc
mov
sub
pop
lahf
test
jae
aas
cmp
pop
push
sbb
mov
mov
push
dec
fcomps
jecxz
ret
adc
test
xor
out
fisubs
pushf
add
xchg
or
mov
movsl
cmpsb
sub
push
in
jbe
push
dec
xchg
adc
sti
mov
mov
in
out
push
push
jo
out
lock
fimuls
mov
mov
rcrb
pop
cld
js
mov
mov
dec
dec
mov
fists
ds
cmp
lret
cmp
stc
loope
sbb
lods
mov
push
int
addb
es
lahf
mov
jb
inc
in
pop
das
cmc
les
int
lret
xor
in
xor
sti
cmc
pop
xchg
cltd
es
insl
out
fldl
xchg
lret
sub
imul
pop
repz
mov
stos
jns
xor
mov
add
and
mov
fcoms
cmp
or
loop
cmpl
or
ss
negw
lcall
sub
jbe
arpl
idiv
int3
xchg
rol
cmp
iret
ret
inc
mov
add
mov
int3
or
dec
or
jb
mov
inc
cmpsl
das
cmpsl
pop
orl
outsb
aas
jle
sub
aad
pop
push
cmc
pop
mov
mov
arpl
test
std
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
jmp
jp
inc
mov
mov
pop
push
popf
jo
dec
jge
and
push
sbb
sbb
mov
add
xlat
inc
mov
sbb
add
jno
mov
mov
xchg
add
out
std
arpl
outsl
std
inc
push
push
jno
es
push
push
sahf
orl
aas
clc
lahf
fdivs
jmp
lods
icebp
scas
jle
fwait
sub
stc
adc
test
shll
popa
cmpsb
je
icebp
jle,pt
sub
cmp
cmp
pop
cmp
stc
sub
outsb
xor
push
popa
sahf
mov
xor
cltd
jecxz
add
pop
pop
out
jmp
icebp
jo
mov
jle
out
insl
mov
xor
stos
addr16
fldpi
push
jg
or
hlt
test
lret
jecxz
xor
cld
popa
lret
sbb
lahf
pop
rcrl
jae
fdivs
pop
jae
adc
js
cmp
adc
nop
mov
test
fptan
inc
mov
call
adc
inc
ret
inc
or
out
jge
adc
mov
adcl
or
mov
pop
push
xchg
jnp
sub
out
icebp
fcmovu
adc
mov
test
mov
jns
nop
push
imul
cmp
orb
add
cmp
es
jnp
mov
test
repnz
int
stos
xchg
iret
cmp
call
sub
adc
call
std
fwait
inc
push
jg
and
jle
mov
icebp
push
adc
les
out
cmp
dec
pop
jl
std
testb
pushf
dec
cmc
int3
xor
cwtl
sbb
nop
inc
inc
fdivrs
xor
mov
aaa
jo
cld
mov
jno
lock
int
and
cld
lcall
mov
add
in
shr
das
push
cmp
cltd
lahf
pusha
cmc
push
iret
and
lgs
fidivrl
push
xlat
insb
pop
xchg
fldl
or
lahf
imul
decb
js
jmp
fbstp
cmpl
xchg
inc
fistps
push
add
fcompl
js
ljmp
xor
sub
inc
aas
dec
and
and
push
xorb
mov
loope
mov
add
jae
and
and
dec
adc
mov
xor
cmp
ret
leave
orb
cld
sub
mov
ss
in
std
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
dec
push
mov
sub
push
mov
or
jne
sub
mov
mov
mov
mov
sbb
xor
cmpl
mov
mov
jmp
movl
jl
push
pushl
push
push
call
addl
xor
mov
add
sub
mov
adc
mov
mov
mov
sbb
div
dec
mov
not
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
sbbl
subl
movl
cmpl
movl
je
mov
mov
adc
add
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
subl
shld
movl
shl
ret
addl
mov
xorl
xor
and
shl
ret
xor
xor
ret
mov
add
add
add
add
nop
add
hlt
addl
movsb
xchg
add
add
addl
adc
add
int3
test
add
add
call
add
add
add
add
xchg
add
in
test
add
add
dec
xchg
add
add
add
insb
outsl
outsl
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
aam
inc
add
add
jbe
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
in
daa
inc
add
daa
inc
add
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
pop
and
add
inc
add
inc
add
daa
inc
add
add
add
jg
add
add
daa
inc
add
inc
add
add
daa
inc
add
lret
push
movsb
scas
or
movsb
insb
es
add
inc
add
daa
inc
add
inc
add
add
inc
add
es
add
inc
add
inc
out
aam
inc
add
es
add
inc
add
loopne
jbe
pop
cmpsb
add
inc
add
rcl
pop
and
add
add
jno
cvtdq2ps
jbe
cmpsl
mov
xchg
test
es
add
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
push
and
add
sub
add
add
scas
lcall
das
dec
add
dec
and
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
add
add
lods
inc
add
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
xchg
inc
add
add
add
inc
add
fbld
add
add
je
gs
jo
jo
outsl
insb
je
jae
outsl
popa
add
add
add
add
inc
insl
jns
outsl
js
jns
jb
popa
je
jne
gs
jae
gs
add
add
add
add
inc
jne
jp
outsb
add
add
imul
insb
outsl
add
push
popa
arpl
imul
add
outsb
imul
add
add
add
add
insb
insb
gs
add
add
add
gs
data16
jae
outsb
fs
popa
insb
imul
js
imul
add
add
addr16
insl
ja
jns
popa
jns
outsb
popa
bound
insl
outsl
jb
add
add
je
dec
add
add
add
add
addl
add
loopne
add
mov
add
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
gs
popa
ja
jne
outsl
insl
jne
add
jno
jb
bound
dec
popa
addr16
addr16
js
bound
insb
outsl
add
je
jo
outsl
outsl
push
gs
outsl
jae
jne
imul
jae
dec
jne
imul
gs
outsl
jbe
jae
insb
push
gs
push
outsl
data16
popa
jns
gs
jo
outsl
insb
insb
jo
imul
gs
jne
jae
addr16
jo
gs
outsl
ja
add
outsb
je
gs
popa
je
outsl
jo
insb
fs
arpl
dec
outsl
imul
push
imul
add
je
gs
insb
jne
add
imul
insl
jo
outsb
outsl
add
jae
outsb
add
push
add
add
arpl
push
add
add
push
add
js
jns
push
add
jb
arpl
add
outsl
add
dec
add
outsb
add
je
outsl
add
outsl
add
popa
add
add
dec
add
outsb
add
add
outsb
add
popa
add
add
inc
add
jne
jae
je
add
push
add
jb
jns
add
push
add
popa
add
push
add
insb
add
je
imul
add
add
jo
add
jns
je
push
add
outsl
add
push
add
jo
jns
add
bound
outsl
add
inc
add
popa
add
add
jae
add
add
or
add
xor
add
push
adc
xchg
adc
mov
and
adc
add
adc
add
adc
lcall
add
or
add
add
adc
or
pop
adc
out
adc
into
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
or
inc
add
addl
cmpsb
addl
scas
addl
mov
inc
add
addl
movb
add
addl
addl
fiadds
inc
add
cmp
add
adc
jbe
adc
or
add
sbb
add
sub
add
adc
movsb
inc
adc
jecxz
adc
shlb
push
push
adc
pop
inc
adc
xchg
rcrl
add
je
add
adc
fldcw
add
pop
adc
nop
push
adc
scas
push
adc
hlt
jbe
add
pop
adc
mov
data16
pop
dec
adc
mov
adc
sub
adc
xchg
cmp
add
addl
out
addl
testb
add
addl
push
addb
addb
addb
addb
addb
addb
addb
addb
and
add
adc
and
inc
adc
ss
adc
leave
jno
add
cmp
add
inc
adc
mov
pop
adc
dec
sub
add
xor
add
adc
jl
adc
xchg
jle
add
data16
data16
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
imul
mov
adc
addr16
add
add
cmp
add
adc
jecxz
adc
push
or
add
adc
push
dec
adc
mov
adc
sarl
add
add
adc
test
addb
addb
addb
addb
addb
addb
addb
addl
addl
addl
addl
addl
addl
addl
addl
addl
add
je
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
test
add
add
jbe
add
mov
add
mov
add
mov
test
add
test
add
test
add
test
add
add
and
add
xor
add
dec
xchg
add
add
push
xchg
add
add
add
add
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
add
outsb
xchg
add
add
mov
add
movsb
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
mov
add
add
dec
mov
add
add
add
nop
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
mov
add
add
add
add
add
mov
add
scas
mov
add
add
fmull
add
add
add
sbb
add
mov
add
add
push
mov
add
add
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
insb
imul
je
add
inc
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
jb
popa
insb
imul
arpl
add
je
jb
arpl
imul
xchg
add
gs
je
inc
dec
inc
push
arpl
outsb
add
popl
inc
jb
popa
je
inc
inc
push
add
add
je
imul
je
js
add
add
je
arpl
outsb
add
fadds
push
gs
imul
add
inc
gs
bound
arpl
add
popa
je
inc
outsl
outsb
je
outsb
imul
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
mov
popa
je
dec
inc
push
add
add
popa
jb
inc
outsl
arpl
add
push
gs
imul
addr16
js
add
outsl
dec
push
add
std
add
je
gs
inc
outsl
insb
outsl
jb
add
add
je
push
fs
xor
push
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
dec
inc
imul
xor
fs
insb
add
inc
inc
push
push
xor
cs
insb
add
xchg
inc
gs
insb
addr16
jb
arpl
add
je
outsb
jne
je
insl
push
arpl
add
imul
je
gs
add
add
arpl
insb
addr16
jne
je
outsb
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
add
imul
popa
jae
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
fs
imul
add
je
popa
jb
je
outsl
jae
scas
add
ja
fs
pop
add
gs
je
inc
imul
jb
insl
inc
add
out
inc
jb
insl
gs
arpl
add
je
jo
popa
je
push
arpl
add
je
inc
add
push
imul
outsl
arpl
add
add
imul
push
add
je
outsl
jb
outsb
jo
je
fs
add
hlt
add
jae
push
push
dec
gs
popa
addr16
add
xchg
add
outsb
jae
popa
je
dec
gs
popa
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
outsb
fs
imul
push
add
ja
gs
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
add
cmp
inc
gs
outsb
jne
je
imul
add
outsb
fs
gs
popa
addr16
imul
add
push
jo
popa
dec
jne
gs
arpl
or
inc
imul
jae
push
outsb
imul
outsb
fs
gs
popa
addr16
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
push
gs
outsl
arpl
add
stos
add
fs
imul
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
popa
insb
imul
add
inc
jb
popa
je
inc
imul
jb
insl
push
add
or
inc
gs
inc
inc
js
repz
je
popa
jb
je
outsl
jae
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
ret
jbe
jo
imul
lds
dec
jae
push
jo
popa
push
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
add
push
gs
ja
imul
cmp
arpl
popa
imul
outsb
add
xor
jb
outsl
dec
gs
push
add
jnp
push
push
jb
outsl
jb
add
add
je
arpl
gs
imul
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jae
outsb
arpl
jns
je
je
add
xchg
add
je
outsl
jns
arpl
add
inc
push
xor
cs
insb
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
push
gs
popa
insb
jne
inc
js
add
pop
add
jns
je
gs
jb
jns
gs
popl
push
gs
gs
popa
insb
jne
inc
js
add
das
add
je
data16
outsl
outsl
je
outsl
outsb
imul
je
jae
add
push
gs
insb
outsl
jae
dec
gs
inc
fs
jo
xor
cs
insb
add
arpl
cs
add
bound
push
gs
insb
insb
outsl
arpl
sbb
inc
jb
outsl
jb
outsl
fs
mov
inc
outsl
insl
jo
jb
push
je
imul
add
jae
jb
jo
inc
add
adc
inc
jne
insb
imul
outsb
fs
add
push
gs
push
inc
data16
dec
popa
jae
add
add
fs
imul
add
sub
dec
outsl
arpl
push
imul
push
jns
je
insl
push
imul
insb
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
testl
imul
and
insl
push
gs
jne
arpl
jns
gs
add
lcall
insb
inc
gs
je
insl
dec
popa
insl
gs
add
loop
inc
jb
popa
je
dec
popa
insl
gs
imul
add
je
outsl
arpl
gs
outsb
outsw
inc
add
lar
je
outsl
fs
gs
imul
add
pop
add
popa
insb
push
imul
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
pusha
add
outsb
fs
imul
gs
add
push
add
je
jne
bound
inc
outsl
jb
popa
je
add
dec
inc
push
dec
inc
dec
xor
cs
insb
