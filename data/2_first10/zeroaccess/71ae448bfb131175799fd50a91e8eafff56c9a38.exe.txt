push
mov
sub
and
mov
xor
mov
mov
sub
inc
push
mov
movl
mov
sbb
sbbl
mov
and
orl
orl
mov
or
mov
neg
mov
cmpl
mov
movl
mov
movl
jmp
mov
mov
jle
pushl
call
add
mov
or
or
or
sbb
add
cmpl
movzbl
mov
movzwl
jmp
movl
movl
jne
push
push
push
push
call
adcl
sbb
inc
adc
and
mov
addl
sub
mov
mov
sbb
mov
orl
orl
lea
xorl
mov
add
mov
and
mov
cmpl
not
movl
jmp
movl
movl
jle
push
call
andl
addl
add
sub
or
xor
xor
mov
sub
or
mov
add
mov
sbb
mov
mov
mov
shrd
cmpl
mov
mov
mov
mov
jmp
movl
movl
jge
pushl
push
pushl
push
call
addl
subl
movl
sub
dec
shr
mov
mov
xor
xor
subl
or
movzwl
or
mov
mov
movl
cmpl
movl
movl
movl
jmp
movl
mov
jbe
pushl
pushl
push
push
push
call
addl
adcl
movl
movl
cmpl
mov
movl
jmp
mov
jl
pushl
push
push
call
sbbl
xorl
notl
xorl
decl
cmpl
movl
movl
jmp
movzwl
jb
push
pushl
pushl
push
call
add
subl
andl
decl
andl
cmpl
movl
movl
jmp
movl
movl
jl
pushl
pushl
pushl
push
push
pushl
call
and
movl
subl
addl
orl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
push
push
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
jmp
push
lods
and
cmp
sub
pushf
jmp
jle
sbb
sbb
adc
sbb
mov
lock
clc
out
or
adc
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
xchg
lret
xorb
jle
sti
xchg
mov
arpl
jmp
adc
out
push
pop
stc
adc
mov
dec
je
xchg
or
inc
add
fistpll
movsl
bswap
jae
in
stos
mov
mov
outsl
sub
aam
mov
xlat
dec
outsl
push
dec
mov
mov
dec
inc
lret
pop
popf
adc
mov
and
in
mov
lret
int3
aam
pop
push
sub
inc
and
data16
and
adc
dec
xchg
jecxz
enter
push
hlt
xor
fadd
sbb
int3
sub
and
cltd
imul
pop
popf
into
mov
cmp
adc
lahf
lea
test
push
or
lds
inc
cld
loope
push
adcl
scas
ror
js
stos
dec
xor
jge
call
pop
add
pop
js
lods
adc
inc
inc
sahf
mov
or
xchg
lret
push
addr16
stc
jl
loopne
mov
pusha
stos
fsubrs
aam
jmp
add
xor
cmp
mov
xchg
cbtw
clc
add
fnclex
dec
dec
push
loopne
mov
pop
pop
popa
jle
pop
fisubrl
mov
movsb
mov
pop
and
dec
push
sbb
jmp
jp
sub
mov
mov
mov
pusha
xor
push
jns
faddl
xchg
sbb
mov
and
xchg
rclb
repz
cmp
loop
sarl
jnp
pop
mov
mov
rcr
xchg
icebp
xchg
fidivrl
test
mov
test
and
or
xor
xchg
adcb
outsl
mov
push
pop
sbb
or
enter
and
pop
imul
pusha
imul
jno
mov
iret
dec
sub
and
sub
or
xchg
ss
or
pop
cmpsb
and
lock
jae
add
ds
inc
push
adc
mov
in
mov
push
outsl
enter
adc
push
inc
adc
lea
cmp
push
and
mov
scas
loop
ss
xchg
mov
pop
cmp
bound
test
adc
dec
pop
xchg
sbbb
cld
push
sub
jo
cwtl
push
inc
and
scas
imul
scas
jns
jge,pt
testb
lahf
repz
mov
in
sub
or
mov
pop
mov
add
outsl
das
or
in
pop
sub
outsl
inc
add
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
jle
push
push
call
adcl
addl
subl
orl
mov
xor
movl
xor
movl
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
je
push
pushl
pushl
pushl
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
ja
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
movl
sub
movl
not
mov
shl
andl
mov
xorl
push
push
push
push
orl
call
cmpl
movzbl
movl
mov
movl
jmp
movl
jge
pushl
call
adc
orl
or
mov
mov
or
and
mov
mov
dec
xor
or
mov
mov
sub
cmpl
movzbl
mov
mov
jmp
movl
je
pushl
push
push
push
push
push
call
addl
sbb
or
or
not
mov
mov
sub
xor
sub
mov
lea
or
mov
mov
xorl
or
orl
and
mov
or
sbbl
xor
movl
cmp
jne
sub
mov
mov
orl
shrd
add
shr
mov
cmpl
mov
mov
jmp
notl
movl
jl
pushl
push
call
movzbl
sub
mov
mov
add
xor
add
mov
or
xor
or
adc
mov
dec
mov
adc
mov
addl
shl
xor
andl
xor
notl
or
mov
mov
cmp
movl
jne
mov
mov
xor
mov
xor
or
xor
xor
sub
or
mov
sbbl
mov
shrd
mov
xor
mov
andl
xor
shr
mov
xorl
xor
orl
or
shl
movl
sub
andl
mov
mov
mov
and
add
or
mov
sbb
mov
or
mov
shrd
shr
movzbl
sbb
mov
mov
mov
jmp
stc
dec
popa
test
mov
sbb
and
sbb
adc
sbb
idivl
or
bound
icebp
daa
fcomi
pop
sub
movsl
jecxz
out
gs
dec
popa
and
add
pusha
pop
int3
loope
jb
cwtl
fs
dec
mov
adc
rorb
and
xchg
outsb
or
dec
mov
test
fimuls
hlt
xchg
stos
fidivrs
xchg
aad
or
mov
mov
cltd
outsb
ret
adc
mov
sbb
and
js
scas
test
adc
push
arpl
or
jne
push
xchg
or
fdivrs
es
sbbl
jae
jl
cmp
sbb
xchg
pop
addr16
es
mov
mov
stos
scas
bound
inc
cmpsb
xlat
sub
inc
mov
fildl
pop
xchg
lret
push
fdivrp
pop
mov
in
xlat
xor
push
adc
in
inc
stos
xchg
adc
addr16
or
mov
adc
pusha
fildl
and
inc
lret
sahf
sub
jns
push
dec
xlat
outsb
mov
sbb
in
xchg
fcomi
adc
cmpsl
cld
mov
mov
adcb
fwait
mov
outsl
push
mov
cmc
fbld
or
xor
and
push
cmp
mov
arpl
mov
icebp
dec
fwait
inc
rcll
xchg
xrelease
cmp
dec
es
sub
adc
test
fadds
dec
das
jg
pop
adc
adc
cmp
and
pop
or
inc
dec
jmp
dec
ja
stos
repz
out
rorb
mov
sub
push
insb
int
and
xor
jecxz
pop
lock
insl
das
fstpt
jno
add
mov
mov
jae
repz
lahf
popf
lret
ret
divl
arpl
cmpsl
out
test
or
sbb
out
cltd
clc
and
sbb
hlt
mov
sbb
push
xchg
sbb
xor
ficoms
fucom
addr16
lahf
dec
rorb
lret
jp
jmp
and
loopne
inc
out
adc
rcl
pop
es
inc
aas
out
lds
sub
and
and
add
repz
aas
inc
pop
xlat
xchg
pop
xchg
int
sbbb
xor
stc
shr
mov
pop
mov
sub
xchg
xor
dec
mov
call
mov
roll
sub
mov
jno
jmp
imul
add
sub
popf
pcmpeqw
data16
cmp
dec
dec
fwait
ljmp
adc
add
jl
cs
add
fdiv
aad
pusha
cmc
sbb
xor
sub
shl
xor
mov
adc
or
add
mov
sub
mov
sbbl
shrd
xorl
shr
mov
sub
mov
addl
mov
xor
adcl
xor
or
shl
jmp
pop
sahf
pop
add
cmp
inc
inc
mov
sub
sbb
and
sbb
sub
movsb
mov
js
subl
adc
insb
out
scas
pop
rorb
xor
int
xchg
cmp
dec
jns
lods
nop
ja
jmp
mov
int
in
lods
es
iret
push
scas
mov
jle
adc
cmp
jmp
pop
mov
arpl
fldt
out
and
mov
ja
jb
mov
or
jle
mov
or
lods
adc
daa
pop
dec
push
inc
pusha
jle
aas
ss
lahf
lcall
ret
jbe
ljmpw
push
not
pop
out
jmp
mov
iret
sbb
add
mov
out
mov
xchg
xor
in
aad
xchg
cwtl
movsb
pushl
dec
cmpsb
mov
lcall
mov
out
jle
popa
inc
adc
xor
test
loope
psubq
imul
ret
je
xchg
es
fstps
in
or
addr16
stc
sti
outsl
mov
pop
dec
jne
ret
dec
mov
push
fimull
pop
test
fld
stos
mov
lahf
lock
and
jmp
or
fisubrl
cmpsb
and
sbb
lods
lods
out
mov
sbb
jp
jmp
xorl
in
outsl
lods
sbb
in
pop
pop
cmp
mov
cld
xchg
push
dec
insl
dec
pop
aam
jge
xchg
push
jge
adc
xor
arpl
cmp
push
add
rcll
jle
pop
bound
cld
lods
adc
ljmp
dec
adc
mov
mov
enter
pop
scas
xchg
fwait
roll
xor
jl
adc
in
lcall
filds
and
mov
cmp
lret
mov
cmp
or
cmc
in
pop
mov
pusha
xchg
sbb
hlt
bound
out
std
dec
xchg
add
fsubr
cmc
pop
pop
pusha
lahf
out
or
sbb
jo
cld
imul
jo
aam
xor
rolb
add
sub
ret
pop
add
cmp
fstl
sar
or
movsl
dec
bound
out
mov
push
inc
loope
add
push
and
jae
xchg
pop
mov
ret
jg
and
mov
fsubl
aam
push
push
xor
jmp
std
push
inc
data16
mov
call
hlt
sub
pushf
insl
add
and
push
lods
lea
pop
test
pop
ja
cmc
and
insb
stos
in
jae
cmp
push
mov
lock
les
call
xchg
sbb
insl
mov
in
sbb
jns
push
arpl
lret
call
jbe
sahf
push
arpl
iret
mov
sti
into
test
dec
es
lea
mov
mov
subl
shrd
subl
shr
cmpl
mov
movzwl
jmp
movl
jae
push
call
xor
not
movzbl
adc
xor
or
or
addl
adcl
mov
mov
mov
sbb
xor
sbbl
mov
xor
or
sbbl
shl
andl
imul
mov
orl
mov
shrd
mov
orl
mov
xor
shr
movzwl
sub
mov
mov
mov
adcl
xor
addl
or
shl
addl
sub
jmp
inc
ds
cmp
mov
jo
or
sbb
adc
sbb
jnp
xor
mov
movb
pop
pop
xlat
sbb
movsb
or
cltd
hlt
dec
pop
inc
sub
outsl
push
inc
and
inc
cmc
pop
sub
std
jp
add
icebp
les
out
adc
lcall
sub
add
insb
inc
dec
and
lods
sbb
xor
sbb
in
adc
movsb
sti
stc
jae
push
es
notl
cmc
adc
ror
sub
inc
out
jne
xchg
fmul
mov
pop
mov
lea
out
mov
mov
test
sbb
xchg
pushf
pop
cmpsl
ret
leave
jl
les
std
cli
loopne
push
sub
cld
mov
fcomps
dec
fisttps
loop
loop
mov
int
xchg
jge
repz
ret
fisubrs
loopne
pop
push
mov
sbb
xchg
fwait
mulb
fwait
add
mov
in
call
mov
mov
aaa
jmp
out
mov
mov
inc
test
jp
jo
mov
sbb
fimuls
mov
aam
pop
xor
adc
and
popf
pop
mov
enter
insb
mov
addr16
sbb
and
popa
ljmp
add
pop
push
out
adc
rcl
jbe
and
add
push
cmpb
aas
pop
xchg
dec
and
shlb
xchg
loop
jb
cmp
mov
fldenv
out
mov
push
repz
sbb
inc
push
mov
jmp
loope
cli
mov
mov
mov
mov
or
pop
pop
stc
jp
cmpl
adc
pushl
bnd
sub
icebp
inc
mov
stc
pusha
fbstp
rcrl
lret
mov
adc
ja
xchg
filds
sbb
cmovge
xchg
movsl
testl
sub
addl
add
arpl
xchg
test
xchg
fisttps
mov
sub
ds
mov
scas
es
push
adc
icebp
xor
test
notl
imul
fcomps
sub
push
es
iret
xchg
lods
movsl
mov
into
xlat
daa
or
mov
rcrb
sub
xchg
or
rcll
inc
mov
sub
jg
and
push
xchg
push
adc
xchg
mov
dec
gs
and
add
push
iret
inc
mov
cmp
mov
xchg
push
dec
jno
sub
cmp
pop
clc
push
xchg
ret
dec
cmpsb
roll
sub
fldenv
insl
fdivl
andb
xchg
orl
cltd
push
fdivs
xorb
jb
xor
imul
sub
xor
fcoml
insb
cli
push
xor
jmp
sub
jmp
mov
movl
cmp
movzbl
mov
jg
cmpl
mov
movl
mov
jmp
mov
movl
jae
push
push
pushl
push
push
pushl
call
and
and
sbb
negl
or
xor
xor
add
mov
inc
mov
subl
shrd
andl
mov
mov
xor
addl
shl
decl
xor
andl
or
shr
cmpl
notl
movl
jmp
movl
mov
jge
push
push
push
call
mov
mov
add
xor
xor
xor
not
and
adcl
mov
addl
mov
subl
mov
and
mov
shrd
jmp
dec
lods
adc
pop
movsl
cmp
stos
xor
repnz
add
sbb
adc
sbb
subl
loope
imul
lock
jg
sbb
loope
mov
pushf
out
and
mov
out
cli
outsl
sti
lods
push
cmc
or
sbb
and
dec
aad
test
mov
int
cmp
daa
adc
dec
jb
fistps
mov
jo
stos
mov
dec
outsb
inc
lods
or
repz
aas
push
rolb
inc
inc
lods
les
cmp
int
mov
imul
cmovo
push
sub
add
lret
cltd
fstl
ja
std
mov
and
push
xchg
mov
out
jg
test
and
out
fisttpl
fmull
jecxz
adc
push
cltd
test
int3
mov
dec
and
mov
dec
jle
ret
pop
outsl
fstpt
jb
push
mov
outsb
loopne
aad
cmp
loopne
xor
push
mov
push
mov
push
fidivrs
in
jnp
adc
mov
hlt
addl
or
xor
repnz
xor
jo
or
push
push
adc
lret
and
shl
sub
repz
mov
mov
sbb
stos
sub
sti
std
mov
rcrl
rcrb
fcomps
pop
pop
add
es
add
cmp
sbb
shrl
rorl
nop
jae
icebp
adc
mov
add
sub
xchg
stc
mov
push
push
std
int
std
jl
xchg
adc
int
adc
add
int
clc
mov
xor
scas
jbe
addl
sbb
xor
dec
push
outsb
and
sbb
or
decb
adc
sbb
push
jb
clc
in
in
filds
cli
scas
ret
nop
popf
sub
loope
mov
pop
jne
inc
jl
ja
mov
sbb
das
and
jmp
fdiv
in
addb
ficomps
inc
and
sarl
out
sbb
mov
int3
imul
pop
les
adc
testl
inc
xor
sub
rol
cmc
mov
xchg
add
clc
shll
push
jbe
push
sarl
stos
jno
add
cmp
in
adc
push
lea
cs
adc
stos
addr16
pop
lds
inc
mov
push
push
sti
or
orl
inc
cmp
mov
arpl
pop
xchg
out
xchg
in
or
pop
mov
mov
cmp
ja
mov
shrb
xor
push
smsw
cmpsb
mov
mov
xchg
jg
or
dec
adc
sub
ljmp
sub
add
sbb
add
add
ret
xor
sub
out
fnstsw
cmp
stos
inc
cld
sbb
and
sbb
push
sub
push
jge
lods
sbb
and
add
or
jmp
mov
and
xchg
inc
and
ficoml
rclb
inc
jle
lds
mulb
mov
call
pop
xor
shrb
lahf
sub
test
push
push
mov
push
out
inc
fcomp
ja
mov
insl
lahf
out
int3
in
scas
xor
cmpl
lods
sbb
push
scas
sbb
push
mov
sbb
pop
mov
pop
sbb
in
jle
mov
adc
pop
leave
out
call
test
fbstp
pop
clc
fcmovne
arpl
mov
dec
orl
inc
xchg
push
inc
mull
popa
divl
and
adc
push
insl
imul
sub
sahf
push
cwtl
and
loope
push
lds
jle
pop
cmp
negl
jb
ja
fs
orl
xchg
pop
inc
mov
xchg
sbb
lret
in
loope
sbb
push
and
scas
out
lahf
jp
cltd
fcmovu
lahf
test
shrl
aas
int3
imul
rorb
setle
mov
test
xor
mov
sar
gs
imul
dec
xchg
stc
push
mov
push
inc
repnz
movsb
and
ret
sub
sti
sub
cli
loop
fisubs
outsb
repnz
out
xor
data16
jns
test
cmp
xor
or
shl
inc
pushf
icebp
push
xchg
xchg
nop
dec
jnp
stos
mov
sub
mov
xchg
cmpsl
popf
gs
ss
mov
shl
xor
xchg
mov
adc
push
push
stc
sbb
movsb
add
fdivrs
out
dec
mov
dec
std
lcall
and
jbe
mov
cli
inc
jae
test
stos
jns
lea
pop
mulb
sbb
jnp
rorl
mov
mov
or
scas
mov
cmp
jns
adc
iret
jmp
jae
xchg
ds
rclb
pop
jge
dec
push
mov
push
cmp
fnstenv
ficompl
aaa
int
jnp
fwait
stos
jmp
mov
cmp
pop
push
jno
les
rclb
mov
shll
mov
jmp
push
enter
movsb
call
xor
adc
loope
jl
mov
ss
jecxz
jp
sarl
mov
sbbb
mov
in
mov
adc
lds
or
add
push
add
jge
sbbl
xor
adcl
or
shl
adcl
imul
sub
jmp
cmpl
movl
mov
mov
jmp
movl
jge
push
pushl
call
movzwl
and
adc
or
sub
xor
mov
mov
sbb
mov
cmpl
movl
movl
jmp
mov
jge
push
call
add
inc
xor
add
mov
adc
xor
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
push
push
call
mov
xor
andl
sbb
subl
mov
mov
and
mov
shrd
mov
mov
subl
xor
subl
shl
subl
xor
or
adcl
shr
mov
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
pushl
pushl
push
pushl
call
or
adc
or
inc
subl
mov
and
sbb
sub
mov
cmpl
movl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
push
pushl
call
adc
or
mov
xor
or
sub
xor
xor
or
mov
subl
mov
sbbl
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jb
push
pushl
call
xor
addl
inc
xor
neg
notl
cmpl
mov
mov
jmp
mov
jge
pushl
push
call
mov
add
mov
not
subl
mov
mov
xor
adcl
mov
sub
mov
addl
mov
cmpl
mov
movl
mov
jmp
movl
movl
jl
push
push
call
orl
sub
sub
movl
or
jmp
subl
cmp
leave
jl
rcrb
and
sbb
mov
adc
cmpsb
iret
pop
loope
in
mov
sub
lret
mov
dec
or
xorl
in
in
mov
rclb
sahf
daa
mov
push
aas
jg
sbb
std
sub
add
push
or
lahf
pusha
xchg
scas
push
jmp
in
cltd
push
and
xor
out
mov
cmp
adc
test
inc
mov
pop
push
call
out
cmp
jp
dec
mov
bound
xbegin
jbe
sub
xor
pop
jmp
sbb
and
jo
mov
mov
sahf
dec
push
iret
sub
loope
dec
int3
iret
popa
mov
adc
push
stos
pop
int3
dec
xchg
mov
fs
ret
push
int3
cmp
xor
enter
scas
jg
or
sub
mov
lret
add
in
add
mov
pop
lcall
imull
and
fsub
or
adc
inc
aaa
lcall
inc
enter
les
orb
cmpsb
cmp
push
xchg
jnp
dec
aas
fiadds
aas
insl
icebp
mov
sti
xor
mov
orb
mov
xchg
bound
push
loop
add
mov
and
push
call
add
pop
pop
mov
jg
or
cltd
mov
in
rcrl
adc
cli
mov
and
xchg
ja
adc
mov
mov
push
cmc
inc
fildl
and
jp
and
jbe
cmp
clc
test
mov
and
andl
mov
add
inc
or
sbb
mov
jae
stos
icebp
shlb
dec
lds
repnz
push
jl
lds
les
lock
mov
mov
outsb
inc
fdivl
cmp
pushw
js
daa
cwtl
and
cmpsl
jne
lcall
inc
mov
pop
sub
inc
push
mov
scas
push
and
jno
fwait
mov
frstor
add
mov
pop
cmpsb
stos
dec
subl
pusha
mov
pop
loopne
xor
xchg
cs
sbb
pop
test
cli
add
cmp
subb
mov
inc
mov
rolb
mov
arpl
out
or
cs
dec
in
in
mov
in
xchg
out
lods
and
cmp
fwait
loopne
fs
xor
push
dec
sub
or
mov
in
inc
mov
jmp
scas
push
repz
cmp
fisubrl
push
push
or
es
andl
movsb
test
call
pop
popa
ljmp
lret
pop
mov
lods
icebp
mov
mov
rolb
adc
xor
mov
mov
xor
adcl
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
jmp
inc
mov
mov
and
loope
push
lock
and
sbb
stos
sub
mov
jns
scas
inc
mov
pop
clc
pop
je
jae
repnz
adc
jnp
in
or
pusha
add
cmp
xor
repz
stos
jmp
cmp
dec
outsl
aaa
mov
xor
das
fildl
xchg
mull
imul
ds
cs
or
push
push
jnp
andb
or
jae
add
ds
add
js
addb
addr16
shrl
mov
inc
jp
out
pop
rolb
icebp
mov
add
xor
push
loop
push
es
out
mov
mov
int3
inc
xor
adc
sub
lods
stc
and
push
xor
dec
es
cltd
adc
pop
sub
loop
inc
test
pusha
jge
out
inc
arpl
cmp
xchg
test
stos
xlat
mov
mov
mov
imull
out
add
add
dec
lods
push
pusha
lcall
dec
fs
ror
and
mov
pop
sbb
mov
pop
push
pop
xchg
inc
lahf
stos
sahf
gs
sub
data16
mov
xchg
cmp
shrl
jns
stos
or
js
sub
outsb
cmc
sarl
test
mov
sbb
pop
sbb
hlt
jmp
and
imul
imul
mov
in
xchg
lcall
in
fmulp
cs
xchg
sbb
pop
insb
xor
cmpsb
out
jne
xchg
mov
mov
jne
xor
fnstenv
clc
fistpl
in
sti
lcall
sub
push
inc
dec
pop
push
or
pop
test
xor
mov
popl
loope
hlt
mov
adc
adc
or
lea
movsb
popa
sub
add
bound
test
pop
scas
lods
shll
dec
mov
ret
push
mov
xchg
inc
loop
mov
inc
sbb
test
xchg
in
ljmp
lods
xchg
jp
mov
xor
dec
xchg
cmpsb
rorl
sahf
inc
adc
movsl
push
out
push
pop
xor
mov
fnstsw
mov
jns
pusha
addr16
jb
adc
pcmpeqb
xlat
jbe
fstpt
pop
cmpsb
jns
mov
xor
and
movsb
push
negb
fdivl
push
dec
dec
push
mov
imul
pop
loope
xchg
jecxz
adc
repnz
gs
cmpsl
in
int
xchg
fcoms
mov
mov
fsubl
mov
cmp
out
cwtl
in
mov
adc
ds
lret
popa
pushf
jmp
and
popf
add
ret
sub
mov
shrd
jmp
out
push
push
push
mov
ret
mov
pop
jmp
sbb
adc
sbb
mov
pop
sub
loope
cmp
ja
movsl
mov
xor
icebp
stc
inc
or
lods
pop
mov
ss
xor
pop
and
popa
xchg
mov
xor
adc
adc
fdivp
and
test
lret
sbb
into
cmp
adc
sub
sbb
testl
int
cld
cmp
cmp
xor
push
jmp
add
jge
or
xor
fldt
add
arpl
mov
pop
sub
adc
outsb
js
and
cltd
xchg
jae
jne
pop
jnp
and
mov
in
dec
fimull
xchg
stos
xchg
mov
add
mov
xor
dec
scas
add
clc
dec
fimull
sbb
xor
sbb
mov
xor
push
inc
mov
out
sub
mov
arpl
adc
mov
incb
lods
sbb
jbe
es
cmpsl
in
leave
inc
test
adc
and
es
mov
pop
aaa
arpl
push
xor
test
dec
cmp
cmp
jbe
or
mov
fwait
inc
sub
incb
int3
mov
sub
sub
lods
jae
enter
lret
jg
test
andl
push
cld
mov
ljmp
das
clc
xchg
icebp
fisubs
scas
xlat
push
xor
subl
lfs
inc
imul
mov
stos
stos
shrl
les
mov
or
dec
push
dec
cli
in
cld
add
xor
mulb
cmpsl
faddl
cli
sbb
pop
loop
loope
xchg
or
sub
sub
inc
mov
xor
jl
mov
cwtl
sbb
inc
jae
cmc
shll
negb
mov
or
pop
mov
and
fs
or
jae
mov
jno
sub
mov
jle
aad
hlt
sub
inc
jbe
andl
jns
mov
jmp
push
aad
or
int3
sbb
pop
jno
leave
cltd
dec
mov
testb
ret
mov
mov
in
roll
sbb
int
stos
adc
xlat
addr16
jp
les
lahf
pop
ret
aam
jle
call
and
mov
mov
popa
jno
int
call
cmp
sbb
mov
daa
mov
mov
or
loope
push
cltd
pop
orl
adc
jnp
mov
fistl
mov
adc
sbb
dec
add
ret
mov
fisttpl
mov
jmp
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
jmp
loopne
cwtl
xchg
mov
pop
add
outsl
mov
cwtl
pop
jo
in
sbb
adc
sbb
mov
lock
mov
sti
hlt
or
and
and
sahf
inc
addl
adc
daa
mov
pop
mov
adc
and
push
fcmovu
fs
dec
jnp
cs
cli
jg
mov
dec
pxor
mov
dec
int3
test
jp
pop
push
sbb
xchg
cmp
addl
push
insl
decl
popf
cmp
imulb
sbb
and
xchg
or
xor
add
outsb
loopne
gs
in
movsl
fwait
sar
pop
or
push
sbb
dec
mov
pop
jmp
repz
daa
leave
movsb
adc
push
or
sbb
mov
bound
lcall
outsb
jle
mov
jno
jne
adc
or
loop
rcrb
adc
xchg
mov
aam
dec
addr16
xchg
mov
or
cmp
stos
adc
pusha
cmpsl
mov
fxch
jo
inc
sti
fldcw
stos
sbb
push
dec
into
mov
icebp
out
push
lds
test
repnz
scas
int3
push
cmp
aas
fdivr
in
clc
orps
sub
aad
push
mov
std
daa
neg
mov
aas
outsb
into
iret
xor
jl
lods
data16
jl
pusha
xchg
jb
stc
sti
outsl
mov
outsb
cltd
outsl
dec
pop
je
push
movsb
stos
cmp
fsubl
sbb
adc
gs
sbb
shlb
cmpsl
fildl
popl
cli
aas
push
in
adc
outsb
pop
sub
dec
lods
push
fildl
movsl
mov
cs
cmp
or
pop
xor
mov
or
mov
mov
inc
aaa
cmp
popf
iret
sbb
fsubrs
cmc
jmp
in
sbb
mov
ds
fscale
add
test
stos
cld
or
stos
sbb
sbb
add
mov
cmpsb
mov
stc
and
shlb
or
or
dec
xor
repz
movsl
dec
test
sub
jge
fucomp
cltd
aaa
adc
adc
inc
mov
aas
jbe
push
arpl
adc
repz
nop
sbb
push
push
ret
mov
xor
cmp
dec
cmp
je
xchg
sbb
pop
mov
movsb
jns
adc
rorl
cmp
aas
jp
adc
xchg
xor
bound
xchg
in
scas
jne
and
ss
xchg
inc
dec
jbe
mov
mov
pop
xchg
adc
mov
cmpsb
cmpl
cmp
sti
or
pop
sub
je
and
mov
cmp
test
dec
popf
es
inc
leave
test
or
mov
mov
jmp
nop
dec
nop
add
lock
pop
mov
sbb
and
sbb
mov
insl
cld
sub
in
dec
jle
xchg
and
jmp
pop
mov
sti
test
mov
lret
mov
in
cli
mov
fistl
rolb
loope
test
sub
int3
push
cmp
pop
int3
or
shll
cli
adc
data16
cld
xor
cmc
inc
sbb
ret
and
out
jnp
mov
xchg
ljmp
jmp
subb
inc
xchg
jmp
sahf
xchg
dec
xor
pop
mov
into
inc
into
fisubl
aad
jb
jp
dec
lret
lahf
cld
das
jmp
sub
dec
fwait
adc
sub
xchg
shlb
fsubs
mov
lahf
or
fucompp
repnz
fstps
add
and
pusha
movsl
pusha
fisttps
push
lret
adc
cmp
inc
push
dec
ret
dec
and
cltd
iret
cmpsb
rcrl
test
dec
xor
movsb
cltd
pop
pushf
cmp
je
mov
sbb
movsb
rol
mov
fwait
mov
stos
in
scas
sub
pop
stos
iret
fs
jbe
roll
sbb
int
sbb
and
xchg
and
fs
cmovns
faddl
dec
and
in
pop
xor
jge
adc
mov
mov
and
jle
pop
lahf
sub
mov
scas
addr16
xchg
xchg
insb
pop
std
jo
add
lret
stc
xchg
loop
sbb
add
mov
sahf
mov
or
lcall
cmc
shll
sbb
sub
cld
add
push
popf
dec
std
cmp
push
pop
cmpsb
ja
ljmp
mov
and
jle
jns
add
pop
xor
lds
inc
cli
sub
mov
nop
aaa
fprem
jp
ss
pop
adc
insl
imul
push
xor
cs
xchg
sbb
dec
add
je
mov
outsb
sbb
xchg
sbbl
lahf
push
sub
mov
loopne
stc
lret
sbb
shll
adc
cmc
xchg
dec
scas
mov
push
mov
nop
out
nop
cmp
incb
mov
shlb
insl
loop
mov
mov
fdivs
xchg
into
sbb
mov
fcomps
push
jmp
push
lcall
and
imul
xchg
hlt
lock
out
pop
cmp
out
ljmp
jl
addb
subl
adcb
jns
fld
lcall
lahf
and
dec
std
in
cmp
in
insl
push
lea
mov
mov
incb
add
arpl
icebp
jbe
stos
xor
mov
lods
jmp
inc
sbb
push
xchg
pop
add
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
and
xor
ficomps
mov
jo
sbb
and
sbb
int3
inc
fistpll
xchg
adc
adc
mov
dec
inc
fwait
and
into
push
xlat
das
mov
and
add
cmp
out
jl
sahf
fldt
adc
pop
jge
mov
inc
mov
shrl
outsb
test
jbe
jae
stos
lods
inc
cmpsb
push
jmp
ds
jns
les
xlat
jnp
arpl
pusha
enter
mov
cmp
cmpsl
add
imul
and
lcall
adc
mov
test
leave
xchg
into
cmp
mov
inc
and
sbb
lret
fdivrl
mov
xchg
mov
pop
fld
popa
mov
dec
and
bnd
cmpl
movsb
movsl
dec
sbbl
frstor
mov
out
test
sbb
lods
inc
pusha
enter
and
xor
nop
or
mov
outsb
test
dec
out
js
les
mov
mov
mov
cmpsl
jg
nop
outsl
fwait
bswap
stos
mov
and
cmpsl
add
dec
mov
jae,pn
push
sub
mov
lcall
jno
popf
mov
adc
ljmp
xchg
or
es
or
xchg
jns
push
sti
and
sbb
or
inc
ljmp
pop
sbb
fsubrp
sbb
out
xchg
bound
xchg
dec
jl
fbstp
cmp
sub
jae
sub
dec
add
daa
rclb
mov
pop
mov
mov
xchg
or
outsl
add
xbegin
push
xor
or
mov
in
xchg
xor
mov
pop
xlat
jmp
cmp
fnsave
pushw
dec
int
pop
mov
scas
pop
out
jmp
and
jo
sub
pop
mov
in
outsb
pop
pop
mov
orb
fisubl
jp
es
xor
mov
jmp
and
pop
push
cmp
xchg
stc
testl
adc
pop
pop
ret
lock
mov
xor
jbe
in
sbb
jo
lods
nop
xor
mov
or
adc
cld
add
adc
cmp
ss
and
mov
xor
xor
lods
pop
pop
add
sbb
out
pop
lret
pop
cmp
push
aaa
pop
pop
mov
jle
out
sahf
and
xor
pop
jo
insl
add
add
jle
push
and
data16
jnp
nop
aam
lahf
sub
ds
iret
ja
push
lahf
lret
mov
ss
add
or
lea
sbb
inc
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
jmp
fdiv
sub
mov
or
rcrl
sbb
adc
sbb
add
enter
jecxz
mov
cmovb
addb
inc
dec
cmpb
fadd
scas
inc
dec
enter
mov
sbb
xchg
sar
xchg
mov
push
and
leave
mov
inc
out
ret
sbb
clc
cld
bound
andnps
scas
push
pop
int3
sbb
or
fstpl
hlt
jno
ret
push
enter
andl
mov
sub
lods
cmp
inc
mov
int3
add
int
lods
std
cmpsl
xchg
jo
sub
dec
xchg
dec
mov
int3
sub
inc
cmp
cmpsb
lea
and
orb
std
or
cwtl
push
shrb
test
cmpsl
or
jns
sbb
mov
lret
push
lds
sar
lret
test
rorl
adc
mov
sbb
imul
pop
inc
pop
addb
sub
and
pop
scas
pop
mov
shlb
jl
or
inc
dec
cwtl
mov
repz
lea
dec
imul
sub
inc
das
add
incl
daa
add
jmp
icebp
lds
rolb
mov
or
mov
in
push
mov
addr16
jmp
and
adc
js
and
pop
inc
mov
add
daa
xchg
xor
sub
cmp
dec
inc
dec
inc
popf
popl
xcrypt-ctr
cmpsl
fiadds
mov
or
insl
push
cmp
fcmove
or
movsb
enter
cmc
push
stos
cmp
movsl
push
adc
adc
jne
fldl
inc
push
mov
sar
pop
in
xor
imul
jae
jecxz
stos
xchg
ret
mov
test
loopne
movsb
stos
addr16
fimuls
xchg
movl
mov
scas
or
cmp
mov
test
mov
lods
ds
mov
dec
mov
out
xchg
sarl
fsubp
sub
dec
orl
dec
sarb
cwtl
inc
jecxz
push
mov
mov
jg
dec
test
mov
cs
fistpl
add
pushf
stos
mov
mov
xchg
cli
mov
and
xor
xchg
mull
mov
lock
in
sbb
cmpsb
cmc
mov
add
shll
sarb
cli
push
out
stos
int3
andl
mov
mov
jno
jl
test
mov
sub
cmp
mov
mov
sbb
add
pop
xor
out
mov
mov
or
stos
xor
or
or
aas
dec
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
out
mov
stos
mov
mov
int
sbb
adc
sbb
cld
fbstp
mov
nop
insb
repnz
sub
or
adc
addl
int3
imul
lods
mov
dec
inc
push
and
mov
test
imul
inc
aam
push
movsb
push
ucomiss
push
popf
cli
jo
jbe
push
mov
mov
fiadds
or
int
adc
rclb
ss
ljmp
cmp
push
push
inc
push
lahf
in
repnz
mov
jbe
jp
subb
adc
push
daa
inc
mov
pushf
mov
int3
insl
inc
push
jmp
push
mov
jns
movsl
lods
std
imul
ret
fisttps
jg
xlat
or
imul
xor
jo
sbb
sti
leave
cmpsb
js
push
inc
or
lcall
mov
cld
pop
lds
and
push
mov
add
or
ds
xchg
adc
dec
cmp
xchg
es
mov
outsb
int
ljmp
xchg
add
lea
fsubrl
push
outsb
pop
mov
and
xchg
mov
xchg
cwtl
and
mov
push
cli
or
inc
and
and
sbb
loope
mov
sbb
idiv
mov
jns
push
imul
mov
test
pop
add
and
and
jne
jecxz
xchg
dec
popa
shl
sub
cs
cwtl
ficoms
or
and
xchg
add
adc
inc
xchg
aad
add
xor
rol
aaa
insb
push
adc
cld
sub
arpl
pop
jnp
je
pop
addr16
pop
adc
arpl
jl
inc
mov
mov
push
xchg
mov
ljmp
push
dec
je
fistpl
mov
adc
cmp
jp
inc
push
pop
ret
icebp
cmp
ds
sbb
and
add
scas
imul
mov
or
es
jns
in
rclb
adc
mov
adc
ja
cmp
push
xor
adc
adc
add
aaa
cmp
and
add
and
rcrb
jmp
jae
lock
cmp
cwtl
xchg
daa
dec
scas
jp
scas
sbb
push
jne
jle
jno
rclb
test
pop
dec
cld
dec
adc
inc
les
sti
mov
xchg
lds
push
pop
movsb
xchg
push
scas
out
inc
mov
push
mov
or
outsb
cs
imul
lock
inc
pop
jae
lret
mov
cs
mov
cmp
je
mov
sub
mov
mov
jmp
dec
lret
repz
cmp
fildl
mov
mov
sbb
and
sbb
cwtl
loopne
dec
push
pop
pop
push
jo
lea
leave
or
mov
and
mov
mov
int
inc
mov
mov
and
std
scas
mov
out
cli
cmpl
cmp
inc
fisubl
jle
mov
jp
mov
dec
dec
or
ljmp
add
push
cmc
clc
cmp
jb
jp
aaa
jl
mov
aad
cmc
aaa
inc
loop
sub
mov
or
adc
test
pop
nop
aas
xchg
mov
in
dec
cmp
cli
mov
jge
das
inc
je
dec
inc
imul
xor
cld
subb
or
data16
dec
jne
jle
adc
out
push
pop
inc
inc
jmp
adc
cmc
ss
mov
shll
enter
out
mov
stos
fisubl
repz
and
push
push
adcb
ror
cmp
fdivrl
xchg
adc
jbe
stos
insb
cmc
mov
mov
push
dec
inc
xchg
dec
mov
sbb
pushf
cmc
aad
jbe
loop
sbb
scas
pop
adc
pop
inc
popw
fsubl
mov
arpl
andb
aas
xor
ret
mov
jno
das
lea
jnp
jae
cmpsl
insb
mov
mov
pop
stos
insl
fdivl
scas
shrl
testl
sbb
jo
test
jge
and
sbb
sub
js
icebp
rorl
subl
loope
int3
out
pop
in
test
xlat
cli
into
lret
xor
and
pop
test
mov
cmp
jbe
xor
and
and
imul
es
mov
lret
pop
lock
mov
shll
shl
xor
and
rol
jo
out
push
inc
aad
daa
mov
sub
mov
std
inc
scas
mov
xchg
mov
push
in
mov
scas
lods
insb
ret
lock
aam
cmp
fucom
data16
jmp
inc
test
push
adc
push
divb
mov
or
lahf
push
stos
in
xchg
add
or
das
cmpl
xchg
test
ja
fcomps
add
les
cmp
push
or
faddp
dec
cmpsl
ficoml
rol
jno
aam
dec
xor
cmp
aad
call
repz
adc
dec
xlat
dec
mov
ds
mov
cmpb
popf
push
notb
dec
flds
stos
repz
hlt
xor
int
iret
mov
xchg
dec
sar
je
sbbl
sbb
int
jo
sahf
push
adc
cmp
lock
inc
dec
adc
pushf
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
iret
xchg
ret
or
cmp
jo
enter
rcrl
and
sbb
lahf
nop
es
ret
fisubl
mov
mov
xchg
loope
inc
mov
inc
mov
push
pop
fcoms
scas
das
push
pop
test
cmp
mov
jns
clc
outsb
in
add
mov
sti
jo
mov
daa
xchg
mov
dec
and
jmpw
ds
dec
inc
mov
pop
push
roll
repz
lahf
iret
les
rclb
pop
push
sub
mov
ds
adc
ss
inc
jo
decb
adc
xor
jo
int
lahf
mov
mov
aaa
jae
leave
jge
stc
xor
sbb
orb
and
and
rorb
or
in
and
iret
je
loopne
dec
lods
cmp
cld
jle
sub
mov
addb
lcall
fcoml
pop
or
push
add
push
cmpl
xlat
xor
popf
or
ficompl
clc
jno
xchg
or
jecxz
data16
mov
sahf
jnp
xchg
xchg
mov
pusha
and
push
imul
push
cli
daa
mov
push
popa
inc
lods
mov
jmp
in
hlt
dec
mov
or
add
orl
or
pusha
cmpsb
push
in
add
loop
mov
roll
syscall
cmp
xor
lea
sbb
inc
mov
pop
or
movsl
iret
std
js
jae
stos
xorl
fstps
mov
sub
outsl
mov
out
je
les
ret
test
lea
outsl
loop
cmp
mov
leave
in
xchg
or
rclb
enter
filds
push
arpl
fiadds
test
and
ljmp
jnp
pop
or
ja
ss
push
ds
xchg
mov
adc
xchg
cmpsl
inc
or
push
push
lea
bound
ficompl
push
sbb
scas
ljmp
lcall
in
sbb
icebp
mov
test
sub
xor
sbb
mov
push
inc
push
int3
loop
out
mov
fsubrs
aam
dec
sub
push
mov
sub
pop
imul
push
jle
jg
iret
je
sbb
sahf
pop
add
jg
xlat
fs
push
repz
aad
cmp
sub
sahf
dec
adc
xchg
or
dec
mov
push
jmp
movsl
mov
pop
xchg
sbb
xchg
dec
pop
dec
iret
dec
dec
sub
add
in
or
push
lret
and
rcrl
push
clc
jecxz
add
mov
cwtl
ret
add
push
mov
inc
mov
mov
dec
js
pop
mov
push
xor
or
mov
mov
xor
jmp
fstps
cmp
and
pop
xchg
rcrb
mov
mov
sbb
inc
adc
xor
sahf
enter
jl
gs
pop
in
inc
sub
outsl
and
into
out
movsb
xor
or
xor
sarb
notb
or
push
ljmp
das
outsl
aam
jo
sahf
inc
stc
push
iret
and
add
mov
fisttps
or
add
cmp
lea
and
out
out
mov
push
inc
jns
pop
inc
and
pushf
shll
rcr
cld
fisubl
jnp
jns
mov
and
jg
xchg
dec
insl
pop
scas
jecxz
cmp
in
pop
cli
or
cmp
xchg
adc
insl
nop
pushl
jmp
std
es
xor
int3
mov
es
dec
sbb
test
adc
movsb
sarb
inc
pop
subl
aaa
push
xchg
push
lahf
das
xlat
xor
inc
mov
loopne
and
arpl
inc
sbb
out
rorb
fadds
ljmp
fildl
mov
mov
insl
jle
in
pop
test
push
repnz
lret
outsb
ficomps
pop
add
lahf
iret
adc
and
bound
sub
adc
jns
adc
push
test
addr16
xor
xor
jae
inc
out
mov
cmpsl
pop
and
sbb
cmp
dec
sbb
push
movsl
aas
sub
repz
mov
shr
dec
pop
lds
mov
xlat
add
xchg
push
fptan
dec
addl
push
roll
fwait
outsb
jge
fwait
cs
pop
insb
mov
fsubs
mov
inc
call
add
add
push
fisubrs
std
fdivrl
pop
cmp
mov
xor
out
aam
add
mov
or
push
jge
pushf
push
jl
pop
cmp
add
cmp
cmp
test
lds
test
push
mov
or
aad
into
aas
roll
scas
lahf
decb
jbe
mov
bound
repnz
scas
cmpl
push
push
mov
push
mov
sub
mov
dec
sbb
scas
xlat
push
adc
test
mov
js
inc
fmull
les
cmpb
lea
push
inc
mov
sbbb
pop
in
jo
sbb
jl
or
lea
mov
stos
cli
jge
and
push
pusha
fmull
adc
dec
rorb
movsl
add
movlps
loop
stos
loope
add
pusha
xlat
sub
clc
popa
hlt
outsb
shll
nop
imul
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
jmp
daa
into
dec
cli
sbb
sub
dec
adc
and
sbb
push
sub
in
mov
test
push
arpl
lock
jne
dec
sbb
sbb
and
out
jp
jbe
incb
mov
cwtl
cwtl
js
aam
cmpsb
dec
aad
mov
les
in
ss
mov
scas
scas
push
jl
push
add
pop
sub
iret
cmp
arpl
sarl
push
mov
movsb
scas
xor
test
mov
call
jge
and
stc
in
cmp
mov
fptan
dec
and
push
imul
dec
mov
popa
icebp
jl
int
out
scas
sbb
cwtl
mov
inc
and
sbb
and
mov
repnz
aad
data16
jge
sub
in
xchg
aas
cld
push
into
mov
enter
inc
cmp
jecxz
and
jns
dec
adc
aam
inc
mov
out
cmp
nop
push
or
or
aam
and
add
mov
sub
xor
stos
xchg
jmp
sbb
ljmp
cmp
aas
xor
cmovg
mov
mov
inc
stos
in
fwait
ret
xor
xchg
sar
mov
push
cmp
cmp
lods
cmc
lock
test
sbb
test
insb
jae
insb
pop
adc
xchg
dec
lret
sub
cld
add
ljmp
sub
dec
aaa
test
mov
leave
arpl
lds
iret
cmp
cld
test
cmp
loop
aam
push
in
or
mov
adc
out
add
mov
push
mov
push
and
inc
cld
pop
hlt
cmp
push
add
ret
imul
loope
out
xor
xchg
dec
das
dec
aad
sub
mov
movsl
flds
pop
rclb
outsb
addr16
mov
push
jnp
pusha
or
das
push
add
sub
ror
fdivrl
xor
gs
stos
mull
push
outsl
sub
xchg
test
icebp
shl
cmp
or
add
fsubp
xchg
push
popa
add
sahf
sbb
mov
addl
out
ljmp
out
test
xchg
test
scas
add
dec
in
jns
mov
cld
sahf
push
shl
cmp
bndldx
pop
sarl
lret
sahf
mov
and
add
xchg
sub
push
mov
hlt
mov
ja,pt
pop
hlt
push
pop
insb
cmp
inc
mov
adc
mov
sbb
add
out
push
xchg
dec
stc
adcb
ds
mov
stos
pop
repnz
movl
aam
mov
sbb
add
inc
inc
lret
dec
lret
inc
dec
and
mov
test
sbb
and
sbb
inc
sub
shll
jae
push
fxch
lret
jge
add
aas
loop
call
out
xor
lock
mov
aam
dec
test
pop
aas
mov
imul
fsubrl
pop
or
std
popf
inc
cmp
in
aad
pop
rcrb
mov
mov
add
sbb
mov
mov
mov
std
pop
sub
lahf
and
and
sbb
addb
lds
pop
or
adcb
rorb
rcrl
insl
jmp
pop
cmove
mov
and
jae
mov
or
jns
outsl
pushf
sbb
mov
sbb
mov
push
and
js
push
aam
mov
xor
int3
je
cmp
cmp
and
cltd
cmpl
sbb
jecxz
mov
mov
loopne
pop
cmpsb
pop
scas
stos
mov
mov
pop
jne
int3
sbb
ds
les
or
out
test
xor
and
jle
cld
xor
lret
inc
fimuls
xor
sti
sbb
repnz
stos
clc
sbb
lret
xchg
mov
adc
sub
fldt
sub
je
addr16
icebp
or
mov
mov
out
scas
lds
xor
andl
shll
lahf
sahf
adc
int
imul
inc
cmp
jmp
insb
push
push
sbb
ljmp
fimuls
stos
jmp
jle
mov
adc
icebp
addr16
or
pop
cmp
adc
in
mov
lret
dec
loop
test
stos
mov
por
sbbb
xchg
es
push
mov
cmp
sub
xchg
adc
ds
push
mov
mov
mov
movb
bound
add
call
mov
lea
ljmp
mov
jb
adc
outsb
mov
xchg
cli
stc
xchg
aaa
gs
push
call
addr16
in
cmp
imul
xlat
xorb
adc
lcall
push
in
bswap
js
clc
push
fimuls
xchg
and
pop
popl
dec
flds
cmp
sbb
mov
test
xlat
pushf
test
dec
sub
lahf
mov
push
pushf
test
mov
cmpsb
sub
shlb
jp
sbb
adc
and
cmp
xchg
outsl
mov
ret
mov
aam
inc
jo
aaa
mov
push
cmp
push
rorb
fmul
insl
lret
mov
xchg
jg
leave
push
push
fldt
and
insb
bound
pushf
or
gs
daa
inc
cmc
xor
xor
aad
ret
cltd
mov
add
rol
loopne
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
jmp
mov
int3
xchg
sbb
dec
fstpt
push
inc
push
test
sbb
xchg
mov
pop
std
push
mov
das
cmpsb
mov
mov
mov
push
xlat
jns
dec
lods
add
jns
fdivs
std
ja
mov
push
stos
fdivr
xor
xor
cli
test
xchg
mov
mov
repz
and
fstpl
pop
adc
mov
dec
movsl
xor
push
ss
lret
popf
lret
and
jmp
in
repz
xchg
pop
jge
push
xor
cld
fwait
scas
test
test
int
sub
dec
imul
test
nop
jg
jns
aaa
and
and
push
mov
pop
xchg
pop
loop
mov
jmp
addb
outsl
adc
add
mov
cmp
jnp
push
and
mov
enter
fmul
push
ficomps
cli
sbb
add
js
or
xor
lods
or
mov
js
sub
xchg
or
add
cmpsb
lret
cwtl
lods
inc
sarl
std
xor
pushf
movsl
mov
add
jge
and
push
popa
repz
push
jg
xor
mov
jbe
ret
push
push
dec
dec
mov
sub
adc
push
inc
lret
cwtl
cmp
push
jl
in
mov
lret
sub
hlt
out
inc
inc
mov
cmp
inc
daa
frndint
cmpsl
lcall
pop
test
mov
lret
lahf
pusha
shll
sub
sub
mov
lahf
fstpt
cwtl
outsl
fdivrl
cmp
dec
mov
dec
and
fbstp
clc
push
clc
jae
icebp
jns
cmp
sahf
adc
jo
pop
inc
mov
outsl
inc
shrb
mov
sarl
sub
xlat
mov
aaa
cwtl
adc
cmpsb
mov
dec
mov
push
add
xchg
mov
xchg
fdivl
test
mov
addr16
cli
inc
and
pop
sub
dec
xchg
dec
inc
pushf
jle
push
sbb
insl
inc
aad
cld
pop
jbe
xchg
lret
or
inc
das
add
lcall
rcr
das
loopne
inc
and
stos
stos
jbe
push
out
js
jle
test
push
xchg
dec
add
pop
pop
or
and
cmp
cli
push
icebp
xchg
xchg
movsw
push
sub
inc
cwtl
push
lea
lahf
cmc
xadd
mov
lret
mov
fwait
movsb
and
inc
xchg
daa
xor
fsubs
decb
movsl
fwait
adc
out
dec
mov
aaa
adc
fisttpl
jo
int
push
das
aad
in
sub
insl
in
insb
incb
insl
adc
pop
dec
mov
adc
add
cli
adc
sub
int3
jp
test
xchg
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
jmp
subl
pop
rclb
inc
push
mov
sbb
cmpsb
and
in
nop
xchg
loopne
ljmp
add
xor
add
xor
or
fisubrl
das
xor
jg
nop
aam
movsl
repnz
mov
lock
out
nop
loop
mov
inc
inc
jmp
pop
mov
filds
adc
sbb
pop
jnp
adc
mov
inc
pop
ret
stc
es
sbb
lea
test
in
pop
and
jl
stos
std
lahf
mov
push
sbb
mov
and
fsubrs
sti
in
cmp
adc
jmp
mov
fstpt
pop
fildll
jl
pusha
mov
hlt
aaa
enter
sub
xchg
and
inc
pop
jae
push
fidivrl
bound
fstpl
sub
sbb
push
mov
hlt
dec
int
lahf
ljmp
out
lods
adc
lock
aad
pop
hlt
sti
loop
jle
xchg
stc
repnz
ja
inc
stos
arpl
cmpsb
jle
outsl
sbb
mov
lods
mov
js
movsb
add
jge
popa
js
inc
cmovno
sub
scas
shrb
inc
imul
js
sti
cmpsl
shl
inc
ss
cwtl
repz
mov
jno
mov
push
lods
pop
jge
test
xor
les
dec
mov
xchg
dec
and
fdivrl
sub
jmp
out
sub
push
sbb
lret
inc
pop
loop
sbb
in
sub
sbb
sbb
insl
push
cmp
insl
pop
test
leave
xor
push
sub
sbbl
fnstsw
push
ret
sub
roll
in
mov
or
in
sub
pop
mov
push
mov
sbb
rorl
cmp
shrb
sahf
jp
mov
das
adc
icebp
cmp
jb
dec
pop
lods
cld
nop
add
loope
push
jbe
jns
cs
jle
sbb
sub
add
sbb
pusha
loop
xorb
pop
mov
cmp
mov
cmp
sbb
aam
test
aam
jle,pt
loope
jg
shrl
mov
adc
push
jae
loope
fsubs
xor
mov
sahf
mov
ja
out
jb
ret
mov
clc
dec
lcall
xchg
sub
lcall
adc
pop
fisttpll
or
push
mov
fs
xor
mov
mov
adcl
arpl
push
push
jp
sbb
pop
scas
adc
hlt
test
lahf
and
lahf
cmp
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jmp
lock
or
dec
loopne
pop
ret
scas
sbb
rcrb
sbb
fdiv
divl
cli
mov
ret
xor
aaa
inc
lahf
cmpsb
fdivs
mov
adc
xchg
lcall
mov
outsb
fcmovnbe
test
cltd
push
fwait
jmp
scas
cmpl
xor
sub
loopne
pushf
or
xor
dec
test
fdivrs
mov
jge
fcmovnb
add
or
dec
jp
lea
clc
cwtl
mov
jnp
jg
push
inc
mov
fcoms
pop
pop
push
ficomps
mov
xchg
and
pop
and
xchg
fidivl
arpl
jge
aaa
push
in
insl
pop
jmp
push
js
mov
xchg
mov
mov
imul
xchg
scas
mov
mov
int
and
or
cmc
add
mov
mov
in
dec
jnp
cmpsl
add
in
ret
pop
cmc
out
fsubrl
and
insl
std
adc
inc
popa
xchg
adc
cld
xlat
sub
iret
pop
out
jmp
jl
enter
mov
cmp
mov
in
rol
stos
xor
and
js
xchg
sti
sub
xor
mov
xor
ja
xor
adcb
pop
mov
lahf
or
outsl
mov
fbld
pop
shrl
into
ret
fidivl
add
fwait
rclb
jns
xor
and
shrl
and
mov
and
mov
adc
inc
mov
sub
loope
scas
outsl
jne
test
sbb
std
mov
cmp
mov
push
repnz
rcr
gs
cmp
in
clc
sub
dec
jp
loop
pushf
ficoml
push
xchg
pop
mov
ljmp
pop
add
cmc
shrl
rolb
push
pusha
fidivl
xor
in
xchg
aas
mov
jle
out
and
test
mov
inc
pop
inc
dec
int3
decl
shrl
xor
add
pushf
xchg
mov
sbb
and
icebp
pop
xchg
xchg
mov
pop
mov
insl
cmovnp
dec
movsb
push
or
adc
cld
xchg
decb
push
mov
mov
and
or
in
cs
and
dec
mov
dec
inc
push
pop
push
shlb
pop
sbb
sti
test
mov
mov
fidivrl
mov
jl
bound
flds
repnz
test
and
mov
addr16
sub
lds
jle
arpl
xor
xchg
or
imul
xchg
push
lock
adc
pop
fdiv
and
mov
and
out
jg
mov
scas
jae
ret
aad
mov
popf
pop
in
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
jmp
fdivr
fists
ss
shlb
jl
xchg
sbb
and
sbb
sahf
mov
dec
js
mov
add
arpl
std
cmp
imul
pop
faddl
mov
pop
jae
adc
add
out
sbb
or
push
cmp
jne
and
push
dec
adc
add
xor
inc
stc
add
mov
cmpsb
mov
out
cmpsb
shrb
and
sub
pusha
mov
mov
sahf
scas
lret
scas
mov
scas
dec
cmp
jbe
lock
adc
mov
stos
jne
xchg
mov
test
xchg
mov
jge
mov
mov
mov
and
adc
loope
leave
and
add
mov
test
or
fcomps
lea
sbb
add
lea
inc
and
push
push
or
inc
dec
ror
inc
ljmp
cmp
pusha
scas
pop
sbb
mov
pop
je
push
sti
rcrb
ja
dec
add
aas
rolb
out
dec
pushf
idiv
lea
xchg
fwait
adc
call
data16
inc
rol
dec
iret
cmp
pushf
pop
daa
pop
mov
inc
inc
jne
shlb
mov
fsubs
mov
loop
fidivrs
stos
enter
pushl
ret
xor
xchg
xchg
ret
lahf
insl
dec
popf
out
and
int3
pop
pop
mov
push
aaa
fmull
push
inc
repz
mov
lods
push
pop
test
lcall
in
pop
jge
repnz
mov
enter
dec
pop
lods
push
mov
stos
dec
or
jne
nop
fsubrs
add
out
and
and
mov
lret
jne
jns
idivl
push
cmp
add
mov
je
sbb
dec
lret
sbb
mov
fadd
fcoms
out
fsts
in
fidivs
xchg
or
mov
test
clc
pushf
sbb
fs
mov
fst
and
sub
addr16
cmpsb
push
push
mov
lods
xor
push
push
xlat
into
test
lods
jmp
add
dec
push
lods
ljmp
cmp
cmp
xor
sbb
scas
pop
mov
lret
fs
push
clc
fiaddl
push
push
and
popl
stc
adc
and
pushf
repz
push
jge
mov
add
leave
sub
mov
mov
adcl
pop
shll
popf
push
sbb
lret
or
xchg
or
popf
pop
xor
jo
push
fdivl
adc
push
xlat
add
xchg
mov
outsb
and
mov
daa
in
std
ljmp
pop
or
sub
mov
add
add
sbb
push
push
out
push
push
inc
push
xchg
sbb
and
sbb
dec
mov
hlt
push
mov
jns
jmp
fsubs
mov
gs
xchg
rorl
stos
pop
or
repz
sbb
sbb
mov
fwait
fs
xchg
jecxz
aaa
dec
xchg
mov
movsl
add
jae
fisubs
dec
inc
pop
push
dec
mov
inc
adc
inc
hlt
out
sub
fists
push
outsl
mov
inc
add
les
out
into
leave
lods
pop
dec
rclb
and
sti
add
ja
mov
xlat
mov
push
and
push
mov
jnp
test
into
mov
loop
orl
pop
xchg
imul
xor
dec
pop
dec
mov
xchg
inc
iret
xor
out
or
inc
in
ds
jmp
xchg
xchg
add
jge
js
inc
pop
je
jge
pusha
aad
sti
std
lret
lret
add
push
les
lods
adc
ja
jge
movsb
xlat
ja
rorl
shrl
inc
enter
and
push
dec
sarl
push
jns
pop
xchg
jle
sti
pop
insl
mov
and
push
jge
leave
mov
leave
dec
mov
xor
cs
sub
sub
loopne
and
addr16
add
aas
pusha
and
int
cmc
add
outsl
xchg
scas
fldt
add
ljmp
cld
xchg
imul
fwait
xor
loop
xchg
xor
mov
push
or
mov
fiadds
or
test
call
loop
loop
mov
rcr
lds
dec
push
je
xchg
idivl
scas
mov
xor
sub
sar
shrb
cmp
mov
adc
stos
loopne
push
mov
or
cltd
cmp
xchg
add
xchg
push
outsb
and
and
push
mov
fdivrl
repz
out
fs
jo
andl
jo
dec
sbb
push
addr16
dec
inc
mov
rclb
lret
sub
pop
cmp
inc
or
ss
push
lods
cmp
cmc
push
insb
shll
fstl
mov
pop
aam
pop
pop
mov
andb
nop
and
rorb
push
stos
nop
addr16
mov
inc
xchg
dec
sbb
out
ljmp
push
or
enter
push
nop
cmpsl
or
jnp
in
jae
or
push
in
mov
mov
sbb
stos
push
sar
xchg
and
pop
adc
mov
and
inc
mov
add
xor
loope
jmp
adc
data16
inc
addr16
add
mov
xchg
mov
pop
sbb
orb
ret
hlt
and
adc
inc
or
enter
add
or
mov
or
mov
mov
xor
mov
jmp
push
sub
fldt
mov
mov
fmuls
sbb
pop
inc
lahf
das
mov
mov
sub
cmp
jnp
not
mov
mov
xor
loope
sub
push
or
push
in
sub
jbe
cmp
shrl
mov
mov
adc
adc
test
fcoms
jp
cmp
out
adc
movsb
mov
mov
and
push
sub
and
test
xchg
push
jg
cli
push
push
cmp
pop
add
push
imul
xchg
ds
pop
lret
adc
sbb
pop
in
pop
fwait
sbb
dec
mov
nop
adc
test
stc
jb
xor
and
and
ret
sub
stc
mov
shrb
fists
adc
imul
dec
jo
jecxz
add
xchg
inc
xor
scas
cmp
mov
sbb
jecxz
loop
push
lock
daa
sub
adc
jmp
push
cmp
dec
cmp
xchg
hlt
ja
test
jmp
inc
or
ds
pop
cmp
mov
xor
push
mov
push
xchg
mov
les
sub
jmp
cwtl
mov
in
mov
rep
xchg
xchg
xor
ret
jnp
stos
inc
ljmp
into
xchg
clc
int3
cld
inc
add
inc
pop
mov
cmp
inc
pop
shlb
cmp
movsl
push
pusha
inc
mov
sarl
lcallw
dec
lods
inc
and
loopne
shll
lea
into
insl
into
inc
mov
in
push
sbb
and
mov
lret
mov
mov
and
xchg
push
lods
je
shll
lods
or
int
mov
mov
cmp
cltd
sbb
icebp
lret
sub
pop
aaa
mul
cmpsb
pop
jmp
push
daa
fcoms
xchg
sahf
imul
js
xchg
fimuls
call
pop
outsb
mov
in
stc
pop
push
adc
cmc
jbe
stos
lea
movsl
pop
mov
add
repnz
push
aad
ljmp
push
xor
sbb
dec
aas
imul
movsb
je
lahf
vmovsd
fidivrs
mov
push
movsb
aaa
push
adc
cwtl
dec
xchg
and
mov
or
mov
jge
loope
mov
repz
mov
adc
inc
or
lcall
lods
add
inc
leave
dec
movsl
xchg
int
jnp
shr
push
ljmp
test
mov
std
xlat
sbb
sub
push
pop
xchg
jmp
out
adc
and
xchg
fwait
cwtl
fiaddl
popf
xchg
mov
xor
pusha
push
arpl
enter
add
movsb
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
imul
fs
leave
leave
jl
push
cli
mov
and
sbb
cmpsl
clc
int3
or
pop
inc
xor
clc
lret
adc
sbb
loop
lock
rorl
add
call
subl
xchg
outsb
add
adc
or
xchg
jne
adc
xchg
xchg
jle
mov
sbb
pop
std
jo
imul
cwtl
pop
out
push
popa
insl
jge
add
lds
loope
sarb
loop
shll
fcmove
in
xor
rclb
outsl
fdivrs
aaa
pushf
sbb
lcall
shrl
fwait
test
dec
mov
jp
sbb
mov
sub
addr16
mov
shlb
inc
dec
xchg
inc
mov
jno
js
fsubrs
xor
out
dec
add
stos
mov
fs
mov
pop
ror
jle
xor
sbb
or
pop
movsl
out
mov
jmp
test
adc
push
mov
imul
outsb
subb
stc
movsl
cs
repnz
popa
pushl
mov
call
arpl
lea
inc
scas
rorb
inc
cltd
icebp
cmp
sub
icebp
mov
pop
pop
mov
je
ds
rclb
aad
mov
dec
ret
leave
push
add
lcall
jbe
jge
sub
pop
popf
xchg
loop
dec
leave
fcmovnb
adc
test
sub
mov
int
cmp
mov
push
adc
inc
jbe
xchg
adc
pop
jp
mov
inc
jo
cmc
loop
shrl
mov
dec
std
mov
and
fcompl
in
lds
or
test
sub
scas
imul
in
or
mov
aam
adc
mov
or
ljmp
loopne
mov
outsl
or
mov
and
pop
mov
mov
daa
mov
div
inc
in
add
cmp
mov
push
jmp
pop
jg
int
ljmp
into
mov
xor
movsl
xor
add
je
rcrl
xchg
mov
push
mov
negb
in
jns
and
popa
fwait
add
pop
mull
mov
inc
icebp
mov
fdivs
lahf
dec
push
leave
popa
mov
mov
icebp
jae
pop
inc
push
or
shlb
hlt
inc
add
lods
push
inc
cmp
fcomp
hlt
fld
mov
pop
or
cmp
inc
sub
lahf
push
and
imul
adc
hlt
pop
in
bound
xor
mov
add
movsl
and
push
outsb
add
call
push
dec
imul
in
cs
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
jmp
dec
sbb
jmp
dec
mov
mov
and
sbb
mov
out
mov
mov
loope
in
and
mov
mov
insb
jg
jle
out
fisttpll
adc
mov
call
popf
shll
pop
jo
xlat
outsb
add
aad
pop
sbb
aad
sub
pop
mov
pop
pop
jle
cmp
ret
bound
mov
shlb
xor
xchg
lods
pop
fnstcw
jp
push
ja
and
mov
movq
ret
call
pushl
pop
gs
dec
push
pop
mov
mov
ljmp
divl
pop
lret
cmpsl
pushf
jne
lea
mov
ljmp
cmpsl
daa
je
lret
stc
in
gs
jge
outsb
add
nop
mov
cmp
xchg
jecxz
popa
popa
or
int3
push
cwtl
cwtl
xchg
addr16
out
and
push
adc
jbe
shll
insb
sti
cwtl
stos
insb
ret
pushf
mov
mov
rcl
adc
push
sti
xchg
leave
dec
dec
fadds
syscall
pop
xor
xchg
fwait
packssdw
cmp
das
cwtl
rolb
fdivrl
jnp
xchg
lea
outsl
and
sub
add
inc
sub
mov
leave
fsubrl
aaa
insl
cmc
les
dec
or
adc
jl
call
cs
mov
xchg
int
sbb
jmp
sbb
in
popa
mulb
xchg
and
dec
into
sub
pushf
or
mov
or
pop
and
aaa
jo
ja
mov
sub
pop
insb
push
incb
out
addr16
inc
xorb
add
pop
loop
fdiv
dec
gs
fst
fildl
mov
mov
push
out
xchg
test
neg
pushl
dec
dec
stc
fcompl
inc
mov
lret
xchg
in
or
mov
aad
js
cwtl
cmpb
pop
repnz
jo
mov
in
mov
adc
push
jmp
inc
inc
call
jle
mov
enter
adc
push
mov
lahf
sub
xor
lret
mov
call
mov
adc
lcall
aam
sub
mov
adc
lods
mov
inc
jle
inc
pusha
icebp
loopne
sub
sub
insl
in
adc
cmp
arpl
movsl
in
cmp
into
lods
mov
adc
in
dec
int3
dec
inc
sbb
scas
and
cmpsl
mov
int
jmp
adc
test
imul
jne
les
inc
movsb
popa
inc
ret
clc
pop
mov
jmp
gs
sbb
fidivrs
mov
inc
pushf
pop
popf
jmp
xchg
cmpsb
push
xor
add
cmp
ja
jns
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
jmp
mov
mov
sub
jle
mov
sbb
adc
sbb
adc
into
imul
xor
xor
mov
pop
cmp
ffree
aaa
cld
jno
mov
inc
aam
dec
in
mov
out
call
std
adc
scas
lea
mov
rcl
mov
scas
dec
mov
cmpsl
test
mov
pop
push
aas
push
daa
jb
and
pop
mov
iret
pop
out
and
dec
js
fisubl
mov
jno
cmp
mov
insb
sub
mov
jmp
stos
int3
call
push
fmuls
mov
cmp
adc
mov
jo
cs
xor
clc
jmp
jecxz
lcall
ds
call
push
call
and
dec
rorl
jbe
dec
aad
mov
inc
aaa
or
pop
mov
cld
ret
and
or
into
std
and
sbb
in
adc
cmp
mov
adc
xchg
imul
sbb
push
sbb
psubw
mov
daa
push
cltd
out
scas
xor
inc
mov
inc
arpl
adc
jmp
push
and
mov
jno
pushf
jl
add
or
pusha
je
popf
xorb
inc
loopne
stos
xchg
mov
pop
inc
cltd
adc
sbb
sub
inc
sub
jae
pop
sbb
or
aaa
in
add
cmp
pop
lods
cmpsl
dec
mov
lahf
sub
mov
lock
adc
jo
ss
pop
sbb
daa
out
dec
sbb
xchg
rol
dec
lcall
mov
ljmp
test
xor
add
mov
imulb
pop
jbe
arpl
push
push
ljmp
and
dec
inc
pop
mov
sbb
push
mov
jle
call
xchg
push
cli
es
mov
add
push
jmp
mov
ds
jo
pop
movsb
pop
jmp
cmp
jmp
mov
movsl
rol
pop
iret
and
xlat
loop
rcr
cmp
push
test
xor
call
or
data16
movsb
popf
xchg
dec
incl
jge
or
cmp
jns
mov
xchg
test
out
shll
inc
push
lds
jno
scas
stos
xchg
aad
lret
mov
pushf
or
jg
pop
sarl
in
pushf
fidivrl
push
outsb
sub
inc
test
xlat
das
test
ret
xchg
roll
enter
push
sub
xor
push
xchg
inc
inc
adc
pop
cwtl
and
fcoml
mov
sub
add
test
shrl
std
loop
inc
jmp
in
and
adc
push
or
xchg
mov
mov
mov
mov
xor
or
mov
shll
xor
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
loope
fidivs
insb
pop
pop
dec
xlat
mov
stc
jae
sbb
adc
sbb
in
adc
and
sbb
xor
add
adc
adc
pusha
cltd
jle
cmpsb
in
inc
repnz
and
lret
stc
mov
out
test
cmp
int3
or
cmp
repz
loop
jle
inc
mov
dec
jl
push
sbbb
hlt
dec
mov
dec
repnz
cmp
imul
testb
nop
mov
in
dec
sub
lahf
divb
jecxz
and
xor
jne
mov
daa
into
sub
mov
psrlw
xchg
in
and
cmp
sub
test
movsb
or
pop
or
pop
pop
jge
push
push
lds
insb
xchg
imul
push
cmpl
xchg
repnz
leave
test
adc
scas
sbb
nop
jne
imul
cli
leave
pushf
aas
stc
pushf
mov
repnz
and
lcall
movsb
and
mov
movsb
mov
mov
and
aam
fiadds
in
loopne
inc
xor
mov
jge
or
imul
ret
jne
cmp
mov
shlb
push
sbb
aam
push
mov
add
push
js
test
dec
add
sub
mov
cmp
mov
stos
or
aad
dec
pop
sub
rcrb
jne
push
lret
or
pop
in
xor
adc
mov
cmpl
cmp
push
mov
mov
int
xchg
shlb
scas
and
pop
mov
es
int3
and
mov
lods
lock
or
or
push
insl
cmc
mov
mov
cltd
les
lods
clc
sbb
inc
xchg
out
test
add
arpl
xor
xor
push
insb
cmp
mov
loope
sub
or
into
push
sbb
add
dec
imul
mov
mov
dec
aad
xchg
jle
insl
insl
jge
add
in
flds
inc
sub
xor
sub
and
mov
int
les
fildl
push
subl
pushf
popa
lods
lcall
jecxz
xlat
pop
in
in
mov
lret
jmp
mov
xlat
lods
mov
pop
lds
mov
xchg
nop
mov
int3
cmp
jg
mov
punpckhdq
mov
cld
and
ss
add
pop
push
insl
stos
push
xchg
mov
dec
leave
lock
in
lahf
and
push
push
icebp
cmpsb
loope
repz
pop
mov
fstl
push
dec
cmp
movsl
and
jge
or
outsb
loopne
iret
jp
mov
mov
push
add
push
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
jmp
mov
pop
lcall
push
imul
hlt
dec
cmp
lods
fwait
and
jmp
pop
lock
addr16
inc
sahf
xchg
ja
push
das
xchg
mov
or
mov
sbb
pop
leave
inc
das
iret
out
popa
cmpsl
ss
mov
sahf
mov
ss
movsb
outsb
xchg
pusha
cmp
jl
xchg
bound
stos
int
or
dec
sub
lods
pop
fnstenv
jae
pminub
sbb
nop
mov
adc
jp
fwait
mov
mov
stos
ret
outsl
push
loop
pop
push
push
loopne
fists
adc
addr16
pop
adc
push
cmp
stc
pop
pushf
fwait
adc
cmpsb
fistpl
add
scas
cli
ret
cli
shlb
outsb
mov
idivl
lods
rorl
add
in
jb
add
pop
lea
stc
cmp
and
sbb
sbb
jno
in
addr16
jmp
jnp
mov
sub
inc
cmpb
cmc
cmc
xlat
jp
es
bnd
push
hlt
stos
les
pop
cmpsl
dec
cmp
mov
lods
aam
push
mov
in
inc
cmp
out
repnz
jle
cmp
adc
lcall
aaa
aaa
cmp
lcall
ja
jg
mov
dec
bound
mov
lea
fs
pop
add
mov
sub
imul
mov
es
repnz
mov
aam
ja
cmp
loopne
pop
sbb
xchg
out
cmp
int
push
test
lds
aas
fstpl
stos
cmc
imul
shlb
repz
dec
push
sub
in
lret
addr16
sbb
push
andb
xor
nop
out
push
sub
push
repz
ljmp
mov
in
xchg
sbb
lds
pop
lds
and
add
cli
scas
inc
adc
jecxz
cs
mov
mov
inc
das
ss
cltd
rcl
lret
mov
sub
stos
adc
xrelease
dec
and
xor
in
pusha
jns
sbb
dec
or
jae
js
loop
pop
push
or
out
push
dec
out
and
pop
inc
cmpsl
xor
push
popf
push
mov
out
sbb
scas
addb
insl
inc
int
repz
pushf
ret
pushf
scas
aas
movsb
sbb
loope
ss
sub
sub
or
jne
jns
pushf
bound
jno
jmp
ja
loopne
outsb
ret
into
lahf
cli
mov
and
push
pusha
pop
mov
pusha
push
incb
fists
mov
jnp
push
shlb
popf
call
popf
mov
pop
and
in
int3
mov
hlt
in
fstl
sbb
lods
shrd
shr
shr
jmp
and
push
sbb
push
xor
sbb
adc
sbb
insb
pop
push
je
ss
ss
ja
aam
xor
sub
leave
and
jge
js
loop
push
movb
jge
in
jns
pop
ja
call
xlat
mov
hlt
loop
cmp
and
or
call
xor
or
and
icebp
jl
mov
cli
dec
cmpsb
adc
aaa
shlb
adc
arpl
push
fisttps
popa
and
jns
mov
adc
adc
mov
enter
jmp
xor
fstp
inc
mov
xchg
xchg
sub
imul
xor
and
push
fisttpl
xchg
mov
jl
repz
xor
push
add
lret
mov
lret
cmpl
xchg
cltd
ret
lret
pop
bound
les
scas
sbb
aas
or
stos
mov
sub
mov
inc
dec
jl
sub
and
mov
jmp
jnp
rcll
cmp
out
ret
and
outsl
fst
cltd
fdivrl
or
rcrl
fldz
xlat
jns
inc
mov
xor
lock
push
push
ret
popa
shll
mov
jle
icebp
add
sub
mov
cmp
inc
jne
sub
sbb
jge
pushf
fsts
pop
cmpsb
mov
mov
xor
jne
sahf
adcb
test
or
cmp
call
mov
adc
pop
cmp
arpl
inc
and
dec
inc
or
scas
xchg
in
ja
xor
shll
fnsetpm(287
mov
dec
pop
add
cmp
cmpsb
gs
mov
into
adcb
in
add
pop
mov
mov
shrl
add
mov
cmpsl
popf
pop
and
mov
xchg
add
pop
mov
mov
pop
mov
inc
push
mov
mov
out
sub
mov
ja
add
mov
jo
cltd
das
aam
mov
xchg
dec
sub
mov
in
inc
ror
push
push
pop
inc
cmpb
jge
adc
or
add
shl
xorl
pop
aas
dec
mov
nop
es
fsubp
xchg
pop
movsb
adc
or
lcall
sub
testl
in
or
stos
push
inc
xchg
hlt
leave
loopne
notl
imul
repnz
xor
lds
pop
xor
sbb
mov
adc
cmp
xchg
jp
cmc
jbe
int
pop
das
leave
dec
int
and
inc
addr16
push
in
arpl
jns
mov
xor
leave
inc
jg
and
cmp
out
xor
mov
mov
mov
push
push
push
call
shld
shl
jmp
popf
xchg
dec
mulb
sbb
fdivs
imul
adc
sbb
andb
sti
cmp
clc
pop
jle
mov
addr16
adc
jnp
adc
es
cmp
pslld
sbb
call
sub
cmpsl
inc
or
adc
ja
inc
daa
popa
data16
rcl
mov
rorl
mov
call
adc
lock
dec
xchg
mov
clc
cmp
pop
out
fcomi
ljmp
mov
jae
sub
in
and
ret
js
outsl
out
testb
push
stc
mov
js
inc
popa
jge
or
xchg
jns
std
adc
push
ficompl
mov
movsl
or
pop
add
or
push
es
jp
cmp
pop
sti
js
popf
sbb
xlat
xlat
cwtl
imul
push
mov
adc
pop
test
test
sbb
adcl
jle
xchg
mov
ljmp
in
lcall
insl
mov
ljmp
xor
mov
xlat
in
dec
hlt
sub
aad
out
xchg
sbb
mov
inc
sub
dec
js
cmc
xor
adc
dec
sub
xchg
cmp
pop
gs
jl
repz
jecxz
test
jne
sbb
int3
or
jl
ss
imul
mov
mov
out
mov
cli
adc
push
inc
sbb
stc
popf
pop
sub
mov
fdivs
pop
pop
pop
fildl
data16
or
mov
cltd
adc
mov
ss
pop
into
shrl
bound
ja
je
minps
mov
scas
stc
roll
fistpl
xlat
cltd
imul
fisttpl
and
pusha
stc
inc
cs
mov
fadds
icebp
dec
jno
leave
xor
pop
mov
mov
jmp
cld
jg
push
sub
fnstcw
cltd
add
xchg
sub
idivb
pusha
and
jge
xchg
out
inc
scas
push
xor
lods
jnp
add
xchg
cwtl
cmp
pop
in
repnz
into
jo
cmp
in
pusha
adc
mov
in
lahf
mov
adc
mov
lahf
pop
pushl
mov
inc
je
mov
and
sarl
adc
jo
jae
test
xor
das
sub
add
dec
adc
sub
repnz
ret
stc
aad
xchg
cmpsl
test
jge
jg
mov
push
test
lret
mov
dec
enter
or
mov
ds
out
imul
adc
lret
or
pop
cli
js
mov
ret
cmc
or
adc
rorb
xor
xor
mov
mov
jmp
xlat
cmp
jge
jle
sub
push
pop
sbb
and
sbb
xchg
xchg
stos
in
stos
push
jge
push
in
scas
test
fldenv
cmp
leave
jl
sub
sti
mov
sub
or
roll
xor
adc
repz
and
mov
lret
sti
add
add
push
stos
jnp
sbb
mov
mov
xor
sbb
lods
mov
adc
cld
xor
iret
add
arpl
pop
popf
fsub
les
in
out
sub
cmpb
sbb
ss
push
daa
mov
inc
frstor
cmp
sub
xchg
sub
cmp
cmp
stos
js
sbb
xchg
xor
int3
and
repz
fsubl
mov
xorb
lds
cs
sti
jge
into
mov
int3
mov
into
arpl
or
mov
in
call
stc
ficoms
outsb
ljmp
lahf
loope
fwait
sbb
call
cwtl
in
mov
outsb
sti
cmp
das
push
sti
sbb
pop
push
dec
ds
xchg
jae
sbb
sub
push
mov
loop
cmp
inc
imull
inc
imul
adc
pop
cld
icebp
inc
xchg
loope
lret
push
add
mov
iret
imul
mov
xchg
int
fisttps
scas
pop
cmp
outsb
cmp
jo,pn
pop
xor
jae
or
ret
lcall
mov
and
dec
lock
sub
mov
repz
jg
jecxz
and
pop
stc
int
mov
int
adc
push
ss
sub
sub
in
fwait
hlt
pop
jmp
loopne
vpmaxuw
mov
mov
mov
mov
das
scas
lds
or
cmpb
pop
loope
push
popf
enter
in
xlat
cmp
in
adc
pop
sarb
dec
push
cmpsb
mov
inc
sub
call
push
js
cli
insl
popa
inc
sbb
pop
daa
jb
je
pushf
inc
test
insl
xchg
xchg
jns
mov
lods
bound
lcall
mov
fdivrl
hlt
mov
lcall
outsb
jl
and
add
adc
sub
push
xchg
cmp
mov
push
add
cmp
into
mov
std
mov
mov
insb
jns
aam
andb
add
mov
test
sbb
inc
loopne
push
popa
call
mov
inc
xchg
or
mull
bound
add
sbb
out
dec
mov
push
push
mov
dec
xor
inc
mov
sbb
mov
lahf
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
jmp
fwait
ror
dec
mov
scas
in
mov
and
sbb
adc
sbb
mov
fimuls
insb
mov
lret
lret
sub
sub
push
push
or
xchg
movsl
pop
push
mov
push
in
gs
xchg
sbb
push
addr16
insb
pop
mov
sbb
aaa
and
stc
cmp
and
ret
xlat
and
aas
nop
and
sahf
jo
cmp
push
pop
add
inc
enter
cwtl
je
lcall
mov
cmpsb
mov
arpl
cltd
adc
mov
hlt
mov
clc
add
xlat
rol
inc
lea
add
loope
mov
fsubl
sti
adc
lret
pop
sbb
lret
dec
cmpsl
lea
sarb
sahf
cld
bound
testb
xchg
or
lock
push
fsub
out
scas
jb
dec
add
mov
jge
cli
mov
mov
dec
leave
bound
loopne
loope
jo
mov
and
jbe
aad
sub
or
jo
add
shrl
xor
xchg
not
sub
or
sub
cli
cmpb
in
lret
sbb
leave
ret
fmul
int
pop
imul
jae
push
add
mov
sub
daa
dec
pop
int
fsubrs
mov
jnp
add
push
jb
cs
aad
jmp
es
int3
pushf
ss
dec
clc
adc
inc
push
rcl
cltd
pop
cmp
and
daa
push
into
and
rolb
movsb
fdivrs
test
enter
in
mov
and
add
push
or
int3
mov
pop
push
rol
cld
adc
mov
sub
jmp
into
jo
testb
mov
jg
mov
mov
fnsave
inc
aas
sbb
punpckldq
xchg
jl
pushf
fwait
mov
and
movsb
mov
push
mov
xchg
ljmp
dec
adcl
pop
cmpsl
aad
inc
dec
das
pushf
rorl
and
shll
es
mov
push
outsb
jge
add
int3
inc
mov
inc
push
or
dec
cmp
dec
out
push
mov
leave
mov
xorl
out
inc
mov
ljmp
mov
scas
ret
push
fsubp
hlt
es
push
shrl
fistpll
cmp
and
out
xlat
jbe
aas
dec
pop
adc
sbb
mov
leave
mov
test
jns
push
daa
or
dec
push
pop
leave
ss
gs
add
negl
mov
push
outsl
push
mov
daa
nop
sub
not
cli
push
popa
push
es
lods
inc
popa
or
xchg
loopne
outsl
pusha
mov
jne
push
push
call
jmp
mov
dec
jb
insl
fnstcw
dec
sbb
and
sbb
fnstcw
lahf
mov
imul
sbb
dec
mov
jno
mov
add
cli
xchg
sbb
pop
aaa
fcmovu
fnstenv
pmulhw
ljmp
lods
push
pop
add
and
sarb
in
cmp
pop
test
jecxz
fdivrl
ror
hlt
icebp
in
dec
adc
cltd
add
jecxz
pusha
inc
push
xchg
repnz
adc
fs
loope
jne
jle
pop
xchg
jo
lret
mov
testb
inc
mov
cmovg
mov
and
xchg
jge
lcall
inc
adc
loopne
dec
pop
mov
adc
rclb
jne
push
or
pop
enter
mov
xchg
stc
lds
ja
push
gs
fistps
jb
push
test
mov
aam
mov
add
test
loope
ror
dec
sbb
add
push
xor
mov
rorb
dec
sbb
pushf
incl
jl
dec
fmulp
in
icebp
jecxz
push
push
mov
sbb
int
cltd
cmc
xchg
shl
adcl
cwtl
inc
xor
adcb
lods
xchg
rorb
add
pop
push
mov
push
inc
xor
mov
and
adc
xchg
jecxz
jmp
mov
shl
dec
jae
mov
test
and
push
mov
iret
push
mov
inc
fsubr
or
dec
pop
int
lcall
sbb
pushf
rclb
icebp
insb
and
push
call
scas
outsb
fmuls
scas
mov
jg
inc
adc
mov
lods
sti
sbb
stos
out
jo
cmp
gs
dec
fadd
nop
sub
pop
mov
dec
push
pop
pushf
adc
or
dec
cmovnp
xchg
test
mov
and
jnp
cli
add
call
loope
or
push
inc
jo
cmc
fsubrl
sbb
stos
outsl
stos
pop
jmp
sarb
xchg
jp
jp
movsl
inc
mov
jno
leave
inc
cmp
ja
sti
mov
insb
outsl
sub
add
and
lock
or
fldl
sbb
mov
iret
xchg
les
lret
pop
ljmp
ds
inc
jle
lahf
in
mov
xor
pop
mov
dec
adc
add
lods
cli
jle
shll
into
fidivl
insb
xchg
sahf
lret
mov
sbb
jge
out
xchg
inc
data16
or
mov
fs
xchg
pusha
mov
or
pop
in
cmp
and
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
sbbl
shrd
movl
shr
ret
mov
xorl
xor
and
shr
ret
xor
xor
ret
push
mov
sub
sub
movl
mov
cmpl
movzbl
mov
movzbl
mov
jmp
mov
mov
jne
pushl
pushl
pushl
push
call
mov
and
xorl
add
not
sbb
adc
mov
movl
mov
movl
cmpl
mov
notl
mov
jmp
mov
mov
jbe
pushl
pushl
push
push
push
pushl
push
call
and
movzwl
add
not
mov
adc
andl
add
mov
sbb
movl
movl
push
movzwl
and
movl
cmpl
movl
mov
movzbl
jmp
movl
movl
jge
push
push
pushl
push
push
call
sbb
incl
xorl
add
movzwl
add
add
movl
xor
add
and
push
or
movl
cmpl
not
mov
jmp
movl
mov
jle
pushl
call
mov
mov
adc
not
sub
sbb
or
incl
mov
cmpl
not
mov
mov
not
jmp
movl
movl
jae
push
push
push
call
add
sub
mov
xor
sbb
neg
mov
push
push
sbbl
push
orl
call
jmp
inc
dec
cmpsb
movsb
lcall
mov
stc
jmp
xor
sbb
adc
sbb
pop
imul
aaa
lahf
mov
mov
out
cmp
mov
mov
outsb
pushf
fldl
sti
imul
pop
push
icebp
cmp
adc
cwtl
adc
adc
xor
mov
shll
movsl
pop
lock
repz
daa
arpl
cmp
test
fiaddl
mov
cmp
xchg
ss
cmpsl
arpl
inc
aam
loopne
mov
add
std
mov
ret
cltd
sub
pop
xor
jl
push
adc
adcl
dec
xchg
xchg
ror
sub
mov
in
pop
ret
mov
ljmp
lds
in
and
xchg
xor
mov
push
dec
cmp
xchg
leave
mov
sbb
mulb
mov
data16
push
push
rorb
dec
pop
and
addr16
mov
stos
in
pushf
mov
cmp
adc
cmp
test
addr16
add
int3
js
push
mov
pop
mov
das
or
or
scas
lret
adc
rclb
ljmp
inc
inc
sbb
xacquire
or
fnstsw
dec
jge
das
and
js
adc
inc
jle
sub
das
or
iret
xlat
push
adc
mov
sub
fst
sub
addr16
adc
push
jnp
jo
xchg
dec
lret
popa
lcall
shr
sbb
jo
fwait
aas
jle
clc
add
orb
and
sub
mov
adc
gs
mov
dec
lods
fstpl
sti
bswap
push
dec
lret
pop
or
xor
out
xor
enter
nop
pop
or
in
les
stos
push
and
ljmp
aaa
gs
addl
jnp
sbb
popa
cli
sbb
push
out
sbb
imul
mov
mov
dec
mov
fs
adc
xorl
cmpsl
popf
insb
je
pop
cwtl
push
pop
sbb
xchg
inc
xor
jge
and
stos
mov
shlb
sub
mov
cwtl
pop
and
xchg
arpl
andb
xchg
pop
nop
mov
scas
insb
mov
mov
js
pop
xor
notb
into
les
into
jp
mov
mov
xor
shrl
mov
mov
fwait
and
mov
pop
xor
imul
xchg
mov
mov
scas
add
adc
add
les
orl
ss
cmpb
aaa
in
mov
jno
imul
shld
inc
jmp
jne
push
orl
or
push
addl
or
sbbl
xor
xor
push
push
negl
call
mov
cmpl
not
movzwl
notl
jmp
movl
jb
push
pushl
pushl
call
adc
movzwl
or
xor
add
sbb
xor
mov
or
xor
neg
sbbl
mov
adcl
push
adcl
push
movl
push
push
decl
call
cmpl
mov
mov
jmp
movl
jae
pushl
call
sub
subl
xor
sbbl
sub
or
xorl
jmp
mov
sbb
sbb
sub
jg
mov
sbb
adc
sbb
xor
mov
stos
dec
jp
in
cmc
popa
cmpsl
aad
push
jp
add
xchg
adc
loope
cmp
mov
idivb
fwait
or
scas
das
mov
jp
or
arpl
mov
cmpsl
dec
dec
fstpl
out
push
or
and
sbb
or
mov
testb
jmp
xchg
xor
std
lock
lcall
jns
adc
xchg
stos
je
sbb
mov
lds
insl
bswap
xor
dec
outsl
in
and
ret
sub
push
dec
or
sahf
dec
xchg
insb
sar
sub
scas
and
inc
add
fstl
dec
push
mov
sub
pop
ret
pusha
idivl
add
flds
inc
sub
fwait
jmp
aad
scas
xchg
add
jmp
add
or
or
mov
icebp
xchg
adc
lahf
popa
mov
loopne
mov
inc
jl
pop
mov
pop
or
lods
lock
pop
or
es
mov
in
xlat
xchg
push
xchg
sub
in
lret
xor
fisubrs
and
aaa
fdivp
clc
imul
jle
sub
std
add
sub
jle
das
sub
jb
xchg
push
in
negl
xchg
jmp
mov
out
outsb
lahf
pop
add
mov
jle
rolb
call
stc
fnsave
jb
mov
pop
pop
cmp
dec
mov
in
stos
call
out
xchg
incb
outsl
jmp
pop
rcll
shrb
insl
das
cmp
push
push
xor
mov
pop
mov
movsl
cltd
lock
xchg
add
test
sbb
ja
js
mov
ret
dec
jae
ja
imulb
sbb
add
pop
push
test
mov
pop
iret
lret
add
out
nop
popa
fidivs
push
pop
lcall
cld
scas
mov
adc
mov
and
inc
lea
leave
adc
ja
aam
aaa
jmp
sahf
pop
fadd
popa
or
gs
pusha
mov
addr16
sub
shrl
sti
fisubrl
fisubl
push
inc
cwtl
push
ss
js
cwtl
mov
daa
cmpsl
fidivs
mov
rcrl
push
js
rcll
cli
inc
scas
dec
mov
loop
loope
popa
push
rclb
mov
mov
aad
sbb
dec
or
mov
sbb
or
bound
inc
and
adc
jbe
fisubrl
test
std
daa
sbb
push
je
push
xor
lea
xor
inc
nop
dec
loopne
xchg
ror
mov
addr16
pop
sub
mov
jnp
push
arpl
out
sbb
ja
adc
lret
adc
inc
xchg
pop
push
push
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
jmp
add
pop
mov
arpl
sbb
add
sbb
xchg
arpl
xor
jle
sub
fldenv
mov
insl
xchg
jmp
jne
xor
xorb
in
aad
cltd
loop
jno
outsb
sub
test
mov
xlat
test
sub
and
pop
pop
add
cmc
push
and
cmp
push
xchg
adc
fnstsw
enter
inc
cld
push
add
aam
leave
pop
js
pop
add
mov
fstpl
mov
cmp
testb
dec
or
outsl
mov
and
mov
push
mov
mov
sarl
js
addr16
sub
jae
imul
xor
mov
in
shrl
or
fwait
mov
xchg
stc
cmpsb
mov
inc
jp
movsb
sbb
push
dec
icebp
jne
notl
rcrl
dec
inc
test
lds
or
lock
and
lods
cwtl
inc
pop
jmp
xchg
push
lds
movb
lds
lret
movsl
mov
sub
andl
lahf
cmp
pusha
pop
push
sbb
mov
xorl
inc
fidivrl
loop
mov
push
aaa
rclb
inc
cmp
cltd
sub
mov
pusha
push
push
cwtl
test
fldenv
fadds
and
ds
inc
push
mov
push
loopne
into
mov
push
jle
pop
cld
push
in
cwtl
aas
pop
xor
jne
push
xchg
cli
sub
stos
sbb
adc
dec
loopne
xchg
test
jne
and
in
icebp
mov
cltd
aaa
popa
inc
sbb
fistpll
in
and
dec
cmp
icebp
mov
push
jmp
add
int
imulb
adc
xchg
mov
inc
divb
lahf
sub
jl
adc
out
dec
scas
aas
or
pop
int
cmp
fdivp
cli
loope
or
cmc
mul
popa
add
das
jl
adc
stc
fadds
adc
cltd
out
gs
xor
sbb
jmp
and
jnp
int
dec
cs
mov
popaw
or
test
and
rcr
les
mov
in
mov
mov
inc
push
pop
and
cmpsb
and
ret
sbb
dec
jnp
push
test
test
pop
bound
sbb
xor
jl
jp
pop
out
xchg
mov
aas
lahf
mov
clc
test
idivl
cwtl
aaa
fs
mov
pop
in
ror
inc
rep
aas
add
pop
sahf
jmp
xor
xor
stos
inc
clc
pop
dec
jl
andb
fmull
mov
popf
mov
push
pop
lret
out
test
inc
mov
pop
stos
outsl
fmul
outsl
push
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
jmp
xor
jne
insb
sbb
push
out
int3
or
or
call
adc
sbb
adc
xor
dec
cwtl
xor
andl
xor
loope
xor
xor
lea
decl
add
mov
pusha
mov
and
inc
out
out
ljmp
pop
in
mov
loop
rcr
outsb
mov
rcll
lret
dec
lret
pop
or
cld
xor
push
xchg
repnz
arpl
jae
pop
or
repnz
push
fxch
mov
or
stos
xor
xor
aas
cmc
mov
push
imul
loopne
fidivs
or
out
cmp
out
jbe
aam
mov
fdivs
sub
enter
sbb
mov
dec
mulb
imul
push
adc
mov
mov
mov
xor
cli
enter
lea
xchg
add
xchg
push
push
pop
int3
cltd
mov
call
cs
mov
jmp
repnz
mov
sbb
pop
push
ja
icebp
pushl
lret
fisttps
sub
pop
push
push
iret
dec
shlb
insl
clc
rcrl
jmp
mov
sti
pop
and
and
aad
les
movsb
mov
jbe
sarb
xor
xor
icebp
mov
popf
push
int3
pop
jbe
mov
out
mov
sub
cli
push
sbb
pusha
data16
inc
and
lea
vphaddbq
into
les
xchg
arpl
loope
in
inc
or
cmpsb
xchg
mov
test
ret
jns
test
dec
add
jmp
out
push
mov
loop
les
inc
add
sbb
pop
aam
mov
xchg
lds
faddl
aaa
sbb
cmc
jmp
test
movsb
mov
cmp
cmp
add
mov
leave
xchg
aas
mov
in
mov
sbb
sti
jb
xor
push
scas
icebp
stos
push
jno
ret
movsl
push
ja
jo
inc
xor
mov
jae
push
cmpsl
lods
sbb
movsb
adc
inc
test
xchg
rcll
push
iret
imul
sub
loop
les
xor
push
xor
scas
in
xor
ss
add
pusha
dec
leave
scas
and
test
loop
jae
ss
inc
xchg
movsl
push
sub
enter
arpl
imul
or
mov
cmovs
adc
xorb
pop
insb
fwait
pop
lcall
sub
ret
inc
stc
mov
jg
in
insb
popl
xchg
push
cmp
pop
mov
and
and
and
dec
sbb
popl
jmp
jo
xchg
xchg
repnz
sub
mov
mov
xlat
fists
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
jmp
in
mov
sub
push
pop
jo
xor
sbb
adc
sbb
aad
cs
mov
add
cmpsb
inc
pop
cmp
ja
insl
xor
sbb
pop
pushf
fnstcw
sbb
mov
scas
aad
sbb
sub
enter
shlb
ret
inc
jle
adc
sub
test
mov
push
lcall
inc
movsl
jmp
pop
jne
jo
sbb
das
scas
sbb
shr
stc
nop
and
jnp
data16
shl
mov
push
xchg
test
pop
push
sahf
sub
cmpsl
ss
shl
cmpsb
and
das
shrl
xor
mov
scas
rcr
je
jne
xor
test
adc
xor
clc
sahf
imul
mov
xor
fwait
mov
insb
cmp
sub
push
add
sub
cmc
ficoml
popl
and
int
test
jle
mov
test
inc
into
or
mov
dec
aaa
sub
movsb
and
xor
out
cmp
adc
mov
jmp
lods
repnz
cmc
push
xor
cmp
lahf
inc
pusha
xchg
ja
dec
pop
pop
mov
mov
mov
js
sub
jnp
sbb
inc
not
pop
in
cltd
cld
push
decb
adc
and
cld
sbb
ror
ja
jmp
xchg
lea
jp
jns
std
adc
ficompl
dec
pushf
mov
xchg
xlat
das
lahf
icebp
mov
mov
cmpl
lock
rep
fwait
and
bound
icebp
mov
adc
out
enter
cmpsb
outsb
stos
cld
or
dec
in
push
pop
mov
pusha
ds
jecxz
std
xor
rorb
rcl
mov
cwtl
sub
pop
std
mov
pop
adc
insb
jge
jl
outsb
fwait
les
sbb
insb
rcrl
adc
sub
cmc
into
inc
sub
xorl
shrl
jne
push
xor
cld
fisttpll
pusha
leave
out
jbe
in
fistpl
loop,pn
lods
push
outsl
push
lods
add
mov
dec
mov
testb
popa
test
ja
sbb
popf
mov
ret
jecxz
les
cs
push
sahf
push
mov
pop
inc
mov
and
js
dec
clc
or
int
and
popl
mov
pop
arpl
add
cmp
or
adc
in
ljmp
and
jmp
mov
push
in
insl
outsb
ret
stos
sub
repz
sbb
inc
mov
sbb
jecxz
mov
dec
inc
sbb
ror
cmp
pop
mov
imul
xchg
push
push
mov
pop
imul
fistps
pop
js
push
jmp
add
push
sbb
ja
pop
sarl
adc
sbb
pop
loope
mov
add
movsb
fisttpl
cld
iret
adc
mov
psrld
nop
insl
cmp
loop
mov
ffreep
add
sub
fsubl
insl
decb
adc
in
jp
cltd
call
xor
lret
bnd
data16
insl
jb
xchg
hlt
call
loope
iret
and
ret
mull
xor
xchg
dec
popl
fbstp
add
pushl
clc
mov
mov
lea
mov
and
sbb
leave
jo
and
mov
mov
mov
imul
cwtl
lock
loope
cmp
xor
mov
jae
pop
lods
mov
popf
xchg
ret
fistl
test
and
inc
test
fldl
popa
or
clc
sbb
insb
arpl
ret
aad
test
adc
scas
paddsb
mov
push
pop
xor
clc
pop
int3
arpl
or
xor
fidivl
scas
hlt
sub
or
jl
push
cmc
dec
daa
push
aas
xchg
push
adc
sar
mulb
sub
inc
loop
fcomip
or
mov
xchg
and
loopne
iret
fwait
fs
pop
mov
or
add
addb
mov
test
xchg
fildll
mov
loopne,pt
hlt
fbstp
lcall
arpl
lock
popa
mov
leave
scas
jecxz
pop
fmuls
dec
adcl
scas
mov
xchg
iret
in
adc
fcomi
dec
add
es
pop
scas
or
rorb
mov
jmp
outsb
push
inc
sbb
in
int3
inc
popf
xor
or
mov
mov
lret
addr16
mov
pop
inc
mov
pop
cli
in
xorl
in
or
fnsave
lret
loopne
aad
pusha
scas
jno
sbb
adc
sub
insl
fsubr
mov
test
push
xor
imul
mov
push
daa
stc
xchg
ret
int
mov
mov
faddl
inc
lds
push
aad
or
dec
push
pop
jb
testl
pop
ljmp
jo
dec
hlt
or
ds
fadds
mov
lods
iret
out
adc
cld
or
mov
call
xchg
or
and
insl
je
push
xchg
and
fwait
popf
lods
mov
int3
insb
cmc
sbb
mov
fs
xor
test
fcmovnbe
pop
push
jb
jecxz
subl
clc
cmp
out
mov
call
cs
push
jg
push
sub
cmc
mov
pop
adc
call
mov
mov
push
push
and
and
push
jmp
addr16
bound
mov
repnz
add
sbb
jns
inc
daa
pushf
loop
mov
lds
push
pop
add
cs
dec
les
mov
sbb
push
cwtl
in
inc
stos
andl
cmpsl
push
mov
sbb
leave
pop
pop
adc
jnp
movsb
mov
push
sub
xor
clc
mov
filds
out
push
int3
mov
or
xchg
sub
das
jecxz
or
mov
mov
aas
lods
in
insb
ja
push
mov
sbb
sub
inc
pop
push
inc
mov
inc
pop
icebp
jg
pop
in
ljmp
mov
stc
insl
xchg
out
shl
lea
notl
pop
jae
lret
mov
mov
jb
or
jp
sbb
mov
in
hlt
or
push
lods
ljmp
mov
jne
xchg
aad
mov
dec
mov
cmp
es
inc
pushf
xor
dec
cmp
popf
push
or
jl
adc
pop
mov
mov
xchg
mov
int
fwait
ljmp
xlat
int
cmp
xchg
ret
loope
aaa
xchg
mov
xchg
aam
bound
popa
sub
test
lcall
js
sbb
lods
and
mov
cmp
and
or
mov
push
ret
out
pop
cmp
sub
lds
mov
shl
imul
out
cmpsl
std
std
test
xchg
jb
jmp
mov
icebp
push
lock
sbb
and
daa
popa
mov
fidivl
jge
sub
mov
es
sahf
mov
mov
cs
lahf
adc
dec
mov
inc
or
mov
popf
pop
aas
outsl
lds
jle
ljmp
call
cmovbe
cmp
add
xlat
pop
xchg
jle
std
fistpll
mov
std
fwait
cmp
cld
lods
sub
push
gs
jno
cs
jg
mov
jne
jno
and
mov
xor
push
fwait
mov
inc
sub
xchg
arpl
daa
sarl
and
xchg
jns
insl
mov
inc
sub
scas
sbb
sbb
cs
pop
arpl
xchg
jnp
dec
adc
fwait
sbb
inc
movsb
jmp
ljmp
xchg
lea
jae,pn
xor
int3
ljmp
fistpl
call
pop
mov
cmpsb
ja
in
rclb
sbb
lret
and
inc
enter
mov
mov
iret
fcmovbe
adc
dec
mov
sbb
push
jnp
aaa
mov
or
sar
ds
push
scas
dec
in
adc
and
push
aam
add
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
jmp
rcr
sub
sbb
loope
scas
mov
push
pop
jle
pop
sbb
add
sbb
aas
pop
xor
dec
push
xlat
pop
pop
inc
lock
jl
rcrl
jb
mov
mov
xchg
inc
out
repnz
leave
mov
add
push
pop
outsb
xchg
xor
or
arpl
cmp
cltd
add
sbb
pop
into
fisttps
mov
inc
daa
pop
sbb
lahf
in
cmp
pop
and
js
inc
dec
or
add
xchg
push
pop
mov
sbb
dec
mov
xchg
sub
adc
push
mov
in
push
imul
push
inc
cmp
stc
add
push
rol
mov
aad
add
test
mov
mov
aad
mov
or
or
test
out
dec
push
xor
sub
or
enter
mov
pop
xchg
inc
fiaddl
jg
loope
inc
int
orl
sbb
std
outsl
sbb
das
mov
mov
push
push
jbe
enter
pop
push
into
jmp
adc
mov
mov
outsl
xchg
push
sub
fdiv
outsl
jecxz
mov
leave
cmpsb
int
sub
push
std
push
dec
hlt
fstp
movsl
ss
xchg
in
jecxz
xchg
test
and
clc
sub
out
insl
test
xor
push
scas
negl
imul
push
and
andb
int3
sub
fsubrs
push
mov
mov
sbb
pop
inc
pop
sub
test
mov
addr16
out
jge
mov
adc
sbb
clc
bound
mov
sub
shrl
cmp
pop
rcl
icebp
addb
fstps
and
ret
cli
push
addl
sub
aaa
movsl
out
subl
cmp
into
or
ljmp
lods
addl
cmpsb
mov
add
lahf
mov
addr16
jl
pop
fldl
loopne
dec
mov
gs
fistpl
rol
xor
ljmp
push
stos
mov
xor
mov
push
xadd
test
cmpsl
and
sub
mov
xchg
xor
call
cmpsb
xor
test
fdivs
inc
in
sbbb
mov
leave
test
cmc
aas
fisubrs
fistps
scas
idiv
mov
adc
jmp
ret
fcomps
jmp
cmpsl
scas
mov
mov
jnp
sub
sbb
mov
in
icebp
clc
mov
inc
imul
mov
es
nop
mov
jp
xchg
adc
addr16
popf
inc
lahf
add
jp
push
ja
cltd
outsb
push
insb
push
inc
lods
and
int3
out
out
mov
in
push
sub
fsubrl
cmp
cltd
stos
jg
push
in
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
jmp
adc
nop
dec
mov
jle
sbb
sbb
adc
sbb
xchg
xor
mov
psubusw
stos
inc
aas
jge
cmpsl
cmp
adcl
adc
push
pop
movsb
and
fistpl
scas
notb
dec
into
sub
xor
int3
dec
lret
test
dec
imul
cs
push
in
mov
or
popf
push
int
adc
loopne
stos
rcrb
testl
dec
dec
andl
cmp
xlat
adc
psrlq
lcall
inc
xlat
cmc
les
xchg
mov
push
xchg
out
and
mov
rorl
imul
mov
mov
ss
mov
mov
insl
movsl
icebp
xor
sub
popa
mov
mov
and
mov
dec
popa
sti
fucomi
dec
test
mov
cmp
mov
call
jne
xchg
fmulp
std
or
mov
cmp
jg
pop
int
imul
mov
outsb
pop
cwtl
and
push
mov
mov
pop
int
jno
dec
push
andl
cmpsb
iret
jge
jg
lods
dec
in
push
js
adc
sbb
push
iret
pop
arpl
lds
mov
call
das
xlat
xchg
and
or
mov
repnz
and
mov
sbb
aam
cmp
cmp
in
fmuls
xchg
mov
mov
outsl
jo
jns
push
pop
enter
cmp
adc
cli
or
call
cmp
adcb
push
inc
data16
sbb
add
repz
add
pusha
mov
mov
jp
jmp
roll
push
jge
lock
rcll
roll
rcrb
add
and
fsub
jmp
lea
test
dec
pusha
mov
aad
xchg
int
sbb
xchg
jge
cld
mov
loop
ret
jge
std
mov
das
rclb
push
cmp
addr16
pop
pop
mov
xor
inc
or
cmp
pop
jl
fsubrs
pop
outsb
mov
push
ret
push
xor
outsl
pusha
xor
and
shll
iret
push
imul
stos
inc
sbb
inc
cli
xchg
cmpsb
push
in
cltd
mov
shrl
das
jb
aam
adc
das
jo
popa
mov
xor
nop
push
inc
sub
gs
ljmp
loope
lcall
jmp
adc
mov
mov
mov
adc
out
hlt
in
scas
push
pop
xor
jp
and
je
inc
mov
cmp
pop
push
jbe
push
push
sbb
xor
test
xor
sub
cltd
dec
xchg
data16
loop
inc
mov
jg
loop
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
jmp
push
test
and
pop
es
jo
adc
sbb
adc
sbb
xor
mov
sub
dec
mov
fwait
pop
xchg
imul
mov
shlb
aam
ja
mov
fisttpll
mov
addr16
or
rcll
dec
jle
xor
xchg
mov
inc
outsb
jbe
or
xor
sbb
pop
sbb
mov
mov
adc
push
mov
sarb
dec
negl
jle
addps
adc
dec
mov
and
push
cmp
int3
es
mov
clc
or
popf
and
addr16
fildll
test
lret
and
mov
or
inc
insb
fstps
mov
ds
cs
movsl
or
movsb
sub
or
mov
sahf
je
test
pop
cmc
sub
push
pushf
mov
test
sub
dec
rcl
cmc
push
add
adc
push
pop
sbb
roll
fsubrp
fistps
or
out
xchg
imul
int3
stc
out
lods
xchg
xchg
jmp
enter
jnp
xchg
sub
push
test
outsl
inc
and
add
adc
ljmp
xor
out
shll
out
test
or
stos
popf
cmpsl
stos
adc
jecxz
repnz
int3
adc
sbb
sbb
xlat
mov
pop
mov
cmc
adc
jl
dec
push
mov
sbb
mov
out
inc
rorl
cmpsb
inc
in
ss
jne
lods
std
loope
mov
ud0
dec
cmp
and
movsl
lods
loope
pop
fsts
push
lods
test
and
stos
outsl
cwtl
xorb
inc
xchg
out
sub
out
outsl
mov
imul
fnstsw
call
jecxz
cmp
mov
jmp
ss
stos
pusha
mov
push
fisttps
outsl
adc
repz
jbe
pop
jge
cmp
sbb
daa
cwtl
js
pop
pop
bound
movl
jmp
xchg
lret
cmp
adc
push
push
push
push
push
and
jnp
lock
xor
std
lock
sahf
fiaddl
sarb
mov
pop
mov
and
aaa
mov
push
pop
push
adc
mov
hlt
into
enter
xchg
mov
sarb
jno
pop
mov
fwait
jo
xor
mov
fcoml
imulb
stc
and
add
push
cli
jnp
rcr
popa
push
lcall
cmp
push
lret
push
or
push
nop
mov
and
loope
mov
test
xlat
add
mov
jmp
out
add
sub
std
iret
int
imul
or
outsb
sti
push
insl
mov
lcall
cmpl
xor
sbbl
idiv
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
push
lods
pop
inc
lret
jo
hlt
push
push
or
sbb
xchg
sub
dec
pop
jmp
int3
lods
iret
call
popa
push
mov
cwtl
push
pop
sub
js
mov
movsl
jge
cli
enter
mov
and
mov
jp
pop
add
mov
data16
jge
int3
sub
ret
lock
insb
push
or
fidivrl
into
xchg
imul
test
bound
xchg
loopne
xlat
pusha
push
pop
dec
dec
cli
cltd
lods
pop
jecxz
pop
out
xchg
in
pop
adc
xor
popf
adc
lcall
cmp
xchg
mov
int
adc
xor
sub
jle
adc
scas
xchg
loopne
shr
dec
mov
insb
dec
and
out
sbb
jle
jecxz
in
push
mov
adc
mov
xor
mov
popf
es
jle
lea
add
sbb
test
aad
stos
test
mov
or
call
pop
ljmp
fbstp
push
or
imul
xor
repnz
imul
lods
fadds
push
or
add
jmp
xor
arpl
jle
push
mov
pop
sti
dec
roll
cli
shll
and
sbb
sub
mov
jg
lea
dec
cmp
fwait
pushf
jns
xor
mov
outsl
sbb
lods
pop
adc
je
lahf
shl
push
mov
mov
fsubr
popa
test
and
mov
lods
nop
cmpsb
jmp
inc
push
call
xor
jnp
sub
xor
in
sbb
imul
and
pop
jbe
call
scas
jl
negb
xor
jmp
lods
jmp
inc
adc
cwtl
adc
out
inc
imul
add
fdivl
sti
cmp
pop
push
fadd
adc
lock
xorl
imul
pop
shl
mov
fistpl
dec
sarb
out
out
sub
in
ja
and
popf
rcr
mov
testb
adc
xor
dec
out
adc
cmp
and
std
es
add
pop
repnz
ret
push
movsb
popf
jno
sub
inc
mov
and
mov
testl
mov
cld
mov
mov
jmp
push
mov
add
sub
movsl
test
imul
inc
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
jmp
xchg
jne
je
es
je
mov
inc
das
mov
test
sbb
jns
jb
orb
mov
and
inc
xor
imul
mov
add
dec
push
out
cmp
xor
xchg
aas
adc
pusha
icebp
dec
adc
mov
loop
xor
sbb
rclb
test
add
adc
rcrb
aam
imul
cmp
es
mov
pop
xchg
xchg
mov
cmc
jecxz
loopne
gs
pop
or
xchg
into
pusha
adc
jge
and
or
xchg
fcoms
inc
loope
idivl
adc
fists
stos
mov
pop
fwait
pop
push
out
negb
pop
mov
dec
sub
adc
xchg
inc
inc
imul
imul
dec
or
pop
cmpsb
and
add
lods
int3
les
add
xchg
mov
dec
mov
repnz
adc
jbe
insb
jecxz
sub
xor
out
jg
cmpsb
lods
add
inc
pop
in
in
push
and
inc
cmpsb
jge
push
pop
js
cmp
cli
enter
sub
test
fwait
pop
repz
xchg
xor
sub
bound
jmp
fdivl
movsl
cltd
xchg
cli
and
shll
enter
test
sahf
ret
sub
das
lods
fidivl
add
adc
dec
mov
adcl
rolb
test
add
add
mov
inc
mov
dec
jns
stc
xchg
ret
cs
lds
push
cmpsb
test
out
inc
loop
fsub
mov
dec
scas
adc
lock
sti
aad
and
ja
cmc
add
xchg
arpl
arpl
push
dec
clc
int
sbb
movsl
add
subl
andb
sbb
or
mov
stos
xchg
sub
leave
mov
das
add
pop
fisttpll
mov
dec
movnti
ljmp
pop
xchg
jbe
inc
ficomps
sbb
mov
js
mov
out
jle,pt
xlat
iret
in
test
push
out
xorl
push
or
shll
shl
ficoms
dec
out
test
lods
and
subb
dec
push
lock
mov
lock
mov
stc
mov
xchg
mov
daa
dec
fwait
test
shrl
lock
stos
shrl
int
repz
or
add
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
jmp
pop
dec
ficoms
daa
ss
push
dec
jge
popa
add
sbb
add
das
xor
into
add
clc
fistpl
andb
push
les
mov
or
pop
shll
mov
jnp
bound
sub
jge
mov
xor
inc
mov
inc
repz
dec
xor
enter
push
xchg
jl
sahf
sti
lret
arpl
loop
adc
cmp
enter
push
xchg
adc
out
sub
das
cld
inc
sub
leave
repnz
pop
lock
stc
push
bound
pushf
mov
or
sbb
fst
nop
push
lcall
in
data16
fucomi
fwait
pop
pushf
or
cmp
mov
loop
hlt
push
and
pop
xchg
ljmp
mov
sbb
sarl
push
popf
adc
push
mov
lret
fimuls
repz
cwtl
push
shlb
and
lahf
xchg
jne
push
cmp
popa
lea
enter
insl
fidivrs
or
add
dec
mov
and
fsubrs
jmp
lods
push
popl
mov
sahf
es
icebp
push
movsb
and
add
call
adc
insb
test
add
dec
fucomip
cmp
cmc
fcoms
rorb
dec
cmc
push
or
sbb
add
push
inc
and
or
jno
leave
mov
pusha
adcb
inc
lret
loope
mov
lea
mov
mov
dec
cmp
inc
adcl
lea
outsl
gs
dec
and
mov
jg
mov
mov
das
ret
jl
adc
aaa
jns
aaa
push
xchg
mov
outsb
cmp
mov
iret
rolb
mov
int3
jmp
mov
mov
imul
shlb
into
cmp
call
out
jns
movsl
es
js
mov
sahf
je
dec
ds
jno
in
adc
testl
das
mov
int3
add
inc
out
test
mov
loop
xchg
sbb
jp
popf
mov
test
or
lret
mov
aaa
mov
add
inc
std
and
pop
subb
sub
cs
jle
adc
adc
adc
mov
scas
sbb
xchg
negl
xor
pop
cmp
test
daa
xlat
out
test
or
xchg
cli
dec
cmpb
ja
push
mov
clc
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
jmp
sbb
dec
push
dec
and
and
pop
hlt
push
sti
sbb
test
sbb
aaa
fstpt
push
repz
cmp
add
mov
sti
add
and
or
lock
popf
dec
cmp
dec
sbb
xor
loopne
mov
icebp
sbb
cmpsb
or
fdivrl
bound
icebp
inc
and
into
push
sbb
push
mov
repz
push
jae
fdivl
adc
fidivrl
icebp
mov
aam
dec
adc
pop
and
sub
mov
sbb
icebp
pushf
ds
gs
mov
loop
pop
pop
xchg
repz
mov
cmc
daa
sbb
sub
nop
jnp
lock
jno
or
pop
and
movsl
cld
adc
stc
leave
movsl
dec
ja
or
popf
push
dec
fs
addr16
or
adc
or
pop
fcmovbe
sbbl
sbb
repnz
push
cmpsb
cmpsl
jmp
dec
push
jns
test
loop
lcall
jne
aad
stc
adc
push
inc
je
lods
xor
cld
pushf
jo
push
int
xchg
rcl
sbb
lock
xor
out
movsl
adc
mov
or
lock
scas
cmp
adc
js
jg
mov
loopne
fdivs
mov
inc
cmp
nop
mov
fisubrl
mov
sbb
xor
rcrl
mov
push
popa
mull
lds
div
mov
lret
jno
hlt
and
rolb
sahf
xchg
lods
loopne
mov
mov
shll
pop
mov
out
jmp
ret
sub
pop
mov
jnp
lock
xchg
fs
xchg
add
jmp
les
adc
loope
mov
sbb
cmp
lods
lahf
push
out
ja,pn
xchg
aad
shlb
movsb
mov
popf
scas
fcompl
mov
push
inc
push
cmp
mov
adc
ficomps
popf
sti
int3
sub
aas
sub
test
decb
inc
cmp
jns
mov
add
jo
inc
cmpsl
sbb
pop
add
add
std
jp
mov
mov
cmp
into
sub
in
mov
jp
or
pop
iret
mov
daa
ret
lahf
dec
pop
xorl
movsb
jnp
sbb
scas
movsl
sub
sub
mov
icebp
jno
aad
mov
add
aam
leave
mov
cmp
rcrl
jno
sub
sahf
dec
pop
test
clc
sbb
sti
cmp
outsb
in
lret
mov
aaa
dec
mov
inc
in
sub
loopne
cmp
add
inc
fdivrl
cmp
add
inc
in
int
add
jmp
push
mov
fistpl
xchg
sbb
stos
xor
sbb
push
adc
clc
jp
or
loope
fdivl
lret
push
dec
cltd
mov
adc
aad
push
push
cmc
pop
pushf
xchg
mov
push
pop
pop
xor
push
fmull
les
lret
cmp
jns
sbb
fsubr
mov
push
pop
jnp
jns
jnp
pop
adc
fs
js
aas
sub
adc
and
mov
sub
in
inc
dec
out
scas
push
in
jmp
adc
out
push
cli
mov
sti
clc
cmp
cwtl
jae
cmp
fcmovne
and
in
repz
test
cltd
sub
clc
mov
in
hlt
add
xchg
mov
fbstp
push
add
cmovs
daa
clc
jnp
jo
or
jns
xchg
pop
into
pop
mov
dec
lret
outsb
inc
sub
in
mov
fidivrs
mov
or
je
xor
out
adc
sub
sahf
clc
repz
lret
call
rolb
insb
push
add
mov
xchg
fldcw
sub
and
push
test
inc
addr16
push
scas
cmpsb
mov
sub
xchg
lahf
sub
pop
push
imul
arpl
pusha
xor
orb
test
psubd
jecxz
pop
xor
push
cli
lcall
movsl
sub
jne
inc
stos
movsl
add
les
mov
call
or
cld
xor
rorl
jnp
or
sub
xor
mov
adc
test
jae
jae
xor
pop
or
mov
das
into
mov
push
test
or
sahf
sub
out
cmpl
dec
dec
mov
dec
inc
jecxz
adc
clc
cwtl
scas
and
fwait
xchg
dec
in
sub
lret
aaa
loope
dec
test
or
xor
pop
int3
lahf
cmpsl
xor
xor
repnz
xchg
xchg
cmc
cmp
jnp
filds
add
cmc
and
daa
inc
dec
scas
cmp
inc
cltd
mov
rol
xchg
sbbb
push
sbb
jbe
out
push
jle
repnz
push
or
and
enter
decl
pop
out
andb
cmp
or
es
lcall
lock
pop
pop
je
push
sbbl
mov
adc
lret
outsl
mov
cmp
dec
cs
pop
sti
repz
xchg
arpl
frstor
js
pop
push
jno
sbbb
scas
push
ss
xor
movl
movl
jmp
aas
mov
mov
dec
mov
aad
adc
sbb
test
sbb
lock
loope
add
jg
and
inc
les
stc
out
push
icebp
and
mov
int3
ss
push
mov
jmp
push
ret
test
imul
push
adc
jle
lcall
push
or
lods
push
mov
xor
imul
push
or
test
push
or
popa
stos
inc
xchg
xchg
push
and
inc
pop
mov
inc
in
ds
xor
jge
notl
cld
les
add
lods
sub
loope
fwait
sub
fwait
push
push
pop
xor
mov
call
mov
mov
popf
lods
push
hlt
or
and
or
mov
pushf
cmp
je
mov
arpl
sub
outsl
push
sub
push
rolb
pop
sub
cld
mov
push
stos
cmp
movsb
cltd
jb
adc
ljmp
mov
cld
pusha
iret
xchg
dec
pop
cmp
push
jmp
sub
mov
shr
in
outsb
adcb
fsub
add
jnp
rorl
push
mov
jbe
in
jge
inc
and
pop
push
xchg
pop
lods
in
stc
add
xor
xchg
cmp
inc
xor
sub
test
jl
mov
insl
mov
push
frstor
cmpb
push
jl
loopne
mov
fwait
aaa
jae
jmp
lret
add
pop
jbe
mov
inc
xchg
bswap
scas
push
sub
mov
push
inc
push
sbb
inc
loope
rdpmc
xchg
jo
cmpsl
pop
cmp
fldenv
xchg
dec
xchg
adc
in
ret
jg
add
in
lock
add
out
fmuls
sbb
daa
outsl
jl
incb
leave
or
pop
or
cmp
cli
int3
ret
cltd
loope
int
sbbl
arpl
hlt
or
adc
sub
mov
mov
out
mov
jl
popa
xor
out
or
jmp
or
cmpsl
jo
sbb
or
jge
fs
std
mov
add
xlat
sbb
in
inc
add
xorb
push
mov
bnd
movsl
sbb
cmpsl
mov
inc
mov
jge
in
adc
sub
pop
cmpsl
xchg
sub
out
mov
mov
test
mov
cmp
xchg
push
dec
adc
pop
sub
pop
lret
out
push
call
jmp
into
dec
test
inc
pop
movsl
jmp
popf
scas
pop
loopne
or
mov
push
pop
div
mov
jmp
lahf
ds
xor
lcall
sahf
scas
mov
ljmp
inc
inc
js
cmpsl
hlt
mov
bound
inc
mov
or
stc
scas
jae
pushf
stos
scas
sarb
push
stos
out
movsl
push
pop
dec
outsl
fldt
sub
add
dec
shll
xchg
jns
or
add
mov
pushl
or
testb
aaa
xchg
dec
jge
fidivrl
test
fdivr
fnsave
js
pushl
test
xor
sbb
inc
xlat
cli
je
gs
dec
pushf
sbb
clc
xchg
aad
pop
and
sub
sub
cwtl
popa
xchg
and
ds
aam
loope
shl
push
aad
iret
bound
into
mov
pop
lods
or
xlat
das
cmp
fstpl
sub
cmp
fmull
mov
sub
adc
jle
repnz
mov
inc
or
and
enter
mov
xchg
clc
xor
jo
das
mov
leave
cmpb
push
mov
fcmovb
jne
sbb
out
cmp
or
pop
mov
lahf
pop
aas
loop
push
aaa
repnz
mov
fimull
jp
add
sbb
lret
mov
int3
inc
mov
es
push
dec
cmp
add
or
dec
aaa
mov
and
mov
ret
xor
lods
mov
push
inc
rcll
jbe
push
enter
popf
or
jbe
aam
push
das
and
pop
lea
fiadds
and
cmc
outsl
inc
daa
leave
cwtl
in
loop
loop
inc
out
dec
xor
inc
mov
cmpsb
ffree
lods
inc
ljmp
mov
inc
xchg
aad
pusha
cmc
jle
mov
xor
lahf
mov
xor
xchg
out
inc
mov
mov
add
faddl
lcall
push
movsl
stc
clc
int3
pop
pop
xor
lds
movsl
mov
call
nop
fdivrs
lock
xor
mov
xchg
pop
xchg
jae
jae
mov
adc
ljmp
rcl
dec
xor
into
jae
pop
outsb
jns
popa
nop
data16
xchg
sub
test
out
push
pop
jp
loope
pop
jo
addr16
addr16
popa
and
jb
pop
dec
jecxz
fildll
out
notb
rclb
sbb
loop
fstl
pusha
negb
cmp
mov
outsl
jg
mov
jae
and
and
rolb
add
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
jmp
push
push
push
scas
sbb
inc
pop
jns
jo
mov
sbb
adc
xor
filds
or
bound
cmp
stos
mov
fcoms
jl
mov
ss
ja
movsl
aaa
cmp
mov
nop
xor
add
push
test
rcrl
popa
cmp
inc
add
popf
int3
cmp
adc
subl
loope
mov
stc
divl
and
repz
aam
iret
cmp
sub
sti
insl
clc
int3
out
pop
inc
xchg
enter
adc
and
dec
mov
add
jns
inc
cld
fstpt
or
pop
loop
jmp
dec
and
jecxz
pop
les
mov
mov
outsb
repz
adc
push
sbbl
mov
xchg
pop
jno
sub
pmulhuw
je
xor
test
stos
add
jnp
jp
repz
mov
lods
cmp
stos
in
or
mov
shlb
or
jle
inc
call
mov
int3
push
xchg
outsb
ds
adcb
repz
cmpsb
pop
aaa
cmpsb
mov
inc
fcmovnbe
mov
dec
adc
or
or
bound
xchg
jb
or
xchg
inc
sbb
jg
add
push
cmp
dec
push
insl
mov
imul
aam
in
xor
inc
in
mull
rorb
dec
inc
bound
lahf
pusha
lock
clc
fldenv
addr16
cmp
adc
lahf
and
pop
adc
ror
int
int
pop
adc
push
or
mov
jne
pop
push
mov
jbe
pop
sti
push
push
clc
xchg
sbbb
mov
shlb
addr16
push
add
cmp
bound
insl
loopne
dec
sbb
loop
mov
mov
insb
jb
fwait
out
add
pop
sub
xchg
push
sub
xchg
add
lds
and
pushf
aad
fwait
lea
out
loopne
rcr
and
movsl
ss
sbb
stos
stc
cmp
mov
mov
mov
sbb
add
sub
lock
jnp
jns
dec
push
cmpsb
xchg
jbe
sbb
xor
int
pushw
pop
dec
adc
aas
int
sub
mov
icebp
dec
mov
cmpsb
push
pop
mov
test
pushf
lock
mov
and
mov
jae
rcr
sbb
pop
insb
push
dec
ret
xchg
adc
dec
lea
aas
arpl
jb
xchg
mov
stos
xchg
jge
jbe
jl
jo
fld1
scas
or
or
sub
xor
div
mov
mov
sub
mov
mov
mov
jmp
jmp
push
and
cmp
mov
test
sbb
ror
idivb
mov
push
sti
int
mov
sbb
push
dec
mov
insl
and
cli
sub
icebp
push
adc
sahf
xchg
cmc
mov
in
cli
jbe
xchg
inc
push
aaa
loop
dec
ds
mov
mov
aam
cwtl
inc
ljmp
mov
xor
jnp
setns
stos
inc
pop
mov
repnz
mov
dec
leave
mov
lcall
add
pop
clc
arpl
test
inc
js
daa
sti
and
add
pop
je
xor
rcrl
add
leave
in
pop
inc
sbb
cmpsb
inc
xchg
out
dec
scas
es
pop
popa
sti
push
add
aad
negb
mov
in
mov
in
testb
or
test
xchg
mov
jnp
outsb
sar
js
cmpsb
inc
nop
dec
imull
sti
push
jbe
cmpsb
inc
xlat
pop
sbb
or
jno
lea
mov
mov
xor
mov
and
adc
addb
adc
iret
cmpsl
loope
sub
and
or
add
jge
jp
pop
ss
push
movsl
mov
push
add
pop
mov
or
insl
shlb
jo
inc
or
mov
repnz
mov
lahf
jne
pusha
xchg
popf
rcll
fucomi
mov
push
sub
or
fiaddl
inc
push
xlat
adc
arpl
jnp
ret
and
movsl
pop
xor
imul
pop
mov
in
mov
or
xchg
popf
add
or
cmp
test
aam
mov
pusha
pushf
imul
cmp
jp
pop
jmp
sbb
pop
adc
test
cmp
not
mov
adc
psrlw
inc
daa
fiaddl
pushw
jp
adc
popf
into
cmp
sub
inc
call
sbb
aaa
xchg
clc
ss
adc
mov
notb
scas
test
std
jo
data16
and
mov
mov
jl
mov
xor
mov
xor
out
pop
ljmp
cmpsl
mov
pop
imul
mov
rcrl
out
xchg
pop
inc
mov
ja
cmp
pop
stos
mov
pop
inc
sub
jbe
dec
insb
xor
dec
stos
and
mov
mov
push
or
inc
and
adc
mov
push
mov
inc
in
push
call
push
in
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
hlt
aam
adc
pop
and
cmp
lods
cmpsl
mov
xor
sbb
loopne
pop
loope
mov
lods
fwait
pop
mov
jnp
inc
mov
xor
xor
idivl
ret
imul
push
cmp
or
iret
jg
sub
or
imul
mov
jl
and
aad
lods
or
dec
cmp
mov
movsb
int3
orb
push
lock
in
rorb
outsl
sub
ret
or
lret
cs
pop
sbbl
cmpsb
leave
jae
jle
out
adc
adc
mov
push
sub
mov
js
cmp
xor
pop
pop
pop
fildll
sub
pop
mov
inc
into
aaa
pop
mov
outsl
mov
cld
adc
cmp
ljmp
sbb
push
push
xchg
lret
and
cmp
out
mov
cmc
outsl
dec
sti
or
hlt
adc
jle
aam
popa
shl
adc
mov
mov
xor
fldenv
jmp
mov
pop
shlb
pop
daa
or
dec
mov
mov
mov
pushf
push
test
sub
stos
fistps
pop
xor
push
outsl
pushf
movl
mov
sbb
jnp
xchg
mov
push
dec
push
imul
inc
stos
stc
mov
lcall
mov
or
inc
mov
aaa
jecxz
movsl
mov
inc
jno
stos
mov
inc
pop
cltd
stos
repnz
mov
stos
sub
pop
in
popf
or
clc
xorb
sbb
mov
mov
movsb
loope
mov
and
stc
gs
test
push
movsb
icebp
lea
leave
ss
xor
push
cmp
pop
int3
into
and
inc
das
or
xor
xorb
out
fcomps
ds
movsl
jp
cmp
sbb
dec
inc
fwait
loop
dec
pushf
daa
cltd
pop
xor
mov
xchg
cwtl
xor
jnp
xor
imul
add
pop
adc
pop
sub
xchg
xor
xor
xchg
push
ret
xor
rcll
addr16
fiaddl
push
test
mov
dec
aas
mov
push
push
test
sub
mov
xchg
fisubrl
jne
add
imul
sahf
fmuls
scas
or
fstpl
mov
rcrl
push
mov
out
xchg
std
fdivrs
mov
in
cmpsb
outsb
clc
das
shl
add
xchg
pusha
inc
aad
repnz
add
xorl
cli
rolb
sub
cmpsb
icebp
aam
rorl
cmp
hlt
loope
js
inc
popa
iret
mov
decb
andl
rol
xchg
mov
cmp
pop
adcl
lods
jmp
test
push
pop
ficoms
or
aam
pop
xchg
inc
mov
in
faddl
sub
mov
sub
shll
cltd
movl
mov
mov
add
or
mov
lea
jmp
lcall
ficomps
inc
dec
pop
jle
sahf
jne
push
adc
sbb
inc
sbb
dec
decl
gs
xchg
les
push
aam
daa
or
cmpsb
cltd
cmp
mov
push
adc
pop
or
je
jnp
mov
xchg
mov
inc
sub
dec
fdiv
or
or
lea
in
pop
in
test
and
or
es
sub
insl
and
lret
lea
push
cmp
dec
pop
arpl
jecxz
mov
cmp
repz
repnz
xor
sti
stos
push
test
cmp
mov
xor
arpl
sahf
cmp
sub
out
loope
cltd
ret
dec
inc
shll
pop
loopne
movsl
cli
lods
movsl
ror
xchg
ret
cld
pop
and
out
shll
popf
or
and
ret
push
pop
dec
imul
and
jecxz
test
lds
cmp
test
jne
stos
mov
out
sti
ss
push
adc
xchg
imul
adc
pop
adc
or
ljmp
imul
jmp
enter
add
push
cmp
sbb
testl
dec
lret
adcl
in
push
xchg
scas
icebp
push
lock
das
aaa
jb
xor
mov
lods
lds
xor
testl
fwait
cltd
sub
pop
out
cmp
addr16
dec
mov
mov
adc
mov
cmp
das
pop
pop
pop
sub
cmpsl
lret
sbb
mov
out
inc
mov
dec
cmpsl
aas
ljmp
dec
clc
aad
cmp
jmp
dec
into
xchg
jge
push
add
mov
leave
loope
movsb
test
add
jae
sbb
or
call
inc
push
aaa
out
repnz
xor
sbb
mov
adc
pushf
aas
push
test
adc
or
sahf
adc
pop
pushf
ljmp
in
xor
ja
lock
repz
inc
adc
dec
ret
push
mov
mov
out
mov
jae
ja
xchg
mov
sti
mov
out
mov
daa
xchg
jae
addr16
add
insb
inc
sbb
cmp
subl
inc
repnz
and
lock
sbb
mov
std
dec
fwait
lock
pop
jmp
xchg
push
addr16
ds
and
jge
sbb
in
mov
mov
iret
add
sahf
das
jle
imul
sbb
out
call
sti
mov
xchg
mov
mov
mov
hlt
cmp
adc
adc
add
stos
shlb
or
inc
lahf
lock
fsubs
inc
fisubrl
stc
fstps
ja
lret
mov
fidivrs
roll
jle
rcrb
outsb
pop
xlat
test
sub
cwtl
out
push
stos
pop
test
out
popa
lods
hlt
mov
xchg
pop
xchg
xorl
pop
and
push
fnsave
or
dec
inc
dec
hlt
jp
cmc
xor
cmpsl
insl
gs
aam
and
push
cmp
push
bound
add
xor
mov
mov
or
sti
push
movsb
inc
xchg
or
mov
movl
movl
mov
mov
and
xor
jmp
out
icebp
aaa
insb
aaa
sub
mov
or
sbb
jns
insb
negb
test
mov
pop
fs
cli
sbb
outsb
sbb
push
int3
in
adc
sbb
inc
jp
dec
inc
xchg
inc
adc
adc
fiadds
and
loopne
daa
inc
dec
aas
add
xchg
out
das
cs
fsts
jno
cmp
add
jg
aaa
fisttps
or
lds
flds
sub
push
dec
cmp
notl
dec
shr
data16
cmpsb
pop
adc
pop
test
scas
push
add
inc
scas
iret
dec
lock
sbb
sbb
inc
out
inc
std
cmp
sub
ljmp
iret
lods
and
aad
popl
push
sarb
lret
pop
movsl
add
push
mov
daa
shll
push
xchg
mov
and
out
enter
xchg
aad
iret
test
fwait
outsl
jae
divb
rol
pop
idivb
push
and
popf
mov
jmp
push
jg
push
loop
xor
idivl
sub
cmp
cltd
xchg
jo
cmp
add
aas
xor
test
mov
mov
pop
sbb
dec
jg
pop
xlat
inc
andb
mov
fwait
nop
cmp
and
mov
cmp
mov
xchg
jbe
decl
and
sti
push
adc
xchg
cmp
pop
in
xor
mov
popf
cmc
sar
mov
pop
mov
adcb
cltd
mov
out
or
and
icebp
xchg
out
adc
pop
fdivs
insb
aad
stos
lret
adc
adc
push
add
je
xor
or
pop
sahf
std
push
mov
xor
push
ss
mov
dec
sbb
pop
int3
push
dec
out
dec
push
xchg
adcl
add
insl
std
fiadds
jbe
mov
out
mov
xchg
in
xchg
jge
out
mov
cmp
push
hlt
loop
lods
ds
jae
andb
or
xchg
das
adc
or
out
xor
into
rcl
jno
jns
cli
into
lods
lret
jae
lea
enter
pop
insl
pop
sbb
sub
mov
cmpb
fistps
sub
pushf
xchg
sbb
push
pop
data16
jnp
adc
fldl2t
lret
pop
jbe
mov
jle
nop
das
jae
mov
stc
js
adc
sti
jg
jnp
aam
ljmp
mov
cmc
cmp
mov
mov
insl
int3
out
in
in
out
adc
ds
cmc
or
push
leave
cmpsl
mov
mov
js
mov
sub
adc
add
mov
xchg
pushf
cld
ds
loope
adc
out
outsl
push
wbinvd
sub
pop
xchg
push
mov
rorb
dec
dec
call
or
ja
push
jg
clc
mov
and
and
scas
sub
scas
es
inc
sbb
lods
inc
push
shr
or
and
xlat
sub
xchg
fildl
inc
int
gs
or
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
jmp
jb
pop
in
sbb
push
lret
rcrb
sbb
xorl
jns
mov
cmp
enter
jmp
dec
shlb
xchg
xchg
into
sbb
int3
cld
pop
and
push
add
push
pop
ret
mov
aam
sub
sbb
cltd
jg
lret
adcl
xchg
mov
pop
jno
and
and
subb
mov
or
jne
std
into
mov
stc
mov
imul
aas
jns
push
add
ds
test
shrb
imul
stos
imul
testl
sub
sbb
aad
and
loopne
push
shlb
loop
stos
mov
sbb
insl
xchg
sbb
or
mov
sbb
jne
je
mov
hlt
add
outsl
jge
fs
daa
mov
xor
leave
add
or
call
rorl
shrl
arpl
lods
sbb
xchg
xchg
pop
mov
lods
xlat
pushf
jne
mov
sub
sub
insl
sub
aaa
xchg
lahf
push
lods
leave
sub
add
jmp
cmp
xor
ret
gs
iret
lret
out
cmp
ds
out
rcrl
shll
pop
mov
sbb
arpl
repnz
cltd
into
popa
lahf
inc
in
xor
cs
dec
sub
mov
mov
add
sahf
hlt
dec
shrl
jle
sub
rclb
fisttps
jp
gs
test
sar
mov
cmp
inc
lret
push
adc
je
loope
jl
aad
nop
push
testl
mov
pushf
inc
adc
mov
dec
jb
std
xchg
jl
cmp
js
push
stc
xchg
ret
add
outsb
push
stc
add
cmp
in
pop
lret
sbb
dec
stos
shr
mov
rcl
adc
dec
hlt
imul
test
orl
jmp
sbb
fdivs
mov
rorl
insb
pushf
in
es
subl
gs
dec
cmp
xor
add
and
out
inc
cmp
cs
addl
push
scas
xchg
mov
xor
popf
out
add
pop
pop
js
lret
xchg
into
sub
ds
daa
mov
or
adc
gs
or
outsl
in
push
xor
inc
mov
cmp
pop
es
add
out
mov
in
jno
mov
fldcw
out
mov
nop
push
mov
ds
call
sbbb
sub
mov
ja
pop
mov
cwtl
mov
dec
gs
or
in
dec
sbb
adc
in
mov
jae
dec
jmp
loopne
fnstenv
jl
pop
push
scas
or
imul
pop
dec
mov
cwtl
outsb
pop
and
xor
fstps
mov
addr16
mov
inc
pushf
fcmovnu
xchg
xchg
arpl
inc
repz
pusha
pop
mov
clc
lahf
pop
jnp
fstpl
into
lret
bound
cli
sarb
mov
bound
arpl
dec
pop
ret
add
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
jmp
fmull
fiaddl
clc
push
and
jle
mov
sbb
fidivrs
xor
mov
jmp
popa
ret
fwait
lock
dec
lods
andl
orl
adc
jmp
jno
leave
sub
or
push
fadds
lods
push
repnz
mov
dec
scas
lret
lock
inc
and
jp
mov
iret
push
mov
and
xchg
mov
mov
jo
push
mov
pop
imul
lahf
inc
cmp
hlt
cld
dec
and
in
cmp
mov
inc
cmp
mov
mov
aaa
cmp
in
push
fadds
loopne
and
mov
popf
gs
cmpsb
inc
mov
pop
lret
dec
jp
shll
cmp
into
aad
test
xor
mov
inc
xor
mov
mov
adc
mov
or
shrl
pop
jo
dec
mov
loopne
dec
jno
xchg
pop
push
adc
push
pushf
mov
mov
ret
adc
jmp
mov
sbb
icebp
dec
pop
xchg
or
test
push
fstl
cltd
dec
mov
in
icebp
jbe
push
jne
mov
fsubrs
outsl
mov
jmp
or
adc
and
movsb
pushf
mov
cwtl
pushf
aaa
mov
dec
scas
cwtl
je
dec
insb
add
mov
fstl
js
mov
sbb
cmp
dec
mov
ret
pop
cli
rcrl
sahf
xchg
sbb
leave
adc
scas
mov
int
mov
cmp
mov
roll
lds
imul
stos
or
sahf
clc
sbb
mov
or
movsl
ja
inc
mov
aas
rorl
and
movsl
inc
hlt
inc
popf
mov
in
insl
sbb
movsl
loop
jge
pop
cld
jge
mov
fiaddl
shll
xor
fldt
fmul
fnstenv
movsb
lock
xor
mov
imul
fs
and
add
jmp
dec
and
scas
add
and
dec
push
cmc
shrl
add
mov
cli
je
lret
lret
push
ss
cmp
push
mov
lock
add
fisttpl
sub
test
or
fidivrl
icebp
aaa
xchg
testl
jbe
fnstenv
insb
cmpl
sub
test
mov
jge
mov
inc
je
sub
lods
xchg
xchg
inc
mov
cmp
jnp
cmpsl
mov
movsb
cmp
addb
push
das
cs
js
shlb
jl
sahf
stc
das
shrl
jg
push
jp
pop
fdivp
das
sbb
clc
xor
ds
sub
push
mov
mov
outsb
or
push
mov
outsb
inc
adc
jl
add
pop
scas
add
es
pushf
sbb
sbb
cli
push
or
lock
in
xor
iret
adc
adc
jmp
jb
clc
cmp
mov
fstl
pop
mov
mov
int3
sbb
lods
ljmp
push
lret
sub
cmc
or
sub
jl
inc
xchg
clc
cmpsl
and
adc
test
jg
test
lods
xchg
jb
mov
rclb
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
jmp
xchg
fistl
sbb
sbbb
hlt
mov
enter
xor
sbb
imull
loopne
jmp
fsqrt
stc
test
pop
stos
xor
jle
in
and
in
outsl
pop
out
mov
sbb
jmp
jmp
loop
jbe
in
std
fcomps
cmpsl
es
popa
int
cmpsb
cmpsb
popf
push
mov
add
les
outsb
movsl
js
ja
fsubp
icebp
scas
inc
inc
mov
aaa
ljmp
andb
xor
sub
imul
ss
in
dec
fwait
jl
adc
cmpsl
lret
movsb
into
mov
and
push
fldcw
cmp
jmp
stos
xchg
xchg
add
pop
js
aas
and
into
pop
sub
fidivrl
in
nop
ss
cmc
mov
push
sbb
insl
jbe
ret
xchg
pop
pop
xchg
sub
cltd
cmp
loopne
sub
and
shll
inc
push
aam
popf
mov
push
push
and
inc
in
lock
mov
out
xchg
mov
fsub
lret
aaa
mov
jno
fmuls
cli
mov
cmp
jo
test
mov
cmp
icebp
movsb
scas
mov
push
mov
dec
es
cwtl
ret
out
in
sbb
adc
in
adc
mov
mov
mov
dec
popf
xchg
xchg
cmp
ss
fnstcw
push
lret
xchg
dec
inc
loopne,pt
pop
and
ret
inc
pop
loop
jecxz
fisubrs
xor
dec
sbb
fadds
mov
int
icebp
lea
add
cltd
fs
add
pop
jecxz
sti
mov
sbb
inc
xchg
sub
stc
adc
cld
test
fildl
xorb
xchg
mov
pushf
push
movsb
in
cmp
jmp
in
sub
fdiv
clc
add
jge
adc
cmp
or
mov
xchg
popf
lods
sti
and
xchg
sahf
jg
sbb
subps
sub
mov
repnz
jl
and
xchg
and
hlt
lcall
mov
addr16
in
mov
dec
push
das
inc
add
loope
xor
dec
push
pop
aam
jns
jl
inc
or
xor
sub
mov
push
fsubr
sub
mov
les
adc
jg
lret
push
gs
cmp
sbb
loope
in
test
dec
call
jns
and
add
test
es
pop
dec
jg
pusha
aas
out
mov
xchg
sahf
adc
pop
mov
or
fs
into
cltd
mov
mov
cmp
mov
jge
test
shll
cmp
call
ret
sbb
and
nop
push
dec
cmp
lds
adcb
jnp,pt
xor
outsb
dec
sbb
shr
xor
jg
add
iret
ret
mov
pop
sub
fdivrl
jb
xor
xchg
adc
sub
and
inc
pop
xchg
pop
flds
into
icebp
pop
adc
inc
ret
scas
xor
or
sbb
mov
mov
mov
or
nop
dec
sub
sub
add
xchg
imul
fwait
bound
add
incl
add
mov
insl
ret
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
jmp
mov
push
sbb
sbb
cmc
cmp
sbb
sbb
xor
sbb
out
sub
lret
push
xchg
mov
lahf
mov
sbb
and
in
popf
paddusw
or
add
ja
popf
orps
xchg
popa
lret
xor
push
cmp
push
roll
mov
adc
iret
sub
in
daa
outsl
mov
aaa
scas
in
incb
mov
rol
mov
mov
js
push
push
mov
add
push
fcompl
stos
cmpsl
adc
out
sub
sub
or
mov
jbe
ret
mov
lret
jg,pt
loope
test
and
add
repnz
mov
cmpb
jns
cmp
mov
ds
push
movsb
cmp
add
push
add
mov
jge
mov
repnz
in
jae
jo
pop
mov
cwtl
inc
in
push
dec
mov
xorb
ret
outsl
inc
mov
pop
push
jae
loop
xor
popa
imul
add
mov
cmp
sbb
ffree
mov
loop
cli
and
pop
adc
cmpsl
into
sub
ja
and
sbb
pop
aad
pop
push
arpl
pop
in
pop
test
jo
jns
test
sub
repz
mov
cs
sti
out
rolb
enter
push
int3
mov
outsl
cmp
sti
sbb
nop
sbb
xlat
shlb
sub
xor
push
xor
dec
mov
clc
int
fcmovnb
inc
comiss
icebp
pop
cmp
push
push
mov
xchg
jns
inc
je
xor
xchg
inc
and
subb
xchg
movsb
cmp
movsl
push
cmp
or
xchg
divb
maskmovq
mov
fst
sbb
sahf
stc
sbb
inc
push
pop
cltd
dec
mov
sbb
scas
jno
xor
jo
decb
stos
xchg
inc
aad
inc
cmc
mov
pop
movsl
mov
jp
out
int3
imul
iret
inc
ja
stc
jp
mov
imul
and
iret
xor
jge
bound
pop
and
sarb
push
ljmp
scas
sbb
jb
xor
rol
jl
stos
sub
test
jl
sub
dec
bound
dec
mov
push
lods
lds
rcrb
faddl
xlat
mov
mov
ret
push
xor
movb
je
xor
xlat
pop
lods
pop
mov
mov
push
cmp
and
cmp
int
popa
xor
ljmp
test
scas
mov
mov
or
inc
stos
les
sub
cmp
jnp
mov
cmp
mov
int3
insl
int3
add
or
lock
xor
mov
adc
adc
negb
jge
cltd
mov
and
mov
ds
jp
cmp
loopne
cmp
push
xor
loop
das
xchg
lods
sbb
pop
xchg
pop
lods
fisubs
cmp
or
mov
inc
sub
xchg
jb
insl
jle
test
test
dec
cmp
or
sub
mov
add
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
jmp
cmp
mov
xor
inc
jo
jo
stos
sbb
test
jp
xor
repz
mov
jns
jo
inc
push
xor
cli
jnp
add
mov
sbb
movsb
cmp
fcmovnb
ljmp
loope
rcrb
loopne
rcll
jns
pop
sub
aaa
repz
xlat
adcb
das
cltd
cmp
in
ret
jl
pop
mov
repz
adc
cmp
scas
mov
movsl
in
push
shrb
adc
aaa
pop
test
xor
cmpsb
dec
jg
add
sub
into
das
sbb
gs
ret
pop
jno
test
dec
repz
cmp
loopne
arpl
popa
mov
repz
int3
xor
cmpb
lret
adc
add
add
jae
in
insb
lret
fidivs
es
jecxz
and
stc
arpl
and
fstpl
cmp
pop
jo
mov
dec
pop
repz
cld
jmp
push
jo
inc
jae
notb
cmpsb
fistl
jmp
adc
push
pop
scas
lock
incb
inc
icebp
cmp
ss
sub
inc
nop
mov
jnp
cmp
jge
in
xchg
mov
adc
lods
push
addr16
imul
cmpsl
xchg
aaa
pop
add
repnz
jo
mov
dec
xchg
insb
inc
xchg
sti
jb
cwtl
movsb
inc
test
fwait
xchg
inc
test
lock
stos
cltd
ret
jb
outsb
mov
push
mov
sbb
lea
mov
test
inc
mov
das
mov
fistps
rcrl
pop
mov
inc
in
pop
push
mov
mov
leave
sbb
dec
sbb
jle
xchg
movsb
orb
push
arpl
add
das
daa
fstps
sub
arpl
sbb
mov
push
popf
xorb
adc
sbb
adc
push
mov
cli
xor
imul
ud2
mov
outsb
stos
lret
jp
jo
flds
icebp
and
shrl
add
dec
mov
and
push
and
imulb
pop
mov
jecxz
mov
movl
movl
movl
movl
movl
movl
jmp
mov
xor
movsl
mov
mov
sbb
mov
testl
pop
xor
adc
jmp
or
outsb
xchg
std
jmp
adc
and
ret
stos
test
test
and
adc
mov
enter
aaa
mov
js
loope
movsl
add
aad
mov
scas
adc
jbe
cmpsl
sub
js
push
mov
std
push
or
cmpsl
bound
jbe
pop
add
lds
cmc
inc
inc
inc
xchg
xchg
mov
pop
nop
pop
mov
lock
jne
and
jb
aad
mov
cld
inc
in
mov
fisttpll
lea
sub
xchg
pop
lods
xor
mov
int
jnp
mov
sbb
fstl
sub
mov
dec
push
mov
jmp
incb
lods
or
add
insb
popa
lcall
pop
mov
pop
xlat
in
nop
sbb
in
call
xor
cmp
mov
push
sbb
sbb
or
fistps
push
push
pop
loop
nop
scas
repz
stos
iret
adc
out
ds
add
inc
out
fdivs
sub
or
fs
pop
xchg
stos
xor
push
popa
xor
sarl
nop
xchg
mov
xor
lods
in
or
scas
or
xchg
dec
add
pop
fistl
pop
pusha
jmp
sub
fsubl
lcall
imul
xchg
mov
mov
es
push
ret
stos
inc
pop
clc
push
xor
dec
outsl
negb
mov
lahf
lahf
jmp
dec
mov
mov
test
ss
ficoml
sub
popa
stc
inc
loop
cmp
mov
out
lods
sar
lahf
mov
jmp
leave
cltd
lds
jnp
mov
cmpb
add
mov
jmp
adc
scas
fs
leave
lock
cwtl
jl
xchg
sahf
filds
or
test
push
inc
scas
jge
ficomps
daa
in
leave
nop
insb
enter
sub
or
ret
fwait
cld
cmp
scas
or
mov
mov
mov
push
jmp
sub
and
jb
push
stos
push
pop
add
test
in
clc
movsl
out
ds
das
adc
lret
shl
mov
insb
cmpsb
add
aad
stc
out
xchg
sbb
and
lods
stos
lock
pop
jle
mov
cmp
mov
testl
and
andl
iret
pusha
movsb
sub
sbb
xchg
pop
inc
mov
jge
insl
cmp
mov
insb
and
mov
adc
sub
cmp
push
sahf
jae
cmpsl
sbb
push
movsb
mov
inc
sbb
lahf
cli
xor
test
push
outsb
jno
aad
lcall
mov
dec
jl
call
push
mov
xor
loop
mov
mov
xor
or
lahf
adc
es
cmp
into
insb
push
sti
inc
dec
cmpsb
lcall
daa
bound
jmp
or
popa
sbb
push
jg
test
add
and
fsub
je
mov
rolb
mov
loop
into
xor
clc
or
pop
cmpsb
sbb
cs
cmp
lcall
xchg
jmp
mov
push
int3
mov
in
pop
scas
xchg
and
mov
mov
movsb
xchg
sbb
arpl
dec
mov
in
pop
mov
imul
das
ss
adc
in
gs
stos
loop
test
jmp
push
es
xor
cmp
dec
push
mov
cwtl
dec
pop
mov
ja
mov
inc
mov
cmpsl
cmpsb
adc
subb
shlb
cmovnp
test
into
fwait
adc
aam
xchg
dec
in
inc
or
in
outsl
dec
mov
out
test
or
sbb
loopne
cwtl
xor
in
push
fcmovbe
dec
repz
scas
cmp
int3
iret
cmp
out
cmp
pop
and
sbb
pop
out
jmp
mov
mov
push
xor
inc
xor
push
mov
js
std
pop
test
inc
xchg
jg
div
fiaddl
dec
daa
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
jmp
leave
xchg
dec
sub
sub
mov
mov
push
pushf
sbb
test
jg
es
out
in
sbb
idivb
std
sub
std
jp
jae
push
xor
push
sub
cmovbe
testb
mov
jg
enter
insb
fidivrl
inc
jnp
sbb
adc
mov
mov
rclb
sub
daa
pop
and
jecxz
enter
xchg
inc
jge
or
sbb
sub
jp
aam
jbe
nop
cmp
and
cld
int3
mov
les
jmp
xchg
mov
gs
xchg
fldt
sub
xor
or
insb
jle
int3
test
fcompl
xchg
clc
and
xchg
out
mov
mov
addr16
jg
gs
fbld
dec
fs
mov
notb
rclb
out
lcall
and
push
push
mov
into
jo
xchg
clc
mov
into
aam
push
and
push
mov
push
test
mov
mov
and
fdiv
lret
jmp
idivl
aad
push
mov
cli
push
lret
mov
dec
sub
pushf
add
cmpsb
mov
popa
and
imul
pushf
std
fisubrl
mov
cmp
repz
cmc
pop
mov
xchg
ret
movsl
dec
insb
rcr
lea
test
cmp
stos
imul
lds
iret
cmpsl
stc
stc
shr
cmc
outsl
lret
pushf
sbb
sbb
mov
or
or
mov
cmp
shrl
out
xor
lret
mov
shll
lock
aam
pusha
cs
and
xchg
mov
cmpsb
sub
adc
jp
adc
orl
cs
addb
aad
test
pop
push
sahf
sbb
xchg
push
mov
inc
stos
push
sbb
imul
xor
data16
movsb
call
fs
mov
cmp
fcmovb
push
push
lods
jnp
pop
adcb
add
insb
adc
mov
inc
hlt
pop
xor
add
or
add
jge
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
jmp
insl
jmp
cwtl
xchg
popf
pusha
outsl
mov
xlat
jae
cmp
sbb
mov
test
inc
or
popf
jmp
insb
call
mov
ds
ret
cli
xchg
negb
and
inc
in
push
sbb
fidivl
movsb
enter
in
jg
daa
in
push
sbb
mov
adc
push
pop
push
jp
mov
cli
mov
test
jg
ret
in
jl
inc
xchg
jmp
dec
xchg
mov
sub
stc
aas
outsl
mov
inc
lock
sbb
out
push
mov
lcall
cmc
or
mov
xchg
sub
sbb
movsb
lret
or
fisubl
vmovaps
cmpsl
lret
dec
in
shlb
mov
imul
test
dec
xor
in
xchg
push
call
aad
sub
xchg
fwait
cmp
adc
jns
je
xor
fcomp
mov
inc
sub
imul
aaa
or
mov
mov
sub
add
out
jnp
mov
and
jecxz
lods
adc
inc
inc
ret
outsb
fisttpll
mov
lfence
mov
insl
xchg
shl
test
enter
xrelease
sub
add
js
mov
icebp
dec
add
adc
in
adc
xor
popa
imul
xor
push
cld
or
cli
outsb
add
in
xlat
cmpsb
mov
ret
stc
pop
sbb
push
lods
jo
push
cmc
mov
insl
or
adc
mov
enter
adc
in
iret
fsubl
sahf
add
mov
test
lret
scas
adc
mov
sbb
test
pop
rorb
rcrb
dec
call
iret
dec
enter
dec
outsl
lock
cwtl
jecxz
add
adc
loope
mov
addl
ja
push
sbb
cmpsl
pop
sbb
shrb
rorb
pop
lds
rclb
and
mov
das
inc
adc
add
fiadds
out
jg
inc
inc
xchg
add
inc
sbb
maxps
adc
cli
shl
in
mov
mov
arpl
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
jmp
push
xchg
mov
and
int
mov
enter
test
ja
sub
sbb
flds
dec
dec
push
dec
xor
inc
xchg
push
jne
inc
mov
enter
add
xchg
aad
ror
adc
mov
mov
cmpsl
fildll
pushf
ja
test
and
nop
push
ret
push
ljmp
les
jecxz
sahf
fisttps
orl
cmp
add
push
mov
mov
dec
out
addr16
pop
jae
mov
lods
xchg
xchg
pushf
adc
aas
out
inc
out
inc
sub
lcall
mov
add
mov
pop
outsl
xor
jmp
out
jle
icebp
insb
shr
popf
and
ds
push
push
add
xor
outsb
rolb
jle
mov
into
lcall
out
sub
push
addr16
jecxz,pt
cmp
lcall
je
mov
inc
xchg
adc
filds
jo
mov
dec
enter
pop
cmpsl
jne
aam
imul
push
sti
mov
add
int
xchg
imul
loopne
test
add
sar
xchg
xor
jo
and
or
mov
adc
ljmp
pop
ds
ret
inc
cmp
mov
push
lea
fcoml
frstor
iret
dec
xor
push
dec
loop
repnz
movsl
or
repnz
enter
imul
mov
and
icebp
test
fsubrs
xchg
mov
cmp
pop
leave
frstor
lods
icebp
mov
cmovp
dec
repz
and
push
cmp
mov
nopl
scas
mov
mov
push
stos
xchg
xchg
stos
mov
nop
fwait
xor
cmp
push
inc
sub
imul
xchg
xor
fbld
ja
mov
jl
pop
dec
jecxz
mov
fidivrl
ds
popa
cmp
inc
jp
push
mov
leave
div
mov
xor
or
jmp
push
and
mov
push
nop
sbb
test
cmp
and
stos
or
dec
and
xor
imul
clc
repz
rorb
inc
ret
add
push
shll
and
sbb
and
fisubl
cs
and
dec
pop
ljmp
dec
movsl
data16
cmpl
mov
mov
xor
enter
movsb
sahf
push
scas
add
xor
mov
mov
jg
leave
sbb
cmpsl
pusha
xchg
in
cmp
aas
fwait
sti
add
pop
andb
xor
cs
lret
in
sbb
mov
repnz
enter
adc
cwtl
cmp
sub
mov
jle
pop
jp
bound
call
cs
and
cmp
loop
pop
or
mov
sbb
stos
dec
cmpsl
jg
bound
mov
xorb
pop
adc
hlt
dec
dec
jl
or
movsl
jno
inc
or
fwait
adc
imul
mov
adc
fldl
jmp
fdivs
imul
stos
out
xchg
shrl
push
bound
scas
push
pop
adc
mov
mov
inc
data16
and
cmp
add
lods
mov
sub
mov
cmp
inc
mov
out
mov
into
mov
jo
enter
lods
ss
fmuls
adc
adc
cmpsb
jbe
push
pop
and
inc
xchg
push
addr16
aam
int
ret
popa
push
inc
xchg
loope
push
fstpt
inc
mov
nop
jmp
outsl
insl
xchg
or
pop
adc
into
inc
adc
ffreep
and
xlat
mov
mov
cmp
jbe
cmp
sbb
jns
push
push
leave
or
inc
aaa
js
dec
addr16
and
sbb
jno
push
inc
shrb
pop
in
dec
imul
fst
enter
and
ljmp
cmp
pop
fwait
bound
ja
int3
lret
movsb
sbb
out
ja
rorl
or
inc
inc
hlt
jg
add
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
bound
and
lds
sarl
adc
sbb
stos
scas
adc
xchg
mov
xlat
imul
stos
fsubrs
cmp
stos
std
in
ja
xchg
idivl
outsb
lcall
pop
jecxz
sahf
sahf
jb
int3
ret
cltd
or
add
sbb
cmpsb
daa
imul
jns
pop
mov
bound
mov
sbbb
ret
mov
pop
test
jmp
pop
in
lds
xchg
pop
pop
xor
and
add
rcll
scas
lods
fsubs
loope
or
mov
cmp
sahf
fisttps
loope
inc
sahf
xchg
dec
or
cwtl
mov
aaa
aaa
fsubrl
addr16
iret
es
popa
fwait
data16
inc
jp
jno
das
mov
pop
xor
clc
lret
mov
xor
xor
push
jb
mov
stc
pop
repnz
or
sbb
xor
loopne
repnz
dec
sub
sti
stos
jmp
adc
sbb
insb
ja
gs
or
pop
sbb
inc
in
dec
adc
ja
lahf
push
hlt
and
in
pop
xor
mov
dec
xlat
lds
cmpsb
fists
mov
xor
xor
ljmpw
rorl
daa
sbb
sub
lcall
mov
fnstenv
adcl
jnp
push
sub
or
lea
push
jo
adcl
testl
xchg
jl
and
add
cwtl
mov
lods
test
dec
loopne
pop
push
add
fwait
inc
xchg
or
xchg
mov
or
and
sbb
test
jb
into
lods
lds
sub
int
imul
inc
ljmp
push
repnz
push
pusha
sub
inc
pushl
mov
pop
jge
jmp
xchg
mov
cwtl
push
es
jb
lea
sub
sub
jle
xchg
sub
mov
or
dec
or
shrl
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
dec
mov
aam
movsb
sub
bound
jo
xchg
sbb
sbb
pop
aas
call
sbb
fstpl
inc
daa
pop
icebp
xlat
jbe
mov
pusha
jae
and
fcompl
and
add
pop
cmp
arpl
sbb
rorl
arpl
xlat
call
call
pop
in
rcrb
fidivl
xor
mov
popf
arpl
inc
pop
lods
cld
pop
adcb
fisttps
push
test
icebp
insb
mov
cwtl
aas
jae
push
test
call
daa
mov
xor
push
lret
ss
mov
xorl
pop
movsb
xchg
xchg
inc
aam
por
loope
insl
mov
jmp
and
popa
xchg
fnsave
inc
decb
xchg
test
mov
add
jae
ljmp
adc
sub
or
jno
setp
sbb
addl
lahf
mov
adc
adc
pop
sub
mov
lds
iret
fisttps
xor
nop
cmp
cmp
mov
enter
ja
in
xchg
aaa
xlat
cmpsb
add
cltd
pushf
dec
andb
gs
dec
push
or
stos
sub
mov
cmp
pushf
inc
daa
adc
and
pusha
push
add
ret
sub
out
push
mov
gs
inc
cmpsl
loopne
sti
into
jmp
notb
lahf
insl
cmpsl
xchg
push
pop
in
sbb
mov
push
adc
mov
pop
test
jge
sub
lods
mov
add
pop
sbb
mov
ds
push
fcmovb
rcll
and
outsl
push
test
hlt
aaa
adc
ljmp
mov
mov
mov
aad
into
fcmovne
aas
add
cli
outsb
lret
cmpsl
xor
in
inc
shrl
stc
mov
outsb
jge
test
mov
cltd
mov
mov
loop
scas
inc
enterw
wrmsr
cmp
cmp
sub
xor
imul
cld
add
shll
cmpsl
movsl
xor
or
imul
inc
xchg
adcb
dec
neg
add
adc
jle
idiv
enter
push
xchg
je
fildl
sub
aaa
mov
mov
aad
jg
lods
rcrl
cltd
xchg
in
sbbb
inc
jmp
cmp
enter
push
mov
daa
jae
jno
mov
repnz
les
divb
sbb
lock
and
push
jecxz
cmp
movsb
push
inc
fcomip
mov
lea
cld
dec
sub
push
inc
jae
cmp
rcll
in
add
fcmovne
xor
pop
icebp
and
push
push
lret
in
adc
dec
lcall
cmp
hlt
jo
pusha
insb
fcompp
test
xor
in
in
sbb
and
jp
lret
push
xchg
pop
jg
cmpsb
movl
jmp
into
jne
inc
sbb
pop
clc
push
sbb
sbb
sbb
mov
pop
lds
addr16
fisubl
out
xchg
pop
fcmovbe
sbb
test
mov
fimull
jle
scas
andb
mul
cmp
inc
arpl
xlat
push
iret
cld
sbb
xlat
push
jmp
pushf
pop
ds
jp
loopne
push
mov
xor
popf
sbb
mov
clc
jecxz
push
ljmp
jns
iret
sarb
cmpsl
push
jnp
cwtl
nop
mov
cmc
mov
testl
stc
jecxz
out
bswap
dec
xchg
fwait
inc
enter
repz
stc
jg
and
notl
fwait
inc
or
mulb
lea
sbb
frstor
data16
int3
mov
cmpl
push
mov
adc
cmpsb
hlt
mov
jns
cmp
ja
out
lds
jg
cld
mov
pop
cwtl
push
sbb
inc
push
pop
cmc
jl
lret
push
lds
xor
xchg
dec
loop
lds
add
fcomp
aam
stos
add
sub
stos
in
aas
add
jg
cltd
cmpsb
pusha
inc
inc
dec
mov
cmpl
push
push
lcall
fwait
mov
pop
imul
pop
or
dec
movsb
push
inc
ficompl
pushf
or
scas
mov
loope
andb
mov
and
xor
sbb
in
dec
pushl
cmpsb
mov
or
mov
bound
sub
shll
bound
and
sti
dec
lret
popf
dec
cli
xchg
insl
sbb
int
vmovsd
enter
ja
pop
xor
jno
fbstp
xchg
in
mov
hlt
or
hlt
pop
lock
sbbl
hlt
mov
push
push
gs
sbb
or
notb
lea
dec
pop
sbb
pop
scas
movsl
cltd
cli
std
xor
or
aam
xchg
push
and
call
ret
or
dec
adc
xchg
repz
lcall
ret
fcoml
div
sbb
cmpsl
lea
int
imul
cmp
pop
pop
fcomi
push
or
and
jmp
push
and
test
bound
cld
test
ret
sub
lea
mov
icebp
mov
stos
inc
sub
mov
xchg
jne
mov
adc
lcall
call
bound
sbb
out
stc
inc
enter
and
jno
clc
push
inc
ljmp
xchg
shll
dec
jmp
xor
add
hlt
cmpsl
add
dec
xorb
fs
icebp
inc
push
dec
cmpsb
jmp
jae
mov
cmp
sub
pop
cmc
fsts
adc
loope
dec
das
fdivrs
icebp
out
xchg
movsl
adc
mov
xchg
sarb
cmp
xchg
loope
dec
push
inc
sahf
or
xchg
movsl
sbb
int
add
cwtl
loop
adc
or
bound
outsb
mov
scas
shrl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
jmp
das
ret
pop
sub
ret
xchg
mov
cmp
sbb
sbb
daa
cmc
xchg
pop
xor
pop
or
or
sbb
inc
es
lods
lds
adc
push
ret
icebp
nop
push
outsl
jl
push
ds
sar
rclb
mov
pop
and
aas
lods
mov
xchg
les
push
mov
push
xor
inc
testl
xor
pop
shll
lea
sbb
cmc
dec
cmpsb
sti
adc
lret
in
xchg
add
pop
cmpsb
je
iret
ss
mov
cli
in
sbb
mov
jecxz
jmp
xor
xchg
dec
sub
mov
xchg
outsb
pop
jmp
mov
mov
lahf
test
insl
test
loopne
repz
sub
ljmp
cmpsb
fs
loope
popf
cmp
fiaddl
cwtl
nop
mov
adc
outsb
xchg
adc
or
sbb
cwtl
nop
jbe
and
jecxz
lret
mov
in
xchg
push
push
add
or
out
sub
sbb
mov
iret
fadds
dec
mov
inc
jmp
test
int3
push
call
cmp
dec
jmp
mov
jbe
and
inc
xchg
aaa
std
mov
int3
adc
push
out
push
stc
cmc
xlat
out
inc
fimull
mov
dec
push
or
test
dec
mov
fdivrl
sub
sub
jmp
sub
and
sub
fisttpll
jb
sbb
scas
or
jmp
out
inc
sub
adc
stc
pop
jo
jle
pop
rorl
xchg
jmp
je
in
or
std
jg
xchg
loope
and
mov
adc
bound
mov
jo
lahf
cmp
cmp
xor
fwait
mov
push
ficompl
fmuls
push
jle
fistps
les
mov
jp
test
pop
cmc
jle
xchg
ja
outsl
dec
mov
jnp
mov
hlt
adc
in
lock
mov
scas
movsl
lods
inc
mov
clc
cmp
mov
mov
cli
mov
int3
je
inc
mov
cmp
loope
or
mov
out
sub
mov
mov
pop
mov
or
arpl
out
out
stos
or
idivb
subps
subb
in
leave
cmp
and
add
in
into
or
movdqa
push
icebp
mov
gs
es
cmp
sub
das
add
jl
push
or
mov
mov
es
in
mov
jmp
cmp
or
and
test
int
push
push
jnp
je
sbb
out
cmp
inc
loopne
sub
mov
xor
arpl
shlb
mov
xor
fidivrl
shrl
int3
pop
mov
lcall
cmovo
fdivrl
dec
daa
fldenv
cmpsb
adc
cmp
pop
std
xor
stos
dec
dec
pop
add
xchg
mov
aas
arpl
inc
pop
mov
inc
bound
pop
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
jmp
fs
cmp
cmpsb
dec
adc
cltd
jb
sbb
sbb
push
and
sub
mov
xchg
outsb
fbstp
add
fcomi
int3
dec
popf
dec
nop
jle
dec
cmp
pop
inc
xchg
nop
out
int
lea
add
insl
std
jno
nop
inc
and
cli
jb
pop
dec
lret
mov
cmp
adc
pop
fcmovnb
mov
f2xm1
inc
sbb
int
in
in
jb
inc
jnp
pop
iret
xchg
cli
cmpsl
fidivrs
sbb
add
cmp
jmp
or
push
aad
pusha
lods
xchg
loopne
fcomps
in
icebp
xor
hlt
dec
dec
imul
inc
pop
xor
fldt
int3
push
shr
xchg
call
or
mov
cmpsl
subb
adc
lods
aad
dec
add
lods
out
data16
es
pop
mov
jnp
sub
inc
sbb
leave
in
inc
cld
mov
inc
push
mov
xchg
cs
arpl
or
scas
lods
movsl
gs
rcll
pop
scas
adc
xchg
movsl
jno
push
scas
pop
xor
push
mov
xchg
test
cmp
loop
mov
mov
mov
test
xchg
in
mov
pop
loope
dec
mov
ret
adc
es
ficoml
cmp
jae
rorl
in
mov
lods
les
gs
sbb
xor
dec
sahf
mov
ljmp
mov
fwait
or
cmpsb
ds
or
mov
mov
mov
sub
into
xor
pop
lods
nop
sti
insl
push
xor
push
jo
je
xchg
js
js
lahf
fucom
mov
mov
cmp
jecxz
mov
or
inc
aad
mov
mov
stc
in
push
jle
les
scas
test
push
andl
adc
fisubs
inc
out
mov
lds
lock
nopl
std
out
cltd
pop
cld
xchg
sbb
imul
lret
mov
sbb
xor
and
add
inc
or
rolb
mov
mov
outsb
popa
jnp
cmp
pop
sub
fisubrs
xchg
mov
lahf
fbld
cld
dec
je
mov
push
je
add
rcr
clc
sti
sti
xor
push
jmp
pushf
jecxz
adcl
cmp
push
lcall
fwait
arpl
sti
popa
ficompl
loopne
lock
in
add
rcrb
mov
mov
jae
jbe
ror
addr16
mov
jmp
mov
push
js
call
pop
adc
jp
jae
sub
fdivrl
loopne
fistps
jg
or
enter
mov
xchg
mov
mov
cmp
pushf
mov
sbb
ret
mov
pop
outsb
add
jg
jo
push
fadds
inc
scas
imul
test
icebp
push
mov
fdivrs
push
int
daa
aas
loop
je
jne
sub
mov
xchg
adc
sub
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
jmp
sbb
sbb
jo
mov
sbb
jns
sbb
test
cmp
fisubrs
movsb
out
shr
aas
nop
decb
popf
pop
cmp
mov
lcall
xchg
clc
add
sahf
out
xchg
and
int
je
and
xlat
outsb
dec
xchg
add
repnz
lds
adc
sbb
das
xchg
and
or
fimull
test
xor
in
jecxz
aaa
push
js
dec
insl
cmp
cmp
adc
les
mov
dec
mov
js
pop
inc
xor
sbb
mov
ljmp
es
push
adc
addr16
mov
xor
xchg
mov
jg
jo
xchg
xor
sbb
jp
xchg
xchg
add
pop
add
lahf
lods
xchg
imul
fnsave
fidivl
scas
outsb
shr
xlat
jo
fndisi(8087
pop
jne
sti
xchg
stos
dec
or
push
push
pop
inc
inc
xchg
pop
jg
mull
scas
hlt
loopne
jb
daa
adc
fwait
mov
fnstsw
test
bound
stos
lcall
or
mov
cmp
lahf
xchg
adc
sbb
jp
pop
fucomip
arpl
fdiv
sbb
xchg
xchg
addr16
or
dec
dec
aas
dec
jbe
pop
inc
push
into
sub
push
pop
inc
lock
cmpsb
inc
mov
test
cmp
jp
movsb
mov
mov
test
xor
int
mov
pushl
loop
ja
stos
cmp
pop
mov
mov
out
push
cmpb
mov
add
mov
sub
out
adc
loope
mov
sahf
mov
add
add
test
ret
or
sub
js
subl
cmp
aaa
mov
dec
loope
or
push
mov
xor
jns
cmp
das
test
rcll
shlb
inc
enter
scas
repnz
xchg
mov
cmp
add
pop
and
nop
jne
jne
sbbl
push
loope
inc
test
aam
ret
aas
mov
push
ss
out
shr
dec
lods
ja
icebp
inc
dec
je
fs
test
mov
xor
loopne
and
in
loopne
jne
aaa
loope
xor
sti
loop
data16
orb
mov
movsl
jo
gs
push
add
sub
xlat
out
sub
lods
inc
mov
arpl
pop
int3
and
mov
or
lahf
mov
rorb
icebp
sbb
adc
push
out
pop
shll
fcom
fs
xchg
cmp
cmpsl
xor
pop
mov
ret
fwait
push
enter
pusha
sbb
mov
inc
in
inc
fwait
popa
fildll
lods
mov
pop
or
mov
sbb
and
mov
jmp
sub
jl
mov
mov
inc
push
or
or
jae
call
mov
xchg
call
sub
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
jmp
adc
xor
jno
insl
mov
data16
jns
sbb
and
pop
das
enter
movb
dec
pop
cmp
xchg
test
and
inc
cli
and
fucomip
push
repnz
push
xchg
pusha
sahf
mov
fsub
sbb
lea
sub
xor
sbb
xchg
shlb
cmp
and
mov
mov
mov
add
rcr
and
xor
daa
hlt
sbb
loope
decb
inc
popf
leave
jbe
in
fisttps
pop
je
ds
pop
push
mov
pop
aad
sti
mov
aaa
xor
mov
movsl
fucomip
notb
mov
cmp
sub
dec
pusha
inc
insl
fsubl
mov
orl
dec
leave
insb
pushf
call
dec
imul
inc
enter
into
push
jns
push
inc
mov
popf
stc
mov
ja
sub
inc
jnp
cmpsb
push
push
jl
cmc
in
sub
adc
fldenv
icebp
inc
dec
ljmp
filds
xor
rcr
mov
hlt
adc
fyl2xp1
sub
out
movsl
inc
ret
sbb
sub
in
dec
cmp
mov
fwait
push
mov
fimull
fsubrl
loop
insl
insl
add
push
xor
pop
pop
js
lock
xchg
sahf
int
adc
lods
or
sarb
ds
sbb
add
mov
daa
lret
pop
sbb
dec
inc
mov
add
mov
xor
in
or
es
adc
jl
pop
mov
adc
push
mov
fidivl
xchg
pop
sarl
lds
aam
or
jecxz
repnz
pop
pop
mov
fwait
repz
pop
loop
bound
cmpsl
xchg
pop
sahf
in
add
and
xchg
rol
pop
mov
xchg
inc
icebp
mov
and
cmpsb
rorl
je
adc
ret
pop
and
xor
call
cld
mov
stos
sarb
dec
js
cmpsl
mov
rol
pop
mov
xor
cwtl
out
cmp
add
push
jne
xchg
mov
jnp
add
cmp
fiaddl
mov
mov
xchg
jnp
xor
pop
or
mov
scas
dec
adcl
ret
ds
out
mov
sub
add
scas
push
in
xchg
repnz
inc
shrl
loop
scas
sbb
scas
test
ret
adc
addr16
and
imul
cli
addl
fcmovnu
cmpsl
adc
mov
add
xchg
dec
out
repnz
inc
js
jp
sub
jbe
arpl
sbb
pop
push
mov
pop
scas
cmp
insl
arpl
pop
jmp
mov
std
push
add
sbb
mov
xchg
repnz
xchg
mov
and
mov
outsl
adc
jns
or
shll
or
sti
inc
stos
adc
iret
or
and
andl
inc
incl
rclb
icebp
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
jmp
or
hlt
add
fistpl
mov
stos
addr16
jns
sbb
mov
aam
hlt
cmp
cmc
sbb
adc
negb
cmp
fildll
fdivrl
out
or
sbb
sbb
mov
aaa
pop
das
inc
popf
or
xchg
shrb
sti
fisubs
mov
std
mov
in
lods
xor
lods
push
addr16
xchg
jbe
repnz
mov
imul
cwtl
sub
or
dec
in
fucomi
push
cmp
cli
into
sbb
cmp
sbb
mov
imull
icebp
jne
test
jne
sbb
test
daa
mov
add
sbb
xchg
push
lock
int
fimuls
jle
cs
dec
dec
ss
pop
fcmove
repnz
sbb
inc
xchg
or
xor
ljmp
pop
adc
adc
or
test
ja
or
xchg
xor
clc
cwtl
push
fwait
dec
hlt
std
jo
mov
je
jecxz
inc
xorl
fldcw
out
mov
xlat
arpl
xorb
movsl
push
leave
mov
lods
mov
negl
fsubr
xor
lods
lods
and
xor
nop
lods
scas
push
mov
popa
rcl
hlt
or
and
mov
add
lods
clc
fs
xchg
es
fwait
xchg
inc
add
push
push
or
ficoml
sbbb
add
add
pop
sbb
test
mov
sbb
mov
push
stos
or
push
dec
cmp
and
fs
sahf
rolb
add
sub
xchg
mov
int3
int
sbb
mov
push
mov
bound
jo
pushl
mov
mov
mov
inc
jo
xlat
jae
mov
pop
sarb
scas
xchg
lcall
mov
push
ret
inc
into
movsb
mov
cmpsb
in
xor
addl
test
scas
sahf
leave
fst
dec
popa
xchg
jnp
sbb
add
lret
cli
xchg
cmp
andnps
and
push
jecxz
ds
mov
sarb
sub
out
jge
into
cli
mov
test
out
arpl
sarl
mov
inc
add
pop
mov
and
cmp
cmp
scas
fbld
sarb
jbe
xchg
dec
pop
rclb
xor
cmp
lcall
scas
ret
jp
jmp
add
in
cld
inc
aam
jmp
jmp
push
mov
and
lret
push
pop
das
shlb
arpl
lds
or
dec
arpl
xchg
aam
jno
xor
idivb
test
fs
jge
ja
inc
dec
fnstcw
fldenv
stos
cld
aad
idivb
mov
shrl
and
imul
mov
jecxz
push
adc
cmpl
jno
cmp
cmp
xor
cmpsb
sarl
stos
jns
leave
mov
mov
pop
xchg
fs
add
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
jmp
aas
cmpl
mov
xchg
add
sbb
sbb
sbb
add
in
or
out
xchg
mov
pop
imul
sub
sub
cli
pop
pop
adc
add
adc
sub
fmul
mov
xor
mov
and
cmp
stos
xor
inc
sarl
xchg
xchg
mov
pushf
mov
mov
mov
mov
mov
sbb
cmp
xchg
add
inc
aaa
out
inc
fsubl
int
adc
imul
repz
daa
stos
bnd
loop
pushf
adc
add
adc
dec
lock
add
cmpsb
mov
movsb
mov
pop
mov
mov
xor
xchg
or
mov
dec
lds
ss
rcr
xor
cmp
adc
jns
mov
rclb
andb
out
sub
dec
cltd
icebp
les
jp
jecxz
mov
push
cmp
lock
pop
pushf
iret
xchg
cwtl
or
jo
lock
and
jae
mov
cmpsb
or
loope
jl
cmp
ljmp
lret
adc
xor
divb
add
mov
cmc
or
lret
xlat
adc
sahf
xlat
jl
test
hlt
ja
ret
cld
xchg
cwtl
iret
mov
dec
pop
mov
inc
test
xor
sbb
in
push
cmp
aas
daa
fdivp
ror
fsts
insl
fisubrl
fcmovbe
xor
pop
and
add
mov
cmpsl
js
aaa
xchg
test
fwait
pop
dec
dec
or
js
push
inc
shl
in
xchg
mov
mov
pop
arpl
idivb
xchg
scas
pop
xor
push
mov
imul
popf
xchg
out
in
and
lods
and
sub
push
cmp
das
lods
jl
push
jmp
or
and
test
push
test
dec
mov
add
leave
fstps
gs
pop
ret
hlt
and
pminsw
push
std
and
popf
rcrb
int3
fsub
dec
push
mov
pusha
or
das
ds
cmpsl
or
cmp
add
pusha
pop
mov
cmpsl
js
and
clc
mov
jl
lock
jp
clc
into
mov
je
mov
mov
jbe
jle
aas
jecxz
fdivrs
or
pop
sub
rcll
fldenv
lahf
inc
mov
gs
call
mov
mov
outsb
jae
stos
test
fcmovnb
neg
lret
push
orl
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
jmp
imul
pop
jbe
mov
fistpll
push
sbb
and
sbb
xlat
xor
sti
test
insl
fdivp
push
pop
dec
jle
fistl
aam
ret
mov
int3
inc
scas
lods
data16
adc
lods
push
loopne
cmp
gs
or
mov
mov
ljmp
or
jmp
xor
cli
or
fadds
repnz
xchg
lods
mov
sbb
lahf
std
imul
outsb
repz
repz
popa
add
xor
andb
aas
dec
mov
push
les
mov
sbb
jl
jo
jne
push
pop
fisubl
in
sbb
mov
mov
inc
ja
cmp
icebp
ds
push
or
push
fcmovne
mov
and
popf
push
mov
sti
in
pushf
inc
push
pushf
dec
or
ja
xchg
dec
jge
mov
xor
imul
fisubrs
aam
movsb
lods
xor
jae
scas
shrl
sarl
rcrl
mov
popf
fsubp
fcompp
subl
pop
js
int
out
popa
jae
jg
mov
xchg
jmp
pop
xchg
or
mov
cmp
out
jmp
repz
sbb
test
movsl
sbb
imul
and
notb
fbstp
mov
in
mov
inc
scas
add
movsl
xor
inc
cmp
out
push
adc
imul
xchg
rcl
pop
repz
addr16
jle
stos
adc
lods
mov
cltd
adc
push
push
repnz
cltd
ja
jg
mov
mov
movsb
fnstcw
in
imul
sub
test
stc
fistl
mov
push
mov
jne
push
dec
jbe
in
pop
jp
sbb
lahf
leave
int3
dec
inc
shl
add
outsl
fimuls
mov
jmp
jl
scas
cmpl
outsl
dec
jo
fdiv
pop
dec
add
stos
push
loopne
pop
pushf
lods
ret
jnp
pop
loopne
mov
insb
xchg
pop
inc
lret
lret
inc
arpl
std
pop
cmp
jne
dec
add
push
stc
movsl
out
pop
dec
imul
mov
push
fdivl
push
cmp
pop
mov
mov
out
mov
repz
and
mov
enter
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
jmp
pushf
cmp
jl
es
jo
dec
sbb
scas
adc
sbb
or
bound
out
sbb
mov
jns
dec
pusha
push
stos
int3
fnsaves
fnstenv
in
jg
ror
sbb
xor
fiadds
fstpt
push
inc
daa
fcmovnu
xor
jo
and
sbb
popf
cmp
and
jns
icebp
push
sub
cmp
or
or
sub
mov
lahf
pop
push
in
jge
dec
xchg
jp
cmp
push
xchg
outsl
mov
add
rcll
or
lods
jnp
xor
lea
inc
negl
gs
sbb
dec
int
je
sub
mov
aad
pop
xor
cmpsl
lahf
cld
aas
xchg
and
idivb
cmp
adc
fwait
mov
mov
jle
fs
xchg
insl
fistpl
rolb
mov
test
in
push
loopne
lretw
adc
mov
adc
addb
iret
repz
xchg
pop
jecxz
data16
outsl
push
gs
add
jl
fcoml
add
jne
mov
aam
lret
inc
xor
rorl
fmul
rcrl
inc
scas
add
imul
push
ja
stos
fimuls
mov
divl
xor
pop
jns
jb
mov
cmpsb
insl
xor
fimuls
imul
cmc
dec
std
cmp
mov
fisttps
cmp
xchg
push
ret
inc
orl
rcrb
sbbl
push
sbb
push
fwait
jecxz
xor
mov
fnstcw
jb
xchg
push
push
cltd
inc
add
stos
xor
out
imul
add
filds
push
add
inc
cld
and
and
mov
and
into
repz
pop
jle
shr
js
ret
or
aad
call
aad
outsl
std
leave
or
cmp
push
out
push
stc
sub
mov
adc
push
fldt
xchg
push
xchg
jge
fcomi
cmp
xchg
jb
pop
daa
push
push
mov
inc
xchg
divb
jb
cmp
xchg
push
imul
mov
pop
int
lcall
iret
ds
sarl
push
sub
xor
repnz
cwtl
stos
aad
pushl
jbe
dec
in
shlb
adc
ret
and
mov
fs
add
shll
mov
out
pushl
jmp
mov
das
add
stos
mov
sub
ret
jbe
inc
insb
in
repnz
sbb
jae
mov
in
inc
ljmp
and
in
lock
xchg
inc
ja
and
mov
mov
sub
cmp
adcl
pop
stc
pop
jmp
push
das
dec
stos
and
mov
rcrl
insl
xchg
sahf
shlb
adc
mov
dec
mov
adc
or
aas
pop
or
es
dec
adc
in
and
inc
test
dec
movsb
and
mov
add
inc
mov
sub
xor
pop
sbb
out
sbb
and
shlb
jo
cs
xchg
in
fcompl
push
daa
dec
sub
mov
and
imul
pop
test
cmpsl
lods
popa
sub
jmp
decl
dec
and
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
jmp
roll
andb
sbb
loop
jl
sbb
sbb
scas
adc
sbb
dec
cmp
cmc
mov
jmp
pusha
xor
jo
xor
movsb
mov
out
pop
xorl
or
xchg
cmpsl
cmp
mov
shll
repnz
mov
insl
cmpsl
sbb
outsb
outsb
sub
js
and
mov
dec
mov
inc
and
pushf
sbb
test
and
rol
addr16
enter
jb
mov
mov
cmpsl
sub
push
lea
aas
mov
xor
rcrb
and
ret
stc
sbb
jns
mov
int
lahf
or
ljmp
inc
scas
cmpl
fsub
jge
sbb
addr16
ficompl
adc
mov
js
lods
push
adc
loope
imul
mov
dec
mov
les
fadd
xor
add
shll
push
movsl
into
test
sarl
xchg
out
scas
sub
push
out
hlt
xor
in
int3
rolb
dec
or
popa
and
inc
sbb
movsl
pop
aas
enter
mov
xchg
rol
lds
into
pop
sub
divl
xchg
adcl
ss
shl
add
push
pop
xor
fstpl
push
inc
dec
inc
mov
inc
arpl
mov
dec
mov
sti
inc
pop
jmp
clc
outsl
imul
sbb
push
cmpl
or
mov
in
rolb
repnz
in
jg
xor
outsl
mov
pusha
fldt
in
stc
adc
outsb
and
cmp
aas
lret
push
out
pop
cmc
cmp
lods
shlb
out
mov
mov
sarb
jno
mov
loop
push
jecxz
fwait
cmp
mov
aas
out
movsl
push
test
jle
xchg
sub
mov
sub
sbb
test
jb
icebp
add
sarl
mov
adc
roll
cmpsb
xchg
push
inc
cld
lods
aaa
cmp
lret
sbb
pop
add
jge
movsl
in
lea
inc
pop
jge
push
sub
fdivrl
nop
sbb
pop
push
dec
jns
das
pop
jmp
inc
sarl
or
scas
push
fcmovne
addr16
xchg
lods
sub
stos
or
es
inc
xchg
xchg
movsl
xor
in
mov
out
inc
push
sahf
push
repz
mov
mov
pminsw
cmp
sbb
div
sbb
pop
sbb
int3
push
inc
pop
xchg
out
call
out
pmulhw
ret
ds
mov
nop
fadds
push
inc
jne
mov
mov
imul
push
sbb
and
mov
clc
pop
rorb
push
xchg
ja
add
test
loopne
out
sbb
xor
mov
das
lods
fildll
int
add
call
mov
imul
leave
adc
je
add
cwtl
sub
icebp
or
fdivl
xlat
out
adc
dec
xlat
dec
dec
jecxz
out
sub
test
call
les
rorb
cmp
movsb
fcompl
aad
xchg
fnstsw
sub
cmpl
push
inc
cmp
mov
in
pusha
mov
or
loop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
sub
push
push
push
adc
mov
cmpl
mov
mov
mov
mov
jmp
mov
jne
push
pushl
call
mov
mov
sub
and
and
xor
sbb
add
or
mov
or
shrd
shr
mov
and
mov
xor
mov
add
mov
sbbl
xor
xor
or
mov
add
or
mov
mov
adcl
shl
mov
and
shrd
add
xor
xorl
shr
adcl
mov
mov
xor
or
orl
mov
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
movl
jl
push
call
sbb
and
xor
xor
sbb
or
sbbl
xor
and
mov
sub
mov
mov
and
mov
dec
mov
cmpl
movl
movl
movl
jmp
movl
movl
jl
push
pushl
pushl
call
and
neg
and
adc
not
sbbl
shl
xor
shld
add
shl
mov
mov
mov
mov
addl
xor
xor
movl
movl
movl
mov
cmp
movl
jne
cmp
movl
je
sbb
mov
movzwl
xor
mov
mov
xor
xorl
shld
addl
shl
xorl
xor
mov
mov
adc
mov
xor
mov
mov
cmp
jne
cmp
jmp
push
inc
shlb
cmp
jo
sbbl
test
adc
sbb
or
popf
lcall
sbb
jae
mov
mov
mov
ds
push
cmp
or
sarl
jge
xor
stos
push
fmuls
xchg
mov
popa
mov
push
push
xor
mov
sbb
xchg
xchg
dec
das
nop
daa
icebp
mov
rorb
imul
mov
movsb
cmpsl
inc
add
pop
xlat
jl
xor
inc
cmp
add
lahf
jl
inc
mov
stc
arpl
bound
fst
mov
into
stos
fwait
jae
inc
popl
jb
mov
fs
bound
push
inc
jne
add
add
mov
or
mov
imul
mov
frstor
and
sbb
jl
dec
or
pop
fdivl
addr16
xchg
ja
test
adc
mov
sub
repz
ljmp
adc
push
outsl
and
or
std
repnz
jmp
adc
xchg
cmp
sahf
sbb
lcall
dec
xchg
dec
mov
xchg
and
adc
cmp
shrb
test
mov
mov
das
adc
leave
jle
mov
cmp
loopne
push
mov
clc
repz
jmp
xlat
outsb
call
sbb
insl
sub
aam
xor
cli
les
int
xlat
cmp
or
fidivs
in
in
lret
mov
mov
mov
cli
ror
negl
pop
int
imul
lds
sbb
push
loop
ficompl
imul
cld
push
mov
inc
or
adc
push
leave
pop
mov
test
inc
push
adc
inc
push
addr16
inc
in
pop
js
jo
inc
stc
insl
lock
add
sub
jo
aaa
ret
arpl
movsl
fs
pop
mull
adc
in
ja
mov
jmp
or
fiadds
add
mov
cmpl
movl
mov
mov
movzwl
jmp
movl
jle
push
call
mov
mov
sub
add
xor
xor
xor
sub
mov
sbbl
adcl
orl
or
mov
push
cmpl
mov
mov
jmp
mov
mov
jge
push
call
mov
sbb
inc
and
and
orl
and
pop
xor
mov
add
shl
neg
mov
xor
notl
shr
or
mov
or
mov
cmpl
notl
mov
jmp
movl
jge
push
push
call
movzbl
add
mov
andl
andl
mov
sub
sub
inc
mov
adcl
mov
mov
cmpl
mov
movzwl
movl
movl
jmp
mov
movl
jle
pushl
call
or
addl
sub
xor
mov
adc
or
mov
push
cmpl
movl
movl
movl
jmp
movzbl
jle
push
call
orl
and
adc
orl
adc
subl
add
sub
pop
sub
adcl
mov
andl
add
subl
mov
sbbl
lea
addl
mov
xor
add
mov
adc
mov
mov
xor
mov
xor
xorl
xor
shr
orl
shl
incl
or
addl
mov
movzwl
adc
movl
mov
dec
mov
xor
subl
xor
xorl
shr
shl
or
adcl
push
lea
xorl
push
lea
adcl
push
andl
call
mov
mov
mov
xor
mov
xor
cmpl
mov
mov
not
jmp
mov
jne
pushl
push
push
pushl
call
sbb
mov
or
mov
or
inc
xorl
inc
xor
cmpl
mov
mov
movl
jmp
movl
movl
jbe
push
call
adc
add
sub
sbb
orl
sub
shr
movzwl
add
mov
shl
or
subl
push
andl
lea
push
mov
mov
shrd
shr
mov
mov
xor
jmp
rorl
lret
jb
jns
arpl
hlt
push
cmp
sbb
adc
sbb
dec
push
pop
inc
daa
and
xor
movsb
dec
push
push
rolb
pop
jmp
popf
js
imul
cmpsb
icebp
pusha
adc
ja
push
outsb
aad
mov
push
clc
loopne
out
sti
adc
sbb
sbb
and
lods
or
cmp
sub
jae
dec
push
mov
test
and
test
fdivrs
loope
testl
mov
mov
mov
rolb
call
enter
int
cmp
xlat
pop
pop
daa
lods
repz
fsubrl
xor
jns
jl
and
imul
sahf
lret
out
mov
scas
xor
je
pop
roll
inc
out
or
pop
pop
push
stos
andl
enter
lret
jno
pop
lock
mov
sarb
and
nop
adc
ss
jnp
in
mov
fisubl
push
lret
pop
repz
adc
pop
push
dec
insl
inc
jg
call
adc
lods
mov
punpckhwd
push
sbbb
movsb
inc
push
cwtl
icebp
fiadds
jne
xor
aas
adc
sti
jb
cmc
std
js
jo
sub
test
or
ljmp
cwtl
jae
push
clc
icebp
push
das
and
out
pop
dec
inc
or
pop
jb
mov
jb
stos
sub
int3
and
or
aad
rorl
push
adc
jecxz
mov
inc
je
scas
ret
sub
lds
popf
mov
aas
or
push
jge
jnp
push
sahf
call
push
les
into
dec
or
aad
and
sub
fwait
mov
enter
shrl
loopne
mov
mov
test
mov
jo
int
imul
ss
push
in
jle
lock
js
cwtl
jns
lcall
jb
xchg
jb
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
jmp
dec
shlb
sbb
ds
jns
sub
imul
adc
sbb
shrb
cmp
xor
in
call
sbb
in
sub
cwtl
xchg
push
addl
mov
pop
push
out
mov
scas
sbb
lea
and
xlat
movsl
dec
sub
jg
arpl
mov
push
out
inc
sub
inc
push
dec
pop
sbb
inc
sarb
sub
fnsave
pop
in
push
push
aam
mov
sbbl
or
rcrl
adc
lods
or
inc
lret
sarl
pop
cmp
pop
bound
push
iret
add
fnstcw
jb
loop
mov
mov
adc
insl
xor
dec
or
jnp
xor
inc
fdivs
mov
adc
and
in
push
pop
xchg
adc
aas
sbb
in
sbb
dec
ljmp
push
lods
aam
das
data16
mov
push
push
mov
popl
inc
mov
outsb
test
push
xchg
icebp
push
ja
jo
push
inc
mov
test
add
icebp
pop
push
cmp
push
gs
mov
nop
pop
stc
sbb
ljmp
push
repnz
daa
sbb
pslld
fsubp
and
adc
stc
sbb
pushf
dec
fdivl
rorl
daa
es
stos
sbb
add
push
sbbb
pop
dec
jle
jp,pn
mov
clc
imul
cmp
dec
cli
loop
mov
mov
dec
push
jg
mov
jp
in
push
add
adc
aam
ss
push
mov
or
mov
sbb
push
repz
cltd
out
pop
cmc
mov
sub
xor
cmpsl
xor
testb
lret
mov
mov
insb
add
xor
xor
or
shl
mov
jmp
in
je
push
fimull
movsl
mov
inc
xor
sbb
adc
sbb
mov
or
sub
mov
aaa
repnz
lods
pop
out
stos
jmp
inc
mov
pop
ljmp
xchg
cmp
and
int3
ficompl
cmp
repnz
scas
dec
fcmovbe
dec
pop
push
xor
mov
or
adc
cmpb
int
jmp
imul
pop
add
fists
cmp
movsl
ljmp
insl
mov
out
mov
enter
loop
ffreep
dec
lahf
outsl
in
out
nop
mov
ja
jb
popa
push
shr
push
cmp
out
cs
mov
cwtl
mov
push
out
sub
mov
xor
add
imul
outsl
mov
xchg
fiadds
ud1
mov
mov
fcoms
adc
dec
call
stos
inc
and
fs
jnp
xchg
in
lret
xchg
xchg
push
push
inc
adc
jecxz
add
jl
repnz
adc
cmc
mov
push
bound
add
iret
push
movsl
mov
int
test
pop
jecxz
sbbb
outsl
pop
xor
pop
div
int3
and
cmp
pop
outsl
sbb
pop
dec
and
in
pop
and
lcall
mov
scas
lret
pop
sarb
push
stos
nop
out
pop
and
dec
jb
inc
xchg
sbb
out
mov
mov
in
ret
mov
add
sub
mov
fstp
push
sub
sub
fisubs
xchg
push
cmp
into
cmp
xlat
fistl
nop
movb
call
mov
cs
scas
mov
xchg
pusha
push
add
adc
mov
jb
fsubr
lock
jmp
and
dec
pop
insl
or
add
test
std
leave
std
sub
cmp
cmpsl
add
dec
add
jp
out
ss
xor
roll
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
fdivrl
sbb
mov
mov
and
sbb
notb
sbb
mov
xor
fmull
xchg
js
mov
fsubrs
dec
stc
idivl
pop
mov
dec
push
jno
lods
inc
xchg
mov
aad
or
out
adc
xor
lods
lahf
mov
cmp
data16
mov
nop
push
add
out
cs
sub
rclb
cwtl
jbe
in
loopne
mov
cmp
test
mov
call
popa
push
in
cli
adc
add
fisubl
xor
mov
jb
cmp
icebp
jbe
mov
mov
mov
push
jnp
push
dec
push
adc
mov
pop
sti
gs
clc
dec
inc
mov
out
push
mov
mov
and
push
pop
cmpsb
add
lods
mov
sbb
scas
mov
movsl
imul
cmc
mov
push
mov
add
aad
les
fsubrl
jne
outsl
cmp
or
push
jae
push
pop
ljmp
jnp
popa
jnp
mov
sahf
xor
rclb
pop
insl
decl
imull
int
dec
in
xchg
add
pop
lods
and
fwait
test
seta
ljmp
and
adc
imul
push
mov
ss
or
xchg
xchg
jno
ds
pop
aas
jnp
out
and
fcmovbe
pop
adc
sbb
gs
and
cmp
inc
jbe
and
imul
cmc
and
sahf
push
push
dec
rcrb
xor
mov
outsl
lea
dec
xchg
xor
and
decl
xor
shll
call
in
sbbb
addb
push
mov
out
xchg
mov
jl
jmp
or
jns
and
lret
push
sbb
jnp
xchg
mov
mov
jmp
aaa
and
dec
mov
push
out
mov
stos
ljmp
sbb
notb
sbb
les
flds
push
pop
fwait
mov
or
adc
int3
jmp
xchg
ds
inc
jge
push
push
and
cli
jo
lods
pop
and
outsl
loopne
roll
dec
add
mov
dec
dec
add
in
stc
cmp
in
ljmp
arpl
data16
xchg
cs
nop
xchg
ret
dec
enter
cwtl
fnstsw
inc
or
mov
inc
into
sub
int3
jns
test
push
mov
insb
jecxz
pushf
jle
jno
mov
es
mov
fcoml
mov
mov
mov
dec
mov
lods
inc
cmp
adc
pop
mov
pop
sbb
push
pop
lret
mov
ljmp
jo
cmpsl
mov
adc
popf
fsubrs
mov
idiv
pop
cmp
xchg
push
test
or
push
push
inc
push
mov
aas
cltd
inc
mov
push
aas
push
sub
pop
mov
or
arpl
or
lock
sub
in
mov
int3
and
hlt
inc
xor
into
enter
popf
outsl
fimull
or
sahf
xchg
mov
lret
xchg
xor
std
adc
in
pcmpeqd
xchg
adc
popa
ja
pop
or
inc
pop
popa
sbb
int
and
mov
ret
mov
mov
aas
out
int
fsubs
mov
popa
test
cmpl
lret
push
jge
sbb
jecxz
sub
xchg
repnz
lock
cltd
cmp
lds
out
insb
mov
lea
fcmovu
js
cmp
lods
jl
daa
cmpl
xchg
dec
mov
shlb
pusha
xchg
add
jl
stos
jo
fsubr
push
scas
adc
mov
daa
xchg
ds
jnp
mov
je
aad
mov
ljmp
int3
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
jmp
add
bound
cmp
push
fsub
xchg
mov
fsubl
sbb
notb
sbb
andb
test
cmp
cmp
test
test
lods
push
jle
ja
and
call
aam
mov
movsb
mov
adc
jle
sbb
scas
cli
xchg
mov
pop
cmp
jecxz
cmp
mov
pop
add
push
pop
cmp
push
cmp
jge
cmp
loopne
stos
lcall
cmc
mov
cld
jle
mov
dec
sub
and
int3
or
jge
xorb
xor
push
cmp
out
jp
movsb
mov
decb
add
loop
or
adc
cwtl
cmp
xorl
fisubs
call
xorb
push
repnz
inc
data16
mov
push
mov
jmp
inc
out
push
xchg
adc
dec
test
mov
std
push
xlat
mov
ret
ss
mov
sub
shlb
aaa
fcomps
sti
les
mov
dec
cli
mov
cmp
inc
add
add
or
add
insb
fldcw
xor
inc
mull
insl
xchg
mov
dec
mov
jbe
fstpl
push
out
out
das
cmp
idivl
sbb
loope
shrb
data16
xor
rorb
jns
dec
cmp
lahf
cld
adcb
shlb
rcl
push
rcrb
adc
push
addb
das
aas
dec
cmp
fwait
in
push
cmp
push
in
dec
mov
clc
fcmovnu
les
xchg
inc
shufps
xor
mov
sti
sub
mov
int3
ss
cmpsl
mov
push
xor
leave
push
es
mov
lods
inc
arpl
lcallw
das
inc
dec
ret
lret
stos
repnz
dec
jne
sub
jp
and
icebp
adc
arpl
sbb
pop
push
into
scas
inc
and
xlat
or
fcoml
mov
rorl
or
dec
cmp
loope
in
pushf
xor
adc
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
xorl
or
mov
jne
mov
andl
mul
ret
push
orl
mul
cmpl
movl
movl
mov
jmp
mov
jbe
call
mov
sub
mov
sub
movzwl
or
add
adc
movzbl
or
add
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
jmp
ss
mov
in
movsl
mov
mov
adc
sbb
jl
stc
or
out
push
pop
mov
cmp
scas
mov
mov
shll
hlt
lock
mov
sarl
into
pop
adc
or
fisttpl
mov
es
clc
push
das
push
jno
imul
dec
imull
push
add
push
arpl
dec
fisttps
pop
add
sub
adc
out
jecxz
adc
cmpsl
sub
jp
je
orb
movb
push
mov
xchg
les
adc
cli
mov
inc
and
xchg
lret
insl
cmp
cmp
push
sbb
cmpsb
insb
mov
test
call
in
dec
in
push
pop
mov
jns
lret
xor
insb
push
mov
stos
loop
data16
cmp
imul
push
xchg
sbb
xor
sti
dec
jp
das
movsb
adc
cmp
sbb
xlat
lds
sub
dec
ss
dec
mov
adc
les
popf
fwait
mov
cmp
cmpsl
push
cmp
fwait
dec
sbb
jnp
mov
icebp
xor
cwtl
mov
js
fildll
xchg
daa
jge
cmp
push
mov
fdivrs
dec
das
adc
xchg
add
pop
dec
fldln2
xchg
jle
mov
lods
je
sub
add
sub
sbb
sub
fsts
cmpl
fstl
and
call
sahf
add
pop
lds
adc
movsl
jb
repz
mov
mov
shll
lret
inc
iret
jl
ficompl
cmc
fdivs
pop
cmc
mov
add
pop
sti
cmp
cmpsl
mov
sbb
sahf
enter
lea
jmp
loopne
xchg
imul
mov
sub
cwtl
jae
daa
xchg
pop
cltd
jecxz
inc
clc
enter
jl
outsl
es
dec
add
out
out
pop
data16
push
jg
add
insl
mov
xchg
bound
movl
arpl
out
inc
iret
aam
xchg
movsw
pop
out
adc
int
mov
jg
push
mov
popf
mov
ja
mov
test
jbe
xchg
sbb
sub
sub
int3
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
jmp
cli
push
test
adc
sbb
sbb
sbb
cmpsb
loopne
xor
jb
test
push
sub
je
inc
pop
out
cmp
fisttpl
jle
push
insb
daa
je
push
jb
mov
jl
mov
add
adc
test
push
and
pop
imul
cs
ja
js
sub
pop
test
sbbb
mov
mov
add
cmp
push
mov
cltd
add
xor
sarl
leave
lret
push
dec
orb
cmp
imul
les
jmp
sub
into
addb
cwtl
add
mov
icebp
xor
cmp
ljmp
lods
aaa
mov
ljmp
pop
dec
pop
clc
sub
imul
fisubs
fdivp
jns
and
addr16
je
mov
lahf
cmpsb
xchg
cltd
cltd
push
xchg
sub
pop
rorb
repz
pushl
mov
pop
cmp
cmp
and
pop
in
lock
ss
jl
cs
filds
pop
ds
int3
mov
push
push
push
push
push
lock
dec
clc
xor
jne
inc
inc
gs
adc
movsl
pop
fwait
dec
lds
cld
ds
xor
gs
sbb
adc
and
jmp
rorb
sbb
in
aad
mov
inc
cmp
push
or
rclb
mov
jbe
call
add
pop
enter
mov
cmp
lret
jle
add
jae
out
ret
mov
push
add
jb
add
pop
jmp
xlat
les
cmp
bswap
sub
push
popf
aaa
test
lret
loopne
out
and
inc
cwtl
pop
push
les
subb
sbb
jge
xor
imul
std
push
add
or
push
cli
mov
push
add
clc
cli
in
cmpsb
jno
loop
pusha
fidivrl
faddl
lea
pop
scas
mov
clc
lods
jo
jle
or
adc
pop
sbb
out
jmp
aaa
imul
push
imul
cmp
int3
push
jne
inc
lods
ds
ret
popa
add
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
push
push
push
pushl
call
mov
movzwl
push
call
test
jne
movl
xor
movl
jmp
subl
mov
cmpl
not
mov
jmp
not
mov
je
push
push
push
push
push
call
mov
add
movzwl
xor
adc
or
or
xor
cmpl
mov
mov
mov
mov
jmp
mov
movl
ja
push
push
call
add
or
or
mov
mov
sub
add
add
movl
movl
xor
or
sbb
mov
xor
or
adc
mov
orl
xor
xorl
imul
adcl
and
subl
sub
cmpl
movl
movl
movl
jmp
movl
jge
pushl
pushl
push
push
call
andl
add
mov
sbb
sub
and
xor
add
xor
movzbl
adc
xor
mov
add
movl
xor
add
mov
sub
and
movl
movl
sbb
movl
mov
movzwl
sbb
mov
sub
movzbl
or
mov
xorl
and
sbb
jmp
dec
test
and
ljmp
jo
sbb
sbb
adc
sbb
das
mov
adc
xor
sbb
popa
mov
mov
adc
leave
pusha
inc
sbb
xlat
mov
dec
adc
hlt
addb
jle
pusha
jp
pop
mov
lods
std
enter
mov
pop
push
mov
and
pusha
and
cmp
adc
pushf
push
mov
dec
push
ret
in
push
adc
adc
mov
enter
js
dec
ss
pop
mov
cli
jg
mov
cld
sti
dec
fiadds
pop
sub
jbe
sub
cmpsl
clc
and
test
mov
ss
jp
jns
sbb
xchg
cmp
jb
mov
fnstcw
loop
xchg
ja
push
mov
push
lock
das
cwtl
xor
push
push
push
out
imul
ret
sub
loop
sub
xor
ja
aas
mov
push
cmp
jo
lcall
cmp
cmp
pusha
mov
and
inc
inc
sub
int
inc
push
cli
repz
cmp
xchg
cmp
sub
imul
hlt
rcll
leave
xchg
sub
dec
data16
cmp
xchg
push
aad
inc
icebp
das
or
jne
stos
ret
pop
xor
inc
push
dec
ror
push
and
jg
adcb
mov
divl
adc
mov
scas
sub
xlat
fadds
icebp
test
repnz
sub
inc
shll
or
or
mov
daa
mov
pusha
push
dec
cwtl
mov
out
xchg
in
sbb
dec
xlat
js
mov
lret
std
movsl
xchg
xchg
mov
lock
in
add
imul
gs
cmp
mov
arpl
cmp
push
lea
pop
mov
cmp
sti
and
add
push
xchg
sbb
jne
mov
mov
pop
das
rcll
rcrl
xchg
mov
xlat
sbb
loope
lods
pop
jbe
je
mov
xor
mov
mov
xor
out
nop
sbb
xlat
xor
mov
fistpll
bound
adcl
adc
pop
mov
mov
sub
inc
cmp
xchg
ljmp
pop
mov
negb
mov
or
ficoml
jno
fmull
push
adc
adc
adcl
push
cs
mov
jp,pn
jle
xchg
or
pop
in
or
pop
and
imul
lock
daa
in
loope
push
push
insl
jg
stos
addl
cltd
inc
adc
lods
mov
add
push
fdivl
aas
fiaddl
and
or
add
xchg
rorl
push
dec
sbb
jo
lods
push
hlt
dec
ret
mov
mov
cmp
push
sbbl
xor
jbe
in
shlb
push
jbe
stos
ss
cs
inc
xchg
push
mov
sub
movsb
ds
pop
inc
or
mov
sub
bnd
mov
adcl
xor
sub
imul
movl
mov
movl
cmp
jne
movl
xor
xor
sbb
movl
movl
movl
pushl
mov
or
movl
cmpl
mov
notl
movl
movzwl
jmp
movl
jne
pushl
call
xor
add
mov
sub
orl
mov
mov
adc
movl
movl
movl
sbb
movl
mov
xor
xor
sub
sub
movl
sbb
movl
or
mov
cmpl
movl
mov
jmp
movl
jb
push
call
sbb
add
sbbl
addl
sub
xor
subl
add
mov
notl
imul
movl
or
xor
xor
adcl
pushl
cmpl
movl
mov
mov
jmp
mov
movl
jl
push
push
pushl
call
add
mov
xor
andl
sbb
and
xor
mov
add
push
pop
xor
subl
div
andl
mov
xorl
xor
or
xor
mov
or
sbb
mov
adcl
div
xor
xor
xor
adcl
pushl
sbb
mov
xorl
mov
orl
pushl
movl
add
pushl
imul
pushl
add
mov
adcl
mov
addl
xor
mov
div
and
subl
or
movl
pushl
orl
call
andl
dec
movl
jne
movl
mov
mov
and
mov
mov
andl
movl
adcl
mov
call
mov
mov
sub
xor
lea
subl
mov
add
lea
mov
or
mov
mov
cmpl
mov
mov
jmp
movl
jbe
pushl
push
push
call
sub
or
add
xor
dec
incl
cmpl
movl
movl
movl
jmp
movl
mov
ja
push
pushl
push
pushl
push
push
pushl
push
call
mov
xor
mov
adc
sub
add
adc
mov
sbb
mov
and
mov
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
push
push
push
push
call
sbb
sub
mov
mov
sub
add
xor
or
add
xor
and
mov
xor
cmpl
not
mov
movl
movl
jmp
mov
movl
je
pushl
pushl
pushl
push
call
neg
add
sbb
xor
movl
and
xor
add
shl
shr
or
mov
cmpl
movzwl
mov
movl
jmp
movl
movl
jae
pushl
push
push
call
movzwl
sub
mov
adc
mov
adc
mov
mov
sub
imul
inc
xorl
and
andl
mov
mov
mov
and
mov
movl
mov
mov
xor
mov
shrd
neg
shr
addl
mov
mov
jmp
push
lcall
xchg
fs
mov
sbb
sbb
mov
dec
cmp
cmp
push
cli
fwait
iret
out
inc
repz
loop
xchg
cmp
cli
rcl
aam
push
iret
xor
jp
jp
adc
xchg
xchg
fldcw
leave
in
in
cmp
mov
and
mov
daa
jne
data16
inc
out
outsl
mov
push
mov
cli
push
cmpsl
or
movsb
jbe
jmp
mov
mov
aaa
cmpsl
jge
and
sbbb
jmp
popa
test
cwtl
jle
pop
int3
or
dec
lret
push
out
daa
pop
add
pop
adc
out
pop
js
xchg
sub
stc
cltd
push
inc
and
add
aas
cwtl
mov
xchg
push
ds
aam
xchg
shrb
xchg
fs
jne
out
pop
jge
xchg
mov
or
cmp
xor
jae
mov
jmp
test
scas
push
jle
test
adc
pop
dec
and
sbb
xlat
mov
test
cmpxchg
mov
adc
mov
inc
dec
or
push
dec
fwait
mov
xchg
mov
and
cs
jle
stos
and
inc
dec
ljmp
sahf
jo
pop
jle
fdivrs
push
jecxz
mov
xchg
fisttpl
sarl
jmp
fidivl
cmp
fs
mov
nop
pop
jle
ret
ret
lds
insb
sbb
scas
imul
scas
mov
fidivrs
loope
mov
adc
adc
mov
shll
cs
push
stc
dec
cld
test
mov
and
or
rcrb
xchg
mov
inc
daa
cmp
aaa
in
xchg
and
pusha
cli
repnz
sub
add
mov
sub
jne
push
or
push
cmp
push
mov
inc
xchg
lcall
push
mov
mov
cs
mov
test
scas
xor
sarb
imul
hlt
or
cmp
push
mov
bound
cmpsl
loopne
test
adc
dec
inc
pop
pop
dec
push
icebp
call
cmp
lods
lahf
xchg
and
sub
jle
and
and
xor
mov
xchg
xchg
pop
jnp
fdivs
divl
fcompl
jmp
xchg
mov
fstl
add
cmc
sbb
or
add
fists
idivl
les
xchg
inc
xor
xchg
jae
cmp
jns
cmp
aad
push
nop
sub
mulps
dec
pop
dec
mov
cmp
cli
mov
in
push
cs
js
push
les
cmp
mov
dec
dec
addr16
ficoml
sbb
sbb
mov
in
stos
enter
adc
or
jecxz
inc
in
push
and
mov
mov
push
and
inc
fstpt
xor
mov
loope
popa
loope
or
cmp
test
ret
jo
iret
fwait
movsl
icebp
push
test
pusha
mov
jne
jnp
loope
cmpsb
out
adc
std
and
xor
incl
xor
or
mov
push
pushl
lea
negl
push
andl
shl
call
subl
lea
orl
push
subl
mov
mov
subl
lea
push
mov
orl
lea
mov
xorl
mov
adcl
jmp
imul
inc
push
rcrl
inc
or
sbb
adc
sbb
repnz
roll
clc
and
adc
cmpsl
pop
aad
push
mov
add
outsb
xchg
daa
shll
and
dec
aam
ja
mulb
int
repnz
push
cmp
jns
lcall
lods
lods
not
jecxz
jle
hlt
pop
xchg
loop
addr16
xlat
test
pop
mov
data16
cmpsl
pop
test
std
into
pop
stos
test
into
out
inc
std
sub
jmp
outsl
mov
xchg
and
cmp
lods
fstps
lret
mov
xor
add
add
test
pop
sbb
je
push
mov
les
call
imul
dec
adc
xchg
pop
test
cli
shrb
mov
dec
das
push
dec
or
mov
cmp
stc
aad
inc
cmp
outsb
imul
ficoms
mov
loop
adc
jbe
mov
jo
cmp
enter
mov
fistpll
inc
dec
test
pmaxsw
leave
push
test
fiaddl
mov
std
std
lods
and
std
mov
jae
mov
lea
insl
add
pop
xchg
aas
repz
mov
sbb
sbb
mov
add
popa
inc
add
rorb
push
fnclex
sbb
dec
ja
xor
orl
sbb
add
lret
stc
inc
sbb
push
mov
scas
sub
scas
inc
out
jecxz
scas
xchg
mov
push
icebp
push
nop
cmc
inc
inc
push
add
add
sti
pop
cmp
sub
mov
mov
mov
and
cmp
mov
dec
pop
mov
repz
pop
mov
cmp
jne
mov
lods
sub
fs
dec
mov
roll
inc
dec
and
pop
add
rclb
xor
dec
call
mov
jle
repz
ror
add
out
xchg
pop
ja
jmp
cmc
mov
add
aas
out
aas
ficoml
mov
jle
insb
inc
jp
stos
clc
lods
out
jb
rorb
loope
shrl
mov
push
cs
dec
xchg
fwait
jp
lret
lret
loopne
push
fildl
mov
lret
mov
fcomps
pop
in
and
dec
jo
jmp
and
jmp
adc
ret
push
xchg
lods
xchg
pop
jl
jecxz
mov
lret
out
pop
inc
in
and
hlt
fisubl
jae
cs
test
mov
sub
lret
sub
dec
xchg
and
mov
aad
push
andl
or
inc
pop
jle
mov
add
jecxz
jno
pop
or
sub
data16
mov
and
jne
push
daa
mov
cmp
call
dec
int3
iret
cmpsb
xchg
pop
push
mov
test
mov
pop
and
scas
subb
fcompl
or
mov
lods
scas
pop
cs
xchg
enter
xor
inc
cmpsb
rep
adc
xor
push
icebp
push
cmp
jg
xchg
dec
or
mov
add
dec
pop
xchg
mov
subl
jmp
mov
push
in
xor
ret
push
stos
inc
add
sbb
adc
sbb
std
daa
lods
push
jp
jnp
mov
jns
imul
jmp
cmc
mov
inc
mov
fstp
jmp
repnz
test
fadds
in
dec
loop
mov
mov
adc
jecxz
fidivrs
inc
add
movsb
and
scas
repnz
mov
jg
dec
scas
and
stos
and
scas
or
jmp
sbbb
pop
jle
outsl
pop
sahf
jle
jae
mov
call
pop
popf
inc
movsb
mov
push
dec
lret
es
cmc
jae
into
cmp
mov
test
lea
jnp
fidivl
mov
mov
ds
jb
lcall
jbe
cwtl
mov
push
lock
aas
rcr
push
pushf
stos
lds
sahf
jo
out
cmp
fsts
mov
jb
sub
adc
in
or
cmp
orl
in
pop
push
cmp
mov
loopne
mov
into
sub
mov
ret
jns
cs
mov
adc
push
sub
push
arpl
aaa
hlt
test
mov
orb
mov
divb
jae
aam
shlb
or
hlt
inc
fwait
push
pushf
mov
test
out
lahf
dec
mov
mov
insl
stos
and
dec
adc
lea
push
loope
add
clc
push
std
in
dec
js
loope
pop
cltd
lret
jae
shl
sarl
ret
pop
jo
in
fistpll
out
ja
sub
je
xor
or
ret
dec
movb
inc
inc
cmpl
xchg
xchg
int3
and
js
fldl
cmp
imul
mov
or
out
sarb
xor
add
xchg
cmpl
inc
mov
push
dec
ret
addr16
enter
int3
inc
and
es
and
jno
mov
xor
insl
mov
je
add
mov
add
sbb
mov
fsubrs
adc
push
fcmovnu
push
setne
repnz
sbb
int
shlb
arpl
call
rcrl
push
sbb
mov
push
push
mov
mov
sbb
mov
or
or
push
xor
into
push
xchg
aaa
es
mov
fidivs
in
sub
inc
fidivl
or
xchg
and
adc
imul
aaa
sub
push
les
sub
mov
lock
mov
cwtl
cs
push
jbe
mov
pop
xor
incl
push
jns
jnp
bound
xchg
sub
lret
and
adc
aam
nop
push
and
loopne
pop
in
fbld
mov
push
inc
daa
xor
sbb
addr16
xor
iret
stos
rclb
ljmp
imul
pusha
sbb
inc
test
jns
out
les
lcall
iret
in
dec
sub
dec
pop
push
push
call
xorl
push
xorl
push
adcl
pushl
call
mov
mov
and
mov
neg
mov
shr
shl
or
mov
xor
add
sub
or
mov
xor
mov
sbb
lea
mov
xor
lea
sub
mov
mov
sub
mov
sub
mov
mov
xor
lea
movzbl
and
xor
cmpl
movl
not
jmp
mov
movl
jbe
push
call
sbb
add
sbbl
subl
movzbl
sub
mov
movl
sub
movl
movl
subl
movl
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
call
sub
mov
sbb
adc
and
adcl
sbb
xor
mov
mov
xor
mov
movzbl
and
mov
xor
mov
add
movl
adc
subl
xor
cmpl
mov
mov
mov
jmp
movl
je
push
push
push
push
call
inc
and
orl
orl
xor
and
mov
mov
xor
mov
adc
and
mov
adc
movl
adc
movl
cmpl
mov
mov
movl
jmp
mov
jne
pushl
push
call
xor
sbb
sbb
movzwl
or
movl
movl
add
movl
movl
movl
notl
mov
movl
mov
cmpl
notl
movl
jmp
not
jg
pushl
push
pushl
push
push
pushl
call
xor
mov
or
sub
adcl
subl
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
jmp
je
or
pop
pop
mov
cmp
inc
cld
push
sbb
adc
sbb
loope
cs
mov
movsb
push
xchg
sbb
jmp
mov
push
loopne
add
jle
jb
dec
aad
loope
int3
sti
xchg
outsb
pushf
nop
sbb
mov
sbb
push
push
push
lea
insl
xlat
ret
daa
mov
les
sti
mov
lahf
lods
jno
cli
cmp
je
and
popa
sbb
pop
dec
push
out
aaa
xchg
push
aam
ja
cmp
pop
pop
cltd
jns
cmp
or
cmp
scas
push
xchg
call
mov
imul
dec
int
repnz
mov
mov
lods
div
mov
xchg
mov
imul
je
subl
and
dec
stc
jo
loopne
xchg
xchg
pop
js
pop
sti
cmc
ljmp
xlat
lea
mov
inc
rcl
dec
fwait
mov
jnp
jge
add
inc
out
aam
daa
dec
je
or
js
jmp
push
xchg
jmp
push
shrl
dec
fs
fdivrs
mov
imull
int3
out
cmp
lods
lock
mov
in
punpckhwd
repnz
bound
adc
xorb
repz
xchg
fists
popf
inc
pop
add
sarl
lods
add
adc
lods
xor
mov
ja
iret
iret
pop
aaa
adc
gs
or
addb
lock
inc
mov
es
clc
sub
cmpsl
cmpsb
dec
jle
andb
pop
lds
mov
addl
inc
mov
mov
mov
repz
cld
rorl
mov
adc
mov
dec
mov
cmp
and
mov
mov
mov
lret
or
fimuls
mov
iret
pop
dec
fildl
xor
iret
mov
sbb
inc
dec
fcmovne
jge
jl
xor
push
push
sbb
dec
fstpl
jno
pop
enter
fst
fs
or
fldt
fldcw
test
push
fcoml
in
in
das
inc
xor
imul
fistl
push
pop
push
add
cmpsl
mov
mov
dec
dec
inc
sbb
and
xor
sub
xchg
add
sbb
fidivs
in
ret
cmp
mov
ljmp
inc
loopne
icebp
adc
shrb
cltd
lahf
inc
mov
int
cmp
pop
mov
dec
sti
nop
xchg
out
enter
fs
xor
bound
in
jns
test
gs
pop
shl
lock
roll
mov
enter
call
fucomip
jecxz
pop
ficomps
int3
movsb
mov
lea
mov
add
add
pop
xchg
push
movsb
xchg
pop
push
cmpsb
jecxz
filds
dec
push
fldcw
push
add
sbb
xchg
out
sahf
add
fisubrs
jne
fs
push
xorb
aaa
popf
or
hlt
push
adc
mov
pop
pop
loope
jl
jg
pop
int
sbb
fs
add
push
pop
fcomps
mov
jecxz,pn
cmp
jl
sub
shlb
test
popf
cwtl
scas
jb
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
jmp
and
and
rcl
stos
inc
notb
sbb
adc
sbb
hlt
push
sub
aad
mov
cmp
push
sub
inc
add
sub
mov
lods
xlat
ffreep
scas
jnp
add
sub
xchg
sarb
and
cmp
lcall
ret
movsb
jecxz
inc
aad
pop
mov
aam
data16
xor
in
fcmovnu
mov
daa
fstl
or
push
pop
loopne
sti
jo
rclb
ud2
mov
dec
push
dec
sub
mov
iret
mov
pop
push
jne
xchg
mov
adc
int3
std
mov
push
cld
gs
es
bound
test
and
xchg
lret
mov
or
fsubrl
jnp
cmp
stos
rolb
pop
xor
inc
jg
cld
mov
push
test
test
add
divl
sbb
dec
fs
inc
leave
dec
arpl
cmp
mov
pop
lds
push
push
test
xor
scas
pop
rorb
shll
dec
pop
sub
nop
mov
call
pop
mov
cs
pop
dec
cmp
outsb
push
push
out
filds
inc
insb
adc
or
mov
lock
int
add
rcr
inc
adc
popl
xor
xchg
ds
into
and
sbb
pop
cmpsb
sbb
adc
and
pushf
das
xor
xor
lea
pop
lcall
in
mov
pop
cltd
xlat
inc
clc
add
icebp
sub
jl
and
mov
test
testl
fsts
shll
jecxz
andl
jmp
jp
inc
mov
pop
addr16
cli
imul
lods
shrb
loope
daa
nop
pop
cmp
das
jg
shlb
shl
lea
testl
mov
rolb
shll
out
into
fildl
subps
fwait
mov
jno
stos
sub
mov
aas
les
pop
repnz
cltd
scas
minps
mov
arpl
mov
outsl
les
lret
add
les
subl
cwtl
mov
pop
mov
cmp
test
sub
jmp
add
inc
dec
sbb
push
jle
aad
jecxz
and
repz
pop
arpl
or
ss
xor
cwtl
test
dec
fisttps
mov
das
cmpsl
cs
enter
stos
push
lcall
shr
ffree
repz
sub
je
push
or
adc
inc
adc
xchg
jl
movsl
sbb
sbb
into
sub
xlat
mov
hlt
jmp
adc
addr16
clc
rcr
mov
lret
pushf
fsubs
push
aas
push
cli
mov
movsb
mov
aas
pop
mov
inc
arpl
popa
fwait
mov
test
dec
lret
inc
or
enter
fs
mov
sbb
ljmp
xchg
mov
pop
and
imul
out
loope
add
push
repz
dec
jp
mov
push
shll
mov
cmp
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
jmp
push
pop
xlat
jns
cmp
mov
std
adc
inc
out
push
sbb
adc
sbb
cli
dec
bound
dec
incb
divb
pop
mov
xchg
inc
shr
aas
jo
out
mov
mov
adc
or
dec
mov
lea
pop
adc
les
push
push
mov
mov
push
test
outsb
mov
icebp
inc
movsl
sbb
pop
jo
iret
loope
ljmp
push
and
mov
insb
movsl
fstpt
jp
sbb
andl
lods
inc
shlb
stc
xlat
shl
mov
push
fsubrl
jle
xchg
lret
jg
mov
hlt
fsts
jns
mov
pop
adc
aad
xlat
mov
or
pop
xlat
popf
xchg
sub
inc
mov
jbe
push
stos
push
pop
call
dec
sub
jns
inc
stc
inc
lcall
ds
and
js
dec
mov
inc
lock
sub
stos
shll
adc
mov
sub
les
scas
mov
ret
xchg
pop
clc
div
adc
leave
add
lods
xchg
mov
mov
fdivrl
xchg
push
divb
mov
sahf
sub
shrb
movsb
jmp
insb
cmp
pop
cwtl
popf
jb
or
fdivrs
ret
int3
cli
or
test
in
mull
xlat
mov
out
dec
mov
sbb
out
lods
adc
push
ja
orps
dec
mov
andb
js
mov
movsw
imul
pop
out
cwtl
sub
inc
ljmp
push
sti
mov
in
push
jle
mov
loop
jae
xlat
and
xchg
dec
sub
mov
out
je
aaa
lock
fwait
sbb
xchg
mov
icebp
cmovnp
nop
popa
dec
in
xchg
mov
outsl
xor
sarl
adc
fldt
sbb
mulb
je
xchg
sahf
sub
clc
adc
xchg
insb
out
subl
sbb
mov
jmp
sbb
out
mov
sbb
jmp
add
adc
fstl
inc
addr16
push
pop
add
outsb
and
add
testb
cs
je
es
inc
outsl
mov
lret
lcall
mov
dec
lret
add
test
and
outsl
aas
int
mov
icebp
pop
adc
push
or
iret
out
push
lahf
cmpsb
lds
ss
add
aas
cmp
mov
xchg
sbb
outsl
movsb
mov
inc
fcoms
in
outsb
inc
mov
mov
lcall
pop
inc
xchg
test
pop
cmp
jl
stc
iret
stc
pop
div
xchg
xor
repnz
and
cld
and
sub
dec
in
pop
inc
cmp
loope
mov
aaa
shl
sub
mov
xchg
pop
push
imul
popf
xor
out
xchg
int3
imull
sub
arpl
mov
or
lret
xor
test
inc
push
adc
push
sbb
fists
in
test
adc
mov
das
outsb
or
ss
mov
xchg
mov
repnz
jge
test
inc
add
mov
imul
jle
jne,pn
mov
push
xor
insl
lods
sar
test
iret
mov
add
adc
add
xchg
xor
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
jmp
sub
lds
and
ds
jno
stos
push
leave
pop
jo
jmp
sbb
fwait
and
mov
rcl
xchg
or
loop
stos
xchg
xchg
pop
xchg
or
and
cmp
in
push
adc
jle
cld
add
dec
mov
ret
scas
jg
lea
or
das
jle
adc
mov
sub
clc
push
or
xor
int
mov
dec
sahf
loope
mov
cmp
repnz
lret
sti
xchg
in
dec
sub
add
lea
out
push
xor
pop
and
movsb
ljmp
arpl
mov
ret
adc
insb
push
adc
bound
lret
mov
cld
into
rorb
loopne
lds
mov
mov
rclb
pop
push
test
imulb
or
xchg
fs
test
cltd
cs
push
xchg
sub
imul
xchg
sti
loop
das
icebp
sahf
sbb
outsl
ret
pop
adc
gs
sahf
ret
mov
out
and
aaa
xor
dec
jns
call
cs
pop
inc
das
ds
pop
out
push
loope
mov
fcomi
in
inc
imul
xlat
sbb
xor
mov
daa
filds
fcomp
cmc
rcrl
and
scas
subb
pop
pop
xchg
inc
inc
test
adc
sub
dec
shl
rcr
lock
pop
mov
mov
jno
aam
xor
js
aad
in
mov
sub
ret
pop
addr16
xor
pop
xchg
dec
add
lds
pop
sub
cltd
add
and
movsb
imul
lea
mov
out
adc
bound
fwait
fs
in
pop
xchg
imul
mov
ret
mov
insb
icebp
jnp
test
jae
dec
push
cmp
xchg
pop
nop
ret
sbb
shll
aaa
stc
mov
fistpl
call
jp
out
pop
inc
lcall
push
cwtl
ret
cs
inc
mov
jno
lea
jb
cmc
mov
jae
or
push
sarl
push
icebp
add
mov
mov
push
fwait
mov
repz
not
pop
das
pop
cwtl
fs
insb
dec
das
inc
and
adc
int
and
xchg
inc
popa
mov
cltd
std
repz
ret
or
pop
pop
icebp
and
ljmp
arpl
cli
jno
adc
imul
cmpxchg8b
int
fistpl
push
int
or
cmp
pop
or
fstpl
inc
mov
dec
rolb
aaa
or
mov
mov
adc
gs
cmpsb
xor
pusha
pushw
inc
rcll
sbb
xor
aaa
jg
shll
pop
push
pop
mov
lock
and
mov
in
push
hlt
mov
mov
mov
inc
mov
cmp
icebp
icebp
fimull
aaa
push
dec
in
mov
and
cmp
iret
push
inc
imul
sub
testb
pop
xor
push
ja
inc
adc
stc
pop
and
pop
insl
pop
lahf
ljmp
inc
gs
sti
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
jmp
cs
and
push
mov
dec
jle
loope
sbb
adc
sbb
loopne
and
cmp
inc
mov
jno
fnstcw
cmp
adc
mov
les
popa
ds
jl
add
mov
mov
sbb
or
inc
push
subl
addr16
dec
push
jg
inc
and
xor
mov
add
xlat
inc
int3
pop
int3
jmp
fcomi
rcll
fistl
jecxz
cltd
dec
mov
repnz
hlt
pop
dec
adc
mov
scas
push
pop
mov
add
mov
jns
das
mov
mov
pusha
jns
loope
xchg
jecxz
push
ja
sahf
int3
popa
xchg
xchg
cmp
rcr
call
testl
push
das
aaa
push
add
xchg
inc
pop
test
cmp
in
mov
js
jmp
nop
ret
add
jp
or
inc
inc
dec
test
sbb
repnz
cmp
push
or
mov
stos
mov
push
mov
add
dec
iret
adc
mov
fistps
mov
cmp
sbb
fldcw
aaa
mov
stos
lret
lock
xlat
and
addb
lret
adc
mov
loope
cmc
cmp
into
mov
add
xchg
insl
xchg
out
sbbl
push
xor
mull
jl
mov
adc
loope
test
in
aas
push
aam
mov
xorb
pushf
push
in
hlt
aas
pop
jo
shlb
xor
data16
and
sbb
hlt
idiv
mov
data16
push
push
ljmp
jg
cmc
adcb
mov
or
les
iret
lea
cld
xchg
mov
mov
push
cmpsb
push
sbb
jmp
addr16
and
push
mov
push
fnstcw
xchg
decb
sub
sbb
cmpsb
lds
pop
mov
mov
fidivl
push
dec
inc
mov
jne
lock
cwtl
out
clc
lds
or
testl
in
cmc
fidivrl
jnp
sarb
cmc
jns
das
in
or
pop
movsl
cs
out
inc
dec
jbe
xchg
add
in
inc
scas
mov
add
cltd
mov
or
mov
aad
pop
mov
hlt
sbb
imul
ljmp
pop
jg
into
dec
std
cmpsl
dec
add
mov
aam
sbb
push
mov
dec
ret
enter
adc
les
inc
jmp
test
xchg
push
adc
jle,pn
and
std
cli
sti
test
push
jp
sbb
shl
and
xor
sbbb
xchg
dec
jo
mov
pop
pop
sti
jne
ljmp
pushf
adc
push
lock
int
xor
sbb
add
dec
sub
popf
add
mov
jge
in
dec
xor
fwait
xchg
in
out
and
jnp
pop
cmc
outsb
ret
add
fwait
dec
outsb
pop
xchg
fisubs
decl
xchg
idivb
mov
cli
jb
pushf
fwait
mov
jmp
add
cmp
jo
mov
xchg
pop
dec
out
and
add
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
jmp
cmp
cmp
xchg
jb
jle
fistl
sbb
adc
sbb
jb
notl
rclb
in
pop
sbb
mov
sub
test
shll
incb
fs
push
enter
xor
scas
xchg
call
movsb
arpl
xlat
nop
mov
adc
push
dec
int3
xor
xor
sub
add
stos
idivl
pushf
or
jmp
stos
jl
mov
pop
push
add
in
and
jle
in
pop
icebp
dec
pop
shrl
pop
lcall
or
sarl
popa
dec
dec
jg
hlt
ds
xlat
xchg
sahf
aam
xor
cwtl
mov
in
out
stos
sbb
cmp
mov
outsl
add
aad
push
je
mov
pop
mov
jb
cs
divl
aaa
pop
repnz
xchg
arpl
cmp
lahf
sbbl
lret
add
addr16
xchg
aad
jae
bswap
aad
je
shll
ss
sbb
adc
adc
xor
sarb
mov
loopne
fistpl
sub
push
mov
jbe
add
xchg
push
test
in
sub
or
xchg
loopne
cmc
rorl
mov
dec
push
inc
cmp
inc
jmp
call
mov
loop
es
mov
jp
cmp
xchg
xchg
pop
cmp
sbb
rcll
inc
fidivs
in
mov
aas
scas
in
ds
or
mov
gs
das
fistpl
push
inc
xor
sti
pop
bound
addr16
test
mov
mov
dec
cmp
add
jnp
mov
loop
sub
incl
dec
pop
movsl
add
out
and
ljmp
push
addr16
add
push
aad
cmp
adc
jge
scas
lods
adc
dec
dec
mov
and
add
cmp
push
jg
jle
xchg
test
iret
dec
sub
inc
fisubl
fucomp
jl
iret
adc
fwait
xchg
sub
test
mov
sti
adc
cwtl
pop
adc
jl
cs
adc
repz
cmp
pop
sub
loop
push
test
icebp
dec
sbb
xchg
stc
xchg
push
xor
loope
or
pusha
or
jns
iret
add
rcrb
adcl
imul
mov
sbb
push
jp
mov
arpl
mov
incb
icebp
add
and
sahf
xor
aam
mov
or
xchg
ss
adc
mov
jno
imul
push
hlt
lea
movsb
pop
movl
mov
pop
inc
popf
sub
fimuls
test
jge
out
dec
mov
adc
fs
mov
xchg
sbb
cmp
pop
cmp
ret
sbb
ja
mov
cs
pop
out
mov
js
dec
push
dec
out
int3
addr16
std
push
jp
inc
push
mov
iret
cmp
pusha
jmp
or
leave
mov
ret
xchg
clc
lds
cmp
aad
inc
or
jp
inc
ficoms
dec
cld
cmp
stos
sbb
jnp
mov
push
pop
mov
add
push
and
cmp
ja
mov
mov
shrd
xor
mov
shr
jmp
inc
inc
in
loop
cmp
pop
pop
or
fbstp
push
rcll
sbb
adc
sbb
ret
mov
cmc
ja
sub
test
inc
repz
pop
inc
fxam
xchg
jmp
adc
hlt
add
adc
call
out
push
cmpb
sub
pushf
lock
push
cmp
out
sbb
jnp
and
ret
jb
iret
idivb
mov
shlb
repz
sti
xchg
xchg
jae
das
pop
das
dec
fucom
gs
fidivl
xchg
mov
or
roll
fdivrl
pop
pop
cmp
popa
notl
test
sahf
pusha
mov
xchg
arpl
dec
loop
gs
outsb
jp
rorb
or
cwtl
cmp
mov
push
inc
rcrl
cmp
jecxz
insb
mov
cmpsb
xchg
push
xlat
lds
jne
je
je
mov
sti
sti
inc
imul
mov
mov
and
jmp
and
xchg
jle
imul
negl
xchg
dec
jp
lcall
xchg
rcrb
push
sbb
pop
adc
inc
sbb
inc
int
cmpsl
ret
lahf
adcb
pop
fneni(8087
push
cmp
mov
std
mov
jnp
cltd
bound
xor
or
in
push
fucomi
enter
pop
jecxz
outsl
or
xlat
sbb
and
sub
mov
fcmovnbe
les
mov
iret
repz
or
jle
andl
or
stos
add
movsb
outsl
pop
inc
or
std
sbb
mov
inc
pusha
stos
or
lahf
fdivrl
icebp
dec
mov
mov
test
pop
adc
mov
pop
repnz
lret
and
mov
lret
xchg
sbb
or
negb
repz
shr
int
sahf
jle
push
push
mov
div
mov
pop
cwtl
sti
pop
fsubrs
movsb
mov
jno
je
xor
or
mov
inc
mov
push
out
sbb
in
sub
push
adc
pop
adc
insl
scas
sub
insl
pop
mov
int
rcrl
jbe,pn
add
adc
insl
xchg
je
mov
pop
loop
lret
xchg
cmp
pop
xchg
mov
in
adc
inc
loop
fdivr
cmp
mov
dec
icebp
lret
sbb
scas
lds
in
sub
sub
jl
dec
adc
leave
jne
push
aaa
cmpsb
idivb
es
sbb
pop
out
add
mov
pop
in
add
scas
inc
cli
es
pop
outsb
fdivrp
mov
test
jae
dec
pop
pusha
bound
fimuls
mov
and
xchg
push
fdivrl
idivl
dec
in
mov
leave
cmp
and
pop
xor
stos
xchg
inc
jne
out
push
cmp
mov
sub
incb
mov
jae
cs
push
mov
cmp
cmp
scas
std
outsb
xor
xlat
ds
shlb
out
and
aam
sahf
xchg
jno
push
js
mov
scas
shrl
icebp
ja
fsubr
or
fs
and
pop
sbb
mov
jmp
inc
mov
jb
jb
cmpsb
xchg
sbb
push
rcrb
inc
int
sbb
adc
sbb
dec
imul
mov
lods
or
adc
lret
sub
pop
jge
test
das
push
mov
outsl
push
sti
popf
mull
bound
inc
sbb
arpl
lods
xchg
sub
pushf
sub
scas
leave
push
test
or
add
push
push
cli
sahf
pushf
and
push
movl
jo
xor
sbb
cwtl
ds
loopne
mov
rorl
cmpsb
cs
cwtl
insb
sbb
and
xchg
pop
and
cltd
imul
loope
int
xchg
cmpb
das
add
add
xchg
or
add
sub
mov
adc
push
sbb
ljmp
push
test
jecxz
aad
xchg
jge
jmp
data16
add
jmp
jne
xchg
insl
fdivp
sub
or
je
frstor
mov
or
mov
daa
or
sbbl
test
mov
scas
push
xor
mov
sbb
add
and
cmc
mov
loop
cmp
pop
jae
aam
jmp
shrb
inc
rorl
mov
js
cwtl
cmp
and
xchg
adc
jno
scas
in
mov
inc
push
pop
push
inc
lods
lret
mov
pop
aaa
push
mov
pop
add
sub
dec
mov
insb
in
xchg
mov
movsb
xor
push
adc
jecxz
out
xor
mov
push
jle
lcall
add
mov
cmpsb
add
mov
jp
sub
xchg
mov
mov
out
sbb
mov
mov
pop
sbb
outsl
stc
jno
call
mov
shrb
jbe
adc
in
lock
imul
mov
mov
fstpl
or
push
movsb
cmpl
lods
mov
lea
mov
push
ret
jno
std
jnp
push
in
xchg
sbb
sbb
sub
repz
xchg
cli
xchg
loope
je
test
addr16
jmp
mov
inc
xchg
adc
jo
add
or
out
cmpsl
data16
mov
nop
jl
movsb
jno
cmc
or
lahf
jle
insl
lods
es
xchg
sti
sub
pop
ret
push
sbb
pop
arpl
out
cwtl
sbb
lea
outsl
adc
cmp
pop
ret
mov
xor
jle
dec
add
shlb
pop
mov
sbb
pop
aas
repnz
fisubl
and
aad
mov
iret
icebp
and
cwtl
adc
jb
sub
pop
in
std
lcall
add
stos
idivb
dec
leave
ljmp
push
inc
fs
or
bound
or
pushf
mov
gs
and
xchg
fdivrl
int
jo
stos
imul
mov
dec
pop
or
cmpsb
dec
add
fistl
outsl
imul
pop
inc
scas
mov
arpl
add
fdivr
fsub
insl
cmp
repnz
xchg
cmc
push
push
call
rcll
shl
push
lea
push
lea
push
call
pushl
pushl
jmp
xor
fistpll
popf
jo
adc
inc
lds
sbb
adc
sbb
std
mov
cltd
push
jge
jmp
inc
aas
xor
aaa
jmp
push
daa
je
filds
pop
mov
clc
jg
dec
pop
cmpsb
sub
mov
mov
mov
push
enter
dec
and
scas
mov
and
inc
lods
jo
jge
xchg
test
mov
dec
pop
push
cmp
adcb
sbb
out
addb
pop
nop
inc
inc
inc
pop
or
cmp
lods
mov
cmp
add
enter
icebp
cld
insl
addr16
popa
jae
mov
rcr
popa
dec
sub
imull
inc
cmc
lock
cwtl
addl
dec
lret
mov
or
sub
or
lods
inc
out
fs
cmc
adc
sbb
insb
cmpsb
movb
cmpl
divb
jae
pop
sub
fisubrs
sub
sbb
insb
push
pop
dec
je
icebp
and
jg
push
bound
cmp
stc
xchg
das
jne
in
insl
je
cmp
jno
dec
and
enter
xor
in
jge
and
add
ret
cltd
jns
mov
mov
test
push
out
or
xchg
out
lret
incl
inc
and
xor
mov
mov
mov
mov
insb
pop
out
fs
sbb
sub
testl
mov
push
jecxz
insl
adc
scas
movl
mov
sbb
add
ror
xorb
call
inc
xor
cmp
scas
pop
je
add
bound
cmp
push
jle
push
aas
lcall
jae
dec
scas
vcvttss2si
aam
scas
push
add
out
inc
stos
dec
notb
and
addr16
data16
std
ss
mov
push
in
mov
pop
lahf
mov
dec
inc
xor
jecxz
push
fldl
ret
repz
fldcw
and
pop
and
pop
cmpsb
jl
jecxz
repz
aad
lods
ljmp
inc
pop
es
dec
sarl
loope
fs
subl
dec
push
mov
xor
data16
fwait
cld
add
pusha
pop
jg
cmp
out
ret
lahf
outsb
inc
out
test
sub
xlat
adc
rolb
or
in
xchg
movsb
push
jne
mov
xor
outsl
xor
pop
aam
popf
inc
xor
inc
jnp,pn
jo
je
fsubs
add
cmc
loopne
mov
cli
dec
xchg
ss
shrl
dec
lahf
repz
push
mov
stos
cmp
int
subl
jmp
cmpsl
adc
inc
stos
popa
xor
xchg
xchg
pushf
sti
cwtl
test
add
adc
jbe
int
jne
mov
push
jns
stc
sub
bound
cld
or
fisubl
stos
das
rorl
pop
fstpt
test
pop
addr16
mov
mov
mov
loope
and
out
ret
test
inc
das
fdivl
mov
jg
mov
aaa
add
fsts
ret
push
aas
mov
add
popf
clc
push
lcall
loopne
loope
mov
outsl
int
dec
xchg
lret
and
stc
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
jmp
jns
imul
pop
notl
jle
mov
sbb
loopne
jmp
hlt
jp
in
push
insl
xchg
ja
fmul
add
rclb
mov
push
pushf
fmuls
jmp
sub
enter
lahf
mov
push
ficoml
aam
aaa
pop
outsb
jmp
mov
pop
shll
pop
popf
leave
xor
cmp
dec
lods
mov
inc
mov
shrb
pop
mov
mov
aaa
shlb
fstl
add
rorl
adc
mov
xor
or
push
scas
add
or
push
in
clc
add
popf
push
mov
dec
ret
push
out
lods
sbb
sahf
imul
test
scas
mov
xchg
movsb
iret
pushf
fdivrs
sbb
inc
and
aaa
pop
je
hlt
test
mov
imul
xchg
mov
fcoms
es
inc
aaa
jnp
fcoml
fldl
hlt
sub
or
push
sbb
pusha
mov
mov
push
call
outsl
dec
xchg
mov
cmp
xchg
xchg
jbe
das
push
push
jnp
inc
mov
std
aaa
fwait
lcall
cmp
pop
scas
inc
xor
push
clc
adc
dec
xor
lock
in
jb
test
lock
sahf
pop
mov
test
fstps
lea
shll
js
imul
out
dec
mov
adc
xor
sbb
loope
fists
xor
imul
inc
xor
aas
ja
mov
pop
sahf
int3
lret
ds
sbb
fwait
cwtl
lahf
mov
and
gs
shll
adc
dec
push
in
pop
xchg
adc
cmc
arpl
sbb
insl
cld
add
sbb
pop
fildl
jnp
mov
ror
mov
sub
xchg
mov
pop
xchg
adc
mov
cli
rclb
push
or
movsl
ss
popa
lock
stos
or
or
fs
in
mov
xorps
and
xorb
mov
pop
sub
pop
jnp
or
mov
mov
sbb
rcrl
addr16
jecxz
repz
jp
push
mov
xor
xlat
mov
and
mov
sti
enter
push
cwtl
jmp
xchg
push
xchg
and
push
cli
js
fstps
inc
in
test
dec
mov
pushf
or
add
dec
cwtl
adc
or
and
notb
ja
push
iret
popf
into
and
mov
mov
jbe
xchg
xchg
shrl
sub
sbb
les
hlt
stos
pushf
adc
pop
rolb
mov
inc
in
lcall
sub
sbbb
push
sbb
mov
fwait
in
push
or
xchg
pop
cmp
repnz
adc
fcoml
in
push
push
test
test
dec
jp
stos
pop
mov
pop
add
lret
and
iret
jle
cltd
adc
sub
push
jno
rcll
addr16
mov
mov
mov
aad
xchg
push
movsl
pop
packuswb
cmp
pop
or
dec
ljmp
xlat
mov
popf
daa
lock
dec
gs
cmp
jmp
les
pop
pop
es
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
jmp
ss
cs
push
sub
loop
adc
inc
mov
sbb
adc
sbb
loope
mov
ljmp
shl
les
sub
aas
ret
cwtl
or
rcl
mov
mov
mov
xchg
sub
cwtl
push
mov
jge
call
frstor
mov
dec
mov
ljmp
jg
movsl
xorl
mov
jnp
test
popf
stos
stc
pushf
push
insl
aas
pusha
ljmp
or
add
xchg
jno
les
inc
fsqrt
rorl
lods
pop
cltd
pop
push
aad
sub
sub
adc
clc
imul
lahf
mov
mov
jge
mull
insb
imul
in
pop
les
out
pop
mov
aaa
cmp
jl
xor
push
xlat
inc
pusha
out
int3
adc
jge
fistpll
mov
lds
pop
cld
and
test
or
cmp
mov
mov
mov
xor
out
popa
sbb
mov
xor
xor
xor
jp
stos
mov
int
cmp
gs
in
mov
push
mov
sub
mov
fmulp
inc
test
std
and
mov
das
sub
in
xchg
dec
rolb
pop
sar
inc
pop
cmc
out
mov
icebp
lods
cltd
pop
inc
sbb
call
sbb
jge
filds
gs
sti
mov
mov
or
jb
mov
push
sbbl
cld
insb
mov
cli
cmp
inc
mov
scas
imul
mov
fldt
jl
cltd
aam
shlb
icebp
icebp
in
out
sub
aaa
jne
push
sub
pop
test
cs
sbb
cmp
sti
or
push
insl
dec
popf
xor
out
sub
xor
mov
pop
jle
xchg
ret
mov
jmp
cwtl
fs
dec
rcrl
insb
add
cmpsb
outsl
xchg
add
mov
cmpb
push
gs
idivb
mov
push
adc
mov
xor
clc
dec
pop
mov
stos
cwtl
push
in
pop
mov
ljmp
push
cmp
and
push
jge
mov
icebp
sub
int
pop
mov
and
and
outsb
fstp
cmp
and
push
and
movsl
insl
lret
test
mov
xorl
aam
xchg
dec
cmp
sub
add
xchg
repz
lods
and
in
loopne
mov
bound
cli
clc
imull
jae
jb
jg
sbb
lcall
mov
xor
dec
gs
shr
sbb
repz
xchg
xor
call
je
in
xor
and
dec
loope
adc
test
sub
mov
sbb
or
pop
add
jb
scas
fisubrs
sbb
jb
mov
fidivl
dec
adc
xor
mov
sub
insl
xchg
mov
jl
je
sahf
shl
dec
out
cli
pop
or
pop
xlat
mov
scas
int
call
xchg
jno
in
jmp
cmp
sbb
enter
aad
push
push
int3
pop
push
xchg
add
insl
scas
lret
cli
pop
outsb
sbb
imul
dec
and
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
fistpll
jne
sbb
sarl
mov
sbb
adc
sbb
scas
les
push
push
inc
test
jmp
sub
outsb
mov
fildll
aas
setb
mov
adc
movl
push
loope
dec
cmpsl
dec
lods
or
std
sub
cmp
das
sbb
push
dec
pusha
mov
and
or
les
sbb
xchg
data16
int3
mov
sub
or
ljmp
leave
fmul
mov
jl
and
ret
mov
inc
gs
push
adcl
pop
jns
jmp
jg
mov
add
lret
enter
inc
call
ds
mov
ds
imul
and
pop
lcall
cmc
cmp
aaa
ljmp
adcl
cwtl
jp
mov
sub
jbe
lea
inc
adc
pop
cld
sarb
test
ds
fsubrs
test
and
movsb
fisubl
sbb
push
pop
sarl
add
add
cmpsl
mov
mov
in
pop
mov
inc
sahf
in
xchg
xchg
or
adc
cmovo
jg
mov
mov
or
lods
mov
movsl
add
outsl
xchg
repz
fsts
add
mov
jno
or
loopne
faddl
inc
inc
sbb
add
mov
xor
clc
rorl
dec
in
clc
sub
add
aad
repz
inc
js
stc
lret
out
bound
xchg
mov
pop
mov
pop
mov
pop
notb
fisubrs
enter
jmp
lcall
shr
in
out
inc
and
inc
cltd
repnz
insl
out
mov
jecxz
cmp
aad
push
or
cmpsb
lods
mov
jno
dec
mov
hlt
or
cmp
ficompl
pop
mov
aad
push
int
jecxz
iret
outsb
inc
sahf
ss
hlt
push
and
pop
mov
pusha
call
mov
cwtl
movsl
nop
sbb
mov
nop
pop
mov
aas
movl
into
outsl
loope
dec
xor
pop
daa
ret
ja
fisttpl
ljmp
insb
popa
testb
or
xchg
icebp
sub
mov
cltd
aaa
ss
aas
cmp
mov
stc
out
mov
inc
mov
test
jmp
in
dec
ds
mov
push
xchg
push
outsb
lea
lods
in
or
pop
mov
mov
outsb
mov
mov
lds
mov
pop
cmpsb
pop
cwtl
in
xchg
mov
pusha
into
inc
addl
into
cmpsb
mov
cmp
sub
arpl
xor
jnp
mov
and
sub
xor
add
shlb
mov
es
mov
test
cli
cmp
loop
mov
push
addr16
out
scas
xor
scas
fstps
mov
cs
mov
mov
lret
mov
imulb
xchg
jno
sbb
dec
or
adc
lods
add
fistpl
xor
lods
or
or
push
hlt
xchg
mov
popl
mov
sub
dec
iret
test
fsubl
bound
inc
pop
in
dec
lock
dec
mov
push
test
loope
xor
cmpsb
xor
mull
es
mov
mov
sti
sub
jle
loope
add
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
and
jmp
sub
push
test
sbb
cmp
test
sbb
out
mov
sub
mov
mov
sbb
inc
insb
pop
mov
or
push
repz
fadds
xlat
pop
les
or
and
push
loope
rorl
sub
aaa
jge
imulb
mov
sbbl
repnz
ret
scas
cmp
fstps
fld
sahf
std
shr
cmpsl
das
sar
cmp
xchg
mov
adc
popf
int3
or
es
movsb
and
xor
jge
divb
sbb
fidivs
xchg
or
cmp
jl
sub
mov
inc
cs
and
call
jl
xor
lahf
xchg
in
inc
jg
adc
pusha
movsl
xchg
pop
out
add
repz
lock
dec
cld
test
add
jl
shll
ss
lods
das
push
fnstsw
jle
jbe
jo
jno
fsub
add
loop
dec
pop
pusha
jno
je
fwait
xchg
or
in
sub
mov
incb
cwtl
hlt
jmp
or
in
adc
imul
loopne
fildl
and
popa
decb
fisubl
mov
test
adc
sub
lock
js
inc
insb
lret
rorb
jno
mov
int
lahf
and
pop
mov
aas
imul
add
sub
sub
test
repnz
in
inc
push
cwtl
in
push
adc
sub
subl
add
sub
cltd
aam
xor
dec
lret
cmc
add
repz
lods
xor
pop
sub
std
jne
jno
adc
loopne
jne
aas
mov
push
push
xchg
in
push
add
outsb
int3
lcall
insl
cwtl
mov
rcll
xor
and
mov
xchg
cld
push
add
cmp
lahf
adc
lds
ja
jo
inc
cmpsb
test
fwait
push
clc
mov
fsubs
les
sbb
jno
lahf
lock
push
rclb
insb
dec
xchg
sub
mov
cwtl
pop
fwait
xchg
mov
sbb
dec
and
xorb
cmp
icebp
pop
jmp
sub
jne
fyl2xp1
iret
add
mov
lea
add
sub
ja
push
fnstenv
mov
pop
mov
fwait
push
imul
notl
icebp
int
stc
call
lods
fimull
or
xchg
mov
adc
add
mov
xlat
pop
mov
pop
xchg
js
int
es
pop
xlat
insb
es
or
push
xor
sbb
mulb
mov
jns
dec
cmc
das
jno
push
jb
pop
scas
and
dec
gs
loopne
add
aam
cmp
daa
jl
sbbb
sub
mov
int
push
pop
out
or
aad
icebp
sbb
cmp
xchg
xchg
pop
mov
sbb
pop
les
stos
xchg
xchg
bound
xchg
add
mov
mov
sar
xchg
lock
dec
push
add
xor
mov
movb
insl
jbe
push
cmp
add
lods
push
mov
gs
nop
fcomi
mov
repz
push
cwtl
pop
insl
gs
jle
repnz
pop
dec
fucomi
xor
xchg
xor
jle
ficomps
push
dec
push
neg
push
xor
add
mov
sub
or
movl
or
movl
sbbl
movl
add
mov
mov
movl
xor
div
imul
cmpl
mov
mov
movl
jmp
movl
je
pushl
push
push
push
push
pushl
pushl
call
negl
and
andl
not
sbb
adcl
mov
xor
movzbl
add
and
mov
subl
xor
sbbl
div
cmpl
mov
notl
mov
jmp
movl
jle
pushl
push
pushl
push
push
call
add
movl
xor
add
and
subl
add
sub
cmpl
mov
mov
mov
jmp
movl
je
pushl
push
call
adc
xor
sub
add
mov
mov
and
sub
mov
add
movl
movl
neg
movl
cmpl
not
mov
movl
mov
jmp
movl
jge
push
push
call
negl
mov
mov
sub
and
add
sbb
movzwl
adc
mov
and
add
xor
inc
xor
and
imul
mov
xor
add
adc
and
add
sub
incl
mov
movl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jb
push
pushl
push
pushl
pushl
call
sub
orl
mov
mov
add
mov
mov
sub
or
mov
mov
adc
mov
mov
sub
sub
or
mov
imul
mov
cmpl
notl
mov
notl
mov
jmp
movl
ja
push
push
push
pushl
push
pushl
pushl
call
add
add
negl
mov
sbb
mov
sbb
xor
mov
sub
mov
movzbl
sub
imul
cmpl
not
notl
jmp
movl
not
jne
pushl
call
mov
mov
or
orl
subl
sbb
add
mov
and
mov
xor
imul
cmpl
movl
movl
jmp
movl
movl
jge
call
or
negl
mov
mov
sbb
orl
add
or
mov
and
or
movl
mov
addl
xor
andl
jmp
pop
push
testl
out
out
mov
mov
sbb
sub
xor
add
dec
jmp
jne
jbe
cld
call
mov
lahf
scas
shll
push
mov
pushl
idivb
sub
out
out
inc
stos
shlb
rcll
insb
dec
mulb
mov
pop
ljmp
aad
adc
or
test
notl
xchg
rcr
pop
xchg
es
mov
mov
and
fldl
jle
inc
dec
mov
xchg
mov
mov
pop
dec
cmp
iret
pop
std
adc
mov
insl
jne
adc
mov
mov
aaa
outsl
out
fbstp
sub
mov
jmp
lock
mov
xor
mov
pushl
mov
xchg
scas
jbe
xchg
lcall
jae
cmp
mov
cmpsb
iret
mov
mov
adc
pop
rcll
push
ret
jecxz
ret
testl
out
mov
push
fisubs
in
je
in
add
shlb
scas
jne
and
mov
sbbb
and
cmp
pusha
sti
nop
jl
fimuls
sar
int3
int3
clc
dec
jp
mov
cmp
sub
sub
jle
ficoms
arpl
xchg
push
inc
push
std
adcb
movsb
gs
fisttps
and
movsb
push
add
clc
jge
jmp
mov
dec
les
mov
jecxz
rcrb
pop
push
imul
adc
ret
pop
andb
pop
cli
mov
imul
lock
je
mov
mov
inc
sub
es
fisttps
push
jbe
incl
dec
push
or
push
test
jge
insl
std
adc
add
cmp
sahf
inc
imul
pushf
pusha
cld
rorb
xor
cmp
iret
enter
mov
into
and
xchg
adc
inc
push
cld
fsubl
into
data16
xchg
sub
int
jb
fdiv
sub
jbe
pop
cs
and
xor
push
push
mov
stc
repz
inc
fwait
in
xchg
fbstp
pop
cmp
cmp
ljmp
cld
adc
fadds
sbb
test
les
or
nop
pop
repnz
inc
mov
jle
sub
lea
mov
sub
jmp
cmp
test
push
and
int
or
mov
pushf
or
push
jae
cs
mov
jnp
pop
or
or
hlt
fidivrl
movq
xchg
outsl
in
popf
sub
fwait
inc
popw
cmp
xchg
in
shlb
sub
adc
call
icebp
pushf
dec
dec
enter
movb
ljmp
dec
lock
mov
push
jb
inc
add
pop
int
cs
add
das
shll
mov
mov
pushf
stos
int3
push
andb
iret
xor
or
out
mov
xor
and
call
repnz
jno
ss
xchg
ret
sub
mov
xor
ss
ljmp
mov
sub
push
mov
pusha
lods
pop
xchg
out
cwtl
mov
push
adc
test
push
cltd
test
andl
lea
mov
add
mov
mov
and
movl
subl
movl
movl
andl
mov
cmpl
mov
mov
jmp
movl
je
push
pushl
push
pushl
call
not
dec
sub
inc
adc
and
movzwl
sub
mov
xor
mov
or
xor
add
subl
mov
or
add
xor
xor
or
adc
mov
mov
mov
sub
sub
movl
movl
adc
movl
mov
cmpl
movl
mov
mov
movl
jmp
mov
jae
pushl
pushl
push
push
push
call
mov
add
add
adcl
decl
addl
sbb
orl
mov
or
add
cmpl
movl
movl
jmp
movl
jl
pushl
call
adcl
xor
xor
add
mov
adcl
sbb
movzwl
or
adc
xor
cmpl
movl
mov
jmp
movl
jae
push
pushl
call
xor
or
adc
mov
sub
movzwl
sub
mov
sbbl
addl
adc
mov
sub
xor
mov
lea
cmpl
mov
mov
jmp
movl
jg
pushl
push
pushl
call
xor
mov
or
mov
add
xor
add
add
and
or
dec
sub
not
mov
movl
movl
cmpl
mov
mov
jmp
mov
jl
pushl
pushl
push
call
add
or
or
and
mov
sbb
and
add
mov
and
add
sub
imul
mov
sbb
mov
imul
xor
mov
xor
mov
mov
div
andl
sub
movzbl
sub
mov
xor
movl
cmpl
movl
movl
mov
mov
jmp
movl
jne
pushl
push
push
push
push
call
xor
dec
add
xorl
add
subl
sub
movl
movl
cmpl
mov
mov
movl
movl
jmp
mov
movl
jle
pushl
push
push
call
add
xorl
or
movl
or
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
call
dec
add
movl
sbb
and
subl
mov
xor
sbbl
div
orl
imul
sub
add
or
mov
addl
xor
xor
mov
div
xor
movzbl
and
mov
cmpl
mov
mov
mov
jmp
movl
jne
push
call
orl
or
adc
andl
subl
subl
add
mov
mov
sub
and
movl
sbbl
movl
neg
movl
subl
mov
mov
sub
add
shr
sbb
sub
cmpl
movl
movl
movl
jmp
mov
jl
push
push
push
call
orl
xor
sub
addl
adcl
sbbl
mov
subl
imul
or
mov
and
adc
mov
subl
sub
movl
mov
cmpl
mov
movl
movzwl
jmp
movl
jle
pushl
push
push
call
and
or
mov
add
and
adc
movl
cmpl
movl
mov
jmp
mov
mov
jbe
pushl
pushl
push
call
mov
adc
sub
mov
and
mov
and
sub
movzbl
adc
movl
mov
sbb
or
mov
or
sub
sub
mov
movzwl
sbb
movl
movl
mov
mov
sub
or
movl
movl
inc
movl
movl
adc
movl
mov
and
mov
and
add
cmpl
movl
movl
mov
mov
jmp
movl
jbe
push
push
pushl
call
andl
mov
or
xorl
subl
add
dec
mov
add
movzwl
xor
mov
subl
sub
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
pushl
call
movzbl
or
sbb
or
xor
sbb
or
xorl
movzwl
xor
mov
mov
imul
imul
and
mov
or
cmpl
mov
mov
not
jmp
movl
jl
push
push
pushl
push
call
or
mov
xor
mov
andl
or
mov
mov
and
mov
or
mov
add
xor
add
add
mov
mov
movl
lea
orl
push
xorl
call
adc
mov
adc
mov
sub
jmp
scas
dec
jb
pop
and
push
ds
jo
fwait
push
sbb
adc
sbb
out
push
inc
sarl
sub
xor
in
adc
inc
std
push
pop
push
faddl
mov
cs
inc
pusha
inc
iret
adc
lods
popf
mov
gs
out
jbe
pushf
push
inc
call
push
test
mov
lods
xchg
imul
aaa
fldcw
cld
xchg
cmp
sbb
mov
std
jno
adc
mov
push
in
adc
dec
xor
aam
sbb
scas
scas
and
push
outsl
testl
jle
and
ret
int
pop
mov
int3
dec
jns
lret
je
pop
pop
stos
jl
add
add
mov
outsb
imul
pushf
xor
int3
out
pop
push
mov
xorl
outsb
jge
insl
and
daa
frstor
xor
hlt
cmpsb
jmp
dec
in
pop
mov
loop
sub
subb
fisttpl
das
pop
mov
sub
imul
sahf
mov
xchg
je
and
xor
stc
ret
adc
adc
daa
push
xchg
andb
sahf
lea
outsb
rcll
pop
mov
clc
fidivl
mov
mov
movsb
cmpsl
leave
add
fmull
dec
mov
outsl
popl
ror
mov
lret
cwtl
andl
shl
pop
jle
sbb
js
ds
add
bound
divb
inc
scas
gs
inc
loope
pop
adc
int
sbb
mov
addr16
cli
push
add
mov
push
add
lods
outsb
add
loopne
ljmp
hlt
in
fisubrl
or
xor
loop
dec
shrl
push
cmpb
ljmp
mov
or
movsb
sub
outsb
in
mov
ficoms
lods
dec
or
dec
inc
push
imul
je
pop
sbb
mov
lahf
ret
jg
or
pop
inc
xchg
pop
jae
arpl
mov
outsl
mov
cmp
ja
jecxz
xlat
xchg
push
pop
insl
test
cmc
stos
pop
cmp
imul
mov
or
sub
ret
push
nop
xchg
cmp
pop
je
out
and
push
xlat
cmp
daa
pushf
mov
pop
in
cltd
adc
lret
add
repz
push
mov
jns
notb
rorl
xor
jmp
push
cmc
imull
cmc
add
xchg
jl
push
pusha
shrb
dec
test
push
add
mov
lock
mov
ljmp
adc
add
xor
mov
lahf
adc
xchg
mov
mov
aas
sub
fsts
cmpsb
push
shll
jo
ljmp
movsb
decl
ret
dec
add
jle
pushf
mov
mov
ret
add
sbb
adc
cmpsl
lcall
inc
mull
sub
sub
mov
adc
xchg
fwait
loopne
xchg
sbb
in
mov
push
push
jl
jae
popf
mov
cmpsb
sbb
cmp
subl
xchg
cmpsb
ret
sahf
mov
repz
and
leave
popf
pop
xchg
out
repnz
dec
cs
push
dec
imul
cmpl
movl
not
movl
jmp
movl
movl
jg
push
push
call
sub
add
xor
mov
and
or
add
sub
add
sbb
and
sub
xor
mov
andl
div
not
xor
add
mov
movl
dec
movl
movl
and
movl
cmpl
not
mov
jmp
movl
jae
push
call
not
orl
dec
sub
xor
movl
movl
mov
mov
sub
xor
movl
sbbl
movl
sub
movl
xorl
movl
movl
movl
mov
mov
cmpl
mov
not
not
jmp
movl
movl
jge
push
call
or
sub
xor
xor
add
add
add
and
mov
or
cmpl
mov
mov
jmp
movl
ja
pushl
push
pushl
pushl
pushl
push
push
call
mov
adc
mov
movzbl
xor
and
xor
or
xor
add
sub
xor
mov
mov
adc
mov
and
sbb
sub
sub
cmpl
movzwl
mov
jmp
mov
jg
push
call
mov
mov
sbb
adc
dec
sbbl
imul
mov
cmpl
movl
mov
mov
jmp
movl
jle
pushl
call
adc
mov
add
sub
addl
xor
add
sbb
mov
adc
lea
addl
mov
and
mov
adc
mov
mov
mov
xor
mov
xor
add
andl
mov
xor
lea
add
and
cmpl
movl
mov
movl
mov
jmp
movl
jge
push
push
call
and
or
xorl
add
mov
orl
sub
add
mov
movl
jmp
fidivrs
cli
sbb
dec
push
xor
mov
and
sbb
popa
ja
clc
repz
rcrl
mov
fistpl
jne
or
jle
push
xor
int
popa
outsl
cmp
imul
dec
xor
ret
out
addr16
ss
out
test
fildl
inc
scas
inc
ficomps
jl
aam
jns
repnz
loopne
in
pop
dec
jns
dec
mov
loope
fs
aas
sub
mov
mov
lret
mov
pop
push
dec
leave
xchg
add
adc
fsubrs
sub
push
push
lods
fcomps
xchg
mov
push
and
or
mov
enter
push
test
mov
lods
xchg
pop
outsl
jnp
hlt
xchg
xor
nop
jle
mov
imulb
insb
shll
or
sub
jb
ja
push
pop
loope
fsts
cs
xchg
cli
push
es
pop
int3
sti
or
popf
mov
orb
les
lods
xchg
fildll
add
xor
arpl
mov
clc
xor
jbe
sub
push
lea
cmpsb
mov
dec
sbb
test
iret
outsl
xor
jnp
bound
and
inc
cmp
mov
sub
add
ficompl
cltd
fmull
xor
aad
jmp
xor
adc
and
stos
in
push
push
loopne
push
add
lock
ror
xor
push
jecxz
hlt
and
adc
mov
aad
mov
adc
in
dec
stos
repnz
lds
sub
mov
ret
aas
push
mul
mov
nop
clc
ja
std
dec
cwtl
insb
loope
cmpsl
out
aad
rcll
jnp
scas
or
loop
call
into
sbb
imul
jmp
rorl
push
sub
and
dec
mov
mov
shlb
sub
popf
pop
jae
add
pop
in
push
xchg
add
fsts
cltd
add
mov
repnz
and
sti
or
sbb
fxch
mov
or
imul
negl
stc
or
mov
adc
mov
cld
loopne
mov
in
fs
sub
pop
fsubrl
leave
les
inc
stc
dec
xchg
inc
or
in
outsb
cli
jns
arpl
sbb
push
dec
popf
sti
and
aad
repnz
lret
lds
leave
rcll
dec
mov
je
pop
xchg
sahf
fdivs
out
stos
or
jbe
fdivrs
fmuls
jecxz
push
lock
das
xor
and
out
jo
out
jmp
and
sub
or
mov
loop
and
mov
in
stos
test
loop
xchg
bound
filds
inc
push
mov
sub
into
and
loop
mov
out
test
sub
lahf
into
test
add
imul
cmc
add
test
sbb
jae
jne
adc
in
cmpsb
hlt
and
mov
cld
pusha
out
lret
shl
sub
xchg
fs
mov
inc
outsb
jno
mov
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
movsb
add
sub
movsb
jp
int3
push
stos
ret
mov
lea
sbb
adc
sbb
sub
add
ja
jp
rclb
sub
rcll
push
push
xor
jg
jge
fists
adc
lods
jae
iret
test
mov
idivl
xchg
std
loope
xchg
jecxz
pop
sbb
jmp
xor
pop
fsubr
inc
into
dec
shlb
cmp
mov
lods
sti
cwtl
adc
adc
xchg
sahf
mov
mov
test
scas
scas
and
lcall
adc
mov
mull
scas
and
int
and
inc
add
inc
int
cmp
data16
mov
pusha
mov
inc
sub
out
repnz
mov
pop
xor
cld
cmovl
fisttpll
in
out
mov
aas
push
aad
fwait
xor
sarl
loopne
add
in
mov
and
xchg
popf
dec
mov
mov
pop
stc
stc
xchg
arpl
imul
jp
mov
or
xchg
out
repnz
mov
cmp
add
xchg
xchg
pop
sub
sbb
lret
xor
mov
clc
std
rolb
sbb
push
jmp
jp
in
mov
not
or
ljmp
stc
ror
push
xchg
push
pop
jnp
test
xchg
sub
mov
mov
repz
pop
jns
aam
sbb
and
mov
arpl
adc
daa
push
addr16
sarb
mov
mov
sub
je,pn
out
inc
inc
mov
fbld
cmpsl
neg
mov
sbb
add
mov
xchg
and
je
inc
leave
jl
pop
xchg
sbb
mov
imul
pop
int
imul
jmp
dec
dec
dec
xchg
inc
cmp
xor
or
call
mov
test
sti
and
fcomps
lcall
jbe
dec
push
fldt
add
push
mov
inc
xchg
add
cs
es
cs
pop
int3
mov
mov
and
sbb
mov
mov
pop
call
shr
mov
cwtl
jo
dec
out
cmp
fcompl
fldcw
ficompl
ret
in
mov
and
xor
testb
mov
pop
push
repnz
nop
cmpsl
aaa
mov
push
pushf
jbe
lcall
arpl
notl
inc
lds
xor
les
ja
fcompl
inc
cmp
shrl
imul
mov
inc
mov
jne
gs
mov
das
jns
push
xor
jl
sbb
mov
mov
mov
cmp
testb
leave
mov
dec
shl
pop
mov
lret
bound
xchg
push
scas
pushf
push
sbb
adc
jg
and
mov
scas
fistpl
shr
sbb
insb
cltd
fistl
jns
rorl
mov
add
stos
or
imul
test
sahf
dec
adc
mov
inc
mov
lods
xchg
cmp
dec
jae
inc
xorb
mov
mov
pop
mov
leave
mov
pop
and
sbb
adc
inc
dec
sbb
frstor
mov
push
stos
lock
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
jmp
loopne
add
sbb
fcomps
test
xchg
sbb
adc
sbb
das
cs
cmp
les
xchg
dec
xor
das
rcrb
aam
mov
ljmp
andl
cli
int3
loope
in
mov
jnp
test
les
jge
mov
mul
sub
sbb
pop
lcall
leave
mov
out
data16
inc
xor
lds
sarb
pop
xchg
sub
inc
ret
mov
cmp
aad
mov
mov
inc
xor
add
add
mov
fs
loop,pn
jl
and
test
aad
ds
mov
addb
mov
and
out
mov
xchg
dec
or
lret
mov
cmp
inc
int3
insl
insb
in
sbb
jns
mov
inc
in
mov
repnz
fisubs
out
mov
xor
movsb
xchg
mov
outsl
jo
andl
sub
xchg
mov
into
fwait
sbb
in
dec
aaa
sti
leave
data16
and
hlt
jmp
mov
jl
iret
mov
cmp
pop
jne
mov
mov
xchg
jp
dec
push
and
mov
sub
xchg
rorl
xor
dec
sti
sbb
arpl
pushf
cmpsl
aas
shrb
fildll
dec
xchg
lret
int3
sbb
pusha
imul
jae
xchg
loope
push
push
jae
in
jnp
xchg
cs
sbb
sbb
fsubrs
ds
lcall
test
dec
xor
adc
cmp
jmp
xchg
testl
aam
popa
cmp
rolb
rcr
mov
push
pop
in
push
adc
imul
mov
adc
mov
lds
mov
cmpl
iret
xchg
inc
pop
sbb
adc
mov
repnz
orb
pop
sub
pop
mov
xor
jmp
and
inc
xchg
sbbl
nop
mov
lods
fstp
ss
stc
xchg
add
mov
cmc
insl
jb
arpl
das
fdivs
insl
into
cli
movsl
in
sub
shrl
iret
inc
push
sbbl
ss
and
sbb
mov
adc
lret
je
sub
and
jmp
sub
xor
and
mov
adc
add
jb
test
mov
cmc
clc
in
push
pop
add
cs
push
rolb
sbb
ds
adc
cmpb
inc
sbb
dec
sub
sub
or
into
imul
jne
xchg
jg
fscale
inc
ss
pop
mov
sarl
ja
nop
pop
sbb
sti
mov
stc
adcl
les
cld
pop
lret
fdivrl
in
mov
popf
aad
les
adc
cmp
mov
imul
fwait
sub
pop
cmp
aas
jb
sbb
dec
mov
mov
addr16
sbb
cmp
je
jo
sbb
ja
arpl
call
outsl
xor
cli
shll
decl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
jmp
adc
pop
out
loop
loope
add
fstpt
jg
sbb
adc
sbb
dec
sub
outsb
or
ret
dec
xor
or
xchg
push
loopne
cli
jecxz
and
dec
cmpsl
loopne
test
inc
push
int
lret
std
mov
mov
dec
js
idivb
cwtl
test
xchg
and
iret
stos
idivl
fisttpll
outsl
notl
scas
ja
ljmp
cmp
addr16
sbb
fildl
xor
iret
sub
mov
cltd
test
dec
les
sub
fidivrl
adc
sub
daa
test
pop
sub
rolb
inc
mov
mov
ficoms
mov
sub
mov
movb
subl
cmp
cs
mov
addr16
adc
cmpl
and
mov
dec
adcb
push
in
test
cli
mov
icebp
xor
dec
and
cmpsb
testb
addr16
ret
pop
repz
inc
mov
pop
sbb
mov
push
dec
clc
aas
add
outsl
gs
jns
or
dec
push
fdivrs
mov
inc
lcall
dec
into
repz
test
jo
sbb
xchg
inc
shl
or
test
jmp
or
or
cmp
shl
dec
nop
push
enter
mov
sti
fwait
adc
mov
lods
sti
adc
jno
add
out
xor
mov
lcall
mov
pop
dec
aam
mov
fnstenv
cmp
test
mov
adc
dec
ja
jp
xchg
push
pusha
adc
mov
push
push
cmp
adc
mov
imul
decb
adc
push
andl
xchg
pushf
jg
mov
in
adc
xor
mov
sti
xchg
jecxz
push
jl
mov
fwait
and
cs
aaa
xor
sbb
stos
scas
mov
in
shlb
xchg
adc
inc
cmpl
xor
sub
and
sub
push
sbb
mov
outsl
pushf
push
dec
mov
xchg
mov
loop
mov
pop
ret
mov
ljmp
idivb
mov
popf
out
inc
mov
mov
cmp
shrb
mov
mull
cmpsb
dec
scas
ret
pop
fists
xchg
repz
pop
es
arpl
cmp
outsl
sub
inc
fwait
cmp
push
mov
sbb
push
call
xchg
sbb
mov
lahf
cmp
out
sti
sub
jne
mov
adc
repnz
and
cmpsl
loop
xlat
test
cmp
cmpsb
mov
std
mov
stos
bound
cmp
test
pop
lock
shl
sub
insl
lret
mov
jge
sbb
push
jbe
add
popf
pop
dec
sub
xchg
unpckhps
pop
jns
sbbb
push
jo
test
icebp
sbb
lret
push
shll
sahf
mov
jl
push
and
cmc
popa
nop
inc
xlat
or
adc
pushf
pop
cmpsb
sub
and
icebp
xor
mov
mov
jae
jbe
pop
mov
cmp
ss
pop
adc
out
xchg
test
dec
add
mov
hlt
cld
hlt
inc
popa
and
pop
pop
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
mov
xor
sub
jmp
cmp
mov
jns
sbb
adc
sbb
mov
ret
insl
push
sub
scas
dec
mov
inc
cmp
push
cmpsb
jle
aas
les
test
mov
lea
pop
aas
adc
and
add
dec
stc
push
aas
pop
inc
jns
test
sbb
in
lods
add
pop
and
mov
ljmp
push
notl
popa
pop
ds
and
xor
stc
loopne
call
shl
shrb
aaa
xor
insl
jo
jecxz
push
add
inc
and
out
cltd
add
pop
pop
push
imul
idiv
insl
sub
pushf
gs
inc
inc
fnstcw
or
into
mov
mov
roll
adc
ret
into
lods
lods
pop
xor
cmp
dec
stc
adc
fildll
adc
jge
inc
adc
push
jo
insl
pop
in
dec
cmp
lahf
cmpsl
lcall
adc
push
rorb
xchg
add
or
or
pop
jecxz
and
mov
jmp
add
xor
cwtl
out
or
mov
add
and
add
push
or
mov
mov
fmul
jno
cmc
sarb
dec
divb
shr
inc
add
jno
iret
xor
adc
arpl
ja
pop
pop
jbe
cmpsb
and
fwait
sbb
xchg
fnstsw
jnp
lods
test
test
xor
push
in
push
mov
add
push
sub
jp
adc
outsl
push
enter
add
dec
lea
mov
mov
pop
pop
mov
add
in
pushaw
lods
adc
mov
pushf
sub
dec
cmp
fidivs
add
pop
mov
or
jns
clc
mov
add
out
inc
fistpll
movsb
stc
outsb
lea
mov
dec
pop
xor
fwait
xlat
jge
cs
fdivrl
mov
and
dec
pop
scas
push
add
ret
xchg
repz
lret
int3
jnp
les
add
or
std
je
sbb
xchg
lret
sub
adc
xor
dec
in
ljmp
and
daa
xchg
insl
sub
mov
xor
sub
test
xor
mov
cmp
outsl
add
jl
sbb
call
fsubr
adc
jmp
cmp
cld
mov
mov
rolb
cmp
jmp
sub
lcall
or
dec
sar
inc
les
cltd
scas
jne
in
sub
add
adc
stos
shll
sbb
enter
out
push
cmpsb
fsubl
jno
add
loop
fabs
add
repz
loope
fwait
mov
out
xchg
vmwrite
mov
or
in
arpl
in
mov
mov
out
pop
jbe
stc
jecxz
mov
jns
test
inc
scas
popf
xor
cmp
mov
pop
mov
test
sbb
mov
out
movsb
mov
sbb
xlat
lret
xor
and
shrb
xor
sub
sbb
aad
aad
stos
stc
pop
out
mov
push
jne
movsl
xchg
xor
sti
enter
stc
idivl
rolb
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
jb
adc
or
xor
shll
mov
and
sbb
cmp
clc
dec
subb
mov
fcomi
mov
and
sbb
jl
adc
xchg
loope
scas
andl
fs
dec
mov
adc
add
adc
ja,pt
ror
inc
sbb
jmp
sub
fld1
mov
sub
push
xchg
mov
xor
mov
jmp
cmc
or
popa
or
test
bound
cmpsb
mov
in
jae
mov
decl
jp
dec
out
and
aas
call
dec
sbb
jge
jns
andb
cmp
and
jp
xor
mov
lcall
lret
jnp
lret
pop
stc
add
mov
push
outsl
mov
cs
cld
mov
movsl
outsb
cmp
jl
xor
pop
add
inc
fcoml
mov
stos
inc
mov
fisubs
aad
fidivs
shrb
adc
add
lock
cmpsl
aad
in
jae,pn
dec
std
xchg
addl
clc
ljmp
mov
jecxz
push
add
lret
or
push
dec
adc
test
sub
imul
stos
repnz
mov
lods
or
sbb
xchg
adc
push
mov
sbb
in
push
mov
mov
loopne
rcl
xchg
and
push
test
push
ljmp
lds
mov
push
push
dec
pusha
dec
or
jg
fucomi
dec
sbb
jnp
test
and
outsb
movsl
sub
iret
repnz
in
daa
gs
adcb
cltd
cmp
push
popf
addr16
jge
adc
inc
ret
sbb
ljmp
sbb
fs
dec
dec
inc
or
sbb
dec
mov
decb
iret
and
pop
loope
push
notb
dec
fistpl
pop
scas
cmp
stos
pop
jle
pop
mov
cli
dec
je
inc
push
and
mov
pushf
inc
mul
or
pop
sbb
xor
sbb
mov
push
cld
dec
sub
adc
sbbb
rcrl
fstpt
mov
sbb
fidivs
lock
adc
add
push
and
inc
mov
jns
pop
negl
mov
lea
mov
xor
mov
jmp
pop
pop
mov
stos
in
sub
sub
sub
mov
sbb
add
adc
and
movsl
mov
mov
sub
jge
cmpb
sbb
xchg
jl
ret
cld
jne
dec
aaa
jmp
sub
and
sbb
in
idiv
imul
ret
insb
add
mov
cld
mov
jae
inc
call
ret
incl
cmp
imul
fimull
stos
js
fbld
fbld
stos
push
mov
mov
sbb
jne
fdivrl
push
call
sub
sarb
lds
leave
add
mov
or
xchg
call
add
rcrl
addb
pop
nop
xbegin
hlt
sub
sbb
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
jmp
add
jp
add
xchg
imul
in
dec
filds
lcall
insl
jmp
das
or
mov
pop
fisttpll
pop
fcom
lds
jno
xchg
dec
cmp
pop
inc
js
fildll
scas
xchg
cmp
add
inc
cmp
xlat
push
out
add
decl
out
mov
xchg
jge
sbb
pop
push
std
outsb
add
jbe
xchg
xchg
push
in
cmpsb
mov
jo
loope
add
mov
mov
stc
mov
xor
jecxz
les
cltd
xchg
pop
cwtl
push
lret
mov
cwtl
mov
sahf
imul
push
mov
adc
xor
ljmp
mov
jl
jl
in
or
jnp
es
jl
andb
insl
mov
outsb
fists
aaa
xor
sbb
mov
pop
popf
js
jo
hlt
jp
push
stos
lds
out
ret
cmp
or
add
call
sub
add
rolb
inc
sub
mov
ret
inc
dec
cli
mov
adc
or
fcmovu
xor
sbb
jl
add
jge
sub
out
aaa
sub
and
dec
adc
outsb
ret
cmpb
mov
sub
push
push
in
sub
sti
inc
pop
dec
lock
sti
push
shr
in
rorb
xor
push
scas
pop
mov
jnp
lock
mov
pop
pop
ds
or
pop
adc
push
pop
xor
and
aaa
mov
mov
dec
cmp
and
push
mov
jp
lcall
ret
mov
test
repz
mov
jno
fcmovnbe
aas
sbb
sbb
imul
jecxz
xorl
insl
test
mov
daa
and
sbb
or
jl
out
iret
das
fs
inc
cltd
arpl
pop
cwtl
mov
or
mov
int
int
cli
jge
lret
sub
jbe
out
sbb
pop
dec
scas
inc
dec
push
enter
and
add
fsubrs
enter
incb
iret
add
je
loop
stos
out
sub
popa
jg
lcall
mov
imul
fcoml
mov
out
xor
or
fbstp
add
jns
adc
orl
push
enter
iret
loope
hlt
out
scas
add
lahf
ljmp
aaa
into
sub
pop
inc
add
adc
dec
xchg
cmp
push
dec
in
or
into
mov
adc
lds
xchg
xchg
mov
jmp
push
and
outsl
vpbroadcastw
mov
jbe
popf
jge
aaa
jb
dec
xchg
xchg
pop
jmp
fsubrl
and
sbbl
pop
dec
jmp
mov
cmpsb
or
push
sbb
sub
cmp
mov
insl
sarl
sub
ds
adc
aaa
call
mov
fs
and
lahf
clc
inc
imul
sub
imul
loop
xchg
inc
cld
mov
sbb
test
mov
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
jmp
loopne
xchg
es
rorb
push
stos
stos
arpl
sbb
adc
sbb
or
sub
subb
mov
dec
xchg
and
add
test
push
pop
jns
pop
and
in
adc
jl
cmp
orb
add
mov
pusha
xor
add
lret
jmp
or
rolb
loop
inc
dec
xchg
and
ss
pop
jmp
sub
mov
add
dec
pop
stc
inc
repz
cmp
sarl
ret
inc
outsl
lock
xchg
adc
xchg
mov
fs
inc
out
jg
loopne
movsb
ret
rcrl
mov
cmp
cmp
outsb
lods
adc
loopne
sub
mov
je
xchg
scas
cltd
jo
mov
mov
insb
mov
xchg
fistpll
lcall
jle
jmp
mov
nop
pop
in
mov
cmp
mov
and
lods
sarl
popw
loop
cmc
movsb
into
in
mov
lahf
cmp
cmc
cmpsb
mov
dec
ss
out
pop
and
das
dec
dec
lds
pushf
lods
lods
and
push
insb
incb
mov
out
imul
into
ficomps
xor
scas
test
stos
sahf
orl
js
cmp
mov
aad
jmp
jae
fwait
inc
push
sub
add
xchg
sahf
mov
mov
xchg
xchg
xor
mov
aad
jecxz
jns
filds
insw
icebp
lds
mov
leave
ret
in
sbb
push
pop
cmpsl
sbb
push
outsl
and
js
stc
sbb
iret
jbe
rcrb
mov
popf
inc
push
andb
pop
push
and
xchg
adc
pushf
ret
repz
inc
push
loop
orl
aam
push
leave
lods
enter
sarb
in
mov
std
cli
dec
stos
or
movsl
push
jne
sub
pop
sbb
fsubrl
sub
clc
cmc
cld
andl
dec
data16
mov
ret
dec
dec
push
lock
arpl
ds
in
cld
mov
push
sbb
mov
adc
stc
sbb
mov
mov
out
mov
ja
int
xor
leave
adc
dec
mov
or
aad
xlat
cmp
and
insb
ja
fbstp
mov
pop
jl
mov
imul
and
jne
cld
cmp
loope
leave
sahf
xchg
pop
cmp
jp
and
nop
pusha
xchg
aam
cltd
setno
cwtl
push
inc
aad
aaa
add
push
push
xor
jae
inc
lcall
add
cltd
add
jl
aam
pop
push
dec
or
add
dec
loopne
pop
and
sub
cmp
sbb
test
imul
enter
fadd
mov
push
cld
adcl
push
mov
mov
shll
out
fsubl
bound
push
aam
int3
out
pop
mov
jo
push
push
mov
xchg
or
hlt
std
push
shl
inc
lret
mov
xchg
add
enter
or
push
out
xchg
push
ja
sub
xchg
fsubrs
insb
jmp
gs
cmp
jae
sub
fistpll
lahf
movsb
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
pop
scas
push
sub
push
ja
fstpt
js
mov
and
sbb
test
lahf
clc
test
inc
repnz
jb
sarb
mov
mov
aas
clc
leave
jae
mov
jno
mov
sub
mov
movsl
jb
jo
mov
nop
jae
pop
xorl
dec
int
outsb
push
add
pop
arpl
add
add
xchg
fcompl
mov
clc
xor
ret
jb
stos
xchg
push
xor
iret
enter
mov
mov
aad
adc
shlb
insl
addb
repz
ret
xchg
sarb
ja
dec
push
dec
sbb
daa
fisubs
mov
sub
aaa
pop
pop
xor
mov
mov
jl
mov
daa
mov
push
adc
and
movsb
mov
dec
out
repnz
cmp
ja
xchg
xchg
mov
loopne
pop
push
notl
xchg
lea
jle
insl
shl
bound
test
clc
pop
xorl
xor
mov
mov
jge
push
sbb
add
in
push
xchg
nop
push
cmp
lods
jne
sarl
stc
pop
cwtl
pop
inc
adcb
out
mov
shlb
mov
pushf
ja
scas
ret
fxch
lods
loop
into
repz
xchg
bound
out
dec
lock
xor
arpl
fnstcw
mov
cmp
push
mov
dec
rcrl
push
decl
aam
jg
or
xchg
fidivl
aaa
xchg
aaa
add
push
push
and
pop
fidivrs
iret
jo
add
adc
into
pop
sbb
xor
xchg
push
xor
or
lahf
inc
push
jns
sbb
ja
jne
les
lahf
pop
mov
repz
fstps
fbstp
and
or
enter
lods
mov
test
mov
in
mov
xchg
fnstenv
xor
lds
pop
sti
sbbl
repnz
jno
add
sbb
test
inc
ss
cmpsl
test
cmp
mov
notb
out
inc
xchg
push
ja
xchg
dec
xchg
sbb
dec
aam
out
std
sbb
sub
stos
insb
popa
sbb
lods
cwtl
mov
push
stos
nop
mov
loop
cld
mov
rcr
ljmp
xchg
inc
lock
in
dec
popa
loopne
mov
mov
adc
push
in
sti
push
mov
mov
fiadds
lcall
cmovne
push
jle
add
push
leave
mov
loopne
xlat
jp
cwtl
inc
es
sub
aas
xchg
cld
dec
mov
aas
jge
decb
je
pop
and
lods
mov
inc
xor
xor
inc
mov
mov
imul
jnp
push
or
dec
lods
cli
sub
sbb
fwait
repnz
std
sub
repnz
fs
lds
mov
inc
adc
jp
inc
cmp
mov
arpl
fildl
xchg
int3
adc
xor
addb
mov
fs
sub
pop
sarb
jg
cwtl
mov
pusha
cmp
pushf
setl
add
in
mov
movsb
test
pushf
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
jmp
shrl
into
and
fwait
outsb
mov
ret
mov
adc
sbb
mov
loopne
or
sbb
push
test
mov
sahf
aam
inc
stos
cmp
mov
inc
test
lahf
xlat
pushl
lock
cltd
mov
bnd
loop
mov
cli
cld
add
mov
call
xor
adc
in
xchg
stc
in
arpl
xor
test
fnstsw
inc
lahf
js
cwtl
lds
lds
mov
push
out
lahf
cs
add
imul
or
stos
movsl
pop
fstpt
mov
enter
xchg
pop
mov
push
sbb
shlb
push
and
push
aam
xor
sub
cmp
sub
dec
or
aam
sub
ret
ss
mov
inc
int3
scas
push
aaa
js
fcomip
ss
xchg
rclb
mov
mov
adc
xor
test
lahf
enter
pop
adc
lret
and
xor
inc
xchg
cld
mov
jle
push
fsubl
stc
dec
aaa
repz
jl
pop
ret
cmp
imul
add
jl
sub
out
fnsave
adc
cmp
pop
pop
fiaddl
mov
aad
push
cli
cmp
leave
lret
adc
imul
add
mov
xor
mov
rol
subb
repz
jo
test
scas
cs
int
xor
inc
add
nop
push
cli
pushf
sbb
jge
sbb
lods
add
mov
sahf
mov
dec
orl
push
test
xchg
sbb
mov
aaa
cs
push
mov
mov
lock
push
scas
jbe
or
pop
sbb
jmp
stos
or
add
in
sub
mov
std
outsl
cmp
js
sub
lahf
aam
dec
dec
sub
fscale
push
sti
rcll
in
cmp
fdecstp
scas
roll
pop
cmc
xor
hlt
das
rol
sbb
shll
inc
stos
jg
ret
dec
mov
cli
sub
inc
data16
aad
loopne
in
jmp
int3
stos
mov
jo
aaa
mov
or
mov
inc
xor
adc
adc
inc
loope
ja
dec
xor
xor
xchg
sahf
mov
adc
leave
mov
dec
out
mov
iret
adcb
bnd
mov
inc
sbb
jnp
movsb
and
into
aam
movsb
push
xchg
sarl
pop
mov
and
movsb
jbe
jne
push
mov
inc
push
lods
add
leave
jecxz
daa
or
mov
stos
shrl
jo
pop
es
rolb
rorb
arpl
enter
push
cmpsl
call
mov
repz
cmp
loop
cmp
jne,pt
fists
movsb
jnp
jb
or
test
pop
jns
ss
mov
scas
fsubs
cmp
mov
js
xchg
es
inc
jle
xchg
testb
out
cmc
jb
nop
insb
cmc
mov
add
pushf
jecxz
ret
jno
aas
lahf
in
adc
lcall
ljmp
mov
imul
mov
cmp
mov
mov
shl
cld
or
add
xor
sub
cli
cmp
les
lahf
pop
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
jmp
arpl
bound
aam
push
jle
xlat
hlt
push
dec
push
sbb
adc
sbb
jmp
loope
repnz
and
ljmp
inc
out
lret
outsl
dec
fs
les
bound
adc
add
and
popa
adc
mov
cmpsb
outsb
and
data16
dec
lcall
adc
and
mov
leave
ret
xchg
mov
andb
xchg
pop
in
clc
out
imul
mov
jbe
subb
pop
add
std
mov
cmp
sub
sub
jg
mov
out
mov
pop
ficoml
mov
repnz
stos
xor
push
mov
aaa
lock
std
jecxz
rorl
out
jbe
and
cmpsl
push
xchg
inc
lds
in
jbe
cmpsl
movsb
aas
int3
cltd
pop
xchg
sub
pop
loope
mov
je
mov
cltd
add
xchg
nop
mov
arpl
loope
rcll
mov
je
ficomps
mov
add
jmp
push
subl
mov
mov
pop
data16
fcomps
sbb
jg
es
mov
pop
or
jmp
push
pop
subw
and
cmpsl
pop
test
loop
fnstenv
push
cmp
cmp
fmuls
dec
ffree
pop
stos
pop
pop
jmp
and
xchg
lcall
mov
cs
mov
mov
jns
adc
mov
loopne
aam
test
xchg
sbb
and
js
out
jae
xlat
dec
sub
push
xchg
xchg
out
ret
divb
sti
int
adcb
or
in
jbe
rorb
xor
test
fdivrl
xor
iret
ret
lods
pop
leave
pop
cltd
in
adc
mov
xchg
or
cmp
adcb
test
xor
pusha
scas
adc
dec
fdivrs
ja
lock
ljmp
mov
out
cmpsb
inc
jne
imul
sbb
nop
pop
sub
shrl
pusha
adc
cmp
lods
jae
mov
cmpsl
mov
add
xchg
xor
push
leave
or
lods
mov
dec
and
sub
out
or
push
pop
inc
aaa
dec
stc
aad
mov
mov
ja
stc
das
pushf
push
cmp
jbe
scas
test
mov
mov
jae
cs
imul
ds
xchg
mov
ftst
insl
inc
inc
xor
inc
std
arpl
lret
mov
imul
jp
xor
call
out
aam
jno
inc
in
adc
pushl
ds
ret
sub
orb
jnp
fwait
bnd
mov
test
lcall
lods
insb
or
pop
js
jno
push
fsubs
inc
cmpb
pop
lock
loop
sub
mov
pop
cltd
mov
push
add
inc
xor
loopne
sbb
xor
xlat
movsl
mov
pop
mov
xchg
pusha
out
out
push
jg
movsb
repnz
lea
cmpl
inc
adc
inc
cmp
adc
push
pop
and
adc
dec
ss
xchg
push
inc
inc
lods
add
add
jmp
int3
insb
fwait
jo
push
cmp
ret
lahf
jo
arpl
sbb
adc
sbb
xor
xor
sub
add
or
popf
or
inc
mov
repnz
cltd
das
sub
pop
sub
mov
sub
cmp
lcall
pop
pop
adc
mov
or
mov
xor
xchg
dec
enter
pop
xchg
push
mov
xor
repnz
shlb
push
add
out
mov
ja
das
jnp
iret
adcb
out
outsl
ljmp
xchg
jmp
jp
cmp
xchg
ret
add
adc
push
pushf
jle
call
test
jg
stos
cmp
shll
push
out
mov
sbb
pop
lret
and
xchg
bswap
jno
mov
cmpsb
fildll
adc
push
ljmp
ror
jmp
data16
repnz
cwtl
imul
aaa
mov
push
cwtl
in
jmp
nop
jp
les
jge
mov
mov
cli
push
out
inc
dec
xlat
les
sti
repnz
std
jmp
mov
ljmp
cld
push
daa
add
shll
and
xchg
jnp
ja
push
pop
mov
pop
dec
inc
mov
pop
sub
fisttps
pop
test
add
pop
xor
loop
xor
or
cs
lds
pop
lcall
xorb
xchg
jmp
pop
dec
mov
outsb
jne
cmp
jle
imul
xchg
jp
fs
sbb
xlat
scas
inc
inc
scas
lods
sbb
ficomps
fsubs
pop
out
sub
push
std
push
jmp
rclb
hlt
push
insb
mov
push
and
and
out
movsl
mov
sub
mov
lahf
or
roll
scas
or
mull
rcrl
fstl
test
stos
xor
jmp
hlt
xchg
jb
or
andl
push
mov
add
dec
sbb
popa
sub
pop
aas
jp
jae
and
das
clc
ljmp
lods
mov
mov
nop
test
push
jae
sbb
mov
mov
int
shlb
ret
lret
adc
mov
jle
or
into
sarl
dec
roll
jb
push
dec
and
xchg
lea
incl
jnp
movsb
fdivl
adcl
add
mov
popf
jne
les
jmp
and
sub
xor
sahf
xorb
dec
sbb
nop
xchg
dec
push
push
enter
insl
cmp
sub
orl
aad
in
pop
lds
leave
push
push
sub
jg
pusha
or
xor
fimuls
jp
and
out
jb
ljmp
mov
pusha
xchg
fidivrs
fldt
lea
xor
cmp
in
jmp
pop
jo
push
push
xor
dec
xchg
sub
lock
jl
test
jne
leave
stos
sbb
fistps
cld
fnstenv
movsl
and
jp
jnp
aaa
lock
push
aaa
push
xorl
into
mov
stc
movl
movl
movl
movl
jmp
jecxz
xchg
sbb
sbb
ret
movsl
mov
faddl
sbb
adc
sbb
sub
fstps
orl
or
push
sbb
add
es
loop
mov
fsubl
cwtl
pop
mov
push
movsl
not
mov
pop
out
jo
sbb
pop
mov
and
jo
dec
lock
fwait
inc
loope
dec
jbe
xor
mov
sbb
fimull
mov
in
ja
inc
mov
xlat
mov
bound
scas
cmp
fstl
fcoms
pop
add
add
cmc
es
mov
stc
inc
or
aaa
adc
sbb
jnp
and
dec
xlat
adc
jae
dec
push
bound
loop
and
sahf
in
adc
sbb
out
jl
dec
or
into
push
dec
out
xor
add
xchg
jno
out
and
rcll
xor
inc
push
in
inc
inc
mov
test
or
jmp
pop
sahf
jge
call
xchg
mov
jg
xchg
lea
mull
push
arpl
pusha
adc
dec
scas
push
loopne
fidivrl
jne
in
xchg
xor
mov
cmp
xor
mov
cmp
push
or
pop
lock
mov
mov
dec
imul
cs
cmp
mov
nop
movlps
scas
inc
je
or
sbb
pop
mov
mov
dec
loop,pt
repnz
cmp
cmc
aam
sub
negb
mov
fsts
repnz
sahf
or
dec
nop
push
repnz
jno
mov
mov
notb
xchg
repnz
jne
ds
dec
or
aad
push
or
repz
push
nop
pop
pop
sub
int
and
sub
mov
lret
sbb
and
dec
lods
sbb
scas
cs
sub
inc
push
sbb
iret
ds
cs
repz
inc
push
dec
mov
mov
jecxz
sbb
mov
fstpl
ja
or
movsl
mov
add
mov
push
mov
test
mov
xchg
pop
loopne
popf
mulb
jmp
dec
outsb
jno
inc
and
scas
mov
into
dec
pushf
and
push
mov
sbbl
out
lds
pusha
push
aam
sbb
aam
xchg
push
loope
lock
scas
jmp
push
dec
dec
mov
out
mov
inc
and
jnp
mov
xor
lods
mov
std
fmulp
fsubrs
xor
dec
cmp
mov
add
sbb
mov
insb
adc
das
cltd
dec
int3
in
test
insb
popf
pop
and
or
pushf
nop
push
xchg
insb
mov
push
adc
push
lret
pop
mov
sub
lret
gs
pop
mov
push
cld
mov
aaa
jp
sarl
mov
insl
mov
lret
movsb
mov
push
push
adc
adcb
cmpsl
mov
ficomps
mov
out
lret
and
dec
mov
xor
push
push
dec
cmp
mov
push
mov
test
decl
and
add
push
pop
div
mov
or
mov
xor
div
jmp
and
popa
into
pop
dec
and
mov
mov
cmp
sbb
adc
sbb
or
jge
iret
inc
cmp
push
jl
pushf
push
mov
dec
push
xchg
adc
dec
adc
jb
incl
jno
xor
xchg
xor
mov
mov
es
sbb
add
scas
jns
mov
pop
adc
push
jmp
xchg
inc
or
loop
sbb
push
lret
lods
fisubs
dec
add
dec
cld
iret
test
pop
push
push
xchg
adc
es
mov
jle
popf
cmpsl
movsb
jmp
cs
cmc
mov
icebp
js
xchg
inc
test
cmc
mov
test
loope
jg,pn
jp
add
pop
clc
pop
fistpll
sahf
loop
sub
inc
inc
test
adc
dec
cmc
mov
js
or
and
or
inc
xchg
pushf
gs
xor
iret
in
pop
int
and
std
mov
jge
and
lret
mov
shr
sahf
push
pop
cmp
popa
sub
and
sub
mov
cs
fs
ja
lea
and
push
dec
adc
pop
jmp
scas
sahf
push
sub
xchg
pop
mov
adc
loopne
xor
mull
mov
lds
insl
mov
jecxz
test
or
xor
dec
out
mov
iret
push
jnp
push
xchg
mull
push
cmc
adc
jno
pusha
sahf
push
and
cmp
and
cmp
add
push
mov
ss
fisttps
movsl
fstpt
cmp
or
cmc
insb
cli
xchg
mov
xchg
aam
dec
shll
shr
pushf
mov
add
mov
call
sbb
les
aam
rcll
ret
cwtl
inc
lea
insb
mov
lret
fwait
popf
adc
in
dec
pop
jl
sbb
cmp
lock
mov
fsub
mov
iret
sbbb
leave
xchg
mov
dec
sti
sbb
loope
dec
jge
pop
add
push
cli
test
nop
gs
pushf
xor
popa
mov
mov
imul
test
lds
and
sti
pop
adc
push
mov
notl
addr16
andb
jp
call
insl
fidivrl
pop
cmp
dec
popf
fnstcw
or
fsubrl
xor
sbb
fimuls
xchg
push
push
test
ret
add
cli
repz
push
call
add
push
pop
xlat
sbb
pushf
push
pop
ljmp
inc
cmp
loop
lea
or
fsts
xchg
inc
hlt
pop
add
testl
loope
loopne
xor
xchg
int
inc
inc
and
xlat
lea
mov
stos
add
dec
rorb
inc
and
jns
outsl
cmc
and
inc
inc
inc
les
inc
lds
inc
lods
pop
enter
sub
cltd
jge
pop
xchg
mov
iret
push
movsb
sub
push
js
mov
dec
jmp
addr16
push
lock
mov
cmpsl
jmp
mov
cmp
inc
sbb
adc
ret
out
rclb
add
add
mov
loopne
lea
incl
add
add
add
add
incl
add
jmp
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
jmp
add
mov
mov
test
jle
xor
sbb
adc
sbb
pop
stc
ja
imul
adc
mov
pop
pop
outsb
rcl
mov
push
and
lods
sub
aas
shll
sbb
inc
mov
add
pop
xor
std
cmp
mov
mov
daa
or
xchg
dec
ret
xor
xchg
sub
lock
sub
mov
sbb
popa
stos
aam
adcl
cmp
mov
push
add
out
icebp
jns
leave
xchg
xor
pop
push
jo
push
test
dec
punpckhbw
mov
dec
jne
mov
imul
cli
dec
fldt
pushf
xchg
sbb
dec
jbe
fisttpll
arpl
xchg
add
das
call
cltd
or
stos
and
mov
pushf
xchg
je
mov
int3
cmp
aaa
in
insb
xchg
sbb
lock
arpl
push
mov
xor
add
mov
cmc
pop
add
pop
subl
sbb
jmp
jo
js
aas
cmp
jmp
jecxz
sub
fmuls
push
xchg
cmpsb
xchg
mov
lock
mov
xchg
rcrl
test
enter
fildl
and
test
cmpsl
call
xchg
cwtl
test
adc
cwtl
fwait
leave
inc
bound
je
aas
and
or
imul
push
xchg
es
cmc
in
js
lods
jp
mov
or
xor
mov
movsb
pop
cmpsb
daa
mov
imul
mov
mov
or
pop
imul
pop
sub
xchg
cmp
mov
fsub
das
add
andl
mov
push
jl
inc
cmc
add
test
lcall
lea
dec
data16
jb
jnp
cmp
lods
xchg
or
and
push
movsl
aam
sbb
lods
ficoml
sbb
mov
negb
fisubrs
and
cwtl
ret
adc
pop
dec
mov
inc
jge
call
dec
push
std
cmp
xor
lcall
test
or
mov
aas
in
sbb
les
mov
or
shrb
sub
and
pop
push
mov
cmpsl
imul
jmp
xlat
cmpsb
xchg
sbbl
dec
bsr
ret
pusha
add
mov
mov
adc
cmp
xchg
mov
add
cmpsl
lret
or
out
aam
pushf
ret
add
inc
jg
xchg
cmp
mov
imul
lahf
xor
mov
cmp
add
push
mov
popa
cmpsb
add
cmpsb
pop
jae
push
dec
xor
add
mov
mov
xlat
into
gs
jp
inc
loop
adc
xor
movsl
sub
ss
mov
inc
push
jg
xor
into
ret
mov
add
and
cmp
ljmp
inc
mov
int3
sbb
dec
jbe
xchg
daa
pop
les
jl
lret
adc
out
test
jge
inc
aad
or
fcomip
ljmp
add
mov
decl
hlt
std
inc
test
pushl
jns
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
jmp
imull
mov
mov
loopne
stos
cli
sub
sbb
adc
sbb
cmp
sub
sub
or
ret
push
and
in
das
pushf
push
jns
pop
pop
test
das
int
orl
faddl
dec
out
ljmp
out
movsl
cmp
aaa
jne
popa
mov
or
mov
xlat
adc
and
sub
cmp
orb
rcrb
cli
push
ret
adc
subl
popf
mov
lock
jnp
fwait
out
lods
maskmovq
negl
test
fs
out
mov
iret
sti
icebp
xor
mov
sti
rcll
stc
mov
pop
lret
bound
push
inc
add
fadd
imul
call
or
mov
inc
mov
subl
iret
push
pop
loope
repz
rorl
test
xchg
xor
cmp
cmpsb
ret
cwtl
int
hlt
jb
dec
mov
adc
stos
mov
ret
cmp
push
leave
xchg
das
cmp
add
rcrl
lret
ja
aad
scas
mov
inc
movsb
fldlg2
jbe
ret
outsl
lahf
cwtl
into
xor
fbld
cmp
add
and
mov
mov
iret
pop
jbe
or
cltd
push
fdivl
or
and
jecxz
fsub
popf
jnp
out
sbb
and
mov
daa
dec
sub
sub
xchg
mov
mov
lds
sub
movsb
cmp
sbb
rcrl
or
push
lret
xchg
test
stos
mov
add
and
fldt
add
mov
rorl
or
aaa
xchg
mov
outsb
movb
repz
je
adc
fdivs
jg
mov
push
lahf
lret
cld
jno
mov
fidivs
xchg
adc
cwtl
jae
ds
imul
fstpt
jle
add
popf
mov
push
dec
hlt
into
fstl
lds
pushf
repz
sbb
adc
push
mov
cmp
pop
loop
cmpsb
or
int3
inc
sub
stos
mov
mov
mov
mov
lret
lds
mov
sub
lea
pop
je
aas
push
inc
adc
sub
repnz
arpl
stos
sub
add
push
fdivr
mov
jnp
cltd
sub
cmp
rolb
popf
lret
aas
outsb
adc
fistl
add
inc
ss
sub
jge
mov
into
scas
dec
xlat
cmp
pop
sub
pop
cmpsl
fdiv
dec
jp
push
jmp
test
sbb
mov
adc
shl
and
daa
shl
adc
loope
jb
sbb
dec
iret
outsl
mov
mov
movsb
push
es
mov
dec
xchg
arpl
cli
aad
jle
cmp
clc
pop
mov
jbe
loopne
mov
clc
push
mov
cmp
loope
test
push
cltd
icebp
mov
cmc
cmp
test
adc
add
loope
icebp
xchg
jge
sub
int
into
outsl
jle
inc
pop
ja
cmp
pop
cwtl
gs
cmp
cmp
lahf
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
jecxz
enter
sbb
cltd
mov
push
jle
and
sbb
out
repnz
rcll
inc
iret
lods
xor
movl
adc
cmp
jae
and
test
call
loope
xor
or
jge
mov
sub
inc
call
dec
sub
xlat
lret
hlt
arpl
xor
fdivrp
lods
fimuls
in
xchg
pop
sub
cwtl
pop
and
dec
loop
imul
jae
decl
loope
jo
mov
mov
std
jb
mov
mov
out
negb
and
mov
jo
rclb
out
daa
stos
cwtl
dec
popf
lret
lea
and
mov
pusha
and
outsb
and
adc
lods
enter
mov
ds
sbb
sahf
mov
cmpsb
int3
add
mov
movl
leave
dec
xchg
jb
push
pop
pop
cmp
nop
das
or
mov
dec
add
popf
jle
dec
mov
ljmp
jge
and
cmpsl
push
sti
or
repnz
or
cmp
hlt
push
or
sub
xor
mov
testl
mov
mov
std
dec
jecxz
je
jp
sub
repz
stos
and
cmp
dec
aas
iret
mov
jb
pop
mov
pop
insl
mov
cmp
lret
sarl
or
cld
jne
in
and
lret
adc
mov
and
jl
mov
xor
pop
mov
movsb
fiadds
jne
cmp
dec
jns
inc
jne
icebp
push
inc
mov
add
loopne
sub
pushf
add
mov
ljmp
push
mov
push
aad
loopne
filds
icebp
aas
xor
inc
nopl
xor
aas
jge
dec
sti
add
aad
je
in
int
xchg
pushf
mov
movsb
shr
cltd
insb
aas
inc
jmp
clc
idivl
test
jl
pop
xchg
icebp
lahf
push
out
fnstcw
ds
adc
push
push
int3
mov
int
enter
cmp
outsb
cs
pop
xchg
cmp
int
xchg
mov
mov
xor
sbb
or
jecxz
pop
je
xor
clc
in
mov
jecxz
jge
mov
lods
cmpsb
incl
dec
into
jno
mov
jnp
test
aaa
jg
add
cmpsl
jo
jg
ds
cli
adc
repnz
xchg
ljmp
adc
add
jge
push
out
jl
scas
aas
push
outsl
pop
mov
jae
ret
outsl
out
mov
xchg
rorl
add
mov
and
inc
ja
push
pop
jle,pt
addps
push
mov
push
mov
addr16
rorl
arpl
adc
call
mov
outsl
mov
sub
xchg
push
sahf
insb
sbb
lds
nop
lds
popf
dec
and
or
mov
xchg
pop
cli
fildl
jnp
push
adc
cmp
inc
pop
pop
sub
call
cmp
sbb
and
repnz
std
cmp
imul
add
xchg
or
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
jmp
push
mov
and
and
mov
push
sbb
adc
sbb
dec
dec
das
pusha
cmp
int3
fldcw
sbb
xchg
cmp
and
xor
pop
or
pop
adc
mov
test
inc
nop
dec
roll
add
dec
cmc
outsl
outsl
rorl
mov
sahf
rclb
and
pop
movsb
sbb
scas
in
jbe
jmp
jge
sub
or
loope
movsb
andl
pusha
cmpsb
dec
outsb
pushf
int3
add
inc
popa
dec
push
lods
jmp
mov
cld
scas
mov
inc
loopne
jb
stos
inc
dec
arpl
jge
cmp
sbb
sub
mov
inc
fnstsw
mov
mov
dec
imul
test
lret
loop
out
xor
mov
test
pop
in
out
inc
in
rcll
dec
fcmovu
mov
inc
jp
xchg
mov
adc
lods
mov
xchg
outsl
mov
dec
add
jb
sti
test
lahf
push
cli
lret
mov
fstl
sub
cs
aad
das
jmp
sarb
add
lss
add
fucomi
pop
adc
jne
outsb
mov
xor
outsb
mov
imul
cld
ss
shl
push
scas
cmpsb
fisubrs
sub
mov
jns
pop
inc
pop
inc
iret
test
stos
xchg
insb
pusha
call
cltd
and
repnz
mov
inc
mov
ss
lcall
clc
fidivs
loopne
mov
das
jmp
mov
fildll
pop
lods
inc
enter
out
movsb
mov
fnsave
push
jno
cld
mov
push
xchg
loopne
pop
xchg
xor
jo
pop
adc
jp
lcall
inc
sub
mov
xor
out
ljmp
jp
push
dec
mov
inc
out
or
aad
dec
lock
sub
imul
lret
mov
jns
add
cmp
das
jmp
cld
inc
inc
and
call
pop
fists
sbb
mov
xor
pop
fistl
ds
xchg
sub
xchg
out
adc
invd
or
test
sub
jno
repnz
jae
stos
gs
inc
js
lock
movsb
mov
rorb
sbb
push
sbb
daa
popa
aas
adc
xchg
xchg
pushf
add
pusha
mov
lds
test
out
roll
mov
inc
movsl
cmpl
out
ficompl
cmp
push
xchg
out
ret
shll
js
adcl
and
js
adc
leave
mov
xchg
push
gs
or
mov
aam
add
xor
cmp
ljmp
ret
sub
je
mov
sub
mov
cltd
icebp
jne
nopl
sub
jnp
int3
outsl
fildll
test
push
mov
test
imul
loop
les
inc
adc
and
ds
popl
pop
fwait
xor
movsb
jae
loopne
aam
cld
mov
mov
jne
sub
aaa
data16
sahf
inc
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
jmp
cmp
sub
pop
rcrl
mov
and
sbb
enter
xlat
xchg
scas
cmp
mov
push
negb
push
pop
jne
pop
addr16
xorl
jae
or
mov
xlat
jp
repz
or
push
and
xchg
mov
das
push
imul
and
je
mov
shlb
xchg
cs
pop
cmp
stos
sti
je
or
sbb
lds
mov
mov
lcall
imul
xor
stc
xchg
xor
pop
aas
adc
jbe
scas
mov
mov
test
adc
rcrb
jmp
cmp
enter
xchg
test
mov
add
jl
stc
stc
lods
dec
mov
add
insb
shlb
outsb
aad
mov
jo
add
add
sub
add
add
mov
cltd
mov
adc
iret
rorb
cmpb
xchg
pop
sar
std
jp
dec
pop
pop
fwait
mov
insb
or
in
xor
inc
add
jmp
or
jno
push
pusha
inc
andl
fisubrs
xchg
leave
cltd
cmp
lods
sbb
mov
mov
mov
mov
imul
and
xor
mov
dec
cmp
jg
rorb
movb
push
jnp
sub
iret
fnsave
pop
cmp
icebp
mov
adc
ja
mov
jo
fistpll
ret
mov
cmp
fldenv
arpl
mov
jbe
call
ror
dec
fmull
push
pop
xor
mov
cli
scas
fildl
sbb
mov
loop
cwtl
mov
add
cs
lea
outsb
outsl
adc
pop
xchg
gs
aas
repz
imul
mov
mov
fsubl
jno
mov
or
stc
pop
das
sub
mov
in
and
mov
sub
lock
sub
dec
or
xchg
cltd
add
push
out
inc
pop
mov
hlt
mov
outsb
rcrb
or
and
sub
jl
jp
cs
or
or
test
or
xor
or
shlb
lea
xor
xor
xchg
add
adc
cmpsb
cmp
pop
jo
xor
ja
inc
jp
sub
mov
jo
push
sarb
loopne
add
xchg
sbb
pop
adc
ficomps
pop
lret
ret
shl
or
pop
imul
or
xor
push
enter
fbstp
mov
imul
xor
lods
repz
stc
fisubrl
adc
cmp
dec
repz
xor
add
adc
adc
aad
int
or
push
std
leave
movsl
ss
es
fdivs
pop
mov
pop
mov
xchg
out
jecxz
dec
or
repnz
sbb
js
cmp
ja
jge
fsubr
xor
sti
xchg
ds
test
and
jne
rcrl
icebp
add
lahf
out
lods
inc
ror
inc
mov
and
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
jmp
jp
inc
mov
mov
pop
push
popf
jo
cli
in
mov
insl
adc
sbb
rcrb
subb
pushf
lret
and
dec
cld
jb
cwtl
add
mov
sahf
in
mov
lret
stos
and
or
xchg
sbb
lods
jge
hlt
pop
push
sbb
fdivs
gs
mov
xor
divb
int
sub
sbb
inc
hlt
xlat
das
xor
push
push
xor
test
out
sub
out
fsubrl
loope
inc
aaa
xchg
xor
out
dec
dec
les
mov
xchg
mov
pop
aaa
cmp
outsl
push
or
mov
clc
adc
mov
mov
pop
stos
das
pop
dec
fwait
rclb
jecxz
roll
call
pop
mov
xchg
push
inc
jno
mov
mov
cltd
or
jg
push
jns
cltd
andl
jecxz
ret
adc
es
andl
es
nop
mov
cmp
int3
insl
sarb
movsb
int3
mov
cmpb
xchg
lcall
jl
lock
push
push
or
rolb
call
cli
ret
lcall
jecxz
repnz
out
sti
aas
pop
pusha
cs
out
pop
push
jns
inc
out
es
xchg
jbe
dec
mov
sub
scas
sbb
fldcw
dec
mov
or
ret
addr16
inc
popf
out
mov
dec
adc
or
aad
aaa
les
les
xchg
mov
in
mov
push
sbb
filds
data16
fists
pop
loop
push
ret
xor
push
repz
cs
and
and
cltd
adc
or
sti
pop
jo
fwait
je
jbe
pop
inc
lds
stc
pop
mov
xor
ja
jb
out
test
inc
xchg
arpl
icebp
mov
in
add
and
mov
sbb
pop
pop
dec
and
adc
ds
xor
xor
jbe
or
adc
jb
out
mov
arpl
sahf
inc
cmpsl
out
mulb
rolb
mov
or
push
xchg
shlb
inc
call
and
out
push
in
subl
dec
or
imul
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
dec
push
mov
sub
push
mov
or
jne
sub
mov
mov
mov
mov
sbb
xor
cmpl
mov
mov
jmp
movl
jl
push
pushl
push
push
call
addl
xor
mov
add
sub
mov
adc
mov
mov
mov
sbb
div
dec
mov
not
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
sbbl
subl
movl
cmpl
movl
je
mov
mov
adc
add
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
subl
shld
movl
shl
ret
addl
mov
xorl
xor
and
shl
ret
xor
xor
ret
nop
addl
mov
add
in
add
xchg
xchg
add
add
addl
add
add
mov
add
add
add
add
add
add
fadds
add
add
add
xchg
add
faddl
add
add
add
mov
add
popa
je
outsl
outsl
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
les
inc
add
add
jbe
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
fsubl
inc
add
daa
inc
add
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
dec
and
add
inc
add
inc
add
daa
inc
add
add
add
jg
add
add
daa
inc
add
inc
add
add
daa
inc
add
lret
push
movsb
scas
or
movsb
pop
es
add
inc
add
daa
inc
add
inc
add
inc
add
inc
add
inc
add
daa
inc
add
inc
out
les
inc
add
es
add
inc
add
loopne
jbe
pop
cmpsb
add
inc
add
rcl
pop
adc
add
add
jno
cvtdq2ps
jbe
cmpsl
mov
xchg
test
es
add
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
inc
and
add
sub
add
add
scas
lcall
das
dec
add
cmp
inc
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
add
add
lods
inc
add
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
xchg
inc
add
add
add
inc
add
fbld
add
add
je
gs
jo
jo
outsl
insb
je
jae
outsl
popa
add
add
add
add
inc
insl
jns
outsl
js
jns
jb
popa
je
jne
gs
jae
gs
add
add
add
add
inc
jne
jp
outsb
add
add
imul
insb
outsl
add
push
popa
arpl
imul
add
outsb
imul
add
add
add
add
insb
insb
gs
add
add
add
gs
data16
jae
outsb
fs
popa
insb
imul
js
imul
add
add
addr16
insl
ja
jns
popa
jns
outsb
popa
bound
insl
outsl
jb
add
add
je
dec
add
add
add
add
addl
add
loopne
add
mov
add
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
gs
popa
ja
jne
outsl
insl
jne
add
jno
jb
bound
dec
popa
addr16
addr16
js
bound
insb
outsl
add
je
jo
outsl
outsl
push
gs
outsl
jae
jne
imul
jae
dec
jne
imul
gs
outsl
jbe
jae
insb
push
gs
push
outsl
data16
popa
jns
gs
jo
outsl
insb
insb
jo
imul
gs
jne
jae
addr16
jo
gs
outsl
ja
add
outsb
je
gs
popa
je
outsl
jo
insb
fs
arpl
dec
outsl
imul
push
imul
add
je
gs
insb
jne
add
imul
insl
jo
outsb
outsl
add
jae
outsb
add
push
add
add
arpl
push
add
add
push
add
js
jns
push
add
jb
arpl
add
outsl
add
dec
add
outsb
add
je
outsl
add
outsl
add
popa
add
add
dec
add
outsb
add
add
outsb
add
popa
add
add
inc
add
jne
jae
je
add
push
add
jb
jns
add
push
add
popa
add
push
add
insb
add
je
imul
add
add
jo
add
jns
je
push
add
outsl
add
push
add
jo
jns
add
bound
outsl
add
inc
add
popa
add
add
jae
add
add
or
add
xor
add
push
adc
xchg
adc
mov
and
adc
add
adc
add
adc
lcall
add
or
add
add
adc
or
pop
adc
out
adc
mov
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
xchg
addl
sahf
addl
cmpsb
addl
scas
addl
mov
inc
add
addl
movb
add
addl
mov
adc
pop
cmp
add
adc
jbe
adc
or
add
sbb
add
sub
add
adc
movsb
inc
adc
jecxz
adc
shlb
push
push
adc
pop
inc
adc
xchg
rcrl
add
je
add
adc
fldcw
add
pop
adc
nop
push
adc
scas
push
adc
hlt
jbe
add
pop
adc
mov
data16
pop
dec
adc
mov
adc
sub
adc
xchg
cmp
add
addl
fiadds
inc
add
addl
out
addl
testb
add
addl
push
addb
addb
addb
addb
and
add
adc
and
inc
adc
ss
adc
leave
jno
add
cmp
add
inc
adc
mov
pop
adc
dec
sub
add
xor
add
adc
jl
adc
xchg
jle
add
data16
push
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
imul
mov
adc
addr16
add
add
cmp
add
adc
jecxz
adc
push
or
add
adc
push
dec
adc
mov
adc
sarl
add
add
adc
test
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
addl
addl
addl
addl
add
je
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
test
add
add
test
add
add
mov
add
lods
test
add
test
add
test
add
test
add
test
add
add
and
add
xchg
add
add
pop
xchg
add
add
jle
add
add
add
lahf
add
addb
add
mov
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
dec
xchg
add
add
push
add
jp
add
addb
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
add
mov
add
add
add
orb
add
mov
add
add
fimuls
add
decb
add
mov
add
add
inc
mov
add
add
add
jp
add
mov
add
lods
mov
add
mov
add
mov
add
mov
add
add
add
add
push
mov
add
mov
add
add
push
mov
add
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
test
add
mov
add
les
add
in
mov
add
mov
add
mov
add
add
mov
insb
imul
je
add
inc
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
jb
popa
insb
imul
arpl
add
je
jb
arpl
imul
xchg
add
gs
je
inc
dec
inc
push
arpl
outsb
add
popl
inc
jb
popa
je
inc
inc
push
add
add
je
imul
je
js
add
add
je
arpl
outsb
add
fadds
push
gs
imul
add
inc
gs
bound
arpl
add
popa
je
inc
outsl
outsb
je
outsb
imul
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
mov
popa
je
dec
inc
push
add
add
popa
jb
inc
outsl
arpl
add
push
gs
imul
addr16
js
add
outsl
dec
push
add
std
add
je
gs
inc
outsl
insb
outsl
jb
add
add
je
push
fs
xor
push
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
dec
inc
imul
xor
fs
insb
add
inc
inc
push
push
xor
cs
insb
add
xchg
inc
gs
insb
addr16
jb
arpl
add
je
outsb
jne
je
insl
push
arpl
add
imul
je
gs
add
add
arpl
insb
addr16
jne
je
outsb
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
add
imul
popa
jae
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
fs
imul
add
je
popa
jb
je
outsl
jae
scas
add
ja
fs
pop
add
gs
je
inc
imul
jb
insl
inc
add
out
inc
jb
insl
gs
arpl
add
je
jo
popa
je
push
arpl
add
je
inc
add
push
imul
outsl
arpl
add
add
imul
push
add
je
outsl
jb
outsb
jo
je
fs
add
hlt
add
jae
push
push
dec
gs
popa
addr16
add
xchg
add
outsb
jae
popa
je
dec
gs
popa
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
outsb
fs
imul
push
add
ja
gs
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
add
cmp
inc
gs
outsb
jne
je
imul
add
outsb
fs
gs
popa
addr16
imul
add
push
jo
popa
dec
jne
gs
arpl
or
inc
imul
jae
push
outsb
imul
outsb
fs
gs
popa
addr16
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
push
gs
outsl
arpl
add
stos
add
fs
imul
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
popa
insb
imul
add
inc
jb
popa
je
inc
imul
jb
insl
push
add
or
inc
gs
inc
inc
js
repz
je
popa
jb
je
outsl
jae
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
ret
jbe
jo
imul
lds
dec
jae
push
jo
popa
push
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
add
push
gs
ja
imul
cmp
arpl
popa
imul
outsb
add
xor
jb
outsl
dec
gs
push
add
jnp
push
push
jb
outsl
jb
add
add
je
arpl
gs
imul
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jae
outsb
arpl
jns
je
je
add
xchg
add
je
outsl
jns
arpl
add
inc
push
xor
cs
insb
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
push
gs
popa
insb
jne
inc
js
add
pop
add
jns
je
gs
jb
jns
gs
popl
push
gs
gs
popa
insb
jne
inc
js
add
das
add
je
data16
outsl
outsl
je
outsl
outsb
imul
je
jae
add
push
gs
insb
outsl
jae
dec
gs
inc
fs
jo
xor
cs
insb
add
arpl
cs
add
bound
push
gs
insb
insb
outsl
arpl
sbb
inc
jb
outsl
jb
outsl
fs
mov
inc
outsl
insl
jo
jb
push
je
imul
add
jae
jb
jo
inc
add
adc
inc
jne
insb
imul
outsb
fs
add
push
gs
push
inc
data16
dec
popa
jae
add
add
fs
imul
add
sub
dec
outsl
arpl
push
imul
push
jns
je
insl
push
imul
insb
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
testl
imul
and
insl
push
gs
jne
arpl
jns
gs
add
lcall
insb
inc
gs
je
insl
dec
popa
insl
gs
add
loop
inc
jb
popa
je
dec
popa
insl
gs
imul
add
je
outsl
arpl
gs
outsb
outsw
inc
add
lar
je
outsl
fs
gs
imul
add
pop
add
popa
insb
push
imul
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
pusha
add
outsb
fs
imul
gs
add
push
add
je
jne
bound
inc
outsl
jb
popa
je
add
dec
inc
push
dec
inc
dec
xor
cs
insb
