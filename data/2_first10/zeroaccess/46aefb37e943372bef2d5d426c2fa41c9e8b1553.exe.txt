push
mov
sub
xorl
push
subl
push
xor
andl
inc
push
sbbl
push
adcl
call
test
movl
je
xor
movl
jmp
push
sbb
mov
push
andl
push
sbbl
call
movl
test
movl
jne
push
adcl
push
call
sbbl
test
jne
xorl
push
adcl
push
push
call
addl
test
movl
je
xor
movl
jmp
sbb
movl
and
mov
mov
sub
mov
mov
sub
movl
sbb
lea
mov
adc
lea
xor
or
and
mov
sbb
mov
mov
mov
sub
sub
mov
mov
mov
movzbl
add
mov
xor
andl
mov
add
mov
movl
mov
cmp
movl
jne
mov
mov
mov
xor
add
addl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
xor
movzbl
sub
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
mov
adcl
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
or
dec
mov
jmp
sub
push
or
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
call
jmp
adcl
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
jmp
mov
xor
mov
movl
movl
andl
mov
mov
xor
or
and
mov
sbbl
xor
andl
xor
subl
add
sbb
mov
xorl
xor
xor
orl
add
lea
notl
mov
movl
cmp
ja
jmp
mov
mov
sub
and
mov
mov
subl
xor
lea
orl
push
subl
mov
andl
xor
xorl
lea
orl
push
orl
mov
andl
pushl
xorl
call
addl
mov
or
mov
neg
xor
sub
lea
mov
xor
mov
xor
addl
xor
adcl
add
mov
xor
lea
movl
mov
movl
cmp
movl
jbe
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
add
mov
orl
mov
sub
negl
xor
movl
mov
mov
movl
mov
movl
cmp
jne
xorl
lea
adcl
mov
xorl
lea
subl
mov
mov
test
movl
je
xorl
mov
mov
mov
adc
mov
not
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
negl
mov
sbb
cltd
adcl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
and
mov
add
inc
adc
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
xor
xor
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
sbb
xor
xor
mov
adc
mov
mov
mov
xor
dec
add
mov
mov
adcl
orl
xor
addl
mov
mov
xor
mov
movl
cmp
jne
movl
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movzbl
sbb
mov
andl
mov
mov
sub
mov
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jb
push
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
push
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
adc
mov
addl
mov
add
adcl
xor
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
addl
push
adcl
push
adcl
push
lea
orl
push
push
subl
call
push
call
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
xor
mov
or
mov
mov
decl
add
andl
mov
xor
xor
adc
mov
test
movl
je
sub
mov
mov
or
mov
andl
mov
imul
orl
mov
add
xchg
mov
orl
sub
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
sbb
mov
xor
or
add
orl
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
sub
mov
mov
xor
xor
add
mov
sbb
mov
mov
xor
adc
add
mov
sub
movl
lea
orl
xor
subl
xor
cmp
movl
je
mov
andl
xor
add
movl
cmp
jne
addl
pushl
call
mov
mov
xor
xor
xor
add
sub
or
mov
add
xor
mov
add
movl
cmp
movl
je
addl
pushl
pushl
negl
call
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
adc
jmp
rcrl
mov
jno
sti
inc
scas
dec
imul
jp
jp
pop
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
fucom
les
je
lahf
xchg
push
mov
loopne
mov
mov
cli
jo
jmp
dec
stos
stos
mov
imul
enter
jp
outsb
ror
sub
sbb
cmpsl
xchg
dec
cltd
pop
rclb
push
cmp
stc
dec
lock
xor
les
pop
int
mov
sub
pop
std
mov
aam
rcll
ret
loop
pop
cmp
push
dec
dec
lods
sbb
das
xor
xor
jg
pushf
in
test
mov
xchg
in
adcb
sub
sub
adc
popf
sbb
subl
mov
or
xchg
pop
mov
sbb
cli
outsl
mov
mov
fistps
adc
in
out
aad
mov
mov
push
sub
inc
inc
insb
adc
add
subb
iret
and
sti
lea
int3
push
jae
jl
adc
dec
and
and
popa
dec
cmc
push
xor
clc
jnp
push
scas
jmp
out
shll
jae
std
push
mov
push
pop
cmp
lea
cld
int3
inc
jne
or
fwait
jg
mov
fiadds
inc
das
std
fwait
clc
cmp
sub
stos
push
adc
imul
dec
adc
bound
jmp
fsubrs
mov
inc
insl
pop
inc
push
inc
cwtl
insb
sti
cmp
push
es
in
jo
sbb
jmp
jns
loopne
ljmp
xor
bsf
jb
cltd
test
icebp
jl
popf
sbb
dec
cltd
sahf
movsl
sub
xchg
inc
out
and
mov
or
iret
test
add
mov
mov
cmp
fstpt
in
icebp
pop
test
mov
in
loop
jmp
mov
mov
mov
aaa
ficompl
pop
in
pop
jle
push
rcl
out
push
adc
adc
push
outsl
out
inc
jp
out
inc
leave
adc
sarb
clc
mov
packsswb
cmp
xchg
sub
jmp
and
jae
out
pop
scas
jl
insb
jmp
sti
dec
xchg
cmpsb
or
les
ret
pop
jb
ficomps
and
sbb
mov
shr
fdivs
sub
and
test
or
int
repnz
mov
lods
mov
clc
outsl
lock
xchg
stos
fdivr
push
mov
add
cmp
mov
mov
inc
fucomi
adc
fcomps
ret
jp
push
out
aad
or
int
gs
shll
xor
xchg
cmc
shl
insb
inc
and
inc
mov
cs
mov
push
test
popa
or
aad
inc
insl
jo
sbbl
xchg
cmc
sbb
adc
lahf
sub
cmp
out
cmpsl
push
adc
fucomip
jl
lea
outsl
in
scas
nopl
outsl
jbe
fcompl
xchg
sub
mov
mov
dec
jmp
push
inc
enter
and
mov
or
sub
inc
xor
cmp
xchg
mov
xorb
ljmp
jbe
xchg
into
mov
adc
lods
movsb
push
mov
and
out
push
jbe
pop
cmp
in
das
mov
rol
xchg
or
or
cli
mov
inc
cld
or
xlat
adc
lret
or
add
xchg
or
mov
push
mov
push
mov
add
pop
inc
movsb
mov
inc
pop
cmpsl
mov
pop
mov
pushf
daa
lods
and
mov
or
das
jg
push
clc
fists
fistl
mov
fsubs
push
sbb
xor
and
jne
jb
jne
loopne
xchg
push
lods
into
pop
inc
jp
loop
xchg
xchg
fs
or
xchg
shl
xchg
cmc
add
test
mov
movsb
fildl
ja
lret
mov
push
std
dec
dec
mov
lcall
cltd
out
adc
xchg
or
jge
mov
and
sbb
cld
xchg
pop
jecxz
iret
mov
jecxz
lret
in
mov
clc
dec
xchg
xor
loopne
cltd
out
push
dec
jne
pop
hlt
adc
and
add
add
popa
gs
mov
adcl
in
das
push
dec
insl
mov
fnstsw
lcall
inc
imul
das
int3
pop
xchg
cmp
aad
pop
mov
xchg
sbb
or
ficoml
jge
cmp
push
pop
js
fstl
jns
sahf
dec
add
andb
cmp
stos
jp
hlt
xor
dec
mov
xchg
out
ret
sub
push
out
jns
lods
sahf
daa
aas
add
addr16
pop
call
cmpb
outsb
pop
sbb
jl
push
aas
sbb
jns
lcall
mov
dec
push
cld
insb
pop
sub
pop
push
leave
in
jae
jp
sub
xchg
dec
imul
xor
inc
leave
je
sbb
push
mov
inc
cmp
push
mov
mov
xchg
lods
imul
sti
in
movsb
jp
js
std
shrb
push
stos
negl
dec
cwtl
pop
outsl
mov
xorl
inc
in
stc
stos
pop
dec
jne
clc
jnp
pop
sbb
cli
jecxz
daa
dec
stc
add
jbe
in
jo
pop
enter
inc
stos
popa
lcall
mov
jecxz
fmulp
ret
and
ficoms
inc
andb
frstor
push
push
jg
je
and
sbb
nop
cmpsb
mov
cmpsb
mov
daa
ljmp
xchg
imul
mov
ljmp
icebp
add
outsb
xor
pop
fxch
mov
and
and
call
movsb
iret
sbb
fcomp
loopne
mov
clc
rcll
dec
stc
sarl
inc
mov
fsts
and
mov
ss
iret
add
inc
hlt
cmp
rcl
jne
push
shl
and
mov
das
mov
sub
pop
jg
push
sbb
mov
js
jo
pop
fcmovnb
loope
loope
and
cmp
call
pop
aaa
movsb
clc
jnp
xchg
and
cmp
sbbl
stos
dec
arpl
fcmovu
push
sub
dec
lret
xorb
add
je
mov
outsl
pop
sbb
cmp
shrl
push
or
mov
push
aaa
push
ret
imul
shrb
mov
icebp
out
cmpsb
add
sub
cs
test
stc
adc
out
adc
fdivp
loop
inc
fmuls
pushf
bound
add
jle
mov
push
push
call
movsl
mov
mov
lcall
cli
mov
clc
dec
cmp
pop
xchg
in
fwait
cmp
popf
int
push
mov
popa
loopne
add
loop
mov
add
aaa
dec
add
mov
adc
mov
xor
push
mov
mov
into
and
sbb
mov
push
insb
sarb
xchg
or
xor
add
mov
hlt
xchg
test
jbe
add
filds
iret
and
cmp
daa
cmp
ret
mov
xor
pop
in
push
mov
pop
lcall
pop
xchg
ja
or
jno
cmp
sbb
sahf
xor
sahf
mov
js
icebp
sbb
cmp
sub
inc
bound
enter
test
push
fiadds
sbb
cmpsb
shl
and
mov
inc
jb
int
sahf
xchg
dec
xchg
lret
xorl
loop
adc
lods
test
out
pushf
push
and
or
lcall
iret
gs
push
xchg
mov
out
int3
movsl
push
cltd
xchg
rolb
mov
rcrb
xor
ja
enter
imul
lcall
sbb
xor
add
or
insb
addr16
and
inc
or
cs
mov
addb
shlb
pop
cmp
into
add
in
push
pop
test
fcomps
scas
and
sub
movsb
add
fsts
rcl
mov
add
jb
fwait
adcb
dec
jge
divb
rcll
sbb
push
cmpl
aad
sbb
and
xchg
les
shl
jae
cmp
mov
mov
push
or
int
adc
scas
jecxz
test
cltd
xchg
or
sub
ja
push
pop
mov
xchg
adc
fists
mov
pop
dec
adc
add
enter
push
jno
mov
dec
cld
dec
je
jg
fnstsw
js
in
lahf
sub
shll
ss
pop
or
fisubs
push
push
xchg
pop
es
int
outsl
mov
mov
shrb
aas
push
mov
insl
inc
mov
jmp
gs
fs
inc
mov
sti
mov
cld
dec
btr
cmpsb
dec
mov
pop
faddl
orl
pop
testb
mov
jle
xchg
cmpsb
mov
rcr
mov
pop
ja
sbb
shll
mov
push
sub
add
inc
mov
adc
sub
shll
out
fnstsw
inc
and
pop
dec
lcall
push
cmp
mov
sbb
out
lcall
xor
jae
ss
xor
mov
aam
and
in
jno
jbe
fs
inc
nop
cld
mov
fxch
lret
push
add
sbb
nop
sbb
popa
sub
and
ljmp
xchg
lock
leave
rcrl
or
xchg
adc
in
pusha
cltd
pop
mov
xor
jcxz
insl
daa
xor
test
xorl
push
mov
scas
pop
push
dec
iret
pop
pusha
fisttpll
pop
adc
xchg
mov
stos
lea
dec
iret
pop
xor
mov
jmp
add
dec
jle
icebp
mov
push
dec
flds
mov
test
stos
mov
and
cmp
cli
dec
mov
lds
xor
mov
es
push
loopne
rorb
jp
jb
rorb
ss
mov
movsl
xchg
imul
xchg
hlt
fbld
cmp
xchg
enter
add
xor
mov
idivl
leave
xchg
aam
and
push
dec
xchg
mov
xor
xor
jecxz
stc
sbb
pop
daa
push
pop
bound
push
xchg
cmpsl
adc
jmp
pop
add
incb
push
fimull
xor
ss
int3
push
mov
mov
cmp
push
mov
adc
mov
in
sbb
outsb
pop
test
push
and
insb
cmpsl
push
imul
ds
xchg
sbb
pop
adc
inc
push
xor
daa
push
aaa
sub
incl
adc
jnp
shr
jge
xor
inc
mov
rcr
jo
mov
mov
mov
rclb
test
add
dec
and
pop
adc
ds
jb
sbb
pop
add
inc
adc
das
out
sub
int3
inc
lock
sbb
xor
pop
push
add
popa
xchg
lods
dec
pop
popa
pop
mov
push
mov
mov
inc
scas
cli
mov
das
sti
push
adc
fisttpll
jecxz
movsl
inc
out
leave
mov
sti
and
pushf
out
int3
movsb
stos
enter
imul
jg
jl
hlt
lret
dec
jmp
jo
aam
cwtl
in
and
push
push
orl
shrl
iret
aad
push
lret
bound
inc
stos
pop
add
dec
cltd
je
and
loope
into
and
stos
rcrl
cld
push
mov
stc
stos
adc
and
mov
mov
add
ljmp
sub
jno
pop
test
fwait
inc
mov
lds
pop
repz
mov
loopne
sub
add
in
xchg
xor
push
adc
hlt
fcom
cmp
data16
aaa
lea
rcrb
mov
pop
imul
arpl
aaa
bnd
push
movsl
ljmp
insl
lods
jno
fwait
lds
cmpsb
mov
mov
lahf
cmp
fldl
push
fsubrs
or
push
dec
dec
adc
sbb
jae
stos
cmpsb
call
sub
dec
mov
bnd
mov
test
mov
pop
pop
les
ljmp
mov
cmp
mov
in
insl
push
cli
mov
mov
mov
xor
xlat
inc
sub
and
stc
lahf
add
or
shll
sub
sbb
popf
mov
and
pop
or
shl
mov
xor
mov
inc
mull
sbb
fsubl
mov
dec
arpl
repz
dec
data16
mov
pop
jae
xchg
xchg
sub
pushf
loop
mov
push
jge
into
sbb
mov
and
hlt
push
es
sub
decl
push
cs
xchg
mov
push
push
mov
mov
daa
mov
inc
test
into
sti
or
into
add
mov
and
mov
jecxz
imul
mov
adc
cli
imul
cmp
xor
inc
or
pop
adc
xchg
sti
shl
pop
repz
stos
test
mov
stos
sub
stos
or
cli
lods
rclb
lock
imul
sbb
movsb
dec
daa
fistps
mov
lea
dec
xchg
inc
les
inc
stos
rcl
aad
repnz
dec
xchg
pop
mov
mov
jge
imul
lcall
cwtl
and
out
push
cmp
imul
stc
inc
xchg
outsl
cmpsb
cmp
sbb
ror
fldlg2
movsb
cmp
sub
jl
mov
mov
dec
sub
add
jae
sar
jmp
mov
pop
pand
jnp
mov
pop
add
mov
lret
adc
test
lods
push
push
mov
cmp
mov
fcomi
sahf
es
sti
inc
xchg
outsl
cmp
mov
int
roll
lock
cmp
xchg
and
imul
iret
es
and
push
xchg
jg
test
test
push
negb
std
jb
mov
in
xor
scas
sbb
inc
adc
out
movb
xorb
repz
pop
test
adc
stos
test
mov
xchg
ret
gs
sub
data16
test
scas
sub
lods
roll
sub
in
mov
xor
or
cs
movsl
inc
mov
jne
outsb
adc
cmpsb
imul
push
nop
movsb
push
movsb
mov
and
imul
inc
adc
aad
mov
gs
lea
push
arpl
xchg
in
popa
daa
sti
pop
ss
fistpll
aaa
mov
mov
sti
xor
pop
sbb
testl
mov
das
out
mov
and
inc
cmp
imul
push
pop
cmp
xchg
inc
inc
mov
loop
shr
into
je
add
gs
push
or
mov
rol
cmp
pop
data16
pushf
sbb
ja
pop
clc
test
pop
inc
or
or
ja
repz
int3
and
push
pop
pop
bound
xchg
ret
outsb
mov
inc
and
xor
test
mov
popa
pop
xor
xchg
and
dec
push
sub
cli
bound
dec
cmp
or
les
jmp
clc
dec
sbb
out
adc
outsb
cwtl
add
push
sbbb
xor
testl
mov
jp
rorl
adcb
xchg
push
lods
pop
mov
mov
clc
xor
pop
iret
push
es
lods
ja
dec
aaa
test
jecxz
xorb
cmp
in
out
xchg
pusha
xchg
jno
lds
mull
in
into
mov
or
pushf
xor
repz
and
in
xchg
imul
cmp
repz
aas
push
ja
sti
fistpl
data16
daa
xor
sub
jnp
pop
pop
adc
imul
mov
je
adcl
xor
mov
adc
les
jle
dec
adc
xor
sub
fistpll
pushf
movsb
movsb
popf
jl
and
aas
lcall
test
pushf
xlat
test
jns
push
inc
out
cmp
loopne
mov
cmp
push
mov
jg
add
mov
loopne
mov
mov
mov
adc
fisttpl
sub
addr16
mov
ja
testl
mov
stc
cmp
xlat
pop
adc
in
outsb
mov
aaa
enter
push
push
jle
std
pop
pop
fcmovnbe
aaa
sbb
pop
adc
jns
adc
jo
dec
push
xor
call
jb
lock
jb
test
out
xchg
and
mov
lret
push
ret
add
sti
loope
repz
je
add
int3
sub
daa
fisttps
push
inc
and
mov
or
mov
es
data16
aad
push
adc
aad
pop
push
xlat
vcvtsd2si
xor
pop
clc
adc
pop
stc
bound
jb
flds
rcll
sub
xchg
mov
mov
mov
loopne
xchg
cmp
dec
cmp
icebp
dec
loopne
ret
and
add
aad
and
and
push
push
xor
dec
jecxz
inc
or
push
or
sub
and
cmpsl
or
mov
inc
out
fisttps
xor
icebp
cld
mov
push
cli
fs
ret
mov
icebp
insl
pop
das
pushf
jb
push
jno
xchg
stos
in
xchg
jb
dec
mov
mov
gs
inc
sbb
sub
dec
movsb
add
gs
sub
lret
aam
jg
jnp
mov
ficompl
sub
int
cmp
pop
xorb
bound
push
shll
pop
int
and
push
insl
sub
mov
es
mov
jecxz
cmpsb
mov
fdivl
push
loopne
ljmp
jle
add
cmpsb
cmpsl
add
shrb
inc
das
out
cmp
sub
fcmovnbe
jbe
ds
pop
mov
iret
mov
lahf
fisttps
mov
ret
push
test
out
push
inc
add
jg
sub
mov
inc
int3
or
sub
cmpl
inc
dec
jp
or
and
push
imul
push
sbb
mov
mov
cmp
adc
sbb
jb
cmc
and
mov
sub
or
or
sarb
jne
jecxz
sbb
sub
cmpsb
adc
or
pop
xchg
stos
ret
cmp
inc
insl
pop
adc
mov
mov
sbb
pusha
dec
jne
pop
lods
cmpsl
mov
insb
mov
jg
inc
xor
mov
stos
xchg
xorl
aas
jno
movl
mov
ret
ljmp
jnp
and
lret
mov
cmpsb
and
dec
repz
imul
dec
sbb
cld
repnz
or
in
xchg
enter
out
jl
inc
icebp
testl
sub
arpl
cli
inc
gs
mov
mov
push
sbb
push
dec
lret
cmp
lds
add
movsb
clc
ret
std
loop
fucom
cs
std
pop
jp
mov
test
cmp
adc
dec
mov
xlat
out
lret
dec
stos
adc
mov
pop
stos
xchg
leave
jg
fsqrt
rcll
mov
pop
sahf
ret
adc
call
sub
andl
sub
aas
mov
pop
mov
push
sbb
test
cmp
mov
lea
loop
sub
bound
adc
or
cmp
roll
pushf
add
outsl
hlt
ret
test
andb
jae
pop
inc
call
je
push
jmp
imul
sub
ret
ja
and
inc
arpl
mov
ja
aas
lahf
cmp
rcrb
aaa
add
in
mov
add
push
mov
jb
loopne
int
push
mov
arpl
jle
jl
aad
fiadds
adc
xor
mov
lret
mov
and
imul
fcmovnu
ret
inc
in
nop
mov
push
xchg
xor
or
aaa
inc
adc
into
jg
push
movsb
dec
test
mov
adcl
fmuls
in
mov
aas
out
lods
jb
test
inc
xor
mov
mov
cld
loopne
daa
add
iret
out
adcl
jge
arpl
or
pop
mov
jge
add
test
jno
or
scas
int3
mov
pop
sub
cmp
mov
fidivrs
into
aaa
xchg
sub
mov
cmpsb
jmp
add
nop
leave
push
and
les
xchg
jne
and
jno
insb
mov
ljmp
fstpt
out
stos
sbb
push
adc
mov
ret
mov
sbb
sub
dec
fbld
cld
sbb
ds
outsb
xor
sbb
lock
rorl
mov
fstpt
clc
xchg
lret
jecxz
xchg
jmp
mov
sti
push
mul
mov
and
mov
test
mov
or
mov
in
sbb
jns
fldz
lret
je
adc
cld
inc
xchg
lods
pop
mov
pop
jl
fs
rorl
mov
add
push
divl
je
jnp
pop
popf
aad
mov
cld
lea
jp
mov
sbb
pop
test
pop
fcmovbe
mov
cmpsl
jae
out
fwait
jl
fs
pop
or
je
pop
iret
cmp
lret
stos
loop
push
adc
int3
int3
sbb
int3
add
int
jmp
sub
rorb
sarl
xchg
adc
fs
mov
fisttps
push
sbb
jno
loope
call
xchg
sarb
sahf
or
dec
nop
subb
loop
jbe
or
xlat
insl
and
orb
stc
jb
jno
sub
lahf
outsl
movsb
push
lods
sbb
sbb
fidivl
scas
movsl
sub
add
out
ja
adc
fmuls
mov
cmp
invd
sbb
out
loop
jl
cli
xor
sub
add
adc
dec
ds
add
jle
mov
test
cmp
jnp
popa
xlat
call
vaddps
push
das
mov
enter
inc
sbb
mov
movsl
cmc
hlt
iret
lods
cmp
pop
jle
movsb
add
mov
repnz
loopne
jno
in
inc
test
lret
pop
leave
sahf
push
add
sbb
inc
leave
lods
out
xchg
or
xor
adc
add
aaa
inc
dec
icebp
push
pusha
mov
xor
fisttpl
mov
xchg
mov
out
jecxz
pop
jbe
dec
pop
add
fs
sbb
pop
cltd
push
and
lods
int
xor
jb
loop
pop
dec
lcall
cmpsb
or
jmp
pushf
ret
popa
out
cld
ds
das
movsb
pop
xchg
mov
xchg
and
pop
div
lcall
daa
inc
in
xchg
icebp
mov
lds
xor
mov
test
mov
push
in
mov
add
mov
fwait
jne
enter
dec
mov
cmpsl
pusha
jge
bound
adc
enter
in
xorl
cmp
adc
adc
dec
and
test
jle
xchg
imul
ss
adc
nop
push
mov
add
in
fldt
push
lea
xchg
push
lahf
ja
cmp
js
repnz
and
out
stos
lret
cli
or
xchg
arpl
rol
std
adc
test
stos
ds
stc
ja
test
movsb
mov
pop
cltd
mov
fwait
jb
adc
out
movsl
cwtl
push
lret
xchg
add
sub
xchg
jle
cmp
dec
adc
pop
pop
test
sbb
dec
lods
or
in
mov
in
add
inc
subb
add
cmp
xchg
inc
push
das
ret
sti
in
das
out
pusha
xchg
adc
push
jmp
pop
push
jo
shrl
lock
roll
add
lods
popa
in
xchg
or
inc
iret
lods
cmp
jbe
popf
and
xor
sub
jbe
fcoms
sbb
lods
lcall
fwait
jne
das
dec
pop
pushf
hlt
pop
cmp
mov
ret
mov
or
pushw
imul
subl
jg
mov
push
mov
imul
cmpb
outsl
sub
fsubl
jle
push
popf
mov
iret
sbb
mov
out
aam
sti
shll
cmp
or
data16
mov
push
inc
loopne
rcrl
push
mov
sub
icebp
mov
test
imul
imul
sub
push
mov
push
outsl
pop
sub
cltd
aam
lods
repz
xor
xlat
mov
pop
in
xchg
lds
ficoms
call
mov
sbb
cld
insl
cs
jmp
fsubp
pop
sub
xchg
data16
iret
mov
add
push
mov
ror
fisttpl
and
mov
and
sar
mov
ffreep
hlt
outsl
fisubs
cltd
inc
imul
inc
xchg
xor
fcompl
jle
js
dec
add
inc
xor
and
cmp
cmc
xchg
inc
cwtl
push
cs
shll
xchg
cmp
in
movsb
or
lods
test
jl
cmp
dec
imul
mov
mov
cmc
or
mov
mov
fisttps
jmp
scas
inc
enter
scas
mov
cli
mov
mov
jo
dec
pop
mov
call
test
dec
mov
mov
sarb
sub
inc
je
pop
push
jecxz
scas
loope
pop
out
or
xor
cmp
es
test
leave
cmpsb
sbbb
fcmovnbe
test
fisubrl
inc
aad
push
incl
add
es
sbb
sbb
mov
fsubrl
gs
xchg
push
xor
fldt
in
shrb
dec
add
std
lea
int
sbb
pop
xchg
mov
in
xchg
aam
inc
lret
jp
gs
add
fucom
aad
push
sub
pop
fstpt
loope
inc
pop
xor
xor
cli
in
pop
into
dec
xor
mov
std
mov
xchg
jo
lret
rclb
dec
push
mov
cmp
outsb
pop
adc
xchg
imul
xchg
adc
nop
adc
cli
xor
or
out
mov
int
dec
push
adc
mov
push
push
push
fists
xchg
stos
sarb
out
and
enter
insb
and
add
inc
and
call
inc
adc
mov
lret
cmp
or
leave
push
and
bound
es
ret
jno
fbstp
adc
xor
cwtl
aas
in
pop
loop
pandn
cmp
cmp
push
loop
mov
rorb
fiadds
lods
nop
xor
repnz
outsl
push
add
roll
int3
jne
push
xchg
popa
pop
aaa
pop
dec
inc
outsb
mov
push
push
ss
pop
cmp
repz
cs
imul
cmp
pop
into
lret
scas
test
adc
adc
repnz
cmp
xchg
jle
hlt
scas
mov
gs
lret
push
pop
stc
inc
cmp
mov
mov
xor
pop
xor
data16
cmp
xor
mov
dec
mov
adc
sbb
pop
mov
adc
add
aas
cmpsl
or
mov
cmc
xor
xor
cli
rorl
ds
cmpl
ret
dec
add
testb
jns
cmc
pop
loopne
add
jecxz
cld
and
pop
subl
mov
xchg
loop,pt
lcall
fwait
subl
xor
pop
xor
rcrb
sbb
in
fildl
int
cmpsb
and
or
in
fwait
cmp
add
adc
push
or
dec
iret
pusha
in
fidivrs
sbb
lock
xor
imul
jno
lods
int
pop
jno
add
push
mov
xchg
lds
stos
mov
adc
cltd
xor
jge
or
leave
mov
cmc
lds
loopne
xchg
inc
xlat
and
mov
mov
stc
int3
std
ljmp
out
and
ret
ljmp
hlt
jns
push
pop
mov
jbe
in
xor
adc
mov
adc
cli
dec
mov
inc
mov
int
or
or
and
pop
push
xor
inc
xor
adc
arpl
jl
fsubrl
jp
dec
gs
pop
cmp
xchg
mov
push
mov
dec
adc
add
jae
jbe
pop
xchg
pusha
cmp
stos
outsl
and
inc
int
jne
and
inc
lret
mov
dec
cwtl
xchg
pusha
das
xor
adc
push
icebp
add
addb
jno
inc
xchg
dec
fsubs
rep
push
pop
nop
mov
dec
cmovno
lods
fildll
test
movsl
fidivl
inc
mov
push
cmp
xchg
push
shrd
adc
jno
loope
cmp
arpl
or
xorb
adc
lahf
or
and
aad
mov
mov
dec
lret
sbb
xchg
adc
jmp
xchg
mov
imul
ds
xchg
jbe
add
adc
adc
fbld
pmovmskb
aam
or
sbb
dec
jp
les
or
xor
xchg
cli
jnp
lcall
sub
out
lret
add
mov
cli
push
dec
xor
sub
lds
fildl
sahf
leave
fwait
and
enter
or
jl
mov
xor
test
cmp
mov
mov
push
or
xchg
lock
movsb
clc
mov
mov
mov
mov
cld
dec
inc
mov
fnsave
aas
out
push
push
add
imul
sbb
xlat
ret
mov
popa
fsts
popa
lcall
jp
mov
aas
inc
cmp
arpl
cs
mov
cmp
std
jl
gs
inc
outsb
jnp
jmp
jo
and
imul
ss
fdivrl
into
push
sarl
out
lahf
mov
loop
inc
sub
jmp
repnz
lods
add
fstl
xor
mov
aas
sbb
adc
xchg
into
push
push
mov
bound
sub
mov
lcall
push
mov
rcrb
sub
adc
xor
pop
call
scas
lcall
loope
jae
test
adc
xor
lds
push
sbb
cld
and
mov
xor
add
cmp
je
mov
sbb
mov
mov
mov
decl
mov
mov
xor
mov
mov
add
mov
or
mov
mov
xorl
add
xor
add
xor
mov
mov
mov
xorl
add
mov
mov
movl
mov
movl
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
xor
mov
addl
add
mov
movzbl
or
mov
mov
adcl
xor
add
cmp
movl
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
lock
inc
push
mov
mov
fs
push
js
pop
or
jp
pop
jp
dec
nop
imul
cmovl
int3
jmp
or
sbb
dec
inc
add
cmpsb
dec
test
mov
popa
mov
into
mov
divb
inc
aas
frstor
dec
addr16
nop
xor
mov
jg
in
outsb
mov
ja
imul
aas
xchg
xchg
add
inc
jb
fmuls
mov
pushw
addr16
push
mov
adc
push
and
add
in
and
adc
mov
jno
jp
jp
in
add
mov
sbb
testl
lea
mov
ds
je
popw
sbb
ret
dec
imul
mov
icebp
jmp
push
cmpl
sub
push
cmp
mov
pop
test
mov
pusha
enter
mov
cmp
sub
shlb
pushf
jmp
int
test
jne
test
or
jnp
int3
mov
cmp
sbb
xchg
outsl
mov
leave
das
cs
pop
aam
clc
push
mov
lret
in
loopne
push
cs
jbe
cmp
lret
inc
leave
inc
popf
add
mov
stc
ficoml
add
lods
adc
inc
jp
xor
mov
in
gs
rorb
cmp
mov
outsb
icebp
pop
popf
outsb
mov
mov
push
push
and
adcl
out
fimull
andb
js
sar
out
inc
sbb
mov
pushf
hlt
push
adc
cltd
mov
xchg
sbb
int
cmp
stos
jne
sbb
rcr
or
sbb
inc
mov
mov
add
sub
call
dec
push
clc
cli
mov
pop
lret
outsl
adc
xor
push
lcall
push
pop
xorl
rcrl
fisubrl
fs
fmulp
sub
stc
push
or
adc
xchg
jecxz
add
mov
shl
inc
out
push
imul
jp
inc
mov
mov
scas
cmpsb
jle
mov
jg
mov
fsubrs
push
mov
adc
das
in
ror
mov
dec
imul
lahf
in
add
inc
xor
mov
out
mov
and
mov
hlt
jl
mov
out
testb
ret
jg
mov
pop
mov
sub
mov
dec
mov
jns
push
pop
jmp
jecxz
dec
fs
sbbl
adc
testb
jmp
notb
rclb
cmp
or
movsb
addr16
sub
pop
sbb
sbb
cli
ret
icebp
mov
ja
xchg
stc
add
pop
jno
add
ja
sarl
push
mov
out
movsl
or
xor
nop
xchg
cmp
stc
inc
incb
addr16
jnp
add
je
xchg
inc
cmpsb
aam
push
xorps
imul
adc
or
sub
loop
out
or
hlt
mov
pop
pop
sbb
xchg
cltd
hlt
dec
dec
aaa
mov
insl
mov
pop
push
mov
into
adc
fwait
sbbl
inc
mov
mov
lds
xor
fidivrl
fdiv
clc
jg
mov
adc
mov
pop
call
jne
stos
in
fucomip
adcb
fnsave
inc
pushf
sub
adc
mov
pop
jo
ja
leave
ret
cltd
inc
imul
or
data16
xchg
aas
leave
lcall
pop
xor
push
pop
xchg
fsubl
push
sub
mov
mov
cs
bound
repnz
push
xchg
out
lock
mov
mov
dec
xchg
mov
cmp
leave
add
or
sub
leave
and
out
sbb
push
sub
movsb
fwait
adc
xor
pop
sub
test
jl
jle
mov
aas
stos
gs
xor
aas
ja
mov
rolb
xchg
jg
inc
jb
cmp
arpl
push
pop
add
and
sahf
int3
mov
or
mov
adc
mov
pop
popa
lods
idivb
pushf
addl
movsl
push
xor
or
dec
sbb
testl
lods
xchg
jne
test
lret
inc
sub
push
pop
mov
mov
jbe
hlt
icebp
or
jg
movsb
push
push
sbb
std
movsb
outsb
push
mov
jecxz
mov
hlt
add
stc
filds
ja
in
mov
xor
out
xor
repnz
outsb
ret
pop
leave
sbb
sbb
add
pop
pop
xchg
adc
lret
scas
mov
enter
mov
push
xor
incl
mov
js
fxch
clc
and
lods
loope
jle
mov
xor
xor
or
cwtl
mov
adc
xor
pop
in
clc
sub
aad
dec
pop
add
aas
pop
sub
imul
mov
int3
push
rorb
and
or
out
sbb
in
js
stos
xor
int3
ljmp
rorb
push
dec
jle
pop
pop
jae
pop
jl
xchg
push
cmp
push
mov
nop
mov
shll
hlt
inc
mov
shrl
sbb
mov
lret
xchg
add
adc
mov
imul
repnz
xor
xor
mov
sbb
jbe
push
popaw
fiaddl
mov
sub
push
loop
cmp
loop
mov
sub
out
sbbb
adc
pop
xchg
or
loop
popa
dec
iret
jns
in
adc
gs
cmpsb
les
add
icebp
das
cwtl
enter
in
fs
loop
pop
int
xchg
cmp
idivl
jge
in
and
sarl
push
leave
std
inc
addl
xchg
js
sub
or
push
pushf
outsb
adc
add
icebp
pushl
push
loopne
mov
mov
mov
aas
mov
jle
xor
mov
ljmp
xchg
iret
aas
rcll
pop
lret
pop
jnp
sub
mov
cli
shll
jae
jno
out
jl
adc
mov
mov
lcall
ss
icebp
clc
cwtl
pop
adc
das
imul
add
inc
test
xchg
rcrb
add
dec
ljmp
stos
fimuls
imul
adc
add
mov
xor
push
dec
les
inc
xchg
cmpl
mov
fistpll
pop
scas
shll
jae
mov
mov
push
icebp
jnp
repz
bound
mov
push
imul
xchg
imul
jno
lods
inc
test
cmp
adc
mov
fsubrp
mov
nop
into
inc
mov
dec
fidivrl
ds
xor
cs
pop
jmp
adc
pop
sub
mov
pop
arpl
ss
pop
xchg
xor
xorb
ds
add
repnz
xchg
popa
out
into
push
arpl
xor
je
dec
mov
mov
ljmp
daa
jbe
sub
mov
enter
leave
fldenv
lret
push
fld
mov
lds
mov
jp
andl
sbb
arpl
rcrl
fisubrl
push
out
adc
xchg
cld
dec
add
cwtl
push
push
jmp
js
and
dec
mov
sub
stc
data16
dec
sahf
sub
push
add
ja
aaa
outsb
mov
mov
inc
push
leave
lahf
xchg
popa
push
insl
inc
pusha
jle
test
sub
movsb
pop
loopne
dec
pop
mov
je
mov
nop
loope
fmuls
aas
xchg
mov
jne
in
push
add
inc
push
es
pushf
out
cmp
cmpsl
clc
lods
jl
jp
shl
add
jmp
mov
xchg
lds
and
push
push
mov
jecxz
inc
and
pop
adc
cmp
or
adcb
rol
dec
xor
xchg
sub
flds
pop
sub
imul
mov
cld
sub
adc
aad
cli
icebp
push
lock
bnd
adc
lret
jmp
lahf
cmpsb
mov
bound
repz
fchs
repz
and
jmp
jno
cmpsl
mov
jp
outsb
into
jl
test
or
in
cmpsl
mov
mov
add
addr16
push
inc
xor
imul
das
lcall
push
std
imul
fsubrl
sub
xchg
into
in
fstl
pop
adc
or
scas
pop
or
add
or
imul
jl
and
loope
shll
clc
sbb
jmp
lea
cmpsl
rclb
jp
jno
xchg
cltd
outsl
stos
or
pop
sub
inc
orl
dec
aad
and
js
mov
int3
xchg
add
ret
xchg
sahf
mov
xchg
inc
aas
pop
sub
pop
jbe
sbb
testb
mov
push
push
cmp
scas
sbb
mov
xchg
fs
push
mov
or
jns
jb
push
loope
xchg
in
mov
mov
sub
ja
jo
sbb
mov
or
pop
nop
xor
insl
xchg
sub
mov
and
mov
mov
xor
lds
cmpsl
loopne
popf
sub
add
mov
xchg
sbb
mov
pusha
push
pop
or
lock
call
bound
add
fdivrl
and
xor
and
or
cmc
cmp
inc
rcrb
jmp
insb
scas
xor
sub
jmp
pop
hlt
out
xchg
fdivrs
push
ret
inc
push
inc
test
mov
jnp
cmp
jne
inc
in
fistl
dec
inc
and
add
xlat
addr16
mov
jge
stos
outsl
mov
pop
cmc
mov
adcb
cmpsb
pop
sahf
and
in
xor
leave
outsl
mov
jbe
xor
xor
mov
mov
dec
shrl
pushf
push
push
push
out
aas
push
lahf
in
jp
dec
adc
or
scas
xor
ljmp
add
mov
jo
gs
into
xchg
enter
mov
mov
push
mov
test
imul
mov
xchg
mov
mov
jae
dec
jp
pop
and
xlat
js
movhps
xchg
sub
dec
mov
and
dec
je
push
sahf
stos
push
cmp
insl
push
mov
out
fcoms
aam
clc
mull
es
arpl
mov
mov
dec
add
and
lret
int3
mov
sub
cld
adc
in
mov
test
test
cmp
mov
pop
imulb
subl
fmuls
push
cmpsb
adc
int
xchg
cmp
mov
pop
and
aam
leave
stc
fisttpll
lock
xor
movsb
mov
lret
leave
pop
sbb
daa
stos
push
inc
xchg
xor
pop
popa
scas
jae
push
mov
lcall
jo
add
inc
in
mov
mov
adc
outsl
jp,pt
or
and
stos
aad
or
sub
mov
sbbl
mov
ret
scas
pop
pop
icebp
fstpt
in
gs
mov
fistps
jno
in
and
mov
cmp
push
xchg
sbb
insl
rcr
pop
lahf
jbe
mov
loop
ds
and
sbb
sbb
scas
xor
sub
lock
push
enter
popf
int
mov
push
push
outsb
xor
repz
jmp
mov
ljmp
mov
sbb
sarl
push
test
sbb
sub
test
inc
pushf
push
hlt
int3
jne
mov
mov
lea
gs
hlt
mov
mov
and
test
movsb
jp
push
xor
shll
mov
repnz
sbb
scas
das
decb
push
lock
js
push
bound
fwait
dec
jle
and
sarb
loope
fadd
sbb
add
jl
orl
test
mov
es
mov
push
jae
movsb
ja
push
leave
ja
hlt
mov
cmp
nop
add
jno
mov
sbb
mov
aas
add
test
in
dec
mov
add
xor
std
je
cmpsl
and
adc
mov
push
jg
xchg
movsl
rol
or
testl
xchg
fprem1
and
xor
and
loope
cltd
dec
sbb
sarl
add
dec
pop
pop
mov
inc
add
cmp
popa
outsb
or
inc
jge
and
test
and
or
pop
push
in
dec
ljmp
push
jo
or
push
ljmp
sub
rcrb
fucomi
jecxz
movsl
int3
mov
or
mov
cmp
pop
jge
rcrb
xchg
imul
jne
fs
xchg
pop
ljmp
pop
rcll
xor
test
pop
mov
je
idivb
sub
leave
xchg
fs
cmpsl
out
mov
movsl
jno
fiadds
lds
roll
inc
sbb
sub
mov
lods
ret
pop
cmp
out
lds
jno
push
vcvtsd2ss
dec
aas
jne
jmp
cmpsb
fists
adc
lea
jl
dec
addl
ss
add
jp
mov
push
push
cli
inc
lds
pop
xor
pushl
cmp
call
loopne
xor
xor
imull
testb
int
jne
addr16
test
ret
add
mov
mov
mov
fisubl
cmc
fs
xchg
adc
std
pop
outsl
jmp
adc
movsb
es
mov
sbb
nop
pop
movsl
sti
in
mov
rcrl
sbb
test
mulb
shlb
sub
push
jns
out
fcoms
stos
not
mov
test
push
pop
pop
inc
push
adc
outsb
popf
int
jb
in
mov
fucomi
mov
divb
xlat
push
es
dec
cmp
sub
jnp
int
mov
popf
mov
popa
jbe
pusha
enter
test
int
int3
aas
lret
mov
push
pop
xor
jno
leave
lahf
adc
and
or
cmp
mov
scas
lods
subb
mov
pop
xchg
hlt
int
mov
std
mov
orl
pop
int
or
jmp
frstor
cmp
xor
push
aas
push
subb
push
cmpsb
mov
dec
pop
or
push
ds
loopne
mov
cmp
pop
out
loopne
in
cmp
xchg
scas
fisubrl
clc
push
and
subb
mov
mov
jl
cmc
repnz
jle,pt
shlb
rolb
mov
js
out
and
jp
insb
pop
sbb
sbb
stos
jl
ss
add
mov
orl
pop
fadd
fwait
cld
cmp
push
mov
pop
roll
mov
inc
push
in
lcall
std
lahf
fcmovnb
in
inc
push
lods
xor
dec
into
sub
not
jno
rorl
xchg
jo
rcrb
mov
push
aas
jp
aam
es
sbb
jg
push
push
mov
ljmp
stos
sub
dec
xchg
mov
mov
jb
xchg
or
push
jb
inc
xor
movsl
jae
add
xor
out
rclb
mov
inc
gs
xchg
xchg
sub
daa
out
fildll
mov
xchg
popf
insl
dec
adcb
jbe
lea
xchg
outsl
dec
mov
inc
andl
pop
dec
pop
mov
or
xchg
adc
jecxz
mov
jne
mov
jnp
repz
push
jno
xchg
stos
xchg
inc
add
ds
bound
add
xchg
divl
ds
into
test
mov
fldt
lds
and
repz
adc
add
data16
aam
movsl
mov
stos
push
inc
pop
dec
loope
and
insl
mov
rorl
lcall
arpl
movsl
cs
xor
outsb
sub
cltd
cwtl
lcall
jge
test
adc
fxtract
int3
mov
jns
ds
daa
fmuls
cld
andb
mov
or
jl
jg
jne
jp
xchg
mov
inc
ss
push
inc
mov
ss
fs
xchg
jge
aad
mov
jae
movsl
cmp
mov
addb
ret
mov
adc
inc
je
arpl
in
neg
ja
outsb
rcl
mov
hlt
int3
cltd
cmp
push
sahf
lret
aad
pushf
xlat
adc
and
test
push
dec
push
adc
shlb
sbb
or
cmc
dec
leave
or
popa
xor
push
xchg
sbb
add
push
aas
inc
push
pop
jg
add
mov
mov
push
outsb
dec
fistps
inc
fs
imul
stos
adcb
lods
and
pushf
mov
pop
pusha
dec
xchg
das
cmp
cwtl
push
scas
aas
push
push
rclb
test
mov
cmpsb
pop
pop
push
xor
or
mov
ljmp
push
fs
inc
outsb
pop
pusha
sti
stos
je
dec
push
cmp
or
pop
inc
adc
cmpsl
daa
and
ds
or
inc
or
cld
mov
in
ret
mov
stos
iret
xchg
jo
and
and
pop
dec
js
loopne
mov
xor
jne
subl
xlat
xor
addr16
adc
cmp
popf
jns
xchg
loop
scas
sub
xlat
adc
adc
sbb
dec
xchg
les
push
add
push
inc
jle
addr16
hlt
jg
ss
cltd
dec
xchg
cld
enter
lds
cwtl
jb
mov
hlt
push
fildl
test
inc
jecxz
or
mov
push
inc
or
arpl
andb
out
xor
and
mov
popa
int3
push
cs
fistl
cwtl
fs
dec
inc
movsb
iret
roll
inc
mov
cmpb
mov
stc
sbb
add
loopne
cltd
in
ret
xor
xchg
movsb
out
jbe
enter
adc
mov
das
cmp
imul
icebp
add
or
cmp
sti
add
clc
call
cmpsl
insb
call
bound
adc
inc
ret
dec
mov
jp
stos
or
lock
sbb
cmp
xchg
dec
xlat
cld
addb
je
dec
jne
or
dec
je
fstp
xor
popf
mov
psubb
xorb
xlat
orl
mov
outsl
daa
push
jp,pn
and
andb
sub
fldt
repz
aad
pop
in
push
pop
js
repz
ja
sbb
or
mov
or
sbb
inc
loop
mov
add
or
mov
jl
inc
fimull
aaa
dec
mov
call
jo
or
rol
xor
test
lds
cwtl
cmp
inc
cmp
shl
cmp
sti
mov
pop
outsb
jg
aaa
mov
iret
aad
xchg
dec
push
scas
jle
adcl
popa
std
imul
or
std
sub
mov
test
pushf
fstp
loop
pop
movsl
inc
sbb
adc
loop
fmull
jno
mov
loope
mov
int
push
addl
int3
arpl
push
insb
call
cmpsb
or
ret
xchg
xor
sbbl
out
rcl
sub
dec
addr16
hlt
jle
jle
xlat
test
lods
mov
or
pop
js
in
adc
loope
je
inc
xchg
jbe
lret
dec
xchg
imul
aam
jno
clc
sti
mov
xcrypt-cbc
cmpsl
adc
ljmp
push
ljmp
xchg
add
fstl
sub
fwait
aam
dec
jmp
sbb
aam
xor
iret
dec
mov
mov
ja
xchg
adc
inc
add
insl
xchg
test
or
adc
cmpsb
xchg
or
mov
xchg
push
and
xor
mov
rcl
mov
cmp
scas
inc
out
ds
xchg
and
test
das
ret
or
add
jno
movsl
mov
lcall
xor
adc
fisttpll
xor
cmp
sbb
cld
cmp
mov
aad
rcll
jo
test
test
out
addr16
pop
xchg
mov
push
test
outsb
mov
sub
andl
push
cwtl
js
add
addpd
pop
xor
jl
aaa
lods
pop
loopne
mov
add
sub
sbb
xor
adc
loopne
bound
add
pop
lcall
or
adc
call
test
out
aaa
aam
andb
pop
inc
push
aam
mov
sbb
outsb
jle
sbb
adc
insl
jl
rclb
dec
jns
out
inc
bnd
insb
dec
add
frstpm(287
icebp
ret
dec
sbb
sbb
loop
aas
add
and
mov
pop
mov
mov
push
mov
loop
push
insl
movsl
xor
push
pop
rorl
lock
clc
sbb
mov
hlt
stc
lock
push
pop
cli
addr16
or
mov
addl
dec
fdivs
xchg
subb
jae
fidivs
fisubrl
pop
mov
cwtl
movsb
arpl
repnz
push
sub
or
jle
dec
test
add
jbe
and
clc
stos
adc
jbe
clc
cltd
cltd
test
jmp
sbb
pop
out
mov
stos
pop
inc
cmpsl
repz
and
or
lret
outsl
in
scas
mov
stc
fidivs
jp
xor
rol
ds
hlt
xchg
icebp
and
mov
sahf
stc
lock
sahf
adc
fstp
mov
push
mov
scas
mov
xor
std
sub
outsl
ffree
cmp
aam
cli
push
xchg
xchg
pop
rorl
sub
pop
push
ja
ja
addl
movsb
adc
inc
lea
lcall
inc
dec
add
dec
fiadds
or
cmp
das
das
lds
sbb
add
push
lret
jb
mov
sbb
lods
imul
lret
movsl
pusha
ret
iret
sti
jmp
cmp
lret
adc
xchg
and
jns
adc
xchg
push
pusha
inc
mov
xchg
xor
adc
mov
xlat
mov
push
lret
push
imul
add
sub
rorl
aas
nop
popa
inc
setno
xor
cmp
popf
fmuls
push
inc
cmp
xor
push
mov
xchg
jb
lock
dec
inc
xchg
cli
cmp
dec
xor
loope
mov
scas
and
jl
add
push
and
repz
outsb
inc
lcall
pop
aaa
sbb
sbb
ud0
je
pushf
stos
cmp
inc
mov
ss
jne
or
test
push
add
jnp
inc
push
in
xchg
xchg
jle
cltd
xor
adc
pushf
lret
sub
cli
mov
mov
xchg
fisubs
imul
daa
push
enter
push
test
cmpsb
mov
stos
add
dec
testb
xor
mov
mov
mov
pop
and
mov
add
jne
enter
cs
and
add
aas
pop
shll
and
pop
sarl
jmp
mov
push
inc
imul
mov
pusha
cli
cmp
in
lea
mov
loope
jno
loopne
jbe
mov
roll
clc
out
test
sub
popa
das
lock
ja
repz
imul
ss
pusha
mov
mov
jl
mov
stos
loope
mov
sub
cmp
mov
or
sub
loop
mov
or
ss
xchg
adc
cmp
sub
jo
jae
fcom
inc
mov
fadds
ret
not
adc
inc
adc
adcb
cmc
pop
pushf
xchg
jle
test
or
fwait
xchg
test
sub
ret
dec
inc
pop
imul
jmp
mov
sti
popf
mov
repz
pusha
mov
test
aaa
ja
outsb
cmp
mov
ror
imul
sbb
add
fdivl
push
inc
sbb
mov
aas
and
inc
test
pop
sub
inc
and
mov
adc
and
rcrb
sub
mov
stos
lds
cmp
add
mov
daa
add
stos
push
mov
xchg
push
jecxz
xchg
xor
rcrl
push
sbb
test
mov
or
jnp
sub
cli
sub
sub
push
mov
int
jb
dec
fldcw
in
cmp
iret
pop
mov
mov
lods
testb
shl
das
pop
enter
xor
add
cmc
push
and
jge
xchg
or
pop
and
test
xchg
pop
push
lock
pop
popf
call
or
inc
cld
pop
cmc
jmp
loop
xchg
loopne
push
mov
mov
jmp
cmp
es
lcall
lds
xchg
inc
xchg
cmp
pop
mov
mov
ret
dec
adc
xor
or
xchg
mov
jp
mov
add
call
adc
xor
xchg
out
arpl
enter
inc
aad
and
lods
push
jecxz
aaa
jecxz
sti
push
imul
ss
inc
ret
outsb
movsb
repz
inc
ret
sbb
popf
hlt
add
sbb
sbb
out
cmp
cmp
inc
jne
andl
je
mov
inc
push
inc
xchg
es
pusha
pop
inc
jp
xor
cvtpi2ps
mov
sub
je
pop
sbb
movsl
inc
cld
sub
and
fstpl
lahf
out
cmp
stc
mov
mov
popf
xorl
jb
mov
pop
xchg
test
cmp
mov
jns
mov
or
xor
shl
cmpb
add
jge
test
je
pop
push
push
xor
cmp
xchg
in
fwait
mov
pop
rcll
xor
jns
clc
sbb
int3
jno
ja
dec
lret
sbb
mov
ljmp
jp
ja
and
jg
mov
idiv
xchg
pusha
and
add
mov
loopne
pop
sbb
pop
add
in
je
pushf
fimuls
test
outsb
add
xchg
ja
into
push
xchg
ss
in
jo
adc
gs
mov
sub
adc
add
and
mov
sti
pushf
std
add
int3
ds
jns
inc
mov
mov
push
sbb
movsl
outsl
daa
jecxz
addr16
add
push
pop
xchg
inc
cltd
and
jmp
xor
shll
iret
push
js
dec
fxch
mov
cmp
mov
sbb
and
popa
dec
loopne
mov
data16
jecxz
jg
dec
mov
aaa
and
jg
mov
sbb
ret
sbb
lods
movsl
shlb
and
mov
mov
xchg
scas
push
out
les
daa
mov
jo
sbb
inc
mov
test
sbbl
lock
ret
inc
xorl
jl
and
xor
pusha
push
mov
push
inc
movsb
insb
out
push
fistps
das
and
lahf
push
pop
dec
lods
jns
insb
pop
negl
pop
xor
rcrl
jmp
pop
leave
repnz
mov
aas
cmc
imul
ss
jb
in
lret
pop
fimuls
add
int
pop
adc
dec
shlb
stos
or
xchg
shlb
inc
xchg
repnz
jb
sbb
xchg
and
sub
inc
jg
das
sbbb
fmuls
mov
mov
setl
push
pop
mov
xchg
xor
push
adc
test
sbb
pop
xchg
xchg
push
inc
ds
iret
adc
lret
jne
mov
pcmpeqd
push
dec
fisubrs
and
aaa
jmp
pushl
jae
push
mov
adc
cld
aad
leave
cmp
xor
mov
test
mov
clc
pop
mov
cmp
xchg
push
jnp
mov
aas
dec
stos
pop
pushf
inc
add
mov
dec
mov
lock
sbb
mov
xor
mov
ljmp
dec
cli
fidivrl
xchg
loope,pt
pop
sti
popa
inc
xor
roll
sbb
data16
push
std
mov
add
daa
inc
jo
das
adc
mov
pop
xor
mov
sbb
cmc
cs
loope
sub
mov
sbb
sbb
cmp
in
mov
mov
cli
arpl
fsubrs
icebp
repz
jle
clc
aas
leave
cmp
push
arpl
mov
nop
addb
push
jo
das
cmp
es
lret
das
inc
mov
sub
adcb
icebp
mov
das
lods
mov
mov
out
pop
insl
cld
or
push
sub
fimuls
dec
adc
shlb
mov
push
mov
jb
cmp
stos
mov
sbb
in
sub
shlb
sbb
js
fsts
and
xlat
mov
nop
fisttps
push
adc
out
adc
and
cmp
js
lahf
adcb
cmp
jbe
mov
xchg
das
dec
sbb
mov
pushw
jne
jp
push
and
cmp
dec
add
add
add
lret
addr16
mov
in
add
xor
je
fstp
jecxz
bound
push
rcrb
mov
out
mov
jbe
je
sbb
and
or
xchg
mulb
lock
packsswb
pop
xchg
mov
ds
sbb
faddl
xlat
dec
xchg
in
xlat
xor
jnp
cmp
mov
int3
push
aaa
sbb
xor
jbe
roll
inc
push
mov
sub
dec
adc
std
mov
lods
mov
out
xchg
lock
int3
dec
inc
mov
das
xchg
out
jns
sub
mov
in
aas
je
pop
cmpsl
imul
xchg
or
in
xor
xchg
inc
test
call
in
lds
cmpsb
mov
rcrl
pop
int
xchg
loopne
jecxz
imul
xlat
mov
fidivrs
pop
inc
fsubl
movsl
movhlps
cmc
push
push
xlat
and
es
pushf
movsl
cmpsb
rcr
pushf
cmp
sub
fmuls
cmp
mov
addr16
dec
pop
das
mov
aam
pop
or
ficompl
and
or
mov
mov
push
cmpsl
pop
loop
inc
ljmp
fsubs
mov
fldl
mov
inc
imull
pusha
aaa
add
ss
ds
or
sub
int
mov
fistl
aad
mov
sarl
ret
or
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
sbb
push
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
xor
mov
and
andl
and
movl
adc
movl
mov
mov
sub
sub
mov
or
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sub
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
jmp
das
or
mov
in
jno
jle
lcall
jp
pop
in
loope
mov
and
adc
mov
popa
push
cli
and
push
pop
dec
int3
mov
loope
sub
push
dec
adc
fldl2t
jbe
jl
sahf
sbb
rcr
inc
leave
stos
jge
shll
xchg
mov
fnstsw
loopne
int
mov
xlat
imull
jle
pop
insl
cmp
add
sti
mov
xchg
ja
lcall
mov
mov
or
mov
and
ret
xor
mov
cld
arpl
addr16
jg
hlt
test
pop
loopne,pn
fiaddl
fwait
xor
scas
outsl
jo
cmp
sbb
mov
sarl
test
stos
and
or
dec
das
filds
push
mov
mov
je
push
jb
xor
out
and
xchg
sbb
aad
or
xchg
stc
sub
imul
ss
add
out
inc
cmp
mov
adc
and
movsl
scas
sbb
aaa
add
mov
sub
ljmp
inc
stc
imul
cmp
pusha
pop
imul
ror
push
xchg
lock
test
rolb
mov
mov
inc
mov
loopne
rcrb
cmp
push
shlb
push
jne
mov
int
outsl
pushf
dec
jae
loope
mov
out
lock
enter
movsl
pop
sti
lahf
lret
mov
pop
or
jg
mov
dec
mov
fisttps
mov
popa
ds
mov
xchg
xchg
ja
pop
fsub
cmp
adcl
push
mov
add
or
pushf
sbb
mov
repz
inc
cmp
test
pop
cmp
mov
cld
jge
pop
mov
xor
out
int3
arpl
pop
mov
aam
jns
fwait
pop
addr16
sbb
mov
testb
in
dec
nop
jge
sub
fwait
cmpsl
fstps
pop
movb
add
mov
jl
sub
push
jae
fbld
inc
jmp
push
and
jbe
clc
loop
daa
mov
cmp
pop
pop
pop
push
fisttpll
inc
mov
sbb
mov
clc
repnz
cmpsb
imul
dec
test
lock
cmp
and
add
xor
push
push
jb
jge
lea
stc
or
popa
add
add
adc
push
sbb
adc
sub
lahf
sbb
jge
mov
les
mov
into
jl
ds
ja
xor
sbb
cmovae
sbb
cli
add
aas
pop
push
inc
add
mov
xor
out
cltd
lds
ret
jns
or
imul
push
popf
movsb
sbb
popf
icebp
sbb
mov
push
jns
es
inc
xchg
rclb
jmp
rep
repnz
std
adc
and
inc
lahf
inc
movsb
jae
inc
sbb
aad
push
pop
and
push
jecxz
bound
bound
xchg
leave
fistps
lcall
mov
pop
jnp
in
jae
es
add
jmp
movl
call
pop
rcpps
mov
jg
fiadds
lret
lret
leave
imul
mov
pop
shrb
fwait
and
adc
sub
loop
mov
das
daa
mov
or
es
sbb
fwait
xchg
xor
int3
repz
mov
ret
arpl
adc
std
add
lods
addl
and
ljmp
sub
xchg
xchg
push
fstpl
jmp
xor
popa
lock
xchg
jo
mov
xlat
orb
mov
jp
cmp
xchg
adc
xor
pop
pop
cmpsb
rolb
scas
pop
imul
cmp
inc
outsb
pop
nop
xchg
movntq
and
popa
movsb
xor
push
xchg
lret
mov
pop
rcl
mov
shrl
xchg
sbb
cmp
clc
int3
and
xchg
xor
add
out
xor
xor
and
xchg
js
rorl
fadds
sbb
and
cmp
ss
test
xor
dec
push
outsb
push
sbb
adc
adc
aam
push
fstp
cmp
cmp
xor
cltd
lcall
xor
scas
lahf
icebp
ret
jecxz
adcl
cmp
sbbb
test
and
lahf
iret
add
sub
adc
pushf
shlb
pop
jle
dec
rcl
add
inc
popf
push
ja
pop
aam
cltd
test
addr16
cltd
sahf
popf
xchg
hlt
sarb
out
das
addr16
mov
or
pop
leave
add
cltd
js
aaa
mov
jae
cmpsb
push
xchg
dec
sub
dec
test
add
wbinvd
dec
rclb
filds
pop
setne
dec
sbb
nop
ss
adc
xchg
enter
inc
xchg
add
loop
lods
jle
call
add
mov
sahf
fwait
enter
cmp
push
xorl
sahf
and
in
dec
fsubs
sbb
enter
mov
jb
inc
fcoms
and
cmpsb
mov
incb
fildll
pop
idiv
pop
ja
and
loopne
nop
dec
sbb
jns
inc
mov
call
int3
sbb
loopne
jmp
and
sbb
inc
mov
pop
sub
push
xchg
pusha
repz
aaa
sahf
call
int
fldt
xchg
filds
sbb
cmp
out
in
aas
dec
sbb
enter
lret
add
pop
mov
xor
mov
mov
lcall
lds
int
dec
or
or
orl
or
add
jb
mov
test
push
push
outsl
jo
in
fcompp
jno
lahf
lcall
mov
or
mov
int
fildl
lahf
js
mov
push
mov
adc
rclb
mov
pusha
shrd
fcompl
or
mov
xor
data16
fnsave
mov
out
mov
ret
jl
xchg
cmp
ret
lret
scas
hlt
jl
dec
xchg
loopne
xchg
jnp
aad
xor
enter
add
cld
lea
jae
fmull
scas
push
iret
mov
das
inc
mov
insl
xor
fldt
inc
ja
jno
je
pop
je
jle
adc
sti
jns
adc
mov
and
pop
in
jb
shrb
stc
mov
cmp
outsb
mov
mov
push
inc
or
cli
sub
add
push
int
repnz
enter
dec
int
pop
xor
mov
fnstsw
xchg
jecxz
in
mov
inc
mov
shlb
xorl
cmp
inc
cmc
jge
dec
popa
inc
fsubr
outsl
testb
mov
int
cmp
pop
inc
dec
enter
jne
pop
inc
leave
jno
xchg
imul
mov
mov
addr16
push
loop
jle
jp
ljmp
mov
jmp
outsb
arpl
xchg
adc
mov
jge
xlat
xor
cmpsb
rcl
ret
cmpsl
aaa
sbbb
gs
pop
sti
mov
sbb
or
insb
in
stc
adc
mov
dec
cmp
inc
lahf
out
add
add
cmp
pop
repz
inc
pop
bound
or
dec
out
jmp
call
pop
cmc
out
adc
add
aas
subl
push
mov
sub
or
mov
mov
dec
outsb
aaa
cwtl
pop
ljmp
jno
or
cs
cmp
add
and
add
aaa
cmc
xchg
push
fnstenv
addr16
loope
add
push
and
adc
fadds
pop
stos
in
sbb
sub
cmp
mov
sub
xchg
pop
ljmp
xor
aaa
xchg
or
lea
fsubl
mov
pusha
je
jl
imul
fsubl
into
pop
imul
add
mov
imul
or
and
movsb
enter
push
lret
xchg
inc
mov
loope
sti
xchg
enter
sub
cmpb
loop
int
stos
je
push
dec
xchg
jb
ss
lahf
inc
push
ficompl
shlb
in
outsl
xor
mov
dec
pop
xor
fabs
outsb
mov
cmp
adc
dec
xchg
inc
repz
shrb
repnz
jl
aaa
loopne
std
in
int3
pop
mov
mov
mov
sti
pop
mov
nop
cwtl
push
rcll
testb
iret
mov
or
cld
mov
rcl
xor
adc
dec
or
fs
daa
dec
push
ja
imul
movb
inc
lcall
daa
fildl
push
mov
jae
mov
ret
mov
dec
ljmp
repz
sbb
cmp
call
sub
mov
mov
xchg
mov
mov
test
lds
decb
lret
add
ljmp
cmc
xor
push
std
pushf
cltd
fldenv
movsl
sbb
divb
sti
sbb
in
mov
inc
jb
mov
lods
xchg
mov
cmp
jno
mov
aam
and
dec
mov
lock
mov
in
outsl
and
push
xchg
jg
cmp
ja
xchg
xor
rolb
pop
mov
in
ret
push
ss
or
mov
ds
jne
loope
imul
sub
mov
jecxz
sub
data16
test
popa
cltd
fisttpll
cmp
cmp
test
ljmp
cmpsb
popf
mov
xor
test
xchg
or
cwtl
test
std
xor
sbb
sbb
adc
notl
jge
xchg
xchg
add
in
jno
jg
inc
cs
and
jnp
or
push
popa
mov
stos
cmp
les
add
push
inc
mov
mov
scas
outsl
jno
test
sahf
dec
and
stos
cs
and
jbe
jle
fistpll
xor
out
repnz
pop
xchg
icebp
and
cwtl
xor
fimuls
inc
cmc
sub
push
and
stc
in
test
mov
fst
ljmp
insl
fisubrs
push
jno
iret
xor
xchg
mov
stos
pop
icebp
cwtl
xchg
fidivrl
cmp
ret
fisubrl
scas
cmp
xor
icebp
cltd
sahf
in
sbb
loopne
fucomip
pusha
std
mov
xor
cmc
popa
add
subl
shll
dec
or
add
mov
or
ja
popa
lret
rcll
fisubl
insb
ja
push
sub
repz
cmp
imul
dec
repnz
icebp
mov
lea
xor
xchg
pop
movsb
in
adc
shrb
sub
test
mov
mov
sub
pushf
inc
lret
push
push
add
out
mov
dec
icebp
pop
push
adc
iret
gs
pop
aam
dec
mov
repnz
inc
xlat
mov
rcll
jp
cmpsb
mov
cmc
movsl
dec
repz
mov
enter
cmp
mov
and
fwait
ljmp
push
jecxz
out
adc
mov
mov
pop
pop
pop
sub
sub
jmp
loope
sub
int
ja
addr16
sub
rorl
adc
dec
xlat
adc
mov
pop
jnp
bound
repz
test
rcr
inc
mov
dec
stc
sub
mov
mov
cmp
insl
adc
icebp
cs
jecxz
cmp
ds
fsubl
cli
sarb
adc
test
repz
lods
jae
pop
xchg
clc
sahf
and
test
push
imul
outsb
xor
mov
push
rcll
fwait
inc
sbbb
cli
mov
dec
cwtl
mov
push
pop
xor
mov
icebp
ljmp
js
ret
jns
push
pop
mov
mov
and
xor
lcall
sub
sub
popa
out
ficoml
cld
nop
outsl
cmp
loopne
xor
mov
aaa
xchg
sub
cmp
leave
pop
pop
mov
enter
vpsraw
jae
lods
dec
lcall
lds
clc
les
or
notb
gs
xchg
push
je
dec
jle
testb
in
dec
add
out
gs
ljmp
xchg
iret
pop
lahf
aaa
jne
imulb
out
sbb
xchg
rcr
inc
fdivs
inc
xchg
pusha
cmpsb
movsb
cmp
mov
pop
pushf
push
loop
mov
xchg
out
fisubrl
xchg
out
pop
jge
push
jae
lret
xchg
fdivrs
rclb
and
sub
lods
jge
outsl
mov
mov
cmpsl
insl
mul
out
daa
mov
jnp
lret
aad
je
jo
mov
stos
imul
adc
mov
ss
fdivl
rcrb
je
lret
lods
xchg
rorb
add
sbbl
adc
xchg
xor
out
shrb
mov
jmp
dec
or
fisubs
xchg
jle
jle
in
pop
pop
inc
test
xchg
xor
movsl
fisubl
add
mov
aad
es
ds
int
mov
gs
loop
setb
mov
cld
sbb
out
mov
mov
add
out
pop
rorb
pop
lea
ja
push
adc
fld
iret
jg
xchg
test
shr
cmp
sub
outsb
rcl
mov
push
pop
loopne
orl
jmp
dec
push
ret
mov
add
dec
pop
out
outsb
cld
xchg
adc
insb
jno
mov
push
loopne
test
clc
mov
movsb
or
and
cmp
mov
mov
das
icebp
inc
cmp
dec
ss
mov
mov
push
add
dec
push
sbb
fs
lea
inc
psubw
pop
adc
cltd
cmp
es
les
push
push
mov
or
or
jmp
out
notl
enter
out
and
add
out
sbb
pop
loope
lds
jns
inc
pop
leave
mov
jno
or
in
pop
mov
lods
add
xchg
add
pop
add
pop
add
aad
enter
xchg
stc
jo
or
mov
pop
add
push
push
jb
mov
je
jecxz
mov
pop
push
shlb
sub
cs
fmuls
test
cmpsl
notb
leave
xor
adc
ret
jg
inc
vmaxps
lods
out
decb
das
lret
jae
sar
or
imul
inc
hlt
icebp
lcall
cmp
out
sbb
and
lcall
int3
adc
sbb
ljmp
add
test
push
xor
cltd
out
mull
fsub
sub
fdivs
pop
loope
test
rcrl
dec
sbb
cmp
in
add
repz
sbb
int
imul
loopne
lea
sub
cld
sbb
in
push
jae
jno
jp
cmpsl
mov
inc
adc
mov
push
lds
js
adc
push
fimuls
mov
ljmp
clc
sbb
jle
rorb
or
mov
push
mov
jne
sti
mov
lret
shll
nop
js
push
enter
cmpsl
fs
mov
mov
into
fistps
jo
pop
addl
ret
or
loop
mov
push
mov
out
fs
add
xchg
pop
xchg
mov
sub
fdivs
inc
rolb
stos
loop
lcall
pop
shr
sub
ljmp
adc
push
sti
stc
xchg
clc
cld
insl
adc
xchg
lret
imul
popa
leave
cmp
jb
ret
stos
out
mov
push
add
xor
neg
adc
leave
sbb
shlb
mov
sbbl
mov
push
ftst
push
inc
aas
add
pop
mov
jmp
pminub
fwait
icebp
jg
dec
faddp
push
sbb
cli
loopne
xor
inc
sbb
dec
ret
pop
push
neg
or
mov
push
mov
out
ja
call
sub
test
inc
xor
sbb
dec
jae
stos
test
sub
sub
test
jge
mov
out
out
mov
sti
das
mov
ljmp
add
sbb
pop
adc
xor
dec
dec
dec
and
or
movsl
pop
mov
sub
cmpsl
inc
inc
mov
pop
inc
inc
sub
xor
adc
js
or
sub
in
push
es
adc
insb
add
cmp
cmp
xchg
add
lcall
imul
pop
popa
and
mov
outsl
sub
adc
mov
pop
subb
lds
xchg
or
adc
insl
ljmp
ret
cltd
inc
mov
inc
or
mov
shlb
mov
lods
xor
adc
test
into
cmp
pop
mov
pop
or
inc
dec
jl
add
int3
adc
adc
dec
out
rcrl
adc
xor
test
shll
jecxz
test
out
jp
movsl
movsl
xabort
jge
bound
aam
inc
pop
push
icebp
jnp
and
movb
cmp
int3
addb
dec
call
mov
inc
jmp
hlt
outsl
pop
mov
leave
jbe
inc
inc
sti
push
cmc
test
and
xchg
outsl
xchg
dec
dec
and
mov
or
jo
ja
add
sbb
add
ja
adc
ret
outsl
pop
aad
arpl
popf
xor
fadd
dec
xor
mov
pop
mov
rorl
lods
xor
mov
xor
test
ret
or
push
out
cmpsl
neg
rorb
fcomip
xchg
or
fs
xor
pop
sub
aad
pusha
ja
inc
ret
mov
jno
mov
mov
push
orl
sbbl
mov
inc
js
adc
inc
pop
inc
cld
fsubrl
and
dec
mov
lods
pusha
shlb
nop
nop
push
popa
mov
push
jne
pop
or
js
or
into
leave
std
jb
adc
test
jg
add
add
sub
mov
outsl
adc
jecxz
jo
cmc
ss
lahf
pop
dec
in
xor
cpuid
mov
push
sahf
std
jae
xchg
outsl
xor
add
test
xchg
adc
add
jp
ljmp
dec
mov
call
pop
jno
jb
and
das
sub
dec
xchg
push
mov
lods
sub
clc
or
inc
sti
adc
cmp
xlat
add
popf
sub
add
mul
push
xor
xchg
xchg
cmp
mov
daa
mov
leave
loop
in
pcmpgtb
sub
pop
xor
call
xchg
cli
inc
xor
gs
pop
xchg
lret
sub
ficompl
sbb
jp
xor
rcr
push
xor
jne
fisttps
repnz
sub
xchg
lahf
enter
and
rorl
add
pop
inc
add
sahf
mov
and
or
je
mov
loope
cmp
fistl
pop
movsl
pop
inc
loopne
add
mov
jge
cli
jns
cli
imul
pop
inc
xchg
or
or
stos
lea
mov
aaa
push
pop
cli
mov
mov
cwtl
or
mov
mov
fadds
mov
cs
pusha
fwait
loope
xor
lret
pop
rcl
xchg
mov
sti
jp
sbbb
adc
adc
or
push
lret
cld
cmp
cmp
mov
jns
cmp
jo
pop
mov
out
inc
in
pop
inc
sahf
push
jne
mov
xor
and
cmp
shrb
jno
sub
push
shl
jp
sti
negb
jbe
imul
mov
push
cmc
dec
shll
inc
popa
push
sbb
test
or
push
imul
js
test
xor
mov
or
sbb
addl
imul
mov
ds
xchg
fstps
dec
jbe
mov
imul
adc
fsubrs
pop
push
cmp
xchg
sbb
fnstsw
lret
fnstsw
sbbb
sub
fistpll
rcrl
mov
xchg
sub
xlat
and
mov
mov
adc
jmp
and
sti
and
lods
shlb
pusha
cwtl
or
cmpsl
aam
daa
mov
cmp
add
push
pop
dec
xor
push
push
mov
fcompl
mov
mov
mov
jns
aaa
out
pop
adc
sbb
pop
loop
je
mov
xor
pop
repnz
pop
lock
xor
ss
add
stc
icebp
aaa
push
push
ret
push
xchg
fwait
ret
fwait
pushf
cmp
sbb
loopne
inc
test
mov
mov
mov
adc
aad
mov
sbb
mov
sbb
and
push
lds
aaa
loop
add
mov
mov
bound
dec
add
jb
jg
fnsave
and
add
mov
aas
mov
jo
push
pop
sub
jecxz
xchg
test
mov
or
jmp
fcoms
xchg
jp
sarl
mov
jne
gs
cld
js
xadd
stos
in
andb
outsb
out
push
jmp
insb
fiadds
mov
ss
mov
aam
movsl
hlt
filds
in
push
pop
xor
xor
inc
cmc
sub
sub
cltd
push
mov
mov
scas
xchg
lock
push
out
mov
add
jnp
or
pop
adcb
lret
fidivl
sub
or
dec
dec
dec
scas
insl
xchg
and
jo
jb
into
mov
xlat
in
fst
ljmp
nop
or
jbe
das
inc
pop
push
and
pop
xchg
push
out
mov
fnsave
pop
xor
test
jmp
sbb
int
mov
icebp
loop
std
xor
out
push
scas
jg
adc
jne
imul
sbb
nop
popa
push
xor
outsb
mov
pusha
pop
adc
daa
mov
pop
mov
add
shlb
out
push
aaa
or
pop
dec
rorb
repz
dec
mov
add
fs
cmpsb
movsb
adc
xchg
shll
fcmovb
or
mov
fcmovne
push
push
xor
sub
dec
or
jmp
test
pop
sbb
arpl
xchg
cmpsb
cmp
pop
lods
mov
clc
not
mov
fisubl
sahf
adc
xor
not
popf
and
xchg
pop
je
push
out
mov
sub
cmp
jmp
mov
cltd
mov
shl
adc
fimull
or
mov
in
push
xchg
ret
enter
out
inc
lock
dec
sbb
lock
lcall
bound
dec
cld
jbe
pextrw
push
pop
jmp
das
xchg
movsl
out
jp
adc
xchg
andl
enter
imul
jecxz
jo
insl
cltd
push
inc
ss
cmpb
lcall
pop
outsb
xchg
cld
push
mov
mov
fidivrl
xchg
shll
movsb
or
addb
shlb
xor
push
sbb
mov
jo
out
hlt
xchg
fadds
movsb
dec
inc
mov
mov
push
dec
pop
jp
hlt
aad
fisttps
subb
push
cmp
loop
xor
push
lods
in
loopne
pushf
sub
or
push
rorb
xor
mov
dec
pushf
movsl
cld
mov
sub
cwtl
and
mov
test
lds
push
sbb
jl
movq
test
xchg
mov
mov
or
adc
dec
mov
pop
dec
insb
xor
pop
insl
inc
outsb
test
in
mov
push
scas
leave
sub
or
dec
pushf
dec
decb
sti
pushf
pop
dec
adc
gs
cmpsb
push
cmpsb
xchg
mov
or
fiadds
inc
or
rsqrtps
sbb
adc
mov
loope
int
xor
xchg
lds
daa
std
imul
sbb
jecxz
pop
lods
pushf
nop
pop
sbbl
clc
out
mov
xchg
fildll
ljmp
pop
pop
pop
sbb
dec
movsb
fisubrs
xrelease
lea
int
xchg
fidivrl
jne
xchg
les
mov
fwait
adc
jbe
je
push
push
lahf
push
jbe
push
lods
filds
out
loope
xor
cmpsb
sub
test
std
cmp
or
imul
xor
mov
test
pop
imul
cmp
jl
outsb
mov
jmp
movsb
sbb
roll
call
popa
push
lret
inc
clc
push
jb
push
sbb
add
cmp
mov
or
call
and
or
movsl
sub
jbe
mov
xchg
fistl
xchg
dec
mov
rorl
insb
pop
mov
movl
push
dec
push
mov
aas
js
pop
ficomps
fnstcw
mov
shl
mov
xchg
push
cmp
inc
insl
lahf
rcrb
cmp
push
pop
sti
jecxz
je
insb
cmp
adc
cmpsl
xor
das
ljmp
xor
arpl
stc
negb
push
lds
inc
and
rcrb
popf
and
ljmp
aas
lods
js
pop
inc
int3
jmp
std
lahf
cwtl
insl
cmp
add
fwait
mov
int3
fst
inc
and
aas
ja
or
mov
cwtl
rorb
dec
loopne
fldenv
dec
fwait
mov
test
add
inc
popa
cmp
mov
xor
xchg
shll
pop
jg
fbstp
push
xchg
cld
inc
lods
gs
or
aas
xchg
out
movsb
jmp
and
rcrb
fsqrt
lret
jbe
jne
fstpl
mov
into
and
ja
cmpsb
mov
mov
adc
ret
mov
imul
das
dec
inc
mov
cmp
mov
or
call
out
mov
adc
sub
in
and
aaa
lret
mov
adc
cmc
jl
loop
bound
push
vshufps
xchg
sub
cvttps2pi
or
inc
sbbl
pop
lods
xor
sub
or
push
adc
dec
jb
out
hlt
mov
cwtl
lods
jg
jecxz
cmp
gs
mov
fcmovnbe
cmp
push
jg
les
roll
rol
mov
mov
push
sarl
imul
jp
lds
mov
aad
push
enter
xchg
not
pop
cltd
cmp
pushf
in
ret
jne
sub
addr16
and
arpl
jb
dec
jb
mov
adc
shrb
mov
sbb
inc
sbb
mov
loope
cmp
scas
mov
pop
adc
subb
test
pop
sub
nop
mov
arpl
shlb
cmp
xor
inc
jecxz
jmp
aad
or
lea
push
loope
sti
aam
iret
clc
add
out
into
adc
or
and
jb
addr16
mov
les
shll
shll
cltd
fildl
mov
lea
mov
xor
push
dec
repz
insl
dec
fiadds
mov
cmp
sub
call
add
lret
push
js
enter
xor
pop
loop
rol
mov
pusha
jle
int
mov
es
sbb
jo
push
mov
and
setae
jp
insl
jns
mul
xor
cmp
sub
and
push
xchg
scas
xchg
loope
notb
cmp
bnd
pop
xchg
xor
je
cmp
daa
dec
push
inc
pop
imul
jnp
jno
ss
or
push
and
inc
add
pop
xor
cmpsb
jns
sbb
ret
xchg
sbb
xchg
sbb
addb
mov
and
push
adc
sahf
xlat
pop
fimuls
test
fsubs
push
out
repz
jecxz
lds
inc
int3
fadds
inc
popl
idivl
ret
idivl
stos
lock
fnstsw
insl
mov
lds
adc
ret
dec
fcmovu
xchg
dec
sarl
into
pop
aaa
lahf
cs
xor
fcomi
add
test
push
jmp
add
add
push
adc
jo
mov
add
xchg
cmpb
test
outsl
pushf
test
in
dec
aaa
xchg
jne
xchg
sarl
repnz
daa
sbb
xchg
jecxz
cld
inc
or
ljmp
lds
ja
mov
xor
or
clc
push
cmp
and
in
sti
fstpt
push
mov
sub
jecxz
out
insb
cmp
scas
fsubr
cmpsl
push
xchg
inc
fcmovne
popf
pop
dec
mov
mov
push
scas
mov
in
fnstsw
fsubl
inc
lret
lcall
rcl
std
inc
pop
outsl
push
pop
out
rep
lock
sbb
insb
xchg
jnp
mov
pushf
pop
or
daa
int
pop
fcoml
outsl
div
dec
add
or
out
or
mov
dec
adc
loopne
loop
pusha
loop
add
jne
call
pop
mov
mov
push
les
nop
and
loopne
rolb
inc
add
pop
andl
aas
push
je
shll
sti
xchg
jp
pop
add
and
loop
pop
jg
mov
int
andb
loop
xor
jmp
aad
sub
cmp
dec
int
push
jnp
bound
push
cltd
hlt
and
mov
subb
in
out
and
cmp
and
sbb
and
daa
push
movsb
mov
out
ss
cs
pushf
cmp
jae
push
mov
sub
scas
push
pushf
sti
les
jno
outsb
or
pop
cmpsl
and
xchg
cmc
out
sub
sarl
loopne
sbb
loopne
loop
push
dec
cmp
xchg
xchg
and
test
inc
clc
pop
jns
inc
les
stos
mov
mov
push
cmp
push
mov
and
pop
addr16
pusha
pop
sbb
scas
leave
jmp
pop
insl
fcmovbe
rorl
pop
mov
sub
push
repnz
push
inc
cmpsl
fidivrs
out
sub
inc
addb
pop
jge
into
mov
adc
xor
mov
stos
or
add
xchg
es
ds
test
int
mov
cs
stos
mov
cmp
pop
lea
rorb
rolb
xor
clc
xchg
mov
mov
add
mov
mov
mov
mov
mov
sub
sub
lea
or
mov
mov
mov
sbb
mov
xor
add
mov
mov
sbb
mov
mov
sbbl
mov
orl
add
push
mov
jmp
popa
dec
jmp
mov
jnp
js
or
fidivrl
add
jp
pop
jp
jg
lcall
repnz
sbb
daa
inc
outsl
test
pop
movsl
fldenv
and
shrl
std
das
xchg
hlt
sbb
xor
xchg
popf
insl
mov
fisubrl
repz
imul
aad
jle
mov
lret
mov
mov
popf
je
pushf
mov
cmp
pop
dec
sbb
mov
and
pusha
pusha
lahf
and
mov
push
push
pusha
sbb
enter
push
cmpsl
xlat
jecxz
repz
into
outsb
cmp
xchg
dec
xchg
xor
jno
inc
addr16
dec
xchg
jle
jmp
mov
xchg
or
out
popa
stos
in
clc
add
xor
push
test
test
fwait
jl
sti
jns
xor
rcll
fsts
add
inc
cmp
out
mov
pop
jecxz
nop
sub
jle
rdmsr
xchg
fldl
sbb
or
negb
pushf
movsl
loop
add
jp
inc
fdivs
or
push
repnz
sbb
xchg
sub
mov
data16
push
test
test
scas
outsl
rcll
test
xbegin
mov
mov
mov
stc
sahf
stc
adc
mov
push
sti
nopl
testb
aas
leave
adc
push
out
inc
scas
mov
hlt
mov
sub
sarb
mov
lods
stos
jge
push
rcl
push
pop
inc
outsb
pop
fs
mov
mov
int
or
dec
jle
sub
or
addr16
cmp
xor
sahf
sub
adc
xor
push
cmpb
or
lret
and
ret
shlb
and
je
insl
lcall
jbe
shlb
into
and
adc
mov
and
mov
xor
xchg
addl
in
xchg
cmp
cmp
das
dec
fwait
xor
and
xor
adc
mov
mov
faddl
or
fsub
aaa
and
shll
in
les
cmp
add
ja
xor
cmp
lahf
movsb
iret
cmpsl
out
mov
inc
dec
test
inc
cld
mov
sbb
or
test
pop
mov
cmp
add
sbb
mov
cmp
lods
jb
iret
outsl
mov
enter
inc
xchg
mull
shll
shll
in
lahf
or
mov
shr
xchg
mov
das
mov
jge
xchg
ret
daa
int3
sbb
scas
mov
das
dec
xor
dec
pop
ja
incl
or
cwtd
subb
sarl
stos
int3
seto
outsb
fistl
icebp
mov
jbe
fmuls
xchg
cli
sub
add
addr16
rclb
test
jecxz
push
std
sbbb
add
add
cli
lock
dec
cld
fwait
data16
sub
and
cmpsb
xchg
jge
or
mov
and
shll
roll
jg
mov
mov
mov
lret
jo
and
shl
or
mov
jbe
mov
repz
xor
inc
pop
test
and
std
xor
add
test
aad
adc
nop
cli
stos
ljmp
jbe
jne
lret
fidivrs
inc
jge
repnz
push
pop
inc
mov
outsb
and
jne
sbb
shlb
cli
sbb
jo
cmp
int3
mov
out
push
out
adc
stos
pop
cmpsb
inc
xchg
cmp
jnp
jno
and
jge
push
loope
ds
mov
sarl
pop
in
std
inc
inc
pop
add
in
leave
lret
push
lahf
pusha
ret
popf
mov
ljmp
jl
adc
or
mov
mov
cltd
leave
cmpsb
and
adc
mov
sub
add
lea
xchg
sub
fiadds
pop
push
int3
mov
nop
dec
addps
jnp
dec
sub
add
push
push
das
adc
jp
mov
or
mov
push
bound
push
jle
adc
call
imul
jle
push
jp
xlat
dec
xchg
inc
int3
push
dec
out
out
mov
adc
out
mov
in
movsb
jge
imul
lds
mull
ud2
in
cmp
out
push
mov
xchg
or
xor
pop
das
inc
jb
pop
sarl
cmp
or
jmp
orl
xor
icebp
jnp
mov
add
inc
fldt
dec
lahf
and
sub
nop
das
xor
dec
in
ficomps
mov
and
jmp
push
out
mull
into
xchg
lds
xor
imull
jge
and
pop
add
ret
or
ja
cmp
lahf
inc
ret
in
mov
imul
std
data16
xor
mov
jo
mov
push
mov
aas
sbb
addr16
sub
clc
mov
xor
pop
imul
jmp
add
sub
inc
jo
out
data16
ds
inc
mov
lret
out
inc
out
mov
inc
adcb
test
inc
cmpsb
imul
or
ret
jo
mov
imul
insb
movsb
mov
push
icebp
xchg
rorl
push
jg
xchg
cmp
pop
cmp
add
sub
lods
push
mov
arpl
bound
pop
ljmp
push
pcmpgtb
and
pop
inc
xchg
ljmp
cmp
ja
dec
shrl
sub
mov
dec
fisubrs
fwait
ss
scas
xchg
ljmp
cwtl
pop
add
cwtl
int3
mov
mov
bound
sbb
push
rcrl
jl
sbb
push
cmpl
int3
mull
jo
pop
dec
cwtl
sub
int
push
sarb
jg
mov
nop
push
sbb
jae
cli
mov
mov
pop
mov
enter
mov
lret
lcall
push
test
push
mov
jmp
mov
adc
sbb
pop
sahf
sub
jns
mov
out
push
test
jg
push
pusha
push
fs
gs
pusha
enter
xchg
iret
jmp
pop
push
dec
inc
push
add
ret
dec
push
dec
xchg
lahf
cli
xchg
lock
lahf
addr16
lcall
sub
movsl
daa
push
sub
push
mull
pop
adc
mov
jecxz
lret
dec
nop
fmulp
fldl
jns
fsubrl
aas
mov
std
lret
mov
imul
push
pusha
add
cmpsl
imul
jmp
mov
mov
mov
imul
adc
imul
inc
xchg
lcall
movsl
sub
or
cld
cmpsl
cmc
outsb
mov
sbb
arpl
in
push
mov
pushl
jge
pop
outsl
test
push
in
xchg
loope
jg
and
mov
push
and
test
mov
mov
push
push
insb
repz
cmovs
je
loop
ret
or
popa
and
jl
mov
mov
push
mov
das
cmp
sub
out
repnz
mov
and
add
and
movsl
ret
icebp
scas
lret
mov
xchg
sub
add
movsb
adc
and
fs
sub
sub
insb
scas
aas
push
xchg
stc
add
movsb
adc
pslld
iret
imull
inc
cmc
sbb
test
lret
loope
sbb
arpl
repz
add
xchg
lret
or
xor
repz
lret
add
push
push
cld
mov
imul
notl
stc
push
adc
aad
adc
and
adc
lcall
call
rolb
add
mov
xor
roll
das
cmpb
mov
mov
xor
fs
outsb
aad
fildll
addl
pop
jmp
push
out
rcll
in
mov
out
fcomip
je
mov
sbb
cs
test
ja
add
ret
cmp
fldt
scas
xchg
lret
push
leave
mov
mov
bound
inc
dec
lods
divl
pop
mov
or
inc
iret
cmp
mov
and
outsl
arpl
lds
jne
mov
arpl
sbb
xchg
pop
les
test
loope
mov
movl
out
add
ds
push
mov
sbb
xchg
leave
scas
loope
test
inc
xchg
or
stos
jecxz
push
sbb
lret
std
je
loop
add
inc
repnz
in
fwait
and
lods
jmp
in
mov
cmc
mov
sub
out
xchg
mov
out
or
sub
add
das
rolb
sub
push
jo
fidivrl
jle
jmp
popa
in
clc
int
out
mov
jne
xor
in
pop
lds
movsb
sub
test
mov
gs
mov
popf
inc
mov
in
das
or
cmp
stos
and
jns
and
pop
add
dec
adc
cmpl
pop
cli
push
ret
pop
lea
sahf
aaa
xor
mov
lock
lods
in
mov
jecxz
dec
sbb
mov
shll
sub
cltd
incl
mov
sahf
test
cmp
xchg
adc
xchg
cmc
stos
fidivl
jo
mov
or
pop
push
pushf
aaa
lcall
and
sub
jecxz
pop
and
out
xlat
push
xchg
mov
in
xor
fstl
xchg
pusha
dec
inc
fsubr
mov
mov
xchg
aam
pop
add
mov
mov
pop
or
xchg
rolb
jecxz
mov
mov
cmp
pop
dec
sub
int
sub
fiadds
jbe
add
mov
sti
xchg
repz
int
sbb
cmp
leave
or
test
out
sti
mov
icebp
sub
xor
loope
hlt
fwait
ret
dec
scas
xor
imul
mov
repnz
flds
inc
jg
inc
cmp
push
test
mov
sbb
sbb
jle
test
dec
sub
and
scas
mov
fisttpl
shlb
test
in
pop
dec
pop
loope
xorb
mov
int
and
imul
test
jns
popf
ficompl
dec
adc
push
or
enter
push
test
test
ds
in
arpl
lods
aad
push
jb
push
scas
cmp
jl
cltd
push
xchg
in
fcoms
cmp
js
sbbl
push
dec
into
scas
repz
jbe
aaa
cli
push
dec
jno
dec
cmp
mov
add
in
sub
lahf
daa
jl
shrl
pushf
mov
xor
mov
jb
cli
cs
loop
fcmovnbe
xor
in
or
sbb
lcall
icebp
iret
jg
cmp
and
int
mov
test
mov
data16
fimull
push
test
adc
push
lock
push
orl
outsb
loope
inc
cmpsb
fadds
sub
mov
es
lret
jp
inc
jecxz
cmp
cmpsl
pop
xlat
sub
or
mov
or
xlat
pop
cmp
int
xchg
cmp
sahf
add
imul
sbb
push
mov
and
and
inc
aam
xor
push
aam
shlb
loope
add
xlat
dec
ja
mov
lcall
push
jo
sbb
pop
pop
mov
sarb
lock
xchg
lock
ds
aam
insb
mov
hlt
push
jp
xchg
int
ret
and
cmovge
inc
mov
lcall
out
add
leave
push
pop
fnsave
roll
je
lcall
ss
stc
stc
mov
inc
xchg
mov
stos
mov
outsl
dec
mov
and
inc
xor
pop
sub
out
pushf
push
sub
int
movsl
mov
cmp
pop
popf
mov
cmp
cmp
jae
outsb
inc
jmp
dec
adc
jle
pop
loop
cmp
or
dec
insl
mov
mov
icebp
nop
cli
push
xor
testl
mov
jecxz
xchg
mov
inc
aaa
push
enter
push
xchg
mov
outsb
mov
cli
adcb
xchg
and
add
xchg
mov
les
push
mov
data16
sahf
mov
and
push
push
adc
fdivs
cmp
and
lcall
in
sbb
cmpb
push
add
repz
das
cmp
and
push
cmp
lods
or
jo
or
inc
mov
loope
inc
push
and
test
shlb
push
inc
push
sbb
xor
jge
orl
sub
jb
pop
out
icebp
xchg
mov
stc
hlt
cwtl
jne
inc
incl
sub
imul
lahf
dec
xchg
insl
imul
subb
cmp
cmp
pop
push
aad
jne
push
push
cmpb
in
mov
inc
test
mov
jno
xchg
lea
outsb
push
dec
out
cld
xor
outsl
cmp
sbb
int3
or
dec
push
cs
dec
mov
pushf
or
aad
xchg
pop
add
mov
push
test
cmc
xlat
adc
push
fists
mov
adc
fcompl
add
jmp
or
push
aaa
fsubr
in
cmc
cltd
jb
adc
test
or
or
cmpsb
pop
xor
dec
xor
mov
xchg
scas
or
das
xor
inc
fadds
adc
iret
sub
lret
std
das
inc
dec
inc
or
push
xor
inc
imul
idivl
mov
lea
outsl
int3
pop
popa
in
cmp
sarb
mov
jb
or
popa
aam
xchg
sbb
sbb
dec
pop
sahf
adc
mov
jne
sbb
loopne
xor
fists
rcll
and
js
fstpl
hlt
nop
out
pop
icebp
xchg
pop
rolb
sbb
jbe
bnd
sbb
aas
add
popa
xlat
in
lods
testb
and
push
mov
lret
mov
ret
inc
aas
push
aaa
pop
cld
adc
lcall
lret
decl
push
aas
rcrb
sub
int3
rcrb
mov
jl
in
std
mov
test
popf
std
mov
lret
out
call
mov
insl
mov
and
xor
icebp
adc
dec
jg
and
xchg
stc
jne
dec
add
hlt
shrb
jg
or
and
inc
insl
and
cmpsb
inc
hlt
xor
bnd
mov
push
mov
cld
fcomi
sti
cmp
cmp
add
add
test
loope
xor
adc
lods
movsl
lods
jge
in
scas
inc
push
or
push
scas
mov
push
stc
pop
pusha
les
mov
jl
jle
outsl
mov
xchg
jmp
inc
sub
ja
jmp
dec
or
inc
fwait
popa
ja
xchg
push
testl
add
dec
sti
js
movb
cmpsl
xchg
mov
or
xor
xchg
push
in
repnz
sbb
push
jecxz
cmp
popl
mov
add
xchg
sbb
mov
stos
clc
adc
ja
add
sub
mov
push
nop
and
mov
xchg
lds
jno
add
bound
sbb
fldcw
mov
xor
xor
mov
sbb
push
mov
fsubs
dec
add
test
add
sub
mov
xor
push
push
sarl
js
cld
or
lods
push
loope
jae
mov
xor
cmc
mov
mov
adc
mov
fnstsw
rorb
lahf
cmc
shrl
add
enter
jle
addr16
mov
mov
sbb
lods
or
jo
js
insl
and
ss
adc
push
push
lcall
sbb
xor
push
xor
adc
scas
out
sbb
or
dec
or
cmpsb
es
cwtl
push
mov
inc
repz
sub
add
and
adc
out
xchg
push
xor
sub
push
hlt
mov
popa
mov
lods
test
add
loop
jle
xor
aaa
xor
adc
mov
sub
mov
aad
mov
mov
lock
cltd
pop
mov
push
mov
pop
jecxz
sbb
loopne
inc
adc
sti
xchg
sahf
sbbl
adc
pusha
mov
jne
cmp
lea
dec
sbb
push
repnz
pop
test
jb
out
jne
fsts
jl
int3
cmp
pop
lods
push
jp
jnp
mov
pop
lods
loop
lea
fisttps
lret
pop
xchg
xlat
xchg
inc
out
bound
add
sub
fstps
in
jns
push
jbe
aam
sbb
mov
mov
lret
stos
movsl
adc
addr16
jecxz
jnp
xchg
roll
or
pushf
sbb
xchg
pop
mov
and
xor
xchg
out
mov
jb
loopne
pop
insb
jbe
jo
add
roll
pushf
push
inc
jmp
mov
xorl
rclb
flds
add
inc
je
xchg
add
jmp
out
sbb
outsb
dec
in
rorb
push
push
clc
popa
adc
dec
mov
xor
cmp
mov
mov
dec
stos
mov
psubq
jmp
dec
leave
adc
in
addr16
and
repnz
xor
dec
inc
loop
and
arpl
mov
addb
mov
adc
leave
daa
adc
mov
mov
xor
aas
rcrl
repz
cmp
imul
hlt
loopne
test
mov
jl
negb
in
arpl
dec
sbb
scas
xchg
out
pop
add
sub
sbb
sbb
out
push
mov
jmp
sbb
and
jae
inc
mov
push
ret
jp
cmp
je
aas
insb
pushf
movsb
mov
push
mov
xor
pusha
lods
vmovss
jmp
xor
vpcmpgtd
pop
jo
adc
xchg
push
fistps
pop
cmp
cmp
icebp
mov
mov
inc
jmp
xor
outsl
sbb
out
mov
and
iret
hlt
shll
adc
mov
call
lds
repnz
sbb
inc
pop
cmp
enter
cmp
jns
mov
lock
adc
mov
ds
add
rclb
mov
roll
int3
sar
repz
dec
and
scas
mov
dec
jmp
daa
dec
mov
hlt
xor
mov
and
adc
sti
fdivr
or
push
and
sbb
jle
scas
jnp
mov
jmp
mov
push
jo
in
mov
stos
shrb
or
rcrb
mov
mov
push
add
pop
inc
ficoml
add
sti
mov
and
popf
xor
cld
movsb
jne
je
add
pop
call
push
imul
xchg
adc
outsb
in
adc
in
int
int
mov
mov
lahf
adc
das
movsl
lret
daa
push
xlat
add
js
popa
ja
adc
xchg
pop
xor
push
sub
sahf
loope
add
loope
js
pop
sarl
mov
loope
call
xlat
hlt
xor
xchg
mov
dec
nop
xchg
popf
and
leave
adc
shrb
test
int
inc
ret
mov
cli
xchg
dec
aaa
arpl
cwtl
sub
pop
or
mov
inc
mov
mov
dec
jmp
xor
inc
lret
test
aam
inc
push
fdivl
xchg
into
adc
popf
xchg
xchg
and
lods
or
mov
loopne
mov
out
pushf
cmp
es
mov
jne
cli
shrl
rorb
xchg
inc
mov
mov
dec
or
out
jne
push
int
popa
roll
popa
xorb
and
jg
int
dec
cmp
js
loope
cmp
or
push
jecxz
or
in
pushf
push
stc
fsubl
movsb
xor
jg
sbb
aas
ja
add
popa
mov
fiaddl
dec
xchg
mov
addr16
out
mov
imul
std
xor
xchg
lods
xchg
dec
xchg
ret
pop
mov
fisubrl
sti
test
jg
dec
in
push
dec
test
sub
inc
call
mov
data16
in
mov
sbb
lcall
inc
mov
mov
scas
jmp
or
lods
aad
scas
in
out
mov
sti
js
add
sub
cli
dec
adcb
jae
fcoml
mov
mov
aas
aad
pop
popa
dec
pop
fiaddl
cmp
jge
add
sbb
sahf
xchg
jnp
leave
cmp
xor
inc
xchg
push
mov
xchg
and
ret
aaa
ret
dec
or
cmpsl
arpl
enter
adc
cwtl
add
gs
jp
lods
cltd
or
mov
arpl
fisttps
jp
add
xchg
in
push
popa
bound
pop
mov
sbb
mov
movsl
xor
inc
test
push
pop
mov
dec
push
out
jecxz
cs
push
add
stos
cmp
nop
daa
pushf
and
xchg
push
icebp
dec
jg
inc
pop
inc
into
add
adc
mov
mov
cmp
jmp
push
adcl
pop
outsl
push
fnstenv
push
inc
cmp
adc
mov
sahf
leave
pusha
cwtl
daa
inc
jno
mov
in
cld
dec
dec
stc
mov
xor
mov
sbb
not
ja
mov
lds
insb
shl
ja
mov
xchg
ljmp
jle
adc
pop
cmp
inc
cs
push
data16
fst
loop
addl
pushf
cmp
ret
cmp
push
push
xor
xor
mov
adc
fiadds
idivl
stc
xor
cwtl
jl
les
addl
xchg
out
test
test
js
test
xor
sbb
sbb
add
cmp
push
xchg
nop
iret
dec
mov
mov
ficoml
jno
rol
test
mov
mov
aaa
jno
aas
push
jmp
sbb
sbb
icebp
popa
or
and
scas
roll
test
sub
xchg
pop
cmp
xchg
or
mov
push
and
sahf
mov
cltd
push
cmp
ljmp
lcall
sbb
dec
cld
dec
mov
cli
rol
mov
adc
or
mov
rorb
ret
jnp
aaa
sub
lahf
inc
mov
mov
mov
leave
std
and
xorb
xchg
mov
das
pop
push
push
pop
mov
cmp
adc
pop
and
fsubp
xor
pop
push
incl
gs
and
xlat
push
nop
cmp
lock
addl
inc
es
addr16
dec
dec
lods
add
adc
push
ss
dec
and
dec
dec
test
jecxz
lret
lret
popa
xchg
add
cmp
xchg
xchg
mov
push
and
and
cld
or
in
mov
adc
pop
xor
push
cld
jnp
mov
push
sbb
fwait
in
cli
icebp
push
lds
jp
or
lahf
sub
dec
pop
mov
pop
add
fistpll
jecxz
xor
dec
mov
ljmp
arpl
daa
mov
movsb
mov
call
sub
lret
add
cwtl
push
add
adc
cwtl
cs
cli
pop
mov
adcl
btrl
lret
fisttpl
shll
add
pop
dec
rcrl
push
cmpsb
ljmp
lea
push
sub
add
pop
into
jmp
pushf
pop
mov
sar
add
ds
or
dec
stos
test
sbb
sub
pop
inc
lock
adc
repz
lods
cmpsb
dec
jno
mov
mov
push
iret
andl
ret
mov
ljmp
outsb
mov
pushf
adc
arpl
mov
nop
int3
arpl
test
jl
pusha
pop
gs
mov
push
stos
sub
mov
and
lret
cmp
pop
ss
pop
and
outsb
pop
add
cmc
adc
les
fsubrl
push
and
rclb
cwtl
adc
enter
jbe
sbb
xchg
xchg
test
popf
rcll
int
gs
call
leave
cmp
xchg
leave
cld
ja
or
mov
mov
sbb
loop
lods
jle
push
dec
fmuls
xchg
and
jle
mov
cmc
or
cmp
sub
pop
pop
and
sbbb
push
bound
mov
shl
sbb
mov
or
sub
push
cmp
and
push
pushf
cmpsl
push
repnz
push
int3
outsl
inc
int3
outsl
bnd
or
pop
ss
push
inc
in
sahf
inc
xor
mov
insb
lahf
or
cli
idivl
addl
dec
xchg
scas
je
dec
ret
push
cmp
xor
insl
add
sub
and
sbbl
mov
push
je
jno
inc
imul
sub
das
or
ret
test
xor
fcoms
idivl
sub
sbb
gs
stc
xchg
inc
mov
dec
jno
popa
je
es
fisubrl
popa
sub
pushf
dec
inc
cli
adcb
xchg
mov
inc
jmp
cmp
cltd
push
aad
sbb
add
ret
in
push
cmp
test
pop
loope
loop
popf
xchg
inc
add
xchg
mov
xchg
mov
imul
aam
xlat
test
lea
cmpsl
mov
scas
add
mov
fmuls
or
lcall
and
inc
mov
ljmp
jne
rcr
ss
insb
dec
aad
test
shll
mov
iret
mov
cmc
adc
mov
xor
dec
insl
mov
iret
or
or
je
adc
mov
push
cmpsl
xor
adc
enter
pop
mov
arpl
int
mov
scas
aaa
stos
pop
push
push
xlat
xchg
icebp
stc
add
xchg
and
adc
pop
add
pop
scas
fldt
cmp
sti
xchg
ss
call
xchg
arpl
test
add
xor
cmpsb
stos
jbe
iret
xor
mov
or
mov
mov
push
rorl
mov
sub
jg
sbb
push
stos
lods
aaa
lea
loope
mov
cmpsb
mov
fsubs
push
lods
and
mov
push
lock
jnp
inc
icebp
fmuls
jae
ret
icebp
mov
push
repnz
out
cmc
adcl
mov
sbb
imulb
lret
cmc
mov
inc
sarl
cs
out
mov
dec
aad
add
ss
ja
adc
xchg
jl
pop
mov
adc
xchg
lods
pop
daa
adc
fstps
mov
dec
daa
jbe
cmp
sbbb
loop
cmp
or
inc
push
sub
sbb
out
pop
mov
cld
xchg
test
sbb
adc
jae
std
inc
sahf
mov
jecxz
sub
cmp
sub
pop
adc
fs
enter
and
mov
loopne
js
jo
pop
clc
mov
fstp
pop
rcl
dec
jne
jns
adc
out
push
and
std
cmp
fistpl
ljmp
popl
inc
mov
xor
and
adc
lea
xchg
imul
out
lret
xchg
inc
ss
dec
pop
hlt
add
jl
std
xlat
mov
insl
arpl
push
adc
or
pop
adcl
sbbb
cli
lcall
outsl
addr16
outsl
mov
add
inc
pop
push
lcall
fld
or
negl
xchg
outsl
mov
aam
push
movsl
lcall
in
mov
scas
inc
xchg
psllq
push
cmp
mov
push
stos
and
scas
push
sbb
push
ret
jl
bsf
sbb
jo
es
sahf
repz
adc
and
js
std
lret
push
repnz
sub
mov
adc
std
dec
and
rclb
js
or
and
lcall
nop
sub
add
test
sub
jbe
cld
inc
popa
dec
xor
dec
jle
mov
push
xor
or
sub
jb
add
ds
shll
popa
or
and
mov
cmp
dec
in
cmp
adc
push
loopne
jno
inc
testl
movsl
or
add
mov
stos
jbe
mov
iret
loopne
jge
mov
sub
sub
push
mov
and
mov
roll
popf
insl
or
xor
cmp
mov
adc
push
shl
sti
fmul
jae
in
leave
mov
or
ds
int
pop
lahf
fdivrl
or
mov
mov
lret
mov
mov
fldcw
jb
jns
dec
iret
or
or
lahf
into
hlt
sub
iret
mov
xchg
mov
cmpsl
fstpt
or
ret
insl
adc
lods
dec
jg
shl
add
jnp
out
jmp
dec
and
mov
sbb
sub
pop
sbb
pop
xchg
mov
jo
jge
dec
in
push
xchg
test
mov
inc
mov
gs
dec
mov
xor
nop
sub
loopne
jne
pop
xchg
daa
xor
repnz
pop
data16
psubq
sbb
std
push
xor
mov
jo
xor
jmp
cmpsb
out
aad
loop
and
dec
popf
fdiv
inc
call
ffree
push
ss
aas
psraw
jns
pop
dec
mov
int3
outsb
mov
jp
pop
int3
and
mov
pushf
jmp
cli
pop
sarb
lcall
movsl
outsb
stos
adc
ljmp
cmpl
fistps
xchg
lods
das
in
in
popa
or
outsl
mov
or
fmull
push
aas
lods
push
outsb
dec
rolb
and
inc
andb
in
cmp
dec
fldl
pop
and
cmp
jge
pop
pop
adcl
mov
cmpl
jg
xlat
ret
sarl
int3
adc
add
sti
and
push
cmp
out
scas
push
xorl
cmp
mov
jecxz
lcall
insb
ror
ss
cmpsl
movsl
mov
rcl
aad
inc
lods
mov
cmp
xchg
mov
xchg
or
jne
xchg
movsl
sub
sub
test
movsb
cmp
mov
mov
xor
add
sbb
add
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
xor
xor
mov
orl
add
movl
cmp
je
movl
mov
jmp
movl
mov
cmp
movl
jne
push
jmp
mov
mov
movl
cmp
jne
mov
or
mov
mov
xor
subl
add
mov
and
mov
neg
mov
mov
xorl
xor
sbbl
jmp
push
mov
notl
xchg
jbe
mov
jmp
jp
adc
outsb
sbb
xchg
jae
cmp
mov
push
arpl
dec
out
pop
inc
push
jnp
in
xor
dec
or
cltd
rol
xchg
pop
ror
add
inc
mov
sbb
fsubs
and
pushf
mov
xor
mov
dec
sub
or
adcl
pop
test
loope
pop
test
fdivs
testl
pop
outsb
mov
ja
stos
jg
xlat
pop
and
mov
in
out
or
xchg
out
and
adc
mov
xchg
sub
fildl
pop
push
push
jno
or
mov
lds
adc
divb
enter
lods
mov
inc
sbb
int
add
push
jb
and
jne
push
test
out
inc
aaa
cltd
movsl
iret
and
inc
xor
jne
inc
sbb
pop
xchg
ja
cmp
xchg
imul
fs
in
mov
cwtl
out
pop
jge
subl
sti
ret
sbb
add
sub
jg
cs
in
and
movsb
mulb
mov
out
inc
mov
inc
out
stos
cmpsl
inc
xchg
add
pop
xor
cli
idivl
inc
rcrw
mov
pushf
sbb
push
cmp
add
flds
jae
cmp
sub
sbb
mov
cmp
push
mov
xchg
mov
stc
mov
add
pop
pop
sbb
lcall
out
push
sbb
mov
cwtl
or
or
stc
sbb
push
shrb
addb
add
out
cmp
js
pshufw
or
mov
leave
imul
iret
arpl
or
test
inc
cs
es
sbb
lret
repz
sub
and
xor
lods
mov
outsb
push
push
lock
sbb
add
pop
mov
ret
stc
sub
xor
ljmp
mov
cmp
add
movsb
scas
test
fiadds
lcall
and
jecxz
adc
push
ret
in
dec
imul
out
jecxz
dec
mov
negb
rcrb
enter
sbb
aas
lds
adc
imul
sub
xorb
jmp
xchg
sbb
ds
daa
pop
shll
sub
cmpsb
movsl
inc
pop
in
jno
mov
xchg
mov
xchg
cmp
jb
movsl
out
sti
inc
lods
push
mov
mov
sub
sbb
clc
icebp
mov
repnz
stc
sbb
int3
js
adc
pop
sub
arpl
mov
into
lods
mov
dec
add
add
test
cmp
or
mov
je
mov
push
pusha
xor
lods
notl
and
mov
fldl
xlat
adc
jno
mov
out
pop
cmp
inc
addr16
clc
je
dec
or
xchg
jl
inc
mov
arpl
fisttpl
push
es
shrb
mov
imul
sbb
in
enter
cmp
les
fxch
test
mov
sbb
daa
cmp
push
xlat
stos
cmp
fwait
enter
sub
cmp
cmp
xchg
das
mov
bound
cltd
dec
xchg
ds
ret
test
std
mov
jnp
stc
lds
xchg
fsts
into
mov
jg
dec
mov
sbb
mov
cmpsl
cmp
and
pusha
add
aas
sub
jmp
push
pop
fxch
lock
dec
iret
jbe
mov
inc
pop
xchg
push
jne
sub
pop
shll
imul
scas
imul
mov
mov
sub
xchg
inc
lods
test
stos
movsb
les
flds
ss
adc
mov
jge
mov
addr16
mov
jg,pn
stos
pushf
fsts
cmpsl
pop
scas
outsb
sbb
jge
vphaddubw
roll
add
pop
insl
jmp
mov
push
movsl
call
adc
out
fisttpl
jecxz
add
nop
shrl
daa
mov
cs
ret
cmpsb
xchg
outsb
mov
repnz
push
sbb
int3
aad
dec
cmpsl
in
push
pop
sbb
xchg
add
shl
xchg
dec
push
pop
sub
push
icebp
frstor
sbb
stos
and
mov
xlat
cmp
xor
adc
fstps
push
xor
shl
mov
loopne
fwait
cmp
arpl
jmp
adc
repnz
inc
jg
or
es
shlb
test
push
inc
jae
and
push
dec
data16
or
push
in
lret
lret
push
jb
cli
out
popf
pop
dec
inc
pop
les
outsb
jbe
insl
jne
push
inc
mov
enter
mov
mov
icebp
es
or
cwtl
out
mov
inc
aad
add
bound
mov
insb
aam
and
hlt
mov
scas
fs
mov
jno
push
mov
lret
in
jmp
jmp
inc
pop
inc
scas
aam
xchg
fdivrl
mov
test
lret
pusha
xor
dec
xlat
insb
sar
jmp
pop
fs
jge
rorb
cmp
mov
loopne
leave
mov
push
mov
ret
cmp
pop
add
std
jo
pop
xlat
mov
std
adc
jnp
dec
enter
push
sub
cmp
mov
outsl
xchg
push
pop
add
lcall
and
mov
adc
jns
sbb
insl
xchg
cmp
sbb
comiss
fnstenv
sub
mov
clc
push
xchg
out
mov
jbe
int3
add
gs
dec
aam
outsb
and
or
pop
fidivrl
cwtl
mov
jecxz
mov
sbb
in
das
lret
rcrb
mov
test
cmp
mov
mov
aaa
jmp
cmp
das
jmp
loop
mov
jno
adc
add
mov
add
adc
fcoms
ret
jb
std
insb
adc
push
out
lds
cmpsl
ror
push
pop
jmp
mov
dec
addl
push
jp
pop
popf
enter
xchg
xchg
out
fucomip
sbb
shll
test
mov
mov
stc
es
daa
mov
das
leave
enter
xor
mov
push
inc
ja
shr
sub
jp
xor
pop
sub
mov
xchg
ljmp
pop
repz
add
add
outsb
clc
sub
adc
sbb
push
fldl
jl
aas
ret
ffreep
aas
je
mov
sahf
mov
test
xor
mov
jns
inc
dec
adc
stc
jp
subb
lock
mov
mov
nop
stos
cli
jnp
sbb
call
jno
loop
fdivrp
stc
jbe
cmp
cmp
inc
xchg
loop
mov
inc
cmpsl
dec
mov
jb
les
es
push
dec
mov
les
jecxz
xchg
add
sbb
in
out
test
xlat
jecxz
push
pop
jnp
rcrl
add
ja
xor
fsubrs
cmpsb
aas
test
dec
push
cmpsl
and
inc
jmp
test
inc
imul
sub
test
sbb
mov
or
push
int3
sbb
test
push
jmp
inc
dec
mov
sub
xorl
lock
mov
mov
push
insl
cs
push
and
xor
mov
mov
aad
ja
lahf
pushf
pop
jge
sahf
pusha
jo
leavew
aaa
mov
stos
mov
xor
inc
jo
neg
mov
pusha
mov
imul
adc
xor
in
xlat
ljmp
test
arpl
jp
jno
mov
xchg
pop
jno
pop
adc
aaa
adc
adc
daa
sub
lahf
xor
lret
and
les
mov
in
push
movsl
mov
jbe
loop
mov
mov
cmpsl
lahf
mov
or
dec
shr
sub
mov
push
shll
or
insl
in
popa
jb
adc
and
xor
pusha
pop
aas
inc
add
bound
pop
and
dec
mov
pop
inc
aam
sbb
and
mov
enter
fdivrl
add
std
and
jmp
inc
or
into
imul
xor
mov
xlat
inc
loopne
dec
ret
lcall
test
outsb
stos
dec
sti
incb
inc
mov
lret
pusha
call
sbb
push
jae
and
out
pop
les
fbstp
and
push
call
rclb
outsb
push
push
int
ds
imul
loop
push
cltd
pop
data16
sub
and
jmp
and
mov
popa
bound
in
xchg
and
adc
fimuls
pop
fisubs
add
test
scas
cmp
shrl
lds
mov
or
mov
fwait
sbb
iret
cmpsb
cmp
out
cli
int3
cwtl
js
jno
jne
push
mov
or
arpl
jae
iret
lds
mov
push
pop
stos
ds
mov
aaa
add
rclb
iret
xchg
adc
adc
lahf
imul
inc
ss
lock
sbb
mov
sub
mov
sbb
adc
imul
push
js
jge
addr16
fptan
lods
pop
lahf
or
adcb
sub
sarb
lahf
in
cmp
pop
jl
or
pop
leave
push
insb
mov
cmc
inc
mov
ret
xlat
cmc
nop
andb
cmp
dec
dec
sub
inc
stos
mov
xchg
or
mov
dec
inc
shrl
stos
leave
outsb
test
sbb
call
mov
mov
inc
and
scas
insl
jecxz
push
dec
or
je
mov
push
lahf
jmp
mov
ror
dec
repnz
repnz
gs
jp
jecxz
lds
sbb
jmp
mov
fwait
adc
das
pop
sub
scas
fisubl
dec
sbb
jle
insb
std
and
xchg
add
aam
mov
jns
daa
sbb
and
xor
pop
xor
stos
xor
lret
lret
inc
ficoml
aam
mov
mov
push
sub
in
pop
and
clc
pop
inc
aaa
outsb
mov
das
imul
loop
loope
mov
jecxz
js,pn
je
mov
xchg
outsl
sub
es
jp
add
test
dec
cltd
adc
push
mov
xchg
xlat
std
xchg
adc
cmp
dec
inc
mov
popa
adc
gs
jnp
and
jecxz
shlb
mov
add
jns
cmp
mov
stos
lods
sub
popl
inc
xor
shl
pop
ret
inc
cld
inc
jle
mov
sbb
mov
pop
push
outsl
out
lds
mov
pop
int3
in
ljmp
in
push
inc
movsl
push
leave
pop
push
in
fcomp
idivl
leave
es
cmp
sub
lock
data16
shll
add
adc
iret
mov
pushf
push
push
cmp
call
push
fistps
push
push
push
mov
insb
test
iret
xchg
ret
test
test
lods
pop
negb
mov
out
and
and
mov
je
mov
push
pop
pop
daa
fcmovnb
lea
movsb
mov
jp
sub
scas
in
adc
sti
cmpl
xlat
loop
xchg
dec
scas
push
xorb
testb
push
movsl
outsb
cmc
dec
or
lods
dec
mov
mov
push
xor
or
fmuls
push
outsb
in
mov
mov
shrb
jp
dec
loope
dec
lods
sub
mov
stos
sarb
add
ret
popf
push
test
stos
loope
mov
jbe
ficoml
mov
int3
xor
mov
add
call
mov
push
mov
lock
pop
jl
xchg
enter
adc
sti
mov
jnp
cli
mov
push
or
lea
cmp
add
pop
adc
fmuls
sbb
xchg
jmp
jae
out
xor
xor
xor
mov
popf
popa
adc
dec
rcrl
sti
or
cmpsb
adc
sub
rorl
sub
jmp
fsub
loope
rcr
push
or
xchg
mov
cwtl
mov
test
in
stos
adc
adc
jnp
jo
data16
ret
mov
loop
inc
std
add
jg
ret
dec
adc
adc
jae
insb
xchg
inc
arpl
ret
pop
add
out
push
or
cmp
out
out
hlt
xor
sub
insb
adc
adc
and
add
scas
rcr
jge
mov
mov
add
mov
jecxz
test
fcmovb
mov
sahf
sbb
or
mov
adc
cmp
les
bswap
mov
sbb
pop
cmp
pop
je
sbb
pop
cld
add
adc
add
mov
mov
les
pop
addr16
dec
cld
testb
jae
jp
adc
and
add
aad
mov
sub
fcoml
dec
mov
mov
out
pop
scas
movsl
sub
mov
in
mov
add
push
mov
test
roll
rol
lds
mov
aad
imul
sbb
pop
imul
nop
les
jg
sub
mov
pop
aas
das
lds
inc
icebp
push
outsl
ret
cmp
mov
inc
dec
jle
mov
and
out
test
shlb
xchg
stos
imul
ret
jns
lods
addr16
xchg
inc
sti
dec
lods
inc
loopne
push
mov
fisubrl
loop
or
jle
orl
adc
and
or
xlat
loop
jmp
xchg
push
dec
shlb
mov
fs
into
arpl
movsb
inc
int
adc
jns
sbb
cwtl
or
inc
and
insl
ss
push
adc
xor
pop
pop
lret
mov
sbb
popf
les
stc
ljmp
inc
inc
mov
jb
sbb
sub
jg
imul
inc
jl
and
adc
sub
test
or
outsb
adc
add
js
adc
sbb
cmp
sahf
mov
lahf
dec
and
sti
push
stos
jno
lcall
adc
in
pop
add
divl
loop
mov
xor
js
adc
dec
mov
push
shlb
scas
sbbb
pusha
jb
lcall
popf
cmpsb
mov
arpl
push
mov
rorl
push
mov
insl
movq
xchg
imul
dec
mov
jo
dec
int3
sub
int3
and
or
pop
cs
in
push
jmp
scas
in
push
addr16
in
movsb
movsl
pop
sub
data16
mov
add
stos
adc
or
fstp
inc
cmc
jl
lret
test
push
sub
cs
mov
roll
divl
push
push
mov
aam
inc
push
nop
jmp
push
and
inc
fiadds
insb
dec
xchg
pop
daa
cld
js
jle
call
xchg
adc
inc
inc
sbb
dec
push
xor
jno
mov
mov
les
xor
dec
mov
dec
in
or
shrl
cltd
test
sbb
pop
sub
jo
insb
pause
mov
mov
mov
inc
and
pushf
mov
aas
sub
ljmp
out
sbb
adc
fildl
jb
addr16
push
push
sub
pop
mov
insl
ffree
cmpb
xchg
xchg
dec
mov
and
jmp
sbbb
out
dec
into
dec
aaa
lcall
push
in
push
lea
xchg
or
testb
popa
stos
cmp
in
add
and
data16
add
int
iret
jg
clc
in
imul
aam
jno
dec
inc
mov
test
adc
xor
ficompl
fmuls
mov
call
stos
ss
add
xor
aad
sbb
cmp
jae
lea
push
lock
fisubrl
cmp
xchg
sub
or
in
sbb
icebp
inc
lret
add
rcrl
sub
aaa
clc
fadds
sahf
pop
cli
jge
pop
inc
imul
jl
sub
cmovae
incb
int
push
or
fidivl
iret
scas
add
ficoml
adc
pop
bound
cmp
hlt
ret
and
inc
add
in
adc
fisubl
pop
adc
jbe
lea
xchg
addr16
sbb
mov
pushf
fsubl
and
or
dec
icebp
xchg
sarl
movsb
gs
clc
pop
fnsave
dec
add
dec
xchg
aad
addb
scas
test
scas
pusha
cmp
out
adc
movsl
cmp
data16
fistps
add
xchg
incb
sahf
mov
xchg
xor
enter
sahf
insl
xchg
mov
cmc
test
arpl
push
scas
jmp
lods
cmp
aam
out
mov
cmc
nop
into
sub
sbb
mov
repnz
movsl
in
mov
xor
lcall
inc
pushf
fdiv
rcrb
mov
or
pop
mov
mov
addb
adc
push
test
mov
sub
jp
xchg
fdivrp
mov
aas
jae
dec
dec
loopne
mov
jne
pop
into
ret
hlt
je
loop
subb
jmp
and
movsl
push
sbb
movsl
xor
fcompl
sbb
test
sub
daa
sub
hlt
pushf
sti
sub
xchg
inc
push
cmp
xchg
in
pop
jmp
das
cmc
sbb
fsub
push
ja
cwtl
dec
sbb
dec
in
mov
sti
negb
add
xor
ror
test
mov
cmpsl
sub
rclb
fldenv
sbb
pop
mov
add
nop
ficoms
pop
je
test
inc
cmp
push
inc
xor
jecxz
icebp
cwtl
push
xchg
scas
int
jmp
insb
mov
adc
sbb
aam
sbb
out
jae
xor
or
inc
rorl
mov
pop
mov
xchg
mov
popl
jnp
movsl
js
xchg
idivl
push
cmp
sbb
mov
cmp
pop
xor
icebp
in
lret
jne
cwtl
add
fs
scas
ret
add
cmp
mov
mov
in
mov
pop
lds
sbb
ret
sbb
mov
lret
dec
push
repz
add
pop
push
lea
adc
inc
enter
xchg
lret
mov
dec
mov
lock
or
loope
dec
push
sbb
cmpb
xor
xor
mov
jmp
cli
movlps
aam
cmp
xor
sbb
js
out
fstpt
incb
hlt
ljmp
aad
in
add
lods
icebp
mov
and
mov
mov
ret
fistl
movsb
mov
das
xchg
in
pop
add
stc
test
leave
popf
in
xchg
cmp
dec
xchg
inc
fadd
push
popa
test
mov
xchg
les
clc
lock
stos
sbb
push
xlat
adcl
push
adc
rcll
call
fdivrs
inc
mov
cmc
jp
adc
mov
add
imul
dec
sub
mov
sub
jae
ljmp
add
xchg
dec
ljmp
hlt
add
cmp
push
mov
lret
mov
in
movsl
loope
sbb
cmp
adc
mov
into
and
pop
add
mov
sar
sub
je
js
sti
pop
inc
ja
ret
sbb
xor
cmp
aas
subb
jp
popf
int3
cmp
cli
in
out
ja
imul
pop
jns
icebp
mov
loope
pop
call
in
mov
adc
aas
push
jnp
out
push
shrl
ljmp
adc
mov
mov
out
pop
adc
pop
lds
jmp
insb
ss
mov
inc
cmc
scas
xor
daa
imul
push
fwait
ja
aam
mov
negb
xor
push
fdivl
jg
sbb
testl
pop
inc
sbb
add
jno
xorl
xchg
sbb
pop
dec
sub
add
loopne
add
mov
lcall
dec
fsubl
outsl
push
xlat
xor
push
inc
loop
jl
pop
jbe
sarl
cmpsl
test
pop
cwtl
mov
inc
cmp
lock
call
jno
sub
and
adc
cli
adc
mov
jge
loopne
enter
xchg
rorl
loop
mov
cmp
sti
insb
mov
sbb
add
cmp
dec
lods
mov
cmp
scas
mov
mov
xor
nop
test
outsb
out
mov
popa
add
sbbl
rcl
or
bound
icebp
pop
clc
jo
dec
cmp
dec
aam
xchg
lds
push
jge
shll
xlat
cmp
lahf
test
push
inc
push
lock
stos
mov
jae
popf
or
out
xchg
xor
adc
mov
outsb
jae
in
ret
subl
cmp
jg
push
push
pop
jb
les
adc
stos
or
into
faddl
movsb
xchg
ljmp
sbb
lret
inc
fnstenv
xchg
pop
pop
jmp
sub
xchg
iret
nop
ret
rcrl
lods
sti
mov
push
shrl
test
repz
xchg
inc
ret
cmp
dec
push
add
cmp
ljmp
into
fildl
mov
mov
xlat
jge
jbe
fisubrs
lods
mov
stos
rcrb
pop
add
fldenv
notl
lahf
je
pop
pushf
fidivrs
and
je
push
pop
or
sbb
hlt
jo
inc
fadds
into
or
pop
xchg
call
cmp
xor
sbb
mov
repz
push
or
ja
icebp
jg
push
push
cli
lods
xchg
mov
movsb
sub
je
loope
int
les
test
test
or
mov
rcrl
adc
fdivr
jg
rcrb
dec
sti
sub
sub
push
aam
inc
jnp
imul
addb
xchg
xor
mov
push
pop
loopne
mov
mov
mov
in
jne
push
sbb
inc
dec
shrb
fs
xchg
add
add
and
adc
push
ficoms
data16
pop
mov
xor
push
js
inc
jno
add
push
pusha
sub
pop
jnp
ljmp
inc
pop
cwtl
in
sub
adc
in
fldcw
jb
cmpsl
mov
add
mov
dec
jo
jmp
dec
ss
mov
gs
add
insl
sbb
xor
jp
call
push
aam
mov
mov
ud0
or
push
add
adc
and
jp
stc
mov
cmp
push
stos
sub
xor
push
add
imul
lods
sar
jo
lock
mov
fdivl
loopne
mov
inc
cwtl
xchg
cmp
faddp
lret
ds
cli
xor
addb
stc
stos
mov
jno
add
dec
jg
loop
pop
test
mov
repnz
inc
int
loop
scas
adc
pop
push
adc
insl
insb
xchg
and
push
dec
fimull
inc
inc
clc
and
jne
std
dec
lods
jecxz
xchg
pop
or
mov
pop
mov
loopne
pop
jne
outsb
xor
cmp
out
mov
mov
and
and
jo
mov
in
scas
mov
jle,pt
and
cli
sbb
loope
cli
int
or
inc
pop
into
add
push
es
pop
cmp
lret
out
add
push
mov
out
adc
stos
jle
sarb
shrb
ret
movsl
and
add
mov
das
pusha
stos
jae
mov
push
inc
inc
mov
loope
hlt
cli
repnz
popf
jne
jmp
pop
adc
fcompl
sti
xlat
jb
xchg
jns
push
xchg
xchg
or
adc
jne
ss
sub
dec
pop
test
xchg
lods
clc
mov
arpl
pop
and
sub
insl
stc
scas
insl
js
into
gs
leave
xchg
cmpl
pop
xor
mov
xor
inc
mov
leave
or
jo
pop
fisubl
adc
mov
cmp
cmp
sbb
jmp
hlt
sbb
add
push
fcoml
ja
imul
rcrb
mov
jb
int
cld
push
insl
movsl
in
push
ret
sub
jp
lret
aam
or
stos
cmp
lret
xor
mov
bound
bound
std
mov
push
dec
inc
fcomp
jmp
sub
pop
icebp
mov
dec
movb
mov
out
xor
into
mov
mov
push
add
aaa
rorl
enter
les
fistl
aad
mov
shll
dec
cmpsl
inc
adc
outsl
loope
jne
xchg
xchg
add
aad
and
xchg
out
jge
arpl
mov
and
dec
ficoml
into
sbbb
pop
jae
push
add
inc
shr
lods
push
lret
sub
dec
pop
or
lock
dec
xchg
popf
or
insl
daa
xchg
int3
xlat
inc
dec
sub
xorb
aas
loopne
add
ljmp
inc
dec
cmp
jg
ljmp
cmp
mov
in
ds
xchg
or
cmpsl
lods
in
mov
or
stos
test
test
sbb
addr16
xchg
aam
jae
fs
pop
into
jge
mov
clc
cmp
jne
and
rclb
push
jle
arpl
pop
mov
xor
addr16
mov
lods
cltd
in
sub
pop
rcll
mov
or
ljmp
jbe
out
mov
ret
ret
jb
pop
mov
xlat
aaa
aas
push
cld
inc
in
and
mov
adc
sti
xor
cwtl
dec
imul
xor
xor
pop
ret
sbb
inc
pop
or
pop
leave
mov
cmp
pop
popf
or
cs
or
dec
jno
vpsubusw
imul
and
shll
add
lock
sarb
or
sahf
mov
mov
mov
push
shlb
jge
cmp
je
xchg
push
cwtl
cltd
shll
push
loope
mov
in
inc
mov
inc
aam
aam
sub
or
outsb
cli
cmpsb
cmp
cmp
xor
push
push
push
mov
push
jmp
ja
xor
xlat
aaa
jns
aam
clc
cmp
subb
pop
outsl
outsl
pop
call
shll
fcmovb
inc
in
xchg
fcmovu
dec
jns
sbb
fidivs
and
push
adc
cli
xor
fimull
mov
pushf
cwtl
adc
pop
or
xchg
fimull
addr16
jae
xchg
into
test
or
dec
xchg
mov
aad
bound
dec
shrb
jne
bound
xor
cs
xchg
jae
pop
leave
sub
jnp
fsubp
outsl
cli
mov
xor
ja
dec
dec
jl
test
adc
mov
stos
or
and
cmp
fwait
lods
sub
fisubs
stc
out
fbstp
xor
sub
mov
mov
sub
out
add
mov
je
fldl
rorb
out
add
ret
push
mov
sbb
push
pop
pop
dec
in
popa
xchg
jnp
mov
or
in
dec
pop
cli
xor
loop
ficoml
xchg
ss
jo
out
dec
pop
push
jecxz
into
rorl
pop
aam
mov
mov
repz
rorb
and
pop
imul
ds
in
into
arpl
sub
or
mov
movsb
imull
mov
daa
mov
mov
inc
cmp
adc
dec
fs
lds
lods
jecxz
popf
dec
xchg
mov
cmp
sti
and
jbe
xor
pushf
pushl
dec
pop
pop
test
scas
adc
sbb
cmp
in
dec
xorl
add
adc
pop
into
ljmp
sub
push
or
jge
divl
sbb
xchg
movsb
push
mov
hlt
nop
or
fidivl
dec
test
add
or
cmp
xor
sbb
nop
cmpl
pop
xchg
push
jle
mov
mov
aad
rcll
jg
mov
test
add
ljmp
xor
insb
jmp
jbe
enter
or
xchg
call
js
mov
repz
mov
popa
int3
jecxz
dec
je
ds
sbb
es
mov
fldenv
nop
add
dec
cmp
jo
inc
xor
ds
and
out
or
imul
fmuls
mov
and
mov
add
adc
cmpsb
pop
loop
or
xchg
jo
mov
cltd
jmp
iret
std
test
cmp
and
out
pmaxsw
in
or
mov
jne
insb
jns
test
mov
jp
out
outsl
mov
dec
out
je
mov
mov
push
jmp
je
mov
push
or
or
clc
push
test
push
int3
jge
push
cmp
push
fstps
out
dec
xor
js
mov
mov
inc
outsb
and
sub
push
aad
lock
adc
sbb
pusha
test
stos
cmpsl
jle
push
add
adc
pop
pop
pop
scas
mov
sti
inc
cwtl
jno
xor
int3
out
and
lods
mov
addl
add
sti
mov
fcmovnb
cmp
xchg
sbb
in
cmpsb
push
dec
xchg
jl
cmp
test
divl
roll
lock
iret
inc
pop
inc
mov
out
ljmp
add
test
sets
push
xchg
and
je
push
stc
push
scas
jl
test
mov
in
loop
add
insl
mov
sub
or
add
mov
imul
cltd
sti
sub
jmp
mov
mov
enter
jl
std
pop
jmp
and
xchg
popa
sub
adc
mov
jl
pop
push
sar
adc
lret
mov
mov
dec
pop
push
push
sub
xchg
inc
arpl
mov
fildl
inc
and
daa
jecxz
orl
dec
push
and
and
add
ror
pushf
xchg
mov
add
js
rorb
pop
push
loop
lret
outsb
shrb
mov
xor
ss
int3
xlat
xor
and
pop
add
adc
push
cli
add
inc
outsb
xor
mov
adc
shrb
sbb
pushf
xor
out
push
mov
xchg
ret
divb
in
imul
mov
add
imul
or
mov
orl
xor
andl
add
movl
cmp
mov
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
add
add
mov
sub
mov
xorl
xor
add
sbbl
imul
movl
mov
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
adc
mov
mov
mov
mov
sub
add
xor
mov
add
mov
inc
mov
sub
add
adc
mov
mov
xorl
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
jmp
stc
add
pop
push
sti
or
mov
shll
jp
sbb
jp
xlat
jb
scas
push
xchg
mov
loopne
xor
jmp
aas
divb
inc
push
jo
test
daa
sar
test
stc
xchg
fdivrs
xchg
add
mov
adc
jae
out
jg
dec
pop
cmp
ds
fnstenv
out
lock
or
dec
cmp
and
aad
call
loope
and
add
mov
sbb
clc
sarl
add
sti
pop
jae
stc
int
js
fstp
lea
shrl
in
xor
fnstenv
adc
jg
in
pop
stos
mov
and
xor
xchg
add
rolb
ror
test
mov
out
insl
fcmovbe
out
mov
adc
or
fwait
int
arpl
sbb
adc
movsb
pop
test
cmp
pop
mov
pop
adc
jo
mov
test
ja
sahf
das
lcall
sub
in
movsb
pop
inc
add
leave
push
ds
subl
cmpsl
add
shlb
mov
ja
loope
jmp
sbb
nop
pop
xorl
mov
lods
jo
les
subb
inc
mov
outsb
shll
mov
in
shrl
mov
mov
xchg
lcall
mov
mov
insl
dec
or
xchg
dec
daa
mov
int3
ficompl
push
jnp
cmp
ljmp
mov
out
pop
pop
mov
push
and
scas
clc
add
icebp
lcall
lods
clc
mov
add
insl
sbb
push
ljmp
stc
in
js
xlat
lret
and
popf
push
popa
outsl
leave
xlat
adc
inc
mov
push
adc
xchg
aam
stos
xor
fscale
sub
cmp
fldcw
xchg
stos
data16
lret
into
jbe
mov
push
sbb
fs
xorl
xor
stos
push
mov
mov
or
mov
fdivl
xchg
mov
movsb
xchg
mov
jne
push
mov
ficoms
or
push
stos
ret
xchg
ss
hlt
js
movsl
in
sahf
loop
cld
push
dec
mov
jno
push
aad
sbb
cmc
inc
adc
mov
shll
jecxz
jg
mov
pop
je
push
mov
lahf
cmpsb
pop
fidivrl
out
aas
mov
add
inc
sahf
pushl
mov
xor
dec
addr16
out
rclb
shrb
mov
jmp
mov
sub
add
out
mov
in
or
push
push
xor
icebp
repz
and
roll
sbb
cmp
je
or
xor
int
cmp
lea
pop
dec
clc
cltd
cmc
das
sub
add
imul
mov
fimuls
aaa
lock
inc
pop
push
insl
repnz
cmpsb
sahf
add
adc
pop
stos
mov
or
cmpsl
jmp
or
fisubrl
insb
sub
add
xor
testb
adc
loop
pusha
ret
mov
sbb
out
jle
jecxz
je
jmp
jp
xor
aam
jmp
xor
cmp
pusha
sbb
push
xchg
xor
mov
cmp
arpl
cltd
inc
xor
outsl
pop
pop
je
popf
or
or
and
lock
pop
mov
imulb
adc
mov
insl
imul
pop
ret
call
mov
icebp
ret
mov
push
loop
pop
pop
mov
into
push
pop
test
jmp
sbb
pushf
pushf
imul
mov
xchg
jno
in
add
in
pop
jp
repz
ret
push
xor
mov
push
cs
or
fdivs
mov
dec
aam
mov
mov
push
daa
push
je
cmp
into
mov
xlat
add
jbe
push
jecxz
jae
shrb
dec
popa
xor
xor
adc
pop
xor
leave
fisubs
push
icebp
push
dec
and
cli
lods
pop
cmp
sbb
sub
cmc
pop
mov
xchg
daa
daa
inc
in
adc
sets
add
jnp
pop
sbb
daa
rorl
or
mov
arpl
add
inc
ret
aam
xchg
cld
sub
pop
aam
jmp
jb
cwtl
hlt
shll
and
in
add
dec
ds
nop
test
andl
adc
int
dec
push
and
mov
or
jnp
aas
xor
shl
mov
ja
sbb
inc
pop
or
dec
test
xchg
pop
inc
daa
jp
xor
xchg
out
outsb
inc
nop
mov
leave
push
outsb
xchg
push
push
pushf
cmp
pop
orb
mov
out
imul
mov
in
mov
mov
mov
adcl
icebp
pop
xchg
mov
sub
aam
in
fidivl
scas
or
ret
adc
inc
cmp
mov
ret
add
jmp
adc
adc
mov
dec
xor
cwtl
sbb
stc
cltd
lret
xlat
jbe
push
icebp
test
nop
sub
ja
and
sub
pop
pop
lret
lods
sbb
mov
cmp
decl
into
pop
jnp
mov
and
xor
out
dec
lret
fucomp
movsl
div
and
ret
aad
or
inc
fs
lea
jecxz
jle
or
inc
push
popf
clc
sbb
cmp
inc
fldl
adc
xchg
aaa
mov
cli
daa
bound
mov
testb
mov
lds
dec
jo
ljmp
roll
lret
inc
sbb
jb
add
mov
repz
adc
adc
aas
nop
aaa
pop
jge
lret
movsb
cwtl
lea
lods
imul
push
pop
fwait
sar
cmpsb
add
enter
lea
lea
push
dec
or
ss
hlt
jnp
sbb
ds
call
add
loope
adc
stc
fimuls
adc
and
ljmp
or
notb
fisttpl
lock
or
insb
dec
popa
dec
sub
iret
push
gs
xor
mov
int3
xchg
clc
jl
out
mov
xchg
sahf
iret
aaa
and
or
stos
gs
lods
dec
ja
jmp
loop
daa
mov
insb
or
andb
push
int
loope
das
cmp
imul
push
xchg
push
add
movaps
mov
int3
pop
gs
add
mull
aaa
int3
int3
jmp
repz
mov
push
lret
addb
insl
aaa
pop
scas
ffree
fs
rcr
push
icebp
movhps
inc
and
add
push
inc
add
lods
and
mov
mov
and
jmp
clc
into
cltd
adc
jl
int
lret
call
es
ja
imul
jl
xchg
pop
sub
es
fdivrp
jnp
xor
cmpsl
add
xchg
adc
out
fnclex
out
ljmp
cmc
cmp
ror
cltd
repz
hlt
push
or
and
xchg
movsl
mov
and
and
and
sbb
or
popa
addr16
pop
pop
leave
dec
xchg
add
sbb
movsb
insl
sbb
enter
add
mov
jne
xchg
mov
push
test
cmp
idiv
mov
sbb
jns
adc
cmpsl
xchg
jle
pop
push
mov
andl
stc
mov
call
dec
mov
xchg
ret
push
cltd
jmp
sbb
lcall
push
rol
xor
push
sub
pop
push
push
fdivl
push
jne
data16
loop
mov
and
pop
jmp
rcrl
mov
xchg
cmpsl
sbb
subl
popa
das
aaa
jmp
shll
andb
xor
sarl
jne
or
out
push
inc
xlat
nop
jnp
aas
mov
pushf
inc
out
push
jne
jecxz
dec
lock
xlat
gs
xchg
lods
nop
pop
push
cs
shl
mov
call
xchg
jle
xlat
mov
adc
sarl
xchg
lods
dec
sub
sti
xor
cmp
add
push
pop
mov
idiv
and
mov
mov
fsubrs
mov
mov
push
xchg
arpl
pop
repz
jg
and
rorl
jg
dec
pop
mov
inc
adc
repnz
dec
and
mov
stc
adc
out
notb
ret
mov
push
mov
add
outsl
xor
adc
pop
in
mov
pop
int
lods
imul
ret
aam
movsl
dec
jno
mov
sar
mov
inc
enter
jmp
push
pop
cmp
cmp
stos
push
daa
jmp
clc
cmovae
adc
push
xchg
and
fbstp
mov
les
in
iret
push
mov
fistpl
shlb
test
movsb
lcall
aas
inc
dec
mov
loop
cmp
cli
and
mov
adc
mull
xchg
inc
mov
mov
pop
xor
cmp
add
popf
gs
push
add
pop
arpl
fcos
incl
repz
fcompl
add
jmp
push
sahf
nop
mov
mov
push
ror
out
test
repnz
mov
sbb
lock
mov
cld
xchg
stos
inc
arpl
mov
and
faddl
cmp
lods
icebp
out
movsl
and
mov
jecxz
cmp
and
push
sbb
cltd
iret
xor
and
push
out
xor
dec
loop
call
or
mov
enter
pop
jb
data16
add
push
ret
call
push
cmp
sub
cli
mov
in
mov
int
mov
pushf
movsl
mov
in
push
mov
js
lods
adc
xchg
repz
shlb
dec
dec
test
push
mov
adc
push
dec
cli
addr16
insb
sahf
inc
les
jnp
inc
jbe
sub
inc
mov
mov
adc
push
iret
test
insl
or
mov
movsl
icebp
popa
rcr
push
or
jge
and
rcll
adc
fcmove
push
cld
inc
inc
adc
mov
mov
push
dec
inc
fcomps
xor
push
lahf
cli
or
in
xor
adc
cld
jns
arpl
push
cmp
hlt
fs
movsb
loop
xchg
cwtl
sar
daa
aam
repz
and
or
dec
call
inc
jnp
jle
xlat
push
push
xchg
gs
imul
pusha
in
sbb
stos
imulb
mov
outsl
mov
pop
push
icebp
test
xchg
je
push
lret
push
and
je
jb
cli
push
xor
push
imul
jne
lea
ja
mov
mov
cmp
outsb
cmp
js
int
inc
clc
fwait
fistpl
cwtl
jb
movsb
or
add
stc
xlat
and
fstl
xchg
movsb
xor
jge
push
sub
xchg
movsl
cmp
out
fmull
push
pop
shrl
in
imul
out
xchg
popa
cmp
pop
loope
sbb
daa
scas
mov
in
pop
mov
mov
adc
in
sub
or
cmp
sub
clc
push
and
lret
shlb
outsb
jmp
adc
jbe
push
pop
std
sub
push
sub
dec
jg
xchg
jno
push
inc
scas
push
int3
pusha
loopne
mov
in
mov
jp
xchg
push
inc
jae
xor
cmp
sub
sub
mov
fstps
inc
mov
mov
inc
fbld
pop
push
popa
cmpb
jo
sub
jae
cmp
jecxz
jns
je
mov
outsb
inc
pop
call
push
xor
sahf
aam
loopne
inc
jecxz
push
pop
xchg
cmp
jg
aaa
icebp
jo
test
mov
xchg
in
mov
imul
pusha
popa
sub
pop
jp
pop
xor
ret
cmp
adc
mov
cmp
inc
sub
inc
int
push
and
jae
mov
in
sub
xchg
outsb
mov
and
mov
lcall
call
sub
adc
sub
jns
sub
sub
shll
js
ja
cmp
xor
xchg
inc
ret
cmc
movsl
lret
scas
mov
push
push
lods
xor
sbb
call
shll
pop
fists
sub
jmp
cli
mov
bound
pushf
push
mov
inc
mov
test
jmp
lret
push
cmp
jmp
xor
xor
sbb
cmp
push
dec
add
ljmp
or
movsb
pop
add
xchg
xchg
lods
lea
fsin
sar
loopne
insb
lds
cld
arpl
les
cs
pop
dec
jo
jmp
jae
jb
inc
sub
sub
daa
mov
lcall
xchg
add
jg
lds
inc
jo
inc
loop
cmp
outsl
push
jnp
adc
cmp
std
out
hlt
mov
and
inc
xchg
sub
jmp
jne
mov
fisubrl
jle
mov
loop
imul
xchg
xchg
icebp
pop
les
in
shll
mov
dec
fnstenv
repnz
lahf
in
in
inc
in
popa
ljmp
add
lds
and
cltd
in
pop
test
aam
icebp
int
mov
iret
jl
adc
add
cmp
or
repnz
call
and
and
push
int
fdivrs
xchg
and
ret
cmc
add
pop
leave
jo
lea
in
add
int
push
dec
nop
addr16
pop
daa
addr16
cs
and
sub
stos
je
lret
push
jno
pop
inc
jns
adc
fildl
divl
push
mov
dec
sbb
dec
repz
lea
mov
out
popf
inc
cmc
leave
mov
into
int
icebp
ja
fdivr
mov
cmp
pushf
stc
loopne
dec
ss
in
pusha
std
std
xor
jl
mov
fwait
scas
rorl
cmc
cmp
in
push
xchg
add
in
mov
std
icebp
and
inc
inc
and
lahf
dec
inc
mov
popa
shll
add
cmp
ss
frstor
fs
mov
cmp
xor
iret
sub
push
dec
scas
push
jge
andl
jg
scas
js
xor
cmc
mov
in
push
sar
ret
adc
lahf
and
inc
call
inc
bound
inc
xor
popa
test
cmp
mov
push
das
xchg
movsl
mov
lcall
inc
inc
outsl
gs
in
sbb
or
dec
push
pop
fsubrl
ja
mov
jnp
adc
arpl
add
test
sbb
dec
enter
negl
sbb
jg
or
mov
jo
cltd
ljmp
lock
inc
sahf
jmp
push
jns
notl
push
adc
and
mov
inc
sub
stos
jb
xorb
sub
xchg
in
fcomip
ret
mov
mov
sub
jmp
repnz
and
push
sti
xchg
mov
or
add
dec
add
ljmp
lret
movsb
loop
add
lock
enter
insb
das
mov
push
gs
xchg
aam
cli
clc
sbbb
mov
jae
jge
push
push
push
jb
and
mov
arpl
sbb
out
xlat
ja
fiaddl
pop
pop
fsubrl
xlat
mov
adc
pop
mov
out
inc
cmp
cmpsl
ljmp
pop
jge
mov
xchg
rcrl
mov
jns
inc
mov
jecxz
mov
leave
xor
cltd
arpl
push
outsl
cmpb
rclb
and
jne
test
mov
cmpsl
pop
inc
cmp
jnp
sub
dec
nop
mov
inc
mov
int3
pusha
and
fistpll
or
test
and
push
lcall
xor
xchg
sbb
inc
dec
sbb
cmp
xchg
std
aad
dec
cs
or
rcrl
xchg
push
lret
push
loop,pt
je
movlps
dec
cwtl
pop
imul
int
outsb
mov
pop
xchg
jmp
ds
add
pop
insb
jo
int3
xchg
lahf
rclb
push
clc
xchg
jmp
pop
rorl
in
arpl
xor
pop
out
mov
pop
out
insb
lods
jb
mov
mov
je
jno
mov
loopne
push
in
mov
jns
or
jge
sarb
dec
sbb
fwait
dec
out
pop
or
mov
xchg
ds
fsubl
fwait
rcrb
push
enter
dec
jecxz
mov
sbb
shlb
mov
fbld
adc
jp
push
and
je
cmp
lods
jmp
mov
xchg
decl
in
das
mov
int
add
bound
sbb
lds
sub
icebp
repz
mov
sub
sbb
xchg
xor
sbb
mov
stos
mov
xchg
aas
pop
mov
add
in
add
push
dec
dec
mov
lea
mov
cmp
push
sbb
and
fucomp
xchg
test
xor
gs
popf
enter
dec
fdivrp
mov
mov
decl
fldenv
leave
clc
xor
or
aas
and
loop
loopne
movsb
add
jg
xor
jb
push
outsl
lahf
and
test
inc
jle
nop
into
ja
sub
xchg
push
pushf
popf
in
les
out
clc
jb
push
arpl
mov
dec
and
aas
jmp
add
xlat
jns
fwait
loop
and
inc
fisttps
icebp
pop
sub
sarl
sbb
pop
out
subb
hlt
mov
clc
das
jnp
aad
jno
popa
orb
daa
call
hlt
push
in
fisubl
sbb
lret
shll
mov
mov
call
mov
cmc
lret
lods
sti
cmc
lods
aas
insl
mov
rcrl
mov
sbb
iret
bound
fs
mov
jmp
dec
ja
mov
dec
enter
mov
fdivp
jl
test
pop
int
dec
fcmovb
mov
cmpsl
aam
xchg
sti
sti
xor
mov
and
sub
das
leave
subl
int
add
icebp
shll
dec
xor
jge
cmpsb
or
out
jnp
call
cmp
sub
notl
lcall
stos
xor
outsb
orl
rcll
cli
sbb
sub
push
sub
ret
dec
jg
rolb
lods
bound
mov
xchg
lahf
add
pop
es
shr
mov
lods
xchg
adc
inc
mov
lock
dec
lods
incb
aam
std
out
or
and
test
addr16
das
shlb
mov
inc
js
inc
xor
pop
mov
cli
xor
add
test
dec
movsl
mov
jno
cmp
or
in
push
adc
stos
sbb
in
and
or
mov
add
rcl
fmul
mov
mov
sub
fsubrs
pop
cli
fsubrs
inc
mov
sbb
sub
push
lods
lea
mov
mov
add
loope
arpl
aam
loop
ret
xchg
mov
pop
aam
leave
sahf
sbb
add
addr16
xor
je
out
and
mov
les
cmp
and
in
es
sub
fldcw
jne
cmp
sub
inc
jne
push
push
js
js
jmp
lret
icebp
in
mov
je
cmpsl
fiaddl
iret
int
cmpb
ljmp
cmpsb
jge
sbb
cltd
pushf
test
sub
sbb
cld
shll
es
out
mov
loopne
mov
stc
mov
lahf
sbb
xor
loop
or
popa
loope
out
dec
aam
stc
ss
pop
out
dec
stc
sti
add
add
aas
cltd
dec
cmp
into
and
ret
jle
xchg
repnz
pop
cmpsl
add
dec
lret
jl
mov
fwait
inc
push
inc
es
aas
fs
test
clc
imul
jmp
addr16
popf
jle
fbld
loop
fldenv
outsl
mov
repz
into
cmp
aam
movsb
add
rorl
lea
dec
push
push
adc
movsl
sub
pop
jle
cmpsb
lock
ds
lea
stos
inc
out
rorb
xchg
adc
pop
xchg
mull
or
sbb
pop
sbb
daa
push
mov
mov
inc
mov
std
sub
xchg
icebp
cmp
push
sahf
ret
adc
call
test
js
test
jp
inc
test
sarb
jp
jo
pop
pop
aam
or
add
add
pop
mov
adc
add
pop
mov
rolb
test
mov
sub
cmp
mov
inc
xchg
test
fwait
xchg
imul
pop
jmp
pop
sub
outsl
add
iret
jno
cltd
pop
rcrl
lret
push
pop
decl
std
js
ret
std
leave
js
push
mov
push
dec
cmp
call
fisttps
add
add
jg
inc
in
jg
subb
push
jno
mov
stos
jl
mov
js
pop
cmovbe
fmul
push
jge
stc
jl
sahf
das
enter
inc
popa
push
mov
loopne
sar
decl
cmp
cmpb
and
pop
pop
and
adc
fimull
sti
je
stc
push
cmp
je
dec
jl
push
cwtl
xor
mov
xchg
push
or
clc
scas
ret
imul
pop
fistps
outsb
scas
xor
cwtl
add
fsubs
cmpb
pop
mov
sbb
lea
adc
mov
xor
and
pop
sub
sbb
gs
xchg
cmc
lcall
stos
subb
scas
lock
dec
sti
jo
pop
popf
leave
loopne
inc
ds
jno
mov
pop
push
icebp
push
arpl
decl
jmp
mov
mov
rclb
and
les
nop
lods
loopne
adc
ss
push
out
daa
stos
inc
dec
lret
ret
addr16
ljmp
pop
mov
fwait
jno
pop
in
stos
mov
sbb
fistpl
mov
inc
ss
das
and
dec
xchg
lock
mov
dec
lcall
fidivl
in
xorb
mov
cmp
mov
mov
xchg
mov
sarb
or
mov
ud0
lods
mov
repnz
insl
push
adcb
nop
inc
insl
call
fisttpll
out
mov
jg
inc
daa
hlt
or
bound
push
ret
sbb
lahf
adc
xchg
adc
jno
subb
out
loop
and
cmp
sbb
push
cli
xchg
mov
in
mov
sub
or
in
xor
add
lds
push
jnp
cli
insb
lret
sar
rcrb
dec
push
sub
xchg
inc
and
fildll
cmp
insl
fucom
inc
adc
test
xor
daa
call
xor
les
mov
pop
adc
popa
mov
push
cmp
pop
sbb
popa
xor
call
mov
int3
int3
dec
rol
out
sub
repnz
scas
mov
mov
repnz
jle
lods
int
aam
clc
pop
push
insl
jae
jno
ja
fdivrp
aaa
div
adc
and
ss
sbb
sbbl
repnz
sub
push
mov
mov
fistpll
ret
std
fdivrs
ja
dec
movsl
cli
out
jne
mov
nop
scas
lea
outsl
and
stos
cmpl
inc
or
or
lds
xor
mov
outsl
aaa
aaa
lret
adc
arpl
sbb
movl
xlat
out
sbb
test
push
mov
push
mov
js
and
lcall
dec
popf
push
fwait
jl
jg
mov
add
je
in
push
enter
adc
cmpsl
les
test
negb
movsb
and
sub
shlb
lods
cmpsl
xor
pop
pop
jno
jge
lcall
mov
rep
and
aam
ds
inc
out
stos
or
xor
in
cmp
loopne
jo
aaa
xor
adc
and
pop
fs
jge
push
hlt
addr16
dec
dec
ljmp
rcll
ss
sahf
pushf
outsl
das
test
or
pusha
adc
cmp
inc
cmc
xchg
mov
add
cmp
xor
adc
cmp
sbb
xchg
pop
sbb
sub
loope
data16
push
js
int
icebp
jmp
sbb
dec
push
subl
jnp
dec
scas
loopne
cli
or
mov
or
lods
xor
out
push
mov
mov
rolb
test
jl
cmpsb
mov
pop
fdivl
pushf
add
pop
pusha
rclb
gs
aad
dec
mov
mov
push
and
movb
xor
orps
sbb
mov
sub
adc
fiadds
enter
or
out
scas
mov
pushf
test
xor
xchg
fnstcw
repz
xchg
into
cmp
xor
mov
cwtl
mov
es
cmpl
push
dec
stos
in
ja
dec
xor
stc
mov
jnp
cmp
adc
fbstp
pop
imul
mov
test
data16
std
xor
addb
jo
in
add
scas
icebp
loop
cmp
insb
mov
dec
jp
lds
inc
push
pop
ljmp
mov
mov
pop
mov
jecxz
pop
adc
and
adc
mov
rol
scas
sbb
and
jb
aas
jge
or
js
cmc
pop
xchg
mov
xor
std
xor
stos
iret
into
xchg
sti
out
inc
push
data16
jle
arpl
movups
into
push
int3
mov
cltd
jbe
stos
mov
fimull
pushl
out
xor
leave
push
outsb
push
push
std
mov
sbb
push
dec
leave
dec
jo
scas
lret
imul
cmpsl
xor
mov
test
je
xchg
xchg
and
aaa
add
sub
sbb
mov
shr
in
mov
loop
insb
daa
enter
sbb
in
sahf
mov
icebp
sub
fistpl
int
repnz
push
test
sbb
popf
dec
fmuls
push
jge
test
push
push
cli
mov
sahf
in
mov
xor
outsb
sti
lods
cli
and
jmp
in
pop
jmp
mov
jmp
adc
pop
shll
ds
stos
push
negb
das
loope
sub
jno
dec
fisubrl
inc
in
data16
jbe
insl
inc
dec
enter
scas
dec
enter
jbe
add
fisubs
fs
xchg
or
mov
roll
ret
sbb
push
jge
fbld
out
shl
ret
mov
cmp
outsb
adc
dec
dec
add
mov
fs
jnp
in
sub
ja
cmpsl
sub
test
push
mov
dec
ljmp
mov
nop
xor
add
pop
adc
pop
and
pop
andb
out
pop
jb
cmp
rolb
test
out
xor
stc
add
cmp
outsb
into
mov
fldenv
fldcw
fistl
movsl
sub
mov
scas
pop
or
aam
dec
adcl
adc
pop
aas
cmp
fisubl
push
mul
pusha
mov
sub
out
or
insl
insl
cmp
pop
add
mov
jns
xchg
push
xor
clc
and
iret
push
xlat
push
jecxz
insb
push
movl
dec
scas
or
adc
ret
aaa
outsl
pop
mov
into
mov
lea
or
mov
into
btr
or
lods
rcrl
je
insb
daa
std
cmpsb
adc
sbb
sub
incb
xchg
and
jmp
inc
out
add
jbe
dec
pop
mov
mov
mov
test
inc
mov
sbb
test
stos
jns
adc
rep
cli
sbb
scas
cmp
loope
fnstcw
inc
and
dec
push
in
and
cli
fsubrs
popa
dec
xor
dec
dec
cli
gs
add
sarb
stos
fstl
repnz
xchg
andb
adc
push
adc
icebp
mov
scas
cmpsb
jb
jl
stos
fucom
dec
inc
or
addb
pop
mov
adc
outsl
rcr
dec
mov
sbb
add
push
jge
ficompl
sub
inc
enter
aad
pusha
mov
notb
inc
mov
mov
inc
pop
stos
cmp
push
cld
mov
je,pt
lahf
sti
jg
iret
xlat
or
bound
sub
outsb
push
pop
cmp
add
or
cmpsb
push
cmp
adc
add
das
cmp
jle
clc
mov
sahf
xor
in
test
sub
jne
decl
or
pop
orb
and
mov
stos
xchg
mov
pop
sub
je
cmp
mov
aam
jmp
pop
xchg
inc
pop
xor
outsl
scas
add
in
push
jnp
cmc
mov
fists
sbb
dec
lcall
xchg
mov
sub
push
push
mov
mov
iret
mov
xrelease
lcall
lods
sbb
cs
sub
lcall
dec
mov
xchg
orb
in
dec
pop
in
dec
icebp
insl
mov
cwtl
ja
add
and
push
div
jl
lea
adc
xchg
stos
add
aaa
dec
aad
xor
loopne
test
mov
lock
enter
cmp
stos
lea
test
inc
testb
cmp
xchg
sub
pusha
pusha
inc
hlt
arpl
dec
pushf
jb
mov
nop
mov
lcall
mov
std
xchg
push
mov
inc
jbe
cmp
enter
mov
lcallw
or
std
pusha
shll
or
pop
popa
lahf
jae
stos
mov
or
sbb
cli
mov
daa
out
nop
or
lods
xor
rolb
xor
dec
das
xchg
push
inc
sub
stc
test
mov
ret
scas
bound
call
cld
mov
jp
test
sbb
jno
inc
cmp
in
ss
mov
inc
cmp
sti
mov
sub
les
dec
mov
inc
sub
rcr
rclb
nop
sbb
sbb
jl
test
hlt
push
adc
jbe
inc
fldz
lods
movsl
jle
jle
adc
stc
pop
bound
mov
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
push
movl
xor
xor
adc
movl
neg
mov
mov
adc
push
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
orl
movl
mov
mov
sbb
mov
mov
mov
sub
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
or
mov
mov
xor
mov
andl
add
movzwl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
movb
sub
lea
andl
xor
or
inc
mov
cmpl
jne
call
cmpl
jb
mov
or
mov
sub
mov
xor
sbbl
sub
addl
mov
sbb
movl
neg
push
and
movl
not
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
push
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
push
pushl
call
jmp
xor
mov
push
adcl
add
jmp
movl
mov
mov
inc
movl
cmp
movl
jb
mov
adc
mov
addl
xor
orl
add
movl
jmp
mov
adc
mov
mov
neg
mov
movl
xor
xorl
mov
sbbl
add
addl
movzwl
subl
mov
mov
addl
movzwl
xor
andl
add
mov
movl
mov
inc
mov
mov
movl
cmp
movl
jne
mov
add
mov
sbbl
xor
andl
add
jmp
lods
mov
jae
sbbb
popa
cs
jp
or
jp
mov
jmp
sahf
sbb
mov
and
idivl
xchg
loope
mov
sbb
xchg
test
aaa
mov
ret
xchg
flds
lods
xor
out
ud0
mov
pop
sub
ds
xchg
cli
mov
and
out
sbb
xor
decl
xchg
bound
inc
adc
dec
add
outsl
mov
jb
push
lret
push
pushl
pop
xchg
cli
xchg
fnsave
adc
xorl
movsl
sub
add
inc
mov
enter
mov
cmp
pop
aas
addl
subl
cmp
ret
adc
jle
sub
sub
and
or
sub
aas
je
setg
cmp
jecxz
stc
lock
cmp
dec
pushw
mov
push
lods
or
jecxz
adc
adc
dec
inc
lret
or
ja
inc
gs
jbe
sahf
and
push
jg
ret
xor
xor
or
sarl
fwait
pushf
imul
out
cmp
xchg
nop
jl
cmp
cmp
push
add
add
into
inc
iret
pop
mov
imul
add
outsb
add
add
in
sub
sub
cmpsb
clc
cltd
andb
addr16
pop
pop
or
notb
filds
mov
adc
dec
fdivrl
adc
push
and
push
addl
arpl
pop
clc
stc
sub
pushf
inc
ss
out
xor
mov
test
xchg
ret
dec
outsl
out
pushf
out
cltd
test
fwait
add
adc
inc
mov
add
in
arpl
xchg
sub
ss
xor
scas
mov
mov
jle
xor
inc
inc
jle
xlat
ljmp
popa
cwtl
add
loop
std
jnp
push
mov
addr16
lods
vpinsrw
ja
loop
pop
ss
or
cmp
jae
fcoms
or
add
mov
xchg
or
lret
outsb
enter
sbb
test
push
xchg
jge
ret
xor
jle
out
lret
pop
xchg
fwait
ret
das
pushf
rorl
popa
aas
xchg
fcom
xor
inc
fidivl
ret
addr16
shl
ja
lods
addr16
mov
cmp
push
and
js
jmp
cmc
int
xchg
fnsave
mov
push
cmp
add
cmp
movsl
mov
ljmp
xchg
add
fsubs
cwtl
or
sub
adc
lret
gs
mov
imul
es
aad
pop
decl
push
inc
mov
pop
and
or
sbb
mov
mov
cmp
testl
icebp
adc
push
pop
loopne
les
sub
push
cltd
sbb
cltd
shlb
dec
loope
pop
pushf
mov
incb
loopne
mov
aad
addr16
cmp
insl
cltd
push
xchg
push
mov
xor
xchg
aad
pop
aam
inc
daa
ds
xchg
faddl
cmp
mov
in
mov
pop
out
lahf
or
jbe
insb
mov
out
xlat
xchg
leave
jmp
rolb
inc
adc
das
xchg
pop
cs
movsl
daa
sbb
mov
js
filds
ret
daa
xor
or
ss
xchg
fndisi(8087
mov
push
lods
dec
fcoms
cmp
loopne
mov
movsb
adc
or
das
das
shrl
lcall
dec
add
or
nop
sarb
scas
ss
xlat
mov
push
mov
flds
cmp
aad
sbb
jae
shl
mov
jmp
push
pushf
mov
xchg
popa
push
cmp
sti
mov
adc
ss
shrl
jecxz
add
divb
addr16
aaa
out
add
dec
cmpsb
dec
into
pop
jecxz
pop
ds
inc
and
pop
xor
inc
adc
imul
xorl
mov
aas
js,pn
mov
push
cli
push
add
mov
mov
cltd
mov
push
aaa
xchg
push
lret
loopne
xor
rcl
gs
xorb
pop
xlat
fsub
push
mov
sub
ret
test
loope
push
ficompl
pop
data16
sbb
dec
call
dec
mov
inc
jle
fisubl
int3
in
inc
add
xorl
adc
pop
mull
and
and
xchg
stos
iret
pop
xchg
dec
mov
cmpsl
out
jge
xor
daa
mov
movsb
push
mov
ss
jle
push
jno
inc
mov
add
mov
sub
mov
loope
sub
xor
xchg
int
xchg
cld
movsb
xor
into
ljmp
int3
shrl
and
lahf
jp
scas
push
cmc
xor
sub
mov
imul
sahf
sub
inc
fwait
mov
dec
popf
sub
adc
call
xor
xchg
push
pop
jecxz
out
jle
ss
push
cmp
add
in
int
sbbb
rcr
popa
push
push
inc
add
call
js
sbb
fiaddl
xor
imul
hlt
stos
or
fisubrs
mov
out
rolb
call
and
rcr
jb
lcall
jmp
jp
adc
mov
mov
in
subl
dec
pop
sbb
out
sbb
adcl
outsl
imul
xchg
xchg
sarl
push
or
movsl
gs
stc
dec
dec
scas
outsb
cltd
out
stos
mov
enter
mov
pop
jns
scas
test
push
mov
mov
mov
jmp
xorb
sbb
repnz
adc
dec
popa
xchg
mov
lret
loopne
popf
push
fcomp
or
push
or
xchg
cwtl
flds
xor
sub
mov
fistpl
arpl
out
call
sub
pop
pop
lret
lret
cwtl
ret
or
inc
sbb
push
in
or
xchg
je
xchg
xchg
jae
xchg
in
js
test
loope
xchg
gs
xchg
sub
or
cld
sub
dec
jo
leave
dec
push
scas
and
popf
inc
addr16
clc
push
adc
popf
pop
loope
aam
bound
xchg
xchg
add
mov
push
subl
push
dec
out
andl
add
adc
test
add
sbb
aaa
rolb
pusha
fdivrl
push
pop
lret
push
push
test
lods
insb
cmp
leave
pop
dec
aaa
and
test
and
mov
daa
jae
jno
popa
mov
fwait
push
rcll
jg
sahf
mov
clc
inc
movsb
xchg
mov
mov
shlb
mov
add
mov
push
inc
ss
lret
mov
inc
or
pop
ljmp
jns
jb
xor
fwait
jb
sub
mov
adc
xlat
sbb
nop
lret
rcrb
imul
and
popf
shrb
mov
sbb
pop
hlt
pop
mov
stos
push
mov
lret
out
jmp
loopne
pop
fnstenv
fwait
push
fldcw
pop
cld
pop
sub
testl
and
cmp
push
cmc
mov
test
ljmp
jp
mov
xor
jmp
jge
ja
xchg
sbb
or
repz
outsl
stos
test
mov
imul
push
jb
mov
js
inc
jns
push
mov
ljmp
xor
pop
out
lds
mov
icebp
mov
mov
sahf
add
nop
mov
push
xor
addb
cmp
cwtl
or
lahf
das
loopne
add
into
mov
sub
jle
in
int3
fmuls
cld
test
sarl
adc
cmp
inc
repz
loopne
gs
inc
sarb
bound
adc
xlat
and
divb
add
out
adc
ja
inc
push
add
int3
movsb
int3
xchg
std
sub
inc
pop
mov
pusha
insb
xchg
cmp
mov
clc
mov
stos
cmpsl
and
mov
pop
imul
int
in
sbb
aaa
divb
xor
sbb
and
sahf
push
dec
test
test
and
add
rclb
push
out
test
mov
xor
jbe
adc
stos
xor
clc
lea
int3
arpl
scas
pusha
pop
insl
add
and
repnz
mov
mov
push
clc
sub
fcmovbe
mov
imul
push
sub
xorb
das
xor
pop
jnp
or
sbb
push
jbe
jo
js
in
jg
cli
fisttpll
mov
and
mov
adc
frstor
jns
adc
xor
push
sahf
or
xchg
push
mov
mov
aas
mov
shll
jmp
sbb
sbb
mov
mov
loope
cmpsl
mov
js
pushf
je,pn
xchg
inc
lods
xchg
scas
inc
scas
aaa
jmp
jge
call
pop
das
sti
mov
push
bound
and
jg
mov
adcl
fs
mov
adc
mov
into
rclb
lock
cs
inc
fimull
adc
lret
cltd
sub
insb
lods
push
mov
fisubrl
iret
out
leave
out
pop
push
xor
jg
lock
mov
push
std
pop
insl
xchg
sbb
jge
push
mov
mov
sbb
in
rorl
pop
test
andl
mov
in
sbb
sub
test
icebp
mov
jns
pop
pop
lods
sbb
inc
dec
sbb
pop
daa
test
jo
inc
insb
xchg
mov
inc
jp
xchg
nop
punpckhdq
mov
in
cmp
sti
push
xchg
xchg
sub
dec
jle
xchg
pushf
dec
sub
sbb
pop
cmp
fldt
cmp
adc
cltd
outsb
negl
imul
or
lods
mov
inc
lret
dec
loope
cmp
jns
pop
xchg
int3
sar
mov
icebp
leave
ret
mov
sbb
mov
mov
xchg
pop
or
shrb
enter
xor
inc
sbb
jmp
outsl
cmc
inc
mov
sub
arpl
sbb
insl
in
mov
dec
movsl
cmp
bound
push
cld
and
test
jb
pop
je
or
sbb
adc
push
clc
lret
jno
sbb
inc
and
lcall
stos
mov
push
mov
test
adc
mov
sub
dec
out
std
xchg
lcall
mov
js
sti
push
mov
cwtl
outsl
mov
dec
cld
pop
sbb
mov
sahf
out
adc
jns
sahf
cmp
pop
xorl
subl
and
jo
insb
subl
cltd
sbb
cmp
mov
or
cmp
pop
bound
pop
aaa
inc
ljmp
add
ljmp
dec
lods
cld
scas
xor
fwait
mov
jge
pop
dec
pusha
lock
mov
xor
int3
xor
lock
or
test
call
loop
xor
mov
cmp
ds
test
sbb
dec
and
hlt
jno
sahf
cmpsl
inc
xor
int3
jb
pop
in
cltd
xor
xchg
lret
push
cmpsl
pop
or
loopne
pop
divl
push
push
jmp
int
sar
fisttpl
sbbl
icebp
shr
movsb
test
jno
inc
es
scas
jno
lret
inc
lcall
hlt
cld
mov
subb
xor
dec
pop
or
jne
subb
sub
aas
lret
mov
js
cmpsb
cmc
cmp
push
fisttpll
and
js
add
pop
fs
stos
inc
xor
adc
idivl
adc
lea
outsl
nop
mov
mov
pop
mov
jnp
mov
stc
and
test
jecxz
jae
scas
in
and
insb
les
shlb
jo
jge
pop
xor
mov
mov
les
subl
imul
in
sub
negl
and
adcb
push
add
in
stos
not
popf
leave
mov
cmp
xor
or
mov
cmp
xor
mov
or
pop
movsl
shlb
jmp
dec
inc
sbb
sbb
lret
inc
sub
outsb
cmp
lahf
mov
mov
fnstsw
ret
cwtl
andb
test
cs
mov
push
jne
jecxz
mov
in
dec
in
lea
out
xlat
cmpsl
jns
xor
cli
sbb
lret
sti
movb
stos
mov
aam
adc
jne
daa
mov
jecxz
xor
mov
adc
call
test
fists
fistps
push
nop
mov
and
fwait
dec
mov
push
ret
pushf
cs
test
loope
pop
push
into
mov
cmp
mov
int
mov
push
sbb
dec
cwtl
fidivs
out
rclb
inc
cmpsb
sub
xor
xchg
lcall
imul
imul
dec
pushf
push
hlt
dec
call
and
lea
add
je
and
mov
jle
mov
mov
add
xor
insl
sbb
nop
pop
xchg
or
mov
sbb
and
aad
lods
stos
jne
mov
shlb
shrb
andb
jmp
or
rolb
fildll
arpl
and
fs
pop
mov
aas
sbb
push
add
or
dec
push
dec
cmc
jae
and
cmp
cs
xchg
cmc
mov
pop
mov
push
dec
adc
out
sub
jo
into
dec
sbb
push
lods
mov
xor
xchg
fmuls
test
mov
rorl
mov
imul
lock
pop
push
inc
add
rcrb
dec
push
test
movsb
sbb
add
or
rorb
fsubl
bound
dec
test
mov
stc
or
gs
sbb
adc
test
mov
xchg
adc
add
ret
icebp
popl
jecxz
push
lahf
in
pusha
pavgw
outsb
pop
cmpsb
dec
add
pop
fwait
leave
mov
cmp
jp
loopne
repnz
fsubl
cmp
cwtl
out
sub
cmpsb
cwtl
mov
notl
std
fldt
notb
sbb
mov
pop
jo
cmpsb
dec
xchg
cwtl
cwtl
push
pop
pop
or
mov
out
leave
es
inc
ret
cmc
jmp
int3
and
mov
mov
dec
mov
add
jae
shlb
int
ja
test
cmp
pop
sbb
cmpsl
cmpsl
lahf
jge
and
es
mov
pop
dec
sbb
sub
int
jecxz
jmp
mov
xchg
fsubl
mov
fwait
scas
lahf
leave
xor
mov
sbb
cwtl
in
and
cmp
mov
aam
and
sbb
and
subw
mov
xchg
popf
in
bound
adc
inc
mov
out
shll
inc
bound
xlat
xor
shr
sub
ss
pop
bound
sbb
dec
call
adc
add
lods
add
mov
fmull
jae
les
mov
dec
mov
shlb
aad
lahf
jmp
gs
pop
xor
pop
cmp
pushf
repz
enter
dec
imul
inc
sbb
bound
imul
in
push
mov
mov
dec
mov
sbb
movsl
js
xchg
cmp
and
imul
scas
fisttpll
push
dec
fsubrp
call
out
je
test
mov
lahf
cmc
scas
push
pop
ds
das
sahf
add
and
jecxz
das
movsl
push
loop
or
clc
jl
movsl
fildl
rcrl
xor
out
pop
add
cmpsb
or
jno
outsl
incl
lcall
cmp
test
out
pop
pushf
xchg
ja
or
mov
aad
test
dec
rclb
ret
adc
lods
sub
ficoml
ljmp
popf
and
jmp
lret
pop
cmp
ljmp
lods
cmpb
cmpsb
in
lock
cmp
pcmpgtd
push
add
xchg
rcr
fildl
sbb
add
xchg
pop
inc
pusha
xchg
outsl
int3
cmp
jge
pop
in
scas
sbb
clc
scas
lods
or
push
mov
inc
inc
mov
fdivp
pop
add
xchg
dec
and
push
jge
mov
fwait
int3
dec
mov
add
push
xchg
pcmpeqb
insb
cmp
call
or
and
and
in
mov
push
adc
ds
add
iret
call
push
jg
adc
loope
inc
out
ror
in
adc
insl
filds
or
inc
clc
leave
jne
fldenv
jp
mov
pop
test
pop
xchg
inc
lret
fstps
fnstenv
vmread
mov
sub
fisubl
push
push
cmp
push
add
shll
insl
fistps
mov
std
cmpsb
leave
sbb
or
dec
arpl
and
ret
push
xchg
pop
add
jno
xchg
dec
and
or
mov
lret
jp
dec
mov
stos
shlb
inc
sub
repz
cmp
popa
ds
adcl
push
pop
mov
mov
xchg
sbb
daa
cmp
test
mov
out
cmp
cmp
or
test
pop
sbb
inc
jbe
imul
cmp
push
ja
xor
aad
std
scas
mov
test
push
les
loopne
cmp
pop
sub
xor
sub
cltd
mov
dec
xor
adc
sbbl
inc
cmpsb
inc
add
shl
mov
adc
leave
test
ret
push
jns
jle
cmp
ret
sbb
sahf
inc
ja
sub
push
clc
fcoms
neg
add
aas
lret
jns
pop
outsl
sbb
popa
xor
lret
inc
xchg
aas
xchg
xor
jl
push
mov
ss
or
shll
mov
xlat
jmp
test
jp
pop
loope
rcrb
out
jnp
mov
int3
cmp
bnd
rcr
clc
xor
jb
or
imul
ret
xor
jp
dec
cs
jmp
or
repnz
pop
cmp
pop
ss
mov
cs
xlat
fnsave
les
cmpsl
push
xor
add
dec
fdivrs
sbb
mov
xor
repnz
mov
ja
jnp
pop
mov
out
and
ret
xor
cmpsl
xor
xchg
cmp
movhps
dec
inc
jno
or
jno
lds
xchg
pop
jl
xchg
xchg
jge
mov
xor
inc
and
clc
add
dec
jnp
sbb
jg
cmpsl
das
fcoms
cltd
or
jge
or
mov
clc
mull
and
pop
loope
in
outsl
inc
test
or
inc
fdivrl
mov
xchg
negb
les
and
pop
jne
lods
outsb
mov
xchg
repnz
or
iret
stc
mov
scas
mov
stos
loope
icebp
adc
inc
stc
stos
pop
jbe
mov
daa
hlt
jg
mov
mov
cs
lret
mov
mov
pop
add
sub
pop
mov
sub
and
mov
push
xchg
jne
sub
les
push
push
imul
xor
mov
adc
pop
lahf
leave
dec
scas
add
cmp
or
pop
lea
fs
lods
std
sbb
push
sbb
out
daa
movsl
movsl
enter
jbe
movsl
fildll
push
bound
in
push
jl
movsb
xchg
lds
cltd
jns
mov
cwtl
jg
cmp
cwtl
sub
lea
divl
add
adc
mov
es
div
movsl
dec
dec
ret
mov
hlt
aam
shl
test
dec
adc
cltd
cmp
cld
or
ret
mull
and
xor
jne
push
mov
pop
cmpsb
jne
cmc
pop
outsb
adc
fnsave
scas
or
mov
gs
jbe
pop
movsb
scas
mov
sbb
test
xlat
lahf
xchg
dec
add
outsl
jge
cmpsb
mulb
mov
mov
or
cmpsb
mov
xor
pop
sahf
cld
xor
insl
aad
jmp
sti
xor
pop
scas
test
pop
mov
sub
add
hlt
int3
cmpsl
stc
rcr
or
shrb
test
jmpw
cs
fstl
test
outsl
jg
rclb
mov
mov
data16
jno
iret
push
leave
and
sub
loopne
fistps
shrb
or
stos
rcl
mov
in
scas
mov
mov
out
sub
pop
fidivl
xchg
jecxz
and
pop
call
push
mov
or
and
repnz
in
orl
stos
adc
cmp
mov
xor
aaa
aam
xchg
lods
outsb
sub
xchg
and
xchg
fs
in
or
test
into
push
bound
pushf
push
loope
mov
inc
psubq
and
or
jb
push
aam
out
xchg
imull
pop
dec
fdivs
js
arpl
gs
jbe
loopne
adcl
lret
lcall
jb
scas
mov
cmc
jg
xchg
cmp
shl
leave
jg
movb
sub
xor
gs
stos
movsl
clc
and
mov
int
dec
jecxz
stc
pusha
int
xor
pop
ds
sub
pushf
nop
mov
jge
bound
fs
lock
clc
jl
push
fbld
or
xor
test
out
or
sar
push
shll
aad
push
jns
sbb
inc
stos
mov
jge
mov
mov
sbb
aad
arpl
rcl
mov
jmp
stos
nop
loope
aad
pop
sub
shl
fs
imul
mov
mov
and
or
enter
mov
push
adc
inc
push
add
hlt
cmp
push
dec
hlt
int3
add
xchg
jecxz
movsl
fwait
into
call
cmp
and
iret
adcb
jmp
inc
mov
pop
ss
add
cmp
sub
test
movsl
daa
aam
aam
in
inc
out
sarl
loope
arpl
pop
cmp
fwait
inc
jae
shr
loope
push
mov
xlat
movsl
repnz
xor
xchg
mov
arpl
testl
pop
fldt
pop
sub
adc
inc
mov
inc
xchg
adc
jmp
ljmp
sub
sbb
shll
pop
popa
xchg
mov
jmp
sub
push
mov
pop
scas
ds
adc
sub
sahf
inc
int3
or
stos
lret
outsb
xchg
cli
mov
add
ret
ljmp
fsub
jp
sbb
stos
movsl
arpl
push
mov
and
ret
pop
inc
outsl
sbb
fmuls
ret
dec
aaa
or
xchg
fidivl
mov
imul
or
cmp
dec
jecxz
mov
rclb
lea
dec
push
cmp
cmp
jmp
outsl
dec
test
imul
addr16
pop
push
daa
and
inc
incl
hlt
mov
inc
push
shr
add
dec
scas
scas
jnp
cmpsl
mov
dec
aam
mov
into
inc
mov
mov
scas
xchg
mov
sub
aas
lret
test
in
pop
ja
std
int
cmp
ljmp
mov
clc
ret
out
out
xor
fcompl
rcll
pop
push
mov
xor
rcll
test
pop
jbe
popf
pusha
iret
in
sub
aaa
xchg
das
es
ja
in
mov
add
inc
mov
xchg
sub
ss
pop
fiaddl
pop
aam
test
arpl
insl
cmp
xchg
frstor
fsubrl
add
cmp
movsb
dec
popf
add
or
aam
sbb
scas
jno
sub
jecxz
test
push
roll
xor
push
test
sub
cmovae
mov
add
push
sbb
sarb
push
add
sbb
add
mov
add
neg
cmc
dec
cmc
cmpsl
cmp
imul
sbb
mov
mov
insl
addr16
adc
gs
push
mov
int3
sti
mov
imul
mov
mov
xchg
daa
add
mov
mov
fistpl
int
jl
xchg
cmp
out
int
pop
call
inc
stc
movsl
cltd
ss
xor
hlt
mov
cmp
leave
push
dec
pop
fs
inc
xor
sbb
push
jae
push
pop
xor
push
push
enter
adc
xor
sbb
sub
test
cmpsb
xchg
jb
ret
cwtl
ret
push
imul
add
cwtl
mov
xor
pusha
pop
outsl
mov
sbbb
cmpsl
negb
xchg
outsl
jecxz
mov
pop
testb
or
stos
test
out
mov
pushf
adc
jae
xorb
jne
pusha
iret
mov
sub
shlb
cmp
sti
cmp
mov
push
and
icebp
cmp
lcall
dec
mov
stos
outsb
decl
or
cmp
jecxz
fisubl
enter
mov
adc
loope,pt
std
dec
arpl
xor
sbb
movsb
jnp
fcomi
decl
sub
loope
mov
ds
test
cmp
cmpsl
mov
les
push
fcmovne
mov
xlat
cmpsb
nop
cmp
sbb
iret
outsl
xchg
pop
jl
push
mov
sar
dec
mov
dec
lcall
ret
sub
movsl
out
inc
inc
cmp
add
add
dec
cmp
jo
popa
pop
sub
les
repnz
cmpsl
cld
and
push
inc
jle
and
insl
push
bound
xchg
cmp
movsl
les
xchg
adc
mov
imul
and
jge
mov
jno
loope
pop
jne
movsl
dec
push
xchg
or
and
daa
fdivrp
lret
xchg
mov
jecxz
push
rcl
or
or
jbe
lods
pushl
aad
or
arpl
ret
push
fisttpl
sub
inc
in
rorb
addr16
dec
in
inc
negb
jge
cli
mov
and
fldz
fbstp
and
sub
push
stc
idivb
test
xchg
cmpsl
imul
sbb
les
sbb
sub
cmp
aas
popa
aas
push
movsb
push
stos
sub
mov
bound
jl
arpl
mov
out
or
mov
xchg
lea
call
mov
push
das
cmp
or
stc
adc
ds
cli
jae
mov
xchg
lods
mov
fmull
jnp
cmp
cmp
add
sub
mov
icebp
and
sbb
addr16
push
jae
jnp
pushf
pop
sbb
enter
mov
scas
int3
pop
xor
cmp
add
push
add
mov
pop
add
fisubrl
pop
and
xlat
movsb
mov
test
pop
lds
push
mov
lret
out
in
rclb
js
push
test
sbb
loopne
cs
sub
repnz
mov
inc
out
sbb
push
outsl
int3
pop
adc
mov
xchg
inc
shrb
xchg
arpl
cmpsl
mov
or
iret
call
jp
insl
mov
ret
rclb
loopne
dec
mov
push
aad
dec
popa
mov
enter
data16
push
scas
mov
rcrb
jecxz
lds
fwait
mov
or
push
pop
int
repz
les
pop
adcb
inc
dec
push
out
dec
inc
push
sub
xor
pop
add
cmp
adcl
mov
and
rcll
mov
cmpsl
cmc
push
xor
push
jb
push
push
push
out
xor
mov
jae
cmp
mov
or
lods
inc
test
scas
and
mov
adc
in
mov
mov
add
push
xchg
jge
add
lahf
addb
mov
pop
mov
pop
push
cmp
movl
and
imul
inc
mov
gs
or
fcomi
sbb
test
les
lret
aam
dec
cmpsb
inc
repnz
pop
sbb
xchg
or
inc
or
shll
sub
sub
int3
dec
inc
push
lcall
push
push
in
inc
mov
inc
lret
pop
and
sbb
push
or
and
icebp
jmp
mov
jb
jne
sbb
mov
inc
add
arpl
pushf
dec
out
daa
sbb
xchg
cmpsb
mov
sarb
inc
cltd
lds
sub
popf
mov
adc
mov
mov
adc
or
loope
pop
dec
dec
dec
into
mov
push
sbb
jnp
and
pop
inc
push
dec
adc
sub
lods
dec
pusha
pop
jbe
fcmovnu
and
cwtl
add
and
pop
push
dec
or
loop
mov
mov
push
shrb
test
and
fs
dec
ja
ret
mov
dec
mov
sti
or
movsl
mov
sarb
cltd
dec
arpl
repz
push
testl
fidivl
jbe
push
xchg
inc
mov
push
in
in
call
or
jo
cmp
rorb
lock
std
in
js
inc
int3
aas
cmp
cmp
pop
icebp
cmpsl
jp
jmp
mov
mov
mov
sbb
cmpsl
outsl
sub
dec
mov
bound
arpl
push
jae
add
sti
popf
mov
sbb
sbb
add
arpl
and
sti
addr16
sbb
sub
mov
pop
pop
dec
inc
lods
or
xchg
test
xorb
outsb
push
loope
loope
jg
iret
mov
test
pop
adc
mov
loop
mov
cmp
add
adc
dec
gs
inc
out
xchg
xor
dec
int
adc
arpl
stos
lret
rclb
inc
shlb
cmp
rcll
fsub
pusha
and
divl
cmpsb
jge
push
dec
inc
out
movsl
stos
mov
sub
or
adc
xor
ja
idivb
mov
or
jnp
lods
test
enter
or
mov
add
arpl
aad
push
lahf
cltd
jge
adc
mull
sub
arpl
dec
cmp
lods
dec
call
les
subb
mov
data16
lods
fucomip
lods
out
movsl
pop
inc
repz
xchg
cmc
xlat
push
daa
mov
test
das
push
jno
call
out
mov
insl
pop
inc
stc
jno
gs
stc
mov
lcall
loop
inc
push
or
enter
jne
sbb
mov
dec
data16
and
xchg
xor
pushf
stc
jecxz
mov
sahf
pop
mov
je
je
dec
inc
rcrl
dec
xor
dec
mov
sbbb
pop
cmp
pop
cmpsb
cmp
mov
out
ljmp
xor
dec
ds
add
dec
mov
dec
and
daa
addb
aas
push
scas
fs
jp
lds
ret
mov
push
data16
hlt
repnz
push
inc
add
add
add
add
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbb
mov
andl
xor
adcl
add
mov
movl
mov
movl
movl
mov
mov
mov
movl
jmp
xor
mov
subl
mov
subl
xor
sbbl
xor
xorl
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
dec
mov
add
mov
addl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
orl
mov
mov
mov
lea
mov
mov
mov
adc
mov
sbbl
lea
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
adc
mov
mov
lea
xor
mov
mov
xorl
mov
lea
add
mov
or
mov
mov
incl
lea
andl
mov
inc
mov
adcl
xor
andl
add
movl
jne
jmp
mov
mov
mov
sub
mov
xorl
xor
xor
sbbl
sub
xorl
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
jmp
js
inc
iret
aaa
jae
test
jmp
mov
mov
pop
jp
enter
xorl
pop
pop
jae
add
xchg
mov
scas
jae
enter
xchg
sub
push
enter
inc
mov
xchg
add
data16
sbb
loopne
fimull
stos
test
out
mov
pop
xor
jnp,pt
in
xchg
adc
push
xchg
cwtl
or
stos
roll
push
in
int
cmp
jmp
push
or
stc
mov
push
mov
ss
lock
out
sub
pushf
cmpsb
aam
dec
and
or
mov
ror
or
dec
int3
adc
bound
orl
aam
mov
sub
sub
pop
cmp
mov
cmp
inc
ficomps
jl
in
pop
std
adc
sti
mov
mov
xorb
sbbb
xchg
lods
sbb
lcall
and
mov
xchg
push
mov
in
fdivs
xchg
or
cmpsb
push
add
out
sub
lea
imul
ret
xchg
std
mov
xchg
aas
mov
notl
fcoms
xor
xchg
shlb
dec
mov
xor
inc
cmpsb
sbb
or
add
fildll
pop
les
lret
jg
inc
inc
cld
jnp
cmpsl
sbb
loopne
aas
enter
xchg
push
inc
xor
test
or
shrl
xchg
lock
inc
lods
mov
jb
cmp
sub
leave
fsub
jns
jne
in
shrl
cmp
push
sub
fwait
sbb
sub
sub
incb
sbb
test
mov
sub
pop
stc
inc
fisubrl
lods
adc
pop
sbb
pop
out
lcall
sbb
sbb
inc
push
adc
stos
icebp
mov
shlb
xor
divb
lods
into
push
xor
adc
and
outsl
inc
jns
sub
aas
insb
je
push
mov
xchg
inc
mov
push
mov
mov
in
int
or
addr16
not
mov
outsb
ss
cmp
jb
push
pop
or
fldenv
cwtl
mov
bound
push
mov
inc
xchg
pusha
in
daa
or
hlt
push
or
and
lods
push
mov
shrl
lods
ret
cmp
pop
aaa
enter
fdivrl
pop
mov
add
sbb
cmp
xchg
je
das
or
lds
faddp
aam
cmp
inc
ss
imul
mov
loop
push
lods
mov
repz
pop
pop
or
gs
sub
jge
mov
aam
sub
push
xchg
test
mov
jnp
ja
pop
sahf
mov
inc
fadd
or
cmp
dec
or
or
mov
pop
je
inc
cli
clc
sbbb
movsl
and
out
out
sti
test
push
mov
std
adc
inc
cmp
repz
sbb
push
inc
adcb
dec
sub
sarb
cwtl
outsb
inc
rcr
inc
int3
daa
push
rcrl
push
mov
cmpsl
add
cld
je
insl
loopne
adc
jbe
pop
pop
ficoml
and
and
mov
sahf
popf
enter
cltd
je
stos
orb
or
aaa
flds
and
dec
movsl
aaa
sbb
xor
andl
rolb
jmp
mov
je
ja
jp
jp
scas
cmc
fldenv
cwtl
pop
cmp
adc
test
dec
adc
mov
xchg
gs
lahf
pop
mov
jl
jmp
addl
mov
mov
popf
cmc
push
mov
mov
cwtl
inc
clc
enter
adc
mov
inc
mov
iret
cwtl
es
dec
adc
and
stos
je
fwait
mov
arpl
adc
fwait
aas
arpl
or
dec
clc
and
lret
xchg
into
divps
push
fwait
dec
xorl
jecxz
addr16
xor
frstor
pcmpgtb
ret
mov
mov
addl
movsb
xacquire
jp
das
clc
iret
test
ljmp
imul
sub
loopne
pop
js
jo
clc
sahf
xor
push
fsubp
setne
cld
mov
cmp
fcmovnu
lahf
rcll
add
std
jecxz
push
xchg
or
inc
mov
mov
xchg
jae
dec
jb
jl
jne
adc
sbb
lret
add
jae
push
rorb
push
jge
cmp
repz
dec
loop
lret
cltd
xchg
mull
cli
sub
add
mov
and
sub
ds
pmaxsw
lret
mov
ficoml
sbb
xor
aaa
lret
sub
mov
inc
data16
fsubs
enter
aad
sub
and
dec
insl
pushf
popa
sub
cli
jae
dec
jo
sbb
mov
jne
lret
or
mov
rcll
clc
add
xor
jb
and
mov
push
into
dec
mov
jge
stc
fcomps
inc
inc
out
inc
sub
aas
sbb
addr16
mov
xor
pop
icebp
or
dec
cmovs
insl
inc
scas
pop
sbb
add
dec
jmp
pop
xor
mov
push
dec
movsb
loope
add
xlat
mov
gs
movsl
shlb
mov
add
test
testb
inc
outsb
and
push
dec
mov
jp
pop
push
popa
outsl
jmp
xor
aad
push
push
aad
or
add
clc
cmp
mov
insl
mov
push
sbb
testb
cltd
in
pop
clc
jp
jl
out
inc
mov
mov
das
add
scas
push
ja
movb
and
cld
mov
lahf
add
aaa
test
mov
jbe
arpl
xchg
pop
aaa
dec
repz
xchg
leave
pop
jmp
inc
cmpsb
adc
popf
mov
xor
lds
das
xlat
js
lret
adc
lods
push
in
mov
outsb
xchg
push
clc
fiadds
inc
xor
jnp
shrl
loope
rclb
cmc
sub
or
fdivl
push
rorb
lock
sbb
imul
movsb
ljmp
into
das
fists
jae
loopne
xchg
lods
xor
and
jmp
and
cmp
pop
shl
mov
data16
loopne
jmp
test
outsl
movsb
cmpsb
loopne
in
push
movsb
jp
mov
mov
mov
cmp
call
lods
ds
jo
pop
gs
mov
leave
mov
lea
xchg
dec
popa
sar
mov
ljmp
jecxz
repnz
jne
and
fs
out
inc
in
in
add
cmc
push
movsl
dec
test
xchg
pop
rorb
fs
lds
add
enter
cld
and
fnstenv
andl
aas
je
inc
add
notb
test
insb
test
jno
sti
arpl
scas
add
cmc
or
mov
inc
mov
xor
clc
push
mov
fnsaves
test
inc
lahf
and
jb
testb
and
shrb
adc
lock
push
cmc
std
ficoml
mov
xchg
jg
js
outsl
daa
les
repnz
xchg
inc
dec
shl
aas
stos
add
pusha
adc
mov
xchg
ret
lret
je
xor
shlb
pop
repnz
shrb
dec
pop
xor
std
test
lret
arpl
sub
pushl
mov
adc
scas
in
in
outsl
xor
xchg
sahf
xchg
loope
sbb
popf
mov
cmpsl
mov
cmp
lret
mov
add
adc
jecxz
outsl
ds
lret
popf
cltd
aam
mov
jnp
lahf
pop
cmp
cmpsl
loopne
cmc
dec
sub
jo
xchg
mov
mov
test
int
push
xchg
mov
movsl
lcall
xchg
cmc
sbb
push
movsl
pop
or
xchg
adc
sarl
sbb
loope
je
and
mov
jne
xor
and
mov
push
sahf
push
sub
add
scas
jecxz
out
je
xchg
jno
out
mov
mov
pop
in
repz
mov
jle
xchg
aas
add
popf
cmc
jae
imul
stos
sbb
sub
sub
push
test
sbb
mov
cmp
std
inc
in
adc
sub
pop
jmp
sub
push
xor
mov
xchg
scas
mov
push
push
sti
loope
mov
jae
test
cmp
out
xor
incb
popf
lds
pop
iret
adc
sbbl
xlat
fstl
jmp
xor
sub
pushf
mov
addr16
sahf
mov
clc
gs
in
sbb
and
arpl
xor
xor
mov
xor
add
add
shlb
push
mov
aad
inc
inc
xor
cwtl
into
cli
das
push
jb
jmp
cs
ljmp
push
nop
ljmp
movsl
inc
inc
jle
js
in
push
push
inc
ja
addr16
pop
loopne
cmp
retw
dec
add
push
dec
dec
dec
or
adc
mov
adc
sti
jae
lods
dec
lcall
mov
mov
repz
cmpsl
xchg
cwtl
adc
insl
cmp
jns
push
mov
rorl
fcompl
rol
sub
sahf
xchg
gs
loopne
repnz
addr16
shll
cwtl
adc
mov
dec
adc
cmp
push
push
xor
add
pop
mov
ss
es
push
sub
and
or
subl
jno
in
add
push
sahf
jle
xchg
pop
inc
ljmp
mov
jns
dec
int3
shlb
jnp
fists
filds
adc
scas
and
xor
push
mov
lods
pop
pop
sub
sub
notb
dec
pop
fcmovu
cs
and
push
cltd
test
or
loopne
or
sbb
mov
push
repnz
pop
in
xchg
clc
inc
dec
fstpt
mov
jo
int3
jge
mov
cmp
gs
popa
push
cmp
pop
mov
mov
adc
mov
js
shl
add
pop
xor
push
jae
add
sbb
add
mov
mov
pop
in
insb
in
inc
pusha
clc
adc
mov
jne
dec
adc
xchg
xchg
repz
aam
ror
filds
cmpsl
std
push
movsl
ds
xchg
pop
insb
ret
and
lock
cltd
xor
dec
pop
cmp
jnp
push
xor
xchg
repnz
jmp
shll
xchg
mov
xchg
jo
xor
fwait
or
dec
or
jnp
dec
cwtl
jb
push
jnp
outsl
cmp
or
mov
pop
dec
push
lahf
fsubrp
rolb
and
aaa
jle
ficompl
lock
bound
adc
cmp
xchg
mov
and
mov
xchg
cmp
mov
pop
sub
sub
out
mov
add
sbb
lahf
jbe
arpl
jg
dec
add
ja
popa
out
loopne
jbe
leave
pop
jmp
loope
jae
clc
dec
and
xchg
cld
add
insl
and
inc
xchg
and
mov
cmpsb
push
jno
mov
and
idivb
jo
popf
into
jl
adc
push
scas
mov
outsb
xchg
in
add
insb
xorb
lcall
or
dec
imul
rol
ss
jp
mov
push
iret
test
xchg
dec
mov
jecxz
out
xor
pop
jl
js
pop
lods
sub
sub
js
push
pop
repz
lods
cmpsl
pop
sbbl
xor
cmp
ljmp
xchg
dec
cmpb
aas
push
cmp
sbb
jle
je
insl
xor
subl
sbb
mov
push
push
testb
xor
and
push
repnz
mov
gs
add
aas
in
pop
movsb
xor
pushf
and
adcl
out
mov
and
in
add
mov
or
aaa
mov
adc
int3
decb
ljmp
cmp
ss
mov
mov
shlb
xchg
imul
icebp
sub
pop
in
int
mov
add
pop
sbb
jecxz
sbb
jecxz
sti
dec
mov
ss
sbbl
inc
mov
push
mov
leave
cwtl
jnp
seto
cld
xchg
dec
lock
hlt
fsub
lahf
int
aam
icebp
sub
icebp
js
fsub
add
lret
xorb
xchg
fiaddl
mov
call
insb
sub
sub
jp
xchg
sbb
pop
inc
out
ret
int3
sar
jl
push
icebp
inc
call
add
das
test
cmc
jns
add
sbb
roll
int
iret
jle
adc
loopne
or
gs
push
fsts
mov
cmp
jl
sub
shrl
sub
fimull
mov
mov
jp
rcl
mov
lret
mov
push
outsl
push
es
xchg
cmp
jo
insl
sarl
in
xor
mov
push
mov
aaa
mov
rcrb
unpcklps
fmulp
adc
add
rclb
adc
lcall
push
jmp
test
ljmp
repz
pop
scas
cmpsl
js
loope
dec
dec
sahf
roll
enter
sahf
push
rorl
inc
push
outsl
rcl
and
pop
clc
cli
aaa
inc
cmp
and
mov
pushf
inc
sbb
stos
mov
mov
dec
rcll
push
fldenv
int
jl
stos
adc
xor
push
pop
mov
pop
add
daa
cmc
test
and
or
jmp
or
rcr
pop
sub
ret
push
ret
push
leave
adc
iret
add
jp
ljmp
sbb
jne
push
int
sbb
mov
jle
ljmp
mov
faddl
jb
mov
sbb
aam
aas
popa
xchg
jl
cli
lahf
test
lds
pop
or
aad
das
xchg
cmpsl
and
jmp
mov
fcomip
adc
xchg
add
leave
sbb
sub
shr
dec
adc
and
dec
in
mov
nop
adc
fsubl
imul
insb
push
aaa
and
test
xorl
loop
jmp
insl
mov
jno
gs
in
aaa
and
ret
sbb
aas
mov
int
clc
sub
push
add
cs
cmpb
xor
cmpl
and
xchg
aaa
insb
fsubrl
iret
std
mov
sub
add
shlb
mov
mov
mov
sbb
iret
mov
test
shl
repz
push
cmp
cmp
xchg
sahf
repnz
cmp
int3
inc
lods
dec
fcmovb
dec
mov
pop
jecxz
cmp
jnp
addb
sub
ljmp
mov
roll
pop
loope
dec
iret
rcrl
add
loope
test
push
fistps
pop
mov
push
test
test
in
or
in
rcr
dec
mov
test
fstpt
dec
or
adc
sub
dec
mov
inc
orb
out
pop
jne
dec
cmpsb
inc
mov
mov
outsl
cld
dec
pop
adc
cmc
fdivrs
adc
xchg
imulb
xor
xor
xchg
inc
fstps
sbb
sub
xchg
aaa
fimull
ret
push
out
lods
and
push
add
dec
jnp
sbb
mov
or
xor
cmpsl
cmpsb
jp
rcl
cmpl
int3
mov
mov
push
out
fs
in
jmp
sbb
cmovno
jl
sub
lea
outsl
dec
stos
sub
pop
pop
test
mov
idivb
inc
mov
cmpsb
cmc
dec
push
fldenv
push
movsl
push
mov
es
jb
scas
jle
test
inc
pop
test
out
jns
loope
sbb
in
adc
add
in
mov
divl
jne
push
inc
push
adcb
sub
rorb
testb
fcmovnbe
xor
xor
jle
out
out
push
pop
pushf
int
dec
dec
and
xchg
fisttpl
inc
shlb
and
fldl
push
rcrl
pop
ja
shlb
adcl
sub
pushf
cmp
je
sub
in
call
xchg
outsl
mov
pop
jg
test
mov
daa
test
sub
adc
mov
mov
je
jmp
loop
pop
cltd
cmc
mov
dec
mov
inc
xchg
jp
sub
int
inc
jno
fnsave
jmp
cld
pop
fistl
cli
adc
mov
pusha
addl
ret
cs
dec
aam
cmpsl
call
push
call
pusha
fisttpll
or
adc
cwtl
loop
out
bound
movsb
cmpsl
mov
fisttpll
fs
xlat
mov
pushf
push
xor
pop
movsb
add
dec
mov
aam
sub
mov
loopne
jmp
ret
adc
jl
mov
inc
jns
call
enter
outsb
inc
lds
insl
lock
mov
test
push
inc
xchg
ficoml
enter
mov
jle
sub
sub
into
fisttps
fdivrs
push
jmp
fsts
pop
stc
ret
xchg
cmp
pop
add
mov
sti
outsb
scas
clc
xor
fdivl
or
pop
ja
shrl
sahf
in
pusha
cmp
pop
inc
sti
jb
enter
mov
push
in
push
xorb
cmp
test
jmp
imul
lss
fnsave
rorb
dec
repnz
mov
inc
add
movsb
add
push
out
std
pop
push
sbb
xchg
xchg
stos
pushf
jecxz
jecxz
les
cmpsb
jno
lahf
jge
xor
getsec
sub
sub
dec
or
cmp
data16
push
loop
or
pop
mov
int
add
sub
xchg
cld
cli
sarb
mov
xchg
rcrb
cli
or
and
out
push
adc
jb
imul
ja
cmpsb
fcmovbe
adc
ret
xchg
test
push
cmp
sub
inc
fadds
sbb
sarl
sub
xorb
jecxz
pop
or
cs
push
roll
imul
fmuls
adc
xor
popf
dec
push
lea
jmp
lock
es
std
test
inc
adc
cltd
movsb
sub
cmc
fnstenv
cwtl
cmp
imul
loop
call
and
jmp
rolb
xor
xchg
scas
out
jns
add
jge
mov
xchg
js
shr
cld
jl
aaa
add
xchg
dec
push
mov
jae
lods
ror
aam
dec
push
jo
or
and
lock
mov
sar
mov
sub
imul
fwait
mov
fsubp
fists
int3
pushf
adc
pop
push
aaa
inc
js
jnp
pusha
aas
mov
repnz
les
jmp
mov
int3
xchg
dec
sbb
bound
pop
shlb
dec
dec
push
roll
arpl
push
mov
or
mov
add
fsubp
inc
push
or
mov
add
add
sti
push
or
pop
push
int
pushf
jmp
add
cli
mov
in
xchg
rcrb
lods
jg
mov
ljmp
cmc
push
mov
mov
lahf
push
mov
inc
and
sti
inc
sub
push
mov
imul
aam
cmpsb
cmc
scas
pusha
cmp
push
sahf
mov
xor
adc
sbb
dec
pusha
outsl
xor
nop
mov
cli
add
pop
icebp
or
add
fildl
cltd
je
or
push
fnstsw
sbb
lds
ja
jg
scas
test
inc
cli
adc
aam
cmp
cwtl
in
cmc
hlt
sub
push
cmp
fdivs
jl
xor
fs
push
dec
sti
mov
inc
pop
imul
mov
mov
push
mov
cltd
or
fisubl
pop
jmp
scas
add
or
push
dec
lock
test
out
mov
sbb
out
push
cmp
mov
out
inc
push
imul
imul
shrl
test
movsb
adc
mov
jp
cmp
xchg
imul
cmp
cmp
lret
inc
push
cmp
repnz
pop
rorl
movsl
or
lods
test
mov
insb
sti
push
mul
test
dec
popf
pop
jns
enter
mov
out
adc
adc
in
lods
mov
mov
repnz
pop
or
push
add
mov
and
aad
push
pop
mov
xor
lds
pop
arpl
enter
rcll
gs
inc
bound
mov
dec
imul
add
rol
cli
notb
sbb
and
leave
ljmp
dec
ret
push
dec
xchg
xor
aam
xor
xchg
in
ds
dec
xor
lcall
mov
push
das
mov
cmp
adc
jmp
pop
icebp
xor
jle
bound
sbb
mov
pop
and
mov
mov
insl
mov
into
fcompl
mov
repnz
mov
cld
shlb
fsubr
jae
mov
cmp
sarl
or
cmp
ss
js
or
sbb
xchg
enter
jne
sbb
mov
fwait
cwtl
popa
sbb
pop
cmpb
dec
jecxz
cmp
int
test
bound
sahf
ror
bound
xchg
cltd
shll
lret
dec
sbb
sahf
repz
lock
cmp
push
hlt
das
and
jo
dec
xor
pushf
sbb
mov
dec
es
loopne
xorps
inc
xor
shrb
dec
push
adc
mov
xchg
pop
push
push
inc
push
or
gs
cmpsb
mov
loopne
push
ret
and
or
xchg
push
test
push
dec
popf
idivl
fs
in
dec
insb
loopne
inc
push
or
cmpsl
dec
jb
xor
pop
inc
mov
add
mov
or
bound
sbbl
out
mov
in
xchg
cli
dec
push
jbe
pop
jnp
mov
sub
loop
pop
aas
fimull
adc
inc
sti
testb
jnp
cltd
mov
xchg
fwait
adc
xor
fwait
pop
popf
push
dec
fadds
sbb
push
in
in
jb
inc
mov
stc
lea
ret
mov
out
jge
je
pusha
mov
sbb
ffreep
sbb
gs
iret
and
fcomp
shll
dec
sub
jns
loopne
in
sub
repz
xchg
or
or
adc
mov
jb
mov
jecxz
adc
fmuls
lds
fidivrl
iret
pop
dec
jmp
mov
inc
lock
inc
xchg
fiadds
hlt
mov
por
adc
out
jecxz
movsb
fs
fildl
mov
mov
cmp
fisttps
add
inc
in
lret
arpl
jae
addr16
pop
gs
or
std
dec
das
repnz
out
mov
imul
mov
sarb
loopne
ljmp
enter
arpl
out
fcomps
inc
lcall
clc
adcb
dec
loop
mov
fucomip
inc
mov
xlat
sub
jns
inc
push
das
push
hlt
je
popl
inc
movsl
inc
outsl
xchg
pop
mov
aaa
jmp
push
cmp
dec
sbb
dec
aam
sbb
jnp
aad
jae
ret
push
loopne
mov
in
add
ret
mov
add
btcl
mov
dec
xchg
xor
cli
sub
dec
dec
hlt
fdivl
add
dec
daa
jbe
mov
dec
test
enter
fbld
lods
out
ret
je
int
or
push
rcrb
ljmp
push
jo
mov
mov
cmp
pop
mov
sbb
sbb
lods
test
out
push
in
jle
cmpsb
inc
cmpsb
pop
xchg
mov
jle
pop
dec
daa
in
or
lea
jl
lahf
popa
dec
cmp
mov
xor
jg
pop
sub
mov
pop
fnstcw
inc
mov
mov
stc
pop
push
adc
sub
loope
inc
ja
inc
dec
lods
mov
ss
dec
mov
lods
dec
js
shll
sahf
jo
insl
jp
jb
mov
outsb
push
test
push
neg
pushf
adc
inc
adc
into
call
cli
pop
int3
cmp
pop
aad
dec
adc
jne
mov
mov
les
imull
test
mov
inc
arpl
sbb
sarb
push
sbb
and
push
icebp
subl
fwait
mov
pop
in
xchg
and
pop
imul
sub
mov
ret
push
aad
dec
xchg
dec
xlat
loop
sbb
sub
push
ret
adc
adc
mov
mov
adc
and
mov
fcmovne
lret
fcmovbe
cld
orl
repnz
push
scas
pop
mov
fwait
xchg
repz
sbb
push
into
lds
mov
mov
fsubrl
sub
pop
cmc
imul
mov
je
pop
repz
into
es
and
mov
mul
icebp
mov
out
hlt
inc
stos
int3
and
imul
sbb
rcll
test
add
and
cmc
jecxz
and
sub
pop
int3
xchg
lret
push
cmpsl
lock
pushf
mov
mov
js
xlat
sbb
inc
adc
notb
nop
and
or
pushf
add
jmp
mov
and
xlat
ds
or
fistps
cmpsb
fisubl
push
cwtl
outsl
call
inc
xor
cltd
inc
ret
in
ja
dec
rcl
cmp
mov
sbb
test
jp
push
std
jno
pop
aad
mov
xor
icebp
in
arpl
inc
and
into
cwtl
rcl
sbb
mov
xor
mov
or
cltd
mov
xchg
mov
subl
in
aas
mov
lret
sarb
outsb
dec
imul
add
dec
lock
sbb
mov
or
ficomps
xchg
push
dec
fdivrs
mov
push
push
lcall
fdivs
sbb
and
fisttps
stos
push
lret
shll
or
mov
sub
sbb
pushf
sarb
xor
popf
push
ljmp
sbb
mov
rcrl
adc
mov
mov
xor
daa
xlat
jge
rcrb
pop
lock
adc
scas
test
aaa
arpl
or
mov
out
jno
push
jb
adc
or
pop
rorl
add
mov
adc
mov
cmpsl
outsl
test
cmp
fcoml
lea
stc
ffreep
popf
sbb
out
hlt
add
aad
repz
mov
cmp
push
cs
adc
cltd
adc
in
in
mov
dec
icebp
dec
movsl
push
sbb
or
stos
xor
and
ret
sub
sbb
aad
xchg
shl
pushf
lea
push
push
push
cmpsl
fsubrl
sub
inc
or
push
bound
stos
mov
fdivl
mov
in
inc
cmpsl
aas
mov
push
pushf
out
loope
lret
ja
jae
push
sub
adc
aad
xor
test
mov
add
add
lock
cltd
sar
or
sti
in
fsubr
not
xchg
enter
insb
outsl
sti
movsl
repz
jmp
sub
jge
jo
shlb
mov
scas
and
into
lahf
push
out
movsb
mov
jg
pop
sub
add
or
out
dec
cmpsl
adc
repz
mov
xchg
das
push
imul
jp
xor
mov
out
or
ds
xchg
add
fs
add
lret
mov
cmp
dec
mov
push
cmp
lods
push
xlat
ret
mov
xchg
in
jnp
cltd
mov
push
inc
adc
mov
mov
mov
jnp
dec
jp
test
aas
hlt
inc
pushf
das
inc
fcmovu
lock
in
out
arpl
popf
jo
and
ret
movsl
mov
adc
loop
push
pop
dec
dec
in
mov
data16
sbb
inc
into
out
mov
and
inc
stos
inc
adc
sub
sbb
clc
movsb
dec
lret
lcall
outsl
lods
clc
sahf
jmp
test
push
add
pop
fisttps
inc
stos
mov
push
ds
jmp
add
adc
outsl
pop
or
add
xor
popf
mov
xchg
fmuls
jb
test
add
into
xchg
jmp
lcall
divl
adc
lods
out
ss
pop
sbb
adc
push
adc
shrb
fsubr
je
add
stos
dec
fisubl
call
jnp
mov
push
inc
addr16
jnp
mov
ds
movsb
add
stos
adc
sub
std
mov
xor
cli
pop
or
fst
mov
ja
xchg
cmp
sbb
ljmp
in
push
inc
icebp
arpl
inc
jns
insl
jo
inc
adc
daa
pushf
adc
lretw
inc
data16
mov
data16
loope
add
fistpl
cmp
clc
push
addr16
in
dec
jecxz
inc
scas
sarl
mov
dec
out
sbb
mov
or
pop
sar
xchg
in
cmp
xchg
mov
loope
inc
outsl
fnstcw
sbb
and
jle
lds
dec
xchg
aad
lcall
pop
rclb
cmpsl
mov
aam
ja
stos
js
lods
daa
aaa
loopne
mov
notl
xor
data16
cwtl
mov
jae
pop
mov
or
stc
pop
dec
jnp
add
insb
ja
mov
cmc
sbb
jnp
ret
icebp
or
add
xchg
mov
push
outsb
xchg
mov
mov
cmovl
adc
ja
push
fildl
cld
mov
repz
push
pop
mov
dec
cld
xor
aas
cmp
or
push
jae
jo
pop
mov
mov
jno
scas
xchg
pop
cli
dec
jae
jno
xor
add
xchg
fcomip
dec
subw
shlb
hlt
inc
int3
jb
pop
jge
movsb
out
in
inc
push
mov
sbb
imul
xor
pop
andl
xor
xor
test
mov
imul
lahf
out
mov
pop
push
dec
xchg
xor
outsb
ds
or
xlat
jae
jg
fbld
inc
push
push
rcrb
xchg
xchg
pop
and
add
sub
cltd
nop
adc
mov
xchg
dec
jmp
xchg
jp
cmpsb
and
xchg
insb
sub
or
rcll
sbb
rorl
push
mov
outsb
inc
loope
pushf
pop
push
jg
mov
sarb
pop
jo
outsl
test
jl
lds
fsincos
mov
dec
inc
repnz
jns
push
mov
sub
jp,pt
dec
xchg
scas
jnp
adc
push
repz
xchg
shr
fcompl
mov
xor
inc
jl
or
fsubl
xchg
ja
inc
mov
pop
xor
lret
cltd
leave
adcl
nop
mov
loopne
xchg
xlat
inc
inc
mov
pop
jle
into
jne
mov
mov
mov
cmp
je
jmp
jb
or
mov
or
adc
jge
or
jp
mov
mov
pop
push
push
aaa
inc
scas
call
xor
hlt
inc
or
push
ret
and
js
subl
das
rcr
sub
cmc
enter
std
jns
mov
and
or
fcomip
sbb
and
in
or
jo
xchg
outsl
mov
repz
push
inc
mov
mov
sub
pop
and
ljmp
lods
inc
adc
movsl
adc
pop
dec
pushf
decl
push
in
int
fildll
pusha
mov
call
mov
sbb
ss
popa
add
ret
cmp
addl
sub
inc
mov
xor
jg
sub
xor
lods
adc
int3
out
jns
or
out
outsl
mov
rclb
ret
and
jp
jecxz
adc
enter
sbb
shr
push
enter
sub
es
mov
jo
ljmp
cltd
fwait
jge
pusha
xor
add
mov
loop
mov
xchg
mov
inc
mov
jb
test
mov
int
and
roll
je
or
je
pop
dec
pop
push
sub
jns
je
cmp
test
jbe
inc
sti
daa
out
clc
lds
xchg
lret
dec
ret
jne
scas
push
lcall
js
call
arpl
shlb
lock
mov
ljmp
sti
mov
dec
out
jl
add
or
and
or
or
pushf
lods
add
bound
sahf
in
movsb
mov
push
push
add
aaa
mov
lret
mov
sahf
insb
in
cmpsl
mov
jnp
mov
into
mov
pop
cmp
dec
imul
mov
jecxz
adc
repnz
movl
inc
mov
loop
pop
xor
test
in
mov
and
push
xchg
repnz
push
jle
movsl
xchg
idivb
pop
xchg
orb
mov
lods
push
pusha
lahf
pop
in
cld
loopne
adc
mov
adc
rcl
cs
lods
fnstsw
stos
inc
fmull
popa
cltd
out
adc
xchg
xor
int
jo
aad
call
jl
shlb
outsl
test
mov
ja
xlat
add
sub
push
or
mov
sbb
adc
sbbl
dec
cmp
push
pop
sub
jno
xor
dec
dec
movb
add
mov
add
int3
or
mov
addr16
aaa
push
push
mov
mov
mov
sahf
fwait
test
push
xlat
push
pop
xchg
push
xchg
push
imul
mov
lahf
or
mov
bound
mov
loope
out
and
mov
mov
ja
inc
fnsave
pop
lds
call
jecxz
mov
ja
push
adc
mov
mov
mov
adc
enter
stc
pop
daa
pop
cltd
adc
daa
call
frstor
cmc
and
inc
rolb
lds
movsl
and
fdivl
adc
cmp
test
pop
aam
push
orl
sub
inc
mov
pop
ret
and
cmpsb
dec
adc
aad
lcall
xchg
push
jae
fs
cmp
test
test
mov
pop
ret
jecxz
mov
jle
inc
mov
cmp
js
pop
xchg
mov
adc
push
jne
inc
shrb
xor
out
mov
jecxz
xchg
imul
push
add
push
sbb
mov
fmull
js
push
out
sbb
lcall
pop
pop
fidivs
mov
ret
ret
push
mov
dec
movsb
popa
xchg
xor
and
mov
sbb
adc
pop
mov
mov
jmp
pop
jecxz
imul
aas
or
into
xor
xor
movsb
push
push
lods
sub
push
les
sub
std
pop
adc
cmc
mov
xchg
and
fnstcw
mov
imul
ljmp
sub
imul
xor
mov
pushf
fisttpll
insl
sub
and
jmp
add
loope
out
adc
inc
out
aam
mov
cs
cmp
xor
dec
xchg
dec
sbb
repnz
divb
fisubrs
lods
outsl
mov
rolb
jge
aaa
adc
jno
adc
movsl
push
jno
addr16
loop
out
hlt
xchg
adcb
pop
rcll
sub
sti
les
add
add
cmp
test
and
popf
loopne
cmp
push
lods
cli
lahf
jo
dec
loopne
decb
cmpsl
ret
mov
pop
sar
cld
or
or
dec
je
lock
pop
sub
shl
ds
cmp
adc
xor
ljmp
xchg
xchg
out
shrb
out
rcll
xor
rolb
add
pop
inc
stos
inc
inc
add
mov
add
jl
out
mov
sub
ss
insb
dec
cmp
mov
add
xor
pop
rorb
ss
fmulp
xor
call
mov
or
lods
pop
in
sbb
push
pop
push
sti
add
mov
rcrl
add
fucom
sahf
adc
push
orb
ss
mov
adc
xchg
leave
xchg
mov
inc
iret
test
adc
jmp
lea
mov
clc
dec
ret
dec
loop
xor
pop
out
imul
or
xor
scas
mov
mov
out
xor
inc
push
lock
mov
enter
enter
dec
aaa
orb
sbb
push
jnp
jne
xchg
sbb
outsb
sbb
int3
das
lcall
ljmp
sbb
outsl
adc
push
ds
outsl
cmc
mov
mov
mov
test
lea
lret
mov
lahf
push
and
adc
in
cmp
ja
int3
es
or
cmp
sub
repnz
dec
cltd
pop
and
shl
popf
dec
mov
arpl
out
in
sbb
and
loopne
int3
jbe
int
inc
lcall
push
fstpt
daa
cmpsb
test
test
mov
adc
or
pop
pushf
pop
inc
int3
bound
push
int3
and
pusha
xchg
shll
arpl
sub
lret
loop
je
fnstsw
push
mov
or
aaa
shll
sarl
outsb
mov
nop
inc
fwait
mov
and
lock
movsl
iret
mov
nop
test
pop
or
bound
jnp
pusha
inc
fdivs
fnsave
cmc
sub
pop
out
mov
sub
clc
stc
inc
xor
push
add
ss
sbb
fwait
add
mov
lods
sbb
sub
iret
mov
bound
les
int3
into
pop
ss
mov
in
push
mov
push
aaa
lea
push
xlat
movsb
lods
pop
je
shl
fdivr
outsb
xor
notb
dec
iret
call
inc
xchg
jmp
cmpsl
mov
repz
and
sahf
out
mov
js
mov
push
xchg
shrb
lea
push
ja
into
or
inc
loope
pop
imul
xor
xor
mov
or
push
cmp
cmp
xchg
pop
in
inc
ljmp
mov
push
cmp
inc
aas
jnp
inc
pop
mov
lret
cli
pop
adc
add
fadd
jnp
inc
testl
and
sbb
jnp
push
rcrb
daa
mov
sbb
outsb
cwtl
lret
hlt
dec
cwtl
popf
add
les
inc
insb
xor
mov
and
cltd
negl
jno
xchg
mov
jp
xchg
pushl
jnp
mov
sbb
aas
in
test
adc
push
mov
nop
ret
insb
sub
inc
cmp
push
test
and
jecxz
call
dec
and
sbb
dec
ret
add
stos
ss
xchg
adc
or
ljmp
cmc
pusha
jp
cmp
shrl
lds
xor
pop
dec
fstpl
pop
mov
pop
mov
mov
and
leave
cmp
jg
movsb
jnp
adc
xchg
push
push
mov
xor
sub
cmp
aas
jb
sbb
cmp
or
or
inc
popf
mov
add
frndint
adc
icebp
or
je
mov
cmp
mov
push
std
xchg
and
lds
faddp
cwtl
aam
dec
fstpt
jl
mov
dec
jns
ficomps
push
mov
xlat
pop
mov
cmpsl
pop
add
push
mov
and
rcr
out
outsb
push
push
mov
imul
xchg
lret
insb
into
out
mov
loop
loope
mov
ds
sub
aad
pop
add
cmpsl
test
dec
outsb
stc
fisttpl
idiv
and
mov
sbb
jg
jge
mov
sub
push
scas
sarl
shrb
std
mov
cmpsb
jnp
push
das
mov
frstor
fucomip
pop
js
and
push
cmp
roll
iret
push
data16
jge
mov
and
dec
cwtl
sbb
lret
iret
imul
xor
xchg
andb
ljmp
mull
inc
icebp
dec
jg
mov
lds
inc
dec
pop
xchg
scas
fidivrl
push
push
mov
mov
add
push
aam
enter
aaa
shl
cmp
aaa
xchg
and
xor
mov
and
xchg
shll
stos
adc
bound
jle
pop
stos
mov
out
fnstenv
jns
ret
fisttps
add
adc
mov
jb
and
push
sbb
adcl
sbb
xor
in
or
jnp
stos
xchg
int3
or
xchg
mov
ja
ljmp
decb
out
out
sbb
dec
dec
cmp
inc
dec
loopne
test
xor
jecxz
je
sbb
xor
push
mov
cmpsb
adc
inc
sbb
xchg
mov
gs
cli
adc
les
mov
sti
std
fstpl
popa
xchg
lock
pop
sub
xor
inc
xchg
adcl
push
jb
add
mov
xor
inc
paddusb
dec
jp
jge
out
fwait
dec
xor
lods
push
pop
mov
xchg
bound
nop
mov
dec
push
pop
xchg
pop
jb
movsb
lea
mov
push
aam
pop
pusha
in
lods
adc
mov
lret
push
xor
insl
adc
add
mov
dec
movsl
adc
pop
movsb
xchg
pop
decl
add
mov
leave
mov
push
push
push
lret
cwtl
bound
jecxz
mov
inc
es
adc
or
mov
and
fstl
in
cmpsb
push
int3
adc
pop
imul
push
add
ficoml
push
ror
sub
mov
mov
call
pop
sub
mov
imul
add
push
dec
aas
adc
mov
icebp
sbb
mov
sti
movsl
ja
lcall
movsl
cmpsl
mov
mov
mov
mov
jne
js
add
dec
pusha
inc
repz
fadds
jle
xchg
jg
outsb
or
imul
inc
and
in
sub
xchg
inc
push
es
je
scas
lcall
jecxz
fidivl
xlat
mov
int3
and
push
enter
rorb
mov
cmc
or
pop
bound
scas
dec
leave
movsb
push
jnp
gs
sahf
xchg
and
cmp
inc
test
pop
cmp
xchg
adc
add
rorl
repnz
cwtl
repz
cmpxchg
cltd
xor
mov
leave
out
fwait
jno
add
ret
adc
jl
or
data16
adc
xchg
xchg
pop
jne
aaa
pop
dec
mov
popa
pop
push
pminub
push
jg
loopne
cmp
lock
rolb
clc
xor
lea
rcll
andps
xor
xchg
add
cwtl
jo
and
cmc
stc
push
xor
ror
sub
imul
fcompl
fstps
aam
jp
notb
repnz
cmp
push
repz
leave
lret
add
shlb
push
inc
bound
mov
lods
les
arpl
add
xor
lahf
jge
mov
pop
popf
fwait
addl
iret
xchg
shr
adc
mov
aas
lret
xchg
es
push
loopne
sub
sysenter
mov
test
adc
cltd
cmp
mov
xor
cmp
add
push
iret
lods
xchg
lods
divb
imul
adc
push
inc
fs
in
and
push
loope
mov
xchg
mov
lea
flds
fadds
cmp
cmpsb
jne
daa
jne
jb
jns
repz
sti
mov
mov
dec
sbb
test
enter
cmp
xor
mov
fs
push
js
sbb
fwait
andl
inc
clc
mov
mov
nop
mov
imul
push
and
pop
push
jb
xchg
popf
repnz
mov
and
sub
std
js
jne
mov
mov
xor
daa
andb
and
cmp
clc
sar
mov
inc
imul
test
insl
mov
pop
push
shrb
mov
jle
lret
mov
js
in
sub
inc
push
mov
jmp
xor
xchg
lds
inc
xchg
out
jns
sbb
sbb
test
daa
or
push
shlb
mov
sub
push
jo
test
shlb
mov
xor
inc
pop
push
in
popa
cmp
jecxz
loopne
loope
lds
mov
mov
mov
xchg
mov
mov
xchg
adc
push
cmp
xchg
ret
fcoms
daa
andb
repz
push
loop
inc
sub
adc
dec
imul
xchg
in
and
dec
fcoml
dec
dec
xchg
xchg
or
mov
popa
fsubrl
push
outsl
fdivl
sbb
xabort
pop
jmp
jecxz
dec
subl
aaa
mov
ja
rcrl
sbb
aam
cmpsl
push
out
cmc
sarb
fists
cmp
jmp
outsl
call
fimuls
ret
jns
sub
aas
push
mov
test
sarl
pop
rorb
or
mov
test
into
push
movsl
sub
es
push
add
mov
sub
je
mov
mov
xlat
sahf
xchg
xor
lock
dec
inc
rcr
xchg
xor
dec
xchg
push
jo
or
jge
dec
into
mov
pop
scas
fiaddl
in
in
pop
push
ret
sub
loope
mov
mov
insb
sbb
inc
cmp
add
test
dec
outsl
stc
test
addl
mov
jns,pt
inc
ja
or
lret
scas
aaa
ror
int3
or
xchg
jne
inc
and
stos
pop
movsl
inc
mov
sbb
inc
lds
pushf
jne
into
inc
mov
push
add
sub
add
push
xchg
add
pop
push
adc
aaa
mov
mov
adc
pop
jo
xchg
mov
shlb
push
dec
shl
mov
in
js
pop
pop
sub
in
je
dec
pop
js
dec
ja
push
adc
push
lret
add
xor
jo
repnz
nop
in
fwait
mov
xchg
push
adc
daa
fcomps
or
sbb
adc
inc
xchg
fstl
movsl
ror
addr16
frstor
mov
popa
gs
ffree
insl
nop
xor
clc
in
push
in
xchg
pop
dec
out
imul
lret
shlb
stos
or
adc
mov
movsl
xchg
push
push
jp
inc
dec
outsl
inc
xchg
cmp
dec
loope
jnp
xor
out
icebp
mov
and
push
sub
fistps
movl
aas
dec
push
sub
xchg
add
mov
or
jl
push
adc
xchg
neg
fldt
dec
fwait
mov
push
mov
orl
lret
mov
mov
mov
or
and
xchg
sbb
cld
sbb
int3
xlat
bound
xor
jbe
cmp
loopne
mov
and
repnz
in
xchg
jbe
pop
loope
das
sub
subb
cmpsb
push
pop
mov
push
mov
push
sbb
dec
fisubl
popf
lahf
ret
or
ljmp
icebp
stc
mov
sub
cltd
mov
out
adc
pushf
outsb
add
decb
push
lret
xor
mov
push
pushf
stos
sbb
sti
dec
mov
pop
iret
inc
mov
jle
fisubl
push
pop
push
mov
bound
jg
pop
mov
pop
fimuls
pop
pop
pushf
cli
scas
std
sahf
xchg
lock
adc
and
int
and
jbe
xlat
movsl
sub
xor
loope
push
xor
ldmxcsr
xor
lcall
adc
adcl
enter
and
pop
pop
out
addps
mov
int3
call
aaa
aam
pop
ret
pop
jle
xchg
divl
mov
pop
jns
push
dec
rcl
ss
xor
clc
mov
pop
into
cmp
push
imul
repz
ljmp
mov
fisttpll
jb
push
mov
xchg
stos
fwait
enter
xchg
shll
fdivs
push
push
insb
mov
or
push
rorl
jb
cmp
loopne
jo
cmpsl
sarb
or
pop
and
outsl
pop
adc
out
movsl
movsl
je
int3
out
jge
cmp
lcall
xchg
lods
negb
sbb
insl
pop
adc
add
imul
sub
xor
mov
adc
jb
or
rcr
push
xchg
dec
call
stos
fstps
cltd
sbb
rolb
push
inc
imul
scas
inc
aaa
mov
lret
ret
arpl
fnstcw
sbb
cmp
sbb
dec
cmp
inc
and
fldt
dec
rorl
dec
cmp
sti
test
in
jmp
add
or
adcl
or
and
jp
mov
outsl
push
and
push
rolb
enter
in
test
jmp
sbb
inc
lret
inc
movsw
pop
data16
ds
outsb
ljmp
add
xor
clc
add
testl
sbb
xchg
sub
dec
in
sbb
call
cld
lea
or
aaa
mov
push
and
enter
xchg
aam
lea
andl
push
stc
mov
mull
mov
cmp
fisttpll
add
dec
adc
jnp
cmp
mov
add
movsb
pop
or
jmp
and
bound
dec
leave
mov
xchg
fstpl
and
sbb
ss
shrb
push
jbe
mov
mov
iret
mov
daa
imul
cmp
out
xor
pop
test
xor
out
push
jg
pop
and
xor
ds
das
jmp
mov
mov
sub
lock
xlat
rorl
and
shlb
push
lock
lock
lret
hlt
cmovne
orl
loop
shrl
adc
mov
mov
out
dec
repz
or
jae
into
rorl
xchg
dec
mov
cmp
and
addr16
lahf
je
hlt
mov
aad
loopne
filds
jns
push
jp
jno
fwait
cld
push
mov
fwait
es
inc
ret
and
shr
aam
rolb
dec
cmpsl
pop
add
inc
xor
mov
out
xor
icebp
es
push
cmpsl
dec
xchg
xchg
std
lahf
xchg
leave
shll
add
cmpb
repnz
or
pop
push
push
or
cmp
xor
add
cltd
iret
inc
negl
ds
xchg
es
xchg
inc
xor
pop
out
or
outsl
mov
jmp
fcmovnbe
xchg
inc
pop
mov
mov
pop
cmpsl
rorb
pop
xchg
inc
cli
sub
shll
nop
mov
mov
sti
pop
in
or
sub
push
xchg
or
je
fdivl
inc
aam
and
pop
cmpsb
jo
adc
cwtl
fdiv
mov
xor
and
in
mov
das
mov
adc
je
cmp
icebp
cli
xchg
and
jo
outsb
mov
aaa
push
in
out
cld
cmp
or
mov
xchg
sbb
nop
sbb
ds
hlt
adc
sub
pop
push
pop
push
lods
add
mov
add
aad
dec
mov
push
mov
iret
pop
adc
cmp
js
inc
and
push
aas
or
mov
xor
push
enter
pop
mov
sbb
adc
or
and
jp
pop
scas
push
cmp
test
out
xchg
test
cmp
add
and
jg
sahf
jae
lea
xor
xchg
insl
xchg
push
stos
fcos
ficoms
sub
pop
inc
inc
or
or
cmpsl
mov
sbb
call
cmp
adc
push
stos
mov
inc
jecxz
in
push
dec
inc
add
mov
mov
rcll
or
sbb
iret
mov
jbe
stc
cmp
out
jne
lret
and
clc
pop
and
adc
fildll
les
sbb
in
add
popa
push
in
jle
in
js
adc
adc
int3
scas
jp
divl
nop
jp
in
ljmp
mov
insb
aad
stc
adcb
sbb
pop
rcrl
pop
lock
push
dec
cmp
movsb
notb
je
test
test
pop
push
in
into
inc
push
jno
lock
jbe
cmc
out
icebp
sbb
add
add
scas
js
inc
xchg
sarb
das
pop
cmp
orl
push
out
cwtl
rcrb
ror
lock
jmp
enter
cmp
mov
ret
jge
xlat
mov
sbb
dec
je
lcall
mov
mov
xchg
les
pop
sub
jg
adc
lods
and
or
pop
jne
int3
movsb
mov
pop
cmp
pop
loopne
mov
push
push
ret
subb
sbb
mov
test
iret
pop
xor
mov
pop
mov
mov
data16
jp
inc
pop
xchg
sbb
jl
lods
sub
shrl
sub
dec
jns
loop
dec
pop
imul
jmp
and
lock
fsubs
sub
push
jns
mov
inc
xchg
adc
add
and
js
or
inc
dec
jo
stc
xchg
inc
movsb
pushf
aaa
and
pop
push
lock
or
aam
jnp
adc
push
call
jg
xor
inc
imul
pusha
cmp
rolb
pop
insb
into
in
mov
xchg
sub
loopne
sarl
loop
imul
insl
or
stc
jecxz
orb
jnp
mov
insl
fwait
aas
in
aaa
mov
jl
push
xorb
inc
jns
dec
je
fnstsw
leave
mov
adc
les
dec
stos
push
mov
inc
dec
fwait
sti
jbe
sbb
ljmp
ss
adc
push
loop
pop
jno
and
inc
inc
and
xor
mov
clc
cld
mov
popa
out
shlb
sub
data16
mov
cwtl
clc
push
stos
arpl
mov
push
sub
das
hlt
mov
xor
mov
nop
in
pop
adc
mov
xchg
lods
and
cwtl
push
cmp
in
push
jmp
lods
xchg
adc
arpl
dec
test
pop
sbb
faddl
idivb
sub
sub
xor
pop
sbb
in
jl
mov
jecxz
hlt
cld
fisttpl
sti
cmp
mov
in
lea
push
push
repnz
push
sahf
aaa
push
or
add
cmp
mov
sbb
pop
loope
mov
dec
mov
inc
addr16
loope
push
mov
aam
shl
pop
sahf
js
push
mov
push
push
mov
pop
test
ljmp
sbb
inc
outsb
pop
jmp
repnz
cmc
cmpl
outsb
lahf
adc
pop
stc
jle
scas
ret
add
repnz
shll
pop
aaa
jnp
mov
loop
adc
lea
xchg
mov
sbb
jge
imul
sbb
or
loope
jg
out
xchg
cs
fsubr
jo
xchg
push
jo
cmp
mov
repnz
mov
ds
imul
mov
dec
arpl
mov
sub
aam
add
pop
ret
sub
ficoml
mov
push
leave
and
gs
push
jmp
add
fisubrs
out
es
in
out
imul
mov
and
roll
mov
inc
push
jno
pop
popa
rclb
int3
or
jp
and
ret
ds
mov
xor
add
mov
in
sbb
aam
sbb
push
xorb
rorl
push
pop
insb
les
pop
bound
scas
adc
jae
lods
movb
shrb
repz
mov
shll
pusha
xor
pop
icebp
stos
das
out
push
lea
push
pop
xchg
jg
divl
loop
dec
pop
dec
bound
inc
push
push
dec
movsl
pusha
mov
ret
jb
push
push
pop
int3
ficoms
out
pop
adc
lret
and
xor
pop
mov
fs
test
and
jl
jb
aaa
ljmp
in
pop
in
clc
into
and
mov
stc
stos
pop
into
jb
lret
mov
pop
repz
sbb
push
insl
inc
sub
xchg
adc
inc
inc
cwtl
jmp
lods
aas
je
popf
les
shl
sbb
arpl
xor
xor
dec
xchg
push
gs
stc
pop
in
inc
je
cli
fidivs
sbb
lea
fwait
push
cwtl
movb
jmp
add
cmp
inc
sbb
pop
xchg
ret
daa
or
push
sahf
and
dec
add
jno
aaa
in
repz
inc
mov
add
cmp
and
loopne
neg
or
roll
sbb
pop
mov
aas
push
or
iret
push
cmp
xlat
les
in
add
cli
gs
icebp
push
inc
jge
leave
pop
xor
ja
aam
xor
inc
outsl
mov
test
cmp
mov
mov
mov
cmp
mov
dec
in
fsubrl
fmull
xchg
cmp
adc
cltd
cmp
in
test
pop
inc
fidivrs
xor
add
jle
sub
aas
in
or
outsb
lcall
test
imul
icebp
fcoml
sbb
rorb
sub
adc
pop
iret
sbb
sbb
je
sahf
dec
sbb
incb
dec
or
fnstcw
pop
xchg
ja
xor
test
pop
and
pusha
and
mov
jl
push
mov
jno
pop
add
fdivl
sbb
mov
fucomp
cmp
out
insl
cmp
sti
mov
mov
ret
test
xchg
cmovg
popf
ss
adc
sbb
push
push
xchg
test
sub
ret
xchg
scas
movsl
xchg
punpcklbw
nop
jb
cld
and
in
popa
xor
push
fs
out
cli
sbb
repnz
dec
cld
add
dec
sar
stos
cmc
jo
popa
in
xor
leave
mov
xchg
imul
adc
das
ror
shrb
jno
add
cli
sbb
inc
mov
aas
out
add
shrl
xor
outsl
mov
int3
insb
dec
cmp
dec
push
cli
push
out
and
xchg
mov
mov
loopne
pop
lret
pop
jg
push
adc
jns
daa
adc
xlat
mov
ret
adc
pop
cmc
xchg
mov
add
pop
sub
mov
and
mov
je
test
lahf
push
pusha
add
push
int3
out
lret
push
lahf
imul
insl
pop
and
iret
xor
nop
push
xchg
shl
mov
jecxz
xchg
inc
imul
lea
out
sbb
xlat
dec
imul
sbb
je
cld
jmp
add
int
or
movsb
loop
mov
pushf
pushf
repz
xchg
leave
cmp
push
ss
add
jl
scas
leave
mov
pop
insb
mov
pusha
stc
push
bound
or
push
in
sub
inc
or
xchg
lods
fsubl
jp
push
rorb
jmp
cmpl
cmp
cltd
ss
add
sbb
hlt
std
adc
mov
push
rcll
cs
cmp
loope,pt
push
fcom
inc
sub
int3
and
data16
push
outsb
popa
scas
xchg
xchg
jne
push
fldcw
adc
addb
ret
lds
cwtl
iret
inc
les
ret
jae
loop
mov
lret
inc
lods
ret
push
les
or
imul
mov
test
sti
into
push
jmp
iret
clc
daa
pop
lods
xchg
jnp
jmp
push
ret
mov
mov
mov
mov
repz
popa
adc
pop
inc
cmp
ret
les
aaa
mov
pop
test
rcrl
fstpl
dec
add
out
add
xchg
push
inc
or
jo
repnz
jg
adc
lods
mov
jmp
jns
in
jmp
js
cmpsl
xchg
scas
pop
subl
pop
jp
mov
cmpsl
pop
loope
fisubrl
pusha
push
cli
daa
ret
push
test
adc
lods
mov
cmp
push
stos
nop
jae
out
or
hlt
into
cmp
nop
mov
ss
xchg
mov
cmp
repz
dec
aad
add
fcoml
fs
cmpl
jmp
fs
clc
dec
fsubs
mov
mull
loope
in
aad
mov
mov
loopne
xchg
enter
cmp
imulb
jle
addr16
nop
cmp
fcomip
dec
mov
xchg
jle
adc
imul
sbb
leave
fs
add
mov
fldpi
je
dec
nop
in
or
xchg
aad
loope
nop
fldz
arpl
cmp
es
and
add
lahf
xlat
insb
test
les
movsl
imul
jae
out
jns
cs
addb
adc
bound
inc
repnz
outsl
out
jnp
add
in
outsl
aas
xchg
test
lods
insl
shrl
imul
or
leave
sub
push
test
and
jecxz
dec
outsb
sbb
outsl
and
inc
out
cli
adc
push
stos
jmp
sub
xchg
decl
mov
adc
scas
int3
xchg
ret
daa
rol
adc
ja
push
pop
cwtl
cmp
inc
dec
pushf
add
or
sahf
or
cmp
sub
enter
push
sarb
ss
pop
mov
and
sub
popf
sbb
lahf
mov
loopne
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
jmp
cmp
mov
stc
mov
flds
mov
fidivrs
jge
or
jp
cld
push
add
add
inc
iret
daa
jmp
lret
pop
imul
push
test
in
and
xlat
shll
inc
ds
jp
ljmp
ljmp
fs
cmp
add
hlt
xor
push
mov
lea
movsb
mov
lcall
and
stos
repz
stc
sbb
dec
aas
loopne
ja
pop
push
movsb
scas
dec
in
mov
cli
xor
daa
movsb
jnp
inc
mov
jp
in
mov
jnp
xchg
dec
pop
inc
mov
movsl
jbe
arpl
mov
jo
dec
adc
movsb
repz
rcrl
mov
pop
or
sbb
push
pop
nop
jl
push
ja
popf
out
test
les
adc
insl
push
fimuls
jno
mov
sub
mov
shrb
jl
push
inc
inc
movsl
jl
stos
loop
xor
xchg
mov
lahf
mov
push
inc
fidivrs
push
gs
push
push
push
stos
push
or
aas
push
bound
dec
nop
jg
dec
mov
arpl
push
push
and
mov
aas
roll
sbb
loopne
or
adc
dec
jns
dec
mov
xchg
push
push
mov
fimuls
cs
outsl
ja
cmp
scas
mov
rcl
inc
inc
ds
ljmp
cmpb
jle
scas
es
dec
rolb
nop
test
and
aaa
in
ret
es
out
sbb
pop
mov
fisttpll
rcl
jb
xchg
sbb
mov
andb
mov
mov
xor
jle
ljmp
adc
mov
pop
aam
jge
pop
cmp
jno
aas
inc
loopne
cmp
pop
in
pop
mov
adc
sub
subl
loop
push
cltd
aam
int
or
add
add
ljmp
stc
dec
mov
sbb
rcrl
jp
stc
xlat
fcoml
sbb
sti
fnstsw
ret
outsl
xor
xchg
sbb
sti
inc
int3
shlb
ja
lret
ja
mov
pop
pop
mov
popa
add
mov
lock
cmovb
scas
stos
cmp
and
subl
loopne
mov
lds
push
jno
adc
lahf
mov
sbbb
push
xor
mov
idivb
mov
mov
adc
pop
jbe
cmpsb
cmp
ss
shll
mov
lods
push
test
cmpsb
das
out
shr
or
add
sub
lcall
cli
xchg
divl
std
std
pop
jl
movsb
inc
mov
sarb
push
mov
enter
add
fs
push
and
pop
idivb
xchg
negb
lret
sbb
loop
cli
xor
aaa
adc
or
xor
inc
inc
cmc
add
push
mov
das
jg
jl
mov
mov
ja
clc
test
ret
or
stos
and
rcrl
sub
stos
sarb
scas
add
push
fisttps
inc
and
inc
xor
jne
adc
ljmp
mov
pop
test
imul
loopne
push
cltd
or
mov
shrb
mov
aad
pop
scas
data16
lds
in
mov
cmc
loopne
mov
mov
dec
pop
paddw
add
pushf
pop
jns
int3
inc
mov
pop
push
mov
pop
jp
add
mov
lock
ss
sar
scas
aas
mov
test
xor
loope
push
stc
jbe
fnstcw
aam
in
adc
inc
xor
sti
sub
or
cltd
mov
out
cmp
sbb
flds
cltd
sbb
test
add
dec
jp
pop
pop
mull
cwtl
dec
outsb
mov
jo
sub
push
sub
adc
pop
jge
push
mov
or
notb
jo
jg
daa
dec
jmp
sub
cmp
lahf
mov
inc
pop
push
jo
pop
cwtl
jecxz
inc
mov
inc
popa
sahf
ljmp
movsb
xchg
dec
push
call
nop
out
push
jmp
pop
ret
and
lret
pushf
adc
sbb
ret
out
sbb
in
dec
out
cmp
inc
decl
leave
fcmove
jmp
cwtl
or
ret
jmp
ja
pop
jmp
call
push
mov
sahf
xchg
aas
fucomp
repz
loopne
fs
scas
cmpsl
push
jb
scas
fimull
inc
test
and
sub
lds
pushf
test
pop
sti
cmpsb
add
loope
pop
cmpsl
pop
or
inc
pop
fcomi
stc
cmp
jmp
jmp
aaa
movsl
ss
and
sub
addr16
lahf
rsm
jno
and
cmp
push
test
out
movsl
dec
scas
cli
hlt
test
lcall
cmpsl
dec
addr16
dec
pop
xchg
inc
jg
mov
orl
out
aad
shr
aaa
in
insl
scas
xor
sti
cwtl
pop
sbb
sbb
in
adc
xor
xchg
bound
loope
pop
push
and
mov
cmp
or
aaa
adc
xchg
hlt
and
paddusb
sub
adc
fisttpl
xchg
jbe
adc
jle
repz
add
or
dec
add
push
movl
pop
lock
arpl
cmp
incl
mov
loop
xchg
sub
clc
mov
je
iret
icebp
xchg
mov
jns
mov
and
jl
and
xchg
adc
sub
xchg
xchg
fimuls
push
jb
sbb
movl
out
rcll
mov
xchg
cmp
cmp
pop
mov
inc
stos
les
icebp
push
cmp
sbb
xor
push
or
jae
mov
pop
dec
cmp
dec
es
push
adc
cwtl
mov
mov
mov
out
xor
test
add
mov
popl
mov
cmp
mov
adc
shll
xchg
cmp
in
jb
push
dec
shl
nop
nop
test
in
out
mov
dec
dec
jo
pop
cli
dec
add
mov
ret
mov
push
push
fimull
lret
xor
imul
and
loope
popw
sub
dec
pusha
insl
dec
push
xor
les
sub
rol
dec
addb
jmp
mov
or
data16
add
mov
dec
jle
cmp
int3
xchg
outsl
add
mov
inc
adc
mov
sub
cmp
inc
push
dec
jbe
or
sub
add
mov
pusha
in
loope
mov
dec
outsb
arpl
inc
popf
cmp
jo
out
push
mov
push
cmp
mov
lahf
inc
and
mov
call
ljmp
or
mov
xor
sub
adc
clc
stc
adc
aaa
ds
arpl
mov
lock
add
add
dec
repnz
ljmp
outsl
pop
in
dec
imul
or
and
jge
rorl
push
xor
lahf
cmp
mov
rcrl
mov
jo
loopne
xchg
addr16
cs
testl
sti
adc
sbb
leave
xor
adc
xor
test
mov
and
and
pop
out
sti
jne
push
stc
movsl
das
sub
mov
jle
je
cmp
push
adc
cld
and
jle
daa
fdivp
popf
or
mov
mov
dec
xchg
iret
test
fistps
push
pop
ss
negl
outsb
movsl
xor
cmp
test
outsb
inc
jns
jnp
ret
jl
adc
insl
jne
jp
pop
pusha
xchg
ds
mov
mov
jnp
cmpsl
aas
lods
cld
out
insl
js
aaa
push
jb
iret
cltd
outsl
pop
sbb
mov
cmp
movsb
pop
push
sahf
mov
mov
push
in
out
sub
insb
push
fwait
adc
inc
loopne
in
pop
insb
cmp
inc
xor
inc
sbb
sub
cwtl
outsb
push
lock
mov
or
mov
fimull
repnz
arpl
test
cmp
jnp
jmp
xor
jne
sub
jl
mov
inc
out
pop
inc
mov
xchg
lods
les
in
jl
cmp
cli
sub
mov
fucomi
jl
ficomps
pop
sarl
lea
pop
add
fdivrl
incb
and
add
or
adc
faddl
push
into
pushf
jnp
imul
fdivrs
clc
add
test
add
icebp
je
sbb
add
enter
scas
fistps
jecxz
enter
cmpsl
mov
stos
into
stos
dec
sub
daa
mov
cli
into
movsl
loop
add
sbb
pop
inc
enter
lock
sbb
rorb
sbbl
jecxz
dec
neg
cmp
sahf
je
jo
and
xor
xor
pop
mov
and
jmp
sub
scas
in
adcl
out
push
mov
outsb
std
call
sbb
sbb
dec
ret
mov
outsb
mov
sub
insb
and
mov
mov
inc
or
adc
insl
leave
ret
addb
push
les
xchg
sahf
sub
jb
clc
mov
jle
xor
loopne
test
lock
mov
call
dec
jne
cmp
push
ss
out
jo
enter
cmpb
cmp
daa
aas
mov
iret
repz
ljmp
push
jne
aad
xchg
fsubr
mov
sahf
aam
add
js
push
push
pop
movsb
dec
out
mov
adcl
imul
cmc
pop
clc
pop
sti
movsl
insb
mov
cmp
mov
movsb
fsubrl
dec
mov
or
xor
and
sub
cmp
mov
xor
scas
mov
push
lock
dec
push
push
data16
mov
sub
mov
xor
push
lock
int3
fsqrt
mov
pop
iret
cmp
jb
dec
push
mov
sbbl
bound
jb
movsb
je
popf
ljmp
jge
cld
aas
testb
arpl
mov
xorb
test
pop
mov
enter
out
add
enter
pop
jp
scas
cmpsl
shr
lret
fdivrl
cmp
xor
sub
pusha
lods
sti
daa
pop
push
lods
or
cmc
aaa
rorb
mov
cmp
dec
cmp
idivb
sarb
les
push
int
int3
mov
mov
sub
js
cld
insb
addr16
xchg
rcl
repz
jle
sarb
aas
jae
xor
int3
xor
push
lea
mov
pop
add
and
or
fildll
add
push
lea
jb
cmp
mov
repz
scas
pop
sub
ret
xchg
orl
cmp
mov
pop
test
or
test
cmp
insb
lret
lods
pop
mulb
loopne
pushf
ja
pusha
dec
xchg
and
mov
jns
mov
insb
divb
inc
cltd
cmp
fdivs
or
jno
fimuls
inc
ljmp
nop
in
jl
insb
mov
cmpsl
inc
xchg
or
ss
rep
cmp
fiaddl
pop
dec
xchg
pop
mov
js
stos
or
lods
mov
adc
jp
fwait
rcrl
cltd
mov
mov
orl
push
std
dec
cli
imul
imul
lock
xchg
jp
decb
xor
cmp
mov
mov
sub
xchg
pop
adc
or
or
push
push
test
adc
popa
dec
or
jecxz
gs
pop
in
les
out
movsl
cmp
loope
cmp
sbb
js
push
dec
jge
lret
sti
push
iret
xchg
sbb
fdivs
or
or
movsb
adcl
push
clc
adc
lahf
mov
sahf
add
je
xor
sub
inc
repnz
bound
dec
jne
repz
inc
fbstp
ja
mov
out
fcomps
mov
push
int
mov
popa
fisttpl
aas
sbbl
fadds
insb
fs
ficomps
or
sub
xor
testl
sbbl
mov
cmpsb
push
sub
cmp
or
xor
shll
push
gs
inc
xchg
fimuls
test
adc
dec
xchg
sub
in
pop
dec
out
js
pop
fildl
cmp
lods
sbb
faddp
and
pop
ljmp
arpl
mov
dec
test
aam
enter
shll
cmp
push
push
xchg
or
lcall
pop
fdivrs
mov
incl
jl
int3
add
andb
fdivrp
adc
add
inc
pop
cmp
jae
push
sbb
test
mov
dec
dec
adc
nop
dec
cmp
les
hlt
xor
gs
cmp
add
into
xchg
and
or
jo
in
insb
das
je
mov
rcrb
and
mov
or
insl
out
push
mov
add
scas
xchg
je
hlt
shll
repnz
shrl
mov
call
inc
out
mov
repz
nop
inc
jnp
and
sti
cmpsl
mov
mov
rolb
mov
pop
sbb
pop
data16
stc
lret
rclb
fsubr
lds
imul
in
lret
pop
xchg
cli
xchg
push
xchg
add
sahf
imul
pop
negb
addr16
jno
cs
mov
pusha
cmp
pop
push
xor
mov
sti
adc
imul
jle
push
bound
pop
sbb
xorb
xlat
xchg
jae
les
test
ja
inc
lea
sub
and
sub
inc
aad
dec
pop
pop
adcl
xchg
arpl
aas
dec
mov
sub
out
hlt
fistpl
add
jb
dec
or
add
call
add
int
test
push
or
sub
inc
xor
inc
or
inc
repz
xor
add
lock
mov
xlat
inc
fsubrs
fwait
dec
xchg
mov
jmp
das
idivl
int3
xchg
rcll
ljmp
movsb
stos
lea
icebp
mov
cld
hlt
mov
adc
nop
jo
mov
je
lret
jecxz
pop
xor
test
mov
pop
xor
mov
loop
add
aad
cmp
insb
cwtl
pop
or
call
and
cmp
and
adc
ss
xchg
cmp
mov
jb
aad
popw
orl
jae
aam
leave
outsl
pop
pop
mov
dec
shrl
mov
lcall
or
inc
push
xor
mov
sbb
roll
loop
ret
cmp
adc
pusha
cltd
adc
xor
dec
xchg
pusha
insl
arpl
mov
lea
lret
stos
xchg
jae
adc
xchg
negb
ret
daa
dec
ret
sub
sub
adcb
xor
pusha
inc
imul
pop
sub
sub
fcompl
out
stos
jge
sahf
inc
and
dec
nop
repnz
scas
adc
mov
imul
lahf
sub
aaa
xchg
xchg
sbb
mov
loope
push
jns
mov
pusha
nop
mov
pop
mull
data16
cld
jae
cmp
pusha
jae
jmp
push
jno
aaa
ror
mov
xor
jnp
cmc
push
adc
outsl
sbb
lods
shl
xchg
and
scas
xchg
loop
stos
aam
pop
imul
xchg
fmul
add
dec
mov
bnd
shl
mov
xchg
inc
sbb
pop
movsl
mov
dec
scas
pop
mov
xchg
and
sub
sbb
je
mov
fidivrs
dec
lods
addr16
dec
mov
sbb
fdecstp
push
xor
cmpsb
inc
cmc
aad
sub
fnstsw
mov
std
fcoms
xlat
jns
out
xor
fnstcw
cmc
and
test
adc
dec
push
leave
xchg
and
push
mov
mov
jecxz
mov
roll
xor
push
bound
imul
data16
push
outsl
dec
sbb
jmp
or
out
into
ret
repnz
scas
dec
pushf
adc
int
jne
scas
and
mov
xchg
fnstcw
fisubl
xchg
xchg
add
xor
aaa
repnz
mov
push
hlt
push
push
jne
out
push
xor
sbb
add
repz
push
clc
aad
or
lock
or
sbb
fs
dec
inc
add
sbb
add
push
sub
and
dec
xchg
hlt
addr16
push
sarb
out
in
pop
int3
loop
xor
outsb
cmp
lcall
gs
rorl
iret
jl
mov
ss
sub
inc
leave
push
addr16
or
test
pop
sub
pushf
sti
xchg
iret
mov
ret
rclb
aad
fcoml
mov
addb
clc
inc
cwtl
std
popa
mov
push
fs
icebp
scas
cld
adc
cld
sar
pop
xchg
jmp
loop
inc
jp
lds
sub
adc
cmp
mov
mov
out
lcall
or
xchg
fdiv
mov
xchg
adc
repnz
or
xchg
sub
xor
rcrb
pushf
shll
mov
pop
stc
ds
loop
inc
adc
pop
jg
popa
add
gs
mov
rol
andl
mov
or
cmp
aad
xchg
scas
xor
sbb
mov
fsubrs
inc
mov
sub
cmp
mov
lods
rclb
cmp
jnp
rcrb
push
lods
fisttpll
add
mov
pop
dec
jp
pushf
cmp
push
insl
jno
lret
inc
ja
cmp
test
repz
out
ja
xlat
shlb
aam
inc
pop
xchg
mov
ret
xor
xor
sbb
inc
pop
jmp
shl
jp
or
mov
loopne
sbb
enter
shll
int
jecxz
test
mov
or
xchg
dec
lods
push
ret
jnp
sarl
add
mov
cmpsl
cmc
out
leave
pop
push
les
cltd
ret
adc
fwait
or
roll
fstp
pop
adc
jecxz
popf
repnz
dec
add
inc
sub
incl
mov
xor
add
add
jl
cmp
test
loopne
outsb
cltd
sbb
shlb
mov
pop
add
xor
insb
aam
faddl
lret
push
adc
shll
jmp
pop
addr16
xor
pop
shl
iret
fcomp
mov
dec
cmp
jbe
std
xchg
jns
sbb
jl
sbbb
mov
shrl
inc
repnz
dec
clc
enter
fiadds
and
pop
push
lods
jo
enter
push
or
repnz
ljmp
les
roll
cmp
cld
jcxz
inc
mov
insb
or
mov
pushf
cmpsl
jmp
lcall
addl
clc
sahf
push
stc
gs
add
dec
test
sub
push
cmp
stc
out
mov
jl
ret
and
pop
sti
mov
vmread
jg
adc
dec
fidivrs
jnp
and
pop
mov
adc
jo
add
mov
cli
aam
adc
roll
bound
rorb
ja
shl
jno
mov
inc
jnp
mov
mov
xor
pop
fs
lahf
movsl
lret
test
push
push
test
adc
ret
pop
fwait
jns
pop
sub
push
stos
mov
xor
adc
sub
add
mov
xchg
frstor
mov
call
add
fdivrs
and
add
cli
and
xchg
pop
mov
and
cmp
lahf
rolb
sub
testl
lahf
jle
outsb
test
out
push
stc
mov
sub
rol
testl
push
adc
insl
push
js
stos
fwait
inc
mov
inc
rol
or
xlat
jae
xor
data16
out
out
hlt
xorl
mov
clc
imul
push
mov
leave
jo
dec
or
pop
xchg
in
xor
mov
insl
ss
aam
sbb
pop
ljmp
pushf
rcrb
icebp
aaa
ret
jae
decl
data16
dec
or
cmp
jecxz
out
xor
inc
insl
xor
test
adc
cmpsb
or
ds
push
orl
leave
lret
test
les
andl
loope
ss
inc
xor
mov
adc
dec
cli
pop
jle
xlat
mov
in
ret
sbb
mov
sbb
pop
mov
stc
sbb
jl
in
shl
pop
lods
xor
dec
xchg
adc
loop
and
mov
outsl
lods
jmp
jl
mov
xchg
inc
jo,pt
je
jnp
rcl
pop
mov
or
push
es
sub
xor
mov
int3
pop
add
fsts
aam
idivb
or
int3
xchg
call
out
imul
fldcw
cwtl
push
fwait
outsb
dec
imul
pop
sbb
jp
fwait
repnz
cmp
enter
xlat
and
out
push
pop
movsl
inc
shll
stos
pop
arpl
test
scas
cli
rclb
xchg
setnp
out
mov
sub
fsubrs
out
and
push
cmp
xchg
daa
and
sbb
sbb
xlat
inc
clc
mov
cli
and
pop
xor
cmp
lcall
dec
dec
jp
mov
adc
pop
push
je
cmpsb
dec
push
daa
xchg
pusha
sub
test
out
ffree
int
jbe
pop
aam
push
ja
cmp
jge
outsb
xchg
bound
push
mov
pushl
push
sbb
inc
loop
mov
add
lret
add
out
lods
ret
inc
mov
dec
jg
sbb
pop
mov
lea
jg
fnstenv
push
sbb
add
mov
xorl
les
push
xor
pop
sbb
jge
aas
xchg
lea
mov
stos
pushl
and
sub
mov
clc
jns
cs
cmp
dec
and
push
jb
sbb
lods
sbb
sbb
pop
push
push
pop
xchg
das
sbb
stos
jns
lods
push
mov
int3
xor
in
test
sub
gs
pushf
mov
mov
jecxz
pop
iret
sbb
xchg
stos
xchg
shll
xor
ret
or
sahf
popf
mov
ss
sbb
push
cmp
pop
dec
int3
push
insl
mov
mov
sbb
ja
xor
adc
xchg
jle
ret
pop
insb
pop
fwait
sub
adc
rcrb
ljmp
jbe
lahf
add
inc
xor
mov
aaa
fldcw
ss
ds
jo
xchg
mov
fucomi
add
jge
lcall
insb
xor
inc
add
xor
je
and
xor
test
popl
mov
inc
in
and
jmp
and
pop
push
out
mov
mov
mov
js
pop
aaa
sub
out
cmp
mov
and
stos
sub
dec
cmp
jno
mov
pop
pop
sti
mov
mov
or
ret
or
or
dec
mov
inc
dec
inc
into
aas
leave
or
sahf
pop
aaa
pop
cmpsb
popf
stos
loop
in
add
adc
push
jl
push
add
je
mov
lret
inc
movsb
aas
fucomi
mov
mov
in
sti
sbb
vpsadbw
cmp
loope
call
in
push
ret
scas
js
dec
pop
mov
iret
xlat
mov
cmp
std
dec
sub
push
sbb
xchg
movsb
cld
cmp
in
insl
lahf
jle
sarw
inc
mov
or
out
lret
rcll
aam
dec
cmp
add
lret
push
dec
fsts
shlb
lahf
je
sbb
jg
dec
or
push
dec
out
mov
movsl
fsubr
adcl
dec
xchg
and
test
aam
test
jecxz
and
lods
inc
outsl
mov
jg
or
xchg
mov
cmc
pop
sbb
inc
or
or
xchg
fstl
push
xor
cmpsl
xor
in
and
xor
pop
dec
call
pop
fs
in
je
js
scas
iret
imul
push
pop
loopw
enter
and
stos
mov
xor
and
add
xchg
pop
inc
pop
sub
xchg
cltd
and
cmpsl
cmp
pand
pop
in
or
adc
bound
gs
in
xchg
scas
or
addr16
sub
insb
inc
stc
and
push
popf
daa
push
aaa
mov
cs
sub
cld
xchg
xor
and
push
sbb
sbb
mov
and
sub
pop
pop
jp
fdiv
test
loop
jmp
aam
fdiv
cltd
jecxz
mov
daa
shlb
fwait
jge
mov
sbb
push
lret
es
xchg
sarb
lret
xchg
cmp
cld
dec
mov
fidivrl
push
bound
addr16
jno
jne
lret
sbb
rcrb
popa
mov
fwait
shrb
aas
mov
fdiv
sti
pushf
or
add
mov
mov
jne
ret
ret
add
jle
stc
cmpsl
xorb
dec
out
push
inc
js
and
inc
into
push
jo
lahf
ja
popf
mov
push
mov
jl
lret
fistl
cld
ret
scas
test
pop
dec
test
lock
jg
lds
adc
xchg
inc
adc
mov
xchg
into
xor
out
add
sbb
and
repz
in
sbb
jno
daa
push
mov
out
fstl
cmpxchg
mov
aas
dec
pop
jecxz
sti
ret
in
adc
mov
jo
cmp
mov
sub
test
adc
mov
mov
fisubl
test
in
in
and
in
cmc
inc
pop
arpl
arpl
rcl
jle
pop
adc
add
or
mul
fwait
es
in
fdivrs
dec
cmp
inc
fsubrs
fidivs
insb
aas
aas
xor
and
push
fcompl
adc
add
out
xchg
jg
xlat
xlat
add
mov
jmp
sbb
aam
jb
loope
cmp
daa
pop
daa
sbb
inc
xchg
cmc
cmp
xor
cmpsl
lgs
sub
lds
and
and
mov
iret
mov
je
nop
fwait
jb
xchg
loop
lock
scas
rcll
fisubrl
inc
insl
jns
xor
into
leave
pop
adc
in
lret
std
jl
loope
push
fxch
mov
out
cmp
cmpsl
sub
ret
pop
aam
mov
adc
mov
bound
sub
js
xor
push
jnp
ss
sbb
pop
js
loop
sbb
ror
roll
and
mov
mov
shrl
adc
sub
popf
leave
jne
daa
loopne
sub
popa
mov
mov
mov
mov
ja
cmp
popa
mov
mov
mov
xchg
pop
test
das
xor
jp
xchg
xchg
insl
dec
dec
mov
addb
mov
or
add
xor
jl
push
adc
scas
or
and
das
xchg
push
pushf
shrl
or
negl
outsl
outsb
push
dec
sub
xchg
sub
xor
dec
sub
aam
mov
xchg
insl
xor
add
test
pop
fnstcw
jle
push
mov
mov
addl
mov
lret
sbbb
call
insb
mov
mov
or
ret
xchg
vpabsd
jbe
ret
fidivrl
loope
fs
xchg
negb
shlb
inc
mov
sbb
mov
mov
mov
lods
xor
sub
sti
mov
lret
mov
jbe
cmpsb
cli
adc
mov
xor
das
das
cmp
sti
adc
bound
inc
xchg
insb
sbb
mov
pop
cmp
xchg
mov
mov
aad
nop
lods
mov
rolb
sbbb
stos
add
and
jae
pop
xchg
fmuls
inc
sbb
sbb
mov
jo
mov
pshufw
pop
adc
xor
dec
xchg
call
mov
xchg
int
and
leave
es
in
push
mov
pop
daa
push
add
mov
dec
pop
cld
mov
sub
fisttpl
and
sbb
daa
pop
dec
leave
mov
jnp
cmp
roll
mov
popf
leave
xchg
and
pop
inc
call
jae
jno
xchg
imul
ss
sti
mov
les
data16
ds
repnz
add
mull
inc
adc
cmp
cmpsl
stos
repnz
pop
daa
sbb
fcomp
je
es
or
inc
fnstenv
xchg
or
xchg
orl
and
in
subl
fadd
xchg
cmp
addl
sti
stc
mov
cmpsl
aam
mov
push
gs
push
xor
jp
xlat
sbb
and
scas
xor
cmpsb
loopne
fisubl
sbb
inc
cmp
inc
xor
xchg
jmp
aaa
pop
xchg
adc
adc
mov
int
mov
std
cmpsb
mov
test
arpl
xor
xor
lcall
jo
lret
gs
leave
call
jae
into
imul
push
xchg
jno
mov
rolb
out
lods
dec
test
clc
repz
xchg
popl
faddp
call
stos
out
lods
sahf
mov
adc
loop
data16
jb
psllq
lret
daa
push
lea
in
sub
ret
inc
push
inc
cmpsb
icebp
das
inc
int
push
push
ret
pop
push
adc
lcall
xchg
pop
push
in
inc
in
cltd
add
loop
dec
lcall
test
lret
out
mov
and
fcmovu
jge
repz
cmc
nop
sub
adc
and
std
xor
aam
cmp
pop
push
ret
pop
mov
xor
aam
or
lea
sbb
mov
xrelease
xchg
inc
mov
rorb
ja
aaa
or
sub
test
stos
insb
lock
stos
out
push
es
cmp
xchg
mov
outsb
mov
cs
stc
out
cli
cltd
movsb
bound
cli
and
pop
cmp
or
loope
outsl
in
int
test
fdivrl
das
push
std
and
cmp
int
lock
ljmp
imulb
and
mov
cmpsb
xor
and
mov
stos
stos
aaa
cmp
mov
mov
mov
je
jmp
mov
mov
jmp
cmp
ja
ja
xchg
xchg
sub
into
flds
lcall
pop
jp
add
cmp
mov
and
testl
pop
daa
out
sti
loop
pop
pop
paddd
cmp
sahf
je
test
jp
dec
or
das
sbb
cltd
inc
lahf
cmp
insl
cmp
pop
add
std
cmp
orb
bound
adc
or
stos
or
cmp
stc
pushf
repz
ret
pop
sbb
adcb
fwait
inc
into
hlt
sbb
enter
add
dec
pop
fisubrs
pop
sub
dec
or
nop
mov
test
dec
mov
sub
jl
cmp
jle
pop
shll
jp
in
push
mov
in
std
pop
out
jns
inc
xlat
popl
adc
setb
pop
jns
inc
push
xor
pusha
lahf
sub
clc
mov
popa
push
ror
test
fdivl
cli
inc
jp
mov
movlps
cli
mull
xor
and
test
pop
push
mov
xor
std
in
cmc
cld
sbb
mov
add
lahf
call
sbb
sbb
jp
mov
mov
jge
int3
add
jl
fisubrl
pop
inc
pushf
repz
outsb
insl
push
jbe
sahf
inc
cmp
mov
lods
mov
and
pushf
cld
outsb
xor
lea
clc
dec
fbstp
aas
jg
xchg
flds
loopne
dec
jecxz
adcl
push
xchg
lcall
add
imul
aad
push
and
jnp
sub
sti
jge
xor
repz
pushf
xchg
mov
pop
in
sub
or
add
jns
push
mov
push
inc
mov
stos
sahf
rcrl
out
xlat
push
mov
inc
xor
inc
and
mov
mov
lods
mov
stc
push
int
mov
sbb
sub
aam
clc
or
and
cld
out
fcoml
mov
sub
mov
jl
scas
dec
jmp
push
shr
mov
icebp
movsl
sbb
jge
pop
or
or
pop
movsb
push
rcl
stos
pop
ljmp
popa
popf
pcmpgtb
jl
icebp
inc
sub
jbe
ss
into
xor
fidivl
test
xchg
sti
sbb
repnz
addr16
push
fistps
dec
cmpsb
shrl
push
ds
int3
shll
aad
and
clc
pop
cmp
out
sahf
cli
cmc
fildl
loop
nop
xor
andb
sub
push
sub
imul
and
mov
in
push
pop
mov
inc
jle
sub
mov
cmp
push
or
test
jmp
dec
lcall
cs
sbb
sbb
les
cli
dec
iret
pop
pushf
sbb
push
mov
jae
and
inc
mov
mov
or
xor
popf
popa
cltd
pop
adc
fwait
addr16
dec
das
cmp
enter
or
fyl2xp1
push
test
cli
add
push
in
movsl
in
pop
push
or
push
rorl
movsl
xchg
xor
pop
adc
fs
fcoms
xchg
bound
ret
pop
adc
test
sbb
mov
std
inc
mov
fbstp
jp
mov
imul
xor
js
in
popa
icebp
xor
cmc
inc
insb
sbb
pop
pop
dec
sbbl
inc
inc
xor
mov
sbb
jle
xchg
js
hlt
mov
sbb
add
jp
mov
std
xchg
xchg
mov
fists
das
mov
lds
flds
or
aas
inc
push
jbe
xor
sub
out
push
push
data16
mov
addr16
or
outsb
mov
ret
push
and
jmp
imulb
add
fs
cltd
jbe
jmp
shrl
test
jbe
in
jl
mov
lock
dec
dec
gs
pop
popa
push
or
xor
jae
xor
cltd
imul
jge
jae
add
jmp
popf
gs
sbb
js
xlat
aas
inc
ja
decb
adc
adc
shll
jb
lea
sahf
lods
sbb
ret
mov
scas
xor
lods
mov
push
inc
imul
add
push
sbb
sbb
pop
jecxz
xchg
push
xlat
in
in
test
mov
aaa
rclb
popa
iret
dec
int
insb
scas
mov
stos
sti
popf
rol
int3
add
sub
xor
lret
xor
int3
test
mov
out
jns
pop
shr
clc
stos
repnz
xchg
test
pusha
leave
mov
sar
or
inc
push
insl
movl
out
cli
aas
mov
push
cld
jae
sahf
sbb
int
jl
aaa
dec
xchg
sub
stc
loope
insl
je
mov
jle
movsl
adc
cwtl
and
pop
sbb
sub
repnz
cmp
mov
adcl
decb
xchg
icebp
mov
in
cwtl
mov
cld
dec
pop
xchg
rcrl
inc
jg
daa
cmp
icebp
add
xchg
mov
mov
int
lea
push
sub
add
sti
shrd
jg
or
js
jle
xchg
inc
jo
xor
divl
int
sbb
jecxz
dec
mov
mov
mov
insl
add
sub
cmpl
cmp
faddl
push
lds
jg
inc
or
push
mov
jo
fsubp
inc
lea
insb
jae
jp
pop
lock
testb
scas
bound
sbb
idivb
out
push
je
jbe
sbb
test
test
xchg
loope
mov
mov
cmpsl
loop
cmpsl
or
enter
aas
aam
pop
cmp
lods
rcrl
loop
mov
mov
dec
inc
cmpl
insl
mov
daa
fwait
sub
cmp
imul
cmpsb
mov
pop
jmp
std
pop
mov
pop
xchg
pop
aas
pushf
add
xor
lds
sbb
imulb
int
es
inc
xchg
gs
mov
sub
test
inc
sub
stos
dec
mov
fisubs
pushf
mov
les
dec
fisttpl
mov
gs
loope
xor
test
xor
jge
test
jne
das
out
push
push
mov
imul
lret
sub
pop
pop
ror
stos
pushf
inc
sub
int3
jge
rolb
frstor
mov
push
mov
cmpsl
adc
out
mov
cmpsl
stos
js
cltd
dec
fsubs
cmc
xorps
imul
mov
cwtl
pop
inc
movsb
mov
inc
cmpsl
outsl
pop
out
rcl
outsl
cmpl
movsb
pop
lds
orl
mov
test
xor
cwtl
sbb
in
dec
and
cmpsb
pop
push
mov
xlat
fucomi
dec
adc
xor
sub
push
or
sbb
xchg
lock
subb
es
xchg
imul
or
fdivl
stc
push
jle
pop
inc
sub
idivl
fdivs
or
push
xchg
sbb
lock
xor
sub
push
dec
adc
mov
cltd
cwtl
gs
mov
fdivr
out
clc
ja
rorb
into
adc
es
sbb
popa
jmp
out
das
mov
and
adc
popf
ret
dec
mov
and
or
or
loope
dec
in
popa
mov
mov
mov
lcall
int3
out
fwait
and
fidivrl
andb
movsl
cwtl
pushf
dec
jp
aam
jecxz
sbb
sbb
ss
xchg
sub
into
push
sub
bound
cmp
je
fnstsw
cwtl
int
popa
mov
in
jnp
inc
push
gs
xchg
jl
insl
in
mov
jns
xor
ss
pop
mov
inc
jb
lret
dec
aad
sbb
pop
loope
jmp
pushf
and
sbb
xor
addl
mov
pop
jae
bound
xchg
shrb
call
xchg
cltd
hlt
push
adc
xor
ja
in
mov
cmp
adc
jmp
aad
inc
pusha
lods
fs
insb
mov
outsb
gs
cmc
rorb
add
inc
leave
xor
lea
enter
adc
aam
jnp
leave
test
sub
pop
or
xor
mov
push
sub
cmpsb
fistpl
pop
sub
push
xor
ss
cmpsb
in
flds
cmp
ret
cmp
int
and
mov
shlb
push
fs
xchg
movsl
stos
mov
xlat
sbb
push
mov
lods
daa
cmp
xor
gs
cmp
pop
fcmovnbe
cmp
in
lret
jmp
das
gs
hlt
jne
addb
fisttps
pop
sub
int3
lock
sbb
or
in
and
jmp
lahf
jmp
iret
mov
movsl
cmp
sbbl
jo
rcrl
add
mov
inc
aas
movsl
jle
jl
cltd
aad
cmp
loopne
mov
pop
pop
xchg
jb
or
inc
fxch
or
xlat
in
imull
inc
pushf
outsl
pop
movsb
dec
rclb
and
clc
fdivrl
pop
pop
in
push
dec
mov
push
fstpl
mov
mov
out
fsubs
dec
inc
cld
aas
repnz
fidivrs
rorl
movsl
push
je
in
lcall
mov
mov
mov
popf
push
cmp
es
push
pushf
sahf
xor
into
icebp
adc
push
sbb
adc
sub
test
test
cmp
dec
rcll
pop
adc
pop
or
movsb
test
sub
nop
push
movl
mov
mov
pop
add
fildll
aad
push
repnz
ficoms
fnstcw
mov
mov
xchg
add
or
jmp
dec
push
test
scas
dec
mov
ljmp
cmc
mov
jmp
and
lods
mov
popa
dec
pusha
xor
mov
clc
jno
ret
adc
ss
fnstsw
add
pop
iret
pop
imul
xchg
cmp
cmpsl
xchg
jne
outsb
pop
push
push
cmp
cmp
mov
cld
movsb
xor
adc
jns
and
sub
xchg
mov
dec
lcall
xchg
lret
or
dec
repnz
clc
push
ljmp
repz
sbb
and
xor
xchg
sbb
mov
test
fs
lsl
mov
je
mov
and
cmp
sarb
mov
cmp
add
mov
and
push
out
dec
jns
inc
sarb
jmp
inc
sarb
ja
push
imul
fistpll
cmp
or
in
les
mov
imul
xchg
adc
sahf
sbb
sbb
xor
out
sahf
dec
mov
inc
or
sbb
push
push
fsts
mov
sbb
popa
cmp
insb
push
xor
je
add
pop
dec
push
fmull
mov
lock
scas
roll
xchg
fldl
cld
loop
outsl
subl
sub
sahf
jecxz
xchg
push
loopne
mov
cmp
cmc
mov
xor
lret
enter
mov
xor
std
jnp
stc
fsts
mov
loopne
movsl
push
data16
js
outsl
lret
mov
je
enter
dec
cmp
pop
aam
mov
push
add
hlt
sbb
insb
or
dec
jmp
movsb
sub
stos
outsl
int
jle
bound
inc
dec
cmp
leave
mov
shll
outsb
jbe
sar
fs
repnz
bound
fsubs
mov
arpl
mov
jmp
inc
push
out
out
pop
sbb
stos
shlb
iret
xor
inc
adc
lahf
movsb
inc
scas
and
fbld
loopne
icebp
movsl
outsb
ja
insb
sahf
adc
dec
ret
xchg
lods
mov
fnstcw
mov
je
push
sti
cmpl
cmp
outsl
mov
cmpsl
push
test
add
dec
push
mov
hlt
inc
fcomp
shl
addr16
fwait
and
adcb
cs
sarl
div
mov
jns
mov
xor
cmp
xchg
out
xchg
add
cmpl
push
pop
ret
les
lds
or
in
les
stc
leave
xchg
jge
mov
dec
push
xor
pop
sbb
pop
jg
and
notb
dec
andl
std
push
ss
fistpll
push
pusha
pop
arpl
push
shrl
jmp
mov
pop
inc
divl
cs
aad
mov
push
adc
jmp
in
xor
cmp
jle
inc
ret
jg
shr
lods
cli
or
icebp
cmp
jl
jle
pop
es
js
int
or
mov
dec
std
pop
push
cmp
scas
pop
xlat
aam
fidivs
pop
stc
es
loope
dec
arpl
inc
aam
es
cmp
add
jae
sbb
mov
ret
and
xlat
lret
cmp
adc
test
adc
out
jne
jno
and
lock
mov
fidivrl
inc
in
jecxz
mov
cmp
pop
ret
pop
jae
adc
mov
cmpsb
fildl
psrlq
shlb
dec
mov
mov
push
xor
hlt
push
or
gs
aaa
xor
inc
dec
push
les
pusha
pop
icebp
jecxz
push
mov
dec
jg
repnz
pop
aam
xor
and
mov
xchg
and
mov
mov
mov
jecxz
hlt
sbb
outsl
adc
and
pop
popf
js
mov
cmpsl
rclb
insb
out
jp
mov
push
sbbl
mov
xor
aad
mov
xchg
addl
out
cmpsb
xchg
lahf
stos
add
in
divb
pushf
aaa
cld
insb
jg
out
stos
je
xchg
loope
pop
inc
rep
adcl
cmp
sub
arpl
je
push
mov
fnsave
and
or
xchg
mov
movsl
inc
dec
cwtl
ja
push
cmc
and
insl
std
dec
ret
setb
push
mov
sti
inc
add
je
mov
aas
xor
pop
movsb
stos
sbb
cwtl
xor
cmp
fwait
push
in
xchg
orl
insl
adc
xor
lea
push
push
aad
mov
shlb
xor
fbld
push
add
fwait
stos
int3
pop
cmp
xchg
bts
shlb
lret
clc
mov
ja
cvtps2pd
mov
sti
dec
test
fstpl
fistpll
sub
ror
mov
imul
fstp
xor
lea
fwait
xor
jp
aad
aas
inc
sbb
outsb
cs
xchg
fs
or
push
lcall
xchg
mov
pusha
pop
mov
inc
and
mov
push
sub
arpl
pop
and
movsl
lahf
xlat
and
das
shrl
xor
js
mov
outsb
test
sar
xchg
div
in
mov
or
iret
lods
sub
cmp
ret
and
sti
or
inc
cmp
adc
mov
adc
add
call
sbb
or
fwait
inc
test
sbb
lds
or
popa
imul
mov
cmp
and
outsb
mov
js
lea
or
xchg
scas
mov
std
jns
mov
test
pop
out
dec
sub
mov
add
fcmovnbe
push
jo
jmp
movsbl
arpl
imul
add
or
cmp
fistl
mov
adc
pop
aad
hlt
shl
push
repnz
mov
imul
pop
add
in
add
push
cmpb
in
sbb
dec
aaa
add
pop
mov
jg
addb
mov
scas
pusha
les
dec
jns
ret
jne
fcoms
push
and
add
in
loop
jmp
cs
mov
push
push
pop
hlt
inc
in
in
fbld
sbb
pop
mov
xorl
inc
and
adc
mov
mov
loop
lods
insl
out
jnp
outsb
outsb
leave
and
test
inc
pop
cli
add
push
addb
int
push
test
mov
ret
xchg
in
aaa
rorb
in
xchg
pop
sbb
sub
cli
loope
sub
mov
push
nop
lcall
iret
mov
cmp
push
inc
scas
pop
jmp
ja
test
mov
nop
shlb
and
push
pop
jle
xchg
lcall
sub
in
popa
jle
jmp
fsts
mov
mov
insl
jbe
les
clc
push
int
arpl
or
sbb
repnz
arpl
push
xchg
test
adc
push
sub
push
push
int3
mov
std
jo
xchg
xor
add
push
mov
es
and
push
ljmp
sbb
push
pop
ss
mov
mov
dec
enter
or
add
out
sub
cmp
fldz
push
cmpsl
ret
jo
inc
jl
pop
ss
into
mov
xchg
es
popf
xlat
adc
mov
lea
movsb
loop
sysret
pusha
stc
loop
lret
fcmovne
hlt
into
out
xor
imul
xor
repz
call
scas
ja
call
test
pop
lcall
movb
or
scas
stos
in
cwtl
and
push
lock
test
xor
ret
orl
jne
xchg
cwtl
sub
orb
mov
std
inc
testb
inc
fstps
sub
out
jg
mov
mov
mov
and
rorl
stc
cmpsl
xchg
dec
enter
or
pushw
mov
and
in
std
inc
mov
shrb
sub
adc
cwtl
in
or
xchg
shll
ss
in
movsb
mov
fwait
jmp
mov
jge
call
pushf
out
xchg
hlt
cmpsl
call
cld
jb
arpl
push
notb
xor
das
xor
cs
and
sbb
xchg
mov
cmpsl
imul
inc
call
add
ret
test
aaa
lods
cmpsl
sbb
xchg
scas
xchg
call
cs
outsl
data16
xchg
or
add
les
pop
loopne
test
jecxz
ficompl
adcl
mov
adc
and
push
mov
mov
inc
lods
fdivrp
loope,pt
add
insb
inc
arpl
popf
movsb
push
push
pop
adc
pop
or
ret
and
imul
xor
jp
imul
sub
sub
adc
je
nop
mov
xor
popf
inc
xlat
pop
add
sub
or
gs
lock
sbb
loop
and
mov
ds
lret
mov
test
inc
sbb
add
jnp
loope
xchg
pushf
xchg
popa
push
int
in
pop
scas
xor
imul
rorb
es
xchg
das
mov
jge
movsl
mov
mov
sbb
xchg
popf
aad
repnz
mov
mov
stc
stos
lea
data16
lods
cmp
imul
data16
jmp
fistpll
mov
jns
cwtl
pop
pushf
jmp
lcall
movsl
out
xchg
call
bound
push
test
lcall
ljmp
xchg
mov
dec
out
lahf
inc
shrb
arpl
and
out
xchg
mov
inc
jbe
dec
arpl
lret
fwait
ds
ss
inc
imul
sbb
push
xchg
mov
lods
test
das
fcoml
outsb
pop
je
fnstsw
or
lret
mov
das
lahf
jb
push
mov
ret
add
cltd
sub
ljmp
aad
decl
jns
cmc
in
sbb
in
jo
add
test
unpckhps
adc
pusha
cs
mov
cmc
outsb
ljmp
mov
subb
jecxz
out
sbb
clc
push
shll
jb
pop
das
mov
or
cwtl
xor
je
mov
inc
sub
int3
inc
cmp
out
dec
mov
iret
aam
movsl
add
xor
cmpsb
add
mov
outsl
push
insl
stc
fwait
in
mov
aas
adc
dec
xchg
add
mov
sbb
in
lcall
mov
arpl
ret
lret
add
leave
or
out
aam
xchg
pop
loop
aas
dec
pop
idivl
dec
dec
jo
dec
inc
sbb
cs
es
out
pop
cmp
dec
test
mov
inc
sahf
icebp
and
ds
les
icebp
xchg
rcll
xlat
stc
xchg
rol
movsb
icebp
cmp
lcall
cltd
or
cmpsb
addr16
pop
loope
cmpsl
dec
and
fs
cmpsb
imul
xchg
cmpsl
call
fimuls
adcl
sbb
das
ret
xchg
xor
movsl
bound
cmpsb
dec
in
jo
sbb
rcr
push
push
movsb
xchg
jne
pop
out
push
sub
mov
mov
xchg
pop
mov
mov
jl
and
mov
dec
adc
in
lcall
push
stc
and
ret
sbb
ss
add
jg
sbb
hlt
bnd
xchg
psubq
jge
add
xchg
add
sub
loopne
test
popa
xor
pushf
fisubrs
movsb
or
cmp
filds
add
add
push
outsb
push
loope
add
xchg
popf
push
scas
pop
add
movsl
lods
sbb
stos
notb
mov
into
push
sub
inc
jmp
lret
xor
pop
mov
inc
mov
fxch
lret
sub
mov
stos
push
mov
shr
call
lret
inc
sahf
fsts
bound
sbb
sbb
test
dec
xchg
mov
loopne
pop
gs
pushl
popf
scas
addr16
enter
sbb
pop
lds
xor
insl
cmp
jecxz
int
xlat
push
push
popf
call
shrl
cmp
ljmp
in
inc
add
ret
xchg
and
mov
xor
enter
pop
jno
jnp
sub
mov
cmp
add
and
cmp
pop
push
sbb
and
add
into
lods
in
inc
movsb
shlb
jb
push
push
shll
fadds
pop
sub
ss
ljmp
cmp
pusha
lea
inc
dec
lcall
mov
and
jno
mov
xchg
mov
in
stos
or
fstpt
add
jecxz
sahf
loopne
sub
mov
jbe
jge
fdivr
subb
inc
or
pushf
or
addr16
inc
daa
cmp
push
mov
iret
push
mov
or
into
pop
jae
jno
pop
pop
jl
int3
in
xchg
xchg
jo
fists
ret
setl
jecxz
push
cmp
push
push
mov
int
adc
js
jle
hlt
adc
mov
popa
cltd
ds
insb
imul
pop
pop
ljmp
dec
cli
addr16
sub
jp
fsub
jp
add
jno
jmp
test
fstl
pop
int
mov
mov
scas
pop
enter
mov
into
ja
pop
and
mov
mov
xchg
je
push
jae
pop
jg
jmp
mov
jo
out
mov
mov
mov
sarl
pop
inc
inc
mov
cmp
mov
lahf
orb
out
pop
ja
out
mov
inc
dec
mov
bound
jb
out
divl
dec
ret
pop
pop
push
sbb
sti
pop
icebp
mov
nop
int3
fstps
xlat
hlt
mov
fs
test
jmp
cmp
int
mov
andb
cmp
iret
ret
out
shll
shrb
adc
scas
or
pushl
aas
mov
inc
aam
adc
xchg
sahf
sti
sub
int3
rcl
cmpsl
cwtl
ljmp
jo
pushf
imul
inc
movsb
jg
pop
aam
pop
adc
mov
hlt
je
and
pop
out
xchg
sub
push
inc
sbb
fistpl
pop
jecxz
nop
stc
jle
enter
into
mov
shlb
fwait
leave
stos
repnz
fwait
sub
fld
cmp
stos
ljmp
enter
mov
arpl
pop
adc
into
out
addl
aam
fs
mov
test
push
jns
addl
push
or
aas
out
int3
adc
mov
testl
scas
aas
outsb
ss
insl
push
mov
loop
xchg
push
dec
and
mov
or
jns
les
xchg
insl
cmp
push
jo
lret
mov
out
hlt
mov
lret
mov
daa
push
push
add
inc
ret
and
lret
push
xor
pop
inc
cmp
scas
xchg
mov
inc
push
mov
cltd
cmp
aam
das
jno
mov
inc
dec
push
xchg
push
int3
std
push
jmp
lods
cld
adc
and
and
jb
mov
js
cwtl
dec
mov
into
and
ja
pushf
das
out
and
fcmovnbe
int
dec
inc
mov
push
mov
xor
or
in
sahf
sbb
cs
mov
jbe
fcoml
andl
scas
dec
scas
pop
aam
add
ficompl
iret
inc
jns
push
repz
imul
add
nop
daa
retw
shl
add
pop
pop
stos
daa
push
pop
insb
test
add
xchg
add
mov
in
jmp
cmp
xor
add
cld
and
pusha
stos
pop
repz
fldcw
and
add
iret
iret
mov
cld
xchg
ret
test
add
or
mov
cli
out
fildl
and
mov
jmp
mov
or
insb
das
bound
outsl
add
je
sub
and
ret
aaa
fstpt
cmp
push
add
push
leave
fs
subl
stc
push
mov
fs
push
imul
idivl
mov
insb
aaa
loope
sbb
jnp
xor
rol
cmp
lods
jge
or
mov
icebp
lahf
cs
leave
mov
xchg
cld
lds
add
jg
repnz
cmpl
jle
ss
mov
iret
push
loop
sub
pop
or
push
pop
pop
aaa
scas
es
ss
sub
imul
ds
sub
ret
ljmp
lods
orb
and
ss
inc
roll
push
mov
int
dec
dec
push
pusha
or
jle
jp
subl
fsubrs
cwtl
out
stc
xor
cli
addr16
addb
jg
mov
imul
daa
jl
mov
out
je
enter
xor
jo
push
push
jae
icebp
stos
out
xchg
lahf
jg
arpl
sub
scas
jno
cltd
or
outsb
hlt
mov
aas
fsts
inc
adc
mov
jecxz
aad
js
mov
or
lea
pop
push
lahf
fdivrl
shll
inc
pop
ljmp
push
fiadds
jp
add
mov
cwtl
or
icebp
test
dec
gs
jns
stos
adcl
loop
movsb
in
dec
orl
ja
and
mov
pusha
mov
sbb
out
xchg
std
leave
nop
xchg
push
jns
sbb
insb
mov
adc
outsl
sarl
popf
cld
cltd
and
stos
lock
ds
sbb
dec
sbb
incb
jp
adc
fldl
jmp
mov
push
aaa
mov
std
int3
sub
dec
or
out
xor
inc
ds
imul
mov
inc
mov
jns
hlt
lea
rorb
cmp
out
jb
fsubrs
jbe
cmpsl
andl
xchg
cli
aad
or
cmc
pop
pop
adc
pop
xor
mov
fildll
loopne
insl
test
lods
out
stos
push
outsb
aam
xchg
into
sbb
insl
scas
xor
inc
inc
push
mov
jnp
push
arpl
aam
cmp
mov
pop
cmp
mov
testl
loopne
lret
mov
push
lret
subl
push
aas
rcll
cs
and
xor
das
and
xchg
data16
lods
pop
out
cltd
push
xchg
loop
cwtl
cltd
bound
aad
popf
ja
xor
rcrb
push
inc
cmp
xchg
sub
inc
jge
insb
lea
xchg
out
out
adc
fldt
adc
in
sbb
mov
sbb
pop
pusha
test
lock
cs
sbb
test
sub
leave
cld
rclb
clc
sub
stos
inc
lock
testl
enter
sbb
icebp
mov
mov
lock
das
sbb
mov
and
push
mov
jns
mov
xorl
lock
xchg
mov
cld
cmpl
sub
inc
out
or
or
xchg
mov
and
push
xor
lds
push
ljmp
mov
adc
adcl
sub
nop
les
popf
test
mov
inc
cmpl
inc
shl
xor
mov
mov
mov
ljmp
icebp
cmpsl
frstor
mov
ret
push
out
rcr
xor
fdiv
out
push
loop
pop
jecxz
cmc
xorl
push
nop
bswap
mov
xchg
scas
das
mov
mov
ljmp
cwtl
hlt
in
rcll
mov
int3
xor
jmp
in
shrl
pop
fcoml
jg
mov
push
cmp
inc
xchg
lahf
adc
xchg
loop
or
mov
mov
arpl
hlt
dec
dec
lods
xor
or
xchg
xorl
jle
jp
fisttpl
idivb
or
push
sub
cmpb
pop
mov
push
pushf
rolb
inc
ja
aad
daa
push
xor
xor
stos
dec
sub
cmp
std
or
sarb
dec
inc
and
jmp
leave
fcoms
aam
add
push
cmp
lock
add
loope
mov
mov
mov
xlat
sbb
sbb
mov
test
jecxz
lcall
cmpb
mov
or
fnstsw
xchg
mov
sarl
xchg
jmp
lock
push
mov
rorl
shll
aad
jg
in
xchg
sub
nop
pop
jmp
xor
jmp
pusha
int3
cmpsl
mov
fdivrs
cmpsb
cli
stc
arpl
test
mov
pop
sti
lret
dec
mov
and
iret
xchg
mov
and
pop
add
xor
cli
lret
push
cmpl
rclb
push
add
sub
inc
xchg
daa
adc
mov
xchg
sub
adc
mov
jmp
call
adc
test
iret
xor
pushf
add
cmp
lret
adc
cs
lods
add
push
sub
pop
xchg
pop
push
sub
mov
fistl
mov
adc
push
jle
add
xchg
push
pmullw
push
sbb
mov
cmpsl
mov
js
push
mov
gs
mov
loope
push
cmp
jp
outsl
inc
incl
testl
in
jle
fwait
outsb
fldcw
popl
ret
push
inc
mov
clc
movsb
and
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
jmp
js
pop
out
jnp
rep
pop
jns
adc
aas
aam
loope
jp
pop
jp
jno
mov
sub
push
cld
sahf
mov
cmpsl
or
lret
shr
adc
sbb
adc
xor
mov
jb
and
imul
je
scas
inc
imul
ret
ja
fnsave
ss
aas
push
cmp
sbb
push
dec
mov
and
lods
ds
mov
add
cmpsb
jle
jecxz
dec
js
adc
xor
xchg
jg
cmc
fnsave
xorb
push
int3
ljmp
add
ds
mov
inc
cltd
push
xchg
inc
jg
les
mov
sahf
les
add
add
outsb
pop
dec
sub
jl
cld
lret
push
mov
or
mov
sub
mov
fisttpll
cwtl
fadd
add
sbb
xor
ja
fsubs
sarb
dec
sahf
adc
out
cmp
xchg
cmp
push
outsb
push
add
out
movsb
mov
stc
cmp
mov
mov
sbb
gs
mov
dec
mov
out
and
imul
lret
xchg
add
fidivl
lcall
loope
leave
push
sub
ss
pop
rcrb
cmp
cs
adc
test
adc
jg
sbbb
test
pop
sbb
mov
or
push
pop
mov
fcmovnbe
mov
aaa
xor
pop
cld
repz
jns
shrb
or
sbb
inc
xchg
pop
push
pop
pop
inc
or
fcomi
sbb
and
sbb
inc
les
and
sar
cmp
ds
inc
ret
pop
lds
aas
les
inc
pop
xchg
add
lret
or
jne
repz
cs
inc
subb
nop
adc
pop
mov
jb
push
movsl
pop
pop
xor
mov
sub
inc
and
inc
xor
mov
xchg
js
adcl
pop
ja
pushf
repnz
sub
aam
outsb
xor
xchg
xchg
lahf
or
pop
retw
stc
xchg
pushf
sub
in
mov
sbb
and
or
loope
hlt
scas
mov
repz
sub
inc
sbb
mov
cmpsl
scas
mov
add
lret
mov
mov
mov
jmp
add
push
push
clc
add
je
and
stos
jne
add
or
hlt
neg
mov
fisubl
sub
mov
push
add
cli
add
leave
loop
cltd
or
leave
sub
adc
popf
in
cmp
sbb
xchg
jge
mov
jge
out
fadd
lret
adc
dec
cmp
sub
jmp
fdivl
loop
push
shlb
outsl
clc
xor
push
inc
push
jnp
mov
mov
mov
idivl
pop
adcb
lret
repnz
lret
xchg
sti
lods
xlat
xor
cmpb
jo,pt
xlat
adc
mov
dec
fs
shlb
push
inc
cmpsl
repnz
cmp
icebp
pop
sub
stos
mov
adc
jns
jp
les
cmp
push
jae
in
inc
mov
inc
outsl
fwait
mov
add
mov
xchg
sarl
xor
dec
add
push
lcall
cwtl
ret
imul
dec
inc
mov
push
pop
pop
std
nop
mov
jge
clc
sbb
ret
inc
insl
mov
mov
fiaddl
outsb
dec
mov
and
dec
shl
repz
shl
loopne
jb
push
lds
ret
xor
inc
cmc
in
std
or
push
or
dec
stos
push
mov
loope
out
add
lret
daa
mov
mov
mov
mov
mov
mov
or
aam
popf
std
xlat
push
leave
or
pop
lods
dec
lods
lret
stos
int3
mov
roll
dec
mov
inc
filds
mov
jle
sbb
sbb
adc
dec
push
mov
mov
mov
shll
mov
rcll
inc
push
push
add
jmp
out
dec
inc
popf
add
mov
push
insl
out
pop
movsl
inc
fstpl
movsb
xchg
jge
cmp
cmp
pop
add
jmp
xchg
in
or
imul
inc
pushf
fildll
xorl
pop
movsb
sub
scas
and
xor
push
mov
mov
mov
sar
pushf
lods
mov
das
push
loopne
jae
mov
scas
scas
aad
jecxz
hlt
sbb
ljmp
cmpsb
pusha
mov
test
inc
sti
jo
jo
into
mov
repnz
pusha
pop
jl
lahf
shr
mov
sub
cmp
fwait
ja
pop
mov
sub
int
dec
xor
cmp
mov
imul
andl
sahf
in
xor
push
xor
push
jg
sbb
pop
loopne
and
pop
out
push
xor
popf
cmc
insl
adc
fidivrs
push
ds
movsb
outsb
and
push
int
daa
popa
std
inc
xlat
cwtl
rclb
cmpsb
mov
fwait
bound
pop
push
aam
pop
test
jbe
and
xchg
lds
in
jmp
push
lret
je
xor
cmp
ret
push
and
repnz
lods
jp
mov
push
ss
pushf
roll
push
sub
pop
inc
adc
loop
jno
jno
adc
fidivl
mov
xlat
push
inc
fidivs
cs
push
es
jl
mov
stc
stos
fcompl
out
test
mov
mov
popa
and
cmc
fdiv
pop
xor
mov
mov
cltd
mov
pop
outsb
sbb
ja
cltd
sbb
test
stos
out
insb
lods
mov
mov
mov
pop
outsb
jno
mov
cmpsl
std
imul
jae
ret
lea
scas
out
scas
jl
lods
jnp
sbb
daa
dec
ja
push
jb
icebp
into
inc
dec
fmull
pop
shlb
std
mov
and
and
mov
push
mov
inc
and
cmp
and
cmp
cmc
mov
cli
cmp
jg
add
cwtl
mov
repz
jmp
push
imul
adc
or
or
or
or
mov
andl
push
sbb
cmp
xor
bound
dec
adc
sub
int
lods
add
je
bound
stos
insb
pushf
jnp
das
sub
rorl
sub
sbb
cltd
outsb
sub
jns
hlt
sbb
test
dec
fucomi
inc
iret
int3
dec
ds
leave
std
mov
pushw
roll
sbb
loope
loop
es
popa
test
add
cld
icebp
cltd
push
cmpsl
push
std
sbb
ljmp
and
mov
mov
mov
ss
xor
mov
ss
stc
sub
xchg
sub
out
sbbl
mov
cmp
inc
jmp
fsubl
sar
mov
pop
xchg
popa
cmp
pop
push
fldcw
adc
cmp
or
jp
and
rep
loop
mov
insb
cmp
test
daa
pop
xchg
fs
mov
jmp
cli
rorl
jg
adc
and
lods
lea
lds
sub
gs
cmp
aam
sub
ds
es
cmpb
pop
mov
xchg
mov
mov
call
ja
inc
xchg
xchg
mov
fdivr
dec
cmp
sbb
inc
popa
and
hlt
push
and
add
andb
cmp
hlt
mov
pop
jle
push
sti
fsub
sub
mov
push
cltd
shrl
push
dec
aaa
fucomp
mov
in
dec
punpckhwd
in
hlt
in
iret
lds
nop
mov
rcrb
scas
sahf
hlt
adc
push
push
lahf
sarl
cmp
cmp
mov
cmpl
fstl
das
dec
iret
and
and
stos
push
sub
je
cmp
push
push
mov
movsb
ds
or
inc
lcall
shlb
loope
adc
push
lret
shll
jmp
or
xor
test
imul
cli
ss
rorb
adc
xor
jno
mov
cmpsb
scas
cmpsb
and
je
cld
inc
pop
shufps
faddl
xchg
outsb
sub
xchg
out
pushf
rcrl
in
outsl
lcall
subb
xchg
adc
loopne
ds
or
shr
fisubs
jo
aad
xorl
out
add
mov
xchg
fs
jl
push
pop
insb
in
jmp
or
or
mov
mov
in
int
xor
popa
dec
jecxz
fcmovbe
cwtl
fnsave
cmpsl
aam
push
add
stos
mov
ds
mov
mov
ljmp
dec
jmp
xchg
sarl
push
scas
cmp
or
enter
push
or
xchg
and
imul
push
inc
mov
lret
push
call
and
xchg
xchg
pop
xchg
out
pop
sahf
icebp
lods
aad
push
inc
lods
subb
jns
mov
pop
add
clc
mov
sub
mov
loop
fbstp
adc
pop
ljmp
push
jb
das
lahf
jbe
js
sbb
mov
leave
mov
push
out
addb
fwait
sub
jge
jp
scas
push
pop
dec
dec
mov
adc
jb
jo
pop
push
fwait
mov
loop
mov
fisubl
mov
sbb
cmp
outsl
mov
lock
push
out
loop
sub
xor
icebp
lea
daa
cmp
xchg
xor
mov
ror
sub
sar
sbb
shrl
gs
pop
es
ror
data16
divl
cmp
setne
rcr
fsubrl
addl
fs
cmp
mov
push
mov
sub
mov
movl
push
push
mov
xor
fcmovbe
sub
mov
popa
jg
out
fildll
xlat
out
paddusb
push
out
push
std
shlb
add
stc
xchg
das
and
lcall
js
insl
mov
fwait
add
lds
sbbb
jb
or
pop
push
call
call
in
inc
lds
lea
push
jae
jl
les
jbe
adc
stos
dec
insl
xlat
dec
fnsave
jbe
push
je
jnp
out
lock
std
pop
push
inc
adc
stos
arpl
xchg
add
mov
push
mov
cs
or
jp
int3
inc
jl
rol
fsubr
out
adc
mov
add
fildl
jbe
inc
push
xchg
push
adc
dec
xor
cmpsb
outsb
gs
loopne
ljmp
and
in
addr16
push
jg
push
jno
add
cli
inc
sub
in
sbb
inc
pop
mov
popf
fs
xchg
dec
pop
shr
test
stos
imul
fsubp
and
pop
xor
adc
test
sbb
adc
pop
push
xchg
dec
jle
lea
shlb
jle
push
and
aas
cltd
fsubrp
mov
mov
faddl
arpl
call
nop
jne
imul
cmp
xchg
hlt
dec
xchg
ret
ret
sub
fs
push
jnp
sub
rol
xor
push
out
push
inc
aad
pusha
jmp
or
lcall
notb
imul
es
xchg
push
jo
orb
pop
in
je
or
jg
in
push
call
sbb
add
push
dec
daa
mov
test
mov
or
outsb
cmpsb
rorb
xchg
cmp
fcmovne
mov
test
pop
cwtl
inc
outsl
mov
imul
mov
cltd
out
xor
icebp
div
sbb
add
stc
pop
mov
pop
sub
xchg
dec
xchg
sbb
pop
jmp
add
scas
pop
jne,pt
push
jge
jge
cmp
adc
pop
std
mov
jg
data16
adc
ret
je
xor
mov
push
lret
mov
add
pop
jle
mov
mov
addb
ret
outsb
sahf
sub
xchg
ficoml
xor
fcoms
enter
mov
pop
fcoms
xor
xchg
xor
pop
or
xchg
rcrl
xor
adc
or
mov
int
stos
adc
cmp
je
enter
arpl
push
xor
jbe
cmp
dec
enter
push
mov
sbb
icebp
movsl
fisubrs
add
cmpsb
add
out
std
push
sub
pop
idivl
enter
or
push
and
repnz
xchg
xchg
out
lea
push
mov
xchg
add
pop
iret
sbb
and
xchg
insb
decl
hlt
dec
in
mov
mov
enter
push
jno
lcall
pop
fistpll
daa
into
jle
mov
pop
test
mov
mov
out
pusha
testl
mov
dec
mov
test
imul
xor
addr16
inc
das
lea
mov
incb
fisttpl
xchg
add
loope
xor
andb
pop
push
fwait
xlat
adc
repnz
mov
shrl
sub
push
xor
xchg
jo
sub
sbb
js
jge
jmp
lods
adcl
jns
sti
inc
bnd
pusha
jns
xor
test
push
or
enter
inc
jmp
jg
add
adc
aam
rcl
dec
mov
sub
hlt
pop
sahf
add
vmwrite
call
xchg
and
orl
mov
mov
push
xor
lahf
cmp
out
repnz
mov
xlat
sarl
aam
fbstp
inc
pop
lods
or
in
add
out
ret
sub
pusha
jl
outsb
int
mov
jp
sti
cmp
push
insb
mov
ret
or
xor
dec
cld
gs
dec
sub
pop
imul
sbb
lods
mov
icebp
xor
outsl
lods
xor
jo
mov
mov
mov
and
das
popa
dec
xor
mov
sbb
addb
popa
cld
fisubrs
andl
mov
cmp
in
call
jbe
dec
cli
mov
mov
in
shrl
outsl
lods
add
test
add
dec
in
mov
loop
std
outsb
pop
cmp
cmp
inc
das
add
pop
push
mov
mov
addb
dec
jne
rclb
push
dec
cltd
dec
dec
arpl
mov
popa
mov
aas
mov
out
shll
popa
cld
jne
push
icebp
lods
mov
xchg
sbb
sub
jb
pop
mov
inc
ljmp
js
mov
pop
das
dec
cs
rclb
jns
repz
jmp
bound
jbe
sbb
adc
fucomip
mov
jnp
mov
test
scas
push
bound
or
push
rorb
scas
movq
loope
mov
xor
enter
mov
test
stos
mov
push
inc
fdivs
ds
add
adc
jae
sbb
cwtl
mov
int3
sbb
xchg
and
push
sbb
fmull
sub
sub
and
repz
mov
ret
push
shrb
sti
mov
mov
mov
and
and
loop
jp
es
ficoms
xor
jge
pop
xorl
mov
int
mov
in
push
mov
adc
adc
jmp
cmp
mov
dec
out
fimull
sub
cmpl
sbb
jl
neg
dec
mov
out
pop
cmc
jae
push
xor
cld
fstpl
jb
cwtl
lock
push
fdivp
repnz
sarl
xchg
nop
add
fisubs
xor
push
add
pop
inc
cwtl
mov
outsl
xlat
inc
scas
add
xor
or
xor
ret
leave
cmc
inc
sbb
adcl
push
cmp
xchg
xchg
sbb
pop
fwait
mov
xor
in
cltd
push
inc
mov
inc
test
out
mov
mov
jg
mov
xor
xchg
subb
enter
lret
jp
ret
icebp
popa
testb
inc
fimull
sarb
push
repnz
ja
jbe
insb
jmp
pop
xchg
repnz
inc
dec
inc
xchg
aam
ljmp
lods
adc
and
dec
push
call
cli
xor
mov
inc
enter
fldl
pop
add
lods
mov
cmc
mov
cli
pop
add
mov
sub
rorb
mov
sub
sbb
cmc
sti
dec
rcl
add
inc
xchg
lcall
into
xor
pop
jne
stos
inc
mov
xchg
mov
adc
rep
dec
fs
adc
dec
pop
arpl
add
push
jg
push
mov
jp
loop
sub
cli
pop
fcoms
jle
sbb
shll
test
push
push
dec
jl
pop
daa
cltd
icebp
mov
cwtl
ret
push
adc
cmp
mov
cs
pushl
sbb
jnp
das
orb
loopne
xchg
dec
jl
dec
pop
lds
shll
lret
push
jl
pop
jle
or
mov
cmpsl
inc
into
mov
push
dec
mov
addl
xchg
test
jl
adc
and
sarl
xor
inc
cli
or
dec
ss
les
icebp
scas
lahf
orl
mov
pop
inc
sbb
pop
push
adc
cmc
shrb
mov
lea
mov
mov
jmp
aad
lea
xchg
pop
imul
imul
dec
sbb
loopne
jno
repz
add
aas
xchg
xchg
lret
add
pop
push
jne
xchg
mov
sub
mov
mov
out
scas
push
aad
mov
adcl
scas
addb
xor
loopne
push
or
js
jae
cmpsb
int3
or
sarb
or
jne
adc
call
bound
or
filds
ljmp
jecxz
adc
dec
movl
xchg
cmp
dec
cmp
out
out
and
push
pushf
fwait
in
sbb
jns
jl
inc
iret
or
icebp
sub
mov
mov
cmp
cmpsl
leave
faddp
out
daa
push
xlat
sub
xchg
test
fisubrs
mov
pop
jno
test
out
rorl
leave
mov
sbb
sarb
clc
loop
or
and
fldenv
dec
jmp
jg
loope
pop
add
psadbw
jp
xchg
movsl
stos
or
testl
cs
mov
push
dec
andl
inc
and
popf
dec
test
sbb
outsl
data16
or
pop
jle
arpl
pop
sub
pop
les
pushf
jo
inc
in
push
jp
or
lret
out
inc
mov
mov
and
xchg
lods
scas
divb
outsb
xchg
loop
adc
icebp
push
negb
out
outsl
call
dec
jns
jb
je
mull
pop
push
je
push
push
sbb
mov
popa
pop
xchg
repz
push
bound
mov
jecxz
outsb
fwait
sbb
push
nop
es
sti
sub
add
add
or
sbb
and
jg
adc
cmp
add
jns
dec
add
ret
cld
aam
xchg
inc
in
mov
pop
push
ljmp
or
cmp
out
pop
adcb
jmp
loop
hlt
scas
into
push
clc
imulw
enter
popf
out
jecxz
mov
mov
add
add
inc
enter
mov
sbb
sbb
jnp
shr
xchg
push
pusha
adc
jb
cmp
je
push
cmp
xchg
inc
pop
mov
cli
js
pop
jbe
or
int
adc
pusha
jo
xchg
xor
and
cmp
out
cli
ret
scas
dec
enter
mov
sbb
sub
bound
xor
push
lahf
mov
lods
divb
mov
jo
push
jp
sbb
xchg
mov
icebp
lods
pushf
or
xor
mov
sub
test
sahf
cltd
xor
mov
das
xchg
ficompl
pop
push
aad
cmp
or
scas
pusha
rep
nop
call
add
ds
mov
fstl
fbld
daa
icebp
cmp
add
and
add
je
and
stos
push
fbld
addr16
inc
data16
and
pop
push
in
sbb
dec
mov
mov
out
mov
outsb
cli
out
lods
adc
inc
movsb
xchg
cmp
sub
adc
xchg
fisubs
lds
dec
mov
push
data16
jecxz
sub
or
icebp
jb
sub
mov
aam
lahf
xchg
loope
incl
cmp
and
test
test
cmp
int3
xchg
pushf
lods
push
je
and
jns
inc
and
jg
in
mov
sbb
inc
add
inc
in
lods
rcrb
int3
sbb
cmp
aas
add
jnp
call
and
mov
icebp
cmc
pop
inc
lret
bound
lahf
inc
mov
inc
mov
jle
into
and
or
into
shlb
mov
stos
dec
dec
mov
mov
imul
aad
je
mov
xchg
sahf
test
push
jl
xchg
or
inc
xor
xchg
jmp
or
call
int
mov
sbb
js
add
xor
mov
lods
scas
movsb
ret
pop
cmp
jmp
sub
or
pop
cs
lods
pop
rorl
popf
jne
adc
mov
movsb
cmc
inc
adc
test
push
mov
pop
pusha
nop
or
movsb
sbb
jg
push
das
or
xchg
adc
outsb
ficoms
rorl
xor
je
pop
cli
mov
mov
adc
gs
mov
inc
adc
xor
jb
push
sbbl
nop
addl
enter
jmp
dec
adc
jno
pop
out
lds
cmp
jecxz
push
sahf
decl
inc
push
and
out
sysenter
in
pop
dec
mov
fldcw
adc
lahf
push
cvtpi2ps
sbb
int3
pusha
pop
pop
in
faddp
rclb
jnp
notl
push
fdivl
cld
inc
xchg
cmp
sbb
push
insb
xor
xlat
xchg
jne
fistl
jmp
insb
xor
cmp
loop
cmp
inc
test
icebp
mov
sub
mov
xor
cmpsb
loopne
pop
cmp
xchg
enter
aam
push
outsl
out
cwtl
mov
stos
pop
mov
into
push
dec
flds
inc
sub
ja
aam
cmpsl
icebp
jne
mov
ds
sub
dec
andnps
ret
cmp
addl
orb
mov
outsb
lea
testl
mov
lret
sbb
dec
cmp
js
jg
mov
xchg
pusha
outsb
test
push
push
add
movsl
mov
mov
data16
cmp
push
ret
inc
jmp
jmp
and
xor
cli
cmc
fsubs
or
in
sbb
sub
fld
shll
sbb
mov
clc
aaa
jnp
inc
fimull
out
jp
loope
lods
sub
sbb
mov
pop
and
add
cmp
pop
out
les
jo
les
xor
mov
xchg
xchg
jmp
fwait
lcall
cltd
icebp
sti
jbe
loope
push
cmc
test
xchg
vmovups
mov
push
loope
movsl
lcall
sbb
pop
loop
xor
mov
ficoms
push
fcoml
inc
inc
inc
mov
adc
je
out
pop
clc
push
inc
shlb
les
roll
cmp
sub
cs
adc
fldl
pushl
dec
or
repnz
scas
jge
jnp
cmp
inc
das
mov
cltd
mov
lahf
sub
lea
loope
aam
cli
inc
mov
nop
test
jbe
cmc
fimull
lahf
push
jmp
mov
inc
xor
rclb
ss
push
in
xor
push
push
push
mov
loop
arpl
cmp
cmc
pop
mov
fld
adc
xor
inc
dec
pop
push
cltd
test
sbb
lret
mov
lea
loopne
stc
dec
and
jne
fwait
cmp
cmp
repnz
subl
adc
mov
jl
mov
lods
push
cmp
icebp
in
xlat
push
divl
pop
pop
and
subb
sub
popa
movsb
sbb
movb
xchg
movsb
dec
scas
adc
or
jle
push
hlt
loopne
ljmp
fbstp
ljmp
and
cltd
outsl
cwtl
out
jg
negb
jle
mov
sub
jge
pop
push
inc
hlt
jb
xchg
bound
lods
and
divb
sti
js
pop
adc
scas
inc
mov
jl
jle
ret
cmpl
mov
out
call
xchg
xchg
cmp
dec
push
xchg
rclb
mov
jecxz
imull
inc
push
aad
xchg
pop
sub
push
sbb
jmp
out
mov
mov
cmp
fwait
xchg
or
push
mov
inc
pusha
push
jp
dec
sbb
jne
sbb
mov
es
inc
or
mov
mov
shlb
movsl
rolb
cwtl
jb
notb
aam
xlat
into
adc
sbb
mov
sub
aaa
clc
or
add
stos
xchg
mov
lods
sbbb
mov
mov
cmp
pop
fcmovnb
test
aaa
sbbl
push
out
xchg
mov
loope
add
push
xchg
add
mov
ror
push
call
iret
sbb
dec
mov
out
dec
push
or
enter
push
mov
lret
ficomps
fwait
inc
jl
adc
pop
sub
out
xor
and
xchg
mov
sahf
roll
and
addr16
sub
or
in
add
ss
loopne
xor
mov
into
cmp
std
aaa
pusha
jge,pn
sub
insb
mov
fsubr
sbb
int3
js
jecxz
jecxz
xacquire
repz
lods
out
sbb
hlt
and
icebp
sbb
test
xor
push
adc
insl
hlt
push
mov
push
lcall
mov
lcall
inc
sahf
cmc
push
add
or
inc
test
addr16
enter
jg
dec
dec
inc
jbe
nop
leave
mov
and
and
xchg
sbb
aaa
jge
and
dec
outsl
jge
sbbl
inc
pop
out
xchg
fwait
adc
mov
test
ficomps
loopne
adc
mov
fnsave
inc
jb
js
movsl
inc
lahf
fnstenv
jb
iret
pop
or
jbe
lahf
subl
aaa
and
test
sbb
lods
rorb
popl
fwait
dec
popf
mov
xor
in
je
or
int
cmp
add
dec
mov
ja
or
pop
push
jae,pt
ret
sub
mov
je
lret
or
scas
out
jbe
pop
rorb
jg
sub
cld
ljmp
scas
sub
roll
push
stos
xchg
mov
jge
js
push
test
cmpsl
mov
dec
lahf
xorb
sbb
fcoml
or
and
xchg
out
imul
sub
loop
scas
mov
fwait
movntps
fisubl
sub
in
imul
xchg
dec
xor
dec
shlb
daa
sbb
lcall
and
inc
sti
pop
nop
dec
jbe
sbb
insl
gs
mov
cmp
adc
fdivrl
data16
je
pop
loope
aad
or
arpl
and
sbb
mov
in
sbb
xor
jbe
and
sbb
int
xchg
add
dec
mov
pop
hlt
popa
pop
in
inc
fcoms
shl
inc
pop
imul
loopne
pop
lret
cmp
daa
or
paddusw
outsl
push
int3
leave
xchg
inc
in
mov
popf
repz
sub
cmpsb
inc
xchg
stos
push
js
push
out
xor
cmp
imul
lcall
enter
loope
and
xchg
movsb
sti
push
aad
inc
fbstp
jnp
jmp
movl
cmp
nop
pop
mov
jne
hlt
and
mov
push
fistl
mov
imul
aaa
push
or
cmp
inc
lret
cld
xor
fstl
mov
push
subb
repnz
addr16
cmc
xchg
pop
call
enter
jp
mov
pop
xchg
scas
ja
les
push
push
xor
inc
insb
mov
push
xor
popa
popf
decb
adc
inc
jg
fisttps
cmp
mov
sahf
or
repz
jns
mov
cwtl
jno
flds
out
pop
jne
cli
and
sbb
xor
fstl
lret
mov
dec
and
stc
ret
arpl
sub
inc
adc
iret
sub
push
rcr
in
jp
loopne
jo
push
fs
orl
nop
pop
fldl
sub
push
hlt
fldl
jle
fcoms
je
insl
shll
sbb
adc
loopne
adc
cmpb
inc
add
hlt
jmp
inc
fcmovnu
adc
out
rorl
cmp
mov
xchg
add
mov
dec
xor
lea
fistpll
sbb
aaa
out
out
xor
insb
add
imul
hlt
fsubrl
or
lcall
mov
call
and
inc
pop
and
xor
push
cmp
pop
ja
icebp
int
mov
xor
mov
mov
mov
shl
cld
nop
outsl
xchg
psubq
mov
js
push
cmc
scas
push
xchg
or
mov
dec
cmp
int3
xlat
ret
in
fnstenv
leave
adc
add
cwtl
imul
sub
jo
push
stos
clc
jo
daa
aad
jmp
mov
lock
jl
repnz
cmpb
mov
xor
cmp
dec
fdivl
add
jbe
mov
xchg
jne
fcomi
cmp
or
stos
andl
loope
rclb
cli
cli
pushf
sub
mov
lds
or
test
loope
jno
ljmp
jno
lods
jbe
lods
rolb
pop
sbb
out
jne
fdivrs
xlat
dec
mov
inc
movsl
nop
jge
mov
pop
add
or
and
mov
sahf
scas
ficoms
mov
scas
pop
add
inc
sub
xor
mov
jle
loop
sbb
fwait
lods
mov
push
sub
fsubrl
ss
jb
arpl
add
xchg
mov
fstpt
gs
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
jmp
add
jnp
jnp
jbe
cs
out
lods
arpl
pop
jp
sub
fs
inc
aad
sbb
jl
test
jecxz
vpsllw
or
or
sub
dec
xorl
sub
jp
pushf
orb
mov
and
mov
dec
stc
or
jge
jne
lahf
call
add
rcrb
pop
insl
pop
xor
cli
adc
orl
dec
movsb
je
add
stos
adc
cmp
sbb
jecxz
mov
mov
and
pop
loope
push
pop
cmpsb
push
mov
ss
xchg
arpl
rcrb
cmc
mov
cmp
fdivrl
sub
lret
hlt
adc
popa
fisttpll
dec
jg
or
mov
mov
rclb
test
push
add
cltd
mov
push
int3
sub
mov
js
mov
aas
sub
inc
cwtl
sub
pop
mov
dec
push
pusha
pop
jle
jnp
lea
mov
adc
push
ret
add
shl
je
je,pn
inc
lock
jno
into
jg
adc
dec
xchg
jne
fisttps
add
pop
pusha
dec
cmp
mov
mov
cltd
pop
les
dec
add
fs
lcall
outsl
jae
mov
in
xor
es
jl
xchg
negl
xor
and
sbb
rsm
imulb
sahf
jecxz
xor
in
lcall
mov
repnz
mov
adc
mov
in
sbb
cmpsb
dec
jbe
add
adc
xor
xlat
ljmp
push
mov
xchg
sub
pop
sbb
ror
adc
outsl
adc
leave
gs
xlat
dec
mov
push
jno
sub
movsb
in
fs
jecxz
idivl
mov
dec
aad
and
or
dec
repnz
cmc
cmp
lods
jno
loop
mov
addr16
jle
aad
addr16
and
std
xor
mov
xorl
or
add
jle
xchg
test
es
cld
or
jb
add
xchg
sarl
cld
mov
clc
xchg
cmp
out
jecxz
xchg
adc
outsl
xor
cmp
lods
dec
adc
mov
jb
jle
mov
call
stc
orb
lods
lret
sahf
jbe
addr16
xchg
addb
test
popa
stos
stos
or
ret
mov
mov
popf
iret
adc
jecxz
push
and
xchg
add
lods
mov
jl
mov
sub
sti
jge
nop
call
cmp
outsl
inc
stc
dec
pusha
sub
jle
cmp
push
cs
scas
jge
movsb
mov
cwtl
dec
jo
add
aam
or
stc
jmp
jnp
or
xchg
cmp
adc
mov
fsubrs
mov
jo
xchg
fistpll
xor
cwtl
pop
call
adc
push
scas
sub
rcll
add
cwtl
std
testb
pop
dec
cmp
mov
push
adc
xor
shlb
in
cmpsl
inc
scas
and
cli
pop
cmp
addb
sub
jl
out
push
push
shll
insl
roll
stos
fstpl
stos
mov
les
mov
btr
daa
mov
hlt
imulb
push
fs
out
movsb
decl
xlat
adc
je
scas
loop
cmpsl
lahf
adc
dec
add
lret
mov
pop
sub
sub
push
push
mov
mov
mov
xor
loopne
ljmp
std
inc
push
call
shrl
pop
mov
dec
sarb
jb
je
imul
xchg
mov
out
or
xchg
movsb
rcrb
mov
pusha
adc
sbb
fs
mov
and
or
mov
mov
js
mov
mov
shrl
call
inc
dec
pop
jns
fcmovnu
pandn
pop
out
cmp
rorl
movsl
out
addr16
push
call
ljmp
dec
push
ret
and
push
add
pop
mov
add
xor
or
xor
push
les
jnp
push
std
stc
int3
mov
fs
push
xchg
mov
mov
or
jns
insb
mov
popa
sti
or
pop
lret
pop
icebp
jmp
in
xorl
in
mov
adc
inc
inc
or
adc
insl
arpl
mov
mov
ja
rorl
and
pop
sbb
cmp
mov
sbb
inc
inc
pop
cli
sbb
lret
inc
lods
dec
sbbl
sbb
ret
js
std
fadds
push
bound
fimull
pop
fcoml
dec
inc
adc
gs
pop
pusha
mov
xor
mov
or
or
pop
jne
or
pop
xchg
xchg
mov
std
aam
sub
mov
adc
cs
int3
je
insb
lods
mov
push
imul
xchg
push
clc
dec
int
cmp
sub
dec
lea
xor
mov
std
adc
cwtl
xchg
shrl
out
mov
sbb
gs
sti
fldcw
cmp
shl
dec
bswap
or
lea
cmpsl
jbe
dec
adc
jl
data16
arpl
ljmp
add
les
cli
hlt
lcall
push
add
xor
in
mov
jg
sbb
pop
imul
pop
rolb
insb
dec
xor
ds
sub
and
sub
hlt
sahf
push
jbe
movsb
mov
pop
cmpsl
std
out
mov
mov
xor
jl
subb
xchg
jp
loope
and
std
test
pop
pop
jb
and
sbb
out
inc
fists
inc
ljmp
and
movsl
iret
sbb
sbb
pop
insb
sbb
movsl
push
test
or
popa
fwait
stos
lock
cli
and
or
mulb
jge
mov
in
xor
dec
adc
test
clc
shlb
lds
call
push
lods
cmpsb
mov
cwtl
mov
xchg
cltd
arpl
adc
and
cli
gs
in
outsl
sbb
mov
addb
imul
xor
mov
pusha
lret
or
xor
aas
lcall
roll
out
xor
loope
pop
add
dec
ja
hlt
push
xor
push
loopne
cs
inc
mov
ret
and
outsl
out
add
dec
out
test
xor
lods
call
xor
repz
cmpsb
pop
mov
out
loope
mov
sbb
or
aam
add
mov
outsl
stos
mov
mov
sbb
hlt
std
std
movb
mov
mov
xor
arpl
aas
clc
jno
rcll
ljmp
inc
flds
cld
imul
pop
sub
mov
mov
test
sub
pop
ja
mov
addr16
xchg
lea
daa
shlb
notb
je
loope
and
ja
scas
fs
mov
cmpsb
scas
ja
hlt
mov
shr
inc
add
sbb
test
fidivs
fwait
push
xor
inc
jbe
add
cmp
in
or
jge
mov
mov
mov
pop
or
jg
sbb
addr16
push
popf
or
jp
aas
test
add
cwtl
pusha
jmp
jge
sete
pop
add
js
push
cltd
add
cmpsl
dec
push
mov
fwait
jge
xchg
popf
ljmp
aas
or
sub
in
dec
or
mov
lds
pop
sbb
mov
xor
fbstp
jno
jno
jo
mov
cmpsb
movsb
leave
or
sbb
mov
mov
jns
cltd
inc
sbb
cmc
push
in
arpl
cwtl
and
test
cli
nop
adc
mov
add
mov
mov
aam
in
and
mov
sub
or
fistl
adc
notrack
out
jg
mov
fnstcw
push
idivb
xor
pushf
scas
add
fstpl
cmp
sbb
ss
lahf
and
mov
push
jns
imul
mov
ja
cmp
cmp
dec
inc
lahf
arpl
js
fwait
push
xchg
jle
je
mov
pop
loope
adc
notl
aas
mov
movsb
sbb
xchg
jne
mov
lea
dec
push
fisubrl
cmp
lret
inc
rcrb
xor
mov
out
sub
sub
push
gs
xchg
cmp
xchg
xchg
insl
stos
repnz
test
mov
mov
jbe
dec
sti
outsb
mov
pop
mov
push
outsb
aaa
xorl
icebp
sub
push
rclb
push
fldcw
loope
negl
dec
ret
dec
xchg
sbb
xchg
repz
mov
imul
push
pop
out
je
adc
cmp
inc
sub
imul
mov
sub
rcl
sbb
sub
adc
add
add
and
mov
ljmp
mov
push
fcmovnb
testl
and
lods
stos
ja
mov
ror
push
pop
rcrb
mov
or
sub
test
bound
adc
dec
mov
loopne
sbb
jno
sar
hlt
dec
cmp
xchg
mov
cmc
inc
jnp
pop
movsb
xchg
dec
mov
sbb
adc
fcomps
dec
fdiv
mov
notl
mov
hlt
xor
cltd
xchg
lds
adc
data16
insl
int
jno
cmpsb
dec
xchg
jae
movd
sub
cmp
or
mov
add
jne
es
into
sahf
mov
add
jmp
arpl
adc
push
or
and
mov
cmp
clc
repnz
aas
scas
xchg
cmp
mov
pop
call
repz
pop
dec
mulb
idivl
test
fdivr
push
adcl
lret
jp
adc
enter
outsb
rol
pop
test
mov
fwait
or
pop
call
adc
iret
mov
imul
mov
push
dec
lock
out
xlat
add
lret
pop
cmp
xchg
mov
loope
jno
sbbl
and
rclb
ds
push
call
and
mov
int3
push
fmul
or
les
aam
dec
lcall
or
xchg
pop
adc
in
addr16
or
jno
xchg
ss
jp
cmp
xor
test
xor
das
xlat
add
cmc
mov
mov
je
test
push
mov
xchg
test
add
fwait
test
pusha
addr16
mull
mov
jge
cmc
xor
xor
sti
in
pop
insl
dec
or
dec
adc
push
and
fnstenv
lret
mov
dec
aad
mov
xchg
rolb
aad
and
hlt
push
test
fs
mov
lret
lahf
fcoml
imul
or
pop
jl
xor
jle
aaa
bound
mov
sti
lret
nop
insb
mov
cmpsb
shrb
fwait
or
dec
addr16
pushf
mov
jno
push
nop
cmp
jl
imul
push
les
push
popa
adc
fcomi
test
bound
fldcw
inc
lea
and
push
cmp
shlb
enter
or
xor
inc
sbb
jb
lret
and
mov
bnd
lods
shll
push
out
movsb
sbb
mov
popf
adc
xor
call
lret
pop
lret
enter
pushf
cli
lahf
mov
cmc
xchg
and
insl
push
dec
sti
scas
sub
test
adc
xchg
popf
out
popf
jmp
mov
sbb
mov
and
test
xor
insl
stos
das
enter
addr16
and
addr16
jbe
cmpsl
leave
mov
test
stc
popf
or
sbb
inc
pop
xchg
xor
jl
xor
dec
or
and
mov
rcrb
lds
fwait
popa
mov
stos
ficompl
cmc
ljmp
cltd
sub
xlat
ss
jnp
sar
pop
push
movsl
dec
pop
jge
pop
pop
and
mov
imul
add
mov
mov
mov
call
aas
hlt
sub
call
int3
mov
je
icebp
push
aad
hlt
push
jae
sub
mov
adc
mov
push
dec
ret
pop
xor
push
mov
nop
dec
iret
inc
dec
pop
mov
loope
sub
add
les
inc
jg
add
sbb
rcrb
test
inc
xchg
fistl
or
jae
xchg
loopne
sub
pop
ret
mov
fidivrl
movsb
les
sbb
inc
inc
sarb
aaa
add
sbb
lock
add
and
add
ja
out
push
js
pop
push
inc
cmp
jns
jl
mov
inc
dec
ds
and
fcom
arpl
cmc
lds
cli
clc
rcrl
pop
cld
push
add
stc
jg
out
pop
mov
xchg
inc
imul
adc
sbbb
sbb
jne
enter
cwtl
pop
rcrl
jae
xchg
out
sub
cmp
mov
pop
ds
jns
inc
adc
sub
push
outsl
scas
inc
imul
lahf
inc
jns
out
dec
bound
pop
xchg
push
out
movsb
sub
mov
mov
bound
push
ficompl
sarl
sub
xor
out
xor
test
mov
pop
pop
fmuls
sbb
outsb
lea
pop
xchg
pop
shll
mov
sub
lock
push
popf
jecxz
stos
jbe
fildl
shlb
iret
jmp
adc
mov
fdivl
inc
and
xchg
aas
jmp
shr
les
or
rcr
xor
mov
sbbb
jl
ljmp
add
in
inc
push
adc
mov
in
pop
cwtl
repz
jmp
xor
push
fsubs
sub
add
xchg
js
cwtl
inc
pop
add
cmpsl
cmp
fldt
lods
mov
jge
aas
and
adc
mov
mov
pushf
cmp
push
out
inc
pop
sbb
push
jo
mov
push
in
pop
dec
ss
addr16
mov
sub
push
popw
clc
add
cmp
adc
repnz
pusha
sub
dec
lds
shl
push
xchg
dec
repz
stc
aas
sarb
cli
mov
iret
cld
jns
fcmovnbe
daa
xchg
or
dec
mov
or
inc
xchg
jp
lock
sti
into
inc
mov
cmp
adc
sarb
repnz
mov
in
dec
test
dec
adc
mov
int3
cmc
bound
popf
nop
mov
mov
jg
rcll
jmp
mov
scas
push
inc
je
lods
mov
push
inc
dec
mov
fadd
lods
mov
insl
aas
jl
out
loop
fwait
lds
outsb
and
rclb
and
incl
and
mov
mov
loope
mov
xchg
shlb
dec
ljmp
or
shrb
lret
xor
les
and
aaa
pop
scas
push
fldt
mov
fs
shl
and
xor
jnp
notl
cld
js
jne
fmulp
out
cld
int3
jnp
push
shl
mov
filds
mov
insb
xchg
shufps
push
fwait
push
es
adc
ljmp
xor
xchg
fs
je
xchg
add
dec
imul
ss
mov
dec
jecxz
jnp
aam
add
lret
repnz
add
aas
sahf
fldl
inc
pop
aam
inc
xor
inc
cmp
and
test
call
cmp
insb
push
jmp
jns
or
sbb
loope
push
test
je
ret
shll
cmp
adc
shlb
imul
mov
xchg
mov
sub
imul
add
xor
pop
mov
add
and
add
inc
jl
xor
fnstcw
dec
nop
jo
pxor
es
push
or
leave
stos
pop
jno
cmp
aas
jg
mov
ficomps
lock
jg
lcall
lock
xchg
shlb
fwait
popf
out
inc
repnz
lock
add
or
data16
outsb
push
daa
loopne
jne
push
pop
adc
dec
and
xor
shlb
loopne
push
repnz
cmp
mov
or
imul
mov
ljmp
mov
inc
stc
mov
mov
iret
adc
les
pop
add
xor
adc
pop
mov
push
lods
jle
outsb
pushl
mov
loope
jno
jbe
ds
jnp
jnp
setp
and
xor
and
idivl
arpl
lahf
cmpl
xor
pop
jle
ret
sbb
mov
push
enter
insl
mov
lock
inc
adc
mov
cli
xor
mov
cmp
lods
and
les
or
fwait
and
push
jp
fimull
jb
insl
inc
xchg
or
push
sub
jl
push
repz
mov
mov
loope
mov
sub
gs
mov
ficoml
cmpl
roll
jecxz
dec
cltd
sahf
call
mov
adc
sub
movl
sbb
mov
inc
jb
imul
mov
fs
stc
mov
stc
adc
stc
cld
push
xor
pusha
dec
js
pop
ss
and
jb
push
pop
mov
fisubs
dec
inc
test
inc
nop
push
fldcw
cmpsb
out
dec
sbb
adc
xlat
repz
cmpsl
in
dec
std
jnp
ss
les
mov
sahf
jae
aam
sarl
mov
add
loopne
dec
cmc
xor
jno
add
lods
xchg
pop
dec
ret
mov
cmp
xor
rcll
lods
imul
idiv
push
cld
dec
gs
test
sub
sti
bound
lds
mov
rep
loopne,pn
aaa
jb
outsb
add
sbb
or
cmpsb
scas
inc
insb
mov
sub
mov
loop
in
shll
into
rorb
or
lahf
xchg
cs
inc
aaa
aam
loop
adc
rsm
xor
or
or
pop
sbb
mov
cmp
and
cld
icebp
add
sub
cmp
fsub
xchg
cmp
insb
pop
add
scas
dec
cld
stos
fdivrs
fiadds
iret
xchg
ja
mov
pop
repnz
mov
jmp
cwtl
pop
stc
jle
shrl
jge
shlb
mov
out
ficoms
stos
repz
ret
or
add
pop
sub
pop
jnp
pop
or
int3
loopne
mov
cmp
xor
jge
mov
clc
cmp
jecxz
out
push
in
pop
call
dec
pop
mov
test
repz
push
fdivr
push
jb
int3
xchg
sub
aam
mov
xchg
xchg
dec
inc
push
xor
push
pop
test
lock
inc
pop
insl
inc
shrb
incb
cwtl
jmp
inc
mov
das
mov
scas
cltd
jo
jns
shlb
mov
mov
inc
test
push
dec
or
shll
push
dec
jns
xor
sub
cli
loop
or
add
mov
test
push
mov
push
insl
adc
cmpb
adc
roll
test
mov
out
jb
lea
push
xor
into
pop
or
test
jmp
cmpsb
gs
lea
std
cmp
inc
push
pop
jp
mov
ljmp
pop
mov
hlt
jae
sub
scas
cmp
pop
rcrb
into
mov
or
adc
jae
or
roll
push
xchg
negb
mov
fdivs
xor
fbstp
push
push
js
mov
and
sahf
test
push
ret
pushf
xchg
inc
mov
out
std
inc
jmp
cmpsl
fwait
or
popa
bnd
sahf
lods
out
jo
pop
ss
mov
lods
repnz
push
adcl
or
cwtl
aas
insb
cmc
adc
ljmp
pushf
xchg
decw
outsl
xchg
mov
and
sub
and
inc
mov
add
mov
mov
test
mov
jno
pop
scas
adc
sbb
adc
rolb
xchg
lcall
fidivrl
push
pop
ret
test
jb
xchg
cmp
lock
popa
imul
adc
fdivrs
enter
cs
aaa
xor
xor
ja
stos
and
push
xchg
inc
loope
je
inc
dec
cmp
sbb
cmpsl
pusha
icebp
imul
imul
push
fmull
sbb
frstor
lahf
shlb
cmp
add
jecxz
outsb
inc
or
cld
xchg
mov
mov
sub
daa
sbb
or
mov
or
and
cld
mov
or
lahf
mov
cmp
rcll
and
ss
xor
scas
insl
inc
dec
loope
imul
shrl
daa
sbb
rcr
or
add
arpl
xor
test
mov
dec
lret
cmc
inc
dec
repnz
sub
daa
into
fnstsw
xchg
sub
es
aad
addr16
inc
pop
xor
stos
dec
gs
xchg
inc
adc
outsl
paddb
push
scas
iret
add
imul
fld1
lods
add
loopne
hlt
adc
arpl
pop
fstpl
out
pop
dec
sarb
inc
insb
fadd
divb
inc
sbb
cmc
pop
cmp
data16
xchg
inc
sti
movsb
in
pop
and
inc
inc
int
push
and
arpl
cltd
mov
inc
sub
dec
test
cmpsb
mov
add
or
lods
ret
repnz
push
lock
mov
jae
cwtl
fmull
dec
ficomps
inc
cmpsl
push
add
add
jo
xor
and
sub
pop
sahf
iret
stos
orb
mov
mov
icebp
or
or
adcb
push
add
popf
adc
xchg
shlb
adc
mull
bound
lds
cmp
sub
nop
cmp
push
xchg
push
lret
movsb
mov
mov
cmpsl
mov
dec
scas
mov
out
int3
roll
lock
mov
mov
scas
mov
sub
mov
jle
loope
cmp
addb
mov
ss
pop
or
and
mov
lds
xchg
mov
cmc
repnz
push
dec
add
js
daa
push
and
int3
xchg
inc
push
or
aad
stos
jae,pn
fbstp
sub
push
jno
mov
insl
push
jns
dec
icebp
or
and
and
add
and
out
out
mov
pop
mov
inc
sbb
gs
out
es
into
lds
jg
mov
shll
bound
xchg
mov
cmp
jge
mov
cmpl
movsb
arpl
nop
mov
adc
subb
fsubl
outsb
push
jo
pushf
pusha
and
sbb
jecxz
adc
cs
imul
xor
repz
xchg
fcompl
adc
jno
fiadds
notb
fcmovnu
push
enter
mov
fiaddl
inc
movsb
jp
mov
pop
jnp
lods
scas
push
adc
test
xchg
ds
leave
insl
jo
repz
in
stc
out
pop
xchg
mov
push
movsl
cmp
sub
pushf
cmp
cltd
pushf
in
sarl
scas
aam
push
cmp
pop
push
in
and
mov
fstpt
aaa
add
decb
lods
xor
pushl
movsb
and
jbe
and
adc
push
sbb
add
and
dec
int
mov
adcb
cmp
int
cmp
and
add
movzwl
pop
ja
mov
jg
dec
arpl
adc
jmp
shll
movsb
imul
mov
js
pop
fdiv
shll
cmp
mov
stc
xchg
es
popf
xor
add
or
mov
adc
hlt
cltd
out
pop
mov
lock
ljmp
add
jge
adc
and
out
scas
iret
arpl
xchg
xor
popf
add
sub
adc
adc
popf
sbb
or
sub
fsubrp
xor
test
inc
and
pop
into
incb
lea
inc
stos
loopne
sbb
fs
outsb
dec
jae
push
sub
inc
lret
inc
gs
jne
cmpsl
mov
inc
pop
fs
or
xchg
mov
lcall
ljmp
adc
mov
xor
divl
cltd
sti
xor
loop
bnd
clc
ljmp
mov
fists
movsb
nop
out
jp
mov
pop
xchg
xor
out
lret
mov
adc
movsl
or
pop
sbb
sbb
rolb
fisubrl
jnp
stc
cmp
xlat
jae
inc
sub
loop
or
not
std
enter
jbe
in
andb
cmp
stos
daa
scas
or
lret
insl
sahf
xchg
and
loopne
and
add
leave
loope
pop
out
fsubs
jecxz
scas
stc
cltd
jae
aaa
xchg
divb
stos
out
cmp
fwait
jo
fldlg2
flds
insb
mov
jle
mov
daa
sub
jecxz
xorb
dec
jne
and
push
push
into
iret
push
ret
aaa
dec
out
daa
repz
push
loopne
xor
das
daa
sub
add
in
fcmovnu
je
repz
pop
shl
rorl
in
mov
call
mov
add
in
mov
and
in
jge
into
sbb
ljmp
outsl
stc
loopne
and
mov
ds
adc
imul
sub
sbb
mov
int3
mov
stos
sbb
mov
jnp
enter
jg
imul
xchg
aaa
xor
pop
aam
enter
add
dec
mov
add
das
and
in
test
or
push
mov
adc
clc
gs
dec
in
sbb
cmpsb
and
cmp
jl
xchg
adc
imul
cld
or
inc
push
or
mov
stc
outsb
mov
add
dec
iret
pop
cmp
jp
bound
adc
sbb
shrb
sub
mov
xrelease
pop
shlb
test
pop
rep
stos
imul
add
xchg
dec
enter
jne
out
aad
adc
mov
sti
fs
jecxz
add
sbb
sub
mov
inc
cmp
js
std
jp,pn
dec
daa
xor
es
fldl
popa
ret
repnz
pop
cmp
cmpsb
lret
or
rclb
xorl
push
cltd
cmp
mov
enter
roll
cmp
mov
push
divb
stos
jns
dec
dec
adc
or
pop
mov
xor
sbb
dec
fistpll
mov
inc
cld
test
inc
lods
leave
fcomps
sbb
push
int3
and
pop
add
xchg
pop
push
movl
out
jb
xchg
dec
js
mov
push
pop
addb
add
inc
cli
lcall
rcrl
iret
rcr
cwtl
test
xor
sahf
pop
loopne
arpl
popf
jo
int
push
pop
dec
mov
ja
hlt
out
imul
rolb
leave
xorb
cmp
or
inc
lret
dec
clc
stos
ja
inc
inc
shl
nop
popa
cli
loop
adc
aad
ret
dec
xchg
popl
lock
sub
sub
pop
cli
pop
dec
fildll
stos
mov
das
bnd
clc
popf
mov
lods
dec
scas
xchg
adc
inc
mov
movsl
xchg
addr16
xchg
fsubr
mov
xor
out
xchg
loope
daa
fmull
cmp
add
fcmovne
sub
fsubl
mov
mov
inc
mov
mov
repz
inc
xchg
out
das
loope
or
pop
mov
popa
jae
fs
add
imulb
sub
push
mov
jmp
dec
pushf
scas
mov
add
push
in
es
sub
and
dec
inc
adc
stos
hlt
xchg
or
cmc
out
shrl
push
mov
push
push
adc
pop
subb
push
sub
fnstenv
xlat
popa
jp
dec
add
stos
scas
push
cmp
dec
pop
mov
hlt
sar
xchg
lret
rorl
add
mov
daa
mov
pop
mov
arpl
cmp
adc
imul
add
imulb
ds
mov
int3
pop
dec
ffreep
dec
pop
out
fs
das
mov
iret
adc
sub
inc
ljmp
clc
cltd
or
rcrl
sbbb
mov
shrl
add
inc
lods
jmp
mov
push
scas
loope
outsl
movsb
addr16
lahf
adc
jmp
mov
dec
pop
mov
nop
sub
je
mov
jp
dec
dec
pop
jbe
in
in
adc
into
add
xor
lret
leave
addr16
imul
lret
add
movsl
incb
popa
xchg
add
or
and
sbb
jecxz
jmp
roll
mov
shr
push
loopne
movsl
js
mov
or
addr16
xchg
jmp
ds
mov
stc
movsb
adcl
mov
test
xor
sbb
jns
mov
ja
in
cmp
mov
jb
xor
sbb
mov
cs
xchg
push
jno
inc
adc
daa
sti
dec
push
mov
dec
dec
cmp
jne
aaa
jae
jge
insl
fwait
call
ljmp
fsubs
pop
fldl
xchg
add
jmp
jg
dec
cs
adc
aad
and
sbb
jge
add
repz
ret
aam
pop
inc
dec
xchg
mov
jae
jle
sbb
iret
mov
clc
and
in
mov
mov
sti
adc
daa
movsb
xchg
ss
jl
daa
and
add
jge
dec
outsl
lret
cld
jp
xchg
push
dec
xorb
aas
mov
dec
mov
iret
and
mov
icebp
mov
cmpsb
jmp
mov
adc
lods
mov
fisubrl
add
mov
fcmovnu
xor
int
jb
or
dec
add
lahf
sub
xchg
add
sub
in
jne
sbb
insl
cli
sub
ftst
adc
push
push
dec
sub
movsb
dec
mov
jl
test
mov
add
push
int
subb
aad
adc
clc
jns
xchg
fs
in
sbb
popa
push
out
mov
js
jmp
or
and
rcrb
ror
lods
jle
iret
push
shll
jp
mov
movsl
xor
lods
popa
mov
pop
mov
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
dec
and
adc
call
add
adc
cld
insb
adc
movsb
js
add
adc
dec
jae
add
sub
adc
cmp
adc
cwtl
cmovb
pushf
cmovb
mov
cmovb
test
inc
add
inc
add
dec
aam
dec
add
add
add
add
cmp
lar
rolb
add
adc
pop
sbb
add
sub
adc
mov
push
adc
ret
add
inc
add
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
pop
cmovb
pusha
cmovb
cmovb
push
cmovb
jo
inc
add
add
cmp
add
adc
fldt
adc
xchg
sub
add
aaa
adc
and
xor
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
add
inc
add
cmovb
adc
add
push
adc
xchg
xor
adc
stos
jo
add
inc
adc
pop
pop
adc
fildll
adc
push
push
inc
push
mov
and
jle
lods
dec
pop
xchg
lods
mov
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
add
add
add
add
mov
add
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
mov
adc
add
add
insl
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
