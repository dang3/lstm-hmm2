push
mov
sub
mov
adc
mov
mov
or
mov
sub
push
movl
mov
mov
mov
sbb
mov
and
mov
orl
mov
mov
add
orl
mov
add
mov
jmp
iret
inc
loopne
push
adc
fmuls
mov
mov
xchg
mov
les
xor
in
mov
adc
ss
data16
mov
dec
inc
movsl
mov
pop
inc
xchg
mov
fdiv
ret
orl
adc
movsb
jge
dec
mov
and
cwtl
clc
pusha
lds
popf
mov
inc
push
mov
cli
imul
loop
push
stos
xor
notb
out
mov
cmp
xor
sub
jae
jp
call
jle
push
push
jl
adc
or
cmp
lret
xor
mov
aam
jne
push
ret
ds
pop
sbb
test
xchg
js,pn
mov
aaa
test
pop
adc
test
in
jnp
mov
gs
and
cmp
push
fstps
mov
lock
lcall
jp
fldl
fistps
dec
mov
stc
push
jl
lret
not
icebp
mov
fbstp
dec
add
cmp
call
sub
xchg
je
inc
push
pop
movsb
scas
cmpb
dec
sahf
outsl
or
mov
adc
cmp
push
pusha
sub
inc
pop
scas
sbb
icebp
mov
lret
mov
vmwrite
mov
aad
dec
leave
loop
adc
insl
pop
addr16
and
adc
add
add
dec
scas
dec
cmp
or
loopne
push
std
sub
std
jmp
add
or
and
loopne
mov
leave
pop
inc
jns
int
xor
daa
lods
dec
cmc
mov
push
aam
popa
sbbb
mov
push
mov
jo
jae
iret
push
and
pop
aam
mov
ret
dec
pop
xchg
sbb
repz
hlt
lahf
jb
inc
mov
fwait
cmpsl
aam
xchg
sbb
fdivr
sti
mov
mov
jmp
cmp
stos
inc
adc
pop
lock
aad
sbb
movsb
lock
insl
insb
dec
jns
mov
xchg
fwait
add
addr16
inc
mov
fsubrs
and
lahf
jo
sarl
jg
pop
inc
ljmp
dec
and
call
inc
mov
fistpl
and
mov
add
lods
add
call
leave
push
fs
adc
mov
dec
mov
mov
incb
les
fcmovb
mov
ja
lods
lret
jge
jle
subl
outsb
das
dec
int3
mov
movsl
int3
iret
cli
xchg
rcl
enter
add
test
jl
xchg
push
add
xor
mov
mov
fld
lret
cs
popa
mov
lea
stc
enter
sub
xchg
jmp
ds
or
das
push
push
xor
movb
mov
mov
and
out
mov
and
stos
add
jp
xchg
addr16
popf
and
mov
pop
adc
pop
jo
repnz
iret
add
and
mov
mov
xlat
push
cmpsb
mov
inc
adc
lock
les
inc
mov
pop
clc
jb
push
mov
push
shll
mov
clc
popf
iret
fildl
loop
jno
ja
lret
xchg
jle
cmp
adc
repz
pop
inc
int
insl
cmp
test
add
pop
or
xchg
pop
js
xchg
fnstcw
int
pop
gs
sub
lds
lret
push
and
fidivl
push
lahf
lahf
cwtl
scas
lea
pop
inc
daa
xor
mov
jo
mov
orl
push
addr16
and
incb
and
ret
mov
sbb
mov
out
out
lock
sub
push
mov
in
aad
lods
xchg
loope
aad
pop
gs
testl
jg
or
sbbb
subb
js
ds
sub
int3
sbb
jbe
dec
xor
hlt
or
jo
or
cmp
and
push
in
movlps
mov
mov
scas
dec
jl
popa
jno
test
or
cmp
cmp
es
cltd
jp
rcll
rcrl
adc
enter
outsl
mov
inc
push
mov
mov
scas
movsb
mov
xchg
mov
icebp
cmp
jo
xchg
pop
jg
lret
repz
scas
jb
pushf
sub
adc
and
adc
push
inc
icebp
pop
push
lods
inc
xchg
add
iret
std
das
add
or
mov
lret
xchg
mov
cmc
arpl
lock
mov
jnp
lods
sub
movsb
and
repnz
xchg
mov
lea
icebp
fwait
ss
ja
inc
mov
mov
jo
jmp
pop
xchg
xor
fldt
inc
fld
repnz
sbb
xchg
in
and
aaa
jg
lods
jo
jne
inc
mov
ds
push
movsb
xor
push
shll
insb
lahf
xor
sbb
mov
pop
add
cli
orl
xor
cmp
xorl
push
xor
pop
xor
in
rolb
lods
int
data16
mov
cmp
sub
popfw
cmp
lea
jl
ds
add
pusha
push
mov
outsl
stos
jb
push
mov
ror
repnz
sbb
testb
push
mov
test
bound
push
cwtl
rcrl
xchg
cmp
ficomps
adc
shll
popf
sbb
xchg
push
loopne
xchg
push
adc
orl
and
or
inc
ret
sti
sbb
pop
xlat
mov
push
lock
lock
mov
fldcw
xor
cmp
sub
mov
xor
bound
add
add
dec
jnp
out
adc
mov
sub
stc
dec
pop
fimuls
xor
sub
lahf
pop
jle
cli
lret
jg
sbb
xchg
mov
jmp
mov
adc
lahf
xlat
and
cmpsl
aas
nop
xchg
add
adc
mov
xchg
cs
cmp
or
add
sbb
pushf
fisttpll
cmp
stos
add
mov
pop
lea
shrb
notl
xlat
push
pop
xchg
mov
add
ljmp
idiv
mov
fdivrp
inc
xchg
xor
aad
xlat
imul
leave
jg
xor
or
pop
cmc
leave
sub
xchg
pop
inc
sar
js
dec
fldcw
sbbl
cmp
cmp
test
pop
jmp
and
and
jecxz
cmc
loopne
sub
push
inc
and
adc
int3
in
sub
lcall
ljmp
sub
fbstp
pushf
mov
mov
mov
or
push
cwtl
fs
and
sbb
mov
pop
fnsave
js
scas
push
adc
in
test
sbb
lods
hlt
repz
jo
sub
loop
inc
negb
ror
jl
in
out
mov
cmp
popa
inc
jnp
add
or
adc
in
fst
adc
aaa
mov
insb
pushf
and
movl
jmp
mov
inc
mov
mov
mov
addl
sub
notl
mov
movl
sbb
add
mov
not
orl
orl
cmpl
movl
mov
jmp
mov
jg
pushl
pushl
call
sbb
sbb
sub
or
orl
lea
adc
mov
or
mov
and
mov
xorl
mov
adc
add
mov
dec
mov
mov
adc
jmp
mov
xor
js
jbe
mov
add
jne
sub
loop
mov
pushf
lods
shl
shll
inc
push
push
xor
int3
lret
insb
pop
and
dec
dec
mov
cmp
adc
pusha
je
mov
pop
and
loop
mov
dec
mov
xlat
sub
or
data16
popa
mov
mov
mov
rorl
sahf
mov
jbe
popa
faddl
dec
mov
ljmp
mov
in
inc
mov
push
cltd
xchg
xchg
xor
fidivs
jge
mov
dec
cmp
sub
pop
sahf
test
adc
xor
push
xchg
hlt
add
into
cwtl
sar
inc
push
xchg
int3
stos
movsl
outsb
xor
mov
lods
and
in
fidivrl
pop
into
fcoml
push
mov
cmp
clc
ret
xchg
cmc
and
xchg
or
mov
sarl
in
mov
std
movsl
xchg
shlb
pop
cmove
gs
sbb
nop
mov
pop
inc
push
clc
mov
cmp
inc
aaa
aas
jge
push
subb
decb
idivl
and
leave
xchg
dec
stos
pop
in
bound
mov
testl
sbb
loop
ret
test
lock
popf
ficoms
test
in
cmp
push
push
repz
ss
adc
fdivl
inc
push
les
psllw
fstpt
fldl2e
rclb
fwait
data16
repz
add
add
out
dec
insb
cmp
mov
loopne
enter
sbb
xor
test
fcomps
inc
mov
fistl
fisubs
fisubrs
shr
dec
jl
dec
mov
lret
and
insb
jno
cmpl
push
push
mov
mov
test
imul
gs
mov
popa
js
jecxz
shrb
mov
pop
gs
out
into
fcoms
mov
iret
fbld
movsl
lea
jb
inc
mov
icebp
enter
or
ja
ljmp
jnp
pop
scas
dec
insl
out
cmp
mov
rclb
and
mov
stc
daa
and
jecxz,pt
in
roll
xchg
arpl
jno
adc
outsb
shlb
mov
pushf
mov
and
lcall
jnp
sub
xchg
in
cmp
pop
adc
out
dec
insl
fdivl
push
aas
into
mov
pop
jmp
scas
test
cld
mov
ss
xor
xorl
icebp
adc
popf
push
jae
pop
adc
or
cmp
mov
sbb
ljmp
sub
cpuid
divl
pop
xchg
pop
mov
xchg
enter
add
push
mov
lret
outsb
pop
or
sbbb
add
pushf
ljmp
sub
adc
ljmp
outsl
sub
dec
add
lods
shl
inc
cs
stos
xlat
inc
inc
add
xor
jg
adc
pop
adc
repnz
sbb
ret
push
insl
insl
and
cld
fdivrl
sub
cltd
jnp
cmovge
sbb
jl
cmp
stc
mov
mov
rorl
pop
leave
das
aad
xor
jp
fistl
adc
xchg
sub
leave
push
mov
pop
xor
aam
ds
inc
cmpsb
push
ss
push
pop
test
xchg
mov
lcall
push
inc
out
and
add
dec
cmp
jecxz
daa
jmp
inc
sbb
mov
pop
cs
imul
lcall
pop
sarb
iret
or
into
mov
dec
xchg
add
xlat
jo
push
xor
popa
xchg
repz
mov
mov
dec
mov
orl
es
mov
lahf
fldenv
push
cmc
xlat
cs
dec
out
gs
fldenv
mov
in
push
loopne
or
repnz
push
and
xchg
cmpl
stos
aam
scas
add
lds
les
or
rclb
fisubrs
stos
inc
sbb
and
mov
cld
ss
push
subb
push
test
adc
std
leave
mov
nop
lcall
data16
scas
adc
sbb
insl
call
jnp
js
pop
xchg
and
jb
sahf
imul
scas
lcall
rcll
dec
loopne
inc
add
pop
cwtl
push
jno
stos
sbb
lret
inc
sub
aas
pop
or
addr16
xor
jb
jno
das
insb
insb
aas
fistpl
jno
adc
push
xor
loop
mov
mov
popa
fistpl
test
ds
inc
inc
pop
rcl
dec
scas
cltd
pop
test
outsb
pop
out
sarl
dec
sbb
out
push
lret
shrb
aam
fidivrl
mov
ret
dec
popf
push
js
mov
and
mov
aad
es
xchg
sub
xchg
cmc
cmp
or
pushf
jns
sub
push
pop
sbb
and
push
inc
shl
xor
inc
cld
xor
ljmp
cmp
fiadds
xchg
pop
andl
fdiv
push
xchg
insb
pop
idivb
xchg
fstpl
rorb
clc
insb
cli
or
sub
mov
xchg
ljmp
aas
popf
xor
rcr
dec
or
loop
insb
jl
mov
dec
out
shrl
fnop
in
mov
xchg
sar
scas
jmp
jne
dec
push
push
imul
in
mov
dec
push
jae
xor
sarl
mov
sarw
ret
mov
mov
arpl
sbb
adc
and
lahf
lret
arpl
pop
cld
bound
add
les
int
int
out
sub
hlt
mov
dec
repnz
or
xor
loop
mov
sub
dec
ficompl
and
insl
xor
xchg
outsl
or
xchg
fadd
jb
xor
jg
and
or
movsb
sub
imul
loopne
mov
cmpsl
nop
decl
cmpsb
jno
dec
adc
and
mov
dec
outsl
sbb
ss
sbb
dec
push
pop
loope
pop
xchg
test
popf
xlat
insb
xor
negb
in
pop
test
sbb
mov
mov
push
jle
and
out
aas
shll
push
mov
mov
pop
in
jle
and
and
pop
bswap
mov
sbb
ljmp
and
das
rcrb
push
jnp
out
jmp
pop
sub
adc
pop
push
mov
jp
sbb
xchg
inc
pop
xchg
and
sbb
decl
add
pop
jnp
test
xchg
or
icebp
aam
and
push
and
in
add
movsl
pushf
push
fs
leave
insl
iret
pop
je
jge
sti
aas
mov
ret
push
sbb
xchg
test
loope
icebp
mov
mov
cmp
orb
loope
lahf
push
nop
cmp
sub
and
nop
jg
les
lock
addr16
xchg
xor
jp
sub
int3
mull
mov
shrd
adc
shr
mov
jmp
mov
lock
popf
mov
out
inc
and
ja
sub
mov
adc
jne
sub
fsub
pop
push
cmc
orb
fmuls
and
lahf
test
or
cmc
xor
dec
sub
push
out
sub
popa
jbe
test
pop
pop
loopne
jl
xor
adc
daa
cwtl
mov
pushf
in
hlt
inc
sbb
ds
ss
aam
aas
cmpsb
mov
sub
cltd
dec
pop
popa
pusha
in
xchg
sbb
xchg
mov
shl
mov
mov
pushf
popa
dec
pop
cmp
pusha
mov
sub
setns
push
pushf
js
fs
xchg
inc
test
xchg
cmpsl
pushf
pop
push
es
and
or
push
iret
stc
or
out
aad
int3
imul
fsts
push
shll
data16
fcmovb
mov
dec
push
pop
inc
in
std
and
cld
or
or
dec
movsb
jge
pushf
iret
out
xchg
stos
lock
shll
inc
test
cmpsl
test
sbb
push
popa
stos
loope
sti
push
inc
mov
ds
cmp
mov
jl
push
lcall
cmpsb
repz
and
out
add
mov
cli
mov
leave
enter
and
add
adc
pop
adc
rcrl
add
out
aaa
imul
xor
jnp
cbtw
loop
cmp
loopne,pt
mov
test
das
ds
xor
cli
pop
mov
imul
mov
ss
popf
pop
inc
mov
cmpsb
cmpsl
pop
lea
cwtl
data16
outsl
shrd
cmp
jnp
or
pop
rol
fisubrl
les
cmp
mov
sub
push
push
int
js
lods
mov
mov
add
ss
cmp
pop
sub
popf
fcoml
cmp
hlt
add
adc
inc
int
ja
leavew
inc
pop
push
or
jno
adc
sbb
push
ffree
sub
cmpsl
inc
push
xchg
ret
and
fstl
xchg
out
stos
add
cltd
test
cltd
ljmp
jl
xor
fisubrs
arpl
ja
test
add
jb
out
push
aas
call
cli
clc
xchg
jbe
lret
push
push
mov
cmp
push
arpl
pop
nop
outsl
jae
inc
mov
scas
or
imul
mov
add
cmpsl
mov
movb
pop
add
ficoml
addr16
mov
lcall
pop
pop
push
imul
clc
sub
cmp
adcb
jmp
sar
or
or
cmpb
mov
test
push
call
mov
je
movsb
cmp
sbb
scas
mov
stos
cmp
inc
ds
test
jmp
jmp
lret
aad
xchg
pushf
jo
and
pop
flds
rcrb
xlat
push
mov
add
jge
mov
adc
mov
rol
aam
jl
mov
inc
lahf
sbb
aam
mov
xor
ffree
mov
cmp
call
jge
test
xor
push
in
jbe
dec
or
repnz
fldt
cmp
aaa
inc
imul
push
push
sbb
xchg
mov
stos
push
rcrl
adc
les
sbb
bound
enter
cmp
xor
mov
loop
test
add
sets
cs
into
push
sbb
cmpsb
in
insl
ret
shl
mov
dec
mov
std
pop
or
stc
ficompl
fsubrs
bnd
sarb
inc
or
sub
stos
xchg
fwait
iret
add
cmpsl
pop
ljmp
pop
loop
dec
and
imull
or
test
dec
loopne
jne
xchg
aam
push
xchg
lods
xor
icebp
cmc
lds
scas
bound
xchg
in
xchg
inc
mov
mov
xor
js
insb
cwtl
mov
xchg
in
jecxz
cmpb
or
out
pop
in
mov
sub
stos
cmpsl
loop
bound
jno
xchg
inc
mov
lea
xchg
add
jmp
cwtl
pop
adc
fcomp
jl
clc
jmp
dec
sbb
pop
or
sti
jecxz
out
inc
shlb
or
fwait
rcrl
inc
xor
movsl
mov
repz
mov
ret
imulb
icebp
xchg
imul
mov
sub
adc
mov
dec
test
push
jne
aaa
aad
or
dec
lret
andl
pop
pop
xlat
loopne
out
aam
push
std
xor
daa
pop
in
daa
in
iret
out
out
repnz
mov
inc
fnsave
stc
aam
mov
scas
insl
stos
mov
adc
pop
pop
jb
sub
and
outsl
cmp
pop
mov
and
lret
loope
dec
pop
pop
inc
mov
in
xchg
sub
stc
or
clc
jg
inc
push
daa
ja
adc
arpl
js
mov
and
lods
pushf
push
xchg
dec
xor
cltd
mov
andl
shll
loopne
xorb
push
jnp
push
mov
push
mov
or
xchg
loop
jo
pop
xor
fisubrs
movsb
out
aad
sub
jecxz
mov
cmp
inc
jae
or
mov
sarl
faddl
dec
in
sbb
or
mov
dec
into
in
adc
mov
mov
adc
mov
and
jbe
scas
add
dec
rcr
pop
outsl
sahf
lods
in
std
push
das
add
add
je
push
ret
lcall
xor
or
mov
xchg
xor
bound
dec
out
and
sub
nop
jg
orb
leave
mov
shrl
aas
cmp
mov
aaa
clc
arpl
push
sti
inc
test
cmp
mov
jno
rcll
bound
lret
cmp
loopne
push
fisubrl
incb
aam
in
cmp
xchg
sbb
sbb
je
sbb
loopne,pt
sbb
dec
jl
push
push
jb
sub
ret
sub
fistpll
jle
out
push
dec
mov
out
jmp
cwtl
mov
outsl
mov
jbe
rorl
mov
jno
hlt
adc
add
xchg
dec
lret
cmp
jb
jp
push
mov
test
xchg
into
mov
test
cmp
loope
rcl
stos
scas
xchg
fsubr
flds
mov
or
jb
fdivrl
cmp
jle
or
hlt
dec
jle
pop
xchg
test
das
mov
push
adc
mov
sti
push
test
inc
jno
and
mov
dec
mov
sbb
fmul
repnz
mov
mov
andl
xor
adcl
xor
or
cmpl
movl
movl
movl
jmp
movl
not
jg
pushl
push
push
push
pushl
push
pushl
call
sub
xorl
andl
andl
addl
addl
adcl
movzbl
adc
jmp
sti
loopne
stos
dec
or
xor
inc
outsl
dec
mov
xchg
shll
mov
mov
xchg
imul
arpl
fmull
imul
addr16
cwtl
shrl
pop
sbb
mov
pop
dec
xor
in
aas
sbb
ret
call
sbb
sub
sahf
leave
jl
xorl
ss
pop
lea
lea
mov
ljmp
cmp
shrb
mov
aam
mov
out
or
push
test
xor
cld
adc
mov
xor
mov
hlt
daa
push
test
pop
xchg
stos
push
movsb
sub
enter
cld
jb
pusha
sub
adc
cmp
js
push
nop
or
shll
insl
push
dec
pop
xor
rol
jne
movsb
shrl
mov
sti
xchg
jno
lret
sbb
push
sub
sbb
mov
aaa
add
cmp
stos
dec
and
inc
in
fistpl
mov
sarb
inc
lahf
sbb
xchg
cmpsl
cld
inc
popf
jmp
out
fsubp
filds
fcoms
mov
cmp
jae
add
ret
pop
mov
ljmp
pop
test
test
popf
add
ret
or
les
pop
sbb
add
out
cmc
mov
aas
mov
xor
aam
icebp
js
xorb
push
bound
or
sbb
into
or
repz
inc
xor
ret
movsl
repnz
mov
push
nop
mov
xor
mov
test
in
lock
add
adc
push
loop
mov
cmp
lds
loop
jns
testl
hlt
nop
dec
pmaddwd
and
and
push
add
js
shlb
test
cmp
jecxz
lods
mov
fdivp
outsl
mov
stos
dec
mov
mov
inc
pop
push
push
call
push
out
imul
xchg
repz
adc
enter
dec
out
push
orl
sub
sbb
mov
mull
lea
adc
xchg
cmp
enter
cmp
push
mov
aas
xor
pop
mov
mov
jo
scas
imul
scas
mov
mov
dec
mov
jg
mov
movsl
pop
adc
jns
out
fsubl
arpl
mov
stos
mov
pop
out
push
lods
mov
rclb
and
push
pop
sbb
or
pop
dec
xchg
pop
aad
pop
hlt
cmpsb
mov
cwtl
add
adcl
xchg
shll
sbb
repnz
hlt
pop
mov
sbbb
movsb
vpcmpgtd
call
dec
push
ljmp
mov
sbbb
and
fcoml
mov
or
aaa
test
in
jns
fwait
pop
cmp
push
ret
loop,pt
in
lock
lahf
cmp
call
fsubs
xchg
push
movsb
lods
cmpsl
pop
js
imulb
mov
xor
mov
inc
jnp
and
adc
xchg
dec
sub
or
push
jle
ljmp
dec
imul
jne
jmp
sbb
mov
inc
ret
subb
jae
sbb
imulb
sbb
movsl
cmpb
pop
mov
cwtl
or
inc
xchg
leave
sub
cmp
mov
sub
outsl
inc
mov
ss
mov
push
jb
test
xchg
lock
sub
or
inc
xor
lds
mov
mov
out
hlt
call
ja
sbb
pop
arpl
scas
cmp
push
cmpsb
out
mov
cwtl
pop
mov
jp
inc
dec
jne
in
fcmovbe
addb
hlt
jmp
cmp
or
sbb
leave
push
outsb
or
ret
push
mov
push
inc
aam
xor
rcrl
movsb
xchg
dec
mov
cmp
cmp
lods
fildl
aaa
jle
jo
pop
xchg
mov
mov
scas
add
aad
stos
adc
jno
pop
jbe
xchg
or
pop
add
in
in
ljmp
xchg
fs
xchg
sbbl
push
jle
ja
mov
adc
ss
add
imul
or
push
cli
arpl
sbb
out
cmp
and
sbb
fbstp
add
cwtl
sub
cwtl
shrl
pop
add
pop
sbb
jecxz
xchg
jmp
fidivl
push
dec
popa
pop
fld
inc
repnz
adc
sbb
mov
loopne
lods
outsl
lahf
repz
inc
out
pop
jnp
inc
imul
push
cmp
inc
lcall
popf
scas
sbb
ret
jbe
cmpsl
push
pop
out
mov
and
loope
push
ret
lods
jae
mov
add
call
push
jle
dec
leave
imul
insb
cltd
jg
out
inc
jg
int
aad
notb
jecxz
mov
xor
mov
pop
clc
or
sbb
mov
pop
in
cmpsb
push
push
out
jl
push
ljmp
add
dec
call
mov
out
add
pop
int3
loopne
sub
jp
push
clc
dec
hlt
data16
fildl
dec
mov
sub
mov
les
icebp
and
pop
fs
stc
nop
mov
xchg
jg
in
fdivs
add
fwait
cmp
inc
add
popa
push
sbb
je
jle
sahf
repnz
fstp
pushf
cli
mov
mov
clc
cmp
mov
mov
loop
sub
test
pop
cld
fimuls
add
pop
mov
fcoml
adc
inc
dec
pusha
mov
mov
jp
xchg
mov
or
aas
outsb
add
daa
insb
mov
insb
jns
pop
and
pop
xchg
inc
movsl
jmp
lods
fadd
mov
and
nop
jmp
mov
sub
loop
call
xor
fidivrs
ds
out
add
xchg
jnp
dec
mov
xchg
add
mov
lahf
dec
gs
inc
scas
mov
xor
insl
sbb
not
je
arpl
pop
xor
sbb
mov
loope
nop
inc
sbb
roll
adcl
mov
sub
sbb
jecxz
lret
add
fsub
jecxz
pop
jle
stc
mov
daa
dec
sub
lds
pop
mov
ret
popf
jo
adc
inc
mov
sahf
sub
or
push
aad
in
pop
nop
cmpsl
push
pop
xchg
mov
les
or
mov
mov
adc
mov
xchg
int3
xchg
lock
mov
mov
loop
inc
jle
lahf
out
pushf
push
scas
repz
mov
insb
lods
das
mov
jno
leave
movsl
and
mov
int3
jae
xchg
cs
clc
das
popf
adc
xchg
xor
cmp
rcrb
mov
imul
lahf
test
stos
stos
daa
or
sbb
sub
mov
inc
add
inc
nop
push
sub
add
inc
xchg
outsl
inc
add
sub
movl
movl
and
movl
movl
movl
xor
or
adc
movl
cmpl
movl
mov
jmp
not
jl
push
pushl
pushl
push
call
add
sbbl
add
sbbl
xorl
sbbl
notl
or
movl
addl
movl
movl
movl
mov
or
mov
movl
dec
movl
movl
cmpl
movl
movl
movl
movl
jmp
mov
jge
push
call
movl
orl
orl
add
xorl
xorl
xorl
and
movl
cmpl
movl
mov
jmp
mov
mov
jb
push
pushl
push
push
pushl
push
pushl
push
push
pushl
pushl
call
orl
sbbl
adc
addl
movl
sbbl
movl
add
movl
jmp
and
jnp
sub
mov
sub
ja
pop
mov
out
mov
negb
aad
inc
xchg
xor
out
cmc
cmp
dec
das
sub
lcall
push
lock
mov
fnstenv
cmpsb
adc
fiaddl
ret
mov
dec
lret
push
sub
les
or
mov
dec
fdiv
stos
push
adc
mov
insb
add
jp
stc
andb
lcall
add
iret
nop
int3
xchg
push
xchg
add
push
cmp
xchg
lret
enter
movsl
int
dec
clc
jle
add
int
mov
scas
lret
lea
movsl
mov
hlt
lret
stos
push
stos
sub
add
xlat
shld
xchg
hlt
fnstenv
jbe
mulb
je
mov
enter
mov
in
outsb
push
cmp
sbb
lock
gs
push
push
outsl
out
testl
popf
xchg
mov
sub
int3
mov
add
lds
shl
sbb
in
pop
pop
int3
cmp
dec
mov
sub
dec
dec
or
add
xchg
push
js
cmpsw
stos
mov
dec
jg
push
ror
inc
in
pop
sahf
dec
sbb
or
and
push
jecxz
or
fistps
ja
out
in
jmp
jns
xchg
lock
cwtl
nop
stos
jp
push
es
out
in
add
into
dec
cmp
cltd
jp
cmp
add
mov
rol
mov
in
xlat
inc
sub
jle
cmp
js
dec
pop
xor
cmp
cld
push
in
xor
mov
arpl
out
leave
pop
jno
adc
sbb
push
push
dec
xor
in
pop
xor
addr16
dec
pop
out
dec
pop
or
mov
out
mov
sbb
cmp
dec
mov
sub
stc
lret
js
gs
push
nop
push
insb
pop
fucomip
jg
xchg
arpl
mov
xchg
xchg
push
jb
jle
cmp
jne
int
sub
ss
pushl
stc
dec
pop
ss
jmp
into
cwtl
aas
shrb
sbb
int3
or
pushf
and
push
xlat
and
and
je
pop
sar
jle
les
xchg
dec
and
mov
sti
test
pop
inc
pushf
mov
ret
inc
xor
adc
or
scas
cmp
addl
xor
aaa
movsb
pop
push
fcomps
mov
pop
or
pop
dec
mov
sahf
cmp
xchg
je
xor
daa
popa
inc
insl
shlb
sbb
or
ja
mov
aaa
push
xorb
seta
loop
dec
jle
pop
sbb
sbbb
mulps
cmp
mov
or
inc
or
cs
dec
mov
adc
movsl
xchg
adcb
outsl
je
jl
adc
and
dec
in
loope
mov
mov
cld
enter
scas
in
push
lcall
jae
dec
cltd
xor
scas
ja
and
sub
mov
mov
fisubs
jge
cmpsl
ret
mov
or
xchg
call
cs
cmp
jo
mov
add
sub
jns
shlb
test
and
and
sarb
inc
cmpsl
jbe
jecxz
ljmp
inc
or
outsb
stos
outsl
sbb
mov
lcall
add
xlat
xor
jge
jne
les
out
cmpl
pop
sbb
cmp
loop
lret
filds
stos
pop
xor
or
ja
rcll
adc
ds
sub
pop
push
push
xor
loopne
stos
push
lock
fwait
push
icebp
push
ret
mov
popf
fsubs
mov
sub
pusha
mov
xor
xor
pop
cmp
cltd
in
and
dec
pop
lahf
xor
push
mov
push
jbe
or
pushf
cmpsl
in
in
xchg
jae
movsb
jmp
pop
jecxz
addr16
cli
xchg
mov
dec
das
enter
daa
js
push
add
xchg
add
push
xor
pop
arpl
rcr
sub
inc
add
fsubr
ds
fcomps
loop
xchg
pop
dec
pop
sbb
jb
adc
pushf
int
imul
ljmp
push
xor
jo
fcomp
adc
lcall
or
lea
and
sbbb
mov
je
jae
dec
and
push
and
sub
js
fistl
cs
in
stc
stc
bound
sbbb
loopne
cmp
xor
pop
aaa
mulb
aad
push
aam
call
les
push
push
stc
in
cmc
push
and
mov
cmpb
dec
je
pop
cli
mov
cmpsl
fwait
cltd
lock
sbb
sub
xor
mov
pushf
stc
cmp
mov
cmp
lods
fsubr
call
mov
das
popf
imul
push
sub
nop
cmc
inc
adc
sbb
out
xchg
xchg
and
xchg
rclb
es
add
pop
int3
push
sti
popa
arpl
shll
imul
push
lods
push
mov
cmpsl
mov
and
insl
cmc
loop
sarl
cwtl
sub
inc
lret
shll
dec
std
mov
sub
sbb
xorb
cltd
push
out
lret
jns
jns
cmpsb
jbe
dec
mov
subps
test
testl
into
push
inc
ret
xchg
fsubrl
aas
and
js
pop
sbb
ds
fstl
or
call
les
mov
cmp
mov
test
leave
xchg
imul
add
cmpsb
jnp
cmc
cwtl
jge
ret
int
dec
aas
pop
pop
fstl
adc
mov
and
ljmp
add
and
push
outsb
js
ficoms
fwait
test
dec
xor
cltd
xchg
mov
sub
xor
mov
out
nop
lret
jge
push
lret
push
ljmp
jmp
cmc
adc
and
jb
ficoml
je
fisubl
pop
insl
popf
ja
sub
insb
xchg
sub
pop
mov
xchg
add
lods
inc
sti
push
rorl
inc
mov
mov
sub
roll
pop
jbe
jno
stos
dec
cmp
sbb
mov
lock
into
mov
push
jecxz
stc
pop
int3
jl
cmp
ja
data16
jmp
mov
push
lret
int3
sbb
in
jnp
inc
sbb
in
push
int
xchg
hlt
jp
cmpsl
dec
jmp
pop
clc
cmc
icebp
cmp
loope
push
cltd
xor
xchg
sbb
outsl
out
jl
aam
repnz
flds
cmp
int
mov
sar
adc
mov
lock
sbb
inc
jns
sbb
out
fsubr
pusha
ret
fmul
int3
iret
cmp
or
pop
push
add
inc
movl
xorl
movl
mov
xor
movl
not
movl
mov
addl
jmp
in
outsl
dec
gs
notb
inc
test
cmpsl
les
ja
aas
inc
push
jmp
lock
xchg
mov
pop
mov
repz
push
push
mov
setl
mov
lcall
pop
dec
mov
jp
movsl
inc
outsl
int
mov
call
in
arpl
mov
pusha
outsl
cmp
iret
xor
jmp
jnp
lods
fcmovu
xorb
lret
cmp
loopne
nop
aaa
cmp
push
jmp
lock
int
fwait
idivb
test
test
fists
push
pop
cmpsl
jle
cwtl
popf
pop
or
inc
xchg
popa
sti
stos
ss
fbstp
repnz
xchg
icebp
and
add
inc
je
cld
add
lret
sub
rclb
mov
push
pop
mov
fiaddl
dec
in
xchg
inc
mov
dec
or
ror
test
dec
mov
mov
rcll
xor
cmp
sub
jo
ljmp
pop
mov
call
sti
sub
test
push
repz
mov
cmp
fs
fwait
xchg
in
sbb
cmpsl
jns
es
and
lock
cld
or
jge
mov
adc
jmp
psubq
rorb
push
xchg
sbb
es
fisubrl
pop
jnp
jb
loop,pt
push
mov
int
push
cmpsl
pop
cld
pop
push
cmp
push
sub
and
xchg
adc
negl
icebp
cltd
xchg
adc
js
xor
pusha
das
pop
loop
push
cmp
push
fmull
mov
loopne
cmpsl
and
lds
jne
popa
mov
jp
aad
std
dec
gs
push
sub
lahf
xchg
mov
outsb
dec
loop
in
add
add
imulb
adc
in
popf
jns
xchg
jns
add
cmpsb
fcomps
sbb
push
push
mov
lret
lret
out
xchg
ret
out
dec
push
dec
pop
sub
mov
or
addr16
aaa
pop
add
or
inc
jp
fidivrs
mov
mov
js
data16
mov
mov
pop
xor
mov
adc
pop
ljmp
inc
cmc
dec
jle
add
cmp
cmc
jmp
sub
add
mov
loopne
daa
scas
add
xor
pop
push
add
cltd
ds
or
push
leave
sub
mov
xor
xchg
test
cmp
push
cmpl
ret
pop
sub
out
cmpsl
fsts
mov
mov
out
mov
inc
daa
pusha
adc
pop
pop
mov
mov
pop
cmp
insl
pop
or
aaa
inc
fildll
ja
mov
xchg
leave
mov
jo
adc
outsl
pop
fs
mov
imul
cld
in
pextrw
cmpsb
xchg
call
bound
adc
inc
and
test
push
sbb
ret
push
aaa
es
pop
jmp
jecxz
jge
mov
in
movsl
cwtl
cs
push
or
push
add
pop
testl
add
repnz
ret
fwait
sub
imul
mov
dec
aam
sub
scas
push
fs
cmpsl
test
mov
xchg
dec
mov
xor
out
mov
jle
lahf
cmp
inc
inc
cwtl
push
xor
cmp
cmpsb
jecxz
inc
mov
dec
inc
sbb
pushf
cmp
xor
enter
sub
jo
movsl
or
and
add
jp
in
pusha
cmp
mov
mov
xor
push
jmp
xor
int
dec
testb
imul
inc
xchg
test
mov
mov
imul
cmp
dec
call
adc
lock
push
jl
cmp
or
jmp
xor
nop
popa
ljmp
xchg
pop
cmp
pop
fmuls
jnp
mov
push
and
jne
and
test
sub
stos
or
cmpsb
cli
stos
mov
mov
xchg
xorl
lds
and
mov
int
sahf
sbb
xor
inc
pop
adc
adc
fxtract
daa
lea
rorb
outsl
add
xor
cmpb
test
push
aaa
sbb
adc
or
mov
and
cmpsb
xor
mov
pop
pop
xlat
mov
mov
jmp
mov
sub
inc
cmp
mov
ds
or
jbe
jl
arpl
pop
stos
mov
daa
popa
inc
insb
dec
mov
sub
cs
adc
imul
orl
mov
cld
test
push
sbb
cmp
mov
clc
inc
int3
fsqrt
testb
push
cmp
mov
jecxz
jmp
imul
cmp
push
mov
lds
insl
dec
das
add
add
lds
pop
sbb
test
jecxz
mov
push
sbbb
sbb
xor
pusha
dec
popf
push
jns
int
or
lahf
and
jmp
inc
cmpsb
pop
aas
cmp
mov
sbb
cwtl
bound
repnz
scas
xchg
and
sbb
adc
out
cmp
cmp
cmp
jae
push
jl
dec
bound
clc
test
dec
adc
lea
lea
mov
push
je
pop
add
in
inc
cld
es
mov
ret
fstps
mov
sub
call
pop
push
divb
test
jnp
jbe
xor
push
pop
dec
and
cmp
cli
je
sub
sub
out
fidivl
sbb
into
cmp
pop
mov
jmp
addr16
pop
mov
pusha
mov
lret
popf
push
or
mov
cmp
aam
in
sti
and
xchg
stos
jno
dec
dec
add
loopne
push
push
out
gs
in
incb
inc
divl
mov
pop
xchg
fs
xchg
ja
jmp
icebp
shlb
pop
ja
aas
out
lret
loop
mov
fistpl
cltd
hlt
test
and
cmp
xchg
ss
xor
push
jbe
jo
stos
test
aas
repnz
test
and
inc
inc
ss
repnz
insl
pop
aas
mov
mov
cmp
das
pushl
cwtl
cmp
push
daa
xchg
inc
cwtl
lcall
leave
jnp
sbb
mov
stos
pop
call
mov
jnp
int3
pop
int
daa
mov
inc
in
pop
sbb
insb
movb
pop
ja
jae
scas
add
sub
test
sbb
ret
negb
pop
pop
jo
cs
sbb
jecxz
je
push
xor
mov
data16
xchg
lds
or
aad
sahf
fstl
sbb
fsubs
std
push
xchg
movsb
je
pop
ret
test
pushl
xor
lods
mov
loop
into
cmpsl
mov
inc
mov
and
push
test
jns
push
shl
mov
orl
push
adcl
push
andl
push
push
adcl
call
adc
mov
subl
mov
xor
mov
sub
mov
movl
jmp
mov
daa
xchg
gs
or
mov
mov
ja
sarl
sti
loopne
mov
in
loope
insl
movsb
fwait
test
mov
gs
andb
push
sub
ja
adc
insl
pusha
sahf
mov
repnz
inc
push
out
pop
sti
and
cmp
sbbb
outsl
test
mov
out
shlb
cmpsl
into
jne,pt
inc
ja
push
adc
rcrb
push
dec
or
sbb
rorl
decl
and
pop
addb
int3
xchg
push
es
popa
mov
sbb
mov
rolb
cmp
push
nop
pop
mov
pop
mov
icebp
scas
adc
into
add
sbb
pushf
inc
es
stos
mov
push
jne
xchg
xchg
push
mov
int3
mov
shlb
push
test
lret
sub
sbb
jbe
jecxz
sbb
inc
push
stos
mov
gs
call
push
xchg
push
jns
adc
mov
leave
lret
xchg
xchg
lock
scas
test
cmp
sub
jl
cwtl
lock
add
repz
mov
mov
jg
js
fidivs
lahf
lahf
jecxz
test
xchg
aad
fcom
cmpb
or
pop
inc
in
inc
mov
fistl
xchg
push
sbbb
xor
mov
std
scas
es
sbb
pop
outsb
pop
test
inc
arpl
loope
sahf
push
mov
mov
add
mov
int
aam
adc
xchg
adc
pushf
das
popf
pusha
xor
addr16
mov
int
or
fs
mov
sahf
outsb
js
std
sarb
aaa
sahf
or
push
stos
inc
fdivl
dec
jp
push
dec
cmp
sub
popf
imul
rclb
out
jns
pop
outsl
jae
paddw
and
xchg
inc
cmc
sbb
out
sar
mov
xor
bound
mov
mov
pop
push
imulb
or
sub
into
je
adc
or
bnd
test
lods
and
mov
ja
cmp
push
cmp
in
jne
sti
sarb
push
sub
test
cmc
xor
shr
shl
xchg
stos
dec
leave
mov
inc
add
sbbl
and
mov
js
xor
xor
cmpsb
loope
or
stos
jae
jge
cmpsl
fistps
repnz
outsb
sub
xchg
jle
fwait
mov
mov
xlat
add
jge
sub
jecxz
mov
jae
cltd
fisttps
sbb
dec
xchg
fcmovnb
iret
push
xchg
mov
cmp
or
sub
jnp
cs
stos
int
sub
pop
and
dec
cmc
cs
cmp
stos
jecxz
push
cmp
add
jge
mov
fbstp
inc
sub
cmp
jmp
lahf
mov
and
sub
push
mov
and
xchg
cld
insb
inc
push
es
xchg
insw
jbe
xchg
movsl
add
pop
out
ljmp
mov
sahf
repz
sub
mov
imul
in
cmp
fiaddl
lret
xchg
mov
mov
addl
std
dec
je
in
test
inc
jg
dec
out
out
mov
fidivl
dec
jns
loope
enter
lea
in
call
sub
das
aaa
adc
stc
int3
ds
outsl
push
and
xchg
mov
outsb
pop
cmp
dec
mov
jmp
inc
movb
push
mov
fwait
imul
adc
and
sub
lahf
push
sub
mov
jae
in
fsubrs
xchg
aad
gs
and
cs
sbb
mov
jl
popa
xchg
lods
push
jae
pop
and
iret
mov
xor
bswap
and
xlat
push
xor
mov
sbb
cmp
movsl
dec
loope
shlb
aad
inc
repz
sub
nop
or
pusha
inc
mov
xchg
xchg
loope
das
add
xchg
sti
push
in
push
add
iret
int3
dec
push
cmpb
push
repnz
or
jno
mov
addb
mov
jae
arpl
fstpt
or
sahf
je
daa
ret
hlt
xor
rcrb
cmp
mov
push
repz
and
jge
lret
insl
mov
add
shlb
lea
add
sarb
sbb
and
jno
rcll
jnp
adc
add
and
jmp
push
imul
jle
cli
cmpb
inc
push
shlb
movsl
push
xchg
loopne
adc
mov
push
pop
nop
and
jmp
aam
test
mov
pop
cmp
jnp
sbb
fisttps
ljmp
mov
or
jb
lds
cmpl
gs
add
cmp
leave
xor
mov
daa
cmp
xor
cltd
mov
ja
lcall
push
pop
inc
sub
scas
xor
aas
scas
adc
mov
cld
in
repz
inc
inc
movsb
stos
lock
xchg
xchg
lods
sub
pop
test
ret
pop
sbb
imul
add
pop
inc
fisubrs
mov
in
test
mov
xchg
lds
xchg
inc
out
add
roll
jge
fldt
imul
loop
bound
mov
xchg
sbb
ficoms
xor
push
xchg
and
sbb
jb
xchg
sub
popa
xor
cmp
arpl
sub
ja
push
test
and
push
xchg
sbb
add
loop
mov
sbb
inc
cld
mov
mov
cmp
xchg
adc
iret
mov
ds
packssdw
mov
cmp
mov
or
sub
loopne
push
inc
ficoml
mov
push
in
fs
push
or
jl
or
outsb
repz
fmul
pop
fsubs
orl
dec
notl
mov
sarb
cmpsl
and
mov
adc
fwait
sub
call
nop
scas
xor
and
mov
pop
mov
test
stos
push
xor
push
stos
jns
ljmp
repnz
cmp
cmpsb
daa
sbb
lcall
aas
push
xor
cwtl
mov
lods
mov
push
rorl
sahf
fldl
mov
mov
clc
scas
pop
jg
pop
mov
loope
fst
add
inc
inc
add
fists
or
insb
add
and
stc
aad
movsl
int
fimull
adc
xchg
xchg
sub
pop
imul
hlt
jl
es
xchg
fsubl
mov
aas
clc
xor
or
in
movsb
push
sub
xchg
mov
mov
lret
adc
mov
inc
std
xchg
fcom
adc
add
incl
jne
mov
inc
movb
test
sub
mov
adcl
lea
mov
mov
or
subl
and
mov
or
adcl
xor
movl
cmp
movl
jne
mov
and
mov
shrd
adcl
shr
adc
mov
mov
orl
shl
xor
andl
jmp
sub
sub
sub
adc
xchg
es
xor
mov
add
ss
sub
xlat
jmp
gs
cs
je,pt
mov
mov
dec
cltd
mov
int3
xchg
sub
pop
and
gs
flds
mov
in
push
sub
mov
dec
mov
push
loop
sub
dec
mov
stos
call
pushf
mov
inc
cld
cli
adc
pop
xchg
sub
lock
sub
inc
es
sarl
rclb
rorl
mov
fstpl
in
mov
jns
sbb
cmp
jo
push
mov
bndldx
sbb
insb
ljmp
xlat
jge
cmc
dec
popf
push
xchg
and
movl
lret
shlb
xlat
cltd
xor
jbe
pop
pop
xor
mov
sub
mov
daa
sbb
mov
push
xchg
js
subl
out
repnz
xor
popf
nop
out
test
ljmp
sbb
mov
insl
shlb
mulps
pop
lret
cmp
and
stos
pop
inc
leave
out
in
push
loop
push
mov
out
push
adc
xor
jp
sbb
mov
hlt
ret
jge
jmp
es
xchg
pop
jl
or
and
pop
out
int3
mov
loop
add
in
mov
and
mov
xchg
cmc
mov
sbb
jmp
push
jg
pop
push
or
ret
push
sahf
lcall
outsl
mov
add
movsl
in
lcall
or
sbb
mov
loope
aam
pop
cli
mov
pusha
push
cmpsl
arpl
push
mov
jbe
in
popf
lcall
mov
out
daa
xorb
movsl
int
mov
push
aad
jmp
rcr
iret
add
leave
aad
mov
inc
cmp
or
fsincos
xor
sbb
out
inc
dec
lret
sarl
aad
jb
sbb
pusha
sub
xor
mov
cmpsl
sbb
fdivs
and
mov
clc
push
ja
loopne
dec
call
in
add
test
push
shll
or
add
test
and
inc
or
divb
lret
mov
xchg
aas
imul
push
enter
icebp
add
fs
inc
test
ss
aaa
movzbl
lahf
fisubl
daa
dec
ficoms
pop
cmpsb
mov
cmpsl
add
push
dec
adcb
xor
dec
js
rcrl
imul
inc
out
insl
aam
jmp
shll
cltd
out
sti
sbb
xor
push
movsb
pop
fisttpl
stc
seta
sahf
jmp
movsb
push
xor
mov
popa
mov
add
cld
dec
and
pushf
dec
out
sub
cmp
cltd
mov
xor
xor
xchg
movsl
mov
icebp
outsl
jp
insb
dec
push
cmc
test
ja
jge
test
shlb
or
enter
das
push
push
adc
jae
push
xor
adc
sbb
dec
pushf
dec
imul
pop
push
popf
pop
push
pop
or
stc
fisttpll
stc
add
mov
lods
ljmp
test
clc
and
notb
cwtl
sbb
push
or
xchg
pop
bound
mov
push
lea
mov
and
or
inc
movsb
ret
sbb
cmp
jmp
sub
aam
pop
pusha
test
div
rorb
insl
jo
push
mov
add
pop
fsin
clc
or
jno
sbb
scas
xor
and
xor
jge
mov
xor
mov
dec
js
jge
subps
mov
repz
jo
cwtl
jae
mov
aam
addl
jp
pop
scas
sub
mov
leave
jmp
sub
in
insb
mov
lahf
adc
or
add
jmp
adc
fimull
in
adc
jnp
push
addr16
or
push
lock
add
fbld
adc
jo
jbe
cmp
ret
lcall
pop
fmull
inc
popa
addr16
test
xchg
cmp
dec
hlt
lea
adc
mov
pop
mov
xchg
push
sbb
xchg
testb
lods
xor
xchg
out
stos
fwait
popf
fwait
inc
cmp
mov
repnz
sbb
push
mov
adc
sbb
ror
std
pop
das
mov
outsl
lods
add
jne
pop
add
inc
stc
pop
lret
push
xchg
sub
add
push
fwait
push
sti
movsl
loopne
cwtl
incl
mov
push
into
sbb
push
push
sti
cmp
and
out
pop
mov
xchg
lcall
jmp
sbb
pusha
push
fidivs
push
pop
outsb
adc
jmp
scas
xor
and
mov
je
loop
xchg
mov
mov
popf
xor
pop
push
testl
mov
out
inc
jg
cli
js
xchg
popa
adcl
jmp
lcall
mov
add
push
cmp
push
mov
xchg
mov
adc
outsl
cmpsb
push
mov
xchg
jns
jb
sbbl
sbb
and
mov
jg
push
jb
or
pop
test
pusha
mov
in
mov
inc
dec
and
lret
jns
or
insb
popa
dec
movsb
mov
sbb
jbe
jb
je
data16
sbb
xchg
jne
dec
or
xor
dec
roll
data16
test
test
data16
xlat
xor
xorb
jne
scas
jmp
mov
sbb
xchg
inc
jge
jl
xchg
fmul
add
and
dec
mul
fs
aas
pop
mov
add
sbb
mov
shll
xor
adcl
bound
fisubs
popf
ljmp
ficoms
add
imul
mov
mov
andb
sahf
int3
aad
mov
clc
mov
or
jb
iret
dec
cld
fbstp
sarb
ljmp
out
ficompl
pop
sbb
push
dec
loopne
and
or
add
in
mov
xor
or
or
jl
fadds
jmp
in
nop
in
popf
adc
lods
mov
adc
jnp
lahf
and
push
sbb
dec
int
inc
stos
mov
sbb
push
in
xor
dec
mov
push
int3
fisttpll
jns
clc
into
adc
lods
pop
cmp
ret
and
pushf
add
mov
or
adc
fcomip
push
in
aad
mov
mov
fwait
pushf
xor
inc
sbb
stos
xor
inc
xlat
pop
add
pop
mov
aam
jg
pop
pop
xchg
push
xlat
pop
fbstp
fsubs
cmpsb
aas
inc
movsb
negl
scas
add
call
mov
jle
rorb
mov
movl
cmp
jne
notl
mov
mov
xor
cmpl
mov
movl
mov
jmp
mov
movl
jl
push
call
xor
or
movl
movzbl
xor
and
mov
xor
mov
xorl
mov
jmp
daa
mov
or
out
sbb
mov
ja
mov
arpl
fadds
rclb
ss
mov
daa
loope
xchg
cmc
into
int
into
xchg
and
dec
fwait
punpckhdq
js
shrl
sub
out
icebp
hlt
sti
ds
cmp
clc
lock
add
test
fs
xchg
add
pop
imul
jmp
fldenv
cmp
sti
imul
cld
rcrb
push
stos
jge
data16
jmp
gs
xchg
fucomip
ljmp
gs
inc
dec
adc
jb
das
sbbb
int3
leave
push
mov
xor
outsb
popf
xchg
aam
std
mov
lret
mov
es
mov
repnz
bound
xor
and
cmpsl
pusha
adc
dec
int
push
repnz
dec
sbb
mov
jae
ljmp
and
shrb
mov
fmuls
push
sub
mov
xor
push
les
movsb
ss
pop
pop
cmp
js
push
cmp
or
xlat
mov
mov
test
ret
std
daa
pushf
out
out
sub
xor
clc
pop
into
and
and
xor
push
movsb
pop
push
push
imul
dec
arpl
or
mov
xchg
leave
mov
enter
testb
sarb
sub
hlt
out
fsubrl
pushf
mov
xor
ljmp
in
sub
nop
jnp
or
ret
jmp
inc
out
outsb
cmpsb
jnp
mov
in
push
jecxz
and
pop
jg
cltd
and
pop
xchg
sbb
out
mov
pop
out
add
pushf
imul
pop
stos
or
pop
scas
lcall
pop
inc
es
int3
rclb
bound
mov
xchg
push
out
and
and
push
xor
mov
lods
xor
pop
sub
cwtl
lock
mov
outsl
sbb
or
lock
mov
pop
mov
or
dec
lret
mov
out
dec
stos
push
test
lcall
xchg
in
enter
pop
push
lods
outsl
xor
add
mov
cmp
dec
add
iret
or
mov
push
inc
cmp
sub
jle
movsb
mov
push
pop
fcomi
inc
dec
mov
in
loop
cmp
mov
sbb
ljmp
adc
add
gs
lcall
add
sbbb
int3
shlb
xchg
push
jge
cmp
and
push
scas
fsubl
and
lock
out
dec
pusha
sbb
fildll
jb
filds
out
out
outsl
aam
or
dec
dec
mov
cmp
inc
push
sbb
mov
xor
mov
out
xchg
stc
loop
es
fistpl
inc
fildll
out
testl
out
iret
inc
bndldx
nop
lcall
je
out
mov
fldl
dec
jns
xchg
sub
mov
dec
imul
pusha
mov
inc
push
cmp
movl
mov
pop
mov
mov
push
out
and
sti
repz
sub
imul
jno
cld
cmc
incb
add
popl
shlb
aad
xchg
add
bswap
cmc
ficomps
les
in
mov
xlat
sbb
xor
ret
and
ret
jecxz
push
xlat
dec
scas
mov
xchg
or
loopne
jecxz
push
xchg
mov
mov
xchg
mov
aas
cs
je
mov
xchg
xchg
adc
add
and
mov
add
sub
stc
jne
jb
dec
loope
insb
push
adc
fisubl
mov
jo
imul
gs
out
sbb
pop
ljmp
push
mov
lret
popf
dec
pushf
pop
in
mov
shlb
and
loope
cmp
insl
test
cmp
inc
add
fnstenv
js
dec
add
outsb
mov
sahf
push
mov
xchg
pop
pop
mov
jae
mov
dec
test
inc
or
aas
xor
mov
push
sub
push
sub
pop
es
jns
test
add
push
mov
icebp
xor
les
and
sbb
xorl
pop
adc
dec
xor
mov
jecxz
jg
cmp
and
jae
scas
repnz
cmc
rclb
int3
pop
pushf
shlb
jp
rclb
popf
outsb
hlt
and
lcall
mov
test
ljmp
cmc
lds
mov
divl
or
loopne
inc
das
out
daa
fadds
pop
lock
mov
sbb
gs
std
pop
rcl
out
es
cld
inc
adc
xchg
outsl
pushaw
stc
jne
cmc
rcrb
pusha
shll
xor
imul
lods
aas
add
cmp
mov
aaa
icebp
ficomps
xchg
inc
and
dec
arpl
imul
sbb
lret
mov
lea
jo
cwtl
push
nop
leave
push
jno
test
vmwrite
adc
cmp
ficomps
push
and
sub
scas
sub
sbb
xor
add
in
mov
fdivl
shl
cmp
mov
add
adc
push
or
xor
ret
pop
jl
insb
jp
dec
jo
mov
arpl
iret
or
add
in
jb
loope
sbb
add
xchg
mov
mov
icebp
mov
jge
inc
pop
cli
cld
rorl
aad
dec
loop
fwait
cmp
rolb
mov
mov
lret
mov
pop
cltd
sub
xor
ret
cmp
rorb
imul
mov
fstpl
lahf
cmpsb
ret
pop
mov
lds
call
cli
dec
lods
pushf
jg
push
nop
imul
xor
pop
push
mov
adc
clc
jbe
int
sahf
mov
insb
adc
stos
mov
fwait
mov
les
mov
jl
sbb
xor
mov
and
es
cmp
adc
scas
or
aad
mov
js
or
testl
pop
enter
and
inc
and
cld
ret
jl
loopne
xchg
aam
js
aaa
ljmp
or
adc
pop
mov
push
setns
daa
xor
lock
popf
mov
mov
and
mov
ds
add
or
sahf
or
xchg
stos
int
or
inc
scas
xchg
xor
xchg
sarb
shll
xor
mov
cmpl
enter
xchg
ja
or
std
push
jle
push
ja
leave
shrd
andl
mov
cmpl
movl
mov
jmp
movl
movl
jne
push
push
push
push
push
pushl
push
push
call
orl
or
xor
xor
xor
add
adc
adc
sub
add
mov
xor
xorl
shr
xorl
mov
orl
xor
or
movl
shl
cmpl
movzwl
movl
jmp
movl
movl
jle
push
call
not
or
sub
sub
sbb
sub
mov
mov
sub
imul
mov
cmpl
not
movl
jmp
mov
jne
push
pushl
pushl
push
push
call
sbb
adc
neg
subl
adc
mov
mov
not
add
mov
mov
mov
shrd
shr
adcl
mov
mov
xor
add
shl
incl
xor
jmp
jle
jl
dec
mov
push
cli
adc
xchg
jp
ja
clc
lcall
xchg
ja
jl
jp
and
xor
jg
int
push
cmp
mov
jl
cmp
decl
xchg
xchg
test
fldt
test
icebp
rcrb
sbb
in
test
xchg
sbb
int
fimull
ss
test
and
xchg
adc
pop
mov
decb
adc
ss
mov
or
jbe
int3
jo
gs
lods
stc
in
std
shll
push
es
or
push
clc
loope
pop
test
test
stos
leave
cs
push
div
sbb
sbb
jle
jecxz
es
notb
nop
aas
pop
and
jo
or
cmp
mov
shll
adc
adc
test
data16
xor
shlb
stos
sti
ja
cmp
int3
inc
push
in
pop
clc
fsubs
dec
push
mov
adc
popf
jbe
scas
nop
clc
jg
and
test
mov
pop
push
jne
mov
sub
imull
sbb
and
mov
jge
mov
int
push
int3
mov
into
and
cmp
das
push
mov
and
and
rcrb
mov
pop
sbb
loope
aad
xchg
inc
mov
pop
pop
mov
fistl
inc
xchg
pop
rcll
and
pop
fisubs
popf
dec
sbb
mov
lea
aaa
or
mov
sub
stc
pusha
test
roll
sub
xchg
dec
dec
dec
or
loop
rorl
inc
push
cs
xchg
add
andb
inc
call
add
jp,pt
outsb
add
aas
cmp
push
cmc
xchg
sub
mov
adc
lods
loopne
or
imull
out
or
loopne
push
arpl
cmpsb
ficomps
pop
jae,pt
into
jo
push
or
test
mov
inc
sarl
xor
dec
pop
sbb
insl
xor
leave
mov
pop
cld
dec
or
adc
cmpsb
pop
pusha
std
movl
sbb
in
or
fnstcw
sahf
mov
mov
push
mov
fwait
ljmp
or
shr
mull
pop
sbb
mov
mov
mov
pop
jg
jl
xchg
test
sahf
sub
xor
mov
mov
push
add
mov
aam
mov
push
lret
add
cmp
addr16
rorb
dec
dec
iret
xchg
fwait
push
xchg
push
icebp
xchg
ficoms
cmp
loop
xor
pop
add
sbb
xor
inc
cmp
outsl
lock
ja,pt
add
out
dec
lret
mov
jecxz
sbb
cmp
aas
inc
push
pop
xchg
std
lret
adc
fstpt
mov
add
dec
dec
lods
mov
add
lret
out
mov
dec
and
int3
rclb
je
icebp
adc
mov
out
lds
mov
ret
xor
jp
insl
push
mov
divl
daa
std
ds
and
push
mov
lcall
icebp
sbb
inc
out
js
xor
mov
jmp
rolb
pop
in
out
push
mov
lret
arpl
out
bound
clc
mov
jecxz
add
pop
sub
loop
jp
leave
dec
cwtl
push
adcl
push
push
imul
push
pushl
mov
mov
cmpl
movsl
inc
mov
into
pop
daa
jle
rclb
xor
jns
clc
rolb
scas
in
lods
xor
mov
mov
or
xchg
frstor
or
xor
jle
cmc
imul
sbb
adc
jg
push
jl
hlt
popf
xor
sbb
fisttpl
test
mov
adc
xor
jns
lahf
bound
imul
aam
push
sahf
inc
dec
fiaddl
xchg
mov
push
jo
out
xchg
es
shlb
lds
mov
or
nop
push
ss
jg
adc
lret
push
ss
hlt
add
not
sbb
fldt
jmp
scas
adc
icebp
inc
pusha
aaa
lcall
ret
or
mov
mov
outsb
call
js
mov
mov
xchg
mov
jecxz
mov
imul
rclb
ds
lods
lds
iret
jne
lea
xor
lret
push
sti
nop
mov
inc
push
pop
jmp
out
xchg
and
lea
mov
cmp
cmp
jbe
sub
xor
or
adc
and
fmuls
add
mov
sub
jo
loop
ljmp
subb
mov
sarl
dec
push
lods
adc
adc
push
lret
repz
stos
jne
fildll
in
cld
sbb
cltd
mov
mov
insb
pop
mov
lock
aad
scas
mov
mov
les
outsl
in
test
push
and
push
xchg
sub
push
inc
sub
inc
scas
mov
jmp
insl
arpl
test
sbb
outsb
popl
xlat
scas
fiadds
leave
push
pop
dec
push
and
es
stos
xchg
xchg
int
or
sbb
jl
mov
jo
add
sub
dec
mov
or
shrl
clc
addr16
popa
mov
scas
or
insl
int3
jmp
scas
xor
leave
push
and
push
mov
test
daa
jbe
pop
jb
test
imul
mov
xchg
jp
outsb
mov
insl
lea
das
adc
jl
jl
sub
mov
pop
fidivs
xor
add
pop
sub
iret
mov
pop
cmp
sbb
and
and
mov
jne
out
inc
jne
lds
and
and
inc
insl
jne
addb
test
mov
repz
das
mov
mov
jae
mov
xchg
daa
mov
mov
in
loopne
add
mov
roll
mov
and
je
sbb
mov
ret
adc
mov
dec
idiv
fstp
mov
fimuls
loop
insl
pextrw
pop
pop
pusha
pop
fs
push
movsl
loope
cmp
fucomip
lea
mov
push
dec
xor
sahf
add
sub
pop
push
int
jne
dec
lcall
mov
xchg
and
add
jo
xchg
aaa
stos
mov
or
ret
imul
andl
sbb
dec
sub
push
nop
loope
push
hlt
stos
repnz
mov
dec
adc
mov
dec
shlb
clc
shl
add
hlt
popf
xor
lods
ret
xor
enter
push
pop
dec
imul
mov
xchg
sub
cmc
cmpsb
mov
xchg
mov
or
cmpl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
xor
or
mov
sub
sub
mov
xor
or
sub
xor
and
xor
or
sbb
mov
mov
add
mov
mov
sbb
mov
mov
incl
shrd
subl
shr
adcl
mov
add
mov
cmpl
not
mov
jmp
not
jne
push
push
push
call
mov
sbb
and
andl
and
orl
sub
or
sbb
jmp
pop
and
push
adc
out
cli
data16
push
ja
inc
add
lea
adc
leave
pop
enter
test
mov
bound
add
in
int
jno
shll
xchg
mov
je
mov
dec
ss
add
jbe
add
int
ret
sahf
repz
ljmp
sti
cs
cmp
dec
push
jno
sbb
add
ficoml
or
roll
add
repz
pop
icebp
aam
fadds
jns
add
fstps
ret
repnz
xchg
test
add
ror
xchg
enter
rolb
sub
shlb
cmp
xchg
lds
and
add
push
pop
popf
in
rcll
add
lods
mov
lret
mov
cmp
xchg
cld
out
inc
and
sbb
test
es
dec
and
add
rclb
cmp
inc
fs
cmpsb
jg
sahf
pop
test
cmpsl
dec
loope
int
stos
jae
inc
jnp
les
cmp
movb
popa
pmaxsw
xor
xchg
cmp
adc
mov
mov
adc
mov
cmp
fistl
fildl
fnstenv
push
push
xchg
push
aad
repz
jo
cs
nop
lahf
lret
into
mov
jp
push
or
add
test
sahf
push
xor
inc
imul
mov
std
ljmp
pop
lret
xchg
cmpsb
daa
dec
popa
sahf
sbb
add
ljmp
push
aaa
icebp
add
and
and
xchg
imul
mov
test
inc
out
int3
mov
movsb
stos
push
mov
xlat
into
mov
test
jle
fcompl
sbb
dec
loop
sbb
sbb
icebp
jbe
xchg
cmp
mov
out
xchg
sub
and
pusha
push
call
mov
push
rcrb
cmp
je
stc
mov
lcall
sub
push
push
xchg
inc
lds
mov
mov
aas
xchg
es
inc
mov
pop
jle
xchg
cld
mov
enterw
adc
cmpsl
sub
fistps
sahf
scas
fmull
or
dec
lea
mov
xchg
xchg
adc
jmp
data16
push
mov
pop
inc
fmull
jbe
or
jno
cmp
cmp
ljmp
mov
lods
inc
or
sub
imul
pushf
add
mov
stos
sbb
rcl
push
scas
and
dec
sub
sbb
aas
jge
inc
mov
xchg
mov
das
call
cmpl
sti
out
gs
pop
inc
push
mov
dec
cwtl
loopne
pop
mov
mov
and
movsl
fisttpll
ds
inc
addb
push
es
pop
in
imul
mov
dec
fstps
mov
sub
loopne
les
add
test
mov
mov
nop
incb
and
adc
xor
xchg
sub
vpxor
mov
jo
ficoms
dec
das
cmc
scas
sbb
shll
lods
repnz
jl
pop
repnz
aam
dec
adc
int3
inc
ret
mov
jmp
rcr
dec
xlat
out
sub
mov
in
jl
into
mov
jbe
inc
cmpsl
inc
mov
sti
call
fimull
addr16
cmp
cwtl
pop
outsl
or
js
jmp
sbb
fsubs
mov
ds
jo
pop
testl
or
and
fwait
sbb
mov
cmpsb
outsb
mov
icebp
stc
aam
in
xchg
dec
push
mov
or
xchg
rcrl
mov
jle
and
andl
in
mov
lods
lret
lcall
mov
clc
add
int
pop
sub
pop
mov
cmpsb
out
xchg
adc
cmp
cmpsb
jne
cmpsl
jle
mov
cmp
insl
data16
addl
adc
mov
adcb
test
cld
push
ret
mov
sbb
popa
movsl
std
pop
adc
inc
ja
cld
lret
inc
in
add
mov
or
mov
test
push
in
xchg
xor
lret
sarb
movsl
or
repz
neg
ret
push
inc
movsl
jbe
das
mov
add
xlat
push
mov
mov
cmp
cmp
xor
scas
pusha
cltd
aam
int
ljmp
and
push
dec
jl
cmpsb
push
sbb
push
test
dec
jo
sub
push
ret
ja
push
push
pushf
push
mov
or
mov
jl
ret
mov
leave
mov
pop
movsl
fcmovnbe
cmpsb
adc
je
repz
movsbl
xchg
ja
scas
fcmove
popa
pop
das
les
imulb
mov
push
mov
sub
mov
cmp
test
bound
adc
inc
and
cli
ficomps
inc
add
and
cmp
into
dec
imul
in
sbb
stc
enter
addr16
push
cmc
stos
cmp
sbb
dec
push
and
mov
movsl
jns
fmull
popa
push
adc
pop
cmpl
loop
xor
jl
popa
sbb
cmp
cld
push
mov
xor
push
nop
lahf
dec
jmp
cmp
and
fidivs
imul
mov
or
xor
orb
adc
call
cmp
jb
add
jle
push
push
and
iret
imul
inc
push
xorl
mov
mov
les
pop
bound
push
bound
lcall
jnp
push
fmull
scas
push
outsb
mov
mov
insl
inc
mov
std
out
idiv
jo
mov
icebp
fmuls
or
test
fimull
clc
sbb
jecxz
inc
mov
dec
mov
cs
sbb
and
call
jl
arpl
jmp
push
dec
inc
push
push
or
lock
sbb
out
jecxz
aaa
cmp
das
mov
jns
in
dec
pop
scas
push
hlt
push
dec
mov
xchg
jl
sub
add
rorb
negl
sub
mov
adc
rolb
mov
cmp
push
popa
scas
loopne
fisubrs
mov
or
das
add
pop
out
inc
sub
inc
mov
pusha
hlt
or
imul
test
xchg
add
mov
cwtl
mov
mov
or
inc
inc
fsts
push
sbb
mov
mov
fisttpll
cmp
in
lock
fucom
or
cmp
clc
test
stc
scas
lret
inc
push
loop
push
scas
cli
sub
in
push
or
stos
je
dec
in
fists
dec
inc
mov
inc
outsb
out
pop
test
inc
fcoms
cmp
and
not
xchg
addr16
mov
out
xlat
jmp
aad
and
shrb
lods
out
mov
or
in
lods
jl,pt
mov
sub
push
das
mov
mov
xor
xor
subl
or
andl
shl
sbbl
lea
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
jg
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
pushl
push
call
xorl
movzbl
adc
movzbl
add
or
add
movzwl
sub
mov
shrd
shr
cmpl
mov
mov
mov
jmp
mov
jbe
push
call
andl
mov
adc
sbb
movl
mov
mov
or
not
mov
mov
sub
mov
add
jmp
rcrl
cmp
and
and
scas
dec
or
fcomps
ja
add
mov
fsubl
add
sbb
nop
mov
push
dec
inc
push
data16
sahf
popa
les
jbe
test
into
push
loope
xor
les
jp
leave
xchg
cs
add
gs
sub
es
jmp
aas
and
xchg
into
jo
pusha
ret
adc
jl
sahf
add
lock
add
mov
inc
cmpb
ret
test
pusha
enter
movsl
cli
sbb
mov
add
jl
cmpsb
mov
flds
fisttps
adc
imul
outsb
cld
leave
mov
push
js
push
xor
out
mov
dec
shrl
ljmp
xchg
stos
ret
lret
aas
aas
inc
push
aaa
sub
es
ja
sub
sti
mov
jo
mulb
mov
jg
inc
mov
inc
sbb
or
jl
scas
ret
adc
pushf
iret
cmpsl
jl
nop
and
adc
mov
lret
pushf
or
out
xor
insl
outsl
push
rclb
shrb
pop
and
jge
jb
loope,pt
mov
xchg
xchg
xchg
ficoml
aad
out
mov
dec
imul
outsb
push
add
and
dec
mov
push
xor
sarb
shrl
add
pusha
sbb
daa
and
shrl
fisubl
in
push
ds
repnz
jnp
popa
icebp
cmp
jmp
sbb
subl
xor
push
mov
push
stc
outsl
inc
lret
out
in
ja
jo
inc
mov
fsubrl
in
inc
repnz
dec
cmp
mov
sbb
out
or
cwtl
mov
inc
xchg
sub
jb
andb
xorl
int
hlt
test
movsb
js
pop
push
pop
and
lds
fmuls
dec
into
or
ss
sub
dec
xor
jo
adc
mov
cmc
push
xchg
xor
inc
cmp
ds
push
std
out
sbb
leave
stc
mov
lds
pop
scas
sub
push
xchg
jmp
or
das
ljmp
xor
adc
fnstenv
jmp
pop
jmp
loope
mov
mov
jns
dec
bound
pop
and
hlt
and
call
lea
cmp
int
stc
or
dec
dec
adc
adc
jo
xchg
data16
mov
test
pop
in
cmp
sub
mov
mov
pop
insl
cwtl
pushf
sbb
jmp
xor
adc
les
push
and
stos
jg,pt
mov
xchg
iret
lods
mov
inc
les
pop
scas
fs
in
gs
mov
ljmp
jmp
mov
subl
out
xor
in
pop
jle
sub
sbb
les
adc
ss
push
data16
mov
jecxz
xchg
rep
lods
jnp
mov
loopne
aas
xchg
popl
mov
enter
mov
lds
mov
inc
inc
and
sub
iret
enter
pop
in
adc
rol
adc
mov
pusha
dec
inc
rol
xor
xor
inc
bound
in
xorb
bound
xor
pop
daa
pop
push
mov
in
imul
mov
jge
push
dec
jp
jnp
into
jp
push
push
adc
sbb
jl
jg
gs
insl
jo
jbe
stc
dec
jp
inc
shrb
subb
mov
and
pop
rclb
pop
add
inc
dec
xchg
jae
scas
shll
in
xchg
sbb
lret
in
ljmp
arpl
rcrb
popa
pop
aaa
outsb
sub
aad
pop
enter
and
adc
pop
inc
test
jecxz
inc
mov
xchg
lcall
scas
or
push
dec
test
shl
hlt
inc
jmp
push
jle
mov
pop
andl
iret
xor
xchg
cld
sarb
mov
imul
cwtl
mov
mov
jno
jnp
nop
mov
popa
outsb
adc
subb
pop
outsl
mov
fmuls
bound
ss
scas
in
push
data16
aam
outsl
adc
mov
repnz
sub
aad
scas
jl
jl
pop
mov
pusha
sti
lret
test
sub
imul
sub
lahf
pop
push
or
xchg
cld
xchg
repz
out
mov
ja
pusha
ds
jecxz
in
ficomps
std
fstpl
lds
aaa
sub
pop
mov
jnp
psubsw
pop
clc
mov
test
in
xchg
loop
inc
push
dec
scas
rol
insb
lea
daa
inc
dec
xor
xchg
rclb
sub
add
test
mull
dec
push
icebp
sub
dec
mov
jae
insb
shlb
aad
mov
pop
inc
mov
or
jo
add
test
stos
cmp
jp
mov
push
pop
xor
mov
pop
sbb
movnti
and
int3
cmp
lods
push
mov
dec
xchg
cmpsl
insb
add
mov
cld
rorb
sub
xchg
js,pn
inc
inc
icebp
and
je
rclb
aaa
test
ljmp
popa
xchg
add
sub
add
mov
mov
cmpb
ret
testb
mov
mov
rorl
out
ret
mov
mov
jne
sbb
les
add
jle
pop
jbe
push
push
push
popa
xor
mov
divl
jge
xor
fistps
fcomps
jl
fisttpll
inc
or
lea
push
test
push
xchg
add
jmp
lret
push
mov
mov
push
dec
cli
sbb
jmp
cwtl
xchg
add
call
or
push
push
dec
push
out
movsb
jo
xchg
mov
lahf
std
sbb
stos
jnp
rorb
or
stos
cs
add
loope
fnstsw
adc
add
adc
jecxz
test
push
xchg
adc
push
shrl
hlt
add
xchg
cmp
dec
push
scas
sahf
aaa
repnz
adc
push
mov
fldl
adc
sub
fmull
push
iret
and
shrb
push
leave
cwtl
jns
sti
mov
mov
pop
push
shl
xlat
fldt
pop
nop
pop
out
mov
dec
outsl
sahf
call
mov
es
mov
xchg
pop
aad
out
fildl
sub
aad
xor
idivl
ja
jno
ror
inc
mov
hlt
popa
mul
mov
outsb
sub
adc
xchg
orb
xor
fstpt
fstl
inc
add
iret
mov
or
jo
adc
les
outsl
aaa
dec
adc
cmp
mov
jp
mov
mov
aas
daa
or
pop
int
mov
inc
xchg
adc
aaa
cwtl
jae
push
shlb
rolb
icebp
pop
add
or
shl
movzbl
or
imul
mov
mov
xorl
shrd
xorl
mov
mov
xor
shr
mov
and
mov
sbbl
xor
orl
or
sbbl
shl
adcl
sub
mov
mov
cmp
mov
mov
jg
xor
add
mov
sub
and
mov
cmpl
movl
movl
jmp
mov
mov
jb
push
push
call
xor
mov
sub
sbb
movzbl
and
mov
jmp
les
cmp
push
mov
mov
movsb
js
pop
js
dec
ja
jmp
ret
insl
lahf
es
mov
lahf
imulb
inc
repz
mov
sahf
pop
xchg
pop
mov
cmpsl
xchg
add
xchg
pop
pop
add
push
or
jp
notl
cmp
repnz
sti
out
test
xchg
insl
faddl
mov
call
pop
lods
lea
or
cmpsl
push
sahf
lret
insb
inc
in
jle
popa
ret
test
pop
fistpl
jnp
out
clc
movsl
das
fs
int
cmp
bound
pop
adc
lea
addr16
and
bnd
sbbb
fsts
add
hlt
dec
test
xor
jmp
adc
int
xchg
iret
or
pop
cmp
or
int3
cmc
je
ds
jne
ds
jns
addr16
push
mov
push
repz
pop
icebp
movl
movsb
jne
lcall
xor
adc
push
mov
movsb
outsl
leave
lahf
cmc
fdivrl
mov
sbb
lods
dec
lahf
out
sbb
push
movsb
popf
shl
stc
lock
rcr
adc
xchg
aaa
in
adc
mov
aad
mov
and
xchg
xchg
push
cmp
pop
cmp
cmpsl
pop
adc
push
xor
sub
sbb
jle
repz
stc
pop
or
jmp
push
fldcw
pop
mov
ljmp
aas
outsb
out
mov
jns
mov
adc
xchg
push
insl
out
lds
mov
push
push
dec
mov
mov
inc
jns
adc
mov
sub
fmuls
gs
jno
jecxz
popa
lods
icebp
outsl
repnz
cld
or
add
mov
dec
xor
sub
dec
cmp
dec
jnp
and
sub
mov
and
shlb
mov
std
test
xchg
adc
push
fwait
cmp
bound
movsb
rcll
mov
repnz
sub
cmp
gs
call
mov
sbb
xchg
out
push
xchg
test
dec
shll
sub
bound
xchg
mov
fistl
arpl
movsb
das
push
xchg
and
fdivs
adc
mov
push
out
lods
fistpl
adc
out
dec
mov
xor
adc
fcompl
rcrb
call
push
addr16
push
pop
cmp
in
adc
nop
insb
idivb
xor
mov
orb
mov
aad
pop
imul
cli
mov
and
fldt
je
pushl
and
cmp
sub
dec
insl
popf
push
fs
aam
daa
push
es
mov
mov
cmpsl
add
xor
xchg
sbb
push
mov
lret
mov
jno
das
cmpsl
test
push
pop
bnd
cli
adc
popa
xor
ret
and
stc
mov
sti
shll
aaa
jae
ss
xchg
jmp
hlt
sub
scas
jno
test
adc
adc
aad
sti
lods
jmp
cmpsb
push
outsl
or
aad
rorl
stc
xor
gs
push
sub
shll
add
sbb
and
xchg
and
fcmove
rcrb
pushf
push
aas
inc
sar
or
popa
call
mov
mov
andb
jne
sbb
int
insb
ffreep
and
inc
fistpl
lret
popf
mul
shl
and
shrl
push
cmpsl
push
or
fucomp
sbb
mov
mov
mov
xor
movsb
testb
pop
mov
mov
dec
insb
jg
call
sarl
push
pusha
jo
addb
pop
xchg
and
push
xor
nop
cltd
cwtl
into
adc
cld
cmp
xor
sub
and
shll
into
sbb
jl
hlt
rcr
mov
in
movsb
or
nop
stc
or
dec
out
test
xor
push
insb
repz
fldenv
and
stos
imul
loop
imul
adc
sahf
inc
into
lock
repnz
mov
xchg
mov
jecxz
test
cmp
cwtl
notb
mov
push
mov
add
mov
jo
dec
lea
mov
inc
sbb
jmp
jg
scas
sbb
and
mov
adc
dec
dec
in
adc
lods
sbbb
sahf
jne
add
mov
jae
ljmp
cs
xchg
dec
aad
jnp
movq
lcall
stc
or
aad
mov
adc
mov
enter
clc
out
sub
leave
sbb
push
adc
lret
aas
stc
jl
inc
mov
or
mov
fimull
dec
test
xor
inc
mov
popf
ret
mov
lea
sar
mov
loopne
pop
or
ja
add
push
cmp
cli
xchg
cmp
fs
test
int
mov
movsb
lock
cmp
cmp
xor
xlat
addr16
insl
jle
pop
jge
add
lret
lock
jmp
enter
inc
ljmp
xchg
xchg
jns
mov
mov
pop
pop
cmp
lahf
and
movsl
xchg
push
clc
cmp
repnz
std
push
mov
loopne
out
or
test
outsb
cmpsl
and
lods
mov
dec
pop
outsb
sub
adc
out
dec
pop
xor
xor
lret
add
nop
mov
or
movsb
xchg
in
xchg
dec
pop
ret
push
xchg
and
and
repz
xchg
inc
testb
pop
or
push
scas
rorl
push
mov
test
test
add
out
pushf
int3
jnp
sub
pop
fs
scas
loop
jecxz
subb
inc
mov
cmpsb
xchg
mov
cld
adc
pop
mov
mov
ret
lcall
sub
xor
mov
xchg
out
vdivsd
in
bound
shlb
jno
inc
outsb
test
and
fnstcw
inc
int
loop
pusha
mov
xorl
mov
mov
ss
sbb
iret
das
mov
pop
xchg
das
xor
mov
std
es
push
ror
push
sub
repnz
mov
push
push
push
aad
shll
mov
inc
mov
das
push
sbb
mov
or
outsl
fnstcw
sub
push
jl
insb
loop
push
ss
movsw
mov
jmp
shlb
enter
fcmovu
push
pop
and
xchg
mov
push
hlt
fs
jb
rcrl
jmp
ret
test
xor
mov
cmc
es
inc
enter
push
pop
dec
or
icebp
popf
or
sbb
adc
mov
push
cmp
movsl
cld
mov
loop
jg
xchg
xchg
inc
or
sbbb
xor
in
sub
adc
xor
cs
inc
iret
mov
fistps
jmp
and
pop
mov
ja
lock
adc
add
mov
andl
shrd
mov
movzwl
or
mov
adcl
xor
andl
shl
orl
xor
adcl
or
sbbl
shr
and
mov
jmp
mov
mov
test
xchg
call
add
or
fistl
shlb
or
mov
cmpsb
jo
fs
cmc
inc
loopne
mov
sti
cld
mov
jmp
and
inc
mov
outsl
xchg
mov
jnp
fnsave
adc
cmpl
add
push
adc
movl
sub
cmovo
out
push
nop
add
rcrb
out
cld
imul
mov
mov
jae
cltd
addb
jge
mov
add
inc
fwait
clc
lcall
lock
cwtl
cltd
mov
sbb
rcll
shrl
add
cmpsb
mov
lret
add
popf
mov
cld
jae
loopne
sub
stos
dec
push
dec
push
ljmp
adc
arpl
movsb
inc
icebp
mov
jp
and
mov
pop
dec
cmp
xchg
scas
dec
mov
sub
mov
mov
xor
cmp
lret
jmp
and
inc
popa
xor
add
repz
mov
aad
mov
scas
hlt
push
add
xchg
cmp
mov
icebp
inc
jo
mov
push
add
jle
std
sbb
into
movsb
scas
mov
inc
loop
cmp
shlb
stc
pop
mov
mov
add
ret
shrb
mov
mov
daa
or
out
test
sbb
negl
insl
pop
or
fcoml
xorl
push
aam
dec
lock
int3
or
push
dec
test
pop
das
cmc
cmc
leave
jae
adc
cmp
mov
loope
sbb
push
xchg
push
ja
inc
stos
dec
push
out
orb
nop
in
or
mov
bound
pop
and
in
mov
ljmp
ljmp
cwtl
ds
xchg
rclb
and
sti
sbb
add
dec
push
mov
jne
fiaddl
inc
or
ds
sub
sbbl
mov
dec
shrb
xor
lcall
push
xor
loope
add
pop
mov
mov
adc
jmp
hlt
add
lds
outsb
rorb
int
bound
jp
and
out
xchg
and
and
emms
lret
lcall
and
push
xchg
xor
stos
xor
movsb
dec
cmpsb
and
stos
gs
int
fwait
inc
leave
cmpsl
lahf
jbe
mov
gs
mov
dec
sbb
xchg
out
sti
fwait
testb
xchg
jo
xor
fwait
call
jecxz
and
mov
imul
mov
aaa
popa
jbe
int
sub
mov
inc
inc
insl
mov
and
mov
inc
jbe
insl
xchg
jns
mov
outsb
add
or
loope
clc
insb
inc
gs
or
dec
dec
and
lods
pop
pop
stc
dec
mov
mov
mov
nop
cltd
inc
ret
add
pop
pop
test
jecxz
mov
sub
stos
xchg
sub
and
aaa
les
mov
call
inc
or
xor
dec
mov
sbb
pop
insl
push
mov
fcompl
lret
jmp
imul
xor
cmp
mov
xor
inc
add
bound
stc
sbb
cmp
test
and
in
pop
pop
jmp
bound
pop
adc
jb
xor
ficoms
sbb
pop
fwait
dec
add
or
int3
dec
mov
xchg
std
movsl
jmp
stos
aam
rcr
jmp
add
cmc
mov
out
jnp
dec
xor
and
es
shr
push
test
sbb
rcll
andb
sbb
icebp
adc
addr16
jmp
popa
scas
js
enter
xchg
ss
pop
mov
int3
ja
mov
loop
adc
cmpsb
mov
in
ja
mov
xchg
lods
or
pop
xchg
shlb
cmp
and
insb
mov
inc
dec
int3
adc
rcrb
push
and
xor
xchg
lea
inc
jno
imul
pop
and
add
insl
adc
arpl
dec
mov
pop
sarl
or
and
push
cmp
inc
dec
imul
shrb
js
ds
pop
dec
jg
aas
push
cmc
inc
dec
sub
jge
sarb
call
adc
mov
xchg
aas
jp
and
cli
icebp
pushf
xor
aas
and
push
sbb
cmp
fwait
shlb
je
pop
jl
xchg
pop
mov
dec
pop
rorl
sbb
adc
gs
fnsave
xlat
adc
push
cmp
push
fildl
std
cmpsb
ret
rcl
cs
pop
mov
push
lahf
sub
cli
mov
lock
ja
push
out
xor
jecxz
xor
inc
inc
cmpxchg
jne
pop
imul
jns
pusha
pop
daa
or
popf
mov
ja
mov
sub
stc
test
mov
pusha
adc
jl
mov
sti
pop
mov
js
dec
mov
lods
sbb
lret
imul
fnsave
and
out
push
fs
les
pop
cmpsl
xlat
out
loope
filds
add
dec
lods
imul
pop
test
sbb
adcb
pop
jp
fs
mov
cli
fstps
inc
fistl
inc
mov
adc
in
test
adc
movsl
and
adc
push
lea
arpl
jbe
mov
push
pop
and
daa
xor
iret
mov
adc
push
xchg
xor
outsl
mov
cmp
jo
xor
out
das
cs
mov
stos
jae
ljmp
inc
cld
loope
sub
test
sbb
cmp
repz
cmp
popf
or
std
out
adc
inc
xchg
aas
les
rcrl
sub
lcall
data16
cmp
test
sub
jnp
push
adcb
adc
fstpl
fidivs
dec
clc
pusha
jp
and
sbb
lcall
sub
xchg
mov
lods
fdivrl
mov
and
pushl
jmp
rclb
lcall
pusha
movsl
jge
jge
stc
shll
mov
fcmovnu
pusha
insl
fimuls
lods
mov
add
in
pop
scas
lea
add
repnz
jmp
imul
pop
sti
jmp
fwait
pop
enter
xor
daa
jnp
out
dec
lds
dec
mov
scas
out
cs
jno
cmp
pop
adc
inc
cmp
jecxz
cmpsb
jo
push
scas
push
stc
jae
mov
shlb
sbb
and
push
test
jmp
leave
mov
shll
mov
mov
lods
idivb
push
sbb
jp
xchg
dec
add
ja
fimull
dec
aam
adc
or
mov
mov
mov
add
mov
andl
shrd
sbbl
shr
mov
mov
inc
jmp
shll
adc
push
scas
xchg
test
jmp
ja
sub
pop
xchg
popa
gs
add
lcall
ficoms
insb
cs
cmp
sub
fimuls
pop
fnstcw
movsb
sub
lcall
lock
and
adc
ja
ds
mov
add
fisttpl
jbe
leave
std
jb
test
dec
std
les
ja
add
cmp
push
fsubs
pop
mov
xchg
ret
cmc
jo
jge
out
mov
fwait
add
sub
addr16
or
xchg
clc
loopne
mov
mov
add
pushf
pop
mov
fstpl
xor
mov
int
add
mov
pushf
scas
and
sbb
add
rcpps
lahf
sbb
movsb
mov
mov
fimuls
jne
cmp
xor
xchg
leave
sbb
into
lds
aaa
xchg
jp
mov
int
mov
cmp
jecxz
cmp
sub
xor
mov
out
sub
fs
cld
es
enter
ror
cmp
or
cmp
rorb
sbb
pop
fcos
push
cmp
fistpll
xor
out
repnz
not
xor
sahf
es
mov
or
jge
aam
mov
out
or
add
lret
xchg
add
xchg
and
in
mov
mov
jge
shlb
repnz
shl
adc
xchg
shlb
mov
adc
sti
fwait
push
sti
ret
iret
fisubrs
dec
sahf
inc
add
push
or
adc
imul
fsubl
mov
sub
out
fcmovne
cmp
xor
pop
dec
sub
mov
jmp
cmc
mov
cld
lret
add
aad
cmpsl
sbbb
push
mov
insb
inc
mov
icebp
pop
inc
dec
sbb
cmp
mov
ljmp
rcrl
stos
inc
sub
sbbb
lock
mov
lcall
ret
and
dec
adc
jno
lock
mov
add
mov
jp
or
repz
mov
lret
xor
inc
or
repz
les
cmp
fiadds
psllq
xor
cmp
ja
maskmovq
jle
in
mov
sarl
push
and
mov
add
popa
scas
out
mov
pop
add
ljmp
inc
mov
jp
mov
repz
aas
pop
push
hlt
xor
cwtl
mov
int3
and
inc
ret
or
icebp
mov
push
loope
xchg
incb
adc
pop
lea
gs
aad
mov
in
out
insl
dec
xor
push
stc
sub
idiv
sub
add
mov
mov
push
pop
dec
add
into
popa
push
call
iret
test
iret
or
cs
inc
xor
std
or
xor
xchg
shlb
pop
or
add
rcrb
or
xorb
inc
daa
push
ret
push
arpl
adc
in
add
int3
test
cmp
sub
aad
mov
in
insb
or
mov
pop
std
add
mov
nop
imul
adc
sti
ds
shrb
push
pop
icebp
jnp
mov
sbb
xor
imul
pusha
add
mov
scas
and
adc
idivb
aad
push
jl
mov
shr
shl
mov
mov
add
pop
cltd
adc
mov
push
mov
inc
xchg
test
or
outsb
out
mov
rclb
push
dec
ret
cmp
cld
add
jb
mov
mov
push
push
inc
in
cmpsl
dec
dec
cmp
push
repz
jmp
fdivrs
and
adc
adcb
and
and
inc
imulb
out
fs
sub
and
dec
jl
addr16
int
jns
jmp
gs
or
jbe
dec
scas
pushf
cmc
jg
sub
jne
cld
xchg
mov
xor
loopne
out
out
jns
dec
pop
and
ss
push
adc
or
mov
inc
rorb
push
xor
inc
mov
insl
dec
cmp
sbb
jns
popa
aas
jle
mov
loope
inc
push
insb
ds
fnstsw
imulb
pushf
fsubs
push
jp
movsl
dec
rclb
hlt
adc
push
jl
in
js
and
popa
xlat
dec
insl
mov
push
jb
test
or
hlt
push
push
jge
cmp
xlat
xchg
mov
fwait
mov
jl
mov
je
ficomps
aam
inc
neg
add
sbb
fwait
mov
jmp
sbb
or
pop
test
jns
pusha
pop
or
push
dec
push
adc
lods
mov
pop
mov
lods
mov
push
push
add
sbb
scas
cmp
push
cmc
cmp
dec
inc
mov
mov
xor
xor
rol
pop
sbbl
xchg
arpl
pop
dec
mov
sbb
jnp
sub
mov
ret
imul
iret
in
divps
jo
and
arpl
addr16
or
push
push
pop
sub
mov
xchg
mov
test
xchg
cwtl
inc
and
cmp
out
mov
leave
ss
xor
pop
pop
mov
mov
push
stos
xchg
xor
cld
fists
ret
push
aad
or
xor
repnz
jno
sbb
adc
sti
mov
jecxz
scas
mov
popa
push
pop
add
and
jmp
nop
les
xor
fstl
arpl
cld
out
adc
adc
pop
sub
mov
daa
or
sbb
sbb
repz
mov
outsb
jmp
add
xlat
mov
pop
add
sbb
in
imul
sbb
in
xor
inc
out
or
push
inc
test
xchg
rorl
jnp
aas
fs
add
test
insb
and
cmp
clc
sbb
leave
or
add
lods
push
jne
movsl
stc
gs
popf
xchg
push
jg
sti
xlat
mov
andb
push
or
cmp
or
adcl
push
fdivs
inc
xchg
scas
fwait
out
lahf
lret
adcl
rorl
add
arpl
xchg
sbb
dec
push
mov
scas
sbb
push
lret
inc
cmp
cmp
adc
mov
push
mov
adc
xchg
dec
ret
aas
dec
test
xchg
aad
int
sbb
push
ret
idivl
cmc
inc
sti
mulb
int3
in
sub
mov
dec
sahf
jbe
cmp
cmp
pop
dec
fst
or
pop
pop
inc
lret
test
and
or
mov
divl
rsqrtps
mov
insb
dec
push
outsb
bound
int3
mov
xchg
testb
orl
and
adc
iret
adc
dec
xor
xor
pop
aam
rcr
test
push
in
orl
mov
xorl
xor
subl
jmp
scas
popa
inc
jge
sbb
cs
mov
sbb
ja
jecxz
mov
and
mov
lods
mov
xchg
pop
cmp
aaa
fcom
sti
jge
push
fldl
xchg
cmp
gs
daa
xchg
mov
mov
sub
aam
pop
mov
xlat
aad
les
mov
scas
int
outsb
scas
xchg
and
sub
out
add
movsl
pop
fdivs
jnp
xchg
negl
jecxz
scas
adcl
sar
cmp
out
repz
leave
mov
sahf
xlat
push
mov
daa
cld
imul
iret
shl
call
push
mov
aas
outsb
inc
cmp
dec
lock
out
sbb
push
and
mov
or
or
push
clc
fucomp
adc
inc
stos
in
xchg
ret
gs
add
test
dec
lret
inc
add
pop
repnz
addr16
mov
or
jp
scas
xor
xor
iret
fidivs
push
test
cmp
add
and
outsb
xchg
sub
jmp
pop
test
mov
test
movsl
jmp
nop
push
loope
stc
push
sub
sbb
sbb
or
mov
ljmp
nop
push
or
sbb
insb
jmp
push
cmc
adc
cmpsl
outsl
nop
jg
jmp
dec
ljmp
repz
and
lahf
lea
cmp
data16
lea
fs
push
sarl
sbb
test
leave
test
jl
scas
adc
pop
loope,pt
scas
mov
xlat
jecxz
loopne
out
xchg
sbbb
pop
cmp
cmp
mov
push
repz
sahf
sbb
ret
sbb
jno
dec
or
jle
cld
sbb
sbb
mov
pop
outsb
clc
test
add
mov
push
repz
inc
fstl
mov
gs
enter
mov
orl
cmpsb
inc
adc
adc
lea
xlat
and
xchg
push
mov
mov
mov
in
adc
das
dec
js
pop
xchg
shrl
cmc
mov
jmp
arpl
jg
push
sti
cmc
aaa
fisubs
data16
scas
cwtl
push
sar
xchg
mov
or
cmpsb
inc
mov
stc
test
mov
jb
add
or
lcall
pop
femms
in
xorb
jo
mov
dec
push
es
sub
mov
sbb
fistl
mov
out
cmpsl
je
add
lea
adc
cmp
loopne
add
adc
addl
push
adc
and
inc
int
dec
sti
mov
pop
pop
pop
jg
pop
les
lret
add
pop
lds
dec
jmp
shl
inc
push
xchg
adc
imul
idivb
faddp
jb
pop
push
adc
add
insl
xchg
test
enter
jns
mov
adc
test
dec
cmpsl
sbb
pop
jne
fcmovb
xor
cmpsl
inc
and
test
out
add
jae
sarb
aaa
add
bound
aam
xchg
leave
inc
jno
cmp
adcl
mov
inc
fs
or
nop
inc
lret
xor
cld
jmp
rorb
jno
test
jns
leave
pop
mov
cwtl
jns
fisubl
sbb
pop
jnp
push
daa
mov
in
add
out
xor
xchg
fists
mov
push
lds
pop
cmpsl
jnp
sbb
sbb
imul
sbb
mov
cmp
lret
aad
rolb
loop
sub
sbb
ja
mov
ror
ret
cmp
jle
cmp
pop
imul
rol
aas
push
xchg
cmp
jle
xor
push
addr16
out
sbb
jl
ljmp
filds
xor
hlt
cs
dec
push
jmp
xchg
xor
and
mov
in
dec
xor
cli
popf
mov
xor
xor
or
xor
xor
xchg
xlat
jmp
push
mov
mov
dec
aad
xchg
nop
mov
mov
mov
mov
inc
pop
pop
aad
dec
lea
call
insb
das
pop
loopne
in
ficompl
mov
push
mov
scas
shll
test
popa
repz
dec
or
sub
inc
out
xchg
mov
push
dec
addr16
inc
mov
sub
push
mov
mov
dec
or
fucomi
mov
pop
mov
into
xchg
scas
sub
lret
inc
in
mov
dec
jae
jmp
inc
pushf
lods
xor
mov
inc
mov
mov
ljmp
and
enter
sar
pop
leave
dec
mov
out
test
jp
outsl
and
idivl
jne
faddp
jns
mov
xchg
shlb
cmpb
add
add
inc
ja
cmc
int3
aam
and
xor
mov
cmpsb
cmp
cmp
cmc
repz
xor
movsb
ss
push
call
cmp
movsl
daa
popf
mov
in
inc
mov
iret
bound
outsl
jecxz
push
test
and
loop
cmp
cmp
push
mov
adc
mov
jecxz
fucomip
jecxz
jbe
add
mov
dec
les
lds
jbe
popf
and
pop
sbb
ljmp
push
clc
or
in
sub
jge
mov
push
dec
add
inc
insl
sub
pop
mov
sub
xor
scas
fstps
mov
ss
aas
mov
xchg
in
dec
cmp
pushf
jnp
out
xchg
loope
push
in
mov
ret
fildl
inc
ds
jl
cmp
add
or
dec
add
sbb
cmp
xor
ret
movsb
in
daa
jmp
pop
mov
add
dec
lods
cmpsb
jp
testl
mov
jns
push
hlt
mov
lock
push
daa
pop
adc
mov
cmp
es
fdivs
jnp
jmp
jge
jecxz
mov
jge
lds
push
pusha
pop
pop
pop
iret
inc
mov
ret
hlt
push
int
adc
sar
into
add
je
iret
lds
dec
mov
dec
movsb
clc
nop
sbb
sbb
sahf
jae
xchg
outsb
jle
or
in
std
push
daa
xor
mov
jnp
je
fcomps
mov
negl
fisubrs
mov
mov
mov
out
cmp
in
cmc
adc
test
push
dec
subl
push
gs
nop
sub
cwtl
push
xor
pop
hlt
gs
ja
adc
push
push
std
inc
nop
sahf
test
fsubrp
fisubl
dec
pop
ret
push
test
sti
cli
adc
jg
jb
sub
in
out
scas
mov
mov
je
mov
push
jb
cmpsl
mov
mov
xor
or
addl
shl
imul
jmp
add
or
or
adc
dec
push
ja
push
in
pop
push
mov
in
aas
xchg
gs
sub
les
lahf
push
pop
inc
insb
and
mov
cmpsl
sbb
jg
adc
push
inc
jle
dec
lcall
inc
popa
lods
jne
stos
and
cmp
adc
adc
cmp
push
int
dec
dec
xor
repnz
inc
bound
cmp
mov
out
push
dec
ljmp
clc
repnz
jmp
add
iret
mov
sahf
out
xchg
out
jp
sarb
movsb
push
enter
sbb
lcall
arpl
aas
cmp
addl
cmpl
je
into
ret
push
btr
pop
or
loop
das
das
cmp
lret
xchg
push
and
push
flds
lods
cmp
outsl
out
out
jns
insb
inc
pusha
xchg
xor
xchg
jmp
pop
lret
mov
cmpsb
cltd
cld
add
ret
das
stos
adc
jnp
roll
push
pop
insl
fwait
lea
in
std
sbb
dec
or
outsl
movsb
mov
or
fstps
mov
test
xchg
push
js
arpl
dec
push
int
pop
jp
aad
sub
cmp
inc
xlat
cmp
jle
and
or
aaa
and
push
cs
jae
mov
stos
decl
jae
outsl
xlat
sub
sbb
mov
sub
lds
int
mov
in
fisttpll
stos
lds
xor
inc
js
push
cli
mov
jge
cmp
ja
adc
negl
test
or
fcmove
jmp
inc
js
dec
ret
ret
outsb
mov
sub
sahf
gs
pop
adc
mov
push
sbb
push
or
bound
jge
aad
mov
jb
mov
pop
clc
add
aam
xchg
mov
mov
cwtl
xor
imul
fadds
push
pop
fcmovbe
imul
push
pop
push
jl
jb
mul
and
icebp
icebp
jmp
cmp
lock
loopne
loopne
or
mov
or
shrb
aam
enter
scas
lods
scas
imul
das
pushf
adc
sbb
mov
pop
dec
pop
int
push
popf
and
cmc
mov
or
pusha
xchg
lret
clc
fwait
cmp
test
addr16
test
sar
bound
add
repz
shll
pushf
adc
pop
mov
dec
subl
add
jecxz
out
fcompl
mov
mov
sbb
test
mov
mov
mov
out
imulb
mov
add
jl
enter
xor
andb
aas
xor
out
test
adc
sub
js
dec
sbbb
nop
aam
ja
mov
or
jns
push
and
out
mov
repnz
sub
fcmove
xchg
push
push
mov
scas
cwtl
movsb
jge
or
aaa
dec
xor
icebp
adc
mov
outsb
xor
sahf
add
push
inc
daa
jbe
cmpsl
pop
test
pushf
pop
es
adc
imul
dec
cmpsl
stc
sbb
cltd
roll
mov
jp
dec
xor
in
es
mov
clc
int
add
jecxz
mov
add
mov
jns
and
jns
imul
in
filds
test
filds
les
or
pop
or
rorl
and
cwtl
pushf
mov
push
rcl
popf
push
es
mov
add
pop
add
aaa
nop
sub
cmp
mov
stos
test
int3
add
xor
sarl
inc
ret
inc
jmp
xchg
cmpsb
dec
cmp
leave
aaa
movsl
xchg
jo
sub
lcall
fs
push
fwait
inc
pop
rclb
jecxz
jmp
mov
imul
hlt
adc
imul
mov
lret
sbb
in
dec
or
adc
add
mov
es
jne
push
imul
jne
stos
jne
loopne
push
pop
insb
xchg
mov
je
lcall
aaa
int
dec
iret
test
dec
add
mov
and
aad
popa
inc
dec
out
xor
sub
leave
sbb
dec
dec
push
cmp
add
xchg
push
add
adc
lahf
jbe
dec
dec
adc
mov
jno
push
into
lcall
cld
fildl
push
xor
push
loop
js
xchg
sbb
aad
xchg
stc
push
aad
je
test
sub
sub
sbb
mov
add
pop
cmp
and
pusha
lods
jg
inc
sbb
faddl
xchg
fsts
sbb
inc
mov
stos
mov
pop
popf
cmp
jl
notb
test
adc
int
pusha
les
mov
lret
out
lcall
in
cwtl
xchg
and
fcomps
xchg
adc
push
ret
adc
repz
xchg
or
fdivr
lahf
popa
fidivl
push
mov
mov
xchg
out
fmul
mov
adc
mov
push
mov
push
shlb
aam
addr16
rcrb
loope
pop
and
shlb
popf
cmp
ja
dec
js
jb
xchg
cld
lods
mov
cltd
mov
xor
mov
jg
fistpl
inc
push
stos
and
push
xor
stos
test
into
insl
push
jp
cltd
push
jmp
out
scas
sub
cmp
or
add
jno
out
enter
push
adc
or
ret
in
lea
pop
xor
or
fnstenv
sub
sub
adc
icebp
pusha
xor
stc
mov
mov
clc
cmp
clc
push
fs
pusha
or
xor
outsb
in
xchg
stos
cmp
jo
scas
imul
ret
or
das
hlt
dec
stc
popf
das
fs
jb
enter
bound
xchg
pop
sqrtps
mov
testl
in
pop
loope
pop
je
gs
loopne
sbb
pusha
push
mov
rcr
ret
addb
add
jo
push
xchg
test
fldl
scas
shr
push
add
outsl
adc
ljmp
scas
bound
adc
inc
sbb
xchg
dec
mov
dec
mov
outsl
lock
popf
sub
idivl
enter
add
call
mov
jecxz
in
mov
xlat
sbb
jo
clc
mov
mov
xchg
inc
pushf
push
xchg
jno
test
xor
repz
enter
jp
sub
jbe
leave
arpl
push
fidivrs
iret
shr
jnp
outsb
add
adc
es
stos
cmp
mov
inc
add
testl
mov
mov
movl
movl
mov
jmp
movl
jle
push
pushl
call
andl
adc
xor
xor
mov
sub
and
not
and
movzwl
adc
cmpl
mov
movl
movzbl
mov
jmp
movl
movl
jbe
push
push
push
pushl
call
add
sbb
sbb
xor
add
mov
mov
shrd
adcl
mov
or
mov
addl
jmp
inc
or
add
cltd
or
outsl
dec
or
ja
mov
pop
push
fwait
jmp
mov
inc
loope
pop
into
call
dec
mov
rorb
xchg
pop
add
insb
stc
sti
mov
jbe
jmp
xor
fnstenv
lahf
push
in
or
xchg
xchg
std
mov
test
cmpsb
repnz
into
sahf
pushf
push
lea
pop
xor
sbb
popa
aaa
out
test
fiaddl
inc
xor
inc
inc
lock
mov
push
mov
mov
das
stos
pop
ja
addb
repz
data16
fs
push
sbb
jmp
mov
out
pop
pop
add
rorb
in
popa
pop
cmp
sub
pushf
or
mov
jnp
cmp
push
xor
or
out
mov
in
mov
push
mov
sbb
ret
pusha
cwtl
je
jge
pop
icebp
and
adc
mov
or
xor
push
orb
add
test
std
xchg
pop
push
sarb
loopne
fs
dec
mov
push
inc
adc
jns
out
dec
sub
add
mov
adc
mov
xchg
pop
xlat
add
mov
call
lahf
sbb
and
int3
ja
push
inc
push
or
hlt
fadd
cmpsb
jbe
ficoml
fisubrl
negb
out
push
mov
xchg
test
fldl
push
mov
loopne
inc
dec
scas
scas
shrl
xchg
es
xor
testb
sbb
inc
mov
aas
lock
int
cmp
inc
pop
repz
pop
movsb
push
dec
push
or
mov
jb
lods
dec
sub
lock
mulb
adc
test
ficomps
jmp
daa
mov
sub
ret
xor
add
adc
xor
inc
enter
mov
or
scas
add
jb
sahf
mov
loop
lret
sahf
push
add
mov
sbb
dec
xor
jb
push
insl
fs
jmp
sub
sub
mov
dec
xor
mov
je
pop
sub
pop
mov
pushf
int3
xchg
jns
outsb
btr
pop
push
xchg
fmuls
ljmp
aam
xchg
das
out
xchg
lock
mov
sbb
in
xchg
mov
cmp
fcmovne
mov
jle
push
pop
int3
xchg
popa
fildll
mov
sub
les
push
mov
xchg
xor
imulb
sub
outsl
test
mov
jle
sti
push
cmpsb
int
jnp
repnz
insb
lods
mov
sbb
xorl
and
push
push
es
jae
cmp
insl
add
pusha
insl
scas
and
mov
les
je
xor
movsl
insb
sub
in
mov
fcmovne
mov
std
adc
adc
stos
icebp
inc
cmpsl
int3
sahf
ja
aaa
fisubrs
mov
ja
mov
pusha
fdivr
dec
jg
pop
mov
mov
xchg
lods
mov
adc
xchg
mov
out
adc
repnz
push
mov
lods
clc
or
jmp
int3
xor
pop
push
cwtl
jb
movsl
jnp
pop
push
mov
jmp
out
sbb
push
adc
sub
adc
sbb
push
xor
jbe
lret
daa
sub
jb
sub
xor
stos
inc
cmp
mov
sbb
in
pushf
mov
inc
pop
xchg
subl
loope
cmpsl
or
sahf
faddl
mov
mov
jae
sub
mov
add
xchg
out
out
or
outsb
in
jl
andb
sbb
popf
fisubs
or
mov
mov
or
sbb
sbb
cmp
push
movsb
mov
loopne
jmp
lret
pop
mov
ret
jae
dec
clc
fstpl
mov
sub
inc
dec
jne
repnz
pop
loop
test
dec
jle
cmpsl
popa
pushf
pop
mov
into
scas
dec
mov
add
jnp
bound
movsb
ds
loope
and
adc
push
push
into
lods
mov
js
clc
jb
lahf
jl
icebp
adc
popf
nop
flds
xchg
jg
jno
shl
pop
and
push
inc
pop
fcomi
ffree
clc
xchg
into
scas
cmc
mov
mov
push
jmp
dec
lahf
aas
mov
cs
adc
out
popa
push
scas
ja
lods
enter
nop
and
pushl
mull
stc
or
int
inc
push
loope
ds
aaa
push
push
mov
or
adc
dec
in
lock
xchg
shll
pop
jbe
mov
jmp
xchg
pusha
imul
je
push
arpl
mov
andb
jb
dec
hlt
xlat
fcoml
lret
insb
iret
in
bound
test
test
xchg
cmc
gs
mov
mov
push
add
out
stos
into
shlb
int
fisubs
inc
shll
sti
mov
sarb
jno
push
xor
sbb
inc
out
or
sti
push
mov
movb
out
add
pop
fcoml
inc
cmp
push
arpl
and
js
mov
lock
mov
mov
cmp
and
sub
test
push
sbb
or
popf
daa
push
mov
aad
aad
movsl
xor
popf
adc
fldl
in
scas
mov
jo
fisttpll
test
dec
int
sahf
pop
out
mov
xor
popf
xchg
ss
fistps
shlb
fildll
mov
add
jge
fidivrl
pop
dec
jmp
repz
ljmp
mulb
xor
mov
out
or
into
mov
lds
mov
xor
lcall
sbb
xor
fwait
add
sbb
stos
xchg
inc
negb
jbe
push
pop
sub
ljmp
loop
rorb
mov
xchg
jb
int
push
mov
xchg
out
test
aam
or
movsl
ficoms
mov
jg
adc
aam
in
push
sbb
or
pop
adc
add
loope
or
hlt
xor
adc
pop
mov
push
mull
ljmp
sub
lds
loopne
clc
hlt
sub
ja
cmpsl
rorb
cmpl
scas
xor
sub
arpl
xlat
push
and
das
insb
pushf
fidivrl
mov
jp
or
dec
shlb
loope
daa
jl
movl
nop
push
into
adc
sub
jle
repnz
dec
in
loop
mov
sbb
rcrb
adc
sub
fwait
pop
xor
gs
int
mov
fs
inc
xchg
shl
notl
mov
dec
push
jg
xor
push
and
sub
jl
lods
pop
fdivrs
mov
into
mov
rorb
inc
dec
loop
in
popf
jle
sub
repz
insb
lret
dec
xchg
loope
insb
cwtl
xchg
lods
pop
js
cmpsb
aas
popa
and
jne
ret
dec
hlt
and
mov
loope
xor
movl
or
shr
mov
subl
mov
mov
addl
mov
adcl
shrd
shr
mov
cmpl
not
mov
movl
mov
jmp
mov
mov
jb
pushl
pushl
pushl
pushl
push
pushl
call
or
adcl
movl
sub
and
subl
subl
mov
mov
xor
xor
adcl
or
adcl
shl
add
add
add
mov
mov
adc
mov
and
shrd
cmpl
movl
not
mov
mov
jmp
movl
movl
jge
pushl
pushl
push
pushl
push
push
call
sbb
add
or
or
xor
or
add
mov
movl
cmpl
mov
movl
mov
jmp
movl
movl
jg
push
push
pushl
call
add
sbbl
mov
adc
mov
xor
mov
addl
sub
shr
movl
mov
or
mov
addl
xor
shl
cmpl
movl
mov
not
jmp
movl
ja
pushl
push
push
push
call
xorl
xor
incl
xorl
subl
sub
xor
mov
sub
or
cmpl
mov
mov
movl
jmp
mov
jl
push
call
addl
adc
xor
neg
mov
mov
add
sbb
and
mov
movl
mov
and
mov
movl
mov
add
movl
mov
mov
adc
jmp
ret
mov
dec
rcrl
xchg
mov
add
loop
pop
les
adc
mov
out
add
shrl
xor
mov
sar
cmpsb
std
std
dec
test
js,pn
xlat
pop
clc
and
fnsave
pop
mov
mov
lea
loopne
mov
js
jmp
out
xchg
cmp
sub
push
frstor
xor
aaa
ja
push
outsb
cmpb
cmpsb
ds
pushf
fldt
ds
in
imul
push
out
ret
call
dec
inc
and
sbb
adc
out
pop
jmp
sbb
and
cmpsb
jmp
stos
inc
popf
mov
hlt
jnp
jmp
jg
dec
or
pop
lods
mov
and
nop
add
mov
jno
cmp
imul
mov
jo
push
adc
cmpsb
and
xor
xor
lods
call
loop
dec
ljmp
mov
mov
xchg
dec
clc
pop
jbe
push
sbbb
sub
jne
mov
sbb
aaa
repz
inc
or
pop
lret
or
lods
mov
mov
mov
xchg
hlt
jl
insl
jnp
jb
jecxz
and
jmp
es
jo
xchg
sub
lods
add
cmp
cmp
mov
jo
mov
jae
movsb
jmp
or
hlt
aas
lods
test
or
clc
les
mov
sub
cmp
xlat
cmpsb
and
cmc
cld
xchg
jmp
mov
add
iret
dec
fnsave
pop
fwait
int
xchg
sbb
cmp
iret
mov
jnp
fwait
pop
repnz
adc
xor
scas
xchg
push
lret
xchg
lea
fsubs
xor
mov
mov
fidivrl
hlt
mov
je
push
into
cltd
pop
test
cmpsb
cmp
clc
cmp
fwait
mov
sbb
pushf
pop
lcall
scas
lock
mov
leave
stos
in
mov
mov
or
leave
lret
sti
xor
fs
call
mov
test
rcl
xchg
cmpsl
outsb
cmpsb
das
or
mov
inc
cmpsl
out
pop
xor
jno
jmp
rolb
es
pop
adc
rcr
pop
fsincos
dec
cmp
jno
leave
mov
int
ss
push
push
dec
std
and
mov
xchg
jg
sub
aam
add
popf
dec
lret
and
or
int
pushf
nop
add
ljmp
mov
push
test
fwait
or
inc
pop
and
pop
add
pop
addr16
scas
fdivrs
adc
movsl
test
and
add
aad
pop
mov
cmp
les
xlat
loope
push
in
imul
outsl
dec
repz
ficompl
lock
leave
xchg
neg
mov
xchg
mov
inc
icebp
in
adc
stos
bound
pop
push
sti
shlb
lahf
mov
mov
lret
jecxz
ds
pop
outsl
and
push
sbb
lods
outsl
test
fwait
call
mov
or
in
inc
imul
scas
arpl
addr16
clc
int
jae
hlt
push
fmull
jne
pop
jno
pop
scas
jnp
adc
inc
xchg
js
dec
in
mov
sub
call
aaa
sub
subb
gs
cmp
cmpsl
nop
inc
adc
std
inc
sub
xlat
stc
iret
and
mov
add
xchg
jo
repnz
mov
aaa
and
push
vmovlps
sbb
sahf
lret
and
jg
lret
xchg
imull
mov
and
out
pop
dec
adc
mov
pop
repnz
xchg
cld
imul
adc
insl
dec
js
lcall
outsl
cmp
js
pop
pop
js
sbb
ljmp
outsl
push
rclb
int3
in
rolb
jne
icebp
push
in
test
das
sarb
mov
insb
stos
addr16
stc
pushf
cltd
ret
mov
inc
clc
arpl
push
sbb
mov
jb
popa
ret
mov
stos
mov
jg
inc
lock
mov
ficoms
addr16
sbb
jp
loop
gs
mov
mov
xchg
sbb
aad
cmp
mov
nop
sub
and
inc
push
popf
jb
enter
xchg
notb
gs
xchg
dec
xor
sub
mov
mov
cltd
nop
fisubrl
cld
pop
pop
cwtl
popf
aaa
mov
enter
or
int3
add
add
mov
jl
dec
imul
mov
xor
addr16
insb
pop
sbb
shlb
lea
push
jne
int
test
and
dec
je
cmp
sarl
mov
and
jecxz
in
test
insb
ljmp
shr
out
push
xor
mov
jbe
inc
jno
push
loopne
int3
dec
ror
ret
lahf
and
xlat
and
mov
mov
lods
push
jnp
inc
icebp
int
lcall
mov
mov
dec
push
xchg
insl
xorl
pushf
pop
sub
aad
or
lock
mov
xchg
or
or
les
push
dec
push
aaa
pop
pop
xchg
and
out
hlt
mov
jmp
add
lcall
and
call
xchg
daa
ljmp
inc
gs
mov
test
dec
fadds
mov
stos
rcrl
punpcklbw
nop
and
mov
mov
scas
jne
insb
jo
sub
in
divl
popf
push
xchg
jbe
xorb
and
lcall
dec
les
dec
xchg
push
adc
nop
dec
pop
dec
and
xchg
ljmp
cmpsb
hlt
dec
and
cltd
ljmp
push
push
inc
adc
jno
push
push
ficomps
ret
jne
or
nopl
incl
out
test
xchg
cmp
dec
aaa
lcall
dec
cld
shl
imull
pop
jl
cmp
jo
cmp
xor
pop
pop
dec
testl
mov
jmp
mov
cmp
add
mov
mov
or
sbb
cwtl
mov
jae
dec
call
mov
iret
fwait
in
jno
out
mov
xor
mov
es
adc
mov
jp
andl
sub
jg
in
jae
sti
pushf
inc
dec
addl
shlb
xor
jge
in
jne
bound
push
aas
fsub
or
adc
xor
or
push
fsubrs
mov
movsl
cltd
scas
pop
push
jb
movsb
jbe
sub
mov
test
mov
loop
leave
xor
dec
sbb
lret
lea
cmp
pop
movsl
nop
jl
sub
and
jecxz
je
js
sub
or
and
data16
stos
dec
jb
sub
lock
mov
push
jecxz
test
outsb
cmpsb
mov
movl
jmp
lods
jp
scas
adc
xchg
mov
pop
fisttpl
ja
add
or
mov
fs
stos
fsubr
mov
mov
repz
imul
push
mov
test
mov
mov
sbb
push
out
cmp
dec
std
dec
adc
pop
and
jne
cmp
aas
pop
jnp
sub
jnp
js
icebp
adc
mov
add
cmpl
daa
nopl
mov
mov
pop
add
mov
xchg
cmp
stos
add
jne
jl
lret
sub
xchg
push
jnp
or
push
mov
fisubs
repz
dec
pop
jmp
jnp
push
ljmp
iret
adc
mov
iret
ds
rcrl
mov
imul
mov
jl
sbb
movsl
cmp
cmp
dec
loope
inc
adc
insb
mov
mov
inc
add
lahf
cli
imul
xchg
inc
divb
sahf
daa
sarl
mov
clc
pop
test
jp
adc
mov
jae
adc
pop
dec
cmp
add
xstore-rng
cmpsl
inc
rcrb
int
adcl
inc
inc
mov
xchg
ja
jmp
leave
rclb
push
out
xchg
jno
rorb
rorl
pop
out
mov
arpl
cltd
mov
loope
adc
addr16
mov
inc
adc
aas
sbb
jle
sub
fisttpl
jns
pop
sbbl
movsb
jmp
cmc
or
xchg
sahf
cwtl
push
test
in
ljmp
add
mov
sbb
xor
sbb
mov
pop
aas
pop
data16
movb
gs
not
repz
xor
xlat
int
test
stc
mov
mov
shrb
fcoms
inc
stos
add
cmpsb
mov
int
gs
and
scas
div
inc
cmpsb
movsb
dec
push
out
xor
jns
xor
rolb
mov
cmp
test
sarl
mov
in
sbb
and
jne
mov
sbb
xor
jno
sub
add
lahf
sbb
and
mov
mov
in
and
jmp
mov
fsubl
add
xchg
ret
negb
dec
movsl
push
popf
mov
pop
int
mov
dec
dec
jb
test
in
movsl
add
shr
push
pop
fsubrs
dec
jl
mov
cltd
inc
jp
movb
mov
test
pop
push
push
push
das
sahf
into
ret
jbe
push
call
adc
mov
mov
jecxz
pop
and
cs
clc
add
setge
aad
cmp
loopne
arpl
mov
adc
cmp
cmp
ss
mov
mov
push
subb
pop
pop
imul
imulb
aad
jg
add
jno
cli
xor
xor
xchg
popa
push
jbe
sbbb
cmp
rcrl
fbstp
or
dec
out
and
ffree
and
cli
mov
adc
pop
aad
cmp
in
adc
shlb
cwtl
in
data16
out
cmpsb
cmp
imul
popa
xor
sbbl
sub
cmp
or
push
divps
std
cmova
sub
cmp
lret
jne
sub
loope
push
mov
pop
jmp
or
dec
leave
vmaskmovdqu
stc
testl
pop
inc
cwtl
jmp
popa
dec
push
test
jg
into
outsl
movsb
mov
xchg
pop
ds
or
inc
xchg
loopne
push
mov
inc
insb
dec
sub
aam
add
pop
mov
push
imul
mov
into
jle
clc
imul
push
jb
sub
push
int
push
and
pop
jle
cmp
in
ds
pop
sbb
mov
mov
es
mull
cmp
daa
jp
ret
mov
dec
clc
inc
test
jae
ret
test
adc
push
aam
mov
aad
lods
pusha
jg
andl
loop
add
push
mov
inc
pop
mov
cmpsl
sub
repnz
cmpsl
sbb
repz
mov
xor
mov
pop
loopne
outsb
enter
and
mov
cmp
mov
push
js
push
add
fisubrl
fwait
roll
push
daa
enter
push
or
xchg
jle
inc
subb
xchg
mov
inc
sub
cmp
out
cltd
js
les
fs
jecxz
dec
dec
inc
sub
mov
int
sbb
cmp
stc
daa
jbe
mov
pop
test
das
ficoms
xor
hlt
jl
cli
sbb
fnstenv
cli
mov
and
cld
mov
push
mov
push
xchg
dec
in
aaa
jnp
push
mov
sub
addr16
adcl
adc
adc
pusha
xchg
dec
xchg
xchg
and
pop
inc
movsl
push
mov
push
ret
idivb
nop
imul
pop
test
popf
sbb
push
call
pop
xor
mov
dec
in
je
das
mov
fcmovbe
jl
inc
lahf
arpl
pop
in
mov
jne
or
mov
sub
insb
inc
hlt
iret
add
mov
popf
jg
cmp
les
call
adc
xor
xchg
pusha
repz
roll
insb
xchg
adc
cwtl
fisubl
inc
or
lds
pop
out
sahf
xchg
sub
shll
adc
push
add
jae
int
xor
xor
or
mov
gs
xchg
inc
push
loope
daa
cmc
xchg
sti
pop
lcall
xchg
test
cli
fidivrs
jecxz
or
in
sti
add
test
cld
push
mov
pop
lods
mov
clc
jmp
push
add
mov
pop
das
sarl
rcll
sub
bound
adc
insb
xlat
dec
pop
or
push
iret
lcall
adc
xor
fistl
inc
enter
mov
imul
insb
inc
inc
lcall
jbe
int3
cmc
mov
xchg
js
push
mov
sbb
movsl
repnz
jmp
mov
adc
or
mov
addr16
rorl
pusha
mov
ja
xor
ss
mov
jns
or
test
fnsave
das
jmp
into
mov
iret
test
sbb
sbb
lcall
mov
pop
mov
push
mov
adc
adc
cmp
inc
out
or
ss
out
fnstsw
leave
data16
mov
aas
jnp
lahf
pop
and
sbb
lock
hlt
xchg
enter
mov
mov
mov
shrd
jmp
add
dec
push
adc
call
mov
ja
sub
out
fisttpll
dec
outsb
sbb
test
mov
push
push
or
icebp
lahf
in
packssdw
adc
cli
adc
movsl
jl
jne
lea
loop
cmp
add
gs
hlt
lahf
push
es
push
ja
subl
xor
sahf
imul
lock
std
loop
ds
test
daa
nop
mov
insl
stc
jb
xchg
inc
aas
lret
add
sbb
mov
and
xchg
cmp
jns
fisttpl
lods
movsl
push
loopne
loope
and
add
mov
sbb
mov
in
or
or
or
mov
jge
mov
xchg
in
mov
and
push
stos
addb
jl
cli
sub
xor
or
std
fcompl
std
add
mov
xlat
push
test
shll
jo
mov
js
mov
addr16
push
scas
lcall
and
std
push
sub
xor
loopne
in
fidivrs
aam
sbb
push
mov
adc
sahf
sbb
xor
pop
shll
inc
daa
pusha
lds
push
ret
mov
xor
pushw
mov
jmp
arpl
test
sub
fildll
sub
jp
dec
in
dec
and
fnsetpm(287
adc
push
in
in
clc
push
test
push
dec
pop
ficomps
jno
or
sbb
xlat
ljmp
aas
arpl
or
sub
jle
dec
pop
and
fistpll
dec
clc
pusha
lock
pop
pop
push
jge
subb
aaa
shll
jnp
test
pop
and
sub
iret
dec
lret
rolb
cmp
lahf
xchg
sub
clc
cmp
cmp
push
movsl
push
push
popf
fisubs
outsl
cmp
ret
flds
xchg
dec
fwait
sbb
test
inc
jnp
ret
aaa
mov
inc
mov
mov
jbe
lods
cli
cmp
stc
xchg
dec
ds
xor
call
hlt
xor
arpl
fisubrl
pop
arpl
ljmp
inc
push
outsb
add
mov
aam
adc
jno
leave
jg
pop
pcmpeqw
lds
popf
mov
mov
aad
outsl
bound
dec
jnp
mov
jns
jmp
add
mov
je
mov
add
mov
subb
xor
and
and
arpl
mov
repz
test
fnstcw
into
inc
stos
push
lret
xor
and
aam
push
popa
jmp
dec
das
pop
add
and
pushf
jns
pop
xor
cmp
iret
test
dec
or
fnstenv
out
cmpsl
cltd
aad
and
and
cmp
push
hlt
push
xor
xlat
or
outsl
pusha
sub
or
cwtl
cli
test
dec
or
lods
and
pop
mulb
pop
lcall
mov
mov
cltd
mov
jae
mov
jg
mov
mov
mov
popa
rep
inc
dec
inc
cmpsl
sbb
cmc
pop
sub
mov
mov
mov
inc
cmp
hlt
popf
sub
pop
es
mov
sarl
push
and
dec
fildll
in
pop
xchg
daa
or
scas
jnp
push
mov
movsb
fldt
mov
rcrb
aam
jmp
lret
and
data16
fimull
pop
mov
aad
add
hlt
lock
cmp
insl
and
sbb
punpckhdq
mov
enter
mov
ret
outsl
decb
push
mov
outsb
inc
or
sub
xchg
imul
pushf
imul
and
pushf
stos
xor
and
fwait
mov
xchg
arpl
mov
sub
sub
dec
pop
out
nop
dec
stos
hlt
mov
mov
push
mov
xor
in
inc
sub
mov
dec
lea
fimull
ret
aaa
pop
adc
sub
call
sbb
or
outsb
adc
data16
or
pop
test
jmp
mov
push
inc
aas
scas
insb
push
sarl
or
fs
add
jmp
add
pop
mov
mov
sar
or
jecxz
sbb
js
pop
andb
scas
addr16
test
aas
out
stos
sub
and
outsb
dec
sbbl
mov
sti
pop
mov
int3
rolb
hlt
mov
cmp
into
jl
call
fstpl
rorb
pop
pop
add
xchg
xor
loope
sbb
sbb
cmp
mov
mov
bound
pop
xchg
sbb
mov
insl
jbe
sbb
add
rcll
popa
sbb
push
lahf
or
push
insb
push
addl
mov
xchg
xchg
imulb
lcall
or
fadd
or
leave
or
mul
fcompl
mov
pop
push
jo
xchg
xlat
and
or
xor
cmp
test
push
xor
test
mov
dec
push
lods
pop
outsl
jmp
dec
jns
jne
sub
lcall
xchg
and
sahf
mov
dec
movsl
jp
mov
jl
jmp
and
xor
fnstenv
push
bound
iret
inc
dec
jmp
cmp
pop
inc
push
lret
mov
sbb
adc
adc
in
lock
fiadds
stos
pushf
mov
xchg
jl
mov
in
cwtl
add
and
sbb
popf
rcr
pop
jge
push
jp
sub
cmp
icebp
dec
dec
sub
or
pop
sbb
xor
jle
xchg
lds
jg
mov
filds
int3
pop
rorb
int
lods
mull
dec
unpckhps
cmc
sub
scas
pop
push
mov
dec
shlb
sub
sbb
mov
mov
lods
sub
mov
cmc
jne
cld
pop
jnp
ja
enter
push
or
mov
call
fisubl
add
mov
scas
xchg
xchg
jbe
adc
add
xchg
push
xor
insb
ret
iret
cld
mov
inc
mov
ss
mov
test
mov
jecxz
idivb
push
lret
lret
psraw
ss
movsl
test
fildll
dec
movsl
xor
pusha
adc
lret
xlat
out
pushw
inc
aaa
insb
sbb
popf
inc
insl
test
addl
xchg
adc
rolb
cltd
or
inc
in
scas
xor
pusha
mov
mov
mov
dec
ss
leave
nop
fs
imul
test
pop
test
or
dec
lock
xor
shrl
sbbl
fldt
fcompl
and
inc
fisubl
add
jmp
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
jmp
in
in
data16
push
sbb
pop
fadd
sub
ja
lods
out
orb
loop
sub
fldt
pusha
xor
dec
sbb
mov
or
xchg
adc
lds
daa
outsb
mov
xchg
cmp
addl
or
jp
pop
adc
pop
jns
push
jmp
and
das
loopne
mov
or
in
or
lods
sub
test
and
xor
mov
insl
aas
mov
mov
call
add
xor
and
test
dec
les
jb
jp
mov
shrl
add
fwait
movsl
ret
mov
mov
sub
movsb
sbb
dec
dec
xor
mov
jle
addb
cmpsl
add
dec
cmp
pop
aas
aad
push
inc
cmp
repz
add
jmp
sub
jns
into
push
mov
xor
mov
aas
shll
in
add
ret
jmp
mov
jmp
xchg
pop
mov
pop
push
jle
sub
jb
les
mov
das
push
cmpsl
icebp
sub
adc
jns
dec
xchg
jae
mull
mov
mov
dec
push
push
ficompl
leave
std
cmpb
out
data16
inc
push
jecxz
popf
addr16
pop
stc
cmp
jb
popf
fs
or
add
and
adc
jo
add
xchg
adc
movsb
incl
push
push
pusha
and
inc
or
daa
jo
sub
bound
scas
or
out
sub
fidivl
out
and
call
test
sub
es
push
push
dec
call
inc
xchg
push
jne
jb
lcall
xor
push
adc
dec
cmp
mov
cmp
sub
jae
sbb
out
dec
dec
fiadds
pop
pushf
adc
cmpsb
lret
xor
movsb
es
sub
popa
jnp
cld
sbb
js
push
enter
fcompl
xchg
fistl
cmp
loope
inc
aaa
sub
sbb
and
mov
aad
loop,pt
pop
pop
lea
lret
data16
mov
cmp
mov
cmc
cmpsb
push
pop
add
xlat
xchg
loopne
push
add
mov
insl
mov
pop
adc
jnp
sub
push
cld
jmp
mov
lea
dec
dec
adc
stc
in
pop
sbb
xor
xor
out
cld
mov
add
and
add
push
leave
repz
ret
mov
sub
inc
sub
xchg
lds
in
mov
jne
mov
mov
cmp
std
mov
int
movsb
dec
cmp
cmpsl
stos
imul
mov
in
inc
jg
push
add
shll
xchg
mov
ljmp
cmp
xchg
push
es
lea
mov
mov
add
call
js
js
add
xor
dec
adc
sub
xchg
mov
test
mov
repnz
pushf
jns
mov
inc
mov
add
add
ret
xchg
sbb
jl
jbe
adc
cwtl
cmp
fwait
jg
cmp
jle
ds
inc
test
dec
rcll
xchg
push
dec
loopne
aaa
push
mov
mov
mov
bound
test
add
adc
lcall
jnp
inc
mov
outsl
ja
call
imul
lahf
std
ss
push
call
dec
inc
enter
aam
notl
testl
inc
pop
jbe
pop
or
int3
cmp
mov
and
repz
pop
mov
xchg
xchg
lods
pop
aad
cmp
adc
xchg
inc
lock
push
jge
cmp
scas
push
ret
push
adc
xchg
or
fxch
mov
sub
add
jle
sbb
in
inc
sbb
mov
mov
out
sbb
pop
iret
out
outsb
or
sahf
sbb
mov
push
sbb
push
cwtl
mov
mov
enter
cmpb
cmp
dec
or
popa
cltd
inc
adc
mov
call
cwtl
in
add
mov
fisubrl
movl
popa
sub
cmp
xchg
inc
mov
into
push
fldt
ss
dec
inc
and
stc
push
jmp
adc
cmp
testb
mov
scas
push
leave
dec
or
push
int3
cli
sbb
mov
dec
mov
mov
jge
fsubrs
add
adc
pop
push
pop
pusha
mov
loop
adc
repnz
add
fwait
mov
cmp
xchg
repz
dec
mov
lcall
dec
mov
gs
add
add
ret
je
mov
inc
test
fmul
loope
dec
rcr
dec
xchg
dec
aas
pop
jmp
cmp
mov
push
jae
sbb
mov
mov
roll
js
scas
fcomip
sti
dec
into
inc
xor
push
xchg
pop
nop
or
lcall
pop
push
imul
and
mov
ficoms
adc
xchg
cmpsl
pushf
or
stos
or
cmc
mov
lods
mov
lret
loop
nop
adc
mov
gs
mov
in
fcom
leave
test
or
jmp
dec
jbe
in
adc
mov
loopne
pop
push
jb
in
sarl
lcall
dec
jae
ficoms
mov
aad
pop
and
jno
fbstp
rorl
mov
in
sub
scas
arpl
mov
adc
icebp
cli
push
add
sbb
in
jge
mov
jl
les
add
xchg
inc
daa
rorl
adc
aaa
out
adc
inc
lock
sbb
dec
mov
nop
in
fdivr
xor
mov
fisubl
rcl
adc
vmovhps
pop
push
push
shll
test
xchg
out
in
cmp
cwtl
out
les
cmpb
jmp
pushf
lods
stos
or
sub
cmp
cmpl
repz
in
mov
and
jg
push
sbb
mov
rorb
ja
or
cmpsb
sub
les
mov
mov
sbb
mov
mov
std
pop
push
push
in
or
mov
js
cmp
std
push
cmp
pop
rolb
adc
stos
push
adc
daa
pop
addl
jg
and
stc
adc
les
lret
xchg
mov
pop
paddusw
bound
add
ljmp
out
sub
pop
and
mov
mov
jae
cmp
gs
lea
repz
movsb
stc
lret
lea
mov
pop
add
rcrb
dec
rorb
push
mov
xor
xor
or
mov
mov
xor
jmp
outsb
hlt
xorl
in
mov
xchg
jnp
cli
sub
enter
out
es
pushf
push
xor
xor
jl
cmpsb
xchg
pop
adc
cmpb
addr16
fiaddl
shll
pop
es
or
cmp
inc
imul
pop
aas
out
push
adc
adc
jle
dec
shlb
lods
in
es
scas
jl
sub
aas
icebp
fidivs
pop
stos
add
adc
and
scas
mov
push
mov
leave
cwtl
cmc
xor
lahf
gs
fmul
jno
addr16
xchg
push
adc
jns
stc
fldl
mov
sbb
and
inc
je
sahf
push
mov
sbb
stos
in
mov
adc
lods
ja
andb
sbb
xor
cs
sub
fsubrs
test
nop
jae
mov
imul
imul
jb
or
xor
addb
mov
in
or
pop
adc
adc
sub
add
enter
add
sub
les
mov
ret
stos
xor
loopne
fisubrl
inc
dec
movsl
dec
iret
imul
int
inc
or
sbb
imul
lods
subl
jbe
sti
ljmp
pop
pop
cwtl
adc
sub
sub
sbb
cmc
fbstp
lret
or
cmp
sub
sbb
push
in
cmc
inc
adc
jb
add
xchg
and
mov
nop
cmp
lods
ficoms
jmp
sbb
out
testb
or
repz
pushl
adc
lret
popf
pushf
ss
push
adc
out
leave
cs
add
mov
dec
out
xchg
test
insb
xor
popa
pop
call
test
pusha
adc
pushf
mov
inc
roll
cld
cwtl
jmp
jb
pop
dec
mov
mov
jnp
mov
in
repnz
mov
xchg
out
jno
adc
movsb
pop
pop
mov
mov
fdivrl
bound
clc
push
lds
sti
mov
sahf
mov
call
fisubl
fs
inc
hlt
jo
sti
shll
bound
pusha
adc
ss
sti
sbb
pushf
xchg
ficoml
mov
pop
repnz
inc
les
movsl
filds
inc
pop
sub
dec
out
push
adc
sub
mov
add
dec
push
cmp
icebp
lock
mov
xlat
fidivs
xchg
popa
push
sub
ljmp
lret
jg
sub
gs
addr16
dec
int
push
jl
push
aas
push
js
iret
in
test
sbb
xor
outsl
inc
enter
jb
sub
lret
sahf
in
adc
stc
and
sub
mov
xchg
adc
lret
js
push
mov
adc
gs
add
fsubs
fwait
push
pop
stc
xchg
ss
sahf
enter
cwtl
adc
lahf
lret
rolb
addr16
mov
add
pop
aas
outsl
or
int3
inc
nop
jb
sub
adc
notb
out
fstpt
fwait
pushf
movsb
and
popa
cmpb
gs
cmp
cli
cmpsb
call
pop
mov
adc
outsb
xor
or
inc
mov
pop
xor
repz
xchg
mov
pop
or
into
aaa
cmc
insl
popa
insb
mov
jmp
js
dec
test
fmuls
sub
insb
mov
aad
push
sub
xchg
mov
dec
push
aas
lret
lea
fsubrs
test
stos
cmpsb
mov
shr
mov
adc
pop
mov
stos
out
jmp
or
xor
stos
push
cli
xor
sbb
leave
jne
enter
push
sbb
cld
and
mul
jns
cmp
push
pop
mov
and
push
jg
xchg
xchg
or
ja
push
cmp
lret
cmp
es
and
inc
push
push
fwait
in
icebp
or
orb
arpl
xchg
sarl
addr16
xchg
inc
sub
outsb
scas
adc
cltd
out
dec
mov
addr16
xchg
stos
mov
mov
push
pop
cld
mov
xchg
xlat
shl
mov
sbb
mov
imul
andb
and
lret
pusha
push
xchg
cmp
mov
lea
pop
mov
stc
push
loope
aam
roll
inc
arpl
jmp
ss
sub
mov
mov
jo
mov
push
lods
adc
dec
add
cltd
add
mov
adc
out
add
fwait
test
stos
idivb
sub
dec
adc
xor
xor
mov
bound
rcrb
ret
mov
lret
push
add
jo
push
sub
hlt
in
push
mov
fs
into
repnz
mov
call
rcr
inc
cmpsl
lret
xchg
xchg
rcl
push
mov
lret
fisttps
sbbb
or
mov
insl
add
or
mov
out
scas
mov
jb
and
jp
sub
leave
mov
daa
add
vmovdqu
adc
dec
in
stc
cmpsb
ret
lea
imul
add
addr16
outsl
mov
jb
pop
ss
xchg
testl
test
enter
pushf
inc
mov
mov
mov
adc
jle
shlb
repnz
mov
xor
fbstp
out
jns
inc
mov
jbe
bound
dec
lcall
stos
sub
mov
popl
icebp
sarb
sub
sbb
and
lcall
insb
sub
ret
inc
test
mov
jmp
outsl
inc
fsub
push
lcall
stc
test
cmp
sub
jns
jnp
outsb
mov
js
mov
mov
ljmp
in
scas
adc
lret
outsb
push
push
pusha
fsubrs
call
or
loop
stc
push
or
jmp
jae
test
daa
aad
mov
daa
xlat
pop
dec
sbb
cmp
or
out
or
fistps
es
xor
int
jbe
xor
fidivrl
pop
pop
or
pop
mov
push
rorb
and
push
sbb
mov
jae
inc
fidivs
mov
addb
addl
dec
movl
mov
andb
aad
ds
push
lods
and
outsl
mov
rorb
loopne
mov
or
sub
sbb
das
scas
mov
imul
fisttpl
xchg
sets
fwait
in
stos
or
clc
adc
outsb
xchg
dec
out
inc
loopne
dec
in
lods
enter
add
in
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
add
mov
inc
mov
ja
cmp
mov
jg
fistl
or
ljmp
test
sbb
shrb
cmp
mov
mov
jae
cltd
sbb
adc
mov
push
sbbb
sbb
stos
ds
hlt
xchg
stc
xchg
lcall
sub
cltd
inc
scas
mov
adc
pop
mov
lock
bnd
mov
daa
shl
das
adc
cmp
xchg
cs
mov
mov
scas
repz
xchg
lcall
mov
int3
daa
mov
inc
out
popa
cld
stos
or
insl
sub
xor
add
out
xor
mov
jb
push
pop
lret
xchg
pop
pusha
push
mov
ret
cmc
cmpb
and
repz
and
xchg
dec
stos
adc
nop
pop
lods
adc
pop
jmp
addl
leave
push
xor
jge
popa
cld
iret
pop
stos
popf
fs
cli
jmp
pusha
push
shlb
jne
cmpsb
jo
cltd
xchg
aad
test
mov
cmpsl
and
and
loop
call
cmpsl
cmp
dec
mov
popa
aam
inc
jg
dec
sbb
packssdw
inc
out
aad
dec
cmpsl
mov
cmp
mov
cmpsl
and
pop
out
xchg
pusha
inc
cmova
push
js
into
gs
sahf
push
mov
cmc
jb
mov
in
or
cmp
in
lahf
call
inc
incb
mov
mov
fs
insl
dec
fmull
cmpsb
gs
dec
inc
push
pop
sub
pop
mulb
sub
bnd
mov
sbb
jb
adc
mov
lock
lds
push
pxor
aaa
add
push
sar
pop
jnp
mov
adc
xchg
mov
sbb
lahf
lret
lret
or
mov
mov
stos
mov
pop
push
and
dec
inc
cli
mov
mov
les
sbb
fisubl
je
xchg
lret
sbb
fs
fidivl
stc
and
fcmove
fstpt
fadd
out
xor
ds
adc
call
sub
int3
aad
shll
and
mov
je
test
xchg
shlb
or
pop
adc
jae
icebp
jecxz
xlat
xchg
xor
jo
or
int
mov
lahf
cmc
push
pop
push
or
dec
pop
xchg
les
add
andl
pop
jge
mov
push
mov
rcrb
cmp
call
adcb
lret
aas
push
adc
and
and
test
das
mov
sub
mov
popf
jp
cli
adc
sbb
sahf
pop
inc
xlat
stos
pop
mov
mov
lret
insl
mov
jae
movsb
mov
sbb
loop
cwtl
cmp
ljmp
out
mov
xor
dec
cs
jmp
bound
aad
rcl
pop
push
sub
popf
jg
fistps
jle
xchg
inc
jg
xchg
daa
adc
sbb
add
in
aad
mov
xchg
xor
in
xor
mov
iret
test
push
out
jae
cmp
and
imul
xor
or
add
dec
jnp
inc
jns
lret
push
ret
sbb
sbbb
mov
pop
cmp
dec
je
or
sub
addb
lods
jbe
add
mov
add
add
mov
lahf
push
and
lret
and
jb,pt
sub
out
xchg
sti
in
mov
and
and
fcomps
adc
fldl
adc
repnz
mov
shll
mov
sub
cmp
sahf
pop
fimuls
movsb
rorb
hlt
xor
pop
jns
shrb
push
cmp
mov
and
xchg
test
icebp
popf
repnz
jns
xchg
cmp
ret
cmp
or
jmp
rcrw
or
daa
out
inc
mov
and
adc
add
mov
sbb
sarl
sbb
mov
arpl
sub
jne
loopne
fcmovbe
shlb
and
mov
mov
pop
xchg
xor
test
stos
insl
int3
lods
mov
push
cmp
xor
push
push
or
loope
mov
push
or
adc
incl
jns
stos
rorb
inc
roll
cmpl
adc
dec
jle,pt
ja
inc
in
in
lock
mov
fistl
add
loope
or
arpl
insb
sbb
pop
xor
in
pop
lret
andl
adc
inc
and
test
lahf
into
cmpsb
dec
pusha
outsb
dec
or
sub
ret
adc
jbe
pop
mov
hlt
or
bswap
and
inc
fwait
cmp
dec
mov
dec
xchg
insl
and
pop
loopne
dec
push
xchg
and
xchg
pop
das
mov
jae
dec
dec
js
dec
add
outsl
cs
push
rcrl
rcll
xchg
movsl
dec
bound
adc
lret
xor
or
mov
pop
mov
cltd
push
das
mov
cmpsl
adc
add
es
and
outsb
inc
and
dec
inc
mov
out
xchg
loope
cld
add
cs
in
pop
call
inc
adc
mov
cmp
or
add
aas
mov
je
cmp
shlb
cs
movsb
xlat
fwait
cli
sahf
jns
jo
fwait
jle
jge
mov
jns
fisubl
test
testb
in
dec
jnp
fidivl
lods
leave
in
iret
into
push
pop
leave
int3
cmovg
mov
or
add
cmpsb
sbb
out
push
jbe
pop
mov
dec
lods
fimull
push
dec
pop
das
fmulp
xor
or
adc
add
xor
nop
mov
xor
loopne
loop
int
xor
test
movsb
pop
adc
push
jae
call
iret
mov
inc
out
and
dec
fcomi
loopne
cmp
lds
xchg
out
aas
into
and
cmp
rcll
mov
sbb
xor
push
and
mov
pop
shl
das
inc
setae
cmp
pop
js
sbb
jge
or
adc
js
xor
push
cmpl
jp
imul
mov
and
lock
cld
xchg
xchg
stos
sti
pop
bound
in
loope
push
xor
mov
mov
push
es
lahf
and
pop
test
pop
loopne
std
rorb
out
mov
jnp
mov
mov
adc
adc
xor
dec
mov
jne
pop
nop
push
xchg
pop
jl
sahf
push
pop
rclb
dec
add
or
mov
and
mov
sub
or
inc
push
push
outsb
in
push
bound
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
orl
push
cmpb
jg
inc
iret
mov
xcrypt-cbc
cmpsl
push
sbb
je
cld
push
jle
push
roll
push
push
addb
sub
adc
call
pop
imul
es
fidivrs
dec
push
adc
movsb
xchg
test
adc
cld
in
and
daa
adcl
or
push
mov
sub
dec
dec
mov
frstor
filds
xchg
or
push
cmpsl
push
frstor
js
icebp
stc
sbb
dec
adc
sub
sbb
jg
cmp
mov
cmp
stos
push
mov
jb
mov
dec
mov
mov
negb
and
or
add
or
cmpsl
mov
pop
jbe
lret
jb
js
inc
jecxz
or
jns
enter
dec
or
int
aas
mov
dec
and
lds
mov
cs
cmp
pop
in
sbbl
lock
cmpsb
jecxz
fcmovne
push
mov
mov
mov
cmp
leave
sti
push
xor
mov
dec
adc
or
mov
dec
sub
add
inc
push
jb
lea
cld
xchg
mov
mov
lret
lahf
pop
inc
xor
out
mov
mov
scas
inc
mov
test
call
iret
sti
xchg
inc
std
mov
jb
sbb
mov
daa
xchg
and
mov
jge
adc
or
das
xor
add
push
shrb
imul
pop
lcall
orl
mov
std
repnz
out
mov
xor
pop
sti
subb
jo
or
push
test
psubsw
nop
sub
lcall
inc
or
shll
test
jecxz
mov
add
movsb
sub
ret
test
and
test
packssdw
imul
dec
movsl
out
cmp
pop
push
push
fwait
mov
pusha
jmp
or
bound
adc
rclb
divl
ss
enter
mov
outsb
xor
xchg
sub
in
outsl
jl
push
shrb
sbbb
xor
iret
mov
test
popf
push
xor
inc
shr
pop
rorb
xor
pop
sbb
push
pop
test
insb
push
or
mov
nop
mov
push
fdivs
clc
pop
jl
sahf
outsl
jecxz
lock
loope
ret
mov
jg
lret
dec
mov
loope
std
and
scas
fs
movsl
mov
imul
add
and
sbb
xorb
es
mov
add
jmp
mov
mov
sub
shll
add
dec
mov
insl
adc
pop
cmpb
sti
scas
inc
cmp
mov
xchg
popa
nop
mov
lock
popa
in
and
stc
and
cmp
push
xchg
aad
cld
mov
mov
popf
aaa
push
pop
incb
xchg
std
fnstenv
sub
nop
jecxz
pushaw
mov
ret
adc
adc
enter
sti
sbb
push
sub
jmp
mov
out
mov
in
sti
inc
repz
dec
mov
sarb
adc
xor
xor
in
imul
add
cltd
ds
push
jns,pn
sbb
test
repz
addb
in
fwait
mov
ja
push
inc
sbb
xchg
dec
push
mov
or
xchg
pop
pop
cwtl
out
fistpl
out
jmp
push
push
mov
repz
div
lahf
popa
inc
fs
hlt
ljmp
adc
push
cmp
dec
orl
or
mov
loopne
push
sbb
mov
ja
xor
inc
shlb
cmp
push
xorb
cmp
fwait
or
lcall
in
add
cmpsb
bound
nop
xor
outsl
push
or
mov
dec
ror
bound
push
cli
dec
sub
pop
faddl
outsl
int
inc
xchg
insl
cmp
jae
insb
and
shll
mov
inc
mov
mov
shlb
sti
or
inc
sbb
ret
cwtl
sub
pop
mov
xor
lret
sahf
gs
repnz
into
push
and
lahf
inc
mov
push
popf
xor
sbb
or
sbb
jbe
leave
in
push
or
mov
adc
leave
roll
inc
mov
adc
inc
sbb
outsb
out
inc
scas
mov
xorl
ret
xchg
pop
mov
inc
es
mov
insb
out
xor
add
ret
sbb
pop
sub
xor
hlt
pop
push
je
sahf
mov
mov
std
adc
sbb
test
rcrb
lods
aad
lods
mov
outsb
addr16
rcl
xor
iret
jmp
push
shl
shrb
mov
lods
push
xchg
fxtract
push
shl
xchg
cltd
jle
cmp
pop
sub
pusha
mov
mov
mov
adc
mov
xor
nop
std
loopne
push
inc
icebp
xchg
adc
movsb
repnz
lea
loope
call
sub
int3
call
hlt
sbb
jns
or
fbld
int
or
iret
xchg
testl
mov
xor
test
iret
mov
bound
xchg
ret
xchg
jno
out
mov
cmp
ljmp
cvtps2pd
xchg
pop
icebp
sbb
loopne
jb
inc
arpl
jnp
into
shl
push
icebp
jo
loop
lahf
mov
lcall
pop
cmp
shrb
repz
xchg
xchg
aaa
mov
mov
ret
jbe
int3
and
sbb
mov
sub
or
pop
gs
mov
ds
push
mov
dec
pop
xor
cmp
ja
and
sub
sbb
jo
cmp
mov
shr
add
gs
mov
iret
add
and
push
sbb
mov
push
fstl
adc
stos
das
lock
inc
movsl
fsubrs
or
mov
stos
mov
cmpsl
push
or
aas
data16
jle
push
mov
pop
daa
shll
pop
jecxz
inc
addb
push
dec
xchg
mov
sbb
xor
insl
add
cwtl
adc
mov
jae
mov
cli
push
and
lods
and
outsb
and
into
adc
addb
sbb
or
and
aad
mov
cld
sbb
paddsw
cmpsb
popf
sti
insl
cmp
stos
pop
dec
popa
add
lock
cltd
cmc
fdivrl
clc
pop
mov
adc
jns
add
aaa
loop
std
std
mov
fwait
roll
shrl
aaa
data16
inc
cmpsb
xor
popf
adc
mov
push
aad
test
jp
push
mov
or
xchg
fcmovne
mov
cmpsw
int3
xchg
jae
pushf
out
roll
cmp
scas
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
jmp
mov
and
setns
dec
mov
pop
xchg
dec
xchg
ja
aad
sub
fwait
mov
adc
data16
jmp
idivb
jmp
fmulp
leave
cmpsl
cld
std
pop
mov
add
push
adc
mov
int3
clc
push
push
jmp
shlb
repnz
fstpt
les
cmp
add
ret
pop
popa
dec
or
adc
sbb
ficoml
daa
add
lods
adcb
xchg
mov
jae
loop
push
pop
mov
mov
and
mov
nop
mov
ret
jno
jne
inc
jp
mov
mov
loope
into
mov
nop
dec
sbb
aas
pop
cmc
xchg
xlat
mov
lahf
popa
scas
jl
adc
mov
sbb
insb
jge
ljmp
sbbb
rolb
loopne
int3
scas
fs
jne
rorl
lock
inc
imul
sti
mov
cmp
push
fmuls
and
push
and
or
cmpb
sti
das
cmp
jnp
inc
jecxz
mov
sub
in
popa
int3
xchg
pushf
out
loop
ret
shr
sbb
movsb
test
fsubl
sbb
jl
in
aad
fisttps
mov
jbe
cmp
add
mov
cmp
push
sbb
add
ss
sbb
cli
test
nop
out
in
das
mov
icebp
xchg
mov
xchg
scas
and
ret
fs
fwait
icebp
push
outsb
or
movsl
nopl
xchg
cli
xchg
inc
or
and
fbld
sub
xchg
cmc
nop
cmp
dec
pop
or
inc
xchg
xor
xor
cltd
lods
movsb
mov
push
movb
inc
jae
shll
cltd
push
scas
and
inc
or
mov
sahf
push
cmp
hlt
mov
sahf
or
pop
lock
sahf
ja
andl
sbb
rorb
aaa
pop
clc
mov
sub
sub
jno
dec
xchg
icebp
sub
popa
lods
ret
push
scas
or
stos
into
inc
pop
mov
xor
pop
pop
pop
xchg
das
jp
cmc
pop
sahf
adc
mov
or
in
jnp
pop
loop
fwait
jle
aam
mov
sbb
shlb
lret
movsb
pop
sti
lcall
pop
je
nop
sbbb
lock
and
fildl
sbb
mov
pop
push
mov
or
std
sahf
in
mov
jae
dec
mov
sub
stos
icebp
lret
xor
xchg
call
fiadds
sbb
stos
push
je
mov
imulb
mov
mov
sahf
xor
xchg
data16
sbb
pop
mov
push
jecxz
mul
mov
sub
lret
shlb
cmpsl
mov
mov
pushl
or
adc
ret
or
enter
hlt
mov
sbb
iret
jecxz
rcll
cmpsl
pop
icebp
stc
shll
or
mov
and
xor
icebp
push
ret
icebp
out
or
mov
fstps
idivl
cld
lds
jg
daa
sbb
jle
lret
dec
rdpmc
or
lea
pop
cmp
call
or
inc
push
jo
sbb
pop
notl
inc
mov
test
fucomip
fwait
sahf
movsb
test
dec
sbb
bound
sbb
mov
pop
into
dec
mov
jae
fistl
sbb
les
sbb
cmpsb
jbe
into
dec
ret
test
mov
xchg
pop
subl
ds
mov
cmpsl
nop
add
das
sub
gs
xchg
lahf
jbe
test
outsl
testl
shll
pop
mov
adc
pop
cli
imul
in
cmp
mov
arpl
jg
in
adc
rcl
adc
data16
and
jecxz
add
xchg
mov
sub
xor
cmp
dec
xor
push
sub
or
setle
xchg
pop
loopne
pop
or
add
xchg
fcomps
dec
arpl
movsl
pusha
ss
sub
and
push
jae
jbe
scas
ljmp
in
fwait
dec
lock
hlt
movsl
and
bound
das
fyl2x
mov
lods
outsl
cltd
jo
aaa
push
sti
aas
and
insb
push
xor
jae
pop
mov
mov
or
cmp
das
xlat
xor
inc
dec
push
aad
jns
leave
push
pusha
adc
stos
lods
leave
insl
add
xchg
out
out
mov
icebp
or
aas
xlat
shll
pop
gs
mov
clc
lcall
mov
repnz
jne
inc
sbb
insl
or
mov
pop
std
outsl
dec
ss
and
lds
xchg
mov
pop
mov
int
mov
addr16
add
xchg
dec
add
lcall
xchg
sti
je
jbe
jge
cli
push
jmp
or
das
pop
outsb
mov
push
jb
pop
mov
out
push
int
mov
mov
sub
rorb
mov
test
sub
cld
add
and
xchg
push
cs
arpl
outsl
nop
lods
xchg
jne
pop
jge
popa
shr
dec
mov
movsl
out
out
push
add
jnp
pop
nop
jne
in
push
lods
in
xchg
sbb
adc
mov
mov
shll
gs
rcl
les
rclb
aad
andb
leave
inc
and
sub
cmp
enter
ficoms
imul
pop
lahf
out
dec
or
js
ret
pusha
out
stos
jne
scas
cli
repz
dec
pushf
mov
popa
push
inc
and
fadds
pusha
repz
jecxz
nop
loop
jbe
xchg
mov
test
fs
mov
add
xor
mov
sub
or
adc
outsl
dec
push
cmpsl
rol
popa
add
inc
stos
fisttps
jg
dec
sahf
pop
or
mov
mov
mov
frstor
xor
pop
lock
out
and
ss
ret
jp
lahf
cli
dec
lock
dec
lods
mov
dec
loope
xchg
and
adc
add
ljmp
pusha
jl
mov
adc
je
in
test
es
inc
rcll
inc
lret
fwait
or
je
out
sbb
loope
stos
push
mov
mov
imul
xchg
nop
aaa
and
sti
clc
push
cmpsl
xlat
inc
mov
pusha
inc
dec
pop
arpl
and
sbb
push
add
movsb
daa
in
mov
sbb
je
lock
pusha
sahf
shlb
jns
xor
mov
stc
mov
sbb
nop
cltd
cli
or
rclb
js
rorl
insb
stos
mov
push
loope
mov
outsb
repz
xchg
mov
xchg
ret
and
pop
dec
clc
mov
or
cmp
mov
and
dec
stos
add
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
jmp
ret
fwait
mov
and
leave
sub
xchg
push
popa
cmp
cmp
xchg
lret
cmpsb
test
mov
mov
cmc
xlat
div
mov
xchg
xor
jne
dec
jno
rcrl
jecxz
arpl
adc
ds
and
or
mov
and
int3
push
mov
lods
mov
std
pop
sbb
xchg
mov
out
and
cwtl
inc
xor
popf
add
or
adc
cltd
xor
xchg
lds
inc
jg
cmp
inc
les
test
mov
sbb
push
je
jge
ret
fistl
push
xchg
or
addb
fistpl
outsb
inc
incb
stos
sbb
icebp
data16
stc
mov
shl
and
mov
xor
outsb
pop
movd
inc
push
movsb
push
jecxz
sbb
mov
push
js
cld
pop
adc
mov
mov
push
andl
jl
icebp
mov
xchg
loop
or
ret
add
out
and
jge
xchg
ss
aaa
scas
out
jl
adc
mov
pop
jns
pop
shrl
xor
mov
icebp
inc
test
fbstp
sub
pop
popf
hlt
sub
aas
outsb
loopne
xchg
xchg
jp
repz
stos
mov
icebp
hlt
lds
adc
lea
nop
inc
cs
inc
lock
xchg
mov
lcall
xchg
inc
aam
and
out
xor
out
xor
fcomip
andl
sub
cmp
push
movswl
xor
dec
sub
mov
and
jns
sub
push
in
pop
jp
xchg
or
push
jo
dec
mov
outsl
js
mov
push
adc
and
jle
fidivrl
ret
out
insl
fwait
in
ja
lods
ss
out
iret
jb
aaa
mov
mov
enter
cmp
popl
lds
pop
push
int
xor
sbb
das
lcall
fbstp
mov
xchg
aad
and
lods
mov
adc
mov
lods
es
pop
ljmp
xor
pop
inc
mov
cld
loop
mov
test
push
pop
scas
enter
inc
pop
mov
inc
jp
bound
lods
jns
pushf
dec
outsb
cltd
dec
movsl
jb
pop
sbb
shl
mov
xlat
clc
pop
jbe
ljmp
add
int
pop
jle
icebp
icebp
push
repnz
stos
xor
push
scas
in
pop
pop
mov
js
and
push
das
imul
mov
push
adc
pop
icebp
mov
lock
aaa
sbb
loopne
stos
cwtl
sbb
scas
jge
femms
pop
sahf
stc
cltd
adc
push
and
out
adc
faddl
leave
lret
add
clc
inc
aaa
or
adc
xchg
push
jg
ds
int3
xchg
ja
mov
jmp
pop
pop
mov
or
sub
cld
mov
pop
xchg
inc
hlt
shr
hlt
aas
subl
int3
mov
and
outsb
loop
inc
inc
push
gs
icebp
dec
pop
je
imul
inc
push
das
xchg
lock
stos
shlb
lods
xchg
xchg
ja
jno
out
cltd
sub
movsl
stos
pop
sub
dec
pop
jmp
fcomps
lcall
inc
cmp
imul
xchg
or
test
add
repnz
ljmp
sbbl
xchg
pop
ja
add
adcl
ret
inc
xchg
leave
mov
xlat
mov
in
pushf
popa
call
cmp
xor
out
pop
add
sar
sub
inc
mov
call
fprem1
and
addb
and
arpl
loope
js
jmp
adc
cmpsl
aas
push
cs
inc
cli
sti
sub
sahf
pop
dec
xor
lods
xchg
add
xchg
mov
xchg
shrl
dec
shll
push
scas
dec
sti
hlt
push
rcrb
daa
outsb
mov
shll
or
jle
pop
mov
seta
scas
or
jmp
cli
adcb
jecxz
das
imul
jns
lock
mov
pop
cmp
ljmp
mov
jno
data16
adc
inc
in
pop
insl
pop
mov
lods
data16
jo
lock
arpl
xor
sbb
xor
xchg
sahf
cmp
fisubl
out
add
xchg
add
push
sub
lods
pop
imul
repz
add
dec
or
adc
add
add
idivb
pushf
mov
jb
ja
in
popf
hlt
aaa
fistpl
out
cltd
xor
cmp
stos
jno
daa
dec
movsl
jge
pop
movb
in
push
pop
add
ficoms
test
sar
lds
sbb
cmpl
iret
loopne
sarl
fisttpl
test
mov
popf
movl
int3
ljmp
jae
and
sahf
imul
divl
call
pop
rorb
daa
mov
rcrb
mov
cmp
or
into
jmp
jle
adc
shrl
and
data16
jmp
ret
cmp
sub
cs
dec
xchg
loope
or
xchg
je
loope
jno
add
test
adc
lret
jae
add
and
lahf
dec
sbbb
mov
xchg
xchg
jp
lahf
lock
sti
xchg
push
add
inc
cwtl
movsb
jp
subb
addb
mov
push
cmc
pop
dec
popa
movsb
push
rcrl
inc
fstpt
cmp
insb
clc
adc
cwtl
xchg
xchg
test
dec
dec
adc
jne
cltd
unpckhps
jnp
sbb
pop
std
nop
mov
mov
xchg
mov
adc
lea
into
mov
jg
adc
pop
xor
clc
imul
insb
mov
adc
mull
out
jecxz
cmpsb
push
fistpll
push
in
aas
push
cmp
imul
outsb
add
pop
mov
div
mov
mov
inc
jle
xchg
mov
and
outsl
popf
xchg
out
mov
jg
jmp
or
rcrb
ficompl
out
or
scas
paddsw
rcrl
repz
adc
lret
lret
test
and
pop
mov
aad
loopne
xor
sbb
test
mov
sub
cmp
scas
adc
int
fucomp
jne
fisubl
xchg
pop
xor
and
cmp
mov
outsb
xchg
repz
sbb
xchg
xchg
aas
popf
leave
in
out
je
bound
mov
pop
adc
outsl
jmp
jb
push
xchg
or
ret
ret
add
sub
aam
insl
push
dec
es
pop
test
dec
in
mov
mov
jmp
aam
inc
test
addr16
add
in
sbb
outsl
ja
mov
fsubrl
addr16
xchg
and
dec
movsl
push
in
sti
sbb
pop
paddb
adcl
jmp
xchg
cmp
icebp
fisttps
loop
ja
or
or
sbb
ret
dec
sbb
dec
dec
push
jb
or
aaa
pop
mov
jg
add
push
pop
inc
imul
or
scas
pop
nop
dec
cmp
cltd
les
and
sahf
out
loopne
int3
gs
xchg
mov
popf
jno
cmp
mull
aas
popa
and
fistl
dec
daa
inc
and
imul
inc
jo
jmp
into
cmpsb
pushf
loopne
sub
ret
mov
inc
sti
bound
mov
aad
loope
movsb
clc
idivb
in
les
inc
call
jg
and
out
sbb
jb
push
or
lret
sub
pop
cmp
fs
inc
leave
mov
sti
insl
add
fdivr
out
mov
push
out
sub
push
dec
pop
jge
lods
pop
mov
jae
mov
xchg
ficoml
inc
pop
ljmp
adc
ljmp
dec
and
outsl
adc
cmpb
roll
cmp
movsl
aam
cld
sbb
mov
xchg
or
test
inc
cmp
loop
in
cmp
icebp
xchg
pop
or
push
inc
jns
jne
and
mov
inc
sub
cs
add
enter
gs
pop
adc
ja
cmpsl
push
hlt
push
arpl
data16
lahf
scas
cli
cmpsb
pop
xorb
push
pop
repz
jecxz
jne
std
or
fst
jo
sahf
mov
stos
jae
mov
sbb
add
jl
mov
mov
xchg
fnstcw
mov
cltd
mov
out
xlat
jmp
rcr
out
inc
push
stos
inc
jne
sarl
ds
pop
das
push
pusha
mov
scas
cmp
pop
xchg
mov
pop
stc
inc
jo
outsb
jns
out
mov
js
cld
mov
xor
push
dec
xchg
mov
push
ljmp
xor
ja
mov
add
ss
mov
sub
push
mov
popf
or
aaa
out
cld
bound
movsw
cmpsl
add
stc
dec
cmpsb
jmp
icebp
stc
lea
push
imul
aad
jecxz
or
inc
xlat
out
pop
cmc
xchg
les
mov
mov
push
add
sub
call
ret
and
or
cwtl
clc
xchg
or
jp
lahf
call
mov
xor
inc
or
mov
add
sahf
cmp
push
cmp
lcall
cli
andb
and
or
mov
rorb
jp
inc
add
jge
ficompl
add
xor
fs
adc
sbb
dec
sbb
pushf
rorb
jb
mov
aam
inc
repz
mov
cmc
and
ret
mov
push
sub
pop
cli
or
cmp
nop
ret
shll
inc
cmp
imul
xor
and
rcll
sbb
dec
out
or
add
mov
inc
inc
cmp
out
or
xchg
sbb
insl
add
pop
inc
cmp
mov
jno
add
cmc
ret
jg
and
mov
das
mov
push
add
icebp
sub
cmp
scas
mov
in
xor
adc
push
std
sbb
sti
fnstsw
test
call
or
add
insl
push
out
mov
push
ja
xor
mov
xor
test
or
dec
shlb
mov
in
sub
daa
dec
test
mov
gs
loop
jle
pushf
mov
xchg
mov
mov
or
or
inc
adc
sbb
call
dec
adc
dec
fsubr
lret
xchg
ljmp
outsl
idivb
sti
jg
mov
dec
sub
sbb
test
in
dec
aas
cmpsl
adc
cli
xor
mov
mov
or
mov
fnstcw
rcrl
mov
sti
jae
lock
jne
xchg
fimull
mov
shll
add
mov
cmp
mov
pop
hlt
pusha
test
decb
jo
adc
std
dec
test
sbb
sarl
es
xchg
inc
add
roll
mov
es
xchg
in
enter
xor
xor
fninit
adc
mov
pop
cmc
cmp
push
fwait
cs
sbb
lahf
jl
push
shlb
inc
shll
and
xor
jecxz
daa
popa
sarl
ret
fistpl
clc
insb
add
jle
dec
jns
je
mov
pop
fildl
lret
inc
or
lds
bound
push
fcom
mov
jmp
xor
jne
scas
mov
ret
jle
test
mov
push
xor
mov
pop
aam
adc
lods
in
xchg
dec
ret
xchg
aas
subb
cmpsb
daa
ret
mov
sub
loop
and
mov
enter
push
and
push
xor
xorl
mov
mov
out
orl
fcomps
je
push
and
inc
test
jle
adc
mov
dec
and
push
and
int
pushf
xchg
fcom
mov
adc
push
sahf
cmpl
mov
inc
pushf
dec
incl
iret
push
jp
jmp
xor
mov
sahf
jns
andl
out
jnp
repnz
lock
inc
xchg
cmp
fcmove
sbb
mov
popf
arpl
inc
negb
sbb
mov
stos
inc
test
shr
pop
lods
mov
dec
pop
sbb
sbb
jg
insb
sbb
sbb
xchg
out
imul
inc
mov
mov
nop
dec
sbb
addb
es
mov
inc
scas
lods
xchg
insl
jb
icebp
leave
push
mov
lret
popa
js
pusha
sbb
push
lock
bound
sub
and
into
movsb
es
popa
and
ljmp
jp
fabs
cltd
fldt
xchg
lods
lahf
inc
les
sbb
add
mov
leave
jge
xchg
lea
cmp
cmpsl
fists
out
push
into
fwait
stc
sti
mov
dec
sub
aas
ficoms
xor
int3
fwait
pop
je
rcr
jb
bswap
js
xchg
or
repnz
xlat
movsl
loope,pn
stc
inc
fists
sbb
and
clc
and
add
test
push
add
cmp
pop
sbb
fmul
ds
outsl
shll
dec
mov
cmpsl
aam
inc
xor
or
cmc
scas
push
xchg
mov
out
xchg
incb
pop
adc
jge
mov
shlb
jg
ljmpw
add
dec
cmp
or
cmpsb
and
jmp
push
cmpsb
call
or
add
mov
adc
xchg
cmp
dec
mov
cld
inc
sub
dec
test
or
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
jmp
adc
cmp
ret
aam
mov
out
cwtl
js
pop
ja
mov
mov
dec
and
adc
pop
leave
aas
notl
push
mov
hlt
leave
or
and
mov
enter
mov
fildll
imul
sti
push
cltd
bound
sti
cmp
mov
sbb
ljmp
or
or
into
cmp
leave
cmovl
mov
inc
adc
jo
pop
cmpsl
stos
loop
dec
or
je
shrl
xor
jb
xchg
out
push
into
sbbl
lahf
adc
sahf
or
fistl
sbb
mov
xor
ret
in
mov
cmpsl
push
jge
xchg
push
out
mov
xchg
and
nop
sti
js
shl
outsl
lock
jno
outsb
inc
fadds
cmpsb
daa
repz
outsb
test
jnp
xchg
jmp
test
mov
sarl
mov
mov
xchg
xor
es
mov
push
sbb
add
imul
jne
push
mov
mov
sti
jp
sbb
sub
js
outsb
jl
cs
sub
fcmovu
sub
stc
sub
in
and
jg
aam
push
mov
icebp
and
push
push
sub
aaa
push
daa
adc
popf
shrb
leave
xchg
dec
xchg
sbbb
leave
pop
and
iret
daa
movsb
stc
push
mov
adcl
mov
xor
jg
xchg
mov
es
int3
add
inc
cmp
lods
mov
adc
mov
mov
call
pop
mov
and
clc
subl
jo
mov
xor
pusha
imul
dec
shrb
loopne
mov
cltd
sub
add
lcall
cmp
fcos
mov
outsl
xor
andl
jae
test
negl
adc
mov
xor
sub
fyl2xp1
push
sub
movsb
pop
push
xor
fs
and
mov
mov
ret
adc
pusha
int3
mov
mov
pop
es
lods
insl
xor
and
lcall
push
std
add
mov
inc
push
xor
ret
lods
adc
pop
test
aad
add
ja
jp
jns
push
fucom
inc
clc
xchg
add
out
adc
mov
cmp
andb
cmpsl
mov
clc
dec
xchg
stc
xor
jbe
out
push
adcl
int
pop
inc
mov
sub
jns
add
hlt
xchg
jnp
pop
movaps
fisubl
and
cmpps
mov
and
xchg
pop
rclb
je
outsb
ljmp
addr16
movsb
cmpsb
or
push
addr16
loop
fwait
gs
fnsave
mov
jbe
outsl
fisttpl
int
pushf
pop
adc
pop
and
mov
rorb
pop
inc
jbe
ret
pop
dec
into
shlb
into
into
clc
mov
imul
movb
ss
leave
xchg
fs
xor
into
xchg
sub
nop
lea
add
sub
pop
cmp
mov
push
dec
xchg
inc
cmpsb
or
jne
enter
dec
lods
loopne
pop
mov
xchg
std
aaa
fwait
mov
sub
stos
or
dec
iret
nop
or
pop
in
enter
test
loop
std
jl
xchg
leave
sbb
jno
lods
mov
je
xor
in
stc
loop
inc
jns
clc
xchg
sbb
jp
add
sub
mov
arpl
test
add
sbbl
xchg
icebp
jae
imul
jnp
cvtdq2ps
mov
aad
dec
push
rolb
daa
dec
pop
test
mov
bound
mov
mov
xchg
inc
and
jne
dec
mov
scas
jle
dec
xchg
mov
xchg
mov
add
add
ret
js
jecxz
push
cmpsb
fsts
clc
outsb
xchg
fsts
xchg
dec
dec
imul
and
std
push
imul
mov
dec
sahf
push
repz
cmp
hlt
cmpsb
loop
mov
sbbb
push
add
mov
mov
pop
mov
or
inc
ss
push
pop
ret
sub
sbb
lock
dec
popa
or
jb
movhlps
test
sub
pop
pop
shld
push
add
out
stos
fsubrs
jnp
jmp
mov
mov
cli
cltd
mov
mov
push
inc
cmovnp
mov
mov
in
lods
mov
or
or
ljmp
or
xchg
sub
push
ficoms
cli
shll
push
adcb
pop
or
pop
adc
lods
cli
ret
jns
fnstenv
and
outsb
pop
imul
xchg
inc
xchg
dec
lahf
sub
gs
stc
adc
fcmovne
push
mov
lahf
or
jb
les
mov
loopne
pop
fwait
loope
ret
adc
pop
xchg
cmc
and
js
in
lock
int
es
mov
inc
int
popa
outsl
lds
xchg
aas
call
repz
das
push
repz
ss
test
add
sub
dec
mov
call
cmpsl
mov
lret
xchg
inc
jmp
loop
bound
dec
dec
mov
mov
int
inc
and
movsl
je
loope
sbb
jmp
gs
movb
loope
add
dec
test
sub
jecxz
cli
daa
ljmp
cmc
inc
add
jl
cmpsb
ret
pop
shll
push
mov
jecxz
pop
pop
out
decl
iret
sarl
dec
mov
sub
adc
dec
sub
outsl
xor
lahf
sbb
ja
dec
adc
iret
cmp
call
loope
cmp
inc
jmp
cld
xchg
pop
mov
inc
inc
cmp
adc
in
subb
pop
das
jbe
pusha
fs
outsb
popa
xchg
sub
cmpsl
mov
or
cmp
push
inc
ficompl
mov
xchg
pop
repz
mov
andl
ret
lret
mov
test
sbb
push
aad
insb
stos
outsb
iret
pop
jp
cmpsl
jmp
inc
and
gs
mov
pop
jns
dec
imul
gs
jge
mov
les
jae
push
clc
lret
inc
xchg
popa
iret
or
mov
movsl
mov
mov
inc
lret
dec
adc
lcall
mov
push
in
int3
fs
iret
pop
inc
mov
mov
xchg
xchg
aaa
or
adcb
pop
sbb
pop
add
push
mov
test
mov
mov
outsl
mov
xchg
pushf
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
jmp
sbb
and
leave
xchg
xchg
ja
call
nop
scas
bound
mov
mov
pop
rol
xor
add
mov
insl
fiaddl
xchg
xor
inc
sbb
outsl
sub
addl
sub
test
shrb
adc
sbb
mov
ljmp
or
out
cwtl
stc
pop
sub
fildll
mov
sbb
or
loope
mov
lahf
mov
inc
adc
adc
jle
xor
jge
sub
mov
aad
repz
and
xchg
in
push
jle
sub
mov
or
bound
add
sub
clc
outsb
pop
mov
sub
xor
stos
or
xlat
mov
mov
xor
arpl
mov
add
fwait
push
xchg
pusha
sbb
xor
jae
shl
add
sarb
ret
pop
into
cmp
into
jb
loop
icebp
test
add
push
sbb
inc
or
ds
inc
jp
aas
daa
xor
inc
add
out
mov
cmp
popf
dec
das
and
aas
lahf
das
test
jo
sbb
rclb
jb
cmp
cmp
mov
test
jmp
fimuls
jb
adc
sbb
sti
aad
xchg
out
sbb
pop
cmc
cmp
fidivs
sbb
push
repnz
cmpsl
mov
jge
xchg
mov
add
cmp
cld
pop
push
pop
inc
test
cmc
sbb
inc
mov
adc
pop
icebp
out
inc
je
xor
lea
test
xlat
cltd
pop
sub
gs
aad
adc
int3
enter
pop
cli
sbb
pop
fisubs
jae
in
jg
jecxz
xchg
and
arpl
mov
mov
mov
sub
and
repnz
inc
outsb
aad
int
xchg
jns
cld
pop
xor
cs
cmp
sti
fs
jb
push
push
in
out
movsl
nop
movsl
xchg
movsl
subb
dec
mov
repnz
aad
mov
into
jge
jbe
or
shrb
xchg
shlb
push
mov
mov
dec
mov
in
pop
addb
or
mov
jo
xchg
lea
cmpsb
popf
inc
scas
push
push
fstpt
shr
pop
scas
popa
pushl
lock
mov
sub
push
es
push
mov
dec
or
jne
xchg
xlat
add
jns
inc
mov
xchg
hlt
or
jl
inc
jmp
dec
hlt
imul
adc
xchg
test
addr16
fsts
mov
fmuls
sub
jae
sbb
test
andb
addr16
movsb
test
dec
cmc
cmp
mov
sar
jno
cmp
dec
sahf
into
pusha
in
aam
cld
mov
jle
jecxz
push
jns
lods
popf
cmp
into
or
rcrb
cwtl
lret
pop
dec
xchg
inc
fstpt
mov
xor
xchg
dec
sub
mov
add
fnstsw
mov
adc
inc
mov
imull
lahf
mov
push
outsb
inc
dec
jge
adc
cmp
fwait
dec
xchg
icebp
inc
out
sbb
popa
and
mov
cmp
lods
movsb
cmp
shlb
fists
loope
mov
jnp
scas
push
ret
mov
pop
mov
or
movsb
in
lods
pop
push
xchg
mov
adc
inc
jle
pop
jmp
xchg
mov
push
xchg
outsl
pmulhuw
xor
or
ret
out
int
push
lods
test
cmp
mov
cmpsb
jb
testb
mov
loopne
mov
dec
cltd
sbb
notl
rclb
fucom
sub
movsl
cmp
and
rolb
and
or
shlb
je
bound
jl
push
sahf
sbb
imul
call
in
xor
dec
fdivr
dec
inc
or
sbb
cltd
loopne
pop
push
jg
or
in
jne
cmc
inc
and
jmp
mov
es
mov
xor
fadds
and
pop
adc
shll
in
xlat
cmp
mov
js
test
negl
mov
out
mov
pop
sub
xor
pop
and
mov
shl
inc
cli
jl
popf
test
or
cmpsb
inc
pop
es
clc
mov
mov
and
pop
or
or
sbb
inc
decl
jecxz
pop
push
dec
xchg
ret
push
imul
adc
lret
pop
outsl
mov
lahf
jae
xor
add
push
jnp
jb
sarl
ret
shll
mov
jmp
adc
pop
cs
jecxz
mov
mov
add
loop
out
mov
rcrb
in
sub
ds
mov
imul
push
mov
adc
imul
fcom
jg
lcall
fldcw
aas
leave
insl
cmp
mov
fldl
into
inc
push
repnz
fidivl
push
xor
fwait
or
aas
pop
sbb
push
add
add
ret
shll
mov
lcall
xor
shl
push
int
xchg
inc
sbb
jb
stos
ret
daa
cmp
lds
mov
jmp
hlt
cmp
pop
cmp
inc
scas
pop
cmp
lock
jo
jae
fs
sub
mov
int3
mov
mov
xor
inc
pop
pop
xchg
fsubs
das
mov
mov
cmp
or
dec
pusha
inc
sub
jg
pop
pop
xchg
mov
lcall
pushf
jl
jl
rorb
mov
pushf
or
je
in
xor
and
pop
lahf
mov
pop
and
mov
and
sbb
push
mov
jbe
mov
xor
pop
or
sub
or
mov
inc
add
jbe
fidivs
in
jae
push
cmp
movsl
dec
popa
xor
pusha
insl
lcall
inc
mov
mov
cmp
scas
add
jecxz
lcall
jbe
dec
adc
testl
xor
ret
xchg
fucom
mov
push
jnp
xchg
imul
push
fcomip
add
adc
scas
into
out
popf
fbld
cmp
and
push
and
or
fstl
adc
mov
mov
stos
cmp
and
pop
div
xchg
push
out
fmull
pushf
fisubrl
xor
cmp
adc
adc
mov
pop
dec
xchg
xchg
dec
cmpb
adc
out
incl
lods
jg
fiaddl
or
pop
push
mov
ret
or
fs
cmc
add
inc
or
mov
sbb
xor
jbe
pop
pop
add
mov
mov
ficoms
lret
pushf
cmp
xchg
leave
pop
push
push
lret
mov
popf
scas
cmc
into
fisubrs
jg,pt
sbb
and
les
sub
out
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
jmp
sti
test
sbbl
mov
sahf
xchg
aas
ja
pusha
into
bound
push
inc
push
push
sbb
push
mov
mov
pop
outsl
in
inc
inc
lods
rolb
xchg
aas
adc
cs
xchg
cli
inc
inc
addb
xchg
ret
add
sbb
mov
ljmp
push
fstps
xchg
sbb
in
bound
pop
mov
cmp
sub
inc
cwtl
loopne
fwait
addb
jbe
lcall
popa
mov
loope
pop
mov
sub
fsubl
adc
fwait
and
rcll
pop
cmp
pop
pop
xor
add
fiaddl
or
mov
mov
mov
mov
movsl
mov
mov
dec
push
inc
int3
jb
fmul
push
pop
test
push
into
ret
fldl
xor
xor
inc
je
test
dec
out
cli
fdiv
sub
mov
xor
or
inc
or
xchg
jnp
and
cmp
mov
jge
les
bound
xor
insl
loop
arpl
add
add
xlat
stc
aaa
stc
push
loope
stc
mov
jecxz
mov
jo
mov
mov
cmp
or
cmp
int
pop
shrb
fldenv
jns
in
sub
loope
hlt
shrb
dec
adc
adc
mov
roll
pop
inc
mov
ljmp
ja
pop
sti
leave
and
pusha
sbb
mov
inc
xchg
add
xchg
add
popf
inc
pop
loop
sbb
ss
pop
push
lods
dec
mov
insb
pop
mov
aad
jb
lea
popl
push
dec
repnz
std
cmpsl
pop
mov
or
sub
push
pcmpeqd
jbe
insb
add
jmp
cmp
xor
and
fwait
dec
inc
mov
aaa
call
aad
xchg
adc
mov
arpl
mov
rcrb
adc
sub
mov
bound
sub
mov
jg
dec
cmp
addl
add
mov
sub
les
pop
xchg
je
shr
mov
lret
sti
test
push
add
jne
inc
popf
hlt
into
pop
shr
movsb
iret
pop
scas
mov
sti
jns
sbb
lahf
ret
pop
pop
popf
sub
fbstp
add
ficomps
sbb
push
mov
test
lds
mov
outsl
sub
shll
mov
lea
int
xor
aas
jnp
jnp
js
push
mov
and
fld
fstps
popa
lret
insl
mov
xchg
daa
push
pop
inc
test
subb
mov
pmaddwd
push
fistps
addr16
jb
and
add
lcall
jbe
mov
jmp
inc
lahf
bnd
mov
cmp
fisubrs
cld
int3
sub
pushf
vmovq
jp
push
fld1
cwtl
or
neg
pop
out
sbb
pop
mov
dec
mov
jge
roll
mov
cmp
lret
pop
test
mov
out
lods
add
adc
jge
popf
repz
lahf
ja
pushf
out
adc
mov
mov
sub
mov
or
insb
arpl
movb
outsb
popf
mov
inc
hlt
aam
xchg
int3
cwtl
mov
sbb
cltd
pop
and
mov
pop
pop
push
mov
sti
leave
jb
insl
mov
sbb
mov
pop
jne
mov
adc
jne
repz
or
fucomi
pop
stos
adc
xlat
aaa
shlb
jp
rcr
xorb
sbb
mov
xchg
data16
and
not
mov
out
jecxz
out
fs
push
ficompl
outsl
dec
mov
stos
loopne
repnz
cwtl
pop
push
and
pop
and
cmp
mov
shlb
push
movsl
scas
loope
in
aaa
pop
push
out
adcl
or
mov
mov
push
mov
mov
daa
dec
add
ror
xlat
dec
call
dec
or
out
fwait
sbb
insb
and
xchg
test
in
imul
add
imul
shrl
stc
xor
test
shrl
xor
iret
xor
test
xchg
xor
insl
rorl
and
or
dec
or
pop
addr16
mov
dec
jge
adc
inc
fidivrs
dec
pop
fstl
push
scas
inc
add
add
in
fldcw
mov
jl
cwtl
loope
push
sbb
jge
popa
out
jp
adc
inc
call
arpl
dec
aas
adc
xchg
and
cmp
push
iret
jge
jge
push
scas
insl
push
xchg
adc
loop
cmc
mov
mov
mov
lods
cld
or
inc
imul
arpl
push
mov
or
out
mov
mov
imul
ret
mov
mov
inc
stos
insb
daa
and
ds
pop
add
pop
in
mov
mov
pop
addr16
into
arpl
movsb
sbb
adc
out
leave
cmp
in
scas
push
xchg
or
popa
ja
inc
outsb
and
aaa
jbe
mov
mov
push
push
out
cmp
add
lods
xchg
push
mov
mov
imul
jmp
xchg
or
inc
sarb
pop
sahf
ret
push
sbb
popf
inc
inc
mov
je
fcmovnb
fldenv
fmuls
enter
jbe
dec
mov
sbb
jb
ficomps
cmc
nop
xor
and
mov
pop
jo
in
push
data16
test
pop
add
inc
mov
xor
adc
add
jp
mov
lcall
loopne
loopne
add
mov
pusha
movsl
jae
imul
adc
jle
add
int3
fdivs
ja
gs
inc
dec
ficompl
dec
aad
mov
pop
pop
in
adc
icebp
mov
aaa
push
addr16
xor
faddl
cmpsl
cmc
inc
sbb
test
lods
test
aad
sbb
adc
popa
cmp
arpl
mov
inc
pop
out
cmp
lcall
decl
adc
stos
mov
ss
out
mov
notb
jne
push
lea
inc
fcmovnbe
fsubrs
mov
xor
cld
cmp
and
adc
lcall
sti
pop
cmp
shr
int
sub
call
xor
or
sbb
mov
iret
loope
sbb
stc
outsl
out
fsts
jo
push
push
pop
stos
imul
scas
mov
stos
pop
jae
pop
xor
rcrb
jge
in
cmpsl
addl
inc
popa
inc
inc
inc
repz
insb
pop
adc
dec
sub
jne
movsl
dec
stc
cwtl
fdivrs
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
jmp
nop
loope
pop
dec
gs
int
xlat
sub
sahf
cs
ja
ja
popf
or
mov
into
fists
push
dec
xchg
jmp
es
ret
xlat
add
addb
dec
and
fucomi
iret
rcll
xchg
xchg
leave
loopne
dec
fsubrp
mov
inc
push
popa
scas
xchg
nop
in
pop
fdiv
jno
fldcw
jno
faddl
adc
das
push
int3
loop
lds
cs
ljmp
movsb
mov
push
test
sbb
faddl
leave
lea
inc
xchg
outsb
pop
fwait
out
add
or
jae
jmp
pop
jns
mov
ficoms
lret
inc
and
mov
or
in
mov
and
jecxz
ja
jg
mov
or
lea
imul
jg
push
jmp
mov
or
or
sbb
dec
xchg
fstl
ds
stos
pusha
loopne
or
jp
dec
cmp
pop
and
sbb
mov
iret
add
push
ljmp
loop
int3
mov
jg
sbb
fimuls
add
test
and
outsl
mov
fs
or
inc
mov
mov
stos
push
aad
mov
and
or
mov
mov
sar
add
jne
sbbb
mov
fcoms
repnz
pop
popf
sub
adc
out
inc
sub
cwtl
fsubrp
cltd
inc
jns
xor
mov
lds
xchg
loope
cmpsl
adc
subb
xlat
das
cmc
and
sbb
nop
adc
jo
dec
lods
mov
jo
lods
sub
mov
testb
ljmp
mov
add
sbb
pop
shl
outsl
shrl
xchg
pop
repz
fadds
mov
xchg
and
mov
test
mov
sbb
fsubrs
outsb
xor
jae
subl
mov
out
aas
and
cmp
test
popa
mov
movsl
call
shl
sbb
sbb
jmp
or
fcmovnu
and
adc
dec
mov
mov
hlt
mov
mov
jne
jns
or
nop
sarl
xchg
and
dec
lods
rcrl
repnz
lods
push
or
mov
and
jae
cli
roll
pop
sub
pop
addr16
mov
mov
dec
mov
rcll
sahf
cmp
adcl
lahf
push
pop
pushf
hlt
mov
aad
jnp
out
push
bound
in
sub
stos
repnz
insb
movsb
imul
add
jg
fcomps
pusha
pop
dec
mov
addl
push
sbb
xor
in
insb
push
inc
loop
jg
or
jg
xor
jge
subl
daa
lret
push
xor
negb
and
add
push
inc
dec
xchg
pop
repz
sub
sbb
outsl
cwtl
xor
mov
push
and
mov
dec
in
add
popa
xacquire
sub
out
arpl
iret
imul
adc
mov
jns
lods
in
ret
adc
push
push
cmpsb
dec
data16
xor
or
jno
jl
mov
jge
mov
ss
sub
push
dec
push
hlt
sub
scas
mov
fs
xchg
sti
mov
pop
pop
add
mov
mov
aam
das
and
aas
xor
pop
jnp
aaa
mov
mov
cli
into
fwait
jp
cli
fidivrl
jo
sarl
and
aas
pop
int3
pop
test
nop
into
inc
dec
xor
inc
or
pop
mov
xchg
data16
test
xor
mov
adc
iret
pop
mov
jno
jmp
mov
fbstp
mov
test
div
shlb
lds
ljmp
enter
fmull
or
out
pop
add
cmpsl
je
mov
in
outsb
out
xchg
sahf
mov
mov
insl
aaa
out
sub
dec
or
push
push
ds
shrb
or
test
mov
lea
mov
fdivs
jo
out
dec
jbe
sahf
jae
outsb
rolb
std
mov
xor
or
jbe
ljmp
xchg
mov
and
fdivrs
test
push
shlb
das
ja
daa
push
mov
scas
mov
jp
push
shlb
xor
je
adc
movb
xchg
call
mov
mov
outsl
push
sbb
mov
sub
add
cmp
addr16
mov
mov
sahf
stc
adc
and
add
jle
cmpsb
cmc
dec
ret
fdivrs
sbb
and
bswap
jecxz
xor
cltd
sbb
lcall
insl
shlb
popa
sbb
dec
lods
adc
mul
and
icebp
mov
jae
xchg
jo
das
xor
mov
mov
and
addr16
adc
xchg
enter
mov
dec
mov
pushf
push
daa
push
fildll
push
fwait
sti
cltd
scas
add
pop
add
std
in
push
iret
cmp
jno
pop
repnz
mov
xchg
mov
test
mov
outsb
xor
rorb
cmp
sub
cmp
data16
push
test
int
mov
imul
sbb
jge
out
loopne
fistps
mov
cmp
sbb
push
dec
push
sub
scas
fs
lret
jge
and
ja
fstpl
adc
mov
push
ret
push
mov
dec
clc
inc
push
fnstenv
test
inc
and
xor
in
pushf
push
incl
mov
cli
aam
add
ret
push
mov
loope
mov
mov
adc
xor
jp,pt
xchg
jne
sub
xchg
jnp
pop
test
in
xchg
loop
fstps
dec
lods
fidivs
outsl
add
lahf
in
sarb
addb
push
jnp
sub
in
leave
imul
sub
fadds
mov
push
mov
mov
cmp
mov
inc
pop
push
imull
pop
pop
inc
xor
sub
addr16
mov
add
push
dec
xchg
adc
push
fucomip
lods
popf
fists
sbb
adc
push
lahf
sbb
out
in
mov
and
cmp
adc
sbb
ret
adc
js
pop
mov
arpl
sahf
mov
adc
loop
jmp
out
outsb
loop
xor
enter
cmp
adc
push
push
jns
fisubl
lea
pop
sub
mov
lret
xchg
adc
lods
add
lcall
imul
out
adc
or
add
sbb
sbb
xor
sub
loopne
dec
or
bound
pop
enter
into
test
ljmp
cmc
ret
aaa
mov
xchg
xor
and
mov
mov
imul
and
push
xchg
hlt
lds
mov
js
loope
xchg
jae
push
add
inc
out
cmc
ljmp
push
stc
mov
mov
inc
das
mov
pop
cld
ret
clc
movsb
and
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
jmp
dec
loope
lret
sbb
or
mov
adc
fisubs
scas
adc
add
cwtl
mov
adc
sub
insb
or
fsubrs
out
push
cmp
ret
jmp
mov
jns
adc
xchg
jne
loopne
jmp
jae
std
mov
arpl
adc
mov
xchg
mov
es
shll
out
aaa
enter
arpl
je
lcall
jle
pushf
sbb
scas
or
xchg
lds
icebp
ss
outsl
or
loopne
arpl
ljmp
jno
add
test
xor
shlb
adc
fwait
xor
nop
arpl
fcoms
jmp
lods
dec
mov
jmp
mov
or
out
mov
shr
int
pushf
in
pop
jne
push
push
int3
pop
sub
sti
scas
stos
cli
xlat
sub
dec
lahf
loope
das
addr16
or
cltd
sub
dec
xchg
jns
mov
mov
iret
jne
jmp
lock
inc
leave
sub
sub
fwait
mov
lds
lods
into
push
rorb
pushf
lea
cmp
out
popl
push
imul
sub
adc
inc
jnp
dec
mov
lock
mov
push
dec
imul
adc
mov
push
mov
rcrl
adc
je
mov
xor
mov
xlat
imul
cltd
cmc
repz
gs
add
jmp
xor
lds
nop
fs
xor
call
or
sub
rolb
inc
push
mov
dec
pop
mov
lods
incl
sbb
loope
pushl
in
inc
dec
mov
mov
aam
je
sbb
cmpsb
aad
push
xor
fs
pop
out
jo
jmp
in
stc
addr16
iret
aas
cmp
push
pop
xbegin
jp
jns
xchg
leave
das
cld
add
mov
movsb
dec
adc
lret
sub
gs
pop
sbb
adc
cmp
shlb
test
test
fmuls
cmc
cmpsl
and
push
mov
or
pop
pop
sub
xchg
lcall
mov
mov
fdivs
lds
dec
loop
mov
push
shll
test
mov
nop
popf
imul
negb
xchg
dec
repnz
pusha
movsb
pop
rolb
out
hlt
popa
dec
cs
dec
dec
dec
call
test
bound
xor
inc
dec
in
push
cmp
pop
mov
mov
test
clc
cld
repz
iret
add
cmp
das
iret
mov
jecxz
fisttpl
stos
push
and
lock
pop
mov
push
mov
lahf
push
pop
fadds
sbb
clc
outsb
test
cmp
pop
pop
mov
xor
push
pop
pushf
cmp
xchg
pop
jecxz
mov
and
leave
or
mov
mov
or
popa
jo
dec
inc
repnz
clc
mov
scas
out
lret
in
xorb
das
insb
mov
xchg
lods
fsubrl
xor
loop
pop
xchg
lret
shll
jae
cltd
addb
inc
cmp
pop
test
lds
jbe
mov
sbb
sbb
movsb
xor
xchg
inc
lds
cmpsb
test
jmp
shrb
mov
loop
fistpll
jp
or
popl
repz
and
gs
icebp
add
cmp
adc
pop
gs
decb
pushf
push
inc
inc
mov
adc
jb
and
sbb
sub
into
xor
es
int3
sbb
sub
pop
aaa
in
pop
mov
sbbl
mov
push
mov
adc
jns
jnp
xchg
mov
push
and
popf
lods
and
pop
or
fs
hlt
ret
into
pusha
insb
push
adc
mov
fmuls
into
and
or
out
and
push
adc
dec
aam
ss
jmp
lahf
fucomip
jg
cmpsl
aam
mov
or
xor
mov
jne
ret
sub
test
jne
xchg
mov
fs
dec
and
fisttps
cmpsb
pushf
adc
mov
shlb
jne
dec
cmp
into
mov
sbb
call
sub
cmc
cs
mov
icebp
jae
or
mov
sub
cmp
inc
insl
out
sbb
rolb
xchg
and
lea
sub
jge
test
xlat
outsl
mov
add
rcrl
mov
mov
mov
enter
sbb
fwait
loope
inc
inc
idivl
ja
outsl
popa
imul
fisttps
ss
push
jmp
pop
adc
outsl
xorl
shrl
cmc
es
lock
notl
jg
movsb
aas
ret
pop
push
nop
cld
push
or
stos
cmc
sbbb
lea
jl
jae
pop
inc
call
adc
pop
imul
sbb
xor
xlat
push
stc
jae
jg
repnz
lcall
cmp
jno
cli
jae
shlb
inc
pop
and
lahf
in
popf
mov
icebp
xor
cltd
rcrl
les
jge
inc
adc
mov
cld
in
push
adc
jno
mov
clc
pop
jbe
bound
and
jb
pop
aaa
add
xchg
jnp
mov
or
sbb
push
jecxz
addb
dec
cmp
icebp
xor
and
movsl
addr16
push
cli
sbb
jecxz
sub
and
ret
subl
fdivrs
pop
sub
sarb
lods
shlb
rcrb
adc
xor
movsl
data16
lret
int3
adc
out
aaa
inc
mov
jg
adc
push
sbb
outsl
inc
cmpsb
jmp
aad
fadd
rcl
push
aaa
mov
dec
popa
xor
ds
push
insb
xor
sub
fisubrs
sub
movsb
addr16
pop
test
adc
push
fs
decb
push
aas
fbld
pop
pop
aas
icebp
sbb
adc
xchg
popf
xor
sub
add
cmp
or
insl
jecxz
gs
in
dec
xchg
jmp
xor
push
call
xchg
dec
mov
data16
fnstcw
out
dec
nop
lea
mov
pop
sbb
inc
inc
sti
stc
xor
lret
dec
aas
xchg
decb
rorb
idiv
mov
fsubrs
mov
sbb
fiaddl
popa
sbb
ret
test
lds
out
cwtl
retw
lock
mov
xchg
pop
pop
ror
in
fwait
cli
ja
pop
notb
and
push
es
xchg
add
add
xchg
int
js
clc
push
adc
lahf
sbb
or
aaa
inc
subb
sbb
mov
push
add
add
sbb
orl
cwtl
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
jmp
cltd
push
in
sub
jno
stos
and
xchg
mov
push
ret
xor
ret
jmp
pop
inc
cmpsl
inc
cwtl
jno
adc
mov
mov
inc
push
jg
rorb
test
xor
ljmp
jno
adc
imul
jmp
mov
jno
test
cmp
xchg
jp
scas
pop
fcompl
daa
and
add
test
cmp
sub
dec
loope
fidivs
mov
inc
roll
fstps
dec
dec
sub
loope
or
andb
aas
xor
jecxz
lods
faddl
popa
in
int
push
pop
pop
gs
cltd
cmp
cmpsl
pop
mov
mov
xor
lcall
lret
mov
add
mov
and
fisttpll
imul
inc
jl
lods
mov
adc
daa
dec
mov
push
inc
add
pop
add
mov
fwait
es
rolb
mov
mov
sahf
jb
fidivrl
loope
adc
call
jo
and
jo
cli
pop
or
loopne
cmp
test
shll
or
mov
adc
dec
call
daa
cmpsl
push
lods
xor
shr
mov
mov
mov
inc
mov
mov
stos
dec
inc
sahf
test
rol
sbb
imull
aas
mov
sub
jl
jmp
sub
pop
and
out
nop
adc
dec
roll
adc
or
or
dec
sub
push
test
stos
mov
testl
push
adc
and
jno
imul
les
adc
movsl
repz
in
repnz
mov
pop
sub
xchg
xchg
inc
pop
ja
sbb
and
fcomps
mov
adc
sub
xor
cs
mulb
dec
cmpsl
clc
and
sbb
addr16
adc
outsb
mov
cmp
mov
add
or
popa
xor
jmp
xlat
pop
mov
jb
pop
adcb
ja
xor
mov
fdivrl
movsb
fdivp
inc
pop
rcrb
movsb
je
jne
popf
lds
out
ret
xor
dec
jno
stos
shrb
rorb
shl
mov
add
mov
sub
push
or
inc
sub
movsb
sbb
adc
jnp
push
pop
imul
fs
adc
test
adc
pop
scas
ljmp
xchg
push
mov
push
repz
cmpsl
inc
fdivl
mov
pusha
push
mov
rcl
jbe
cmp
mov
pop
xchg
sub
lods
push
mov
fldcw
add
dec
sub
inc
mov
xchg
shrl
arpl
pop
js
pop
mov
cmc
adc
sub
xchg
xchg
mov
push
push
repnz
xorl
xchg
scas
push
xchg
sbbb
jmp
sub
inc
mov
pusha
jbe
repnz
sahf
out
ret
dec
cmc
jae
test
xor
aam
and
inc
add
inc
scas
mov
in
xor
fcmovnbe
filds
or
movsb
sub
pusha
jmp
jbe
sbb
icebp
sub
fwait
adcb
fistpll
cmpsl
cmp
inc
xlat
cmp
pushl
sti
outsb
sbb
pop
je
push
dec
push
xor
iret
mov
xor
mov
xor
cmp
fiadds
and
mov
push
notl
push
jp
mov
ja
mov
jmp
xor
aad
lock
adc
pop
out
sbbb
and
sub
xor
popa
es
pop
push
or
jmp
mov
mov
adc
clc
push
mov
xchg
sarl
push
push
push
rclb
lcall
dec
pop
mov
sbb
dec
fisubl
movsl
mov
fs
pop
pop
sbb
xor
push
or
jb
cmp
lods
xor
scas
dec
or
lods
mov
mov
and
pop
pop
inc
add
insb
sbb
leave
daa
adc
out
xor
mov
setg
gs
push
arpl
lods
lock
je
mov
fbld
imul
adc
mov
int
pop
mov
fisttpll
push
shll
ret
add
repz
or
shrl
mov
jae
ss
jge
push
xor
int
xor
sub
jge
sub
sbb
or
imul
adc
aam
lea
movb
xorb
cmpb
jo
xchg
mov
dec
jmp
ss
jl
popa
xorb
and
jbe
test
pop
shl
pop
add
out
push
add
lcall
gs
inc
lcall
dec
push
push
pop
mov
lods
push
pop
pop
rcl
aam
stc
lods
fwait
subl
inc
jne
push
ja
pop
sarb
dec
fs
xchg
ljmp
and
mov
dec
stos
ret
adc
xchg
push
mov
push
cltd
aaa
lahf
mov
sbb
push
addb
or
jns
movsb
fbstp
push
xchg
xor
dec
mov
xchg
sbb
rolb
in
mov
push
and
push
jnp
jae,pt
xor
call
mov
das
pushf
lcall
push
jns
sub
loope
cmp
cmp
ljmp
out
xchg
daa
shr
add
das
mov
cmp
pop
mov
add
test
cld
ljmp
add
lock
cmc
out
dec
cmp
xchg
imul
mov
mov
dec
add
push
outsl
pushf
into
mov
pusha
adc
shrb
loopne
push
test
out
leave
xor
sbb
std
or
imul
nop
jb
or
and
jb
pop
jg
push
data16
adc
cltd
ret
enter
pop
sub
mov
dec
or
sub
xchg
sub
popf
mov
idiv
xlat
popa
sbbb
push
repnz
add
imul
hlt
stos
fcomps
fdivrs
mov
and
pop
and
mov
ljmp
mov
stos
pop
pop
scas
outsl
lods
adc
mov
out
mov
mov
lcall
mov
sub
rorl
mov
loope
xor
jl
xor
test
add
stc
jbe
sarb
mov
lret
mov
shll
lods
mov
jp
lods
ret
xor
push
jmp
xchg
mov
test
movsl
ret
scas
out
mov
mov
clc
push
push
aad
pop
xchg
pushf
push
or
fistl
fcmovbe
sahf
lds
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
jmp
push
mov
adc
xchg
ret
ss
pop
add
ja
aaa
inc
push
xchg
data16
arpl
pop
cmp
sar
mov
test
adc
sti
or
dec
pop
add
ds
fcomps
fcmovnu
pop
ret
iret
pop
jne
scas
test
dec
xchg
cmp
pop
ds
jae
ret
mov
int3
enter
sahf
incb
pop
xchg
push
jnp
lock
sbb
cld
loop
inc
or
imul
xchg
test
pop
js
flds
arpl
loope
das
les
mov
test
daa
imul
lret
xchg
pop
out
push
dec
lea
pop
pusha
xchg
jo
jecxz
jmp
mov
jmp
jge
sarb
dec
xorl
dec
mov
inc
out
push
sbb
mov
aaa
sub
and
or
xor
popa
jo
xchg
pop
mov
mov
mov
push
mov
shll
decb
inc
movsb
ret
loope
xchg
pop
dec
mov
push
out
jb
in
pop
jb
jge
les
test
les
mov
mov
xor
cs
sbb
cli
jge
push
out
jns
dec
pop
cld
mov
test
mov
dec
aaa
pusha
xchg
test
js
push
cs
inc
rcrb
test
push
sub
jne
aas
das
popa
aam
es
mov
jnp
inc
inc
push
les
repnz
hlt
pop
or
aas
bound
mov
mov
jl
or
cs
push
inc
movsb
jno
push
shll
loope
or
cmp
push
inc
movzbl
loop
mov
xchg
cmpsb
inc
mov
mov
dec
mov
leave
stos
jp
pusha
mov
ret
sbb
andb
andb
or
adc
xor
inc
pop
sub
std
cmp
imul
push
stc
pop
cmpl
inc
add
ja
xorb
mov
outsl
nop
aaa
jmp
mov
mov
cmp
insb
outsb
lahf
fdiv
ficomps
test
test
movsl
or
mov
inc
js
cmp
push
leave
ss
mov
mov
pop
leave
shl
xchg
imulb
or
arpl
push
ljmp
pop
cmp
mov
neg
lea
adc
xchg
sbb
cmc
lds
and
aas
ljmp
jmp
jae
daa
std
and
mov
pop
xchg
mov
dec
jecxz
lea
aaa
mov
dec
xchg
jle
cwtl
std
pop
xor
xor
or
xchg
jno
mov
mov
add
jle
cmpsb
divb
ds
cwtl
xlat
setae
mov
cmp
lret
mov
adc
xor
add
xchg
mov
cld
or
or
xor
loop
push
xor
fsub
cmpsl
push
fwait
push
xchg
mov
dec
ret
hlt
add
je
sub
sub
sub
rorb
inc
jg
cs
pop
js
xchg
pop
ficompl
gs
dec
adc
xor
mov
pusha
or
push
mov
mov
not
jmp
sbb
inc
xchg
sbb
mov
pop
mov
rcrb
cmpl
inc
pop
test
jbe
xchg
loop
lret
test
int3
push
mov
jnp
ret
sub
cwtl
pop
ljmp
xadd
out
lods
cmp
jle
jecxz
cmpsb
stos
add
dec
jns
les
jl
push
push
cltd
jl
sahf
pop
jne
popa
ret
imul
mov
aaa
lret
jb
add
fcomip
jle
in
popf
mov
inc
jge
int3
and
jmp
ljmp
add
popf
hlt
sbb
mov
aas
and
or
jns
add
popa
out
cmp
in
cmc
push
jo
nop
adc
pop
push
adc
mov
push
jns
testl
and
shlb
xor
mov
mov
int
sarl
cmp
mov
mov
adc
add
pop
jecxz
jg
sub
int
jge
mov
shl
rorl
test
pusha
scas
popf
insb
mov
or
pop
test
and
push
add
out
push
jp
loopne
xchg
outsl
or
push
inc
and
repnz
sahf
push
jo
leave
adc
movsb
dec
out
xchg
in
ret
pushf
xor
jge
out
add
or
icebp
dec
out
pop
xchg
js
xor
incl
cltd
je
ljmp
add
fstps
xorb
addr16
lds
shlb
aam
push
xchg
dec
jge
mov
jle
popa
popa
fidivs
lcall
jo
mov
popf
nop
mov
pop
lret
nop
je
imul
cmpsb
mov
cmc
fisubrs
aam
jno
mov
pop
outsb
test
push
pusha
lock
cmp
jo
stos
xlat
add
jo,pt
gs
cmc
aad
push
insb
mov
and
and
xor
add
mov
cmp
popa
jne
ret
int
mov
inc
xchg
or
or
pop
xchg
mov
sub
or
jecxz
mov
push
jnp
popf
push
jg
sbb
cmp
sti
pop
mov
add
xor
lcall
xchg
orb
jmp
inc
cld
sub
fs
add
cmp
pop
mov
in
cmp
adc
xchg
mov
push
jmp
aad
sbb
clc
les
pop
cltd
push
push
movsl
sbb
in
inc
mov
sbb
js
and
shll
pop
cmpsb
shrb
shr
mov
in
pop
icebp
shl
ffree
fwait
mov
cmovl
pop
rorb
pop
jb
inc
mov
ret
imul
fdivs
sub
pop
ret
test
pusha
loop
adcl
in
push
je
push
lret
cmc
adc
mov
xor
flds
sti
ss
xor
loop
inc
enter
subl
xor
in
lea
in
addl
frstor
and
stos
jns
jno
cmp
aam
mov
popf
gs
cmp
mov
pop
xchg
jge
aad
sub
icebp
gs
sub
mov
adc
pop
ljmp
incb
mov
xor
movsl
adc
into
shlb
in
mov
add
mov
insb
jp
add
and
push
mov
jb
lock
lcall
pop
add
xorb
sti
imul
repz
nop
aam
pop
pop
mov
lods
pop
xlat
out
fbstp
int
imul
arpl
or
xchg
add
iret
nop
imul
ljmp
mov
xor
jmp
cmp
adc
mov
test
xchg
repz
xchg
and
rol
xor
and
cmp
cs
pop
fldl
aad
fistpl
sbb
ds
out
lret
lods
ret
jmp
test
sbb
jp
int3
or
adc
or
imul
jge
sarb
push
xchg
ds
cmp
clc
jo
add
pop
repnz
xchg
jmp
cmp
push
pushf
lods
cli
pop
sub
cwtl
aad
add
push
mov
pop
je
test
push
sbb
sbb
lret
sub
xchg
shll
in
cld
jmp
or
cli
and
fcmovnu
inc
jp
mov
std
add
xor
cmpsl
xchg
sub
mov
pushf
push
pop
mov
fnstenv
sbb
shll
push
cmp
and
addr16
mov
adc
xchg
add
les
pop
test
adc
and
jo
jmp
outsl
add
xor
jg
daa
push
dec
imul
fimull
out
jp
push
jno
imul
jg
cmp
cmp
jecxz
cmpsb
xlat
mov
adc
popf
sbb
ret
stos
ret
push
pop
call
ret
pop
mov
in
jo
test
std
mov
mov
cmp
cwtl
push
clc
sbb
xchg
mov
popf
jo
or
xchg
add
subb
out
cmc
sub
xchg
xchg
ja
and
ljmp
mov
xor
mov
stc
adc
mov
subl
icebp
sub
loopne
in
scas
sub
pop
jle
lods
imull
clc
mov
out
add
sub
jns
jg
add
ret
mov
lds
mov
mov
mov
adc
or
add
int
sub
arpl
mov
arpl
dec
in
pop
leave
jo,pn
fstpl
pop
lods
jecxz
pop
ljmp
or
cmp
out
std
divb
sbb
jl
dec
push
and
fstps
fwait
cli
adcb
fisubs
sub
mov
inc
call
call
out
insb
cmpsb
xor
mov
or
xor
inc
cltd
fldl
xor
pop
cmp
pop
insb
adc
add
inc
inc
int
cmp
cmp
dec
and
fwait
nop
jg
popl
adc
push
push
dec
adc
xlat
ljmp
int
mov
loop
mov
dec
fsubrs
xor
cmp
push
sahf
inc
dec
inc
mov
ss
push
cmp
xchg
bound
cmp
jnp
loopne
data16
add
push
xchg
ja
cmp
add
jmp
inc
out
cli
cmp
and
rclb
mov
cmp
test
std
insl
rorb
cmp
outsb
dec
push
fmul
mov
mov
cwtl
aad
scas
sbb
rcrl
insl
subb
aaa
in
mov
insb
push
test
stos
sbb
push
cli
call
jl
push
inc
stos
mov
je
mov
es
gs
pop
add
cmc
stos
pushf
inc
jo
mov
inc
xor
sahf
mov
dec
mov
push
movb
jmp
xchg
outsl
mov
pop
cwtl
fildl
std
les
in
inc
jge
push
push
lods
inc
aas
pop
dec
cmp
lds
repz
xor
ja
or
lret
adc
ljmp
push
rorb
lret
or
or
idivb
mov
add
push
imul
aaa
sub
dec
inc
mov
insl
leave
pop
push
mov
add
in
xor
mov
aad
inc
push
mov
adc
xor
adc
mov
cmp
mov
mov
xchg
mov
lock
cmc
test
push
cmp
in
mov
mov
mov
in
sbb
sub
sub
dec
test
rcrb
xchg
gs
jne
fldt
insl
xchg
sub
arpl
push
js
mov
xchg
jge
push
jecxz
adc
xchg
pop
std
or
imul
adc
inc
lret
or
out
ficompl
and
push
push
lcall
inc
pop
sbb
fsts
add
aam
mov
das
mov
loopne
adc
push
xchg
pop
xchg
in
dec
cld
outsl
and
xor
mov
in
and
mov
or
jp
cli
mov
enter
sahf
cli
or
cs
loopne
outsb
call
loop
pusha
mov
inc
lret
dec
sbb
jecxz
daa
ds
mov
fs
lds
iret
cmc
or
inc
and
or
push
mov
lock
lahf
mov
jp
push
cli
flds
int3
arpl
jecxz
adc
or
les
cmpsl
movsb
push
or
mov
dec
cmp
xchg
repnz
jne
nop
adc
and
push
mov
mov
push
sub
dec
lods
push
addr16
int3
push
xlat
loopne
jge
arpl
les
nop
mov
push
pop
fs
fstl
sarb
pop
adc
xchg
aam
int3
mov
xor
push
pop
int3
jne
les
cmpb
in
mov
repnz
test
ret
in
add
out
add
incl
imul
js
xchg
push
sti
jle
repnz
mov
loope
pop
jmp
xchg
dec
out
dec
aad
adc
xor
xchg
ds
pop
mov
jae
inc
mov
outsl
lods
int
mov
repz
adc
push
loopne
pushf
int3
js
or
lods
xor
jo
sbb
sub
mov
cwtl
imulb
aad
mov
push
adc
mov
dec
sub
cmp
cmp
mov
fsubrp
cltd
mov
in
sbb
and
cltd
sbb
or
clc
sub
and
pop
ja
movsb
inc
sbb
pop
xor
pop
mov
and
outsb
fnstenv
xchg
mov
dec
sbb
xor
jecxz
lds
out
fists
cmp
lret
int
popa
ljmp
and
jne
sub
insb
aam
lcall
ds
add
pop
ljmp
or
or
cmpl
repz
addr16
mov
out
xchg
rolb
bound
scas
outsb
lcall
pop
jecxz,pn
stc
jmp
or
add
mov
shrb
and
mov
enter
andb
js
test
shrb
mov
fcompl
std
pop
loopne
xchg
jecxz
in
push
je
int
sbb
inc
adc
add
inc
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
jmp
cmpsl
icebp
cmp
pop
dec
arpl
xor
adc
xchg
sbb
xchg
mov
aad
jae
mov
shl
rcrb
xor
cmc
in
in
loopne
push
jmp
push
shrb
or
in
pop
cwtl
jge
pop
in
fnstenv
repz
repnz
xchg
push
mov
ret
and
xchg
loopne
dec
mov
das
push
sub
addr16
sti
sub
xor
arpl
iret
sti
jp
pop
xchg
dec
mov
ss
fsubr
inc
xor
or
and
push
cmp
xor
dec
stos
mov
call
cmp
data16
sti
adc
fucomp
test
add
out
sbb
lods
sahf
stc
dec
in
pop
cmp
mov
mov
sbb
mov
and
mov
mov
and
aam
out
inc
push
divb
jl
xchg
cmp
and
dec
xlat
jle
add
iret
inc
pushf
subb
pop
fsubrs
pop
adc
iret
pop
or
inc
int
int
sbb
std
mov
repz
lret
mov
push
sub
xchg
add
xchg
mov
adc
scas
sar
cmp
jecxz
ror
push
jge
inc
fwait
xchg
push
mov
fsubr
xorb
out
xchg
jecxz
xchg
ficomps
or
adc
push
jg
cmpsl
pop
aam
mov
push
popf
push
fsubrs
fidivs
sahf
rorb
fmul
ja
ljmp
jmp
push
dec
loopne
test
mov
jge
inc
jns
in
jg
dec
push
rcr
sub
mov
xor
push
dec
shll
sarb
jmp
jns
and
call
rol
cli
mov
dec
inc
daa
xchg
push
repnz
jne
and
cmp
gs
lret
imul
jl
pop
jo
push
inc
and
mov
xor
scas
push
xchg
popa
push
mov
jge
inc
shr
inc
push
sbb
adc
cmpl
lods
loope
in
loop
dec
adc
fsubrs
fmull
xchg
add
loopne
cld
lahf
mov
push
or
push
xchg
push
or
int
je
or
xchg
cltd
stc
loopne
cmpsb
jl
pop
push
js
pop
mov
inc
lret
mov
jp
push
dec
jnp
test
sub
inc
mov
lret
sub
adc
push
or
stc
loope
mov
scas
scas
in
movsl
mov
or
xor
in
clc
jge
mov
cmp
sub
loop
in
dec
pop
insb
bound
rol
mov
lret
xor
fisttps
jb
mov
add
cwtl
fisttps
sub
mov
fbstp
fadd
incl
dec
adc
add
aaa
data16
andb
jecxz
clc
stc
sbb
pop
jo
adc
mov
sbb
and
int
out
popa
das
mov
ja
pop
in
xchg
xchg
xchg
jnp
dec
mov
mov
push
pushf
call
lods
add
jo
iret
scas
pop
fcmovnu
outsb
and
xor
pop
ficomps
and
in
gs
js
pop
shlb
ja
in
out
sbb
jns
ja
in
dec
mov
fdivrs
adc
mov
loope
lds
pop
fbstp
or
cmpsl
mov
cmp
filds
in
call
inc
cmp
pushf
push
icebp
sbb
mov
mov
inc
push
pop
sub
lcall
push
pop
and
insb
ret
cli
stc
mov
mov
adc
or
xlat
das
xchg
add
pop
outsb
inc
enter
mov
push
jb
cmp
ficomps
out
insb
or
fcomi
adc
inc
data16
aas
rcl
inc
dec
into
fcmovnbe
mov
fs
mov
cltd
lods
hlt
mov
mov
lret
xlat
inc
mov
cmp
inc
push
popa
insl
xchg
adc
jbe
pop
xor
pop
scas
and
jg
xor
lret
or
stos
dec
cld
xchg
mov
xchg
xchg
inc
popa
enter
pop
sahf
mov
clc
lods
xor
lea
es
fwait
es
xor
pop
fcoms
or
inc
testb
bound
sbb
push
jne
mov
pop
pusha
fsubs
add
mov
in
sub
and
aad
sarl
stos
jb
inc
jg
pop
jns
xor
fdivrl
rol
test
adcb
xor
mov
xor
lods
shlb
repnz
subl
ja
cmp
hlt
push
pop
rorb
aad
ret
mov
adc
lock
imul
mov
mov
ret
out
and
sarl
or
daa
add
push
cmp
jbe
fsubr
adc
std
test
sbb
scas
jecxz
js
ds
add
mov
arpl
and
nop
adc
dec
pop
js
mov
and
insl
mov
orl
ljmp
xor
mov
add
mov
mov
scas
shlb
jnp
into
shll
sbb
cmp
and
mov
decl
inc
int3
ror
rolb
mov
cld
pop
fistl
inc
cmp
iret
cmpsl
ror
inc
outsl
nop
cs
outsb
shlb
or
mov
addr16
pop
leave
nop
push
sbb
cmp
rorb
arpl
popa
test
int
out
xchg
xchg
lock
hlt
jmp
pop
aad
sahf
or
mov
or
push
sarl
pop
fidivl
aad
imul
roll
jne
fidivrs
enter
inc
adc
sbb
mov
inc
add
dec
mov
or
xchg
and
addr16
mov
or
jmp
xchg
lock
or
sbb
rcl
jge
pop
cld
nop
jmp
mov
fdivrl
incb
sub
jle
dec
cld
mov
push
movsl
mov
insb
or
cmp
xor
cs
jns
aas
imul
cltd
mov
jge
js
stos
addb
mov
fcmovu
fstpt
adc
lea
mov
and
inc
push
mov
add
sub
shlb
sbb
fbld
imul
xchg
mov
cmp
adc
cs
jmp
stos
je
outsb
jne
negl
imul
xchg
test
jno
xchg
sbb
sbb
cmc
dec
add
jne,pt
and
fldl2t
pop
fisubs
sub
stc
jle
das
rorl
xchg
fdivrp
cltd
push
rclb
imul
mov
xchg
sti
insl
scas
mov
hlt
and
negl
imul
sub
andb
int3
test
inc
lea
pop
outsb
xor
xor
xchg
movsl
jl,pn
jg
test
clc
cmp
hlt
xlat
pminsw
mov
jmp
ljmp
sub
in
popf
jle
test
adc
xchg
pop
pop
rcr
or
adc
repz
bound
or
jecxz
lcall
jb
je
std
pop
lock
and
cmpsl
xchg
in
divl
sbb
cmc
cmp
repnz
js
call
outsb
iret
jge
es
fldenv
jp
mov
mov
adc
mov
mov
inc
loopne
and
inc
stos
inc
xchg
sti
and
stc
xchg
mov
repz
or
jns
ret
sub
data16
xor
mov
sub
arpl
adc
or
cmp
ficompl
cs
es
jg
push
cmpsl
mov
mov
mov
xorl
mov
or
xchg
inc
mov
gs
jne
les
aaa
jo
int3
movsl
aam
push
mov
in
negb
mov
mov
inc
aam
mov
out
mov
or
add
cld
sub
inc
pop
pop
popa
mov
and
lea
addr16
popf
jno
imul
cmp
cmpsb
mov
repnz
sbb
xchg
dec
inc
and
ficomps
push
sbb
in
loopne
in
test
mov
cmpsb
inc
gs
fnstsw
xchg
mov
push
dec
test
jb
push
cmp
out
add
cmp
cmp
and
scas
sub
pushf
sbb
and
out
cmp
adc
and
stos
mov
out
mov
jl
jne
movsl
scas
movsl
popl
mov
pop
mov
cmp
inc
xchg
imul
xchg
ret
movsl
pop
or
add
sub
xor
cld
mov
jp
pop
sub
jge
test
sub
out
sbb
icebp
mov
sti
and
cmp
mov
xchg
inc
js
lahf
out
daa
gs
aaa
and
and
loope
and
shlb
and
mov
cmpsb
pop
or
pop
sbb
push
adc
sar
cmp
nop
push
jno
aad
into
lcall
cmc
add
push
xor
mov
sbb
fwait
inc
shll
incl
and
add
loopne
mov
fiaddl
pop
bound
and
es
adc
mov
test
test
fdivs
mov
or
scas
jge
ret
jge
call
push
push
pop
ja
push
pop
jnp
sub
mov
sti
cmp
mov
or
and
cmp
push
mov
push
xor
mov
mov
inc
mov
sub
pop
fbld
mov
inc
xchg
popf
pusha
jmp
enter
add
jle
out
loopne
cli
push
add
pop
sbb
sarb
mov
clc
ret
push
jne
jecxz
jmp
push
sti
push
lods
add
test
lds
dec
enter
sbb
xor
jl
sar
jg
cmpsb
pop
or
jnp
pusha
xchg
mov
cmp
cmpsl
mov
hlt
ss
subb
out
mov
loope
dec
pusha
push
fs
jnp
popf
push
fnstenv
mov
stos
daa
gs
lods
sub
xor
lds
sbb
sarb
ret
or
cmp
and
sub
jae
xor
pop
addr16
mov
lods
xor
shll
cmp
fisubrl
sbb
js
mov
imul
pop
cmc
mov
arpl
in
pop
cmp
or
cwtl
in
iret
dec
jns
jge
dec
cmp
mov
or
sahf
pusha
dec
repz
add
mov
or
xchg
sbb
cwtl
repnz
mov
lock
jp
sti
and
jl
dec
jp
fs
jb
shrb
nop
push
fdivr
mov
stc
xchg
jmp
xor
inc
ss
mov
mov
push
pop
fs
push
pop
stos
jo
add
pop
push
fchs
cltd
jnp,pt
cmp
daa
loopne
jae
lea
icebp
xor
xorl
cmp
or
adcb
ljmp
mov
ficoml
out
nop
push
jae
inc
in
pop
and
int
outsl
dec
add
push
jmp
sub
lods
inc
sbb
stos
sub
cli
psraw
jno
push
mov
scas
enter
mov
mov
andb
movsl
xor
rcrl
ret
sbb
dec
test
orl
ds
enter
icebp
cmpsb
cmp
sarb
push
xor
outsl
or
inc
int3
loopne
mov
add
hlt
leave
loopne
or
ds
xchg
or
pop
push
leave
mov
sub
inc
aaa
inc
sbb
sub
mov
sbb
xor
push
xchg
loope
imul
ljmp
adc
inc
mov
sbb
fdivr
adc
adc
push
outsb
xchg
pushf
test
mov
pop
adc
inc
ret
inc
xchg
mov
mov
std
ljmp
inc
jb
arpl
pop
enter
pop
test
out
ss
sub
je
inc
aaa
pop
jl
into
dec
pop
push
adc
lea
std
push
stc
and
jle
sahf
les
sbb
cmpsb
sbbl
inc
sbb
mov
outsl
data16
xor
push
mov
xor
adc
ja
leave
loop
push
mov
cmp
hlt
sub
subb
cmp
mov
adc
mov
mov
mov
xor
insb
mov
mov
jmp
or
jmp
sbb
ret
sub
cmc
je
and
and
std
cmp
or
bound
sub
xchg
iret
mov
or
xchg
clc
jl
in
mov
push
xchg
lods
jg
pop
clc
cmp
adc
sbb
add
std
sub
shlb
inc
sbb
jb
iret
in
lods
pop
pop
cmpsb
add
je
xchg
mov
inc
adcl
scas
addb
mov
add
mov
sub
lods
sbb
xchg
inc
lahf
imul
test
mov
loopne
test
test
cmp
dec
pand
daa
aam
mov
xor
inc
cli
pop
dec
les
enter
xor
xlat
mov
adc
inc
out
test
leave
mulb
xchg
mov
scas
xor
arpl
sub
mov
sub
loopne
or
add
cmp
addb
pop
cwtl
adc
sbb
push
repnz
sti
mov
shrl
repz
cmp
pop
pop
fwait
mov
xchg
popf
aam
pop
inc
adc
mov
cwtl
lods
jp
js
xchg
js
pop
xor
adc
or
mov
cmp
mov
in
pop
les
push
and
or
ljmp
data16
cmp
aam
notl
add
dec
jno
rcr
sub
inc
mov
inc
ljmp
cmpsb
repnz
sbb
xchg
adc
pushl
push
push
call
mov
jmp
push
rcrb
and
inc
outsb
xchg
adc
ja
cli
movsb
xchg
mov
add
aas
mov
push
mov
mov
pusha
lock
mov
iret
bnd
sbb
imul
xchg
cwtl
jo
test
aad
mov
sub
int3
in
push
iret
scas
jo
mov
imul
inc
cmc
sub
cmpsl
rorb
pop
rcrb
enter
cmp
cs
mov
cmp
testb
ds
shlb
mov
fs
xchg
mov
adc
push
ret
popf
mov
xchg
add
repnz
bound
loopne
mov
mov
mov
or
sub
add
in
mov
dec
cmpsb
jmp
ud0
mov
out
mov
inc
lods
xlat
push
enter
dec
mov
push
jb
add
fmul
dec
xchg
dec
mov
scas
xor
mov
test
xor
jbe
add
pop
jns
jne
dec
test
mov
xor
stos
stos
inc
cltd
adc
cltd
adc
mov
cmp
mov
dec
lcall
push
das
sub
add
sahf
pop
add
cmpsb
adc
xor
ja
int
adc
adc
pushf
or
inc
sbb
dec
add
push
scas
out
or
ds
test
out
push
shll
mov
cli
shrl
ret
mov
jno
pop
scas
repz
dec
xor
or
cmpsb
add
adc
xchg
jge
test
adcb
stc
sub
sahf
lea
add
mov
les
out
fadd
or
test
popf
fstpt
testl
dec
imul
push
sbbb
xchg
fidivrs
int3
cmp
push
ja
cmp
mov
out
and
mov
pop
fisubl
sub
mov
fwait
inc
insb
xor
inc
in
out
pop
ret
fs
movsl
mov
sub
push
mov
and
cmp
dec
lcall
cmp
test
sarb
sub
fistpll
shl
or
cmp
fimull
int3
lds
and
or
jmp
mov
ss
xchg
jle
mov
cwtl
jb
lcall
pop
and
sub
push
jne
test
xlat
jns
or
jns
dec
xchg
lret
pop
aas
or
push
ret
mov
xor
das
and
lcall
dec
sarb
data16
sub
rcrb
mov
in
add
jmp
insl
outsb
pop
rcr
sbb
push
mov
jo
inc
rorl
inc
mov
popa
add
and
test
mov
xchg
cli
pop
jno
loope
into
into
jno
test
push
lds
ja
aaa
test
gs
mull
lock
lea
and
mov
ficoms
jge
lret
pushf
pusha
adc
ja
mov
push
cld
and
test
mov
pusha
bound
push
mov
sbb
xor
rorb
stos
adc
pop
mov
test
sbb
inc
das
hlt
imul
add
pop
cs
and
inc
fcmovnbe
jne
or
std
and
cs
cmp
in
insb
mov
xchg
xor
xor
mov
mov
pop
gs
inc
cli
add
sub
shlb
fcmovnbe
xchg
add
inc
cmc
mov
test
int
sub
pop
jle
inc
add
and
std
jmp
dec
popa
pushf
call
cmp
in
dec
push
loope
cmpsb
add
cmp
sbb
jge
hlt
out
sub
leave
sub
push
fbstp
dec
push
or
sub
repz
adc
or
test
pop
pusha
aas
xor
add
xchg
dec
mov
lcall
add
push
mov
push
xor
xchg
and
testl
mov
xchg
dec
cmc
pop
mov
jg
add
scas
sub
test
test
cmp
xchg
lahf
sahf
out
and
mov
adc
rcr
cmp
mov
sub
jge
or
adc
ljmp
lcall
xor
iret
mov
incl
dec
mov
outsb
stos
jge
dec
jg
pop
xchg
mov
mov
ret
mov
into
lods
ljmp
out
sti
cs
adc
push
pop
mov
ja
in
jae
int
adc
jl
imul
mov
inc
mov
pop
call
and
adc
and
jp
xchg
int3
pop
ret
insl
jmp
scas
dec
ret
loopne
sub
cltd
push
and
jle
add
ljmp
aam
cltd
sbb
push
shll
loope
mov
mov
pop
xchg
dec
icebp
loopne
mulb
inc
mov
xor
js
into
sub
adc
and
outsb
ds
andl
roll
dec
mov
xor
adc
fwait
jg
rcl
pop
dec
faddl
xchg
jnp
pop
dec
sbbb
fiadds
repnz
mov
adc
xor
push
std
pop
fnstenv
xor
sub
adc
stos
fs
dec
sbb
jbe
popf
loop
out
js
cli
xor
push
xor
add
inc
jo
cwtl
icebp
pop
lret
into
mov
das
dec
or
in
mov
test
cmp
mov
pop
jmp
dec
in
sarb
pop
push
xor
jo
es
push
mov
pop
cs
dec
fdivr
fsubs
lods
test
ss
sub
sti
push
in
adc
add
and
inc
ss
pop
mov
jmp
mov
sub
andl
push
jecxz
arpl
inc
outsb
mov
mov
rcrb
mov
cmpb
mov
shll
popa
sub
jmp
add
inc
movsl
int3
sub
out
xor
or
fcmovb
fistpll
es
int
out
mov
pop
push
cwtl
xchg
mov
loop
sbb
push
shl
mov
out
inc
dec
rolb
ds
jle
jnp
loope
cld
add
pusha
push
insb
push
jnp
testb
rolb
mov
adc
cmp
and
es
je
adc
es
inc
adc
dec
rolb
ss
hlt
pushl
jecxz
adc
sahf
popf
or
xchg
iret
pop
inc
and
repnz
pop
xchg
arpl
xchg
jno
dec
cmpsl
popa
stc
xor
iret
lods
ret
xchg
test
xchg
xchg
stos
pop
or
or
test
mov
out
xor
sub
lds
xlat
pop
data16
dec
add
lret
or
sbb
nop
out
mov
clc
out
clc
inc
sub
sbb
push
pushf
sti
cmpsl
pop
lahf
pop
inc
push
iret
test
dec
or
push
sub
mov
shrd
shr
shr
jmp
imul
scas
sbb
xor
ljmp
pusha
push
mov
adc
xchg
cltd
pop
stc
xlat
xchg
nop
cmp
cmc
add
sub
add
push
inc
insb
dec
fwait
inc
ljmp
scas
or
popa
mov
and
pop
int3
push
aas
add
xchg
fnstcw
enter
mov
pushf
push
sti
mov
jecxz
mov
xchg
mov
xor
sbbb
dec
xlat
xorl
repnz
imul
sub
adc
in
popa
jb
push
gs
ljmp
int3
sbbl
mov
lock
push
iret
jp
pop
icebp
add
mov
daa
imul
jl
icebp
jbe
aas
andb
icebp
pop
nop
pop
xor
inc
aam
sbb
out
loopne
jg
pop
or
bound
xchg
sbb
lret
arpl
addr16
xchg
cltd
addl
cmp
sbb
iret
shrb
sub
adc
pop
add
jo
in
xchg
and
test
imul
mov
in
dec
jmp
sbb
addb
pop
repnz
aad
loopne
xor
dec
xchg
or
push
fidivrl
in
lcall
jo
cmp
bnd
div
cmp
sbb
dec
lock
daa
jle
or
mov
or
adc
faddl
ljmp
shrb
adc
adc
movsb
lock
leave
stc
jl
mull
rorb
clc
sub
dec
sbb
mov
mov
daa
mov
scas
cltd
cmp
or
sbb
adcb
mov
lahf
outsl
inc
mov
repnz
add
fistps
ljmp
push
test
movsl
repnz
iret
je
mov
rcrl
je
or
jl
leave
es
add
out
stos
xchg
pop
mov
inc
adc
out
add
mov
loope
dec
adc
xchg
nop
imul
test
icebp
fisubl
mov
iret
add
xchg
mov
push
xchg
jmp
aad
movsl
inc
fwait
jno
stos
inc
mov
mov
in
sub
lret
pop
imul
cld
pushf
jne
sahf
or
inc
stos
enter
sbb
lea
xchg
pop
mov
pusha
hlt
out
pop
or
scas
data16
insb
fwait
mov
popl
mov
xchg
arpl
dec
sub
cmpl
outsb
push
mov
xchg
sbb
ret
add
pop
push
in
sub
push
push
je
adc
jns
cmovb
push
ljmp
jae
lret
cmp
dec
test
xor
imul
aad
popf
pusha
xchg
inc
outsb
xor
or
sbbl
and
into
pop
fldz
mov
fwait
clc
push
jae
jge
pop
dec
sub
test
or
and
les
cs
popf
xor
sbb
jge
fiadds
or
out
popf
dec
clc
out
mov
jno
mov
adc
adc
es
popa
jl
mov
adc
rol
mov
sbb
scas
jecxz
xchg
pop
dec
je
sub
pop
incl
xchg
sub
mov
lds
lea
cmp
lret
loope
adc
jnp
push
mov
lea
bound
xchg
lods
arpl
leave
das
call
pushf
mov
rcrl
cmp
cwtl
rcll
add
rep
pusha
or
add
sbb
mov
andb
or
and
stos
jp
push
mov
call
cltd
scas
ret
mov
repnz
in
jno
pop
mov
mov
repz
shrb
ret
push
cmpsb
mov
pop
sbb
jmp
inc
cs
push
cmpsb
cmpsl
addl
sub
iret
int
sbb
and
xor
xor
ss
jmp
xor
adc
outsb
cmp
pusha
mov
sbb
pop
leave
gs
ret
inc
sahf
hlt
cltd
pop
sti
stos
sub
xchg
std
mov
pop
adcb
mov
pop
sbb
jbe
mov
ret
loopne
xchg
test
push
arpl
out
out
stos
xchg
pop
das
loop
pop
aad
adc
dec
xor
pop
or
js
popa
out
inc
cmp
inc
int
adc
jo
xlat
dec
cmc
mov
xchg
loope
jp
jg
mov
repz
insl
push
imul
int3
mov
inc
and
push
mov
mov
int3
stc
mov
add
les
insb
jns
jbe
inc
xchg
sub
mov
adc
add
addb
mov
jp
add
mov
outsl
clc
and
test
mov
jne
sahf
cwtl
test
push
pop
jecxz
addl
xchg
int
out
fnstsw
jnp
or
icebp
fldcw
dec
clc
clc
or
mov
jg
xchg
push
or
dec
push
ss
lds
pop
cli
dec
xchg
xchg
xor
jecxz
jmp
pop
rcll
pop
mov
dec
pop
add
inc
push
lock
lahf
sub
cmc
les
jno
xchg
rcl
ret
cmpsb
addl
dec
add
lahf
insb
frstor
mov
xchg
and
sub
push
adcl
dec
mov
jmp
filds
sub
xor
int
dec
xchg
jnp
cmp
stos
scas
jg
leave
xchg
div
sub
or
add
push
iret
pop
test
imul
push
push
sbb
inc
or
push
adc
dec
mov
stos
out
add
pop
repz
dec
and
outsb
lods
lods
jmp
pop
inc
mov
dec
inc
or
fldcw
jae
mov
sbb
iret
cwtl
sbb
mull
dec
cmp
stos
sahf
dec
add
popa
add
pop
cld
or
sti
mov
inc
mov
loop
pop
adc
cmp
icebp
push
cmpsl
pop
pop
adc
leave
nop
lret
xchg
jl
dec
mov
xor
adc
pop
push
lock
ret
testb
into
pop
mov
test
xor
xchg
orb
cmc
jge
mov
inc
idivl
push
mov
enter
std
or
idivb
mov
lock
cld
lret
pop
out
dec
dec
push
mov
pop
popa
roll
pushf
lcall
inc
cltd
es
int
aas
sahf
mov
shl
and
scas
xor
push
mov
stc
mov
call
jnp
inc
adc
ucomiss
pop
pop
mov
lahf
frstor
push
lahf
mov
rclb
jg
or
dec
mov
adc
push
and
aam
aaa
or
mov
frstor
out
add
inc
jge
fisttps
xor
adc
pop
jecxz
fwait
movsb
fldl
pop
adc
jb
mov
pop
mov
data16
scas
ja
push
out
popf
cmp
xor
push
xor
mov
mov
mov
push
push
jmp
push
xchg
stos
les
ret
pop
cmpsl
jo
push
lcall
daa
imul
mov
inc
jecxz
int
pop
inc
addr16
mov
fcoml
xchg
pop
cmp
mov
push
scas
lahf
xchg
cmp
xorb
jle
pusha
cmp
out
in
mov
jmp
out
shlb
cltd
test
cmpsb
in
mov
inc
repnz
dec
mov
inc
iret
sbb
dec
lret
in
inc
pop
es
push
lock
mov
xchg
in
adc
mov
aam
jnp
xchg
sub
sbb
fistl
stc
iret
xor
inc
cmc
push
jle
out
cmpsb
jp
dec
dec
xchg
ds
data16
adc
inc
popf
in
push
sub
int
jp
mov
xor
loope
mov
mov
push
adc
gs
push
das
add
out
lds
shll
sbb
mov
push
xchg
aad
xchg
adc
test
ficomps
push
mov
std
jge
aad
aaa
idivl
mov
stos
mov
lods
and
cwtl
jbe
dec
push
dec
sub
loop
jbe
xchg
jnp
js
test
and
push
aad
cmp
or
jecxz
xor
sub
xor
je
inc
mov
pusha
les
pop
inc
inc
sahf
lock
loope
jmp
cmpsb
div
cmp
jae
clc
dec
dec
loop
sti
or
shl
add
stc
test
cli
loop
jne
mov
mov
xor
mov
adcb
sbb
xchg
xor
loope
cmp
pop
dec
je
ret
mov
push
and
pop
in
xchg
xchg
outsl
add
es
lretw
and
out
ds
aad
and
sarl
inc
in
pop
into
leave
scas
xchg
inc
xor
mov
push
jle
cmp
popa
divl
and
in
lds
jmp
mov
aam
and
das
sbb
pop
mov
sub
out
mov
ret
push
fwait
icebp
int3
aas
push
and
mov
xchg
xchg
push
cwtl
mov
stc
push
sub
add
jns
popa
inc
call
mov
mov
xchg
xor
fldt
daa
push
js
jecxz
mov
imul
aaa
xchg
ja
rolb
push
xchg
faddl
repz
mov
mov
push
mov
cmpsl
mov
push
daa
push
push
adc
or
and
cmc
adc
mov
push
sbb
or
xchg
mov
mov
and
mov
cmp
popf
call
xchg
std
aad
inc
arpl
push
imul
sbb
stc
lahf
lock
fnsave
xorb
sbb
mov
call
cmp
mov
test
pop
sbb
int3
inc
out
nop
sbb
aam
sbbb
jg
and
jmp
aaa
fstps
imul
movsb
xchg
or
cmp
xor
sbb
push
sub
dec
sub
xor
add
popf
cmp
aam
xor
call
push
mov
pusha
out
mov
mov
fsin
insb
cmp
jne
mov
popf
xor
inc
int
pushl
pop
pop
mov
mov
xchg
xor
in
out
subb
imul
pusha
xchg
fwait
cld
push
sub
inc
or
xchg
sub
pushl
mov
dec
cmpsb
lcall
pop
mov
dec
inc
fldl
jb
repz
and
dec
mov
sbb
sbb
mov
mov
jb
sti
adc
int3
lahf
into
ljmp
aas
mov
xchg
and
movsb
clc
dec
std
inc
mov
xchg
hlt
mov
xchg
rcr
dec
inc
push
push
out
pop
mov
push
jb
mov
cmp
loope
scas
jp
pushf
pop
sub
out
mov
dec
int
scas
pusha
cli
mov
mov
mov
dec
fucomi
jp
cli
adc
push
mov
and
lds
orb
mov
ja
ja
cmpsb
sahf
xor
jae
push
or
or
fldcw
pop
sub
cmp
cmp
adc
imul
lret
xchg
and
cmp
fs
cld
mov
cmp
inc
xchg
gs
jge
push
sub
pusha
es
fldl
aas
insl
xor
popf
lcall
add
iret
arpl
pop
loope
lret
mov
jnp
lds
lods
outsl
nop
call
clc
and
jp
outsl
pushf
mov
pop
lret
mov
mov
push
xor
shlb
testl
jmp
repnz
mov
sbb
xchg
push
aad
mov
cmp
push
xor
dec
or
iret
addr16
popa
jmp
pop
fsubl
shll
dec
scas
js
stos
fmulp
xor
daa
imul
dec
mov
int3
sarl
into
mov
repnz
lahf
push
pop
sub
cmpl
mov
push
js
mov
mov
sbb
shll
mov
push
gs
rorl
jg
pop
xor
sub
xchg
je
push
out
mov
adc
mov
insb
leave
ret
enter
dec
ror
sar
test
rol
enter
fnstsw
xor
adc
cld
mov
pop
jb
push
hlt
mov
adc
dec
int3
xchg
mov
push
out
jnp
es
cwtl
pop
ds
out
and
and
fildl
cmpsl
insb
pop
xchg
jp
push
add
mov
add
fisubs
in
ds
shll
adc
frstor
mov
jg
push
dec
jae
and
and
mov
andb
out
xchg
mov
movsb
mov
jp
xchg
pop
cmc
popl
mov
pop
test
xchg
in
xchg
push
inc
adc
test
xorl
out
xor
jl
cwtl
psraw
cmp
mov
inc
push
or
mov
jge
fs
pop
jle
mov
mov
and
std
mov
sbb
faddl
sub
adc
cld
or
leave
mov
je
rcll
stos
cmp
pop
add
mov
ret
stc
arpl
nop
jne
pop
push
mov
cs
inc
mov
and
push
push
popa
jp
rcr
mov
mov
mov
mov
inc
jno
sti
push
sub
jnp
insl
aam
or
fucomp
xchg
and
sarb
or
repz
cmp
movsb
lds
mov
ret
xchg
cwtl
mov
in
cmp
inc
cmp
ret
sub
clc
inc
sbb
rdtsc
std
test
popa
mov
insl
sbb
dec
xor
mov
cmp
xorl
cwtl
mov
test
sbb
test
cmc
xchg
push
lcall
mov
sbb
push
cmc
push
push
jge
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
jmp
pop
jge
lds
hlt
inc
xchg
movsb
jo
enter
xchg
jecxz
ficomps
js
popf
fmuls
add
push
xlat
call
dec
mov
and
and
mov
add
sarl
fcom
sahf
popa
stos
out
and
cld
cmc
xor
mov
lahf
movsl
incl
arpl
adc
test
ja
jne
or
test
pop
lock
mov
mov
xchg
lea
jne
dec
dec
idivl
repz
shlb
push
or
repz
icebp
push
mov
sub
cld
call
mov
push
push
popf
mov
out
add
pushf
movsb
inc
addb
mov
lods
hlt
pop
ficoml
mov
fisubrs
movsl
aaa
ja
cld
das
das
dec
icebp
xchg
mov
lock
inc
jmp
call
stc
fnsave
stos
and
sub
push
or
sub
jmp
popa
pop
in
stos
cmp
mov
sub
mov
inc
dec
ss
xor
dec
add
mov
mov
xor
enter
cmp
mov
arpl
loop
cli
jns
loop
xchg
subl
insl
jmp
testb
jge
sbb
mov
xchg
rorl
cmp
sbb
shlb
fs
repnz
aad
mov
cmc
push
cmpb
aas
mov
lret
dec
ljmp
or
enter
mov
cli
int
push
add
xor
push
dec
daa
inc
shll
les
in
ds
int
movsl
pushf
cmpsl
adc
scas
rcrl
lods
and
fldenv
sub
test
mov
out
mov
rcll
adc
and
mov
xchg
rclb
or
jae
pop
jnp
mov
ret
dec
aas
mov
out
andb
jnp
mov
xor
insb
push
dec
lea
call
pop
sub
arpl
insb
nop
add
in
test
mov
lea
imul
fisttpl
cmc
in
dec
pop
jge
leave
xlat
std
inc
or
iretw
xchg
clc
cmp
in
mov
mov
std
and
pusha
sub
inc
inc
loope
lock
dec
xchg
lock
fwait
jo
xor
add
push
mov
sbb
fs
aad
cmp
xchg
js
scas
sahf
cmp
fstl
mov
inc
scas
mov
xchg
push
adc
dec
in
push
push
repz
jle
xor
fcoml
cltd
ss
pop
lsl
arpl
rcll
lea
pop
sub
sarb
xor
jmp
inc
cmpsb
and
xor
mov
into
arpl
add
call
xchg
inc
fists
push
rcrl
adc
loope
add
mov
adc
hlt
js
xchg
dec
jmp
adc
cmp
pop
shlb
pop
adc
sub
nop
test
mov
inc
and
pop
sbb
cmp
and
daa
or
mov
repnz
dec
bound
ficompl
fidivs
punpcklwd
push
loop
xor
movb
shll
jmp
xchg
sbb
and
dec
enter
inc
inc
mov
out
and
mov
sbb
rolb
or
and
fcmovne
and
ficomps
sarl
push
out
jnp
or
std
push
mov
leave
sub
cwtl
sarb
clc
push
rcrl
jg
or
or
fucom
sbbl
push
adc
sbb
jl
push
and
pop
fimull
mov
pop
je
mov
push
mov
mulb
enter
or
pop
push
add
repz
sbb
cltd
or
ret
adc
xor
ss
inc
in
adc
inc
cmp
sbb
call
clc
xchg
in
test
pusha
loopne
mov
jne
and
push
in
daa
adc
mov
push
test
add
jl
lods
inc
jle
loope
adc
repnz
test
adc
faddl
dec
test
jne
push
push
sbb
dec
aam
and
loop
dec
stos
mov
xor
jae
jbe
mov
test
mov
out
cmpsb
inc
push
mov
insb
ret
inc
sbb
test
cmp
fucom
shlb
ljmp
jbe
jmp
gs
in
mov
mov
mov
sbb
sub
sbb
lds
popa
test
mov
scas
jge
push
negl
mov
sbb
les
jp
cmc
inc
xor
imul
test
xchg
pop
mov
dec
jmp
inc
pop
ss
mov
loop
sub
jo
hlt
inc
pushf
xchg
mov
xchg
imul
mov
nop
fnsave
mov
xor
mov
jge
gs
dec
adc
imul
out
nop
sub
jmp
jae
leave
iret
adc
enter
push
loope
dec
mov
fcompl
scas
pop
mov
dec
hlt
and
xlat
or
es
call
push
fcoms
cwtl
cmp
std
rolb
mov
push
xor
mov
pushf
jns
lret
cmp
xlat
cmp
cmp
test
and
test
lcall
or
ds
sti
or
call
sbb
xchg
int
movsl
adcb
rcrl
cltd
adc
movsl
cmpsb
xor
aad
and
pop
inc
xchg
pop
pop
mov
cmp
lret
stc
scas
scas
dec
jae
cmp
lcall
xchg
int
mov
divb
inc
ljmp
std
mov
adc
cmp
sbb
adc
in
sahf
movsb
ds
leave
arpl
xor
mov
test
outsl
mov
xor
mov
inc
adc
or
inc
sub
je
mov
push
adc
push
les
dec
fwait
xor
andl
add
inc
out
loope
xor
push
arpl
dec
mov
adc
xor
push
jg
out
mov
shl
in
dec
sbbb
xchg
sub
js
sti
mov
loop
sbb
sub
aad
loop
clc
push
adc
sbb
mov
lret
repz
orb
mov
dec
shlb
sub
into
out
mov
leave
cwtl
adc
add
sbb
loop
xchg
lods
and
test
ljmp
repnz
jnp
inc
cs
mov
cmp
movsb
jae
xor
andb
jge
cltd
incb
faddl
sbb
stc
pop
cmp
cmp
jle
or
shrd
shr
jmp
and
add
loop
es
pop
js
push
bound
adc
xchg
mov
sbb
sub
add
fs
adc
fisttps
cmp
mov
mov
daa
jb
inc
mov
jecxz
mov
jb
scas
dec
mul
push
loop
lea
push
push
adc
lock
nop
mov
mov
mov
cs
sub
mov
fstps
xor
inc
push
xchg
mov
xchg
jmp
pop
lret
xor
mov
out
scas
je
xlat
sbb
pop
add
xor
in
mov
mov
loop
sub
mull
mov
jnp
xchg
bound
dec
enter
pop
ja
jecxz
pop
cmc
loopne
cltd
lods
mov
mov
scas
insl
outsl
jnp
movsl
lea
pop
adc
adc
jl
adc
bound
sbbb
jg
movsb
pop
mov
dec
or
orl
sbb
leave
subb
es
xchg
decl
mov
idivl
inc
mov
sub
adcl
mov
xchg
sub
jnp
or
outsb
fxch
jmp
scas
or
pop
mov
push
add
jp
dec
repnz
push
les
jmp
sub
jmp
push
in
in
out
fstpt
xor
inc
inc
pusha
imulb
jno
cmp
loopne
mov
ss
add
das
push
enter
sahf
popf
addb
sbb
sarb
push
out
loop
xor
jnp
mov
pop
gs
ss
pop
pop
pop
loopne
pop
dec
jb
inc
les
pop
xchg
inc
mov
sti
xchg
icebp
mov
pusha
insb
gs
hlt
inc
lods
xchg
pop
xor
je
cltd
cmp
inc
stc
pop
fwait
push
or
std
mov
addr16
lds
lret
dec
mov
scas
push
jne
mov
lds
ret
ja
int3
dec
xchg
cmp
test
push
arpl
xchg
xchg
push
pop
add
mov
addr16
push
loopne
jmp
add
cli
les
push
push
mov
jno
loopne
jb
dec
loope
sub
sub
ret
xchg
int
pop
arpl
inc
add
aam
pusha
cmpl
mov
out
sub
sbb
shr
test
cld
inc
rcrl
or
ret
sti
xor
jae
dec
mov
mov
cmp
xchg
mov
mov
jle
repnz
cli
xor
jg
pop
push
ljmp
cwtl
inc
aam
sbb
add
add
ret
mov
stos
sbb
gs
mov
scas
iret
out
or
sti
xchg
popa
or
iret
mov
push
xchg
in
sbb
sub
xchg
mov
sub
xchg
sarb
es
aas
jnp
xor
and
xor
sub
add
out
sbb
jns
lds
popa
cmpsb
cmpsl
cwtl
sbb
xchg
mov
iret
nop
bound
dec
mov
dec
cmc
lods
addl
cli
xchg
movsb
insb
xchg
out
mov
je
jns
mov
mov
test
and
jle
ret
lds
adc
push
cmc
mov
xchg
and
xchg
and
mov
fisubl
jl
aam
dec
xor
xor
enter
aas
push
pop
sub
xchg
scas
jns
addr16
sbb
leave
jbe
lock
dec
or
les
mov
sbb
iret
xchg
cmc
jecxz
clc
popl
test
cmp
xchg
adc
sub
es
xor
and
pop
out
popf
pop
mov
pop
fisubs
and
ljmp
jne
mov
mov
mov
loope
stc
ljmp
cmpsb
shll
push
push
orl
lods
mov
mov
iret
lcall
ljmp
push
imul
sub
out
rorl
and
or
pop
icebp
outsl
sbb
push
inc
loope
and
loop
aaa
adc
fnstcw
pop
sub
mov
jmp
int3
xchg
out
jno
sub
repz
fidivrs
cmp
push
ja
aam
mov
mov
fstpl
fisttpl
xchg
mov
push
mov
jns
sub
cmp
clc
jge
popa
rcll
pop
pop
xor
cmpsb
fdivr
sbb
mov
out
aaa
sarl
fidivs
and
stc
inc
jl
mov
mov
cmp
cmp
dec
movsl
and
add
in
jg
ficoms
aam
jge
jns
add
pop
inc
ds
mov
scas
insb
loop
xchg
push
or
inc
fnstsw
push
cld
sub
push
xlat
push
fs
jmp
push
dec
inc
call
or
test
mov
pop
inc
jae
ja
cld
pop
push
ror
cmc
sub
int3
es
sub
push
dec
lods
xchg
neg
insb
sub
jge
in
push
mov
out
mov
shll
mov
and
mov
out
mov
decb
sbb
shll
xor
mov
push
add
cld
repz
mov
xchg
inc
inc
fwait
clc
pushf
movsb
outsb
fwait
lahf
je
cmpsl
jmp
das
jo
les
enter
cmc
dec
ror
mov
jo
lahf
xor
or
pop
mov
repz
sbb
inc
leave
nop
mov
xchg
dec
and
cwtl
mov
cmp
pop
mov
repnz
cmp
aas
sahf
int3
sub
imul
xchg
push
sbb
popa
push
test
pop
mov
es
push
mov
ficompl
ror
xchg
in
xchg
sti
insl
pop
inc
cmp
lahf
test
xchg
ja
push
xor
punpckhwd
lret
aaa
push
ds
cmp
aad
pop
stc
mov
xchg
jno
lret
mov
dec
add
sbb
mov
sbb
add
sahf
insb
nop
jg
rcrb
xor
mov
push
mov
jp
pop
call
cmp
and
js
sbb
in
adc
es
aam
sub
pop
outsb
fisubrl
fidivl
test
cmp
mov
xchg
jns
ret
jl
or
jo
out
mov
in
test
mov
ret
jns
xchg
adc
mov
or
shll
add
invd
lods
ds
jle
jmp
inc
xchg
and
enter
push
jo
pop
js
xor
mov
mov
xchg
and
clc
xlat
out
pop
mov
ffree
ds
xchg
xlat
repz
test
pusha
sbb
shlb
add
arpl
mov
xchg
leave
rcll
adc
mov
pop
push
adc
fisubrs
ret
decb
mov
jns
js
daa
sub
mov
cmp
pop
or
ljmp
or
shl
xor
or
jmp
aam
mov
xor
push
xlat
mov
adc
xchg
mov
adc
dec
fstpt
jae
dec
push
ja
jp
xor
xchg
or
sbb
popf
mov
cld
lcall
mov
xchg
pop
sarl
gs
ja
push
and
fistps
pop
stos
mov
dec
out
mov
iret
or
mov
xchg
pop
sbb
mov
and
xchg
fisubl
mov
jae
jb
daa
xor
out
in
subps
call
cmp
mov
fs
lods
subb
adcb
cwtl
cs
add
repz
ficoms
hlt
fcoms
xchg
pop
or
push
push
adc
in
pop
cmpsb
insl
fs
mov
lahf
jne
jecxz
adc
mov
mov
mov
stc
lock
cmp
mull
dec
sbb
adc
push
inc
and
jns
bound
cmp
jmp
cwtl
xchg
push
out
xchg
mov
mov
xchg
inc
aas
rclb
or
xchg
push
push
out
out
jbe
jb
adc
call
xor
and
and
outsb
lods
or
mov
mov
dec
inc
push
loop
scas
inc
push
inc
mov
lods
cmpsb
cmp
int3
pop
testl
push
dec
dec
test
dec
mov
lods
push
fisttpl
pop
mov
jb
out
je
push
mov
and
jns
dec
lods
jnp
xchg
jns
repz
sub
sti
cli
aad
push
fisubl
mov
shlb
out
lret
fwait
in
push
loopne
repnz
jl
mov
inc
mov
pop
xchg
adc
pop
cmp
push
cmp
adc
jmp
aaa
gs
pop
adc
mov
fs
daa
pop
int
lahf
aad
loope
sti
pop
sub
adc
mov
aas
and
das
dec
cmc
xor
imul
js
les
pop
and
shl
xlat
inc
inc
and
push
pop
add
pop
lods
int
xchg
fwait
add
push
add
pusha
xor
fwait
xchg
mov
notb
jbe
jecxz
lea
daa
movsb
push
adc
push
test
sub
fbstp
in
fadd
push
pop
add
sbb
inc
push
xchg
sarl
mov
popa
add
sbb
mov
pop
stos
scas
push
aas
and
dec
adc
fisubrl
xor
xchg
dec
inc
and
push
add
push
and
jg
xchg
sub
lds
int3
nop
fcmovb
xchg
repz
frndint
xor
cmp
bound
fldenv
ficoml
add
clc
add
sbb
xor
cmp
adc
pop
mov
loop
add
call
aas
addl
pushf
pop
into
add
popf
fdivrl
pop
add
cli
in
adc
clc
inc
mov
mov
in
mov
test
jno
aam
ljmp
cmpsl
imul
push
out
ds
sbb
push
stos
jne
mov
lret
add
mov
loop
and
mov
test
jmp
and
bound
mov
add
out
pusha
mov
or
jl
movsb
pop
push
push
repz
xchg
int3
aas
inc
xor
insl
jmp
adc
inc
jmp
mov
sahf
mov
or
adc
xchg
jecxz
loopne
and
xor
sbb
lock
test
nop
pop
push
shr
sbb
lret
imul
pop
xchg
out
inc
icebp
enter
int
jb
insb
dec
jecxz
icebp
scas
mov
adc
sub
cmp
sub
sub
sbb
insb
imul
jns
filds
dec
sbb
xchg
dec
dec
mov
imul
mov
pop
lock
lea
mov
fdiv
cmpsl
jae
push
lods
div
cmp
fstps
sarl
and
cmp
lcall
or
ds
xchg
sbb
sub
add
int3
adc
dec
jecxz
xchg
fst
fwait
mov
sbb
inc
shrl
nop
push
subl
insb
sbb
cmp
xor
lock
xchg
push
xor
sub
jp
into
lcall
aaa
push
lret
mov
data16
xchg
stos
fwait
scas
push
rcrb
sub
cli
pop
out
sub
pop
dec
add
jle
into
add
add
xchg
mov
jno
inc
lret
stos
pop
jge
dec
icebp
xor
xlat
inc
je
negl
inc
das
dec
sahf
js
popf
sub
sahf
ror
jl
mov
mov
jo
je
enter
dec
mov
repz
cmp
pop
xchg
cmp
jmp
jbe
jns
fldl2t
jnp
xor
or
pop
xor
in
clc
mov
jp
lods
aad
call
bound
ret
loop
mov
scas
scas
pop
pop
push
cmp
mov
inc
xchg
mov
pop
sub
xor
sbb
mov
mov
loope
sub
cli
pop
pop
jno
and
jno
push
cltd
push
push
jle
sbb
dec
enter
sbb
mov
inc
push
pop
rorb
xchg
jecxz
mov
jne
inc
mov
cmpsl
xchg
popf
fs
mov
jecxz
fwait
or
call
sti
and
push
sbb
jle
int
adc
leave
push
outsb
int
add
cld
lods
int
lock
dec
mov
nop
imul
scas
jae
arpl
mov
testb
sub
in
push
or
jp
inc
imul
ljmp
pushf
sbb
push
dec
arpl
xchg
push
loop
or
inc
out
jo
and
adc
mov
jns,pn
fnstsw
stos
lea
adc
pop
jmp
andl
dec
test
roll
jmp
inc
rolb
daa
adc
incb
adc
stos
or
mov
repz
push
imul
cmp
cmpb
jl
test
in
mov
xchg
or
cmpl
fldl
mov
ss
ja
mov
jp
sarl
sub
fistl
cs
xor
sub
popf
inc
cmp
fsubrl
aaa
mov
aam
gs
add
cltd
pop
stos
or
mov
jo
je
loopne
xchg
sbbb
xlat
rolb
scas
enter
xor
jecxz
inc
pop
add
mov
xchg
test
dec
push
in
push
mov
mov
daa
rclb
and
xor
out
jl
clc
sbb
push
stc
enter
outsl
xor
cmp
pusha
xchg
inc
out
dec
mov
fxch
outsb
jbe
js
ds
cmc
mov
and
pop
cmp
out
shl
int3
mov
hlt
xor
test
popaw
ja
xchg
mov
xchg
ja
mov
mov
mov
adc
and
roll
jnp
pushl
cmp
xchg
lcall
notrack
sub
into
icebp
xchg
mov
jmp
or
pop
inc
or
and
jo
adc
xchg
dec
popa
pop
movsl
jnp
lcall
sub
pusha
out
and
inc
dec
gs
insb
jb
jge
pusha
jne
in
inc
mov
ss
mov
mov
jo
push
push
lds
push
mov
mull
test
lret
sti
sub
sbb
cmp
std
jmp
stos
roll
rcrb
jle
mov
xor
in
inc
inc
xor
jge
push
pop
jbe
out
and
out
or
sbb
add
cwtl
ljmp
or
jl
sbb
xor
cwtl
cs
out
pusha
push
dec
cs
mov
mov
or
stos
dec
dec
jo
jo
in
mov
stc
or
ret
mov
adc
loopne
fildl
dec
mov
movsl
pushf
leave
pop
ljmp
scas
aaa
and
icebp
pushl
sub
outsl
arpl
add
mov
pop
cmp
pusha
in
ret
jne
sbb
push
dec
cmp
imul
lcall
fmuls
aaa
outsl
mov
mov
lock
add
pop
call
jne
xchg
shll
ja
dec
scas
jecxz
sub
fwait
add
js
mov
repz
push
xchg
daa
cld
xor
sbb
mov
or
add
xchg
inc
push
mul
pusha
mov
pop
in
nop
fildll
pop
mov
lret
loopne
movsb
mov
jmp
decb
aas
push
add
test
add
mov
add
ds
and
mov
repz
lcall
incb
sbb
sarl
pop
insb
xor
mov
pop
cmp
stc
cld
and
popf
int3
xchg
fucomp
ret
jecxz
sub
movb
nop
test
mov
xchg
shl
sahf
cs
cmpsb
mov
cmc
pop
fdivl
iret
cltd
adc
xor
add
int
stc
adc
es
aas
daa
rclb
mov
mov
call
pop
sahf
mov
dec
dec
xor
xchg
adc
scas
xchg
mov
sub
fs
fs
shl
arpl
adcl
in
pusha
dec
jbe
cmp
insl
dec
xor
mov
adc
adc
into
pop
jl
stc
scas
pop
inc
fnstsw
enter
testb
ds
fildl
xchg
mov
es
inc
mov
bound
inc
or
fistpll
jno
cmp
fstpl
addb
add
stc
xor
mov
push
pop
adc
sub
test
stos
xchg
mov
repnz
xlat
inc
cmp
push
push
or
dec
ds
mov
adc
mov
sahf
adc
movsl
or
ret
push
or
xchg
cmp
add
push
popa
cwtl
rolb
jnp
and
inc
popa
inc
scas
and
dec
cwtl
dec
popf
pusha
mov
cmp
out
sbb
xchg
push
or
lcall
xor
pop
arpl
shrb
in
xchg
sub
mov
subb
jle
inc
sub
add
xor
int3
in
fcompl
sbb
int3
stos
testl
je
jae
jb
xchg
in
lock
cmpsl
in
mov
pusha
sbb
pop
push
inc
cs
jne
adc
les
jnp
mov
dec
xor
cmpsl
lahf
fdivr
pop
ss
cmp
pop
inc
push
dec
pop
and
sbb
int3
clc
jle
push
xor
inc
jmp
andl
ret
xchg
cmp
mov
xchg
or
insl
lock
jb
mov
sbb
mov
lcall
sarb
out
xor
inc
mov
divps
lahf
adc
or
shlb
es
cli
or
mov
in
xlat
out
sub
add
cmp
xor
je,pn
lret
sbb
and
int3
pop
inc
je
jp
out
xchg
daa
or
in
mov
test
scas
pop
sub
xchg
stos
fsubrl
jp
fs
scas
ss
lret
ljmp
push
out
jae
push
in
scas
inc
xchg
xor
inc
xchg
mov
fnstenv
loop
call
jge
pop
or
bound
add
repnz
hlt
shrb
push
jg
jge
das
arpl
sbb
scas
and
pop
pop
or
cli
mov
outsb
mov
xor
test
imul
inc
out
and
lret
and
push
fldenv
sub
sar
fistps
add
dec
inc
pushf
mov
sub
mov
fisubrl
ret
dec
lahf
cmc
inc
mov
adc
leave
call
in
sahf
rcrb
divb
stos
jg
pop
mov
faddl
aaa
dec
ror
cli
jno
sbb
lock
lret
push
fldt
push
push
in
add
dec
das
in
mov
mov
push
addr16
push
inc
push
aam
int3
xor
test
lret
mov
testb
jo
stos
mov
stos
into
aas
outsl
fistps
aam
adc
sub
push
pop
pop
xor
push
xor
rorl
clc
lret
dec
dec
pusha
cmp
inc
aas
sub
mov
add
jno
add
pop
mov
mov
mov
mov
shll
and
cmp
inc
jae
cmp
shld
das
fstpl
aas
xchg
test
dec
notl
mov
jbe
adc
or
mov
push
push
sub
popf
push
xchg
mov
mov
lret
add
push
test
popf
dec
pop
sub
fmul
loope
xchg
dec
into
popa
bound
and
or
dec
test
sub
mov
lahf
sub
push
loop
test
mov
dec
loope
add
fcoms
pop
xchg
cld
jp
pop
jnp
adc
xchg
and
inc
mov
or
lahf
pop
shlb
call
nop
mull
add
jnp,pt
mov
test
jae
and
test
push
mov
int
mov
je
push
sti
pushf
xchg
jb
in
and
and
xchg
cmpsb
scas
stos
pop
mov
test
xchg
push
push
icebp
hlt
mov
std
add
sub
rcrb
int3
sub
sbb
iret
enter
cmpsb
jo
nop
inc
push
pusha
push
loopne
lock
fcomi
mov
jne
cli
fsubl
sub
aad
int
jne
cwtl
inc
mov
jns
adc
ret
scas
and
subl
out
ror
clc
mov
jns
cli
sbb
xor
or
add
popl
adc
icebp
fisttps
fimuls
add
push
int
jbe
cwtl
push
or
insb
dec
cmp
das
add
or
dec
and
and
dec
fimull
pop
add
std
sti
sbb
sbb
mov
out
adc
xchg
xor
and
imul
repnz
jl
mov
add
out
add
aas
and
sub
scas
daa
jno
jno
jo
push
mov
int3
push
movsl
xchg
aas
push
lock
add
jns
call
xchg
jecxz
insl
sub
mov
dec
ret
dec
inc
fwait
pop
push
adc
mov
dec
loope
imul
pop
in
rcl
push
hlt
dec
pop
subl
jno
and
cmp
sbb
icebp
leave
mov
pop
loop
inc
mov
stc
push
mov
adc
loopne
filds
push
test
inc
mov
subb
movsl
mov
jne
insl
test
xchg
dec
stos
xor
pop
mov
jge
adc
jne
pop
and
dec
mov
jnp
sub
fwait
add
push
jecxz
scas
adc
rcrl
hlt
mov
insl
lea
fwait
in
mov
mov
jnp
mov
lock
ret
jno
lcall
jns
aaa
sbb
mov
sahf
test
pop
mov
jnp
mov
inc
mov
fidivl
loope
xor
test
xor
add
out
fistpl
cwtl
mov
orb
push
in
mov
sbb
iret
ficompl
gs
adc
imull
xchg
in
clc
mov
out
sub
hlt
pop
ja
mov
lea
or
pusha
aad
sarb
and
mov
mov
loop
dec
adc
out
in
jg
stc
inc
fisttpl
test
push
outsl
sbb
cmc
add
icebp
sbb
push
cltd
into
xchg
sbb
dec
rcrb
repz
orl
mov
insb
std
das
xor
test
sti
pop
loope
movl
arpl
mov
or
incl
frstor
dec
mov
push
lds
lea
cmp
or
insb
cmpb
mov
push
push
add
je
pop
sub
aam
xchg
stc
pop
sbbb
mov
add
faddl
jne
pusha
fiadds
mov
xlat
jl
mul
mov
lods
lret
data16
adc
pop
movsb
call
lret
pop
adc
dec
arpl
jecxz
push
lahf
push
xchg
jb
mov
xor
rcrb
xchg
lods
jb
pop
push
dec
stos
lods
xor
xchg
and
in
inc
idiv
out
fwait
imul
hlt
adc
push
lock
movsl
fwait
aam
repz
mov
mov
inc
loope
pop
in
loop
ret
mov
aad
mov
inc
sub
in
ret
bound
fs
cwtl
addb
shl
icebp
addb
loop
rcrl
icebp
adc
sbb
aad
sub
pop
adc
repz
cmp
or
or
sbb
fs
data16
pop
cmp
pop
mov
je
repnz
lcall
xor
movsb
dec
xchg
sub
das
das
sbb
ja
xchg
push
adc
scas
repz
jmp
dec
addr16
dec
js
xor
inc
jns
inc
fnstenv
popa
lods
ret
leave
sbb
jp
pop
xchg
mov
jns
out
cmp
xor
xor
lods
pushf
cmpb
repz
jmp
sub
mov
imul
gs
imul
aaa
jnp
sbb
out
mov
stos
jecxz
mov
dec
insb
stc
jge
dec
insb
lahf
lds
or
pop
mov
add
addl
mov
ror
sub
iret
lods
mov
insl
jg
mov
xchg
push
insl
jmp
rorl
pushf
push
orb
and
fisttps
dec
mov
mov
inc
aaa
mov
push
insb
cmp
test
push
ds
sub
nop
enter
mov
sbb
into
xor
push
int3
bound
jl
add
jle
lahf
xchg
mov
ljmp
rcll
inc
scas
in
icebp
mov
xchg
dec
aad
lea
imul
and
adc
or
jb
pop
cmc
dec
sub
sub
fadds
repz
pop
cmpsb
cmp
mov
ss
mov
js
cmp
iret
lods
fucomp
shll
mov
jecxz
mov
cwtl
rcr
gs
jmp
mov
mov
mov
insl
ret
ret
jnp
and
mov
fsubs
stc
add
insb
insl
imul
repz
jle
cli
fisttps
dec
xor
inc
dec
xchg
adc
scas
pop
mov
push
sahf
pop
pushf
lods
mov
mov
mov
jns
pop
outsl
push
bound
repz
arpl
mov
jl
std
in
or
lahf
inc
pop
in
dec
div
pop
or
push
sbb
repnz
imul
jmp
xchg
test
push
push
and
int
dec
sub
gs
out
push
in
inc
iret
out
cmp
sti
adc
lods
push
scas
or
cmp
jne
push
out
cmp
jns
pop
ds
mov
in
fidivrs
xorb
push
mov
mov
rorb
jecxz
dec
sbb
je
mov
dec
rcrl
dec
popf
inc
std
dec
mov
fwait
xor
ret
ret
sub
fxtract
mov
jmp
shrb
sbb
sbb
xchg
pcmpeqb
pop
test
xor
mov
cmpsl
inc
push
addr16
inc
aaa
jns
mov
fs
sbb
mov
add
fistps
cmpl
push
cmovo
xchg
inc
btr
add
hlt
out
clc
inc
jne
fwait
xor
notl
inc
aad
jo
cmp
dec
push
std
test
mov
repz
in
aam
dec
cmp
aas
shll
mov
push
mov
int3
aaa
lods
mov
xchg
inc
mov
int
out
jecxz
mov
and
les
aas
mov
imul
pop
mov
xor
andb
mov
ljmp
loop
cmc
mov
popa
mov
xchg
sub
lret
leave
cmp
push
bound
imul
jecxz
divb
adc
mov
mov
pusha
test
cmp
loope
lahf
dec
cmp
mov
pop
mov
jecxz
dec
mov
mov
pop
cltd
adc
or
shll
adc
xor
out
and
cmpsl
push
jmp
mov
cli
sub
cs
sub
xchg
std
jae
adcb
mov
jmp
mov
push
fimull
or
insl
dec
adc
or
imul
movsl
and
ret
and
sbb
dec
bound
loop
cli
push
cmp
dec
repnz
cmpl
and
bound
into
inc
ret
stos
dec
stos
fstpt
mov
lock
xchg
xchg
xchg
les
xchg
xor
ficomps
or
movsb
shrd
shr
mov
mov
xor
shl
jmp
xlat
mov
iret
or
push
mov
aas
insb
aam
jg
adc
xchg
mov
xchg
sub
inc
incb
repz
scas
mov
xchg
xchg
dec
push
pop
fdivl
inc
fisubl
subl
lock
repz
push
mov
inc
fstl
mov
adc
pop
fadds
je
sarl
insb
mov
data16
imul
mov
dec
mov
es
ss
and
test
jge
jecxz
sbb
add
inc
pop
add
or
aad
fs
push
cmc
push
xor
add
cld
and
aaa
xchg
lret
sub
fistps
dec
mov
pop
inc
scas
fcmovnbe
or
pop
sub
add
inc
adc
std
ja
cmpb
dec
inc
sub
clc
jnp
add
popf
gs
pop
mov
mull
cmp
pop
cmp
fldt
sbbl
fs
insl
addl
sbb
test
pop
add
pusha
fnsave
frstor
scas
sub
push
int
mov
dec
adc
jmp
call
inc
xchg
dec
repz
in
imul
cwtl
iret
xchg
mov
inc
pop
ss
incl
scas
dec
enter
stc
adc
out
pop
adc
pop
or
pop
scas
pop
jno
shrb
orb
jmp
jb
cs
std
iret
out
in
xor
sahf
push
inc
cmp
lret
mov
mov
jle
mov
mov
pusha
test
lcall
in
adc
cmp
cmp
or
sub
lahf
divl
jbe
jnp
mov
fdiv
repnz
and
orb
leave
lods
push
jmp
movsl
lahf
hlt
aaa
push
roll
mov
add
hlt
in
xor
popf
jne
mov
xor
scas
inc
cmpsb
sti
in
dec
ja
mov
push
mov
cmp
scas
lds
outsw
mov
cmp
adc
jmp
and
jns
fidivrl
je
push
jno
cli
jecxz
lcall
imulb
in
xchg
ret
insb
std
and
fists
pop
mulb
mov
xchg
int3
xor
and
mov
rclb
mov
bound
inc
xor
aam
es
mov
pop
or
shr
mov
push
mov
mov
clc
jae
xor
fwait
lods
jmp
ljmp
cmp
mov
cmp
add
sti
je
ffreep
pop
dec
jmp
mov
mov
ss
int
fsubr
in
andl
push
sbb
stos
test
push
jecxz
mov
scas
fcomi
push
idiv
out
mov
iret
or
add
dec
pop
in
mov
cli
xor
cmp
pop
sbb
xchg
outsb
into
movsl
dec
mov
in
arpl
push
scas
aam
or
inc
mov
sub
pushf
or
in
push
push
fwait
cmp
adc
test
aas
inc
lock
and
push
xchg
mov
dec
mov
shll
pop
aad
fimuls
leave
shrl
popa
mov
test
lret
out
icebp
rcrb
in
aad
adc
dec
or
inc
stos
repz
lcall
push
push
xor
in
jmp
and
push
inc
leave
lahf
xchg
mov
in
pop
popa
repnz
pop
sbb
cmpl
push
adc
cli
mov
mov
data16
mov
aaa
mov
test
xor
xchg
out
cmp
bound
lret
lahf
and
icebp
add
add
in
lahf
jecxz
jno
add
jecxz
fbstp
popa
mov
mov
in
inc
loop
rcrl
sbb
pushf
icebp
mov
push
mov
jns
shrb
loope
adc
xchg
imul
pop
js
xor
scas
add
jno
into
sub
jl
xchg
sahf
insl
sarl
mov
or
das
insb
jb
and
lock
in
js
mov
lock
jg
scas
stos
dec
aam
gs
push
call
gs
pop
lcall
dec
das
push
insb
sbb
mov
and
and
pop
mov
mov
stos
mov
cltd
sub
xor
fstpt
jmp
sbb
js
jnp
loope
rolb
test
ja
ljmp
arpl
or
mov
nop
cmp
fidivl
xchg
shrb
je
push
fisubl
pop
je
in
arpl
xor
fcoms
pop
lods
aas
shlb
or
imul
enter
aas
sbb
aad
out
faddl
je
outsb
cld
incl
mov
enter
add
aaa
iret
push
add
push
mov
adc
cwtl
cmc
jae
in
mov
xchg
scas
adcl
lcall
cs
jg
xor
or
stc
sahf
ja
or
test
pop
dec
in
outsb
dec
arpl
mov
decl
loopne
jp
mov
mov
mov
stos
sub
inc
pop
dec
js
clc
inc
xchg
cmp
inc
stos
outsb
mov
or
movsb
insl
out
push
mov
pop
jbe
xor
sbb
lods
lret
adc
xchg
ficoms
mov
xor
mov
fs
sub
xchg
jmp
int3
sub
lahf
outsl
jmp
out
or
leave
rolb
and
enter
bound
outsl
adc
inc
cmp
ds
add
mov
jae
arpl
addr16
insb
or
fwait
enter
inc
into
push
stos
push
cmpl
add
ror
push
mov
aam
jecxz
aam
pop
or
dec
and
adc
lods
aas
xlat
dec
leave
cmpsl
inc
jne
cmp
jo
cmp
adc
lods
push
enter
cmc
sub
add
lcall
les
cs
repz
pushf
sub
dec
fistps
cltd
mov
test
rolb
stos
andb
out
dec
or
movsl
mov
imulb
cmp
lods
inc
cwtl
aas
icebp
sub
lock
or
dec
cmpsl
dec
jb
out
jecxz
xchg
sub
xorb
test
dec
sti
add
insl
push
fwait
push
ljmp
aad
loope
lahf
lahf
mov
pop
push
ja
push
cmp
or
clc
addr16
push
dec
xchg
mov
pop
mov
xor
push
sbbl
rcr
dec
dec
pusha
ljmp
stc
jns
sub
xchg
mov
push
mov
movsl
shlb
and
jl
cmpsl
push
sbbl
js
rclb
adc
shll
sti
inc
andl
pop
xchg
jno
push
test
ret
in
pop
stos
mov
mov
jmp
jb
fstpl
fsubp
xor
stos
test
cltd
insb
or
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
mov
outsb
arpl
xchg
and
xchg
inc
mov
xabort
adc
xchg
mov
xchg
sbb
ljmp
ss
scas
sbb
mov
cmpsb
mov
cltd
push
pusha
loop
sahf
rcrb
rcll
push
ss
add
movsb
adc
std
in
mov
jp
les
inc
jb
fisubrs
jnp
xor
jno
jmp
setg
icebp
lea
cli
ret
adc
mov
pop
outsl
sbb
cmp
mov
lret
mov
test
sbb
xor
cmp
cltd
mov
je
push
or
popf
pop
xchg
fsubrl
popa
jle
xchg
cmp
test
mov
out
or
xlat
cmp
or
shlb
mov
cmp
movsl
test
push
lock
mov
das
loop
out
mov
repnz
cltd
sbb
mov
mov
sbb
dec
pop
bound
mov
cmp
mov
mov
jl
jmp
xor
jmp
pop
xchg
dec
loope
pushf
jno
in
enter
sbb
xchg
loope
cmpsb
mov
inc
out
push
jnp
lds
mov
subb
jl
adc
adc
popf
mov
ror
pop
fdivs
mov
mov
mov
fld
cli
mov
mov
adc
test
les
cli
sbb
shl
scas
lods
test
push
scas
shlb
hlt
mov
xchg
out
jae
cwtl
repz
mov
scas
scas
inc
sbbl
into
addb
push
pusha
mov
insl
xchg
lods
hlt
loope
cwtl
add
out
movsb
cmpsl
dec
mov
fadds
out
fdivrs
paddw
xor
pop
sbb
dec
pop
stos
ret
imul
jbe
pop
push
pop
shlb
jecxz
loope
cmpsl
imul
lds
pop
fstpl
fwait
lods
iret
xlat
sub
or
xor
push
stc
push
cmp
sarl
sbb
inc
roll
mov
xor
lods
lret
cwtl
sbb
push
adc
insl
ljmp
or
mov
cmp
fmuls
lahf
out
adc
in
fld1
shrb
push
xor
jecxz
sbb
loop
aaa
add
and
or
sbb
int
sbbl
stos
sarl
shrd
scas
adc
and
test
cmpsl
sti
shl
mov
sbb
out
mov
jb
jp
push
or
outsl
mov
mov
les
sar
pushf
jno
sub
fs
lret
dec
clc
in
imul
cmc
in
ja
and
xchg
push
and
xor
ret
movlps
adc
sbb
daa
scas
jno
dec
inc
push
pop
movsb
in
jecxz
inc
and
loop
xchg
gs
sbb
mov
icebp
jg
loope
std
adc
hlt
in
mov
leave
icebp
sbb
mov
cmp
fidivrl
sbb
pop
shll
or
ficoml
adc
mov
xchg
mov
sbb
mov
pop
in
out
test
xchg
mov
xorb
dec
sbb
rclb
cmp
xchg
xor
pop
sbb
in
and
jae
test
mov
mov
pop
inc
fistl
in
popf
sub
dec
test
jp
inc
inc
xlat
cmp
cmp
and
xchg
and
out
js
xlat
repz
out
jns
push
insl
cmp
adc
nop
and
add
jns
inc
mov
xor
xor
push
fs
js
or
adc
mov
jle
xor
jbe
cmpsb
adc
mov
ret
loopne
in
lods
pop
cmpsb
sti
dec
push
push
or
out
data16
adc
addb
mov
xorl
bound
inc
leave
sub
jmp
mov
pop
hlt
mov
mov
sar
sbb
push
jmp
jns
or
movsb
mov
out
je
jno
and
and
into
stos
xor
lret
movsl
add
sub
int
scas
jl
pop
mov
hlt
adc
mov
xchg
pop
lret
fwait
mov
dec
adc
pop
add
insl
push
fincstp
add
inc
or
cmpb
inc
or
repnz
dec
test
icebp
sbb
jp
outsb
sub
outsl
nop
ret
js
fistl
pop
adc
inc
mov
add
xor
and
jecxz
jns
and
inc
mov
ss
das
adc
jo
jp
sbb
xchg
andl
stos
mov
adc
add
add
dec
mov
jg
adc
fstl
push
out
cwtl
imul
mov
jg
loop
mov
out
mov
loope
out
push
xchg
jnp
xchg
and
testb
add
pop
jo
push
and
mov
fs
xlat
fcmove
pushf
add
dec
and
shrb
push
jbe
sbb
and
iret
mov
imul
xor
adc
or
test
inc
sbb
aam
mov
out
cmp
in
and
ljmp
jae
push
cmpsb
loop
cltd
outsl
ret
xchg
or
movsl
or
cmp
stos
and
sbb
mov
imul
add
insl
stc
loop
cmpsb
mov
lds
iret
pushf
and
repnz
jo
push
mov
adc
pop
xor
cmp
enter
mov
lahf
clc
add
sti
cmp
mov
data16
cmp
cmc
push
fs
and
cmpb
daa
cld
mov
xor
lods
sub
sbb
or
or
clc
insb
leave
adcl
cld
ds
pop
mov
scas
stc
xor
jo
test
and
and
mov
push
mov
lods
cmp
add
jno
rorl
cmp
and
jmp
fmulp
pusha
inc
cwtl
sub
adc
xor
fnstcw
cmp
popf
xor
sub
sub
push
mov
scas
sbb
ret
in
ret
les
push
mov
jl
in
stos
mov
jmp
and
xchg
out
cmp
in
call
stos
aam
push
inc
mov
mov
push
loopne
cmc
mov
daa
or
xchg
in
repz
xchg
xor
sub
push
or
js
aaa
daa
fwait
sbb
cmp
add
rcrl
mov
jns
frstor
imul
sbb
das
dec
sub
test
and
pop
or
daa
dec
dec
jg
pusha
movsb
subb
pop
jp
insl
mov
sahf
imul
sbb
subb
cmp
fistpll
ljmp
incl
push
and
mov
pushf
gs
loope
sbb
jecxz
pop
jge
in
repnz
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
fnsave
push
adc
adcb
adc
xchg
mov
push
icebp
hlt
and
pop
movsb
mov
lret
fdivrs
pop
xor
or
test
mov
sbb
cli
push
outsb
pop
ds
mov
xchg
inc
push
pop
xchg
sahf
pop
sub
mov
add
psrad
stc
pop
sbb
push
adc
add
dec
fidivs
push
xchg
sub
ret
lea
or
sbb
mov
pop
fcmovne
das
jecxz
ja
jg
ljmp
sbb
ja
stos
test
ret
mov
sbb
sub
add
sbbl
int
add
add
sub
aas
inc
lea
and
push
sbb
testl
lods
ljmp
pop
loope
lods
mov
jecxz
dec
stos
inc
jno
mov
jg
mov
repz
inc
hlt
ljmp
lea
sub
mov
dec
push
push
mov
leave
loopne
in
dec
ljmp
adc
fidivs
faddl
add
xchg
rcl
fildl
inc
or
aam
xor
lret
repnz
test
out
aas
push
imul
mov
imul
sbb
fst
push
or
icebp
mov
repnz
push
push
scas
push
cmp
ds
add
sub
movsb
insl
out
orb
pop
fisubl
sub
sbb
xchg
out
push
sbb
sbb
imul
push
stos
jno
ss
pop
or
sbb
test
test
out
push
mov
cmovbe
je
xchg
ss
sub
sub
mov
ret
push
jbe
xor
int
cmpsb
shl
stos
xor
mov
lret
leave
imul
xchg
loopne
sub
iret
loop
jae
sub
scas
pop
iret
aas
popf
ss
or
xchg
or
inc
cmovb
add
pop
imul
inc
jecxz
scas
int3
jl
xor
cld
pop
js
fcompl
lock
dec
dec
lods
xchg
fisubrs
add
insl
or
imul
jp
ljmp
ss
popf
mov
in
add
or
adc
in
and
test
jb
or
and
test
sub
jge
cmp
jmp
xchg
cmp
andb
or
popf
or
mov
and
aad
clc
pop
sbb
add
iret
mov
mov
imul
xchg
mov
aad
mov
ficompl
inc
mov
lods
mov
mov
les
mov
out
int
jns
hlt
adc
scas
dec
mov
inc
pop
cld
punpcklbw
or
lret
fs
add
inc
stos
repz
mov
ljmp
pushf
xchg
mov
movsb
adc
jl
push
inc
xchg
imul
mov
pop
lea
mov
dec
dec
push
pop
lds
into
sub
dec
das
out
push
mov
lds
mov
adc
sarb
leave
int3
aaa
xchg
cmp
mov
mov
lahf
test
mov
notl
mov
push
dec
push
scas
cltd
bound
popl
inc
cmpb
je
daa
inc
fs
in
subl
in
jl
sub
add
add
stos
push
fs
imul
aas
les
jle
test
sbb
cmpsb
pop
adc
test
jnp
cmp
xchg
mov
sbb
xor
fidivl
and
pop
push
lock
mov
fiaddl
sbb
sbb
data16
push
call
dec
lret
push
in
cwtl
nop
iret
daa
xchg
pop
pop
inc
jae
fidivrl
cs
sbb
mov
dec
addb
into
int3
push
inc
add
lea
popf
subl
pusha
icebp
das
xor
sub
mov
sti
adc
xchg
jecxz
stos
stos
ret
lds
in
stc
sbb
fstpl
or
fldt
dec
lret
std
mov
std
sub
arpl
lea
sbb
and
lret
pop
shrl
fs
push
sbb
mov
mov
movsl
out
cmp
lods
out
mov
push
pushf
and
xor
xor
mov
xchg
in
scas
fwait
xchg
stc
pop
ss
add
cs
adc
inc
mov
mov
sbb
cld
loope
mov
jg
rclb
mov
lret
lods
fisubl
fnstenv
int3
mov
leave
leave
push
insb
loop
test
add
mov
jbe
push
cs
xor
or
popf
push
pushf
sub
cmpl
push
cwtl
mov
mov
cs
gs
mov
jns
sub
jno
sbb
dec
fcoml
fwait
sbb
imul
pop
push
add
cmp
jl
cltd
rcl
mov
xchg
nop
mov
in
pop
inc
sub
lods
packsswb
in
add
mov
subl
sub
imul
rcr
insl
mov
lcall
mov
push
or
repz
pop
imul
jnp
lahf
nop
fwait
fwait
mov
mov
bound
fiaddl
mov
mov
push
nop
mov
push
sti
sbb
fs
es
mov
xor
and
ja
bound
xor
lret
sbb
mov
inc
cmp
adc
ss
pusha
or
js
movsb
push
popf
ret
ds
adc
xchg
flds
dec
cmp
push
and
insb
mov
cmpsb
sarb
mov
lret
or
cmpsl
mov
push
stos
sahf
hlt
adc
mov
ffree
mov
stos
mov
sahf
mov
dec
adc
dec
addr16
add
mov
in
sub
aam
jnp
xchg
outsl
mov
sub
iret
mov
scas
negl
fmul
cli
pushf
jo
ret
xchg
outsb
in
in
lock
ljmp
add
in
das
fisttps
notl
pusha
jno
cli
ret
and
mov
das
add
inc
xchg
push
dec
out
lea
into
jnp
xchg
daa
mov
dec
pop
shl
jo
loop
sbb
pop
push
mov
pop
adc
andb
jns
mov
inc
aad
mov
xchg
mov
js
fildl
lea
jno
adc
sti
pop
adc
xchg
push
pop
arpl
cmp
cmp
lret
xor
aas
ds
push
xor
sbb
stos
dec
or
jbe
pushf
jb
or
adc
pop
ret
mov
int
fidivrs
subl
ret
mov
xchg
blcic
sub
dec
dec
jb
xchg
sub
sti
shll
push
aam
push
cltd
jne
mov
mov
cmp
int3
invd
or
shl
shl
mov
mov
jmp
test
fcoms
jns
inc
pop
or
ja
jmp
cmp
xchg
cmpsl
loopne
mov
sub
lret
call
ss
cli
outsl
test
adc
mov
xchg
pop
clc
jbe
in
mov
shlb
lods
ja
insl
xchg
xchg
fcmovnb
sub
cltd
inc
jb
out
fdivl
repnz
mov
loope
imul
mov
ljmp
dec
push
push
ss
sbb
movsl
pop
mov
xlat
jmp
and
inc
xlat
imul
dec
mov
push
popf
pop
aaa
movsb
lds
ficompl
test
mov
push
addb
jns
push
mov
mov
sbb
cmp
mov
add
mov
scas
lds
mov
pusha
aaa
sub
popf
pop
je
sub
das
mov
pop
sub
pop
push
xor
jbe
shll
push
stc
xchg
dec
xor
leave
sub
cmp
mov
inc
add
mov
add
inc
inc
dec
mov
and
loope
lods
mov
jmp
popf
stos
sub
hlt
jne
xchg
enter
pop
sti
ds
aas
repz
inc
popa
aaa
jno
test
mov
clc
aaa
mov
ret
dec
icebp
jno
push
test
push
aaa
mov
pushf
lcall
lea
xor
in
xchg
push
push
imul
insb
iret
add
push
xchg
loope
mov
adc
jl
mov
repz
cmp
clc
cmpsl
stc
jae
gs
jno
mov
inc
push
add
mov
incb
sbb
cmp
or
stos
and
inc
sbb
xchg
sbb
mov
or
les
gs
sbb
xchg
push
fisttpll
pop
incb
out
jmp
xchg
lahf
push
leave
pop
xor
dec
sub
pop
mov
xor
or
shl
cltd
push
jmp
cmp
rolb
and
ret
shrb
push
cltd
adc
mov
mov
mov
iret
jne
lock
lds
rorl
sti
and
inc
cmp
adc
hlt
push
jne
das
cmp
test
jge
std
testb
scas
addl
loop
lcall
adcl
mov
popf
in
fbstp
ficoms
add
xor
ljmp
in
jecxz
repz
and
mov
adc
js
jecxz
inc
pusha
jno
inc
and
push
outsb
cmp
jae
add
insb
add
les
insb
mov
xchg
call
pop
xor
push
jmp
jg
jns
call
mov
lods
cmp
add
outsl
fucomi
daa
in
mov
les
sub
cmp
es
pop
je
call
dec
roll
xlat
imul
mov
inc
sub
fidivl
pop
call
sub
jg
dec
mov
in
rcl
mov
and
jbe
jne
cmp
push
loop
insl
lahf
dec
arpl
es
xlat
cmp
das
pusha
fucom
mov
rcr
sbb
cmp
lahf
mov
pop
push
je
add
inc
imul
aad
ss
mov
mov
xchg
cmpsb
cmp
data16
in
sub
xchg
fcmovbe
out
in
sub
popa
pop
loop
inc
inc
xor
cmp
pop
xchg
mov
mov
dec
push
in
sbb
mov
xor
xor
mov
jne
mov
xchg
jp
stos
mov
xor
mov
popf
daa
jno
xor
adc
subb
push
pop
negb
sahf
mov
mov
cmp
jno
xor
bound
arpl
sub
mov
movsb
dec
pop
clc
jp
lcall
jae
inc
or
inc
mov
jo
cltd
imul
xchg
inc
pusha
pop
jecxz
or
or
pop
pushf
in
std
inc
mov
std
lock
push
sbb
mov
push
mov
add
movsl
xchg
outsl
mov
add
lahf
adc
ret
stc
insb
pop
push
shl
xchg
mov
add
jg
inc
leave
ja
adc
loop
xor
mov
lods
mov
jne
cmp
jecxz
xchg
or
movsl
shl
rclb
sbb
inc
sti
roll
xor
test
mov
dec
xchg
mov
loop
lock
rcrb
xchg
aad
enter
icebp
jp
dec
xchg
pop
icebp
call
mov
movsl
jle
push
xor
lock
xor
sub
pop
stos
mov
enter
add
inc
cwtl
add
clc
mov
subb
xchg
imul
scas
out
adc
mov
cmp
jp
mov
fistl
jb
push
sahf
mov
and
rcll
insl
push
mov
push
sub
push
and
inc
in
mov
notb
lret
push
cmpsb
jo
or
pop
pop
pop
and
scas
dec
roll
into
mov
adc
or
push
and
push
aas
enter
push
fstpt
clc
and
nop
into
lret
cmp
clc
pop
cld
lret
jo
ja
add
adc
popa
lret
sub
das
pop
in
popf
lahf
test
rcll
sub
sub
fidivs
das
dec
add
cmpsb
shrl
mov
add
fildl
and
xorl
ds
mov
mov
mov
mov
pop
enter
fidivl
mov
and
pop
push
dec
mov
pop
jge
fs
pop
dec
mov
into
rorl
fdivl
fucomip
xchg
push
je
inc
xchg
and
dec
fidivrs
imul
loop
or
shr
testb
sbb
stos
cli
shll
mov
mov
aaa
add
stos
aas
mov
mov
inc
dec
scas
sub
lret
cmp
push
add
imul
ret
aam
cmpsb
fildll
adc
dec
jmp
xchg
iret
ret
lcall
mulb
mov
adc
les
test
into
xor
push
js
test
in
sub
shrb
rorb
shl
negl
lret
sub
out
inc
loope
stos
popa
shrb
inc
and
jae
pop
fiaddl
pop
jbe
fmull
xorl
mov
test
xchg
adc
cld
out
mov
decl
add
insb
shrl
sub
pop
fdivs
xor
daa
into
inc
ficompl
or
xchg
ror
or
lcall
ljmp
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
jmp
sti
icebp
lods
mov
outsb
fs
data16
xchg
lahf
cld
adc
sub
mov
out
popf
inc
mov
les
inc
nop
mov
lcall
cwtl
jmp
inc
mov
push
data16
push
out
push
pop
adc
sbbl
popf
ret
cmp
jle
ret
mov
xorl
aam
std
jbe
push
push
and
push
cs
in
enter
sub
lods
and
mov
rorb
sbbb
xchg
fidivs
es
daa
jle
fsub
insl
lahf
cmp
jmp
cld
stc
xlat
js
mov
dec
andl
outsl
imul
lahf
pop
mov
pop
stos
aam
and
loop
clc
and
inc
xchg
icebp
xchg
jecxz
rcll
pop
test
pop
push
in
in
into
pushf
or
cmp
shl
fsubrs
add
insl
pop
xor
push
stc
ret
fsubs
shll
xchg
adc
mov
add
dec
gs
imul
loopne
dec
push
clc
mov
std
lods
jns
push
adc
push
dec
sbb
xor
mov
inc
cltd
mov
repnz
pop
fcoml
insb
ss
pop
xchg
js
cmc
push
or
push
and
jbe
push
xor
out
pusha
cld
xchg
nop
add
cmp
xor
sub
cmp
sbb
pop
cmp
xlat
and
pop
stc
int
add
ffree
in
mov
sub
scas
push
jne
cmp
aas
pop
fs
cmovnp
push
call
inc
push
xor
cmc
or
ss
mulb
xchg
enter
sbb
out
stos
je
xchg
adc
dec
pop
movsl
gs
popa
adc
insl
mov
mov
and
sub
mov
mov
out
dec
adc
dec
push
leave
fstp
stos
push
mov
inc
cmpsl
mov
cltd
sbb
dec
ror
daa
dec
xorl
lcall
mov
push
insb
cmp
cli
pop
inc
or
lock
insl
jne
mov
pop
and
mov
xor
mov
xor
or
pop
mov
sbb
adc
sbb
dec
dec
push
push
or
fwait
inc
loope
jns
and
ffreep
insl
les
dec
ret
jae
psubsb
xor
push
cli
and
loope
or
add
int
adc
add
sti
popf
jns
jl
adc
mov
mov
cmp
movsl
pop
sbb
mov
xlat
sti
bound
jmp
pusha
scas
pop
jp
test
daa
movsl
rclb
jle
call
arpl
movsb
scas
test
repz
pop
lock
fiaddl
xor
ja
test
inc
fists
andl
insb
push
xor
gs
inc
mov
jo
test
cwtl
rep
subl
mov
or
xor
dec
pusha
jg
sub
out
cmpb
mov
xchg
in
mov
lods
jne
dec
cmp
in
xchg
fnsave
pop
cld
inc
pusha
xor
pop
push
mov
out
pusha
jnp
mov
cmp
das
pop
mov
xchg
push
and
pop
cwtl
mov
sahf
in
stos
jnp
inc
or
cmp
xchg
insb
jmp
mov
call
mov
lret
pop
clc
sbb
int
fidivrs
aaa
mov
cmp
adc
cmp
js
loope
xchg
lds
insb
not
daa
push
cmpb
popa
mov
mov
pop
iret
jmp
xor
outsl
lahf
cmp
test
cltd
jge
imul
or
out
inc
aam
push
adc
popa
std
xlat
jae
stc
push
jge
sbb
pop
aaa
push
inc
jae
ret
pop
mov
dec
movsb
inc
lahf
and
xchg
pop
incb
adc
push
ds
ret
hlt
sbb
enter
or
jae
jns
xchg
stos
aam
push
add
addr16
add
fmull
lock
lret
rcr
push
sub
pop
iret
ret
setbe
pop
push
outsb
pop
aad
rorl
and
add
stos
pop
lods
jbe
icebp
clc
jg
loope
shr
cmp
pop
jo
mov
mov
popa
repz
aam
movsb
adc
adc
cmpsl
jnp
cmp
sub
dec
dec
test
jb
and
lret
pop
filds
insl
mov
pop
cmp
mov
arpl
int3
scas
xchg
xchg
bound
pop
and
lock
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
cmp
jae
xorl
shrd
movl
shr
ret
adcl
mov
xorl
xor
sbbl
and
shr
ret
xor
xor
ret
push
mov
sub
cmpl
movl
movl
jmp
movl
notl
jle
push
pushl
call
notl
andl
andl
sbbl
adcl
movl
mov
incl
mov
adcl
movl
mov
movb
sbbl
movb
and
movb
adc
movzbl
andl
mov
sbbl
sub
addl
imul
movzbl
andl
push
and
andl
mov
addl
movb
movb
andl
movb
movb
negl
mov
mov
negl
add
adcl
imul
sbbl
mov
subl
or
mov
sbbl
and
mov
movl
cmp
ja
mov
mov
mov
or
mov
mov
cmpl
not
mov
movl
jmp
movl
jb
push
push
call
dec
xor
add
mov
add
adc
xorl
xor
adc
mov
movzwl
addl
movzwl
sbbl
shr
notl
or
sub
mov
subl
movb
notl
movb
mov
orl
mov
xor
xorl
add
mov
or
mov
movzbl
and
cltd
sub
push
cmpl
not
mov
mov
jmp
mov
je
push
push
call
mov
adc
xor
neg
adcl
or
adc
pop
adcl
idiv
mov
addl
movb
addl
movb
xorl
mov
mov
negl
add
movzbl
movzbl
xorl
cltd
idiv
mov
movl
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
and
push
cmpl
not
mov
not
not
jmp
movl
movzbl
je
push
pushl
pushl
push
pushl
call
sbb
adc
adc
subl
add
push
adc
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
pushl
push
pushl
push
push
call
sbb
adc
xor
mov
mov
sub
sub
xor
add
xor
or
sub
and
addl
addl
sbb
mov
shrd
shr
cmpl
movl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
push
pushl
call
addl
orl
mov
add
mov
add
mov
sub
mov
mov
mov
sub
sub
xor
movzwl
sbb
mov
neg
xor
sub
or
mov
mov
cmpl
mov
mov
jmp
movl
mov
jne
call
dec
addl
xor
sub
inc
andl
mov
mov
adc
shl
cmpl
mov
movl
movl
jmp
mov
movzbl
jle
push
push
call
mov
adc
mov
adc
xor
inc
xor
or
or
notl
add
movl
mov
cmpl
mov
mov
jmp
mov
jge
pushl
push
pushl
pushl
call
andl
or
add
xor
or
shrd
xor
orl
shr
xorl
mov
and
mov
xor
or
or
cmpl
not
mov
mov
movzwl
jmp
mov
mov
jge
push
pushl
call
movzwl
xor
movzwl
add
mov
or
mov
sub
or
addl
xor
mov
mov
and
mov
mov
mov
mov
inc
mov
xor
mov
mov
mov
mov
cmpl
mov
movl
jmp
movl
movl
jle
pushl
push
pushl
pushl
call
not
andl
adc
sub
xor
shl
orl
xor
and
shld
sub
shl
inc
mov
orl
xor
addl
xor
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
cmpl
movl
movl
not
jmp
mov
movzwl
jle
push
push
push
call
sub
adc
or
sbb
adcl
sbbl
xor
adc
mov
mov
mov
and
mov
xor
shld
sbbl
shl
xor
xor
cmp
jne
movl
cmp
movl
je
cmpl
mov
movl
jmp
mov
not
jbe
push
pushl
push
pushl
call
xor
mov
add
adc
and
adc
not
mov
subl
mov
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
pushl
pushl
call
subl
mov
add
add
add
xor
shl
mov
xorl
xor
shr
adcl
or
mov
mov
movzwl
or
mov
mov
and
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
call
and
orl
subl
subl
sbbl
orl
and
cmpl
movl
movl
movl
movl
jmp
movl
je
push
call
sbbl
movl
orl
andl
adcl
sbbl
xor
subl
cmpl
movl
movl
movl
jmp
movl
not
jb
pushl
pushl
call
xorl
sbb
add
addl
subl
movl
and
push
pop
sbbl
sub
mov
add
mov
lea
mov
mov
mov
sub
and
mov
xor
or
xor
mov
xorl
xor
xorl
shr
subl
shl
or
add
mov
cmpl
movl
mov
jmp
mov
mov
jae
push
call
add
sbb
or
movl
and
movl
add
mov
mov
andl
xor
movl
shr
shl
adcl
or
push
orl
lea
adcl
push
adcl
lea
push
call
cmpl
mov
movl
jmp
movzbl
jbe
push
push
pushl
pushl
pushl
pushl
call
orl
addl
movzwl
sub
mov
movzwl
sub
mov
sub
movl
sub
mov
mov
subl
xor
subl
shr
mov
xor
shl
or
cmpl
mov
mov
mov
jmp
movl
mov
jne
call
add
sub
add
adcl
mov
or
movzwl
or
push
lea
sub
push
or
mov
mov
sbb
shrd
sbb
shr
xor
add
xor
or
sub
imul
mov
notl
mov
xor
addl
xor
or
xorl
lea
adcl
push
adcl
shl
subl
call
mov
mov
xor
shl
cmpl
mov
movl
mov
jmp
movl
jne
push
push
call
xorl
xorl
add
orl
and
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
push
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
adcl
or
movl
mov
jne
sub
mov
adcl
mul
ret
push
mul
cmpl
movzbl
movl
push
pop
jmp
mov
mov
je
push
push
pushl
push
push
push
pushl
call
mov
sbb
mov
not
movzwl
adc
mov
mov
add
mov
xorl
sbb
mov
adc
mov
xorl
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
pushl
call
test
jg
movl
movl
movl
push
dec
movl
mov
xor
mov
andl
push
notl
push
orl
push
call
sbbl
push
andl
push
and
and
push
subl
push
andl
call
cmpl
mov
movzwl
notl
movl
jmp
movl
jbe
push
push
pushl
call
neg
subl
dec
sbb
subl
xor
or
mov
sub
or
mov
mov
xor
or
cmpl
movl
not
jmp
mov
jg
push
push
push
push
call
sbbl
xor
movzwl
and
orl
xor
mov
xor
or
mov
movl
movl
or
movl
sbb
movl
mov
xor
or
sub
add
movl
cmpl
mov
mov
jmp
mov
movl
jg
push
push
pushl
call
dec
xor
inc
adc
movl
xor
add
xor
mov
adcl
movl
cmpl
mov
movl
jmp
mov
mov
jg
push
push
call
addl
mov
sbb
sbbl
mov
mov
sub
xor
xor
or
xor
movl
or
sub
sbb
mov
cmpl
mov
movl
notl
jmp
mov
movzbl
jg
pushl
call
xor
movzbl
sub
mov
mov
sub
add
adc
xor
mov
mov
mov
andl
or
or
mov
or
mov
sub
mov
mov
sbb
or
mov
xor
subl
xor
addl
and
adcl
and
cmp
movl
jne
cmp
jne
movl
decl
movl
xor
movl
adc
movl
xor
or
mov
sub
xor
movl
mov
and
mov
sub
adc
mov
orl
imul
subl
and
notl
imul
mov
xorl
pushl
or
imul
adc
xor
mov
movl
div
mov
xor
cmpl
movl
notl
mov
jmp
movl
je
pushl
pushl
push
pushl
push
call
sbb
adcl
or
mov
sbb
mov
add
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
neg
mov
mov
xor
sbb
sub
sbb
cmpl
movzwl
mov
movl
jmp
movl
jl
pushl
call
sbb
or
addl
and
sub
xor
add
mov
sub
dec
mov
sbbl
sub
addl
or
xor
adcl
pushl
pushl
addl
call
addl
pushl
call
movl
cmpl
mov
movl
not
jmp
mov
mov
jge
pushl
call
and
add
adc
xor
movl
adc
movl
xorl
movl
movl
movl
mov
mov
xor
mov
mov
subl
add
movzwl
mov
adc
add
mov
add
adc
and
xorl
mov
orl
and
mov
movl
movl
subl
movl
orl
movl
dec
cmp
jne
and
movl
mov
xorl
mov
subl
movl
mov
subl
call
andl
lea
mov
cmpl
movl
movzbl
jmp
movl
jb
push
call
adc
sub
and
andl
mov
xor
add
sub
imul
xor
sub
lea
mov
sub
mov
sbb
mov
add
mov
mov
decl
xor
shl
and
shr
movl
or
mov
or
mov
mov
cmpl
movl
mov
movl
jmp
mov
movl
ja
pushl
push
push
pushl
call
and
xorl
add
sub
addl
addl
cmpl
not
mov
jmp
not
jae
push
call
adc
subl
and
xor
add
adc
and
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
pushl
call
or
andl
and
sub
adc
mov
and
mov
mov
mov
shrd
shr
and
mov
not
mov
movl
xor
xor
andl
or
mov
sbb
mov
mov
orl
push
addl
pushl
subl
lea
andl
push
adcl
shl
orl
call
addl
lea
addl
push
mov
mov
sbbl
lea
orl
push
mov
orl
lea
adcl
mov
adcl
mov
mov
push
call
subl
push
andl
push
pushl
xorl
call
andl
mov
or
mov
and
mov
cmpl
mov
movl
mov
jmp
mov
jg
push
pushl
push
push
push
call
sbb
xor
or
mov
adc
xor
adc
mov
shr
not
shl
or
sub
mov
or
xor
mov
notl
lea
xor
mov
lea
movzbl
or
mov
cmpl
mov
movl
movl
mov
jmp
movl
movl
je
push
call
or
add
mov
or
mov
xor
inc
add
not
mov
mov
and
mov
cmpl
mov
mov
mov
jmp
movl
mov
jne
push
call
or
sbb
addl
add
orl
mov
mov
sub
sub
movzwl
sbb
mov
and
sub
cmpl
movzbl
mov
movl
jmp
movl
jae
pushl
call
add
add
movzbl
add
add
movl
add
lea
andl
xor
cmpl
mov
mov
movl
jmp
mov
jg
push
pushl
pushl
push
push
call
or
adc
xor
mov
adc
mov
movl
movl
movl
cmpl
movl
not
jmp
movl
not
jle
push
call
subl
not
orl
and
and
mov
or
mov
movl
mov
mov
add
mov
not
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
cmpl
movl
mov
movl
jmp
movl
jbe
push
pushl
push
pushl
push
call
adcl
sbb
sub
adc
mov
xor
mov
mov
mov
sub
xor
movl
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
push
pushl
pushl
call
adcl
notl
dec
add
subl
sbb
not
sub
movl
mov
subl
mov
xor
xor
mov
xor
and
adc
mov
sub
xor
or
and
cmpl
mov
mov
not
jmp
mov
jl
push
push
call
inc
xorl
and
sub
sub
add
mov
add
xor
mov
or
movl
movl
mov
sbb
mov
add
xor
sub
adcl
mov
or
imul
adc
xor
mov
or
div
subl
sub
and
mov
movl
sub
movl
movl
mov
mov
adc
movl
cmpl
movl
mov
movzbl
jmp
mov
movzbl
jg
pushl
push
push
push
call
or
xor
or
or
mov
sub
add
inc
movl
mov
sbb
mov
movl
movl
mov
xor
mov
imul
adc
add
xorl
and
adc
sub
cmpl
mov
movl
mov
mov
jmp
mov
je
pushl
push
push
call
add
adc
neg
and
not
mov
sub
or
mov
mov
cmpl
mov
movl
mov
movl
jmp
movl
jne
push
pushl
push
call
inc
or
dec
sub
adc
adc
or
add
sub
add
mov
xor
adcl
div
not
mov
sub
and
mov
add
addl
mov
cmpl
mov
mov
mov
jmp
mov
mov
jle
push
push
call
add
add
sbbl
subl
xorl
movl
movl
dec
movl
cmpl
movzbl
mov
jmp
mov
jne
pushl
pushl
pushl
push
call
sbb
orl
movzwl
adc
add
mov
mov
add
mov
xor
add
mov
andl
xor
movl
div
add
and
mov
or
cmpl
movl
mov
jmp
movl
movl
jg
push
push
push
call
mov
sbb
mov
add
mov
movzbl
sub
subl
decl
adc
cmpl
not
mov
jmp
mov
movl
jae
push
push
push
push
call
xor
sbbl
mov
sbb
mov
inc
mov
mov
sub
sbbl
cmpl
mov
movl
mov
jmp
mov
movl
jg
pushl
call
mov
adc
mov
mov
adc
mov
mov
xor
xor
or
mov
sub
sub
adcl
mov
and
movl
movl
movl
and
movl
mov
sub
mov
orl
xor
sbb
xor
push
xor
pop
orl
div
mov
andl
xor
div
mov
or
sub
xor
mov
xor
movl
inc
mov
movzwl
sbb
mov
xor
div
imul
adcl
xor
xor
sub
imul
xor
dec
mov
adc
movl
cmpl
movzwl
movl
mov
jmp
movl
mov
jg
pushl
push
pushl
pushl
pushl
pushl
push
push
pushl
push
push
call
adc
xor
mov
adc
mov
mov
xor
mov
xor
or
xor
mov
movzwl
sub
or
or
movl
movl
cmpl
mov
movl
movzwl
jmp
mov
movl
ja
pushl
call
xor
dec
adc
movzbl
sbb
xorl
mov
and
mov
xor
subl
div
mov
sub
mov
orl
imul
xor
add
mov
or
add
xor
sbb
mov
sub
movzbl
or
mov
mov
movl
cmpl
notl
mov
mov
mov
jmp
notl
mov
jg
pushl
call
notl
adc
adc
sbb
movl
mov
or
and
notl
and
or
xor
cmpl
mov
mov
movl
jmp
movzwl
mov
jg
pushl
push
pushl
call
movzbl
sbb
add
negl
sub
dec
mov
movl
movl
movl
cmpl
movl
movl
movl
mov
jmp
mov
jb
pushl
push
push
call
mov
and
mov
neg
xor
andl
and
movl
mov
xor
and
add
xor
add
or
or
cmpl
notl
movl
mov
movl
jmp
movl
jle
push
pushl
push
push
pushl
pushl
pushl
push
call
adc
mov
add
or
sub
neg
sbb
sub
mov
inc
movl
cmpl
mov
movl
mov
jmp
mov
mov
jne
push
pushl
call
decl
decl
sbbl
and
movl
movl
movl
xor
mov
shr
xorl
sub
cmpl
movl
mov
mov
mov
jmp
mov
movl
jbe
pushl
pushl
call
add
xorl
mov
sbb
and
adc
or
xor
mov
lea
sbbl
push
adcl
call
addl
mov
adc
or
cmpl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
sub
mov
xor
or
sub
imul
negl
sbbl
and
mov
orl
or
xor
and
lea
adc
mov
movl
movzwl
xor
movl
movl
xor
xor
or
movl
movl
and
movl
cmpl
mov
not
movl
movl
jmp
mov
notl
jg
push
call
sbb
orl
xorl
add
xor
xorl
xor
xor
xor
mov
sub
or
movl
sbbl
movl
mov
mov
mov
sub
xor
mov
sub
and
cmpl
movzbl
movl
jmp
movl
movl
je
push
push
push
push
push
call
sub
or
notl
sub
xor
add
add
mov
sbb
sub
and
sub
or
mov
sbb
lea
mov
mov
add
mov
add
mov
mov
imul
sbbl
and
cmpl
mov
mov
mov
movzbl
jmp
notl
mov
jbe
pushl
pushl
pushl
push
pushl
pushl
call
xorl
add
movzbl
adc
not
or
imul
mov
lea
mov
addl
movl
movl
movl
movl
mov
sbb
mov
or
mov
movl
xor
andl
xor
sbbl
mov
call
cmpl
movl
movl
movzbl
movzwl
jmp
movl
movl
jb
call
sub
and
and
add
adc
subl
sub
sbbl
mov
mov
sub
mov
mov
adcl
xor
xor
mov
call
xorl
or
or
sub
mov
or
mov
andl
xor
xorl
xor
mov
call
mov
cmpl
movl
mov
movl
jmp
movl
jbe
call
or
xor
inc
or
andl
cmpl
notl
mov
jmp
mov
movl
je
push
pushl
call
mov
mov
and
sbb
not
mov
sub
sbb
or
and
mov
movl
mov
mov
xor
xorl
xor
addl
mov
mov
xor
mov
xor
or
mov
sub
mov
movl
mov
mov
movl
call
cmpl
mov
movl
mov
jmp
movl
movl
ja
push
push
call
and
addl
adcl
movzbl
xor
or
mov
adcl
or
mov
or
subl
push
push
subl
push
andl
push
orl
call
movzbl
mov
cmp
movl
jne
mov
sub
mov
mov
xorl
mov
subl
xor
xorl
xor
mov
call
adc
mov
add
mov
xor
mov
mov
incl
xor
addl
xor
xorl
mov
xorl
call
or
and
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
notl
jmp
movl
mov
jle
pushl
push
push
pushl
call
negl
addl
orl
adc
sbbl
sbbl
not
push
push
not
mov
or
movl
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
sbb
and
or
xor
xor
mov
sub
add
add
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
je
add
mov
mov
pop
pop
movl
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shld
shl
ret
xor
mov
addl
xor
and
shl
ret
xor
xor
ret
