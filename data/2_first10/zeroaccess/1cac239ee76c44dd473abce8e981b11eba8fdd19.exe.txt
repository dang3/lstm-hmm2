push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
subl
mov
sub
mov
xor
movl
add
movl
sbb
mov
push
movzbl
sbb
mov
push
mov
xor
push
or
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
movl
movl
movl
orl
movl
mov
subl
xor
add
mov
sbbl
movl
movb
mov
xorl
xor
add
jmp
jb
fsubs
lock
push
in
or
jle
jle
jg
jle
xlat
cmp
rol
pop
add
add
add
xor
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
mov
mov
jo
inc
xor
mov
icebp
push
xor
and
sahf
jl
jae
and
incl
in
popf
inc
es
scas
add
rcrb
popf
jl
push
bound
jge
inc
push
push
and
and
into
jae
inc
cmc
pop
inc
jg
roll
mov
and
jp
stc
insl
pop
sahf
fwait
sbb
jge
mov
out
dec
dec
into
pop
out
mov
xor
push
push
or
xchg
sti
and
aaa
jno
mov
jae
arpl
sub
mov
ret
repz
pop
inc
push
andb
sarb
mov
sbb
scas
cld
movsb
in
pop
aam
sub
cmp
movsb
or
jl,pt
movsl
gs
lret
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
orl
jmp
dec
push
push
push
ds
add
cli
jg
jle
jg
jle
cmp
mov
mov
xchg
lret
jnp
aam
sbb
decb
and
mov
pushf
iret
mov
sub
cmp
fiadds
push
mov
ret
and
adc
cmp
jbe
push
sbb
out
pop
stos
xor
popf
subb
arpl
cmp
sbb
loopne
jnp
add
jae
clc
or
cwtl
in
aad
cmp
int3
mov
adc
pushf
sahf
jbe
mov
sbb
and
cmc
std
adc
mov
adc
add
dec
jp
adc
xor
testb
rcrl
xchg
sbb
jmp
test
mov
mov
sub
push
add
sti
add
sub
hlt
test
and
mov
adc
loope
adc
jge
xchg
gs
inc
fwait
xchg
xor
push
mov
fs
jnp
mov
divl
call
popa
push
cmp
xor
inc
sbbb
mov
pop
gs
jne
lods
fnstenv
test
xor
decl
test
cmp
xor
mov
jns
out
sbb
repz
dec
cmp
add
test
push
pop
movsb
in
sub
pop
dec
mov
lahf
aam
xchg
mov
xor
xor
neg
jmp
cli
fcompl
jno
cmp
dec
push
jge
jle
jg
jle
mov
mov
bound
sub
and
mov
stos
stos
clc
adc
jp
scas
popa
rcll
pusha
aad
xchg
xchg
jmp
inc
jg
data16
cmp
xchg
clc
je
push
pop
mov
mov
xchg
out
adc
mov
fwait
das
call
push
adc
aam
pop
xchg
jnp
cmp
mull
push
rcrb
dec
dec
insl
or
es
gs
clc
pushf
movsl
outsl
xor
aaa
imul
cmp
dec
and
fs
push
iret
pop
call
xlat
or
or
xchg
mov
jecxz
xor
mov
in
fnsave
notb
and
orb
push
je
xor
sbb
fimuls
leave
test
or
pop
fs
stos
xor
pop
pop
pop
jecxz
adc
loope
mov
in
or
imull
scas
imul
add
mov
xchg
jmp
les
mov
mov
ret
jnp
jl
mov
jmp
popf
loopne
jno
fmull
inc
fs
es
cmp
or
bound
jp
test
fnstenv
push
sbb
jns
ja
sbb
xor
ljmp
les
daa
out
dec
sub
lret
dec
rorb
adc
aas
lods
filds
mov
mov
xor
sbb
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
sbbl
add
decl
mov
lea
mov
movzwl
and
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
or
out
jecxz
icebp
int
add
or
cmpb
cli
jg
jle
push
mov
shlb
aaa
sub
int3
imulb
add
das
mov
push
nop
push
add
dec
add
movsl
notb
pop
push
mov
push
dec
fiaddl
mov
mov
in
frstor
cmpsl
mov
xchg
sub
mov
push
int3
imul
jecxz
inc
or
leave
mov
outsl
stc
in
dec
mov
xchg
xor
mov
pop
aad
mov
call
push
jp
cmc
pusha
dec
or
jnp
inc
pop
jl
test
adc
pop
cmc
jmp
pop
mov
push
call
cmc
mov
sub
test
mov
fimuls
add
cld
shlb
dec
pop
pop
stc
and
mov
into
xor
std
xlat
sbb
bound
enter
add
aas
sbb
mov
sti
mov
shl
aam
std
hlt
fisttpl
dec
loopne
dec
mov
and
notb
adc
push
stos
stos
cmpsb
mov
lods
mov
inc
cltd
rolb
jecxz
inc
add
lock
mov
jg
add
sbb
sub
test
lret
cwtl
and
add
addb
inc
js
xchg
addr16
orb
repz
xchg
cltd
movsb
fsubrl
std
mov
int
adc
mull
pop
inc
ljmp
insl
movsl
cmpsb
lret
push
test
jne
mov
jmp
xchg
mov
push
jo
adc
dec
mov
hlt
mov
cli
jg
jle
pop
clc
popf
xor
push
push
pop
mov
cmpsl
loopne
inc
imul
add
jne
sub
sub
idivb
fldl
inc
fldt
or
pop
dec
es
or
push
imul
add
pusha
xlat
loope
enter
inc
fwait
push
mov
add
rcrl
jmp
adc
add
mov
xchg
sbb
rclb
sarl
mov
push
imul
sahf
in
int3
cmp
fwait
negl
xchg
dec
aam
jbe
xor
cs
and
loop
mov
sti
lods
es
adc
jnp
and
outsb
jp
cld
shrb
test
mov
add
or
or
mov
mov
arpl
fcomp
int
leave
imull
daa
or
jge
in
shlb
push
fs
mov
in
jno
loop
cmc
xor
les
or
push
jl
sbb
sub
sahf
push
cmp
fistpl
icebp
or
mov
mov
movb
mov
sti
es
les
data16
jg
add
adc
scas
sbb
jg
or
xchg
rclb
mov
testl
stos
sbb
popf
cli
pop
mov
ljmp
inc
fs
mov
mov
xor
add
mov
mov
mov
xor
jmp
pop
xor
mov
mov
mov
lahf
cmc
xchg
and
jle
cli
jg
jle
jbe
sbbl
js
repz
mov
rorb
ds
mov
jecxz
fists
mov
nop
push
mov
andl
ret
or
mov
repz
mov
cmc
mov
mov
sub
mov
pop
cmp
movsl
adc
je
das
cwtl
js
lret
and
add
shlb
push
and
and
int
jne
or
cmp
lsl
or
rcr
aaa
dec
mov
cld
ljmp
cwtl
sub
or
pop
mov
lret
call
std
into
fildll
dec
rcrb
lret
mov
xor
outsl
aas
cmp
lret
xchg
in
ret
push
adc
adc
sub
sub
xchg
std
in
aas
out
push
adc
mov
pop
outsb
iret
daa
imul
pop
mov
mov
ja
movsb
sub
es
pop
lcall
mov
sbb
movsb
jns
sbb
aas
mov
in
add
or
push
cmp
out
pusha
adc
test
inc
loop
bound
mov
out
sahf
mov
testb
in
rolb
shlb
mov
fiadds
push
mov
loope
ljmp
or
ret
adc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
les
loopne
mov
xor
out
push
pop
jle
cli
jg
jle
mov
mov
jp
add
gs
adcl
packssdw
or
fstps
arpl
mov
xchg
mov
fnstenv
inc
lods
loopne
push
test
cmp
test
jmp
mov
pop
jl
inc
addr16
xchg
mov
pop
into
mov
cmp
in
cli
xchg
pushl
imul
jge
test
mov
jbe
inc
lock
in
pusha
mov
rcll
add
xchg
sbb
incb
push
inc
sub
pop
mov
push
inc
add
fstps
sbb
dec
xor
or
in
jg
dec
ret
adc
pop
loope
jl
scas
shlb
loopne
stos
call
pop
lret
jmp
test
std
imul
shrb
sub
test
mov
orb
cmp
aad
filds
sarl
adc
cwtl
mov
mov
fsubrs
push
andl
repnz
es
inc
cmp
fxtract
shrb
rorl
dec
mov
pusha
adc
std
jns
scas
pop
into
cmp
jmp
xorb
jnp
jmp
lds
movsl
test
and
sbb
jns
clc
je
lea
push
mov
xor
add
jmp
pop
and
aas
jno
imul
xchg
add
jle
jg
jle
push
mov
jne
stos
xorb
xchg
inc
ret
cmc
dec
lods
subb
cs
sbb
stos
cmp
ja
push
mov
ficompl
in
push
add
int
test
pusha
lds
adc
fimuls
loopne
dec
lret
addr16
jecxz
jge
cmp
icebp
jnp
cmpsl
jl
push
add
or
add
out
les
lods
sarb
loop
loope
aas
int
ret
lods
mov
icebp
mov
jmp
xchg
xchg
ret
out
inc
adc
rcr
adc
stc
xchg
cwtl
ret
and
mov
popa
ret
test
and
mov
pop
push
adc
aaa
lea
dec
test
ljmp
xchg
or
push
push
stc
sarl
insb
ret
push
sbb
mov
leave
imul
cmpsb
divb
loopne
shll
cld
fdivp
leave
out
rol
or
add
push
push
out
inc
xchg
or
add
jg
sub
add
sbb
dec
dec
mov
pop
mov
cs
mov
ds
aad
dec
mov
rcl
jo
jl
inc
repz
mov
cmpsb
imulb
add
xor
xor
fistps
inc
call
add
pushf
add
add
dec
and
jno
push
mov
xchg
mov
jle
cli
jg
jle
les
aad
out
cmp
outsl
sbb
xchg
sub
jle
popa
mov
add
jbe
data16
xchg
xor
mov
in
push
dec
xchg
out
and
push
xchg
sub
and
test
push
call
and
into
mov
in
add
insl
or
push
lret
and
mov
push
out
mov
jle
mov
loop
and
repz
out
pop
jb
out
test
mov
in
lahf
insb
cltd
ja
sahf
mov
jnp
xchg
xchg
xchg
add
lahf
lea
xor
mov
iret
push
movsb
sub
inc
hlt
std
notb
scas
jae
shll
push
arpl
outsb
and
mov
sbb
sub
fwait
out
pop
sub
mov
subl
std
popf
fwait
jmp
xor
out
je
add
imul
scas
cmp
jl
mov
xchg
xchg
daa
cld
test
pop
aam
cmpsl
enter
test
mov
fsubrp
push
inc
and
jmp
bswap
fsubl
fwait
daa
ret
xchg
lret
jmp
rclb
aas
sub
sub
std
mov
testl
inc
mov
adcl
xchg
add
fsubl
fsts
outsb
mov
adc
jnp
cmp
fisttpl
int3
mov
inc
lock
pop
movsl
jp
jmp
and
inc
call
add
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
bound
fadds
pop
out
imul
add
cli
jg
jle
test
pop
or
insb
cmpl
adc
push
add
test
sahf
mov
sub
fwait
orb
xor
divl
stc
jmp
dec
loope
cmp
jns
cmp
adc
adc
adc
and
lds
jo
dec
push
push
mov
inc
jl
fcmovne
scas
mov
cmc
inc
add
xor
rorl
pushfw
subb
pop
jne
dec
and
imul
xchg
outsb
pusha
out
xchg
aad
sti
mov
xor
out
and
cmp
sub
insl
mov
cmp
arpl
sbb
sbb
int3
jne
xor
bound
jle
push
sub
add
insb
dec
stos
in
fdivr
mov
mov
jnp
sub
mov
lock
clc
in
scas
in
mov
sub
fs
mov
xor
or
or
xchg
push
loop
int
mov
mov
mov
pushf
xchg
mov
push
mov
add
ss
lret
scas
or
dec
and
jnp
mov
dec
fucomip
icebp
mov
mov
and
jmp
fs
bound
rcrb
notb
fildll
push
pop
pop
cmp
sub
jne
xchg
test
mov
mov
insl
xor
sbb
mov
mov
ss
mov
dec
testb
mov
mov
mov
mov
mov
jmp
push
shlb
push
stos
rol
xor
jmp
cli
jg
jle
popa
xor
xor
in
lock
test
sbb
in
insb
inc
or
jmp
rclb
test
add
fildll
sub
je
int3
test
cli
and
fbstp
add
jnp
add
add
xchg
fs
dec
pop
push
or
insb
mov
cmpsl
loopne
or
sub
shr
lds
filds
arpl
sbb
mov
xor
push
aad
mov
fistpl
scas
addl
test
mov
push
std
jle
push
and
mov
stc
pop
movsl
inc
pop
mov
jg,pt
push
ja
push
dec
pop
fsub
shrl
cmp
test
push
sarb
out
test
adc
sub
das
adc
clc
mov
shlb
pushf
xchg
or
pop
adc
add
inc
movsl
testb
cmp
mov
ja
insl
sbb
ds
cwtl
cmp
or
mov
push
jo
inc
pushf
cmp
add
fsubrl
sub
xchg
adc
mull
sbb
stos
add
mov
mov
jo
fisttpll
push
outsl
jge
pop
adc
xchg
lods
xor
dec
cmpsb
or
sub
dec
mov
shlb
pop
inc
mov
mov
lds
sahf
icebp
jns
insb
inc
inc
fistl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
les
rorl
mov
clc
cmpsl
mov
jg
jle
aam
inc
ss
pusha
mov
fisubrl
call
sbbl
or
xchg
mov
mov
int
jno
in
xchg
push
push
fnsave
pop
leave
jnp
push
xchg
jo
call
mov
fisubl
mov
lret
sub
int3
das
pushf
js
popf
xchg
xchg
inc
hlt
inc
mov
sbb
ljmp
mov
adc
sahf
pop
js
and
cmpsl
cmp
call
jmp
mov
inc
aad
stos
icebp
sahf
sar
dec
sub
dec
push
clc
lock
xor
insb
jg
push
or
out
sarl
repz
push
mov
popf
inc
or
js
lcall
incl
out
stos
dec
jmp
pop
xorb
xor
sbb
sarb
sub
out
sbb
inc
mov
mov
loopne
mov
pop
out
cmp
clc
mov
mov
imul
xchg
mov
shl
lea
out
pop
lret
punpckhwd
ret
bound
test
jp
and
faddl
mov
xchg
rcr
mov
cwtl
mov
or
or
or
scas
push
movsb
sub
add
pushf
cmpb
call
clc
jge
dec
cltd
jns
or
insl
mov
mov
mov
mov
mov
test
jmp
inc
push
jnp
or
push
adc
nop
dec
jns
pusha
jb
or
jle
jg
jle
fstp
cmp
mov
mov
ficompl
pop
xchg
inc
xchg
mov
push
or
lods
repz
xchg
test
aaa
dec
enter
mov
dec
dec
inc
sbb
sahf
mov
mov
jne
push
mov
inc
aas
mov
adc
push
daa
mov
sti
enter
xchg
fisubrl
inc
push
xchg
lds
cs
xchg
fcompl
sti
imul
stos
inc
cmpsl
sub
mov
loop
subb
add
shll
xchg
imul
or
adc
pop
notl
imul
fs
mov
fstl
fnsave
ja
hlt
out
imul
sub
mov
test
lret
mov
mov
shll
push
cmp
pop
jle
add
outsl
jl
fisubs
ljmp
addl
ror
pop
loope
and
stos
repz
jl
pusha
pusha
push
popf
and
adc
jae
addr16
iret
aas
inc
mov
aad
xorb
aam
cmp
cmp
adc
mov
loopne
push
push
mov
lahf
movsl
popa
jecxz
lcall
js
movups
pop
addr16
mov
sbb
push
dec
cmp
mov
das
cmpsl
js
dec
loopne
sub
dec
loop
shll
scas
push
mov
jne
mov
xor
add
jmp
or
lret
jecxz
jecxz
icebp
loop
mov
mov
sahf
stos
or
jle
adc
test
mov
je
nop
lea
mov
pop
faddl
lret
out
pop
mov
fistpll
lahf
icebp
int3
xlat
sbb
insl
mov
xchg
out
clc
stos
adc
sub
jno
push
js
jecxz
xchg
push
xchg
call
cmp
test
ret
nop
mov
xor
mov
dec
pop
mov
cld
cmp
sub
mov
loopne
fstps
or
stc
sub
xchg
loop
push
or
lret
push
mov
push
mov
es
sbb
aad
je
mov
mov
lock
insl
stos
dec
dec
mov
lret
sarb
add
add
pop
imul
xor
pop
xlat
cmp
stos
out
inc
lcall
xor
inc
mov
or
aaa
notl
and
adc
leave
ja
scas
aam
pop
addl
lcall
and
push
or
sub
sub
ljmp
mov
enter
xor
jnp
push
test
in
das
out
pop
idivl
cmp
gs
cmp
scas
or
movsl
cmpsb
pop
rorb
jbe
out
xor
jle
test
dec
jp
fdivs
stos
push
mov
ret
call
jge
mov
dec
cld
dec
les
sbb
jbe
inc
insl
mov
loop
repz
xor
add
add
call
inc
in
movb
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
add
inc
dec
aas
cmp
out
push
xchg
jle
jg
jle
popa
pop
jb
dec
dec
fucomip
aaa
add
fnsave
sub
setg
mov
data16
dec
call
sahf
repz
mov
aam
cmpsl
xlat
pop
lahf
cwtl
push
mov
mov
cwtl
and
aad
mov
int3
push
add
cli
adc
mov
je
or
sub
cmpsb
jecxz
mov
sarb
sub
inc
cmp
dec
inc
inc
into
sbb
ja
cmp
je
cmpsl
add
sti
lds
pop
mov
push
in
xchg
or
fwait
insb
popa
cmp
sub
fidivs
das
pop
adcb
inc
jae
or
test
movl
insb
jno
vpsrlw
mov
cmpsl
pop
mov
jle
pushf
dec
aad
dec
dec
inc
clc
jbe
outsl
xor
and
and
flds
shrb
xor
xchg
scas
pushf
scas
movhps
insl
fnstsw
dec
inc
daa
dec
cli
pop
test
push
dec
ds
cmp
cld
into
shll
pop
wbinvd
jnp
sbb
clc
int3
jno
jl
mov
cmpsb
pushf
xor
pop
bound
jae
shll
cmp
fimuls
loope
mov
cs
cmp
adc
scas
sbb
mov
inc
xchg
add
cmp
jo
mov
mov
fimuls
push
mov
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
jmp
jmp
xchg
push
arpl
nop
push
rorb
mov
jle
cli
jg
jle
mov
jle
bound
dec
mov
sbb
les
popf
fldt
cmp
std
daa
jnp
mov
leave
pop
xchg
xchg
jecxz
mov
fidivl
dec
ja
int
push
jne
cmp
outsb
movsl
sub
lcall
mov
jg
mov
sar
xchg
dec
mov
mov
fldenv
pusha
das
mov
or
and
mov
mov
xor
out
fmull
mov
pop
or
pop
outsb
stos
adc
and
mov
int
or
pop
call
push
add
jge
lea
adc
mov
adc
mov
cmp
mov
dec
pop
data16
out
scas
mov
sbb
sbb
popa
dec
repz
and
push
scas
xchg
cmp
clc
into
and
mov
pushf
adc
sub
out
imul
das
leave
add
jb
call
mov
imul
iret
aaa
xchg
sub
out
xchg
dec
mov
jg
and
mov
jbe
clc
lea
inc
mov
dec
or
xor
push
adc
mov
inc
and
jb
pushl
dec
jle,pn
movl
insl
cmc
sbbb
mov
aam
jae
push
push
inc
push
das
daa
fmull
add
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
push
pop
jmp
cmc
mov
icebp
insl
sbb
xchg
loopne
push
jle
cli
jg
jle
xor
stos
sub
dec
and
ss
enter
sbb
rclb
sbb
jle
int3
js
fs
fiaddl
xor
imull
xchg
push
ficomps
jns
out
pusha
fwait
inc
jecxz
pop
loop
sbb
out
mov
dec
dec
or
xor
jbe
sbb
popa
andb
cmp
xor
lret
fmul
mov
pop
aas
out
and
jle
adc
mov
das
cmp
orb
jbe
imul
jb
xor
inc
xor
add
sbb
loopne
orl
fsubs
out
pop
mov
sub
xchg
loop
xlat
aaa
aam
mov
xor
sub
push
dec
cltd
jae
mov
xchg
cwtl
mov
lret
inc
lods
out
out
push
aaa
push
outsb
jmp
mov
sub
add
sahf
pop
mov
sub
fildl
jp
repz
pop
lods
test
inc
sbb
inc
daa
sub
and
out
sbb
fucomip
add
fs
mov
push
mov
xor
fs
flds
mov
shll
pop
iret
insb
push
pop
lcall
xchg
mov
add
stc
or
sbb
cmp
mov
mov
shlb
test
inc
in
insl
addr16
call
mov
mov
add
pop
jmp
add
mov
adcb
and
jg
jle
loop
xor
sbb
adc
cmp
or
push
insb
push
idivl
mov
scas
push
adc
sbb
hlt
lret
push
out
push
sub
insl
xchg
je
es
mov
and
xchg
inc
mov
out
enter
dec
pusha
jo
stos
or
out
ja
loope
imul
imul
popa
pop
mov
loopne
loopne
inc
dec
fcomi
movsl
push
sbb
aad
paddusw
push
pop
imul
and
mov
cmp
jbe
loop
mov
fsub
lds
sub
adc
and
mov
inc
mov
cmp
flds
shll
test
stc
rclb
dec
std
pop
jo
btr
adcl
les
add
sti
sub
flds
movl
movsb
push
jbe
scas
push
lds
lar
lret
pop
fcomps
into
mov
jp
dec
lock
jns
inc
iret
xchg
xchg
inc
into
sbbl
pop
sub
mov
loope
ljmp
dec
mov
cld
jbe
fisubl
les
js
add
sahf
lds
out
cmc
inc
xor
and
xlat
jnp
push
ret
cmpsl
cmp
enter
and
lds
popa
fcomip
jns
in
call
int3
gs
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
push
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
not
mov
xorl
mov
sbbl
movl
mov
add
movl
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
decl
mov
xor
mov
mov
sub
imul
mov
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
not
mov
not
movl
movl
mov
adc
movl
adc
movl
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
and
jmp
sbb
add
lock
icebp
mov
mov
jle
jl
jle
cmc
scas
in
lods
fwait
sub
scas
rol
mov
loopne
dec
lods
pop
movsl
in
in
ja
inc
lret
mov
daa
stos
cli
add
jecxz
enter
aam
xchg
arpl
test
in
aaa
or
sbb
mov
test
shr
repz
push
pop
ds
daa
inc
pushf
out
out
ja
lret
xchg
push
incb
cmp
cs
bound
sub
lret
scas
dec
lcall
dec
aaa
push
cmp
push
arpl
es
cmpsb
mov
dec
mov
lret
adc
ror
rorb
inc
cmovs
test
cmp
imul
and
jae
jne
adc
ja
jmp
roll
scas
cmp
cli
mov
pop
mov
loop
outsb
fmuls
orl
sub
rcrb
cmpsl
loope
pop
les
inc
mov
dec
addl
ret
sbb
ja
push
sbb
mov
outsb
or
mov
ja
in
imul
cmpsb
jbe
test
cmpsb
add
addr16
xlat
pop
mov
and
cli
call
inc
add
xchg
cmp
inc
adc
or
pop
pop
fcoms
mov
xchg
fcomp
cmp
test
cmp
je
rolb
out
pop
adc
jg
nop
xchg
adc
xlat
stos
cs
pop
jae
mov
in
cmp
pop
test
cmp
and
xor
add
repnz
addl
xchg
push
or
int3
cli
cmc
leave
cmpsl
dec
or
fildl
ss
data16
xor
mov
xchg
and
fistps
lcall
and
pop
mov
into
mov
ret
inc
dec
gs
xor
shlb
adc
je
dec
push
inc
sbb
and
dec
mov
push
shrb
or
movsb
arpl
push
clc
jecxz
mov
ficompl
mov
out
xchg
pushf
push
test
sub
in
into
dec
aas
popf
lcall
iret
pushf
xchg
add
nop
mov
or
mov
or
data16
xor
repnz
and
clc
xor
stc
mov
mov
loope
jp
xor
and
lret
xlat
pusha
or
mov
xor
sbb
jne
je
repnz
pusha
sbb
lcall
aad
add
jmp
mov
stc
lock
iret
lahf
subb
aas
cmc
jns
cmp
in
js
dec
loop
test
mov
sub
sahf
mov
xor
inc
mov
movl
sbb
mov
sbb
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
subl
add
movl
cmp
movl
je
movl
push
jmp
xorl
mov
sub
mov
sub
xor
mov
xorl
xor
movl
add
cmp
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
negl
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
add
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
pop
cli
mov
jno
gs
or
scas
loopne
push
pop
dec
and
jle
pop
jl
jle
jl
pop
jl
pop
test
ret
mov
movsl
adc
mov
sub
pop
inc
rclb
push
push
pushf
sbb
lea
xor
test
xchg
jno
rclb
xlat
and
loope
cmpsb
push
sub
jb
cmp
push
xor
or
hlt
push
or
sub
cmc
popa
jbe
in
scas
inc
sbb
idiv
mov
ret
jg
dec
leave
repnz
cmp
cltd
not
cmp
stos
dec
scas
add
pop
sbb
out
lret
xor
jl
int3
jbe
mov
js
xor
mov
cmp
stc
mov
pop
imul
xor
or
orl
push
or
call
sbb
pop
xchg
sub
shld
aam
int
dec
mov
jle
jo
cwtl
sub
adc
inc
cmp
pop
push
add
addl
push
cld
push
jle
inc
sbb
fisttps
jle
add
jp
xor
outsb
jmp
xchg
and
sub
cwtl
xlat
ljmp
jl
das
ja
sahf
lods
icebp
loop
out
push
ss
lcall
jmp
nop
and
xchg
adc
rolb
pop
aaa
in
dec
dec
sub
aas
cmc
cmp
cmp
jns
and
mov
cmc
in
inc
pop
lret
in
cmp
ret
adc
sti
or
nop
cmpsl
add
int
pop
add
push
arpl
mov
push
push
jge
dec
in
mov
in
mov
out
xchg
lahf
das
push
out
mov
pop
filds
or
cmpsl
cld
push
fimull
xor
adc
cmc
push
inc
icebp
loop
mov
push
arpl
aad
sbb
dec
iret
in
inc
mov
mov
jns
dec
lahf
test
adc
shrl
xchg
divb
dec
lea
and
pop
xchg
jb
inc
in
into
enter
roll
inc
lods
push
mov
insl
and
inc
mov
dec
pop
fmul
cmp
mov
movsl
pop
push
inc
sbb
xor
lock
orl
lret
clc
add
inc
jg
push
and
jne
dec
scas
jno
icebp
out
add
xchg
clc
mov
push
lcall
enter
xabort
jge
sti
fidivs
jne
mov
rorb
and
rol
jae
mov
std
adc
das
push
mov
imul
les
pop
cmp
add
mov
dec
xchg
dec
adc
jg
das
hlt
lret
loopne
rol
cltd
cmp
cmpsl
fistl
pop
dec
sbb
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
mov
xchg
xorb
jno
cs
jle
or
jle
pop
jl
jle
xchg
lea
push
out
nop
push
adc
pop
inc
repnz
push
lcall
fbld
push
mov
or
icebp
adc
daa
ljmp
jl
xor
addl
pop
inc
pop
lea
xor
cmpsl
or
mov
jl
and
pop
popa
add
into
sub
rorb
xchg
pop
and
lea
or
bound
test
lods
pop
dec
push
xchg
jle
leave
sub
es
pop
xchg
xlat
add
mov
lret
pop
aas
mov
mov
adc
mov
clc
inc
js
cltd
pop
lcall
pop
imul
sub
mov
mov
push
adc
out
aam
or
test
pop
fstp
lret
sti
fldenv
psrad
in
std
inc
andb
inc
mov
pop
imul
rcll
pop
ss
call
adc
jp
jl
lret
lods
movsl
test
cmp
dec
mov
cli
daa
iret
aam
or
xlat
lock
mov
cmp
test
ds
out
adc
mov
incb
sbb
std
ljmp
sbb
mov
pusha
jnp
push
dec
dec
fwait
in
mov
ret
ret
inc
mov
add
and
sbb
xchg
push
ret
inc
push
cltd
cmp
jo
mov
add
pop
js
jbe
repnz
lds
mov
punpcklwd
add
in
sbb
mov
lcall
inc
jmp
add
jbe
cmp
mov
inc
repz
inc
movsl
shll
lds
push
ret
leave
out
cmc
and
iret
xor
pop
push
dec
dec
pop
out
js
daa
push
mov
or
pmulhuw
sbb
xor
sbb
das
dec
es
xchg
cmp
lret
rcll
lret
aam
test
lret
push
pop
js
sbbl
jmp
push
adc
call
dec
jle
jecxz
xor
fbstp
cmp
arpl
xor
in
and
xlat
lcall
push
cmp
pop
movsl
jmp
add
inc
data16
test
leave
movl
and
xchg
mov
cmp
push
repnz
mov
out
adc
jecxz
rol
xor
mov
lret
inc
lahf
cs
loopne
popa
inc
dec
inc
sub
mov
outsl
dec
adc
mov
rcll
pop
push
js
and
fistpll
fimull
add
add
mov
mov
jmp
mov
aaa
or
mov
subl
xor
xchg
je
je
jle
pop
jl
jle
xchg
inc
mov
and
xchg
jae
sub
jmp
fldl
orb
xor
push
mov
jo
ds
aad
fwait
mov
mov
mov
das
popa
xchg
jge
dec
mov
push
mov
mov
mov
stos
mov
push
sbb
in
push
mov
aad
nop
add
mov
mov
mov
ret
pop
push
cli
push
ret
mov
mov
inc
cmp
iret
cmpsl
sub
xchg
cmp
push
mov
xor
ja
jb
xor
cmp
dec
frstor
jle
in
jle
pop
jb
pop
mov
pop
mov
cmc
sbb
cmc
xchg
fistpll
pop
stos
andl
jle
push
jl
nop
cmp
and
adc
mov
push
fsts
xchg
popa
call
rcl
xor
iret
lahf
lods
subl
cwtl
rorl
and
cltd
pop
imul
mov
add
pop
fdivl
and
notl
stos
int3
imull
pop
fcompl
les
mov
or
insb
jecxz
jnp
loopne
push
mov
nop
fs
fiaddl
ds
push
dec
test
push
inc
in
cmp
cmp
and
pop
sub
pushf
jae
jno
fsubrl
and
and
sbb
cmpsl
scas
jl
and
pop
aas
jl
mov
pop
xor
cltd
incb
loopne
add
pextrw
test
lahf
cmp
les
mov
push
pop
popf
sub
aaa
imul
jge
lds
mov
add
inc
push
dec
xor
xchg
push
orb
leave
les
mov
jne
lods
inc
cmpsl
cli
sbb
out
out
jg
jg
imull
repnz
mov
inc
loop
dec
cs
ljmp
adcl
mov
jecxz
mov
seto
add
fiadds
inc
jae
jmp
sbb
test
addb
inc
jnp
rorl
out
andl
adc
iret
lea
sub
pushw
repz
lret
inc
cmpsl
aam
cltd
adcb
xor
inc
jmp
hlt
loopne
pushf
push
push
loopne
pop
ffree
out
mov
dec
fsubrs
dec
call
adc
fsubrl
mov
pop
lahf
xchg
xor
pushf
push
popf
sbb
xor
pushf
mov
push
or
lock
ds
rcrb
jge
loopne
clc
jmp
add
dec
popa
jno
jne
xor
jle
int
out
pop
sbb
pop
jl
jle
mov
jo
mov
adc
into
popa
jbe
adc
in
gs
inc
jns
cs
sub
pop
cmc
leave
or
arpl
dec
icebp
dec
cmpsb
dec
cmc
cmc
cmp
icebp
add
jge
inc
add
pop
imul
jbe
pop
movsl
mov
fdivrs
bound
add
jge
ficomps
call
stos
xlat
adc
cmpsb
push
mov
mov
mov
dec
ret
cmp
push
or
sub
add
push
dec
xlat
lock
jg
hlt
fs
stc
mov
sahf
mov
mov
adc
inc
gs
out
mov
daa
xchg
push
arpl
popa
das
hlt
sbb
lcall
cld
cld
in
pusha
mov
inc
mov
add
xor
arpl
je
mov
inc
rcll
dec
inc
lock
cmp
mov
cmp
shrb
fistpl
xchg
push
subb
mov
jecxz
pop
pop
or
mov
xor
pop
or
sub
cltd
fs
aam
mov
inc
mov
xchg
and
sub
lea
lods
inc
sub
insl
mov
sbb
into
out
stos
pop
or
loopne
xlat
lret
in
sbb
jno
testl
add
push
sahf
push
mov
mov
jo
pop
push
jo
test
mov
jo
or
or
cmpsl
mov
jbe
cmp
cmp
xor
ljmp
mov
cmpsb
js
test
ret
add
xor
cmp
outsb
mov
into
out
mov
xchg
or
jl
scas
cmp
test
insl
das
mov
bound
mov
add
das
cmp
xor
out
xor
cmp
cmp
jnp
mov
or
dec
les
pushf
je
bound
mov
into
pop
pop
cmc
add
push
or
push
push
decl
das
out
outsb
add
sub
push
mov
mov
stos
scas
dec
mov
lods
enter
push
clc
xchg
ret
inc
jnp
and
xor
dec
or
loop
cmp
mov
dec
inc
addr16
sbb
cmp
add
lea
xchg
mov
mov
inc
and
dec
xchg
leave
lea
mov
loope
push
fsubs
and
jp
sub
adcb
add
cs
repnz
or
rcll
inc
lahf
mov
sub
push
mov
dec
in
mov
dec
cs
nop
stos
cltd
cli
in
xchg
sub
fisubl
jbe
movsl
push
or
icebp
pop
add
cmpsl
xor
xor
or
sbb
rorb
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
jmp
sub
test
ja
mov
jle
jl
jle
lods
repz
loopne
out
mov
gs
loopne
xor
jl
insb
pop
mov
jp
jl
cmp
cmp
icebp
add
jmp
enter
mov
scas
jmp
out
int3
and
jae
push
or
hlt
xchg
cmp
inc
clc
fld
mov
sub
cli
fwait
mov
push
xchg
dec
and
bts
sti
insl
cmp
scas
or
data16
dec
add
mov
jae
mov
mov
mov
cwtl
pop
outsb
dec
mov
mov
in
sarb
test
in
push
ss
lret
aaa
fcmovu
sahf
arpl
pop
ret
clc
ret
ficoml
cld
sub
popf
lcall
scas
mov
xor
and
pop
ret
mov
dec
imul
in
sbb
outsl
shr
sub
mov
cltd
mov
movsl
push
jp
fs
mov
test
push
jp
mov
xor
jbe
les
pop
movsl
add
fildl
stos
sbb
jb
ja
loope
xor
lds
sbbl
add
push
movsb
aam
cmp
nop
mov
mov
aad
dec
sub
add
or
cld
or
mov
loopne
xchg
mov
xlat
and
iret
add
outsl
sbb
push
outsl
ljmp
imul
mov
and
popa
cmp
mov
mov
push
cmp
pop
mov
pushl
decb
add
lock
mov
inc
lcall
fdivrl
jge
mov
mov
decl
or
lock
and
movsb
arpl
dec
popa
aam
jle
mov
xor
lahf
pop
mov
fsubrl
fs
fwait
popa
and
push
es
xor
nop
movsl
mov
cmpsb
fsubl
mov
out
cmp
xchg
mov
mov
fdivrl
mov
out
test
cld
arpl
cmp
pop
out
lock
adc
out
adc
mov
cwtl
mov
lret
insb
test
add
idivl
int
subb
sbb
cwtl
ret
pop
popf
sub
rclb
dec
jo
mov
pop
dec
icebp
in
cld
mov
mov
cmpsl
and
stc
es
std
out
lods
loopne
ja
inc
loop
dec
mov
pushf
and
push
enter
into
fstpl
lret
fildl
jne
sbb
inc
hlt
jne
popa
xchg
test
jmp
aam
je
jmp
push
jle
dec
mov
testb
clc
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
xor
adc
shl
icebp
repz
sbb
fsubl
jl
jle
inc
aam
lea
jl
mov
les
lods
repz
and
pushf
jnp
iret
mov
jecxz
xchg
jl
call
sbb
push
mov
out
testb
aas
hlt
push
push
test
fnstenv
enter
in
popf
mov
lcall
xor
pop
ret
mov
in
int3
int
pop
or
add
cmp
adc
adc
popa
adc
daa
cmovns
in
add
mov
and
xor
adc
push
fwait
ljmp
or
adc
lods
cmp
cmp
ds
add
inc
mov
lods
repnz
push
cmp
dec
aaa
nop
scas
sbb
es
xlat
pop
icebp
ljmp
or
sahf
mov
outsb
push
pop
sbb
mov
dec
lcall
imul
and
sbb
aam
decb
clc
decl
sbb
in
xchg
xchg
mov
xchg
fs
dec
push
bound
pushf
and
mov
movb
inc
insb
xchg
shll
test
mov
pop
mov
xchg
cmp
cltd
inc
pop
or
add
std
push
cld
push
push
and
or
test
into
fadds
sbb
pop
or
mov
mov
lahf
mov
sahf
sbb
jae
ret
out
adc
xor
jbe
comiss
mov
cwtl
movsb
mov
rclb
xor
mov
jne
stos
in
pusha
mov
mov
pushf
bound
test
sbb
cmp
cmp
lahf
or
loop
loopne
ds
or
gs
test
test
jmp
adc
insl
rcrb
lock
jmp
push
imul
test
cli
sub
icebp
dec
lock
subb
adc
cmp
imul
in
dec
add
int
pop
icebp
sahf
call
mov
mov
js
sub
adc
jecxz
scas
cmpsl
mov
icebp
fidivrs
jne
adc
cmpsb
xlat
ficoms
cmp
push
lods
xchg
aas
pop
xor
mov
xchg
pusha
fdivrl
xchg
aad
in
into
jp
iret
gs
dec
jge
fdivl
shll
jl
inc
xchg
inc
sub
arpl
aaa
sub
or
mov
adc
clc
out
mov
jle
sub
in
and
das
xchg
push
repnz
mov
cmp
or
mov
mov
xor
xor
iret
mov
mov
nop
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
xlat
pop
mov
jno
stc
hlt
jb
or
inc
mov
jle
pop
jl
jle
ret
xchg
add
outsl
sub
bsf
mov
call
clc
fwait
negl
sbb
adc
mov
loop
lods
inc
rorl
test
iret
lea
inc
shrl
mov
cmc
jmp
shll
movsl
pop
or
push
add
push
push
fnstsw
test
jle
out
mov
cmp
ja
ds
add
bnd
mov
push
test
mov
cmp
push
fnstenv
pop
movsl
lods
adc
es
mov
dec
push
out
lret
sbb
xchg
lret
decb
jmp
mov
fldt
cmp
and
das
addb
repnz
pushf
sti
mov
sti
pop
pop
jmp
xlat
ja
mov
add
adc
data16
loop
or
push
out
jnp
stc
lcall
and
jg
push
cmp
jp
sbb
faddp
cmpl
sub
mov
addb
sbb
inc
xchg
mov
and
xor
xchg
xchg
mov
xchg
shlb
or
outsl
out
vmovups
xchg
mov
pop
xchg
dec
or
jno
pop
xchg
pop
lea
stos
icebp
in
pop
decb
shlb
inc
add
js
mov
add
mov
jae
insb
xchg
loop
mov
test
je
mov
or
lock
scas
repz
movsl
cmp
jecxz
movl
xorl
adcl
mov
jnp
adc
sti
imul
test
and
arpl
pop
lock
lea
or
jp
popa
or
jae
inc
xor
imul
sbb
stos
pop
sub
inc
aad
pop
pop
adc
inc
mov
adc
imul
pop
mov
jne
mov
scas
push
inc
cmpsb
jge
cltd
mov
test
int
sbb
mov
jecxz
les
stos
adc
das
popf
mov
ja
or
dec
xor
ja
inc
push
xor
fisttpl
imul
out
push
inc
pop
sbb
lea
adc
lahf
out
add
push
fdivl
fimuls
clc
push
outsb
xchg
jno
and
xchg
pop
pop
outsl
jl
popa
test
jb
add
dec
xlat
loopne
jecxz
jno
and
outsl
stc
popa
cmpsb
or
jmp
fnstsw
jecxz
mov
jo
jno
insb
jo
lods
cmpsb
mov
nop
sqrtps
sbb
and
shl
adc
or
pop
xchg
mov
test
imul
mov
xor
sub
lea
jmp
pusha
das
sti
pop
push
push
out
loopne
jl
imulb
jle
jl
jle
lods
mov
sti
sbb
xchg
int
or
push
xchg
bound
in
lods
outsb
adc
mov
sbb
add
sarb
cmpl
daa
mov
mov
stos
xchg
mov
ror
loop
inc
push
in
inc
xchg
and
adc
movsb
div
mov
out
adc
push
jb
mov
or
push
adc
shll
aaa
inc
mov
stos
cwtl
lods
lods
movsb
pop
mov
cld
ret
fwait
imul
jno
jbe
mov
jecxz
sub
inc
dec
push
mov
jmp
test
xor
xchg
adc
mov
dec
push
cmp
test
in
int
mov
stos
test
pop
cmpsl
imul
stc
sub
cmc
cltd
out
mov
push
pop
fstl
mov
push
int3
je
mov
xor
movsl
xchg
cmp
xchg
inc
pushf
mov
or
adc
mov
cmp
mov
sub
push
add
add
cmpsl
adc
bound
dec
sub
mov
subb
mov
push
push
leave
ljmp
push
mov
add
inc
ficomps
scas
mov
out
out
jl
pop
cmp
xor
sbb
icebp
lods
stos
inc
pushf
icebp
dec
shl
fidivrs
pop
nop
enter
xchg
and
outsb
cmp
mov
in
add
pop
push
and
lock
jle
inc
jge
push
mov
mov
mov
cmpb
xchg
js
loop
sub
sbb
lcall
fldt
jno
push
lea
mov
push
mov
data16
pusha
add
outsb
popf
out
mov
outsb
sub
add
dec
xor
shll
into
xor
arpl
icebp
and
sbbb
cmp
movsl
xchg
aam
mov
jge
xchg
dec
mov
hlt
inc
jno
dec
push
xchg
xchg
xor
sub
xchg
movsl
mov
mov
or
pop
pushf
jne
inc
or
cwtl
lahf
test
inc
js
aad
clc
pop
push
pop
in
into
cmpsl
jge
ljmp
push
jmp
pushf
das
loope
dec
cmp
cld
fwait
jae
rcr
push
fisubl
sub
repnz
push
inc
mov
jmp
adcl
outsb
insl
rcrb
out
cmpsl
test
pop
jp
cmc
stos
inc
xchg
inc
repnz
sbb
mov
add
int3
push
add
mov
mov
mov
out
sub
inc
push
sub
mov
imul
decl
fsubr
incb
add
outsl
fisttpll
pop
fmull
pop
shrb
jle
pop
jl
jle
pop
jmp
std
pop
jl
jg
cwtd
xor
ljmp
lods
push
xchg
mov
lcall
popf
jge
jmp
xchg
inc
mov
test
je
nop
inc
jg
nop
push
and
jmp
sar
sub
es
pop
sub
scas
xchg
mov
icebp
xchg
mov
inc
sbb
in
xchg
adc
in
ja
dec
xacquire
add
imul
xchg
cmp
pushf
clc
dec
sbb
cwtl
mov
pusha
hlt
idivb
cmp
dec
push
mov
imulb
clc
sbb
sarb
pop
mov
mov
cmpsl
pop
xor
add
sahf
aam
add
repnz
stc
fwait
pop
cmp
sub
rclb
fsub
mov
push
jecxz
mov
adcl
push
xchg
out
shl
ss
ljmp
or
mov
xchg
sbb
stos
imul
dec
fisttpll
iret
jb
cwtl
jmp
clc
test
pop
stc
addl
lret
ja
repnz
stos
imul
pop
loopne
push
inc
je
xor
movsl
cmp
add
xchg
dec
ficomps
fisubrs
into
cmp
out
fdivr
push
psubsb
es
mov
adc
xchg
inc
das
pusha
lcall
ljmp
clc
and
arpl
outsl
subb
and
dec
xor
mov
add
and
push
mov
mov
cmp
and
xchg
stos
fldt
add
and
pop
test
inc
cmp
cmp
sbb
inc
call
aam
jns
jmp
lcall
lods
adc
fnsave
sub
push
lods
insl
cltd
or
sub
insb
cmpsl
push
sub
inc
dec
data16
adc
adc
dec
pop
push
adc
fdivr
mov
pop
lret
sarb
inc
incb
mov
sbb
inc
add
fwait
sub
or
mov
clc
mov
ljmp
jbe
or
scas
repnz
lcall
test
push
dec
jle
sub
bound
ret
mov
cmpsb
add
sbb
cmpsb
ret
push
mov
lds
ss
sub
je
enter
test
or
mov
xchg
jle
or
or
adc
push
xchg
mov
push
inc
in
xchg
pop
sbb
test
and
add
nop
cld
push
inc
cwtl
rorb
sub
pop
out
adc
mov
mov
clc
cltd
stc
mov
loopne
rolb
rorl
scas
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
and
mov
xorl
xor
notl
add
jmp
scas
incb
jne
lods
jbe
loopne
mov
inc
mov
jle
jge
jle
mov
sbb
xchg
sbb
popl
out
jne
sbb
dec
dec
enter
mov
mov
adc
movl
lea
insb
sbb
add
jecxz
dec
imul
scas
dec
rolb
cmc
mov
pusha
mov
loopne
icebp
fimull
inc
mov
and
xchg
hlt
sbb
pop
sub
je
hlt
cli
push
sarb
in
mull
jae
ret
aad
mov
lret
pop
ss
sahf
mov
and
jne
push
push
and
inc
adc
adc
js
ljmp
dec
cld
add
push
jle,pn
dec
dec
scas
addr16
push
test
sbb
sub
jmp
nop
xchg
test
pop
dec
testl
jecxz
stos
pop
repnz
pop
jbe
jbe
bound
movsb
cmpsl
negw
out
movsl
cmp
dec
ja
mov
subl
mov
dec
dec
test
fdivl
xor
or
addr16
push
adc
pop
scas
enter
mov
push
cmp
sbb
xchg
stc
les
test
call
xor
or
ret
dec
jge
es
js
push
sub
lods
pop
jb
add
outsl
addr16
xchg
dec
sti
dec
dec
jecxz
cmp
pop
jge
jo
in
dec
mov
mov
lods
ret
js
in
test
adc
adc
xor
sub
sub
ljmp
add
in
hlt
cmpsl
aas
lahf
inc
enter
rcrb
insb
pushf
dec
dec
mov
push
das
mov
out
xchg
or
test
loope
xchg
aad
test
lock
popa
jne
fs
lock
sti
pop
xlat
test
push
and
arpl
inc
cli
adc
cmp
jle
ja
mov
mov
movl
adc
imul
sbbl
repnz
jno
mov
sub
inc
test
ret
lret
sti
outsl
pop
jl
dec
push
push
sbb
stc
xor
lods
daa
push
dec
movsb
pusha
dec
in
sbb
dec
into
push
xchg
jmp
mov
sub
push
add
std
and
sub
cmp
addr16
aas
sbb
xchg
jg
push
push
sub
stc
mov
aas
sbb
cmp
lea
lcall
cmp
mov
js
cmp
push
xchg
jmp
push
mov
shlb
cmp
dec
aam
ss
ljmp
dec
sarl
cltd
pop
or
push
andb
call
mov
mov
pop
ret
push
scas
test
and
les
jmp
icebp
stc
fadd
pop
dec
pop
out
sub
dec
adc
movl
movl
mov
push
mov
movl
mov
cmp
je
mov
xor
xorl
xor
lea
xor
cmp
jne
movl
jmp
add
mov
xor
add
movl
mov
mov
movl
jmp
jmp
fldcw
les
adc
call
jge
jle
scas
adc
hlt
arpl
sbb
adcb
mov
push
push
inc
cmp
or
mov
dec
lcall
xor
arpl
scas
pop
jno
movsl
jno
lret
inc
pop
scas
mov
xchg
pusha
and
xchg
or
cli
xchg
leave
fildll
cmc
inc
mov
and
test
push
das
lcall
mov
add
inc
pop
outsb
shrb
mov
mov
shll
cmp
xchg
dec
adc
push
aam
mov
daa
mov
adc
add
stc
xor
cmp
adc
mov
push
or
repnz
rolb
test
jns
inc
roll
ljmp
or
and
jmp
es
mov
mov
es
sub
adc
faddp
fldt
arpl
inc
dec
jge
fcom
xchg
xor
cmc
inc
dec
ds
je
mov
inc
and
leave
or
dec
cmp
lea
adc
cs
xchg
iret
xor
enter
out
jb
bound
xor
in
subb
cmp
popl
inc
and
xor
insb
push
dec
mov
add
sub
mov
loopne
and
adc
sbb
insb
pop
add
je
push
sbb
sahf
mov
inc
pop
push
mov
pop
ja
inc
xchg
dec
cmc
popa
dec
inc
int3
xor
sub
dec
scas
arpl
mov
insl
mov
andb
roll
pop
add
out
imul
sbb
adc
out
stos
scas
push
ret
aam
fadd
fsubrl
movsl
pop
dec
pushf
add
sbbb
imul
push
das
xchg
cld
popf
lods
lcall
popf
aam
add
ljmp
jge
push
xchg
sbb
std
je
cli
xchg
push
or
fld
sub
cmpsl
mov
cmp
cli
mov
in
adc
data16
mov
cmp
or
dec
adc
pop
enter
cltd
mov
fwait
stos
enter
dec
imul
scas
inc
sub
inc
and
adc
aam
fldenv
push
push
pop
or
sbb
adc
insl
dec
cmp
jbe
mov
fldenv
ret
or
xchg
push
lds
sbb
sub
sbb
loop
lret
out
pusha
lahf
out
sub
aad
cmp
add
push
notl
test
fnstcw
cmpsl
fxch
mov
dec
call
mov
inc
into
mov
lret
jo
cld
sbb
dec
mov
ret
push
pop
imul
fisttpl
add
ja
cmpb
fbstp
iret
insb
xchg
addb
and
call
neg
jmp
jne
sub
test
test
mov
mov
jle
sub
jle
bound
mov
mov
cmp
test
imul
dec
lock
jp
jl
push
je
call
add
push
daa
outsb
test
inc
jnp
shl
push
and
scas
push
ret
rorb
out
and
stos
push
xchg
inc
xchg
call
jb
lret
mov
into
sbb
lods
ja
lods
inc
mov
or
into
xchg
ret
pushl
mov
leave
mov
cmc
loopne
mov
mov
pop
adc
mov
push
push
add
movsl
outsb
sbb
push
inc
mov
iret
sbb
nop
bound
out
mov
fimuls
inc
leave
arpl
sbb
negb
pop
clc
lods
sub
dec
popf
jl
js
xchg
xchg
adc
ljmp
movsl
adc
push
into
mov
jl
lahf
jb
add
jo
ljmp
fisubl
push
sbb
ret
sbb
and
push
push
jbe
stos
hlt
xchg
mov
test
mov
ret
sub
pusha
mov
mov
push
ret
fxch
addb
mov
and
pop
adc
cmp
or
dec
ja
xorb
mov
dec
int3
push
aam
fs
aaa
jle
mov
adc
inc
fcomps
and
mov
popa
fwait
stos
lods
imul
ds
loop
mov
negb
mov
mov
in
inc
pop
les
adc
inc
dec
sbb
out
lret
fwait
mov
push
jp
push
fsubrl
mov
repz
jmp
add
scas
divl
pop
cli
and
inc
adc
jnp
pop
dec
jo
ret
sub
push
dec
and
mov
jle
cmp
or
and
ss
insl
lds
cmp
sbb
xchg
dec
add
sbb
push
pushf
mov
dec
mov
or
push
sub
or
jbe
jge
or
add
jmp
mov
pop
aaa
cmp
mul
mov
mov
jge
mov
mov
or
cwtl
mov
mov
imulb
jge
cmpl
jg
mov
xchg
sti
dec
ja
out
jb
jmp
and
iret
xlat
sbb
fldcw
push
xor
xor
xor
pop
jnp
jge
sbb
pop
cmp
fisttpl
fdivrl
pop
insb
mov
int
and
jne
mov
test
push
pop
or
cwtl
mov
xor
mov
mov
or
cmp
add
xchg
icebp
push
cld
mov
add
push
mov
mov
sub
lods
inc
cmp
in
scas
test
and
jns
aam
shl
std
scas
data16
mov
sub
xor
divb
leave
clc
add
lcall
sub
xlat
test
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
jmp
lahf
cmp
push
pop
fcomps
cmc
mov
jle
sub
jle
test
inc
aad
push
repz
xchg
mov
testl
out
addr16
sub
sarb
mov
push
add
adc
stos
outsb
dec
mov
push
ljmp
jno
daa
push
stc
jne
lods
jg
mov
dec
lcall
dec
jp
popa
mov
lcall
scas
insl
cmp
xor
test
in
or
cmpsl
jmp
xor
mov
mov
jge
ss
lock
pcmpeqw
rorl
sub
stos
push
pop
sub
sbb
adc
jae
jecxz
push
xchg
mov
mov
fnstsw
or
inc
and
xor
scas
mov
pop
jbe
pop
mov
push
adc
jp
leave
dec
adc
mov
push
insb
inc
dec
insl
xchg
les
jg
sub
ds
mov
rcrb
inc
shlb
mov
idivb
sbb
int
mov
mov
popf
push
cmc
xor
mov
push
push
and
adc
inc
dec
nop
fwait
push
inc
add
push
push
mov
sub
sub
pop
and
out
xor
aas
loope
hlt
adc
dec
xor
movsl
stos
cmp
push
push
mov
popf
push
cmc
scas
divl
xor
ret
std
add
cmp
jbe
cmp
or
inc
sbb
sahf
pop
add
sbb
push
mov
daa
sub
jo
pop
loop
push
inc
aas
hlt
mov
into
in
mov
push
xor
test
mov
inc
mov
stos
cmpsb
xchg
js
int
test
sub
test
fbld
xchg
jo
sbb
push
jb
xor
ret
inc
cmpsl
xor
xlat
adc
dec
shlb
iret
lea
int3
dec
inc
bound
dec
das
jmp
cmp
int
adc
cmp
or
pop
adc
xchg
cmp
mov
ret
ss
sub
mov
insl
adc
push
cs
cmp
pusha
or
add
gs
dec
inc
imul
icebp
mov
sbb
addl
popa
ljmp
xor
inc
adc
dec
subb
ds
xchg
cli
shlb
ret
pushf
enter
mov
lds
or
xor
lahf
mov
xchg
loope
es
jg
shll
sbb
loope
xor
or
pusha
pop
sbb
or
js
out
xchg
pop
fsubrp
imull
add
jb
mov
pop
xchg
cwtl
xchg
pop
aas
adc
jmp
inc
in
inc
mov
fdiv
xchg
jp
lret
lcall
jle
mov
or
scas
inc
cmp
xor
clc
xor
xchg
jmp
xchg
xchg
cs
cmc
and
imul
arpl
in
sub
test
add
add
mov
leave
ret
push
mov
sub
push
call
movl
cmpw
jne
push
call
movl
cmpb
movl
jne
movl
movl
lea
mov
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movzwl
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
subl
xor
adcl
push
mov
add
mov
mov
mov
cmp
mov
mov
je
or
mov
sbbl
xor
add
sbbl
imul
mov
movl
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
addl
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbbl
xor
adcl
add
cmp
movl
jne
subl
push
orl
pushl
pushl
call
mov
mov
andl
mov
mov
mov
orl
mov
subl
mov
subl
movl
andl
mov
decl
movl
mov
adcl
xor
add
jmp
notl
mov
xor
lea
push
mov
xor
lea
push
adcl
mov
xorl
pushl
call
mov
add
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
ret
push
mov
push
movl
push
mov
mov
mov
mov
movl
movl
movl
cmp
jne
or
mov
sbb
mov
movl
jmp
cwtl
sahf
inc
mov
ja
mov
movl
add
cmp
mov
stos
xor
mov
jmp
pop
or
stos
out
sbb
nop
sbb
mov
mov
jl
cmpb
rcrb
cmp
mov
adc
jmp
sti
jp
pusha
xlat
iret
sbb
sbb
in
scas
pop
lret
leave
pushf
stos
cmp
scas
fisubrs
mov
mov
sbb
data16
jbe
and
jmp
and
mov
adc
sbb
into
mov
mov
cld
mov
push
scas
add
testl
sbb
data16
push
imul
jnp
push
int
stos
mov
test
dec
jae
and
int3
loopew
arpl
daa
or
jno
mov
or
in
adc
or
and
jne
pushf
mov
push
lea
cli
mov
dec
out
push
mov
mov
or
loop
subl
lds
loope
shrl
enter
xor
test
arpl
addr16
cmp
fucom
in
leave
popf
lahf
jnp
mov
out
mov
ret
fs
enter
mov
jl
jnp
dec
ret
sbb
dec
xor
ds
cltd
mov
adc
ret
xchg
shll
arpl
pop
push
pushf
fwait
sar
rcl
xchg
lea
push
add
jno
out
inc
xor
nopl
iret
adc
pop
aas
dec
stc
loope
sub
jo
addr16
mov
lcall
outsl
mov
test
push
push
inc
fnstcw
xor
mov
sbbl
add
addl
mov
movzwl
sbbl
jmp
cmp
es
repz
movsl
pop
xor
cmpsl
ret
cmp
mov
lds
cmc
fdivs
pop
jge
jns
movsb
sub
jp
jae
push
or
lods
shr
loopne
push
jne
fnstcw
sbb
std
iret
mov
addb
cwtl
lret
fcomi
xchg
cltd
mov
repz
popa
sub
push
or
ficompl
mov
pop
dec
inc
scas
test
out
testb
js
xor
mov
and
ficoms
jp
shll
sti
mov
sar
test
enter
mov
push
add
dec
pop
shr
xchg
mov
xorl
sub
cmpsb
movsb
aaa
in
test
fistps
imul
dec
imul
vmaxps
out
add
sub
inc
push
sbb
movsl
xlat
fmull
movsl
adc
jecxz
or
outsl
popa
lret
lea
inc
mov
out
hlt
call
push
dec
inc
addb
dec
push
sbb
jne
jmp
jno
cli
iret
add
xchg
movsb
inc
bnd
sub
jle
hlt
push
popf
dec
sbb
pop
mov
or
repnz
sub
jns
push
mov
jmp
aad
lahf
out
xchg
dec
lret
or
cmpsb
std
fbstp
dec
cli
dec
sbb
jmp
arpl
sub
mov
pop
sub
ret
into
jp
or
call
or
pop
dec
inc
mov
push
pusha
lcall
lahf
add
xor
push
push
clc
lds
test
scas
std
rcr
mov
mov
or
adc
not
andl
and
mov
mov
jmp
xorl
mov
jmp
dec
rcrb
mov
push
loope
sahf
adc
mov
jle
mov
cwtl
push
mov
inc
jecxz
lahf
push
fcoml
sub
aas
leave
in
or
sbb
add
shrl
dec
adc
popf
jle
outsl
cmp
jae
jns
cmp
pop
int
ljmp
add
out
es
pushf
imul
sub
mov
sbb
fstpl
arpl
add
cmp
or
jge
shlb
lods
mov
fisttpl
push
aaa
jle
sbb
add
mov
sub
pop
adc
and
pushf
stos
sub
outsl
sbb
test
fbld
jl
sbb
sar
in
push
aam
insl
ss
jg
xor
scas
push
or
push
add
orl
lods
scas
pop
jae
aad
dec
popf
mov
into
push
mov
cmp
imul
mov
ljmp
leave
adc
jbe
testb
scas
push
scas
add
sti
iret
dec
sub
jecxz
mov
mov
mov
sub
divl
pop
cwtl
inc
sub
xchg
fcompl
fstpt
bound
popf
inc
shrb
stc
or
inc
shl
mov
mov
loope
outsb
or
dec
jge
jmp
scas
stc
cmp
dec
aam
stos
out
sbb
inc
shll
mov
adc
add
int3
lea
jg
xchg
cmp
jnp
fildll
addr16
loope
je
xchg
cwtl
mov
push
divl
sub
mov
aam
cmp
mov
pushf
arpl
push
pop
sahf
dec
sar
jne
call
test
jmp
and
in
popa
push
lret
xchg
ja
jo
int3
les
mov
aam
ss
inc
lret
cwtl
add
hlt
fsubrs
xchg
jmp
xor
push
out
jae
push
mov
xchg
sbb
daa
fdivrl
movsb
into
testb
mov
loopne
inc
in
repnz
movsb
mov
jl,pt
and
int3
inc
cmpsb
lahf
rcll
add
roll
out
lods
pop
jnp
xlat
pop
add
icebp
incb
dec
mov
xchg
jmp
pop
adc
jecxz
cmpsb
cld
cld
mov
cmc
iret
cmc
sub
xorb
shl
cmc
jnp
xchg
repnz
sbb
pop
adc
jae
mov
mov
xchg
mov
pop
mov
mov
lret
das
sahf
loope
les
loopne
mov
fs
testb
mov
lds
test
jp
adc
repnz
adc
inc
pusha
or
nop
dec
ja
cmp
lods
ds
pop
or
insb
lahf
inc
arpl
xchg
sub
movsl
mov
inc
addb
mov
into
test
fs
pop
leave
fwait
mov
repz
xor
jns
orl
fs
mov
xchg
sbb
sbb
lcall
int
jnp
jne
adcb
imul
adc
mov
test
sub
xor
lods
xchg
mov
mov
jnp
shl
jns
pop
addr16
pop
shr
jae
push
adc
repnz
testl
sub
loop
jmp
pop
adc
daa
lds
pop
or
adc
cmp
adc
and
cmp
xchg
xor
sbb
lods
je
leave
ret
push
mov
sub
andl
movl
mov
or
jmp
pop
cmp
inc
pop
arpl
js
push
loope
jne
fimuls
ret
add
cwtd
pop
lds
pop
lock
xchg
jns
jo
stc
or
ss
loopne
jg
sub
lods
push
insl
mov
pop
mov
lods
bnd
jbe
idivb
push
xor
test
rcl
sub
nop
jp
in
stos
cmp
jecxz
add
cltd
dec
rolb
std
fcoml
ljmp
add
aas
mov
push
xchg
pop
pushf
pop
or
shl
mov
fidivl
lret
xchg
push
xor
add
pop
cmc
les
arpl
mov
push
gs
bswap
in
dec
inc
add
cwtl
pushf
sub
fsubs
sbb
jae
daa
jg
ret
aad
push
fwait
or
fnsave
mov
push
loop
sbb
push
aad
adc
pop
in
mov
nop
ja
push
daa
jae
in
into
popl
scas
lds
sahf
shll
inc
or
add
mov
pop
lock
xor
pop
out
add
push
dec
push
push
xchg
jecxz
mov
add
notb
mov
mov
cmp
xor
insb
mov
das
data16
or
insb
sbb
xor
mov
push
sbb
out
cmc
or
xor
jae
addr16
sub
dec
inc
inc
inc
adc
add
jne
mov
and
iret
iret
sub
adc
daa
test
in
sahf
sbbl
rcrl
mov
adc
mov
mov
int
or
pop
pushf
push
xor
cmpsl
dec
jns
ljmp
xchg
jns
mov
mov
hlt
das
mov
jmp
lahf
jp
dec
inc
mov
push
shrb
daa
fs
add
xchg
ret
sub
stos
or
aaa
imul
das
sub
outsb
inc
sbb
nop
out
jl
and
pop
movl
xor
mov
mov
sub
mov
and
lea
sub
mov
mov
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
pushl
call
jmp
xor
push
lea
mov
mov
jmp
aad
shlb
dec
js
js
leave
jg
lret
jle
add
ds
push
push
jl
add
stc
pop
or
lods
sub
adc
mov
aad
out
mov
cmp
icebp
ja
ss
js
xchg
pop
mov
leave
pop
push
out
aas
imul
insb
jo
mov
mull
push
arpl
mov
in
inc
mov
pop
inc
movsb
and
xchg
stos
shrl
aas
in
test
stos
jg
sbb
js
mov
add
dec
ljmp
cld
rorl
push
pop
call
sub
das
insb
dec
scas
movsl
dec
mov
sbb
icebp
aad
xor
mov
paddusb
orl
push
les
pusha
shr
in
fsubrl
jno
das
jmp
stos
mov
fstps
gs
popf
lods
leave
int
outsl
fwait
xchg
jae
sbb
pop
nop
mov
insb
xchg
cmp
mov
xor
fnstenv
popw
movsb
add
mov
pop
mov
mov
rcll
popf
pop
andl
or
imul
ret
sbb
aaa
cltd
inc
cltd
bound
fcmovnbe
inc
adc
mov
lfs
jge
dec
mov
mov
ret
or
sbb
outsl
sbb
dec
gs
dec
xchg
decl
push
out
or
jbe
ret
jae
add
lahf
and
je
daa
sbb
out
add
adc
cmp
fildll
xlat
push
pop
fiadds
push
cltd
data16
in
cmp
ljmp
dec
cli
or
sub
or
cli
mov
push
push
dec
lcall
mov
mov
push
pop
inc
adc
loop
shlb
or
pushf
dec
mov
shlb
add
sti
icebp
inc
dec
mov
sbb
fildll
lock
stos
jns
mov
fdivrs
mov
inc
aaa
adc
push
mov
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
neg
jmp
loopne
test
cmp
pop
out
jns
stos
and
jle
add
out
push
dec
pop
in
je
sbb
sub
jp
push
loopne
es
shll
jnp
jo
sub
xor
sbb
mov
rolb
call
js
repnz
shll
mov
add
movsl
mov
push
imul
jns
sub
xor
push
jbe
into
add
das
sti
sub
or
outsb
fmuls
loopne
mov
add
in
andl
sub
and
push
fisttpl
xchg
cmp
and
mov
mov
dec
xor
push
rcl
mov
iret
shlb
aaa
jle
mov
inc
imul
inc
dec
push
push
jg
lock
fcomps
jnp
pop
stos
xchg
or
movsl
jae
sub
or
jmp
or
mov
mov
sbb
lds
and
push
pop
hlt
insl
sub
or
xchg
ret
sahf
or
add
daa
mov
sbb
fstps
mov
xor
dec
adc
cmp
push
std
sbb
adc
popf
cwtl
in
adc
or
lcall
adc
jge
mov
and
xchg
loopne
pop
mov
adcb
push
scas
lret
pop
cmp
cld
xor
xor
lock
mov
hlt
sbb
stos
and
leave
xor
call
out
pop
pop
loope
fisubrs
inc
divl
sbb
inc
push
fs
cwtl
or
shll
dec
out
js
jp
cwtl
cltd
and
test
dec
leave
jb
imul
cltd
pop
repz
es
out
cmp
lcall
aad
mov
fstpl
pop
jg
roll
outsb
sbb
add
movl
xor
addl
xor
andl
add
negl
add
incl
div
mov
movl
movl
movl
cmp
je
movl
movl
andl
lea
xor
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
and
out
je
inc
adc
sbb
outsb
jo
sub
jle
add
test
xlat
xor
sbb
dec
lret
clc
or
add
nop
jge
mov
jle
mov
cmp
push
pop
cs
out
arpl
mov
mov
or
fcmove
andl
ffreep
aam
jbe
or
filds
lahf
and
xchg
std
push
mov
iret
int3
insb
addr16
dec
rcl
aam
jnp
adc
pop
je
sarl
repz
inc
data16
movsl
jecxz
enter
movsl
mov
imul
out
inc
pop
ja
push
lock
notb
cmc
popf
cmp
xchg
das
sti
shll
cmpsl
xor
mov
popa
ds
and
dec
sbb
mov
cmpsb
scas
sbb
inc
jb
rcrl
dec
adc
pusha
sti
push
scas
test
xor
xor
mov
sub
xor
dec
mov
mov
xor
pop
inc
or
fmull
push
and
mov
dec
in
ficompl
loopne
fsubrs
sbb
mov
or
cmp
aam
xchg
or
imul
sub
xchg
sbb
popf
lods
or
insl
sbb
mov
rcrb
mov
imul
sahf
sub
arpl
dec
cs
out
inc
fidivl
pop
dec
or
pop
lret
outsl
inc
add
loopne
outsb
push
xchg
aad
lea
xchg
jno
sbb
ja
pushl
sbb
mov
ss
xor
xchg
data16
fwait
cmp
dec
jle
bnd
jge
dec
aam
insl
jo
popa
rol
add
pop
mov
push
rclb
int3
sub
mov
leave
add
add
xchg
fsubrl
cmc
or
jne
sti
pop
adc
add
lret
in
push
lret
ds
stc
dec
sub
into
cmp
mov
mov
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
mov
mov
movzbl
or
mov
orl
mov
mov
orl
push
xor
xor
sub
push
mov
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
sub
add
mov
addl
lea
not
mov
mov
mov
and
mov
andl
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
lea
jmp
ss
lods
jmp
push
mov
fistpll
lret
and
jle
outsb
fxch
sbb
mov
pop
jb
add
inc
dec
jae
xchg
adc
xchg
scas
mov
int
xchg
adc
mov
sbb
push
ds
or
loop
or
add
cmp
add
sbb
and
adc
xor
outsl
mov
cmpsl
dec
and
adc
sub
cmpsb
aam
push
leave
lcall
jae
out
mov
or
stc
jg
rcl
push
fcomps
sti
jge
cmpsl
lods
lock
sti
data16
in
cmpsl
fstpl
push
fbstp
mov
push
mov
add
push
fwait
push
shll
ret
pop
or
cmp
movsl
jne
push
mov
cli
cli
mov
rcrl
inc
in
fisttps
inc
jb
sbb
ss
jge
imul
pop
in
cmpsb
pop
jne
bound
popa
rclb
notb
and
jmp
fnstenv
sub
inc
sti
xchg
mov
push
shll
jae
xor
mov
imul
pop
jo
std
jmp
cwtl
pop
fisubs
out
fisubrl
mov
dec
je
popa
clc
dec
mov
dec
repz
jo
lock
stc
sbb
ficompl
pop
mov
enter
je
outsb
in
into
lret
out
and
mov
int3
out
sbb
push
loopne
adc
shll
popa
push
cld
xchg
adc
insb
sbb
xlat
pusha
insb
jecxz
ffreep
adc
aad
or
mov
and
call
jl
push
or
xor
sub
dec
rcrb
pop
pop
fidivs
mov
mov
mov
das
data16
mov
fdiv
mov
dec
dec
mov
mov
enter
fwait
es
cmp
inc
pop
lods
int3
arpl
jmp
dec
push
push
leave
cmpb
xchg
xor
lods
fwait
gs
inc
loopne
and
add
add
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
inc
mov
orl
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
xchg
inc
in
mov
das
inc
add
pmulhuw
jle
and
jle
js
scas
sbb
lods
xchg
fldenv
fldl
sub
sbb
lods
int3
mov
mov
mov
add
and
rorb
jle
jbe
mov
mov
push
cmp
mov
ja
xchg
jns
ljmp
stos
and
lock
jp
or
sub
shrl
es
jmp
jl
scas
dec
sub
popf
es
mov
shlb
dec
cltd
cmp
sub
pop
xchg
sbb
xchg
mov
push
lahf
ljmp
cltd
jle
je
rolb
sub
mov
inc
stc
jg
inc
xchg
jecxz
in
xor
jmp
xchg
and
loope
push
pop
loop
in
ret
out
or
xchg
or
sub
jmp
jge
inc
mov
sub
mov
jge
into
jbe
je
dec
les
push
hlt
stc
mov
cmc
pop
cmp
mov
icebp
cmpsl
repnz
in
add
or
sbb
decl
sub
xorl
ret
out
mov
roll
mov
sub
outsb
sbb
pop
jns
or
jne
mov
mov
dec
inc
mov
je
cli
add
push
repz
inc
pop
fcompl
mov
add
xacquire
cmpsl
js
mov
aas
push
xchg
jo
mov
in
jb
mov
imul
fistl
mov
push
loop
fldt
fiaddl
cltd
add
loopne
popl
mov
lret
adc
push
mov
mov
pop
and
test
rol
adc
cs
mov
in
xor
push
repz
pop
jns
lds
jge
cltd
ja
addr16
sub
adc
inc
mov
lods
cmpsl
jmp
int3
cmpsb
test
cli
or
cmp
rcl
hlt
cmc
test
andb
jmp
fs
roll
add
cmp
push
push
scas
ss
mov
adcl
mov
sbbl
jmp
pop
push
jg
xor
add
out
mov
jle
and
jle
xchg
out
sahf
loopne
loope
imul
insl
sbb
push
rorl
aam
push
data16
push
ljmp
testb
mov
les
push
aad
inc
cmp
out
adc
pop
and
sbb
xlat
sbb
push
fldcw
push
fldt
push
cmc
pop
loope
jp
inc
mov
dec
jno
out
lahf
hlt
dec
cmp
movsl
lcall
fwait
pop
jp
and
loop
loop
fnstcw
mov
jb
jle
xor
pop
or
cmc
mov
loop
inc
hlt
int3
push
fdivl
stos
stos
lea
jne
arpl
rcll
and
add
xchg
push
fldz
mov
fdivl
popa
add
pushf
scas
jmp
icebp
and
scas
ja
test
mov
cs
sub
mov
sbb
les
mov
cld
test
pop
fs
cmp
sub
push
imul
push
push
loop
pushf
int3
repz
dec
movsl
testb
lock
dec
arpl
mov
jo
jb
outsb
jge
pusha
and
loop
and
loop
mov
lods
mov
in
inc
js
sub
pop
pause
test
mov
add
pop
mov
push
repnz
decb
mov
repz
xor
lret
jecxz
out
add
out
xchg
mov
ret
cmpsb
sahf
sahf
lret
adc
jnp
push
xchg
fstl
shll
mov
cmpsl
xor
push
fdivs
dec
dec
mov
xor
xor
dec
xor
arpl
xor
inc
loopne
lock
pop
push
movb
test
dec
out
fisubl
aas
fidivs
int3
xchg
std
push
jl
add
pop
aas
jmp
hlt
mov
fwait
icebp
add
mov
adc
lcall
push
sub
inc
ret
popf
xchg
cs
mov
test
scas
mov
cmpsb
push
xor
push
stc
jnp,pn
mov
xorl
mov
adcl
movzwl
xorl
add
notl
mov
mov
or
mov
xor
add
cmp
jne
dec
mov
mov
xor
add
cmp
jmp
stos
adc
inc
jno
stos
icebp
jl
and
mov
and
jle
loopne
lock
xor
popf
xchg
and
aam
punpcklbw
push
int
cmp
add
sub
lret
inc
je
or
test
mov
jl
in
pop
pop
inc
push
jbe
sbb
push
or
pause
movsl
mov
data16
jae
xor
push
or
mov
cld
and
in
mov
aad
shl
ret
mov
jle
call
xchg
out
xchg
jb
or
sub
mov
xorb
inc
rcrb
nop
jbe
add
mov
arpl
out
stc
int
std
aas
mov
in
or
push
lock
idivb
hlt
pop
outsb
mov
es
dec
mov
xchg
jl
pop
dec
jmp
dec
insl
ror
iret
cmp
adc
pusha
insb
jnp
mov
xchg
cmpsb
imul
mov
stos
aam
sarb
add
outsb
xor
fidivrl
dec
call
fiaddl
cmp
mov
fs
xchg
mov
sub
jne
inc
sub
out
jae
sbb
shll
arpl
dec
inc
ficomps
in
dec
clc
insl
jae
fsubl
add
cs
test
and
nop
pop
jge
mov
and
sub
mov
push
fld1
push
sbb
jmp
das
sbb
push
sbb
decb
pusha
pop
jae
std
push
dec
es
repnz
ljmp
mov
inc
into
lock
jmp
out
dec
mov
and
mov
mov
mov
les
addr16
add
push
shl
add
pop
aam
fisubl
cld
adc
dec
stos
push
sub
add
into
cmc
in
push
sbb
and
push
outsl
mov
fmull
jae
test
jns
cmp
pop
rclb
adc
dec
je
inc
dec
sub
fmul
js
cmp
xlat
push
add
fistpll
call
sbb
inc
or
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
jmp
xchg
or
jmp
in
out
data16
and
jle
xor
or
loope
ss
xlat
test
fmuls
rorb
sub
ja
mov
adc
sub
subb
imul
pop
outsb
pop
mov
ficoml
sub
push
jg
jne
mov
mov
sahf
or
test
xchg
jmp
mov
in
and
or
jb
mov
fdivrl
mov
popa
cmp
add
imul
jo
fcmovu
cltd
jbe
add
in
sub
jns
push
movsl
paddsb
outsl
adc
test
out
out
pop
mov
dec
scas
stos
cmp
pop
les
mov
adc
fnstsw
jnp
data16
mov
nop
cmpsb
icebp
sub
lahf
mov
mov
gs
ljmp
jne
pushf
shlb
pop
mov
movb
or
es
mov
mov
fldl
sahf
mov
push
mov
daa
rorb
adc
ljmp
mov
in
out
add
movsl
insb
and
mov
and
ljmp
mov
mov
shlb
aas
xlat
loop
push
adc
sub
int
push
jno
or
jle
fistpll
push
pop
icebp
scas
cmpsl
xchg
jae
mov
pop
jmp
and
scas
push
ljmp
or
inc
mov
ret
mov
sbb
lds
roll
arpl
movsl
pop
and
mov
scas
out
mov
dec
aad
add
jo
xor
das
fnsave
stc
iret
js
int
rclb
lea
cmp
lret
cmp
push
int3
pop
outsb
adc
into
push
xor
movsb
pusha
mov
sbb
jle
packuswb
ja
lea
adc
xlat
test
mov
dec
jmp
sti
stos
add
sub
xchg
inc
pop
mov
std
aam
negl
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
sbb
aam
je
and
adc
or
jle
and
jle
jo
sbb
out
adc
pop
int
dec
mov
sbb
lock
lock
mov
mov
js
je
jg
and
mov
sahf
dec
fsts
int
mov
adc
mov
pusha
popa
loopne
mov
adc
popa
jmp
je
adc
jae
dec
iret
fsubrl
mov
pop
jo
or
mov
pop
xchg
dec
aam
daa
shrb
jb
push
iret
cmp
in
test
xor
jo
ljmp
scas
fcmovb
insl
es
add
roll
testl
rol
adc
sbb
aas
jmp
mov
sbb
jp
jae
lock
cld
aaa
pop
iret
inc
testl
mov
mov
sub
js
call
cmp
push
fidivl
and
aas
ret
sbb
cmp
pusha
jg
loope
mov
xchg
add
pop
cld
add
nop
push
testl
xchg
lcall
lock
arpl
sub
jns
lahf
jnp
js
dec
popf
pushf
loope
mov
lock
imul
mov
repnz
dec
push
xor
pop
inc
leave
mov
sbb
in
jne
xor
mov
mov
in
cltd
ja
xchg
dec
push
rolb
and
rcrb
test
mov
mov
dec
inc
mov
xor
movsb
inc
ja
inc
mov
push
loope,pt
lock
negb
scas
in
push
test
mov
mov
lcall
xchg
pop
dec
cmp
fistl
adc
dec
gs
dec
jge
dec
outsb
pushl
lods
and
orb
pop
pop
arpl
outsb
mov
inc
lock
jl
adc
or
mov
pop
push
cmp
xchg
inc
mov
push
cmc
inc
test
inc
cmp
and
cmpsl
pop
sub
sub
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
jmp
sbb
outsl
jno
out
jne
mov
fcompl
xor
jle
and
jle
fdivs
lahf
test
pop
into
xor
popf
scas
inc
dec
adcb
push
mov
lock
mov
test
jo
bound
js
sbbb
jecxz
jp
jb
pop
repnz
cmpsl
int
add
inc
cmp
jecxz
scas
and
lock
sti
or
sbb
mov
daa
add
lret
pop
add
push
mov
pop
loopne
int3
lcall
xor
das
loope
push
add
lock
popf
mov
sbb
test
pop
pop
push
adc
jo
pop
push
xchg
push
mov
jge
cmpsb
imul
mov
insb
loopne
lcall
clc
jle
mov
lret
dec
add
xchg
sarb
xor
or
mov
iret
lcall
test
mov
add
inc
fwait
mov
and
int3
into
js
pop
cs
adc
aad
mov
call
imul
insb
sbb
or
fidivl
jae
xchg
jno
test
in
ficoml
xchg
out
mov
outsl
adc
mov
mov
add
jns
mov
in
sti
lods
and
sarb
loop
xorl
sbb
mov
lret
mov
clc
js
in
or
mov
mov
push
or
jbe
gs
push
call
push
popf
cs
jno
stos
insb
cld
jecxz
cs
jb,pt
adc
clc
call
insl
in
fwait
aaa
fildl
push
pop
jno
xchg
scas
in
es
repnz
insb
mov
xchg
dec
jmp
fcmovb
mov
rcrl
hlt
dec
pop
cmp
fstpt
rclb
and
ret
mov
ljmp
xlat
aam
lods
inc
xchg
out
inc
roll
xchg
mov
pop
jnp
imul
fidivs
cmp
mov
pop
xor
roll
xchg
fldl
jb
sub
cmp
imull
or
inc
or
jne
jmp
lods
mov
outsb
xorl
pop
repz
fisttpll
and
jle
and
and
ss
pop
loopne
xchg
jecxz
jo
cwtl
xor
in
decb
xchg
js
push
enter
repnz
loope
inc
cmp
dec
movb
jo
je
cli
adc
or
dec
xchg
mov
inc
pop
xor
movsb
pop
rol
orl
cs
mov
ds
sbb
xor
xor
jb
in
mov
jb
popa
xchg
lea
add
es
or
pop
fwait
mov
and
xchg
or
inc
dec
fisubl
movsl
jno
pop
pop
push
mov
or
fld
fiaddl
inc
icebp
mov
push
mov
out
imul
pushf
mov
leave
mov
sub
jae
inc
push
push
stc
sti
out
lcall
gs
bound
stos
pop
into
cmpl
testl
lods
mov
mov
jmp
jle
mov
iret
lods
das
out
push
stc
rorb
push
xchg
sbb
push
out
pop
lods
clc
jg
push
add
lea
adc
push
dec
ja
adc
jbe
in
aam
jp
cmc
jnp
or
les
xchg
inc
sbb
dec
adc
imul
cmp
cmpsb
xchg
sahf
in
jmp
pop
jbe,pt
aas
pop
sub
push
adc
and
imul
push
fisttpl
leave
xchg
cmp
iret
xchg
bound
mov
in
iret
jb
lahf
out
pusha
fidivs
push
mov
sub
pop
pop
rcrl
mov
push
pushl
jp
pusha
outsl
mov
push
or
inc
fisubl
add
xorb
dec
pop
stos
jecxz
xchg
movl
pop
sbb
clc
add
mov
rorl
push
add
fldl
jle
inc
call
jmp
loope
ljmp
clc
ljmp
fstpt
and
jle
cmc
rcr
lods
xchg
out
es
test
fmull
lret
shrb
dec
data16
loope
inc
mov
mov
clc
mov
adc
adc
shll
mov
repnz
div
cli
mov
out
sub
add
cmp
jb
jmp
repz
mov
xchg
xchg
or
xorb
in
jle
push
jmp
jno
inc
ja
addr16
sbb
sbb
test
arpl
and
hlt
lods
push
pop
sub
cmp
xor
mov
mov
mov
scas
or
or
cld
mov
and
dec
shll
mov
cmp
shlb
in
lock
mov
sub
xor
xchg
pop
jne
negl
push
cmp
push
iret
sub
test
and
scas
imul
xchg
mov
repnz
xor
mov
repnz
jecxz
dec
in
jecxz
pop
push
mov
mov
fdivl
jo
adc
cli
lret
sbb
popa
jne
lods
pushf
inc
mov
ja
xor
mov
mov
push
arpl
add
xor
dec
xor
lock
rcrb
imul
frstor
or
mov
mov
fwait
push
outsl
cmp
fs
ficompl
dec
and
test
arpl
and
sub
xchg
mov
push
xchg
fmuls
inc
inc
shrd
jl
fs
nop
in
movsl
add
xchg
pop
popa
ss
mov
in
popa
vandps
shll
jecxz
xor
pop
aad
lret
pop
xchg
cwtl
rcrb
repnz
call
in
adcb
inc
addr16
cmp
xchg
sahf
rolb
in
sti
push
dec
dec
and
add
mov
clc
pop
call
xor
ret
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
add
movl
xor
xor
xor
mov
push
sub
mov
addl
xor
mov
add
orl
mov
mov
sub
mov
jmp
shrl
stos
fadd
cwtl
pushf
or
fnstcw
cmp
outsl
inc
push
inc
sbb
push
and
xor
jo
imul
aaa
ljmp
xlat
popf
jae
mov
in
push
adc
xor
mov
mov
lods
or
stos
bnd
mov
cmpb
cmp
clc
or
cmp
and
fiaddl
inc
shrb
push
addb
psllq
cmp
mov
shlb
bound
push
mov
pop
jecxz
mov
fucomp
aad
sbb
and
sbb
scas
inc
fdivrp
adc
push
jmp
lahf
jae
movsl
cltd
adc
ss
int3
dec
inc
mov
add
add
push
adc
cltd
lds
repnz
adc
dec
jg
ljmp
jle
mov
notl
mov
pop
mov
mov
lahf
dec
add
or
adc
rcrb
push
xor
addl
cmp
loopne
push
mov
mov
adc
sub
dec
into
ds
and
xchg
cmp
pop
and
pushf
iret
xchg
in
mov
mov
mov
mov
lret
inc
jmp
or
scas
xchg
fcoms
mov
pop
xor
addr16
jmp
and
pop
inc
xor
xlat
cmp
sub
andl
push
xchg
inc
push
stc
xchg
rcrb
jbe
xchg
insl
pushf
es
cmc
scas
push
loopne
mov
add
and
mov
add
int3
rcrb
lcall
jnp
sbb
scas
jl
push
mov
bound
cltd
shll
loop
test
xchg
addr16
mov
outsb
xchg
es
mov
mov
add
pop
xor
add
test
loope
jnp
test
jl
insb
jg
cmp
inc
movsl
xor
gs
jecxz
xchg
in
mov
and
xor
lods
ret
insb
cmp
lahf
xchg
repz
sbb
and
out
into
pop
movsb
pop
cmpsb
mov
push
push
sbbl
jmp
lds
popa
mov
fisttpll
jle
jle
cmp
pop
out
aaa
cltd
scas
adc
clc
lea
pop
add
inc
and
stc
pop
cli
mov
gs
jl
jbe
rcrl
test
sti
adc
or
test
mov
push
fisubs
sub
inc
pop
mov
sbb
lcall
sahf
insb
ja
stc
stos
sbbl
add
sti
jb
out
test
pop
sbb
arpl
int
ficompl
into
push
testb
inc
pop
sub
fists
xlat
push
jecxz
add
int
clc
mov
add
push
sbb
jae
xor
lods
pop
cmp
mov
push
ja
xor
fiadds
ret
cmp
jne
cmpsb
aaa
lods
es
mov
out
mov
jle
xor
enter
shlb
in
insl
test
pop
sub
int
and
rcr
imul
add
out
xchg
adc
andb
pop
out
push
xchg
mov
and
push
pop
cmp
mov
mov
and
cmp
shr
popf
arpl
aad
jno
jae
jne
stos
push
and
xor
je
pop
test
push
fistpll
mov
lret
cld
mov
imul
sub
jmp
mov
mov
push
sti
aam
loopne
pop
mov
fists
push
bound
add
mov
test
pop
mov
cld
cmc
ds
ret
inc
cmp
notl
rorl
pop
inc
sbb
test
jg
xchg
int
je
jbe
test
and
movsl
ja
popa
dec
adc
stos
xchg
xorl
out
mov
mov
mov
adc
ret
inc
and
jbe
aaa
das
aam
push
sub
push
push
jmp
hlt
clc
out
xor
lods
fisttpll
out
pop
dec
xlat
sub
std
rolb
jecxz
addr16
adc
mov
add
inc
pop
sub
setg
pop
fadd
out
sbb
push
adc
adc
loope
in
call
inc
sbb
fsubs
movl
je
mov
mov
sub
mov
mov
or
jmp
push
lcall
cmpsl
or
inc
pop
mov
aas
xor
loop
jle
jl
jle
adc
ljmp
lock
ljmp
scas
push
jle
fnstenv
and
aam
addr16
sbb
or
daa
pop
mov
cmpsb
cmp
xor
pop
sub
pushf
xor
sbb
sbb
js
push
add
nop
add
shl
subb
or
mov
call
xor
inc
cld
or
xchg
pop
std
fisttpl
cwtl
pop
push
in
xchg
gs
add
mov
xchg
push
pop
pop
or
fsubl
sub
lcall
push
xlat
sub
shrb
sarb
hlt
cmp
outsl
dec
enter
fsubl
inc
cmp
adc
add
pop
mov
mov
mov
out
mov
lahf
lahf
leavew
sub
in
lret
sub
loopne
xchg
insl
push
rorl
lcall
inc
es
fdivrs
movsl
cmp
lahf
hlt
leave
push
cmpsl
or
xor
sti
ret
popf
int3
and
mov
xchg
out
mov
jae
xor
inc
xor
push
fnsetpm(287
xor
in
int
fisubrl
fisttpll
movsb
fnsave
and
test
mov
mov
cmc
jno
ficoml
sti
or
das
add
adc
cmp
insl
mov
and
jle
jp
imul
fs
sub
mov
mov
xchg
sub
inc
icebp
adc
nop
jp
mov
push
jge
add
test
into
fwait
add
es
pop
icebp
mov
push
cld
sti
inc
xor
pop
cli
push
sub
push
add
aas
sbb
add
or
add
or
add
movsl
mov
fcomp
push
cmc
pop
les
lods
add
les
gs
ss
and
jae
pop
pop
stc
rcll
add
rcrl
add
clc
dec
shr
and
mov
sarb
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
orl
mov
jmp
mov
data16
gs
jmp
jne
sbb
jle
cmp
in
scas
and
jns
mov
pop
fildl
dec
pop
mov
push
es
jnp
add
mov
fistl
push
dec
mov
push
stc
dec
cmp
stos
and
imul
sub
adc
aaa
jb
mov
sub
cli
push
arpl
sub
inc
outsb
dec
mov
inc
jbe
xchg
xchg
xor
popf
leave
cld
pop
fwait
enter
cmp
adc
loop
aas
popa
and
and
out
out
push
sbb
pop
in
imul
jae
movsb
xchg
repnz
dec
aam
jnp
test
jnp
sbb
jecxz
negl
xor
sub
mov
or
arpl
mov
dec
mull
aad
jb
cwtl
test
and
dec
test
stc
lcall
pop
inc
and
dec
outsl
sub
mov
ficomps
mov
mov
mov
jecxz
jno
hlt
insb
or
ret
test
and
add
jmp
loopne
mov
popf
xchg
mov
fstl
cwtl
je
fnstenv
add
test
jb
movsb
pop
dec
cmc
inc
sbb
lds
out
popa
dec
test
push
int
mov
in
dec
std
inc
mov
int3
jmp
push
pavgw
loope
xchg
mov
jae
dec
adc
out
fistps
mov
push
rolb
stos
jnp
mov
aad
xchg
mov
inc
cwtl
aaa
jp
push
sarl
popa
or
sub
fs
in
adc
sub
sbbl
mov
pop
xchg
jl
mov
shlb
sub
pushf
leave
xchg
shl
out
ljmp
sbb
lods
xchg
add
xor
frstor
adc
add
jle
xlat
cmp
das
jne
fcmovnbe
addl
lea
jmp
cmp
gs
push
aas
hlt
inc
in
jno
lcall
pop
je
pop
add
inc
sahf
add
push
pop
push
ja
stc
or
add
jecxz
sub
repz
add
jg
sahf
or
jecxz
jbe
ficompl
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
push
push
call
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
add
movl
mov
mov
mov
je
mov
xor
sbbl
add
movl
jmp
imul
jno
dec
test
pusha
push
push
pushf
sbb
jle
jl
jle
mov
pop
pusha
in
nop
ja
add
test
dec
pop
lds
cmp
fistpl
ret
lock
mov
sbbl
out
mov
or
cmp
add
adc
lret
cmp
pop
js
incl
inc
movsl
mov
inc
inc
mov
out
inc
cvtpi2ps
sub
insl
sarl
sub
sub
imul
je
mov
ret
xchg
xchg
pop
stos
mov
mov
leave
insl
xchg
pop
ret
daa
jecxz
or
cmc
sbb
xor
mov
push
mov
xchg
push
adc
gs
xor
mov
mov
imulb
les
xchg
sbb
scas
repnz
lock
and
adc
std
mov
test
dec
and
ret
out
aad
xor
dec
aas
out
ja
inc
jle
cld
push
mov
scas
sub
test
fsubrl
xor
inc
fcomip
mov
loopne
repz
mov
movsl
jno
xor
mov
cmc
lcall
xor
and
into
imul
cvtdq2ps
rcrb
add
xchg
xor
mov
add
int
and
jnp
dec
xor
loop
xchg
xchg
mov
dec
xlat
in
loope
adc
pop
es
test
lock
add
aaa
in
mov
pop
movsl
dec
test
icebp
jae
push
mov
add
inc
xor
pop
lods
adc
add
clc
mov
or
mov
push
adc
dec
push
shl
add
out
pop
xor
aaa
inc
add
push
dec
bound
xorb
or
cld
pop
xor
fistpll
add
mov
std
jp
cs
add
jl
push
ret
fs
loop
paddd
xchg
xchg
cmp
cmc
sbb
icebp
test
adc
addr16
imul
mov
and
cwtl
cmpsb
or
cmp
movl
jne
adcl
pushl
addl
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
addl
add
movl
cmp
movl
je
addl
pushl
xorl
pushl
decl
call
movzwl
sub
jmp
or
and
loopne
shl
sti
and
sub
push
in
jle
cmp
cmp
push
std
les
cmp
inc
xchg
bound
push
xor
xchg
lcall
mov
push
mov
xor
mov
repz
jle
lcall
lock
cmp
ret
push
adc
movl
fsts
pop
ret
mov
xchg
pop
or
rcl
pop
dec
in
or
push
lods
in
lock
mov
out
mov
and
and
mov
dec
xchg
je
ret
out
adc
int3
add
adc
pusha
test
xchg
in
and
imul
pop
movsb
movsl
mov
lret
adc
xchg
ficomps
xor
mov
enter
imul
inc
and
js
sub
test
movsl
aam
or
out
out
popf
sbb
inc
lock
fs
push
jmp
pop
leave
stos
stc
push
fbstp
fnstcw
call
mov
bound
loop
lods
adc
data16
xchg
insl
or
mov
push
je
mov
xchg
orb
in
mov
mov
stos
lahf
pop
int
out
mov
daa
sub
jae
hlt
mov
mov
cmc
inc
xchg
mov
loopne
mov
hlt
push
scas
loopne
repz
rcr
and
dec
jbe
mov
movsb
stc
mov
ret
insl
jno
inc
test
test
dec
arpl
push
push
lods
add
mov
adc
test
sub
adc
ja
pusha
lds
jb
std
jp
pop
inc
pop
divl
and
mov
neg
xchg
pop
lcall
cld
jbe
add
cmp
test
jmp
nop
fisubrs
cmp
out
adcb
sahf
jle
fldcw
int3
insb
lds
xor
ret
or
fcomip
mov
ja
pop
addr16
lahf
sub
in
jo
push
cmp
mov
mov
add
mov
xchg
lea
lods
out
in
lcall
xor
mov
xor
adcl
add
movl
jmp
dec
ret
xchg
push
nop
push
dec
ret
mov
outsl
mov
jle
cmp
xlat
ret
or
jecxz
fstp
aad
jle
ja
out
jb
xchg
sbb
data16
dec
push
test
sbb
adc
or
adc
fcompl
pop
enter
mov
call
repnz
int
mov
testl
mov
test
xchg
push
call
mov
mov
in
mov
push
xchg
or
mov
push
icebp
lock
push
bswap
push
inc
jae
ds
ffreep
into
mov
mov
mov
fistl
inc
adc
adc
mov
cmp
jg
jae
adc
mov
inc
adc
shl
jp
add
jmp
mulb
adc
push
sbb
test
sti
mov
mov
ss
cmp
jecxz
xchg
mov
jae
movsl
int3
dec
movsl
ud0
jmp
mov
add
fidivs
inc
mov
loop
jae
pop
cmp
loopw
cmc
bound
sahf
push
push
add
mov
mov
pop
mov
sti
repnz
xor
push
cwtl
movsb
mov
mov
push
pop
repnz
call
dec
sbb
sbb
roll
or
or
jge
outsl
jmp
in
out
movsb
lret
cltd
push
loope
lahf
pusha
mov
adc
fwait
lret
jno
cmpsl
sbb
stos
mov
cli
or
dec
xor
push
pop
dec
das
sbb
pop
push
push
fstpl
aam
fs
adc
xchg
idivl
cmc
sti
icebp
std
test
fwait
rcll
xchg
fstps
filds
adc
push
mov
inc
stos
sbb
mov
mov
cmpsl
das
stos
mov
push
in
clc
ret
dec
mov
or
add
push
xor
cmp
jo
in
aad
rolb
sti
dec
sbb
mov
xor
pop
and
sti
push
enter
pop
pushf
das
in
pushl
mov
cmpsl
lea
adc
sbb
mov
test
add
sbbl
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
adcl
jmp
stos
adc
imul
adc
lcall
jle
adc
push
addr16
out
aaa
enter
cmpsl
push
and
stc
fcmovnu
adc
inc
lock
dec
dec
jb
mov
je
dec
lods
sub
cmpsl
and
cmp
int3
dec
sbb
lock
mov
cmp
or
mov
mov
and
mov
jecxz
cmp
mov
popf
inc
adc
cwtl
xor
shr
push
cli
out
ss
xchg
sub
sbb
and
lcall
lods
dec
into
pop
fimull
dec
mov
push
rorl
xor
or
xchg
rclb
fldl2e
and
ret
lods
push
cli
test
pushf
pop
lret
xchg
in
push
repnz
roll
rclb
lret
in
push
out
sub
push
xor
push
stc
ds
pop
cmp
movsl
aam
lret
outsb
jbe
push
jae
inc
add
in
push
enter
test
shlb
jns
lds
sbb
scas
jno
xlat
sub
or
add
push
arpl
sbb
pop
push
jmp
andl
lcall
pop
pop
jle
or
lea
jg
pusha
inc
dec
sbb
das
mov
mov
xor
pop
lea
mov
test
xor
add
mov
dec
aas
sbb
or
xchg
xchg
lcall
and
push
std
lret
jle
fistpll
imul
xor
test
std
dec
mov
arpl
inc
xor
pop
mov
aas
sub
aaa
addr16
gs
pop
adc
roll
mov
dec
mov
pop
mov
in
fldenv
xchg
inc
lret
imull
pop
dec
cmp
jnp
pop
mov
xchg
adc
xor
cwtl
push
leave
ds
mov
mov
add
mov
adc
inc
outsb
and
xchg
lods
mov
inc
sbb
add
in
mov
notl
add
movzbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
jmp
push
fsubrs
push
fs
push
sub
jle
jl
jle
dec
push
adcb
fwait
nop
xchg
repnz
aaa
inc
inc
mov
sbb
push
ror
fidivs
sti
sarb
adc
sbb
jecxz
clc
imul
insb
adc
and
sahf
xor
cmp
aas
mov
mov
arpl
xor
xor
jl
push
fmuls
jecxz
push
inc
push
xchg
pop
adc
test
push
jmp
insl
ret
shlb
sahf
cmp
js
iret
out
int3
cmp
pop
adc
clc
mov
rcrl
mov
in
sub
rep
or
andb
and
es
sbb
and
mov
push
pop
pusha
inc
inc
jne
clc
xchg
je
arpl
cmpb
cmp
sub
mov
inc
gs
sub
jp
rcr
push
cmp
xchg
sub
inc
mov
xor
mov
fcmovnbe
xchg
stos
mov
out
jg
std
les
or
in
adc
pushf
mov
jp
loope
adc
dec
sar
aad
addb
cmp
fcompl
inc
mov
loopne
adcb
and
or
mov
insl
or
and
ljmp
arpl
xchg
stos
mov
pop
arpl
out
repz
xor
gs
jecxz
and
xchg
jle
es
nop
mov
jae
cli
add
ja
sub
mov
cs
mov
xchg
aas
lds
mov
jbe
cld
xor
cmpsb
mov
hlt
jnp
popw
mov
nop
ss
pop
jmp
ljmp
es
in
sub
or
pop
ss
fldl
rcrl
fistl
jp
jns
ja
push
ljmp
in
loope
cli
add
mov
mov
aas
inc
and
sbb
and
sarb
fs
lock
pop
or
das
xor
loop
pop
mov
clc
xchg
cwtl
ljmp
rorb
or
dec
and
pop
add
add
push
clc
jno
jno
pop
repz
push
call
bnd
cmp
arpl
insb
add
xchg
int
jne
adc
sbb
sti
mov
rolb
jle
mov
insl
loope
imul
lret
imul
adc
push
push
or
leave
clc
and
xor
stc
xchg
jl
popl
pop
ljmp
sbb
cmp
movsb
sub
xor
pop
mov
sbb
jo
push
add
sub
lods
mov
sahf
loop
lea
cltd
popf
les
cltd
and
mov
test
addr16
inc
loope
call
mov
adc
push
loopne
sti
jmp
dec
cmpsl
cmc
push
cmp
jnp
push
aad
fstl
test
push
sub
adc
inc
in
add
popl
xchg
inc
lds
or
test
mov
jmp
fisttpll
dec
out
nop
lret
shll
into
loopne
loope
ljmp
fists
jbe
fcomip
sar
lahf
nop
mov
adc
push
pop
mov
iret
jge
xchg
lock
clc
cmp
dec
lods
pop
mov
test
in
movsb
test
jno
push
push
andnps
pusha
les
mov
in
js
lods
test
insl
sub
pop
ds
arpl
inc
stos
mov
test
jmp
jle
mov
push
mov
xchg
mov
xor
ds
cmp
pop
and
shrl
pop
dec
fs
mov
stos
jns
adc
scas
stc
fs
push
iret
mov
dec
sti
pop
in
xor
cmp
pop
iret
inc
mov
pop
clc
stos
sbb
add
int3
dec
lret
out
sbb
pop
inc
and
pop
jge
ss
push
ret
ret
xchg
subb
stc
mov
push
xchg
stos
sub
inc
cltd
fdivrl
add
jle
cs
jns
cmpsb
lods
negb
imul
mov
loopne
xor
xor
mov
rcrl
in
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
pop
pop
sub
imul
fidivs
call
jl
jle
push
jae
cwtl
dec
test
sti
rcl
sub
pop
filds
mov
sbb
int
jle
and
sub
jecxz
imul
push
mov
lret
jg
test
push
xor
ja
in
xchg
repnz
pop
shll
vsqrtss
rol
xlat
fidivrs
stos
push
cmp
mov
mov
and
mov
and
icebp
xchg
movl
ljmp
or
add
or
pop
test
popa
jo,pn
lds
pop
dec
incl
or
push
addr16
push
push
inc
jle
stc
int3
das
jnp
sti
sub
xor
mov
icebp
int
cmp
inc
jecxz
enter
cmpsl
orps
add
ficompl
sub
jns
idivl
lea
leave
dec
loop
and
test
and
stos
xchg
cmp
call
mov
mov
shrl
insl
aaa
adc
push
jecxz
shll
ret
lea
lock
in
cmp
int
xchg
xchg
mov
and
dec
daa
add
mov
hlt
icebp
cmc
mov
lods
ja
sbb
sbb
scas
inc
imul
xchg
pop
pop
xor
pop
add
and
dec
mov
mov
mov
dec
test
sub
pop
adc
out
mov
adc
add
xchg
ljmp
jg
and
std
ficomps
pop
xor
xor
out
sbb
dec
mov
icebp
adc
and
hlt
fimuls
mov
lcall
mov
cmp
dec
dec
pop
cs
subb
sar
mov
lret
pop
pop
test
cmp
clc
hlt
sbb
shlb
push
sbb
adc
xchg
xor
or
fildll
or
cmp
fistl
pop
mov
loope
xor
mov
fildll
jne
call
mov
mov
xor
add
cmp
jne
jmp
mov
jo
das
pushf
dec
je
scas
mov
adc
jl
jle
fistpll
adc
out
sub
ret
mov
popa
jecxz
lret
xchg
imul
xchg
inc
mov
xor
movsl
out
cmp
std
loope
push
int3
push
repz
fiadds
aas
push
call
dec
popa
pop
testb
movzwl
das
lea
inc
rolb
jecxz
inc
ret
mov
sbb
sarl
sub
orl
mov
sbbl
test
in
outsb
jmp
fdivrl
aas
call
inc
xor
mov
mov
mov
sbbl
inc
or
mov
dec
mov
adc
aad
cmp
adc
fs
aam
ficoml
data16
and
ss
cs
pop
psubsb
sti
xlat
xchg
sbb
dec
mov
test
xchg
xor
aad
das
mov
xchg
adc
xchg
ja
pop
mov
mov
je
mov
cmpsb
rolb
stos
fisttpl
adc
mov
shrb
cmc
fidivrl
or
fisttpll
pushf
or
push
in
mov
sbb
jmp
jb
mov
cltd
mov
adcb
imul
add
or
cmp
cmc
adc
mov
mov
test
xor
out
imul
sbb
out
rcrl
push
lock
xchg
push
xor
dec
mov
subl
es
fimull
stc
and
into
ret
add
arpl
lea
mov
pxor
cmc
add
or
test
mov
mov
jbe
mov
dec
aaa
lea
sbb
xchg
ret
mov
cmp
icebp
cli
mov
test
imulb
lcall
stc
out
dec
and
out
enter
dec
test
mov
xor
nop
push
dec
push
push
int3
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
test
popa
lahf
jno
inc
xor
inc
pushf
jl
jle
cmp
in
and
sbb
rcll
icebp
and
sub
sbb
jnp
popa
stos
push
lods
cmp
xor
in
mov
imul
push
mov
inc
scas
incl
xor
arpl
and
aam
add
fiadds
lret
push
dec
and
or
jne
aaa
sub
notl
jmp
jns
outsl
mov
ds
faddl
xchg
into
imul
shlb
jl
inc
or
and
pop
adc
gs
repz
jbe
and
orl
sti
sub
jne
clc
inc
cmc
push
cli
pushf
ss
inc
pop
imul
shlb
and
mov
and
or
mov
fdivl
or
daa
nop
gs
pop
lahf
mov
xchg
aaa
sbb
pop
inc
xchg
mov
cmp
arpl
sbb
jb
add
pop
fcoms
ss
jl
inc
dec
or
rsm
push
push
cs
cld
stos
fsts
cmp
mov
shrb
adc
mov
stc
ds
and
xor
mov
fadd
jp
aaa
stc
mov
out
sbb
sbb
sub
inc
push
and
jecxz
jae
ffreep
cmp
bound
xchg
fmuls
dec
outsb
arpl
jmp
into
fxch
mov
sub
lds
mov
into
xchg
xor
jmp
imul
mov
push
sbb
fistps
xchg
pop
mov
xchg
dec
dec
push
gs
addl
aaa
jg
fldcw
icebp
out
mov
popa
pop
enter
xchg
mov
in
add
stos
sub
xor
out
addr16
push
jb
imul
mov
sti
add
xchg
mov
aaa
xchg
jno
nop
icebp
xchg
mov
mov
out
cmp
loope
in
adc
cmp
fidivrs
lods
test
jno
cmpsb
scas
ss
int3
cmc
cld
stos
push
addr16
fstpl
ljmp
icebp
push
cmp
sub
js
dec
in
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
into
mov
shlb
stos
mov
jl
daa
pop
sti
jle
cmp
sub
int3
and
mulb
mov
repz
or
rolb
orb
gs
mov
mov
mulb
pop
sbb
repz
pop
sahf
clc
add
ret
mov
fdiv
xchg
pop
aad
out
cmp
or
iret
mov
inc
int3
mov
lret
push
bswap
rorl
mov
pop
push
fsts
sub
pop
xchg
mov
mov
lret
jge
arpl
mov
sub
sbb
xor
inc
lods
xor
repnz
mov
dec
cmp
pop
cmp
lea
cmc
jns
lret
mov
stc
inc
fadds
mov
outsb
pop
out
lods
call
inc
pusha
jne
adc
rolb
les
mov
dec
jb
daa
lcall
hlt
jl
mov
jl
adc
rcrl
jns
pusha
inc
mov
jb
or
jne
test
cltd
shrl
dec
inc
dec
les
cmp
test
jb
cli
sbb
xlat
inc
lcall
hlt
cltd
mov
sbb
sbb
xor
inc
inc
in
loopne
lea
not
jg
das
sbb
pop
sub
jne
pop
test
scas
pushf
push
out
adc
jb
or
mov
mov
add
mov
rol
push
js
mov
and
test
into
outsb
xorl
pop
sub
sbb
out
lods
xchg
shrl
fmuls
inc
jp
jmp
xor
and
xchg
jae
insb
xor
iret
push
in
idivl
leave
popf
xchg
push
mov
mov
cli
push
nop
sbb
jns
fnstcw
movsb
xor
pop
xor
fimuls
pop
sarl
fwait
inc
inc
sub
negl
in
lahf
xchg
rolb
insb
call
fwait
xor
js
movsl
dec
xchg
xor
scas
outsl
test
test
jmp
xor
and
out
ja
stos
lods
sbb
call
sub
dec
mov
push
push
dec
xchg
js
push
push
jns
jbe
mov
lahf
out
inc
push
sbb
js
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
jmp
pop
jbe
push
scas
or
jmp
cmp
and
loope
jmp
add
imulb
jb
inc
ja
xchg
aad
mov
lcall
int
dec
lods
in
daa
xchg
bound
hlt
mov
shrb
sbb
lret
mov
push
ficoml
push
cmp
sub
mov
decl
xor
sub
outsl
pop
dec
mov
and
or
ret
lock
cli
imul
out
cmpsl
lods
cltd
pop
aad
mov
sub
cmp
xchg
push
and
xor
mov
push
sbb
cmpsl
stos
pusha
cmc
xor
inc
ret
cltd
and
lods
flds
dec
rorb
inc
popf
xor
sbb
and
adc
lahf
mov
jl
or
jl
ljmp
mov
rsqrtps
xchg
cmp
mov
or
push
inc
mov
mov
jl
cmp
cmpsl
fisubl
mov
movsl
sub
pushf
rcl
xor
pop
pop
enter
push
rorl
stc
ss
or
sub
lds
xor
dec
mov
cmp
les
lcall
pop
push
loope
push
ds
pop
inc
pop
push
pushl
mov
lea
cmp
fcomp
mov
shll
add
cmc
das
mov
in
stos
jo
fstl
test
daa
dec
fwait
sbb
test
jnp
aam
iret
xor
icebp
xchg
jmp
out
cmc
push
out
sub
pop
and
jno
loopne
jmp
dec
mov
adc
lods
leave
arpl
dec
xor
rcr
xchg
sbb
lea
pushf
fwait
mov
stos
mov
int3
addl
sbb
cli
cmp
test
mov
mov
add
jge
lcall
in
aaa
adc
js
pop
cmc
rep
cmc
xlat
ret
orl
repz
clc
fnstenv
jne
mov
fs
and
push
pop
test
lret
dec
mov
imul
sub
mov
jmp
dec
loop
lds
push
jo
mov
sub
mov
dec
xchg
cmp
fs
mov
outsl
adc
pop
loope
cmc
cmpl
mov
test
cmp
add
stc
adc
movsb
fsubl
mov
pop
mov
cwtl
or
loopne
call
pop
cmc
scas
jmp
and
imul
adc
xchg
cmp
push
aaa
pop
repnz
xchg
aaa
xchg
js
jae
jbe
repz
xor
ljmp
icebp
test
inc
sbb
fnstenv
enter
imul
cmp
ja
and
stos
aam
add
int
fldl
into
bsr
sub
fwait
call
cwtl
movsl
in
mov
shll
cmp
jnp
sti
sub
pop
stos
les
cli
xchg
xchg
dec
mov
movsb
cmp
xor
pop
and
mov
test
gs
pop
pop
lret
adc
dec
xchg
mov
mov
je
cmp
sbb
cmp
fst
and
xchg
xor
jbe
push
xchg
jg
or
dec
pop
dec
push
jl
xchg
outsb
pop
mov
lret
int
add
mov
ss
xor
pop
sbb
xchg
aas
pushf
mov
or
call
xchg
cs
cmp
insb
sub
negb
jns
cmpsb
dec
adc
sbb
shll
prefetch
mov
mov
shrl
nop
loop
xchg
mov
pop
mov
cmp
jl
push
ljmp
ds
cld
daa
xor
dec
push
das
mov
sbb
dec
iret
dec
clc
push
ljmp
inc
xlat
ret
test
jns
out
imul
xor
xor
inc
insw
inc
cmp
sti
das
xor
test
cltd
inc
in
jne
jne
jmp
mov
mov
pop
jle
pop
sub
lret
inc
add
push
mov
int3
dec
sbbl
pop
jb
imul
ret
push
cmpsb
lahf
inc
icebp
lock
xchg
mov
push
push
fldt
jmp
xchg
aaa
pop
pusha
push
loopne
cwtl
ret
xorl
mov
out
jne
orl
push
in
inc
cld
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
dec
scas
push
pop
cmc
arpl
pop
clc
push
shll
cmpb
jl
jle
cmp
sub
add
mov
cli
xchg
addr16
push
adc
pop
add
and
lea
in
jno
sarl
mov
dec
call
repnz
cmc
repnz
lds
pop
xchg
jb
add
add
mov
sahf
movl
xchg
nop
adc
popf
and
into
jge
xchg
mov
ret
int3
daa
dec
and
int
dec
pop
cmc
inc
or
in
out
loop
cmp
xchg
mov
xchg
stos
cli
push
stos
and
hlt
daa
pop
sbb
ret
popa
mov
hlt
lea
and
rclb
test
clc
pop
mov
dec
cmc
stc
jb
add
or
popa
inc
pop
adc
repnz
jae
fsubrs
push
cwtl
nop
mov
js
ret
lds
sub
xor
push
cmp
popf
mov
jne
xchg
xlat
jne
test
push
outsl
add
sub
mov
out
sbb
xchg
cmp
outsl
test
add
pop
test
ds
aaa
push
jb,pn
jae
mov
mov
sbb
xchg
sbbl
adc
lods
iret
lods
cld
pop
adc
push
mov
ss
sub
divl
push
fwait
cmpsl
push
outsl
dec
and
mov
push
lea
fiadds
jl
icebp
je
mov
mov
sub
cli
push
inc
xor
rol
adc
test
movsb
cltd
pop
mov
push
lods
ret
sbb
je
cld
ss
imul
movsl
lea
arpl
mov
in
mov
daa
pop
out
out
xor
movsl
shlb
push
xchg
loop
sub
mov
loope
xchg
xchg
xor
mov
and
mov
sbb
lret
push
push
scas
adc
shrl
cld
pushw
rcrb
icebp
mov
cmp
jne
sub
movlhps
cmpsl
fisubs
mov
das
pop
out
insb
dec
pop
xor
cmp
and
xor
and
dec
xorl
jae
sbb
push
jmp
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
leave
adc
cmp
xor
sahf
dec
fiadds
jle
inc
mov
cld
mov
lock
insl
mov
fs
mov
adc
icebp
lods
add
mov
invd
mov
sub
pop
xchg
repz
adc
jns
cmp
fs
test
cli
paddsw
aad
fs
rorb
and
aas
mov
fstl
jmp
add
dec
xchg
adc
loope
int3
ret
fldl
aaa
sbb
jmp
jmp
jae
es
mov
into
add
xor
popa
stc
inc
cmpsl
push
shlb
xchg
push
enter
fdivs
push
loop
sub
fsubs
cmp
and
inc
leave
fsubrs
xchg
sbb
push
in
mov
leave
test
out
mov
int3
pop
aas
dec
push
ss
popa
mov
nop
and
lods
jmp
adc
cwtl
insl
add
pop
or
cli
stc
fistpll
pop
fmuls
add
das
mov
jecxz
fwait
or
and
jae
out
mov
pop
fistpl
movsl
xchg
stos
sbb
push
fsts
lods
mov
scas
jge
pushf
push
inc
call
fiaddl
inc
sbb
xchg
iret
ror
mov
adc
xor
cmovg
idivb
jno
jge
cmp
cwtl
out
push
pop
add
divl
ja
int
cmpsl
and
in
cmp
adc
pop
jno
push
outsb
jge
push
ljmp
and
aas
mov
jl
dec
fwait
adc
fdivrl
add
xor
movsl
test
push
pop
cmc
cmp
fdiv
pop
mov
pop
xchg
cmovp
push
cmp
mov
fisubl
ret
mov
loop
mov
in
sbb
pop
adc
and
add
in
pop
lret
cld
push
das
jnp
jmp
jg
insl
or
mov
insb
mov
fcmovbe
hlt
int3
lcall
mov
popf
inc
cmp
and
push
aam
push
mov
mov
pop
cltd
ret
gs
into
aas
sahf
iret
mov
pop
decb
mov
xor
jmp
pop
mov
cwtl
mov
mov
cmp
aas
popa
cwtl
mov
cmp
xchg
mov
jl
rorl
and
movsb
push
jb
push
jne
push
addl
pop
add
pop
sub
inc
lods
cmovge
xchg
ds
adc
or
ja
clc
xchg
dec
xchg
mov
jg
mov
push
bound
inc
stos
cltd
dec
dec
xlat
cmp
cmpsb
je
xchg
cmp
repz
dec
mov
mov
mov
lds
sbb
or
add
jle
adcb
jne
jno
jo
jge
jg
test
daa
mov
test
pusha
push
xchg
mov
into
call
lods
int3
sbbb
pop
mov
mov
popa
pop
dec
pop
scas
push
in
jp
movsb
cmp
mov
sub
js
addb
ret
push
sbb
sbbb
sbbl
dec
inc
lcall
push
imul
lret
dec
movsb
in
add
adc
addr16
mov
jle
mov
cmc
iret
roll
mov
or
cmpb
popa
cmpb
inc
jb
gs
mov
idiv
sahf
sti
sti
in
or
sbb
inc
jne
cltd
addl
sahf
jne
push
pop
inc
cld
clc
cmp
push
ljmp
cs
cmp
inc
leave
data16
push
sub
test
es
stos
repz
stos
cmp
xor
mov
enter
adc
test
outsl
cmpb
or
inc
roll
mov
xchg
xchg
loopne
mov
pop
pushf
and
pop
fwait
scas
hlt
fsubl
push
int3
in
mov
fldenv
xchg
cld
inc
data16
or
popa
mov
jb
aas
cli
and
adc
mov
lahf
xor
ss
call
mov
fcoml
mov
je
adc
jp
fists
jge
mov
fs
or
out
imulb
std
daa
mov
sarb
lods
ja
dec
adc
stos
enter
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int3
xor
or
jle
jl
jle
sub
sub
outsl
jne
add
arpl
stos
mov
mov
sub
or
imulb
lock
movsl
incb
in
pop
gs
cltd
mov
ja
popf
fbld
bnd
and
jo
push
mov
fsubrl
pop
or
sbb
loope
loop
xor
pop
pop
loop
scas
pop
sbbb
push
add
xchg
and
fisubs
bound
sub
or
jmp
int3
mov
mov
lock
test
pop
sahf
cmp
jae
fcoms
leave
in
sub
in
movsb
xor
xchg
mov
mov
or
dec
xor
xor
mov
jb
sti
mov
push
cwtl
pop
hlt
insb
mov
inc
cmc
nop
int
into
icebp
inc
shlb
orb
scas
push
addr16
cltd
mov
adc
repnz
popa
push
fsubp
mov
cmpsb
xor
inc
jg
imul
sub
inc
popf
lea
mov
into
lods
push
pop
push
out
fcomps
mul
pop
in
sbb
cmp
mov
cltd
mov
kaddw
scas
test
dec
push
ds
fldt
jp
fcompl
fwait
adc
mov
ds
pushf
mov
inc
push
ret
jne
daa
or
xchg
adc
aas
out
in
jb
cld
jl
fldenv
or
jae
lods
ds
jmp
les
push
add
pop
iret
xchg
iret
sbb
dec
in
adc
mov
push
cmp
xchg
jmp
enter
push
cld
or
push
xchg
xchg
adc
lds
pop
dec
in
dec
arpl
jle
dec
lock
sub
cmc
pop
mov
fcompl
push
fimuls
out
je
aad
ret
dec
sub
out
fnstcw
sbb
mov
test
testl
sbb
add
mov
jns
dec
test
xor
mov
pop
sub
jmp
pushl
das
lods
cmp
notb
test
movsl
jo
aam
push
fstpl
pop
sub
xchg
jmp
push
std
dec
sahf
push
push
add
test
and
sub
jle
cmp
inc
jecxz
or
jbe
addr16
jl
and
cltd
or
xchg
mov
xchg
jle
and
aad
add
lods
ja
aam
addr16
jge
imul
mov
push
inc
aas
lret
push
jg
and
out
es
jmp
repnz
pushf
xlat
inc
mov
dec
outsb
cmc
ret
adc
pusha
ret
jl
mov
inc
je
popf
xor
add
addr16
and
in
add
mov
movsb
push
fadd
cvtpi2ps
movsl
je
stos
sub
cmp
push
mov
jo
dec
jecxz
lahf
push
inc
loopne
or
insb
fnclex
and
in
sub
mov
dec
pop
imul
pop
das
std
cld
sub
shrb
mov
push
dec
dec
cmp
nop
mov
leave
insb
xchg
jbe
pop
in
mov
in
gs
js
ret
mov
mov
adc
pusha
sti
test
lods
mov
push
add
popf
je
cmp
aad
cld
mov
inc
sub
cmp
lds
icebp
dec
insb
scas
add
push
stc
je
mov
xchg
outsb
movsl
jge
inc
stos
fidivl
xor
push
mov
sub
stos
cmp
cmc
mov
into
push
clc
jo
out
or
sub
pop
test
loope
sahf
pop
push
adc
cmpsl
cmp
inc
loope
iret
dec
lcall
mov
xorb
dec
add
pop
cwtl
es
loope
add
in
pop
adc
inc
mov
shlb
push
adc
xchg
sbb
ror
jbe
enter
out
idivl
or
out
cmpsl
adc
mov
test
add
js
popa
ret
cmpsb
in
pop
sub
in
cmc
outsb
ret
cld
xchg
hlt
mov
dec
movsb
call
pop
xor
out
or
outsb
sub
cld
lcall
push
or
rol
movsb
testb
scas
roll
xchg
jmp
sahf
testb
push
repz
jae
ficoms
cs
pop
fdiv
mov
cmp
pop
push
mov
and
fstps
sub
mov
push
and
int
nop
sbb
jl
dec
repnz
fldcw
pop
mov
or
outsl
fs
xor
repnz
jmp
sub
bnd
pop
push
scas
xor
ja
inc
pop
cwtl
xchg
clc
push
in
int
dec
push
icebp
or
mov
cltd
leave
xchg
xchg
mov
sub
cli
loop
into
hlt
push
and
arpl
aaa
stos
fnstcw
xor
pop
lret
push
in
inc
sbb
mov
shlb
gs
andl
and
cwtl
xor
imul
adcl
lods
insl
mov
pop
mov
and
inc
ret
ficompl
xor
dec
inc
mov
inc
andb
fs
adc
xor
xor
aaa
inc
insb
and
jne
insl
ss
out
mov
inc
xchg
jmp
pop
push
sbb
dec
cli
or
sbb
lock
inc
push
add
add
dec
pop
fldl
mov
repz
bound
in
movsl
out
imul
add
jo
and
jge
push
and
push
out
sub
mov
lcall
lret
push
or
pop
imul
cmp
sbb
jg
movsl
scas
rol
test
adc
aam
sub
fistps
add
inc
mov
inc
cltd
inc
jb
xchg
push
dec
pop
loop
cltd
nop
push
mov
cmpsb
outsb
add
jge
cwtl
mov
lods
orb
jmp
sub
fstpt
mov
repnz
dec
cmc
cmp
xchg
adc
sub
xor
pop
xchg
push
push
adc
jecxz
shrb
adc
mov
cmp
cltd
xchg
mov
js
lahf
int
xchg
ja
dec
inc
and
push
mov
ja
xlat
sbb
mov
rolb
shll
stos
mov
scas
xchg
fwait
shrb
je
mov
jmp
stos
icebp
lds
sbb
push
jne
sub
fsubrl
adc
jmp
bound
xchg
xor
pop
fsub
inc
xchg
ss
xor
mov
dec
jmp
fwait
push
mov
mov
mov
pop
out
sub
jle
jl
jle
outsl
outsl
add
cmp
push
aam
inc
in
in
mov
enter
fdivs
xchg
loope
inc
lds
pop
pop
xchg
clc
sahf
iret
push
jnp,pt
cmp
xchg
roll
out
cli
mov
cmpsl
sbb
loopne
inc
or
xor
xchg
imul
jp
mov
add
into
sbb
fistpll
aam
mov
addb
sub
mov
pop
das
adc
test
jne
frstor
add
hlt
jle
push
jo
int
sti
jge
sub
lods
pushf
repnz
shll
pop
repz
lret
sbb
mov
jne
mov
enter
push
cmp
js
flds
mov
or
cmpsb
inc
pop
dec
aad
lea
sbb
sub
mov
pop
sub
jnp
jne
add
test
es
jl
inc
scas
cmpsb
pop
outsl
andb
xchg
sub
pop
arpl
leave
mov
out
movsb
xlat
cmpsb
lods
nop
xor
sub
dec
dec
xor
scas
ret
cmp
dec
jp
sub
jle
inc
clc
mov
and
test
mov
add
popf
fcoms
jbe
lret
call
add
loopne
stc
or
and
rcrb
push
mov
xchg
xor
mov
jbe
stos
xlat
mov
sbb
pop
push
mov
mov
jp
lds
leave
iret
out
or
das
jo
sub
jo
sub
inc
mov
rol
sbb
cld
sub
jmp
sti
and
inc
in
push
or
jno
mov
cwtl
es
jp
mov
mov
into
xorb
inc
decb
jecxz
hlt
movsl
out
inc
push
ljmp
clc
fwait
icebp
lods
sub
or
add
add
dec
mov
lds
push
fisubrs
inc
fld
adc
in
adc
jecxz
stos
sbb
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
not
push
mov
mov
movl
mov
push
movl
mov
movl
mov
push
not
mov
notl
mov
movl
cmp
movl
je
mov
mov
subl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
add
mov
mov
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
mov
jo
adc
aad
cli
jp
jle
jl,pt
jle
push
mov
mov
mov
or
jecxz
mov
dec
pop
stc
cmp
cmpsl
fsubl
pusha
push
lods
pop
lds
ret
mov
push
mov
pushf
and
mov
sub
and
call
pusha
test
sbb
shr
add
mov
repnz
jnp
rol
pop
call
lds
xchg
add
std
jp
jle
popa
mov
xchg
jbe
bound
daa
cmp
aas
jne
loopne
mov
mov
and
loopne
push
adcb
mov
sub
js
mov
adc
inc
cmp
mov
fwait
pop
dec
jmp
mov
jmp
imul
mov
mov
xor
cmpsl
push
cmpsl
dec
inc
pusha
push
mov
sti
pop
jne
sbb
das
push
inc
lret
mov
jnp
push
imul
out
jo
mov
data16
jl
movsb
jge
mov
mov
ljmp
xor
mov
mov
mov
pusha
add
mov
mov
lods
icebp
mov
push
or
and
sub
pop
pushf
pop
popf
cmp
pushf
push
bound
rcr
cltd
mov
aaa
enter
xor
flds
repnz
aas
pop
mov
add
lret
mov
mov
and
push
cmp
clc
push
andb
cld
inc
lret
jmp
xor
and
rorl
in
adc
inc
stc
rcrb
rorb
mov
cmp
inc
movsb
movsl
mov
pushf
sar
mov
and
xchg
mov
push
or
loopne
inc
sbb
fwait
int
mov
add
lret
sub
cltd
adc
jp
xchg
jge
andl
pop
add
inc
sub
pop
or
mov
mov
mov
clc
push
inc
lahf
jnp
ficomps
loopne
sbbb
mov
mov
adc
idiv
sub
add
add
add
add
adc
movl
add
orl
imul
inc
inc
cmp
jl,pt
jle
or
and
pop
cmpsl
sub
addr16
mov
insb
sbb
data16
dec
shrb
pop
out
fs
pop
push
inc
pop
out
movsl
ret
jbe
aad
mov
dec
outsl
xchg
add
push
add
in
adc
scas
gs
mov
and
and
popf
lcall
mov
insl
push
je
jns
push
or
lahf
mov
push
or
lret
and
bound
jp
push
mulps
cwtl
mov
xchg
jbe
addr16
cld
iret
test
clc
mov
shll
cld
cld
addr16
lods
jns
xor
push
icebp
pushf
dec
push
mov
mov
les
cmp
lret
mov
or
jns
dec
add
loop
sbb
movsl
cmc
jae
loop
dec
iret
push
jecxz,pt
cmp
cld
and
dec
pop
or
and
add
lret
adcl
sarb
aad
shrb
test
nop
addl
dec
test
aaa
pop
cmp
sub
mov
mov
call
add
stos
jmp
cmp
xchg
int
xor
or
adc
mov
sbb
adc
pop
mov
outsb
out
push
and
inc
xor
push
mov
addr16
jo
ret
cmp
test
imul
push
cmpsl
into
xor
test
mov
sbb
push
rorb
jmp
sub
bound
test
popf
loope
arpl
or
adcb
js
pop
add
inc
push
mov
mov
and
call
addl
mov
push
mov
cmp
jle
test
mov
jle
xchg
rorb
xorb
gs
push
push
int3
adc
div
test
rcrb
dec
addr16
mov
push
pop
imulb
or
aas
jb
movsl
cmpsl
xor
int3
ljmp
subl
test
inc
cld
xor
jmp
mov
loopne
adcl
sahf
jle
jl,pt
jle
test
cmpsb
fcmovbe
or
xor
out
jmp
fstpl
fisttps
pop
mov
cmc
or
rolb
fdivrl
add
into
repz
fadds
inc
shrl
sbb
jmp
push
lods
out
incl
add
xchg
loop
inc
lahf
dec
cmc
cltd
sub
xchg
test
leave
dec
popf
decb
subb
jl
iret
xchg
and
push
das
cmp
push
stos
hlt
cmp
add
dec
lahf
ja
push
sub
and
ljmp
mov
mov
inc
dec
pop
aad
fldenv
jmp
ret
dec
sub
add
mov
cmp
inc
cmpsb
test
negb
cmpsb
jmp
xchg
mov
and
xor
int
lret
jne
cwtl
sub
add
fwait
out
ljmp
scas
into
lock
das
cmp
xchg
jl
out
repnz
adc
inc
lock
xchg
and
pop
jns
mov
out
stos
mov
loopne
push
addb
fsubrl
call
sbb
mov
call
int
in
orl
insl
push
stos
sub
sub
xchg
inc
mov
push
scas
mov
lret
loope
xor
je
cmp
pop
jl
enter
mov
ret
lds
fldl
inc
cmpsl
stc
xlat
cmpsb
xor
pop
lea
mov
insb
dec
arpl
scas
cmp
xchg
pop
sbbl
jb
in
mov
or
push
sbb
cmp
outsl
pop
sub
bound
in
jmp
lret
push
jmp
inc
mov
sbb
in
xchg
loope
mov
test
daa
cmc
sti
outsb
nop
sub
mov
call
cmp
dec
pushf
mov
ret
cltd
mov
and
jo
scas
aaa
int
add
sti
lcall
adc
shl
sub
push
jmp
jo
mov
mov
inc
cld
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xorl
jmp
push
inc
jb
jb
icebp
fisubrs
into
divl
pushf
jle
adc
jle
aas
dec
and
imul
xor
pusha
insb
pop
fsubrl
mul
imul
ficompl
xchg
dec
test
cmpsb
xchg
mov
sarl
mov
or
cwtl
xor
sti
div
shll
loope
bound
rorl
dec
mov
leave
daa
stos
dec
inc
fadd
add
into
stc
aad
cmp
loopne
out
mov
inc
iret
das
lcall
cmp
sbbl
seta
or
jmp
enter
dec
lret
ds
push
xchg
xchg
push
test
mov
push
mov
je
xor
push
jg
lock
sbb
fcomps
xchg
adcl
dec
adc
lea
dec
push
add
dec
inc
aad
xor
jle
into
sbb
gs
push
test
in
pop
dec
fldl
out
sbb
pop
mov
inc
movsl
repnz
cmp
aad
mov
test
mov
divb
add
and
add
adc
cmp
push
dec
mov
subl
push
subl
push
or
mov
jmp
cmp
shll
xor
stos
jae
lret
cmp
jle
adc
jle
aaa
push
or
mov
pop
xor
inc
mov
mov
inc
sbb
inc
mov
sub
sbb
xchg
mov
mov
push
xchg
lea
ljmp
test
jge
jg
pop
xorb
push
mov
push
scas
push
pop
imul
mov
jno
pop
dec
cs
add
pop
and
add
and
enter
jns
popa
and
jmp
shll
push
ss
dec
aad
sub
and
mov
cli
mov
cmpsl
adc
pop
push
std
add
cmp
inc
push
sbb
and
inc
jnp
dec
push
rcrl
or
lods
fnstsw
or
sub
dec
or
inc
mov
mov
rolb
cmc
or
in
xor
cwtl
adc
mov
lcall
add
outsb
imul
xor
adcl
mov
xorl
add
push
jmp
pop
jecxz
call
and
out
aad
les
jg
jle
jno
sbb
adc
sub
pop
dec
lock
push
sbb
loope
sbb
lea
test
ds
lea
mov
mov
inc
gs
ja
repnz
mov
sbb
jle
inc
jb
adc
lret
adc
mov
dec
push
sbb
push
sbb
ss
loop
add
js
aad
dec
xchg
in
insb
add
hlt
add
clc
mov
push
mov
inc
push
pop
jecxz
stc
and
in
test
jge
jns
aad
mov
leave
adc
mov
add
mov
out
adc
shr
call
inc
and
cmp
inc
xchg
pop
scas
bound
pushf
and
pushl
ja
dec
lcall
push
mov
mov
cltd
inc
xor
int
push
lock
lea
push
sti
cmp
jge
cmp
mov
loop
push
jmp
mov
mov
incl
xor
addl
movl
movl
decl
add
movl
jmp
cmp
jne
movzbl
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
xorl
andl
mov
addl
sub
xorl
push
sbbl
mov
movl
add
push
call
movl
incl
cmpl
movl
jb
movl
jmp
movl
cmp
movl
jne
movzbl
and
movl
addl
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
ret
and
cwtl
jle
adc
jle
pop
test
xor
addb
ss
int3
jbe
jnp
xor
or
sarl
cmp
fcmove
push
mov
adc
loop
testl
jp
mov
pop
cwtl
pop
movsl
pop
mov
xchg
sub
cmp
push
rcll
out
cmp
inc
xor
push
or
and
push
loopne
dec
lea
pop
or
cmp
ja
fadds
ret
pop
add
dec
insb
es
jne
xchg
lahf
sti
lds
fst
or
and
test
sub
outsb
xor
daa
push
shlb
cmp
repnz
sub
aas
pop
or
mov
jmp
mov
data16
sbb
scas
outsl
in
and
out
inc
push
pusha
icebp
arpl
shr
fsts
and
sub
shll
pop
sbb
lret
cmp
dec
in
sahf
xchg
das
ret
arpl
lret
mov
orl
xor
add
sbbl
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
jmp
shlb
sub
inc
loopne
sub
jle
aam
xor
mov
shrl
pop
dec
dec
mov
adc
fs
mov
inc
adc
inc
cmc
push
push
call
clc
in
lock
cmp
cmpsl
div
cmp
lods
sub
in
push
push
test
out
add
stc
add
ljmp
xlat
add
rcrl
mov
pop
gs
or
xor
std
pop
or
push
add
push
ret
or
vmovupd
shrb
pop
mov
dec
adc
inc
scas
je
mov
mov
mov
cmp
in
andl
ret
add
fcoms
outsl
ja
jne
or
jmp
addl
xchg
cmpsb
jecxz
jb
adc
push
add
lea
jnp
add
inc
imul
or
inc
xlat
jo
popa
push
std
push
daa
pop
adc
push
pop
adc
movsl
fildl
and
add
mov
mov
sbb
out
test
add
in
jmp
jb
lods
ljmp
mov
into
cmpsb
jle
adc
jle
mov
cmp
je
mov
push
mov
sub
mov
shlb
mov
add
stos
push
dec
test
mov
and
jne
dec
mov
daa
adc
or
inc
mov
xor
sub
loopne
aad
mov
repnz
cmp
stos
adc
out
into
incb
lahf
dec
int
gs
test
cmc
cld
mov
cmp
insl
and
sub
fwait
mov
popa
clc
push
aaa
xor
insb
add
sub
std
xor
mov
fwait
rcll
lods
int
add
dec
jbe
mov
add
jmp
idivl
test
sti
pop
mov
xor
push
jnp
dec
sahf
or
rolb
xchg
ret
sti
es
jnp
dec
mov
fs
mov
scas
xchg
fldl
int
pop
xor
incb
push
iret
insb
shrb
xor
lods
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
xor
xchg
das
push
jne
loope
jecxz
loope
mov
jle
adc
jle
lret
xchg
pop
nop
mov
arpl
leave
mov
out
mov
jmp
xorb
cld
xchg
stc
ss
mov
mov
insb
xor
and
xchg
dec
add
ljmp
add
imul
rorb
dec
leave
or
jge
cmp
sarl
cs
out
and
xor
fisttpl
mov
inc
cs
adc
add
xor
pusha
cwtl
inc
dec
iret
xor
in
and
push
in
mov
jg
xor
push
sub
jge
mov
movsl
cmp
fidivl
mov
fstps
mov
lret
pop
xlat
jb
jno
loope
lret
pop
and
jae
int
add
mov
outsl
sti
xchg
sbb
into
iret
mov
or
pop
pop
add
pop
xlat
mov
inc
jge
jg
test
push
cs
pop
xor
addr16
and
ss
and
cli
cmpsl
push
dec
jne
mov
pop
xor
pop
jmp
movsl
sbb
loope
icebp
mov
jns
add
sbb
jg
jle
clc
and
xchg
shlb
in
cmp
jecxz
in
movsb
mov
pop
ja
in
cmp
in
fimull
mov
mov
and
or
mov
and
fwait
or
test
pop
scas
test
adc
mov
ret
cmp
and
sbb
and
mov
cwtl
pop
mov
in
adc
xchg
add
add
jl
clts
mov
sub
imul
pop
cmp
test
outsb
imul
mov
dec
stc
and
icebp
mov
mov
in
jge,pt
rorl
roll
and
jo
repz
and
cmp
and
mov
cmp
roll
sbb
xorl
jp
ret
dec
movsl
sub
movsb
fbstp
xor
lret
aaa
movsl
fbstp
cmp
jmp
das
std
dec
mov
stos
mov
punpcklbw
jle
call
repz
clc
add
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
push
movl
sbb
movl
mov
push
add
mov
adc
mov
jmp
imul
mov
jecxz
sbb
cmp
lcall
jle
jge
xor
dec
mov
inc
fptan
xchg
cmp
pop
mov
pushf
xchg
dec
and
mov
mov
or
addr16
mov
cmc
dec
ljmp
or
xchg
in
jns
cmc
mov
fildll
pop
pop
lods
or
dec
leave
mov
std
cmpsl
nop
pop
dec
xchg
pop
addr16
jne
mov
mov
pusha
mov
mov
jnp
ds
inc
pop
mov
repz
fs
pop
cmp
jno
cmpl
push
pop
cltd
scas
sbb
mov
or
push
dec
lahf
faddl
ret
inc
mov
pop
cmp
cmp
mov
mov
xor
leave
pop
cmp
test
out
or
test
sbb
push
lcall
lcall
movsb
sbb
pusha
int
pop
or
test
sbb
aam
testl
fidivrs
jl
pusha
into
add
iret
adc
in
aas
pop
jnp
pop
mov
popf
jecxz
aad
sub
dec
adc
xchg
cld
xchg
movsb
xchg
shrb
or
push
pop
jbe
push
xor
stc
ret
rcrb
push
das
int3
add
mov
adc
fs
jo
inc
push
or
loop,pt
pop
in
daa
dec
cmp
dec
and
jle
imul
cmpsl
xchg
mov
fs
into
xor
add
jg
mov
push
mov
cli
popa
mov
ss
aaa
mov
push
pop
lcall
xor
cwtl
inc
push
cmp
enter
mov
mull
data16
leave
ret
cmp
hlt
inc
and
sub
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
jmp
mov
push
jno
mov
ja
sbb
lock
jle
scas
mov
xchg
pop
sub
shll
xchg
jbe
mov
mov
mov
push
mov
inc
out
inc
inc
jmp
pop
int
sub
stos
mov
mov
mov
iret
fcmovnb
ss
mov
gs
jb
ss
scas
in
inc
jmp
scas
inc
call
adc
mov
push
cld
and
mov
stc
mov
sbb
testl
imul
cmp
sbb
add
mov
lds
cmc
xchg
xchg
and
sahf
enter
mul
out
mov
je
jbe
stos
cmc
in
rorb
loop
or
pop
mov
int
push
inc
in
cmp
ja
cmp
mov
adcb
mov
or
mov
dec
cli
inc
mov
push
out
test
aaa
movsl
adc
sub
call
mov
out
rolb
jge
or
dec
imul
shl
ds
jns
hlt
mov
mov
fnstsw
loopne
or
sti
and
mov
sarl
movsb
mov
add
mov
sbb
outsl
mov
pop
lods
and
dec
sbb
mov
pushf
pop
clc
sbb
std
das
fcoml
dec
aam
outsb
or
pop
xor
in
push
jnp
jno
cld
jg
fwait
pop
jle
xchg
cmp
lods
lods
dec
notl
out
pusha
fwait
xchg
popa
pop
imul
cmp
jbe
shll
fbld
cmp
sbb
adc
inc
sbb
push
popl
add
push
dec
pop
mov
pusha
fidivrl
push
inc
pop
loop
jnp
sbb
mov
cmc
and
mov
or
leave
ret
push
mov
push
push
incl
jmp
inc
iret
scas
mov
jno
sub
mov
jge
jle
cmc
fcoml
lods
jle
xor
cmp
cmp
std
mov
sbb
cmp
mov
test
test
ja
xchg
in
lahf
dec
cld
out
loope
shld
jecxz
adc
xchg
mov
in
add
and
fxch
arpl
cld
in
or
and
leave
mov
xlat
cs
push
insb
pusha
inc
jns
adc
push
push
arpl
mov
sub
enter
mov
das
push
cltd
mov
daa
mov
out
out
xlat
or
inc
outsl
ret
add
xchg
sub
rep
xchg
stos
dec
in
out
lds
bound
sbb
dec
adc
push
push
or
pop
mov
sahf
out
mov
mov
pop
clc
inc
rcrl
dec
movsl
std
push
ret
in
push
or
pop
aad
adcl
jge
shlb
jb
data16
dec
jo
movsl
and
dec
xor
ja
xchg
lds
cmp
adc
repnz
add
aaa
cmp
fsubrs
mov
gs
dec
cmp
aaa
sub
sub
int
data16
imul
shll
push
rcrb
jle
sub
shrb
pop
das
stos
lret
lods
xor
xor
ljmp
mov
jmp
and
addr16
sub
or
daa
add
sbb
pop
mov
inc
mov
repz
xor
sbb
or
fildll
jno
pop
inc
mov
add
movsb
jmp
aaa
pop
push
push
stos
xor
xor
call
int3
mov
cmp
fistpll
jno
cli
cmpsl
in
cli
mov
lea
mov
jp
sub
jge
or
imull
adc
jl
sbb
fldcw
or
cmc
decl
jns
lock
andl
aad
stc
push
push
mov
xor
mov
adc
and
dec
mov
test
lret
into
js
mov
xchg
repz
imul
adc
lock
int3
push
ret
push
mov
subl
jp
outsb
mov
cwtl
push
push
ja
or
sbb
stos
inc
jo
lahf
jp
ret
pop
sbb
and
adcl
ljmp
xchg
and
scas
notb
adc
cld
lahf
jb
mov
mov
aad
cmc
jl
push
fmull
sbb
fldcw
into
sbb
adc
out
int3
mov
ja
stc
ja
add
pop
mov
inc
call
and
cld
jns
pop
cmc
rol
shlb
fwait
insl
dec
and
cmp
shr
sti
cmp
xchg
call
dec
jo
mov
dec
popa
sbbl
or
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
mov
adc
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
and
sbb
push
jo
dec
add
icebp
aam
jle
jl
jle
cltd
repnz
add
dec
dec
int3
xchg
or
aam
pushf
xlat
lock
in
mov
bound
rcl
scas
sti
aas
mov
mov
das
notl
nop
or
fwait
ret
mov
push
jnp
xor
test
and
adc
sub
mov
push
mov
dec
daa
int
sti
jle
xchg
out
xor
mov
mov
adc
pop
mov
lds
xor
or
das
xchg
cwtl
je
sbb
push
dec
sub
clc
mov
and
ds
out
aad
push
sarl
mov
dec
jmp
or
inc
imul
xchg
jl
xchg
add
add
sti
lret
call
cmp
bound
sub
inc
mov
adcl
lods
push
ljmp
xor
mov
push
out
pop
call
xor
nop
sahf
outsb
std
push
inc
inc
cwtl
xchg
clc
scas
mov
pop
sbb
lods
and
or
aas
xchg
lret
jp
bound
jo
movsl
xchg
and
xor
test
scas
mov
pop
into
pop
popa
jbe
lods
lret
add
popf
shrb
imul
ficompl
call
in
fdiv
test
inc
outsl
insb
sub
aam
sub
adc
scas
and
fwait
mov
jp
mov
push
fldl
xor
nop
test
dec
scas
loope
leave
loop
lea
call
mov
into
int3
pushf
mov
int3
fcoms
add
push
xor
ret
jnp
stos
add
jle
ror
lds
repz
and
jmp
hlt
cmpsl
in
cmpsl
popf
cmp
clc
movsb
pop
push
movsb
out
sub
rcl
ja
jmp
sub
inc
les
popa
mov
jmp
inc
or
jo
add
imul
rol
dec
cmc
jno
jp
in
inc
int3
jp
mov
clc
inc
xor
jle
jo
out
mov
inc
mov
fnsave
cmpsl
in
gs
js
cmc
shlb
dec
lahf
push
pusha
inc
loope
mov
adc
imul
mov
stos
push
in
es
mov
fnstcw
dec
inc
pop
add
sub
fs
dec
es
push
bound
xchg
xchg
sti
mov
sbb
sbb
jecxz
insb
jns
ljmp
in
push
dec
out
in
add
sub
addr16
xor
add
dec
jo
out
lods
dec
aad
sbb
or
repz
push
movups
or
fwait
cmp
mov
pushf
inc
sub
outsl
and
lods
fnstcw
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
andb
in
loope
arpl
adc
shrb
jle
ss
xchg
pop
icebp
test
lock
mov
pop
popf
fsubs
or
pusha
add
adc
sbb
mov
jmp
in
pop
inc
ds
das
add
cwtl
mov
jp
pop
jnp
cmc
mov
dec
xchg
aam
sti
stc
jmp
xlat
lret
orb
inc
es
lds
in
mov
jge
or
sbb
test
imul
dec
stos
es
out
sbb
xchg
push
mov
jp
lds
js
push
dec
repnz
xchg
out
fcmovbe
push
sub
out
mov
push
inc
xlat
insl
dec
jg
fcomps
push
cwtl
imul
sub
mov
rorb
aam
xchg
pop
popa
and
xchg
lock
int3
sub
pop
xor
iret
dec
stc
rcll
add
mov
adc
outsb
pop
mov
dec
pop
adc
jmp
dec
dec
ja
pop
stos
in
mov
mov
nop
lock
pusha
push
cmp
pop
mov
cmp
sub
xchg
push
jae,pt
mov
jo
jl
mov
and
xchg
xchg
stc
cmpsl
cmc
and
out
stc
movsb
dec
xor
arpl
mov
dec
rcrl
push
cmp
andb
pop
sub
adc
jae
adcl
cmp
lea
enter
es
sub
jno
jb
jb
ds
jge
insb
push
mov
jp
mov
dec
lock
and
mov
inc
cmp
mov
mov
mov
mov
scas
int
nop
flds
mov
sarb
insb
ss
push
pop
cmpsl
insl
sahf
push
loope
dec
daa
mov
int3
pop
mov
and
cmpsb
pop
inc
mov
scas
aaa
shll
xchg
adc
mov
pushl
iret
sti
sub
xor
mov
fucomi
mov
mov
or
xchg
pop
test
test
insl
push
mov
push
push
inc
int3
addr16
ror
nop
les
push
push
scas
fiaddl
lock
jns
mov
and
lds
vmwrite
sbb
push
outsl
vpand
shrl
mov
cmp
mov
dec
pop
or
leave
sbb
jecxz
jmp
outsb
xchg
sub
add
hlt
mov
cli
test
jp
fstpt
ja
mov
sub
loopne
mov
sbb
mov
mov
or
push
mov
dec
lret
adc
pop
mov
push
into
mov
hlt
add
jmp
sbb
sub
divl
xchg
aam
adc
loop
push
out
mov
rclb
stc
cmp
pop
mov
xchg
add
ja
clc
sbb
jns
lcall
xor
leave
ret
push
mov
jmp
shll
jno
aad
xor
into
inc
push
shlb
jle
int
ljmp
imul
aad
adc
push
push
jmp
xor
out
cmp
out
push
xor
out
int3
jnp
mov
test
mov
out
sbb
jne
rorl
add
arpl
test
out
push
ljmp
leave
mov
jns
ljmp
leave
sahf
xor
addr16
sti
int3
dec
lahf
das
pop
fstps
into
lock
pop
stos
rcrl
xor
fxsave
out
push
ljmp
insb
pushw
or
add
dec
mov
shl
bound
mov
and
mov
dec
pop
inc
lahf
mov
aam
fdivl
call
xor
add
test
lret
inc
add
cltd
hlt
adc
pop
daa
and
lret
mov
imul
xor
out
repnz
out
movsl
sbb
adcl
xlat
movsl
rclb
lods
or
pop
push
lcall
mov
mov
in
fucom
jl
testb
inc
or
lret
hlt
dec
mov
adc
xchg
adc
inc
lahf
cmp
jp
xchg
pop
cli
out
pop
icebp
fs
cmc
icebp
sbb
push
xchg
sbb
mov
in
push
jp
mov
cmpsl
bound
fs
jg
sub
repnz
push
or
pop
mov
sbb
sbb
dec
pop
and
jle
cmpsl
mov
test
pop
stc
in
xchg
sbb
adc
test
je
ret
pop
aad
lods
mov
or
popa
push
jp
loope
pop
cmp
mov
jne
notl
lea
aad
xchg
sub
lea
fldcw
pop
xchg
cmp
mov
les
or
lea
stc
jp
mov
fmull
sub
sub
adc
mov
jmp
ja
addb
daa
sbb
insb
out
dec
lret
cld
not
xchg
sub
add
int
xchg
xor
jns
out
push
adc
and
adc
push
or
in
add
mov
add
rcrl
cmp
imul
jg
add
mul
sbb
adc
pop
call
gs
push
fildll
rclb
lea
out
shll
mov
loop
repz
push
out
xlat
dec
aad
xchg
scas
mov
ss
fstpl
lcall
test
cmp
out
adc
push
mov
leave
in
sub
addl
cltd
sbb
shrl
loopne
or
mov
sbb
loop
test
bound
sub
scas
ds
mov
jle
ljmp
les
add
shrb
mov
mov
xor
mov
jmp
or
pop
jno
xchg
add
pop
ret
fidivs
jle
outsb
cmpl
arpl
rol
fidivs
jno
sub
dec
in
sub
jle
xchg
adc
icebp
ljmp
dec
and
int
in
push
cmp
fisubl
imul
inc
xchg
js
enter
mov
cmc
push
cmpsl
xor
sbb
sbb
jge
cwtl
sub
xchg
mov
daa
dec
cmp
les
inc
outsb
push
aam
es
into
sbb
and
imul
dec
cmp
fwait
stc
mov
sarl
pop
loop
test
jns
push
out
push
fcmovbe
push
mov
mov
je
cmp
xchg
cmp
push
adc
imul
sub
repz
and
jg
rcr
out
dec
fs
xchg
push
test
mull
jbe
mov
in
pop
arpl
shlb
scas
jo
or
xchg
ja
ss
popa
inc
mov
popf
out
cmp
popf
mov
aaa
mov
enter
in
sbb
into
mov
mov
out
jo
inc
cli
fcmovu
push
std
xlat
fsubrs
jo
outsl
push
push
mov
iret
push
pop
filds
fildll
push
mov
xor
pop
fs
mov
dec
pop
ret
andl
mov
cli
add
dec
sbb
dec
aas
mov
outsl
aam
inc
sti
clc
jl
add
int
in
ja
imul
xchg
loope
push
push
orl
ficompl
shlb
pop
mov
add
or
pop
lcall
stos
mov
loop
jo
enter
jb
adc
leave
cmc
push
cs
jg
push
xlat
movsb
sbb
cli
mov
mov
or
mov
ljmp
dec
mov
into
sbbl
inc
xchg
js
dec
sub
mov
mov
sub
sti
stos
pop
sub
out
cs
mov
inc
out
ds
xchg
sbb
cmpsb
jno
push
mov
stos
incb
js
xchg
xor
xor
aas
fdivl
jne
es
push
out
dec
inc
fbstp
cmpsb
in
fs
fistpl
sub
dec
ffreep
lcall
push
xor
adc
mov
and
mov
orl
pop
hlt
pop
das
idiv
in
push
jne
and
mov
arpl
fiaddl
jne
push
xor
push
jmp
jns
inc
or
xor
fsubrl
out
es
in
fwait
or
cmp
out
lahf
and
dec
loopne
mov
out
push
xor
loopne
fyl2x
ficomps
mov
mov
dec
negb
sbb
push
mov
popa
xchg
movsl
add
pop
es
mov
and
or
mov
pop
ret
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
orl
add
xorl
movzwl
and
mov
xor
xor
or
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
subl
xor
xorl
sub
mov
movzwl
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
sub
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
jmp
cltd
outsb
mov
outsl
or
push
out
popa
mov
fdivl
jle
cmp
scas
mov
scas
and
fwait
dec
adc
pop
sbb
cs
or
mov
loope
out
pop
mov
insb
jge
mov
in
cmp
jns
and
adc
push
loopne
xor
mov
stos
fisubrl
cli
cmp
pop
mov
iret
mov
mov
mov
adc
lahf
int3
sbb
ret
sbb
inc
into
decb
cli
pop
xchg
cmp
inc
outsb
std
inc
pop
jp
mull
jns
in
arpl
lods
mov
cs
pop
push
sbb
add
fs
sbb
sbb
inc
fnstcw
sub
gs
adc
scas
mov
push
push
adc
fwait
lcall
push
std
ljmp
jnp
pop
xchg
lods
pop
aam
adc
orl
add
or
in
loope
xchg
fwait
jl
jp
inc
and
jne
jmp
sub
addb
ret
inc
pop
outsb
enter
push
push
xlat
out
lods
and
xor
xor
cs
cmp
mov
xor
pop
add
add
add
cmp
hlt
sub
jbe
insl
or
sbb
fldenv
insl
cmpsl
jo
test
lahf
and
jne
sub
inc
dec
jp
or
mov
stos
and
loop
cmp
cltd
push
dec
mov
pop
cltd
pop
sub
push
cwtl
dec
out
dec
sub
pop
cmp
jae
dec
fnstenv
ljmp
push
push
lahf
sub
leave
jb
xor
xchg
shl
sbb
sub
cmp
push
or
and
repz
aad
mov
xchg
sub
outsb
sbb
push
push
hlt
icebp
nop
loope
in
mov
repnz
add
mov
push
outsl
and
lds
inc
inc
iret
rolb
jl
les
fdivrs
adc
in
fstpl
mov
pop
lret
test
xlat
xchg
xchg
lahf
mov
int
sub
pop
inc
dec
out
test
rcl
scas
arpl
es
xchg
adc
scas
adc
sub
rclb
movsb
jmp
fadds
sub
push
leave
pop
and
dec
sbb
add
insb
adc
push
lock
scas
sbb
fstl
push
inc
jnp
xchg
call
ds
pushf
jnp
mov
idivl
sar
ljmp
add
jle
sbb
xchg
mov
sbb
rorb
test
cld
lcall
mov
mov
xor
jmp
mov
icebp
mov
and
or
jl
jle
ficomps
cmp
nop
and
push
xor
adc
mov
cmpsl
fsub
mov
loop
fs
test
mov
cmpsl
sahf
mov
sub
aam
mov
xchg
test
push
sbb
jbe
fisubrs
push
mov
add
mov
andl
xchg
ds
and
jmp
les
pop
lock
xchg
ja
push
lret
pop
dec
ret
cmp
jecxz
stos
mov
sbb
sub
dec
subl
adc
lods
sub
and
add
imul
mov
aad
xor
xchg
mov
pusha
je
lock
pop
in
rorb
jne
jmp
and
aam
es
test
je
lcall
xchg
sub
lahf
out
dec
dec
mov
std
insl
test
and
in
inc
test
xchg
fsts
dec
loope
jge
imul
shl
cli
mov
ja
in
inc
dec
sbb
sbb
jnp
xor
test
push
add
jle
int3
pop
sarb
arpl
sub
cmpsb
lds
data16
setbe
and
out
clc
lods
imull
mov
dec
gs
mov
push
xor
mov
push
hlt
cmc
push
pusha
xor
pusha
add
xchg
into
push
out
lahf
adc
sbb
jmp
lods
repnz
cld
loopne
fcmovnu
ret
movsb
cmp
cmp
pop
or
and
adc
dec
mov
sub
mov
mov
stos
push
pop
outsb
enter
das
inc
sbb
cltd
jb
mov
nop
pop
aas
addr16
push
ljmp
add
ret
adc
pop
out
cmp
add
daa
cmc
adcl
jne
imul
inc
or
dec
add
fwait
pop
aad
dec
cwtl
fiadds
or
lea
into
push
in
cmp
into
mov
add
imul
arpl
fsts
movq
mov
pop
shrb
dec
aas
add
lcall
sub
mov
cmpsl
cmp
in
jne
xlat
cs
or
dec
cmp
mov
xchg
push
clc
lret
mov
mov
jns
xchg
mov
xchg
mov
outsb
lahf
lock
mov
adc
dec
add
jmp
add
fdivl
lock
xchg
pop
sub
mov
scas
jl
jle
push
outsb
daa
xor
pushl
sub
repz
hlt
gs
mov
out
pop
xchg
out
loopne
test
pop
dec
jnp
fstpt
cmpsb
out
xor
stos
ret
filds
dec
xchg
push
cmp
push
je
pop
insl
pop
repz
stc
fstpt
movsb
xchg
mov
jecxz
enter
aad
xchg
jne
cmp
sbb
sahf
mov
fcompl
int3
push
mov
sahf
cmp
sub
xor
lret
test
call
lret
cmp
les
fdivs
jge
lret
divb
mov
dec
in
jge
add
sub
push
mov
sub
sbbb
repz
repz
add
cmp
cmp
mov
push
rorb
xchg
push
mov
jl,pn
pop
outsb
popf
dec
inc
lret
arpl
jns
sarb
pop
mov
sbb
mov
je
ja
sub
jmp
mov
fcmovb
aad
adc
push
pop
jmp
mov
dec
into
push
outsb
insb
push
ljmp
jge
mov
outsb
mov
push
dec
cmp
or
inc
and
mov
loopne
into
hlt
nop
cmp
sahf
mov
jbe
pop
popa
xor
mov
jge
test
arpl
lea
jecxz
jns
lods
cmpsl
push
inc
outsb
mov
push
repz
arpl
mov
mov
scas
popa
in
mov
and
lahf
and
pop
loop
inc
xchg
pop
mov
inc
jb
ret
sbb
fisubrl
in
add
clc
and
mov
pop
xor
fadd
dec
dec
mov
in
jno
sub
lods
xchg
mov
and
in
xor
push
cmp
bound
cmp
bound
icebp
mov
in
jp
clc
jo
mov
cwtl
ret
add
daa
lea
das
and
notb
push
and
cwtl
add
ss
daa
add
dec
inc
push
push
cmp
fldenv
and
into
pusha
gs
ljmp
dec
fisubs
mov
cmp
scas
pop
lock
jge,pn
jo
push
mov
mov
popa
es
shll
mov
sub
jge
cmc
mov
in
out
sarl
adc
push
adc
das
rorl
adc
mov
or
and
jno
sub
inc
clc
cmp
inc
dec
loopne
mov
mov
mov
jmp
je
push
push
lock
outsb
dec
mov
por
jle
aas
jnp
pop
xor
mov
pop
les
daa
add
xchg
out
add
fdiv
pop
sahf
pusha
imul
shrl
mov
in
stc
pop
scas
inc
jl
int3
dec
cmp
dec
lcall
shrl
mov
cmc
addl
add
or
sarl
or
les
imul
pop
xchg
jmp
es
and
inc
sarl
aad
mov
mov
mov
das
ror
daa
arpl
nop
xlat
xlat
mov
int
dec
sahf
or
stos
push
roll
mov
nop
push
jne
inc
xor
xchg
mov
andl
adc
cmpsl
push
dec
inc
mov
imul
les
cltd
movsb
jnp
push
or
pop
mov
cmp
loop
sub
xchg
inc
push
jo
incl
loop
and
shl
add
test
adc
pop
adc
repnz
jno
ds
sub
xchg
outsl
pop
push
lahf
mov
adc
mov
or
cwtl
cmp
int3
out
lock
jbe
mov
ljmp
add
add
insl
dec
pop
loop
push
add
ja
sub
dec
add
lods
mov
mov
hlt
fdivl
xchg
jne
loope
jno
daa
loop
xor
or
nop
inc
jae
imul
cmp
in
adc
negb
inc
mov
push
mov
mov
ds
jo
add
xlat
js
push
adc
xchg
cmp
jmp
loop
push
cli
push
sbb
inc
int3
cmp
jg
mov
xlat
push
mov
fdivl
xchg
pop
fcomi
sub
test
mov
sbb
or
daa
add
sbb
pop
insb
movsl
xchg
lods
add
iret
push
xor
out
xlat
dec
push
sbb
pop
mov
ret
ja
push
push
notb
mov
fildl
jp
push
out
imul
pushl
add
out
jge
in
xchg
cmpl
pop
xor
mov
cmp
ret
lret
xlat
int
pop
cmp
push
inc
xor
mov
mov
and
inc
mov
mov
mov
mov
mul
dec
xchg
cmp
and
push
push
pop
jecxz
and
je
push
aam
push
outsl
xor
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
jmp
push
dec
push
imul
and
loope
add
leave
sbb
jle
jl
jle
cmp
iret
lods
lea
push
repz
jmp
and
das
mov
or
popf
rcrb
cld
xor
lods
out
ret
push
or
xlat
dec
mov
cs
fnsave
imul
in
fsubrl
adc
mul
pop
jge
add
movsl
out
inc
or
stc
test
or
rcll
jb
pusha
cwtl
xlat
daa
pop
jge
lods
ljmp
icebp
or
std
sbb
and
pop
pop
hlt
scas
cmp
nop
movsl
ljmp
jecxz
jle
jae
dec
mov
jne
sub
out
aad
lret
dec
lea
aam
js
scas
mov
sbb
insb
mov
mov
xchg
out
lods
cmp
lret
xor
cmp
fucomi
jecxz
cmp
iret
loope
dec
into
and
pop
icebp
lret
sbb
xchg
adc
in
loopne
mov
push
test
fisttpll
jmp
xor
pop
outsb
lods
clc
call
out
pop
inc
dec
adc
test
mov
sbb
and
xor
mov
or
fistl
testb
adc
subl
lods
jb
sbb
pop
push
or
lcall
insb
mov
int
and
ss
jns
es
jo
in
mov
lock
mov
dec
adc
adc
cmp
xchg
fidivs
jne
jp
cmp
and
in
or
fs
push
popa
wbinvd
dec
rorb
sbb
sbb
inc
dec
sbb
mov
rolb
sarl
out
rclb
push
mov
je
cmp
pop
mov
hlt
xchg
xor
lret
dec
pop
fwait
cwtl
push
add
xchg
mov
rcll
mov
cmp
fbstp
jae
jne
jg
sbb
sbb
test
shlb
jno
add
pop
ret
sti
sub
and
in
scas
shrl
lret
ret
test
adc
pop
sbb
jbe
sub
fistpl
mov
lcall
jle
and
sub
outsb
xchg
jp
fidivl
shl
into
mov
ljmp
out
push
loopne
bswap
mov
and
ljmp
addr16
js
sbb
jbe
out
insl
mov
lret
sbb
add
movl
lea
mov
mov
addl
mov
jmp
sub
or
lock
inc
mov
imul
inc
jle
scas
jl
jle
scas
jbe
inc
jns
xchg
sbb
jle
leave
inc
cmpsl
pop
xor
or
ds
mov
lods
xor
out
dec
push
mov
fs
icebp
sbb
jbe
iret
popf
cli
loop
cmp
jae
popa
sub
aas
in
adc
and
mov
cmovbe
enter
divb
aas
lea
sub
and
xlat
in
cli
push
pop
lahf
out
jl
inc
mov
lahf
xor
sahf
cmc
sub
jmp
fsubrl
add
test
dec
repnz
loopne
mov
fstps
and
sar
clc
es
iret
mov
ret
push
inc
mov
movsl
dec
sub
mov
jnp
in
xchg
xchg
sbb
mov
cltd
or
ret
or
and
sub
in
or
adc
repz
mov
shlb
mov
inc
scas
cmp
sti
scas
and
aam
decl
test
mov
or
fnstcw
jb
enter
into
push
pop
nop
jne
add
mov
pop
push
cmp
sbb
mov
leave
inc
mov
insb
push
add
sub
jecxz
adc
loope
mov
out
out
cmp
and
das
pop
jbe
aam
popa
sub
mov
xchg
push
cmp
mov
in
sahf
push
mov
orb
sti
fsubl
dec
pop
and
add
mov
mov
test
repnz
stos
mov
lds
fsub
dec
outsl
pop
push
aam
test
data16
out
xor
inc
jno
outsl
push
mov
mov
push
fdivs
fnstcw
push
fs
dec
andl
pop
aaa
mov
or
enter
out
inc
fiadds
mov
insb
mov
jp
xor
jne
push
adc
and
pop
popf
dec
and
and
pushf
jb
lahf
fists
and
repnz
inc
ds
jge
mov
sbb
adc
pop
and
insl
xor
rcll
xchg
push
jne
std
test
testl
or
sbb
add
loop
in
leave
sub
or
leave
repz
xchg
cmp
push
stos
xlat
fsubrs
xor
dec
jns
les
lds
push
lahf
or
pop
insl
cmp
push
jle
push
jge
mov
jb
adc
jae
add
mov
sub
icebp
push
les
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
jmp
mov
xor
in
leave
outsl
push
sbb
jle
movsb
jg
jle
popa
xchg
daa
add
stc
jno
clc
cmp
push
jmp
push
stos
fsubrs
mov
sarb
jp
push
test
mov
sbb
xchg
dec
clc
add
mov
xchg
iret
in
mov
sarl
pop
sbb
mov
adc
call
out
sbb
mov
pop
call
dec
aas
lods
cmpsb
xchg
das
cmpsb
add
std
mov
mov
push
cmp
xorl
pop
int
cmp
call
pop
inc
mov
sbb
stos
mov
out
push
xchg
inc
or
adc
lea
imul
adc
inc
push
stc
jne
mov
jp
addl
bound
inc
push
push
or
lds
in
xor
aas
neg
hlt
cmp
mov
je
jbe
xchg
mov
mov
cmp
and
mov
xchg
pop
jl
scas
add
mov
lods
pop
pop
test
push
aas
inc
sbb
fsubs
pushf
scas
jno
addr16
test
out
test
sub
es
test
push
push
xchg
jmp
or
cmpsb
iret
or
dec
out
cmc
mov
lods
je
cmpsb
jl
sti
or
std
test
sbb
xchg
outsl
jne
mov
adc
inc
jno
imul
mov
cwtl
out
xchg
int3
cmp
mov
cmpsb
std
dec
cmp
test
cmc
xor
inc
pusha
push
adc
sti
jecxz
push
outsb
loope
xchg
push
jge
inc
or
add
cmp
add
add
add
add
xorl
xor
movl
cmp
jne
and
mov
mov
add
andl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
jmp
mov
gs
stos
stos
xchg
xchg
sub
jle
movsb
jg
jle
outsl
pop
rcr
gs
data16
sbb
shll
es
mov
jnp
dec
insb
xchg
mov
aas
sub
iret
xchg
pop
mov
fs
xchg
add
mov
pushf
dec
std
and
xchg
fs
jmp
imul
stc
lret
fcmovbe
sbb
fidivs
pop
fdivs
ss
aad
cld
cmpsb
dec
mov
mov
outsb
aam
mov
mov
inc
ret
adc
cwtl
ss
inc
int3
invlpg
repnz
adc
test
inc
mov
push
stos
cld
stc
in
add
jo
mov
fwait
xchg
out
shll
xchg
outsb
and
in
jmp
mov
outsl
xor
int3
hlt
outsl
std
enter
or
leave
xchg
lods
pop
shl
mov
sti
inc
inc
mov
mov
ds
jl
fiadds
stos
jb
andl
in
xor
jp
push
negb
pop
aam
fwait
lods
call
outsb
jg
xor
leave
push
jl
rcl
aaa
stc
add
adc
mov
cmpl
jl
xor
pop
movsb
pop
inc
outsb
mov
adc
addr16
aam
shrb
push
ret
lret
mov
int3
les
aam
or
shrl
pushw
sbb
pop
dec
cmp
and
popa
jae
into
faddl
cltd
and
mov
adc
fs
jne
pop
hlt
pop
add
jmp
mov
xor
add
leave
ret
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
popf
dec
dec
add
add
add
add
inc
add
add
cmp
add
sub
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
lock
add
add
add
outsb
push
popa
addr16
push
js
outsl
ss
je
jo
aas
inc
outsb
gs
je
push
gs
push
inc
inc
pop
inc
push
inc
dec
pop
dec
cmp
add
add
sbb
add
adc
add
add
add
shlb
add
add
add
and
add
mov
add
test
add
scas
xor
add
add
mov
add
add
add
add
and
add
add
add
cmp
add
and
add
mov
add
add
add
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
xchg
add
imul
ja
jae
insl
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
outsb
jbe
add
jb
push
jae
jb
arpl
add
add
jb
jo
add
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
lds
jo
imul
add
outsl
jb
add
data16
outsl
outsl
jb
lods
add
js
imul
add
jo
pop
insw
outsl
fs
xor
je
insb
add
or
je
ja
jo
gs
add
add
jb
arpl
add
pop
pop
arpl
insl
outsl
fs
push
add
imul
addr16
add
xor
arpl
outsl
imul
test
jae
popa
arpl
add
js
imul
pop
popa
insl
jae
pop
gs
je
add
add
arpl
jo
add
xchg
pop
imul
insl
add
outsb
jne
add
add
jb
bound
add
insl
bound
gs
add
sbb
jae
jo
imul
data16
add
pop
pop
arpl
inc
imul
ja
jae
arpl
add
add
js
je
imul
jae
add
call
js
je
add
add
je
add
fadds
jae
je
outsl
arpl
add
gs
jae
jb
popa
je
gs
add
mov
data16
imul
gs
outsl
jb
add
popa
je
insb
add
jb
pop
pop
addr16
popa
imul
sub
arpl
arpl
add
add
insl
outsl
jbe
add
dec
push
push
inc
push
push
cs
insb
add
mov
imul
outsl
ja
jo
popa
je
add
nop
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jne
jae
jb
mov
imul
popa
bound
add
outsb
fs
gs
popa
addr16
js
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
dec
outsl
popa
fs
arpl
push
add
bound
jbe
outsb
je
test
fs
imul
add
je
arpl
add
outsb
fs
imul
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
fs
outsb
jo
je
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
jb
outsb
je
inc
add
imul
je
insb
popa
jae
dec
outsl
outsb
addr16
add
outsl
outsb
imul
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
ja
arpl
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
je
insb
imul
jb
movsb
add
pop
outsl
outsl
insl
gs
roll
outsb
popa
bound
imul
sub
inc
push
ja
jb
jne
push
add
inc
add
imul
arpl
outsb
add
add
inc
fs
jae
push
imul
arpl
add
icebp
add
jae
dec
gs
popa
addr16
add
out
add
imul
jae
addr16
add
dec
add
je
jb
jo
add
inc
add
outsl
jae
inc
gs
je
jo
add
add
jo
imul
imul
push
imul
popa
jae
inc
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
sahf
add
push
arpl
jo
jns
mov
push
outsl
push
outsb
imul
add
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
gs
popa
jb
outsb
je
bound
inc
jb
popa
je
push
imul
inc
add
popa
insb
imul
je
add
push
gs
imul
outsb
addr16
add
adc
gs
jae
inc
inc
add
inc
push
dec
outsb
jne
add
add
arpl
outsb
jne
je
insl
add
add
outsb
dec
arpl
add
mov
imul
imul
add
jae
popa
addr16
outsl
js
add
ja
outsb
jne
popa
jb
inc
add
je
outsl
jb
addr16
jne
fs
imul
add
jae
jb
outsb
je
push
add
mov
imul
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
jae
outsb
arpl
jns
je
je
add
or
inc
imul
jae
push
outsb
imul
jo
popa
je
push
imul
or
inc
gs
inc
inc
js
stos
add
fs
jne
jae
jb
add
gs
arpl
insb
insb
push
popa
outsb
add
cmp
inc
push
jo
jb
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
push
add
je
arpl
insb
insb
push
popa
outsb
add
insl
add
je
imul
outsb
addr16
add
addb
outsb
data16
popa
je
push
arpl
add
insl
outsl
jbe
dec
outsb
jne
add
ja
outsb
imul
arpl
das
add
je
arpl
gs
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
popa
insl
gs
arpl
add
inc
imul
jae
popa
addr16
add
xor
inc
push
gs
add
inc
outsl
jb
addr16
jne
fs
imul
add
imul
jne
dec
fs
add
push
add
je
jb
jo
add
dec
add
je
outsb
jne
scas
add
fs
jne
jae
jb
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
imul
outsl
arpl
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
push
add
je
popa
jb
outsb
je
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
gs
imul
sub
inc
push
ja
jb
add
out
add
imul
jae
addr16
add
jne
inc
gs
imul
js
inc
add
add
je
gs
popa
addr16
add
jb
gs
push
add
push
je
imul
push
push
outsb
outsl
ja
jae
outsb
arpl
add
popa
jb
jo
gs
add
sti
add
dec
outsb
push
arpl
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
lahf
add
jo
je
push
popa
addr16
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
sub
push
outsb
fs
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
ja
je
je
push
add
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
fs
je
imul
push
gs
arpl
jo
jns
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
cmp
inc
push
jo
jb
jne
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
xor
jb
outsl
dec
gs
push
add
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
push
push
inc
push
xor
cs
insb
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
je
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
ja
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
pop
add
outsl
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
push
popa
insb
gs
add
gs
arpl
imul
into
add
insb
arpl
push
arpl
jp
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jo
outsl
fs
pop
add
je
popa
jns
jne
add
add
je
imul
add
jbe
inc
inc
add
pop
add
je
popa
jo
outsl
fs
mov
popa
je
dec
inc
push
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
out
add
je
popa
insb
gs
gs
outsb
je
imul
gs
imul
outsb
jae
outsl
outsb
inc
js
add
add
jb
je
push
add
je
inc
imul
bound
imul
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
gs
outsl
add
clc
add
je
gs
inc
insb
imul
push
popa
je
insb
je
add
inc
imul
test
inc
jb
popa
je
push
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
aam
push
gs
imul
outsl
jb
add
add
je
dec
push
xor
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
imul
addr16
js
add
popa
je
push
outsb
add
push
imul
dec
jb
inc
js
add
add
arpl
add
mov
push
outsl
insb
jns
outsl
outsb
add
popa
je
push
arpl
outsb
add
gs
inc
js
outsb
je
outsl
imul
jo
inc
fs
outsl
outsb
je
gs
jne
arpl
add
inc
add
je
gs
arpl
popa
jo
add
inc
gs
imul
add
je
gs
dec
jne
push
add
popa
je
push
popa
je
gs
inc
jb
jae
add
into
add
arpl
gs
insb
imul
lds
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
inc
dec
xor
cs
insb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
inc
imul
jb
popa
je
push
popa
imul
insl
gs
add
and
dec
popa
jo
imul
insb
add
push
gs
push
push
jb
outsl
jb
je
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
add
inc
popa
fs
gs
fs
je
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
xor
push
push
inc
data16
dec
popa
jae
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
mov
inc
jb
inc
imul
dec
push
dec
add
dec
popa
imul
outsw
add
add
gs
je
inc
jbe
outsb
je
add
outsb
add
outsb
fs
gs
jne
arpl
js
add
push
gs
fs
imul
gs
gs
jo
popa
je
inc
add
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
bound
inc
gs
gs
jo
popa
je
push
add
rolb
inc
jb
popa
je
inc
imul
gs
push
dec
outsl
arpl
add
add
jne
push
gs
jne
arpl
popa
insl
gs
add
repz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
insb
gs
imul
jae
gs
push
imul
inc
jb
popa
je
push
gs
outsl
je
push
push
add
jns
inc
gs
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
dec
add
jne
jo
outsb
fs
push
add
add
jae
jb
jo
outsb
push
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
or
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
insb
push
outsb
ja
outsb
add
je
insl
dec
popa
insl
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
popa
jb
push
inc
add
push
gs
imul
jne
push
imul
add
insl
outsl
jbe
inc
imul
jns
add
ret
add
jae
jb
insl
jo
add
dec
add
insb
gs
imul
arpl
inc
imul
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
addr16
pop
dec
popa
jns
push
imul
je
inc
push
insb
pop
add
add
or
inc
add
inc
add
cmp
call
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
mov
cmp
mov
ds
add
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
inc
add
inc
add
cmp
mov
cmp
add
cmp
sbb
inc
add
test
sarb
add
or
inc
add
fnsave
inc
add
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
hlt
add
pop
dec
imul
pushf
clc
sahf
jmp
add
lods
cmp
pushf
or
addr16
add
inc
add
add
add
add
outsl
add
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
add
dec
add
imul
add
dec
add
add
insb
add
insb
add
add
dec
add
inc
add
imul
push
add
imul
add
add
imul
add
imul
add
add
dec
inc
dec
dec
push
fs
dec
dec
imul
push
inc
outsl
imul
data16
push
imul
add
add
add
add
inc
add
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
add
add
or
add
shll
and
inc
push
outsl
push
mov
cmp
add
add
add
popa
push
push
push
dec
je
push
jne
popa
jns
pop
je
push
jp
jp
js
imul
push
dec
dec
outsb
push
pop
dec
dec
dec
dec
je
add
add
insl
push
dec
jne
outsb
imul
pop
outsb
jbe
jns
dec
je
bound
push
arpl
push
imul
add
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
insb
jb
inc
push
push
inc
insb
inc
inc
jae
dec
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
dec
imul
inc
jp
pop
inc
jae
dec
dec
gs
jne
add
cmc
jnp
jnp
cmc
lcall
and
pop
aaa
push
arpl
roll
add
add
sub
pop
fistl
pop
mov
adc
test
xchg
add
sbb
pop
insl
sub
shll
mov
loop
xchg
popf
jp
repz
out
mov
cltd
in
loop
mov
dec
test
cmp
arpl
jo
jmp
sub
shlb
adc
sub
shl
ret
or
cmp
jae
rclb
hlt
iret
insl
xchg
ja
fstp
int
xor
and
rcll
scas
pop
mov
mov
dec
xchg
in
test
jp
stc
cmp
int
std
pop
clc
cltd
jne
cmpsl
lret
pop
sub
jnp
sub
dec
ljmp
push
mov
andb
pop
fwait
out
sub
clc
jge
and
sub
jg
xchg
test
int
repz
mov
cmp
imul
jle
mov
ljmp
cwtl
in
lret
dec
cs
std
dec
sbb
xchg
add
pop
ficoml
in
jle
lcall
pop
loopne
add
add
add
push
mov
lods
fsubs
icebp
xchg
repnz
imul
push
mov
xchg
fstpl
cli
mov
int3
ljmp
xchg
movsl
stc
or
mov
pushf
pushf
sub
cmpsb
pop
jno
outsl
std
test
imul
daa
jns
shrl
mov
into
stc
pop
mov
leave
push
pop
iret
or
mov
xchg
fcmove
mov
push
shll
mov
mov
jmp
push
xor
arpl
in
roll
jne
test
xor
insb
mov
push
mov
loopne
in
iret
and
add
outsl
pop
test
pop
sub
and
mov
dec
stc
pop
add
mov
mov
inc
xchg
add
inc
jge
or
sub
jp
jecxz
clc
mov
pop
push
push
or
inc
repnz
fsubs
add
adc
mov
mov
push
xorl
add
add
pop
jae
xchg
leave
mulb
sub
in
aas
mov
pop
addr16
xor
sbb
pusha
mov
or
dec
push
jge
sub
call
or
clc
cmc
dec
repz
mov
lret
dec
daa
rorb
dec
xchg
flds
imul
addl
popf
cmp
sub
in
lret
push
dec
cmp
mov
adc
mov
adc
fwait
pop
or
arpl
and
push
and
mov
xor
icebp
inc
out
mov
xchg
fsincos
test
pop
scas
lods
jge
jp
add
in
xchg
add
add
xchg
pop
test
sahf
xchg
adc
mov
dec
add
dec
sbb
xchg
and
mov
add
jg
in
lods
rorl
outsb
aaa
xchg
sub
add
add
subl
roll
int3
mov
add
add
add
insl
int3
sub
and
sarb
push
add
cmp
mov
and
sub
and
jae
out
or
mov
ret
dec
mov
sbb
ss
mov
add
jns
inc
or
out
testb
xor
mov
aas
sahf
cmpsb
or
stos
push
jmp
nop
test
mov
outsb
jne
and
mov
inc
negl
pop
jne
movsl
ret
pop
enter
jo
mov
lea
jb
iret
add
shrb
jmp
mov
clc
ljmp
or
insb
and
mov
push
and
push
or
js
cltd
test
sbbb
fdivr
test
mov
cmp
jno
lret
push
mov
sub
or
outsb
fiaddl
sahf
dec
sbbl
movsb
outsb
in
push
sbb
lods
sub
mov
pop
jae
or
pop
dec
or
jno
and
add
add
mov
cmc
sti
ja
repz
lret
outsl
dec
sarb
adc
lock
inc
mov
xor
xchg
mov
in
lret
pop
mov
sub
xor
pop
cmc
lcall
aas
fiaddl
sti
icebp
or
xchg
test
imul
cltd
add
les
pop
clc
lcall
lret
sbb
out
shll
stc
sbb
imul
fsts
mov
iret
aaa
adc
inc
in
jmp
cmp
xchg
xor
mov
xchg
mov
rcr
ja
push
xlat
sarb
xor
pop
cld
mov
cmpb
pop
loope
sbb
test
adc
push
adc
push
sbb
stc
push
mov
fcom
mov
dec
or
xchg
pop
addl
and
xchg
es
addr16
xchg
mov
dec
xchg
cmp
sbb
movsb
dec
push
fidivrs
push
leave
mov
jg
cmc
insl
cmc
out
lcall
enter
add
push
add
add
inc
jbe
cmp
test
push
shll
inc
inc
xor
adc
aam
lods
cmp
cs
cmp
gs
xchg
sbb
dec
jae
pop
in
jp
jo
sub
mov
popa
hlt
cmp
fs
jno
lcall
clc
mov
sti
mov
ficoms
lds
subb
xchg
and
pop
fcomps
outsb
cltd
mov
push
pop
xchg
sub
fwait
cmp
bound
cs
and
dec
xchg
xor
out
inc
leave
cltd
inc
call
mov
cmp
cs
jp
data16
nop
mov
and
and
insl
xor
xlat
int
sub
and
je
cmp
xor
push
mov
aaa
jle
in
add
leave
imul
mov
cmpsl
leave
cmp
andl
xor
lcall
mov
fwait
jp
inc
jle
add
outsl
jle
aas
mov
cmp
hlt
xlat
add
add
add
or
in
xor
sbb
push
sbbl
imul
sub
cmp
adc
push
stos
repnz
xor
jmp
mov
sbb
test
inc
fwait
out
iret
sbb
sub
add
add
push
dec
movsb
mov
stc
jecxz
bound
icebp
adc
adc
and
movl
lods
xlat
xor
outsl
data16
xor
xchg
push
jbe
push
in
cld
int3
push
push
push
adc
mov
mov
out
dec
pop
lahf
mov
or
popf
mov
cmp
cmpb
jo
inc
cli
sbb
or
fdivrs
sbbl
lret
inc
mov
dec
push
sbb
in
mov
in
mov
inc
aas
cmpb
in
fsubs
sub
inc
push
xor
jl
xchg
andl
dec
push
mov
pusha
test
push
pop
outsb
pop
or
and
scas
sti
jle
pop
push
pop
pop
sti
mov
add
add
cwtl
dec
jle
fcmovne
lcall
and
adc
push
cli
dec
movl
jl
mov
dec
jle
push
jl
jg
ret
lcall
push
out
ja
mov
inc
lods
jnp
rcl
insb
cmpb
test
push
or
pusha
fisttpl
jnp
movsl
sbb
sub
mov
fnstsw
add
popf
gs
je
incb
fdivrs
adc
clc
or
insb
or
cs
mov
sbb
pop
out
or
aad
and
outsb
fdivp
ret
lcall
jo
xor
cwtl
cwtl
or
jno
xchg
cmp
pop
jmp
sub
sub
mov
pop
ja
xchg
xlat
cmc
addr16
push
dec
sarl
fidivl
fidivl
adc
cmp
adc
ja
mov
xor
out
cmp
lahf
fnstcw
ss
lahf
stc
bound
shl
cld
flds
add
add
push
inc
arpl
xchg
mov
insb
mov
adc
sub
push
data16
dec
adc
jg
les
or
arpl
add
add
pminsw
sarl
adc
lods
fucom
cmpsb
imull
fistl
js
inc
add
sarb
cmp
js
imul
sub
dec
xor
sahf
leave
cmpsb
shrb
fwait
into
dec
sbb
scas
jae
sti
jle
mov
idiv
repnz
movsl
scas
neg
mov
push
mov
aas
in
stc
mov
jbe
hlt
sahf
or
pushf
mov
aad
bound
lods
mov
and
call
enter
jmp
adc
xchg
ljmp
es
xchg
mov
rclb
mov
mov
add
lahf
mov
gs
push
clc
gs
xchg
sbb
pushf
push
dec
push
push
jle
add
arpl
mov
stos
jbe
xor
and
in
lods
call
xor
push
jl
jle
insb
out
adc
and
add
add
add
add
imul
adc
push
scas
fucomi
in
push
xor
jp
test
or
dec
cmp
in
arpl
call
xchg
jno
pop
xor
sti
mov
jne
or
pop
jmp
push
jecxz
xor
pop
stc
cld
mov
dec
in
mov
repnz
add
ja
add
sbb
add
dec
push
xchg
mov
adc
sub
call
lods
je
int
jge
xor
push
lret
lea
xor
in
xor
mov
aaa
jmp
or
lock
mov
mov
lods
inc
dec
xchg
mov
sbb
je
les
dec
mov
or
out
je
sbb
pushl
lret
sub
pop
es
mov
sub
test
push
mov
sbb
shld
cmp
pop
iret
aas
loopne
movsl
mov
add
add
fwait
mov
in
xor
adc
add
add
add
add
fs
fidivs
fsubr
cmp
mov
and
call
sub
mov
pop
subl
xlat
lcall
mov
sub
mov
leave
lea
jno
lahf
sbb
test
cs
or
adc
aad
repnz
dec
test
mov
mov
shlb
mov
repz
ss
into
mov
mov
mov
lret
jp
ds
mov
std
fs
add
stc
cwtl
inc
insl
je
cmp
repnz
fisubl
xchg
mov
add
or
and
and
cmp
cli
mov
scas
icebp
fsubl
xlat
dec
mov
or
arpl
jl
add
mov
jp
faddl
insl
sub
test
dec
test
cltd
mov
stos
je
lret
clc
push
out
mov
aaa
data16
jne
mov
lcall
add
add
add
or
jge
mov
push
cmpsl
cwtl
leave
jecxz
cmpsb
mov
dec
pop
aas
add
sarb
mov
aam
inc
push
mov
icebp
sti
arpl
xchg
dec
cli
int3
fsubr
xchg
jne
les
cmp
adcl
test
stos
or
out
negb
jo
in
shld
shrl
or
mov
dec
mov
push
cmc
push
inc
mov
pop
out
or
iret
mov
fdivs
pop
push
stos
dec
iret
inc
loope
mov
pop
mov
mov
xor
xchg
inc
mov
adc
aad
fcompl
mov
push
call
fs
jne
and
adc
repz
or
mov
push
add
fbld
rcrl
repz
push
jg
push
dec
dec
pop
hlt
push
fldl
jp
cmp
add
add
jnp
sti
xchg
lahf
mov
jo
or
add
add
add
xchg
lret
je
nop
pop
fstl
adc
jl
lcall
test
xchg
xor
add
iret
push
push
or
push
outsb
scas
adc
fisubs
cmpsl
inc
push
inc
sub
repz
repz
mov
fwait
adc
in
cmpsb
mov
repz
jne
jno
add
mov
xchg
push
jmp
or
test
inc
gs
mov
add
cld
mov
or
xchg
sub
adc
mov
jmp
pushl
push
sahf
dec
mov
test
and
sbb
out
pop
inc
cmc
ficoms
dec
jae
sti
shl
ds
dec
iret
push
in
popf
repz
shl
jp
test
inc
lahf
pop
sahf
xchg
andb
dec
xor
daa
aam
xor
dec
mov
enter
imul
adc
push
sub
pop
sarl
mov
xor
filds
add
add
pop
fimull
add
push
and
pop
add
shll
add
cmp
xchg
imul
dec
dec
push
or
jmp
jecxz
inc
ret
ret
xor
lcall
lahf
ret
jmp
mov
inc
push
mov
fisttpl
or
ret
movsl
mov
mov
in
ds
movsb
mov
push
xchg
cmpsb
test
lds
nop
xchg
cmp
enter
adc
sbb
pop
sub
fsubrl
cmp
dec
sbb
fwait
jne
sbb
cmpsb
sbb
add
icebp
mov
pushf
aad
inc
mov
push
adc
push
sbb
add
std
imul
cmp
aaa
aad
mov
jbe
or
icebp
inc
bound
xchg
arpl
inc
mov
mov
dec
ret
mov
outsl
insl
lock
std
repz
mov
pop
adc
add
add
add
push
out
subl
mov
stos
jo
and
arpl
push
dec
cmp
xchg
in
into
jg
mov
repnz
outsb
addb
mov
outsb
push
push
inc
xor
cltd
popa
cli
pop
outsl
pop
ss
je
test
jae
ret
insb
ja,pn
and
xchg
arpl
push
out
adc
inc
int3
xor
xchg
sub
mov
mov
xchg
fnsetpm(287
adc
jbe
sub
fimull
mov
xchg
inc
test
mov
or
cld
inc
lahf
xor
mov
loopne
ret
xor
or
jne
das
mov
sub
arpl
sbb
xor
pop
lds
data16
arpl
xor
push
sbbl
cmpsb
sub
dec
in
cmc
cmpsb
fdivrl
fisubrs
inc
imul
icebp
leave
mov
lahf
in
sub
cmp
arpl
je
adc
test
loope
add
add
push
mov
in
cmpsl
daa
insl
je
cltd
repnz
adc
daa
lret
dec
leave
scas
jge
xlat
mov
stc
ss
lea
insb
cs
mov
scas
les
lods
lods
inc
cmp
sub
in
jo
xchg
cmc
sub
push
fnstenv
outsl
mov
fistps
mov
insl
push
xlat
clc
cmpsl
mov
adc
dec
mov
adc
push
inc
enter
cs
insb
mov
rcll
inc
and
lods
xlat
fsts
inc
adc
lods
inc
xchg
aas
mov
loop
sahf
out
push
jne
push
dec
jo
insl
cwtl
jbe
mov
mov
int3
push
repz
daa
scas
pop
and
jge
adc
xchg
dec
dec
cmpsb
cmc
adc
out
sub
jecxz
imul
adc
test
xchg
adc
add
sbb
dec
xchg
jno
testb
add
insl
lcall
mov
inc
sub
or
add
add
test
fisttps
jmp
pop
lret
sbb
stos
dec
flds
mov
jmp
xor
or
fucomp
insb
ss
or
or
nop
cli
and
mov
mov
mov
add
sbb
mov
mov
fucom
cltd
xor
add
add
dec
mov
mov
out
mov
lods
ds
jbe
iret
push
outsl
lahf
xor
xchg
push
mov
jbe
iret
testb
and
daa
sbb
cwtl
dec
mov
mov
scas
mov
xor
ss
sub
rolb
xchg
lret
test
movsb
sub
push
cmpsb
jge
loope
mov
inc
adc
jp
jo
sti
dec
dec
mov
stc
lods
pop
mov
cmp
pop
int3
dec
cmp
push
std
or
xchg
icebp
mov
push
in
pop
lock
loop
add
add
xchg
in
mov
incl
rcll
jecxz
add
add
psrld
enter
mov
in
das
cltd
icebp
pushf
dec
push
sarb
cmp
into
lods
in
insl
aaa
inc
push
addl
add
fisubrs
mov
in
stos
inc
mov
ret
cltd
add
add
cwtl
adc
or
jle
and
ror
jg
lea
int
dec
mov
xchg
lret
hlt
jns
jecxz
in
ret
pop
movsl
jp
fstps
and
xor
mov
data16
les
push
or
add
pop
pusha
sbb
int3
ret
je
ljmp
inc
out
mov
ret
push
xor
push
orb
xor
adc
mov
jl
pop
fldl
jno
sub
fists
push
jns
push
imul
cmp
push
pop
clc
push
rorl
mov
pop
adc
ffreep
ds
pop
adc
or
xchg
shr
fwait
push
jecxz
xchg
pop
mov
adc
add
add
sub
in
negl
sub
movsb
cmp
shll
add
add
jecxz
sahf
scas
imul
mov
xor
int3
jo
and
cmp
mov
cwtl
mov
lock
mov
inc
and
mov
sbb
cmc
je
sub
push
insb
pop
sub
mov
mov
stc
sbb
mov
imul
jne
test
adc
mov
mov
mov
insb
dec
sub
pop
jmp
xchg
adc
ret
push
dec
lret
fstps
pop
pop
cmp
dec
fucomip
inc
dec
lods
in
jmp
cmpsl
enter
lods
js
dec
fsts
pop
jns
pop
aad
cmp
jp
adc
lahf
xchg
into
sbb
scas
pop
mov
xor
xchg
ficomps
and
and
pop
popa
mov
cmp
repz
mov
inc
inc
clc
es
negl
xlat
and
mov
mov
push
cwtl
cld
dec
mov
push
dec
fistpll
stc
dec
push
fdivrl
add
sbb
in
add
add
cwtl
outsb
pop
in
inc
cmp
jno
or
arpl
dec
mov
hlt
pop
push
xor
enter
dec
sbb
xor
aad
sbb
push
or
xchg
mov
jp
jmp
gs
lea
xchg
mov
and
fsubrl
rcll
dec
test
add
aaa
xor
add
sub
ficomps
cs
cmpsl
mov
rcrb
or
jns
fstpl
insl
pop
adc
mov
sub
cmp
int
add
xor
xor
jmp
xor
aam
cmp
inc
cmp
repz
jg
ss
or
sbb
jne
add
adc
mov
sub
push
popa
inc
cld
add
sahf
dec
cmpsl
mov
add
xchg
loop
ljmp
mov
div
jl
sti
shll
push
in
in
xor
and
cmp
mov
push
push
push
mov
mov
add
add
add
aaa
movsl
dec
movsl
es
mov
popl
sbb
outsl
pop
sub
adc
shrl
push
push
push
in
popf
cmc
mov
ret
jmp
pop
inc
iret
inc
iret
ss
adc
out
outsb
xchg
movsl
adc
movsb
xchg
adc
mov
mov
insl
ljmp
cwtl
testb
in
fdivl
ds
mov
stos
in
scas
cmp
aam
and
push
sbb
lcall
mov
pop
in
cld
test
fiaddl
jle
out
mov
push
rcll
push
mov
das
aam
jne
ja
popf
mov
movsl
push
incl
call
push
push
pop
call
jmp
subb
xlat
mov
in
xchg
and
mov
imul
sub
sbb
leave
flds
add
add
repnz
add
pop
lcall
les
push
xchg
xor
add
add
add
dec
sub
dec
adc
push
sti
loope
insl
lcall
xchg
imul
outsl
mov
ljmp
dec
and
push
sbb
das
add
sub
iret
or
and
pop
imul
dec
dec
cmp
xchg
lods
rol
or
add
out
icebp
jge
jmp
xchg
dec
push
inc
jb
daa
cltd
call
retw
inc
mov
xchg
pop
pusha
cmpsb
test
mov
roll
or
jp
pop
pusha
dec
daa
adc
movsb
rol
mov
xlat
popa
and
out
inc
bound
push
mov
sarb
xchg
xchg
int
fld
mov
clc
mov
stc
and
push
in
movsl
lods
cmp
mov
adc
in
sbb
and
dec
add
xor
ret
inc
ficomps
add
shl
pushf
inc
push
add
fadd
shr
or
pop
pop
mov
push
decl
dec
shlb
xor
add
add
add
aam
loopne
mov
adc
inc
add
push
pop
popf
mov
push
arpl
fsts
inc
jmp
outsb
insb
test
js
adc
push
push
leave
mov
or
or
stos
mov
mov
mov
push
pop
xor
ja
add
mov
push
push
mov
mov
cmp
adc
popa
lds
cmp
mov
sbb
push
pop
inc
or
push
loope
xor
lods
out
cld
cli
push
fsubs
add
dec
push
xor
outsl
cmpsb
jmp
sbb
stos
or
push
fildll
cmp
pop
jae
lds
stos
jnp
fisubrl
mov
mov
mov
in
pusha
pop
rol
and
adc
dec
push
push
pop
pushf
int
mov
push
popf
test
inc
scas
ror
xchg
sub
cmpl
arpl
sbb
inc
out
and
cmp
sti
fsubp
inc
push
sub
sarb
jmp
add
in
cld
and
sbb
jmp
sbb
daa
mov
jb
fimull
aam
mov
fwait
daa
and
jns
lahf
lods
lds
lret
sub
pop
xchg
fcmovbe
xchg
mov
pusha
adc
mov
sbb
xorl
nopl
sarb
insl
push
cmp
test
sahf
xchg
add
in
cmpsb
mov
mov
leave
inc
mov
adc
sub
or
xchg
and
cwtl
cmc
sub
mov
sbb
push
bound
fsubs
movsl
data16
push
clc
into
dec
dec
in
cmpsb
cmp
sbb
std
sbb
sbb
lret
sahf
pop
mov
negb
and
aad
push
test
sub
cli
mov
mov
subl
xor
clc
outsb
imul
add
push
jne
addr16
pop
fsubrs
push
loope
add
add
outsb
xor
mov
lcall
ljmp
xchg
and
cmp
push
loop
das
int
bound
popa
xchg
sbb
add
push
mov
shll
jle
aad
adc
fcmovne
and
push
leave
fdivl
mov
ds
loop,pt
push
inc
mov
cmp
jg
fmull
mov
jmp
xor
arpl
pop
fsubr
and
enter
sub
adc
lods
js
sub
pushf
and
sbb
insl
lcall
jb
mov
dec
adc
dec
pushf
cmp
xchg
out
sti
movsl
adcb
push
jmp
jle
repz
inc
push
aam
outsl
shl
sahf
in
cmp
les
add
xchg
pop
lahf
pop
aad
out
rol
xchg
sbb
loopne
das
es
es
gs
adc
cmc
mov
rcrl
inc
clc
push
sarl
add
add
inc
ror
lock
jnp
xor
xchg
divl
add
add
add
mov
cmp
gs
test
xchg
mov
lock
arpl
jp
push
aad
fucomp
mov
mov
jg
dec
and
jg
call
and
jnp
xchg
add
sti
xchg
bound
adc
xor
push
inc
cmp
mov
jno
xchg
rclb
filds
daa
shl
ja
cmpsb
orl
sahf
outsl
aam
sbb
iret
dec
jb
mov
adc
cmp
int
mov
mov
cmp
loop
fidivrl
sbb
movsb
jae
addr16
stos
inc
xchg
fs
xchg
inc
scas
loop
and
pop
incl
hlt
jbe
mov
adcl
push
sahf
test
push
rcl
aas
jle
inc
sub
jge
enter
lret
rcrb
mov
mov
insb
push
adc
push
test
add
xor
fstl
xor
addr16
mov
pop
das
mov
add
and
repz
fisubs
div
insb
inc
in
add
add
add
nop
cltd
lret
cmpsl
inc
hlt
add
pop
cmpsl
aad
out
fidivrs
mov
mov
or
mov
les
pop
das
xchg
out
dec
test
cmp
dec
movsb
shrb
js
repnz
and
movsl
push
sub
mov
aad
or
repnz
pusha
out
inc
mov
pop
insb
les
and
sahf
test
js
stos
daa
add
or
sbb
addps
leave
repz
xor
lock
js
out
call
mov
add
xchg
xchg
xchg
sbb
sub
fiaddl
dec
and
in
out
xchg
xchg
test
mov
or
int
jmp
mov
js
pop
xchg
pop
mov
out
pop
loope
cmpl
lods
sti
clc
mov
jb
lea
or
into
ret
adc
out
sbb
mov
dec
in
add
add
add
aam
pushf
or
addb
xchg
xor
insb
sbb
mov
inc
cmp
lahf
inc
adc
das
cmpsb
pop
fimull
cmovbe
and
out
mov
jmp
ds
loope
push
sub
ret
ja
mov
out
xorl
in
movb
sbb
or
inc
outsb
mov
neg
dec
jnp
jg
into
imul
inc
sbb
js
shl
lret
inc
jp
imul
mov
cs
popa
adc
and
iret
xchg
insl
daa
xchg
aad
test
sahf
inc
negl
jg
mov
adc
mov
jae
ja
loope
mov
or
js
xchg
pop
xorl
jns
fs
xchg
xor
sub
movaps
jo
bound
es
xlat
mov
popa
pop
add
roll
shrl
cmc
scas
sub
mov
dec
out
add
add
add
leave
call
popa
pop
pop
movsb
add
cmp
out
out
jo
out
shr
rolb
negl
rcrl
fisttpl
jge
cmp
jns
loope
sub
mov
sahf
outsl
mov
jbe,pn
imul
fnstcw
jnp
popa
mov
cmc
in
int3
inc
add
ss
mov
push
sbb
ljmp
scas
inc
lods
sbb
mov
pop
or
mov
lcall
cmp
xchg
sub
mov
orb
push
mov
lcall
cs
movsl
stc
insl
movsl
jb
push
jg
lods
lods
repnz
js
push
fwait
in
pop
scas
pop
xchg
add
mov
mov
loop
push
mov
cltd
push
pusha
inc
ret
fdivr
imul
jo
or
push
and
arpl
push
or
adc
mov
xchg
int
leave
ss
lret
pusha
rorb
cmpsb
mov
pop
stos
push
out
add
add
add
or
inc
add
pop
sub
sti
sub
sub
add
mov
hlt
or
jl
push
jno
jbe
xor
fwait
inc
jle
xor
cld
negl
adc
pusha
pop
ja
mov
repz
fstpt
enter
lods
inc
outsl
jl
sahf
insl
jnp
and
xchg
mov
lcall
sbb
mov
inc
push
push
bnd
and
popl
rolb
xor
pop
inc
lds
test
mov
add
lcall
data16
and
pop
adc
sbb
sub
adc
lret
imul
cmc
cmp
sbb
and
jno
ds
mov
mov
mov
xchg
sub
jp
inc
orb
insl
sbb
lahf
leave
sub
push
das
and
ja
movl
shl
test
rolb
add
jecxz
push
testl
mov
rclb
add
add
mov
mov
outsl
xchg
and
fisttps
es
paddd
cmp
add
dec
test
mov
lods
jbe
xchg
into
sub
push
pop
sbb
cwtl
sbb
push
adc
pop
jo
adc
or
jmp
das
adc
test
mov
leave
inc
cmp
adc
mov
popa
mov
pop
push
or
pop
mov
es
mov
dec
dec
cmp
inc
inc
ss
mov
enter
loope
lods
dec
es
lcall
mov
mov
test
inc
loopne
lcall
dec
shrl
sub
bound
lea
lods
and
jmp
int3
push
jl
mov
iret
jae
pop
add
lret
xchg
out
xchg
mov
out
enter
cmpsl
inc
ret
popa
rolb
cli
mov
jg
mov
xchg
repnz
mov
out
dec
lret
enter
add
add
xchg
mov
mov
pop
das
pusha
cmp
icebp
add
add
add
cmp
bound
data16
jne
jno
mov
xor
ja
addr16
inc
cli
cmpb
mov
mov
inc
jge
jbe
inc
icebp
pop
loopne
xchg
lcall
notl
mull
xor
xchg
fbstp
cmovnp
shrb
push
lahf
inc
aas
sub
lcallw
adc
dec
test
xchg
cmp
mov
jno
and
das
xchg
jne
outsl
sbb
dec
xor
pop
jb
popf
jne
sbb
pop
dec
jl
ds
mov
xor
push
jecxz
mov
dec
mov
adc
pop
stos
loope
outsl
es
jecxz
ds
call
sub
not
or
movsb
fcmove
enter
sub
leave
cmc
mov
gs
inc
aad
mov
pop
cltd
pop
in
rcr
imul
es
repnz
xor
mov
hlt
enter
stos
mov
fucomi
xor
stos
hlt
pop
repnz
add
add
mov
ret
jae
add
adc
pop
ljmp
xor
insl
pusha
add
in
and
adc
test
aas
stos
scas
das
rcrl
sbbl
sub
dec
cmp
les
push
cmpsb
and
les
int
xchg
jne
in
fsub
sbb
push
aaa
rcr
dec
cltd
xchg
sub
or
lods
lahf
sub
outsl
loop
mov
mov
push
clc
push
or
mov
rcll
cmp
jmp
and
xchg
loope
dec
xchg
test
xlat
jge
fsubrl
loope
adc
mov
bound
inc
and
or
xchg
filds
rcrb
mov
xor
dec
lahf
call
mov
mov
jno
add
add
stos
mov
clc
or
xchg
adc
fcompl
mov
dec
nop
lea
iret
adc
ret
mov
jbe
push
inc
pop
jns
aas
loopne
sub
xor
pusha
repz
add
add
sbb
cmp
cmp
rolb
out
es
clc
adc
stc
out
xchg
lock
dec
subl
test
mov
mov
dec
push
enter
add
or
mov
push
sub
push
jecxz
xchg
xlat
cmp
or
cmpsb
jb
push
or
adcl
mov
mov
ja
adc
jns
pusha
sub
fidivrl
cmp
imul
mov
inc
fwait
js
inc
aaa
sti
dec
dec
xlat
xchg
sbb
xchg
imul
or
xchg
sbbb
lods
xor
and
sarb
fld
mov
fdivrs
aam
stos
mov
shlb
add
stos
mov
jns
and
pushf
adc
and
insb
nop
adc
out
aas
lret
ja
push
cmpsb
sbb
jnp
mov
jae
sub
hlt
add
add
add
test
push
cmp
int3
gs
xchg
dec
push
push
je
jmp
cld
test
les
les
add
lods
popa
test
sub
cmp
xor
daa
mov
push
sbb
in
inc
inc
les
xor
int3
inc
push
and
das
inc
mov
or
outsl
push
pushf
or
out
pop
sbb
jecxz
add
xchg
fs
movb
outsb
xor
jnp
imul
or
dec
mov
insb
push
sbb
push
dec
int3
lods
test
test
sub
sub
sbb
fwait
jno
sbb
rcll
xor
js
lds
scas
sahf
mov
or
aad
adc
lock
cmpb
scas
mov
stos
cmc
outsl
scas
leave
out
into
xchg
sbb
shrb
jecxz
add
or
aad
daa
or
out
or
push
push
imul
and
add
add
add
loope
rcll
insb
call
inc
arpl
and
pop
mov
inc
lret
sar
cltd
xchg
and
cli
pop
imul
pop
sbb
into
mov
je
popa
lret
loop
adc
or
push
or
rcrb
adc
inc
adc
jle
and
adc
ret
sbb
inc
lods
rclb
test
mov
mov
add
sub
jbe
pop
imul
mov
inc
mov
fisubrs
xchg
movsb
aaa
push
ret
sbb
sahf
test
jg
sbb
cmc
in
pop
lds
mov
fadds
sbb
mov
out
dec
xor
fsubrs
jmp
emms
xor
lret
mov
ret
cs
in
lret
ss
sub
std
add
pop
xchg
out
dec
data16
dec
out
rcrb
xchg
mov
idivl
test
cmc
jnp
testb
add
add
xor
jge
fstpt
ud1
lahf
test
xor
push
inc
pushf
mov
int3
cmp
sbb
leave
stos
mov
sbb
scas
outsb
jp
es
xorl
hlt
mov
test
sub
pop
imul
cltd
scas
cld
rep
int3
fsub
inc
push
push
gs
nop
outsb
add
cmp
stc
or
sbb
aad
fsub
cs
dec
mov
xor
je
jbe
jo
mov
jns
mov
lret
mov
ret
cld
adc
pop
jae
push
mov
push
xor
mov
or
dec
mov
add
sbb
jbe
pop
sub
mov
push
add
push
ret
adc
test
mov
fldcw
adc
sub
sarl
jmp
sub
enter
std
mov
jns
sub
loop
sub
add
add
mov
fisubl
imull
jo
add
add
add
test
adc
sub
cmpsl
jb
sbb
rorl
movsb
add
mov
xor
out
push
out
xor
into
push
enter
push
insl
sub
aam
and
adc
jae
out
add
pop
idivl
mov
ja
pop
cmpsb
div
adc
rclb
ljmp
aas
ficompl
inc
jmp
xor
dec
gs
jnp
lds
loope
sbb
jecxz
jno
sbb
add
pop
adc
mov
xchg
stos
into
add
jmp
adc
pop
xor
mov
sbb
ret
inc
outsl
xchg
aam
xor
fnstcw
test
out
mov
jbe
stos
push
pop
fs
inc
daa
fsubl
jp
cmp
adc
mov
xor
mov
insb
sub
push
add
loopne
test
adc
aam
clc
out
mov
mov
repnz
jle
lds
sub
inc
and
add
add
push
pop
push
jmp
rorb
clc
add
add
add
out
add
incb
push
jp
xchg
aas
inc
popa
cmc
fstpt
jmp
mov
mov
loope
sbb
push
dec
call
imul
imul
scas
mov
push
and
popa
or
mov
and
dec
mov
or
sub
loope
enter
dec
push
js
mov
lock
out
cmc
push
adc
push
adc
pop
mov
and
scas
lds
popl
repz
and
loop
add
imul
push
push
imul
dec
leave
jno
popf
or
mov
ret
fadds
dec
adcb
sahf
js
cld
gs
leave
movsb
or
aam
cltd
or
int3
iret
mov
cmpsb
cmpsl
pop
push
jg
lret
jo
cmp
jbe
outsb
jle
je
das
fnstcw
push
pop
push
roll
lret
adc
add
add
pop
lods
pop
cli
cmc
cmpsb
lret
inc
stos
in
js
add
add
add
out
in
fs
scas
in
push
test
pop
ret
add
cmp
add
inc
imul
int3
mov
sbb
adc
insb
aam
adc
adc
jmp
subb
jp
dec
mov
popf
scas
push
lock
or
mov
fs
dec
js
pop
aas
lret
fists
in
and
inc
fstps
outsb
sub
push
mov
jbe
lea
outsb
leave
movsl
sbb
mov
dec
lret
fisubs
lret
int3
aas
loope
mov
dec
stos
mov
and
push
lock
lea
mov
aaa
pop
ljmp
mov
mov
sbb
dec
stc
jbe
pop
pop
and
or
je
add
imul
cmpsb
add
fsubrl
push
sti
sbb
add
ss
loope
imul
das
stos
cltd
inc
popf
jae
out
xor
jl
add
add
add
lds
mov
dec
xchg
movsb
mov
or
mov
out
xor
out
sub
mov
pop
shrl
hlt
xchg
out
fwait
aaa
lahf
mov
in
fstps
sbb
xchg
pop
mov
hlt
mov
xlat
add
inc
xor
jge
push
inc
lret
not
sbb
addr16
dec
andl
cmpsb
xchg
jb
fstps
mov
mov
enter
movsl
mov
xchg
jae
adc
cmp
enter
ja
jbe
mov
push
bound
clc
rorl
cltd
lods
js
pop
fistpll
xor
inc
cmp
xchg
push
std
pop
cmpsl
sti
imul
ror
jp
add
mov
cwtl
jge
mov
xor
inc
es
ja
push
out
pop
jnp
int
add
mov
mov
xor
aas
fsubl
lods
mov
mov
jmp
pop
lcall
xchg
mov
nop
test
aam
int
aaa
das
aam
or
add
add
inc
loop
cmc
sbb
and
test
out
sub
mov
jle
mov
and
mov
les
popa
xlat
sub
adc
lahf
in
cld
inc
loope
mov
mov
fnstcw
sbb
fsts
xor
inc
fwait
xchg
loopne
adc
mov
enter
jl
icebp
lds
mov
jle
mov
xor
sbb
sub
sbbb
mov
test
xor
in
jb
or
and
push
mov
ret
dec
mov
pop
mov
or
icebp
aaa
pop
dec
xchg
jge
bound
sbb
push
jge
lods
dec
loopne
stos
sahf
sbbl
mov
cld
jle
add
dec
pop
loope
sub
sbb
scas
pusha
push
xchg
dec
xorl
add
dec
inc
pop
or
sbb
add
out
filds
add
add
arpl
addr16
sub
shll
add
add
add
sti
iret
cld
aas
lods
mov
cwtl
test
pop
repnz
loopne
and
in
sub
pop
sbb
das
in
add
sub
cld
lcall
jne
popa
insb
jl
mov
into
rcl
pop
mov
mov
aam
inc
xchg
xor
sahf
sbbl
sub
aad
cmp
outsb
xchg
push
dec
cmp
jp
jge
mov
xor
xchg
fmul
dec
mov
smsw
ds
mov
mov
loope
mov
mov
push
jne
pop
addr16
in
insb
and
adc
add
das
leave
sbb
shl
repnz
out
mov
bound
aaa
jne
inc
stos
fstl
outsb
jle
lahf
cmp
add
mov
aam
push
gs
push
cmp
cmc
xor
jle
or
push
sbb
arpl
popa
add
mov
fstpt
mov
sub
mov
sbb
out
cmp
cmp
pushl
xchg
xor
xor
icebp
xchg
mov
add
add
add
adc
push
push
cmpsb
mov
adc
push
inc
pop
call
add
std
popa
mov
push
lcall
lahf
dec
or
jae
inc
test
lcall
setne
outsb
push
push
and
cmpsl
sbb
ret
cmp
mov
pushf
repnz
nop
xor
ja
pop
js
mov
pop
mov
roll
std
jbe
cbtw
nop
pop
js
adc
std
xchg
dec
xchg
aad
push
inc
dec
rorl
sub
mov
sub
sahf
sub
lahf
cmp
popa
mov
addb
dec
pop
adc
dec
mov
inc
shl
xchg
test
imul
add
sahf
stos
cmpsb
js
ja
mov
inc
mov
cmp
xchg
mov
pop
mov
push
int3
dec
in
sahf
push
pop
xor
into
sarl
pop
mov
in
cmp
add
add
push
scas
mov
push
sbb
incb
add
add
dec
push
jae
loopne
sub
push
inc
mov
and
push
xchg
lcall
mov
cmp
mov
push
shr
add
pop
int
rol
jae
repnz
cmp
sub
cmpb
xchg
xchg
cmp
add
mov
pop
dec
mov
sbb
dec
test
add
das
mov
movb
xlat
pop
aas
xor
loop
xchg
jnp
shll
repz
pop
xor
in
nop
popa
scas
mov
dec
fisubrl
jae
mov
xchg
xchg
mov
mov
or
push
je
cmp
movsb
pop
dec
sub
repnz
jg
sti
cmp
mov
mov
insl
outsl
fisubl
rclb
popf
or
mov
aas
xchg
xor
sub
inc
sbb
in
jg
sub
xor
xchg
imul
insl
add
mov
aaa
xchg
and
movsl
mov
mov
mov
ficomps
add
add
cwtl
addr16
push
mov
popa
push
sub
movsl
into
mov
inc
push
hlt
hlt
ljmp
mov
testw
xor
cs
push
push
push
sti
std
push
pop
add
mov
cmp
jl
lock
add
enter
sti
sbb
jno
adc
adc
and
push
jbe
sub
add
jmp
out
mov
out
call
fcomps
jnp
dec
xorb
inc
pop
push
pop
jecxz
xchg
xor
pusha
div
imul
jmp
out
xor
sahf
enter
call
pop
pop
inc
dec
imul
mov
scas
push
std
jecxz
jnp
das
ds
and
adc
dec
outsb
cmp
mov
shlb
cmp
cli
out
push
shrl
pop
mov
xor
fbld
nop
call
imul
fbstp
cld
or
inc
fdivl
mov
ds
fisubrs
add
add
and
xchg
jne
push
sub
sub
inc
aaa
cmp
inc
aas
add
out
cwtl
into
and
aad
push
leave
sub
sub
mov
inc
lret
push
insb
push
xor
movsb
fwait
insb
je
fadd
add
fs
and
shll
push
and
in
arpl
fucomp
pop
in
and
test
jp
inc
fwait
mov
xchg
or
movsb
arpl
jnp
cmpsl
cld
das
shlb
out
push
pop
push
jbe
nop
xchg
andb
xchg
sbb
fnstsw
xchg
push
bsf
push
in
pop
into
xlat
inc
iret
push
xchg
or
cwtl
negl
jmp
push
mov
lahf
pop
lahf
lock
and
and
inc
or
out
mov
data16
stos
scas
or
out
jl
andl
lcall
dec
inc
stc
mov
mov
lods
imul
xorl
add
add
sub
xor
xor
mov
push
in
decl
xor
cmpsl
push
outsl
dec
inc
leave
or
or
sbb
sti
cmp
subl
out
xor
push
xchg
inc
enter
mov
mov
lods
sub
pop
dec
pop
movb
xor
dec
mov
add
fiadds
sbb
iretw
inc
dec
ror
mov
xchg
xchg
test
cmovge
outsb
in
aas
pop
cmp
stos
lods
push
enter
mov
movl
in
loope
movsl
jnp
sub
nop
xor
repnz
mov
pop
xchg
lahf
xchg
test
xchg
xchg
jns
adc
wrmsr
add
aam
stos
cmpsb
jle
mov
inc
mov
ret
fsubs
popf
push
shrb
cli
out
jmp
jbe
out
xor
jge
push
call
push
adc
jl
adc
add
add
mov
cmp
sbb
dec
mov
add
add
stos
insb
add
adc
xchg
scas
jns
sub
xor
xchg
and
xlat
out
mov
data16
push
shr
mov
dec
and
push
push
sbb
mov
sbb
cmpsb
pop
jno
xorb
and
in
aas
dec
cs
jb
in
negb
mov
jb
push
insb
nop
test
enter
ljmp
push
jnp
inc
sbb
cmp
jle
mov
fisubs
jp
add
dec
mov
les
int
inc
rolb
out
outsl
xchg
cmp
shll
mov
adc
dec
mov
into
iret
mov
call
add
mov
xchg
ds
push
mov
and
jb
arpl
mov
or
lcall
xor
cmovo
inc
push
xor
pop
in
faddp
adc
mov
push
add
add
add
hlt
fbld
pop
scas
aam
add
add
add
sbb
shrl
push
lock
iret
scas
leave
cld
adc
lcall
mov
out
es
cmpsl
push
fsubl
pop
in
or
ret
stos
inc
in
cltd
mov
jl
adc
rorb
adc
pop
popf
repz
push
out
pop
scas
inc
out
ret
mov
das
dec
mov
js
stc
out
pop
in
mov
pop
mov
pushf
les
jne
shr
mov
cmc
das
les
xor
dec
idivb
test
pop
jo
pop
shrl
adc
es
imul
xorb
jns
inc
loopne
add
sub
in
jle
into
xchg
test
jp
dec
xor
cltd
lahf
pop
cltd
mov
fs
js
or
mov
icebp
inc
add
xchg
mov
rolb
ljmp
lods
in
ret
adc
rcr
mov
push
dec
cmp
mov
into
fwait
add
mov
hlt
movsb
add
add
add
cmp
insl
iret
adc
jl
inc
or
out
outsl
adc
jae
and
sbb
jbe
imul
dec
cld
xchg
push
jl
jmp
movsb
lds
pop
and
mov
dec
and
mov
jg
pusha
sbb
frstor
into
pop
cmpsl
movsb
xor
push
movsb
scas
popl
xchg
jle
and
ret
test
cmp
add
jp
int3
sbb
aaa
adc
int3
bswap
fadds
repz
dec
adc
pop
lcall
xlat
jno
rcrb
je
add
adc
pop
jae
cs
xlat
pusha
fs
lret
jne
add
add
inc
imul
jo
push
dec
mov
sbb
pop
mov
lcall
test
lds
repnz
push
dec
inc
push
add
jl
test
out
mov
pop
sarb
in
orb
test
add
add
add
xchg
aad
jge
xlat
mov
cmp
lret
sub
inc
jge
daa
xchg
jae
push
push
mov
icebp
popf
pop
sbb
xchg
mov
nop
imul
cmp
mov
sub
jmp
and
ljmp
mov
mov
mov
flds
shrb
les
cmpsb
sbb
ss
loop
cmpsl
xor
rcrl
ja
pop
in
xor
loop
dec
and
and
ljmp
cmp
add
fsubrs
pop
sbb
inc
shll
lret
mov
jle
in
mov
rol
jle
lahf
lock
xor
push
mov
movsl
fistpll
lock
lods
sbb
mov
and
cmp
sub
xchg
adc
popf
pop
adc
pop
js
mov
adc
push
push
cld
fdivrs
ss
popf
cwtl
lcall
cmp
add
inc
out
aas
mov
rolb
push
add
add
add
cmp
cmp
inc
jns
mov
mov
mov
shrb
push
mov
add
fcmovne
sbb
ljmp
or
xor
cmp
stos
or
ljmp
pop
jecxz
sub
pop
pusha
lahf
pushf
jb
cltd
fdivrl
inc
jo
sbb
cltd
stc
lret
fsubrs
data16
jecxz
xchg
mov
andb
lods
xor
outsb
push
mov
adc
mov
outsb
imul
inc
xchg
data16
lods
pop
mov
daa
xchg
push
inc
or
icebp
stos
xchg
insl
pop
or
xchg
adc
xchg
add
jle
add
inc
ja
sub
adc
int
jle
fldcw
je
scas
mov
jmp
mov
mov
enter
mov
andl
sbbl
or
faddl
jmp
push
bnd
dec
leave
and
mov
add
add
add
cltd
repnz
out
repnz
out
sbb
sub
sbb
or
jg
add
jecxz
jmp
inc
push
sbb
jle
hlt
call
imul
push
fstl
in
imul
add
sbb
pushf
repz
push
inc
sbb
sub
add
mov
cmp
xor
jo
test
adc
js
jle
push
inc
mov
cld
pusha
ret
xchg
push
popf
in
inc
sbb
jns
ja
push
cmp
and
sbbl
stos
cmpsb
add
inc
mov
sub
add
push
lahf
out
push
push
mov
hlt
andb
pusha
push
jns
cmpsl
push
jae
aaa
sub
cmp
push
and
jg
adc
mov
out
outsb
jecxz
fs
pop
call
flds
mov
std
xor
adc
lret
sbb
in
out
ja
filds
xor
add
add
add
mov
arpl
pop
pop
aas
sbb
stos
inc
adc
lock
shl
sarb
adc
jmp
xor
in
adc
xor
pop
sbb
out
push
add
mov
xchg
lret
rcr
xchg
xlat
bound
loope
sarb
lcallw
lcall
add
outsb
repz
out
jp
jge
das
sbb
pop
mov
cmp
into
addb
mov
or
push
mov
fiadds
cld
push
jnp
sub
mov
mov
add
mov
dec
and
add
pop
dec
jbe
cmp
push
sbb
mov
sbbb
and
leave
adc
jnp
dec
inc
jae
xor
mov
add
push
cmpsl
push
fnstsw
dec
xchg
data16
ss
fcomip
fnsave
pop
stc
pusha
out
pushf
jbe
mov
dec
xchg
add
add
pop
in
inc
push
or
or
xor
add
add
xchg
ret
je
es
and
cli
xchg
mov
add
das
notl
mov
mov
and
adc
or
je
lds
adc
pop
out
fmull
push
cmp
enter
into
or
dec
cmp
jb
sub
jge
jbe
imul
mov
popa
dec
adc
inc
and
icebp
je
add
stc
mov
push
inc
push
xchg
out
pop
add
sbb
push
std
ret
bound
mov
xchg
pop
pusha
mov
insl
ljmp
adc
cmp
inc
rclb
xor
xchg
push
xor
les
out
push
mov
jecxz
inc
adc
daa
jno
sbb
cmp
cld
roll
test
fnstcw
sbb
xor
movsl
cmc
dec
xchg
cmpl
mov
jg
neg
pop
daa
inc
ss
push
cmp
add
mov
fidivl
xlat
dec
stos
les
sbb
es
out
jmp
cli
add
add
lea
or
fldz
dec
add
out
cld
jns
sbbb
jmp
mov
dec
xlat
sub
add
jno
push
sub
cli
push
sarb
loope
out
mov
scas
subb
outsb
fnstcw
dec
mov
xor
adc
mov
jg
mov
pop
fldcw
cmp
mov
enter
lea
leave
add
mov
mov
mov
cmp
xchg
or
push
sub
and
idivb
js
pop
sub
mov
mov
add
jb
test
cwtl
xchg
daa
lea
popa
xchg
jecxz
fdivl
call
xor
mov
in
decl
or
mov
push
pop
jge
movl
cmp
sti
jg
cmp
je
mov
das
rorb
add
add
les
lret
jecxz
mov
test
fnstenv
outsb
int3
xchg
pusha
mov
mov
pop
data16
push
sbb
decl
mov
call
cmp
sbb
scas
pop
out
cwtl
outsb
cmp
lret
aam
stc
sahf
fst
lret
mov
ror
int
push
mov
inc
inc
aam
mov
stos
mov
ljmp
adc
inc
mov
icebp
mov
imul
lahf
ljmp
stos
lcall
fsubs
jae
or
or
adc
gs
jbe
cmc
xchg
xchg
dec
sub
nop
cs
or
sbb
inc
inc
dec
inc
xchg
popa
dec
js
aas
xor
sbb
mov
or
test
pusha
jmp
inc
loope
jle
adc
push
inc
insb
dec
pop
sub
sbb
or
lock
sub
cmpsb
sbb
jae
rorb
int
xor
sbb
ret
sub
fcoml
mov
scas
aam
jnp
fstp
fcompl
mov
or
add
add
cmpl
mov
cwtl
xchg
mov
pop
stos
hlt
xor
add
adc
xor
lods
sbb
inc
call
mov
repz
add
outsl
fsub
sub
pop
and
inc
fldt
repnz
not
nop
out
jae
icebp
pop
adc
push
roll
insl
fdivrp
movsl
pop
outsl
jg
jge
lods
jno
rorl
or
push
out
out
lahf
xor
fstpl
add
mov
push
insb
push
stos
outsl
fists
pop
popa
pop
in
xchg
mov
jle
jno
push
mov
dec
add
pushf
sbb
sub
inc
mov
xabort
inc
sbb
das
cltd
push
test
lds
sbb
xor
push
adc
insl
and
fnsave
ja
xor
xchg
mov
xor
add
add
addl
pop
mov
adc
add
add
outsl
mov
add
dec
sub
add
add
xor
mov
xlat
int3
mov
scas
cmp
sbb
clc
or
fucomip
data16
xchg
shl
sbb
in
fs
ds
or
imul
pop
scas
mov
jl
pop
pop
pop
pop
into
cs
xchg
jnp
xchg
pop
push
nop
in
inc
pop
or
push
data16
mov
pusha
rclb
sarb
int3
call
decl
and
xchg
cmpsl
jecxz
clc
adc
push
popf
mov
stc
jns
pop
testb
sub
out
daa
lock
lods
shrl
jmp
cmp
pop
pop
out
push
sub
and
loope
sub
mov
dec
cmpsb
cli
mov
lods
icebp
xchg
insb
stc
mov
mov
xlat
dec
dec
adc
jmp
xchg
insb
icebp
hlt
or
bound
jo
pop
mov
dec
fldt
sub
lea
sbbb
loope
jmp
ffree
xchg
xor
int3
push
add
add
add
int
adc
mov
adc
push
mov
mov
loope
arpl
andb
bound
jge
add
pop
xchg
cmp
daa
pop
fwait
leave
out
pop
xor
or
inc
clc
daa
int
or
dec
sub
inc
jne
arpl
out
push
dec
sub
test
cmc
adc
lret
jno
lods
out
lret
jmp
sti
xchg
icebp
xor
fdivrl
leave
push
dec
lcall
xorb
add
push
movsl
lods
or
negb
cli
fldenv
icebp
adc
jo
loopne
cmp
fyl2x
push
rcrl
icebp
jns
or
sub
mov
faddl
inc
mov
and
jecxz
sub
mov
jnp
mov
adc
mov
stos
int3
cld
xchg
fdivs
and
xchg
aas
push
dec
mov
pop
std
xchg
jmp
xor
xchg
lds
rcll
test
sgdtl
add
add
push
mov
je
jb
icebp
fwait
por
cwtl
pushf
test
mov
outsl
out
js
mov
mov
mov
repnz
rcr
pop
loop
in
les
cld
jns
xchg
int
ss
mov
xchg
and
add
push
icebp
mov
daa
es
mov
outsb
cmpsb
arpl
out
sub
xor
clc
inc
ja
js
iret
in
pop
mov
mov
jl
push
cltd
rorl
aam
out
gs
loopne
adc
int
scas
mov
and
aam
or
and
test
insb
push
mov
test
popa
in
ficompl
mov
xlat
aad
movsb
lds
pop
jecxz
hlt
jmp
sahf
jle
mov
push
nop
stos
cmp
pusha
movsb
xchg
jp
insb
ret
repnz
adc
and
mov
jg
pop
mov
push
mov
cmp
addr16
arpl
jae
jb
cmpsb
mov
dec
cli
inc
jg
int
xchg
lods
or
mov
add
add
add
insl
adcl
cmp
enter
pop
push
int3
or
pop
cli
into
dec
ljmp
mov
movsl
fsts
sub
push
repz
ss
and
xorl
stos
mov
repz
rclb
rorl
sbb
cld
sbb
int
jb
mov
lods
lcall
frstor
insb
sub
inc
cwtl
or
cmpsl
out
test
cmp
imul
repnz
sub
in
sub
cmp
ret
pop
test
lods
outsl
clc
sbb
pop
push
aad
sub
nop
or
mov
data16
cwtl
push
sahf
mov
mov
mov
aas
aas
hlt
sahf
rcll
sub
xor
jle
hlt
mov
fnstcw
pop
xor
ret
push
imul
xlat
mov
pop
inc
mov
out
push
inc
jnp
mov
add
add
xchg
std
cmp
jle
fistpll
ficompl
adc
add
add
movsl
mov
inc
data16
shlb
pop
icebp
imul
and
sbb
test
mov
insl
test
cmp
sub
lods
lods
in
jmp
movsl
adc
shr
fcos
loope
sub
xchg
lret
sar
mov
fcmovne
mov
imul
sbb
xchg
dec
push
mul
cmpsb
mov
sbb
cmpsl
repz
mov
scas
and
insl
int
jmp
enter
les
xlat
mov
lahf
ds
sti
popf
sub
mov
xchg
out
out
and
outsl
add
or
fld
xor
insl
sbb
cltd
inc
and
dec
mov
iret
dec
and
and
cmpsl
cli
aad
inc
aam
js
xor
shrl
push
stos
or
jno
lret
pop
icebp
cmp
stos
add
cmp
test
push
pop
test
ret
les
cwtl
out
lods
cmp
dec
adc
push
mov
add
xchg
pop
lds
xlat
ficompl
inc
imul
data16
add
add
add
fisubrs
in
test
push
dec
das
or
mov
jne
stc
pop
das
mov
mov
fwait
std
fisttpll
repnz
dec
xchg
incl
xor
nop
cld
aam
sti
lret
sahf
jmp
out
xchg
gs
hlt
sbb
push
sbbb
fmuls
loope
sub
lret
sbb
mov
add
js
jmp
xchg
or
mov
vmwrite
dec
dec
dec
mov
sbb
cwtl
imul
es
adc
inc
comiss
push
fbld
int
sub
in
arpl
jb
xchg
fnsave
cmp
sbb
or
jne
shlb
inc
ds
xorl
xchg
aam
or
dec
outsl
out
fisubl
dec
mov
outsl
mov
ljmp
outsl
lods
xchg
das
and
xor
cs
aam
int
add
add
sub
iret
outsb
jmp
push
test
mov
mov
add
add
packuswb
std
addl
cmc
rorb
pop
ss
and
mov
xor
and
jmp
sbb
add
addl
push
cmovae
mov
ss
insl
lcall
jl
push
loope
repnz
es
add
cld
in
in
sbb
ret
scas
sub
jo
pop
loope
xchg
and
mov
addb
and
jb
outsl
sbb
xchg
jl
movsl
and
or
clc
mov
xorl
mov
data16
pop
or
sub
addb
xchg
and
lahf
outsl
pop
repnz
shll
gs
dec
leave
fcoml
push
cs
fs
jns
lods
jecxz
xchg
push
loope
dec
xor
xchg
out
xchg
mov
fs
sbb
imul
mov
and
and
sbb
std
sbb
stc
cld
or
cmp
dec
mov
adc
add
add
add
or
xor
mov
jae
mov
adc
sub
insl
aam
push
pop
cli
mov
sub
cmp
inc
mov
mov
pop
mov
icebp
daa
test
push
icebp
adc
jl
xchg
rorl
add
pop
push
faddl
push
andl
pop
test
xchg
mov
mov
inc
pop
push
enter
fnstenv
insl
and
jecxz
jbe
pushl
mov
mov
icebp
fcomip
stos
icebp
jo
iret
push
push
xor
sbb
cmpb
pop
in
out
repz
imul
jno
inc
leave
pop
fsubp
insb
xchg
lret
shlb
or
imul
inc
ja
or
push
loop
and
inc
dec
or
test
insb
cli
jnp
sub
jl
scas
xchg
js
stc
jl
ds
inc
cmc
adc
add
mov
cmp
aaa
lcall
add
negl
adc
pop
xchg
cmpsb
mov
adc
add
das
pop
pop
arpl
mov
fldenv
test
xor
repz
or
sti
push
clc
dec
lods
nop
jmp
fstps
inc
bnd
xorl
ret
dec
aaa
cmp
pusha
jbe
push
in
fwait
dec
xchg
repz
outsl
jg
add
jo
shll
insl
loope
ficompl
rcrl
xor
popf
movsb
jp
out
push
push
xlat
mov
inc
aam
imul
xchg
adc
cmp
mov
arpl
sbb
lea
lcall
movsb
xor
loop
or
insb
mov
xchg
mov
mov
pop
sub
sub
incb
gs
insl
mov
sbbl
mov
cmpsl
repnz
bound
push
pop
mov
xor
lahf
mov
nop
jb
jp
cwtl
cmp
fisttpll
inc
mov
dec
pushl
ja
mov
in
push
add
add
add
gs
jl
push
pop
stos
loop
inc
fsubs
mov
cld
dec
scas
roll
mov
add
data16
je
push
sbb
jmp
inc
cwtl
jns
dec
pop
arpl
mov
push
mov
cmc
ja
cmp
add
pushf
aaa
or
cmp
cmp
inc
and
jne
or
push
mov
sbb
fisttps
out
adc
xchg
xchg
pop
push
movsl
int
add
mov
add
xchg
imul
lods
add
dec
cli
push
sub
pop
mov
pop
je
loope
and
mov
cmpsb
fstpl
lods
out
cmp
test
iret
dec
cmp
stos
xchg
sbb
push
mov
dec
or
push
ss
lcall
inc
rorb
pop
test
inc
add
outsb
pop
outsl
inc
push
jo
jae
pusha
pop
lcall
or
insb
data16
lcall
lret
xor
sbb
fldcw
pop
jo
sbb
add
add
inc
ja
pop
aas
dec
push
mov
add
add
xor
bound
aad
pop
push
mov
jnp
in
daa
scas
orl
add
hlt
ret
pop
jbe
xadd
jne
jnp
inc
fcmovnb
pop
out
cltd
in
mov
jmp
push
loope
ja
xlat
jmp
dec
sbb
aaa
mov
inc
in
bound
fs
imul
sub
dec
mov
popf
adc
fwait
mov
stos
push
xor
mov
cmpsl
mov
sub
std
lretw
loope
fwait
decb
test
es
push
stc
test
in
test
movsb
test
and
adc
push
adc
lds
sti
mov
mov
popa
pop
cmp
lock
pop
mov
mov
lret
inc
sub
jp
xor
mov
lret
inc
je
inc
sbb
dec
shlb
cld
aas
jmp
aam
mov
es
cmp
addb
roll
lods
mov
add
repz
jae
ja
div
mov
pop
xor
add
add
fsubl
in
inc
add
mov
gs
pusha
jmp
push
rorl
sbb
sub
pop
inc
out
pop
loope
lods
imul
fimull
out
dec
data16
dec
repnz
mov
lcall
xchg
xor
test
and
sahf
inc
leave
scas
xlat
roll
pop
test
test
loop
adc
xchg
dec
adc
xchg
mov
orl
sbb
dec
xchg
mov
jb
outsl
xor
mov
and
sahf
jnp
popf
xor
jle
nop
xor
push
pop
addb
clc
outsl
jl
lock
sbb
cmp
aas
stos
or
dec
hlt
call
or
int3
inc
pop
jbe
in
movsb
dec
sbb
loop
das
jl
inc
xor
push
rclb
lds
les
sbb
ds
xor
cli
std
jg
push
pushf
dec
or
add
add
add
mov
lock
ljmp
mov
push
popa
cld
fcompl
jl
add
jb
cmpsb
icebp
or
fnstsw
push
xor
paddusb
adc
mov
dec
ljmp
ret
test
inc
adc
in
adc
int
adc
sbb
lcall
jmp
pop
mov
jno
fmull
xlat
dec
cld
sarb
adc
jo
fnsave
xor
xor
iret
xchg
mov
orb
xchg
mov
ds
aad
fwait
xorb
inc
daa
jmp
push
dec
push
bound
pop
mov
into
roll
push
mov
out
jle
xor
or
aad
xchg
pop
mov
inc
cmp
loop
xor
outsb
lds
outsl
mov
dec
ret
out
dec
fimull
repz
cmp
push
push
adc
xchg
xor
mov
testl
incl
sbb
add
xor
add
add
out
inc
fsubrs
xor
addr16
jmp
xchg
pop
xchg
xchg
shrb
cmp
sub
cmp
xlat
lock
push
idivb
lret
cmp
lahf
xchg
lea
int3
lods
out
cltd
stc
outsb
in
leave
jg
push
std
call
lcall
inc
outsl
frstor
sub
fwait
xor
jge
outsl
mov
pop
pusha
pop
and
or
sub
faddl
pop
popa
sub
dec
popf
xor
dec
inc
mov
movsb
repnz
push
xchg
xor
arpl
outsb
or
sahf
cmp
and
pop
and
insl
mov
jne
lods
push
jb
mov
or
dec
pusha
out
pushf
idivb
push
cli
out
cwtl
adc
cmp
push
pop
lret
fisttps
cmpsb
pop
jb
sbb
jmp
out
cmpsl
inc
loope
jecxz
push
mov
js
jne
scas
lock
rcrl
inc
scas
pop
pop
popf
loop
movsb
mov
mov
push
es
jg
pop
or
xor
inc
mov
add
add
call
xchg
inc
push
add
daa
fucomi
imul
pop
xchg
repnz
pop
adc
sbb
pop
jl
sub
fadd
and
adc
lret
sbb
cmp
mov
push
inc
daa
in
movsl
xchg
cli
sbb
push
fadds
hlt
fiaddl
ljmp
test
insl
pushw
cwtl
xchg
jbe
jmp
jl
mov
insb
mov
push
sbb
pop
or
adc
les
popf
loope
aad
cmpsl
test
sub
push
push
cmp
jmp
cwtl
add
add
push
in
mov
out
fs
push
pop
push
fisubs
xchg
insl
push
xchg
add
test
inc
mov
out
lods
pop
mov
arpl
dec
xchg
or
mov
mov
push
push
cs
sub
jbe
sbb
inc
push
clc
or
dec
push
cmp
sbb
add
jb
paddq
sub
enter
mov
xchg
push
push
incb
mov
dec
stos
rorl
mov
fmull
dec
sahf
call
or
xor
testb
scas
jbe
leave
ret
push
lods
stos
outsb
xchg
inc
mov
jo
mov
xchg
insl
je
clc
aaa
je
jecxz
rorl
test
inc
arpl
popf
cld
cmp
inc
aaa
test
mov
and
data16
inc
insl
mov
scas
adc
lret
sub
ss
adc
repz
mov
into
push
cmpsl
adc
jbe
sub
mov
xchg
pushf
push
jle
mov
inc
aad
cmc
nop
negb
adc
mov
movsb
mov
ja
cmc
xchg
leave
and
pop
js
mov
cwtl
inc
rorb
lds
stc
jge
adc
push
fisttps
sbb
stos
pop
dec
inc
jnp
jne
jl
xor
mov
or
push
add
add
add
lods
lret
xchg
pop
rol
rcrl
lret
mov
xor
notl
xchg
jp
test
enter
popl
fcoml
test
lret
cmp
sbb
dec
shll
jl
imul
jge
and
out
imul
std
mov
das
rol
xchg
xchg
nop
sub
outsb
push
mov
fildl
lret
xor
hlt
out
mov
or
je
stos
mov
fnsave
rcll
stc
movsl
xor
sbb
lahf
xor
pop
das
adc
mov
jmp
add
lds
lcall
ficompl
mov
dec
jl
test
mov
inc
push
adc
icebp
inc
or
adc
cs
dec
sbb
ljmp
shrl
cmp
sub
add
cmpsb
out
ficoms
stos
sbb
call
mov
or
add
add
add
mov
pop
push
rorl
movsb
mov
jnp
lods
inc
dec
ss
sub
adc
and
mov
pop
int3
mov
cmpsb
rcrl
rclb
ret
pop
sbb
jbe
incb
das
sbb
dec
xor
mov
shlb
push
arpl
mov
lock
mov
lea
adc
sub
ret
xor
adc
mov
pusha
test
cli
lea
fwait
mov
cwtl
sbb
clc
sub
rorl
jmp
push
lods
imul
loopne
sti
lret
sbb
mov
sub
sbb
stos
inc
and
insb
and
mov
test
jns
clc
out
and
dec
loopne
push
or
mov
jne
hlt
call
int
sahf
mov
and
negb
mov
les
push
in
lret
xor
add
add
in
out
stos
jge
or
and
add
add
test
sbb
mov
call
lahf
add
pop
pusha
cld
mov
cmp
and
pop
mov
sub
jno
and
fyl2x
xchg
and
lcall
add
dec
adc
jmp
test
lahf
mov
xor
push
dec
into
adc
cwtl
das
and
sbb
jbe
push
repz
sbb
mov
call
and
inc
xor
xchg
and
sbb
cwtl
mov
nop
dec
inc
sub
or
add
fnstsw
mov
jmp
rclb
loopne
mov
push
lcall
pop
push
mov
mov
addr16
mov
mov
pop
adc
loope
xchg
and
lahf
sub
fisubrl
sbb
mov
imul
out
xchg
mov
fs
test
rcrl
xchg
movsl
adc
or
lods
imul
or
bound
xor
pop
sub
dec
loope
dec
dec
or
out
xchg
iret
push
aas
mov
and
add
add
cmpsb
lods
fcomps
add
sub
pop
mov
jnp
mov
push
push
or
mov
add
in
stos
xor
jmp
bound
pop
dec
test
mov
fnstenv
out
in
lcall
in
pusha
test
scas
and
mov
sbb
sub
cmp
mov
clc
xchg
shrl
jno
and
add
cld
std
or
or
pusha
mov
hlt
and
rorl
add
jbe
test
push
mov
lcall
push
mov
insb
repz
adc
ljmp
leave
pop
mov
aam
popa
mov
repz
stc
mov
and
int
adc
and
or
enter
or
repz
shlb
test
das
push
sub
and
pop
push
pushf
adc
aam
add
cmp
out
loope
jns
add
negb
and
add
add
iret
or
mov
xor
cmp
adc
testl
sbb
push
mov
lds
je
shll
push
pop
and
inc
cmp
out
dec
cltd
inc
filds
lods
cwtl
nop
mov
into
lret
mov
mov
adc
fcomp
fstl
dec
push
dec
mov
mov
dec
jl
clc
int
push
add
mov
std
popa
jae
jecxz
call
cs
xor
pop
add
pop
sar
mov
fnstcw
sti
mull
cwtl
sub
sub
addr16
lahf
pop
push
sub
xor
or
mov
xor
je
sub
int3
int
sub
sub
mov
and
in
xor
cmpsl
ds
inc
jo
roll
repnz
loop
js
pop
xchg
jb
data16
dec
ja
sub
pop
mov
push
add
add
lods
jg
push
mov
cmp
sub
sbb
add
add
add
in
rorl
xor
xchg
dec
dec
sub
jecxz
mov
ss
xor
lret
xor
sti
adc
out
enter
sub
xor
sub
popa
jge
mov
out
es
cmp
dec
xor
aas
mov
push
dec
inc
and
enter
add
outsb
bound
in
adc
mov
xor
repnz
ljmp
jecxz
je
adc
mov
negb
mov
dec
pop
fistps
je
pop
and
xor
cmp
add
mov
outsb
ss
sbbl
outsb
mov
inc
loop
out
sbb
pop
test
sub
add
push
insl
ss
add
pop
add
lods
daa
jae
push
outsb
mov
push
sub
mov
xchg
je
mov
scas
adc
xchg
push
cmp
add
add
jg
cld
ret
add
jo
cltd
and
add
add
pusha
xchg
xor
pop
and
xor
dec
sub
cmp
insl
pushf
dec
mov
dec
pop
pop
adcb
sahf
inc
mov
xor
lods
call
repz
sti
rclb
imul
sub
call
push
adc
cmpsl
cmpb
jl
and
test
push
fistpll
mov
sbb
popa
dec
pop
cmp
inc
sbb
inc
daa
divb
stos
mov
sbb
lods
cltd
cmp
les
movsb
icebp
aas
lret
push
aad
cmpsb
lcall
int3
xchg
pop
scas
in
in
std
cld
test
pop
movsl
std
lock
jg
or
add
outsb
arpl
popa
mov
add
inc
out
mov
mov
mov
call
mov
aad
sub
scas
sti
sub
aad
cmp
outsl
push
insl
fs
sarb
repnz
sub
add
ret
mov
iret
mov
sub
scas
jnp
and
add
insl
dec
sbb
gs
push
dec
jge
fildll
push
jl
aad
adc
xchg
icebp
push
mov
into
push
sbb
mov
je
or
enter
int3
pop
sti
leave
mov
xor
mov
sarb
sbbb
xchg
mov
inc
xor
adc
adcb
jl
setl
rclb
add
stos
push
out
fcom
stc
xorl
andb
push
roll
or
dec
sub
lods
out
and
jmp
scas
dec
inc
popf
xor
ret
leave
dec
sbb
data16
and
fisttpl
mov
sbb
stos
jnp
std
enter
push
cmp
jns
push
dec
movsb
test
push
in
pushf
pop
mov
mov
ret
mov
insl
dec
or
mov
fdivs
mov
js
adc
or
jg
arpl
mov
add
add
add
fnstsw
andl
add
pop
mov
jg
sbb
adcb
popa
xlat
cmp
out
xchg
dec
inc
jecxz
cmc
jp
je
incl
and
fdivl
mov
icebp
adc
cmp
ret
adc
insb
inc
sub
fisubl
sub
adc
sub
test
jle
mov
cmp
dec
cmp
mov
adc
std
lods
popf
jl
mov
fcomps
cmc
push
add
inc
stos
mov
mov
cs
imul
xor
xchg
leave
lahf
or
shl
int3
pop
test
scas
adc
adc
leave
xchg
outsb
xor
cltd
ss
imul
add
or
pop
mov
aaa
lods
inc
push
cmp
lret
pop
jnp
mov
mov
dec
mov
lods
fwait
negb
or
popf
mov
mov
add
movsl
xlat
xchg
mov
lea
jle
scas
pop
loope
mov
add
add
shlb
cli
clc
cli
clc
sarb
sti
mov
jmp
sub
add
add
add
cmpsb
or
sub
aam
cmp
fsubl
mov
in
scas
adcb
rcr
mov
mov
cwtl
inc
mov
out
add
loop
in
inc
or
mov
inc
xchg
and
int
inc
xchg
push
mov
or
cmp
daa
cmp
fs
and
push
pop
js
popa
pop
mov
mov
cwtl
pop
add
das
fistpl
pop
pusha
pop
insb
inc
mov
mov
dec
mov
inc
aas
jmp
fistpll
cmp
stc
mov
adc
xor
mov
fistpl
pop
add
inc
test
push
outsb
dec
les
push
sbb
sahf
out
xor
xor
mov
lods
push
iret
addr16
fnstsw
xor
pop
fisttpl
stos
jbe
push
mov
rcl
inc
rorb
stc
rclb
pop
test
imul
mov
shrl
sub
add
add
sti
add
dec
or
jne
dec
out
jg
test
add
sbb
inc
subb
push
mov
push
jecxz
jge
andb
sub
xor
push
arpl
lahf
or
mov
xor
inc
jne
or
xchg
xor
arpl
dec
insb
push
mov
inc
add
rcrb
roll
push
std
or
icebp
movq
inc
push
sbb
sbb
mov
fcmovu
bound
adc
sbbb
movl
inc
sub
inc
movsb
push
cmovl
call
adc
mov
push
jmp
mov
in
or
into
shrb
mov
xchg
xchg
push
xor
add
sbb
inc
jg
xor
jmp
mov
mov
add
dec
xlat
and
add
add
es
data16
insb
daa
mov
dec
sub
add
add
cli
stc
push
fcoml
sbb
out
jmp
jnp
fidivrl
add
fcomi
inc
cmp
mov
mov
and
push
cli
loopne
dec
mov
mov
decl
push
lret
mov
cwtl
arpl
sub
mov
jp
mov
outsl
insb
sub
jge
jns
adc
mov
cmp
xchg
fbld
les
imul
sub
and
shlb
scas
ss
sahf
mov
xchg
push
dec
clc
out
adc
sahf
sbb
inc
dec
jbe
adc
fbstp
jno
mov
mov
xchg
std
nop
cmp
lcall
adc
mov
jl
sub
lcall
lods
pusha
fbld
sub
push
lretw
inc
sub
mov
outsb
lock
pop
xchg
fld
xor
dec
xchg
xchg
cmp
mov
mov
push
push
cmp
add
add
dec
mov
imul
add
sub
add
add
shrl
scas
pop
sbb
in
rclb
popa
pop
loope
jmp
addb
push
and
loope
iret
cmc
mov
and
sbb
mov
inc
popa
lods
mov
xchg
mov
icebp
outsl
ljmp
rorl
aas
enter
repz
hlt
cs
and
out
cmpl
shll
cs
addr16
movsb
loop
nop
test
scas
cmp
and
addl
cmp
xorl
enter
je
jnp
jo
ja
jmp
loop
xchg
ret
jl
imul
movsl
xor
mov
into
aaa
push
in
cmp
inc
cli
push
pop
fists
outsb
scas
addl
pop
scas
les
sarb
daa
mov
or
mov
jne
jecxz
lret
cmp
imul
test
es
inc
ss
out
xchg
iret
aas
lods
xchg
push
pop
lock
sub
mov
out
int
cmp
hlt
add
mov
outsb
jno
cmp
hlt
mov
repz
push
sti
cmpsl
enter
inc
psraw
cmp
add
add
add
pop
xchg
lea
in
xchg
cmp
and
outsl
arpl
std
mov
fstps
add
dec
icebp
outsb
or
cmpl
loopne
jnp
roll
sbb
mov
add
inc
cwtl
mov
or
leave
cmp
roll
ficomps
cmp
inc
add
pop
pushl
dec
sbb
ja
clc
pop
push
out
cmpsl
push
leave
sbb
xchg
into
rcrb
sub
outsl
adc
fstpt
pusha
mov
add
jno
dec
mov
cmp
fiadds
dec
or
loopne
push
xchg
out
pop
enter
cmp
mov
shlb
fsub
add
jg
add
dec
mov
ja
ja
std
aam
out
and
push
call
jno
push
inc
xorl
fadds
mov
orl
fistps
xchg
sbb
dec
jo
mov
gs
sub
push
and
std
mov
dec
push
pop
dec
mov
inc
sub
add
add
jbe
scas
lcall
sbb
scas
out
pop
cmp
sub
push
push
mov
loop
andb
adc
xchg
mov
mov
cli
dec
adc
inc
adc
xchg
xchg
pop
mov
push
add
cmp
mov
es
ss
mov
cltd
dec
xor
xchg
lahf
adc
jle
sub
inc
xchg
fmull
jge
mov
enter
scas
or
cltd
fisubl
jl
stos
movsl
add
xchg
push
stos
aad
test
jns
daa
cwtl
add
sbb
shrl
sti
popf
movsb
adc
jle
inc
and
jecxz
sbb
dec
mov
in
shrl
and
aas
movsl
pop
call
mov
mov
out
inc
ffree
jo
pushf
out
pop
pushf
mov
lret
mov
inc
ss
sub
xchg
xlat
ret
inc
nop
js
xchg
imul
ret
in
sub
lds
xchg
and
inc
and
lcall
add
add
add
data16
ret
xchg
mov
sbb
imul
sbb
popa
adc
lea
mov
sahf
xchg
mov
iret
es
xchg
dec
mov
fs
dec
lret
inc
and
pushf
pop
sub
dec
in
stos
bound
xor
fisubrs
pop
jo
mov
jb
jg
int3
adc
ds
or
cmpsl
idivb
cmp
push
jecxz
and
in
fsts
xor
mov
fisubrs
jp
aaa
sahf
add
mov
mov
pop
fs
stos
dec
lods
leave
std
sbb
mov
test
ja
mov
arpl
pushf
lcall
sub
jnp
xor
es
cli
mov
outsl
mov
lcall
pop
push
insb
mov
js
aad
xor
outsb
ss
je
mov
dec
in
cmpsl
shlb
mov
jge
inc
daa
add
lods
add
jle
add
add
add
xchg
ficomps
cmp
lahf
into
sbb
imul
add
cmp
mov
adc
mov
ja
mov
push
adc
dec
dec
out
dec
sbb
push
hlt
js
rolb
cmp
jge
out
pop
lea
lea
aaa
push
nopl
ja
test
sbb
sub
add
and
aad
out
fwait
push
xchg
mov
int3
jno
pop
adc
jle
fxch
mov
test
jns
mov
mov
pop
cmpsb
xor
xchg
lds
sbb
jp
pop
cmp
sbb
sub
loop
imul
jmp
pop
mov
mov
xor
sub
jecxz
fsubrs
hlt
scas
stc
stos
cmc
inc
cmp
shll
and
jo
repz
lods
pop
xor
cli
dec
xor
movsl
lock
hlt
aad
xor
xor
and
add
and
int3
mov
enter
das
es
push
stos
and
or
enter
fcmovbe
leave
inc
cmp
insb
mov
lret
add
arpl
ja
sub
add
sub
add
add
mov
cltd
xchg
and
bnd
cltd
add
xchg
sahf
sbb
jg
sahf
jmp
xchg
sbb
lcall
dec
fs
adc
daa
mov
pcmpgtw
mov
clc
outsl
add
jle
cmp
repnz
xor
lock
in
test
enter
dec
cmc
aam
sti
lods
lods
push
cmp
jae
jg
lods
scas
ret
pop
clc
dec
jl
test
lret
mov
push
or
dec
xchg
xor
sub
or
cmp
add
aaa
pop
sar
adc
cltd
ret
inc
mov
sbb
add
mov
stos
add
data16
xchg
lcall
cmp
mov
test
xchg
push
fisttpll
into
mov
mov
mov
int3
or
and
mov
jb
fistpll
rcl
int
cmp
pop
repnz
mov
fldl
add
add
lret
mov
or
sbb
add
add
add
lods
fwait
into
adc
xchg
divl
pushf
sbb
xlat
sub
pusha
adc
arpl
in
push
jle
into
sub
dec
mov
xchg
cmp
insl
sbb
jge
sub
sarb
fistpl
sub
lret
fdivl
inc
mov
repnz
out
pushf
push
xchg
sbb
lcall
lock
or
in
mov
bound
or
jp
mov
xchg
push
mov
scas
rorl
loope
ljmp
test
repnz
clc
and
sub
push
sbb
mov
aam
inc
jmp
xchg
ret
mov
jbe
mov
xor
mov
jmp
add
push
sti
jbe
pop
aaa
adc
leave
lock
andb
call
outsb
stos
mov
loope
jo
add
mov
add
sub
sub
sti
pop
jge
neg
hlt
add
and
add
add
pusha
aad
push
or
les
adc
dec
and
sub
outsl
imul
hlt
or
add
push
fsubrs
cmp
jo
sti
sbb
mov
lahf
movsb
xor
or
cld
orl
sub
les
fidivrl
fbstp
dec
and
xor
sbb
fldl
mov
imul
outsb
pmullw
pop
mov
dec
mov
ja
lds
dec
cmp
fdivrs
and
xlat
xchg
jge
inc
jns
shll
inc
test
dec
pop
xor
cmc
jg
movsb
repnz
pop
push
xor
ss
into
xchg
adc
xlat
mov
fildl
fldcw
cwtl
test
push
ret
or
lods
inc
lods
push
call
out
lods
ja
stos
sahf
xchg
ret
ret
cwtl
adc
cmpsb
sbb
shrl
cmp
das
cmp
add
pusha
cltd
fsub
std
in
popf
in
stc
jmp
imul
pop
xor
add
add
jle
iret
aam
jb
mov
test
push
gs
add
push
mov
lcall
mov
cs
insl
pop
nop
test
pop
stc
addl
cwtl
cmp
jnp
popa
jp
insb
push
aad
xor
dec
add
inc
and
xchg
mov
pop
and
pop
mov
xor
sbb
sbb
test
jecxz
dec
lahf
jmp
mov
out
adc
iret
xor
scas
addr16
xlat
or
dec
negb
sarl
in
jae
call
shlb
jmp
inc
out
cmpsl
int
mov
mov
rol
jle
popf
test
mov
imul
test
div
mov
lds
aas
cmpsl
jg
test
sbb
inc
push
mov
scas
rorl
or
xor
test
cmp
jp
hlt
sbb
ret
mov
mov
out
mov
pop
jp
jnp
sti
xchg
jle
jp
lods
aaa
pop
imul
add
add
mov
push
mov
aas
dec
addr16
aas
add
out
inc
movsl
inc
or
mov
scas
cwtl
std
orl
test
fs
pop
jp
jp
mov
shrl
adc
push
rol
push
int3
sbb
and
arpl
xchg
les
push
addr16
or
jb
mov
lods
hlt
mov
add
pop
pop
sub
cmp
cwtl
jae
xor
mov
mov
mov
jo
xor
lret
mov
or
pop
insb
sbb
rclb
cmc
aad
mov
cmpsl
mov
rcl
fs
imul
pushf
inc
popa
frstor
pop
mov
pop
rorl
icebp
test
das
repnz
mov
xor
jmp
lahf
mov
fsts
je
loop
add
cmpsl
mov
clc
mov
dec
xor
cli
cmc
scas
adc
fldcw
mov
push
sti
decb
mov
out
xor
add
add
jae
cwtl
mov
ja
mov
xlat
push
lret
sarl
imul
or
push
cmc
xchg
sarl
jecxz
or
add
sub
adc
mov
fwait
xchg
xor
lds
push
jl
bound
pushf
arpl
fisttpll
and
sbb
test
cmpl
xchg
dec
inc
adc
mov
popf
inc
cmc
aas
sbb
enter
fistpll
jp
add
out
mov
imul
shl
cmp
mov
call
jo
pushf
mov
shr
and
mov
xchg
jne
iret
or
inc
mov
arpl
or
mov
push
jne
inc
lock
mov
mov
imul
ret
inc
rcrl
pop
rorb
repz
cmc
dec
add
xchg
imul
inc
sbb
inc
add
mov
push
ret
cmp
xor
hlt
jae
in
inc
fs
add
jge
jo
xor
cmp
lods
xchg
out
fildl
mov
mov
jmp
cmp
lea
cli
jmp
jl
mov
push
sahf
sarl
aas
jp
mov
cmp
cmp
xchg
mov
cmp
push
pop
or
adc
cmp
inc
mov
mov
push
stc
sbb
adc
xor
scas
cmp
xor
add
mov
and
std
sub
jnp
fsubl
int
ljmp
mov
cld
les
das
in
bound
outsb
shrb
fwait
cmp
int3
test
xchg
imulb
test
sbb
add
imul
add
xor
jp
mov
or
xlat
loop
or
insl
xchg
bnd
lods
mov
sub
add
add
cmp
jge
stos
lea
shrb
pop
pop
push
add
add
ret
ds
lock
inc
out
fistl
sub
pop
iret
push
jg
cmp
and
jne
push
adc
jns
decl
or
subl
sbb
shr
negl
push
popa
daa
mov
ret
ret
out
shll
shrl
mov
dec
cmp
sbb
xor
ret
jns
inc
bound
xchg
movl
mov
imul
call
rcrl
xchg
xor
xor
sarb
into
lods
cwtl
xchg
dec
lods
cmc
sbb
jge
and
jmp
inc
hlt
xchg
cltd
nop
scas
xchg
push
or
cmpsb
js
ss
mov
repz
ret
scas
mov
mov
loope
insb
mov
shll
cmpsb
rcrl
movsb
xchg
pop
dec
jno
test
push
mov
inc
enter
jle
xlat
popa
pushf
inc
frstor
add
divb
rclb
nop
lcall
aaa
add
add
add
jg
add
mov
push
xor
fstl
in
sub
fisttpll
jnp
pop
xor
popa
nop
and
stos
or
clc
inc
mov
or
inc
xchg
pop
out
inc
adc
test
icebp
cmpl
push
mov
adc
mov
jbe
sub
mov
or
stos
jmp
cmp
lahf
in
jl
imul
mov
sub
je
mov
ficoml
sarl
adc
add
fbstp
add
add
push
sub
insb
mov
sbb
push
sub
lcall
xorl
jns
push
in
mov
mov
jo
leave
pusha
and
ret
lret
lea
jge
add
js
loope
out
inc
out
xchg
mov
sub
mov
lods
test
or
jl
dec
jbe
idivl
or
aaa
enter
add
add
add
cwtl
mov
jmp
or
pop
inc
cli
pushf
dec
lods
push
aam
mov
jle
sti
mov
sub
pop
mov
push
mov
mov
jnp
daa
adc
fs
mov
cmp
repnz
fsubs
adc
bound
in
ret
xchg
lods
adc
hlt
mull
mov
stos
mov
lds
sub
jno
xor
sub
jmp
nop
cmpsl
xchg
inc
test
je
fstpt
mov
xchg
sub
addb
ss
inc
rcrl
cmp
push
cmp
xor
decl
stos
lods
cmp
pop
jno
cmp
les
mov
inc
jne
jl
mov
mov
ljmp
test
cmp
clc
xchg
js
loop
cmc
loopne
jle
adc
push
in
pop
mov
cli
push
inc
cmp
add
add
and
outsb
sub
stos
fs
jmp
leave
aas
jbe
loopne
je
add
add
add
mov
rorl
inc
cmc
and
jmp
je
push
inc
xchg
out
pop
les
mov
xchg
sahf
int
cmp
cmc
pop
sbb
lea
or
negl
xor
push
pop
inc
sbb
pop
ret
cs
push
rorl
cs
add
in
adc
mov
leave
pop
push
mov
sbb
outsb
adc
sub
mov
idivb
ficoms
insl
mov
sbb
sub
out
pop
pop
rolb
imulb
adc
cmp
mov
jp
into
xchg
push
and
add
mov
sbb
cmp
fsubs
push
popa
push
lods
dec
dec
lods
xor
dec
aas
dec
dec
push
call
or
mov
repz
cmp
mov
adc
std
out
adc
xchg
xchg
lahf
stos
dec
in
dec
or
fnstenv
adc
xor
dec
and
pop
je
jmp
dec
adc
add
add
insb
pop
pushf
scas
fistpll
outsl
gs
cmp
add
add
je
push
scas
movsb
aas
mov
bound
fwait
sti
popf
xor
and
cmp
dec
cli
sbb
and
push
adc
mov
or
in
out
xlat
jno
sub
scas
cld
fs
stc
lret
pop
sti
fwait
jns
pusha
lods
sub
xchg
imul
mov
into
imul
xor
push
or
aad
inc
dec
orb
sahf
add
movsl
mov
clc
jg
pop
jle
and
shl
fwait
sbbl
notb
cli
fcmovne
punpcklwd
mov
and
push
cld
repnz
out
sarb
sbb
push
test
stc
xchg
xorl
lcall
and
add
pop
jle
xchg
inc
out
sahf
pusha
pop
jnp
mov
lret
add
add
cmp
shll
jg
cmpsl
mov
inc
mov
add
cmp
les
dec
and
add
add
cmp
movsb
push
sbb
cmp
sbb
add
add
jno
les
sub
test
into
mov
shll
jo
testb
movsb
int3
mov
mov
cmp
arpl
xor
jae
jb
cmp
imul
pop
lods
mov
ds
cmp
jae
xor
jl
imul
fstpl
out
int
int
mov
gs
divl
or
stc
std
test
sub
mov
test
xchg
icebp
enter
ljmp
filds
sbb
daa
loopne
add
lcall
rcr
adc
and
dec
leave
inc
inc
add
and
mov
idivl
mov
sbb
rcrl
push
pusha
repnz
repz
cld
mov
shll
std
lret
ja
jg
sub
ret
test
push
pop
fnstenv
shll
add
add
adc
jmp
lock
fadds
add
add
int
rcl
inc
test
into
das
xchg
xchg
pop
loop
mov
incb
shrb
add
xor
dec
cmp
push
inc
xchg
mov
pop
jns
fdivrl
mov
xchg
add
in
inc
mov
add
movsb
scas
dec
sbb
and
lods
int3
cs
cmp
popa
test
jmp
or
adc
add
dec
stos
dec
mov
mov
adc
lcall
adc
cmp
jb
dec
outsl
int
push
xchg
cltd
pop
pop
int3
xchg
add
pop
bnd
div
cmc
cmp
mov
in
push
lods
and
cmp
ret
mov
outsb
cltd
mov
frstor
mov
jbe
call
lahf
pop
int3
sti
mov
or
jg
sarb
insl
fdivl
dec
inc
sub
popf
aas
sbb
cld
outsl
loope
arpl
and
das
cmp
lods
repz
mov
push
cmp
add
pop
mov
mov
jne
push
je
jne
ljmp
mov
adc
imul
mov
mov
xchg
enter
or
in
xchg
push
sti
hlt
xor
xchg
stos
xor
mov
or
insb
jbe
add
push
adc
dec
jae
gs
lret
xchg
lea
js
add
scas
repz
inc
sarl
xchg
gs
mov
lcall
dec
repz
sbb
addb
fcomps
xchg
pop
test
fisttps
in
movsb
les
cltd
cmp
leave
bound
mov
js
ja
xor
jmp
and
add
fdivs
leave
popf
inc
out
shlb
pop
add
xchg
es
cs
adc
dec
or
shl
jmp
push
xor
or
dec
xchg
dec
add
xchg
or
sahf
cmp
out
fists
aas
daa
push
cld
push
std
jmp
dec
push
push
loop
add
add
add
std
ja
pop
movsl
ss
repnz
outsl
out
scas
mov
xor
in
lods
enterw
sarb
xor
inc
sub
shrl
movsl
xchg
mov
das
lods
imul
jl
ret
inc
mov
push
add
inc
mov
pop
pop
xor
or
push
inc
mov
cmpsb
ret
add
dec
loop
or
and
icebp
ret
push
stos
inc
push
stos
cmpsl
pop
loopne
enter
movsl
xor
xchg
dec
xchg
dec
das
adc
mov
adc
xchg
test
or
add
jle
push
insl
leave
dec
les
hlt
xor
jge
rorb
aaa
xorl
mov
cmpb
bound
fdivrl
add
xchg
les
jmp
fadds
insb
outsl
loopne
or
sbb
stc
jne
sub
ffreep
popa
mov
lret
add
add
add
sbb
dec
push
out
aad
cld
sbb
pop
mov
add
add
add
dec
and
xorb
inc
jle
fs
outsb
adcb
mov
pop
jle
std
xchg
aas
lahf
sub
sbb
loope
inc
repz
add
jp
out
jnp
xchg
cmp
iret
mov
pop
mov
pushf
xchg
data16
dec
frstor
sbb
ss
or
push
inc
adc
aas
imul
shr
in
clc
sbb
nop
mov
push
pop
xchg
jecxz
mov
dec
out
outsb
int
fiaddl
fildll
popf
inc
aam
fsubrl
js
sub
fs
pop
mov
or
fadd
lea
and
mov
jnp
mov
add
fisttps
fdivs
mov
push
mov
cld
mov
and
sbb
dec
sub
xor
cmpsl
mov
jno
cmp
shlb
repz
xchg
div
sub
xor
add
idivl
or
fmull
add
add
xor
push
sub
dec
call
inc
xchg
add
icebp
cmp
or
call
xlat
adc
into
pop
and
xchg
push
jecxz
mov
xlat
fadd
xor
es
mov
cmc
mov
lcall
test
adc
xchg
jg
popfw
pop
shll
pop
stc
cld
clc
jmp
jge
pop
push
cmc
shlb
outsl
and
shll
pop
in
mov
sti
movsb
dec
andl
ret
cmp
push
jbe
xchg
aaa
or
xchg
out
out
sub
xchg
ror
dec
test
cmp
or
sub
and
movsb
lret
stc
outsb
repz
inc
sub
xchg
pop
ficoms
adc
xchg
data16
and
adc
mov
add
frstor
fisubrl
ror
dec
push
ret
sarl
ficoml
and
sub
mov
scas
jge
pushf
mov
ja
jg
xchg
orl
xchg
xchg
inc
add
add
add
xor
jge
out
mov
adc
test
movsl
cmc
add
jno
and
jle
push
inc
xor
adc
mov
js
inc
cmpsl
pop
and
dec
cld
idivl
xchg
test
mov
push
shrl
mov
inc
sbb
outsl
std
cmpsl
sti
shr
lods
aas
sub
movsb
daa
icebp
and
inc
into
fisubs
and
fcmovnbe
sub
out
push
iret
push
scas
push
xchg
shll
out
nop
cmc
shl
mov
mov
stc
movsb
lock
pop
or
pusha
popa
pop
rolb
popf
outsl
and
inc
sub
add
sti
mov
in
xor
leave
aam
sahf
pop
mov
lds
test
cli
inc
addr16
int3
fmuls
ffreep
leave
mov
in
ds
movsl
jno
and
xchg
cli
mov
out
hlt
xchg
enter
mov
cli
cmp
sbb
mov
mov
add
add
push
dec
lret
jmp
imul
aaa
je
stos
ja
cwtl
inc
add
add
add
mov
mov
xchg
lret
ret
hlt
jb
dec
mov
and
and
jmp
outsl
js
fs
sti
fisubrl
mov
lcall
movsl
mov
out
jmpw
sbb
daa
dec
mov
ljmp
pushf
cmp
cmp
adc
mov
std
jp
sarb
loope
imul
outsl
mov
ds
imul
sbb
inc
xchg
daa
fstpl
outsb
call
pop
jnp
cmpsl
fbstp
cmp
inc
nop
sbb
xchg
fcmovb
aas
out
xor
out
push
mov
jae
push
in
shrb
push
mov
or
dec
push
loopne
dec
iret
call
add
lds
xchg
lret
push
std
sti
pop
sub
pop
and
inc
fmulp
xchg
pushf
mov
cmpb
adc
lds
cmc
cwtl
xchg
push
sub
add
add
add
push
pop
test
jae
sub
test
mov
inc
and
aad
jmp
jmp
jae
add
xchg
add
add
dec
scas
shlb
mov
lahf
sysenter
orl
or
mov
orl
pusha
ficompl
ret
or
sbb
scas
pusha
in
scas
xor
pop
nop
iret
aaa
or
mov
inc
repnz
lds
addb
lea
mov
xor
outsl
sbb
outsl
pop
cmp
sti
pop
xchg
out
pop
adc
dec
add
sbb
ljmp
pop
cwtl
jns
test
mov
ret
inc
sbb
cmp
ljmp
and
int3
inc
lret
sahf
add
cmpsl
test
sub
idiv
xor
jno
repz
xor
movl
fistpll
sub
jns
xor
jg
stos
mov
add
add
jmp
mov
cmp
mov
xor
cmp
out
ret
pop
sbb
dec
pop
add
leave
leave
iret
and
imul
movsl
push
fisttpl
fbld
mov
sub
push
fadds
sti
leave
sub
xchg
mov
cmp
sbb
cwtl
sub
mov
mov
leave
jp
mov
dec
cmp
testl
sti
mov
cltd
mov
push
leave
out
fisubs
daa
jp
or
add
bound
cmp
and
dec
sbb
out
lds
jecxz
shrl
cli
mov
mov
adc
stos
or
adc
push
mov
aam
popa
or
adc
lahf
out
xchg
aaa
or
pop
xchg
fwait
mov
imul
pop
out
sub
pop
lcall
leave
adc
mov
add
aaa
adc
mov
test
in
push
stos
js
ret
jg
decl
rol
adc
add
add
add
cmp
mov
dec
xor
jmp
daa
xchg
lahf
adc
pop
xchg
mov
push
in
mov
lds
jbe
mov
pusha
sbb
das
or
cmp
ret
dec
inc
pop
in
push
inc
cmc
mov
sub
and
jns
test
adc
jnp
loopne
inc
inc
push
inc
out
shll
in
clc
ret
loopne
pop
hlt
sbb
push
pop
xchg
xor
insb
lods
add
fnstsw
push
mov
xchg
notl
push
push
inc
stos
cwtl
push
and
fiadds
fcoms
rorb
jno
fisubrs
and
flds
repnz
lret
inc
adc
cmp
lds
jnp
ret
sub
pop
fmul
xor
ljmp
nop
xor
mov
dec
enter
mov
inc
fiaddl
add
add
das
mov
out
aad
xor
in
test
add
add
add
adc
pop
popf
mov
inc
sub
cmc
ror
adc
mov
popl
adc
fmull
aam
xor
hlt
sub
nop
mov
sahf
sub
jmp
adc
imul
pop
xchg
mov
add
ret
push
daa
aad
mov
push
cmp
bound
sub
xchg
lds
add
adc
dec
lods
add
and
xchg
imulb
dec
fsubs
or
dec
js
mov
jo
adc
outsb
mov
addr16
ret
cmc
and
out
jge
sbb
mov
or
push
adc
add
jno
jg
lahf
pop
outsb
out
mov
sub
mov
mov
int3
daa
fs
push
dec
mov
lods
fldenv
sbb
inc
add
loop
int3
movsb
sbb
loop
and
and
add
add
hlt
gs
dec
adc
mov
lods
inc
add
add
add
test
cmpsb
in
scas
mov
inc
addr16
out
mov
stos
je
lods
xchg
pop
daa
adc
movsb
dec
sbb
cmp
sbbl
jne
and
add
mov
mov
daa
pusha
pop
mov
jbe
stos
sbb
iret
scas
mov
cltd
ja
add
pop
das
pop
xchg
jg
pusha
pusha
push
imul
out
push
xor
mov
imul
lret
out
adc
ret
pop
subl
mov
fldcw
loop
bound
inc
jne
repnz
mov
lcall
inc
add
inc
xor
adc
xchg
pop
outsl
xor
xchg
mov
xor
faddl
gs
addb
push
cmp
out
xor
sbb
push
hlt
sub
aaa
add
xchg
pop
pushf
push
out
flds
and
fnstcw
xchg
push
enter
mov
jnp
or
xor
add
add
add
aas
gs
pop
repnz
dec
add
add
add
daa
shlb
or
and
or
cmc
and
mov
imul
push
inc
pop
ja
sub
inc
clc
xor
int3
xor
shlb
push
outsl
adc
cmp
dec
add
addr16
pop
movsl
sub
test
cli
mov
sub
int3
pop
adc
lcall
pop
mov
in
ja
jle
sub
std
and
mov
in
add
rcll
lock
mov
shrl
leave
movsl
add
mov
mov
push
in
mov
adc
dec
dec
aas
xchg
into
mov
dec
inc
cs
lahf
jae
gs
mov
pop
lock
std
sbb
adc
sub
push
sbb
mov
cmp
aaa
int
in
pop
inc
add
and
mov
add
mov
out
fisttpll
lock
add
add
add
lds
outsb
aad
xchg
stos
add
push
push
jg
mov
add
test
into
inc
jbe
jg
sub
pop
jp
outsl
dec
lret
cltd
in
nop
dec
call
mov
mov
out
mov
ss
cmp
xchg
lret
fdivr
push
mov
push
daa
adc
pop
xor
cltd
push
shr
mov
loop
pop
cmpsl
sbb
add
cmpsb
enter
push
decl
sub
add
ja
ret
dec
ret
jge
push
in
mov
push
cmp
add
cmp
hlt
jno
fidivrs
lahf
add
cmp
and
movsb
lea
xchg
out
es
mov
lahf
cmp
adc
add
ja
rcrb
dec
mov
cmpsl
sti
cmpsl
mov
ja
movsb
lods
imul
in
and
xorb
mov
and
lds
add
xlat
xchg
add
add
mov
ljmp
add
add
add
movsb
fwait
mov
aam
dec
adc
sbb
fnstenv
insb
rcrb
out
sbb
sbb
loop
fwait
dec
sub
jne
mov
jb
mov
out
iret
add
loopne
or
mov
adc
mov
or
addb
inc
push
cmp
in
mov
jns
mov
sub
test
popf
xlat
out
scas
daa
jg
mov
stos
jnp
orl
notl
jmp
cmp
sub
aaa
loop
arpl
test
aad
jo
jge
sbb
scas
repz
popa
mov
xchg
add
ret
xlat
push
xchg
notl
or
shl
mov
mov
and
popf
mov
push
inc
mov
and
mov
push
adc
loope
loopne
dec
aaa
stos
xchg
lds
sarb
xchg
jl
jnp
pop
push
jp
div
push
sbb
jmpw
fnstcw
jo
sahf
jb
fs
mov
add
add
movb
adc
mov
and
jo
mov
into
cmp
ljmp
out
fdivrp
mov
lret
mov
fldcw
inc
cs
push
push
bound
xchg
jmp
add
cmp
test
adc
ss
pusha
inc
mov
pop
mov
cs
push
fs
stos
in
mov
and
shrl
xor
lods
out
adc
lods
push
mov
popa
cld
in
adc
cli
jecxz
outsl
jmp
push
dec
xchg
adc
adc
pop
cld
outsb
mov
or
bound
cmp
addr16
cmp
inc
xchg
rcll
xchg
dec
xor
mov
ret
pop
fwait
insb
stos
or
pusha
mov
xchg
mov
and
or
push
lcall
jle
mov
sub
subl
xchg
arpl
cmp
imul
out
mov
mov
imul
add
add
push
xchg
in
adcb
mov
js
adc
pop
rcrl
mov
aam
mov
test
rcl
jle
mov
mov
out
mov
push
call
pushl
mov
fldenv
lds
and
push
mov
pop
mov
or
or
fwait
jmp
ljmp
mov
inc
mov
sub
push
add
cmp
push
aam
xor
adc
mov
and
xor
aas
repnz
data16
inc
xor
jae
push
pop
ja
jne
cmp
lret
lahf
hlt
pusha
xor
add
cmpl
stos
out
loopne
nop
sbb
mov
jne
nop
loope
aas
mov
and
imul
inc
xchg
and
cmp
dec
iret
jge
jl
js
add
dec
stc
mov
ljmp
les
add
add
test
mov
mov
adc
bound
jle
fcmove
inc
sbb
pop
data16
jbe
imul
sarb
enter
mov
outsl
or
dec
enter
je
js
mov
jl
xchg
pop
mov
cld
and
int3
xor
push
int3
xchg
or
test
pop
dec
xor
sbb
int3
test
nop
gs
pop
js
push
ja
mov
arpl
cmc
add
lock
ret
lcall
scas
adc
fstpl
adc
mov
int
xor
pop
mov
xchg
in
sub
mov
mov
pop
repz
cli
in
dec
mov
add
fldt
xchg
popf
out
insl
pop
push
add
mov
fmull
imul
add
sbb
sar
addr16
jb
lret
xchg
cmp
jle
jg
cld
lcall
jb
dec
add
add
add
fisttpl
adc
cmpsb
shrl
and
jae
sbb
adc
pop
pop
mov
pop
loop
scas
dec
pushf
rol
add
sbbb
fstl
iret
or
in
pusha
ret
std
aad
mov
mov
add
or
ja
in
or
scas
bound
mov
xchg
mov
push
sti
mov
inc
fidivs
mov
cmp
cmpl
mov
xor
nop
inc
or
dec
int3
pop
insl
mov
test
add
loope
inc
mov
in
sub
fisubrs
fldt
or
lcall
stos
dec
jge
or
mov
and
in
fdivrs
lds
push
ds
aam
inc
mov
mov
test
push
add
clc
mov
lock
cmp
cmc
sbbl
lock
aad
jnp
xor
sbb
movsb
and
filds
add
mov
xchg
mov
pop
cmpw
dec
add
add
add
aad
xchg
stc
add
popf
and
xchg
mov
bswap
mov
mov
mov
jo
out
out
mov
fnstsw
movsl
dec
clc
stos
addr16
push
fwait
inc
xor
or
js
add
push
jb
mov
inc
mov
cmp
jl
pop
xchg
sub
mov
orb
fldcw
push
jg
adc
daa
dec
aad
outsl
cmpsl
mov
xor
imul
icebp
int
in
data16
cmp
push
xchg
addr16
out
cld
cltd
xchg
xchg
jae
mov
fcomp
or
xor
scas
pop
jl
pop
add
popa
pop
or
shll
je
ret
dec
cltd
dec
repnz
cmpsb
insl
adc
add
pop
dec
shr
and
ljmp
xor
xchg
movsl
cmp
mov
dec
incl
pop
cmc
movsl
push
mov
push
leave
popa
dec
push
sub
cld
movsl
orb
add
add
inc
mov
push
push
jmp
push
mov
adc
push
add
add
add
mov
mov
mov
rcll
mov
scas
pop
clc
jle
mov
pop
mov
test
cmp
push
sub
mov
inc
ret
pop
iret
shlb
push
nop
inc
mov
test
mov
imul
inc
mov
cs
jno
jnp
aam
mov
iret
pop
addl
pop
fidivl
out
jg
mov
or
sub
jne,pt
outsl
xor
sbb
xchg
and
jl
cmp
pop
test
dec
ds
imul
or
jne
dec
mov
in
lds
mov
mov
testl
dec
mov
fisttpll
roll
ror
dec
int3
push
in
fisubrl
bound
dec
adc
shlb
inc
sub
push
add
fsubrl
mov
out
cmp
ret
or
cs
xchg
aam
add
add
add
adc
imul
shll
add
sub
cs
adc
inc
test
jmp
fbstp
push
in
out
jge
loopne
ljmp
inc
sbb
cmpsl
ficoms
push
fldl
pop
inc
ds
insl
or
lods
ficompl
sub
cmp
rolb
push
push
pop
xlat
ja
push
outsl
je
ret
iret
cwtl
cmovl
cmp
sbb
pop
bound
pop
out
arpl
add
jne
aam
ret
popa
test
and
call
mov
stos
sbb
fistps
adc
xchg
lret
fisubrs
pop
and
push
dec
and
and
imul
je
push
rcll
sbb
faddl
fldenv
cmp
es
cli
inc
rcll
in
xchg
lret
fwait
xor
cmpsl
sub
mov
add
add
push
shll
out
pop
pop
pushf
push
xchg
add
add
add
dec
adcb
push
fsqrt
inc
add
adc
stos
mov
in
ljmp
push
xchg
mov
ljmp
call
pop
ret
icebp
adc
xor
rorl
push
sbb
dec
into
sbb
mov
popa
mov
lret
int
ja
rorl
mov
fs
pop
test
loope
cmp
inc
in
cmp
into
fwait
into
jl
push
incb
clc
fnstsw
scas
lret
lods
js
push
subl
lds
mov
mov
push
sbb
adc
iret
rcr
mov
inc
inc
push
mov
xchg
cmp
cltd
loopne
repz
gs
xor
mov
ljmp
mov
push
hlt
push
pusha
in
cld
shlb
and
push
jmp
fildl
rcrb
push
scas
repz
inc
rorl
add
out
lcall
hlt
mov
jae
mov
push
add
add
add
dec
lds
pop
jno
stos
pop
xor
aas
loop
xor
cmp
je
daa
cmpsl
xor
sbb
ss
cmp
push
xchg
add
fwait
sbb
test
pusha
push
lcall
push
cltd
fidivrl
fwait
testl
mov
ja
mov
pop
mov
shrl
pop
hlt
dec
outsb
mov
dec
pop
enter
pop
es
test
and
fidivrs
fbld
gs
sbb
lcall
push
pop
pop
flds
cmp
lret
lcall
cld
pusha
xchg
cmpb
in
insl
jl
sbb
repz
mov
bound
rolb
sub
add
or
insl
xchg
mov
mov
shll
adc
dec
aad
inc
fiadds
ret
clc
aaa
adc
add
bound
imul
int
mov
push
add
add
add
cmc
fisubl
mov
xchg
sbb
mov
pop
pop
in
shlb
inc
minps
sub
ror
xlat
ljmp
push
adc
push
push
sbb
xchg
mov
sub
sbb
imul
les
lahf
dec
hlt
dec
or
dec
aaa
addl
cs
repnz
xchg
pop
sub
push
cvtps2pi
or
int3
sbb
cmp
push
imul
jle
sbb
mulb
and
mov
fcmovbe
sbb
roll
inc
or
jo
fs
movsl
lea
daa
xor
add
pusha
loope
and
jns
or
adcl
imul
test
insb
nop
and
leave
add
test
jbe
aaa
cmp
dec
jmp
mull
pusha
sbb
loope
hlt
dec
mov
add
pop
or
fcos
mov
out
ffreep
lods
jae
fwait
cmp
stos
sarb
in
add
add
add
jo
into
es
rcrl
sub
pop
repz
and
aaa
loop
enter
gs
icebp
add
mov
aaa
and
rol
pop
cmpsb
aas
mov
in
adc
adc
xchg
jnp
sahf
jle
sub
int
insb
adcb
push
cmp
dec
shlb
mov
ret
inc
mov
shlb
xchg
stos
mov
jecxz
les
mov
inc
mov
imull
shlb
push
push
mov
adc
push
inc
mov
sbb
cs
pushf
mov
cmc
push
movsb
mov
sub
fildl
test
mov
lret
add
fwait
add
ljmp
into
imul
mov
cwtl
out
rcll
push
pop
adc
jno
out
xchg
ss
imull
adc
cmc
push
frstor
or
jb
pop
xchg
mov
inc
ja
notb
dec
push
cwtl
jno
add
add
inc
push
clc
mov
and
hlt
pop
xor
imul
add
add
fucom
call
out
les
cltd
mov
fs
dec
or
inc
lcall
les
mov
xchg
out
jl
mov
sbb
out
ret
pusha
add
nop
cmpb
ss
aad
cmp
inc
shlb
dec
cmpsl
je
into
mov
cmp
rorb
sbb
loopne
dec
mov
or
loop
orb
adc
xchg
fs
lods
xorb
fcomi
mov
inc
pop
dec
fimull
dec
test
mov
push
mov
enter
push
mov
jns
adc
sbb
sbb
scas
mov
inc
cli
xchg
sub
mov
push
inc
ss
inc
jno
inc
pop
xchg
dec
inc
push
loopne
dec
cmp
cld
sahf
adc
enter
xor
jnp
js
lock
add
scas
xchg
push
adc
out
mov
pusha
pop
pop
xchg
push
add
add
add
mov
popf
adc
testb
jecxz
and
cltd
mov
movsl
xchg
mov
iret
test
test
pop
call
rorl
call
add
popf
adc
clc
dec
inc
add
sarl
mov
jae
fs
xchg
repnz
out
in
mov
dec
push
xchg
andb
mov
nop
mov
addb
cs
mov
jno
xchg
ret
sbb
jmp
inc
fmuls
imul
lret
sbb
mov
jg
out
fmuls
popf
mov
cs
jb
xchg
mov
frstor
mov
inc
or
lods
pusha
clc
jl
andl
ljmp
scas
ffreep
mov
stos
mov
push
imul
mov
shlb
xchg
mov
xor
inc
ds
aam
mov
xor
push
or
sbb
and
aad
add
add
mov
lds
aad
enter
lock
add
add
add
daa
stc
fimull
or
jecxz
mov
mov
push
bound
lea
je
hlt
test
dec
xlat
insb
movsb
and
lret
ds
jnp
fnsave
mov
movsb
fistl
xchg
and
daa
idivl
mov
fwait
into
and
fcomps
nop
cmp
push
repz
dec
dec
mov
rcrb
add
test
rcrl
add
inc
dec
aad
outsl
cwtl
push
fdivs
push
data16
imul
xchg
inc
jae
push
xchg
roll
inc
mov
lods
rcl
push
lret
jl
rsqrtps
cld
xchg
inc
pusha
imul
enter
lea
jb
inc
cmpsl
repnz
mov
cli
lret
clc
iret
je
push
cmp
sub
dec
shll
mov
nop
xor
fcoml
xor
pop
and
cmp
loop
and
pop
mov
and
ret
fwait
movsb
sti
mov
ss
stc
inc
jge
or
xchg
mov
and
das
cmp
pusha
xchg
out
add
add
add
dec
clc
mov
sbb
mov
and
movsl
adc
adc
add
pop
sub
ficomps
mov
xlat
sbb
addr16
test
movsl
mov
push
xchg
ret
pop
das
popa
fmuls
jecxz
sub
inc
jp
inc
aad
xorb
fstpl
adc
not
adc
push
cmp
pop
ret
dec
xchg
fs
cmp
loopne
add
fildl
mov
stc
mov
xlat
xor
popa
sbb
ret
xor
lock
nop
jbe
stc
mov
aam
xchg
add
les
jge
jbe
js,pt
outsl
push
scas
xchg
adc
stos
aam
mov
mov
add
es
fdivrs
inc
repz
pop
jae
icebp
xor
jmp
or
inc
push
sahf
roll
fstpl
xor
insl
mov
popf
xor
cmp
lods
call
jle
sbb
enter
les
add
add
movsb
jae
jnp
mov
ja
mov
mov
add
add
add
fwait
push
daa
icebp
adc
pusha
mov
call
mov
inc
cmpsl
jmp
cwtl
sub
rorb
pxor
repnz
jp
mov
fisubl
into
mov
clc
fwait
jae
jb
mov
inc
test
vmovaps
push
mov
push
lods
outsb
popa
test
stos
imul
pop
push
sub
loop
mov
popf
mov
xchg
insl
aam
fbstp
mov
xor
mov
jae
rclb
push
in
in
inc
inc
int
mov
aam
scas
repz
jl
pop
call
sbb
fucom
mov
outsb
movsb
xchg
add
mov
adc
cmpsl
loope
jecxz
sub
je
lret
jns
cmpsl
cs
jne
and
or
xchg
das
test
mov
aam
out
sbb
data16
pop
mov
and
jmp
mov
lods
sub
add
add
xor
xlat
out
cld
inc
int3
les
add
add
mov
xchg
jecxz
jb
hlt
jle
mov
pop
sahf
nop
nop
mov
cmc
xchg
xor
pop
mov
notl
mov
cmp
inc
gs
push
cmp
jg
arpl
test
push
loopne
arpl
add
mov
sarb
out
hlt
test
dec
xchg
shl
in
cmp
stos
daa
push
adc
mov
std
nop
ja
push
ss
imul
pop
lret
and
inc
cmp
loopne
hlt
fistps
jp
mov
push
pop
fldcw
sbb
mov
das
sbb
lret
or
fildl
pop
push
lahf
push
sub
push
repnz
das
inc
test
pop
xchg
mov
push
pop
adc
mov
fs
jmp
mov
stos
std
scas
xorl
fmull
cltd
in
mov
cli
jecxz
ret
cmp
adc
dec
sbb
add
outsb
mov
mov
in
push
push
add
add
add
aam
fcmovnbe
push
ret
jb
add
popf
popa
call
test
shll
xchg
test
dec
sub
shll
movsb
inc
cs
out
cmc
repnz
incl
adc
cwtl
jne
cmp
cmp
into
enter
cs
in
add
jg
mov
inc
fldenv
dec
scas
and
sbb
dec
sbb
mov
sti
leave
pop
xor
ss
xchg
mov
xchg
aad
jnp
add
add
bound
jns
cmp
cltd
dec
insl
fbstp
xchg
je
bound
loopne
add
mov
hlt
xlat
sbb
in
sub
xor
rolb
lret
mov
test
mov
cmpsb
lods
cmp
dec
and
or
xor
xchg
sbb
add
pop
pop
pop
sub
pop
dec
jmp
pusha
sbb
stos
outsb
jge
xor
clc
sbb
push
ljmp
out
into
push
push
inc
lahf
mov
add
add
add
add
dec
mov
jnp
sbb
jmp
mov
das
inc
jb
push
inc
fs
stc
sbb
cwtl
adc
xchg
pop
mov
sub
push
pushf
xchg
daa
jb
cli
dec
out
jg
clc
imul
daa
xchg
push
movsl
lods
out
xchg
popa
shrl
mov
lcall
and
xor
insl
cltd
jge
out
mov
inc
insl
jno
or
mov
push
adc
jns
inc
xchg
lods
jno
fwait
mov
jb
roll
loopne
xchg
pop
gs
dec
jne
daa
mov
nop
inc
mov
jl
dec
jp
flds
aam
jge
push
movsl
mov
out
stc
sarb
ja
cmp
pop
mov
or
and
ja
or
xchg
push
inc
xor
shlb
out
or
xor
jne
test
fs
jns
das
ja
adc
pop
sbb
add
and
mov
jg
or
or
add
add
adc
push
dec
xor
das
add
call
enter
imul
aad
and
dec
ss
sahf
hlt
pop
cmpb
and
shl
jle
notb
mov
pop
fimuls
xchg
push
outsl
jle
fs
jl
orl
mov
test
inc
mov
imul
iret
insl
xchg
push
test
add
inc
push
jo
dec
insl
jg
or
sbb
pop
mov
ret
cmp
mov
scas
test
mov
mov
xchg
test
ret
out
xorb
ret
jecxz
sub
sbb
iret
inc
jmp
push
lcall
pop
dec
pop
insl
jle
leave
sbb
ret
mov
lods
jmp
pop
stos
mov
jns
jae
xor
das
cmpl
adc
aas
mov
sbb
cmp
mov
add
add
lahf
pop
cmpsl
jne
mov
or
add
add
sub
cmp
mov
mov
andb
fdivrp
or
pop
hlt
xor
sbb
outsl
mov
in
adc
fldenv
mov
jbe
nop
js
ffreep
push
pop
mov
pop
cs
jg
outsb
test
and
test
pop
jnp,pt
leave
xchg
add
fldl
inc
pop
movsb
mov
push
or
addr16
aas
jmp
mov
aaa
daa
fwait
sar
test
sbb
cmp
lock
outsb
inc
ret
inc
jo
ds
shll
andl
mov
jb
mov
jmp
xor
jmp
negl
xchg
mov
push
mov
sbbb
cmp
rorl
test
dec
pushf
clc
into
add
pop
lret
xor
iret
insb
jl
mov
push
outsl
pop
or
mov
push
arpl
sahf
pop
testl
and
inc
adc
add
add
repz
imul
or
lahf
jo
mov
lcall
lcall
divl
fsubl
pop
shlb
dec
fstps
mov
xor
fwait
int3
divl
push
ror
jl
push
repz
inc
hlt
out
mov
sbb
jno
xchg
adc
adc
dec
sub
cmp
pop
leave
xchg
rolb
or
cmc
push
jo
in
jmp
mov
cld
mov
adc
push
fnstenv
cltd
mov
cltd
push
push
jbe
xchg
fmuls
aaa
imul
jns
inc
cmp
aas
cwtl
dec
inc
add
jne
mov
popf
loop
test
loope
sbb
sbb
fsubr
hlt
les
dec
sbb
nop
sarl
out
enter
mov
jns
icebp
add
outsl
mov
mov
call
outsb
mov
and
fimuls
dec
mov
add
inc
pop
mov
fstps
stos
icebp
adc
add
add
add
lret
into
adc
sbb
icebp
mov
jle
adc
int
dec
cmp
rol
pop
xchg
push
inc
ret
mov
pop
loope
dec
fdivs
fdivs
xchg
sbb
cmp
and
popa
daa
mov
popf
addl
clc
test
jae
in
maxps
into
dec
test
inc
lods
fcmovnbe
cmp
cmp
mov
jne
gs
jmp
cmpsl
pusha
cs
sbb
fcoms
push
xchg
test
adc
add
ficoms
cli
lea
push
loop
xor
xchg
sub
mov
loopne
jmp
int3
loopne
mov
mov
out
dec
mov
jbe
mov
je
push
rcr
push
xchg
mov
ljmp
pop
push
sbb
imul
movsb
adc
and
lds
leave
or
push
in
or
add
repnz
movsb
jle
arpl
leave
ljmp
add
add
mov
fnstsw
addr16
or
dec
mul
adc
mov
lahf
aaa
inc
loopne
pop
cmp
push
test
sbb
loopne
mov
mov
test
jo
outsb
lods
cmp
add
imull
xor
ss
cmp
lds
pop
adcl
test
dec
outsb
lret
mov
mov
xlat
inc
icebp
repz
jne
test
adc
sub
mov
cmp
or
call
jb
xchg
inc
andl
leave
in
pop
in
fcomps
lods
inc
das
xor
sbb
icebp
addr16
adc
add
and
add
dec
push
lds
lahf
shlb
inc
int3
mov
dec
mov
xchg
daa
pop
adc
push
mov
push
pushl
fistps
xor
mov
pop
xorl
inc
mov
fsubrl
stos
sub
stos
out
jmp
sub
cmc
mov
and
add
add
add
stos
cmp
stos
cmc
pop
fists
xor
push
test
inc
xchg
pop
add
push
jne
add
mov
ja
cmpsl
cmpsb
lcall
mov
inc
idiv
mov
les
lock
fcmovnu
xchg
mov
and
inc
or
cmc
pop
add
repnz
xchg
jns
ret
cmp
lret
loop
mov
add
push
in
pop
inc
das
push
push
ud0
pop
mov
jl
xor
jno
lds
pop
push
sub
dec
movaps
cltd
out
outsb
aam
ds
sub
fcomip
out
std
cmp
lock
sbb
enter
adc
inc
inc
in
cwtl
ss
adc
loop
pop
mulb
inc
scas
jns
outsb
pop
nop
inc
ljmpw
pusha
in
xor
mov
mov
sti
pop
lcall
mov
or
xor
pusha
cltd
movsl
and
or
add
add
mov
fnstenv
cmpsl
add
inc
and
add
add
mov
inc
inc
sub
mov
jecxz
mov
or
lock
dec
jmp
jl
sbb
lods
kmovb
pop
sbbl
addr16
cmp
je
cvtpi2ps
scas
jns
mov
xlat
shlb
push
cmpsl
jl
repnz
dec
add
in
dec
pop
and
dec
xchg
mov
inc
stos
pop
mov
or
inc
pop
cmp
stos
inc
incb
mov
xchg
lea
in
cmc
rcr
cmpsl
ds
clc
ja
fmuls
rorb
xor
into
sahf
clc
mov
xchg
adc
pushf
cmc
arpl
ljmp
xor
xor
mov
bnd
mov
add
cmp
scas
push
pop
adc
inc
or
jnp
ret
sbb
movsl
stc
frstor
jae
add
add
add
add
cld
je
jbe
jns
sbb
jmp
add
add
add
lods
das
and
loope
xchg
pop
int3
or
jp
stos
es
xchg
xchg
cmp
mov
mov
cmpsl
scas
stc
inc
dec
cmp
lods
cld
fisubs
adc
mov
lcall
cli
fwait
loop
ja
lods
jp
fldcw
mov
cli
pop
js
aad
xchg
clc
and
lahf
add
pop
jl
jae
aaa
mov
mov
rorl
adc
cmp
add
popa
pop
pop
mov
xor
inc
in
push
fcompl
int3
repnz
movsb
push
imul
cmp
andb
ss
aas
inc
dec
aam
adc
les
push
xchg
sub
mov
jp
lahf
outsl
push
aad
dec
and
insb
sub
std
xor
out
shl
mov
mov
inc
mov
stc
lock
in
fmuls
inc
cld
xor
pop
pop
scas
push
cltd
jmp
fildl
or
add
add
add
adc
int
popa
cmp
fwait
loop
ljmp
inc
mov
push
or
outsb
sub
shrl
leave
daa
test
push
sub
mov
sbb
jl
es
fistl
adc
clc
pushf
jp
lods
or
push
pushl
cmp
sarb
jle
mov
movsb
push
ret
mov
xchg
push
mov
scas
or
push
pop
movsb
movsb
insl
adc
movd
sub
subb
mov
test
xchg
and
jg
iret
inc
push
push
or
mov
adc
mov
push
dec
and
or
jns
movsb
xor
mov
cwtl
mov
clc
sbbl
xchg
data16
loopne
sbb
lcall
and
adc
jle
mov
test
insb
jns
mov
aam
sub
add
add
push
jg
dec
xchg
dec
add
sub
add
add
and
cmc
lahf
out
xchg
inc
cmp
arpl
jmp
and
push
push
push
push
add
test
add
mov
adc
jno
mov
cmp
mov
push
push
aas
cmp
clc
imul
in
insl
push
test
fidivrs
jge
mov
cmp
subb
int
pop
inc
pop
je
cld
fstpt
je
ret
dec
pop
fadds
fildll
sbb
cmp
mov
lahf
inc
cmp
fwait
mov
vmaxsd
inc
not
and
lods
lods
inc
jg
popf
testl
mov
enter
mov
bnd
sbb
daa
xchg
cmpb
push
mov
xchg
cltd
inc
daa
mov
inc
inc
lcall
sub
in
mov
gs
jmp
mov
jbe
pop
cs
mov
and
sti
shrl
add
add
mov
fucomip
push
insb
xor
jg
pusha
adc
imul
add
dec
sbb
sbb
movl
mov
mov
mov
sbb
inc
ret
mov
xor
loopne
mov
loop
cli
loop
sub
aam
es
adc
loopne
lret
or
sub
into
pop
xchg
lods
lahf
testb
adc
lods
insl
cmp
rorl
mov
mov
mov
jae
lcall
outsb
aas
cmc
mov
pop
mov
add
aaa
xor
movsb
mov
popa
movsl
mov
or
mov
cli
loope
mov
sahf
or
shl
aaa
imul
push
inc
xorb
or
repnz
jg
cmovnp
ds
cmp
xchg
push
mov
and
mov
mov
rorl
mov
pop
lahf
push
adc
mull
push
stos
ja
inc
ret
add
imul
dec
out
iret
jmp
aas
in
push
data16
or
push
add
add
in
test
and
ja
mov
xchg
out
sbb
mov
push
loop
aam
pop
std
mov
int3
xor
dec
fnstsw
popf
clc
adc
cmc
fidivrl
adc
mov
sub
lock
dec
test
call
add
dec
divl
lret
fsubl
movsl
outsl
push
mov
and
adc
mov
cld
ret
imul
lock
sbb
jo
ja
mov
test
test
cmp
xor
fsts
ret
outsb
cmp
push
ret
cmp
cld
pop
and
mov
push
and
pop
insb
adc
sbb
cmpsl
sub
push
dec
inc
lret
lods
push
rorl
jne
rcrb
enter
mov
and
lock
mov
cmp
outsl
cli
xor
add
pop
sub
imull
jmp
add
cmpsb
push
jnp
std
cmpsb
pop
dec
sub
sub
je
push
add
add
out
push
ret
xor
lret
popf
xchg
xchg
jp
dec
in
fcmovnu
sub
ds
insl
and
movsl
dec
cmp
cmp
das
pushf
mov
xor
enter
mov
cmp
push
inc
push
cmp
cmp
mov
cmp
xor
imul
xchg
test
or
push
xor
cmpsl
adc
ds
out
ss
pop
ret
adc
push
int
cmp
daa
mov
jmp
pop
mov
lahf
out
jmp
mov
jg
xorl
fnstsw
clc
int
scas
shlb
and
pop
adc
cmpsl
cmp
add
jo
rclb
sti
hlt
xor
in
xchg
shrl
jmp
imul
movsb
dec
jmp
mov
add
mov
lret
icebp
dec
fmuls
lret
mov
sbb
adc
daa
shll
add
add
neg
std
sub
dec
lret
sarl
add
add
add
ret
xor
push
sbb
pusha
scas
push
push
movsb
or
enter
mov
fbstp
ja
xor
mov
pop
or
jecxz
jns
pop
add
mov
mov
lods
shll
cmc
add
adc
cmc
std
cmp
jnp
and
cmp
cmp
fldcw
fisubrl
push
lret
add
xor
inc
testl
pop
cmc
cld
nop
ficoml
mov
mov
mov
pop
dec
mov
call
lret
popfw
cmp
jle
mov
pop
out
sub
push
js
in
rclb
xchg
xchg
mov
sub
inc
sub
test
add
jmp
xor
adc
jnp
mov
add
pop
lahf
pop
int
jecxz
lret
jb
ds
ds
cmp
fdivrl
sub
xlat
sldt
add
push
subb
in
push
mov
hlt
or
roll
add
add
add
cmp
mov
xchg
ss
test
jge
jmp
push
jnp
js
mov
sub
je
imull
adc
setg
pop
pop
insb
mov
repnz
xlat
popa
fdivp
aas
jmp
mov
adc
pop
fisubrl
push
jno
jo
mov
shll
xor
ret
push
mov
xchg
mov
dec
add
push
add
inc
test
sarb
push
and
pop
loopne
out
cmp
cmpsl
xchg
cmp
pop
push
in
mov
lahf
pop
add
or
mov
lods
adc
jmp
popa
adc
add
cmc
aaa
scas
mov
icebp
movsb
je
out
cmp
or
lret
sub
xchg
movsl
adcb
out
leave
mov
in
pmaddwd
int
scas
iret
push
dec
dec
adc
cmpsb
stos
push
fbstp
fidivs
add
add
ja
out
sbb
bound
add
add
push
push
fcom
pop
sbb
jmp
out
hlt
lret
cmp
xchg
push
loop
xor
add
outsb
movsl
shll
arpl
cmp
add
mov
cli
cmp
push
inc
loop
in
mov
mov
mov
and
mov
call
mov
les
popa
dec
mov
pushf
imul
test
ja
repz
movsl
sub
pop
jo
xor
daa
shl
sti
scas
stc
mov
xchg
shlb
mov
stos
and
mov
sub
enter
or
imul
in
mov
sub
mov
aad
dec
xchg
loopne
lods
lea
pop
repz
jge
inc
mov
fcmovnbe
stc
mov
push
test
repnz
out
push
mov
ror
inc
jo
mov
aam
js
hlt
daa
sub
ja
mov
jnp
repz
outsl
add
add
add
xchg
popa
rcrl
inc
mov
sub
inc
push
add
cmpsl
in
jne
aam
les
and
repz
mov
cli
fdivl
daa
inc
mov
inc
lock
addl
ret
iret
inc
mov
mov
cld
or
xor
push
inc
ror
pop
push
inc
inc
pop
mov
lds
mov
xor
out
adc
xchg
dec
ret
mov
pop
dec
jb
clc
fs
jge
fists
mov
mov
lds
out
add
xchg
mov
stos
repnz
lds
add
push
push
xor
pop
mov
fmulp
addr16
lret
dec
cmp
add
push
ja
inc
add
rcrb
mov
flds
xor
hlt
cmp
sti
mov
sub
mov
lock
sub
dec
xor
add
add
cmp
jnp
outsl
cmpsb
loopne
pop
xchg
adc
add
add
stc
cmp
cmpl
sub
pminsw
jo
add
mov
sub
pop
mov
fdivl
xor
pushf
aaa
inc
push
xchg
scas
ja
adc
sub
cwtl
add
xor
pop
sub
outsl
mov
lret
sub
mov
xchg
lahf
fs
mov
out
out
cwtl
fwait
outsl
or
in
jl
dec
sbb
mov
frstor
xor
in
pop
sbb
xchg
pop
cmpl
or
dec
xorl
pop
popf
mov
cmp
sbb
mov
sahf
inc
cli
aad
outsb
push
sub
mov
jecxz
mov
enter
test
cli
lds
sbb
cmp
and
leave
or
popa
loop
loopne
mov
push
jmp
roll
push
out
fisttpll
lret
negb
mov
in
mov
sub
dec
sbb
sbb
outsl
dec
xlat
sub
aam
sahf
mov
xchg
push
mov
cli
xchg
jle
push
je
mov
jno
add
add
negl
dec
xchg
push
push
sysenter
aad
sub
test
aad
out
pop
push
or
mov
mov
mov
cltd
xor
mov
pop
in
mov
faddl
fstps
fisttpll
aaa
test
mov
add
iret
movsl
das
mov
bound
fwait
pop
push
scas
cltd
imul
and
aaa
pop
adc
in
or
subl
mov
cs
push
jl
sbb
mov
pop
xchg
inc
mov
outsl
aas
dec
xor
enter
jecxz
jns
xchg
ret
push
adc
pop
mov
xor
sub
mov
jne
mov
xor
mov
scas
hlt
jp
jl
rcll
inc
xchg
leave
pcmpgtb
stos
jbe
lahf
mov
mov
pop
lock
or
dec
sbb
movsb
sub
add
fwait
jnp
aad
sbb
mov
add
add
dec
rolb
aaa
shl
test
add
cmp
sti
mov
dec
jb
or
jne
xchg
jne
imul
adc
adc
pop
loopne
cltd
pop
popf
test
dec
or
rcll
jmp
cmpl
inc
cmpsl
setbe
test
or
bound
pop
shr
cld
and
pop
scas
lahf
repnz
mov
fwait
mov
ss
jns
mov
cld
fistl
sbb
imul
loop
pop
je
sbb
dec
stc
cli
inc
imul
fs
xchg
inc
inc
int
or
fsubs
jns
in
scas
jne
mov
insb
leave
enter
inc
jge
jecxz
lahf
hlt
push
rorl
popa
push
mov
in
dec
test
mov
sbb
dec
pop
pop
dec
rorl
or
add
insl
xchg
xchg
addb
xchg
pop
jbe
mov
mov
and
dec
pop
in
fistps
ror
mov
std
mov
sub
xchg
inc
pop
jae
add
add
lcall
inc
out
inc
adc
leave
hlt
sti
sbb
dec
in
ljmp
xchg
add
in
inc
and
icebp
jnp
jecxz
ds
mov
lret
mov
push
lods
test
xchg
pop
fidivl
add
dec
daa
cmp
sarb
idivl
imull
push
sbb
dec
or
jnp
mov
lds
aad
mov
ja
or
lretw
and
insb
mov
pop
xor
add
jg
dec
popa
jmp
cmp
roll
jns
jmp
gs
daa
sub
aaa
push
movsb
mov
js
ljmp
mov
testl
cld
iret
insb
scas
and
addr16
fildl
push
push
pop
xor
cmp
mov
nop
and
repnz
push
jg
int
stos
jmp
add
and
pop
add
fcomp
adc
add
add
fstl
lret
mov
pop
je
add
add
std
xchg
push
lds
dec
in
add
inc
out
add
and
sub
push
push
mov
leave
popl
mov
scas
xchg
fwait
int3
aaa
xor
push
lcall
imul
lcall
cmp
int
cli
pop
jg
out
frstpm(287
xor
cmp
xchg
dec
mov
add
mov
icebp
jns
sub
dec
fsts
nop
xchg
and
out
lcall
inc
and
repz
ss
sub
inc
fwait
cli
pusha
fisubrl
sahf
bound
aam
out
xchg
jbe
icebp
xor
jl
adc
push
mov
mov
sbb
mov
enter
in
add
adc
movb
push
addr16
push
test
lahf
pop
outsl
je
sub
mov
icebp
ljmp
xchg
insb
sbb
imul
add
inc
in
mov
mov
out
sub
sbb
jne
add
add
shll
mov
aad
ja
hlt
cs
push
xor
sti
xchg
jns
push
push
call
call
dec
int3
sub
adc
xlat
mov
lcall
pop
mov
mov
mov
bound
and
pusha
dec
cltd
or
test
out
pushf
sti
fwait
sbb
mov
pop
ss
jle
add
aaa
add
xor
mov
loopne
adc
push
push
in
lahf
lock
sti
outsl
es
fsubrs
pop
xlat
jp
dec
popa
mov
das
daa
aas
addr16
or
lret
xchg
into
lods
mov
inc
and
pop
xorl
mov
out
out
push
xchg
push
orb
lds
adc
test
lea
std
push
in
xor
repnz
pop
mov
push
sub
outsb
jb
inc
jmp
push
inc
repz
mov
cmp
loop
mov
add
jns
divl
in
sub
fs
add
add
notb
in
arpl
aam
lock
je
mov
fwait
sub
pushl
and
push
xchg
inc
cmp
mov
movb
pusha
rclb
std
mov
cmpsl
sti
pop
loope
pop
in
or
in
xor
nop
or
negb
mov
adc
dec
pop
sbb
jl
sub
test
sub
imul
jnp
mov
addr16
sub
mov
mov
jecxz
jne
std
jae
mov
mov
test
push
arpl
mov
pop
push
xchg
ret
repz
scas
and
cmp
sub
mov
jae
fs
stos
xor
dec
push
mov
push
imul
imul
and
stos
mov
sahf
xor
push
ret
sub
cmp
dec
ret
out
arpl
pop
divb
mull
roll
add
add
fisubs
mov
mov
insl
mov
add
add
pop
dec
bound
mov
popa
ds
out
lret
mov
sti
or
aas
mov
aaa
xchg
xchg
shlb
xor
in
cmc
cli
jo
std
popf
or
pop
adcl
cmpsb
or
dec
or
adc
fists
fdivr
push
and
fmull
add
fidivs
and
imul
pop
int
dec
loop
sub
adc
int3
imul
fstl
xor
test
add
pop
inc
cmpsl
and
insb
add
pop
dec
ror
jo
lret
cmp
push
cmpsl
sahf
into
imull
cwtl
xchg
xor
and
mov
xchg
sbb
pop
adc
in
pop
fldt
and
daa
and
push
pop
stc
xorl
dec
es
out
push
shrb
leave
adc
pop
mov
xchg
and
jecxz
movsl
pusha
xorl
adc
lret
aam
lcall
jmp
xchg
je
sbb
add
mov
outsl
jne
ljmp
shl
shrb
add
add
dec
mov
dec
bound
cmpsb
sti
jge
adc
push
mov
jmp
loop
lock
xor
xchg
xchg
pop
daa
ja
jne
jb
or
pop
mov
shrb
xor
pushf
push
jge
idiv
daa
xchg
xor
adc
cmp
clc
nop
leave
loope
vorps
push
jno
ss
pop
ljmp
push
ficoms
loop
nopl
pop
xor
jp
xor
mov
loope
inc
pop
mov
jb
mov
xor
test
rcrb
in
cltd
and
push
out
adc
xchg
movsb
add
push
pop
movsb
popf
lds
jnp
cmc
lahf
clc
loop
lret
das
stc
stos
pop
xchg
lods
sub
imul
dec
lret
inc
adc
test
adc
mov
leave
jmp
xchg
data16
xchg
adc
lods
inc
xor
pop
pop
and
jne
aaa
lahf
dec
ficomps
add
add
testl
jo,pt
add
add
add
psllq
dec
int3
or
sbb
aam
adc
out
mov
mov
orl
or
xchg
lret
nop
scas
and
and
jl
pop
sub
in
add
ds
out
xor
adc
inc
bound
push
shrb
mov
xchg
and
popa
scas
jo
ds
dec
push
push
rcrb
mov
or
imul
sub
or
outsb
push
cld
mov
fs
in
mov
lds
or
jl
imul
iret
cmc
test
cs
daa
aad
add
mov
clc
repnz
sub
subb
loop
cld
lods
orb
ret
xchg
mov
jl
iret
fnsave
imul
imull
iret
push
mov
sbb
push
sbb
cmp
inc
adc
and
mov
dec
xor
jo
ja
std
stos
sbb
ljmp
add
add
add
shrl
jne
mov
xchg
sub
adc
sub
fs
or
push
int
xlat
lahf
loope
fbld
jmp
outsl
sub
dec
mov
sbb
add
lock
push
in
stos
push
pop
ja
or
jnp
jne
ret
jl
hlt
insb
imull
pop
ffree
mov
icebp
and
jbe
sub
mov
push
mov
imul
pop
sub
pop
mov
mov
pop
shll
xchg
fwait
ljmp
push
fnstcw
pop
inc
dec
cmpsl
fmull
fimull
mov
out
cld
lea
pop
mov
insb
out
pop
sub
shll
ficoms
mull
pop
pop
lahf
test
lahf
frstor
rcll
idivl
add
push
fs
neg
gs
scas
gs
ret
sahf
xor
adc
inc
push
add
jp
push
mov
bound
mov
add
add
cmpsb
push
sbb
pop
aad
jnp
add
add
icebp
les
dec
sub
dec
movsl
pop
add
sbbl
jns
jle
inc
hlt
test
dec
test
int
xchg
outsb
cmp
nop
fsubr
test
cmp
xor
jmp
rcll
add
mov
out
push
jae
mov
cmp
faddl
mov
cltd
ljmp
fisubrl
test
mov
inc
lret
push
and
inc
jg
aas
inc
mov
adc
cmpsb
or
push
jg
insb
imul
fwait
cmpsl
out
repz
stos
outsl
cmpsb
xchg
clc
inc
sar
sahf
and
inc
inc
fxch
jne
pop
in
daa
mov
int
push
rcll
cmp
xchg
test
pop
mov
xchg
dec
sub
inc
loop
adc
sub
hlt
orl
push
insb
adc
out
pop
inc
jp
sub
in
mov
int3
outsl
dec
xor
cli
mov
test
jl
add
add
js
nop
mov
add
cli
std
hlt
out
mov
cltd
rdmsr
iret
cmp
repz
cmp
jnp
fwait
stc
sub
mov
lock
pop
inc
shlb
cli
push
out
aam
aaa
inc
xchg
aam
aas
ja
mov
mov
jge
imul
xlat
repz
scas
std
add
mov
cmp
pop
lea
sub
ss
cltd
xchg
push
into
cli
repnz
call
sub
cld
pop
pushf
mov
mov
aaa
jg
mov
loope
std
push
in
or
push
cmpsl
fcom
mov
push
add
cmc
xor
or
addr16
std
inc
rcrb
jmp
test
cmp
xor
adc
or
jae
fadds
fcompl
xor
nop
flds
add
push
std
test
lcall
mov
movsb
cmpb
add
add
jmp
mov
movl
decb
outsb
rcll
es
div
adc
pop
loope
pop
push
or
adc
xor
insb
sbb
dec
mov
int3
sub
vunpckhpd
aas
imul
sub
popf
rolb
jg
inc
or
push
shll
inc
fldenv
mov
les
jl
pop
pop
xchg
inc
mov
or
add
outsb
mov
mov
dec
js
pusha
cltd
xchg
lcall
xor
ret
iret
les
aad
or
out
mov
leave
xlat
lret
xchg
lods
dec
mov
stos
cld
loop
mov
fs
sarb
pop
clc
mov
movsl
mov
je
push
rclb
or
xor
stos
dec
das
mov
pop
out
je
dec
je
testb
daa
mov
movb
add
mov
clc
hlt
sbb
push
out
jns
push
repnz
scas
mov
fwait
mov
add
addl
enter
push
pop
arpl
push
mov
dec
stc
inc
add
pusha
or
cwtl
cld
or
ret
lahf
xchg
xchg
mov
scas
xor
rorl
outsl
xchg
enter
xchg
dec
rolb
fbstp
adc
test
aad
lcall
xchg
cwtl
int
xchg
xor
out
into
dec
loop
pop
out
xchg
popf
test
repz
xchg
mov
cmp
rcl
mov
adc
out
xchg
jb
out
sub
cmp
or
imul
dec
add
pop
imul
std
or
xor
enter
jp
xchg
outsb
nop
push
xor
push
push
pop
add
scas
lcall
adc
sbb
adc
add
add
add
jnp
inc
aaa
mov
rclb
push
mov
xor
inc
negl
pop
xchg
jp
or
cld
fisubs
dec
push
lds
out
stc
sahf
sbb
stos
adc
std
movsb
pop
xor
mov
repnz
aam
mov
cmp
ss
std
xor
pop
mov
ret
and
add
jnp
xor
repz
push
aad
push
sub
mov
jno
mov
xor
jecxz
mov
cmp
mov
sub
lret
movsl
jb
cmpb
call
call
and
xchg
insl
les
push
and
cld
loope
scas
xor
jmp
pop
mov
sub
mov
icebp
mov
je
jne
mov
push
sbb
jl
mov
xor
lock
jmp
scas
and
in
daa
mov
cmp
hlt
hlt
push
loope
test
hlt
aaa
imul
add
jl
cs
idiv
jne
iret
ljmp
add
add
hlt
mov
pop
cld
mov
mov
insl
pop
add
js
pop
inc
decb
stc
cltd
add
jne
into
mov
jb
inc
and
cmp
lods
inc
push
push
sub
pop
and
enter
xchg
subl
adc
pop
jns
js
xor
xchg
mov
in
xchg
push
adc
pop
outsb
cld
cli
or
jge
rorb
xchg
popf
inc
xor
push
ss
pop
aam
xchg
enter
sbb
cmc
aam
push
addr16
xchg
enter
test
pop
jno
lcall
lret
mov
cli
flds
ret
add
sbb
aas
sahf
xchg
xchg
sahf
cltd
int
lret
dec
pushf
add
pop
mov
xor
push
push
inc
xchg
or
shlb
jmp
pop
push
adc
lods
in
lock
sbb
lret
movsb
dec
les
mov
xchg
pushl
sub
fnstenv
pop
nop
addl
add
xor
sub
or
ret
sub
jmp
and
jb
pop
mov
dec
ljmp
mov
sub
add
xor
mov
push
jmp
stos
dec
mov
sub
enter
pusha
outsl
stos
sbb
into
test
push
lea
mov
out
fidivrs
dec
add
jl
std
mov
push
loop
and
sbb
jg
mov
gs
sti
adc
rcrl
inc
out
xor
mov
mov
shl
jmp
xlat
inc
xchg
push
aas
dec
insb
stos
pop
aaa
sub
fisubrs
cs
push
cmp
pop
pushf
pop
movsb
inc
ret
mov
inc
shl
sbb
and
inc
icebp
nop
sbbl
out
out
out
fnstenv
fmuls
mov
adc
push
mov
es
add
add
sti
iret
ss
push
jno
xor
inc
xchg
addb
add
add
sbb
mov
pop
sub
mov
outsl
push
mov
xor
leave
fistl
add
inc
lods
cmp
push
daa
pop
pop
dec
std
hlt
or
or
push
movsb
mov
lret
out
insb
mov
enter
sbb
cwtl
out
xlat
insl
xlat
scas
sbbb
sbb
icebp
sbb
cli
loopne
lds
int3
inc
sbbl
rolb
mov
xchg
pop
mov
das
xchg
cmp
clc
pop
add
jge
sub
icebp
dec
mov
xlat
xor
fcoml
adc
inc
mov
sarb
mov
rol
outsl
mov
outsb
and
iret
jmp
test
dec
test
ret
adc
fisttps
lcall
loop
popf
dec
out
push
aam
cmp
push
clc
out
das
jge
xchg
shlb
push
movsbl
push
add
add
loopne
xchg
inc
lahf
sti
hlt
out
dec
roll
call
add
add
add
cs
push
shl
add
mov
into
jp
lods
inc
test
aad
push
daa
add
pop
sbb
movsb
push
arpl
mov
loope
push
mov
pop
outsb
pusha
jg
inc
cli
add
into
mov
std
push
mov
lahf
xor
insb
fwait
sub
mov
mov
push
push
movsl
subl
xchg
push
repnz
sbb
jecxz
mov
movsb
test
cli
and
push
xchg
jb
and
unpckhps
xorl
mov
push
repz
test
fisttpll
adcl
out
or
jmp
ds
pop
jl
sbb
add
push
repz
fadds
mov
insb
fisubl
jo
lret
mov
xchg
pop
cmp
inc
sub
cltd
mulb
jb
mov
dec
xor
in
cmpsb
and
rolb
add
xchg
rol
lcall
add
mov
mov
test
add
add
xlat
pop
mull
shrb
mov
xlat
insb
cmp
sub
adc
dec
lret
jmp
loope
stos
cmp
add
lods
dec
pop
mov
xor
imul
cmp
sub
popl
out
rcll
push
xorb
jmp
movsl
mov
aas
ljmp
orl
cmp
sub
push
inc
insb
call
das
push
shll
leave
xchg
adc
lds
cmpsl
dec
std
or
cmp
rcrl
add
adc
shl
test
das
xchg
lock
loope
push
int3
mov
or
mov
cmp
jbe
jl
dec
test
push
aam
into
mov
rol
xchg
rcll
and
and
xorl
or
movsb
aaa
jne
or
cmp
movsl
mov
mov
test
enter
inc
jne
and
out
ljmp
lock
xchg
add
push
cmp
add
add
xchg
and
lods
popa
inc
cmp
negb
addr16
add
icebp
inc
and
cmp
test
push
das
movsb
cmpl
out
push
and
movsl
les
pop
bnd
fistps
dec
jp
ret
scas
test
mov
pop
shrl
rcrb
cmc
test
imul
lahf
inc
sarl
cmp
jno
outsw
jecxz
outsb
and
stos
cmp
adc
arpl
stos
imul
fnsave
sbb
aaa
dec
lods
jl
outsb
jo
je
aam
push
jne
and
xchg
bound
das
test
test
in
jbe
mov
js
jecxz
lahf
rcrl
fmuls
inc
pop
xchg
out
mov
movsl
push
lahf
clc
inc
lods
movsb
lret
insl
adc
cmp
pcmpgtd
or
pop
sbb
out
movsb
mov
sub
jae
rcrl
mov
imul
push
jnp
sbb
push
xor
pop
lea
add
gs
or
push
aad
mov
in
pusha
or
mov
mov
jbe
pop
cmp
pop
push
add
mov
sar
push
es
fidivrl
sub
stos
jbe
cmp
add
inc
pop
aaa
dec
push
pusha
mov
xor
dec
ljmp
gs
and
dec
mov
mov
stos
inc
xlat
mov
enter
xchg
pop
js
mov
push
shll
inc
rol
sub
sub
push
cwtl
dec
test
pop
jle
inc
jmp
jbe
adc
insl
jge
test
imul
icebp
mov
dec
xchg
test
xor
push
getsec
inc
pop
and
push
aam
add
xor
mov
mov
mov
jmp
popf
fmull
mov
dec
leave
and
jg
push
mov
pop
or
push
jbe
in
pop
ss
test
lret
xor
add
add
aas
or
mov
jle
inc
and
add
add
lea
ret
adcl
lcall
jb
hlt
xchg
shrb
and
adc
stos
mov
adc
add
stos
pushf
jo
lret
xor
and
dec
and
adc
stos
je
lods
and
pop
fildll
dec
xchg
jmp
mov
bound
ljmp
xchg
pop
push
add
mov
add
mov
int3
push
pop
lods
sahf
insb
push
ffreep
or
fsubs
aaa
lods
inc
movsb
insl
sbb
lods
out
lods
jo
adc
ficompl
fidivrl
fsub
mov
ljmp
sti
sbbb
mov
movntps
push
pop
pop
adc
addr16
rcr
sbb
cmpsl
je
insl
jge
jbe
popa
jbe
push
and
xchg
push
jp
fwait
adc
fwait
imul
pop
push
es
sub
pusha
insb
fidivl
bound
ljmp
add
add
mov
mov
mov
adc
cmpsl
adc
xor
sub
lahf
cmpb
in
stos
push
or
mov
scas
or
dec
call
dec
addr16
mov
ljmp
movb
add
fstp
int3
fucom
fcmovnb
jae
addb
xlat
aam
jae
add
xor
inc
inc
outsl
jg
popa
pop
push
lahf
faddp
sub
cmc
jecxz
sbb
stc
xchg
popa
lea
lahf
icebp
pushf
cmp
mov
ret
into
ja
inc
inc
popf
inc
ja
and
test
rorl
in
imul
inc
test
inc
jae
stos
or
and
test
adcb
js
lods
iret
cmp
je
in
mov
mov
ja
or
mov
mov
filds
mov
dec
test
pop
sbb
mull
jmp
xlat
jge
jle
add
les
pop
mov
icebp
insl
bound
add
cmp
mov
jns
jns
shlb
add
add
xchg
mov
ja
enter
push
cmp
clc
xorb
sbb
sti
xchg
int3
stc
xor
cmpsb
or
test
outsl
or
movb
sub
imul
and
fcmovu
lcall
mov
test
dec
or
fstpt
loopne
out
cmp
add
push
push
pop
enter
xchg
sbb
jecxz
pop
inc
cmp
ret
xor
fisubl
xor
jle
rcr
lock
es
lods
cmp
mov
mov
lea
fisubrl
sub
negl
lock
imul
pop
iret
das
mov
sar
sub
inc
outsl
lods
xchg
ja
jno
pop
mov
nop
push
pusha
fisubrl
sub
popf
dec
mov
sbb
aad
fstpt
movsl
pop
popl
add
add
int
fstp
iret
push
cmpsb
fadd
dec
insl
sbb
test
add
add
push
adc
aas
jns
ret
cmc
in
adc
jmp
in
mov
pop
and
mov
xor
int3
xor
or
add
cmp
test
jne
sbb
xchg
jbe
cmp
xchg
dec
scas
popa
imul
test
das
inc
test
sbbb
jg
and
mov
xor
or
out
add
out
aam
push
xor
sbb
stos
ss
xor
jl
cmpsl
xchg
lret
into
jp
xchg
ret
lret
or
inc
xlat
xor
push
in
sbb
mulb
js
mov
jg
xchg
sahf
sbb
push
inc
xor
cltd
out
cmp
fdivl
xchg
lret
ret
xlat
test
fdivs
sbb
es
das
mov
mov
and
loopne
ljmp
inc
mov
mov
inc
test
stc
mov
push
int3
ficoms
lahf
and
scas
std
out
ljmp
mov
add
add
mov
sub
mov
xchg
jp
loopne
jo
mov
jle
movsl
dec
out
or
aad
mov
aad
inc
mov
neg
movsb
sbb
out
sub
adc
add
sub
imul
pop
test
mov
shrb
ficomps
hlt
xchg
and
dec
mov
pop
insl
sti
cmp
pop
test
xor
mov
push
mov
xor
adc
fwait
push
jmp
push
gs
lods
shl
mov
in
pop
icebp
push
adc
cmc
sub
add
addr16
shrl
mov
hlt
fbld
cmp
push
push
jp
pusha
popa
lods
sarl
repnz
dec
xchg
or
push
insl
cmpl
orl
push
mov
mov
enter
jae
lods
addl
push
mov
aam
iret
push
add
lods
les
jnp
mov
icebp
lds
add
add
add
push
aad
movsl
push
mov
cld
or
pcmpgtw
test
test
xchg
or
or
xor
adc
dec
ret
pop
rcl
jae
jp
in
push
scas
cmp
sub
pop
sbb
jmp
out
mov
sbb
stc
out
hlt
out
mov
sub
mov
repz
dec
push
mov
andb
pop
fadd
aad
stc
je
pop
mov
cmpsb
and
and
mov
shlb
ds
mov
out
shlb
xchg
xor
xor
aad
clc
ret
push
repz
mov
aam
cmp
or
ret
loop
std
pop
sub
push
mov
xchg
ja
cmp
popf
xchg
imul
or
cmp
scas
lret
ficoml
out
jle
movsl
jo
out
cmpl
cmp
outsl
fstpl
dec
adc
jmp
xor
push
movsb
mov
dec
enter
test
adc
add
add
les
fcomps
add
leave
test
add
add
adc
dec
push
inc
or
aas
and
nop
xor
cmp
lret
sahf
push
fucomip
push
mov
cwtl
or
jmp
sub
movntq
out
fst
cltd
xchg
fcompl
lahf
push
jecxz
mov
scas
mov
in
insl
dec
mov
or
nop
mov
mov
enterw
lret
outsb
aad
dec
test
jg
nop
lcall
jge
js
lret
pop
mov
push
add
imul
fincstp
fisubrs
push
xchg
push
mov
fcomps
cld
jp
jmp
in
hlt
jb
aaa
add
int
mov
out
adc
inc
pop
cld
pop
loop
in
int
mov
inc
jl
mov
fnstenv
faddl
ds
lcall
sub
sub
imul
mov
xor
aam
push
addr16
mov
loopne
sub
cwtl
ds
in
sti
nop
ljmp
dec
mov
iret
jo
mov
add
add
inc
and
imul
arpl
cmpb
scas
or
lret
insl
dec
repz
jmp
std
xor
sub
xchg
mov
jle
sahf
or
pop
cld
push
sar
mov
xchg
mov
pop
sub
stos
shrb
leave
mov
dec
dec
sbb
lcall
pop
pop
scas
xor
hlt
rcrb
lahf
or
push
sar
cmp
mov
scas
lret
mov
inc
movsl
movsl
out
or
repnz
ss
pop
jl
mov
push
pop
mov
out
add
outsl
xchg
adc
and
insl
or
mov
sub
fwait
clc
sbb
cld
lea
sarb
imull
mov
lahf
sbb
mov
aam
cli
cld
ret
sub
enter
adc
xchg
pop
push
adc
ljmp
fmul
sarl
mov
sub
in
ljmp
inc
aam
mov
add
add
aaa
shlb
cmc
div
testl
enter
add
add
push
mov
inc
je
jp
jp
cmpsb
inc
add
add
push
rcrl
faddp
cwtl
push
xor
adc
pop
decb
jp
add
push
ret
fbld
jne
adc
ljmp
fistpll
mov
mov
movsb
jnp
jns
cmc
psrld
aad
push
mov
enter
cwtl
mov
js
rcr
inc
adc
mov
cmp
movsb
loope
fistl
jg
fnsave
jle
lret
subl
inc
xor
lret
inc
adc
inc
loop
xchg
clc
and
repz
mov
adc
xchg
stos
ds
subb
sbb
loopne
pop
loopne
popf
fld
mov
jle
sub
mov
and
dec
cwtl
inc
mov
inc
adc
sub
pushf
cltd
xor
dec
cmp
adc
loope
xlat
jbe
or
add
add
push
sahf
rcr
pop
adcb
hlt
adc
add
add
pop
andl
into
dec
pushf
pop
cmp
cli
std
int3
iret
xchg
inc
imul
cmp
out
daa
lret
xchg
lret
movsl
repz
js
cld
mov
xchg
das
addb
loop
nop
insl
jge
repnz
loop
gs
scas
inc
and
xor
sub
push
ss
dec
adc
pop
rcrl
pushf
jle
aam
and
xor
int
scas
jbe
sbb
loope
inc
je
add
jnp
xchg
dec
inc
in
out
pop
leave
jnp
fiaddl
movsb
inc
pusha
add
mov
cmp
stos
xor
pop
pop
dec
xchg
lds
cmp
xor
push
orb
pop
js
xchg
mov
and
addl
xchg
sub
lcall
fisubrs
sar
int3
std
dec
pop
cmp
fsubr
cltd
inc
insb
call
fwait
mov
lock
fs
adc
inc
icebp
mov
shll
cmpsb
jcxz
fimull
rclb
add
jnp
cmp
xchg
inc
mov
lock
out
test
pop
addb
aam
sbb
pusha
sub
inc
jle
mov
rcr
mov
sti
dec
xchg
dec
outsl
push
out
jnp
shr
push
cmp
mov
div
push
sbb
fisubs
stos
dec
xchg
out
and
jge
add
sub
cmp
loopne
or
shl
lods
stc
and
xor
dec
ret
xchg
sbb
clc
xor
shlb
or
std
pop
rorb
fsubr
cmp
adc
push
ds
cmp
jnp
aam
leave
in
push
sti
sbbb
scas
insb
sbb
icebp
clc
mov
dec
ret
les
push
adc
pop
adc
lock
adc
adc
push
mov
lods
jmp
loop
fidivs
mov
gs
xlat
jnp
dec
ret
inc
inc
xor
clc
sahf
ss
das
clc
jnp
jg
in
cli
enter
hlt
mov
not
xchg
add
add
add
and
clc
pop
xchg
into
leave
jle
xchg
les
or
gs
dec
ljmp
jecxz
adcl
push
fs
pushf
jo
add
xor
pop
mov
add
lea
mov
cmc
jg
fisubs
outsb
adc
mov
mov
add
mov
cmp
xchg
adc
loopne
imul
dec
arpl
inc
push
mov
jo
test
in
or
mov
out
mov
pop
rorb
jne
jmp
pop
adc
ss
leave
sbb
pop
repnz
cmp
xor
clc
pusha
inc
ja
out
push
mov
stos
test
mov
js
cmp
divb
cmpsb
inc
les
hlt
dec
fists
mov
loope
pushf
jns
pusha
push
mov
inc
cli
mov
mov
ljmp
cld
gs
mov
fcoms
add
xchg
imul
mov
sti
lcall
cmp
addr16
subb
idivl
int
sub
pop
pop
jle
inc
jae
mov
fisttps
js
lods
sub
xor
sub
insb
hlt
sti
loope
jns
test
loopne
xor
sbb
push
adc
aaa
jle
icebp
dec
dec
test
aaa
cmp
daa
xor
jo
or
out
sti
nop
cmp
adc
jg
pop
mov
mov
stc
test
out
push
stos
addr16
mov
mov
or
inc
in
cli
sub
jns
repz
fsts
inc
sub
adc
push
xchg
popf
sub
sbb
ss
mov
sbb
cmp
in
xchg
cltd
jnp
cmp
xchg
push
xchg
rclb
aaa
mov
sbb
lret
jle
int
push
sbb
lock
xchg
loop
mov
jl
sar
std
jle
pop
popf
scas
lock
adc
xchg
add
add
add
addr16
cli
jl
mov
jo
jne
test
mov
xchg
and
cmp
aam
pop
cmp
loope
fbstp
mov
fmull
cmp
push
lahf
mov
mov
cmp
in
cmp
push
adc
jge
out
push
or
stc
lds
cmp
sub
pop
or
fwait
mov
and
cmp
cmp
jmp
sbb
pop
aaa
dec
lea
mov
jb
or
add
mov
xlat
jne
daa
pop
mov
xchg
push
push
adc
xor
jg
dec
jle
dec
mov
dec
int3
fildl
cmp
mov
jle
mov
addl
pop
test
sbb
jae
sub
testb
jge
push
aad
cmp
push
popf
stos
sub
adc
push
nop
enter
aad
sbb
data16
add
cwtl
or
stos
xchg
cmp
in
imul
add
lret
cmp
xor
push
into
mov
hlt
scas
int3
dec
pop
xor
sub
mov
test
mov
dec
mov
push
std
rcrb
in
pop
fldenv
and
sub
hlt
arpl
test
es
sbb
clc
cld
popf
add
shll
cmpsb
jnp
fisttpll
cld
dec
jmp
xadd
push
inc
ja
push
and
jb
add
outsb
cmp
daa
stos
xlat
dec
aam
xchg
xchg
cmp
inc
or
or
inc
into
mov
dec
sub
sbb
shlb
adc
ja
adc
adc
icebp
sub
andl
sub
into
repz
jo
in
push
cmp
xor
enter
test
mov
mov
push
adc
inc
imul
test
inc
je
imul
add
mov
jae
cmp
push
fwait
and
popa
mov
xorl
in
add
add
add
sub
or
int3
jno
mov
mov
popl
add
cltd
mov
jp
push
outsl
insb
sbb
mull
outsb
push
stc
inc
movsb
loop
pop
test
adc
add
sti
pop
aas
pop
push
sbb
jnp
pop
jnp
repnz
inc
int3
enter
add
xchg
jae
jne
xlat
xchg
jne
out
sbb
or
icebp
mov
lret
cmc
push
je
lahf
in
xor
lea
out
stc
cmp
mov
daa
je
lretw
insl
rcr
test
outsb
pop
mov
aam
pop
inc
js
xchg
dec
lcall
nop
mov
add
mov
insb
arpl
data16
pop
pop
xchg
xor
mov
repz
addb
pop
scas
test
sbb
sbb
daa
lods
arpl
mov
pop
or
xchg
xor
cmp
add
push
push
and
xlat
aas
dec
sbb
or
call
add
add
mov
shll
jbe
mov
ljmp
mov
shl
rolb
jge
outsb
push
pop
cmc
mov
lea
or
xor
inc
addr16
in
cmp
adc
inc
lahf
ljmp
aas
cmp
gs
push
mov
jno
sub
jecxz
or
in
or
pop
adc
mov
pop
out
or
jecxz
push
jmp
fdivrs
dec
in
repnz
lea
in
mulb
jns
sbb
sbb
dec
xchg
push
dec
test
xchg
addb
xchg
xchg
or
xchg
test
nop
arpl
push
xchg
xchg
lods
sbb
mov
daa
add
cmp
sbb
dec
iret
into
xlat
sbb
adc
rclb
js
push
lds
fdivp
xor
and
cmp
sub
test
call
xor
jno
lods
imul
outsl
vmwrite
aad
cwtl
add
add
add
add
or
flds
fwait
imull
mov
push
popf
pop
mov
cmpsb
popf
push
pop
mov
mov
lea
in
shl
out
leave
int3
cli
imul
mov
sbbl
xchg
cli
aaa
pop
testb
mov
inc
xchg
data16
ds
test
push
pop
push
pop
or
mov
mov
mov
je
jae
fcomp
insl
or
aam
and
push
jmp
xor
div
ret
inc
addr16
rclb
xor
scas
aam
inc
in
sub
or
aas
inc
adc
add
dec
lcall
cltd
mov
xchg
and
lret
or
ret
aas
cmp
gs
mov
mov
cwtl
add
add
sarl
or
stos
and
sarb
vcomisd
fisubrs
inc
fsubr
movsb
and
push
scas
cmp
call
ss
jb
mov
and
add
add
lret
sbbl
popl
fistl
cltd
add
add
add
loop
push
mov
xor
scas
jbe
sub
dec
push
imul
divl
fildl
adc
shl
mov
inc
sub
fdivr
rcrb
fldt
lcall
pop
int3
inc
jo
inc
mov
lods
inc
testb
dec
idivl
push
mov
cmc
inc
mov
pop
outsl
mov
aas
adc
icebp
iret
aad
in
add
push
dec
mov
jg
add
push
arpl
add
aad
cli
inc
pushf
dec
adc
add
cwtl
ficomps
jne
xchg
sub
popa
adc
push
rcrw
mov
rcr
negl
pop
xor
push
pop
pop
add
jbe
rol
cmp
test
mov
add
imul
xor
mov
ret
lcall
ret
sbbl
mov
cmpsl
mov
mov
mov
imul
movsb
and
lahf
pop
mov
add
add
mov
iret
mov
jnp
aad
pushf
js
insl
cmp
add
xor
in
jecxz
repnz
outsb
stos
out
push
or
out
pusha
mov
orb
sub
stos
sub
repnz
mov
mov
stos
jns
mov
je
pusha
cltd
fiadds
sub
cmp
iret
or
and
js
sub
test
pop
insb
mov
or
jne
or
pop
out
or
add
and
mov
xlat
pop
push
mov
sbb
mov
inc
and
jns
sub
enter
popf
fsubl
cltd
jmp
les
decl
js
xchg
jne
jns
lods
mov
shrl
inc
pop
dec
mov
xchg
cmp
js
add
shll
xchg
in
insl
repz
pop
dec
sbb
pop
mov
pop
popa
inc
cltd
xchg
xchg
int
shrb
sub
into
add
cmpsl
mov
jge
jg
ljmp
in
lahf
mov
fwait
add
add
add
jmp
in
call
ja
cmp
aad
inc
add
mov
inc
sbb
enter
pop
cmp
aaa
push
xchg
jb
rcrb
sarl
xor
nop
pop
xchg
loope
push
and
sbb
pop
lea
movsl
mov
test
hlt
iret
mov
or
bound
add
adcb
mov
mov
mov
incl
push
add
sbb
fildll
scas
mov
cmpsl
nop
mov
inc
in
push
out
push
fs
cmp
das
daa
xchg
andl
ja
out
aam
cmp
ss
lret
icebp
xchg
push
push
inc
mov
cmp
ror
addr16
push
pmaxub
dec
mov
das
and
shl
into
adc
pop
or
mov
fs
into
fnstenv
sbb
daa
push
pop
mov
jb
pop
add
data16
xor
cmp
ret
xor
outsb
or
add
add
cltd
sub
out
inc
sub
or
pop
push
add
pushf
add
add
add
iret
pop
out
adc
dec
and
insl
repz
mov
xor
ret
inc
ret
jo
mov
mov
cmp
cmp
lahf
fisubl
jbe
and
fmul
sbb
xor
out
pop
je
pop
ja
cld
mov
push
insl
outsl
push
or
clc
push
aaa
ds
xchg
or
mov
movsb
xchg
mov
dec
shrl
out
xchg
test
dec
cli
sub
mov
aam
test
and
mov
dec
cmpsl
test
out
in
sbbl
push
and
mov
xlat
sahf
mov
push
xchg
mov
jb
and
cmp
lea
xor
aaa
xchg
xchg
mov
jae
mov
mov
push
testl
inc
ret
test
add
loop
test
mov
cld
mov
add
add
je
push
ffree
push
out
mov
clc
lods
push
lock
fs
push
nop
add
addr16
rclb
in
jbe
mov
shl
dec
sub
or
and
pop
leave
in
pushf
sahf
cmc
cmpsb
lahf
rclb
test
arpl
and
insl
out
mov
loop
std
sbb
icebp
dec
ds
xchg
push
push
jmp
addr16
dec
mov
inc
pusha
test
roll
and
imul
sahf
int
jae
push
fmul
push
inc
lds
cld
push
push
movsb
in
frstor
mov
fisttpll
xchg
push
iret
pusha
cmpsb
fsts
mov
jle
or
fs
sub
sub
cs
test
lea
xchg
mov
sti
shlb
es
xchg
push
mov
ss
cmpsb
ja
loope
shll
xor
hlt
inc
or
lcall
sbb
sbb
add
add
add
cltd
mov
std
sub
lds
out
movsb
xchg
ss
jb
pop
repz
cltd
mov
lods
xor
push
gs
jns
sbb
mov
pop
add
xor
or
ja
xor
mov
fildl
fsub
mov
out
fidivl
inc
xchg
xchg
pop
call
cmpl
adc
in
sub
sbb
adc
inc
jbe
mov
jbe
mov
cltd
aam
incl
mov
pop
lea
mov
adc
jl
addl
add
lods
mov
test
outsl
jmp
jae
cmc
sahf
fmuls
sub
xchg
xchg
ja
cmp
adc
mov
push
or
mov
adc
inc
or
cltd
mov
xor
pop
mov
cmp
js
mov
inc
cltd
jno
enter
hlt
push
aam
cmp
fidivs
subl
add
mov
inc
inc
add
mov
add
cmpsl
mov
or
ds
arpl
adc
lea
repnz
call
cmp
mov
arpl
rol
lods
adcb
xor
mov
mov
adc
sbb
xor
xchg
arpl
scas
test
orb
xchg
dec
pop
mov
shlb
test
xor
pop
clc
inc
push
mov
inc
repnz
imul
test
sub
push
pop
or
inc
es
mov
pop
xchg
in
and
jo
inc
xchg
pusha
push
ret
lcall
adc
pop
fstpt
pop
ret
sbb
jg
jne
imul
push
clc
out
daa
ret
lea
jb
cmp
push
adc
jae
std
or
cli
rcrl
in
jns
sbb
jno
sub
push
push
stos
je
imulb
cmp
push
mov
cli
jge
mov
or
sbb
inc
mov
imul
add
add
mov
shlb
cmp
dec
or
dec
inc
movsl
imul
jmp
aaa
das
mov
inc
bnd
mov
sub
enter
cltd
nop
pop
sub
popf
or
xchg
fwait
jbe
data16
gs
jge
or
ja
or
rcr
lcall
in
shl
ljmp
mov
xchg
push
fnstcw
push
imul
adcl
lret
outsl
sbb
icebp
push
mov
xor
lods
cmp
fmuls
clc
rclb
pop
repnz
jecxz
xchg
add
sarb
jno
test
xor
loop
mov
out
inc
push
imul
xchg
mov
cmp
inc
enter
int3
sbb
scas
dec
test
fmul
push
imul
test
and
stos
cld
mov
rorl
lods
repnz
mov
out
adc
inc
mov
push
inc
fdivl
push
dec
mov
adc
add
movb
aam
add
dec
test
call
mov
mov
inc
ljmp
push
and
dec
loope
lcall
pusha
pop
inc
and
lcall
xchg
xchg
mov
popa
mov
scas
mov
stos
mov
movsl
sbb
les
pop
jbe
mov
into
and
test
mov
cmp
jae
scas
sbb
rolb
outsl
pusha
mov
push
or
aad
jmp
aad
mov
sahf
lahf
test
push
push
psrad
outsl
dec
mov
test
push
or
stos
cltd
cmp
test
mov
mov
fdivrs
stos
inc
mov
xchg
and
mov
iret
push
dec
fwait
or
clc
cli
jl
mov
movsl
mov
pop
enter
rcll
sub
dec
pop
ror
mov
add
sbb
mov
sbb
mov
add
jg
and
inc
sub
xchg
sbb
jae
cs
jno
push
cmp
mov
and
push
push
xor
in
je
std
jle
sbb
adc
push
jo
dec
add
or
je
loop
pop
ds
stc
sbb
xor
xor
push
and
fists
fcompl
mov
mov
adcl
mov
sub
jae
hlt
xor
sbb
lret
cwtl
cmp
imul
dec
ljmp
loop
adcb
addl
cli
call
mov
jmp
sub
xchg
push
xchg
push
ds
dec
fldenv
in
add
cmp
loopne
sbb
fchs
mov
add
bound
lods
mov
aaa
dec
arpl
sti
push
push
enter
xor
fcmove
push
in
add
add
stos
hlt
jmp
cmp
jbe
sub
add
add
add
je
ret
add
lahf
imul
add
adc
stos
out
sbb
shlb
jbe
mov
ret
mov
add
sbb
shll
jo
xchg
xor
push
mov
into
lock
int
sahf
push
rcl
jnp
mov
in
and
push
ljmp
push
aam
ss
mov
or
fstps
inc
mov
adc
pop
push
idivb
imul
test
out
mov
ss
gs
scas
popf
mov
arpl
lea
pop
and
lock
sbb
repz
push
fnstcw
jno
fs
dec
je
sbb
rorb
movsb
addr16
mov
enter
xchg
mov
loop
in
adc
adc
jp
mull
in
dec
insl
cld
or
add
fsubrp
mov
or
imul
jae
cmc
enter
add
push
nop
out
xlat
out
jg
in
xor
fnstenv
movsl
add
add
add
jno
stos
mov
jge
bound
inc
sbb
call
arpl
dec
cmpsb
cmpsl
jge
out
cmp
inc
pop
sbb
add
stos
ja
mov
pop
cmpsl
inc
addr16
mov
imul
push
jecxz
loopew
push
adc
decb
pop
mov
xchg
push
jbe
fnstenv
sar
adc
adc
cmpsl
shr
fidivrs
loopne
mov
mov
fcomip
mov
pop
lea
sub
sub
lahf
mov
fmul
outsl
lods
in
pop
xlat
mov
mov
cmc
aad
pop
sbb
movsb
jmp
push
add
cmp
insb
or
add
dec
insb
sahf
pushf
andl
lods
push
leave
add
stos
mov
test
push
out
cmp
mov
mov
or
aam
in
shl
cmp
loop
imul
jb
xor
add
add
mov
inc
fwait
lds
jo
fldl2e
arpl
add
add
add
or
and
adc
push
mov
in
and
sarl
cmp
xchg
bnd
rorb
data16
push
push
pop
jno
jbe
ja
push
sub
movsl
push
mov
loop
or
outsb
pop
test
rcrl
cmc
xor
out
or
js
push
and
pop
fisubrl
jnp
mov
repz
ja
adc
daa
lcall
test
in
pop
mov
push
add
lods
loopne
jecxz
cli
in
xor
sub
arpl
ss
fwait
lea
mov
test
lock
xorb
sub
aam
jbe
dec
scas
cmpsb
add
notl
jge
into
fwait
aas
adc
iret
add
sub
cmp
mov
arpl
clc
jns
dec
mov
add
repnz
mov
aaa
mov
popa
or
adc
lcall
std
inc
jne
andl
add
add
add
adc
aaa
push
insb
add
inc
test
adc
inc
loope
cmp
xor
inc
mov
pop
fsubrs
incl
push
test
in
ljmp
cmp
es
mulb
clc
dec
int3
push
test
jmp
adc
mov
insb
movsl
mov
pop
mov
xchg
jle
daa
mov
mov
push
rcll
xchg
cli
mov
xor
subl
inc
scas
gs
in
sub
repnz
mov
pop
leave
and
rcrb
or
loope
mov
adcl
sub
mov
data16
fildl
rcrb
push
imul
inc
sub
popa
call
cwtl
mov
xchg
inc
rorl
xchg
aaa
add
outsl
outsb
push
jg
dec
or
repz
imul
pop
scas
sub
pushw
mov
mov
push
lret
jnp
sti
jmp
push
mov
imul
mov
add
add
push
stc
push
pop
in
jns
adc
and
cmp
mov
jae
and
in
and
cld
or
jmp
xchg
out
enter
aas
push
arpl
sub
repnz
lahf
cs
adc
mov
xor
in
fisubl
out
int3
mov
pop
cli
sbb
add
lret
cwtl
lret
sbb
inc
xchg
orb
fcmovu
aad
xorl
sbb
or
xchg
mov
shll
ret
add
ds
stos
sub
or
cs
mov
mov
sub
add
cltd
or
jle
push
fisttps
bnd
xchg
insl
pop
or
fwait
icebp
adc
or
into
add
out
repnz
stos
pop
nop
xor
mov
rol
imul
adc
sbb
mov
push
hlt
push
jns
pop
pop
inc
dec
mov
mov
pushf
mov
sub
mov
jg
in
jne
add
add
jecxz
lock
xchg
lcall
add
cs
mov
mov
inc
sub
call
out
lock
leave
in
in
sub
jne
xor
add
iret
inc
push
test
xchg
in
dec
add
xchg
in
or
roll
ljmp
shl
movsb
xchg
mov
jge
lret
outsl
mull
dec
xchg
and
mov
mov
mov
push
fdivrs
lods
mov
mov
mov
adc
sub
dec
mov
mov
push
out
jno
lahf
test
sub
jge
jg
shll
or
inc
aam
and
dec
push
fisubl
xor
adc
out
inc
je
ds
in
jo
outsl
pop
jecxz
jmp
mov
xchg
imul
mov
mov
aad
mov
cld
sbbl
mov
cld
mov
leave
ret
les
add
add
leave
jge
xor
imul
xor
xor
adc
xor
dec
mov
xchg
push
js
into
sub
divb
cwtl
lret
int
test
shlb
sub
stc
lcall
imul
movsl
pop
dec
iret
repz
lods
outsb
mov
bound
andl
out
lods
ret
add
cmpsb
jecxz
mov
call
sub
xchg
aam
hlt
cmp
pop
pop
and
and
lods
daa
jb
inc
mov
add
or
push
loope
cs
loop
imul
sub
call
sbb
ss
sbb
je
in
xchg
pushf
out
test
dec
mov
push
int3
xchg
insl
loop
pushf
insb
bound
repz
jb
and
pop
pusha
mov
mov
or
aas
icebp
adc
int
cltd
xor
movb
add
mov
dec
das
pop
out
cmc
mov
pop
mov
add
add
add
iret
jnp
lds
jecxz
push
inc
insb
repnz
hlt
push
cld
xlat
pop
jae
and
add
or
mov
pop
lods
fimuls
leave
loopne
cmp
cli
pop
test
stos
rcll
pop
clc
test
xor
sub
adc
nop
out
mov
xchg
cmp
cmp
push
jns
insl
pop
sbb
loop
xlat
dec
scas
jb
in
add
stos
xchg
xchg
decl
shl
sub
lods
adc
ret
bound
lea
call
adc
jo
jge
jge
sahf
jmp
dec
push
mov
leave
aam
addb
and
sahf
popf
xor
cmp
jnp
xor
jns
xchg
pop
std
mov
fdivs
sbb
jg
adc
ret
test
cld
cli
fsubrp
xor
es
into
js
mov
pushf
and
cwtl
xchg
cwtl
jp
icebp
lods
cld
mov
fs
cmp
dec
pop
stos
lret
pop
repnz
add
add
out
std
dec
std
pop
lcall
xchg
pop
push
xor
pop
cmp
add
sar
or
jp
push
frstor
push
sarl
or
or
and
inc
scas
cmp
mov
cmp
xchg
push
pop
and
sub
sub
ljmp
mov
push
and
push
push
sub
outsb
push
mov
inc
mov
cmp
mov
xor
incl
add
outsl
sub
stos
scas
imul
xor
leave
inc
lds
push
cld
mov
int3
cmpsb
mov
fbld
seta
popf
in
aaa
in
jp
xor
mov
adc
fcmove
popa
mov
mov
hlt
or
scas
out
out
xchg
pop
dec
push
or
jl
mov
sbbb
mov
gs
in
push
sub
es
loope
incl
sti
iret
mov
aas
test
incb
add
add
fidivs
loop
ljmp
rcrb
cmp
add
add
add
outsl
sub
std
call
sub
xor
jae
xchg
dec
imul
jl
push
lea
fdivs
mov
int3
ss
in
xchg
mov
xchg
lds
mov
dec
push
mov
pusha
dec
and
push
sub
movsl
inc
sbb
dec
cltd
pop
and
mov
out
jl
mov
out
dec
jb
adc
movsl
mov
cmc
lea
rorb
inc
icebp
aaa
iret
add
pop
sub
cmpxchg
mov
mov
pop
mov
mov
cmp
stos
cld
daa
jne
ret
sub
pop
mov
sahf
jmp
add
mov
cli
dec
rcl
sbb
shll
ret
jns
out
in
jecxz
out
push
adcl
fdivs
cmp
adc
ret
es
mov
mov
push
push
shr
test
lods
push
mov
int3
repnz
mov
sbbb
shrb
push
xchg
jg
jmp
std
mov
xor
push
inc
scas
add
add
add
out
data16
shrl
sub
cs
sbb
pop
pop
xor
and
inc
aam
mov
sti
insb
xor
dec
fildll
lcall
call
lret
xchg
jbe
mov
fisttpll
mov
xor
addr16
mov
int3
sti
mov
or
jno
mov
sub
in
int3
jle
ficoml
repnz
stos
sub
xor
movsl
scas
popa
mov
das
xchg
push
add
jecxz
mov
cmp
int
in
mov
jecxz
fwait
cmc
aad
lods
mov
mov
add
xorl
lret
inc
and
rcrl
in
mov
jnp
mov
subl
xlat
loop
nop
xchg
xchg
jge
jmp
cmpsb
popa
test
rorl
insb
cmpsl
fsts
pop
cmp
ret
shll
pop
push
movsb
fsubl
push
divb
inc
mov
addl
push
sti
add
xor
sbbb
cltd
cmc
sub
dec
ret
dec
stc
inc
xor
cmpsl
mov
fisubrs
and
cmp
or
test
mov
lahf
aaa
dec
fldl
movsl
pop
jb
arpl
or
or
sub
sbb
int
add
mov
mov
ss
loopne
or
stc
mov
add
xor
jne
enter
adc
cmp
xchg
jae
js
xchg
and
mov
lea
inc
jle
cmp
fdivs
xor
sbb
xor
fsubrl
adc
flds
or
icebp
sarb
out
xor
leave
xor
out
and
stos
das
in
repnz
xchg
inc
sbb
ficompl
xchg
xor
mov
or
movsb
mov
fwait
outsb
cmpsl
jno
add
add
xor
cmp
inc
call
mov
add
add
mov
pop
or
fidivl
mov
pop
cltd
push
lods
shrb
sti
adc
push
lds
mov
xchg
sbb
add
and
sti
pop
sar
pop
jmp
leave
cld
mov
cwtl
jae
pop
and
outsl
and
mov
and
imul
fidivrs
ret
jp
das
stos
insb
fsubr
mov
sbb
sbb
mov
loop
subb
push
ret
push
pushf
dec
mov
push
mov
sub
cmpsb
cmp
arpl
adc
adc
fsubrp
inc
nop
packsswb
pop
bound
pop
inc
mov
dec
ljmp
cs
jbe
imulb
mov
pop
or
loope
push
add
push
out
fsts
fistpl
ret
xchg
dec
inc
jge
stc
cmp
mov
insl
mov
ja
push
movsl
lock
mulb
lret
dec
or
sub
rolb
add
es
les
mov
arpl
xchg
xchg
dec
mov
add
add
inc
inc
ss
push
imul
idiv
xor
jge
sbb
rcll
scas
sub
outsb
xchg
test
dec
xchg
mov
inc
int
mov
adc
negl
push
push
std
shr
jne
jbe
jp
jno
pusha
shl
pop
fsubrs
push
cltd
std
pushf
int3
hlt
stos
mov
pop
sub
xchg
inc
pop
push
stos
or
jmp
sbb
aaa
not
dec
sahf
aaa
aam
sbbl
push
lea
push
rorb
jmp
sub
cwtl
int3
ficompl
mov
repz
push
mov
jle
ret
and
mov
div
dec
and
inc
shlb
jg
push
cmp
xchg
cmp
orl
inc
loopne
jge
adc
mov
mov
hlt
int3
push
add
insl
lods
jbe
cwtl
pop
cld
or
loop
xchg
sub
test
inc
push
popa
cltd
sarb
aas
mov
int
bnd
add
clc
pop
stc
out
push
pop
bound
dec
push
mov
add
add
bound
jnp
test
shll
cmpsb
jle
cs
dec
mov
mov
repnz
jbe
mov
rorb
cmp
xchg
in
fs
mov
cmp
dec
dec
push
fcmove
inc
mov
notb
mov
adc
lods
cmp
std
sarb
sti
jnp
mov
adc
test
outsb
push
push
popf
repz
out
imul
insb
xchg
xchg
lods
lcall
inc
stos
leave
or
dec
fxtract
cld
std
adc
cmovg
or
adc
mov
and
xchg
mov
ds
jo
dec
pop
ja
pop
sbb
and
mov
cmp
mov
popf
insl
push
dec
pushf
mov
jecxz
xchg
or
repz
inc
stos
and
mov
pop
sti
xor
push
push
mov
in
ljmp
inc
xchg
inc
mov
and
pushf
pop
lds
cli
lcall
push
push
mov
add
add
sub
push
jge
leave
fnsave
and
sbb
hlt
and
inc
fiaddl
je
mov
fsubrp
inc
xlat
cltd
push
lods
cmp
xchg
imul
mov
or
xchg
mov
lret
add
push
pop
insl
stos
jo
fs
stos
jg
rcrl
xor
and
adc
test
test
aaa
push
out
arpl
mov
mov
sti
in
or
cmpsl
cld
pop
shlb
pusha
fcomp
lahf
xlat
jbe
pop
mov
or
mov
stos
clc
shll
sbb
fstps
loope
cmpsl
lret
mov
leave
out
mov
push
dec
add
mov
lret
sbb
lahf
sahf
mov
cli
dec
ds
jns
shlb
fmul
jg
mov
sbb
adc
mov
dec
jbe
xor
popf
push
jp
cmp
out
stos
cli
xorl
insb
lret
stos
rcrb
add
add
cmp
lcall
mull
cmp
inc
aad
lcall
jns
fsubrl
mov
shll
add
xor
jmp
cli
adc
mov
push
lret
aas
sahf
fsts
stos
adc
mov
ficomps
mov
cmp
pushf
push
xchg
jg
aam
test
mov
outsb
mov
rorb
mov
or
cmp
jp
aad
int3
xor
sub
inc
pop
xchg
lret
imul
jp
xchg
sti
fwait
or
sub
mov
test
test
xchg
or
mov
sub
loop
mov
mov
sti
in
in
adc
in
dec
xchg
rcr
cmpsb
mov
add
push
add
fdivs
cmp
fnstsw
dec
pop
pop
sbbl
fstp
rorl
push
hlt
xchg
pop
mov
add
add
nop
shr
xor
repnz
fld
test
test
push
sahf
orb
in
testl
xchg
cmpsl
mov
pop
mov
aad
ror
mov
cmp
les
lods
cld
adc
fimull
jg
fwait
outsl
mov
repz
in
mov
xchg
push
test
out
cmp
lock
jg
imulb
jae
lock
inc
sbb
xor
or
mov
imul
jnp
pop
hlt
cmpl
xchg
lret
cld
test
xor
idivb
fistpl
dec
arpl
lock
push
cmpl
xor
aam
pop
push
pusha
jmp
es
mov
push
sahf
jbe
or
push
xchg
sub
mov
mov
push
mov
add
add
in
mov
jecxz
out
mov
das
mov
pusha
mov
add
add
fs
aam
adc
inc
xchg
pop
pop
mov
repnz
lret
add
addb
mov
pusha
loopne
cld
rolb
test
or
rol
push
jmp
cmp
inc
push
push
jbe
ss
jb
jp
or
out
or
jmp
or
notb
mov
mov
and
fs
mov
xchg
decl
xor
pop
outsl
and
and
cltd
leave
scas
pop
jg
outsb
aam
or
mov
mov
out
lret
fcoms
and
mov
mov
shrl
repz
cmp
jle
icebp
sub
cmpsl
sar
inc
outsb
test
aaa
cld
mov
imulb
stos
div
cmp
in
xchg
and
cld
nop
fwait
outsl
jb
subl
ret
mov
adc
test
sbb
mov
or
sub
imul
lock
inc
shrl
adc
jns
add
add
std
test
jg
into
lret
orl
add
add
mov
int
mov
pop
cmpsb
das
and
pop
popf
jns
inc
push
push
js
sbb
jnp
call
jbe
xchg
insl
popf
cmpsl
pop
mov
repnz
repz
pop
sbb
mov
fcomip
fcmovb
imul
cmc
hlt
dec
stos
mov
stc
mov
mov
sti
jbe
sbb
push
add
mov
pop
jae
inc
jl
adc
ret
cmp
sub
dec
ljmp
dec
repnz
test
adc
into
rcrb
out
in
jb
xorb
inc
dec
adc
add
loopne
adc
bound
jl
or
or
pop
lret
inc
sbbb
mov
ss
mov
icebp
hlt
mov
out
jb
sub
in
dec
jmp
mov
dec
inc
inc
dec
or
cmp
inc
adc
dec
dec
mov
lock
in
lcall
jae
dec
mov
add
add
aad
mov
or
loope
jae
stos
push
jnp
pop
std
or
ljmp
mov
sbb
xor
imul
cs
loope
stc
push
ret
push
xor
lret
pusha
push
jnp
pop
pop
mov
ret
push
jbe
pop
addr16
inc
adc
fildl
sti
mov
scas
in
lahf
pop
or
dec
cmp
mov
divl
push
out
dec
adc
jnp
stc
sub
out
push
gs
call
and
cmp
cmpsb
push
xor
cmpsl
enter
fsubrs
mov
pop
lock
in
cwtl
adc
xor
sbb
mov
mov
or
adc
enter
cmp
aad
shll
dec
sub
dec
inc
push
mov
dec
push
shrl
xor
mov
inc
xor
sbb
in
data16
jge
xchg
lret
adc
dec
or
jg
dec
arpl
stc
insb
mov
add
das
ficomps
test
add
int
js
mov
sub
and
mov
add
sbb
mov
clc
mov
es
dec
fcomps
jp
outsb
add
fwait
mov
mulb
cmpsb
push
enter
xchg
mov
fnstenv
cmpsl
dec
stos
pop
orb
sub
sti
mov
mov
clc
jge
mov
int3
add
lahf
adc
rcl
std
pop
into
push
scas
inc
or
std
int3
je
ficoml
aad
xchg
xor
pop
sub
mov
xchg
pop
mov
in
stc
lods
and
fcmovu
sub
out
iret
orl
std
mov
add
clc
pop
subl
das
mov
cmp
pop
add
addr16
sub
xchg
daa
fs
sbb
push
jecxz
pop
pop
sub
aaa
fistpll
scas
xchg
in
xchg
insb
incb
insl
sbb
outsl
mov
out
jmp
xchg
jo
add
add
add
dec
push
in
loopne
out
inc
or
les
jae
aaa
repz
imul
outsb
fstp
adc
sub
and
sub
xchg
js
add
repz
push
dec
addr16
arpl
cmp
int3
xchg
mov
clc
fisttpl
lods
fs
daa
dec
cmp
dec
xor
add
aad
fdivrl
adc
push
jno
ljmp
or
fildl
lods
outsl
dec
pop
faddl
sub
inc
sub
mov
lods
jne
lods
xchg
dec
jge
std
pushf
fisttpll
push
gs
mov
add
clc
lds
outsl
jno
pop
jl
cmp
push
es
inc
aad
mov
test
pop
adc
mov
fstpl
and
insb
push
sbb
dec
xchg
jp
aam
cmp
pop
add
scas
lea
xor
mov
pop
mov
mov
add
lds
out
rclb
aad
std
ss
push
lods
insb
cmp
jb
sbb
xchg
xlat
lcall
int3
and
dec
xchg
mov
inc
call
cmp
dec
mov
fs
mov
mov
loopne
sarl
dec
push
xchg
inc
push
rcl
push
mov
sbb
pop
arpl
xchg
rolb
jp
inc
push
loop
cli
inc
in
cmc
das
cmp
xchg
dec
fisttpll
incb
inc
jns
mov
aad
lret
or
sub
out
inc
sub
add
test
icebp
inc
ljmp
movsl
rcr
xchg
int
jb
in
inc
insb
psllw
loopne
std
mov
lock
dec
mov
push
out
pop
cmp
ret
cmp
jns
and
mov
xchg
or
aad
shrb
cmp
xchg
inc
and
aam
test
mov
xor
scas
add
dec
xor
add
add
fistpll
call
les
add
add
sarb
daa
loopne
and
and
xchg
pop
lods
enter
sub
inc
sarl
popa
adc
imul
cmp
mov
mov
and
cmpl
sbb
xor
imulb
addl
pop
jno
jmp
xlat
or
call
and
xlat
add
sbb
arpl
lcall
push
jo
test
cs
xor
mov
movsb
jmp
or
or
push
int
pop
and
push
ds
sbb
cmp
rolb
fimull
dec
loop
xor
test
cld
leave
inc
pop
push
aam
fs
mov
hlt
out
mov
movsl
and
rcrb
ret
out
jl
push
arpl
in
jns
pop
mov
loopne
sub
in
mov
sbb
sub
mov
pop
into
std
sti
leave
sti
iret
jmp
dec
in
jl
add
add
add
mov
inc
lods
out
mov
ja
vmulss
inc
push
in
dec
pop
xor
scas
and
push
dec
jbe
cld
inc
cmpsl
in
dec
push
push
dec
inc
jb
inc
ljmp
leave
orl
pop
mov
xchg
mov
dec
cmpsl
push
pop
sti
adc
xchg
popf
xchg
push
arpl
std
test
inc
xorl
jge
insb
sub
loope
dec
test
cltd
es
inc
clc
fidivl
loope
and
cmp
inc
fs
leave
push
pop
sub
pop
andb
arpl
cmp
js
cmp
cmp
into
mov
ljmp
js
mov
fisubl
sahf
cmp
sbb
outsb
mov
ret
inc
std
addr16
mov
push
sub
mov
add
xchg
push
add
mov
mov
xor
scas
cmp
add
add
xor
rolb
jmp
inc
lcall
cltd
xor
in
data16
in
lahf
es
pop
sbb
mov
cmp
xchg
pushf
fdivl
cmp
outsl
les
adc
jle
jmp
shl
dec
sbb
or
dec
add
or
arpl
fimull
mov
fsubrp
ja
imul
int
ds
pop
sbb
in
popf
xchg
dec
lcall
pop
mov
out
dec
je
push
jo
push
pop
gs
aaa
stc
push
repz
out
cmp
in
aas
adc
cmp
push
inc
xor
lea
push
mov
imulb
cld
adc
sub
clc
cwtl
jge
ja
add
aas
jo,pt
outsb
jnp
out
hlt
mov
push
add
pop
fxch
xchg
loopne,pn
add
stc
loope
and
mov
jp
jbe
mov
ss
in
daa
js
fsubr
scas
add
add
add
jg
mov
sahf
loop
ror
sub
test
add
inc
push
pop
scas
lods
and
test
xchg
inc
xor
sti
push
shr
movsl
dec
stc
call
inc
push
testb
sbb
pop
cmpsb
xor
loop
pusha
adc
jae
pop
pusha
lods
cmc
xor
int
jecxz
add
out
pop
enter
sbb
lcall
or
mov
jb
mov
pop
rorb
push
pop
xor
adc
pop
push
add
mov
es
iret
outsb
cli
jl
ljmp
xchg
xchg
sub
jb
lcall
xorb
and
bound
adc
call
insb
adc
insl
or
les
pop
jbe
adc
jecxz
lret
jge
or
cwtl
rcr
push
or
pop
lods
jmp
push
pop
pop
lcall
xor
clc
or
mov
out
rorl
mov
push
bound
sbb
add
addl
std
cli
mov
add
inc
enter
pushl
cld
sbb
mov
add
add
add
rorb
mov
push
imul
lods
adc
dec
gs
inc
adc
shlb
out
jno
test
or
jb
fmulp
cmp
sub
aam
push
push
scas
aad
push
nop
cmc
cmp
lcall
scas
push
jbe
and
jmp
inc
scas
xor
sub
andl
and
lret
fldt
cmpl
sbb
fsubs
popa
ret
xor
dec
add
sti
arpl
cmp
pop
jecxz
mov
in
pop
das
cltd
push
mull
cld
inc
iret
xchg
jo
mov
mov
sbb
roll
xor
fcmovnb
std
mov
cmc
cmp
popf
xchg
adc
add
push
adc
mov
cs
nop
fwait
xor
insb
add
mov
out
adcl
sbb
lods
loopne
shrl
add
xlat
pushf
shrb
lcall
movsb
inc
xchg
pop
mov
add
add
add
inc
lret
pushf
enter
lock
jge
je
push
or
cmp
add
cmp
or
cmpsl
je
in
or
sub
jb
cld
loop
loope
arpl
add
cltd
ds
jp
cmp
xchg
adc
mov
arpl
mov
mov
pop
and
stos
inc
lretw
addr16
imul
out
sbb
popf
nop
or
mov
cmp
pop
jne
push
xchg
cmpsb
xor
mov
aad
cmp
sub
loopne
loope
inc
pop
lcall
pop
lods
ss
inc
dec
lret
repz
pop
lcall
cmp
idiv
out
pop
inc
mov
mov
popf
cmpsb
stos
je
gs
subl
jge
and
fs
inc
add
xchg
or
pop
pop
mov
inc
add
mov
cli
xor
adc
inc
shlb
movsl
lock
lcall
add
add
test
mov
aas
scas
fscale
lods
scas
mov
add
add
rolb
mov
add
jmp
sbb
or
std
cmpsl
xor
sub
dec
test
pusha
or
dec
insl
inc
insb
mov
xchg
dec
or
daa
fcmovb
sbb
push
xchg
or
pop
iret
push
mov
or
gs
jge
inc
inc
xchg
aad
lret
sbb
mov
std
mov
ja,pn
orb
shll
out
mov
repnz
adc
mov
push
rorb
jnp
hlt
mov
shll
out
push
scas
pop
jg
pop
cltd
lahf
mov
popf
movsl
ja
out
mov
bound
in
dec
loope
cltd
subb
adc
inc
dec
push
jecxz
jge
adc
adc
sbb
aaa
je
test
cmp
sub
push
stos
int
lret
and
fldt
cltd
adc
pop
push
aaa
pop
insb
fisubrl
or
add
addl
cli
jg
jne
jne
jg
loop
mov
sub
add
dec
stos
in
out
or
aam
and
lods
shl
dec
mov
and
or
cs
sub
popf
cltd
fcompl
xchg
add
xchg
adc
or
loop
adcl
cli
sub
inc
xchg
sbb
jno
mov
add
cmc
ljmp
inc
jnp
aas
xlat
xchg
mov
and
or
cli
jp
cmpsb
mov
mov
testw
shl
and
dec
xchg
insb
inc
add
sahf
jnp
mov
inc
out
xchg
cmp
mov
mov
fsubrl
mov
push
bound
movsb
lret
or
pop
mov
xor
jl
or
mov
jo,pt
sbb
xchg
mov
mov
mov
je
cmp
std
scas
lods
xor
mov
imulb
scas
in
mov
sub
call
add
dec
pop
mov
cmc
mov
mov
add
add
mov
jge
ret
sub
sbb
daa
subb
sub
inc
or
inc
andl
or
lcall
sbb
add
push
mov
pop
ffree
out
in
dec
lcall
insl
push
aas
out
add
and
mov
dec
push
xor
mov
pop
idivl
xchg
adc
rclw
stos
lea
in
jbe
mov
inc
in
jns
cltd
push
inc
xorl
lea
aad
sbb
xor
push
push
out
stc
scas
push
mov
mov
call
mov
mov
or
clc
dec
scas
mov
jle
adc
adc
mov
enter
inc
lahf
outsb
mov
xadd
shr
and
inc
stc
jbe
mov
xor
loope
fstps
loop
dec
push
and
outsb
jle
lods
testl
lds
add
add
pushf
in
xor
dec
pop
ja
sub
int3
rcrl
out
jmp
pushf
add
sub
adc
xor
cmp
xor
clc
sbb
and
repz
cwtl
push
mov
int
xchg
mov
xchg
xchg
inc
dec
inc
xchg
nop
pop
and
xlat
jo
insb
out
xchg
cmc
repnz
imul
fwait
xor
or
outsb
mov
cmp
push
dec
xor
test
push
pop
push
stc
subb
imul
pushf
inc
daa
push
or
popf
test
stos
push
xchg
pop
add
scas
hlt
mov
lea
jg
lahf
inc
not
push
xor
test
mov
lret
out
insb
adc
out
pop
push
push
mov
int
push
js
mov
mov
test
mov
add
ja
sub
xchg
and
jbe
mov
sbb
xlat
pop
xorb
push
add
dec
clc
arpl
xor
jae
mov
xor
pop
mov
mov
add
fs
movb
add
add
or
sbb
xor
hlt
mov
lea
popa
ficoms
std
mov
jp
jb
or
cmpsb
into
repz
int3
shlb
test
mov
into
fnstcw
mov
jg
jmp
in
sub
aaa
mov
cmpsl
mov
jno
ds
sti
add
adc
mov
jp,pn
push
sub
adc
inc
jge
jne
and
scas
movsl
or
cmp
push
sbb
ja
or
lods
adc
hlt
xor
lds
in
and
push
jge
in
sub
fwait
sub
adc
aaa
stos
pop
testl
inc
push
jo
adc
les
inc
call
cwtl
roll
mov
sub
dec
imul
and
pop
jge
fwait
and
mov
into
inc
les
dec
add
cmp
dec
sbb
out
adc
push
icebp
dec
push
add
mov
jb
add
add
out
sti
xlat
in
aad
pop
sub
inc
movsb
movl
add
sbb
cltd
and
addl
or
push
sti
or
iret
sbb
dec
nop
dec
pop
push
dec
cmp
sbb
add
mov
mov
sbb
repz
lret
loopne
push
scas
sub
mov
loop
stos
shll
push
or
push
jecxz
ds
push
inc
push
ss
push
dec
mov
or
push
dec
pop
insl
xchg
test
lret
notl
sbb
push
sub
stos
int
push
cmp
idivl
pop
ljmp
insl
mov
popa
loop
mov
adc
aaa
pop
pop
int
pusha
inc
pop
push
arpl
xor
mov
add
nop
rorl
sub
adc
testl
pop
shlb
stc
scas
movsl
push
aad
mov
pop
mov
mov
addr16
mov
xor
pushf
into
js
add
add
push
sub
cmp
jg
and
mov
xchg
pop
jo
test
add
add
add
sbb
lret
inc
mov
push
jb
dec
aaa
adc
stc
xchg
xor
jmp
xchg
add
jae
fldl
rep
mov
or
arpl
inc
ret
xlat
or
dec
push
in
arpl
test
jb
dec
lea
sub
xor
jecxz
jp
push
icebp
leave
xor
dec
xchg
add
mov
xchg
pusha
lock
fwait
push
push
dec
in
std
or
push
pop
in
outsl
cmpsb
mov
jp
cmp
clc
xchg
dec
iret
mov
or
cmp
sub
inc
xchg
xchg
cmpsl
ljmp
pop
imul
ret
bound
imul
outsb
call
inc
je
xchg
sub
xor
fsubs
hlt
imul
lahf
leave
ret
mov
in
inc
cmp
jno
jecxz
xor
pop
add
xchg
jmp
ds
repz
fcoms
pop
stos
pop
lods
leave
add
add
add
xor
push
mov
cli
icebp
mov
push
cs
repnz
and
mov
cmc
fdivs
xorl
push
imul
pop
jnp
mov
xchg
cmc
stos
xor
shll
dec
cmp
dec
test
icebp
movsb
mov
stos
jae
add
dec
fcompp
int
and
arpl
jne
aas
iret
mov
pop
adc
arpl
add
kmovw
enter
clc
sub
shl
mov
dec
sarb
push
mov
xor
xchg
sbb
push
inc
push
mov
inc
sbb
add
jmp
leave
std
out
pop
cltd
cmp
push
mov
cli
test
ja
mov
cmp
push
out
adc
fdivs
aas
xchg
mov
sbb
mov
aas
cmp
sbb
cli
sahf
or
pop
icebp
stos
add
popa
int
xchg
decl
shr
pushf
es
or
mov
mov
jne
push
pop
jnp
pop
jmp
mov
mov
mov
inc
enter
lret
add
add
inc
ret
inc
pop
sub
leave
mov
sahf
mov
pushf
xchg
lea
add
or
nop
out
or
loope
and
xchg
jge
xrelease
loope
xchg
pop
addr16
fs
rcr
ret
sbb
cmp
push
es
in
and
shl
jle
aam
sahf
dec
adc
jecxz
scas
ret
pushf
sub
andl
mov
sbbl
and
inc
inc
cli
insl
pop
aad
mov
mov
jbe
mov
adc
les
icebp
scas
div
xchg
lahf
add
fdivrl
je
dec
insl
pop
addr16
mov
lock
jbe
inc
jbe
call
aam
ss
sub
pop
jl
sbb
xor
add
inc
test
sbb
push
jge
and
daa
pop
jns
popf
mov
mov
enter
jno
stc
sti
fcoml
and
rolb
or
add
add
enter
in
sbb
push
inc
and
add
add
add
cmpsl
jnp
mov
dec
and
idivb
sbb
cs
testb
popa
or
xchg
mov
xchg
repz
das
loopne
xor
icebp
stc
aaa
jae
aad
inc
addr16
add
jge
pop
pushl
xchg
daa
add
sbb
leave
cmpsb
inc
test
addr16
les
in
xchg
ret
fwait
cmp
in
mov
mov
cmp
ficoml
sbb
addr16
xchg
jle
inc
mov
in
mov
mov
or
orb
xchg
sbb
loopne
pop
cwtl
xchg
icebp
insb
ret
mov
ljmp
aas
push
test
xchg
js
sub
push
inc
jle
in
arpl
push
or
fdivs
in
rorb
aaa
sbb
lds
sub
enter
inc
mov
dec
pop
push
and
jo
cmp
fmul
cmp
sbb
lock
mov
lret
jle
push
push
inc
jns
int3
ret
fmuls
jo
jae
mov
sarb
addl
add
add
imul
cmc
call
inc
push
popa
loopne
push
pop
mov
add
add
sub
cmp
sbbb
add
dec
push
add
add
sahf
ret
jbe
lds
out
dec
add
loop
dec
fbld
inc
addr16
ret
pusha
adc
mov
cmp
dec
inc
xlat
mov
cmovb
xchg
xchg
xor
ds
add
ds
or
push
test
movsl
adc
fidivrs
out
data16
ret
push
add
jmp
xor
fisubs
pop
add
test
call
sbb
cmp
jbe
dec
xchg
pop
es
add
insl
ds
mov
sti
sub
out
fistl
outsl
testl
shrl
adc
xchg
jo
mov
cmp
stos
sbb
cli
iret
bound
pusha
inc
mov
fdivl
jl
into
adc
xchg
lret
les
popa
inc
push
and
push
push
xlat
repz
outsb
test
or
mov
leave
pop
popf
xor
add
movsl
mov
iret
sub
ret
mov
add
add
dec
xchg
fildll
sub
fs
sbb
add
rcll
adc
jle
mov
std
repz
movups
pop
mov
add
push
sahf
es
aam
aas
cwtl
and
fmulp
fs
push
inc
lcall
mov
icebp
aaa
gs
mov
gs
testl
rol
xchg
int3
dec
lahf
aam
push
sub
inc
push
cmp
nop
fiaddl
xor
lret
js
into
push
or
sub
xchg
add
out
not
stos
xchg
and
sbb
inc
sub
sti
imul
mov
lods
movl
lock
xor
mov
mov
out
xchg
add
pushf
push
test
test
aas
outsl
out
imul
repnz
frstor
push
out
outsb
in
ljmp
mov
pop
xorb
push
data16
cmp
mov
out
out
out
into
gs
cld
test
into
add
add
add
fmull
aad
daa
fs
jg
pop
push
fadd
dec
mov
mov
in
push
sbb
mov
imul
or
pushl
push
test
push
pop
xor
orb
fisttpl
pop
roll
test
ficoms
push
pop
js
jbe
cld
into
shlb
xchg
imul
sub
cmp
fisttpll
insl
test
mov
or
or
xchg
arpl
in
outsl
fwait
orl
push
jmp
or
sbb
adc
cmp
mov
mov
inc
rolb
aam
sub
inc
ja
and
cmpsl
push
pushf
iret
pop
mov
mov
adc
cmp
xchg
mov
pop
test
vpaddd
repz
lret
xlat
ljmp
add
xchg
and
je
out
mov
repz
inc
outsl
iret
add
add
add
jle
das
add
jmp
cmc
and
iret
arpl
ss
call
adc
not
ds
push
je
push
in
das
ja
jge
lock
mov
adc
jae
testb
pop
cmp
jne
jg
adc
mov
sbb
rep
cmc
lcall
adc
imul
rol
xchg
fistpll
mov
stc
into
push
adc
push
or
push
cmp
ljmp
jb
test
fwait
push
inc
push
in
ds
faddl
dec
sbb
out
je
mov
out
sbb
sbb
xchg
xchg
sub
sbb
sbb
cmp
sbb
sti
push
mov
ret
dec
iret
inc
dec
repz
sub
add
iret
dec
enter
cld
mov
inc
jbe
jecxz
gs
pop
xchg
pop
ljmp
sbb
pop
dec
inc
mov
push
dec
inc
dec
daa
dec
das
outsb
imul
push
xchg
nop
adc
imul
add
add
sub
insl
mov
mov
test
mov
mov
pop
jne
jge
rclb
rcr
cmp
mov
nop
je
sbb
add
add
jnp
in
mov
xor
push
les
push
int3
iret
or
ss
imull
outsb
rclb
dec
gs
cli
ss
sub
hlt
mov
test
gs
rolb
mov
mov
and
cmp
jns
stc
rcr
repz
scas
mov
xor
mov
je
inc
mov
or
stc
jns
sub
icebp
orl
lcall
mov
inc
addb
iret
ret
pop
and
cmp
stos
jae
pushf
insb
lods
mov
dec
xlat
leave
mov
jbe
aaa
xlat
into
inc
jp
add
scas
cltd
popf
jb
push
sbb
bound
lcall
movsl
add
test
fdivr
xor
enter
push
add
popf
mov
lahf
ret
or
roll
add
add
push
je
pop
fnstenv
inc
loope
ds
xor
lea
pop
xchg
push
mov
call
sbb
arpl
bound
lock
or
call
sahf
xor
xor
in
or
push
cli
loop
sub
faddl
cs
iret
pusha
inc
mulb
inc
call
pop
jge
rolb
rcr
xchg
sbb
push
stos
outsl
je
inc
inc
adc
clc
sub
dec
wbinvd
inc
call
gs
pop
mov
insl
add
iret
lds
and
divb
bound
jo
mov
fwait
cmp
insl
push
inc
sbb
add
enter
std
pop
pop
fistps
push
jle,pt
pop
pop
jne
lock
mov
cmp
fstl
xor
sarb
leave
imul
push
loope
inc
mov
jecxz
neg
dec
fsubrs
mov
mov
mov
mov
mov
pop
xchg
or
popf
push
mov
add
add
and
dec
mov
dec
cwtl
or
cmp
mov
mov
cltd
inc
mov
subb
add
imulb
ja
pusha
orb
std
loope
push
adc
fwait
jg
repnz
push
cmp
pop
adc
cmp
pop
pop
lods
mov
push
xor
pop
out
out
loop
scas
xor
pop
push
mov
sahf
int3
sbb
lret
adc
sbb
incl
clc
in
enter
cmp
xchg
lcall
sbb
mov
push
or
lahf
cmp
repz
out
rcr
adc
repnz
or
out
adc
jnp
push
and
mov
movsb
xor
mov
xor
mov
xorb
mov
bound
or
gs
or
sbb
cmp
xor
inc
xor
add
sbb
sub
dec
jp
xor
aam
add
add
add
andb
add
les
bound
shl
push
dec
xlat
mov
xchg
pop
pop
stos
hlt
iret
shrb
in
or
out
mov
dec
jnp
jmp
cmp
push
jge
rcrl
pop
jp
popf
adc
frstor
and
mov
std
clc
outsl
cmp
inc
push
mov
imul
ljmp
je
int
lock
js
pop
hlt
cmp
into
dec
mov
jmp
jmp
push
sbb
hlt
lahf
push
inc
scas
stos
mov
jmp
xchg
jo
in
inc
adc
sbb
das
xor
push
js
jo
mov
nop
iret
mov
mov
adc
mov
mul
or
out
jbe
out
stos
add
outsb
push
mov
jmp
daa
adc
cmp
popf
or
push
into
sbb
cmpb
cli
xchg
inc
loopne
add
add
ds
jae
inc
push
aas
fcom
add
add
add
repnz
add
mov
jno
pop
inc
sub
inc
mov
adc
inc
loop
repz
out
sahf
jge
xor
cmp
xor
out
jp
dec
outsl
push
movsb
sti
lcall
scas
gs
jo,pt
mov
mov
or
mov
jno
xor
ja
daa
sbb
mov
and
mov
adc
or
clc
nop
out
cwtl
les
add
xchg
jg
pop
ret
ja
lock
jbe
popa
inc
mov
nop
xor
lods
xor
mov
cmp
mov
stos
nop
or
mov
or
jns
sub
mov
or
inc
movsb
or
fdivrl
stc
ret
stos
movsl
mov
fadds
lods
jno
je
fldl
stos
call
adcl
and
pop
cltd
outsl
je
sbb
sub
xchg
and
idiv
lahf
insl
mov
stos
mov
add
add
add
cmp
in
int3
inc
cmpsl
fsub
addl
inc
notb
xchg
out
out
out
sar
inc
sub
pusha
and
cli
dec
jl
fdivl
inc
aam
mov
lock
dec
push
pop
in
mov
out
out
mov
push
and
movsb
insb
mov
mov
xor
dec
pop
and
push
xor
mov
push
fldcw
add
cwtl
push
inc
dec
push
aad
jle
daa
imul
jbe
xor
add
das
mov
push
mov
or
ds
ja
xchg
mov
or
push
sahf
inc
mov
cmp
sbbb
jg
dec
dec
stc
push
dec
push
push
popa
mov
mov
or
loop
jmp
cwtl
dec
pop
mov
jle
xor
sbb
and
test
bound
cmp
jg
leave
or
test
repnz
loopne
add
add
add
push
mov
pop
pop
pop
pop
nop
pop
sub
sub
cmp
mov
mov
and
test
frstor
shrl
pop
inc
add
and
xchg
jg
jns
xlat
inc
add
dec
inc
sub
jle
xchg
add
add
mov
inc
shll
lock
jg
push
dec
pop
ja
pop
fidivs
add
pop
lea
jo
xor
inc
test
cmp
sub
cmpl
scas
sub
sahf
push
mov
pop
jnp
enter
stos
sub
push
aaa
inc
dec
push
push
jbe
push
pop
fs
mov
mull
jp
gs
lods
fstps
mov
mov
push
xchg
arpl
push
inc
or
add
push
inc
popf
hlt
jbe
out
cli
repz
mov
std
sbb
call
mov
push
jl
inc
xor
loopne
mov
xchg
imul
xchg
movsb
cmp
test
in
add
add
add
sbb
aas
fidivrl
clc
clc
jbe
call
dec
scas
cmpsl
xor
mov
pop
inc
inc
lret
lock
stos
notb
test
and
outsl
aam
mov
push
pop
ds
mov
jae
lret
popf
xchg
jmp
pop
pop
stos
call
mov
sub
test
negl
xor
mov
push
cmp
mov
or
sbbl
add
mov
inc
mov
mov
jecxz
mov
push
add
int3
push
pop
in
dec
dec
xchg
call
test
pop
subb
aas
xchg
sahf
hlt
push
sarl
shr
ja
clc
mov
fisubs
enter
out
in
xlat
outsb
lods
pop
inc
je
bound
dec
inc
jno
push
test
popa
push
sbb
push
xchg
xor
mov
jae
fsts
add
out
fldcw
push
in
sub
add
add
int3
adcl
out
xchg
ret
mov
in
fldl
lock
outsb
pop
orl
xor
adc
lods
mov
pop
dec
mov
cli
fwait
jnp
ficoml
mov
lds
xor
mov
mov
add
and
xor
xchg
fnsave
clc
je
dec
inc
xchg
orl
cmp
pop
pop
adc
enter
sub
sub
jmp
leave
dec
fnstcw
and
mov
shlb
clc
mov
add
push
lahf
xor
mov
fnsave
fst
call
or
inc
inc
inc
movsl
lret
jae
xor
test
xchg
je
out
js
mov
pop
xchg
imul
inc
mov
dec
mov
pop
mov
cmp
sbb
lret
test
add
add
sbb
sahf
cmc
fsubrp
jnp
sti
enter
fs
in
flds
add
add
sub
jne
fnstcw
shll
enter
rcrb
in
add
add
inc
es
mov
jle
popf
mov
and
xor
fwait
pusha
sbb
or
and
xchg
xor
adc
xor
dec
pop
xchg
test
mov
pop
lret
pop
push
dec
mov
test
lret
lahf
ljmp
fst
andl
cmp
ret
sub
scas
xchg
push
push
mov
sbb
dec
fs
jne
cmp
dec
imul
push
pop
icebp
iret
mov
clc
loopne
shll
decl
mov
cmp
scas
movb
lods
push
mov
add
imul
neg
jb
mov
push
pop
xlat
pop
or
mov
dec
out
mov
in
inc
mov
dec
sub
mov
dec
jo
adc
lock
fldt
sahf
stos
jge
and
add
sub
pop
dec
jle
jg
std
fstpt
cs
lock
add
add
add
or
lcall
cmpsl
or
jns
mov
jb
cs
mov
and
stos
scas
dec
adc
or
dec
faddl
enter
mov
dec
outsb
pop
mov
inc
cli
fwait
xchg
push
and
or
pop
dec
das
and
jnp
push
iret
cld
cmp
sub
jno
out
leave
insb
xor
mov
push
or
mov
loope
mov
cmp
push
cmp
arpl
push
adc
mov
xchg
into
lret
stc
std
add
inc
cmpsb
outsb
inc
fisttpll
ja
xor
mov
enter
mov
cmp
mov
cmc
jns
dec
cwtl
mov
pop
cmp
adc
sub
loopne
mov
or
pop
iret
loopne
pop
cmp
addr16
adc
call
add
mov
sti
idiv
lods
pop
sbb
inc
lock
fildl
add
add
jb
sbb
mov
gs
ds
jmp
les
xchg
ja
jnp
mov
jne
ret
rolb
mov
sbb
push
insb
out
mov
pop
fistps
pop
cmp
sbb
pop
out
jo
lock
sub
inc
dec
sar
test
add
cs
mov
xorl
jne
mov
mov
aaa
and
popf
xor
xor
sahf
test
cmp
bound
pop
fldenv
cmp
push
ja
fiadds
dec
xor
mov
lods
mov
mov
movsl
mov
push
dec
inc
mov
push
out
inc
adc
lahf
pop
inc
mov
sbb
push
mov
adc
xchg
sub
fisubl
scas
daa
sub
cmp
lods
ds
cli
rclb
and
call
fidivs
add
adc
leave
jmp
scas
inc
call
clc
faddl
add
add
jle
sbb
pop
movsb
jge
pop
push
cwtl
push
iret
inc
jle
jbe
mov
pop
cmp
inc
sbb
roll
gs
outsb
jg
fabs
push
dec
frndint
mov
jl
xchg
and
mov
or
mov
pop
cmp
adc
sub
test
int3
insb
gs
jmp
les
ret
jo
sbb
jl
inc
nop
cmpl
or
and
cmp
leave
repnz
dec
add
xchg
sub
adc
ljmp
in
xlat
and
and
xor
sub
push
out
and
das
xor
xchg
add
iret
mov
mov
inc
lret
pop
sub
cwtl
push
mov
cmpsb
push
add
pop
pop
push
cmp
jb
scas
xor
or
push
sub
mov
mov
mov
mov
insl
push
push
cmpsl
fimull
faddl
in
cld
fldl
add
add
adc
in
mov
xorl
mov
jmp
adc
mov
testl
into
xor
or
cltd
icebp
push
dec
test
xchg
xchg
in
mov
or
popf
pop
cmp
cmp
addr16
xchg
dec
inc
lcall
lods
cmpsb
scas
push
cs
fdivl
std
adc
add
sbb
pmuludq
enter
fiaddl
dec
dec
xchg
lcall
in
aam
insb
jns
and
insl
mov
xor
sbb
shrb
push
push
or
push
fstpt
jae
jmp
jno
cmp
jo
mov
push
out
lahf
inc
pop
push
fsubl
push
sbb
sbb
ja
push
push
xchg
fs
stos
push
add
inc
pop
xchg
jge
pop
cld
iret
jge
dec
jbe
sbb
popf
pop
insl
lods
test
stos
sahf
mov
sldt
add
jg
mov
lcall
fisttps
or
add
add
add
add
mov
daa
fwait
das
leave
outsb
mov
inc
stos
cwtl
or
pop
add
sub
and
gs
inc
mov
mov
cmp
and
sbb
repnz
test
aam
inc
orps
jb
mov
fidivrl
sbb
mov
arpl
adc
and
inc
jp
mov
daa
inc
hlt
sub
sbb
mov
stc
shr
mov
outsb
push
loopne
xor
cmp
ljmp
out
pop
mov
or
daa
and
js
jg
mov
movsl
nop
shrb
orl
cmp
pop
push
jl
add
mov
in
sub
rcr
inc
lcall
jecxz
adc
inc
mov
mov
mov
loopne
pop
add
addr16
lock
imull
dec
jge
mov
add
sbb
jns
xchg
xchg
mov
inc
popf
adc
loopne
add
add
mov
xchg
push
sti
adc
loope
cmovbe
loopne
pop
mov
lds
test
add
mov
testb
sub
and
jmp
xlat
mov
fsubr
fimuls
movsb
jae
push
mov
shll
imul
xor
push
pop
or
add
push
mov
mov
scas
mov
popf
adc
call
test
andb
fdivrp
movl
into
cmpsl
dec
mov
cmp
adc
fs
inc
shlb
les
pop
mov
push
scas
sahf
fisttpl
cs
pusha
and
xchg
movsb
sub
pop
sbb
and
daa
imul
clc
mov
test
jl
pop
cmp
and
xchg
mov
push
imul
pop
cld
jnp
pop
sar
mulb
jge
test
imul
sub
add
jae
fadd
fsubp
jnp
or
cld
les
loope
add
add
sbb
xchg
sbb
inc
mov
mov
sub
insl
jnp
push
les
pusha
adc
orl
in
add
frstor
fimull
or
jae
xlat
fnsave
push
jnp
cmp
xchg
cwtl
lea
jl
xchg
std
mov
into
sbb
jnp
lods
mov
mov
lods
dec
call
rol
cmpsl
jg
out
ja
mov
adc
aas
push
and
mulb
or
xchg
in
out
sahf
addr16
adc
mov
sub
mov
imul
jecxz
cmp
sbb
aam
sbb
or
dec
fmull
cmp
loop
gs
xchg
and
fisubrl
aad
inc
sub
aas
testl
gs
jbe
inc
xor
loopne
push
pop
xchg
xlat
and
push
cmp
stos
sub
xchg
inc
push
push
cmp
sub
cld
cli
jle
dec
nop
xor
loop
add
add
mov
shll
mov
pop
call
mul
jge
insl
movsb
cli
push
fdivrs
cli
pop
pop
or
out
dec
mov
cmpsb
ret
mov
test
jae
push
jo
outsb
mov
mov
mov
fxch
jb
aaa
lods
out
jo
pushf
mov
jmp
ds
decl
xchg
xor
jo
loope
jp
inc
add
das
jmp
jecxz
sbb
push
pop
push
jbe
hlt
mov
pop
es
push
pop
push
je
stos
pusha
test
sub
jbe
test
lcall
sub
xchg
mov
and
idivl
in
or
mov
int
lret
dec
aaa
hlt
insl
mov
std
mov
sub
add
fs
cmp
test
daa
in
ret
pop
xor
jp
xor
jnp
dec
out
sbb
dec
push
lret
mov
fwait
mov
jae
imul
mov
pop
shlb
lea
pop
jbe
ja
sti
aaa
out
ja
mov
add
add
add
sbb
cmpsb
or
ret
add
xchg
xor
andb
push
repnz
ss
inc
ja
jo
call
mov
and
or
cwtl
sbb
or
or
enter
mov
pop
lods
and
ret
outsl
dec
leave
scas
cs
xlat
clc
xchg
mov
add
inc
pop
clc
stos
fldt
outsl
dec
mov
sarl
push
dec
mov
mov
xlat
jp
jle
aam
notl
mov
lahf
in
jg
in
fld
jecxz
aad
ret
mov
scas
push
mov
or
push
mov
mov
fistpl
test
mov
cmc
in
popf
pop
daa
xor
jmp
rcll
into
mov
mulps
lea
jmp
or
hlt
mov
jmp
dec
mov
xor
inc
test
es
push
outsl
inc
jmp
cli
dec
cli
inc
mov
add
add
into
arpl
pop
xchg
aaa
pushf
mov
ret
daa
adc
add
add
add
loope
clc
push
cmp
sub
jmp
push
sti
cmp
fcomip
repnz
jnp
fdivl
mov
push
test
inc
jne
mov
xchg
sub
pushf
test
test
and
sbb
pusha
int
inc
jmp
scas
lret
pop
mov
jno
pop
mov
fistl
sti
xchg
mov
clc
push
movsb
xchg
inc
test
mov
pop
fldl
clc
sbb
insl
fstps
fdivl
dec
movsl
adc
push
clc
lds
mov
sub
arpl
lret
dec
in
addr16
fnsave
or
cli
loop
jp
inc
cmpsb
adc
mov
dec
sbb
xchg
push
mov
adc
in
xchg
dec
dec
adc
stos
clc
mov
pop
inc
insb
or
addb
iret
movsb
jmp
mov
xchg
data16
es
and
or
stos
adc
ret
pop
cltd
cmc
adcb
fcos
pop
mov
enter
add
add
add
jb
push
xchg
icebp
rol
ret
xchg
inc
add
jge
and
int
std
adc
inc
mov
and
push
xchg
add
cld
rolb
sub
cmp
lret
fdivp
xchg
inc
imul
jno
daa
jns
mov
add
insb
scas
aad
jmp
int
icebp
cmpsl
ds
add
jo
inc
jg
sub
out
insl
adc
bound
xor
icebp
add
data16
xor
int
adc
pop
aad
xchg
outsb
mov
and
mov
cltd
test
jg
data16
test
leave
and
mov
jns
add
test
or
sub
jle
sub
mov
mov
cmc
shr
jl
xchg
lahf
fwait
xor
jne
inc
mov
pop
sub
pop
xchg
sub
out
cli
or
sbb
fnsave
popa
or
dec
dec
push
lret
jnp
repz
lock
jg
in
and
popf
fdivrs
sbb
add
add
add
sub
or
mov
or
jge
sti
mov
out
loopne
adc
lods
in
outsb
stos
sub
loope
pop
andb
ret
je
popa
roll
dec
sti
out
mov
mov
sbb
jne
shll
scas
aaa
mov
jge
or
cmp
leave
imul
add
inc
loopne
leave
mov
daa
sbb
sbb
inc
mov
push
addl
aam
cltd
cld
mov
xchg
sbb
es
inc
mov
in
dec
push
scas
neg
xlat
inc
or
cmp
cmp
das
jge,pn
or
dec
cmp
test
rorb
test
fs
pop
fwait
mov
sbb
dec
imul
lock
out
je
inc
mov
add
and
push
in
fwait
addr16
dec
cmp
imul
push
leave
add
xchg
fwait
cwtl
pop
popf
pop
xlat
fistpl
fisubrs
add
add
mov
xor
adc
push
xchg
clc
push
sbb
leave
fwait
rorl
adc
in
test
xchg
jle
or
or
mov
pop
xor
mov
test
dec
inc
or
lock
mov
push
lods
xchg
fwait
push
pusha
xor
push
and
int
dec
adc
jo
inc
rcrl
cli
scas
jo
testl
sub
scas
mov
negl
cmpsb
or
scas
mov
mov
repnz
addr16
jge
call
inc
into
mov
lret
je
adc
mov
mov
stos
stos
cmp
adc
in
xor
xchg
sbb
je
ljmp
mov
or
cmpsb
mov
push
push
in
scas
orb
int
std
cmp
push
push
sbb
test
mov
mov
fs
lcall
daa
pop
icebp
or
leave
fcmovu
stc
mov
dec
js
stc
mov
dec
int
pop
xchg
jge
and
add
add
add
inc
cmp
neg
dec
xchg
pop
xor
jb
scas
xchg
mov
inc
add
rcrl
adc
xchg
je
lea
sub
xchg
mov
call
add
scas
sbb
fsts
aam
or
out
aas
jnp
add
and
in
pop
dec
hlt
int3
push
rorl
dec
loope
rcl
lds
fsts
data16
arpl
dec
sub
cmp
fmuls
aam
mov
add
out
mov
mov
in
pop
add
scas
in
test
jle
cmp
pusha
or
mov
mov
xor
inc
loopne
jno
mov
aad
pop
out
pop
out
or
arpl
mov
popf
or
shrl
push
dec
push
pop
jne
lret
fistpll
cmpsl
xor
mov
ds
pushf
sub
popf
mov
aas
xor
bound
mov
add
insl
repz
fwait
jns
jns
popa
adc
jmp
add
scas
push
jg
in
cld
or
push
test
inc
mov
mov
and
lods
pop
cmp
popf
cmp
dec
adc
nop
mov
outsb
add
mov
repnz
mov
dec
dec
lds
pop
hlt
fwait
adc
sub
in
sub
inc
test
rcll
ret
pop
aas
sahf
cli
jp
and
sbb
mov
popf
inc
das
sahf
push
hlt
lahf
inc
push
fnstenv
imul
insb
addr16
je
and
inc
out
std
jno
dec
jp
pop
pop
lahf
fstp
xchg
aaa
movsl
cli
push
mov
inc
cmp
jp
daa
lret
movsl
dec
into
fdivs
rcrl
dec
rcll
inc
je
cli
stos
or
mov
lahf
mov
sbb
inc
fisubrs
test
mov
call
or
fisubs
adc
cs
movsb
xchg
dec
leave
xor
sahf
ror
xor
lds
lret
cmp
jnp
adc
jne
xchg
loope
repz
add
add
add
test
call
adc
or
mov
loop
aaa
loopne
daa
dec
outsl
loopne
in
rcl
xor
xlat
sub
cmp
imul
pop
clc
les
inc
ret
push
pop
hlt
sarb
jg
add
xchg
fsincos
mov
jo
jne
movsb
icebp
lods
jns
sahf
test
js
pop
push
fldenv
ljmp
inc
xchg
jnp
adc
sbb
bound
nop
mov
mov
out
push
mov
sbbl
pop
jne
shrb
insl
int
sub
repnz
mov
stc
xor
out
test
loope
mov
sub
push
cmpsb
jmp
push
pop
or
mov
inc
js
adc
mov
stos
out
test
pop
lret
dec
movsl
or
mul
pushw
lods
fld
addb
arpl
out
lods
xor
aas
xlat
fistl
das
gs
jge
jmp
add
add
xor
sbb
lcall
testb
popf
mov
adc
and
push
mov
cmp
or
sub
cmp
cwtl
int
andl
add
in
not
out
adc
insl
add
mov
stos
int
adc
sub
jns
jmp
aaa
xor
dec
or
sbb
in
push
add
lods
inc
push
cs
adc
xlat
bound
xchg
pop
jp
mov
inc
dec
sub
adc
sub
sarl
lock
popf
das
or
call
outsb
lret
and
or
pop
jnp
cmpsl
and
sub
ds
scas
push
fs
mov
push
movsb
stc
jge
jecxz
int
les
stc
bsr
pushf
push
jnp
mov
xchg
ja
popf
xor
mov
xchg
jge
addr16
movsl
add
jb
scas
decb
fisttps
push
pop
or
add
add
add
pop
sbb
imul
je
je
repnz
stos
fcmovnb
addb
mov
mov
mov
popa
and
iret
in
xor
inc
pop
cmp
sarl
aam
push
mov
mov
xchg
iret
movsb
mov
xchg
mov
push
pop
mov
in
dec
or
out
sub
lahf
outsl
cmpsb
jbe
mov
mov
mov
cmpl
std
les
mull
icebp
push
hlt
and
mov
loope
add
jp
call
stos
mov
loop
sub
mov
cmpsl
jmp
leave
dec
gs
cmp
scas
xchg
into
inc
sbb
das
icebp
int3
maxps
xchg
xor
or
mov
adc
xchg
mov
sahf
lock
dec
xchg
out
dec
fs
pop
imul
xchg
xor
inc
test
scas
fisubs
in
pushf
outsb
lahf
ret
les
push
pusha
lret
mov
xlat
mov
xchg
push
call
add
add
add
mov
pop
cli
cltd
cwtl
mov
leave
fxrstor
sbb
fcmovbe
or
and
cmp
loope
push
jecxz
push
inc
pop
sub
sub
and
mov
mov
mov
mov
xchg
test
mov
adc
in
xchg
xchg
jge
nop
adc
aam
sbb
out
pop
xor
clc
sub
arpl
xchg
outsb
jno
daa
and
stc
lds
mov
mov
mov
inc
mov
pop
repz
jle
icebp
mov
adc
xor
ds
mov
xor
out
sarl
ljmp
lock
mov
out
jbe
cmpsb
daa
bound
mov
inc
mov
int
fwait
lods
sarb
test
sbb
std
push
inc
andl
push
or
fisubrl
inc
mov
lods
xor
arpl
and
add
lods
cmp
lods
aas
mov
dec
mov
add
add
into
mov
add
cmp
mov
xchg
test
pop
int3
pusha
lahf
test
fists
sti
repnz
icebp
sahf
mov
aaa
mov
pop
push
jbe
fisttps
jge
sbb
jbe
or
inc
in
xor
outsb
xlat
arpl
sarb
xor
inc
test
jg
fildl
and
aas
mov
clc
xchg
hlt
cwtl
fucomi
call
inc
sbb
and
xchg
mov
fsubrp
and
inc
mov
jo
dec
or
fcomp
imul
rcrb
mov
push
rolb
les
scas
push
sbb
fcoms
push
mulb
sub
xor
mov
inc
push
cmp
inc
xchg
mov
cmp
int
xchg
repnz
outsb
jne
fcmovnu
push
xor
and
stos
sbb
icebp
add
xor
rcrl
loop
fadd
sti
mov
outsl
cmp
add
add
add
dec
push
ja
out
mov
in
mov
jae
loope
test
int3
rcrb
inc
push
lock
popf
dec
int3
xor
dec
add
and
sub
pop
nop
lret
sub
cmp
push
out
fldln2
jmp
sub
outsb
push
sub
roll
sub
push
and
jmp
sahf
fisttps
dec
xchg
mov
pop
or
add
in
sbb
jmp
dec
bound
addr16
arpl
cmpsl
xchg
and
movsb
std
mov
iret
and
inc
daa
je
jno
adc
jmp
mov
bound
pop
mov
pop
pop
cmpsl
fsubrl
fisttpll
outsb
pop
add
adc
pop
dec
jae
orl
adc
fadd
js
jb
dec
jl
js
ds
lds
dec
xchg
mov
dec
add
mov
sbb
add
inc
int3
aas
in
inc
cmp
adc
std
fwait
int3
scas
popa
call
sbb
add
add
into
adc
neg
jge
xchg
jns
mov
lock
add
add
lret
cmp
jae
out
mov
sub
nop
push
sbb
xchg
es
mov
jg
loopne
scas
aas
movb
cltd
scas
mov
adc
or
int
push
mov
mov
aas
lcall
sub
js
scas
and
mov
test
dec
jb
dec
or
pusha
aas
sahf
fisttpl
pushl
adc
dec
jb
xor
mov
outsb
jmp
test
pop
cli
add
sahf
xchg
pop
lds
pop
add
pop
mov
aaa
outsl
sbb
xlat
je
sarl
lret
push
fs
dec
xor
cmp
loope
mov
js
jg
lahf
imul
sbb
jmp
fsts
pop
xchg
int3
mov
negb
mov
mov
xchg
loop
cmp
sbb
or
test
cmp
sti
das
sbb
push
mov
dec
loope
add
add
dec
sub
sub
fidivl
add
add
add
out
inc
ret
in
pop
jne
and
xchg
test
stos
repnz
addr16
pop
lea
lea
mov
lea
fs
aam
jg
pop
add
xor
push
pop
xor
xchg
adc
and
pushf
scas
testl
mov
mov
xchg
test
les
adcb
lret
push
xor
fs
push
jns
fwait
push
int3
andb
cmpsl
mov
adc
sub
js
shlb
ja
daa
mov
xor
mov
push
icebp
movl
pop
cmc
fidivrl
mov
aas
add
ja
add
cmp
dec
sub
stos
ds
sub
in
mov
push
fstps
inc
mov
mov
mov
cmpsb
fildl
shrb
enter
mov
mov
add
add
ja
and
aaa
divl
add
add
add
add
and
adc
ljmp
imul
cmp
pop
mov
and
push
or
adc
lcall
mov
es
mov
pop
rclb
adc
sbb
ds
ljmp
cmpsl
xor
fs
xor
push
mov
shl
sarb
add
stos
fcompl
push
popf
fidivrs
cmp
cmp
lcall
inc
sbb
pop
pop
mov
xchg
mov
adc
or
mov
in
icebp
xor
sbb
not
or
adc
je
shll
pop
and
rclb
lods
mov
mov
sub
lods
cmc
xchg
lds
mov
push
gs
adc
rcll
xchg
clc
mov
sahf
stos
push
cwtl
push
sub
pop
mov
add
add
mov
cmc
mov
leave
inc
or
add
add
pop
data16
push
mov
pop
xlat
and
lods
mov
push
lret
shlb
dec
bts
add
mov
cltd
cmp
mov
push
jb
push
daa
shl
sub
and
mov
push
adc
mov
push
xchg
fsubp
xchg
mov
xor
or
mov
cmp
enter
stos
nop
or
daa
adc
push
xchg
inc
rcll
cmc
mov
mov
icebp
icebp
cmc
push
lahf
sub
addr16
ret
or
mov
lret
addr16
add
cmp
cld
pop
and
mov
jae
mov
and
add
inc
jl
and
push
push
xchg
sub
jbe
sarl
addr16
scas
jp
subl
and
xor
or
shrl
outsl
push
cwtl
insb
ret
clc
push
dec
enter
outsl
xor
mov
mov
insl
sbb
xchg
pushf
lret
fcmove
jle
jne
pusha
popf
pop
xorl
hlt
add
add
add
and
jns
xlat
pop
mov
sbb
sub
out
fcmovbe
repz
cmp
inc
add
jb
lods
nop
mov
in
es
pop
or
scas
je
mov
jmp
aam
add
cmp
push
out
call
jb
leave
ljmp
popa
hlt
dec
mov
stos
imul
inc
mov
cwtl
xchg
loopne
sahf
jmp
mov
leave
push
movsb
dec
add
inc
and
icebp
bound
lods
adc
test
faddl
cmp
xchg
aas
stos
mov
loopne
movsl
sub
mov
sbb
mov
add
aam
and
clc
jmp
or
and
xchg
psrld
popa
ret
xlat
lahf
stc
pop
aaa
sub
lock
mov
mov
cld
mov
insl
in
pop
and
pusha
mov
rorb
pushf
mov
hlt
insb
sbb
fdivrs
add
sub
scas
fdivr
fnstcw
jecxz
test
pop
cmc
add
add
add
stos
or
lods
or
sbb
sub
icebp
pushf
ret
sbb
in
mov
aam
sub
mov
adc
bound
mov
icebp
lods
fsts
out
xor
int
push
adc
cs
popf
stc
mov
push
push
push
pop
mov
mov
aas
neg
mov
inc
rcll
scas
xor
push
fcmovnb
subl
lahf
clc
lock
movsl
adc
mov
and
inc
xor
cmp
dec
xchg
push
cmpsb
repz
hlt
test
mov
jnp
dec
xchg
xor
int
push
add
or
lcall
lods
fmull
orl
arpl
ss
leave
jno
movsb
push
out
int3
xchg
pop
inc
xchg
mov
sbb
xorl
aad
fnsave
or
cmc
add
addr16
jne
mov
int
out
sub
ret
add
xor
jb
jae
cs
andl
jo
push
dec
in
lea
movsl
jno
mov
mov
jbe
shl
pop
ss
jnp
lock
cmpsl
mov
push
jae
push
mov
jle
and
mov
pusha
out
lcall
test
scas
movsb
jns
dec
es
cltd
sbb
mov
jb
push
rcrl
div
sbb
add
and
out
shll
or
push
aam
lds
jge
push
cmp
add
clc
xor
add
sub
popa
aam
adc
add
cmp
nop
pop
push
sub
add
or
or
cmp
andb
in
xchg
cmpsl
pop
push
inc
iret
mov
and
ljmp
mov
addr16
pop
push
sbb
xchg
dec
add
insl
inc
mov
mov
dec
push
loopne
xchg
jle
or
addb
es
shll
pop
ret
adc
int
in
idivl
js
mov
sbbb
loope
testl
add
lret
fsubp
cmpsl
xor
inc
ja
sti
sub
dec
dec
push
fnstsw
pop
add
outsb
jl
mov
out
push
adc
add
mov
jl
in
gs
push
or
inc
hlt
mov
adc
std
mov
int
ss
or
sub
clc
insb
mov
stos
lods
or
lret
jb
movsb
fldt
jg
ficompl
stos
int
or
cltd
sub
addb
jecxz
daa
mov
mov
and
and
push
cmp
xchg
lahf
cmpsl
scas
imul
aad
cmpsl
mov
fbld
mov
bound
lods
ret
mov
and
mov
bound
jle
into
mov
pop
mov
ret
adc
inc
cmpsb
sti
mov
mov
pop
repz
insb
mov
inc
and
pop
cmp
pop
es
inc
cli
aas
into
lret
test
out
fs
add
add
add
fsubrs
addl
loop
sbb
dec
rcrb
lock
jae
pop
add
cmp
inc
sub
bound
in
call
add
mov
xchg
mov
lock
pop
mov
xor
lock
sub
sbb
pop
cmc
movsb
fadds
pop
xchg
into
iret
cmc
aas
clc
cld
xlat
jo
pop
mov
mov
in
xchg
pusha
xor
push
and
add
mov
sbb
in
imul
pop
js
sub
mov
shll
in
pop
fs
mov
aas
jo
or
enter
mov
nopl
es
jb
mov
sub
jbe
ret
sub
popf
add
sbb
jmp
les
test
push
dec
inc
fmuls
cmp
sub
jns
sbb
nop
dec
xchg
mov
lret
int
xor
add
add
lcall
jle
lret
stc
add
add
add
or
or
sub
push
std
mov
pop
out
cmp
cmp
jl
je
insb
sbbl
call
push
xchg
mov
pop
mov
enter
movsb
fistl
mov
or
popf
lods
clc
call
cmc
jo
or
pop
lcall
or
loopne
xacquire
int
add
popf
push
adc
cmp
mov
mov
test
sbb
add
fs
movsl
dec
inc
enter
aam
out
xor
cmp
popa
xchg
push
sbb
jmp
insl
outsb
js
imul
sub
sbb
add
std
and
ret
sub
mov
pop
popa
jmp
sub
mov
je
add
lcall
jae
ja
cmp
jecxz
aaa
jae
cltd
dec
mov
jno
sub
jle
insb
cli
add
add
add
cmp
fst
sub
sbb
sub
mov
shrl
mov
out
scas
gs
add
dec
mov
inc
dec
push
aaa
pop
mov
cwtl
xor
sahf
enter
ficomps
addr16
enter
loope
cltd
mov
dec
test
in
add
and
leave
mov
push
pop
js
test
or
xchg
mov
rcrb
sub
lods
dec
push
loop
pop
xor
mov
out
and
mov
leave
and
jno
push
lea
mov
in
imul
dec
out
out
sbb
sbb
pop
add
or
sub
or
jg
jp
xor
pop
mov
mov
add
andps
xor
cmp
push
in
adc
ss
mov
jns
jb
mov
addr16
inc
out
lret
inc
in
ds
into
nop
out
cwtl
jle
push
sub
dec
outsb
dec
test
jo
add
add
add
push
dec
inc
xchg
add
pop
subl
inc
fnsetpm(287
mov
std
adc
dec
pop
push
push
popa
inc
cmc
out
das
xor
popf
imulb
mov
mov
out
popl
xchg
insl
icebp
xor
lret
or
push
stos
pop
xor
pop
orl
mov
dec
out
jg
insb
stc
sarl
sbb
clc
pop
das
dec
rcl
inc
jns
inc
loop
xchg
call
fcom
bound
ja
int3
push
cmc
icebp
out
inc
js
rcrb
insb
adc
fldenv
aaa
mov
loop
test
inc
or
hlt
cli
mov
cmp
xchg
enter
add
int3
xchg
iret
jne
cmc
push
add
popa
pop
inc
add
ds
imul
cmc
pusha
xchg
adc
cwtl
xor
cld
stc
jg
add
jae
cmp
sti
in
out
cwtl
jmp
xor
push
inc
int
in
jb
or
jno
test
jg
push
pop
push
mov
je
add
add
add
mov
ret
mov
pushf
jae
movsb
mov
xor
mov
out
and
dec
add
dec
jg
fninit
cltd
xor
mov
adc
push
mov
ljmp
mov
sub
xor
inc
cmpsl
pushf
in
or
xor
icebp
ret
add
fcompl
stos
je
into
mov
pop
sbb
pusha
push
xchg
and
adc
adc
fnstsw
push
das
bound
ret
push
iret
fcompl
push
arpl
rorb
movsb
xchg
push
std
movsl
movsb
aaa
adc
cmpsl
pmullw
daa
cwtl
outsl
nop
inc
or
enter
pop
icebp
aad
cltd
pop
cmp
jmp
in
lahf
jno
pop
sbb
sbb
sub
mov
in
aam
xchg
cli
outsl
push
jmp
adc
mov
movsl
xlat
outsl
jno
sub
mov
push
repnz
movsb
and
adc
movsb
push
in
cmc
jne
sbb
js
addr16
js
add
add
add
stos
or
int
pushl
push
jge
flds
mov
jl
add
out
inc
aam
fwait
push
adc
icebp
add
dec
outsl
xor
lods
test
lcall
xlat
fcomps
jns
pop
js
cmc
and
cmp
and
imul
dec
insb
jmp
ss
mov
loope
jmp
and
pop
fwait
sub
in
jne
cwtl
subb
or
or
in
mov
mov
xchg
push
sti
jecxz
aas
cltd
pop
xor
cli
pushf
rcl
add
jbe
or
jae
mov
and
cmp
inc
test
sahf
ljmp
cld
mov
addl
inc
sbb
test
mov
in
sbb
cmp
mov
xchg
mov
out
out
sbb
add
add
out
shlb
aas
out
int3
mov
dec
clc
or
incb
add
add
movsl
fisttps
loop
inc
xchg
daa
sbb
pop
cmp
lret
sbb
loopne
int
jmp
dec
sbb
xchg
cli
mov
imul
dec
mov
loope
ja
jns
push
imulb
jg
dec
or
or
push
xchg
mov
cmc
aad
stos
xchg
pop
add
dec
jbe
xor
xchg
adc
pop
cmc
sbb
jmp
xchg
cmp
push
mov
frstor
add
xchg
and
sub
inc
or
sub
dec
cmp
jl
sub
aad
mov
shll
or
jmp
data16
cmp
push
out
addl
mov
pop
inc
dec
and
nop
mov
xchg
mov
push
inc
add
and
hlt
insl
mov
pop
pop
sbb
in
movsb
enter
push
dec
shrl
fabs
lds
nop
ret
jl
in
jmp
roll
inc
fimuls
add
aam
push
xchg
cmp
or
mov
and
ret
add
add
add
pop
sbbl
xchg
xchg
sahf
aam
sti
push
pop
pop
scas
cmpsl
mov
adcb
add
das
les
sub
sbb
loop
push
insb
pop
cmp
mov
in
and
mov
or
jne
sbb
sbb
iret
mov
pop
stos
xchg
pop
test
push
push
rorl
inc
cmpsl
fiaddl
jmp
rorb
cmc
jno
adc
sbb
pop
in
int3
and
or
aam
push
adc
pop
pop
int3
xor
lea
pop
clc
xor
icebp
fadd
jmp
mov
lods
jae
sbb
push
clc
cld
sbb
ret
cmp
or
ljmp
push
cmp
sti
jno
rcll
sbb
je
stos
or
cmp
test
and
sbb
test
out
add
add
ret
loope
adc
xchg
jmp
xchg
inc
sub
out
addr16
loope
aam
xchg
add
add
ret
bnd
cmc
inc
stos
repz
repnz
test
add
add
add
das
mov
ss
out
mov
push
in
add
fnsave
mov
hlt
adc
into
daa
dec
jmp
outsb
ret
mov
lcall
dec
jl
fstpl
cs
sbb
sub
imul
add
mov
lds
pop
inc
aaa
lret
clc
mov
adc
outsl
ljmp
cmp
sub
xchg
popf
test
mov
sbb
or
jp
daa
jle
adc
adc
es
jne
add
mov
cmc
lea
ljmp
lods
inc
sub
in
inc
add
jle
adc
je
fnop
les
cli
rcll
add
cltd
cmp
xor
aaa
xchg
fldl
dec
clc
mov
insl
sub
mov
roll
mov
jae
rcl
inc
mov
in
mov
add
std
aaa
mov
shll
hlt
mov
add
add
add
xchg
sbb
fsub
or
repnz
push
and
pusha
pop
test
aam
aas
inc
adc
inc
cmp
push
push
xchg
mov
adc
xchg
icebp
push
dec
push
dec
int3
stos
pop
call
mov
mov
and
sysexit
les
aaa
cltd
cli
xchg
test
scas
sbb
pushf
loop
push
xchg
ja
bound
in
clc
mov
xchg
lret
mov
jmp
mov
inc
or
inc
xor
fidivl
cmp
mov
inc
dec
insb
andl
mov
inc
inc
lods
repnz
inc
xlat
arpl
add
push
mov
es
push
or
daa
scas
xor
shr
sub
iret
shlb
add
pop
xchg
aam
dec
enter
cmp
aas
in
lds
and
ljmp
dec
adc
stos
and
sbb
fadds
xchg
insl
aam
mov
scas
add
fsubrl
mov
add
test
add
cli
ljmp
in
xor
call
lock
in
cmpsl
fs
sub
mov
inc
push
lods
cmc
push
xor
or
out
sub
scas
push
dec
xchg
cli
inc
lret
insl
dec
ret
out
or
aad
inc
pop
cmp
pushf
xchg
clc
or
imul
jno
repz
lods
sbbb
lea
xor
clc
xchg
cmp
pop
mov
loope
lea
aad
jle
jnp
imulb
test
stc
dec
subl
add
add
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
lret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
call
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
push
decl
mov
test
add
xor
add
mov
or
inc
mov
arpl
sub
incl
lea
or
incl
mov
cld
add
xchg
fdivr
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
adc
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
call
out
test
in
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
add
add
inc
inc
mov
decl
add
inc
fmull
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
fsub
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
jb
add
push
fildl
mov
inc
add
or
inc
call
jge
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
enter
mov
xor
add
xchg
call
mov
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
loopne
sub
int
sub
inc
push
cmp
movaps
cld
faddl
jne
push
loopne
inc
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
daa
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
int3
inc
inc
add
add
xor
pushf
lea
add
inc
mov
xor
add
mov
fmull
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
add
xor
cmovge
add
jmp
jb
add
xor
xor
add
clc
int3
add
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
enter
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
in
scas
inc
mov
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
in
jge
sub
mov
mov
mov
mov
in
ror
push
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoms
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
enter
mov
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
int3
pushf
add
add
add
clc
int3
inc
add
push
pushf
mov
enter
aas
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
enter
clc
incl
cmp
pushf
pop
lods
incl
mov
rcrb
test
sbb
add
push
loopne
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
loopne
test
xor
mov
rolb
inc
add
clc
inc
lret
mov
loopne
lret
into
into
scas
dec
mov
sub
cmp
mov
enter
add
xor
xor
lret
mov
inc
add
mov
xor
mov
in
add
bswap
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoml
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
jmp
ror
or
add
not
adc
inc
push
mov
push
mov
in
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
add
push
clc
xor
add
hlt
or
mov
hlt
dec
add
mov
add
leave
push
push
mov
fcoml
inc
xor
iret
cld
lret
loopne
mov
mov
mov
cld
jne
movb
add
test
inc
incl
mov
cld
add
leave
xor
in
mov
inc
add
int3
cld
jne
call
mov
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
and
call
in
jmp
je
call
and
call
and
push
or
pop
mov
and
mov
and
mov
jne
test
decl
sbb
jl
adc
dec
mov
mov
and
xor
or
add
clc
jmp
adc
inc
je
and
je
mov
decl
sbb
add
add
adc
mov
adc
add
add
adc
sub
add
imul
add
aaa
inc
add
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
add
jo
add
pop
adc
push
adc
add
insb
adc
jb
adc
shll
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
jge
add
or
add
sub
add
insb
adc
addr16
add
adc
lds
add
cmp
pop
cmp
sbb
inc
add
cmp
and
inc
add
cmp
sub
inc
add
cmp
cmp
adc
clc
cmp
add
pop
adc
mov
adc
add
adc
cmp
shll
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
adc
fwait
pop
adc
jnp
adc
pop
adc
popf
jno
add
inc
adc
sbb
add
cmp
xchg
cmp
fwait
cmp
lahf
cmp
mov
cmp
stos
cmp
scas
cmp
push
xor
aaa
pop
inc
dec
xor
push
add
xor
pop
inc
push
pop
dec
xor
push
add
cmp
xor
xor
pop
inc
add
dec
cmp
xor
pop
pop
xor
inc
add
inc
pop
cmp
push
inc
xor
xor
inc
inc
inc
cmp
dec
inc
add
push
xor
push
aaa
dec
pop
xor
dec
add
inc
xor
push
pop
push
inc
add
xor
cmp
push
push
push
pop
inc
push
push
add
inc
pop
pop
push
inc
pop
inc
add
cmp
inc
xor
pop
pop
cmp
inc
xor
dec
add
pop
cmp
xor
cmp
dec
dec
cmp
pop
dec
xor
xor
pop
inc
push
inc
inc
add
cmp
push
inc
xor
pop
dec
dec
ss
pop
push
cmp
pop
push
dec
add
inc
cmp
dec
xor
inc
xor
xor
push
add
xor
push
cmp
ss
pop
push
inc
xor
dec
inc
xor
dec
pop
push
add
inc
add
pop
add
add
add
xor
add
add
push
add
xor
add
inc
add
xor
pop
add
add
xor
add
xor
add
push
add
dec
add
push
add
push
add
pop
add
dec
add
push
add
pop
add
add
dec
add
cmp
pop
add
add
add
add
add
push
add
cmp
add
add
push
add
add
add
inc
add
inc
add
push
add
dec
add
add
dec
add
inc
add
dec
add
add
add
push
add
add
push
add
add
pop
add
add
inc
add
add
push
add
add
push
add
dec
add
add
aaa
add
add
pop
add
inc
add
xor
push
add
push
add
add
push
add
add
add
inc
push
arpl
jno
push
cmc
inc
stos
dec
push
nop
or
add
push
cmp
addr16
bound
outsb
pop
je
ja
imul
js
jp
jns
jp
je
jp
jo,pn
bound
