push
mov
sub
push
lea
push
addl
push
subl
call
xorl
push
incl
xor
inc
movl
push
decl
push
andl
call
xorl
test
movl
je
xor
movl
jmp
push
xor
mov
incl
push
addl
push
call
andl
test
je
sbbl
lea
push
orl
call
jmp
push
inc
mov
push
adcl
push
push
orl
call
andl
test
movl
jne
mov
orl
push
sbbl
push
adcl
call
test
movl
je
orl
push
xorl
push
push
subl
call
adcl
test
jne
push
push
call
xorl
test
movl
jne
addl
push
orl
push
push
call
xorl
test
jne
andl
push
push
sbbl
call
movl
jmp
movl
add
mov
mov
movl
addl
movl
lea
mov
mov
sub
sub
mov
xor
lea
mov
xor
add
xor
mov
mov
movzbl
or
mov
mov
mov
mov
addl
xor
xor
mov
andl
add
mov
mov
cmp
jne
sbbl
mov
mov
inc
mov
xor
addl
add
mov
negl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
add
mov
mov
add
mov
mov
mov
mov
and
mov
mov
mov
sub
sub
mov
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
call
mov
dec
mov
jmp
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
adc
movl
movzwl
xor
mov
mov
xor
orl
add
movl
jmp
adc
mov
addl
xor
subl
lea
orl
push
negl
mov
xor
adcl
lea
orl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
pushl
adcl
call
movzbl
sbb
mov
adc
xor
sbb
lea
mov
add
mov
mov
adcl
xor
xorl
xor
add
xor
mov
sbbl
xor
lea
movl
cmp
jbe
mov
and
mov
mov
movl
mov
sbb
mov
neg
mov
sub
xor
movl
mov
mov
mov
movl
cmp
movl
jne
orl
push
xor
movl
inc
andl
push
push
adcl
call
orl
test
jne
xorl
push
push
xorl
call
test
jne
adcl
push
push
push
call
test
movl
jne
addl
push
negl
push
andl
call
orl
test
jne
sbbl
lea
subl
mov
lea
orl
mov
xor
mov
andl
test
je
xor
mov
mov
xorl
mov
andl
xor
add
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
movl
cmpl
je
cmpl
ja
jmp
push
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
pushl
pushl
call
xor
xor
dec
mov
jmp
cltd
mov
movl
cmpl
je
cmpl
ja
jmp
call
xor
add
dec
mov
jmp
mov
add
mov
adc
and
andl
xor
mov
mov
mov
and
mov
andl
xor
add
mov
movl
adcl
adcl
xor
subl
mov
mov
xor
mov
movl
cmp
movl
jne
mov
mov
cmp
movl
je
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
mov
dec
mov
jmp
mov
orl
mov
addl
mov
xor
add
adc
xor
xor
cmp
movl
jne
cmp
movl
jne
mov
orl
mov
sbbl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
call
jmp
mov
mov
mov
add
notl
mov
jmp
mov
movl
cmp
movl
je
xor
xor
adc
mov
mov
mov
xor
add
movl
cmp
movl
je
xorl
push
xor
inc
sbbl
push
subl
push
adcl
call
orl
test
movl
jne
movl
push
addl
push
call
test
jne
andl
push
push
push
sbbl
call
orl
test
movl
jne
push
addl
push
call
addl
test
jne
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
or
mov
mov
mov
pushl
movl
mov
pushl
movl
add
mov
orl
mov
movl
pushl
sbbl
call
mov
mov
movl
mov
jmp
adcl
push
adcl
xor
sbbl
inc
notl
push
push
call
orl
test
movl
jne
orl
push
addl
push
addl
call
addl
test
movl
jne
xorl
push
push
push
call
test
movl
jne
subl
push
push
call
test
movl
jne
andl
push
push
push
call
test
movl
jne
adcl
push
subl
push
call
notl
test
movl
jne
sbbl
push
push
subl
push
call
test
movl
jne
subl
push
adcl
push
sbbl
call
test
movl
jne
mov
andl
mov
inc
mov
cmpl
ja
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
decl
add
movl
cmp
jne
sbbl
mov
mov
andl
mov
xor
subl
add
cmp
jne
movzwl
and
mov
adcl
push
xor
add
adcl
push
decl
push
sbbl
pushl
andl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
xor
mov
inc
lea
mov
lea
mov
mov
test
je
push
push
push
call
test
jne
push
push
call
test
jne
push
push
push
call
test
je
lea
push
call
jmp
push
push
call
test
je
xor
jmp
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
inc
ret
push
mov
sub
mov
sbb
mov
mov
addl
mov
movl
movzwl
sub
mov
dec
jmp
sub
jae
xchg
xchg
pop
int3
lea
jl
rcrl
jl
cs
cmp
and
popa
pusha
fs
insb
insl
xor
fdivrp
push
arpl
stos
jp
push
iret
pop
dec
cmp
dec
jg
mov
jmp
cld
imul
xor
mov
andl
push
mov
fldl
or
and
inc
push
and
mov
sub
mov
jbe
ret
sbb
jb
jnp
xchg
pop
cmpl
cwtl
je,pt
add
sub
push
sti
iret
mov
or
out
push
dec
push
cmp
xor
lods
inc
int3
cmpsl
dec
fiaddl
push
std
push
push
movsl
icebp
bound
pop
inc
clc
pop
cmc
dec
ja
mov
cli
and
dec
dec
xchg
sbb
mov
jno
xchg
push
or
lods
dec
and
xor
xor
cmp
daa
outsb
int3
and
das
jmp
out
and
mov
loope
xchg
in
mov
jb
mov
cld
pop
inc
sbb
jge
std
lods
pop
int
je
sbb
pushf
pusha
xchg
cmp
in
insb
xor
stc
or
fiadds
ror
or
leave
ret
xorb
in
jecxz
aad
mov
data16
xchg
mov
fcmovnb
xor
leave
outsb
imul
pop
push
sub
out
ret
add
jo
in
inc
js
sbb
dec
aas
sti
lret
mov
loop
push
dec
fistps
fnstenv
mov
sub
in
mov
push
test
psubb
pop
xlat
mov
xchg
mov
sbb
shlb
pushl
scas
dec
sti
push
aas
lds
psubusw
pushf
push
pop
push
adc
add
jle
aad
jne
add
mov
xchg
adc
inc
xchg
mov
push
mov
mov
daa
ret
fidivs
dec
popf
neg
movsb
jnp
xor
das
mov
cli
or
and
js
fwait
jg
pop
test
sub
mov
inc
sti
outsb
fwait
daa
and
sahf
inc
lret
jp
xchg
clc
popa
sbb
mov
sub
xchg
cld
xor
notb
mov
and
les
mov
and
int3
out
icebp
jle
and
xchg
cmpsl
lahf
fbld
cli
sub
test
xchg
sarb
and
adc
sbb
stos
es
out
clc
push
pop
stos
add
pop
pop
push
fistl
jo
loope
test
test
mov
inc
mov
arpl
scas
in
addl
fiaddl
jbe
aam
dec
jge
mov
push
pop
mov
or
bnd
cmp
or
subl
push
enter
ret
jp
or
inc
out
loop
fmuls
and
or
fmulp
push
adc
fs
std
into
add
rcll
sbb
xchg
mov
insl
inc
dec
inc
inc
add
sti
inc
clts
mov
and
scas
cld
ret
xchg
fsubs
or
popa
ss
push
push
into
adc
jo
inc
lret
mov
pushw
cmpsb
sbb
fucom
and
sbb
scas
xchg
in
clc
push
push
xor
pop
mov
dec
sub
mov
arpl
cs
fimuls
sbb
pop
cmp
inc
cs
cmp
xlat
inc
pop
cmp
or
shr
fistpll
mov
in
fldl
loopne
rcll
nop
add
sub
mov
dec
iret
popf
sbb
mul
out
bound
into
movsb
fnstsw
pop
rorl
hlt
jecxz
cmp
leave
cwtl
ret
cwtl
sbb
js
mov
out
cmp
scas
jbe
and
vpshab
bound
jbe
dec
xchg
cmp
outsl
lock
popl
fdivs
ljmp
mov
mov
dec
mov
lahf
and
inc
mov
adc
mov
sub
lea
sub
movsb
fsub
stc
push
or
xchg
xchg
lock
and
test
mov
out
jg
jg
xchg
and
jecxz
clc
jecxz
xadd
sahf
dec
xchg
push
mov
stos
daa
cmp
stc
scas
fcomip
add
adc
inc
mov
loope
incl
jg
cmpsl
cmp
ja
and
fst
dec
xchg
xchg
inc
test
pushf
xchg
fimuls
stos
add
mov
adc
testb
imul
pop
popf
lahf
out
or
sbbl
lods
dec
sub
or
inc
aas
in
data16
imul
faddp
lcall
adc
inc
aaa
mov
inc
scas
push
es
fucom
pop
mov
sbb
xchg
or
fcmovnu
sbb
push
scas
add
jns
fsubl
stos
sahf
cmp
lds
adc
daa
lods
or
sahf
enter
js
je
push
push
lret
psrld
call
mov
insb
jne
imul
fcmovnb
and
mov
jns
fadd
lret
fwait
dec
and
outsl
mov
fistl
xor
addr16
push
mov
fidivs
sub
dec
jl
lods
in
push
jmp
aaa
inc
jl
cltd
adc
or
push
jg
aas
dec
adc
inc
flds
pop
xor
call
out
jno
hlt
stos
gs
pusha
xchg
test
fwait
sub
fidivrl
fdivs
dec
ror
call
sbb
pop
mov
pop
roll
sbb
push
stos
mov
dec
mov
icebp
lds
cmp
mov
mov
mov
scas
xor
enter
xchg
into
mov
ja
popf
ds
jge
cltd
arpl
outsb
insl
xchg
imul
aad
and
jae
lock
xor
mov
lahf
sbb
stc
jns
or
les
xchg
insl
int
cwtl
roll
out
clc
jno
dec
jbe
cmp
xor
pop
xchg
popa
movsb
xchg
aaa
ds
cs
scas
push
pop
pop
fistpll
shlb
int3
ret
in
or
push
lea
std
enter
jno
inc
mov
scas
insb
inc
or
cltd
xor
mov
jp
insb
mov
gs
out
in
fs
and
rsqrtps
push
mov
push
jl
ror
mov
xchg
sti
pop
in
adc
add
sbb
push
repnz
scas
lds
inc
jp
inc
scas
cltd
mov
shlb
mov
out
inc
shrl
xorb
and
xlat
daa
sahf
aas
fidivrs
adc
mov
mov
jbe
mov
xchg
cmp
mov
fwait
push
or
push
loope
fistps
das
pop
xchg
fs
add
ret
mov
xor
mov
in
mov
es
and
orb
adc
adc
aas
test
mov
mov
pushf
das
mov
and
add
pop
add
jmp
sub
xor
dec
add
sbb
rcll
mov
out
loope
out
dec
inc
lods
shrl
and
outsl
inc
xor
mov
mov
repz
mov
pusha
insl
in
xor
add
mov
cmpsl
pop
sbbl
cwtl
iret
sti
lret
push
mov
sub
adc
mov
push
lret
lahf
xor
fiadds
dec
xchg
in
cmpb
arpl
ror
iret
sbb
pop
addr16
mov
fiaddl
cmp
sbb
mov
jle
imul
inc
outsb
xchg
loope
mov
xor
aaa
cmp
xchg
dec
cltd
xor
icebp
adc
mov
repz
in
pop
lods
cs
pop
xlat
mov
inc
rol
mov
jne
ret
mov
xchg
mov
mov
mov
adc
bound
lahf
cmc
popf
mov
orl
in
mov
sub
push
lret
mov
mov
dec
mov
pop
fs
insl
adc
inc
xchg
mov
arpl
push
sub
sub
fistl
dec
xchg
adc
lods
ja
jns
mov
std
xor
stc
outsl
xor
mov
sti
lcall
cmovs
sti
dec
xor
jo
imul
push
xchg
dec
into
cmp
jmp
fs
daa
fcoms
pop
xchg
dec
ret
daa
lods
call
loopne
or
sub
into
cs
sub
xor
std
cs
or
jns
cmp
mov
jae
dec
mov
ficoms
mov
dec
dec
movsb
aas
cltd
jge
stos
pop
jb
adc
push
mov
lret
cs
dec
jae
ds
lret
mov
stos
sub
inc
scas
push
or
in
push
outsl
jbe
inc
lock
lret
js
shrb
and
mov
rorl
imul
sub
adc
lea
cmp
mov
mov
sahf
in
add
arpl
jno
aad
push
ljmp
adc
jb
cmp
dec
adc
jne
add
dec
mov
jb
sbb
pushf
xor
scas
jb
sub
sbb
pop
mov
loop
ljmp
sub
add
push
cmpl
ljmp
mov
test
lret
sbb
or
into
add
or
int
dec
push
pop
push
mov
pop
lcall
jle
push
dec
cmpsl
mov
push
sahf
mul
pop
inc
jo
in
faddl
insl
push
ja
pop
mov
jo
cli
add
push
rcr
cmpsl
pop
add
push
mov
xor
stos
pop
test
sbb
pop
push
push
add
lea
sbb
sbb
or
imul
outsl
call
std
lds
inc
dec
push
dec
enter
in
std
stc
mov
mov
add
icebp
data16
pop
lcall
mov
call
inc
sti
das
add
cmp
add
jp
mov
and
pop
adcl
daa
fiadds
lcall
fdivr
sub
pop
loope
mov
ss
sub
pop
dec
test
mov
add
inc
dec
mov
jl
pop
mov
fiaddl
pop
and
movzwl
cmp
cmp
mov
rol
pusha
xchg
mov
test
negb
or
rcr
dec
repz
inc
fwait
lods
mov
cmc
aad
mov
arpl
stos
pop
std
and
mov
push
ljmp
push
sbb
add
pop
and
in
xor
mov
fwait
add
cmpb
add
aas
jp
iret
or
dec
or
and
cmpsb
inc
dec
clc
push
mov
mov
test
divl
movsl
sbb
imul
movsl
push
jae
aas
jmp
jbe
push
clc
xlat
dec
jl
lods
push
lea
sub
cmp
xlat
test
mov
inc
mov
popf
mov
cltd
lds
cld
dec
loope
js
aam
leave
popf
jecxz
dec
sub
xchg
mov
fs
push
lret
test
fisttpl
adc
mov
into
or
rol
mov
pop
aaa
fcompl
sub
test
xchg
test
pmulhuw
addr16
leave
xchg
inc
sbb
cmp
add
mov
pop
pop
add
xchg
mov
jb
jl
loope
jecxz
pop
lds
jmp
mov
sub
push
pop
aam
movsb
add
out
in
add
mov
push
cs
sub
cwtl
imul
fnstsw
mov
lds
add
es
pusha
into
cmp
out
mull
sub
daa
ljmp
jnp,pt
addr16
mov
or
mov
pop
jecxz
jo
pop
vphadddq
mov
xor
push
push
sbb
cmpsb
mov
fldenv
sbb
int
mov
sbb
and
fdivl
mov
mov
mov
sarl
stos
fcompl
mov
rorb
xor
xlat
jns
inc
push
xchg
fcompl
movsl
xchg
rcrl
xchg
dec
loop
mov
jae
in
or
pop
aas
stos
or
out
fwait
xchg
cmc
push
ficoms
mov
sub
test
or
dec
lock
push
movsb
imul
lods
pop
sub
jg
test
outsb
sbb
negl
sub
mov
inc
ror
fwait
mov
les
sbb
push
dec
dec
adc
xlat
ret
shlb
pop
in
mov
imul
add
mov
out
cmc
repz
data16
mov
mov
pop
pop
test
adc
daa
leave
push
pushf
mov
push
popa
arpl
loope
and
out
aaa
jns
mov
fnop
arpl
shl
shlb
repnz
shll
imul
push
daa
lds
cltd
xor
loopne
fildll
mull
cmp
enter
test
je
outsb
ss
and
xchg
sbb
inc
push
mov
pop
aaa
mov
mov
xor
jecxz
jae
dec
pop
jns
mov
rcl
or
fidivl
fsubrl
cs
mov
sahf
ret
mov
xchg
outsl
inc
stos
adc
loope
loope
sub
ret
cltd
push
jo
rcl
jmp
pop
pshufw
or
std
cmp
or
rcll
das
mov
leave
imul
add
xor
mov
das
mov
mov
lock
xor
divb
in
pop
test
enter
je
sbb
mov
dec
cmpsb
push
fnstsw
movsb
cmp
insb
sub
and
cli
jae
fnstsw
out
cmp
xlat
ret
cmp
xor
notl
addr16
jmp
mov
fstpt
mov
xchg
aam
jge
js
lcall
stos
jnp
push
testb
add
jl
arpl
enter
test
jo
orl
dec
nop
out
jae
ds
mov
call
out
pop
jp
sub
fmul
lock
ss
adc
xchg
popl
xorb
sub
clc
inc
xchg
sbb
movsb
in
push
outsb
or
dec
inc
pop
rcrb
pusha
lret
pop
push
cltd
pop
fistl
pop
and
shrl
ja
dec
ret
mov
sbb
pop
cmp
xchg
mov
jecxz
pop
jmp
dec
jg
mov
aam
arpl
sub
idivl
jp
inc
sahf
call
jo
rclb
xchg
in
xlat
add
stc
jne
inc
dec
je
adc
xchg
hlt
shll
mov
pop
shrb
sub
xlat
sub
ss
jle
in
xchg
gs
or
and
xchg
pop
add
test
ja
mov
push
inc
ficompl
jno
inc
adc
jle
inc
ret
or
mov
test
mov
stos
into
cmp
lret
ret
std
shlb
jne
mov
mov
test
std
mov
add
movsb
sbb
pushf
mov
inc
xor
xchg
movsl
pusha
in
mov
adc
mov
sub
xlat
push
mov
sbb
loope
or
push
test
inc
ds
push
push
in
xor
or
aam
movsb
and
fistpl
iret
notl
mov
jge
inc
sub
lds
and
mov
mov
test
cmpsl
cmp
sti
aas
pusha
leave
add
inc
mov
test
jg
dec
imul
test
and
cmp
jns
repnz
int
lock
adc
push
xchg
push
test
out
cmova
cwtl
or
rcl
and
repz
popa
mov
das
mov
xchg
ja
jp,pn
pop
or
sahf
loopne
fnstsw
dec
lret
sub
mov
mov
mov
pop
or
repz
fstl
and
ja
es
inc
dec
popa
cld
push
out
enter
sub
cmp
les
aad
mov
dec
xor
push
jmp
add
lods
rolb
xlat
mov
ljmp
adcb
xor
adc
into
dec
popa
or
push
das
add
popl
test
cmpb
push
lock
xchg
and
sub
sbb
mov
push
dec
xchg
rcr
bound
rorl
daa
ficompl
repz
sti
push
fidivs
daa
add
in
std
sti
or
adc
mov
jmp
out
mov
adc
scas
dec
lahf
mov
sti
xchg
adc
gs
fwait
std
and
dec
rol
test
add
fcompl
dec
push
daa
sub
out
popf
mov
aad
cltd
call
mov
mov
aam
adc
fildl
mov
mov
adc
adc
mov
aam
int3
loope
push
std
push
ret
test
ljmp
pop
jg
ret
add
addb
jns
and
cmc
inc
jmp
mov
ds
enter
insb
fs
addb
xchg
xor
ljmp
fldl
jecxz
dec
mov
xchg
push
push
mov
bound
out
mov
fldenv
xchg
jb
addr16
mov
dec
faddl
mov
shll
das
push
pusha
push
sbb
movsb
mov
adc
std
adc
ss
popa
add
xor
sub
scas
inc
loopne
and
adc
push
sub
es
je
cli
adc
stos
rorb
mov
std
adc
pop
cmpsb
out
jmp
mov
iret
call
repnz
aad
mov
mov
cmpsl
int3
rcll
mov
fucomip
test
adc
ds
sub
je
subb
test
mov
gs
cmp
clc
push
mov
xchg
pop
loop
addl
outsb
dec
dec
loop
sbb
xor
sbbb
sub
adc
pop
mov
cld
mov
je
inc
pusha
imul
ficoml
sbb
add
ret
out
lods
pop
mov
popa
fcmovnu
fnstenv
adc
or
dec
jp
addr16
orb
push
sti
adc
lods
test
cli
or
out
scas
cmpsl
fnsave
xor
cmp
or
push
mov
and
dec
lcall
arpl
enter
mov
repz
jns
pop
pop
addr16
mov
std
sbb
mov
pop
mov
rcrb
sub
pop
xor
adc
jbe
mov
mov
jmp
and
sub
jne
adc
in
cmp
movsl
or
popa
jmp
xor
mov
inc
pop
pop
repz
movsb
subb
rcll
dec
xchg
inc
add
mov
sbb
out
mov
sbb
sbb
mov
pop
out
hlt
xchg
pushf
pop
add
sbb
jl
and
push
dec
push
add
sub
rclb
push
push
gs
xchg
cwtl
xor
lcall
mov
push
scas
mov
gs
xor
nop
xor
les
pop
out
daa
xchg
decb
jecxz
or
sahf
repz
cmpsb
stos
cmpsl
pcmpgtw
dec
xchg
fnstcw
loopne
mov
push
and
xor
imul
jmp
das
jo
xor
xchg
bnd
mov
iret
fwait
mov
cli
mov
lock
cmc
push
arpl
jne
and
pop
dec
arpl
das
filds
xchg
cmp
stos
jecxz
inc
repnz
mov
movsb
mov
int3
jmp
jo
add
aam
mov
in
rcll
sti
gs
mov
push
pop
sti
iret
outsl
sbb
xor
xor
cmpb
dec
adc
add
leave
mov
and
pusha
dec
mov
xabort
xchg
fstps
ja
imul
cmpl
out
sbb
fwait
jle
int
leave
repnz
and
xchg
push
push
stos
xchg
mov
sahf
and
cs
inc
andl
lds
sub
cmp
imul
sbbb
xchg
test
sbbb
frstor
fisttps
out
sbb
sub
or
stos
push
mov
sti
adc
sbb
jae
stc
jne
rolb
mov
pop
in
pop
xchg
addr16
scas
dec
clc
push
inc
mov
out
mov
or
insb
add
xor
out
lret
ds
ret
or
ds
fwait
dec
loopne
inc
test
xor
mov
jge
or
add
out
nop
test
cwtl
dec
es
and
pop
jb
in
gs
insl
shrl
cmp
mov
and
and
orl
adc
out
fbld
imul
push
insl
clc
push
loopne
scas
jne
mov
loope,pt
jge
icebp
addr16
dec
call
sub
cltd
test
fstps
ds
lods
ljmp
jle
mov
mov
dec
outsb
add
out
add
pop
fnstenv
pop
shl
loope
rcr
aaa
out
pop
sarb
dec
fcoml
aad
outsl
inc
lret
mov
sbb
jno
lds
fcoms
mov
push
push
mov
insb
push
mov
and
inc
mov
iret
inc
inc
lods
pusha
sub
push
pop
cmc
daa
sub
sarb
jns
jnp
stos
dec
psrld
pop
add
dec
inc
push
movsl
and
fisubrl
fadds
pop
inc
push
jne
adc
or
stos
adc
push
dec
aas
mov
inc
iret
sbb
pop
leave
add
lods
jnp,pn
mov
stos
cmp
jge
outsl
or
sub
test
mov
sub
fstp
mov
aas
xor
es
pop
and
ds
lahf
gs
sbb
cmpl
push
push
hlt
fcmovnu
mov
mov
add
sbb
js
bound
out
ja
cmp
das
loopne
in
mov
negl
notl
jno
mov
add
inc
data16
mov
or
inc
sbb
cltd
lahf
sahf
and
pop
jl
ja
inc
lcall
nop
pusha
lods
rolb
sti
cmp
lds
xorl
adc
fstpt
dec
push
int
xchg
mov
cld
and
bound
mov
cmp
aas
and
test
lret
push
adc
sub
in
or
fisttps
aas
jo
stos
sbb
jns
icebp
jg
insl
push
and
lret
call
pop
jb
adcl
dec
out
addr16
call
ds
push
repz
fsubl
sub
dec
push
push
xlat
lods
imul
sub
outsl
and
xorb
in
sbb
into
or
lahf
enter
aam
rcrl
test
xor
xchg
sbb
add
pop
dec
jno
ljmp
int3
insl
dec
push
add
movsl
jl
insl
nop
pop
mov
jae
daa
jge
xchg
das
push
les
loop
xor
jbe
cmpsl
addb
sbbb
test
movsl
cmp
dec
pop
pushf
das
push
hlt
pushf
xor
rclb
fadds
xchg
subb
je
push
mov
movsl
inc
cld
cwtl
push
jl
ret
and
sub
cmpsl
fisubl
addr16
pop
andl
pop
adc
aad
notb
inc
sbb
test
in
jno
xchg
sbb
or
xchg
sbb
xor
imul
push
pop
icebp
insb
jmp
inc
mov
inc
adc
ja
into
test
mov
mov
sub
push
push
xorb
jmp
sub
lcall
add
ds
sbb
fildl
push
call
shrl
int3
xor
fnstenv
es
mov
repz
mov
mov
repnz
ss
adc
jg
rorb
aad
pushf
pop
xchg
pop
nop
fisubrs
mov
cltd
mov
repz
mov
aad
push
scas
mov
dec
add
es
cld
and
xchg
sbb
hlt
cld
xchg
in
sbb
pop
sbb
jb
rorb
mov
inc
mov
jno
stc
xor
sub
jle
dec
mov
ret
pusha
sbb
dec
aam
mov
mov
and
rcrl
shlb
mov
add
and
fdivl
enter
inc
push
or
test
sbbb
xor
inc
cmp
mull
cmp
in
sbb
cmp
mov
mov
mov
adc
fs
imul
pop
sub
sti
mov
pusha
mov
in
std
lds
lds
test
roll
push
inc
lcall
mov
or
insl
stos
or
push
adc
sbb
int
lret
or
push
inc
mov
cmp
mov
sub
xchg
fwait
mov
push
pop
xorl
loopne
or
testl
es
movsl
imul
cs
cmp
xor
call
mov
sbb
js
and
sub
lock
jl
ljmp
clc
cmp
insl
daa
sub
sbb
dec
push
lds
sbb
xchg
mov
in
in
push
or
shll
fwait
sbb
add
mov
sub
or
mov
rcrl
and
jne
ds
mov
mov
sub
stos
mov
bound
lea
test
jg
loopne
mov
dec
adc
xor
orb
xor
gs
mov
cmp
dec
push
lock
adc
movsl
test
inc
add
movsl
aas
xchg
or
sbb
in
in
push
pop
and
out
lcall
in
sub
js
push
pop
popf
mov
into
je
mov
mov
das
mov
mov
lock
nop
push
lret
test
and
inc
cmpl
mov
and
mov
movsl
pushf
js
cld
jne
xchg
gs
lcall
popa
negl
xor
add
mov
pop
orl
fdivr
loop
xor
xor
or
mov
fisttps
rorl
stos
push
push
mov
lret
icebp
cltd
xchg
push
dec
push
lahf
inc
fcoml
pop
cmp
cmc
inc
inc
addr16
jb
lock
mov
ja
fiadds
nop
or
cli
ja
cmp
aas
shrb
fwait
lret
int3
loope
xchg
and
test
pop
sbb
inc
stos
scas
cli
inc
sti
pop
fucompp
stos
jp
push
gs
pushf
mov
mov
lock
test
dec
nop
scas
dec
jle
sbb
inc
iret
and
xor
enter
std
sarb
bound
mov
xor
or
jge
xor
sbb
imul
lahf
push
mov
push
inc
loope
and
add
sbb
outsb
xchg
cmp
adc
jl
inc
xor
pop
cmpl
push
sub
push
fdiv
push
adc
je
lcall
lret
int3
movsb
aam
leave
xor
push
adc
jo
faddl
sub
fbld
xor
sbb
ret
adc
loop
popl
push
test
lds
pop
adc
sub
inc
push
sub
addr16
icebp
xchg
dec
rolb
xor
and
std
stc
movsl
out
xchg
sub
rclb
pop
add
xlat
mov
pusha
enter
outsb
sbb
lea
mov
in
mov
and
push
ds
idivb
pop
cmpsl
aaa
and
push
add
clc
mov
daa
pusha
xchg
or
int
pop
mov
icebp
dec
mov
mov
fcomp
inc
into
mov
pop
aaa
gs
push
rclb
pop
mov
jle
push
mov
pop
pop
cmp
push
and
inc
cmpsl
xchg
adc
pop
pop
dec
mov
push
nop
xor
sbb
cmp
mov
push
sub
add
push
fisttpll
inc
andb
dec
sub
jne
push
fs
insb
sub
cmp
lcall
mov
xchg
cmp
lahf
fidivs
pop
ljmp
jecxz
mov
shrb
out
mov
sti
mov
or
sbb
sbb
and
fidivrl
jmp
add
je
nop
ret
mov
fstl
pop
mov
fwait
aad
arpl
xor
pop
add
test
das
bound
inc
jae
pop
jecxz
push
test
ss
js
and
sbb
cmc
das
and
pop
jnp
ret
adc
fnstcw
xor
adc
add
mov
repz
pop
jle
insb
mov
mov
lods
fs
push
mov
lret
in
sbb
jecxz
cs
add
mov
pop
sbb
sbbl
enter
orl
xor
cwtl
call
lcall
aam
mov
push
lcallw
mov
or
xor
push
cmp
jl
push
enter
dec
inc
sub
jg
sub
stc
gs
out
repz
out
faddl
rorb
xchg
fldl
imul
or
or
xor
push
lock
sar
movsl
enter
pop
inc
pushf
jae
lea
movsb
shl
aad
lods
roll
cli
sub
insb
inc
fcompl
loop
test
out
adc
push
xchg
mov
insb
sbbl
into
dec
or
loopne
movsl
clts
adc
xchg
push
ret
daa
inc
fwait
rcll
xchg
rclb
jg
cmpl
cmp
cmp
xchg
stos
xchg
adc
iret
mov
cmp
pop
in
and
dec
ds
fildl
xor
shl
call
jnp
adc
fnstenv
jecxz
aaa
xlat
push
mov
sbb
fwait
mov
jae
sbb
inc
xchg
and
inc
pop
cmp
xor
mov
popf
push
adcl
mov
dec
cmc
pop
imul
adc
sbb
shll
mov
pop
jnp
sub
or
mov
fxch
push
mov
jle
jecxz
inc
jge
or
call
aas
dec
in
fstpt
adc
andl
sub
mov
cmp
outsl
xchg
inc
sub
and
mov
divl
aaa
call
pop
mov
icebp
movl
mov
mov
sbb
movsl
inc
sub
movsb
addl
in
jne
push
and
in
cmp
adc
push
pop
fld
aaa
jne
test
ss
xlat
mov
or
mov
fidivs
mov
iret
lret
dec
rolb
xor
jp
mov
push
push
test
mov
xchg
mov
mov
push
in
imul
ja
adc
xlat
mov
adc
call
push
js
jno
push
test
inc
push
xchg
rolb
xlat
push
imul
jb
leave
dec
jno
pushl
imul
jnp
es
xor
into
jnp
add
addr16
mov
mov
insb
fdivrs
mov
aam
shlb
ljmp
cmp
test
addr16
loope
mov
in
mov
scas
out
sub
out
mul
mov
sub
leave
out
sub
jno
in
xrelease
lret
pushf
pop
test
adc
in
pop
and
adc
daa
orb
cmp
rcl
lahf
ljmp
inc
aas
je
mov
jmp
andl
stos
shr
push
or
mov
push
or
mov
addl
xor
andl
xor
or
inc
mov
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
orl
push
add
mov
add
movl
cmp
movl
je
mov
sbb
mov
xor
xorl
xor
add
movl
add
adc
incl
xor
orl
mov
push
xor
adcl
xor
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
addl
movl
mov
movsbl
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
neg
sub
mov
xor
movl
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
orl
movl
mov
or
push
movl
adc
mov
xorl
push
xorl
mov
andl
xor
notl
push
mov
add
xorl
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
test
je
and
mov
andl
xor
add
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
mov
or
mov
orl
mov
adc
xor
xor
or
xor
add
mov
addl
mov
xor
add
and
xor
andl
xor
add
inc
mov
cmpl
jg
jmp
push
pushl
push
pushl
call
cmpl
jb
add
movzwl
sbb
mov
mov
mov
and
xor
add
addl
mov
sub
mov
subl
xor
sub
add
adcl
mov
xorl
sub
lea
xor
adcl
xor
movl
cmp
movl
je
andl
xor
or
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
subl
add
cmp
jne
adcl
pushl
adcl
call
mov
sub
mov
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
orl
xor
add
cmp
je
pushl
andl
pushl
xorl
call
sbbl
mov
or
mov
mov
or
mov
subl
xor
add
movl
cmp
je
movl
cmpl
je
cmpl
jb
jmp
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
sub
mov
adc
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
mov
or
mov
xorl
add
sbbl
mov
mov
mov
xor
mov
add
xor
add
xor
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
or
push
add
push
xor
mov
mov
orl
mov
or
mov
andl
add
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
mov
mov
sub
sub
mov
mov
mov
sub
xor
mov
sub
movzwl
and
mov
mov
xorl
sbbl
mov
movl
cmpl
je
cmpl
jge
jmp
call
xor
xor
dec
mov
jmp
mov
movzbl
xor
sub
mov
sub
orl
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
sub
or
mov
orl
sbb
mov
addl
mov
or
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
jmp
push
out
push
jae
jae
das
push
sbb
popf
rcrl
jl
pop
jl
adc
inc
idivb
aas
jne
push
stc
cmc
pop
daa
pop
fs
add
hlt
jmp
pushf
std
dec
pop
dec
scas
ret
sbb
mov
mov
hlt
ficoml
loop
cmpsb
xchg
ja
shll
test
mov
dec
sub
jge
push
xchg
movsl
das
lcall
lock
lret
lcallw
movsb
mov
nop
mov
jmp
dec
stos
mov
jae
int
fwait
cmc
adc
xchg
fsubrp
ds
js
movsl
jge
lea
test
fdiv
dec
out
and
std
mov
pop
mov
mov
jl
dec
inc
lahf
or
mov
out
and
into
pop
call
mov
adc
xor
sahf
ds
dec
xchg
addr16
fistpl
filds
iret
das
adc
dec
cmp
mov
das
jle
les
arpl
jb
pop
sahf
cmp
leave
inc
lret
test
jbe
mov
xlat
xlat
jecxz
adc
cwtl
lock
push
push
ret
in
fstps
or
fldt
sub
imul
cli
movsb
sub
addr16
ud0
sahf
hlt
sahf
mov
xchg
sbb
dec
out
push
clc
push
sub
sbb
mov
inc
push
dec
cmpxchg
data16
cmp
or
and
or
aaa
pop
inc
mov
mov
pop
in
mov
xchg
lods
inc
push
fists
adc
jmp
mov
lahf
inc
orb
xorb
js
push
loope,pt
movaps
mov
hlt
add
cmpsl
mov
mov
push
mov
pushf
adc
pop
test
hlt
mov
mov
stc
mov
jnp
loope
insl
loope
cltd
lods
xlat
imul
scas
pop
aas
add
jae
mov
clc
sbb
jg
adc
stc
or
mov
mov
shl
negl
lods
xchg
les
ret
les
ror
cli
push
mov
pop
ljmp
fsubrp
mov
fsubrl
mov
or
sbb
xorb
adc
sbb
fcoms
ljmp
inc
imul
cld
pop
stos
add
pop
sti
loop
xchg
mov
fwait
lods
repnz
fmul
int
push
test
push
cmp
rcrb
cmp
xchg
sub
test
pop
pop
pop
fdivl
cwtl
lahf
dec
jb
or
ljmp
leave
push
bound
pop
sahf
addr16
sub
mov
inc
push
ja
insb
insb
and
cmpsl
stc
int3
push
push
loop
lds
push
in
sub
xlat
add
mov
shlb
xlat
or
lods
cmp
jecxz
test
das
lret
and
add
fbstp
mov
inc
sarl
ja
sbb
das
add
mov
pop
and
sbb
cmp
cmp
pop
in
mov
rcll
add
movsb
cli
dec
cmpsb
and
inc
lods
xchg
sbb
jb
int
jmp
and
aad
repnz
dec
inc
pop
inc
or
in
adc
movsb
enter
sub
pusha
loopne
inc
mov
cmp
jbe
pop
xchg
movsl
mov
aas
shll
call
adc
push
add
push
mov
hlt
in
test
cmpsb
ret
xchg
jl
mov
cmp
aad
sbb
das
fistpl
jecxz
cmp
aad
xor
jle
jecxz
repnz
hlt
pop
push
fsubrs
pop
bound
out
lret
xor
adc
jmp
push
xor
xor
mov
popf
icebp
pop
xchg
lds
das
pop
sub
fwait
mov
fs
add
popf
decl
add
iret
jmp
mov
xchg
fidivl
ss
test
mov
insb
lcall
inc
mov
ret
jne
rorl
push
into
cmp
add
mov
dec
push
es
jo
xchg
std
js
fistps
inc
jl
rcl
add
lods
mov
mov
add
imul
mov
jb
shrl
jmp
pop
xchg
in
inc
ss
loop
subb
test
sub
inc
jae
adc
inc
fisubs
ret
and
call
subl
aaa
fwait
ret
xor
jnp
push
dec
pop
scas
fs
mov
popf
push
ret
lahf
mov
rcrb
mov
cmp
imul
add
inc
cmc
cmpsb
inc
push
cmp
fcomi
jbe
loope
jb
add
mov
fs
cld
push
mov
mov
mov
and
ja
xchg
ret
insl
ss
jl
outsb
and
mov
and
lret
testb
jg
hlt
and
rorb
stc
push
aad
xchg
or
dec
inc
cmovle
lods
and
add
mov
icebp
inc
es
inc
gs
push
stos
push
xchg
push
and
xchg
rorl
jno
xchg
pop
into
xchg
inc
pop
mov
idivl
call
dec
clc
je
jp
xor
dec
mov
xchg
and
stos
jae
es
xor
dec
pop
leave
leave
test
shrb
or
popa
mov
std
mov
in
sti
mov
inc
cld
stos
sbb
data16
or
push
xlat
jp
pop
roll
outsb
popa
mov
mov
dec
sub
pop
mov
subl
or
std
inc
jg
push
enter
cmp
movsb
repz
call
push
es
sub
cs
add
movsb
out
dec
jmp
lods
nop
xchg
add
ljmp
push
inc
xorb
xchg
mov
jmp
imul
xlat
add
push
js
cmp
cmc
test
push
push
dec
movsl
outsl
pop
out
subb
dec
mov
fwait
push
cmp
jg
mov
test
sbb
mov
test
aad
fbld
sbb
outsb
mov
int3
sbb
sti
test
cmp
push
jns
imul
fdivrs
fiadds
pop
fisubl
outsb
lret
fcoms
jno
lahf
dec
leave
xlat
mov
imul
push
nop
lea
xor
cmp
jge
pop
jbe
sub
adc
pop
subl
jmp
sbb
pop
in
fwait
lea
test
out
mov
aam
outsl
aaa
ds
in
outsl
in
cmp
inc
pop
and
sbb
xor
adc
jbe
mov
loopne
sahf
shll
push
dec
adc
pop
loopne
mov
pop
out
add
mov
sbb
and
mov
and
mov
pop
out
mov
xchg
jno
dec
push
out
push
shlb
fldt
orb
and
cs
add
loop
sbb
aaa
lret
adc
or
rclb
sahf
cmpsb
jl
sbb
adc
out
ret
xor
insl
mov
int
push
scas
mov
lret
and
rorb
or
out
mov
push
mov
adc
mov
jge
cmpsb
adc
into
push
fwait
jne
inc
popf
dec
nop
jg
test
or
pop
jno
mov
sahf
mov
loopne
movsb
ficoms
mov
mov
or
test
adc
popf
mov
fidivrl
repz
pop
pop
cmp
addl
cmp
clc
xchg
push
mov
sub
xchg
loopne
movsb
and
dec
inc
imul
stc
cmp
dec
mov
mov
mov
inc
push
stos
mov
or
dec
and
fst
mull
nop
rol
pop
out
scas
jae
xchg
inc
adc
fidivl
pop
jecxz
xchg
aam
fcomps
pop
push
lret
shl
outsb
pop
repz
shlb
and
sti
dec
or
push
mov
outsb
add
mov
sbb
push
lret
lods
pop
lock
scas
hlt
cltd
add
roll
shl
movsb
adc
jmp
fidivl
mov
pop
out
popa
daa
mov
fstps
fs
in
jb
aad
mov
loopne
mov
addr16
or
cmp
mov
push
ss
inc
inc
mov
jmp
adc
test
cmpsl
cmp
nop
in
pop
inc
je
push
lret
jle
and
and
sbb
mov
fisubs
cmp
cmpl
sub
or
cmp
test
xorb
xchg
xor
push
xchg
divb
mov
in
leave
roll
inc
cmc
nop
cli
pop
sub
in
xchg
push
rorb
or
out
insb
xchg
mov
mov
mov
sbb
inc
in
mov
mov
popa
dec
leave
inc
leave
andb
and
movb
fists
lret
xchg
mov
adc
cltd
fisubl
scas
dec
xchg
and
clc
sar
es
fwait
pushl
add
inc
push
test
out
cli
test
jno
dec
test
pop
ds
pop
mov
adc
sbb
test
out
add
lods
jns
xor
add
ret
jle
subl
shrb
jle
test
mov
sbb
ljmp
ja
bound
adc
mov
adc
and
bound
in
cs
test
inc
pop
stos
shll
lods
xchg
imul
fwait
push
into
outsb
push
ja
test
dec
out
mov
fcoms
into
test
dec
fwait
dec
fiadds
std
mov
xchg
lret
sbb
cs
jp
sub
mov
mov
mov
or
push
mov
adc
cmp
cmp
cmpsb
xorb
fs
mov
mov
dec
push
fwait
in
pop
ficoms
inc
xchg
and
nop
cli
rcrl
add
ja
push
bound
inc
repz
lods
int3
outsb
dec
sahf
clc
pop
lcall
lcall
insb
daa
into
pusha
rorb
movsl
mov
mov
inc
mov
jae
cmp
mov
and
repz
addr16
mov
cmp
sbb
sub
ret
ljmp
aam
push
mov
push
repz
mov
iret
clc
dec
js
xchg
mov
and
out
jbe
pop
dec
mov
adc
mov
aam
adc
cmp
lods
add
add
dec
push
fwait
cmpb
xchg
sahf
dec
out
push
and
mov
mov
mov
xlat
loopne
int
int3
mov
xor
push
add
xor
stos
push
push
ds
xchg
add
cmp
mov
sub
jmp
jmp
jo
adc
adc
decb
repz
jmp
je
adc
in
pop
lock
cmp
mov
cmp
pop
jb
sub
movsl
mov
push
daa
jns
adc
xor
or
xchg
sub
es
jnp
cmpsl
sbb
pop
dec
lcall
and
dec
adc
inc
mov
pop
adc
cmp
mov
cmp
icebp
lock
in
jle
sbb
mov
jmp
push
bound
jl
mov
cmc
aad
mov
push
or
sahf
xchg
shlb
jmp
jmp
xor
lods
inc
mov
lahf
jg
or
cmp
inc
and
mov
js
cli
mov
add
out
adc
dec
jnp
xor
mov
inc
int3
lods
xchg
sbbl
jb
jne
mov
das
fisttpl
out
xor
xor
xor
inc
push
in
inc
jecxz
inc
jl
xchg
jnp
hlt
cmpsl
sahf
rolb
push
cmp
mov
lahf
dec
adc
out
lea
cs
jp
mov
pop
or
out
pop
xor
push
pop
xchg
xchg
mov
xlat
push
or
stc
test
cmp
push
mov
xor
imul
xchg
xchg
cmp
adc
adc
fbld
cld
aaa
push
mov
imul
push
cmpsb
ffreep
dec
xlat
mov
add
fs
aad
and
in
pop
negb
fstpt
sbb
jmp
xor
jmp
pop
std
fnstcw
out
pusha
xchg
lcall
add
popl
xorl
lds
fstps
push
and
ficoms
test
stos
pop
xchg
push
movzwl
mov
cmc
and
cmc
dec
loope
mov
jb
mov
jmp
dec
adc
add
jmp
les
jno
sub
mov
jle
das
inc
dec
fmull
mov
cli
lret
cmp
lret
xchg
sbb
movsb
aas
repz
loopne
stc
pop
in
add
stc
iret
es
mov
imul
aam
daa
mov
mov
popf
cmp
dec
call
pop
adc
lods
aam
cmpsl
sub
dec
add
in
das
xor
or
xchg
and
sub
jecxz
mov
sub
or
or
xorb
mov
xor
lret
enter
add
lock
pop
sbb
in
mov
jb
cli
mov
in
or
push
icebp
pop
cmp
mov
aam
in
or
test
pop
pop
popa
and
sub
loopne
mov
sti
mov
push
inc
inc
adc
or
insb
std
cltd
inc
mov
stos
cmp
nop
cmc
xor
sub
bound
push
push
aad
push
push
outsb
adc
mov
pop
add
xchg
pop
add
or
mov
jle
pop
jb
pop
lea
mov
int3
ret
in
pop
pusha
and
jnp
ret
int3
addl
mov
icebp
sub
push
stc
test
daa
xchg
mov
jb
dec
hlt
icebp
stc
add
cwtl
cmpb
xchg
into
sub
lods
push
sub
je
sub
xchg
or
imul
inc
fwait
stos
std
mov
xor
ret
cmp
or
fwait
xor
rolb
imul
leave
pop
loop
scas
adc
mov
nop
loop
fimull
mov
test
add
or
shlb
add
std
xor
dec
sbb
and
xchg
gs
sbb
leave
jne
jle
mov
rcl
pop
cwtl
repz
jo
xchg
rorb
inc
mov
lahf
xor
test
pop
jbe
push
es
fcmovbe
mov
lock
je
xchg
shlb
ja
cmpsl
dec
xorl
push
xchg
pop
add
imul
inc
cld
mov
dec
imull
ljmp
ss
insw
inc
mov
faddl
adc
fcoml
std
cs
leave
lds
and
adc
sbb
dec
out
pop
pop
shlb
sub
cs
test
dec
shlb
call
arpl
leave
scas
mov
xor
out
sbbl
hlt
jl
add
add
push
dec
dec
xchg
jle
imul
xchg
movsb
out
ficoml
or
ret
stos
clc
in
aaa
mov
lods
and
push
adc
fs
loope
scas
pusha
sti
in
pop
data16
inc
dec
ja
add
pushf
out
ret
cmp
sub
rolb
das
inc
daa
sarb
push
jns
les
mov
xchg
mov
mov
enter
push
sar
daa
mov
shrb
adcb
mov
pop
mov
xor
mov
test
jl
jl
sub
push
xchg
push
jle
out
stc
add
scas
xchg
int
out
add
pop
loope
xchg
xchg
adc
cwtl
mov
in
lret
dec
push
push
out
push
cmp
cwtl
rolb
push
sub
sbb
cmpsl
jl
dec
mov
pushf
arpl
out
mov
or
xor
pop
push
int3
cmp
mov
movsl
dec
pop
xchg
adc
jne
aam
ret
sub
push
imul
push
movhlps
and
icebp
mov
test
mov
pushl
lahf
in
std
shrl
sbb
jno
das
pop
mov
ret
xchg
mov
test
adc
mov
int
out
ss
or
fdivp
and
ret
dec
adcl
push
jg
into
xor
and
rcl
lds
shrl
pop
adc
inc
das
imul
add
fists
scas
push
xchg
or
jb
ss
push
insb
dec
arpl
jle
xor
cmpsb
ret
cmp
dec
out
mov
pop
loop
mov
mov
jp
inc
fadds
push
rol
mov
data16
push
cmp
adc
jnp
pop
pop
sub
in
sub
push
std
xchg
xor
or
xor
xchg
adc
add
in
pop
rolb
roll
inc
jmp
fwait
push
imul
mov
arpl
jp
insl
stos
cmp
jle
mov
add
psllq
sbb
leave
mov
jbe
mov
fsubr
mov
sar
jnp
movsb
cmc
les
ds
pop
aaa
mov
popf
mov
dec
dec
jl
xchg
and
inc
mov
sbb
add
repz
cwtl
sub
add
sub
inc
les
adc
jmp
mov
mov
sbb
xor
movl
push
daa
and
push
pop
sub
sub
orl
jmp
xchg
dec
cmp
out
fcompl
in
sahf
xchg
xchg
ret
pop
push
subb
sbb
outsb
in
pop
mov
push
hlt
popf
ret
push
mov
mov
ret
out
bound
fildl
adc
ljmp
aam
repz
sahf
jmp
dec
jno
xchg
cwtl
push
mov
push
rclb
bound
dec
jne
divb
mov
add
pop
jg
iret
cmp
xchg
or
into
or
jecxz
add
xchg
aaa
xor
mov
arpl
mov
sbb
sti
inc
dec
call
mov
push
push
subl
pusha
jmp
fwait
in
ljmp
or
test
push
enter
sti
pop
es
cmp
push
leave
aas
jl
insl
pushw
push
inc
data16
loop
call
out
repz
fisttpll
mov
inc
cmp
popa
jne
inc
into
stos
dec
cmp
or
jno
movsb
add
jge
push
ss
pop
dec
add
popf
mov
or
scas
jns
adc
push
push
jp
sahf
lret
jnp
aaa
inc
mov
lock
insb
in
xor
push
cli
cmp
arpl
ja
aam
std
movsl
jl
shlb
sbb
cmp
push
jnp
mov
fcom
jae
push
jo
cmpsl
dec
negl
hlt
fadds
mov
test
add
push
pushf
lods
jno
outsl
lods
pushf
lea
aas
push
sbb
fdivp
or
daa
inc
xor
sarl
bound
adc
fistl
ja
jb
jl
mov
dec
pop
adc
adc
roll
xor
sub
mov
add
loopne
and
scas
lahf
mov
xor
out
testb
out
inc
fistps
mov
lret
aaa
cmp
rcr
mov
add
xor
inc
enter
aas
sbb
fwait
mov
test
es
popa
cmp
xchg
cwtl
and
mov
hlt
lcall
sbb
cli
xchg
xchg
out
or
dec
rolb
ss
jbe
xchg
mov
shrb
jmp
dec
comiss
ja
or
pop
dec
bnd
pop
mov
adc
push
xchg
arpl
fisubl
sub
jle
xchg
or
mov
addr16
add
jb
in
push
cmp
out
push
dec
mov
scas
cmp
scas
push
sub
or
sub
add
or
lods
leave
sbb
ss
adc
cmp
shll
dec
repnz
adc
sub
xchg
loop
inc
in
gs
iret
xchg
jae
push
add
xor
or
sahf
idivb
lret
imul
xchg
mov
jp
fmull
sub
adc
in
fldl
leave
fstpt
mov
shll
repnz
push
mov
xchg
xchg
pop
or
lods
or
mov
lock
mov
pop
rcrl
es
push
mov
cs
in
push
xor
mov
pop
jge
dec
pop
pop
in
sbb
dec
cmc
out
cld
int
popf
inc
or
mov
or
call
sbb
mov
jp
mov
or
dec
xchg
mov
lret
sub
nop
shl
repnz
fmull
ljmp
mov
pop
lods
test
inc
sarb
je
and
mov
test
jge
cld
lods
outsb
jmp
mov
inc
mov
out
xor
dec
mov
in
mov
push
jmp
jg
xchg
insb
mov
shll
das
loopne
and
out
xor
pop
test
test
and
leave
mov
push
push
sbb
pop
mov
mov
inc
mov
mov
mov
jne
arpl
xchg
adc
sub
cld
clc
inc
jbe
out
cli
icebp
out
or
add
sub
rol
outsb
sub
dec
stos
rorb
hlt
lret
lret
out
insb
jle
push
aas
xorl
out
jb
pushl
xorl
call
es
jne
test
sti
xchg
dec
inc
jno
sbb
jae
sub
xchg
add
mov
aad
in
xchg
cmp
nop
stos
jno
cmp
dec
cs
popl
mov
dec
lods
lock
ret
das
add
mov
mov
pop
je
add
add
push
push
push
test
icebp
sub
sub
cmp
push
outsl
mov
xor
das
data16
push
mov
int3
adc
sbb
jne
jmp
dec
cli
jle
jmp
dec
dec
dec
inc
jmp
aas
sbb
arpl
aad
rorb
lea
adc
or
pop
jo
dec
mov
out
and
into
mov
and
in
or
push
and
jecxz
out
loope
cmc
mov
insl
sahf
pop
lahf
and
ret
stos
xor
ljmp
mov
push
sbb
add
outsl
std
pop
sahf
sbb
xor
sub
loope
addb
xor
sub
rorl
inc
dec
pop
ret
jp
dec
fnstcw
js
ds
in
pop
inc
sub
pop
mov
mov
lcall
int3
jg
into
icebp
or
pop
sbb
mov
inc
and
xor
lea
outsl
and
sub
mov
icebp
cwtl
pop
mov
adc
push
cltd
loop
and
dec
adc
mov
mov
dec
mov
js
cmp
adc
xlat
pop
inc
mov
push
mov
jbe
inc
fstpt
mov
and
mov
lcall
in
dec
jae
mov
add
in
loope
icebp
mov
or
and
mov
out
cli
into
cmpsb
cwtl
sbb
jae
scas
clc
jns
movsb
int3
cmc
or
add
out
cmpsb
mov
jg
loopne
sbb
pop
rol
movsb
pop
mov
std
ss
pop
movsb
inc
jae
sbb
loopne
in
lods
xchg
fnstcw
movsl
clc
mov
jb
outsb
movsb
jle
aas
pop
loop
mov
push
mov
dec
push
xchg
sub
sub
mov
loopne
xlat
pop
push
fdivr
bound
mov
xchg
push
jnp
int
mov
daa
mov
dec
mov
popl
out
hlt
jmp
imul
and
mov
mov
push
fldl
push
jmp
lret
cmp
adc
out
pushf
push
int
lahf
loop
in
iret
push
xchg
mov
mov
sbb
cmp
icebp
arpl
and
and
jb
cld
sbb
jns
lods
stos
and
fldcw
push
xor
cmp
mov
icebp
mov
or
xchg
arpl
dec
cmp
les
rcr
movsl
into
int
fs
dec
lea
mov
loopne
sbb
arpl
cmp
into
cwtl
shlb
xchg
or
or
inc
imul
fdiv
leave
in
sub
ret
or
cmpb
xor
cmp
fsubrs
push
cmp
cli
scas
addb
push
sbbb
orl
aam
call
imul
or
cli
iret
stc
inc
inc
leave
xchg
or
pop
aaa
mov
iret
jp
mov
push
push
sbb
ds
add
into
mov
leave
mov
scas
push
aas
stc
movsl
jo
xchg
and
repz
mov
movsl
std
pop
lds
and
push
pop
pop
aad
mov
in
sub
sub
xchg
xor
inc
ds
enter
cli
mov
pop
or
dec
mov
xlat
test
mov
push
and
sahf
ficomps
hlt
cmp
outsl
enter
mov
std
adc
leave
pusha
fnstcw
mov
jnp
das
icebp
loopne
adc
cmp
repz
sub
sbbb
es
sub
add
je
pop
mov
mov
cmpsl
mov
enter
and
sub
pop
mov
add
aaa
fstps
lcall
xchg
repz
repz
in
inc
fwait
pop
xor
icebp
fiadds
lock
test
mov
inc
jae
adc
jne
mov
and
aad
push
flds
cmpsl
sbb
xchg
dec
mov
out
inc
out
or
cmpl
pop
pop
sbb
fisubrs
sub
push
inc
cmp
dec
out
xchg
loope
andb
fidivrs
test
outsl
into
jo
cld
mov
mov
in
push
ss
ljmp
movsb
lock
fcoms
mov
je,pt
lea
test
fstpl
fwait
divl
push
cmp
mov
and
int3
mov
cld
leave
loop
fisubs
sub
dec
ss
adc
dec
dec
mov
cmpsb
xor
pushf
mov
jne
dec
enter
pop
ds
jl
xchg
out
cmpsl
repnz
sub
cmp
jb
stc
inc
pop
es
push
xlat
sbb
and
sarl
cmp
mov
mov
and
mov
loop
lods
pop
dec
outsl
jae
xchg
add
shlb
js
fsubrl
mov
idivb
inc
and
push
repz
and
xchg
xor
push
insb
pop
mov
mov
out
jo,pn
lds
fnstenv
push
push
call
mov
adc
clc
or
pop
cltd
ficoml
imul
xor
cmpsb
dec
mov
inc
inc
and
fiaddl
inc
mov
cmpsl
cli
repnz
xchg
das
or
andb
lcall
out
arpl
and
scas
repnz
mov
inc
mov
mov
push
test
pusha
out
shrb
enter
dec
arpl
cld
push
add
jle
fs
sbb
jnp
sahf
bound
jo
clc
aad
mov
pop
pop
xchg
adc
dec
mov
ret
mov
xchg
fldl
loop
paddusb
andb
xorb
xchg
fildl
mov
sbb
shll
cmp
das
cmp
pusha
inc
das
pop
and
and
pop
repnz
idivb
pusha
inc
add
cmovle
sub
sub
push
clc
sti
fs
jnp
js
and
aam
dec
or
ret
jb
orl
or
add
sub
cmp
mov
sub
out
jmp
mov
cmp
sub
jg
fistpl
cltd
je
xor
and
arpl
mov
lods
fs
data16
push
sub
dec
xsha1
cmpsb
into
xlat
sub
jae
mov
xchg
jg
mov
ja
sub
cmc
and
lret
pop
and
xor
mov
push
adc
movsl
loop
leave
popa
dec
adc
add
lret
xchg
rcr
pop
xchg
and
jl
mov
dec
call
adc
xchg
pop
mov
mov
inc
loopne
push
std
shlb
push
push
xor
clc
jnp
sbb
pop
and
gs
sahf
mov
out
push
mov
sti
fnstenv
xor
repz
mov
sub
or
push
and
int3
iret
push
lret
clc
ljmp
push
jmp
xor
jb
or
mov
xlat
mov
nop
push
push
es
sub
or
mov
loop
fstpl
fdivrs
jns
lds
xchg
inc
mov
mov
enter
shlb
xchg
xor
adc
lods
fimull
pop
popf
gs
pop
repz
fs
pusha
add
out
arpl
add
add
stos
push
fidivl
xchg
add
sbb
adc
ficoml
lea
mov
xor
mov
out
je
andl
rcll
cld
and
ja
adcl
test
lret
std
and
push
dec
dec
pop
mov
and
rclb
mov
push
leave
jo
push
sbb
pop
adc
jmp
mov
xor
ljmp
or
adc
sbb
mov
and
add
rcrb
inc
mov
push
push
sub
and
loop
add
and
jns
push
cmp
cmc
mov
sbb
or
clc
shlb
xor
sarb
lods
push
scas
sahf
jecxz
sub
ss
nop
push
lcall
and
mov
jmp
fs
divb
fldcw
sub
add
repz
sub
cmp
adc
decl
out
leave
aaa
cmpsb
icebp
mov
pushf
loopne
inc
inc
push
into
in
push
xchg
sub
or
jb
mov
xchg
loope
sbb
ret
push
test
sbb
fsubrl
pop
inc
or
sbb
push
jl
insl
in
out
sbbb
push
inc
pop
mov
in
in
lea
cltd
arpl
pop
divb
xor
cmpsb
jecxz
add
fcoml
mov
out
scas
jg
mov
sbb
fwait
stos
mov
int
and
gs
outsb
pop
movsb
jo
pop
in
jg
or
rcrl
je
xor
and
repnz
fildll
test
lret
fldenv
lods
mov
mov
push
cmpsb
inc
add
jne
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
adc
mov
adc
push
xor
mov
xor
mov
lea
adc
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xor
add
adcl
mov
subl
mov
sbb
mov
orl
mov
addl
add
push
mov
mov
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
mov
adcl
xor
mov
add
movl
cmp
movl
je
movl
mov
movl
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
cmp
jne
sub
mov
xor
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
add
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
mov
or
mov
adcl
xor
adcl
add
xorl
imul
mov
andl
xor
sbbl
add
movl
cmp
mov
movl
push
movl
je
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
xor
mov
mov
andl
xor
addl
add
xorl
imul
movl
mov
jmp
movl
cmpl
je
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
jmp
lahf
xchg
jle
emms
xchg
ljmp
test
pop
jl
call
fisttps
xchg
clc
aaa
sbb
enter
stc
js
or
add
xor
shl
inc
lods
sarb
push
add
ficompl
les
jnp
inc
fldenv
and
aam
fisttps
insb
push
icebp
mov
rol
xchg
fdivrs
jo
gs
dec
in
sbb
dec
mov
mov
outsb
mov
sahf
movb
jg
popa
lcall
adc
jmp
mov
sub
mov
lea
adc
dec
dec
cmp
adc
negb
out
cmp
jno
lds
inc
pop
je
push
incl
lods
cmpsl
jg
rolb
or
or
lahf
sarl
insl
pop
int3
dec
out
stos
subb
pop
ficompl
dec
sbb
xlat
xchg
pop
sarb
jle
movsl
lret
fcmovu
int
scas
ds
frstor
add
mov
cmp
fisubrl
rcr
push
sbb
out
out
mov
mov
aad
cwtl
lock
lret
add
inc
in
or
inc
imull
lods
dec
pop
ss
test
lock
out
sbbl
mov
push
mov
aam
xor
mov
jecxz
mov
sbb
andl
ret
ret
and
sub
sahf
jge
push
aas
xor
iret
pop
and
aaa
pop
xchg
mov
mov
dec
stos
mov
iret
mov
dec
or
mov
mov
jno
xor
push
sbb
add
into
dec
inc
inc
clc
popl
aam
mov
dec
or
cmp
fs
test
out
out
sbb
sub
pop
cmc
xchg
and
jnp
lds
test
das
nop
fwait
lcall
imul
inc
movsb
cwtl
xlat
sub
in
imul
shll
dec
cmp
xor
jb
std
imul
into
outsl
sub
in
sub
fs
mov
sbb
jge
sti
mov
stc
aas
roll
loope
and
and
sbb
sub
inc
aad
mov
or
fcmovu
cwtl
sarl
stc
and
add
pusha
mov
push
js
mov
loopne
sahf
data16
dec
push
popa
clc
jmp
aaa
into
cmp
int3
adc
sbb
push
daa
push
or
mov
inc
fdivrl
sbb
pop
sub
or
jmp
test
add
scas
test
sub
cli
sub
in
and
mov
add
jno
sub
inc
xor
mov
decl
mov
mov
and
add
push
mov
sub
xorb
pop
mov
or
cmp
ljmp
jbe
mov
jecxz
pop
sbbl
imul
in
dec
mov
pop
xchg
cltd
test
or
pop
fcmovbe
hlt
xor
and
pop
iret
push
bsf
ljmp
mov
je
nop
inc
jl
dec
bound
inc
stos
fucomi
loope
fidivl
jl
pusha
inc
notl
add
test
lahf
lds
pop
pop
inc
out
gs
pop
jle
cmpsb
std
cmp
jne
pop
cmpsl
jnp
cld
arpl
dec
shrb
shl
les
clc
sub
fs
jle
adc
ss
xchg
sub
jl
push
or
outsb
dec
je
inc
mov
mov
mov
adc
xor
jmp
mov
stos
mov
mov
into
xor
xchg
add
mov
jmp
pop
jp
xchg
sbb
xchg
push
dec
repnz
mov
and
dec
js
push
mov
dec
subl
lcall
jl
gs
popa
cmp
inc
add
inc
jb
or
sub
and
call
or
add
aad
out
mov
stos
ficoml
xchg
push
jge
leave
fwait
fwait
sbb
cmp
jns
sahf
or
addr16
lods
mov
sbb
aas
mov
inc
push
or
movsl
outsb
cwtl
test
mov
pop
stos
mov
fcompl
test
js
mov
dec
jmp
add
lock
inc
out
icebp
dec
rcl
orl
sbb
in
int
push
out
xor
xlat
push
sbb
das
test
mov
lcall
mov
dec
xor
push
and
loopne
sbb
scas
out
add
iret
mov
add
dec
push
mov
cmc
bound
inc
or
pop
sub
nop
outsl
sbb
sub
push
aas
push
jnp
decb
pop
decb
lods
pop
fcomps
fsts
cmp
pusha
into
adc
loope
push
xchg
inc
clts
aam
cmp
lods
inc
shll
stos
outsb
jle
pop
mov
dec
negb
loopne
jmp
mov
shrl
xlat
dec
gs
mov
int3
cmp
and
ret
xchg
mov
or
into
xor
cld
or
jne
out
sbb
stc
jge
aas
fcompl
push
jecxz
xchg
out
mov
icebp
mov
jo
lss
sub
test
scas
fidivrs
adc
mov
fiaddl
mov
mov
sbbl
cs
aaa
dec
or
int3
movsl
mov
add
or
das
test
mov
div
add
fmull
ja
or
mov
int3
jae
js,pn
pop
rorl
roll
movsl
cwtl
in
mov
xchg
and
sbb
pop
jp
lods
mov
ds
mov
xchg
fnstenv
mov
xchg
pop
mov
xorl
pop
pop
add
jmp
sbb
jbe
jp
mov
sar
mov
lcall
add
dec
ljmp
leave
and
in
push
push
mov
jp
cmp
test
stos
gs
cmp
iret
cmpsb
cltd
jbe
pop
sbb
xchg
cmp
dec
adc
scas
gs
xor
push
adcl
jbe
mov
rclb
arpl
insb
cmp
mov
or
xchg
lea
scas
jg
sarl
cmp
xor
mov
scas
jp
ss
inc
sbb
shrl
int
int3
sub
dec
gs
test
mov
or
xchg
adc
repnz
lahf
mov
call
cmp
icebp
push
cwtl
xchg
jne
add
xchg
mov
mov
int
mov
adc
aaa
adc
lret
mov
std
pop
test
xor
enter
sub
call
mov
mov
cmp
lret
dec
shlb
mov
mov
hlt
or
pop
add
lods
jns
lods
and
test
inc
and
and
jle
pop
movsb
popa
sub
jle
jae
inc
adc
mov
pop
cmpsb
bnd
sbb
gs
jmp
add
sti
mov
daa
xchg
add
jnp
pop
mov
jmp
mov
push
repz
jns
jbe
jmp
jg
add
mov
aam
mov
push
dec
mov
out
decl
cltd
add
clc
jl
rorl
sbb
rolb
jg
push
arpl
pusha
and
cltd
sbb
mov
scas
adc
dec
xchg
jge
mov
mov
sub
adc
adc
push
stc
stos
cmpsb
adc
pop
jl
jno
pop
xor
bswap
add
mov
mov
xchg
insl
xchg
xchg
adc
xchg
mov
pop
mov
rolb
jne
sub
mov
inc
jle
fimull
push
cwtl
jae
xchg
ds
mov
sbb
xchg
ret
lods
mov
mov
out
and
pop
sbb
push
fs
add
lahf
or
lahf
jns
ja
js
dec
mov
xchg
mov
hlt
xor
xor
adc
xor
fsub
fisubrl
addr16
push
sarl
aas
iret
lret
into
inc
xor
jnp
es
jbe
je
jecxz
mov
loope
loop
mov
pop
imul
rcr
xor
repnz
pop
sub
jg
pop
jl
repz
xlat
in
btc
xchg
xchg
jecxz
das
mov
pop
mov
or
ficompl
jge
insl
sub
push
mov
adc
femms
sbb
xchg
adc
inc
or
jecxz
lea
push
pushf
test
jns
jno
call
inc
movsb
sbb
loop
imul
pusha
test
xchg
xor
pusha
adc
mov
sub
ljmp
and
test
sbb
aam
xor
inc
cli
mov
sahf
int3
mov
inc
test
push
mov
ja
lods
stc
std
sub
push
movsb
pushf
and
out
cmp
icebp
sub
jne
fwait
dec
mov
xchg
jnp
or
push
adc
pop
push
ljmp
xchg
fs
enter
cmpsl
jb
sarl
insb
sbb
cltd
nop
lea
mov
pop
jecxz
repz
pop
mov
scas
outsb
xlat
lods
mov
mov
out
adc
cmp
je
movsb
mov
mov
pusha
in
pusha
and
mov
push
pcmpeqb
mulb
ljmp
loopw
pushf
pushf
mov
inc
inc
ja
xor
daa
ret
shl
fs
cmp
cwtl
jg
mov
insb
push
jecxz
outsb
shlb
cmp
sub
jge
imul
in
shlb
ss
jbe
fst
loopne
mov
and
cwtl
aam
in
xor
test
and
xor
xchg
lret
in
out
pop
div
xlat
xchg
push
in
inc
sub
in
mov
cmp
cltd
test
xor
outsl
sbb
jns
aaa
ljmp
loopne
sbb
in
std
sub
hlt
fimuls
xor
xor
imul
and
xor
xlat
adc
inc
shll
leave
iret
mulb
pushf
adc
inc
add
int
decb
mov
scas
jb
adc
mov
imul
mov
icebp
mov
jmp
sub
leave
xchg
xor
negb
insl
add
loope
mov
lahf
sti
push
dec
hlt
loop
xor
in
dec
push
fs
push
push
cmc
adc
or
jg
sub
mov
js
mov
lret
mov
cmpsb
cltd
sbb
pop
add
mov
xchg
stos
pop
loop
scas
scas
pop
cmp
dec
bound
sbb
in
mov
roll
std
pop
pop
mov
add
imul
clc
push
sbb
lods
loope
dec
push
xchg
lea
push
dec
rorl
xor
cmpl
cmp
push
jl
leave
or
aaa
add
pop
test
lahf
in
push
adc
out
repnz
test
ret
and
lret
or
lret
inc
adc
std
cmp
jecxz
jecxz
mov
or
lea
mov
sub
jge
adc
jle
dec
aam
ficompl
push
push
inc
mov
jmp
mov
xchg
or
xor
pop
sbb
inc
push
mov
aaa
cmp
mov
insb
or
sahf
test
rcl
dec
xchg
adc
add
inc
inc
push
call
xor
repnz
add
movsl
jo
add
loope
pop
mov
lcall
fwait
int
out
push
in
add
lods
cbtw
ljmp
lock
and
aam
cmp
xor
in
test
pushf
pop
pop
daa
enter
lret
dec
in
je
cs
xchg
std
sbb
subl
and
data16
mov
mov
es
lahf
in
pop
pop
cmp
pop
in
stc
inc
mov
mov
jle
mov
dec
push
stos
addr16
lret
insl
jno
xchg
lods
pop
test
mov
push
andb
jbe
xchg
call
lods
jmp
or
leave
and
lret
and
pop
lock
movsb
jno
mov
sahf
ss
jmp
lock
movsl
pop
add
inc
setnp
into
mov
arpl
scas
mov
cmpsl
push
xchg
xorl
outsb
add
fsubrp
or
dec
adc
inc
jg
mov
stos
sub
sbb
aad
mov
mov
shrl
xchg
ljmp
pusha
fadds
arpl
dec
outsl
mov
bound
js
lret
mov
int3
or
jg,pn
shll
xchg
in
fbld
insb
or
push
xor
pop
jns
stos
jecxz
andb
cwtl
or
ds
pop
xor
ljmp
data16
jmp
push
cs
loope
mov
pop
repz
outsl
outsl
pop
push
cmp
jnp
and
and
jno
int3
dec
mov
xor
mov
inc
jmp
lock
sbb
dec
push
mov
rolb
sub
mov
pop
inc
leave
jecxz
xchg
sbb
movsb
mov
xchg
lret
dec
aad
dec
aas
rcrb
cli
pop
xchg
push
int3
add
cmc
adc
ss
fildll
pop
outsl
ds
adc
jmp
test
cld
in
insl
jmp
arpl
push
cmpsl
aam
jbe
std
enter
mov
daa
gs
mov
in
gs
dec
imul
mov
xchg
xchg
xor
stos
adc
xchg
fucom
cmpsb
inc
inc
fnsave
dec
add
adc
rcll
out
mov
insl
mov
xlat
jle
mov
xchg
cmp
lea
in
dec
lahf
and
rcrb
mov
sbb
les
cmpb
movsl
cmp
std
sbb
popf
fdivr
into
pop
imul
jne
push
sbb
jno
jo
pop
jnp
push
mov
xor
fildl
inc
mov
or
add
pop
dec
xlat
or
push
hlt
push
xor
pop
xor
lods
std
ss
int
aam
dec
aad
daa
lcall
jno
aad
les
sub
mov
cli
jno
xchg
sbb
pop
orb
scas
lds
cmp
in
stc
pop
ds
dec
inc
in
aas
mov
loope
adc
pop
jo
ja
pop
aas
sbb
xchg
pop
aad
insb
loopne
hlt
ror
jb
ret
fs
loope
lods
sbbb
fcomi
rcrl
xchg
cs
mov
push
dec
in
sub
cli
sahf
or
mov
adc
call
mov
dec
and
test
lcall
in
pusha
push
push
daa
mov
jge
loop
cmc
andl
mov
fisubrl
pop
dec
fistpl
shll
pop
pop
lret
lea
lcall
dec
fxch
insb
mov
je
dec
sub
add
int
jno
xchg
sbb
jmp
push
lea
or
or
shrb
hlt
stos
fildl
cwtl
lds
push
xchg
out
and
popa
roll
data16
rcrb
std
sbb
aam
or
mov
bound
aas
in
xorb
int
xor
jecxz
mov
dec
icebp
mov
bound
mov
ret
rorl
leave
ficoms
stos
mov
scas
sub
pop
jl
mov
and
xor
inc
in
cmc
pop
sub
jbe
push
es
and
idiv
ret
call
sbb
jmp
ret
fiaddl
ljmp
enter
xor
jmp
adc
push
data16
arpl
stos
mov
mov
xchg
loope
lret
test
xor
jle
and
rclb
pop
add
loop
xchg
xor
cmc
jle
and
daa
sbb
in
fistpl
lret
cmp
in
add
cmc
sub
popa
orl
dec
mov
mov
sbb
sub
xchg
xor
int
xor
outsl
aam
add
mov
mov
cmp
ret
das
push
mov
imul
cmp
rcr
inc
pop
mov
xchg
cmpsl
jo
cltd
mov
inc
test
jo
mov
aas
sbb
mov
rorb
add
xchg
pop
cmp
into
mov
je
dec
xchg
repnz
pusha
ss
insl
mov
add
sub
cmp
cmp
loop
pop
jo
sub
aam
jle
cmp
ja
xchg
inc
xchg
xor
pushf
inc
roll
stos
test
cmp
arpl
lcall
daa
and
addr16
mov
pop
test
pop
mov
data16
lock
xchg
shlb
lcall
cmp
icebp
mov
iret
sbb
lods
jl
ret
xchg
xchg
imul
das
mov
inc
ljmp
lret
fstl
xchg
int
fimull
cmp
dec
movsl
enter
dec
dec
sbb
or
in
popf
xchg
or
pop
mov
std
pop
inc
fcos
in
dec
cmp
imul
ja
add
lsl
fwait
loop
mov
lahf
rorl
aaa
pop
ret
push
pushf
stos
btr
adc
xor
addl
adc
inc
ret
push
ljmp
jno
xchg
add
cs
lret
or
popf
cmp
adc
push
add
xor
loopne
jp
leave
loopne
xor
mov
stos
pop
aad
xchg
scas
mov
xchg
xor
add
lea
sbb
xchg
mov
cmpsl
and
pop
faddl
sub
cmp
dec
lock
cmc
add
pop
test
call
daa
pop
xlat
movsl
nop
push
xor
push
arpl
inc
xor
roll
pop
dec
mov
sbb
mov
mov
cmp
inc
int
xchg
icebp
or
pop
aad
jbe
push
adc
pop
xor
loopne
or
mov
dec
sbb
notb
call
lcall
xchg
adc
sub
adc
popl
ds
sbb
lahf
xor
push
pushf
lret
enter
pop
fidivrs
sahf
cltd
add
add
rcrl
push
jns
mov
xchg
fdivrl
int
sbb
lea
aaa
sbb
insb
sbb
arpl
popf
rorb
aad
rolb
inc
jne
sub
iret
adc
jns
adc
adc
sti
pop
cwtl
aaa
inc
scas
aaa
jo
mov
pop
fscale
sbb
push
call
nop
push
lds
or
pop
lret
or
mov
xchg
ret
loop
push
and
add
push
cli
xor
ficoms
pop
cmp
push
lahf
hlt
or
lret
cltd
fcoms
cmc
nop
lds
adc
jp
scas
movsb
in
xor
mov
cmp
add
push
mov
mov
adc
or
mov
mov
add
dec
xchg
sub
mov
leave
fisttpl
sbb
jae
cli
add
adc
and
sahf
movsb
inc
in
int3
int3
mov
jp
stos
xchg
lret
jno
mov
cmp
stc
push
mov
lcall
shlb
and
scas
add
jne
adc
jo
scas
sub
add
jno
push
push
push
rcrb
cmp
into
and
sbb
push
loopne
adc
push
ljmp
jg
mov
ficompl
mov
mov
scas
mov
lcall
cmpsl
nop
icebp
or
push
mov
ljmp
notb
lahf
enter
sbb
shrb
lods
je
icebp
cwtl
pop
cmp
jg
ljmp
aad
xchg
xchg
push
jmp
sbb
dec
mov
pusha
xor
mov
sbb
outsl
fwait
sub
lcall
pop
xor
dec
pop
ret
dec
cmp
lcall
sti
jp
or
pop
in
fxch
mov
mov
sbb
scas
stos
pop
lods
or
in
jl
xchg
repnz
push
pop
rol
dec
jl
arpl
pop
and
or
jne
pop
dec
shl
jmp
pushf
push
ja
lret
fisubrs
ret
mov
dec
dec
push
mov
insl
out
outsl
sti
call
das
or
mov
jns
add
outsl
mov
pop
out
outsb
xor
dec
jns
sub
push
std
fimull
sub
xchg
fs
pop
cwtl
mov
add
in
push
and
pop
dec
sub
enter
sbb
cmpsl
push
or
mov
incb
push
sub
jo
cmp
icebp
js
mov
dec
push
sbb
in
data16
dec
jecxz
fwait
or
xor
cld
lcall
pop
or
scas
push
repz
std
sub
adc
int
cmp
mov
ret
jbe
sbb
or
int
cmp
cmc
lods
pop
fldt
inc
xchg
jl
xlat
subb
int
xchg
pop
add
gs
and
push
sbb
int
ja
push
and
mov
cmpsb
int
cbtw
cmp
push
daa
add
lret
es
out
and
adc
push
pop
repnz
push
jg
aam
pop
pop
inc
in
into
std
pop
fadd
pusha
xchg
pop
int
sti
lret
jmp
adc
das
push
inc
cmp
mov
dec
pushf
ret
in
in
lods
in
arpl
call
or
pop
xlat
cwtl
mov
lcall
daa
scas
xchg
ret
mov
xchg
inc
ds
aam
enter
adc
sbb
movsl
inc
mov
sbb
lods
pop
in
out
loopne
xlat
or
je
lods
ss
mov
jle
hlt
inc
jmp
cmc
in
data16
test
enter
cmp
test
psraw
mov
sub
mov
sub
cltd
sahf
enter
hlt
imul
mov
test
mov
dec
xchg
sub
add
fnstenv
or
xor
push
mov
cmp
add
push
xchg
cmp
cmp
aaa
pusha
xchg
or
jmp
pop
out
cmpsb
adc
cmc
xchg
mov
fsub
pushf
xorb
loopne
mov
mov
mov
call
not
fwait
lea
mov
js
mov
push
xor
xchg
testl
cmp
mov
adc
push
sub
iret
hlt
mov
rcrb
inc
push
gs
cmp
sub
sbb
push
pop
cmp
addr16
bound
je
loopw
lds
bound
push
xor
pop
movsb
pop
fwait
mov
std
xor
push
xlat
jo
xchg
test
fldcw
fnstenv
in
or
bsf
mov
push
fdivs
xchg
popa
sbb
aas
add
test
jb
pop
adc
push
fimuls
call
xchg
rclb
test
arpl
mov
pop
pop
mov
rcll
xchg
push
cltd
sub
dec
cwtl
loop
sub
fbld
fldl
push
cwtl
mov
cltd
adc
int
icebp
mov
mov
xchg
sarb
gs
sarl
cli
mov
xchg
repnz
jo
fiadds
daa
sbb
mov
sub
popf
outsb
inc
mov
adc
push
lds
lcall
ljmp
insb
out
pop
pushf
aaa
mov
and
add
mov
sbb
push
das
cld
hlt
lret
push
jecxz
scas
adc
aad
addr16
push
sub
add
jmp
ss
dec
sahf
xchg
addr16
jle
sahf
and
push
lea
popf
leave
movb
loop
mov
sbb
mov
fnstenv
adc
adc
push
dec
lcall
xor
dec
push
fnstsw
repz
sarb
sti
adc
xlat
sbb
and
add
lret
cmp
icebp
push
cmp
test
stc
cltd
inc
pop
or
das
decl
push
xchg
mov
or
lahf
fnstenv
in
mov
cmpsl
jb
test
sbb
jne
call
fidivl
pop
sbb
mov
cli
mov
pushf
imul
lret
jge
test
push
idivl
push
aaa
outsl
out
add
mov
bound
mov
inc
pop
std
adc
adc
mov
adc
or
xchg
inc
mov
movsl
pop
jo
push
xchg
jnp
pusha
xor
fistpl
nop
dec
mov
or
mov
repz
pop
jb
icebp
arpl
push
or
lods
and
out
add
movsl
pop
fnsave
jmp
sub
push
jmp
rep
inc
lahf
dec
xchg
out
sahf
js
or
nop
push
jecxz
mov
xlat
orb
push
cli
mulb
pop
push
leave
addr16
mov
xchg
push
push
lds
sub
sti
jmp
ret
sbb
sbb
ret
dec
inc
in
cltd
addr16
shrl
adc
mov
pop
and
mov
cs
repnz
push
mov
jecxz
fstpt
lahf
sbb
jg
push
call
xchg
mov
mov
inc
sbb
dec
jmp
mov
xchg
xchg
clc
fiaddl
sbb
pop
mov
pop
outsl
jo
fdivs
aad
fbstp
or
icebp
push
icebp
aad
in
in
mov
cmp
and
mov
xor
inc
cmp
cmp
je
ja
mov
sbb
mov
rcl
hlt
jbe
dec
jle
xchg
adc
gs
insb
in
pop
mov
subl
popa
inc
ret
adc
roll
arpl
xor
dec
cs
jle
cltd
jae
xchg
add
fwait
negl
lret
lahf
xchg
mov
fldt
or
arpl
lret
xchg
xor
mov
push
mov
mov
jnp
push
push
dec
cmpsl
adc
adc
jg
pop
mov
push
orb
jo
dec
xor
add
repz
pop
fists
sub
int3
aam
fisttpl
call
je
and
cmpxchg
pop
sub
sub
add
mov
lods
shlb
test
mov
test
fstpt
sti
notl
hlt
jl
push
mov
std
jnp
adc
mov
adc
inc
xchg
in
or
dec
dec
inc
lahf
std
das
sahf
pushf
and
sub
cmpsl
cs
nop
inc
mov
adc
pop
push
test
popf
cmp
jle
mov
scas
bound
sub
dec
mov
leave
cmp
dec
dec
scas
stos
xchg
inc
stos
fcmovne
mov
lret
roll
or
mov
push
xor
sbbb
out
xor
rorl
push
jne
ret
cltd
sub
bound
mov
or
jb
ljmp
pop
mov
pusha
add
sahf
jbe
inc
sbb
nop
pop
imul
or
pop
lcall
add
insb
and
in
dec
and
out
mov
add
scas
push
pop
or
call
cld
sub
insb
or
out
loopne
jnp
or
clc
or
lret
ficompl
loop
outsl
es
mov
mov
subb
int
into
lahf
leave
mov
jl
cs
and
jbe
xchg
push
pop
shrb
xorb
jbe
gs
cmpsb
dec
dec
pop
gs
xchg
cmpsl
mov
clc
mov
testl
lds
push
stc
repnz
flds
dec
out
bound
xor
iret
mov
inc
mov
loop
adc
daa
and
pop
rcrl
es
mov
fwait
enter
imul
cmp
pop
clc
fwait
dec
sbb
pop
inc
out
push
sub
stos
cld
cmp
cmp
in
imul
inc
and
jp
sub
cs
das
mov
idivl
push
out
je
insb
xor
pop
pop
test
or
pop
push
adc
orb
jle
cmpsb
xchg
shll
mov
dec
test
pusha
out
adc
or
int
lods
jecxz
mov
std
or
or
xchg
roll
ret
cmp
cmp
sti
jg
cmp
data16
jns
stos
lds
int
jmp
push
dec
and
sbb
adc
mov
mov
lret
push
or
hlt
pop
leave
xlat
pop
loopne
xlat
lds
ss
outsb
aas
sub
pop
arpl
jl
sub
test
frstor
test
sub
xchg
imul
mov
nop
mov
popa
mov
lcall
adc
aaa
out
adc
push
mov
inc
sub
subb
loop
mov
jb
mov
outsl
lcall
mov
loop
sahf
lock
cltd
iret
jmp
js
pushf
pop
add
adc
inc
dec
xor
maskmovq
testl
mov
xor
mov
jae
pop
rcll
fdivrl
out
push
insl
sbb
jecxz
insb
in
jnp
dec
push
xor
adc
sub
mov
das
mov
loopne
lods
and
pop
loope
mov
scas
test
inc
sbb
mov
sbb
xchg
sbb
lods
int
sbb
test
pusha
ljmp
das
mov
jmp
xchg
add
mov
lds
ds
sti
in
and
and
lret
movsl
mov
arpl
fldcw
sbb
jo
aad
push
enter
jne
mov
inc
mov
dec
mull
push
push
inc
jb
and
pop
or
and
cmpsb
jmp
sbb
cli
and
stc
les
imulb
aam
adc
add
in
xor
addr16
fstl
inc
cmp
fwait
and
shl
pop
aaa
setns
icebp
xor
es
scas
cld
or
pop
sub
xchg
insl
rorl
pop
ds
stos
jns
fsubs
push
mov
mov
aam
outsl
into
dec
inc
cmpsb
jle
xor
pop
ja
icebp
fs
mov
dec
pop
dec
push
mov
movsl
xor
dec
pop
pop
jo
dec
push
adc
and
rcr
mov
pop
imul
push
data16
aad
dec
clc
popa
cmp
lret
or
cmp
mov
jle
fdivs
sbb
out
icebp
std
inc
or
mov
rcll
sub
or
and
loop
fndisi(8087
sti
int
mov
enter
push
iret
adc
fdivrs
xchg
mov
js
lret
cmp
push
es
adc
call
xlat
cmpsb
cli
outsb
enter
out
cli
lods
add
ljmp
lods
sub
les
and
pop
pop
jno
mov
add
jbe,pn
or
stos
daa
xchg
push
mov
dec
or
sbb
test
lods
rorl
je
adcb
das
lahf
push
fs
inc
fcmovnbe
push
cmp
xchg
and
dec
out
les
sbb
mov
dec
xor
sub
cmp
xchg
dec
pusha
cmp
movsl
test
insb
popa
xchg
push
shlb
jg
sahf
lahf
push
popa
xchg
mov
daa
mov
cmpsb
daa
lds
fistpll
mov
lret
or
mov
dec
lret
pop
pop
lret
sbbl
cmp
outsl
sbb
add
push
and
dec
cmp
push
fldt
int
mov
inc
inc
sbb
xchg
enter
cmp
in
add
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
sbbl
push
movl
cmpl
je
cmpl
ja
jmp
call
mov
dec
mov
jmp
mov
notl
mov
movl
push
mov
mov
mov
sub
imul
mov
mov
mov
movzwl
or
xor
adc
xor
and
mov
addl
add
subl
add
imul
mov
mov
cmp
je
and
mov
mov
mov
sub
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
add
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
mov
dec
mov
jmp
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
xor
mov
mov
xor
mov
add
mov
add
movzwl
mov
movb
sub
lea
mov
sub
mov
add
mov
andl
xor
andl
sub
orl
mov
movl
andl
mov
inc
mov
cmpl
jl
jmp
call
cmpl
jb
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
movl
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
xor
dec
mov
jmp
mov
push
and
mov
xor
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
subl
push
andl
add
movl
jmp
mov
movl
mov
movl
inc
cmp
movl
jb
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
xor
adcl
add
jmp
adc
mov
mov
sbb
mov
orl
xor
mov
add
movzwl
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
movzwl
incl
xor
orl
add
mov
mov
movl
mov
movl
inc
mov
movl
cmp
jne
inc
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
dec
add
add
mov
xor
or
mov
sub
or
mov
sub
xor
add
add
orl
mov
movl
and
movl
orl
movl
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
mov
xor
mov
orl
mov
xor
add
mov
mov
mov
je
mov
mov
xor
orl
xor
sbbl
sub
andl
sub
neg
xor
or
mov
decl
mov
mov
add
imul
mov
mov
mov
subl
add
or
or
mov
mov
mov
jmp
mov
xchg
mov
sbb
jl
jmp
jl
fnstcw
and
fisttpll
mov
or
ja
fcmovu
daa
dec
movl
mov
xor
mov
lcall
pop
ret
out
lods
xchg
scas
xor
cli
or
mov
ret
or
add
out
inc
mov
mov
mov
or
ret
fs
inc
notl
adc
cmpsb
and
pop
fiaddl
ljmp
stos
sub
daa
cmp
jmp
inc
loop
cwtl
fmuls
jnp
or
mov
dec
cli
xor
shlb
test
mov
xorl
sbb
shll
or
mov
and
dec
test
lret
xorl
inc
jmp
imul
cs
das
mov
cld
xchg
jns,pt
cs
fwait
ds
push
push
mov
je
xor
adc
imul
sbb
fdivs
push
push
jb
inc
fcomps
xchg
lret
cmpsb
mov
and
cmp
and
inc
cltd
gs
addr16
add
or
adc
jb
pop
xor
mov
loope
rcll
ja
cmp
xchg
loopne
sub
inc
push
jbe
pop
mov
sbb
mov
xorb
add
aas
sbb
inc
sti
or
test
add
les
add
hlt
pop
fcmovu
mov
loopne
push
hlt
jecxz
ja
outsb
jbe
ret
int3
addb
lods
test
jmp
adc
dec
pop
or
lcall
sbb
incl
adc
decl
dec
outsl
mov
adc
xor
xor
fstl
fs
jmp
dec
mov
add
xchg
and
iret
xchg
add
xlat
and
jo
fisttpl
inc
int
daa
sub
sahf
push
sub
pop
ret
loop
int
pop
jmp
push
pop
test
jbe
sbb
adc
stc
mov
fwait
mov
cmp
jg
xor
sbb
shrl
lcall
ret
stc
int
outsl
mov
mov
mov
lret
sbbb
rolb
or
sbb
mov
cmp
mov
in
mov
jg
cld
xor
sahf
jns
jl
fidivrs
or
mov
int3
push
mov
testl
inc
out
mov
push
daa
cmp
lcall
xchg
testl
into
daa
outsl
lret
inc
cmp
pop
jecxz
dec
dec
jmp
testb
mov
cmpsb
mov
ja
stc
les
add
jns
in
rcrb
cld
loope
xor
gs
jecxz
fdivr
add
aad
mov
movsl
jmp
push
mov
push
in
clc
add
int
jnp
aaa
cmp
ljmp
lea
ss
dec
nop
andb
mov
mov
hlt
mov
call
mov
movsl
sub
mov
movsl
shlb
sbb
mov
pop
sbb
jp
into
inc
and
popa
mov
call
mov
ret
mov
xchg
mov
inc
cmp
and
xchg
loop
cmp
dec
mov
xchg
adc
std
aaa
xchg
jns
adc
aas
imul
cmp
xchg
jge
mov
gs
pop
push
fiaddl
repz
jmp
out
insb
and
xchg
push
vcomiss
lcall
push
lods
in
daa
test
pop
movsl
cltd
xchg
sbb
movl
cmpsb
add
push
arpl
outsb
jne
sbb
fcompl
fsubl
sub
mov
call
adc
push
mov
mov
mov
push
js
test
cmpsl
xchg
push
mov
pop
cmp
and
mov
dec
mov
icebp
xchg
sub
mov
and
aad
notb
sbb
push
add
jecxz
push
and
daa
ror
stos
aas
shr
sbb
stos
stos
repz
push
and
mov
pop
or
dec
dec
or
xchg
add
aas
stc
pop
rcll
and
or
cmp
add
lods
cltd
mov
and
jg
dec
cmp
mov
fbld
lret
sbb
pop
scas
es
mov
es
std
pop
fistpl
mov
gs
test
repz
sahf
xor
cwtl
add
add
dec
jns
pop
jnp
mov
jl
xor
repz
xchg
dec
lods
cmpsl
jmp
adc
lods
pushf
sbbl
sbb
push
xchg
push
jge
sbb
xchg
cld
in
dec
shlb
mov
hlt
int3
jae
cmp
sahf
xchg
mov
adc
imul
dec
dec
sti
mov
cmp
leave
xchg
dec
mov
and
pop
shl
test
rcrl
insl
pop
daa
mov
fistps
addl
inc
fucom
mov
ficompl
pushf
sahf
stc
mov
hlt
mov
xchg
pushf
mov
rcrb
or
es
in
cld
test
xchg
adc
push
xchg
xor
into
push
inc
push
push
outsl
mov
test
in
and
fcoms
imul
mov
sbbb
adc
pop
jp
push
popa
imul
imul
xor
xchg
movsl
lea
adc
sub
dec
outsb
scas
xor
and
es
sbb
sti
int
test
pop
sbb
fiaddl
jge
scas
cs
in
xor
dec
adc
jns
dec
sbb
mov
inc
sbb
int3
xlat
aam
movsl
push
sub
mov
xchg
scas
lahf
jg
repnz
addr16
xchg
icebp
fists
sbb
push
xor
shlb
push
dec
addr16
fildll
pop
rcr
gs
add
push
rolb
js
enter
mov
scas
pop
icebp
inc
and
mov
pop
adc
scas
adc
pop
movsl
ja
pushw
mov
xor
lods
enter
sub
popa
dec
mov
push
add
inc
fcmovnbe
jl
clc
mov
mov
iret
stc
clc
adc
decb
vmwrite
pop
cmp
xlat
sbb
dec
pop
sbb
push
sub
ucomiss
mov
pop
sbb
cmp
mov
insl
and
push
les
xchg
repnz
mov
cli
pop
jp
scas
sbb
outsl
mov
arpl
or
hlt
iret
outsb
add
or
imulb
dec
cmp
or
adc
stos
fdivs
sarl
push
or
jbe
aad
nop
push
fs
scas
inc
inc
push
sub
push
adc
or
ljmp
rcrb
mov
xor
or
mov
jno
insl
sub
mov
call
lret
or
push
xchg
loop
sub
bound
mov
mov
adc
fwait
sbb
or
mov
mov
out
mov
nop
aaa
js
pusha
fmull
fcomi
fwait
lret
arpl
jo
test
and
pop
into
pop
push
inc
jmp
mov
ss
mov
ja
fdiv
adc
fldcw
xor
fdivs
fsubs
dec
sbb
jmp
xchg
mov
ret
push
mov
jno
out
icebp
repz
rorl
call
jbe
add
pop
andb
push
jge
test
aas
repnz
cmp
movsl
out
ja
lods
pushl
or
or
pop
dec
and
aad
xor
adc
mov
shll
lret
fucomp
cld
inc
mov
pop
sbb
xchg
dec
mov
idivb
fisubrs
sub
push
dec
fs
std
out
scas
xchg
sub
mov
push
enterw
aad
fwait
dec
xor
inc
cmpsb
movsb
sbb
sti
xchg
test
jnp
dec
test
movsl
scas
div
stc
shrb
sbb
and
cld
add
inc
mov
jg
das
aas
in
mov
stc
mov
bound
loope
daa
aaa
pushf
or
pop
es
xor
rclb
rcrb
lahf
mov
test
fnstenv
out
sub
fwait
outsb
ror
add
or
daa
mov
inc
mov
notrack
inc
mov
mov
dec
ds
push
fldt
rcl
adc
jmp
shlb
jmp
notl
ja
lahf
sbb
lcall
shlb
jp
loopne
adc
add
dec
mov
cmp
push
jne
push
sbb
shlb
js
sbb
push
mov
mov
mov
pop
mov
enter
jnp
add
dec
push
nop
cs
mov
inc
dec
add
mov
adc
mov
xchg
sti
xchg
enter
dec
push
pusha
sar
gs
aas
dec
sbb
push
fmulp
mov
es
negb
dec
aad
test
inc
ss
xchg
sub
or
int
addr16
sti
adc
or
mov
jmp
mov
inc
sti
movsl
jbe
adcl
lods
ljmp
testl
or
test
mov
xor
fucomip
pop
lea
das
aam
fistl
int3
cld
push
pushf
loope
ja
dec
fs
fcomp
push
stos
mov
fdivl
out
cmp
sub
rolb
ja
fimuls
pop
push
int3
pop
inc
in
jge
dec
or
lock
adc
scas
push
loop
jge
sub
or
icebp
push
xlat
sub
stos
clc
and
popa
and
add
ret
cmp
ljmp
push
shll
flds
dec
cmp
pop
data16
lret
aaa
data16
bound
cmp
mov
fmull
dec
cmp
roll
mov
movsb
aad
addl
notb
push
pop
mov
mov
inc
xor
test
or
pop
add
fisttps
ljmp
mov
icebp
lock
fs
mov
dec
mov
mov
mov
movsl
roll
adc
mov
stc
pop
add
or
lcall
mov
mov
stos
or
ja
pop
mov
xor
add
out
sub
outsb
ja
cmp
lds
popf
mov
inc
mov
aas
sub
mov
ds
xchg
outsl
out
jp
push
cmpsb
mov
adcl
jle
lahf
xchg
mov
xor
xor
es
mov
push
mov
icebp
js
stos
inc
push
push
xor
xchg
in
lods
jne
sbbl
mov
lock
fists
xchg
xor
push
inc
lea
push
sub
daa
aas
lret
int
jp
pop
and
cltd
stc
mov
hlt
sub
or
aaa
mov
ret
es
ret
push
push
cs
cmp
add
hlt
inc
xor
and
rolb
shrl
push
inc
push
cmp
in
je
movsb
mov
and
and
inc
std
xchg
ret
jl
sbb
cmpsb
dec
xchg
imul
mov
xor
cmc
push
loope
mov
push
mov
cmp
cld
mov
loopne
jnp
in
cmp
mov
jmp
cmp
or
jecxz
test
lock
sbb
int3
push
sub
jb
andl
int3
push
inc
pop
aas
cwtl
shll
shr
inc
mov
xchg
das
lea
adc
cmp
dec
out
cmp
shr
dec
push
push
push
stc
cwtl
jecxz
rclb
push
gs
rclb
jg
mov
addr16
jae
inc
sub
push
addl
je
and
out
outsb
inc
mov
adc
mov
sub
dec
xor
xor
adc
dec
rcll
sbb
xor
lods
xor
mov
stc
fnstcw
mov
pop
pop
add
cmc
cmpl
sarl
jge
lea
mov
jae
jo
jp
cmp
pusha
insl
push
cs
dec
sti
mov
sub
lds
test
pop
xchg
arpl
ja
lea
cs
sti
sub
lods
xchg
jmp
add
jmp
ja
pop
icebp
movsb
dec
ret
sub
jne
flds
hlt
jle
in
arpl
loopne
sub
stos
push
mov
mov
pop
pop
sahf
ss
loop
sahf
frstor
aas
fildl
adc
cmp
mov
or
addb
pop
sub
cmpsl
popf
enter
or
lea
pop
xor
cmp
cmp
mov
test
xor
jno
cwtl
ficoms
imul
scas
adc
cli
mov
dec
mov
push
xor
jo
mov
mov
pushf
leave
lea
leave
das
int
addl
stos
idivb
and
or
test
outsl
das
lods
xor
and
std
xor
subl
jae
popf
in
sub
mov
mov
push
cmovg
xor
ret
xlat
test
xor
xchg
nop
push
hlt
sarb
jle
mov
xchg
push
xchg
not
or
fsubrl
aad
inc
outsl
sub
cs
cld
movsb
leave
cli
fsubrs
dec
sbbl
cmp
push
gs
jo
mov
push
repz
mov
test
xchg
xchg
pop
pop
mov
pop
aad
fildl
dec
es
mov
xor
jle
dec
mov
test
outsb
xchg
negl
mov
rcll
sub
adc
push
sbb
ss
addr16
jl
testl
lock
inc
mov
icebp
jae
push
in
cmc
push
mov
pop
loopne
inc
daa
mov
aas
ds
sub
clc
mov
stos
or
inc
call
jl
pushf
mov
sbb
cwtl
dec
push
sbb
ficompl
pop
cltd
cmc
rolb
inc
cli
pushf
cmp
cwtl
lret
jp
mov
mov
bound
mov
or
std
lret
pop
aad
lret
jae
lea
fwait
jmp
test
insb
mov
xchg
mov
ja
gs
out
jl
pop
push
cmp
adc
pop
pop
cmp
cmp
pop
rolb
or
jecxz
inc
ja
xor
ret
je
fsub
popf
in
test
cmc
xchg
lahf
mov
push
sub
popf
and
lods
jo
inc
pop
inc
inc
repz
adc
pop
xor
stos
sub
mov
sbbb
out
inc
adc
sbbl
adc
or
std
inc
int
mov
dec
fildl
sub
adc
divb
xchg
icebp
fwait
mov
mov
sub
inc
jae
pusha
and
mov
aad
hlt
stos
test
dec
das
dec
nop
enter
adc
add
dec
xchg
xchg
out
test
mov
jle
imul
das
in
aad
aas
or
fwait
cs
outsb
push
sti
xchg
xorl
repnz
pop
adc
bound
cmp
cmp
lds
add
jg
insl
fildl
cltd
arpl
sbb
lods
leave
sahf
aaa
mov
jae
adc
sub
adc
std
test
mov
dec
out
jle
and
in
outsl
xchg
pop
add
push
into
mov
sbb
push
in
jnp
mov
adc
jns
lods
imul
testl
mov
xor
hlt
negl
mov
scas
cld
cld
imul
add
sub
mov
xchg
adc
adc
push
outsb
xchg
shl
call
hlt
cli
jb
cmp
jp
sti
cmp
xor
stos
loopne
push
bound
daa
adc
in
movsb
mov
push
xchg
out
pop
jae
and
add
fs
cmp
sbb
negb
pop
lods
in
mov
pusha
jle
cmp
push
int
cmpsb
int3
fadds
stc
test
xchg
std
mov
repz
cmp
jg
jp
or
icebp
mov
imul
cmp
pushf
loop
pop
movsl
mov
addl
hlt
sbb
shll
pop
dec
lret
or
aad
or
es
into
xchg
leave
cmpsl
lods
xchg
or
push
loopne
lods
clc
lret
cmp
rcrb
imul
push
addl
xchg
les
dec
lret
lret
lahf
mov
mov
pop
jge
mov
movq
inc
adc
pop
fwait
cmp
imul
dec
mov
and
lods
cwtl
lods
push
push
sbb
int3
pop
outsl
imul
enter
in
xor
pop
test
sbb
xchg
mov
das
push
push
fldl
push
mov
add
in
mulb
aad
popf
mov
aam
shlb
pop
int3
rorl
aas
lcall
sbb
or
insb
mov
stos
std
pop
mov
jge
cli
inc
or
sahf
repz
sub
jg
loop
sub
scas
dec
test
sarl
icebp
popf
call
sbb
or
mov
pop
lock
jns
adc
or
imulb
adcl
dec
xor
repnz
loopne
sbb
divb
lods
mov
incl
pop
mov
ret
inc
mov
sub
push
repz
jmp
cli
mov
shl
pop
add
dec
xor
dec
je
sbb
sub
popf
sub
test
sarb
mov
cld
wbinvd
push
lret
shll
outsb
aam
or
inc
cmp
repnz
pop
shrb
xchg
test
test
mov
add
adc
loope
push
inc
leave
icebp
outsb
repz
xchg
jmp
adc
add
or
mov
mov
lcall
sub
dec
ror
aam
in
scas
sbb
outsl
or
mov
popa
fwait
mov
mov
int3
mov
cmp
lret
lock
or
shl
mov
lcall
xor
push
xor
loop
xor
adc
arpl
ss
ret
test
pop
jne
lret
push
xchg
dec
les
and
mov
enter
mov
outsb
stc
and
sbb
mov
push
inc
fdivs
xchg
pop
push
lret
lret
scas
ret
jae
push
mov
push
mov
cli
jge
mov
or
jno
and
xchg
mov
aaa
xchg
add
scas
adc
xlat
jo
je
mov
repz
sbb
mov
and
inc
test
ficoml
cmp
jle
mov
mov
andb
mov
and
dec
out
mov
pop
fistl
push
addb
pop
jae
cmp
test
pop
inc
imul
insb
repnz
add
popf
xchg
pop
push
incb
mov
dec
les
repnz
or
movzbl
lds
add
jno
dec
push
lods
repz
xchg
push
mov
ds
or
xlat
inc
loope
adc
jae
push
inc
push
out
icebp
shll
cmp
mov
sbb
popa
andb
movsb
fcmovu
inc
fdivr
push
and
mov
mov
push
mov
jns
loop
popf
hlt
adc
adc
cwtl
pop
adc
push
adcb
xor
stc
imul
dec
sahf
and
cwtl
jmp
ret
out
cmp
inc
sbb
in
push
popa
push
lock
lret
loop
sub
push
and
sub
and
jge
mov
cmp
rol
mov
ja,pn
cs
mov
pop
jne
and
lods
lcall
inc
les
insb
fdivp
dec
xchg
stos
lea
in
out
xor
lock
mov
mov
in
bound
mov
shlb
mov
jge
movsb
sbb
or
mov
or
pop
jge
test
adc
push
push
ret
lea
xlat
shll
test
fxch
mov
es
arpl
jg
movsl
and
int
xor
dec
add
lock
cmp
rcr
mov
enter
push
xlat
and
xlat
mov
mov
mov
pop
xchg
rorl
jle
enter
pop
into
das
repz
cwtl
shl
add
faddl
in
push
mov
fsubrs
mov
lods
xchg
sub
add
pop
rorl
push
popf
adc
lds
mov
dec
stos
sahf
ret
or
js
in
test
mov
leave
add
popa
fcmovnb
push
jl
or
cli
mull
out
enter
ja
push
lret
mov
sti
fdivr
test
pop
xor
xor
mov
push
mov
pushf
jle
mov
push
pop
mov
inc
pop
stos
int
jne
stos
push
inc
add
mov
xor
ficomps
jge
filds
jmp
gs
cmpsl
js
shll
dec
push
addr16
fucom
stos
xchg
cmp
jae
les
inc
mov
in
vpsubq
xor
inc
pop
mov
push
fdivl
sbb
fwait
push
pop
inc
and
inc
sbb
and
pop
and
cmc
mov
inc
lea
idivl
mov
adc
pop
scas
sbb
jnp
inc
mov
cltd
inc
into
jne
hlt
jle
jb
cmpb
push
int3
mov
js
cmp
and
fcmovu
pop
sbb
jae
xchg
mov
das
fsub
lret
out
sbb
push
push
loope
adc
addr16
out
stc
inc
aad
out
pop
push
shlb
rcr
popa
and
push
push
and
sub
aad
cld
icebp
lods
les
pop
cld
adc
mov
xchg
or
mov
xor
jg
adc
xchg
push
lds
jb
push
call
xchg
dec
shl
push
out
mov
jb
nop
std
mov
std
lock
lahf
negl
dec
pop
pushf
lret
test
mov
xlat
mov
in
leave
or
adc
mov
lahf
jp
jecxz
push
mov
test
mov
scas
xchg
inc
scas
aaa
cwtl
push
fistps
xchg
pop
mov
or
cmp
fisubl
in
dec
xchg
or
mov
stos
mov
adc
lcall
add
mov
fisubl
push
gs
jg
pop
mov
loop
hlt
mov
xchg
adc
sub
pop
pop
icebp
jbe
add
into
arpl
dec
jl
push
scas
bound
call
pop
or
shll
gs
jle
fsubl
inc
out
sub
mov
mov
fistl
cmp
and
lods
push
das
adc
out
dec
dec
shl
jns
leave
or
ds
and
fwait
dec
dec
or
xchg
movsb
inc
pop
les
and
mov
adc
pop
ss
push
rcll
stos
and
js
scas
lret
mov
pusha
mov
nop
iret
mov
pop
adc
ficoml
stos
pop
lods
fsubl
adc
movsb
jge
subb
pop
pusha
test
pop
outsl
or
and
js
inc
jne
xor
dec
test
pop
into
add
cmp
adc
addr16
rcll
lcall
add
push
out
mov
mov
sbb
test
sub
in
out
add
add
lahf
mov
bound
sarl
and
or
and
not
aaa
lock
cmp
cld
in
cwtl
sbb
pop
fs
addr16
ja
pop
out
and
mov
into
imul
sbb
aaa
xchg
outsl
test
jmp
stc
out
in
cmc
jmp
dec
insl
nop
mov
dec
pop
xor
popa
xchg
ss
cmpb
arpl
mov
jmp
call
mov
repz
mov
sbb
aas
sbb
out
inc
fdivrl
cmpb
xchg
sbb
mov
and
add
orl
adc
mov
insb
push
mov
pop
es
push
mov
mov
fildll
sbb
mov
xor
sbb
in
inc
push
adc
jp
dec
lock
xorb
fisubrs
or
dec
daa
into
fsubs
mov
ficomps
push
mov
ret
xchg
xchg
jo
ljmp
dec
mov
in
pop
mov
out
add
push
rclb
mov
jle
out
lcall
mov
jle
jbe
mov
fs
popf
mov
mov
cmp
fisttpl
outsb
lret
cmp
sbb
cwtl
andl
or
jl
imul
cmp
inc
hlt
jb
out
add
xchg
mov
xchg
ds
popf
sbb
out
addr16
add
and
lea
add
je
cmc
fwait
lret
cmp
jge
lods
pop
pop
xor
and
in
xor
sbb
daa
and
or
test
xchg
out
mov
inc
jp
mov
ret
xor
mov
adc
adc
sahf
lahf
push
push
add
lods
push
or
mov
xchg
out
cmp
push
mov
int
dec
ds
lds
test
addl
shrl
adc
bound
loop
jmp
xor
sbbb
fwait
cmpl
jmp
cmp
jle
fisttps
ds
sub
inc
and
push
sub
push
push
ljmp
xchg
add
or
adc
sahf
imul
and
cmp
adc
jg
frstor
xlat
jne
jb
push
stc
push
mov
fmuls
mov
icebp
pop
cmp
jb
sarb
imul
push
in
insb
cs
and
mov
mov
nopl
pop
mov
mov
popf
add
pop
or
fcmovnb
mov
adc
xchg
dec
lret
sbb
xor
jge
scas
xchg
filds
in
or
bound
push
loopne
xchg
jo
jle
test
mov
xchg
scas
data16
adc
push
push
pop
adc
std
cmp
push
ret
or
std
lods
imul
sbb
sbbl
enter
and
rclb
subb
add
clc
fadd
pop
jge
add
pop
mov
aas
pop
popa
rcr
xor
adcl
int
mov
mov
imul
add
leave
aad
dec
inc
xchg
dec
mov
in
stos
mov
or
fwait
mov
jo
outsb
ds
jg
mov
jge
push
popf
cmp
js
sub
sahf
xor
or
add
je
enter
jns
add
cltd
xchg
and
xchg
fmulp
das
lahf
pop
lret
mov
push
leave
repz
repnz
lret
movsl
lea
outsl
sub
ret
dec
imul
outsl
shrl
in
add
xchg
seto
cwtl
xor
add
in
adc
cld
jae
push
dec
insl
pop
or
dec
add
fmul
js
jo
xchg
ret
rcrb
fsubrl
adc
xchg
or
popf
ret
mov
cwtl
lods
push
xlat
push
jp
int
sti
cs
loope
enter
push
inc
sbb
push
dec
xchg
or
push
iret
jae
int
mov
push
ret
xlat
or
jl
adc
sbbl
mov
outsb
cmpsb
mov
fcomps
movsl
jecxz
in
push
stc
dec
adcb
jp
mov
shrl
pop
mov
mov
lods
adc
fidivs
adcl
or
mov
pop
push
pop
int3
or
mov
les
mov
pop
fnstcw
mov
mov
mov
cmp
or
int
mov
and
xchg
dec
sbb
mov
jmp
cmpsl
mov
out
iret
insl
cmp
xchg
push
outsb
mov
insb
cmp
insl
call
mov
xchg
daa
jmp
in
sub
xchg
ret
mov
ja
cltd
pop
add
lret
testb
sar
adc
fbld
jo
lea
cs
sti
adc
adc
mov
fldt
es
aaa
sbb
pop
mov
jne
cmc
sub
sti
cltd
push
aad
cmc
hlt
fwait
mov
adc
inc
sbb
call
inc
out
jae
jb
nop
inc
add
push
lahf
jb
dec
push
or
addr16
mov
mov
idivb
jbe
mov
pusha
push
jno
sub
out
inc
js
sub
xor
mov
mov
arpl
lret
add
or
xchg
jle
ret
add
je
inc
inc
mov
jne
inc
fidivrs
sbb
pop
arpl
shlb
daa
add
or
sub
pop
movsl
jecxz
movsl
fildl
xchg
ss
iret
push
aad
pop
repz
daa
xor
push
adc
xor
je
mov
out
insb
daa
fsubs
pop
stc
stos
in
dec
bound
test
call
cwtl
cmc
dec
or
popa
dec
adc
int3
cmp
sbb
cld
call
fsts
loope
adc
push
cmpsb
pop
enter
mov
bnd
stos
jo
cmpsb
in
dec
pop
adc
jb
push
or
daa
movsl
mov
push
in
lock
les
in
lods
dec
jecxz
js
or
push
ljmp
or
das
push
pop
popa
xchg
cmp
dec
mov
mov
xor
ret
stos
cli
mov
sarl
imul
ljmp
shll
xor
add
icebp
call
and
ret
lods
sbb
jns
cli
loope
addr16
in
add
cmp
int
in
loop
sub
insl
mov
or
xchg
stos
movl
fisubl
mov
inc
mov
movsl
add
popf
inc
dec
aas
iret
cwtl
clc
sub
cmpxchg
jb
pop
cmpsb
fmulp
dec
push
out
sub
stc
repz
inc
ss
jb
sarl
dec
mov
iret
mov
mov
adc
adc
or
jb
pop
jmp
aas
sub
cmc
inc
ret
adc
jmp
hlt
dec
mov
mov
and
xchg
lds
jnp
mov
inc
gs
mulb
cld
mov
cmp
das
sub
bound
clc
sub
jge
cs
sub
dec
insb
rorl
jns
jae
xchg
xchg
out
cmc
pop
hlt
movsb
sub
arpl
inc
pusha
jo
inc
lahf
sbb
inc
icebp
cmp
pushf
data16
es
shll
and
jae
out
or
inc
mov
scas
pop
out
test
mov
int
xor
xor
dec
or
xchg
and
dec
hlt
imul
enter
push
insb
mov
out
insb
jbe
jmp
fwait
or
pop
inc
loopne
sbb
sbb
lea
xor
outsb
cltd
cmp
push
inc
lcall
jmp
xor
lds
ljmp
adcb
inc
pop
scas
push
inc
mov
xor
mov
push
adc
inc
sbb
push
jae
lds
in
out
jmp
fstl
add
xor
mov
or
mov
mov
mov
sbb
mov
jmp
movl
ret
xchg
cs
fucomip
les
pop
jl
enter
fs
stc
mov
push
movsb
jb
inc
mov
xor
jno
mov
pop
sbbl
xor
fwait
sub
je
sbb
jne
std
and
rcrl
push
mov
clc
insb
xorl
push
andb
push
and
xchg
inc
cmp
loop
lea
pop
mov
sti
push
lods
icebp
sbb
inc
mov
pop
ror
sub
mov
movb
adc
inc
mov
cmp
or
xchg
stc
adc
lock
je
shll
push
cmp
mov
repz
dec
mov
push
fwait
pop
dec
inc
gs
mov
fsubrp
ja
lock
push
dec
cs
inc
push
inc
add
pop
ljmp
pop
jnp
faddl
mov
pop
push
cli
cmp
xchg
pushf
mov
inc
add
push
pop
sbb
loopne
inc
or
sub
jns
or
cs
repz
and
lahf
and
pop
notl
pushf
jns
mov
sub
loop
or
cmpsl
pop
xchg
xchg
rcr
xlat
in
ss
in
xor
push
xor
imul
jbe
pop
mov
or
std
ljmp
dec
je
mov
pop
out
bound
add
adc
stos
dec
xor
ficomps
or
add
ret
enter
inc
dec
dec
ds
mov
fwait
mov
xor
adc
adc
cmp
pop
test
sti
lahf
ret
lret
imul
pushf
or
enter
adc
das
and
dec
jp
jno
pop
xchg
je
adc
mov
rcl
cmpsb
icebp
int
add
aad
mov
jne
fldt
jns
pop
inc
enter
fldt
scas
cmp
scas
dec
lret
or
mov
pop
jmp
xchg
sub
gs
scas
aas
hlt
idiv
bound
leave
ret
adc
mov
and
fs
jno
cwtl
mov
cld
xchg
or
cwtl
es
in
call
out
xchg
jno
enter
mov
mov
mov
and
jg
fadds
mov
pop
adc
repz
xor
add
push
lock
cmp
iret
mov
std
fldcw
inc
push
or
lods
mov
lds
aad
cli
leave
xchg
mov
adcb
lahf
cmp
jg
cwtl
mov
add
jge
int3
es
mov
push
sub
push
ja
in
aas
or
out
pop
pusha
inc
xor
sub
out
imulb
adc
call
xchg
call
test
mov
mov
pop
and
ja
pop
and
ret
jge
or
clc
adc
dec
in
dec
stc
jne
loopne
sub
adc
cmpb
mov
outsb
or
mov
and
and
pop
sbb
pop
pushf
subb
ljmp
add
lods
pop
pop
push
js
aaa
jl
jmp
xor
pop
xchg
dec
mov
and
push
mov
pop
mov
mov
inc
adc
mov
pop
inc
stos
pop
mov
xchg
jl
cltd
lret
push
out
inc
ljmp
lock
xchg
cmc
adc
push
adc
xlat
divb
fmull
in
ret
insb
fsubrl
insl
fnsave
mov
cs
in
add
clc
push
mov
push
fidivl
add
xchg
loop
jl
sub
imul
jae
loope
inc
in
adc
repnz
xorb
lcall
adc
lahf
mov
pop
xor
loop
ror
pop
addr16
fstp
icebp
rcrb
jbe
pusha
iret
dec
adc
xor
mov
mov
fucomi
mov
dec
sbb
orl
outsb
popf
fldt
adc
lcall
stos
xchg
or
in
sbb
mov
stos
aas
cli
ja
out
adc
adc
xlat
test
sub
int
mov
sub
push
lea
shl
movsl
mov
xchg
jo
int3
mov
bound
cmp
ficomps
popa
mov
push
xchg
inc
es
push
dec
jp
jecxz
lret
in
cmp
sub
add
jp
xor
adc
jl
jb
jo
dec
or
inc
lods
cmp
dec
mov
inc
gs
data16
mov
enter
adc
jbe
lds
ljmp
fwait
addr16
push
push
push
adcl
pop
push
jmp
das
cmp
loop
out
mov
jp
sbb
jecxz
jae
pushf
loopne
stos
lds
push
push
arpl
es
xchg
inc
push
clc
in
mov
push
adc
mov
mov
subb
mov
and
andl
cmpl
dec
mov
sub
jg
pusha
cmpsl
or
mov
lahf
lahf
test
insl
mov
scas
sbb
jne
inc
inc
xor
push
stc
flds
ret
xor
sbb
adc
push
insb
push
into
in
lds
mov
sbb
push
or
and
iret
pop
xchg
adc
jle
iret
pop
aas
clc
mov
in
mov
hlt
addr16
fistl
mov
fimull
pop
lret
xor
xor
xchg
add
rolb
popf
mov
xor
xchg
jb
mov
xchg
and
lss
pop
fisubs
je
ljmp
into
test
jno
adc
cli
enter
cmpsl
mov
fs
push
sub
and
inc
out
cmpsb
push
jno
das
xchg
pop
xchg
cmp
clc
je
in
inc
and
xchg
jne
xchg
imul
out
bound
cld
arpl
into
leave
xchg
ljmp
pop
cs
cmp
xchg
add
pusha
test
in
xchg
daa
mov
mov
ljmp
adc
jbe
inc
mov
ret
iret
jp
dec
pop
dec
add
into
mov
mov
jne
push
mov
mov
ficompl
mov
mov
xorb
add
iret
scas
sub
movsl
icebp
into
xor
mov
and
add
fs
in
pop
xlat
cmp
mov
dec
push
ljmp
mov
sub
imul
or
add
push
xor
add
pop
sub
push
in
int
fucomp
popf
adc
sub
dec
xchg
out
cmp
test
jnp
nop
inc
ss
test
cmp
adc
into
les
ljmp
sub
mov
xchg
xchg
add
imul
subl
jae
pop
fcoml
mov
addb
jl,pn
mov
xchg
mov
add
jmp
decl
popf
inc
lds
ret
push
inc
mov
fs
dec
or
inc
gs
ljmp
sbb
fbld
hlt
fisubrs
scas
insl
xor
mov
cmp
jnp
push
icebp
mov
out
push
adc
in
adc
hlt
ficoml
das
testb
pop
sbb
outsb
push
sbb
dec
add
adc
fmuls
mov
out
inc
mov
jnp
sbb
mov
iret
sub
pop
out
cmp
clc
mov
push
insb
roll
fsts
or
mov
or
cmpsb
cli
inc
push
mov
stos
cmpsb
test
cltd
rcll
jb
cmp
dec
clc
and
mov
jecxz
jb
lock
repnz
fcoml
push
xor
aam
jae
sbb
sub
ss
inc
mov
jmp
pop
inc
inc
mov
in
loopne
dec
nop
cmp
add
and
mov
pop
cwtl
int
dec
push
shl
inc
in
cmpl
mov
lret
outsl
lret
pop
fldenv
rorl
and
mov
cmp
repz
jb
xchg
out
pop
pop
pop
sbb
or
faddl
jge
fs
pop
jecxz
sahf
push
add
insb
in
mov
scas
adcl
pop
push
cld
enter
push
xchg
push
adc
jo
js
xor
xchg
ja
mov
mov
ss
mov
in
xchg
scas
jb
lods
das
dec
arpl
sahf
dec
push
std
ret
and
mov
cli
mov
fidivrl
jl
mov
stc
mov
enter
xlat
mov
mov
add
jecxz
pop
les
xchg
xchg
loop
lahf
int3
pop
pop
pop
sub
cld
iret
adc
inc
dec
int
push
mov
jae
cltd
add
cltd
jge
inc
lcall
mov
push
in
mov
mov
iret
sahf
imul
fwait
xchg
inc
sarl
jmp
divb
mov
ret
sbb
lret
outsl
pusha
sahf
mov
movsb
adc
sub
or
mov
pop
insl
lcall
outsl
and
push
outsb
lcall
or
and
ds
sbb
push
mulb
inc
jmp
xchg
push
shl
push
cli
push
pushf
and
xchg
pop
adc
or
call
stos
mov
push
ret
cmp
adc
cltd
jle
into
fisttps
jnp
repz
icebp
mul
add
lods
mov
fldcw
addr16
jnp
test
jge
mov
xchg
jecxz
dec
cmpsb
ficoms
insb
daa
or
inc
dec
int3
xchg
popf
or
mov
cs
arpl
xchg
clc
xchg
fstpl
mov
ds
out
fstpl
mov
sbb
pusha
push
add
jp
out
test
popf
shll
les
daa
sbb
nop
jo
sub
repz
mov
das
jl
xchg
or
stos
sub
std
push
add
adc
xor
add
test
lock
xchg
in
xchg
popa
test
mov
and
push
add
fdivs
adc
gs
cmpsb
adc
sbb
jno
cmp
mov
test
push
jg
jmp
ljmp
xchg
lcall
es
pop
scas
fs
dec
pop
aad
push
cmc
inc
cmp
jae
jecxz
cmp
neg
mov
lods
fcoms
or
mov
dec
dec
mov
scas
jg
imul
punpckhbw
mov
sti
popf
or
call
pop
mov
jns
jl
or
leave
inc
or
mov
jp
add
ss
shlb
add
or
xchg
test
sbb
int
jns
pminsw
sbb
ret
push
mov
enter
mov
stc
xor
cmpsb
pushf
xchg
and
aaa
iret
nop
pop
sbb
pop
sbb
cmc
mov
test
aaa
dec
or
mov
add
fstps
sarl
sub
and
int3
inc
cmp
daa
rorb
outsl
in
out
cmp
clc
mov
jbe
mov
jl
mov
fiadds
outsb
pop
aas
inc
pop
daa
add
lret
adc
mov
scas
test
add
and
mov
cli
dec
sahf
fistl
daa
and
out
cli
cs
cmp
mov
in
xor
push
add
mov
inc
dec
xchg
inc
and
fistl
and
dec
inc
add
ljmp
leave
adc
in
rcr
pop
xchg
mov
push
testb
xor
jns
push
fistps
mov
shl
addr16
sub
push
data16
nop
into
test
aad
inc
test
int3
jae
sub
mov
sarl
in
mov
aam
out
inc
ljmp
arpl
je
inc
enter
test
nop
fsubr
mov
rorl
cmp
pop
sub
lcall
aas
inc
sbb
in
test
sub
les
mov
fdivrl
jno
test
xchg
inc
std
xchg
adc
data16
dec
push
xchg
clc
popa
mov
in
jnp
lcall
andb
dec
jmp
and
mov
sub
mulb
cmp
je
fwait
mul
push
mov
jne
xor
les
jle
push
mov
lcall
out
cwtl
fwait
je
test
out
data16
mov
or
aaa
and
decb
lea
push
jp
fld1
inc
mov
mov
or
loopne
inc
pusha
inc
std
dec
loope
aad
fstpt
cs
popa
loopne
loopne
fisubrs
xor
cmp
or
shll
xchg
push
jno
add
sbb
push
sbb
pop
cmp
push
sub
fdivrl
stos
adc
xchg
loope
pop
mov
mov
nop
ljmp
add
adc
and
int3
repnz
pop
cmc
lods
mull
cmp
lods
xorb
pushf
aaa
mov
call
push
aaa
xchg
mov
lret
in
sbb
cli
in
fnstsw
sub
mov
popa
cmp
aaa
stos
dec
pop
fs
stos
ja
or
cmp
sti
add
adc
xchg
cmpsb
mov
lret
xor
bound
mov
ds
cmpsb
cli
test
mov
lcall
push
lock
nop
insl
stos
lret
mov
pop
in
test
sbb
cmp
or
fisttpll
sti
xchg
cli
xchg
mov
sbb
add
push
cwtl
popa
stos
pop
jnp
fxch
dec
fiadds
gs
inc
lods
and
scas
pop
das
js
adc
insl
inc
mov
popa
int
pop
int
dec
xlat
movsb
std
and
mov
dec
xor
in
adc
cmc
ret
loope
test
xchg
push
mov
xchg
leave
mov
out
push
mov
push
mov
mov
icebp
xchg
xchg
push
pop
xchg
mov
cmp
push
fimuls
rorl
cmpsl
xor
pop
ds
sub
or
outsl
sub
popa
repz
cwtl
and
xor
mov
inc
xchg
pop
enter
adc
testb
pop
pop
aaa
xchg
xor
fsubrs
repnz
jge
mov
mov
fs
into
and
mov
and
int
daa
stc
mov
dec
popa
decl
jne
das
fcom
icebp
lcall
inc
out
adc
add
xchg
push
xlat
loope
mov
ret
mov
push
pop
and
fcmove
jg
stos
push
fildl
xchg
xchg
ficoms
jle
movsb
and
mov
inc
imul
jbe
popa
and
stos
or
ljmp
mov
and
pop
cmp
xchg
and
shll
pop
inc
add
testb
imul
lds
pushf
int
insl
repnz
lea
sbbl
sub
push
and
mov
xlat
repz
dec
pop
lahf
dec
jnp
sub
mov
into
jp
popa
sahf
mov
es
mov
rcl
rcll
aaa
scas
clc
cmp
push
xlat
or
testb
jno
inc
data16
cli
jno
imul
or
push
pop
mov
mov
adc
add
xor
mov
inc
insb
mov
adc
add
jbe
mov
fsubrl
or
dec
cmpsb
xchg
adc
popf
mov
stc
out
jnp
inc
jbe
mov
sbb
lea
idiv
into
cld
sti
gs
mov
popf
push
addr16
dec
sbb
xchg
pop
inc
pop
cmp
outsl
aas
idiv
pop
sbb
sub
dec
adc
fs
mov
subb
into
add
orb
rol
mov
jo
popf
out
movsl
pop
ljmp
fs
sbb
inc
lock
jmp
in
fistl
inc
dec
sbbb
pop
es
jne
xor
sub
mov
mov
mov
insb
dec
out
sbb
out
push
iret
ror
mov
sbb
sub
stc
sbb
lret
dec
lcall
push
fimuls
xchg
inc
mov
out
jmp
inc
mov
cmp
sub
add
clc
pop
stos
mov
lock
add
push
and
orl
xchg
outsb
test
push
pop
push
xlat
jb
sub
xchg
loop
ljmp
sub
dec
loopne
mov
outsb
dec
xchg
mov
shr
repnz
push
sbb
xchg
jmp
les
insl
and
fnstsw
and
jmp
pop
push
add
loope
jge
jmp
sbb
test
jp
scas
inc
imull
adc
or
scas
pop
enter
push
cli
adc
sbb
andl
add
arpl
xor
out
out
xor
pop
pop
sti
stos
inc
pushf
aam
enter
xor
daa
xor
xor
ljmp
ljmp
jmp
sarl
cmc
lock
mov
sahf
mov
pop
mov
or
dec
jbe
or
sbb
inc
lret
mov
test
sub
push
insb
fmull
repnz
fcomip
mov
pop
jnp
pop
xor
inc
loope
fstpl
mov
mov
stos
notl
div
xchg
rcrb
aaa
inc
fsub
dec
mov
mov
add
jae
out
push
ret
cs
jmp
jnp
ret
ret
inc
xor
insb
fdiv
mov
lods
dec
or
out
cmp
dec
jae
adc
dec
insl
insb
dec
int3
loop
jae
mov
bound
daa
aad
icebp
ss
cmp
in
pop
aas
ret
or
lahf
sbb
testl
cs
sub
jne
xor
mov
fisttps
mov
xchg
sahf
xor
cmpsb
cmp
fmulp
sub
mov
sbb
ret
repnz
adc
jge
roll
loopne
mov
repnz
shll
inc
cmp
sar
xlat
inc
sbb
scas
xchg
aad
jnp
xor
inc
loop
loop
test
add
in
push
xor
add
add
neg
xchg
arpl
adc
aaa
mov
or
test
ret
ret
ret
imul
in
lcall
cmp
repz
cwtl
out
ss
call
cmp
jg
or
lods
imul
rol
cmp
nop
push
adc
mov
cmp
xchg
fs
out
stos
int
push
cld
rcll
not
push
out
rorb
pop
jle
lret
dec
sti
or
dec
ficomps
in
subb
inc
repnz
cmpl
stos
jmp
add
sbb
lret
andb
jne
adc
push
add
ret
pop
in
cmp
ret
jp
cmp
pop
xorb
pop
jle
fstpt
cmp
addr16
jl
sarb
dec
rorl
jg
shl
aaa
pusha
loop
xor
jne
test
cmp
inc
mov
sar
push
mov
pop
outsl
dec
mov
inc
nop
sbb
cmpsb
mov
mov
notb
or
sahf
sbbb
mov
dec
sbb
lret
xchg
jae
push
or
es
insb
ss
push
cmpsb
cmpsl
outsl
mov
xor
and
sti
sub
fdivrs
dec
ljmp
sub
into
scas
jb
pop
pop
mov
mov
pop
adc
repnz
cmp
cs
xor
sub
jle
jl
or
mov
std
pop
in
and
cmp
dec
cmp
sbb
inc
dec
sub
xorl
inc
inc
inc
add
pop
fcmovbe
je
dec
jmp
hlt
mov
sti
push
stos
shlb
andb
dec
adc
jmp
pop
dec
lods
jg
test
jp
mov
sub
in
ret
pop
testb
xor
mov
xchg
lods
cmpsl
push
jg
xchg
in
xor
pop
xchg
lret
sbb
add
push
repnz
inc
movsl
jns
sbbl
in
xchg
dec
push
lcall
push
data16
xchg
sub
js
xchg
add
iret
ficoms
or
xor
push
roll
shrl
or
std
sahf
mov
out
cmp
mov
push
inc
mov
fisubrs
inc
sbb
lahf
mov
dec
xchg
and
push
pop
fsubs
call
nopl
mov
mov
sti
add
and
data16
lret
cmpsb
mov
adc
ficoms
adc
cmp
xor
sarl
or
mov
mov
outsl
jle
cmpsl
rorl
inc
rcr
push
int
sub
rcrb
scas
mov
xchg
lahf
inc
dec
and
enter
and
and
ja
xchg
fstps
push
add
jbe
roll
inc
fsubs
xchg
push
ja
inc
mov
int
lret
sbb
xchg
and
jp
mov
xchg
xor
xor
out
ljmp
insl
xchg
xchg
cmp
test
xor
cmpsl
jmp
mov
sub
mov
cli
test
aad
std
add
sti
pop
mov
sti
adc
inc
scas
std
lahf
adc
jae
adc
mov
idivb
mov
stos
xor
inc
or
outsb
add
dec
addr16
pop
push
int
in
mov
pop
movsb
jl
pop
pop
xchg
mov
sbb
aas
sub
xor
mov
cmp
and
mov
cmp
ret
xchg
stos
repnz
data16
imul
lds
sahf
stos
stos
or
inc
test
imul
test
nop
cmc
mov
jg
leave
stc
adc
dec
ficoml
cltd
insl
ret
push
lea
inc
sub
lods
mov
push
out
stc
pusha
out
js
jno
push
pop
jmp
dec
rorl
nopl
jp
cmp
ja
ret
sahf
lret
icebp
clc
aaa
add
sbb
outsb
repz
cmpsb
ljmp
mov
xor
or
ds
jns
out
inc
push
int3
jle
not
cmpb
jp
or
inc
int3
mov
xchg
cmp
je
movsl
adcb
lods
add
jg
bswap
xchg
mov
or
mov
jb
mov
aad
xor
dec
test
dec
lods
sub
orl
push
push
addr16
add
add
js
in
stos
cltd
inc
xchg
jp
stos
jbe
or
mov
adc
lods
cmp
fldl
fldl
mov
shr
add
xor
loop
out
es
cli
mov
sbb
arpl
js
cmp
fwait
sbb
xchg
mov
and
sbb
sub
fcomp
arpl
stos
repz
popa
push
xchg
xor
daa
cltd
push
xor
dec
inc
cmp
dec
jae
inc
pop
xor
loop
notb
aas
or
cld
ja
sub
das
cmp
add
lods
or
stos
sub
mov
mov
jle
adc
and
xor
test
shrb
pushf
xor
fmull
popf
bound
popf
das
pushf
test
int
pusha
mov
pop
inc
sahf
cmc
pop
mov
push
adc
out
lds
mov
inc
jne
daa
mov
mov
stos
imul
repnz
jnp
mov
leave
sahf
pop
cmc
fstps
cld
cmp
mov
loope
sbb
push
out
jg
test
jle
cmp
dec
jae
stos
mov
cs
cwtl
jle
nop
push
pop
cmp
sub
scas
jnp
scas
in
or
je
inc
xor
shlb
lcall
lret
das
adc
sub
inc
mov
popf
orb
xchg
pop
xchg
loope
push
lahf
jno
push
insb
xchg
fidivrs
jge
xor
arpl
push
lret
jg
roll
mov
ss
xorl
mov
jecxz
xlat
xor
cld
in
push
or
mov
inc
in
insl
movsb
cld
xchg
fisttps
and
pop
pop
inc
insl
sub
lods
xchg
dec
test
pop
movsl
xchg
adcb
mov
movsl
add
leave
fstps
adcb
lods
add
aaa
fsub
cwtl
rcll
jle
cmp
add
mov
push
pop
inc
jmp
push
mov
mov
or
mov
xchg
add
ficomps
aaa
ret
sti
clc
arpl
xchg
push
subl
dec
mov
jmp
mov
xor
cmc
inc
mov
pop
cmpsb
mov
shl
mov
sbb
sbb
std
push
mov
xor
or
jo
nop
ret
insb
movsb
xchg
pop
xlat
mov
xor
movsb
scas
push
repnz
xor
mov
xchg
jo
lds
cmp
mov
es
dec
adc
inc
mov
aam
loopne
mov
ja
lock
es
hlt
ror
movsb
inc
sub
mov
push
xlat
imul
js
jle
lds
iret
dec
fiaddl
pop
js
mov
stc
xlat
jge
inc
in
jnp
mov
sbb
push
js
sub
imul
cmp
push
xchg
dec
xchg
mov
daa
inc
out
xchg
sub
fnstenv
ret
sbb
or
lods
xchg
cmpsl
jecxz
or
pop
push
mov
in
pop
adc
stc
lret
stos
mov
orl
addr16
inc
hlt
cmp
pop
popf
subb
add
cs
data16
shr
inc
cmp
das
adc
pop
call
pop
sub
mov
sub
stos
and
push
jg
jle
call
jnp
mov
push
std
pop
dec
mov
push
mov
xor
scas
xchg
xchg
push
push
mov
outsb
adc
xor
scas
in
ret
jp
pop
or
sub
stc
xchg
xchg
sbb
ljmp
xor
xor
or
xchg
pop
adc
mov
mov
cmc
out
sub
mov
ret
test
mov
scas
sub
inc
adc
mov
mov
adc
test
sbb
loopne
fisubrl
mov
sti
jno
scas
loope
sbb
lcall
sub
xor
xor
jns
and
mov
push
jmp
jl
xor
lret
ja
xor
test
je
mov
pop
data16
dec
push
test
gs
or
xchg
or
dec
xchg
push
sahf
push
outsl
dec
insb
xor
leave
sbb
ljmp
xor
push
scas
xchg
push
cmp
cmc
aad
sarb
dec
subb
imull
push
jb
and
scas
clc
or
repz
dec
mov
fisttpl
cli
ret
dec
mov
out
pop
adcb
and
cmp
test
mov
or
cld
jecxz
sbb
pop
jns
shr
pop
push
add
xchg
cmpsl
push
jecxz
outsl
lret
mull
jb
enter
mov
gs
imul
cmp
jb
lods
add
pop
inc
mov
jo
cmp
test
push
push
sti
sbb
sbb
jo
orl
lret
push
fwait
insb
fcomps
jns
fisubl
out
aas
cmp
test
and
aas
jmp
rolb
fadds
leave
or
test
nop
in
dec
add
xor
cmp
cmp
lret
push
jl
inc
fildll
test
jb
lret
shlb
jmp
sbb
pushf
sub
out
cmpsb
sbb
mov
aam
sbb
xor
imul
loop
push
test
dec
imulb
jp
cmp
dec
jmp
stos
cmpsl
bound
adc
arpl
ds
inc
xchg
ljmp
mov
add
fidivrl
or
dec
adc
loop
flds
mov
mov
pop
out
jns
add
xchg
push
inc
cmp
ss
fisubrl
dec
mov
lock
outsb
ljmp
fisttps
test
sbb
pop
or
mov
mov
mov
add
xor
and
outsb
mov
sub
sub
xchg
adc
clts
adc
or
sub
movsl
in
dec
sub
mov
or
add
xchg
bound
mov
test
bts
jnp
jnp
loope
popa
sub
mov
cmp
adc
jp
sbb
pop
xor
pop
mov
pop
fbld
push
out
pop
cs
xchg
push
lahf
aam
loop
dec
xchg
inc
mov
jg
aaa
xor
stos
test
and
cmp
cld
scas
mov
add
pop
mov
xor
imul
mov
jge
or
repz
and
cmc
add
sar
mov
insl
imul
imul
lret
sub
sub
jbe
sub
movsb
pop
sub
addr16
xor
sbb
cmp
in
xchg
stc
mov
xor
sub
pop
imul
fucomip
xchg
jbe
or
fldt
movsl
rol
cltd
jge
and
push
call
cmpsl
mov
bound
sub
and
mov
push
popf
mov
xor
mov
dec
scas
iret
or
push
or
std
rolb
out
in
ljmp
dec
inc
das
mov
std
fcoml
add
jo
les
test
scas
sub
outsb
and
pusha
xchg
aas
sub
popa
sub
ret
adc
lds
jae
jbe
lods
in
out
xchg
and
push
ret
and
faddl
sub
popf
into
cs
mov
daa
divl
jg
xchg
loopne
insl
scas
inc
mov
mov
pop
add
leave
rcr
mov
xchg
ds
pop
sbb
popf
fsubrl
ja
and
mov
shrl
pop
pushf
adc
mov
inc
hlt
imul
jp
les
aam
daa
in
lret
test
loope
ljmp
pop
loopne
jns
inc
pop
and
mov
lret
sub
jo
add
adc
or
mov
or
xchg
mov
gs
push
test
imul
sub
sub
and
scas
cmpsl
cmp
scas
insl
push
sub
sbbb
aaa
sub
rolb
data16
sub
pusha
dec
clc
cltd
and
push
out
pop
lahf
in
call
mov
jge
xor
fiaddl
movsl
or
mov
jge
inc
lock
cld
movsb
sbb
and
mov
push
inc
popa
add
test
dec
mov
dec
xlat
add
push
inc
xchg
push
in
sub
and
js
xor
repz
loop
lea
jp
movsl
lea
imul
adc
cmp
push
iret
or
testb
xorl
inc
jmp
es
sbb
hlt
jne
adcb
inc
icebp
xor
das
mov
mov
enter
cld
decb
cmp
dec
int3
push
dec
std
sahf
push
jbe
sbb
push
stos
and
lock
dec
lahf
add
and
aam
out
add
lahf
inc
add
sub
lods
fidivrs
xchg
xor
ljmp
repnz
orl
and
mov
sbb
mov
and
mov
andl
lea
movzbl
and
mov
and
mov
mov
sub
orl
add
mov
mov
xor
orl
add
movl
jne
jmp
movl
cmpl
je
cmpl
jl
jmp
pushl
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
negl
sub
xor
mov
mov
mov
orl
xor
xor
adcl
sub
andl
sub
xor
mov
movl
mov
movl
mov
jmp
movl
cmpl
je
cmpl
jb
jmp
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
adcl
xor
subl
xor
sub
sub
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movzwl
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
jmp
mov
sbb
mov
add
adcl
imul
mov
adc
mov
mov
xor
mov
adcl
add
or
mov
mov
adc
mov
add
adcl
xor
adcl
mov
adcl
mov
mov
andl
add
addl
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
jmp
ficomps
xchg
pushf
sub
jl
jmp
jl
xchg
mov
cld
out
int3
iret
push
out
sahf
call
in
addr16
cmp
and
popa
out
mov
mov
sbbb
je
push
fstpl
stos
dec
or
repz
push
mov
xlat
mov
idivl
movsl
adc
clc
lcall
jnp
push
or
loop
imul
pusha
sub
xlat
mov
ret
dec
mov
push
gs
add
mul
add
mov
fisubrl
sbb
push
aas
icebp
inc
stc
push
sub
and
pushf
push
sbb
or
jb
loop
adc
je
lahf
es
mov
mov
cmp
icebp
xchg
sbb
cmp
fwait
dec
loopne
movsl
cmpl
fnstenv
fnstcw
inc
push
fdivrs
xor
inc
repnz
jl
scas
push
sub
pop
cltd
in
cmp
scas
add
xchg
rcll
iret
adc
mov
add
pop
pop
aad
aam
push
dec
sub
roll
and
insb
push
negb
push
xchg
dec
cmpl
mov
adc
sahf
or
lcall
fdivrp
or
jbe
mov
sub
pop
jg
and
push
pop
nop
dec
xor
fwait
push
mov
pop
mov
int
jl,pn
dec
lret
loopne
xor
cltd
sub
jge
frstor
and
in
ds
inc
scas
aad
repz
out
repz
jmp
cvtpi2ps
inc
outsb
pop
cmp
out
daa
mov
or
sub
aaa
cltd
decl
enter
daa
pop
lds
mov
stc
sbb
cltd
add
insb
mov
mov
rolb
and
aad
test
sub
lcall
lret
shrl
inc
cltd
ja
jae
cltd
sbb
xchg
cltd
xorb
mov
push
add
rorb
std
mov
sbb
or
mov
sbb
sub
inc
cmpsb
imul
fs
into
cmpsb
mov
stos
inc
jle
cmp
lods
ret
stos
data16
lds
mov
sbb
mov
jo
lea
push
and
cmpsl
daa
in
cmc
dec
fadd
push
das
push
sahf
ret
sub
pop
xchg
mov
jp
andl
stos
sbb
pop
cltd
jge
lock
lock
movb
and
scas
inc
scas
dec
jl
xlat
sub
mov
jmp
clc
mov
aad
sbb
cmc
stc
sub
inc
into
pop
js
fisubrs
and
xchg
xchg
dec
das
sbb
movsl
rorb
fdivl
dec
or
call
xchg
shll
aaa
jmp
ljmp
gs
rclb
mov
inc
and
lods
imul
cmp
xchg
sbb
outsb
and
push
push
inc
mov
adc
xor
shll
ss
in
xchg
add
aam
cmp
call
inc
adc
adc
in
inc
test
aaa
lea
mov
dec
or
or
or
in
divl
idivb
jecxz
fcmovne
xchg
sbb
lret
mov
xor
movsl
lock
xchg
lods
pushf
push
call
jmp
inc
out
mov
iret
icebp
pop
mov
iret
sbb
jne
jp
inc
adc
add
enter
and
mov
in
ds
scas
mov
lcall
add
lock
add
pop
std
shll
inc
mov
ljmp
pop
mov
aas
adc
mov
mov
mov
xor
xchg
cmpsb
ret
lret
sarl
push
push
push
adcl
enter
push
xchg
inc
sub
sbb
movsl
pop
icebp
popl
cmp
cwtl
add
lods
fwait
push
movsb
jl
pop
cmp
int3
push
add
mov
sarb
aad
adc
test
fdivrs
popf
idivb
mov
jecxz
in
mov
call
mov
shl
add
ja
imul
insl
push
cmp
jo
jne
jns
jno
lret
loop
pop
sub
sti
push
rcrl
sub
pop
xor
mov
xor
test
xchg
daa
mov
add
lret
out
cmpsb
out
mov
adc
adc
push
cs
sub
and
pop
mov
outsb
and
popf
mov
push
jg
jae
pop
and
lea
pop
je
fs
and
shll
sub
mov
fistl
cmpsb
int
sbb
ljmp
add
push
push
cmp
and
fcoml
add
mov
cmp
fisubrs
cmpb
out
xchg
addr16
icebp
cmpsl
aad
je
rolb
jbe
push
mov
inc
jnp
pop
add
xlat
push
push
pop
inc
sbb
push
scas
push
lods
jae
imul
scas
addl
mov
cmp
lds
push
mov
adc
xlat
jae
pop
pop
inc
or
cmp
lds
mov
mov
dec
jmp
sti
shll
rcll
imul
dec
xchg
mov
or
cs
mov
mov
push
mov
shlb
xchg
cmp
xor
adcb
mov
inc
mov
mov
stos
cs
cltd
xchg
add
dec
jnp
icebp
and
dec
and
daa
fwait
icebp
and
jecxz
std
mov
cs
cmpsb
imul
mov
lea
inc
xor
mov
push
jbe
je
jbe
movsb
dec
push
gs
dec
imul
adc
fsubr
add
and
sub
arpl
mov
mov
pop
iret
outsl
pop
lock
dec
sub
xchg
jb
jle
std
bound
scas
jno
dec
push
scas
insb
xor
nop
sub
lock
xchg
dec
dec
bound
push
fdivrs
sarl
es
clc
test
rcl
mov
loop
aas
cmp
pop
ljmp
xchg
mov
xchg
cmpsl
mov
cmp
nop
in
xchg
mov
adc
fcoms
lahf
jmp
or
xchg
out
fistpll
cltd
int
insl
fcoml
inc
repz
and
dec
mov
test
sbb
incb
or
setne
rclb
in
jae
fldl
mov
xlat
pop
inc
cmc
xor
xor
lock
jne
repz
pop
imul
ss
das
cmpb
clc
mov
sbb
sub
push
push
push
mov
and
icebp
inc
adc
push
ja
dec
mov
fsubrl
daa
xor
repz
sarl
sub
or
add
inc
rcrb
xor
push
daa
jo
xchg
dec
mov
stos
xor
xchg
stc
or
rcrb
rorl
inc
lods
or
xchg
cmc
inc
adc
inc
sar
scas
bound
in
jno
pushf
mov
jmp
int
fcoms
add
insb
and
popa
pop
xor
out
fidivrl
sub
add
push
mov
mov
dec
into
fdivrl
inc
push
mov
orl
mov
mov
adc
int
push
imul
adc
lock
adc
cwtl
in
cs
add
mov
push
hlt
inc
pop
or
iret
jg
lahf
stos
push
scas
xor
mov
cmp
xchg
scas
dec
and
adc
xchg
ret
ret
stos
pop
repnz
xchg
jecxz
sarl
int3
lds
adc
popa
mov
dec
push
sub
outsb
shrb
insb
jns
adc
pop
mov
repz
clc
push
xchg
es
and
movsb
adcl
fs
clc
dec
sahf
jecxz
fisubrs
loopnew
stos
les
lret
paddsb
icebp
sub
mov
insl
shl
fdivp
daa
jge
jmp
sub
loope
into
push
push
cld
leave
ja
je
out
cmp
or
and
rcll
sarl
jmp
sbb
jp
or
lods
cmp
test
inc
int3
jbe
dec
cltd
nop
xchg
mov
mov
call
mov
int3
dec
and
shll
incb
les
inc
or
movsl
cmp
or
imul
out
fnstenv
ret
outsb
mov
sti
shrl
dec
mov
xchg
sbb
jns
sti
dec
sarl
pop
mov
push
dec
cmp
push
and
das
cmc
inc
adc
mov
daa
scas
or
stos
cltd
sbb
xchg
mov
iret
push
pop
sbbb
clc
xor
jl
push
hlt
jnp
scas
adc
idivb
pop
add
test
add
mov
xor
xchg
push
jae
mov
push
in
icebp
pop
mov
mov
cs
ja
insb
sub
aam
fldlg2
push
mov
lock
inc
xchg
outsb
leave
or
cltd
sbb
sub
popa
std
push
out
lods
or
sbb
jnp
cmpsb
aaa
pop
jg
mov
pusha
cmp
outsl
push
cmp
jnp
or
imul
out
pop
and
testl
xor
mov
dec
xor
sbb
pushf
rcll
add
daa
add
adc
cs
xchg
cli
add
fadds
pop
int
jl
mov
jmp
jmp
test
xchg
and
xorb
popf
mov
bound
jb
pop
jmp
pop
adc
push
add
sub
xor
rcll
sub
mov
jnp
mov
jo
jge
mov
mov
outsb
and
aad
xchg
mov
pop
sub
xor
repnz
or
frstor
hlt
aam
xor
call
pop
lcall
aaa
push
fwait
jo
cmp
cs
jnp
and
cmp
in
xchg
jne
cs
enter
jo
addr16
mov
mov
xchg
sub
in
lahf
push
pop
lcall
cmp
jp
xor
dec
xor
jle
inc
out
sbb
pop
jecxz
mov
ja
sub
push
imul
mov
sub
push
mov
cmp
xchg
sub
mov
xor
divb
addb
sbb
fs
pushf
sbb
pop
stos
getsec
pop
repnz
invd
test
pop
outsl
int3
aam
push
sbb
call
scas
int
push
nop
add
loopne
call
inc
gs
ja
or
loope
pop
xor
test
punpckhwd
bound
mov
mov
leave
xor
int3
movsb
inc
mov
jle
iret
dec
sub
jae
and
in
mov
insl
popf
sbb
push
pushf
out
push
les
ds
hlt
xor
ja
pop
pop
cmpsl
div
aas
fwait
pop
inc
and
inc
jnp
mov
xchg
inc
add
icebp
in
pushf
stos
and
sub
fnstcw
add
int
xchg
inc
sbbb
sarl
fsubrs
sub
fwait
stc
dec
inc
xchg
sbb
test
xor
or
in
int
or
sbb
ret
cmpsl
hlt
ss
sub
dec
les
ljmp
outsl
insb
inc
xchg
cli
mov
cmp
mov
xchg
and
outsl
stc
xorl
xchg
or
popa
mov
adc
movsl
imul
pusha
or
cld
cmpsl
outsl
mov
ss
enter
mov
dec
daa
lods
jo
pop
xchg
pop
jp
test
mov
push
std
adc
lret
dec
aaa
push
dec
jo
clc
mov
aad
cmp
test
inc
xchg
outsb
ret
sbbl
adc
push
lds
add
sbb
insl
push
nop
ljmp
aad
dec
mov
adc
push
ret
lods
cwtl
loopne
arpl
push
sbb
cmc
fdivs
push
std
hlt
pop
jno
and
popa
sub
pop
aaa
int
in
les
xorb
jno
dec
out
jne
xchg
iret
cmp
sub
lods
adc
pop
pop
add
dec
push
add
dec
stc
add
ficoml
fwait
mov
adc
data16
add
jno
mov
scas
cmovg
in
cmp
push
sbb
jbe
andb
adcb
mov
js
aaa
mov
pushf
mov
mov
adc
addr16
int3
or
pop
push
sbb
test
std
inc
jecxz
gs
add
in
outsb
ljmp
cmp
es
mov
xor
cld
fdivl
adc
je
ss
push
out
jg
pop
mov
int
inc
push
xchg
pusha
hlt
mov
gs
repnz
and
jns
addr16
mov
pop
mov
daa
and
movsb
testb
lock
es
push
fcoml
mov
aaa
rcrl
cmpsb
iret
icebp
sarb
push
and
jle
mov
outsb
or
add
sbb
call
cmp
adc
rcrl
fdivrs
test
cmp
test
fwait
pop
sub
jne
xorb
cmp
dec
mov
jp
lods
xlat
push
add
xchg
and
push
pop
xor
and
jmp
addb
lret
cltd
xor
pushf
je
shrl
lods
mov
mov
icebp
cs
pop
stos
adc
or
pusha
fidivrl
lods
push
std
xchg
ja,pt
mov
dec
pop
enter
enter
fadds
div
add
and
ds
add
jl
sub
sbb
rorl
and
mov
mov
or
or
mov
aam
stos
push
push
jg
lods
leave
fmul
cmp
add
inc
icebp
xor
dec
imul
pop
sahf
pushf
jl
mov
sub
sbb
test
test
xor
adc
xchg
ds
cmp
dec
dec
lea
pusha
sub
jo
pusha
popaw
jp
xor
imul
lea
jp
sub
testl
xchg
adc
inc
mov
popa
icebp
aas
sub
jb
int3
inc
sbb
inc
xchg
mov
ljmp
sub
jb
loopne
lret
or
jecxz
mov
xchg
dec
mov
fbstp
or
dec
shrl
lret
mov
pop
push
cmpsl
leave
mov
push
aas
enter
shll
sti
dec
cmp
ds
fwait
add
xchg
cmp
ja
outsb
mov
jnp
sti
iret
push
push
scas
jmp
dec
repz
pop
int3
test
das
sar
inc
loopne
fidivs
ja
test
push
stos
jno
fwait
shrb
mov
cmpsb
leave
jns
inc
add
push
stos
adc
push
push
xchg
add
xor
leave
push
mov
inc
pop
sub
jl
lahf
int
dec
subl
into
lds
lret
xchg
aas
xor
mov
int3
jae
or
sbb
es
rcrb
ja
jo
rolb
jno
div
int
pop
pop
arpl
xchg
lds
imul
stos
push
movl
int
outsl
jb
and
loopne
imul
enter
pop
call
mov
int3
xchg
jbe
or
dec
mov
leave
pop
jbe
pop
inc
jne
clc
push
sbbb
cmp
mov
jp
jb
lods
dec
out
fsubl
sub
lea
iret
sbb
push
cmc
mov
push
std
out
int
jbe
lahf
adc
cmpsb
ret
jecxz
pop
rcll
iret
lods
lcall
dec
mov
sbb
cmp
jbe
lods
inc
add
sarl
mov
add
xchg
jns
pop
aam
int
mov
mov
dec
or
jl
sub
jbe
ljmp
into
xchg
jmp
sti
push
fdiv
xchg
push
pop
push
jg
sarl
adc
jp
insb
outsl
movsl
insl
sbb
cmp
mov
iret
mov
jb
pop
dec
adc
sbb
jle
fwait
gs
ja
adc
cmpb
push
mov
jne
scas
ds
int
rorb
enter
jl
out
notl
call
push
daa
pop
jle
fs
mov
adc
sbb
push
int
in
and
fcmovb
push
enter
push
pop
jb
mov
arpl
jmp
push
fcmove
xchg
cltd
sub
and
push
and
push
scas
je
test
shl
loope
mov
xor
dec
shrb
stos
push
clc
push
mov
ret
rolb
xor
fnstcw
push
repnz
jp
xchg
pusha
or
loopne
push
dec
repz
lds
stos
leave
test
fnstsw
push
xorl
and
stos
adc
xor
test
mov
add
jecxz
stos
cwtl
pushf
rorl
movsl
pop
mov
and
pop
pop
test
sub
mov
dec
inc
xorb
pop
inc
xchg
xchg
es
mov
ja
dec
in
push
popf
stos
inc
popf
sub
imul
mov
push
addps
clc
cmp
cmc
mov
mov
add
xor
nop
mov
jne
sbb
inc
and
arpl
stos
mov
call
les
fstps
fnstcw
dec
out
xchg
adc
xchg
inc
cmc
or
jbe
cmc
xor
ljmp
data16
dec
in
insb
aas
insb
or
xchg
cli
add
mov
or
fs
push
das
pop
popf
lret
push
dec
loop
mov
out
aam
test
hlt
and
mov
gs
push
push
push
and
fiaddl
cs
push
pusha
pop
inc
repz
xor
loope
std
mov
pop
lret
leave
scas
push
sti
pop
imul
adc
push
imul
mov
mov
das
rclb
xchg
iret
loop
inc
push
mov
adc
add
in
cmp
jb
test
cmp
jmp
mov
xchg
mov
mov
fsts
push
add
das
mov
jo
ja
or
mov
jl
in
dec
shll
sti
pop
inc
pop
jnp
push
mov
push
and
push
repz
lahf
fidivrs
inc
lahf
push
inc
jnp
out
jne
fcmovne
sub
ficoml
lods
flds
lods
pop
xchg
sbb
movsl
shr
jne
iret
pop
jae
fcmove
lcall
mov
inc
pop
enter
xchg
insl
push
xchg
adc
fcoms
lcall
jmp
int
mov
dec
xchg
and
jge
scas
stc
jnp
popl
adc
jb
xchg
mov
push
lahf
cmc
inc
pop
add
inc
insl
mov
rcrl
push
pop
das
pop
out
fwait
loope
mov
adc
jb
mov
and
dec
pop
push
dec
sahf
inc
mov
push
call
negl
xor
mov
adc
mov
jl
pop
or
icebp
imul
or
xchg
imul
imul
dec
dec
xor
adc
imull
lahf
push
scas
ljmp
in
jp
popf
ljmp
lcall
lock
pop
sahf
int3
inc
shl
mov
sahf
cmpb
mov
bnd
lds
icebp
outsb
push
rcll
mul
mov
and
bound
fldenv
jl
push
add
pusha
aaa
nop
mov
push
daa
push
push
fidivrl
pushf
push
mov
cld
mov
in
iret
ret
cmp
adc
and
les
subl
sub
push
or
or
sti
cs
es
add
les
cmp
lods
mov
hlt
daa
dec
repnz
xchg
lahf
sbb
test
jbe
xchg
rcrl
out
pusha
mov
cwtl
mov
movsb
cmp
sub
mov
dec
inc
cmp
and
fs
adc
dec
pop
jno
aam
pop
in
sbb
repnz
lret
pop
xor
push
ffreep
aad
push
or
enter
imul
lcall
test
cmp
mov
jae
xor
push
out
xchg
aaa
fwait
jmp
imul
sti
daa
xchg
mov
xor
xlat
es
dec
mov
pusha
cltd
imul
scas
in
or
pushf
mov
sbb
int
adc
into
dec
mov
push
test
pop
add
rcl
dec
out
andl
je
leave
ja
inc
iret
xchg
lret
add
ljmp
push
test
sti
js
jne
lea
sub
add
pop
pop
faddl
pop
xor
jl
lock
fnop
bnd
mov
dec
mov
add
sbb
lret
xchg
jne
push
ror
dec
and
imull
adc
inc
les
repz
aad
mov
mov
cmp
or
inc
sahf
aad
push
mov
lds
cmp
inc
cmp
xor
pop
dec
pop
xor
dec
sbb
mov
aad
loop
cmpsl
pop
std
movsb
popf
pop
sti
cmpsl
cmp
dec
ss
movsb
cmp
pusha
fdiv
pushf
jl
mov
lcall
mov
fidivrl
pusha
imul
mov
pop
inc
orl
cmp
les
test
popa
jb
cmp
in
fsubr
sub
js
sbb
ret
pop
lods
xchg
mov
test
fcmovb
lcall
mov
xor
mov
jecxz
gs
cmp
push
mov
int3
mov
outsb
xchg
sbb
icebp
out
iret
stc
xor
add
insb
in
sub
jnp
mov
outsl
sub
cmp
mov
jmp
daa
jg
sbb
adc
mov
jl
inc
in
repnz
lds
in
xchg
cmp
adc
cmp
sub
shll
jecxz
jnp
out
inc
lcall
test
mov
int3
shrb
notl
fsubl
cli
pushf
cltd
sub
pop
test
scas
int3
testb
xchg
jne
stc
mov
outsl
xorl
pop
mov
and
mov
xchg
sbb
inc
sub
mov
and
sbb
into
ficoms
sub
jp
inc
add
adc
jo
xchg
popf
cmp
stc
adc
mov
repz
and
pop
fisubs
out
pop
adc
and
sbb
dec
addb
inc
out
push
mov
stos
xlat
xchg
addr16
fwait
sbb
push
mov
cmpsl
iret
fnsave
stc
dec
movsb
sbb
std
dec
repnz
adc
sbb
pop
call
int
int3
xchg
or
cwtl
test
inc
xchg
xor
cltd
jae
sub
test
ret
out
lods
and
fistl
dec
dec
fs
es
or
fwait
out
add
es
xchg
sub
push
mov
mov
xor
mov
cs
mov
jb
dec
shll
pop
sub
inc
fdivs
rolb
int3
xor
dec
cmp
aaa
and
xchg
xchg
ud2
xchg
add
dec
sbb
add
jge
lcall
push
test
neg
dec
enter
xor
sub
and
cld
mov
dec
and
popf
and
stos
xor
aad
lret
clc
or
xor
dec
lahf
cmpsl
js
inc
sbb
in
movsb
popa
loop
cmp
cmpsl
jnp
mov
pop
pop
iret
popf
ror
cli
out
cmp
jno
out
xchg
imul
xchg
cmc
lods
fidivs
and
mov
push
outsl
je
inc
lcall
push
adc
outsb
push
inc
sbb
mov
mov
dec
loop
pop
jecxz
shld
push
mov
fidivs
adcl
lods
pop
clc
outsb
inc
jle
out
pop
dec
bound
loop
insb
xchg
andb
jp
out
outsb
jae
sbb
xchg
push
push
mov
mov
sbb
pop
in
aas
inc
mov
call
clc
or
jo
add
inc
sub
cmc
and
cmovnp
shlb
clc
scas
mov
mov
insl
adc
jno
xchg
bound
push
scas
fistpll
ret
inc
inc
jne
xor
mov
and
jo
sbb
sbbl
mov
push
mov
xchg
scas
adc
xchg
fdivrs
out
loope
pop
lret
adc
fs
sbb
xor
std
mov
out
pusha
stc
xchg
mov
jmp
mov
jle
mov
push
push
jge
dec
sub
fcomp
fwait
inc
mov
dec
sub
sbb
mov
mulb
stos
je
aad
cmp
add
sbb
loopne
fsubs
or
outsb
movsl
lock
and
xchg
or
adc
es
and
xchg
daa
pop
xchg
push
bound
inc
mov
icebp
pop
dec
fld
imul
pop
push
ja
mov
jge
sti
dec
xor
mov
shll
ljmp
sub
test
or
jne
icebp
ret
push
dec
jge
mov
les
inc
mov
bound
pop
mov
fadd
sbb
jp
repz
lret
sahf
addb
or
pop
and
out
and
stos
cmp
pop
jg
xchg
call
std
mov
test
pop
fiaddl
loope
cli
sbb
dec
dec
test
mov
ret
xor
mov
xchg
adc
mov
dec
es
mov
inc
inc
in
xchg
dec
nop
mov
mov
out
cwtl
or
xchg
arpl
out
inc
mov
jne
adc
mov
pop
enter
fimull
repz
shl
filds
dec
popa
cmp
imul
sbb
add
inc
cltd
out
inc
fiaddl
call
jmp
aam
sub
push
sub
out
xchg
jmp
sbb
fstl
or
ret
inc
push
mov
mov
negb
fildl
pop
mov
jne
repz
fstps
sbb
mov
dec
push
mov
or
cmp
popa
jbe
xchg
jle
dec
pop
cmp
rolb
or
and
repnz
stos
dec
mov
or
fwait
addr16
dec
xchg
jge
shrb
mov
push
dec
les
out
neg
fcoms
dec
aam
cs
mov
and
jmp
inc
mov
push
mov
cmp
std
cmpsl
push
sub
inc
or
ret
subb
repz
loop
repz
popf
cmp
pop
aaa
ja
or
push
xor
jnp
out
fimuls
test
bound
sub
xor
fs
stos
sub
dec
push
cli
enter
lahf
popf
mov
lods
mov
xchg
jbe
mov
cwtl
loopne
stos
jg
pusha
inc
pop
fs
adc
fadds
stc
lahf
ds
mov
test
lahf
cli
mov
mov
inc
imul
imul
cltd
sbb
push
xor
cltd
sbb
ljmp
pop
push
data16
sbb
cmpsb
in
fistl
or
mov
outsl
inc
pop
xchg
scas
arpl
icebp
cmp
loop
cmp
sbb
push
lcall
pop
mulb
xchg
jle
pop
jp
dec
popa
sahf
rcrb
mov
inc
mov
loope
cmpb
mov
arpl
mov
mov
mov
jle
or
mov
lahf
or
fs
lock
cmp
enter
hlt
scas
inc
scas
dec
ret
jbe
push
jno
stos
mulb
xor
cmp
div
push
fisubl
and
jge
pop
pop
shll
shll
movsl
repz
pop
xchg
mov
xor
int
cmpsl
mov
clc
rolb
ds
mov
and
mov
adc
repnz
scas
pushf
cwtl
scas
and
inc
cmp
jmpw
sub
lea
lret
rcr
out
xor
ljmp
mov
imul
mov
das
in
icebp
jbe
adc
dec
pop
call
je
int
mov
aaa
add
call
or
test
ret
adc
sti
mov
push
cmp
fsubrl
cmp
fstpl
shll
add
xlat
push
dec
fcompl
int3
push
or
movsl
imul
sub
xchg
into
cwtl
dec
ss
test
xlat
repz
leave
mov
xchg
jmp
mov
loopne
divb
mov
aas
push
xor
adc
jns
in
push
stos
out
mov
popa
pushl
add
pop
sbbb
inc
test
jae
repnz
roll
pop
jne
sbb
shrl
jp
adc
lcall
lret
pop
inc
fisttpl
lcallw
mov
rcrl
sbb
mov
rorl
jbe
push
sub
test
jno
add
lock
inc
cmc
or
lods
sti
mov
and
mov
adc
add
inc
insl
clc
adc
mov
bound
mov
sbb
sub
fimuls
xor
cmpsb
rcrl
dec
jle
fisttpll
out
inc
push
and
adc
jo
fs
cli
rcrl
jl
or
add
mov
mov
and
mov
mov
mov
pop
mov
out
adc
jae
repz
or
cmp
test
xchg
jne
cmpsl
out
outsb
sarb
movsb
inc
scas
cmp
inc
xchg
and
xchg
inc
mov
imul
pushf
push
leave
scas
testl
dec
leave
xor
lcall
stc
xor
inc
push
adc
lcall
push
jo
mov
mov
add
or
xchg
out
xchg
mov
xchg
lock
adc
shll
divb
inc
jae
das
pop
cmp
jl
xor
cmpsl
imul
xor
repnz
add
cmc
insl
outsl
add
shrb
dec
mov
dec
in
out
lret
test
in
jl
imul
enter
fnsave
in
rorw
icebp
push
mov
and
and
cmp
xor
xchg
push
pop
add
repz
inc
cmp
lcall
jb
xor
push
dec
mov
lret
adc
scas
cmp
leave
test
test
test
dec
jnp
sti
aam
into
out
repnz
es
dec
add
adc
outsl
scas
xchg
mov
test
test
xchg
push
cmc
movsl
mov
push
stc
mov
test
jle
sbb
mov
or
sbb
lret
aaa
adc
inc
cwtl
cmc
std
inc
lret
cmp
inc
pop
insb
shlb
pop
subl
in
mov
loopne
lods
stos
fadds
cld
xchg
push
jecxz
rol
fstpl
jg
jecxz
scas
inc
sub
loopne
lret
sbb
jmp
sarb
notb
popa
or
or
jmp
test
xchg
idivb
lock
ret
cmp
ret
ss
mov
inc
push
jb
sub
lcall
test
ljmp
imul
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
jmp
rcrb
and
rorl
movsl
test
jl
pop
jl
sbb
in
lgs
dec
lods
or
inc
adc
shlb
jp
mov
adcl
test
mov
fs
cmp
ds
rcrb
dec
inc
movsb
xor
dec
xor
loope
sbb
arpl
ret
fbld
ja
repnz
lock
sub
cmpsl
sub
cld
xchg
cmp
imul
int3
dec
mov
das
bound
mov
cmp
jns
scas
pop
icebp
out
lea
add
fs
mov
pop
inc
les
sbb
push
dec
push
and
and
dec
dec
push
jge
pushf
or
lock
and
xchg
loope
adc
ja
mov
cmc
lahf
xchg
cmp
dec
test
out
xchg
lea
mov
stos
adc
out
ficoml
sbb
push
fstps
je
xorb
mov
es
fcoms
push
jg
stos
aas
push
cmc
scas
andb
mov
addl
lods
testl
int3
jno
clc
inc
mov
out
or
push
push
mov
sbb
fldl2e
rorb
add
call
push
gs
xor
mull
pop
fstl
xchg
jb
addr16
call
xor
pop
xchg
cwtl
sbbb
jae
mov
imul
and
mov
mov
pop
or
mov
inc
scas
pop
sbb
xchg
mov
add
js
add
pusha
arpl
mov
insb
fs
shl
jg
das
or
adc
sub
pop
stos
mov
mov
mov
pop
sub
fs
add
std
add
mov
pop
ss
insb
and
add
int3
inc
fs
add
sbb
cmp
xor
jns
mov
cmpsl
pop
insb
or
push
xlat
adc
mov
orb
lods
mulb
test
lret
mov
adc
sar
int3
popf
arpl
nop
xchg
push
xchg
movsl
mov
dec
mov
mov
jnp
out
mov
mov
pushf
jns
xchg
stos
test
sti
imul
cltd
push
and
push
push
ds
xor
cmp
leave
cmpsl
sub
out
std
rol
mov
push
emms
out
aaa
out
ret
jo
push
test
adc
xchg
sbb
sub
mov
lea
lock
daa
add
xor
inc
mov
ds
adc
insb
mov
cmp
out
adc
jecxz
iret
dec
faddl
inc
in
adcl
pop
mov
lea
dec
sbb
lret
mov
mov
stos
call
adc
shlb
daa
push
pusha
inc
scas
mov
jg
add
es
sbb
shll
sbb
push
lahf
adc
mov
fistpll
dec
dec
ret
addr16
jg
movb
arpl
and
jmp
lcall
or
jle
sub
movsb
xchg
das
data16
xchg
jecxz
popf
stos
dec
push
and
stc
jno
dec
inc
adc
xor
sbb
inc
or
stos
push
ret
dec
cmpsl
inc
loop
lret
andl
dec
fldenv
sarl
xchg
out
jno
add
das
es
fdiv
movsl
out
push
stos
mov
inc
imul
fsubl
nop
fisubl
dec
xchg
and
fists
ret
xlat
push
notl
sti
mov
pusha
movsb
push
push
call
in
loopne
gs
adc
jae
jg
and
jne
test
sahf
rolb
nop
sub
push
scas
cs
mov
mov
idivb
sub
xchg
pop
ljmp
mov
lea
shrb
jg
test
mov
jp
sarb
gs
push
pop
sbb
xor
data16
arpl
in
imul
xchg
xorl
or
add
push
je
pop
add
imul
ret
bnd
in
cld
xor
sbb
xor
loope,pt
ljmp
cmp
push
xor
insb
and
ljmp
mov
out
xlat
aam
dec
add
int3
jb
outsb
scas
pop
hlt
fimull
xor
sub
jne
inc
pop
adcb
sarb
stos
call
mov
inc
fs
xor
xlat
xchg
lcall
in
sbb
fiaddl
shl
pushf
sub
push
aam
jo
push
in
stc
fidivs
fs
cs
mov
pop
ljmp
decl
add
rcrl
add
pop
mov
sbb
jge
frstor
outsl
shrl
and
ljmp
fld
xchg
out
loope
popl
js
aaa
cmp
mov
dec
testb
jo
lret
subl
or
ficoms
mov
mov
sahf
dec
xchg
push
mov
ret
es
sbb
popa
xchg
push
ss
dec
mov
aas
jns
iret
das
pop
ret
rol
int
stos
cld
mov
repnz
push
and
xor
mov
xor
call
adc
fidivl
shll
mov
push
jmp
out
jecxz
mov
jle
out
add
ss
push
ja
mov
push
aaa
adc
outsl
ss
fcoms
pushf
mov
sbb
es
dec
adc
adc
pop
movsl
call
loopne
xor
add
cltd
movsl
pushl
in
sub
out
clc
es
adc
stos
rolb
insl
ja
and
mov
lcall
mov
fildl
xchg
adc
push
lret
test
mov
add
rcrl
and
hlt
int3
add
cltd
adc
outsl
mov
adc
xchg
mov
jle
pop
aaa
and
inc
aad
and
insl
stos
rolb
pop
inc
aaa
bound
inc
stc
mov
and
pop
cltd
mov
jns
out
imull
mov
pop
enter
loope
cwtl
je
addb
lea
testb
jg
in
repnz
test
int3
lret
bnd
aaa
cmp
aaa
movsb
in
dec
cmpsb
cmp
cmp
sub
aam
adc
xchg
push
adc
data16
js
cmpsb
sub
adc
adc
push
popa
dec
jge
push
fidivl
outsl
pop
pop
leave
xchg
jbe
adc
sub
mov
popf
rcrb
nopl
shlb
repnz
dec
push
ret
xor
shll
loope
sbb
pushl
and
cmpl
mov
cmpsb
fs
push
xchg
roll
repz
lods
add
add
pop
add
sub
xchg
iret
aad
sahf
imul
lods
add
fbstp
pop
imul
xor
dec
and
pop
dec
jbe
cmpsl
mov
jecxz
xchg
mov
imul
mov
cmpl
mov
inc
adc
int
sub
setl
test
test
jg
pop
and
pop
push
icebp
testb
dec
mov
cmc
cli
enter
icebp
pop
popf
mov
icebp
xchg
lret
dec
fs
push
xchg
ss
dec
ja
aas
stos
mov
lock
jns
mov
int
xor
push
sbb
push
out
mov
jg
pop
mov
aas
mov
sahf
jl
xchg
mov
sbb
mov
inc
hlt
push
icebp
push
adc
test
int
push
mov
dec
ret
ficoml
sub
mov
mov
push
fmull
xor
mov
adcb
pop
fnsave
mov
jne
std
pusha
outsb
xorps
fst
xchg
adc
pusha
je
or
int
push
in
loop
data16
xlat
movsl
sbb
fstpl
lods
pop
cmc
addl
je
es
daa
sbb
daa
adc
add
mov
sahf
mov
test
jns
test
cld
jns
push
push
mov
mov
shlb
pop
xchg
adc
and
dec
cmp
mov
ficoms
filds
sbb
pop
out
cmpsb
push
push
push
inc
mov
xchg
inc
fcmovnb
cld
ds
or
add
xor
enter
ficoms
fnstsw
cmpsl
pop
inc
rcll
dec
lock
xchg
mov
xlat
das
pop
lds
lret
mov
sbb
dec
dec
add
pop
adc
mov
gs
ljmp
imul
sahf
das
cmp
outsl
and
mov
sbb
push
outsl
shr
scas
imul
in
fldcw
or
fnsave
je
pop
cmp
std
push
jg
call
lods
inc
lret
rorb
test
lret
xor
cmp
mov
in
jno
insb
scas
mov
pop
jg
push
aad
imul
mov
xlat
cli
or
add
and
jae
shll
lock
lcall
call
sbb
dec
mov
xor
xlat
cwtl
sbb
xor
cli
push
sbb
call
shll
aas
dec
mov
sbbl
mov
arpl
test
pop
in
pop
out
lahf
sub
loope
mov
popf
in
sub
pusha
pop
enter
mov
addr16
inc
cmpsl
iret
dec
cmp
sub
ss
dec
xchg
insl
std
fisubl
xor
mov
xor
insl
fisubs
in
nop
sub
pop
rcrl
xchg
add
clc
xchg
jbe
and
mov
ds
lret
mov
pop
cmp
inc
jmp
pop
jl
mov
pop
inc
dec
inc
xor
popa
popa
pop
enter
movsl
repz
movsl
jb
popf
mov
flds
push
or
or
ss
cwtl
mov
sbb
pop
cmc
jo
jns
push
cmc
cmc
and
pop
pushf
jmp
mov
fs
sti
movsl
pop
mov
and
pop
inc
add
mov
dec
sbbl
jge
shl
sbbl
pop
jo
aad
mov
mov
jmp
xchg
mov
xor
frstor
cmpsl
dec
sub
mov
lcall
iret
mul
mov
push
sub
and
pop
ja
sbb
and
pop
jb
popa
loop
fwait
xchg
pop
mov
and
jne
lret
jno
inc
mov
insl
sbb
ds
loope
stos
dec
sbb
ds
dec
shrb
lret
cwtl
in
xor
mov
mov
fbld
mov
iret
adc
loop
add
sbb
lret
out
mov
jp
bnd
xor
scas
movsl
xchg
sbb
sub
dec
int3
cmp
shlb
jae
add
push
push
and
outsb
or
xchg
outsb
cli
cld
cmpsl
fs
jnp,pn
adc
repnz
out
dec
cmpb
jp
shlb
xchg
loop
sub
pop
inc
pop
xchg
inc
fwait
mov
sbb
daa
xchg
fld
rcrb
sub
jne
jnp
scas
pop
pop
mov
je
mov
jbe
cs
push
aaa
or
lret
push
add
orl
xchg
inc
jb
or
fmull
pop
sbb
mov
cmc
fs
imul
dec
mov
insb
and
sub
aas
cmc
jne
icebp
pop
add
in
scas
adc
jo
ret
cmpsb
xor
ja
iret
daa
jo
mov
mov
push
push
sahf
mov
scas
call
jge
dec
inc
xor
imul
jns
test
shll
lret
iret
aas
jle
cmpl
mov
int3
sbb
or
dec
fcmovnbe
ds
mov
aam
add
imul
sbb
jae
enter
arpl
xchg
mov
sahf
imul
daa
mov
inc
sbb
jge
mov
add
or
jmp
xor
pop
stos
bound
insl
mov
stos
mov
cltd
data16
jge
outsl
xor
es
in
mov
pop
lcall
test
dec
mov
daa
fcoms
sub
pop
mov
or
mov
pop
xchg
push
pop
jnp
shlb
jle
add
sub
xchg
test
mov
lea
imul
cmp
jmp
dec
mov
adcl
mov
divb
clc
stc
and
jo
pop
adc
xor
mull
mov
daa
pop
pop
je
aam
ss
sti
jo
sahf
jne
mov
sbb
mov
push
sahf
inc
inc
jp
clc
insl
rcr
cmc
je
pop
inc
mov
mov
ret
out
inc
fisttpl
stc
and
pop
dec
pusha
add
ret
call
dec
mov
ja
pop
adc
and
push
jnp
scas
jo
insl
jnp
mov
repz
sti
xor
or
aam
testl
xchg
mov
mov
adc
sbb
and
jbe
loopne
sti
adcb
movsb
mov
inc
es
push
in
xchg
daa
cmc
jo
cmp
clc
jns
sub
add
or
sub
lahf
xor
lret
in
ljmp
test
loop
dec
pop
negl
pop
test
pusha
ds
xchg
jp
xchg
cmp
jb
inc
jae
push
cmpsb
daa
andl
out
mov
cwtl
sbb
rorb
incl
int
movb
mov
rorl
pop
jae
dec
sbb
and
mov
sbb
cmp
add
cmc
jb
loope
outsb
adc
jmp
ss
movsl
je
mov
cli
lds
jnp
call
sub
ljmp
mov
insb
xor
popa
jo
xor
push
imul
push
in
je
icebp
pop
sub
incl
inc
inc
ja
notl
pop
cmp
or
outsw
arpl
ret
push
sub
push
mov
fcomp
fisubs
leave
jecxz
xchg
aad
jmp
loop
mov
dec
iret
imul
movsb
dec
or
cmp
pop
adc
sbb
adc
movsl
mov
das
push
xchg
bound
cmp
xchg
mov
stos
jle
ljmp
iret
adc
and
in
mov
mov
jmp
dec
and
mov
shlb
lea
es
sahf
lahf
aas
insb
sub
lea
mov
jo
push
inc
movsb
cmpsb
jecxz
mov
adc
out
push
test
jne
sbbb
and
jp
and
lods
fmul
dec
cmpsb
mov
push
mov
jge
sub
adc
push
xchg
sahf
xchg
cmpsb
std
mov
and
jle
sbb
xor
mov
mov
adc
clc
pop
fcom
adc
jmp
fdivs
add
data16
jnp
hlt
cmpsl
dec
mov
sahf
clc
out
orl
lret
mov
decl
or
addr16
fistps
roll
std
int3
pop
push
push
pop
mov
push
pop
out
loop
testb
lret
mov
into
and
push
cs
cld
jecxz
aam
mov
mov
aad
je
aas
xor
cmp
mov
dec
xchg
fwait
jb
icebp
mov
popf
push
int3
lcall
mov
andb
fs
adc
jge
jle
mov
pushf
pop
subb
jmp
or
cmp
and
or
mov
mov
ja
lret
pop
dec
in
jecxz
cmp
inc
or
push
arpl
sahf
ljmp
dec
loop
in
jae
fsubl
pop
ss
pop
cmp
mov
cmp
or
aaa
inc
mov
daa
pop
pop
out
stos
scas
push
dec
pusha
stc
xchg
inc
icebp
add
aam
dec
iret
stos
xchg
mov
jp
cmpsb
les
lods
jecxz
pushf
mov
das
scas
xor
xchg
sbb
pushf
mov
int
je
mov
out
add
dec
push
jbe
repz
out
add
ret
addr16
xchg
and
sub
data16
cwtl
sub
mov
and
inc
jo
jo
mov
pop
hlt
mov
lds
rorb
in
mov
cltd
push
push
dec
sub
daa
pop
data16
ja
stc
addr16
hlt
negl
mov
icebp
xor
and
cli
add
inc
mov
jge
mov
adc
out
pop
jbe
mov
push
xlat
fwait
cmpsb
test
jmp
push
inc
out
into
popf
pop
fisttps
pop
pusha
lret
mov
fdivp
sbb
inc
mov
mov
add
cmpsl
pop
or
loop,pn
xor
repz
inc
cs
imulb
int3
das
mov
out
mov
imul
lods
data16
cmp
push
sbb
int
lods
cli
in
mov
adc
adc
jp
push
push
cmpsb
cltd
adc
out
jp
mov
shl
arpl
insb
jmp
mov
dec
sub
inc
enter
push
cmc
add
jnp
push
inc
mov
cmp
jbe
repnz
inc
fisttpll
xchg
cwtl
dec
sbbb
nop
adc
mov
pusha
adc
aaa
or
xchg
or
test
xchg
dec
sarb
mov
clc
xor
in
jo
pushf
scas
out
mov
sub
mov
push
jae
and
mov
cmp
inc
cmp
shlb
test
pop
fadd
push
add
push
leave
fstpl
lods
icebp
inc
mov
push
movsb
test
in
pusha
jns
jb
xlat
mov
push
or
push
xchg
pop
sbb
insl
sbbl
sub
dec
neg
inc
sbbl
mov
push
pop
cwtl
xor
cmp
jnp
push
fiaddl
xchg
sbb
mov
dec
sub
ret
cmp
sahf
sbb
xor
inc
in
popf
mov
orb
and
imul
dec
aas
pop
jae
in
pop
leave
stos
mov
out
push
fcmove
dec
sbb
popa
and
stc
bound
test
test
inc
iret
sub
xor
mov
mov
leave
mov
sbb
ret
jo
jnp
adc
sub
loopne
mov
and
mov
in
shll
inc
dec
dec
fwait
stos
btc
data16
pusha
fwait
push
cli
xor
mov
ficoml
pop
xchg
cmc
pop
pminsw
lods
push
and
lea
pop
xlat
movb
sbb
cmp
sbb
out
test
lcall
gs
jb
pop
in
pop
hlt
daa
ret
xor
insb
dec
insl
rclb
lahf
bound
ret
mov
and
shl
daa
enter
add
dec
adc
ja
jae
dec
add
mov
inc
sahf
in
loop
popa
and
test
sti
iret
test
adc
mov
test
push
add
in
fwait
cmp
sub
cld
out
add
scas
inc
add
fldcw
js
enter
cmp
or
inc
inc
int
pop
mov
rcl
jp
cmp
push
mov
sub
mov
das
inc
pop
dec
sbb
cld
movsl
mov
out
mov
je
jecxz
push
mov
inc
mov
ret
in
popa
mov
mov
ss
pop
cmp
popf
or
out
hlt
rorl
cmpsl
in
pop
aam
ja
rclb
std
lahf
mov
popf
push
insb
jno
dec
adc
pop
cmc
call
sbb
adc
cmc
push
xchg
pop
dec
test
pop
push
push
leave
mov
cmp
push
je
xor
cmp
in
jno
xchg
incl
aad
xor
movsl
mov
sub
js
pop
stos
xchg
and
xor
mov
data16
into
adc
pop
cmp
in
movsb
stos
mov
iret
mov
rcrb
je
inc
adcb
adc
xor
dec
out
mov
push
cmpsl
popa
and
rcrb
mov
bound
into
sbb
imul
cmp
jne
sahf
dec
xchg
fsubrs
cltd
pop
into
cmp
scas
push
ds
int3
mov
fstps
pushf
cmp
hlt
xchg
mov
cmpsl
frstor
jge
adc
ds
fidivs
lcall
loop
dec
adc
inc
mov
mov
adc
popf
adc
jg
dec
or
in
loop
xor
mov
fwait
insl
shll
mov
addb
ljmp
imul
mov
mov
ss
sub
icebp
pusha
xor
mov
outsb
jge
les
add
sub
or
lret
pusha
ljmp
mov
cmp
and
xchg
push
mov
int
and
mov
jge
addb
lods
or
cwtl
pop
jg
push
ja
push
adc
mov
inc
mov
adc
into
lret
sbbb
inc
cmpsl
lea
sbb
xor
fsts
cmp
icebp
push
push
cmp
pop
mov
cmc
inc
mov
sahf
lret
in
shl
fwait
mov
or
or
fwait
jmp
repnz
cltd
movsl
and
iret
push
jne
pop
insl
outsl
lret
push
fsub
pop
xchg
mov
repz
call
fsubl
out
push
and
es
mov
or
lret
push
push
aad
xchg
mov
push
test
pushf
movsl
lahf
cmp
lods
ljmp
or
repnz
int
mov
lds
sarb
repnz
and
call
mov
pop
xchg
cmc
nop
xor
dec
aaa
scas
xchg
call
pop
mov
jns
jo
loop
cmp
jno
xchg
push
or
jecxz
push
in
stc
push
pop
xchg
pop
xlat
or
mov
inc
in
in
push
xor
push
movsl
inc
mov
test
sub
fcmove
mov
loope
or
hlt
gs
sbb
push
or
leave
push
fisubrl
sti
jecxz
pop
test
jbe
adc
movsl
xchg
icebp
lea
aaa
jl
movsb
inc
cmp
pop
push
cmpsl
loope
push
ret
cwtl
mov
out
add
inc
into
add
scas
popf
rolb
aaa
lock
inc
inc
inc
pushf
enter
cmp
out
aad
lret
xchg
and
ret
lret
jp
mov
lret
clc
je
dec
push
cmovg
ret
icebp
xlat
inc
int
mov
sahf
adc
rcll
stc
lahf
outsl
inc
shrb
push
xchg
cmp
mov
stc
ds
sub
loope
sbb
jg
fs
in
je
fidivrl
rolb
jg
out
push
fs
jb
mov
lret
mov
jp
ficompl
mov
aas
into
ljmp
cmpsb
jl
mov
mov
test
imul
adc
sbb
arpl
dec
data16
stc
daa
xchg
xor
mov
sub
adc
call
out
addr16
stos
push
je
je
push
lahf
xor
data16
add
sub
or
inc
xor
outsb
or
add
mov
subl
js
xchg
push
push
roll
push
dec
iret
popa
sbb
push
in
scas
mov
cs
push
lahf
mov
ja
push
test
or
enter
jecxz
mov
orl
adc
pusha
rorl
add
in
rclb
push
clc
jmp
and
inc
sbb
push
pop
arpl
adcl
sbb
or
push
data16
push
jb
jmp
stos
stc
xor
aam
pushf
dec
pop
add
insl
xchg
jno
lds
push
mov
imul
push
or
ret
inc
lcall
push
xchg
jno
cmpb
roll
ljmp
jecxz
mov
into
pop
dec
add
add
or
aaa
in
or
lahf
lret
je
push
jl
dec
sbb
mov
ret
push
or
in
adc
xorps
dec
js
sub
lret
test
addr16
sub
subb
mov
add
push
out
mov
out
sub
frstor
adc
fwait
jecxz
and
int
dec
mov
pop
mov
push
xchg
mov
dec
add
jo
and
or
mov
sbb
rorb
in
es
mov
pop
rcrl
pop
cmp
inc
nop
imul
pusha
out
jno
pop
add
mulb
int3
shrl
imul
loope
mov
pop
lret
pop
aam
int3
push
jl
subb
pop
xchg
jns
jmp
xchg
dec
jle
or
xor
inc
mov
add
and
pop
jno
dec
mov
movsl
lock
push
outsl
sub
push
sbb
push
test
jmp
stc
xchg
test
pop
push
iret
ljmp
or
push
pop
test
sarb
and
pop
jg
adc
out
and
das
je
inc
ds
cli
pop
push
fiaddl
insb
inc
scas
pop
xchg
add
in
cmp
push
cli
mov
sbb
iret
mov
mov
stos
xor
xchg
fistpll
xor
pushf
mov
imul
jge
dec
stc
inc
push
test
push
mov
mov
scas
addr16
cmp
in
sahf
jb
jle
inc
mov
inc
mov
dec
aad
inc
aas
push
pop
lds
sub
jmp
cli
dec
mov
sbbl
clc
push
ffreep
flds
test
pop
jno
test
adc
lahf
popf
test
popf
push
rclb
pushf
popf
xchg
push
add
mov
into
jle
or
pop
or
add
jg
int
ror
cli
lods
imul
imul
fiadds
mov
insl
test
and
insb
sub
xor
mov
cwtl
dec
dec
mov
inc
pop
jae
inc
popa
js
in
loopne
leave
lcall
cld
add
mov
mov
lock
call
pop
test
test
mov
lret
jns
pop
leave
or
loop
jns
sbb
lods
sbb
fidivl
das
pop
inc
call
inc
adc
iret
or
lock
xor
rcrl
and
fld
lock
pop
outsb
mov
mov
icebp
mov
or
jecxz
test
shr
sahf
adc
lcall
stc
inc
sbb
dec
lock
mov
stos
mov
popf
jmp
pop
add
sbb
sbb
out
imul
imul
add
mov
aad
movsb
add
outsl
cwtl
push
in
out
jecxz
lods
sti
shll
inc
cmpsb
daa
std
lcall
push
stc
jne
test
jmp
sbb
or
mov
and
mov
xchg
mov
jns
mov
sbb
insb
dec
lret
mov
stos
jbe
pop
test
scas
or
sbbb
inc
lods
stc
les
imul
push
pop
jge
aad
mov
fs
inc
jp
mov
loope
jno
sbb
dec
sub
subb
mov
js
stc
ja
inc
stc
push
mov
mov
lods
push
jo
mov
in
test
inc
out
imul
jmp
cmp
sarl
iret
jecxz
xor
push
pop
std
xorl
xchg
fsts
sbbb
push
es
mov
rcll
inc
imul
push
xorl
xchg
das
push
and
push
jbe
int3
popa
dec
jge
mov
sarb
out
sub
mov
inc
xor
mov
jnp
push
and
lret
mov
mov
aaa
pop
push
lea
dec
pop
jg
sarl
push
hlt
cmp
jne
call
fisubrl
mov
test
sbb
xchg
pop
mov
mov
test
test
mov
lret
orl
fisttpl
inc
or
xor
mov
sbb
mov
jl
pop
or
clc
in
mov
inc
ret
lds
cmp
or
push
cmp
movsb
mov
scas
push
dec
mov
cmp
xchg
mov
ds
and
fcmovnbe
mov
icebp
cld
push
ja
fs
sub
mov
xchg
dec
push
cmp
sbb
in
lahf
clc
leave
fidivrl
sbb
push
mov
sbb
cltd
cmpsl
push
xchg
stc
lahf
in
clc
out
inc
mov
shlb
push
js
scas
lahf
insb
mov
sub
or
je
and
out
mov
test
outsb
fbstp
cld
arpl
popf
into
pop
icebp
pop
in
movsl
mov
imul
dec
cmc
jnp
scas
and
cmp
jl
lods
inc
insb
lods
adc
cld
ror
das
or
int3
movsb
inc
loopne
shr
cmpxchg
push
fisttpl
cmpsl
push
nop
cli
sti
adc
sti
adc
aaa
sbb
lock
xor
cmp
fisubl
cmpsb
test
into
xor
hlt
arpl
cmp
push
push
mov
jne
jmp
sbb
pop
or
push
pop
mov
inc
inc
pop
push
aad
adcl
cmpl
jg
mov
xchg
inc
pop
cmc
int
sbb
int
stos
addr16
movsl
xchg
adc
aad
mov
pop
adc
nop
xchg
ret
dec
push
notl
inc
call
out
xor
ja
xchg
mov
rolb
leave
or
hlt
sbb
dec
rcr
ja
aaa
cmpsl
lret
cs
push
addr16
movsb
sbbl
mov
add
jnp
in
cmp
sbbb
movsb
aad
xchg
add
je
xchg
test
inc
fistl
mov
push
aam
xchg
outsl
jne
fmull
jbe
jno
imul
and
mov
cmp
iret
jl
icebp
bound
inc
xor
dec
mov
movsl
inc
mov
ror
inc
scas
xchg
lock
loope
cmp
xor
push
xchg
sbbb
jb
add
add
loop
xor
mov
in
stos
mov
mov
jne
cmp
mov
dec
sub
mov
xlat
adc
add
jbe
ja
adc
dec
and
dec
sub
mov
or
mov
movsl
jl
adc
push
add
pop
or
push
xchg
xchg
ds
push
pop
int
xor
je
push
ret
jle
in
fidivl
pop
cld
outsb
cli
mov
addr16
inc
fsubl
pop
mov
movsl
scas
jae
jb
jnp
inc
xor
dec
fildll
aad
jge
inc
pop
or
stc
sub
mov
rcrl
push
out
fisubrs
push
lret
add
cld
imull
xchg
leave
es
push
and
test
mov
and
or
loop
dec
jg
fstpl
pop
in
test
add
ret
adc
je
roll
jns
notb
dec
cltd
inc
repnz
das
inc
shll
not
lret
pop
test
jo
sub
xchg
xor
cmc
jmp
jl
or
testl
mov
jns
sub
sub
xchg
pop
es
xor
push
or
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
jmp
scas
shlb
jno
scas
mov
xor
xchg
out
xchg
and
pop
jl
int3
sbb
jmp
cmp
jmp
mov
pop
ror
adc
pop
pop
fistpl
aaa
int3
push
bnd
and
pop
ljmp
or
icebp
std
out
out
hlt
sbb
fs
jae
push
adc
stos
add
imul
sbb
dec
rcll
lea
push
push
scas
inc
xchg
xor
pop
movsl
fiaddl
jmp
xor
in
xlat
sbb
decl
pushf
adc
cmpsb
cmp
scas
xor
mov
cmp
jbe
in
pop
pop
and
add
xchg
mov
les
jecxz,pn
mov
cmp
sub
jcxz
adc
pop
jge
or
clc
jmp
ds
push
je
stc
or
mov
test
jp
xchg
sub
popf
repnz
cli
stos
dec
or
xor
sub
mov
div
clc
movsl
add
shlb
xor
push
loope
aam
inc
or
lods
bound
xlat
shrl
lcall
pop
daa
sub
cmp
sbb
cmpsb
icebp
into
adc
andb
jmp
push
lret
shrl
mov
inc
aaa
cmp
adc
xchg
push
std
insl
cmp
cmpsb
repz
add
jo
pop
push
rcrl
ss
into
lods
inc
testb
dec
roll
jecxz
lods
in
push
cld
sub
mov
aas
xchg
pushf
or
cli
add
fwait
push
adc
dec
imull
push
into
mov
orl
inc
cli
mulb
mov
adc
xchg
and
mov
stos
fcompl
mov
repnz
fisttps
cmpsb
xlat
test
jnp
pusha
mov
or
mov
inc
and
mov
in
mov
aas
jecxz
jmp
adc
mov
ss
in
cld
pusha
jg
cmp
sbb
mov
movb
add
cmp
leave
push
shrl
movl
jp
imul
leave
xchg
aad
test
dec
in
rcll
leave
flds
repz
or
mov
cmpl
sbb
jo
lock
sbb
mov
adc
pop
sar
pop
pushf
nop
out
or
xor
dec
cwtl
incl
pop
lods
lret
or
repz
pop
fisubl
mov
es
ret
test
or
iret
mov
jbe
test
and
push
ljmp
pop
adc
rcrb
mov
les
imul
scas
inc
in
xchg
cmp
fs
in
push
inc
movsl
cmp
push
mov
mov
movsb
inc
out
cmp
xor
jecxz
addps
aas
push
lea
insb
ljmp
xor
and
sbb
dec
dec
pop
in
mov
dec
dec
mov
xchg
mov
add
add
jp
mov
mov
inc
ljmp
push
mov
mov
xor
pusha
stc
iret
jmp
fidivs
dec
xor
push
repz
mov
jl
loope
out
out
test
sbb
scas
push
into
std
jo
je
push
and
jno
sbb
pushf
pop
faddp
sti
test
popf
leave
sbb
mov
test
push
add
pop
ret
cmp
adc
push
and
jecxz
mov
sub
enter
mov
repnz
jge
or
push
iret
add
shrl
mov
jno
out
std
in
insb
out
addl
mov
jno
repz
xchg
or
into
adc
out
scas
xchg
inc
mov
cmpsb
jnp
jg
jne
jge
sbb
push
lret
out
stos
jnp
xchg
dec
or
popa
mov
jb
les
iret
shll
aad
nop
test
push
neg
addr16
bound
xchg
sub
scas
incb
out
push
mov
xchg
xchg
pop
inc
xor
xchg
jnp
mov
popa
adc
repnz
fsubl
push
int3
and
into
pop
hlt
sbbl
lret
mov
jae
mov
mov
xchg
outsb
sarb
xor
push
in
std
out
aam
lds
inc
std
std
subb
mov
pop
mov
mov
dec
push
test
scas
inc
addr16
bound
fisubrl
push
xchg
adc
xor
addr16
out
cmp
pop
pop
bound
test
xor
je
dec
mov
xchg
cmpsb
mov
jl
xchg
or
popa
xlat
add
mov
test
or
out
jae
sbb
or
rcl
call
imul
dec
dec
loopne
cmpsb
arpl
cmc
add
test
ds
call
adc
and
arpl
shll
repz
add
adc
add
outsb
xchg
pop
popf
cmpsb
ljmp
and
in
adc
mov
mov
push
fwait
pop
cmpsb
pop
sti
andb
das
jl
adc
push
xchg
ds
cmpsb
popf
jmp
fadds
das
lcall
and
out
fsubrs
incb
add
xor
inc
inc
lret
outsl
repz
sbb
test
fcoml
jle
dec
xor
lret
ja
daa
addr16
scas
leave
dec
mov
enter
pop
es
push
scas
sub
add
aas
sub
and
or
out
inc
cmp
popf
insl
pop
fwait
aam
and
adc
popa
insb
mov
jbe
push
das
out
aad
imul
in
rol
out
xchg
orl
rdmsr
jbe
and
aad
cmp
rorb
insl
adc
jb
out
cmp
xchg
ja
dec
jne
mov
testl
repz
jg
mov
cmp
cmp
lahf
gs
ret
sub
and
hlt
in
or
outsl
sbb
pop
int
or
xchg
decl
cmpsb
cmp
or
pop
popa
jne
adc
push
outsl
mov
pop
cmp
cs
lret
inc
ficomps
push
xchg
mov
shl
out
inc
in
adc
jnp
jbe
movsl
sub
mov
je
mov
pop
pop
sbb
xor
or
jg
sub
adc
ss
jle
inc
push
and
pop
add
ret
shll
les
push
repz
pop
mov
fmulp
stos
or
adc
xchg
xor
add
jb
mov
pop
sbb
inc
dec
cmc
xor
pop
cmpsl
mov
lahf
add
dec
out
cli
jle
push
sbb
jae
mov
sbb
inc
jge
pop
sbb
jg
test
in
aas
insb
xchg
ret
adc
and
cmp
add
adc
insb
inc
push
adc
xchg
enter
jge
push
ss
loop
mov
inc
ror
scas
jl
test
push
roll
daa
mov
fs
test
gs
insl
inc
out
adc
add
int3
dec
shlb
xchg
int
or
add
aaa
sti
call
and
fimuls
sub
mov
push
add
lret
sbb
loope
aas
cmp
adc
les
imul
mov
pop
adc
out
cltd
dec
mov
pop
cli
in
push
xchg
mov
dec
adc
insb
mov
data16
into
imul
out
mov
iret
jnp
in
cmp
or
enter
jno
out
pop
push
movsl
mov
add
and
inc
mov
shl
leave
out
dec
xor
jg
cs
lret
scas
xchg
daa
out
xlat
pop
sbb
xlat
repz
xchg
mov
fyl2x
data16
add
jmp
push
xchg
jo
cmp
mov
movsb
cli
dec
add
jmp
std
xchg
movl
loop
loop
lds
jns
test
mov
jl
movsb
inc
sbb
mov
movsl
or
jle
popf
jnp
in
sub
addl
push
cwtl
shrl
jbe
xlat
lret
inc
sub
lret
ss
add
adc
mov
and
sti
sbb
jp
lea
cltd
mov
pop
xchg
lret
repz
aas
and
scas
cmpsb
pop
int
fsub
pop
idiv
ja
and
mov
xchg
jmp
pop
idiv
or
hlt
imul
mov
loopne
popf
je
adc
je
into
dec
push
adc
cmp
andl
dec
sub
lret
mov
jo
gs
and
pop
jecxz
sarl
decl
adc
push
lock
mov
filds
jb
sbb
jg
push
pop
xor
dec
pop
lods
fwait
outsl
or
gs
mov
es
icebp
or
mov
mov
xchg
adc
sub
dec
jge
mov
jmp
in
ret
fld
sbb
jmp
push
fisttpll
lock
outsl
stos
aaa
jae
enter
or
nop
imul
vcmpps
cs
mov
mov
xor
mov
std
mov
ljmp
ss
cmp
pop
inc
xchg
jp
mov
lret
pop
dec
aas
sbb
adcl
das
lods
dec
lock
sbb
movsb
outsb
jge
jne
mov
lods
mov
mov
xor
mov
orb
js
sub
pushf
inc
mov
mov
cmp
mov
mov
es
and
stc
mov
xchg
les
mov
adc
sbb
mov
lahf
cmp
xchg
clc
popf
sub
lahf
lret
test
cwtl
rcll
and
sbb
in
xchg
outsb
repnz
sub
fs
pop
mov
xor
bound
clc
xchg
add
xor
int3
jno
adc
xor
sub
jne
outsb
jl
cmpsl
xchg
xor
shl
mov
andb
push
push
fwait
pop
xchg
push
dec
or
icebp
mov
pop
mov
sub
and
mov
ret
cltd
sarb
ljmp
mov
test
cmp
cmpsb
or
fadds
loopne
testb
iret
or
test
push
cli
jns
cmp
jb
inc
lds
cmp
sahf
push
je
movsb
lods
pop
xchg
aam
sub
into
out
imul
sub
test
test
xchg
enter
scas
leave
xor
jecxz
mov
fstps
fwait
mov
arpl
jbe
sbb
xor
outsb
loop
sbb
fcmovb
adc
xor
dec
xor
sti
xchg
cmp
push
xchg
int3
pop
dec
cltd
mov
xchg
test
dec
sbb
mov
daa
ss
or
jnp
jle
pop
out
mov
out
lock
imul
mov
pusha
out
sti
fstl
add
cld
jmp
lods
adc
push
int3
ret
cs
lcall
mov
mov
mov
or
repnz
lods
sub
mov
xor
lock
sub
pop
test
data16
xlat
fsts
or
outsl
or
scas
mov
sub
addr16
sub
push
mov
in
out
aas
cmpsl
out
out
or
fneni(8087
pop
mov
aaa
xchg
adc
mov
outsl
inc
andb
fstpt
push
sbbb
dec
dec
ljmp
bound
dec
push
aas
cs
jnp
fistpl
pop
jb
arpl
mov
mov
and
mov
pop
pop
or
lret
push
gs
lds
inc
std
scas
mov
shll
daa
mov
cmpsl
test
loopne
or
in
or
and
sbb
lahf
test
stos
cltd
mov
adc
mov
sarl
jns
add
jae
xor
movsl
hlt
jae
dec
mov
jae
out
sub
push
sahf
or
and
fisubs
xchg
mov
cwtl
jp
sub
add
or
cmp
pop
jge
and
pop
mov
add
jb
rcrl
cmpsb
cmp
mulb
fistpll
pop
mov
jno
mov
mov
add
shrb
mov
fimull
inc
and
repz
and
repnz
inc
lret
push
fwait
pop
xchg
mov
cli
hlt
push
add
pushf
or
pushf
and
and
ss
stos
inc
inc
sub
jno
popf
inc
test
cmpsb
call
mov
xor
dec
lods
jno
mov
movsl
sbb
pop
rclb
cmpsl
aas
dec
mov
out
dec
and
xchg
adc
mov
movsl
mov
sbb
in
mov
add
jg
pop
mov
enter
fistpll
addr16
xor
add
adc
pushf
sub
jns
test
add
sbb
add
adc
jnp
push
cmp
jae
pop
mov
stc
jae
mov
aam
pop
mov
cmp
arpl
cs
out
ljmp
xchg
adc
and
sub
lahf
sbb
or
or
lods
jecxz
xlat
into
inc
ficompl
push
xchg
fnsave
xor
add
pop
xchg
sub
dec
xchg
xor
lahf
or
push
sub
xor
sbb
out
inc
rol
jge
sbb
cmpsl
xor
pop
sbb
nop
dec
add
loopne
je
loopne
push
push
das
xor
mov
xchg
xchg
cs
pop
enter
cld
mov
cmp
subb
hlt
ljmp
pop
sbbl
xchg
div
dec
rcr
in
data16
xchg
xor
jmp
sbb
lahf
pop
sub
ja
pop
imul
fcmovnb
mov
jmp
fldl2e
addr16
add
data16
pop
popf
inc
stos
imul
adc
jo
ret
mov
push
aad
mov
aaa
pop
mov
jbe
xlat
rolb
clc
fmuls
test
gs
inc
dec
or
and
aaa
out
mov
fs
sbb
mov
push
fucomip
mov
jno
adc
nop
out
aas
fs
nop
or
aaa
ss
mov
adc
mov
movb
sahf
cmp
sub
xchg
add
xchg
mov
or
mov
add
mov
cmpsl
negl
add
xchg
cmp
out
xchg
cs
out
sub
sub
push
cmp
xor
inc
xor
adc
mov
in
aad
dec
addl
into
insl
push
imul
ds
cmp
sahf
sti
stos
adc
in
mov
push
sub
dec
stos
test
ds
ss
inc
push
mov
cmp
clc
stos
pop
xor
mov
push
js
inc
jae
in
int
adc
filds
mov
push
ss
mov
popa
pop
lcall
ret
or
rcl
aaa
movsl
daa
lds
and
cmc
xlat
pop
in
and
stos
cmc
adc
sarl
dec
insb
nop
jne
aaa
ds
faddp
push
and
lcall
xchg
mov
enter
and
lods
sbb
dec
lock
int
in
or
dec
pop
sub
sub
popl
mov
and
and
mov
insl
cs
sub
sub
imul
xor
aaa
xlat
or
mov
shrl
inc
outsl
mov
das
cmp
lods
mov
test
mov
xor
aaa
mov
hlt
mov
dec
dec
or
sub
movb
scas
fcoms
in
pop
inc
pushf
popa
add
lret
ds
icebp
ffreep
mov
in
or
mov
pop
insl
inc
mov
pop
pop
orl
mov
shr
sub
mov
pop
push
sarb
cs
scas
jp
dec
aam
xor
sub
enter
mov
sbb
cmpb
mov
add
movsb
test
mov
sub
hlt
fisubrl
fs
inc
cmp
addr16
imul
jne
inc
enter
lods
xchg
pusha
add
cmp
cld
mov
fstpl
cmp
out
sub
je
clc
loop
or
mov
test
fdivs
int3
or
das
mov
in
or
pop
jecxz
lea
ret
pop
xlat
add
shll
cltd
pop
adc
sbb
pop
push
shrb
xor
pop
cmpsb
and
aas
outsb
cmovns
or
mov
jmp
jno
or
leave
cltd
imul
pusha
cld
mov
lahf
inc
add
outsb
inc
add
ljmp
ret
jp
adc
dec
ja
lret
jecxz
mov
xlat
adc
subb
mov
push
pop
add
push
sahf
into
clc
adc
repnz
jecxz
lock
cli
pop
pop
or
pop
lret
xchg
fildl
mov
pop
lods
ret
add
cwtl
popa
in
cs
shrb
repnz
inc
push
das
fists
loopne
sub
xor
and
push
pop
adc
sub
mov
sub
cli
out
jns
mov
add
stc
dec
mov
mov
dec
xor
pop
mov
mov
adc
aam
or
add
daa
je
mov
sbb
pop
mov
int3
inc
jo
test
inc
jle
leave
xchg
clc
movsb
popa
cwtl
addr16
imul
mov
rclb
jl,pt
jo
xor
and
lret
adc
ds
pop
mov
sub
inc
aas
inc
je
add
pop
push
mov
shlb
ret
stc
add
or
out
mov
lock
lret
mov
out
sub
bound
sbb
sti
xchg
adc
mov
xor
bound
or
push
adcb
scas
jae
or
fdivr
in
mov
fisttpll
mov
mov
les
cmp
outsb
xor
addr16
das
mov
xchg
inc
out
repz
shl
sub
sub
adc
adc
ja
mov
or
sbb
mov
dec
mov
cmp
mov
icebp
cwtl
dec
jg
xchg
sub
outsl
fdiv
leave
mov
push
mov
mov
sbb
sub
popf
mov
xor
cmpb
inc
xchg
sbbl
sahf
loop
xchg
ret
xlat
jmp
fcompl
add
or
or
push
adcb
jnp
int
xor
popa
in
stc
adc
in
jg
and
adc
pop
lcall
in
pop
push
movsb
jnp
cmpsl
scas
dec
jl
lea
mov
xchg
add
push
int3
int3
ss
dec
jb
or
gs
lcall
push
pop
dec
ss
and
pusha
mov
dec
adc
or
push
cmp
jmp
dec
cmp
xlat
loop
push
arpl
or
lods
ljmp
sbb
ja
sbb
sbb
outsl
cs
loope
pop
rcrb
adc
dec
adc
addl
dec
cltd
mov
loop
pop
cmp
loopne
sti
lea
push
mov
pop
inc
data16
aas
push
xchg
xor
ret
inc
lcall
adc
popf
out
sahf
cmp
jo
into
xor
pop
push
cwtl
mov
jge
or
adcl
ror
jno
insb
enter
inc
xchg
addr16
xchg
call
adc
mov
das
popa
xchg
xor
dec
in
cmc
fimull
jl
adc
daa
jne
lahf
mov
cli
pop
test
mov
je
push
inc
sbb
pop
push
xor
outsl
jge
jno
lret
cmp
push
push
outsl
jnp
shlb
push
enter
xor
pusha
test
push
add
test
sub
inc
fsubrl
xchg
push
in
adc
test
dec
xchg
cmp
in
sarl
arpl
scas
sub
jnp
mov
adc
arpl
out
jmp
push
mov
push
loopne
push
mov
lea
dec
jecxz
icebp
cmp
rcrb
sbb
icebp
cli
sbb
xor
jge
shrl
push
mov
aaa
cmp
xchg
push
into
inc
lahf
pop
imul
sbb
or
outsl
loop
adc
push
pop
je
jo
stos
sub
and
inc
cli
xor
and
pop
repnz
dec
movsl
daa
sub
lea
fcompl
mov
shll
mov
cmc
inc
mov
adc
mov
inc
clc
pop
mov
sti
out
sub
push
insl
mov
xchg
mov
inc
xor
xor
dec
push
stos
push
pushf
jmp
xchg
dec
mov
ret
fldt
sbb
imul
sbb
lret
dec
movsl
leave
pop
inc
test
sahf
mov
outsl
fcompl
sbb
test
in
dec
or
scas
in
movsl
aad
repnz
jg
imul
adc
and
sti
rcrl
push
scas
sbb
in
pushf
mov
aas
inc
dec
sub
add
insb
mov
lret
cwtl
mov
cwtl
mov
icebp
cwtl
aaa
and
rolb
jae
push
aaa
into
mov
addr16
or
stc
and
pop
adc
dec
loop
stos
imul
popf
out
add
clc
repnz
adc
or
adc
loope
std
pop
repnz
fmul
and
out
in
insb
lcall
cmc
push
mov
inc
mov
cmpsl
jno
fstpl
cmpsl
adc
test
mov
inc
in
outsb
sbb
iret
mov
fidivrs
jecxz
jecxz
adc
shlb
jle
jae
mov
fwait
lret
int3
xchg
imul
mov
addl
jmp
pop
mov
test
xchg
push
cmp
dec
jp
adc
xchg
jle
out
mov
leave
in
xchg
push
stc
xor
mov
test
jmp
sbb
push
testl
pop
adc
push
outsb
mov
outsl
pop
int
lock
mov
loope
aam
mov
xlat
lea
enter
add
xor
jg
ja
fcmovnbe
sbb
enter
push
adc
xor
movsl
xor
or
shlb
xor
xchg
adc
cli
pop
shlb
jl
push
outsb
stc
jns
out
push
imul
jmp
and
jnp
repz
iret
call
sbb
fisttpll
testb
cmp
clc
dec
dec
push
dec
cs
sbb
fs
jl
mov
add
mov
and
xchg
xchg
jg
cmpsb
les
xchg
ljmp
pop
jns
push
in
mov
int
loop
xor
mov
ret
xor
sbb
sub
pop
mov
dec
mov
and
aaa
xchg
movsb
dec
shrl
mov
mov
pop
pop
fwait
sbb
cmc
cs
daa
mov
gs
adc
and
add
mov
mov
mov
sbbl
fdivp
or
adc
cmp
mov
pop
les
rolb
jno,pn
sub
xchg
imul
cwtl
mov
push
xchg
inc
mov
jmp
add
or
loope
or
or
and
add
inc
xchg
lods
jb
jno
xor
mov
ljmp
sbb
xchg
cs
xor
iret
adc
push
dec
repnz
ss
mov
push
push
and
pop
into
outsb
cmp
dec
cmp
mov
repz
test
jmp
icebp
aas
pusha
adc
scas
jl
sti
outsl
test
cmp
mov
xor
xchg
sbb
pop
mov
sub
lret
in
cmpsb
clc
push
jnp
pop
inc
jg
in
xor
scas
fisttpl
adcb
data16
mov
lcall
cmp
cmp
addr16
inc
fwait
dec
dec
stos
js
dec
jle
adc
jg
pop
adc
lcall
mov
imul
and
sbb
and
xor
ljmp
and
push
mov
idiv
adc
add
jge
jge
popa
jle
scas
lods
int3
xlat
sbb
jge
or
push
sub
loopne
or
fs
stos
jle
fbld
pop
mov
mov
test
jle
in
insl
add
daa
inc
std
call
adc
pop
dec
add
jae,pt
and
mov
ljmp
sbb
fisubl
mov
mov
lods
fsubrl
sub
xor
cld
out
cltd
jo
mov
add
popf
jmp
mov
fisubrs
pusha
leave
div
jmp
shll
les
and
scas
scas
adc
stos
mov
std
mov
mov
fmull
fisubl
aas
dec
add
movsb
dec
in
daa
sti
mov
add
xor
and
insl
mov
inc
dec
insb
push
rorb
ret
in
outsl
das
and
daa
ds
jns
jmp
loopne
mov
into
dec
lret
push
inc
icebp
ret
enter
and
hlt
mov
cmp
jns
loop
hlt
and
xor
fistpll
dec
xor
imul
adc
and
mov
outsb
pop
jne
clc
mov
out
adc
test
mov
pop
dec
jg
add
mov
push
dec
jge
std
and
int3
sub
push
int3
imul
jnp
lret
sbb
adc
sti
sbb
mov
fisttpll
adc
dec
pop
or
or
sbb
outsl
jne
sbb
das
mov
jmp
and
mov
inc
cmp
cmp
xchg
sub
mov
cli
xor
and
sbb
sbb
or
jns
cli
data16
or
mov
fistpl
dec
scas
popa
out
fldt
inc
sub
jecxz
testl
out
cmp
push
dec
out
mov
dec
inc
pop
push
aad
rcrb
scas
test
mov
add
ljmp
dec
add
mov
movsb
icebp
cmc
adc
shr
sub
xchg
jmp
ljmp
in
lods
loopne
and
pop
adc
aas
lock
xor
cltd
push
popa
xlat
test
sarb
std
sarb
dec
in
push
add
adc
ds
or
ljmp
sbb
sub
and
fidivrs
pushf
sub
xchg
daa
mov
add
lds
and
sub
adc
das
in
int
sahf
mov
xor
add
insb
leave
xchg
mov
daa
push
jnp
ja
std
and
nop
mov
std
or
je
into
shll
push
push
clc
cmpsb
mov
lcall
jae
test
fwait
dec
dec
and
cmp
mov
push
adcl
fstps
mov
add
movb
or
sbb
aaa
inc
nop
pop
mov
ja
mov
testb
mov
mov
cmp
ja
mov
xor
aam
and
lcall
lods
pop
cli
int
sbb
xchg
mov
sbb
cmp
mov
or
mulb
and
adc
insb
lds
and
push
jle
rolb
pop
sbb
mov
ret
adc
ljmp
enter
xchg
shr
jbe
sar
push
movsb
cltd
movsb
or
ss
push
adc
aaa
mov
mov
xchg
inc
cld
aad
lock
enter
push
in
push
loope
lock
push
sti
imul
loope
insl
dec
mov
movsb
and
jp
push
sub
jno
dec
mov
outsl
ss
and
adc
mov
ret
adc
enter
mov
stos
and
and
push
push
fdivl
enter
and
cmp
pop
xchg
mov
xor
sbb
add
pop
ds
mov
pop
add
push
dec
sarl
gs
jmp
push
sbb
push
loope
ret
inc
xchg
icebp
aas
aam
fsubrl
ja
pop
mov
clc
sub
cs
mov
cmp
mov
push
das
inc
mov
mov
xor
cld
jge
sarl
dec
btr
push
and
adc
push
popa
les
push
push
call
sub
inc
fimull
jnp
iret
mov
xchg
adc
xchg
stc
pop
sbb
in
rolb
fidivs
dec
or
dec
mov
jl
push
push
push
hlt
les
and
cmpsl
inc
aam
push
pop
jl
mov
popf
pop
xor
sub
cmp
hlt
shlb
mov
lods
sub
sbb
scas
push
test
push
imul
loope
pop
aad
push
xor
add
loope
sahf
jmp
sbb
insb
fidivrl
sub
cmp
xor
adc
imul
std
sub
mov
fldenv
scas
and
adc
cld
lds
cmpsl
lret
pop
std
push
pop
or
sbb
xor
fdivrl
pop
sub
jbe
mov
xor
mov
mov
leave
cmp
pop
popf
push
inc
mov
movsb
lds
push
jns
adc
in
pop
lcall
nop
push
jbe
loope
mov
jge
push
cmc
xor
add
ja
sbb
ljmp
es
mov
mov
ficoml
jnp
cmp
xlat
or
in
pushf
mov
mov
in
arpl
mov
jae
cli
xchg
stos
xchg
add
xor
imul
dec
aad
shll
jmp
xchg
cli
iret
lods
cwtl
mov
lahf
int
lods
out
fstps
adc
shll
fpatan
adc
mov
xor
out
jo
mov
js
popf
rclb
daa
add
movsb
mov
call
push
xchg
stc
nopl
dec
aam
inc
stos
or
push
jp
mov
mov
dec
cmpsb
jle
das
sub
jne
adcb
popf
repz
mov
cmpsl
and
sbb
test
scas
push
dec
push
cli
and
flds
adcb
cmp
cmpsb
rclb
or
pop
mov
loope
into
clc
test
jmp
and
fcmovbe
in
mov
ljmp
and
cmp
jns
xchg
sysexit
orb
nop
mov
xorb
mov
mov
jge
daa
insb
icebp
mov
cmpsb
inc
rorl
fisttpl
push
lds
divb
push
cs
dec
ret
test
push
xchg
pop
inc
push
inc
loopne
cs
in
or
call
aas
cli
and
mov
fisubs
mov
inc
jle
lods
aam
adc
jbe
xor
cmc
les
mov
sarb
je
sub
lcall
out
pop
sbb
int
sbb
sub
and
movsb
add
adc
std
pop
pop
int3
leave
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
add
add
into
xor
add
add
add
add
add
rcrb
add
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
add
add
inc
push
inc
idivl
std
sub
dec
mov
out
xchg
lods
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
dec
inc
mov
pop
xchg
andl
gs
add
cmp
dec
cmpsb
mov
sub
xor
sub
outsl
jecxz
dec
push
fisubrs
test
les
negl
repz
arpl
dec
andb
jle
jmp
or
xchg
or
adc
mov
fsubp
cmp
testl
or
xchg
andl
inc
pop
in
das
ds
mov
add
push
rolb
mov
incb
gs
ds
rorb
popa
aam
jns
fildll
add
adc
fucomi
xchg
into
cs
xor
cmp
ljmp
pop
inc
in
mov
sub
clc
sbb
jbe
test
or
jge
outsb
xchg
jnp,pn
repnz
pushf
popa
stos
pop
ror
popa
mov
test
mov
sub
xor
mov
jbe
jmp
rclb
scas
dec
es
jns
cmpsb
push
cltd
sbbl
cld
int3
out
cmpsl
or
or
and
jo
loope
arpl
mov
mov
mov
cmp
add
cmp
jmp
cmc
xchg
popl
js
je
ja
cwtd
fcomps
lock
fucomi
jg
aas
outsl
or
jge
int3
ret
test
iret
mov
cmpsl
push
mov
cmp
fcoml
clc
dec
cmpsl
jns
aad
gs
add
xchg
jp
ja
cmp
add
or
in
hlt
xor
add
ss
and
mov
xchg
pop
jl
loop
das
cmpsb
ret
mov
or
jne
jp
mov
ljmp
call
jbe
cltd
lahf
fmul
imul
adc
daa
add
or
mov
arpl
aas
stos
adc
orb
shlb
shlb
fstps
pop
jbe
hlt
add
cltd
lahf
subl
das
sbb
repnz
dec
xor
not
add
push
scas
fwait
imul
fcomps
pop
inc
xor
mov
es
cltd
jo
add
and
fwait
mov
adc
dec
and
sti
fiadds
mov
pop
lcall
adc
daa
popa
pop
hlt
mov
outsl
pop
lea
mov
loopne
ror
rorl
enter
inc
nop
call
in
ret
xor
in
push
mov
lods
dec
add
inc
push
adc
jbe
mov
mov
sbb
xchg
fbstp
mov
xor
dec
movsl
push
mov
imul
jb
pop
cltd
pusha
mov
das
dec
sub
dec
cmpsl
adc
fwait
les
test
movsl
ficomps
jecxz
mov
ds
pop
loop
shlb
dec
add
repnz
and
push
in
fcomp
mov
push
lea
mov
or
filds
jmp
pusha
adc
das
insb
add
lcall
or
stos
lock
pop
andl
mov
sbb
lahf
mov
cmpb
roll
inc
je
and
xchg
jg
push
and
cltd
mov
rcl
mov
dec
xchg
push
adc
mov
fwait
adc
jmp
add
mov
add
add
jmp
or
in
int
adc
add
lods
add
add
push
popaw
call
jnp
rcll
out
shlb
mov
les
dec
cltd
popf
cmpsb
mov
gs
jo
movsl
push
mov
shlb
jo
lret
inc
xchg
loop
add
mov
xchg
scas
mov
std
mov
mov
mov
int
cmp
sub
mov
xchg
jg
push
es
js
adc
fs
inc
xchg
add
cmp
lds
inc
pop
add
addr16
ja
mov
sbb
pop
repnz
adc
jp
std
xchg
jg
add
sub
mov
xor
ficoms
dec
xor
sub
mov
cs
xor
xor
es
mov
movsl
jnp
mov
and
ret
lea
jg
in
sub
inc
jmp
test
mov
leave
xchg
lock
xchg
mov
xlat
inc
mov
fstps
mov
lea
pusha
pop
pop
pop
and
jle
push
cmc
jmp
inc
add
adc
sbb
ret
lcall
cmp
cli
in
bound
mov
in
sbb
add
rcr
cmc
rcrl
sbb
nop
lcall
push
ret
cs
cs
adc
jno
lahf
clc
repz
fwait
xor
pop
jo
leave
add
jbe
mov
jno
ds
adc
sbb
xorb
mov
repz
rclb
dec
sub
fidivl
push
add
into
mov
mov
ss
cmp
pop
add
je
push
push
cmp
fs
xor
notl
cmp
test
into
bound
pop
movsb
and
inc
and
hlt
dec
mov
notl
add
rcr
stc
mov
jmp
inc
pushf
into
in
nop
fwait
sub
aad
repnz
or
sub
cmp
jp
iret
jno
add
iret
cmp
push
xor
fidivrl
fdiv
cmpsl
adc
lock
sbb
pop
lds
xchg
and
xchg
inc
out
mov
lret
push
adc
ljmp
xchg
cmp
fwait
lods
iret
mov
js
pop
cmp
or
shlb
pushf
js
divb
icebp
and
cli
inc
lret
test
fs
mov
mov
mov
add
pushf
add
mov
cmpb
roll
shll
sarb
push
mov
xchg
mov
mov
and
mov
loope
rcrb
mov
and
jmp
xchg
jo
jl
mov
lcall
out
cmp
xchg
jns
xchg
in
add
inc
fwait
inc
mov
insb
in
jne
and
lock
push
shlb
pop
lret
test
mov
or
addr16
mov
and
fidivrs
pop
cmpsb
cs
push
add
cmpsb
scas
sbb
jp
jne
lods
sahf
dec
jae
and
mov
rcll
imull
pop
test
cwtl
xchg
test
xchg
adc
jp
insl
int
in
ja
stc
mov
sbb
cmp
lret
loopne
cmp
mov
cmp
enter
movsb
push
int3
lcall
cmpsb
push
cmc
dec
and
pop
mov
enter
xchg
add
add
mov
or
lcall
and
add
mov
stc
jp
leave
out
maxps
stc
or
cwtl
xor
shl
jnp
or
xor
sbb
sbbl
in
aaa
dec
pop
add
fistpl
xor
inc
lahf
xor
in
cmp
gs
add
xchg
mov
fisubrl
jo
mov
ret
cmc
std
ja
jns
inc
jbe
mov
add
pop
adc
xor
sbb
mov
xchg
cmp
inc
fwait
out
in
xor
cmp
jg
enter
lahf
cli
dec
inc
inc
sub
call
movsl
sub
mov
fcompp
sub
cmc
loop
push
jl
push
xlat
jecxz
idivb
syscall
in
pop
pusha
inc
mov
in
mov
dec
pop
push
and
fcoms
add
aad
xchg
pop
pop
repz
fs
test
dec
sub
pop
jnp
int3
add
sbb
stos
jmp
sbb
push
outsl
out
push
jbe
jnp
popa
clc
bound
jno
pop
ss
fdivrs
or
pop
in
or
cld
fstps
dec
in
sbb
xchg
sbb
cld
scas
xor
shll
and
gs
cmp
jle
movl
sbb
add
outsl
mov
sahf
cwtl
push
enter
in
xchg
xchg
lret
adc
shl
push
inc
or
fidivrl
pop
insb
xor
je
subb
aas
call
pop
insb
sbb
gs
jp
mov
pop
xor
adc
sbb
cld
mov
jg
mov
cli
xor
jo
ds
xchg
fidivrs
mov
lods
inc
push
ror
pop
fcoml
xorl
ror
push
sahf
push
aas
fidivrl
insb
lods
xor
jl
out
stos
xchg
lock
inc
pop
or
gs
sub
cmc
push
lds
and
cmpsl
lcall
ds
test
jge
and
insl
push
out
sub
mov
call
push
jo
sub
and
add
cmp
mov
pop
fmul
or
ljmp
sahf
rorb
jnp
pop
sub
mov
and
xchg
cs
push
enter
dec
and
adc
or
cmp
subl
pop
cwtl
out
and
dec
inc
sub
lds
push
add
scas
cwtl
sbb
push
and
sub
sub
mov
pop
das
aad
insb
lret
add
pop
xor
or
pop
mov
outsl
jmp
and
jp
sbb
cltd
mov
jmp
inc
pop
adc
mov
icebp
adc
mov
orb
movsl
loop
adc
add
sbb
or
inc
cmp
int3
inc
aas
lock
adc
or
clc
ds
aad
mov
push
xchg
sbb
js
out
or
dec
cli
add
popa
mov
lods
cmp
mov
pop
enter
lret
loope
mov
adc
dec
lods
mov
push
jl
movsb
jns
push
outsl
jo
lea
shl
push
les
inc
fcompl
pop
je
adcl
add
inc
clc
gs
popf
jg
mov
dec
sahf
pop
std
mov
insb
daa
add
lods
add
add
mov
push
dec
aam
insb
enter
adc
sarb
inc
or
insb
iret
sahf
dec
jns
sarb
loop
push
arpl
push
add
xor
mov
test
and
popf
xor
fcomp
cmpl
and
iret
mov
cs
cmp
test
addr16
add
push
push
pop
jge
aas
popa
xlat
push
int
insl
fcmovu
mov
adc
call
push
ret
outsl
cmc
call
shr
xchg
jmp
adc
push
divl
xchg
push
mov
movl
fcompl
sbb
mov
mov
pop
xchg
aam
decl
pop
mov
xchg
push
mov
jb
sub
add
adc
sub
cmp
insb
decb
sub
cli
inc
mov
idivl
pop
lds
mov
fcmovb
fwait
ret
lods
mov
adc
out
inc
in
ljmp
aam
jo
loop
cli
xchg
fbstp
xchg
dec
loopne
movsl
pop
adc
adc
add
cmpsl
jmp
jne
rclb
dec
lahf
and
or
mov
int3
adcl
mov
repz
jnp
std
and
into
sub
movsb
jno
in
imul
sahf
dec
fistpl
xor
dec
popa
mov
or
push
pop
or
inc
jo
je
gs
test
stos
xor
repnz
stc
movsb
push
xchg
mov
sbb
push
sbb
adc
in
push
adc
cmp
ds
int
sarl
sbb
mov
adc
pop
hlt
mov
insb
mov
popa
xlat
sbb
mov
add
sub
and
xor
sarl
pop
pop
push
insb
lret
jmp
test
mov
insl
sarb
fidivrs
dec
data16
imul
cmp
iret
inc
stos
mov
testb
adc
lret
push
xor
int3
inc
dec
and
jnp
pop
jne
dec
and
dec
mov
loopne
fwait
mov
add
loope
cmp
dec
mov
and
add
cltd
mov
xchg
inc
ret
data16
sub
clc
mov
jne
sbb
test
enter
scas
mov
cltd
xor
scas
sub
xchg
pop
in
xchg
pop
popa
or
hlt
xchg
jmp
and
scas
xor
popf
icebp
out
movsl
dec
ljmp
out
insl
xchg
pop
cltd
repz
cld
rcrl
mov
dec
subb
dec
fdivl
adc
mov
pop
jg
out
adc
cmp
push
add
lea
testl
cmp
shl
loope
or
andb
popf
mov
ljmp
or
popf
out
inc
repnz
popa
xor
xchg
push
clc
rol
pushf
insb
scas
mov
xchg
add
ljmp
in
icebp
test
shl
mov
fnsave
sti
les
jle
stc
ret
cmp
call
dec
mov
out
cs
adc
inc
aas
xchg
xchg
pushf
cmp
ds
inc
xchg
mov
data16
fs
into
ficoms
sbb
pop
xchg
in
add
pop
sbbb
dec
imul
sub
add
test
enter
hlt
mov
loop
js
inc
addr16
mov
popf
sub
pop
push
push
int
jecxz
xor
aad
mov
or
xchg
cs
cli
aam
mov
xor
and
leave
pop
das
push
cmp
xchg
xor
ret
push
imul
inc
gs
mov
sbb
xorb
divl
mov
lret
xchg
mov
mov
cmc
jl
inc
gs
push
adc
stos
pushf
and
push
call
dec
fiaddl
and
insb
dec
mov
loopne
jmp
es
mov
and
movsb
cmp
dec
pop
popa
call
pop
sbb
cmp
jnp
arpl
or
push
pusha
dec
sbb
adc
sbb
aas
out
mov
rorb
cmp
xorb
sbb
jp
and
movsl
mov
lcallw
mov
movsb
stc
sahf
pop
mov
inc
push
cmp
ss
push
mov
xchg
mov
push
leave
aas
nop
mov
push
outsb
jne
or
ds
pop
pop
inc
clc
cltd
fistpl
mov
dec
aaa
mov
push
mov
mov
sub
sbb
lret
addr16
add
montmul
cmpsb
inc
jecxz
pushf
pop
int3
outsb
mov
mov
bound
xchg
scas
pop
icebp
push
lea
and
mov
mov
push
adc
xchg
les
ds
pusha
loopne
aas
sbb
pop
insl
bound
push
push
mov
push
pop
out
dec
and
mov
mov
pop
arpl
div
dec
inc
pop
icebp
lret
jl
hlt
adc
rcrb
adc
mov
push
inc
jbe
jne
cmpl
dec
add
int
sbb
lret
push
and
out
insb
shl
or
adc
mov
adc
gs
mov
rorb
sub
fstl
add
aam
xchg
push
dec
fsubrl
clc
ja
pop
push
push
fstpt
pop
addb
push
hlt
in
inc
pop
mov
jmp
cmc
cmpsb
and
sub
mov
test
addb
or
push
push
dec
ljmp
sahf
cwtl
movsl
movsl
xchg
xor
cwtl
and
cmp
rcrb
dec
cmp
inc
int3
pop
xor
inc
lea
ret
push
ret
sahf
sahf
and
clc
push
dec
sub
xchg
jb
movsb
mov
mov
cld
cltd
sbb
movsl
push
cld
loopne
dec
scas
sahf
pop
std
jb
pop
dec
aaa
lcall
imul
add
cmp
gs
dec
in
imul
xchg
call
gs
fisubl
outsb
or
dec
cmp
lea
sbb
dec
packuswb
loopne
and
or
outsl
ss
sub
out
sbb
scas
push
jne
aam
add
int
jmp
test
sub
sub
pop
and
mov
dec
out
cs
dec
outsl
mov
xchg
jnp
into
dec
and
push
mull
sub
test
nop
idiv
movsl
xchg
pop
xchg
loopne
addb
jp
fnstenv
push
stos
xchg
sub
pop
lods
sbb
lea
daa
and
or
add
jecxz
nop
rcrb
dec
shr
pop
push
add
lods
add
add
scas
push
loopne
mov
and
xor
imul
ret
adc
data16
cmp
stc
lea
sbbl
inc
jb
mov
xor
xchg
push
rorb
out
jl
sahf
xchg
adcl
ja
ljmp
or
addb
mov
jns
shl
aad
xchg
mov
fcomi
push
mov
jne
js
scas
mov
inc
push
or
ja
and
popa
arpl
push
xchg
ds
mov
fisttpl
push
aas
or
xchg
dec
jo
lea
imul
repz
repnz
jp
ficoml
andl
push
add
in
add
xchg
jb
xchg
in
out
dec
mov
stos
stos
fs
inc
xor
pushl
pop
outsb
mov
mov
pop
xlat
xchg
push
sbb
orb
add
je
outsb
lods
das
outsb
cmc
lahf
int3
sbb
stos
mov
jnp
movsb
mov
into
bound
push
add
push
test
iret
das
frstor
mov
or
outsb
testl
and
jns
lods
sub
daa
xor
sub
jle
xchg
jg
cmp
shrb
cmpsl
adc
lds
jae
into
inc
mov
mov
fdivrl
lods
pop
jl
pusha
pushf
fnsave
outsl
mov
dec
inc
and
adc
cmovb
pusha
push
xlat
mov
pop
and
mov
rcrl
iret
sbb
andb
jle
cmc
cmp
xor
fcompp
push
stos
sbb
jmp
dec
sub
cmp
out
aaa
nop
add
repz
sbb
xor
fs
cltd
xchg
xor
xor
pop
nop
pop
inc
jno
push
and
adcb
jo
aas
push
cltd
xor
jne
sbb
hlt
jecxz
cmp
inc
out
pop
lds
jp
lods
jge
cmp
outsl
insb
xchg
movsb
scas
xchg
scas
sbb
orl
sbb
fsubrs
pop
lock
pop
sbb
clc
cwtl
jnp
out
insb
xchg
adc
mov
test
fildll
xchg
in
iret
ret
repz
in
dec
dec
mov
cli
add
lret
jge
dec
xchg
repnz
adc
xchg
ljmp
pop
fdivl
mov
stos
gs
cltd
mov
sbb
fsubrs
xor
inc
push
jge
repnz
pop
je
enter
repz
xlat
add
jo
cld
subl
mov
mov
jle
test
subb
mov
mov
add
sbb
mov
sub
xchg
inc
es
xchg
sub
cmp
dec
fs
dec
inc
test
aas
inc
fadd
in
dec
jle
dec
mov
cld
mov
xor
dec
mov
inc
jecxz
out
or
xor
movsl
adc
inc
push
pop
lds
adc
jne
shll
mov
loope
out
enter
pop
loope
pop
push
lcall
popl
sub
or
jbe
aad
inc
jle
or
iret
push
xchg
mov
ret
and
sub
mov
xchg
jo
jmp
inc
sub
repnz
add
add
data16
lods
cld
mov
hlt
xor
jae
add
lods
add
add
push
sti
rcll
push
out
sbbl
jb
mov
xchg
fwait
es
mov
jb
or
mov
dec
mov
dec
popf
and
clc
clc
push
shlb
push
pushf
test
ss
cmp
mov
lea
push
push
outsl
push
sbb
inc
cmp
ss
ss
and
mov
push
mov
aas
mov
je
sub
ret
fdivrs
mov
jmp
into
repnz
lock
gs
rcrl
leave
fnstenv
outsl
js
stos
mov
pusha
ja
sti
outsb
dec
nop
test
inc
in
cmpb
leave
and
adc
fst
xchg
iret
loope
xor
or
mov
sub
cmp
xor
adc
push
imul
xor
jnp
stos
xchg
inc
in
stc
mov
xchg
and
rcrl
pop
sti
or
pcmpgtd
fs
fs
jae
jnp
adc
dec
lods
mov
lahf
mov
call
sub
inc
in
gs
or
jg
dec
dec
ret
rcr
fs
push
sub
sub
mov
dec
shlb
mov
or
fucom
cltd
xchg
iret
pop
mov
mov
inc
or
mov
sub
cld
mov
lahf
lock
push
je
rcrl
or
sbb
or
sbb
mov
xchg
je
jo
nop
in
add
xchg
push
mov
dec
xchg
stos
scas
shl
push
fs
addr16
push
fs
jnp
push
lea
outsl
dec
xor
nop
clc
out
dec
fdivrs
jg
stos
mov
and
adc
sub
or
outsl
imul
cmpb
fdivr
or
or
roll
into
sub
pop
cmpsl
icebp
mov
pop
or
cmpsb
mov
cmp
cld
aaa
jg
xchg
jno
adc
lea
sub
xor
dec
xchg
or
dec
cmp
mov
mov
dec
pop
jb
idiv
leave
std
out
mov
jns
shl
mov
out
inc
repnz
or
loop
iret
repz
push
fwait
lods
loopne
mov
int
fsubs
pop
data16
sbb
inc
push
xlat
jnp
loop
pop
mov
dec
shll
inc
shr
and
adc
push
or
cmp
aad
pop
cmc
push
mov
push
faddl
outsb
fcoms
push
or
xor
push
mov
inc
xlat
dec
cmpsb
loopne
in
mov
jge
dec
push
int3
hlt
xor
into
inc
aad
mov
jle
aad
test
dec
gs
lahf
push
pop
pop
test
mov
stos
mov
jp
hlt
pandn
imul
add
daa
ret
push
aad
pop
clc
add
rolb
adc
movsb
scas
fld
inc
jp
lret
pop
jnp
in
dec
push
in
mov
xor
sbb
addr16
mov
int3
out
mov
jecxz
dec
hlt
cmc
adc
aad
mov
xlat
into
jle
inc
cmc
outsl
mov
sub
inc
scas
leave
ds
iret
in
dec
outsb
xchg
xor
add
add
neg
jmp
cli
and
push
dec
and
add
lods
add
add
cmp
mov
push
xor
lcall
data16
cli
inc
jmp
add
mov
inc
mov
dec
cmpsl
xchg
fsub
pop
nop
iret
hlt
and
push
data16
mov
inc
adc
lods
push
leave
jns
lods
jo
and
sbb
lea
lds
mov
aad
hlt
push
xchg
push
inc
cli
aad
dec
insl
mov
adc
cld
cmpsl
inc
pop
or
adc
add
lea
dec
mov
test
inc
cmpsl
inc
push
hlt
shr
mov
es
xlat
imulb
fwait
push
cmc
insl
and
xchg
cmp
xor
adc
cltd
xchg
mov
jmp
cmp
pushf
or
sarb
and
jecxz
add
adc
je
jp
clc
xchg
js
outsl
dec
sub
call
add
jl
das
inc
xchg
js
mov
mov
dec
sbb
add
inc
jne
pop
cmpsb
es
push
loop
inc
add
loop
cmp
sub
pushf
ret
loope
xchg
mov
sbb
and
dec
repz
mov
inc
pop
add
sbb
loope
addr16
ret
flds
scas
out
in
xchg
arpl
shrl
xchg
fstps
jbe
mov
arpl
ds
imul
xchg
movl
push
pushf
stos
adc
mov
jo
mov
push
cmp
loopne
out
adc
mov
jl
and
dec
nop
mov
loopne
and
pop
sub
pop
push
stos
fdivr
stc
hlt
push
fwait
out
push
inc
dec
mov
in
imul
mov
orl
xor
xchg
addps
test
jg
dec
adc
jmp
mov
loopne
push
mov
sbb
and
ljmp
sub
loopne
xor
mov
mov
fwait
test
daa
ljmp
cmp
dec
adc
lret
jae
xchg
les
sbb
add
cltd
ss
popf
sub
push
adc
mov
ret
lods
and
jl
pop
pop
pushf
inc
incl
iret
mov
and
sub
sbb
aam
mov
orl
cmp
aaa
xchg
sub
fnstsw
dec
mov
xor
add
inc
mov
mov
enter
mov
add
mov
shr
sbb
jns
fsubrs
ror
mov
call
push
dec
adc
jae
in
leave
cmp
shll
pushf
inc
pop
out
mov
push
xchg
xchg
jle
dec
scas
sahf
cmp
in
adc
cmp
ficoms
lods
mov
not
int3
push
repz
cmp
fidivs
sub
mov
dec
sarb
lret
popa
push
insb
test
js
and
jo
cmc
push
flds
mov
and
lods
ret
pop
test
push
divb
incb
mov
pop
fwait
lock
xchg
sub
push
cmp
stc
xor
shrl
shll
ja
mov
jl
cmp
shll
cmpsl
sub
mov
test
pop
adc
mov
dec
std
fsts
mov
dec
dec
outsb
add
xor
push
jmp
gs
adc
mov
add
cld
mov
and
jmp
pop
add
int
add
lods
add
add
push
data16
arpl
pop
sub
sub
jns
lret
stos
addr16
jmp
lret
stos
out
mov
and
mov
mov
pushf
push
push
dec
or
push
xor
rolb
dec
lret
rcrl
or
fcomp
mov
mov
dec
stos
mov
cmp
sub
pop
xlat
int
pop
fs
pop
mov
dec
mov
jb
sahf
scas
mov
repz
lahf
cmp
loopne
sahf
cmpsb
push
mov
xor
bound
shlb
pop
xchg
and
or
xchg
hlt
filds
rcrb
repz
xor
insb
hlt
cmp
jne
ja
lock
jnp
inc
cmp
and
mov
shrb
fst
daa
cmp
and
or
mov
call
add
mov
aad
pop
mov
cwtl
std
inc
adc
insl
addb
in
sbb
sahf
negb
cmp
fldcw
dec
test
out
addr16
or
sub
lcall
mov
xor
xchg
push
fadd
dec
xchg
cmpsw
fnsave
stc
dec
arpl
scas
push
loopne
push
fidivrl
inc
ds
mov
and
frstor
inc
frstor
loopne
out
movsb
cmp
jne
aas
and
mov
fnstsw
cmp
mov
scas
daa
cwtl
xchg
cmc
mov
inc
and
int3
inc
dec
test
cltd
rcrb
sbb
ja
jmp
push
nop
pushf
xchg
aam
mov
add
push
pop
pop
cmp
sti
jno
cmpb
loopne
das
scas
jae
jb
cmpsl
xchg
and
pushf
push
mov
mov
sbb
out
test
mov
sub
in
in
mov
jmp
push
out
sbb
mov
mov
xorb
mov
jbe
dec
and
jmp
sarl
lcall
xchg
push
clc
cltd
push
jmp
imul
fwait
pop
out
lea
sbb
jno
pop
dec
sub
adc
cli
fs
insb
and
aaa
rcrb
pusha
dec
xchg
jne
hlt
insb
insb
adc
mull
repnz
movsl
push
imul
dec
cmp
jge
push
sbb
xor
lea
pop
stc
aad
pop
sub
or
mov
xor
shll
subl
mov
mov
lahf
cld
adc
and
xor
jle
mov
cld
sub
clc
das
ds
popf
fadds
mov
jmp
mov
mov
sub
mov
push
jb
pop
mov
pop
xor
out
imul
insl
lcall
adc
pop
outsb
mov
addr16
and
pushl
mov
les
aam
push
pmuludq
push
xchg
pop
mov
fldt
ficoms
sahf
mov
popf
scas
nop
pop
lods
hlt
sbb
dec
jl
cltd
push
mov
cmp
and
push
jb
inc
xor
enter
lret
into
je
jbe
sti
pusha
sub
pop
daa
test
cmp
jecxz
fsubs
cmp
sub
add
pop
jp
dec
sbb
sub
fcoml
fs
js
nop
je
dec
jno
in
lock
pop
adc
ja
push
xchg
les
stos
stos
mov
add
lret
test
sbb
dec
fisubl
addl
jp
add
lods
add
add
pop
mov
out
cmpsl
mov
adc
outsb
pushf
jmp
das
add
or
xor
and
inc
inc
repnz
arpl
cltd
loope
leave
jle
and
xchg
bound
dec
jp
pushf
into
stos
jecxz
cwtl
test
lcall
mov
scas
add
daa
movsb
mov
pop
loope
sub
je
and
push
xchg
pusha
dec
lret
call
add
andl
aas
ret
dec
mov
fisubrs
mov
inc
scas
adcb
fs
aas
mov
in
out
xchg
rclb
xchg
mov
cmp
pop
mov
push
inc
and
sub
inc
jp
lret
call
rorl
mov
movsb
pop
decl
leave
adc
jno
nop
aaa
xor
shll
mov
imul
bound
add
mov
insl
stc
dec
or
cld
test
cmp
or
pop
and
xchg
int3
push
jbe
fstps
add
pop
mov
push
aas
jbe
mov
filds
test
adc
cmp
fcmovnb
inc
xchg
nop
je
mov
sub
fidivl
lret
in
js
outsl
and
or
cmpl
scas
cmp
pop
mov
fsubrs
das
pop
arpl
ds
inc
mov
push
xchg
or
test
xchg
lock
mov
mov
push
push
push
sti
pop
dec
mov
xor
adc
and
add
sub
ss
fnstenv
or
xor
xchg
test
cwtl
add
dec
push
inc
xor
sub
out
jno
add
pop
rclb
mov
fs
ljmp
js
movsb
xor
jl
xchg
push
std
inc
cmp
mov
jbe
inc
loopne
out
inc
inc
popa
cmp
cmc
mov
and
jp
aam
ds
iret
pop
rcrb
dec
lahf
cmpb
dec
repnz
sbb
pop
add
sbbb
xchg
out
outsb
jae
inc
sub
jmp
pusha
lcall
inc
add
hlt
and
pop
cmp
nop
dec
je
loop
popf
iret
or
clc
adc
push
pop
xlat
xchg
ret
xchg
sub
sub
dec
inc
push
xlat
mov
ret
shlb
jge
adc
pop
je
ja
fstp
mov
mov
test
sbb
test
jle
shlb
stos
add
xchg
icebp
setge
lahf
lods
cld
insb
push
hlt
shrb
in
pop
sbb
dec
divb
xchg
je
fadd
das
mov
aaa
jl
fs
fldenv
in
in
icebp
loopne
cmp
or
aad
das
cmp
xlat
cld
jg
sahf
leave
xchg
rol
loope
cmp
lret
mov
arpl
into
lods
push
arpl
lret
rorb
mov
in
cmp
cmp
xchg
sarb
ss
in
arpl
fildl
pop
add
icebp
lea
mov
xchg
xor
mov
cmp
cmp
sbb
imul
and
sub
lret
jmp
mov
jge
sub
out
fprem1
sub
insb
stc
adc
repz
iret
loopne
pop
jno
cltd
imul
xchg
or
jns
xchg
aam
sbb
dec
or
cmp
fidivrl
add
add
out
inc
dec
add
int
inc
add
lods
add
add
test
stc
jns
sbb
dec
int3
aaa
mov
sub
das
call
loop
jge
cli
insl
stc
xchg
stos
xor
jl
lcall
cwtl
cmp
push
push
data16
jb
pop
pop
ret
xchg
filds
xor
jnp
imulb
xor
lret
pushf
xchg
fsts
push
or
inc
inc
jge
popf
bound
mov
push
adc
mov
cmp
lcall
lods
mov
ret
fisttpl
xchg
xchg
sbb
fimull
mov
xor
xchg
adc
push
xchg
inc
mov
xor
add
sbb
btr
add
lret
shlb
pop
sbb
in
leave
inc
and
pop
rorb
sarb
push
insb
mov
jl
fdivs
push
je
or
gs
push
mov
jb
mov
loopne
popfw
popf
stos
xor
adc
lds
or
scas
adc
mov
bound
xor
shl
dec
int3
push
cmpsb
out
sahf
out
outsl
in
push
lahf
test
arpl
std
movsb
mov
dec
or
enter
cmpsl
test
dec
scas
test
pop
sub
repnz
mov
cmpl
fisubrl
and
int
cmp
psubusb
movsb
jl
popl
adc
or
push
push
ret
xor
xchg
dec
andl
aam
add
pop
popf
pop
lret
xchg
cs
test
bnd
lfs
mov
add
sub
outsl
dec
ficompl
test
shlb
jl
lret
push
inc
or
pop
sbb
inc
mov
push
ss
enter
test
test
inc
sarb
mov
inc
scas
repnz
cmp
out
dec
mov
mov
sub
cmp
pushf
push
inc
pushf
or
sbb
jb
mov
orb
arpl
cmpsl
xchg
popa
pop
adc
xlat
push
cltd
push
cmpsb
out
jb
rcll
inc
fnstsw
pop
dec
jmp
je
adc
inc
arpl
das
hlt
xchg
cld
adc
lret
xchg
mov
lret
pop
pop
xchg
pop
inc
dec
shrb
jl
rorl
mov
sar
push
adc
push
add
stc
cli
pop
mov
es
out
jns
cmp
adc
adc
push
dec
iret
and
add
xchg
mov
fcoml
rorb
insl
jbe
imul
or
gs
scas
push
movsl
cld
bound
rcr
push
arpl
shrb
mov
mov
lock
sahf
inc
rcrb
aad
dec
std
dec
push
stos
data16
int
sbb
dec
jecxz
adc
frstor
es
mov
xor
in
mov
je
xchg
pop
enter
sbb
out
adc
flds
ja
in
mov
icebp
bound
fildll
in
je
or
adcl
pushf
pop
sbb
sbb
jnp
sbb
jns
test
cmpl
sti
xchg
scas
aaa
and
scas
movsb
adc
mov
lods
mov
jl
adc
add
outsb
xor
mov
int
leave
fcompl
dec
adc
das
push
mov
leave
or
add
or
fsubrs
aam
add
lods
add
add
cmp
imul
pop
insl
and
imul
icebp
cmpsl
ret
lock
or
mov
push
jo
adc
fdivr
cmc
aad
cmp
filds
adc
add
in
pop
and
leave
dec
imul
push
inc
std
int3
outsb
mov
lahf
movb
and
in
sub
sbb
sub
mov
rorb
mov
enter
xor
bound
int
ss
xor
xchg
test
in
xor
repnz
jns
xchg
mov
mov
pop
and
lock
xchg
xlat
mov
mov
rcl
xor
pop
cmpsl
loope
and
push
in
xchg
popa
xchg
mov
data16
xchg
cwtl
mov
notl
cs
lret
aas
xor
nop
push
sbb
mov
xchg
xlat
add
nop
mov
movsb
jo
mov
int3
cltd
xchg
arpl
add
mov
js
jae
mov
clc
sbb
addr16
bound
std
popa
push
mov
movsb
cmpb
nop
mov
mov
fs
stc
out
mov
mov
ret
dec
rorb
or
pop
fsubp
dec
rcrl
adc
inc
jb
out
adc
and
xchg
push
xchg
jle
fldcw
push
lret
or
fdiv
push
rcr
pop
adc
in
lods
dec
push
xor
mov
bound
out
sub
or
pop
pop
mov
jae
mov
loope
pop
inc
mov
jne
adc
or
in
out
mov
mov
test
cwtl
cltd
adc
xor
sbb
pop
xchg
xor
cltd
adc
insl
push
ret
ds
cmc
adc
std
jg
sub
imul
mov
faddp
jmp
xchg
mov
int
sbb
rorl
sahf
dec
push
dec
pop
js
pop
jne
sbb
xor
sub
jl
adc
xchg
mov
or
ret
add
fldl
int
rol
jg
nop
inc
sbb
daa
jo
inc
push
nop
adc
test
add
fsubrp
fisubrl
mov
bound
popa
addb
imul
mov
mov
pop
popf
mov
clc
add
push
mov
mov
cmp
dec
fwait
adc
pop
popa
mov
fisubrs
es
sbb
repz
dec
xor
repnz
add
mov
mov
sub
mov
lcall
hlt
imulb
iret
bound
cvtpi2ps
sti
ficoml
stos
ficoms
hlt
imul
push
push
aas
leave
lret
es
or
jp
pop
jns
add
mov
in
hlt
jno
adc
xor
add
and
xchg
sub
cwtl
imul
push
aam
adc
andl
ss
mov
scas
dec
cmc
popa
in
js
das
inc
mov
int
jge,pn
and
fiaddl
popf
adc
push
or
xchg
loope
mov
daa
data16
inc
pop
movsb
or
jmp
push
adc
push
repz
loope
cltd
sub
dec
add
jle
mov
js
loopne
scas
cmp
shlb
aaa
or
pop
push
imulb
dec
imul
jecxz
mov
mov
outsl
inc
add
add
cltd
ja
daa
xor
orl
add
iret
std
lret
lahf
sbb
or
sbb
insb
aas
mov
scas
sbb
adc
push
jp
add
popf
jne
sbb
adc
ficompl
lods
movsb
out
jge
inc
fsubs
sti
cld
lcall
push
cmp
stos
fs
cld
cmovo
cmp
sbb
lods
cwtl
enter
mov
pop
out
xchg
lea
or
inc
xchg
push
cmp
insl
or
and
fisubrl
fcmovbe
push
adc
sub
leave
sbb
add
std
fcompl
pop
dec
push
sub
push
push
sub
aaa
xchg
and
pop
or
in
xor
or
xor
in
inc
subl
outsb
pop
add
pushf
pushf
cmp
dec
notb
mov
add
orl
ficoms
call
scas
shll
ss
jns
dec
push
mov
mov
ret
pop
test
and
imul
add
jnp
pop
xor
and
rorl
push
fildll
pop
mov
jge
xor
insl
mov
stc
mov
mov
enter
jmp
dec
es
cld
mov
mov
int3
add
lcall
push
arpl
dec
insb
push
gs
sub
jecxz
lods
decb
ror
in
push
ret
push
mov
sbb
mov
pop
test
dec
movsl
or
jmp
xchg
cmpsl
imulb
xchg
mov
cmp
js
sbb
push
pop
jp
and
inc
clc
popf
push
fsubrl
sbb
lds
js
out
cli
mov
adc
jb
adc
mov
mov
leave
sbb
xchg
out
dec
mov
sar
sub
nop
xchg
pop
pop
gs
add
push
inc
mov
cmc
and
cmp
cmp
lods
ljmp
inc
stc
add
adc
in
es
imull
dec
adc
xor
aas
insl
jl
jg
fucomp
dec
mov
inc
enter
sahf
cmpsb
push
pop
sbb
ja
je
jo
lock
mov
xchg
icebp
mov
mov
mov
clc
imul
pop
push
xor
cmp
or
les
stos
dec
push
inc
pop
jg
mov
or
push
dec
mov
fdivl
insb
loop
push
push
sti
inc
mov
xlat
mov
sbb
inc
insl
jmp
pop
loope
inc
test
sti
cltd
mov
xor
cmp
pop
cmp
loopne
and
pop
in
mov
fists
push
jae
data16
mov
mov
out
cltd
rorl
int
mov
add
gs
lret
in
add
or
int3
cmp
or
outsb
out
popa
loopne
out
mov
gs
gs
xchg
inc
push
pop
shl
jle
addr16
dec
es
inc
lahf
sub
mov
out
movsb
push
pusha
jl
test
leave
sti
push
mov
sub
pop
sbbb
sbbl
sbb
or
mov
mov
shll
jno
shlb
push
inc
sub
jnp
push
mov
mov
xor
repnz
fstps
mov
out
out
imul
cmp
mov
aad
pop
mull
jp
jbe
jae
les
adc
mov
add
add
add
add
iret
lahf
push
loop
aad
add
add
cmc
popa
jmp
gs
sub
inc
lds
push
sub
sbb
push
xchg
movsl
es
lcall
xchg
add
mov
mov
pop
jns
mov
cmp
inc
inc
test
or
cmp
fists
pop
lods
dec
xor
jge
shrb
dec
stos
pop
insl
or
jno
xor
push
scas
jb
popf
and
mov
outsl
lods
sbb
mov
sub
lods
sbb
sub
adc
cltd
aaa
dec
fcompl
and
add
das
out
push
mov
inc
adc
outsb
hlt
rcr
decb
sbb
push
adc
pop
ret
in
push
pop
loop
sar
xchg
mov
push
sarb
inc
aaa
lcall
mov
ja
insb
mov
pusha
call
adc
fs
in
mov
sbb
movsl
into
and
xor
cmp
lahf
nop
jmp
dec
jne
cli
jecxz
fnstenv
rcrb
add
dec
insb
daa
jbe
jp
xchg
jns
repz
lods
jge
push
mov
sub
xor
or
pop
jno
adc
into
fists
xlat
xchg
arpl
rolb
cwtl
dec
bound
mov
cmpsl
scas
push
mov
pusha
outsb
mov
sahf
dec
xchg
lea
cmp
cmp
andl
adc
mov
ret
mov
pusha
test
sub
jmp
dec
adc
faddp
sbb
negb
jmp
mov
insl
mov
add
and
push
jnp
sti
ficomps
cwtl
fisubl
push
mov
jbe
pop
mov
inc
into
bnd
or
sbb
push
insb
cmpsl
jmp
dec
addr16
jg
pop
jbe
sar
adc
add
ja
or
imull
mov
add
push
scas
and
mov
add
or
rcrb
into
lahf
and
orb
and
jo
and
mov
and
cmc
into
test
or
ds
dec
loope
mov
iret
aaa
and
inc
jmp
dec
fbld
fdivrl
aaa
stos
xor
adc
mov
adc
sub
in
xchg
mov
xchg
sarl
mov
cmpsb
loop
jg
mov
pop
or
inc
mov
jmp
push
sub
cmp
jg
mov
xchg
loop
fisubs
sub
stos
and
sub
out
rclb
xchg
mov
jg
fcompl
mov
lods
out
fwait
dec
ret
outsb
add
fnstcw
iret
pop
jmp
xor
cli
das
inc
lcall
sub
or
dec
cmp
add
movsb
cli
nop
fidivs
mov
out
sbb
das
shll
in
ljmp
inc
pop
mov
pop
arpl
es
mov
pop
push
cmp
push
lock
add
inc
inc
mov
pop
dec
jbe
loope
xor
outsb
stos
sbb
mov
push
xchg
or
xchg
adcb
clc
pop
push
xorb
mov
inc
mov
jmp
popa
lret
lret
lods
lahf
je
mov
mov
js
push
xor
fwait
xor
jae
stc
sub
mov
xchg
or
xchg
sbb
adc
and
sub
sarb
fs
mov
jmp
lcall
jg
push
jecxz
xor
dec
add
lods
add
add
push
dec
mov
push
mov
leave
or
mov
pop
jg
lock
mov
cmp
dec
inc
push
sub
loop
inc
sti
dec
sub
xor
nop
cmp
xlat
aaa
xor
mov
mov
push
pop
mov
stos
std
icebp
adc
repz
fdivs
jae
das
and
sub
into
pop
jmp
loope
cmp
and
or
mov
mov
dec
adc
jmp
pop
fdivrs
jae
addr16
ja
fbstp
dec
test
fstpl
test
push
cmp
lcall
dec
jg
pop
test
repz
sub
sub
pop
inc
subl
adc
xor
bound
and
push
aam
lcall
pop
sbb
fsubrp
xchg
ror
jg
mov
add
gs
decl
sub
and
push
ret
shrb
pop
out
add
and
cmpb
jae
add
pop
pop
xchg
sbb
into
jne
pop
pop
xor
filds
and
int
xlat
jo
lds
cli
mov
sbb
lcall
fisttpll
imul
xchg
stos
popa
lret
cmp
jno
aaa
push
mov
push
fs
or
js
inc
inc
xor
data16
push
std
push
xchg
test
pop
and
pop
js
movsl
lock
pop
pop
fbstp
aaa
push
lds
cmp
sbb
sbb
mov
and
inc
in
xchg
inc
xchg
sahf
mov
sahf
loope
orl
xor
inc
das
dec
ds
jbe
xor
adc
insb
xchg
mov
and
loope
pusha
cmc
jne,pn
call
loop
xlat
fxch
pop
mov
fbld
xchg
scas
mov
push
iret
add
sub
mov
leave
out
cmp
aad
aaa
scas
mov
xchg
push
push
outsl
aam
xor
aam
lret
aaa
inc
in
mov
out
in
pushf
dec
stos
mov
test
out
out
dec
xor
inc
or
nop
push
xlat
cld
sub
rorb
adc
lock
sahf
test
and
lock
clc
xchg
aam
inc
or
xchg
aam
jae
add
stos
aaa
push
les
fdivs
pop
or
sbb
jb
cld
into
daa
pusha
inc
outsl
int3
shrl
sbb
sbb
or
mov
xor
push
mov
ds
or
or
mov
mov
in
and
mov
pop
dec
lods
dec
adc
mov
mov
out
mov
xor
sarb
inc
and
adcb
shlb
add
pop
daa
outsl
clc
out
stc
dec
arpl
je
mov
stc
and
clc
in
jb
shrb
lcall
cmp
jo
mov
fisubs
int3
shll
outsb
mov
pushf
xlat
pop
insl
test
mov
and
jle
pushf
jno
pop
inc
jnp
sub
ret
aad
mov
rorl
andl
lods
adc
adc
mov
mov
inc
dec
push
adc
fcomps
aas
xorl
adc
jecxz
jnp
cs
insb
or
pusha
lods
and
dec
push
lods
and
int
dec
cld
mov
push
rcrb
xchg
add
add
xlat
dec
call
adc
dec
and
push
add
lods
add
add
xor
ljmp
inc
mov
jl
leave
cwtl
mov
pop
pop
xchg
jns
cmc
jae
dec
mov
lea
jno
movsb
int
jge
sbb
imul
loopne
lods
adc
ds
shlb
mov
fstpl
add
into
add
icebp
sub
scas
dec
dec
fcoml
sub
loopne
andl
data16
mov
orl
outsb
mov
mov
outsb
clc
mov
adc
stos
shlb
cs
add
inc
sub
mov
xor
fidivs
add
pop
adc
lret
mov
sahf
leave
and
rorl
push
xor
lea
cmp
jp
inc
orl
cmpb
jne
stc
in
push
pop
out
push
mov
sub
outsl
lahf
or
fsubrs
aaa
inc
cs
push
mov
in
cltd
repz
add
out
loop
xchg
mov
push
sub
hlt
test
dec
jb
daa
testl
imul
mov
rcll
and
add
imul
sbb
lds
sbb
fs
imul
ret
insb
mov
aaa
orb
rclb
xor
iret
outsb
pushf
jle
insb
xor
mov
orb
int
dec
iret
aas
inc
xchg
inc
out
test
xchg
imul
mov
enter
mov
lods
xor
sub
or
xor
jbe
test
pop
ret
push
leave
cmp
in
fimull
rcrl
dec
fdivl
adc
sti
lock
jbe
xchg
jo
mov
and
les
mov
pusha
es
push
mov
jl
loope
not
push
les
push
lahf
or
push
cs
lds
cmp
push
and
and
sbb
or
pop
push
pop
jmp
stos
inc
add
push
inc
imull
jae
int3
cs
mov
cltd
in
pop
add
cmp
dec
push
or
add
or
ja
or
add
sub
push
pop
inc
ljmp
movsl
add
stos
or
add
rolb
mov
push
inc
imul
lods
xor
je
cli
xchg
aas
jb
movsb
stos
xor
mov
mov
loope
push
inc
or
int
dec
inc
or
int3
xor
out
pop
test
ss
push
add
or
loop
push
jp
add
mov
xorl
scas
out
inc
ja
imul
push
pop
sub
mov
bound
dec
es
adc
in
outsl
cwtl
pop
xchg
nop
dec
fnstsw
push
mov
xchg
scas
cmpb
std
out
xor
ret
inc
mov
pop
ret
es
jle
lret
jmp
loopne
cli
inc
inc
or
mov
test
cmp
mov
jne
rcl
inc
ss
xor
mov
in
mov
inc
test
mov
and
test
cmp
jo
fsub
xchg
loopne
xor
out
push
ret
pop
stos
std
arpl
movsl
push
sbb
push
in
mov
add
add
jnp
mov
cmp
test
add
add
fwait
cltd
daa
adc
add
mov
insl
and
dec
xor
and
sbb
jmp
mov
setno
inc
xor
in
fbld
mov
and
bound
push
stos
jbe
add
jmp
sub
push
enter
xchg
pop
test
subl
cli
sbb
cmpsl
leave
mov
inc
add
ret
push
jne
aam
pop
lret
idiv
push
push
popa
sub
and
scas
jns
popf
push
xor
push
fdivrl
in
sub
mov
mov
inc
jg
xchg
fbstp
mov
xchg
out
cmpsl
sbb
iret
je,pt
mov
or
and
push
test
stc
dec
add
es
mov
add
jns
aad
or
push
mov
jb
orb
nop
jb
fstl
dec
lds
add
sub
adc
sub
jae
xchg
rcrb
enter
cmpsl
dec
gs
in
aad
out
xchg
loop
pop
inc
push
sub
jp
pop
lods
dec
in
fwait
add
pop
in
and
mov
fisttpll
and
push
scas
into
push
ja
lret
hlt
dec
iret
fisttps
mov
xchg
es
test
mov
sbb
out
out
cmpsl
into
and
jo
xor
std
adcb
jg
mov
or
lret
pop
inc
dec
jae
push
cmpsb
or
lret
xchg
fwait
jmp
add
push
testb
push
das
push
push
mov
fs
cli
dec
fdivr
movsb
xchg
pop
lcall
lods
inc
lret
push
test
jbe
dec
out
sbb
std
jns
ss
mov
mov
fcmovnb
mov
mov
sub
dec
xor
mov
cmp
scas
sub
or
push
and
into
adc
pop
shll
xor
dec
inc
mov
add
aad
sub
dec
loopne
mov
int
sbbb
aas
push
pop
and
sbb
fucomip
stc
jge
cmp
cmp
lds
pop
xchg
mov
mov
movsb
inc
mov
in
mov
sub
xchg
hlt
or
sub
inc
xor
cmpsl
fnstenv
jecxz
icebp
subl
data16
ret
cmp
test
pop
hlt
fisttpl
outsl
pop
into
adc
inc
xor
dec
test
pop
sbb
jo
repz
movsl
cmc
int3
cmpsb
xor
inc
scas
cmp
jns
jmp
repnz
sti
mov
xchg
xchg
aaa
push
add
adcl
test
pop
cltd
std
mov
in
dec
popf
add
mov
out
mov
xor
repnz
mov
loop
repnz
minps
pop
mov
adcb
jbe
mov
jb
xor
inc
push
cwtl
fisubl
xchg
ret
int
cwtl
cmp
test
mov
ret
test
lds
in
pusha
jecxz
pop
mov
mov
in
cmc
add
lock
je
dec
or
mov
inc
push
outsl
lret
mov
int
fstl
rcrb
push
jge
adc
and
pop
int3
add
adc
lahf
inc
cmp
adc
subb
and
or
xor
push
push
xchg
jbe
jne
mov
add
add
jg
jns
pop
or
add
add
add
add
ss
scas
dec
mov
imul
pop
mov
add
into
iret
scas
test
push
add
sbbb
jge
mov
cmp
shll
add
leave
inc
test
mov
imul
inc
les
lahf
shrb
push
ds
or
lods
jp
push
mov
loopne
jno
inc
test
mov
lds
cwtl
ljmp
mov
sub
jmp
inc
cmp
gs
and
pop
and
xor
xchg
fsubrs
aaa
cmc
mov
aam
addr16
aas
mov
mov
pop
icebp
in
incl
out
cmp
cmovle
cld
daa
inc
lcall
clc
push
push
fsubrs
jge
repnz
jl
adc
pop
lahf
mov
sub
fcomp
jbe
jbe
gs
gs
push
xchg
push
pop
push
rcrb
lods
cmp
dec
popf
mov
or
cltd
pop
icebp
out
jb
lret
push
sbb
and
jnp
dec
pop
addl
xor
adc
xchg
data16
mov
xor
sub
int3
pop
out
inc
and
or
add
into
sbb
pushf
es
xor
cwtl
scas
pop
movsb
xor
sub
mov
adcb
sub
testl
lods
cmp
pop
lret
in
pop
arpl
push
pusha
push
iret
adc
enter
and
cmp
movb
negl
push
jb
dec
insl
test
push
push
in
test
std
not
mov
xchg
mov
jno
mov
mov
adc
push
xchg
inc
inc
push
std
test
js
cs
or
dec
mov
cltd
push
sbb
dec
in
addr16
cmp
mov
jmp
outsb
insb
xchg
shrl
pop
rol
out
mov
xchg
call
sti
dec
es
into
iret
cmpsl
pop
mov
add
inc
inc
cmpsl
xchg
fimuls
mov
jns
js
scas
rclb
sub
mov
lahf
jmp
stos
dec
sub
and
xor
insb
cmp
sub
dec
in
push
mov
mul
cwtl
sub
dec
jle
push
dec
cmpsb
insb
clc
xor
cmpsl
add
insl
stos
jbe
push
bound
sbb
mov
out
push
arpl
or
leave
inc
test
in
adc
repnz
pop
adc
hlt
movsl
movlps
shll
rclb
jo
adc
stc
sbb
frstor
fstps
mov
movsb
push
ljmp
pop
ret
cwtl
sub
and
add
add
pop
pop
sub
xlat
js
mul
aaa
test
push
aaa
test
cmpsl
rcr
aad
dec
adc
and
stos
mov
sub
pop
push
dec
cs
add
cmpsb
fadds
mov
incb
stc
test
das
clc
dec
mov
jne
add
and
mov
xlat
mov
mov
lods
add
xor
out
shrb
and
cmp
pop
add
xchg
outsb
lret
test
pop
pop
jb
or
rorl
and
outsl
shl
repnz
jle
das
mov
mov
mov
add
outsb
idivl
notl
pop
jno
inc
mov
lods
add
add
xor
mov
fsub
xor
shlb
xor
xor
divb
xlat
es
push
add
fldl
insl
inc
cmpsb
jb
hlt
cmpsl
fistpl
cmp
insb
es
push
out
or
or
mov
outsl
push
mov
mov
xchg
adc
and
lods
repz
icebp
push
stc
dec
push
mov
jmp
xor
sbb
or
hlt
push
lods
pop
or
mov
dec
pop
push
mov
lret
sarb
adc
aam
outsl
leave
cmpl
incb
and
stos
out
in
es
mov
or
daa
adc
ljmp
out
repnz
push
sub
sbb
sar
repz
jns
test
push
push
xlat
cmpsb
dec
pusha
pop
sbb
repnz
xor
js
xor
popf
jl
add
arpl
inc
les
iret
mov
inc
lahf
jae
mov
push
mov
xorl
psrlw
pop
add
xchg
sti
cli
popa
ficoml
fcmovbe
fdivl
daa
lods
data16
in
cwtl
cmp
cld
xor
scas
gs
jge
jge
cli
call
outsl
mov
mov
jp
xchg
cmp
sub
sub
xor
xor
pop
push
lea
sbb
inc
pop
mov
scas
mov
ds
lcall
aas
xchg
add
ret
movb
dec
mov
std
mov
test
insb
adc
mov
rcrb
call
cli
imul
xor
fs
shrl
xor
icebp
sub
sub
xchg
pop
int
jmp
push
mov
inc
lods
adc
ja
cmp
xor
xchg
adc
sbb
mov
cli
sarb
dec
in
adc
or
jne
aam
push
xchg
ljmp
cwtl
dec
xor
fwait
mov
mov
mov
shlb
dec
fimull
arpl
pop
nop
lea
push
ficoml
icebp
aaa
lret
sti
mov
mov
mov
lds
mov
outsl
push
add
shl
add
rclb
jle
inc
jne
js
mov
mov
ret
push
add
mov
movsb
push
popa
xchg
inc
jge
fwait
aas
ljmp
and
lea
leave
mov
test
cld
xchg
xorb
mov
sub
sub
cmc
filds
cli
aad
mov
xchg
xchg
cli
mov
test
pop
add
andb
or
or
aaa
sahf
jnp
stos
outsb
jne
mov
ljmp
lcall
pop
js
out
gs
mov
inc
dec
mov
jns
dec
cmpsb
aam
imul
enter
adcb
ljmp
inc
js
jne
gs
cmp
sub
inc
adc
rcl
insl
icebp
int
mov
add
cli
or
jne
in
adc
adc
shll
mov
xor
fwait
cli
push
and
mov
imul
out
popf
xor
mov
das
std
loope
sbb
pop
rcr
inc
addr16
mov
cmpsb
and
xlat
dec
insl
loopne
jl
arpl
xchg
sub
mov
add
sub
sti
lods
or
jmp
test
add
lods
add
add
jg
mov
adc
mov
aas
hlt
xlat
pushf
fidivrs
mov
push
dec
out
sbb
add
sbb
mov
and
addb
mov
fs
nopl
enter
xchg
xchg
xchg
push
and
in
mov
push
jo
mov
mov
in
cs
pusha
mov
push
ret
adc
clc
jmp
int3
xchg
mov
stos
cmc
pop
cmp
and
lahf
testb
pop
push
jp
cmp
push
pusha
xor
test
adc
mov
jmp
inc
jge
push
xchg
mov
daa
sub
das
lcall
or
fcmovnbe
je
inc
cmpl
lods
scas
mov
or
std
into
dec
ss
lods
leave
test
push
icebp
rcr
and
cmpb
jp
inc
and
adc
sbbl
adc
into
push
push
ljmp
add
mov
test
push
inc
test
xorb
pop
cs
out
push
fiadds
int3
loop
cmp
mov
xchg
mov
cmpb
or
sub
dec
test
inc
and
addb
mov
movsb
or
outsl
loopne
hlt
stc
call
sub
hlt
mov
mov
pop
push
mov
xchg
sbb
scas
call
ja
sti
cwtl
rorb
xor
ljmp
mov
sub
dec
sub
pop
loopne
addb
sub
sti
adc
sub
sub
add
mov
xor
sbb
mov
fcmovu
data16
mov
mov
and
fwait
inc
or
add
mov
and
call
xor
and
mov
sbb
notl
xor
xchg
push
mov
stos
dec
mov
xchg
int3
out
jno
test
das
stos
xchg
stc
dec
enter
lcall
loopne
add
nop
or
popa
lret
sti
dec
adc
xor
in
add
pop
and
pop
lcall
xlat
mov
jecxz
mov
jne
cmpsl
dec
dec
cmp
ja
cmp
sub
jecxz
push
incb
addl
jae
mov
xor
cltd
mov
fwait
mov
cmp
adc
dec
mov
cmp
stos
icebp
cltd
inc
and
mov
sbb
rorb
pop
enter
out
mov
sub
push
or
aas
cwtl
cs
adc
movsl
mov
mov
bound
leave
add
rorb
xchg
fcmove
outsl
pop
push
test
jmp
push
lret
shll
add
pop
mov
xor
jb
in
sbb
and
nop
out
inc
push
cmc
mov
cld
std
mov
xchg
mov
mov
pop
xchg
rorl
mov
add
fmuls
or
ja
mov
arpl
mov
pop
cwtl
scas
loope
xor
dec
add
es
aas
dec
enter
nop
xor
xchg
cwtl
dec
lods
xchg
adc
mov
iret
lahf
add
xor
push
ficoms
call
das
les
pop
push
fistpll
push
clc
jbe
into
jo
sbb
notl
add
jle
in
push
cld
cs
repnz
add
xor
push
pop
lcall
add
lock
iret
test
sbb
pop
test
xchg
and
lret
mov
or
xchg
push
push
or
fistl
push
das
and
mov
or
xchg
icebp
cltd
aad
in
push
cmpsb
pop
imul
inc
or
mov
pop
mov
sahf
icebp
mov
sub
sbb
and
aaa
dec
pop
mov
push
and
mov
stos
adc
insl
test
outsl
shrl
jp
cmpl
ss
fstp
sbb
mov
fimuls
aaa
cmove
pop
in
rcrl
jp
insb
and
gs
mov
sub
rcl
in
mov
xchg
hlt
add
pop
rorb
pop
test
pop
fdivr
outsl
sahf
jns
je
cwtl
pop
mov
pop
push
push
fs
lea
subl
mov
adc
push
mov
icebp
dec
loop
push
jecxz
pop
xchg
fcmovnu
push
inc
add
sub
scas
dec
lahf
add
pusha
mov
rclb
pusha
cmp
xchg
pop
and
cmp
faddl
inc
mov
fcoms
mov
inc
jae
aaa
dec
push
idivb
vcvtpd2dqy
loopne
or
pop
clc
adc
mov
enter
cmpsl
and
aas
addr16
in
jl
xor
aad
cmp
jmp
lods
pusha
pop
or
das
dec
repz
scas
rol
mov
mov
pop
and
add
shlb
mov
andb
push
push
xchg
push
aas
sub
jb
push
popa
push
iret
jo
fwait
aam
xchg
mov
js
pushf
and
jnp
test
mov
mov
jmp
push
ds
jno
mov
lds
je
cmp
movsl
add
mov
arpl
cmp
adc
fbstp
push
and
test
mov
cltd
shrb
lds
cmc
or
lahf
lret
sbb
push
xor
pop
insb
inc
cmc
and
fiaddl
mov
fsubrs
xor
int3
into
mov
push
andnps
jno
test
addr16
and
imul
mov
mov
loop
cmp
ret
add
mov
shrl
gs
mov
inc
ret
mov
scas
xchg
sub
push
mov
mov
mov
ds
ret
outsb
jl
outsl
jb
xor
jecxz
and
cmp
nop
inc
out
std
ja
xor
lds
hlt
xor
pop
cmpsb
out
rolb
jle
dec
mov
sbb
or
arpl
aaa
lret
fsubrl
adc
out
xor
xchg
xor
pop
cmp
cmp
imul
sub
xlat
inc
es
es
leave
cld
cmp
mov
add
mov
hlt
shll
sbb
and
je
int
sbb
lock
cmp
xchg
ret
jmp
call
sub
pop
adc
sbb
insl
loopne
in
aaa
push
lock
stc
adc
mov
shrl
push
cmp
and
sub
mov
dec
enter
pusha
into
and
icebp
lods
in
add
add
mov
js
push
xchg
imul
add
or
mov
mov
push
sbb
and
jg
repnz
pop
mov
mov
rorb
ja
out
cmp
orb
repnz
and
pop
enter
pusha
mov
inc
pop
lea
enter
mov
pop
mov
cld
out
test
out
cmpsb
inc
pop
adc
testl
pop
das
lcall
ret
out
int
rol
add
lret
inc
out
clc
mov
lret
inc
jo
shrl
cmp
pop
out
adc
xchg
call
call
mov
les
popa
and
cmp
pop
sbb
push
ja
or
sti
inc
dec
subl
daa
pop
sti
into
rcll
mov
xchg
cmpsb
xor
pop
int3
cmp
test
dec
lock
sbb
cmp
js
push
push
push
mov
xchg
jo
inc
sub
mov
dec
data16
sub
rolb
idivb
jecxz
cltd
sub
in
sbb
pop
out
stos
mov
pop
in
hlt
bound
dec
out
ror
add
xchg
jge
xor
jg
push
dec
pop
sbb
fnstcw
lahf
or
mov
sti
mov
add
mov
out
into
fnsave
pop
and
adc
out
bswap
call
cli
or
pushf
ja
mov
je
cmp
repz
mov
dec
aas
sahf
imul
lods
xor
hlt
mov
lret
cs
inc
lret
iret
in
mov
sub
push
ss
ret
push
add
jecxz
jae
mov
xor
pop
xor
dec
mov
jle
aas
adc
movsl
insb
rorl
push
add
mov
ljmp
outsl
mov
fwait
cltd
mov
data16
pop
sbb
imul
push
cmpsb
ficoms
mov
call
cmp
lret
lods
leave
add
mov
fcmovu
addr16
push
add
pop
push
pop
mov
lret
cltd
add
out
add
dec
test
sbb
aad
pop
cli
out
fadds
and
push
add
fistps
lock
jg
out
cmp
fisttpll
mov
in
sbbb
ljmp
movsb
push
out
cmpsl
jg
dec
ficoms
cli
enter
lods
mov
popf
outsb
insl
xchg
scas
and
idivl
fwait
or
sbb
orl
rcrb
add
shll
lret
sbb
lret
xchg
outsb
repnz
inc
std
jnp
divl
movsb
jmp
js
jecxz
in
and
or
bound
cs
es
xchg
push
adc
mov
test
xchg
loope
adc
mov
add
rcl
xchg
clc
inc
dec
mov
in
imul
push
fldenv
repnz
or
mov
cmp
outsb
nop
xchg
lea
pop
cmp
mov
push
sbb
cmc
sbb
loop
jp
sbb
es
rclb
dec
push
mov
movsb
mov
sahf
adc
jnp
inc
jle
push
jnp
xchg
xchg
out
leave
and
test
aad
std
ljmp
and
mov
lcall
add
add
add
add
ret
repz
fcmovnb
pop
sbb
addr16
add
lods
add
add
in
cmp
push
dec
mov
cmpsb
push
dec
mov
in
movsb
pop
ja
xor
icebp
sbb
inc
pop
imul
cs
pop
add
push
imul
mov
cs
ret
lret
xchg
mov
sti
pcmpgtb
mov
adc
adc
pop
int
mov
inc
pop
fstpt
cmp
cmc
mov
sbb
cmpsl
cltd
push
dec
int
mov
push
cmp
popf
pop
call
inc
leave
mov
or
int
xor
js
cmp
dec
aaa
adc
mov
fcompl
lds
bswap
lahf
cld
xchg
mov
inc
push
or
adc
or
es
sub
pushf
leave
testl
cmp
sbb
jle
adc
dec
repnz
inc
or
bound
adc
jb
jmp
push
ja
movsb
lods
and
aaa
mov
push
fists
loope
push
push
mov
inc
outsb
in
xchg
call
jg
sub
stc
pop
mov
jl
div
push
mov
inc
dec
sbb
and
add
loope
sbb
aaa
inc
jmp
arpl
leave
mov
push
cli
pop
cwtl
add
loope
xor
insl
dec
mov
testb
jo
jge
mov
and
push
mov
lahf
nop
dec
jae
or
push
je
mov
mov
iret
out
push
data16
cwtl
sbb
jns
cld
lret
cmp
mov
inc
iret
ljmp
mov
and
push
sub
push
mov
adc
push
dec
int3
pushl
mov
ret
pop
movl
sbb
dec
pop
mov
out
pop
stc
add
cltd
scas
dec
int3
shrb
sbb
dec
lds
xlat
cltd
mov
leave
push
adc
ljmp
pop
push
adc
mov
xchg
push
shr
push
cmpsb
mov
sub
das
bound
out
jmp
mov
std
bound
outsb
sbb
fxch
out
push
xor
or
inc
add
jge
out
cmp
jno
sbb
cmp
cmp
out
push
dec
ficoms
or
sub
incl
dec
add
lahf
inc
push
pop
adc
iret
add
aaa
xchg
lret
movsb
loopne
insl
and
incl
jecxz
sub
cmp
adc
test
lcall
mov
and
pop
cmp
les
mov
jno
pop
dec
shrb
inc
icebp
push
in
fwait
nop
rcrl
and
sub
sbb
mov
push
mov
mov
xchg
push
lret
sub
inc
pop
pop
ss
xor
mov
xchg
or
nop
jmp
push
dec
and
xchg
rclb
cmp
xor
sub
ss
cld
pop
loope
mov
insb
sbb
jb
out
cmp
jp
popf
xchg
sub
shrl
icebp
imul
icebp
shrl
fcompl
mov
lret
inc
mov
jge
nop
mov
fwait
jae
lds
fsts
push
or
jl
cld
mov
and
pop
addr16
cmp
in
ljmp
mov
int
mov
aas
and
mov
lcall
and
push
popa
push
inc
es
xchg
int
and
add
add
add
add
and
gs
daa
sti
mov
push
out
out
xchg
lock
add
int3
repz
ret
pop
or
int3
xchg
and
loopne
dec
mov
pop
fprem1
das
outsl
movsl
cmp
and
fiaddl
sbb
xor
aas
int
xor
push
sbb
adc
ja
jge
aad
popf
push
jns
in
xor
roll
fmull
mov
int3
imul
pop
jnp
add
std
bound
cmpsb
mov
jp
out
fiaddl
cmp
stc
mov
fiadds
and
movsb
mov
mov
outsb
jns
jmp
aaa
cmp
push
jno
mov
jecxz
movsl
mov
and
dec
adc
xchg
sub
fneni(8087
pop
sarl
lahf
pusha
in
lds
add
mov
sub
repnz
mov
call
and
inc
out
fimull
or
mov
das
sub
jnp
inc
mov
jb
cli
or
inc
mov
clc
in
aad
push
das
lret
mov
mov
mov
jo
push
mov
aad
js
mov
out
mov
xchg
mov
xchg
sbb
bound
mov
mov
out
cltd
cmp
ret
and
popa
add
jbe
popf
outsl
push
inc
orb
in
xchg
jo
adc
icebp
xor
repz
jl
aas
out
jg
mov
xorl
out
stos
cmp
loopne
movsl
dec
sub
fwait
cmpsl
push
shll
out
aas
or
dec
std
shr
movsl
pusha
pusha
ret
rorl
push
int3
jne
or
and
dec
push
pop
sub
cmp
dec
enter
mov
mov
xor
fiadds
in
lods
imulb
popf
inc
dec
ds
mov
xor
les
or
sahf
inc
sbb
xlat
pop
outsb
sbb
scas
or
xor
xlat
test
jae
inc
stos
test
outsl
sub
push
les
cmp
jb
xchg
int
and
test
xchg
into
ja
cmp
mov
cmp
shrb
loop
test
mov
sbb
xchg
push
push
inc
ja
mov
inc
js
mov
xor
add
data16
loope
stos
sar
ret
jle
and
push
xchg
xchg
jmp
push
loop
ljmp
leave
xchg
adc
lea
inc
lock
inc
rcr
sbb
pop
fdivl
pop
pop
outsb
and
xor
xchg
lcall
int
cmp
mov
sbb
push
shll
sub
xor
sti
push
ror
push
data16
popf
or
repz
out
daa
in
loopne
es
aad
dec
dec
cmpsl
mov
mov
push
cmp
leave
mov
fimull
aas
mov
and
setb
inc
in
xor
dec
push
mov
mov
shrb
cltd
nop
xor
mov
or
push
pop
push
cmp
sbb
sub
pusha
dec
out
icebp
iret
xchg
xor
cmp
mov
sti
ljmp
push
mov
and
sbb
cmc
mov
cs
sub
je
call
add
add
add
add
mov
aas
sysexit
pop
push
out
rcrb
add
nop
das
xlat
in
jmp
cmpsb
adc
xchg
or
hlt
shr
hlt
mov
dec
dec
xor
push
xor
sub
shr
outsb
sub
jb
xor
inc
outsl
xchg
sti
jno
std
pop
adcl
xor
into
shl
push
mov
mov
aad
push
ficomps
jnp
aam
push
nop
and
dec
cs
mov
dec
aad
mov
xor
sbb
movsw
xor
push
cli
xchg
cmpsl
fistl
je
js
repz
rcrb
fstl
loop
and
das
mov
not
jle
sub
test
jp
nop
xchg
sub
dec
popf
sbb
inc
mov
fs
pop
out
lret
in
inc
xchg
dec
aad
icebp
jmp
or
stos
push
test
sbb
pop
mov
inc
push
sbb
repnz
xadd
mov
dec
sahf
cmp
add
push
pop
cmpb
cmp
dec
sti
loope
aad
cmp
pop
mov
cmp
fwait
fwait
xor
outsb
jae
cli
rolb
pushf
test
cmpsl
or
aad
decb
adc
enter
insl
test
dec
sbb
add
loope
sahf
das
xchg
xchg
sbb
mov
add
add
aas
or
cmpsl
cmp
movsl
mov
inc
inc
adc
iret
add
imul
insl
dec
ja
sbb
push
sbb
js
popa
mov
dec
imul
fsts
mov
ffreep
aad
xor
addr16
pop
lods
imul
xchg
arpl
idiv
jbe
xchg
mov
lock
pop
out
mov
div
ret
jmp
mov
mov
xchg
in
lock
mov
adc
add
nop
daa
xor
imul
jecxz
stos
jecxz
pop
sbb
mov
pop
mov
dec
push
fucomi
pop
sub
or
mov
shr
pop
adc
cli
bnd
std
add
jmp
and
insb
ret
out
mov
push
pop
andb
das
daa
jp
mov
jg
cmc
inc
rcl
rorl
stos
mov
jg
movsb
lods
stos
sbb
add
fisttpl
mov
mov
in
sti
call
push
jl
pushf
push
push
push
inc
test
jne
popa
jns
minps
push
cmpsb
paddsb
outsb
call
and
dec
inc
jl
sbb
fmull
push
movsb
xchg
mov
shrb
es
xor
fucomip
xchg
adc
mov
push
daa
adc
out
push
addr16
inc
jmp
sbb
add
inc
jne
dec
push
cmpsb
add
test
jno
dec
loop
mov
cmp
mov
xchg
popl
sub
jmp
insb
or
cmp
and
outsl
cmc
lock
shl
sbb
in
nop
cld
push
aas
bound
loopne
into
repz
int
sahf
xchg
imul
push
ficompl
fs
out
inc
mov
pop
decb
push
test
lcall
test
sub
jmp
sahf
cmp
ficompl
ljmp
jp
mov
jmp
cwtl
out
cmc
push
popa
cmp
cmp
jnp
add
add
repz
push
cmp
outsl
dec
in
xchg
dec
js
add
xor
inc
jl
shll
or
mov
mov
mov
inc
mov
or
cmp
lret
push
jmp
pop
jecxz
je
sbb
test
inc
pop
out
repz
xchg
cmp
popa
and
jmp
push
stos
mov
jecxz
aam
inc
mov
dec
add
les
nop
mov
mov
nop
not
mov
xchg
jnp
pop
in
sbb
aaa
jmp
mov
pop
sub
loope
test
cmpsl
das
fcmovu
inc
dec
fsub
xchg
sub
scas
inc
cmp
cltd
nop
cwtl
cwtl
pop
lock
push
or
jle
adc
lds
mov
lcall
sub
stos
adc
nop
dec
repnz
cld
iret
mov
lcall
fdiv
cltd
imul
int
or
int
mov
add
inc
mov
in
dec
nop
cmp
push
aas
lock
ficoml
dec
inc
mov
ret
sbb
dec
lret
cltd
push
or
aam
mov
icebp
push
iret
je,pn
pop
jo
inc
shlb
mov
pushf
aad
imul
scas
xchg
jns
stos
arpl
push
daa
orl
sarl
dec
jmp
mov
and
push
stos
addr16
insl
aaa
aaa
pushf
fstpt
and
sub
sbb
add
repz
shl
jnp
addr16
rcr
std
jecxz
push
mov
add
jo
out
stc
add
ja
nop
std
xchg
jae
adc
xor
pusha
hlt
push
stos
mov
push
jo
decl
dec
adc
out
shll
push
pop
pop
mov
xorl
jge
call
mov
or
stos
jecxz
or
xor
lret
imul
out
xor
fcmovnbe
addr16
adc
push
mov
es
or
jbe
in
je
sbb
pop
add
xor
adc
lods
std
adc
sbb
dec
fdivs
xchg
add
cmc
mov
xor
push
loopne
out
jb
xchg
lcall
bound
or
pop
jmp
mov
mov
mov
fcoml
mov
movsb
push
imul
lret
fisttps
adc
add
mov
movsb
lret
out
int3
jmp
sarl
and
jne
ja
xchg
imul
jmp
dec
xor
cmpb
int3
std
sbb
push
out
sarl
aaa
sti
mov
sbb
push
inc
pop
aaa
sub
jmp
cmp
or
cmp
lcall
lahf
icebp
fcmovnb
sbb
lock
jo
mov
or
mov
xor
sub
mulb
in
pop
ds
push
in
in
imul
adc
ficomps
add
int3
sub
in
push
and
stc
sub
jb
mov
pop
insl
push
mov
pushw
mov
mov
mov
push
lods
fidivrs
popa
mov
sub
aaa
push
lods
imul
aaa
in
xchg
aas
and
mov
mov
sub
test
push
test
fwait
imul
add
xchg
or
lcall
insl
push
idivl
add
inc
fimull
cmp
cmp
mov
xor
pop
xor
inc
ja
jbe
ficompl
repnz
lahf
fwait
stos
mov
clc
inc
and
pusha
sbb
lahf
inc
sub
mov
push
dec
mov
rol
addr16
fistps
mov
dec
adc
xchg
ss
bound
or
pop
push
out
lods
dec
dec
sbb
fs
stc
fadds
add
mov
cmp
push
and
gs
cmp
adc
arpl
in
popl
ficoms
imul
enter
popa
sbb
pusha
clc
lods
stos
mov
or
mov
rcrl
xchg
in
daa
and
mov
mov
insl
mov
pop
test
xchg
push
jecxz
ljmp
ret
sarb
ret
call
and
jecxz
xlat
xchg
dec
rcll
xchg
adc
repz
or
cmp
icebp
or
dec
mov
or
mov
cmp
aam
ficoml
mov
cmp
sbb
fmul
xchg
sub
xchg
lods
les
cmc
or
cmp
mov
inc
fidivl
add
push
add
mov
pop
jb
rol
xlat
pop
and
sub
dec
out
jmp
cld
clc
cltd
shrl
std
lahf
mov
in
fistl
aad
int3
xor
xlat
std
pop
mov
imul
mov
ds
adc
push
ret
push
push
jmp
lea
mov
cmp
and
pop
and
pop
loope
pop
xor
jne
dec
bound
inc
test
shlb
popa
int3
adc
xchg
test
pop
repnz
push
sti
sbb
pop
jle
cmp
push
xlat
scas
shlb
cmpsb
xor
dec
or
pop
shl
popa
fldl
and
pushf
xchg
ret
add
stos
lcall
aaa
xchg
lret
push
cmc
les
dec
sub
push
xor
arpl
lahf
inc
sahf
jo
mov
incb
mov
rcrl
imul
push
mov
sub
ret
or
sbb
cmp
xor
cmp
inc
pop
movsb
cld
ret
xor
push
cmp
sbbl
push
adc
test
nop
xchg
jge
fidivrs
pusha
stos
lahf
push
sub
leave
hlt
fcomi
call
mov
jno
xchg
and
add
das
push
sti
das
cmp
sub
xchg
or
ret
repz
jno
mov
cli
scas
adc
outsl
dec
push
inc
movsl
rcll
sub
dec
cmp
test
cld
lock
subb
pop
or
and
cli
into
in
mov
cli
xlat
cmc
pop
data16
mov
mov
dec
popa
lret
cmp
cs
xchg
stos
xchg
decl
das
mov
or
add
imul
and
or
data16
xlat
gs
add
xchg
mov
push
das
cmpsb
aad
push
roll
dec
repnz
cli
out
rcrb
icebp
and
arpl
xchg
out
push
je
shlb
push
xchg
push
out
aaa
xor
out
movsb
mov
lds
stos
ficoms
jmp
nop
mov
fildll
and
out
or
add
lods
add
add
push
mov
mov
push
scas
add
imul
ret
push
cli
icebp
push
push
inc
pop
mov
mov
add
data16
mov
xor
adcl
ljmp
add
xchg
imul
xchg
sbb
add
add
push
push
std
cmpsl
mov
and
js
sub
xchg
bound
adc
jb
out
xchg
dec
and
pop
in
repz
sbb
movsl
push
faddl
xor
hlt
sbb
aam
mov
jle
dec
in
mov
push
pop
xchg
call
sahf
xchg
cmpsb
sub
lods
sub
cltd
jmp
mov
lods
xor
add
aaa
xchg
xor
mov
int3
popf
xchg
or
adc
add
sarl
pushf
xchg
addr16
jl
lock
nop
pop
xchg
mov
jne
adc
aad
mov
push
sahf
jns
mov
lock
ljmp
push
aaa
cmp
push
movsb
cld
adc
repnz
cmp
insl
in
mov
ljmp
frstor
bound
loope
stos
mov
dec
test
mov
mov
pop
or
cltd
loop
fisubrl
cmp
mov
call
sub
popa
jne
je
movsb
mov
mov
loop
mov
mov
mov
in
push
xor
dec
pop
gs
and
aaa
bound
ja
and
mov
gs
stos
and
icebp
mov
cmpps
push
arpl
pushf
notb
fs
cmc
addl
or
or
fbld
xor
mov
iret
jecxz
cmp
pusha
cs
jae
popa
fildl
pop
ja
jmp
sbb
cmp
insb
cmp
dec
movsb
add
and
cmp
movsl
jl
inc
mov
push
sbb
adc
dec
lret
dec
pop
ret
and
cmp
into
mov
pop
out
jle
outsb
lcall
push
mov
adc
xor
sub
sbbb
mov
rol
stc
jo
jno
sarb
loopne
xor
add
movsb
push
push
fbstp
or
pop
or
in
add
ss
mov
es
lahf
sti
mov
cmp
in
add
or
sarb
xchg
sub
mov
lret
xlat
mov
inc
push
push
enter
dec
orl
dec
je
faddp
inc
sub
push
fs
dec
jecxz
pop
fwait
ret
jae
inc
or
xchg
push
shrb
add
loopne
repz
pop
or
mov
sbb
mov
jecxz
xor
xchg
cmp
jnp
negl
jnp
adc
mov
dec
pop
sahf
outsl
hlt
xchg
aas
sbb
cmp
outsb
jge
stos
push
outsl
add
stos
or
mov
jns
xor
icebp
cltd
xchg
into
mov
gs
aam
lods
ljmp
sbb
adc
clc
xchg
sbb
mov
addb
cli
gs
sbb
pop
jo
jns
cmc
outsb
lock
xchg
rclb
xchg
js
inc
int
inc
xor
sti
loopne
pop
ret
lea
arpl
mov
popf
pop
cmpsl
into
inc
lds
add
add
add
add
cmp
pop
rcrb
addl
lods
add
add
insl
and
aam
call
jp
inc
add
and
mov
xor
push
rcrb
lods
cwtl
mov
ljmp
jg
push
in
and
jecxz
mov
cmp
and
jbe
pop
decl
lds
ret
xchg
push
push
dec
jp
fisubl
xchg
sarb
aam
mov
test
int
lahf
pop
and
es
cltd
ja
xchg
test
jbe
jle
dec
jb
lds
loope
mov
out
out
repz
test
mov
xor
add
fisubl
enter
insb
pop
cmp
mov
mov
pop
stos
cmpl
notl
pop
or
mov
mov
loop
jecxz
sub
dec
mov
pop
push
pop
and
into
scas
test
jle
insl
push
jle
fs
stc
push
push
ljmp
push
je
repnz
jbe
fidivs
jge
lahf
fs
adc
divb
adc
xorb
and
aam
in
pop
push
je
shld
add
pop
dec
add
imul
jae
clc
stc
and
test
scas
sub
jge
call
shlb
sub
das
sub
pop
inc
pop
sbb
stc
xor
jl
or
add
push
adc
sub
mov
push
pop
mov
xor
add
sub
lock
les
rcl
push
cltd
mov
adc
inc
pop
pop
add
push
xchg
lea
mov
dec
inc
notl
add
inc
les
lock
cmp
xchg
xchg
dec
iret
shll
sub
arpl
arpl
popf
fisttpll
icebp
scas
cs
sub
dec
mov
adc
jnp
mov
inc
xor
and
add
and
lods
test
lret
xor
add
mov
in
mov
lret
fildl
xor
pushf
sbb
mov
adcb
inc
pop
push
jg
stos
pusha
mov
addb
inc
mov
rorl
fmull
xor
or
dec
mov
aas
mov
in
inc
inc
stc
cmpsl
subb
fadds
inc
adc
jno
lock
lds
xchg
mov
insb
sbb
sub
push
lret
subl
xchg
call
push
ljmp
mov
fimuls
sahf
sbb
jbe
popa
cmpb
ds
iret
mov
popf
repnz
mov
dec
repz
lock
cwtl
mov
out
pop
or
jo
fistpl
je
and
lock
sub
pop
dec
push
mov
les
pop
shlb
push
ds
push
out
xor
xchg
jbe
mov
jmp
jo
add
mov
and
mov
pop
addr16
push
std
cltd
add
movsb
mov
sbb
test
jg
lods
sub
inc
mov
xlat
lea
ret
add
aaa
js
popf
pushf
inc
enter
mov
lods
add
lods
push
lods
add
js
mov
mov
add
add
add
add
mov
cmpsb
mov
mov
outsb
or
xchg
add
popl
pop
push
push
push
ds
arpl
data16
adc
stos
mov
mov
jno
test
pop
xor
mov
fdivl
inc
sub
mov
fs
mov
int3
aas
xor
scas
js
lahf
jge
pop
outsl
sarl
sub
mov
loop
outsb
shrb
pop
xchg
inc
and
push
dec
mov
lea
gs
stos
loop
stos
sub
jge
pop
mov
jae
insl
push
sub
in
jb
pusha
loop
out
jns
or
ss
fisttpll
rcrl
add
addr16
pop
push
dec
pop
xchg
push
cmp
mov
fchs
jmp
mov
xor
mov
outsl
mov
in
movsl
sti
dec
sub
and
xor
sub
xor
mov
and
lahf
xchg
loop
push
adc
sbb
xor
adc
push
aam
cs
dec
mov
loop
inc
rcll
sbb
mov
rcl
scas
pop
adc
jnp
sahf
and
orb
cmp
pop
cmpb
decb
xlat
wrmsr
pushf
add
aad
xchg
and
mov
add
cmp
ss
lcall
js
sbb
dec
pop
out
adc
lock
cmp
int3
pushf
gs
jmp
push
andl
mov
lock
popf
sub
loopne
push
jnp
push
pop
dec
inc
jecxz
fstp
mov
pop
hlt
xlat
cmc
push
ret
call
arpl
push
lock
push
cmc
mov
sbb
mov
fwait
and
das
bound
aam
push
pushf
mov
or
mov
nop
xchg
mov
jne
jle
mov
pop
jb
pop
shrb
mov
fcompl
roll
mov
test
mov
popa
sub
outsl
push
cmp
push
or
outsl
int
test
push
std
pop
jae
mov
sbb
aad
jae
dec
or
ret
pop
push
and
cmp
mov
push
pop
mov
lock
mov
jnp
aaa
and
popf
push
std
test
out
cli
dec
dec
cmp
mov
sub
insb
idivl
cmp
nop
add
xchg
xchg
xchg
cmp
test
mov
setae
or
or
pop
leave
lret
push
into
sub
mov
outsb
addr16
inc
pop
sbb
sub
fstpl
rcl
lods
cmc
in
aaa
in
rcrb
adc
leave
test
mov
sbb
jae
pushf
push
cmp
insb
movsb
xor
jae
cltd
aad
jns
inc
push
xchg
dec
push
xlat
push
dec
fadds
dec
gs
cmc
dec
sub
test
insb
jmp
mov
inc
mov
mov
imul
inc
out
cmp
push
ja
mov
repz
push
or
lret
arpl
jbe
push
stos
xchg
jb
rol
adc
sub
mov
xchg
and
fistpll
mov
and
xchg
out
mov
out
inc
pop
xchg
leave
xor
add
dec
jo
jl
cld
out
jbe
outsl
cmp
inc
mov
out
mov
add
add
roll
gs
adc
out
and
dec
pop
pop
pop
mov
les
loope
cmp
leave
scas
mov
push
or
adc
cmpsl
cmp
adc
scas
xlat
adc
out
jecxz
inc
push
ja
decl
test
push
mov
fisttpll
fchs
fs
std
lock
jp
inc
les
inc
pop
pop
cld
fisubs
fcompl
mov
hlt
push
lods
pusha
push
lock
cmpsb
cmp
push
mov
bswap
and
in
je
insl
int
pop
xchg
or
popf
test
xchg
add
push
mov
lock
pop
addr16
dec
sbb
mov
xchg
sbb
out
pushf
fimuls
sub
push
inc
sbb
fsubrl
call
jl
lea
cmc
in
scas
sub
or
mov
out
mov
push
mov
sbb
test
push
les
sbb
push
add
fldenv
mov
pop
xchg
xor
and
dec
stos
ja
shlb
fiaddl
xchg
jmp
pop
into
sub
xchg
mov
xchg
and
rorl
mov
fimuls
daa
test
inc
mov
mov
clc
jl
enter
leave
outsl
mov
jmp
xor
jne
call
mov
jle
jecxz
rcrl
mov
add
mov
pop
sti
scas
sub
mov
add
out
inc
lahf
stc
aaa
xor
mov
out
sub
popa
push
cld
or
cmp
jno
xlat
jge
lock
sbb
inc
jmp
je
inc
sbb
sbb
popf
sub
lret
inc
sbb
sub
fldcw
mov
inc
addb
pop
idiv
inc
popf
arpl
cmp
mov
xor
testl
enter
loop
adc
lock
sub
mov
push
adc
repnz
insl
xchg
cmpsl
dec
stos
rcrl
sti
dec
pushf
cli
xchg
adc
mov
minps
int3
or
lods
ds
insl
mov
imul
test
mov
xor
add
cmp
cwtl
jle
push
mov
xchg
lea
sbb
push
inc
xchg
repz
lea
pop
repz
pop
out
or
fstpt
iret
mov
leave
in
push
les
cwtl
rolb
ljmp
mov
insb
sbb
mov
cltd
dec
cmp
out
mov
push
aas
cmc
ja
mov
inc
loop
addb
je
jmp
test
sbb
xchg
negl
mov
jmp
push
sbb
pop
jo
clc
inc
jae
add
dec
mov
or
icebp
pushf
mov
dec
mov
mov
mov
insl
stos
cltd
add
mov
fiadds
cmp
fildl
or
jae
pop
or
mov
jmp
cli
mov
sar
dec
and
push
adc
lods
mov
addr16
sti
outsb
inc
mov
cmp
inc
push
ret
pop
imulb
cmpsl
arpl
sub
rorb
test
stos
inc
fdivl
xchg
mov
sbb
ret
flds
inc
and
stos
dec
popf
lods
test
adcb
cmpsb
inc
js
or
bound
js
xchg
addr16
loop
in
mov
daa
xchg
sbb
add
add
fimuls
daa
sbb
out
pop
mov
add
xor
sahf
repnz
mov
inc
popf
jp
shlb
xchg
dec
in
jae
xchg
dec
cmpsl
push
bound
push
aas
idivb
lcall
in
mov
scas
add
stos
loop
lea
add
lret
ret
and
fldcw
pop
int3
jne
popa
add
jmp
inc
mov
push
ja
into
add
push
jge
sub
xchg
pop
sti
mov
shrb
jl
in
pop
sub
and
outsl
lcall
stos
aaa
loop
int
xchg
sahf
popf
or
rorb
movsb
jl
inc
je
scas
cwtl
sbb
movaps
xchg
jle
je
mov
mov
and
mov
imulb
or
imul
mov
push
dec
outsb
sbb
jecxz
sbb
aad
sahf
or
jb
and
xchg
mov
or
sub
push
inc
cltd
xor
cmc
fisttps
jns
lahf
fcmove
pop
dec
lcall
mov
cmpsb
lock
in
dec
into
dec
add
ds
pop
or
movsl
jmp
int
cs
scas
pop
jno
jp
jb
insl
or
ss
cwtl
lock
push
les
dec
insl
ljmp
cmp
add
xor
mov
mov
adc
mov
xchg
cmpb
ljmp
or
lods
sub
jle
and
popf
sbb
sbb
xchg
int3
cmp
or
inc
mov
jae
call
pop
lock
into
inc
mov
lds
mov
mov
movsl
imul
push
sub
jp
add
jbe
mov
inc
xchg
add
mov
xchg
in
xor
aam
imul
xchg
fst
lcall
pop
or
jno
adc
enter
xor
xchg
adc
inc
push
fs
ds
cmp
leave
aad
fisttpll
popf
mov
xor
mov
push
popa
lods
loopne
pop
and
and
or
call
adc
push
jg
jl
mov
cmp
push
mov
push
rclb
push
clc
inc
pusha
or
mov
push
mov
movsl
lock
ret
push
sub
and
movsl
sbb
cmp
ret
adc
out
push
ja
cli
dec
dec
fidivrl
xchg
pop
sbb
pop
fs
test
dec
push
pop
pop
cmc
mov
add
aam
push
sbb
cli
mov
stc
mov
cmp
inc
scas
das
sahf
add
cmc
in
fwait
mov
fistps
fsts
daa
dec
and
mov
mov
mov
cltd
pusha
test
daa
mov
inc
fmuls
dec
arpl
jl
rolb
pop
popa
loop
aad
sti
adc
sub
xchg
sbb
xor
loope
pop
sar
loope
dec
icebp
jno
movsb
xor
dec
jl
out
les
loopne
mov
pop
sarb
orb
pop
mov
mov
out
mov
pop
sub
push
nop
shll
mov
sbb
xchg
cld
pop
push
repz
loopne
addr16
pop
pop
pushf
sbbl
xchg
pop
es
jmp
dec
leave
insl
mov
shr
mov
push
mov
or
jne
pushf
fucomp
dec
cmp
pop
ret
adcl
inc
and
push
add
add
inc
dec
mov
popa
dec
push
sbb
mov
add
cltd
adc
psubsb
mov
dec
jne
cmpsl
insb
ret
loope
ret
push
sbb
xchg
das
stos
addr16
insb
xlat
es
inc
fs
jbe
jne
inc
mov
cli
sti
in
mov
pop
sub
mov
fiaddl
push
push
mov
sbb
xor
outsb
mov
clc
cmpsb
imul
sbb
push
and
fst
sbb
out
pop
popa
xor
jb
lea
jno
dec
add
clc
add
sub
inc
out
inc
fisubrl
add
nop
pop
inc
arpl
cmpsl
test
jg
xchg
mov
lahf
push
xchg
sti
fiaddl
cmpsl
cmp
movsl
insl
icebp
adc
mov
mov
lods
ds
push
outsl
and
sbb
sbb
and
mov
cs
pop
roll
mov
or
pop
sbb
popa
add
mov
mov
ds
mov
hlt
test
cmp
shl
ret
test
lahf
sbb
hlt
inc
add
shrl
pop
loope
push
cli
xor
and
push
xor
sahf
cmp
jo
inc
jecxz
cmpsl
mov
data16
xor
aas
cltd
sti
ja
std
lahf
jp
repnz
xchg
add
pop
mov
outsb
inc
fsubrs
inc
xor
in
popf
test
push
mov
mov
xor
pop
mov
adcb
lock
inc
push
in
scas
xor
addr16
les
aam
jae
repz
mov
dec
cmp
adc
movsb
fiadds
mov
and
insb
aaa
aaa
arpl
dec
enter
hlt
sub
inc
sbb
push
icebp
or
pusha
mov
mov
mov
aad
mov
mov
and
inc
scas
adc
cmp
dec
cmc
xchg
shll
xor
inc
and
out
push
in
lret
mov
sbb
cltd
or
jo
xchg
dec
sbbl
sbb
xlat
add
cmp
mov
popa
sub
ljmp
outsl
int3
mov
pop
dec
and
inc
addb
nop
pop
test
push
cmp
in
int3
jb
or
pop
and
scas
add
sub
mov
arpl
push
in
or
jne
mov
jg
add
pop
sarl
ret
pushf
inc
dec
push
add
leave
clc
mov
stos
and
cwtl
ffree
xchg
pop
outsl
mov
stos
sub
jg
test
and
sub
sbb
push
cwtl
sub
push
ret
cld
rcl
das
cs
jne
xchg
mov
fwait
shlb
pushf
adc
loopne
aam
inc
inc
std
sub
add
nop
je
ret
popf
xchg
push
lret
in
enter
xor
popf
lret
sbb
out
lret
jbe
mov
sub
jo
bound
fsubs
js
sub
scas
inc
mov
mov
std
push
lea
movsb
jo
or
and
repz
shlb
es
pop
fldenv
ficoml
pop
sub
andb
ljmp
sti
lcall
stc
sti
lock
dec
inc
les
adc
into
jae
dec
ret
jl
sub
shlb
cmpsb
mov
adc
add
add
add
add
xlat
and
aaa
std
out
and
pusha
push
add
loopne
dec
xchg
cltd
pop
sub
mov
xchg
cmp
cmp
inc
dec
out
icebp
add
xor
hlt
mov
iret
mov
mov
jns
stos
loop
xchg
and
inc
push
adc
in
inc
jb
mov
bnd
pop
inc
or
dec
mov
and
mov
aad
sbb
push
jbe
dec
gs
jmp
mov
dec
mov
jmp
in
repz
add
movsb
mov
js
mov
fs
iret
es
push
scas
sub
sbb
inc
add
xchg
pop
push
stc
mov
pop
xor
std
pop
aas
cmp
arpl
mov
bound
cmpsb
loope
call
xor
aad
mov
imul
loop
insl
add
mov
loop
lea
and
and
stos
inc
lods
rcrl
xchg
jbe
clc
xor
sbb
xchg
mov
push
aad
test
pushf
loop
push
xchg
decb
inc
subb
dec
adc
daa
mov
xchg
dec
add
aas
mov
cmp
jb
xor
movsb
xchg
iret
xorb
test
dec
mov
testb
fsubl
std
pop
insb
xor
popa
push
rcll
ss
sarb
int3
mov
in
dec
xchg
cmp
jb
mov
das
mov
push
ljmp
push
pop
rcrl
and
add
mov
mov
shrl
adc
add
in
shlb
pushf
in
sti
out
lahf
test
inc
dec
lods
pop
or
cmp
test
push
fistps
movsb
dec
mov
mov
jmp
sub
fbstp
jmp
cmp
lds
jo
insb
sbb
mov
loop
sbb
xchg
scas
shr
sub
into
sub
jnp
hlt
mov
je
cwtl
lret
rcrl
mov
xor
dec
das
out
and
pop
test
jno
push
test
sub
in
addr16
repz
rolb
sub
sbb
cmp
lahf
sbb
jle
dec
insl
mov
dec
lds
inc
dec
or
and
mov
cmc
and
adc
leave
outsb
pop
mov
sarl
ljmp
mov
sti
inc
popa
xchg
jle
call
loop
sets
das
mov
hlt
push
cmp
outsl
adc
xchg
addr16
push
push
mov
mov
dec
clc
lret
jecxz
imulb
test
pop
lcall
insb
test
or
fs
mov
mov
sti
or
stos
dec
mov
mov
xchg
outsl
loopne
sbbb
rorl
fisttpll
rorl
ja
les
je
mov
inc
mov
fnstsw
pusha
and
sbb
xchg
jp
mulb
pop
mov
subl
mov
adc
fldcw
psllw
imul
pop
mov
push
dec
push
inc
dec
sub
xchg
mov
pop
adc
jnp
mov
test
inc
xor
movaps
fcomp
movsl
lds
xlat
xchg
xchg
in
add
mov
jnp
testl
int
mov
add
inc
dec
nop
int3
popf
fistps
lea
jmp
push
pop
cltd
add
lods
add
add
and
fwait
loop
push
popa
sub
data16
and
or
divl
or
out
sti
jle
psubusb
dec
sbb
mov
imul
subb
jmp
mov
in
sbb
cmp
jmp
or
mov
push
add
pop
push
jl
imul
outsb
imulb
pushf
xchg
daa
pop
xor
mov
cmc
pop
dec
addl
push
ss
push
mov
inc
sbb
test
lret
imul
sbb
lcall
dec
enter
imul
leave
xchg
inc
push
jns
cmc
sub
dec
xlat
xor
ljmp
push
mov
rclw
sub
rorl
sti
jg
fmul
in
add
adc
cmp
sarl
mov
sbb
fsubrl
rcrl
lcall
sub
pop
dec
lods
in
push
add
shl
pop
hlt
je
ja
dec
movsb
xchg
and
ss
adcb
out
mov
fldenv
insb
insb
push
xor
shrl
mov
mov
jae
mov
rorl
in
and
jl
xor
cmp
adc
ret
mov
sbb
jo
scas
xchg
sti
in
jmp
mov
pusha
push
fisttpl
add
outsl
rorb
dec
notb
sub
out
nop
xchg
mov
adc
lds
push
scas
add
xchg
add
pop
std
roll
push
stc
mov
sbb
lcall
cmp
int3
popa
push
cli
jne
or
bts
xchg
pop
ror
aas
scas
jno
push
fcoms
sbb
in
xchg
in
push
add
xor
mov
add
rol
sbbl
jg,pt
es
adc
cmp
xor
lea
gs
in
mov
add
packuswb
mov
fstps
fnsave
outsl
jb
cmp
fwait
shlb
xchg
xchg
insl
cltd
mov
test
cmp
and
xchg
jl
inc
jae
mov
jecxz
mov
jg
mov
in
cwtl
xor
inc
inc
les
imull
fcmovnu
add
mov
dec
inc
fstl
test
daa
mov
arpl
out
test
push
mov
dec
mov
addr16
jae
jns
andl
add
test
or
inc
mov
add
aas
add
sahf
aaa
aaa
cmp
sti
ds
out
lds
xchg
iret
int3
dec
push
lods
xchg
cwtl
insl
mov
xor
in
xchg
push
fmull
dec
sub
imul
repz
and
mov
outsb
dec
add
mov
cmp
ja
mov
jle
shlb
shrl
loope
test
jge
fcomip
jg
sub
sbb
adc
inc
rcr
cmp
hlt
imul
in
xor
jp
mov
subb
rol
into
mov
inc
imull
push
dec
popw
fwait
xor
push
inc
inc
pushf
shr
adc
test
mov
push
sbb
ret
lods
sahf
stos
add
add
loopne
cli
mov
pop
dec
jno
popl
lods
add
add
jb
lock
sbb
mov
jp
stos
mov
rcll
adc
pop
andl
and
ret
not
std
sti
xchg
or
int3
inc
xchg
lahf
loope
and
adc
daa
outsb
push
aad
fmul
mov
adc
xor
sub
xorl
rcll
xchg
push
stos
clc
dec
dec
fwait
jle
mov
scas
xor
test
inc
xchg
ss
sbbb
aad
sbb
lods
gs
fildl
jecxz
jl
push
mov
ficoms
stos
mov
push
mov
jbe
inc
xchg
outsb
dec
aam
orl
loop
fs
jp
lea
mov
lods
loop
xor
xchg
aam
mov
ffree
mov
daa
repz
mov
cmp
push
scas
or
xlat
jbe
in
jb
cmp
and
push
loop
je
adc
xchg
inc
inc
jg
lods
pop
add
adc
test
shlb
stos
cwtl
jb
je
sub
cmp
pop
sub
mov
add
cmp
dec
lock
in
ljmp
aad
out
mov
adcl
xor
faddl
xor
sbb
sbb
out
cwtl
int3
aas
mov
shrl
dec
in
mov
jb
pop
fs
sub
or
dec
loop
jb
jo
int
pop
dec
jno
in
popf
addb
imul
cmp
jl
push
fadds
fdivrs
dec
dec
sbb
pusha
addb
lock
addl
or
daa
imul
lds
adc
jl
out
mov
mov
sahf
adc
ljmp
shll
aaa
fmul
mov
movsb
mov
sbb
pushf
jns
sbb
rorl
inc
push
mov
insb
imul
xchg
mov
mov
fldcw
dec
xchg
push
dec
ds
inc
lds
cli
pop
mov
outsb
fadds
and
pop
rcrb
shlb
mov
xor
lock
aaa
mov
test
pop
pusha
lods
jp
mov
movzbl
jp
pop
push
outsl
lahf
fisttpll
push
in
mov
adc
outsb
std
leave
rolb
push
xor
jnp
sub
inc
lock
inc
sti
loop
xchg
adc
std
xchg
fidivl
sub
push
add
in
xchg
lahf
push
xor
inc
jg
icebp
flds
jl
jo
test
mov
addr16
mov
imul
mov
popa
pop
std
mov
or
ret
mov
jl
mov
cmc
cli
and
dec
inc
ficomps
mov
pop
mov
push
sub
mov
sbb
or
insl
mov
fisubrl
xchg
xor
sub
inc
jge
jae
xor
cmp
xor
pop
mov
push
cmp
arpl
mov
xchg
cs
aas
je
dec
stos
pushf
rcrb
mov
mov
imul
in
mov
out
adc
iret
aam
push
popa
ds
test
push
int3
push
lods
mov
js
xorl
fisttpll
cld
outsb
dec
bound
xor
insl
inc
daa
xor
pop
push
mov
pop
lret
jp
jbe
cmp
and
lea
inc
add
add
int3
inc
fdivrp
out
ja
or
pop
out
pop
push
fs
add
add
or
jp
popl
sub
rolb
aad
arpl
iret
cmpl
push
loope
sbb
mov
divl
xor
adc
fadds
jecxz
fmull
enter
call
lret
aas
and
add
cs
popa
inc
sub
cli
imul
loope
in
in
pusha
cmpb
add
dec
jge,pt
mov
hlt
and
nop
fwait
pop
sub
js
jecxz
sub
pop
ss
cltd
les
call
mov
daa
add
inc
fists
push
xchg
aad
push
cwtl
xor
cmp
pop
mov
fidivrs
addr16
mov
out
or
add
stos
pop
inc
mov
mov
ret
fsubs
cmp
pop
and
mov
ret
pop
adc
or
inc
js
xor
add
mov
std
orb
jecxz
mov
iret
insb
ljmp
insb
mov
and
outsl
inc
pop
xor
xchg
pop
jl
inc
je
sub
imul
leave
loopne
bound
movsb
imul
or
scas
or
mov
lahf
sub
and
imul
xlat
and
call
lods
fcomps
pop
fisttpll
mov
jo
jmp
out
push
sbb
int
inc
rolb
xchg
push
cmp
call
jl
sub
clc
mov
or
rorl
repz
xor
mov
pop
xchg
pop
stos
iret
addr16
enter
stc
daa
add
cmpsl
outsb
push
pop
ret
adc
jb
dec
pop
rolb
int
movsl
push
push
jo
xor
leave
mov
enter
lret
add
lds
xorl
pop
jle
xchg
cwtl
daa
in
add
movsb
mov
adc
iret
mov
imul
dec
mov
pusha
loopne
vmread
mov
lock
dec
push
mov
ret
loopne
xor
fidivrl
mov
in
xor
ss
xor
adc
cli
test
repz
je
bound
push
push
add
fcomps
xchg
lea
mov
cmpsl
push
sub
andl
mov
std
fcmove
testb
xchg
fsub
stos
mov
imul
or
adc
and
stos
cld
pop
in
push
scas
cmp
int
divb
ljmp
pushf
pushf
js
cmpsl
ret
cmpsb
jo
jmp
je
push
sbb
popf
push
pop
jge
sbb
aam
xor
ret
push
out
jne
movsl
mov
or
nop
xor
mov
subb
xchg
shlb
aaa
and
mov
or
out
rcrl
sbb
das
xchg
dec
jbe
int3
gs
or
mov
push
fbstp
sar
push
int
jg
jle
jnp
js
cltd
add
in
sbb
pop
xor
popf
mov
mov
cmp
or
ja
imul
add
shr
xchg
or
jne
divb
clc
mov
imull
push
lods
cmpsb
flds
jne
int3
js
flds
add
mov
cltd
mov
xor
jg
add
add
lods
add
add
in
inc
jecxz
mov
int3
jg
divb
nop
mov
inc
jmp
loopne
stos
cmp
fnsave
sub
mov
adc
xor
dec
arpl
roll
jge
pushf
lcall
mov
loope
xor
xchg
sbb
mov
mov
notl
in
rorb
ja
dec
xchg
jo
sub
iret
push
mov
sub
jecxz
imul
test
js
insb
jae
cs
push
jnp
fs
insb
cwtl
or
icebp
frstor
js
mov
out
cld
push
jecxz
lods
inc
and
dec
aad
push
in
je
sbb
das
lea
xchg
jne
nop
cmp
push
imul
mov
fistl
imul
es
lds
add
xchg
out
fnstenv
fsubr
sub
mov
cld
cmp
push
sbb
int
dec
fdivrp
shrb
daa
sub
mov
mov
or
and
dec
mov
aam
sti
jge
jno
lahf
icebp
mov
out
shlb
ds
das
lahf
jo
pusha
dec
daa
fstps
les
subl
movsb
test
xor
mov
sbb
sbb
pop
enter
loope,pn
sub
push
pop
jecxz
sub
imul
hlt
add
cmpl
das
leave
push
les
jae
cmp
xchg
and
gs
xchg
dec
cwtl
js
jbe
dec
push
mov
jbe
xchg
inc
cmp
outsl
sub
movsl
jecxz
jecxz
sbb
add
movsb
xchg
dec
sub
push
imul
mov
fs
les
push
inc
adc
enter
and
jmp
je
mov
int
insl
mov
dec
in
xchg
xor
cmc
andl
mov
cli
dec
ja
sub
push
aam
leave
call
in
pop
imul
xor
sub
adc
imul
mov
out
pop
aaa
pop
pop
or
call
aaa
aad
push
cltd
lret
xor
mov
lea
out
mov
pop
xor
call
xchg
fsub
jg
lds
push
call
pop
xchg
adc
adc
push
leave
loope
fsubl
jle
dec
adc
insb
cmp
mov
push
test
in
adc
and
cmp
out
mov
cmp
dec
stos
add
stos
push
and
les
sbb
push
divl
xor
into
mov
mov
test
push
int3
cltd
xchg
adc
add
daa
aas
and
fstpl
sti
push
cvtps2pd
add
sar
sub
sbb
cs
repnz
sbb
fs
incl
xchg
push
xor
nop
push
push
inc
pop
mov
cltd
xchg
xchg
negl
scas
aas
sub
ficoms
test
cltd
add
or
dec
cmp
lret
mov
out
fstps
jecxz
cmp
notb
shlb
loopne
scas
addl
lds
scas
js
sbb
gs
add
xor
cmp
addr16
adc
add
push
push
fbstp
fs
mov
popf
push
scas
in
xchg
out
or
jne
adc
shll
repz
jecxz
jbe
insl
fsubrs
fmul
ljmp
sbb
imull
or
fsubl
aam
ret
mov
repz
icebp
jns
test
out
scas
faddl
ret
push
stc
add
lods
loopne
jbe
mov
call
lcall
sub
mov
inc
arpl
cmpb
mov
fwait
in
adc
repnz
lcall
or
call
in
pop
fwait
mov
mov
xchg
popa
fsub
addr16
mov
iret
mov
sbb
inc
sbb
push
jnp
push
data16
xchg
jge
sahf
pop
fstl
push
popa
dec
stc
ds
jp
adc
cmp
xlat
out
xlat
loopne
mov
mov
push
pop
sub
fcom
or
outsb
mov
dec
xchg
sub
rolb
xchg
repnz
cltd
cmp
or
push
sbb
negb
outsl
repnz
mov
scas
test
je
sub
xchg
lahf
shll
movsl
add
xorl
jge
pushf
jae,pt
punpckhdq
jb
int
sbb
movsl
push
sbb
sub
jb,pt
and
pop
mov
in
add
fdivrl
cmpsl
test
jb
ljmp
mov
or
hlt
lret
add
inc
jns
xchg
outsl
inc
push
sub
and
cmp
push
dec
xchg
xchg
lcall
lret
ret
ror
dec
stos
ljmp
pop
mov
mov
shlb
leave
adc
and
or
cmpsb
mov
fstl
iret
call
jmp
dec
inc
push
jecxz
mov
xor
lea
pop
shrb
test
je
sbb
ja
adc
mov
xlat
cmp
daa
xlat
iret
lods
dec
jo
movsl
mov
in
mov
xor
subb
adc
push
mov
nop
mov
sbb
adc
mov
sub
mov
pop
push
shlb
jne
std
ja
pop
jecxz
rcll
adcl
xor
outsl
and
lcall
fwait
imul
test
in
xchg
sub
outsb
jl
mov
sbb
dec
dec
decl
xor
xor
mov
insl
shl
mov
sub
mov
scas
cmp
clc
roll
mov
sub
lds
xchg
lret
test
inc
jnp
je
pop
sbb
or
xchg
mov
mov
and
into
orl
imul
lods
inc
icebp
cmp
push
dec
xchg
mov
movsb
aaa
nop
addr16
loope
ds
shl
and
jmp
jg
mov
dec
mov
out
pop
loope
fldt
fdivrl
dec
inc
shrb
fwait
pop
cmp
je
das
jae
mov
movb
sub
pop
mov
dec
sarl
scas
ret
nop
xor
je
fwait
dec
imul
in
daa
nop
xchg
pop
xchg
sub
std
push
in
lret
icebp
ret
sbb
cmc
dec
xchg
jae
add
test
fildll
push
cltd
jb
sub
jno
scas
jge
xchg
or
fcmovnbe
xor
out
add
cli
dec
push
ret
mov
jge
cmp
in
mov
shrb
add
int
mov
push
mov
sbb
in
arpl
pop
nop
or
shlb
cwtl
jl
jno
pop
inc
sub
fists
sub
rclb
sub
xor
inc
ret
sti
pop
in
sahf
scas
mov
mov
push
filds
fldenv
insl
sbb
aas
sub
in
adc
enter
xchg
add
mov
xlat
out
mov
xor
in
inc
ja
or
inc
cld
mov
push
mov
and
jmp
or
inc
out
cmp
jno
jo
sti
sahf
test
sti
clc
hlt
pop
xor
rcl
into
mov
fidivrs
movsb
mov
cmc
lds
xchg
add
adc
pop
xchg
mov
in
inc
adc
mov
popaw
adc
loopne
js
mov
push
fwait
adc
adc
sub
aam
and
fists
xchg
adc
ss
dec
pop
dec
test
mov
jmp
testb
adc
mov
push
and
adc
push
iret
out
faddl
and
pusha
mov
inc
daa
js
mov
and
mov
pop
sub
cmc
push
stos
cli
cmc
and
cwtl
dec
cmp
sub
mov
push
call
imul
push
pop
jecxz
xlat
xchg
adc
roll
push
mov
call
pop
out
jno
xchg
or
mov
jns
pop
aaa
out
ret
mov
sbb
inc
jg
movsl
pop
cmp
push
push
pop
xchg
pop
jmp
test
fcmovnb
lret
add
adc
jcxz
aaa
andb
cvtpi2ps
cmp
push
xchg
sahf
sub
repnz
cmpsl
sbb
pop
jbe
loop
fwait
cmp
and
jg
mov
add
xchg
sbb
insb
or
rcrb
mov
and
jl
data16
mov
lds
stos
repnz
or
push
rcrl
xchg
pop
inc
insl
xchg
mov
leave
lret
xor
dec
cmpsl
push
xor
ds
cmc
sbb
push
or
sbb
mov
shl
decb
inc
gs
cmp
dec
les
inc
xchg
push
cmp
hlt
popa
adcb
nop
inc
sbb
loopne
fldl
push
cmpsb
xchg
cs
aas
xor
shlb
ret
aam
imull
dec
clc
xchg
xchg
push
pop
insb
cmp
mov
xor
push
xchg
jle
imul
push
xchg
lds
cmp
lret
lret
mov
ret
das
ljmp
pop
adc
mov
out
dec
jne
jge
ss
in
dec
xlat
xor
pop
fsubr
jno
cmpsb
aaa
lock
je
sub
dec
cwtl
inc
inc
cwtl
jge
mov
in
fmuls
add
cmp
xchg
out
dec
orb
shll
jle
adc
mov
mov
movsl
not
jo
xchg
cmp
addr16
sub
push
jp
stc
in
pop
sbb
xchg
dec
pop
add
sbb
adc
adc
add
gs
pop
mov
lcall
jle
movsb
hlt
loop
cld
popa
lret
stos
popf
inc
mov
hlt
jle
sub
imul
mov
pushf
dec
addr16
orb
cmp
js
outsl
mov
insb
sbb
mov
les
insl
dec
or
hlt
xor
add
sbb
in
jmp
lahf
jle
stos
xchg
insl
scas
add
lods
add
add
ja
in
fucom
mov
pop
cmp
dec
out
jle
push
cmp
mov
push
jb
jnp
das
fildll
dec
or
and
pop
xchg
std
or
repz
adc
mov
fs
loope
scas
jnp
or
jbe
sbb
push
fs
cmp
inc
mov
dec
icebp
movhps
int3
pop
cmpsb
mov
lea
and
jae
sbb
leave
and
inc
xor
addb
sbb
jmp
and
push
and
cmpl
cmp
je
in
ret
mov
ficomps
adc
cld
lcall
mov
insl
ret
test
test
rcl
dec
mov
fs
scas
jbe
jo
mov
adc
cmpsb
sbb
jae
sub
lock
aas
push
pop
push
add
mov
imul
add
xchg
or
xlat
cli
out
testl
adc
icebp
sub
pop
jmp
enter
mov
or
imul
xor
cwtl
jns
add
les
and
mov
and
sub
jb
popf
fcomps
cmp
fcompl
mov
nop
adc
ret
dec
mov
cmc
inc
imul
cmpsb
mov
xchg
les
stos
xor
push
imul
xchg
sub
push
out
lock
inc
out
out
add
outsl
jne
mov
mov
add
arpl
push
fldl
insl
bswap
repnz
push
repnz
and
dec
xorb
xchg
lods
jne
movsb
mov
shr
cmp
mov
and
add
idivl
jmp
cmp
inc
sbb
inc
mov
xor
test
adc
sub
fstps
and
lea
jnp
out
fcoml
adc
dec
and
or
xchg
mov
mov
sub
jg
or
push
into
lret
mov
inc
inc
pop
push
cmc
pop
dec
jmp
mov
enter
inc
outsl
hlt
sub
dec
rcll
inc
adc
and
loopne
and
stos
mov
pop
addr16
sub
xchg
mov
loopne
pushf
dec
mov
pop
imul
inc
cmp
ret
push
decb
inc
mov
sub
jmp
lahf
adc
xchg
out
jge
rorb
push
outsb
mov
add
jmp
loop
jmp
outsl
adc
das
lahf
jnp
lret
hlt
push
popf
pop
fwait
push
jg
mov
mov
sbb
imul
xor
shll
mov
rolb
clc
pop
and
pop
scas
sub
mov
or
mov
inc
adc
sbb
mov
cmc
pop
sub
movsl
lret
loop
insl
xchg
fldlg2
dec
xchg
mov
lods
and
stc
mov
ss
inc
add
add
push
and
or
mov
sub
sbb
stos
call
mov
data16
push
and
lods
mov
daa
xchg
jle
test
in
cs
jecxz
call
loope
ja
fdivl
lret
in
in
ja
or
and
or
in
mov
imul
add
add
mov
decl
mov
les
mov
add
int
popf
mov
testb
je
xchg
scas
mov
pop
imul
mov
je
mov
mov
mov
push
xor
cs
sub
inc
xor
popf
push
dec
mov
dec
and
pop
xor
repz
sbb
into
hlt
jl
xchg
psubq
lcall
arpl
xchg
adc
jg
xchg
fiadds
lcall
dec
sahf
push
pushf
sub
dec
jle
sahf
popa
je
popa
pusha
or
jb
mov
insb
sub
iret
dec
insl
cs
mov
mov
or
shrb
add
popa
xor
jne
rcrl
dec
mov
adc
cld
cmp
or
or
popa
dec
lahf
out
sbb
xor
xor
cmp
or
adc
fstp
mov
repnz
inc
pop
mul
inc
or
mov
xor
dec
mov
int3
cmp
ljmp
cs
insl
inc
pop
xor
dec
xchg
js
xor
testl
cmp
aam
pop
dec
sub
jmp
or
shlb
sbbb
sub
mov
enter
mov
mov
fcmovbe
pop
inc
std
enter
cmp
and
xchg
jmp
mov
ret
jnp
pop
fs
cmp
mov
push
loope
sti
scas
cli
xchg
sub
lea
pushf
idivl
mov
mov
xlat
test
lahf
insl
add
test
sbb
xchg
adc
mov
js
adc
test
pop
sub
int
inc
jg
sub
popf
lahf
mov
out
pop
add
push
mov
lea
aam
cmp
out
push
ljmp
orl
fisubrs
fwait
popf
xor
or
adc
incl
call
jo
imul
jle
std
pop
cmpsl
sub
push
aas
lock
inc
inc
add
out
xchg
icebp
cmpsl
fwait
cwtl
mov
fistl
mov
lock
dec
out
pop
loopne
shll
popf
cltd
mov
ret
cmp
jns
and
stos
popf
aaa
lcall
and
data16
sbb
cmp
jns
std
test
aad
jecxz
cli
push
pusha
sub
or
inc
rorl
or
lea
addl
push
pusha
sub
push
dec
dec
movsl
sarl
or
xor
outsb
xor
fwait
xor
cli
push
push
in
fbstp
xchg
pop
ljmp
and
xor
lock
lret
sbb
bound
dec
les
xor
flds
jno
je
xor
mov
sub
push
data16
sbb
mov
stos
enter
inc
add
push
popa
sbb
mov
fsubrl
add
mov
jg
imul
push
hlt
sub
cmp
mov
hlt
cmp
inc
and
xor
js
cs
lods
adc
fbstp
or
cmc
dec
adc
cmp
cmp
pop
movsl
xor
push
add
sub
mov
sbb
push
mov
xlat
xchg
mov
fwait
arpl
fnsave
ja
add
add
lret
xorb
icebp
lret
aam
imul
adc
jg
mov
add
add
pop
xchg
mov
push
lods
mov
push
fiadds
mov
adc
mov
cmp
mov
sbb
dec
mov
mov
adc
xor
mov
fmulp
ret
mov
jecxz
out
xor
mov
std
adcl
mov
idivb
js
repz
inc
int3
jo
int3
mov
testb
scas
add
loope
arpl
xor
and
push
adc
lahf
cmp
cmpsb
dec
mov
push
xchg
inc
mov
sub
popa
mov
add
js
mov
jmp
mov
sarl
out
sbb
xor
stc
outsb
mov
push
inc
stc
aas
ret
xchg
icebp
xor
xchg
dec
cmp
push
mov
les
outsb
push
xchg
dec
loop
dec
cmc
sbb
sbb
lds
stos
shll
cmc
jns
jnp
inc
out
stc
test
sbb
in
cmpsb
fnsave
pop
add
inc
iret
test
mov
addl
and
fsubr
mov
jp
stc
pop
or
fcoms
xor
fnstenv
sahf
push
push
jae
push
xchg
clc
int3
rcll
hlt
in
stos
jo
ja
mov
cmp
mov
xor
mov
xor
jbe
std
and
fucomi
pusha
lods
mov
jge
or
call
sbb
lret
sbb
and
xchg
loopne,pn
jnp
pop
nop
and
divl
addr16
dec
leave
jp
lcall
aas
pop
mov
dec
mov
and
sbb
pop
push
adc
fistps
movsl
add
push
test
xlat
test
ljmp
cli
shrl
cmp
outsl
xor
ficoml
lods
pop
cmp
gs
xchg
ss
subl
or
mov
scas
test
mov
inc
aaa
xor
andl
leave
and
dec
shl
cmpsb
and
in
sbb
inc
mov
call
push
xor
int3
imul
cmpsl
imul
mov
or
js
and
sub
popf
lret
xchg
in
jns
lcall
cli
rcrb
mov
sub
int3
pop
out
mov
fsubp
lods
adc
paddsb
mov
xchg
inc
inc
insb
add
stos
icebp
inc
pop
test
pushf
jne
and
jbe
test
mov
ja
aam
push
clc
inc
ficompl
es
fwait
loopne
ja
mov
ljmp
xlat
mov
mov
inc
jo
lret
jg
in
ret
push
enter
mov
pop
cmc
pop
mov
divps
add
lods
addb
dec
or
dec
pop
xchg
sbb
test
stos
jae
push
icebp
stos
daa
lock
rorl
sbb
loopne
je
test
out
jl
and
mov
ret
lret
sub
mov
lock
mov
mov
adc
mov
filds
xor
nop
adc
int3
sbb
aaa
pop
and
clc
scas
xchg
cmp
sbb
outsb
mov
stos
jl
mov
int3
outsl
add
push
jno
mov
outsl
cmp
mov
mov
icebp
lahf
dec
mov
push
push
add
add
in
jp
jp
in
sarl
cltd
movsb
je
add
lods
add
add
inc
lea
sbb
subl
orb
xor
pushf
int3
inc
cmp
or
test
mov
fisubs
ret
jmp
test
scas
xchg
daa
xor
mov
imul
inc
push
jge
mov
icebp
jae
xchg
or
sbb
push
in
fwait
cmp
clc
ds
pcmpgtb
xchg
inc
in
xor
dec
pop
sub
sub
js
insl
ficoms
jge
push
ss
pop
sub
pusha
leave
jae
cmp
pop
test
pop
aas
out
je
stos
sub
xchg
mov
jmp
fldcw
aad
cmc
notl
mov
pop
mov
or
or
jge
push
call
mov
jp
ds
addr16
fdivl
idivl
xchg
push
push
jnp
leave
mov
vprotb
lcall
stos
pusha
repz
dec
fnsave
pop
decb
call
push
ss
inc
xlat
mov
outsl
fs
and
test
cmp
nop
lret
mov
arpl
movsb
push
push
es
and
dec
icebp
shlb
adc
lcall
shr
xchg
out
mov
lods
pop
adc
cmpsl
call
into
stos
es
je
or
cmpsl
insl
aas
pop
push
xchg
sub
jle
xchg
leave
imulb
cltd
aas
sub
xchg
stos
out
pop
in
inc
mov
xchg
in
pusha
out
fld
push
int3
mov
aas
push
mov
imul
pop
jp
mov
push
ret
and
out
cmpsl
cmp
cltd
mov
mov
leave
rcl
push
add
cmpsl
ss
mov
or
shld
jge
arpl
lds
push
and
sub
fptan
aaa
xchg
mov
sbb
mov
insb
in
popf
xchg
mov
mov
das
into
fcoms
andl
shrl
or
xchg
stos
fs
call
insl
add
sub
dec
xchg
inc
shrl
inc
ret
cmp
add
xchg
faddl
push
outsl
iret
and
add
dec
fsubrl
push
test
scas
fdivs
or
xchg
add
cmp
mov
outsb
lret
in
sbb
mov
mov
mov
add
fdivl
inc
in
inc
xor
dec
jmp
sbb
pop
mov
cld
test
lea
sbb
scas
bound
imul
outsb
fcompl
sub
rcrb
jmp
xchg
jmp
mov
or
mov
cmc
jge
das
out
or
and
pop
xchg
mov
je
daa
aaa
jge
cmp
inc
cmp
mov
sbb
push
in
adc
push
push
jle
sub
push
lahf
push
imul
push
cwtl
leave
cld
scas
aaa
cmpsl
push
add
mov
jge
push
xchg
cmp
or
inc
shl
mov
and
xchg
mov
and
push
jecxz
jne
pop
jnp
es
decb
mov
xor
and
loope
xchg
mov
orb
movsb
mov
mov
ret
pop
inc
aaa
insb
mov
add
sub
adc
cld
mov
cmp
ss
add
add
mov
lcall
mov
mov
add
sbb
xor
cmp
movsl
and
mov
inc
xor
insl
loope
xor
adc
stos
outsb
adc
jne
or
cmp
in
sbb
popf
add
push
jnp
test
mov
les
in
mov
sub
inc
sub
push
mov
cmp
loopne
sub
and
insl
int3
pop
mov
dec
mov
cli
loope
bound
mov
into
ret
pusha
adc
test
in
xor
xor
loop
repnz
gs
xor
aam
jo
or
push
xchg
push
xchg
test
push
out
fimuls
flds
dec
daa
sub
call
jl
sub
mov
inc
push
clc
dec
ljmp
cwtl
xor
fwait
jmp
cmp
cmp
or
call
pop
pop
cmp
sub
data16
mov
mov
subb
addr16
test
xchg
cmpsb
mov
mov
mov
cmc
ja
cli
cmp
imul
cltd
sarl
pusha
pop
ret
dec
mov
and
sbb
adc
fmuls
lock
xorb
push
cmpsl
sbb
fcomi
ss
jmp
cwtl
inc
cmc
dec
out
hlt
cld
push
mov
inc
dec
mov
ret
mov
jbe
push
or
push
lods
push
ja
js
scas
fstpl
lock
dec
xchg
ljmp
xor
fs
sub
bound
jge
inc
int3
jl
test
sbb
rcrb
or
das
xchg
fimull
dec
scas
into
mov
xor
jecxz
ss
lret
or
fildll
out
sahf
add
pop
and
cld
mov
ret
leave
je
cli
adc
mov
gs
add
push
inc
xchg
enter
inc
dec
in
repnz
sarb
dec
or
and
add
inc
js
ljmp
ds
movsl
stc
cmpsl
nop
mov
hlt
and
adc
xlat
or
fsts
arpl
and
sbb
dec
mov
imul
ja
jb
adc
inc
enter
xor
cmp
stos
imul
out
test
or
or
mov
outsl
arpl
pop
pop
dec
divl
lret
scas
jne
pop
je
fiaddl
add
mov
rorb
mov
stc
fcoms
loope
inc
sub
shrd
out
pop
ss
dec
pop
adc
sbb
sarl
push
fcmovnb
popa
and
ret
sub
or
mov
push
scas
nop
adc
jg
jmp
pop
cmp
mov
aad
mov
push
jne
cld
orl
mov
and
int
adc
aad
ja
data16
fs
push
idiv
jns
adcl
and
mov
adc
fsubr
mov
js
pop
fwait
or
or
int
stos
sbb
das
inc
mov
cli
dec
pop
mov
loope
cmp
out
mov
mov
sbb
mov
dec
fistps
ss
sahf
or
les
cmpl
cmp
xchg
cmp
push
adc
adc
inc
loopne
daa
sub
cmp
lock
dec
adc
pop
mov
or
fcomp
xor
push
repnz
and
mov
cmc
lret
and
sahf
fwait
arpl
add
add
out
mov
cmp
add
sub
into
roll
lods
add
add
push
aam
or
mov
data16
adc
out
pop
pop
sub
call
and
adc
repz
sbb
mov
insb
icebp
dec
mov
lea
pushf
jge
cmp
bnd
mov
insb
cmp
xchg
xchg
pusha
dec
and
and
in
pop
dec
mov
pop
fwait
aaa
pop
mov
or
pop
push
cmp
sbb
xchg
popa
lds
or
loopne
push
in
je,pn
fdivl
jp
in
aad
sbb
das
mov
or
arpl
into
sbbl
cltd
or
sbb
and
out
ret
adc
xor
mov
mov
xchg
iret
in
ds
sbb
into
push
notb
addb
add
lret
js
call
mov
pop
orb
aaa
and
sahf
data16
notl
mov
xchg
addl
sbbl
mov
mov
lods
sub
sbb
cwtl
fbstp
push
cs
mov
mov
add
cmpsb
fwait
push
dec
fwait
add
jp
stc
out
mov
push
push
xchg
arpl
fistps
xor
jmp
add
ret
jle
inc
iret
pop
xlat
push
lds
mov
insl
mov
or
fidivrs
insb
inc
ds
pop
inc
xchg
data16
iret
push
sbb
sub
ljmp
xlat
movsl
in
mov
lds
jnp
loope
push
movsl
inc
sbb
andl
insb
or
mov
dec
fimuls
push
scas
in
lcall
mov
ljmp
add
sbb
push
ficompl
push
ja
rorb
cmpsl
jge
mov
test
xchg
dec
loop
adcl
andb
repnz
mov
std
in
adc
push
decb
cmp
enter
push
rol
ss
fimull
adcl
mov
and
ds
shrl
mov
dec
rorl
or
pop
in
sti
lahf
rol
in
in
outsl
aad
inc
loopne
pop
xor
or
pusha
adc
aaa
and
cmp
ficomps
xlat
lods
mov
pop
cmp
scas
repz
movsl
mov
mov
push
dec
dec
push
pop
int3
jmp
lret
fs
loop
jmp
xchg
and
rclb
pop
out
mov
xchg
adc
inc
loopne
sub
sub
inc
pop
inc
push
mov
jl
psrld
mul
in
add
and
xchg
shrb
push
and
cmp
fisubrs
movhps
inc
insl
repz
pop
push
add
inc
movsb
clc
or
mov
adcl
fidivs
mov
adc
leave
xchg
xor
insb
divl
inc
mov
push
mov
push
int
and
jp
xchg
adc
xchg
rclb
dec
cmp
push
add
call
cmp
dec
mul
sbb
shrl
stc
lea
mov
movsl
mov
das
pop
test
jl
clc
movsl
xor
fstps
dec
arpl
push
test
push
in
mov
fs
pop
add
dec
dec
insb
dec
ljmp
mov
add
add
add
mov
xor
lock
add
lods
add
add
inc
ja
mov
inc
aaa
xchg
cs
daa
outsl
fstps
dec
gs
mov
dec
sub
xchg
ss
aas
in
ret
sarb
out
jns
clc
leave
cmp
inc
daa
sbb
add
inc
jnp
call
pop
add
mov
jb
jo
jg
test
arpl
out
jecxz
xchg
and
dec
mov
push
lods
inc
and
mov
fst
iret
fisttpll
mov
fidivrs
jge
es
pop
mov
push
push
lcall
pop
in
jno
loopne
in
dec
lret
push
xchg
mov
stos
stc
stos
test
fwait
call
or
lods
xchg
call
loope
ds
rorl
cwtl
das
mov
mov
stos
shrb
pop
iret
jo
xchg
xchg
test
add
fucomip
call
jle
jp
inc
mov
out
push
je
shl
in
lea
stos
xchg
aad
mov
xorl
daa
add
andl
and
push
push
test
cltd
xchg
lcall
push
movsl
es
ds
ror
pop
sbb
cmp
pop
pop
cmp
sbb
jb
outsl
scas
cs
das
mov
mov
mov
xchg
adc
mov
cmp
push
mov
in
out
push
std
sub
lea
insb
ret
or
out
jne
in
gs
imul
ljmp
and
pusha
mov
push
jle
mov
mov
cmpsl
adc
cld
out
aaa
push
jnp
mov
pop
jae
mov
push
and
xlat
out
sbb
sub
mov
test
call
mov
inc
shr
mov
jmp
repz
subb
mov
popa
insb
mov
sub
cmpb
ror
fs
add
lahf
mov
inc
ret
xor
mov
shl
or
sbb
sub
xchg
inc
inc
or
arpl
or
in
in
aas
das
xor
cmpl
adcb
gs
div
imul
adc
test
push
scas
js
cltd
adc
xchg
sbb
shrb
pop
repz
rcl
ret
pop
and
lahf
adc
aaa
add
loope
adc
cs
sub
mov
adc
push
and
push
cmpsl
xor
lods
and
nop
jb
lods
fs
testl
or
stos
jae
inc
mov
jnp
rorl
cs
int
push
aas
or
add
add
rolb
shlb
stos
fildl
cmp
lret
frstor
jne
push
mov
lret
mov
clc
and
enter
xorb
push
jno
and
pop
inc
xchg
rcll
test
sub
std
in
fsubl
insl
jp
out
adc
adc
movsb
call
mov
push
dec
jne
sbb
cmp
dec
cmp
movsb
lea
jmp
mov
jo
mov
xchg
arpl
orb
mov
cwtl
repz
mov
xacquire
mov
mov
jg
data16
insb
mov
stos
sbb
lds
push
sbb
mov
add
imul
dec
pop
add
add
lods
add
add
mov
push
jl
jae
aaa
fs
rclb
pop
in
stos
mov
dec
adc
adc
shrb
movb
and
xchg
data16
enter
stc
insb
mov
lock
dec
shlb
stos
fcmovnb
lock
in
dec
cmp
and
sub
dec
push
jmp
adc
fcomi
push
test
mov
adc
pop
and
es
xchg
push
fs
mov
pop
push
push
rcrb
cmp
adc
ficoms
js
mov
or
xlat
jae
shlb
arpl
push
subl
bound
cli
and
notb
add
push
mov
daa
mov
cld
adc
inc
and
pop
jo
sub
mov
dec
in
mov
leave
leave
sarb
or
mov
lahf
pop
ja
adc
xchg
stos
sbb
fwait
cmp
cwtl
xchg
gs
filds
cli
ret
fists
push
shll
jl
out
and
mov
hlt
xor
push
lcall
adc
inc
and
rorl
movsb
mov
int3
in
popf
add
mov
pop
mov
ret
xchg
loopne
add
jae
outsb
push
dec
jg
mov
cmp
or
fwait
mov
xchg
xor
adc
pop
pop
push
mov
xorl
cmp
ds
pop
xchg
add
push
insb
inc
das
dec
repnz
fsubrl
pop
push
jge
inc
jle
cmpl
data16
mov
addr16
ja
inc
or
repz
pavgw
mov
xchg
into
add
in
int3
cmp
stos
xlat
push
xchg
shll
add
push
fisttpll
mov
ljmp
or
xchg
and
xor
pop
testb
fisubl
bnd
push
aaa
scas
or
mov
mov
shll
pop
xchg
adc
push
xchg
int3
xchg
dec
push
leave
pop
test
out
fbld
aad
jle
loope
call
mov
xchg
push
jae
xchg
cmp
pop
mov
or
int
out
jmp
je
sbb
dec
popa
sub
xor
push
or
mov
popa
cmp
adc
out
aam
notl
add
lds
xchg
outsb
mov
mov
out
movsb
or
xchg
pop
push
pop
lret
jb
mov
jnp
jne
stos
dec
iret
int
pop
add
mulb
aas
jne
sbb
mov
xchg
add
xor
decl
push
sbb
dec
sarl
jae
mov
in
push
stos
cmp
mov
notb
pop
lods
push
aaa
stos
push
std
jbe
sub
jl
filds
mov
push
xchg
adc
adc
pop
popf
push
in
scas
add
inc
mov
shlb
jecxz
push
loope
nop
push
or
pop
ja
loopne
imul
pop
sub
mov
lods
loope
movsl
fstl
push
int3
ljmp
gs
int3
aaa
cmp
dec
pop
push
movl
cmp
jb
cwtl
cmp
in
cld
jge
adc
sbb
testb
add
dec
or
scas
jmp
popa
mov
or
pop
jnp
aad
add
lods
add
add
cmp
dec
sub
arpl
test
xchg
aas
popl
es
xor
je
cmp
push
arpl
cmp
mov
scas
or
ljmp
rorb
scas
jbe
call
icebp
cwtl
sarb
test
cs
xor
test
loop
in
in
dec
jbe
into
cmpsb
lods
adc
loop
push
adc
mov
or
jmp
pop
in
xchg
loope
aam
and
movsl
or
pand
fwait
or
clc
out
mov
movswl
in
sbb
jp
xchg
pop
sub
jbe
movsb
lods
xchg
dec
xchg
clc
fcmovnbe
aad
sar
mov
call
btc
push
inc
movsl
add
test
inc
mov
xor
sbb
xchg
jp
je
iret
jecxz
out
jg
mov
std
sbb
add
out
stos
je
mov
test
movsl
jmp
xchg
testb
pop
addr16
and
dec
push
mov
movsl
les
mov
or
adc
xchg
mov
add
sbb
pusha
mov
push
or
call
adc
cwtl
insb
xchg
jmp
and
push
mov
andl
pop
jl
sub
mov
jg
push
add
stos
imul
mov
sub
sub
dec
mov
test
jecxz
mov
pushl
inc
push
fisubs
mov
incb
pop
inc
mulb
shll
pop
loop
test
pop
sbb
xchg
mov
pop
and
jne
mov
icebp
push
or
mov
dec
outsb
imul
sahf
jns
dec
push
jg
sbb
inc
sub
sbb
pusha
sbb
xor
inc
mov
xchg
clc
aas
add
lods
cmp
push
mov
push
fwait
in
icebp
or
sbbl
and
aam
jge
cmp
sbb
push
jecxz
aad
sbb
scas
xchg
jno
insb
test
pushf
mov
mov
je
arpl
pop
and
xor
mov
jmp
out
cltd
jecxz
jle
push
in
dec
jle
push
push
lods
mov
or
lds
push
imul
sbb
mov
dec
push
scas
das
push
ja
in
ljmp
cmp
sub
in
pause
out
lcall
xor
cmpsl
aam
jbe
aas
xchg
jp
xchg
loop
and
inc
in
outsb
and
sbb
shr
and
or
or
loop
out
imul
push
push
xchg
nop
shl
test
negb
xor
mov
ja
dec
sbb
ret
aaa
cltd
pop
inc
jbe
mov
mov
adc
leave
adc
push
jne
sahf
pop
lds
and
mov
sar
jge
je
pop
mov
movsb
arpl
xchg
out
je
dec
mov
or
shlb
pop
lcall
test
mov
inc
fstl
cmp
popf
inc
sub
pop
inc
out
cmpsl
adc
cmp
sub
fisubl
push
mov
adc
and
inc
and
sbb
in
test
push
cld
mov
adc
add
push
mov
lods
xor
out
jmp
cmp
and
sbb
das
pop
imul
out
jb
icebp
mov
and
fisubrl
and
scas
push
sub
insl
mov
repnz
adc
stos
xor
push
mov
gs
fnstsw
adc
mov
rcrl
das
outsl
mov
fcomip
or
lret
mul
les
cld
pop
jle
imull
test
daa
ljmp
das
and
cmpsl
xchg
xchg
mov
inc
or
sub
outsb
test
pop
mov
add
cmpb
imul
mov
addb
jg
addr16
fidivrs
push
push
dec
pshufw
lahf
xor
in
add
sahf
cmpsb
add
cld
jb
sub
jmp
nop
xchg
sub
xchg
xor
inc
sahf
sub
jno
cmp
repz
cld
mov
adc
pop
ror
mov
jb
cmpsl
xchg
leave
inc
fstpl
arpl
xchg
mov
js
jle
or
dec
imul
insl
pop
lods
dec
mov
loopne
cmp
add
jo
mov
dec
fcoml
cmp
shlb
adc
fcomi
jl
xor
cltd
mov
fisubl
lods
ud2
dec
loope
and
dec
leave
in
loope
mov
insb
and
jle
mov
xchg
dec
push
shlb
stos
pop
imul
flds
test
pop
sbb
sub
dec
jp
mov
mov
andb
add
mov
mov
jle
add
mov
orb
sub
push
mov
jl
fidivrs
xchg
xor
jbe
mov
sub
jle
pop
mov
insb
or
and
fchs
lea
jbe
or
mov
cmp
cs
repz
push
movsb
push
lcall
sbb
clc
dec
inc
sahf
mov
je
pop
jg
xchg
jno
loopne
adc
das
xchg
dec
pop
pop
js
pop
ffreep
test
cmp
pop
mov
or
xor
fstl
fldl
cmpsl
enter
aad
mov
movsb
sub
jae
bound
cmp
xlat
cmp
dec
fldt
sbbb
imul
pop
or
rorb
xor
insb
lcall
rcrb
sub
and
int3
leave
push
stos
mov
mov
mov
leave
and
xlat
mov
xor
movsl
ret
sahf
pop
pop
fwait
mov
cmp
into
lock
jns
mov
mov
jae
lds
jnp
mov
cmp
idivb
pop
mov
sub
pop
inc
jecxz
push
jp
pop
call
shlb
mov
adc
sbb
xlat
add
mov
repz
add
jbe
jle
leave
nop
mov
movb
js
mov
xor
shl
stos
push
pop
mov
fsubl
stos
mov
xchg
mov
push
bound
pop
enter
fstpl
mov
ret
fdiv
pushf
mov
loopne
out
inc
je
cmpsb
inc
cmp
mov
flds
add
pop
push
leave
popf
lret
popf
pop
xlat
loope
fs
xor
add
add
jno
dec
or
inc
daa
sbb
xlat
mov
dec
mov
mov
sub
xor
loopne
sub
and
in
incb
fwait
mov
adc
shrl
pushf
fsubrs
inc
sbb
inc
adc
dec
sub
iret
insb
call
mov
fidivrs
sbb
adc
push
jecxz
pop
jge
jmp
inc
insl
dec
push
lods
scas
push
insb
cmc
and
insb
pop
loopne
dec
fmull
push
xor
shll
test
lret
fcompl
add
sarb
das
lret
bound
jno
push
inc
int
aad
fldl
int3
jecxz
dec
cmp
repnz
cmp
or
lods
popf
xor
cli
shrb
cwtl
inc
aas
adc
enter
mov
or
mov
or
pop
add
add
imul
add
mov
sysret
or
sbb
push
inc
lock
outsl
ret
pop
idiv
mov
cmp
lods
cmp
jge
or
stos
cmp
add
mov
sbb
or
push
fildl
pop
ds
aaa
les
mov
sub
sbb
mov
mov
add
mov
inc
scas
inc
clc
es
push
xchg
lcall
lods
pop
ret
sub
mov
fs
test
leave
sub
cmp
push
and
mov
stos
xor
lcall
sbb
cmp
push
cmp
iret
inc
or
cmp
cwtl
inc
inc
dec
add
sti
aam
mov
mov
jo
dec
and
lahf
movsb
inc
jae
push
sub
outsl
stos
push
out
adc
fisttpl
sahf
test
repnz
call
loope
or
data16
sub
add
aam
mov
sub
or
cli
mov
out
sub
lahf
sub
mull
dec
mov
xor
pusha
add
push
inc
adc
add
ret
mov
repnz
mov
xchg
imulb
pop
pop
mov
mov
andb
xlat
dec
int3
ds
mov
and
and
jno
cmp
add
xchg
mov
in
movntps
or
mov
jge
jl
sbb
out
mov
xchg
or
cmp
lods
ljmp
pop
dec
fdivrp
pop
pop
loope
jae
loopne
mov
subl
mov
xor
jg
mov
loope
xor
push
adc
inc
add
stos
adc
es
jle
xchg
jmp
mov
fcoms
mov
adc
xchg
movsb
popf
fwait
ds
aaa
sub
or
stos
stos
rorb
add
jge
push
out
shll
cmp
dec
ss
jmp
fsubr
jbe,pn
jecxz
test
lods
mov
shrl
and
cli
lock
fistps
add
inc
xor
inc
push
loope
inc
sub
mov
data16
int
fiadds
cld
stos
std
inc
xor
add
mov
inc
popf
mov
add
gs
add
shll
fldt
out
inc
jecxz
xchg
out
dec
inc
lret
cmpl
xchg
icebp
jb
incl
add
call
pop
out
dec
pop
popa
sub
dec
jns
xlat
add
lods
add
add
into
outsl
loope
jmp
cmp
jae
and
sub
xchg
jne
mov
dec
and
fmulp
xchg
pusha
ret
addr16
jns
xor
outsb
stc
mov
jns
mov
add
test
xchg
sbb
mov
insl
ret
les
shl
sbb
push
cwtl
ja
inc
popa
stc
pushf
push
xchg
pop
or
add
cmp
sub
inc
mov
ficomps
add
mov
xor
jmp
aas
mov
or
jmp
adc
push
sub
mov
sbb
in
push
pop
aas
aad
inc
xchg
int3
xlat
xchg
aaa
fs
push
xchg
insl
ret
xorl
pop
sub
push
inc
lea
loopne
and
mov
std
aas
je
and
push
addb
xor
repz
add
jle
test
mov
mov
es
mov
cmp
jmp
adc
fsubrp
or
push
lds
mov
mov
push
out
mov
add
mov
push
adc
sbb
add
cmp
cmpsb
sbb
xchg
bound
mov
push
sti
inc
cmp
rorl
popa
shll
pop
cmp
movsl
stos
xchg
aaa
mov
out
xor
or
dec
test
sub
les
pop
rorl
pop
es
test
push
mov
mov
test
xchg
fsubrl
les
jnp
push
cmp
lock
inc
gs
je
pop
pop
mov
lcall
sbbl
cmp
jo
jb
pusha
inc
insb
add
pop
xchg
jge
out
in
orb
cmp
sbb
ljmp
mov
mov
repnz
adc
cmp
movsb
sbb
adcl
sar
jno
xor
test
push
pshufw
dec
xchg
xor
imul
adc
arpl
subl
popf
sub
clc
cmp
dec
and
sbb
filds
inc
add
testl
ja
inc
adc
repnz
fnsave
xor
inc
sti
or
inc
icebp
rcll
in
aaa
xlat
rcr
movsl
jge
bound
pop
clc
adc
imul
js
or
movsb
add
add
sub
test
dec
xor
and
pop
data16
sub
sub
push
sbb
fdivl
sbb
xor
push
or
mov
jns
fs
decb
jp
lea
test
jno
inc
add
fnstcw
cmpsb
jbe
push
movsb
and
dec
ljmp
jg
sub
sbb
insb
fnstsw
mov
lock
mov
mov
lahf
mov
pop
mov
pop
ja
mov
or
rclb
push
addr16
je
lea
push
sub
imul
js
mov
cmp
dec
push
ss
movsl
adc
and
imul
int3
or
pushf
cmc
stos
dec
sub
fisttps
psubsw
lahf
jbe
xor
xor
gs
inc
sbb
fs
pop
add
add
jnp
data16
decl
std
or
mov
add
lods
add
add
cmp
mov
lds
jle
mov
rcl
and
shrl
dec
test
inc
push
pop
dec
dec
int3
movsl
xchg
adc
testl
jno
fs
incb
add
xor
repnz
dec
inc
aaa
or
aad
fldenv
xor
sub
lock
gs
pop
fldl
jg
jg
call
in
pop
cmp
fs
dec
fsubrs
xor
ss
inc
and
xor
xor
xor
lea
pushl
outsb
xor
lock
into
dec
sarl
pop
fld
bound
sahf
ja
jb
adc
cmpsl
jge
mov
stos
cmp
decl
cltd
iret
nop
push
fsubs
pop
push
insl
push
mov
iret
outsb
sbb
mov
xor
xlat
pusha
mov
push
cmpb
subb
xor
pop
rclb
cmp
inc
inc
xor
sub
cmp
mov
push
insb
dec
aas
add
cmp
mov
dec
lret
fldcw
mov
jmp
ds
mov
push
aaa
pop
mov
enter
cmc
push
insb
das
outsb
pop
xchg
adc
inc
jae
popa
rcrb
arpl
cmpsb
jbe
test
dec
addr16
clc
iret
adc
or
stos
mov
test
inc
and
adc
dec
adc
mov
in
and
stos
xchg
xor
mov
dec
inc
and
filds
inc
dec
ja
xchg
in
psadbw
lods
cmc
cmp
in
lods
pop
bound
pushf
push
lea
or
lock
shll
lret
test
xor
sbb
push
mov
jnp
pop
inc
cmpsl
xor
pop
push
xchg
jb
pop
into
aad
gs
out
add
inc
insl
dec
inc
dec
jg
nop
xor
and
push
fisubs
mov
in
inc
aaa
fsubl
mov
out
xor
std
dec
in
xchg
ljmp
cmp
jbe
pushf
mov
inc
sahf
lret
cmp
arpl
in
sub
test
push
jns
push
pop
mov
cmp
mov
cmp
sbb
addr16
outsb
test
cmc
mov
mov
sbb
cmp
repnz
mov
pop
div
or
mov
adc
push
into
rolb
inc
jle
lret
sbb
test
xchg
outsl
lahf
pop
loop
jmp
shll
adc
inc
enter
or
mov
pop
xchg
add
sub
aas
jne
mov
out
xor
jg
jae
std
jb
sbb
shl
xchg
dec
addr16
andb
cmpsb
push
jg
mov
ret
xor
push
or
int
add
notb
test
andps
dec
and
mov
pop
dec
cmc
fdivrl
mov
or
aam
sub
int3
mov
movb
add
shll
sub
mov
popf
lret
sbb
loopne
dec
push
xchg
ljmp
inc
lds
imul
inc
lods
mov
pusha
jb
xchg
scas
fldcw
cmc
xchg
inc
push
into
mov
and
adc
loopne
lock
out
mov
jno
outsl
xchg
add
add
into
psrld
rcr
fistpll
push
ret
dec
adc
filds
add
pop
xor
lret
dec
xchg
cmp
xchg
jnp
cwtl
xlat
lcall
icebp
in
rol
popf
clc
cmp
jb
mov
out
mov
notl
push
push
stos
in
xchg
imul
sbb
mov
adc
sub
out
jae
imul
pop
aas
or
fcmovnu
scas
pop
ror
pop
dec
imul
clc
adc
imul
cmp
xor
xor
sahf
add
pop
xchg
loope
mov
dec
or
and
pop
jns
in
sti
aad
xchg
inc
push
pop
sti
adc
nop
jns
aam
ficoml
xlat
pop
leave
sub
int
push
inc
adc
adc
loop
enter
jge
mov
jnp
dec
fdivrs
sub
jnp
std
jno
mov
jp
or
mov
test
test
arpl
xchg
popa
xchg
pop
dec
sub
hlt
sub
fadds
and
leave
add
push
jbe
push
adc
lods
pop
inc
cld
cmc
mov
movsb
aam
mov
xchg
stos
mov
push
adc
adc
test
call
icebp
testl
leave
in
insb
push
mov
sbb
mov
pop
and
cmp
hlt
stc
add
pop
push
mov
nop
cmp
xchg
enter
inc
push
cld
testl
lock
popf
push
mov
inc
dec
imul
sbb
sub
adc
cmp
mov
jle
flds
inc
or
lahf
add
mov
outsb
sub
lea
test
mov
and
ficoml
inc
mov
jg
sbbb
sbb
push
jns
cmp
loope
mov
xchg
test
subl
adc
mov
movsl
insb
out
shll
repnz
xchg
push
adc
orb
fmuls
and
int3
adc
push
dec
addr16
or
xchg
inc
ljmp
sub
mov
andb
andb
xor
ja
add
xchg
mov
out
or
add
dec
loope
test
js
frstor
add
mov
pusha
fsubrs
insb
pop
cltd
shll
mov
outsb
sbb
jnp
leave
dec
push
out
push
jnp
dec
sbbl
xchg
pop
add
cmpsl
std
inc
fwait
pop
add
lock
fs
mov
mov
push
mov
adc
mov
sub
inc
dec
or
flds
mov
fsubs
dec
aas
loope
jae
es
in
dec
fldt
test
or
inc
ret
mov
cmp
daa
cmp
shrl
xor
nop
scas
cltd
or
adc
sti
xor
jo
mov
je
imul
and
mov
or
ret
mov
out
mov
daa
mov
shr
jge
pop
mov
cltd
stc
popa
xchg
loop
adc
cltd
sbb
cmp
sub
and
lret
push
mov
dec
lock
cmpsb
nop
lea
inc
fs
fldl
das
lea
sub
outsb
add
inc
cmpsb
cmp
mov
shl
or
stos
cmc
jle
add
mov
jns
cmpsb
nop
or
cmp
xor
jg
add
lock
pushf
pusha
pushf
cld
cld
push
dec
lock
add
lods
add
add
out
push
pop
stos
bound
push
lcall
shr
mov
inc
mov
lods
sbb
fld
scas
xchg
fsubr
aas
stos
xor
jae
mov
fs
lods
lds
dec
rcrl
out
inc
les
mov
sbb
leave
jne
and
xor
pop
cmpl
test
xor
sarl
lret
addr16
xchg
inc
and
dec
flds
cmp
gs
ffreep
outsl
inc
inc
movsl
int3
mov
sub
dec
mov
add
shl
dec
pop
xchg
jnp
mul
push
loope
ret
xchg
fistps
mov
cmc
aas
clc
mov
ljmp
test
mov
push
inc
cmp
daa
jo
cmp
jns
clc
adc
int3
xchg
xchg
mov
xor
jbe
cli
scas
stos
out
xchg
rol
orb
in
mov
pop
jno
or
stos
je
xor
test
and
adc
out
add
rorb
xor
fnstsw
or
push
xor
push
xlat
out
jno
mov
mov
outsb
mov
ret
call
xchg
cmp
lods
push
pop
pushf
dec
stc
iret
test
mov
mov
push
jecxz
shll
push
inc
mov
mov
es
out
adc
lods
sbb
popf
into
dec
mov
jge
mov
lret
xorl
imul
dec
jl
jp
lret
ret
shl
inc
scas
dec
ret
ret
aas
push
pop
jb
cmp
sub
add
fnstsw
lock
xor
xchg
mov
push
test
fstps
or
pop
xorb
mov
dec
lahf
push
and
push
ljmp
clc
pop
fdivl
cmpsl
and
or
jbe
mov
mov
cs
jnp
je
lods
cs
sbb
sbb
bound
cmp
mov
mov
lret
stos
leave
in
and
pop
sbb
mov
leave
cmpsl
outsb
dec
shrl
push
mov
jp
jecxz
xchg
pop
repz
cmpsb
xor
xchg
xor
mov
inc
ds
ja
push
ds
lahf
loope
cmpsl
push
mov
in
pop
popa
ret
mov
lds
in
add
pop
xchg
test
fs
leave
jnp
test
ret
add
inc
lcall
je
or
fs
jp
nop
lret
je
jbe
push
in
std
out
mov
adc
es
add
mov
add
js
sbbb
fcomip
mov
cmpb
loop
out
push
es
push
xor
sbb
outsb
adc
fsts
shrb
pop
xor
imul
stc
popf
mov
cmp
mov
pop
add
bound
divl
cmp
scas
pop
xor
xchg
repz
add
or
addr16
cmpsl
sub
mov
and
xlat
addb
xor
mov
push
sbb
dec
mov
pop
ret
loop
in
rcrl
mov
xor
or
hlt
mov
jns
fwait
into
mov
jae
in
add
xchg
or
inc
inc
xchg
inc
and
in
cmpl
inc
jno
inc
mov
ds
adc
add
sbb
ret
jg
mov
shrb
test
mov
add
add
pop
call
repnz
inc
lahf
aas
jg
and
jle
or
ret
jle
pusha
cmp
bound
cmp
add
popf
or
orl
test
imul
aas
xchg
icebp
int3
lcall
xor
mov
gs
xchg
jge
pop
fcompl
lea
or
xor
xchg
dec
pop
jbe
xor
xchg
mov
stos
pop
outsb
inc
add
jecxz
mov
faddl
xchg
ja
cltd
inc
mov
out
pusha
rclb
mov
xchg
mov
rorl
jns
pop
outsb
scas
xchg
outsl
inc
xor
jle
punpckhbw
sbb
dec
das
test
imul
adc
fwait
and
jbe
xchg
fcoms
xchg
bound
cmpsb
jge
popf
cmp
fsub
mov
out
insl
mov
sarl
nop
or
or
fstpt
sub
xchg
push
jbe
push
popa
test
add
xor
lock
jg
cmp
leave
and
int3
lahf
pop
cs
sar
rol
and
sbb
sti
xchg
or
mov
aam
mov
cli
dec
sub
add
push
pop
push
sbb
xchg
inc
lock
jecxz
inc
inc
in
mov
stos
ret
mov
popa
repnz
fisttpll
jbe
adc
mov
scas
out
sub
scas
int3
push
push
clc
mov
xchg
iret
push
push
xchg
push
xor
adc
sub
mov
mov
cmp
addr16
in
and
stos
lea
and
fdivrs
pop
pop
stos
adcl
add
pop
inc
adc
add
inc
stos
mov
ds
xor
push
adc
cmc
mov
je
push
icebp
in
sarb
not
push
and
loope,pn
in
cpuid
jmp
scas
sub
sub
sbb
push
mov
out
lret
mov
push
orb
sarl
jno
mov
adc
ja
ror
sub
and
repnz
sbb
add
hlt
fsubs
and
mov
stos
xor
sub
sub
xchg
outsl
sbb
les
hlt
mov
fisubs
pushf
fwait
adc
sub
and
je
inc
or
cmp
cmpsb
xor
add
jb
fdivl
stos
jp
fwait
orb
xor
cmp
jg
mov
pop
xor
aam
sub
xchg
rcr
jno
jecxz
push
adc
cmp
or
mov
test
xchg
mov
fidivrl
pop
loop
enter
sbb
fistps
test
push
cs
lcall
and
mov
or
popf
xchg
in
push
in
rcl
jle
xchg
daa
insb
insb
inc
dec
or
in
or
shr
or
sahf
test
lods
in
mov
mov
xchg
xlat
xchg
pop
and
sti
mov
cltd
popa
dec
lods
xor
ds
aam
xor
fsts
jo
mov
das
cmpsb
xlat
xor
cwtl
fs
orb
pop
mov
adc
in
jns
aad
sbb
leave
ljmp
add
add
inc
xchg
dec
xchg
mov
sahf
lahf
mov
add
add
adc
xchg
stos
xor
and
and
fsubr
cmpsl
test
out
xchg
pop
pop
ret
xchg
psrlw
mov
imul
jnp
iret
xchg
rolb
sti
lcall
pop
in
outsb
je
dec
aad
or
loope
test
cwtl
xchg
shll
sub
pop
sbb
shlb
pop
fisttps
jno
dec
stos
mulb
sahf
mov
ret
xchg
daa
adc
popf
jmp
lcall
mov
mov
add
repz
hlt
pop
pop
test
lret
sarb
pop
pop
rorb
jle
and
aad
cmpsl
das
aas
sub
inc
cmp
fcmovnu
sub
mov
mov
sbb
xor
jmp
dec
scas
inc
xor
xor
int
pop
jnp
mov
inc
push
int3
fucomp
daa
cmpb
movsl
repz
nop
pop
lcall
mov
clc
or
and
pop
out
jb
in
jae
xorl
lds
or
pop
shrl
cmp
les
pop
pop
sahf
mov
int3
out
xchg
or
and
sub
mov
das
jb
dec
xor
adc
das
popa
mov
test
pop
jbe
fxtract
stc
xchg
outsl
jge
push
jl
jne
fldt
sbb
xchg
xchg
arpl
xchg
in
out
mov
xchg
lods
jl
or
lock
ss
and
stc
dec
add
test
mov
test
add
insl
cld
rorb
movsb
inc
rep
mov
push
into
loope
fisttpll
popaw
idivb
aad
xchg
mov
scas
fistpl
int
mov
pop
jbe
cltd
adc
aaa
cmpsl
outsb
xor
rcrl
fwait
mov
adc
sahf
push
enter
popa
add
sub
and
andb
sub
ljmp
lods
rcrl
and
fwait
inc
fwait
push
xchg
inc
or
int
and
mov
jo
out
dec
mov
mov
lcall
and
mov
jnp
negb
pushf
lret
and
jp
iret
cwtl
stos
ret
adc
cmpsb
ret
in
dec
jecxz
mov
out
push
aad
imul
in
ret
adc
mov
repnz
loop
icebp
dec
sub
mov
rcrl
or
shr
cmp
xchg
mov
incl
mov
push
dec
add
out
dec
cmp
xchg
js
jecxz
mov
pop
push
push
pop
rorb
stos
clc
mov
mov
int
jo
out
push
inc
mov
fs
outsl
stos
push
xor
hlt
rcrl
insb
add
add
in
dec
das
xchg
test
lret
sbb
pop
outsb
jle
bound
shll
pop
ja
ljmp
mov
cmp
popf
bound
cwtl
fs
mov
mov
adc
movsl
sub
movsl
dec
shufps
addr16
mov
insb
add
ja
test
adc
push
pop
mull
sub
mov
mov
pusha
xchg
daa
cmp
push
adc
jg
or
mov
add
fnsave
mov
test
pop
xlat
frstor
mov
add
sub
and
jg
push
adc
cmp
add
add
mov
or
jns
dec
mov
popa
or
sbb
push
lahf
sbb
pop
mov
movsb
add
xchg
adc
push
jg
and
inc
ret
adc
jle
in
or
add
xor
imul
jae
mov
rol
iret
hlt
xor
repnz
dec
jmp
mov
pop
add
test
xor
stc
xor
and
fxch
enter
pop
or
push
jns
adc
cld
push
and
dec
pop
xor
adc
and
xor
loop
sarl
cmp
sbb
xchg
imul
sub
inc
xchg
jo
dec
jae
enter
in
fsubrl
aam
add
adc
mov
pop
test
jae
mov
sahf
mov
jp
and
iret
xor
test
sbb
pop
cmp
mov
cmp
pop
pop
rcrl
adc
pop
daa
dec
inc
sub
movb
cmp
adc
gs
ss
sub
jbe
icebp
pop
popa
fs
sub
into
xchg
sbb
movsl
jo
or
or
dec
ret
lahf
insl
push
jmp
inc
das
xchg
add
xchg
insl
mov
add
movsb
aad
or
add
aad
inc
je
ret
xor
cmp
xlat
sbb
sbb
std
sbb
sbbb
or
pushf
adc
jmp
sbb
shlb
add
stos
xor
inc
jae
std
fs
clc
int3
and
hlt
gs
test
mov
lcall
xorb
xor
add
adc
pushf
popa
cmpsl
mov
fsubl
jo
das
cltd
lcall
jmp
xchg
rorl
fsts
rcrb
ret
sarl
push
and
dec
mov
push
outsl
jecxz
gs
cmp
pop
jge
lret
cld
pop
xor
dec
dec
jecxz
sbb
or
sub
mov
test
sub
je
popa
push
iret
or
loopne
mov
mov
dec
mov
push
dec
dec
inc
daa
and
push
loopne
dec
cli
popf
mov
jo
sbb
in
push
sub
ljmp
mov
and
add
jnp
in
pop
xchg
inc
cld
pop
push
mov
mov
jge
xchg
cmpsb
pushf
aas
dec
aas
and
xchg
call
outsb
sarl
in
and
leave
pusha
cwtl
push
xor
pop
push
mov
ficoml
clc
push
xchg
pop
ret
sbb
jl
jle
repz
or
cmp
loop
pop
xlat
mov
and
fmull
adc
jmp
scas
adc
mov
fimuls
sub
mov
aad
insb
shlb
mov
or
push
out
cmpsl
pop
outsl
xchg
in
push
xchg
jp
add
pop
aas
test
loopne
cmp
clc
stc
jno
mov
rcll
roll
pop
lret
adc
dec
ja
cmc
in
popa
mov
mov
inc
add
push
lods
inc
loope
xchg
sub
add
cli
inc
xchg
popf
dec
pop
pop
mov
shl
les
adc
xchg
jle
cmpsb
cs
imul
add
das
inc
push
arpl
stos
mov
or
mov
add
add
loopne
cmp
mov
aaa
mov
pusha
adc
xchg
icebp
add
lods
add
add
scas
jnp
sbb
xor
scas
or
hlt
xorb
mov
or
lahf
sbb
adc
cmp
sbb
scas
repz
addr16
jne
xor
adc
out
dec
xlat
out
hlt
outsl
fnsave
jno
sbb
xor
mov
cltd
adc
pusha
mov
jnp
iret
push
cltd
mov
xlat
hlt
stos
mov
sub
popa
or
les
jne
add
shrb
scas
dec
leave
or
or
repz
pop
and
sub
inc
repz
xor
xchg
je
dec
xchg
or
push
lahf
fs
inc
pusha
pushf
aas
cltd
jle
adc
mov
xlat
and
inc
xchg
inc
add
dec
mov
fwait
sub
setp
xchg
and
push
les
stos
insl
pop
jo
imul
dec
cmp
jle
pop
mov
call
roll
xor
push
push
jbe
shlb
sbb
mov
ret
fiadds
sar
or
adc
push
mov
test
fisttpl
adc
dec
shll
clc
scas
jns
and
jb
adc
jmp
mov
sub
ljmp
je
addr16
xor
dec
push
and
mov
push
sarb
pop
xor
jl
xor
in
mov
lret
inc
cli
scas
xchg
mov
daa
jne
mov
negl
sub
repnz
pushf
hlt
sub
push
xor
add
cmp
icebp
jne
sub
cli
jns
sbb
stos
shrb
addr16
or
pop
subl
mov
jp
inc
mov
jns
jle
pushf
dec
mov
and
push
mov
jno
fcmovnbe
rolb
jo
xchg
mov
movsl
dec
jp
xchg
inc
sbb
xor
aad
mov
jecxz
mov
dec
lret
push
push
xchg
pop
xchg
push
fcoms
pop
rol
rcrb
ljmp
fdivs
sbb
lcall
out
jecxz
xor
mov
mov
sbb
nop
lds
add
push
add
lea
pop
and
fucomip
mov
lock
inc
jp
fsub
adc
adc
jecxz
pop
test
xor
xchg
pop
mov
mov
mov
test
je
lods
int
daa
stos
mov
into
or
xor
ljmp
int3
or
push
push
mov
andb
lahf
pop
stc
pop
jmp
jp,pn
cld
add
pop
add
xchg
add
xchg
loopne
sub
pop
dec
xchg
adc
and
data16
call
xlat
xlat
mov
pop
lds
add
xchg
test
test
leave
inc
xchg
xchg
or
jbe
mov
lcall
fcmovu
jbe
or
pop
rcrb
pusha
mov
inc
cmp
pop
lods
or
popf
loope
orl
and
xchg
dec
decl
push
leave
lods
je
cs
leave
pop
int
inc
dec
xor
cmpsb
adc
mov
mov
imul
pop
mov
mov
ret
dec
cmp
push
scas
and
mov
mov
negb
cmp
aas
mov
add
bound
sahf
cmp
imul
int3
push
sub
mov
add
add
add
add
mov
xor
sti
and
add
aam
xchg
mov
sbb
pop
jmp
jno
fstl
dec
mov
ja
loop
prefetchnta
jae
test
lret
pop
xchg
jmp
mov
in
jecxz
lea
sub
stos
sti
xchg
inc
xor
in
in
mov
mov
imul
mov
xorl
cmp
push
clc
scas
call
or
pop
inc
push
adc
or
addl
insl
enter
push
nop
xchg
sub
rcll
out
dec
mov
xchg
and
in
enter
adc
jae
jae
lcall
sahf
and
call
inc
lods
inc
adcb
jno
stc
and
aaa
dec
in
xchg
rorw
dec
cmp
stc
push
xchg
enter
mov
rcr
pop
sahf
stos
testb
popf
add
aaa
mov
and
or
popa
enter
xchg
nop
daa
or
mov
lods
mov
movsb
bound
data16
rep
lahf
movsb
fcoml
xorl
iret
fnstcw
mov
dec
sub
adcb
pushf
jnp
das
in
or
ret
cmpsb
mov
xor
add
jle
xchg
push
call
js
push
clc
adc
scas
es
test
pop
lods
out
loopne
aaa
push
pop
or
push
or
cmp
pop
jl
jg
in
jbe
inc
jge
lea
lds
mov
pop
orb
cmpsl
scas
mov
inc
mov
push
test
jg
cmp
and
sarb
enter
jl
ffree
shrb
push
and
mov
iret
imul
mov
add
popa
cmc
cltd
sbb
xor
pop
loope
jg
mov
addl
popf
jl
dec
mov
jo
mov
in
mov
call
xor
mov
sbb
or
rorl
outsl
pop
jmp
pushf
pop
lcall
into
repnz
clc
insb
mov
test
xchg
sbb
sbb
xor
sarl
mov
loope
je
stos
xor
into
in
repnz
push
daa
inc
xchg
jl
sub
inc
push
lds
xor
iret
adc
icebp
cmpsb
xchg
mov
mov
rorl
xchg
xchg
mov
mov
push
fcmovb
xor
and
int
insl
lds
and
scas
shll
cmpsb
push
pop
fs
pop
fs
push
shr
adc
out
jg
stos
adc
dec
dec
cmp
add
push
jle
or
cwtl
lret
jge
mov
mov
cmp
and
mov
dec
xchg
popa
mov
mov
int
popf
jg
push
xor
ret
jp
subl
ss
xlat
loopne
lea
loope
nop
addr16
sbb
cmp
cmp
imul
imull
sbbb
jmp
repz
mov
cwtl
mov
or
dec
sti
or
or
jl
ret
mov
mov
mov
xor
jecxz
pushf
jle
push
mov
lods
add
sbb
clc
lods
push
jb
mov
adc
repnz
cwtl
jno
outsl
jmp
add
mov
in
fnstsw
adc
mov
push
add
add
add
add
and
cltd
out
lahf
idivb
js
jg
imul
sbb
add
hlt
dec
xor
ficoml
xor
dec
jecxz
leave
lret
into
and
