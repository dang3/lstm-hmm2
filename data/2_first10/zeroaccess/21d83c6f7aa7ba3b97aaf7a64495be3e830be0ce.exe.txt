push
mov
sub
xor
mov
mov
cmpl
movl
mov
mov
mov
jmp
movl
jne
push
push
push
push
push
push
pushl
push
call
xor
subl
sub
neg
movzwl
sub
mov
mov
sub
inc
push
mov
mov
sbb
addl
mov
orl
movzwl
adc
mov
orl
and
mov
cmpl
mov
mov
not
jmp
movl
mov
jl
push
push
pushl
pushl
push
push
call
xor
dec
add
sbb
mov
add
add
mov
sub
mov
cmpl
mov
mov
jmp
movl
mov
jb
pushl
push
call
andl
mov
mov
or
sbb
orl
mov
sub
mov
sbb
add
mov
orl
orl
dec
lea
mov
mov
xor
mov
mov
add
mov
sbb
mov
and
mov
and
mov
and
shrd
shr
mov
xor
mov
adc
mov
jmp
stos
xchg
sarl
cmp
and
xor
adc
adc
movlps
pusha
push
push
ljmp
lds
lods
or
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
mov
divl
adc
cmp
das
dec
cs
shrb
mov
cmp
dec
jg
iret
mov
shr
sbb
mov
fwait
repz
stos
out
mov
xor
mov
jg
dec
adc
xor
int
sbb
add
cmp
lea
sub
enter
dec
and
mov
pusha
pushf
mov
in
lret
iret
push
mov
xor
push
add
jnp
sub
jmp
data16
and
inc
addr16
lock
cmp
icebp
or
xlat
hlt
jecxz
lods
in
jle
mov
mov
mulb
movsl
push
sub
mov
jb
out
cmp
inc
push
xchg
add
sbb
test
ds
jo
scas
sbb
xchg
xchg
aad
sbb
dec
es
scas
mov
rclb
jmp
pop
imul
lcall
cld
popa
mov
jecxz
lcall
pop
aaa
jbe
xchg
inc
insl
pusha
sti
xor
xchg
call
xlat
push
in
add
xor
std
adc
mov
mov
and
pop
sub
add
mov
shr
fildll
xor
subl
xor
jmp
mov
push
xchg
mov
movlps
movlps
adc
xlat
pop
in
jl
mov
arpl
cs
or
push
jbe
les
cmp
hlt
sub
jo
sbb
dec
mov
scas
test
jns
xchg
mov
repz
dec
sbb
sub
shlb
xchg
nop
pushl
outsl
loope
pop
fldcw
es
push
cmp
loop
push
push
pusha
pop
dec
lods
mov
lods
mov
adc
in
ret
pop
mov
cld
add
lock
mov
pop
push
push
out
les
lcall
jg
mov
cmc
mov
ja
push
stc
dec
pop
imul
mov
push
mov
out
sbb
inc
mov
movsl
enter
jb
dec
call
xchg
fwait
pop
fnsave
xor
data16
xlat
clc
mov
repz
out
scas
and
aad
xor
sbb
push
or
xor
jno
fbld
jbe
loope
add
loopne
pop
jmp
mov
sub
inc
fisubrs
lcall
bound
inc
adc
test
jp
rcr
dec
arpl
in
mov
or
insl
mov
fists
cmpsl
loopne
and
popf
inc
inc
xorl
push
fisubrl
or
add
inc
dec
jo
inc
inc
movsb
pop
jecxz
sbb
jge
popf
pop
addb
pop
lods
mov
pop
and
fldl
arpl
add
push
int3
popf
insl
fidivl
add
lea
push
test
xor
ljmp
xchg
or
jmp
jg
frstor
sub
ds
lods
mov
loope
inc
inc
or
adc
adc
fsubs
mov
xchg
push
loop
mov
out
rorb
nop
push
sub
add
inc
xchg
outsl
inc
add
adcl
movl
movl
and
movl
movzbl
xor
movl
subl
movl
cmpl
mov
movl
mov
movl
jmp
mov
je
push
push
push
call
andl
andl
orl
andl
sub
adcl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
pushl
call
subl
orl
or
xorl
andl
sub
adcl
xor
dec
movl
and
movl
movl
mov
add
movl
movl
movl
movl
and
movl
cmpl
movl
movl
movl
movl
jmp
mov
mov
jb
pushl
push
call
addl
adcl
addl
andl
orl
neg
movl
xor
movl
adcl
movl
sbb
movl
movl
movl
sbbl
movl
adc
mov
orl
shl
mov
adcl
push
push
push
push
subl
call
mov
xor
mov
negl
xor
cmpl
mov
mov
jmp
movl
mov
ja
push
push
pushl
pushl
call
adc
adcl
adc
or
mov
subl
jmp
jno
sub
cmp
push
pop
js
sbb
jle
or
adc
movlps
ficoml
out
adc
es
les
and
fdiv
jno
push
pop
xchg
jp
loopne
push
loop
mov
cmp
movsl
rcl
adc
cli
scas
stc
fidivrl
jge
cmp
mov
jns
pop
sbb
jne
adc
and
shrl
fcoms
fldt
iret
or
aam
repz
sbb
push
sub
ja
pop
cwtl
lahf
mov
jmp
ret
mov
mov
addr16
xchg
push
push
mov
cmp
cmc
push
jne
push
dec
dec
scas
das
aas
mov
aaa
add
test
or
mov
xchg
xchg
pop
in
xor
into
lds
dec
cmp
loopne
pop
push
bound
loopne
mov
cmp
jnp
push
xchg
pop
cmpsl
pop
cmp
rcll
add
aaa
pushf
jbe
mov
and
dec
rolb
sub
test
fstp
cmp
loop
lock
xlat
and
mov
in
push
pusha
inc
xchg
int
or
sbbb
bnd
jns
mov
cmpsb
xor
jne
cld
into
sbb
out
nop
push
xchg
movsb
lea
inc
imul
loop
cli
cli
mov
push
ret
iret
test
fstpl
stos
popa
dec
jno
mov
mov
imul
or
jge
pop
mov
cmp
fistpl
inc
inc
add
add
inc
divb
mov
xchg
push
mov
ret
adc
jl
ja
clc
scas
rorl
mov
js
arpl
sub
mov
stc
and
pushf
jp
lock
int
cli
ss
clc
lods
adc
ja
shl
jno
and
xchg
mov
stos
mov
dec
leave
xchg
in
mov
sub
cmpl
notl
mov
jmp
movl
movl
jbe
push
pushl
pushl
push
pushl
call
adc
add
movzbl
xor
mov
sbb
adc
sbb
xorl
mov
lea
sbb
mov
mov
adcl
or
andl
and
cmpl
movl
mov
mov
jmp
movl
jg
push
push
call
adc
xor
xorl
and
orl
cmpl
movl
mov
movl
jmp
movl
jb
pushl
push
pushl
push
pushl
pushl
call
dec
movzwl
adc
addl
add
and
movzwl
or
mov
inc
not
mov
xorl
or
notl
xor
movl
cmp
jne
mov
adc
mov
jmp
push
sbb
xor
gs
fs
pop
adc
movlps
and
fisttps
mov
ljmp
pop
dec
dec
jb
iret
mov
or
jno
je
inc
inc
mov
push
out
cs
ror
hlt
out
cmp
roll
sarb
addl
je
sub
mov
push
or
dec
or
outsl
jne
and
data16
pop
mov
and
mov
stc
inc
imul
stos
stc
lods
popa
lds
xor
nop
lods
stos
pop
mov
pop
dec
lds
arpl
js
test
cmp
adc
and
leavew
dec
out
xor
int3
mov
inc
aam
jecxz
cmp
dec
jne
fidivrl
dec
pop
insb
in
popf
gs
jnp
fwait
pop
pavgw
popa
dec
mov
repz
and
iret
push
cmp
cmp
mov
std
cmp
cmp
push
icebp
jecxz
xchg
test
xor
test
pop
mov
xchg
ret
sub
mov
lret
xor
fmuls
dec
adc
ficompl
mov
push
mov
push
cmpsl
mov
lcall
push
push
sbb
add
test
sbb
scas
imul
xor
dec
int
cmc
mov
xchg
pop
mov
jp
xchg
push
iret
jb,pn
adc
mov
push
sub
out
sahf
adc
jne
iret
sub
xchg
ljmp
xor
in
aad
xor
xchg
pmullw
arpl
xchg
loope
mov
mov
ja
enter
mov
sub
mov
cmpsb
jp
mov
push
mov
lock
stos
dec
mov
sub
jl
into
jmp
ficoms
cmp
ljmp
repnz
pop
stc
out
dec
cmp
pop
arpl
sahf
inc
inc
sbb
inc
lret
inc
add
imul
shrd
cmpl
mov
movl
movl
movzbl
jmp
movl
mov
jl
push
push
push
push
push
call
dec
xor
add
xor
xor
adc
and
orl
movl
shr
sub
mov
mov
shl
addl
xor
andl
xor
subl
or
mov
mov
cmp
jne
mov
adc
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jle
pushl
pushl
pushl
push
call
add
xor
add
or
xor
adcl
neg
movzbl
add
mov
sbbl
xor
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
push
push
pushl
call
xor
sbbl
and
movzwl
xor
mov
adcl
sbb
mov
mov
shrd
subl
mov
cmpl
mov
mov
mov
mov
jmp
mov
mov
jge
push
push
push
push
push
push
push
call
adc
notl
sbbl
mov
or
decl
mov
xor
shr
xorl
jmp
and
aaa
and
ljmp
stos
add
adc
movlps
or
pop
sbb
sbb
add
jns
test
add
pop
sub
stos
gs
ds
push
push
jle
hlt
cmp
pop
cmp
sub
int3
in
flds
sub
inc
inc
ja
cmp
ds
shl
sub
insl
add
shlb
mov
jb
outsb
roll
pop
insb
rolb
mov
fldcw
arpl
gs
mov
lahf
xchg
mov
push
xchg
jmp
das
inc
cmp
shl
mov
jno
jns
aaa
clc
and
repnz
mov
cmpsl
rcrl
dec
out
cmpsb
sbb
call
cmp
and
decb
dec
fs
divl
and
les
aas
gs
hlt
adcb
pop
les
pusha
js
out
cmpsb
jno
push
dec
jl
pop
inc
mov
xchg
leave
or
lock
push
test
sub
cmc
xor
jl
dec
jbe
les
ljmp
out
mov
leave
push
pop
mov
pop
add
nop
cmp
push
fsubrs
scas
mov
test
inc
xchg
dec
call
xchg
and
fmul
lcall
pop
gs
push
test
mov
cmp
adc
fnstsw
rorb
pop
repnz
fldenv
loope
sar
add
es
sbb
inc
and
sub
outsb
iret
shll
dec
roll
movsb
lcall
shr
push
ds
add
inc
xchg
ret
cmp
jns
pushf
or
stc
fnstsw
adc
dec
mov
xchg
scas
cli
enter
int
clc
fcoml
pop
sbb
les
jo
jae
xor
movsl
lods
cmpl
ret
sbb
test
add
sarb
sbb
adc
xor
orl
or
adcl
shl
sub
mov
mov
sbbl
mov
xor
add
mov
mov
cmpl
notl
movl
jmp
mov
jg
push
call
negl
xorl
sbb
sbb
add
mov
or
mov
jmp
test
and
and
test
ljmp
insb
call
adc
movlps
xchg
mov
das
mov
dec
dec
fsub
daa
std
inc
pusha
or
lret
mov
mov
les
outsb
adc
in
jmp
repz
and
push
fs
sbb
fidivl
xchg
iret
push
pop
mov
push
in
rcrl
push
adc
icebp
ss
into
loopne
out
mov
add
hlt
subl
movsb
mov
add
adc
or
inc
clc
pop
call
dec
and
and
int
fiadds
cmpsl
mov
add
sbb
add
jecxz
insl
xchg
and
pop
loope
lahf
inc
xchg
jo
iret
xchg
jl
cmp
or
lock
and
adc
sbb
shrb
inc
cmc
loop
notb
mov
jo
pop
pop
push
mov
push
lret
sub
inc
dec
cmp
enter
inc
lret
scas
les
jb
push
jns
mov
pop
aas
mov
repnz
xchg
pop
inc
lcall
enter
mov
jmp
jl
int3
fbld
sub
into
cwtl
filds
out
gs
mov
iret
ds
rcll
or
jle
clc
std
dec
ret
push
cmpl
leave
adc
sbb
mov
and
jle
lahf
sbb
es
add
lcall
push
test
jg
repz
jl
cmp
jmp
pop
rcrb
cli
add
xor
push
sbb
jnp
pusha
lock
mov
jbe
add
adc
out
das
dec
loop
les
dec
mov
dec
add
lds
xchg
add
call
adc
aam
js
mov
stc
pop
dec
and
fs
mov
pushl
inc
add
jle
jmp
add
arpl
out
mov
mov
sbb
mov
shrd
shr
adc
mov
xorl
mov
dec
xor
shl
mov
adc
mov
xor
cmpl
movl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
add
xorl
or
movzbl
or
mov
mov
or
mov
addl
or
movzbl
and
mov
mov
xor
or
add
mov
shrd
orl
shr
adc
mov
mov
cmpl
movl
mov
jmp
movl
jg
push
pushl
push
push
call
dec
sub
sbb
decl
sbb
cmpl
mov
movl
jmp
movl
jae
push
call
sbbl
and
adc
mov
add
add
or
sbbl
adcl
mov
movl
xor
xor
or
shl
lea
mov
mov
adcl
shrd
shr
cmpl
movl
mov
jmp
mov
movl
ja
push
call
sbb
mov
sbb
inc
inc
sub
subl
cmpl
mov
mov
jmp
mov
jl
pushl
call
xorl
add
xor
xor
xor
sub
or
mov
mov
mov
or
xor
mov
or
mov
xor
or
addl
shl
imul
cmpl
movzbl
mov
mov
movl
jmp
mov
ja
pushl
push
pushl
push
pushl
pushl
push
call
movzwl
sbb
addl
or
sbb
and
mov
cmpl
mov
mov
mov
jmp
movl
je
call
sub
orl
and
sbb
sbbl
decl
subl
xor
mov
shrd
orl
mov
jmp
xchg
arpl
pop
inc
push
pop
pop
adc
in
jle
xorb
sti
sti
adc
movlps
clc
lods
mov
sti
xor
push
jbe
mov
sbb
sub
fs
sbb
adc
or
and
aaa
cld
jnp
cmp
mov
arpl
repnz
imul
frstor
pop
jmp
pop
imul
dec
in
sbb
pushf
mov
cmp
mov
jb
cli
rorl
xorl
inc
xchg
inc
bound
cwtl
movsb
out
aas
push
loop
mov
aaa
lock
scas
adc
dec
lods
xchg
iret
cmp
inc
push
les
adc
int
mov
daa
int3
push
sub
in
xchg
cmp
imul
je
ret
sbb
inc
stc
cwtl
xchg
or
xor
cmp
xor
and
int
pop
or
push
jle
outsb
sub
std
hlt
hlt
imul
jmp
jmp
mov
lret
xchg
and
mov
inc
js
int
sbb
and
into
lret
mov
xchg
cmpsl
mov
pushf
add
sub
add
inc
and
sub
or
movb
call
cmovbe
shr
ja
mov
xchg
mov
scas
popf
or
jp
xchg
sub
xchg
cmp
popa
xchg
adc
fs
iret
incl
scas
out
repnz
lds
pop
xchg
ljmp
loopne
bound
cld
push
or
lock
sub
out
push
mov
mov
incl
loopne
mov
inc
dec
cmpsb
xchg
bound
jae
mov
dec
add
xchg
xor
cmp
arpl
addb
jbe
cmp
sbb
ds
insb
negb
sbb
lret
popf
in
testb
stc
cwtl
pop
pop
js
jl
and
or
add
lret
inc
add
jge
sbbl
shr
mov
mov
orl
xor
subl
or
addl
shl
negl
sub
movl
mov
jmp
add
add
and
loop
div
adc
movlps
add
in
icebp
clc
cmp
mov
lret
data16
lret
aaa
xor
rorb
xchg
add
loopne
jecxz
jmp
ja
jmp
inc
mov
or
mov
aad
sbb
cmp
adc
cmpsl
insl
or
call
mov
and
movsb
jmp
shlb
je
dec
imul
arpl
sub
imul
insb
pop
push
add
rclb
pop
sub
cwtl
pusha
pop
fsubs
dec
jo
push
shrb
fistpl
insb
dec
sbb
ret
mov
fstl
pop
push
mov
push
jmp
xor
lea
adc
call
fisubl
and
or
xchg
or
sbb
scas
push
cmp
mov
outsb
lcall
std
data16
mov
cld
pop
xchg
dec
mov
cmp
mov
xchg
jg
in
and
cwtl
add
and
jg
stc
stos
mov
leave
xchg
fwait
add
dec
test
pop
pop
out
int
test
mov
pop
stc
inc
fadds
test
gs
mov
cmp
addr16
sub
xor
movsl
sub
test
pop
out
lcall
jmp
nop
mov
xchg
imul
fistpll
vpsubusw
dec
pusha
dec
cmpsb
and
mov
lret
repnz
andb
in
arpl
xchg
adc
dec
arpl
sub
cwtl
js
jnp
dec
mov
dec
jb
out
adc
dec
push
push
icebp
inc
sub
mov
aam
aam
ret
dec
xor
push
test
or
mov
loope
loope
adc
xor
lret
cmpl
inc
ficompl
lcall
test
inc
pop
pop
sbb
mov
cmp
mov
jg
mov
orl
mov
adcl
shrd
mov
or
mov
sbbl
xor
orl
shl
xor
or
shr
mov
cmpl
not
not
mov
jmp
movl
jb
push
pushl
call
not
inc
sub
mov
and
mov
mov
sub
sub
addl
and
movl
mov
sub
mov
xor
mov
shrd
shr
mov
mov
adc
mov
mov
mov
movl
xor
xor
andl
or
shl
imul
sub
jmp
or
mov
mov
xor
mov
addl
shrd
mov
mov
sbbl
xor
sbbl
shl
xor
or
sbbl
shr
mov
adcl
mov
mov
movzbl
sbb
mov
addl
shrd
shr
mov
jmp
cwtl
mov
lcall
push
xchg
js
repz
movlps
cmp
stc
pop
test
lods
and
dec
mov
push
stc
push
or
in
add
mull
js
jae
jp
push
mov
lods
int
push
loop
pop
divb
lock
clc
add
inc
aas
cwtl
pop
xor
pop
mov
mov
xchg
cmpsl
gs
ss
sysexit
daa
sarb
mov
sbb
in
jle
int3
jp
fidivrs
mov
fisubl
mov
mov
loopne
pop
divb
inc
dec
xor
jne
cltd
jbe
mov
shll
aad
push
pop
jns
pop
add
sub
inc
fisubrs
jp
jne
insl
and
and
iret
dec
shrl
jne
mov
push
pop
leave
mov
pushf
sbb
fs
add
scas
jmp
addr16
fisttpl
or
sbb
xor
rcrb
pop
add
xchg
sbb
scas
lods
call
mov
jno
pop
dec
push
ljmp
imul
jae
icebp
sub
jmp
rorb
int3
add
cmp
pop
mov
pop
inc
fistpl
push
fldenv
dec
fwait
fwait
and
xchg
dec
push
cs
gs
mov
mov
hlt
pop
xor
ljmp
pusha
aad
xchg
or
gs
ficomps
call
adc
cmp
aaa
adc
mov
jmp
sbb
fsubs
sbb
xor
loop
mov
fs
hlt
addr16
sbb
dec
sahf
add
das
hlt
std
mov
jb
sub
jge
push
push
sbb
mov
jno
cli
cli
mov
adc
icebp
lret
dec
mov
cmp
pop
loope
push
int3
jle
xchg
call
dec
mov
addl
mov
andl
xor
andl
xor
adcl
or
shl
andl
add
cmpl
mov
mov
not
jmp
not
jbe
push
push
call
adc
mov
xor
mov
sbb
sub
xor
add
mov
sub
mov
cmpl
movl
mov
movl
jmp
movl
mov
jge
call
movzbl
sub
mov
mov
add
and
sbb
sbb
dec
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
sbb
sbb
jmp
lahf
icebp
dec
mov
movlps
sub
call
lods
adc
into
dec
xchg
jecxz
pop
xor
cwtl
sub
push
mov
subb
add
mov
cmpsl
or
xchg
testb
sub
mov
jge
cld
mov
jecxz
dec
mov
inc
arpl
dec
push
call
fcomps
insb
nop
adcb
adc
enter
clc
icebp
sub
fdiv
popa
iret
or
stos
sub
jle
ret
pop
dec
mov
xchg
inc
enter
lret
mov
push
popf
xor
mov
movsl
mov
xor
jmp
mov
stos
pop
test
adc
mov
insb
fs
sub
push
dec
xchg
mov
enter
pop
popa
pushf
fdivl
or
mov
ficoms
inc
and
int
xchg
dec
xchg
es
mov
addr16
cwtl
int3
ss
sete
inc
jle
sub
stos
imull
bound
sub
rol
nop
sub
sub
fadd
jecxz
and
jl
in
cmp
rcl
add
mov
cmp
into
and
pop
inc
mov
cmp
insb
mov
cmp
sub
daa
loopne
adc
cmp
push
jo
pop
loop
lret
add
cs
lret
lahf
lods
xchg
sub
inc
mov
aas
mov
sti
push
inc
nop
and
fs
std
adc
mov
push
in
stos
and
sub
mov
negl
jp
dec
add
loop,pn
es
movsb
sbb
je
xchg
pop
clc
mov
xor
pop
add
cs
cld
xchg
inc
fcmovne
int
xor
jnp
jl
sbb
dec
mov
adc
inc
ljmp
xor
pop
int3
fwait
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
jmp
mov
imul
repz
movlps
aaa
pop
adc
insl
fwait
push
xlat
sub
sbb
mov
mul
adc
xchg
das
gs
call
cmp
jno
int3
lds
or
jecxz
ds
data16
fsts
pop
add
add
push
lods
lahf
mov
mov
xor
dec
subb
les
mov
jmp
fdivrl
sbb
sbb
inc
int
outsb
xor
ret
dec
cmp
xor
lock
into
aam
mov
pop
andb
sub
sbb
fisubs
adc
add
and
xchg
push
mov
jnp
jno
adc
mov
adc
inc
lret
inc
xorb
jecxz
in
ja
insl
or
xor
decb
sti
scas
int3
ret
add
fstps
mov
pushf
jbe
data16
pop
mov
or
and
stc
mov
pop
fmuls
jnp
les
icebp
dec
inc
lahf
in
dec
inc
mov
lock
add
aas
std
in
inc
cltd
and
in
jmp
mov
xchg
pop
icebp
in
loop
iret
xor
and
lock
mov
mov
adc
mov
fwait
cwtl
inc
mov
mov
out
int
sub
mov
jne
and
test
jne
pusha
inc
cmpsl
fimuls
pushf
repz
push
sub
or
or
repnz
cli
xor
adc
out
loop
xchg
inc
mov
pop
xchg
negl
movsb
mov
mov
mov
jne
int
sbb
and
xor
mov
aaa
fpatan
aas
push
test
or
rorb
iret
sti
hlt
arpl
pop
jge
shrl
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
mov
outsb
mov
fidivrl
mov
movlps
out
mov
pop
sbb
mov
dec
or
mov
pop
insl
psrlq
ret
push
lret
inc
flds
xchg
inc
inc
popfw
lahf
xor
push
mov
or
movsl
repz
jo
dec
and
adcl
jg
jmp
fimuls
mov
push
in
add
sbb
pop
mov
xchg
cmpsl
rorl
stos
leave
daa
fcmovbe
push
stos
add
xchg
test
test
xchg
lahf
or
cmc
roll
lds
and
jnp
orl
addr16
push
pop
dec
out
dec
clc
lcall
and
mov
dec
push
push
sbb
icebp
js
sub
adc
adc
std
insb
fnsave
pop
inc
mov
fisubs
dec
mov
cld
push
jle
or
mov
jge
xor
negl
fwait
jnp
incl
fst
cmp
mov
mov
ss
mov
jl
push
mov
add
push
and
cmp
pop
and
push
es
iret
inc
push
xor
xor
sbb
mov
jp,pn
sub
cmc
repnz
xlat
cltd
add
repz
sbb
mov
adc
mov
push
das
sub
cmp
out
mov
inc
inc
dec
cmp
arpl
subl
jae
pushl
add
push
loop
jmp
add
lds
mov
les
mov
jno
jl
leave
push
lock
sbb
cmp
nop
sbb
mov
push
inc
jp
enter
xlat
sbb
hlt
pop
cwtl
pop
mov
sbb
stc
mov
shrb
lea
aas
push
pushf
adc
aam
dec
je
not
das
pop
dec
xchg
shll
out
push
adc
jne
push
divb
dec
pop
jb
int3
mov
dec
cld
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
jmp
adcl
stos
mov
in
adc
movlps
rorb
aam
cmp
cmp
ja
or
push
adc
out
mov
ss
sub
lcall
testl
jns
sbb
push
jbe
mov
into
in
aad
cmp
mov
test
mov
inc
or
mov
insl
incb
jne
and
sbb
in
stos
out
popa
jg
faddp
aam
push
in
add
test
mov
xchg
push
pop
xchg
pop
cmp
sub
adc
cmpsl
jo
arpl
mov
dec
lods
mov
mov
leave
pusha
add
arpl
in
jecxz
xchg
xchg
xor
sub
in
add
lret
cmp
jae
shlb
sub
add
stos
add
jns
lock
sahf
mov
stos
mov
iret
movsb
outsl
fs
dec
mov
pop
mov
jb
mov
mov
dec
dec
mov
adc
repnz
xor
or
push
orb
mov
insl
mov
nop
mov
xor
jmp
lock
popa
ss
jae
jge
mov
dec
jae
cs
mov
xchg
fnstcw
scas
ds
push
cwtl
or
mov
mov
in
push
scas
pushf
pop
mov
hlt
fcomp
loopne
out
roll
rcll
fbstp
ret
ud1
pop
insl
ret
stos
mov
sti
sub
push
decl
sub
adc
repz
mov
es
xor
xchg
mov
push
pop
mov
push
mov
andb
xchg
aad
xchg
aas
push
cli
stos
push
movsb
icebp
into
adcb
or
addr16
sub
push
mov
call
repz
aad
shlb
jl
incb
mov
pushf
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
jmp
stc
popa
mov
inc
xor
jle
cltd
sub
loopne
adc
movlps
mov
jle
pusha
sahf
movsb
fimuls
cld
adc
lea
mov
sbb
xchg
andl
sti
in
stos
js
inc
push
xor
push
jno
pop
es
mov
lcall
pop
push
jge
das
mov
xchg
loopne
ret
cld
inc
fscale
fadd
repnz
or
jg
and
or
in
imul
movsl
and
test
ror
dec
mov
inc
lcall
aad
jns
dec
ja
cmc
in
insb
push
jl
pop
add
stos
xchg
js
xchg
repz
not
fsubrs
push
jge
jo
mov
test
pop
jb
fisttps
fwait
and
cmpl
dec
mov
mov
repnz
jp
ljmp
sbb
push
pushf
test
sub
popa
add
js
adc
testb
stos
adc
outsl
jl
cmp
loope
das
sub
cmpsl
jb
sbb
daa
add
xchg
call
inc
mov
lcall
int
sub
int3
xor
outsb
pop
fs
insl
mov
push
rclb
mov
xor
adc
scas
out
inc
icebp
lret
inc
adc
mov
and
add
loopne
mov
xchg
jb
inc
pop
popf
aas
sub
sbb
imul
call
test
push
filds
inc
adc
call
push
xor
mov
cs
or
pop
push
sub
int3
out
lock
xchg
and
jns
imul
push
int
das
mov
sarl
adc
outsl
je
jns
lock
inc
test
leave
fldcw
ds
fistl
sub
jl
ss
pop
aad
push
shlb
sbbb
add
inc
mov
inc
xchg
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
jmp
mov
pop
lahf
push
or
lods
or
data16
fcoml
adc
movlps
cli
pop
hlt
fbld
ret
push
and
push
pop
mov
fcomps
mov
and
rcr
fcomip
aad
mov
sbb
out
lea
loopne
cmp
out
out
int
das
add
xchg
loop
or
inc
dec
sbb
das
rorb
mov
aas
mov
ret
dec
insl
clc
dec
lock
xor
outsl
sub
nop
and
push
xchg
xor
mov
mov
std
in
data16
gs
mull
rclb
jle
iret
inc
js
popa
add
inc
lods
movsl
mov
dec
std
shl
js
rcrl
shll
xorl
sti
mov
stc
jne
jmp
add
insb
scas
push
clc
repnz
popa
mov
lods
add
xchg
sub
or
lock
xlat
pop
lret
jp
jmp
add
mov
xchg
push
test
shlb
add
outsl
xchg
sarl
inc
and
mov
jo,pn
dec
out
mov
aas
cld
ja
jns
cmp
inc
push
addr16
dec
or
data16
push
jmp
mov
push
shrl
jmp
popf
in
ret
ds
aas
xchg
sbb
daa
outsl
lea
loopne
push
je
sub
jno
jmp
sbb
jo
mov
jae
xchg
jp
lods
repnz
ljmp
cmp
jg
scas
push
cwtl
jle
cwtl
sub
xlat
lret
das
fiadds
adc
mov
jns
adc
repz
jns
sub
out
std
scas
adc
fidivrl
xchg
mov
dec
push
xlat
cwtl
push
pop
and
add
aas
sub
pop
adc
push
jae
sub
inc
in
push
add
in
cmpsb
sbb
rol
stos
sbb
jmp
in
fisubrs
and
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
jmp
push
shl
dec
jne
sub
lods
cmp
jle
fcoms
adc
movlps
cltd
lds
push
pop
mov
clc
aam
ja
mov
and
in
jl
fsubs
dec
in
stos
ja
lock
xor
pusha
adc
lds
add
pop
jnp
ljmp
dec
mov
push
cltd
mov
rolb
cmp
push
repz
dec
jbe
mov
test
xchg
lcall
cmp
pop
movsb
dec
in
mov
outsl
imul
aam
xor
fdivrp
jne
movsl
hlt
dec
push
push
es
cmc
shr
mov
inc
das
lea
iret
pop
dec
cltd
int3
cli
xchg
xchg
scas
xor
sbb
cmp
push
pusha
sbb
pop
mov
inc
jle
and
call
test
pop
fcoml
adc
test
push
call
stc
cmp
or
jmp
add
xchg
pushf
fwait
les
cmp
addr16
dec
and
mov
push
lret
inc
mov
dec
into
mov
mov
ljmp
xor
jl
popf
pop
xchg
adc
sti
push
in
add
popa
xchg
mov
cwtl
stos
outsl
push
and
lret
loope
mov
dec
into
test
cmp
xor
in
sbb
ljmp
mov
add
add
cmc
jne
pop
test
ret
lds
fisttpl
push
bound
xor
push
iret
or
jns
add
lods
icebp
mov
sub
lret
fldcw
jmp
mov
jb
scas
inc
pop
cmc
pusha
lods
adc
push
lods
dec
call
mov
jmp
insb
into
push
insb
rcll
inc
sbb
pop
push
roll
daa
fdivs
dec
pop
pop
mov
lahf
pushf
mov
fs
mov
sahf
jns
movsl
or
sub
inc
mov
mov
fldenv
scas
dec
cmp
xor
push
push
adc
push
add
add
fstpt
adc
mov
movlps
lahf
fnstcw
clc
push
popf
xchg
test
ljmp
shlb
sbb
or
aad
jae
jecxz
imul
add
icebp
sub
push
mov
dec
pop
mov
inc
in
xlat
repnz
mov
movsl
inc
inc
pop
push
scas
jno
xchg
rol
jae
mov
push
rorl
lret
dec
pop
jmp
out
jmp
or
fildll
out
rorl
sub
int
mov
daa
into
cmp
xchg
in
gs
xor
bswap
arpl
sub
cwtl
nop
sbb
push
les
cld
xchg
leave
cwtl
hlt
mov
dec
ljmp
outsl
push
jnp
iret
into
sub
inc
xchg
push
xchg
mov
loope
test
push
xor
fmuls
int3
lahf
enter
lds
icebp
loope,pn
adc
mov
cmpsl
xor
sub
push
outsb
iret
xor
push
cmpsl
cmp
jecxz
pop
adc
rclb
adc
cmpsb
cwtl
ljmp
mov
pop
negb
ja
insb
mov
movsb
fnstenv
push
jne
out
gs
xchg
inc
pop
cmp
std
das
std
das
adc
pop
test
idivl
std
inc
cmc
cs
inc
xchg
cmpsl
pop
mov
push
add
ret
xchg
mov
sub
ds
and
sub
imul
lods
lret
outsb
cmp
sub
pop
dec
std
sub
jne
fcoms
push
inc
hlt
jnp
push
in
jle
je
xchg
xchg
jae
push
ficoml
popf
mov
xchg
mov
or
fdivrs
xor
or
movsl
mov
cmp
add
fisubrl
or
pop
test
cld
sbb
pushf
gs
add
xor
xor
call
push
bound
and
sub
mov
sub
jmp
xor
add
push
dec
jb
mov
into
sub
stos
or
mov
xor
and
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
jmp
lods
mov
xor
pop
sbb
js
repz
movlps
push
pop
aas
xor
les
lods
stc
jmp
dec
pop
pop
push
pop
inc
sub
cmp
ficompl
in
aad
lret
cmp
mov
inc
push
mov
pop
rol
or
hlt
rcll
sub
iret
dec
adc
pop
pop
out
jne
add
inc
and
repnz
xchg
mov
push
push
pop
mov
push
das
clc
mov
push
jbe
lods
sub
cli
movsb
push
outsl
clc
xor
shll
xor
cmp
or
mov
iret
in
and
dec
inc
int3
das
pop
insb
mov
test
jle
or
insl
xor
push
gs
dec
lea
das
les
jne
inc
cltd
fdivs
cltd
cmp
repnz
xor
jae
dec
add
aad
loope
mov
scas
shlb
xor
pop
jbe
subl
js
leave
mov
inc
test
outsl
repnz
jp
xor
mov
imul
pop
pop
into
mov
jecxz
pop
mov
vpcmpgtb
in
xor
mov
sub
shll
push
mov
mov
pop
stos
cli
sub
cmpsb
leave
adc
push
jnp
sbb
addr16
dec
inc
repnz
xor
popa
push
pop
mov
ja
imul
xchg
ret
into
push
push
and
test
xor
xor
jecxz
xor
inc
repz
xchg
hlt
xchg
out
fisttpll
dec
dec
inc
aad
or
mov
insb
aam
in
aad
xor
fistl
cmovbe
addr16
ds
out
jmp
shll
addb
fwait
testb
adc
jbe
das
xor
ret
xor
in
fs
cmp
mov
adc
inc
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
jmp
inc
mov
aaa
cwtl
arpl
push
xchg
std
jle
int3
adc
movlps
lcall
adc
push
popa
adc
sub
ret
push
inc
adc
mov
rcll
test
mulb
imul
push
pushf
imul
insl
cmp
xchg
in
xchg
cld
stos
xchg
cltd
dec
repnz
inc
sub
jmp
mov
inc
sarl
inc
cmp
mov
in
adc
mov
or
push
nop
or
popa
push
and
xchg
add
xlat
mov
push
xchg
push
bound
pop
add
pop
popa
pusha
mov
sub
sbb
sub
and
dec
xchg
mov
int
pop
shll
fnstenv
sub
add
call
push
in
popf
mov
aaa
es
test
mov
leave
negb
push
mov
sub
test
inc
mov
mov
jle
add
shrl
xor
js
lea
pop
into
pop
push
test
mov
pop
into
aam
iret
xor
into
xchg
fwait
shlb
ss
negl
stc
pop
dec
jmp
pop
stos
xor
aam
movsl
subl
adc
sarb
inc
lock
dec
xchg
jns
add
subb
ja
cmc
inc
pushf
fs
mov
jecxz
ja
inc
mov
je
ror
aad
test
ret
pop
lret
inc
addr16
mov
lret
or
ss
push
xchg
mov
addr16
dec
push
inc
out
dec
je
sub
mov
mov
sbb
out
test
lds
push
pop
push
mov
fcoml
sub
es
or
adc
pop
push
mov
dec
push
push
mov
mov
rcrb
xchg
xchg
aam
outsb
or
sub
call
mov
dec
test
dec
or
lods
enter
add
or
mov
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
add
lret
lret
add
enter
enter
movlps
pop
push
mov
sahf
cs
test
fdivrl
fldt
or
push
add
or
jns
fsubrs
jno
xchg
std
mov
xor
inc
add
pop
out
jbe
inc
movsl
movb
jb
jb
loope
adc
pushf
in
xchg
lds
ljmp
call
sub
sbb
ret
xor
lods
lcall
push
jno
push
js
mov
into
es
pop
push
shlb
mov
or
pop
fmul
xor
push
jbe
dec
jmp
xchg
xchg
dec
or
das
in
mov
addl
shl
fs
add
dec
flds
xorb
and
enter
mov
sbb
mov
outsb
jnp
fs
and
out
addr16
adc
jecxz
push
icebp
pop
ja
sbb
xchg
and
cmp
call
cltd
mull
jge
push
mov
mov
outsb
mov
and
mov
shl
add
dec
xor
mov
cmp
ret
adc
jns
sub
xor
sub
push
in
iret
inc
repz
sbb
aam
lret
out
cmp
sbb
jecxz
xchg
push
mov
mov
push
imul
sbb
in
push
mov
sub
xor
inc
sahf
cmp
shr
adc
sbb
adc
mov
fnsave
fs
test
mov
jle
jp
and
loop
lods
jb
dec
cmp
jecxz
add
jl
je
jnp
cmp
cmp
call
pop
imul
sub
sti
lods
mov
scas
push
andl
pop
cld
negl
push
or
test
mov
loope
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
jmp
inc
jl
xchg
pop
xor
js
jno
insb
les
adc
movlps
jp
lds
std
mov
in
out
inc
inc
pop
pop
fwait
je
fcmove
jp
sbb
adc
pop
lret
outsb
mov
push
xor
mov
sbb
adc
fnsave
sahf
fwait
mov
movsb
mov
mov
mov
aas
cwtl
xchg
loop
push
xor
decb
cltd
lds
rclb
mov
mov
xchg
xor
jp
dec
imul
mov
scas
loop
or
repz
lahf
mov
rcr
imul
and
fs
ljmp
test
pop
leave
jae
inc
xchg
pop
push
testl
rorl
mov
addr16
jl
fistpll
cwtl
cld
test
xchg
xor
testl
mov
pop
dec
jno
popf
out
and
inc
jmp
inc
mov
adc
lahf
and
mov
push
push
sbb
pop
xor
jns
out
stos
pop
fs
outsl
pop
inc
xchg
arpl
xchg
or
push
mov
and
pop
inc
roll
sbb
xchg
and
mov
jnp
lahf
push
mov
mov
sahf
fsubrl
gs
adc
xor
mov
sar
je
mov
push
jbe
divb
gs
adc
jecxz
sbbl
cwtl
jmp
ds
jg
cmpsb
pop
sub
cmpsb
inc
je
mov
shrb
popf
loope
test
mov
cmpl
push
xlat
mov
mov
add
mov
jmp
leave
fldl
movsb
adcl
das
jne
cmp
imul
dec
subl
adc
test
lcall
std
xchg
jbe
or
adc
std
sti
not
fucomi
out
pop
in
test
mov
int
dec
std
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
jmp
jb
jecxz
gs
sbb
push
xchg
xor
cmp
rol
adc
movlps
jb
mov
sub
add
scas
in
sub
xlat
mov
push
out
lahf
cmp
lea
push
inc
sub
fistl
or
or
mov
or
or
jb
lods
xor
sub
sub
mov
test
xchg
or
ret
mov
loopne
nop
cmc
das
test
push
pop
repnz
stc
std
xor
or
sahf
data16
xchg
fimuls
popf
jl
xchg
pop
ret
inc
fwait
fwait
dec
jno
or
cmp
adc
icebp
cmp
out
mov
imul
and
mov
inc
jecxz
adc
push
pop
jne
jno
jl
adc
insl
xor
lahf
and
pusha
mulb
mov
xchg
and
lods
and
pop
test
xor
fwait
lahf
ljmp
sub
lahf
or
add
and
lock
imul
push
pop
sbb
stos
outsl
mov
or
mov
cmpsl
jmp
add
lcall
scas
daa
mov
stos
jge
sbb
pop
mov
adc
pop
into
movsb
aad
aad
inc
pop
repnz
cmp
adc
mov
clc
repnz
inc
add
jge
push
shll
fs
call
inc
adc
xor
add
out
mov
push
push
ljmp
cmp
addr16
xchg
data16
jmp
in
sarb
ud1
jecxz
loope
add
icebp
push
lret
and
sub
xchg
push
test
int
mov
push
sbb
or
lock
xchg
es
push
jmp
push
nop
cltd
mov
xchg
inc
movsb
xchg
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
jmp
imul
xor
and
mov
mov
mov
adc
movlps
pop
pop
loopne
sbb
pushf
jge
fmull
pop
push
pop
arpl
mov
sub
push
ficomps
and
int
adc
mov
dec
xchg
or
sub
call
xor
ds
movsb
lret
mov
test
jg
pop
jo
xchg
in
add
mov
rcrb
adc
shrb
xlat
adc
ds
inc
jnp
pop
cmp
into
inc
adc
xor
jl
enter
repz
jmp
and
inc
push
jg
sbb
mov
ret
add
mov
pop
sub
ljmp
clc
cmp
dec
push
enter
incb
fcoms
popa
lret
arpl
fists
sub
jnp
out
test
mov
xor
in
cmpsb
sbb
jecxz
test
clc
roll
adc
pusha
push
dec
jo
sbbb
jno
add
mov
les
movsb
jecxz
adc
adc
pop
add
pop
mov
iret
pop
or
cmp
call
pop
dec
mov
out
insl
sub
pop
push
or
cmc
js
pop
mov
int
divb
je
xor
pop
sub
inc
subl
outsl
xchg
test
and
iret
fstl
dec
pop
cld
out
and
dec
popa
into
repnz
mov
je
imul
jge
xor
les
stos
imul
fstp
clc
outsl
dec
add
push
psrad
and
xor
jl
inc
jne
lcall
imul
cmp
ret
pop
pop
lods
fwait
lods
and
subl
pop
repnz
popf
pop
jp
test
fs
out
sub
push
mov
mov
fsubrl
pop
mov
dec
dec
adc
sti
fnstcw
xor
inc
cwtl
scas
call
and
xlat
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
jmp
mov
xlat
sbb
inc
push
mov
adc
movlps
stos
dec
xchg
mov
mov
dec
push
push
mov
push
mov
sbb
xchg
mov
es
js
rcrb
dec
std
aas
int
jmp
cmc
push
mov
push
xor
stc
push
pop
inc
insl
enterw
sti
fdivrp
call
dec
jp
clc
xchg
aas
mov
xchg
jmp
mov
data16
jbe
mov
jbe
sub
scas
jno
xchg
mov
outsl
jmp
or
xor
cmpsb
mov
pop
sbb
out
testl
add
rorb
stos
cli
pop
mov
out
lods
shlb
lock
fwait
pop
fisttpl
aad
sahf
aad
inc
clc
sub
ss
xchg
jecxz
or
int3
cld
fdivl
mov
icebp
pop
subb
imul
fwait
mov
test
testb
ficoml
movsb
jb
push
int3
sbb
mov
leave
lods
test
xchg
decb
fsubrs
iret
jecxz
cmpsl
xchg
les
in
adc
sub
insb
aad
inc
sbb
loop
movsl
xchg
iret
jo
mov
sbb
notl
js
dec
mov
jmp
jne
loopne
jnp
lcall
jmp
testl
daa
notl
inc
xor
add
outsl
out
lds
cwtl
mov
pop
into
out
xchg
add
hlt
or
mov
fdivl
inc
xchg
test
and
aad
mov
sbb
enter
pop
push
and
adcl
pop
xchg
in
bnd
sti
and
scas
out
lock
sbb
stos
ss
bound
jl
mov
hlt
cmp
int3
xchg
dec
sub
loop
fimuls
and
cmp
movsb
insb
push
mov
adc
add
cmp
or
rol
or
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
jae
cmp
movl
jae
subl
shrd
movl
shr
ret
mov
xorl
xor
and
movl
shr
ret
xor
xor
ret
push
mov
sub
and
movl
cmpl
movl
mov
mov
movl
jmp
movl
jae
push
pushl
call
adc
and
mov
sbb
sub
andl
mov
cmpl
movzbl
notl
movl
mov
jmp
notl
jle
push
pushl
push
pushl
call
xor
add
andl
movl
or
add
mov
movl
mov
mov
or
movl
movl
sbb
movl
mov
mov
or
push
and
movl
cmpl
mov
movl
mov
jmp
mov
notl
jge
pushl
pushl
call
sub
and
sub
movzbl
or
add
neg
subl
movl
movzbl
sbb
push
adc
movl
add
mov
mov
push
orl
push
orl
push
sbbl
jmp
shrb
push
sbb
mov
mov
adc
lahf
movlps
dec
popf
ficoms
inc
mov
cmp
dec
mov
test
add
rorb
ret
jns
inc
or
mov
dec
jno
jbe
rolb
mov
and
ret
adc
dec
ret
pusha
scas
aaa
xchg
sbb
xchg
jo
in
adc
ljmp
pop
fwait
into
add
jne
jmp
int3
lods
clc
lds
cmp
fimuls
hlt
or
push
pop
xorb
pop
mov
push
dec
repnz
out
cwtl
movsl
gs
mov
test
in
mov
mov
dec
inc
mov
fadd
mov
pushf
jle
scas
mov
xchg
mov
jmp
mov
add
enter
fs
cmpsb
add
ret
and
xchg
mov
lds
loop
jb
jne
cmpsb
add
inc
push
fisubrs
sarb
outsl
icebp
pop
imul
and
arpl
push
pop
dec
hlt
aas
inc
mov
mov
movaps
xor
inc
incl
xor
lock
or
stc
fwait
sbb
popf
jae
jl
lret
mov
xchg
dec
and
jne
dec
jmp
popa
xor
xor
lahf
call
inc
or
or
and
stc
clc
aas
xchg
pop
pop
push
mov
sbb
push
fsubrl
mov
or
jp
inc
test
pop
call
or
pop
push
out
in
outsb
pushf
lds
and
jbe
bound
or
inc
movb
fmul
popa
push
iret
loopne
jbe
pop
mov
mov
dec
add
outsb
scas
jne
outsl
enter
dec
xor
ret
hlt
fmul
jbe
push
mov
jno
ss
xor
sub
cltd
in
dec
or
aam
push
sub
sub
mov
mov
loop
scas
sbb
fstpt
nop
jno
mov
push
or
cmovp
lock
pop
insl
cmp
fmulp
jno
mov
test
sub
addr16
and
into
shr
adc
or
jge
clc
jb
dec
dec
cmp
jne
imul
das
push
loop
int3
pop
lods
adc
or
repz
xor
stos
inc
mov
sbb
inc
cli
loop
sbb
das
imul
add
sti
jo
jae
xchg
sbb
lds
mov
dec
scas
loope
xor
cld
shlb
nop
pop
or
cmp
add
add
mov
movl
jmp
mov
mov
jae
push
call
mov
mov
sub
xor
andl
sbb
adc
adc
or
mov
xor
mov
mov
orl
push
addl
or
sbbl
push
addl
or
sbbl
xor
subl
xor
decl
push
push
call
not
mov
and
mov
push
push
push
push
call
cmpl
mov
mov
jmp
movzbl
movl
ja
push
push
pushl
call
add
mov
sub
addl
sub
sub
sbb
mov
mov
adc
mov
and
movl
cmpl
notl
mov
jmp
movl
jbe
pushl
pushl
push
call
mov
sbb
andl
subl
addl
and
xor
xor
mov
sub
add
andl
movl
xor
movl
movl
movl
cmpl
movl
mov
jmp
movl
not
jne
push
call
subl
or
sub
sub
add
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
jmp
mov
and
loopne
rcll
mov
lahf
movlps
fcomp
je
cltd
out
xchg
sub
aas
out
mov
mov
popf
ret
lods
xor
or
in
or
cmc
test
jge
xchg
sarl
shr
mov
cltd
mov
out
cli
hlt
mov
loopne
adc
add
out
dec
adc
movsb
loopne
out
mov
jle
and
mov
lret
adc
xchg
jb
cmp
and
sarb
mov
adc
adc
inc
inc
push
fisubs
sbb
jno
and
iret
mov
lods
cmp
fists
and
outsb
lods
mov
in
pop
outsb
xchg
mov
mov
movsl
jg
jnp
cmpl
pop
cmp
scas
add
cmp
ss
mov
xchg
int
out
out
jle
loopne
dec
idivl
arpl
inc
push
sub
cli
fwait
insl
mov
rorl
adc
clc
rolb
adc
iret
icebp
cmp
pop
pusha
int3
outsb
in
mov
jno
adc
hlt
loope
pop
mov
xchg
adc
iret
mov
stos
push
testb
negl
mov
movsl
jne
mov
pop
mov
inc
cmp
jmp
fistpl
or
add
test
dec
xor
cmp
jo
jmp
loop
pop
scas
dec
movsb
dec
inc
push
outsl
dec
in
fldenv
xor
int3
repz
in
lahf
pop
loop
and
or
cli
and
xchg
mov
inc
mov
fimull
popa
inc
imul
sbb
scas
jmp
push
xchg
pop
pop
ss
out
lods
and
add
fnstcw
jp
pushf
jns
decl
xor
inc
fwait
sbb
mov
mov
push
pop
popa
jo
stc
repnz
int3
mov
cmc
adc
daa
sub
cmp
inc
lds
push
stc
movsl
add
mov
jecxz
cli
inc
fwait
cmp
idivb
mov
ds
aaa
mov
push
sbb
leave
xor
fbld
repnz
adcl
movsl
cmpsb
mov
jae
push
popf
jns
mov
jae
or
pop
mov
dec
mov
mov
mov
push
mov
mov
out
dec
cmp
lret
lds
loope
lcall
lret
in
out
pop
push
popf
sti
movsl
adc
jg
mov
negl
push
int
add
je
cmp
sub
mov
xor
pop
push
push
xchg
enter
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
jmp
jbe
mov
imul
cmpl
scas
adc
lahf
movlps
idivl
loopne
mov
push
xchg
fisubrs
pusha
sub
adc
mov
repz
and
aam
mov
sbb
aas
jge
push
sar
movsl
jne
mov
xor
push
lods
xor
push
ljmp
adc
inc
es
lds
mov
xchg
xchg
int3
addr16
pop
inc
roll
sbb
inc
xchg
test
cmovnp
dec
stos
mov
loopne
xchg
movsl
pop
cltd
dec
dec
es
fsin
cmp
jmp
jmp
addr16
pop
jbe
gs
lahf
xchg
popf
aad
dec
in
scas
sub
sub
out
jae
inc
in
push
adc
subb
mov
push
insl
aam
pop
ds
mov
xchg
adc
out
inc
hlt
fmulp
repnz
jge
pop
xchg
sub
sbb
jnp
push
xor
push
rcr
xor
sti
iret
roll
xor
aas
adc
xor
lret
sti
movsl
out
xor
pop
repz
addr16
jecxz
daa
outsb
scas
je
xchg
sub
bound
pop
popa
into
sbb
pop
xchg
clc
cs
fxch
push
pusha
mov
loopne
insb
mov
outsb
aam
cmc
push
push
outsl
jae
je
shll
push
pop
icebp
orb
out
lret
mov
cmc
cli
or
cmp
ret
test
ja
pop
fsts
inc
xchg
outsb
in
or
dec
fisubrl
stos
ljmp
cmp
adc
pusha
movsl
mov
repz
iret
mov
test
lahf
xor
dec
sahf
mov
rclb
adcb
mov
sub
ret
push
in
or
dec
ss
push
sahf
inc
repz
subl
or
push
or
cmp
xchg
jp
ljmp
jg
loop
xor
pop
push
dec
jo
daa
clc
stc
mov
testl
add
push
cltd
sarl
roll
inc
rcrb
arpl
jbe
int
sti
adc
negb
push
clc
ret
in
sbb
or
out
cmp
jg
nop
inc
dec
xchg
je
int
arpl
fdiv
jae
into
sbb
sbb
loope
dec
addl
mov
pop
push
lret
fnstcw
outsb
add
jge
lock
mov
std
add
addr16
mov
sub
faddl
and
and
loop
lahf
loope
lahf
add
push
sub
xchg
xchg
pop
sub
mov
dec
call
fnsetpm(287
dec
bnd
or
orl
loopne
pop
lahf
xor
xor
add
mov
adc
jmp
addl
scas
sbb
pop
add
xlat
out
sub
movsb
adc
lahf
movlps
dec
add
push
test
push
sti
jb
in
mov
into
fbstp
stos
pop
bound
sub
mov
push
or
push
pop
add
and
repnz
and
xchg
dec
lcall
mov
stos
or
push
ss
icebp
or
insl
in
xchg
inc
aaa
mov
in
jno
adcb
inc
mov
dec
aas
loop
jbe
mov
imul
sub
cmp
cmc
fstpt
add
pop
pusha
add
add
pop
mov
clc
jo
repnz
xchg
and
adc
clc
rol
mov
shl
ja
xor
aas
ljmp
cld
mov
dec
mov
cmp
scas
jno
shl
hlt
push
xchg
popa
ss
popf
aaa
div
nop
test
dec
and
mov
loop
stos
fstps
sub
shll
fs
xchg
inc
imul
mov
jmp
add
adc
cs
xchg
rclb
test
and
dec
adc
shr
cld
ja
jbe
sbb
mov
dec
mov
sahf
jb
fadd
imull
pop
mov
inc
mov
ds
dec
or
pusha
and
sbb
inc
xchg
movsb
push
mov
mov
sbb
xchg
shlb
xchg
xchg
jno
inc
and
mov
pop
dec
inc
sbb
inc
insl
push
sub
add
pop
push
and
pop
xchg
mov
jecxz
xchg
stc
lea
and
insb
pop
xchg
js
push
lcall
push
xchg
mov
ljmp
dec
xchg
mov
fs
lods
xor
or
dec
mov
pop
sbb
adc
jo
xor
mov
push
push
dec
xor
mov
aam
stos
ja
xor
lcall
hlt
cli
dec
jle
dec
xchg
jp
lret
outsl
cmp
sbb
pop
mov
out
mov
adc
outsl
stc
fs
and
mov
dec
fucomip
xchg
lds
xor
or
imul
add
les
dec
xor
jae
mov
ss
call
sub
sub
xor
mov
leave
and
loopne
lea
adc
call
pusha
pop
sbb
jge
js
fs
cltd
in
mov
cmp
jne
cmp
je
movl
movl
jmp
pop
repnz
push
mov
call
js
mov
adc
imul
int3
jno
xchg
add
push
jg
jno
loopne
fisttps
mov
add
push
iret
jnp
test
pop
icebp
aaa
mov
cmpsl
ja
adc
movsb
lea
and
push
ror
cmp
push
popa
and
lock
popa
sub
sub
push
xor
loope
jae
lret
push
les
fidivrl
ja
xchg
push
cmpsl
pop
mov
mov
outsl
push
sub
int
fnstcw
repnz
mov
jno
pop
test
sahf
ret
mov
cmp
adc
jge
lods
lahf
shll
dec
rcrb
call
mov
jbe
mov
fmuls
das
neg
shr
mov
mov
sub
inc
xchg
es
mov
mov
sbb
pushw
imul
or
imul
sbb
movsb
fwait
add
push
aad
jge
sbb
out
lret
push
shl
loop
aam
movsl
movsb
ja
cmpsb
popf
loop
in
js
dec
lock
dec
inc
repz
cmp
and
jbe
cmp
xchg
lret
pop
inc
test
adc
mov
or
arpl
push
ret
xor
xchg
lea
lahf
adc
adc
loop
outsb
xor
rcr
inc
enter
scas
cmp
sbb
out
pop
xor
ljmp
and
jo
cmp
xchg
fstps
pop
mov
jmp
arpl
cmp
xor
sub
mov
testb
in
enter
adc
hlt
in
jns
into
repnz
adc
mov
call
out
jg
and
pop
popf
push
jmp
daa
imul
pushw
ljmp
ja
int3
flds
insb
int
and
aad
mov
xor
ja
jns
leave
cmc
mov
pop
adc
adcb
cmp
inc
dec
loope
sarb
push
xor
aaa
pop
scas
ja
push
std
call
sbb
insb
addr16
loopne
or
jmp
ja
mov
push
sbb
jg
aam
dec
pop
push
nop
aaa
jecxz
pop
and
rcrl
cs
pop
cmpsl
sbb
popa
mov
inc
cld
mov
in
push
in
es
xchg
push
mov
aam
mov
aad
int3
fcmovnbe
jle
scas
in
iret
mov
pop
imul
xor
pop
cld
sahf
shlb
mov
test
dec
movl
jmp
ja
pop
add
rcll
push
bound
mov
adc
lahf
movlps
cmp
ja
mov
and
and
rorl
daa
pop
stos
jle
sahf
xor
loopne
push
ret
dec
pusha
mov
fidivs
in
aas
xor
xchg
pushf
movsl
xor
pop
insl
pop
cmc
inc
cs
repnz
inc
jb
mov
cwtl
mov
fs
mov
xor
movsb
fst
cwtl
sub
and
loop
push
inc
mov
cld
pop
push
in
das
movsl
sub
mov
xorl
addb
pop
jmp
ljmp
rol
das
test
mov
or
cmp
pop
add
repz
call
fisubrs
jecxz
xor
push
ds
out
push
sub
into
rcll
cs
mov
or
jge
in
sbb
adc
dec
or
adc
push
btc
loope
hlt
jg
push
inc
jbe
xchg
sub
push
cmpl
pop
or
mov
or
clc
add
js
jne
lock
mov
jg,pn
mov
mov
fstl
jae
dec
cmp
ret
iret
leave
les
les
and
out
rolb
lods
sbb
inc
add
shlb
jno
std
pop
add
sbb
in
pop
mov
call
sub
sbb
fs
cltd
das
adc
sahf
pushf
int3
pop
inc
jbe
outsb
and
cli
xor
sub
in
cltd
jg
xor
jl
and
hlt
and
mov
std
mov
aam
jge
mov
shr
in
inc
cmp
sbb
pushw
xchg
shlb
cld
pop
lock
xor
xchg
add
jecxz
add
repnz
int3
pop
std
jnp
xor
hlt
mov
and
mov
repnz
and
dec
pop
inc
or
mov
add
mov
pop
lock
lret
inc
pop
pop
movsl
ss
in
daa
cwtl
imul
add
jg
out
movsb
rorl
fwait
jb
sub
adc
jae
and
mov
sub
cwtl
cmpl
adc
out
cwtl
mov
cmp
cmc
mov
mov
lock
push
dec
mov
shll
add
xor
out
enter
test
adc
and
jb
jmp
repnz
aad
sbb
icebp
lcall
push
jge
test
out
mov
sbbl
add
cmp
xor
add
inc
aam
add
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
jmp
sbb
cmp
sbb
notl
or
lahf
movlps
jo
inc
ljmp
xchg
xchg
sahf
add
ds
sbb
xor
fiadds
aas
xor
xchg
dec
aad
sti
loopne
movsb
ja
popa
dec
inc
jle
xchg
cmp
fstps
xchg
adc
std
jmp
cmp
sar
sbb
insl
mov
movsb
add
sbb
ja
inc
mov
xor
mov
lock
jmp
push
sub
lea
sub
fimull
lea
adc
mov
dec
jg
iret
xchg
mov
notl
nop
fldl
pop
sbb
mov
lods
in
push
pushl
mov
mov
std
mov
push
dec
adc
inc
cli
cmp
arpl
fnstsw
decl
std
mov
cmc
adc
sahf
js
rolb
xchg
inc
adc
lods
jmp
lods
mov
cli
test
jb
stos
mov
hlt
pop
and
nop
mov
lods
cmp
inc
aad
cmpb
int
lcall
jno
aam
push
incl
rcl
mov
sub
imul
add
push
inc
in
pop
mov
or
push
hlt
in
daa
or
dec
or
or
sub
xchg
and
xor
lret
jl
jae
mov
das
xchg
clc
and
dec
xorl
sub
mov
dec
mov
mov
pop
ds
mov
aas
push
xchg
addr16
loopne
and
in
or
jnp
sub
cli
scas
push
in
dec
adc
addr16
sbb
data16
orb
xor
jns
and
sub
fbld
add
dec
add
test
into
lahf
out
out
push
sub
js
addr16
xor
xlat
mov
test
mov
std
xchg
or
push
adc
rcll
sbb
xor
adc
xor
add
mov
lods
push
arpl
into
dec
mov
in
outsl
loope
psllq
mov
mov
int3
xchg
jp
xlat
xor
mov
push
loopne
sub
xor
ret
and
data16
cmpsl
sbb
shlb
and
cli
xchg
push
imul
add
aam
lea
das
aam
lret
add
mov
jg
icebp
xor
outsl
mov
popf
adc
call
nop
jne
dec
div
mov
or
jae
jne
cs
sbb
inc
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
jmp
xchg
jnp
stc
pop
jno
loop
cmp
cmpsl
pusha
js
xchg
adc
lahf
movlps
loope
fcmovnu
mov
in
add
sbb
push
mov
xor
cltd
mov
lock
pop
movsb
cmp
adc
out
pop
rcrb
fdivs
out
lods
cmpsl
ffree
imul
fcmovbe
ret
rcrb
mov
mov
repnz
in
int3
mov
xchg
jno
clc
or
sti
ja
aas
xchg
mov
mov
ret
pop
test
rol
jl
imul
cmp
push
mov
es
xlat
mov
stc
rol
insl
lods
mov
adc
sahf
sti
sbb
stos
aam
add
and
mov
push
hlt
orl
fdivrl
mov
dec
das
insl
pop
pusha
pop
gs
mov
cwtl
jb
pusha
mov
nop
mov
inc
cmp
fdivs
dec
mov
sti
cmp
sbb
mov
stos
dec
cmp
add
mov
push
jb
mov
scas
pop
xchg
xchg
mov
out
push
dec
mov
mov
sbb
push
into
mov
into
and
jge
adc
pop
pop
xchg
mov
xor
addr16
lds
mov
loop
xchg
lcall
xchg
fsub
cmpsl
xchg
shll
pop
test
adc
sbb
mov
and
and
aaa
fnstcw
jns
pushf
jecxz
jb
sarb
cmp
testl
jne
inc
js
and
mov
inc
jecxz
xor
loopne
fisubl
sbb
pop
sub
mov
mov
mov
or
leave
xorl
inc
add
dec
mov
jge
incb
cmp
push
add
jmp
add
mov
jge
and
or
aas
ss
xor
mov
mov
gs
clc
std
ljmp
add
or
adc
push
repnz
jne
mov
push
icebp
sbb
mov
mov
sub
lock
cmp
pusha
ret
pop
mov
lret
scas
add
dec
daa
jmp
iret
xchg
jb
inc
arpl
xorl
fsubrl
push
mov
jle
pop
sbb
shr
push
inc
dec
xchg
cmp
xchg
dec
xbegin
jmp
inc
pop
out
fbstp
test
ljmp
stc
jp
mov
imul
jp
jle
dec
out
loope
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
jmp
sbb
ja
pop
sbb
mov
mov
movlps
pop
push
dec
xor
mov
mov
jmp
ljmp
adc
movsl
cmpsb
popa
ds
sub
pop
push
mov
loope
mov
dec
fcoms
test
mov
push
pop
push
pop
out
out
push
ret
or
cltd
rclb
cltd
dec
jp
sti
test
icebp
in
lods
mov
xchg
es
push
rorl
aad
pushf
pop
and
mov
repz
addr16
lods
and
mov
in
lods
stc
push
pop
inc
ja
pop
or
shll
pop
cmp
and
leave
test
dec
dec
call
push
icebp
adc
arpl
jge
mov
icebp
nop
fcoml
xor
xchg
mov
or
xchg
cmp
aaa
or
jmp
sub
sbb
add
insl
packssdw
repnz
dec
sub
fnsave
xor
ret
push
mov
aas
adc
arpl
and
adc
lea
cmp
sub
push
faddp
mov
sbb
or
andb
jne
inc
jbe
inc
dec
fld
sbb
dec
push
mov
bound
cmp
enter
or
add
out
movb
cmp
mov
popa
xchg
sub
fbld
mov
fs
sbb
push
repnz
inc
fiadds
lock
mov
int
xchg
jo
out
pop
jne
outsl
jae
cmpsl
inc
movsl
nop
mov
aad
xlat
test
push
andb
and
pop
pop
mov
xchg
in
pop
int3
mov
and
pop
js
xchg
add
insb
fcmove
adc
dec
sar
ljmp
mov
ss
and
jle
mov
filds
dec
iret
and
call
xlat
je
fsubrl
inc
pop
sbb
test
mov
out
frstor
dec
popf
inc
fs
out
repz
adc
movsb
push
pop
jnp
pop
jno
sbb
fadds
test
xor
ds
push
fsts
fld
pushf
and
push
mov
aad
cltd
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
jmp
sbb
sbb
and
fimull
mov
pop
movlps
out
aas
ljmp
adc
add
loop
adc
pusha
imulb
push
push
mov
mov
or
cmpsb
fldt
mov
pop
scas
insb
mov
mov
iret
test
lea
inc
cs
inc
in
cmp
pop
push
int
test
adc
lods
lods
sub
jp
pop
mov
and
xor
xchg
bound
out
pop
lods
mov
jecxz
xchg
into
test
jg
les
shrb
outsl
push
and
mov
xchg
and
cmp
lock
dec
push
and
sbb
add
test
jecxz
ljmp
adc
arpl
aas
stos
add
mov
mov
mov
scas
sub
das
fs
shlb
fisubrs
mov
loop
mov
add
or
xchg
imul
test
pop
and
mov
inc
ja
jne
lods
ror
inc
out
stc
xchg
or
jmp
cltd
in
call
dec
xchg
lret
jns
inc
cmpb
xor
out
in
pop
cli
cmp
imul
adc
push
dec
mov
lcall
inc
jbe
sub
outsb
xchg
sbb
sub
loopne
int3
ss
cmp
push
insb
cld
in
mov
mov
dec
cmpsl
mov
dec
sub
shr
jo
bound
jno
cmpsb
inc
xchg
sub
inc
subl
cmpsl
in
mov
mov
divl
push
out
jno
imul
lret
xchg
sbb
ss
dec
cmpb
pop
adc
push
mov
jno
jl
push
lds
adc
adc
or
into
xor
push
iret
das
mov
sbb
mov
push
pushf
lea
sbb
scas
inc
cli
pushf
stc
xchg
pop
or
jp
pop
aad
inc
inc
daa
xor
mov
adc
jge
cwtl
call
fmul
mov
xchg
bound
scas
pop
or
push
inc
push
loop
bound
bound
fcompl
mov
push
mov
je
js
push
adc
jge
pop
dec
adc
dec
push
mov
mov
jmp
fdivl
fnstcw
sbb
push
call
adc
pop
movlps
add
adcl
pop
lahf
jge
mov
sarl
cmp
push
popa
arpl
push
push
mov
rcrb
sub
incb
xlat
stos
xchg
inc
repnz
addb
push
inc
cmpsl
add
loopne
clc
aaa
aas
add
sahf
xchg
xchg
push
lds
gs
add
mov
bnd
pop
mov
cmpsl
pusha
xor
pop
pop
fiadds
dec
rol
add
inc
and
push
shlb
push
push
outsl
popa
jl
sub
pushw
je
data16
lcall
ja
jle
xchg
push
dec
into
and
inc
mov
cs
dec
xor
cld
mov
inc
xor
ss
jo
pushf
js
lret
push
clc
jle
push
iret
cmpsb
test
dec
lds
mov
into
lret
jnp
les
cli
pop
arpl
push
rclb
xlat
lcall
push
xchg
aad
push
lds
mov
pop
mov
out
mov
mov
mov
mov
pop
add
mov
lock
lock
xchg
pop
test
cmc
movsb
or
mov
loop
sub
ja
mov
js
and
std
scas
daa
xchg
pushf
push
push
mov
out
cmp
xor
and
push
adc
mov
sahf
clc
fld
clc
out
pushf
pop
jae
push
jl
xchg
add
cmc
call
fcomip
sbb
pop
jbe
dec
dec
repz
xor
testb
outsl
lret
js
subl
adc
jl
mov
sahf
dec
xchg
subl
xchg
hlt
cmp
dec
cmp
mov
pushf
andl
dec
add
push
pop
jmp
pop
mov
xor
add
and
int
icebp
test
mov
fs
mov
adc
data16
push
jne
shl
ja
ljmp
insl
inc
sbb
data16
jb
add
pop
and
lret
adc
nop
inc
enter
and
sahf
jg
pop
cmp
mov
lods
repz
add
sub
out
xor
or
xor
out
dec
sahf
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
jmp
nop
xchg
cltd
lret
pop
dec
mov
push
xlat
les
pop
movlps
fmuls
loop
xchg
xchg
hlt
lds
shll
add
adc
or
lods
xchg
cld
inc
int3
mov
and
fsts
xchg
sbb
sahf
push
mov
jle
testl
leave
lods
bound
inc
mov
or
jne
int3
nop
jbe
mov
inc
fs
mov
fbld
shr
xor
fimuls
stos
ja
pop
loopne
loop
sbb
test
adc
adc
jl
fwait
popf
fldt
and
push
test
inc
mov
pop
jge
fucomi
jo
ret
adc
pop
dec
stos
add
repnz
sti
jnp
std
push
mov
jle
mov
pop
push
jb
mov
mov
push
cmp
push
movsb
stc
aam
cmp
mov
xor
inc
enter
xchg
pop
ret
ret
inc
sbb
mov
movsl
test
mov
cmpsl
jmp
sub
mov
cmp
insb
call
loop
leave
mov
sbb
shlb
mov
inc
fistpll
jae
sub
call
outsl
sub
adc
sub
push
loope
int3
mov
mov
pop
push
in
dec
out
fwait
rcr
cmp
add
in
mull
loope
or
sbb
jbe
sub
dec
add
xor
push
sbb
aad
scas
dec
mov
jae
icebp
xor
sahf
nop
out
jecxz
push
add
lea
cwtl
addl
aas
inc
add
int3
push
rorb
mov
push
std
lods
cli
xchg
movsl
lea
loopne
lock
sbb
insl
sarl
ljmp
fidivl
inc
stc
adc
leave
shll
stos
ds
xchg
mov
loopne
adc
sub
sub
dec
push
cmp
push
xor
std
push
mov
stc
mov
sbb
subl
mov
jbe
pop
aam
mov
hlt
in
leave
xlat
pusha
mov
jno
mov
sarl
pop
push
ljmp
inc
add
cmp
mov
xchg
push
out
sbb
push
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
jmp
add
popf
pop
sbb
push
push
adc
jp
adc
adc
adc
dec
sub
xor
xor
cwtl
mov
mulb
jge
out
pop
pop
cmpsb
push
mov
loope
pop
sub
push
pop
sbb
push
push
sub
mov
cmp
repnz
in
dec
test
out
cwtl
cmpsl
inc
cli
jo
sbb
shll
lock
sarb
cld
jl
rcl
dec
dec
sub
ss
pop
lods
push
les
push
inc
fcompl
adc
lea
lret
les
sub
insl
mov
jl
add
imul
or
stos
es
in
inc
les
add
mov
shlb
dec
pop
pop
cmc
ds
xor
cmp
jp
pop
pop
rcrl
pop
out
pop
dec
ret
jg
mov
icebp
sbb
cmpb
mov
mov
fdivl
cmpb
add
xchg
cmp
imul
mov
mov
idivl
mov
test
popa
xor
add
rorl
jmp
dec
loop
mov
mov
fcompl
jecxz
inc
mov
imul
outsl
lods
xor
out
dec
jbe
push
adc
dec
sbb
push
cmp
dec
sub
inc
lds
inc
testl
dec
lods
xor
test
and
sub
sti
pusha
mov
jns
fdivrl
sahf
iret
push
lods
push
push
adc
imul
mov
adc
inc
push
or
mov
inc
daa
iret
adc
xor
into
mov
sub
lock
or
mov
xor
xchg
inc
sbb
enter
sub
movl
jmp
hlt
cmpb
arpl
inc
aad
popf
jmp
insl
pop
test
add
clc
mov
mov
sbb
repnz
and
xchg
movl
sub
cmp
or
inc
fisubs
lock
outsb
scas
cld
in
lar
je
push
push
xchg
mov
or
lds
leave
xlat
jns
repnz
push
fimull
and
mov
scas
mov
jae
xchg
sub
out
and
cmp
push
call
jg
lahf
fcompl
jle
repz
inc
popa
les
aam
mov
std
pop
xor
mov
cmp
lret
into
cld
int3
sub
or
fiadds
pop
iret
mov
ret
and
mov
aas
mov
jecxz
ds
movsb
add
orb
pop
insb
lea
dec
sahf
mov
fsubrl
stos
push
mov
jl
or
push
mov
pop
and
jo
push
es
ljmp
pop
jl
bound
xchg
jl
inc
fs
movsl
pop
push
xor
push
cwtl
mov
vmovups
int3
int
test
adc
mulb
stc
cli
add
hlt
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
jmp
std
push
mov
ja
pop
jmp
push
rclb
adc
adc
adc
in
pop
fistps
enter
out
sub
mov
insb
fldl
jge
sub
xor
rclb
or
mov
sub
stos
out
xor
mov
or
mov
mov
fcoms
lcall
pop
fwait
cmp
push
stos
sbb
pusha
or
popa
data16
cmp
fwait
cmc
ss
cld
dec
in
in
daa
mov
inc
filds
inc
leave
aam
lret
pop
popf
stc
xor
and
test
cmp
add
adc
pushf
dec
insl
push
push
mov
mov
test
adc
lock
cmp
es
loope
stos
dec
push
and
mov
out
mov
repnz
add
push
xlat
gs
xchg
adc
xor
xor
add
add
xor
sub
ror
ds
fbld
icebp
and
shll
dec
leave
stos
lods
and
jno
and
pop
shlb
adc
jae
jae
aaa
adc
or
fs
les
jae
xor
stos
mov
call
fnstsw
cwtl
mov
sbb
dec
popa
dec
shlb
sbb
jmp
adc
mov
mov
lds
xchg
clc
jg
enter
or
push
push
daa
shr
negb
mov
stos
in
push
or
sti
xor
cvtps2pi
mov
ljmp
mov
and
aam
ljmp
fadds
cmc
inc
jp
fisubs
rolb
arpl
int
roll
add
test
fucomip
mov
cmc
and
xchg
cwtl
pusha
xchg
or
stos
movsb
outsb
imul
loopne
movsb
std
push
or
rcll
pop
sbb
ja
push
fucompp
into
add
gs
sub
sbb
mov
add
pop
inc
ret
and
push
mov
mov
mov
in
cmpsl
dec
mov
bound
lock
sahf
pusha
cltd
stc
call
pop
inc
outsb
mov
and
mov
arpl
pop
popl
fsubs
lret
test
repz
adc
jbe
lret
jne
fstpt
mov
addl
jle
cltd
mov
inc
adc
fwait
repz
sti
fadds
or
stc
jae
mov
mov
call
shll
and
aas
push
data16
cmp
iret
adc
test
cmp
inc
leave
sbb
enter
push
and
or
or
and
out
mov
arpl
outsb
mov
leave
mov
jns
xor
faddp
xorl
orl
adc
mov
in
or
or
lcall
aam
sahf
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
jmp
decb
sub
ficoms
stos
mov
adc
ficoms
adc
inc
gs
sbb
add
inc
testl
cmp
lret
movsl
popa
les
enter
jecxz
gs
cmp
mov
cld
rcrl
iret
mov
lods
in
xor
shlb
xor
mov
add
push
sub
pop
push
mov
add
aam
pusha
cmp
cli
add
and
push
or
nop
inc
in
mov
pop
inc
outsb
fsubrl
dec
fdiv
stc
aam
jb
mov
test
out
dec
sbb
cmp
mov
stos
test
iret
mov
addl
aad
dec
sbb
sbb
mov
ror
mov
mov
adc
imull
fnstcw
inc
jp
xchg
push
push
jae,pn
loop
mov
sub
lret
dec
pop
push
cmpsb
in
pop
popa
mov
clc
mov
movsb
mov
nop
std
sbb
iret
inc
arpl
fnstcw
pop
xchg
inc
in
xchg
add
xchg
jmp
xchg
sub
mov
jnp
mov
or
add
jae
cmp
mov
pushf
or
push
sahf
adc
xor
pop
sub
lods
xchg
mov
inc
incl
sbb
movb
mov
jp
mov
imul
add
sti
push
cld
das
jmp
dec
or
insl
mov
jmp
jnp
divl
jge
sbb
push
pop
xchg
adc
pop
out
jo
fs
mov
mov
int3
pop
out
xchg
mov
mov
xor
cmc
xchg
jns
fcmovne
aas
dec
push
sbb
popa
and
fcomps
cli
pop
inc
adc
push
pusha
dec
fistpll
into
subl
test
mov
or
adc
jg
fwait
and
imul
cli
out
pop
lods
lods
ror
shlb
ja
out
pushf
xorb
add
mov
stc
outsb
jno
mov
mov
xchg
xorl
int
ds
loopne
jecxz
dec
les
sub
in
fwait
iret
orl
push
rorb
movsl
leave
mov
adc
push
sahf
imul
pop
lods
sbb
mov
cld
test
ret
int3
pop
push
xor
lahf
mov
leave
les
pop
arpl
rclb
cmc
pop
xchg
or
loope
lcall
rcrl
addl
out
outsb
test
jnp
jl
add
daa
test
push
mov
test
and
pop
mov
sub
sub
push
pop
ljmp
add
movsl
push
inc
fwait
ja
outsl
ss
int3
sahf
jo
mov
inc
push
dec
pop
aas
nop
jmp
dec
stos
nop
xchg
xor
mov
out
movl
lea
leave
inc
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
jmp
aam
lock
mov
insb
xorb
adc
adc
adc
inc
mov
fstps
leave
sbb
js
out
aas
nop
pop
sbb
dec
add
andb
lahf
inc
cmp
lds
sahf
lret
xchg
pushf
adc
mov
xchg
push
xor
int
mov
sahf
fnstsw
mov
ficompl
scas
testb
hlt
popl
adc
mov
dec
fimull
nop
cmp
clc
cwtl
mov
cs
lods
mov
pop
mov
add
shll
repz
flds
jg
fst
add
repnz
mov
loop
pop
jmp
jp
out
or
push
mov
sarl
dec
stos
rorl
addr16
dec
stc
scas
sti
push
popf
jns
mov
aas
fcompl
mov
mov
icebp
xchg
imul
jge
in
xor
jno
repnz
cmp
dec
jle
lret
data16
into
dec
outsl
adc
jb
gs
jp
rcr
sub
rolb
in
mov
jns
std
mov
push
mov
lock
cld
dec
loopne
adcb
cmp
ror
out
lock
rolb
dec
push
sub
mov
cltd
inc
xor
scas
lret
xchg
icebp
and
sti
mov
adc
push
nop
sub
jmp
sub
or
mov
xchg
fdivrl
test
scas
hlt
adcl
aas
lcall
mov
loopne
ljmp
mov
pop
or
sbb
pop
sbb
adc
movsl
hlt
jmp
jge
test
xchg
mov
cmp
sub
pushf
lock
cmpsb
xor
pop
lahf
sarb
pop
sahf
dec
push
in
mov
pop
xchg
fsubrs
insl
push
adc
xor
cld
dec
lret
mov
pop
pop
repnz
inc
enter
daa
cmp
mov
out
xchg
push
sbb
pop
sbb
mov
sbb
sub
push
mov
test
xchg
adc
fstps
inc
dec
add
xchg
sbb
xorb
mov
scas
inc
xchg
popa
nop
scas
pop
gs
repz
fsts
xlat
sub
imul
fadds
mov
ljmp
cli
ljmp
movsl
cmp
adc
ja
sbb
lea
cmp
testb
add
out
inc
jne
ljmp
xchg
fstl
and
ds
aas
dec
jecxz
subl
fisttps
subb
popf
das
aad
mov
or
imul
aaa
cmp
adc
sbb
movsl
aad
mov
xchg
icebp
je
xor
iret
add
shrl
or
lods
mov
in
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
jmp
jae
jge
jge
and
xor
inc
bound
adc
adc
adc
mov
loopne
outsl
lahf
pop
adc
into
push
arpl
mov
or
jo
sbb
daa
inc
or
shr
xchg
sar
xor
rcr
push
enter
repnz
popf
pop
add
cmp
arpl
jae
jnp
shl
sti
and
insl
out
out
out
vsqrtpd
push
dec
xor
or
or
dec
leave
mov
mov
add
mov
cmpsl
cltd
int
cmp
shrd
jp
mov
lret
xchg
mov
out
stos
ret
mov
arpl
cli
nop
out
out
pushf
cmpsl
sub
cwtl
sub
addr16
clc
test
mov
out
out
imul
mov
jecxz
adc
xor
clc
push
dec
iret
or
pop
xlat
push
popf
stos
xor
mov
push
mov
movsl
testl
sahf
sbb
mov
out
loopne
aam
clc
inc
bound
mov
je
aam
adc
mov
mov
add
xchg
sub
adc
das
pop
pop
ljmp
out
mov
pop
into
dec
mov
push
mov
pop
sbb
outsl
xchg
test
inc
in
mov
rorb
xor
dec
fst
push
ljmp
mov
repnz
int3
andb
jecxz
adc
xchg
inc
fcomps
mov
and
dec
pop
adc
lds
push
pop
scas
sub
imul
adc
cmpsb
subb
cmc
std
push
mov
shr
sbb
mov
jecxz
out
gs
or
pop
hlt
ljmp
xor
xchg
jnp
mov
sbb
iret
in
mov
mul
lahf
pop
arpl
ja
jmp
mov
mov
xchg
pop
pop
outsb
test
out
xor
cmpsl
mov
aam
cmp
aas
add
les
ficompl
xchg
cltd
lret
inc
sub
notb
lock
sub
sub
jecxz
in
clc
inc
or
mov
stos
lods
and
pop
icebp
ds
leave
in
xlat
and
xor
lds
mov
cmp
pusha
inc
insl
scas
sbb
xor
rol
in
cwtl
dec
fbstp
xor
fdivrl
adc
xchg
testb
mov
cmpsl
mov
std
ja
push
test
jp
ficompl
rolb
push
lcall
adc
mov
daa
shlb
push
das
jle
fs
sbb
pushf
cmp
mov
mov
or
rcl
fwait
dec
addr16
aam
dec
hlt
cwtl
xlat
inc
insl
push
or
mov
sarl
call
xchg
in
fsubrl
js
cmp
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
jmp
gs
icebp
pop
ficompl
das
mov
fidivrs
xor
adc
lahf
call
inc
scas
jno
or
std
mov
inc
std
out
popa
inc
lcall
popa
jle
cs
outsl
popa
jnp
cmpsb
pop
je
and
mov
imul
into
push
leave
aam
jge
loop
inc
push
out
inc
roll
lock
ja
aam
rcll
sub
std
shrl
push
or
push
cwtl
cmpsb
mov
lds
or
fisubrl
data16
into
xor
loopne
sbb
mov
push
arpl
dec
mov
sbb
fwait
cltd
push
push
dec
and
sub
fsts
roll
xor
pop
xchg
popf
aad
into
scas
out
add
aas
roll
roll
mov
push
lods
sbb
in
loop
cmpsb
push
out
sub
divl
mov
outsb
repz
pop
add
inc
ss
lock
xchg
test
js
idivl
dec
aad
pop
lock
jmp
inc
cmp
test
lahf
std
int
sub
call
lret
pop
insl
out
xlat
sub
loop
cmp
pop
mov
push
mov
push
addl
mov
push
sbb
loop
inc
shrl
or
sbb
sbb
dec
movsl
hlt
mov
push
leave
in
mov
lret
pop
jae
out
xor
fnstcw
popf
shl
mov
rcl
test
cmp
lock
iret
push
je
cld
lret
faddp
aad
pop
or
push
andb
daa
push
inc
clc
shll
imulb
ds
outsl
push
cltd
xor
cmc
mov
and
and
push
pop
xchg
daa
jnp
rcrb
or
cld
scas
add
mov
fstl
push
sbb
cmp
jo
outsb
loope
or
push
jecxz
sarb
jo
inc
aas
push
mov
hlt
push
or
cmp
sbb
xor
sti
std
in
xchg
push
or
xlat
xchg
mov
xchg
out
cmp
lret
mov
cld
idivl
shrl
jae
mov
sbb
cli
cs
int
sbb
xor
repnz
fdivs
cmp
es
imul
not
not
xorb
mov
sbb
and
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
jmp
sbb
pop
loope
pop
pop
cmp
aam
mov
xor
adc
outsl
fimull
and
fmuls
xchg
jle
daa
pop
in
lock
cli
xlat
adc
cmc
lds
push
rcrb
jecxz
fidivrs
cmp
jbe
pop
lahf
imull
mov
es
pop
push
jae
in
mov
sbbb
inc
add
xlat
cmc
or
xor
xchg
pop
inc
xlat
xchg
inc
leave
fwait
pop
nop
xor
dec
rorl
addr16
mov
push
add
leave
aad
xlat
pop
or
mov
out
inc
pusha
gs
stos
mov
aaa
jno
lods
iret
rolb
lods
mov
and
fstps
int
push
outsb
inc
ss
add
cmp
aas
mov
lret
dec
xor
stos
out
es
ds
jle
pop
shrl
imul
dec
inc
xchg
pop
adc
push
repz
xlat
daa
mov
out
pop
xor
outsb
xchg
adc
repnz
fs
pushf
xchg
mov
lcall
and
xchg
std
add
lods
cmc
rorl
and
lods
out
mov
pushf
mov
add
fwait
inc
xor
sub
push
mov
pop
loop
jb
clc
mov
mov
movsl
cmp
mov
mov
std
cltd
add
test
cmc
mov
aam
clc
adc
stos
mov
outsb
and
shufps
testb
push
inc
or
test
sti
mov
inc
dec
push
adc
push
xchg
adc
out
mov
out
mov
pop
mov
xchg
cmp
lods
test
and
jp
stc
jae
adc
out
ss
ljmp
out
add
push
inc
psrad
sub
inc
cmp
sub
dec
test
and
lcall
imul
fucomp
inc
jle
xor
loopne
add
mov
inc
cwtl
mov
leave
mov
push
cmp
lock
addr16
mov
ret
in
cmp
inc
jmp
push
jne
push
loop
sub
enter
insl
cmp
cmp
ret
adc
mov
pushf
test
dec
lret
lock
cmp
or
push
and
xor
xor
or
inc
inc
hlt
jg
add
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
lods
mov
lods
cmp
jno
sbb
inc
push
adc
push
adc
adc
or
pop
sub
pop
subl
dec
loope
pusha
jbe
adc
dec
xchg
inc
push
hlt
fldcw
dec
movl
inc
xchg
dec
inc
ret
or
in
or
sub
cmp
mov
cli
mov
mov
dec
repz
mov
adc
cmpsl
pop
and
shr
jp
sub
clc
stos
jp
cmpsl
cmpsb
aad
push
divl
mov
push
add
or
js
dec
add
push
movsl
insl
rolb
cld
pop
lcall
cmp
pop
or
adc
inc
adc
ja
mul
sbb
cmpsb
in
jle
jb
xchg
int3
js
cmpsb
lods
jg
shll
das
daa
mov
inc
or
movsl
test
cmpb
mov
popa
out
push
ret
cs
or
aam
shll
jo
jmp
adc
mov
mov
jnp
push
mov
sbbb
mov
dec
mov
addl
outsb
pop
jecxz
imul
mov
aad
sub
mov
out
mov
loop
and
xor
sub
rorl
xchg
sahf
pop
lcall
sbb
std
insl
pop
stos
std
call
cmp
lea
hlt
jl
mov
push
xchg
push
xor
mov
sub
iret
ret
mov
mov
sti
push
ds
iret
pop
lods
call
mov
pop
cmp
ret
ljmp
daa
pop
add
inc
movsw
inc
xlat
add
fdiv
inc
das
and
fs
ja
cmpsb
dec
int3
jb
push
pushf
add
dec
fs
mov
lock
test
std
mov
or
out
jne
push
fldt
push
add
mov
or
mov
sub
xchg
jecxz
xor
sbb
cwtl
addl
mov
push
add
jle
test
int
int3
stos
outsb
xor
mov
cmc
xor
clc
lds
fxch
test
xchg
pop
push
push
xchg
push
or
xchg
hlt
push
cmpb
dec
jg
pusha
sbb
jmp
pop
mov
adc
mov
pop
lcall
xlat
xor
pop
and
mov
imul
subl
dec
push
push
xor
repz
mov
xor
into
in
mov
cmpsb
lcall
ss
pop
hlt
sbbb
pop
mov
fistpl
inc
outsl
rcll
aad
movb
cltd
push
jp
fiaddl
stc
pop
sbb
rcrl
pop
mov
shll
inc
out
scas
ss
fdivrs
aam
lahf
mov
pop
fwait
xor
ss
or
mov
adc
lahf
insl
dec
je
scas
test
dec
bound
xchg
dec
incb
add
mov
push
pop
out
cs
out
andb
mov
sub
in
int
gs
pop
cvttps2dq
inc
cmp
iret
dec
aaa
out
les
addr16
pop
jg
loop
cmp
jb
add
mov
jae
test
movsl
sub
mov
push
push
add
mov
or
add
adc
sub
sbb
inc
cld
hlt
xor
add
in
adcb
push
push
call
mov
mov
xor
jmp
fcomps
pop
sub
and
adc
adc
push
adc
adc
enter
jge
jmp
dec
pop
pop
add
scas
dec
cltd
lods
lret
pop
cmp
or
xchg
stos
loope
push
ss
and
sbb
dec
vmovaps
in
std
jne
jne
sbb
adc
xchg
mov
das
xchg
jle
or
xchg
adc
in
leave
push
mov
rclb
mov
xorb
xchg
test
rorl
aas
loopne
popf
xor
add
mov
iret
iret
cmp
jmp
mov
leave
or
test
ret
ds
inc
lcall
in
stos
into
pop
fldcw
outsl
pop
adc
push
sbb
pop
fdivs
in
movsl
cmc
movzwl
sub
mov
insl
fcmovu
cli
cmovle
iret
jb
inc
call
or
jb
outsb
ret
icebp
stos
add
and
push
push
pop
hlt
inc
lcall
call
cmp
call
adc
pop
dec
fstpt
xchg
movsb
int
mov
push
sub
or
add
jne
pop
stos
aam
enter
sub
sub
push
ja
push
in
rclb
pop
repz
and
fwait
dec
and
jg
sub
fidivl
mov
xor
xor
int
cmc
jno
xor
push
mov
call
ljmp
cmc
jge
shrb
call
shl
les
clc
lock
fdivrl
or
out
sub
test
push
imul
les
cmovp
ja
inc
or
aad
aad
mov
sub
cmp
les
loope
ja
mov
push
arpl
dec
and
fiadds
and
cmp
sbb
cmp
in
mov
cmp
and
and
xchg
jo
insl
repz
test
cmp
es
sbbl
mov
cmp
into
mov
and
mov
push
repz
sti
into
xchg
dec
ja
inc
push
dec
push
std
test
jne
stc
icebp
outsb
in
das
fmulp
adc
ficoms
les
or
pop
fwait
andb
in
int
mov
cltd
cltd
das
sti
jo
jmp
stos
insl
lret
xor
or
push
mov
insb
or
cmp
negb
cmp
popf
pop
push
enter
fisttpl
push
jge
push
ret
jecxz
sbb
push
mov
mov
fs
dec
lret
stc
mov
ds
mov
leave
in
xor
out
into
push
lods
je
mov
cwtl
xchg
pushf
enter
repnz
or
shlb
xor
or
rcrb
adc
pop
sbb
sbb
or
pop
nop
or
or
cmp
rcr
ret
bound
es
lds
test
roll
mov
loope
pop
out
and
cli
jge
imul
xchg
sbb
adc
push
add
out
int3
mov
mov
or
andb
push
sti
sbb
and
lcall
jae
cmpsl
dec
sbb
scas
shl
adc
dec
push
xor
and
dec
scas
jg
out
frstor
sub
out
inc
pop
cmp
out
xor
mov
xor
mov
xor
jmp
sarl
sbb
jbe
stos
pushf
jl
js
inc
adc
push
adc
adc
mov
fisttps
sbb
adc
push
push
and
dec
repz
push
lcall
ret
xchg
push
ljmp
inc
lret
inc
mov
cmp
std
mov
cmp
aam
mov
mov
mov
call
and
adc
fsub
idivl
pop
cmp
insb
cmc
out
arpl
pop
adc
jp
add
fs
sbb
inc
ss
and
icebp
mov
test
popa
imulb
sbb
mov
or
je
cmpsb
pop
xchg
xchg
call
fucomip
or
or
mov
fistpl
cli
adc
in
sahf
xor
test
fdivrs
mov
mov
sbb
incl
and
xor
test
push
adc
inc
add
fwait
xlat
and
mov
in
and
call
add
stos
add
lds
push
jp
call
jno
faddl
or
and
in
xor
mov
adc
lahf
inc
mov
lahf
adc
cwtl
or
xchg
call
jg
aas
testl
push
dec
adcl
sub
lds
push
jge
mov
add
and
leave
stos
or
xchg
pop
fnstenv
sbb
adc
je
pop
les
aad
je
adc
jmp
cwtl
push
sub
mov
enter
addr16
fcoml
cmp
dec
cmp
call
sbb
inc
int3
je
mov
and
stc
adc
sbb
fcomps
loop
cmpsl
lcall
outsl
xor
inc
popa
pop
xchg
and
cmp
fucomp
mov
fs
push
cmp
clc
xchg
outsl
adc
sbb
cmpsl
es
inc
push
jo
and
scas
aad
push
mov
mov
sbb
adc
jo
jns
sahf
fcoms
cwtl
lahf
ret
adc
or
ret
les
push
or
cmp
cs
imul
movsl
test
enter
push
cmc
jle
mov
je
aas
cld
fcomps
mov
cs
sub
popa
sbb
xchg
scas
addr16
aas
inc
imul
or
cld
sbb
lret
xchg
leave
and
sub
mov
mov
mov
dec
faddl
mov
inc
adc
lret
test
push
push
pop
ret
mov
repz
pop
xchg
mov
mov
dec
imul
add
push
jle
pusha
mov
jg
testb
insl
in
movsb
mov
movsb
test
bound
addr16
mov
or
xchg
repnz
je
sbb
js
lret
out
dec
xchg
and
cmp
push
add
dec
push
inc
das
insl
les
add
shlb
test
mov
dec
scas
push
add
sbb
adc
sbb
jo
leave
dec
arpl
lret
fisttpll
out
push
dec
pop
lods
sbb
insl
or
fst
ret
pop
jbe
add
ljmp
cltd
mov
pushf
jmp
adcl
popa
andb
lcall
enter
inc
add
add
data16
or
add
cltd
adc
cmp
jne
cmp
jmp
mov
imul
test
stos
cmp
jle
cmp
adc
adc
adc
adc
dec
adc
cs
int
xchg
ds
ret
xlat
and
mov
lods
xchg
lds
out
mov
adc
aad
mov
sub
aam
jnp
jb
add
fdivp
inc
add
xor
arpl
add
dec
mov
mov
or
pushf
push
popa
jecxz
addr16
jo
loope
mov
insb
mov
arpl
lret
add
ja
cmp
scas
push
test
test
mov
sbb
jp
mov
fsubrl
adc
adc
rcl
test
repnz
mov
gs
clc
scas
adc
stc
fistl
lea
notb
dec
enter
test
xchg
xlat
pop
push
cmp
and
push
in
push
rcrb
inc
in
lcall
stos
out
jmp
adc
lds
fildl
mov
add
or
jg
in
dec
adc
ljmp
inc
fwait
jb
push
inc
stc
pop
movl
ja
enter
testb
push
outsb
and
jmp
les
mov
sbb
push
mov
xchg
sbb
rorl
stos
add
fldenv
stc
xor
xlat
popf
mov
inc
dec
xor
es
ds
out
std
rcrb
movsl
lcall
les
scas
addr16
dec
pop
lcall
aad
rcrl
imul
xchg
lahf
mov
push
dec
jmp
dec
mov
sbb
jb
cmp
fidivs
pop
adc
pop
ficomps
ds
std
xorb
ror
sub
xor
imul
inc
adc
dec
lcall
aas
sub
mov
out
mull
arpl
sub
push
daa
mov
insl
adc
shll
mov
push
push
test
mov
into
in
fcoml
mov
test
dec
ss
loopne
sub
or
repz
push
inc
pop
hlt
add
pop
add
adc
rcr
loop
adc
dec
push
dec
sub
pop
and
lock
mov
int
cmpsl
in
movsl
cmpsb
mov
icebp
xchg
mov
mov
icebp
out
mov
sub
out
mov
lea
stos
mov
mov
pop
jne
popa
and
add
adc
jmp
xchg
jl
xchg
cmpsb
pop
mov
pusha
imul
push
dec
jne
arpl
dec
rcrl
xchg
outsl
jle
push
psubusw
xlat
addr16
out
sbb
rorb
shlb
pop
xchg
loop
cmpsb
insb
mov
in
push
jmp
pop
ja
jbe
xchg
jp
cmp
add
loop
xor
pop
or
bound
xor
cmc
xor
mov
mov
cmp
push
cmpsb
popa
push
arpl
rcl
cmpsb
mov
push
and
sbb
cwtl
and
push
lods
pop
imul
mov
sti
std
sbb
idiv
mov
popa
mov
lods
inc
sbb
mov
fwait
jmp
test
movsl
add
add
shlb
insb
daa
ret
mov
popa
sub
push
xor
adc
adc
adc
xchg
sbb
loopne
lret
cmp
jp
stos
xchg
lds
add
bound
insb
mov
imul
outsl
pusha
rcrb
fs
jne
aad
or
popl
add
ja
jl
test
sub
subb
adc
std
loop
jno
loopne
cmp
movsl
adc
loopne
out
sbb
mov
fldenv
adc
adc
test
mov
outsl
ficoms
add
inc
fiadds
inc
xor
push
idivb
xor
pop
dec
jmp
mov
cmp
or
gs
jp
jecxz
push
jnp
sub
int
cmp
inc
and
sub
nop
and
in
ret
jmp
cmp
sub
pop
imul
jp
xor
jl
mov
sbb
xchg
cmc
cmp
xchg
sti
sub
cmpsb
in
jmp
nop
jmp
insl
xor
xchg
pusha
inc
push
pop
inc
push
bound
lcall
push
cmpsl
pop
xchg
mov
add
or
push
add
cmp
movsb
lahf
xor
inc
xlat
sbbb
jne
adc
repz
sahf
hlt
cmp
pop
add
jl
mov
test
mov
adc
dec
imull
nop
adcb
mov
insb
adc
faddl
in
xchg
fmuls
jno
int
sbb
roll
movsl
mov
icebp
dec
cmp
or
cmpl
sub
incl
sbb
rcrb
cmpsb
rolb
addr16
movsb
pop
jbe
repnz
add
test
fadds
test
pop
mov
dec
enter
pop
stos
xorl
adc
xor
aaa
ficoms
sub
jg
sub
sti
and
mov
mov
or
lahf
push
pop
sahf
loopne
icebp
mov
fbstp
xchg
lds
pop
iret
mov
mov
cld
mov
xor
leave
add
sub
in
loop
jl
fisttpll
pop
mov
jae
add
dec
add
and
pinsrw
ja
push
repnz
mov
inc
divl
inc
push
xor
adc
adc
ret
lds
test
cmpsl
repnz
aas
mov
cmc
pop
leave
sub
pop
out
push
add
movsl
js
pop
jmp
test
dec
push
jmp
or
pop
mov
inc
mov
sub
sbb
orb
fnstsw
fnstenv
mov
pop
inc
xchg
dec
cmpsl
mov
cld
dec
cmp
and
push
pop
je
hlt
jmp
xor
adc
roll
sbb
adc
inc
jbe
int
sub
jns
cmp
stos
je
popf
mov
cmp
lea
ja
mov
pop
mov
lock
xor
adc
dec
stos
insb
dec
rcll
sarb
js
xor
dec
test
add
jmp
mov
and
lret
xchg
sbb
lods
mov
cltd
xor
test
push
lret
jmp
iret
push
mov
mov
test
adc
les
stos
xchg
adc
jp
js
bound
push
adc
push
mov
sub
push
jg
pop
lock
or
xor
mov
mov
mov
mov
add
adc
or
mov
jmp
les
lds
pop
inc
daa
and
mov
out
adc
push
adc
adc
cmp
xor
insl
loop
cmp
nop
imul
sbb
int
xchg
shrl
jl,pt
pop
loop
movsl
js
testl
dec
jne
lcall
xor
sub
jns
adc
fnstcw
iret
xchg
jl
xor
sub
fwait
adc
mov
sub
notl
mov
xor
dec
movl
xchg
lahf
push
in
imul
je
sbbb
mov
mov
add
imulb
push
mov
sti
mov
cmp
push
rorb
jno
mov
jg
mov
push
pop
aaa
mov
adc
pop
add
push
jl
sbb
and
jle
jno
pop
pop
pop
adc
dec
cmpsl
sbb
add
out
mov
pop
shlb
clc
addr16
xor
lea
lea
inc
cmp
dec
out
add
jmp
subb
sti
imul
arpl
lret
je
in
mov
jns
push
js
pop
scas
lods
dec
and
push
adc
pop
push
cmp
fcmovnb
push
fwait
push
xchg
mov
outsl
out
cltd
pop
inc
adc
pop
sub
xor
push
cmp
add
xor
mov
mov
mov
push
in
xor
loopne
mov
and
xchg
mov
jne
fldenv
test
loope
push
jbe
negb
xor
or
jmp
jno
jnp
push
sbb
fdivrl
push
js
ljmp
pop
sub
das
push
pusha
mov
add
lcall
insl
call
and
lods
ficoms
push
and
test
dec
cli
jmp
je
rol
clc
loop
adc
dec
mov
test
mov
stos
push
sbb
cwtl
pop
mov
sub
push
cmp
les
in
enter
cmpsb
xchg
fnsave
dec
lods
inc
insl
dec
pusha
add
or
pop
and
mov
push
test
stc
addr16
test
test
outsl
adc
data16
push
test
into
orl
nop
or
push
add
sub
mov
and
adcb
pop
xchg
outsb
les
sub
inc
sbb
rcrl
jnp
xchg
fucom
insl
out
pop
xchg
imul
xchg
inc
call
xchg
aas
incb
je
pop
testb
sahf
xor
mov
mov
ret
inc
mov
mov
out
xor
mov
xchg
xor
aad
jae
or
hlt
mov
repnz
pop
subl
out
mov
inc
inc
sub
sub
xchg
std
dec
stos
cmp
aas
adc
shrb
mov
push
push
mov
jg
xchg
dec
pop
testl
lock
lcall
or
cltd
push
xchg
mov
shll
inc
jbe
sbb
add
inc
xor
push
pop
pop
sub
push
pop
jp
push
mov
or
ljmp
push
and
test
fstpt
inc
stc
inc
or
and
into
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
jmp
push
add
aaa
mov
inc
sub
imul
adc
push
adc
adc
lock
repnz
outsl
std
ret
cwtl
aas
stos
push
or
test
bound
jge
dec
test
add
aad
xor
pop
movsl
xor
jnp
in
fdivrl
stc
cwtl
jmp
jae
and
cmpsb
mov
mov
ret
mov
dec
dec
cmc
cmp
xor
or
sub
mov
dec
out
data16
cmc
loop
mov
xchg
cltd
jg
clc
mov
imul
shl
mov
mov
jne
sbb
xchg
lods
outsb
xor
stos
cmpsb
sub
lods
jo
push
pop
sti
dec
inc
wbinvd
cmc
adc
ss
mov
es
push
icebp
xor
shll
xchg
adc
cmpsb
inc
loope
xchg
inc
fldcw
adc
mov
icebp
pop
adc
and
push
push
and
pop
mov
jae
xor
fcoml
rclb
cwtl
pop
pop
loop
jp
mov
scas
sahf
inc
add
test
aad
mov
add
sbb
fstl
sub
lahf
cmp
ret
pop
std
out
les
or
repz
jg
stos
mov
insl
dec
push
lods
push
imul
ret
ficomps
adc
mov
mov
fnstcw
adc
and
pop
dec
sbb
loop
push
jnp
push
adcb
mov
ljmp
sbbb
incb
jmp
fisubs
loope
mov
jne
push
scas
lds
pop
pop
jbe
fcmovnbe
pop
mov
add
aad
mov
mov
adc
push
xchg
adc
jb
repz
xchg
lock
cmp
ja
aaa
pusha
xchg
negl
push
out
les
dec
xchg
pop
es
testb
xor
call
pop
pop
sub
pop
xchg
dec
ljmp
or
loopne
inc
lret
lock
insl
addr16
movsb
mov
lret
in
leave
into
mov
push
push
inc
lret
mov
mov
or
sahf
mov
sub
outsl
stos
adc
lds
push
cwtl
js
out
push
cmp
movsl
xor
bound
fisubs
lret
mov
shll
sub
stc
in
dec
inc
out
mov
insb
cs
xchg
lea
insw
out
dec
mov
dec
mov
rolb
jecxz
inc
jns
test
out
dec
sub
fsubrl
movl
je
aam
gs
ss
pushf
mull
fdivp
push
xchg
addr16
xor
xlat
xchg
add
shll
imul
and
sub
add
inc
lods
push
leave
dec
sub
inc
aaa
and
jge
lods
push
leave
or
sarl
xchg
fsubs
cmc
xor
lock
pop
and
cmp
inc
bound
add
ljmp
imul
incb
xchg
dec
cltd
je
xor
jnp
dec
xchg
pop
xor
jmp
jp
aas
clc
dec
dec
imul
add
pusha
xchg
lret
xor
or
call
pop
inc
lods
mov
rcl
jns
fisubs
jns
das
scas
das
aad
push
inc
subl
push
loopne
aaa
or
sti
pusha
divl
popf
rcl
inc
pmaxsw
stos
xlat
stc
pusha
pop
cmc
test
das
inc
xchg
ljmp
mov
pushf
jge
ret
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
jmp
and
pop
sbb
push
cmp
ret
sbb
adc
movlps
test
bound
test
dec
lea
out
jns
ds
out
mov
mov
pop
hlt
push
xor
in
pop
inc
inc
xor
push
hlt
repz
mov
mov
pop
nop
pop
xor
ja
stos
fildl
cmpl
fdivl
in
dec
daa
mov
in
mov
pop
xchg
loop
dec
sbb
inc
notb
shlb
push
add
iret
les
mov
fs
sub
or
jmp
cmp
out
andb
sub
outsl
div
inc
ja
mov
sub
cmp
add
jns
dec
jl
out
sub
sbb
neg
cmp
add
or
mov
mov
test
ror
das
pop
movsb
std
add
mov
inc
xor
mov
test
out
or
mov
add
pop
outsl
add
ds
add
in
icebp
loop
jg
repz
jbe
pop
sub
imul
mov
adcb
loope
pushf
rorb
jecxz
es
push
in
pop
cmp
cli
mov
xor
mov
call
fadd
mov
lock
push
cmpsl
rolb
les
push
pop
addr16
clc
and
je
sub
jecxz
repnz
xor
push
xchg
jmp
xor
add
push
dec
pop
lcall
test
nopl
jo
inc
leave
ret
and
or
pop
jle
push
adc
jge
and
pop
push
mov
test
jae
insl
mov
xchg
cmp
aam
adcb
push
aaa
pop
imul
imul
push
lds
mov
cwtl
cmp
subl
imull
sub
les
shl
mov
cmp
stos
dec
or
xor
fs
leave
and
cmp
or
xchg
stos
test
es
test
hlt
stos
sub
jo
dec
cli
pop
mov
xchg
push
iret
dec
push
dec
sbb
das
sbb
mov
out
out
repz
mov
mov
xor
lods
mov
mov
adc
imull
fmull
dec
cmp
test
in
mov
aad
xor
push
imul
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
jmp
pop
rolb
sbb
sbb
popf
fs
inc
push
push
sbb
adc
movlps
loop
and
in
out
inc
movsl
xor
xor
fwait
daa
hlt
mov
add
dec
outsb
loope
mov
les
adc
sahf
or
fmul
idivl
test
stos
sbb
adc
call
dec
add
test
add
test
add
lahf
mov
lock
mov
push
in
ljmp
icebp
aaa
xchg
mov
stc
xor
rcr
inc
popf
xchg
or
cltd
dec
add
sbb
out
mov
pop
mov
popf
aaa
hlt
add
and
or
adcb
clc
fs
int3
jnp
xchg
sbb
insl
sbbl
test
sub
dec
frstpm(287
pop
xor
sbb
mov
in
btr
or
adc
push
js
lret
nop
jle
out
cli
stos
movsb
mov
lcall
in
rcl
dec
rcl
push
stos
mov
lods
bndstx
cli
jb
add
push
mov
dec
and
rol
push
push
pop
imul
and
pop
adc
out
lret
mov
hlt
cmpsl
and
pop
mov
lret
xor
les
stos
push
jp
xchg
adc
dec
mov
adc
xchg
lods
and
dec
out
int
dec
ret
aam
and
mov
sbb
add
sbb
jmp
dec
enter
negl
dec
loop
pop
jo
inc
xchg
pop
jg
or
mov
push
lcall
inc
xor
adc
aaa
daa
stos
sbbb
cmc
dec
inc
pop
mov
in
imul
jle
lods
jmp
jl
dec
xor
leave
gs
inc
jl
in
int
jecxz
lods
sbb
out
push
push
add
pop
adc
mov
repnz
xchg
jle
data16
cmp
dec
icebp
push
push
mov
fsts
shrb
pop
mov
mov
inc
mov
lods
mov
mov
jne
inc
sub
push
jg
inc
mov
popl
fsubrs
adc
sbb
dec
pop
pop
jbe
test
mov
lods
pop
push
fdivl
sbb
cmp
sub
das
mov
sbb
iret
stos
int3
adc
sarl
push
ss
push
popl
mov
sbb
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
jmp
repz
push
cmpb
adc
or
push
adc
decb
adc
mov
lods
sbb
arpl
inc
push
pop
sub
dec
mov
mov
or
push
jecxz
stc
adc
add
pushf
push
adc
or
lret
or
cmpsb
xchg
in
and
cmc
pop
loop
shr
jmp
mov
sub
fstpl
mov
xor
and
in
fisubs
aas
mov
imul
ficoms
mov
int3
int3
push
xchg
lds
inc
inc
jns
pusha
cwtd
push
adc
in
xorl
inc
mov
jae
xchg
sbb
repz
iret
clc
daa
lods
in
jns
int
xor
and
pop
mull
xor
movsb
mov
and
lds
nop
cmp
dec
imulb
sbbb
lods
pop
push
jg
sbb
dec
shll
xchg
inc
das
repz
orb
mov
push
ret
repnz
insb
scas
sahf
shr
movsb
in
sbbl
popf
mov
rorl
cld
sbb
mov
jbe
pop
frstor
xchg
xchg
clc
insl
cmp
mov
ljmp
and
cld
xorl
fcomps
cmp
sbb
xchg
pop
xor
sbb
movsb
mov
and
orl
in
loopne
repnz
mov
in
pusha
lret
cltd
mov
inc
leave
xor
mov
ffreep
je
inc
and
movsb
pop
push
mov
movsl
adc
fiadds
mov
in
aas
add
mov
je
cmpsl
add
fdiv
bound
jns
sbb
mov
outsl
mov
cmp
xchg
into
mov
addl
and
xor
outsl
in
mov
pop
adc
bound
bound
icebp
sti
push
aaa
imul
lock
xor
sarb
or
fs
add
mov
in
cli
jmp
ljmp
pop
fstl
lahf
mov
add
sub
adc
addr16
push
roll
inc
dec
jo
mov
jge
call
push
insl
mov
mov
push
gs
ss
jno
mov
mov
inc
jns
and
mov
cmp
push
rorl
pop
sti
loope
xchg
jle
sbbl
aam
inc
ja
testb
cmpsl
ret
iret
mov
das
ss
push
cld
in
pop
aaa
rcr
test
xchg
sahf
adc
and
dec
fadds
xorb
cmp
sub
mov
mov
sbb
mov
sub
mov
sbb
add
jmp
mov
bound
popa
adc
and
adc
decb
adc
sbb
arpl
in
add
add
int3
push
addb
mov
inc
jl
cmp
lock
out
xchg
push
int
ss
dec
push
adc
xchg
clc
sbb
push
jno
ds
cld
xor
jp
lret
rclb
push
add
dec
sbb
add
loopne
std
sub
or
ss
pop
shrl
pop
leave
pop
test
or
insl
rcrb
shll
movsl
jmp
mov
repz
mov
andb
sbb
pop
call
and
add
js
movl
cli
xchg
lock
clc
popf
xchg
pop
push
ret
push
sahf
sbb
or
jmp
mov
mov
xchg
mov
cmp
fcomip
cmp
cmpl
mov
mov
or
add
cltd
shll
inc
jp
in
in
sbb
jae
pop
lods
adc
addr16
dec
pop
js
outsl
dec
clc
sbb
xchg
cmp
rcl
test
push
mov
mov
fildl
inc
or
ret
sub
es
out
push
rcrb
hlt
jo
adc
hlt
mov
movsl
mov
stc
inc
mov
xor
int3
pop
dec
test
orl
mov
pop
fcomi
insb
cvtpi2ps
jg
idiv
pop
jg
push
shrb
mov
sbb
sbb
jae
arpl
out
cmpsl
clc
cld
fldenv
scas
push
cmpb
bound
push
push
hlt
xor
rolb
test
xchg
iret
popl
int
cmp
clc
addr16
fbld
xchg
xor
aam
hlt
stc
pop
mov
add
mov
mov
push
ret
mov
loope
pusha
gs
sub
scas
push
sbb
aaa
dec
sbb
sbb
adc
or
dec
in
xchg
adc
dec
jecxz
loope
xchg
jg
outsl
jg
xor
pusha
jnp
add
inc
js
xchg
addr16
cltd
sub
sub
pop
test
inc
stos
mov
mov
inc
daa
imul
shlb
inc
cld
sub
mov
lret
insl
push
ds
jmp
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
jmp
jp
push
sub
pop
cmp
arpl
lods
pop
or
adc
movlps
pop
or
lret
dec
bound
pop
pop
sbb
sbb
imul
mov
xor
xchg
in
pop
jae
add
loop
das
rcrl
adc
cltd
or
add
pop
insl
add
imul
les
sub
jbe
lods
cmp
imul
std
mov
shlb
out
sbbb
sub
mov
cld
sbb
pop
lret
mov
lods
or
fs
xlat
mov
push
sub
dec
jno
and
cld
push
and
jge
lahf
mov
mov
xorb
popf
mov
arpl
add
mov
lds
xchg
popf
cli
gs
inc
mov
add
scas
test
imul
pop
mov
into
inc
xor
addr16
dec
or
mov
inc
add
push
adc
imul
sti
push
jge
xor
or
inc
mov
and
jbe
bound
jmp
scas
or
and
xlat
sbb
jnp
cmpsl
cltd
push
sbb
add
rorl
nop
lret
jnp
hlt
add
add
push
test
dec
int
cs
in
cmpsl
push
xchg
idivb
popa
xchg
lcall
adc
daa
push
rol
sub
test
mov
jl
rclb
add
test
mov
and
inc
into
nopl
leave
or
daa
lcall
outsb
rcrb
sub
lret
adc
fld1
xchg
js
cmp
dec
jbe
arpl
iret
jno
mov
jle
sub
call
test
in
call
aaa
xor
mov
push
add
cmovge
loopne
inc
sub
jns
lds
mov
mov
lock
cmp
jmp
and
sub
pushf
mov
xlat
pop
ficompl
mov
imul
stos
nop
rcll
aas
mov
rclb
rolb
mov
sbb
ja
js
cmpb
add
lcall
lock
rcrb
sub
push
push
inc
test
daa
mov
push
ljmp
mov
lahf
inc
lds
mov
fs
fidivrs
ljmp
xchg
adc
stos
pop
subb
lcall
ljmp
enter
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
jmp
mov
call
sub
push
mov
push
adc
rorl
adc
enter
or
repz
hlt
in
lret
xor
sbb
sub
pop
dec
test
jmp
fcoml
mov
iret
adc
xchg
cmc
mov
adc
mov
iret
add
lcall
push
mov
int3
xor
or
xor
xor
into
xchg
cld
fstpl
add
ret
aaa
aas
xchg
or
cmp
cmp
jmp
lret
cs
jae
add
cmc
mov
test
in
xchg
hlt
sahf
add
sbb
xor
stc
mov
sbb
or
mov
xor
rclb
vmwrite
aas
cmp
insb
xchg
repnz
cmp
or
adc
outsl
pop
bnd
cmp
mov
mov
jmp
out
rcr
dec
adc
jo
adc
mov
pusha
pop
inc
fldcw
repz
inc
xor
movsb
repz
insl
scas
jo
xchg
rclb
push
push
fnsave
int
fwait
and
pop
xchg
popa
in
mov
jnp
xchg
adc
repz
and
sahf
in
int
lcall
les
addl
sub
divb
repnz
xor
dec
rorb
sbb
test
sbbb
and
xlat
inc
jnp
jmp
mov
sbb
pop
mov
push
jg
xor
pusha
sbb
or
insl
add
jle
push
ss
adc
loop
mov
mov
add
or
imul
dec
jno
rorl
xchg
sub
lods
es
fs
loop
lods
lds
leave
lea
jg
inc
dec
or
jbe
test
and
clc
jae
add
lahf
dec
add
cmp
sahf
rol
sbb
push
push
jge
pop
mov
aam
out
mov
adc
ds
out
fimuls
add
pusha
in
or
lcall
cmp
repz
push
daa
out
arpl
repz
outsl
mov
popa
or
sub
cmpsl
xor
cli
scas
mov
aas
adc
notb
sbb
adc
and
push
pop
adc
das
popf
std
jecxz
or
aaa
mov
mov
cmp
aad
fisttpll
test
inc
inc
cld
ljmp
jmp
inc
int3
mov
add
inc
rcr
jg
add
inc
aam
sub
add
inc
fmuls
sldt
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jl
and
pop
popa
loopne
stos
iret
inc
into
lods
add
movlps
call
gs
pop
inc
scas
sbb
ss
mov
cmp
pop
jp
inc
cli
popa
and
cld
aam
jo
cmp
xor
sbb
popf
lods
fimuls
daa
movsb
loope
sub
sarb
pop
adc
scas
mov
ret
aaa
jns
push
nop
inc
std
and
mov
inc
out
adc
pop
or
inc
push
or
mov
cmp
jmp
div
push
test
es
xchg
push
mov
test
lahf
and
fs
xor
push
popf
xchg
repz
fidivs
out
and
cmp
rorb
xchg
pop
pop
subb
dec
cmp
xchg
xchg
mov
push
fs
pushf
xchg
adc
sbb
iret
pusha
jb
adc
and
es
cltd
mov
mov
cs
lret
cmp
mov
add
mov
cmp
call
jmp
arpl
mov
imul
cltd
in
and
push
aad
dec
in
jmp
cmp
mov
mov
loop
add
mov
dec
cmpsb
add
ss
stos
gs
mov
add
sti
popa
push
jnp
fs
out
sahf
fs
cmpsl
pop
addr16
fwait
andb
orl
scas
mov
mov
sbb
xor
mov
jae
dec
push
fnsave
stos
cmpl
in
mov
test
lahf
loopne
xlat
inc
rcl
mov
lea
adc
xchg
out
mov
mov
mov
mov
insb
movsb
pop
out
xchg
cltd
clc
dec
mov
adc
push
adc
xchg
rcl
jne
dec
mov
xchg
mov
sub
sbb
and
outsl
nop
jmp
fwait
dec
inc
aaa
fs
lret
popf
inc
mov
popf
loope
push
jno
sub
sbb
and
aad
sti
out
stos
cs
mov
jle
les
pop
xchg
and
or
or
incb
jo
out
mov
roll
mov
cmpsb
hlt
scas
outsl
ss
lret
push
xchg
cwtl
or
cmp
scas
push
mov
jnp
fmuls
mov
adc
popf
bnd
push
xchg
jbe
inc
and
dec
ret
leave
add
dec
mov
jl
xor
xor
or
mov
call
xchg
sbb
out
lret
xor
test
push
push
cmp
test
sbb
lea
adc
pop
sub
pusha
add
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
jmp
mov
loop
lcall
stos
cmp
js
clc
adc
popa
movlps
lret
fbld
or
mov
sub
loope
add
jnp
cld
test
mov
push
shrl
or
jp
inc
push
jb
sub
lcall
push
add
into
pushf
daa
dec
lods
dec
jne
addb
scas
fidivs
push
ret
notl
sub
mov
repnz
dec
dec
jns
bound
pop
xlat
scas
jb
inc
xchg
mov
pushf
sbb
out
inc
imul
dec
dec
xor
add
sub
mov
ss
mov
popa
lods
sbb
pop
fcmovb
lret
inc
ss
lods
pop
xor
mov
cmpsl
push
std
enter
sub
inc
jle
dec
xor
mov
jns
add
repz
xchg
fnstenv
dec
sub
test
movsl
push
push
test
or
fists
push
inc
es
adc
dec
decl
cmp
and
mov
cmp
xchg
outsl
mov
xor
hlt
push
sub
out
add
imul
fnstenv
sbbl
push
call
aad
cld
test
xor
fcoms
mov
leave
testb
ja
mov
or
mov
in
imul
testl
and
adc
pop
fiadds
xchg
pop
nop
inc
cltd
inc
mov
mov
push
insl
add
mov
sti
add
jl
gs
jle
push
fldcw
addr16
jbe
cmpsb
sti
js
pop
in
xor
repnz
lahf
cltd
push
aaa
lea
enter
les
ds
fnsave
cli
into
lcall
outsb
jns
je
jb
fnstcw
adc
in
mov
add
mov
sub
and
sti
push
shlb
mov
mov
daa
adc
inc
lock
or
xchg
adc
sbb
mov
cli
xchg
inc
jle
daa
movsl
push
aad
inc
push
or
jmp
mov
in
mov
in
xchg
in
xor
mov
inc
ljmp
mov
pop
lds
mov
inc
mov
mov
std
ss
fcmovnu
test
clc
jmp
xchg
or
sub
mov
xor
test
rcrb
mov
mov
pop
push
jl
adc
lahf
pushf
mov
call
push
ror
push
rol
jae
lcall
add
cld
stc
test
in
adc
lds
cs
pushf
ja
mov
hlt
mov
xor
sub
div
mov
mov
or
xor
mov
jmp
sti
je,pn
sub
stos
and
adc
popa
movlps
sub
jne
jmp
ret
mov
movsl
and
aaa
icebp
inc
mov
stc
or
push
repnz
mov
sbb
mov
fldenv
fisttpl
je
scas
mov
cmc
ss
mov
xchg
add
xor
xchg
pop
leave
fcmovnb
insb
or
xor
fwait
xchg
leave
repnz
inc
divl
adc
sbb
push
lcall
mov
push
call
fldl2e
mov
mov
outsb
enter
loop
lds
lods
push
lea
in
adc
insl
pusha
mov
dec
int
mov
add
cmpsl
xchg
xorb
pop
mov
loopne
adc
mov
push
inc
add
xchg
lret
stos
adc
inc
arpl
fnstenv
cmp
lahf
add
hlt
les
xchg
adcl
and
and
jb
push
cs
jecxz
pop
cs
inc
or
faddl
ret
leave
testb
in
cs
call
enter
xchg
hlt
insl
imul
aas
cmpsb
ficompl
xchg
pop
subb
mov
call
aam
inc
pop
lahf
sbb
push
out
fisubrl
out
xor
loop
mov
js
mov
push
push
sbb
cmp
cli
scas
lea
rep
out
sbb
sub
mov
add
add
mov
cmpsb
aam
roll
push
mov
ret
mov
scas
shl
pop
jnp
iret
xor
xchg
outsb
jp
fisttps
sti
rcll
test
inc
sbb
popa
xchg
scas
pop
push
sbb
sub
or
jb
pop
int
out
add
adc
sahf
cmpsl
shl
add
shrl
and
and
inc
and
nop
xor
mov
xor
sbb
push
jg
mov
mov
mov
mov
aad
fsubrl
lea
mov
adc
loop
sbb
mov
lods
mov
mov
add
hlt
test
and
mov
sub
jp
dec
movsb
stc
mov
xor
repnz
dec
imul
call
jno
push
jg
inc
imull
jne
mov
push
jge
sub
jg
in
into
in
pop
inc
or
inc
and
or
and
ret
jmp
inc
push
dec
loopne
mov
mov
sbb
cmpsl
repz
test
add
xor
rorb
cld
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
jmp
xchg
and
jp
sbb
lods
xlat
mov
adc
popa
movlps
dec
fcmovnu
movsl
in
jnp
nop
pop
ret
cs
lret
adc
into
insb
jge
mov
sbb
cmpsl
decb
jns
inc
dec
pop
mov
iret
imul
cmp
pop
loopne
inc
push
aas
daa
mov
sbb
push
fiaddl
in
adc
adc
sbb
ficoml
insb
fadds
daa
pop
push
jl
pop
mov
imul
mov
loopne
addr16
icebp
es
jb
or
xor
mov
jnp
jecxz
aam
push
jle
std
test
cmc
sti
or
test
or
jns
cmp
hlt
aam
cmp
and
pop
mov
insl
lods
push
xchg
push
mov
xchg
xor
cmc
mov
xchg
push
faddp
cld
test
cmp
pusha
xor
pusha
add
sahf
cmp
scas
push
sbb
sub
aaa
cmp
jbe
sbb
jb
mov
fdivl
adc
out
xchg
xchg
fadd
lock
jmp
sbb
jle
cmp
fsts
incl
movsl
cmp
iret
not
cs
cmp
ret
or
pop
outsw
adc
push
test
dec
out
es
ret
jg
fisttps
fwait
icebp
cltd
fistpl
rcll
fwait
outsb
or
xchg
loope
popf
add
xor
fisttpl
bound
fsubrp
jno
pushf
inc
mov
sub
xor
rorl
or
pop
jmp
pop
out
pushf
fsubrs
push
test
int
aas
xchg
popf
loope
jmp
jns
adc
xchg
push
mov
dec
imul
or
push
or
and
and
leave
and
xor
and
sbb
std
or
es
pop
ret
inc
shll
shlb
out
pushf
fists
add
rorl
cmpl
mov
pop
xchg
hlt
lea
or
aam
loop
adc
adc
inc
mov
ja
sbb
jl
mov
cmp
xor
push
psubd
adc
jle
push
or
mov
push
lahf
rcl
pop
dec
ret
add
sub
inc
xchg
and
imul
aam
push
dec
in
loopne
inc
mov
lds
arpl
mov
mov
rolb
lahf
jae
test
mov
xor
hlt
les
mov
push
or
jno
aas
inc
pop
mov
cmpl
loope
movsl
ljmp
sub
mov
popf
pop
jne
jecxz
outsb
inc
pop
xor
cltd
adc
movsl
sbb
sbb
dec
dec
scas
mov
sub
push
mov
imul
jl
rorb
adc
ret
fmuls
jnp
add
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
push
addl
push
mov
or
mov
push
mov
sub
mov
shrd
cmpl
mov
mov
mov
jmp
movl
not
jae
push
push
pushl
pushl
call
movl
sbb
xor
mov
mov
sub
imul
add
xorl
mov
or
addl
shr
mov
mov
mov
mov
xor
mov
xor
xor
cmpl
mov
mov
movl
jmp
movl
ja
push
push
pushl
call
or
orl
sub
movl
mov
mov
sbb
sbbl
mov
sbb
mov
or
mov
mov
andl
shl
adc
mov
add
shrd
negl
xor
shr
xor
mov
adc
mov
xor
or
mov
mov
negl
mov
mov
mov
mov
cmpl
movl
mov
mov
jmp
mov
mov
ja
push
push
push
push
push
push
call
mov
mov
sub
sub
and
mov
xor
xor
sub
imul
sbb
add
mov
mov
andl
mov
mov
shl
xor
jmp
filds
scas
pop
sub
out
div
je
cs
adc
push
cmpsl
loopne
aaa
xorl
sub
ja
mov
sahf
fcmovnbe
int3
rcl
xor
sarl
sbb
or
or
lea
adc
add
mov
add
inc
jmp
stos
repnz
ss
idiv
jge
push
cs
gs
in
rorb
nop
scas
or
xchg
inc
add
mov
xor
loope
push
cmp
jle
sarl
jl
add
jg
xorb
dec
int
data16
push
rep
mov
sti
cli
or
sub
mov
cltd
es
shl
cli
fisubl
mov
out
adc
and
call
in
das
xor
std
je
add
rolb
sub
dec
insb
or
push
or
jg
sub
in
call
shlb
int
or
adc
mov
scas
call
jo
fucomip
dec
mov
xchg
stc
pop
push
jae
push
jle
out
jne
fistpll
shl
in
adc
pop
mov
scas
sbb
divl
insl
mov
aas
dec
mov
rcll
pop
fcmovne
ljmp
outsl
xor
adc
leave
cmp
mov
std
push
test
in
rolb
xchg
fmuls
pop
xchg
mov
mov
xchg
cmpl
pop
xchg
pushf
add
fldl
daa
movsb
loope
in
fwait
loopne
xchg
xchg
dec
arpl
pop
xor
es
imul
inc
xor
adc
adc
out
jo
or
popf
lret
push
and
xor
xchg
push
jg
add
jb
pushf
mov
jp
add
aad
aaa
ror
popa
pop
inc
jne
fbstp
pop
stos
mov
insl
cld
sahf
xchg
pushl
jge
dec
rorb
mov
push
xor
pop
push
repz
repnz
jecxz
stc
pop
int3
adc
enter
aaa
rolb
call
xchg
sbb
push
inc
and
xor
int3
in
int
cmpsl
and
cmpsb
pop
cmp
xchg
stc
fs
pusha
pusha
fimuls
into
sbb
aas
lcall
or
enter
lods
movsl
sub
adc
mov
push
dec
xor
clc
xchg
xor
clc
and
fcmovnu
jae
sub
or
incb
rcrb
pop
movl
push
mov
fstpl
xchg
sbb
fcmovnb
add
adc
add
movb
mov
xor
adc
shld
mov
shl
mov
movl
movl
movl
cmp
movl
jne
cmp
je
mov
cmpl
mov
notl
movzbl
mov
jmp
mov
jbe
pushl
push
push
push
push
call
or
sbb
not
movzwl
adc
xor
xor
and
mov
add
xor
add
xor
add
movzwl
xor
mov
cmpl
movl
movl
not
mov
jmp
mov
movl
jge
pushl
push
push
call
or
or
movl
andl
orl
movzwl
adc
andl
adc
xor
incl
xor
xor
xor
mov
sbb
mov
shld
movl
shl
movl
cmp
movl
jne
movl
cmp
movl
je
cmpl
mov
mov
jmp
mov
jne
push
call
addl
and
and
and
movzbl
or
xor
mov
mov
mov
adc
mov
mov
mov
sub
xor
push
pop
xor
xor
xor
jmp
shlb
jno
jno
stos
sub
cmpsb
js
push
scas
insb
test
adc
xchg
movlps
imul
into
cld
lahf
sub
pop
and
or
xchg
das
xchg
inc
jmp
in
inc
sarl
lods
sbb
aaa
push
int
jge
les
lret
lds
mov
push
mov
mov
jp
xchg
sbb
mov
push
lods
cmp
pushf
xor
lock
loope,pn
push
push
ds
push
mov
aad
pop
stc
push
fnstsw
pop
lahf
and
test
outsl
sarb
xchg
arpl
int3
add
aad
add
lea
cs
cmpl
mov
insb
jnp
pushf
arpl
out
std
push
test
call
dec
in
lahf
dec
hlt
ficompl
adc
movsb
or
mov
push
aam
jo
insb
and
into
push
movsl
mov
cs
push
push
cmpsl
jle
jbe
fldt
and
xor
xor
fnsave
push
mov
adc
mov
adc
mov
popa
xchg
add
sub
bound
mov
mov
push
iret
mov
loop
out
inc
cmp
mov
int
mov
dec
negb
jmp
jl,pn
mov
lds
je
pop
add
imul
mov
movsb
add
sahf
pop
push
dec
hlt
mov
rcrl
mov
int
lods
mov
cmpsb
xlat
loopne
sti
sahf
cwtl
lret
xlat
mov
inc
cs
xor
decl
fsubrs
cld
mov
mov
xorl
or
xor
xchg
outsl
mov
cmp
ffree
lds
cmp
lods
sbb
stos
xchg
cmp
push
pop
ss
dec
int
pop
fcompl
add
xorl
orl
mov
or
daa
add
jbe
pop
lret
inc
push
test
dec
cmp
mov
sti
xchg
pop
test
ret
pop
mov
insb
sar
out
inc
push
jne
jle
inc
xchg
loopne
mov
mov
sbb
jbe
ror
movsb
cmc
cmp
xor
inc
add
mov
imul
xor
mov
daa
xchg
mov
xchg
add
adc
subb
jecxz
inc
dec
sub
pop
xchg
je
movsb
xor
cmp
inc
addr16
lret
mov
sti
bound
jbe
icebp
pop
out
cmpsb
dec
sub
cld
and
icebp
push
pop
push
mov
daa
cmc
jnp
imul
nop
rclb
orl
cmc
jo
push
sbb
lahf
pcmpgtd
jno
add
popf
fcmovnu
mov
test
or
push
adcl
mov
xorl
xor
movl
shr
or
cmpl
mov
mov
movl
jmp
movl
movl
ja
pushl
pushl
pushl
push
pushl
call
or
or
xor
add
and
add
xor
mov
xor
mov
mov
mov
mov
mov
push
cmpl
mov
movl
jmp
mov
mov
jae
pushl
call
sbb
adc
xor
movl
orl
add
pop
andl
sub
cmpl
mov
mov
jmp
movl
movl
jne
push
push
push
call
xor
movl
or
or
subl
adcl
mov
xorl
add
addl
mov
subl
lea
mov
mov
mov
xorl
jmp
outsb
xchg
or
pop
pop
stos
adcb
fistl
adc
lock
xor
mov
ja
int3
aas
int
jmp
fucom
mov
test
lahf
jns
sti
stc
ja
shlb
lcall
xchg
pop
jns
lret
into
sbbl
ret
or
pop
sub
out
lea
mov
jmp
hlt
cmp
adc
les
xlat
push
les
aad
inc
cmp
stc
cld
cmpsl
push
cli
jl
repz
jge
ss
push
jae
xor
andb
adc
jae
pop
xor
jle
daa
imull
sahf
jge
lds
outsl
rorb
or
andl
sub
sub
test
lcall
jmp
xchg
addr16
mov
loop
jns
ljmp
mov
out
push
cmp
pushl
jg
sbb
inc
jmp
pop
inc
repz
loop
nop
hlt
pop
popf
sbb
outsl
mov
pop
mov
xchg
cmp
push
iret
int3
inc
aaa
add
push
scas
adcl
cmp
std
add
in
xchg
sbb
inc
push
xchg
xchg
rol
jns
es
cld
jle
mov
xorb
push
icebp
cmp
mov
push
inc
lret
lods
cwtl
rclb
sub
fcoml
neg
outsb
xchg
pop
sarl
das
test
pop
out
sbb
lcall
ja
stc
hlt
addr16
and
stos
sti
pusha
enter
hlt
lahf
je
dec
or
adc
notb
in
xchg
clc
pushf
lahf
stc
jge
dec
mov
es
in
mov
and
xor
jle
lods
rclb
mov
cmp
movsb
jo
mov
cwtl
pop
repz
mov
loop
pop
mov
ret
ret
mov
sahf
jl
mov
enter
cmp
je
add
jnp
xchg
xchg
stc
shr
mov
mov
es
xchg
mov
pushf
dec
pop
or
sbb
sbb
jo
add
push
pushf
lret
sbb
and
cmpsl
leave
cltd
fs
inc
js
pop
push
ja
call
inc
or
addr16
sbb
imul
popf
shl
jb
mov
pop
or
adc
stos
jle,pn
jae
cltd
es
pusha
or
scas
push
sub
xchg
movsl
stc
popa
mov
jns
lcall
inc
inc
cmpsl
xchg
arpl
bound
mov
cmc
in
adc
mov
xor
xor
andl
jmp
sub
sbbl
pop
js
lods
fildll
mov
mov
movlps
daa
test
dec
enter
xlat
rorb
loope
cmp
sbb
mov
test
xor
add
jecxz
clc
xchg
hlt
and
out
je
cmp
scas
jle
cmp
sarb
cmp
cmp
cwtl
call
cmp
add
dec
push
add
jno
sub
mov
mov
xchg
or
sbb
mov
loop
cmp
insb
mov
or
shll
cli
das
sbb
je
adc
movsb
push
leave
int
and
popl
repz
inc
jg
cmp
jnp
js
ss
xchg
test
popf
lcall
fnstsw
mov
out
in
inc
add
test
push
xor
add
repnz
xor
dec
mov
mov
cmc
jle
insl
test
scas
nop
cmp
orl
jle
stos
test
out
mov
add
xchg
and
inc
aaa
stos
das
inc
test
daa
iret
repz
lret
adc
imul
inc
arpl
adc
xlat
adc
or
in
imul
pop
cli
xor
jge
push
cmc
dec
sbb
jecxz
repnz
adc
iret
mov
adc
push
scas
imul
movsb
shll
ficoml
jg
inc
lods
lock
pop
lds
cmp
scas
push
outsl
sub
movsl
pop
int
scas
cld
inc
jno
mov
add
aas
loopne
pusha
lods
jno
mov
or
push
iret
incb
fwait
cmpsb
fdivrs
pop
xlat
jmp
or
mov
stos
loopne
xchg
add
cwtl
and
pop
or
fdivrl
lahf
push
mov
in
jl
cmpsl
icebp
pop
dec
jnp
in
xor
testb
xchg
adc
jb
pop
push
popa
cmp
test
jb
dec
pop
sub
cmp
dec
lcall
ds
jbe
xchg
sbb
rcll
xchg
movsl
aad
cmpsb
cmpb
inc
lcall
rorb
push
mov
inc
cwtl
test
rcr
loop
adc
and
dec
call
test
sti
aad
add
jmp
fnstcw
push
add
push
mov
rclb
and
imul
lcall
push
cwtl
mov
cmc
adc
sub
mov
sub
push
cmp
inc
xchg
mov
mov
fsubrp
sbb
adc
pusha
fdivl
xlat
inc
out
movsb
jns
call
leave
inc
add
lret
shl
sbbl
or
xor
mov
movl
jmp
test
repnz
cltd
dec
sbb
mov
es
adc
xchg
movlps
inc
stos
iret
das
mov
adc
dec
test
add
pusha
mov
daa
icebp
mov
fistps
arpl
cmp
push
fwait
xorb
push
aaa
push
cmpsl
push
fisubrs
mov
sbb
pusha
cmpl
out
xor
push
lods
enter
enter
xchg
fwait
js
pop
cmp
cmp
in
mov
cltd
loopne
mov
out
pop
pop
push
cld
jg
lds
mov
cltd
and
dec
sbb
scas
imul
xor
sbb
jo
push
fisttps
cmp
adc
cmp
pop
lods
test
outsl
test
fwait
jnp
test
lcall
dec
pop
or
loopne
sahf
add
lods
xchg
imul
push
ja
xchg
test
out
jmp
push
dec
inc
xchg
ret
std
inc
lds
out
adc
test
scas
rolb
pop
repnz
push
stos
jmp
xor
inc
pushf
pop
dec
jnp
in
bound
push
lods
mov
out
lret
adc
pop
add
negb
pop
repz
std
mov
fs
push
push
pop
popa
lds
in
loopne
and
aaa
add
cli
jb
pop
xchg
or
out
mov
repz
sub
dec
push
adc
push
aas
in
notl
inc
mov
pop
or
loop
daa
cmp
lock
or
movsl
mov
pusha
in
cmpsb
in
xchg
adc
arpl
mov
or
inc
ljmp
xchg
mov
ja
and
bound
inc
inc
lcall
pop
ret
movsl
leave
pop
repnz
jmp
push
cmpb
xor
and
jp
movsl
adc
call
dec
sbb
andl
and
in
add
xchg
pop
ljmp
cltd
xor
adc
shll
sub
test
cli
icebp
icebp
sbb
subb
or
stos
xchg
xchg
sub
push
pop
and
outsl
movsl
pop
scas
jl
mov
inc
or
les
cmp
adc
or
mov
add
sbb
out
mov
dec
cmp
mov
loop
lcall
push
xchg
mov
imul
pop
mov
cmp
inc
stc
sbb
mov
inc
out
add
jl
jp
iret
ss
fisttps
pop
ds
and
or
pushw
xor
sbb
cmpsb
xor
add
add
pop
test
pop
add
mov
push
lahf
fnstsw
mov
cmpl
mov
movl
mov
jmp
movl
ja
push
push
push
push
push
push
push
push
push
call
addl
and
orl
and
add
movl
jmp
mov
jns
sbb
into
lods
cmp
adc
xchg
movlps
shl
lret
push
and
or
mov
hlt
xchg
cmp
jp
push
loope
lcall
xor
pop
ret
mov
sbb
push
popf
jg
mov
std
rcrl
xor
push
mov
shlb
clc
cs
sub
adc
pop
push
and
int3
xor
jb
xchg
dec
andl
daa
add
jne
jge
push
sbb
lret
mov
mov
ret
xor
rcrb
dec
addr16
cs
dec
and
pop
mov
cli
out
mov
add
xchg
cmp
jecxz
pop
into
fistpll
std
jb
aad
insb
xchg
mov
test
dec
mov
dec
push
lahf
subb
insl
dec
jns
mov
fistpll
lock
out
pop
mov
push
ljmp
inc
push
std
xchg
sub
pop
cmpsl
mov
push
stc
mov
xchg
add
jle
adc
and
in
fimuls
mov
call
jno
cmpl
jns
outsb
stos
jne
repnz
roll
mov
stos
jg
imul
cmp
cmpsl
iret
dec
and
and
mov
imul
lea
cs
xor
mov
das
dec
push
cmpsb
lods
shll
push
in
hlt
or
fcoms
and
ds
imul
jg
loop
nop
fnstenv
fistl
xchg
xor
xchg
roll
pop
notb
adc
lret
gs
mov
mov
lds
and
ja
lock
push
pop
fsubl
adc
jl
push
inc
mulb
int3
fistps
dec
push
lcall
inc
nopl
xchg
faddl
jae
mov
sti
std
mov
xchg
ret
test
xor
or
iret
cmp
mov
jl
jb
mov
inc
lea
test
xlat
cmp
fistpl
or
add
scas
and
sub
les
adc
cli
jbe
stos
or
cmc
add
movsl
inc
push
cwtl
xorb
mov
xchg
push
movsb
in
and
or
add
fnstenv
es
loope
ret
or
sbb
movsb
test
jle
adc
sub
mov
sbb
xchg
add
inc
stos
xchg
popa
xchg
stos
pushf
daa
sub
cmpsl
adc
ja
fdivl
rorl
adcl
xor
shr
adcl
shl
sbbl
or
push
lea
subl
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
jmp
icebp
mov
cmp
pushf
mov
cmc
popf
sti
jle
leave
adc
xchg
movlps
popa
inc
mov
iret
cmp
or
negb
cmp
mov
lock
fidivs
pushf
pop
sbb
js
dec
insl
call
clts
rcrb
test
jne
nop
mov
leave
pop
inc
mov
sub
scas
sbb
add
cltd
mov
or
pop
mov
loope
sbb
sub
inc
sbb
call
cltd
pop
push
popf
clc
or
loopne
in
xor
lret
rep
mov
jbe
jmp
fldcw
cmpsl
out
xchg
aas
pop
seta
dec
xchg
sar
shrb
popa
xchg
insb
jge
or
aad
mov
sbb
mov
into
xlat
mov
popa
cmp
mov
pop
jns
nop
fcompl
mov
loopne
daa
adc
repz
clc
pop
jns
jecxz
push
lea
sbb
and
pop
int
xlat
scas
int3
repnz
movsb
jnp
push
mov
pushf
lods
hlt
or
sbb
stc
jb
push
cmp
or
out
pop
std
outsb
sbb
mov
out
mov
cmpsb
stos
gs
dec
jbe
mov
xor
sti
dec
add
in
xor
mov
aad
imul
pushf
xchg
sbb
jl
xchg
sbb
hlt
xchg
insb
xchg
sti
int
jle
jns
fidivrl
sar
pop
xor
outsb
cmc
pop
aam
pop
mov
ds
in
nop
jnp
iret
adc
js
ret
fnstcw
test
fsub
cmpb
and
fcomps
in
aam
stos
iret
inc
sbb
sub
fiaddl
aas
test
ss
sub
dec
idiv
nop
push
xor
push
dec
insl
cld
out
and
jge
in
xchg
mov
cmp
mov
pop
sti
gs
pusha
or
jl
lods
cli
arpl
add
fmulp
out
insb
mov
fistpl
rcl
mov
inc
cmpsl
mov
or
rorl
inc
hlt
add
xor
fs
sahf
add
adc
jbe
and
mov
dec
fwait
or
sbb
ss
and
mov
pop
mov
add
pop
cs
int
into
cmp
int3
mov
pop
pop
test
dec
and
xchg
int
mov
addr16
rcll
xchg
arpl
or
push
fcmovnb
es
lret
inc
mov
test
push
push
cli
rorl
call
add
xchg
ja
pushf
lock
shrl
lea
rorl
loop
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
jmp
iret
xchg
stc
cmp
dec
mov
fwait
mov
adc
addr16
push
xor
hlt
popf
out
push
mov
pop
inc
clc
jecxz
lea
es
mov
push
out
xorl
jecxz
out
mov
inc
scas
insb
shll
insl
pop
loopne
test
or
mov
pusha
mov
dec
pop
aam
sbbb
xor
sbb
sub
xor
lahf
dec
xchg
neg
out
dec
jle
xorb
xor
mov
sub
int3
xor
and
dec
jnp
push
les
dec
fnstenv
mov
or
cmc
sbb
inc
cmp
ss
adc
add
sbbl
inc
cmp
stos
imul
adc
jo
jle
inc
shll
test
test
dec
sbb
xchg
fisubrl
testl
xchg
test
xchg
cmc
ja
insl
test
fisttpll
pushf
cmp
push
xor
arpl
imul
inc
fsubl
lea
insl
dec
push
xor
cmp
outsb
arpl
push
in
xor
lds
add
in
and
imul
fdivl
das
mov
push
popf
or
das
daa
fs
jns
pop
push
iret
lds
xchg
inc
push
jae
adc
adc
ss
cmp
lret
jo
push
insb
ffreep
push
and
cmp
cwtl
jg
xlat
mov
loopne
mov
imul
cmc
inc
out
inc
loope
sub
dec
pop
aaa
mov
sbb
ja
mov
pop
or
in
test
fnstenv
or
dec
nop
sub
inc
mov
daa
test
cmp
inc
insl
leave
mov
orb
popf
sbb
in
push
mov
in
push
fs
cmp
enter
adc
push
test
enter
in
rcll
and
xchg
sbb
ret
movsb
jl
pop
or
mov
std
aad
repnz
cmp
subb
adc
test
gs
pop
pop
xor
in
mov
nop
cwtl
loopne
jbe
lea
xchg
shr
or
icebp
inc
jp
aas
jmp
sbb
lret
repnz
cmp
pusha
jge
cmpsb
jmp
leave
pop
mov
xchg
aam
mov
aad
nop
fidivs
cltd
fnstcw
cmp
cmpb
test
clc
stos
fcmovb
push
ja
mov
ret
cmpsb
mov
out
nop
stos
sahf
mov
push
lret
sbb
or
loope
mov
lahf
ret
mov
out
not
jbe
mov
test
push
xor
loope
call
jmp
imul
cltd
sbb
imul
stc
jle
mov
adc
lret
jmp
add
adc
jnp
adc
fcmovb
arpl
rcll
push
int
test
sbb
sub
sub
testl
sbb
sub
das
int
fsubs
sbb
cmc
xchg
cmp
fstl
dec
lods
repnz
or
ret
push
cwtl
push
imul
sbb
mov
xchg
jne
push
jecxz
fidivrs
fidivs
shl
xor
pushf
sbb
jmp
cmpsb
lods
mov
sub
push
test
sub
insb
insb
pop
mov
mov
loopne
mov
popa
xchg
popf
idiv
hlt
jl
andb
fisubrl
jne
insb
dec
in
and
rolb
shr
stos
dec
pop
mov
repnz
mov
sahf
xor
gs
adc
les
xchg
pop
inc
pop
cmpsl
cmp
mov
push
pop
or
aaa
mov
cmpsb
call
xchg
sbb
js
subl
test
test
into
push
pop
movq
or
decb
inc
or
insl
sub
nop
mov
mov
je
lods
fwait
xchg
int
stc
push
jno
cmp
leave
or
jo
mov
pop
out
imul
daa
sub
inc
pop
jl
mov
loopne
sbb
mov
es
call
into
ret
push
sub
push
add
jmp
lahf
push
or
gs
jp
int3
mov
rcrl
ret
movsb
mov
jle
fildl
movsl
imul
stos
dec
lods
fs
stc
cmp
in
scas
out
js
adc
and
mov
mov
mov
xor
mov
xchg
xor
ss
out
jo
scas
insb
cld
int
aad
iret
or
ljmp
jo
hlt
enter
mov
dec
mov
dec
jae
test
movsb
filds
cmpsl
xchg
and
out
push
or
pop
hlt
pop
adc
shl
mulb
scas
imul
lret
dec
sti
cmp
push
in
aad
loopne
cmp
mov
ret
xchg
mov
xchg
add
jge
mov
mov
daa
jno
adc
pushw
fsubr
jle
loopne
add
xor
dec
mov
lcall
sbb
sahf
mov
push
aad
movsl
dec
test
into
jb
fistps
shlb
pop
iret
ret
jmp
ret
push
loop
mov
testb
xor
mov
decl
dec
xor
lea
push
mov
mov
shrd
shr
mov
mov
xor
jmp
mov
mov
pop
pop
mov
lods
stos
cwtl
mov
adc
dec
xchg
sbb
mov
jmp
push
movsl
cmp
xchg
xor
add
loopne
in
inc
xchg
aad
adc
sti
je
cmp
fists
pop
test
mov
jae
inc
iret
and
cmp
dec
sahf
jg
rcrb
xchg
sbb
shlb
cmp
cmc
sbb
dec
negl
sbb
xor
sbb
daa
in
stc
repz
rorb
divb
sti
test
ljmp
mov
xor
dec
adc
and
mov
into
pop
push
into
mov
sub
in
jecxz
leave
ss
cmp
sti
out
data16
hlt
lea
imul
add
imul
jbe
ret
fstps
inc
rclb
adc
sbb
inc
sub
lods
sbb
adc
jno
in
outsl
xchg
mov
repz
xor
mov
nop
add
addl
add
add
mov
cs
std
test
mov
add
loope
ljmp
ds
mov
outsb
lods
es
mov
imull
jbe
add
push
das
push
lahf
popa
add
cld
or
lahf
mov
sbb
push
das
cmpl
mov
fimuls
adc
sbb
dec
jmp
xor
rclb
push
shl
xor
sti
ja
rorb
xchg
es
loop
es
jne
sub
sahf
int
repz
dec
xchg
mov
dec
adc
nop
pop
mov
dec
or
fidivrs
cwtl
or
rcrb
adc
mov
test
pop
inc
fisubs
sbb
lahf
xor
popa
imul
lods
stos
in
mov
out
stos
or
leave
jmp
pop
and
mov
sahf
xcrypt-cfb
cmpsl
daa
jno
lock
or
cltd
adc
inc
pop
xorl
add
lret
stos
inc
mov
or
rolb
jge
mov
cmp
and
std
in
pop
mov
mov
xchg
movsb
jno
test
pop
cmp
jae
popa
jnp
in
add
sbb
sub
adc
rcll
xor
pop
xchg
and
repnz
int
in
sbb
xchg
fidivl
xchg
adc
test
add
cs
push
sub
or
imul
in
dec
pop
push
adc
and
rorb
ret
pop
outsb
inc
add
xor
loope
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
jmp
cwtl
push
cwtl
sbb
mov
mov
xchg
movlps
out
clc
ljmp
and
not
insl
sbb
jecxz
out
jb
cmp
lahf
mov
mov
push
jl
add
outsl
cmpb
stos
flds
insl
rorl
pop
je
mov
popa
mov
ljmp
lods
imul
push
ja
jno
mov
jmp
into
gs
lock
and
mov
mov
cmp
add
gs
jno
imul
sahf
subl
das
xchg
call
ss
or
mov
lock
xor
rcrb
in
push
outsb
andl
ss
pushf
cmp
jae
or
dec
bound
xor
loop
sti
shl
nop
and
test
stos
mov
or
fnstsw
adc
lea
jne
inc
mov
pop
cmp
fwait
jecxz
cmp
dec
outsl
pop
outsb
pop
pusha
or
lea
xor
lret
add
mov
mov
fildll
xor
adcb
aad
jg
loope
xlat
clc
enter
andl
je
insb
pushf
sub
lods
and
mov
gs
imul
arpl
xor
inc
mov
inc
dec
test
cmpb
or
stc
cwtl
xor
inc
div
mov
repnz
scas
popf
xor
lods
dec
insb
int
jle
loope
xor
repz
inc
ds
xchg
popf
int3
rcrl
and
or
push
popa
test
in
stos
out
ds
push
mov
xor
scas
lcall
lds
jp
mov
pusha
out
push
ljmp
xor
or
cmp
sti
lock
dec
sub
leave
loopne
push
out
mov
or
push
je
aas
sub
sbb
sahf
hlt
repnz
fstpt
mov
push
adc
test
xor
addr16
repz
inc
xchg
sbbb
mov
mov
mov
clc
jbe
fnstenv
loop
enter
add
sbb
inc
out
lret
fsubl
xor
cmp
stc
xchg
jp
fistl
push
ret
mov
cmpsl
mov
les
shll
loop
hlt
sub
mov
xchg
clc
enter
je
dec
add
fnstenv
je
or
push
cmp
insb
push
adc
or
adc
jbe
cmpb
pop
sub
dec
mov
lret
hlt
cmp
mov
incl
add
decl
cmp
rorl
stc
cld
decl
test
cld
decl
or
lods
enter
add
or
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
jmp
jno
cmp
cmp
jno
xchg
xlat
test
jno
mov
movlps
outsl
fiadds
mov
js
mov
ficomps
scas
cmpsb
cmp
bound
adc
push
pushf
mov
outsl
insl
jb
or
push
push
mov
je
sahf
jge
xor
sarl
fstpl
and
lret
es
mov
outsb
jl
sahf
sub
out
and
ret
mov
jns
pushf
fwait
ss
jmp
packssdw
stos
ret
cmp
cmp
clc
adc
imul
mov
ss
sti
jecxz
add
dec
fcomps
je
dec
popa
sub
pop
jmp
and
pop
jle
xchg
sti
mov
pop
xor
sub
mov
addr16
ljmp
in
adc
xor
inc
inc
clc
and
cmpsl
push
mov
cmpsl
insl
xlat
out
stos
pop
js
insb
jle
or
fnstsw
adc
jbe
cltd
xor
fcomps
xor
pop
sti
jne
dec
les
push
aad
mov
dec
aam
jecxz
pop
pusha
repnz
scas
iret
mov
pusha
cld
pop
ds
loopne
shlb
cltd
sub
jno
and
rcrb
xchg
into
sbb
popa
cltd
clc
testl
lea
arpl
ret
mov
shll
xlat
dec
cld
mov
mov
pop
sub
rorb
xchg
pushf
xor
sti
inc
mov
mov
dec
lret
clc
cmp
xchg
stos
cmp
lahf
jnp
ljmp
stos
sub
roll
test
and
lret
clc
cmp
addr16
mov
jmp
lcall
dec
test
sub
inc
inc
adc
imul
adc
fcmovb
xchg
push
mov
imul
adc
fnsave
mov
stos
cli
mov
ret
xchg
ficompl
push
xor
lea
push
fdiv
push
lcall
movsb
adc
fistps
inc
add
xor
xchg
addr16
fwait
and
pop
and
pop
das
push
dec
jnp
fists
popl
adc
cmp
in
out
sbb
pop
into
mov
rolb
and
push
pop
push
push
sbb
out
adc
jp
in
push
mov
cli
cmpsb
and
sbb
sahf
icebp
mov
jge
shrl
mov
call
imul
sbb
jmp
lods
aas
sbb
cmpsl
repnz
pop
or
inc
test
push
push
jo
js
or
pop
leave
ret
mov
and
mov
or
mov
jne
sbb
mov
sbbl
mul
ret
subl
push
cmpl
mov
mov
movl
mov
jmp
movl
jne
push
pushl
pushl
call
adc
not
movzbl
xor
mov
movzwl
adc
or
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
jmp
adc
fscale
fyl2xp1
lock
test
push
mov
adc
stc
movsl
in
pop
movsl
cmp
mov
addl
out
cmpl
mov
cmp
xlat
ret
xchg
scas
scas
lods
clc
pop
imul
lcall
sahf
repz
pop
lret
mov
shl
out
push
dec
test
rcrb
add
cmc
inc
xchg
es
pop
push
int3
sahf
mov
loop
ja
pop
daa
sti
cmp
pop
jle
jmp
lock
sub
jnp
dec
jne
jnp
fucomi
dec
imul
dec
enter
std
inc
cmp
mov
inc
shrb
inc
fists
xor
adc
je
mov
mov
sub
mov
pop
and
pop
mov
imull
mov
out
xor
shrl
fs
imul
fstpl
push
sub
xchg
cmp
out
jp
cltd
rcrl
jecxz
push
cwtl
mov
ficomps
popf
out
repz
movsb
adc
push
pusha
jb
and
std
xchg
fcmovb
sbb
in
or
adc
sub
or
cmpsb
test
xor
scas
shll
cmp
out
sub
mov
mov
loope
inc
in
inc
xchg
lahf
popf
fwait
inc
cmp
mov
orb
mov
and
stos
arpl
add
inc
enter
jbe
in
in
jo
xchg
jl
sbb
and
lods
iret
jae
xor
scas
fs
ss
sbb
ficoml
jbe
add
sbb
mov
cmc
rclb
jmp
cmp
data16
mov
call
mov
xchg
inc
les
rcrb
pop
sbb
test
mov
push
lods
xor
jge
jb
xor
out
mov
pop
dec
movsl
lret
stc
repnz
sbb
cmp
js,pt
inc
les
call
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
jmp
pop
mov
push
sbb
loope
push
hlt
mov
mov
adc
mov
push
lods
loop
cmc
xor
sbb
roll
xchg
push
add
cmp
movl
jge
data16
push
cmpsb
xchg
mov
cltd
loope
scas
lea
mov
cltd
movsl
movl
jp
pop
aas
fbstp
scas
ljmp
push
xacquire
dec
repz
dec
xor
int
cmpsl
push
push
adc
inc
pushf
adc
movsb
rorb
jae
nop
aaa
in
inc
or
xchg
xchg
add
fadds
dec
ja
daa
andb
cmc
pop
push
imul
lret
jnp
call
les
addr16
out
dec
gs
stc
loope
mov
inc
std
xchg
jno
lds
lahf
cmp
jg
lods
push
cmp
add
inc
mov
std
cwtl
jae
clc
jbe
xor
loop
jnp
and
and
scas
sub
add
in
repz
push
push
pop
fistpl
mov
outsl
jp
push
lcall
leave
pop
mov
or
ja
sahf
jl
sub
dec
adc
shlb
movsl
mov
rcrl
sti
sub
int
fcmovne
and
cli
imul
int3
mov
outsl
mov
fldcw
sub
std
imul
sbb
xor
inc
xlat
xor
mov
mov
jge
lahf
ss
fidivrl
adc
add
sbb
cmp
mov
lock
mov
mov
arpl
mov
cwtl
mov
jae
notb
out
sti
nop
data16
adcb
mov
out
inc
in
aad
mov
pop
push
hlt
insb
je
cmp
inc
mov
or
inc
jb
je
lahf
ret
ret
push
mov
mov
push
sbb
rcrb
in
shl
and
dec
push
mov
dec
bound
sbb
mov
xchg
aaa
stc
hlt
jo
or
negl
push
leave
push
outsb
ret
mov
jmp
sbb
loopne
pop
inc
andl
jae
dec
clc
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
jmp
and
popa
and
clc
inc
jbe
jno
dec
mov
mov
dec
push
call
std
pop
push
test
or
shlb
sub
call
ds
jno
mov
jg
mov
mov
and
ret
push
aad
add
add
jae
inc
out
jg
cmp
ljmp
sahf
inc
xchg
pop
icebp
filds
ljmp
fsubrl
mov
divb
jge
push
insl
pop
dec
and
pusha
jno
add
jle
shll
push
cmp
aam
xchg
fnsave
out
xor
and
xchg
test
jae
pop
push
stc
sbb
xchg
xor
inc
fidivs
aaa
scas
jle
dec
xor
adc
add
int
scas
or
adc
xchg
pop
cltd
icebp
lods
mov
rolb
movsb
xor
dec
pop
out
xchg
imul
jo
push
pop
pushf
add
inc
das
outsb
pop
and
test
mov
adc
cmp
imul
sbb
xchg
mov
out
mov
out
push
repz
nop
push
and
cmp
mov
mov
xchg
test
inc
stos
and
push
inc
jno
loop
jo
adc
mov
push
ds
jnp
or
aam
lods
pop
jne
enter
dec
push
mov
dec
hlt
and
mov
int3
mov
ja
dec
mov
cmc
mov
test
sub
fstpt
rcrl
aad
pop
repnz
idivb
push
push
iret
pop
ret
pop
xchg
imul
clc
mov
inc
lret
or
xchg
test
push
dec
mov
and
and
inc
fidivs
inc
adc
dec
sub
lret
mov
pop
push
or
sub
jne
arpl
xor
test
xchg
imul
sbb
inc
leave
mov
nop
mov
sarb
shrb
inc
adc
in
xlat
es
pop
or
push
ret
sbb
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
jmp
lret
push
out
sub
rorb
mov
movlps
sub
xor
inc
pop
scas
scas
fisttpll
add
jg
dec
clc
imul
cltd
pop
addr16
or
jo
push
inc
hlt
out
push
pop
pop
pop
xor
mov
pop
mov
repz
mov
and
dec
movsl
hlt
lods
repnz
dec
sbb
ja
lods
addr16
fildl
aad
pop
dec
inc
int
stos
out
inc
aas
daa
popa
adc
mov
cmpl
xor
mov
mov
jb
fistpl
lret
insb
lcall
icebp
jle
sub
jmp
sbb
mov
xor
add
pop
push
cmova
imul
les
ljmp
or
adcl
out
inc
pop
loopne
fcomp
jp
lods
push
andl
arpl
cmc
xchg
or
push
and
xor
sub
xlat
insl
jge
xchg
movsl
lret
cmpsb
jl
rorb
scas
sub
outsl
ljmp
ficoml
ret
xchg
push
sub
cltd
mov
pop
movl
xchg
pop
lret
adc
inc
ljmp
int
fidivl
jne
or
push
xchg
mov
cmc
cs
xchg
shrl
gs
mov
lret
into
sbb
sysexit
fadds
lock
outsl
icebp
sbb
mov
xor
repnz
mov
call
test
pop
add
daa
sub
xchg
dec
pop
clc
jle
cli
scas
adc
out
in
adc
sub
shrb
int3
mov
add
aas
ficomps
gs
push
xchg
into
or
pop
xor
psrad
mov
stc
addb
inc
ret
aam
jg
cltd
mov
adc
cmpb
mov
pop
aas
lods
xchg
sbb
test
adc
mov
cwtl
sbb
rcll
clc
adc
xchg
cli
inc
pop
call
sti
dec
adc
ds
ret
inc
lods
adc
cltd
xchg
or
cmpsb
popa
xorb
mov
xchg
test
pop
jg
dec
in
jmp
popa
xor
cmp
int
push
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
push
call
mov
movzwl
push
call
test
jne
xor
movl
jmp
mov
mov
and
mov
mov
push
cmpl
movl
movl
jmp
mov
movl
ja
pushl
call
addl
subl
subl
orl
pop
mov
mov
mov
mov
mov
andl
movzwl
subl
or
andl
cltd
adcl
movzwl
sbbl
idiv
xor
movzwl
adcl
or
and
mov
and
mov
cmpl
mov
mov
jmp
movl
movl
jne
pushl
push
call
orl
sbb
sbb
xor
add
and
mov
mov
mov
subl
mov
mov
andl
sub
andl
mov
movl
xor
add
mov
sub
movl
mov
movl
cmp
movl
jb
cmpl
movl
mov
mov
mov
jmp
movl
jbe
push
push
call
adc
movzbl
add
mov
adcl
and
add
subl
movl
movl
adc
movl
add
jmp
loope
jnp
cmp
pop
popf
push
xor
stos
or
add
pop
adc
adc
jae
sbb
pop
je
incl
mov
push
mov
mov
dec
mov
adc
and
fcomps
mov
sbb
sahf
jg
mov
sbb
das
rcl
push
sahf
out
aas
jmp
outsl
pop
jmp
clc
mov
aaa
es
sti
adc
sbb
sahf
imul
pop
push
stos
outsb
sbb
jns
push
mov
pusha
loop
xor
add
inc
push
dec
incl
mov
fistps
mov
lds
in
daa
enter
fs
pusha
daa
xchg
test
cmp
or
push
sub
test
fisttps
mov
jmp
imul
or
mov
addr16
push
mov
xchg
pop
pop
fidivrs
mov
jmp
cltd
addr16
pop
push
push
pushf
pop
push
dec
mov
pushf
xchg
stos
cmp
iret
daa
fs
add
dec
add
add
jno,pt
cltd
jne
frstor
in
cmc
inc
cmc
mov
or
or
inc
pusha
idivl
imul
ret
insb
mov
and
inc
fcoms
sub
xchg
jp
cmpsb
loope
push
push
inc
mov
xchg
push
add
push
adc
das
int
test
repz
lret
ds
call
xchg
in
fldl
jge
repnz
je
or
cmpsb
mov
cmp
popf
outsl
jg
jae
mov
xor
frstor
push
into
jnp
les
clc
mov
cmp
cmpsb
adc
nop
xchg
add
cmp
cmp
xchg
sub
sbb
xchg
add
dec
xor
push
push
mov
imul
mov
stc
or
jle
movsb
cmp
inc
sub
add
daa
out
shll
lea
pop
in
or
push
fiaddl
addl
or
push
xchg
push
add
in
lods
pop
xchg
cmp
mov
pop
xchg
dec
mov
lea
out
mov
xor
mov
xchg
negb
lret
sub
mov
js
or
mov
inc
lcall
xor
push
xchg
cmp
aad
jnp
nop
pop
pop
pop
popa
sbb
repnz
push
insl
jp
inc
and
sahf
stc
inc
pushf
call
lret
aad
jns
lahf
mov
sub
jmp
add
mov
ljmp
mov
sbb
jmp
mov
sarl
orb
inc
imul
outsb
xchg
mov
sbb
and
dec
inc
movsb
popf
pop
jg
insl
push
cld
test
popa
dec
fcoml
pop
lock
dec
out
dec
sub
mov
pushf
pop
nop
adc
std
xlat
int3
ds
das
cmp
add
lret
jmp
pop
jmp
rcr
or
mov
repnz
xor
inc
pop
adc
in
call
loopne
into
rolb
sbb
pop
rorl
les
or
fwait
xor
mull
xchg
pop
dec
pop
lret
movsl
push
add
pop
xor
movl
mov
xor
mov
mov
sub
add
add
mov
xor
incl
div
mov
add
adcl
and
subl
pushl
xorl
pushl
call
movl
cmpl
movl
mov
jmp
mov
mov
jl
push
push
pushl
push
pushl
call
neg
sbb
addl
sbb
addl
sub
adc
movl
sbbl
movl
orl
mov
mov
and
or
adc
mov
and
xor
andl
pushl
adcl
pushl
call
or
pushl
movl
movl
movl
cmpl
mov
notl
jmp
mov
ja
push
pushl
pushl
pushl
push
pushl
pushl
push
call
or
and
xor
add
movl
adcl
movl
sbb
movl
movl
add
movl
xor
mov
cmpl
mov
mov
mov
jmp
movl
not
jbe
push
pushl
push
call
movl
movzwl
or
mov
mov
add
xor
and
andl
adc
mov
sub
mov
or
addl
and
mov
xorl
sub
pushl
mov
mov
incl
add
andl
and
mov
adc
jmp
pop
push
shlb
lcall
jle
daa
pop
lods
in
adc
pop
adc
adc
xchg
shll
movsb
sbb
addr16
lahf
cmp
pminsw
scas
loope
out
mov
mov
jns
icebp
lods
mov
and
sbb
xchg
faddl
or
das
out
pop
xchg
data16
cmc
and
decl
and
mov
loope
outsl
mov
jecxz
aaa
adc
pop
add
addr16
dec
mov
or
xor
popa
adc
jns
jp
dec
xor
cmp
sbb
subb
xor
jle
test
mov
xchg
cmc
out
push
pop
pop
xor
inc
cltd
ds
stos
shr
sub
mov
add
push
sti
leave
push
xor
mov
fcoml
fnstenv
cmp
cmp
add
cmp
inc
push
in
shrb
mov
inc
add
and
and
jecxz
subl
hlt
or
pop
rorl
aad
cli
push
hlt
test
cmpsl
and
imul
aas
roll
jl
out
cltd
into
mov
fsub
jp
call
dec
call
les
jns
xchg
mov
leave
jle
leave
mov
insl
push
mov
loope
lcall
jns
mov
add
enter
nop
stc
jbe
mov
adcb
inc
jnp
add
dec
or
mov
call
push
jne
test
jnp
adc
bnd
test
mov
dec
inc
clc
push
rorl
adc
or
stc
dec
lods
popa
aaa
xor
jmp
outsl
pop
mov
dec
jmp
xor
dec
cmpsl
mov
push
mov
mov
icebp
jnp
sbb
popa
add
das
jle
ds
test
aas
mov
xchg
sbb
sbb
xchg
data16
sahf
push
dec
xor
sub
in
push
and
pop
outsb
cmp
fs
lea
imul
lods
in
mov
cmc
mov
out
out
cmp
stos
dec
sub
inc
lret
sub
clc
xchg
and
bound
ret
inc
pop
mov
jecxz
cwtl
pop
xor
gs
jb
addr16
mov
sub
call
xor
mov
test
jp
sti
jbe
int3
sbbl
xchg
xchg
mov
inc
push
ljmp
mov
sbb
hlt
ret
fiaddl
mov
int3
imul
out
std
aaa
sbb
sbb
xchg
repnz
mov
mov
jb
sub
loopne
fadds
test
mov
xor
xchg
cmp
pop
iret
mov
cltd
mov
xor
sti
sbb
iret
add
loop
add
ret
insl
imul
sbb
out
xchg
jmp
push
mov
xor
sbb
xchg
js
push
loope
loop
dec
mov
cmpsb
mov
aas
sbb
and
sub
mov
orl
xor
adcl
and
pushl
mov
movzbl
and
mov
imul
sbbl
xor
subl
or
andl
mov
sub
pushl
call
andl
dec
movl
jne
sbb
movl
mov
subl
mov
movl
sbbl
mov
call
inc
lea
cmpl
mov
mov
jmp
mov
jbe
push
pushl
call
movzbl
add
dec
dec
sbb
sbb
mov
xor
xor
sub
add
mov
adcl
lea
mov
xor
mov
mov
cmpl
mov
mov
mov
not
jmp
movl
movl
jle
push
push
pushl
pushl
call
adc
sbb
and
or
and
sbb
adc
xor
mov
adc
mov
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
push
call
mov
adc
and
or
orl
sbb
dec
xor
xor
movzwl
xor
shl
adcl
shr
or
movzbl
and
mov
xor
mov
cmpl
mov
movl
mov
movl
jmp
not
mov
jne
push
call
and
movzbl
adc
sub
movzbl
sub
movl
and
sub
mov
xor
mov
and
mov
xor
mov
mov
xor
xor
sub
or
mov
shrd
shr
inc
mov
and
mov
cmpl
mov
mov
movzwl
jmp
movl
mov
ja
push
push
pushl
push
pushl
push
call
sbb
add
mov
xor
mov
not
and
inc
mov
xor
xorl
xor
or
or
mov
adcl
push
sbbl
pushl
incl
lea
andl
push
andl
shl
orl
call
lea
sbbl
push
adcl
mov
orl
mov
xorl
lea
orl
push
mov
lea
mov
adcl
mov
adcl
mov
push
call
push
push
addl
pushl
xorl
jmp
nop
fwait
inc
stos
pop
sbb
dec
sti
adc
ja
lods
sub
adc
adc
cmp
mov
mov
hlt
out
out
lds
cli
push
aas
dec
mov
ss
mov
adc
jnp
pushf
lea
pop
testb
xchg
scas
dec
xor
adc
repz
sub
dec
test
and
fistpll
rcrb
adc
lret
sti
lret
sahf
pusha
int
fsubr
test
insb
dec
call
sbb
jp
cmp
mov
fs
push
movsl
aaa
mov
ret
and
outsb
lfs
ss
mulb
movsl
jg
rcrl
or
push
es
mov
jae
mov
fsin
cmp
push
xchg
mov
insl
pop
sub
dec
mov
push
sub
jge
mov
cmp
arpl
enter
pop
push
and
add
mov
xor
adc
fcomi
loope
repnz
and
scas
push
mov
jae
sub
pop
into
insb
push
fwait
jns
insl
xchg
xor
lea
in
sbb
jns
stc
and
ljmp
jno
lea
cli
cmc
test
ja
fidivrl
xor
xor
or
in
ds
stos
arpl
mov
bound
in
inc
cwtl
inc
popf
test
test
adc
mov
les
mov
aam
and
outsb
mov
cmp
insb
pop
jns
mov
push
xchg
rcrl
xchg
fdivs
mov
fstl
and
fidivrs
mov
sbb
scas
sub
jo
in
xchg
inc
cmp
xchg
mov
cmc
in
in
or
aaa
xor
ja
push
mov
sub
mov
das
or
pop
in
push
and
pop
sub
mov
out
aas
scas
push
sbb
and
adc
mov
jle
mov
mov
mov
xlat
jns
out
cmp
pop
xchg
fbld
stc
into
jns
fistpll
mov
mov
repnz
test
add
xor
repnz
fmull
out
cld
scas
sub
xchg
sub
sub
push
leave
out
add
cmp
ret
mov
add
xchg
and
sbbl
sub
dec
outsb
dec
push
lea
cltd
sarb
outsb
adc
clc
push
xlat
scas
sbb
and
repnz
das
xchg
xchg
inc
pop
call
outsb
pusha
mov
fwait
mov
mov
je
je
jmp
adc
fmul
cmp
repz
cmpsb
push
aas
or
outsl
xor
ja
pop
pusha
adc
jae
inc
call
jmp
cmp
and
dec
push
imul
mov
dec
mov
xchg
mov
cld
and
jl
cli
or
adc
mov
sbb
mov
mov
repz
lock
pop
ss
dec
sbb
mov
inc
insl
push
popa
nop
sti
adc
aaa
jb
pop
adc
scas
aaa
or
das
pop
xor
cmp
inc
xchg
fadd
outsb
xlat
sbb
adc
add
or
pop
cwtl
mov
dec
call
movsb
decl
cmp
add
mov
jmp
mov
jge
push
call
mov
add
add
add
xor
adc
xor
movzwl
and
sbb
mov
mov
cmpl
mov
mov
mov
jmp
movl
jne
pushl
push
push
call
or
mov
add
sub
sbb
subl
mov
adc
shr
adcl
shl
or
adcl
mov
xorl
xor
cmpl
movl
movl
mov
jmp
mov
mov
jb
pushl
pushl
call
not
mov
or
or
add
adc
mov
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
call
xor
inc
add
adc
sbb
sub
sub
cmpl
movl
mov
jmp
mov
movl
jge
pushl
push
push
pushl
call
or
mov
mov
sub
add
orl
neg
movl
incl
xor
lea
mov
adc
mov
lea
mov
mov
or
mov
adc
mov
sub
sub
andl
lea
xor
subl
movl
cmpl
mov
movl
movl
jmp
movl
jle
push
push
pushl
call
sbb
addl
xor
mov
sbb
adc
adc
subl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jl
push
call
and
movl
xor
or
xor
add
sub
add
adc
mov
mov
or
and
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
jmp
aaa
mov
add
aaa
dec
faddl
push
adcl
adc
add
sbb
int
jecxz
jae
testb
test
mov
in
scas
or
sub
mov
sub
push
repz
mov
out
sbb
out
dec
sbb
dec
xor
sti
arpl
xor
cmpsl
and
imul
mov
outsb
xlat
fbld
in
out
les
inc
and
lret
inc
das
outsb
push
sti
pushl
xchg
add
jle
lds
pop
out
add
fistps
and
adc
pop
das
or
inc
nop
out
inc
sbb
mov
sub
xchg
push
test
cmp
insl
mov
push
jbe
mul
ss
jmp
mov
cmp
jle
iret
jmp
fstpt
sahf
fdivr
ds
pushf
icebp
mov
enter
test
gs
stc
inc
pop
mov
js
jmp
lahf
sahf
pop
cmc
inc
xor
add
xchg
js
out
ds
fcoml
pop
push
cltd
lret
sbb
fidivrl
fldt
loopne
je
mov
test
cmpsl
dec
nop
or
gs
cmp
xor
dec
je
lds
sub
jle
scas
into
cmpsl
int
sti
push
jbe
sarb
call
sbb
push
scas
mov
push
out
cltd
outsl
outsb
dec
pop
sub
clc
rol
sub
fistpll
stos
mov
inc
dec
rep
lcall
out
xchg
cmp
or
sti
dec
leave
or
je
out
imul
loopne
inc
jp
stc
or
lret
mov
idivb
lcall
mov
add
push
aad
pop
adc
mov
cltd
movsb
enter
xchg
dec
mov
xchg
push
pop
mov
les
shlb
jnp
mov
pop
pop
insb
push
and
adc
dec
mov
lret
call
xor
push
push
lods
adc
xlat
and
fistl
imul
shrl
popf
lret
jge
mov
enter
pop
cmp
sbb
aam
imul
sbb
cmp
xor
jnp
and
outsl
sbb
or
add
mov
stos
inc
sub
and
stos
jmp
nop
push
jl
dec
push
cltd
or
sub
jnp
pusha
fwait
cld
xor
push
subl
stc
xchg
cmp
hlt
shll
js
outsl
inc
fmuls
sub
fldenv
inc
sub
add
sbb
pusha
mov
out
xchg
and
cmc
dec
fs
jmp
xor
sbb
mov
and
pusha
dec
xlat
pop
mov
fstpl
jno
rcrb
inc
jae
into
push
add
push
pop
scas
lods
or
sub
sbb
test
notl
xchg
push
scas
setg
push
and
std
and
loopne
stos
xchg
lods
loop
and
mov
jge
cmovb
ss
fstpl
and
or
andl
stc
xor
imul
inc
mov
loopne
pop
mov
sub
mov
sbb
mov
cmp
jne
cmp
jmp
mov
and
fwait
iret
test
std
jle
ja
adc
adc
xchg
jmp
xchg
and
xor
enter
adc
cli
fmul
rorb
fmul
push
cltd
mov
aad
les
sbb
ficomps
xchg
movsb
pop
ja
fisttpl
mov
adc
notl
jecxz
xor
loop
push
shll
pop
jb
out
or
test
rorb
or
sub
add
jl
push
inc
mov
push
inc
adc
mov
xchg
fstpl
cmp
leave
xor
pop
sti
ljmp
xchg
je
fcomi
iret
pushf
pushf
mov
xor
ss
mov
sub
movsb
pusha
inc
jg
int
fwait
sub
cmpsl
or
imul
xor
aad
test
orl
lcall
shrl
sbb
jp
in
mov
std
pop
mov
inc
push
inc
jb
sbb
and
cmpsb
imul
xor
stos
and
test
mov
sbb
dec
call
adc
test
push
mov
lods
ss
js
int3
stos
mov
mov
mov
dec
in
adc
pop
adc
mov
stc
add
dec
fcmove
xchg
jo
pop
ljmp
popf
jecxz
ds
fdivs
es
adc
aas
fwait
adc
faddp
pop
adc
addl
es
addr16
jbe
pop
loopne
test
xlat
fdivs
jl
and
mov
xor
aad
push
repz
jnp
movsb
inc
jl
int
hlt
cmp
fildl
lods
push
sar
cmp
push
pop
into
jge
and
jmp
sub
push
scas
cmp
push
jge
and
movsb
aaa
add
lods
mov
lds
push
push
rcr
xchg
in
jns
adc
adc
ss
inc
inc
lret
je
sub
mov
cmp
inc
loope
mov
jae
jb
out
and
pop
lret
dec
mov
dec
movsl
dec
fnstsw
leave
dec
iret
pop
xor
jg
mov
mov
outsl
pop
mov
stos
mov
jno
inc
pop
rolb
inc
in
daa
sub
jne
push
out
call
jns
int
shr
mov
push
push
mov
add
mov
xor
cli
pop
lds
cmpsb
or
jns
push
mov
mov
mov
and
push
shrl
jmp
mov
fidivs
sub
arpl
xchg
push
add
add
rcl
cli
loopne
loopne
dec
sti
xor
test
cmpsb
add
dec
dec
insb
and
mov
loope
sub
pop
adc
repz
jns
lods
notb
rcrb
ret
movsl
repnz
mov
rcl
aam
fisttpl
out
push
sbb
push
mov
int3
pushf
pop
imul
inc
pusha
pushf
push
xor
flds
movsb
test
sti
mov
push
jp
cmpsb
enter
lods
adcl
aad
xlat
sbb
mov
xor
test
and
add
inc
and
mov
inc
and
js
add
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
jmp
sbb
je
sub
cmp
aad
int3
lods
add
adc
adc
cmp
xor
sarb
inc
popa
pop
cld
data16
inc
mov
jne
leave
sub
pop
cs
add
mov
add
jae
cli
scas
fistps
mov
adc
fcmovu
cmpsl
fidivrs
dec
ljmp
mov
mov
int3
sub
mov
pop
adc
out
sti
sbb
dec
mov
sbb
adc
add
lret
std
or
ljmp
jle
or
mov
test
out
movsb
mov
add
out
rorb
popf
mov
adc
add
icebp
cmc
mov
cmp
mov
sub
inc
dec
sarl
fdiv
imul
sbbl
loopne
movsl
insb
ljmp
add
add
loop
xchg
in
cmpsl
push
inc
ljmp
dec
inc
sahf
xor
jmp
loope
fwait
jge
cmp
test
jmp
dec
fstps
or
push
jg
jb
adc
loopne
ret
arpl
inc
mov
dec
pop
and
or
movsl
xor
fsubs
pop
iret
stc
lods
xchg
add
xchg
sub
dec
mov
cmc
push
rclb
sbb
mov
sbb
scas
fsubl
insb
mov
push
pop
xor
dec
add
int
or
jl
lds
sbb
mov
push
clc
ja
jno
scas
cmp
mov
fcmovbe
lret
xchg
mov
pop
aam
lret
xlat
sub
sbb
fcomip
mov
mov
push
dec
es
add
pop
mov
stos
loope
pop
fisttpl
jae
in
das
sbb
lds
nop
mov
cmp
es
jp
in
js
sbbb
or
pop
pusha
and
sti
sbb
jge
dec
sub
jne
stos
out
je
fsubl
and
cmp
lcall
cmovle
xor
outsl
and
sarb
pop
mov
mov
in
xor
mov
cmp
cmp
jge
adc
push
stos
mov
cmp
mov
dec
fistl
jecxz
sahf
lret
xchg
fldenv
inc
mov
cs
je
roll
stos
add
pop
push
scas
aas
fiadds
add
inc
mov
insb
pop
popf
inc
ja
out
adc
ret
enter
cmp
imul
pop
or
sub
xor
or
cmp
sub
mov
mov
pop
addr16
in
subb
sub
lcall
sub
adc
jnp
cs
mov
xlat
repnz
das
out
imul
shl
mov
add
in
mov
mov
jb
fs
outsb
mov
pushf
mov
push
add
jg
mov
mov
imull
scas
pop
push
jo
push
xchg
cltd
inc
imul
lock
mov
lret
icebp
inc
sub
mov
sbb
pop
xchg
jg
addl
inc
jae
test
dec
out
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
adc
or
addb
dec
insl
adc
pop
adc
adc
adc
push
cli
adc
cmp
fistpll
js
es
xor
pop
movsl
cmp
mov
jge
pop
inc
mov
adc
dec
adc
lock
scas
fcmovnb
mov
dec
mov
jb
popf
inc
into
cld
inc
cmp
lret
mov
mov
jecxz
adc
or
sub
mov
cld
cmp
shl
pop
cmp
add
jae
cmp
aaa
in
loope
add
and
mov
push
mov
xlat
pop
or
testl
je
movsb
mov
sbb
lea
sbb
push
add
mov
fimuls
cmp
or
xlat
dec
cmpsl
adc
cltd
xchg
in
sarb
pop
pop
outsb
jmp
push
sbb
insl
lcall
add
jno
push
loop
loopne
push
push
in
das
adc
lds
scas
fucomip
ret
or
dec
cmp
inc
pop
push
dec
mov
and
std
pop
or
mov
dec
add
iret
das
outsl
add
xor
dec
sbb
inc
fisttps
notb
mov
out
dec
mov
jg
push
cmc
outsl
sub
cmp
loop
in
daa
add
xchg
pop
loope
pop
mov
loopne
pusha
dec
add
mov
lods
mov
insb
sub
mov
cmp
imul
pop
jb
or
adc
sahf
out
mov
adc
cmp
pop
xor
cs
pushf
sbb
mov
lahf
adc
fcmovbe
stos
or
cltd
add
test
fisttpl
xor
xor
jecxz
rol
enter
and
in
xlat
outsb
and
stc
ds
mov
clc
push
xorb
out
ds
add
das
ret
fsubr
clc
int3
inc
mov
sub
mov
jb
outsb
call
or
stos
mov
in
xor
and
mov
sarb
flds
loope
insb
jmp
stos
ds
xlat
dec
in
push
cli
dec
test
sbb
gs
rol
rorb
cmp
in
sarb
sub
lods
and
lods
mov
cmc
push
dec
inc
adc
scas
mov
vpmovqb
ret
xor
into
pop
xchg
shl
lds
mov
pop
in
push
xor
out
aas
shlb
dec
cmp
adc
xchg
xchg
jle
xor
loop
cmc
xchg
and
or
xchg
into
sbb
jb
cli
jle
in
mov
idivl
pushf
jae
xor
xor
push
pop
fnstenv
xchg
push
sbb
xor
into
sub
pop
jle
mov
adc
adc
lret
loop
xchg
dec
lret
out
fildl
outsl
jae
fwait
push
test
test
out
in
rorl
test
sub
movsl
and
push
mov
scas
call
std
mov
sbb
movsb
pop
cmp
inc
pop
cli
test
cmp
lea
fmull
inc
test
shll
and
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lods
test
jmp
insl
pushf
inc
fs
mov
adc
pop
adc
adc
mov
xor
inc
push
out
mov
call
and
hlt
loopne
pop
in
adc
cmova
cwtl
fwait
pusha
jl
add
lret
xor
pop
xchg
daa
in
dec
pusha
dec
xchg
dec
dec
ret
adc
cmpsb
fildll
loop
jnp
outsl
jecxz
push
cmp
je
fld
mov
addl
movsl
pop
mov
lret
mov
jno
push
rcrl
rcll
add
xchg
or
and
jle
incb
loope
sbb
data16
test
xlat
aam
in
add
sarl
xor
cmp
sbb
pop
lcall
out
push
xorb
test
bound
rcrb
cmpsl
jb
or
scas
mov
jmp
sub
call
pop
add
in
lock
pmulhw
and
lds
shlw
sub
mov
xchg
and
in
jg
movsl
daa
popl
xchg
or
pushf
push
jnp
dec
daa
lret
and
mov
shrb
jnp
test
js
push
inc
aaa
mov
jo
cwtl
or
icebp
fldt
jle
adc
dec
xlat
pop
aas
or
mov
dec
hlt
inc
or
adc
call
mov
loopne
xor
or
out
loope
lods
mov
dec
inc
orl
int3
outsl
jle
gs
ret
xlat
aas
aam
jo
cmp
testl
repnz
jecxz
or
inc
mov
popf
push
cld
sub
test
mov
aas
fists
lret
jle
bound
into
mov
or
aas
adc
push
sub
pusha
xor
mov
cltd
leave
sub
and
dec
sbb
andb
into
xor
cld
out
mov
inc
inc
fdivr
or
lret
cmpsl
mov
xor
aaa
add
call
les
mov
test
fisubrl
inc
mov
sub
cmp
lahf
icebp
jbe
aad
and
pop
jmp
cltd
mov
in
sub
adc
fcomps
fbld
dec
cmp
cmp
push
popa
icebp
inc
push
cmp
add
dec
decb
mov
cs
cmp
sub
xchg
es
jne
lea
cmp
icebp
loope
inc
sbb
push
mov
vpslld
gs
enter
repz
cmp
imul
mulb
cmp
out
mov
sbb
inc
add
rdmsr
add
cld
enter
loope
mov
gs
cmp
in
test
leave
je
and
xchg
testl
dec
scas
and
dec
mov
orl
xlat
cmc
push
gs
js
fs
adc
and
fnstenv
je
inc
jnp
sub
andb
cli
adc
into
add
pop
jge
dec
add
es
fdivrl
das
and
add
std
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
mov
test
cwtl
lods
mov
pop
adc
pop
adc
adc
sub
sbb
jb
das
into
xor
pop
jno
sub
cmp
call
imul
idiv
fs
push
stc
pop
pop
scas
add
cmp
add
fidivl
pop
mov
daa
jle
and
out
sbb
out
jnp
dec
lcall
mov
test
in
add
outsl
or
lret
jecxz
push
stos
or
cmpsl
mov
andb
add
push
icebp
push
ljmp
mov
xchg
lods
mov
or
xchg
inc
sar
std
jg
pop
jo
xchg
xor
dec
cmc
scas
test
mov
leave
loop
adc
rcrb
xchg
jb
stos
add
and
add
lock
outsb
push
mov
add
outsb
out
movsb
cltd
repz
negb
dec
test
pop
fcmovu
sti
cwtl
cwtl
mov
mov
xor
push
dec
iret
or
cmpsl
cwtl
adc
out
icebp
orb
inc
push
push
orl
out
sbb
aaa
pop
inc
fdivl
xchg
jmp
in
popf
inc
xor
and
jg
pop
je
push
arpl
pop
push
sbb
push
mov
clc
push
sti
aaa
sbb
cmpsl
or
rorb
inc
xor
testb
pop
push
pushf
jae
cld
ja
stos
sbb
int3
stos
adcl
mov
xchg
push
add
les
bound
movsb
lea
das
jp
mov
sub
jns
cmpsl
es
test
adc
sbb
fstpl
xor
jg
xor
outsl
cld
sbbl
js
jecxz
pop
adc
rorb
mov
hlt
mov
sbb
movsb
ficomps
mov
pop
and
sbb
sahf
pop
out
sahf
pop
sbb
sar
or
adc
lret
push
push
sub
lds
hlt
xlat
ss
aaa
dec
pushf
xlat
push
insb
dec
lret
stc
daa
cmpsl
cmp
testb
add
mov
out
in
xor
inc
and
outsb
cmpsl
rcrl
shrl
and
pop
add
and
ret
sbb
dec
fsubrs
lcall
popf
xchg
into
inc
fisttpl
mov
cmp
cld
xchg
mov
mov
cwtl
mov
mov
cld
loop
rcrb
jl
xchg
loope
popa
mov
fnstenv
dec
enter
adc
xchg
mov
ja
mov
fucomi
adc
pop
mov
inc
xchg
std
sarb
mov
cwtl
rclb
inc
add
rolb
andl
imul
dec
sub
mov
sbb
xor
inc
scas
push
add
dec
cltd
cmp
aas
and
pop
cltd
test
dec
push
inc
inc
mov
mov
js
xchg
setne
pop
and
int3
and
imul
jo
mov
fld
inc
push
pop
dec
mov
into
negl
popa
or
inc
data16
sbb
ljmp
imul
add
pcmpgtb
sbb
aaa
data16
push
sahf
dec
mov
pop
adc
adc
inc
push
call
out
mov
push
mov
sub
cmc
mov
adc
jp
nop
pop
jp
mov
and
lcall
das
lahf
stos
and
sub
jmp
shl
enter
mov
lods
lcall
into
jno
repz
cmp
jg
and
ljmp
out
mov
dec
mov
dec
xchg
cs
cmp
cli
addb
div
dec
arpl
sub
adc
stos
clc
mov
cmc
shlb
and
and
sahf
das
push
and
neg
jl
push
mov
scas
xchg
insb
pusha
es
fucompp
push
add
cld
mov
cli
xchg
pop
mov
arpl
out
shl
cld
push
into
movsl
or
mov
aam
pop
pop
adc
icebp
push
pop
or
out
xchg
add
jp
push
ficoml
cmp
inc
std
mov
dec
push
fwait
ret
int
fists
outsl
xchg
fwait
inc
fwait
mov
or
mov
push
add
add
mov
sbb
mov
or
dec
mov
xlat
xchg
adc
arpl
in
lods
sub
fiaddl
add
cmp
pop
lcall
xchg
ds
popa
test
out
in
cld
add
lret
subl
inc
mov
lahf
mov
out
xchg
test
jl
xor
mov
loopne
jp
inc
out
sahf
jb
cmpsb
mov
out
inc
pop
pop
sbb
jo
lcall
imull
sbbl
and
adcb
or
mov
sbb
fcompl
loopne
sub
enter
andb
out
pop
and
pop
fisubrs
sub
js
ja
repz
dec
hlt
imulb
cmpsl
in
cmp
and
or
lret
xchg
mov
ret
inc
popa
mov
dec
sbb
pop
aaa
fildll
add
and
in
mov
data16
dec
and
leave
adcl
cmp
stos
out
stc
in
and
pop
icebp
pushl
mov
cli
lds
outsb
or
jae
xchg
add
ds
and
insl
cmp
mulb
fistpl
stc
int3
cmpsl
pop
dec
push
arpl
mov
jo
adc
cmpsl
cmpl
xchg
push
int3
iret
mov
lcall
fimuls
pushf
adc
push
mov
dec
js
mov
inc
inc
cmp
insl
ss
xor
xor
dec
xchg
imul
idiv
pop
rorl
int3
sbb
scas
adc
out
fs
popf
jo
cmp
push
nop
iret
shlb
and
xchg
xchg
movsl
mov
pop
lods
pop
les
inc
adc
je
xor
loope
sub
push
cli
mov
nop
dec
es
mov
xor
pop
stos
adc
lcall
and
clc
sbb
in
lcall
cmc
daa
sbb
jb
push
mov
imul
in
inc
jno
jo
call
xchg
mov
ror
mov
add
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
jmp
pushf
cmpsb
mov
scas
fwait
cmp
mov
adc
adc
mov
loope
cmp
mov
adc
push
pop
test
pusha
pusha
flds
jbe
dec
xor
insb
sbb
ljmp
decl
shl
add
jl
mov
sub
arpl
dec
mov
mov
mov
enter
fld
notb
xor
lods
cmp
and
push
push
push
dec
pop
int3
sbb
jg
or
arpl
push
pushf
ret
inc
inc
mov
jo
repz
cli
push
xor
xor
inc
mov
cmp
stos
add
cmp
push
add
adc
fiadds
stc
adc
fldt
push
pop
stc
rcrb
push
xchg
nop
imull
cli
xchg
jno
shlb
enter
adcb
daa
mov
out
jl
js
sar
xchg
push
stos
jno
jb
jl
sti
push
sbb
sbb
jne
mov
addr16
fwait
enter
lods
js
push
orb
mov
mov
pusha
ljmp
lret
push
inc
fisubl
mov
jbe
aam
aaa
dec
cld
and
inc
arpl
push
pop
push
inc
sbb
out
mov
pop
aas
sbbl
pop
inc
add
or
loopne
mov
jns
popa
push
add
aaa
dec
imul
jge
adc
sub
loope
mov
in
lea
mov
pop
cmc
sbb
cwtl
lret
inc
mov
jmp
je
inc
add
push
pop
jecxz
stc
out
test
xchg
dec
dec
or
jp
mov
jbe
jbe
cld
cmc
scas
mov
mov
shll
jno
xor
dec
in
icebp
leave
fistps
push
fwait
lret
pop
jle
enter
sbb
fstpl
push
mov
or
lock
popa
push
dec
dec
push
push
movsb
ss
out
inc
xor
je
push
insl
add
insl
sub
insb
sarl
dec
jl
jno
ret
xor
mov
sub
and
and
and
leave
rcrl
dec
lret
je
dec
jae
jae
dec
inc
adc
test
push
mov
push
test
pop
inc
and
lods
aaa
test
into
mov
jnp
mov
mov
cmpsl
loop
les
jecxz
rcl
jne
ret
shl
sbb
jne
mov
pop
push
add
in
xchg
add
mov
int3
and
int3
or
pop
mov
pop
jmp
stos
adcl
fwait
popf
scas
sbb
pop
outsl
test
xor
lods
ljmp
repnz
pop
lcall
push
sub
aas
rclb
sub
repz
adcl
cmova
ret
aas
push
mov
nop
dec
fidivl
rcr
push
addr16
sub
aas
and
aaa
mov
in
sub
xor
and
inc
inc
js
mov
shr
stos
inc
aam
fnstenv
hlt
cmpsl
mov
jg
and
lods
jnp
lcall
or
scas
and
push
xchg
mov
add
das
xlat
scas
orl
repz
es
xchg
pushf
shll
mov
mov
or
movb
movb
mov
mov
or
sub
mov
sub
jmp
sbb
insl
imull
sub
jl
mov
adc
pop
adc
adc
imul
or
pop
ss
lea
dec
mov
into
imul
in
popf
shll
or
aaa
sub
dec
inc
sub
and
cmc
dec
sahf
aam
test
bound
pusha
sbb
and
xchg
out
fisubs
mov
cmp
mov
fwait
cmpsb
xchg
ja
xor
adc
rcrb
xor
lea
aam
dec
cwtl
hlt
loop
std
sub
jmp
shll
mov
icebp
iret
sti
pusha
aas
pop
lds
insb
clc
adc
push
stc
jp
repnz
push
mov
pop
lahf
mov
inc
leave
xchg
ror
xchg
sub
sub
jle
fdivr
cmp
inc
pop
or
insb
je
xchg
jo
inc
cs
xchg
and
jo
mov
cld
push
sti
push
cmc
add
imul
jne
and
mov
cmp
xchg
jp
add
loop
jo
dec
lahf
arpl
jno
xorb
lret
negb
es
insl
mov
lahf
and
mov
or
and
xor
fs
push
add
stc
dec
pop
add
or
inc
and
dec
das
push
add
add
adc
push
mov
mov
sub
dec
or
lea
push
jnp
into
arpl
sbb
xchg
decb
sub
add
insl
loop
cmpsl
adc
pop
je
pusha
gs
dec
and
std
lds
scas
and
popa
imul
addr16
mov
pop
inc
fstpl
push
jp
or
mov
inc
clc
sub
gs
movsb
bound
sub
pop
lock
cmpsb
sub
repz
mov
jb
cmp
call
or
in
cmpsb
nop
adc
cmp
push
aaa
xor
in
sbb
xor
xor
es
mov
in
pop
into
in
movl
jno
or
xorl
add
loopne
bound
sbb
mov
push
lret
enter
mov
push
scas
subb
pop
dec
jge
rol
lcall
push
adc
mov
sub
push
cmp
pop
outsl
adc
lods
push
ret
rorl
push
mov
adc
ljmp
and
xchg
mov
sti
pop
cmc
in
sub
inc
or
test
rorl
clc
xchg
dec
dec
lods
and
in
sub
dec
int3
push
je
sub
fs
or
cmp
into
inc
dec
test
push
mov
incl
sub
rcrl
adc
out
sub
adcl
out
sbb
ss
jno
daa
dec
push
pusha
adc
icebp
rorb
push
xor
sbb
movsb
icebp
add
dec
xchg
cld
loop
jae
fistpl
mov
pop
inc
mov
and
jge
inc
xor
test
push
nop
dec
popf
ret
fsubrp
mov
outsl
and
xchg
push
mov
sahf
jno
movzbl
movzbl
cltd
idiv
movzbl
jmp
rclb
dec
push
add
mov
xor
add
adc
adc
jno
push
rclb
push
mov
push
pop
aam
popf
mov
cmp
sub
ret
incb
cmp
rorb
int
gs
rolb
mov
ds
cmp
add
push
call
pop
fidivs
fs
mov
cmc
pop
fcompl
cld
sub
mov
adc
inc
push
stc
jl
push
pop
xchg
mov
cmp
jb
push
daa
aad
std
lods
in
daa
int3
lds
push
push
xor
cmpsl
icebp
jnp
mov
adc
es
cld
push
je
lcall
cmpsb
ljmp
repnz
mov
dec
mov
scas
je
xor
cld
push
test
or
mov
stos
pop
fdivl
jecxz
pop
jno
xor
sub
push
lret
fidivrl
repz
mov
add
push
push
or
sub
stc
xchg
push
xor
inc
insl
ret
int3
push
mov
jb
aam
inc
xchg
fldenv
mov
xchg
mov
icebp
lds
mov
sbb
sbb
vsubpd
shll
repz
push
lret
xchg
packuswb
xor
rorl
int3
adc
mov
mov
sub
movsb
lock
adc
dec
aad
jbe
leave
lcall
inc
fbld
shll
inc
cld
pop
jle
cmp
cmp
dec
sti
ss
mov
add
jl
and
mull
jg
mov
iret
dec
or
inc
gs
movsb
out
pop
stos
imulb
sahf
js
push
xchg
sub
outsb
push
int3
pop
sbb
stos
cs
dec
sub
movsl
jbe
js
movsb
sub
jb
and
xchg
mov
aam
add
ss
sbb
push
xchg
push
int3
sbb
adc
test
mov
jecxz
sti
lods
jge
sbb
cmpsl
or
xchg
xor
or
clc
push
in
in
adc
lds
imul
addr16
js
push
ret
and
fwait
push
jmp
xchg
mov
or
out
dec
scas
push
insl
jbe
rcl
inc
and
cmp
loope
fldenv
mov
mov
test
icebp
stc
iret
push
jae
mov
jmp
add
push
sbbl
popa
mov
cli
cmp
xchg
inc
mov
xchg
mov
pop
or
and
imul
push
rcll
jg
and
cmp
add
shl
mov
and
jbe
xchg
mov
std
sub
js,pn
xchg
mov
inc
cld
into
or
ffree
aad
out
into
adcb
ror
mov
xchg
mov
loopne
inc
outsb
mov
movsb
loope
mov
js
xor
inc
jg
gs
sbbl
dec
push
inc
sbb
or
mov
movb
movb
movb
movb
movb
mov
mov
jmp
iret
xchg
mov
dec
daa
mov
pop
mov
mov
inc
cmp
adc
adc
pop
sbb
rorb
sbb
movsl
mov
mov
shrl
movsbl
shrl
aaa
ja
mov
xchg
xchg
in
mov
les
fcomps
movsb
fidivl
repnz
sub
sub
pop
or
leave
mov
push
in
aaa
cmp
cld
inc
scas
push
je
push
sar
cltd
pop
or
sbb
or
sub
cmp
test
idiv
aaa
inc
lcall
or
lea
cltd
add
in
aas
lds
mov
sub
pop
scas
or
stos
mulb
in
lcall
mov
movsl
outsl
addr16
dec
mov
sbb
stos
lds
cmc
das
push
in
daa
in
jnp
add
out
jb
cmp
xchg
mov
rclb
mov
repz
cmp
push
mov
pop
sbb
cmpsl
sub
repz
xor
adc
leave
add
push
movsl
fwait
bound
cld
lahf
aam
into
pop
or
and
lods
fdivrl
sub
or
adc
jnp
lret
cmp
rcll
lahf
and
lock
jnp
je
mov
lea
jg
pushw
mov
jns
fimull
shl
wrmsr
adc
insl
cltd
stos
test
scas
mov
faddp
popa
inc
sub
pop
jnp
es
cmp
sbb
fstl
cmp
mov
mov
inc
sub
inc
inc
mov
gs
ret
nop
fistl
scas
fldl
adc
subb
bound
lret
sbb
dec
sub
xor
push
shrl
sbb
jae
pop
arpl
push
or
sbb
je
mov
xchg
sub
adc
call
fiadds
mov
pop
jl
test
dec
in
mov
std
pxor
mov
push
and
adc
aaa
mov
inc
add
lods
test
in
repz
cli
es
and
and
inc
mov
pop
mov
insl
mov
fnsave
pop
jbe
add
push
les
fwait
xor
stc
std
jge
das
cmpsb
mov
mov
int
int
xchg
cmp
pop
in
add
rcrl
arpl
and
fdivs
inc
addb
mov
pushf
mov
ljmp
mov
rorl
fdivl
lds
add
pushf
loope
imul
repnz
call
jmp
icebp
ffree
mov
xlat
call
jl
arpl
jg
ficompl
xor
cmp
xor
outsl
clc
sti
cmpsl
popf
jg
xchg
mov
and
mov
ficomps
push
cli
or
stc
cmp
in
jnp
lret
adc
jmp
pusha
pop
or
mov
jmp
mov
xor
clc
pop
imul
xchg
mov
pop
ljmp
leave
jns
int3
dec
xchg
fildll
pushf
fsubl
stos
add
pop
jno
cmp
les
rorl
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
jmp
and
mov
mov
dec
fidivrl
mov
adc
pop
adc
adc
idivl
xor
add
mov
push
shrl
lcall
xor
rclb
outsl
jbe
jbe
arpl
pushf
popa
cmpsb
jmp
fildll
and
faddl
dec
nop
outsl
xor
out
mov
pop
cmp
add
mov
jle
sbb
jecxz
xchg
mov
push
scas
jl
in
mov
imul
in
adc
shrl
stos
adc
fldcw
mov
mov
add
cmp
mov
push
sbb
arpl
and
mov
pop
or
pop
xor
push
mov
out
daa
push
fs
xor
cmpsl
movsb
xchg
or
sub
es
push
aas
mov
ret
push
and
pop
pusha
pop
jbe
das
lock
push
dec
mov
mov
sbb
sbb
adc
mov
sahf
repnz
roll
insb
jle
ljmp
fdivl
sbb
mov
ret
push
push
out
xchg
sub
xchg
fdivr
xor
out
imul
fidivrs
jl
fdivrs
daa
movsl
mov
fsubl
sbb
in
test
lret
adc
or
ds
inc
xchg
test
sub
mov
outsl
sbb
decb
mov
ja
push
test
jae
cmp
jnp
cltd
or
jmp
cmp
adc
mov
xchg
add
daa
xor
jb
rclb
aad
inc
dec
push
lret
data16
cmp
xchg
sbb
jo
mov
stc
insb
mov
sub
or
pop
xchg
daa
setl
in
dec
and
out
xor
xchg
popf
add
rcrb
call
sub
mov
sbb
fwait
repz
jns
pop
adc
fst
mov
mov
adc
and
jmp
sub
xor
daa
shrb
rcrl
test
testl
xor
in
sub
sub
add
adc
push
mov
mov
cmpsb
imul
and
out
and
and
and
jne
mov
in
mov
shrb
mov
xchg
push
push
mov
data16
add
xchg
push
push
xchg
int3
cmc
lret
ja
insl
xchg
js
lods
push
mov
popf
inc
inc
add
call
xchg
sbb
dec
lcall
imul
mov
mov
cmp
jae
aam
into
cmp
js
cmp
fstpl
cmpsb
jecxz
push
dec
xchg
dec
bound
dec
inc
insl
aas
jnp
pusha
fnstenv
pop
cmp
incb
rclb
repz
xor
in
add
xor
cmp
insb
enter
out
and
ds
clc
cs
outsb
pop
add
jg
imul
xor
cli
jp
adc
inc
mov
adc
ljmp
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
sbb
sbb
stos
int
stos
imul
aad
adc
pop
adc
adc
mov
cmc
xor
push
pop
rorl
pop
bound
leave
push
loope
orl
pop
push
xchg
jge
aas
xchg
inc
inc
neg
cmpsb
ficompl
mov
test
punpcklwd
add
inc
jl
rorb
adc
int3
in
mov
xor
and
shll
hlt
aaa
out
pop
lahf
nop
mov
sti
and
outsl
arpl
xchg
jp
xchg
addr16
psllw
xor
popf
xchg
bound
sub
data16
in
xor
push
iret
push
cmp
bound
sub
hlt
or
pop
pop
lcall
xchg
das
sub
mov
add
movsb
adc
push
aas
pop
push
ss
mov
subb
cmc
lods
stos
pop
xor
mov
jbe
jle
push
in
cltd
lods
cltd
mov
lock
push
dec
int
jae
bound
movl
lods
shl
std
dec
jl
and
movb
dec
les
xor
jno
sbb
fidivl
mull
jmp
cmpxchg
inc
test
jnp
mov
clc
push
jo
and
dec
hlt
pop
pop
jo
pop
outsl
cmp
lahf
ds
cmp
xor
sub
rclb
test
aam
xchg
add
decl
jae
test
xchg
xchg
lgs
add
mov
mov
leave
shll
in
jecxz
mov
movsb
lcall
lds
andl
test
push
mov
mov
hlt
or
fidivrl
push
pop
arpl
dec
imul
adc
es
cmp
jp
mov
inc
ss
jecxz
jmp
dec
testb
mov
hlt
pushf
pop
and
cli
push
popf
mov
push
fdivrl
and
mov
push
leave
int3
jo
or
jbe
adc
jno
pop
jle
rol
sbbb
sarl
out
cs
dec
and
mov
shlb
mov
or
jp
test
lock
ffreep
adc
cmp
add
jno
inc
iret
jle
dec
add
sbb
dec
and
mov
cmp
mov
sbb
sbb
inc
lds
divl
pop
or
jg
andb
rorl
outsb
int3
addb
in
loope
pop
mov
jne
mov
add
mov
dec
clc
xor
xor
pop
mov
mov
adc
faddl
shlb
inc
sub
push
outsl
idivb
aaa
and
aam
jge
negl
jecxz
jbe
insl
es
test
push
imul
mov
sub
mov
lcall
aas
mov
dec
enter
sbb
enter
stos
mov
adc
fidivrs
inc
xor
xchg
add
xchg
mov
les
xchg
mov
sbb
lock
add
dec
and
xor
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
adc
jmp
jne
rcl
cmp
adc
scas
insb
pop
mov
mov
int3
movlps
dec
pop
jo
mov
cmc
leave
mul
es
scas
adc
dec
aad
pop
outsl
push
pop
pushf
sbb
or
pusha
daa
xor
aaa
daa
daa
jmp
mov
mov
test
pop
ljmp
std
push
inc
and
cwtl
lret
cmp
inc
gs
xlat
xor
cmp
inc
idivl
popf
dec
adc
add
pop
inc
lcall
mov
cmpsb
xor
aam
and
xor
dec
adc
adc
pop
and
fs
add
fs
pop
xchg
adc
stc
enter
idivb
push
js
xor
add
data16
xor
fdivrl
data16
sub
push
add
mov
adc
sbb
ficoms
and
imull
scas
inc
dec
inc
pop
and
sub
lea
stos
mov
outsb
addl
dec
dec
cs
imul
jns
push
push
enter
lahf
sbb
mov
lock
aas
out
and
nop
icebp
ret
xor
shl
push
xchg
mov
insl
ror
inc
mov
xchg
push
xlat
jmp
inc
sub
sbb
cmp
xor
sarl
adc
fcoms
out
sub
dec
test
icebp
addl
scas
test
jge
inc
flds
inc
pop
xor
cmp
xor
in
inc
fstps
add
jg
inc
mov
inc
pusha
repz
xor
mov
pop
mov
mov
dec
ret
repz
sub
call
dec
sbb
sti
pushf
mov
jmp
sbb
sub
test
adc
dec
adc
xor
aad
adc
inc
daa
dec
sbb
push
out
decb
jmp
mov
pop
mov
ljmp
iret
inc
movsl
push
mov
jmp
movl
push
dec
sub
sbb
jmp
jb
dec
adc
jb
mov
mov
adc
movlps
cli
push
xchg
xor
loop
aas
fsubl
out
xchg
imul
jno
lock
dec
in
pop
dec
cmp
add
cmp
js
jbe
xchg
imul
shl
std
jne
add
movl
fwait
push
push
push
pop
sub
pop
pop
sahf
mov
scas
mov
sbb
adc
xchg
inc
jo
pop
inc
mull
add
out
sbbb
scas
pop
and
mov
mov
mov
jle
mov
mov
incl
mov
fdivrp
leave
push
pop
imul
movsl
pop
sub
call
popa
mov
sbb
cmpsb
jmp
xor
mov
add
test
sbb
lock
mov
shrl
xchg
lock
sub
aam
das
lcall
iret
mov
add
stos
daa
or
or
pop
shrb
repnz
das
xor
push
mov
in
clc
outsb
dec
pop
push
cwtl
mov
fdivs
imulb
out
inc
loop
cli
cld
xchg
aas
cmp
add
dec
int3
cmc
inc
orl
test
cmp
and
push
das
js
dec
icebp
sbb
jle
cmpsl
loopne
leave
add
jle
mov
arpl
notb
les
test
pushf
inc
xor
aam
pop
add
popf
fcoml
sbbl
ljmp
fmull
test
cmpb
fnstsw
std
aaa
scas
out
jb
jbe
fisttpl
adc
outsb
mov
loope
aaa
call
stos
mov
and
std
mov
test
sub
pop
adc
pop
test
or
cli
jp
repz
scas
das
pop
pop
cmpsl
sbb
je
xchg
ljmp
loop
andb
enter
mov
lret
inc
es
xchg
fwait
pop
add
sub
fs
push
pop
hlt
or
enter
fdivl
in
frstor
test
in
out
jnp
and
lret
inc
add
movl
not
movl
mov
jmp
mov
jb
pushl
pushl
call
or
xor
or
sub
mov
mov
sbb
sbbl
andl
push
mov
sub
movl
movl
movl
jmp
mov
pop
test
jno
mov
mov
adc
int3
movlps
outsl
ss
loop
xor
inc
aam
dec
out
aam
mov
cmp
fbld
jae
sbb
daa
jmp
cmpsl
inc
stc
add
call
push
loope
lret
push
mov
mov
roll
cmpsl
pop
ffree
mov
stc
lcall
inc
cmp
cmp
sub
repz
or
push
mov
jne
mov
or
push
outsb
in
xlat
out
daa
iret
xchg
xchg
clc
or
mov
sub
lea
hlt
es
cmp
mov
dec
add
das
mov
popl
loope
xor
jne
jbe
in
les
hlt
push
cwtl
imul
neg
cli
popa
jo
stos
cltd
sub
arpl
jbe
xchg
adc
cmpb
shrl
push
mov
dec
add
mov
xchg
cmp
and
rcl
lret
add
in
lea
mov
pusha
sbb
sbbl
cli
ret
pop
add
push
dec
sahf
ja
and
xchg
pusha
sbb
pop
in
mov
icebp
insl
jecxz
pop
loop
loop
xor
icebp
sub
test
ljmp
pop
xchg
enter
shll
lahf
adc
fistpll
arpl
sbb
or
movzwl
push
dec
adc
jg
pop
jo
mov
cwtl
inc
mulb
hlt
ficoml
imul
or
lret
push
stc
subl
mov
mov
push
push
or
ret
aam
in
push
fnsave
sub
repnz
push
xchg
lods
dec
fmul
mov
daa
cwtl
and
lcall
or
sahf
xchg
push
call
inc
cli
jp
jge
cmp
sti
rorb
mov
rcrb
and
add
aaa
adc
push
enter
sbb
adc
dec
mov
sub
pop
xlat
iret
mul
xchg
and
sbb
insb
dec
xchg
cmc
inc
fs
sub
ret
mov
mov
movl
xor
subl
div
adc
imul
cmpl
mov
movl
mov
jmp
movl
jne
push
pushl
push
call
adc
adc
mov
add
mov
or
xor
sbb
movzbl
xor
mov
subl
xor
add
and
mov
movl
xor
xorl
div
sub
xor
mov
cmpl
movl
mov
jmp
movl
movl
jae
push
pushl
push
call
orl
movzwl
adc
dec
and
cmpl
mov
mov
jmp
mov
mov
jg
push
pushl
call
sbb
and
addl
adcl
adc
movzbl
sbb
mov
mov
or
jmp
bound
adc
popa
add
lcall
sbb
adc
clc
mov
inc
in
dec
loope
xlat
movsl
aam
mov
mov
clc
cmpsb
lea
out
loop
inc
dec
jg
cmp
sbb
fcoml
jmp
xchg
pop
movsl
stc
lods
xor
scas
dec
int
dec
std
data16
es
cli
jg
lea
pop
out
adc
cmp
push
movntps
arpl
leave
movsl
or
lret
pop
mov
push
add
xchg
mov
mov
mov
mov
push
lcall
movsl
sbb
inc
xchg
jnp
enter
inc
jns
xchg
nop
mov
and
mov
std
in
mov
jo
and
call
outsl
fldenv
fcom
ret
aaa
sub
shlb
outsb
or
mov
add
das
push
fstpt
fwait
andb
sub
lods
or
inc
loope
jo
ret
or
sbb
aaa
call
dec
lahf
arpl
sub
push
in
repz
in
or
sarb
sti
sbb
or
aas
xchg
xorb
sub
repnz
les
inc
vmptrld
sbb
push
dec
push
sub
push
cwtl
cli
insl
lods
and
mov
cmp
inc
adcb
mov
js
push
sti
mov
mov
lods
es
pusha
fdivs
pop
sbb
mov
fadd
out
es
aad
scas
ljmp
and
pop
ss
mov
adc
sbb
insb
add
sahf
push
nop
push
inc
xchg
dec
mov
inc
bound
ror
lret
stos
inc
addr16
repnz
or
cmpsb
mov
pushl
cmp
pop
push
push
and
sahf
sahf
aaa
add
xchg
pop
clc
push
stos
ja
leave
fmul
pop
mov
xlat
xor
mov
jecxz
xchg
lds
lret
jbe
xor
mov
and
test
cmp
test
clc
das
add
movl
addl
jmp
pop
repz
cmp
pop
data16
push
sbb
adc
movlps
mov
rcll
cmpb
notl
pop
fists
dec
cmp
add
pop
into
mov
in
fst
xchg
or
cmp
loope
lahf
xor
xchg
push
and
push
into
inc
inc
das
mov
js
repnz
cmp
push
int3
pop
push
add
xchg
sub
or
stos
pop
aad
mov
xchg
or
fs
in
xchg
xchg
mov
fstps
mov
int3
bound
popf
movsl
mov
add
ds
out
pop
out
xorl
fbld
sbb
cmp
outsb
mov
pusha
stc
cltd
fdivl
cli
mov
cmp
pop
xchg
shrb
adc
xor
stos
je
mov
popf
xchg
xor
mov
cmc
jmp
sbb
rolb
push
pop
fmul
sbb
pop
loopne
mov
mov
scas
mov
test
aas
outsl
into
cmpsl
loop
pop
les
mov
imul
mov
sbb
int
cmp
adc
pop
xor
mov
xchg
fcmovnb
jno
sub
adc
aaa
fnstenv
fs
jo
sub
gs
cltd
xchg
add
rorl
pushf
jnp
dec
push
push
insl
in
cmp
add
aaa
out
aas
mov
out
pop
sub
pop
sbbl
mov
mov
pusha
xchg
add
imul
pop
sbb
out
jge
add
inc
add
mov
sub
inc
in
fnstsw
cmpsb
jbe
mov
or
lds
or
pop
sbb
aas
fdivr
mov
repz
inc
lret
nop
xchg
loop
mov
mov
gs
into
cmp
xlat
pop
orb
adc
pusha
mov
ljmp
daa
test
in
cs
push
pop
mov
sub
mov
sub
jmp
add
cmp
call
repz
jp
insl
imul
mov
movl
xorl
mov
add
xor
or
xor
imul
cmpl
movl
movl
jmp
mov
jl
push
push
pushl
call
not
movzwl
adc
add
sub
xor
mov
xor
add
sub
and
mov
xor
and
sub
mov
mov
mov
sub
add
movl
orl
movl
movl
cmpl
movl
movl
jmp
mov
je
push
push
call
and
addl
orl
xor
add
or
mov
mov
xor
xor
sub
or
movl
and
mov
cmpl
mov
mov
mov
jmp
movl
movl
jb
pushl
push
pushl
pushl
call
neg
xor
sbb
or
neg
subl
imul
mov
imul
imul
mov
adc
mov
adcl
and
or
xorl
mov
xor
mov
add
mov
mov
addl
lea
cmpl
mov
movl
movl
jmp
movl
jae
push
call
notl
or
addl
movzwl
sbb
mov
sub
xorl
neg
inc
mov
cmpl
movl
movl
mov
jmp
mov
mov
jbe
push
push
push
call
and
andl
sbb
neg
movl
movl
cmpl
mov
movl
mov
jmp
movl
jge
push
pushl
pushl
pushl
pushl
push
push
call
neg
or
movzwl
and
mov
movl
xorl
xor
and
movl
mov
xor
jmp
int3
cs
lahf
push
pop
leave
sbb
mov
mov
int3
movlps
push
mov
dec
mov
stos
inc
lret
sbb
jecxz
jo
ds
pushf
aas
cmc
mov
jl
pop
mov
dec
out
clc
dec
test
mov
inc
or
lret
mov
jl
push
loop
sub
inc
outsb
jnp
sti
cmpl
je
stos
push
cmp
or
pushf
jmp
jp
inc
sbb
jne
cmp
fnstsw
loopne
int
mov
or
scas
fnstenv
dec
aam
cmp
rolb
mov
sbb
and
test
fbstp
orl
and
out
pop
lret
fwait
adc
scas
add
movsl
imul
mov
out
test
sbb
repz
sbb
sbb
leave
scas
cmpsb
stc
xor
sbbb
bound
push
push
inc
xchg
adc
data16
sahf
sbb
icebp
enter
add
and
mov
sahf
inc
or
jmp
and
xchg
scas
sub
xor
scas
jo
inc
cs
push
cmpsw
fdivs
cmp
pop
xchg
cwtl
in
push
and
xlat
fdivrp
push
mov
cmp
repz
mov
mov
push
lahf
jne
scas
repz
sbb
pop
insb
xor
stos
cmp
jle
and
popa
mov
inc
and
pop
lods
aad
pop
pop
jno
ss
push
xchg
in
fsubrs
mov
pop
in
aam
xor
cwtl
enter
jecxz
aad
jle
adcb
inc
inc
jnp
test
clc
pop
test
clc
push
dec
jnp
push
fstpt
aam
sbb
cmp
fistpll
dec
add
xchg
ja
lods
mov
sbb
mov
adc
xor
sti
lods
std
fsubs
in
sarb
mov
fidivl
sbb
fwait
mov
or
clc
outsl
mov
addl
or
add
mov
sbbl
or
movzwl
sbb
add
movl
xor
mov
xor
movl
sub
movl
movl
sub
mov
movzbl
and
add
or
mov
sbbl
sub
cmpl
mov
mov
jmp
mov
je
push
pushl
pushl
push
call
xorl
sbb
mov
adc
mov
add
adc
mov
lea
add
or
cmpl
movl
not
movl
jmp
movl
movl
jge
push
call
adcl
orl
xor
or
or
add
subl
inc
xor
xor
sub
sbb
sub
xor
xor
and
mov
mov
andl
movl
xor
movl
incl
mov
inc
add
cmpl
mov
movl
mov
mov
jmp
movl
mov
jb
push
pushl
push
pushl
push
call
mov
adc
mov
negl
andl
movzwl
xor
mov
adc
imul
jmp
aas
mov
cmp
add
stos
cmp
ss
insl
adc
adc
les
movsl
or
repnz
pop
push
dec
insb
clc
jg
mov
pop
push
mov
fldl
cltd
xchg
leave
loop
mov
cld
push
dec
xor
test
adc
or
movsb
out
add
inc
stos
sbbb
je
sub
xchg
lods
std
rcrl
xchg
popf
movsl
cltd
gs
iret
adc
adc
jbe
shufps
loop
gs
int3
outsl
or
cli
jne
adc
inc
sbb
mov
jne
jns
iret
cmpl
cmc
sbb
xchg
scas
xchg
jb
gs
lret
es
std
loop
cmp
mov
inc
xchg
mov
pop
clc
push
ljmp
add
cmpsb
lea
dec
out
adc
xchg
ljmp
imul
popf
aas
stos
add
push
or
negb
jge
mov
cmp
in
lods
sbb
pushf
aas
pop
xchg
and
aad
aam
ffree
outsb
mov
lcall
icebp
in
int
mov
or
mov
movsb
sub
dec
fdivrs
fidivl
cltd
dec
and
sub
push
and
mov
cmp
jae
mov
movsb
dec
xor
loope
cmpsl
addr16
test
xor
jno
mov
adcb
sti
xchg
sbb
adcl
inc
mov
aad
sbb
mov
push
jo
jb
cmpsl
and
adc
sbb
popa
jp
outsb
lea
in
cmpsb
sbb
cmp
pop
adc
pop
les
shrb
cmp
inc
push
mov
jb
or
fwait
xchg
xchg
js
outsl
repz
cwtl
xchg
dec
call
pop
mov
jle
arpl
pop
fistl
popf
ljmp
xchg
imul
daa
test
nop
or
lea
jb
lcall
add
xlat
cld
lahf
cld
imul
lret
and
add
xchg
imul
adcl
xor
subl
mov
div
sub
mov
sbb
mov
cmpl
mov
mov
mov
jmp
movl
mov
jg
pushl
pushl
pushl
push
call
add
negl
sbbl
and
sub
xor
movl
movl
movl
sub
mov
mov
movl
xor
jmp
jbe
and
sub
push
push
or
adc
xchg
outsb
xor
mov
or
mov
pop
in
mov
inc
clc
or
insl
pusha
cmp
stos
cmp
xchg
mov
sar
adc
std
lods
mov
xchg
mov
xchg
xchg
mov
cmp
dec
add
sbb
aaa
dec
out
popf
dec
push
mov
and
adc
aaa
mov
hlt
aam
fndisi(8087
imul
inc
dec
sbb
pop
cmp
push
fsubrs
fcmovu
dec
mov
sub
jne
jmp
lea
jg
push
and
xor
push
stc
popf
xor
adc
push
push
repz
fisttps
dec
cmp
pop
mov
mov
xor
fstpt
pop
mov
outsb
inc
xchg
add
sub
jo
add
jae
jp
ror
dec
cmp
dec
lock
jmp
fsubs
push
cmpl
pop
bound
dec
dec
mov
xchg
fimull
pop
sahf
out
xchg
ss
enter
imul
rcrb
dec
in
mov
outsl
pop
imul
stos
movsb
das
int
insl
push
addl
cmc
rorb
inc
lcall
idivl
cmp
xchg
add
pop
or
push
les
call
mov
int3
xchg
jle
sub
push
add
aad
sbb
cwtl
push
cmp
xor
xchg
inc
aad
jnp
or
push
jg
jecxz
cmp
outsb
call
add
and
into
xchg
adc
and
test
dec
loop
test
dec
sbb
andl
ja
push
cld
ds
pop
cmp
aaa
cmpsl
push
pop
add
dec
add
add
roll
add
xor
mov
das
insb
dec
cs
ss
popf
out
pop
rorl
out
loopne
cmpsb
ja
ret
adc
out
cmp
mov
xor
push
gs
mov
shll
xor
sbb
enter
mov
sbb
fisubrl
outsl
stc
popf
call
mov
xor
and
cwtl
icebp
mov
add
imul
add
add
sbbl
mov
xor
xor
xorl
mov
div
xor
cmpl
mov
mov
jmp
mov
mov
jl
push
push
push
push
call
sbb
adcl
movzbl
adc
mov
mov
xor
adcl
mov
inc
movl
sbbl
movl
adcl
movl
cmpl
mov
movzwl
jmp
movl
ja
push
push
call
sbb
and
neg
or
sub
adcl
and
mov
mov
orl
sub
shr
mov
xor
sub
mov
imul
cmpl
movl
movl
movl
jmp
mov
jne
push
pushl
call
sbbl
sbbl
sub
xorl
adcl
cmpl
movl
movl
movl
movl
jmp
movl
mov
jle
push
pushl
call
notl
xorl
sub
xorl
mov
adcl
and
mov
sbbl
sub
add
mov
movl
sbb
movl
mov
add
or
mov
or
sub
mov
or
mov
sbbl
movl
incl
movl
movl
movl
movl
and
movl
sbb
movl
sbb
movl
notl
mov
add
mov
sub
cmpl
movl
movl
jmp
movl
movl
jg
push
call
and
and
andl
xor
negl
and
or
orl
mov
imul
sbbl
imul
orl
mov
sbbl
or
andl
mov
lea
xorl
push
call
mov
orl
mov
or
imul
xor
xor
xor
mov
add
cmpl
mov
movl
mov
mov
jmp
movl
jb
push
call
addl
sub
sbbl
movzwl
adc
adc
movzbl
or
and
sub
jmp
xchg
out
lcall
mov
cmc
stos
loopne
pop
lods
fiadds
adc
adc
js
xor
enter
loopne
and
mov
cmp
aas
jmp
inc
sbb
leave
or
andl
cmp
pop
cli
pop
test
dec
xlat
pop
sub
xchg
push
inc
and
xchg
into
inc
mov
dec
ljmp
shll
cmp
xchg
xchg
movsb
mov
ja
adc
inc
xor
in
adc
ja
std
and
sub
xchg
dec
cmpsb
std
mov
ret
pop
rorb
stos
pop
imul
cmpxchg
repz
push
idivl
icebp
mov
push
inc
out
sbb
je
xor
arpl
pop
dec
lret
aam
jl
xchg
pop
mov
scas
popf
mov
inc
pop
cld
lretw
xor
data16
push
push
std
call
mov
jo
aaa
std
ljmp
mov
aas
mov
add
pop
mov
jp
cmc
nop
jg
iret
test
push
rol
out
sbb
push
mov
pusha
push
call
std
cltd
scas
mov
repnz
addr16
lret
mov
pop
cmp
cmp
test
fdivrl
shrb
push
xchg
in
push
lods
lds
cmp
ret
gs
imul
lcall
lds
sbb
dec
std
xlat
lea
add
adc
jb
ret
push
push
scas
imul
shll
rol
popa
clc
orl
and
jle
jecxz
psrlq
mov
mov
jl
ret
es
mov
dec
xchg
push
es
sbb
adc
mov
notl
mov
ret
mov
xchg
inc
cwtl
xor
mov
inc
add
mov
cld
sbb
out
sbb
aaa
xchg
or
sub
sbb
aad
daa
xor
lahf
lds
pop
fdiv
jno
out
adc
mov
fdiv
mov
mov
repz
fwait
in
jl
jbe
dec
cmp
pop
push
pop
mov
add
cmpl
mov
movl
movl
jmp
movl
movl
jb
pushl
push
call
xor
subl
movl
add
movzbl
adc
sub
adc
neg
xor
xor
mov
andl
div
xor
sub
add
mov
cmpl
mov
not
jmp
not
notl
jl
push
pushl
push
push
push
call
mov
add
mov
andl
add
subl
xorl
decl
movl
xor
movl
movl
cmpl
movl
movl
mov
jmp
mov
jae
push
call
or
adc
inc
adcl
or
adcl
adcl
movl
movl
xor
or
sbb
movl
movl
movl
movl
not
movl
movl
sbbl
movl
orl
mov
mov
add
mov
cmpl
movl
mov
movl
jmp
movl
movl
jl
pushl
push
push
call
or
or
sbbl
sbb
andl
and
xor
sub
sub
imul
cmpl
mov
mov
movl
mov
jmp
mov
movl
jle
pushl
call
sub
sbb
adc
sub
movzwl
sub
movl
mov
lea
cmpl
mov
movl
jmp
movl
mov
jbe
pushl
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
sub
mov
mov
mov
sub
sub
mov
and
mov
xor
add
mov
or
lea
cmpl
movl
mov
not
jmp
movl
jle
push
push
call
xor
adc
mov
mov
sub
and
xor
subl
and
sbb
mov
orl
sub
cmpl
movzwl
notl
jmp
movl
jg
pushl
push
pushl
pushl
call
subl
adcl
sbb
xor
add
add
adc
sbb
add
sbb
mov
movl
adc
movl
mov
sbb
mov
movl
neg
movl
mov
xor
mov
sbb
mov
subl
xor
addl
xor
andl
mov
andl
call
mov
cmpl
movl
mov
jmp
mov
jl
push
push
call
xor
or
or
mov
or
sub
notl
andl
mov
and
mov
mov
sbbl
mov
xor
movl
xor
andl
mov
xorl
call
addl
or
xorl
or
mov
adc
mov
adcl
xor
sbbl
xor
mov
orl
call
sub
mov
and
mov
mov
subl
mov
andl
jmp
aam
jle
cmp
xor
xchg
call
adc
imul
jne
ljmp
push
jle
insl
jg
insl
shl
pop
and
add
lret
add
pop
jg
loope
pop
fmul
mov
ret
lods
sbbb
stc
add
fnstcw
xchg
mov
test
in
movsb
rcrb
mov
mov
scas
dec
enter
in
or
add
negb
inc
ss
call
xor
lcall
mov
mov
lahf
push
test
mov
rorl
js
lods
xchg
mov
adc
in
in
test
data16
cmp
adc
loop
nop
push
aad
jbe
and
fdivp
clc
or
inc
fnstsw
ret
add
imul
mov
mov
loopne
hlt
push
xlat
inc
or
dec
mov
outsl
jno
and
andl
inc
stos
in
mov
jl
test
push
notl
pushf
je
es
push
mov
cmc
imul
sub
inc
and
lods
cmp
pop
xor
jmp
adc
lret
fwait
inc
ds
push
ret
fildll
sbbl
call
jb
cltd
xor
adc
push
pop
push
cltd
cs
cmp
pushf
xor
rolb
mov
pop
fstpl
jl
push
lea
mov
jl
jb
jp
ja
cmc
add
movsl
hlt
leave
test
xor
lock
sub
ret
lahf
sbb
sbb
pop
rcr
fmull
cmp
lds
fstpl
jle
aas
pop
ret
shlb
pop
push
jmp
push
mov
add
jmp
inc
jnp
and
mov
sub
xorb
or
or
push
push
cmpsl
outsl
fstp
shlb
jns
xor
adc
inc
add
out
dec
dec
mov
or
sub
or
movsl
rclb
outsb
add
lret
fmuls
in
incl
add
lret
mov
or
mov
orl
mov
addl
mov
call
mov
add
mov
mov
sbbl
or
sub
mov
movl
or
xorl
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
jmp
pop
dec
scas
jns
pop
sbb
stos
push
sbb
lods
dec
sti
adc
adc
cmp
jp
outsl
fwait
dec
sub
adc
push
add
push
mov
in
adc
sub
sti
jl
sub
shll
xor
pop
cmp
pop
jae
shll
mov
sub
rol
pushf
jp
lahf
mov
xor
or
mov
mov
outsl
push
sti
mov
inc
test
pop
pop
xor
add
fisttps
sbb
sbb
cmpsl
outsl
movsb
xchg
in
adc
outsl
pop
daa
mov
popf
imull
in
mov
je
jge
divl
mov
xchg
lret
test
or
adc
push
pop
push
add
and
nop
jmp
xchg
jecxz
clc
inc
or
hlt
xor
cmp
mov
xor
leave
rcr
mov
mov
lahf
push
xchg
mov
xchg
stos
adc
pop
xor
daa
pop
push
scas
iret
jp
push
jbe
addr16
in
sarb
xchg
sub
mov
xchg
push
dec
adc
mov
jb
andb
lods
cltd
in
ljmp
arpl
inc
add
mov
or
ja
sub
outsb
and
lds
adc
cmp
ret
dec
add
sub
pminsw
sbb
lret
jns
fwait
add
addr16
inc
daa
push
sti
mov
pop
and
leave
pop
xchg
mov
mov
or
xor
inc
or
xlat
and
push
loopne
adc
loop
rolb
mov
movsl
test
xchg
mulb
pop
dec
jl
jecxz
pop
les
mov
or
enter
mov
aam
adc
icebp
call
and
rcrl
rcr
adc
mov
insb
test
jmp
insl
loopne
fnstenv
mov
fdivs
cwtl
jecxz
outsb
fsubrl
aad
popf
jne
fcomip
in
inc
mov
push
mov
jo
arpl
adc
mov
decl
ret
add
add
add
js
sbb
push
notl
adc
dec
mov
ret
push
fwait
andl
jmp
fidivs
ds
dec
mov
jno
leave
inc
xchg
mov
pushf
into
jo
mov
mov
int
cmp
mov
cmc
cmp
es
loope
js
inc
stc
fwait
xor
cmpb
dec
pop
movsb
adc
sbb
adc
lea
xor
fistpl
inc
mov
adc
pop
pushf
cmpsl
std
mov
cwtl
inc
cli
and
mov
xchg
sbb
std
insb
daa
pushf
dec
fwait
daa
add
and
dec
fcomip
cltd
mov
out
mov
jo
shll
stos
xchg
aas
or
pop
enter
enter
cmp
and
cli
hlt
xlat
insb
fwait
cmp
adc
jo
sarb
loopne
in
jae
xor
sub
fadds
xchg
mov
push
xrelease
push
sar
dec
cmp
push
repz
mov
mov
or
sub
add
sub
and
mov
mov
imul
daa
pop
add
movsl
into
cmp
inc
pop
fs
xchg
xor
jb
pop
rorb
lods
fcoms
jno
pop
call
sub
jecxz
or
cmpsl
fs
mov
cmpsb
lcall
sarl
fistl
das
pusha
jg
pop
aad
xor
sarl
mov
xor
jo
in
aaa
scas
dec
fsub
sbb
xor
jp
daa
push
jno
popfw
shlb
aaa
movsb
roll
or
dec
int3
sti
lahf
mov
in
xchg
ss
mov
lahf
jnp
jl
ret
xchg
fisttpl
push
js
shlb
pop
repnz
xchg
dec
push
push
sub
stos
lods
dec
inc
insl
inc
and
repz
shrl
or
divb
push
push
cmp
dec
mov
out
inc
testb
daa
mov
mov
jp
push
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
jmp
ljmp
pop
inc
lea
mov
movlps
push
inc
mov
mov
xlat
adc
mov
mov
dec
pop
jg
push
pushf
mov
das
in
xor
lret
ja
xchg
xor
shlb
add
xor
clc
sbb
pop
pop
fnsave
push
es
cltd
and
add
mov
pop
cs
adc
mov
jmp
mov
das
or
inc
mov
jmp
popf
inc
jge
lret
clc
mov
jl
push
std
out
imul
jns
es
push
mov
lcall
fsub
testl
mov
in
or
insl
pop
cmp
mov
loopne
xchg
push
fwait
mov
lahf
dec
xchg
push
outsl
fisttps
mov
jmp
cltd
subb
shll
mov
xchg
jne
inc
jo
mov
adc
bnd
pop
and
lret
pop
push
insb
cmpsb
mov
xchg
sbb
rorb
ja
fstpl
js
loop
mov
push
sbb
xor
cli
mov
xor
and
sub
out
push
ror
cmp
insl
xchg
inc
test
lods
xor
test
insl
dec
add
loope
and
push
out
cmp
cli
sbb
aam
cmpsl
inc
cmp
xchg
xchg
pop
test
enter
push
movd
xchg
push
fnstenv
lcall
mov
xchg
cwtl
stc
scas
mov
lods
shrb
mov
mov
mov
ds
xor
dec
mov
aad
adc
lods
cwtl
and
test
pop
or
xchg
mov
es
xchg
imul
pop
sub
orb
ja
push
mov
adc
mov
mov
jnp
jmp
adc
lods
mov
ljmp
div
mov
fwait
and
sahf
cmp
jp
mov
lret
fwait
pusha
and
fbstp
dec
sub
add
jns
mov
xorb
push
xor
push
push
mov
inc
add
add
pop
sbb
sbb
ss
cmp
js
arpl
push
out
adc
adc
call
pop
aad
dec
or
mov
mov
sub
mov
ret
and
jae
cmp
push
mov
mov
inc
mov
or
fildll
sub
jl
cld
lret
or
inc
push
mov
test
mov
push
lods
mov
xchg
lods
repnz
dec
clc
xchg
dec
mov
mov
mov
ljmp
jnp
mov
inc
mov
xlat
mov
add
dec
data16
jae
mov
adc
mov
aam
adc
cmp
jnp
xchg
xor
dec
add
add
insl
ds
mov
sbb
test
inc
test
pop
lock
daa
mov
jecxz
mov
inc
insb
push
mov
cmpl
outsb
mov
loope
push
test
mov
js
xor
int3
loopne
inc
loope
ja
jp
inc
xor
jle
cmp
mov
es
cltd
test
aad
mov
lea
cwtl
lret
pop
dec
jno
or
cmp
sbb
pop
inc
popa
push
std
inc
xchg
leave
push
gs
pop
fldenv
ret
and
jecxz
or
jno
inc
out
dec
pop
sub
xor
sub
mov
mov
dec
fwait
pop
les
sti
jo
mov
pushf
ja
jae
pop
mov
inc
stos
fwait
std
mov
sub
push
loope
leave
add
sub
pop
scas
mov
add
repz
int
pop
movsb
lock
mov
sbb
adc
add
aam
sahf
sarl
test
dec
xlat
jnp
fwait
inc
enter
add
xchg
stos
test
and
dec
lods
adc
add
push
lahf
dec
xor
mov
xlat
sub
repnz
add
pop
testb
dec
pop
pop
jne
push
aaa
dec
decl
out
mov
popf
int
in
popf
int
lock
add
shlb
lea
icebp
sahf
lcall
rorl
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
jmp
arpl
das
sub
sub
and
or
sub
movlps
xchg
sbb
adc
add
mov
add
cmpsb
inc
aaa
idivl
loope
out
xchg
push
and
cwtl
adcb
stc
pop
mov
dec
dec
insb
mov
dec
mov
stc
pop
sub
jecxz
pop
adc
popf
imul
jp
push
fdivr
ljmp
pop
loopne
int
enter
dec
mov
jno
pop
inc
sub
ret
aam
adc
pusha
sub
xchg
or
daa
xchg
ror
je
addr16
lahf
sub
popl
ficoms
push
shr
push
ja
sub
dec
push
int3
lret
rolb
int
xor
push
or
shll
pusha
faddl
out
bound
push
push
inc
dec
xchg
push
loopne
outsb
fdivrl
shll
rcr
cmova
or
lds
xorb
dec
cmpsb
and
jb
sbb
ja
xchg
cmpsl
insb
popf
sub
stc
test
mov
out
cmp
adc
bound
xor
mov
pop
mov
and
sar
sub
sub
lods
sub
xchg
rorl
fcoml
or
mul
roll
mov
stos
shll
mov
stos
cmpsl
xor
ss
sub
cmp
xor
sub
mov
dec
fwait
in
push
lea
insl
cmp
scas
cmp
mov
lret
xor
dec
fxch
test
jb
add
fstpl
out
adc
es
pushf
mov
mov
push
pop
nop
inc
push
scas
and
mov
das
sbb
xchg
push
ss
push
xchg
lea
mov
sbb
lea
fnstenv
iret
sub
stos
fucomi
arpl
stos
pop
bound
rep
xchg
mov
test
in
xor
fdivrl
pusha
ret
sbb
js
addr16
or
adc
jbe
out
mov
fiadds
mov
mov
std
decl
jmp
xor
fisttpll
and
rcrb
stos
out
adc
adc
xchg
cwtl
sbb
cmp
or
lock
mov
or
pop
add
lds
in
test
aam
negl
mov
enter
or
jno
fwait
sub
pop
xchg
popa
pop
push
jge
adc
push
lcall
fwait
outsl
shrb
xchg
cld
daa
push
andb
mov
cmpl
mov
arpl
ljmp
dec
scas
popf
test
test
sbb
mov
adc
test
mov
outsb
dec
lret
dec
and
mov
push
daa
xor
lret
xor
or
mov
dec
push
fdivl
out
mov
add
adc
or
pop
xchg
add
leave
or
and
or
push
cmp
mov
and
adc
mov
mov
repz
sub
mov
mov
push
popf
jp
jmp
inc
jne
das
push
sahf
lahf
insb
add
stc
imul
pop
or
cmp
cmp
or
push
leave
mov
jbe
roll
sbb
sbb
sub
arpl
or
aas
jmp
or
sbb
sub
out
jae
xlat
sub
push
sub
and
in
inc
int
je
stos
add
jp
sbb
pop
loop
mov
sub
fadds
adc
fcmovb
es
ljmp
xchg
out
pop
adc
pop
mov
ja
divps
icebp
sahf
push
xorb
xchg
inc
and
xor
rcrb
fistl
xor
xor
and
sbb
scas
aad
iret
daa
test
rol
icebp
movsl
push
push
and
scas
xor
or
add
cwtl
rorb
mov
jae
cwtl
pushl
lods
sbb
jl
push
xchg
inc
xchg
mov
cmp
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
jmp
les
jp
pop
test
mov
out
adc
movlps
or
ds
and
pop
test
adc
cltd
lods
lock
std
adc
mov
popf
pop
mov
adc
mov
mov
jbe
test
daa
sub
xlat
in
jns
jmp
sbb
dec
imul
push
mov
bound
stc
sub
nop
jp
in
aad
pushf
out
inc
push
ret
adc
std
insl
sub
js
in
jmp
xor
inc
stos
aam
push
cli
xchg
out
repz
pop
ret
mov
dec
cmp
push
fildll
xor
in
push
mov
mov
psllq
nop
sub
outsb
outsb
scas
fucom
cld
jmp
jns
clc
in
outsl
mov
jae
subl
pop
cmp
adc
insl
mov
fdivrl
lods
and
xor
xchg
adc
imul
xor
and
addr16
and
fstpt
enter
push
leave
xor
fidivs
add
inc
shll
dec
loop
sbb
outsl
sub
out
inc
jne
pop
inc
mov
mov
jno
cmp
dec
mov
in
and
dec
andl
int
scas
sub
call
jns
test
repz
xor
stc
cld
jnp
cmp
out
mov
lods
ret
mov
sbb
mov
sbb
lret
icebp
sahf
rorl
rclb
xchg
addr16
out
add
fstl
mov
imul
and
mov
lret
fisubl
sub
pop
mov
sbb
leave
jns
sub
and
pop
sub
xchg
xchg
push
adc
mov
lds
scas
into
loope
rorb
repz
mov
sbb
ja
cmc
cmp
sbb
mov
mov
mov
mov
xor
xor
mov
call
jmp
cmpsb
test
fistpll
and
xchg
add
int3
movlps
lahf
xchg
sbb
pop
insl
lcall
and
fdivrs
sub
jge
aam
loop
push
arpl
ja
sbb
mov
jne
dec
mov
movsl
int
push
adc
in
sbb
xchg
adc
iret
or
or
aaa
jecxz
jb
cli
push
movsl
sbb
dec
jae
jecxz
jg
int3
mov
and
popf
dec
sbbl
cli
insb
jne
jbe
xor
and
int3
adc
jbe
iret
aam
xor
pop
xor
pop
add
loop
test
lcall
mull
mov
xchg
mov
insl
sti
je
mull
stc
dec
xor
call
or
daa
mov
sub
sbb
mov
mov
bound
cmp
shr
test
sub
ss
adc
jo
inc
sub
xchg
jne
xor
dec
pop
mov
sub
jnp
dec
out
sbbb
cmpsb
lahf
js
fcmovne
movsl
pushf
sub
imul
or
hlt
mov
cmpsl
roll
adc
fistps
jmp
imul
jnp
mov
adc
or
mov
push
in
insl
test
aas
es
insl
bnd
les
jne
mov
out
into
cs
in
std
test
push
insb
bound
jbe
mov
mov
in
lahf
test
nop
pop
es
fwait
sub
jp
int3
clc
push
loop
jg
nop
addr16
pop
sbb
fucomi
lcall
stc
int
dec
mov
jb
ja
pop
and
dec
fwait
pop
mov
pop
add
aad
adc
xchg
inc
xchg
push
sbb
push
test
xor
vmovdqu
xchg
lcall
mov
repz
shrb
stc
bound
jg
in
jmp
sbb
add
push
mov
stos
lea
jno
in
mov
popf
lcall
xor
dec
cmp
outsl
push
or
lock
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
push
insl
mov
pop
mov
sti
jle
shll
push
ficoms
adc
out
fwait
loopne
lods
sub
jnp
ds
movsl
jb
or
jno
mov
mov
lods
mov
pop
inc
mov
cmpsb
xchg
mov
lds
mov
push
pop
add
out
fsubl
cmpl
mov
inc
mov
imul
xor
sarb
cs
mov
mov
aad
xchg
jle
mov
into
sbb
inc
jno
jo
mov
mov
pinsrw
push
push
insl
cmp
jns
xchg
add
jbe
dec
push
mov
mov
add
mov
cwtl
stc
adc
or
mov
jbe
sbb
into
add
cld
sbb
out
rcrb
popf
lret
or
iret
and
sub
lea
xorl
das
inc
xchg
or
cmp
js
in
pop
pop
in
mov
fimull
repnz
aad
xchg
mov
dec
mov
in
lret
rcll
mov
outsl
mov
pop
cld
mov
jge
clc
scas
jp
push
mov
aad
loope
push
pop
repz
cmpsb
ds
sub
fiadds
sahf
int3
add
icebp
adc
add
cmp
test
inc
jg
cli
dec
xchg
mov
data16
sbb
cmp
aaa
out
pop
jnp
lret
fnsave
stos
insb
xchg
push
dec
orb
inc
inc
out
adc
int
sub
fcmovbe
shlb
out
cmp
dec
icebp
cmc
mov
insl
bound
fcomps
dec
fildl
aad
add
adc
out
add
ds
xchg
in
pop
cld
mov
jp
jno
rolb
inc
adc
sbbb
sub
jo
sbb
out
test
inc
jl
xorb
out
dec
call
add
sub
and
aaa
pop
pop
jo
in
push
mov
fmul
movsl
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
jmp
adcl
inc
cmp
sub
adc
movlps
cli
xchg
xchg
push
lock
outsb
push
cmp
push
aas
xor
int3
xchg
mov
or
mov
roll
inc
mov
jl
loop,pn
mov
adc
pop
cmp
sbb
in
xor
dec
lea
pop
cmp
xchg
pop
jl
nop
or
ja
mov
lods
inc
push
faddl
push
lret
cmp
push
mov
in
push
pop
ror
dec
shll
dec
mov
sbb
in
push
add
mov
inc
mov
shlb
leave
sub
rorb
std
xchg
call
out
je
in
dec
add
call
push
stos
mov
push
out
aam
decb
cmp
adc
flds
jns
pop
loope
movsl
and
adc
repnz
pop
sub
adc
fcmovbe
sbb
mov
repz
mov
xchg
inc
pop
add
adc
ret
in
clc
and
xchg
adc
jge
mov
cmp
mov
ret
nop
sbb
pusha
test
or
sbb
sbb
jo
call
lods
pop
jbe
aam
popf
test
cmp
insl
adc
daa
ss
dec
fstl
sub
fwait
jmp
idivl
pop
mov
mov
mov
and
lods
dec
xchg
inc
out
mov
xor
and
lret
pop
pop
mov
into
outsb
jne
ret
inc
push
shll
test
pop
pop
push
and
andl
aas
in
xchg
inc
adc
xchg
push
inc
iret
icebp
fcmove
in
mov
mov
dec
jmp
inc
pop
ret
out
rcl
inc
jno
jnp
lret
inc
jmp
xchg
adcb
negb
or
add
jecxz
adc
or
test
jl
push
loopne
push
dec
sub
pop
lds
int3
adc
or
inc
test
loopne
imull
cmp
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
jmp
stos
in
inc
cwtl
inc
sbb
fidivs
jnp
push
adc
adc
sbb
lea
jo
stos
fdivr
or
inc
or
or
cmp
cmpsl
or
jle
ret
cmp
sarb
jne
adc
mov
xor
std
dec
mov
call
xor
pop
cmp
pusha
cmp
or
frstor
hlt
scas
and
jno
dec
cld
jno
into
mov
sbb
lret
sbb
insb
dec
xchg
pop
data16
mov
sti
out
jbe
cli
mov
push
insb
dec
je
sub
mov
mov
arpl
out
fadd
fyl2xp1
lret
jne
dec
jle
inc
repnz
sub
out
mov
in
mov
sarb
fildl
pop
mov
adc
jg
cmpsb
ds
nop
or
mov
outsb
pop
into
flds
mov
ret
sbb
pusha
lcall
outsb
pop
jp
neg
mov
scas
lea
mov
rolb
cmc
pop
pusha
mov
fucomp
imul
rolb
out
shrl
mov
js
mov
insb
daa
mov
outsb
push
aam
rolb
stos
pop
iret
xchg
test
inc
jle
insb
ljmp
test
add
lea
sti
sub
xor
inc
push
gs
dec
and
lods
lock
xchg
in
pop
xor
out
adcb
cmp
sbb
stc
sbb
lods
cmc
push
add
out
test
add
mov
les
aad
sti
jno
push
in
push
pop
mov
in
adc
fadd
je
outsl
dec
rorb
lret
push
push
movsl
pop
ss
popa
sbb
outsl
dec
lret
out
les
pop
lods
mov
out
sbb
mov
outsl
xor
pop
sub
jmp
cmp
xor
mov
add
shlb
lds
jmp
and
cmc
sub
add
stos
add
push
cs
push
out
jle
test
jge
add
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
jmp
enter
cmp
jp
aas
inc
stos
xor
adc
adc
push
xor
mov
mov
jecxz
jp
inc
in
pop
popa
dec
xchg
fstpl
out
nop
mov
insb
subb
inc
cmpsl
adc
mov
adc
pop
js
pushf
scas
in
mov
js
out
ljmp
sbb
enter
out
loop
xchg
aam
jmp
inc
push
lret
lods
xor
daa
mov
fwait
cmpsl
mov
cmp
pushf
mov
lods
iret
mov
push
jne
arpl
bound
lret
lock
mov
add
xchg
jo
lahf
leave
rorl
lahf
and
aad
mov
adc
test
mov
sbb
and
xor
push
imul
xor
mov
sub
pop
pop
ret
push
iret
cmpsb
xchg
inc
andb
int3
cmp
sub
dec
in
loopne
cld
push
cmp
xchg
mov
push
jge
cmpsl
dec
sbb
and
fimull
fidivs
rclb
xchg
add
mov
in
push
lds
cmp
aad
mov
mov
fs
add
pushf
shrb
lret
lea
sbb
sahf
sbb
or
cmp
popf
push
cmp
jo
mov
cmp
inc
jo
lcall
decl
test
push
sbb
xchg
or
mov
int3
or
jecxz
inc
sub
sub
mov
mov
and
adc
test
mov
sub
out
rol
xor
xlat
rcrl
cwtl
mov
scas
inc
popl
arpl
push
or
std
sub
rolb
mov
pop
fistl
lds
push
sbb
fsubs
push
cmpl
fistps
mov
mov
jns
icebp
negl
stos
loope
pop
jb
or
sbb
cli
push
or
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
jmp
xchg
sbb
les
ficoms
mov
int3
movlps
mov
ss
sub
mov
cmp
out
in
pop
mov
xor
sti
leave
jecxz
popf
mov
xor
adc
mov
arpl
shl
add
scas
mov
or
imul
or
into
jp
xchg
mov
enter
out
sub
mov
sbb
sbb
pop
addr16
mov
pop
xor
fimuls
push
cli
cmp
inc
out
jmp
dec
ljmp
or
lods
push
loop
push
inc
nop
mov
int
mov
repz
xchg
fldl
cmp
fldcw
lret
dec
out
sti
add
mov
cs
push
ret
repz
add
push
js
imul
scas
mov
and
cmpl
or
dec
rorl
mov
ljmp
fisubrs
mov
inc
fldl
inc
imul
or
stos
dec
mov
xchg
add
pop
inc
sbb
addr16
and
dec
mov
xor
mov
push
cmp
lock
and
imul
and
gs
sub
pop
pop
scas
mov
pop
xchg
pop
inc
aas
mov
loop
movb
push
jbe
inc
add
pop
mov
sub
mov
subl
sub
mov
xchg
mov
lret
std
sbb
push
das
cmpb
or
push
aas
jl
incl
cmc
or
das
mov
stc
lds
call
dec
mov
sahf
out
mov
icebp
inc
adc
xchg
mov
xchg
cmp
xor
jbe
fs
dec
addl
mov
inc
call
add
push
cmc
mov
movsl
daa
mov
je
clc
pop
lods
lock
pushf
shl
aas
mov
insb
add
mov
push
or
jns
push
test
push
in
add
jae
fstps
add
sub
shrb
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
jmp
xor
inc
popa
inc
and
mov
mov
adc
movlps
adc
mov
lods
sub
testl
aas
in
outsl
mov
call
push
add
test
push
xor
popa
cmc
rclb
lock
fsubrl
mov
dec
mov
or
btcl
fldl
int3
inc
sub
sbb
jne
leave
push
fwait
stos
and
push
inc
pop
leave
push
je
les
sbb
or
subb
aas
popa
add
negb
pop
pushl
cs
pop
fcmovnb
jbe
cmc
lret
int
pop
jle
fdivrl
adcb
ss
int3
imul
fsubrp
sti
add
cli
int3
or
pop
std
popf
divb
ja
mov
xor
ljmp
push
sub
bound
hlt
or
clc
push
lods
sbb
test
xchg
and
iret
mov
test
in
jnp
fdivrp
sti
andl
out
cwtl
lret
add
dec
repnz
rorb
jo
jbe
std
lods
xchg
or
fs
cmp
inc
push
test
fwait
mov
push
pop
movsl
stc
shll
inc
mov
arpl
bound
mov
sub
ret
int
fcomp
test
arpl
out
mov
out
pop
out
fildl
cld
mov
imul
jno
push
cmp
ss
lret
cli
dec
js
mov
pop
add
jns
fwait
nop
dec
ds
pop
mov
jbe
mov
dec
repz
pushf
fwait
lret
loop
fnstenv
cmp
stos
int3
std
test
imul
js
push
mov
sbb
int3
mov
inc
cmpb
jb
jbe
pusha
aam
mov
xlat
movsl
pop
mov
dec
fimuls
sub
mov
test
sti
push
insl
sub
outsl
fdivl
add
xlat
pop
mov
push
push
mov
in
xor
lods
and
cld
incl
add
jmp
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
sub
mov
and
add
adc
adc
lahf
out
loope
cmp
mov
sti
fsubs
push
sub
jge
pop
xchg
popa
stos
jae
xor
fucomp
jns
sahf
pushl
or
outsl
pop
mov
cmp
inc
fwait
pop
mov
lcall
mov
or
push
lret
in
adc
cmpb
sar
movsb
int
or
jecxz
mov
push
rcl
mov
xchg
movsb
mov
lahf
hlt
add
setp
push
pop
mov
mov
pop
es
jne
out
adc
jg
insb
sub
sub
add
xor
leave
test
or
mov
push
pop
inc
mov
inc
xchg
gs
xchg
inc
jno
sbb
sbb
sbb
sub
fwait
ss
bnd
xchg
repz
xchg
mov
jge
add
inc
str
aad
xor
pop
and
sub
cmp
or
xlat
add
or
pop
ja
in
shlb
jb
int3
cmpsl
lods
cs
sbb
or
repz
aaa
out
jmp
xor
dec
pop
loope
shl
mov
test
fisubl
or
repnz
pushf
mov
mov
push
xlat
lods
mov
cmp
loope
lret
sub
test
adcb
pop
int
push
jmp
mov
arpl
hlt
sub
dec
lock
jb
jl
add
icebp
inc
xchg
pusha
jo
xchg
push
into
xor
xchg
cmp
pop
dec
pop
mov
pop
stos
sbb
inc
pop
lahf
inc
mov
aad
fistl
xor
inc
es
cmpsb
pop
int3
cmp
jmp
sbb
in
sbb
pop
popf
int3
adc
inc
in
xchg
dec
pop
xor
inc
sub
jmp
dec
dec
xchg
jmp
mov
dec
lock
movsl
cmp
leave
in
xor
and
cmc
xlat
ds
xor
jge
sbb
pop
popf
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
jmp
out
imul
fldl
adc
movlps
sarb
loopne
or
pusha
sbb
in
mov
mov
sarl
mov
jbe
arpl
or
push
fdivrp
jg
jg
sti
scas
or
pop
clc
sbb
xchg
shlb
rcrb
and
bound
jae
sub
lahf
fistpll
pusha
mov
testl
fstpt
jbe
xchg
es
call
sbb
mov
mov
and
in
aas
push
lahf
mov
dec
mov
mov
mov
hlt
pop
loop
pop
lahf
loope
jae
orb
add
inc
add
push
jle
jge
popf
sub
fucomp
and
cmc
add
out
add
in
cmp
faddp
out
scas
pop
mov
cmp
inc
out
push
push
mov
push
stc
fdivrp
mov
pop
outsb
stos
dec
xchg
mov
mov
nop
jbe
cmc
imul
dec
xor
loope
dec
es
inc
scas
adc
lods
dec
jne
and
shrl
sarb
or
in
scas
jp
adc
cmpsl
repnz
fstl
outsb
jno
pop
cmp
and
push
xlat
inc
xor
ja
arpl
xchg
cmc
jmp
fisubrl
negl
push
dec
rol
int
mov
or
cwtl
daa
push
push
cmpsl
xor
movsl
pop
int3
xchg
adc
push
adc
and
pop
sbb
sub
out
leave
cmp
test
adc
and
out
push
aam
jle
sub
int
repnz
addb
pop
push
inc
mov
pop
in
pop
xlat
jle
sub
sub
or
fwait
or
mov
or
mov
pop
out
flds
ljmp
repnz
inc
mov
add
jg
add
sbb
inc
mov
lock
movsl
pop
dec
mov
insl
cmp
in
adc
in
daa
jns
repz
std
decl
mov
mov
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
jmp
cltd
outsl
sbb
and
ss
int
adc
adc
fs
pop
xor
push
add
jb
and
xchg
sub
cmp
outsl
idivb
sti
sbb
fucomp
bound
sub
lods
cmc
adc
inc
mov
inc
jmp
out
mov
dec
mov
pop
das
xchg
mov
test
push
out
scas
fidivl
sahf
push
lods
call
mov
adc
mov
and
cmp
aam
cs
outsl
dec
insb
fidivrl
adc
shl
mov
and
push
in
push
movsl
outsl
sub
and
or
pop
sti
repnz
inc
add
pop
sbb
pop
ror
outsb
dec
xlat
push
cmp
cli
sub
mov
push
add
pop
lret
ja
out
aas
fsts
out
out
ret
jno
jl
mov
sar
aas
dec
dec
adc
ja
inc
into
xchg
rcrl
fisubrs
sahf
loopne
movsb
inc
std
jae
arpl
cwtl
imul
sub
shrb
xor
cmpsb
mov
xchg
mov
shrb
sbb
sbb
test
shlb
cmp
mov
aas
jne
es
sub
lahf
push
or
xlat
push
adc
jne
dec
and
sbb
adc
out
popa
out
mov
jmp
mov
lret
or
sbb
push
std
lea
mov
out
xor
dec
mov
aad
add
xchg
pop
pushf
mov
lods
xchg
sub
xorb
testl
popa
enter
xchg
dec
sbb
mov
test
adc
mov
add
and
sarb
jb
daa
sti
dec
mul
cmp
int
jbe
stos
xchg
push
out
ret
jg
rep
rcll
inc
sbb
inc
pop
jge,pt
cwtl
pop
fildll
jnp
ret
push
mov
or
jo
call
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
jmp
jg
loope
mov
mov
mov
test
adc
xchg
and
sub
and
or
in
lahf
push
mov
dec
sbb
cmp
out
sub
je
mov
outsl
mov
movsl
and
fs
inc
mov
popf
push
sbb
xchg
mov
xchg
dec
test
pop
stc
and
cmp
aad
inc
outsl
fidivl
xchg
xor
push
enter
das
xchg
fwait
pusha
in
inc
inc
ja
adcb
fwait
pop
test
and
shrb
add
fisubrl
adc
jbe
xlat
jno
imul
mov
pop
adc
mov
dec
inc
mov
inc
jnp
filds
pushf
pop
gs
xlat
sbb
mov
mov
pusha
and
pop
or
ljmp
xor
fists
mov
add
pop
das
cmp
mov
lahf
int
xor
insb
in
lea
sub
into
jg
lret
inc
mov
in
arpl
add
xchg
cmp
out
dec
fstl
cmp
xor
cmpsl
mov
test
mull
adc
pop
add
cmpsl
pop
sbb
fnstcw
shlb
cmp
lcall
push
push
loope
jae
push
cli
pop
hlt
mov
adc
arpl
lcall
mov
or
loop
insl
mov
inc
xchg
mov
imull
pop
pop
add
hlt
xor
add
shll
inc
adc
stos
cli
add
sbb
push
addr16
es
sbb
jl
and
mov
jl
movsb
xchg
fs
pop
or
pop
adc
xor
jae
sti
sbb
push
out
data16
add
push
rcr
jo
insl
pop
int3
fmull
or
xor
out
into
movsb
loop
mov
sti
adc
mov
mulb
call
je
or
sub
jg
push
jb
pop
mov
lahf
dec
mov
sarb
mov
fdivs
mov
call
or
or
mov
mov
mov
jmp
cltd
jns
dec
and
cltd
pop
sub
mov
cmp
movlps
dec
mov
push
and
adc
cmp
ds
roll
js
adc
shll
out
cmp
mov
imull
and
sbb
push
jae
jno
out
mov
sub
fnstcw
mov
push
ljmp
fdivrs
pop
add
in
mov
fistpl
xor
in
pop
movsl
dec
sbb
cmpl
inc
jge
sbb
push
fstpl
fwait
cmp
aad
push
jo
cmp
cmpsb
popa
outsb
cmpsb
and
scas
inc
sbb
adcl
cmp
cmpsl
push
nop
dec
or
fsubrs
bswap
out
ds
jno
cmc
insl
mov
into
push
orb
mov
push
ret
jbe
sub
push
jmp
jns
push
inc
pop
clc
sub
add
mov
notb
sub
cmpsl
mov
sti
mov
stos
or
jl
paddusb
xor
and
mov
push
or
pop
in
je
cld
cwtl
pop
mov
cmp
lahf
lret
outsb
xor
mov
inc
mov
fistl
std
mov
xorl
out
mov
inc
fidivl
bound
xor
xlat
dec
mov
xchg
xlat
dec
scas
fisubrl
stos
or
adc
push
sti
cmc
pop
cmp
cmp
or
cmp
sahf
push
inc
add
dec
pop
jge
fwait
mov
jge
inc
inc
lea
jno
pop
jg
xlat
push
adc
xor
cld
out
or
into
sub
fsubrs
mov
cli
sbb
pop
lahf
int3
mov
push
inc
adc
mov
fwait
into
sbbb
call
fisubrl
jo
mov
mov
jmp
mov
cvtsi2sd
inc
mov
jle
inc
in
pop
push
mov
aam
xchg
mov
das
xchg
cmpsl
rcrb
mov
pop
xchg
lods
sub
in
aam
adc
pop
jl
test
mov
je
imul
or
decl
test
decl
jmp
sub
sbb
sbb
cs
icebp
mov
or
adc
movlps
aas
adcb
sub
dec
imul
iret
mov
aas
cltd
xchg
dec
xchg
fdivs
leave
in
fcmovne
in
sbb
ficomps
in
frstor
pop
icebp
movsb
bnd
shrl
jl
push
test
xchg
lea
daa
and
pop
notl
jl
inc
dec
adc
shl
pop
inc
scas
shrl
cmp
mov
sbb
repnz
or
adcb
fisubs
sub
movsl
mov
fsubs
mov
adc
std
ret
inc
scas
dec
fistl
mov
xor
rorl
pusha
jmp
jp
aad
jmp
mov
setbe
sbb
mov
imul
adc
pushf
jne
cmp
dec
out
aam
xchg
in
add
data16
pop
out
fadd
add
lods
jo
loop
jae
btr
jns
or
xor
mov
in
sub
inc
mov
jb
int
cmp
pop
test
mov
mov
inc
mov
out
lock
in
lea
xchg
fwait
rcrb
out
pop
push
jp
or
out
mov
inc
pushf
lock
std
sbb
ffreep
cwtl
mov
or
pop
outsl
into
mov
enter
es
lock
insb
insl
dec
les
mov
rol
cmc
es
xor
scas
cmpsb
xchg
and
jmp
mov
pop
pop
pushf
adc
pop
ja
jl
icebp
push
sbb
mov
sub
sbbl
sub
pop
test
xchg
stos
fs
mov
aad
or
js
and
lcall
push
cwtl
cmp
int
dec
mov
pop
leave
mov
sahf
out
jp
mov
movsb
xor
mov
dec
cmp
rol
in
ja
sbb
fbstp
int
sbb
cmpsb
in
sub
subl
shl
mov
je
imul
or
add
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
jmp
insl
ja
add
popf
sub
xlat
mov
lods
scas
stos
adc
adc
xchg
or
mov
jo
rorl
mov
shlb
mov
cmpsb
dec
rol
out
and
dec
push
mov
add
addr16
stos
inc
jge
cwtl
mov
fbstp
js
sti
and
cltd
pusha
cltd
inc
add
cmpsb
imul
push
imul
or
mov
iret
push
fistpll
andb
in
and
addr16
add
cli
icebp
outsb
idiv
icebp
add
cmpsb
call
push
mov
mov
out
int
insb
loop
inc
outsb
sub
mov
mov
ret
test
dec
mov
arpl
lahf
jg
sbb
mov
popa
mov
scas
ljmp
push
xor
loope
xor
xor
rcr
lret
jecxz
sbbb
dec
inc
adc
mov
in
dec
jae
and
imul
shrb
mov
adc
xor
mov
jle
jg
mov
addl
jle
add
xor
add
dec
test
jae
imulb
push
nop
sub
adc
jle
movsl
pop
adc
test
push
or
int
add
mov
add
jg
cmp
mov
scas
xor
icebp
stos
and
mov
scas
push
xor
cmp
stos
adc
and
adc
fisubrs
jbe
mov
adc
push
into
push
xor
fs
dec
dec
xchg
movsb
and
jb
cli
in
sbb
jae
testl
mov
add
stc
out
pop
jp
cwtl
sub
mov
mov
scas
adc
adc
inc
fnstcw
hlt
js
cld
mov
out
loopne
and
scas
xor
and
mov
ret
lock
push
cmpsb
sahf
cmc
push
fdivrs
or
hlt
insl
and
cltd
cwtl
stc
subl
fsubrl
lods
bnd
jne
jmp
pop
inc
mov
xor
mov
call
or
or
xor
xor
mov
mov
jmp
addr16
pusha
out
sbb
xor
idivl
cmpsb
adc
adc
sarl
loop
icebp
jb
test
sub
xor
jp
cmp
test
jae
xor
iret
maskmovq
notl
sbb
out
xchg
sub
daa
xchg
jmp
mov
repnz
sub
test
cmp
mul
inc
mov
cld
add
jl
mov
lret
sub
and
push
dec
push
adcb
xchg
jbe
mov
adc
mov
xor
mov
aaa
lcall
js
cmpsl
cmpsb
mov
pop
test
rclb
pop
int
cmpsl
or
fstpt
xor
lods
adc
mov
cmpsb
cmc
lret
scas
inc
les
leave
mov
mov
add
ficomps
jae
xchg
dec
add
or
sahf
xchg
int
test
les
cmp
sbb
cmp
pop
jo
push
push
or
mov
jl
test
sbb
and
repz
inc
out
add
ret
pop
jno
int3
xchg
icebp
xchg
dec
xor
jns
or
into
sub
xchg
xchg
pop
sbb
lods
mov
andl
push
cmp
das
fwait
outsl
add
sbb
repz
sub
pop
sahf
push
adcb
lds
push
jmp
mov
lods
jns
dec
scas
ja
enter
lcall
mov
icebp
mov
mov
xlat
out
movsl
test
les
aad
and
pop
mov
pop
addr16
pop
dec
and
xchg
jmp
in
push
out
xor
mov
dec
cmp
enter
daa
stc
mov
pop
mov
sbb
and
hlt
rolb
mov
lods
fwait
clc
push
lahf
jnp
cwtl
inc
mov
xor
lahf
clc
inc
movsb
push
mov
adc
jbe
insl
rcll
addb
xchg
mov
clc
xorb
int
mov
inc
dec
cmpsb
cmc
jp
sbb
fsubrl
stos
stos
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
ds
jnp
pop
and
popf
cmc
inc
in
jle
cwtl
lods
push
mov
adc
mov
sti
xor
xor
sub
mov
add
adc
out
jno
push
or
push
test
sub
jmp
ret
les
insb
add
jne
mov
insl
out
ljmp
insb
cmp
in
jno
scas
aaa
adc
lahf
int3
sarb
outsl
pop
nop
mov
xor
stc
push
or
nop
pop
xor
cmp
in
mov
icebp
or
call
adc
jne
sub
les
lea
insb
xor
ficoms
std
and
push
sbb
dec
je
dec
je
int3
bound
in
pushf
jle
push
lea
cs
pop
sti
jae
sbb
ret
fisubrl
pushf
xchg
cmpsl
arpl
aad
mov
push
push
add
mov
stos
jne
xchg
out
mov
fnstenv
scas
fistps
popf
pop
mov
mov
lock
pop
mov
mov
xchg
fildll
push
aad
call
loope
hlt
imul
popa
enter
push
repnz
push
mov
xchg
or
pop
and
andb
jo
cmp
mov
mov
pop
inc
inc
mov
dec
add
ljmp
dec
add
fwait
jmp
sti
int
cwtl
xchg
lret
pop
insb
sarb
fidivrl
adc
sbb
pop
cmova
js
and
dec
mov
sbb
call
mov
jno
mov
arpl
ds
sub
cmp
rcr
sbb
push
xor
and
mov
pop
inc
mov
gs
mov
jle
xchg
mov
pop
mov
fnstcw
xor
gs
fxch
xor
ja
mov
mov
shl
cmp
lret
fwait
cmc
fs
arpl
inc
gs
test
pop
mov
mov
mov
je
imul
or
add
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
xor
and
mov
xchg
icebp
pop
lods
aad
adc
adc
or
and
ficompl
call
xrelease
stc
adc
xchg
fld
jp
pop
popa
mov
iret
push
jae
inc
adc
sub
cmp
das
lahf
aas
inc
push
jl
or
cmp
xchg
adc
xchg
shrl
lahf
iret
daa
lods
adc
mov
and
push
movsb
nop
dec
andl
xor
out
lcall
mov
cs
rcrb
xor
je
aas
mov
jbe
subl
and
mov
mov
scas
es
and
scas
sub
jl
loop
sub
int
dec
sbb
inc
xlat
mov
push
adc
push
cmp
and
ret
lods
jbe
mov
mov
dec
pop
xchg
mov
sbb
push
push
sub
fists
and
xor
outsl
add
dec
jmp
lods
mov
aam
std
loop
pop
xor
adc
push
pop
add
inc
jmp
jecxz
inc
fmulp
cli
and
add
or
jae
pop
jne
mov
inc
imul
jbe
int
cmp
shlb
mov
sbb
into
imul
inc
or
in
jp
scas
and
sbb
outsl
imul
call
add
mov
ds
repz
gs
mov
ret
pop
sbb
iret
inc
push
rcl
dec
inc
lcall
add
and
sub
add
in
mov
imul
add
push
ret
stos
inc
mov
lahf
fs
pop
loop
inc
ret
mov
pause
mov
pop
dec
rcrb
push
pop
and
mov
xor
cs
push
leave
dec
fcmovnb
dec
and
stos
fsubs
jo
xchg
sahf
xchg
sub
jp
cmp
jmp
sbb
or
sbb
mov
int
dec
adc
cmp
add
lcall
pushl
xor
mov
jmp
call
push
pop
popa
cwtl
daa
punpckhdq
lcall
sarb
cmpsb
inc
and
inc
xor
shrb
rcl
out
adc
sbb
iret
cli
fmulp
jb
jb
add
xchg
mov
into
loope
enter
cwtl
imul
adcb
dec
out
stos
mov
ret
mov
loopne
mov
add
stos
and
out
sbb
jae
movsb
and
sub
and
jp
add
jmp
cmp
mov
lods
jecxz
adc
jmp
sbb
push
pushf
or
or
fdivs
in
jo
xchg
leave
ds
cmp
jmp
xor
xor
daa
pop
mov
push
pop
lock
adc
fsubrs
xchg
mov
push
int3
sahf
xor
jne
add
jnp
jmp
lcallw
in
push
popa
mov
lds
adc
movswl
sub
sarl
jp
in
inc
in
and
inc
rcrl
sahf
mov
and
sub
push
xchg
ljmp
fcompl
xor
iret
not
movsl
or
adc
sub
fstpt
or
dec
sub
lahf
aad
sub
add
int
and
dec
mov
pop
adcb
sarb
push
add
mov
imul
mov
inc
cmp
out
xchg
jl
mov
cld
mov
xchg
inc
int
outsb
cmp
add
xchg
jp
cmp
mov
int3
mov
test
out
ss
cmpb
lahf
sub
test
pop
mov
int
add
cmp
fiaddl
pop
xor
add
out
loopne
test
lods
jg
dec
mov
fidivrl
dec
push
and
cmp
xchg
stos
mov
mov
sbb
scas
inc
mov
testl
push
inc
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
jmp
fwait
xchg
out
cmp
aaa
sbb
lods
fists
js
xchg
adc
adc
jmp
inc
pop
repnz
mov
xor
jno
shrl
push
out
mov
out
cld
mov
jmp
fiadds
cs
sub
fimuls
loopne
sbbb
data16
scas
loope
loop
aaa
inc
pusha
cmc
fcmovu
lock
aaa
mov
cmp
inc
test
leave
insb
icebp
and
pop
xor
push
ja
ds
addr16
arpl
xchg
lods
mov
cmpsl
xchg
xor
cwtl
pusha
cmc
movsb
adc
divl
decb
xor
adc
xor
lahf
or
gs
iret
jle
flds
xor
clc
div
cmp
adc
mov
ja
pop
arpl
jmp
xor
cmpsb
xor
test
pop
ja
inc
js
out
int3
fcmovnb
push
mov
cld
inc
daa
scas
xchg
js
add
push
jb
fst
pushf
insb
aas
cwtl
adc
lret
cmp
lods
fistl
adc
cwtl
cmp
les
cmp
pop
dec
xlat
add
in
push
mov
lcall
xor
mov
xor
ja
loope
and
aad
out
fwait
ds
xchg
sub
xlat
pop
dec
aam
xchg
repnz
xor
lret
pop
stc
lahf
gs
mov
mov
aas
xchg
sbb
out
or
and
mov
and
sub
fs
and
sub
xor
push
mov
lods
xchg
ljmp
fstl
loope
fdivrs
xor
mov
fldcw
jbe
dec
fs
sbb
ds
repnz
push
mov
mov
jo
out
mov
pop
and
bound
mov
imul
push
mov
rcll
gs
sbb
and
test
jae
int
or
and
outsl
mov
pushf
xor
jns
mov
mov
scas
call
cld
sar
pushf
cmp
test
and
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
jmp
stos
f2xm1
mov
sahf
cmpsl
fldpi
xor
stos
loop
ljmp
movlps
xor
xor
cmpsl
xor
jecxz
repz
pop
in
pop
cmp
mov
pop
inc
ja
inc
aam
pusha
je
jb
outsb
lcall
sbb
push
mov
nop
push
rorb
jne
push
mov
sub
xchg
push
xchg
and
js
sti
movsl
pop
dec
jns
and
hlt
pop
pop
adcl
inc
push
popa
out
out
jnp
mov
aas
mov
mov
jb
iret
repnz
push
inc
popa
sbb
pop
fcomps
out
pop
sbb
pop
inc
jbe
adc
jbe
lcall
bound
mov
mov
add
dec
push
sarl
in
rcrl
popa
and
or
pop
push
movsl
mov
sbb
dec
jl
push
push
sub
into
lock
repz
addl
orb
in
mov
pop
sub
insl
mov
and
ljmp
mov
jnp
lret
and
pop
mov
lret
jbe
repz
xchg
xlat
jnp
jge
dec
lret
sbb
and
int3
test
and
pop
test
dec
and
shlb
mov
push
test
loope
mov
bnd
pop
mull
sbb
mov
cmp
ds
popf
pop
loopne
sub
xchg
push
xchg
cmp
xchg
add
and
std
sub
lods
pusha
subl
dec
movb
leave
cli
mov
xchg
jecxz
cmp
loope
mov
and
xor
xchg
jo
cmpsl
mov
sub
test
adc
lret
mov
inc
loope
xchg
adc
repz
aas
aaa
mov
mov
adc
pop
xor
or
aaa
sbb
lock
pop
push
cmc
clc
jl
cmp
cmp
test
jo
outsl
sub
out
mov
jmp
push
cmp
xor
sub
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
jmp
push
loope
dec
cmp
push
fsts
test
adc
adc
in
fbstp
aad
ja
jp
ret
pop
and
add
pop
push
sbb
mov
divb
cmp
loopne
mov
add
fucomi
xchg
inc
mov
add
pop
ds
mov
cwtl
xor
lds
pop
clc
lods
cmp
std
jg
mov
fidivs
xor
jno
xchg
mov
mov
sahf
lods
ds
sub
std
rcll
shl
push
in
inc
add
stos
cmp
xor
clc
add
repnz
adc
mov
fcmove
or
jo
push
loop
iret
sbb
pop
shlb
test
cmp
fiaddl
push
hlt
daa
outsb
inc
aam
clc
andw
or
push
xor
mov
sub
pop
sbb
stc
aaa
sahf
ljmp
cwtl
push
clc
imul
sub
out
lds
inc
jge
pop
xchg
test
pop
dec
shl
and
clc
data16
sub
xchg
cmc
rorb
adc
pop
xchg
mov
imul
lahf
int3
xor
mov
or
into
adc
pop
add
sub
mov
push
and
mov
repnz
loope
pop
lret
imul
aas
adc
int3
sbb
mov
mov
cmpsl
sub
cmp
push
mov
xor
pop
lahf
push
ss
addr16
cmp
xlat
adc
lock
sub
test
dec
js
inc
mov
push
mov
jecxz
pop
test
out
xor
addr16
jle
xlat
shrb
hlt
sti
cld
int
push
push
jecxz
cmc
push
cmpl
cmp
clc
popf
mov
and
cs
pop
mov
xor
out
std
adc
xchg
sbb
insb
test
ret
in
popa
shrb
xor
lods
jmp
jle
mov
fildll
mov
push
scas
pusha
out
dec
je
test
decl
pushl
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
jmp
mov
jl
push
push
pushl
pushl
pushl
push
push
push
push
push
pushl
pushl
pushl
pushl
call
adcl
orl
sbbl
xor
and
movl
sbb
push
adcl
push
movzwl
and
mov
adcl
or
movl
jne
or
mov
mov
cmpl
movl
movl
jmp
movl
mov
jle
push
push
push
push
pushl
pushl
push
call
sub
and
inc
notl
or
or
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
jmp
mov
sub
push
loopne
stos
outsb
test
adc
mov
faddl
sbb
xlat
sbb
lock
mov
and
js
cmpl
es
pop
jmp
xor
loope
fwait
pop
push
and
pushf
push
or
mov
inc
or
inc
decl
or
inc
and
lcall
inc
cltd
mov
pop
jb
push
test
adc
sbb
sub
cmp
shll
inc
xchg
adcl
imul
jne
dec
lock
inc
adc
push
pop
sbb
sbb
xchg
cmpsl
ret
lods
stc
int3
add
mov
outsl
jae
loope
loopne
mov
lock
lods
sub
dec
cmp
pop
pop
jecxz
outsb
inc
insb
sqrtps
cmp
int3
lds
bound
or
test
sbb
cmp
xchg
cmp
dec
add
sahf
aam
sbb
jae
adc
fxam
fiadds
push
inc
daa
pusha
add
arpl
push
leave
inc
cmpsl
push
icebp
cmp
sub
dec
hlt
aad
dec
mov
scas
sbb
sarl
popa
push
mov
lods
mov
xchg
dec
and
mov
mov
push
loop
lods
jns
cmc
jo
or
push
in
mov
dec
cs
loope
call
pop
shlb
std
bound
xor
outsl
xchg
mov
in
adc
mov
icebp
out
push
dec
out
scas
xchg
pop
mov
push
adc
pusha
jge
and
sbb
jge
aaa
dec
repz
clc
xor
cmc
jg
ljmp
mov
mov
xchg
mov
lcall
add
testl
aas
ja
stc
push
mov
adc
mov
aam
xchg
mov
fsubr
cmp
loopne
call
clc
push
mov
in
dec
aas
stc
mov
loope
jae
xlat
pop
mov
stos
mov
aas
sub
lds
pusha
jbe
push
mov
mov
call
adc
fmul
jnp
adcb
clc
mov
hlt
lds
jo
jge
nop
push
and
sbb
inc
dec
dec
and
dec
and
xor
mov
add
jnp
cmp
mov
lock
cmp
push
jmp
aam
mov
and
add
xor
mov
mov
xor
pop
inc
push
lcall
xchg
in
adc
mov
sub
mov
sbb
xor
fcomi
jo
bound
popa
jo
mov
ja
lea
int
test
movsl
aas
xchg
cwtl
xchg
mov
xor
lcall
mov
pop
dec
lret
int
adc
packsswb
arpl
push
repnz
adc
add
xor
push
fnsave
xor
in
xchg
inc
roll
jo
cmc
xor
jne
mov
pop
add
dec
stc
loope
xchg
push
clc
adc
mov
adc
lea
or
jecxz
or
lods
mov
lcall
faddl
stos
adc
jmp
call
jmp
add
or
sbb
and
lret
push
xchg
js
adcb
and
and
ret
mov
rolb
jl
lret
mov
pop
push
fmuls
stos
outsb
mov
xor
loope
jge
test
and
push
cli
bound
ffree
sbb
lcall
push
leave
jnp
in
repz
adcl
mov
addr16
dec
sbb
outsb
ljmp
mov
mov
das
jae
shll
out
daa
sub
loopne
fs
pushf
cmc
test
mov
mov
pop
adc
ror
iret
cmp
fmuls
pop
leave
push
daa
mov
push
mov
dec
aam
scas
sbb
js
adc
lea
ljmp
mov
dec
xor
imul
mov
mov
lods
and
or
cli
mov
pop
fldl
add
lret
cmp
sbb
je
lds
mov
push
in
xor
iret
pop
jae
popa
fst
pop
jecxz
ja
out
mov
loop
insl
test
jmp
pop
dec
and
pop
inc
jg
imul
movsb
mov
pop
sub
mov
fs
fstl
shlb
lret
or
inc
fimuls
pop
cmp
data16
xorl
inc
stos
and
adc
jp
fwait
or
jl
fistps
bound
sarb
jo
hlt
mov
scas
in
cmp
xor
add
cld
inc
mov
ficomps
ret
pop
push
jecxz
push
pop
inc
jecxz
push
inc
sarb
xchg
push
cmp
pmulhw
cmp
in
push
repnz
jg
popf
js
test
or
int
jbe
jne
cmp
or
xchg
mov
or
cmp
rclb
adc
imul
mov
push
jge
push
push
jo
mov
mov
sbb
mov
add
fildll
popf
adcl
ret
cwtl
xor
mov
ror
cmp
xor
cli
jbe
imul
mov
mov
cmpsl
mov
or
das
cmpsl
jecxz
aam
dec
cli
pop
scas
mov
jmp
inc
sbb
repnz
fmuls
shlb
pushf
sub
pushw
xchg
jns
rol
shll
in
pop
fisubrl
push
scas
cmp
inc
lahf
aad
sub
xchg
into
add
inc
sub
lret
daa
cmp
push
xor
mov
jno
fdivrs
dec
push
inc
call
mov
test
repnz
popa
add
add
mov
pop
lahf
dec
fstl
and
xor
and
imul
jbe
sub
adc
rcrl
ficoml
add
mov
inc
lea
sbbl
cwtl
adc
adc
mov
lcall
or
movsl
jns
add
int
test
sbb
and
outsl
clc
dec
xor
mov
stc
shl
push
pop
pop
rcr
test
xor
xchg
add
pushf
ljmp
mov
fcmovnbe
ljmp
dec
cld
push
repz
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
sbb
add
mov
movzbl
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
xor
subl
and
shl
ret
xor
xor
ret
