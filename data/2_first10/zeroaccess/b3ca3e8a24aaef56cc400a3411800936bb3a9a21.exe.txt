push
mov
sub
mov
jmp
incl
shlb
fs
jecxz
jle
jle
jg
jle
xlat
cmp
ror
pop
add
add
xor
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
call
pop
xchg
and
aas
out
jg
mov
test
jmp
movsl
mov
mov
adc
mov
rclb
fucomp
push
jecxz
sub
test
and
sub
add
ss
pop
mov
arpl
cmp
fwait
sbb
cmp
sbb
mov
out
push
mov
xchg
cltd
mov
mov
popf
jge
cmp
cmp
cmc
pop
push
mov
and
orb
and
addl
cs
aad
or
ss
add
lcall
mov
sti
test
xchg
call
and
outsb
fcmovnbe
aam
cld
jo
out
sbb
add
sarb
push
aam
push
mov
test
hlt
cmp
repz
imul
negl
out
mov
fstpl
or
ret
pushf
cmp
mov
mov
mov
movl
cmp
jne
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
jmp
out
sub
xor
imul
and
adc
cwtl
jg
jle
jg
jle
fstl
aaa
stos
roll
loope
fiadds
or
adc
xchg
pop
jmp
push
in
sahf
xchg
or
pop
dec
dec
xlat
inc
or
gs
mov
add
cmp
adc
mov
inc
and
stos
xchg
jb
stos
xchg
addr16
cmp
xor
inc
mov
adc
fcmove
rcl
sahf
xor
inc
dec
lahf
jmp
stos
jmp
xor
fwait
jbe
mov
lock
jns
pop
ljmp
jecxz
pop
popa
out
pushf
stos
and
lods
mov
push
jnp
mov
rolb
out
or
or
imul
and
repz
cmp
cmp
xorb
jnp
xor
enter
xchg
add
mov
aaa
hlt
adc
test
pushl
nop
fsubl
adc
and
pop
dec
cmp
stc
fcompl
jmp
lods
cmp
jns
mov
adc
adc
pop
adc
fdivr
pop
pushl
xchg
lcall
xlat
stc
cltd
add
hlt
mov
fsubrs
mov
or
lret
push
sub
arpl
sub
and
adc
popa
push
loop
mov
testb
jl
jns
push
test
mov
xor
dec
mov
je
xchg
jmp
lahf
push
shl
mov
mov
mov
push
xchg
into
and
aas
or
fiaddl
out
xchg
or
jecxz
inc
pop
jl
ljmp
dec
test
mov
add
add
xor
movzwl
or
mov
jmp
adc
insl
xchg
jo
or
fidivl
jge
jle
jg
jle
fwait
mov
jae
add
fsubrp
dec
inc
out
adcl
and
adc
insb
mov
cli
popa
sub
adc
and
ljmp
test
pop
mov
pop
jp
pushl
scas
lods
cmp
jns
sbb
xchg
jecxz
inc
aam
sbb
lods
push
jb
sbb
pushf
jp
mov
int
cli
inc
lret
icebp
dec
jb
sub
inc
xchg
idivb
jg
mov
fcomps
adc
push
mov
mov
pusha
mov
push
fnsave
or
adc
push
push
sub
mov
jge
call
pusha
sbb
pop
nop
jmp
imul
pushf
push
stc
fcompl
or
sbb
imul
mov
stos
insb
jp
jns
jo
call
sbb
out
push
mov
or
or
movmskps
lds
les
sub
fcoml
movsb
stos
fcoms
or
test
mov
pop
xchg
mov
dec
adc
imul
lcall
jge
xor
scas
lock
add
aad
je
orb
push
push
rolb
addl
xchg
insb
xor
push
mov
or
add
xor
shl
sub
dec
mov
mov
sbbb
stos
adc
mov
push
and
jmp
push
and
pop
xor
jno
cmpsl
cmp
push
out
test
cwtl
jg
jle
es
lds
push
movsb
pusha
sbb
jnp
sub
dec
pop
shll
sbb
movsb
xor
cltd
lret
jne
sub
sub
add
les
pusha
movsl
xchg
sub
fdivl
in
pop
test
cltd
gs
mov
lret
inc
mov
mov
ja
lds
leave
hlt
inc
sub
insb
lret
addr16
xchg
pop
jge
cmp
pop
and
cs
sub
fs
mov
or
shlb
inc
shl
pop
aaa
add
cld
loop
pop
outsl
lret
sbb
push
push
out
pusha
insl
mov
or
sub
push
sbb
cld
je
dec
popa
jns
cltd
inc
sub
cmp
cmp
stos
xchg
rclb
mov
mov
addr16
ss
lahf
cwtl
sbb
cmp
push
and
shr
mov
pop
jae
push
and
leave
lahf
fisubrs
arpl
call
dec
testl
fsub
sbb
jp
mov
lods
pop
fcoms
outsb
adc
push
shrb
call
pop
mov
inc
in
inc
xor
outsb
jmp
nop
mov
arpl
bound
fdivrl
mov
imul
mov
cmpl
mov
dec
mov
ret
xchg
mov
test
mov
aam
out
stos
push
sub
mov
lods
loopne
cmp
add
add
add
movl
movzwl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
sbb
not
and
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
sbb
mov
push
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jb
mov
movzwl
mov
mov
mov
movl
movl
mov
mov
lea
mov
mov
mov
lea
mov
mov
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
jmp
movl
popa
movsl
ja
and
xchg
js
jle
jg
jle
xchg
mov
jp
push
mov
je
and
mov
add
outsb
lds
pop
pop
sbbl
les
adc
add
es
outsb
arpl
jecxz
and
mov
pop
mov
dec
lock
inc
std
test
jne
mov
xor
xorl
xor
dec
imul
or
aas
xor
mov
test
jnp
xchg
dec
lret
xor
cmp
add
lret
out
aam
pop
dec
ror
add
cmpsl
mov
outsl
mov
push
cmpsb
fcomps
shrl
daa
loop
scas
lds
dec
and
out
mov
and
in
das
adc
fucom
nop
cmp
popa
fstl
xor
fxch
in
shl
cmpsb
inc
pop
rcrl
cltd
rorl
adc
mov
fdivrl
cltd
and
sub
jmp
pop
loope
movsl
ljmp
shll
shll
inc
scas
mov
les
mov
aas
xchg
aad
inc
push
repz
addr16
push
mov
mov
jg
ljmp
dec
mov
gs
lret
hlt
or
xor
addr16
outsb
rorl
call
outsb
js
fcmovb
jbe
stc
je
mov
sbb
rorb
adc
or
pop
data16
arpl
and
dec
xor
scas
rorb
pop
in
rcr
out
sub
dec
cwtl
push
jmp
inc
add
lds
mov
or
lea
mov
mov
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
jmp
das
adc
inc
icebp
inc
mov
test
and
mov
push
jle
cwtl
jg
jle
loopne
outsl
sub
subb
arpl
xor
jbe
adc
add
jecxz
add
jo
or
dec
mov
mov
mov
mov
push
pop
sbb
xor
dec
in
sbb
ror
je
notb
aaa
mov
sbb
lret
and
and
push
repnz
in
in
outsb
dec
and
xor
movsl
out
jmp
insl
repz
es
sbbl
rcrl
psubsw
fucomip
fistl
inc
mov
movsl
inc
xadd
add
sbb
arpl
movsb
ds
mov
stos
xor
dec
pop
ja
aad
cmp
add
fistl
shlb
jns
mov
scas
pop
pusha
mov
je
mov
push
cmpsb
mov
cmpsl
cmp
popa
aam
pop
cmp
repz
xor
pop
loopne
rclb
mov
scas
and
push
cli
xchg
mov
out
dec
outsl
loop
xchg
hlt
cmc
pusha
fiadds
cwtl
bound
in
pop
and
mov
xchg
mov
stos
dec
mov
mov
adcl
xchg
sti
dec
jg
clc
int
popa
mov
push
xchg
mov
adc
rolb
xchg
mov
add
mov
xchg
add
movsl
push
pop
dec
dec
je
aas
sbb
mov
rcll
int3
fs
testl
add
mov
mov
xor
mov
mov
add
cmp
je
mov
xor
jmp
mov
lcall
pop
imul
jle
jg
jle
cwtl
jl
addr16
dec
ret
mov
push
mov
aad
sbb
mov
mov
push
rorl
add
push
or
pop
xor
lock
fs
mov
push
into
dec
mov
pop
int
adc
fsubrl
lods
push
cmp
cmp
lods
pop
and
cmpsb
sbb
scas
scas
jl
xchg
loop
pop
stos
or
pop
push
fs
pop
popa
gs
push
add
inc
divb
mov
leave
cmp
scas
push
in
lods
in
mov
xchg
mov
cmp
movsl
mov
lock
pop
cmpsb
and
jle
mov
jne
ss
push
adc
popa
aam
mov
inc
and
push
jecxz
cmp
mov
cmc
sbb
pop
fcmovu
fisubrs
push
cmp
aam
pop
cli
jo
lea
loop
mov
xor
xor
loopne
cmc
inc
mov
ret
push
cld
mov
xor
stc
jg
mov
movsl
pop
shrb
insl
cwtl
lahf
sbb
ljmp
fidivs
xorl
addps
pop
jns
in
jg
fnstenv
or
loopne
sbb
iret
mov
mov
lods
mov
mov
push
inc
test
je
es
sub
jnp
add
cmp
inc
lret
shll
arpl
pop
inc
add
pop
sahf
cmp
xor
in
mov
in
sar
xor
xchg
insb
push
jp
fwait
dec
mov
pop
inc
dec
adc
jge
rolb
repnz
adc
ja
repnz
inc
rorb
push
enter
add
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
outsb
jecxz
mov
jne
add
jns
std
addb
jle
or
out
sarb
jae
or
fildll
inc
mov
adcw
les
imul
fwait
adc
es
aas
push
sub
xchg
inc
out
sbb
dec
jns
pop
pusha
and
mov
testb
test
cld
pop
xchg
mov
sbb
imul
adc
movl
fnstenv
mov
mov
push
mov
cmpsb
xchg
negb
in
stos
rclb
push
mov
dec
aam
mov
mov
push
mov
sbb
xchg
daa
dec
cmp
loope
mov
hlt
mov
mov
arpl
not
push
shlb
sub
adc
jb
mov
dec
das
cmp
pop
out
aam
push
pop
int
push
pop
cwtl
xor
adc
rcll
cli
xchg
ja
sub
icebp
xor
test
imul
out
insl
movb
and
repnz
dec
inc
and
mov
inc
icebp
add
push
test
scas
in
loope
cmp
sbb
and
xchg
dec
lahf
fstpt
push
pop
xchg
adc
pop
jae
adc
les
cli
add
inc
filds
out
jnp
adc
inc
push
lahf
inc
and
call
rcrl
fs
sub
or
sub
and
daa
jp
pop
scas
inc
jno
xorl
pop
fstl
add
sti
xchg
mov
xchg
and
nop
inc
sbb
repz
insl
lea
test
push
mov
adc
and
adc
outsl
in
inc
add
add
add
add
adc
cmpl
jne
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
adc
jmp
je,pt
cltd
mov
out
sub
mov
insb
cmpsb
jb
add
push
jg
jle
mov
jbe
or
sbbb
mov
ret
adc
xchg
inc
lahf
xor
xor
cli
jecxz
inc
call
push
movsl
mov
sbb
dec
lds
mov
mov
jle
fiaddl
mov
adc
dec
and
test
scas
mov
fwait
shl
aam
mulb
repnz
aaa
mov
jp
iret
test
xor
push
inc
movsb
lret
sub
lret
mov
inc
cs
cmpsl
enter
xchg
and
cli
xchg
adc
ja
xchg
out
movsl
pop
test
sub
fidivrs
or
and
inc
cwtl
popl
outsb
mov
jmp
add
or
stos
lods
add
test
sub
and
popl
stc
fadd
out
inc
ret
and
in
pop
add
mov
shrl
mov
iret
sti
pushf
daa
xchg
mov
cmpsl
jns
xchg
sarl
es
dec
pop
pop
xor
movsb
es
add
cmpsl
xchg
inc
out
dec
mov
test
mov
into
xchg
push
push
dec
cmpsl
push
xchg
mov
mov
push
bound
cltd
popa
out
pop
jo,pt
popf
fwait
movb
into
loopne
divb
push
or
pop
icebp
stos
fs
in
push
sub
sbb
ja
lods
fs
out
inc
cmpsb
int3
xlat
in
push
push
cmpl
mov
sub
jae
fmull
cld
pop
mov
mov
out
jno
mov
lret
push
pop
shlb
or
aam
jmp
icebp
lret
jmp
loope
fimuls
or
and
shll
or
pushf
rolb
fmuls
loope
or
and
cmp
add
mov
movzwl
xor
mov
mov
xor
movl
mov
addl
push
mov
xor
or
and
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
lock
xchg
aaa
insl
add
lret
add
push
jg
jle
lahf
push
ss
scas
jecxz
lods
testl
sbb
mov
sub
inc
sti
shl
cmp
sub
lcall
mov
daa
pop
mov
in
jl
lret
mov
push
aad
lahf
rclb
inc
and
rol
or
cmp
cmp
mov
sarl
mov
ficompl
pushf
ret
pop
fyl2xp1
inc
pop
icebp
push
rcrb
cmpsb
mov
pop
sahf
pop
jmp
pusha
mov
call
in
cmpb
cwtl
fistpll
or
fistpl
add
aas
out
adc
out
loope
add
call
sub
pop
sbb
jnp
cwtl
mov
xor
cmp
or
pop
pop
sti
std
push
insb
icebp
jg
nop
lahf
adc
negl
dec
sbb
orl
or
aas
jge
inc
dec
lods
out
sub
aas
jbe
rorb
movsl
or
sbb
add
loop
decb
cwtl
arpl
mov
add
dec
mov
sbb
sbb
mov
cmp
xor
std
cltd
sub
stos
add
sti
stos
cmp
cmpb
dec
pusha
stos
mov
add
add
ret
orl
inc
sub
push
cmp
xchg
pop
repnz
cmp
pop
imul
pop
into
iret
clc
mov
int
stos
dec
xor
push
jg
mov
sbb
pusha
popa
xchg
dec
xor
cmpsl
inc
outsb
inc
and
sbb
pop
push
inc
movsl
fdivl
inc
insb
xchg
xchg
pop
mov
adc
adc
int3
jecxz
in
call
popf
in
scas
fistl
jge
add
cmp
je
mov
mov
xor
mov
sub
jmp
insb
cmp
arpl
push
xor
pop
adc
jg
jle
pop
rolb
inc
pushf
fsubrl
dec
dec
or
sahf
nop
jae
jb
jns
and
pusha
sub
cmp
mov
push
in
cmc
dec
mov
mov
pop
sbb
and
mov
xor
sahf
sub
cwtl
sub
movsb
stos
mov
psubsb
sar
mov
jmp
daa
adc
loopne
xchg
adc
mov
out
pushf
daa
les
sub
jb
test
shr
xor
scas
sub
out
dec
xchg
jge
pop
into
xlat
push
int3
or
push
cmp
add
imul
lock
test
repnz
adc
mov
cmp
xchg
cmp
xlat
lret
adc
mov
sub
out
pop
sub
pop
dec
aas
jmp
pushf
add
jae
cwtl
xchg
pop
stc
cmpl
sbb
inc
pop
test
push
or
pop
jo
out
ficoms
stc
les
clc
sub
out
pusha
mov
lods
xlat
mov
pop
cmp
popa
push
lods
mov
loopne
lret
cmc
sub
jl
das
cwtl
mov
stc
fldl
rcrb
icebp
dec
sub
inc
pop
gs
dec
test
pushl
pushf
mov
add
out
fstps
in
dec
mov
lea
mov
testl
cmp
xor
mov
sub
mov
in
push
ds
es
je
cmp
xor
jbe
ljmp
jmp
sar
push
adc
test
push
cld
sti
dec
lods
mov
pushf
cltd
xor
xorl
hlt
cmpsl
rcll
shrb
push
sub
lret
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
lock
xor
jo
repnz
pop
mov
shrl
jle
push
jg
jle
jge
mov
mov
adc
cmp
adc
lea
add
mov
xchg
gs
mov
pop
sbb
and
in
out
add
push
dec
pop
xchg
add
jecxz
lahf
out
les
sbbl
adc
sbb
inc
mov
rorb
test
lds
lock
nop
dec
and
mov
loop
mov
jnp
aam
in
loop
jge
mov
lods
mov
testb
pop
cmc
addr16
adc
adc
loop
push
in
mov
adc
push
mov
mov
sbb
jg
into
out
mov
pop
lods
cmp
out
adc
push
in
in
lea
cli
push
pop
bound
adc
popa
push
lcall
pop
lock
cmp
ljmp
mov
ljmp
cmpsb
es
jmp
or
mov
mov
add
pop
cmp
jb
mov
mov
loope
push
jge
fs
fidivs
fwait
and
cmp
frstor
stos
jl
fwait
sti
jle
inc
fsub
mov
mov
addr16
cmpsb
mov
adc
xchg
mov
aaa
mov
cmpsl
scas
in
cmc
in
cmp
outsl
and
cmp
push
cwtl
sahf
ds
imul
sub
fs
xchg
jp
adc
pushf
pop
lds
dec
enter
out
fistpl
testl
jb
jb
lcall
jmp
adc
in
xchg
mov
loopne
push
sbb
jns
push
fsts
sahf
ljmp
decb
cli
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
outsb
add
and
add
mov
popf
add
dec
or
push
jg
jle
sysret
cmp
mov
cmp
mov
ret
or
mov
in
test
push
icebp
sub
push
push
mov
mov
pop
pushf
daa
lods
shll
sahf
mov
and
inc
cmp
xor
add
loop
lret
mov
icebp
mov
std
pop
cwtl
mov
scas
loopne
dec
roll
icebp
orl
xchg
jns
out
and
data16
imul
loope
fcoml
ja
pushf
push
jo
dec
jg
lahf
aad
sub
adc
jnp
mov
mov
jns
cmpsl
in
and
shlb
leave
lret
jmp
repnz
fimull
mov
inc
mov
mov
iret
cmp
inc
into
add
mov
lahf
jno
rcrl
pop
cld
sbb
in
stos
xchg
adc
mov
pop
xor
push
jae
shll
or
ss
loope
das
fbstp
pop
fcoms
or
xor
lea
movsl
push
mov
lahf
mov
xchg
push
es
outsb
cld
mov
mov
push
jge
mov
rolb
jp
stc
mov
fistpl
test
or
outsb
aad
pop
mov
sub
ss
mov
lock
mov
mov
movb
in
leave
mov
mov
imul
xchg
adc
sarl
push
or
cmp
fisubrl
enter
mov
adc
mov
xor
pop
popa
in
add
pop
ss
jl
jo
xchg
test
dec
and
xor
hlt
mov
push
pop
cmp
add
push
mov
out
push
xor
mov
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
mov
mov
xor
mov
add
or
movzwl
mov
xor
mov
mov
movb
sub
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
mov
add
mov
movl
xor
sub
orl
mov
not
jmp
loop
fcoms
popf
mov
movb
jle
jg
jle
lret
fs
jle
inc
sbb
ds
cmpsl
jmp
xchg
clc
rolb
sbb
fnstenv
push
xchg
js
push
add
int
pop
pop
fistpll
es
test
cmpsl
outsb
inc
add
data16
jae
push
lods
xor
pop
shlb
mov
lods
dec
js
dec
testl
repnz
popf
movsb
es
mov
div
insl
cmpsb
pusha
lret
lcall
push
pushf
frstor
clc
xor
in
add
jns
imul
pop
sub
add
loope
lds
jecxz
mov
xor
and
or
dec
pop
xchg
movsb
rorb
jge
addr16
lea
sbb
ds
xor
into
out
mov
or
xchg
push
push
mov
dec
into
pusha
mov
or
push
or
inc
int
inc
mov
cld
jg
popf
mov
jbe
fstps
das
mov
xchg
popf
add
loop
divl
sbb
pop
adc
daa
lds
lds
std
daa
insb
push
dec
mov
repz
xor
mov
mov
cwtl
and
and
dec
jb
insb
imul
inc
lahf
push
xchg
jge
dec
pop
repz
mov
popf
fs
in
lret
scas
in
xor
cli
add
cld
test
imul
jge
or
jp
pop
test
int
imul
into
push
fstpl
and
jmp
rcrl
dec
int
cmp
in
mov
xor
fdivrs
sahf
jae
stos
fwait
ljmp
clc
movl
or
mov
movzwl
adc
mov
subl
push
xor
andl
jmp
inc
jp
cs
mov
jno
pop
jae
shlb
rclb
jle
scas
jg
jle
xchg
jbe
and
testb
inc
inc
sbb
xor
scas
enter
arpl
clc
test
sbb
clc
inc
addr16
aad
test
dec
in
inc
inc
xchg
pop
subl
mov
ret
je
imul
std
in
jp
mov
in
mov
jbe,pn
xchg
xor
es
fiadds
sbb
popa
aaa
sbb
sarl
fistpl
pop
pop
out
shr
sub
adc
aas
cmc
int3
sbb
jl
cmp
dec
rcll
dec
push
imul
cwtl
mov
jl
pushf
or
or
adc
aas
les
sarl
mov
insb
in
add
adc
pop
fistpll
inc
es
mov
push
daa
dec
in
mov
rcll
in
inc
shll
jbe
jg
cmc
int
ljmp
imul
insb
subb
xor
bound
aaa
outsb
sbb
mov
lods
insb
loop
mov
sub
adc
and
lcall
test
mov
mov
sub
lret
push
push
fwait
push
push
int3
test
mov
adc
orb
dec
mov
loope
xor
jnp
mov
mov
stos
xor
aas
sub
into
or
popl
jge
mov
idivb
mov
and
pop
addr16
sti
es
push
or
xchg
das
call
xchg
nop
repz
lods
push
lret
das
and
dec
mov
negl
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
mov
andl
test
cmp
add
jle
jg
jle
mov
insl
lret
mov
ljmp
mov
in
xor
xor
loopne
xor
and
xorl
xor
sbb
jp
js
arpl
xor
in
xchg
aad
sub
push
jno
div
and
pop
idiv
xchg
fs
dec
sbb
aad
sub
add
mov
leave
cmpsl
mov
sbb
inc
stos
pusha
adc
test
jnp
scas
mov
dec
enter
loope
pop
je
xor
iret
adc
xorb
mov
xchg
gs
ret
andb
test
mov
cmc
mov
push
and
cmc
add
insb
call
or
mov
js
add
addl
or
pushf
or
aam
mov
add
mov
in
fisttpl
xorl
call
and
fdiv
fcompl
jl
add
push
adc
lods
rcr
inc
out
arpl
out
add
insl
stos
ret
or
fadds
dec
data16
xchg
cmp
mov
cmp
loope
out
mov
rcl
pop
lods
dec
sub
mov
mov
or
xor
or
jmp
shlb
mov
mov
ret
jno
xchg
add
cmp
jno
push
into
leave
inc
jns
mov
movsl
xchg
xor
sbb
mov
mov
in
cmpsb
pop
std
xchg
mov
mov
or
sbb
idiv
mov
pop
add
sub
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
jmp
jo
add
mov
push
fnsave
scas
jg
jle
bound
mov
pop
loop
cld
mov
out
hlt
ss
add
push
push
fisttpll
mov
in
popa
push
lret
jbe
or
mov
mov
jae
lret
leave
aad
stos
nop
outsl
push
ret
insl
xor
fwait
xchg
in
xchg
std
shl
dec
jp
int3
or
lahf
into
lds
pushf
roll
mov
ffreep
push
ljmp
in
xor
imul
test
aas
fsubrs
sub
movsl
dec
ja
mov
push
push
jnp
xor
add
cwtl
int3
stos
shll
pusha
ror
cmpsl
stc
lock
pushf
xor
out
and
mov
outsl
push
popf
pop
call
rorl
jle
imul
divb
testb
daa
iret
inc
lods
sarb
lds
jl
inc
aaa
pop
ret
rol
or
mov
inc
lods
and
pop
jnp
roll
mov
mov
sub
xor
shlb
je
xchg
fistpl
dec
xor
jecxz
int
ds
stos
mov
jg
insb
out
out
dec
out
and
lds
sub
cld
arpl
loope
mov
mov
out
sbb
jmp
push
adc
outsl
hlt
divb
cmpsl
add
pop
adc
sbbl
and
dec
pop
sarb
dec
pcmpeqd
andb
out
pop
dec
sbb
add
and
mov
sbb
pop
mov
xor
add
jmp
jl
mov
mov
jge
fldl
call
sti
loop
jle
scas
jg
jle
push
mov
imul
dec
cmp
stc
push
mov
cmp
das
stc
cmp
movsl
out
in
je
inc
pushf
pop
cmp
jns
hlt
sbb
pop
jo
test
sbbb
cmp
mov
rcr
sarb
addr16
and
insl
or
xchg
xor
lret
adc
pusha
addr16
out
out
mov
stos
xchg
push
mov
popf
and
lock
dec
dec
xchg
sahf
test
mov
or
mov
push
sbb
insb
std
flds
and
jecxz
mov
mov
jmp
fisttps
test
das
inc
xor
fisttpll
call
fxch
mov
daa
cmpsb
push
cmc
and
add
rclb
pop
jne
push
scas
int3
and
icebp
jle
xchg
pop
shrb
mov
in
dec
xchg
nop
dec
mov
sahf
decl
xor
add
push
inc
mov
add
test
testb
repnz
xor
inc
mul
imul
stc
stos
mov
add
pop
xor
lods
sbb
das
loope
push
hlt
push
ret
filds
mov
push
sbb
pushf
cwtl
jmp
stos
fdivrl
outsb
adc
scas
jl
into
std
inc
fisttpll
fldt
les
shlb
mov
sub
pusha
mov
stc
mov
add
daa
popf
jbe
in
push
dec
cld
jbe
je
or
clc
jmp
jl
mov
mov
out
nop
nop
iret
sahf
pop
mov
push
pop
xchg
lcall
xor
stc
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
lret
int3
push
push
mov
push
mov
adc
jle
scas
jg
jle
dec
movsb
and
arpl
dec
js
mov
mov
pushf
add
inc
aam
scas
jp
lea
push
add
ljmp
pop
sbb
and
dec
pop
jo
ss
ret
inc
fs
adc
iret
pop
jno
push
mov
push
jb
jae
pop
daa
push
mov
xor
xchg
aaa
or
sbb
mov
cmp
inc
mov
add
out
sub
popf
ror
and
mov
cli
incb
sbb
icebp
mov
bound
adcl
jmp
jo
loope
rorb
rcrl
pop
sbb
push
bound
pop
mov
pop
repnz
cs
jb
mov
push
sub
adc
xchg
dec
fcmovnbe
mov
xchg
jae
sub
rol
push
cmp
push
xchg
out
sub
je
data16
lea
push
sarb
xchg
paddq
rorl
inc
adc
dec
outsb
into
loope
test
fdivrp
sub
mov
xchg
in
out
cltd
push
fldt
fisubrs
addr16
add
push
add
mov
jae
out
push
ljmp
xor
clc
add
mov
ja
nop
enter
and
or
mov
ficompl
loopne
out
enter
roll
call
cwtl
popl
inc
mov
cmp
les
out
lahf
insl
mov
adc
scas
mov
mov
cmc
lods
int
je
movl
jmp
scas
or
xor
mov
outsb
adc
jg
jle
insb
jnp
push
push
push
mov
cmpxchg
shr
mov
jg
or
roll
xor
in
push
sbb
add
fcoml
cmp
lock
mov
or
pop
out
jns
cmp
xor
stos
dec
cmpsb
test
jg
xchg
jp
shll
mov
mov
popf
push
add
test
icebp
xchg
cmp
iret
adcb
fdivrl
pop
pop
jge
dec
jne
pop
int3
out
mov
or
add
dec
add
mov
cmp
sbb
out
cld
mov
mov
sub
das
jge
je
ret
repz
add
jp
xor
mov
and
pop
fnsave
jns
push
mov
jns
mov
addr16
insb
cmp
mov
add
and
out
dec
or
roll
xlat
aam
jmp
fwait
sbb
add
inc
xchg
mov
loop
jae
sbb
js
xchg
push
fs
int
loope
ss
mov
stc
push
imul
imul
aas
push
push
sti
icebp
outsl
sbb
js
idiv
scas
xchg
mov
cmc
sarb
loopne
mov
pop
sbb
mov
mov
cmpsb
int3
jbe
loop
out
lock
prefetch
or
ror
outsb
or
push
xchg
pop
cmp
pop
out
sbbl
stc
xchg
lods
dec
stc
dec
sbb
mov
mov
out
popf
pop
iret
sub
shll
rorb
and
xchg
mov
dec
test
and
adc
mov
inc
in
mov
addl
jmp
mov
inc
push
push
jb
andl
scas
jg
jle
jb
lds
and
cmp
out
pop
add
fisttps
sbb
lcall
jp
mov
rdmsr
push
mov
leave
xchg
cs
jno
xorl
arpl
mov
stos
xchg
stos
add
enter
call
cmp
pop
test
xor
popf
or
cltd
bound
xchg
popf
sbb
pop
push
mov
lret
rorl
aad
mov
push
adc
pusha
dec
or
es
aad
xor
add
mov
fisubrs
mov
push
push
outsb
cmpb
flds
shll
jne
int
dec
pop
jnp
jo
mov
out
loop
mov
mov
inc
sbb
push
inc
jp
mov
jns
hlt
lds
sub
adc
pop
xor
sub
adc
ret
mov
call
inc
and
mov
lcall
scas
scas
jecxz
push
add
ret
mov
adc
inc
push
jecxz
sbb
out
sbb
dec
int
mov
adc
cmp
xchg
pop
shll
shll
jnp
aad
in
dec
fcoms
xchg
push
gs
inc
cmp
fldenv
pop
pop
pop
fabs
sbb
imul
xchg
call
or
push
xor
xor
xor
movsl
arpl
iret
cmc
into
xor
add
mov
adc
mov
xor
jmp
pop
sub
dec
insl
dec
imul
and
aad
and
scas
jg
jle
push
jo
das
aam
out
repz
and
add
dec
dec
sub
and
pusha
cmpsb
movsl
sbb
adc
push
shl
jle
cmp
movsb
imul
cltd
jle
pusha
call
mov
fwait
xchg
cmpsl
and
int3
lock
inc
ljmp
out
dec
out
jb
cmpsb
and
push
inc
movsl
insl
mov
lea
xchg
test
stos
mov
ret
mov
pop
xor
bswap
ja
movsb
cmp
and
ret
daa
and
push
xlat
jp
push
mov
and
mov
je
cmp
cli
js
lea
xor
test
jmp
call
push
out
push
add
jo
incb
mov
sub
add
out
mov
test
adc
dec
loopne
jmp
inc
pop
movsl
add
outsb
movsb
or
test
dec
mov
sarl
jo
cmpsb
xor
dec
pop
jns
stc
pop
or
adc
in
out
dec
lcall
pushf
or
cli
movsb
icebp
push
mov
data16
out
stos
mov
add
lock
pop
dec
clc
cmpsb
mov
mov
inc
arpl
dec
dec
push
pop
mov
into
xchg
and
jmp
cmp
insb
mov
sbb
push
repnz
repz
lock
jns
lcall
shll
adc
jno
loopne
enter
jg
cwtl
sbb
and
or
mov
adc
cmp
mov
loop
jge
and
pushf
cld
dec
jae
leave
sbb
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
push
movl
jmp
lcall
mov
ja
pop
rorb
inc
push
sbb
cltd
jg
jle
inc
cmp
fs
fsincos
jno
xor
decb
mov
add
call
add
test
mov
lret
rcrl
andb
mov
cmc
xor
sbb
xchg
les
fsubs
pop
out
cs
dec
adc
sub
xchg
aad
or
aam
fisttpll
in
jle
hlt
das
fldl
jecxz
adc
sti
mov
cmpsl
fwait
cmpb
push
lahf
jnp
lods
rclb
mov
es
inc
push
iret
add
roll
in
icebp
ja
dec
jle
lret
shrl
push
or
inc
jge
inc
or
cmpsl
enter
fnsave
cmpsb
adc
gs
int
push
lea
popa
mov
and
in
mov
jne
or
pop
les
lret
mov
xchg
jo
mov
mov
xor
aaa
cmp
testb
mov
icebp
fmull
sbb
xchg
rol
cltd
push
mov
xor
or
cmp
sbb
les
xchg
jmp
adc
daa
lock
lea
loope
mov
sar
nop
pop
cwtl
inc
jmp
mov
fwait
mov
shlb
and
jns
int
mull
mov
ljmp
adcl
stmxcsr
jnp
push
cmp
ret
ss
test
xor
mov
sahf
or
enter
icebp
mov
jbe
xchg
movl
adc
sbbl
mov
test
cmpsl
movl
mov
push
orl
mov
and
mov
orl
xor
addl
xor
mov
orl
add
add
subl
imul
mov
mov
cmp
jne
mov
mov
xorl
xor
andl
xor
xorl
jmp
jbe
cmpsl
adc
sahf
es
inc
pop
mov
jle
jg
jle
into
movsb
rcll
jp
pop
sub
xchg
sub
addl
rorl
and
icebp
int
mov
jmp
mov
mov
pop
mov
adc
bound
mov
jo
mov
pop
daa
lds
dec
jle
dec
ss
icebp
mov
shr
imul
xchg
cmc
mov
mov
add
rcll
inc
movsl
lods
mov
mov
push
cli
ja
xor
mov
sub
lds
pop
out
int3
jle
leave
rclb
inc
out
or
push
cmp
push
mov
dec
cmp
and
xor
lea
insb
movsb
in
test
xor
fisttps
push
inc
or
mov
fwait
mov
push
push
pop
in
fimull
in
and
xor
mov
enter
mov
icebp
int3
movq
fucomp
int
dec
cmp
jns
inc
fisttpll
and
cmp
test
into
aad
call
or
sub
xchg
xor
and
push
mov
xor
or
mov
sarb
inc
popf
pop
adc
test
sub
fcomip
sti
cwtl
jnp
push
and
in
jae
mov
push
cld
jmp
ficoml
adc
bound
imul
aad
xor
cmp
jecxz
cmp
mov
loope
xorl
add
imul
movl
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
movl
mov
mov
mov
sbbl
xor
subl
add
jmp
fnstenv
loop
jb
jno
in
jne
test
pop
and
jle
xchg
jl
jle
mov
pmovmskb
dec
stos
cmpsl
fisttpl
test
xchg
mov
inc
cmpsl
sub
push
rorb
or
mov
jae
aad
int3
inc
mov
mov
lea
imul
fxch
add
inc
sbb
je
xchg
int3
jle
aam
xchg
pop
sysret
decb
fidivrl
shrl
imul
bswap
stc
loopne
pop
jmp
leave
sti
sbb
ljmp
enter
mov
and
cwtl
adc
sub
pop
rcr
idivl
rolb
mov
mov
test
enter
subb
out
movsb
andl
add
ficoml
inc
arpl
sbb
pop
cmp
and
cltd
fnstenv
sub
jnp
adc
pusha
adc
adc
mov
shl
ljmp
and
sarb
cld
pop
jbe
fnstcw
lds
je
decb
jl
push
rorb
adc
imul
cli
sub
es
data16
fstpl
dec
movl
out
jle
loop
cmpsb
pop
pop
push
push
lret
and
pop
imulb
daa
dec
ja
inc
adc
inc
push
hlt
sbb
add
xchg
sub
ljmp
ret
xchg
rorl
leave
aad
sbb
xchg
rorb
aaa
aaa
or
je
clc
lcall
lea
out
test
scas
mov
outsl
out
imul
push
jb
xor
outsl
push
aam
sahf
jbe
or
or
mov
jg
into
fildl
mov
out
adc
mov
es
nop
divl
stos
and
scas
lock
test
cmp
pop
sub
cld
pop
daa
sub
iret
shll
cld
xchg
mov
icebp
jg
cs
out
mov
pop
cmpsl
and
push
mov
pop
xchg
or
mov
mov
push
push
jge
ljmp
dec
insb
pop
add
ret
daa
mov
ljmp
dec
sub
mov
fimull
dec
jo
daa
jp
lcall
jge
pop
dec
std
dec
iret
mov
or
ret
mov
push
add
repz
mov
loopne
push
inc
out
clc
adc
mov
mov
inc
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
xor
xor
push
mov
addl
mov
sbbl
add
addl
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
jmp
xor
loope
loope
icebp
pop
mov
lods
loope
jo
and
jle
pop
cli
inc
test
push
sbb
cmpsb
ror
call
aas
xor
cmp
nop
xchg
gs
insb
stos
pusha
aam
lock
stc
cs
xor
sbb
inc
adc
dec
test
mov
mov
les
push
aam
dec
pop
sbb
ficoms
xor
ss
fstps
insb
jo
lret
scas
nop
repz
mov
dec
call
mov
mov
icebp
pop
pop
jno
leave
add
jl
orb
mov
fcoml
mov
mov
fs
cmpsl
pop
shl
push
les
sti
add
pmulhuw
inc
lret
aad
outsl
test
xchg
pop
negb
mov
mov
mov
and
fidivs
sbb
nop
xor
div
enter
sbb
xchg
pushf
test
xlat
dec
adc
stos
pop
xchg
push
cmpsl
popa
xchg
ds
xchg
das
movl
movsb
pop
xor
into
add
xor
mov
sahf
push
in
movsb
ret
mov
dec
xchg
fists
mov
out
cmc
test
and
hlt
stos
out
dec
scas
cmp
add
data16
jecxz
gs
test
stos
mov
scas
enter
out
sbb
aam
hlt
adc
mov
in
js
xor
jmp
sbb
repz
lods
mov
js
push
jg
pop
in
test
ds
ljmp
jno
dec
jmp
dec
lds
inc
pusha
push
int
and
pop
fstps
push
mov
inc
jb
jo
push
cmc
dec
mov
enter
mov
push
push
inc
mov
inc
ds
dec
insb
loopne
pushf
add
cmp
xchg
sub
movsb
sbb
cmp
mov
adcl
mov
add
push
sarb
and
stc
pop
sub
and
shl
outsl
xchg
test
es
cltd
add
cmp
imul
xchg
testl
or
and
sbb
cli
xchg
pushf
mov
or
add
or
insb
leave
or
push
fisttpll
or
xor
or
sub
jns
cli
mov
or
mov
aaa
mov
xchg
test
jo
icebp
mov
and
or
mov
pop
ret
push
mov
jmp
pop
iret
xchg
cmp
jno
das
insb
xchg
mov
out
jle
outsb
jg
jle
sub
or
xor
jnp
test
call
orb
lods
and
jno
push
gs
out
jp
ss
in
divb
stos
add
std
int
jmp
dec
jbe
jae
jne
out
cmpl
idivb
test
and
movsl
insl
cmpsb
je
into
or
jnp
mov
cmpsl
lret
scas
fiadds
lret
push
xchg
adcb
sbb
pop
push
jnp
ret
ss
mov
mov
sahf
insl
or
loope
mov
loope
das
and
jne
pushf
xlat
cmp
sbb
cmp
mov
xchg
inc
sbb
add
stos
movsb
mov
sub
clc
xchg
and
push
pop
jbe
sbb
sbb
into
cmp
rorb
sarl
xor
mov
dec
mov
cmpsl
int3
mov
nop
or
xchg
pop
mov
or
xlat
testl
cmp
push
mov
xor
cmp
adc
jne
adc
movl
out
in
lar
inc
jbe
scas
ret
mov
jmp
push
dec
outsl
sub
and
aaa
adc
insb
dec
xchg
fldenv
adc
jmp
adc
loopne
sbb
pusha
jmp
mov
mov
dec
rcr
and
dec
jbe
pop
mov
lds
es
push
adc
or
ficomps
sbb
je
data16
adcl
rcl
pop
rol
aas
jo
and
jbe
test
out
pushf
xor
stos
xor
shll
and
xchg
insl
xchg
fwait
pop
aaa
in
sbb
pop
fnsetpm(287
adc
imul
lock
mov
ficomps
imul
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
mov
movl
mov
mov
sub
and
mov
movzwl
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
jmp
inc
jo
xor
jo
jo
shlb
outsb
bound
mov
jle,pn
outsb
jg
jle
loopne
push
mov
pop
mov
call
inc
repnz
mov
popa
fistpl
push
addr16
cmp
popa
jne
int3
inc
jb
mov
cmp
dec
dec
loopne
cwtl
push
jmp
dec
ret
mov
sti
enter
jo
inc
adc
ja
inc
adcl
aad
sub
int
ja
divb
in
dec
or
hlt
out
cmp
cld
fnsave
sub
repz
cmp
xor
pop
outsb
or
adc
je
ja
push
gs
push
sti
mov
sub
shll
fcmovbe
test
dec
mov
lret
cmp
cmpsb
enter
mov
adc
fsubl
ret
mov
pop
leave
scas
sarb
cli
lcall
popf
mov
mov
push
add
icebp
sbb
mov
negl
imull
sbb
sbb
jnp
adc
out
fiadds
push
push
std
sahf
loopne
inc
sub
push
cwtl
lds
jecxz
cmp
loopne
dec
into
mov
fistl
push
addr16
js
mov
pop
dec
jno
xchg
and
mov
mov
sbb
sub
pop
and
sbb
adc
loopne
mov
sqrtps
jo
inc
scas
sahf
xchg
int
in
lods
dec
lock
lahf
into
xchg
mov
mov
enter
jecxz
inc
out
je
adc
jmp
sub
sub
notl
add
cmp
fdivl
mov
mov
pop
leave
xorb
in
mov
lods
sahf
jo
adc
mov
scas
mov
sub
cld
sbb
out
xor
or
ljmp
xor
popf
jl
sbb
mov
xor
fs
or
mov
push
pop
xor
add
mov
mov
mov
mov
mov
mov
jmp
sarl
push
mov
icebp
mov
lcall
jle
jg
jle
mov
inc
aaa
out
push
imul
mov
lahf
hlt
aad
mov
inc
js
xchg
addr16
pop
sahf
xchg
loopne
xor
pop
lret
lahf
mov
pop
rcrl
movb
cmpb
insb
xchg
loope
nop
adc
bound
in
data16
cmp
mov
loopne
sti
pop
aad
jle
imul
mov
icebp
cmpsl
dec
adc
lock
das
and
cmpsl
scas
sub
shlb
test
cli
imul
arpl
ret
repnz
pop
cmp
inc
out
iret
xor
mov
mov
das
loope
aad
mov
mov
xchg
adc
mov
pop
inc
xlat
push
mov
mov
cwtl
push
bound
add
enter
loop
lock
clc
dec
pop
sbb
pop
cld
xor
outsl
jae
je
sti
cmpsl
lcall
scas
sti
stos
or
jge
cltd
add
or
enter
out
dec
out
mov
cmpl
and
sti
push
sub
pop
push
sbbb
add
pop
pop
inc
mov
sub
int3
or
mov
mov
dec
out
imul
fwait
in
push
add
jge
ret
lds
mov
jne
sbb
in
inc
insb
sbb
xchg
ficoms
int
push
das
add
xchg
loope
imul
movsl
add
mov
pushf
sub
lret
jl
bt
rcrb
arpl
stos
or
jno
arpl
lcall
pop
xchg
cli
fsubrs
imul
push
add
mov
sub
test
mov
jecxz
mov
sbb
inc
test
jg
outsb
push
xor
data16
inc
sbb
push
adc
and
adc
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
mov
mov
mov
mov
movl
movl
mov
sbb
mov
xorl
push
push
push
orl
mov
xor
mov
add
orl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
jmp
jl
inc
movsb
jecxz
popa
xor
dec
cmpsb
sub
push
jg
jle
out
inc
xlat
icebp
jns
jnp
xor
shlb
shl
roll
and
pop
ds
stos
out
mov
stos
push
aad
pop
mov
hlt
sub
mov
dec
sbb
sbb
mov
mov
scas
mov
add
lea
pop
mov
pusha
dec
std
jle
xor
in
cs
mov
invd
fildll
sub
not
dec
jbe
pop
lcall
push
sbb
subl
dec
jb
rcll
mov
add
movl
mov
push
clc
fs
icebp
int3
jae
out
iret
stos
pop
hlt
repz
mov
rcrb
movsb
das
mov
call
ficomps
mov
pop
les
cmp
jbe
inc
cli
jg
jnp
outsb
dec
push
ja
je
mov
aaa
loopne
lock
sbb
push
enter
loopne
scas
roll
push
jg
arpl
add
mov
imul
dec
sub
in
dec
mov
ret
dec
std
jle
or
and
mov
stc
mov
movsl
mov
sti
rcll
push
xchg
push
lods
scas
je
xor
inc
iret
test
mov
mov
iret
hlt
push
xchg
fdivl
inc
push
cs
pop
cltd
inc
inc
and
stc
cmp
jne
or
cmp
push
mov
aam
cli
adc
mov
sub
pop
pop
outsb
in
cld
ret
int3
jne
fcoms
jns
sub
call
push
in
das
imull
inc
fmull
push
movl
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
neg
movl
mov
or
movl
mov
andl
xor
add
mov
sbbl
movl
sub
movb
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
mov
mov
sbbl
xor
sbbl
add
incl
push
xor
xor
xor
mov
subl
xor
orl
add
push
or
mov
orl
xor
notl
add
adcl
push
sbbl
lea
push
decl
pushl
subl
pushl
andl
call
test
je
lea
sbbl
push
movzbl
sbb
mov
jmp
xor
sbb
repnz
aad
xchg
das
or
jg
jle
xor
icebp
pop
out
sti
inc
cmpsl
jnp
jle
dec
shll
jp
aas
dec
mov
cmpsl
ds
stos
loop
pop
or
call
adc
xor
enter
xchg
add
aad
ja
and
mov
xor
push
insl
push
mov
mov
pop
adc
mov
shlb
pop
push
in
out
adc
xlat
test
pop
xchg
xor
xchg
adc
jmp
cmpl
jge
jnp
popf
xor
rcl
jl
sbb
mov
mov
adc
fdivr
pop
roll
ficoml
movd
out
pop
into
dec
jo
jo
lods
and
gs
cltd
jo
jo
xor
ljmp
cmp
push
pop
sub
fsts
dec
sub
lds
ret
add
xchg
aad
int3
mov
pop
dec
repnz
mov
jno
inc
cld
lcall
mov
cmp
sbb
sbb
add
stos
jmp
push
test
push
and
xlat
xchg
addl
loopne
mov
sub
xor
aas
fdiv
js
mov
or
sbb
mov
pop
js
ljmp
orl
or
cmp
jge
adc
or
jb
fistpl
cmpsl
cltd
or
insb
sub
mov
in
adc
inc
mov
movsl
int
daa
fcmovbe
lea
rcll
rcll
insb
mov
pop
inc
pop
icebp
outsl
jnp
stos
pop
xor
int3
xchg
cli
sbb
jo
mov
stc
popa
xor
add
mov
stc
jp
cmc
imul
lcall
push
sarb
inc
lahf
xor
jg
cmp
lods
mov
xor
add
push
mov
add
push
jmp
jne
adc
flds
mov
call
sub
push
jg
jle
pop
jnp
fdiv
shrl
test
dec
jecxz
lcall
mov
in
and
dec
xlat
ret
pop
clc
and
dec
jnp
push
imul
add
les
xor
mov
shlb
fbld
ds
ret
and
std
bnd
loop
cmp
sub
outsl
jp
dec
ret
inc
fs
sub
enter
repnz
inc
adc
inc
sbb
lcall
aaa
push
push
test
out
xchg
xchg
mov
mov
lock
push
jns
cmp
xlat
lcall
push
popa
adc
cmp
push
cli
cmpsl
mov
inc
cs
sbb
cmp
divl
inc
sbb
and
dec
dec
adc
hlt
push
lds
jecxz
data16
ss
lds
xchg
or
fcmovnb
dec
add
addr16
popl
mov
in
incl
mov
lods
xchg
ljmp
adc
inc
dec
adc
popa
xchg
add
pushf
xor
mov
jbe
ret
adc
push
pushf
sub
add
int
sub
mov
fwait
aaa
cmpsb
sbb
psubsb
stos
mov
lds
lds
add
dec
push
dec
gs
mov
sbb
loopne
cmp
hlt
test
xchg
ss
xlat
or
mov
push
jae
and
out
int3
and
inc
lock
sub
rorl
push
adc
push
repz
fs
fwait
mov
pop
pop
jp
pop
imul
adc
dec
add
or
ret
addr16
dec
ror
daa
push
fs
mov
mov
pushl
call
mov
cmpl
lea
jmp
xchg
leave
rorl
mov
aam
jo
aaa
jle
push
jg
jle
dec
and
jecxz
repnz
sti
shr
pop
ljmp
aaa
lahf
std
sbb
or
xor
test
xchg
cmp
testl
mov
call
imul
repz
les
in
fdivrl
adc
adc
xor
and
xor
sub
cmc
mov
enter
daa
cli
aaa
pop
pop
push
push
imul
cmpsb
loop
jae,pt
pusha
incl
jae
imul
pop
mov
dec
jne
mov
jns
das
xchg
shlb
or
pop
rcll
leave
fstp
inc
mov
fldt
xor
das
inc
adc
gs
pop
movsl
in
mov
add
loope
ljmp
jp
mov
lret
cli
jmp
sbb
cmp
lret
nop
stc
mov
inc
mov
cmpsb
movsl
shr
cmp
inc
mov
fs
mov
jo
mov
dec
or
ret
adc
xchg
mov
jecxz
in
xor
stos
insb
ret
lods
imul
gs
adc
ficomps
lahf
push
inc
xor
inc
adc
sub
push
sub
push
and
stc
imul
mov
into
sti
in
inc
imul
shll
sahf
call
and
add
pop
pop
xchg
mov
xchg
ss
dec
mov
cld
add
leave
xchg
fbld
filds
adc
mov
fdivr
xchg
push
fsubl
adc
adc
add
xchg
and
out
call
pop
stc
cli
sub
mov
mov
je
jmp
jmp
pushf
dec
mov
inc
and
call
jle
push
jg
jle
call
aam
cmpsb
mov
rcll
or
mov
or
ficoml
pop
inc
notl
sbb
loope
push
push
aas
in
cmp
mov
pushf
insl
movsl
hlt
fisttpll
pop
out
xchg
push
cmpsl
cmpsl
pop
jge
jb
cmp
sub
adc
xchg
fs
dec
pop
push
mov
leave
cmc
mov
adc
xchg
imul
test
jae
mov
mov
adc
scas
iretw
fs
xchg
and
or
int3
mov
lcall
loope
mov
imull
aaa
dec
lcall
fcomp
out
outsl
sbb
or
or
xchg
rclb
or
in
scas
repz
mov
arpl
sbb
js
fs
jns
cmp
out
cld
cs
mov
xor
xchg
add
mov
inc
inc
add
sub
pop
xor
push
mov
add
mov
or
mov
fidivl
inc
mov
mov
ret
leave
insb
cmc
dec
xor
inc
in
hlt
add
mov
pushf
clc
sarb
xchg
movsb
dec
jno
lcall
in
mov
lods
out
push
adcb
out
sbb
jge
rorl
sar
andb
mov
out
in
loopne
cmpsl
jb
adc
and
jne
sbbb
rcl
push
mov
sub
xor
adc
test
cmp
sti
jo
shll
sub
xchg
xor
xlat
lock
inc
es
mov
xor
xchg
pop
push
sub
add
mov
repz
enter
call
xor
add
push
mov
xor
add
push
pushl
lea
push
jmp
cmp
loope
jno
dec
add
lahf
sbb
icebp
xor
push
jg
jle
and
mov
mov
dec
push
imul
cmp
rorl
aaa
pop
outsl
push
sarb
lcall
testb
mov
sbb
adc
and
mov
fadds
inc
push
cld
outsb
mov
inc
push
in
pop
pop
in
jb
in
rcll
aas
pop
mov
jbe
out
hlt
cmc
stos
pop
add
outsl
and
sbb
mov
jnp
mov
std
stc
mov
inc
ss
loope
dec
add
jecxz
jle
cs
aas
xor
or
mov
xchg
cmp
push
pusha
imul
es
cwtl
fsubl
outsl
out
cmp
fistpl
sbb
xor
bound
pop
sbb
or
pop
inc
repz
push
ret
imul
sub
cwtl
ret
inc
into
lret
xchg
scas
dec
icebp
sbb
mov
sbb
pop
notb
sbb
icebp
test
mov
pop
inc
xor
xchg
sub
add
jnp
mov
stos
roll
mov
repz
dec
bound
popa
loopne
out
pop
shll
mov
mov
inc
das
scas
mov
mov
pop
call
mov
or
dec
ja
les
pop
in
mov
rorl
stc
add
xchg
lods
pop
testl
mov
decb
scas
pushl
mov
lods
or
stos
jnp
rcll
aam
jno
or
popa
hlt
jnp
test
cmp
add
mov
and
mov
sub
cwtl
or
xor
repz
loop
sub
aam
fcmovnb
pop
xor
xor
pop
stos
pushl
aam
pop
dec
aaa
shll
sub
mov
dec
add
call
ficoml
xor
xor
sub
jne
jmp
push
mov
dec
sub
enter
xchg
or
xor
push
jg
jle
imull
and
scas
stos
jnp
push
mov
jbe
adc
test
repnz
mov
push
push
lret
fstps
add
adc
jb
lods
into
mov
xchg
adc
push
add
mov
xchg
loop
int
test
into
cltd
fstps
andl
cs
mov
imull
fadds
inc
cltd
dec
scas
pop
or
leave
push
imulb
inc
jle
lcall
sahf
jae
pop
iret
xchg
push
movsb
negl
mov
repnz
jmp
loope
xor
pop
or
dec
sub
daa
cltd
outsl
add
xor
lahf
xchg
xchg
stos
out
inc
mov
mov
int
js
int3
fnstcw
mov
jbe
stc
xor
jne
je
in
inc
data16
rcl
push
test
call
dec
frstor
fiaddl
xor
cmp
mov
fcomps
adc
jo
movsb
mov
xchg
jmp
jge
fcmovbe
dec
mov
pop
int3
xchg
std
mov
xor
jecxz
shrb
or
repnz
neg
sbb
arpl
push
mov
addr16
fdivl
add
adc
stos
pop
lods
and
dec
and
or
mull
mov
test
fisttpll
rol
call
xchg
int
pop
scas
addb
push
out
imul
sub
xchg
cmpsl
mov
xor
movsb
mov
pop
imul
mov
and
pop
xchg
pop
mov
jb
les
mov
sbbl
push
or
mov
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
jmp
fwait
imul
shlb
jae
sbb
sub
jle
push
jg
jle
pop
inc
xlat
mov
inc
sub
lret
shrl
dec
jecxz
push
sub
jle
fucomip
push
ja
inc
xchg
jecxz
mov
leave
cmp
mov
inc
outsl
sub
dec
dec
loope
pop
inc
jmp
enter
lahf
pop
popa
adc
mov
inc
and
sub
imul
jns
xchg
cli
xor
dec
insl
andb
pushf
rcrb
stc
dec
out
cs
js
rdmsr
ljmp
repnz
push
mov
pop
mov
stos
out
jnp
cmp
sub
addr16
jle
pop
imul
xchg
lcall
jnp
xor
push
pushf
jl
mov
test
rcll
lcall
cmpb
ds
mov
arpl
cwtl
clc
xor
fcomps
pop
mov
in
loope
jnp
sti
or
jle
xorl
shlb
rcrl
xchg
sbb
mov
lahf
dec
into
out
dec
inc
jne
loop
xchg
arpl
push
xor
push
repnz
jbe
mov
loope
mov
cwtl
jne
mov
xor
repnz
lahf
pop
or
scas
mov
les
push
movsb
or
pushl
jno
clc
xor
out
repnz
frstor
shlb
sub
popf
pop
push
sahf
mov
inc
and
or
sub
push
or
icebp
xchg
aam
lods
mov
fwait
pop
imul
sbb
xlat
add
mov
xchg
push
and
jp
scas
push
fdivrl
pop
mov
dec
scas
jmp
and
js
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
jmp
xchg
lods
sbb
mov
ljmp
push
cmp
jle
cli
out
fs
jo
fldcw
ret
leave
push
xor
lret
jge
add
outsb
jge
loop
outsl
shll
iret
jae
xchg
sub
sbb
gs
dec
call
shll
push
test
jle
ljmp
add
or
mov
push
sub
adc
lock
sti
add
in
push
lock
pop
enter
lret
enter
loop
and
scas
inc
dec
jae
xchg
mov
fsubl
fidivrs
mov
jo
fwait
std
cmp
and
pop
out
loopne
and
mov
jmp
enter
arpl
sbb
xchg
mov
repz
jle
dec
mov
push
rcrb
subb
inc
add
cmp
sub
adc
inc
pop
std
mov
into
sub
or
xchg
xor
enter
or
push
sub
jecxz
push
fwait
mov
push
movsb
movl
out
push
adc
xor
pop
pop
or
movsb
push
neg
push
loopne
out
cmp
xchg
mov
and
pop
jno
out
fidivl
sarl
pop
push
stc
push
dec
mov
imul
mov
xchg
sub
jne
std
lock
mov
stos
imul
repz
iret
pop
adc
pop
mov
cmp
xchg
sbb
loope
filds
stos
repnz
sbb
pushf
and
jo
outsb
pop
int3
faddl
push
enter
xchg
add
cmp
shlb
test
pop
and
lods
mov
mov
ss
mov
lret
movsl
lret
scas
ja
or
push
add
and
inc
add
or
pop
leave
ret
push
mov
sub
push
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movzbl
xor
mov
mov
and
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jb
or
movl
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
sub
movl
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
push
call
jmp
xor
xor
xor
add
mov
movzwl
and
mov
jmp
cld
ss
je
inc
mov
mov
pop
ret
jle
mov
jle
add
push
cmp
push
loop
out
shlb
pushf
cmpsb
jmp
in
pop
xchg
add
push
xor
sbb
dec
jo
shrl
push
adc
dec
adc
fs
js
push
popf
jle
test
jno
rcl
lret
ret
test
cs
ds
iret
or
sub
cs
sbb
in
dec
cmpsl
imul
inc
xchg
adc
mov
repnz
cmc
sub
aaa
xchg
dec
and
mov
pusha
int
xchg
loop
test
and
int
xor
sbb
sar
out
adc
stos
sti
addr16
sub
jp
mov
push
sbb
xor
pop
lods
cmc
push
sub
sbb
adc
or
mov
and
inc
out
mov
push
xor
out
loope
xchg
dec
arpl
cmp
xlat
ret
inc
dec
cmpsb
mov
adc
jae
mov
mov
mov
pop
leave
pushf
mov
arpl
pop
jecxz
pop
addr16
loop
xchg
sub
or
das
sar
scas
pop
xlat
std
je
ljmp
add
out
adc
inc
testl
int3
mov
out
les
push
ror
sarl
mov
dec
in
xchg
lahf
test
or
sbb
mov
push
fidivrs
cmp
inc
andb
push
cmpsl
dec
ljmp
in
adc
lcall
roll
add
add
add
add
cmp
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
jmp
xchg
sahf
icebp
jno
arpl
lock
icebp
cmp
mov
jle
pop
mov
aas
inc
jae
sbb
mov
add
loope
fwait
mov
ret
cmc
xor
inc
sbb
fistpll
push
mov
popf
shlb
jmp
mov
or
lcall
adc
pop
ljmp
repnz
jge
stos
sub
mov
cmp
shl
inc
stos
pop
fcoml
cbtw
inc
aaa
inc
pop
cmp
popa
test
sub
arpl
pushf
test
in
mov
cli
icebp
cli
leave
mov
inc
test
insb
out
add
arpl
aam
inc
fwait
int3
fwait
mov
lds
sub
and
mov
pop
dec
ret
jb
faddp
dec
je
mov
movb
outsb
negl
dec
lea
jmp
das
mov
cmp
movsb
sub
leave
xchg
or
push
scas
pop
repz
jbe
popa
adc
push
push
lret
dec
fisttpl
std
push
out
fmuls
enter
and
mov
dec
mov
outsb
aas
sub
cs
test
dec
inc
mov
pop
sub
xchg
sbb
or
sub
mov
and
pushf
in
aad
mov
inc
jbe
jmp
rclb
xchg
and
fistpll
sub
xor
cwtl
pop
repz
ljmp
or
hlt
dec
dec
push
xchg
mov
into
mov
mov
xor
xor
add
xor
jmp
sub
fnstsw
fucomp
sub
cmp
xchg
jle
mov
jle
or
push
mov
cltd
mov
lret
push
or
lock
and
sbb
pop
dec
std
sbb
addr16
inc
dec
xor
pop
sub
nop
cld
jne
cld
jg
jl
pop
mov
xchg
rorl
mov
vmread
jns
imul
sbb
andb
sub
fdivrl
test
adc
enter
sbb
or
mov
cli
adc
push
icebp
cmp
into
into
push
cmp
mov
aad
int3
shlb
mov
rcl
inc
jl
fsubrp
sbb
xchg
hlt
inc
xabort
add
aaa
out
jbe
adc
lea
dec
lret
mov
dec
sarb
mov
out
insb
jecxz
inc
mov
sbb
stos
add
test
gs
out
cs
ljmp
sbb
mov
mov
repnz
popf
test
repnz
inc
xchg
cmpsb
sub
mov
pop
outsb
movsl
sub
sbb
and
inc
inc
imul
cwtl
cwtl
cld
loopne
mov
xchg
filds
fwait
adc
and
sbb
test
ret
pop
mov
movsb
bound
andl
mov
add
mov
pop
fs
nop
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
movl
adc
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
push
pushl
push
push
pushl
push
pushl
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
movl
mov
xor
add
or
jmp
mov
icebp
inc
jno
mov
movsl
insb
cltd
jle
mov
jle
hlt
push
add
roll
xchg
push
mov
lock
in
pusha
jmp
in
sti
or
fs
push
sub
test
in
lahf
arpl
push
xchg
jnp
add
lret
daa
push
or
dec
ds
ret
mov
and
imul
mov
gs
and
xor
adc
les
push
xor
dec
dec
or
das
loopne
in
call
ret
aaa
or
pop
pop
das
dec
cwtl
lock
mov
dec
adc
enter
cmp
add
cmp
adc
loope
ficoml
hlt
scas
mov
popf
sub
pop
filds
das
push
adc
jle
leave
call
icebp
adc
mov
pop
lods
rorl
cmpsb
sbb
in
jnp
jnp
mov
shlb
mov
cltd
inc
sub
lock
data16
mov
test
int
cmp
cmp
xlat
adc
cld
inc
push
xchg
test
lret
xchg
xchg
push
stos
in
rolb
mov
push
repz
test
xor
inc
lock
imul
pop
stos
lret
sbb
aad
push
sub
add
inc
pop
sbb
aaa
cmp
pop
test
mov
ss
jle
adc
xchg
and
mov
sbb
mov
pop
in
push
ss
pop
sbb
clc
push
out
icebp
arpl
mov
orl
add
movl
cmp
movl
jmp
notl
push
jb
out
or
lds
mov
jle
stos
push
test
jl
sbbl
test
out
orl
les
fsubs
in
pop
push
mov
aam
pop
mov
mov
mov
dec
mov
or
sbb
hlt
mov
mov
pop
fiadds
and
mov
push
jl
int3
shr
mov
mov
sbb
mov
add
inc
cmp
sbb
test
pushf
lods
mov
sbb
enter
xchg
rorb
js
sbb
xchg
nop
jle
xchg
out
cwtl
push
out
mov
ds
pushl
call
cmp
out
test
iret
pop
dec
fs
enter
jnp
mov
dec
jp
pop
mov
fstpl
jno
and
or
jg
out
mov
std
scas
or
sub
sbb
or
push
add
imul
sbb
push
adc
in
sbb
pushf
jle
cvtps2pd
clc
push
push
dec
movsb
bound
jge
lods
icebp
push
mov
add
sbb
cli
cmp
popa
push
jle
mov
jnp
sahf
in
xorb
fidivl
xor
dec
mov
sub
into
jmp
sbb
lods
and
nop
or
add
lret
xchg
in
jle
fucomi
cmpsb
movsb
xchg
aam
cld
mov
dec
adc
cmpb
test
sbb
add
pop
pop
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
sub
jmp
or
icebp
jno
out
jns
pop
aas
imul
jle
mov
jle
sti
inc
push
in
xor
loopne
cli
push
rolb
inc
lea
mov
push
insl
or
mov
xor
out
push
mov
cwtl
cmp
mov
icebp
fistpll
sub
das
xchg
icebp
fldenv
lahf
and
push
gs
ret
inc
mov
daa
dec
into
push
and
bound
jmp
daa
insl
push
ret
pop
ljmp
push
call
sahf
lds
jnp
push
movsb
int3
pop
dec
fs
xchg
adc
subl
sbb
outsb
jmp
adc
adc
jp
out
test
das
flds
inc
jb
in
push
pop
inc
push
add
mov
mul
fildll
mov
ret
imul
leave
inc
shll
jnp
mov
or
gs
cmp
lret
cmp
jle
dec
push
pop
add
xchg
repnz
scas
xchg
cmp
clc
push
int
mov
outsl
mov
jl
adc
and
das
dec
in
js
faddl
xor
lret
imull
shrb
je
xchg
int
jnp
mov
add
out
nop
sub
sub
mov
sub
out
pop
mov
divb
rclb
xchg
movsb
xchg
out
jo
xor
mov
es
mov
clc
fldl
dec
jmp
addr16
daa
lahf
outsl
fs
push
sbb
pop
shll
xchg
mov
jns
dec
mull
test
andl
jbe
adc
popf
ret
push
mov
adcl
xor
add
cmp
movl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
inc
mov
mov
xor
xor
sub
add
add
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
imul
mov
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
ret
movsl
shll
dec
fimull
jle
mov
jle
inc
sbb
pop
pop
cmp
aas
fs
adc
das
pusha
in
xor
test
cmc
adc
stos
inc
cs
mov
cmp
and
shlb
push
sbb
pop
scas
sbb
mov
sbb
pop
iret
xor
jecxz
rcl
jmp
sub
push
mov
cmp
push
lds
imulb
hlt
std
inc
pop
movsb
arpl
adc
adc
mov
pop
jle
leave
jle
mov
ja
jge
mov
adc
pop
jns
xchg
add
pusha
adc
and
fmulp
cli
add
pop
addr16
or
sub
imul
cmc
arpl
mov
jg
rcr
mov
pop
inc
iret
int
dec
dec
rclb
sahf
pop
aam
sub
inc
insb
push
inc
fcmovnu
leave
adc
in
test
mov
bound
sbb
adc
stos
and
dec
ds
mov
add
push
jbe
mov
mov
pop
ja
gs
pop
xlat
jmp
dec
and
aas
mov
lods
and
mov
in
dec
xchg
insb
or
push
test
cli
sbb
arpl
mov
incl
rcrb
mov
cmp
addr16
stos
arpl
jecxz
mov
jbe
loope
push
fwait
sbb
pop
lock
cmp
ja
mov
jmp
mov
mov
jmp
mov
dec
jno
les
cs
jle
cmpsl
cmp
jns
call
inc
es
mov
sub
mov
xor
jge,pn
pushf
in
cltd
mov
cmpsl
cmp
pop
ret
adc
sbb
scas
mov
inc
dec
mov
inc
in
or
dec
xchg
fisttpl
mov
adc
clc
jg
test
sbb
sbb
out
mov
mov
xor
fadd
subb
xchg
orb
test
test
bswap
cmc
mov
push
dec
jo
sahf
jl
mov
mov
mulb
inc
push
or
add
or
jmp
xchg
add
pop
jo
movsb
cmpsl
cld
push
in
in
subb
add
pop
jno
sbb
call
lock
or
and
aaa
xlat
xchg
jnp
int3
mov
insb
gs
sbb
stos
iret
js
sub
shlb
loopne
push
cmp
xor
jbe
imul
sar
pop
xchg
sbb
inc
sub
mov
fisubs
test
dec
push
xchg
cmp
stos
push
xor
addb
xchg
jne
cmpsb
mov
push
in
jae
mov
mov
popw
icebp
or
push
adc
sbb
dec
stc
lcall
shlb
clc
add
add
imul
mov
mov
sub
cmp
jmp
imul
mov
jno
loopne
cmp
test
jle
mov
jle
cmpsl
gs
mov
add
out
mov
cmp
inc
ja
mov
sub
popa
cmp
js
cmp
push
jne
push
lods
cmpsl
rclb
idiv
dec
and
cld
into
jo
retw
jecxz
cmp
inc
adc
cmp
cs
xchg
ret
fadd
inc
pushf
hlt
outsb
and
push
xlat
mov
icebp
idivb
fisttps
loope
and
icebp
imul
out
pop
aas
mov
je
loop
sub
pop
push
jecxz
inc
dec
mov
jecxz
dec
xchg
mov
xor
jle
ss
fst
popf
xor
jge
xor
mov
push
sub
std
lods
sbb
or
orl
dec
push
push
into
arpl
or
add
or
mov
adc
ss
stos
cmp
insl
in
lcall
xor
pop
ja
sbb
xor
pop
pop
stos
sbb
leave
lea
bound
push
adc
ja
or
popf
pop
loop
out
adc
das
xlat
gs
test
in
rol
cmp
pop
out
push
cmp
inc
sti
xchg
mov
jb
push
add
outsb
mov
adc
aam
mov
cltd
cmp
xchg
repnz
dec
cmp
xchg
jg
sub
adc
xchg
add
add
or
add
cld
xor
xor
jmp
in
test
call
stos
inc
or
jle
jg
jle
aas
fcmovb
into
mov
and
testl
out
or
aaa
cmp
iret
vcvtss2si
cmp
data16
dec
sahf
adcb
imul
inc
cmp
enter
ret
movsb
xorl
into
sbb
xor
shl
ss
adc
mov
mov
shrl
xchg
int
fcmovnb
add
clc
push
fdivp
jnp
inc
xor
test
fmull
xchg
push
fdivrs
dec
nop
ficompl
lahf
daa
or
scas
dec
sbb
cld
push
sbb
hlt
mov
push
test
cmp
mov
aad
lods
insl
in
test
sub
inc
adcb
les
arpl
pop
imul
in
cmp
push
pop
xchg
xchg
xor
out
lret
test
das
push
sub
sub
xchg
or
sub
and
jne
insb
jl
or
mov
ja
lock
sar
xor
test
adcb
bound
ds
add
xor
in
lret
test
jp
insl
push
dec
xor
adc
pop
nop
xchg
xchg
pop
adc
adc
call
outsb
aam
push
les
hlt
mov
pusha
call
cmp
lock
and
leave
or
mov
pause
loop
addb
add
lcall
ljmp
xlat
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
jmp
push
mov
xor
repnz
lret
mov
jle
pop
push
ljmp
mov
and
fistl
call
andl
add
adc
xor
or
jl
out
sbb
int
add
loop
je
jmp
out
xchg
fiaddl
sti
out
outsl
jmp
ja
sub
andb
shll
dec
pop
mov
mov
mov
sbb
adc
lock
repnz
sub
sub
inc
leave
and
shlb
loop
sti
and
xchg
mov
jmp
xor
jmp
cltd
inc
jno
push
jb
inc
gs
and
lods
addr16
cld
sbbl
lock
jle
ret
nop
pop
call
sub
inc
xchg
shlb
jbe
insl
push
adc
imul
js,pn
sbb
in
idivb
lret
jg
pushl
clc
jmp
jo
loope
in
repnz
fstpt
pushf
xchg
mov
inc
xor
xor
pop
sub
push
sbb
out
ficoml
jo
pop
xor
gs
scas
sub
ds
adc
scas
in
in
in
clc
add
scas
punpckhwd
xor
aas
pop
dec
rclb
mov
enter
adc
imul
fldcw
hlt
cltd
push
adc
xchg
sbb
jecxz
enter
push
das
push
sar
and
pop
mov
iret
sbb
mov
mov
shlb
adc
shr
lods
add
add
add
push
push
jl
ljmp
enter
jg
jle
lahf
or
inc
in
mov
mov
les
adc
pop
sub
cltd
lds
and
xchg
lahf
xor
ret
lods
pop
cmpl
inc
inc
and
gs
mov
jne
add
into
push
jo
push
push
sbb
or
jle
daa
popa
sub
out
cmp
ret
mov
xlat
add
fnstenvs
jl
pop
cmp
mov
mov
mov
insl
notl
inc
mov
sub
lods
andl
jbe
imul
mov
cmp
mov
ljmp
ds
jmp
test
adc
popf
push
mov
fnstenv
mov
lret
jo
loopne
ja
loope
cmp
xchg
test
mov
push
aam
cs
fbld
int3
popa
sar
dec
repz
sbb
arpl
imul
cmpsl
fcomi
bound
sub
jecxz
pop
cmp
or
arpl
pop
dec
repnz
fbld
iret
adc
ljmp
xor
sbb
ret
insb
sub
inc
addl
sti
aad
sbb
out
into
cltd
pusha
fcoms
je
ret
push
sbb
mov
dec
dec
pop
push
test
mov
adc
leave
clc
pusha
ljmp
lret
scas
xlat
mov
mov
sub
jmp
and
xor
popa
add
leave
push
leave
jle
mov
jle
sbb
fbld
push
sub
or
dec
rolb
lods
mov
out
mov
inc
ret
dec
daa
mov
fs
stos
or
mov
out
cmc
into
push
xor
ret
dec
clc
mov
leave
sub
mov
hlt
push
push
mov
lock
sub
mov
xchg
das
dec
roll
into
outsl
mov
sbb
leave
xchg
repz
or
das
test
imulb
lcall
sti
or
mov
jns
pusha
fcoms
lods
mov
cmp
fwait
pop
xor
push
jmp
outsl
push
or
pop
enter
xchg
add
inc
mov
das
mov
ficoml
and
cmc
outsl
sbb
push
mov
pop
sub
mov
sub
adc
incb
das
mov
jg
cmp
push
mov
lods
imul
and
pushf
lods
xchg
push
push
push
ja
xor
push
cld
stos
aad
in
cli
bound
jno
inc
push
add
cli
notb
in
lods
dec
jno
icebp
insl
pushf
sahf
pop
test
out
xchg
enter
movsl
scas
pop
pop
negl
clc
les
out
mov
pop
popa
mov
cmc
inc
lock
cmpsb
inc
andl
sub
push
xchg
test
testl
sub
push
lret
inc
push
push
sar
fimull
xchg
add
add
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
jmp
add
jne
mov
int3
lcall
jle
xlat
or
imul
inc
add
jecxz
fstpl
popa
pop
pop
inc
jb
int
add
lret
inc
lcall
pop
sub
pop
xchg
enter
fsubrl
bound
aam
mov
pushf
shll
mov
fmul
js
mov
call
std
inc
inc
sbb
jg
subb
imul
mov
dec
rol
rorb
add
mov
mov
mov
aas
add
notb
mov
pop
inc
dec
fisttpll
push
js
mov
test
xchg
or
out
fldt
xor
outsb
loop
sbb
sti
lods
push
scas
xor
mov
xlat
and
pop
faddp
inc
movsl
sub
mov
js
in
cmp
push
and
leave
data16
sbb
das
jb
popf
inc
jns
add
adc
push
pop
xchg
rolb
add
and
jl
arpl
add
mov
sbb
jne
pop
lock
cmpsl
icebp
rcll
int
or
test
fstl
int3
adc
jecxz
sarb
adc
std
or
iret
mov
mov
out
lret
mov
mov
out
fwait
mov
mov
jae
popa
dec
add
idivb
outsl
or
and
cmp
and
push
daa
aam
fisttpll
ss
in
inc
clc
jg
or
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
jmp
mov
je
jmp
add
enter
jle
mov
jle
aam
xor
adc
and
mov
and
in
popf
jle
pop
xorl
xchg
dec
inc
in
sbb
test
rcrb
jno
aam
inc
jnp
and
pop
sub
pushl
inc
or
fucomi
movsb
pop
mov
in
clc
sti
mov
shrl
les
add
mov
mov
jo
repz
pop
add
push
or
js
divb
push
mov
out
fs
jg
sahf
in
pop
lcall
xorb
pop
jae
adc
fwait
mov
add
mov
out
loop
and
aaa
lret
out
dec
jo
xor
and
and
lcall
mov
jmp
std
repz
mov
mov
out
dec
cmc
mov
xchg
mov
sub
ljmp
jnp
test
xchg
fld
mov
push
repz
int
sub
sahf
aas
and
and
test
test
insb
pop
mov
xchg
test
jnp
inc
jnp
sbb
jecxz
mov
sub
cltd
test
jp
outsb
iret
mov
out
mov
mov
mov
xlat
jnp
push
dec
inc
das
adc
iret
fidivl
stos
xchg
xchg
outsb
nop
jmp
fwait
pop
loopne
jae
mov
jmp
fisttpl
loope
cli
xor
movl
imul
mov
xor
sub
jmp
decl
xor
xchg
lea
in
xchg
and
jg
jle
mov
push
push
mov
sbb
mov
jae
push
ret
mov
inc
negl
adc
out
out
test
aad
jp
push
pop
pusha
lock
push
inc
scas
sbb
xchg
add
nop
popa
ljmp
mov
xchg
mov
in
xor
mov
add
mov
das
dec
out
jg
es
lcall
mov
div
aam
jge
outsb
jno
pop
sub
dec
shll
cmc
ss
jp
outsl
mov
pop
int
bound
lock
adc
aaa
add
rcrl
pushf
jge
pop
int3
cs
fcoms
lds
xchg
test
mov
push
push
and
xor
mov
mov
out
or
out
pushf
dec
push
scas
js
lock
outsl
dec
es
rcr
jecxz
sbb
mov
orb
add
jb
push
fsubs
in
jge
pop
rolb
inc
jb
shrb
mov
dec
sbb
sbb
mov
loope
sub
jmp
xor
les
icebp
sub
jg
insb
sbbb
mov
cmp
adc
sub
or
mov
and
stos
cs
jae
mov
and
popa
dec
cs
xor
inc
and
js
out
int3
fwait
imul
mov
add
cli
jbe
mov
mov
xor
add
imul
mov
xor
jmp
and
inc
xor
ret
das
dec
fldt
jle
jg
jle
mov
stos
outsl
xor
pushf
lock
and
push
pop
jmp
les
mov
push
daa
cs
push
data16
xchg
std
int3
xlat
call
push
arpl
imul
adc
fwait
add
xchg
popf
dec
mov
pop
mov
jecxz
and
and
and
std
jns
rclb
xchg
mov
or
or
aam
or
and
jp
fsts
cmp
sub
adc
xchg
and
cmp
fcmovne
xor
mov
ljmp
mov
addr16
cmp
cmpsb
daa
fiadds
das
movl
cwtl
lret
fs
sbb
inc
and
xor
push
pop
xor
mov
pop
xchg
andb
cmp
add
ret
movsl
sarl
cmp
int3
lea
mov
jo
lods
incl
inc
int3
push
ja
cld
push
cmp
pop
cmp
mov
sub
in
fwait
nop
dec
xchg
push
push
mov
push
xchg
mulb
pop
sub
inc
and
xor
sbb
xchg
out
push
imul
or
adc
adc
push
jns
int
cltd
divl
ds
and
mov
cmp
push
push
cmp
mov
leave
mov
jo
je
mov
xchg
push
imul
xlat
mov
lea
mov
mov
xor
mov
sub
add
mov
jmp
adc
das
test
xor
mov
xchg
fldenv
sarl
mov
jle
xor
movl
mov
xor
mov
fsub
je
xchg
dec
cli
dec
ficoml
ds
jnp
addb
out
mov
add
mov
je
fcompl
ret
mov
cmpsb
call
cmc
jns
daa
xchg
je
sar
or
aaa
xlat
in
mov
in
daa
js
das
push
icebp
adc
sbb
push
cmp
jp
loop
iret
jb
fldt
and
push
xchg
pop
mov
insl
sbb
data16
mov
mov
leave
xchg
mov
aam
std
aas
aad
out
cmp
repz
mov
sbb
push
cs
or
daa
mov
ret
inc
bound
test
fldenv
negb
xchg
leave
cmpb
sbb
pop
dec
lods
repz
or
pop
adc
es
inc
mov
out
idivb
and
fucomip
fs
je
popa
push
sti
int
aam
or
out
pop
push
inc
das
dec
sarl
ret
lret
or
int
mov
addl
mov
cmp
add
cmp
and
add
jae
and
das
dec
push
sarb
xor
add
jno
fisubl
push
push
daa
inc
xchg
fwait
jne
sti
push
push
ss
sub
shl
inc
nop
stc
fwait
lahf
es
shlb
rcrb
aas
aad
or
cmc
or
lcall
fsubr
xor
xchg
idivb
and
push
lret
pop
clc
xor
jmp
or
addr16
jne
mov
mov
cmpsl
jb
fistpll
mov
jle
push
dec
push
repnz
and
xchg
and
out
jl
fnstsw
jmp
outsl
repz
fdivrs
jecxz
mov
add
mov
or
jns
idivl
push
nop
test
daa
sub
cmp
aam
push
sti
std
jae
mov
rclb
out
sbb
sahf
in
popa
adc
shll
aad
xchg
std
lret
outsl
fcomp
fstpl
add
es
dec
mov
call
orl
mov
lahf
xor
push
sbb
pop
nop
arpl
insb
lahf
arpl
popa
mov
mov
enter
add
imul
aam
pop
mov
ret
and
mov
lcall
cmp
in
lret
pop
std
loop
loop
aam
rcll
loope
adc
sub
lcall
pop
loop
out
mov
in
and
in
push
orl
fwait
cmp
inc
and
popl
or
jmp
mov
outsl
enter
xchg
push
cltd
xchg
mov
loope
xchg
sub
ds
data16
inc
in
sub
cld
push
imul
gs
inc
mov
or
imul
sub
outsb
xor
sub
ljmp
dec
jns
xlat
fistl
scas
sarl
xlat
jbe
pop
pop
leave
ret
push
mov
sub
call
andl
xor
movl
cmp
movl
jne
cmp
movl
jne
push
call
sbbl
push
orl
call
adcl
test
je
movl
push
xorl
push
orl
call
push
mov
mov
and
mov
movl
adc
lea
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
subl
mov
lea
mov
mov
sbb
mov
mov
mov
mov
mov
and
mov
orl
push
add
mov
adcl
xor
orl
push
neg
mov
subl
add
movl
mov
mov
mov
cmp
mov
movl
je
and
mov
addl
xor
add
orl
imul
mov
jmp
push
call
adcl
test
je
xor
movl
jmp
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
add
mov
mov
adc
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
notl
mov
xor
add
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
xor
addl
add
movl
cmp
movl
jne
sbbl
pushl
pushl
sbbl
call
movl
cmpl
je
cmpl
jne
push
pushl
push
call
mov
dec
mov
jmp
mov
mov
sub
add
mov
mov
xorl
mov
sub
mov
mov
xor
mov
mov
add
mov
mov
mov
movl
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
pushl
push
push
push
call
cmpl
jb
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jb
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
xorl
push
push
mov
xor
xor
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
or
jmp
pop
push
lods
sahf
mov
push
push
push
rorl
pop
fdivrl
jge,pn
jle
out
xor
lods
lods
fisubs
pusha
sub
cmp
in
sub
cmp
add
push
xlat
inc
leave
sub
push
out
call
adc
negl
insb
ss
lea
out
aam
loope
ficoml
dec
mov
mov
jne
int3
hlt
stos
repnz
jo
dec
out
xchg
std
inc
inc
mov
leave
inc
loopne
or
fimull
mov
and
or
cmp
lods
daa
mov
dec
outsl
fstp
mov
shlb
xchg
cmp
xchg
jge
shlb
add
xor
push
sbb
into
shl
mov
mov
add
mov
lret
mov
out
or
enter
ja
xor
fwait
jne
lahf
notb
adc
and
add
into
push
sbb
push
mov
loope
je
adc
mov
imul
pop
sub
nop
pop
gs
xchg
lret
daa
ret
out
push
movsl
sbb
or
pop
cmp
inc
xchg
insl
pop
xchg
add
sbb
outsb
int3
adc
jo
sbb
es
push
iret
clc
mov
mov
gs
jns
aaa
pop
repnz
je
jp
dec
cmp
gs
pop
lcall
lret
insl
mov
or
imul
xor
lahf
adc
cmp
ljmp
jbe
mov
popa
and
aad
dec
aam
inc
sub
addr16
jp
fldenv
loope
in
mov
and
insl
xorb
push
jno
test
sub
pop
or
out
test
roll
push
ret
sub
fidivl
xor
push
xor
repz
test
ljmp
adc
and
pop
lods
pop
add
pop
add
mov
dec
push
idivl
jl
cli
mov
shr
jno
or
mov
cmc
sbb
sbb
std
dec
sbb
cmpsb
outsl
fimuls
repz
xchg
subb
adcl
sub
add
xor
mul
int
mov
aas
mov
cmovb
sarl
in
loope
aaa
ljmp
cmp
add
movsl
mov
movsb
add
dec
lret
dec
jno
sub
cmc
mov
xchg
cmp
jmp
scas
and
mov
aas
jg
std
jmp
xchg
push
sbb
adc
jmp
jae
icebp
or
adc
rclb
je
scas
ficomps
mov
testl
shll
imul
loope
mov
dec
shll
jle
leave
popa
inc
sub
sbb
dec
dec
dec
xchg
test
je
jge
pop
fldt
mulb
and
insb
lea
mov
pushf
push
xchg
rcll
cmp
out
negl
aaa
mov
dec
mov
inc
jmp
cmc
dec
lahf
rcrl
push
cld
xchg
out
out
ret
sbb
inc
mov
push
or
les
fcom
push
es
or
addr16
inc
dec
roll
mov
add
mov
mov
addl
lea
sub
mov
movzwl
and
mov
addl
mov
jmp
scas
mov
push
jb
push
lock
fdivrs
jge,pn
jle
hlt
out
repz
jae
inc
int3
cltd
gs
mov
cmpl
lods
inc
out
or
sti
inc
icebp
shrl
negb
test
mov
push
test
jecxz
pushf
push
test
xchg
dec
jo
cs
mov
mov
and
shll
push
loopne
inc
ljmp
dec
xchg
inc
xchg
adc
mov
adc
hlt
and
adc
es
aas
xchg
inc
push
adc
fstpt
push
push
ja
xor
mov
jnp
call
popf
leave
dec
and
and
pushf
out
mov
push
shll
pop
aaa
inc
dec
and
xchg
and
fisubl
stc
shll
insl
das
or
pushf
dec
mov
add
jnp
or
jge
mov
jp
cld
adc
stc
sub
icebp
push
cwtl
cmp
sub
or
lds
mov
into
bnd
cltd
mov
or
mov
sub
dec
push
mov
movsb
and
orb
mov
sub
pop
cmp
add
loope
shrl
add
andl
insb
xchg
push
outsl
adc
lea
jno
mov
int
jmp
push
mov
xlat
add
and
icebp
insl
repnz
jnp
fisttps
jae
or
cmp
rcr
arpl
icebp
add
insl
cli
adc
mov
je
adc
out
and
pushf
mov
sub
mov
jp
ljmp
and
mov
pop
gs
inc
fmull
sbb
es
icebp
xor
movsb
mov
es
push
enter
lea
movsl
call
fcoms
fistpl
cld
xchg
xchg
or
jne
mov
xchg
mov
scas
xchg
pop
mov
repz
loopne
lahf
insb
es
dec
mov
add
lcall
nop
int3
push
subb
inc
loopne
push
push
sbb
popl
xchg
cmp
push
mov
push
test
adc
shrl
add
push
and
lret
sub
xchg
jle
jecxz
dec
clc
xlat
sbb
loopne
pop
sub
add
add
cmp
pop
mov
mov
rcl
popa
mov
les
jnp
dec
push
aaa
sub
stc
mov
jae
mov
inc
mov
aam
xor
adc
mov
out
movsl
add
push
mov
mov
ret
outsb
in
iret
out
sahf
fucom
xchg
shlb
repnz
add
es
cli
pop
xchg
fwait
or
add
lret
leave
sahf
dec
xchg
js
cltd
sbb
jns
inc
ficoml
clc
cs
and
jge
cwtl
out
jl
das
iret
mov
rcr
or
jg
aaa
mov
insl
out
lea
cmp
imul
pusha
xchg
push
stc
popa
dec
mov
jmp
push
or
int3
popa
hlt
jno
jae
and
fsincos
xchg
cmp
jle
jge,pn
jle
push
jb
cltd
mov
flds
shll
dec
add
or
or
fnstcw
fptan
fdivs
adc
imul
push
push
sbb
push
xchg
into
cmp
or
mov
jge
out
sub
loopne
lea
xlat
pop
shlb
scas
fcomps
cmpsb
pminub
and
pop
jo
xor
mov
cmp
lea
cwtl
mov
ret
cs
idivb
mov
xor
or
pop
and
nop
adc
mov
xchg
mov
dec
jecxz
pop
cmp
adc
out
push
sub
sbb
jg
adc
sub
mov
mov
mov
push
sub
sti
or
pop
or
adc
dec
mov
pushf
pushf
cmp
dec
out
push
dec
enter
jl
insb
lret
jns
lahf
out
out
out
cmc
push
test
fsts
xor
mov
out
adc
mov
pop
cmpsb
pushf
pop
in
popf
mov
or
jg
sbb
mov
inc
or
test
cmp
mov
inc
aam
int3
or
fiadds
fs
inc
clc
xor
sarl
lock
js
or
or
mov
repnz
mov
daa
scas
sub
leave
das
push
rol
pop
in
mov
inc
cwtl
or
popf
or
ja
mov
pop
pop
add
and
pop
xchg
rolb
xchg
hlt
loopne
scas
outsb
je
pop
and
clc
ljmp
or
enter
ret
shl
jp
ret
add
or
ljmp
pop
out
lret
mov
iret
and
cs
popa
mov
subb
lods
insb
sbb
and
in
insb
inc
fidivl
xchg
mov
popf
out
push
test
icebp
cmp
mov
sub
pop
lds
pop
jns
jge
orl
xlat
xor
push
dec
sbb
fucomi
fistps
adc
inc
push
add
push
flds
cmp
jle
rdpmc
mov
add
mov
mov
jo
gs
mov
inc
jecxz
je
mov
pop
xchg
mov
movsb
jno
push
jg
or
adc
jbe
cmp
clc
sub
sub
jae
ret
stos
lahf
ret
and
inc
imul
and
lret
rcl
sbb
int3
push
frstor
scas
shll
imul
fsubrl
push
mov
mov
xor
mov
sbb
and
fdivrl
lds
push
ds
add
popa
xor
jmp
mov
leave
lahf
lcall
jge
test
fwait
minps
adc
std
or
xchg
xchg
mov
or
add
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
movl
sub
jmp
shrb
mov
xor
jne
ss
xchg
jmp
jge
jle
xchg
sub
js
mov
mov
out
icebp
pop
loopne
sbbl
push
add
or
lret
mov
inc
adc
sub
add
add
mov
mov
test
sbb
les
mov
inc
sarb
or
jle
out
pop
shlb
push
cmp
mov
outsl
mov
not
jne
inc
dec
sbb
fisttps
orl
cmp
rclb
sub
adc
lahf
jnp
fdivrs
into
inc
mov
hlt
sbb
pop
mov
push
in
dec
or
cmp
sub
popf
frstor
pop
and
in
sbb
push
sbb
xchg
xor
xchg
loope
out
cmp
push
jp
scas
andl
decb
lds
push
out
inc
push
stc
xor
bound
pop
mov
lcall
mov
dec
gs
shlb
test
cmp
fwait
jle
outsl
lods
dec
sar
add
mov
sbbl
mov
cmp
addr16
jle
fistpl
test
es
sub
sub
and
mov
fstps
leave
int3
jp
xlat
mov
sbbb
sub
sub
xchg
lret
sahf
incl
jno
and
js
mov
shrb
loopne
push
pop
pop
mov
mov
lcall
xchg
adc
sub
sti
xor
mov
call
stc
xchg
outsb
sbbl
out
clc
jns
cmp
out
mov
outsl
ljmp
xor
mov
add
xchg
das
push
sub
scas
sbb
xchg
ret
sbb
mov
cmpb
mov
into
outsl
mov
xchg
stc
add
dec
cmp
outsl
dec
adc
sahf
push
test
and
int3
cli
lock
loopne
ljmp
add
xchg
mov
adc
cmp
push
cs
loop
add
push
popf
pop
push
cmp
jmp
jmp
pop
cmp
movsb
data16
sbb
ljmp
add
inc
std
pop
jbe
shl
mov
hlt
sub
or
mov
xlat
dec
mov
addr16
push
or
sub
fistpl
and
aad
push
jecxz
les
ret
jge
xchg
cwtl
rcrb
sub
sbb
add
mov
xchg
std
add
in
xor
aas
enter
ret
fisubrl
data16
pop
das
cvtps2pd
ss
push
xor
es
fnstenv
pusha
mov
mov
int3
in
or
bound
stos
rcr
adc
add
ret
pop
outsb
xchg
lret
pop
adc
addr16
iret
jb
xchg
ljmp
pop
push
fstps
loopne
pop
or
cmp
scas
bsr
add
pop
test
sub
icebp
or
jl
lea
mov
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
xor
addl
add
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
fsubrl
or
pop
or
fs
loope
jle
jge
jle
cs
mov
ds
repnz
inc
aam
lock
pop
out
mov
fcmove
out
xlat
mov
ret
jmp
push
mov
mul
out
out
inc
das
ja
xor
jmp
movl
or
lock
daa
mov
sub
out
sbb
sbb
in
jbe
lods
cwtl
push
jb
mov
xlat
hlt
dec
push
pushf
aas
and
mov
xorl
std
clc
cmp
lods
pop
int
outsb
pop
xchg
mov
cmp
sbb
repz
inc
rcrb
push
scas
subb
sub
push
push
add
xchg
cmpsl
hlt
mov
xor
loop
or
mov
mov
addr16
add
cmc
in
ret
add
jae
sbb
pushf
into
sahf
dec
aad
int3
and
mov
fwait
lds
cltd
dec
jle
add
scas
arpl
pop
repnz
adc
hlt
ljmp
push
mov
jmp
mov
call
rclb
into
in
mov
aad
cmc
repnz
repz
fisttpl
dec
push
test
inc
mov
or
jmp
push
roll
lea
xchg
imul
jle
rcrb
add
dec
sbbl
test
dec
in
sub
adc
bound
jl
addb
xor
mov
hlt
stos
js
in
ret
lahf
inc
add
cmp
add
sub
mov
jno
jecxz
bound
cwtl
test
scas
add
movsl
inc
cs
and
jmp
push
adc
gs
dec
add
cmp
in
loopne
cmp
bound
xchg
cmp
sbb
inc
mov
add
xor
data16
scas
push
rcrb
dec
scas
fwait
and
pop
sub
push
cmpsb
mov
ljmp
pop
xchg
ds
or
aam
xchg
pusha
adc
sahf
mov
sub
mov
movsb
std
pop
mov
push
data16
push
dec
enter
dec
xchg
cmc
in
popf
mov
out
jae
xor
pop
in
lea
out
movsb
test
aas
and
cmp
xchg
xorb
sbb
imul
nop
lret
cwtl
into
mov
repnz
clc
outsl
xor
test
xor
test
js
pop
in
xchg
push
adc
cmp
bound
outsl
mov
lcall
sub
iret
repnz
enter
xchg
inc
add
test
mul
pop
inc
sub
aaa
dec
cs
stos
roll
mov
push
imul
fcmovbe
push
mov
inc
cmp
cmc
mov
mov
rorb
test
or
xchg
jle
sbb
pop
cwtl
cmp
adc
sub
jmp
mov
sbb
jl
inc
add
jmp
leave
inc
mov
inc
xor
icebp
pushf
lahf
mov
in
jle
jge,pn
jle
mov
lds
push
push
jns
sbb
mov
sar
repnz
and
sbbl
xchg
jge
pop
mov
fwait
movsb
shrb
js
mov
test
test
inc
push
xor
mov
arpl
pcmpeqd
shl
sbb
cmp
sbb
dec
jns
dec
sub
call
xchg
rcrb
xor
inc
inc
add
orl
pop
lds
and
pop
mov
push
or
js
mov
fs
in
mov
cmp
lods
and
scas
sbb
insl
xlat
jge
dec
test
dec
rcrb
in
sub
fs
mov
cld
bnd
xchg
je
jp
cwtl
ss
push
aam
mov
and
cmp
push
sub
lods
aad
push
pop
int
xchg
cmp
movsb
js
add
lcall
cmp
jecxz
cmpsb
pop
ret
rolb
jo
dec
aad
mov
push
xchg
pop
ret
test
xchg
inc
xlat
arpl
loope
lods
sbb
insb
xchg
gs
iret
in
dec
mov
xchg
xchg
lahf
dec
mov
inc
sbb
jmp
int
loop
push
mov
popf
dec
mov
stos
xorb
stc
lret
pop
sbb
pop
jge
adc
sbb
je
subb
movl
inc
and
sub
add
xor
int
xor
mov
negb
ja
sbb
xchg
add
pop
ljmp
testb
sub
mov
ds
cmp
pop
nop
imul
adc
xlat
mov
pop
hlt
inc
gs
fistpll
insl
fs
dec
cmp
arpl
xor
lret
fwait
sbb
dec
inc
dec
jne
pop
imul
lcall
pop
mov
push
sbb
pusha
into
add
jmp
pusha
push
mov
shr
or
popf
jl
push
mov
lahf
mov
xchg
pop
push
jne
pop
sbb
pushf
aam
std
dec
nop
repz
adc
push
fmuls
andl
sub
sub
in
xor
test
mov
aas
icebp
pop
shrb
in
ficomps
jno
add
jo
js
sub
pop
stos
js
mov
cmp
dec
sahf
jmp
inc
cmc
into
js
jo
bound
cmpxchg
xchg
mov
in
mov
stos
insb
pop
in
push
xor
sbb
ljmp
inc
nop
dec
leave
int
cli
and
lahf
mov
mov
repnz
or
or
clc
jp
int
dec
dec
xor
pop
jp
jne
in
out
ficoms
xchg
call
pop
ss
sbb
cmp
inc
scas
rcll
fwait
nop
fidivl
mov
jecxz
mov
jmp
or
jno
aad
push
xor
xchg
andl
mov
mov
movzwl
add
movl
mov
jmp
js
adc
jae
loopne
lfs
or
call
jle
cmpsl
cmp
push
fptan
loop
test
xchg
loop
pop
enter
js
ficoml
mov
jae
icebp
sarl
dec
pop
outsl
into
popf
js
es
cwtl
stos
push
inc
in
andb
mov
pushf
les
lret
mov
cltd
xchg
jae
mov
mov
inc
inc
jae
out
test
cmp
rorb
sbb
inc
dec
mov
daa
jp
push
test
in
ljmp
aaa
ljmp
out
sub
add
loopne
inc
fsubl
mov
jle
cmpsb
cmpsl
jp
orb
repz
mov
mov
mov
roll
add
outsl
mov
iret
push
xadd
mov
aam
or
jl
xchg
mov
mov
popf
cwtl
das
inc
mov
nop
pop
clc
movsb
insb
jge
cmpsl
lcall
sti
lret
lahf
mov
gs
xchg
fnsave
std
rcrl
sub
mov
jge
sahf
clc
fsubl
ja
js
mov
cmp
shll
xorl
fcomi
ret
sub
inc
int3
sub
leave
incb
sbb
stos
jg
jb
popa
bound
sbb
push
stos
mov
adc
scas
push
ss
cmp
orl
mov
repnz
xchg
mov
mov
test
push
and
cmp
enter
ss
xchg
mov
sbb
ret
or
xlat
or
nop
sbb
push
pop
das
cmpsb
addb
mov
xchg
in
dec
mov
test
inc
lcall
scas
imul
pop
test
and
sbb
mov
mov
test
inc
dec
sahf
or
or
ret
test
xor
push
mov
mov
xchg
dec
lods
and
adc
xor
cmc
lea
and
mov
add
int
fsts
mov
fwait
sub
xlat
into
sbb
mov
sti
jle
stos
cli
into
sub
sub
roll
dec
stos
lret
sub
adc
in
fimull
dec
fsubp
sbb
leave
lods
push
imul
rcrb
jmp
adc
notb
push
fnstenv
dec
push
pop
pushf
pop
sub
fwait
pushf
fldcw
xor
lret
test
stos
or
pusha
cmp
fcoml
mov
sahf
or
out
mov
and
test
leave
insb
inc
cmp
mov
dec
lcall
xlat
fldt
xchg
fiaddl
push
lods
pop
in
pushf
push
inc
arpl
arpl
fwait
or
fs
mov
xor
cmc
scas
insl
test
icebp
push
hlt
pushf
icebp
jb
fsubs
cli
sub
aad
mov
push
sbb
push
dec
in
loopne
stos
sub
cmp
int3
xlat
test
or
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
jmp
cmp
pop
dec
push
aam
int3
cmp
nop
shrl
idivl
jge,pn
jle
and
loope
shr
or
push
pop
pop
xor
movsl
jae
fsub
jle
test
fimuls
lcall
and
aad
sbb
mov
sub
fmul
dec
adc
pop
mov
pop
test
outsl
pop
fisubs
sbb
mov
int3
pop
mov
xor
in
jns
jge
mov
int
cmp
adc
fnstsw
add
aas
cld
sub
mov
loopne
movsb
sbb
test
ss
arpl
cmp
push
fstl
adc
mov
inc
mov
gs
xor
adc
int3
pop
pop
xchg
ret
lret
sbb
sub
stos
and
popl
xchg
cmpsb
test
and
lock
mov
sub
rcrb
hlt
shl
mov
lock
xor
gs
nop
push
mov
repnz
insb
lds
rclb
add
mov
loopne
mov
mov
cld
cs
cmp
movsb
cmp
xchg
pop
bound
pusha
std
imul
push
jl
dec
imul
bound
jle
mov
dec
add
jl
sub
sti
and
or
or
mov
adc
or
mov
pop
int3
cmp
xor
push
movsb
jo
dec
push
jmp
adc
mov
cltd
pop
jae
fs
fwait
mov
aad
pusha
jne
inc
outsl
lock
hlt
mov
push
repz
sub
shrl
ljmp
jecxz
aam
lret
scas
cmp
add
in
loopne
addb
aam
loope
inc
push
inc
outsb
mov
adc
sbb
arpl
xchg
jle
push
xor
mov
mov
scas
ffree
jae
add
std
lahf
roll
insb
jmp
fdivs
or
inc
sbb
mov
push
in
out
jno,pn
push
je
push
xchg
cwtl
lds
push
out
jae
xor
ds
inc
cmpsb
and
jl
hlt
jbe
push
inc
mov
cmpsb
clc
dec
mov
test
mov
daa
and
mov
cmpsb
xor
test
fucomi
xchg
test
mov
xchg
mov
je
sub
push
jp
jle
js
lods
jmp
mov
pusha
jmp
mov
cmpsl
out
negl
mov
push
addr16
sub
arpl
jl
loope
ja
mov
dec
or
lock
sarb
outsb
pop
pushf
push
and
jbe
lea
inc
lret
mov
or
test
or
sbb
shll
jmp
sbb
push
out
xchg
dec
cmp
rcrl
loope
dec
js
outsb
inc
jns
enter
pusha
test
sbb
and
imul
fildl
fldl
scas
fidivl
cltd
cmp
sub
mov
insb
add
fcmovnu
push
loop
cmp
inc
lock
xor
mov
sub
add
mov
mov
jmp
mov
jns
xchg
xor
mov
add
fptan
jle
jge,pn
jle
inc
repnz
lods
push
jne
xor
sbb
sbb
cmpsl
pop
or
lahf
xchg
add
into
pop
mov
ja
popf
mov
pop
movsb
jae
stc
sbb
stos
enter
mov
jmp
sbb
inc
and
out
jecxz
inc
rorl
sbb
jbe
mov
loop
in
fcmovne
sahf
insl
subb
pusha
jne
in
dec
out
ficoms
dec
cld
mov
rol
sbb
jmp
es
adc
fsubr
or
outsl
je
sub
xor
push
mull
and
lds
out
or
hlt
mov
push
xchg
imul
and
call
mov
mov
sahf
dec
sbb
push
call
and
sbb
dec
rep
xlat
mov
scas
fndisi(8087
jb
in
ret
pushf
dec
mov
cmp
push
fidivl
imul
mov
mov
sbb
popf
mov
add
add
test
ja
insl
add
jnp
adc
lds
call
and
pushf
lcall
xchg
aad
and
pop
pop
popf
sub
mov
pop
fdivrl
adc
enter
jbe
and
dec
mov
inc
sar
cli
enter
sbb
dec
pop
xchg
add
lods
ret
imul
iret
lea
into
and
into
test
popa
inc
test
jns
scas
and
iret
jl
xor
sbb
test
pop
adc
cmp
xchg
rcrl
mull
push
adc
hlt
mov
in
shr
or
ret
js
xor
popa
int3
xor
mov
mov
bound
call
mov
jmp
aas
inc
aad
lods
mov
and
push
inc
mov
stos
ljmp
cmp
test
mov
dec
bound
test
mov
fnstsw
lahf
jae
cmp
addb
test
and
push
lea
adc
ds
lods
add
dec
paddd
pop
test
cmp
push
jmp
push
jg
popa
dec
shl
lds
jb
xor
hlt
into
xchg
data16
sub
das
je
inc
sub
pushf
in
adc
add
pop
rclb
add
push
lea
js
sbb
xchg
dec
pop
jb
and
mov
cmp
jae
and
inc
xchg
hlt
mov
sahf
shl
add
test
adc
mov
scas
pop
add
push
jg
mov
mov
sub
fldenv
and
int
incl
xchg
mov
outsl
jge
ret
cmp
data16
pop
jno
into
jnp
clc
jb
insl
ror
mov
popa
rorb
and
push
xchg
cld
movzwl
add
mov
mov
jmp
jae
push
lahf
jae
jae
pop
dec
scas
in
mov
icebp
jle
jge,pn
jle
sbb
pop
mov
sbb
rcll
sbb
gs
xchg
add
mov
insl
fistps
icebp
xchg
inc
in
xchg
mov
loope
jmp
les
in
mov
cmpsb
mov
scas
add
loopne
repz
pop
clc
cld
mov
jno
mov
sub
inc
mov
idivb
push
cmpsl
aad
lea
cmpsl
xor
jno
jo
add
enter
test
inc
cmc
mov
mov
fisttpl
icebp
jl
and
xchg
clc
shlb
and
ja
push
push
in
into
adc
call
std
pop
xor
cmpsl
dec
dec
sti
pop
adc
pextrw
pop
ret
cmpsl
cmp
daa
sahf
mov
push
shr
bound
push
outsl
jbe,pt
in
mov
mov
add
rclb
lret
dec
jle
ss
fidivrl
ror
stc
lock
adc
mov
imul
sbb
mov
push
dec
testb
or
pop
cmc
mov
mov
inc
adc
dec
shr
dec
cltd
push
out
lret
pop
sbb
insl
lcall
xchg
ret
rorl
hlt
dec
fists
push
pusha
gs
jecxz
adc
maxps
fldenv
xchg
and
lret
fcmovne
cmp
push
sbb
stc
movzbl
mov
xor
jg
repnz
jns
xor
cs
test
cltd
int
fwait
shrb
lret
sbb
cld
mov
add
inc
cmc
jmp
adc
add
bound
jno
sbb
pop
adc
inc
fsub
pop
sbb
arpl
andl
lea
loop
lcall
ljmp
mov
mov
sub
popa
repz
je
fildll
cmp
push
push
popf
and
stc
mov
mov
cmp
xor
and
xchg
adc
pusha
ja
scas
sbb
bound
sbb
push
sub
hlt
imul
dec
stos
jno
sbb
outsl
out
fsubrl
jns
cmovp
mov
pop
inc
repz
jmp
fsts
add
pop
push
fcmovb
sbb
or
icebp
push
and
cmpsb
ficoms
pop
push
enter
jb
aaa
xlat
aaa
xchg
xchg
out
call
in
shlb
mov
jge
out
jg
inc
inc
les
xor
mov
add
cli
pop
and
outsb
gs
push
push
jge
icebp
xchg
push
andl
addl
jmp
mov
jge
mov
push
mov
stc
and
stc
add
sub
jp
mov
mov
and
hlt
leave
sahf
ljmp
mov
das
aam
dec
out
sbb
xor
add
xor
jmp
pushl
outsl
jno
mov
repnz
iret
mov
mov
jge
jle
push
xchg
cmp
cmp
mov
or
je
xchg
int
rcrb
hlt
xlat
mov
popf
outsl
add
inc
dec
pushf
cli
inc
sahf
addr16
ss
testb
pop
bound
inc
mov
add
xor
mov
mov
jo
aam
sbb
mov
sbb
xchg
insb
mov
dec
popf
sahf
fisubrl
xor
pusha
jmp
push
pusha
gs
pusha
dec
lea
sbb
pop
and
jge
pop
xor
add
ja
shl
adc
sbb
jns
mov
pushf
jp
mov
call
xor
add
nop
and
push
insb
loop
cli
xor
popf
xor
nop
and
ja
psllw
jae
repnz
mov
inc
mov
ret
cli
adc
sbb
leave
mov
jae
andb
mov
lods
sub
adc
sahf
mov
sbb
mov
jae
jbe
or
xlat
push
out
cmp
inc
xor
sub
push
mov
test
cmp
or
pop
xor
cmp
pop
push
pop
fsub
cltd
pusha
rorb
xor
jno
idiv
xchg
inc
nop
cmp
fisubl
call
test
shlb
cmp
test
js
orl
mov
sahf
leave
xchg
mov
sbb
add
push
jnp
lcallw
sub
inc
mov
add
xchg
inc
or
sub
shr
inc
cmpl
aad
xchg
arpl
test
jbe
int
push
cmp
imul
xchg
pop
orl
xor
pop
or
cmp
aaa
mov
rclb
xor
jecxz
adc
cmp
or
mov
ret
cmpsb
sahf
stc
mov
push
pop
je
add
sti
sbb
dec
clc
and
add
pop
std
adc
mov
iret
rcl
cmp
dec
push
enter
and
rcr
jo
add
sub
mov
in
lcall
int3
lret
cmp
sti
out
add
and
sub
add
out
push
cmpl
inc
xor
ds
jno
or
sahf
ja
cmp
cmp
test
xchg
push
jle
lcall
scas
xchg
sbb
cmp
dec
mov
outsl
sub
aam
sub
mov
arpl
in
xor
mov
jg
pop
popa
xor
sti
scas
call
lret
push
xchg
repz
fstl
ss
or
dec
icebp
sarb
push
test
popa
data16
jb
in
sbb
in
sbb
or
xchg
sbbl
jmp
jns
pop
mov
out
int
rorl
subb
cld
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
jmp
nop
push
in
shr
jno
push
mov
scas
and
imul
jle
sbb
in
push
addr16
dec
ds
sbb
cmp
in
leave
adc
rcll
jo
sub
hlt
cmp
add
das
dec
cmp
out
adc
mov
call
sub
mov
lret
sahf
repz
pop
push
mov
shl
xor
std
xchg
jmp
inc
into
mov
insb
rolb
loopne
cmp
mov
xor
adc
enter
lods
repnz
test
pop
imul
jnp
mov
mov
cmp
fs
inc
ret
das
cmp
cmc
xchg
test
and
mov
daa
scas
or
mov
into
ret
inc
or
in
cli
mov
pop
push
mov
dec
or
dec
fsubp
mov
dec
xchg
fidivs
mov
fimull
or
and
sub
out
mov
jne
push
sub
push
inc
enter
lock
adc
or
int3
xchg
sbb
movsl
ficoml
mov
inc
xor
aad
xchg
cmp
popf
movsb
int3
sbb
mov
xor
fwait
insl
testl
loope
cwtl
fcoms
xchg
jle
popf
mov
js
cmp
and
jle
pop
lods
sub
sahf
add
fcom
xchg
sarb
scas
and
mov
fcoml
lods
in
insl
ror
stc
int
mov
cmp
xlat
cmc
xchg
fidivs
cmpsb
mov
and
imul
xchg
imul
ret
dec
aas
inc
mov
sub
pop
lock
xlat
mov
pop
cmp
loopne
movsb
fdivp
xchg
aam
mov
or
pop
jecxz
int
test
ljmp
movsl
and
insb
xchg
fsubl
cmp
setl
mov
pop
fstps
xchg
dec
or
xor
mov
loopne
xor
pop
bound
jno
sbb
or
dec
mov
test
xchg
push
imul
into
clc
mov
test
pop
ret
push
je
bswap
je
loope
movsb
cld
test
nop
mov
adc
pop
sub
lock
jge
xor
cs
ret
cmp
into
clc
cwtl
test
jae
or
enter
sub
mov
cmp
jecxz
test
stc
mov
cmp
sar
mov
daa
xchg
mov
push
jle
lea
or
inc
mov
push
jae
cltd
and
jmp
stos
decl
test
dec
push
sbb
repz
lods
or
fidivl
adc
test
lods
pushf
adc
aas
mov
repnz
mov
jo
scas
inc
push
inc
les
mov
adc
arpl
adc
sub
jno
sub
jb
add
inc
cld
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
jmp
ffree
les
xchg
sub
mov
or
xchg
jge,pn
jle
cltd
ret
aam
fsqrt
adc
sbb
into
sub
xchg
rcl
inc
xor
jno
fcomp
or
add
popf
int3
test
jne
popf
lea
jl
in
fstpl
dec
je
lahf
push
adc
notb
cmp
jbe
sbb
xchg
int3
xor
cmpsl
cwtl
xchg
inc
in
scas
shlb
pop
jno
add
out
mov
sub
xchg
sbb
or
inc
xchg
stos
pusha
fucomp
lods
or
sbb
cmp
xchg
stc
gs
sub
lods
inc
pop
inc
cmp
add
pop
and
or
mov
mov
jno
inc
fldt
je
or
jns
jmp
test
mov
pop
loopne
movl
dec
inc
movsl
in
cmp
orb
lret
cltd
int3
push
mov
push
sbb
push
test
cmpsb
int
out
mov
lret
loop
jecxz
sbb
and
add
dec
cld
sbb
mov
jmp
jmp
es
push
cmp
cmp
pop
mul
sbb
inc
adc
xchg
push
mov
test
das
sub
sub
insl
in
mov
out
sti
sbb
loope
ds
les
mov
loope
ds
lret
test
test
notl
jmp
sbb
sub
scas
jecxz
lahf
movsb
pop
pushf
xor
jbe
outsb
dec
lret
mov
orb
pop
lods
movzwl
push
int
inc
hlt
sub
lahf
test
pushf
jp
mov
and
push
insb
push
fnstcw
aad
and
faddl
clc
jge
mov
je
out
int
add
push
outsl
pop
xor
xchg
xchg
xchg
stos
scas
or
fstps
jle
addr16
movsl
dec
pop
test
ljmp
push
out
cli
push
mov
sub
cmc
pop
push
mov
sbb
inc
js
xorb
stos
inc
imul
jp
call
mov
jo
subl
icebp
loope
adc
sub
sbb
js
cli
mov
pop
and
cmp
push
nop
fmulp
fwait
xchg
imul
sbbb
mov
repnz
or
mov
sbb
sbb
mov
pop
rclb
fnstenv
xchg
lock
xchg
inc
add
loopne
dec
imul
sub
cmp
sub
scas
mov
mov
jmp
in
add
aaa
movsb
cs
mov
mov
fdivp
sbb
dec
and
pop
jb
outsl
call
scas
loop
loope
and
loope
jl
mull
sbbl
xchg
mov
pop
fld1
shrb
inc
loop
test
les
adc
movsl
inc
call
in
rclb
in
sub
rolb
push
xor
pop
movsl
jg
sbb
pop
mov
in
pop
dec
mov
mov
ret
pop
into
and
and
lds
or
loopne
inc
or
movb
mov
mov
jmp
mov
inc
inc
orb
data16
test
dec
leave
cmpb
jge
jle
xor
ljmp
xor
arpl
jns
jbe
insb
inc
push
cwtl
iret
xchg
scas
bound
fisttpll
add
push
stc
sbb
cmp
sub
cs
fdiv
out
push
out
out
inc
or
clc
mov
cli
push
fldt
iret
aaa
xchg
sbb
fdivs
in
mov
dec
ds
shlb
sahf
mov
in
mov
int
movsl
sub
mov
xchg
inc
xor
mov
push
scas
xchg
xchg
xor
push
inc
fidivrs
imul
bound
mov
sbb
ljmp
mov
in
push
xlat
sbb
negl
popl
mov
call
std
cli
pusha
xor
movb
les
cmpsb
jb
mov
adc
and
stos
xor
icebp
and
jg
mov
loopne
aaa
lret
xor
cld
xor
xchg
push
int3
mov
lret
jno
cmc
dec
jae
adcb
insb
lock
ss
loope
stos
into
xchg
inc
push
out
sbb
out
mov
test
repz
push
fwait
cmp
es
jns
imul
push
stos
pop
mov
push
je
into
mov
dec
mov
sbb
shlb
cmp
in
ja
mov
push
adc
cmp
mov
push
mov
dec
in
shr
clc
test
loope
add
xor
lock
lahf
bound
ds
aaa
and
int3
push
sbb
mov
inc
inc
stos
inc
dec
outsl
and
aaa
or
in
or
jl
add
and
shlb
sbb
mov
sti
stos
mov
in
les
mov
sahf
dec
rcr
aas
fadds
cmpsb
aas
and
inc
lds
jb
sbb
loope
sub
sbb
or
pop
xchg
es
push
xor
sbb
pop
in
cmpsb
dec
lahf
stc
ds
into
int
jmp
test
out
movsl
sub
in
mov
dec
pop
mov
cmp
popf
in
mov
and
stos
std
dec
test
jno
mov
fsubl
dec
mov
andl
lods
pusha
dec
popa
movb
adc
arpl
sarl
lds
pop
int
xchg
lds
icebp
lret
mov
iret
inc
mov
inc
cmp
jp
inc
rclb
or
sbb
jp
stc
add
std
mov
mov
int3
in
jbe
out
mov
jp
js
insb
movsl
cmp
loope
push
and
push
in
xchg
add
rorb
fwait
popa
add
push
fsts
ljmp
cmp
hlt
mov
sub
jmp
sub
out
in
lods
mov
pop
push
mov
cmp
inc
js
xchg
jecxz
add
hlt
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
pushl
pushl
call
cmpl
jb
mov
mov
add
xor
cmp
jne
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
mov
mov
sub
mov
push
inc
mov
orl
xor
cmp
movl
je
mov
mov
sub
imul
mov
and
mov
sub
sbbl
xor
movl
cmp
movl
jne
mov
xorl
add
movl
jmp
sbb
mov
adcl
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
sbb
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
adcl
movl
mov
subl
push
adc
mov
xor
add
mov
add
mov
and
mov
subl
push
push
test
movl
je
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
xorl
mov
movzbl
sbb
mov
imul
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
mov
mov
sub
mov
xchg
mov
xor
sub
xor
movzwl
or
mov
or
mov
sbb
mov
or
mov
mov
xor
mov
xor
xorl
xor
movzbl
or
jmp
adc
addr16
clc
jno
inc
xor
xor
cmpl
xchg
adc
add
jg
fisubl
lret
nop
mov
ds
imul
mov
xchg
jae
aam
sbb
stos
popa
mov
fs
mov
insl
pop
inc
adc
movsl
scas
lret
sub
cmpsb
sub
mov
dec
mov
xchg
test
cmp
test
out
sub
sbb
dec
mov
aas
cmp
mov
pop
adc
pop
push
jmp
data16
cmp
js
imul
cmc
mov
pop
sub
mov
rcrl
mov
and
xchg
into
push
notb
clc
jne
fcoms
lahf
cmp
loopne
mov
sbb
jmp
lock
decl
adc
mov
add
sub
sub
pop
std
fcmove
xorb
stos
pushf
inc
cmp
inc
movl
and
mov
cwtl
jo
inc
mov
sub
mov
mov
mov
mov
je
mov
andl
xor
orl
add
movl
cmp
movl
jne
pushl
subl
call
mov
add
mov
add
mov
mov
mov
mov
and
mov
subl
xor
add
movl
cmp
movl
je
sbbl
pushl
pushl
movl
call
xorl
mov
orl
mov
adcl
mov
addl
xor
add
movl
cmp
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
jmp
add
in
jecxz
icebp
adc
push
test
jle
jg
jle
rcrb
jg
iret
cltd
scas
push
inc
push
mov
jmpw
sbb
push
fistpl
and
es
inc
bound
mov
sub
hlt
xor
sti
jbe
rolb
sbb
cwtl
jge
loopne
mov
push
jb
xor
sub
pop
jne
jns
adc
data16
pop
sbb
jnp
or
test
ljmp
sub
cli
cmp
push
push
scas
push
filds
mov
sbb
mov
push
jne
or
insl
jp
push
sub
add
and
push
mov
testl
sahf
jmp
imul
pop
ja
aas
sbb
jne
push
mov
insb
jns
fidivs
mov
lcall
out
xchg
insl
repnz
pop
sub
xor
dec
pop
and
cmpsl
pop
pop
pop
push
mov
das
mov
lock
loope
mov
xlat
in
jmp
int3
cmpsl
dec
add
mov
vpaddsw
jbe
ret
lcallw
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
jmp
aad
fstps
push
fsin
into
repnz
jle
and
jle
insl
sub
test
loop
rorl
adc
pop
outsb
mov
rcrl
ljmp
sbb
push
aad
cwtl
jecxz
xchg
jle
sub
pop
xchg
leave
push
and
jo
rorl
adc
sub
cmp
sbb
and
add
and
mov
rol
cld
and
repz
inc
gs
lcall
popf
mov
pop
pop
cs
sub
xor
adc
ja
arpl
repnz
or
jbe
in
push
sub
sbb
sbb
call
xchg
cltd
push
push
out
aad
lock
xor
dec
shr
add
test
push
mov
xor
repz
and
mov
mov
add
adc
inc
iret
jmp
mov
lods
cltd
jle
jbe
pop
xor
mov
xor
mov
inc
cmp
std
pop
cmp
mov
cmp
icebp
and
test
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
dec
xchg
mov
jae
out
push
mov
lea
and
jle
cs
lods
jmp
outsl
sarb
dec
ret
cs
and
stc
mov
into
mov
pop
add
subb
popf
sahf
xchg
fs
mov
mov
cltd
cmp
lock
call
adc
cmp
cmp
cmp
mov
mov
sbbl
xlat
push
orb
sub
and
iret
xchg
mov
mov
aaa
mov
testb
push
movsl
adc
lods
mov
push
ljmp
cmp
int3
jge
movsb
test
mov
andb
inc
xor
repz
push
mov
ja
fadds
les
subl
sub
sahf
js
xchg
add
pop
xchg
fistps
nop
sbb
inc
mov
pop
pop
incb
xor
push
insl
in
adc
inc
xor
cltd
jbe
cmp
imul
ja
aam
cs
jnp
cmpsb
mov
mov
lods
add
sbbb
dec
repz
mov
mov
add
sub
jmp
adc
jae
jno
je
adc
push
adc
sub
jle
iret
fcoms
xchg
cmp
sbb
xor
or
mov
jb,pn
lods
dec
sbb
inc
movsb
jne
into
aam
mov
gs
sbb
int3
push
std
push
aaa
sbb
enter
outsb
iret
inc
sbb
sbb
sub
das
lret
add
mov
imul
clc
pop
push
pop
mov
xchg
stc
xlat
out
into
aaa
or
stos
test
mov
stc
inc
stc
lock
pop
push
jno
mov
repnz
aas
pop
ss
sub
mov
dec
inc
dec
mov
into
ret
lea
inc
jp
fcomi
add
sbb
repz
test
jmp
mov
push
jbe
cs
xchg
pop
mov
or
cli
int
jno
fwait
mov
fptan
adc
xor
fldcw
rcrb
ljmp
cltd
data16
outsb
sbb
mov
cmp
inc
pop
cmc
mov
push
or
push
adc
call
mov
fwait
jb
jbe
js
push
addr16
push
xchg
jmp
mov
jo
mov
dec
mov
jle
and
jle
cld
pop
sbb
idiv
or
jg
test
sahf
mov
pop
sub
add
cmpsb
sub
les
das
mov
test
stc
mov
pop
stos
popf
add
sbb
push
pop
fs
jno
sahf
pop
sbbl
testb
jb
mov
jo
imul
jge
sub
push
xchg
adc
adc
ljmp
xlat
jp
popf
jl
cmpsb
fidivl
add
notb
cmp
add
test
mov
shrl
sbb
push
xchg
mov
stos
inc
cs
sbb
sbb
bound
xchg
stos
int3
add
je
push
add
fcmovbe
xchg
in
cmp
inc
call
xchg
sbb
mov
xchg
mov
std
xchg
sbb
popa
mov
popa
and
mov
rclb
adc
iret
or
lea
and
dec
pop
add
sbb
mov
push
add
test
jns
push
sbb
xorl
adc
mov
inc
in
scas
shrl
mov
mov
mov
xor
mov
add
mov
mov
xor
jmp
fsubs
imul
inc
stos
into
orl
dec
inc
xchg
iret
jmp
mov
test
repnz
jae
rol
roll
sbb
inc
or
jbe
es
or
lahf
jg
test
lcall
out
pop
test
pop
xor
xchg
push
ret
mov
or
mov
xor
fucom
jge
arpl
sbb
adc
cmpl
cmp
xor
cli
and
movsl
cmp
les
subb
mov
out
pop
add
mov
xchg
or
adc
xor
ficomps
sbb
push
cmp
jl
pop
dec
icebp
sti
or
ret
sub
lds
jmp
popf
dec
mov
push
hlt
inc
pusha
jg
push
mov
cmp
ljmp
imul
xchg
lahf
adc
std
xchg
scas
mov
imul
cmp
test
popf
push
fsts
subl
insl
push
aad
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
jmp
cmpsl
scas
and
stos
jp
mov
mov
mov
and
jle
inc
gs
sub
aam
lods
iret
lahf
lahf
sub
mov
sti
xchg
cmpsb
lcall
xor
lea
jg
mov
mov
inc
mov
out
push
inc
cmpsb
icebp
mov
outsb
push
test
lods
and
loopne
push
jp
aad
mov
aad
cmc
xchg
mov
fsubr
inc
in
leave
or
inc
outsl
shlb
cs
addr16
shll
sbb
cmp
daa
mov
mov
adc
mov
out
push
dec
fs
movsl
and
bound
mov
sti
cmp
add
movsb
adc
orb
aas
lcall
setp
in
add
xlat
cmp
pop
dec
hlt
pop
add
inc
ljmp
push
scas
or
pusha
je
sarb
gs
mov
bound
cmp
adc
dec
imul
das
inc
jno
sti
cmc
or
sti
iret
sbb
scas
dec
pushf
ja
xor
ror
nop
and
pop
cwtl
xchg
cmp
iret
xchg
repnz
push
sub
call
roll
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
jmp
lcall
jno
insl
add
pop
xchg
jle
and
jle
popa
scas
iret
jb
jbe
xchg
std
sbb
jecxz
sbb
sub
or
out
int3
mov
sub
push
mov
xchg
sbb
jno
jo,pt
and
jmp
nop
lods
sub
cmpsl
xchg
push
mov
sahf
icebp
inc
test
pop
mov
add
inc
dec
ror
push
adc
sub
movsl
jmp
jg
lahf
lcall
fsub
rol
lret
stos
pop
std
mov
and
ja
loop
xchg
popa
sbb
mov
sbb
cmpl
pop
decb
add
subl
add
idivl
cltd
test
ja
jne
jg
cli
jg
ss
clc
or
jno
je
and
shlb
xlat
ret
paddb
ljmp
mov
xlat
sbbb
imul
lock
xor
and
jl
cmp
xchg
push
test
pop
inc
dec
sbb
xor
or
jb
fadds
mov
sarb
es
lea
inc
jb
push
dec
cmpsb
push
aaa
fnstenv
in
jns
pop
add
lret
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
mov
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
fwait
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
cmp
pushf
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
fiaddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
lret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
sub
inc
fnstcw
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
fwait
inc
xor
pop
inc
shl
inc
sub
inc
add
add
out
clc
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
enter
lea
mov
mov
in
cmovne
jmp
inc
mov
sbb
mov
add
in
add
sub
add
jle
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
int3
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
call
mov
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
cmp
pushf
pushl
mov
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
cmp
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
fwait
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
xor
jmp
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
cmp
pushf
nop
movl
clc
add
add
or
dec
ret
push
inc
dec
mov
mov
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
cmp
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
call
add
mov
xor
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
fwait
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
fwait
mov
jge
decl
