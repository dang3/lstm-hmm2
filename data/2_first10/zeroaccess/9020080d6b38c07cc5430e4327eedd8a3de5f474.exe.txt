push
mov
sub
mov
jmp
incl
shlb
fs
nop
jle
jle
cwtl
jg
jle
xlat
cmp
rol
pop
add
push
js
rdpmc
xadd
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
xor
dec
push
jo
sbb
rcrl
addr16
fs
pop
pop
aas
out
pusha
pop
jp
xchg
addb
clc
and
mov
push
pop
insl
and
pop
xchg
std
mov
rcrb
loope
loope
and
push
inc
fcoml
lahf
hlt
int
cltd
push
push
adc
cwtl
lods
jmp
cld
jmp
push
mov
inc
sub
dec
test
iret
mov
jne
xchg
sub
sub
cmp
sub
lahf
pop
int3
adc
fstpt
pop
jp
in
jmpw
test
dec
push
cmp
push
in
fisttpl
and
mov
lcall
nop
fbstp
fidivs
sub
lods
imul
pop
movsl
push
cmp
sub
and
add
cwtl
repz
inc
fdivs
xor
imul
pop
add
mov
movl
cmp
jne
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
jmp
out
sub
xor
imul
and
adc
cwtl
jg
jle
jg
jle
inc
and
cmc
mov
mov
sub
jmp
gs
dec
dec
rcrb
mov
aaa
mov
aam
pop
pusha
pop
mov
cld
bound
addb
aam
mov
fidivrs
lcall
adc
out
push
fidivrs
std
push
and
or
pop
cld
movsl
mov
les
inc
jo
cmovge
push
xchg
or
xor
xchg
pop
push
dec
push
jp
inc
add
cmpsb
addr16
psubusb
push
sub
cmp
dec
inc
fldt
aad
insb
pop
imul
shlb
fistpl
cmpsb
mov
loop
xor
adc
inc
les
int
arpl
push
add
pop
aam
jnp
es
sub
inc
inc
push
rcrb
outsl
roll
xor
sbb
in
adc
jae
into
dec
stc
ss
mov
mov
bound
cmp
imul
lock
std
das
jle
xlat
and
xchg
adc
push
in
jae
adc
adc
lds
cmp
lds
ficomps
int3
inc
movsb
dec
insb
scas
and
jo
test
push
pushf
adc
insb
or
mov
in
aaa
jl
ror
pop
aas
pop
xor
cmpsb
ja
test
xchg
mov
cli
mov
dec
ss
dec
pushf
xchg
xchg
insl
enter
aad
cvtpi2ps
gs
or
xlat
data16
cmp
or
mov
test
cmc
aam
lahf
filds
adc
mov
add
add
xor
movzwl
or
mov
jmp
adc
insl
xchg
jo
or
rcrl
jle
jg
jle
out
out
clc
mov
stc
fldt
push
sbb
dec
push
adc
stos
dec
xor
mov
adc
pop
fs
cs
jnp
in
pop
jg
xor
jo
loope
lret
add
subl
mov
inc
cmpsb
ljmp
ficompl
std
int
sahf
xchg
pop
repnz
push
dec
mov
cmp
test
cmp
xchg
inc
shlb
mov
push
in
cs
jecxz
xchg
les
push
stc
iret
fmul
push
test
stc
mov
cltd
in
hlt
xchg
mov
outsl
cmp
push
adc
repz
scas
mov
shlb
push
jl
nop
mov
sbb
add
cmpsl
pusha
cmp
mov
cltd
xlat
mov
cmpsb
dec
mov
loope
adc
mov
sbb
mov
cmp
adc
frstor
shrb
sub
lods
mov
dec
jge
push
pop
jg
pop
jle
fcmovnb
inc
loop
cmc
jns
mov
and
jne,pn
dec
loop
lcall
int
clc
mov
push
stos
lods
jmp
add
push
movsl
and
and
pushl
ret
lods
mov
inc
xchg
fsubr
sbb
lahf
xor
or
xor
dec
push
shl
dec
push
mov
push
cs
scas
je
dec
cwtl
mov
xchg
sub
push
data16
hlt
lock
pop
xor
pop
push
scas
cmp
push
push
loopne
xchg
lods
pop
hlt
cmp
fbstp
out
inc
and
sti
fimull
push
and
jmp
push
and
pop
xor
jno
cmpsl
cmp
popf
jo
shrb
cwtl
jg
jle
into
addl
fidivrl
andps
pop
lock
push
mov
dec
nop
jmp
xchg
sti
pop
loop
lcall
mov
lock
and
mov
xchg
inc
int
lret
subb
int
das
cmc
push
daa
mov
addr16
fcompl
jecxz
mov
jmp
inc
mov
ret
vpunpcklbw
es
insb
mov
movb
lcall
into
pop
or
push
shlb
adc
jmp
in
pop
out
jns
outsl
push
js
cmpsl
cmpsl
fcom
add
inc
sbb
mov
pop
add
mov
pop
ss
sarb
dec
mov
fldl
and
or
mov
stos
js
ret
clc
je
ror
mov
push
and
xor
dec
outsl
jg
inc
push
sub
sarb
movl
out
insl
cs
gs
aad
cmp
jecxz
ljmp
mov
std
icebp
lock
ja
cmp
inc
mov
sub
cld
clc
adc
xchg
ret
push
cld
stc
mov
cmpsb
psadbw
fldt
pusha
adc
nop
test
and
pushf
aaa
imul
and
popf
xor
ss
push
pop
inc
push
xrelease
cmpsb
adc
mov
adc
pop
ret
jne
mov
jnp
push
or
clc
xchg
lcall
push
fistpl
movsl
fcoml
push
pop
lret
add
addl
std
xchg
mov
add
movl
movzwl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
sbb
not
and
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
sbb
mov
push
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jb
mov
movzwl
mov
mov
mov
movl
movl
mov
mov
lea
mov
mov
mov
lea
mov
mov
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
jmp
movl
popa
movsl
ja
and
xchg
js
jle
jg
jle
or
imul
sub
mov
sbb
xchg
mov
push
test
lods
in
mov
mov
leave
in
mov
jge
dec
subl
aaa
int
add
jecxz
push
mov
xchg
roll
jg
adc
pop
adc
shll
pop
jnp
cwtl
fnstsw
orb
inc
cmp
fcompl
jmp
add
sbbb
stos
test
jg
scas
ja
aaa
mov
mov
arpl
sub
mov
test
imul
test
outsl
shrl
pop
xchg
jne
cmp
push
push
movsl
hlt
push
jg
pusha
cmpsl
sub
pushf
and
je
shll
mov
cmp
cmpl
and
ficomps
imul
scas
aad
xchg
std
lods
or
add
in
sub
punpcklbw
sbb
mov
xor
lock
pop
mov
mov
negb
add
shrb
add
mov
sub
test
enter
xor
pxor
loope
daa
rcl
xchg
mov
mov
sub
imul
sub
mov
in
cltd
ljmp
sub
sub
icebp
pop
fimull
aaa
test
push
push
push
pop
in
mov
nop
and
xchg
mov
xchg
add
data16
scas
mov
mov
je
dec
movsl
in
pop
sub
add
lea
mov
mov
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
jmp
das
adc
inc
icebp
inc
mov
test
and
pop
loope
mov
push
jle
cwtl
jg
jle
in
cmp
test
in
inc
gs
orb
rorb
push
int
mov
cmp
push
xchg
dec
ds
add
push
adc
addr16
je
in
dec
pop
call
mov
mov
pop
enter
ficompl
hlt
dec
lret
iret
xorl
push
lea
push
popf
js
mov
mov
and
movsb
out
jno
les
inc
cmp
mov
inc
push
pop
call
adc
nop
add
push
call
xchg
or
xchg
sbb
sbb
jle
jne
cmp
sti
insl
out
ja
xchg
push
je
xchg
divl
sbbb
out
mov
loope
sub
daa
out
clc
add
sbb
cmp
push
repnz
sbb
fst
sub
mov
jo
sbb
cmpsb
jg
fisubrl
mov
movsl
pop
mov
xchg
int3
out
jl
out
sbb
enter
sbb
xor
xchg
out
cs
xor
shrb
adc
test
fcomi
xchg
adc
pop
into
inc
fwait
out
repnz
inc
sub
xchg
mov
lret
jle
jnp
mov
or
ficoms
jecxz
mov
push
jg
andl
lret
sub
mov
and
popa
pushf
cmp
imul
xorl
jmp
mov
mov
xor
mov
mov
add
cmp
je
mov
xor
jmp
mov
lcall
ret
pop
pop
pop
pop
pop
jle
cwtl
jg
jle
pop
ficomps
and
xchg
mov
sbb
sbb
mov
or
jp
out
mov
lret
sar
xchg
int
das
movsl
loopne
pop
pushfw
ret
adc
sub
dec
adc
xchg
test
cmp
xor
lods
inc
pop
mov
enter
notl
push
mov
rcll
mov
pop
movsb
fadds
cmp
arpl
int3
repz
xor
xchg
sub
cmp
insb
nop
test
mov
xlat
rorb
jge
mov
pop
add
push
sub
push
cmp
cwtl
addr16
push
sti
and
xlat
dec
aaa
pushf
xor
std
fcomi
push
ja
jmp
fisttpll
popf
sub
mov
out
out
cmp
adc
in
shll
xchg
sub
mov
push
setnp
mov
push
jle
mov
out
cwtl
pop
fwait
jge
mov
cmpsl
pop
lock
push
mov
sbb
cmpsb
add
out
adc
pushf
scas
and
push
mov
testl
cltd
shl
pop
mov
movsb
adc
loope
mov
pop
lea
nop
test
cmc
cmp
or
xlat
pop
ds
icebp
push
pop
xchg
xchg
and
movsb
dec
jmp
clc
pop
push
aas
shll
das
mov
lds
add
scas
clc
dec
jne
out
add
shlb
xorl
lret
fdivrs
mov
jp
adcl
out
dec
shl
add
mov
mov
mov
mov
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
outsb
jecxz
mov
jne
add
loopne
test
jle
jg
jle
arpl
mov
pushf
scas
cld
dec
pop
outsb
cltd
or
mov
sub
mov
mov
sub
jns
lahf
imull
js
out
shrb
into
cltd
xor
mov
fwait
and
fnstcw
nop
xor
push
inc
iret
aas
dec
in
test
fsubl
adc
cs
jge
adc
test
int3
inc
xor
pop
imul
out
lcall
fcoml
addr16
insb
cmp
bound
decl
cltd
loope
scas
loop
rcl
pushf
inc
add
jg
or
pop
cmc
mov
mov
insb
and
cmc
push
push
aad
push
lret
pop
dec
push
and
add
mov
xchg
test
push
stos
pusha
ret
sbb
add
mov
rol
jle
cmp
enter
enter
adcb
sub
xchg
fcmovnbe
cmp
ja
in
sbb
scas
inc
nop
insb
ljmp
mov
out
clc
push
push
cmp
insb
mov
test
dec
dec
lahf
sbb
sbb
cli
imul
pop
ror
lods
xchg
or
stc
test
adc
jno
mov
cmp
lcall
add
or
jle
data16
insb
adcl
dec
sub
pop
add
pop
xor
or
loope
dec
add
out
pop
add
movsb
daa
xor
pushf
pop
iret
pop
addr16
sarl
in
out
push
addr16
push
leave
jno
mov
hlt
mov
icebp
push
cltd
dec
mov
cmp
inc
adc
mov
inc
lretw
movsl
jb
mov
pop
pop
pop
cmp
and
add
add
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
adc
jmp
je,pt
cltd
mov
out
sub
mov
rcll
jle
push
jg
jle
xchg
sub
scas
test
sarl
adc
xchg
ret
pusha
aad
pop
jns
jg
push
loop
lahf
mov
lock
jecxz
flds
lds
mov
std
add
rcrb
cmp
rorl
jb
int3
jp
sbb
sub
icebp
clc
fbld
mov
and
cmpsb
lods
pusha
mov
cmp
sahf
mov
hlt
add
cli
mov
shl
xor
je
sbb
jae
data16
cmp
mov
mov
enter
push
jp
in
pop
mov
jb
jbe
pop
ljmp
push
sbb
jnp
inc
xchg
je
or
out
ret
mov
imul
sbb
push
sub
mov
xor
fisttps
mov
sub
push
pop
or
mov
addb
push
into
sbb
adc
push
adcl
ja
insl
nop
das
loopne
int
add
or
adc
mov
cmp
mov
and
fdivrs
insb
leave
or
jne
movsb
shufps
or
jl
adcb
xchg
mov
add
dec
gs
in
loope
mov
mov
and
call
test
in
cli
or
loop
and
xchg
or
lret
xchg
into
cwtl
arpl
inc
test
cmpsb
and
push
popa
adc
jns
xor
push
adc
mov
movsl
or
lea
insl
roll
xchg
mov
cmp
push
add
pop
adc
mov
pmaddwd
insl
push
sbb
and
cmp
xor
lock
xchg
and
clc
push
andl
mov
movzwl
xor
mov
mov
xor
movl
mov
addl
push
mov
xor
or
and
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
lock
xchg
aaa
insl
fs
xor
adc
add
push
jg
jle
add
sbb
int
cmpsb
sub
mov
jo
int3
sub
lea
push
and
and
or
jge
movl
lret
xor
jmp
xchg
pop
xor
push
sarl
addr16
add
ss
jae
cmp
xchg
pop
pop
xchg
stc
ret
shll
cmp
xchg
mov
jmp
mov
gs
adc
push
inc
or
xor
and
add
mov
xchg
xor
fnstenv
lds
and
cmpsl
push
push
xchg
test
test
clc
ds
sti
stc
pop
iret
movsb
aad
loopne
cmp
or
inc
mov
sarb
mov
cmp
mov
cmp
seto
sbb
or
test
jo
push
std
imul
or
adc
pop
js
incb
mov
cmp
lods
xor
dec
adc
out
stos
hlt
mov
cli
push
rclb
mov
scas
jle
subl
jno
fwait
dec
fimull
popa
push
xchg
mov
out
lahf
pop
and
js
stc
loope
xchg
push
es
adc
adc
out
nop
movsl
in
addb
jne
mov
mov
mov
inc
xchg
add
out
xchg
push
movsl
jbe
xchg
dec
in
cmpsl
mov
add
inc
je
test
and
fcomi
scas
mov
push
adc
mov
insl
movsl
jg
or
ds
jp
cs
jnp
adc
in
fnstsw
psllq
ret
mov
inc
mov
stos
and
cmp
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
jmp
insb
cmp
arpl
push
xor
popf
push
ss
jg
jle
xchg
hlt
mov
and
mov
or
mov
in
aas
cmpsl
scas
pop
clc
sbb
mov
stos
pop
mov
std
test
or
out
lea
imull
hlt
fstpt
pop
mov
dec
das
mov
pop
ret
movsl
cltd
sub
lods
dec
sbbl
ret
jns
dec
and
adc
test
adc
cmpb
stos
pushf
repz
out
add
inc
dec
hlt
es
inc
mov
ljmp
ret
push
pushw
jl
xor
out
out
lret
aam
fcoms
cmp
push
in
add
pop
push
jb
ret
mov
inc
push
cmpsb
cltd
outsb
fstpl
mov
jmp
add
es
clc
jns
call
cmp
xchg
mulb
nop
adc
jo
mov
int
xor
and
mov
add
fstpt
rorb
cmp
test
movsl
sub
inc
dec
ret
enter
aad
adc
dec
fs
fs
sbb
jb
sub
scas
adc
outsb
cs
mov
sub
cli
xor
jecxz
pop
inc
fcompl
inc
inc
arpl
cld
test
ret
cltd
aaa
push
test
out
sbb
jge
cmp
cmp
mov
adc
xchg
pop
push
loope
imul
insb
push
push
pop
lods
inc
push
push
ja
sti
imul
mov
dec
or
pop
push
pop
cmpsb
jne
and
add
int3
cmp
sbb
ljmp
mov
push
mov
outsb
push
fs
push
int
sbb
cmp
dec
cltd
pop
push
or
jno
mov
jge
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
lock
xor
jo
repnz
pop
mov
jo
or
jle
jg
jle
aad
stos
xchg
mov
and
push
bound
jecxz
sbb
fnstenv
mov
xchg
or
adcl
aam
pop
mov
mov
int3
cmc
inc
cmpsb
out
pop
mov
insb
scas
jl
std
pop
scas
xor
mov
push
lcall
add
mov
in
repnz
fadd
sub
jns
dec
xor
aam
jae
cmp
imul
mov
xchg
mov
int
lock
popf
sbb
out
pop
inc
popf
scas
outsl
data16
outsb
or
cmpsl
add
lahf
push
enter
adc
mov
in
mov
add
push
std
mov
mov
mov
shll
mov
adc
lret
mov
pop
mov
sub
mov
jbe
mov
addr16
or
sbb
push
lods
int3
subb
add
pop
cs
aad
mov
data16
dec
clc
add
dec
pop
jae
pop
pop
test
add
es
or
icebp
popf
adc
lea
test
or
cli
scas
hlt
testl
sbb
fdivl
add
push
jge
dec
popa
mov
mov
sub
jno
or
jge
movsl
xchg
sub
loopne
cmc
into
push
lods
jae
test
mov
inc
mov
cmp
sub
pop
lret
sub
cld
push
fs
inc
dec
insl
repnz
sub
pop
pop
xor
push
or
pop
aad
shr
outsl
inc
pop
sub
jae
ficoml
dec
mov
ret
cs
and
xor
fisubl
inc
add
add
mov
lret
nop
call
inc
ret
and
loope
mov
decb
cli
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
outsb
add
and
add
mov
mov
push
push
jg
jle
mov
push
xor
xor
loopne
repnz
push
les
mov
nop
or
lret
cmpsb
test
pop
ret
pop
int3
stos
adc
incb
out
adc
pushf
mov
call
shrl
jp
or
jle
negb
setns
adc
ja
mov
loopne
jl
push
lods
sub
sti
pusha
mov
idivb
pusha
jle
push
lret
adc
jle
jnp
jp
mov
stc
push
jb
fcompl
out
xchg
sti
push
loop
pop
dec
cwtl
addb
cmp
jno
ds
add
mov
inc
mov
jecxz
sub
lret
int
fsubrs
inc
xor
adc
pop
lret
xchg
xor
jl
in
push
into
test
les
add
mov
test
imul
rcll
xor
popf
mov
mov
out
scas
jle
js
cmp
jmp
lods
cwtl
test
xchg
adc
jle
mov
mov
cmp
pop
inc
and
lds
jmp
push
jnp
cmpsl
test
aaa
fs
lret
imul
scas
movsb
push
inc
and
in
enter
jns
inc
mov
pop
cltd
lcall
jl
pop
gs
daa
ret
scas
adc
xor
fs
and
push
adc
cmpsl
dec
flds
std
scas
push
push
or
and
sub
adc
lahf
lret
pop
pop
dec
cmp
ss
lcall
or
xchg
imul
mov
pusha
dec
cltd
jg
out
ficomps
or
cmp
decb
adc
jne
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
mov
mov
xor
mov
add
or
movzwl
mov
xor
mov
mov
movb
sub
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
mov
add
mov
movl
xor
sub
orl
mov
not
jmp
loop
fcoms
popf
mov
xchg
ret
mov
jg
jle
or
popa
push
or
enter
xor
or
fwait
cwtl
jl
daa
xor
add
fdivrs
nop
mov
push
cmpl
bound
add
sahf
jne
jge
xchg
lahf
sub
adc
push
jmp
jg
repz
addr16
test
xchg
mov
jbe
jle
jp
lods
lds
not
sbb
movsb
dec
inc
aaa
lea
jnp
push
adc
ret
jl
or
pop
mov
hlt
mov
lock
push
xchg
cld
mov
es
jmp
rcl
std
adc
hlt
fmull
lods
mov
lea
leave
xchg
addr16
insl
adc
xchg
aam
andb
mov
test
inc
sti
lods
push
shlb
dec
mov
dec
sbb
jo
inc
cmp
cmp
sti
push
push
mov
mov
setp
jg
test
mov
aad
stc
cmpl
sbb
movl
cli
cmp
jecxz
les
xor
popf
das
idivb
xor
mov
mov
pop
or
gs
dec
test
mov
pusha
add
sti
cld
shlb
inc
les
rorl
cmpl
mov
scas
inc
push
xchg
ret
jb
dec
das
adc
inc
mov
outsl
ss
leave
outsb
push
xchg
adc
out
imul
cmp
sub
movsb
pop
lock
daa
xor
sbb
jne
mov
jbe
jle
pop
cmc
and
push
mov
sub
out
push
lcall
pushf
clc
movl
or
mov
movzwl
adc
mov
subl
push
xor
andl
jmp
inc
jp
cs
mov
jno
pop
lcall
jle
jg
jle
lcall
cmp
push
adc
mov
xor
mov
mov
mov
pop
jne
leave
lods
pop
call
stos
pop
int
push
pushf
test
add
xchg
loop
pushf
ja
jecxz
in
mov
sbb
add
inc
aam
das
pop
push
fisubs
pop
punpcklbw
jg
or
pop
stc
xlat
push
outsb
ja
jb
rcrb
push
jle
imul
pop
sbb
sub
ss
and
int3
rorb
imulb
popf
enter
cs
pop
xchg
mov
cmpsb
bound
pop
pop
push
lcall
sub
push
sbb
bswap
fstl
pop
jne
pop
dec
mov
jmp
ss
xchg
cmp
xor
xchg
aam
scas
pop
sub
xor
stc
mov
dec
jge
scas
in
add
enter
push
sbb
ficoms
nop
sbb
mov
add
adc
xor
cmc
inc
mov
jnp
stc
out
mov
sbb
xchg
sub
les
mov
adc
mov
or
xor
and
neg
les
mov
xchg
jle
cld
repnz
dec
sbb
mov
insb
jle
xchg
xor
imull
icebp
in
xor
push
and
fstps
jp
iret
jo
push
nop
in
adc
sti
jge
inc
repz
insl
jg
cmp
adc
xor
add
lds
negl
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
mov
andl
es
xchg
lret
add
jle
jg
jle
lock
push
cmp
mov
and
ret
adc
inc
ret
cmpsb
xchg
ficomps
or
inc
fldenv
push
ss
push
hlt
add
push
dec
repnz
jecxz
pop
cltd
mov
adc
and
sbbl
xchg
and
rclb
inc
outsl
mov
outsb
sti
int
and
mov
inc
into
mov
inc
mov
stc
orl
inc
int3
sub
cmp
fidivl
in
mov
leave
popa
or
add
pop
loope
jg
inc
fwait
mov
int
daa
bound
cs
inc
nop
push
inc
mov
push
jl
bound
push
cmp
push
mov
sbb
mov
xchg
jge
jge
lock
pushf
mov
imul
mov
lret
enter
test
mov
lods
mov
lcall
mov
dec
xchg
int3
loop
mov
ficomps
test
dec
scas
in
movsb
push
cmp
mov
mov
sbb
push
push
xchg
mov
adc
in
jl
pop
inc
int
outsb
add
or
fcoms
es
iret
fcomip
sub
mov
mov
ret
dec
idiv
negl
test
cmp
add
ljmp
cmp
push
push
sbb
shlb
sub
adc
jmp
or
outsb
fcmovnb
sub
add
js
out
inc
lds
popa
mov
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
jmp
jo
add
mov
adc
mov
jle
scas
jg
jle
xchg
inc
daa
pop
mov
xchg
cmp
push
or
ret
jb
out
cwtl
scas
pusha
lea
sarb
bound
xor
lcall
loopne
out
rorb
out
mov
sbb
lods
icebp
jmp
maxps
and
sbb
mov
lret
dec
rolb
aas
insb
jae
out
cmpb
popa
mov
mov
xor
stc
je
lcall
jg
insb
mov
jbe
fldt
test
push
mov
outsl
cltd
sub
mov
dec
ret
lcall
insl
jb
pop
out
call
jbe
ror
fmull
mov
fst
dec
int3
out
sti
sub
loopne
sbb
xchg
xor
sub
jae
shlb
scas
stc
push
test
mov
dec
imul
pop
lods
ss
sti
pop
mov
xchg
xchg
push
cmpsb
pop
pop
ss
inc
mov
lods
mov
mov
movsl
xor
ret
cmpsb
inc
inc
push
dec
pop
ja
add
mov
mov
and
icebp
lock
rorb
aaa
sahf
jl
sahf
shll
xor
or
xchg
fimull
call
jo
in
daa
xor
dec
pop
mov
into
hlt
inc
insb
adc
nop
add
and
cli
push
sub
mov
int
shrl
test
xchg
stos
adc
xor
jecxz
xchg
and
cld
shl
dec
ror
pop
mov
jb
pop
movsl
aas
shl
movsb
inc
push
cmpsl
push
and
in
sbb
mov
xor
add
jmp
jl
mov
mov
jge
fldl
call
adc
scas
jg
jle
lods
push
mov
mov
lcall
mov
fdivrs
enter
out
test
ds
test
idivb
out
push
inc
arpl
xor
int
xor
cmp
fcoms
iret
xor
outsb
adc
popa
adc
xor
cltd
test
jmp
adc
test
pop
mov
insb
jnp
add
mov
jae
pop
or
repnz
arpl
cltd
daa
mov
xchg
mov
and
inc
pop
and
add
hlt
hlt
inc
cli
or
xor
push
in
dec
cwtl
notb
push
ror
mov
popa
push
dec
xchg
fwait
sbb
xor
and
or
sbb
dec
mov
lods
test
cs
loop
push
fbld
arpl
mov
aad
add
gs
cld
es
jge
push
rcrb
sub
dec
testl
jns
sub
or
movsb
iret
inc
and
xchg
loope
mov
popf
adc
dec
push
lahf
sti
xor
aaa
inc
icebp
mov
insb
mov
fildl
test
xchg
lahf
and
sbb
xor
xor
adcl
int3
xor
out
cmp
inc
addr16
bound
in
les
jae
jo
xor
out
sbb
jne
or
jl
push
sbb
dec
ret
adc
jg
repz
push
call
test
mov
sub
test
mov
cli
mov
clc
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
lret
int3
push
push
mov
push
mov
adc
jle
scas
jg
jle
daa
fld
mov
mov
pop
and
loopne
xlat
jg
scas
rclb
jns,pn
pop
cmc
icebp
push
mov
push
mov
mov
leave
add
stc
ljmp
aas
cmpsl
inc
mov
mov
sarl
and
jne
test
pop
jmp
mov
xor
jmp
lods
push
ljmp
mov
cmp
rcr
mov
inc
push
sbb
test
call
pop
mov
aas
cmc
sub
push
xchg
xchg
xorl
arpl
add
inc
out
pop
sub
bswap
mov
adc
in
or
movsl
out
fs
sub
imul
sub
mov
sub
stos
push
imul
jl
push
cmp
xchg
push
jne
cmpl
cmp
dec
cwtl
scas
pop
pop
cmp
xor
scas
popa
or
hlt
aas
je
xlat
push
pusha
mov
lahf
dec
dec
test
imul
das
mov
imul
scas
inc
movsl
jne
nop
cmp
inc
push
sbb
push
sbb
out
test
sbb
jmp
or
jg
sbb
sub
push
sub
insl
stos
lods
fcmovbe
es
adc
arpl
mov
inc
loope
adc
jb
xchg
out
in
bound
inc
push
adc
cmp
stos
mov
dec
fildll
sbb
pop
lahf
leave
int
addr16
fimull
test
inc
call
jmp
scas
or
xor
mov
dec
pusha
ret
jle
scas
jg
jle
orb
fwait
cmp
mov
jno
jns
jl
ds
xor
outsb
rclb
mov
xor
hlt
mov
xchg
and
lds
daa
and
aad
add
xchg
ficompl
lock
into
mov
add
inc
clc
mov
mov
scas
addr16
and
lea
dec
mov
xor
pop
adc
jle
ret
test
outsb
mov
ljmp
testb
sub
ret
dec
int3
inc
outsl
ljmpw
adc
nop
mov
pop
ret
adcl
push
pop
or
ljmp
loop
fsubs
mov
mov
pop
data16
inc
movsb
orb
ss
or
in
xor
test
cltd
fnstsw
xor
sti
out
jae
push
and
cmp
leave
mov
cs
xlat
lods
ret
enter
loopne
fldl
xchg
addr16
cs
add
test
inc
cmp
add
jns
shrb
xchg
outsb
dec
add
addr16
jle
sti
repz
jmp
aad
adc
insl
jge
dec
addr16
jb
adc
jl
ret
jae
mov
insb
adc
icebp
add
inc
outsl
cmp
xorb
sbb
jmp
rorl
dec
xor
xor
lcall
je
dec
or
inc
mov
push
es
aas
popf
or
inc
call
inc
in
addl
jmp
mov
inc
push
push
jb
andl
scas
jg
jle
nop
mov
mov
test
mov
push
cld
push
lret
xchg
subb
imul
popa
out
lock
xchg
mov
pop
mov
inc
mov
in
lock
aaa
clc
int3
mov
push
popf
fcmovnbe
sbb
movsb
popf
push
sti
xchg
aad
jecxz
mov
xor
xor
scas
sub
lahf
clc
or
je
icebp
loop
jl
or
inc
test
lock
loopne
sub
pushf
enter
gs
enter
fdivl
add
jmp
cmp
pushf
fsts
jae
xor
out
into
and
jno
outsl
push
fsubrl
dec
popa
shll
jecxz
cmp
mov
jns
out
jo
fidivrs
addr16
xor
stc
test
inc
sbb
fistl
addl
sar
sub
addb
aaa
lds
dec
fbstp
imul
cmp
outsb
sbb
mulb
mov
cld
xchg
cmpsb
sub
decl
mov
cltd
addr16
xchg
jl
sar
iret
test
xor
sbbb
rol
jl
cmp
xor
push
cltd
in
lods
daa
mov
push
xchg
lock
xor
dec
adc
cltd
in
int
aam
aaa
pop
push
push
inc
add
lahf
dec
aam
mov
mov
leave
lret
push
adcl
int3
clc
nop
mov
add
mov
cmp
lcall
mov
iret
mov
inc
lock
xor
jmp
pop
sub
dec
insl
dec
imul
and
inc
movsb
lods
mov
sbb
scas
jg
jle
aam
nop
std
enter
sub
shrb
stos
repnz
test
lcall
mov
gs
xchg
imul
repz
and
outsb
faddl
cli
arpl
loop
xor
call
xor
adc
mov
cli
fiaddl
or
jmp
inc
mov
xchg
in
mov
xchg
sub
pop
jge
adc
jo
mov
push
js
pusha
lods
dec
lret
inc
daa
dec
test
movsl
imul
adcb
ret
addr16
out
or
data16
bound
data16
xor
test
fisttpll
dec
adc
pushf
mov
inc
outsl
jmp
mov
aam
scas
jp
pop
mov
add
xchg
repz
xor
hlt
push
pop
push
push
loope
adc
push
js
mov
jo
pusha
sbb
push
and
xchg
pop
imul
stos
cmp
xchg
pushl
adc
and
dec
cmp
out
inc
imul
mov
add
sub
pop
jno
in
aad
shl
xchg
sbb
push
push
repz
add
orb
pop
iret
inc
dec
push
mov
test
pushf
repnz
lods
and
in
enter
mov
ret
push
pushf
lods
std
push
fsubs
in
mov
fisubrl
and
sbb
adc
push
add
mov
and
mov
pop
jnp
mov
adc
jo
cmp
sub
lods
inc
mov
xchg
lret
mov
or
sbb
push
mov
ficomps
inc
jnp
add
xor
xor
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
push
movl
jmp
lcall
mov
ja
pop
and
push
push
cltd
jg
jle
aam
or
bound
sti
insb
jle
lds
je
mov
jb
mov
pusha
xorb
addr16
scas
in
aaa
bound
mov
cltd
push
enter
aas
inc
cmp
jge
mov
fdivrs
daa
roll
mov
or
ds
aaa
es
sub
das
outsl
imul
pusha
and
jmp
fdivrs
in
js
jecxz
lock
add
sub
out
popf
xchg
addr16
jecxz
jb
adcl
pop
inc
push
outsl
movsb
popa
fisubs
push
jae
movb
lahf
mov
shr
cmp
dec
adc
xchg
rol
adc
and
sar
mov
loope
insb
push
push
aaa
outsl
xor
mov
push
popf
cmc
jbe
js
mov
jmp
jp
out
je
xchg
xchg
mov
and
outsl
ja
sarl
pop
rep
fildll
add
sarb
ds
xor
ja
push
ficompl
loope
xor
or
jl
movsl
jae
push
jo
xchg
pop
movsl
stc
xchg
lahf
lahf
or
out
cmpsb
pushf
push
adc
fsts
sbb
mov
mov
pop
adc
daa
jae
xor
xor
sarb
ret
mov
push
add
jno
nop
mov
add
xlat
jmp
jge
inc
shlb
adc
jl
dec
inc
movl
mov
push
orl
mov
and
mov
orl
xor
addl
xor
mov
orl
add
add
subl
imul
mov
mov
cmp
jne
mov
mov
xorl
xor
andl
xor
xorl
jmp
jbe
cmpsl
adc
sahf
es
mov
sbb
cltd
jg
jle
popf
mov
lret
jge
lods
and
mov
pusha
push
jge
nop
js
push
or
push
pop
fadds
add
sbb
cmc
jmp
cmpsl
cld
adc
test
adc
repnz
mov
lret
insl
loopne
ds
bound
cmp
ja
ret
mov
cmp
test
fwait
stos
unpckhps
sub
sub
cmp
hlt
inc
or
push
xchg
pushf
sbb
das
cmp
fistpll
or
xor
pop
in
call
call
and
jmp
jmp
cmpsl
dec
or
lock
mov
mov
iret
inc
inc
jle
lret
sbb
pop
imul
stc
push
ret
nop
daa
bound
rcrl
push
popa
xor
adc
xor
repnz
sbb
scas
scas
add
sub
xor
gs
fsub
fwait
lret
hlt
cmpb
fildl
scas
adc
aam
stc
dec
inc
call
mov
cmp
adc
push
imul
ljmp
pop
fimuls
fisttpl
pop
adc
loopne
int
adc
mov
sbb
mov
cmpb
add
lcall
test
int
cmp
push
enter
lret
and
adc
iret
ja
out
les
jns
cmovp
and
sbb
out
divb
adc
call
loopne
scas
or
roll
imul
movl
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
movl
mov
mov
mov
sbbl
xor
subl
add
jmp
fnstenv
loop
jb
jno
in
jne
in
mov
xchg
jl
jle
scas
fidivl
aad
jnp
lcall
lcall
cmc
sbb
mov
push
xchg
adc
push
or
into
jl
fmull
xorl
sub
cmpsl
xchg
mov
jns
insb
out
add
in
or
push
lods
inc
mov
lods
inc
fbstp
mov
sbb
cltd
cmc
mov
pop
aam
movl
pop
sub
adc
add
cli
mov
dec
stos
aaa
or
cmp
push
push
mov
and
cwtl
in
dec
adcb
push
jne
iret
adc
dec
cmp
pop
stos
stc
in
push
xchg
and
pop
out
mov
ret
lahf
stos
outsl
pop
movsb
cld
pop
loopne
add
sbb
mov
mov
pushf
mov
imul
mov
xor
ss
push
in
shlb
add
aas
ret
popa
or
add
and
loope
inc
ret
jb
xor
and
popf
mov
mov
mov
xor
inc
xchg
adc
pop
cli
mov
cmp
cltd
push
xor
cltd
lods
sbb
test
add
cli
mov
jae
jnp
cmpsl
xchg
icebp
sub
sub
cmc
rorl
xor
jb
adc
stc
in
orb
inc
insb
dec
or
sub
inc
das
and
adc
cmp
std
mov
mov
stc
mov
push
fdivs
aaa
xor
pop
cmp
pusha
and
in
dec
jg
jno
cmc
sahf
insb
xor
scas
in
lods
call
scas
enter
add
dec
dec
test
fwait
shl
popf
jne
mov
int
lcall
xchg
gs
loopne
inc
xor
xchg
ds
int
push
mov
test
and
fmul
in
scas
mov
insb
xor
fadds
cwtl
mov
pop
iret
ds
jle
pop
mov
xchg
shll
cmp
out
mov
mov
mov
cmp
ljmp
mov
mov
inc
test
ss
mov
mov
ds
xchg
lret
testb
or
inc
lret
xor
adc
loopne
ljmp
xchg
fdivr
andl
pop
xlat
gs
xor
pop
fwait
dec
inc
jbe
inc
imul
sbb
inc
xchg
scas
in
pop
add
cmp
loop
push
jmp
in
stos
test
sbb
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
xor
xor
push
mov
addl
mov
sbbl
add
addl
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
jmp
xor
loope
loope
icebp
pop
mov
mov
mov
jle
jl
jle
jmp
cmp
mov
stc
jb
mov
adc
sti
dec
lcall
xchg
and
mov
out
cmc
stos
mov
rcl
dec
cmpsb
sub
cmpsl
pop
xchg
es
push
pop
fnstsw
mov
iret
xchg
in
push
xchg
es
push
sarl
je
rcll
xor
push
gs
mov
into
push
out
enter
jne
cmp
mov
shl
jne
ljmp
inc
ret
ret
leave
movsb
mov
loop
ret
sbb
sub
ja
xchg
adc
sbb
addr16
add
xchg
push
jae
aas
adc
mov
shlb
dec
push
stos
jmp
pop
mov
lock
mov
loope
mov
fmull
xor
adc
pop
sub
mov
test
jmp
icebp
das
ficoml
mov
cltd
cs
fisubrl
jae
sbb
inc
xchg
dec
fistl
aad
ljmp
scas
cmp
cli
and
lods
iret
mulb
pop
jns
push
cmp
shlb
pop
mov
stos
test
addr16
lods
stos
cltd
pop
in
std
ficoml
aad
or
adc
aad
pop
cmpsb
test
out
iret
movsl
scas
mov
push
cmp
mov
jae
les
inc
mov
cmp
js
dec
xchg
xor
out
jge
gs
mov
sbbl
scas
cmp
adc
and
xor
mov
cmp
pop
js
and
push
repz
jno
loope
rclb
lret
cmovb
pop
out
icebp
jp
into
popf
mov
sub
cmp
xchg
aad
add
lret
and
and
and
jecxz
mov
xor
mov
lahf
outsb
sub
jb
test
sub
add
shrb
jae
enter
movl
inc
movsl
loope
sub
add
pop
clc
popf
inc
jb
and
add
fcompl
inc
inc
sbb
xchg
xchg
fs
fstl
aad
jle
call
mov
inc
push
fnsave
jbe
pop
outsb
mov
and
sub
pop
mov
pop
mov
fidivs
stc
cmp
or
nop
sti
push
dec
stc
das
mov
mov
and
imul
rcrl
ss
and
int
and
ret
or
inc
jne
inc
mov
mov
aam
rorl
sub
icebp
mov
and
or
mov
pop
ret
push
mov
jmp
pop
iret
xchg
cmp
jno
das
insb
xchg
mov
out
jle
outsb
jg
jle
jo
subb
sub
mov
and
or
and
push
clc
out
andb
inc
cmovbe
xchg
out
xchg
addr16
add
sarl
xchg
mov
rorl
sbb
and
lods
xlat
xor
mov
cwtl
adc
in
fiadds
mov
daa
jae
jge
insl
adc
bound
aam
shr
dec
lret
scas
divb
notb
test
imul
pushf
inc
frstor
push
push
pop
adc
scas
cmpxchg
dec
push
ret
dec
loope
push
mov
dec
sti
push
leave
add
xchg
out
aam
lods
jnp
cmp
adc
sbb
mov
adc
cli
sbb
mov
or
cmp
out
imul
cmc
fwait
movsb
inc
arpl
mov
pop
jae
in
es
je
xchg
pushl
dec
adcb
int
cmp
dec
mov
inc
xor
movsb
sbb
aas
enter
minps
or
pusha
cmp
jae
bound
neg
out
mov
out
and
cmp
add
stos
dec
jb
mov
mov
push
sbb
xchg
xchg
push
jmp
fwait
sbb
dec
jmp
add
xor
inc
add
jo
shrl
test
repnz
out
cmp
push
cmp
lock
add
add
cmp
push
imul
and
push
bound
sar
mov
dec
sub
and
shrb
adc
mov
jns
cli
mov
fdivl
mov
mov
mov
ret
outsb
jg
push
iret
cmc
pop
dec
shrl
pop
sub
sbb
sub
add
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
mov
movl
mov
mov
sub
and
mov
movzwl
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
jmp
inc
jo
xor
jo
jo
shlb
outsb
clc
bound
jle,pn
outsb
jg
jle
jnp
imul
rclb
movsl
and
xchg
push
adc
punpckhbw
aad
mov
adc
push
aad
shll
stos
pushf
push
xor
stos
inc
movsb
shrb
dec
repnz
xchg
imul
cmp
int3
pop
aad
inc
push
or
push
push
in
jle
sbb
cmp
and
sub
pop
int
pop
je
jmp
mov
xor
call
jnp
jne
repz
cmpsb
cmp
lret
lret
divl
sbb
dec
das
add
test
fbstp
push
add
lcall
cmp
inc
lahf
hlt
stos
mov
mov
push
xor
adc
cmp
sarl
or
pop
cmp
popl
dec
mov
and
cmp
pop
out
outsb
jmp
int
adc
pop
jne
inc
arpl
mov
leave
mov
mov
andb
inc
cmp
inc
scas
inc
mov
mov
pop
pop
arpl
fiadds
lods
jb
jmp
mov
ret
mov
pop
add
jb
out
push
and
int3
clc
inc
lds
inc
lods
ret
lret
lcall
jl
cwtl
std
ljmp
mov
inc
pop
push
in
nop
or
pop
std
sub
in
sub
mov
mov
pop
flds
jecxz
sahf
in
sbb
popf
daa
lea
es
pop
sub
mov
sbb
scas
jnp
lret
lcall
sbb
sahf
faddl
jno
test
mov
lcall
bound
int3
pop
ret
xor
out
cltd
mov
cmp
add
mov
lock
lds
pop
xor
add
mov
mov
mov
mov
mov
mov
jmp
sarl
push
mov
icebp
mov
jg
cmc
aam
sub
jle
jg
jle
cmc
and
mov
rcrl
sub
dec
cs
mov
xchg
mov
pop
sahf
scas
movsl
xor
xor
clc
cmc
mov
lods
inc
call
inc
and
mov
mov
out
negb
popa
hlt
xchg
mov
push
cmp
mov
adc
imul
fisubrs
mov
mov
and
dec
aam
add
mov
pop
dec
or
cmp
mov
out
inc
int3
es
orl
or
aad
mov
lret
lods
add
cmpsl
or
push
xchg
mov
subb
sbb
fs
aas
sahf
test
cmp
repz
fisubrl
sarb
fs
pop
lret
icebp
jecxz
mov
call
std
inc
and
fisttpll
push
movb
lods
addr16
dec
lods
cwtl
xorl
or
lcall
orb
sbb
sar
add
negl
push
ss
je
sti
push
inc
rcr
jle
xchg
shrb
inc
push
fistpl
out
sti
sti
push
subb
fsubs
push
icebp
dec
sub
sub
xchg
out
xor
mov
add
rorl
popf
dec
imul
sbb
fbstp
jo
mov
fdivs
jg
dec
icebp
sbb
jle
jle
jmp
sarb
mov
stc
imul
mov
push
cwtl
cmp
xlat
bound
xor
mov
xchg
int
roll
add
push
lret
cs
add
clc
testb
push
lods
jbe
cmpsb
xlat
in
add
pop
mov
mov
ret
xchg
mov
shlb
out
ds
pushl
inc
or
adc
and
adc
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
mov
mov
mov
mov
movl
movl
mov
sbb
mov
xorl
push
push
push
orl
mov
xor
mov
add
orl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
jmp
jl
inc
movsb
jecxz
popa
xor
push
nop
fnsave
sub
push
jg
jle
xchg
push
sbb
push
cmpsl
subl
lock
in
sbb
andb
push
test
inc
jecxz
cs
mov
loopne
cs
in
push
aam
pop
adc
mov
add
loopne
xchg
repnz
test
stc
cmpsb
push
push
cmc
test
popa
adc
sub
fwait
mov
rclb
adc
dec
pop
test
mov
push
sahf
or
aam
bound
sbb
xor
ja
sbb
sbb
push
test
lret
call
cmp
sbb
push
mov
xchg
cmp
sub
dec
in
inc
mov
push
icebp
mov
push
ljmp
pushf
jae
mov
mov
jne
dec
push
adcl
push
inc
mov
mov
movsl
test
sub
add
and
lods
or
imul
xchg
pop
imul
sbb
jmp
insb
xor
movsb
jne
pop
mov
ret
dec
outsb
cmp
mov
cmp
mov
lahf
dec
cmp
or
adc
repz
xor
inc
mov
sti
jnp
lods
pop
sbb
repnz
xchg
subb
mov
dec
dec
int
sbb
cltd
ss
dec
ss
mov
inc
xchg
rcrb
mov
cmc
mov
out
cmpsl
mov
jle
inc
bound
clc
gs
jnp
add
jb
push
mov
aad
dec
sti
clc
push
movsl
inc
jmp
sub
mov
adcl
out
or
push
rorl
push
enter
arpl
or
nop
jmp
into
je
jle
out
outsl
leave
movl
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
neg
movl
mov
or
movl
mov
andl
xor
add
mov
sbbl
movl
sub
movb
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
mov
mov
sbbl
xor
sbbl
add
incl
push
xor
xor
xor
mov
subl
xor
orl
add
push
or
mov
orl
xor
notl
add
adcl
push
sbbl
lea
push
decl
pushl
subl
pushl
andl
call
test
je
lea
sbbl
push
movzbl
sbb
mov
jmp
xor
sbb
repnz
insl
in
pop
or
jg
jle
fisttps
cwtl
mov
adc
xorl
adcb
mov
xchg
mov
cmpsl
pushf
xchg
aas
mov
cwtl
add
dec
xor
xchg
cmpsl
cmpsl
cwtl
ds
mov
cmpsb
xchg
or
push
mov
out
dec
jbe
repz
fcomp
lea
lds
das
jbe
sub
leave
fwait
cmc
add
mov
sahf
jge
leave
testl
repnz
ret
mov
jnp
sbb
bound
adc
and
xchg
cld
mov
cwtl
test
pop
bound
adc
add
sub
sbb
dec
insl
and
sbb
gs
jle
shlb
mov
push
cs
gs
xor
std
mov
cmc
pop
mov
pop
andl
xchg
int
scas
aad
repnz
pop
scas
test
push
popf
mov
push
sub
popf
jmp
lods
sar
dec
dec
cmp
shrb
mov
and
lcall
mov
in
jg
inc
ss
xor
aad
les
pop
aam
int3
push
cmpsl
cmpsb
jecxz
sub
inc
arpl
outsl
je
fidivrs
into
gs
out
pop
add
out
mov
aad
sub
push
repnz
stc
sub
pushf
mov
les
adc
xor
push
jb
sub
orb
int3
xchg
sbb
popf
pop
sti
inc
aaa
push
push
pop
mov
enter
inc
rcrl
rcl
pop
pop
add
cmpsl
pop
mov
call
leave
cmpsb
push
sub
push
dec
scas
test
std
cmpsl
fdivl
mov
mov
stc
sarl
outsl
pop
push
ds
fimuls
add
push
mov
add
push
jmp
jne
adc
flds
mov
xor
sub
push
jg
jle
fcoms
popf
insb
je
pop
add
mov
adc
jne
cmpsl
push
xor
shl
lods
pop
outsb
je
scas
lods
test
xor
es
or
or
popa
sbb
pop
out
pushf
inc
outsl
insl
xor
rcl
push
adc
xor
xchg
jnp
int3
lock
xchg
mulb
mov
mov
sub
data16
scas
ds
dec
and
mov
mov
xchg
stos
or
popa
fwait
pop
test
ret
inc
dec
mov
int
in
out
xchg
xchg
jae
mov
jl
daa
push
pushf
sub
into
daa
pushf
shll
jecxz
mov
repnz
sbb
pop
outsb
ret
dec
rcll
add
inc
daa
pop
pop
lcall
cmpsl
out
imul
jl
gs
fwait
cmpsb
jo
mov
cmp
mov
xchg
jmp
mov
data16
aad
xor
xor
dec
dec
shrl
insb
mov
dec
dec
iret
sub
cld
mov
fwait
das
shrl
adc
sub
sbb
in
jl
dec
push
lods
sti
sti
mov
cmc
aaa
leave
jl
addl
in
push
mov
lods
inc
lods
mov
cmp
aas
bound
fs
imul
mov
xchg
loope
mov
arpl
add
xlat
cmp
or
pop
fcmovu
pop
cmp
sarb
pop
xor
lahf
mov
out
or
jp
dec
sbb
xchg
or
aas
or
xchg
scas
mov
mov
movsb
js
mov
or
xor
or
mov
js
and
into
pop
pusha
ret
sti
imul
fcoml
mov
pushl
call
mov
cmpl
lea
jmp
xchg
leave
rorl
mov
std
push
sbb
aaa
jle
push
jg
jle
stos
xchg
loope
jmp
test
lock
shlb
loope
lods
jns
into
sbb
xor
or
dec
test
mov
stos
sbb
call
sbb
mov
pop
xlat
and
repz
pop
mov
mov
stos
aad
bound
push
ds
mov
mov
push
out
pop
dec
and
icebp
addr16
dec
jno
stos
dec
enter
fwait
mov
push
gs
dec
mov
adc
lret
cmp
cwtl
mov
cmc
lahf
enter
mov
mov
lea
iret
push
daa
mov
dec
mov
pop
ss
popf
es
pop
mov
add
or
cs
mov
push
sub
mov
int
gs
pop
repz
repnz
or
xor
adc
mov
scas
sarl
jmp
jl
fiadds
lea
jmp
lahf
sbb
loope
and
inc
loope
ljmp
mov
aaa
ja
or
add
sbb
pusha
repz
imulb
sub
mov
and
mov
mov
push
mov
jnp
or
or
outsb
jle
stc
mov
and
lods
or
rorb
pop
scas
js
jle
push
aam
mov
iret
inc
incl
xchg
out
rolb
shll
ja
ss
fwait
arpl
adc
stc
mov
inc
sahf
pop
push
add
cmp
or
mov
push
jae
xchg
lahf
orb
adc
daa
les
bound
into
shll
loopne
test
repz
add
hlt
pushf
dec
mov
inc
and
sti
add
lcall
jle
adc
std
and
or
jnp
ficomps
cmp
jne
sti
pop
insb
xor
addl
and
test
push
or
stc
fcomip
arpl
mov
cmp
outsl
dec
stos
stos
loopne
dec
mov
out
test
xor
mov
add
in
dec
sub
add
test
mov
dec
fst
leave
cmpsl
mov
aam
lcall
in
push
sbb
mov
imul
rol
lcall
scas
push
popa
rolb
dec
lret
out
jl
and
hlt
jmp
xchg
mov
fisttps
add
mov
jle
pop
popa
mov
gs
leave
or
movsl
lret
jnp
xor
dec
push
mov
sub
es
es
inc
xchg
push
jne
ror
jp
dec
add
jecxz
dec
cmp
cmpsl
pushf
jl
and
sub
inc
jnp
jle
stos
jmp
nop
fwait
hlt
push
mov
ss
push
inc
inc
loop
lock
test
ficomps
flds
add
sub
sub
push
enter
nop
cmpsl
dec
popa
and
cwtl
push
jne
and
hlt
push
inc
mov
xchg
jl
xchg
push
inc
mov
out
mov
bound
ret
or
pusha
jno
es
pusha
cli
cmp
inc
data16
cltd
xchg
ds
fs
sbb
insl
sub
pop
cmpsl
pop
fsts
jno
cmpl
cmc
sub
lds
pop
movsl
fsts
stos
stc
adc
fimuls
inc
or
cmp
and
cmp
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
jmp
cmp
loope
jno
dec
add
or
jle
push
jg
jle
adc
inc
stc
popa
fxam
adc
and
and
int3
sbb
push
lds
jnp
ficoml
mov
testl
inc
sahf
hlt
cld
sbb
jbe
push
adc
dec
aad
push
mov
mov
sbb
iret
jae
aas
xchg
rclb
sub
stos
xchg
fisubrs
rcll
lcall
mov
sbb
scas
loopne
pop
out
gs
inc
inc
sub
mov
add
loopne
outsl
cmp
pusha
adc
movsb
pop
hlt
stc
jno
pop
pop
dec
lods
cmp
repnz
ds
adc
enter
dec
int
inc
aas
sub
sarl
popf
ret
scas
pop
cli
test
and
fldl
negb
add
and
fbld
xor
cmp
pusha
adc
fists
ffree
push
xor
or
push
adc
movsl
jb
leave
sub
shrb
push
std
ja
rorb
and
mov
lods
push
lahf
inc
or
stos
cmp
xlat
sub
mov
push
cmp
loop
inc
insb
testl
out
jle
adc
jb
adc
jnp
movsb
push
xor
out
mov
push
mov
out
cli
scas
lods
popf
test
xchg
pop
fisttpll
inc
xchg
ret
add
pop
sahf
push
mov
lret
xor
cmpb
cmc
add
inc
mov
loop
inc
jg
or
jge
out
imul
in
pop
sbb
stc
fidivrs
add
sbbb
aad
mov
pop
jp
jp
sub
sub
fcompl
push
lock
add
jne
pushl
jmp
push
mov
dec
sub
enter
cmp
xor
push
jg
jle
hlt
mov
shrb
out
mov
movsl
faddl
les
xor
mov
popf
cmp
loopne
shl
popa
fidivs
push
mov
xor
jno
shlb
sub
mov
mov
mov
xchg
mov
popw
test
adc
rcl
or
dec
inc
jbe
push
aaa
push
push
sub
jne
lcall
adcl
test
aaa
loop
sarl
or
imul
loopne
sub
or
les
xor
test
lds
mov
lahf
mov
outsb
mov
xor
cmp
sbb
pop
sarb
and
jo
test
sbb
frstor
das
xor
add
stc
and
aam
xchg
scas
in
xor
xorb
lcall
mov
dec
scas
mov
pop
ljmp
dec
adc
mov
movsb
pushf
lret
cmpsb
mov
push
hlt
add
mov
xlat
sub
mov
ret
in
push
sub
hlt
rclb
pop
popaw
xor
adcl
bound
in
add
lds
mov
xor
orb
imul
mov
jle
imul
sti
je
sbb
loope
jno
adc
inc
push
push
mov
mov
out
mov
add
lock
mov
push
arpl
push
rorl
sbb
mov
out
pop
xchg
or
sub
aas
fcmovnb
dec
das
mov
gs
pusha
test
mov
xchg
sbb
cmpsl
xchg
add
xlat
jle
out
inc
or
test
incl
add
add
inc
in
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
jmp
fwait
imul
shlb
jae
sbb
sub
jle
push
jg
jle
mov
lods
pslld
out
imul
scas
jbe
sub
test
xlat
xchg
sbb
repz
mov
dec
jg
inc
or
xor
movsl
lea
or
pop
and
or
mov
dec
xchg
lcall
mov
das
cmp
pop
mov
cmpsl
out
ds
rorb
insb
xor
les
mov
add
inc
cwtl
sahf
aad
in
mov
sbb
cli
adc
jne
mov
cmp
push
ja
data16
cmp
repz
mov
mov
xor
divps
sbb
stos
jbe
jae
pop
dec
pop
inc
aaa
push
cmpb
fcomi
mov
fs
jnp
sub
cwtl
push
dec
and
aaa
pop
cs
out
dec
push
adc
in
adc
stos
dec
scas
std
aad
rclb
dec
cs
adc
dec
mov
mov
js
mov
mov
lods
push
sarb
add
xor
cs
dec
jmp
std
mov
mov
adc
jnp
shll
xor
arpl
mov
fadd
cmp
mov
sti
clc
ja
xchg
mov
dec
sarb
inc
jmp
out
shlb
in
ret
out
and
sub
test
scas
popa
movsl
call
add
adc
mov
inc
addb
or
jp
push
lret
xor
ds
mov
cltd
subb
mov
sub
pop
jle
jecxz
jge
fcomi
loop
aad
loope
andl
popf
xchg
mov
sbb
pop
jl
clc
mov
in
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
jmp
xchg
lods
sbb
mov
ljmp
push
cmp
jle
clc
rorb
sub
sahf
pop
inc
or
neg
mov
inc
imul
in
pop
dec
cmp
fmuls
cmpsb
inc
jg
outsl
sbb
imul
loop
adc
shl
jmp
jmp
rorb
sbb
cmpsl
out
arpl
sbb
lods
shll
cmp
cmp
cmp
shrl
cld
into
sbb
ds
lret
fldcw
loope
mov
inc
iret
mov
xor
rol
or
mov
mov
dec
aam
xchg
mov
mov
sarl
jae
jnp
stc
in
dec
xchg
mov
pusha
push
rcll
cs
fsts
jmp
scas
scas
scas
enter
xor
add
dec
popa
mov
imul
out
xchg
dec
or
pop
mov
sub
cmp
sbb
xchg
jns
dec
dec
sub
xor
stos
push
outsb
cli
aam
push
sub
sbb
push
int
cli
ds
and
pop
pop
push
xchg
mov
inc
dec
mov
stc
dec
imul
movsl
leave
add
cmp
lods
jecxz
pop
shrb
cmpsb
mov
movsl
lods
dec
xchg
jns
and
push
sbb
fistpll
int3
inc
jae
sbb
jle
push
inc
outsb
mov
inc
mov
push
test
cmp
and
jl
cltd
mov
stc
adc
test
xchg
xchg
pop
out
add
push
and
aad
and
sahf
xchg
cmpsb
mov
pop
ja
inc
or
xchg
arpl
adc
jle
call
mov
mov
add
pop
pop
pop
leave
ret
push
mov
sub
push
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movzbl
xor
mov
mov
and
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jb
or
movl
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
sub
movl
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
push
call
jmp
xor
xor
xor
add
mov
movzwl
and
mov
jmp
cld
ss
je
inc
mov
mov
pop
fisubl
jle
mov
jle
xor
pop
dec
mov
fisubrs
and
jl
mov
inc
in
mov
emms
scas
in
rcll
jb
pop
lods
jg
cmc
dec
add
inc
adc
stc
inc
sub
out
repz
dec
mov
mov
sbb
sub
pop
xchg
addr16
add
in
insb
ljmp
lods
adc
mov
sub
aad
sbb
xchg
das
mov
test
push
repz
std
jns
xchg
icebp
mov
leave
jnp
mov
test
fcmovu
stos
imul
inc
subb
cs
aaa
insb
ds
fsubr
sbb
push
pop
cmp
add
xor
jb
mov
stc
imul
or
and
mov
cltd
pop
in
or
out
fcompl
sbb
nop
mov
lock
shll
xor
xchg
sbb
out
mov
sub
adc
lea
jle
mov
jbe
cmpsl
das
cltd
sbb
pop
je
scas
push
sub
add
hlt
add
dec
adc
xchg
mov
mov
and
cmp
push
jge
popa
cmpl
adcb
ja
mov
pushf
jge
gs
or
jg
aam
or
lea
sbb
cli
or
fldcw
cli
hlt
mov
in
ss
fimuls
pop
movsb
mov
pop
cmpsl
sti
mov
push
push
push
pop
mov
pop
add
add
add
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
jmp
xchg
sahf
icebp
jno
arpl
mov
jle
mov
jle
and
fs
subb
stos
or
shll
movsb
fldl
push
lock
cld
pop
outsl
leave
and
dec
cli
int3
mov
sub
and
xor
push
mov
jbe
mov
cld
hlt
and
sub
je
cmpsl
leave
sbb
jo
ss
into
clc
mov
cmp
movsl
clc
sbb
adcb
jecxz
shll
mov
fiaddl
mov
lcall
add
jl
dec
or
xchg
push
iret
and
testb
adc
sbb
mov
and
cltd
mov
xchg
shrl
fdivs
push
push
cltd
in
mov
sub
xor
out
out
stos
ret
jl
xor
fisubs
test
cmp
bound
sub
jp
ss
lret
jae
jb
adc
test
mov
and
xchg
in
xor
sbb
xlat
xorb
in
inc
and
fidivrs
push
pop
lods
fidivl
arpl
out
sub
dec
or
lret
and
in
dec
jl
mov
jmp
or
fdivl
lcall
jb
push
repz
jmp
lea
xchg
jp
mov
test
cld
fldl
insl
jg
fistps
int
mov
sub
insb
rclb
aad
mov
push
or
cmp
xor
add
xor
jmp
sub
fnstsw
fucomp
sub
cmp
fildll
or
jg
jle
mov
xchg
sbb
popa
pop
cmp
and
mov
mov
ret
loopne
or
scas
jnp
pop
mov
seto
int3
push
jbe
mov
mov
xor
cwtl
lods
pop
aad
aam
popf
cmp
sub
sbb
or
repz
ret
into
std
jns
adc
mov
pop
mov
roll
sub
es
dec
jo
sti
mov
in
pop
imul
push
xor
movsb
sti
imul
pop
fmull
mov
movsb
xchg
lcall
ljmp
outsb
gs
inc
xor
les
jg
jns
sbb
mov
lock
fisttps
adc
mov
jmp
mov
dec
js
aaa
or
loop
sar
xchg
ljmp
rorl
push
lea
inc
sti
xlat
mov
dec
loopne
fwait
xchg
pop
les
movsl
sub
mov
in
out
push
cwtl
xchg
imul
dec
gs
subb
outsl
sub
ss
faddl
or
out
lahf
out
jmp
mov
dec
cmc
add
dec
pop
push
movsb
inc
xor
and
lret
fisttpll
xlat
movsl
cwtl
mov
sbb
inc
pop
jne
shll
ja
dec
push
in
mov
arpl
leave
ret
loope
cld
in
ret
adc
jecxz
or
lds
push
or
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
movl
adc
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
push
pushl
push
push
pushl
push
pushl
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
movl
mov
xor
add
or
jmp
mov
icebp
inc
jno
mov
cltd
hlt
cltd
jle
mov
jle
sbb
adc
xchg
loopne
lea
push
stc
clc
das
shll
mov
dec
repz
sbb
xor
cmp
add
ror
imul
rolb
mov
mov
fs
mov
aad
mov
shll
test
cmp
push
les
mov
stc
fsubrs
in
xchg
aas
pop
rol
mov
imul
jne
sub
cs
add
int
and
pop
cmp
aas
fisttpll
add
xchg
mov
lea
cld
in
ret
mov
and
cmc
jl
lea
push
scas
push
shll
adc
lret
pop
stos
sti
pop
fprem1
push
faddl
call
sub
jmp
mov
into
or
pushf
scas
ret
repnz
xor
ljmp
cli
mov
lret
mov
pop
pop
jmp
cmpsl
cli
jmp
lea
pusha
push
icebp
dec
cmp
outsb
cli
cltd
scas
stos
cmpsb
push
ja
dec
fmulp
pop
shll
inc
test
or
imul
or
call
sub
idivb
xchg
and
out
add
out
pushf
into
pop
sbb
mov
mov
inc
ret
scas
ficoml
jnp
mov
fldt
cmpsb
das
nop
stc
adc
lds
pop
mov
adc
xor
mov
orl
add
movl
cmp
movl
jmp
notl
push
jb
out
or
std
shlb
jle
adc
in
xchg
lds
es
in
ljmp
pop
cmpsl
insb
and
addl
aaa
mov
rolb
push
add
dec
mov
popa
mov
fiaddl
or
mov
mov
popl
rorl
xor
popa
ss
popf
add
and
fs
and
lret
int3
popa
je
sub
shll
ljmp
aad
push
xchg
inc
push
iret
aas
mov
inc
mul
mov
push
popa
lret
loop
leave
in
and
imull
xchg
jecxz
imul
scas
test
xor
pop
jle
testl
push
cmp
xor
sbb
or
push
adc
sub
mov
int
fs
int3
loop
gs
pop
out
jl
mov
push
ficomps
mov
enter
jbe
fchs
sti
or
or
or
movsl
cli
add
cltd
mov
fsts
ljmp
mov
scas
int
pop
pop
fists
loopne
pop
loopne
inc
mov
add
arpl
jg
jge
enter
adc
repz
adc
out
xchg
sahf
jg
pushf
outsb
mov
push
sub
add
shrl
pop
lcall
shrb
mov
lret
nop
cltd
sbb
lds
loope
or
jbe
popf
sbb
jbe
ds
ret
sar
adc
xlat
je
mov
pop
mov
jmp
add
push
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
sub
jmp
or
icebp
jno
out
jns
dec
aas
xor
mov
jle
daa
inc
imul
icebp
insb
std
ljmp
add
sbb
into
stc
sub
xor
movsl
movsb
fimuls
mov
jl
leave
outsb
cli
lahf
scas
pop
ss
pop
add
push
mov
cmpsb
scas
insw
xor
fiadds
jge
pop
iret
mov
in
push
mov
rolb
scas
mov
aaa
sub
jp
push
in
push
sti
jp
jecxz
xchg
sub
push
and
push
ljmp
sub
mov
xor
xchg
xor
dec
out
iret
repz
test
arpl
lds
iret
mov
pop
lea
imul
arpl
pop
adc
adc
mov
in
idivb
mov
pop
mov
into
mov
dec
dec
std
mov
cmp
adc
std
xor
cltd
jge,pt
xlat
int
pop
imul
jnp
or
mov
inc
cmpsl
add
mov
dec
mov
loopne
mov
fadds
js
add
pop
mov
cmc
shll
lahf
add
adc
outsb
addr16
mov
stc
adc
add
xchg
mov
or
std
call
lahf
stc
hlt
scas
mov
xchg
adc
jnp
sub
into
mov
int
inc
out
inc
out
stos
loop
jb
mov
addr16
inc
not
mov
adcl
xor
add
cmp
movl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
inc
mov
mov
xor
xor
sub
add
add
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
imul
mov
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
ret
movsl
shll
dec
clc
adc
push
ffree
jle
mov
jle
rolb
cmp
and
mov
xor
jle
test
xchg
dec
aas
sbb
lods
push
xchg
dec
outsl
insb
xchg
mov
inc
pushl
cmp
cmp
test
dec
sub
mov
pop
xor
pusha
int3
mov
int3
js
lret
sub
dec
xchg
inc
mov
stos
je
cs
clc
cmp
in
sub
add
pop
mov
cmp
push
mov
cmpsb
xchg
push
sbb
lods
imul
fildll
ss
test
sub
pop
push
or
fisubrs
pop
fistl
xchg
or
icebp
jae
scas
add
jg
xchg
mov
ret
pop
push
in
call
mov
shlb
sub
js
fwait
jno
mov
pop
adc
int3
sbb
dec
mov
xchg
aad
int
sub
insl
sbb
fnstenv
pop
inc
jmp
orb
mov
add
out
or
or
cmc
sub
cmp
inc
cmpsl
and
popf
dec
xor
sub
cmp
lods
sub
adc
repz
xor
clc
fwait
lods
jns
adc
test
lahf
lods
pop
rcrl
adc
sbb
jno
jecxz
movb
nop
mov
int
into
and
call
pushf
std
nop
xchg
aas
mov
add
pop
lock
cmp
ja
mov
jmp
mov
mov
jmp
mov
dec
jno
les
jb
sarl
jg
jle
les
xchg
test
test
mov
ljmp
in
push
int
cmp
aad
cmpsb
push
test
inc
test
aas
mov
xor
and
movaps
push
inc
mov
divb
pop
sub
stc
ja
sbb
dec
and
insb
dec
jge
divl
fnstenv
movsl
jb
ds
adc
or
fmull
mov
cld
sbb
int
cmpsl
stc
mov
js
addr16
ds
push
lret
cmc
xchg
cld
jmp
and
in
iret
popa
dec
bound
fistpl
sbb
inc
sbb
lds
test
adc
xchg
push
cmpl
in
dec
mov
or
mov
sub
sbb
xor
jnp
mov
into
insb
out
add
and
out
stos
jae
addr16
adcb
xor
insb
mov
aad
push
inc
push
jnp
xchg
pop
add
aaa
cld
into
in
sbb
ss
lods
mov
sbb
add
into
push
sahf
inc
ficompl
add
pop
sti
inc
jnp
faddl
stc
jno
xor
dec
inc
or
jg
or
mov
xor
and
mov
inc
fwait
insl
ret
in
jmp
sti
pop
cmp
in
inc
mov
lds
rcrl
push
scas
andb
ljmp
push
adc
mov
vsqrtpd
flds
and
jae
iretw
pop
pusha
mov
fdivrs
shlb
clc
add
add
imul
mov
mov
sub
cmp
jmp
imul
mov
jno
loopne
cmp
test
jle
mov
jle
jmp
leave
or
mov
mov
jns
mov
popa
icebp
jl
push
mov
jecxz
sub
xchg
adc
ds
inc
mov
xor
pop
jge
inc
test
lock
mov
mov
cwtl
daa
andb
mov
dec
je
lds
loopne
sbb
cmp
pop
out
les
push
sahf
fisttpll
cmp
outsl
mov
mov
cmp
and
add
and
imul
mov
push
out
js
stos
cltd
jb
addr16
cltd
dec
and
push
mov
xchg
ljmp
jg
adc
out
pop
inc
inc
mov
mov
loop
or
sbb
push
lock
popa
movsl
pop
call
pop
cmp
lods
loopne
mov
fdivs
push
lahf
adc
stc
mov
adc
or
xchg
and
out
mov
fldt
push
pushl
outsb
and
lds
mov
aad
mov
sbb
lea
mov
outsl
insl
ret
sbb
movsl
adc
mov
xor
mov
pop
ret
loop
loopne
cmp
inc
pop
mov
pushl
mov
or
dec
jbe
and
sub
lock
or
push
scas
add
out
mov
jp
add
xchg
fldcw
aam
lahf
adc
clc
ljmp
xchg
add
add
or
add
cld
xor
xor
jmp
in
test
call
fstpt
gs
int
jle
jg
jle
leave
loopne
mov
int
fdivl
into
xchg
xchg
ja
sbb
shlb
xorl
push
movsl
jo
jmp
aas
inc
mov
xor
movsb
fwait
dec
scas
jno
xor
data16
push
aad
mov
mov
loopne
nop
les
imul
mov
xor
and
sbb
cmp
scas
out
sbb
mulb
roll
arpl
dec
ljmp
filds
andl
jns
sub
jb
lds
add
mov
outsl
inc
mov
das
int3
pop
or
daa
inc
testl
cmp
mov
xor
je
pop
int3
push
lods
mov
mov
inc
mov
ja
pushf
jb
xchg
int3
aaa
or
cmpb
and
fnstcw
and
xchg
shll
cmpsb
repz
and
shll
mov
sbb
insb
sbb
jge
leave
add
test
inc
push
cmpsl
aas
cmc
std
jg
fiadds
xor
push
mov
imulb
cli
inc
idivb
add
sbb
inc
jb
mov
cmc
pop
out
mov
ja
xchg
adc
pusha
adcb
addl
xchg
or
dec
dec
sbb
dec
ret
ret
jno
jb
addr16
sub
push
repnz
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
jmp
push
mov
mov
insb
mov
lret
mov
jle
pop
es
stc
adc
and
roll
add
movsl
sti
push
jb
aas
movsl
test
push
aam
into
dec
loopne
push
fdivp
jbe
roll
cmc
lods
arpl
cmp
sub
test
push
fmul
xchg
inc
repz
xor
mov
cld
xchg
stc
jb
cmpsl
fdivrs
sti
xor
or
sahf
add
jnp
mov
js
pop
addr16
jmp
xor
stos
xchg
jno
xor
out
cltd
test
push
ljmp
out
nop
mov
mov
cmp
insb
push
jno
pop
cmc
xorl
push
sti
push
pop
mov
xor
call
adc
jae
in
adc
data16
push
cmpl
ss
and
ljmp
sub
inc
xchg
xor
icebp
sub
xchg
inc
xor
aaa
push
mov
in
out
scas
mov
ret
pop
into
xor
dec
add
cmp
adc
enter
inc
int
sub
push
add
or
lea
fstpl
cmpsb
push
fwait
js
fldcw
mov
jnp
pop
fwait
aam
dec
xchg
mov
lret
mov
jge
test
inc
stos
push
mov
push
mov
mov
sbb
gs
jmp
dec
adc
add
push
push
jl
ljmp
enter
jg
jle
cmpsb
lahf
jae
loopne
dec
sub
out
out
ror
lock
sti
sub
popf
mov
loop
adc
popa
xlat
scas
gs
xchg
xor
inc
and
mov
adc
and
and
mov
imull
pop
data16
test
cli
bound
mov
and
jbe
push
xchg
arpl
outsl
adc
adc
or
dec
ss
ja
popa
aam
and
test
add
jp
pop
jne
dec
mov
mov
lds
pop
in
sbbl
xor
das
int3
xchg
sub
dec
notl
lcall
out
pushf
xchg
push
push
pusha
in
inc
mov
cli
xchg
lret
cmp
adc
mov
stos
inc
sarl
movsb
movsb
xor
jmp
les
clc
mov
dec
cmp
push
pop
je
test
std
push
mov
in
mov
les
xchg
cmpsl
test
mov
js
sub
adc
adc
in
push
test
pop
pop
les
sbb
cmp
lret
cmp
jbe
jno
xchg
mov
andl
jo
xchg
jae
ss
stos
testl
cmp
inc
add
push
lds
and
and
sbb
andb
cmpsb
pop
xor
or
xor
and
mov
loope
sub
push
shlb
imul
mov
mov
sub
jmp
and
xor
mov
leave
jle
mov
jle
and
mov
add
pop
call
push
repnz
jns
enter
or
lock
std
mov
or
add
lods
inc
mov
adc
mov
dec
pop
das
jnp
test
ficoms
sti
lahf
dec
loop
int3
inc
test
ret
xor
out
leave
movsb
and
lret
and
pusha
mov
inc
cmp
pop
mov
jo
rorl
inc
adc
pop
ror
pop
push
jns
outsb
adc
gs
pop
mov
repz
xor
in
bound
outsl
jae
xchg
jns
mov
aad
jge
daa
dec
adc
bound
dec
adc
xchg
mov
or
cmp
sub
inc
aas
scas
cmp
sub
xchg
ja
adc
in
clc
pop
subl
and
test
pusha
cmpsl
push
les
xchg
ja
and
insl
lock
adc
sub
cwtl
cmpl
mov
push
jg
sbb
rorb
in
inc
outsb
adc
in
in
stc
adc
mov
mov
imul
inc
repz
lcall
jo
pop
jp
clc
movsb
ficomps
push
sub
xlat
mov
dec
pop
enter
cltd
sbb
lds
stos
xchg
inc
sbb
inc
sbbb
or
in
inc
xorb
shll
fimull
xchg
add
add
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
jmp
add
jne
mov
jbe
loope
jle
mov
jle
mov
out
test
push
xor
cwtl
mov
mov
or
add
xor
scas
sbb
faddp
loopne
iret
mov
js
bound
jno
mov
jle
dec
fimuls
loopne
lods
push
pop
cltd
cmc
jle
dec
dec
nop
add
mov
out
inc
dec
push
pop
mov
jne
divl
sub
jae
cmp
orb
ss
in
cwtl
cmpsl
jno
jo
test
roll
lock
mov
add
pop
push
mov
add
xlat
xor
inc
imul
add
in
add
mov
mov
sub
mov
or
jl
pop
outsb
or
mov
mov
dec
fsubrl
adc
sub
js
xorb
push
cmpsl
add
int3
and
mov
scas
sarl
ja
sub
out
push
inc
mov
outsl
jae
insb
adc
cmp
aad
and
cmp
mov
lret
aad
jle
push
and
xor
out
iret
sub
loop
push
rol
mov
xor
push
jne
test
arpl
jge
xchg
sbb
mov
lahf
add
fisttpll
test
sbb
cmpsl
mov
hlt
push
inc
sub
cmpsl
or
adc
xchg
fnsetpm(287
jne
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
jmp
mov
je
jmp
into
movsl
int3
enter
jle
jg
jle
jmp
je
add
sbb
arpl
movsl
lods
xchg
sub
ljmp
imulb
data16
xor
in
sbbl
mov
mov
inc
mov
jo
and
jnp
xor
add
or
arpl
xor
dec
iret
hlt
pop
or
mov
repnz
sub
fdivrs
loopw
mov
out
pop
cvttps2pi
add
push
adc
mov
jnp
sbb
mov
pop
inc
add
movsl
pushf
ret
inc
xchg
out
xchg
xlat
adc
ss
insl
mov
mov
sub
stc
pop
pop
test
push
or
sahf
mov
popa
out
test
cltd
daa
aaa
mov
sub
add
push
out
rcr
mov
test
cmp
daa
xchg
imul
xchg
ret
mov
cmc
mov
int
aas
test
push
fcmovne
out
cwtl
cmpb
mov
in
bound
jecxz
dec
mov
cmpsl
jecxz
jecxz
add
dec
movsl
add
hlt
nop
sub
push
sbb
andl
mov
jecxz
arpl
jb
nop
aas
call
add
sub
inc
out
lods
outsl
sub
popa
pop
pop
dec
cmc
dec
pushf
imul
stc
rcll
dec
or
xchg
repz
mov
arpl
sub
xor
add
push
jae
cmc
gs
jne
sub
mov
je
xor
add
imul
mov
xor
sub
jmp
decl
xor
xchg
lea
jmp
push
add
jg
jle
pop
negl
pushf
xor
es
sbbb
adc
arpl
lret
ljmp
aad
rcll
mull
fs
sbb
out
loop
loope
lock
lds
pop
ret
repz
lock
inc
movsl
fidivs
scas
std
jg
pusha
sbbl
pop
pop
cmp
ja
inc
icebp
mov
add
dec
lea
lcall
pop
mov
jle
jo
lret
cwtl
mulb
cmpsb
lret
mov
pop
mov
or
and
lock
data16
adc
push
mov
jg
xchg
cltd
jb
jge
cs
out
popa
inc
sub
stc
adc
es
mov
jg
and
jb
sbb
scas
mov
in
fwait
jg
xchg
shlb
je
ljmp
pop
jle
adcb
or
mov
daa
scas
outsb
imul
cmpsb
push
repnz
ss
jmp
push
push
xchg
add
cmpb
sti
dec
jle
jl
outsb
cmp
pushf
jae
cmp
xchg
mov
out
ret
scas
sub
cmp
dec
lcall
lods
xlat
adc
push
lock
mov
mov
lock
in
inc
hlt
bound
leave
in
iret
lret
adc
jmp
out
dec
ljmp
mov
fwait
jb
add
cli
jbe
mov
mov
xor
add
imul
mov
xor
jmp
and
inc
xor
ret
das
inc
cltd
dec
ret
and
jg
jle
pusha
mov
push
cwtl
jg
jmp
out
xor
shrl
xchg
repnz
cmp
mov
in
inc
dec
push
mov
or
mov
inc
inc
sbb
pop
dec
arpl
cli
nop
cmpsb
shrl
call
in
jmp
jb
nop
inc
add
jl
lret
rcrl
in
in
push
and
or
mov
or
mov
mov
dec
mov
mov
jmp
sub
sti
lahf
loopne
push
add
pop
popf
int3
mov
je
lods
inc
cld
ss
dec
js
dec
and
adc
shl
dec
ds
std
sbb
sbb
mov
in
mov
pop
cmp
repnz
es
sahf
xor
mov
cmc
lds
rorb
mov
in
aam
daa
aaa
js
mov
cltd
add
adc
lds
or
mov
popf
cmpsb
test
scas
mov
adc
je
test
out
pushf
je
pop
frstor
sub
add
leave
stos
fildl
in
or
xor
aam
lret
stc
xchg
cmpsl
push
loop
jnp
inc
and
jmp
cmp
lahf
imul
inc
push
push
adcb
pop
cmp
sub
in
dec
fmull
mov
xor
fcomi
push
stc
das
clc
jecxz
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
jmp
adc
das
test
xor
mov
mov
sarl
mov
jle
jge
loopne
pop
stos
cmp
test
mov
push
sub
int3
cmc
jb
mov
xchg
xor
mov
rcr
pushf
std
dec
xchg
add
mov
fiaddl
push
dec
cmp
sbb
ffreep
sti
push
mov
lock
rolb
and
mov
adc
xor
mov
imul
loope
mov
cmpsb
negl
xorb
inc
jnp
and
aam
mulb
mov
sub
mov
pop
adc
sahf
aas
push
dec
sbb
in
adc
pop
mov
loop
push
popa
subb
xchg
test
mov
jae
jo
inc
out
stc
out
xor
jns
cmc
jns
adc
push
add
inc
test
cld
lds
call
mov
mov
lcall
stc
or
push
sub
and
stos
sbb
mov
repz
lcall
mov
enter
inc
xchg
cli
lret
popf
fwait
js
nop
sarb
pop
push
cmpsl
fwait
push
xor
nop
bound
and
cwtl
outsb
enter
inc
adc
mov
jecxz
ja
xchg
shr
adc
cwtl
scas
or
inc
imul
lds
xchg
cmp
jl
fmul
test
insl
pop
pop
jae
scas
leave
mov
lods
aam
push
bound
mov
sub
jge
imul
int
pushf
mov
inc
fs
pop
aaa
or
cld
xor
shr
lods
add
add
addr16
jne
mov
mov
push
sbb
addr16
jle
mov
jle
aaa
mov
jge
insb
cwtl
and
add
cld
insl
mov
add
rcrb
shl
cmpsl
mov
jl
clc
adc
mov
push
in
cmpsl
out
loop
int
and
test
jge
mov
pop
mov
cmp
insl
cltd
inc
ljmp
and
sub
cld
push
inc
xchg
ds
test
xchg
xor
push
push
imul
push
cltd
lcall
push
out
lret
add
rorb
les
and
les
jbe
mov
dec
lret
mov
inc
mov
imul
pop
hlt
cmpb
gs
mov
inc
xchg
test
sub
jno
add
repz
jmp
xor
cmpsl
flds
arpl
fdivrp
inc
ret
sbb
pop
pop
cmpsl
mov
cmp
xor
sbb
aad
mov
fisubl
shrl
xchg
xor
je
fsubrl
int3
nop
and
push
push
out
sub
rclb
mov
sub
xchg
pop
mov
add
xchg
cmp
ficoml
sbb
sbb
push
aad
sahf
outsb
ljmp
inc
int3
lods
push
es
fbstp
inc
jle
dec
sbb
pushf
stc
jle
test
je
scas
xchg
jmp
imul
push
addr16
out
jl
push
mov
cmp
enter
pusha
shl
in
xlat
out
nop
dec
int3
test
push
jge
lret
out
into
fdivs
push
sbb
rorl
scas
sarl
xlat
jbe
pop
pop
leave
ret
push
mov
sub
call
andl
xor
movl
cmp
movl
jne
cmp
movl
jne
push
call
sbbl
push
orl
call
adcl
test
je
movl
push
xorl
push
orl
call
push
mov
mov
and
mov
movl
adc
lea
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
subl
mov
lea
mov
mov
sbb
mov
mov
mov
mov
mov
and
mov
orl
push
add
mov
adcl
xor
orl
push
neg
mov
subl
add
movl
mov
mov
mov
cmp
mov
movl
je
and
mov
addl
xor
add
orl
imul
mov
jmp
push
call
adcl
test
je
xor
movl
jmp
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
add
mov
mov
adc
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
notl
mov
xor
add
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
xor
addl
add
movl
cmp
movl
jne
sbbl
pushl
pushl
sbbl
call
movl
cmpl
je
cmpl
jne
push
pushl
push
call
mov
dec
mov
jmp
mov
mov
sub
add
mov
mov
xorl
mov
sub
mov
mov
xor
mov
mov
add
mov
mov
mov
movl
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
pushl
push
push
push
call
cmpl
jb
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jb
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
xorl
push
push
mov
xor
xor
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
or
jmp
pop
push
lods
sahf
mov
push
push
lret
iret
pop
fdivrl
jge,pn
jle
mov
lret
and
into
lcall
and
frstor
add
mov
pop
fs
push
leave
dec
lret
pop
in
jmp
dec
fldt
cmp
inc
cmpsb
cmp
cmp
push
js,pn
dec
mov
jecxz
inc
jecxz
mov
add
push
outsb
lock
ljmp
pop
push
test
push
imul
cmp
push
or
aam
imul
mov
test
cmp
adc
xchg
out
fldenv
adcl
clc
cs
clc
outsb
push
xor
cmp
cmp
xor
and
loope
fbld
fs
cmpl
jne
test
leave
cmp
sarb
push
mov
stc
push
inc
push
or
sbbb
loop
idivb
vmwrite
jg
pop
xor
push
xor
ljmp
cld
int3
pusha
fs
addr16
inc
int
ljmp
leave
aad
pop
add
adc
adc
jmp
test
xor
stos
cltd
std
jno
pop
xchg
sbb
mov
inc
outsb
popf
popa
les
cmp
xchg
adc
outsb
movsb
mov
push
add
pop
ja
in
add
xor
insl
enter
repz
pop
jbe
inc
xor
push
push
xchg
dec
xchg
sbb
adcb
lret
jl
insl
cmp
lcall
or
aas
pop
pop
jne
sarl
mov
pop
hlt
fcmove
lock
mov
xchg
test
cmc
mov
mov
dec
inc
out
xor
xor
popa
pop
stc
leave
sub
std
daa
jmp
push
xor
fcmovnb
xor
sub
mov
sub
push
add
mov
or
cltd
pop
call
jbe
jmp
mov
jbe
and
inc
dec
loope
xchg
movsb
inc
das
or
xlat
test
mov
aaa
mov
popf
arpl
std
cs
sbb
fbld
push
ljmp
out
movsl
in
adc
pushf
xchg
cmp
cld
and
je
subb
and
popa
mov
je
xor
cld
scas
push
shrl
push
and
popf
and
movsb
jne
fs
xchg
sub
shrb
xchg
out
pop
inc
mov
and
aam
xchg
mov
jmp
data16
nop
popf
cmpsl
xlat
aam
xchg
push
es
sti
int
jmp
aad
loopne
mov
ret
je
mov
in
das
stos
test
out
pop
ficoml
pop
mov
adc
call
rclb
std
js
sub
add
aas
and
xchg
jp
ret
stc
iret
nop
out
je
cmp
jns
fucomi
pop
push
test
dec
cmp
adc
aam
or
xchg
adc
scas
lds
jl
outsb
sbb
ret
test
dec
rclb
and
test
mov
icebp
leave
clc
add
mov
add
mov
mov
addl
lea
sub
mov
movzwl
and
mov
addl
mov
jmp
scas
mov
push
jb
es
or
jle
jge,pn
jle
hlt
add
test
loope
andl
push
inc
cmp
mov
icebp
jnp
xchg
mov
pop
xchg
lcall
sub
in
fistl
mov
cli
pop
clc
loop
lock
pop
xor
loop
les
push
jo
mov
push
mov
mov
push
mov
cmp
cmp
jo
jnp
ret
arpl
lods
shll
jae
out
xor
mov
ja
xchg
into
les
jb
cwtl
jns
xchg
fsubrl
movsl
jmp
xchg
add
frstor
imull
inc
lret
or
jle
mov
pop
fcoml
sub
icebp
rorb
das
push
and
ret
push
sbb
fldpi
jne
lods
jo
mov
jae
in
shr
and
and
fiadds
scas
lcall
lods
adc
pop
js
stos
aas
shll
jmp
call
sbb
fsts
sub
orl
ja
insb
inc
nop
xchg
inc
popa
jns
loope
adc
aas
or
and
cli
out
js
or
pop
pop
and
dec
ja
adc
roll
and
jb
mov
pushl
pop
pop
pushf
fwait
xor
test
or
ja
test
in
add
adc
inc
push
mov
jbe
test
ljmp
mov
aas
cli
or
test
cmp
mov
sub
testb
push
fnsave
fwait
ret
fildl
inc
jnp
mov
vorpd
scas
mov
add
sub
stos
sbb
cmp
dec
pop
push
call
or
test
cmp
fidivl
mov
inc
adc
jle
xchg
lcall
dec
lds
sub
jne
movsl
pop
add
outsb
cli
cmp
mov
int
xchg
push
scas
loopne
sub
lods
lret
gs
clc
adc
test
addr16
dec
imull
push
dec
sub
sahf
int
mov
xchg
out
test
inc
fcomps
mov
jl
sbb
test
lcall
add
cmc
popf
and
test
test
inc
imul
pushf
xor
push
cmp
or
or
ret
push
add
scas
mov
filds
jno
das
dec
mov
std
stc
push
popf
pop
stos
cmp
sub
pop
outsb
pop
jecxz
sub
xchg
pop
pop
fdivl
aam
mov
out
in
clc
xchg
pop
out
add
pusha
lahf
xchg
cmp
mov
lea
jne
pop
lock
mov
daa
inc
xchg
adcb
push
mov
pop
xchg
pop
sbb
fnsave
xor
xchg
shrb
adc
adc
cwtl
xor
aas
dec
cmc
rorb
inc
cmp
cmp
jb
outsb
stos
stc
mov
sub
andb
sbb
lea
xor
jmp
push
or
int3
popa
hlt
jno
jae
and
and
jle
jge,pn
jle
jl
fdivl
jmp
and
mov
repz
and
test
mov
push
ret
mov
aad
into
push
inc
mov
mov
xchg
lods
xchg
sbb
sbb
clc
add
mov
pop
sub
and
or
ret
movsb
jge
rolb
cwtl
pop
xchg
test
cmp
scas
or
aad
loopne
adc
lret
stos
dec
dec
lock
fwait
add
xchg
cmp
add
cmp
xchg
cmpsl
push
clc
dec
jmp
sbb
mov
push
push
stos
and
mov
cltd
push
cltd
testl
sbb
sub
jae
pushf
push
leave
sub
fldcw
cmp
and
and
cli
or
rolb
inc
popf
das
ds
add
add
push
sub
mov
popa
push
test
push
mov
rcrl
popf
push
jne
arpl
pop
insl
mov
in
xor
in
inc
push
insl
sbb
subb
ret
push
cmp
negb
add
cli
mov
mov
and
repnz
dec
xor
movsl
push
scas
push
mov
pop
fs
ja
mov
cmpsl
jbe
flds
cmpsb
mov
ds
push
dec
cmc
cmp
imul
sub
sbb
or
cmp
inc
add
xor
push
xor
mov
jmp
leave
push
push
aaa
addl
jno
movsb
sbb
gs
loopne
cmpsl
pop
dec
jns
and
mov
dec
or
repz
enter
outsl
mov
fwait
repz
int3
add
fdivs
jno
xor
cltd
pop
or
out
icebp
jl
clc
mov
call
adc
in
fwait
sub
ds
jmp
test
les
jp
in
pop
imul
jg
insb
pushf
out
cwtl
jne
mov
loope
in
jnp
jb
push
aaa
mov
test
cmc
and
and
add
out
inc
sub
rorl
gs
sbb
std
xor
jo
lds
mov
cld
aad
clc
dec
pop
cli
push
dec
xchg
fdivr
int
mov
adc
fsub
xchg
pop
je
mov
out
jns
or
inc
lods
fisubrl
pop
pop
fstpt
fs
aas
inc
xlat
mov
add
xchg
pop
push
mov
ja
addb
out
mov
fwait
adc
cmp
jno,pn
test
andl
jle
inc
cmpsb
das
je
fistl
sarb
cld
and
mov
aam
mov
in
sbb
bound
ret
or
loope
pop
cmp
faddl
and
mov
adcb
inc
insl
xor
out
add
int
push
fcoml
sahf
arpl
xor
cli
sub
add
add
mov
test
mov
pop
mov
movl
add
fisttpl
sbb
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
movl
sub
jmp
shrb
mov
xor
jne
outsl
nop
fs
loop
jle
jge
jle
stos
ja
sbb
cld
rcll
frstor
adc
in
ret
jmp
inc
inc
stc
es
inc
loope
xchg
xor
push
jge
stos
pmulhw
and
movsl
xor
pushf
frstor
or
in
or
pop
jle
cmpsb
test
jo
repnz
mov
hlt
mov
pop
fists
mov
ss
insl
loope
rorl
jno
push
fwait
das
int3
xor
das
into
adc
icebp
stos
push
out
test
jbe
mov
adc
mov
jbe
mov
repnz
ljmp
insl
or
mov
mov
loope
in
jle
jle
cmp
xorl
push
jge
add
dec
mul
repnz
adc
faddl
and
sahf
inc
xor
cmpsb
mov
xchg
ret
lock
stc
stc
xor
andl
cmpsb
add
sub
xchg
cmpsl
cmp
aaa
push
fwait
mov
aas
enter
mov
imul
andb
decb
mov
add
push
mov
out
push
inc
imul
fdivrp
repz
roll
push
pop
mov
lods
shll
fmul
fwait
cmp
or
test
lahf
popf
xchg
je
push
addr16
push
das
sbb
in
add
in
insb
movsb
call
mov
daa
out
arpl
mov
pusha
mov
sub
xchg
aaa
fs
adc
or
dec
in
cmc
popf
je
lahf
sbb
aam
jb
aam
lock
adc
pop
dec
xor
call
inc
test
mov
xchg
test
xchg
jl
cwtl
adcb
outsl
mov
mov
cld
and
jbe
stos
into
fdivrl
push
fnsave
pop
mov
adc
mov
lahf
mov
jo
lret
lock
push
mov
push
sbb
and
sti
push
xor
loop
popa
lcall
cmp
lds
mov
sbb
xchg
jmp
sub
cwtl
xchg
loop
movsb
xchg
std
arpl
aaa
push
mov
js
fucomp
or
out
jb
cmp
int3
inc
pusha
call
jecxz
mov
jmp
shl
inc
mov
in
or
mov
daa
pop
jle
roll
popf
inc
shl
pop
xchg
gs
dec
jns
jp
cmp
adc
out
sub
mov
vcvtpd2psy
lahf
cwtl
dec
cmpsb
mov
or
push
shrb
mov
add
mov
inc
cmp
xor
mov
xor
xor
sbb
add
and
push
mov
jmp
shll
movsb
push
adc
neg
movsl
sub
adc
mov
aam
roll
xchg
shrl
mov
xchg
idivl
dec
js
rcll
cmpsl
scas
imul
or
or
ds
sub
mov
int
aaa
ficoms
gs
inc
call
xor
adc
add
jmp
add
add
or
sbb
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
xor
addl
add
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
fsubrl
or
pop
or
pushf
cltd
loope
jle
jge
jle
bound
xchg
arpl
xchg
jb
imul
xor
sahf
lods
rcrl
adc
lret
stos
or
xchg
mov
or
insb
pop
mov
js
add
inc
enter
inc
out
clc
addb
daa
mov
xchg
mov
lods
shll
xlat
stos
js
push
xor
imul
sbb
mov
push
fs
jl
clc
push
xor
int3
sbb
mov
inc
mov
or
cmp
mov
outsl
lods
pop
or
ljmp
orb
mov
cmp
out
int
sub
cmp
or
sbb
imul
pop
jae
sahf
xchg
ds
jmp
pop
mov
in
mov
xor
inc
mov
add
mov
call
aad
fidivs
in
enter
xor
rorl
xorb
pop
mov
aas
jle
push
xor
ja
dec
in
pop
fcomps
insb
lock
pop
and
mov
shrb
mov
or
pop
mov
ss
or
fmull
cmp
add
xor
lahf
imul
sbb
sub
in
fs
cmp
insl
shr
lds
and
mov
movsb
test
cmp
jne
repnz
lea
mov
ljmp
daa
dec
xor
insb
push
xor
jns
sub
fucomip
xor
repz
insb
inc
adc
adc
push
xchg
add
xchg
popa
fstpl
jno
xor
fiadds
mov
loopne
mov
pop
dec
mov
lea
sub
jle
dec
or
mov
ss
mov
push
int3
stc
cld
loopne
pop
xlat
push
mov
mov
lret
cwtl
inc
aam
mov
xor
inc
dec
sbb
cs
cld
out
rorb
test
fcoms
sahf
xchg
sysret
daa
outsb
inc
jns
xor
dec
dec
push
inc
jecxz
mov
inc
ja
mov
sbb
jb
mov
mov
into
or
cmpsb
cmpsb
insb
lret
ds
data16
jg
shll
inc
out
mov
mov
jne
stc
xchg
lea
mov
jae
xchg
outsl
popa
xor
imul
jne
sbb
es
fidivs
into
add
mov
das
leave
dec
xchg
outsb
mov
and
pop
jbe
lret
mov
gs
pop
ret
lods
mov
out
movb
les
test
dec
push
push
ja
mov
hlt
push
inc
adc
cmp
inc
call
adc
push
leave
test
inc
jle
cli
inc
sarb
sub
mov
into
xor
sub
enter
je
jmp
lds
int
leave
ret
jb
or
add
pop
or
pushl
repz
inc
add
jmp
leave
inc
mov
inc
xor
icebp
pushf
jle
out
dec
in
jle
jge,pn
jle
sti
fdivrp
xchg
lods
mov
xor
cs
inc
xchg
push
jo
mov
in
or
add
mov
sbb
sub
xorb
and
dec
loop
and
in
in
subb
pop
jae
mov
cwtl
mov
xor
iret
xor
int3
and
nop
jmp
mov
mov
mov
push
lock
add
test
mov
add
sub
jae
adc
stc
sub
sbb
pop
in
mov
cmpsb
push
fcoml
mov
jmp
out
inc
imul
cmp
lret
mov
imul
ljmp
out
sub
pop
jmp
fmuls
dec
sbb
mov
popf
pop
push
arpl
jge
sub
flds
sbb
inc
insb
fidivl
jge
shlb
mov
jl
mov
mov
mov
sub
xchg
cld
pushf
call
lret
or
add
dec
scas
lret
std
outsb
addb
popf
jns
arpl
fwait
lods
rol
add
xchg
mov
iret
imul
mov
jl
inc
loopne
jne
xchg
repz
mov
cmpsb
add
outsb
lea
dec
or
xchg
lahf
sbb
cwtl
js
add
negl
mov
sbb
mov
lahf
dec
xchg
pop
adc
je
int
pushf
cmp
and
or
lock
adc
out
mull
addr16
cmpsb
jge
push
jl
iret
jecxz
mov
popf
movsb
mov
pop
addl
clc
loopne
push
cs
xor
jmp
add
sub
and
das
mov
dec
lahf
mov
dec
je
lret
movsb
push
cltd
hlt
mov
mov
xadd
push
stos
mov
adc
out
cltd
cmp
clc
cmpsb
cli
mov
mov
cmp
mov
lret
sub
cmc
mov
jbe
xchg
or
xor
cmp
pop
fimuls
lds
and
mov
push
cmp
aad
cmp
or
mov
jp
pusha
xchg
pop
jl
rorb
push
or
and
cs
mov
cmpsl
push
push
xlat
scas
or
jne
inc
pop
sub
or
aam
pop
lock
loope
jp
data16
loop
xor
scas
or
add
cld
mov
shlb
rclb
push
imul
cmpsl
jae
xor
mov
pop
xchg
cli
pop
adc
inc
pop
rorl
fstpt
imul
xor
xor
lods
sbb
in
xor
in
je
jl
loop
movsl
je
jge
lds
icebp
jbe
dec
fstpl
add
stos
or
movsb
outsl
ja
jg
sarl
push
gs
scas
inc
mov
stos
sub
and
out
pop
hlt
mov
mov
movzwl
add
movl
mov
jmp
js
adc
jae
loopne
lfs
or
out
jns
jle
jge,pn
jle
into
inc
inc
leave
insl
jne
shll
dec
add
sbb
cwtl
popf
adc
roll
sbb
fs
andl
mov
cmp
cltd
push
pop
or
and
sbb
lahf
push
cli
pop
fnclex
adc
add
mov
and
and
idivb
mov
jge
cs
je
popf
push
mov
add
mov
xchg
add
push
in
sub
dec
mov
cwtl
sub
insb
or
add
arpl
into
xor
js
out
xchg
jno
iret
or
lret
outsl
cmp
lret
cmp
jg
adc
test
fchs
incb
sar
movsb
xor
clc
jmp
sbb
clc
adcl
mov
das
add
and
adc
arpl
test
loopne
orl
mov
mov
xor
xchg
imul
cli
jne
mov
aaa
shrb
enter
cld
jge
js
cmc
jns
xor
cmc
and
xor
jge
into
repnz
or
out
pop
sub
int3
dec
outsb
movsl
outsl
push
push
int
pop
test
mov
out
xor
adc
inc
xchg
popa
jae
push
push
das
iret
inc
mov
popa
lea
in
jb
bound
stos
hlt
jmp
shrb
and
push
clc
push
ds
fdiv
lahf
mov
mul
movsb
fsubl
sub
jne
sbbb
cmp
mov
data16
call
inc
xchg
cmp
lock
imul
jne
and
adc
movsb
xor
jge
outsb
mov
sbb
leave
ljmp
jle
addr16
push
flds
jnp
push
xor
lret
cmc
scas
pop
fldenv
cmp
scas
nop
aas
andl
fnclex
lcall
adc
lds
inc
sti
jge
stos
imul
enter
mov
sti
sbbl
and
rcrl
xor
push
mov
test
test
fmuls
aam
iret
dec
lret
inc
jb
jns
pop
push
or
jp
in
xlat
repnz
sar
xor
add
pop
fwait
xchg
les
addr16
jecxz
adc
adc
clc
lcall
push
lahf
mov
shrl
sbb
rcrl
andl
nop
dec
pushf
lds
fcoms
leave
push
xchg
mov
stos
int3
sbb
leave
xchg
ficoms
int
add
addr16
movsl
rclb
mov
int3
mov
mov
sub
or
test
jmp
jp
pop
inc
fbstp
jns
jns
mov
dec
sub
mov
lcall
jns
cwtl
daa
imul
test
clc
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
jmp
cmp
pop
dec
push
aam
int3
sub
fsub
sub
jle
jge,pn
jle
jnp
rorl
jecxz
jg
inc
inc
lock
sbb
push
aaa
jmp
adc
outsb
xor
add
in
pop
and
scas
pop
cmp
stc
cli
jo
mov
push
cmc
mov
sahf
inc
jb
inc
int
inc
arpl
mov
jge
cwtl
cmp
scas
mov
loop
adc
jl
std
fisttpl
inc
adc
xlat
test
fcomps
cld
jmp
sbb
nop
enter
cmp
pop
and
mov
xor
enter
gs
dec
inc
in
movsb
pop
jl
js
sahf
data16
mov
sub
imul
jno
add
fisubs
adc
ss
stc
jb
mov
cld
add
mov
test
xchg
mov
aas
pop
fiadds
xorb
shlb
ja
jmp
xchg
loop
cs
or
js
movsb
xor
adc
addr16
ja
xchg
xchg
add
dec
cmpsl
outsl
daa
add
movsb
hlt
aas
cmp
cmpsl
xor
daa
mov
aaa
mov
push
ret
sub
xor
and
push
repnz
xor
or
and
popf
test
or
inc
mov
xchg
pop
add
sub
mov
cmp
es
jne
repnz
pop
or
stos
sti
pop
push
subb
add
mov
or
sub
mov
pop
in
scas
adc
add
ror
repz
and
and
mov
sbbl
lret
clc
pop
push
test
shrl
cmpsb
or
push
pop
lock
aas
add
dec
in
inc
sbb
push
pop
test
jmp
adc
pushf
lds
jecxz
push
lret
or
push
dec
cs
pop
adc
xor
out
mov
sbb
push
leave
out
push
mov
dec
add
cmp
inc
push
xchg
in
mov
fildll
mov
out
out
jns
sbb
out
jae
cmp
fcmovne
and
mov
hlt
cmp
adc
jg
mov
pusha
loope
test
fbld
cld
sbb
subl
les
pop
adc
repz
cs
cmpsb
fwait
mov
in
add
aaa
mov
outsb
push
xlat
ds
dec
dec
pusha
mov
mov
and
cwtl
ret
xor
and
mov
mov
xchg
jecxz
add
cmc
push
in
icebp
mov
out
cld
ret
pop
pusha
fidivrl
mov
addr16
mov
sbb
pop
dec
inc
das
sub
stos
pusha
std
les
sti
es
adcb
mov
mov
add
push
or
pushl
ret
jns
push
and
inc
rcrb
outsb
dec
adc
fistps
xchg
jmp
xor
dec
lar
jns
push
in
cmp
es
nop
and
mov
xor
mov
sub
add
mov
mov
jmp
mov
jns
xchg
xor
mov
imul
jge
jle
subl
xchg
push
mov
les
gs
cmc
test
imul
jmp
aam
add
ds
adc
mov
addr16
lods
push
xchg
imul
jecxz
insl
xor
inc
mov
insb
cmc
push
xor
cmpsb
sahf
and
mov
fidivl
jp
jmp
fdivl
fisubs
subb
pop
cmp
mov
mov
subl
push
or
sar
xchg
jg
push
or
ret
cmpsw
shlb
out
xlat
xchg
adc
lahf
popf
pushf
mov
or
ljmp
lret
sbb
lahf
repnz
xchg
sbb
jg
sbb
adcb
imul
call
mov
dec
imull
or
fsubl
popa
xor
pop
cmp
scas
xchg
dec
add
mov
pushf
adc
push
movsl
add
test
loope
sahf
fildl
mov
mov
mov
lds
or
lret
cmp
lret
xor
cmpsl
jns
cmp
int
popa
xor
push
jbe
xchg
out
fldenv
adc
mov
jne
sbb
adc
dec
cmp
mov
xor
movl
arpl
inc
or
push
fidivs
mulps
fwait
int3
hlt
cmp
xlat
inc
push
xlat
push
pop
ret
ja
xlat
inc
mov
pop
pop
rol
sarb
adc
adc
ret
inc
movsb
popf
pushl
xchg
popa
sub
sbb
mov
addl
pop
pop
lods
mov
repz
dec
pop
inc
addb
inc
sub
inc
pop
and
sbb
popa
dec
pop
repz
lret
xchg
sbb
cmc
int3
test
test
dec
into
insb
and
mov
sub
add
dec
dec
fstl
pop
inc
xor
in
mov
subb
fstl
cmp
sti
push
fcomps
mov
adc
dec
and
mov
mov
adc
in
adc
stc
stos
jmp
arpl
fcmovnu
xor
jae
int3
push
sub
shrb
daa
pushf
andl
iret
ds
xchg
and
int
shrb
stos
sub
jge
gs
mov
jo
rol
fwait
push
push
cwtl
gs
out
fcmovne
mov
adc
imul
lahf
sti
stos
jp
sbb
das
xor
push
loope
repnz
int
movsl
jle
jl
aas
aad
aas
xchg
rolb
jo
jmp
pop
testb
xlat
out
popa
loopne
and
add
jnp
add
aas
dec
dec
xchg
inc
inc
repz
gs
add
sahf
out
test
js
push
inc
jns
and
cmc
fisubl
icebp
int
mov
movzwl
add
mov
mov
jmp
jae
push
lahf
jae
jae
pop
dec
scas
in
out
out
cs
jle
jge,pn
jle
in
je
push
fidivl
sahf
jmp
ds
imul
cmp
sub
outsb
loopne
pop
insl
adc
ret
das
mov
jno
mov
push
push
mov
repnz
pop
js
inc
cmp
push
out
ja
push
sbb
lret
xor
fcomp
jns
leave
in
xor
mov
aam
mov
adc
mov
jmp
mov
mov
xchg
mov
je
iret
add
xchg
push
mov
lret
test
lods
in
sub
gs
xchg
mov
inc
leave
adc
insl
xchg
cmp
pop
adcl
mov
fbld
jnp
jp
stc
stos
ja
xor
loopne
vmread
imul
and
inc
lcall
adc
push
cmpb
inc
sbb
mov
insb
out
aas
sbb
and
push
lea
arpl
sbb
jge
push
mov
cmp
inc
mov
pop
xor
mov
aas
out
push
mov
repz
and
iret
sub
mov
xchg
loopne
jmp
lods
pusha
ljmp
fidivrs
arpl
incb
pop
in
into
jecxz
loop
jl
lcall
and
sub
jb
jp
jmp
xor
aaa
leave
xor
push
cmp
add
mov
in
ja
mov
adc
adc
sahf
pop
push
pop
add
in
cmc
add
mov
or
movnti
lods
fnstenv
std
mov
and
adc
pop
scas
inc
jae
sbb
insb
sub
sbb
push
inc
rorl
sub
mov
enter
pop
mov
std
mov
mov
pop
aaa
or
adc
xchg
or
movsb
test
cmp
adc
jl
test
mov
call
or
push
and
xor
mov
jl
dec
out
leave
repz
imul
popa
xlat
mov
mov
push
add
xchg
mov
jne
lock
pop
jne
cmp
cmp
gs
jb
gs
aam
insb
mov
pop
mov
push
bound
pop
adc
inc
cltd
mov
mov
push
outsb
js
out
pop
roll
jno
and
pusha
or
pop
cwtl
aad
leave
xchg
fwait
sbb
shr
fadds
sarl
jne
sbb
cltd
push
mov
push
mov
lods
mov
rcll
pop
xchg
rcrb
outsb
sub
arpl
add
popf
xorb
dec
mov
scas
scas
ss
jmp
and
pop
lcall
sub
pop
jle
jo
xor
incl
pop
pop
ret
jne,pt
mov
imul
shlb
jmp
pushl
outsl
jno
mov
repnz
cld
jle
jge,pn
jle
fcomp
pushf
xor
loopne
xor
fwait
jae
mov
mov
or
jmp
and
push
imul
cmp
imul
test
aas
inc
outsl
stos
and
inc
push
das
fmul
loopne
les
push
mov
rclb
ret
ret
cld
jne
cmp
mov
jne
inc
movl
js
jmp
pop
into
mov
fstpt
cmpb
mov
push
inc
stos
dec
push
xor
dec
movsb
inc
shrb
mov
push
aas
pushf
subl
fnstsw
les
and
add
jmp
jp
sbb
cmp
jne,pn
mov
stos
xor
out
fadd
pushf
enter
add
sti
and
jmp
push
xchg
push
push
shrb
xlat
add
scas
out
clc
ret
in
pcmpeqw
jecxz
mov
inc
jge
ljmp
lret
repnz
push
or
and
xor
cmc
cwtl
lcall
sbb
cs
lahf
jecxz
mov
stos
fwait
lods
mov
int
test
dec
pusha
and
insl
loop
pop
aam
cltd
cs
push
cmp
aas
or
adc
mov
dec
or
lods
fwait
pop
mov
enter
stos
sub
lcall
cwtl
arpl
mov
xchg
lods
lock
repz
mov
dec
push
imul
dec
cld
cmp
test
push
dec
aaa
or
cmp
lods
jnp
ficoms
add
mov
sub
mov
bound
mov
es
jmp
cltd
inc
rclb
adc
and
adc
dec
pop
fstpl
repnz
cmpsl
fwait
lret
or
call
sub
mov
mov
fwait
mov
cmp
cmc
lahf
out
jbe
sbb
pushf
mov
insb
ljmp
and
or
dec
or
sub
sarb
negb
pop
into
imull
mov
pop
sbb
lock
mov
inc
imul
sbb
xlat
cmc
fnstsw
sbb
dec
into
insb
mov
test
jmp
push
cltd
rcl
dec
into
cltd
cli
and
xor
push
pop
and
dec
dec
or
lahf
push
xor
adc
decb
sub
mov
imul
add
sbb
mov
and
pop
out
add
testl
imul
cmpsl
call
xor
push
push
call
add
ss
rolb
cmp
sub
fs
jl
arpl
je
mov
mov
scas
xchg
sbb
jge
and
out
and
sahf
adc
in
adc
or
push
push
pop
cmpb
ja
and
lea
fbstp
mov
stos
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
jmp
nop
push
in
shr
jno
push
mov
insb
jnp
punpckhwd
jle
jge,pn
jle
adc
push
xchg
rclb
add
cmp
jg
hlt
mov
mov
ss
fs
dec
into
lahf
mov
mov
push
in
mov
cmp
and
and
pop
mov
push
inc
iret
fs
lcall
adc
repz
inc
xor
faddl
stos
jb
into
pop
add
pop
jmp
cltd
pop
mov
jl
lret
sbb
mov
in
or
and
sub
pop
outsl
rorl
inc
push
hlt
loop
stos
xor
out
movsb
roll
inc
sub
jg
xchg
outsl
cmpsl
lock
or
push
sbb
outsb
jge
shll
jp
pop
jnp
sub
fcmovne
sub
and
fisubrl
mov
shll
mov
jb
and
sub
add
mov
jae
notl
jg
loope
xor
cmp
dec
sub
enter
outsl
dec
push
dec
dec
dec
pop
insl
les
in
add
pop
mov
stos
or
cmp
cmpsl
dec
mov
aas
push
sti
aas
xor
sub
fidivrs
jbe
sbb
jo
frstor
inc
loope
adc
jg
stc
or
mov
cmpsl
or
insl
mov
mov
nop
jo
mov
idivl
jbe
mov
mov
xor
gs
jp
ret
or
cmc
mov
cmp
sbb
jp
or
popf
dec
pop
gs
push
sbb
mov
sub
dec
fwait
scas
scas
mov
lcall
xchg
push
inc
push
loope
mov
mov
daa
stos
sbb
xor
cmp
adc
mov
nop
or
mov
cld
std
dec
or
incb
jl
inc
adc
sbb
pushf
fucomp
dec
pop
push
mov
xor
xchg
sub
shll
sub
popa
xor
ret
cmp
jmp
dec
scas
sub
push
add
sbb
push
lret
mov
insl
lods
imul
ror
add
inc
sub
lea
and
mov
lcall
pop
mov
or
pop
xchg
les
mov
xchg
loopne
adc
out
movsl
sbb
arpl
and
jl
push
xlat
fstp
and
inc
cmp
add
sbb
and
mov
add
cmc
cmp
in
adc
cli
mov
push
push
movb
and
incb
inc
div
je
dec
xchg
jg
add
adc
repz
dec
mov
adcb
jle
outsl
neg
cmp
add
xchg
ror
push
dec
aam
mov
adc
scas
and
orl
jecxz
mov
rcrl
cltd
cmp
orl
sub
dec
inc
aam
push
push
sbb
sbb
sbbl
add
out
pop
cmp
scas
xchg
mov
test
fwait
jb
add
inc
cld
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
jmp
ffree
les
xchg
sub
sahf
and
xchg
jge,pn
jle
xchg
movsl
insb
cmp
imul
xchg
or
push
in
fldenv
std
pop
js
test
sub
pop
lahf
out
pop
int
out
jb
decl
mov
fstps
xor
lods
icebp
loopne
push
jae
test
arpl
mov
jns
push
cmp
xchg
inc
mov
cmp
mov
sub
mov
mov
push
xchg
jne
inc
popa
fs
xchg
cltd
xlat
mov
cmpsb
lock
add
jae
push
pop
xlat
loopne
cmp
nop
outsb
orl
dec
call
movsl
jmp
sbb
jge
or
jne
cmpsl
addl
fmulp
shrl
dec
cmpsl
add
mov
out
or
push
arpl
xchg
add
cmp
dec
add
or
inc
add
in
in
add
in
repz
test
jg
loopne
push
cmp
push
sub
xor
mov
cli
ljmp
outsl
inc
popf
or
cmp
icebp
jp
popa
test
jo
orb
cmp
cltd
jmp
adc
scas
dec
ljmp
cmp
int3
push
sbb
push
insl
xchg
xchg
test
push
subl
xchg
inc
adc
loop
hlt
and
xchg
fcoms
dec
loop
mov
lods
inc
fmuls
add
jnp
popf
mov
lret
jecxz
mov
rol
add
cmp
xchg
jecxz
mov
mov
bound
test
add
push
sub
in
push
xor
into
aas
xchg
je
nop
out
mov
fidivs
xchg
ffreep
into
movsb
mov
mov
incb
xor
int
fwait
testl
cmp
fidivrl
inc
jbe
mov
mov
jne
aam
popa
dec
mov
mov
repz
jg
insb
mov
mov
jmp
in
xchg
adc
aam
jg
dec
push
cli
cmp
cmp
outsb
sbb
adc
mov
ret
sub
gs
mov
jnp
clc
lret
fisttps
repnz
enter
adc
inc
dec
sbbb
xorl
and
fsts
mov
xchg
pop
imull
fcomi
mov
stc
inc
insl
pop
sub
lods
xchg
fisttpl
inc
pushf
fcoms
aaa
sub
or
mov
inc
adc
testb
pop
sarl
sub
cltd
or
xchg
insl
iret
fdivr
stc
rcr
add
push
icebp
jle
iret
loop
cmp
push
inc
pop
leave
imul
mov
bound
lahf
xchg
pop
dec
pop
lods
and
push
lahf
outsl
mov
xor
fs
or
loop
dec
push
mov
dec
lret
bound
adc
lahf
sbb
dec
clc
mov
mov
mov
mov
xor
add
mov
mov
jmp
mov
inc
inc
orb
data16
sbb
lods
mov
cmpb
jge
jle
dec
push
lret
mov
xlat
jns
jns
imul
push
scas
fs
nop
fmull
push
cltd
jae
mov
mov
repnz
or
sahf
sbb
out
cmpsl
mov
add
pusha
daa
addr16
pop
mov
mov
test
and
mov
or
mov
fnstenv
and
xchg
lods
cltd
add
pop
ficoms
sti
fisubl
and
test
hlt
in
arpl
pop
sarl
iret
xchg
xchg
out
test
bound
mov
adc
push
mov
pop
push
cs
lret
fsubrs
out
inc
add
push
and
adc
icebp
hlt
inc
arpl
rcrl
pop
sbb
popf
pop
aas
cltd
add
push
sbb
fisttps
dec
xor
fwait
sbb
cmp
jb
xor
push
push
cmp
cmp
lods
dec
scas
or
aam
xlat
or
pop
cs
lds
aam
xchg
pop
dec
daa
insl
pop
sti
add
loop
dec
add
pop
push
sti
adc
or
sbb
and
jle
or
sahf
pop
shl
sbbb
mov
and
xor
mov
xor
flds
or
or
les
mov
frstor
shll
xchg
or
icebp
test
pop
lahf
insl
xchg
repnz
ja
jo
push
fwait
call
ss
pop
inc
sub
fistps
inc
loope
xchg
test
add
mov
pop
push
mov
sbb
iret
mov
mov
mov
jne
push
sub
addl
ficomps
in
add
mov
loope
stos
dec
push
repz
icebp
inc
jbe
sbb
sub
sarb
mov
cltd
jae
sub
or
and
adc
stos
outsl
repnz
or
daa
ljmp
test
lahf
daa
jmp
sub
addr16
jnp
lea
into
mov
or
mov
les
sbb
cmp
shrb
lods
jge
in
outsl
lahf
xor
xor
repnz
and
imul
lret
in
imul
adc
sbb
mov
dec
hlt
xchg
mov
and
jno
push
jecxz
lret
pop
jl
ss
pop
out
stos
sbb
shl
rcr
xor
push
dec
pop
insb
inc
inc
dec
mov
pop
mov
push
cmpsb
jno
dec
std
pop
cmp
adc
and
cmp
sub
and
aaa
test
inc
sti
icebp
xchg
dec
push
mov
imul
push
pop
in
inc
fst
outsb
jp
or
aas
mov
daa
push
pop
and
add
fdivr
cmp
fsub
repnz
or
push
jp
cs
pop
movsl
add
les
or
hlt
mov
out
xchg
jno
dec
jle
loope
out
cs
in
rclb
sbb
cmp
stc
cld
and
or
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
pushl
pushl
call
cmpl
jb
mov
mov
add
xor
cmp
jne
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
mov
mov
sub
mov
push
inc
mov
orl
xor
cmp
movl
je
mov
mov
sub
imul
mov
and
mov
sub
sbbl
xor
movl
cmp
movl
jne
mov
xorl
add
movl
jmp
sbb
mov
adcl
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
sbb
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
adcl
movl
mov
subl
push
adc
mov
xor
add
mov
add
mov
and
mov
subl
push
push
test
movl
je
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
xorl
mov
movzbl
sbb
mov
imul
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
mov
mov
sub
mov
xchg
mov
xor
sub
xor
movzwl
or
mov
or
mov
sbb
mov
or
mov
mov
xor
mov
xor
xorl
xor
movzbl
or
jmp
adc
addr16
clc
jno
inc
xor
xor
sbb
jle
jg
jle
jge
shrb
inc
sbb
cmp
jne
in
sub
mov
pop
sub
test
repz
xor
push
mov
test
fistps
gs
aam
mov
mov
sub
or
adc
test
sub
cmp
out
das
hlt
clc
and
rcll
popf
stc
gs
pop
lds
xchg
cmp
cltd
xor
push
adc
add
addr16
sti
jle
pushf
scas
jecxz
xor
and
pop
cmp
or
lret
fdivl
jp
or
out
pop
sbb
enter
nop
xchg
jne
lret
sub
cld
inc
adc
rolb
nop
ret
xor
sti
nop
inc
sbb
repnz
pop
or
pop
stos
push
adc
stc
cmpsb
outsl
add
sbb
lods
xor
pop
push
outsb
stc
and
jno
and
mov
jmp
outsl
aaa
popf
insl
mov
int3
arpl
ds
mov
adc
insb
push
addr16
cmp
mov
push
adc
lret
mov
mov
mov
je
mov
andl
xor
orl
add
movl
cmp
movl
jne
pushl
subl
call
mov
add
mov
add
mov
mov
mov
mov
and
mov
subl
xor
add
movl
cmp
movl
je
sbbl
pushl
pushl
movl
call
xorl
mov
orl
mov
adcl
mov
addl
xor
add
movl
cmp
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
jmp
add
in
jecxz
icebp
adc
push
es
mov
and
jle
inc
pop
jne
jmp
test
ret
sub
adc
movsb
sbb
lea
enter
pusha
stos
jns
mov
or
inc
pop
and
inc
dec
inc
sbb
mov
cmp
inc
push
mov
adc
and
ret
sub
fidivrs
loope
enter
mov
cmp
jp
pop
mov
test
xchg
mov
popa
adc
cmpsl
or
testl
cmp
dec
cs
icebp
aad
fwait
idiv
sub
hlt
sbb
shrb
xor
sub
pop
shll
adc
sbb
or
jne
dec
jnp
mov
into
sbb
adc
xchg
incl
mov
pop
ror
hlt
add
jg
aas
cmp
mov
mov
sahf
cmp
stos
lcall
dec
dec
ret
push
andb
dec
ds
mov
mov
jg
jl
out
inc
or
dec
jno
in
xlat
cmc
daa
in
adc
popf
mov
sbb
decl
clc
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
jmp
aad
fstps
push
fsin
idivl
mov
jle
and
jle
mov
lock
test
orb
mov
cltd
lea
arpl
mov
inc
adc
lcall
mov
cmp
mov
or
out
es
leave
or
aas
ret
mov
xchg
outsl
cmpsl
xchg
test
jbe
sar
cmpsl
mulps
lahf
leave
jns
xchg
push
mov
xchg
flds
andl
les
leave
aas
arpl
dec
in
adc
mov
int
jnp
jg
cmp
dec
adc
adc
adc
pop
sub
push
scas
push
mov
addb
arpl
mov
repz
loopne
sarb
add
inc
mov
shl
cmpsl
xor
inc
or
adc
add
push
inc
sbb
js
inc
jle
shll
cli
repz
repz
clc
inc
push
dec
loop
jb
mov
iret
imul
gs
bound
lahf
jge,pt
mov
cmp
ss
dec
call
sub
or
jmp
mov
add
mov
mov
test
je
mov
push
jmp
dec
xchg
mov
jae
out
push
mov
lea
and
jle
mov
or
mov
mov
aaa
jl
in
ljmp
dec
jns
repnz
fsubs
jge
and
sub
mov
mov
mov
ja
jbe
in
arpl
jne
popf
rolb
repz
shrb
jb
dec
fnstenv
sub
out
fwait
in
sbb
jne
cmp
loop
adc
sub
dec
sbb
add
push
jl
test
fsubrp
pop
es
jnp
add
pop
mov
sub
pop
inc
jno
popa
popf
jge
shlb
jbe
test
sbb
mov
ret
cwtl
aas
xor
movsb
xor
mov
xor
jb
mov
and
int
inc
in
push
cmp
add
pop
adc
js
icebp
adc
cmp
jns
mov
in
xor
lock
out
into
inc
lcall
sub
lods
pop
clc
push
and
faddl
cmp
bound
roll
in
and
pop
xchg
sub
jmp
adc
jae
jno
je
adc
push
mov
and
jle
add
fsubrl
xchg
cs
into
out
xor
mov
and
int
movl
inc
test
lcall
dec
push
sub
cli
nop
pop
aaa
andb
cli
fnstcw
sbb
daa
es
ret
jno
mov
xor
lahf
dec
cmp
adcl
xchg
jp
sub
popf
subl
lret
cs
lea
lock
inc
mov
iret
mov
inc
inc
xchg
int
cmpb
push
sub
mov
inc
or
inc
daa
xchg
ficoms
mov
addl
fld
pusha
push
out
mov
mov
inc
push
sub
movsb
dec
iret
fadds
push
imul
repz
ret
inc
mov
jno
cmp
dec
push
or
cmp
xor
lret
insb
sbb
mov
das
leave
dec
fcmovnu
in
xchg
mov
test
and
jb
cmp
jg
jno
push
ret
dec
pushf
rol
xchg
jmp
mov
jo
mov
push
jge
fisttpll
jle
push
dec
adc
shrb
outsb
cmp
pushf
xor
dec
xlat
sbb
rorb
test
pushf
jmp
sbbl
pop
add
mov
rol
jb
mov
sbb
mov
pop
out
push
mov
cltd
jp
jmp
xchg
lds
inc
mov
xchg
dec
nop
sub
and
lock
aas
ret
sbb
outsl
bound
jns
cwtl
repz
call
aad
lret
popa
pop
cld
das
mov
inc
mov
mov
popf
push
notl
cmp
add
cmpsl
scas
movsl
cmp
xchg
cs
cld
ds
insb
stos
sub
dec
hlt
cmpsb
cmp
dec
inc
loopne
lea
inc
mov
rclb
inc
out
clc
out
cmp
lahf
pop
and
sub
inc
xchg
les
jne
inc
sbb
ja
xchg
or
cmp
ljmp
cmc
mov
js
shrb
lods
fdivs
stc
adc
and
or
addr16
push
rol
cmc
sahf
std
inc
jle
dec
or
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
jmp
fsubs
imul
mov
jle
and
jle
xchg
add
ljmp
fidivrs
jns
pop
mov
std
inc
cwtl
xchg
bound
adc
addr16
push
aaa
jne
js
sarl
sbb
sarb
cmc
mov
sarb
loopne
dec
inc
lods
push
dec
mov
aas
rolb
push
ficomps
mov
sub
pushf
adc
adc
inc
xor
mov
fdivr
bound
iret
pop
adc
mov
or
cmp
xchg
das
xor
rcpps
bound
mov
adc
enter
jecxz
jle
push
mov
cmp
dec
leave
xor
cmp
hlt
jnp
dec
bound
out
mov
adc
dec
cmp
sbb
ja
sub
mov
or
andb
inc
aas
or
cwtl
and
aaa
inc
adc
gs
cli
mov
mov
enter
jp
and
cmp
cmc
fidivrs
insl
popa
ds
loop
subl
sbb
lret
adcb
loop
pop
push
cmp
xchg
test
add
xor
ret
adc
scas
add
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
jmp
cmpsl
scas
and
stos
jp
mov
adc
stc
enter
jle
jg
jle
mov
cli
xor
mov
sbb
mov
dec
xlat
ret
mov
xchg
mov
cwtl
gs
add
js
cmp
stos
adc
pop
pop
scas
rol
dec
into
and
and
cmpl
lock
add
pop
cmpsb
int
push
ljmp
jg
mov
mov
sarb
sbb
inc
sub
xchg
faddl
repz
ja
jno
jg
sbb
aad
mov
dec
jl
dec
mov
andl
mov
mov
in
inc
sub
pushf
subl
pop
cmc
gs
cld
push
mov
adcb
mov
push
pop
mov
cwtl
and
call
push
test
sub
pop
fnstenv
dec
arpl
pop
adc
sub
or
dec
cmp
ljmp
sbb
push
aaa
xor
sub
call
jg
cli
es
fs
adc
or
or
push
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
jmp
lcall
jno
insl
add
pop
xchg
jle
and
jle
mov
cld
sar
rcrl
cmp
shll
and
es
stos
lea
lfs
adc
daa
sbb
xlat
pop
lret
cmpsl
add
orb
aas
adc
je
jmp
repz
add
pop
xchg
dec
loopne
push
repz
pop
nop
std
mov
dec
les
pop
sti
inc
movsb
add
pop
dec
mov
jmp
sbbl
and
test
sub
out
mov
cwtl
stos
and
xchg
fwait
xor
jb
jo
out
leave
scas
xchg
cmpsl
into
mov
cmp
adc
inc
mov
mov
push
sti
dec
sbb
add
xchg
icebp
add
arpl
out
or
fs
arpl
shrl
fdivp
pop
push
jl
mov
add
sbb
push
std
mov
sbbl
mov
mov
mov
repz
mov
and
or
sub
pushf
xchg
pop
movsl
das
mov
xor
sahf
sbb
shll
inc
pop
sbb
jbe
andl
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
mov
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
fwait
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
cmp
pushf
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
fiaddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
lret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
sub
inc
fnstcw
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
fwait
inc
xor
pop
inc
shl
inc
sub
inc
add
add
out
clc
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
enter
lea
mov
mov
in
cmovne
jmp
inc
mov
sbb
mov
add
in
add
sub
add
jle
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
int3
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
call
mov
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
cmp
pushf
pushl
mov
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
cmp
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
fwait
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
xor
jmp
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
cmp
pushf
nop
movl
clc
add
add
or
dec
ret
push
inc
dec
mov
mov
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
cmp
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
call
add
mov
xor
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
fwait
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
fwait
mov
jge
decl
