push
mov
sub
sub
mov
push
add
push
push
movl
cmpl
je
cmpl
jle
jmp
push
push
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
push
push
push
push
call
mov
dec
mov
jmp
xor
or
mov
add
xor
mov
mov
mov
sub
sub
mov
or
mov
mov
mov
xor
mov
mov
andl
movl
or
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
call
jmp
mov
orl
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
mov
mov
movzbl
xor
mov
jmp
lods
insl
lcall
xchg
add
xchg
add
mov
mov
jnp
aam
rcr
fcmove
test
mov
mov
test
orl
xchg
lods
jle
jno
jle
inc
mov
sti
xchg
jle
or
sub
or
rcrb
push
out
cwtl
dec
imul
out
sti
fldcw
cmp
mov
test
jne
sub
inc
sbbb
push
out
arpl
jb
sbb
xchg
insb
mov
xchg
add
imul
xor
sub
xchg
lods
in
mov
stos
sub
and
xchg
cld
xchg
xchg
inc
clc
mov
stc
mov
xchg
inc
jno
in
adc
mov
enter
or
push
imul
pop
sbb
call
dec
pop
jb
or
lret
xchg
fsubs
das
aam
js
and
not
cmp
cmc
dec
sbb
out
sbb
mov
add
adc
cmc
jg
mov
sbbl
cmp
repz
xchg
fs
stc
jo
inc
test
xchg
fimuls
lcall
dec
aaa
adc
add
js
adc
or
sahf
pop
and
push
cmp
xchg
insl
test
sub
sbb
addb
mov
push
ret
sub
add
arpl
push
add
pop
mov
xor
mov
ret
push
lds
jae
and
cmp
push
sub
xchg
xor
mov
ss
test
std
sub
mov
dec
push
add
addb
leave
and
mov
rolb
js
lds
sub
adc
stc
inc
jle
cltd
cmc
aam
dec
sbb
push
mov
add
add
mov
pop
lods
xchg
rol
pop
repnz
roll
sbb
cmp
mov
pop
or
test
test
mov
sbb
sub
clc
jmp
rcll
mov
add
inc
push
jle
sub
in
jnp
xchg
test
cmpsl
int3
fistpl
pop
inc
movsl
int
xchg
push
cmp
xor
cmp
pusha
inc
pop
mov
mov
jo
mov
push
inc
aad
out
or
data16
or
iret
ds
into
rcr
out
int3
sbb
push
loop
cmpsb
mov
jecxz
subb
xor
xchg
sbb
sbb
shl
aas
lcall
mov
cmp
fwait
jno
fmull
inc
inc
add
das
cmp
std
pop
sbb
mov
mov
mov
gs
arpl
jbe
xchg
adc
aaa
xchg
rolb
lods
or
add
cld
xlat
and
inc
dec
out
sub
loope
idivl
adc
pushf
xor
bound
in
adc
adc
adc
dec
fidivrs
lret
clc
lret
cmp
sahf
xor
lea
popa
sbb
jge
scas
lds
push
ret
xchg
mov
mov
test
mov
mov
push
lret
daa
pop
out
push
inc
cmp
xchg
mov
movsb
inc
lods
mov
insb
inc
xorl
enter
aaa
jle
add
pop
fdivrl
loopne
test
enter
adc
inc
mov
jb
scas
pop
aaa
push
xor
cs
subb
sub
mov
movb
push
insl
push
ficomps
not
les
adc
subb
js
pusha
jb
hlt
int
mov
pop
sbbb
je
mov
lods
daa
repz
or
push
jo
loopne
jp
xor
jbe
aaa
imull
adc
das
adc
mov
sub
mov
xor
repnz
xor
and
jecxz
lock
xchg
push
pop
mov
mov
clc
jmp
fstps
scas
jg
jge
xor
loope
xor
sbb
mov
cmc
lods
sub
aas
push
and
movsb
stc
mov
or
adc
and
ljmp
popf
mov
xchg
sub
adc
and
jecxz
nop
xchg
mov
lock
sub
iret
loopne
xchg
jecxz
ja
jbe
data16
aas
sbb
enter
sbb
sub
icebp
pop
dec
pushf
popf
loopne
mov
insb
arpl
sbb
ret
sbb
fwait
xor
es
sub
xor
int
mov
pusha
dec
dec
inc
addl
xchg
arpl
xchg
mov
js
divb
rorb
movsb
pop
mov
int
mov
dec
inc
jmp
lock
and
xor
mov
push
sub
fsubrs
cmp
jge
jmp
push
mov
xchg
push
push
pop
loopne
jl
xchg
stos
push
leave
movsl
ret
callw
cli
sub
xchg
in
hlt
js
inc
in
imul
dec
mov
mov
and
dec
je
aad
stc
mov
outsl
call
mov
push
add
in
outsl
push
jbe
cli
repnz
and
jno
test
mov
dec
push
cltd
jne
mov
dec
andl
int
sarb
sub
andb
cmpsb
mov
loop
mov
arpl
pop
mov
xchg
or
ret
jno
imul
xor
sbb
dec
nop
mov
adc
cmpsb
jp
mov
or
adc
xor
mov
pop
int3
jecxz
cmp
test
cmc
mov
js
scas
dec
mov
xchg
decl
xlat
dec
fcompl
cmp
mov
and
pop
dec
into
adc
push
loope
mov
jle
jecxz
dec
inc
insb
jmp
in
fstl
adc
add
push
cmp
jmp
add
adc
call
sub
fwait
in
je
pop
inc
int3
cmpsb
insl
cwtl
sub
xor
int3
xchg
pop
xchg
insl
out
xchg
or
sbb
insb
enter
pop
xchg
mov
or
inc
test
ret
sbb
ret
movsl
sbb
mov
ss
je
adc
aad
test
mov
movsb
ds
dec
xchg
and
idivb
add
fs
mov
outsl
testl
rcrb
enter
or
clc
int3
ds
xchg
pop
jns
xchg
mov
xchg
les
adc
xchg
or
test
ljmp
addr16
pop
sub
mov
pop
or
int3
cmpsb
je
insb
cmp
mov
fnstsw
cmp
sub
imul
arpl
sub
les
imul
cmp
jb
nop
inc
inc
lds
push
sub
pop
stc
jo
push
sbb
mov
xlat
mov
xchg
dec
aam
arpl
lcall
in
sub
mov
fcompl
add
add
or
or
les
cmp
mov
push
ret
jns
mov
fcompl
scas
push
inc
add
pop
es
xchg
es
imul
daa
cmp
imul
cld
arpl
decb
jle
sahf
mov
mov
ljmp
roll
xchg
daa
fstpl
out
jl
movsl
ljmp
pop
scas
lret
adc
add
xchg
in
push
or
and
cmc
fsubrs
or
mov
xchg
hlt
movsw
stos
fsubl
or
lods
in
add
add
ljmp
lods
loope
dec
dec
sub
testb
pop
aad
add
push
dec
ds
jmp
sub
in
or
cmpsb
mov
test
pop
pushf
pop
fstl
push
inc
and
pop
in
ret
test
or
xchg
out
cmc
in
ljmp
pop
jbe,pn
inc
adc
repz
cmpb
in
clc
adcl
dec
std
shr
push
arpl
pop
fistpll
out
dec
lret
sbb
aad
adc
lret
cli
pop
mov
cmpsl
push
dec
mov
in
insl
outsl
fildl
in
es
jne
xchg
popf
xchg
sahf
inc
jbe
jnp
lahf
adc
sub
xor
sub
push
adc
loop
outsl
ret
push
lds
xchg
pusha
xchg
lods
out
ss
test
mov
sbb
jmp
push
sbb
dec
cmp
dec
negb
cmp
pop
lea
mov
testl
cwtl
jecxz
add
aam
push
je
call
cmpsl
cld
mov
pusha
das
jge
sarl
inc
and
enter
js
lea
and
mov
dec
push
jg
lock
fwait
dec
mov
xchg
test
or
movsl
bound
xchg
std
jmp
pop
jecxz
out
adc
dec
jne
ljmp
jno
xor
in
pop
or
mov
pop
xchg
push
push
mov
sub
push
dec
int3
cmpsb
popa
and
shlb
push
xchg
xchg
mov
jg
cmpsl
outsb
and
in
cli
hlt
cli
push
sbb
mov
addr16
rcrb
je
popf
sarl
xor
pop
jge
cli
popf
cmp
dec
lods
je
lcall
cmp
inc
add
jle
ds
nop
xor
jae
mov
daa
dec
leave
iret
sbbl
jmp
push
mov
sub
cltd
and
push
popa
fistl
je
fisubrs
pop
pusha
jle
test
outsb
dec
cmp
mov
xchg
lret
stc
lods
xor
test
daa
shl
int
loop
mov
cmpsl
lods
cmp
push
push
shll
and
loop
out
fwait
jne
movsl
sbbl
scas
or
sub
cmp
int
adc
mov
pop
stos
add
loope
addb
cld
in
arpl
push
add
cmp
inc
or
insl
mov
dec
leave
and
push
mov
sarb
shll
enter
mov
and
pop
push
out
or
sahf
lcall
mov
test
jb
test
mov
inc
cmp
adc
movl
mov
sub
shll
pop
add
pop
imul
shll
mov
pop
mov
sbb
int
imul
push
imul
inc
mov
popf
mov
push
mov
cmc
fwait
mov
out
or
push
dec
sub
rorb
std
out
add
cmp
xor
dec
in
and
rcr
pcmpgtw
sbb
pusha
jae
in
into
jno
icebp
sbb
insb
pop
mov
rcl
adc
sbb
pop
loope
cwtl
mov
arpl
mov
jae
xchg
push
mov
icebp
daa
pop
mov
inc
in
adc
xchg
adc
popf
dec
and
insb
dec
xchg
xchg
fisubrs
sbb
mov
sbb
and
ficompl
in
push
insl
dec
aam
xchg
repz
or
jp
mov
ficompl
jmp
jle
push
xor
lods
bound
out
clc
jae
xchg
or
lret
cli
bound
orb
vphaddbw
in
loopne
mov
cmpsb
sti
add
jg
mov
mov
sbb
in
jp
stos
add
rcll
clc
paddusb
mov
adc
pusha
push
dec
cld
notb
xor
sbb
rcl
fdivr
rcrb
arpl
sar
pop
xor
lods
jae
jge
and
rcrl
lahf
sahf
mov
stos
stos
stos
mov
rdtsc
add
int3
add
dec
pop
fmuls
fidivrl
adc
xchg
xor
scas
lcall
jnp
jle
leave
rol
ret
jne
pusha
cmpsb
clc
inc
mov
add
cmp
adc
sub
das
popf
mov
xor
xlat
stos
inc
mov
iret
lock
xchg
inc
dec
jl
lds
stos
mov
repz
fsubrp
repnz
add
and
xchg
popf
jno
ret
jbe
mov
ret
jg
insb
divl
ds
dec
jp
xchg
aas
push
and
pop
in
mov
out
dec
mov
cmpsb
out
cmp
push
xor
addr16
mov
mov
sub
sub
jp
add
ja
cmp
push
cmpsl
adc
dec
mov
mov
dec
cwtl
sbb
test
filds
call
in
cli
jecxz
jns
fdivp
enter
ret
push
or
inc
stos
cmp
dec
mov
adc
inc
mov
sbb
ljmp
out
jl
xchg
sub
adc
push
push
xchg
dec
lock
mov
push
js
test
mov
sub
std
adc
dec
sbb
xor
lcall
and
popa
popl
add
pop
inc
arpl
add
jne
dec
bound
push
fmuls
pop
pop
mov
jb
mov
stos
clc
les
push
push
jne
jl
cmp
out
xchg
dec
in
cli
rorb
pop
lods
add
jne
and
insb
fsubrs
lods
and
or
push
pusha
jle
sahf
fisubrl
cmc
sti
es
jl
jmp
cmp
sbb
inc
sti
adc
xchg
and
addr16
outsl
in
push
movsl
push
pop
sub
mov
adc
xchg
push
cmp
fiaddl
pop
xor
sub
sbb
mov
lcall
repnz
inc
adc
lahf
sahf
add
xchg
out
add
jg
fndisi(8087
mov
or
outsb
push
jecxz
std
call
rolb
cmp
xchg
sub
sub
test
pop
incl
xor
aad
pop
stos
pop
jb
sbb
pusha
and
cs
hlt
mov
sbb
fsubs
not
inc
push
jl
push
in
jmp
fistpl
xor
enter
ljmp
mov
inc
mov
mov
pop
je
mov
inc
xchg
jecxz
aam
dec
inc
push
hlt
mov
cmpl
pop
mov
sbbb
shll
sbb
imull
and
inc
bound
mov
adc
xor
fisttps
cld
jecxz
lods
pop
ds
push
iret
mov
in
pusha
out
mov
jb
sarb
in
jle
add
scas
imul
cmp
outsl
rcl
adc
push
push
ss
adc
int3
jecxz
xor
lahf
pop
sbb
fmul
shr
mov
in
dec
loop
dec
sbb
jns
in
push
and
addl
int
mov
je
fs
arpl
gs
push
in
shlb
ja
pop
add
out
push
jmp
add
mov
in
push
dec
stc
sbb
lods
adc
imul
inc
cld
adc
and
stos
xchg
fwait
jbe
into
xor
sbb
int
lock
dec
jmp
aam
out
movsl
sbb
fidivs
loopne
aad
fidivrl
int
data16
or
adc
icebp
push
jle
cmpsb
sub
inc
push
jg
push
xlat
addr16
jl
pop
xchg
or
mov
bound
sbb
dec
negb
adc
cmc
test
dec
gs
pop
sti
outsb
xlat
mov
push
addr16
cmp
push
mov
xor
jnp
dec
shl
and
stc
insl
loopne
mov
sbb
loope
xchg
les
bound
das
dec
xchg
inc
sub
test
ljmp
jmp
cmp
adc
cmpsl
jo
adc
mov
in
rcl
push
and
mov
push
ret
mov
push
fidivrs
dec
fwait
cmc
mov
pop
push
jb
xchg
and
pusha
fs
xorps
mov
out
nop
mov
jae
push
mov
lahf
repnz
inc
cmp
inc
pop
loope
xor
mov
cmp
das
ret
ljmp
lea
fistps
mov
xor
jno
mov
push
and
lods
pop
sub
mov
jae
push
into
jp
mov
dec
jge
mov
mov
dec
gs
xor
movsl
ds
insl
sti
cmp
outsl
icebp
out
mov
std
pop
fldcw
mov
ret
push
or
cmp
je
dec
int3
push
mov
lret
jb
shrb
cltd
or
xor
push
in
cld
push
push
dec
push
mov
iret
ljmp
hlt
mov
imul
icebp
mov
lock
push
mov
push
fidivl
cmp
aas
fldt
movsl
adc
movsl
fisubl
inc
leave
ljmp
add
adc
sub
je
pusha
xchg
inc
bound
mov
lea
movsl
xor
arpl
pop
adc
sti
adc
cmpsb
shll
mov
dec
loop
xor
fcoms
int3
sub
call
adcl
pop
lea
ljmp
cmp
out
fldl
xor
sahf
pop
adc
out
pop
cmp
mov
cmpsb
ret
mov
mov
into
xor
mov
xchg
rclb
dec
shl
lcall
leave
add
lock
subb
jp
xor
dec
mov
sub
sarb
sti
fwait
dec
cmc
push
insb
loop
jbe
xchg
scas
sbb
xor
stc
int3
mov
repz
scas
popl
decb
push
stos
mov
mov
sub
or
mov
insl
das
cmp
xor
rcll
xorl
ret
xorl
std
pop
dec
outsl
lret
pop
jns
sub
add
cmp
or
aam
movsb
out
or
stos
dec
mov
jge
iret
cltd
imulb
ret
inc
repz
cmp
inc
sub
jle
sbb
sbb
movl
push
dec
aaa
cs
test
icebp
sbbl
test
adc
dec
ret
xor
push
xor
dec
cmpsb
cmp
push
xor
lds
out
rclb
stos
mov
push
fsubs
js
fs
out
scas
xor
push
fwait
loopne
std
loopne
and
loop
and
sbb
push
out
pop
pop
hlt
cmp
sbb
or
jmp
push
sbb
cmpsl
push
sbb
es
xchg
testl
xchg
imul
popa
test
icebp
nop
fidivl
out
das
mov
test
pop
lods
sbb
mov
dec
adc
push
outsl
inc
mov
xor
xor
popf
and
xchg
adc
out
adc
iret
add
mov
cmp
std
adc
movsl
dec
jne
dec
push
movsl
fdivr
sub
cmp
mov
jnp
sbb
pushf
dec
mov
push
into
cmp
out
push
dec
adc
and
dec
int
pusha
mov
imulb
pop
cld
fstpt
out
sub
xchg
cmp
or
cmp
imul
sub
xchg
add
mov
jmp
mov
push
lods
xchg
loope
or
call
lods
and
ret
lods
jge
in
cmp
fmull
pop
inc
call
mov
add
jge
test
pop
mov
inc
mov
pop
repnz
xor
neg
fwait
sub
pop
rclb
scas
dec
clc
push
xor
xchg
mov
fbld
je
out
stos
sbb
ret
jg
lret
scas
or
dec
les
adc
inc
mov
jmp
inc
inc
mov
test
mov
test
xchg
lods
movsl
rorb
hlt
jecxz
sbb
mov
adc
xchg
loope
xchg
and
clc
fucom
mov
pop
cmp
or
or
jge
notl
fcomps
lret
aad
test
mov
daa
fmulp
push
xor
xlat
jns
cmp
ficoml
adc
mov
ja
sub
push
jp
fucompp
lret
sbb
adc
sub
xor
iret
add
adc
mov
or
aas
cmpsl
jle
jae
and
test
mov
adc
arpl
xchg
repnz
push
lods
lea
pop
jge
ret
and
mov
adc
je
xor
data16
ffree
cmp
xor
pop
jmp
cld
push
mov
leave
cwtl
push
es
ss
sbb
push
and
pop
push
pop
rcr
decb
in
xor
cmpsb
loop
xorl
mov
cpuid
iret
and
fstps
in
loopne
mov
dec
dec
sbb
jb
push
adc
int
insl
es
loop
testl
aas
xchg
push
and
inc
adc
test
xchg
scas
mov
repz
mov
stos
out
imul
lods
mov
add
lret
shl
jb
jne
jecxz
leave
cld
cli
sbb
cmp
pop
add
push
push
repz
and
out
sti
je
imul
inc
xchg
cmp
xchg
push
loopne
mov
les
ljmp
andb
xchg
and
inc
filds
inc
mov
jle
jmp
jno
adc
mov
xchg
or
sbb
or
cltd
ss
data16
in
mov
in
hlt
std
dec
lock
fwait
cmp
ja
pushl
mulb
adc
jo
pop
mov
fs
into
loopne
cmp
mov
or
or
pop
mov
or
lcall
pop
sbb
cmp
outsl
shll
int3
adc
add
rep
clc
push
pop
fisttpll
mov
andb
ljmp
sbb
cli
pushf
jne
fsts
lea
cld
add
leave
sub
out
js
rdpmc
lock
and
iret
lret
shl
or
mov
rsm
aam
inc
cmp
xor
push
rclb
dec
sub
xor
adc
and
dec
inc
into
in
test
movsb
fiaddl
sub
orl
loope
inc
xor
inc
aad
add
add
jle
sub
mov
sbb
jmp
stc
repz
clc
jl
cmpsl
pusha
scas
in
xor
cmp
and
stc
cmp
ds
cmp
sub
loop
pop
mov
aas
xchg
or
mov
lods
or
push
pop
pop
jo
inc
mov
inc
cmpsb
mov
addr16
dec
sbbl
xchg
adc
imul
test
and
xchg
dec
or
mov
or
test
pop
jbe
cmp
mov
ljmp
cmp
or
repz
loope
stc
ss
cmc
jae
cld
mov
icebp
push
sbb
push
iret
add
pop
mov
sbb
mov
mov
sub
pop
push
cmp
test
mov
mov
inc
das
test
enter
push
mov
jb
mov
jb
pop
jnp
mov
xchg
ljmp
lahf
sub
in
sub
or
test
inc
out
push
and
dec
movsb
fmull
outsb
stos
pop
sbb
inc
rclb
into
mov
xchg
insb
jo
lods
fwait
bound
pop
xorl
dec
mov
pop
int3
adc
cmp
es
xchg
in
xchg
add
orl
pop
popa
lods
push
sbb
lahf
add
out
loopne
pop
aas
sbb
cmp
push
push
call
mov
adc
xor
pop
mov
jns
pushf
stc
loop
inc
dec
and
jae
test
mov
setno
inc
ds
adc
hlt
arpl
push
push
mov
xor
pop
test
mov
pop
clc
cmp
aas
in
cmp
mov
enter
jns
movsl
mov
cmp
cwtl
shr
adc
lcall
sbb
test
add
xor
cmpsb
jnp
fbstp
rcrl
outsl
call
repnz
push
fstl
sbb
jmp
dec
sbb
and
mov
cmpsl
push
imul
mov
jb
rol
das
or
sarl
shll
push
xor
xchg
fildl
leave
andb
loope
test
xchg
loopne
mov
push
mov
adc
sti
pop
mov
std
das
mov
mov
adc
mov
lea
cmc
mov
xchg
fwait
loopne
nop
xor
andb
or
or
jno
cltd
loopne
sub
add
cmp
testb
mov
mov
sub
into
push
push
mov
or
scas
cmc
sbb
mov
mov
ljmp
loope
push
or
mov
scas
dec
movsl
add
fcmovne
inc
jmp
add
aas
call
jns
insb
lcall
cltd
in
scas
mov
dec
or
bound
stos
mov
data16
rorb
stos
cli
mov
call
dec
add
mov
sahf
faddl
test
inc
sub
pop
mov
pop
popa
movsl
mov
xchg
fidivrs
out
mov
and
movsb
pop
mov
ffreep
sub
aas
cmc
int
push
jbe
in
cltd
pushf
push
fbld
jecxz
addr16
loop
lods
push
cmp
add
aad
out
call
inc
dec
xor
daa
pop
and
mov
insb
xor
sbb
jo
dec
sub
adc
outsb
in
jae
iret
sbb
cwtl
pop
sbb
pop
pop
cmp
push
push
jg
imul
insb
add
out
imul
sub
icebp
inc
fildl
mov
push
ret
add
push
add
test
jnp
adc
xchg
gs
dec
movsl
sahf
dec
aas
mov
scas
mov
xchg
mov
dec
push
insl
cmp
insl
cmp
int
scas
pop
inc
into
mov
addr16
repz
xchg
xor
lds
lretw
mov
cmp
js
xchg
lods
pushf
add
xchg
leavew
stc
jno
fstpt
dec
lret
nop
rclb
mov
pop
mov
add
lret
popa
cwtl
stos
fistpl
sahf
xor
push
movsl
aaa
inc
outsl
ljmp
addb
sahf
jnp
fdivrs
dec
push
in
pop
inc
pushf
pop
push
cmp
mov
adc
dec
xchg
jne
pop
adc
sbb
pop
imul
mov
adc
mov
xorb
fsubrl
je
ret
aam
std
or
pop
sub
xchg
sbb
jmp
repnz
ret
mov
lds
xchg
inc
scas
jae
pop
stos
js
adc
cs
pusha
addr16
sbb
icebp
leave
mov
add
and
fcomi
mov
pop
jg,pn
out
gs
sti
lret
jne
sub
inc
and
fimull
jl
and
jl
lds
outsb
sub
in
nop
xchg
cmpsb
push
js
stc
dec
inc
and
pop
and
push
pop
cmpb
dec
lods
cmp
or
xchg
xchg
nop
sahf
mov
fisttps
cmc
ds
adc
push
ret
dec
out
subl
hlt
vphsubwd
mov
lea
mov
inc
jl
nop
repz
mov
cmpb
icebp
mov
leave
fldenv
fs
mov
pop
rcll
inc
icebp
jnp
into
xchg
imul
lods
push
ja
cmp
inc
insl
test
ret
dec
enter
fnstcw
lret
pop
sub
sub
fwait
in
repnz
mov
or
mov
jbe
push
out
mov
mov
mov
ret
cmp
inc
pop
dec
lcall
dec
mov
aad
repz
or
pop
add
adc
pop
insl
mov
mov
xchg
test
gs
dec
cwtl
push
or
fdivs
mov
push
scas
push
pop
fwait
jno
rcll
add
int
add
idiv
sbb
mov
icebp
test
rol
xchg
notl
stc
fisttpll
and
fcomps
fidivs
lea
cmp
scas
xor
jns
in
sbb
fs
out
dec
mov
mov
mov
or
jno
add
cmpsb
notl
xchg
mov
inc
jge
mov
cmp
jne
mov
cmpsl
sahf
popf
pusha
xchg
and
in
rorb
dec
fs
mov
ffreep
sbb
mov
pop
rclb
movsb
movsb
ljmp
adc
in
mov
dec
in
scas
jb
or
dec
shll
test
or
stos
xor
pop
fisubs
test
and
shlb
adcb
dec
jg
pop
lods
mov
sub
inc
cmp
xchg
fwait
roll
lods
cld
inc
jecxz
data16
scas
mov
std
nop
mov
jnp
mov
das
inc
push
mov
scas
push
notl
jge
mov
fidivl
aaa
dec
dec
pop
out
adc
enter
pop
test
xchg
sbb
sub
in
mov
out
insl
orl
das
xchg
lret
aam
nop
sti
and
push
lahf
enter
rorb
jae
xchg
mov
test
mov
pop
addl
xchg
mov
jp
mov
mov
sahf
mov
sub
jmp
jnp
clc
cmp
jno
js
orb
push
add
lea
call
addb
mov
rorl
inc
adc
add
xchg
add
lods
cmp
in
xor
fabs
mov
xor
pop
jb
xchg
dec
xchg
jg
mov
push
sbbb
dec
je
lret
out
mov
adc
push
push
ja
cmp
mov
inc
adc
fstl
imul
js
pop
and
jg
push
xchg
push
fstpt
cmpsb
pop
adc
sub
mov
or
ljmp
repz
xchg
sahf
stos
int3
jge
scas
dec
mov
xchg
ljmp
and
xor
in
or
push
push
popa
mov
test
adc
repnz
jle
je
loope
je
xchg
push
xchg
in
daa
and
cmp
push
mov
iret
mov
nop
stos
cmc
jge
cmpsb
cmp
aad
clc
stos
mov
or
inc
xchg
fmull
stos
cmp
adc
push
or
pop
jp
pop
psubd
dec
pop
pusha
cmpsb
inc
inc
lods
out
sahf
pop
fstps
in
jb
sarb
ds
jp
fistl
iret
push
inc
js
pop
imul
fistl
cmpsl
std
sub
cmc
insl
in
arpl
lds
clc
cmp
add
and
ror
arpl
in
clc
push
adc
xchg
dec
cli
dec
xor
andl
mov
cmpsb
arpl
push
decl
add
int3
dec
scas
ds
flds
fdivrl
sub
lea
imul
js
sbb
imul
or
in
enter
repnz
test
push
les
addr16
es
out
cmpsb
mov
loop
stos
push
or
aad
ljmp
daa
rcr
in
inc
adc
hlt
xor
jmp
imul
mov
pop
xor
aas
push
pop
andl
sub
andl
mov
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jb
add
movl
andl
mov
inc
mov
cmpl
jb
jmp
push
call
cmpl
jb
mov
mov
mov
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
orl
mov
movzwl
sub
mov
xor
xorl
add
mov
lea
mov
adc
mov
adcl
xor
sbbl
add
orl
mov
notl
lea
push
adc
mov
orl
xor
orl
add
orl
push
or
mov
push
pushl
call
and
mov
movzbl
sbb
mov
mov
mov
movl
mov
mov
lea
orl
mov
sub
movl
movzwl
sbb
mov
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
sub
movl
mov
movl
mov
mov
movl
mov
cmp
movl
je
mov
mov
xor
xor
lea
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
pushl
push
call
jmp
mov
xor
orl
div
mov
sbbl
mov
andl
xor
xor
sub
movl
cmp
movl
jne
mov
xor
mov
sub
mov
or
mov
xor
xor
sbbl
add
sbbl
add
mov
movl
cmp
jae
xor
lea
mov
mov
xor
add
lea
movl
mov
mov
mov
cmp
movl
jbe
addl
addl
jmp
decl
addl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
pushl
push
call
jmp
mov
xor
adcl
inc
incl
subl
add
cmp
jb
notl
mov
add
mov
adcl
xor
sbbl
mov
sub
add
sub
mov
sbbl
xor
xorl
sub
subl
ror
xor
mov
xor
add
sub
imul
mov
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
jmp
iret
xor
jne
jns
cmp
mov
xlat
sub
sahf
jnp
adc
fcomp
rol
mov
cmpsb
fimuls
shrl
nop
jnp
flds
sbb
insl
test
stos
test
out
stc
mov
dec
loope
loopne
ljmp
dec
mov
cld
jnp
andb
loope
sbb
and
scas
mov
inc
sarb
aam
cmpsb
das
push
fimuls
incb
xlat
sti
ret
mov
pop
mov
add
jbe
enter
nop
xor
or
out
lret
xchg
or
pop
in
jmp
sbb
adc
cli
and
popf
popa
adc
pop
pusha
lds
mov
jae
gs
pop
inc
test
inc
mov
fnstsw
sub
rcll
push
mov
sub
mov
push
cld
scas
inc
fcom
icebp
out
pop
fcmovne
mov
pop
clc
push
or
fs
adc
pop
imul
mov
adc
ljmp
dec
push
pop
shrb
cmpsb
jae
inc
out
add
cmp
stc
sbb
dec
add
sbb
pop
jecxz
inc
sbbb
sub
mov
in
imul
xor
mov
jg
in
push
ds
or
out
sahf
jns
mov
push
pop
int3
movsl
cmp
adc
mov
mulb
xchg
shll
bound
nop
push
and
movsb
push
movsl
dec
xor
jne
lret
fldcw
mov
mov
test
outsb
mov
sub
mov
cmc
pusha
pop
test
adc
adc
inc
and
cli
repz
lods
fs
js
jmp
out
and
xor
sbb
mov
sbb
cli
push
lahf
testl
mov
mov
inc
outsl
enter
pop
xchg
dec
sub
test
daa
pop
not
shrl
aas
in
push
das
and
enter
push
mov
cli
mov
out
icebp
xor
mulb
into
decl
lret
cmp
and
xor
inc
jge
dec
jecxz
sbb
subb
les
aaa
in
into
outsl
iret
pop
les
sub
push
dec
repz
inc
cli
pushf
jp
lods
pop
js
mov
popa
add
es
and
add
sar
js
add
jae
clc
fidivrl
mov
ja
sub
js
pop
mov
lret
pop
jne
test
adc
cmc
cvtdq2ps
pop
adc
es
adc
into
add
pop
movsb
adc
rolb
stos
lret
and
cmc
dec
addb
cmp
cltd
push
push
int3
lock
inc
mov
jp
pxor
loop
xchg
lock
push
xchg
xchg
in
push
adc
sbb
pop
js
stos
sub
pop
shlb
das
sub
lock
push
lret
inc
scas
je
leave
lds
testl
dec
mov
xchg
xchg
sbb
cmpsb
dec
dec
sahf
mov
pop
roll
sub
inc
mov
cmp
mov
fimuls
aam
es
inc
inc
add
inc
loopne
mov
pop
xlat
dec
popf
mov
lcall
test
shl
movsb
xchg
adc
and
xchg
add
mov
sbb
outsb
addb
iret
or
int
fistpll
adc
loop
popf
and
scas
ret
mov
movsb
cmc
sub
xor
inc
out
lret
aam
leave
jecxz
es
jno
cmp
mov
or
scas
fildll
adc
adc
jecxz
pop
pop
fcmovnbe
jbe
insl
lock
dec
pop
adc
mov
stc
fiaddl
data16
add
push
decl
leave
test
gs
mov
sub
je
aas
sbb
adc
fsub
subl
xor
ss
cwtl
xchg
sub
inc
std
add
jl
repz
addr16
jns
sub
stos
je
sbb
xchg
xchg
imul
cld
push
lret
fs
jle
stos
xchg
outsb
mov
lahf
adc
popa
insb
mov
jl
xor
inc
mov
iret
or
mov
inc
cmp
sbb
ret
fwait
std
add
or
sub
pop
pushf
xchg
mov
addr16
call
pop
in
dec
mov
mov
inc
lret
inc
dec
cmp
scas
cmp
pushf
mov
inc
add
mov
cmp
push
es
cmp
mov
dec
push
push
xchg
and
incb
adc
dec
adc
sahf
xchg
into
jmp
fildl
adc
mov
int
push
jne
int3
jbe
les
mov
enter
mov
pop
jne
jg
out
dec
jns
adc
jne
cmp
pop
shl
adc
mov
lds
or
mov
dec
mov
dec
add
mov
clc
jne
imul
mov
jp
mov
xor
push
andb
lcall
xchg
mov
sbb
je
add
pop
push
or
popf
loop
fmull
js
mov
fdivp
push
jge
je
adc
mov
mov
push
dec
inc
sub
dec
lret
sbb
push
dec
pop
pop
out
mov
jo
cltd
sbb
repz
dec
je
push
dec
dec
xor
daa
add
add
xchg
dec
push
scas
push
test
jae
cmp
push
push
pushf
push
adc
dec
push
bound
jnp
je
sbb
jle
sub
fwait
push
xchg
repnz
xor
sub
das
js
ret
movsl
pop
cmp
push
cmp
sbb
mov
mov
in
mov
dec
xor
rclb
cmp
loop
out
nop
popa
adc
inc
xor
lahf
push
aam
mov
jb
imull
filds
popa
mov
leave
cmp
and
mov
jp
jae
mov
or
or
mov
scas
pusha
test
or
and
cmpsb
cli
sbb
vorps
xchg
pushf
mov
inc
sub
jecxz
jg
mov
out
sub
int
mov
out
mov
roll
push
out
mov
das
stos
adc
notb
rorb
pop
rcr
or
pop
in
cs
jle
jl
dec
scas
shll
jae
jl
movsb
mov
test
test
in
xchg
mov
rcrl
and
dec
adc
in
pop
xchg
lods
std
add
cmovno
nop
jno
jle
cmc
sbb
fsubrs
enter
pop
lods
jno
iret
pop
sub
dec
mov
and
addr16
jmp
fdivr
dec
inc
iret
adc
out
ds
into
icebp
push
dec
mov
or
decl
or
int3
in
xor
mov
add
cmp
sub
push
mov
inc
mov
sbb
in
sti
cmp
cmpsb
lret
add
mov
or
movsb
lahf
jle
push
push
loope
hlt
subb
jle
cmp
mov
insl
movl
push
pop
psraw
out
cltd
sbb
imul
lahf
mov
daa
sbb
xchg
aad
stos
inc
movsb
arpl
cltd
adc
mov
push
sbb
inc
adc
ret
mov
pop
mov
fwait
push
cli
loope
out
dec
ds
repz
das
mov
sub
fnsave
popf
into
pusha
outsb
add
sub
aam
xchg
sub
bound
out
pop
imulb
jno
dec
mov
inc
imul
and
sub
out
jmp
adc
ljmp
stos
mov
pop
sub
outsl
push
jae
test
jne
xor
out
shll
popf
cmp
outsb
mov
mov
data16
jge
jno
fs
std
add
ret
and
lods
jp
mov
pop
jp
xchg
and
inc
andb
clc
aas
mov
inc
dec
jae
gs
mov
pop
or
insb
fdivl
aas
mov
inc
movsl
cmpsl
insl
lret
pop
pminub
insb
mulb
sub
aas
inc
push
cmc
cltd
jecxz
pop
loop
addr16
out
ds
pop
push
pop
subl
mov
xchg
push
ret
mov
lods
adc
fcomi
test
bound
mov
pop
xchg
xchg
mov
cmp
cli
popl
popf
aas
inc
inc
push
mov
jle
mov
in
leave
mov
inc
fcmovb
xchg
lds
push
test
movsl
xorl
andl
decb
push
push
add
sti
insb
mov
dec
sbb
loop
sub
nop
rclb
arpl
lods
jne
xchg
xchg
add
pusha
dec
imul
gs
inc
int
sub
xchg
jl
pop
push
iret
lds
mov
mov
pop
pop
cmc
lret
clc
imul
push
sub
nop
cmpsl
pop
cmpsb
arpl
mov
bound
fadd
repnz
fadds
das
sub
mov
or
loop
leave
add
test
jb
bound
sti
rorb
jle
scas
cli
cmpb
add
adc
jmp
ret
push
xchg
cwtl
rcr
jmp
scas
mov
test
jecxz
mov
pop
xchg
nop
ds
out
aam
ds
mov
inc
aas
scas
mov
daa
aad
stos
popa
lods
fwait
xchg
adc
imul
mov
loopne
cld
push
xor
stos
sub
mov
cmpsb
sbb
adc
push
test
jle
and
lea
test
leave
inc
mul
push
inc
fwait
pop
push
mov
insb
ficoms
pusha
and
pushl
dec
dec
jle
jae
xor
xchg
mov
and
or
adc
insl
inc
arpl
in
rdmsr
aad
sbb
sub
jbe
cmp
adc
xchg
gs
xor
jle
out
mov
cs
xchg
insl
jne
xlat
xlat
stos
loope
ret
fs
mov
movsb
in
adc
lods
mov
mov
and
pop
sar
std
movsb
xchg
xor
dec
sub
mov
js
push
in
rolb
push
rcll
ja
andb
cmp
sti
aad
flds
inc
xor
dec
xor
mov
fwait
or
lret
lahf
iret
rcl
inc
cltd
add
jb
das
cmp
bnd
sbb
adc
js
pop
dec
pop
mov
ss
mov
cmpsl
popf
mov
in
test
insl
rorb
out
mov
out
push
cmp
cmp
xchg
idiv
mov
push
xchg
jg
add
inc
jns
adc
adc
or
push
fsubrs
pusha
popf
pop
fwait
movb
js
int
fs
cmp
stc
jno
pop
call
adc
sub
cmp
or
push
data16
lds
cmp
jecxz
xor
cs
push
add
pushf
sub
pop
test
xchg
in
sbb
insb
aas
out
mov
fildl
push
sbb
addr16
jle
sub
push
insb
cwtl
xlat
lods
cmc
sub
jns
loop
andl
leave
pop
xchg
dec
into
pop
mov
test
adc
dec
loopne
repz
pop
in
int
or
ret
mov
arpl
xchg
aam
stos
jg
pop
mov
mov
jne
pop
adc
sahf
std
stos
inc
loop
pop
ss
iret
insl
lcall
into
sub
es
icebp
fdivr
or
nop
pushf
cmp
dec
cld
xor
inc
out
mov
jnp
sbb
rorb
loope
outsb
fdivl
je
or
ss
jl
adc
mov
adc
stc
add
pop
mov
or
jle
ss
and
mov
dec
inc
sub
xchg
lahf
je
lods
adc
nop
ret
adc
dec
mov
ja
adc
sbb
mov
xchg
das
roll
les
subl
cmp
mov
jl
cli
testb
negl
pop
loope
and
mov
xchg
gs
mov
enter
mov
cld
int3
out
and
fwait
stc
pop
rcr
adc
push
bswap
loop
shrl
icebp
iret
mov
lahf
in
frstor
lea
jg
aaa
daa
ja
aad
xchg
adcb
dec
dec
cmp
ret
dec
sub
xlat
cmpsb
xchg
out
leave
mov
jl
pusha
cmp
fstpl
sub
push
or
lods
inc
jecxz
mov
jb
movsl
pop
add
and
mov
push
imul
inc
popf
pushf
pop
jno
and
cmp
sub
mov
out
jno
mov
push
sbb
inc
jl
bound
call
push
mov
pop
lods
and
adc
push
push
lret
testl
faddl
pop
mov
pop
fists
rcrl
jno
sub
lret
decl
inc
jbe
andl
xchg
mov
xchg
lods
cmc
add
in
stos
xchg
or
aad
imul
loop
popa
sbb
movmskps
int
mov
xchg
xor
loope
mov
je
mov
loope
push
in
addr16
cmp
sbb
and
jge
ret
push
imul
stos
std
outsb
lret
shll
ret
jg
jno,pn
xor
sbb
aam
imul
mov
addr16
inc
mov
movsl
movsb
bound
xchg
in
std
clc
mov
inc
inc
addb
dec
jg
add
cmpsl
cmpsb
arpl
push
daa
mov
iret
jbe
push
add
dec
xor
shlb
xor
push
imul
adc
in
push
insl
inc
xchg
popa
lcall
dec
pop
iret
ja
pop
call
pop
adc
xchg
dec
inc
repnz
or
push
out
mov
fdivrs
pop
call
lds
pop
dec
and
pop
adc
cmpsl
test
imul
sbb
fmull
stos
lods
clc
lret
leave
cvtdq2ps
pop
lret
push
jmp
int3
nop
and
mov
sbb
pop
rorl
cmp
xor
xor
nop
mov
inc
xorb
inc
rcrb
xchg
in
ds
or
fidivl
push
into
mov
fwait
mov
aas
bound
aas
test
outsl
rcrb
xchg
int3
arpl
sbb
sub
ret
aad
inc
cmpsl
xor
mov
hlt
xchg
jns
in
movsb
in
mov
add
pop
inc
daa
popf
cmp
in
mov
das
fdivrl
sub
rcr
fcomps
inc
icebp
dec
cmp
cmpb
xchg
sub
loopne
stos
pop
lret
xchg
xchg
adc
xchg
arpl
js
jle
and
cmpsb
aaa
movsl
sbb
sub
nop
push
int3
xor
fadd
shrb
aaa
push
push
push
ret
xorl
cmpsl
subl
fnstenv
adc
jl
and
rclb
dec
test
push
mov
mov
inc
inc
rcr
popf
add
addr16
movsl
test
mov
pop
dec
lods
int3
fisttpl
pop
ret
movsl
cmp
sub
sbb
gs
mov
mov
add
dec
dec
call
push
cli
sub
and
aad
adc
mov
rolb
fwait
xchg
xlat
jge
movsl
mov
xchg
jbe
dec
and
or
xor
mov
bound
movsb
or
mov
push
or
dec
jbe
ss
ror
cmpl
dec
cli
test
inc
daa
lret
push
dec
mov
jbe
lcall
shll
shl
mov
in
dec
and
xor
push
inc
cmc
out
sarb
ss
dec
imul
mov
xchg
jmp
shlb
loopne
dec
mov
mov
push
xchg
stos
cmc
rcrl
fimull
out
mov
mov
iret
lds
aad
push
jge
daa
dec
into
icebp
stc
dec
clc
sahf
mul
push
test
cmpsb
xchg
inc
and
and
test
pop
mov
loope
jecxz
xlat
mov
enter
cmp
sti
movsb
jle
or
in
mov
lock
inc
aad
sub
pop
mov
or
mov
sahf
call
adc
aad
adc
dec
popa
inc
inc
in
insl
jnp
in
fldenv
mov
lret
pusha
fnstsw
shlb
mov
push
in
mov
sbb
mov
cmp
dec
mov
loope
arpl
sbb
lret
ret
scas
pop
sbb
insb
push
sahf
xchg
push
sbb
and
xchg
xor
mov
jne
into
cmp
adc
add
ss
sub
mov
fs
pop
cmp
aad
xchg
rorb
mov
xchg
leave
aam
int3
scas
pop
sub
movsl
movl
inc
cs
test
dec
iret
out
loop
inc
inc
fxch
stos
fistpll
std
es
outsb
int
xchg
loopne
lret
int3
stos
out
test
push
mov
xor
adc
jo
xor
int3
mov
test
adc
xchg
jecxz
and
sahf
mov
mov
sub
sbb
sbb
jae
inc
sub
xchg
xchg
mov
into
sarl
js
ja
sbb
out
fwait
iret
and
inc
mov
cmp
mov
imul
push
imul
mov
pop
cltd
lcall
cmp
mov
xor
dec
dec
mov
divb
jge
pop
lods
xchg
mov
push
add
into
add
out
lret
xor
das
mov
and
mov
cmp
pushf
loope
inc
imul
fidivs
shll
sbb
and
sarl
pop
jnp
jno
es
push
ret
push
or
xor
ljmp
dec
addr16
ret
jns
popf
lcall
rol
sarb
testb
bound
ljmp
jb
sbb
jmp
lock
repnz
jmp
outsb
out
scas
in
push
imul
mov
fildll
pop
cltd
pop
sub
fildll
sbb
pop
inc
insb
adcb
mov
enter
inc
lret
rclb
push
loope
mov
rcll
gs
hlt
mov
test
incl
inc
daa
jne
sub
icebp
add
lcall
mov
and
jbe
add
and
aas
and
xor
pop
loop
add
mov
jecxz
jbe
add
testl
jae
pop
sti
mov
adc
clc
fadd
sti
mov
test
rcrb
inc
jg
sub
or
sahf
xor
scas
push
xlat
mov
icebp
push
or
mov
icebp
mov
je
xchg
or
loopne
mov
ja
pop
fnstsw
adc
shrl
fnstenv
push
mov
or
in
xor
cmpsl
iret
and
sbb
into
mov
pusha
in
pop
dec
clc
mov
in
mov
scas
mov
out
stc
mov
push
and
arpl
cmp
movsl
push
stc
jle
stos
mov
inc
mov
popf
xchg
repnz
push
and
insb
es
xlat
cmpb
dec
jp
mov
or
xchg
sbb
add
mov
inc
mov
leave
cs
xor
mov
mov
sbb
divb
arpl
movsb
adc
dec
icebp
cmpsl
inc
lcall
sbb
mov
aam
pop
fldenv
enter
cmp
mov
and
sar
mov
cli
ret
inc
in
pop
mov
cli
or
sub
sti
add
sbbl
pushf
push
cmp
adc
mov
divb
into
mov
dec
fcomip
xchg
inc
pop
mov
sbb
dec
pop
mov
mov
out
dec
out
xor
out
test
pop
rolb
mov
cmp
cmpsb
repnz
fwait
div
and
mov
jl
sbb
movsb
in
add
out
stc
enter
adc
xor
cmc
xchg
jle
add
inc
xchg
and
orb
les
lret
pop
nop
adc
cmova
addb
push
negb
pop
add
push
push
mov
xchg
ljmp
out
int3
sbb
idivb
jle
xor
aam
lret
cltd
sbb
popf
sbb
shrl
adcl
notb
loop
add
jecxz
test
lahf
pusha
decb
subl
cmp
mov
int
test
dec
push
sub
popf
jle
das
push
cmp
ss
decl
pop
test
rorb
int3
or
popf
add
jnp
mov
scas
out
mov
jnp
jnp
gs
jl
xchg
ss
jo
adc
addl
cmp
or
inc
cmpsl
mov
xchg
jecxz
sub
adc
mov
sub
ret
test
jno
mov
cmp
ljmp
and
push
test
addr16
or
loopne
rcrb
jp
pop
jmp
es
fisttpl
clc
jo
sahf
jnp
mov
sub
imul
test
mov
stos
xchg
hlt
inc
js
or
and
push
push
xor
inc
add
mov
pop
mov
pop
jmp
mov
jecxz
cmpsb
je
setb
inc
pop
loopne
mov
inc
in
add
sub
je
icebp
xchg
fdivrl
das
cmp
cmp
dec
pop
inc
sbb
xor
daa
jae
rdpmc
pop
jae
adc
mov
movsl
adcl
add
push
call
scas
add
out
cmp
lcall
jnp
sbb
dec
and
mov
adc
ret
scas
std
rorb
push
bound
mov
cmp
cli
jmp
xor
pop
xchg
dec
rorl
lret
not
mov
and
jge
xchg
jl
cs
lods
mov
pop
mov
mov
mov
hlt
xchg
push
ja
stc
add
pop
lods
inc
fstpl
and
aas
shrl
jno
inc
hlt
out
mov
es
mov
mov
pop
fdivp
adc
mov
xchg
loopne
outsb
nop
push
test
sbb
notl
dec
push
lds
pop
lea
jmp
loope
add
adc
jb
xchg
push
orl
pushf
sarl
cmp
movsl
push
mov
ret
ss
in
loopne
mov
dec
faddl
jge
mul
sub
out
adc
cld
mov
mov
ds
out
push
mov
or
mov
and
negl
andl
sub
rorl
es
int3
adc
std
sti
push
subb
dec
aas
adc
mov
cmpsb
xor
or
inc
lret
xchg
push
ss
imul
clc
cwtl
pop
dec
mov
lret
pop
ret
push
repnz
inc
int3
test
xchg
pop
cmp
jmp
fwait
and
mov
jae
dec
int3
sbb
aam
pop
mov
hlt
in
cld
sbb
sub
ja
mov
iret
ja
add
fistps
test
imul
mov
orl
add
int
mov
shr
or
mov
sbb
aas
dec
mov
in
bound
push
int3
fistpll
mov
inc
sbb
dec
gs
mov
xor
cwtl
push
mov
gs
push
or
mov
cmp
adc
daa
xchg
xchg
shll
out
test
jne
add
sahf
xor
test
cmp
insl
push
mov
outsb
xchg
sbbb
sbb
jne
int
xorb
nop
ret
pusha
mov
repnz
sub
cmp
push
cmpsb
inc
movsl
mov
push
in
sti
xchg
int3
aas
jp
cmpsb
xchg
sub
mov
test
movsb
xor
gs
cmp
scas
daa
jno
shrb
fs
inc
and
popf
sti
inc
dec
sub
sahf
add
fisubl
cmp
iret
mov
imul
lods
out
out
dec
cmp
roll
mov
sbb
dec
lahf
shlb
xor
mov
push
sub
xchg
shrb
push
inc
scas
adc
movsb
inc
dec
or
sbb
in
dec
jge
addl
popf
das
out
lcall
movsl
and
mov
mov
inc
lods
es
jbe
or
sub
xchg
mov
stos
adc
push
mov
orb
cmpsl
cmp
and
negl
popf
mov
cmp
lods
xchg
xchg
cmp
test
inc
hlt
clc
movsb
pushf
rcll
in
xchg
or
cld
out
je
int3
lret
sbb
push
fwait
xor
lcall
add
ljmp
into
pop
cld
cwtl
sbb
add
xchg
movsb
bound
es
inc
jl
xor
test
and
nop
daa
jnp
lahf
sub
push
lock
enter
push
push
rcll
lea
icebp
xchg
mov
inc
dec
shll
mov
scas
pop
xchg
icebp
sbb
and
sbb
adc
sbb
push
and
lahf
pop
aad
or
mov
dec
call
sti
movsb
int
pop
mov
fcomp
jmp
lea
daa
dec
inc
addr16
xchg
fcomp
fmuls
mov
outsl
mov
lods
add
inc
sarl
aad
das
stos
sbb
push
bnd
adcl
xchg
dec
mov
outsl
mov
push
sub
call
mov
mov
jns
shrb
and
xor
mov
and
clc
xlat
or
es
mulb
ss
mov
xchg
cs
push
dec
icebp
mov
ret
lods
adc
dec
dec
xor
lock
mov
sahf
or
sub
lods
jbe
dec
inc
ja
jnp
sub
pop
inc
mov
aam
rorb
jle
pop
mov
mov
shll
pop
xor
int3
mov
in
mov
addl
cs
adc
adc
es
sub
movsb
hlt
mov
mov
fisubl
push
jp
adc
sbb
dec
push
jo
pushw
ja
push
push
loopne
mov
test
les
icebp
test
out
xchg
sub
lret
mov
aaa
out
xor
test
ja
push
xor
imul
fcomps
sub
or
ficomps
ja
ja
lcall
adc
std
dec
push
int3
or
sarb
std
addb
cmc
or
movsb
adc
dec
push
ret
sub
aam
push
mov
ss
ljmp
into
push
xorl
or
ss
cbtw
adc
std
in
sbb
mov
addb
jmp
push
pushf
loope
jo
xchg
leave
int3
divl
test
mov
mov
and
shll
mov
mov
clc
addl
cmpsb
ret
push
imul
sbb
mov
pushf
add
test
int
mov
cmp
push
addr16
inc
nop
mov
and
push
icebp
lods
mov
loopne
popa
jl
stos
fbstp
into
outsb
inc
adc
inc
sarb
stc
cmpsb
stos
lods
cmc
pop
ljmp
dec
mov
aaa
mov
sti
sbb
xchg
pop
movsb
add
aas
scas
les
lods
sarl
mov
insl
mov
iret
fldenv
scas
repz
pop
stc
ficomps
stos
test
inc
addr16
fwait
cmc
orl
jmp
pop
pop
xchg
jmp
add
fs
inc
in
sar
and
cli
aas
call
pop
jge
nop
fidivrs
cmp
jbe
iret
fs
nop
sub
jge
jp
mov
lods
xchg
clc
sub
dec
mov
or
adc
aam
lret
test
inc
or
decl
das
mov
aaa
and
or
xor
test
mov
lea
or
out
rolb
rorb
fidivrl
jl
dec
jnp
mov
push
int
out
dec
out
hlt
sahf
hlt
stc
mov
test
xor
sub
int
dec
push
adcb
lea
call
sar
ja
mov
in
add
cwtl
jmp
xchg
mov
mov
aaa
dec
fisubl
je
adcb
mov
mov
roll
leave
arpl
jb
lret
repnz
arpl
cmpb
add
xchg
ds
test
inc
dec
mov
sub
mov
cwtl
mov
addr16
cld
or
sbb
fmuls
xor
add
mov
out
sub
ret
push
push
pop
imul
out
sti
jmp
add
xor
jo
mov
lods
roll
xlat
fldt
cmp
jns
sti
in
int
scas
nop
push
int
cmp
mov
mov
enter
pop
in
adc
push
sub
sub
xor
push
mov
cmp
test
test
aas
xchg
add
add
or
push
inc
lret
mov
hlt
aam
pop
cmp
inc
add
rdmsr
push
mov
je
div
mov
push
xor
inc
mov
xchg
and
fwait
sub
fwait
dec
mov
sbb
jne
sbb
mov
fldl
mov
adc
pop
inc
mov
push
fisttpll
sub
push
adc
mov
mov
int
xchg
or
push
mov
cli
push
pop
add
and
rcll
mov
xor
mov
mov
jo
scas
cli
imul
lahf
adc
sti
sbb
arpl
add
push
cmpl
roll
jns
inc
pop
frstor
fistpl
sbb
add
pop
shl
cld
lods
push
jo
dec
adc
mov
out
nop
out
dec
imul
and
arpl
out
push
sarl
aas
and
ss
dec
outsl
xchg
dec
ret
sub
mov
xchg
test
add
pop
xchg
xor
xchg
pop
mov
stc
push
jbe
pop
add
aad
adc
incl
pushf
jecxz
test
mov
clc
inc
mov
inc
pusha
es
pusha
aas
imul
fcoml
ljmp
or
jne
mov
jmp
push
enter
jno
das
sub
or
adc
sbb
push
popa
lret
cmp
fcmovnbe
adcb
mov
mov
sub
lret
sbb
and
mov
cld
lods
mov
mov
mov
sti
fwait
inc
sbb
out
pop
out
adcl
cwtl
inc
mov
outsl
jge
sub
lea
stc
xchg
xchg
pop
inc
movsl
insb
mov
inc
iret
stc
es
mov
daa
xchg
adc
cld
push
sti
in
add
mov
movsb
fsubrs
push
inc
mov
repz
bound
xchg
xchg
scas
jecxz
and
nop
xchg
and
fnstcw
cmp
pop
mov
mov
insl
mov
jle
dec
jns
adc
mov
dec
pop
mov
or
imul
int3
popa
fistpl
and
lcall
or
fcoms
push
hlt
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
jmp
add
test
pop
add
push
popf
and
adc
fcoms
sarl
sahf
jnp
neg
mov
sbb
push
shrl
adc
dec
xchg
mov
push
mov
aad
cmc
mov
add
adc
shlb
mov
pop
fisttps
stos
leave
add
cmpl
xchg
shr
xor
mov
sub
pop
mov
loop
fmul
dec
jb
xchg
cmpsb
mov
ffreep
cmp
pop
sti
icebp
xlat
out
roll
sub
lods
bound
mov
cs
jb
icebp
lahf
scas
dec
dec
cld
sbb
aaa
daa
ret
adc
call
xlat
fcmovu
insb
fdivrp
cmp
call
iret
dec
adc
aaa
and
invd
xor
aaa
pop
ljmp
movsb
ljmp
scas
or
aam
xchg
cmp
sub
jno
imull
sbb
xchg
push
adc
or
popa
shlb
loop
gs
dec
in
int
pop
repz
mov
push
push
sbb
and
cltd
push
mov
sub
sub
xor
cmp
inc
mov
cmc
xchg
sub
lods
cmp
ss
cmpsl
nop
push
sub
rcrb
insl
stos
jp
xchg
mov
test
sbb
mov
jns
push
decb
into
jge
movb
and
mov
rcr
jp
cmp
mov
adc
and
mov
xchg
inc
cmp
dec
inc
loopne
aas
fiadds
dec
pop
cld
sub
pop
dec
std
mov
pop
adc
lods
fistpl
insb
int3
pop
std
subl
dec
aad
xor
jns
dec
xor
fisttpl
imul
and
mov
das
sub
dec
xchg
std
pusha
es
sbb
pop
pop
jg
pop
add
push
xchg
mov
repnz
sbb
cmp
mov
mov
cmp
dec
xchg
pop
enter
adc
pop
addl
push
cmp
out
cltd
fidivrl
adc
pop
in
jbe
inc
push
in
test
into
mov
jle
mov
cmp
andb
cwtl
fldt
rol
jns
mov
lock
xchg
add
push
cli
lods
sub
fwait
jp
mov
inc
fisubrs
inc
ljmp
inc
adc
xchg
aaa
inc
lods
mov
gs
mov
mov
lret
fs
cmc
pop
pushf
mov
mov
mov
or
pop
insl
mov
ljmp
ret
pop
adc
mov
lcall
in
lods
mov
xchg
pop
test
inc
cli
or
sub
shl
lahf
mov
sahf
idivb
outsw
js
mov
mov
int3
inc
cld
insb
add
js
and
or
jle
pop
nop
roll
bound
nop
push
into
xchg
jecxz
mov
inc
insb
xchg
and
or
lret
shll
xor
mov
subb
mov
push
push
mov
clc
push
sahf
js
mov
out
int
jo
aad
mov
cld
lret
shll
sbb
cmp
sub
cmp
push
fnstsw
push
adc
cmp
cwtl
xor
js
outsl
pop
dec
lock
inc
fwait
ljmp
lahf
cmp
ret
pop
test
lcall
repnz
jae
pop
and
movsb
loopne
add
sbb
jle
jmp
fdivl
adc
lods
rcrb
jg
lret
xor
fcoms
or
fstps
inc
xor
add
jp
sbb
into
insl
mov
mov
jno
das
push
mov
test
int3
ret
jmp
fdivl
pop
adc
sahf
in
dec
hlt
arpl
jge
sub
or
out
dec
stos
mov
jbe
add
stc
jg
mov
push
jp
sub
xchg
sahf
jo
aas
mov
push
and
jp
xor
mov
int
ret
imul
scas
xor
ret
iret
imul
push
clc
add
icebp
addr16
lcall
sub
jg
repnz
mov
call
je
mov
cs
dec
in
mov
mov
mov
je
mov
aaa
jb
pop
js
cmp
ficoms
out
scas
insb
int3
in
cmp
dec
jno
push
rcrb
cli
jle
xchg
xchg
nop
xchg
les
sub
jge
int
jp
daa
pop
xor
inc
cmp
jae
inc
in
push
cmp
sbbl
add
mov
push
imul
ljmp
es
pop
xchg
dec
pop
lret
scas
mov
mov
fisttpll
or
jbe
sub
and
pop
out
or
mov
inc
sub
jl
mov
adcb
test
jge
sbb
faddl
sub
jmp
shll
ljmp
lods
dec
test
movsl
mov
divl
das
ret
js
stos
cmp
scas
and
add
bnd
xchg
cmp
xor
into
loopne
adc
cmp
movsl
mov
jbe
jl
rorb
hlt
out
mov
movsb
cmpsb
add
insl
mov
aad
fiaddl
out
mov
push
push
adc
mov
aas
fdecstp
mov
das
adcb
xchg
decb
xchg
dec
xchg
and
test
in
insb
mov
popa
push
enter
sbbb
subb
int3
pop
mov
push
xchg
fincstp
dec
loopne
lock
xchg
in
fstps
cmp
aas
add
call
daa
scas
addr16
repz
aad
mov
mov
push
arpl
push
lcall
hlt
sbb
jne
jno
xchg
xchg
push
shll
fcmovb
inc
jmp
xchg
lret
jnp
mov
aam
inc
lret
cli
inc
inc
daa
or
jge
imul
scas
mov
leave
inc
xor
xchg
decl
cli
stc
mov
pop
movsl
pop
cmc
hlt
pop
aaa
adc
cmc
iret
sti
sub
das
inc
mov
jmp
outsb
push
sub
fprem1
or
and
cs
xlat
and
fstps
pop
dec
fistpll
sbb
addb
arpl
or
mov
rorl
push
and
loop
outsl
jecxz
or
push
xchg
cmp
sar
or
inc
loope
adc
mov
stos
push
xchg
mov
jno
psubsb
js
daa
mov
repnz
xor
cmp
retw
add
jb
faddl
add
out
cmp
dec
xchg
out
xchg
dec
xchg
mov
sub
lahf
faddl
cmp
cmp
mov
cltd
mov
add
data16
cmpsl
and
shrl
hlt
neg
cmp
inc
sub
jecxz
repz
scas
xchg
cmp
rcrb
sti
pop
lcall
pop
pop
xor
jp
push
jbe
push
aas
minps
push
js
jne
xchg
mov
nop
jge
adc
arpl
adc
pop
out
cwtl
dec
sub
icebp
add
int3
rol
out
push
mov
ss
sbbb
aaa
sbb
dec
call
fwait
into
xchg
lds
jecxz
fsubrs
pop
cmp
mov
aam
gs
push
xor
mov
jne
jae
sub
cli
inc
inc
in
stos
push
leave
sbb
sub
dec
pop
and
lcallw
pop
out
and
pop
xchg
dec
rcll
jl
sti
sti
in
cmp
sub
or
mov
mov
mov
pop
clc
jb
push
pusha
gs
sub
mov
fimuls
or
leave
jns
bound
es
ljmp
mov
sahf
add
jmp
loope
mov
repnz
sbb
mov
call
data16
inc
inc
gs
jg
ljmp
inc
stc
int
adc
sbb
nop
std
or
fwait
add
dec
gs
in
dec
shrl
adc
loop
sbb
test
insl
sub
daa
mov
xor
insl
inc
jmp
sub
js
pop
pop
jecxz,pt
test
daa
mov
out
mov
pop
jb
cmpl
jnp
gs
mov
add
sarb
jbe
mov
mov
lcall
or
jno
test
add
mov
mov
push
push
xchg
dec
jns
cmp
movsb
mov
icebp
push
cmp
mov
jb
mov
xchg
ret
push
movsl
iret
or
xchg
ret
jns
jecxz
adc
xor
mov
sub
out
fimuls
push
sub
and
xlat
pop
jp
fiadds
jecxz
or
in
repz
lahf
add
adc
cld
pop
lret
fucom
jno
mov
inc
inc
push
sub
add
mov
repnz
cmp
adc
in
aaa
pop
es
pop
jp
cmc
popf
daa
mov
push
adc
in
sub
inc
mull
ss
pop
mov
inc
sarl
dec
and
stos
xlat
pop
pusha
sbb
and
mov
mov
lahf
or
movsb
into
icebp
jnp
pop
outsl
scas
lock
or
cmp
mov
outsl
and
pop
cmp
jno
aad
jecxz
adc
jl
mov
add
sub
clc
out
das
sub
mov
push
mov
repnz
sub
daa
stc
mov
push
ds
dec
jmp
cmp
ret
jle
xlat
sbb
in
fs
xchg
out
jne
push
dec
jo
loop
or
repz
mov
imul
es
xchg
stos
rorb
mov
xchg
jg
xor
add
fiaddl
or
sbb
sub
icebp
popa
icebp
dec
out
mov
jns
add
lods
sub
add
pusha
in
out
popf
sbb
in
inc
pop
repnz
notl
or
jl
xchg
popf
xor
leave
xor
fcoms
nop
add
mov
sub
cmpl
jmp
mov
call
mov
pop
or
negb
sub
dec
aam
outsl
dec
notw
sub
push
sub
in
cld
scas
fsubr
fmuls
cmpb
fs
std
push
xor
hlt
push
jnp
shlb
adc
and
outsb
mov
lods
adc
mov
ljmp
fisubl
mov
mov
pop
mov
sbb
je
dec
dec
cmp
push
jl
pop
or
mov
xchg
push
rcrl
les
fisttpl
sti
lret
xor
pop
fimull
loop
cmp
mov
jne
xchg
ds
dec
cs
sbb
and
insb
out
aad
adc
nop
testl
pop
imul
rcl
mov
inc
adcl
test
jmp
xchg
nop
pop
pop
sbb
ficompl
test
sub
shlb
ret
pop
inc
repnz
jne
std
lahf
repnz
cld
sbb
adc
into
add
xor
and
lock
and
add
xor
sbb
dec
push
add
jmp
cmpsb
push
cmp
mov
out
je
mov
cmp
xchg
mov
aaa
pusha
add
mov
jnp
data16
mov
xor
xchg
mov
sub
fisttpl
mov
pop
lods
push
into
into
ror
dec
out
ret
int
fwait
leave
push
push
loop
lock
repz
stos
mov
cmp
ss
add
fs
push
in
test
jge
xchg
je
mov
in
in
ret
push
push
sbb
mov
pop
adc
jecxz
ja
insb
adc
dec
scas
add
test
xchg
inc
push
test
sbb
inc
out
sbb
jb
sub
dec
pop
popf
int
dec
jae
xor
cli
and
cmpsb
adc
in
jns
cmp
gs
dec
call
into
cld
fisttpl
jmp
jg
push
rcrl
dec
mov
push
inc
jp
dec
insl
mov
mov
insl
leave
aas
out
sub
test
cwtl
lea
xchg
xor
sub
and
cmp
push
stc
in
iret
loope
or
push
fsubs
pop
push
in
push
rorb
jb
fs
xor
cli
rcl
stos
push
push
pop
jae
pop
inc
cmovle
rclb
cmp
in
adc
ror
mov
mov
cmp
fidivs
mov
fists
sbb
pop
inc
or
fcomip
dec
aas
lcall
inc
add
sub
push
lret
xchg
out
lret
cmp
aad
or
popf
lret
and
in
bound
ret
daa
mov
add
xchg
dec
mov
stc
lret
mov
lahf
jno
inc
fs
adc
enter
dec
jns
mov
dec
sub
lret
cmp
lea
or
jae
stc
pushf
sub
adc
std
adc
mov
jae
adc
test
xchg
adc
es
mov
and
push
aam
psadbw
dec
pop
xchg
xor
std
cltd
cmp
sahf
popf
test
mov
fldenv
mov
mov
jne
fidivs
jno
cltd
mov
push
lds
sbbl
mov
pushf
out
pop
cmc
in
stos
stc
mov
filds
js
sbb
sarb
jmp
out
lret
inc
jg
cs
xor
push
sub
loope
repz
movsl
fs
jb
sbb
daa
xchg
fbld
int
dec
mov
aas
cmpsl
jno
jmp
push
xchg
add
sub
mov
lret
addl
fbld
daa
lds
cwtl
mov
das
add
icebp
scas
andb
into
or
retw
lret
xchg
mov
in
into
pop
dec
outsl
dec
or
ljmp
in
jbe
push
in
cld
fdivrl
or
add
jb
movsl
sub
movsb
xchg
sbb
dec
dec
add
stc
sub
push
subb
cmp
push
dec
mov
pop
xor
and
jbe
ss
push
in
lock
dec
iret
push
mov
or
enter
xor
inc
mov
xchg
fistpll
ficomps
mov
mov
mov
sub
add
xlat
loop
jl
ja
add
pop
fs
pop
jle
gs
jae
push
std
nop
ljmp
jno,pt
adc
push
sub
repnz
cmp
inc
hlt
adc
in
xor
dec
lods
push
scas
mov
and
cltd
out
std
ds
lea
xchg
testl
in
xor
inc
mov
sub
leave
cwtl
dec
addl
test
adc
jmp
xor
cmp
jnp
ret
or
std
xchg
test
push
fwait
xchg
dec
arpl
xchg
loopne
cmc
mov
sbb
ret
adc
imul
mov
or
sbb
hlt
dec
pushf
div
jbe
outsl
lret
cmp
daa
inc
xchg
xchg
sub
sub
stos
mov
push
lahf
pop
mov
in
lock
push
out
inc
bnd
xor
in
push
sahf
jl
outsl
inc
enter
sbb
mov
icebp
ret
and
mov
adc
xor
stc
pop
je
add
dec
cmpsl
xor
dec
jns
inc
mov
and
test
daa
dec
cmp
stos
cmp
or
pop
in
push
lods
pop
pushf
push
lods
cmpsl
push
insb
mov
les
and
movsl
ss
inc
lock
mov
inc
mov
ucomiss
lret
sbb
jne
adc
cwtl
xchg
push
test
mov
rcll
roll
cmp
sub
dec
xor
mov
push
sbb
lock
in
inc
mov
ds
test
jnp
push
sbb
rol
mov
mov
or
push
and
sbb
scas
and
mov
mov
xchg
inc
adc
pop
loope
mov
jg
xchg
jbe
push
cli
or
adc
adc
stos
xchg
sub
nop
inc
add
aad
std
add
xchg
out
add
decb
mov
jecxz
cmc
dec
loope
push
jnp
inc
sbb
shrb
mov
jl
hlt
cld
xchg
xor
shl
sbb
sahf
es
test
sti
bound
test
je
dec
xchg
rcrb
ret
mov
sub
pop
xlat
js
add
mov
xchg
arpl
cmpsl
adc
out
push
dec
or
adcb
and
inc
cltd
addr16
cmp
repnz
xchg
lcall
popa
lret
lods
scas
xchg
jecxz
pop
xor
shrl
ret
nop
cmpsb
jmp
sbb
stc
cmp
add
aam
add
in
mov
divl
cli
in
stos
pop
insb
out
mov
cmpsl
mov
mov
jl
mov
aad
sbb
leave
pusha
pop
test
pop
movnti
pop
mov
inc
jns
push
mov
fcmovbe
lret
sarl
test
loope
inc
arpl
sbb
mov
orb
gs
jbe
mov
add
hlt
movsl
jae
sub
add
pop
cmp
sbb
mov
and
jns
and
dec
rorb
and
lret
mov
pop
mov
cmpsl
xlat
jmp
mov
push
fucomip
mov
mov
mov
jecxz
int3
sarl
out
jno
push
lret
push
jbe
add
pop
in
or
xchg
dec
int
adc
pop
addl
xchg
aam
ret
jno
ljmp
outsl
jmp
fdivrp
out
dec
ja
dec
or
cmc
add
jle
loope
jmp
in
gs
aas
test
sub
jmp
mov
sub
xchg
and
scas
mov
imul
repz
cmp
pop
or
pop
push
lret
jecxz
adc
jne
nop
xorl
or
pop
inc
pop
or
or
cltd
jns
imul
cltd
fcomps
sbb
dec
loopne
fldenv
xchg
xchg
jle
nop
add
lods
movsb
in
or
sbb
xchg
into
sbb
mov
jo
lock
xchg
push
jp
or
dec
xlat
aam
pop
out
mov
mov
and
movb
ds
xchg
cmp
aad
lds
shlb
pop
pop
cltd
push
adc
imul
push
lock
push
das
lret
mov
movsb
orb
xorl
stos
xchg
mov
cltd
dec
loope
sahf
gs
inc
mov
enter
inc
jo
add
neg
xor
push
mov
push
fwait
pop
shll
pop
mov
out
cmp
or
mov
push
sbb
shll
loop
push
mov
fs
rcrb
xlat
push
faddl
sub
push
jo
adc
cmp
test
add
imul
nop
in
mov
sub
cli
mov
iret
mov
adc
loope
pop
push
mov
mov
mov
dec
enter
adc
jmp
std
bound
inc
lods
push
mov
shl
dec
fdivs
dec
pop
mov
jnp
shll
sarb
or
loope
xchg
pop
jo
jl
mov
and
cmp
sahf
ret
in
decb
stos
cmp
mov
je
loopne
inc
out
mov
loope
sbb
mov
int3
daa
pop
jne
sub
aas
sbb
imull
jmp
hlt
setb
scas
push
or
stc
xchg
add
lcall
cld
jo
xorb
aad
mov
aas
leave
stos
iret
iret
jmp
xchg
or
addr16
add
xchg
cltd
xor
pop
cmp
xor
aam
mov
adc
xchg
add
pop
enter
in
out
sbb
outsb
repnz
aad
fisubrs
xchg
into
in
mov
shr
mov
inc
xorps
popa
xchg
les
cmp
xchg
mov
jp
lret
push
mov
add
scas
push
test
adc
outsb
std
jo
mov
or
adc
sti
aaa
pop
dec
pop
ret
cmp
mov
push
xor
sti
xlat
mov
jmp
pusha
add
fildll
jbe
adc
push
imul
fsubp
xchg
sub
aam
mov
push
std
and
sbb
das
test
inc
pop
sahf
cli
cltd
call
dec
into
add
mov
dec
mov
ja
adc
sbb
int
aas
mov
mov
jmp
dec
test
aas
ds
loop
ret
out
lahf
filds
add
cld
mov
int
pop
es
push
jl
push
push
inc
sbb
adc
cmp
sbb
inc
jge
enter
mov
inc
cmp
in
push
adcl
dec
sub
cwtl
ljmp
ss
lock
sbb
fcompl
add
xchg
mov
daa
mov
ja
dec
fninit
jmp
sarl
dec
js
dec
ljmp
or
mov
loop
test
push
add
add
dec
mov
push
popl
or
fiadds
sbb
loop
aas
inc
aad
add
mov
hlt
and
loopne
xchg
into
mov
fadd
inc
inc
cmp
vpshuflw
inc
mov
or
enter
loope
jnp
stos
addr16
mov
push
push
push
or
xor
adc
xor
inc
sub
add
add
in
repz
sbb
mov
or
push
pop
in
popa
rclb
adc
mov
fimull
fsubrs
sbb
lods
add
fsub
jecxz
insl
push
clc
or
mov
rcrb
fs
ror
cmp
add
negl
push
nop
inc
fsubs
lret
fstpt
pop
xor
loop
pop
push
sbb
mov
xor
pop
sbb
sbb
testb
pop
jle
arpl
stc
mov
jns
sahf
gs
addr16
jmp
and
in
lock
incb
or
pushf
dec
bound
xchg
scas
insl
jp
not
insb
aas
xchg
push
daa
inc
or
stos
and
cmpsl
loope
test
or
push
xlat
cltd
sbb
pop
into
pop
cmp
mov
inc
incl
xchg
push
and
mov
sti
mov
lds
push
mov
movsb
mov
inc
or
aam
sar
dec
das
test
imul
mov
xchg
xchg
sub
addl
test
idiv
sub
jge
lret
jg
test
jnp
jmp
adc
mov
or
mov
sti
les
mov
mov
repnz
fld
jb
mov
jo
sub
or
dec
sub
fidivl
jmp
xchg
pushf
or
aaa
jle
mov
mov
xor
std
xor
pop
pushf
in
cmp
dec
leave
sbb
mov
js
xchg
test
repnz
dec
std
jmp
sbb
push
xor
sahf
call
clc
out
mov
mov
insb
imul
ja
ret
mov
push
rorl
test
jmp
bound
sub
mov
pop
sub
mov
imul
adc
mov
xor
pop
cmc
pop
leave
rclb
fisttps
or
dec
mov
add
es
mov
fisttpll
int
mov
or
inc
cmpsl
pop
or
xchg
mov
lds
pop
loopne
mov
mov
mov
js
mov
movsb
stos
jne
inc
inc
bound
mov
mov
aaa
outsl
mov
mov
push
mov
cld
inc
popf
aam
js
pop
xchg
pushf
mov
fdivl
movsb
or
div
jl
out
in
ljmp
push
mov
lahf
sbb
inc
das
stos
jge
jno
shr
je
stos
add
lahf
loopne
fidivrs
inc
push
in
fs
lock
sub
ss
gs
mov
sbb
cmp
stc
aaa
stc
out
int3
mov
cs
jp
sarb
out
fldl
xchg
ret
sbb
xchg
pushf
shll
adc
or
and
xor
hlt
jp
dec
inc
mov
add
xchg
mov
fisttpl
cmp
rclb
fdivp
dec
sub
xor
fisubs
add
addb
arpl
aas
xlat
daa
es
and
cmpb
fists
and
mov
inc
adc
dec
out
test
mov
sbb
dec
leave
cli
push
ss
xchg
mov
insl
xor
push
je
scas
jp
mov
jge
jle
jnp
xor
cmp
out
dec
pop
insl
jne
stos
xor
add
mov
pop
dec
adc
fs
data16
adc
add
inc
sbb
aaa
push
lods
fnstenv
dec
push
rcrl
in
push
push
in
jno
sub
add
jle
sarb
sbb
ret
add
and
into
negb
ja
inc
aaa
stc
repz
iret
test
dec
jnp
push
test
leave
test
xchg
and
xchg
imul
popa
dec
pop
out
inc
add
ficoms
imul
dec
std
jns
daa
test
aam
dec
das
or
mov
mov
in
shll
adc
loopne
adc
xchg
mov
cmpsl
dec
iret
jecxz
inc
jbe
push
int3
pusha
out
inc
mov
out
jbe
fmul
cltd
push
xlat
jle
loop
inc
movsb
push
mov
jge
insb
xor
or
lds
sbb
stc
imul
dec
daa
pop
adc
inc
pop
jne
mov
test
add
subb
add
out
divl
outsb
mov
test
rcrl
jo
in
mov
out
daa
add
ljmp
daa
in
jle
pmulhw
xchg
je
or
addr16
movsl
xchg
icebp
push
rorl
push
test
xchg
cmp
in
dec
pop
imulb
pop
jne
jnp
push
fsubrs
dec
push
push
fcmove
mov
lret
jle
inc
fisttpll
push
mov
push
xorl
cmp
popf
cltd
std
inc
mov
dec
in
dec
imul
and
call
mov
sbb
daa
sub
pop
cmp
in
push
mov
jo
call
fcoms
cli
fisubs
lahf
shr
sbb
clc
mov
clc
call
bound
mov
pop
fs
mov
cmp
lds
stc
insb
sub
jbe
lds
es
test
stc
int3
mov
lahf
or
add
repnz
leave
test
shlb
ret
testl
ja
cmp
out
push
outsb
out
std
out
lds
push
or
inc
aam
clc
inc
pop
sub
lahf
mov
dec
insb
push
mov
push
xor
insl
and
aas
dec
push
lret
lahf
xor
shl
pop
popf
sub
cld
jl
out
loop
pop
or
mov
insb
ret
fisubs
out
sbb
popa
aaa
aas
and
xchg
lods
inc
lcall
loop
pusha
xor
xor
stos
in
pop
or
add
fldenv
pushf
mov
ret
test
aas
imul
sub
dec
inc
or
es
fucomip
adc
pop
mov
mov
test
dec
sub
push
call
add
add
xor
adcb
call
rcrb
sbb
mov
rorl
jno
inc
ja
push
add
mov
add
add
mov
jae
xor
sbb
sub
xor
jecxz
mov
dec
push
or
push
xchg
xchg
pop
or
das
push
rcll
addr16
push
ret
jne
fiaddl
ret
pop
mov
xchg
push
movsl
xchg
cmp
pop
xor
xor
mov
out
xrelease
jle
adc
cmp
jmp
cli
jp
pusha
ret
or
sub
stc
cmp
push
imul
xchg
xchg
iret
inc
mov
aaa
mov
loope
push
add
dec
mov
repz
in
stos
lods
ja
pop
sub
and
stos
xor
cmpxchg
jmp
inc
cmp
int3
push
and
mov
pop
push
push
fs
cltd
fs
fcomi
mov
lret
cmp
pop
adc
fucomi
les
mov
mov
jge
xchg
push
pop
lods
iret
pushf
cmc
pop
test
xchg
mov
inc
das
fistpll
fnstsw
and
xchg
into
mov
jmp
mov
std
sbb
mov
xchg
jp
mov
jbe
or
dec
pop
push
repz
fsts
repz
dec
jne
cmp
adc
or
mov
cli
xchg
cmp
fmul
pop
lret
cmp
call
push
outsl
mov
xchg
inc
rorb
inc
push
rep
jno
cmp
pop
enter
xor
sti
and
jns
mov
jge
add
sub
mov
shrl
inc
cmpsl
shrl
fwait
mov
pop
outsl
out
adc
xchg
not
loop
mov
or
jb
lcall
mov
mov
mov
hlt
rclb
pop
ret
stos
mov
mov
stos
jge
data16
jmp
jae
dec
xchg
fisubs
and
xor
and
jmp
pop
lcall
cld
push
adcb
cmp
lcall
pop
mov
cmpsl
into
mov
cltd
loopew
sbb
pop
rorl
mov
js
out
mov
push
hlt
lea
arpl
ret
int3
add
jbe
add
push
inc
xchg
bound
stc
arpl
mov
jno
dec
add
cmp
mov
imul
cmp
inc
hlt
int
sti
stc
or
or
pushf
call
aam
add
ds
jo
aam
ds
cmc
dec
sbb
arpl
iret
iret
pop
roll
insl
scas
mov
mov
and
cli
and
push
into
lock
lret
pop
fimull
movsb
out
add
jne
mov
rcrb
sbb
sub
clc
testb
shl
cwtl
pavgb
and
mov
insl
jns
dec
mulb
and
clc
and
fdivrs
xor
pop
fisubl
mov
jnp
rcrb
jae,pt
push
es
or
push
addl
inc
cwtl
js
xchg
cmp
jg
aam
lcall
jge
jecxz
lods
in
mov
arpl
pop
and
adc
mov
bound
or
or
les
adc
jg
lahf
xor
mov
cld
mov
jg
daa
daa
out
icebp
push
push
sbb
nop
dec
loopne
push
cwtl
test
xchg
push
inc
ja
xchg
scas
je
pop
jno
jb
incb
fcmovu
add
aam
ljmp
jmp
dec
mov
pop
fcoml
outsb
jmp
jg,pt
push
out
out
push
pop
inc
sbb
fwait
lods
inc
jmp
test
or
mov
in
mov
in
subb
rcrl
push
inc
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
sbbl
xor
ret
push
mov
sub
movl
adcl
push
sbbl
movl
addl
mov
subl
push
sub
mov
xor
adcl
push
mov
subl
add
subl
mov
mov
test
je
andl
mov
inc
mov
cmpl
jl
jmp
push
push
call
cmpl
jb
mov
sbbl
mov
mov
and
mov
xor
add
movzbl
sub
mov
mov
sub
mov
xor
orl
add
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
mov
dec
mov
jmp
mov
xor
sub
add
mov
sbb
mov
sub
xor
movl
add
mov
sub
xorl
lea
orl
xor
orl
xor
movl
cmp
je
mov
addl
xor
sbbl
add
cmp
jne
pushl
call
andl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
mov
mov
sbbl
xor
andl
add
cmp
movl
je
xorl
pushl
pushl
xorl
call
mov
mov
sub
mov
sbbl
xor
sbbl
add
movl
cmp
movl
je
movl
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
decl
mov
addl
add
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
addl
add
or
mov
sbb
mov
mov
add
movl
mov
jmp
add
mov
mov
add
mov
mov
and
mov
mov
xor
subl
add
cmp
movl
je
jmp
mov
and
mov
xor
decl
add
movl
cmp
mov
movl
je
andl
mov
xor
add
movl
cmp
movl
je
lea
xorl
push
pushl
sbbl
pushl
call
or
mov
sbb
mov
xorl
xor
sbbl
add
movl
cmp
movl
je
movzwl
mov
movzwl
mov
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
jmp
fbstp
cmp
cmpsl
fnstsw
fistpl
sahf
jnp
dec
mov
sar
ljmp
daa
dec
or
dec
iret
pusha
mov
mov
int
jo
stc
daa
sub
xor
push
bound
das
xor
push
scas
inc
inc
mov
mov
ljmp
das
fs
jp
addb
mov
inc
cltd
lods
shlb
outsl
cmpsl
jmp
iret
pop
pop
cwtl
adc
das
inc
fnsave
not
je
jae
push
adc
out
add
sub
test
adc
gs
lods
arpl
das
jp
mov
jecxz
sbb
punpckldq
pop
xchg
stos
xchg
mov
or
test
int3
arpl
dec
and
loopne
je
scas
sbb
push
test
dec
shll
test
mov
add
and
jnp
nop
push
adc
adc
je
mov
cmpsl
xor
lods
or
ja
popf
aam
dec
mov
pop
add
je
push
in
loop
mov
jecxz
in
dec
lcall
and
or
adc
sbb
add
shl
das
pop
and
das
loopne
out
loop
xchg
cmc
sbb
inc
sub
pop
mov
cmp
pop
pop
push
inc
or
aad
or
sbb
sbb
popf
xchg
and
adc
aaa
cld
inc
adc
sub
inc
pop
ss
in
ljmp
scas
cmp
mov
and
add
xor
stc
fsub
shrb
pop
and
dec
insl
pop
mov
or
and
sub
rcrb
mov
ljmp
test
mov
mov
daa
xor
mov
fisubl
aad
jae
push
sub
fbld
push
ljmp
and
lcall
repz
mov
aad
add
jmp
fsubrs
add
sub
xlat
sbb
lds
in
scas
sub
mov
dec
gs
enter
nop
addr16
aas
mov
sbb
popf
mov
and
add
les
adc
and
dec
sub
inc
jbe
jg
jb
mov
push
push
inc
test
ficoms
hlt
xor
xchg
aaa
jno
xor
adc
push
inc
in
dec
sub
xchg
push
movsb
andb
jl
lods
fcmovu
popa
movsl
stos
xchg
aaa
ret
rorb
dec
sbbb
imul
xor
mov
addr16
mov
dec
cltd
mov
out
mov
enter
push
gs
popa
clc
sti
pop
sbb
sub
jl
into
sbb
rclb
rolb
jbe
xlat
jmp
xor
jbe
scas
xlat
addr16
sub
arpl
nop
andl
dec
dec
xchg
das
std
add
cmpsb
aaa
or
dec
mov
ja
xor
adc
mov
dec
and
mov
movsb
mov
xor
rep
pushf
into
sbb
std
xor
adc
lret
sahf
mov
mov
bound
and
or
or
push
xchg
jmp
aas
or
aam
dec
jp
pop
mov
int
dec
xorb
add
sbb
insb
aas
flds
out
push
push
das
lcall
sti
or
arpl
push
jnp
int3
pop
lret
addr16
sarl
jne
das
lods
mov
out
jnp
xlat
add
push
shlb
notrack
push
xchg
aad
mov
inc
inc
data16
add
add
xchg
scas
gs
adc
add
movsl
push
out
xchg
fwait
xor
sar
insl
je
and
shll
xor
mov
cltd
fisubl
pop
inc
sbb
push
fcmovbe
or
pop
scas
xor
sahf
push
cvtpi2ps
pop
stos
lahf
fildll
jl
push
inc
jmp
cmp
sub
jg
adc
sahf
aam
pop
data16
leave
cli
rorb
or
scas
lods
adc
hlt
inc
dec
repnz
addr16
mov
std
sbb
cltd
jnp
leave
mov
push
decb
cmp
pop
jmp
decb
lds
bound
lret
xorl
xor
loop
jmp
clc
std
xchg
push
subl
js
pop
iret
scas
mov
lods
or
fstpt
in
out
cmp
icebp
push
fistl
jbe
sbb
pop
add
mov
dec
fbstp
testl
cltd
mov
cmp
fwait
jle
imul
outsb
pusha
jecxz
sbb
xor
jge
fwait
leave
inc
dec
and
jecxz
sbb
or
test
push
xchg
rclb
enter
outsb
xor
bound
jbe
fistpl
mov
push
or
push
sub
loop
push
pop
jae
orl
jle
jns
jo
lcall
mov
imul
jbe
jle
cmovne
or
out
mov
loope
pop
dec
test
and
mov
sub
inc
and
inc
add
xchg
push
push
cmp
in
xchg
sti
jecxz
sbbb
mov
pop
mov
outsb
sbb
popf
jp
sub
or
push
imul
sarl
stc
in
add
mov
add
das
dec
lds
ficompl
lea
adc
push
ljmp
cwtl
ja
lahf
test
push
mov
inc
stos
sub
lea
add
xchg
mov
fsubl
mov
cmpsb
push
cmc
and
xchg
jnp
mov
jo
mov
sahf
mov
xchg
push
sbb
insl
sbb
jp
push
cltd
aad
out
aam
adc
push
iret
add
test
mov
js
jne
jmp
or
loopne
iret
ficompl
fisttps
test
inc
sub
add
hlt
mov
or
js
adc
outsl
sub
sbb
pop
sub
lds
xor
and
xor
add
push
jmp
shlb
cs
mov
mov
in
sub
push
mov
add
xchg
and
shrl
adc
add
dec
add
fwait
adc
inc
pop
lds
xchg
out
std
ljmp
mov
adc
repz
sbb
dec
sub
mov
sub
or
xchg
movsl
xchg
jp
pop
insb
ja
sub
sub
imul
outsl
sub
inc
dec
mov
test
cld
push
mov
sub
and
pop
inc
mov
and
pop
cmpsl
mov
jo
mov
call
loop
mov
fwait
mov
or
cmp
ds
adc
je
mov
fcompl
insb
mov
shr
jmp
sub
mull
and
and
mov
xchg
and
sub
dec
lods
cmp
addr16
add
repnz
std
daa
sbbb
mov
sahf
push
repnz
xchg
push
add
test
xor
push
das
adc
push
es
push
add
aam
cmp
hlt
or
jno
aas
fcmove
ficompl
jp
push
push
les
mov
loop
sahf
pushf
out
ljmp
aam
jl
movsb
pop
adc
nop
adc
jns
jmp
jmp
mov
icebp
add
inc
enter
push
and
cmc
in
icebp
out
movsl
mov
pop
xor
repz
icebp
push
inc
jecxz
loope
lcall
sbb
mov
xor
icebp
cmp
cld
jg
gs
mov
popf
or
sbb
cwtl
iret
fstpt
ret
sbb
mov
push
loop
fcmovnbe
addr16
sub
aam
sbb
sbbl
iret
sub
adc
cmp
adc
test
push
push
xor
push
mov
outsb
ret
std
dec
fcomi
pop
xor
dec
dec
mov
adc
mov
adc
stc
dec
repnz
push
negb
repz
jp
int3
in
out
mov
mov
insb
xor
cmpl
inc
lcall
cmp
xchg
add
pop
cmp
xchg
cmp
cmpsl
xlat
xchg
stos
lret
jae
test
leave
mov
dec
shlb
mov
movsb
jmp
mov
cmp
mov
mov
sbb
sub
xchg
sub
lahf
xor
pop
pop
sub
cmpsb
dec
data16
in
cwtl
ret
xchg
mov
mov
adc
or
into
pop
sbb
mov
clc
jae
cli
mov
adc
fs
push
push
jnp
or
fisttps
in
jg
popa
sti
xchg
lods
mov
sub
dec
es
pop
mov
jno
in
jg
xor
hlt
inc
out
nop
xor
enter
add
into
inc
jmp
out
inc
xchg
push
sub
dec
and
lods
mov
shrl
cld
in
pop
je
cmp
mov
dec
popa
in
fldl
mov
push
lods
jle
lods
xchg
mov
mov
mov
add
cs
aam
sub
push
nop
push
out
out
and
rorb
daa
out
inc
xor
sbb
adc
lret
inc
int
ljmp
or
cmpsl
jbe
cmpsb
test
test
lcall
fs
cmp
jne
repz
add
das
outsl
dec
mov
clc
sub
test
inc
repz
insl
outsl
pop
inc
int3
je
cmp
dec
inc
inc
xchg
notb
jp
pop
cwtl
sbb
inc
xor
arpl
add
gs
test
xchg
jmp
into
icebp
ljmp
scas
push
dec
jp
mov
and
nop
addr16
dec
mov
stos
lret
repz
jp
inc
push
orb
movsl
out
push
rcrl
stc
insl
out
push
cmp
mov
insb
sti
dec
je
cltd
pop
stc
scas
int
or
mov
rcrl
mov
cmpsl
or
fbld
movsl
and
sub
test
sub
jecxz
push
sbb
add
cmp
xchg
mov
mov
xor
sub
scas
or
fst
shrb
fildll
mov
add
test
leave
adc
into
scas
inc
std
adc
mov
outsb
xchg
pushf
sti
adc
jo
inc
mov
lcall
out
fistl
jmp
cltd
adcl
fcmovnu
xor
daa
outsl
fmul
push
sbb
pop
mov
dec
mov
mov
xchg
das
pushf
jg
jae
mov
bound
mov
inc
jl
dec
sub
push
dec
das
aad
jnp
out
jp
dec
mov
inc
jne
cmpsb
jp
mov
push
negb
std
scas
in
lahf
sbb
sbb
cmp
repnz
dec
pop
loop
xchg
mov
ja
scas
xchg
lds
clc
cmc
out
bswap
enter
sub
jl
rclb
bound
or
jae
scas
dec
mov
and
push
inc
jecxz
in
fsub
jo
int
or
pop
dec
mov
and
pop
and
imul
inc
sub
xlat
push
push
push
xchg
dec
sbb
add
aam
inc
xor
sbb
jno
mov
sbb
int3
xchg
int
inc
inc
test
mov
push
loop
shll
daa
dec
dec
mov
adcl
lret
insb
mov
mov
ss
pop
imul
lods
mov
jp
jl
jne
mov
xchg
sub
insb
cmp
sbb
add
ret
lret
in
push
xchg
cmpsb
repnz
jecxz
sub
push
stc
sub
xor
sarb
pop
enter
cmp
mov
and
and
sbb
mov
bound
frstor
fcompl
jno
int
fiaddl
test
in
imull
xchg
add
dec
mov
push
mov
push
mov
and
lock
xchg
add
cmpsl
cwtl
pop
cmpsb
leave
push
sbb
push
jno
sti
in
mov
in
xor
and
or
sti
pop
mov
gs
mov
lret
outsb
adcb
mov
leave
mov
push
cmp
nop
mov
insb
sti
inc
lds
gs
shrb
jo
adc
insb
mov
lds
dec
pop
ret
sub
in
mov
or
rorl
cmp
jmp
int3
out
in
cmpsb
fidivl
and
xchg
pop
aas
icebp
mov
mov
mov
xor
sbb
xorb
lahf
lret
push
icebp
int
stos
ret
pop
int3
fisubl
loopne
push
jbe
inc
pop
shll
mov
inc
arpl
or
call
jmp
pop
push
cmp
xor
add
or
int3
dec
lock
loope
xchg
push
outsb
jns
push
xchg
lock
push
mov
call
jmp
int3
ja
inc
adcl
lods
inc
xor
sub
loope
andb
mov
pop
aaa
inc
cwtl
cli
mov
mov
lea
dec
jecxz
add
das
sbb
lret
or
push
jbe
push
xor
ss
sub
xor
out
mov
pop
mov
jbe
in
adc
pop
shrl
je
cli
fidivrl
xor
mov
sub
rcr
data16
gs
mov
mov
sahf
outsb
sbb
cmp
daa
inc
adc
xchg
lea
fcomps
adc
dec
fldt
mov
mov
hlt
cmp
jae
into
push
jl
sti
add
mov
js
cli
jge
lea
add
mov
mov
mov
clc
test
cmp
cmp
aam
and
mov
pop
and
mov
xchg
mov
vfrczps
jmp
cmpsb
xor
xchg
outsl
inc
hlt
xchg
adc
pop
outsb
aad
call
mov
inc
mov
mov
arpl
aaa
xchg
test
jne
fstps
loop
popa
dec
cmpb
xor
sub
mov
das
and
xchg
aaa
jne
sbb
push
arpl
test
mov
scas
push
push
mov
mov
jno
pop
or
jmp
cltd
loopne
sbb
mov
cld
pop
mov
fisttps
test
inc
jno
pop
mov
jge
stos
push
ficomps
fisubrl
push
xor
mov
xor
outsl
sarb
sbb
bound
int3
sub
cmc
push
aad
xchg
adc
adc
shrl
push
popa
fmuls
out
mov
mov
test
xchg
imul
xlat
or
jg
cmp
fadds
sbb
pusha
pop
lar
imul
sub
sbb
int3
pop
push
mov
push
sub
adc
cmp
negb
sub
cmpsb
pop
leave
push
sub
lret
adc
mov
xor
and
mov
mov
push
pop
pushf
lahf
xor
je
aad
cmp
mov
inc
mov
cli
jmp
bound
int
mov
mov
clc
subb
aam
mov
mov
dec
or
lock
sahf
int
mov
ja
and
mov
js
mov
push
lcall
mov
je
int
lods
xchg
call
xchg
sub
shlb
andl
out
adc
dec
xor
scas
ss
incb
call
and
adc
sahf
mov
popa
stc
mov
fs
das
pushf
push
scas
movsl
int
push
mov
push
mov
jbe
or
dec
fst
lods
lods
push
mov
sub
ljmp
dec
out
inc
bound
aas
sub
mov
imul
addb
xor
in
mov
sub
dec
jmp
js
mov
insb
xor
fcmovu
aaa
xor
dec
mov
sbb
decl
test
js
sbb
pop
or
shlb
movsb
add
scas
daa
cmp
mov
fdivr
adc
mov
iret
mov
push
daa
add
jl
sub
shll
push
ljmp
xchg
jg
jge
mov
orb
adc
popa
int3
adc
imul
frstor
adc
enter
mov
loop
jae
mov
fwait
mov
push
mov
inc
mov
test
daa
arpl
hlt
daa
lods
mov
sahf
lods
sbb
jmp
sbb
mov
mov
in
stc
adc
mov
cli
sbb
add
push
bswap
andb
dec
sub
mov
add
sub
sbb
jno
xchg
or
insl
dec
dec
adc
xchg
cmp
and
cmc
dec
xor
test
inc
or
and
inc
xlat
imul
ret
mov
mov
push
leave
jp
ja
rorl
push
dec
std
mov
pusha
fsubs
loope
cmp
imul
bound
out
pop
cmp
daa
push
jo
adc
aad
dec
jle
cmp
dec
ret
adc
out
imul
xor
jo
push
pop
ret
enter
fildl
movsb
add
sub
xlat
add
roll
push
into
mov
fmulp
cltd
or
lsl
adc
popf
ja
jnp
inc
lds
in
ja
cmp
and
repz
in
mov
lock
mov
jecxz
xchg
push
sbb
out
and
push
jbe
sbb
jb
adc
jns
lret
repz
data16
xor
cs
iret
jb
iret
aam
jl
imul
ret
jb
loopne
pop
popf
and
xchg
mov
and
pop
rcrb
aam
xchg
or
xchg
xor
xor
movsb
lahf
adc
arpl
mov
bound
pop
adc
ljmp
orl
jb
fldl
cwtl
pop
sbb
adc
rorl
or
jno
sbb
mov
xor
idivl
inc
push
mov
ret
jbe
ja
mov
dec
xchg
xchg
mov
cmp
dec
push
xor
xchg
sub
sub
in
xor
in
ljmp
gs
scas
sub
push
imul
xchg
mov
iret
jns
mov
or
push
fld
push
push
in
jecxz
xchg
cmp
xchg
negb
insl
fidivrl
push
pop
fcmovu
pop
outsb
fsubrl
movsl
andb
test
xchg
pop
and
popf
bound
cmp
stc
leave
dec
in
int
adc
mov
xchg
js
push
inc
inc
jle
sub
popa
xor
fidivrs
imul
repnz
sub
into
fcompl
aaa
inc
adc
xchg
int
pop
xchg
fwait
into
pop
jae
mov
xor
aam
sbb
pop
ds
pop
test
push
out
sti
or
jo
scas
sub
pop
push
call
mov
sbb
push
xor
test
stos
mov
lock
jle
ret
sbb
jle
sub
dec
cwtl
gs
inc
cmp
xchg
sub
aaa
dec
arpl
or
jle
xor
pop
mov
dec
sub
mov
psadbw
faddl
nop
pop
test
xchg
and
and
nop
ret
pushf
cmp
and
popf
and
movq
test
mov
sahf
jno
jns
xchg
cmpsb
addr16
stos
and
dec
rclb
das
out
in
sbb
adc
mov
mov
mov
test
cltd
cld
mov
mov
fs
xchg
dec
popf
sub
addr16
decb
push
es
mov
dec
jmp
xor
mov
mov
and
sbb
lock
rolb
in
insb
jle
cmp
pop
xchg
imul
pop
fcmovu
xchg
popf
out
dec
insl
popf
mov
call
lds
mov
out
mov
inc
inc
arpl
ss
cmp
repz
xchg
je
popf
mov
lcall
and
mov
adc
test
int3
lock
xor
pop
pop
jae
jae,pn
jle
jnp
xchg
ss
addr16
jmp
jecxz
jle
test
gs
sub
push
clc
cmp
xchg
inc
xchg
sbbl
jl
dec
fwait
or
xlat
xlat
or
jl
mov
push
push
loop
xor
mul
adc
shlb
inc
ret
xchg
jge
sbb
pusha
jo
jae
and
repnz
lahf
push
mov
lret
or
xor
inc
sub
lds
subb
mov
test
lret
adc
incb
push
sub
mov
jno
insl
fisttpl
pop
jge
popa
in
inc
fstpl
fucomp
test
push
imul
les
cwtl
popf
movsl
outsl
add
push
mov
cmpsl
test
movsl
inc
and
mov
adc
imul
mov
daa
call
dec
adc
inc
xchg
mov
in
fidivrl
mov
jns
and
mov
cmp
test
test
sub
sub
mov
inc
shr
mov
xchg
jecxz
int
sub
cli
stos
cmp
enter
adc
repz
push
dec
insb
in
jp
ret
repnz
inc
lcall
int3
dec
dec
cld
mov
gs
stos
mov
popl
jmp
mov
std
mov
rolb
stos
sti
push
mov
nop
and
mov
cmp
rcrb
push
out
dec
pushf
out
and
imulb
in
cmpsl
sahf
loopne
fdivl
jnp
push
inc
sbb
xchg
mov
mov
xchg
lcall
popf
mov
push
xor
stc
xor
push
and
inc
adc
movsb
mov
mov
xor
ret
and
popf
ret
mov
pop
ja
mov
push
imulb
aaa
mov
mov
jbe
call
adc
in
xchg
cli
sub
insb
mov
outsl
inc
xor
out
mov
jnp
lods
jmp
mov
adc
push
pop
fidivrs
test
cli
popa
ss
icebp
pop
sbb
xchg
cmc
cmc
mov
mov
xor
andb
xchg
outsl
ja
stc
xchg
mov
sub
ftst
sbb
pop
jbe
add
mov
mov
mov
out
adc
dec
adc
rorl
sbbb
add
and
push
or
mov
ret
xlat
stos
lock
xchg
pop
push
es
adc
js
adc
daa
push
add
sbb
jbe
jl
es
movsb
adc
jge
daa
xor
mov
xlat
or
cld
jns
inc
xchg
mov
sarl
in
insl
ret
lret
jo
in
aas
pop
fwait
inc
ljmp
orl
lahf
jno
jmp
mov
push
test
in
mov
cmp
push
pop
mov
ja
xor
dec
adc
fstpl
xchg
gs
rol
imul
mov
nop
jp
xchg
mov
push
sub
js
dec
pushf
mov
fisttps
xchg
rcrb
cmpsb
fidivl
fwait
out
push
in
jge
decl
subb
enter
sahf
mov
inc
pop
je
cmp
ja
jmp
mov
test
adc
xchg
aam
lds
mov
or
iret
push
dec
es
call
mov
fucom
cmpsl
pop
cmc
imul
cs
cmp
mov
pop
cmpsb
push
cmp
or
and
adc
push
cmp
fcomi
sti
add
adc
mov
dec
add
mov
pop
cmp
mov
add
shrb
sub
stos
inc
add
into
test
dec
xchg
pop
aaa
adc
cltd
pop
or
jns
dec
shl
les
jmp
rcrb
stos
popf
ret
mov
push
push
adc
pop
and
repz
xchg
popf
dec
pop
scas
cmpsb
mov
push
aad
xchg
push
or
fs
cmc
pop
cli
mov
rclb
adc
repz
dec
dec
jnp
push
cwtl
shrl
stos
or
lods
xchg
aad
es
mov
mov
push
cmpl
mov
rcrl
sahf
jnp
test
push
mov
repnz
cmp
or
pop
mov
rolb
add
fildl
pop
daa
push
dec
mov
mov
rcrl
and
aas
push
ret
call
jle
add
jbe
xchg
xor
cmpsl
inc
clc
in
inc
sbb
repz
jnp
add
sarb
test
sarl
mov
pop
mov
sar
mov
pop
sbb
das
add
push
mov
or
adc
pop
shll
or
jg
jp
and
mov
cld
jge
jmp
sbb
std
jns
adc
clc
sti
movsb
iret
je
mov
jg
leave
outsb
jae
jno
push
mov
push
in
repnz
fldl
or
and
jmp
lods
adcb
mov
icebp
pop
cmpsl
sub
es
cmpsl
xor
mov
leave
test
in
outsb
dec
lcall
test
jbe
and
pop
imul
insl
lahf
xlat
xor
and
cltd
divb
push
jae
fistpll
test
rorl
jae
ret
sbb
pop
imull
or
sbb
mov
mov
test
push
lret
aaa
test
fbld
adc
or
outsl
push
jp
or
push
jle
outsl
mov
xor
popf
pop
lret
ds
lahf
sub
shrb
js
xchg
xchg
and
mov
stc
pop
out
xor
jnp
dec
call
ljmp
mov
pushf
inc
push
inc
add
mov
dec
out
aam
lret
push
fnstsw
ret
cmp
daa
lahf
push
repnz
fnstcw
push
add
mov
cwtl
jno
ss
incl
jge
cmpsl
lcall
clc
mov
dec
inc
push
int
sbb
dec
pinsrw
mov
xor
aaa
clc
mov
mov
and
sarb
insb
sbb
or
xchg
mov
jns
pop
je
jg
hlt
or
andb
fs
cmp
mov
dec
sbb
add
pusha
mov
xlat
test
out
repnz
dec
or
push
dec
add
sbb
shrb
cmp
divb
rcl
ror
sub
or
xchg
pop
out
out
lret
std
mov
movsb
neg
and
shll
clc
mov
ljmp
or
push
xor
leave
inc
xchg
or
dec
enter
jmp
fildl
sahf
notb
or
inc
sub
jge
ret
sahf
push
test
jne
std
jno
jp
std
std
stos
mov
xchg
jb
sub
xor
cmp
xor
or
adcb
mov
arpl
icebp
lea
mov
xchg
filds
mov
mov
out
lds
push
test
addr16
sbb
lea
mov
xor
aam
icebp
mov
sbb
xchg
mov
lods
push
arpl
mov
mov
popf
ret
test
std
icebp
dec
movsl
ds
pop
inc
mov
daa
lods
addb
cld
xchg
add
insb
fistps
std
dec
nop
inc
or
or
std
fnstcw
sbb
and
xchg
add
dec
les
notl
ret
pop
call
rolb
arpl
es
fldt
and
pop
mov
jle
cmp
leave
rcl
popf
sub
testl
mov
sbb
addr16
mov
fcompl
dec
mov
adc
and
dec
hlt
popf
jge
sbb
push
clc
ss
mov
ficomps
loope
fisttpll
in
in
dec
call
mov
insb
testl
xor
ret
jge
in
aas
dec
cmp
mov
mov
xor
jge
dec
int3
mov
adc
jnp
das
mov
out
sub
andb
mov
pop
lock
cld
jbe
lret
cmpsl
push
das
arpl
xchg
jnp
and
sbb
stos
xlat
or
sbb
out
je
test
clc
jne
pop
add
mov
cli
jnp
mov
inc
outsb
or
or
and
pushf
sub
adc
pusha
push
jge
and
mov
pushf
enter
jns
fnstenv
cltd
inc
push
ret
cli
rclb
es
lret
sub
lcall
xlat
rcrb
and
js
in
js
xor
mov
dec
xchg
cwtl
shl
movl
roll
mov
mov
stc
xor
inc
fnstsw
shrb
adc
push
dec
lahf
fistps
fistl
sarl
cmp
xor
push
sbb
cmp
test
ljmp
mov
xchg
dec
push
out
xor
leave
inc
or
pop
pop
ret
mov
lock
mov
dec
movsb
mov
int
mov
push
sarl
in
into
sbb
test
mov
scas
aas
outsl
cmc
or
dec
pop
ret
add
test
mov
int3
add
dec
insl
mov
jle
inc
mov
cmp
mov
pop
sub
scas
pop
test
sbbb
cmp
rclb
push
int
fs
pop
test
clc
lock
mov
inc
xchg
adc
insl
ficoms
mov
pushf
pop
xchg
ret
jle
subl
mov
sti
mov
cmp
nop
dec
dec
enter
jne
cwtl
add
xchg
push
call
push
flds
push
dec
mov
rcrb
jge
cli
pop
push
repnz
fidivs
lahf
in
mov
xor
sub
xor
mov
lcall
test
fcomps
subb
add
adc
jbe
stos
arpl
icebp
int
icebp
mov
xor
mov
gs
outsb
adc
adc
jp
and
xchg
xor
mov
insb
testb
push
add
fsts
jne
cli
lods
add
add
insb
out
adc
js
pushf
aam
xchg
jmp
mov
insl
aaa
inc
cmp
dec
mov
movd
outsb
jae
addr16
mov
addr16
cmpl
lds
loopne
lock
imul
test
jne
push
jno
cmpsl
inc
add
pusha
push
xchg
je
popf
fnstcw
test
mov
lds
sub
repz
cltd
dec
fcmove
adc
push
andl
mov
mov
stc
sbb
lods
int
lea
jl
inc
lahf
pop
mov
add
mov
je
ficoml
jge
pop
lods
les
stos
popa
xchg
xchg
lock
sbb
mov
aaa
jmp
mov
lock
cmp
lock
in
call
imul
jns
pop
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
jmp
mov
out
fwait
push
xor
push
enter
jnp
sahf
jnp
sbb
xchg
add
in
dec
jl
inc
push
icebp
adc
aaa
popa
sbb
xchg
fistps
xchg
mov
sarl
mov
inc
and
jnp
cwtl
pop
das
daa
in
test
sbb
jne
or
and
shlb
movsb
loop
lret
jbe
cmp
test
stc
fs
cs
mov
xlat
jb
jnp
mov
mov
imul
arpl
je
fwait
stc
popf
mov
jl
testb
ja
push
insb
mov
pop
mov
and
fsubp
aaa
imul
fstl
lods
sub
cmc
movsl
xchg
push
push
dec
in
leave
cld
outsl
js
dec
mov
lret
adc
cmpsl
mov
test
xor
xor
test
aad
sub
sub
dec
std
sbb
sarb
pusha
loop
push
pop
test
cmc
push
bound
add
cmc
xchg
dec
test
ficoml
mov
jb
or
and
popa
pop
jmp
push
jae
xor
rolb
jae
idivl
aaa
dec
pop
lea
xor
and
icebp
or
or
mov
cli
inc
das
outsb
mov
pop
and
pop
mov
pop
push
add
lcall
add
cmc
fisubrs
jne
xchg
add
jl
daa
inc
pop
push
dec
xchg
in
pop
imul
mov
aaa
jmp
pushf
scas
lods
mov
pop
mov
jl
mov
mov
pop
je
mov
in
xchg
into
push
inc
repz
pushf
sub
inc
das
push
fs
add
push
stos
cmp
repz
mov
test
aaa
push
jle
insl
insl
inc
inc
pop
rclb
xchg
mov
out
out
ret
fsts
sarl
add
and
aad
mov
rorb
adc
and
add
out
in
and
loop
dec
out
pop
outsl
sbb
mov
int3
jl
sub
mov
inc
out
push
xchg
cwtl
ljmp
xchg
inc
fwait
pop
bound
pop
in
or
cmp
xchg
inc
dec
orl
mov
mov
jg
pop
pop
addl
call
pop
fistpl
add
inc
lret
mov
lret
cmp
dec
mov
mov
pop
xor
leave
push
lods
cwtl
in
lahf
mov
jno
pop
xchg
int
jne
or
ficompl
popf
xlat
xlat
into
xor
aaa
dec
adc
jno
lret
cmp
mov
xchg
push
mov
es
aaa
cmp
lcall
pop
cwtl
add
mov
test
adc
xchg
sbbb
pop
mov
mov
jmp
into
push
pop
sti
inc
incl
jb
outsb
jbe
sbb
fcmovnb
testb
adc
fld
out
int3
jnp
insl
pop
es
out
inc
out
js
test
out
xchg
push
xchg
jmp
in
cs
adc
fs
sub
mov
mov
sub
idiv
xor
je
loopne
clc
sub
jp
popf
roll
movsb
xchg
nop
or
shrl
icebp
xor
and
cltd
pushf
fcom
out
add
rolb
xchg
fistps
popf
ret
xchg
jbe
and
divb
xor
arpl
cwtl
test
push
dec
or
fcmovbe
aam
jmp
xor
sub
adc
addr16
push
fdiv
out
push
mov
mov
sbbl
aam
dec
test
dec
ror
push
lock
cwtl
leave
mov
fistl
inc
push
ja
jo
and
dec
mov
fs
jb
stc
xchg
pop
xchg
xchg
sub
mov
and
test
mov
xor
mov
xlat
enter
cld
insl
jbe
in
xchg
jecxz
jne
insb
ds
daa
and
stc
add
popf
mov
fs
hlt
fadds
and
mov
adc
push
sbb
jns
pushf
inc
cmpsl
dec
push
int3
movsl
push
shr
int3
test
pop
outsb
rclb
adc
xchg
jmp
loop
aam
dec
test
lock
sti
pop
popf
clc
fsubr
clc
dec
mov
sbb
mov
mov
icebp
arpl
sbb
out
sbb
jns
mov
mov
sti
cmpsb
ss
mov
push
idivl
sbb
addb
bound
in
ss
inc
roll
call
dec
into
mov
cmpsl
lret
jp
inc
jae
add
into
arpl
test
push
int3
cmpsb
es
rcrb
rclb
out
add
xor
mov
aas
enter
push
xchg
pop
jp
push
dec
rclb
mov
imul
fs
movsb
xchg
xor
gs
push
jmp
jae
enter
andb
push
aaa
mov
in
cmpsl
xor
sti
stc
pop
int3
xlat
xor
inc
mov
push
aas
adc
mov
xlat
or
mov
ret
imul
jmp
dec
push
fldenv
sbb
jno
mov
sub
dec
fwait
xchg
scas
sub
mov
sbb
adc
adc
jle
push
scas
fildll
movq
stos
fdivl
stc
cmp
fistpll
aas
insb
sbb
push
rcrb
aas
pop
loopne
mov
mov
inc
call
dec
shll
shl
pop
adc
andl
sub
xchg
xor
jns
sbb
int
push
add
ficompl
scas
sub
jns
or
xchg
je
jo
jl
rcll
stos
stc
sbb
jb
pop
mov
pop
or
sbb
aas
jecxz
lret
inc
pop
mov
or
stos
inc
or
bound
leave
jl
jo
pushf
jmp
and
mov
add
inc
addr16
mov
inc
clc
jne
insb
or
aad
add
in
cwtl
imul
xorb
push
ljmp
cmp
arpl
xor
cmp
sti
jle
outsl
mov
lret
xchg
popa
fidivrl
sbb
leave
or
dec
les
repz
sub
stos
test
mov
push
int3
jg
pop
cli
fstl
push
inc
lock
mul
or
test
in
sbb
popa
jbe
mov
lds
jp
adc
ss
ljmp
sbb
inc
sub
lcall
into
lahf
inc
lcall
in
ja
mov
xchg
jb
cli
jge
jp
jp
or
sahf
xchg
xor
cmp
arpl
ret
stos
mov
lock
fs
aam
std
push
fbld
mov
roll
pushf
fwait
inc
icebp
insb
xchg
adc
sub
push
sbb
jo
orb
lret
xchg
test
jmp
nop
shrb
cmpsb
cmc
out
mov
xchg
jo
mov
nop
mov
mov
mov
xchg
sbb
or
mov
lret
mov
sbb
sbb
push
iret
sbb
fs
sbb
test
das
xor
in
add
xlat
xchg
jmp
or
js
shll
sbb
les
lods
out
fwait
xor
xchg
enter
sbb
add
aam
jg
mov
aas
add
ror
lods
mov
dec
hlt
nop
xchg
rol
cmp
test
daa
fld
fdivp
and
out
sbb
xchg
sub
cwtl
adc
mov
jbe
test
jbe
test
into
hlt
add
icebp
repnz
adc
mov
jecxz
and
xor
push
xchg
or
test
leave
cltd
mov
and
mull
hlt
in
js
imul
bound
fcomp
jae
or
out
mov
xchg
jb
test
mov
mov
dec
cmp
sahf
out
add
xorb
cmc
outsb
sbb
notl
lcall
fistps
adc
add
data16
xchg
or
call
call
gs
and
push
add
test
mov
sub
test
cmp
mov
decl
shrl
jns
pop
sbb
out
fimull
fidivs
mov
pop
dec
dec
jp
push
in
xorl
jp
xchg
shrl
fsubs
imul
ret
or
dec
xor
int
mov
insb
mov
movsb
push
sub
mov
fimull
fidivrl
fldcw
pop
pop
add
cmp
pop
fisubs
cltd
repnz
xchg
cmp
add
xchg
shrl
cltd
fs
dec
popf
push
jne
aam
mov
and
sbb
mov
add
jne
inc
cmp
call
xchg
rcrl
movl
fiaddl
movsl
mov
in
inc
and
push
or
and
xchg
std
inc
movsl
neg
push
push
nop
xchg
mov
rcrb
std
dec
addr16
pop
nop
xor
dec
push
cltd
and
mov
filds
and
pop
lock
imul
and
fdivrp
aam
cmp
sub
cld
sbb
push
xor
aas
xchg
and
lds
or
sbb
mov
in
mov
fdiv
mov
loop
lret
out
outsb
mov
or
int
push
daa
mov
adc
xchg
popa
adc
or
in
testb
imul
xor
outsb
xchg
repz
popf
insl
xor
lds
in
and
xor
dec
popa
sbb
test
fldt
mov
sub
fsubr
xor
xchg
sti
lods
lcall
int3
insl
dec
aam
scas
inc
imul
jge
jg
inc
sub
sti
sbbl
inc
xchg
sbb
dec
xor
cli
pop
es
dec
imul
push
jle
dec
mov
imul
data16
sbb
and
inc
dec
sbb
add
out
stos
js
mov
xchg
mov
sub
and
scas
mov
inc
push
mov
sahf
cmp
leave
lret
cwtl
dec
insb
cld
int
sub
sbb
mov
xchg
pop
cmpsb
cmp
imul
adc
mov
es
jns
and
add
push
inc
test
xor
cmp
ja
sti
stos
fldenv
adc
in
js
sub
inc
push
add
cltd
mov
pop
push
fisttpll
sub
leave
dec
js
insb
push
mov
test
jecxz
gs
sbb
hlt
xor
pop
scas
test
shr
bound
scas
cmp
sti
call
loope
insl
push
mov
imul
xor
jne
add
xchg
dec
roll
jecxz
cmpsl
push
sub
cs
xor
jnp
inc
pusha
jno
add
outsl
outsl
push
fstpl
jnp
cmp
push
mov
ljmp
mov
and
lods
and
sbb
cmp
pop
fwait
fcompl
sub
leave
pop
adc
sti
jge
xlat
cs
fcom
out
pop
xchg
push
xchg
xchg
outsb
xchg
add
iret
enter
sub
adc
cmc
jl
aam
ret
sarl
mov
or
jmp
int3
jns
daa
rclb
bound
stos
xor
and
sub
mov
fsts
sbb
adc
shll
jnp
inc
or
call
sub
cwtl
jne
popf
shll
pop
push
sbb
jb
cmpsb
daa
xor
dec
pop
jo
sub
sub
mov
sub
jmp
test
test
and
fadd
xchg
or
rorb
push
and
adc
xchg
cltd
cs
adc
and
sbbb
fs
rcr
outsl
leave
and
adc
cmp
les
js
pushf
jae
repnz
push
add
adc
invd
mov
out
test
cmp
adc
iret
adc
push
or
sbb
push
sbb
ds
iret
push
fisubs
push
cmc
faddl
jbe
sub
and
mov
jl
xor
or
mov
jbe
fidivs
push
loope
dec
or
pop
add
and
rorb
jp
jns
out
fsubr
packssdw
push
popf
pop
push
jle
jp
notl
add
jp
xchg
inc
mov
cli
jo
mov
jmp
rorl
or
insl
ja
arpl
xchg
pop
pop
or
lds
loope
xchg
stos
fwait
test
jo
jbe
stos
sub
aad
repnz
into
rolb
gs
adc
sti
jno
cmc
dec
lods
or
das
aaa
lea
add
mov
icebp
cmp
shl
pop
es
push
mov
aas
std
cmp
pop
popf
push
sbb
scas
loopne
lods
fsubrs
dec
mov
xchg
test
xchg
xchg
ss
dec
and
mov
daa
and
mov
sub
sbb
or
sbb
push
fdiv
dec
cmp
lods
shll
cmp
xor
insb
pushf
mov
mov
rol
pop
mov
ret
stc
mov
int
lods
fmul
ljmp
inc
xor
cmp
push
dec
sub
mov
xchg
jnp
mov
mov
addl
das
popa
loopne
aam
imul
outsb
xchg
or
test
scas
cmp
xor
add
push
add
fucomip
jno
lods
lods
rorb
addb
loope
jp
sbb
jecxz
jb
scas
push
fmull
sbbl
xlat
movsb
inc
push
or
outsb
and
mov
push
mov
ss
dec
mov
mov
adc
nop
xchg
jo
pusha
cli
xor
xor
jp
mov
dec
jg
sbb
xchg
cmc
mov
xchg
xlat
shlb
imul
insl
adc
xchg
push
mov
mov
ret
call
sbbl
pop
leave
mov
xchg
mov
add
icebp
int3
cs
jns
stc
push
push
cmp
dec
popf
je
out
out
and
mov
outsl
cs
push
sbb
lea
inc
addr16
mov
jge
mov
sbb
enter
popa
shlb
insb
mov
dec
xchg
sub
icebp
gs
shlb
loop
aad
jge
and
out
addl
sbb
push
sub
pop
out
int3
inc
mov
add
pop
cmp
lret
test
dec
pusha
jns
cmp
movsb
jp
inc
inc
pop
adc
jle
lds
scas
lea
cmp
pop
cmp
sahf
cli
vmread
jnp
stos
jmp
int
sbbl
pop
shl
push
inc
ja
sbb
stc
sbb
sub
arpl
stos
jle
mov
push
nop
fadds
sbb
inc
call
cmp
jg
pop
mov
rcr
push
push
pushf
daa
pusha
les
xor
mov
dec
inc
xchg
cli
scas
das
lahf
lods
push
mov
push
insl
fwait
es
or
mov
loop
in
mov
xor
add
imul
nop
in
lret
dec
mov
aas
cmp
lahf
fld
inc
push
pop
and
sti
push
test
jp
fbld
lret
pop
in
xor
xor
cmp
or
cmc
rolb
ret
push
lret
lods
jae
jle
xchg
subl
cli
aas
xchg
and
adc
in
jecxz
adc
push
arpl
daa
fsts
inc
lcall
mov
in
push
dec
or
test
decb
mull
add
outsl
ja
outsb
sub
cs
mov
data16
xchg
aad
mov
popa
iret
sbb
cs
out
loop
adc
out
dec
add
sbb
xor
in
lea
shl
shll
nop
sbb
dec
push
addr16
jecxz
xor
mov
fwait
cmp
jne
insl
mov
dec
jle
mov
push
int3
insl
lahf
lods
call
sub
test
inc
hlt
popl
xorl
add
sub
jns
xchg
cltd
fucomp
out
in
aaa
dec
mov
dec
jno
fwait
jnp
add
out
adc
lods
xchg
xor
xor
outsb
xor
idivl
mov
sub
shrl
ljmp
dec
clc
and
push
in
jbe
repz
pop
push
jle
jo
and
xchg
repnz
and
sbb
scas
push
testl
lods
xor
shlb
and
xor
xchg
gs
or
xor
jae
jg
cmp
shrl
xchg
xchg
aam
xacquire
xchg
out
fnstsw
xor
fwait
rorb
imul
aas
arpl
gs
sub
ret
inc
setnp
mov
mov
scas
gs
push
dec
adc
dec
xor
mov
gs
loopne
sti
daa
mov
mov
aaa
mov
cltd
add
test
aam
sbb
push
dec
pop
les
sub
add
dec
out
imul
add
push
aad
mov
inc
push
jp
add
xchg
jg
jp
negb
add
fldl
adc
sbb
shufps
xchg
cvtps2pd
lcall
push
sub
stos
lds
loop
lret
ret
divl
pushl
and
mov
fsubs
pop
sub
stos
inc
push
jbe
out
sub
inc
arpl
ja
cmp
mov
aaa
jl
mov
clc
jmp
mov
cli
aad
popf
and
mov
movsb
nop
adc
out
out
shll
inc
ljmpw
cld
loopne
mov
sarl
jl
inc
xchg
cmp
push
push
shr
or
loopne
and
les
push
push
add
push
insb
mov
test
into
jg
clc
dec
xchg
movsl
in
inc
push
loopne
out
push
leave
jge
inc
and
lret
add
test
pop
xor
pusha
andb
push
sti
sbb
and
stos
fwait
mov
popa
jo
mov
sbb
js
test
mov
add
fnsave
or
sbbb
push
int
xchg
mov
pop
or
push
pop
cmpsb
mov
dec
mov
fistl
rolb
pop
in
dec
movsb
outsb
jl
dec
rorl
cwtl
cltd
orl
jmp
xor
push
fs
sbb
mov
push
xchg
jns
sbb
sbb
in
in
push
loope
sbb
and
in
hlt
jb
push
cli
dec
dec
inc
cltd
pop
popa
cmp
insb
icebp
xchg
mov
sub
ljmp
xor
clc
mov
in
cli
xor
or
mov
sub
sub
call
pop
shlb
aaa
in
add
in
lds
sub
mov
movsb
mov
push
dec
xor
inc
pop
dec
xor
inc
movsl
push
inc
xchg
push
xor
sub
out
mul
push
mov
adc
push
stos
mov
push
inc
subl
add
in
andl
ja
push
mov
fdivs
cltd
add
cli
dec
push
lahf
lea
leave
lret
push
xor
fisttpll
data16
xchg
aam
xchg
es
jge
adc
xlat
jge
ret
jmp
loope
jg
jle
jp
add
mov
xchg
push
jne
jne
jle
insb
adc
xor
jne
in
insb
aaa
push
sbb
add
lock
mov
das
ds
pop
shll
cmp
pop
mov
or
nop
enter
cld
and
inc
xor
jg
jb
jns
mov
rorl
faddl
int3
aaa
mov
pop
and
add
dec
lock
aad
mov
aas
xlat
pop
aam
in
adc
inc
ljmp
std
scas
xor
fwait
lds
dec
xor
and
test
ficompl
xchg
jmp
mov
push
mov
sbb
jno
std
sub
je
ficoms
in
mov
cmc
push
and
mov
adc
mov
and
sbb
andl
mov
fisttpl
ss
adcb
sahf
sub
stos
jle
pop
push
ret
jns
adc
cmc
mov
arpl
or
mov
cld
sub
push
ja
movsl
sub
push
jnp
sbb
nop
mov
stc
repnz
iret
sub
clc
ljmp
add
or
clc
lcall
sahf
decl
and
std
jg
in
cwtl
loop
pop
or
inc
push
dec
loope
pop
test
dec
fcom
mov
pop
subl
xchg
ficoml
mov
and
sbb
adc
push
test
lock
and
mov
pop
outsb
cli
shrl
std
ret
movsb
mov
mov
dec
sahf
leave
insl
outsl
xlat
loopne
xchg
idivl
sbb
jp
or
fld1
cmp
sub
and
fidivs
hlt
outsl
fcomp
scas
and
sahf
lcall
cmp
push
add
sti
popa
xchg
mov
lods
popa
mov
sub
or
push
fdivrs
das
mov
aas
lret
adc
push
dec
es
mov
mov
stos
xor
jne
adc
call
lods
mov
fdivl
pop
leave
add
ss
adc
xchg
mov
mov
adc
sbb
push
outsl
mov
jecxz
xchg
mov
and
int3
and
add
or
inc
int3
pop
pop
jmp
js
adcl
sahf
dec
adc
xchg
sub
adc
dec
int
icebp
or
rcll
mov
sub
addr16
mov
or
xchg
leave
enter
xchg
loope
jp
mov
hlt
insl
outsl
incl
add
xchg
add
std
push
in
bound
add
in
dec
sarb
arpl
mov
xor
pop
mov
ds
int3
lret
adc
loope
test
jbe
rolb
push
loope
or
hlt
pop
dec
je
or
icebp
lds
push
and
in
xor
adc
mov
test
jb
aad
and
inc
icebp
and
push
or
add
xlat
pop
adc
xor
sarl
fidivs
aad
push
fwait
mov
xor
cmpsb
lahf
inc
xor
movsb
scas
jmp
lret
jle
xchg
cmp
cmp
std
and
arpl
add
rolb
mov
mov
lea
in
inc
adc
rcll
adc
sub
mov
pop
sub
mov
sub
dec
fimull
call
rcrl
jmp
lcall
clc
mov
jmp
push
cmp
pop
pop
jno
pop
fwait
arpl
mov
mov
mov
pop
lret
popf
pop
clc
and
adc
or
fisubl
fwait
lea
int
sbb
out
sarb
lods
or
jo
pop
hlt
jno
in
mov
pop
stos
push
frstor
mov
leave
lahf
push
nop
imul
mov
lahf
outsb
rclb
sti
or
xor
or
fnstsw
scas
cli
fcmovnb
mov
jle
sbb
cmpsb
pushf
cwtl
sbb
popfw
stc
lds
cmp
mov
sub
mov
les
lahf
out
adc
and
xlat
loopew
dec
roll
inc
sbb
jp
leave
jle
in
dec
sub
dec
out
mov
xchg
repz
push
fs
clc
repz
cmpsl
or
out
lcall
out
xchg
cmpb
sbb
inc
loopne
jmp
and
fstl
mov
out
addr16
mov
pop
insb
imul
div
push
mov
repz
mov
call
test
lods
outsb
mov
lret
xchg
andb
sub
and
or
lds
pusha
jmp
lea
mulb
bnd
stos
ss
jbe
mov
mov
fbstp
mov
fs
jae
adc
push
lods
flds
test
xchg
dec
aam
stc
and
setae
out
loope
inc
je
sub
nop
and
and
js
jp
xchg
and
mov
stc
jnp
fistpl
stos
push
jnp
sbb
cmpsb
xchg
lahf
clc
adc
in
pop
rcr
cltd
sub
shrl
loope
sti
in
iret
lods
inc
rcr
cld
loope
xchg
mov
add
jae
xchg
pushf
out
push
js
cmp
push
pushf
dec
or
fs
and
sbb
inc
cld
test
dec
fcom
sbb
xchg
sbbl
sub
jnp
mov
push
sbb
sub
vprotd
pop
sbb
push
and
movsb
cmpsl
nop
cmp
mov
pushf
push
jns
data16
add
pop
sbb
xchg
push
fisttpl
xor
sbb
pop
or
pop
push
fidivl
pop
in
popf
popf
icebp
movsb
pop
movsb
fldcw
push
push
and
mov
dec
pop
cmpl
dec
jge
int3
shlb
lock
in
iret
int
push
push
sub
xor
stos
test
push
sub
xchg
push
adc
mov
xchg
enter
push
hlt
out
lret
inc
push
cli
inc
lahf
neg
add
scas
cmp
decb
xor
sbb
es
add
sbb
jge
jo
sbb
sub
andl
mov
mov
xchg
aas
jp
out
jne
mov
mov
enter
rcll
out
fwait
imul
xor
mov
mov
cs
std
add
ss
sbb
cwtl
jmp
push
pop
bound
xchg
mov
lret
xor
push
mov
loope
and
push
add
lds
mov
pusha
jno
mov
movb
mov
adc
movsb
adc
bound
outsb
lds
xor
mov
iret
sbb
lea
push
pop
mov
push
pop
inc
push
jl
andl
movb
icebp
and
int
daa
push
add
mov
mov
xor
lods
mov
and
and
pop
xlat
pop
or
inc
int3
daa
inc
test
xchg
inc
faddl
int3
dec
xor
sahf
mov
mov
pop
leavew
sbb
dec
lahf
mov
mov
add
xor
pop
shll
add
fists
fs
lods
inc
nop
jb
or
jo
sti
ja
sbb
pop
jae
dec
xor
xor
popf
aad
jmp
test
xor
sub
sti
mov
fldlg2
in
imulb
push
lods
jnp
mov
in
sahf
sahf
mov
into
pop
ds
push
inc
movsb
ficoms
dec
arpl
inc
mov
lds
notl
aas
lds
ror
pop
notb
sub
fisubs
ljmp
mov
ror
pop
sti
cltd
dec
dec
fcoml
add
dec
sub
cmpsl
dec
fwait
enter
in
lcall
sbb
es
test
pop
xchg
aad
xchg
aas
lcall
out
mov
or
pop
sbb
dec
stos
ss
fstp
cmpsb
ret
js
aad
cmp
mov
imull
loopne
iret
jo
inc
popf
shr
movsb
repnz
test
mov
test
adc
xchg
shll
ja
jp
stc
cmp
dec
repnz
add
jmp
imul
sbb
xor
sub
jg
cmc
adc
sbb
pop
call
rorl
fcmovnbe
leave
sub
lds
out
lea
fucomip
std
and
int
push
xchg
push
inc
mov
jns
imul
sub
jnp
stos
xor
jmp
test
push
ljmp
subl
mov
stos
pop
outsb
in
stc
jge
cmp
push
ljmp
or
dec
dec
addl
stos
cli
jne
nop
cld
push
inc
lea
jp,pn
ljmp
cs
sub
jne
mov
icebp
gs
scas
xchg
ret
arpl
out
cmp
or
js
jmp
enter
stos
lcall
imul
fdivrl
cmp
addb
sub
sarb
jle
adc
fs
jns
mov
sub
repnz
or
pop
pop
ficoml
jg
inc
in
pop
lods
cmpsl
std
xchg
push
mov
daa
or
cmp
popf
stos
subl
fidivs
jnp
sub
ficomps
or
push
inc
pop
push
cld
lock
rclb
dec
lret
dec
jg
inc
imul
sarl
out
in
movsl
and
cmp
mov
cmp
cmp
leave
jae
movsb
stc
lret
jnp
fdivrs
mov
fists
call
dec
xlat
or
daa
push
roll
pop
add
mov
and
mov
and
test
mov
outsb
scas
shlb
sarl
daa
sarb
into
pop
hlt
push
add
or
or
or
and
cmp
insb
inc
mov
dec
pushf
sbb
mov
pop
out
enter
ret
aas
and
fadd
mov
cmp
leave
cmpsb
aas
pop
xchg
test
xor
cltd
loopne
jl
xor
int
pop
push
stos
hlt
inc
sub
sahf
add
fisubl
leave
movsl
adc
data16
das
lods
pop
loop
cs
loop
jno
and
add
jnp
cli
xorl
popa
xor
pop
sbb
aad
test
dec
popa
mov
xchg
lcall
inc
fnstcw
gs
xchg
add
fwait
mov
mov
sub
add
insb
sbb
cmpsb
stos
push
inc
mov
aas
mov
mov
mov
in
mov
pop
flds
cmp
pop
add
in
push
and
ret
mov
mov
insl
call
scas
insl
xchg
mov
sbb
aaa
sub
jae
int3
sbb
ret
mov
push
adc
sbb
repnz
mov
mov
and
aad
in
sub
mov
mov
int3
and
jbe
xor
loop
jnp
and
xlat
adc
test
cmpsb
xor
xor
jge
sbb
sarb
in
jg
and
adc
fstpl
inc
xor
mov
mov
bswap
cltd
jl
xchg
sub
fisubl
jbe
or
pop
mov
inc
dec
rcrb
sahf
pusha
push
pop
lahf
sub
neg
sub
mov
cwtl
adc
lds
mov
hlt
xor
dec
std
and
outsb
xchg
aas
cmp
jbe
inc
cmp
lea
cmp
pop
adc
mov
pop
clc
xbegin
cmp
ss
mov
add
pop
cmp
ret
mov
xlat
mov
xor
push
jno
mov
pushf
divps
push
push
or
lcall
sbb
lret
inc
fldcw
cmpsl
xchg
pop
jmp
sub
imul
inc
jmp
sbbl
rolb
and
mov
rorl
sbb
call
repnz
out
cwtl
adc
cs
add
adc
psrlq
cmp
xor
jb
add
enter
mov
cld
xor
add
mov
mov
add
jmp
iret
jmp
sub
cli
in
xchg
sbb
or
sub
je
sub
sahf
jnp
cmp
sub
or
mov
xchg
jb
ljmp
pop
ja
outsl
loope
mov
cld
xlat
dec
push
cmpsb
sbb
clc
rcrb
rcrl
dec
pusha
mov
add
jg
das
test
fwait
push
dec
loope,pt
jno
push
aad
lret
and
int3
ret
loope
xlat
xor
xor
andb
testl
movsb
cmp
movsl
cmp
addr16
popa
jns
in
fwait
jo
aas
fcomip
lcall
jne
jle
add
mov
push
mov
xchg
in
ljmp
lret
fs
pop
in
mov
push
xchg
and
pushf
addb
xor
dec
lret
inc
sbb
aad
mov
xor
jecxz
adc
dec
test
dec
xor
aad
in
sbb
mov
rorb
jae
lcall
pop
mov
sbb
fnsave
pop
add
and
adc
pop
mov
pop
stos
add
test
mov
mov
xchg
and
andl
das
cwtl
into
rcr
mov
cmp
insb
sub
mov
adc
in
pop
fldt
pop
in
iret
lahf
jno
inc
pop
mov
iret
xchg
jne
test
lret
cltd
test
cwtl
imul
push
aas
mov
mov
xchg
jge
and
lret
lods
inc
lret
mov
or
mov
mov
ficoms
inc
sub
xchg
jmp
les
gs
pop
jae
sub
mov
pop
xor
sarl
xlat
cmp
mov
adc
mov
fstpl
xchg
jecxz
push
mov
adc
les
inc
jne
cmp
ss
push
push
dec
ljmp
incl
mov
daa
mov
jl
mov
cs
or
mov
mov
push
dec
pop
arpl
dec
cmpsb
fwait
cmp
xor
aas
sbb
dec
push
jmp
jmp
fisttpl
pop
sub
iret
fsts
shrl
or
mov
sub
aam
scas
mov
mov
loope
push
mov
and
and
bound
sahf
sbb
xchg
or
add
movsl
stos
add
nop
jge
mov
xchg
les
leave
neg
adcl
cwtl
ds
int
stos
negb
mov
clc
jnp
xchg
lods
jge
shr
mov
add
mov
add
jp
loop
addl
jb
pop
or
repnz
jp
cmp
pop
test
dec
mov
push
cmp
out
pusha
leave
jo
sub
jns
std
adc
xchg
pop
aam
das
in
fucomip
imul
jo
fsubrl
sub
lods
ds
in
idivl
lcall
pop
xor
xor
mov
fildll
int
lcall
cmc
aaa
ljmp
in
jle
in
repz
jns
inc
mov
cmpsb
cli
inc
addl
adc
jmp
dec
adc
inc
dec
lock
insb
lahf
cld
mov
jns
sbb
addr16
ret
repz
pop
push
neg
adcb
popf
repnz
or
mov
mov
mov
nop
cmpsl
cmp
jecxz
push
rcr
data16
imull
in
push
imull
imull
rcrb
jnp
mov
pop
ljmp
mov
pop
pop
cmp
sarb
lcall
es
clc
popa
cwtl
pop
push
mov
fs
mov
jbe
test
mov
das
xor
xor
int
xchg
scas
in
cmp
nop
out
xchg
cli
jecxz
mov
stos
scas
leave
push
jmp
cmp
fwait
arpl
int
mov
push
sub
mov
xlat
test
gs
mov
aad
les
scas
jns
jg
pop
mov
and
jp
lahf
cmp
push
add
loopne
mov
mov
jp
dec
scas
dec
rolb
imul
cmp
rorb
lcall
pop
loop
mov
cmp
xlat
pop
xchg
ja
testb
pop
adc
add
int
hlt
movsb
adc
mov
lods
repnz
enter
gs
mov
cld
jle
sti
mov
pop
or
fdivl
shlb
sub
mov
xor
sub
inc
dec
and
add
jle
lahf
xchg
jae
fwait
imul
cmp
fisubs
iret
mov
int3
enter
repnz
or
aas
dec
sahf
lret
loopne
adc
sbb
inc
mov
sbb
mov
mov
pop
sub
gs
cli
cs
sbb
insl
cmp
add
ds
fmull
notb
std
rorb
jmp
push
fisubl
in
adc
das
test
movsb
adc
mov
add
or
jbe
pop
push
ljmp
dec
pusha
push
xor
out
inc
jmp
fisubrs
inc
sbb
fwait
pop
and
fdivrl
jle
shlb
rorl
data16
fiaddl
inc
cmp
push
shll
adc
add
xor
push
lds
add
add
push
imul
cmpl
or
pop
mov
sub
daa
cmpsl
enter
out
out
xorb
mov
inc
jmp
adc
xchg
xor
pusha
mov
cltd
xor
mov
jecxz
add
jg
pop
adc
or
jns
inc
cmc
imul
in
orl
loop
out
xchg
xchg
in
dec
stos
hlt
mov
sbb
mull
cld
jp
in
ljmp
pop
cmpsb
mov
lret
push
shld
aaa
pop
scas
sbb
lods
sbb
mov
mov
push
adc
sbb
addb
out
lods
mov
inc
sub
and
or
popf
mov
adc
test
cmp
pushf
sbb
jecxz
jle
ficompl
aad
pop
mov
mov
cld
xor
adc
and
sbb
std
or
mov
dec
stos
sbb
sbb
xchg
push
adc
and
xor
xor
shrl
xchg
push
jbe
dec
ret
test
scas
pop
arpl
mov
push
inc
fcoms
loop
lods
popa
cmc
xchg
cmp
mov
jl
mov
nop
adc
cltd
sbb
and
scas
out
jle
out
xchg
or
pop
pop
push
xor
inc
call
lods
pushf
xchg
stos
fcmove
add
mov
inc
stos
push
dec
pop
jb
ja
pusha
pop
pop
jbe
rcll
sbb
inc
and
push
jbe
andl
mov
mov
fmull
test
inc
pop
add
sub
adc
shrl
mov
sti
mov
idivb
add
lds
pop
cli
adc
out
lcall
outsb
mov
add
add
xlat
xchg
imul
scas
dec
sub
test
out
xchg
pop
lds
pop
ljmp
test
test
data16
pop
dec
jl
push
inc
fidivrs
subl
cs
push
in
sbb
fisubs
andl
xchg
jne
lock
cmp
cwtl
cli
fcomp
icebp
cmp
ds
and
cld
inc
push
dec
mov
cld
lds
adc
jnp
sub
jle
push
ficompl
jns
jnp
mov
jle
add
lcall
mov
xor
icebp
jle
add
jecxz
test
movsb
loope
xor
nop
imul
cmp
mov
adcl
push
xchg
sbb
popf
aas
in
push
lcall
push
dec
jp
mov
xor
jecxz
and
mov
popa
sub
out
add
cmp
and
dec
clc
in
adc
jge
mov
xchg
or
jle
mov
andl
push
js
loope
sahf
xor
xor
out
cs
repnz
fwait
add
mov
inc
push
mov
xchg
inc
icebp
je
adc
cmpsl
xor
mov
sub
into
dec
xchg
bound
call
shrb
jp
dec
and
cmp
movsb
lds
popa
push
leave
outsl
push
adc
ds
mov
fbld
lea
lcall
mov
adc
fldl2t
insl
insl
fcomi
jg
iret
mov
push
scas
mov
dec
mov
mov
mov
mov
dec
xor
push
mov
lds
addr16
repz
dec
adc
ret
out
pop
ds
je
outsb
pusha
xchg
out
pop
pusha
and
or
loop
xchg
out
iret
lds
add
dec
inc
fcomps
push
lahf
fidivl
repz
in
adc
lods
mov
fsubl
iret
shl
cmc
and
push
mov
or
xchg
cmp
inc
push
test
dec
imul
scas
int3
xchg
jne
jno
jns
orb
add
pop
insb
and
leave
gs
add
movsb
mov
int
cwtl
jae
cli
sti
inc
mov
jg
fldl
sbb
mov
fdivp
loopne
xor
shlb
mov
pusha
inc
jno
mov
testb
test
or
dec
cltd
rcl
or
cmp
mov
add
mov
loop
data16
push
mov
pop
jge
fists
std
int3
push
and
fisubrl
sar
pop
mov
add
dec
scas
test
cwtl
mov
fldcw
xor
nop
cli
jmp
lcall
in
rol
fildl
jge
mov
mov
adc
mov
mov
pop
inc
loop
std
fcoms
or
mov
inc
inc
cmc
insb
push
xchg
lock
jno
sti
and
xor
push
and
pop
jo
orl
jp
daa
pusha
push
cwtl
mov
mov
fsubl
daa
sbb
xchg
sbb
iret
cwtl
push
cmp
push
mov
in
jecxz
cmp
push
sbb
sbb
test
jnp
nop
cmova
inc
xchg
mov
dec
jae
add
hlt
cli
push
repz
mov
mov
arpl
cmpsl
mov
mov
dec
jl
pop
cmp
xor
cmp
js
push
adc
test
add
pushf
inc
mov
roll
dec
dec
cmp
out
xor
lea
adc
popa
mov
and
pop
sub
js
xchg
mov
xor
lahf
cltd
lock
imul
fistl
lret
mov
stos
in
inc
mov
push
cmp
add
fwait
pop
mov
xchg
add
inc
jmp
jl
je
add
orl
or
ret
test
sbb
mov
add
xchg
mov
mov
dec
pushf
clc
jbe
and
adc
ljmp
iret
mov
xor
mov
dec
ss
xor
jecxz
mov
cmp
cmpsl
repnz
sbb
clc
out
mov
stc
mov
sub
sub
inc
fimuls
pop
jle
enter
xor
sub
pop
mov
daa
sbb
push
push
push
and
jmp
les
inc
rcrb
or
pushf
jno
mov
fwait
pop
data16
jp
stos
nop
imul
jb
jl
test
outsl
adc
or
add
jo
loop
mov
pop
jb
push
xchg
repz
into
call
cmpl
push
aam
cwtl
iret
push
add
push
add
mov
add
in
dec
adc
loop
sub
stos
push
stos
andb
xchg
shll
and
imul
push
xchg
xor
xchg
fs
or
mov
sbb
sahf
pop
aaa
ret
loopw
dec
cmp
stos
leave
test
lret
into
rorl
cmp
sub
cmpsl
lret
mov
mov
aam
fwait
in
pop
test
lock
push
ds
mov
shl
xchg
mov
imulb
in
cmpsb
xlat
dec
inc
dec
add
lods
jno
out
pop
in
cmp
lahf
or
or
es
fnstcw
in
pop
xlat
push
insb
jmp
hlt
lea
cmp
inc
enter
pop
push
jno
push
je
int3
fwait
pop
ja
and
pop
xor
loope
adc
insl
add
fmuls
insb
pop
inc
xor
and
inc
icebp
enter
ret
inc
xchg
xor
or
or
mov
dec
dec
int3
push
sarb
add
mov
xor
jns
xor
jb
pushf
aaa
and
shll
sahf
xor
sbb
loop
int
ljmp
mov
pushf
out
adc
lods
xor
cmp
fwait
add
mov
mov
test
bound
incl
mov
jmp
loopne
push
sbb
loope
and
sbb
scas
int3
push
push
jb
into
lahf
sub
nop
addl
mov
xor
fists
out
scas
int3
xchg
test
mov
push
mov
xor
xchg
or
adc
scas
push
pop
das
in
ja
jae
int3
or
mov
aad
cmp
inc
lods
test
xchg
jb
push
in
push
xchg
sub
mov
mov
loope
mov
dec
stos
pusha
scas
mov
jo
jae
loope
cmp
arpl
lcall
jnp
sbb
rcrl
inc
fwait
icebp
sbb
mov
imul
push
sbb
lock
sub
cwtl
ret
test
mov
test
sti
or
enter
mov
pop
push
rcrl
fcmove
adc
mov
das
mov
jmp
stos
lea
sbb
and
scas
push
cmp
push
sub
lretw
pop
dec
mov
push
xor
divb
std
inc
and
add
push
xchg
mov
lds
cli
cld
arpl
dec
aam
leave
insl
dec
pop
lret
leave
cwtl
dec
ljmp
sbb
aad
pop
test
mov
push
xchg
cmp
cmp
pop
test
iret
call
inc
dec
aad
inc
mov
pop
gs
pushf
dec
xchg
lds
or
ljmp
sbb
cmp
xacquire
outsl
in
mov
jb
and
adc
pop
push
lret
lcall
mov
sti
cmp
ret
xor
sbb
push
inc
mov
push
mov
ljmp
je
lock
lds
jne
pop
mov
mov
js
fsts
fisubrs
pop
mov
testl
mov
out
movsb
out
cltd
pop
int3
jo
clc
adc
notb
xchg
jmp
fsubl
aaa
lret
aad
loop
xor
aam
aam
dec
xchg
and
dec
sub
xor
lea
sbb
push
cmp
mov
xchg
mov
out
jmp
mov
in
sbb
push
inc
fisubrs
or
mov
fsubrl
int
adc
push
fmul
scas
ja
jno
and
adc
or
mov
sbb
dec
and
shl
lock
jbe
push
cmp
popf
push
mov
cmp
xchg
or
cltd
dec
call
cmp
aas
imul
xor
cmpb
hlt
movsl
xchg
pop
lcall
dec
std
scas
mov
pop
adc
out
in
lods
movsbl
pop
add
shl
pop
pop
fcoml
jmp
xor
sbb
aas
sub
mov
clc
aas
add
or
in
dec
add
push
sbb
pop
or
or
call
icebp
xlat
and
dec
mov
test
aaa
shl
xorb
dec
repz
sbb
das
cmp
shll
sub
outsl
fdivs
mov
loope
fwait
mov
dec
dec
stc
pop
dec
shr
push
jb
inc
fistpl
daa
sbb
pop
xchg
dec
stc
inc
dec
and
pop
cmp
pop
jae
syscall
fwait
jo
or
fstpl
adc
cmp
dec
jl
fiadds
loope
dec
fisubs
lods
sbb
fadd
add
loope
and
and
cli
out
and
xchg
adc
xchg
add
aam
sbb
mov
mov
cmpsb
ret
cmpsl
shll
faddl
sub
in
adc
inc
sti
dec
pop
jns
enter
incb
jns
sahf
push
inc
sbb
cmp
orb
adc
xchg
int
add
xor
das
cmpsb
in
in
fcoml
je
leave
adc
add
jns
and
fwait
xchg
mov
cmp
adc
sbb
out
stos
and
inc
nop
pop
fadds
sbb
inc
pop
dec
xor
and
jnp
mov
mov
movsb
mov
pop
ror
pop
inc
adc
inc
mov
mov
or
daa
cmp
sbb
xchg
sti
in
xchg
insl
sbb
pop
or
dec
jbe
popf
es
push
cld
rcll
inc
fcoml
lcall
mov
repz
lret
loope
xchg
aam
stos
fisubl
or
fstps
cmp
lds
test
inc
push
movsl
loopne
pop
xlat
push
pushf
clc
adc
enter
scas
notb
dec
fwait
loopne
jns
scas
xchg
loopne
cmp
mov
ss
inc
je
push
aam
mov
mov
sub
fiaddl
mov
mov
adc
add
fsub
xchg
popa
stos
repnz
fmulp
fisubrs
adc
icebp
and
inc
mov
repnz
add
stc
xchg
pop
mov
pop
jle
fstpl
cmc
inc
hlt
addl
shrb
repnz
mov
push
and
dec
test
cmp
mov
add
push
je
imul
mov
mov
ret
test
push
inc
arpl
push
neg
sbb
mov
iret
cmp
add
cltd
insl
push
jl
ds
push
jae
mov
push
popa
roll
mov
mov
aas
push
cmp
enter
into
xor
jp
mov
adc
xor
shl
leave
dec
jns
sbb
adc
mov
stos
imul
sub
jmp
or
stos
shl
in
pop
sbbl
push
test
pop
popa
loope
scas
rclb
adc
jle
pop
or
mov
insb
cmp
ret
sbb
shll
jle
push
shll
notb
dec
push
xor
pop
inc
mov
sbb
lahf
icebp
xchg
fwait
rorl
iret
mov
call
adc
mov
or
mov
push
subl
int3
dec
gs
xchg
dec
and
dec
add
mov
add
iret
aas
jl
pop
xlat
movsl
fistpl
add
jae
enter
and
movsb
mov
jmp
cmp
pop
xor
rolb
sub
lods
cmp
push
repz
inc
jl
sbb
sahf
add
sahf
pop
test
xchg
xor
adc
jecxz
or
cmp
mov
push
sub
cli
in
jbe
int
outsl
fildll
cmp
pushw
push
push
or
cs
rclb
mov
subb
das
mov
pop
in
xchg
test
enter
lahf
pusha
in
mov
pop
leave
rcl
movsl
mov
mov
mov
dec
into
stc
dec
mov
mov
std
sbb
lea
lods
scas
call
xchg
inc
ljmp
sbb
inc
cmpsb
hlt
mov
iret
xor
jns
xor
cmpsl
and
push
inc
push
xor
dec
ljmp
xchg
nop
aad
shll
or
jae
mov
ss
xchg
xchg
aam
movsl
clc
icebp
push
ss
pushf
xchg
aas
push
xchg
scas
aaa
add
test
add
movb
lret
push
jge
add
and
out
xchg
xchg
push
nop
imul
out
and
notb
in
adc
jge
xchg
jle
stos
gs
mov
cs
cltd
scas
ja
pop
pop
xchg
fucom
mov
or
pop
shr
jne
je
cld
add
lret
inc
mov
xchg
sub
jl
scas
lods
lods
je
mov
mov
mov
rcll
test
jmp
push
jp
jno
adc
sarl
leave
popa
or
and
fisttpl
dec
mov
xlat
popa
jne
mov
lahf
test
sub
in
mov
pushf
int3
pop
inc
xor
and
mov
imul
adc
inc
loop
mov
repz
lds
imul
mov
lock
jnp
mov
xchg
mov
pop
mov
fldl
mov
bound
xchg
mov
mov
adcl
insb
int3
ljmp
jp
dec
addr16
data16
fmuls
fisubl
mov
lret
inc
adc
cs
xor
ret
test
es
idivl
and
fistpl
leave
dec
pusha
sbb
inc
lods
and
xchg
aaa
lret
jne
or
fs
cmp
pop
fwait
pop
in
test
sahf
cmpsb
add
lods
fwait
push
or
lret
mov
fisubrs
mov
aam
imul
shrl
hlt
clc
sbb
fisttpll
std
fisubl
lea
ret
xchg
pop
jmp
dec
sbb
mov
pop
sbb
or
decl
jbe
and
mov
mov
inc
jo
mov
and
xchg
loope
pusha
sbbl
jnp
sub
fcompl
pop
jle
or
jmp
cs
iret
and
adc
jecxz
dec
and
mov
out
push
out
pop
cmp
fistps
daa
ja
cmp
insb
jo
dec
mov
jno
mov
out
jmp
and
imul
rcr
fwait
or
pop
js
push
sbb
sub
jb
jno
rcl
scas
sti
movsl
inc
js
ret
ret
push
pop
mov
clc
dec
mov
out
pushf
mov
repz
mov
popf
push
pop
js
rcr
cli
das
popa
xor
lcall
lock
enter
and
add
push
and
call
xor
lret
stos
or
add
aad
repnz
lret
cli
cwtl
mov
xor
gs
mov
mov
call
xchg
cltd
shl
mov
pop
out
clc
mov
dec
or
pusha
out
push
mov
jg
adc
inc
lret
insl
and
ds
pop
pop
sub
arpl
push
pop
and
fxch
lret
fistps
sbb
jno
inc
stos
and
xor
gs
leave
insb
push
hlt
xor
mov
dec
cwtl
clc
fildl
test
mov
pop
pusha
mov
mov
sahf
scas
inc
int3
inc
pop
jle
sbb
mov
incb
mov
repnz
gs
xor
push
loope
test
rcrb
fistpl
fwait
adc
and
mov
aam
enter
test
adc
push
out
sti
das
xchg
dec
mov
pusha
push
jg
pop
movsb
lret
jne
lds
push
scas
lods
test
lcall
stos
outsl
mov
pusha
lahf
sbb
ljmp
push
mov
test
cmpb
outsl
jno
in
inc
dec
fsubrl
out
sbb
shll
lock
or
pop
enter
xchg
mov
jno
jg
out
push
repz
movsl
sub
lea
xor
or
test
stos
mulb
rorb
aas
mov
sahf
cmc
pushf
fisubrl
mov
jns
in
or
loope
in
jnp
adc
int3
ret
cmp
rcrb
jge
xchg
test
push
push
inc
add
dec
jmp
packssdw
push
lahf
cmp
daa
sub
dec
fsts
xchg
add
sub
cli
mov
popf
les
push
adc
or
push
pop
fistps
adcb
int
aas
hlt
mov
call
cwtl
imul
jmp
sbb
sub
mov
je
das
je
cltd
jnp
mov
ret
and
sub
in
js
pop
subl
in
std
mov
add
xchg
xor
frstor
mov
and
push
mov
jge
mov
jecxz
or
mov
sub
test
inc
aad
xor
sub
mov
cld
loopne
mov
jle
call
fwait
dec
mov
xchg
loope
sub
add
jns
push
outsb
mov
inc
mov
icebp
stc
into
sub
daa
loop
scas
fadds
jmp
pop
ds
out
inc
xor
rcll
sbb
mov
aas
xchg
aad
dec
repnz
data16
add
sbb
push
and
pop
mov
xor
jecxz
mov
adc
arpl
shll
adc
ja
subb
enter
test
outsl
movsb
jno
pop
xor
inc
dec
jbe
jecxz
decb
inc
pop
out
push
push
dec
pop
in
and
movsb
cmp
pop
test
hlt
jne
xchg
loopne
adc
into
scas
test
lods
ret
repnz
cmpl
sub
lods
scas
rol
lea
xchg
inc
ret
push
cmp
sub
cmp
and
subb
dec
adc
call
jl
inc
data16
insb
add
sbb
xor
adc
fs
int
movsl
test
xorb
dec
xchg
mov
int3
dec
cli
sahf
outsl
sbb
or
fsubl
shr
loope
mov
adc
push
mov
pushl
mov
mov
push
cmp
mov
sub
in
xchg
iret
dec
add
cmp
inc
jb
xchg
fsubr
mov
push
jnp
shl
sti
inc
mov
sub
lea
pop
icebp
int
mov
jne
fidivrl
xor
sbb
or
and
or
lahf
push
dec
out
es
int
sti
stos
push
out
dec
cmpsl
repnz
movsb
mov
out
hlt
cli
xchg
fsubp
pop
mov
movsl
out
fcmovb
sbb
sub
inc
pop
xchg
fdivrs
mov
push
jnp
leave
dec
sub
cli
mov
aam
shl
cld
xchg
nop
stos
jp
xor
je
test
pushf
jmp
loopne
jg
cmp
cld
cltd
les
mov
out
in
in
push
je
cmpb
leave
imul
punpckhwd
pushl
movsb
shrl
or
add
add
push
push
addr16
loope
scas
xor
sub
adc
popf
fwait
nop
icebp
dec
jmp
loope
sbb
dec
sub
jns
ss
sbb
cmp
fnstcw
negb
mov
push
pop
ss
pusha
mov
and
inc
lret
push
dec
mov
push
cli
cmp
xor
push
mov
and
or
inc
xor
pop
add
nop
push
cmp
or
subl
addr16
ja
pop
loop
adc
shll
in
mov
cs
mov
push
jo
les
mov
add
movl
in
cmp
pop
nop
mov
fxam
adc
in
cld
idivb
adc
je
or
pusha
jecxz
enter
loope
sti
outsl
pop
push
cmp
xor
clc
aaa
inc
add
mov
aas
jge
jb
mov
mov
lds
scas
cmc
push
cmpsb
lret
push
andb
adc
mov
std
or
jae
or
mov
mov
or
ret
test
mov
xchg
cs
mov
sbb
jb
in
xchg
out
leave
std
cmp
filds
cmpsl
jle
pop
push
das
out
mul
shrl
push
pop
sbb
cmp
pop
in
dec
inc
aam
or
add
clc
push
test
or
popa
enter
xor
sbbb
cltd
ret
out
inc
call
mov
in
inc
fisubrs
imulb
std
inc
mov
push
cmp
das
fs
movsl
mov
dec
sub
daa
xor
push
lret
in
fadds
adc
insb
outsl
lock
sub
ja
push
dec
mov
out
cli
jne
pop
ret
shl
cltd
shrb
cmp
ficompl
xchg
bound
lret
sbb
pushf
out
or
mov
fimuls
data16
repnz
movsb
adc
fisubs
sbb
jp
jbe
mov
jp
insl
fisubs
leave
mov
into
cmpsb
lret
or
ret
mov
mov
push
insb
leave
jmp
cmp
pop
push
arpl
shrb
not
xchg
test
repz
mov
es
idivl
in
adc
xor
ja
and
dec
lods
mov
pop
cs
mov
iret
mov
and
fistpll
movsb
into
nop
insb
jp
and
seta
xor
cli
dec
mov
mov
out
mov
aad
ret
popa
aaa
outsl
push
movsb
jg
dec
je
jns
inc
xor
mov
mov
add
jge
jns
ja
adc
dec
lret
pop
in
leave
sbb
stos
in
lods
cmp
bound
mov
mov
and
dec
and
mov
lods
mov
orb
mov
cld
stos
inc
aad
and
pop
rcrl
popf
pop
mov
sbbb
movsl
scas
or
push
mov
repnz
je
cmp
jmp
mov
sar
push
and
xor
sti
cmp
or
cltd
pushf
or
es
and
or
xor
imul
mov
push
sbb
mov
sub
faddl
ss
shrl
cmp
in
mov
repnz
sbb
mov
xor
mov
cwtl
mov
ret
pop
outsb
lcall
cmp
jmp
cli
int
cmp
pop
in
lock
fisttpll
jle
or
repz
mov
movsb
dec
aad
inc
mov
fimuls
sbb
movsb
add
push
mov
lds
sbb
sub
dec
jne
push
call
mov
mov
test
fs
sti
xor
loop
dec
and
xchg
pop
and
cmp
arpl
fidivrl
fimuls
mov
icebp
mov
and
faddl
dec
pushf
cmp
sub
clc
or
mov
cs
stc
jecxz
mov
lods
inc
icebp
popf
mov
mov
adc
add
cltd
sahf
xchg
pop
ljmp
outsb
cmp
or
push
rcr
inc
cli
mov
pop
testl
pop
sbb
shlb
adc
jmp
aam
and
xor
mov
push
fistps
inc
push
adc
ja
xor
cli
jo
rcrb
aas
pop
or
push
cmp
outsl
nop
xchg
jno
jecxz
mov
sub
sub
lods
jno
fsubp
push
pop
aas
jb
in
mov
jns
aam
test
movsl
imul
fiadds
sub
les
jle
pop
enter
push
repz
cltd
insl
push
xchg
mov
push
mov
popf
inc
and
cmp
add
sbb
outsl
pop
push
mov
adc
lcall
jmp
fcom
mov
ror
jae
stos
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
xorl
mov
mov
mov
xor
add
mov
mov
xor
orl
push
xor
mov
mov
subl
add
mov
mov
subl
mov
xorl
mov
mov
mov
subl
mov
add
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
sbb
mov
sbbl
xor
and
mov
add
movzwl
xor
mov
movb
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
pushl
pushl
call
cmpl
jb
lea
mov
movl
cmpl
je
cmpl
jle
jmp
push
pushl
pushl
pushl
push
pushl
call
xor
or
dec
mov
jmp
mov
add
mov
xor
subl
add
sbbl
mov
movl
cmpl
je
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
movl
push
movl
cmpl
je
cmpl
jg
jmp
push
call
xor
or
dec
mov
jmp
movl
mov
push
mov
andl
xor
or
mov
sbbl
push
add
jmp
mov
movl
mov
inc
cmp
movl
jb
not
mov
orl
xor
sbbl
add
movl
jmp
sbb
mov
subl
mov
sbbl
xor
orl
mov
orl
add
movzwl
mov
and
mov
movzwl
addl
xor
add
inc
mov
movl
mov
inc
mov
mov
movl
cmp
jne
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
push
call
jmp
mov
mov
sub
xor
add
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
pushl
push
pushl
push
call
jmp
mov
xor
add
neg
mov
or
movl
movzbl
or
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
xor
mov
adc
mov
adcl
xor
orl
add
mov
mov
mov
je
add
mov
andl
mov
xor
adcl
xor
sub
notl
sub
xor
sub
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
adc
mov
subl
lea
movl
mov
mov
mov
add
adcl
imul
mov
xor
mov
xorl
mov
movl
add
movl
and
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
jmp
xadd
dec
push
dec
dec
sar
mov
idivb
inc
mov
jnp
xlat
sahf
jnp
cmp
insb
jb
cmp
repnz
bound
adc
or
adc
ds
cld
sub
adc
mov
into
clc
xor
insl
sub
dec
and
cmp
xor
mov
push
aaa
push
lret
ret
jbe
sub
or
fbstp
lds
cltd
inc
aad
pop
or
sbb
dec
rcrl
cmpsl
arpl
sub
stos
test
mov
fcompl
xor
add
outsl
dec
jne
repnz
mov
sbbl
push
stos
in
dec
jmp
lock
inc
test
dec
push
jne
in
iret
iret
fadds
push
stos
test
xor
push
das
stc
jecxz
cmp
loopne
xchg
xor
in
mov
out
imul
sub
es
mov
and
or
sbb
faddl
sarl
mov
sbbl
pop
lock
stos
adc
jmp
scas
cmp
fstps
cmp
jae
sahf
in
or
or
loop
aad
data16
rol
lcall
popf
add
lahf
sub
iret
inc
or
mov
fisubl
dec
add
push
arpl
sub
xchg
ret
sbb
mov
insl
adc
shlb
dec
daa
stos
lods
xchg
sub
sbb
mov
rep
pop
add
outsl
cmp
pop
pop
or
and
lea
cs
loopne
mov
xor
xor
mov
aas
jg
stc
subb
xchg
pop
mov
lods
xchg
popf
cmpb
fdivs
les
test
jle
jb
push
pusha
jl
ror
cmp
mov
enter
loop
xor
add
xor
cmp
ds
cltd
or
rclb
push
dec
xchg
out
inc
mov
loopne
rcrl
bound
or
stos
pop
or
xor
or
shrb
jne
xor
addr16
and
push
fs
push
out
xchg
ja
cmp
and
lock
rclb
test
mov
arpl
mov
inc
inc
call
mov
inc
out
push
mov
test
fwait
aam
mov
je
out
dec
fbstp
lret
mov
scas
jl
stos
movsb
cli
push
test
outsl
cld
jmp
in
sub
and
shll
xor
jp
bound
in
pop
lds
lock
mov
jl
xor
push
aas
jmp
movsl
push
cwtl
add
stos
sbb
cmp
out
cmpsb
mov
xor
jo
jg
sbb
mov
subb
xchg
jge
adc
adc
inc
ret
rcll
pop
lahf
mov
data16
xor
sbb
pop
cmp
leave
movsl
loope
iret
imul
ret
mov
outsl
jb
arpl
xchg
jg
xor
mov
sbb
mov
jmp
mov
cs
int3
xchg
int3
and
out
add
pop
jmp
repnz
fcmovbe
or
add
out
mov
mov
fidivrs
ffreep
cld
fwait
dec
and
int3
loopne
or
mov
addl
sbb
xlat
scas
ja
xchg
fstp
imull
sub
sub
in
inc
or
out
mov
adc
jae
jecxz
adc
jmp
jns
inc
aaa
in
and
add
pop
sub
cmp
mov
adc
orb
pop
out
movsl
fs
sub
sub
pusha
mov
cmp
cmp
push
dec
sub
sbb
mov
out
sbb
dec
jg
cmp
cmp
dec
adc
stos
sbbl
call
push
push
fdivr
jo
sbb
arpl
pop
mov
cmc
ja
push
and
shll
mov
xor
test
hlt
mov
cmp
jb
jnp
mov
sbb
addl
inc
cmp
das
sbb
cmp
movsl
hlt
or
in
and
sub
inc
cmp
je
loop
mov
or
lcall
xor
push
sub
xchg
and
stos
pop
or
rcr
mov
cmp
or
jo
mov
cmp
mov
loop
mov
ljmp
xor
in
xchg
outsl
jo
and
enter
pop
jge
mov
popa
dec
mov
imul
addr16
jnp
and
ljmp
sbb
fwait
sbb
mov
fstpl
ret
mov
insl
jne
imulb
into
add
repnz
rclb
inc
pop
loope
sti
dec
insb
leave
ret
sar
mov
sbb
xchg
and
ljmp
push
mov
cwtl
clc
and
cmpsl
inc
inc
xor
jge
mov
cmpsb
adc
jecxz
jb
jae
xchg
pop
lret
push
scas
ja
cmpb
pushf
in
dec
push
sbb
push
shl
xchg
fs
push
sub
push
fs
jecxz
adc
lret
enter
shrl
arpl
adc
mov
jnp
in
fnstcw
xchg
sti
lods
adc
sub
stc
mov
cmp
xchg
and
rcr
xchg
or
shlb
sahf
mov
push
pusha
adc
cwtl
sub
jno
mov
jmp
xchg
or
mov
icebp
scas
in
xor
cmp
mov
pushf
or
xor
push
adc
or
push
jno
das
or
cmpsl
or
bound
pop
pushf
lret
mov
cli
pusha
jno
fs
ja
popf
fwait
inc
xor
jle
jne
pushf
add
sub
jbe
pop
stc
int3
flds
dec
fdivp
jle
fwait
aam
scas
and
mov
std
mov
add
loope
xor
mov
mov
or
fstpt
nop
xchg
xchg
stc
xchg
mov
pop
xchg
decb
xorl
pop
sbb
negb
ss
dec
sbb
sub
ret
push
inc
mov
or
movsl
add
mov
add
vpsllq
push
xor
inc
push
xchg
mov
xor
out
xor
xor
jmp
jne
ljmp
aam
push
cs
ret
adc
pop
pop
daa
jmp
loop
ja
repz
and
jl
fidivl
inc
pop
roll
popf
sbb
sub
mov
sub
js
addr16
push
xchg
sarl
adc
movsl
dec
add
inc
in
in
inc
mov
in
sbb
pop
in
rorl
cmp
pusha
pop
mov
test
call
xchg
and
or
popf
aas
jno
cmp
jl
mov
call
sub
fmuls
xchg
cltd
or
jmp
jbe
inc
and
lahf
jnp
gs
sbb
adc
cmc
fpatan
iret
ret
xchg
mov
test
or
mov
iret
aam
adc
xor
sbb
insb
stos
push
mov
aas
mov
mov
and
ljmp
fimull
fs
les
not
ret
enter
loopne
scas
sub
pop
add
mov
xchg
call
lret
testb
push
je
sbb
or
lods
lods
mov
cmpsl
cmp
xchg
mov
movsl
mov
push
outsl
out
enter
or
pop
arpl
hlt
lret
push
inc
push
inc
mov
xchg
mov
lods
pop
shl
mov
enter
imul
cmpsb
leave
fidivrs
or
loop
and
popf
into
lds
add
and
add
mov
push
push
repz
fldcw
lret
mov
and
dec
in
jno
sub
mov
in
jp
pop
ljmp
pusha
or
mov
mov
sub
mov
mov
repz
iret
cli
pcmpeqd
test
mov
je
test
mov
das
in
shlb
and
addr16
lahf
inc
into
dec
mov
jge
dec
or
dec
or
test
push
sbb
fadds
fnstenv
rol
push
xchg
in
jns
out
dec
lock
or
imul
lret
mov
sti
push
mov
and
cmp
inc
fucomi
push
pop
mov
mul
cmpsb
add
mov
nop
mov
cmp
pop
cli
movsl
sub
sub
data16
jge
and
cmp
jmp
xchg
or
cmpsb
bound
lret
pop
test
lret
sbb
loopne
ret
jne
lock
xor
insl
mov
fwait
xor
sbb
push
aam
xchg
ficoms
mov
xor
pop
inc
outsb
pop
or
fstpl
and
mov
fildl
das
mov
cmp
lods
pop
outsl
outsb
adc
inc
xchg
scas
and
mov
push
mov
popa
xchg
imul
add
or
lea
out
push
les
jae
sbb
data16
nop
movsb
sbb
ja
mov
arpl
les
push
nop
add
scas
mov
jmp
leave
xor
add
dec
fwait
call
lea
fwait
push
ljmp
adc
sti
sbb
out
inc
add
xor
dec
lods
divb
or
mov
mov
mov
dec
gs
mov
inc
outsl
dec
cld
les
xor
cld
out
aad
hlt
mov
das
into
insb
push
fs
bound
mov
or
andl
pop
mov
sbb
xor
rdpmc
imul
cmp
roll
repnz
rorb
popf
adc
mov
ret
repnz
and
addl
addr16
adc
in
arpl
pop
jne
sbb
mov
test
xchg
ret
sbb
jae
mov
outsl
cmp
jecxz
pop
pop
int3
fldl
mov
movsb
lods
xlat
loop
lods
xchg
xchg
dec
mov
movsb
cmp
pop
or
addr16
pop
fcomp
sbb
aad
das
xchg
lahf
test
mov
add
hlt
into
dec
popf
js
dec
push
ret
sub
xor
and
popa
pop
rclb
fwait
add
lcall
aaa
and
jecxz
jg
outsb
mov
stos
rclb
jno
push
test
daa
call
pop
push
xchg
mov
ljmp
fcos
lods
fs
in
push
jnp
lcall
or
inc
test
pop
iret
xchg
mov
fsubr
sarb
rorl
les
jo
gs
negb
adc
test
out
push
push
shll
das
cmc
ffreep
fucomp
mov
inc
adc
cmpsl
insl
mov
clc
mov
iret
sub
inc
sbb
xor
xor
push
jmp
mov
jno
outsb
stos
sub
dec
pminsw
ljmp
pop
cmpsb
or
sub
xchg
pop
pop
mov
daa
fsubrl
loope
mov
pop
and
cmpsb
mov
cmp
out
cwtl
sub
lods
jo
xor
push
fnstcw
nop
xchg
push
push
xor
stc
daa
mov
pusha
into
ljmp
pop
out
adc
cmp
dec
mov
test
cmpsb
xchg
imull
mov
inc
push
xor
add
out
cmpsl
jae
sbb
cmc
testb
inc
repz
in
enter
lcall
icebp
lcall
inc
pop
adcl
lods
push
mov
icebp
test
jns
nop
fisubrs
mov
out
shrb
cmp
fidivrl
and
test
push
and
subl
pop
mov
pusha
sbb
lock
ret
int3
xor
call
and
sahf
mov
dec
sbb
addr16
lods
jp
push
pop
lods
sbb
mov
leave
pop
sbb
jo
dec
adcl
adc
or
cmc
pop
adc
popw
xor
stos
insb
test
pop
or
inc
push
shlb
pop
and
adc
jnp
dec
mov
jp
jne
mov
lret
push
ret
mov
jp
lods
jo
icebp
clc
out
repnz
or
pop
pop
lds
cmp
add
sub
sub
xor
div
push
into
nop
out
aaa
jmp
jge
scas
hlt
jge
stos
imul
scas
xor
jmp
inc
jl
sbb
mov
cmpsb
lods
aas
inc
xchg
push
shlb
and
incl
cmpsb
in
insb
inc
jnp
push
out
enter
inc
pop
jnp
push
call
sub
jg
test
stos
jbe
push
xchg
clc
in
dec
mov
mov
mov
pusha
test
push
mov
xor
std
or
or
nop
fnstsw
addr16
loop
jg
aam
and
inc
add
rcrb
test
dec
ljmp
sahf
mov
jge
leave
cmp
jl
xor
cmp
xor
mov
push
pusha
out
pop
pop
dec
popa
push
mov
aas
fsubl
ret
imulb
push
mov
push
popf
vpsllq
outsl
push
lock
ror
incl
or
scas
aas
ss
cmpsb
dec
jo
jb
mov
loopne
jp
sbb
dec
jne
xorl
or
and
daa
cmc
sbb
adc
mov
dec
cmp
dec
cwtl
test
lds
clc
adc
add
int
and
adc
nop
sbb
out
inc
jns
dec
cmp
orb
into
sub
inc
idivl
mov
and
push
lret
cli
pushf
movsw
and
clc
jmp
mov
lods
mov
movsl
xor
pop
pushf
jne
js
pushf
mov
fimuls
jno
mov
xchg
mov
mov
testb
jge
jmp
mov
cmp
pop
lds
cmpsb
int3
sbb
aam
jmp
insb
dec
aaa
dec
mov
xor
xchg
test
dec
push
fcompl
adc
cmp
mov
repz
adc
sbb
movsb
mov
adc
cmp
xchg
mov
data16
aas
mov
daa
cmp
xchg
and
stos
fsubrp
dec
push
fwait
cmp
leave
int
fwait
or
inc
push
lret
aad
fcoms
aam
push
sbb
ds
mov
cmp
leave
stc
or
jecxz
mov
idiv
add
cmp
addl
imul
ret
xchg
cli
fs
fistpll
sbb
sti
lds
mov
mov
nop
ja
mov
lahf
int3
daa
int3
cwtl
lea
mov
push
cli
ja
rcl
or
mov
jb
add
add
jge
movsb
add
es
daa
mov
ljmp
mov
div
and
dec
sub
lock
xlat
cmpsb
jnp
sub
aad
clc
jo
loop
and
call
xchg
mov
pusha
movsb
imul
jns
adc
mov
jne
test
cmpsb
aad
xchg
push
lahf
loopne
xor
clc
mov
enter
cmp
xor
lods
cltd
fmull
sub
mov
idivl
cmp
xlat
push
fdivs
push
fst
cwtl
xchg
sub
mov
cmp
outsl
pusha
les
ljmp
adc
xchg
lock
inc
sub
cmp
cmp
negb
test
xor
bound
fcomps
outsl
mov
cmc
dec
push
pop
jmp
lods
xchg
xorl
mov
pop
movb
lcall
and
xchg
and
xor
int3
and
aaa
xchg
in
mov
cmp
bound
and
dec
rcll
dec
pushl
loopne
mov
aaa
cs
pop
sub
xor
mov
mov
mov
fs
cmp
dec
out
jbe
js
or
lcall
mov
xlat
jo
mov
inc
mov
ja
jb
aas
out
insb
cld
nop
cmp
ficoml
cwtl
mov
inc
cmp
and
pop
push
sbb
les
jmp
outsb
xor
stc
sub
inc
int
cmpsl
inc
jno
pop
rolb
faddl
imul
sub
push
insb
outsl
addl
outsl
shlb
or
mov
loope
sbb
push
ficompl
shll
inc
xchg
addr16
mov
out
cmpsl
addr16
or
mov
lahf
hlt
icebp
std
dec
loope
cmp
cmpl
incl
mov
rcll
out
rol
sub
shll
ret
aad
pop
inc
cmp
push
xchg
movsb
test
add
mov
mov
cwtl
test
in
and
fbld
push
push
aas
sub
push
adc
adc
mov
pop
sahf
mov
test
mov
or
jo
clc
jns
add
je
sbb
aam
pop
adc
xor
sbb
sub
xchg
repnz
cmc
fisubrs
fadds
jb
aam
mov
cmpsl
stos
gs
mull
jbe
js
rcpps
ss
pop
mov
movsl
ret
dec
sbb
rcr
push
mov
lods
das
sbb
dec
mov
sbb
stc
xchg
mov
scas
shr
cmp
inc
sbb
mov
aad
cltd
movb
add
xor
sahf
push
xor
sbb
add
pop
ljmp
xor
lahf
aam
jb
mov
outsl
jne
ret
xchg
into
pusha
int3
cmpsb
sarb
pop
subb
daa
and
add
mov
push
das
mov
or
fcomi
add
ret
mov
movsl
fisttpl
inc
jmp
pop
jno
mov
ss
xor
pop
mov
mov
or
les
int3
jnp
pusha
rcl
and
or
jge
shlb
jnp
dec
jl
cmp
or
pusha
sub
in
jp
jnp
ja
flds
sarb
lock
cmpsl
xor
inc
aas
jae
in
addr16
xlat
adc
ret
ljmp
dec
nop
ds
jecxz
adc
mov
cmp
pop
js
push
xchg
mov
pushf
xchg
sbb
dec
outsb
jno
das
jns
rolb
icebp
dec
mov
idivl
push
xor
in
lods
add
mov
in
inc
jo
fildl
inc
les
add
out
arpl
aad
mov
or
shlb
mov
and
aad
repz
jno
mov
sti
cmp
mov
sub
xchg
jge
dec
jecxz
jne
pop
into
sub
mov
xor
xor
icebp
or
pop
roll
jl
sar
scas
out
lock
pop
and
push
test
add
aaa
sbb
popf
sub
lret
stc
push
mov
or
dec
mov
faddl
ss
adcl
adc
lods
jp
mov
iret
lcall
cmpl
jbe
lds
jg
mov
jmp
pop
push
fimull
cs
mov
into
pop
push
xchg
mov
inc
inc
mov
lret
aas
movsl
inc
cmp
scas
repnz
mov
mov
loope
mov
pushf
gs
divb
clc
jecxz
and
lea
cld
fstpt
cmp
sti
mov
aam
push
mov
push
add
xchg
inc
or
jnp
pop
arpl
sbb
lcall
adc
jae
xchg
xor
xlat
jecxz
std
int
mov
xor
jno
aaa
cli
rcl
adc
xchg
lock
outsl
out
xchg
sub
in
pop
inc
ret
ja
incb
push
int3
mov
mov
shlb
loopne
out
gs
mov
loopne
ret
mov
adc
in
xchg
mov
mov
or
sub
push
xchg
push
movsl
int
inc
mov
pop
jae
arpl
in
sub
mov
repnz
sbb
or
add
ss
push
mov
fidivl
shrb
lret
jo
into
sbb
inc
loopne
mov
les
and
pop
stos
dec
into
mov
mov
or
or
pmaddwd
cmc
in
es
je
clc
xor
jae
and
jns
dec
mov
ret
into
pop
pop
mov
sbbl
out
ret
add
and
cmp
push
inc
decb
dec
mov
adc
rcr
in
gs
shl
sbb
cld
sbb
js
mov
leave
xchg
cltd
test
lea
addr16
xchg
mov
mov
test
cltd
jo
js
fstpl
pop
out
aam
sahf
ja
cmc
outsl
push
pop
ss
push
shll
and
sub
leave
movsb
jo
daa
adc
xor
cld
cmpsb
lds
mov
lods
xchg
scas
scas
fucomi
gs
pop
adc
jle
and
lret
ret
lods
out
mov
adc
insw
arpl
adc
or
test
pop
mov
add
rcr
mov
aad
xchg
std
out
nop
sbb
and
paddusb
adc
outsl
sahf
or
js
fs
or
sti
pop
lret
das
push
out
mov
hlt
mov
cs
cwtl
loope
mov
adc
sbb
sbb
test
dec
std
mov
mov
test
jne
cmpsl
data16
lcall
call
adc
lret
loopne
icebp
cs
shll
or
mov
jl
mov
push
lret
inc
add
out
je
dec
jne
inc
in
mov
lea
dec
aad
bound
mov
out
mov
mov
pop
stc
mov
cmpsb
arpl
sarl
jns
arpl
cmc
pusha
rol
negb
xor
cmovae
inc
push
dec
sbb
clc
lahf
jg
stc
repnz
sbb
pushf
lods
mov
shrb
ret
mov
mov
iret
jecxz
in
inc
jg
lret
ror
xor
lds
mov
jnp
push
cwtl
pop
xor
cmp
inc
rclb
mov
test
test
in
stc
add
mov
xchg
stos
push
mov
lock
sub
xchg
leave
mov
movsl
mov
dec
mov
test
sub
aas
iret
shll
adc
mov
adc
cmp
inc
aas
jmp
mov
aad
rcpps
dec
pop
imul
mov
fbstp
lcall
pop
ror
aad
fcoml
mov
sub
pop
lea
imul
sbb
mov
pushf
pop
xor
jg
adcl
je
shlb
sub
cs
pop
mull
mov
aad
inc
pop
mov
sub
ljmp
repz
or
mov
mov
out
stc
out
jo
and
xor
mov
shrl
or
orl
or
call
inc
mov
iret
imul
addr16
and
fsubs
lds
push
dec
push
push
jge
mov
in
movsb
push
xlat
push
cmp
les
dec
xchg
xor
popf
out
push
sbb
fimull
cmpsb
sub
popf
pop
push
jmp
mov
sub
lahf
pusha
rol
sub
inc
jae
fistps
lods
mov
or
push
scas
scas
cmpsl
nop
sbb
jo
push
inc
pushf
xchg
pop
out
icebp
loope
mov
js
aam
ret
int3
xchg
sbb
jnp
add
ficoml
mov
push
rcr
mov
out
inc
xchg
pop
roll
cmpsb
cmpsl
data16
mov
arpl
pop
sbb
dec
imul
lods
sbbb
loopw
jg
and
mov
out
dec
pop
push
fnsave
mov
add
ud2
cmc
and
add
icebp
add
in
mov
xor
loopne
lcall
mov
pusha
and
rcl
add
insb
dec
pop
loop
mov
sub
cmovae
insb
and
gs
adcb
pushf
addb
es
in
inc
les
push
jle
sbb
cmc
sub
and
lahf
push
xchg
fsubl
aaa
fwait
test
mov
add
out
mov
test
push
shlb
adc
scas
outsl
int3
stos
xlat
or
or
inc
xchg
int3
sub
and
rcl
push
ret
jo
cmp
daa
mov
stc
sbb
push
xor
ret
dec
mov
jbe
xlat
mov
inc
rclb
cmp
test
sbb
ficoms
or
lahf
enter
cwtl
fisubs
cmp
jae
insl
cmpsb
scas
les
bound
sbb
sbb
xchg
adc
call
fdivr
jne
out
shl
push
push
and
mov
mov
out
and
push
ds
mov
shll
adc
mov
shlb
lds
nop
idivl
and
sbb
repnz
xor
sbb
jl
xchg
mov
je
jbe
cmp
ret
in
mov
jmp
out
pop
imul
fmull
fdivrs
imul
pop
or
nop
mov
push
adc
mov
insl
incl
or
outsl
rorl
cmp
loope
inc
push
mov
xchg
mov
fsubrl
fldcw
xor
or
sbb
mov
pop
loop
nop
xor
call
cmc
lret
xlat
and
sub
jb
mov
bound
push
jbe
mov
fsubrs
mov
jmp
sahf
dec
pusha
mov
das
ds
jo
ret
mov
cmp
push
xor
mov
repnz
sbb
pushf
adc
dec
fucomp
fisubrs
insl
inc
sbb
lret
mov
ja
jo
push
mov
aad
pop
pop
bound
js
scas
pop
add
mov
dec
cmp
sub
cltd
stos
fstpt
and
mov
imul
pop
sahf
pop
ljmp
sahf
icebp
xor
xchg
mul
sarl
mov
xor
nop
ljmp
aas
lods
mov
jnp
push
mov
fwait
xor
and
pop
pop
hlt
jp
aad
mov
push
leave
enter
mov
xchg
pop
test
push
pop
sbb
into
int
adc
pop
add
shrl
movl
push
mov
aaa
jne
lock
out
jle
cli
or
pop
into
jb
xchg
push
add
lds
roll
pop
lds
fldl
or
mov
lret
sub
jle
movsl
lcall
pusha
lahf
mov
push
cmpsb
ss
xor
mov
imul
leave
call
mov
ds
fwait
je
insb
lods
push
inc
xor
add
addl
in
add
or
pinsrw
rcll
mov
cltd
mov
mov
mov
pop
mov
add
and
mov
and
pop
repz
mov
push
aad
jb
jo
inc
cmp
scas
pushf
lret
adcl
popf
xchg
mov
es
aas
add
sbb
xchg
daa
aaa
mov
xchg
aaa
lret
jl
aaa
mov
sbb
push
sub
xor
fldcw
cltd
int
es
sbb
lds
cmp
lret
cmp
enter
inc
fldenv
dec
mov
mov
or
lea
les
push
arpl
ficompl
jns
mov
dec
mov
adc
out
xor
adcl
push
adc
xchg
push
jle
decl
sar
lcall
mov
hlt
mov
xlat
add
aam
fcompl
out
daa
push
mov
or
mov
iret
and
scas
cli
out
testb
xchg
int3
or
fwait
jl
scas
xor
cmp
adc
imul
adc
pusha
lea
mov
aam
in
mov
push
repnz
pop
mov
sbb
inc
and
dec
int
pushf
push
insl
push
lods
jg
inc
shll
jl
cmp
lock
pop
les
testb
or
inc
pop
jne
rol
cmpsb
repnz
std
pusha
data16
pusha
ja
cs
out
pusha
inc
loope
jmp
loope
out
loope
inc
mov
sarb
or
pop
push
fsubl
sbb
dec
mov
cmc
popf
repz
daa
dec
xchg
pop
loope
xchg
mov
pushf
xor
rorl
iret
dec
and
loope
jle
mov
test
jno
daa
mov
mov
cmp
add
jne
lret
xor
and
push
iret
arpl
in
clc
jb
jnp
imul
and
outsb
lret
scas
iret
mov
scas
dec
and
repnz
repz
jne
jge
jns
int3
scas
dec
inc
adc
jle
aas
cwtl
ss
or
gs
xchg
dec
jmp
pop
add
bound
jno
imul
or
cwtl
hlt
in
jbe,pt
ret
ss
orb
xchg
add
lock
nop
push
xor
js
jns
mov
adc
push
xchg
into
loopne
add
cmc
insl
rorl
jno
test
aas
mov
outsl
adc
mov
out
mov
test
mov
jg
sub
sbb
or
aas
sub
je
clc
sbb
and
lret
imul
dec
push
add
mov
lahf
fcmovu
jge
jecxz
daa
icebp
enter
xor
cwtl
sbb
jmp
fimull
fisubrs
cltd
sbb
sub
outsl
inc
aas
xor
mov
dec
and
mov
imul
lret
in
insb
or
pop
mov
scas
mov
push
pusha
cmp
in
into
rcl
sub
or
sbb
inc
sti
and
out
mov
rorl
mov
xchg
sti
ja
mov
dec
aad
jp
mov
test
sahf
mulps
jecxz
cmp
imul
nop
pop
xor
std
popa
imul
arpl
pushf
pushf
cmp
movsb
xor
arpl
xchg
addr16
pop
add
daa
ret
pop
xchg
sub
and
xchg
push
pop
push
cli
out
scas
pop
ds
inc
repz
insb
add
pop
jp
call
mov
sbb
and
dec
mov
jno
sbb
cmp
add
test
fldt
addr16
daa
xor
and
pop
xchg
push
inc
mov
movb
jae
sbb
mov
std
sbb
out
adc
mov
jle
leave
in
or
cmpsl
mov
imul
outsb
js
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
jmp
mov
incl
add
sbbl
or
movl
cmpl
je
cmpl
jle
jmp
pushl
call
mov
dec
mov
jmp
mov
add
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
addl
sub
add
sbb
mov
xor
mov
mov
sub
mov
add
xorl
xor
mov
movzbl
adc
mov
xorl
xor
add
movl
jne
jmp
mov
inc
sub
movzbl
xor
xor
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xorl
xor
xor
subl
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
jmp
enter
jecxz
dec
push
add
xlat
mov
int
push
jb
jnp
sahf
jnp
mov
jge
cmpsb
add
cmp
mov
add
stc
pop
call
mov
pop
arpl
lock
xchg
adc
sub
mov
ds
mov
sar
pop
shlb
call
sbb
push
cmp
mov
mov
std
fstps
hlt
lcall
mov
arpl
filds
cmpl
mov
int
mov
lret
push
cmc
outsb
jae
jne
xchg
mov
mov
js
and
push
insb
sbb
pop
jbe
icebp
out
add
int
inc
nop
rcrb
mov
and
sbb
and
pop
stc
and
jecxz
subl
or
mov
ret
cmp
fsubrp
movsb
loope
sarl
cmp
orb
int3
sub
sahf
inc
pusha
mov
push
jmp
jbe
jns
add
cmc
mov
adc
imul
scas
out
rcrl
mov
lret
cmpsb
mov
idiv
inc
in
jne
stos
sbb
pop
adc
mov
mov
mov
imull
jmp
mov
enter
jge
out
mov
je
mov
mov
repz
mov
inc
imulb
adc
fldl
push
pop
outsb
inc
cmpsb
lods
or
int3
insb
jg
sub
test
sbb
jmp
dec
pop
push
cli
fsqrt
sti
jae
gs
les
xchg
cmp
sbb
cmpsl
sbb
imul
mov
pushf
loope
lahf
add
rcpps
sbb
in
add
in
std
mov
cmpsl
pop
mov
dec
mov
sub
adc
cmp
rorb
add
xor
loop
ja
mov
jp
cmp
jo
in
bound
mov
mov
sub
and
xor
fsts
mov
lahf
loope
mov
in
pop
pop
mov
shlb
aaa
inc
xor
sbb
lds
scas
push
ja
jno
sub
pusha
xor
pop
push
and
fcomip
in
push
xchg
test
lods
test
cmp
cmc
rorb
faddl
imul
sbb
imul
xor
lods
insl
jecxz
mov
xchg
loope
cltd
frstor
inc
mov
pop
pop
daa
loop
movsb
add
ret
xor
dec
sub
orl
pop
or
jne
pop
pop
repz
cmp
adc
aad
xor
scas
mov
fisubrs
dec
push
mulps
and
add
mov
jecxz
fs
pop
inc
adc
mov
icebp
and
mov
out
xor
ret
and
and
sbb
or
jne
push
rolb
dec
cmpsb
sbb
and
push
adc
lret
pop
and
mov
ret
sbb
hlt
xchg
mov
fldl
xchg
dec
xchg
mov
dec
jp
jg
int
lea
xor
lcall
sub
or
adc
dec
push
lock
xchg
push
or
std
jns
jmp
in
aas
cld
mov
pop
jle
cltd
and
lret
jmp
push
push
lods
or
les
stc
jmp
and
mov
bound
push
enter
out
fisttps
mov
mov
push
popa
shrl
jns
xchg
jl
xchg
popa
sbbl
loope
repnz
xchg
mov
sbb
or
or
mov
icebp
mov
out
std
and
hlt
dec
push
pop
mov
movsl
icebp
test
cmp
and
in
dec
ret
lds
cmp
aaa
leave
lahf
das
push
repz
mov
loop
pop
sar
rol
test
mov
cmp
das
addb
mov
in
xchg
rcll
lret
arpl
int
jnp
aas
push
adc
jnp
movsl
into
inc
sub
mov
fsubl
mov
flds
adc
jae
push
stos
ja
sbb
mov
cmp
push
inc
test
data16
inc
daa
loop
ss
rolb
xchg
in
pop
test
pop
push
out
lods
popf
add
sub
or
fbstp
pop
aad
mov
adc
in
pop
sub
hlt
pop
adc
pop
mov
jg
aad
xchg
adc
and
push
fists
jbe
fisttps
xchg
cmpsb
out
pop
and
ss
sub
jge
lret
negb
sbb
sahf
push
movsb
rolb
dec
sub
inc
std
lds
cmp
in
push
loope
loope
mov
dec
daa
push
icebp
cmp
cmpsb
push
xor
shll
in
loopne
sbbb
sahf
in
in
fdivr
gs
in
dec
scas
imul
sahf
add
sbb
cmpsl
or
push
ss
hlt
xchg
std
jnp
popa
mov
lret
aam
enter
adc
xor
leave
xchg
scas
cwtl
bnd
jns
pop
dec
dec
outsb
dec
jns
mov
popf
movsl
jge
jmp
push
je
adc
pop
add
lds
push
rcl
imul
imul
jno
jg
repz
out
lods
aas
cmp
xchg
icebp
cmc
jecxz
in
lret
or
icebp
data16
fwait
xchg
xchg
repnz
lret
xor
mov
or
sub
scas
push
or
cs
xor
call
fldenv
push
into
or
loop
pop
out
mov
cmp
enter
push
mov
pop
jg
pop
lds
mov
sbb
jns
ds
shrl
out
popa
push
stos
lods
xchg
cmpb
adc
cmp
mov
ss
mov
sbb
push
mov
test
sahf
dec
test
pop
pop
arpl
mov
cld
into
shll
jae
lcall
movsl
mov
je
jns
pop
jno
sti
xor
sub
xor
les
repnz
push
lods
adc
rorl
lods
popa
lret
sbb
cmc
adc
stos
cmp
movsb
jne
push
cmpsb
jae
repz
or
xor
shll
jo,pn
daa
dec
mov
fdivrs
movsl
pushf
push
jb
call
cmp
ret
mov
push
push
mov
push
pop
mov
das
and
stos
sub
adc
mov
and
add
stos
ret
outsb
icebp
jl
outsb
ds
faddl
push
mov
pushf
cmp
mov
scas
ud2
addr16
pop
les
rcr
aas
test
mov
push
test
adc
test
int3
rolb
inc
push
cli
scas
popa
dec
cmp
rolb
push
in
jb
nop
shrb
arpl
ret
cltd
loopne
lock
adc
out
cmp
jb
aad
sub
or
rol
out
jl
sahf
inc
rorb
int
mov
mov
add
or
inc
clc
pop
addb
cwtl
scas
pusha
ds
fs
dec
cmpsb
cltd
pop
int
pop
push
xchg
lcall
sbb
and
add
cmp
jb
arpl
fnsave
std
scas
hlt
pop
jg
sbb
cmpl
in
fsubrl
jp
stos
push
loop
mov
xchg
inc
jae
xchg
pusha
mov
inc
ret
lods
sub
fnstsw
jnp
add
test
mov
sub
mov
je
fnstcw
or
dec
xchg
in
stc
andw
mov
and
push
movsl
outsl
mov
xor
sbb
inc
mov
cs
leave
sti
xchg
mov
sub
xor
ja
aad
test
test
roll
dec
or
pop
pop
jnp
in
movsb
test
inc
in
int3
adc
adc
pop
inc
jl
hlt
outsb
std
test
jbe
out
push
jo
loop
xor
jecxz
jle
popf
push
mov
sti
sbb
popa
out
mov
in
mov
pop
add
push
mov
cli
jle
sahf
lods
xchg
fisttps
int
in
push
and
cmp
cmp
mov
inc
addb
testb
mov
rcrb
xchg
icebp
negb
push
fs
jae
lods
or
bound
out
int3
jge
stos
aad
jnp
imul
jbe
mov
xor
pop
xor
icebp
cli
loopne
out
rcrb
insb
cmpsb
enter
test
psubusb
mov
fcoml
subl
out
fwait
pop
xchg
testl
push
nop
jg
push
pop
jle
mov
sub
in
fisttps
cmp
jo
lods
adc
ss
outsl
mov
adc
insb
jnp
xor
shl
ja
lea
mov
or
out
or
mov
sbb
and
mov
in
lahf
adc
cli
mov
and
jne
xor
pop
xchg
loope
xor
push
mov
shrb
xchg
adc
jg
daa
push
cltd
dec
ficoms
cmp
push
ja
cli
xlat
inc
out
pop
mov
pop
and
or
pop
mov
push
mov
cmpsl
mov
jo
psrld
or
inc
mov
dec
repnz
sub
rcll
cmpsl
ret
add
imul
pop
rol
sti
int
out
mov
jbe
xchg
out
call
icebp
je
jmp
mov
repz
mov
leave
jne
adc
inc
das
push
inc
or
jnp
les
mov
ljmp
pop
fdivrl
mov
mov
inc
push
inc
push
sub
inc
gs
int
icebp
loope
sahf
xchg
aas
gs
add
xchg
cmp
jne
js
ret
mov
inc
ja
mov
inc
std
clc
cmp
cwtl
pop
in
mov
imul
sbb
push
insb
or
adc
mov
lock
jb
mov
sub
cltd
adc
xor
or
mov
and
or
push
hlt
fwait
jo
aad
cltd
jo
insl
push
ror
sub
and
test
adc
pop
inc
dec
xchg
lock
nop
lods
scas
out
int3
repz
ret
paddusw
add
sbb
cmpsb
in
loope
jns
mov
cmpsl
adc
cli
ret
add
adcl
ja
cmp
sbb
and
add
or
adc
inc
mov
push
clc
sbb
imul
das
decb
cltd
mov
stos
sahf
sub
sbb
addr16
mov
mov
and
int3
mov
xchg
std
test
mov
popf
add
hlt
clc
push
pop
repz
xor
adc
lock
lahf
and
sub
dec
icebp
dec
inc
add
fcmovu
add
test
rolb
sbb
pop
ljmp
and
mov
mov
lea
sbb
and
in
and
cld
mov
les
cmp
jne
pushf
push
push
lods
je
call
inc
sbb
ja
arpl
xchg
mov
and
xchg
adc
lcall
roll
push
mov
push
pop
shl
test
sbb
addb
push
cmp
pop
out
shld
and
mov
and
mov
sub
inc
mov
js
push
imul
sbb
pop
mov
mov
push
adc
jle
sub
inc
test
cmpsw
and
cmp
lock
stos
int3
popf
popa
aad
lods
data16
sub
in
jbe
pop
push
and
xor
movsb
adc
xlat
lds
aaa
or
aaa
fnstenv
pop
xor
or
xor
mov
and
and
cwtl
sub
fisubs
mov
mov
mov
jp
fisubrs
out
sbb
adc
jmp
sub
sbb
and
sarl
aaa
sub
je
int3
bound
sbb
push
shlb
sub
rep
mov
mov
js
jmp
leave
dec
push
and
mov
cmp
inc
adc
adc
or
pop
rorb
call
sub
add
jmp
and
push
cmp
test
pop
cld
dec
cmp
mov
inc
pop
jg
iret
out
mov
fadd
add
xchg
inc
iret
mov
dec
inc
outsl
fldcw
sbb
lret
and
cmp
and
add
xchg
mov
and
std
push
add
das
and
enter
push
mov
pop
xor
push
rcll
pop
sbb
test
in
mov
lods
pop
test
lret
fs
es
pop
lahf
lcall
not
sbb
fidivrs
call
std
pop
jo
sbb
pushf
inc
push
scas
push
cmp
sti
inc
in
daa
into
sarb
lret
dec
inc
xor
in
or
insb
sbb
cmpsb
fisubrs
mov
loope
sub
add
popf
roll
addl
push
fimull
jae
dec
std
inc
and
fists
shl
movb
repz
push
or
ficompl
outsl
int3
cmp
or
jbe
xchg
pusha
sti
mov
pop
lret
sbb
mov
ficompl
push
lret
aas
adc
cpuid
sbb
mov
hlt
xchg
and
xor
stos
xchg
and
push
mov
sbb
sbb
ficomps
jg
mov
adc
fwait
in
push
pop
xor
ds
mov
inc
movsb
sahf
inc
push
push
insl
xor
into
jb
rolb
dec
add
insb
cli
sbb
gs
adc
jne
xchg
mov
jg
xor
dec
sub
sti
sbb
bound
sahf
xchg
sti
add
jnp
sub
shrl
adc
push
inc
mov
adc
cmpsb
inc
push
outsb
add
jmp
mov
xor
faddl
data16
fisubl
gs
inc
fdivp
je
js
mov
inc
fmull
push
shlb
pop
sbb
add
add
sarl
imul
in
push
pop
fcomps
sbb
inc
rcrl
mov
cs
imul
pop
cltd
faddl
outsl
dec
inc
into
or
gs
jge
out
fidivrs
out
std
ss
test
scas
lods
mov
rorl
addb
ja
jp
lea
mov
jmp
push
xlat
add
repnz
adc
popa
lcall
clc
shrl
cmpsl
loopne
in
test
or
ret
es
dec
addr16
dec
inc
add
pop
call
call
mov
sbb
ja
mov
xor
sbb
jg
push
mov
mov
into
adc
cmp
pop
add
cltd
push
sub
movswl
dec
push
lcall
sqrtps
push
lods
mov
mov
mov
enter
sbb
inc
mov
sub
pop
and
shll
movsl
dec
dec
lds
cmp
jbe
adc
int
mov
loopne
jne
adc
cmpsb
pushf
jnp
popa
push
jns
mov
mov
jge
stos
jg
inc
out
iret
adc
xor
sbb
pop
sbb
dec
jnp
or
pop
fsts
ds
lea
lret
pop
jnp
push
jne
mov
mov
scas
adc
fdivr
cwtl
xlat
repnz
sti
repz
lods
lea
js
cmp
lods
shll
mov
add
push
fadd
dec
jp
fisttps
cmp
add
add
out
ljmp
push
or
sbb
add
loopne
data16
imull
ss
aaa
pop
push
popa
addr16
push
js
div
bound
ret
dec
jmp
mov
les
mov
lahf
mov
loopne
sti
dec
mov
loopne
fists
cmp
aaa
je
arpl
mov
lock
jne
in
adc
jmp
mov
mov
test
enter
xor
pushf
popa
sbb
lret
push
stos
lcall
clc
lods
jg
xlat
repz
lcall
jmp
push
pop
jbe
into
add
adc
and
movsb
jmp
enter
add
inc
fiaddl
xchg
push
mov
adc
lods
fisttps
push
inc
loop
nop
pop
jecxz
push
in
addl
xor
stos
dec
rcrl
out
mov
mov
lcall
push
sbb
sbb
add
xor
lds
cwtl
and
dec
and
cmpb
mov
sub
arpl
loopne
addr16
hlt
or
xchg
mov
sub
test
loope
faddp
inc
leave
popa
add
daa
or
xor
jo
or
push
mov
mov
inc
pop
ss
fnstsw
mov
icebp
push
aad
or
sbb
rol
in
enter
adc
pop
xchg
dec
aaa
mov
push
add
addl
loop
adc
or
sub
in
fdivp
push
xor
mov
aaa
pushf
flds
xchg
ror
sbb
adc
arpl
pop
inc
sbb
cmp
push
jo
add
shlb
push
lcall
pop
xor
xchg
and
icebp
popa
ret
lock
jae
sbb
pusha
stos
hlt
clc
dec
test
sbb
dec
mov
stos
jmp
insb
jg
pop
mov
sub
add
and
movzwl
jne
fwait
sti
ja
xor
jb
dec
cmpsl
jmp
outsb
sub
test
mov
iret
cmpsb
jmp
mov
add
aam
gs
push
popa
add
xor
fdivs
loope
dec
sub
adc
lahf
dec
ret
fneni(8087
dec
call
mov
mov
outsb
sti
and
and
das
sub
les
out
out
mov
push
fcompl
in
add
ror
dec
sub
pushf
lods
push
inc
xchg
into
scas
sbb
scas
xchg
in
js
addl
xchg
movb
loopne
jp
call
hlt
sti
push
dec
fidivs
lahf
call
dec
adc
shll
mov
sbb
aas
push
loop
xor
push
rolb
stc
inc
sub
cmpsb
push
int3
add
lcall
aam
add
mov
push
push
test
or
xor
hlt
movsb
jp
insb
sti
dec
data16
shr
xor
add
ljmp
pusha
push
aaa
jmp
or
neg
push
enter
je
ljmp
in
mov
das
or
ret
lret
xchg
iret
fbstp
lea
cmp
mov
push
xlat
cmp
mov
or
out
xor
cld
sahf
sbb
xchg
mov
push
sbb
or
adc
xor
rclb
outsl
bound
js
push
mov
loop
pop
je
test
or
cmc
adc
pop
inc
jp
loopne
ret
clc
movsl
jns
test
insb
mov
ret
ljmp
xor
dec
mov
lods
pushf
inc
pop
jecxz
push
faddl
fbld
hlt
mov
jne
in
int
sbb
add
test
lods
mov
stc
and
or
jns
sbb
repnz
out
push
cmpsl
sbb
adcl
adc
jle
das
cmpsl
lret
mul
dec
jle
inc
sarb
add
dec
in
xchg
xor
fs
xor
test
repz
imul
test
inc
push
fimuls
movsl
xchg
test
in
lret
inc
orb
cmpsl
ja
inc
pop
stc
inc
dec
pop
and
in
cs
scas
xor
jg
cmpsl
dec
sbb
test
data16
popf
and
subb
call
gs
sahf
lcall
sarl
inc
pop
pop
inc
adc
fisubl
sub
pop
dec
xor
mul
jne
jp
inc
fcoml
push
insb
movsb
sbb
in
js
push
push
imul
jl
out
das
push
ret
cmp
stc
xchg
lds
sarl
push
clc
icebp
cmp
pop
dec
les
test
in
inc
data16
pop
pushf
push
sarl
icebp
pop
cmp
lock
push
lock
stos
mov
add
xchg
fwait
inc
push
push
or
lods
push
fnstsw
mov
jp
inc
pop
enter
adc
inc
and
xchg
adc
sbb
mov
dec
cmp
xor
sub
adc
mov
mov
push
stos
inc
imul
mov
mov
sbb
mull
dec
inc
aad
jno
mov
aas
sahf
into
out
lahf
mov
xchg
dec
fwait
es
or
mov
pop
sbb
mov
push
pop
arpl
jmp
ds
mov
pop
dec
out
in
push
mov
inc
int
divb
enter
sub
fwait
repz
dec
push
les
out
jae
mov
cmp
push
fimull
pop
xor
mov
sbb
pop
dec
dec
sub
sub
into
ret
push
int3
ja
or
insl
insl
mov
sbb
jge
test
fldl
fs
pop
cld
sub
dec
ljmp
in
je
out
movsl
xchg
jmp
xchg
pop
and
jge
outsl
loopne
or
add
ficompl
mov
bound
test
mov
cmp
iret
into
pushf
xchg
xlat
fmuls
lock
mov
cmp
cmc
loopne
push
pop
jge
loop
xchg
lods
ja
mov
jg
inc
xor
mov
and
movsb
adc
sbb
add
fadd
sti
fiaddl
stos
or
pextrw
push
sbb
nop
arpl
ja
xor
adc
inc
inc
lahf
lret
lea
lods
ficoms
rcrl
sub
mov
jp
shll
nop
jl
dec
les
mov
jne
ret
and
sahf
xchg
shl
jge
jmp
in
addr16
mov
mov
test
lea
pop
push
pop
addr16
lcall
push
lds
repz
lret
das
xchg
dec
ss
ja
lock
xchg
outsl
lahf
cltd
insl
inc
add
sbbl
sarb
jns
jne
movsl
dec
mov
dec
xchg
test
mov
mov
loope
mov
add
pop
xor
adcl
je
xchg
sahf
dec
pop
ret
mov
dec
movsl
add
js
xor
stc
orb
popa
jb
xchg
jae
cs
mov
sarl
add
test
or
mov
popa
cltd
inc
aas
shl
dec
and
pop
rcrb
and
push
mov
sub
push
das
inc
jg
cmp
inc
ss
cli
jge
inc
or
or
pop
cltd
popa
aas
pusha
jno
xchg
sbb
scas
leave
in
stos
mov
popf
xchg
jle
in
arpl
in
or
jns
pop
mov
adc
mov
pop
adc
pushw
mov
shlb
out
push
imul
lahf
xchg
sbb
sarb
cmpsl
repz
shrl
mov
in
out
dec
pop
popf
movsl
in
sbb
ret
mov
repz
adc
add
mov
movsl
aas
enter
push
repnz
lods
cmp
push
and
mov
dec
pushf
in
mov
ficoms
push
nop
shrd
mov
mov
xchg
inc
bswap
push
fsincos
sbb
sbb
test
imul
mov
incl
push
lcall
jmp
shlb
jecxz
fidivrl
inc
hlt
xchg
popf
mov
xchg
mov
inc
iret
lret
mov
fnsave
jle
imul
fadds
sub
pop
mul
mov
data16
test
sub
mov
pusha
int
dec
stos
daa
bound
mov
les
decl
xchg
cmp
mov
xor
icebp
pusha
into
and
cmc
out
and
mov
jmp
ja
movzwl
call
push
lock
sub
xor
lret
ljmp
into
push
das
mov
mov
repnz
mov
test
paddusw
aad
loopne
arpl
adc
cld
rcll
mull
or
filds
and
or
sbb
xchg
mov
cwtl
adc
xchg
sbbb
roll
xchg
scas
dec
jmp
sbb
fmulp
push
mov
dec
sub
rol
mov
mov
sbb
inc
pushl
movsb
inc
mov
rcl
lret
into
or
cli
sbb
cmp
adc
loope
int
lret
lods
lret
cmp
cmp
and
xchg
movsl
jle
sub
sbb
loop
arpl
xor
xor
ficoms
ret
jp
daa
mov
cmp
inc
and
jp
push
mov
adc
sbbb
int
adc
lods
pop
shll
dec
fidivrs
adc
gs
xchg
pop
movsb
jge
cmp
xor
cld
push
push
push
icebp
xchg
in
adc
sbb
jmp
stc
xor
popf
aas
dec
popf
lock
sub
mov
mov
pop
lcall
das
and
sti
add
mov
mov
adc
xor
mov
adc
push
out
lock
xchg
loopne
adc
arpl
into
cld
or
pop
mov
xchg
push
rcll
pushf
or
jno
push
loope
push
shll
sbb
and
mov
jmp
ss
bound
iret
call
aad
add
imul
push
xlat
cmp
sbb
inc
and
or
data16
add
add
pop
mov
pop
push
cmp
sti
sbbl
outsb
call
mov
mov
fidivs
jnp
std
and
xchg
repnz
inc
xor
push
pop
adc
mov
sbb
mov
mov
rcrb
push
add
inc
dec
fs
out
sub
mov
jne
xor
cltd
fwait
sub
cmp
cmp
push
jo
test
imul
fcomps
mov
popf
mov
sub
inc
jb
inc
push
js
dec
push
sub
test
je
jg
add
xor
and
jl
dec
in
ss
mov
cld
add
inc
and
pop
mov
cmpsb
sub
sub
test
movsb
call
sbb
dec
and
inc
ljmp
push
popf
in
fs
jb
gs
addr16
mov
dec
jecxz
jno
ds
and
adc
ljmp
xor
dec
adc
sbb
imul
add
cmp
lret
mov
or
aaa
mov
cmpsl
loopne
shrl
inc
push
pop
pop
jp
inc
arpl
roll
arpl
mov
roll
ja
add
arpl
or
inc
mov
pop
aas
sub
xor
add
add
adc
xchg
cmp
hlt
aaa
rol
cmp
mov
adc
inc
push
inc
pop
mov
xchg
ljmp
sub
aad
sbb
in
and
out
mov
jnp
rol
loope
test
test
hlt
cmp
jb
cld
shll
mov
push
std
inc
lock
lret
xchg
sub
xor
inc
adc
pusha
in
xchg
movsb
lock
and
jmp
aad
mov
inc
and
jge
push
ss
andb
inc
lahf
mov
xchg
push
movsb
xor
ficoms
pop
push
push
addb
or
pop
lea
cli
inc
test
shl
push
sub
mov
mov
and
aam
inc
sub
inc
sub
cmp
popa
inc
inc
and
xchg
loopne
aaa
les
popf
in
sub
mov
xor
repz
test
and
cld
imul
push
or
out
in
dec
adc
mov
dec
dec
test
inc
adc
inc
int
call
int
lcall
in
mov
repz
push
popa
mov
les
push
and
mov
icebp
rcr
addl
pop
and
pushf
sbb
mov
sbb
lods
imul
adc
fsubrl
cmp
jo
aaa
add
mov
mov
inc
mov
shrl
jo
incl
inc
mov
sbb
adcb
or
jb
push
inc
out
push
stc
add
xor
ds
mov
aam
mov
scas
fildl
shl
xor
fucomp
pop
sub
inc
out
push
insb
call
imul
pop
je
icebp
ret
mov
ds
mov
daa
mov
pop
mov
lods
pop
mov
mov
inc
in
jmp
fistps
cmp
shll
ret
mov
mov
mov
es
jae
shl
cmpsl
sbb
mov
mov
pushf
or
or
push
jge
jnp
xor
and
mov
in
add
out
incb
push
int
into
cmp
test
pop
add
sbb
cmp
jnp
ret
xchg
cmp
dec
test
pop
cmp
jbe
insl
loope
aam
iret
lcall
gs
fsubr
push
jae
cmp
jno
lcall
int3
add
arpl
movsl
inc
pop
or
cmp
inc
imul
xchg
clc
jle
data16
call
mov
mov
dec
lahf
mov
jns
adc
pushf
inc
jge
fpatan
inc
push
loop
out
xor
test
icebp
idivb
xchg
pop
xchg
lock
xlat
and
ss
arpl
fnstenv
mov
adcl
sahf
cmp
stos
lcall
and
out
lea
stc
ret
jg
fwait
or
mov
or
inc
fs
hlt
push
add
hlt
lds
pusha
sahf
popa
addr16
xor
notb
pop
pusha
test
inc
lods
cli
popl
inc
es
and
out
adc
sbb
stc
mov
cmc
jbe
mov
dec
leave
loope
lahf
popa
aaa
sub
add
xchg
inc
cmp
ljmp
lods
pop
popa
mov
gs
dec
pop
cmp
icebp
jno,pt
in
cwtl
mov
mov
out
in
incl
dec
jecxz
dec
or
mov
cmp
push
pop
mov
fcoml
fst
inc
pop
mov
xor
jl
out
data16
xchg
pushf
pop
in
jno
aas
iret
adc
dec
scas
lea
call
lret
lret
sbb
in
lds
xlat
sbb
scas
sbb
jl
add
rclb
push
inc
dec
or
in
sbb
jg
jo
sbbb
or
aas
jnp
aam
arpl
cmpl
out
xor
leave
inc
xchg
adc
inc
jmp
jbe
inc
jmp
mov
or
lods
lds
andb
mov
mov
jmp
inc
lahf
mov
adc
push
cmp
fmul
lcall
mov
lret
cmp
in
sbb
mov
sbb
push
and
jo
adc
mov
aaa
adc
mov
sub
popa
sahf
push
jmp
xchg
lods
mov
fs
into
sub
mov
dec
into
repnz
xchg
jo
test
push
dec
subl
or
add
mov
scas
cs
fstl
aad
insl
add
cmp
int3
xchg
cmp
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
xor
sub
add
push
adc
push
and
mov
mov
add
mov
addl
mov
sub
movl
movl
xor
mov
orl
mov
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
subl
xorl
mov
neg
mov
sub
mov
orl
addl
mov
adc
mov
add
sub
add
mov
orl
adc
mov
mov
adc
sub
xor
mov
orl
mov
negl
mov
sub
xor
xor
xor
xor
sub
or
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
push
call
jmp
mov
mov
xor
adcl
mov
andl
add
or
orl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
jmp
mov
movsl
aas
jns
jns
pop
popw
inc
or
popf
cmpsl
push
jl
mov
jb
dec
cmpsl
repnz
addl
dec
js
pop
mov
lds
cmpsb
push
jle
mov
sbb
arpl
mov
outsl
js
push
stos
cmp
rcr
mov
lret
iret
jbe
jns
mov
mov
xchg
rolb
push
aam
mov
dec
inc
jl
fstl
xchg
jns
enter
dec
push
push
pavgb
mov
loop
mov
jbe
ja
test
cmc
rorb
mov
jae
mov
lods
scas
jl
xchg
sub
out
aam
sub
and
test
push
hlt
xchg
jns
adc
inc
xchg
arpl
popa
shrl
in
adc
les
cmpsl
out
mov
pop
mov
jo
pop
or
push
jns
cs
mov
sti
loopne
sbb
push
push
bound
mov
ljmp
js
ror
pop
inc
mov
int3
stos
cmc
rclb
lret
lret
sbbl
mov
movsb
push
inc
stos
sarb
lret
pop
jg
loopne
add
aaa
push
or
jae
data16
and
pusha
add
subl
hlt
aaa
fistpl
dec
push
maxps
inc
into
xor
test
mov
push
ja
add
xor
jmp
sub
xchg
enter
or
push
shrl
inc
xor
fnstcw
ror
xor
test
inc
fsts
sub
les
sub
dec
sub
mov
enter
lea
add
gs
lahf
je
scas
daa
push
scas
xchg
and
jbe
dec
cli
addr16
stos
into
sti
jmp
aad
in
push
mov
sub
aas
out
lret
jge
test
sbb
jecxz
mov
sbb
push
mov
inc
ret
mov
mov
inc
lcall
mov
xor
cmp
jnp
adc
in
es
ja
push
jmp
lea
dec
lahf
add
push
test
gs
int
pop
jbe
push
mov
iret
pop
sub
pop
push
mov
sti
rcrl
cmp
xchg
xchg
adc
jne
mov
in
shl
lret
in
push
push
lods
cmpb
fstpl
mov
mov
int3
in
pop
rcrb
xor
lcall
es
inc
push
jno
sub
mov
jns
shrl
dec
pop
test
jl
jmp
xchg
aad
leave
stos
dec
and
shll
pusha
testl
pop
movsb
inc
cmp
shll
icebp
inc
pusha
dec
jo
mov
push
repz
std
mov
mov
xchg
nop
test
sub
lahf
inc
out
scas
outsl
clc
dec
aas
sub
pop
mov
xchg
movsl
icebp
inc
jl,pn
mov
test
and
pop
or
push
mov
pop
ds
repz
mov
stc
jmp
aas
sbb
cwtl
popa
imul
dec
inc
mov
xchg
push
pop
ffreep
mov
and
lock
in
or
dec
test
aam
xor
inc
dec
test
testl
mov
sbb
mov
sbb
pop
cld
jae
outsl
bound
into
sub
pusha
xchg
mov
inc
aas
push
mov
jecxz
xchg
movsb
fldenv
sub
movsl
insl
orb
mov
xchg
mov
icebp
lcall
nop
push
adc
insb
adc
lods
jle
inc
data16
aam
sub
xchg
jae
jl
push
pop
test
add
out
test
dec
push
xor
or
dec
xchg
loopne
mov
mov
adc
cli
dec
cld
fistps
daa
test
mov
xor
inc
inc
and
sub
stc
cmp
push
mov
into
mov
lock
lods
sub
pushf
or
push
dec
fiadds
sub
mov
pushw
cmpb
push
sbb
inc
jge
pop
push
repnz
mov
pop
cmp
jns
data16
gs
mov
loop
lcall
mov
sbb
imul
nop
ss
and
sbb
aaa
add
xchg
iret
sub
jae
mov
pushw
sbb
dec
jmp
sbb
xlat
filds
leave
psllq
test
xchg
pop
mov
inc
mov
cmp
mov
leave
bswap
out
mov
arpl
pop
and
inc
rcll
and
popf
test
and
stc
sub
xchg
mov
pusha
les
adc
xchg
fcoml
cmc
outsl
jne
stos
mov
sbb
fiadds
clc
pop
in
xchg
xlat
jmp
lea
jne
enter
or
cltd
fisubrs
inc
aad
fbld
and
in
mov
adc
or
adc
lds
cld
aam
jb
cli
mov
sbb
fstpl
adc
dec
subl
mov
dec
lea
insb
mov
mov
mov
jne
hlt
ja
add
aam
fildll
sbb
mov
popa
push
test
dec
ss
mov
aam
and
loope
bnd
jnp
mov
mov
hlt
in
ljmp
dec
xchg
dec
addr16
push
pop
add
inc
add
dec
mov
jns
into
sti
xchg
mov
sub
xchg
dec
outsl
in
push
ret
mov
into
add
and
or
popa
or
jae
sbb
jo
loop
test
dec
or
cltd
pop
js
dec
fisttpl
xchg
or
pushf
arpl
test
jg
scas
inc
test
jno
inc
ja
adc
notl
movsl
adc
lds
cmp
or
and
jno
mov
movsb
outsb
pop
pop
loop
xchg
add
mov
cmp
fmull
adc
cmp
fwait
or
cs
insb
cmpsb
outsl
push
sub
push
fwait
imul
mov
notb
mov
out
sub
pusha
cld
ret
jno
into
push
mov
inc
jns
xchg
lret
sar
dec
xlat
fs
cmpsl
mov
das
ret
scas
mov
rcr
mov
daa
insb
push
add
loop
mov
inc
xchg
lcall
imul
outsl
loop
sahf
cltd
xor
push
push
jle
inc
testl
mov
or
loopne
out
subb
cmc
push
push
test
lret
das
push
int
mov
mov
dec
mov
ss
insb
mov
push
ds
jge
ss
out
je
and
rcll
stos
mov
jp
fwait
inc
mov
jl
or
scas
xor
mov
fdiv
xor
shlb
mov
sub
shl
es
jnp
loop
int3
dec
or
inc
dec
and
hlt
sbb
shufps
mov
les
lret
insl
aaa
and
xchg
clc
and
pop
mov
mov
mov
lcall
mov
aas
arpl
in
mov
mov
or
les
sbb
lret
test
dec
jnp
fs
ret
in
sub
ret
dec
int
jp
enter
test
or
ffree
sbb
and
ja
lcall
cmp
jne
insb
aam
std
pushf
mov
in
mov
adc
cltd
push
xor
clc
jae
sub
xchg
add
and
adc
add
sbbl
out
test
fbstp
mov
das
sub
enter
jmp
in
std
roll
repnz
outsb
js
dec
inc
mov
cmp
out
add
aas
or
test
fildl
test
cmp
jae
pusha
stos
xlat
int3
xor
loopne
andl
pop
push
fld
in
push
pop
push
jge
jne
or
jmp
test
in
xor
aad
dec
pop
sti
add
jno
jmp
lods
inc
aam
mov
sub
add
push
pop
or
test
rorl
insl
pop
jno
push
or
mov
sbb
sub
stos
and
adc
push
loop
jne
mov
pop
pop
sar
hlt
lcall
and
test
jbe
subl
jnp
out
fisubs
sub
xchg
int
lock
insb
sub
sahf
push
repz
negb
repz
fdivl
andl
test
sub
fnstcw
daa
sbb
or
add
ret
mov
test
fstpt
mov
fwait
rcrl
mov
rcr
inc
sbb
add
push
out
xchg
fldenv
pop
and
mov
xchg
inc
or
insb
or
sub
test
adcb
je
dec
push
sahf
or
xlat
pop
icebp
mov
cld
mov
mov
arpl
cld
ret
mov
stos
outsb
jno
sub
mov
mov
fnsave
lcall
xchg
dec
mov
pop
les
dec
sbb
add
sbb
cmc
dec
jle
and
jns
adc
push
hlt
xchg
mov
into
xor
jle
pop
xchg
pushf
in
in
jecxz
sbb
jle
fldcw
inc
icebp
shrb
mov
inc
lahf
out
mov
mov
sbb
pop
lock
cld
bound
hlt
dec
inc
mov
fldlg2
xor
daa
and
pushf
xchg
sbb
mov
lcall
js
push
dec
movsb
decb
outsl
shr
pop
mov
push
or
add
sub
inc
xchg
out
mov
or
mov
loop
pop
lods
stos
dec
xchg
test
fwait
mov
mov
push
dec
and
dec
inc
or
std
push
dec
leave
push
mov
rorl
imul
push
mul
neg
or
adc
test
and
or
iret
pop
mov
pop
fwait
xchg
aam
das
cmp
pop
int3
setae
or
shll
pushf
mov
int3
ss
shlb
push
cli
inc
out
pusha
push
xchg
lock
mov
loopne
cmp
jl
pop
push
stos
popf
je
idivl
pusha
push
cld
cmovp
ret
push
fcomip
into
mov
cld
xchg
repnz
add
dec
lock
sub
cmp
mov
or
xchg
adc
push
je
adc
cli
inc
daa
push
test
imul
inc
lea
addl
push
adc
fsubrp
mov
jae
push
lret
pop
push
in
in
ljmp
stc
pop
mov
out
aas
ss
cmp
push
mov
push
inc
sarb
dec
jns
bound
out
aaa
bound
icebp
mov
lea
mov
dec
lds
and
fwait
imull
sar
push
xor
mov
mov
xchg
jae
xor
adc
or
cld
inc
hlt
jmp
insl
or
inc
aas
stos
stos
sub
call
sbb
stc
std
sub
movsl
icebp
test
cwtl
movsb
or
sub
xchg
jbe
je
pop
stos
and
or
repnz
incl
ja
jl
popf
test
jl
dec
pop
pushf
cmpsb
fwait
sub
repnz
and
iret
adc
jne
shrb
outsb
add
push
inc
jnp
inc
bnd
mov
paddb
outsb
lret
xor
push
xor
mov
adc
inc
stos
arpl
cld
mov
shrb
hlt
mov
jle
in
das
inc
in
int
and
int3
mov
pop
aad
call
sbb
push
pop
lahf
xchg
push
fistps
cltd
cmpb
pop
inc
ljmp
push
mov
sub
in
jmp
int3
fiadds
lret
cmpsb
sbb
jg
mov
mov
cmp
cltd
cmc
shlb
sbb
loope
or
dec
and
loope
adc
inc
push
push
jno
test
lea
pop
fwait
ja
lock
es
in
in
and
adc
test
push
aam
xor
ljmp
mov
insl
push
loope
sbb
sti
xchg
inc
subl
pop
jl
outsl
mov
repnz
and
inc
into
or
mov
inc
jb
mov
lods
cltd
mov
je
jno
mov
mov
rclb
pop
jbe
lret
test
xor
js
nop
in
or
mov
mov
loope
jnp
sarl
es
es
cmp
xor
int3
xchg
adc
dec
push
and
push
jo
or
das
push
xchg
pop
fcmovnb
pop
stc
mov
dec
and
scas
mov
inc
cmp
push
fdivs
popa
cld
movsl
dec
cmp
leave
lds
cli
mov
add
jno
shlb
xchg
inc
addr16
js,pn
add
push
jp
cmp
rcl
hlt
jge
orl
jae
mov
fucomip
movsl
sbbl
lahf
fdivrs
adc
mov
xor
cmpsb
inc
mov
jp
shll
mov
or
xchg
push
cli
cmp
rorl
divb
cmpsb
fimull
push
mov
xor
mov
cwtl
xorl
daa
jmp
push
sub
cmp
push
in
xchg
nop
mov
mov
lahf
mov
cld
jbe
cmpsb
mull
sub
fcmovne
insb
fadd
mov
cmpsb
push
cltd
out
pushf
jle
das
push
cmc
or
inc
add
stc
mov
cmpb
imul
movsb
gs
lock
push
inc
scas
and
jmp
mov
aas
cmp
ret
lret
push
push
adc
pop
jl
dec
icebp
out
or
xchg
mov
das
jle
mov
or
js
movsl
aaa
push
jmp
sbbb
leave
adc
mov
test
mov
lcall
aaa
pop
xchg
daa
sbb
sub
es
mov
addr16
aas
scas
aaa
ret
push
xchg
into
or
adc
fisubrl
jmp
daa
or
cmpsb
cs
push
repnz
sti
xchg
push
orl
jbe
fstl
xchg
inc
mov
mov
push
push
ja
lahf
xor
mov
lret
xchg
add
rcll
cmp
or
and
in
mov
adcb
jg
loop
and
cmp
ljmp
or
sub
dec
sub
js
add
add
sub
movsl
or
aam
mov
mov
cmp
fidivs
mov
pop
nop
out
xor
and
mov
push
notb
mov
pop
push
cld
or
sub
cmpsb
aad
addl
xchg
mov
shll
shlb
popf
rcrl
ja
adc
sub
dec
out
loope
inc
mov
inc
jmp
xor
xchg
jmp
xlat
jns
outsl
add
loop
mov
adc
shl
mov
adc
adc
mov
loopne
out
ss
ljmp
pushf
or
mov
insl
xor
loopne
mov
enter
push
out
mov
lcall
mov
fsubr
jp
stos
mov
sub
movsl
popl
dec
pushl
adc
into
pusha
sarb
in
ss
push
sbb
push
push
push
or
fsubl
cmp
cmpsl
mov
jl
fwait
ljmp
mov
call
ret
jecxz
xor
cli
fadd
bound
push
data16
imul
pop
xchg
fdivrs
xor
xorb
jp
pushf
subb
lret
shrb
mov
es
mov
jae
mov
outsb
jmp
fmul
movb
mov
test
data16
iret
adc
xchg
jnp
and
loop
outsl
pop
clc
xor
in
jmp
sub
sbb
push
lret
cmc
out
push
pop
cmp
push
and
mov
push
rcrl
sbb
les
es
dec
enter
insl
sub
fmull
mov
loopne
xor
inc
insl
cld
push
mov
repnz
arpl
mov
pop
or
pop
and
mov
std
xor
aaa
push
scas
sbb
movsl
sbb
push
xlat
mov
sub
mov
in
jo
ds
push
push
push
int
mov
add
sbb
je
inc
es
add
pop
pushf
outsb
mov
ja
xchg
mov
pop
jmp
leave
push
int
cmc
insb
add
mov
in
imul
and
fwait
jb
adc
inc
push
mov
jae
xor
je
shll
pop
movl
xchg
stos
orl
adcl
dec
pop
sub
push
and
aam
mov
xchg
dec
gs
insb
out
xchg
sarl
fwait
and
popa
xor
enter
inc
fnstcw
imul
push
pop
clc
dec
imul
aaa
mov
dec
or
jmp
xchg
jg
mov
testl
je
hlt
xor
in
push
or
lahf
nop
fldcw
xor
repz
inc
adc
sbb
nop
or
scas
adc
or
cmp
jmp
dec
mov
insb
jae
mov
xchg
sub
sub
mov
add
jmp
xchg
xor
jmp
push
arpl
mov
mov
cmc
out
icebp
xor
rorl
add
arpl
cmpsb
push
lcall
inc
inc
mov
xchg
sbb
sbb
cmp
add
dec
add
ret
add
cmp
mov
inc
lds
xor
in
jae
and
xor
int3
les
inc
test
mov
and
lods
and
add
incl
cmpsb
xlat
jp
jbe
incl
jmp
or
mov
push
fisubl
dec
mov
repz
int
add
mov
adcb
cmp
aas
out
jno
adc
lds
or
pop
cwtl
mov
imul
cmpsl
push
pop
fs
dec
pop
mov
mov
addl
fiaddl
mov
xor
mov
aam
jno
or
roll
mov
movsb
das
jnp
mov
add
push
xchg
icebp
add
mov
pushf
icebp
std
jb
xchg
push
mov
outsl
pop
or
lods
inc
push
sahf
xchg
inc
daa
xchg
push
and
mov
leave
or
stc
xor
sub
rcrb
mov
js
xor
push
cmp
movsb
sbb
mov
adc
add
mov
cmp
sub
dec
repnz
out
push
mov
cmp
stos
shll
cmp
jno
cld
es
gs
loope
or
scas
popf
dec
cmpsl
fsubrs
les
popw
ljmp
inc
aaa
movsl
mov
push
pushf
scas
or
pop
int
pusha
out
mov
or
or
ds
notb
mov
or
mov
push
aad
daa
incb
iret
pop
rcll
popf
jecxz
mov
xor
pop
movsl
xor
scas
pop
fnstcw
and
movsl
clc
xor
mov
cmp
out
int
dec
cmp
dec
dec
sbbb
lock
cmpl
mov
jbe
outsb
inc
xor
and
and
iret
xor
cli
frstor
stos
icebp
pop
in
push
loopne
push
rolb
adc
cmp
xlat
mov
lods
clc
sbb
push
add
xor
inc
divb
sbb
fs
inc
leave
push
stos
adc
cmp
mov
push
push
data16
cli
inc
mov
outsl
or
xor
loopne
xor
movsl
lods
cmpsb
insl
gs
enter
imul
cmp
ds
sbb
imull
pop
pop
cmp
jno
xchg
mov
cmp
adcl
pop
adc
or
push
adc
insb
loopne
call
sub
jne
sahf
pop
pop
inc
ret
add
cmp
lds
loop
xor
clc
insl
arpl
lret
push
rorl
jl
xchg
es
adc
xchg
lods
pushf
jne
cmp
cmp
mov
popa
xchg
dec
in
push
out
dec
out
lahf
les
cmp
mov
push
mov
mov
push
cmp
repz
mov
inc
lahf
scas
orb
xor
shll
fs
jmp
out
mov
xchg
add
cmp
rcrl
cwtl
pop
inc
jne
pop
mov
inc
jne
sub
jnp
push
movsb
divl
inc
rol
pop
push
mov
lret
cmp
or
jle
pushf
and
and
sbb
cmpsb
imul
push
xchg
stos
arpl
jmp
enter
dec
aas
xchg
lods
push
in
sarl
inc
in
mov
xchg
sarl
nop
adc
pop
aam
in
cmp
push
sub
loope
cmpsb
and
mov
and
outsb
jo
cmpsl
dec
mov
and
mov
jb
mov
push
jp
xor
loope
pop
mov
add
lock
jne
xchg
cmp
pushf
int3
push
pushf
std
fstl
inc
sti
push
xchg
jp
xlat
in
lock
pop
mov
dec
call
outsb
mul
lret
adc
or
mov
dec
pop
icebp
aad
hlt
or
sbb
and
fcmovnu
inc
aaa
xlat
stc
dec
push
aaa
xchg
xor
add
dec
push
xor
cmp
cmp
cmp
fldt
xor
mov
repz
and
mov
dec
push
stos
mov
aad
inc
or
add
push
hlt
iret
mov
repz
cmc
daa
cmpsb
in
ret
xor
and
ss
iret
cltd
movsb
mov
xor
imul
mov
sahf
bound
mov
fists
loop
jmp
movsl
sarb
mov
inc
sub
lods
jb
cli
in
pop
sub
fs
mov
in
unpckhps
inc
xchg
xchg
xor
gs
xchg
mov
stos
stc
pop
mov
xchg
in
out
mov
and
mov
jbe
mov
push
lret
int3
es
add
adc
push
mov
sbb
cld
or
add
imul
xor
pop
sbb
or
dec
mov
enter
dec
aaa
push
pop
push
icebp
mov
jo
xchg
loop
ljmp
sarl
push
dec
nop
add
fwait
dec
cli
sbb
test
add
jle
cli
jno
je
or
jne
or
iret
popf
push
sahf
lods
sarl
repz
adc
inc
sbb
lods
aam
mov
add
arpl
pop
mov
push
xchg
fists
xor
fst
cmp
cmp
cltd
iret
lods
push
push
pop
or
rcl
xchg
pop
cmp
call
xor
mov
repz
jbe
pop
mov
hlt
xchg
out
mov
sub
dec
pushf
mov
push
leave
gs
adc
das
cmp
jnp
jl
imul
es
jl
addl
push
out
xor
adcb
scas
and
jmp
and
pushf
out
adc
pushf
out
fidivs
add
vdivpd
sbb
nopl
mov
sbb
pop
jnp
pop
popf
sahf
xor
pusha
mov
mov
imul
adc
mov
xor
mov
pop
mov
scas
cmp
pop
push
test
lea
bound
mov
lods
mov
push
mov
aad
pop
movlps
fisubrs
xchg
push
push
mov
sub
gs
sub
mov
xor
mov
cli
xlat
data16
mov
sbb
movsb
push
sbb
fdivl
andl
mov
and
fisubrs
add
xor
pushf
sub
inc
cltd
sbb
and
jb
sub
lock
jae
push
mov
out
xchg
aad
ret
jb
lock
es
lock
mov
leave
add
rclb
sbb
dec
jo
test
lods
jmp
movq
adc
or
mov
lods
iret
fwait
ja
std
pop
mov
in
xchg
xor
scas
xchg
data16
lret
mov
dec
and
jmp
inc
mov
and
imul
addr16
pushf
and
xchg
jmp
and
mov
xchg
add
fwait
ljmp
pushl
pop
lods
and
pop
mov
lcall
add
add
movb
or
lods
inc
iret
push
out
dec
lret
inc
jge
fstpl
insl
push
inc
xchg
pop
xor
push
addr16
add
and
aas
fidivrs
pop
fnstsw
inc
push
fs
mov
cmc
and
inc
mov
push
std
xchg
jnp
aaa
adc
push
fnstsw
aad
xchg
call
in
xchg
mov
jne
inc
out
adc
jbe
hlt
inc
sub
aaa
stc
mov
push
and
inc
and
inc
fs
cmp
adc
mov
xor
xchg
leave
mov
inc
mov
dec
push
and
fwait
notl
sbb
outsb
testb
ret
in
cli
jb
adc
push
int3
push
mov
adc
push
mov
in
es
pop
mov
jno
adc
add
dec
cmc
mov
mov
dec
je
cmp
xor
in
in
movsl
bound
pop
jno
dec
add
pop
cld
lret
or
jge
faddp
rcl
jl
mov
mov
pop
cmpsl
cmp
mov
jne
dec
ret
push
push
notl
mov
fisubrl
in
es
mov
test
add
inc
pop
sub
jle
incb
into
push
dec
xchg
or
mov
loop
or
mov
cld
gs
dec
in
imul
scas
jo
in
pop
sub
adc
cmp
and
sub
jle
cld
enter
push
outsb
stos
aas
daa
jo
imul
add
rcr
stc
pop
mov
add
or
xor
gs
xor
fwait
jno
aad
jo
push
dec
mov
pop
test
xor
xchg
sub
lcall
and
adc
lock
dec
add
add
dec
movsl
or
lock
fs
and
mov
mulb
int
adc
popf
aaa
inc
jle
xchg
add
andl
ljmp
ret
notl
jl
xchg
shlb
pop
sub
cltd
popf
cwtl
jne
shlb
mov
ret
inc
dec
mov
sbb
fsubl
sbb
mov
adc
in
mov
mov
jle
inc
cmp
je
lock
cld
push
int3
dec
es
das
mov
sbb
xor
in
std
ret
std
lea
jle
mov
loope
test
lret
push
pop
fstl
icebp
lods
pop
push
push
ret
cs
cmpsb
pop
loope
inc
xor
push
fs
fists
cmp
cwtl
or
jg
xor
ror
jbe
mov
inc
or
adc
lods
xor
pop
sti
or
inc
adc
cmp
out
mov
dec
cli
lods
inc
data16
ljmp
out
add
loope
outsl
int
repnz
adc
or
pushl
cwtl
dec
add
push
fisubs
les
imul
hlt
mov
push
push
cmp
sub
pop
aaa
scas
test
sbb
sbb
inc
push
lret
jae
lcall
mov
iret
adc
mov
into
push
xor
or
repnz
sbb
movsb
xor
lods
lea
adc
call
mov
inc
fcompl
popl
cmp
push
adc
jbe
xchg
adc
aad
fmull
pusha
push
jecxz
fs
or
and
mov
loop
xchg
inc
push
stos
lahf
sti
in
push
dec
sub
sbb
mov
or
cmp
inc
repz
or
call
sbb
imul
mov
sub
inc
inc
aam
dec
add
mov
in
sub
lods
sub
inc
icebp
loop
mov
jl
test
pop
out
push
cli
fwait
icebp
fisubrs
pop
out
pop
out
sub
mov
mov
adc
cmpsl
std
dec
in
cmpsl
sbb
mov
cmp
mov
cmp
sub
add
fnstsw
push
xchg
loopne
testb
sbb
push
jl
fdivrl
mov
inc
adc
fld
pop
cmp
inc
call
jae
dec
out
xlat
mov
inc
popa
and
xchg
xor
pop
negb
mov
mov
das
rclb
fisttps
stos
outsb
inc
pop
cmp
mov
sbb
xchg
lcall
repnz
or
adc
adc
sahf
adc
jmp
dec
call
sbb
inc
aas
xor
xor
xor
add
outsb
pop
and
inc
xorb
push
ret
popf
mov
add
jnp
cmp
fldcw
push
sbb
xor
inc
jmp
cmc
ljmp
xchg
sub
inc
or
push
dec
imul
int
sbb
jns
mov
test
mov
push
into
cmp
pop
mov
icebp
mov
movsl
test
rcrb
imul
inc
pop
scas
sub
int3
push
roll
xchg
or
shlb
cmp
cmp
mov
cwtl
cmpsb
movsl
pop
movsl
enter
cmp
dec
repz
cwtl
mov
arpl
adc
jno
adc
add
mov
xchg
adc
fbstp
clc
sbb
aam
popa
cmpl
ja
dec
ret
adc
sub
or
jp
lea
mov
pushl
mov
stc
pop
rorl
rorl
nop
out
ret
popa
jns
cmpsl
cmp
ds
pop
push
lcall
mov
xchg
loope
or
jbe
pop
clc
insl
and
xchg
pusha
fisttpll
push
pop
cmc
movsl
xchg
lods
mov
ljmp
adc
ret
mov
mov
fisubrs
xor
dec
fmulp
jne
xchg
xchg
outsl
repz
imul
xor
push
xor
mov
sbb
lods
dec
sub
sub
mov
sub
add
adc
sbb
aaa
aam
pop
push
stc
shr
cmp
loopne
dec
ja
repnz
ficoms
lahf
inc
gs
mov
push
dec
cmp
push
sub
lods
adc
mov
mov
sub
add
cmp
ret
xchg
jge
jmp
imul
fwait
mov
mov
mov
les
mov
jl
aaa
fadds
jns
popa
popa
popa
loopne
lods
cmc
sbb
jne
lahf
lret
lea
cs
lea
int3
mov
out
jle
xor
andb
scas
mov
lret
dec
and
sub
mov
adc
insl
dec
jmp
xchg
imul
fidivl
mov
ja
jg
jmp
xchg
cmp
clc
cmp
pop
jne
daa
sbb
and
sub
ss
mov
ljmp
out
add
rorb
jo
cmp
sbb
shlb
inc
clc
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
add
push
push
movzwl
or
push
movl
lea
mov
movl
sub
lea
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
push
call
jmp
mov
mov
or
mov
xor
decl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
sbb
mov
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
push
call
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
add
movl
cmp
movl
je
mov
movl
jmp
sbb
mov
mov
adc
mov
or
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
cmp
movl
jne
push
movl
push
jmp
mov
mov
mov
cmp
jne
movl
cmp
jne
movl
push
movl
push
movl
jmp
mov
mov
movl
cmp
jne
cmp
movl
jne
movl
push
movl
push
movl
jmp
mov
mov
mov
mov
movl
cmp
movl
jne
cmp
movl
jne
sbb
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
push
push
push
call
jmp
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
jmp
sbb
cmp
inc
fst
inc
and
xchg
sbb
jb
add
mov
sub
jbe
inc
jecxz
push
sti
push
adc
sub
hlt
mov
mov
les
xchg
cmp
cmp
je
and
add
lods
pop
hlt
jo
test
mov
cltd
pop
ljmp
xor
in
outsl
xchg
cmp
roll
jle
mov
in
cs
jle
inc
imul
rcl
shll
in
jl
or
mov
mov
enter
clc
or
cli
pop
dec
int
mov
jg
push
xchg
les
jmp
outsb
or
fs
inc
outsl
mov
test
push
in
fiadds
jb
pop
movb
mov
or
stos
emms
cmp
mov
push
or
pop
pop
dec
leave
ret
enter
lock
enter
add
inc
and
xor
insl
rcr
sub
and
rclb
or
lret
stc
aam
int
and
es
roll
jae
xor
mov
das
mov
mov
mov
jl
xchg
rcl
fwait
add
inc
pushf
icebp
pop
in
cmc
repz
test
gs
sbb
pop
ds
popa
pop
mov
push
xchg
dec
dec
pop
popf
jns
xchg
fisttpl
jns
movsl
test
add
xchg
movsb
mov
subl
xor
aaa
ret
inc
pop
dec
sub
cmc
sbb
add
les
mov
fistl
or
mov
adc
mov
data16
fcoml
lret
sub
adc
and
push
jg
lods
dec
ds
sub
mov
std
jns
add
bound
dec
ret
movsl
ret
shr
mov
lds
sti
fistl
sbb
pop
fisubrl
dec
pop
test
xchg
push
repnz
jle
call
push
pop
and
cmp
in
mov
mov
clc
icebp
nop
imul
addr16
push
mov
fbstp
cld
mov
popa
pop
outsb
inc
lods
or
jmp
call
and
lea
lcall
mov
in
xor
xchg
mov
or
cmp
pop
adc
xor
cmp
addr16
jo
jle
dec
pop
aas
cmp
daa
mov
cld
imul
pop
and
lea
popa
bound
outsb
hlt
sbb
add
aas
pusha
mov
rep
bound
int
jae
lahf
popf
imul
leave
cmp
mov
cmc
mov
popf
ret
out
sub
adc
cmp
cltd
mov
and
ja
mov
xchg
sub
ja
xchg
insl
aam
mov
adc
test
xchg
xlat
xchg
fildl
add
out
dec
dec
mov
push
cmp
jo
dec
jmp
xlat
out
mov
fwait
adcb
xchg
ffreep
fwait
inc
inc
add
dec
xchg
cmp
mov
adc
lret
arpl
aam
push
sub
xchg
sub
jle
and
lahf
xor
dec
ljmp
dec
cmp
mov
pop
enter
inc
pop
xor
sub
mov
stos
into
daa
mov
cmp
pop
jg
jno
in
js
lahf
pop
in
and
push
hlt
aam
sbb
hlt
out
gs
mov
jmp
popf
cmpl
sbb
lea
or
and
ret
loop
fldcw
dec
rcrl
repnz
rorl
andl
shrb
xchg
rcrb
sub
repnz
in
mov
add
mov
das
lods
pop
sub
push
stc
adc
dec
outsl
aas
mov
fildl
lds
es
xchg
xchg
shll
dec
aas
iret
mov
dec
test
inc
fnstenv
je
push
fwait
mov
pop
xor
mov
pusha
popf
or
aas
mov
xchg
movsl
xlat
hlt
mov
sub
in
enter
adc
test
in
mov
adc
xchg
or
cld
test
das
sbb
dec
mov
cmp
std
sbb
nop
andl
ss
pop
js
aaa
icebp
icebp
stos
push
push
jns
loope
cli
adc
jno,pt
cwtl
jg
pushl
mov
loopne
xchg
aam
shl
std
dec
jg
jns
cmpsb
les
pop
ret
out
sbb
das
inc
iret
in
test
mov
add
das
cltd
sti
mov
sub
mov
test
das
sub
jns
mov
pop
test
jo
push
and
jne
ss
xor
sub
pop
jge
xor
scas
jne
and
and
rcrb
aam
es
dec
inc
mov
xchg
orl
icebp
add
mov
inc
popa
cmp
mov
arpl
ret
imul
pop
aad
out
lea
paddw
lret
jecxz
mov
jne
ret
lret
add
das
test
mov
shl
iret
lcall
xchg
loopne
std
fldenv
in
jmp
iret
dec
mov
aam
inc
mov
push
xchg
dec
or
cmp
jnp
lods
stc
leave
in
adcl
adc
sbb
add
add
in
jge
pop
adc
test
adc
and
aam
ja
ficompl
dec
test
cmpsb
test
icebp
jo
pop
sub
cmpsb
mov
imul
and
sbb
cmp
aas
addb
mov
dec
out
movsb
cmc
mov
sbb
in
mov
mov
aaa
pushf
pop
loop
movsl
call
pop
mov
rcr
test
lods
rclb
popf
ret
mov
cltd
cmp
fdivs
iret
mov
push
cli
xor
and
push
insl
mov
pop
inc
scas
push
lods
cld
pop
pop
test
xchg
push
cwtl
mov
andl
dec
ss
lret
sbb
mov
push
xchg
pop
or
mov
call
xchg
push
stos
cli
adc
fwait
jp
leave
pop
push
addr16
sbb
shll
jmp
xchg
mov
enter
xlat
push
and
inc
sub
jbe
mov
sbb
aas
pop
cmp
ja
mov
rorl
in
aad
xor
add
aad
cwtl
imul
fneni(8087
dec
inc
sbb
adc
scas
mov
adc
imulb
idivb
fsts
sarl
jns
mov
mov
cltd
mov
push
dec
insl
xchg
aad
pop
dec
shlb
fisubs
xor
sub
nop
shl
test
dec
sub
inc
sub
adc
mov
xorl
loopne
or
fistpl
nop
jge
nop
dec
jmp
xchg
xor
jge
fwait
pop
testb
jnp
sarb
add
adc
adc
ja
dec
sbb
hlt
sub
add
cmp
ret
sbb
stos
test
lea
pop
ds
clc
xchg
dec
add
push
shlb
shrb
fs
dec
in
sbb
adc
pop
cmc
cs
or
in
pop
inc
movsl
dec
hlt
jecxz
push
push
divb
xchg
and
push
mov
shr
lcall
jbe
mov
bound
ret
and
dec
push
sub
jae
xchg
xchg
icebp
out
and
jb
lret
adc
adcb
sbb
sahf
mov
repz
dec
cmp
xor
push
inc
test
int3
repnz
sub
fdivs
scas
lcall
push
int3
and
inc
cmpsb
movsb
cmp
jl
pop
lcall
xchg
pusha
mov
jb
decb
dec
pop
xchg
sbb
test
mov
hlt
mov
lahf
mov
add
xchg
and
outsb
mov
into
add
push
add
or
aaa
push
push
insl
xchg
dec
xor
sub
jb
into
shll
push
dec
adc
xor
sbb
cmp
mov
stos
pushf
andl
push
clc
test
ficomps
gs
or
xor
es
and
fldt
addr16
sub
ret
addr16
push
and
inc
sbb
cmpsb
neg
gs
lods
pushw
popw
push
inc
inc
jp
sbb
adc
aam
adc
inc
pop
mov
arpl
hlt
xchg
pusha
sbbl
sbb
cmpsb
scas
fs
loop
sbbl
add
adc
cld
inc
std
sti
cwtl
stos
pop
jle
movl
xor
fbld
ljmp
fldpi
out
cmpsb
push
aam
aas
into
aas
add
outsb
add
jge
out
sbb
repnz
xor
loopne
js
push
movsb
arpl
xchg
adc
ss
jne
mov
add
jge
cs
adcl
mov
xchg
scas
shlb
push
out
ficomps
or
cwtl
xchg
pop
xchg
jne
add
jb
inc
jbe
cwtl
mov
jns
movl
data16
test
lret
add
xchg
jp
in
mov
pop
xor
cmp
leave
mov
push
and
cmp
or
inc
sub
push
cmp
xlat
inc
movsb
mov
scas
hlt
les
sub
push
pop
xchg
lret
jnp
js
cmp
dec
fstpl
mov
cmp
or
and
bound
adc
fists
pop
lahf
mov
in
xchg
addr16
inc
je
add
out
and
and
pop
add
xor
leave
lock
add
fmuls
dec
jmp
mov
xchg
adc
popf
mov
pop
aas
cltd
mov
inc
cmp
pop
arpl
xor
test
in
in
inc
cwtl
ss
xorb
out
ss
inc
aad
mov
cmpl
into
std
adc
ret
ljmp
arpl
in
dec
in
ret
repz
movsl
aas
cmpsl
mov
out
neg
sarb
test
in
mov
mov
cmc
int3
sbb
adc
imul
push
sub
jns
es
repz
dec
loop
in
xchg
lds
dec
cmp
adc
jmp
scas
cmp
jae
aaa
jae
sarb
js
inc
pop
mov
sti
loope
lret
dec
sub
pushf
adc
lcall
and
and
imul
cmp
sbb
push
pop
xor
stc
sbb
ds
lds
mov
dec
lock
xchg
dec
insl
shlw
fs
imull
mov
and
push
pop
cmpsb
clc
fs
xor
adc
test
sbb
lock
xchg
js
mov
push
sub
inc
mov
cmp
push
mov
jmp
sub
pop
inc
inc
outsl
sbb
sbb
jmp
sbb
cmc
icebp
cmpsl
hlt
inc
arpl
in
sub
pushf
jg
mov
jp
push
icebp
cmpsb
push
xchg
test
js
sub
inc
mov
aam
mov
hlt
add
lock
dec
inc
test
add
push
xorl
dec
xchg
enter
nop
dec
sub
fildll
push
mov
ret
push
jge
mov
sbb
or
adc
pop
add
stc
imul
loop
cmc
push
push
lahf
les
mov
cld
in
js
jb
dec
xchg
andb
idivl
into
arpl
lea
stos
and
jge
or
setl
popf
movsb
in
in
pop
adc
sub
dec
mov
inc
add
mov
lock
xor
ret
scas
mov
loope
jecxz
push
sub
stc
jmp
xchg
sub
mov
jne
cmpsl
jl
in
sub
xor
mov
inc
outsb
sbb
push
stc
mov
push
in
popf
mov
push
std
and
jle
hlt
xchg
pop
add
icebp
int
aas
stos
inc
mov
jle
loopne
lret
lock
inc
in
push
jl
shl
inc
xor
dec
adcl
or
or
push
mov
es
xor
ds
xchg
pop
jne
lcall
imul
sub
loope
lods
lret
inc
popf
inc
insb
adc
call
or
aad
add
pop
dec
out
in
or
icebp
cltd
inc
mov
stc
push
mov
rorb
or
ja
jp
ja
mov
inc
outsb
pop
mov
inc
mov
ret
jg
shl
push
jl
add
call
jl
mov
push
ror
rcl
jno
enter
sahf
or
addr16
lods
fnstcw
enter
aas
fimuls
repnz
insl
bound
test
push
jmp
mov
dec
sub
xchg
std
lock
sbb
movsl
ds
xchg
jne
xchg
cli
dec
out
jg
xchg
sbbl
cwtl
outsl
les
xchg
popa
pop
add
jg
push
ljmp
adc
aas
pop
in
cmc
shrb
push
add
xlat
or
stos
ja
dec
sbb
jp
out
xor
jne
and
sub
nop
dec
into
jecxz
inc
jo
cltd
cwtl
push
imul
sub
push
in
mov
dec
cmp
loop
cmp
rclb
push
loop
push
sbbb
aas
sbb
mov
mov
test
mov
repnz
mov
fwait
jns
mov
pop
out
xchg
sbb
test
sub
mov
clc
jp
mov
dec
repnz
fcoml
cli
or
cs
add
bnd
mov
enter
cmpsl
mov
fs
sub
sbb
jmp
adc
push
xchg
mov
xor
ljmp
sub
stos
sub
xchg
cmp
icebp
outsb
addr16
in
mov
mov
mov
insb
mov
imul
sbbl
mov
outsb
cmp
inc
fs
pop
jl
jmp
mov
lcall
dec
xchg
and
mov
add
sub
insb
jge
mov
stos
test
jno
imul
jns
xor
sub
push
lahf
cli
int
cmpsl
sbb
bound
test
insb
js
shlb
xchg
jo
ficomps
insl
pop
add
xchg
and
lret
lcall
cs
test
inc
mov
loopne
icebp
fsubl
xchg
xchg
dec
dec
arpl
pop
sbb
inc
mov
ret
outsl
mov
inc
xor
xor
push
dec
lret
mov
mov
xchg
in
test
sub
pop
inc
imul
cld
and
dec
inc
jne
xchg
mov
xor
adc
cltd
shrl
mov
bound
dec
mov
test
jge
stos
xchg
mov
rclb
imul
lcall
or
push
inc
cmpsb
adc
jecxz
dec
pop
jne
push
fsubs
lret
insb
xor
popa
aad
sub
or
sub
in
push
pop
xor
in
mov
fsubrs
adc
cmp
in
sub
stc
cmp
popf
sbb
pop
xchg
stos
imulb
pop
iret
jp
test
or
enter
and
jp
lods
mov
outsl
adc
jbe
push
mov
pop
cmpsl
lret
mov
popa
dec
lret
stc
ret
xchg
out
fstl
mov
cmp
ljmp
push
push
sbb
mov
lds
in
dec
push
mov
add
adc
mov
pop
mov
add
add
pop
je
or
cmp
jo
xchg
pop
push
pop
decl
add
fisubl
in
inc
inc
fwait
aas
fisubs
sti
loope
ret
out
divl
je
addr16
mov
cmp
clc
aas
pop
lahf
ds
xchg
jmp
push
push
cmp
iret
shr
imul
mov
mov
cltd
pop
add
in
push
fnsave
ret
int
jae
pop
stos
sbb
andl
sbb
loop
dec
ds
mov
lods
shll
mov
mov
pop
jno
fs
mov
insl
jnp
gs
fxch
js
mov
lods
cli
dec
sub
pop
sbb
cltd
pop
ja
mov
faddl
mov
gs
cld
ja
add
scas
add
and
pop
bound
mov
popf
adc
daa
sbb
insb
sub
mov
cmp
sar
add
adcl
inc
in
pop
jge
or
jp
insb
or
xchg
mov
mov
shlb
lea
cmp
shll
mov
movsb
jne
ss
jl
popf
test
je
call
xor
imul
and
pop
mov
cmpsb
test
stos
lahf
mov
xchg
inc
jo
cli
or
inc
xchg
xchg
push
mov
std
or
pop
imul
fbstp
test
filds
pop
xchg
inc
pop
vpunpckhqdq
adc
rcrb
das
and
int3
in
lret
push
sub
jae
or
clc
mov
or
bound
and
arpl
xchg
lods
orb
enter
mov
xor
mov
sbb
pop
mov
scas
jp
jecxz
inc
jb
push
cmc
or
mov
jmp
cld
xchg
mov
sbb
inc
pop
out
pop
sarl
add
and
lret
xchg
shlb
mov
mull
nop
lret
popf
ret
adc
push
loopne
dec
push
js
mov
inc
xchg
xor
sbb
lock
sbb
movsb
ds
xor
cmp
inc
pop
pushf
cld
popf
dec
ljmp
out
cs
xchg
cltd
sbb
leave
add
outsl
jb
dec
pop
mov
or
cmp
jo
add
into
divps
push
rorl
stos
jne
aaa
aaa
fsubs
clc
loop
push
add
xchg
jg
and
out
sbb
add
imul
xchg
pushw
mov
mov
xor
mov
repnz
enter
shrl
push
cltd
jmp
cmp
cmp
add
mov
stos
pop
jecxz
imul
leave
pop
xchg
add
call
loopne
pop
xor
into
pop
or
sub
push
daa
lcall
push
pop
jle
cmpsl
cmp
lcall
cld
xor
add
aas
sbb
xor
and
jbe
int3
lret
xchg
into
and
dec
lods
jno
push
fwait
mov
mov
int
cltd
pop
aaa
movsb
mov
rol
repnz
add
pop
inc
insl
mov
paddusw
stc
jge
push
adc
mov
mov
ret
and
mov
aas
add
adc
push
xlat
mov
push
mov
icebp
sbb
jecxz
pop
adc
insl
push
add
lcall
lret
fisubrs
in
push
pop
test
xchg
je
iret
decl
popf
xchg
mov
sete
jae
cwtl
hlt
stc
mov
aas
hlt
push
lret
push
dec
test
loop
xor
push
fs
xchg
mov
cld
stos
cmc
and
mov
or
out
sbb
ffree
adc
lea
xchg
cmp
dec
jb
adc
fsubrs
in
rorb
stc
jno
pop
inc
add
loope
fucomi
faddl
push
stos
loope
loope
cmp
cmpsb
dec
pop
push
inc
add
pop
fsub
test
test
js
mov
ja
xchg
mov
in
sub
movsb
jne
add
shrb
cmp
cmp
cmp
push
aam
dec
and
shr
imul
addl
add
jmp
sub
popf
pusha
fistps
js
in
add
les
xchg
inc
sub
add
in
ljmp
clc
push
bnd
pop
pop
cltd
scas
mov
aad
mov
or
jo
pop
jge
inc
addr16
subb
push
pop
lcall
mov
int3
inc
rcrl
mov
inc
adcl
adc
pop
out
aas
lcall
lea
sti
dec
lods
cmpsb
jne
lds
incb
mov
jp
enter
inc
or
pop
test
btc
push
or
jae
inc
xchg
cmp
mov
pop
xchg
insl
aad
xchg
call
scas
stc
xor
addl
ljmp
fs
mov
sbb
pop
and
test
cmp
jp
mov
inc
icebp
pop
ss
add
push
rol
je
pop
mov
cld
loop
ret
inc
pop
scas
cmp
lods
les
sub
cmp
sbb
dec
pop
xchg
lods
push
mulb
fdivs
sbb
fs
or
push
jbe
out
push
adc
push
callw
fcmovnu
adc
lea
sub
ret
xor
adc
movsl
push
icebp
xchg
and
xor
push
iret
shll
push
jg
lret
sub
clc
ret
and
xchg
push
dec
jbe
or
fcmovnbe
add
mov
outsl
mov
mov
aam
mov
jno
adc
loop
or
mov
aaa
clc
sbb
sub
popa
jbe
je
imul
mov
pop
mov
clc
jg
test
xor
es
cmp
add
mov
dec
xchg
hlt
adc
dec
lahf
pop
test
dec
in
xchg
jae
push
rcrl
cld
xor
sub
inc
addr16
dec
or
xor
sub
icebp
push
inc
push
jge
lods
lds
mov
adc
out
into
popf
jge
cmp
ret
mov
mov
subb
lods
push
in
jmp
scas
rcr
cmpsl
jp
rcll
dec
push
xor
fiadds
in
cmc
stc
lea
jge
fdivrs
loopne
roll
imul
addr16
gs
js
or
push
andl
mov
mov
stos
ficoms
call
scas
mov
cld
pop
pushf
add
inc
roll
mov
cmp
add
xlat
inc
in
pop
or
and
in
jg
and
pusha
sahf
push
pop
or
js
dec
cmp
mov
aam
movsb
mov
aaa
jne
dec
leave
xchg
push
mov
mov
fistl
fcoml
outsb
test
adc
xor
fldcw
adcb
sub
mov
fstpt
mov
fdivrs
fstl
inc
mov
or
mov
xchg
inc
movsl
mov
lret
adc
lods
mov
cmpsb
pop
jne
adc
and
push
or
jno
filds
sarl
out
insb
adc
fwait
xchg
jb
push
fs
jp
in
dec
mov
lock
movsb
lret
add
dec
int3
mov
out
jl
int3
push
push
xchg
pop
sbb
inc
or
sbb
roll
hlt
push
outsl
or
in
jecxz
adc
cld
xchg
jmp
mov
ja
and
or
push
repz
mov
fidivrl
or
movsl
dec
int
xchg
push
sti
jns
sbb
dec
fs
xor
dec
inc
inc
cmpsb
das
or
mov
aam
je
fsubl
jns
ret
mov
inc
and
dec
push
sarl
repnz
sbb
sbb
push
rorl
adc
xchg
arpl
scas
xorl
inc
bound
hlt
cld
loope
mov
xor
mov
ret
roll
fs
test
dec
push
cwtl
xchg
loope
clc
add
es
fcomps
xor
push
push
inc
enter
or
jmp
jl
sbb
adc
jl
dec
pushf
add
ljmp
push
insl
movsl
and
testb
adc
stc
clc
adc
jp
lcall
je
and
sub
adc
int3
sub
adc
pop
sbb
imul
sbb
jb
pop
cmp
jl
pop
popl
mov
lock
or
mov
cmpxchg
sarb
push
or
aaa
insb
pushf
adc
loop
mov
mov
xchg
loopne
mov
or
mov
jae
mov
jge
pushf
mov
das
movsb
jl
cwtl
xchg
stos
mov
loop
addr16
andl
test
inc
lea
push
or
ljmp
jecxz
xorl
jle
lea
ja
sahf
fmull
incl
adc
mov
scas
subl
daa
pop
adc
loope
cwtl
loop
aaa
xchg
xor
lret
mov
mov
pop
stos
or
pop
pop
subb
lret
sub
cmp
iret
dec
je
loopne
pop
leave
inc
pop
cwtl
adc
int3
jne
cmpsl
sbb
fsts
xchg
outsl
in
data16
fsubl
xchg
xchg
data16
data16
outsl
fsts
mov
test
fdivs
out
xor
and
inc
mulb
js
dec
imul
add
shll
inc
push
int3
mov
loope
mov
je
xchg
ljmp
imul
hlt
mov
std
jns
fistps
sub
mov
mov
xchg
xor
adc
cmc
addr16
push
mov
lea
int3
xchg
mov
push
shlb
xor
mov
inc
jp
jl
xchg
lock
insb
cmp
sar
aad
in
mov
sbb
push
loopne
mov
jge
icebp
int3
xor
movsl
jle
je
loopne
in
jae
dec
fucomi
adc
inc
cwtl
mov
out
mov
add
mov
mov
xchg
xchg
cmp
xor
cwtl
dec
push
xorl
xor
and
jb
dec
lods
cld
pop
jbe
repnz
jmp
ja
gs
xlat
cltd
add
mov
out
pop
xor
adc
dec
ror
in
mov
jno
mov
sbbl
cmpsl
jmp
inc
icebp
or
push
push
clc
outsl
add
hlt
or
jle
push
adc
pop
adc
jmp
fnstsw
adc
loop
fimuls
add
push
jmp
adc
or
pop
pop
mov
in
cmp
aad
subl
push
cltd
mov
dec
lcall
pop
aas
sahf
pop
loopne
lock
out
mov
mov
dec
add
jl
out
xchg
bound
imul
and
imul
or
adc
and
mov
dec
ficoms
or
jmp
lds
cld
int
push
test
mov
push
xchg
mov
cmp
xchg
xor
adc
in
mov
lcall
add
mov
pop
ljmp
ret
mov
inc
push
sub
imul
mov
scas
test
pop
pop
test
or
fmuls
sub
xorl
sbb
insl
cmp
mov
cmp
pop
inc
dec
push
jbe
inc
mov
ss
cs
fcompl
je
or
jmp
addr16
out
sahf
jbe
cltd
mov
inc
inc
mov
adc
fwait
or
push
cli
outsl
popaw
push
inc
aad
or
int
fdivrs
addr16
in
stos
outsb
push
sub
divb
test
and
mov
int3
pop
enter
jecxz
push
bound
pushf
cld
fidivrs
mov
mov
faddp
adc
out
cs
jmp
mov
lods
stos
popf
dec
ss
mov
mov
movsl
jno
stc
or
iret
dec
pop
js
fsts
jns
aam
out
dec
xor
jge
jns
pop
sti
mov
or
push
and
mov
popf
repz
mov
jmp
cwtl
sarl
jo
lock
add
inc
pop
popf
inc
xlat
mov
and
push
and
dec
sahf
leave
xor
lahf
dec
out
cs
and
insb
push
sub
fistl
adcl
stos
fistpll
imul
pop
sub
or
iret
test
daa
mov
xchg
pop
test
xchg
mov
push
fldenv
add
outsl
xchg
pop
jae
lock
mov
fistpl
aam
xor
std
imull
ret
or
push
push
push
jne
adc
xor
loopne
push
cmp
mov
lods
sub
out
es
adc
out
lods
stc
in
xor
lock
mov
mov
dec
cmp
and
or
adc
popf
cltd
cmp
jne
aas
js
add
dec
scas
fwait
jmp
mulb
int
add
jnp
js
lahf
movsl
loopne
int3
pop
je
and
pop
aas
sbb
das
in
pop
add
add
popa
cmp
adcl
inc
cmp
imul
pop
adc
dec
scas
sub
add
push
addr16
lea
cmpsb
ss
jno
mov
aad
mov
xor
inc
arpl
lods
cmpsl
lret
pop
orb
test
cwtl
xchg
daa
test
mov
sti
icebp
jae
mov
push
push
xor
mov
jmp
adc
cmc
mul
into
pusha
lock
xchg
cmp
sub
ror
out
cld
int3
repz
adc
insl
push
fst
divb
insb
out
jmp
sub
or
fcmovu
xor
ja
in
add
jo
xor
test
mov
pushf
pop
xchg
lods
jae
push
in
cld
xchg
sbb
jnp
cmc
outsb
repnz
aas
movsl
mov
into
loope
in
out
int3
dec
popf
add
cmp
xchg
xchg
pop
jg
jns
ret
int3
in
mov
sub
test
xor
out
scas
push
das
popf
pushf
cmc
dec
sub
jge
iret
push
inc
jo
insb
inc
stos
mov
adc
mov
sbb
adc
push
in
adc
adc
xor
mov
aad
shlb
pop
xchg
dec
inc
lock
scas
sti
dec
scas
sub
frstor
scas
sahf
jmp
rorb
and
ljmp
mov
movsl
stos
repnz
cwtl
pop
pop
xchg
xor
scas
sub
shlb
jmp
jbe
lock
mov
adc
dec
cwtl
daa
cmp
icebp
mov
or
xor
mov
dec
inc
jmp
ja
call
clc
ja
pop
shr
or
mov
xchg
lods
sbb
lock
cmpsb
fcomip
in
lcall
testl
lret
das
sbb
xchg
ficoml
fists
arpl
test
push
xor
jp
gs
cmpsb
push
shlb
cli
scas
fcomps
and
test
dec
or
jbe
cli
cmpsb
stos
rcll
jne
sbb
pop
sub
cmc
js
jp
inc
jecxz
jo
cld
xchg
dec
or
push
dec
xorb
scas
aam
es
insb
mov
imul
xchg
mov
test
inc
mov
test
pushf
mov
cmc
in
sbb
sbb
dec
fiadds
push
dec
and
inc
jne
std
push
jmp
fimull
das
xor
jne
dec
and
and
lea
sub
mov
add
cmp
mov
mov
jg
jmp
push
bound
jp
xchg
js
lret
stos
pop
inc
fdivrl
sahf
jnp
jg
mov
in
test
pusha
or
shlb
movsl
dec
mov
pop
cmc
add
adc
loope
fnstcw
ret
xchg
cmp
stos
cltd
out
push
sbb
dec
and
shll
movsb
jbe
jmp
mov
daa
xchg
cltd
mov
sbb
and
shlb
enter
xchg
pop
aad
dec
and
cwtl
sub
inc
add
sbb
ljmp
xchg
jns
add
inc
enter
push
in
cld
ja
or
jnp
scas
add
add
in
xor
aam
adc
mov
aas
cmpsl
jmp
cmp
mov
test
xchg
pop
out
push
popw
js
push
dec
adc
pushf
xchg
scas
sub
jecxz
lcall
daa
jl
and
cmp
rcrb
inc
xchg
cld
ljmp
fwait
aas
call
push
cmp
fistl
inc
or
add
call
dec
aam
popf
push
rorb
cmpsb
aaa
popa
pop
add
test
dec
sbb
ds
cmp
dec
out
jmp
movsl
in
movsl
dec
fnstsw
int
pop
jmp
push
rclb
out
dec
in
mov
orl
testl
lock
out
mov
rorl
icebp
sub
xlat
dec
xchg
and
ret
jmp
push
lods
adcl
mov
repnz
sub
cmp
aad
fisttpl
fcmove
fs
inc
push
nop
cmp
cli
mov
cmpsl
cmp
xchg
test
pop
push
mov
lods
clc
dec
test
lahf
mov
pop
scas
iret
bswap
cmpsl
fstp
sub
jmp
xchg
jno
mov
xchg
sub
adc
lock
sub
addr16
pusha
push
mov
cwtl
push
mull
xor
push
das
mov
icebp
adc
insl
shl
fnstsw
sub
add
dec
sar
cmpsb
inc
pop
inc
lds
insb
add
out
nop
mov
lret
sub
mov
fucomi
sbb
lahf
cmp
xchg
sti
test
mov
sbb
arpl
cmp
push
rorl
leave
test
out
mov
add
mov
call
es
loope
test
adc
mov
xchg
std
sbb
ja
cmc
inc
in
gs
xchg
add
loope
adc
mov
into
cmpl
pushf
push
xor
imul
fadds
ja
addr16
lea
clc
pushf
cmp
dec
movsl
insl
xchg
add
jno
cmpsl
sbb
sbb
dec
and
cmp
lods
repz
and
ret
bnd
jbe
rol
popf
lret
xchg
mov
inc
rclb
jmp
aad
and
das
mov
adc
pop
or
sbb
xchg
test
stc
lds
jp
out
ljmp
pop
sti
xchg
add
mov
ss
scas
push
bound
push
inc
out
nopl
push
movsl
and
dec
and
adc
pop
shlb
sub
ficoml
addr16
inc
mov
and
lahf
mov
fstpl
bnd
push
stc
mov
xchg
addr16
loopne
or
popa
push
mov
sti
mov
pop
out
lahf
fstpt
xchg
jb
ds
and
test
mov
dec
pop
mov
out
mov
adc
mov
jns
inc
cmc
dec
shl
xchg
in
xlat
jnp
sbb
movb
add
xchg
xchg
sbb
dec
test
or
push
mov
hlt
and
xchg
xchg
xor
punpckhwd
xchg
movsb
jle
lret
mov
bound
fldl2e
outsb
pop
push
lock
adc
xor
jae
mov
daa
or
nop
pusha
pusha
mov
xor
and
mov
dec
std
roll
pop
cmp
xchg
iret
mov
push
pop
out
pop
sub
dec
sub
imul
mov
mov
mov
sub
xchg
adc
inc
rclb
inc
xor
aad
inc
mov
mov
les
fwait
mov
shll
or
imull
js
fadd
and
jno
insl
mov
jl
fdivs
mov
dec
dec
xor
ds
leave
gs
inc
filds
add
add
mov
jecxz
ret
sbb
stos
mov
add
push
stos
pop
cmp
xchg
je
and
sub
cmp
sub
fdivrl
not
jns
mov
pusha
or
outsb
mov
mov
ljmp
sub
leave
xor
mov
jl
or
lods
jp
and
icebp
in
cmp
test
adc
out
cwtl
inc
fsts
adc
mov
cmp
dec
insl
sbb
adc
push
test
xchg
add
dec
out
lcall
popa
fmul
xchg
jns
push
dec
inc
xchg
int3
cld
adc
rorb
fcmovnu
je
in
movsl
movsl
cmp
iret
mov
rorb
add
adc
sete
js
imul
mov
xor
jmp
cs
dec
ret
insb
jbe
cltd
push
fs
mov
hlt
addb
mov
fisubrs
out
sub
dec
mov
jo
sbb
and
xchg
push
mov
pop
xor
sub
lock
test
lret
inc
mov
mov
add
imul
adc
in
in
mov
cmpsb
push
test
mov
int
or
xlat
out
lret
push
outsb
lret
fstpt
sub
xchg
push
aaa
inc
jle
aad
mov
xlat
lods
or
or
loopne
mov
fcomps
jle
xor
fstpl
mov
mov
push
insl
mov
outsb
push
inc
cmp
dec
cmpsl
jg
dec
repnz
stos
scas
push
gs
add
outsb
fstl
sub
dec
push
testl
and
mov
out
loopne
inc
sub
xchg
fs
add
inc
mov
sbb
mov
ds
sub
sahf
rcrb
es
or
fstpt
inc
iret
push
lea
inc
nop
insl
mov
lock
pop
mov
enter
shll
xchg
mov
addl
pop
fcoms
mov
mov
push
adc
xor
movsl
cmpsl
movsl
fdivl
push
xchg
mov
into
cmpsb
in
mov
std
jl
sbb
cwtl
inc
fstpl
ficomps
int
push
scas
daa
aam
addr16
mov
inc
lcall
in
loop
adc
pop
dec
cs
mov
xchg
mov
jmp
stc
inc
push
fsubp
add
jp
or
sub
mov
xchg
repz
cmp
inc
mov
dec
xor
popf
insb
add
jle
mov
aad
xor
sbb
push
mov
in
and
add
movsb
out
insb
pop
add
inc
stc
popa
iret
mov
fs
sub
je
jle
popa
not
adc
cmp
jp
push
leave
adc
rcrb
les
mov
jnp
pusha
in
adcl
cmp
repz
out
loope
xchg
fdivrs
mov
std
mov
sub
mov
mov
data16
mov
loope
fisubs
lods
enter
add
sbb
bnd
mov
pop
gs
adc
sub
cmp
mov
adc
cmp
cld
scas
mov
ja
sub
cmp
cwtl
xor
movsl
fistps
cmc
fstpl
dec
add
fs
xlat
out
mov
push
jmp
movsl
insb
fildll
cmp
mov
push
push
add
xchg
popf
xchg
sahf
xor
fnstcw
inc
ficoms
and
push
xor
jle
sub
dec
loopne
daa
and
fwait
pop
ret
cmp
xor
dec
fstp
adc
divl
fnsave
mov
push
mov
nop
xchg
gs
push
xchg
arpl
lea
mov
sahf
pop
fdivs
mov
pop
jbe
out
mov
jo
cmp
adc
aad
sbb
stos
cli
in
nop
dec
roll
xchg
mov
fs
inc
mov
es
jae
inc
dec
incl
iret
fstpl
outsb
ficoml
pop
scas
imul
dec
and
sub
sub
lods
stos
cmc
inc
jp
shl
or
cmp
push
add
xchg
xor
mov
xor
mov
pop
inc
add
out
in
jle
mov
sub
loope
mov
lods
cmp
cmc
ret
sub
test
xchg
jl
aad
stos
mov
mov
aad
mov
inc
inc
add
icebp
repz
mov
add
imul
or
test
daa
into
arpl
hlt
loop
inc
mov
enter
xor
imul
repz
imul
jns
andl
and
hlt
sbb
insl
xor
sub
push
cmp
add
mov
cld
dec
add
mov
aaa
inc
pop
jne
xcrypt-cbc
cmpsl
pop
jae
add
je
scas
test
rcrl
mov
jns
or
push
inc
dec
enter
ja
mov
xchg
xor
sub
repnz
insb
lds
mov
xlat
mov
enter
in
jns
add
fwait
jge
std
pop
sbb
adc
pop
fiaddl
sub
dec
pop
sbb
or
std
push
fidivs
cmp
sahf
ret
mov
jge
sub
pop
pusha
lods
mov
das
andl
lret
mov
cld
test
jge
test
lahf
int3
fwait
imul
sub
movl
xor
lock
jno
sbb
addr16
cmpb
push
cmp
outsb
jns
cmp
je
out
sbb
imul
movsb
push
cmp
inc
pop
sbb
dec
jl
stos
cmp
and
sbb
push
popa
jg
dec
cmp
cmp
pop
leave
mov
lock
cmp
cmp
or
cmp
push
or
and
mov
or
int3
fldcw
inc
addr16
imul
es
nop
negl
arpl
nop
popa
sub
jg
bound
mov
loop
mov
outsb
pop
push
enter
push
jg
das
std
test
pop
cmp
scas
fbld
adc
pop
push
jp
sub
pop
or
sub
mov
push
add
je
jp
imul
out
dec
add
sbb
cmp
sub
lods
cld
enter
icebp
mov
lods
lods
repnz
mov
addr16
fdivrl
std
cld
jecxz
and
pop
xchg
mov
sbb
push
sub
xchg
xor
test
sbb
and
loopne
js
pop
mov
mov
xchg
jns
movb
insb
call
jbe
push
push
sub
pushf
jl
pop
add
pop
dec
mov
adc
lods
jno
pop
gs
ret
push
adc
dec
mov
mov
jnp
cmc
in
push
test
loope
xchg
push
ficompl
rolb
out
and
les
dec
fildll
lods
jno
dec
pop
and
lods
rcr
sub
int
add
jecxz
xor
shrl
push
leave
adc
xchg
mov
adc
sbb
not
cmp
sbb
repnz
push
and
scas
mov
mov
mov
in
stos
mov
xor
ret
shll
push
xlat
cwtl
inc
aaa
push
leave
push
or
mov
sti
mov
sbb
icebp
xor
daa
fadds
pushf
mov
xchg
mov
in
lcall
and
mov
stos
dec
inc
mov
lcall
imul
test
dec
iret
cmp
out
lock
mov
push
dec
push
andps
mov
pop
pop
or
out
push
pop
xor
pop
mov
add
cs
push
cmp
add
sub
in
xor
fcmovnu
hlt
movups
movsb
imul
in
fmuls
lea
dec
sub
jg
ja
add
pop
loope
jg
push
in
inc
das
cmp
add
dec
mov
loopne
mov
add
nop
pop
dec
rolb
lret
push
pop
test
aam
clc
mov
test
in
or
and
cmpsl
incb
in
push
adc
mov
jmp
push
icebp
mov
ficompl
or
jno
scas
rolb
icebp
jp
adc
jge
mov
incb
cwtl
sti
sub
lds
jno
decb
fisubl
sbb
jp
xor
jns
ja
mov
hlt
sub
xchg
xchg
rclb
shll
outsl
cmp
mov
imul
push
inc
movsl
xchg
jle
dec
jo
add
xchg
leave
mov
loop
ret
inc
cld
decb
adcb
into
or
mov
adc
lods
and
cs
fimull
mov
mov
andb
repz
and
adc
jbe
mov
mov
jb
mov
notb
add
shll
or
mov
bound
jle
or
sub
mov
mov
addl
roll
fmul
leave
popf
xor
mov
pop
cmpsb
mov
jno
sar
out
hlt
xchg
jmp
call
inc
dec
out
mov
cmpsb
sbb
dec
ds
es
jg
aas
std
jecxz
xorb
xchg
pusha
xor
ljmp
out
dec
add
dec
test
pushf
xchg
call
cli
inc
pusha
adc
sub
cmpsb
shlb
test
adc
addr16
adc
shr
mov
testb
icebp
ret
movsl
inc
xor
add
or
out
pop
popf
jb
or
mov
dec
testb
dec
sub
xchg
aas
inc
fmull
and
and
xlat
sti
push
repnz
pop
out
xlat
aam
xchg
or
mov
inc
xor
and
sub
jno
jb
push
les
fincstp
data16
jecxz
mov
fwait
test
cs
or
lock
mov
inc
sub
pop
test
movsl
jo
mov
mov
or
popf
enter
loopne
cld
mov
and
mov
adc
cmp
es
int
aas
in
cmp
push
cltd
test
push
loopne
fdivp
push
push
or
mov
mov
in
dec
jb
jmp
xchg
jae
arpl
adc
test
jo
les
lahf
insb
or
ja
push
sub
inc
lret
pop
outsl
repnz
mov
mov
cmp
int3
adc
in
shlb
jno
lcall
or
je
fldenv
ficompl
or
outsb
out
xchg
in
test
shl
inc
loop
cmp
adc
in
hlt
andb
test
loop
sub
das
das
fistl
or
fsubs
clc
lods
jmp
fwait
push
jno
lock
push
leave
mov
pop
push
inc
rol
insb
fwait
ret
mov
jmp
pop
es
mov
sbb
or
stos
sub
in
mov
dec
sub
leave
or
ret
fdivrl
pop
js
adc
jecxz
mov
and
mov
xchg
enter
dec
push
negl
mov
out
and
into
cmp
cmp
pop
bound
fadds
pop
ret
lds
sbb
movsb
mov
jl
adc
aam
sahf
push
loope
repz
dec
jno
mov
dec
push
mov
push
cltd
jns
out
mov
xor
pop
push
mov
add
movsb
dec
push
dec
xlat
push
in
cmp
sahf
lds
scas
xor
test
jae
and
incl
cmp
bound
cmc
mov
sbb
test
or
insl
dec
sti
int3
int
dec
cmp
out
jnp
clc
andl
lret
nop
add
lret
fdivrl
and
mov
mov
mov
dec
idiv
add
sub
mov
push
les
outsb
loop
lods
jb
or
xchg
mov
inc
xor
les
test
pusha
adc
xchg
out
lds
push
rcr
push
in
lds
adc
cmp
xor
fisubl
je
lahf
or
push
jne
out
imulb
fimuls
add
pop
js
jo
gs
adc
fldcw
inc
pop
outsl
fisubrl
push
inc
adc
mov
leave
inc
in
sahf
adc
mov
mov
sub
pushf
insl
insl
xchg
cli
mov
sbb
push
xchg
data16
addr16
cmpl
inc
imul
or
fwait
push
push
cmp
sub
dec
insb
push
lret
ds
or
mov
lahf
mov
dec
je
mov
jl
in
inc
lock
jp
rol
inc
hlt
or
sbb
lds
out
adc
roll
jecxz
inc
imul
sub
mov
mov
xchg
xchg
out
cmc
outsb
pop
pop
inc
add
or
dec
add
stc
fsubl
iret
ret
xlat
or
sahf
cld
test
mov
jp
pushf
in
sti
sub
xchg
cli
into
adc
popa
dec
fucom
int3
sbb
fsubl
clc
adc
test
rclb
mov
push
test
aad
dec
cltd
or
loop
pop
cld
jno
jno
ja
or
in
add
xor
xchg
lcall
pop
push
jo
sbb
adc
xchg
mov
sarb
xchg
inc
push
xor
sbb
call
xchg
dec
divl
add
fstl
cmp
cmp
push
fistl
xchg
std
adc
mov
sarb
jl
xchg
mov
xor
xchg
pop
int
mov
jge
or
push
or
dec
dec
mov
add
shr
dec
xchg
and
fsubrs
jo
in
ret
xchg
pop
and
adc
dec
das
mov
inc
lock
lock
jmp
fwait
adc
xchg
push
xor
daa
and
lds
adc
in
pop
sub
sarl
ss
cld
pop
es
push
sbb
int3
xchg
test
outsl
mov
jbe
mul
test
clc
test
xchg
xchg
mov
daa
imul
pop
sbb
fldt
pop
js
push
fisttpll
adcl
xor
and
fcmovnu
adc
cmp
and
cmp
test
test
push
out
xor
xor
aam
pop
jnp
and
es
imul
jbe
adc
bound
aas
inc
ljmp
addr16
xorl
push
add
addb
pop
outsl
in
mov
xchg
mov
add
or
icebp
ret
inc
jecxz
dec
arpl
cmp
push
rcrl
aam
and
and
fsts
stos
lcall
sbb
xchg
add
jns
or
or
lea
or
mov
gs
mov
faddl
lret
test
clc
addr16
cmpsl
mov
xchg
or
das
xchg
mov
cmp
push
mov
xchg
pop
mov
pop
mov
adc
inc
lds
xor
movsl
and
inc
scas
mov
cmp
out
cmp
or
and
cltd
inc
shl
in
mov
imul
adc
or
cltd
aas
jp
pop
fisubs
imull
add
push
aad
mov
out
mov
dec
xor
sub
add
movb
and
adc
pop
push
inc
add
test
leave
jno
ret
stos
push
mov
add
sarb
hlt
mov
cmp
mov
push
imul
repnz
jbe
push
cs
dec
mov
cmpsl
cmp
add
push
mov
lret
in
outsb
adc
xor
dec
iret
imul
sub
ret
jno
popf
xchg
cwtl
jo
lods
js
add
mov
pusha
adc
cld
xchg
mov
sbb
pop
sub
fs
inc
mov
js
jb
insb
or
loope
cmp
xchg
dec
out
ja
enter
jle
pusha
test
add
imul
pop
decl
out
stos
iret
inc
in
popa
fwait
cmp
push
pop
jno
jne
jo
idivb
fildll
enter
sbb
xchg
lret
sbb
inc
xor
dec
inc
dec
mov
pop
push
aad
inc
xchg
adc
and
push
addr16
clc
mov
xorb
xchg
stos
sbb
insl
xchg
xchg
andl
cs
push
icebp
repz
xchg
adc
jnp
je
pusha
fs
fldl
sub
and
jge
mov
inc
ja
jae
fdivl
sub
sub
xlat
mov
cs
test
or
bound
adc
mov
fucomi
mov
or
je
orb
lods
loop
movsl
and
xchg
xor
test
or
sub
scas
push
bound
xor
mov
jae
and
aaa
clc
cmp
jo
mov
shll
sbbl
xchg
xchg
addps
xchg
std
jbe
xchg
scas
mov
insl
cmp
push
js
inc
out
mov
add
into
adc
mov
rclb
mov
mov
popf
dec
out
loope
adc
push
jp
xchg
inc
aad
mov
sub
xor
dec
push
in
jbe
push
fldenv
and
ds
out
dec
out
mov
hlt
or
xchg
ret
sbb
lahf
lods
cmp
and
pop
movsl
jae
pop
dec
aaa
inc
mov
xchg
std
fucom
ret
test
inc
xor
add
int3
das
sahf
pusha
dec
sub
xor
fidivl
and
mov
popa
daa
jns
xchg
mov
int3
push
mov
inc
adc
mov
mov
addr16
popa
cmp
push
xchg
loopne
and
aad
in
int3
mov
lds
adcl
test
pop
test
fisubl
or
xchg
xchg
pop
cs
std
rorb
cmp
adc
cli
mov
pop
aam
push
lret
xor
pop
mov
xchg
jnp
pop
les
cltd
and
ret
mov
dec
into
iret
mov
cmp
std
sub
inc
insl
loopne
adc
clc
loopne
inc
int3
sbb
pop
into
outsl
test
mov
push
cmpsl
shlb
aas
or
jnp
je
sub
negl
and
push
push
or
cmpsb
jle
loopne
rclb
ret
fmulp
inc
aam
push
xacquire
or
bound
push
sahf
test
movsl
stos
into
adc
filds
push
xchg
mov
bound
movsb
jp
or
pop
loop
sub
adc
dec
and
ss
jp
or
xchg
ds
lret
in
insb
cmpsl
push
inc
dec
dec
ja
pop
stos
xlat
inc
xor
pop
dec
std
sub
adc
and
jnp
xor
in
sub
adc
sbb
aaa
call
inc
jbe
inc
jnp
out
cld
imul
xor
je
xor
mov
push
in
push
lods
push
cmp
inc
aam
cmp
push
adc
mov
cmp
std
add
popa
inc
jno
insb
mov
sbb
lods
gs
fcmovb
sti
pushf
repnz
xchg
add
push
mov
mov
loope
or
lret
arpl
or
lahf
inc
adc
aad
pop
inc
loop
mov
pop
pop
push
add
fldt
sub
jb
or
mov
in
lock
ret
cmpsl
sahf
shrb
stc
fadds
dec
push
inc
pop
dec
or
fsubs
lods
xchg
movsb
mov
inc
lock
pop
into
loop
jg
orl
int
jmp
jg
adc
inc
aam
pop
mov
xor
ds
inc
add
push
repnz
ficoms
shrb
xchg
das
ficompl
movsb
mov
and
push
or
cwtl
fiaddl
pop
icebp
or
sahf
in
mov
mov
rcrb
jns
pop
add
and
lsl
out
jb
loope
mov
int
cltd
push
outsl
sub
jl
jge
ret
xor
out
imul
enter
gs
and
rorb
pop
mov
aaa
cmp
lahf
and
sub
and
in
je
sbb
push
sub
cmp
inc
xchg
lods
mov
sbb
sbb
pop
das
aas
and
cs
addl
test
jns
leave
cld
sbb
mov
test
hlt
gs
mov
je
xchg
leave
mov
cmpsb
pop
lahf
inc
faddl
ficompl
orl
loopne
mov
cltd
ret
enter
out
or
add
jg
std
ret
sbb
stos
fwait
mov
push
add
cmc
cmp
rorl
mov
mov
dec
test
divl
push
pop
out
jbe
into
fs
lods
mov
jp
roll
pop
mov
mov
dec
jnp
clc
add
sbb
sbb
dec
sbb
cs
inc
es
cmp
sub
mov
arpl
decl
dec
mov
stc
mov
mov
outsb
iret
pusha
sub
pushf
dec
pop
lcall
leave
cwtl
test
nop
cmp
filds
mov
sbb
mov
in
popf
mov
inc
dec
ret
xchg
popf
mov
xchg
lret
les
mov
ja
fistps
fcomip
insl
xchg
cld
add
out
sub
sbb
mov
jl
sahf
punpckhdq
repnz
scas
xchg
push
fidivl
sub
mov
inc
push
push
or
js
mov
mov
pop
cmpsb
or
push
out
les
call
sbb
pushf
sarb
jae
aaa
popa
push
or
adc
std
cmp
lea
push
xchg
stc
push
stos
mov
enter
adc
subl
popa
push
add
jbe
fstpl
iret
adc
cmp
push
addb
adc
cmpsl
mov
adc
push
or
bound
push
cmp
cli
jae
mov
fnstsw
mov
aad
out
cmp
push
dec
inc
sbb
sub
rcll
ret
jmp
call
mov
cmp
je
xchg
jbe
in
sbb
and
incb
bound
ljmp
mov
and
dec
in
pusha
sub
nop
stos
leave
push
or
mov
pop
pop
int
fsubs
xor
outsb
inc
stc
cmp
and
mov
or
movsb
adc
lahf
sub
dec
aam
loope
xor
pop
or
sbb
out
dec
dec
sub
fdivr
out
ds
push
stos
mov
loope
sbb
cmc
or
addr16
fbld
push
mov
mov
lods
sub
mov
push
test
adc
insl
nop
cmp
mov
dec
mov
adc
call
cmp
paddsw
inc
rcr
ret
frstor
push
ret
push
test
pushf
shl
es
std
in
hlt
push
push
cs
repnz
mov
add
mov
fwait
aam
mov
aam
pop
adc
jle
mov
mov
fldenv
sub
push
xchg
shll
xor
ljmp
xlat
leave
sbb
mov
loope
pop
jmp
xchg
lahf
repz
les
sbb
sub
dec
pusha
sti
mov
sti
mov
movb
mov
cli
pop
stos
inc
adc
adc
pop
lods
push
xchg
jge
fwait
sub
jmp
test
jle
xor
mov
add
leavew
stc
icebp
xchg
adc
mov
jmp
adc
hlt
sbb
xorl
mov
fcmovu
cmp
rcrb
shl
xor
inc
and
mov
call
sub
xchg
mov
jmp
mov
push
ss
push
popa
lods
mov
xor
xchg
adc
jg
mov
jb
mov
cmpsb
sub
lock
xor
scas
xor
in
imul
dec
jmp
jns
rcrb
js
mov
stos
mov
and
lret
or
sub
enter
push
jbe
sbb
addl
shll
push
enter
pop
in
jmp
xor
add
cmp
stos
mov
sti
pop
add
sarl
leave
cmp
xchg
outsb
cmp
stos
inc
sahf
std
enter
sbb
js
sti
sbb
stos
movsl
or
or
cmp
nop
cmp
sbb
mov
mov
pop
loopne
and
and
les
add
in
out
fs
iret
jecxz
mov
dec
xchg
jne
ss
cwtl
xchg
and
mov
pushf
rol
pop
mov
insb
and
fsubrl
or
insl
push
fnstenv
jnp
mov
aaa
ds
inc
sub
cmp
loop
into
je
fisubrs
clc
je
sahf
dec
into
fs
add
loope
mov
out
push
ja
jecxz
mov
leave
lahf
dec
adc
push
pusha
sbb
mov
jecxz
ficoms
loope
repnz
loopne
ret
dec
cmp
test
inc
jp
push
stos
jge
mov
lret
mov
push
dec
js
pop
pop
sub
dec
mov
mov
adc
mov
lods
xchg
outsb
leave
clc
inc
mov
cld
int3
into
sub
push
ds
sub
pop
std
outsb
jo
mov
pop
xorl
inc
out
pop
jbe
rcrb
adc
sbb
adc
sbb
inc
push
mov
xor
shll
ds
std
fidivrl
push
insb
shll
cmpsb
cmp
xor
adc
lret
mov
mov
pop
dec
aad
mov
cmp
test
ss
jmp
mov
adc
mulb
aaa
testl
or
sbb
fwait
sbb
out
lds
fcoms
jbe
or
mov
mov
jns
fstpl
addr16
cmp
fsubrl
inc
xor
ljmp
nop
mov
dec
das
pop
push
add
jb
mov
jmp
les
outsb
and
lret
lea
add
jge
fidivs
jl
aas
adc
mov
fwait
mulb
sbb
bound
inc
or
sub
jb
sbb
iret
pushf
sbb
mov
test
aad
jecxz
adc
xor
inc
pop
cmp
insl
push
adc
dec
xchg
adc
hlt
mov
outsb
inc
leave
lahf
insl
hlt
std
or
adc
cmc
fst
add
sbb
ret
lods
sti
push
push
push
add
cmpsl
test
inc
scas
iret
popa
jo
cmpsl
inc
addr16
push
add
jp
push
add
inc
jp
repz
lea
imul
pop
scas
push
andl
cli
mov
dec
loope
adc
cmpb
and
inc
aas
imul
mov
stos
xchg
outsl
int
es
mov
push
dec
pop
loope
aad
bnd
pop
iret
stos
icebp
es
movsl
adc
fistps
adc
nop
push
fisubl
inc
add
jle
push
xlat
and
adc
sub
push
xchg
jns
push
dec
call
sub
test
cmp
ljmp
sub
inc
sahf
or
jle
pop
fistl
or
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
jmp
lret
pop
idivb
addr16
push
into
xor
jl
sbb
test
sahf
shll
mov
jge
jbe
xor
pop
sbb
ljmp
sahf
lds
sub
pushf
inc
std
xchg
mov
pop
or
insb
cltd
popa
inc
jb
dec
mov
add
cli
or
enter
mov
fldcw
and
aam
lret
push
sub
and
les
inc
add
test
pop
push
lods
or
ss
dec
aam
or
cmp
mov
es
les
imul
inc
inc
and
sbb
adc
pinsrw
jne
mov
ret
mov
fdivs
xchg
push
xchg
inc
lods
imul
push
subb
xchg
sub
jb
stos
fs
orb
fsubs
adc
xchg
inc
or
ljmp
insl
jnp
scas
shll
pop
aas
adc
xor
lods
xor
push
leave
dec
inc
mov
pop
sbb
into
adc
mov
cmp
xor
jmp
sbb
mov
xchg
gs
lds
pop
flds
jbe
cmpb
push
inc
dec
insb
lret
push
stc
or
mov
ret
sub
int
cltd
jb
pop
and
cmpb
pushf
ja
inc
lea
rcl
repnz
push
iret
jb
dec
xor
jnp
xor
out
ljmp
mov
popf
daa
mov
mov
add
fsts
icebp
sub
dec
inc
sbb
ss
sub
inc
mov
shll
push
arpl
add
jecxz
pop
mov
xchg
mov
mov
inc
movsb
cmp
pop
sub
pop
push
sbb
push
nop
movsb
jns
lea
adc
push
jno
push
mov
mov
cld
outsl
push
ret
cmpsl
adc
jg
fwait
call
icebp
cmp
push
pushf
pop
nop
jbe
sbb
sti
cmc
loopne
push
push
ret
imul
or
or
loope
xor
cmp
sub
and
pop
xor
clc
push
repz
dec
xor
mov
push
jmp
add
inc
sahf
out
mov
int
sbb
cmp
popf
or
imul
cmpl
jo
call
jo
test
xor
and
jae
shl
and
cmc
cmp
divl
sbb
push
aam
push
std
jnp
push
push
push
rorb
pop
jne
jl
lahf
xchg
sub
mov
cmp
stos
lds
sub
fnstcw
rorl
stos
xchg
lea
cmpsl
lret
js
dec
and
jle
push
lods
or
in
outsb
xchg
and
add
insl
push
in
dec
jecxz,pt
mov
std
lods
loopne
or
push
rcll
lret
sahf
enter
xor
cmp
inc
daa
stc
adc
adc
ss
pop
pop
and
outsl
arpl
sub
mov
popa
movsb
cmpl
sub
mov
in
cmpsl
out
scas
dec
mov
mov
lret
inc
cwtl
mov
or
shlb
ljmp
jae
jmp
jb
cmp
xor
jge
xchg
call
insb
dec
push
scas
pop
xchg
loopne
dec
add
mov
sub
cmp
cmp
jecxz
jp
iret
jnp
mov
pop
cld
xchg
adc
pop
divl
xor
push
cmp
jnp
shr
xor
es
clc
jmp
test
bound
jns
dec
sarl
pop
xchg
hlt
ja
pusha
xchg
out
out
lods
pop
or
sbbl
or
psubsw
repnz
fucomip
cmp
sub
mov
adc
pop
push
add
lods
lea
and
push
and
mov
push
test
fcompl
mov
movsl
ljmp
lods
int3
jne
add
push
xchg
and
push
rcr
or
fsubrl
loop
int3
sbb
roll
mov
rcl
jno
inc
hlt
jge
jecxz
inc
inc
mov
pusha
adcb
sbb
or
into
in
mov
cmp
dec
pop
or
lea
ljmp
loope
insb
cwtl
in
jb
mov
push
sti
mov
fwait
hlt
and
pop
je
cmp
scas
mov
pop
fsub
ret
sti
loop
mov
sub
cli
mov
cmpsl
adc
jns
jb
rcrb
test
jg
and
ret
pop
lock
outsb
fwait
call
sbb
cltd
pop
fcmovnb
push
in
cld
movsb
add
sahf
jns
dec
cmp
add
pop
inc
or
add
das
and
cmpsb
stos
jnp
pop
outsl
inc
mov
xor
push
xor
pop
cmp
aam
sub
cmp
test
sahf
mov
jecxz
fcom
cmc
arpl
data16
cltd
fdivrl
dec
xchg
aas
pop
pop
or
jmp
es
insl
bound
add
pushl
mov
mov
push
pop
cs
mov
cmp
dec
and
jg
sbbw
int3
int3
sbb
mov
jle
cmp
sti
movsl
dec
jae
inc
outsb
jge
scas
sarl
movsl
mov
mov
lcall
mov
repnz
inc
jne
ljmp
jecxz
outsl
jae
mov
add
fadds
leave
jg
outsl
pop
ret
subb
aaa
movsb
and
add
jne
iret
mov
adc
lret
orb
and
cmp
and
out
mov
xchg
addr16
pop
repz
std
dec
call
and
dec
aam
mov
jg
xor
inc
mov
sbb
lahf
int
enter
sbb
movsl
jno
mov
imul
mov
aad
adc
in
mov
ja
dec
pop
add
push
inc
mov
xchg
mov
pop
sbb
adc
lea
sbbl
mov
jecxz
cmp
in
mov
js
in
test
sbb
scas
clc
lahf
cld
loop
xor
mov
jp
leave
xchg
sub
or
dec
aam
inc
out
enter
mov
add
push
mov
mov
push
jl
jp
fildl
sub
sub
and
dec
fwait
jae
xor
xlat
mov
cli
fwait
inc
das
test
mov
mov
mov
hlt
sbb
ret
pop
out
mov
xor
lock
xchg
fiaddl
in
lahf
xor
xchg
xchg
cld
movsb
dec
out
pop
xor
dec
inc
incl
repz
xchg
and
add
mov
mov
pop
jmp
mov
pusha
repnz
sbb
mov
lods
add
fldl
cmp
clc
popa
icebp
pop
ret
fwait
mov
or
sbb
jmp
sub
aam
hlt
xor
xchg
dec
in
in
pusha
mov
hlt
jecxz
ja
dec
and
mov
or
mov
sub
jle
inc
mov
mov
and
mov
pop
fisubrl
add
xchg
icebp
pop
sbb
push
adc
push
xchg
outsb
shrl
out
clc
mov
xor
add
push
cmpb
aad
call
and
xor
test
adc
out
or
xchg
sub
xorb
cld
mov
cmp
popa
push
inc
sub
popa
pop
aam
mov
clc
je
aam
mov
test
sbb
shrb
clc
adc
or
shrl
repnz
and
les
ljmp
push
add
xor
dec
inc
and
daa
dec
andb
mov
inc
inc
ljmp
inc
js
imul
adc
inc
aam
or
dec
fsubrl
lock
inc
mov
iret
incw
or
xor
jg
or
rcrl
lock
push
mov
mov
mov
ret
mov
sbb
sub
add
shrb
push
imul
cmp
add
rcrl
lret
in
and
xchg
cmc
and
push
cmp
divl
call
insb
jecxz
jno
xchg
cmp
insl
pop
out
lcall
fsubrs
imul
int3
sub
add
add
cmp
ss
add
cs
aaa
sub
test
xor
pop
mov
jle
fcmovne
into
xor
sub
icebp
scas
fs
jg
lret
adc
imul
in
adc
xchg
or
mov
mov
dec
push
js
and
std
cmpsb
inc
pushf
stc
not
fucomp
popf
dec
invd
mov
cmp
inc
loop
pop
addl
xor
and
xchg
je
loope
jle
xchg
inc
loope
jno
divb
les
push
xchg
pop
dec
fdivrl
mov
sub
and
loope
sbb
jb
xchg
out
lods
dec
out
lock
mov
stos
sbb
fs
inc
repz
mov
push
fcomip
xor
push
push
sahf
inc
inc
lods
jl
add
je
xor
sbb
outsb
lods
mov
insl
insb
cmc
in
out
dec
scas
xlat
adc
jge
add
push
xchg
call
dec
test
out
in
dec
mov
das
jp
push
inc
cmp
outsb
loop
sub
cmp
fstps
in
in
cmp
adc
xchg
and
shrd
add
fdivl
in
or
xchg
in
int3
mov
xor
add
xchg
lahf
out
cmp
sbb
movsb
fidivrs
aaa
dec
in
decb
mov
mov
mov
fmull
sub
std
ja
fstl
ss
pop
cmp
cmovge
test
jmp
fisttps
dec
leave
and
insl
push
jae
cmp
jae
pop
sbb
popf
icebp
adc
rorb
cltd
ljmp
jno
sub
sahf
cmp
mov
jbe
mov
pop
inc
adc
cltd
push
jecxz
ds
mov
adc
and
mov
cltd
stos
push
mov
out
out
ds
xchg
jl
sbb
cli
insb
mov
jg
enter
mov
fcoml
out
gs
dec
rcrb
out
imul
outsb
mov
nop
sub
outsb
test
dec
sub
stc
sbb
push
imull
dec
xchg
inc
idivb
mov
push
push
mov
push
in
loope
pop
push
xchg
xor
incb
movsl
aam
insb
mulb
in
imul
jmp
and
and
outsb
loope
jl
push
mov
dec
xlat
jns
out
pop
int
sbbl
xchg
mov
in
cltd
jb
sub
add
push
lods
test
dec
rorl
sbb
rolb
popf
xchg
cwtl
xchg
stos
push
sub
pop
scas
and
and
into
push
mov
add
inc
test
stos
jecxz
pop
push
push
or
popf
jb
insb
or
add
int3
and
pushf
xchg
pusha
enter
sbb
jecxz
clc
sahf
jg
enter
outsl
stos
scas
cmp
int
dec
cli
pop
adc
dec
or
cld
adc
jge
iret
add
mov
outsl
mov
fwait
mov
sbb
test
cs
mov
inc
test
int3
cmp
pop
fs
test
mov
cmpsb
xchg
or
or
sub
stos
lock
xor
repnz
cli
mov
or
push
and
cmp
dec
sbb
das
jp,pn
scas
imul
mov
xor
xor
jnp
loopne
outsb
xchg
adc
aam
xor
lock
sbb
mov
pause
mov
cmp
cld
fimull
pop
ret
leave
cmpsb
dec
sub
test
mov
pop
xor
iret
pop
cmpl
fnstsw
jo
dec
mov
inc
mov
push
mull
cld
enter
bound
loopne
xchg
sub
cmp
movsl
shl
pop
add
mov
and
xor
aas
aaa
mov
xor
inc
mov
dec
fwait
add
or
in
aam
pop
inc
aam
mov
stc
xor
sbb
ret
popf
mov
xchg
leave
out
dec
loopne
fs
pop
mov
xchg
or
jns
fcmove
movsl
mov
add
ja
shrb
out
movsl
push
fcmovne
xchg
js
mov
lods
push
mov
pop
aam
and
and
pushf
or
addl
adcb
insb
dec
mov
pop
mov
pop
and
xchg
decl
inc
cli
xor
jl
xchg
dec
jecxz
neg
inc
xlat
jmp
sar
xchg
pop
rclb
je
push
das
dec
pop
mov
ret
pop
cwtl
push
imul
out
inc
push
jg
les
xchg
mov
add
jbe
or
pushf
std
or
pop
into
lahf
adc
adc
outsl
or
cli
repnz
lods
xor
mov
stos
jmp
movsl
mov
clc
mov
cmp
aaa
cmp
jns
shll
fidivrl
arpl
xor
rcrl
and
adc
adc
movsl
cmp
jg
cmp
adcl
ror
mov
movsb
add
xor
ret
fcmovb
fstpl
push
test
aas
dec
and
add
sub
fcmovbe
fnsave
inc
shrb
xlat
outsl
subl
je
lea
lods
dec
inc
js
and
aam
mov
repnz
cmpsl
repz
jmp
pop
push
mov
mov
xchg
sbb
xor
cli
stc
addl
push
sarb
popa
out
mov
or
xor
aam
xchg
cmp
mov
decl
xchg
inc
pop
sti
enter
in
mov
orl
push
push
into
or
movsl
jge
xchg
sbb
xor
repz
nop
push
jecxz
cmp
xchg
fldl
cmpb
loop
pop
cmp
daa
jbe
aad
mov
mov
aam
inc
mov
cli
rcrl
lds
daa
push
add
outsl
adc
aas
mov
pop
cmp
neg
sbb
xchg
jl
decb
xchg
dec
adc
in
mov
nop
stos
divl
jo
push
cmp
pusha
push
shl
test
push
push
arpl
mov
sub
dec
jb
test
jge
or
lret
push
jnp
sbbb
pop
rolb
push
inc
sub
stc
mov
fimuls
pop
lds
mov
xchg
loope
dec
daa
adc
sahf
adc
ljmp
jg
mov
sbb
and
icebp
xchg
dec
in
jmp
inc
xchg
sub
jno
test
movsl
adc
sbb
pop
bound
data16
int3
cmp
pushf
inc
lds
push
cmpl
int3
imul
shr
lret
add
scas
xor
in
ret
xchg
imul
mov
dec
sub
push
out
je
rcrl
jecxz
pop
xchg
data16
aas
test
and
dec
call
push
test
mov
sbbl
icebp
xor
inc
inc
mov
sbb
pop
fcomps
add
mov
lods
add
imul
shrl
std
sbb
out
pop
push
cmp
pop
fwait
iret
or
sbb
dec
adc
adc
pop
icebp
add
mov
fisttpl
dec
pop
xchg
daa
pop
dec
pop
dec
cli
or
jmp
je
mov
in
jb
push
pop
push
mov
inc
sbb
cld
add
cwtl
inc
jmp
xor
cmpsl
mov
xlat
mov
jle
mov
add
pop
jle
sti
cmc
ja
dec
loopne
ret
pop
pop
sub
dec
out
jmp
and
mov
cltd
shl
lods
fcomps
fdivs
mov
cmp
push
xor
fxch
dec
ret
mov
fndisi(8087
push
xchg
xchg
pushf
dec
notl
cmc
loopne
stc
or
xor
add
cs
stos
das
mov
scas
add
pop
add
dec
leave
cmp
xor
pop
test
pop
dec
xchg
add
inc
mov
push
inc
out
std
jp
pop
packsswb
lea
or
cld
xchg
mov
push
xchg
mov
or
fimull
pop
mov
add
loopne
inc
cltd
fwait
xlat
test
pop
stc
pop
cwtl
or
mov
pushf
push
or
mov
imul
mov
xor
aad
test
cwtl
shl
mov
popf
mov
imul
fidivrl
or
loop
dec
pop
sub
ret
inc
enter
jo
data16
std
sub
and
icebp
xchg
addl
mov
and
xchg
shl
movsl
or
mov
mov
or
test
mov
fnsave
mov
aas
and
jecxz,pt
xchg
idivl
mov
sub
sti
loop
orb
inc
inc
mov
shll
call
push
repnz
ljmp
out
sub
pop
cwtl
cs
jecxz
imul
jp
push
add
add
test
fstps
fnstenv
push
mov
sub
out
shll
mov
nop
out
imul
jg
inc
mov
pop
sti
inc
andl
sbb
xchg
cmp
arpl
and
pop
out
shlb
cmpsb
push
es
rorl
dec
cs
lods
and
xlat
int
sti
loopne
cs
imul
aam
repnz
std
sub
mov
adc
addr16
xor
xor
test
out
and
xchg
push
cltd
jne
mov
jl
sbb
mov
dec
mov
in
cltd
adc
mov
mov
test
push
shlb
push
outsb
push
sub
mov
lret
das
push
insl
stos
mov
iret
fsub
xor
mov
and
les
cwtl
cmp
scas
sti
aas
movsb
mov
push
add
sbb
ljmp
xchg
fnsaves
mov
nop
aas
mov
jl
insb
test
inc
into
mov
sbb
fidivrs
pop
pop
adc
cmc
pop
pop
je
mov
pushf
fnsave
cmp
dec
sbb
aas
clc
mov
inc
cmp
lahf
daa
and
pop
lds
sbb
pop
cs
dec
mov
or
mov
jg
mov
cmp
loop
jns
fistpl
pushf
mov
arpl
push
dec
cmp
fidivs
pop
dec
gs
popf
push
jl
dec
dec
dec
out
nop
div
scas
mov
fadd
fsubs
inc
negl
scas
dec
shl
pop
jb
ljmp
fs
pop
pop
scas
ja
add
or
test
jb
in
ret
xchg
ret
ljmp
pop
lahf
xchg
jl
test
sub
js
jle
cvttps2pi
sub
sbb
cmp
pop
lret
jp
imul
sub
jae
neg
test
mov
sbb
push
push
sbb
lods
mov
and
adc
fimuls
ja
and
sub
icebp
inc
clc
repz
lcall
mov
subl
or
fistpll
fnstcw
sbb
jo
push
mov
daa
inc
cli
pop
sbb
aas
xchg
push
xor
call
and
sub
add
cli
mov
cwtl
inc
and
xor
push
aad
outsl
pop
jge
mov
mov
lahf
pop
mov
andb
insb
call
dec
dec
nop
dec
jmp
clc
ud0
ret
mov
lcall
jge
mov
mov
mov
imul
sub
cmp
or
roll
fidivrl
cmp
dec
jns
mov
scas
out
aas
mov
gs
lret
push
or
or
fcomp
lahf
stos
xor
push
mov
push
push
pop
xor
icebp
push
dec
adc
nop
adc
add
test
mov
sbb
or
fimull
and
rcrb
mov
outsb
sub
fisubs
xor
inc
add
repnz
sahf
xchg
pushf
dec
xor
xor
jo
nop
in
in
add
sbb
xor
lahf
jmp
scas
cltd
inc
jb
loop
mov
cmpsb
rcll
leave
clc
aad
push
scas
add
lret
nop
ljmp
dec
fcmovne
inc
mov
dec
cmpsl
popa
fdivs
xor
outsb
jl
pop
mov
sbb
stos
sahf
xchg
xchg
out
mov
movsl
adc
insb
cmc
dec
stos
sub
addr16
sbb
jb
sti
adc
loopne
pushf
jno
fdivrs
pop
cmp
incl
imul
cld
inc
negl
inc
jmp
lock
inc
dec
or
adc
add
add
pop
push
je
daa
sbb
rcr
adc
fistpl
cltd
in
xchg
aam
inc
sbb
fisttpl
repz
in
sub
sar
js
and
xor
out
test
pop
lods
mov
push
pusha
cmp
cmp
cmp
cmp
dec
jge
add
out
mov
clc
mov
lods
xor
or
test
dec
imul
pop
pushf
xor
insl
dec
push
mov
movsb
and
hlt
or
jo
clc
cli
jmp
stos
xor
les
sti
das
ja
sbb
mov
xor
clc
fxtract
imulb
add
loope
js
sahf
pusha
imul
inc
stos
push
pusha
mov
call
sbb
js
inc
shlb
pop
adc
push
std
pop
mov
fcoms
in
sub
mov
xchg
xchg
adc
popf
lahf
jno
add
aad
mov
shll
insb
push
repnz
repnz
xor
xchg
cmp
sahf
and
mov
pop
xor
sbbl
pop
lea
aam
push
or
adc
jae
in
jmp
mov
js
nop
in
inc
mov
adc
push
das
jae,pn
add
mov
or
xchg
shr
or
mov
sbb
inc
sub
jne
and
out
out
inc
not
mov
inc
mov
inc
dec
pop
inc
mov
mov
or
cmp
addr16
adc
daa
in
loope
jge
push
mov
jnp
dec
push
movsb
fdivl
sbb
pop
cwtl
cmp
outsl
adc
aaa
pusha
sub
sbb
dec
pop
lods
push
lods
rolb
ret
sbb
jae
mov
adc
and
adc
pop
js
mov
sub
cmpsl
xchg
jle
inc
push
std
pop
jnp
lock
in
idiv
jns
cmp
jne
mov
sbb
xchg
daa
fsubrs
insb
mov
mov
repz
es
gs
lds
scas
aam
call
fiaddl
pop
stc
arpl
cltd
mov
adc
adc
dec
push
xchg
dec
jle
imul
addb
arpl
outsl
mov
out
mov
adcb
sbb
add
scas
loope
scas
add
mov
mov
out
loopne
jns
movsl
dec
out
push
std
sahf
rclb
jg
push
or
push
in
mov
ljmp
pop
pop
scas
xchg
push
enter
cmpsb
mov
sbb
fildl
jnp
pop
inc
dec
lret
mov
push
jl
pop
jbe
inc
xchg
clc
jge
pop
mov
xchg
mov
jmp
fists
push
push
or
arpl
adc
push
push
stos
imul
adc
arpl
xchg
aam
sbb
lret
add
ja
dec
inc
jle
mov
cmp
lahf
in
mov
loop
js
pop
fwait
ret
dec
bound
sbb
sbb
dec
dec
scas
fstpl
aas
stos
neg
call
rcll
stc
dec
sbb
add
lods
std
mov
cmpsb
add
inc
mov
xchg
scas
js
sbb
repnz
out
xchg
jl
inc
xor
mov
mov
sbb
ret
jmp
mov
out
xchg
shll
pop
ret
lock
aad
or
scas
loope
les
pop
daa
es
enter
add
out
mov
adc
cmp
in
stos
dec
jecxz
lods
cmp
adc
lahf
xchg
adc
jnp
insl
insb
lds
sahf
push
int
shlb
adc
loopne
mov
mov
and
scas
out
in
add
outsb
popf
sbb
ret
dec
out
add
or
jo
in
ds
or
in
lea
shlb
adc
rcll
or
mov
test
inc
cld
adc
cmp
adc
adc
jb
shrb
push
enter
rcr
std
roll
ljmp
dec
mov
fucomip
arpl
jne
clc
pop
mov
jle
adc
jo
xor
aam
mov
cmp
pop
jns
jno
mov
pusha
stos
or
nop
pop
bnd
mov
flds
jae
adc
or
jo
push
add
xchg
dec
inc
cmp
jnp
inc
stc
out
cltd
and
int
add
pop
imul
and
push
mov
mov
sub
imul
fadd
stc
pop
xor
jecxz
sub
fsubl
cmp
loop
nop
sub
pop
popa
pop
dec
dec
sbb
in
cmc
cltd
inc
and
adc
les
mov
push
popa
test
mov
xchg
sbb
mov
adc
das
mov
dec
loope
pushf
adc
push
add
repnz
call
sbb
cwtl
xor
push
jmp
shl
cld
nop
sub
sbb
mov
adc
repz
bound
sub
sbb
xlat
cmp
shlb
xchg
inc
subb
jnp
cmpsb
pcmpgtb
mov
sbb
popf
outsb
decb
inc
or
sub
ja
or
mov
adc
sbb
jne
inc
lods
ja
aad
xchg
xchg
push
and
lret
jecxz
lock
xchg
cmp
dec
sbb
xor
iret
lock
out
or
cwtl
dec
iret
out
mov
repz
jns
int
xchg
dec
mov
xchg
fimuls
mov
mov
or
shlw
movsb
daa
pushf
fnstenv
std
xchg
sbb
add
add
stc
xchg
xlat
jnp
or
push
jbe
xor
mulb
movsl
jns
mov
ficoms
and
fisttps
popf
rclb
pushf
dec
push
xorl
lret
dec
mov
pushf
rolb
xchg
test
adcl
cmp
arpl
out
fadd
push
add
sbb
jns
pop
xchg
xchg
dec
cmc
xchg
loope
nop
xor
jp
repz
imulb
enter
cmp
inc
adc
mov
push
mov
sti
jmp
xor
mov
xchg
xlat
mov
pop
sub
shrb
fwait
xor
sbb
addr16
xchg
push
mov
sti
leave
scas
js
ret
xor
scas
mov
ret
pop
jno
stc
xor
loope
fcoml
dec
xchg
shlb
fs
and
test
adc
or
cmp
rorl
inc
or
pop
or
push
inc
dec
xchg
pop
ds
out
sbb
lcall
add
xchg
inc
xor
repz
rorl
popf
add
push
mov
out
popl
adc
sahf
inc
insl
imul
jno
out
cmpsb
lods
in
negl
movsl
or
movsl
ja
fdiv
gs
mov
imul
nop
xchg
arpl
push
ljmp
and
add
xchg
into
or
pop
inc
aam
push
jecxz
inc
movl
sub
add
inc
xchg
movsb
push
dec
cld
test
int
xchg
mov
jne
adc
adc
aad
cmp
daa
or
sbb
adc
in
lods
cmc
ja
test
int3
xor
pop
adc
inc
arpl
cmpsl
sti
mov
cmpsl
mov
jnp
xchg
aas
dec
testb
fistpll
outsl
outsl
insb
test
pop
in
icebp
cli
imul
das
sbb
push
les
or
adc
cmpsl
pop
sbb
push
iret
pop
ljmp
xor
hlt
inc
ss
pusha
insl
movsl
mov
xor
jnp
clc
lock
repz
scas
out
out
lods
xchg
fwait
mov
xchg
mov
fistpll
pushf
xchg
adc
cmp
std
loopne
dec
sub
xor
mov
mov
nop
loopne
add
fdivr
and
adc
push
push
mov
dec
inc
negl
fiaddl
pop
xor
lds
mov
mov
xor
fistl
dec
stos
adc
imul
sbb
fadds
pop
dec
cld
dec
sub
and
xchg
repz
mov
adc
push
pcmpeqd
mov
sub
mov
xchg
nop
test
stos
mov
je
xor
xchg
inc
push
popa
movsl
xchg
xchg
fcomps
sbbb
inc
out
movsl
and
xchg
xor
dec
imul
xor
cmpl
aad
jg
lahf
test
aas
mov
or
outsb
jg
mov
xchg
stos
inc
lcall
pop
mov
notl
jl
nop
sbb
push
or
add
xor
mulb
out
stos
jno
es
ds
push
xor
aam
outsl
xor
mov
inc
fs
test
iret
rolb
pop
adcb
test
mov
and
hlt
xchg
adc
aam
cmp
adc
and
lcall
hlt
or
sub
std
imul
stos
outsl
inc
cmp
movsb
cmp
stos
dec
fistpl
jnp
xor
jo
rorl
stos
ficoms
jp
mov
pop
cwtl
or
aam
fnstcw
add
sub
dec
mov
js
adc
inc
sub
mov
cmpsb
pop
sbb
lods
mov
adc
xchg
add
or
pop
jno
mov
leave
mov
cmp
inc
xchg
ljmp
xor
popf
xor
les
repz
sub
add
and
out
test
push
pop
es
in
repz
out
cwtl
cmp
aas
jmp
mov
cmpsb
add
inc
incl
xchg
pop
push
xchg
loopne
lret
sub
jo
fidivrl
int
repz
cmp
sub
adc
or
flds
fisttpll
mov
in
and
adc
adc
and
xchg
xor
cltd
movsl
sbb
rclb
mov
sbb
mov
aaa
mov
lret
mov
mov
idivl
repnz
cmp
mov
incb
cmc
hlt
insl
leave
rcrl
pop
dec
pop
std
jle
icebp
mov
lea
aas
pop
ja
sub
push
sysexit
les
push
xor
inc
jo
test
popf
xchg
xchg
repnz
mov
pop
test
cmp
jg
xchg
inc
xor
adc
test
rorl
mov
fisttps
incl
shrl
les
dec
aas
lret
dec
cltd
push
pushf
mov
fisttps
xchg
push
dec
lahf
ljmp
jmp
push
and
or
sbb
push
call
xor
in
mov
out
fadds
jecxz
pop
adc
sahf
fs
faddl
outsb
int3
mov
sar
pop
jl
mov
dec
add
in
xorb
lahf
mov
adc
adc
push
popf
lret
mov
jmp
xchg
jne
imul
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
sub
mov
push
movl
push
movl
push
movl
movb
cmp
je
xor
movl
jmp
mov
movl
cmp
jne
mov
push
adcl
push
call
sbbl
test
movl
je
push
andl
push
call
andl
push
subl
lea
adcl
push
xorl
call
add
movl
or
mov
adc
mov
movl
dec
lea
andl
xor
add
inc
mov
cmpl
jle
jmp
push
pushl
push
call
cmpl
jb
mov
adc
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
or
or
mov
mov
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
mov
sub
xor
addl
mov
orl
add
movl
mov
not
mov
cmp
jne
neg
mov
mov
xorl
mov
xor
addl
add
addl
mov
mov
xor
add
mov
mov
subl
xor
add
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
call
jmp
mov
mov
mov
sbbl
mov
movzwl
sub
mov
mov
mov
mov
addl
mov
subl
mov
movl
mov
add
mov
xor
add
jmp
mov
cmp
jne
mov
cmp
movl
jne
push
xorl
push
call
orl
test
movl
je
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
adcl
push
incl
push
call
test
movl
je
sub
mov
sbbl
mov
addl
xor
adcl
lea
push
mov
andl
xor
xorl
lea
push
xor
mov
pushl
xorl
call
xor
xor
mov
sub
sub
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
call
jmp
mov
add
xor
xor
lea
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
xor
xor
add
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
adcl
xor
movl
lea
movl
mov
movl
cmp
movl
jbe
and
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
sbb
mov
mov
mov
mov
decl
sub
xor
movl
mov
lea
movl
mov
lea
movl
mov
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
push
sbbl
push
sbbl
call
orl
test
je
movl
mov
cmp
movl
jne
movl
mov
cmp
jne
addl
push
push
call
test
movl
je
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
addl
push
call
test
movl
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
xorl
push
push
call
orl
test
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
xorl
push
push
addl
call
andl
test
je
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
push
push
call
subl
test
je
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
addl
push
sbbl
push
addl
call
test
je
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
sbbl
push
orl
push
adcl
call
adcl
test
movl
je
movl
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
subl
push
push
movl
call
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
adcl
push
adcl
push
call
subl
test
movl
je
movl
mov
movl
cmp
jne
movl
mov
movl
cmp
movl
jne
push
push
sbbl
call
subl
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jge
jmp
push
call
mov
dec
mov
jmp
mov
mov
or
movl
sbb
mov
sbb
push
mov
incl
xor
sub
mov
adcl
push
mov
xorl
add
movl
cmp
je
andl
xor
add
inc
mov
cmpl
ja
jmp
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xor
xor
or
mov
andl
xor
addl
xor
adcl
add
add
adc
andl
xor
xorl
mov
push
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
add
adc
xor
xor
cmp
jmp
pop
popf
cwtl
jo
jp
mov
cmp
jp
andl
jnp
xchg
fimull
mov
push
or
loopne
popa
sub
out
out
out
subb
mov
cwtl
xchg
insl
das
cs
stc
or
push
lds
movsb
dec
add
sub
add
mov
addl
lahf
lea
push
inc
outsb
push
push
adc
lret
mov
loopne
sbb
mov
push
pop
in
idivl
nop
push
dec
or
sbbb
and
roll
sub
std
dec
cmp
cmpsb
push
jmp
pushf
fsubrs
outsb
pusha
add
mov
shll
out
pop
xchg
inc
ret
mov
test
es
dec
mov
mov
mov
xchg
pop
cmp
ss
loope
loop
lock
pop
xchg
fists
xor
decb
cmpsb
cmp
jp
test
and
or
mov
out
xchg
jge
mov
jb
cmpl
dec
mov
lret
or
bound
ljmp
or
fists
nop
outsb
int3
icebp
jge
dec
cli
into
jge
add
cmp
daa
push
jae
push
bound
lret
nop
pop
in
stc
ficoms
test
mov
push
test
std
mov
sbb
cmpsb
xor
stc
add
aad
out
aas
mov
fildl
mov
ror
ficompl
cmp
dec
hlt
and
push
imul
jnp
xchg
jno
xor
out
test
aaa
icebp
jae
sti
shrb
mov
and
dec
and
in
sub
mov
int3
mov
adc
mov
addr16
sbb
pop
xlat
mov
fists
in
and
enter
mov
mov
aas
inc
icebp
mov
hlt
pop
fwait
cmc
lock
sti
cmpsb
es
movsb
xlat
outsb
lret
pop
xchg
in
jecxz
aas
adc
adc
lods
xchg
jl
rorb
pop
jecxz
cmc
fbld
into
fsubrl
jnp
lcall
jnp
inc
mov
adc
ja
jge,pn
pushf
dec
rorb
jmp
in
cs
jmp
lcall
adc
xor
pop
aam
ljmp
jo
loopne
shll
jne
out
jne
leave
jp
and
sub
xor
fnstsw
into
or
test
adc
loop
inc
pop
pop
fwait
adc
dec
test
shr
sbb
lods
iret
int3
mov
inc
pop
neg
mov
jmp
dec
inc
leave
lock
in
sbb
pusha
lea
cmpsb
xchg
pop
push
nop
test
jo
sbb
xchg
stos
ficomps
pop
data16
pop
loop
sbb
and
jecxz
pusha
fldt
pop
test
push
xchg
loope
cmpsb
shrl
xor
repnz
into
xchg
rcrl
mov
jne
or
movsl
xor
fimuls
add
and
mov
sbb
push
dec
mov
inc
sbb
mov
cmp
mov
inc
js
cmp
and
xor
jecxz
in
aaa
dec
mov
push
lock
fdiv
pop
fstps
lcall
push
jae
jne
adc
or
dec
mov
mov
loope
movsl
inc
scas
mov
int
lds
test
daa
sub
mov
clc
orb
sub
or
inc
insl
push
lock
push
push
in
adc
nop
fdivrl
mov
xor
adc
addl
cli
test
cmp
in
jo
jns
xchg
outsl
pop
pop
je
and
sbb
mov
mov
stc
in
mov
out
arpl
mov
out
push
stc
dec
xor
notb
mov
cmpsl
sub
cmp
push
mov
mov
aas
rcrb
popa
rcrl
pop
cmp
xor
sti
jp
out
in
inc
adc
sti
imul
or
cli
and
cmpsl
mov
out
xlat
push
popf
test
xchg
jp
popl
and
add
mov
push
dec
jb
rcll
out
repz
sti
stos
mov
std
add
pop
in
frstor
pop
idivb
mov
add
outsb
stos
popf
lcall
mov
pop
addr16
mov
test
sbb
adc
data16
sar
in
cs
imulb
jae
push
inc
jo
adc
xor
jbe
xor
popa
lret
mov
cwtl
cmp
cltd
dec
cmp
rcl
dec
scas
sub
pop
adc
dec
fisttps
testl
fwait
mul
in
aaa
pop
scas
lods
loop,pt
subb
and
outsl
sbb
sbb
test
mov
push
jmp
into
aam
push
cs
addl
call
or
fdivrl
fists
add
stc
loope
test
sbb
mov
mov
sub
cli
std
add
popa
mov
cmc
enter
aad
or
mov
xchg
lahf
in
shlb
add
daa
lret
cld
or
in
ds
popf
pushf
cmp
clc
dec
add
pop
fistl
push
xchg
sbb
cmpsl
stc
mov
aad
loope
jmp
dec
cmpsb
and
enter
cmp
sub
inc
pmuludq
sub
imul
in
adc
pop
xlat
lret
or
push
mov
xorl
sbb
dec
rorl
fldt
xchg
jnp
xlat
jae
mov
nop
push
sbb
adc
int3
insl
stos
add
fwait
jmp
push
push
nop
mov
and
mov
rclb
cltd
push
iret
and
push
mov
sbb
bound
imul
outsl
sbb
daa
je
dec
bound
or
mov
fadds
mov
jno
jle
aaa
scas
sbb
stos
mov
push
insl
xabort
cmp
aaa
sub
leave
nop
sub
cmp
sbb
rorb
push
out
lcall
pushf
pop
cmc
adc
aad
cmpsl
mov
fistpl
adc
dec
jbe
lahf
leave
xchg
sahf
aaa
inc
stc
push
xchg
push
dec
inc
lea
inc
inc
repnz
dec
mov
dec
xchg
ja
cmc
pop
jo
nop
or
inc
sub
inc
and
xchg
jp
mov
mov
fnsave
xor
ds
in
nop
jbe
xor
pop
lret
pop
test
jl
dec
jno,pn
mov
aam
sbb
push
out
shrl
push
mov
and
fmull
jecxz
stos
int3
sahf
cmp
cmp
lret
rorb
test
ret
adc
insb
ljmp
dec
dec
mov
jnp
movsl
popf
imul
inc
or
clc
ja
cmp
push
mov
pop
add
push
and
orl
clc
mov
dec
or
roll
pop
sbb
mov
sub
push
xor
insl
xor
mov
loop
mov
adc
jecxz
int
lods
js
push
push
repnz
dec
and
in
daa
sbb
aam
adc
or
and
mov
or
inc
pushf
push
repz
repz
sbb
out
cmp
enter
dec
fwait
push
insl
dec
aaa
aam
pop
mulb
fbld
xorl
cmpsl
ror
aam
les
lds
adc
dec
lods
add
fcoml
lcall
adc
scas
pop
mov
movsb
in
mov
mov
dec
push
jne
jbe
cs
loope
mov
cld
jb
add
adc
or
xchg
fisubrl
mov
fwait
lods
scas
into
gs
and
or
repz
and
lret
pop
idivl
repz
lret
sub
push
mov
adc
pop
xlat
add
adc
mov
dec
xchg
jle
adc
daa
mov
shr
and
negb
pop
mov
push
mov
insl
xor
test
push
daa
sub
lds
roll
addl
lods
or
int
lret
push
mov
jbe
fisttpll
xlat
loopne
jle
rclb
call
adc
mov
int3
ficomps
or
jno
int
or
jecxz
repnz
pop
jb
les
add
int
pushf
rclb
jmp
sbb
out
sahf
mov
and
jg
jl
pop
adc
sbb
push
mov
cmpsl
and
jne
mov
dec
sbb
int3
xor
iret
shll
cltd
into
sub
and
xor
mov
fwait
lcall
lret
sti
shrb
cltd
es
mov
mov
mov
dec
mov
daa
xor
mov
mov
jns
lahf
movsl
mov
popf
xchg
pop
add
in
movsl
xor
xchg
enter
loopne
pop
data16
push
js
and
pop
dec
movsb
adc
sbb
ds
mov
daa
inc
bound
ret
xlat
fcompl
adc
out
addr16
cmp
xor
rcrl
xchg
cmp
jnp
sti
loop
xor
jecxz
dec
mov
or
cltd
cmpsb
sbb
xabort
adc
cmp
lock
cld
lds
lock
mov
fcoms
mov
dec
subb
popa
inc
mov
mov
mov
movsb
popf
mov
es
mov
dec
xchg
sbb
push
stos
clc
xchg
out
xchg
xor
repnz
xor
push
inc
out
cmp
pop
daa
pop
push
jp
cmp
fs
xchg
jmp
cmc
jle
pusha
lods
or
cmpsb
cmc
or
push
xchg
mov
push
loopne
sbb
xor
out
push
sbb
in
ror
jle
inc
adc
mov
leave
adc
imul
les
inc
push
mov
add
sub
popa
mov
std
add
ret
frstor
stos
jno
and
push
xchg
test
xor
xlat
sub
inc
sub
cmpsl
repnz
outsb
iret
xchg
xor
or
je
adcl
leave
push
dec
xor
stos
cmpsb
out
mov
stc
sub
and
sub
push
push
mov
outsl
movsl
jnp
enter
stc
push
mov
mov
add
popf
lock
ja
jbe
and
aas
rcl
not
jmp
das
test
addr16
mov
adc
mov
sti
cs
push
or
ret
jl
repnz
adc
sbb
gs
ljmp
ss
sbb
loope
push
add
cli
mov
mov
or
mov
out
repnz
sub
mov
into
pusha
mov
movsb
push
mov
and
push
dec
sub
lahf
lods
add
pop
test
lcall
and
ja
movsb
lret
stos
out
sub
mov
jae
outsl
jb
mov
aas
scas
and
sbb
fdivs
and
pop
push
sub
sbb
sbb
in
and
in
aas
xchg
or
pop
fsts
xor
dec
pop
xchg
mov
fsubrl
out
dec
in
js
inc
fs
in
aam
scas
push
xchg
add
adcl
xchg
fistl
mov
scas
jle
xchg
pop
xor
lods
notb
fcomip
pop
shll
scas
ret
dec
movsb
inc
lock
mov
jge
imul
stos
push
leave
sahf
push
and
aad
movsl
int3
aaa
mov
imulb
adc
cmp
addb
push
ret
jo
dec
jge
shl
mov
xchg
pop
popa
and
and
adc
mov
insl
add
aaa
pop
lcall
adc
fs
xchg
stos
mov
sub
adc
sub
pop
lret
add
cmp
fldenv
and
mov
jo
in
sbb
add
subl
dec
pop
mov
add
adc
addl
roll
sarl
in
pop
pusha
pushf
pop
mov
sbb
push
loop
xchg
jp
and
jp
rol
shrb
adc
les
push
xlat
mov
pop
inc
cmp
cmp
imul
int
mov
mov
fwait
sbb
dec
loopne
jnp
popa
mov
mov
cltd
push
mov
mov
mov
adc
lahf
scas
mov
xchg
sub
lret
fdivrp
std
shll
mov
pop
shrl
pop
es
lcall
cmc
jns
xchg
loop
fdivr
or
in
data16
pop
std
movsl
bnd
cmp
aas
push
sbb
jge
sbb
ret
shlb
pop
jnp
inc
mov
sbb
je
jno
inc
sti
inc
inc
mov
adc
xchg
mov
xchg
ror
add
out
or
cmp
mov
sub
and
stos
sub
insl
scas
or
cmp
adc
xor
loope
fsubl
xchg
subl
addb
push
pop
loop
sahf
jae
inc
jle
fidivl
sub
add
mov
not
mov
or
cmp
xor
test
push
cld
mov
sub
ret
ss
adc
dec
scas
adc
cwtl
test
jns
cld
cltd
iret
fwait
push
add
sti
mov
repz
xchg
or
out
cmpl
out
ja
push
adc
sub
in
cmp
aaa
enter
push
xor
xchg
mov
repz
pop
mov
push
cwtl
cli
dec
add
repnz
test
xchg
rclb
into
and
imul
dec
sti
inc
mov
icebp
xor
loopne
cltd
xchg
pop
ss
popf
push
hlt
add
or
flds
mov
stos
xor
popf
pop
faddl
pop
in
dec
or
cmp
jne
mov
dec
outsb
shll
pop
inc
xchg
pop
lcall
ret
mov
sub
cld
lods
outsb
mov
dec
jae
testb
xchg
std
or
idiv
jns
cmp
fisubl
dec
mov
arpl
cmp
sub
xlat
cmp
sbb
dec
mov
mov
and
pop
adc
inc
add
push
sbb
sub
dec
leave
mov
test
bound
add
mov
jge
xchg
pop
shlb
arpl
cmp
out
rorb
sbb
addr16
pop
popf
movsb
or
jno
gs
push
leave
clc
fs
repz
mov
enter
sub
into
jle
std
ud2
sub
cs
mov
cmp
jo
fistpl
jo
cmp
sbb
mov
fiaddl
jne
dec
sbb
xor
sub
cli
mov
cmpb
mov
ret
dec
pop
ja
or
loopne
pop
mov
jg
div
or
xchg
mov
jle
lahf
push
dec
movb
cwtl
fdivrp
inc
into
cltd
pop
mov
mov
jg
repz
bound
cltd
ror
movb
mov
mov
inc
mov
cmp
aaa
cmpb
and
out
testb
dec
xor
jge
sbb
es
jg
pop
int3
mov
mov
add
xchg
inc
pop
mov
adc
roll
bound
faddp
dec
in
pop
dec
outsb
mov
pop
movsl
sbb
insb
scas
inc
xor
test
xor
test
xor
lret
jbe
aad
test
xchg
push
inc
je
jbe
adc
pop
mov
add
les
daa
inc
dec
and
cmp
repz
mov
pop
cmp
jge
sti
sahf
dec
cmp
ret
ds
pop
push
fidivrs
gs
movsb
fbld
adc
pop
cmc
cwtl
push
mov
mov
jno
mov
repz
fs
outsl
mov
inc
push
stos
lahf
es
rorl
pop
jle
mov
pop
sbb
pop
jle
xchg
mov
and
sub
lret
sub
out
xor
xor
dec
repz
mov
mov
out
sub
push
fsubr
inc
outsb
clc
cmp
sbb
push
xchg
pop
in
lods
aad
and
push
sub
fistl
fcompl
in
pop
dec
fwait
test
mov
in
dec
movsb
dec
push
lret
cwtl
ds
jmp
xchg
sbb
add
cltd
movsl
movsb
lods
in
adc
in
or
clc
hlt
sbb
mov
inc
dec
lods
cmp
lea
sub
jae
and
es
movsb
mov
pushf
and
dec
loopne
lret
lret
rcrb
pop
adc
out
mov
dec
sahf
clc
inc
dec
sbb
add
rcrl
imul
jecxz
push
inc
imul
jb
or
popf
sub
inc
sbb
out
jmp
adc
das
out
mov
push
mov
fs
or
push
insl
les
mov
pop
adc
outsb
mov
sahf
mov
push
xchg
adc
cltd
movsb
dec
cld
out
imulb
pop
push
scas
pop
or
insb
or
pop
push
mov
test
lahf
test
sub
mov
xchg
rcl
pop
push
ficoms
sti
jb
cmp
movhps
jno
enter
into
int
xorw
jle
mov
xchg
rcrl
or
les
mov
cmp
imul
adc
andl
stc
ficoml
pop
xchg
test
lea
sti
jl
and
fistl
jbe
add
inc
and
lods
xchg
rcrl
push
adc
inc
je
in
fstpt
inc
jg
movsb
dec
or
push
xchg
sbb
ljmp
fimuls
imul
xlat
movsb
adc
insb
mov
adc
push
aad
js
ret
pop
nop
xor
pop
cwtl
daa
mov
push
mov
xor
lea
or
adc
pop
imul
notl
dec
dec
fwait
xchg
ja
lret
sbb
jb
call
arpl
add
cmp
sbb
iret
jmp
add
shll
ljmp
cmp
lods
xchg
push
xor
es
add
pop
push
jmp
sub
mov
ret
cmp
mov
dec
mov
movsl
mov
pop
es
mov
xor
jmp
push
jnp
mov
popf
fidivl
lods
call
adc
test
loop
arpl
popa
dec
repz
pop
mov
or
rorl
push
out
cli
cmp
inc
push
mov
sub
mov
out
push
repz
fs
xor
and
push
jge
mov
ja
jnp
lods
mov
inc
mov
jg
shrd
adc
add
subb
and
add
mov
in
jnp
mov
mov
push
cmpb
jbe
push
jo
xchg
xchg
movsl
imul
int3
inc
push
mov
insl
inc
or
or
push
sbb
outsl
push
mov
aad
test
insl
jae
adc
pop
xchg
test
outsl
mov
int
xchg
mov
ret
ret
mov
mov
aas
mov
mov
push
jae
and
sbb
xchg
jbe
daa
dec
fsubs
xchg
mov
push
add
xchg
mulb
push
js
jle
mov
pushf
int
ret
add
jb
fildl
insl
and
std
mov
insb
in
push
psubb
cmp
jg
adc
ficomps
fs
leave
xor
mov
push
shrb
jns
xor
inc
cmp
sbb
lods
mov
pop
sub
shll
dec
jnp
inc
jp
jle
movsl
sbb
lahf
add
das
dec
scas
mov
ss
adc
imul
mov
pop
sub
lahf
add
cmpsb
and
sar
xchg
popa
test
xchg
inc
mov
dec
xchg
mov
xchg
jle
pop
loop
mov
dec
arpl
add
push
inc
jg
inc
mov
out
cmp
ret
push
les
push
pop
fbstp
andl
pop
fildl
test
dec
into
es
push
and
mov
mov
mov
stos
sbb
out
lret
or
sub
shll
ja
push
jg
push
int
iret
cmpsl
cwtl
lahf
sar
ficompl
ret
adc
push
out
insb
pop
and
lret
je
add
ret
push
jns
cwtl
stos
cmp
movsl
js
lret
push
test
test
cwtl
push
sbb
mov
arpl
ja
or
ret
mov
push
mov
icebp
bound
mov
pop
dec
pop
jnp
or
imul
dec
add
jle
mov
pop
dec
ljmp
jg
pushf
stos
fldl
mov
push
ss
dec
cmp
jmp
adc
cmpl
nop
imul
ror
in
sbb
sub
xor
lret
xchg
xor
test
pop
lds
xlat
nop
andl
insb
fcmovne
jae
cs
lods
fcompl
pop
mov
push
rcll
push
dec
mov
add
mov
fwait
in
test
sar
or
iret
lods
dec
jae
outsb
xor
ret
inc
das
loope
mov
stos
test
sub
add
sub
call
xchg
outsl
pop
xchg
lea
js
inc
lods
xchg
sbb
sahf
cmp
cmpsb
sbb
pop
jbe
sub
adc
push
popf
test
gs
sahf
jl
dec
arpl
mov
in
inc
inc
dec
stc
shll
ss
je
push
sub
shll
xchg
adc
lea
leave
push
inc
sbb
jns
pop
mov
lods
fmuls
mov
xor
fwait
imul
fimull
mov
enter
out
jne
sbb
adc
and
in
mov
cmpsl
les
pop
sub
lcall
pop
inc
outsb
add
and
dec
sub
inc
cld
std
es
shlb
inc
push
clc
cmp
cmp
adc
push
out
cmpl
mov
imul
dec
cwtl
and
inc
lcall
xchg
out
sbb
mov
xor
jecxz
add
sbb
lahf
adc
sahf
enter
cltd
shlb
xchg
adc
mov
pop
das
loope
mov
push
pop
enter
hlt
jecxz
addr16
push
mov
sub
inc
jbe
pop
scas
mov
sbb
adc
sbb
pop
xchg
mov
andb
mov
pushf
jge
jae
imul
xchg
and
adc
test
in
sbb
scas
repz
adc
jp
sbb
jbe
jecxz
scas
test
dec
int3
subl
and
adc
adc
and
bound
out
mov
imul
xor
inc
fidivl
and
es
daa
fiaddl
cmc
jl
jle
stos
cmp
loop
inc
iret
mov
int
lahf
or
xchg
popa
and
insl
add
aas
mov
jle
push
jp
stos
into
xchg
pop
pop
or
xor
mov
aaa
lods
les
fmuls
lahf
mov
cmp
sub
xlat
ja
mov
sbb
mov
scas
imul
fisttpl
popa
mov
sbb
mov
push
sbb
sahf
fstl
push
bswap
fwait
push
test
aaa
pop
bound
pop
inc
pop
push
push
fcoms
nop
xorb
cmp
lret
repz
shrl
dec
in
xchg
jp
mov
jecxz
mov
jbe
push
loopne
fldt
in
jp
pop
shl
or
push
push
lret
ficompl
test
push
pop
das
pop
or
jae
mov
popa
inc
cwtl
cmp
jnp
test
or
pop
pop
and
jno
jno
mov
dec
dec
pop
jg
mov
ret
jecxz
and
call
xor
cli
pop
dec
mov
std
popa
cmpsl
call
addr16
in
cmp
pop
repz
shll
adc
andl
xor
in
mov
mov
cld
stos
adc
cmp
js
loope
cmp
and
fcomps
jo
imul
xchg
inc
or
cmp
hlt
cmc
repnz
dec
push
test
sbb
push
lret
pop
jle
fwait
lods
cmp
repnz
in
std
int3
in
lea
xchg
cmp
push
repz
orl
pop
xchg
sarl
imul
mov
xchg
faddl
inc
xlat
push
mov
cmp
jbe
xchg
in
pop
shll
fsubl
xlat
jnp
lret
lods
push
popf
scas
or
add
xchg
iret
ja
loope
xchg
es
popf
ret
mov
nop
pop
dec
mov
stos
iret
jp
adc
push
out
mov
cld
gs
lods
fmull
rorl
jo
out
lahf
stos
cmp
mov
jne
in
fsubr
add
orl
sbb
xchg
lods
testb
jp
mov
repz
sub
data16
lahf
push
fcomp
fdivl
in
sbb
mov
jmp
adc
loop
jl
iret
aam
je
mov
mov
mov
xor
add
divl
iret
mov
incb
shlb
rcl
pushf
lods
arpl
movsb
jle
loop
xor
dec
hlt
clc
leave
mov
xchg
shr
mov
adc
leave
lcall
cmpsl
add
das
xchg
int
jb
cmp
fwait
outsl
inc
xchg
jmp
sbb
sbb
icebp
jbe
clc
negb
in
fwait
jb
nop
lods
add
pop
out
push
repz
mov
pop
fwait
fwait
stos
rcrl
dec
xchg
mov
and
mov
pop
jbe
push
lcall
notl
outsb
stos
mov
sub
cmpsb
push
push
cltd
popa
call
in
xchg
popf
or
jp
int
repnz
mov
xchg
sbb
loop
xor
fs
loop
in
pusha
imul
pop
jp
pop
in
pop
jge
hlt
jno
inc
loope
data16
into
mov
fildl
inc
je
lret
adc
ret
sarb
mov
scas
xor
pop
cmp
adc
push
daa
cmpsb
xchg
je
stos
fnstenv
mov
xchg
imul
decb
enter
and
gs
outsl
test
xchg
jg
filds
mov
in
shlb
imul
push
or
sbb
sub
mov
or
jo
or
aaa
sbb
icebp
in
std
mov
out
cmc
cmp
cmp
jb
test
pop
xchg
dec
cmc
test
addr16
test
sbb
repnz
cmp
jnp
cs
push
cwtl
mov
jp
ss
adc
jp
adc
mov
testl
pop
test
inc
jnp
int3
test
sub
pop
sti
sahf
movsl
cld
fcmovne
hlt
int
das
in
mov
dec
stc
adc
xor
push
ljmp
dec
out
cmpsl
push
ret
adc
repnz
es
scas
xchg
and
mov
adcl
lcall
mov
xchg
outsb
and
dec
popw
xor
test
loop
ja
add
popa
je
ret
mul
cmpsl
lods
bound
mov
jne
jae
fld1
stc
lods
aaa
mov
xchg
scas
fnstcw
faddp
xor
sub
adc
out
inc
aad
xchg
mov
jge
dec
iret
xor
rcr
mov
cmc
shr
xchg
sti
daa
and
inc
xchg
ja
inc
inc
xlat
push
inc
mov
movsl
jo
mov
mov
inc
mov
test
add
clc
mov
xor
mov
add
cmp
xlat
add
mov
mov
xchg
jmp
mov
enter
sarb
xor
cmp
nop
and
mov
mov
mov
fistl
leave
sbb
sbb
push
js
outsb
xor
dec
lods
mov
mov
clc
fyl2x
in
es
scas
js
push
pop
cmp
mov
imul
mov
leave
mov
push
dec
pop
pop
gs
jg
dec
mov
outsb
jo
pop
mov
out
push
jge
icebp
faddl
sahf
sbb
cmp
cli
xchg
lods
adc
mov
into
leave
cmpsl
push
int
jmp
fs
sbb
outsl
adc
std
adc
jl
lcall
rol
adc
xchg
jb
push
popl
fimull
mov
mov
dec
bound
mov
sbb
daa
in
dec
sub
xchg
sahf
xchg
or
std
stos
inc
and
cltd
scas
ss
in
aam
aam
decl
xchg
sub
add
and
xor
sub
ja
insb
mov
cmp
das
loope
sub
lahf
aas
push
xchg
andl
lret
outsl
icebp
xchg
addr16
fsubrs
leave
icebp
insb
lods
cltd
and
cmp
mov
mov
sub
scas
mov
mov
cmc
jp
dec
cwtl
ret
addr16
dec
sahf
std
mov
int
push
in
and
scas
mov
dec
xor
jmp
sbb
stc
fdivl
dec
std
pop
cmp
mov
mov
lods
je
lahf
loopne
jns
fnstsw
frstor
sbb
inc
mov
int3
inc
push
call
stc
mov
or
in
inc
jecxz
mov
nop
inc
roll
dec
mov
push
clc
and
lret
mov
or
data16
loopne
mov
stos
push
sahf
sub
pop
push
jae
sbb
push
cmc
jne
sarl
aaa
jmp
xchg
aad
leave
jge
popa
jae
pop
scas
sar
rcll
xorb
cmp
sub
sub
hlt
mov
pop
inc
cmpsb
inc
lds
stos
test
cwtl
shll
sub
sub
push
xor
addr16
sub
mov
cmc
pop
mov
in
jle
pop
and
clc
dec
fs
mov
insl
cmp
push
cmc
xchg
add
adc
data16
cwtl
fsubr
mov
cmp
pop
addr16
sbb
jmp
fdivrs
adc
dec
push
mov
mov
push
mov
cmp
pop
xor
inc
mov
mov
push
in
add
mov
imul
or
dec
sub
fldcw
mov
mov
call
cmpsb
scas
mov
adc
aas
mov
mov
sti
andl
cmc
push
sarb
mov
pop
or
jo
xor
fisubs
sahf
adc
test
je
enter
movsb
addl
inc
pushf
hlt
fdivrs
sbbb
mov
pop
lret
and
mov
sbb
dec
imul
pusha
mov
imul
cmpsb
lods
daa
dec
xor
mov
push
xor
sbb
sub
push
mov
xchg
add
enter
icebp
dec
in
and
pop
test
adc
rolb
pop
ficompl
fcmovu
rol
ret
add
sub
sub
in
sbb
pop
fs
push
es
sub
push
cmc
in
or
pushf
xlat
xchg
mov
sub
xor
insl
push
adc
icebp
setge
stos
or
mov
mov
jge
call
insb
push
test
jg
pop
ud1
lds
jne
xchg
arpl
imul
pop
mov
jbe
iret
mov
arpl
xchg
inc
cld
push
nop
fstpl
add
add
pop
hlt
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
jmp
int
stos
ljmpw
dec
jnp
lret
dec
and
jnp
sahf
jnp
adc
jmp
lds
stc
push
sub
sahf
mov
push
out
mov
inc
or
andb
test
in
stc
gs
fldenv
jbe
adc
dec
xchg
lahf
adc
gs
lar
adc
jnp
sub
inc
mov
test
dec
jp
adcb
iret
ret
dec
outsb
jp
cmp
insb
mov
int
or
sbb
push
xlat
jecxz
push
inc
mov
dec
cmc
enter
sbb
shlb
cli
push
imul
push
pop
cmp
sbb
dec
mov
aad
fiaddl
into
inc
jg
mov
mov
jo
xchg
in
arpl
cld
inc
sub
js
adcl
lcall
insl
and
lret
ds
incb
lea
fisttpl
aas
pop
lret
negb
pop
push
mov
fdivp
and
lods
test
shlb
pop
mov
sub
jl
mov
imul
adc
stc
cs
bound
xor
push
dec
lods
aad
test
and
stc
shl
xor
jmp
test
sbb
nop
iret
pop
daa
mull
and
rolb
ret
stos
push
cmpsl
mov
mov
push
mov
insl
stos
aam
and
lea
jp
sbbb
mov
in
add
stos
add
and
dec
pop
in
filds
cs
adc
lods
adc
shrl
mov
shlb
lock
push
sub
or
add
scas
sub
xchg
xor
xlat
jge
xor
lcall
fadd
sbb
xor
sbb
lock
mov
xchg
mov
mov
push
bound
push
and
pop
inc
mov
inc
cltd
sub
mov
repz
pop
jl
pop
in
mov
push
movsb
cwtl
sbb
cmpsl
or
icebp
in
mov
int
call
mov
mov
out
pop
inc
dec
sub
fnstenv
data16
repz
push
pop
mov
lods
add
add
jmp
and
cmc
insb
adc
aas
mov
outsl
xchg
mov
mov
mov
and
cwtl
scas
icebp
pusha
fcompl
int3
sbb
mov
mov
mov
and
flds
outsl
in
sahf
push
mov
sub
test
adc
sub
xchg
pop
test
jp
es
imul
xor
rcrb
pushf
in
call
add
sub
mov
jecxz
sahf
add
call
fmuls
jge
xlat
call
xorb
je
cmp
into
ds
dec
pop
popf
fcmovnb
outsl
push
push
out
nop
mov
into
sbb
out
sub
aaa
push
xor
out
adc
mov
dec
dec
jp
add
push
jge
sub
subl
pop
aad
aad
fcmovnbe
fcmovnb
andb
mov
push
subb
xchg
mov
jg
jns
cwtl
pop
inc
pop
xchg
je
imul
push
fwait
mov
roll
sbb
sbb
jle
dec
sbb
ret
add
and
cld
test
in
lds
cld
push
das
loopne
pop
mov
idivb
mov
ljmp
mov
js
or
xchg
inc
lods
fwait
scas
and
xchg
addr16
jecxz
jae
xor
flds
push
mov
mov
scas
cmc
xchg
add
fcoml
inc
and
fcmovne
pop
pushf
jbe
mov
mov
sar
mov
push
fwait
jae
out
ret
rorl
pop
aad
loop
pop
and
push
cmp
clc
pop
or
fdiv
ds
add
xor
pop
or
adc
sbb
aad
sub
shll
dec
xchg
mov
lret
bound
bound
cmp
push
seta
mov
mov
dec
sub
push
adc
hlt
lcall
xor
lods
sub
popa
or
repnz
sub
xchg
scas
xor
sahf
shl
scas
push
das
xor
pop
idiv
push
and
xlat
push
das
add
or
and
stos
inc
out
sbb
arpl
ds
add
cld
push
loopne
test
negb
pop
fmull
mov
ja
or
rcl
add
adc
out
lds
das
xchg
pop
nop
sti
xor
punpcklbw
push
test
jle
dec
stos
lea
jae
or
push
lret
test
cs
push
xchg
inc
cli
xchg
jmp
enter
cltd
lahf
mov
sar
loop
pop
mov
sbb
dec
mov
or
pop
or
push
or
jge
mov
movsl
mov
add
and
cmpsb
push
repz
sub
inc
fs
sbbl
aad
lods
mov
lret
pop
mov
xchg
jmp
push
cmc
popa
pop
mov
sub
icebp
lahf
mov
test
xor
xor
pop
or
jb
iret
ret
sub
jmp
mov
sbb
testl
frstor
icebp
or
push
insb
flds
in
aam
sbb
fiaddl
mov
shlb
cmp
sbb
mov
ret
add
jp
inc
sub
ljmp
mov
mov
lret
in
insl
ret
or
push
jnp
lret
iret
cmp
ds
jmp
inc
mov
testb
mov
pop
or
lds
fcoml
xchg
mov
pusha
add
stos
test
inc
lock
push
roll
dec
mov
xor
les
insl
xor
imul
mov
inc
in
add
xor
out
fldenv
subb
push
lods
scas
addr16
or
push
push
mov
push
jge
outsl
or
push
mov
or
mov
jb
outsl
adc
sbb
repz
cmpb
mov
dec
push
cld
adc
aas
mov
lods
in
aam
repnz
cmp
sahf
mov
mov
stos
sub
push
sub
bound
cmc
lods
imul
xor
call
sbb
jecxz
ret
sti
mov
fsubrl
inc
adc
popa
mov
inc
push
xchg
mov
lret
icebp
lcall
daa
add
stos
mov
jp
scas
jmp
aam
xor
outsl
xor
jb
push
or
push
jno
pop
sahf
movsb
rol
lcall
fildll
bound
lock
stos
fs
inc
xabort
adcl
push
cmp
cmp
arpl
adc
or
int3
insl
es
push
fdivrl
roll
mov
sub
testl
xor
add
leave
bound
cmpsb
scas
fwait
cmp
out
pop
cli
lret
lcall
sbb
mov
add
mov
aaa
lret
dec
lcall
or
push
adc
pusha
fsts
mov
hlt
cltd
loop
mov
jmp
lahf
mov
cmp
adc
scas
and
fldt
xchg
inc
mov
mov
loop
adcl
push
jne
mov
pop
mov
mov
outsb
pop
testl
jnp
inc
jge
jl
dec
jl
out
or
fiaddl
fnstsw
or
repz
aad
sahf
lods
pop
dec
mov
mov
fwait
repz
sbb
es
lock
lret
or
ja
cmpb
pop
jp
fbld
sub
test
cmp
or
sub
mov
into
shl
cmp
mov
mov
jle
xor
cmp
imul
jp
stos
xchg
xchg
pop
aam
push
outsw
adc
loopne
addr16
mov
filds
leave
xor
jae
pop
nop
testb
and
in
jo
push
cmp
pop
jnp
iret
mov
add
add
cmp
ja
jno
cmp
xchg
mov
hlt
insb
call
add
pop
sti
or
xchg
push
xor
sbb
ss
dec
sbb
sahf
sub
outsl
cmc
insl
inc
imull
ds
sub
lret
pop
in
pop
pushf
into
mov
loope
leave
mov
adc
sbb
hlt
xor
int3
or
popa
rclb
les
fnstsw
in
aaa
push
cmc
or
test
add
dec
push
lret
add
aad
stos
jno
inc
push
cli
outsb
insb
or
and
rol
stos
dec
sbb
imul
mov
ljmp
stos
jle
clc
inc
ljmp
xlat
pop
fcmovu
xchg
and
clc
outsl
inc
icebp
sti
pop
push
mov
and
pop
iret
cmp
cmp
faddl
adc
daa
lds
outsb
dec
imul
adc
or
repnz
xlat
add
push
loopne
dec
stos
jge,pt
testl
jmp
cmc
mov
xchg
fs
cmp
adc
addr16
mov
stos
mov
gs
push
xchg
adc
add
pop
push
idivb
xor
popf
pop
arpl
arpl
cmp
das
sbb
add
pusha
mov
xchg
and
in
ror
es
js
inc
out
inc
dec
push
cltd
ljmp
jmp
dec
and
mov
mov
push
shl
mov
iret
ja
repz
imul
sub
hlt
fistps
cmp
xor
jmp
dec
cmp
mov
mov
pushf
push
popl
leave
sbb
cwtl
jecxz
loop
outsb
cmp
andb
lahf
pop
mov
sub
jge
in
xchg
lahf
lods
pop
xorb
sub
push
sar
mov
mov
sbb
pop
cld
or
jl
inc
and
sub
mov
jg
adc
pop
adc
lahf
dec
mov
lcall
adc
add
inc
hlt
leave
lock
xor
cmpsb
dec
cmovg
jg
add
mov
cmp
mov
adc
cmp
lahf
aas
add
jnp
mov
xchg
outsb
sahf
fimull
inc
push
jbe
in
xor
notl
cmpsb
cmp
fwait
mov
pop
or
xchg
mov
sub
fwait
sbb
jg
nop
or
xor
inc
call
out
fistpl
das
hlt
sar
and
adc
fstpl
or
jb
ja
push
dec
lods
int3
daa
je
js
loopne
inc
adc
lret
add
inc
fstps
and
sahf
xchg
out
std
add
push
pop
sub
push
xchg
push
pop
dec
jae
mov
push
dec
ds
mov
jecxz
mov
xor
adc
jne
in
in
out
sarb
notb
dec
xchg
jne
imul
push
clc
flds
mov
push
je
jge
fcmovnu
jmp
loop
bound
fwait
test
daa
mov
add
mov
mov
jo
or
stos
xor
mov
jns
shlb
adc
xor
mov
aad
and
cltd
xchg
inc
mov
mov
in
imul
and
mov
or
dec
lret
mov
repnz
int3
xlat
xchg
mov
negl
push
or
jmp
inc
daa
mov
push
or
fs
outsb
and
mov
xchg
pop
adc
cmp
clc
xchg
ja
cwtl
push
jl
dec
sub
ljmp
add
sub
inc
imul
movsb
sub
in
or
mov
stos
xchg
scas
jecxz
cmp
jmp
or
cld
mov
addr16
sub
insb
and
lahf
scas
push
mov
pop
jae
sbb
sub
icebp
decb
and
jae
int3
cli
bound
dec
pusha
scas
inc
leave
out
gs
jge
ss
outsl
stc
xlat
cltd
xchg
inc
mov
xchg
cltd
and
mov
xor
iret
rorb
mov
sub
repnz
push
leave
lds
push
fcomps
shrb
mov
inc
push
cmp
rclb
lea
out
pop
xchg
rcll
add
inc
fildll
mov
and
xor
mov
cmp
in
xchg
inc
jnp
rcll
mov
or
pop
sbb
loope
dec
testl
outsb
jno
push
out
lret
push
jns
sub
push
xchg
jbe
cld
xor
jg
and
sbbb
or
cmpsb
jmp
pop
pop
js
popa
popf
and
cmp
sub
push
cs
jecxz
std
lock
roll
jns
lcall
lods
into
jp
mov
int3
outsb
jge,pt
or
test
pushf
aas
mov
pop
je
lret
adc
int3
ds
pop
sub
xor
out
ja
out
ja
lods
nop
fidivrl
mov
or
cmp
jb
std
out
pop
and
sub
pop
mov
mov
jo
movsb
in
cmp
jecxz
inc
dec
test
cmp
lods
push
ljmp
adc
lret
inc
xchg
lret
cmp
cmp
mov
jg
xchg
sbb
mov
in
mov
sbb
jae
sti
cmp
int3
add
mov
inc
and
or
je
test
jl
and
mov
mov
iret
pop
fld
mov
shrl
ret
aas
aas
scas
stc
nop
mov
negl
push
and
fisttpl
mov
or
dec
in
test
sti
xlat
and
js
testb
adc
jnp
imul
mov
leave
fs
dec
dec
jl
mov
cmp
add
adc
xor
sar
jae
ds
cmp
imul
pop
ljmp
sarb
add
arpl
jecxz
jb
dec
fimull
or
in
in
and
cmpb
sub
sub
sti
int3
cmpsl
sub
push
cmp
pusha
stc
nop
push
cmp
pop
cmp
js
add
cmp
fimuls
es
lcall
daa
and
into
sbb
clc
mov
sub
push
ja
js
out
dec
sbb
ljmp
loop
jp
sub
mov
ds
add
cmc
dec
cmpsb
mov
dec
imul
or
arpl
pop
lea
pop
mov
xor
ret
in
repnz
nop
xor
sbb
daa
jb
push
movsb
add
je
into
dec
or
movsl
xlat
outsb
pop
and
dec
test
mov
addr16
clc
stos
mov
in
pop
test
mov
jns
mov
and
inc
cli
and
dec
jp
pop
add
sbb
and
cmp
scas
movb
inc
adc
add
cwtl
aad
add
movsl
xchg
orb
mov
mov
mov
pop
test
leave
les
insl
pop
mov
cmpsb
sub
cld
negl
mov
rorb
or
xor
lds
loopne
rcr
jae
jg
ret
imul
je
aaa
fdivl
and
lock
mov
sbb
push
cltd
lock
cld
das
inc
das
repnz
mov
shll
jno
sbb
and
and
jae
mov
daa
sti
dec
and
outsl
in
pop
inc
cli
hlt
and
inc
dec
sbb
mov
and
mov
fsubrl
icebp
mov
add
fiadds
sbb
mov
filds
push
lret
dec
mov
out
add
pusha
mov
test
push
lret
in
ljmp
xchg
xor
aad
hlt
adc
adcl
fiaddl
sub
sbbb
mov
es
jns
add
call
or
sub
xchg
jnp
lret
js
mov
fldenv
test
or
in
outsl
cmp
sbb
call
mov
inc
or
jne
shll
das
out
jl
fistl
jl
lods
loop
movsb
adc
mov
dec
pop
sbb
stos
push
outsb
inc
or
jne
mov
sub
adc
and
pop
sub
mov
pop
int3
into
xchg
fstpt
in
and
daa
adc
xor
push
insl
xchg
pushf
subb
xchg
mov
aaa
adc
in
aam
iret
nop
add
loop
insb
mov
movsb
xor
sbb
sarb
shl
adc
add
test
xchg
pop
mov
cmp
push
fldl
jl
add
mov
mov
pop
cli
mov
imul
inc
push
movsl
shrl
or
mov
cmp
or
bound
cmp
cmp
jns
aas
mov
cmp
push
sbb
inc
cmp
popa
mov
sbb
jb
jns
and
sub
mov
mov
enter
pop
xor
mov
jecxz
inc
test
into
incl
dec
fcomp
xor
push
xor
mov
mov
loopne
insl
repnz
push
mov
scas
sub
sub
imul
cmp
dec
pop
add
fnstcw
rorb
aad
leavew
les
mov
sbb
add
sub
xchg
inc
shl
mov
adc
sub
mov
int
hlt
adcb
mov
pushf
popa
and
mov
lret
fs
scas
pop
xchg
into
int
dec
push
xchg
xor
test
push
divps
in
sbb
gs
ja
lock
mov
xlat
xor
dec
xor
aam
cmp
insl
bound
push
pop
hlt
out
movsb
mov
mov
cmpsb
daa
fadds
mov
mov
sbb
popa
or
repnz
mov
pop
sbb
mov
add
jecxz
dec
or
cmp
arpl
fs
cmp
scas
dec
mov
stos
push
cs
aas
jb
cli
mov
stos
popf
aam
or
repnz
xor
add
into
xorb
js
lret
sbb
rcrl
sub
push
hlt
lock
inc
aaa
aam
and
mov
sub
and
sbb
mov
push
jle
ret
jae
scas
loop
ret
sbb
ror
add
cmp
pop
adc
aam
addr16
sbb
les
lea
sbbl
xor
in
mov
adc
dec
inc
dec
jns
dec
divps
movsl
out
andb
sbb
clc
mov
insb
xchg
in
mov
adc
adc
fldcw
lea
mov
aas
ljmp
gs
pusha
add
push
jne
pop
aam
cmp
pop
aas
jg
add
push
in
dec
push
popa
cltd
cmp
movl
lds
negl
popa
and
jmp
fcmove
sahf
sub
push
sub
dec
sbb
movsb
xchg
inc
scas
xchg
sbb
pop
jne
imul
mov
mov
int
push
mov
pop
hlt
mov
push
push
inc
inc
sub
mov
push
inc
mov
fadds
xchg
clc
leave
cli
test
rorb
sahf
arpl
adc
pop
xchg
or
push
stos
lret
mov
lret
js
aaa
roll
bound
jno
add
sbb
daa
fists
mov
inc
sub
mov
dec
aaa
mov
addr16
add
ss
out
fs
mov
push
mov
lock
das
out
adc
lret
shlb
push
out
mov
inc
push
xor
aas
insb
push
or
loope
in
testb
xor
mov
push
sub
test
cli
jnp
test
insb
push
pop
std
pop
cli
inc
cmp
pop
sbb
cmc
lret
ds
push
out
push
jnp
mov
scas
dec
popw
jnp
imul
es
xor
jg
les
xlat
push
adc
pop
xchg
adc
out
inc
outsl
pusha
cli
div
int3
sbb
les
int3
movsb
adc
push
cmp
or
mov
pop
inc
ljmp
cmp
rorb
js
dec
ds
add
mov
addr16
lcall
test
mov
or
loop
jns
adc
lret
popa
mov
clc
fsubp
lods
out
and
out
fwait
mov
enter
roll
aaa
hlt
movq
xor
push
sub
jp
sub
pop
in
mov
push
pop
pop
or
and
adc
xor
loop
add
ja
mov
dec
mov
es
push
js
and
jbe
data16
pop
test
and
mov
xchg
jnp
cmpsl
movsl
and
call
jle
stos
sub
addr16
sbb
ret
pop
and
sti
in
adc
xchg
lock
mov
ljmp
das
cmp
mov
insb
and
outsb
mov
jbe
jle
rolb
cwtl
lock
jb
xor
jl
mov
or
mov
sub
stos
push
adc
xchg
leave
jbe
adc
cmc
hlt
jge,pn
loope
cmp
xchg
cmp
and
jb
rolb
icebp
sbb
je
xor
outsl
mov
xchg
sbb
outsb
mov
rcll
scas
pop
imul
mov
aas
lods
and
je
aad
push
xor
xlat
pop
leave
test
jl
es
inc
pop
aas
sahf
and
inc
push
sub
mov
adc
sbb
mov
xor
pop
mov
ficoml
push
negl
dec
and
sbb
aas
and
rolb
dec
lock
icebp
pop
adc
sbb
push
cltd
inc
das
mov
jg
imul
jo
das
adc
pop
data16
bound
lret
stos
pop
sbb
imul
jg
push
insl
or
mov
push
mov
mov
fsts
push
cmpsb
and
aad
fwait
jp
mov
cmp
jns
jecxz
jl
lea
xor
inc
sbb
push
pop
iret
mov
ss
mov
mov
out
pop
rcr
inc
xor
dec
push
ss
add
lods
popa
dec
inc
and
scas
add
scas
adc
add
ret
pop
mov
or
pushf
add
lahf
xor
hlt
sub
scas
sarl
fstps
movsb
and
dec
and
mov
aad
add
xor
add
sub
lods
es
push
and
pusha
inc
inc
inc
xchg
je
and
mov
cmp
nop
push
push
push
imul
jmp
pop
inc
sbb
push
add
cmp
pop
in
outsl
scas
fsubrp
or
cmc
cli
fisubl
mov
xor
pop
hlt
cltd
cli
cld
pop
fimuls
addr16
imul
into
push
add
std
aaa
jl
or
mov
out
mov
loop
and
or
mov
jo
mov
enter
fadds
mov
mov
sbb
inc
xchg
push
loop
shlb
test
jl
cmc
adc
loope
cld
btr
fmull
jl
stos
pop
mov
cmp
pusha
xchg
add
adc
add
pop
fs
int3
inc
loop
dec
scas
pop
addl
ffreep
cwtl
mov
fldenv
jne
push
popf
leave
and
or
into
mov
dec
sub
stos
push
dec
shll
sbb
fisttpl
jmp
push
scas
push
pop
es
fistl
outsb
push
push
xchg
sbb
sahf
fcmovu
pop
dec
mov
lahf
mov
pop
inc
loop
nop
jl
sub
mov
mov
test
or
popa
mov
jmp
in
adc
mov
int3
mov
add
fnstcw
lock
clc
andb
out
mov
pop
movsb
stos
add
in
aam
jl
mov
lcall
test
daa
push
or
scas
or
lret
popw
xchg
adc
sbb
push
add
dec
add
sbb
xchg
int
dec
dec
xchg
repz
mov
or
iret
xchg
iret
ret
lods
jmp
xchg
jecxz
push
mov
shll
divb
hlt
cltd
pop
shll
inc
push
xchg
mov
dec
mov
mov
xchg
shll
dec
pop
xchg
popa
xchg
add
and
std
loope
pop
lahf
pop
popf
mov
rolb
dec
test
shll
fucom
loope
adc
lret
js
dec
movsl
iret
mov
imulb
jne
pop
popa
pop
sbb
call
call
popf
leave
push
sbb
dec
mov
sub
fs
fs
inc
sub
mov
mov
pop
mov
out
shl
push
adc
and
add
orb
mov
out
out
into
inc
xor
push
aaa
pop
jno
in
or
pop
hlt
hlt
lods
push
int
mov
dec
push
mov
pop
sbb
sbb
in
test
xor
xchg
push
out
jl
xchg
out
mov
icebp
test
sbb
add
out
orl
or
pop
test
and
rol
in
repz
into
into
or
lret
mov
pop
test
jg
dec
xor
push
xor
sub
inc
mov
shl
and
sbb
mulb
nop
mov
inc
jg
xor
roll
test
mov
jae
sbb
inc
int3
adc
scas
aas
pushf
cmp
cmpsl
cmpsl
rcrl
mov
mov
hlt
mov
lahf
inc
insb
mov
cmpsb
xor
es
adc
pop
rorl
ret
mov
cwtl
lahf
dec
les
xor
pop
adc
push
xor
or
dec
push
dec
push
cmp
sbb
pop
push
ja
mov
shlb
push
jne
mov
jno
adc
vpackuswb
pop
push
mov
jl
mov
bound
inc
adc
push
popf
push
mov
test
movsl
adc
mov
inc
ret
add
cmp
gs
mov
mov
andb
and
dec
mov
sbb
dec
inc
movsb
mov
xor
cmpsl
imul
fdivrl
aam
push
fiaddl
push
cmpl
shll
cmp
les
in
repnz
push
mov
lock
std
xor
popf
dec
lods
imul
dec
in
inc
addr16
mulb
sbb
jb
mov
and
and
adc
xlat
jns
sbb
js
idivl
test
lea
call
popa
ja
leave
push
jge,pt
mov
mov
ret
and
sub
lcall
lcall
inc
cmpsb
lret
insb
or
fs
outsb
jl
enter
pop
jo
cmpsl
inc
pop
jb
rorb
mov
ss
push
push
jmp
out
stos
int3
imul
push
sahf
testb
aam
cwtl
outsb
adc
inc
les
mov
sub
int
daa
hlt
mov
out
sahf
out
inc
xchg
mov
scas
pop
xchg
inc
and
js
xor
test
jecxz
or
sub
fimuls
pop
pop
loop
test
push
cmc
mov
test
fidivrl
xlat
leave
hlt
cwtl
std
adc
gs
cmpsl
bound
mov
lea
add
stos
mov
stc
adc
xor
addr16
cmc
mov
adc
and
pop
les
lahf
into
cwtl
xor
shll
cli
pop
lds
mov
shl
stc
add
dec
dec
rclb
xor
rorl
call
inc
adc
sub
dec
sarl
testb
mov
cmp
cmc
mov
or
mov
fistps
or
add
dec
pop
and
dec
push
cmp
scas
mov
roll
or
cltd
or
pop
dec
cli
cmp
into
int
adc
sbb
pop
int
popf
mov
lods
dec
mov
pop
les
mov
xchg
lcall
lcall
sbb
popa
cltd
jmp
call
sub
push
shl
jg
pop
inc
outsb
stc
lods
scas
andb
fildll
and
imul
pop
psubw
mov
imul
pushw
xor
push
loope
mov
jle
stos
sbb
in
in
ret
dec
jb
jle
adc
jno
jo
pop
pusha
pop
call
icebp
sbb
jp
clc
and
adc
pop
ss
xchg
into
inc
inc
or
test
movsl
mov
mov
adc
dec
xchg
and
xor
adc
shll
or
or
or
rolb
leave
icebp
dec
sbb
fnstenv
jo
sub
jmp
out
shl
movsl
lea
je
std
pop
shl
xchg
outsb
inc
sbb
sti
and
sti
mov
lret
lret
push
cld
repz
adc
mov
shrb
fstpt
movsb
pop
stos
loop
repz
ffree
mov
inc
push
fistl
jb
rorb
and
faddp
xchg
and
outsb
mov
aam
cmp
xor
fxtract
aam
xchg
mov
in
test
std
add
push
pop
rcrl
fcompl
mov
pop
shr
or
mov
inc
dec
call
les
int
dec
pop
sbb
jb
mov
pop
mov
push
lods
jno
cmc
aam
ret
addr16
scas
shr
jae
cmp
adc
xchg
test
mov
test
gs
popf
xor
adc
jle
cmp
mov
mov
js
inc
test
jne
lret
call
lods
stos
add
and
pop
cmc
cmp
xchg
out
pop
or
cltd
push
test
stc
fisttps
insb
popa
xchg
cmp
dec
pop
push
pusha
popl
lret
cli
pop
rclb
xchg
mov
hlt
pushl
push
loop
jo
sahf
dec
out
and
xor
mov
pushf
test
jae
xchg
mov
icebp
pop
mov
js
inc
xor
cmp
inc
lods
adc
or
cld
nop
shl
in
xor
js
test
cmp
nop
outsb
dec
sub
push
jmp
jg
inc
rcrb
push
jmp
outsb
sbb
cmc
sbb
clc
mov
add
sub
inc
test
fwait
pop
cmp
in
sbb
or
xchg
dec
lret
mov
xor
lcall
fnstsw
cmp
xchg
inc
mov
out
push
imul
insl
inc
outsl
cli
gs
jno
movsl
lret
lcall
jg
or
sub
in
in
out
sub
pop
jmp
xchg
outsb
cltd
fstpl
movsb
jmp
std
push
inc
jns
stos
add
mov
leave
lret
rcll
je
out
mov
push
rcrb
enter
cmp
inc
lock
fmuls
ljmp
arpl
mov
or
clc
pushf
add
mov
lret
mov
in
mov
insb
into
fld
rolb
mov
mov
jg
ljmp
repz
mov
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
and
mov
and
movsbl
sub
mov
xor
add
and
sub
mov
subl
xor
cmp
movl
jne
andl
mov
inc
mov
cmpl
jbe
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
adc
push
or
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
xor
add
dec
mov
jmp
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
pushl
pushl
push
push
call
jmp
mov
xorl
push
movl
cmpl
je
cmpl
ja
jmp
push
push
push
pushl
push
call
mov
dec
mov
jmp
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
iret
lods
mov
add
add
add
add
add
loopne
add
loopne
add
add
add
push
push
inc
push
and
test
dec
mov
add
add
inc
cmp
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
jbe
cli
push
sbb
or
or
cltd
mov
lea
sub
lea
lods
sarb
mov
sarb
mov
mov
mov
sbb
or
push
cld
mov
mov
stos
lods
fistpl
or
mov
mov
mov
mov
mov
sahf
and
shrb
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
