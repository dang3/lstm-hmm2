push
mov
sub
orl
push
adcl
push
decl
xor
notl
inc
push
push
call
test
movl
je
lea
notl
push
adcl
call
movl
jmp
subl
push
mov
push
subl
push
subl
call
sbbl
test
movl
je
lea
andl
push
incl
call
jmp
xorl
push
mov
addl
push
adcl
push
push
andl
call
test
movl
je
sbbl
lea
xorl
push
orl
call
movl
jmp
push
sbbl
push
sbbl
call
decl
test
jne
push
push
call
adcl
test
movl
jne
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
push
call
xorl
test
movl
jne
sbbl
push
push
sbbl
push
sbbl
call
adcl
test
movl
jne
subl
push
addl
push
call
test
movl
jne
orl
push
push
xorl
call
test
movl
jne
push
orl
push
sbbl
call
test
movl
jne
orl
push
push
subl
push
xorl
call
test
jne
subl
push
adcl
push
xorl
push
orl
call
subl
test
movl
jne
push
push
adcl
call
test
movl
jne
push
adcl
push
subl
call
adcl
test
jne
orl
push
subl
push
call
xorl
test
movl
jne
push
push
sbbl
push
call
sbbl
test
movl
jne
push
push
push
call
sbbl
test
movl
jne
adcl
push
push
sbbl
call
test
movl
jne
movl
push
orl
push
call
xorl
test
movl
jne
push
push
subl
call
subl
test
movl
jne
xorl
push
andl
push
push
sbbl
call
test
movl
jne
xorl
push
andl
push
orl
push
addl
call
xorl
test
movl
jne
movl
push
andl
push
call
test
movl
jne
sbbl
push
adcl
push
movl
call
xorl
test
jne
orl
push
orl
push
call
test
movl
jne
push
subl
push
adcl
push
addl
call
addl
test
movl
jne
addl
push
push
push
call
test
jne
subl
push
xorl
push
subl
call
notl
test
movl
jne
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
call
test
jne
orl
push
push
andl
push
call
subl
test
movl
jne
push
andl
push
push
call
subl
test
jne
push
push
call
orl
test
je
addl
xor
movl
jmp
subl
movl
sub
mov
adc
mov
sub
mov
xor
or
adc
mov
mov
sbb
mov
movl
add
lea
xor
mov
lea
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
adc
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
xorl
mov
or
mov
xor
mov
add
mov
movl
mov
cmp
movl
jne
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
jmp
and
mov
sbb
mov
inc
xor
movzwl
or
add
sub
mov
add
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
not
add
xor
mov
xorl
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
mov
mov
mov
or
mov
mov
mov
add
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
xor
add
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
xor
movl
mov
xor
orl
add
movl
jmp
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
xor
lea
push
mov
orl
xor
addl
lea
orl
push
adc
mov
pushl
sbbl
call
xor
mov
mov
xor
lea
mov
not
mov
sbbl
xor
xor
subl
add
mov
xor
movl
lea
mov
cmp
movl
jbe
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbb
mov
dec
mov
movl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
add
mov
andl
sub
xorl
xor
mov
movzbl
mov
cmp
movl
jne
lea
mov
orl
lea
addl
mov
mov
test
movl
je
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
addl
mov
mov
mov
movzbl
and
mov
notl
mov
cltd
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
add
mov
sbb
add
adc
mov
adc
andl
add
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
pushl
pushl
call
mov
dec
mov
jmp
xor
add
and
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
subl
inc
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
movl
mov
xor
push
adc
mov
sbbl
xor
and
mov
push
movl
mov
subl
add
cmp
movl
je
mov
mov
sbb
mov
xor
xor
xorl
add
xorl
add
adc
notl
xor
addl
mov
inc
push
add
xor
xor
mov
add
adc
movl
xor
xor
movl
cmp
movl
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
add
mov
movsbl
add
mov
sbbl
sub
mov
xorl
xor
movl
cmp
movl
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
adcl
push
push
lea
push
addl
lea
push
xorl
call
subl
push
push
sbbl
push
subl
call
xor
movl
movl
mov
mov
xor
mov
adc
mov
add
decl
mov
mov
adcl
test
je
mov
mov
mov
xor
xor
and
mov
mov
xor
adc
add
mov
sbb
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
xor
or
dec
mov
jmp
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
add
sub
mov
mov
xor
add
dec
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
push
call
xor
xor
dec
mov
jmp
andl
xor
xor
inc
mov
cmpl
jne
call
cmpl
jb
and
mov
xor
adcl
add
xorl
mov
xorl
sub
lea
adcl
xor
xor
cmp
movl
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
mov
and
mov
mov
xor
movl
add
cmp
movl
jne
pushl
negl
call
movzbl
xor
mov
sbb
mov
mov
sbbl
xor
add
movl
jmp
dec
je
dec
stos
cmp
adc
jp
jp
xor
jp
sub
cmp
popa
ss
push
xor
fdivr
insb
inc
imul
jl
push
iret
pop
dec
cmp
cli
xchg
dec
jg
mov
sub
data16
push
jg
jmp
xchg
fimuls
mov
imull
add
push
cli
es
or
imul
pop
add
jo
les
sbb
je
arpl
xchg
pop
mov
repz
cmp
or
sub
xor
push
jecxz
mov
test
inc
push
dec
or
repz
faddl
push
stc
push
push
mov
inc
add
pop
pop
jo
aas
bound
sbb
lcall
push
outsl
lea
add
add
mov
fdiv
mov
jp
cmpb
cs
jp
pop
push
test
sbb
jmp
aaa
movsl
mov
std
add
sbb
ret
jle
xchg
nop
mov
inc
faddl
mov
sub
pop
pop
shlb
stc
mov
in
xchg
push
je
mov
scas
cld
adc
lods
cmp
jae
adc
or
and
sbb
jb
xchg
pop
cmp
mov
adc
scas
adc
cmpsb
inc
mov
addr16
aaa
mov
mov
push
scas
or
stos
mov
rcr
jmp
movl
mov
sbb
data16
inc
repz
out
jo
imul
les
data16
add
jge
and
mov
stc
mov
mov
add
jl
jo
dec
inc
mov
mov
dec
data16
pop
cmp
dec
pop
sub
test
or
xor
lcall
mov
dec
fsubrl
arpl
add
ja
jp
push
jg
push
push
dec
cmc
lods
int3
cmp
rorb
or
mov
loopne
pop
and
sub
nop
inc
dec
fadds
repnz
shll
das
add
out
inc
out
imul
sub
negb
mov
push
jp
xchg
mov
xchg
mov
xlat
add
into
sub
iret
push
mov
and
int
xlat
mov
mov
fcmovb
arpl
lret
jne
shrl
and
divb
push
jle
aad
xchg
sub
sbb
clc
jmp
mov
iret
call
jmp
or
roll
nop
push
jns
xor
mov
sub
jbe
dec
jo
movsb
js
ljmp
call
outsb
outsl
sbb
dec
pop
mov
lock
fstpl
int3
sub
xchg
xchg
or
or
sbb
in
jb
or
pop
test
jecxz
xchg
rcll
divps
mov
xchg
fstl
mov
fldt
pop
add
cmc
mov
cs
jge
jns
popf
repnz
add
pop
loop
aam
out
lret
push
or
jb
test
cmp
scas
test
stos
stos
sub
add
popa
pusha
mov
sub
cmp
mov
mov
mov
push
mov
mov
fldl
sbb
mov
fs
or
jge
mov
push
popf
call
sbb
sub
hlt
sub
sbb
add
add
add
enter
sbb
fs
mov
push
add
or
push
adc
ss
cmp
inc
cld
fsubs
cmc
add
inc
daa
jns
dec
xor
in
cwtl
cmp
flds
jne
insb
push
inc
lods
sarl
popa
sbb
pop
mov
push
mov
and
in
pop
pop
aas
rorl
lods
fimuls
fstps
test
inc
or
mov
jae
loopne
add
mov
pusha
lcall
mov
ret
inc
cs
xchg
lock
sub
test
les
cli
sahf
or
xor
aam
sub
scas
cmp
xor
test
enter
inc
pusha
cmp
jb
or
jb
push
cmpsb
pop
and
or
lret
and
or
enter
push
xlat
in
pop
popa
nop
lds
pusha
insl
mov
scas
push
mov
ret
shlb
xchg
sbb
dec
cli
inc
movsb
lea
movsl
lcall
mov
push
push
xchg
push
not
pop
or
imulb
pop
and
xor
rclb
repnz
out
push
gs
movsl
cmp
and
and
inc
or
fnstsw
pop
repnz
sub
mov
cld
vfmsubadd132ps
mov
lahf
push
lahf
inc
into
insl
or
orb
frstor
in
fdivrl
and
mov
insl
or
cli
adc
xchg
call
rolb
movsl
ret
xor
mov
popf
adc
imul
and
inc
frstor
jbe
scas
popa
sbb
mov
pop
roll
push
sbb
lahf
lret
xchg
movsl
scas
addl
icebp
push
and
push
test
stc
adc
sub
and
popa
xlat
adc
ret
aad
fldl
jno
and
je
ret
dec
push
div
sbb
add
sahf
in
stos
xchg
push
or
adc
adc
xchg
je
cmp
ret
popf
fadd
sub
ljmp
jno
inc
jnp
mov
fsubl
repnz
jae
mov
test
stos
dec
push
add
mov
inc
aaa
xlat
mov
dec
dec
xchg
arpl
push
adc
add
add
sub
inc
fidivrs
mov
dec
addr16
pop
loope
leave
xchg
lahf
mov
pop
xchg
popa
pop
out
imul
dec
and
popf
and
fdivs
jecxz
std
inc
jns
int
outsl
jne,pn
xor
add
push
dec
aas
rcll
iret
mov
fdivrp
xor
mov
mov
mov
add
jle
mov
leave
scas
cli
cmpb
test
enter
lahf
jb
fadds
lahf
fstl
daa
push
cwtl
mov
jae
cmpl
cs
adc
shlb
imul
les
and
xor
movsl
ss
push
jae,pn
pushl
ja
mov
movsl
dec
nop
mov
mov
sub
cld
shll
inc
rorb
stos
call
fidivs
int3
ficomps
xchg
fdivrl
orb
add
fsubl
sbbl
cmp
inc
scas
test
cli
or
shrb
ja
ffree
adc
or
repz
pop
fnstcw
pop
pusha
scas
inc
adc
icebp
jae
cltd
cmp
mov
jg
adc
sti
js
dec
out
inc
xchg
jle
loope
std
arpl
and
jns
or
lock
into
xchg
subb
push
dec
inc
out
jge
xor
loop
dec
aam
pop
or
jge
inc
jmp
pop
pop
ljmp
jnp
lcall
andl
push
dec
jno
sub
push
pop
xor
test
aas
into
fdivp
addr16
cmpsl
sti
sub
nop
test
bnd
fistps
mull
or
repnz
push
ror
xchg
xchg
cmp
rclb
xchg
jg
dec
jae
movsb
and
cmp
clc
pop
lods
mov
lea
test
sbb
loop
push
lea
clc
cmp
jno
xor
test
mov
call
test
outsl
gs
pmaddwd
jns
sub
xchg
stc
outsb
cmc
cmp
pop
rclb
sti
outsb
ljmp
ret
cmpsl
punpckldq
lods
outsl
maskmovq
aad
incb
dec
or
adc
pop
unpckhps
push
pop
cli
dec
sub
fmuls
inc
mov
cli
inc
std
sbb
pop
jo
sub
mov
movsb
test
jmp
xchg
and
ret
mov
out
xlat
cmp
dec
lock
push
jl,pt
dec
data16
adc
aas
sarl
mov
fwait
pop
movsl
inc
ret
pushf
out
jne
sbb
fimull
jb
push
sub
sahf
jle
xchg
pop
jno
mov
sbb
shlb
lods
ds
mov
dec
jo
cmp
lods
adc
jae
loopne
jb
push
xchg
xchg
lahf
xor
hlt
repz
jb
js
insb
push
test
or
and
jg
rcll
or
insl
xchg
js
roll
gs
sbb
mov
testb
push
add
lret
dec
cmp
sti
jb
movsb
notb
sub
es
and
cli
mov
pushl
sub
jg
sbb
sahf
insl
cmp
sub
cli
jg
mov
inc
or
xor
mov
pusha
fwait
cmp
mov
loope
out
je
fsubl
ret
faddl
into
je
add
fsincos
cwtl
xchg
pop
cmp
mov
sub
mov
mov
dec
rcr
scas
and
cmp
or
dec
dec
in
arpl
dec
push
mov
push
sub
out
or
jg
std
rclb
xchg
jns
ljmp
arpl
xchg
ja
jae
or
ret
fmull
sbb
xor
mov
mov
mov
jne
mov
jl
rcr
ret
sub
ss
jecxz
adc
sub
cmpsl
cmpsb
pop
movsb
jp
cltd
in
sahf
loop
cmpsl
mov
notb
add
add
push
or
push
in
das
stc
mov
sti
mov
outsb
cmp
sbb
int
int3
stos
mov
sarb
insl
cmp
lret
je
std
xor
mov
or
xchg
mov
or
or
sub
jg
fcomps
faddp
sub
pop
cmpsl
fsubrs
mov
mov
jno
sbb
and
dec
inc
sub
mov
jge
push
movsb
push
int3
ret
les
pop
loop
test
dec
push
xchg
stos
push
add
lods
mov
or
daa
mov
nop
scas
in
dec
loopne
jo
sbb
or
rolb
jns
xor
xchg
mov
pop
mov
pop
push
push
rcr
fcmovbe
pop
cs
jmp
and
addl
dec
dec
in
pop
jnp
dec
mov
jmp
push
xchg
inc
shrl
lret
repz
push
cmpl
imul
sbb
cmpl
cs
xchg
inc
jl
cmp
mov
movsb
xchg
lahf
pop
in
mov
pop
cwtl
iret
in
mov
js
push
mov
imul
sub
push
insb
mov
pop
sub
movsb
jmp
icebp
jo
iret
les
cmpsl
cs
sbb
pop
cmp
fwait
mov
dec
push
aam
push
out
loope
imul
sbb
mov
nop
push
jnp
add
arpl
adc
xor
and
dec
lcall
lea
sbb
popf
pop
sti
sub
lahf
pop
adc
roll
sbb
xor
push
icebp
popa
fildll
lock
xchg
ss
push
pop
xchg
xor
adc
movsb
push
mov
xlat
subb
jmp
or
loopne
jle
clc
cmpsb
xchg
push
cld
repz
inc
or
sti
pop
sti
mov
repz
aas
data16
sbb
movsb
testb
in
outsl
popf
dec
push
loopne
jb
testb
xchg
sub
loope
in
xorl
dec
lods
pop
mov
int3
pop
stc
adc
and
mov
lret
clc
mov
movsb
pushf
mov
nop
and
pop
out
sbb
jo
xchg
dec
lods
ljmp
or
into
jne
mov
inc
mov
cmp
dec
push
decb
rcrl
movsl
or
lret
neg
inc
add
scas
cs
out
std
jbe
leave
and
cltd
mov
mov
fldenv
sbb
ja
and
pusha
es
mov
pop
mov
add
push
mov
pop
push
scas
aam
lea
out
add
jp
xchg
insb
add
cmpsb
insl
xor
loope
scas
pushf
cmpsb
xlat
sbb
mov
xchg
pop
fldz
into
jae
repz
dec
inc
fiadds
movsl
mov
xchg
sub
fs
ss
shll
sbb
lods
ss
outsb
pop
mov
cwtl
out
push
cmpsl
ljmp
xor
cmp
and
jo
es
adc
test
sbb
mov
into
push
shlb
aam
mov
insl
popf
mov
mov
sahf
inc
jl
jg
add
jl
inc
loope
lods
cli
jp
int
and
inc
loopne
xor
jg
xchg
sbbl
xchg
ret
jg
les
sub
dec
pop
mov
inc
sahf
into
mov
push
and
scas
inc
inc
loop
xor
cmp
movsb
adc
out
inc
fsubs
in
hlt
mov
push
pop
and
repz
cmp
mov
lods
out
adc
mov
mov
test
jae
xor
sbb
add
push
outsl
pop
and
push
dec
js
mov
scas
je
enter
aaa
jb
scas
cld
mov
repz
repnz
sahf
repnz
bound
push
lcall
push
aas
lcall
nop
pop
pushf
xor
and
std
jo
mov
dec
loopne
xchg
sub
mov
push
pop
jo
sbb
xor
js
jae
or
sbb
add
push
mov
rcrl
addl
adc
mov
lret
out
add
adc
jae
lock
loope
aad
outsb
inc
inc
cli
push
scas
and
cmp
xor
loopnew
loopne
or
pop
inc
and
jo
mov
scas
jne
cmp
in
mov
dec
cmp
daa
dec
out
jb
pop
stc
inc
sahf
mov
push
xor
jns
or
rol
xchg
push
adc
notb
movsb
loop,pn
rcll
xchg
stos
lds
movsl
stos
rcll
add
or
movntps
insl
xor
rorb
rclb
int3
jmp
xchg
lcall
jg
aaa
sub
out
int3
popf
inc
fldl
add
adcl
sbb
push
cmp
add
xchg
cmc
ret
and
fwait
adc
mov
iret
jbe
xchg
inc
cmp
repnz
pop
fbstp
mov
mull
nop
push
cmp
mov
mov
mov
imul
fldt
rcl
addl
pop
mov
push
sarb
sahf
popf
lahf
add
jne
jg
nop
push
mov
xor
dec
add
inc
lods
mov
ljmp
or
ljmp
jmp
js
ret
cmpsl
lahf
and
repz
movsb
gs
push
shlb
ds
nop
mov
adc
jb
dec
jae
ds
ss
add
jns
outsl
je
fs
aad
dec
lahf
mov
test
xchg
mov
dec
jmp
pop
mov
fcom
scas
loopne
adc
daa
daa
xchg
jb
out
out
rcrb
stc
cmp
cmp
lea
cld
push
mov
testb
sub
inc
aam
cmp
cltd
aam
push
icebp
cltd
jmp
out
sbb
into
mov
mov
mov
cmc
inc
mov
ja
mov
lcall
bound
mov
mov
sbb
dec
in
int
loope
cli
xor
inc
push
hlt
xchg
push
aam
lret
into
sbb
leave
nop
loop
jge
out
jmp
loop
push
popa
xchg
jge
xor
outsl
shrl
adc
adc
or
xchg
filds
cmp
dec
into
movntps
movsb
movsl
mov
adc
out
mov
cmp
xchg
in
call
ljmp
lret
pop
xorb
sti
push
add
xchg
mov
sbb
or
clc
cmp
pop
or
adc
mov
adcb
adc
add
dec
adc
hlt
adc
out
daa
gs
sub
fwait
imul
mov
pop
jnp
sti
or
jle
sahf
hlt
mov
aad
push
add
xchg
push
pop
nop
xor
lods
jecxz
fiaddl
shll
insl
stos
dec
add
adc
adc
lods
cmpl
push
cmpsb
xchg
or
jnp
push
loopne
add
dec
fistpll
push
push
xor
sbb
mov
loopne
sahf
mov
jne
ret
push
cltd
xor
jge
addb
pop
pop
add
imul
pop
adc
fsubrs
loopne
xchg
shll
mov
xchg
loope
lret
sti
sbb
cmpsb
repz
push
not
lock
fbstp
cwtl
xchg
sbb
clc
faddl
inc
cmp
fs
sub
mov
std
cmpsb
jae
notl
xor
test
xor
xchg
repnz
inc
xchg
aam
icebp
jno
add
imul
dec
xor
sub
xchg
mov
popf
inc
add
push
mov
int
notl
cmc
push
jmp
cs
push
idiv
idivl
aad
popf
aas
inc
dec
or
jnp
jnp
hlt
dec
cmp
pop
fidivrl
ds
mov
xor
clc
dec
mov
ficoms
clc
flds
es
add
mov
test
cmpsl
rorb
leave
imul
push
jg
push
sbb
ja
mov
and
mov
repnz
or
dec
roll
dec
xchg
mov
pop
cmp
mov
jg
movsb
cmpsl
stos
cmp
or
scas
ss
push
popf
mov
sbb
fwait
inc
fists
stos
stos
stos
cmp
mov
jo
dec
cld
sbb
data16
adc
sbb
inc
movsl
sub
jb
adc
cmp
test
rclb
dec
or
jg
ret
aas
es
ret
mov
push
and
fucomip
push
cmp
cs
lods
or
in
xchg
xor
pop
xorl
test
mov
xchg
push
sarl
mov
adcl
fcmovnb
imul
adc
mov
in
xchg
and
leave
das
repnz
xchg
adc
add
mov
cwtl
push
push
addr16
subb
fcomi
sti
inc
cmp
jne
jecxz
jl
inc
and
outsl
sbb
lcall
jb
ds
outsb
orb
test
sub
dec
shlb
adc
leave
dec
test
lret
fisubrl
xchg
pusha
jne
in
sbb
mov
vpsrld
xchg
xor
cltd
dec
test
cmpsl
je
dec
xchg
jnp
cmc
dec
xor
les
shll
mov
cmp
xor
scas
repnz
dec
mov
lahf
ret
lods
mov
push
lods
pop
lods
outsl
pop
bnd
aaa
fnsave
and
xor
mov
rclb
lretw
dec
lcall
adc
orl
shrl
mov
bound
add
or
mov
push
lahf
loopne
cmpsb
mov
imul
push
sbb
ss
dec
sub
gs
jg
mov
addr16
adc
outsb
and
data16
cmpsb
inc
or
push
cmp
aas
inc
inc
xchg
and
fdivrl
lcall
rcr
arpl
and
mov
lock
ja
shll
mov
mov
lods
mov
in
cwtl
or
jo
sbb
inc
rcrl
cmp
mov
les
dec
cmp
imul
jle
mov
mov
in
mov
jbe
hlt
push
adc
rcrb
je
xor
or
ljmp
fstps
cmpb
mov
push
data16
pop
mov
test
push
packuswb
push
ret
inc
popa
aam
mov
mov
dec
adc
xor
xchg
lods
jmp
lcall
int
cwtl
jg
sbb
or
push
rol
neg
mov
adc
loop
jne
lahf
aam
pushf
mov
fldenv
sub
add
sarl
push
cmc
pop
or
insl
push
xlat
out
jbe
popw
push
lcall
call
ja
test
outsb
into
sti
outsl
and
lahf
mov
or
cmp
bnd
jle
repz
negb
test
cltd
xor
or
test
mov
cltd
mov
out
leave
idivl
adc
add
bound
adc
movsl
or
adc
aas
aaa
adc
dec
jb
int
dec
push
adc
xlat
push
pop
loop
sbb
xchg
push
adc
imul
cmp
jmp
scas
test
mov
insb
sbb
scas
add
mov
pop
mov
dec
inc
lcall
or
cmp
movsb
jbe
adc
test
pushf
dec
imul
push
pop
adc
bound
stos
gs
sbb
xorb
jecxz
pop
addb
jnp
lods
loope
mov
push
adc
xor
dec
xchg
outsl
lea
inc
out
mov
mov
sahf
cmp
clc
push
sub
mov
adc
lret
add
adc
mov
addr16
aas
cmp
icebp
add
dec
nop
aas
dec
jns
je
pop
pop
aad
cltd
mov
jb
cmp
outsb
mov
sub
fcmovnb
xor
test
jbe
popf
jbe
mov
push
sti
xchg
movsb
or
xlat
divb
outsl
and
cltd
jmp
add
je
sbb
push
lods
fsubr
imul
push
aam
int
push
push
pop
not
cmp
test
dec
imul
popf
and
pop
sub
enter
or
jmp
xchg
or
out
inc
rcrl
or
adc
inc
inc
mov
rol
popa
and
outsb
stc
lret
movl
movsl
shll
dec
mov
add
add
fsubs
jo
mov
xchg
jp
bound
fdiv
add
xor
addb
not
fildll
and
push
jo
aam
mov
mov
test
pop
xlat
xchg
jo
mov
mov
sub
cmp
push
jno
aaa
mov
dec
cmp
sub
ljmp
ss
fdivrs
and
sbb
es
fnstsw
adc
cmp
enter
push
loop
adc
xchg
add
sbb
int3
lahf
out
sahf
pop
nop
enter
in
lcall
popf
mov
cmpsl
cmpsl
nop
mov
popf
leave
addr16
in
fisubs
sbb
pop
inc
clc
out
cmp
imul
imul
enter
stos
adc
pop
inc
daa
fcoms
lods
xor
sbbl
xor
mov
in
push
xchg
dec
xor
push
xchg
pop
pop
inc
sbb
add
lret
aaa
aad
add
xor
iret
add
mov
push
push
jp
dec
inc
test
adc
mov
aad
pop
xchg
scas
mov
xchg
iret
popf
or
adc
xor
cmp
lods
mov
mov
arpl
adc
int3
inc
popf
mov
sub
push
dec
xor
ds
hlt
inc
or
mov
loope
mov
inc
jecxz
or
mov
pop
dec
mov
testl
cmc
pop
push
cmp
dec
dec
aas
xlat
sub
js
push
push
jb
stc
decb
jb
lcall
xor
pop
icebp
mov
popa
pop
mov
xchg
lret
lea
fisttps
adc
test
and
movsb
pop
xchg
push
sub
rcrb
push
movsl
inc
call
js
add
fnstcw
cmpsb
inc
sbb
cmp
dec
std
pusha
sbb
insb
jnp
adc
gs
mov
mov
adc
out
inc
xchg
mov
fs
lcall
cs
sahf
xor
stc
add
sar
inc
push
mov
loop
mov
addb
ror
push
sbb
in
push
ret
shlb
out
adc
sbb
loop
cmp
push
xchg
fwait
mov
add
xor
jl
mov
mov
adc
pop
fs
scas
cmp
or
xor
push
enter
jecxz
xchg
lea
fcompl
out
lods
icebp
push
xchg
sub
cmp
and
push
stos
and
inc
hlt
stc
cmp
push
jmp
ss
shll
sub
or
jge
cld
js
mov
int
aaa
cmp
mov
cmp
dec
adc
bound
sahf
or
mov
sahf
jmp
xchg
cmp
mov
lods
push
push
int
xor
in
and
jecxz
push
outsb
lods
ss
gs
mov
and
aad
iret
lea
and
adc
sbb
data16
lret
mov
nop
in
inc
pop
dec
cmpsb
repnz
jp
mov
lcall
stc
das
stos
fsubp
or
jle
push
in
push
mov
movsl
mov
mov
cmpsb
push
loopne
sub
fisttpll
cmpsb
int
push
mov
sub
fdivr
mov
fcmovnb
sbb
pushf
sbb
mov
sbb
aas
inc
sub
ja
cmp
out
and
inc
cmp
cs
sub
fdiv
sub
ja
mov
push
pop
sbb
jae
bound
outsb
add
xchg
into
push
mov
xlat
xchg
fsts
xor
fs
int3
mov
gs
js
cmpsl
push
movsb
sub
jmp
aaa
fsubs
shlb
je
fisubs
shrb
notb
xlat
push
dec
xchg
shlb
rcrb
gs
nop
xor
mov
inc
push
ljmp
xor
mov
jno
push
xlat
cli
fsubrp
fimull
cmp
and
scas
mov
mov
mov
inc
mov
lret
test
jl
cmpsb
inc
lahf
loopne
punpckhwd
aaa
hlt
addr16
pop
sub
fistl
gs
aaa
std
mov
insb
stos
dec
xor
roll
icebp
cltd
cmp
jns
sub
dec
scas
test
fsubl
push
jl
nop
or
and
mov
xchg
mov
daa
jl
stos
push
push
pop
pop
mov
pop
test
jbe
dec
aas
push
int3
ljmp
imul
xchg
out
nop
add
das
lcall
sti
add
das
notb
pop
xchg
es
out
ret
push
inc
in
test
push
adc
leave
subl
pop
xchg
hlt
lds
out
mov
mov
out
xchg
jle
lods
adc
cwtl
push
lahf
jne
popf
and
pop
test
sub
outsl
in
mov
or
or
fwait
mov
jbe
push
xchg
fwait
push
push
stos
movsl
ficoml
call
aas
mov
or
in
jno
js
add
inc
mov
pop
jg
cmpsb
shlb
outsb
push
mov
xor
xlat
push
fiaddl
punpckhbw
dec
stc
in
das
inc
orl
inc
sarl
test
mov
xor
inc
pop
rcl
inc
mov
out
xchg
or
outsl
mov
pop
cmp
gs
ret
sbb
pusha
xor
cltd
mov
outsb
je
dec
aad
mov
cs
or
lahf
outsl
lods
notl
cmpl
cs
cli
and
or
je
dec
mov
sbb
and
rorb
inc
mov
in
adc
mov
mov
mov
sbb
cmp
adc
test
fs
orl
ret
ss
inc
sub
cmp
popf
out
ret
jecxz
std
sbb
mov
shll
leave
lock
xchg
push
adc
or
or
xchg
jmp
dec
nop
jmp
pop
pop
loopne
mov
fists
or
dec
dec
hlt
jb
clc
inc
push
or
outsb
test
or
std
jnp
out
xchg
dec
xchg
adc
psrlw
sbb
push
adc
outsb
std
sub
lret
aas
pop
inc
aam
sbb
mov
adc
sbb
jp
popa
fisubrs
enter
cld
icebp
pusha
add
sahf
pop
sub
arpl
movsl
ss
lds
loop
inc
sbb
sub
hlt
nop
adc
insb
add
test
mov
incb
rcr
fildl
mov
test
and
adc
out
sti
test
mov
insl
and
cmp
icebp
mov
jne
mov
ja
inc
xor
mov
and
fdivs
les
seto
adc
js
jp
xor
cwtl
xor
mov
adc
insl
cmp
sbb
mov
cltd
daa
push
push
adc
les
and
mov
mov
dec
fadds
lock
or
aas
jecxz
push
fnstenv
test
inc
test
xor
shl
and
out
inc
sbb
inc
lahf
les
mov
xor
insb
add
pusha
stos
mov
mov
out
imul
pop
ss
cmpl
inc
cmc
ja
popa
pushf
or
sarl
insl
adc
jns
pop
int
push
jle
in
cmp
aaa
mov
or
mov
imul
mov
jmp
mov
sbb
mov
add
xor
or
inc
xor
push
jecxz
sub
pusha
mov
clc
testl
push
cmc
lds
sub
xchg
inc
inc
add
lock
lahf
or
push
dec
dec
out
stc
xchg
and
stc
push
pop
sbb
xor
lds
rorb
pop
sahf
outsl
imul
dec
mov
xor
xor
xchg
rorb
cwtl
inc
dec
lea
loopne
insl
jb
in
sbb
jbe
mov
add
sahf
xchg
repz
xchg
enter
adc
aas
es
mov
pushf
in
cltd
push
dec
leave
imul
in
imulb
push
sub
jns
hlt
shll
aas
je
push
xlat
ja
lods
imul
out
push
cmp
cmc
mov
mov
lock
or
pop
dec
mov
add
lock
mov
lcall
cmp
aaa
aas
movsl
adc
xchg
loopne
jmp
scas
fs
sarb
or
jns
cld
mov
cs
and
insl
pop
inc
push
scas
lock
dec
ficoms
divl
imul
mov
int
ror
fildll
push
and
jb
les
push
ljmp
nop
ret
popl
fs
shl
insb
mov
outsb
mov
mov
adc
or
mov
pop
jmp
loopne
mov
push
sub
pushf
pop
mov
inc
mov
mov
push
jb
cs
mov
enter
add
add
add
rolb
jne
xorl
pushl
call
sbb
mov
or
mov
mov
adcl
xor
add
movl
cmp
movl
je
mov
mov
sbb
mov
mov
add
mov
sbbl
mov
xorl
add
xor
mov
or
mov
xor
mov
andl
add
mov
movzbl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
incl
mov
add
mov
jmp
sub
mov
mov
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xorl
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
push
adc
mov
mov
and
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
push
call
mov
dec
mov
jmp
andl
movl
add
movl
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jb
and
mov
sub
mov
xorl
mov
mov
sub
mov
orl
jmp
negl
pop
adc
divl
jge
aam
lods
jmp
jle
pop
jp
in
jp
push
inc
or
adc
mov
mov
movsb
aas
movl
lock
jmp
rorl
out
bound
xor
pop
ss
fadd
or
les
sub
xchg
dec
std
or
mov
jnp
aam
jmp
outsb
movsb
inc
nop
shl
neg
movsb
jbe
es
aam
leave
mov
adc
pop
out
sbb
popf
jne
xchg
adc
mov
xor
inc
insb
insb
das
pop
cmp
in
aad
push
mov
stos
cwtl
jb
add
stos
jnp
shlb
jp
test
jno
xor
int3
push
jnp
rcrl
cmp
mov
cmp
sub
mov
and
imul
ja
cmc
or
and
stc
jecxz
movsb
mov
jns
cltd
xor
adc
dec
pop
sbb
lods
jg
ljmp
sbb
fcompl
and
out
cwtl
add
hlt
pop
add
movsb
shll
inc
stos
lods
push
add
icebp
fnstenv
push
sub
ja
nop
int
loope
inc
aas
lahf
xchg
nop
sbb
add
imul
addr16
or
mov
movsb
add
pop
pop
lods
outsl
fnsave
pop
outsl
cli
inc
insl
lcall
mov
push
sahf
mov
push
out
add
scas
int3
rol
scas
outsl
cmpl
popa
sahf
jg
imul
mov
lods
inc
mov
sub
fnstcw
jne
arpl
adc
pop
in
cwtl
shll
adc
mov
arpl
fbstp
imul
jmp
or
filds
repz
insl
pop
xor
call
ret
popa
pop
dec
xor
scas
aaa
push
iret
enter
mov
xchg
xchg
pop
insl
cmp
aam
outsl
adc
inc
pop
mov
pop
mov
movsl
inc
pop
xchg
out
clc
dec
frndint
rcrb
test
xor
repz
and
stos
rcrl
mov
jnp
je
iret
movsl
aam
movb
cmp
std
dec
aas
fsubrl
or
inc
sbb
mov
xor
dec
dec
and
rol
add
add
into
fidivl
sub
mov
aad
lods
ret
out
mov
xor
jno
stos
arpl
mov
bnd
or
and
or
adc
jno
enter
cmp
adc
jmp
jl
mov
adc
adc
into
jle
pop
cmp
test
or
or
dec
xor
and
jmp
pop
pushf
scas
cld
jbe
cwtl
fistl
pushf
jno
mov
inc
or
mov
inc
mov
out
mov
sbb
mov
mov
or
inc
mov
inc
lret
xchg
es
test
xor
loop
test
inc
loope
mov
insl
xchg
movsb
cmpsl
incb
test
sbb
shrb
or
int3
arpl
popf
mov
hlt
fwait
pop
xchg
mov
bts
ja
xor
loopne
mov
or
and
sti
sub
les
mov
lock
xchg
and
das
nop
mov
arpl
jo
rcl
ret
fsub
cmpl
push
cltd
adc
subl
shr
inc
bound
popa
out
jge
mov
and
test
push
mov
int3
lahf
pop
sbb
ret
push
jno
daa
aad
mov
xchg
int
mov
call
or
add
jmp
loopne
and
add
cmpb
add
add
adc
pop
sbb
rolb
rolb
mov
outsb
pop
mov
sti
jl
aad
cmp
jecxz
daa
dec
outsl
sbbb
mov
in
push
insb
dec
sub
sbb
mov
or
mov
lcall
mov
cmp
dec
ret
mov
cmp
xor
pop
dec
loopne
mov
push
lods
fs
xor
pop
dec
or
cmp
std
sbb
fiaddl
lods
je
add
fdivr
cmp
sti
inc
cli
push
adc
jl
dec
xlat
mov
imul
jnp
fdivs
add
jae
sub
inc
and
cmp
xchg
addr16
fcmovne
sbb
lds
sub
les
xchg
dec
push
push
je
mov
mov
je
js
fsin
jmp
or
sub
int3
je
out
xchg
mov
fadd
jne
pop
xchg
js
hlt
jb
gs
inc
mov
mov
or
cli
mov
mov
cmpsb
jg
rcll
pop
mov
dec
es
push
addr16
les
sahf
jbe
mov
mov
cmp
and
jmp
gs
addr16
push
sbbb
cmpsb
arpl
pop
pop
lcall
lahf
dec
mov
cmp
hlt
sub
mov
xchg
adc
dec
pop
and
push
add
cmc
mov
lret
loopne
fbstp
mull
jecxz
inc
imul
idivb
mov
icebp
leave
pop
lods
jb
cmp
jg
push
sbbb
cmp
xlat
fisubrs
push
dec
or
out
jecxz
clc
push
aad
jmp
sub
dec
shlb
shll
pop
jb
es
into
push
xchg
cmpsl
aaa
sub
adc
pop
icebp
sbb
pop
nop
xchg
scas
testl
subl
out
sbb
sbb
pop
jl
inc
inc
leave
aaa
sub
shl
xor
repnz
mov
inc
mov
add
adcl
and
in
dec
inc
aad
pusha
aam
xchg
push
adc
scas
lods
push
pop
es
pushf
sub
jb
pop
xchg
scas
jmp
sbb
adc
xor
imul
lods
in
push
les
loope
dec
dec
push
mov
pusha
imul
cmp
cmp
xchg
in
mov
or
xchg
mov
rcl
test
sub
cli
mov
add
push
cmp
sbb
add
call
imul
ret
xor
gs
mov
sub
add
pop
popf
pop
add
leave
lea
sub
aam
in
cmpsb
ficoml
dec
inc
test
int3
sarl
or
aam
in
cmpb
jp
adc
add
lods
push
cmp
xor
push
mov
iret
sbb
sahf
sbb
outsb
adc
jns
pop
ret
je
adc
cmpsl
pushf
repz
andl
jmp
pop
int3
arpl
repnz
sti
cmc
mov
sbb
int
adc
rol
aas
imul
push
adc
push
mov
cltd
xor
xchg
mov
jns
adc
mov
cwtl
mov
xchg
sbb
jnp
outsb
push
dec
mul
push
cltd
out
sub
xlat
jnp
adc
inc
pop
sbb
inc
dec
inc
or
dec
test
loop
push
lret
and
lret
mov
mov
lret
xchg
bound
mov
movsl
das
sbb
icebp
out
lods
xor
jo
mov
fists
adc
lcall
mov
pop
cmc
inc
out
sbb
js
fnsave
aad
pop
inc
add
mulb
loope
ja
mov
dec
or
repz
adcb
repz
cmp
mov
xlat
mov
sbb
leave
rcrb
inc
jp
inc
adc
xor
sbbb
sbb
push
out
adc
fs
or
jae
cmp
shlb
int
in
rcll
fisttps
inc
push
pop
sub
xchg
xchg
movsb
movsl
and
pop
xchg
and
arpl
test
ja
sbb
sbb
ret
outsb
mov
shl
jmp
pop
adc
inc
int
mov
adc
push
sub
jle
xchg
pop
lods
arpl
movsl
sahf
in
lahf
jbe
out
push
inc
je
jg
mov
push
and
sub
mov
push
mov
jmp
and
lret
mov
mov
push
bound
mov
movsb
xchg
in
pop
arpl
cld
inc
cli
jnp
mov
mov
jb,pn
setbe
cmpsl
mov
gs
test
ss
xchg
pop
popf
rorl
mov
xlat
mov
das
adc
sar
cs
add
xor
ds
dec
test
push
xchg
test
ljmp
push
sti
mov
and
mov
orl
aad
ficoml
sahf
out
mov
scas
adc
or
enter
pop
lahf
mov
dec
or
cld
mov
outsb
andb
outsl
push
sbb
test
dec
xor
cmpsb
repz
stc
in
les
pop
jbe
push
xchg
test
test
inc
add
jbe
adc
mov
loopne
mov
mov
jo
or
lret
sub
in
mov
mov
mov
or
repnz
mov
xor
xor
repz
xor
xchg
dec
dec
push
cwtl
cmpsb
xchg
mov
mov
shrb
insl
jo
mov
mov
fcomi
aas
xor
dec
imul
jmp
loope
or
jecxz
jb
sbb
pop
or
rcl
xchg
bound
scas
xchg
xor
xchg
mull
aad
jne
cltd
pop
cmp
fimuls
mov
call
push
lahf
insl
inc
test
sbb
test
out
dec
int
or
repz
fsubl
pop
stc
inc
inc
shll
test
mov
jo
rolb
clc
inc
outsl
loopne
adc
int3
mov
add
stos
ds
or
fsubs
es
int3
rol
in
push
cmpb
out
fsubrs
inc
sbb
loope
mov
lds
jnp
jbe
pop
adc
add
mov
ds
jl
data16
pop
adc
aas
xor
mov
inc
adc
xor
dec
cmp
cmp
iret
sub
jae
jne
ja
dec
xchg
xor
xor
jae
push
cld
and
add
mov
dec
jae
push
push
sahf
sbb
imul
lds
shll
fnstsw
push
mov
lea
push
testb
xor
sti
dec
in
iret
mov
js
pop
insl
repnz
push
mov
scas
jp
and
shlb
pop
cmp
repz
jg
ja
mov
sub
xchg
mov
sub
adc
loopne
mov
dec
cmp
pop
dec
in
sub
iret
mov
sarb
out
imul
xor
les
test
je
mov
sbb
mov
es
daa
mov
mov
je
ljmp
dec
or
push
inc
mov
notb
clc
decl
cld
enter
lock
mov
sub
pop
adc
mov
test
cmp
inc
fidivs
fldenv
or
rcll
out
imul
add
fiaddl
stos
mov
fs
in
shl
ret
inc
sti
lahf
enter
pusha
inc
dec
push
xchg
sbb
js
fldenv
jo
sub
or
jo
push
ret
pushf
cmp
jmp
sub
cmc
cmpb
shll
fdivp
in
mov
push
arpl
mov
out
lods
test
jg
movsb
sbb
rolb
int
stos
stos
xchg
sbb
xor
xchg
std
pop
and
add
mov
mov
dec
push
push
jnp
mov
arpl
adc
outsl
lret
jecxz
push
test
test
sbb
pushf
jl
sahf
xchg
dec
mov
test
push
sarl
aaa
cmp
fsubrl
stos
pop
inc
out
xchg
bound
clc
ror
hlt
rorb
loope
das
jne
roll
adc
jb
outsl
pop
push
sub
mov
hlt
mov
add
jp
iret
pop
outsb
mov
jecxz
lods
pusha
out
xchg
sbb
fildll
repnz
push
addr16
dec
inc
aaa
aaa
adc
lahf
ja
in
rolb
push
sub
sub
dec
inc
fmull
lock
test
ja
test
out
loopne
lret
sbb
adc
mul
cmp
jp
movsl
adc
lcall
adcb
fnstcw
aam
jg
addb
xchg
lret
in
cs
or
pop
cmp
jnp
pop
aam
adc
popf
arpl
mov
dec
xor
or
adc
xor
test
test
inc
push
lods
dec
hlt
adcb
and
jnp
mov
sub
xor
cli
lds
and
push
addr16
jecxz
mov
hlt
jmp
sarl
ret
aam
loope
jne
mov
int3
mov
movsl
xchg
xor
test
ljmp
mov
inc
mov
cmc
mov
out
sbb
cmp
cmp
inc
cmpsb
pop
or
fs
daa
sahf
cmp
aas
push
fdivr
sub
add
pop
mov
mov
loopne
in
pusha
aas
cmpsl
out
or
xchg
int
mov
fcomp
mov
les
stc
shrb
jmp
jg
sub
mov
mov
fidivrs
adc
lret
push
xchg
movsl
fcmovnb
out
sub
clc
mov
adc
sub
nop
aas
sub
mov
xchg
inc
pop
loopne
fimuls
subl
add
outsl
mov
xchg
mov
or
adc
cli
jmp
fsts
xor
push
sbb
pop
sahf
lret
dec
andl
mov
pop
mov
in
mov
or
imul
xchg
out
cmp
pop
dec
icebp
pop
nop
aas
pop
mov
mov
push
pop
outsl
adc
push
sar
sub
jmp
fistpl
ljmp
popf
mov
inc
or
xor
fiaddl
test
clc
bound
push
jo
enter
fs
loop
sub
cmp
mov
lds
gs
xchg
nop
lds
mov
lret
sahf
daa
xchg
pop
mov
lahf
cmp
into
data16
pop
loope
pusha
xchg
std
in
jns
and
jb
inc
stos
icebp
jbe
fstpt
push
cmp
cmp
inc
dec
or
ja
int3
push
mul
mov
mov
sarb
call
stc
test
sub
leave
dec
pop
pop
adc
rcl
mov
pop
mov
cltd
aaa
xor
add
pop
inc
movsb
jno
leave
mov
push
fildl
repnz
jmp
and
outsl
mov
or
or
in
sub
imull
scas
pop
push
dec
aaa
or
lahf
jbe
outsl
popf
cwtl
fiaddl
dec
bound
sub
and
insb
ds
sbb
sarl
popf
mov
adcb
subb
sbb
push
dec
push
es
cmp
rdtsc
lea
mov
arpl
cmp
jbe
lahf
sub
mov
shlb
js
cmp
popa
and
mov
and
sbb
into
outsb
out
icebp
ret
add
ss
fwait
xchg
mov
aaa
pop
imul
sahf
leave
das
jnp
xchg
lahf
popf
mov
fldenv
adc
xchg
adc
xor
add
gs
inc
cmp
mov
fstl
leave
jmp
rolb
aaa
dec
arpl
pop
lods
xchg
xlat
jae
add
xchg
sar
add
push
movl
scas
push
xchg
push
xor
int
mov
lahf
enter
dec
shlb
fstps
call
jg
jbe
inc
cmc
js
movl
lods
add
sbb
out
jecxz
faddp
push
repnz
mov
out
ss
push
in
test
jmp
jl
sbb
xlat
jae
ret
lock
aaa
adc
pop
int
push
outsl
mov
inc
adc
aaa
arpl
xor
mov
fisttpl
rolb
aaa
pop
lcall
inc
sub
fidivrl
sub
xlat
out
call
jg
and
dec
push
push
cwtl
pop
clc
test
movsb
out
cmp
cwtl
or
dec
xchg
in
and
insl
push
mul
test
mov
das
add
jmp
pop
push
loope
cli
cmp
lret
jp
or
xchg
mov
add
dec
mov
mov
pop
xchg
push
outsl
test
movsl
rorb
faddl
std
push
pushf
xchg
or
outsl
xchg
cmp
dec
fwait
cmp
mov
pop
mov
dec
loopne
and
add
lcall
add
inc
sub
in
shrb
lcall
test
push
scas
push
mov
arpl
ret
xchg
stc
inc
imul
push
imul
jl
fs
cltd
data16
js
pop
xchg
mov
mov
mov
adc
adc
push
ss
xchg
sub
lahf
push
pop
jnp
pop
jne
sahf
cmp
or
adc
mov
mov
mov
sub
mov
push
sub
dec
cmp
sub
xchg
adc
out
pusha
fs
sub
sbb
push
mov
cli
repz
bnd
push
cli
lds
js
je
lahf
adc
xchg
insl
pop
push
jno
js
je
js
jo
cmc
sbb
test
mov
xor
js
stos
lods
movl
mov
cs
pop
lock
xchg
push
fisubrl
inc
mov
in
pusha
xchg
and
nop
mov
loop
jnp
test
nop
sbb
adc
insl
pop
cwtl
and
adc
lahf
add
sti
aas
jle
or
les
adc
jg
lahf
fcoms
mov
dec
in
adc
mov
mov
cwtl
fstpl
push
fmull
cmpsl
stos
inc
push
add
push
mov
or
dec
stos
xor
leave
sub
repz
imul
sahf
jns
stos
sbb
xchg
fildl
mov
add
jge
pop
inc
and
mov
sti
enter
push
sbb
popf
jmp
xchg
jb
mov
sahf
add
pop
jnp
das
scas
into
adc
call
lds
out
in
push
out
test
lods
mov
pop
or
imul
in
xlat
inc
ss
dec
lcall
or
in
arpl
xor
aad
jecxz
push
fdivrp
out
and
nop
outsl
mov
inc
cmpb
daa
xor
subl
pushf
scas
faddl
imul
push
dec
push
es
xchg
outsl
mov
sub
out
and
mov
sbb
hlt
into
mov
jo
or
sahf
cmpsl
or
mov
pop
pop
xchg
mov
pop
ljmp
jl
gs
push
cmp
in
in
lea
adc
stos
mov
xor
iret
shlb
outsb
add
xchg
pop
insb
lds
in
xchg
mov
mov
sub
or
dec
stos
dec
dec
jmp
jnp
cmp
stc
adc
sub
mov
adc
mov
sbb
adc
ds
jb
dec
nop
xchg
xchg
cmc
cmp
mov
cltd
lock
xor
jmp
sub
sbb
iret
lret
movsb
xchg
rcl
mov
sub
cmp
xchg
test
sarb
mov
jp
dec
mov
fsts
cmpsb
xor
sbb
cld
xchg
gs
xchg
push
adc
pop
or
and
pushf
sbb
adc
mov
mov
mov
jne
daa
popf
mov
mov
test
clc
jns
lret
dec
add
sbb
inc
mov
mov
pop
shll
incl
dec
xchg
out
icebp
pop
xor
fldt
ss
and
lods
mov
sahf
jle
jb
aas
cmp
pushf
dec
inc
xor
loope
pop
jns
out
adc
push
add
adc
mov
in
aad
sub
movsb
call
out
xchg
insb
inc
lock
loopne
mov
leave
push
cmp
outsl
dec
je
sar
fdivrl
fcoms
ret
mov
bound
inc
xchg
test
lea
shrl
sbb
repnz
loop
jmp
fs
or
aad
idivl
xchg
push
xchg
scas
mov
jne
fstpl
dec
mov
sbb
movsl
inc
push
jg
out
jecxz
lea
and
jnp
sub
or
add
cmp
in
jno
shll
call
xchg
add
push
cmpl
leave
fisttpll
aam
out
jle
iret
lds
aaa
add
mov
imul
mov
mov
sub
or
push
cmp
aam
in
dec
nop
inc
andl
or
add
add
adc
cmp
in
sahf
mov
sti
dec
xchg
mov
repnz
bound
mov
loope
subb
ficoms
pop
inc
jae
xor
sbb
mov
ret
daa
fs
fdivrs
lock
add
icebp
test
mov
test
arpl
out
push
xchg
in
mov
sbb
pop
adc
divb
ljmp
pop
dec
jo
dec
pop
or
mov
lods
rcrb
test
test
mov
stos
push
sub
mov
sbb
adc
jl
fcmovnb
pop
cwtl
and
scas
rcl
and
fisttpl
pop
scas
enter
mov
push
mov
push
ljmp
sbb
in
inc
adc
and
inc
jmp
pop
sbb
sbb
mov
repnz
in
add
push
mov
out
cmp
add
sub
push
mov
push
adc
fidivrl
mov
dec
xor
lods
dec
jnp
and
sub
xchg
jg
xchg
ficoms
jo
jge
add
cmp
jno
das
ret
stos
inc
sub
pop
daa
sub
add
adc
jmp
push
int3
mov
lea
adc
lcall
rorl
fidivrs
pop
shlb
xchg
out
repnz
gs
pusha
mov
and
jmp
push
cmpb
lret
fsubrp
mov
leave
jp
sub
cltd
sbb
testb
sarb
insl
push
xchg
insb
aaa
and
xor
jecxz
lahf
ret
cltd
cs
idivb
aaa
int
cmp
cmp
xchg
jnp
and
push
xchg
ljmp
fcmovnbe
pop
daa
xor
inc
inc
sarl
sbb
int3
mov
hlt
jp
call
fcmovbe
xchg
inc
mov
vsqrtss
jnp
cmp
xor
sbb
outsb
jecxz
cmp
dec
push
mov
add
pop
lds
test
shll
daa
arpl
cli
push
fildll
es
shll
test
mov
push
clc
cmp
test
jnp
lret
repz
loopne
enter
inc
movsl
int
sbb
fstps
add
pop
inc
aaa
repz
inc
add
fcmovbe
data16
test
sbb
xor
sub
pop
out
movsb
mov
cld
jecxz
jnp
push
adc
es
out
aad
aam
jecxz
xor
es
jl
inc
mov
pushf
clc
mov
insb
fsubs
dec
rclb
xor
lcall
add
jl
and
xchg
es
inc
inc
mov
jne,pt
xchg
and
lahf
pmaddwd
jno
jo
fs
out
pop
outsb
lret
mov
sbb
cli
lahf
xor
sub
mov
and
rcll
add
ljmp
push
call
in
pop
inc
inc
cli
adc
cs
xchg
xorb
mov
stos
inc
scas
pop
adc
loop
lea
sbb
mov
dec
rcll
pop
ja
adc
jne
jnp
out
dec
rolb
popa
push
mov
test
or
lds
outsb
insl
pop
xlat
cli
fildl
pushf
add
add
xor
add
je
movsl
cwtl
push
leave
cltd
incl
pop
pop
cmp
ds
out
jp
lods
xlat
cld
adc
or
push
sub
in
cmc
aad
in
fldl
in
pop
inc
in
dec
in
insb
xchg
jno
sub
insb
sbb
movb
gs
inc
xlat
pop
jno
inc
mov
ret
fmul
add
iret
add
mov
test
mov
out
push
xchg
jae
adc
je
add
shlb
mov
rorl
mov
leave
push
inc
sahf
insl
adc
je
mov
inc
movsb
testb
cmp
xor
inc
in
push
int3
daa
int
add
mov
das
xchg
loopne
ds
aad
rorl
dec
bnd
jecxz
cli
pop
sbb
mov
shrb
pop
xor
sub
mov
inc
add
jecxz
xchg
cmpsl
mov
ret
pop
xor
enter
daa
out
cs
les
ds
sub
arpl
cld
loope
addb
sub
fbstp
lds
mov
sub
pop
xchg
notl
sbb
sub
or
mov
cwtl
pop
lret
lahf
mov
jmp
stos
xchg
fldlg2
mov
in
cmp
cmp
nop
sarl
es
inc
pop
add
push
gs
negl
loopne
cmp
dec
mov
ljmp
outsb
xchg
xchg
xor
sbb
cli
jecxz
lahf
repz
bound
icebp
cmp
cmp
lea
aas
mov
jg
int
xchg
pop
pop
pop
dec
sub
pop
dec
sub
xor
jbe
push
cmpsb
movsb
adc
dec
xchg
inc
daa
pop
mov
xor
push
nop
roll
mov
aad
je
rcrb
sub
in
xchg
jnp
push
xor
mov
bound
rcr
mov
imul
filds
inc
sbb
push
and
loop
js
nop
into
push
imul
mov
push
sbb
enter
jp
insl
or
clc
aas
jge
ljmp
sbb
pop
imul
fidivrs
inc
inc
inc
sub
jae
pop
add
roll
pop
cmp
outsl
mov
insl
sub
jns
popa
rcrb
mov
push
cltd
cwtl
mov
negb
pop
push
adc
pop
push
mov
add
adc
xchg
inc
add
jle
ljmp
sbb
add
mov
movsl
mov
daa
lea
inc
push
in
inc
imul
in
leave
nop
adc
pop
inc
sbb
cmpb
mov
pushf
add
cli
mov
or
cld
dec
icebp
lods
clc
out
cld
pop
xchg
iret
inc
repz
fs
rep
cwtl
cld
add
in
insl
in
loopne
inc
scas
dec
push
hlt
inc
mov
pusha
std
mov
push
push
and
sti
push
adc
mov
sbb
mov
jbe
gs
mov
mov
mov
pop
ss
adc
dec
inc
aam
mov
and
stos
sahf
adc
sbb
mov
cli
fadds
ljmp
xchg
test
ljmp
mov
jae
inc
xchg
mov
xor
mov
xor
inc
fstps
sbb
fisubs
mov
aad
cld
sbb
sub
fwait
cmp
popa
out
test
into
div
test
mov
mov
sub
or
xor
or
dec
out
pop
add
aaa
jmp
lds
movsb
mov
in
in
jmp
sub
js
getsec
add
repnz
movsb
fstp
sub
inc
sbb
les
push
es
mov
out
push
mov
xor
inc
lcall
jne
sbb
std
jae
insb
pushf
mov
fs
mov
adc
xchg
adc
jecxz
mov
inc
add
out
dec
sar
jle
xchg
add
xor
mov
inc
xor
pop
sbb
mov
fdivl
push
movsl
jns
int3
cmp
inc
mov
repnz
mov
clc
dec
cmp
scas
ret
test
fidivl
popf
out
inc
in
leave
mov
in
xor
ret
lock
nop
cmp
not
dec
pop
mov
xchg
push
in
lds
xor
cltd
pop
jno
adc
cmpb
rolb
cmp
adc
xchg
mov
push
dec
test
jg
mov
arpl
sahf
ret
fs
adc
fidivs
inc
fisttpl
pop
xor
or
lcall
es
arpl
pop
call
sahf
daa
jmp
lods
cmpsl
inc
adc
sbb
repz
out
dec
or
sbb
fstpt
pop
data16
jae
stos
cli
dec
loop
cmpb
sbb
nop
addl
adc
shrb
es
imul
aam
xchg
out
jp
mov
xchg
fists
pop
icebp
arpl
inc
inc
pop
push
mov
fidivrs
mov
addr16
jle
inc
mulb
xor
test
enter
test
jne
inc
test
sub
mov
pop
xchg
pop
pop
xlat
jl
mov
xor
xor
xchg
sbb
js
jecxz
jnp
push
jno
movsl
js
push
push
fidivs
push
jge
iret
push
ret
in
mov
notl
imul
pop
in
jae
out
mov
pop
jb
in
aam
adc
or
xor
movsl
out
and
pop
and
shrl
in
or
inc
ds
mov
push
xlat
cmc
mov
enter
popf
inc
fcoms
fcmove
xchg
jnp
fstpt
jns
ljmp
sbb
xor
in
test
add
sbb
sahf
add
loopne
jns
pop
test
and
leave
jge
nop
fstl
movsl
ret
or
outsb
mov
pop
lods
pop
sub
push
lret
pop
in
ss
test
jp
jl
mov
xor
div
push
xorb
push
test
inc
das
mov
icebp
jae
sti
gs
test
adc
xchg
popf
mov
js
xor
sbb
ss
in
fldl2t
test
repnz
xor
jbe
pop
mov
je
sbb
mov
cmp
insl
clc
push
jp
xor
mov
mov
or
jno
ljmp
or
jp
int3
andl
rorb
add
mov
rorb
gs
mov
stc
and
cmp
loopne
mov
jbe
inc
jp
sahf
cmp
fdivs
out
in
xor
inc
es
les
in
sti
pushl
dec
popa
movsl
cltd
imul
scas
adc
iret
addr16
xchg
pop
xor
cmp
mov
jl,pn
lods
std
inc
push
cli
sbb
in
inc
fistpll
and
inc
faddl
mov
push
loope
mov
in
movl
popa
add
hlt
fisubs
dec
mov
cmc
mov
or
in
insb
addr16
mov
popf
sbb
or
in
pop
cmp
sahf
test
loopne
scas
in
add
xchg
and
push
xchg
inc
stos
xor
sub
fsubrp
inc
jns
fwait
movl
and
dec
repz
dec
mov
fcoms
cmp
vmovaps
bound
pop
out
hlt
push
push
out
and
popa
pop
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
jmp
clc
mov
cmpl
push
sahf
insb
mov
pop
jp
dec
add
insl
and
outsl
cmp
or
out
out
mov
and
int
xchg
stc
into
mov
clc
pop
and
leave
sub
pushf
arpl
xor
jnp
lods
sbb
sarb
dec
fst
lods
inc
sti
dec
shrb
push
mov
jge
push
pop
or
sub
push
inc
cmpsl
jecxz
pop
inc
movsl
jno
icebp
cltd
xor
cmc
add
xor
mov
fisubl
dec
ss
movsb
add
and
js
outsb
mov
pop
les
bound
jae
arpl
cmp
mov
gs
and
jge
jo
pop
aas
cmp
adc
xor
push
xlat
scas
push
dec
mov
enter
loop
sbb
jb
and
sub
test
pop
out
imul
inc
cmp
pop
sub
call
pop
inc
mov
stos
notl
push
cmpsl
loop
or
mov
add
mov
pop
inc
jle
pop
xchg
and
aas
mov
loope
or
ret
repz
movsb
lock
out
je
inc
dec
cwtl
ret
cmpsb
mov
ljmp
cmpsb
pusha
sarl
mov
mov
mov
adc
repnz
inc
sub
js
dec
fdivrs
or
add
stos
stos
add
push
ret
pop
lea
mov
test
scas
jge
push
inc
jae
adc
xchg
pop
and
xchg
xchg
movsb
sti
cwtl
pop
mov
cli
ficoml
pop
and
arpl
push
cltd
or
aas
lcall
and
mov
imul
mov
fcoml
push
mov
mov
stos
push
sbbb
iret
jle
mov
xor
popf
into
scas
repnz
outsl
inc
cmp
cmp
sarb
sub
sbb
push
mov
ret
sahf
aaa
pop
movsl
pop
loop
cmpsl
int
decb
add
test
arpl
cmp
xor
sbb
or
nop
jmp
mov
repz
call
push
and
mov
jle
outsb
call
dec
jne
mov
push
xor
movsb
mov
lret
or
add
xor
je
xor
icebp
in
push
js
fcompl
mov
push
mov
inc
imul
pop
roll
gs
stc
movb
in
jae
pop
xor
cld
leave
loopne
mov
ja
or
pop
mov
dec
push
imul
adc
and
sub
xor
and
cs
daa
jbe
pusha
and
jo
cli
popa
int
mov
in
mov
ja
out
add
daa
dec
lock
lock
int3
dec
out
aad
stos
mov
iret
lret
jge
loope
std
pop
and
arpl
xor
fcomp
pusha
hlt
inc
lcall
add
dec
scas
into
cld
insl
pop
mov
lcall
push
lods
fmull
jnp
xor
out
mov
or
push
adc
jnp
jne
push
addr16
pushf
cmpsl
sbb
pop
imul
lods
mov
cmp
xchg
imul
mov
sti
xor
cld
adc
push
jno
das
sub
fs
sub
adc
insb
add
mov
in
andl
cmp
adcl
popa
out
push
loope
or
jg
out
adc
mov
scas
xchg
mov
stos
fidivs
repnz
sbb
dec
enter
cmp
jae
test
push
sbb
jno
hlt
ds
call
push
int3
dec
and
sub
in
push
into
jno
addr16
xchg
pop
popf
add
adc
add
sahf
pop
outsb
mov
jae
pop
popa
jle
leave
lret
mov
lock
ja
stc
push
xchg
inc
jle
iret
out
mov
mov
test
popf
and
adc
repz
xchg
mov
cmc
fmuls
and
test
cmp
stos
push
sub
push
jg
mov
fildl
scas
dec
fdivrs
cwtl
imul
popf
fucomp
xchg
lahf
push
lods
jb
sti
mov
and
jnp
popa
insb
mov
cmp
and
cwtl
and
push
mov
cmp
data16
daa
sbb
scas
fists
pop
jns
lahf
xchg
cld
std
mov
pop
cld
fdivrs
jecxz
jmp
push
movsb
jg
orb
iret
mov
mov
dec
outsb
fcmovne
shrl
push
sbb
pop
insb
jmp
fsubrl
arpl
inc
mov
cmp
cmpsb
aad
scas
push
mov
sbb
mov
ret
inc
push
cmp
aad
popf
xor
xchg
mov
cmpsl
jb
xor
cmc
enter
fs
mov
mov
mov
dec
jle
push
cli
icebp
test
ret
cli
ficoml
push
mov
jl
xor
mov
push
push
fiadds
or
and
pop
fmuls
pusha
push
xlat
sub
into
xlat
or
add
push
push
add
sti
bound
test
mov
lock
dec
and
jbe
loope
clc
out
std
fs
in
cmp
mov
jle
cld
dec
push
xchg
pop
call
ljmp
jbe
pop
fdivl
cmp
stc
mov
add
stc
dec
add
sub
aad
jg
pop
data16
out
stc
mov
pop
pop
dec
add
xchg
and
sbb
sub
sbb
and
push
sub
and
inc
push
into
mov
xacquire
in
gs
push
xor
shrb
ja
xchg
insb
jmp
and
gs
sub
push
cmp
stc
loope
jle
mov
push
daa
adc
aas
cmp
inc
out
out
mov
call
int3
orl
add
fstpl
ret
adc
add
clc
shrl
xchg
sbb
xchg
in
push
sbb
insb
and
jg
popa
hlt
lods
mov
lea
in
std
xchg
mov
nop
or
mov
icebp
sub
and
inc
iret
push
lcall
sbb
push
jne
fstpl
stos
jg
fldcw
rcrl
ret
sub
sbb
mov
fcmove
sar
push
mov
leave
out
out
orl
cmp
xlat
js
and
sbb
fstps
sbb
test
and
test
stos
sbb
cmp
outsl
cmpsb
cmpsb
ret
sbb
in
imul
leave
cmp
add
mov
xchg
jp
movsl
popa
mov
add
push
sbb
sub
dec
mov
xchg
push
dec
or
adc
xlat
jp
test
inc
dec
lods
pop
sbb
mov
sbbb
pop
mov
push
xor
xchg
ret
stos
mov
rorb
mov
call
lahf
fistpl
xchg
lahf
sbb
test
cmp
call
ret
mov
lds
test
add
cmpsl
leave
test
sti
imul
mov
int3
pushf
push
in
push
add
test
xor
cld
push
das
push
pushf
fneni(8087
js
push
cmpsb
and
jne
imul
movl
outsl
in
les
mov
inc
repz
enter
les
lret
cmc
inc
sub
ret
jge
dec
jl
mov
push
pushf
add
inc
cmp
lret
lcall
mov
in
outsl
fldenv
pop
repz
dec
pushf
jge
int3
sbb
imul
pop
adc
sbb
popa
mov
adc
pop
inc
push
xor
rolb
adc
inc
fistpll
adc
mov
mov
add
lahf
movsb
inc
or
xorb
sbb
cld
xchg
mov
adc
inc
push
push
test
bound
icebp
sub
dec
pushf
xchg
into
pop
adc
movsb
sarb
mov
jl
jl
xchg
pop
imul
adc
mov
shlb
inc
cmp
push
adc
cmp
jne
fldl
aas
sahf
das
int
pop
push
in
data16
or
stos
in
shlb
jp
inc
or
nop
fmul
loopne
add
mov
out
and
cmp
arpl
add
ret
das
mov
xchg
jge
xchg
push
mov
cmpsl
and
test
enter
fidivl
jmp
pop
fwait
mov
cmp
mov
xorb
call
dec
sub
mov
xchg
jne
lcall
lcall
cmp
lock
dec
mov
add
je
cmp
xchg
xor
stos
ret
out
insl
jle
std
jnp
dec
mov
mov
mov
scas
dec
in
std
sub
jns
dec
int3
sub
lcall
out
out
aam
adc
test
fs
cli
adc
xchg
stos
adc
jnp
clc
cmp
inc
insl
aam
orb
pop
pop
jg
jecxz
adc
sbb
inc
adc
andl
dec
add
dec
mov
cmpsl
xor
mov
cmp
and
push
inc
dec
jecxz
jns
ss
push
stos
pusha
sbb
stc
stc
mov
rcl
js
dec
in
mov
dec
mov
push
addr16
push
mov
lods
sub
scas
and
stos
addr16
cmp
jmp
sarl
test
sarl
sub
imul
mov
jno
or
xchg
mov
or
pop
test
out
jae
imul
cs
ss
popf
jnp
loope
cmp
and
inc
push
popa
dec
lds
loopne
es
mov
mov
int
push
pop
adc
das
clc
push
push
push
inc
mov
add
imul
lds
adc
insl
testb
cli
movsb
pop
ljmp
enter
push
jge
mov
cmc
lea
mov
fwait
ja
das
insl
mov
inc
jns
aam
jecxz
icebp
js
sbb
insl
cld
adc
add
cs
ret
add
rcl
dec
add
push
shll
or
jle
fwait
repz
xchg
mov
push
lock
adc
dec
xchg
inc
ret
jp
mov
fnstcw
inc
shll
pusha
mov
rclb
jb
pop
inc
js
sbb
addl
ja
f2xm1
mov
inc
movsl
lods
mov
sub
cld
rcl
jnp
in
adc
sti
xor
into
jne
movsb
test
sbb
cld
add
inc
fwait
dec
stos
or
fcoms
jl
mov
pop
loopne
sub
in
push
fnsave
in
loope
gs
or
negl
mov
push
mov
call
inc
fidivl
or
sub
dec
test
lock
pop
inc
int
cld
ret
mov
call
dec
mov
fsubl
xchg
add
xlat
add
sbb
lds
fbstp
enter
lds
jecxz
mov
xlat
dec
dec
in
js
je
xchg
out
or
aas
sbb
adc
pushf
push
xchg
mov
dec
mov
xor
push
add
jo
sahf
test
xor
ret
sub
dec
pop
jae
xor
jge
scas
clc
mov
sub
mov
pop
cmp
imul
cmp
popa
push
cmp
in
js
mov
inc
mov
sbb
rcll
jnp
bound
pop
sar
mov
pop
push
hlt
ret
cli
inc
xchg
mov
xchg
mov
mov
jmp
clc
imul
in
fistl
xchg
sub
daa
push
pop
xchg
push
cmp
pop
insb
dec
mov
sub
sahf
lods
test
mov
std
aaa
sub
enter
movd
mov
fisubs
add
inc
icebp
loopne
pop
mov
adc
mov
icebp
aaa
xchg
outsl
and
and
xor
or
dec
sarl
js
fbld
or
fwait
imulb
mov
dec
mov
dec
jno
xlat
mov
mov
rcll
test
dec
mov
idivl
xchg
cwtl
lret
sub
out
jle
and
fs
adc
add
cs
decl
mov
sbb
xor
jmp
mov
enter
stc
ret
adc
aam
aas
push
adc
stc
mov
adc
sti
push
loope
push
adc
sti
mov
shr
or
gs
pop
das
and
cmp
mov
push
jp
inc
mov
mov
outsb
cwtl
std
mov
xchg
push
lret
jl
add
dec
fdivr
jb
mov
and
add
movsl
lea
push
or
out
icebp
insl
std
mov
shrl
push
adc
push
scas
les
mov
sbb
mov
addr16
inc
lock
adc
xor
sbb
imul
fstpt
ja
lock
push
mov
cmp
movsl
sbb
sub
push
sub
movsl
fildll
ja
jecxz
cmp
xor
mov
call
push
nop
lahf
xchg
jmp
popf
cmpsb
pop
add
mull
outsl
jle
inc
adc
cltd
rol
push
aam
jp
mov
jnp
fscale
imul
adc
xchg
mov
adc
jns
ret
jne
xor
or
mov
mov
and
jmp
mov
adc
cld
rcll
sahf
adc
xor
xor
sar
push
mov
frstor
cmp
mov
test
add
mov
outsb
add
adc
dec
insl
nop
fists
addr16
pop
les
imul
loope
push
pushf
notl
dec
orb
xor
mov
add
rcr
xchg
mov
sub
pushf
scas
scas
aaa
pusha
in
notl
jns
and
sti
cmp
dec
inc
sahf
fisttpll
mov
mov
imul
xchg
pusha
js
outsb
arpl
cmpsb
adc
jecxz
sahf
lea
movsl
xor
mov
jb
xchg
lock
sub
pop
divl
loop
arpl
dec
jae
loope
lods
mov
flds
imul
stos
sti
jne
or
sbb
enter
cmc
mov
data16
adc
xor
gs
xor
aas
add
and
int
and
dec
xchg
xchg
xchg
push
out
or
je
fsubrp
loope
sub
subl
dec
pop
cltd
push
rorb
or
das
inc
pop
lods
scas
iret
dec
fcompp
xchg
pushf
push
pop
mov
mov
pop
inc
xchg
subl
and
pushf
lcall
jbe
daa
and
cli
sub
mov
mov
fwait
add
pop
lods
mov
xor
pop
lahf
shlb
in
dec
popa
loope
and
loop
rep
add
fwait
jae
or
jmp
push
xlat
inc
pushl
or
adc
mov
mov
pop
sbb
add
shrb
imul
scas
adc
add
push
arpl
shl
nop
aas
std
fistps
ljmp
or
leave
xchg
xchg
ljmp
divl
mov
cmp
and
fbld
mov
icebp
push
pusha
hlt
or
jl
das
jb
jg
mov
icebp
xor
xchg
pop
xchg
push
enter
dec
pop
jns
arpl
push
push
enter
pusha
sarb
subl
pop
fildl
push
jp
into
icebp
jmp
push
pushf
jnp
jg
aam
pop
mov
mov
sbb
and
push
ret
pop
pop
dec
sub
mov
ds
dec
dec
repnz
adc
sub
fldt
pusha
inc
sbb
sbb
bound
inc
imul
cmp
in
add
sub
jecxz
mov
sub
loopne
in
mov
sbb
pop
fstl
test
add
enter
ret
add
mov
mov
mov
push
sbbb
mov
dec
ss
repz
push
jnp
mov
repnz
xor
iret
addr16
adc
dec
imul
add
cmpsl
cmp
pop
sub
das
xchg
dec
mov
lcall
jge
inc
fidivs
data16
push
loopne
sti
mov
fwait
aam
cmpsl
fdivrs
inc
push
clc
fwait
dec
imul
add
in
loope
shr
outsl
pop
pop
ret
push
jno,pt
inc
lcall
push
mov
pop
sub
lds
lods
jp
and
test
lods
fcmovnu
dec
cli
adc
aam
jp
lock
popa
jle
mov
dec
push
sbb
les
mov
enter
or
icebp
jg
mov
pop
cli
gs
stos
lods
mov
xchg
mov
push
add
lcall
roll
stos
mov
test
cltd
jmp
cmp
icebp
mov
jne
sbb
adc
insb
iret
adc
xor
scas
fstps
jmp
jp
aas
add
add
in
inc
rcll
int3
xchg
hlt
add
test
add
push
aam
cmp
cmp
dec
xchg
dec
sbb
jae
aas
test
stos
inc
movsb
add
ret
jne
movsb
fcmovb
idivl
mov
jo
adc
mov
or
repnz
ret
adc
or
shll
jae
dec
inc
inc
sahf
cmc
pop
add
test
sahf
int
sub
jnp
loop
sbb
mov
call
out
fs
aas
lods
sub
push
sbb
and
or
pushf
push
mov
sbb
sti
xchg
cmp
mov
push
jmp
popf
lcall
je
adc
sahf
push
or
pop
dec
test
xor
jnp
pop
xor
mov
xor
fidivl
in
and
inc
adc
push
ret
xor
leave
ds
sarl
xor
xchg
pop
ds
adc
inc
jl
sarl
aaa
mov
xchg
sub
cs
fdivs
pusha
xchg
out
or
les
xchg
adc
xchg
jb
adc
add
push
push
incb
movsl
pop
sbb
into
std
fnsave
inc
xchg
cmpsl
jcxz
cmp
lock
pop
inc
fs
andl
cmpsb
adc
iret
or
cmp
pop
mov
cmp
push
popf
cld
cli
scas
xlat
xor
ret
bound
jo
inc
push
mov
int3
movsb
xlat
push
fstpl
fs
shlb
popa
adc
xor
or
jmp
ficoml
sbb
mov
ja
aaa
xor
push
inc
sub
mov
xchg
lods
jle
clc
pop
xchg
add
jbe
mov
movsb
dec
testb
and
or
fwait
not
inc
mov
ja
xchg
iret
mov
ret
outsb
fwait
xlat
fmulp
insb
xor
vmread
dec
rclb
int
mov
push
push
push
inc
gs
or
cmpl
inc
sbb
inc
xor
dec
jns
mov
fildl
sbb
sbb
loopne
push
lds
adc
push
jle
sub
popa
dec
add
frstor
jecxz
dec
pop
in
sub
xor
mov
sti
jae
vcmpss
jp
and
sub
push
aam
and
movsb
push
stc
pop
and
lahf
dec
fdivl
push
xchg
and
test
and
fsubr
cmp
push
test
add
jnp
rcll
or
out
lods
int
sbb
inc
push
adc
add
jmp
push
data16
mov
fdivs
out
movsb
mov
pop
or
sbb
sub
sbb
in
lret
mov
dec
gs
mov
inc
test
fbld
sahf
and
mov
aaa
mov
js
adc
mov
scas
loop
movsb
jg
lahf
rolb
mov
push
lds
push
xchg
jo
xchg
es
jae
ficompl
cs
push
xor
out
sub
jle
jb
xchg
xorb
sbb
out
cmp
ret
mov
jne
push
insl
xor
daa
test
push
fsts
and
lds
sub
sub
in
cmc
std
std
out
adc
mov
dec
dec
rcrb
xor
xorb
xor
fisttpl
scas
mov
and
addr16
into
xchg
adc
aaa
xlat
xchg
stc
sub
cmpsl
insl
sub
cmp
dec
in
mov
out
and
imul
mov
lret
outsb
dec
stc
cmp
aaa
sar
clc
cmpsl
jg
jnp
adcl
sbb
cltd
add
test
in
loopne
and
outsb
sbb
test
xchg
jae
inc
xorb
mov
sti
test
push
loope
iret
cmp
xchg
add
es
test
hlt
call
inc
imul
pushf
push
test
mov
and
repz
iret
out
xor
mov
lret
lahf
mov
nop
xor
sub
lea
jle
out
cmp
and
mov
ret
call
cltd
psadbw
js
repz
add
icebp
sahf
jb
xor
push
mov
ljmp
int3
jmp
adc
cmp
xchg
cmovb
pop
cmc
mov
push
pop
mov
push
test
scas
xlat
ret
jae
xlat
and
adc
pop
add
rorb
decl
xchg
mov
stos
sub
xchg
rorl
test
push
cmp
in
mov
test
push
outsb
fildll
xor
and
inc
mov
pop
out
cmpsl
out
decb
js
dec
and
xchg
imul
jle
leave
psrlq
andl
push
xor
ljmp
inc
sub
popf
stos
mov
xor
mov
mov
push
stos
mov
clc
xlat
push
and
scas
movsb
push
fsts
or
fistpl
xchg
add
dec
and
add
orl
xchg
test
dec
fcos
sarb
in
pop
push
sub
sbbb
jge
cli
lahf
test
scas
dec
pop
sahf
lcall
or
jno
jmp
lret
push
loopne
mov
movsl
and
and
test
pop
dec
into
mov
stc
aaa
or
dec
sub
lahf
sub
mov
adc
jmp
pop
dec
in
mov
rol
stos
mov
cmpsl
rcl
out
pop
cmpl
repnz
les
mov
push
add
out
test
out
xchg
pop
daa
jg
xor
int3
bound
or
inc
lcall
imul
mov
push
pop
jp
push
and
sub
push
lret
test
sarl
fistpll
lock
in
in
jge
pop
daa
push
movl
cmp
adc
xchg
cmpsl
push
call
aas
out
sbb
testl
inc
xor
push
jmp
jnp
stc
mov
ljmp
add
jbe
xchg
push
pusha
cmp
popf
jb
loope
cmpsl
loope
xchg
lret
loope
lods
ja
sbb
inc
jo
movlps
loope
or
gs
cmpsl
stc
xchg
jecxz
mov
inc
lods
movb
pop
mov
in
adc
or
sub
push
cli
xchg
inc
sbb
mov
cmp
sbb
xchg
jmp
mov
insl
pusha
das
cwtl
sahf
insb
mov
jae
pop
shrb
sbb
dec
jb
inc
es
stos
jnp
xchg
xchg
std
clc
mov
jae
test
imul
xchg
daa
inc
sar
pop
cmovno
dec
mov
cmp
out
inc
dec
rcll
arpl
rcl
sub
sub
sti
inc
mov
loope
faddl
pusha
dec
fwait
cs
cmpsb
jbe
insl
test
adc
sub
cltd
inc
hlt
mov
xchg
fmull
cmpsl
sub
push
fists
inc
sub
pop
pop
aad
fadd
insl
mov
push
jne
sub
sub
aas
das
mov
call
test
push
xlat
jne
mov
pop
xchg
xchg
in
mov
jns
fnstenv
das
shr
dec
mov
mov
adc
jo
mov
xor
and
repz
add
xchg
aas
xchg
dec
mov
outsb
imul
mov
inc
sti
gs
shrb
mov
xchg
aad
bound
les
lcall
les
push
xchg
int
fwait
movsb
mov
adcl
xchg
mov
in
push
mov
mov
imulb
xchg
mov
or
imul
mov
push
xchg
mov
xor
mov
mov
addr16
sbb
cli
or
cld
adc
or
push
sbb
jmp
jg
in
jnp
sbb
sbbb
jl
sbb
stos
adc
xor
ljmp
pop
mov
ret
sbb
xlat
dec
cs
test
mov
adc
jnp
add
jecxz
push
mov
pusha
mov
adc
out
xor
pusha
mov
mov
cmp
pop
adc
movsl
xchg
push
inc
and
add
iret
xor
test
jmp
stos
mov
cltd
ret
in
mov
jecxz
dec
cld
sbb
arpl
jno
mov
daa
jns
arpl
mov
xor
mov
test
xchg
sbb
jb
or
push
fwait
cmpsl
aaa
jge
and
sbb
cmpsl
movups
aam
iret
push
in
xchg
pop
mov
or
addb
mov
dec
add
sbbl
cmp
and
std
jl
fcomps
test
jo
enter
lods
aad
mov
imul
adc
inc
testb
push
add
pop
ja
push
push
call
dec
lret
and
fcompl
iret
pop
divb
xchg
inc
shlb
stos
scas
push
adc
push
addr16
push
and
rcll
and
add
jle
jmp
jb
mov
iret
paddq
int3
std
pushf
scas
movsb
dec
or
in
movsb
lods
inc
fsubl
jle
or
mov
jae
xchg
rcl
ret
insb
aad
dec
pop
sub
jns
sub
pop
sbb
fidivl
inc
mov
mov
cwtl
inc
fstpt
pop
loop
xchg
out
cs
mov
add
push
loop
jle
xchg
out
mov
call
pop
and
mov
add
fsubrs
out
mov
jne
roll
fbld
ss
inc
jge
adcb
jo
mov
fnstsw
hlt
xor
mov
lret
testl
ret
pop
popa
mov
push
in
push
movsb
add
lea
jo
xchg
and
push
in
jmp
adc
sub
xchg
mov
lods
or
mov
movsl
add
mov
addr16
pop
jne
xlat
sar
in
sbb
mov
sarb
dec
insb
dec
jb
pop
adc
mov
pop
inc
orl
sbb
xorb
lock
out
rorb
repz
repnz
inc
mov
jne
and
into
xor
mov
add
ret
idiv
push
or
fnsave
int3
push
mov
jmp
adc
testb
jle
aad
push
cmp
dec
cmp
cmpsb
push
and
sbb
inc
mov
bound
imul
clc
push
outsb
cmp
mov
bound
movsl
xchg
xchg
pop
pop
pop
inc
lret
xchg
shlb
pop
les
rorl
imul
ret
sub
cmp
fwait
popa
pop
stos
cmpsb
sub
aaa
les
or
mov
in
push
stc
dec
xlat
mov
and
sbb
cld
enter
mov
xor
xchg
pop
insb
ja
cwtl
adc
dec
ja
aas
and
aaa
in
push
test
mov
adc
inc
lock
adc
repnz
inc
xor
lret
outsl
cmp
stc
jno
or
rorl
pop
or
adc
aam
daa
ds
push
xchg
neg
push
xlat
movsl
lret
add
and
es
inc
rcrb
push
cmp
jg
aas
jg
cmc
push
jnp
xchg
inc
ja
push
es
pop
push
xor
sub
hlt
sbb
cmp
popf
and
nop
mov
adc
movsb
push
mov
xorb
pop
out
and
adc
adc
sub
lods
and
mov
push
add
pop
push
dec
mov
aam
daa
adc
loop
loope
jp
xchg
lea
cmp
fidivrs
push
repnz
scas
sub
aad
insl
adc
jb
mov
sub
mov
pop
dec
fwait
mov
dec
sub
mov
dec
gs
pop
sub
fxch
jno
mov
loope
scas
mov
mov
mov
pusha
push
cmpsb
pop
dec
push
xor
pop
inc
cltd
xor
inc
std
push
push
push
je
dec
add
inc
gs
and
xchg
or
cli
mov
insb
xchg
sar
or
popf
mov
and
xor
push
stc
loop
repnz
push
out
lods
jns
lea
xor
xchg
fs
imul
popf
dec
xor
xchg
sub
mov
mov
cwtl
lcall
or
in
adc
movsl
xchg
jg
dec
cwtl
orl
icebp
and
xchg
shll
loope
adc
mov
sub
aaa
dec
mov
cmp
rcl
mov
pop
jne
jge
push
mov
jle
push
jbe
dec
mov
inc
mov
dec
sub
loop
xor
shl
mov
or
scas
popa
inc
cmpsb
mov
pop
and
imul
bound
pop
xor
andl
in
lods
stos
or
jl
cli
insb
ljmp
out
inc
or
cwtl
scas
insl
daa
test
sub
mov
mov
fs
push
cmp
dec
rolb
scas
mov
add
out
mov
cmp
sub
dec
out
lcall
in
cld
xor
inc
mov
popa
aad
and
jo
push
pop
cld
jg
movsb
test
mov
adc
dec
or
and
fnstsw
stc
xchg
enter
mov
shll
fdivl
jl
sbb
cltd
pushf
mov
imul
out
mov
cld
jo,pt
pop
or
sub
adc
xchg
sub
je
xor
jmp
dec
pop
es
mov
and
mov
inc
sub
xor
push
push
and
fmul
fwait
loopne
adc
je
jne
adc
clc
mov
cmp
lods
cmp
cmp
mov
fstpt
loope
adc
sbb
add
mov
repz
arpl
sub
test
xor
inc
jae
mov
insl
mov
hlt
outsb
sub
sbb
jnp
lds
je,pn
les
cltd
and
jae
cmp
out
jne
pop
fmuls
rorb
mov
pop
jmp
push
test
shl
inc
mov
arpl
push
pop
fisubrl
mov
and
cmp
pop
pop
dec
ds
push
add
cli
xor
addr16
hlt
cli
adc
icebp
div
arpl
cmpsb
adc
sti
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
add
movl
xorl
lea
sbb
mov
add
push
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
mov
sub
xor
mov
xor
mov
sub
lea
movzbl
adc
mov
mov
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
push
call
jmp
mov
xor
add
mov
mov
add
mov
mov
addl
add
sbb
push
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
movzbl
sbb
mov
adc
mov
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
add
dec
mov
jmp
mov
xorl
add
cmp
movl
je
movl
mov
movl
jmp
mov
mov
cmp
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
add
mov
add
xor
or
add
mov
sbb
mov
add
mov
xor
movl
add
addl
imul
addl
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
jmp
neg
jns
xchg
mov
popf
outsb
mov
inc
or
add
inc
pop
jp
push
add
push
shll
imulb
je
cmp
inc
jge
imul
mov
enter
lcall
cmpsb
daa
imul
fdivp
xor
mov
and
mov
dec
cmp
icebp
mov
xchg
ljmp
sbb
sahf
enter
hlt
jne
into
scas
ljmp
sub
cmpsl
pushf
add
cmpl
sbb
outsb
jg
xlat
xor
adc
test
mov
movsb
daa
inc
movsl
mov
jne
mov
and
sti
push
wrmsr
insl
mov
and
push
aam
movsl
and
cmp
sahf
mov
clc
mov
lods
out
in
adc
push
xchg
dec
xchg
out
push
sub
mov
or
sub
xor
movsl
or
cmp
mov
sub
imul
imul
jne
push
add
sub
inc
sbb
dec
sub
inc
cmp
test
lcall
movsb
jb
and
adc
push
sub
cmp
in
lods
pop
xor
lock
ds
dec
jbe
push
int
stos
sub
cld
jle
mov
test
push
fs
or
mov
add
lahf
out
enter
cltd
push
and
popf
xor
mov
mov
xchg
jns
or
mov
inc
lret
mov
lock
inc
arpl
push
mov
dec
dec
pop
xor
xor
mov
ret
mov
aam
sub
dec
mov
jp
aaa
popa
sbb
dec
lods
mov
inc
stos
icebp
pop
push
popa
xor
div
jecxz
mov
int
imul
push
into
sahf
adc
lahf
mov
xor
dec
jg
ds
mov
push
mov
sbb
mov
jge
sub
push
xchg
push
sbb
test
xchg
adc
and
stc
jb
push
xor
in
jle
mov
sbb
mov
jns
xchg
dec
push
push
pushf
lahf
int3
loopne
inc
aas
out
mov
dec
adc
into
mov
mov
mov
popl
or
pop
in
mov
ret
pop
push
mov
xchg
add
jmp
sarb
les
popf
mov
bound
fidivrs
es
test
adcb
jno
cld
and
cs
fisubs
xchg
inc
cmp
test
adc
jg
lret
ficomps
cmp
int3
scas
mov
scas
cld
outsb
stos
pop
shr
jb
lahf
xchg
xchg
dec
insl
cmp
cmpsb
insb
xchg
in
dec
je
out
xor
lcall
fidivrl
mov
jp
je
jns
sbb
stos
sbb
and
mov
stc
and
mov
xor
xchg
movsl
add
clc
inc
sbb
mov
bound
jp
mov
outsb
out
insb
mov
sbb
mov
pop
add
xor
movsb
push
leave
sbb
lcall
imul
movsb
add
ds
shlb
int3
out
loope
insl
loopne
mov
jno,pt
sti
das
test
aad
sub
fidivl
stc
rcrb
push
push
mov
into
je
push
and
ss
rcll
fisubrl
fsubs
bound
insb
xor
rcl
pcmpeqw
cmp
push
add
or
push
in
adc
sbb
jb
adc
mov
out
rol
imul
pop
pushf
lret
movsl
or
inc
jp
mov
iret
push
std
dec
stc
mov
xor
cld
out
test
xor
and
inc
adc
dec
orl
lahf
xor
dec
adc
dec
imul
aad
cmp
out
out
add
and
mov
bound
in
in
mov
add
add
adc
sbb
out
aaa
out
xchg
xor
sub
fwait
jp
sub
inc
arpl
xchg
cmp
lcall
adc
inc
ljmp
fwait
cmp
mov
movsl
mov
scas
dec
mov
pop
jmp
mov
xchg
jne
xchg
fs
xlat
nop
aaa
imul
jb
andb
test
enter
adc
out
pop
adc
enter
pop
sub
inc
or
clc
in
mov
pop
lds
cltd
push
pop
loop
sbb
xor
jmp
scas
fisubrs
cld
insb
test
stos
sbb
popf
cli
jmp
mov
lahf
and
jno
xchg
jb
daa
jae
lret
dec
jno
mov
lods
push
ljmp
mov
pop
dec
stc
test
sbb
sub
iret
mov
out
aad
ja
ja
pushf
jae
sbb
js
lret
jbe
pop
iret
jmp
shl
sbb
ja
push
testl
pminsw
and
xchg
pop
ds
sbb
aas
or
inc
ljmp
xchg
dec
push
push
mov
xor
aas
pop
mov
insb
jbe
cmpsl
dec
inc
dec
out
cmp
jb
rcrb
enter
ret
call
fdivrl
and
xor
imul
dec
in
push
jp
or
push
and
jae
pop
jle
enter
adc
arpl
mov
cmp
jae
dec
mulb
stc
dec
bound
add
xor
nop
sub
inc
jb
imul
sti
xchg
or
pop
shrl
jge
lds
test
add
fsubl
in
into
jl
cmpsl
mov
mov
inc
mov
enter
scas
inc
pop
mov
gs
sub
imul
push
repz
aam
jge
test
daa
xor
iret
lret
loopne
icebp
loopne
cs
loop
jg
stos
mov
and
push
inc
notl
sbb
xor
fsubs
xor
imul
mov
pop
or
addr16
stos
movl
stc
loope
outsb
xchg
ljmp
or
sub
mov
out
loopne
xchg
add
rcr
mov
and
pop
out
push
test
shl
push
jecxz
mov
jno
push
mov
adc
and
ja
push
inc
cmp
or
shrb
cmp
jno
andb
push
xchg
pop
or
xor
and
xor
jl
jo
jo
mov
test
ljmp
mov
sub
and
enter
into
js
jle
dec
je
pop
enter
shlb
stos
rclb
andl
pop
test
ds
sub
pop
mov
int3
push
sqrtps
dec
fwait
mov
cmp
sub
loopne
lret
lds
iret
stos
mov
icebp
and
stos
out
hlt
mov
and
fwait
loop
mov
ljmp
and
lds
es
insl
mov
or
lea
jb
cld
mov
out
jecxz
mov
pop
jae
mov
dec
push
cli
push
jne
sub
jge
cltd
fists
or
in
std
lret
jae
push
sub
add
clc
int3
sbb
mov
sub
sub
push
inc
loopne
sub
imul
sub
add
jbe
dec
mov
push
scas
mov
and
setne
jp
cmc
xchg
jns
and
lock
adc
gs
imul
popf
add
add
adc
pop
repnz
cmp
andb
xor
cmp
jge
js
mov
jo
dec
xchg
inc
push
mov
push
sub
push
bound
mov
fsts
nop
add
cwtl
jb
cmp
pop
dec
jmp
sti
ds
mov
popa
mov
lahf
jle
cwtl
add
ja
loopne
jbe
adcb
dec
loop
push
dec
sbb
xchg
push
in
adc
aaa
int3
shlb
out
push
push
testl
or
push
inc
fidivrl
std
cmpsl
jmp
xor
mov
adc
pop
push
sbb
imul
fs
inc
bound
xchg
lret
mov
out
cmp
shlb
ret
dec
cld
adc
es
cmpsl
cmc
lcall
into
add
lahf
jecxz
xchg
sahf
mov
cmc
jnp
mulb
sub
pop
pop
sbbl
dec
pop
jle
rcrl
out
pop
jnp
scas
ja
or
add
sbb
sbb
daa
es
sub
movsb
mov
icebp
jb
or
xor
imul
jno
adc
fwait
in
sub
mov
out
es
hlt
loopne
sti
and
cmp
fstpt
and
scas
mov
add
ret
pop
xor
pop
xchg
loopne
inc
leave
xor
scas
or
cmp
sbb
sbb
subl
pop
adc
aad
xchg
rcrb
and
mov
cwtl
sbb
jne
in
mov
arpl
lret
xchg
ficoml
js
or
and
int3
js
mov
push
mov
popf
mov
xchg
or
scas
fldl
push
and
mov
push
in
mov
loopne
mov
ret
sub
xchg
out
xchg
out
cltd
js
and
pusha
jl
imul
cmpsl
rcrb
cmpsl
stos
jmp
push
and
insl
idivl
cli
add
push
jecxz
in
mov
push
push
push
push
dec
push
sub
in
xchg
popa
mov
icebp
mov
push
pop
inc
das
cli
iret
jne
lahf
inc
js
cmpsl
cmp
sub
aad
adc
loope
sub
push
pop
cmp
gs
aad
pop
dec
sti
testb
mov
sbb
cmp
xor
add
repnz
cmpsl
jbe
mov
and
insl
mov
jnp
jge
hlt
pusha
mov
call
push
and
lock
ss
mov
jl
adc
clc
loopne
push
orl
sub
insl
push
inc
ds
int
aam
or
xchg
addr16
imul
push
push
xchg
and
lock
adc
pusha
outsb
test
inc
cmp
sti
push
dec
out
inc
out
test
mov
sbb
and
lret
aas
notl
cmp
shl
add
test
mov
sub
mov
pop
dec
adc
idivb
sub
mov
lods
add
shrb
movsb
sbbl
pop
scas
and
dec
sub
sbb
adc
xchg
xchg
push
pop
hlt
jp
popf
aam
pop
pop
inc
fucom
gs
lods
iret
icebp
into
lea
jns
pop
sysenter
jmp
fs
dec
dec
jne
mov
sti
jns
sbb
imul
pop
in
pusha
jge
gs
test
int3
pop
mov
cmp
in
jae
or
xchg
xor
xchg
in
popf
lret
js
shr
stc
sub
mov
inc
add
dec
pop
add
popf
sbb
ret
inc
xchg
cmp
pop
dec
push
fwait
sub
adcb
mov
cli
inc
xlat
aam
lods
mov
add
dec
jg
add
adc
sti
imul
and
sub
mov
jb
xor
pop
movsl
shl
mov
mov
cltd
mov
rol
jl
xor
push
adc
fcmovnu
dec
leave
sar
add
and
pop
xor
stc
sub
ljmp
arpl
pushf
jle
jl
lahf
sub
inc
in
xor
xchg
cmpsl
mov
pushf
inc
inc
push
int
inc
shl
mov
fcomps
push
xor
mul
pop
push
or
mov
je
jecxz
push
negl
ljmp
mov
cmp
std
pop
sub
mov
adc
cmp
xor
jl
cwtl
cmc
decb
or
and
jbe
adc
adc
xor
xchg
or
iret
sbb
xor
jmp
jnp
inc
mov
outsl
movsl
pop
sub
sbb
mov
and
popa
ret
test
in
sub
out
mov
sahf
jle
xchg
cltd
add
jecxz
addr16
xor
fiadds
xchg
xor
adc
sub
jno
clc
or
xchg
pop
pop
pushf
jbe
imul
sti
roll
dec
call
movsl
ret
test
or
int
mov
pop
popa
adc
add
test
xchg
cwtl
inc
js
sub
or
mov
and
int3
pop
bound
fdiv
jns
outsl
push
jo
mov
sbb
notl
push
adc
lods
jne
imul
iret
jmp
cmpsl
push
jne
fiaddl
and
scas
push
mov
and
in
mov
das
push
push
shrl
xchg
pop
lods
loop
nop
mov
incb
aaa
jl
cs
jbe
cmpsb
fistps
out
inc
stos
mov
jp
pause
adc
enter
cmc
mov
jae
icebp
add
inc
xor
insl
hlt
mov
mov
push
clc
jp
lret
mov
jne
mov
mov
cmp
xlat
sub
paddw
cmpsb
mov
subl
pop
mov
out
cmp
mov
sub
aaa
dec
push
push
ret
xchg
aad
das
jl
xchg
xchg
call
inc
or
add
mov
sbbb
xchg
ljmp
gs
jmp
and
cmpl
call
pop
mov
jnp
push
dec
call
aam
or
mov
mov
lds
or
cmpsb
out
mov
push
push
rorl
pop
popa
jg
pop
scas
cmpsb
adc
pop
and
repz
mov
push
ret
and
out
in
pop
testl
mov
add
loope
aaa
xor
push
and
dec
cmp
adc
sub
push
push
sbb
ljmp
scas
movsb
pop
testl
mov
bound
jns
xor
movsb
cs
inc
nop
push
inc
dec
mov
xlat
xchg
mov
adc
jbe
or
shrl
aam
sbb
adc
fsubrs
out
mov
push
shll
fnop
fs
popa
lret
xor
out
xor
pop
out
shrb
and
data16
dec
push
mov
sahf
pusha
mov
lods
add
popa
cmp
into
mov
add
aam
push
jl
lock
push
jb
rep
and
sbb
addr16
jbe
mov
jmp
movsl
rcr
jecxz
leave
sbb
mov
addr16
dec
sub
negl
jae
insl
repz
in
push
xor
adc
shr
aad
push
dec
rol
xor
jg
out
std
ja
inc
add
jge
inc
mov
ljmp
in
or
sub
lret
or
hlt
push
and
je
cmc
fldt
rorb
jns
push
inc
xchg
int
ffreep
imul
mov
sub
sbb
sub
scas
cmp
fdivrl
idivb
jns
pop
inc
cmp
pop
cli
dec
add
sub
adcb
cs
out
adc
lock
and
in
or
lods
jns
rorb
push
jecxz
ja
xchg
jecxz
insl
mov
push
push
imul
xchg
xchg
sub
jecxz
cmpsb
fisubrs
arpl
int3
call
mov
inc
inc
cmp
push
ror
pop
xchg
lea
push
jge
add
and
inc
dec
out
mov
into
jl
and
jno
push
jmp
nop
ljmp
das
dec
cli
xchg
out
cmpl
push
push
lcall
sbb
mov
es
push
insb
push
push
jae
add
sbb
in
nop
xor
cmp
sub
lods
inc
xchg
xor
sbb
xor
mov
jp
imul
aas
sub
daa
andb
inc
add
mov
and
jbe
dec
xor
mov
mov
imul
sbb
ljmp
ja
jb
add
dec
jnp
adc
shlb
adc
inc
adc
loopne
pop
cmpsb
xor
mov
jle
and
sbb
sbb
push
dec
adc
and
loop
and
inc
xor
mov
pop
lods
dec
mov
xor
and
out
rclb
fisttpll
sub
orb
in
and
stos
mov
outsb
adc
fisttpl
pop
xor
add
fldl
frstor
sahf
jne
jle
outsl
sub
pop
xor
and
push
in
mov
adc
cmpsl
pop
push
addr16
jb
stos
out
dec
push
pop
mov
stos
jg
mov
mov
xchg
mov
push
push
or
dec
stos
rcll
xchg
xchg
fs
adcl
adc
cmc
fisttpl
stc
aas
insl
popa
mov
nop
iret
and
aam
testb
mov
mov
add
jb
xchg
cli
popa
mov
inc
xchg
xchg
pop
cmpsl
jecxz
push
scas
out
addr16
push
pop
fidivrs
icebp
cmp
les
test
push
xchg
add
adc
pushf
cmp
mov
dec
sbb
decl
repz
in
push
mov
sahf
nop
mov
mov
cmpsl
rclb
pop
nop
cltd
push
nop
adc
pop
popf
jne
mov
sbb
and
daa
std
out
aaa
pushf
cmp
push
pop
int3
ret
bound
dec
sbb
jp
out
adc
mov
fs
adc
fs
in
shll
add
sub
xchg
jae
notl
adc
push
sbb
mov
mov
adc
out
insl
or
rcll
adcl
and
es
or
xor
scas
fidivrs
test
daa
ret
sbb
mov
outsb
inc
subl
repz
inc
daa
xchg
xor
ja
jge
jb
insl
pop
mov
mov
xchg
fs
in
movsb
fwait
inc
pop
insl
mov
cmpsb
mov
mov
xor
ror
clc
imul
push
and
and
or
stc
sarb
sbb
sti
xor
dec
jp
mov
sahf
dec
xchg
aad
std
or
lahf
pop
mov
cmp
jb
stos
inc
ja
push
sbbl
sar
repz
add
call
xlat
cmp
stos
xchg
movsb
push
inc
dec
pop
push
cltd
in
fcomp
mov
xor
add
idivb
and
adc
in
and
sbb
mov
lea
mov
cs
aaa
iret
cmp
sahf
xlat
inc
sahf
frstor
adc
mov
into
dec
add
nop
inc
sub
test
inc
sub
mov
loop
or
shlb
add
pop
mov
das
movsb
repz
mov
xchg
dec
int3
push
es
adc
fnstsw
testl
lret
dec
pop
push
and
adc
scas
inc
stos
fdivrl
loopne
xor
in
dec
cmpsb
sub
shr
push
sub
jbe
js
mov
mov
fwait
adc
xlat
lret
mov
shlb
sub
imull
outsb
jne
lret
mov
aam
daa
adc
jb
cmp
pop
adc
cs
sub
rcl
jns
dec
call
mov
xchg
xchg
jle
push
push
addr16
xor
xor
sti
mov
jbe
jp
cmc
arpl
cmc
push
inc
out
add
sub
push
cmp
dec
push
je
test
cltd
adc
add
lock
sub
out
aad
mov
sbb
repnz
pushf
push
jbe
xlat
stc
lahf
push
sbb
xor
fistps
xchg
pop
mov
subb
jnp
divb
js
orl
dec
hlt
xchg
mov
mov
pop
fwait
adc
fdivl
ja
fildl
adc
movsl
push
call
rcrb
fldcw
fwait
jae
stos
shll
push
sub
out
and
adc
cmp
add
fldt
jp
pop
cmp
test
test
push
dec
pushf
pop
sub
push
ljmp
ficomps
lret
clc
pusha
loopne
fs
pop
xchg
add
push
or
mov
xor
jg
mov
js
insl
test
pop
push
out
scas
and
mov
stc
imul
aas
cmpsl
stc
cmpsb
push
insl
arpl
data16
idivb
inc
pusha
das
cli
fcomps
push
cmp
mov
cmp
imul
lock
loop
push
hlt
cmc
divl
test
cmpsl
dec
enter
or
loopne
mov
arpl
aas
pop
pop
push
mov
mov
jge
cmpb
pop
out
repnz
lds
mov
insb
insl
neg
xor
ljmp
rorb
inc
dec
xchg
cmc
icebp
out
xor
jno
xchg
cmp
cmpsb
lret
cmp
jl
inc
paddw
sbb
or
ljmp
cmp
sbbb
sbb
fildl
dec
sbb
cmp
iret
shr
fs
xor
cmpsl
jnp
sbb
shlb
dec
mov
ss
inc
and
ret
in
insb
cmp
imul
rol
pop
pushf
fwait
sub
movsl
inc
add
push
mov
icebp
test
add
mov
inc
push
adc
pop
pusha
ret
mov
adcb
add
rcr
mov
mov
sub
mov
mull
popf
dec
xchg
push
cmp
movb
aad
mov
lock
jmp
adc
sbb
push
out
clc
fs
sbb
pop
dec
fistl
inc
cmpsl
dec
orl
cmp
and
popf
adc
lods
dec
stos
fisubrl
rolb
int3
mov
add
call
test
cltd
jg
inc
mov
cmp
outsl
mov
and
stc
jmp
and
pop
jo
jb
push
mov
loopne
es
fildll
pop
das
and
das
add
into
sahf
and
arpl
bound
jmp
dec
imull
lcall
sahf
fstps
mov
xor
icebp
daa
aam
jecxz
xchg
outsl
out
push
sahf
add
and
add
and
test
fistpll
popa
dec
in
cmp
mov
pop
imul
dec
sub
mov
loop
and
les
cmp
add
xor
sbb
lock
xchg
push
xchg
push
clc
and
stc
jp
loop
sbbb
xchg
jne
jle
jp
add
mov
mov
push
test
mov
push
add
xchg
dec
cmc
jnp
bound
jne
or
pop
push
mov
adc
dec
cmp
jmp
cmpsb
cltd
and
mov
cmp
cmpsl
mov
or
lcall
mov
xlat
adc
xchg
in
push
inc
add
dec
cmp
mov
repnz
jle
inc
dec
xor
and
or
out
shl
sbb
testb
out
fnsave
decl
sub
fwait
mov
pusha
cmc
gs
ficoml
cmp
stos
outsb
iret
bound
mov
movsb
loopne
adc
pop
pop
mov
popl
inc
inc
movsb
mov
pop
mov
cmp
arpl
fwait
sub
fldenv
xchg
or
daa
xchg
xchg
push
xlat
xor
cmpsl
fwait
push
mov
xor
ret
cli
lds
popf
addr16
ret
mov
cltd
xchg
adc
lret
testl
orl
add
adc
jae
xor
lock
test
mov
inc
mov
lods
mov
repz
adc
xor
jl
sub
mov
cmp
adc
cmp
ret
xor
cmp
or
dec
cmp
in
xchg
fstpt
push
scas
leave
popa
or
dec
pushf
push
add
dec
int3
and
add
pop
dec
mov
xchg
add
insb
push
scas
xchg
popf
adc
push
inc
into
cmp
mov
xchg
mov
fcoms
lea
addr16
leave
jbe
inc
add
ja
jnp
and
mov
cmp
xorl
mov
jge
mov
sub
mov
loopne
push
outsb
sbb
mov
data16
jmp
sub
clc
std
push
fs
fsubl
shlb
movsl
xor
and
fs
out
sarl
fisubs
inc
mov
xchg
jae
iret
sub
lea
adc
jno
inc
adc
xor
sti
cld
lret
cmp
sub
push
dec
sbb
lea
mov
push
add
loop
arpl
imul
jbe
add
rolb
xor
aad
int
stos
jne
cltd
scas
fdivl
js
aaa
cli
loope
add
gs
and
mov
jge
je
mov
sub
cltd
push
mov
clc
mov
sahf
sub
push
fst
pop
scas
das
addr16
jno
jp
into
or
fistl
ficompl
mov
dec
mov
in
dec
add
mov
int
and
push
xor
rcrb
rcll
sbb
or
int
scas
leave
lahf
push
pop
mov
mov
mov
not
iret
mov
xchg
scas
cmp
mov
xchg
dec
jl
dec
out
adc
scas
fisttps
mov
xor
cmp
cmp
bound
jae
stos
in
dec
sub
popw
pop
push
xor
pop
idivl
mov
push
sbb
fsubrs
xor
cld
adc
sti
test
fnstenv
stc
call
jmp
inc
pop
dec
leave
jno
push
mov
jle
cmp
lods
fwait
mov
adc
lock
or
fdivl
jle
ficomps
xchg
cwtl
ror
adcb
lods
sbb
imul
push
xor
sub
movsb
stc
pop
inc
jmp
ds
push
inc
pop
test
pop
and
inc
push
adc
or
scas
movsw
add
imul
xchg
lret
daa
pop
clc
and
ds
je
aam
enter
out
sub
push
insb
fmul
push
mov
clc
pusha
lods
push
repz
xchg
xlat
lcall
fildll
insb
leave
inc
xlat
outsb
stos
movsb
loop
lcall
cmpsb
mov
jge
addr16
aaa
subl
test
sub
push
stc
sbb
xchg
inc
bound
push
imul
movsb
mov
push
ss
xchg
in
outsb
sub
push
inc
lods
inc
sahf
dec
jb
in
push
ss
ret
cs
movsl
sub
sbb
cmc
inc
aam
test
push
push
rorl
mov
inc
push
sub
add
gs
je
dec
fidivrl
push
movsb
pop
int3
xchg
loope
mov
add
mov
pushf
in
sbbl
add
add
loope
jl
mov
xlat
sahf
sub
mov
pop
and
pop
fisubrl
jnp
push
insb
je
ja
int3
jmp
rcrb
or
fisttps
cltd
enter
incb
lock
xchg
mov
insl
jg
imul
inc
les
sbb
mov
mov
loope
test
mov
jns
les
add
fdivl
cli
pop
das
adc
call
mov
mov
popa
idiv
in
sub
in
lods
dec
fs
or
lock
cmp
imul
xchg
into
dec
push
jmp
xchg
push
xchg
pop
aam
ret
pop
stc
leave
inc
xor
sarb
ss
ffreep
dec
mov
or
jbe
mov
lret
and
gs
orl
bound
lods
and
in
sbb
sbb
xchg
jae
ja
push
lahf
cli
fwait
add
scas
push
loope
mov
mov
or
aam
cmp
jb
add
jbe
cmp
mov
mov
push
stos
cwtl
std
jns
push
push
imul
xchg
pop
push
xchg
loopne
sbb
shr
in
mov
xor
mov
aas
div
fistpl
jp,pn
jne
addr16
xor
daa
fs
xchg
movsb
fwait
test
mov
mov
repz
mov
ljmp
xchg
or
push
mov
cmp
adcl
pop
push
fcmovu
inc
fisubrl
shlb
pop
dec
adc
pop
mov
shlb
mov
dec
inc
outsb
pop
call
out
popl
xchg
cmp
lahf
mov
sarb
in
dec
pop
fnstenv
xor
sub
push
dec
loop
or
adc
js
push
and
lret
mov
jecxz
cmpl
cs
pop
jmp
fsubrs
mov
insl
mov
popf
stos
sbb
imul
or
in
xchg
scas
xorb
popa
icebp
push
fistps
addl
and
and
or
xlat
ja
ljmp
sub
mov
mov
add
push
xor
aad
std
jmp
cmpsl
lods
pop
insb
mov
aaa
jl
adc
mov
sbbl
nop
and
adc
mov
xchg
cmp
lcall
mov
fists
sti
aad
lahf
and
shld
std
movsb
fdivs
pop
inc
xchg
jl
push
sub
fsubl
or
sub
pop
and
cld
rol
roll
mov
sbb
add
xlat
jp
mov
bound
push
xchg
aas
pop
add
and
out
jecxz
mov
sbb
mov
pop
add
adc
mov
negb
scas
pushf
fwait
mov
mov
inc
cmp
add
push
ret
jle
divb
fstp
shll
stos
inc
shl
or
xchg
xchg
mov
das
mov
sbb
into
cmc
mov
sub
shl
int3
rorb
jle
add
clc
pop
ret
push
xor
in
rcl
fcmovnu
and
push
idivl
ret
in
mov
xchg
cli
imul
add
daa
push
test
into
add
push
aaa
push
test
mov
jb
mov
aaa
or
repnz
shll
or
pop
xlat
cmp
imul
push
pop
push
daa
sbb
sbb
punpckhwd
xlat
es
sbb
xor
repz
xchg
daa
ret
cli
outsl
jno
pusha
pop
jo
test
and
add
mov
mov
xchg
cmpsb
imul
test
xchg
test
mov
mov
push
mov
fidivs
mov
gs
inc
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
push
mov
mov
sub
xor
mov
sub
mov
sub
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
push
mov
mov
mov
mov
xor
sub
xor
adcl
mov
movl
add
add
imul
mov
mov
cmp
je
mov
mov
sbbl
mov
subl
xor
lea
addl
mov
mov
not
mov
mov
orl
xor
xor
sbbl
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
add
movl
adc
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
xor
xorl
add
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
add
dec
mov
xor
add
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
subl
add
movzwl
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
movzbl
or
mov
movb
lea
and
mov
xor
jmp
mov
lea
sub
mov
jp
pop
jp
mov
pop
dec
xchg
jnp
in
movsb
iret
pop
dec
sbb
mov
cmp
jecxz
int
xchg
sub
lea
insl
jbe
add
lods
or
scas
cmp
pop
addr16
pop
fs
sub
mov
sub
cmp
jp
push
sbbb
xchg
or
mov
aaa
mov
or
xchg
mov
dec
xchg
mull
sub
mov
stos
adc
mov
inc
inc
mov
push
in
cmp
js
les
push
hlt
shll
push
xchg
pop
cmpl
enter
xor
xchg
or
pop
push
jbe
enter
pop
mov
dec
insb
lret
cwtl
mov
mov
lods
nop
mov
ja
dec
push
in
add
outsb
pusha
out
mov
sbb
sub
out
jae
sar
pop
pop
or
sbb
mov
adc
nop
jo
repnz
loop
mov
int3
pop
push
lods
scas
push
dec
hlt
sub
push
push
xchg
and
fcompl
sbb
dec
mov
pushf
jne
mov
cmc
dec
scas
sub
add
mov
aad
xor
inc
inc
jp
fisttpll
bndldx
inc
shl
call
sub
rcrl
roll
jno
adc
pop
in
call
mov
pop
mov
jbe
pusha
subb
fsubrp
mov
adc
dec
add
jb
imul
stos
dec
xchg
pop
mov
in
in
test
mov
adc
push
cmpsb
and
movsb
cmp
xchg
sbb
mov
xorl
adc
out
xchg
or
or
inc
xchg
neg
jmp
mov
or
outsl
mov
andb
out
or
sub
sub
push
or
leave
sti
je
pop
test
sub
or
inc
jb
lock
shrb
dec
inc
dec
out
add
lods
aad
ds
dec
mov
fsubrs
or
add
pop
cmp
xchg
test
icebp
jnp
lret
jmp
jcxz
sbbl
adc
jecxz
pop
sub
stc
pop
jg
push
pop
dec
dec
xor
push
push
sbb
and
and
out
scas
cmp
daa
dec
jle
xor
aaa
add
clc
or
jbe
adc
or
pop
adcb
xchg
inc
push
sub
std
in
aam
jo
pop
xor
popa
sub
xchg
daa
cmpsb
lret
adc
mov
mov
cmp
xor
int
push
xchg
lcall
test
and
sbb
jne
mov
xor
les
xchg
andl
pushf
pop
xchg
int
imul
or
addr16
inc
cmp
cwtl
sbb
test
mov
push
sti
stos
out
cmp
repz
es
outsb
jo
int3
or
cld
pop
mov
adc
xchg
mov
insb
mull
jecxz
sahf
mov
jne
imul
fcomip
add
ror
mov
mov
inc
lret
add
cmp
test
xchg
inc
or
in
popf
cwtl
dec
and
xchg
pop
sarb
lret
cmp
push
clc
jp
sub
and
inc
mov
push
int
movsl
pop
jl
test
mov
out
sub
imul
mov
cmpsl
push
fmul
out
xor
dec
clc
push
mov
popa
pop
loop
aaa
mov
ja
les
sbb
je
dec
std
mov
fs
sbb
sti
rcl
inc
es
adc
push
fildll
xchg
lret
mov
mov
call
push
out
test
repz
adc
jae
add
loope
push
aas
push
rcll
jae
jecxz
or
daa
mov
andb
mov
jnp
pop
mov
mov
and
pop
aaa
loop
js
pop
sub
cltd
cld
sti
mov
das
repz
in
outsl
stc
xor
les
into
mov
dec
lahf
jecxz
mov
xorl
xchg
pmulhw
daa
xchg
aas
xlat
add
aaa
lcall
or
sbb
neg
jae
xor
dec
hlt
xchg
int
mov
inc
jo
add
js
jp
adc
das
push
psubusb
fisubs
adc
or
jge
pusha
xchg
jnp
loope
sti
test
push
enter
inc
cltd
lret
xchg
push
popf
mov
imul
ret
jl
sub
dec
mov
and
stc
mov
jmp
add
lret
mov
push
xor
jecxz
push
sub
cmc
add
mov
dec
xchg
lods
sbb
dec
cwtl
sarl
nop
xlat
bound
dec
jge
jl
push
jae
aad
shll
pop
mov
lcall
js
sub
inc
insl
pusha
leave
mov
mov
inc
aad
cld
insl
fldcw
push
fidivrs
mov
icebp
push
or
add
jle
jecxz
nop
and
jg
lea
dec
inc
adc
xlat
jle
das
mov
jmp
and
adc
pop
mov
cwtl
js
jnp
cmpb
adc
xorl
adc
in
jo
icebp
mov
dec
sti
ror
movsb
icebp
cmpl
loop
xor
mov
inc
bound
xchg
jle
inc
divb
and
and
or
mov
pmuludq
cmpsb
enter
outsl
pop
inc
sahf
in
std
outsb
out
mov
cli
movsb
fisubrs
mov
mov
mov
movl
cmpsb
add
and
scas
aas
pop
sub
imul
das
cmpl
push
cmp
inc
jp
loopne
mov
lret
pop
push
and
pop
es
pop
fnsave
data16
jbe
out
push
loop
lods
les
pusha
cmc
mov
es
mov
fisttps
jne
adc
popa
mov
mov
mov
xor
or
fwait
jp
push
sub
sbb
dec
push
test
data16
jb
insl
stos
lds
stos
ror
inc
lea
shl
sbb
dec
pop
insl
or
pop
xor
push
inc
xrelease
sti
gs
jb
adc
hlt
test
popa
jecxz
les
iret
dec
dec
lea
sbb
cmp
push
lods
xor
data16
rcrb
ds
cmpsl
mov
in
xor
sbb
dec
or
mov
out
or
sbb
mov
daa
dec
lret
cmpsb
dec
push
inc
xor
sub
sahf
popa
sti
daa
mov
roll
out
scas
jbe
xchg
scas
lea
pop
dec
inc
push
or
push
shlb
push
fimull
iret
cmp
mov
fsub
jl
movsl
sahf
cmc
xlat
inc
xor
xor
js
into
sub
sub
cs
rep
jo
cli
cmp
jbe
in
add
lock
mov
aas
mov
mov
mov
and
in
cmc
das
mov
out
mov
mov
push
outsb
mov
dec
xchg
mov
fsubrl
shlb
aad
push
repz
test
push
dec
or
les
xor
pop
mov
mov
xchg
lods
dec
mov
mov
lods
jns
aas
out
mov
stc
pop
xor
cwtl
push
mov
jne
mov
enter
xlat
imul
mov
and
rcll
aad
aas
jmp
popf
shrb
cmp
add
jle
inc
repnz
adc
das
sub
xchg
xchg
out
es
addr16
mov
xchg
push
jg
and
xchg
int3
cmp
outsl
and
cs
xchg
leave
inc
nop
inc
movsb
sbb
shrl
pop
jecxz
leave
repnz
mov
divl
cli
scas
or
or
into
jg
push
dec
inc
xchg
pop
jb
fisubs
push
aad
push
scas
cmc
stos
arpl
mov
out
test
pop
fidivrl
push
push
mov
lock
clc
mov
aam
add
add
sbb
in
testb
mov
lock
clc
push
mov
push
adc
mov
adc
pop
mov
call
outsl
pop
mov
lea
and
test
inc
xor
push
fisubs
and
jmp
or
jmp
ds
shlb
lret
mov
jno
cmp
cmp
pop
push
cmp
jle
sub
mov
push
addr16
cmp
popa
jbe
xchg
xchg
push
out
add
pusha
out
rcll
sarl
das
filds
cmp
clc
in
dec
xchg
fstps
int3
in
cmp
adc
pop
cmp
cld
stos
cmpl
mov
addr16
mov
sbbl
pop
inc
cmp
out
icebp
push
jmp
loop
mov
in
inc
mov
mov
xchg
aaa
dec
out
mov
pop
out
push
sbb
push
mov
pop
lcall
into
sub
push
mov
jb
xor
cmpsb
mov
and
adc
mov
cs
jb
inc
flds
adc
or
xor
adc
jmp
fstpt
dec
pop
in
pop
inc
jns
fidivl
sub
inc
shrl
dec
sub
or
and
lcall
test
mul
rcl
and
fidivrl
inc
mov
iret
int
loope
leave
sub
jg
out
pushf
icebp
cs
mov
lock
test
push
les
mov
cmc
or
call
adc
fwait
mov
cli
add
fadds
or
jl
adc
shll
cwtl
stos
std
cmpsb
aad
and
mov
scas
testl
jnp
outsb
mov
aam
mov
jg
jp
push
bound
int
inc
je
inc
popf
mov
pop
push
frstor
sub
stos
jno
leave
mov
mov
push
cmp
adc
out
ljmp
cmp
mov
sub
mov
or
shll
cmp
int3
dec
lea
outsb
je
mov
push
icebp
repz
cwtl
std
imul
add
add
fstl
test
pop
pop
sub
pop
inc
stos
adc
sarb
aaa
outsl
xchg
and
mov
xor
jecxz
sub
sbb
and
sub
movsl
xor
and
push
inc
xor
xchg
lea
mov
imul
xchg
add
in
popf
mov
add
data16
cmp
cmp
gs
sti
sub
xorl
xchg
xor
rcrb
cld
fcomp
mov
sbb
cmp
mov
jno
mov
jl
mov
xchg
mov
push
jae
adc
sub
mov
mull
in
lret
and
mov
gs
push
dec
sbb
fs
and
stos
push
lahf
loop
je
lods
xlat
inc
ret
les
jg
pop
lret
sbb
shrl
adc
test
inc
xchg
in
jp
add
lret
arpl
sbb
pop
mov
mov
test
jbe
sub
imul
adc
mov
mov
bound
sbb
dec
and
fs
push
xor
push
daa
xchg
sbb
scas
sbb
aas
stos
aad
push
mov
insb
adc
inc
notl
inc
enter
movsl
jmp
pop
pop
lods
xchg
cmpsl
mov
jo
leave
out
lock
cmp
push
jae
cwtl
ret
leave
sbb
cmpsb
out
movsl
mov
pop
inc
cmp
scas
push
pop
add
pop
daa
jl
dec
pop
outsl
xchg
jae
push
fmul
aas
add
lea
lret
mov
mov
add
test
push
xchg
cmc
mov
outsb
loope
mov
mov
out
cmpsb
pop
pop
lds
cmp
add
ret
stos
xchg
ja
out
outsl
shlb
and
dec
inc
test
test
rolb
ss
inc
push
push
pop
in
into
inc
loope
std
jecxz
cmc
sub
sbb
out
in
mov
sub
fistl
gs
and
stos
xchg
aas
pop
rcll
add
mov
aad
cmp
cld
add
push
jp
cltd
loope
xchg
mov
mov
bound
movsb
arpl
xor
push
inc
lods
or
stc
cmp
rcrl
sahf
mov
iret
sahf
inc
and
pop
inc
insl
out
dec
sub
lret
iret
mov
lods
addl
aas
sbb
pop
imulb
pop
in
lods
fcoms
and
test
sbb
movl
es
mov
xor
adc
mov
mov
mov
mov
push
lret
das
scas
fwait
outsl
mov
cwtl
adc
mov
cltd
xchg
paddsb
popf
adc
flds
mov
fisttps
sub
fucomp
mov
cs
push
sub
bound
xor
mov
lret
and
cmpsb
rclb
std
push
xchg
add
loope
stc
dec
xor
mov
pop
xchg
enter
mov
adc
jl
mov
in
push
push
pop
mov
les
adc
push
xor
leave
je
arpl
and
pop
movsb
mov
iret
adc
push
cwtl
fldenv
jbe
mov
sub
push
pop
rclb
mov
mov
fwait
mov
cmpl
and
mov
push
sbb
jbe
pop
sub
pop
mov
inc
dec
and
or
test
enter
pop
sahf
pop
movsl
push
and
mov
xchg
in
aam
xchg
aad
insb
and
cmp
lock
or
mov
stos
sub
xchg
pop
addr16
or
insb
pop
pusha
dec
sub
mov
inc
in
jle
jge
call
enter
outsl
imul
loope
jbe
popa
cmp
and
shl
jno
fmulp
pop
dec
popa
aam
rol
xchg
xor
mov
sbb
clc
mov
inc
and
loop
push
sub
lret
xchg
inc
sbb
adc
cld
adc
push
out
cmp
js
push
jno
jne
adc
test
movsw
out
jl
cmp
jmp
fisubl
push
daa
sub
das
xchg
aaa
dec
stos
arpl
in
or
sbb
jge
push
pop
filds
aad
adc
xor
or
cs
sti
fistpl
subb
xor
pop
adc
dec
add
xlat
mov
hlt
sysret
xor
and
dec
or
arpl
push
pop
xor
sti
aam
dec
js
push
adc
mov
ret
pop
adc
pop
jecxz
in
outsl
xchg
lret
fadds
data16
add
push
mov
push
fldt
add
lods
cmp
jns
mov
les
add
iret
out
movsb
mov
jns
jae
mov
cmp
jno
mov
xchg
inc
fistpll
push
mov
popl
cltd
xor
hlt
cmp
addr16
imul
jbe
mov
call
jle
push
xchg
sub
push
negl
test
jno
rorb
jle
jl
fs
bound
push
sub
lret
cmc
adc
sub
sbb
js
test
lods
ljmp
xor
fwait
cwtl
jp
add
or
punpcklwd
sub
sub
add
in
push
add
push
pusha
shlb
addl
add
add
stos
adc
shrl
xchg
movsb
mov
popa
fdivrs
sbb
rcrl
pop
inc
push
out
fidivrs
mov
es
sub
sub
or
js
fs
sbb
inc
sub
shll
xchg
sub
adc
out
cmp
xor
in
push
movsl
cli
stos
test
std
add
dec
mov
mov
ror
lods
mov
cwtl
and
xchg
outsb
mov
cmc
mov
jp
ja
xor
lods
into
adc
ds
mov
lds
lods
mov
insb
cltd
stc
data16
adc
cld
out
ret
ret
int3
mov
aam
fcompl
mov
jns
cltd
in
stc
cmp
testl
xchg
std
dec
lret
cwtl
outsl
mov
inc
ret
sbb
jecxz
push
xor
in
lcall
aad
popf
mov
adc
pop
in
inc
popf
and
fwait
fwait
inc
pop
rolb
sti
jno
rolb
adc
mov
xchg
mov
jle
add
clc
mov
xchg
cmpsl
inc
sahf
xchg
add
push
jne
or
movsl
mov
setae
cmpsl
pop
inc
into
movsl
cmp
sub
movsl
stc
addb
or
mov
push
sub
fucomi
add
fwait
xorb
adc
das
aam
scas
jmp
inc
inc
lea
outsb
add
adc
jno
aad
and
andl
jae
jno
iret
je
jle
imul
pop
nop
adc
jns
outsb
stos
sbb
call
pop
mov
loopne
je
cmp
sbb
fsubs
mov
stos
fsubs
aam
sbb
dec
pop
dec
jl
xchg
dec
and
mov
dec
fs
jle
pop
dec
out
aad
test
inc
add
sub
cld
lock
subps
rol
pop
mov
test
inc
int3
add
jne
lcall
and
aaa
iret
gs
imul
data16
mov
mov
arpl
subb
ret
xchg
inc
les
xor
dec
inc
outsl
mov
xor
pop
pop
xchg
xor
jecxz
cmpsl
out
cwtl
cmpsl
ret
in
pop
out
add
dec
mov
push
call
push
stc
lcall
cltd
inc
push
insl
mov
cmpsl
push
push
in
dec
push
imul
pop
mulb
jnp
inc
shrb
dec
shlb
int3
or
jle
push
mov
out
mov
rcrl
add
jno
sub
test
paddd
fists
fnstenv
stos
mov
mov
jno
popa
clc
data16
mov
xchg
daa
fcmovnb
mov
mov
test
jg
clc
inc
push
push
aam
dec
xchg
test
insl
mov
imul
pop
comiss
popa
jns
arpl
xor
sbb
xacquire
ds
bound
adc
das
ds
data16
jb
js
jae
cwtl
dec
rolb
aam
xor
add
aas
add
mov
aaa
out
and
or
sbb
cs
add
pop
loopne
sub
ret
ret
xchg
or
insl
out
shll
je
xchg
jecxz
mov
cmp
pusha
mov
sbb
xor
pop
aas
js
dec
cmp
or
or
mov
cmpsl
out
leave
jecxz
xor
sub
add
outsl
pop
ja
lea
and
sbb
fistpll
inc
add
aas
int
or
xorl
jno
xor
test
cmp
pop
inc
aad
fiaddl
sub
xchg
cmp
sub
aas
js
stos
sbbl
sarl
push
mov
inc
js
hlt
push
jle
filds
ficoml
xchg
or
adc
or
inc
out
lea
push
aam
xchg
add
mov
jae
nop
mov
adcl
nop
jnp
xchg
pop
in
lret
repz
and
lods
pop
jnp
xor
ljmp
ret
ds
xchg
imul
mov
in
xor
cmp
and
popa
shl
xlat
dec
test
xor
out
push
or
cmpsl
aad
cmp
clc
dec
movsb
imul
leave
int
in
out
sbb
mov
or
into
hlt
stc
inc
push
dec
aaa
and
sub
mov
test
stos
pop
pusha
pop
stos
arpl
test
jmp
test
fdivl
xchg
mov
adcl
loop
stos
cli
test
jae
adc
cmp
flds
add
fdivp
stos
movsl
adcl
addr16
imull
dec
xchg
and
push
push
mov
fdivl
mov
mov
sahf
mov
inc
fs
or
mov
lret
fists
into
divb
lret
bound
xor
inc
xor
cmp
push
iret
adc
aaa
test
mov
mov
push
jmp
push
and
push
fdivl
xchg
outsb
add
pop
in
xorb
mov
or
mov
mov
xchg
dec
or
or
sbb
lods
push
int3
sbb
pop
inc
lea
push
gs
and
shr
dec
pop
dec
jl
fidivl
dec
jae
push
divl
xor
mov
arpl
push
dec
cli
push
mov
inc
push
mov
popa
inc
jecxz
xor
in
icebp
lahf
push
add
adc
adcl
fcoms
daa
int
andl
adc
lods
test
test
pop
dec
rorl
mov
inc
inc
mov
xor
push
leave
clc
ret
outsb
jne
ds
imul
xchg
out
shll
cmpsb
outsb
sub
stos
xor
mov
ss
inc
sahf
addr16
cld
cmp
push
xchg
loope
sbb
rorb
jmp
adc
sarb
ret
fabs
cmp
out
outsb
clc
sbb
cmp
inc
jge
xchg
sbb
or
dec
flds
test
int
js
jle
push
mov
mov
cld
xchg
and
xchg
testb
add
leave
push
inc
insb
dec
lock
pop
icebp
adc
mov
mov
invd
add
ret
insl
or
push
imul
call
jle
ret
dec
lcall
mov
xor
adc
mov
fstpt
ja
push
aas
lret
fdecstp
sub
nop
push
outsb
pop
faddl
mov
and
out
mov
inc
mov
add
pushf
inc
mov
fidivrl
pop
clc
stc
sub
hlt
sub
mov
jmp
jl
cmpsl
mov
sub
mov
stos
mov
popa
scas
in
mov
nop
or
outsb
imul
xchg
sbb
lods
dec
dec
jecxz
dec
sbbl
repz
in
dec
incb
mov
test
pop
mov
movsb
xchg
pop
dec
xor
lcall
inc
push
dec
lock
imul
loope
addr16
pop
sbb
push
jns
inc
cmp
cmp
cld
xchg
insb
push
or
cmp
and
jae
jnp
jae
adc
stc
int3
mov
xor
daa
movsl
aaa
mov
shrb
ret
push
pop
popa
and
xchg
stos
jecxz
int
out
ds
mov
dec
lods
fisubl
push
push
mov
pop
mov
outsl
movsl
cmpsl
or
push
rclb
sti
hlt
leave
and
std
add
and
orl
inc
popa
cmc
add
mov
mov
inc
jns
mov
sub
imul
mov
push
add
xchg
jne
push
mov
sub
std
es
out
or
dec
push
in
rcrl
jbe
imul
jmp
jne
adc
sarl
mov
int
dec
cmp
fdivs
iret
push
xorb
jge
mov
in
out
sub
xchg
push
xchg
out
inc
or
cmpsl
inc
out
push
test
nop
fwait
mov
test
sbb
push
mov
repnz
jno
into
cmp
sbb
sti
or
mov
fwait
cld
xchg
xchg
bound
arpl
cld
mov
jns
push
loopne
jne
int3
jecxz
pop
push
sarb
and
loop
fcoml
shll
cmp
cli
cmp
jbe
sar
pushf
pop
jno
push
push
sub
adc
mov
dec
mov
in
sarl
bound
sub
inc
push
push
test
shrl
xor
add
outsl
and
mov
push
mov
cli
jo
inc
int3
cltd
popa
xchg
push
sub
adc
xchg
sub
stc
sbb
fwait
out
or
dec
and
loop
mov
jle
sbb
jmp
loopne
ljmp
cli
mov
adc
push
xor
and
sub
jp
in
jbe
bound
notb
pop
imul
dec
mov
iret
xchg
add
popa
jae
arpl
inc
inc
jns
mov
rorb
sarl
sti
sahf
movsl
outsb
mov
outsb
dec
pop
lea
test
arpl
sahf
and
sbb
dec
cld
out
int
shl
pop
inc
mov
mov
leave
loopne
fcmovnu
mov
xor
loopne
sub
rcr
adc
cwtl
mov
jae
repz
movsl
imul
sbb
fimuls
imul
outsl
pushl
push
je
pop
xor
hlt
inc
pop
add
adc
sub
pop
outsl
stc
repnz
gs
into
sub
cltd
lods
dec
addb
lods
sbb
loop
mov
jg
jno
add
jnp
loope
lods
cmp
std
jno
cld
sub
push
mov
xor
fs
mov
out
mov
adc
mov
xchg
push
roll
sbbb
pop
test
aas
xor
clc
sub
dec
in
jge
adc
cwtl
xor
inc
mov
inc
bound
fsubrs
fs
mov
push
roll
adc
dec
in
push
xor
rcrl
mov
mov
fsubrl
scas
sub
mov
fisttpl
add
fsubl
stos
fists
iret
out
push
sub
add
cmp
nop
sahf
popf
dec
push
roll
add
pusha
and
ja
lret
aaa
lods
std
sahf
fcomp
lods
mov
nop
mov
xor
sbb
or
mov
fidivl
xchg
mov
outsb
inc
stos
aaa
push
or
mov
ret
push
push
fxam
mov
xchg
adc
notl
loop
rcrl
pop
cmpsb
xor
jmp
cld
ret
push
out
fdivp
xchg
mov
dec
repz
xchg
stos
inc
push
sti
and
fisubl
cmp
loopne
xlat
push
sarb
scas
mov
xlat
cld
fstl
aam
xchg
mov
pcmpgtb
in
jbe
cld
sub
gs
js
sub
negl
xchg
aam
lods
clc
xchg
lds
mov
js
and
add
adc
jae
addr16
lods
into
andl
push
aas
cmp
and
aad
push
add
in
shll
into
shr
mov
jge
push
test
ja
pop
js
insb
jge
jo
push
mov
mov
mov
adc
sub
add
repnz
jno
sbb
mov
scas
cmp
sub
std
fnstcw
and
or
enter
mov
mov
loop
mov
inc
js
xor
int3
loopne
je
cld
adc
or
jp
and
ret
inc
mov
insl
dec
movsl
stc
sbb
push
adc
inc
lods
push
addr16
mov
or
pop
fwait
sub
out
addr16
mov
inc
je
push
cmpsb
push
jae
mov
jl
or
jp
inc
pop
adc
mov
jle
divl
jp
les
testb
pop
loopne
cmp
cli
rcr
sbb
pushf
jle
outsb
jnp
insl
rcrl
push
xchg
sarl
mov
mov
adc
cmc
out
hlt
test
cmp
inc
sbb
or
adc
cmp
popa
or
enter
cmp
cmp
leave
inc
add
push
sbb
dec
xchg
rcl
dec
clc
lods
inc
or
xchg
push
inc
loopne
mov
inc
cwtl
mov
shll
push
push
mov
decb
or
mov
call
or
les
and
insl
and
mov
jae
das
add
adcb
lcall
inc
pusha
std
or
lret
adc
jle
scas
fisttps
popa
fistl
add
and
jb
out
cld
mov
pop
inc
inc
push
aam
xor
lahf
cmpsl
pop
ss
stos
dec
stc
sbb
sbb
push
push
icebp
dec
cmpsb
movsl
or
xor
mov
lret
test
in
fisttpl
sahf
shll
push
cmpsl
int
xor
or
fldl2e
dec
pop
ficoml
pop
or
leave
into
rcr
mov
je
mov
push
sub
jmp
iret
daa
push
loope
dec
dec
mov
fildll
xchg
mov
imul
movsb
jb
int
lods
fcomps
dec
fldcw
leave
jno
xchg
test
cltd
xor
mov
lret
popf
seto
cmp
jge
insl
movl
lock
dec
or
stc
imul
add
jge
sbb
in
leave
fwait
and
dec
or
sub
pop
mov
cltd
arpl
daa
out
out
adc
fs
adc
push
aaa
add
out
mov
inc
sbb
sbb
in
sub
pop
movsl
pop
mov
xchg
icebp
shlb
xchg
scas
jne
test
pop
mov
mov
rorl
mov
inc
sbbl
fcomp
xchg
fs
dec
aam
push
test
cmpsb
or
rol
dec
and
or
ss
jmp
rorb
adc
mov
xlat
mov
pop
outsb
or
dec
xchg
push
jp
mov
fucomp
sbb
arpl
mov
xor
iret
add
stc
mov
xorb
dec
jbe
inc
add
loope
xor
lcall
sti
xrelease
sub
jnp
mov
test
lods
outsl
cmpsb
mov
fsubl
and
mull
cmpb
push
sbb
push
mov
pop
mov
dec
jns
and
sbb
mov
mov
sbb
test
neg
mov
jge
cmp
mov
mov
jns
cwtl
stos
enter
xchg
sub
jmp
hlt
cmpsl
pop
sarl
xchg
stos
scas
imul
ds
xchg
sbb
sub
nop
pop
xor
mov
fstl
mov
xlat
jbe
bound
aas
push
in
push
inc
pop
out
cs
jae
enter
bnd
jecxz
ja
cwtl
das
inc
arpl
sahf
lock
lahf
adc
jcxz
jge
imul
pushf
or
movsl
outsb
sbb
push
mov
gs
push
cmpsl
dec
xchg
fld
jmp
fwait
xchg
arpl
add
sbb
push
pop
mov
or
sub
xor
repz
pop
lret
mov
inc
xor
cmp
add
ret
jne
pop
das
mov
aad
daa
pop
sar
outsl
dec
cltd
inc
sub
jecxz
pushf
cltd
test
cld
push
mov
push
xor
imul
fcompl
dec
push
push
pop
lahf
scas
aas
jge
add
or
shll
int
enter
mov
xor
xor
popf
mov
jge
lret
mov
in
test
xor
xchg
loope
adc
push
pop
mov
andl
xor
or
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
xor
sub
movl
mov
andl
movl
sbbl
push
movl
mov
xor
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
adcl
push
add
jmp
movl
mov
mov
movl
inc
movl
cmp
jb
mov
xor
add
movl
jmp
sub
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
xor
mov
xorl
xor
mov
addl
add
xorl
movzwl
mov
mov
addl
movzwl
movl
xor
add
mov
mov
mov
inc
movl
mov
movl
cmp
jne
xor
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adcl
mov
xor
xor
decl
add
mov
sbbl
mov
inc
xor
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
not
movl
movl
movl
and
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
notl
mov
sub
mov
andl
xor
add
mov
not
mov
je
mov
orl
mov
adcl
xor
xor
subl
sub
sub
xor
mov
incl
mov
mov
add
subl
imul
xor
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
add
xorl
or
adcl
mov
addl
mov
subl
mov
xorl
add
adcl
xor
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
inc
mov
mov
addl
add
adcl
and
mov
or
mov
mov
sub
mov
orl
lea
mov
mov
mov
incl
sub
movzwl
adc
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
addl
mov
adcl
xor
adcl
add
movl
jne
jmp
adc
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
jmp
aaa
xchg
jae
mov
xor
inc
int
xchg
jp
add
jp
inc
mov
mov
les
leave
loopne
sahf
jle
sub
add
push
sub
add
out
dec
insb
sbb
pusha
popa
cmp
cltd
sub
pop
sbb
cmp
pop
adc
adc
shlb
pushf
fadds
fucom
dec
sbb
lahf
movsl
cmp
pop
xor
mov
in
out
mov
aam
push
imul
push
add
sub
ret
mov
out
stc
mov
into
imul
or
test
pop
add
fnsave
scas
push
push
pop
cltd
push
mov
cmp
adc
and
jg
add
rol
xchg
lret
out
lret
cmp
cwtl
jbe
inc
pop
mov
loop
mov
xor
xchg
inc
out
jbe
sub
jnp
daa
call
jmp
sub
push
adc
lods
scas
and
int
xor
and
mov
in
push
clc
test
add
mov
popf
cld
cmp
addr16
fs
cmp
pop
mov
sub
adc
cmc
push
xchg
mov
jge
fadd
addr16
clc
test
mov
repnz
adc
inc
and
rorb
repnz
idiv
sbb
jp
enter
and
out
mov
xchg
mov
stc
in
inc
dec
xchg
xchg
push
pop
ljmp
add
aaa
test
test
ds
hlt
rcrb
mov
pop
mov
mov
fistpll
xorb
push
and
inc
jl
int
sbb
enter
in
out
fiadds
ror
cli
xchg
adc
les
jo
push
xchg
and
fistpll
mov
cmp
rol
int
repz
lods
enter
adc
js
ja
lods
jns
call
addr16
outsl
iret
xor
and
or
inc
cmp
ret
push
xor
mov
inc
test
fnsave
xchg
pop
adc
cmp
adc
rcll
adcl
mov
dec
or
dec
jp
test
icebp
je
stos
dec
clc
jg
mov
pop
fstpl
dec
pop
fcomps
jb
in
popf
inc
dec
pop
pushf
aad
xor
dec
adc
iret
call
sahf
inc
arpl
adc
inc
scas
fpatan
jle
push
push
out
out
inc
sub
sbb
stos
xchg
ljmp
mov
imul
loope
push
out
xchg
push
aas
sub
push
lret
in
jne
push
pusha
jne
aad
aaa
mov
stos
jae
jns
cmpsl
clc
pop
fadds
xor
jp
ja
jns
mov
movl
pop
or
data16
fisttpl
add
nop
das
inc
cmp
or
pop
xor
mov
aaa
pop
out
inc
adcl
bound
dec
push
mov
inc
divb
mov
sahf
and
divl
aaa
or
cld
cwtl
sbb
fwait
loop
push
and
push
pop
dec
test
and
stos
or
js
xchg
jl
mov
stos
dec
xor
insb
push
push
sub
mov
inc
cltd
mov
test
mov
inc
sbb
popf
sahf
arpl
decl
add
ljmp
cwtl
scas
xchg
fstpt
dec
adc
jb
cmpsl
jne
xor
out
testl
inc
xor
cmp
and
icebp
test
add
lahf
dec
jmp
mov
lods
jns
insl
xchg
pop
push
push
adc
mov
popf
cs
add
mov
jo
cli
shll
daa
outsb
outsl
xchg
nop
fs
inc
rcr
xor
ret
repnz
std
loop
stos
aad
in
imul
dec
mov
lahf
mov
mov
xchg
mov
sbb
sbb
cmp
sahf
mov
mov
or
pop
repnz
icebp
inc
into
testl
inc
aas
add
test
inc
ret
stc
sub
enter
sbb
cmc
test
jmp
mov
cmpl
mov
andb
cmpb
push
vrsqrtss
dec
fadds
push
xor
out
xchg
loopne
or
daa
cltd
out
cmp
mov
ficoml
or
mov
stos
add
inc
mov
fs
movsb
pop
test
in
inc
sbb
xchg
inc
cmp
push
sub
push
cmp
loop
repz
push
mov
jg
mov
xor
mov
ja
sub
inc
loopne
popa
sub
ret
aad
push
addb
push
push
imul
or
mov
pop
xor
mov
sub
imul
inc
fcmovnb
xor
add
shrb
test
mov
xlat
or
roll
inc
shll
in
xor
mov
fldt
aaa
dec
test
mov
mov
sbb
orb
xor
inc
repnz
jbe
mov
jmp
rcrb
pop
jmp
sub
es
loop
jmp
dec
addr16
imul
jo
pushf
and
cmp
jmp
lods
sbb
pusha
addr16
pushf
insb
jae
rcrb
mov
jne
jg
movsl
sbb
mov
adcb
push
cld
adc
mov
mov
sbb
jl
dec
aam
inc
mov
jbe
sub
daa
jns
cmpsl
es
pop
jg
mov
int
sub
xchg
shlb
pop
mov
mov
rcll
and
out
sub
cmc
sbb
cmp
sbb
lock
cmp
cli
popa
popa
xchg
sub
fisttpl
in
out
cs
sub
roll
sub
and
push
scas
aad
addr16
xchg
xchg
and
sub
daa
dec
push
and
pop
sarl
xor
movsb
mov
inc
inc
ret
ja
fcmovu
shlb
adc
fnstcw
fisubrl
pop
flds
xchg
stos
xor
mov
movl
xor
xor
rorb
loopne
pop
leave
jmp
pushf
clc
dec
in
rorl
stos
mov
lods
mov
pop
inc
xchg
adc
scas
mov
lock
and
adc
cmp
icebp
sub
cmpsb
dec
inc
xchg
cmp
sbb
pop
test
mov
inc
repnz
push
maxps
cmpsb
outsb
xchg
and
icebp
rcr
cmp
repz
arpl
sar
addr16
xor
cs
or
mov
cmpsb
ja
sub
daa
jp
jne
sub
xor
data16
sbb
out
sbb
mov
stos
xchg
ljmp
das
ret
jns
push
cltd
mov
movsb
push
jno
xchg
stc
or
mov
stos
lds
push
rclb
lcall
xchg
gs
addl
mov
mov
sbb
scas
pop
stos
subb
or
scas
jbe
mov
arpl
std
jno
pop
call
pop
sub
bound
dec
lret
inc
sub
divl
ja
cltd
sub
pop
pop
and
cmp
xchg
stc
hlt
loopne
pop
repz
jecxz
mov
push
imul
imul
enter
pop
jmp
push
jbe
xchg
mov
dec
cmp
xor
push
push
xor
sti
loopne
fisubrs
and
int3
xchg
cld
dec
icebp
xor
mov
fisttps
cmp
sbb
icebp
orl
popa
cmc
lea
sbb
or
ret
hlt
mov
xchg
cmp
clc
in
stos
xor
mov
push
loopne
inc
fs
ljmp
mov
rolb
dec
icebp
sub
adc
mov
or
jns
push
mov
adc
sub
into
out
sub
popa
aaa
sub
inc
push
jecxz
xchg
roll
cmpsl
jo
xor
push
inc
add
push
or
mov
and
loopne
mov
dec
pop
aaa
sahf
outsl
shlb
add
icebp
test
sub
xor
filds
imul
test
mov
ret
cltd
pop
add
mov
xchg
mov
in
cmp
xchg
shlb
mov
push
insl
das
sub
mov
enter
insl
insb
pop
dec
cmpsb
pop
pop
cwtl
sbb
and
loop
imul
lods
add
and
ljmp
xor
js
das
jg
sbb
push
js
hlt
shlb
pop
xor
or
mov
dec
mov
mov
push
loopne
fildll
aaa
push
mov
add
cmpsl
cmp
int3
insb
fnstsw
scas
jl
inc
push
xor
sbb
mov
stc
pop
dec
add
cmp
push
pop
or
fidivs
push
fstpt
aas
clc
jnp
negb
cmp
out
jae
xor
adc
repz
ret
mov
jmp
mov
dec
push
aas
pop
sbbb
xlat
xor
nop
cmpsl
leave
sub
mov
sub
mov
add
and
dec
scas
pusha
addr16
adc
sbb
jp
add
idivb
sbb
xchg
data16
sub
cmpsl
mov
mov
call
sub
jg
out
cmovb
faddl
jl
dec
test
lcall
test
dec
int3
cmp
pop
add
xor
xor
and
xlat
mov
in
pushf
mov
and
dec
or
sub
xor
inc
mov
xchg
in
adc
dec
mov
sarb
and
or
sub
std
xchg
jnp
lret
sbb
mov
pop
cmp
int
ja
mov
mov
stc
jle
inc
push
jno
fsub
cmpsb
xchg
push
aas
rol
fxch
jnp
pop
es
inc
sub
addr16
mov
sub
lahf
push
notl
out
push
jecxz
mov
fisttps
or
movsl
clc
int3
pusha
add
loopne
add
cld
pop
adc
and
lea
sahf
sub
scas
in
icebp
sahf
mov
inc
aam
lods
sub
in
inc
xor
fadds
cld
and
cmpsb
or
mov
dec
jne
jecxz
aaa
jb
sbb
push
sub
mov
fnstcw
jg
cmpsb
jmp
popa
jne
pop
test
and
xor
add
mov
xor
stos
in
and
out
jbe
iret
fisubs
xor
adc
add
or
xor
or
fmul
xor
cmp
add
shr
shll
dec
jp
sbb
pop
and
pop
xchg
jg
xor
cmp
lcall
and
pop
mov
pop
jmp
ds
inc
pop
push
pop
and
mov
cmp
mov
test
or
loop
mov
rorl
and
dec
sbb
dec
push
fdivrs
cltd
inc
push
scas
mov
pushf
stos
js
add
pop
inc
lods
jg
mov
lcall
data16
cmpsl
in
orl
and
nop
xlat
xor
pop
imul
xchg
es
inc
insb
and
sti
pop
imul
push
repz
add
sub
pusha
insb
sub
sahf
xchg
mov
cli
and
scas
faddl
dec
repnz
call
add
jae
test
jns
lahf
rol
loop
dec
aas
ret
js
mov
insb
icebp
out
push
clc
xchg
mov
scas
rclb
outsb
mov
mov
loopne
loopne
test
gs
or
jecxz
fcoms
jmp
inc
cvttps2pi
jns
pop
xchg
jno
jno
xor
jp
mov
inc
imul
scas
icebp
gs
mov
mov
ficompl
mov
rcr
mov
pop
xchg
daa
rcrb
arpl
sbb
fs
insl
sub
rcll
movb
or
addr16
fsubl
int3
aam
leave
mov
scas
fcmovbe
inc
pusha
ficompl
std
fildll
pop
xor
es
add
in
hlt
sahf
mov
bound
test
xor
outsl
in
insl
mov
icebp
jae
pusha
add
ficoms
leave
mov
lret
xor
pop
sub
out
xchg
cmc
bound
dec
sbb
adc
push
daa
jg
mov
and
imul
ja
fnstcw
gs
sbb
inc
jne
movsb
sti
jne
sub
sbb
out
xor
mov
add
push
movsb
and
lock
mov
movsl
pop
jle
inc
cmp
jg
sub
shrb
dec
mov
inc
dec
fdivr
xor
pushf
iret
inc
mov
shlb
out
push
xlat
out
lock
jge
mov
cwtl
adc
push
jbe
hlt
mov
stos
mov
cltd
aam
rcrb
pusha
aas
xchg
repz
jbe
orb
icebp
addl
dec
daa
xchg
inc
mov
push
cltd
pop
gs
fcomps
xchg
in
mov
ret
xchg
out
testl
dec
aas
push
mov
cmp
mov
cmp
pop
mov
lret
or
dec
mov
mulb
fdiv
sbb
repz
gs
sub
insb
idiv
in
cwtl
push
fcmovbe
push
xchg
mov
mov
or
or
mov
out
subb
xchg
pop
push
cmp
inc
neg
movsb
aam
cmp
jp
mov
add
loope
scas
imul
sub
ds
jo
sti
jle
jg
add
sbb
dec
movsl
loope
sbb
cmc
pop
in
dec
pop
rcrb
pop
push
nop
mov
dec
hlt
xor
popa
xor
add
test
cmp
ss
repz
push
mov
push
in
cmp
push
cmp
xchg
mov
lea
lret
inc
shll
cmp
or
stos
pop
push
jmp
pop
sub
lahf
test
pop
dec
daa
push
sarl
cmp
and
pop
mov
add
imul
cwtl
xchg
loopne
out
ret
lcall
jge
hlt
in
add
pop
ret
cmp
and
xchg
mov
aam
mov
scas
fimuls
bound
and
xchg
xchg
faddl
sub
stc
mov
inc
insb
and
jns
jmp
fdivr
dec
shl
dec
test
je
sub
mov
pushf
loopne
roll
dec
sbb
iret
imul
decl
jg
xchg
divl
pop
or
dec
pop
les
lods
mov
shlb
loope
sbb
outsb
dec
jae
inc
daa
scas
xchg
and
jbe
js
mov
inc
in
push
xchg
rcrb
ja
fwait
add
push
sarl
dec
or
shlb
cmp
push
push
mov
leave
or
test
adc
add
push
xor
jnp
sub
sbbb
sarb
mov
lret
les
addr16
xor
sbb
adc
push
insl
test
test
pop
test
lods
cmp
mov
jg
cmpsl
popf
and
pop
jne
jp
addl
jbe
pop
ret
mov
out
pop
addr16
aad
or
push
sub
fwait
sub
je
mov
je
and
outsb
outsl
cmp
mov
clc
mov
jle
out
movl
flds
push
jno
add
fwait
std
xor
pusha
ficoms
sbb
outsl
in
cwtl
mov
xor
inc
cltd
movsl
repnz
mov
inc
mov
daa
jge
mov
xchg
insl
jae
or
sbb
frstpm(287
sub
mov
cld
cmp
movsl
push
or
gs
mov
leave
mov
cmpsb
and
xor
out
daa
add
rcrb
jns
fcmovu
cmc
repnz
and
jne
addr16
inc
sub
pop
xor
fwait
dec
test
andb
sahf
jne
ds
xlat
cli
xor
aam
es
and
jae
xchg
imulb
std
mov
rorb
xor
fs
xorl
mov
adc
in
push
fnstenv
dec
cmp
sbb
imul
or
outsb
inc
mov
add
xor
and
lods
push
pop
jno
and
fiaddl
mov
push
sub
pop
aaa
mov
sub
jp
or
inc
xor
sbb
jbe
mov
mov
xor
adc
cmp
mov
jge
mov
test
xchg
add
idiv
leave
jno
dec
cmpsb
stc
fisttpl
jbe
jae
and
cwtl
pop
mov
js
pop
ljmp
scas
js
std
pop
fcomps
loopne
sahf
mov
pop
std
ja
pop
lahf
add
lahf
xor
pusha
fimull
jge
mov
mov
add
mov
mov
std
dec
mov
mov
lods
data16
sub
cmp
fnstsw
out
sahf
rcr
or
push
add
int
pop
mov
or
cmp
mov
push
and
mov
ss
inc
xchg
iret
in
shll
imul
cltd
test
lds
iret
pop
jb
mov
neg
xlat
clc
xor
movsb
sahf
xor
pop
xchg
fadds
fisttps
aad
jge
jne
mov
mov
sub
mov
mov
mov
sub
ss
pop
into
stc
outsb
mov
test
cmp
xor
leave
mov
mov
cmp
mov
sbb
cld
mov
fs
fs
mov
mov
xchg
popa
add
push
and
pushf
lret
xchg
aam
and
dec
sub
out
popl
jp
adc
dec
inc
jp
mov
adc
fs
lret
mov
or
sbbb
jae
nop
jae
fisubrl
imul
xor
icebp
je
mov
clc
movsb
cmpsb
inc
jl
jl
pop
and
outsb
cmp
sub
test
sti
dec
mov
cs
dec
push
pushf
mov
cmpsl
rcrb
xchg
repnz
fisubs
inc
cmpsl
cmpsb
fbstp
and
mov
adc
adc
and
adc
add
cld
out
pop
pushf
dec
orl
push
mov
sbb
dec
jp
call
lds
jns
bound
aaa
subl
stos
jmp
jae
xlat
cmp
or
ja
sbb
or
sbb
fsts
sti
scas
into
mov
mov
jle
cmp
pop
jnp
inc
and
dec
bound
xor
js
loop
bound
je
call
push
fsubr
lea
or
sub
ja
push
pop
adc
cmp
xor
andb
xor
imul
jg
xchg
xor
mov
and
dec
adc
mov
shr
dec
or
inc
xchg
call
adc
mov
jbe
pop
and
pop
iret
adc
stc
mov
adc
fldenv
scas
aaa
ljmp
es
push
pop
test
insl
data16
shr
add
aad
cwtl
push
adc
imul
stc
xchg
pop
inc
lock
aam
aam
mov
pop
pop
insb
xchg
test
pop
pushf
jo
imul
sub
xchg
sbb
mov
jmp
cwtl
sub
and
pushl
ror
bound
sbb
loop
pop
cmp
mov
ds
icebp
iret
es
xor
or
dec
repnz
xchg
xor
std
test
popa
pop
xchg
xlat
jecxz
cmp
xchg
stos
and
fisttpll
shl
sub
andb
fisubrs
jecxz
pop
mov
in
xor
adc
in
or
enter
mov
mov
pop
jmp
push
mov
push
xor
ljmp
fcomp
mul
and
hlt
jno
insb
or
push
xor
out
add
push
mov
shl
sub
pushf
mov
rolb
sbb
mov
ss
cmpsl
sbb
decl
jne
cwtl
push
adc
imul
fcoms
cltd
mov
jle
into
sahf
sbb
icebp
xor
push
stos
sub
adc
fs
cmp
ss
jge
mov
movsb
xchg
das
mov
mov
sbb
xchg
mov
loopne
push
in
cmc
cmpsl
dec
decl
insl
adc
div
rolb
je
mov
and
cld
in
adc
jae
notl
mov
push
pop
sbb
or
inc
push
sti
mov
xor
shll
int3
gs
cwtl
sub
out
push
stc
push
jle
adc
mov
lds
aam
out
sti
fwait
stc
add
fucomi
inc
mov
out
insb
aam
jns
test
std
pop
fbstp
lret
jle
out
mov
inc
dec
and
int
les
adc
in
xor
mov
add
sbb
daa
shlb
inc
and
ss
pop
fcoml
testb
leave
mov
xor
xorl
or
js
xchg
push
pop
daa
add
sub
add
push
cmp
mov
test
jns
jl
add
inc
jb
fldt
in
lock
cltd
jae
pop
inc
jbe
cmp
popf
push
ds
bound
mov
cs
push
les
loop
shll
mov
mov
arpl
in
xor
pop
push
or
pop
movsl
mov
das
sub
pop
outsl
xor
xor
push
rorl
scas
or
test
ret
mov
repnz
jo
mov
cmp
ret
popf
movsl
fstpl
in
mov
push
ja
pop
mov
mov
xor
sbb
push
jo
popa
out
lock
lods
fadds
loop
out
pop
arpl
or
in
bound
inc
and
iret
arpl
sbb
outsb
loop
pusha
mov
enter
push
adc
ret
push
pop
sbb
xor
jmp
into
test
cli
daa
cmp
jne
es
cmpsb
pop
into
ret
dec
scas
rclb
adc
ficomps
jg
in
sti
insl
mov
pop
mov
stos
push
xchg
in
int
nop
ret
popf
movaps
xchg
cld
int3
cmp
ds
xchg
xchg
xor
dec
in
fisubrs
push
popa
mov
mov
pusha
sbb
or
stos
inc
jmp
push
es
sub
or
clc
add
mov
lds
repnz
ljmp
mov
and
mov
xor
push
aas
test
xchg
inc
mov
gs
jecxz
bound
fimull
mov
cli
push
mov
add
fnsave
loope
cltd
mov
mov
ror
mov
repz
pop
jmp
or
sub
insl
int
sti
push
xchg
popa
xchg
pop
mov
cmp
nop
shrb
movsl
jle
dec
je
into
fimuls
jo
mov
ror
cmp
mulb
mov
shl
mov
stc
jle
test
mov
sbb
sarb
mov
mov
test
xchg
jle
push
push
outsb
call
call
data16
inc
inc
fnstenv
xchg
xor
std
out
lcall
test
mov
push
data16
push
adcl
dec
sti
xor
in
mov
jl
shl
sub
adcl
cmp
sub
ljmp
out
push
sbb
shlb
jno
adc
sbb
frstor
js
mov
in
cmp
outsl
rclb
dec
inc
mov
push
dec
dec
or
push
cmc
fsubrl
adc
sbb
mov
jmp
and
mov
out
lret
or
sub
adc
loopne
pop
stos
sub
dec
add
pop
adc
pop
pop
xchg
lods
jle
mov
push
jo
pop
xchg
and
ss
test
icebp
clc
adc
test
push
aad
dec
add
repz
push
ljmp
stos
test
add
pop
out
nop
and
push
stc
mov
shrb
inc
mov
xchg
inc
aaa
out
jge
sbb
hlt
inc
push
xchg
in
jne
gs
ret
stos
arpl
data16
repnz
sbbb
fnstsw
jno
mov
mov
aad
or
push
lahf
mov
loopne
mov
inc
jno
cmpsl
outsb
shl
shll
dec
cwtl
push
dec
mov
clc
call
hlt
or
sub
jnp
popf
dec
rorl
pop
or
lahf
xchg
les
rorl
popf
jmp
xlat
insl
in
and
jb
mov
xchg
hlt
push
add
sub
xor
idiv
scas
mov
dec
push
or
stos
fadd
jnp
lcall
fs
inc
push
xlat
cmpsb
gs
scas
sahf
mov
xchg
loopne
mov
loopne
inc
push
jne
xor
inc
sub
xor
jle
xor
dec
add
push
xchg
jg
cmp
in
add
lret
xchg
push
pop
cld
into
clc
or
mov
stc
fists
sti
sub
push
insl
sub
imull
xchg
repnz
bnd
push
rcrl
mov
sbb
lock
xchg
push
popf
dec
dec
test
pop
repnz
cmpsl
aas
sbb
das
and
push
sbb
sbb
aas
and
test
cmc
out
insl
xorb
sbb
lds
mov
mov
outsl
jae
xlat
sub
sub
or
fisubl
xchg
or
je
fistl
addr16
pop
into
jae
pop
sub
sub
shll
popa
xchg
dec
test
push
cwtd
adc
jb
jbe
lahf
imul
or
sub
mov
adc
mov
xchg
adc
dec
loopne
cltd
dec
cmpsl
push
adc
int
fucomip
mov
cmp
rol
mov
mov
lock
xchg
insl
aas
push
and
mov
unpcklps
or
pop
and
mov
mov
cmp
lcall
mov
lcall
loope
lock
jbe
shll
imulb
push
into
adc
adc
mov
out
pop
icebp
mov
dec
fidivrl
push
out
xchg
popa
enter
into
hlt
adc
push
jo,pn
add
ret
push
out
fwait
stc
cmp
push
and
adc
dec
dec
lcall
imul
call
in
cli
mov
dec
ja
xchg
xor
or
sub
add
jnp
cmpsl
dec
jge
es
test
hlt
fnstenv
jmp
loope
sbb
int
into
rol
lret
dec
push
push
cmp
mulb
popf
icebp
imul
push
pop
push
add
ss
lock
stos
push
adc
sub
mov
sarl
lock
lds
sub
mov
and
sub
popf
pop
xchg
inc
pop
mov
xchg
ret
or
mov
pop
not
ret
jge
pushf
push
push
or
mov
jbe
addr16
jmp
and
stos
jg
xchg
call
test
stc
push
rclb
fs
inc
dec
fisttpll
xchg
sub
test
pop
int3
mov
cmpsb
in
push
shr
fucomip
jge
ljmp
mov
aad
aaa
or
sub
frstor
push
pop
stc
imul
push
mov
cwtl
adc
mov
adc
sarl
dec
shlb
xchg
mov
arpl
or
jnp
mov
jae
loopne
cmp
jns
inc
sub
dec
dec
cmpsb
outsb
sub
aam
fs
mov
adc
jp
mov
lea
lcall
rorl
mov
xor
and
dec
jle
xchg
jns
pop
bound
xchg
fwait
cmp
push
pop
dec
icebp
adc
imul
mov
divb
adc
inc
pop
and
in
sub
js
ljmp
inc
int
cmp
dec
sbb
pop
pop
lahf
dec
sbb
fildll
sahf
xor
ja
popf
adc
sbb
mov
cmp
or
jecxz
repz
xchg
jns
popf
mov
and
arpl
repnz
adc
add
mov
jg
mov
int3
arpl
pop
stc
mov
jp
ret
adc
add
jmp
mov
imul
push
inc
pop
bound
jl
push
xchg
xor
dec
sbb
jbe
popa
pop
sbb
xchg
not
inc
cmp
add
mov
outsb
mov
rclb
mulps
fstpl
pop
xchg
pop
cli
test
sub
mov
xor
fcomi
adc
gs
pop
out
jno
push
mov
inc
add
testb
cmp
pop
push
dec
jns
sub
icebp
prefetch
or
mov
jecxz
xor
aam
sbb
mov
sub
push
mov
outsb
cs
mov
loop
cmp
out
fdivs
push
lret
or
loop
jg
popf
fidivl
fcomp
test
add
fidivrl
imul
call
lret
sbb
test
rorb
or
roll
imul
add
arpl
jo
insb
outsb
push
cmpsb
sbb
inc
pop
fsubrl
in
std
pop
push
and
jne
cmp
es
dec
inc
xor
mov
icebp
in
dec
pop
sbb
inc
sub
fisubs
sbb
clc
sub
lret
out
jae
stos
mov
jg
mov
jb
mov
mov
dec
pop
fisttps
add
jnp
dec
rep
push
jge
adc
insl
fdivrp
cwtl
xor
ds
cmp
mov
add
sarl
add
push
jl
add
adc
sbb
pushf
adc
dec
jmp
mov
or
jno
repnz
subb
out
dec
xor
popf
insb
push
fisubrl
cmp
or
pop
or
jae
or
push
cmc
xchg
cltd
pop
clc
lcall
ret
add
adc
pop
dec
movsl
gs
fldcw
fisubl
gs
xchg
cmpsb
sub
pop
insl
push
pushf
jnp
adc
mov
out
into
add
mov
std
pushf
dec
add
adc
mov
mov
and
dec
das
sub
faddp
push
mov
sbb
jmp
pop
cs
cmp
rcrb
fldcw
jo
fstps
xor
jbe
and
add
int
push
xchg
in
sbb
movsl
mov
sti
faddl
out
mov
orl
aad
sbbb
xchg
lods
flds
cmc
or
hlt
cmp
mov
mov
inc
xor
test
out
and
push
sub
mov
int
jl
lds
or
mov
arpl
pop
bound
jo
cmpsl
mov
pop
and
test
ja
test
lret
inc
or
cmp
add
fucomp
or
or
inc
or
repnz
xor
lods
popf
sti
xchg
xor
mov
shll
inc
jmp
adc
add
ds
xor
xor
push
pop
test
ret
push
add
scas
rorl
or
add
rorl
or
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
out
push
and
outsb
fs
outsb
cs
jp
add
jp
jl
push
sub
popa
das
mov
dec
test
push
mov
jg
out
fistpll
pop
fiaddl
ljmp
jle
aaa
lods
sbb
push
je
push
push
add
fwait
icebp
scas
jg
cmp
sbb
loopne
mov
stc
pop
clc
sub
push
hlt
sarb
test
dec
xlat
inc
test
idivl
sbb
imul
cs
push
ret
shr
insl
pop
ja
aad
and
les
pop
sub
jecxz
popa
pop
stc
das
adc
popa
cmp
mov
pop
js
pop
insb
sbb
jp
nop
test
push
testb
inc
movsl
add
and
mov
out
lahf
jmp
sahf
mov
push
rclb
dec
loopne
add
sub
fwait
sbb
stos
ret
and
push
jo
pop
dec
add
es
out
dec
dec
xlat
cmc
dec
scas
mov
js
repnz
add
call
into
aad
call
add
xchg
cld
sahf
inc
mov
or
cmc
xchg
movsl
out
into
add
lcall
outsl
push
movsl
and
leave
jp
sbbb
out
icebp
jg
sub
cld
xchg
cmc
jne
enter
and
fwait
daa
sti
xor
les
lock
cmc
fnstenv
mov
pop
push
popf
shl
jp
test
lahf
popa
pop
mov
in
lods
loope
pop
xor
cmp
gs
cmp
shlb
pop
inc
and
mov
test
mov
pop
lods
cmc
shrl
dec
inc
lock
sbb
nop
ljmp
mov
push
shrl
jbe
imul
mov
cmp
fidivl
lods
jp
jb
loop
test
sub
push
ret
out
out
hlt
pop
adc
push
push
daa
repz
imul
dec
pusha
xorb
or
xchg
dec
loopne
test
mov
or
outsb
adc
push
aaa
out
sbb
iret
pop
and
push
mov
mov
sub
push
outsb
xor
jg
xchg
push
scas
pushl
mov
sbb
rorl
xor
adc
sahf
lock
rol
repz
std
in
movsb
jl
xchg
sarl
push
pop
mov
loopne
fadd
lret
xor
dec
mov
aas
jb
xchg
lods
cmpsl
push
mov
xchg
xlat
adc
or
repz
xchg
adc
xor
addr16
and
mov
pop
lcall
mov
rcrb
jbe
insl
inc
sbb
dec
cmp
in
and
dec
scas
inc
out
and
js
xchg
lcall
push
push
pop
sahf
pop
push
shlb
int3
shr
push
fistps
push
mov
xbegin
in
sar
mov
adc
ja
pop
movsl
sub
rorb
xor
std
pop
push
dec
jns
rclb
fisubs
in
stos
decb
inc
add
cmp
add
mov
pop
fisubl
cmc
sub
add
pop
inc
jle
rcr
dec
push
adc
pop
or
mov
xchg
scas
outsl
ss
push
mov
adc
sub
out
adc
rcrl
xchg
dec
hlt
mov
lock
cmp
jp
fdiv
js
mov
in
mov
xchg
testl
shlb
lret
dec
push
push
lods
xor
or
pop
adc
inc
pop
sbb
sbb
inc
cld
xor
sahf
aam
pop
addr16
jecxz
dec
mov
imul
scas
mov
shl
call
js,pn
rorb
push
or
notl
pop
inc
sti
loopne
and
jmp
out
xor
outsl
jno
aas
imul
shll
psrad
mov
cltd
cli
push
cltd
mov
jmp
fdivrs
or
push
mov
sub
iret
pop
sub
incb
repz
push
jae
mov
mov
pop
mov
out
loope
bound
call
xchg
sub
and
xchg
insl
fxch
and
cmpsb
mov
out
lock
stos
ds
repnz
add
shll
lea
clc
xor
fildl
popa
xchg
or
imul
fildl
sbb
cmp
push
mov
imul
rcrl
cmp
fisttpll
dec
repz
jle,pn
xchg
jb
inc
fdivrl
stos
shlb
scas
mov
inc
dec
cmc
mov
js
sti
fildl
es
or
test
gs
mov
jae
xchg
out
dec
jg
jge
rcll
shll
loopne
add
loopne
sbb
data16
pop
pop
ds
lret
ficoms
and
sbb
iret
inc
mov
popa
mov
sbb
nop
dec
aad
mov
aaa
mov
add
cmp
or
add
ljmp
bound
icebp
push
or
mov
inc
sub
xchg
incl
inc
xchg
call
mov
jnp
xchg
flds
fwait
mov
cwtl
aad
lods
aaa
or
lret
nop
aad
ja
add
inc
mov
pusha
cmc
mov
fldt
sub
adc
imul
xor
dec
in
in
cmpsb
das
xchg
adcb
jmp
inc
or
xchg
ja
xchg
pop
mov
xor
movb
adc
scas
jae
xor
push
xlat
mov
dec
data16
xchg
mov
cwtl
out
mov
outsb
inc
repz
xor
iret
div
xor
push
jns
insl
inc
add
aad
cwtl
dec
dec
mov
add
pop
in
nop
jnp
adc
mov
cmp
jl
imul
shrl
ret
lods
cmpsb
das
mov
lock
and
fdivs
repnz
mov
movsb
sbb
iret
lahf
or
mov
fdivrs
jp
xchg
sbb
push
push
inc
sub
pop
lods
out
out
sahf
dec
je
pushf
mov
test
pop
sub
xchg
call
push
nop
and
loopne
xchg
sbb
rcrl
ror
lds
aad
int
jbe
adc
jle
pop
jp
dec
push
inc
mov
test
push
push
leave
adc
push
jo
add
test
pop
repnz
or
xor
add
and
pop
in
mov
mov
movsl
fistps
lods
sub
xchg
or
leave
push
ljmp
pop
lods
sbbl
mov
or
ret
add
and
popa
loopne
add
testl
imul
cmp
or
pushf
cmp
jge
sub
adc
mov
sub
push
leave
dec
loope
dec
pushf
mov
cwtl
iret
xchg
sbb
ffree
sahf
mov
cmpsb
test
test
divl
outsb
jbe
mov
cmp
or
dec
jae
movsl
daa
push
scas
hlt
stc
mov
popl
sbb
ss
int3
fs
inc
cmp
dec
jp
les
cmp
ret
leave
pop
jmp
jae
vorps
cmp
xlat
cmpsl
mov
dec
shlb
sahf
daa
xor
cs
mov
cs
inc
adc
xchg
insl
jo
fadds
sbb
je
insb
sub
stos
push
and
sti
loopne
dec
adc
insb
xchg
fsubrs
and
mov
iret
outsb
cmp
je
mov
mov
and
mov
add
jecxz
xchg
imul
jns
push
sub
cld
xchg
scas
push
pop
sbbl
mov
arpl
mov
mov
out
ret
xor
mov
xlat
dec
dec
lret
mov
imul
imul
mov
std
das
test
and
sub
inc
push
push
ret
enter
cmpsb
adc
dec
addr16
xchg
jno
shrl
lret
pop
adc
cmp
stos
stos
ret
xchg
sub
and
sbb
cmpsb
fdivr
scas
mov
push
xchg
movsl
loopne
inc
push
inc
cmp
insb
shll
lea
scas
adc
rcrl
mov
xchg
pop
mov
fistl
sbb
sub
sti
adc
pop
xchg
sub
push
fiaddl
call
xchg
pop
gs
jp
imul
xchg
lods
loopne
adc
cmp
inc
cmp
call
jns
lds
mov
into
xor
xchg
pop
repnz
or
mov
adc
adc
stos
enter
data16
xchg
inc
cld
push
loope
or
sbb
mov
sub
leave
pop
mov
hlt
adc
inc
mov
and
inc
jne
sbb
jecxz
mov
adc
arpl
fistl
xor
arpl
adc
js
dec
sahf
cmpsb
mov
pop
mov
xchg
xchg
lret
addb
mov
jno
push
std
fisttps
arpl
jle
and
pop
pushf
sub
adc
push
inc
cltd
mov
js
sti
add
sbb
test
lret
push
sub
outsl
fistpl
adc
mov
sub
mov
sbb
insl
cmp
push
mov
mov
sub
gs
or
mov
je
pop
aaa
jb
and
mov
mov
or
stos
das
jmp
scas
lahf
mov
mov
pop
add
popf
repz
outsl
sbb
dec
orl
or
sbb
sbb
data16
dec
test
cltd
dec
or
das
loopne
and
inc
inc
or
fisubrl
pop
sbb
sti
cmpsl
scas
jg
repz
leave
mov
pusha
lods
mov
add
decl
or
mov
cmp
addb
jp
popa
push
cmp
and
fdivrs
and
lret
lds
push
out
inc
mov
call
stc
jne
sub
adc
mov
hlt
sbb
cs
adcb
mov
or
lock
int
hlt
inc
testb
dec
test
mov
inc
jp
outsl
mov
mov
stc
push
cltd
sbb
js
dec
mov
jmp
and
pushf
scas
mov
inc
in
adc
jp
dec
ljmp
aad
pop
aad
dec
adc
jbe
push
push
cld
hlt
or
call
sub
mov
jmp
xor
cmpsb
dec
es
test
sub
xchg
xchg
cmp
push
fbstp
adc
add
jo
in
mul
lods
out
mov
sbb
inc
mov
xlat
push
mov
ja
mov
xlat
dec
cltd
aad
adc
es
pop
in
mov
into
mov
dec
xlat
aas
xchg
dec
and
xchg
cmpb
aam
pop
adc
mov
cmp
call
jle
das
jmp
cltd
cmpsb
stos
test
cmpl
pop
mov
xrelease
shll
fwait
fbstp
mull
cmp
popa
sbb
push
inc
mov
or
jl
fbld
jae
sarb
pop
scas
iret
inc
pop
into
cmpb
test
xchg
into
aad
mov
cmpsb
sub
repnz
stos
fbld
icebp
lock
pop
jp
pop
cmp
sbb
dec
les
shll
mov
push
lods
pop
xor
int3
adc
jno
ds
hlt
insl
pop
mov
lahf
aad
je
jge
mov
jae
cmpsb
repz
hlt
clc
popf
ss
jp
adc
jecxz
mov
lcall
popa
mov
test
cwtl
in
sarb
dec
cli
out
out
inc
fisubs
sbb
loop
mov
xor
or
dec
pop
pop
repz
push
call
dec
adc
adc
mov
outsb
mov
aad
hlt
jo
hlt
inc
inc
mov
add
mov
push
add
push
cwtl
mov
loope
sub
fistl
rcrb
jecxz
dec
in
es
outsb
inc
xor
sbb
cmp
fs
sbb
cltd
xchg
leave
and
pop
jecxz
lds
xchg
popa
aas
xchg
ret
push
pop
mov
shlb
ficoms
ljmp
xor
mov
cltd
sarb
leave
sahf
cmp
lds
jnp
cmp
stos
mov
xchg
xchg
adc
pop
pop
loopne
cltd
jecxz
arpl
jge
out
ret
adc
bound
jp
pmovmskb
sti
lds
pop
pop
and
mov
xor
ds
dec
imul
jb
popa
cmpsl
jmp
mov
mov
mov
mov
imul
push
sub
adc
add
dec
test
sti
push
insb
aas
push
daa
adc
adc
in
adc
cli
mov
dec
sub
addr16
fsts
mov
mov
jmp
and
fwait
push
sub
or
outsb
jmp
cli
or
fisubrl
push
stc
and
pop
rorb
shr
and
pop
imul
imul
xchg
mov
test
imul
and
cmp
xchg
push
int3
dec
and
sub
in
add
adc
pop
xor
adc
add
dec
inc
adc
sbb
adc
xorb
jns
movsl
push
mov
and
sub
sub
arpl
lea
inc
dec
mov
pop
sub
jae
inc
adc
popf
sbb
rcll
enter
push
xor
mov
nop
incb
pop
jmp
imul
in
repnz
cmp
xchg
or
sti
add
int
mov
lea
cmp
fistpll
cs
add
push
addb
pop
aam
xchg
cmp
mov
insl
jg
push
subl
inc
insb
movsl
mov
mov
lods
or
call
jae
test
cwtl
mov
add
inc
int3
cmpsl
jne
imull
sub
and
fdivs
push
popf
mov
lcall
xor
mov
xchg
mov
mov
scas
std
sub
iret
pop
into
jecxz
or
add
xor
mov
pop
xchg
mov
scas
test
addr16
in
int
add
leave
pop
and
jno
mov
cmp
test
aaa
sbb
lods
stc
or
imul
mov
insb
xor
push
je
adc
push
rorb
mov
inc
cmpl
push
ret
sub
xor
cmpsl
dec
xchg
lret
lods
mov
inc
mov
shll
mov
add
fcoml
sub
popf
popa
mov
das
push
pop
scas
lea
rol
lea
lea
fldt
or
mov
inc
clc
mov
jge
and
stos
pop
inc
imul
push
sub
push
lods
out
sti
jae
adc
jb
sub
out
ret
push
in
jle
je
fnstenv
sti
mulb
test
scas
xor
push
and
in
fidivl
and
sbb
cmpsl
xor
adc
sbb
xchg
insl
sbb
jmp
adc
in
js
add
pop
and
leave
mov
jo
add
scas
pop
add
and
enter
lahf
cli
jmp
cmpsb
test
mov
jg
pop
sbb
sub
divb
sbb
mov
adc
mov
insb
stc
and
out
xor
pop
iret
sub
fs
xchg
or
ss
sbb
aaa
filds
adc
movsb
mov
cmc
scas
sbb
add
fisubl
icebp
jae
pop
jnp
imul
jno
fbstp
jnp
and
cli
inc
sbb
pop
xor
movsl
lods
xor
mov
call
fwait
adc
inc
repz
pop
fsubl
cmpsb
scas
push
or
clc
adc
jb
mov
xchg
shl
jbe
test
pop
shlb
shll
enter
dec
jne
cmp
fwait
pop
jl
popa
rcrl
pushf
dec
fidivrs
imul
cli
jbe
push
imul
mov
mov
fildll
shr
pop
insb
sbb
rorl
push
aaa
or
dec
push
in
pop
sbb
shrb
add
mov
out
mov
lahf
cltd
clc
push
xchg
and
test
adc
xor
pop
push
jge
sbb
sti
mov
shlb
mov
add
xchg
fmul
add
addr16
mov
mov
sub
mov
repz
movl
sub
fsubrl
sarb
or
and
and
repz
and
inc
adc
xor
lea
xchg
inc
loop
insb
sar
or
addl
jg
subb
mov
adc
inc
out
sub
fucomi
int
aad
add
out
sarl
pop
xchg
add
fisttpll
xor
sahf
fsub
dec
clc
stos
fwait
cmpsb
mov
mov
stc
fldcw
jg
add
mov
inc
fs
push
inc
pop
inc
lahf
pop
mov
sbb
cwtl
test
idivb
and
nop
faddl
nop
or
xor
or
pop
ja
in
lret
mov
shrb
icebp
sub
jo
mov
cmp
mov
adc
mov
mov
int
jecxz
mov
xor
dec
mov
pusha
iret
movsl
jne
stos
repz
mov
cld
jge
mov
jmp
or
xchg
call
pop
jmp
adc
cmp
sbb
adc
and
ljmp
out
sub
fmuls
push
dec
sub
mov
jle
mov
icebp
pusha
mov
xchg
sbb
movsb
jne
test
or
in
sbb
sti
jae
and
das
gs
out
dec
inc
aaa
fldenv
clc
cs
mov
ret
push
mov
int
add
sub
pop
mov
ds
inc
jl
sti
fstps
push
out
cmp
out
cmp
cmp
and
psrlw
aas
fwait
out
test
icebp
fcoms
cmpsl
pop
inc
icebp
dec
and
mov
push
push
je
sbb
adc
cmp
movsl
lods
jge
hlt
pop
scas
push
jg
push
lds
inc
pop
cmpsl
mov
imul
call
cmp
sbb
jle
in
jmp
pop
movsl
inc
jge
daa
and
add
mov
fisttpll
mov
mov
xor
xor
test
and
xchg
lret
pop
imul
adc
xlat
mov
push
xor
insb
inc
jmp
lcall
lods
pop
sub
mov
bnd
bound
dec
add
ss
fldlg2
push
pop
sbb
mov
aas
fnsave
add
enter
sbb
repnz
loope
pop
or
ret
popa
cmp
pop
arpl
and
xchg
cwtl
xorl
popf
shlb
xor
mov
sub
sub
lock
inc
dec
push
test
mov
mov
mov
mov
jg
sbb
call
add
popf
xor
sti
push
leave
hlt
les
adc
pop
test
sarb
mov
fidivl
dec
andl
test
add
add
mov
cmp
lods
dec
xor
mov
mov
mov
fstp
arpl
jg
call
dec
xchg
push
mov
inc
fdivrs
mov
push
mov
enter
xor
or
lea
jns
mov
jno
std
lods
push
js
jg
and
jb
daa
jbe
xlat
adc
jne
xchg
out
pop
jmp
push
jge
ficoml
jle
push
ret
pop
push
ss
dec
movsb
jmp
imul
xorb
add
xchg
mov
sub
in
fnstenv
mov
inc
arpl
fsubp
jne
push
xor
dec
pop
lahf
andb
inc
xor
test
mov
fisubrl
imul
cli
jmp
test
pop
mov
jp
mov
sbb
stc
aam
inc
dec
in
stos
mov
push
pushf
mov
idivb
addr16
or
xchg
push
js
std
mov
ret
adc
pop
es
ljmp
add
les
jo
jle
clc
in
jmp
xchg
std
inc
les
jo
sbb
mov
imul
sbb
xchg
loope
jg
test
jo
dec
mov
repnz
bound
scas
in
gs
inc
mov
sbb
xor
push
xchg
divb
adcb
ret
stc
and
repnz
ds
idivl
jecxz
jae
arpl
lea
cmp
repnz
repz
push
stos
std
fsts
loopne
out
rorl
xchg
je
movsl
jp
popf
mov
icebp
mov
and
xchg
pusha
or
mov
mov
pop
push
cmp
push
xchg
ret
mov
into
imul
mov
data16
fwait
inc
push
mov
loop
ret
mov
lock
jecxz
add
lea
orl
cmovs
mov
sbb
jmp
xor
xlat
pop
gs
mov
jbe
mov
cmp
repz
or
pop
push
mul
adc
movsl
and
inc
test
addr16
les
mov
fnstsw
dec
into
jg
adc
cli
lea
mov
push
xlat
mov
dec
sbbl
add
push
popf
jnp
sub
leave
mov
mov
xor
pop
cli
mov
cs
xor
pop
push
hlt
stos
mov
shlb
aad
in
and
or
cmpsb
iret
aaa
jecxz
and
aad
nop
jnp
and
xor
push
mov
push
and
sbb
lret
inc
xchg
bnd
dec
stos
sarb
negb
dec
pop
scas
scas
xor
sbb
lcall
sbb
es
mov
popf
adc
stc
scas
jno
sbb
xor
push
test
add
test
pushw
cwtl
shl
sub
xchg
mov
jne
lea
mov
sub
push
jge
push
pop
icebp
cmc
cmp
or
mov
roll
and
in
in
add
mov
mov
repnz
add
dec
jl
cmp
ret
sbbl
xchg
shll
push
mov
sbb
aam
test
mov
cltd
outsl
out
add
int
mov
lret
les
nop
cmp
mov
mov
sub
adc
test
pop
mov
int3
mov
adc
xchg
jnp
lock
add
sbb
hlt
sub
test
popa
mov
xlat
xchg
lahf
jo
fsts
or
loopne
lods
add
sub
pop
lds
lods
xchg
mov
inc
add
mov
sarl
mov
jbe
out
ficoms
leave
faddl
pusha
lret
call
lcall
xor
xor
adc
sub
test
mov
dec
jne
push
add
sub
push
jno
mul
pop
push
sub
bound
pusha
jl
xchg
lret
mov
pop
xchg
std
and
stos
test
stc
bound
pop
idivl
or
mov
fsts
mov
xchg
call
jge
popa
scas
push
mov
and
add
scas
dec
xor
cmp
jbe
add
mov
cmp
jns
in
rorl
push
cmp
int
lock
imul
adc
scas
push
je
je
cmp
lret
test
lds
int
lods
sahf
enter
mov
and
int
cld
dec
fsub
sbb
sbb
xor
aam
mov
lcall
jle
push
pushf
mov
jns
repz
dec
adc
jecxz
sub
mov
cs
mov
scas
mov
ja
test
or
or
mov
es
in
shr
or
cmp
dec
push
mov
popf
test
in
jge
aam
out
ja
push
sbb
inc
lahf
jne
mov
fs
pmuludq
call
and
pushf
add
popf
mov
pop
aas
cmpsb
pop
lcall
cmc
sub
mov
sti
fs
and
push
repz
sbb
cmp
pop
stc
out
inc
imul
jmp
sub
sub
fbstp
cmp
mov
sbb
scas
movb
rolb
cld
pop
in
repz
pop
cmp
clc
push
stos
push
std
in
shll
lcall
fldcw
lret
fbstp
nop
test
push
divb
mov
adc
fdivp
pop
mov
jle
push
cltd
dec
jl
sti
or
std
sbb
mov
sbb
rcrb
sti
rorb
mov
jne
mov
in
push
sub
sbb
fcomps
bound
lods
imul
pop
ret
cmc
insb
popf
packsswb
loope
lahf
cs
cmpsl
sti
mov
push
dec
iret
ror
test
jo
xor
mov
adc
mov
inc
sbb
lock
insl
or
fidivl
mov
scas
imul
test
rol
sbb
das
in
lods
xor
or
addb
stos
je
or
lea
lods
scas
push
imul
loopne
int
and
daa
addr16
pusha
push
push
pusha
ss
cmp
ret
fmull
lods
xlat
data16
and
lods
pop
mov
jle
inc
jmp
into
idivl
push
xor
sub
out
and
vcomisd
jmp
dec
and
dec
fiadds
out
test
or
leave
mov
lds
jae
jle
add
les
push
notb
stos
std
xor
mov
jae
or
sub
sbb
lret
lock
loopw
iret
mov
dec
push
pop
push
add
stos
pop
cmpsl
daa
add
ret
mov
les
int3
int
js
mov
sahf
lds
in
test
mov
call
mov
and
sbb
rclb
push
mov
pop
loop
shrl
cmc
adc
jle
mov
icebp
and
ljmp
mov
lods
adc
add
and
out
sbb
jmp
add
push
std
xchg
inc
mov
insl
mov
popf
cmp
rcl
mov
ljmp
add
or
lret
pop
inc
je
sub
hlt
aad
mov
mov
push
out
cmp
scas
xlat
cmc
lods
adc
and
scas
jmp
cmp
insl
mov
cmp
lods
cmp
add
sub
xchg
sbb
int3
rcrl
test
jle
inc
xorl
mov
or
cmp
lcall
xchg
dec
push
sub
add
lret
mov
cmp
or
mov
sub
sub
jge
mov
fs
dec
mov
mov
xor
jg
movsl
adc
push
or
pop
inc
fnsave
dec
cwtl
pop
push
in
int3
xor
bound
xor
adc
jg
and
inc
bound
mov
mov
lods
jecxz
jae
stc
cli
nop
das
in
sub
jecxz
hlt
das
into
or
pop
pop
jo
repnz
xor
mov
in
pushf
test
inc
mov
fnstenv
dec
cmp
rcrb
or
cmp
add
or
pop
pusha
mov
aas
xchg
mov
inc
push
mov
push
icebp
mov
inc
frstor
pop
cli
enter
imul
insb
xchg
push
mov
arpl
adc
lods
pop
adc
loopne
mov
cmpsb
aad
xchg
and
imul
stc
out
mov
loopne
add
in
stc
dec
cmp
arpl
jl
leave
jae
cmp
fwait
sbb
out
das
dec
add
xchg
ret
mov
or
std
or
jecxz
clc
out
xor
xchg
xlat
fs
sbb
lret
hlt
leave
int3
jbe
or
jge
jp
adc
jne
addb
xchg
dec
and
fildll
fwait
xchg
or
in
loop
mov
mov
jp
or
insl
push
cmc
pop
es
insl
pop
or
cmpsl
roll
ss
mov
cmp
loope
frstor
mov
xchg
dec
add
fmuls
sbb
movsl
xchg
cmp
sub
daa
out
hlt
pushf
ret
dec
fsts
shrl
xor
push
mov
jb
int
into
movsl
roll
inc
scas
sbbb
out
scas
adc
retw
jae
push
lret
inc
sub
addr16
divl
jo
scas
sbb
push
or
pusha
sbb
leave
jno
mov
mov
addr16
fs
inc
push
mov
in
mov
jecxz
sar
clc
into
xchg
mov
int3
loop
mov
ds
sbb
push
popf
pop
repnz
das
mov
movsl
mov
insl
outsl
sub
push
fldl
jp
gs
add
movsb
mov
scas
sub
dec
lock
or
pop
filds
mov
sub
sub
adc
fldl
jne
shll
sbb
lahf
lea
mov
mov
jmp
les
push
mov
or
and
das
in
xchg
xor
imul
xor
ror
jmp
sub
ret
les
xchg
xchg
dec
add
out
mov
daa
dec
add
push
push
mov
inc
aam
test
out
mov
rcl
stos
xchg
cwtl
clc
and
sbb
fadds
xor
or
adc
push
mov
movsl
das
mov
out
mov
xchg
mov
mov
dec
push
in
int3
shrb
or
mov
addr16
stos
imul
lea
out
fnstcw
loop
fsts
lds
imul
jg
rolb
inc
int3
dec
mov
sar
cmp
and
imul
push
jecxz
sub
dec
cmp
fstps
mov
jmp
je
mov
inc
and
mov
and
xchg
sub
jbe
or
mov
dec
loop
in
mov
and
push
pop
sti
adc
jo
jge
iret
stos
sbb
xchg
mov
pop
movsl
insb
jbe
mov
xor
imul
sahf
loopne
add
stos
inc
mov
sbb
adc
xor
dec
or
sbb
adc
call
push
nop
sub
in
je
jb
push
add
les
add
push
pop
jnp
push
leave
cmp
popa
jb
pandn
sbb
cwtl
cli
push
mov
sbb
addr16
jae
mov
int
add
rcrl
pop
addr16
arpl
adc
cmpsb
lock
dec
mov
mov
dec
cltd
dec
xchg
int3
inc
fldl
adc
mov
and
loop
xchg
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
jmp
push
pusha
clc
push
call
add
or
imul
add
jp
sbb
jmp
push
aad
roll
out
add
sbb
jnp
add
shll
xchg
test
lock
cmpsb
and
jmp
add
clc
inc
push
fnstsw
rol
iret
xchg
xchg
mulb
inc
daa
insb
pop
rcr
inc
mov
mov
mov
jmp
dec
mov
test
lods
lds
pushl
fcoms
stos
lods
je,pt
jle
pusha
pop
xchg
stos
sub
mov
mov
sub
xlat
ss
xor
and
out
ds
in
loop
dec
mov
inc
gs
mov
sub
jecxz
and
jl
or
ret
int
popa
xchg
test
movsl
xchg
les
out
nop
outsb
or
and
dec
rep
out
dec
adc
mov
bound
das
pop
cld
sbb
or
cmp
sub
clc
jp
and
ljmp
test
mov
ss
xchg
adc
rorb
cwtl
movl
pop
out
mov
or
and
movsb
xor
dec
jo
lcall
jmp
mov
push
roll
push
es
jle
mov
cld
mov
ljmp
fwait
loopw
mov
xchg
and
jns
lcall
push
fistl
inc
into
pop
xchg
test
mov
lock
mov
mov
cli
cmpsb
push
insl
sti
dec
insl
inc
adc
mov
out
out
mov
addr16
out
andb
or
aas
or
daa
pop
jne
iret
inc
xor
cmp
stos
push
mov
mov
out
ljmp
int3
xchg
pop
idivb
jmp
pop
pop
mov
in
insl
scas
xchg
sub
jle
fdecstp
push
pop
jne
jo
mov
sbb
js
bnd
or
or
sbb
aaa
push
jp
xor
jb
gs
dec
dec
xlat
dec
mov
xor
lods
out
and
loope
orl
mov
jle
test
inc
shlb
in
lret
js
add
mov
xchg
cmp
jmp
mov
aam
ja
inc
push
scas
or
jp
add
cmp
and
sub
test
mov
sbb
inc
jns
shr
imul
nop
jns
pop
and
mov
das
xchg
gs
pushf
dec
fs
lock
sub
jmp
fstl
cld
pop
rcrl
push
in
mov
jnp
add
sbb
xor
clc
cmpsl
pushf
pop
lcall
push
and
push
lahf
shrb
stc
stos
mov
int
mov
jg
pop
cwtl
sti
mov
outsl
daa
add
dec
pop
cmp
sbb
addr16
repz
fs
mov
jmp
ret
insl
inc
xorb
mov
cmc
ljmp
leave
test
dec
jbe
xchg
rclb
jbe
andl
sbb
mov
in
in
repnz
in
sbb
fmul
mov
aaa
and
add
adc
adc
mov
div
xor
push
std
test
add
ds
mov
std
xchg
mov
lahf
push
lret
test
and
adc
xor
lahf
nop
pop
fdivp
xchg
push
jle
sub
adc
pop
jp
xlat
or
movsb
mov
out
ja
popf
adc
mov
xchg
pop
rol
jp
enter
ficompl
popf
sub
lret
inc
push
sub
inc
push
inc
xchg
pop
push
test
mov
ret
inc
jg
inc
or
call
hlt
add
push
movsl
cmp
mov
xchg
cld
inc
pop
dec
js
pop
mov
pop
leave
xchg
mov
mov
and
aaa
add
loopne
jne
loop
and
jno
es
ret
jecxz
outsb
or
mov
imul
push
ret
cmp
test
mov
cmp
movl
mov
pop
cs
out
arpl
add
add
sbb
sbb
xchg
mov
clc
call
pop
fstpt
add
mov
popa
jb
mov
add
inc
popa
lahf
add
hlt
push
fcmovnb
cmp
mov
lods
push
fimull
jae
pushf
sbb
sbb
xor
pop
add
xor
push
xchg
push
aas
push
mov
and
je
je
adc
mov
pop
push
mov
sbb
rcl
shll
cmp
inc
popf
push
dec
dec
sub
sahf
adc
mov
movsl
int3
sbb
mov
fsub
pop
fcoml
and
sbb
jg
pop
shrl
repnz
dec
push
int3
imul
jle
mov
xchg
movsl
int3
loopne
mov
sbb
hlt
cmp
adc
bound
mov
flds
inc
xchg
cltd
mov
jbe
int3
out
repz
test
test
adc
mov
or
mov
ljmp
jl
push
out
and
rorl
push
dec
out
ja
test
pop
es
cmp
adc
xor
divl
and
ret
lret
scas
inc
xchg
int3
add
out
bound
rolb
fcoms
push
mov
ds
std
sub
add
pusha
xchg
lock
cld
das
pop
mov
jge
pop
in
test
jne
sub
mov
shlb
sub
cmpsb
cmp
xchg
push
add
xor
jp
pop
sti
mov
fistpl
or
test
movb
mov
and
int3
mov
mov
sbb
inc
scas
mov
jmp
test
push
lcall
dec
pusha
in
ss
outsl
sbb
sbb
push
pop
dec
push
es
mov
pop
je
cmp
jecxz
mov
adc
xchg
loopne
test
add
nop
cs
clc
hlt
aad
adc
jp
push
add
inc
mov
rol
int3
fsubrl
push
out
sahf
adc
incb
mov
nop
mov
dec
pop
pop
sub
and
mov
jle
mov
leave
inc
mov
push
clc
ret
add
xchg
fcoml
mov
jp
mov
xchg
rolb
dec
adc
cmp
or
fs
shlb
pop
stos
in
xor
and
dec
dec
adc
sbb
push
cmpsl
sbbb
cli
xchg
fimull
fcmovb
addr16
add
inc
pop
cmp
xor
push
jg
enter
or
or
pop
pop
data16
jmp
lret
dec
ffreep
out
fcmovb
cwtl
int3
lcall
xchg
pop
mov
decb
xorl
loope
push
pop
test
and
jmp
push
and
inc
addl
in
orl
xor
shll
insl
ss
inc
mov
and
popf
adc
jg
adcl
sub
pop
decb
stos
ds
aam
xor
les
fimull
cmp
lret
lret
mov
xchg
mov
adc
add
sbb
push
mov
ret
jb
sub
dec
sbb
lds
ss
sbb
leave
lods
cltd
mov
add
pop
in
into
and
xchg
pop
les
rcrb
or
dec
xchg
add
cmpsl
jb
psadbw
dec
fstps
test
mov
mov
xchg
rclb
sub
add
repz
add
lds
dec
or
lock
mov
ss
pop
fmuls
adc
aaa
lock
dec
mov
push
cmp
mov
leave
adc
xor
insl
minps
inc
jl
pop
or
sbb
mov
push
dec
jg
jg
test
pop
fwait
sbb
js
adc
xchg
jae
arpl
jecxz
nop
mov
xor
cmpsb
pop
xchg
and
mov
inc
icebp
lods
add
pushf
mov
pushf
ljmp
sub
jmp
out
mov
jl
inc
xor
push
xchg
pop
xchg
and
ss
in
adc
inc
dec
xor
sub
jmp
or
xor
inc
je
popa
adc
jno
xchg
xchg
int3
into
aam
mov
cs
mov
mov
jecxz
shlb
nop
xchg
aaa
lods
cmp
es
sti
xchg
pop
into
hlt
mov
bound
sub
mov
pop
movsl
mov
out
test
movsl
dec
rol
dec
mulb
pushf
lea
jecxz
push
sub
mov
xor
pop
addb
sbb
push
and
sarb
push
dec
push
add
mov
and
aam
jo
xchg
insl
lea
test
aas
pop
cmp
mov
lds
cmovae
add
pop
xor
add
push
adc
out
movsl
or
xchg
cmp
das
push
fmull
add
xor
pop
fidivrl
and
movsl
imul
adc
int3
pop
sub
lds
sub
imul
xchg
sub
mov
sarb
and
adc
pop
sbb
dec
xchg
les
jbe
cmp
les
sub
aad
sub
out
sbb
sbb
mov
mov
or
orl
mov
in
jmp
iret
bound
jl
jge
imul
loope
adc
sti
inc
enter
pop
adc
jne
and
std
stos
cmp
and
int3
and
xchg
shll
adc
das
mov
mov
cs
sub
xchg
out
pop
lods
cld
les
cbtw
mov
sub
shlb
add
pop
inc
movsb
and
mov
push
lret
in
inc
push
jle
cli
sbb
cmp
ja,pn
les
cmp
jo
mov
mov
pop
aaa
iret
leave
aas
int3
jmp
inc
xchg
les
xchg
and
mov
lahf
cmpsb
add
movl
fildll
mov
jns
sub
fdiv
mov
or
mov
inc
add
clc
add
cmp
push
rcrb
in
lods
add
fdivl
movsl
xchg
popf
ljmp
mov
or
mov
mov
adc
ret
pop
xor
les
and
mov
fldt
xchg
push
or
push
push
in
mov
cwtl
jns
pop
es
push
push
push
push
clts
js
mov
loopne
cmp
cwtl
dec
push
add
mov
sub
mov
push
xchg
ffree
sub
shrb
lahf
and
pop
inc
inc
nop
cld
leave
mov
mov
or
loope
jbe
fwait
lcall
lods
push
leave
sbb
push
cmp
imulb
cwtl
dec
jmp
xchg
or
test
shl
fiadds
shll
test
cmc
mov
popf
out
pop
xlat
jge
cmp
insb
mov
in
je
add
fsubs
insb
jb
mov
dec
mov
divb
xchg
cmp
inc
out
fucomi
js
cltd
sub
mov
mov
mov
sub
inc
or
sahf
daa
aas
ja
out
adc
pop
adc
dec
ja
fisttpl
mov
cwtl
icebp
pop
adc
sbb
pop
popf
sarl
push
cs
jae
jmp
ds
jae
push
and
mov
aaa
xchg
dec
add
fsubs
and
das
dec
movsl
mov
mov
lahf
adc
and
pop
outsb
mov
mov
push
rcl
lods
sub
add
shr
fnstsw
dec
cmp
mov
sahf
daa
dec
mov
cmpb
pop
mov
dec
movsl
js
xchg
ret
cmpsb
aas
mov
leave
sbb
mov
adc
adc
jae
xchg
loope
sbb
and
dec
sbb
aam
and
cli
sub
movsl
movsl
xlat
lret
out
jl
fistl
mov
xchg
iret
lcall
dec
cmp
cltd
adc
nop
repnz
push
aas
or
lret
fsubs
dec
jg
pop
cmc
jge
movl
hlt
addb
cs
sbb
js
push
and
pop
sbb
sub
nop
aad
in
cmovns
add
mov
das
lcall
mov
dec
lcall
jns
mov
adc
sti
ja
or
cwtl
rcr
adc
nop
popf
dec
mov
jl
dec
cmp
pushf
std
jo
add
xor
stos
sub
mov
pop
aas
fadds
in
mov
pop
test
sbb
jo
sub
xchg
and
push
movsl
fists
jmp
imul
shrl
sub
jo
and
sub
mov
sub
inc
or
xchg
add
sub
adc
push
or
push
push
push
sub
call
mov
out
push
sub
xchg
push
test
xor
pop
aad
daa
dec
mov
push
in
popl
andb
dec
mov
repnz
add
mov
mov
push
in
adc
dec
adcl
mov
mov
xor
movsl
inc
sbb
rolb
sub
mov
out
cld
mov
or
jno
das
mov
inc
ret
aaa
mov
adc
and
movsl
cmp
das
cmp
out
push
or
mov
loope
fstpt
mov
cwtl
orl
jae
or
insb
leave
icebp
xor
stos
fwait
mov
idiv
shll
jae
inc
add
push
jno
sbb
push
fistpl
xor
and
lock
mov
out
mov
mov
mov
loop
xchg
addl
popa
xchg
mov
bound
jb
dec
pop
fnstenv
fcoms
movsl
es
shlb
jmp
xor
daa
inc
popa
add
cltd
test
or
or
test
push
push
test
cmp
mov
xor
pop
sbb
inc
push
imul
mov
or
mov
enter
sub
icebp
jge
and
inc
sbb
cwtl
rcll
mov
mov
das
pop
jp
out
cmpsl
xchg
rcrb
mov
jg
dec
dec
pop
inc
jle
mov
ss
sub
add
adc
pop
xor
out
into
addr16
mov
loope
out
pop
jb
pushf
add
rcrl
shlb
and
fcmovne
adc
xchg
dec
sub
test
xor
pop
cmp
and
lret
adc
ret
push
idivl
push
sahf
mov
ret
sbb
ficoml
dec
aaa
cmpsb
fs
cmp
nop
push
out
movsl
in
shlb
outsl
js
pop
inc
or
cs
push
dec
add
cwtl
adc
jb
inc
popa
lahf
mov
jbe
jg
jecxz
pushf
gs
cmpsb
push
jg
aaa
loop
dec
inc
or
xor
xor
jns
add
jb
mov
jp
dec
faddp
fimuls
gs
xor
sbb
push
and
xor
gs
gs
adc
flds
mov
inc
inc
ds
ret
jb
in
mov
or
jmp
mov
lret
sub
div
cmp
repnz
lods
fistpl
in
roll
int
pop
mov
daa
mov
lods
dec
sub
ds
push
inc
mov
cld
sub
lds
repz
xchg
mov
out
leave
xchg
push
dec
cwtl
out
lock
in
loopne
into
jno
xchg
mov
aaa
ficoms
lahf
adc
pop
lods
adc
mov
movsb
sub
xor
mov
fdivrs
and
cmp
or
sti
in
mov
inc
push
xorb
and
aad
xor
or
inc
aam
aam
mov
or
jo
xchg
sub
and
fwait
pop
sub
pop
jb
aam
and
enter
mov
rorb
sub
mov
lds
insl
dec
shr
mov
pop
fwait
icebp
jae
pop
jle
cltd
outsb
out
adc
hlt
in
xchg
std
cmp
rcl
or
ret
pop
mov
push
psrld
loope
inc
mov
cli
dec
mov
mov
ja
cwtl
cmp
lret
daa
sub
fdivrs
xchg
fimull
out
xchg
xchg
ret
fstl
hlt
jmp
loop
mov
lret
add
pop
inc
je
test
insb
push
cmp
mov
sbb
cli
add
pop
leave
cli
incl
fldcw
xchg
into
aaa
cmpsl
in
test
xor
mov
dec
out
pop
adc
dec
mov
mov
daa
cmp
jp
inc
sbb
inc
dec
aad
xor
jae
outsb
daa
fcoml
add
and
mov
mov
jnp
subb
xlat
loope
or
fs
iret
es
push
jle,pn
out
xchg
inc
xchg
push
adc
cmp
int
mov
ljmp
loope
rcr
adc
fcmovb
fstpl
inc
insl
test
pop
fadds
pop
test
mov
jp
cld
loopew
pop
adc
sub
clc
inc
repz
sahf
popa
ret
cmp
pop
cmpb
call
xchg
aam
ret
ja
ja
cmp
mov
pop
push
push
clc
xor
shlb
dec
xor
jle
mov
add
mov
in
xor
pop
sub
inc
jo
pusha
dec
jb
int
dec
lods
movsl
les
mov
fimull
mov
in
push
jnp
and
cmp
rcl
xchg
mov
cmpw
fsts
test
jno
or
sti
pusha
repnz
cmp
sti
or
jg
adc
jb
add
pop
pop
movsl
rcll
imul
ret
lahf
push
mov
sbb
dec
popl
scas
lret
fidivs
jmp
push
mov
sbb
cmp
and
add
orb
lods
push
add
loopne
test
mov
adc
lock
cmp
es
push
scas
or
mov
jae
push
xor
dec
pop
lds
lret
sbb
fcmovbe
lret
cmp
bound
pusha
repz
jne
add
mov
aam
call
adc
fstpl
test
inc
or
adcb
push
sahf
xchg
inc
xor
add
fisttpll
mov
rcll
pop
or
divb
inc
mov
sti
ffree
add
clc
adc
aad
test
lods
sub
pop
xchg
loope
lds
shrl
std
test
mov
dec
cmp
cmp
xchg
outsl
scas
mov
fdivrs
jno
outsb
push
std
fdivr
sub
fld
lret
std
sbb
int3
pop
dec
js
adc
fadds
divb
sbb
push
or
sbb
jl
mov
push
fpatan
mov
roll
cs
xchg
sbb
sub
xchg
call
cltd
pop
cli
mov
mov
fwait
sub
push
iret
push
lret
jno
sub
or
adc
pop
in
and
mov
pop
pop
or
aas
sub
rol
cmp
mov
adc
mov
sub
mov
cmp
pop
xchg
mov
arpl
fsubr
cld
xchg
hlt
cmpsb
fidivrl
pushf
jl
fsubrs
movq
pop
mov
gs
std
mov
push
sbb
mov
mov
das
stos
adc
or
sbb
mov
adcl
addl
cli
xchg
icebp
adc
mov
sub
sbbb
popa
push
pop
insb
dec
add
mov
push
lret
outsl
pop
daa
mov
cli
mov
test
mov
test
sub
sbb
pop
data16
repz
fidivl
xor
pop
dec
das
jb
pop
mov
out
call
lret
mov
adc
loop
cs
mov
jmp
mov
leave
orl
shlb
lret
shl
cli
push
dec
stos
pop
inc
fists
push
xlat
and
push
sub
or
scas
jb
push
idiv
rclb
mov
test
test
sub
pushf
lea
rcll
fs
jecxz
ja
fs
push
lret
jmp
or
data16
lret
lds
pop
negl
mov
dec
xchg
or
jnp
sbb
add
jl
push
and
test
jno
adc
sub
push
mov
ss
insl
ret
loop
jge
ret
out
dec
xor
adc
jno
lods
lock
fsubs
inc
push
mov
push
mov
pop
push
mov
sub
mov
shrl
fisubrs
push
mov
and
xchg
jecxz
sbb
out
mov
leave
idivb
cmp
out
cwtl
shl
test
lock
mov
rol
or
shlb
sub
or
scas
mov
mov
shrd
push
adc
dec
jmp
cmpsl
movb
test
cli
inc
cmc
cmp
mov
mov
xchg
mov
add
lret
js
gs
sarb
jl
imul
push
push
inc
xor
pop
sub
imul
out
jge
outsl
stc
pusha
sbb
aaa
jp
in
rcr
cmc
jnp
scas
lcall
lock
ljmp
xlat
inc
jo
add
xchg
and
jne
cmp
cld
das
aad
xchg
fldl
pop
inc
push
adc
xor
xor
mov
fwait
ja
pop
into
adc
cmp
dec
cmp
dec
out
lcall
dec
into
scas
adc
scas
stos
inc
cmpsl
sti
dec
out
call
nop
ja
adc
and
mov
ss
imul
shlb
es
cmc
add
adc
cltd
sub
out
ret
push
push
sub
adc
cmpl
mov
pusha
xchg
mov
sbb
cmpsl
into
adc
aad
push
mulb
fsubl
sub
bound
push
cltd
andl
xor
pop
sub
sti
mov
lods
mov
orb
pop
int
pop
shll
les
add
lea
gs
xchg
mov
adc
pop
sub
gs
push
adc
cmp
inc
fs
jp
loopne
fcoms
mov
incl
mov
dec
mov
lret
push
xchg
mov
and
into
sub
icebp
cli
inc
movsb
outsb
push
add
enter
dec
sbbb
mov
sub
out
pop
pop
ror
es
mov
ret
add
mov
and
xor
inc
les
sub
fidivrl
cmp
or
jbe
daa
leave
dec
lods
gs
movsl
xor
adc
mov
mov
jecxz
and
jle
lds
dec
adc
das
push
testl
fwait
rclb
gs
push
xor
xchg
dec
mov
cmpsl
inc
fdivs
jns
pop
pop
sbb
fs
and
push
jo
cmp
sahf
sbb
movl
ljmp
icebp
out
rcr
xchg
ret
or
jb
cmpsl
gs
jno
sarl
inc
into
scas
popf
push
mov
pop
push
jno
adc
popa
scas
ret
loopne
adc
js
and
lock
inc
leave
xor
hlt
push
aad
in
aas
jbe
or
pop
mov
sbbb
aas
adcb
mov
nop
lret
adcb
push
pop
mov
sub
mov
fadds
stc
cli
inc
incl
or
jbe
and
mov
push
dec
mov
adc
add
mov
das
test
stc
orb
push
in
ret
lret
push
pop
xor
out
movsb
and
ds
sub
sbb
ss
push
fdivrl
mov
hlt
in
inc
addr16
pop
dec
jge
imul
push
cli
repz
js
test
out
insb
es
jmp
inc
inc
leave
or
fsubr
bound
pop
inc
and
xchg
and
stos
shlb
dec
pop
inc
insl
icebp
test
jmp
mulb
in
lret
push
mov
out
rcl
insb
or
in
xor
xor
aad
and
sub
clc
les
insb
jle
dec
mov
jg
dec
cmp
inc
mov
or
test
notb
push
xchg
sbb
xchg
in
out
mov
lahf
mov
int3
sub
push
or
repnz
inc
sbb
sbb
xor
xor
mov
hlt
mov
out
repnz
mov
cmpb
adc
inc
lcall
sub
mov
mov
dec
std
sahf
iret
xor
andb
fidivrs
mov
incl
dec
loope
dec
xchg
jp
test
and
and
pop
dec
int
lea
enter
stos
stos
adc
xchg
inc
adc
sbb
cmp
test
outsb
ljmp
mov
rcll
sub
out
mov
cmp
outsl
xor
dec
notb
fistpll
xor
xchg
jp
cmp
inc
fldenv
mov
fistps
xchg
sub
sub
stos
scas
das
es
ficompl
lret
xchg
sub
enter
sbb
mov
out
imul
xchg
jno
xchg
mov
gs
ds
leave
in
int3
cmpsl
int
dec
mov
fistpll
iret
xorl
push
stc
unpckhps
dec
push
leave
je
sub
negl
mov
push
dec
sti
gs
cs
ret
mov
pusha
mov
push
mov
xor
imul
pop
movsl
jnp
xor
repz
sub
pop
adc
dec
or
clc
out
jge
sub
icebp
int
inc
add
aad
stos
xchg
or
xchg
ds
loope
or
cmp
jne
or
sub
cltd
shl
aas
inc
add
push
xchg
push
mov
mov
inc
lahf
sbb
loope
lea
lcall
stos
mov
shlb
scas
mov
inc
jle
cmp
jmp
jb
xchg
imul
xchg
lods
cmp
pop
and
adc
movsl
xchg
in
xchg
add
push
out
rcll
jno
mov
mov
fildl
lret
inc
xor
pop
push
ret
fiaddl
fstpl
test
fldcw
mov
xchg
xchg
mov
sarl
dec
mulb
outsl
or
mov
dec
pop
mov
xorl
repnz
repnz
shlb
pop
push
into
push
jb
lret
lods
push
arpl
push
mov
shlb
push
icebp
mov
sub
xor
cli
pop
lcall
out
movsl
lds
in
fdivrl
mov
mov
stos
js
insb
shlb
push
jnp
mov
addr16
cmp
cltd
das
xchg
mov
jno
dec
cmp
loope
lahf
add
xor
xchg
pop
loop
pop
cmp
lcall
loope
sbb
sar
pop
aad
popa
cs
and
test
fadd
cmp
xor
push
pop
adc
jno
sub
loopne
dec
in
mov
add
mov
rorl
cltd
js
dec
xchg
xor
and
mov
paddq
bound
cmpsl
sbb
xor
mov
fiaddl
cmp
in
aas
sbb
adc
das
out
data16
inc
aas
and
push
dec
repz
jo
pop
and
push
and
sbb
dec
pop
lods
jnp
lret
int3
in
popf
shll
xchg
or
call
or
outsb
ljmp
stos
and
sub
mov
fistpl
add
xlat
jnp
add
mov
lret
sub
js
push
loop
jge
loopne
push
or
iret
pop
dec
enter
lods
in
pop
adc
outsl
ret
and
icebp
movsl
stos
pop
dec
shll
std
lock
outsb
adc
and
mov
movsb
jge
inc
push
mov
repnz
pop
sub
cmp
shll
sub
insb
aas
test
data16
xchg
and
push
push
jnp
mov
outsl
pop
loope
push
mov
setae
xchg
mov
xchg
fsub
repz
sti
add
cmp
jp
inc
test
aaa
jnp
div
mov
fisubl
mov
xorl
imul
fcmovbe
hlt
cld
push
div
lcall
push
jb
leave
pop
mov
stos
cmpb
out
sbb
and
sub
std
add
pop
loop
pusha
pop
mov
mov
movsl
cmp
mov
movsl
jmp
aas
add
xor
fs
rcrl
mulb
cmc
int3
sub
or
push
mov
sahf
sbbb
mov
hlt
test
jg
dec
sbb
cmc
mov
pop
mov
cltd
shlb
icebp
mov
push
fs
iret
adc
rcr
push
movsb
jg
addr16
push
add
sbbb
sahf
lret
fcomip
imul
mov
iret
gs
mov
fldl
lahf
cld
mov
adc
xchg
repnz
ss
sbb
jbe
std
testl
inc
or
adc
mov
hlt
mov
sub
stos
cld
ja
in
cmp
movsl
enter
sub
xchg
mov
cmp
lahf
popf
adc
inc
fistpl
fdivrs
cli
call
sbb
sysexit
out
movl
sub
clc
imul
inc
jmp
pop
cld
and
push
pop
mov
mov
bnd
stc
inc
mov
aad
test
adc
es
push
fwait
shrl
push
rcll
cmp
cs
cvtdq2ps
out
js
cs
mov
shll
lds
lods
jecxz
cs
mov
loopne
jo
out
inc
aad
push
call
rolb
pusha
in
and
sbb
mov
pop
dec
fcomps
push
popf
stc
out
ret
scas
mov
gs
push
xor
scas
repnz
fists
fwait
xchg
imul
sub
push
shll
push
push
inc
lods
adc
addr16
jmp
dec
bound
mov
lret
cmp
loope
fidivl
sbb
fisubrs
mov
xchg
push
or
icebp
cld
xchg
test
inc
jl
ret
es
xchg
subb
shlb
lahf
dec
ss
hlt
mov
pushf
sub
xchg
mov
and
lea
and
or
jmp
daa
xchg
xor
call
mov
and
cwtl
sbb
mov
push
xorb
xchg
xchg
jp
pop
jl
jmp
xchg
mov
lds
or
mov
sbb
stos
bound
stos
mov
inc
xchg
iret
jbe
mov
mov
and
adc
pusha
xchg
pop
jbe
cmpsb
push
popa
inc
inc
imul
sub
xor
cmpsl
popa
les
sbb
pop
jmp
repnz
adc
fistps
test
loop
out
call
ljmp
adc
outsb
dec
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
nop
testb
add
out
jmp
jp
pop
jp
cltd
jo
pop
jae
cmp
xchg
in
adc
repz
scas
jb
mov
jp
pop
mov
jae
or
adc
pusha
test
in
sbb
mov
ret
pop
lahf
push
and
je
adc
xchg
hlt
aas
je
jnp
push
sub
je
add
rorl
and
xor
sti
inc
ja
fs
test
adc
stc
mov
std
ret
mov
sarb
xchg
fs
xchg
add
xor
xchg
add
mov
add
and
into
leave
imul
cmp
or
pushf
fmulp
fnstsw
and
js
negl
adc
pop
or
inc
sbbb
pop
stc
mov
addw
sub
addr16
scas
ret
and
sbb
mov
mov
clc
inc
push
dec
mov
inc
jno
jp
jne,pt
movsl
test
repz
aam
xchg
xlat
outsl
dec
es
cmpsb
nop
xorb
call
xor
push
adc
xchg
mov
test
dec
ja
aaa
mov
sbb
popa
mov
movsb
xchg
subb
mov
mov
jns
push
testb
mov
jg
push
mov
jmp
add
hlt
pop
mov
inc
sti
loop
cltd
mov
iret
sub
add
or
js
push
or
insb
fyl2x
popf
mov
mov
sbb
leave
mov
cmpsb
out
pop
sbb
xchg
xor
push
cli
sub
mov
mov
cltd
les
test
mov
push
js
or
js
aas
cli
pop
xchg
pop
lds
fdivp
les
jo
in
add
popa
push
xchg
adc
lret
jo
aas
dec
test
test
and
movsl
mov
addr16
sbb
ljmp
dec
adc
movsl
or
jg
hlt
add
jmp
jne
adc
sti
scas
jecxz
nop
or
jbe
push
fmuls
adc
fmuls
mov
out
cmp
xchg
divb
xchg
mov
cmp
out
popa
aas
xchg
jo
xor
and
fisttpll
adc
mov
clc
ss
adc
cmc
cmp
cmp
outsb
outsl
daa
ret
xlat
movsb
cli
add
mov
or
xchg
jnp
fldcw
inc
xor
xchg
repz
or
xchg
xchg
add
out
adc
jge
xchg
xor
inc
push
mov
stos
mov
cmp
jecxz
mov
clc
lret
je
rclb
adc
out
push
insl
sub
pop
or
and
pmaddwd
mov
xchg
rclb
inc
outsb
or
jno
sbb
sub
push
adc
jl
jecxz
jmp
stos
int
rcr
xor
mov
fcoml
popa
outsl
mov
jnp
jecxz
xor
push
sub
dec
out
mov
pop
shr
mov
clc
mov
iret
mov
rcl
sti
aam
cmp
pop
sbb
and
sub
sahf
test
ja
push
jp
jns
cmpsl
add
sub
decb
cmp
cwtl
repz
pop
mov
imul
arpl
sub
shll
and
jb
psubusw
insb
or
or
lahf
pop
cmpsb
incb
int3
xlat
or
inc
in
pop
pop
aad
fidivl
pop
xor
jo
js
rcll
mov
and
add
fsubrl
mov
mov
or
jmp
or
add
std
push
out
test
sub
jne
insb
dec
and
shlb
shl
pop
es
cmc
cmp
pop
jne
imul
jae
sbb
cmp
sahf
mov
or
das
lret
xor
cmc
push
and
cmc
shrb
out
lret
das
fs
lds
inc
xchg
cmpsl
test
cmp
adc
jp
inc
push
adc
mov
push
inc
movsl
push
cli
sbb
xchg
jnp
lret
push
repz
fisttpl
mov
adc
shll
xor
xchg
cmp
jmp
push
gs
js
shlb
loop
add
push
into
jmp
jb
enter
pop
aas
cmc
cld
xor
mov
inc
aam
popf
xor
outsl
js
dec
imul
push
fnsave
mov
pushf
pop
mov
add
in
cmp
or
lock
cli
shll
fnstsw
sub
and
rol
adc
pop
jmp
add
xchg
push
mov
and
faddp
sbb
mov
out
push
scas
jmp
aas
or
xor
inc
std
cwtl
scas
xchg
bsr
mov
mov
scas
mov
push
push
sbb
xchg
xor
jne
pushf
inc
mov
mov
push
ss
mul
xor
stos
int
xor
and
pop
es
jle
clc
repz
lea
mov
xor
ljmp
or
mov
fwait
cltd
jle
pop
dec
fimuls
test
lods
inc
lret
imul
xchg
nop
loop
subb
rorl
add
call
aad
jp
add
xchg
add
popf
adc
repz
jb
xchg
xchg
test
and
or
fldl
addb
xor
in
jbe
xor
cs
lods
hlt
fildll
xor
and
pop
out
mov
aad
dec
fs
fs
aam
outsl
sub
mov
add
and
lea
pop
mov
lock
ret
rorl
add
mov
and
shl
xchg
mov
cmp
jle
push
and
iret
inc
cwtl
cmpsb
ss
outsl
cmp
push
cmpsb
fldl
sbb
pop
inc
mov
mov
push
repnz
jae
mov
sub
or
cmp
jne
fmull
data16
stc
mov
cmp
ret
jg
cmp
pop
or
jno
mov
stos
add
lods
xlat
out
hlt
sub
rep
jae
fwait
sub
xchg
sbb
lea
xchg
add
scas
or
imul
or
rcll
ret
addr16
dec
mov
push
loope
inc
adc
insl
pop
iret
loope
mov
xor
gs
aas
sub
adc
xchg
sbb
lea
leave
or
call
cmp
pop
popf
add
int
arpl
scas
fsubrl
test
mov
out
je
cltd
lcall
mov
fstl
test
and
or
outsl
or
jns
and
movsb
push
mov
mov
psubq
inc
mov
xor
jl
xchg
or
arpl
iret
inc
inc
lods
sarb
add
dec
mov
jae
mov
jbe
inc
dec
test
xchg
mov
stos
sbb
add
push
add
sbb
add
jb
and
push
sbb
data16
in
sbb
mov
or
jae
inc
ja
leave
jl
xor
jl
cli
jmp
xchg
and
out
ja
andb
jmp
cmp
push
lock
pop
mov
mov
jge
cmp
sub
mov
dec
jl
inc
movsb
add
adc
or
mov
out
xchg
cmp
data16
xor
lret
and
xor
movsb
shll
ret
add
les
std
pop
out
subb
add
or
mov
xchg
pop
cmpsl
lcall
add
push
repnz
jns
lcall
and
sti
adc
jmp
cmpsb
sbb
xchg
and
pop
pop
jecxz
jno
mov
shll
adc
in
cmc
jecxz
outsl
mov
test
stos
mov
and
mov
inc
clc
les
or
or
cld
pop
jp
out
ljmp
inc
fildll
mov
or
movsl
stos
das
repz
stos
addr16
and
pop
xorl
inc
inc
jae
sbbb
icebp
ljmp
dec
out
xchg
repz
insb
out
repz
sub
rcl
fldl2e
mov
and
aas
mov
cs
pop
int3
jae
pusha
cwtl
mov
push
mov
xchg
aad
arpl
cmp
pop
js
mov
pop
in
lods
gs
pop
or
dec
imul
aad
cs
cli
inc
inc
cld
inc
jae
push
sbbl
inc
xor
loop
and
cmp
cmp
dec
adc
mov
aad
adc
in
push
int
iret
mov
add
test
in
dec
testb
rcl
ret
mov
mov
imul
mov
jbe
hlt
cmp
rorb
negb
jne
sub
cmc
pop
lds
test
loope
lret
repz
jno
shl
bound
inc
lea
mov
inc
ret
stc
mov
cltd
push
mov
mov
pop
nop
out
mov
xchg
aaa
lods
in
aaa
mov
push
mov
ja
sub
cmp
and
adc
icebp
sub
add
in
adc
jno
ja
mov
stos
cwtl
ljmp
cmpsb
call
sbb
lcall
jg
fsts
inc
outsb
fisubrl
inc
sti
roll
notb
daa
mov
flds
jns
cmpsl
in
xchg
lods
shrl
dec
movsl
fs
or
push
xchg
cmp
loop
out
mov
mov
les
xor
pop
xchg
aam
pop
jmp
lahf
lret
mov
aad
jmp
cld
jne
popa
pop
out
mov
es
or
mov
jns
mov
push
mov
ja
sub
popf
lea
dec
or
dec
xor
leave
ja
pop
mov
dec
xor
dec
dec
movb
xchg
mov
insb
in
repnz
dec
std
inc
add
pop
shl
lea
out
js
in
arpl
ror
dec
and
dec
xchg
repz
jno
loopne
lds
movsb
and
jge
sahf
dec
or
lret
inc
aam
rcll
jmp
or
sbb
jae
clc
inc
push
xchg
mov
xlat
adc
sub
sbb
add
xor
movsl
and
add
mov
fwait
jmp
imul
adc
in
shlb
pop
sarb
movd
jnp
jmp
sub
add
sub
outsl
adc
notl
dec
lcall
mov
addr16
movsl
rolb
out
nop
pop
lock
mov
test
clc
or
xchg
xchg
mov
inc
inc
push
rcl
pop
mov
push
lahf
xor
insb
decb
clc
int3
lret
test
mov
gs
xchg
xchg
or
push
xchg
push
idivl
xchg
nop
mov
ja
sbb
out
push
sub
dec
stos
clc
adc
mov
sbb
mov
dec
lcall
popf
sub
fcomps
push
push
aas
pushf
sub
fstpt
scas
dec
data16
jg
jecxz
sbb
and
pop
sub
bnd
test
jb
test
xor
outsl
fsubp
movsl
or
mov
stos
iret
es
lret
sub
add
addr16
pop
sbb
in
jle
ds
jo
std
dec
rcrl
arpl
lea
push
movsl
mov
xor
push
sub
sub
out
inc
das
inc
add
cmp
push
jmp
jbe
ja
divl
jmp
mov
int3
daa
pop
jo
inc
sub
repz
test
sbb
cmc
pop
pop
push
out
loope
mov
push
bound
jmp
call
push
sti
popf
cmp
lods
adc
lds
push
in
xchg
sbb
clc
and
rcrb
lahf
lods
mov
sbb
add
outsb
sbb
faddp
ror
pushf
sahf
inc
call
cmpsl
shl
movsb
dec
jecxz
pop
push
pusha
sub
lea
or
cmp
push
pushf
sbb
addl
jnp
jo
shrl
outsb
lods
cltd
sub
cwtl
gs
test
scas
mov
add
xchg
add
in
scas
cmp
xchg
pop
fnsave
insl
repnz
or
lock
mov
jns
out
sub
xchg
jns
test
test
pop
leave
les
inc
mov
jecxz
mov
shl
ss
jecxz
fwait
int3
push
popf
out
mov
sub
pop
mov
push
in
repnz
sahf
cld
js
insl
push
sbb
pushf
lods
ljmp
cltd
insl
data16
pop
inc
into
sub
ret
rolb
or
or
pop
mov
mov
cmpsb
insl
jo
and
sbb
mov
movsl
je
mov
or
loop
push
and
dec
push
mov
add
das
in
test
mov
into
xlat
mov
jg
mov
nop
loop
lds
stc
shll
sbb
popa
test
movsl
ficomps
fnstsw
sbb
stc
imul
add
test
sbb
lret
sbb
test
or
push
sub
ror
adcl
in
lds
cmpsb
subl
push
je
lods
lret
sub
inc
pop
dec
hlt
dec
test
mov
or
inc
add
repnz
jo
mov
in
lahf
cwtl
scas
pop
mov
push
lods
nop
dec
dec
jle
mov
in
mov
mov
sbb
aam
push
aas
push
and
xchg
pop
loope
dec
inc
fnstenv
movsl
adc
lods
rcll
sub
sar
jle
jecxz
addb
xor
pop
std
into
mov
loopne
sub
pop
inc
xchg
cmp
lcall
test
jo
dec
enter
movsb
and
fcmovne
lahf
push
inc
mov
jle
push
or
daa
inc
xchg
mov
inc
fcmovne
xchg
lock
scas
adc
je
pusha
dec
and
xor
sbbl
repz
sbb
out
es
test
mov
mov
mov
or
mov
into
push
lds
sahf
add
lods
fsts
leave
inc
dec
xor
shrl
xor
pop
mov
or
mov
dec
sub
sub
and
inc
push
xor
mov
mov
aaa
gs
ja
pop
cld
cs
hlt
inc
jb
mov
popf
jmp
xchg
repnz
stos
shlb
cmp
scas
mov
mov
dec
adc
fnstsw
int
cli
xchg
jno
fisubrl
xor
mov
push
imul
mov
lret
sub
roll
iret
push
lea
jle
mov
or
mov
lahf
or
xchg
scas
sarl
cli
sti
lahf
mov
xorb
and
pusha
cmc
add
dec
loop
inc
pop
or
push
lahf
mov
xor
xor
inc
test
or
xchg
sbb
xchg
sub
inc
cmp
mov
movsb
fsubl
xor
out
push
mov
test
or
outsb
cld
xchg
in
xchg
in
add
data16
mov
clc
stc
push
cwtl
mov
xchg
xchg
cmpsb
loop
loope
sbb
fwait
lock
fidivrs
addr16
sub
mov
sti
mov
les
pop
rclb
push
push
insl
loop
ficoms
inc
icebp
cld
lret
mov
mov
push
mov
and
fiadds
inc
adc
lahf
gs
sbb
sbb
sub
inc
and
cmp
fcmovnu
in
cli
rcll
mov
test
xchg
cmpsl
pop
int
inc
enter
daa
loopne
leave
inc
push
mov
sahf
addr16
xor
xlat
cmp
daa
arpl
icebp
outsl
scas
out
lock
insb
mov
adc
or
jmp
repz
stos
movl
aad
mov
repnz
mov
loop
inc
adc
push
mov
add
movsb
push
adc
das
xor
inc
or
cld
out
arpl
and
jne
and
pop
movsl
sub
cli
and
pushf
mull
lods
xor
xchg
in
test
fistpl
add
fcmovu
jle
leave
imul
nop
and
lods
inc
or
mov
push
les
and
mov
lds
mov
inc
dec
fstpt
push
test
cmpsb
xchg
mov
mov
push
xchg
mov
aas
sar
pop
cmp
aas
mov
mov
pop
xchg
in
ss
push
mov
sub
cmp
popa
aam
jbe
lods
jbe
xchg
js
hlt
sub
push
xor
in
out
popf
xchg
inc
pop
sub
not
loop
xor
pushf
test
fcomps
sarl
push
sub
arpl
add
or
aaa
mov
fistps
fst
mov
ficoms
lods
pop
jnp
sub
mov
outsl
xor
cmp
repnz
xchg
sbb
dec
adc
std
and
dec
int
cltd
mov
xlat
stos
rcl
inc
cmp
adc
aam
inc
or
push
inc
pusha
and
jbe
pusha
aas
enter
pop
sbb
xlat
cs
push
aas
sub
bound
push
dec
push
js
sbb
mov
cmp
enter
pusha
mov
mov
pop
lds
mov
iret
subb
mov
sub
insb
mov
ja
cmp
jo
xchg
push
dec
das
jmp
dec
test
inc
jmp
rclb
frstor
mov
aas
imul
pop
and
ja
xor
test
jl
jns
push
popf
ja
in
pop
rcr
jg
inc
adc
les
sbb
fisubrl
bound
push
jecxz
or
push
and
dec
fisubs
mov
sahf
xor
push
mov
std
dec
insb
int
lret
sub
jg
pushf
clc
arpl
dec
scas
dec
mov
sub
loop
popl
cmp
ja
lret
mov
mov
hlt
xlat
enter
pop
jecxz
add
pop
icebp
cmp
les
movsl
popa
mov
mov
pop
in
lcall
addr16
stos
outsb
and
sbb
mov
add
scas
test
cmpsl
call
xor
stc
sub
sbb
outsl
repnz
cli
mov
insl
popa
pop
in
or
mov
mov
cmp
push
repnz
sub
mov
pop
or
test
cmpb
add
sar
ljmp
outsl
push
es
rorb
pushf
stc
mov
test
adc
mov
ficoml
test
push
jne
sub
sbb
cmpsl
in
mov
pop
mov
ret
lret
jg
push
and
lret
cmp
sub
clc
outsb
pop
shlb
imul
sbb
popa
movsl
flds
jp
popa
xor
iret
ret
pop
push
cmpsb
mov
and
mov
popa
xchg
testb
cmp
add
jae
movb
xlat
mov
sub
aad
mov
mov
test
xlat
mov
mov
out
cs
ret
adc
fs
push
cs
mov
xor
push
xor
mov
fstpt
testb
mov
daa
xchg
subb
adc
jnp
aaa
std
fsts
cmc
sub
mov
pop
dec
ffreep
jge
enter
test
push
adc
fstpl
fisttpl
jae
pop
stos
adc
imul
inc
pop
inc
mov
pushf
jecxz
jbe
inc
jmp
add
enter
test
xor
into
add
xchg
fidivrs
jge
inc
push
les
fstpl
ds
out
mov
add
lds
fcomps
clc
sub
lcall
cwtl
push
and
push
repnz
ficoms
cmp
ret
dec
subl
xchg
and
sbb
lods
add
lods
cmp
ret
sub
sbbl
inc
in
jbe
js
and
clc
popf
jno
icebp
xchg
adc
shrb
xchg
dec
in
fcompl
cmpl
mov
sti
jno
mov
test
sbb
inc
and
dec
cmpsb
push
outsb
inc
jge
push
add
mov
rolb
into
dec
or
stos
push
xchg
sti
jns
repnz
cmp
andl
push
mov
xchg
jb
ljmp
sbb
adc
stos
pop
sub
or
push
jle
cmp
cmp
mov
inc
insl
or
jmp
jo
mov
aam
in
movsl
pop
jne
fmuls
test
rcrb
sbbb
sub
out
sahf
mov
lret
pop
insb
cmp
jno
stos
call
sub
jmp
testl
shlb
pop
mov
adc
inc
jb
popf
shlb
loop
push
sbb
test
out
testb
push
push
fisttpl
dec
lods
aad
mov
mov
pop
adc
lods
fs
sbb
ja
jp
xchg
pushf
cmp
sbb
aaa
sti
aam
mov
rol
xlat
adc
les
mov
popa
push
mov
arpl
or
jmp
jo
pusha
push
das
pop
cli
push
in
sub
mov
shll
mov
fcmove
rcrb
movsb
push
inc
jmp
add
test
popa
mov
aam
mov
orb
lods
pushf
pop
gs
add
mov
jp
pop
shlb
push
daa
xor
fdivl
or
mov
imulb
int3
ret
icebp
xchg
andl
scas
test
jo
popa
or
cmp
shll
bound
arpl
ret
ret
aam
movsb
push
sbb
ds
inc
pop
sbb
loopne
imul
jae
mov
rorl
mov
mov
pop
lret
sub
push
mov
ret
xchg
pop
xor
gs
fstl
jns,pn
mov
mov
dec
xchg
aad
mov
push
sub
pop
jg
mov
out
inc
dec
leave
and
xchg
int3
insb
jecxz
in
cmp
adc
jge
push
addr16
icebp
ja
fstl
dec
cmp
xchg
daa
rclb
push
sbb
jae
jle
int
dec
mov
ss
add
dec
nop
dec
lds
loope
fcoms
and
mov
imulb
sbb
sbb
shrl
idivl
or
aaa
fists
push
sub
inc
sub
lcall
pop
pop
add
pop
js
jl
cltd
pop
mov
jl
sub
and
imul
sub
sbb
daa
adc
aad
jecxz
jl
rcll
fcoms
enter
pop
xchg
mov
jmp
pop
adc
push
xchg
pusha
inc
cmp
mov
dec
imul
sahf
jmp
mov
rcrb
inc
out
push
or
xchg
push
jge
sbb
and
cmc
mov
fbld
adc
jge
outsb
mov
adc
mov
push
cmpb
mov
ret
pop
pop
lods
fcoms
bound
rclb
std
dec
mov
inc
ss
shll
push
push
int
pop
adc
jge
in
xlat
loop
and
or
mov
push
or
add
ret
or
sub
out
sahf
or
js
push
pop
into
pushl
xor
jle
pushf
sti
xchg
mov
or
inc
adc
adc
ja
scas
inc
repz
adc
xchg
dec
data16
sbb
jmp
or
pusha
test
in
sub
sbbb
in
push
jp
ja
push
shl
xor
mov
in
xchg
data16
cwtl
fcmovbe
mulb
pop
cmp
fsubp
cltd
push
les
orl
xchg
mov
movsb
imul
aaa
psubb
aam
xchg
cmpsl
addr16
lock
stc
cmp
mov
mov
sub
clc
inc
fldcw
movsb
adc
leave
push
push
adc
fs
subb
sbbb
loopne
clc
push
out
fsubs
adc
pop
imul
mov
pop
imul
and
inc
push
in
out
fcom
or
sub
lds
sub
push
push
pop
dec
mov
loope
xor
adc
xchg
hlt
jg
xor
jg
in
lret
stc
loopne
cmp
sbb
cmp
xchg
dec
adc
aas
xchg
sahf
js
lahf
push
xchg
ffree
test
sarb
inc
leave
arpl
pushf
push
nop
ret
jmp
faddl
sbb
ret
out
push
pop
stos
mov
enter
fnstenv
and
xchg
mov
sbb
cwtl
enter
test
and
sbb
mov
test
mov
lret
xor
push
cwtl
stos
mov
ds
dec
or
xchg
repnz
icebp
je
lea
push
sahf
scas
jb
adc
mov
addr16
outsb
mov
dec
or
dec
loope
and
cmpsl
pop
sub
cmp
xlat
mov
pop
inc
xchg
xchg
inc
mov
fstps
cs
inc
mov
inc
push
ds
fimull
push
adc
mov
mov
sar
mov
sub
or
jecxz
dec
push
xlat
jb
daa
outsb
repz
push
mov
or
mov
mov
imul
lods
cmpsl
mov
gs
sahf
push
xor
inc
xor
jae
test
aas
push
cld
mov
sub
cmp
adc
imul
xor
addr16
mov
popf
enter
inc
mov
xlat
inc
inc
cmc
dec
sar
cmpsb
or
pop
das
gs
iret
arpl
sbb
sub
aam
rclb
xlat
pop
cmp
sbb
shufps
stos
mov
pushf
out
scas
mov
imul
xchg
fs
ficomps
cld
repnz
outsl
ret
xchg
push
sar
frstor
pop
add
hlt
mov
xlat
sub
push
jae
add
xlat
inc
hlt
subb
mov
mov
fsts
jne
sbb
ss
push
adc
xor
xor
outsb
bound
fisubs
shlb
in
and
cli
std
jae
inc
xlat
stos
push
pop
in
out
and
add
sbb
add
or
pop
rcr
mov
ds
rep
xchg
scas
fisubl
fsubr
cs
in
adc
rcrb
mov
cwtl
push
shl
xor
push
sbb
dec
pop
jmp
adc
cld
jecxz
ss
iret
mov
jnp
pop
cmpsl
dec
push
sbb
cmp
lret
ljmp
push
jne
scas
sbb
sbb
add
sbbl
xor
notb
mov
mov
xlat
jl
ret
cli
jg
pavgb
add
packuswb
mov
pop
add
mov
mov
or
inc
aad
pop
roll
jecxz
xchg
aad
push
and
out
or
pop
dec
sbbb
and
jp
dec
lret
inc
jne
lds
jno
jmp
aam
cs
hlt
or
adc
mov
nop
js
xchg
push
arpl
test
mov
dec
sti
sub
icebp
inc
aad
or
pusha
stos
lret
divl
outsb
adc
jle
idiv
pusha
pop
ret
add
mov
pop
or
sbb
cs
cli
lock
mov
scas
pop
arpl
mov
adc
repnz
mov
or
ds
or
sub
daa
sub
adcl
push
pop
jb
stos
ljmp
push
pop
es
sarb
xchg
inc
stos
or
push
out
jp
xlat
jne
cmp
cmp
push
aam
je
push
jecxz
das
pop
mov
insl
mov
repnz
fmull
jnp
inc
inc
mov
fcom
lods
in
sub
mov
ljmp
cwtl
enter
inc
xor
sbb
fs
adc
dec
pop
stc
test
mov
cs
push
stos
mov
inc
xchg
xchg
or
scas
cmc
mov
std
pop
sbb
cmpb
dec
or
jo
jns
cmpsb
leave
in
pop
pop
jp
stc
mov
lcall
je
test
push
push
sbb
cmp
xor
cmp
mov
popa
fadds
mov
stc
xor
xorb
mov
mov
int3
pop
or
cld
push
fimuls
adc
cmp
ds
dec
xchg
sub
mov
pop
mov
mov
pop
imul
loopne
xlat
outsb
mov
sbb
jge
adc
and
inc
sub
mov
call
in
jns
pop
or
push
ficoml
repnz
jnp
jle
adc
popf
cmp
pop
jnp
clc
repz
lods
jp
sahf
shrb
cmp
ss
jno
fdivrs
fwait
dec
cwtl
push
mov
out
adc
mov
jno
mov
xchg
lret
scas
pushf
jno
add
subb
add
fcompl
ret
xchg
sub
arpl
xor
inc
cmc
daa
mov
push
mov
jmp
add
cs
repz
cltd
mov
cld
mov
mov
xchg
icebp
xor
sbb
in
lds
dec
sub
cmp
test
sarb
insl
cs
fbstp
dec
sbb
shll
popf
sahf
jl
ds
lahf
inc
imul
pop
push
jle
xorb
fistpl
pop
inc
or
jmp
in
lret
pop
push
inc
cmpb
cmpsb
sub
and
mov
dec
jmp
ljmp
cli
mov
or
cmp
jbe
cltd
ljmp
test
mov
jge
and
pop
or
dec
push
fisttpl
mov
xor
in
test
iret
test
mov
ss
lea
mov
repz
and
dec
pop
mov
or
cmp
pop
sub
xlat
and
pop
out
imul
hlt
xor
cmc
mov
imul
dec
cwtl
jbe
push
bound
fdivs
pop
mov
cltd
cmp
rcrb
mov
fistl
lds
aaa
or
les
adc
jecxz
aas
mov
xorl
adc
push
jge
xchg
fnsave
dec
daa
hlt
mov
cld
lock
mov
mov
es
jge
clc
fcompl
movsl
or
fistl
pusha
pop
pop
test
mov
cmc
in
sub
jno
xchg
sub
mov
sub
jmp
test
pop
mov
das
cli
int3
in
jne
test
jmp
daa
jbe
mov
imul
cmp
inc
adc
repz
bound
pop
insb
outsb
or
pop
inc
popf
dec
testb
xor
push
arpl
inc
cmpsl
test
imul
cltd
mov
in
dec
inc
push
dec
movsb
rclb
add
in
and
sub
sbb
cmp
and
push
lahf
das
inc
aad
jl
xchg
and
or
test
test
mov
cmp
xchg
in
daa
and
mov
cmpsb
mov
jecxz
adc
dec
mov
cmpsb
adcl
sbb
mov
fs
in
out
sbb
stos
adc
movsb
xlat
cmp
movsb
adc
adc
cmc
shll
test
mov
fwait
cmp
mov
adc
add
jnp
icebp
and
roll
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
sub
fwait
lods
fistpl
pop
imull
mov
jns
add
jp
inc
cli
fidivrs
icebp
xchg
and
stc
pop
hlt
cwtl
and
dec
fstpl
sub
lea
aaa
sub
popa
lea
and
out
pop
sub
aad
mov
aam
arpl
movsl
mov
pushl
js
subb
xchg
out
inc
and
lea
movb
jl
adc
push
jno
in
outsb
dec
cmp
insl
and
sbb
int
sbb
rcrl
aam
xor
cli
jnp
in
add
les
push
push
in
bound
ret
aad
sub
ret
xor
scas
sub
loopne
sub
xchg
or
int
mov
jp
or
cltd
imul
icebp
mov
cwtl
inc
and
cmp
xor
out
cmc
inc
pop
inc
enter
mov
test
push
xlat
xor
lods
inc
movsl
push
dec
and
fs
inc
pop
mov
loopne
out
add
and
fidivrl
dec
and
cld
fidivl
in
cltd
stos
mov
loop
push
xor
lahf
mov
adc
std
mov
cmp
or
xlat
insl
sub
incb
movsl
pusha
mov
les
dec
gs
notb
cld
dec
sub
push
lret
jbe
or
mov
fsubl
or
ljmp
jne
xchg
dec
push
jae
mov
int3
or
insl
mov
jnp
push
insb
jbe
push
jns
insl
adc
pushf
xchg
mov
mov
fnstcw
stos
jb
sub
add
sbb
lods
ror
in
jg
xchg
and
xchg
or
int3
mov
pusha
lret
sub
push
and
dec
hlt
jns
mov
sbb
add
cmp
push
jle
pop
push
aaa
inc
sbb
jae
push
je
sbb
xchg
mov
adc
mov
arpl
enter
test
dec
mov
mov
inc
push
xchg
dec
shll
mov
rolb
fisubrs
mov
iret
call
add
mov
pop
scas
bound
insb
or
sub
jo
jge
mov
ret
jno
add
inc
cld
jg
mov
lods
bnd
inc
pop
lods
sub
mov
xchg
adc
fstps
in
push
mov
cmp
mov
mov
imul
adc
bound
dec
cmpb
out
xor
push
fisubl
mov
call
add
fnstenv
gs
inc
adcl
sbb
mov
mov
push
xchg
sub
pusha
push
ret
dec
xor
shll
adc
fadds
fisubs
ror
outsl
sub
push
add
mov
lahf
or
add
inc
add
cwtl
addb
int
jne
cmp
dec
jnp
adc
mov
out
lods
or
or
into
or
clc
push
sbb
xor
sbb
es
or
push
rcr
andb
inc
mov
push
es
lcall
aam
xchg
stos
xor
rcrb
inc
mov
out
sub
and
pop
icebp
out
ss
jge
pusha
xchg
push
test
dec
ljmp
and
movsl
mov
xlat
divl
pop
jg
ljmp
and
cmpsl
mov
sbb
in
test
mov
call
loop
out
cmp
fwait
mov
adc
pop
mov
test
lret
std
mov
sbb
cwtl
jb
lods
adc
mov
test
out
loop
pusha
lcall
mov
mov
js
adc
adc
sahf
sbb
outsl
mov
repz
adcl
jmp
popa
sub
fwait
mov
bswap
pop
sub
divl
shrl
add
inc
in
sub
adc
push
cmp
sbb
das
push
movsl
jmp
cmp
mull
sbb
mov
cmc
movsl
sbb
sub
pop
pushw
mov
mov
enter
hlt
shll
in
rolb
pop
stos
mov
sahf
icebp
push
out
pop
mov
repz
sub
out
inc
adc
adc
aam
cs
out
jne
xchg
fcmove
sub
subl
sbb
lods
sahf
mov
push
or
aas
xor
push
sbb
mov
mov
idivb
js
into
jle
inc
cmp
xchg
or
lods
popa
sub
in
hlt
mov
stos
clc
insl
nop
mov
dec
pusha
push
roll
xor
mov
testb
push
aam
out
adc
in
cmp
push
cs
lret
xor
pop
in
or
add
imul
push
mov
xor
cmpsl
fidivrl
push
xchg
aad
and
mov
sti
stos
and
jg
push
stos
popa
push
aas
cld
mov
dec
out
lcall
js
inc
clc
and
jnp
cmp
mov
enter
jmp
and
cmpl
mov
add
pop
jae
pop
xchg
aaa
test
in
loop
stos
mov
sbb
clc
js
rcrl
xor
pop
out
fwait
and
imul
cmp
imul
pusha
cli
add
or
fwait
or
pusha
jmp
lret
pop
adc
rclb
std
inc
fisubl
mov
xlat
mov
enter
dec
loope
fstps
pop
hlt
cmp
stos
jl
sub
jp
out
cmpsb
repz
aam
cmpsb
data16
mov
mov
repz
pusha
lahf
sub
adc
push
lock
xchg
sahf
sbbl
roll
iret
mov
test
jmp
lret
stos
fmul
xchg
push
cmp
dec
mov
pop
imul
out
mov
mov
push
push
mov
insl
jmp
jb
icebp
fdivrs
xchg
push
stc
stc
dec
cmp
inc
sbb
mov
lds
push
test
inc
or
test
push
cmp
loopne
xchg
sbbl
push
jp
and
shlb
cmp
out
shll
xchg
rcrb
cwtl
xor
fcoml
pop
jns
test
fbld
mov
and
inc
fnstenv
sbb
fmulp
adc
pop
push
mov
testb
mov
lea
rolb
sub
js
and
stos
lahf
inc
mov
testb
xor
xchg
daa
push
pop
nop
out
push
sub
cmp
adc
aaa
out
sub
sub
sub
cmp
dec
push
sub
aaa
notl
es
xor
mov
in
cmpsl
lock
dec
jp
sub
mov
dec
mov
pop
inc
nop
into
lcall
imul
mov
push
out
flds
inc
stos
add
dec
inc
jmp
mov
mov
leave
enter
push
sub
icebp
add
mov
lods
mov
cmp
add
and
add
xor
jmp
mov
movsl
imul
adc
sarb
mulb
adc
icebp
lss
or
cmpsl
in
call
xor
imul
arpl
cmpsb
xchg
xor
addr16
jb
outsl
cmp
push
repz
lock
movsl
pop
fs
scas
and
stos
adc
fcomps
lahf
int
jb
mov
mov
outsb
push
push
scas
lahf
repz
lock
add
xor
es
and
dec
cmpsb
cli
push
sub
sub
and
push
cmpsl
jns
repnz
xlat
addb
push
pop
mov
sub
xchg
test
lret
mov
push
push
add
xor
jno
stc
in
ss
mov
test
dec
inc
into
mov
scas
cmp
cmp
inc
lret
lret
mov
mov
movsl
sbb
mov
mov
test
int
orb
or
in
xchg
lahf
jb
daa
je
addr16
push
icebp
jmp
aas
cmp
sti
cmp
enter
lret
jecxz
adc
or
movb
add
repz
imul
sub
cmpsb
dec
jecxz
adc
sub
out
fidivrl
mov
push
es
sbb
lcall
pop
inc
test
xchg
pusha
jl
lock
xchg
jp
sbb
adc
cmc
push
out
lds
les
mov
cmpb
xchg
sbb
std
and
in
sub
std
inc
daa
push
add
out
add
sbb
mov
xlat
mov
mov
add
or
sbb
in
cli
scas
add
push
adc
jno
lahf
push
int3
sbb
jl
cmc
mov
jmp
mov
insl
adc
les
das
push
mov
mov
push
insl
pop
call
adc
loope
enter
cmp
sahf
pusha
into
push
push
shrl
xchg
inc
pop
outsl
cltd
or
or
mov
sbb
mov
movsb
loopne
pusha
enter
push
xchg
push
hlt
into
jae
aam
repnz
stos
fsub
pop
lds
pop
das
fwait
jp
sbb
ja
sarl
cmp
jg
xchg
sbb
dec
mov
out
pop
jne
xor
adc
ficomps
jbe
adc
pop
xchg
pushf
jp
insl
jnp
pop
xchg
push
cmp
out
nop
xchg
je
mov
out
andb
or
loopne
cltd
ret
fwait
or
sti
loope
or
dec
std
mov
lds
push
fs
jnp
cmp
push
insb
mov
rcl
fwait
fwait
in
add
or
xorl
mov
test
or
cmp
leave
xchg
and
adc
adc
adc
add
cltd
sub
xor
pushf
push
jmp
jno
push
leave
add
test
pusha
jmp
sub
test
nop
push
frstor
cmp
xlat
leave
aam
adc
xchg
xor
ss
or
pop
je
mov
xchg
dec
cmpsb
fisubl
push
ljmp
and
nop
pop
ret
int3
mov
mov
xor
mov
and
push
scas
mov
xchg
fwait
xchg
aas
negb
shl
enter
or
flds
or
int
mov
dec
mov
push
imull
pop
jecxz
imul
jae
sub
lea
shll
sub
pop
xor
icebp
frstor
pusha
push
push
fsts
movsb
or
js
out
xchg
clc
jns
dec
or
call
and
and
rorb
mov
movsb
insl
sub
pushf
fists
mul
das
inc
and
mov
xor
aas
push
mov
ljmp
aad
pop
push
mov
sahf
adc
jo
jae
dec
pushf
adc
stc
out
mull
call
and
in
push
dec
jl
jne
imul
pop
iret
push
sub
inc
je
mov
out
insl
and
and
sbb
cmpb
scas
sub
mov
push
jnp,pn
inc
xor
mov
pop
loope
cwtl
push
imul
xchg
xor
sub
jle
je
lcall
sbb
pop
packssdw
dec
cmp
add
or
push
cltd
js
int
cwtl
mov
push
std
or
sbb
and
and
mov
dec
or
in
int
pushf
cmp
pop
inc
rolb
mov
loop
stc
mov
cmp
dec
jge
mov
inc
or
ror
adc
mov
fidivl
shr
outsl
adc
xor
imul
sub
decb
fcoms
negl
ret
mov
and
sti
sbb
sub
inc
shl
leave
dec
pop
add
incb
inc
out
cld
cld
mov
addr16
mov
sbb
xchg
in
pop
adc
xchg
and
imul
lret
in
ds
xchg
inc
add
mov
mov
cmp
int
pusha
sub
int3
cs
into
ljmp
jnp
adc
add
xor
dec
fistps
lret
lea
xchg
jne
das
clc
sub
cli
adc
fcoms
xchg
icebp
pop
cmp
inc
arpl
xchg
inc
mov
jmp
cmp
shll
jge
rcl
in
xor
mov
pop
das
adc
cld
add
ficoms
xchg
lock
xchg
es
aad
mov
jle
and
pop
sbb
cwtl
pop
cs
inc
jle
ljmp
pop
mov
pop
cmpsl
or
testb
stc
mov
pop
push
xor
or
sub
pop
sub
repnz
sbb
inc
out
in
dec
cli
shr
cmpsb
add
push
sbb
repz
sbb
sbb
add
jo
dec
mov
jb
push
loopne
nop
mov
mov
fnstcw
scas
pop
lock
daa
js
pop
stc
fs
lods
mov
pop
mov
jmp
inc
js
cmp
and
push
sbb
arpl
imul
es
push
enter
mov
rol
ss
xor
sub
sub
add
xor
sti
aaa
xchg
lcall
xchg
or
ret
mov
fcmovne
mov
das
loope
and
jbe
dec
and
pop
into
leave
adc
lret
lds
sbb
fwait
pop
je
jp
adc
mov
sbb
jle
pop
leave
push
mov
mov
jl
pop
sbb
mov
in
pop
mov
mov
or
cmp
loopne
mov
js
ja
xchg
imul
stos
test
xchg
fimull
xor
mov
jne
and
jl
add
or
pop
cmp
icebp
ficoms
shll
flds
lods
push
ss
inc
mov
push
arpl
adc
jge
jle
call
mov
mov
addr16
jecxz
and
mov
int3
mov
add
cmp
fistps
scas
xor
dec
add
mov
cli
insl
pop
mov
test
rcll
inc
jmp
dec
xor
xchg
xor
cli
adc
jg
inc
xor
stos
xchg
dec
imul
test
lret
out
fdivl
pop
inc
mov
adc
xchg
scas
cmp
fwait
mov
fcomps
push
in
insb
xorb
mov
mov
jno
jne
imul
push
fimuls
fldenv
in
notb
add
fldl
push
dec
mov
call
mov
pop
shrb
xor
xor
adc
jg
adc
pop
xchg
pop
cmp
inc
inc
xchg
loope
xor
out
test
clc
cs
mov
sbb
enter
push
test
mov
popa
add
mov
ret
aas
xchg
adc
push
dec
ret
popl
aas
rolb
push
xchg
and
idivl
int
ret
outsb
cwtl
into
test
adc
push
cmpsb
xchg
je
imul
or
ljmp
and
imul
jle
jmp
mov
push
mov
pop
jecxz
or
xchg
inc
pop
rcrl
push
outsb
outsb
rol
mov
xor
scas
fidivs
xchg
push
arpl
repz
lea
xor
pop
icebp
xor
mov
xlat
fs
sarb
lahf
push
add
dec
rcll
fsqrt
orl
cmp
dec
cld
movsl
push
es
notl
sub
lds
roll
in
lahf
cmpsl
pop
inc
fs
mov
les
in
rcll
stc
stos
inc
pop
pop
fidivl
lahf
push
sub
fisttps
mov
dec
jb
outsb
pop
jp
dec
enter
fldt
jae
pop
pop
sub
add
imull
pop
jo
xor
or
mov
out
cmc
push
xchg
sub
xchg
arpl
addr16
and
loopne
int
fs
int
fcomps
sbb
mov
push
mov
arpl
out
jl
mov
pop
outsl
and
inc
out
test
mov
xor
out
test
jbe
xchg
mov
and
jo
fucomip
mov
push
sbb
jg
pop
je
sub
xchg
inc
xchg
imull
mov
and
dec
lea
test
xchg
dec
fwait
xorb
jbe
xor
push
mov
add
les
cmpsb
cmp
or
or
push
pop
lods
cwtl
adc
cmp
pushf
pusha
sbb
inc
iret
lahf
dec
sub
int3
cmpb
int3
scas
sahf
and
hlt
lock
mov
bound
inc
ror
and
adc
xchg
int3
out
rorb
mov
sub
test
cmp
shll
jnp
sub
aaa
xchg
add
push
pop
std
mov
xor
xchg
jl
sete
inc
xchg
mov
ds
mov
xchg
cld
push
mov
mov
adc
lahf
clc
pop
adc
push
push
jl
incb
dec
cmp
dec
adc
inc
mov
sbb
es
mov
cmpsb
ss
adc
lret
and
push
jo
pop
data16
sub
scas
inc
add
add
jl
jb
jmp
fnstcw
ficompl
pop
stos
and
cmp
add
into
jmp
lods
arpl
add
ret
popa
popf
iret
movsl
mov
sub
push
push
or
mov
lret
scas
push
orb
dec
je
jl
mov
cld
in
cld
pop
je
jbe
mov
fmuls
xchg
cwtl
int3
movsl
fs
out
sbb
or
pushf
jne
dec
sub
jmp
loope
inc
fs
ds
mov
icebp
lret
jge
bound
lahf
push
xorb
mov
cld
jmp
inc
adc
cltd
xor
xor
jo
mov
shlb
add
les
inc
data16
or
mov
int3
leave
enter
mov
sti
push
adc
out
jbe
push
push
or
lret
ljmp
shrb
cmp
add
adc
ss
sarl
roll
pop
pop
adc
push
sbb
push
mov
aam
adc
xor
dec
jbe
fwait
or
sti
dec
mov
popf
addr16
sub
fnstenv
scas
xor
cmp
fisubl
insl
pop
shr
and
mov
add
cld
sbb
cmp
mov
xor
adc
dec
xor
fistps
push
cmp
add
push
jp
xchg
stos
inc
jbe
mov
scas
push
stos
fstps
cmc
std
cmp
inc
xchg
inc
pushf
jp
sar
sbb
xlat
push
aad
xchg
push
and
fwait
sbb
mulb
dec
and
ja
decl
repnz
xor
in
dec
sbb
mov
inc
and
add
arpl
fs
xchg
sub
hlt
sub
es
add
inc
sti
and
dec
add
and
dec
pop
inc
jmp
cmp
int
lahf
jle
jnp
popa
aaa
add
adc
shlb
push
jg
scas
adcl
mov
fcompl
pop
sub
fdivl
in
mov
inc
mov
inc
add
popf
je
nop
and
and
arpl
cmp
cmc
dec
jecxz
notb
xor
daa
mov
aam
ljmp
addr16
sub
cmpsb
jle
test
out
dec
jb
mov
leave
sbb
je
je
add
imul
inc
repz
stc
jb
mov
sub
outsb
or
leave
push
int
pop
xor
out
push
icebp
cmp
scas
sub
cmp
leave
into
lret
pop
dec
jno
xchg
cli
dec
push
sub
das
inc
adc
pop
xchg
ret
adc
ret
je
or
inc
inc
int3
frstor
dec
and
outsb
fwait
lods
dec
xlat
adc
fs
mov
sub
lret
iret
push
add
repnz
shrl
inc
outsb
inc
xchg
cmpsl
loop
icebp
movl
sub
mov
lods
mov
into
and
imul
sahf
jecxz
or
mov
pop
mov
push
mov
ljmp
adc
orl
mov
cli
insl
mov
ret
iret
sbb
fcoms
decb
mov
push
adc
mov
xchg
shlb
jp
xchg
rcl
sub
sub
faddp
ss
and
inc
adc
std
xlat
lret
insl
jb
cmp
pop
mov
aad
xchg
shrl
sub
dec
or
jno
and
xor
aam
xor
in
or
aam
mov
inc
scas
fmul
xchg
fisttps
pop
ds
call
xor
or
into
dec
pop
cmpsb
sub
jl
imul
scas
sbb
sbb
sbb
adc
stos
fnstcw
movsb
movsb
shll
stos
add
xchg
cli
aam
stc
into
inc
andb
inc
movsl
notl
test
pop
dec
lret
dec
sub
adc
aaa
or
or
inc
iret
inc
or
call
push
popa
sti
repz
jecxz
xlat
and
pushf
es
lock
movsb
fcomi
inc
rclb
es
add
rol
mov
xlat
mov
in
push
inc
cs
hlt
mov
cmp
and
hlt
das
xor
icebp
add
adc
out
into
sub
or
pop
dec
add
lea
adcb
push
pop
insb
out
mov
stos
nop
aam
jp
sub
lcall
xchg
xchg
push
xlat
and
cmp
fwait
enter
lret
mov
sub
cmp
xchg
ss
mov
hlt
je
lahf
and
pop
fiadds
jge
cld
movsl
lcall
iret
in
inc
inc
shrl
and
xor
inc
jno
mull
inc
js
int
adc
push
mov
iret
loop
push
sbb
aas
xor
lods
push
xor
xlat
pop
add
mov
adc
cmpsl
movsb
aad
mull
push
outsl
lea
xor
stos
inc
xchg
aad
or
adcl
out
pusha
jo
mov
stos
fiaddl
and
ret
aas
out
sub
push
daa
mov
popa
mov
or
cltd
leave
movsb
mov
mov
cmp
aaa
in
into
loope
clc
pop
adc
pop
push
mov
outsl
sbb
or
nop
adc
mov
sahf
sub
mov
aad
mov
jmp
insb
push
cmc
popa
out
addr16
pop
rclb
fisubrs
clc
das
push
outsl
add
imul
loopne
jb
and
inc
lcall
pop
fnstsw
sub
pusha
test
jmp
in
xlat
xor
xchg
stc
test
or
adc
fwait
sub
outsb
lock
jns
mov
add
shll
les
jmp
push
push
cmp
jmp
and
insl
jbe
jo
aad
mov
push
ja
pop
jp
xchg
aam
loop
jnp
jecxz
bound
aam
loopne
test
adc
cmpsb
mulb
jbe
push
xor
fidivs
es
es
fmull
mov
rcl
mov
mov
xor
add
ja
jmp
and
rorl
pop
adc
adc
mov
and
out
rcrl
sbb
push
test
aad
in
dec
test
push
jo
cmp
rcll
push
mov
cli
push
sarl
and
xchg
or
pop
xchg
scas
pop
cltd
xchg
scas
ss
jmp
sub
jmp
int3
orb
je
xchg
sub
adc
pop
dec
sbb
mov
and
jmp
test
inc
pop
cli
mov
cmp
gs
shll
mov
mov
mov
cli
inc
aas
decl
xchg
daa
mov
frstor
xor
jnp
add
roll
outsl
stc
dec
lret
dec
cltd
xor
lods
aam
sbb
cmp
lcall
mov
adc
in
dec
ficompl
fprem1
fs
int3
into
imul
insl
out
jmp
dec
add
call
sbb
mov
outsb
cmp
xor
ret
movsb
pop
pop
pusha
mov
fs
mov
loop
dec
scas
dec
aad
push
inc
mov
add
popfw
add
inc
cmpsb
int
outsl
pusha
rorb
mov
out
mov
adc
sbb
icebp
dec
gs
xchg
clc
sbb
sbb
dec
or
jmp
push
jno
rcrl
lock
pop
dec
out
gs
jp
ret
mov
xchg
js
push
aam
into
pop
add
xchg
push
repnz
pop
inc
inc
into
dec
xor
fisubs
movsb
jp
filds
inc
push
xchg
outsb
addl
rcrl
ss
lods
mov
les
jmp
push
inc
jae
sarb
cmp
sbb
mov
cmp
in
popf
sbb
bound
pop
dec
adc
fdivs
mov
fidivrs
xor
inc
jecxz
pushf
cmp
fwait
out
fisttps
inc
pop
popf
and
in
lahf
std
inc
test
cwtl
out
lea
sub
xor
xor
jne
fs
lret
and
lret
fbstp
aaa
xchg
xchg
add
movsb
les
lock
stos
popa
push
xlat
data16
inc
insb
fwait
sbb
add
stc
sbb
cs
or
rcr
mov
sub
xor
pop
mov
mov
jp
mov
test
jnp
pop
push
adc
pop
loop
mov
push
mov
push
fs
iret
imulb
push
pop
int3
xchg
je
int
sub
adc
push
clc
sahf
mov
push
lods
sub
scas
lret
sarl
mov
imul
pop
js
test
xor
add
sbb
addr16
xor
inc
adc
lea
push
and
sbbb
rcrb
loope
sar
or
cmp
mov
add
adc
or
mov
jp
jbe
xchg
jle
movsl
jnp
ret
jne
fstp
pushf
mov
sahf
outsl
or
mov
test
sub
xlat
fimull
fimuls
sub
sbb
int
mov
test
sar
je
xor
repnz
inc
insl
dec
test
push
cs
inc
push
andb
lahf
push
dec
scas
jae
mov
pop
jns
mov
push
pop
popa
xchg
cwtl
pop
in
test
lods
xchg
lret
pop
mov
cltd
mov
jp
popa
ljmp
rep
pop
and
int3
lahf
lcall
mov
sbb
sub
and
inc
cmp
xor
cltd
repnz
sbb
push
cmc
lcall
pop
sub
mov
insl
in
or
jp
sti
push
xor
push
ljmp
fxam
inc
lcall
ja
jae
jns
pushf
and
faddl
xchg
xchg
rolb
andl
dec
out
imul
ret
mov
add
ror
dec
or
sub
sbb
or
in
inc
stos
add
adc
or
add
subl
ss
out
jo
and
sarb
je
pop
cmpsb
daa
xchg
jbe
xchg
pop
dec
nop
jle
shll
jnp
mov
jp
aaa
xlat
arpl
lahf
jge
dec
leave
shrb
jp
out
sti
push
fisttpl
cwtl
sbb
adc
enter
add
int
inc
lcall
adc
jo
pushf
xchg
rcrl
mov
xor
mov
inc
into
test
std
push
push
xor
hlt
mov
jns
lea
mov
push
mov
cs
in
mov
dec
fsubl
outsl
and
mov
mov
incb
roll
adc
add
dec
cmc
push
shlb
test
sbb
sub
sbb
into
rclb
imul
cmp
lret
fwait
pop
cs
lods
adc
inc
movsl
insb
out
test
fwait
arpl
cmp
push
sahf
dec
mov
xor
lds
out
notb
dec
aas
pop
clc
test
in
gs
cwtl
loop
cs
jg
fwait
repnz
fbld
movsb
mov
lret
stos
mov
push
and
shr
pop
jbe
insl
xchg
push
add
ret
scas
xor
in
ja
and
jbe
cmpl
fildl
xchg
push
movsb
fisubl
cmp
or
frstor
pop
lahf
cmp
pop
dec
inc
aam
mov
xor
loop
int3
dec
cmpsl
cli
rcr
out
jmp
xchg
add
stc
mov
aam
or
loopne
jg
mov
add
sub
mov
jnp
fadds
cs
test
int
ss
sahf
or
xchg
adc
xlat
rcl
cmp
mov
int3
int3
fistpl
repz
lcall
cmp
loope
cmp
stos
jno
push
mov
or
dec
mov
jl
aam
out
mov
xchg
cld
inc
jp
inc
into
out
mov
das
xor
and
sti
cli
mov
pop
jbe
jns
ret
cld
test
adc
stc
mov
xchg
lock
or
pop
push
xchg
scas
mov
stc
xchg
adc
icebp
imul
dec
rclb
xchg
pop
sub
leave
out
pop
outsl
sub
pusha
add
incl
cmpsb
adc
jne
insb
dec
in
movsl
or
mov
loop
int
vshufps
nop
and
xchg
add
ljmp
mov
das
push
test
push
sub
lret
je
sti
jmp
stc
push
imul
add
fidivrs
outsb
xchg
xchg
into
jae
sub
and
jns
das
sub
cmc
ret
push
addr16
lret
jecxz
int3
add
icebp
test
xchg
pop
ficoms
popf
mov
xchg
add
loop
jle
rorb
jg
or
push
dec
sbb
es
aaa
aas
call
pop
leave
popa
xor
jb
fs
mov
adc
jl
jp
and
mov
sbb
push
mov
mov
repnz
lahf
sbb
cltd
imul
dec
fstps
jle
xchg
les
pop
mov
les
jns
jbe
jne
xchg
push
sbb
andb
data16
and
dec
lock
mov
cmp
push
lcall
outsb
adc
iret
sbb
push
jge
sbb
cmp
sub
call
cmp
ret
fdivs
stc
lcall
push
sbb
sub
mov
adc
or
mov
enter
xlat
xchg
cwtl
test
mov
aam
les
mov
pop
popf
mov
int3
fidivrl
mov
test
int
mov
ja
xchg
movsl
scas
shrl
fsts
lahf
mov
or
insl
mov
roll
xchg
sbb
add
pop
push
mov
xor
popf
test
push
repnz
or
addr16
pop
and
cmpsl
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
scas
pop
nop
dec
add
add
add
add
cmp
lods
add
mov
add
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
mov
ret
mov
cmp
pop
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
push
mov
xchg
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
xor
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movl
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
dec
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
xorb
idiv
popa
add
xchg
add
xlat
roll
outsb
mov
and
pop
add
sub
sbb
push
fdiv
sbb
repz
jne
xchg
pop
orl
adc
push
adc
jnp
icebp
loope
cmp
jge
and
fbstp
mov
mov
and
mov
aaa
pop
jmp
out
jp
insl
test
lds
dec
rclb
mov
out
add
repz
scas
mov
dec
push
mov
rclb
out
testl
repnz
add
sbb
mov
daa
test
fidivrs
xchg
pop
ja
cli
aad
lahf
xor
mov
cmp
dec
hlt
add
test
mov
stos
cmp
mov
xlat
push
scas
mov
sarl
leave
scas
jmp
mov
in
mov
out
xchg
xchg
add
jecxz
add
out
imul
in
jae
push
arpl
dec
mov
jnp
jmp
loopne,pt
loopne
mov
jb
jnp
pushf
push
bound
adc
sub
sbb
stos
sbb
lods
pop
mov
ret
pop
and
mov
ret
dec
push
pop
jp
jmp
mov
sub
je
rcll
xchg
xor
push
push
push
or
mov
xorb
dec
jne
xlat
lea
dec
jns
push
fwait
cmp
inc
mov
inc
stos
lds
push
cmc
cli
mov
repz
cltd
xchg
fimull
adc
inc
sahf
add
lods
xor
in
imul
xor
dec
sbb
repz
cmp
jae
scas
call
jecxz
jmp
lock
mov
loope
pushf
mov
rcr
xorl
or
mov
mov
mov
mov
sub
mov
sbb
repz
jae
rcl
rcll
movl
xchg
icebp
cwtl
dec
aaa
inc
xor
lret
daa
fdivl
mov
lds
loope
pop
add
in
sub
cmp
cmp
aaa
arpl
push
sbb
cwtl
mov
mov
inc
lret
xor
push
xor
sbb
popa
fcmovnu
pushf
bound
adc
sbb
fsts
cmpsb
cmp
ja
idiv
jg
mov
mov
jb
push
data16
add
xchg
add
inc
adc
fdivl
gs
jmp
mov
imulb
mov
xchg
cmp
mov
push
cmp
push
scas
mov
outsl
xchg
movsl
and
std
nop
push
inc
je
mov
jo
js
sub
push
jne
repz
jbe
jle
add
fisubl
cmp
dec
mov
lock
xchg
idivb
rol
cmp
inc
imul
push
mov
xor
mov
mov
repnz
mov
push
imul
adcb
push
cltd
and
fucomi
sbb
cmpsl
ljmp
fmuls
sub
ja
pop
or
sub
cs
push
ja
and
pop
cmpb
xchg
cmc
mov
inc
jb
fisubrs
mov
mov
jmp
and
jno
outsl
jge
sbb
outsl
xor
lock
mov
int3
mov
jle
aas
fs
lea
push
out
mov
add
add
jmp
aaa
xchg
outsb
dec
lea
mov
sbb
mov
jbe
cmpsb
mov
stos
push
lcall
cli
test
inc
std
dec
sahf
or
lcall
mov
andl
rol
cmp
iret
push
push
es
out
lds
fisttpll
or
cli
mov
or
mov
jb
inc
cmpsl
loopne
inc
and
cmp
add
cmp
shrl
mov
cmp
sub
xchg
mov
inc
sbb
insb
adc
decl
xor
or
pop
outsl
sbbl
test
inc
cmp
cli
mov
ret
outsl
mov
xlat
sarb
push
cmp
pop
enter
sub
mov
sbb
idiv
sbb
push
fstl
sahf
negb
mov
jno
movsl
or
call
sar
cmp
jb
popa
mov
inc
xchg
mov
sbb
cmp
ja
jl
inc
push
cld
in
pop
jecxz
mov
jge
jge
push
pop
dec
inc
mov
outsl
push
jg
sbb
es
pop
in
test
rcrl
mov
pop
and
mov
mov
cmp
xlat
leave
xchg
cmp
add
pop
sbb
pop
xchg
mov
inc
add
add
xchg
add
icebp
test
inc
popa
jp
push
cmp
push
pop
jle
aas
js
ficompl
sbb
stos
mov
repnz
push
mov
test
neg
scas
xchg
cmp
mov
lds
pop
fwait
mov
shl
sub
test
cmp
mov
je
pushf
xchg
out
xchg
outsb
scas
xchg
adc
shrb
jo
push
mov
ret
inc
xchg
test
ret
mov
ret
int
adc
sub
sbb
shll
sub
sarl
mov
mov
jge
pop
int
icebp
int3
sub
lret
mov
add
xchg
sbb
fsts
xor
pusha
les
jne
pop
adc
rorb
dec
sub
add
jg
mov
enter
pop
xchg
cwtl
aaa
shll
mov
mov
lret
xlat
adc
cmp
cs
jo
dec
jno
rolb
jnp
dec
dec
fcompl
in
repnz
repnz
cmp
or
cmp
lcall
sub
mov
rclb
cmp
fs
jmp
adc
out
repz
rcrb
mov
pop
sub
out
and
dec
std
and
sbbb
jge
cld
push
dec
pop
sqrtps
sbb
dec
dec
pop
fwait
cmp
stos
sub
loop
pushf
daa
pusha
in
data16
je
andl
mov
push
ret
cmp
fadds
addr16
xor
ljmp
fld
sahf
fldt
lods
pushf
pop
ret
ss
mov
test
push
in
fs
inc
mov
mov
mov
adc
xor
inc
pop
cmp
lods
leave
xchg
push
call
jp
lcall
popf
fldenv
mov
mov
jae
jnp
xor
cmp
jle
and
xchg
loopne
and
lea
repz
daa
cld
into
cmp
xchg
aad
mov
dec
or
test
xor
bound
out
xchg
lock
sbb
fcoml
arpl
enter
xchg
dec
sbb
jnp
les
test
les
popa
dec
jp
gs
and
add
mov
jp
push
xchg
add
xchg
add
adc
mov
icebp
xchg
dec
fcoms
pop
adc
or
scas
shlb
shll
mov
cmp
fwait
subb
dec
add
dec
pushf
sub
jmp
popa
add
lea
mov
jecxz
cmp
cld
add
jne
dec
aas
rcrb
inc
shr
mov
add
xchg
dec
ljmp
mov
arpl
repnz
imul
push
push
jb
mov
mov
inc
push
pop
lret
fdivrs
out
in
fst
push
jp
aam
adc
sub
das
jecxz
sbb
stc
xchg
mov
test
outsb
test
mov
mov
lret
sub
push
arpl
daa
mov
in
mov
xor
test
or
inc
pop
push
rcll
and
inc
fildl
imul
push
add
or
mov
or
cld
cmp
lods
ss
dec
hlt
outsb
stos
aam
lods
xor
rorb
outsl
pop
dec
orb
mov
gs
sbb
lahf
mov
add
dec
mov
sbb
out
icebp
es
adc
sbb
sarb
je
add
test
inc
mov
fsin
imul
mov
mov
out
jg
cmp
or
cmpsl
call
imul
ljmp
push
inc
xchg
push
xchg
jne
mov
mov
xor
xor
jecxz
jp
push
xor
mov
pop
sti
mov
das
mov
scas
jno
xor
icebp
das
insb
and
mov
scas
repz
movsl
mov
mov
ds
xchg
in
adc
dec
jp
lret
ret
jmp
cmpsb
dec
ficoml
lret
jp
pop
addr16
into
aam
and
fistps
aam
adc
lods
decb
cmp
push
push
push
sub
sub
cli
pop
mov
arpl
lret
cld
cmp
int3
into
arpl
jo
lret
sti
stc
and
pop
pop
jmp
gs
movsb
movsl
fs
push
add
ljmp
loopne
xchg
cmp
jmp
jg
and
popf
fstpt
test
xor
sbb
add
js
hlt
mov
std
jl
dec
pop
cmp
add
add
xchg
add
es
xlat
adc
mov
and
dec
ljmp
or
cmpsl
and
mov
in
enter
sub
inc
push
jmp
cmp
gs
insb
jl
cmp
inc
pop
sahf
in
lret
sub
ror
or
clc
or
mov
js
adc
cltd
shr
xchg
stos
shl
enter
push
test
aad
fsubrl
xchg
das
mov
test
push
scas
xor
cmpb
and
test
out
lret
adc
and
aad
sub
arpl
jne
or
fadd
clc
add
sbb
pop
test
sti
adc
dec
inc
cmp
aad
cmpsl
lods
adc
xor
aam
inc
hlt
lcall
ret
xor
ss
in
mov
mov
cmp
lret
in
bound
and
icebp
mov
int3
push
repnz
fisttpl
inc
push
jb
xorl
fwait
sahf
dec
aam
dec
repnz
stos
lods
inc
mov
clc
or
in
cli
loop
icebp
negb
jl
push
xchg
push
mov
dec
bts
lds
jmp
pop
push
leave
clc
or
jge
repz
push
dec
mov
outsb
ret
xor
xor
fmul
mov
into
outsl
int
pushf
bnd
ljmp
mov
adc
dec
push
cs
aas
mov
push
cmp
loope
lcall
dec
les
das
imul
divb
pop
push
cmp
iret
call
test
push
inc
data16
jno
pop
mov
bound
sub
jmp
and
hlt
sbb
ja
or
push
mov
addr16
dec
outsl
cli
aaa
es
push
repnz
adc
pop
ljmp
ja
jmp
cwtl
push
push
aaa
das
fwait
push
call
push
add
or
dec
jmp
cmp
adc
cbtw
sub
fstpt
mov
xchg
ss
xchg
das
sbb
jo
notb
jno
mov
idiv
pushf
jns
jb
and
ljmp
mov
sub
dec
mov
sub
insl
sbb
pushf
push
cmc
or
and
jnp
xlat
loop
sbb
test
add
daa
add
pop
mov
mov
fcomi
push
dec
xchg
outsb
add
xchg
add
add
popf
inc
enter
ds
stc
data16
pop
mov
std
shll
push
mov
filds
or
into
fistl
add
aaa
adc
inc
aad
jb
or
fcompl
push
xchg
shl
or
inc
xchg
das
fimuls
out
popa
jae
out
hlt
cmpsb
ret
js
insl
arpl
pop
sub
gs
movsl
sbb
rcll
pushf
lcall
inc
into
icebp
push
insb
out
mov
das
fisttpll
fistpl
dec
xchg
inc
stos
mov
and
sbb
stos
mov
adc
es
xchg
mov
xor
stos
leave
mov
xchg
and
add
pop
cwtl
or
addr16
andl
std
add
add
addr16
in
cltd
pop
jmp
inc
dec
mov
adc
adc
mov
rcr
in
cmp
sub
divb
stos
cwtl
scas
incl
pop
out
rcll
pop
dec
pop
pop
lret
arpl
iret
mov
or
ss
or
and
adc
push
or
add
data16
mov
jmp
jb
daa
jae
mov
gs
popl
sbb
xor
mov
and
jnp
inc
adc
mov
subl
lods
out
inc
sub
sub
mov
gs
fs
jae
call
xchg
cli
inc
xor
arpl
or
inc
scas
aas
rcll
fcoms
std
sti
jae
add
mov
loop
cmp
add
sbb
xchg
insl
lcall
adc
icebp
aad
jecxz
jb
ja
aam
pusha
test
xchg
or
dec
ljmp
adc
push
arpl
inc
decb
mov
loope
ljmp
xor
jmp
jnp
popa
test
in
mov
mov
mov
loopne
mov
jno
inc
jae
dec
and
push
mov
xor
or
mov
into
js
pop
rcl
jmp
int
inc
aad
rcll
lods
and
mov
pop
mov
dec
inc
or
jno
inc
mov
xchg
sbb
in
leave
subl
xor
repz
test
push
movsb
xchg
addb
cmova
pop
mov
cmpsl
sbb
jg
pop
aad
loopne
dec
xor
add
xchg
add
and
je
fnsave
mov
in
jl
sbb
ljmp
push
inc
jnp
stos
push
or
rcrl
and
jmp
or
add
test
shl
xor
jmp
and
aas
test
into
cltd
mov
pushf
mov
lcall
inc
push
std
fdivrs
cmp
loopne
push
push
mov
loope
mov
mov
fcoml
sub
daa
clc
add
out
xchg
lods
cli
call
stc
jns
hlt
jge
xor
mov
adc
mov
cwtl
and
in
jne
xor
cmp
lcall
call
inc
jae
jp
js
cld
inc
les
hlt
push
mov
xchg
or
hlt
cld
pop
mov
out
aad
cmp
xchg
add
sub
negl
sub
aaa
insl
test
push
lahf
xor
lock
hlt
cmpsl
out
movsl
incb
dec
loope
mov
shl
or
inc
aas
push
rcr
movsl
orl
fstps
mov
stc
lahf
cmp
or
lea
call
push
dec
lock
pop
xchg
jl
lods
adc
cli
sbb
cs
call
jno
rorl
jle
gs
inc
test
mov
sbb
out
push
shrl
stos
lds
inc
fdivl
adc
mov
pop
fcoml
dec
mull
and
imul
and
pushf
clc
imul
nop
stos
mov
adc
aaa
sub
mov
and
sub
cmp
cmpsb
add
shl
mov
or
xor
xor
push
mov
lea
lahf
into
xchg
iret
xchg
lahf
loopne
xchg
pop
out
fucomi
add
sbb
gs
xchg
aad
popf
mov
scas
mov
pop
rcl
adc
fdivrs
stc
xor
xchg
mov
inc
push
dec
fisubl
in
repnz
scas
inc
cmp
fld
push
jnp
cmp
repnz
adc
mov
ret
test
call
lock
lcall
adcl
test
inc
lahf
add
popf
paddd
cmpsl
mov
and
jg
mov
add
add
cmp
inc
std
popa
sub
rcrb
stos
jmp
cmp
fisttps
add
lret
je
add
insl
shld
arpl
int3
insl
mov
aam
lcall
mov
mov
push
dec
mov
loope
add
rcrl
sbb
insb
and
aam
xchg
ja
cmpsl
mov
leave
inc
lods
push
mov
mov
or
iret
sub
je
sub
in
fstl
testb
mov
imull
mov
je
mov
lods
je
jno
stos
xchg
sqrtps
stc
sub
popf
sbb
push
or
aaa
xchg
das
sub
and
inc
out
gs
cmp
inc
stos
scas
xor
decl
mov
and
imul
xchg
xlat
ret
in
push
push
popa
repnz
xchg
or
lcall
cmp
sbb
lret
xorl
xchg
aam
jne
mov
ret
mov
out
clc
xorb
xlat
push
outsb
adc
enter
aad
repz
lock
pushf
test
gs
outsl
push
mov
scas
mov
repz
xor
xchg
jmp
jb
add
add
rcll
jno
int
cmp
lock
clc
dec
scas
push
pop
mov
lods
and
mov
jle
inc
cwtl
add
out
scas
loopne
dec
sahf
mov
sbb
mov
stos
mov
rcl
mov
fwait
xor
sub
or
pop
repz
mov
mov
mov
add
xlat
pop
jmp
lahf
xchg
and
cltd
mov
or
sbb
cwtl
stos
loopne
ss
sbb
xchg
ss
mov
std
leave
aas
js
dec
add
scas
and
js
out
sbb
sbb
mov
xchg
sbb
outsl
ja
jecxz
pop
mov
cmp
daa
push
push
daa
ja
int
sar
popa
lahf
jp
icebp
and
daa
dec
pop
je
es
scas
stc
sub
out
jmp
imul
cmp
lds
jp
in
leave
jae
jne
sub
outsl
push
push
cmp
leave
xor
mov
add
rcrb
stos
dec
pop
lds
push
sbb
jnp
adc
add
push
movsb
lea
lods
and
push
jl
leave
sub
add
in
mov
mov
lret
xor
aas
stos
xlat
test
mov
loop
bound
pop
sbb
dec
or
aam
addb
cmpsl
xchg
dec
pop
bnd
mov
pusha
xor
ss
mov
mov
fwait
and
rclb
xchg
lock
shrb
jno
jle
hlt
add
xchg
sbb
add
mov
cmp
push
xchg
out
hlt
xor
fisubs
mov
or
mov
push
das
jecxz
ja
xchg
out
xor
mov
lock
push
pop
aaa
popa
arpl
aas
ret
xor
sub
xchg
int
lock
mov
filds
arpl
xchg
out
movsl
insb
mov
pop
int3
jge
in
in
mov
aaa
pushf
add
movsl
xchg
sbb
insb
or
inc
rcll
mov
scas
aad
sahf
or
fs
inc
popf
sti
je
push
pop
dec
or
ret
sti
mov
leave
cmp
push
ljmp
jmp
pop
lahf
pop
mov
call
pop
xor
pop
out
cld
outsl
lret
stc
test
jnp
adc
jecxz
cmp
fstps
outsb
ljmp
jae
sarl
adc
addb
dec
cmpsb
cmp
pop
inc
and
pop
mov
jge
push
lods
inc
sub
jbe
out
or
test
mov
hlt
psadbw
dec
in
not
pop
sti
xor
mov
sub
sbb
lret
std
xchg
in
dec
sbb
cmpsl
cmpsl
xor
xchg
push
jecxz
push
rcrb
mov
jbe
movsl
aaa
fnop
adc
stc
xchg
hlt
into
outsb
lret
mov
pop
add
test
cmp
add
mov
test
or
xor
nop
sub
out
arpl
cmp
mov
add
fidivl
push
lea
out
leave
pop
cmp
and
add
stc
push
mov
lods
and
cli
jmp
fstpl
sub
xor
xchg
add
popa
inc
mov
cmpsl
and
xor
pop
dec
ret
inc
pop
cmp
push
cmc
sbbb
mov
pop
daa
push
pop
sub
mov
aaa
les
lods
movsb
push
inc
rcr
add
test
mov
sub
js
add
aaa
mov
sbb
fstpl
setnp
mov
sub
push
ja
push
add
cld
xor
pop
ds
call
mov
mov
sbb
lret
idivl
cmpsl
mov
jnp
dec
add
adc
jae
mov
or
dec
xchg
popa
adc
and
mov
aas
idivl
movsl
xchg
xlat
aam
cmp
je
cmc
mov
fldl
cmp
cs
push
ds
int3
faddl
daa
jge
push
or
in
mov
cmp
ret
rcrb
lock
mov
ficoml
sbb
and
test
lock
sarb
dec
xlat
mov
repnz
or
xor
ret
icebp
sbb
mov
psllq
into
fisttps
enter
shl
loope
xchg
iret
xchg
inc
mov
out
push
das
inc
xor
cld
imull
sti
das
idivb
or
and
mov
pusha
xchg
mov
mov
mov
sbb
add
sahf
lods
cmp
pop
push
bound
add
xchg
cld
cld
sub
enter
hlt
shll
into
aam
sbb
sub
xchg
movsb
adc
imul
popa
jecxz
xor
std
mov
lock
jnp,pt
imul
lcall
lret
xor
inc
jnp
xchg
in
stos
mov
or
cmp
ja
sbb
scas
aas
cli
pop
and
fstps
repz
js
mov
sub
push
add
fisttpl
leave
in
xchg
xor
push
or
adc
cwtl
xor
mov
pushf
sub
and
out
and
aad
xor
test
and
jle
faddl
bound
divb
jp
mov
mov
dec
pop
andb
jl
cmp
sbb
inc
and
stos
stc
mov
cmp
and
jae
sub
push
jae
or
xlat
lcall
fisubs
mov
mov
les
or
mov
ljmp
jecxz
xor
mov
lock
nop
jg
js
out
xor
mov
adc
je
loop
rorb
mov
push
mov
adc
ss
and
clc
cmc
push
repnz
pop
leave
xchg
call
cltd
pop
stc
outsb
cmc
dec
xor
add
xchg
add
fucomi
dec
fsubrs
inc
lods
imul
xchg
push
loope
sar
xchg
cmp
or
loopne
mov
jo
xchg
movsb
clc
pop
push
pop
adc
popa
sahf
add
cs
and
xchg
aam
adc
xor
xchg
inc
sub
icebp
push
mov
test
add
sub
test
into
stos
xor
add
aaa
incb
xor
test
cmp
movsl
test
and
mov
adc
and
fmul
mov
ljmp
cmp
jg
or
mov
popa
mov
or
dec
push
dec
lock
shll
jge,pt
or
or
jp
imul
icebp
lea
gs
mov
lock
in
imul
jmp
jg
mov
test
cwtl
xor
push
popf
cmpsb
inc
add
xor
mov
int3
bound
ja
or
cltd
loop
adc
testb
or
mov
das
or
adc
xchg
outsb
pop
gs
inc
pop
psubb
js
cmp
push
cli
pop
call
lock
sub
push
mov
ret
je
inc
movsb
jmp
jnp
xlat
dec
xor
push
inc
and
ficomps
and
or
gs
ss
pop
push
in
and
call
daa
movlps
mov
daa
mov
fildll
roll
adc
sbb
cli
jbe
fucomip
stos
clc
cmp
jno
dec
mov
inc
sbb
pushf
mov
jmp
pop
mov
fs
mov
xor
lods
sbb
daa
int3
sbb
and
in
xchg
jl
sahf
std
insb
cmpl
aaa
xchg
mov
and
or
jns
daa
pop
inc
mov
cmc
fbstp
push
adc
jle
mov
mov
loop
cwtl
sub
pop
mov
iret
scas
jmp
cmpsb
cmpsl
mov
inc
sbb
lods
nop
ja
stc
jmp
lods
sbb
enter
mov
insl
xor
jb
jns
dec
outsl
pop
lds
fidivs
test
push
pop
repnz
icebp
or
cmp
push
shll
add
mov
idiv
iret
std
mov
hlt
mov
add
add
jns
in
jnp
fcoms
pop
mov
adc
pushf
outsb
cld
icebp
mov
call
push
jne
gs
scas
ja
out
push
jle
sub
call
int
or
sub
push
adc
push
iret
repnz
icebp
dec
fmull
and
cmc
push
xor
mov
pop
cmp
mov
dec
rol
push
lret
repnz
cld
cmp
push
aaa
lds
out
or
xchg
popf
sub
pop
mov
cmp
roll
xchg
push
loop
lea
add
shr
inc
je
in
cld
xchg
xchg
loopne
ret
icebp
dec
dec
mov
loope
xor
ss
xchg
mov
out
iret
jns
cmpsb
push
dec
idiv
fsubr
aam
popa
sti
push
mov
xor
jle
jno
or
aad
mov
fldenv
bound
sti
lods
mov
mov
scas
jg
mov
mov
out
aas
ds
or
clc
lods
aad
stc
push
bound
xchg
ret
dec
loop
sbb
pop
push
adc
xor
pop
dec
loopne
mov
mov
ret
in
mov
enter
sbb
mov
in
cmp
rolb
fs
cmp
cmpsl
andb
ss
mov
xor
mov
jle
movsb
or
pop
xor
popa
jmp
pop
dec
ljmp
out
in
lret
lahf
outsb
mov
and
in
shll
test
outsb
pop
mov
cmp
add
into
pushf
outsb
inc
lock
rcrl
mov
mov
mov
cmpsl
mov
pop
push
in
daa
rcr
cmp
insl
leave
cmp
repnz
int3
movsb
mov
lcall
out
inc
add
mov
scas
notl
xor
sbbb
fcompl
aaa
sub
pop
or
cmpb
movsl
mov
inc
scas
pop
xchg
in
stos
outsl
mov
out
repnz
mov
sub
movsb
mov
and
jle
aad
pop
cmp
mov
cltd
popa
popa
lahf
nop
fsts
and
hlt
addr16
xor
push
mov
jnp
repnz
add
mov
jecxz
add
push
icebp
fwait
or
lcall
out
jbe
add
push
add
out
ret
mov
out
mov
push
inc
addb
xchg
add
xor
cmp
das
xchg
aad
out
sti
xor
cmp
les
addr16
sub
push
fmull
xor
scas
out
or
das
xchg
dec
mov
inc
lcall
jae
pop
inc
jmp
mov
jbe
sti
loopne
loop,pt
xor
xchg
fmull
mov
and
enter
lock
mov
fisttpl
fwait
cmp
clc
addr16
xlat
ret
push
mov
mov
xchg
jb
stos
sbb
aaa
jp
incb
hlt
push
shlb
movsb
lea
pop
cmp
sbb
jmp
jg
sub
cmp
lcall
rcr
adc
in
inc
inc
mov
fisubl
mov
stc
lods
sbb
div
add
mov
mov
js
xlat
sub
pop
sub
cmp
fbld
insb
stos
mov
orb
daa
testb
cs
or
cmpsl
adc
push
inc
loope
lcall
sub
push
and
gs
mov
xor
mov
cmpb
ffreep
lret
lahf
xlat
push
mov
mov
xchg
dec
cmpsl
adc
sbb
mov
pop
mov
arpl
jl
mov
dec
roll
imul
sub
stos
cli
mov
ret
jb,pn
ficompl
pop
mov
and
sub
clc
inc
push
inc
out
test
loop
in
xor
jmp
outsb
or
or
fstps
enter
out
les
sahf
loope
fwait
lods
popf
and
fmull
cwtl
push
dec
inc
hlt
dec
lcall
ljmp
aas
or
xchg
adc
mov
mov
adc
adc
stos
adc
cmp
push
aas
lahf
out
dec
push
cmp
push
and
mov
sbb
pop
aaa
jmp
in
adc
dec
sbb
out
repz
mov
scas
repnz
mov
fildl
ret
jae
cmp
push
rcrl
cmpsb
and
push
filds
leave
xchg
loope
out
int
fucomp
test
mov
sarb
cmp
sbb
mov
in
inc
lret
imul
push
push
jle
xlat
outsl
mov
lcall
add
xchg
add
jl
out
xchg
push
jge
inc
mov
jo
pop
jnp
dec
add
mov
hlt
mov
cmp
jns
ljmp
cmc
mov
icebp
ds
fidivrl
in
in
out
jp
dec
je
jae
scas
mov
fildl
mov
sub
and
call
mull
in
lcall
xchg
cmp
sbb
lcall
inc
push
shl
sub
jp
adc
pusha
imul
cmp
cltd
test
dec
push
push
leave
and
xchg
es
andl
fimuls
jle
cmp
jne
in
popf
cmp
mov
sbb
js
jmp
out
dec
fbld
sub
push
cmp
lcall
inc
xchg
mov
insb
or
int3
xor
xchg
mov
int3
jno
adc
mov
test
arpl
js
ficomps
hlt
or
notl
sub
in
cwtl
psubw
nop
insb
push
lea
js
sub
lds
mov
imul
and
cmp
aad
dec
or
pop
nop
push
addr16
and
adc
ljmp
lret
daa
subl
push
aam
sbb
out
xchg
mov
adc
lahf
hlt
stos
jmp
cmp
add
jns
sub
mov
insl
and
and
adc
dec
xchg
sub
dec
sbb
bound
sub
ja
int
loopne
mov
mov
sub
les
mov
pop
stos
or
fdivrl
or
dec
pop
fsubrl
aas
mov
mov
fs
sub
and
cmp
xchg
xor
into
adc
xchg
in
cmp
sarl
popf
orb
lahf
cmpsb
xchg
ds
aam
mov
outsl
mov
or
xchg
cmc
jp
push
jecxz
pxor
sub
lds
mov
pop
sub
mov
lea
push
shrl
int
mov
or
das
lahf
inc
add
jle
push
sti
mov
ss
pop
push
int
sbb
outsb
sbb
popf
leave
es
fbstp
push
or
adc
lret
sub
add
adc
or
pop
out
repz
add
mov
xchg
add
mov
mov
pusha
fwait
jp
repz
mov
shll
pop
sbb
out
xchg
stc
xlat
xor
addr16
xchg
divl
and
daa
cwtl
std
adc
adcb
repz
jns
push
icebp
outsl
inc
in
ret
test
or
adc
push
pop
adcb
push
mov
jecxz
scas
icebp
and
test
mov
jecxz
sub
out
imul
pop
popa
mov
push
add
les
or
outsl
pop
arpl
dec
and
adc
push
lock
dec
sbb
lock
lcall
or
repz
je
gs
pop
pop
jp
xchg
xchg
icebp
leave
aas
xchg
cmc
ret
loope
lcall
testb
adc
cmp
push
scas
pop
xchg
push
popa
sbb
test
adc
add
gs
movsl
cmpsl
mov
lods
cli
push
inc
push
clc
fildl
inc
add
cmp
ret
mov
sub
jbe
push
fs
mov
mov
test
mov
pop
div
ds
adc
inc
popa
outsb
je
fucomp
dec
xchg
pop
in
and
inc
lods
pop
ret
adc
stos
lock
inc
mov
pop
sub
popf
inc
cmpsb
cwtl
add
sub
fwait
xor
scas
sti
jne
cmp
lock
in
mov
or
mov
fmuls
arpl
pop
sbbb
lds
cwtl
inc
mov
push
fs
stos
scas
jno
jne
add
mov
jns
lds
insb
jne
jne
xor
mov
xor
push
shrb
or
nop
dec
pop
int
test
mov
lds
and
roll
adc
jo
fld
jne
leave
adc
xchg
adc
xor
sub
scas
in
std
dec
lcall
ror
cltd
jnp
pusha
push
aaa
mov
mov
jmp
js
xchg
andb
xchg
in
push
icebp
cli
sbb
into
pushf
xchg
xchg
xchg
pop
arpl
mov
xor
js
addl
aad
mov
ja
loopne
mov
inc
xlat
pushf
xchg
xlat
int
ret
xchg
out
repz
data16
add
lods
push
jnp
jns
cmc
ljmp
add
xchg
insl
mov
aam
inc
fadd
pop
mov
rolb
add
mov
lret
ficoml
push
ret
jmp
gs
lods
sbb
repnz
jg
xchg
fcompl
push
dec
add
aam
loope
pop
or
daa
jmp
lahf
pop
or
push
sub
ret
or
and
mov
insl
ds
je
mov
je
call
adc
and
sbb
sahf
xchg
test
sub
xor
mov
lea
js
or
sbbb
insl
jno
xor
fwait
outsl
cmc
sub
les
mov
dec
push
or
jge
ret
and
mov
lock
or
mov
movsb
out
cwtl
dec
adc
sarb
inc
mov
out
iret
jne
push
dec
cld
xor
mov
add
cmpsb
leave
add
xchg
movsl
shrb
js
aas
hlt
adc
xor
int
xor
push
mov
mov
cli
clc
add
xor
mov
sahf
aad
ja
adc
lea
cmp
inc
fs
push
mov
mov
cmc
out
scas
pop
enter
icebp
std
push
cmpsb
lds
cltd
outsl
xor
mov
xor
adc
adc
xchg
idiv
loopne
jo
scas
sub
movsb
loopne
enter
fstl
ficoms
xorl
adc
inc
idiv
shl
lods
aaa
frstor
sub
xor
movsl
or
andb
xchg
jle
xlat
sub
bound
das
sbb
imul
mov
xchg
daa
out
outsl
jno
subb
inc
ds
jge
adc
push
sahf
inc
sbb
xor
nop
rcll
add
outsl
push
sub
call
out
bound
test
add
cld
lds
out
lock
test
ret
pop
les
or
xchg
cmc
lahf
dec
push
add
cmp
aas
jne
mov
bound
les
push
xchg
fwait
xchg
movsb
movsl
in
loope
in
outsb
mov
sti
aad
push
xlat
sbb
pop
mov
push
int
clc
dec
pusha
jbe
pop
adc
cmp
mov
sbb
ljmp
mov
xrelease
inc
les
xchg
or
ja
aaa
cmpsb
pop
mov
and
sub
add
add
dec
out
ja
idiv
pop
out
dec
mulb
pop
call
add
xchg
add
dec
fstpl
int3
add
movsl
jb
push
sbb
in
inc
pushf
sarb
adc
jl
fbld
cmp
es
xchg
mov
add
lea
je
fisttpll
out
out
mov
adc
jg
mov
pop
aad
fmull
popf
das
loopne
loopne
push
xor
mov
xor
das
sahf
cs
inc
cmp
loop
jmp
aad
adc
std
mov
xlat
pushl
and
fisttpll
fcompl
adc
daa
iret
out
rorb
int
outsl
mov
or
sub
popa
xor
mov
out
js
sbb
in
jmp
aaa
cmp
stos
sti
ja
push
mov
cmp
and
jb
mov
adc
imull
mov
ds
cwtl
jne
dec
sbb
fstpt
stc
push
jnp
pop
push
push
push
mov
mov
lret
xor
jp
push
sbb
and
ja
push
mov
xlat
pop
dec
jle
lcall
jns
dec
bound
and
or
pop
cmp
sbb
mov
inc
int
cmpsl
mov
pusha
fs
lock
into
std
sti
fisttpll
pop
mov
iret
insb
mov
mov
outsl
cmp
data16
sub
andb
mov
ficomps
notl
fsubrs
lea
imul
dec
fnop
xchg
xor
pop
or
imul
lods
daa
negl
push
pop
mov
and
push
xor
subb
popa
fstps
push
inc
out
mov
pop
xlat
aad
insb
xchg
cmp
les
pop
sbb
cltd
inc
add
js
test
sbb
in
imul
adc
push
test
cld
pushf
icebp
pop
cmp
dec
hlt
pop
and
adc
test
adc
orb
ss
jb
fisttpl
mov
out
mov
xor
aaa
ja
js
sti
sub
push
stc
or
xchg
mov
push
jns
and
push
rcrl
add
and
inc
inc
lret
add
add
mov
cmp
push
into
and
add
mov
pop
jecxz
sti
mov
test
rorb
add
mov
sahf
add
insb
lds
sbb
adc
dec
push
arpl
shrb
xor
xlat
inc
mov
inc
fisubrl
xchg
das
xor
push
or
mov
loop
jle
jb
pop
sbb
mov
icebp
cmpl
sub
pop
les
fdivrs
inc
lds
or
test
adc
xor
xor
rcll
shrl
cltd
add
js
loope
gs
andb
js
in
jnp
leave
test
stos
loope
mov
fistl
mov
ds
jo
js
xlat
rol
mov
movsl
lods
in
in
push
mov
lea
jmp
cs
cli
inc
adc
out
sarl
mov
daa
xor
pop
out
scas
fwait
jmp
lret
cmp
xor
les
push
pop
inc
jns
mov
ds
jge
mov
shlb
stos
fmul
mov
mov
mov
test
jne
test
push
out
clc
jbe
js
inc
nop
jae
aad
and
lock
push
mov
cmc
xlat
lret
jbe
out
cmpsb
push
shl
mov
pop
jge
leave
cmp
lahf
adc
jg
into
mov
rorl
jne
pop
stc
dec
push
xor
push
fisubrl
jl
push
inc
scas
xchg
dec
mov
and
push
sub
cmp
xchg
rcr
out
add
movsb
or
or
ret
cld
pushf
xor
mov
sub
dec
cmpsb
cmp
test
sbb
sbb
push
push
pushl
jb
out
add
xchg
rolb
or
jbe
ret
and
mov
dec
mov
push
push
xchg
addr16
shrb
lea
arpl
scas
or
lods
stos
mov
sub
fbld
push
popa
xor
out
enter
rcr
jns
fildl
add
insb
pushl
cmp
dec
xor
ja
cmpb
and
xchg
loope
jg
cmp
jg
ja
xchg
loope
cmp
aaa
and
stos
pop
imul
pop
push
es
repz
imul
push
xor
daa
adc
pusha
rcrl
mov
mov
push
mov
call
inc
add
xchg
add
cwtl
adc
pop
jge
pushf
sbbl
sub
fwait
inc
dec
jns
cmp
dec
jae
sbb
scas
push
outsl
jno
mov
inc
sarl
jbe
es
pop
orb
inc
cmpsb
aaa
enter
dec
mov
lods
pop
leave
aas
sbb
insl
shr
cmc
dec
rorb
add
stos
bound
pop
add
out
jg
test
jle
sub
adcl
adc
adc
icebp
popa
data16
out
mov
push
fsub
xor
xchg
fists
mov
jge
repnz
aaa
inc
add
push
cmp
cs
int
dec
or
sbb
jne
pop
mov
call
insl
in
shlb
and
aam
aaa
jne
arpl
mov
inc
cmp
cmp
pusha
std
test
dec
sub
stos
out
jb
fstl
cmp
xor
sbb
inc
mov
pop
clc
sar
arpl
add
inc
add
or
repnz
pop
insb
jle
sub
and
mov
sbb
fisubs
and
testb
sub
pop
sub
ss
jae
lods
outsl
adc
mov
test
testl
fldt
and
sbb
sahf
sarl
repz
stc
push
add
adc
inc
movsb
out
and
sbb
sahf
mov
inc
cltd
insb
mov
lods
stc
and
xor
sbb
orb
hlt
ljmp
cmpsb
add
fdiv
jns
jnp
xchg
xor
mov
je
gs
jne
add
ljmp
add
arpl
hlt
outsb
sbb
xor
add
mov
dec
cmp
cmpps
inc
fsts
inc
rcrb
add
inc
out
test
out
inc
lahf
or
jnp
xlat
mov
call
adc
pop
push
or
test
lcall
in
addl
pop
mov
dec
outsb
outsl
cltd
cwtl
sbb
sbb
sbb
inc
ljmp
mov
mov
sub
pop
inc
out
out
mov
xchg
dec
shlb
mov
mov
ret
insl
mov
push
adc
aad
jmp
jno
dec
aaa
mov
hlt
adc
adc
mov
lcall
mov
adc
jp
push
jae
gs
add
stc
std
in
mov
mov
std
pop
xor
mov
pop
xor
xchg
add
xchg
add
aaa
mov
push
jge
and
out
out
pop
mov
insb
addb
sub
xor
sub
xor
mov
sbb
inc
sub
sub
adc
or
fwait
shlb
loope
jge
mov
outsl
add
xchg
rcrl
in
scas
mov
add
mov
outsl
sub
insl
cmc
add
movsb
jecxz
lcall
dec
int3
popa
in
push
inc
out
inc
jns
into
cmp
fimuls
mov
js
ficoms
or
push
xor
push
int3
imul
mov
aad
sti
pop
sbb
adc
int
stos
pop
dec
mov
push
data16
fidivl
xchg
lret
je
dec
adcl
daa
dec
out
push
ss
and
rol
jns
jecxz
fdiv
out
ds
in
shll
mov
fwait
repnz
pusha
cld
mov
add
inc
mov
ss
popa
ja
mov
xor
jne
sbbb
scas
add
cmc
and
pop
and
pop
add
lods
xor
xor
mov
jp
mov
stos
pop
add
dec
and
add
pusha
pushf
mov
sbb
orb
addr16
inc
movsb
fistps
cld
fsub
add
add
stc
mov
lret
jle
sub
clc
fisubrs
push
testl
je
dec
sub
stos
dec
testb
mov
fisttps
cltd
or
xchg
pop
or
mov
mov
mov
and
leave
push
filds
scas
fstpt
mov
xchg
cltd
ret
xor
rcr
aaa
pop
aam
ret
jbe
cmp
mov
imul
jp
fucom
fbld
cmp
inc
or
mov
cmp
or
lods
shrb
adc
sbb
lea
sub
jns
sub
fidivrs
arpl
sbb
push
cmpsl
pop
cli
push
popf
test
nop
inc
in
pop
fst
into
rcrl
xchg
pop
cmpsl
dec
mov
in
pop
loop
pop
fmuls
add
or
jae
cwtl
and
in
ret
jmp
cmp
adc
negl
sahf
mov
loop
sub
push
add
push
jb
adc
mov
popf
lock
mov
mov
add
rolb
out
sub
cmovp
cmp
xchg
add
xchg
add
push
jne
cmc
mov
int
push
add
jp
dec
jb
cmp
jmp
fldcw
pushf
add
lods
sbb
js
mov
scas
push
hlt
lret
imul
cwtl
out
xchg
scas
iret
sub
loope
xchg
in
jmp
test
xlat
movsl
ja
xchg
arpl
mov
dec
enter
insl
pop
and
lea
and
xchg
pop
repz
jae
loop
aad
sub
outsb
sti
sub
cld
xchg
mov
popf
jne
sbb
inc
jle
or
popf
mov
mov
add
push
jmp
lret
sbb
xchg
sub
or
xor
adc
repnz
jecxz
out
icebp
movsl
popf
les
or
cmpl
xor
pushf
xchg
cmpsb
lods
dec
dec
pop
setno
push
cmp
enter
daa
pop
jg
addr16
insb
daa
sub
push
and
mov
mov
xchg
in
test
loope
xor
sbb
pop
xchg
mov
pop
das
repz
sub
lret
jo
std
jne
scas
sti
sbb
mov
cmpb
and
and
sti
push
push
sbb
into
sbb
cmp
fwait
pushf
pop
fwait
xor
inc
jp
pop
cmp
ficoml
jle
mov
ds
or
mov
sub
push
out
jnp
addr16
jmp
std
jmp
push
and
push
xor
std
cwtl
sbb
or
adc
mov
incl
out
xor
xor
inc
in
test
cmpsb
insl
cmpsb
ss
test
add
mov
push
xchg
std
lock
adc
xchg
push
pusha
fstpl
jmp
js
jp
cs
xchg
aam
mov
mov
and
fcoms
insl
mov
movsb
and
and
lds
mov
mulb
or
inc
andl
stc
addl
push
enter
incl
pop
mov
mov
mov
cs
jnp
mov
push
fwait
bound
mov
xor
mov
and
adc
cmp
mov
out
inc
cmpsl
js
scas
jg
aam
push
fwait
jecxz
lcall
and
jmp
push
cmc
jb
add
inc
aaa
adc
out
shrb
popa
data16
rcrl
xor
inc
cwtl
in
notb
add
or
ds
test
lret
pop
xor
lods
add
lret
dec
jnp
add
bound
mov
imul
push
dec
ret
cltd
xchg
setg
loopne
push
roll
inc
mov
dec
cmpb
outsb
sub
add
jne
inc
and
push
adc
adc
es
or
iret
nop
xor
popf
pop
ror
or
jnp
hlt
aam
les
mov
adc
add
sub
repz
lcall
insb
inc
and
mov
push
out
aaa
jbe
lret
push
push
pop
imul
push
cwtl
pop
fninit
adc
mov
outsb
call
inc
inc
in
nop
mov
cltd
adcb
data16
sub
jno
sub
push
jmp
jns
jge
testl
clc
push
xor
and
test
mov
mov
and
and
lods
xor
js
jmp
stos
and
mov
fidivl
cmp
cltd
mov
andb
dec
inc
mov
push
inc
scas
push
arpl
out
sbb
mov
cmpsl
and
dec
mov
aas
and
jo
loopne
xchg
or
sbb
push
popa
cmp
xlat
shrl
cwtl
mov
mov
add
out
popf
ret
faddp
jecxz
and
sahf
ds
insl
or
inc
adc
push
jo
mov
adc
out
popa
fidivl
enter
inc
and
shlb
or
out
stc
in
repz
mov
in
jbe
cld
and
mov
jne
ds
loopne
ret
addb
adc
loop
cwtl
xor
mov
mov
les
xor
scas
orl
aad
push
lods
pusha
push
iret
leave
rcrb
out
and
divl
mov
or
and
sti
test
mov
xor
push
push
pop
mov
aad
xchg
jl
ds
or
lds
adc
in
mov
push
insl
pop
dec
sub
or
es
fcmove
sahf
sub
int
loop
pop
fildl
sbb
in
mov
pop
das
into
shlb
add
cmp
cli
in
jg
loopne
fbstp
jl
add
xchg
add
push
es
inc
out
inc
sarl
sub
mov
jae
pop
pop
data16
test
adc
lcall
bound
push
repnz
out
les
add
xor
test
imul
jnp,pt
sbb
mov
or
dec
cs
lcall
dec
xchg
daa
push
out
fdivrs
ret
es
cmpsl
jmp
ret
setle
adc
cli
fcmovnu
mov
scas
push
ret
cwtl
insb
sub
out
test
fbstp
movsl
lea
xchg
adc
adc
outsl
loope
adc
enter
pop
fs
loope
enter
call
xchg
jne
mov
pusha
xchg
in
lcall
hlt
mov
lret
scas
mov
sub
mov
push
adc
dec
in
inc
frstor
pop
push
les
out
xor
mov
pop
or
dec
cmp
cs
jl
es
dec
dec
test
mull
sbb
mov
mov
inc
ret
xlat
aas
in
mov
ror
dec
inc
sbb
add
mov
cmpsb
sub
jge
push
pushf
and
out
repnz
bound
sbb
nop
leave
push
shlb
int
jns
jp
dec
lea
icebp
mov
jp
cli
xor
push
adc
pop
aad
xor
movsl
daa
inc
lea
fwait
sbb
push
pusha
leave
or
push
pop
push
inc
shlb
dec
scas
mov
add
aam
in
mov
mov
pop
lods
jg
dec
pop
fldl2t
jbe
inc
testb
push
inc
push
loopne
ljmp
push
leave
in
mov
add
inc
xor
inc
ja
das
clc
lock
add
or
addl
lcall
jbe
les
aas
ljmp
inc
int3
psraw
adc
loopne
xor
aam
dec
fidivl
aad
pop
nop
cltd
out
dec
fildll
and
or
jge,pn
sub
not
mov
into
adcl
data16
pop
xchg
loop
mov
addr16
jmp
outsl
jno
popa
mov
pushf
adc
outsb
push
pusha
out
ja
add
shlb
xchg
lcall
cmpsb
and
pushf
add
xchg
add
xchg
dec
sbb
les
cmp
pop
push
dec
xchg
dec
out
clc
addl
nop
add
fisttpl
mov
sbb
pop
dec
lcall
cmc
loope
daa
das
cmc
xchg
xchg
je
and
arpl
setp
mov
pop
lcall
jb
xor
jmp
jbe
pop
mov
ljmp
xor
push
mov
add
popf
mov
out
loope
mov
aad
andl
mov
mov
cmp
das
lods
lods
mov
sti
cli
lahf
pop
inc
int3
add
cmp
test
and
push
xlat
mov
popf
dec
mov
dec
ds
mulb
push
push
loope
imul
out
cmpsb
fldt
jmp
mov
movsl
lea
mov
push
clc
mov
push
arpl
loope
cmpb
jo
jno
mov
add
pop
inc
fadds
stc
or
in
jne
push
sbb
jns
mov
out
stos
dec
or
pop
jbe
out
adc
test
les
mov
dec
in
loopne
aam
rorl
lcall
ss
push
jge
jae
icebp
scas
fildll
mov
mov
lret
sub
pop
inc
dec
pushf
lea
ror
cs
push
shlb
orb
jnp
mov
inc
cmp
xchg
push
arpl
dec
lods
adc
sbb
shrl
adc
sbb
mov
jle
adc
gs
dec
negb
adc
mov
clc
out
or
adc
jae
xchg
repz
pop
imul
iret
mov
jae
ja
daa
fcoml
aad
cs
mov
shlb
outsb
aas
ret
arpl
pop
push
jnp
lock
pop
xchg
repnz
rcrl
add
mov
dec
repz
rorb
pop
cmp
out
loop
mov
stos
sbb
add
or
mov
mov
aaa
jl
adc
pop
int
notb
stc
mov
into
lcall
sub
adc
je
cwtl
sbb
mov
sub
shll
pop
or
pop
push
jp
add
cmp
mov
add
cwtl
sub
sahf
add
xchg
add
xchg
adc
xlat
jmp
inc
mov
mov
pinsrw
lea
test
jl
out
inc
mov
aas
adc
cmp
pop
inc
sbb
push
cmp
mov
pop
dec
test
in
mov
or
icebp
fsts
adc
insl
out
scas
mov
stos
mov
fiadds
shrl
in
sub
mov
adc
js
pusha
call
cmc
mov
js
call
dec
xor
jle
cwtl
adc
adc
pop
mov
ja
adc
and
dec
sbb
pushf
sbb
stc
push
and
xchg
mov
psrlq
sub
jecxz
sbbb
adcb
in
push
pop
xchg
aas
icebp
std
push
mov
push
out
mov
mov
push
jge
ds
cmpsl
test
inc
jae
out
dec
int
pop
push
sub
jecxz
cwtl
adc
mov
lea
jl
pop
scas
mul
ret
xchg
insb
sbb
xlat
or
cmp
and
push
call
xchg
cmp
dec
and
ficoms
jbe
loop
cmpl
sbb
mov
fisubrl
mov
cwtl
jge
jns
xor
pop
mov
inc
add
idivl
add
js
mov
cmp
add
stc
xor
cmp
add
out
hlt
imul
pop
mov
mov
neg
hlt
rorb
sub
jmp
lods
shrb
pushf
dec
andb
lret
jbe
or
add
push
push
cmp
pop
pushf
dec
loop
cmp
mov
cmpsl
xor
cmp
mov
dec
jae
push
inc
hlt
mov
ljmp
cmp
inc
popl
shll
test
sbb
push
cmp
outsb
lcall
add
sbb
sub
gs
push
enter
or
add
aad
mov
push
add
int3
or
mov
or
cmp
lods
jg
and
movsb
mov
add
mov
mov
leave
into
cmpsl
push
shrl
cwtl
call
in
mov
int3
jno
das
sti
sbb
dec
inc
vmulps
jns
cltd
xor
mov
std
mov
je
aad
xor
add
inc
mov
and
push
mov
add
jp
pop
inc
clc
fs
ljmp
outsb
and
jb
cli
sub
lods
adc
in
loop
xor
mov
in
push
les
sub
cli
xchg
in
add
sahf
jno
sbb
or
repz
shrb
inc
das
push
pop
andb
xchg
je
jne
bound
add
and
jno
andl
cwtl
and
int
mov
mov
jno
fadds
xor
dec
xchg
fcomip
in
ficomps
dec
cmp
fmull
out
int
outsb
jl
lahf
mov
pop
push
push
loop
pop
leave
mov
out
test
or
addr16
xlat
push
popf
loop
sahf
sub
lret
fstpt
lahf
out
sbb
xlat
xlat
fisubrl
fisubrl
popa
lock
mov
dec
adc
fiadds
push
jno
imul
fidivl
repnz
fldcw
cmp
cmp
sbb
aam
xor
lds
cwtl
pop
jno
push
insb
aad
repnz
push
movsl
adc
jns
lds
or
lcall
out
in
adc
enter
enter
testl
incl
loop
hlt
dec
sub
mov
inc
jno
aas
sti
or
ret
dec
xchg
call
mov
out
dec
xchg
and
dec
cmovb
lea
ficomps
sbb
iret
mov
into
sbb
data16
lcall
mov
mov
mov
movsb
stos
test
movsb
loop
dec
mov
mov
punpckhwd
jmp
mov
mov
fs
mov
jl
sub
mov
xchg
push
test
fsts
mov
adc
xchg
jns
stc
movsl
out
inc
lock
stos
lds
adc
pop
mov
lods
outsb
mov
pop
mov
in
mov
pop
addr16
inc
xlat
mov
pop
andl
mov
sarl
push
pop
push
mov
push
insb
cs
sbb
add
adc
ret
out
xor
inc
xchg
push
loopne
in
fnstenv
int
jge
dec
stos
lods
js
xchg
loop
loope
mov
es
push
pop
pop
orb
lret
pop
xchg
mov
fidivrs
cltd
movsl
add
add
mov
cmp
jle
xor
in
loop
xchg
mov
add
sbb
popl
pop
or
daa
insb
dec
movsl
popa
fstp
ljmp
out
cmc
dec
insb
adc
test
test
mov
dec
xchg
fcompl
push
or
inc
mov
cmpsb
mov
dec
lret
lds
daa
fistpll
add
mov
pop
sbb
jmp
mov
aaa
fcmovbe
jne
xchg
inc
pop
test
mov
sbb
test
repz
cmpsl
es
mov
pop
cmpsb
ja
jl
mov
xchg
and
movsb
ret
aas
xchg
push
test
push
xor
fstpl
mov
jno
jg
pop
dec
push
push
out
incl
insb
lods
out
jns
xchg
je
adc
push
cltd
add
mov
mov
insb
pop
hlt
jp
insb
lods
cs
int3
sbb
or
cmp
jp
jg
rorb
jp
dec
mov
xchg
add
fisttps
ficomps
stos
mov
dec
jns
incl
cmp
sbbb
test
aam
jp
pop
inc
nop
outsb
lock
enter
fiaddl
in
jae
push
and
sbb
and
fldenv
jo
xchg
xor
xchg
jmp
cli
mov
or
sub
add
nop
int3
xlat
popa
xor
push
out
bound
icebp
lea
inc
lods
stos
imull
lret
adc
rol
mov
int
fists
adc
in
adc
adc
out
cmpsb
xchg
xchg
inc
lcall
dec
adc
mov
jns
xchg
sbb
dec
scas
jnp
cmpb
test
and
mov
dec
gs
mov
mov
or
mov
es
cwtl
mov
shrb
jb
cmp
fdivrs
les
addb
pop
mov
loope
fsub
lahf
out
or
jg
lret
pop
pop
mov
adc
mov
es
lock
dec
pop
lahf
lret
out
cmpb
push
sub
mov
xchg
test
jl
mov
sbb
mov
push
fisttps
dec
pop
sbb
dec
mov
lahf
fs
outsl
popa
sarl
scas
call
xor
lods
neg
shl
mov
add
out
sbb
cli
pop
stos
xchg
ret
add
mov
mov
stc
movb
cmp
out
idivl
mov
adc
cmpsb
add
xchg
add
xor
push
or
loopne
jg
gs
addr16
inc
cld
dec
inc
push
cmpsb
out
mov
mov
pop
pop
inc
jge
and
xor
test
adc
add
in
xchg
add
mov
mov
mov
sbb
push
pop
les
push
inc
cltd
rcr
and
or
dec
stc
jp
lret
mov
mov
fistpll
jbe
sbb
mov
sub
jo
rcll
scas
aas
scas
inc
cmp
cmp
sbb
lret
mov
mov
stc
jbe
xor
loop
xor
adc
push
mov
subb
gs
lahf
iret
cmc
addr16
adc
pop
or
ret
xchg
fadds
rcrb
ss
rcr
jg
push
jecxz
jns
xor
es
cmp
andb
push
pop
adc
fisubrs
cwtl
push
pop
pop
or
shll
sub
add
pop
sarb
push
test
cmp
and
out
nop
sti
out
ja
sbb
fadds
sub
and
or
cmp
cmpb
cli
dec
xchg
repnz
adc
xchg
imul
insb
sub
scas
into
jae
adc
pop
xor
sbb
repz
out
xor
mov
push
mov
mov
push
pop
ud0
addb
mov
pop
in
xchg
repz
dec
xor
pop
mov
inc
loop
loope
cmp
push
in
repnz
sar
rolb
jl
rcrb
iret
mov
mov
fs
aas
sbb
inc
lods
pop
fiadds
add
fisubrs
push
imul
inc
dec
es
rorl
add
pushf
add
test
ljmp
inc
stos
movsb
xor
jmp
sti
inc
outsb
or
fcmovb
add
scas
mov
sub
jo
cltd
aas
sbb
ss
faddl
push
sahf
fs
rcll
dec
ret
mov
or
and
xlat
rclb
pop
dec
lret
fs
pusha
dec
xchg
popf
insl
xor
jb
cmp
repz
les
pusha
loop
xor
insb
cmp
call
pop
xor
insl
push
pop
jns
mov
add
mov
mov
in
and
gs
or
add
sbb
fsin
out
gs
imulb
test
add
std
or
xchg
lock
add
and
sbb
sbbl
adc
fidivrl
enter
sub
jae
insl
data16
sbb
cmp
xor
inc
ret
data16
sub
mov
pop
ljmp
cmpsb
in
lret
and
adc
sbb
cld
xchg
cmp
outsb
jmp
shlb
in
fcomp
xor
dec
rol
in
ficoml
xlat
sub
enter
add
shl
mov
ljmp
out
or
daa
pop
ja
sbb
jecxz
adc
lcall
xlat
enter
xor
leave
jp
xchg
push
xor
adc
jp
cltd
mov
or
lods
dec
addr16
out
out
lock
or
shrd
mov
rcrb
add
inc
adc
push
and
mov
sub
popf
pop
xor
enter
xchg
rorl
iret
fldcw
sub
in
jp
and
sahf
test
sub
xchg
mov
cwtl
jl
outsb
xor
inc
inc
jbe
mov
jnp
mov
outsl
test
and
pop
sbb
xchg
cmpb
in
dec
fdivrs
lods
mov
rol
rcrl
popf
ss
cmp
test
adc
cli
popa
adc
add
aaa
stos
insb
jno
cmp
bound
mov
outsb
lods
and
cmp
xchg
in
jecxz
mov
mov
mov
ljmp
pop
in
sahf
pop
inc
inc
rclb
arpl
adc
sub
loop
xchg
ret
jbe
mov
add
mov
movsb
cltd
lds
mov
xor
xor
sbb
sub
scas
pop
or
outsl
lcall
mov
push
fidivl
mov
dec
int
mov
je
mov
and
sub
push
mov
mov
mov
and
add
mov
ret
movsb
and
lcall
push
adc
xchg
jbe
mov
xchg
add
repnz
push
mov
aam
ret
loopne
cli
out
int3
pop
sub
sbb
mov
mov
cmp
mov
divl
add
adc
arpl
sti
adc
sub
shrb
add
add
cld
movsb
fdivs
mov
mov
pop
das
inc
je
pop
sti
fldcw
jge
xor
scas
int
pop
sbb
sbb
adc
stos
push
loop
ja
xor
pusha
jp
movsb
repnz
or
sub
dec
push
in
insl
loope
shrb
outsb
push
outsl
and
popf
adc
lret
xchg
dec
cli
stc
rorl
sub
arpl
mov
test
lods
std
mov
in
or
pusha
into
sbb
adc
fsubrl
mov
fdivl
sbbb
xor
mov
loopne
fst
dec
inc
into
cmp
xchg
pop
mov
sub
dec
sahf
adc
jne
popf
outsb
and
or
test
sub
popf
test
sub
flds
ja
addr16
sub
xchg
adc
les
mov
inc
je
jmp
mov
jge
sub
cli
aas
inc
jmp
dec
cmpsb
cmpsl
sub
mov
inc
inc
mov
push
insl
dec
nop
adc
jb
dec
sbb
jbe
or
into
lods
lretw
mov
das
pushf
leave
stos
movsb
sti
bnd
xchg
test
inc
sbb
cltd
or
es
cmpl
push
jne
out
test
jno
inc
jecxz
ret
dec
mov
in
iret
mov
sbb
stos
test
ss
jno
or
mov
fsubs
or
xchg
xor
fmul
outsl
pop
lcall
adc
int3
lret
popf
adc
mov
sub
add
int3
dec
sbb
or
push
in
call
out
bound
fldt
or
xchg
ret
dec
popa
cmp
imul
or
and
dec
adc
mov
pop
bound
sub
xor
dec
adc
dec
sub
xor
dec
stos
ja
push
sti
lret
and
add
out
jne
push
xor
test
lfs
mov
rcrl
mov
pop
dec
mov
ror
cmpsb
fistl
ret
movl
aas
ret
js
sbb
sbb
sarl
xor
sub
scas
sub
imul
pop
lret
sarl
ja
addr16
insl
mov
jbe
mov
loopne
sbbl
and
xor
pop
ret
lods
add
xchg
add
incl
or
mov
pop
lea
pop
mov
and
xlat
out
dec
sti
sarl
xor
das
les
push
dec
pop
pop
push
cmp
je
ss
fildl
pop
mov
cmpsb
sbb
ret
sub
and
sbb
xchg
xchg
fs
xchg
fld
mov
cmp
dec
loope
cs
scas
iret
xor
xchg
dec
mov
or
mov
arpl
lds
or
or
mov
dec
std
sti
xlat
sbb
cld
mov
jnp
mov
cltd
jle
mov
sbbl
mov
daa
sub
or
or
jbe
jge
outsb
xor
xchg
add
pop
pop
pop
jnp
insb
test
lea
test
sahf
jge
movsl
adc
test
inc
sbb
pop
jns
adc
std
and
nop
sbb
mov
adc
sub
fcmovnb
inc
into
mov
ret
orl
pop
pop
pop
dec
or
mov
testl
aas
and
lcall
push
stos
repz
pop
pop
xor
shr
inc
loope
xor
jbe
xor
lea
mov
outsl
adcl
inc
into
push
dec
int
sub
jno
shrb
xchg
arpl
mov
scas
pop
xorl
fisubrl
xor
mov
jecxz
push
push
xchg
fildl
adc
int
inc
nop
mov
sub
fisttpll
roll
jge
out
xor
mov
mov
xor
xlat
adc
sbb
mov
xchg
hlt
sbb
imul
adc
aad
jae
ja
xor
cltd
cld
inc
shlb
shll
out
adc
dec
inc
pop
inc
iret
sbb
sahf
push
or
sub
sbb
jmp
rcll
aas
bound
adc
jmp
fistpll
inc
cmp
cld
jmp
cmp
pop
cld
xchg
xorb
cmp
loopne
lods
mov
mov
jg
lock
pop
ja
add
jmp
sti
dec
movsb
pop
ja
mov
pop
add
lcall
fdivrl
out
jb
aad
pop
cmp
push
lcall
mov
jg
popa
hlt
mov
test
xchg
add
sub
inc
xor
scas
out
sub
icebp
mov
ret
mov
lcall
imul
es
pop
push
fcmovb
cmp
paddw
punpckldq
pop
inc
add
nop
call
jb
sahf
inc
arpl
call
fidivl
dec
dec
stc
mov
and
jl
mov
enter
adc
jne
in
sub
idivl
or
cmp
in
ficompl
cmp
lcall
sarl
adc
xlat
inc
adc
mov
push
or
andl
mov
push
pop
das
lea
icebp
fbstp
cld
or
fmuls
stos
pop
push
lods
hlt
loope
push
in
jl
imul
dec
outsb
insb
mov
arpl
xchg
xor
dec
test
jp
sub
mov
xor
pop
sbb
enter
cmp
inc
jp
popf
sbb
test
mov
pusha
lock
or
cmp
inc
dec
lahf
or
inc
adc
mov
jg
inc
sbb
push
or
dec
iret
cltd
fidivrl
scas
sarb
push
movsl
leave
ret
jnp
clc
lret
xor
scas
imul
test
out
leave
imul
sub
push
sahf
cwtl
stc
lcall
sbbl
pop
imul
fdivs
addr16
inc
mov
cmp
mov
fs
mov
fnstsw
pop
popa
jg
lcall
inc
mov
es
repnz
xchg
pop
mov
rcl
mov
iret
inc
out
cmp
add
test
jle
xchg
fwait
xchg
push
xor
mov
xor
std
outsb
test
les
inc
jb
insl
add
mov
int3
test
mov
iret
and
add
jg
jl
mov
mov
jl
js
subl
enter
adc
rcll
fidivl
nop
cmp
inc
loop
mov
and
jecxz
repnz
ret
adc
sbb
loopne
rcrl
add
in
jle
add
aas
sbb
cmp
aaa
test
jp
shr
xchg
pop
gs
pop
cmp
adc
sub
mov
rolb
add
pusha
jbe
out
fnstsw
xor
add
xchg
add
mov
sub
mov
jp
xchg
test
sub
inc
andb
pop
xchg
pop
inc
cmp
scas
cmpsb
pop
cmc
loopne
out
xchg
or
movsb
mov
dec
loope
mov
fisubl
or
out
jmp
bound
ds
mov
and
fisubl
aas
jnp
mov
les
testb
cs
aaa
or
clc
lds
cld
lret
jg
xchg
cltd
cmp
inc
das
cmpsl
or
and
inc
lcall
xchg
or
sub
xchg
jp
cmp
push
loope
and
add
sub
pop
loop
cmc
adc
push
push
jnp
mov
roll
fidivl
pop
inc
or
xor
mov
push
pop
mov
sub
xlat
ficompl
lds
push
daa
sub
jg
jb
mov
or
cmp
mov
std
popa
jp
hlt
xchg
push
into
test
sbb
sub
sbb
or
decl
fildll
sahf
fsubr
push
shrb
and
jl
sub
xchg
jle
fbld
xchg
push
xor
add
stos
add
test
out
jmp
jp
jmp
dec
je
pop
sti
les
andb
sbb
mov
adc
stc
test
sbb
or
xorb
insb
add
and
repnz
add
dec
jp
insl
test
xorb
les
mov
js
movlps
movsb
and
in
clc
push
and
dec
movsl
aaa
and
mov
addl
jge
dec
mov
pslld
sbb
insl
mov
jb
divl
dec
push
rorl
loopne
aad
push
jecxz
mov
mov
dec
push
push
mov
lds
data16
jle
insl
shl
loop
jnp
jbe
inc
push
xchg
add
push
psraw
mov
dec
xor
push
jne
push
xchg
in
fcompp
icebp
leave
jnp
andb
js
pop
mov
pop
pop
sbb
pop
pop
pshufw
fsubr
or
mov
fnstcw
hlt
sub
mov
test
add
pop
lcall
inc
adc
mov
add
xchg
add
popa
test
cmp
nop
lods
adc
jne
jp
push
jns
leave
das
lods
dec
into
mov
push
ret
xchg
lods
xor
fildl
nop
sti
dec
or
idivb
jg
fld1
test
add
popa
push
sbbb
idivb
cs
insb
in
stc
mov
dec
sbb
inc
rcll
xchg
ret
in
mov
ret
xchg
lret
add
cli
and
hlt
pop
sahf
fsubr
mov
es
sbb
lods
fwait
stc
mov
repz
add
mov
xchg
cs
arpl
cmp
les
dec
xchg
inc
push
data16
xor
cli
and
adc
xchg
pop
das
es
lret
push
movsl
cmc
add
dec
mov
xchg
cli
push
sbb
xor
push
fildll
icebp
rcrl
negl
and
insb
lods
lods
stos
pop
bound
dec
mov
cmp
inc
nop
movsb
add
clc
cld
and
ficoml
cmp
push
mov
xor
fdivrs
nop
adc
or
stos
mov
push
inc
mov
xor
dec
sahf
pop
insl
stos
addr16
mov
inc
ret
nop
xchg
rcrl
adc
mov
ds
test
jle
imul
imul
mov
sahf
imul
adc
movsl
inc
insb
mov
das
popf
cmp
xor
add
add
pushf
push
and
inc
pop
rorl
lods
pop
mov
rorl
imul
push
dec
xchg
inc
sub
dec
xor
jp
jl
pop
aaa
call
loop
push
xor
outsl
cmp
lea
ret
xchg
fdivrl
jnp
xchg
loopne,pt
xor
jmp
dec
jno
inc
xor
sbb
cli
xcrypt-cfb
cmpsl
and
xchg
in
sti
jb
and
mov
jle
into
sub
shrb
rclb
lcall
mov
inc
imul
mov
mov
test
fucomp
adc
insl
jns
stos
divl
stos
leave
sub
add
enter
nop
mov
mov
sbb
es
mov
fwait
int
lds
mov
loop
add
outsl
push
inc
mov
mov
ds
jmp
pop
xor
add
outsl
daa
insl
push
push
stos
adc
cmpsb
add
mov
add
pop
push
lods
jo
shlb
jbe
lcall
je
aam
xor
jmp
popf
jae
mov
push
into
lds
inc
popf
mov
xor
jg
test
je
test
cmp
xchg
sub
movsl
shlb
jle
mov
int3
int3
les
int
pop
mov
or
xchg
rcll
jge
lds
hlt
add
test
int
sti
cmp
mov
flds
dec
popa
shr
in
mov
out
mov
mov
mov
roll
adc
xor
adc
cmc
ret
cmp
dec
mov
jns
pop
mov
inc
sub
popf
cld
fcomp
pop
pop
rcrb
cmp
dec
sbb
enter
rcll
cmp
push
mov
stos
xchg
cmp
scas
inc
sbb
mov
dec
fmull
inc
mov
mov
pop
ret
fiadds
sub
andb
mov
push
movl
cwtl
cltd
push
mov
push
mov
scas
cmp
mov
scas
jb
fwait
cmp
aas
xchg
dec
mov
neg
mov
push
mov
pop
or
ds
out
push
in
iret
mov
iret
xor
sbb
jg
movswl
xor
mov
xchg
scas
sub
and
dec
pop
mov
out
inc
sbbl
cli
fidivs
inc
into
push
in
and
rcrl
lret
cmp
pop
shlb
mov
in
adc
es
insl
rorl
inc
inc
scas
sub
pop
push
nop
adc
xor
mov
jo
push
push
jecxz
xchg
mov
mov
dec
in
mov
mov
xlat
push
inc
incb
sub
push
pushf
out
ret
inc
xchg
xchg
popf
dec
jecxz
cmc
and
lretw
push
jne
pop
ja
and
ljmp
lods
fstpl
stc
daa
dec
or
jl
adc
sub
inc
mov
sbb
xchg
idivb
in
lcall
and
bound
hlt
pop
xor
pusha
fwait
jns
push
push
pushl
andl
idivb
adc
sbb
shl
adc
xchg
xor
cmpsb
shll
xchg
adcl
stc
or
sahf
push
aas
inc
add
inc
lea
and
mov
out
add
or
add
into
mov
sub
xor
mov
jge
lret
rcll
sbb
add
or
add
sbb
pop
push
icebp
cwtl
test
or
decl
rol
mov
cltd
clc
addr16
xor
fsubrp
cmpsb
inc
mov
in
sub
xlat
mov
sarb
fildl
push
aaa
imul
mov
dec
outsb
and
scas
mov
loop
ljmp
jae
testl
fsubl
stc
mov
andl
cmp
cmp
pop
push
lahf
push
nop
into
test
mov
test
mov
dec
imul
std
arpl
pusha
movl
lea
data16
xchg
sub
pusha
mov
dec
xchg
jnp
xchg
push
sbb
out
in
dec
aaa
lahf
ffree
sbb
insb
xchg
adc
mov
jl
cwtl
mov
mov
cmpsl
xlat
inc
ss
je
or
in
lahf
ljmp
arpl
push
pop
cmp
movsb
push
mov
pop
daa
pop
mov
lahf
mov
repz
cmp
dec
jmp
ja
push
push
cmc
pop
jne
mov
outsl
push
add
push
mov
xlat
cli
adc
dec
aad
cmp
std
mov
sub
idiv
popa
ja
or
lret
dec
dec
fsubp
cmp
repnz
push
jp
jmp
pop
ss
lock
xlat
notl
jne
addr16
daa
xor
stc
loopne
fidivl
xor
and
inc
dec
inc
xor
xchg
addb
push
movsl
mov
mov
aaa
and
pop
or
jno
cltd
xchg
mov
shl
xchg
and
adc
lahf
stos
add
aam
mov
xchg
leave
mov
cmpsl
xor
jbe
pop
adc
loopne
mov
stc
mov
pop
jg
dec
or
imul
push
mov
mov
sub
daa
or
push
or
xor
mov
lahf
data16
mov
dec
es
ja
std
pop
sub
nopl
sbb
dec
pop
shr
jo
inc
pop
iret
fnstcw
adc
pop
rorb
aas
pop
inc
lods
sahf
fcoms
lret
push
lds
add
cmp
mov
mov
dec
or
mov
add
popa
inc
dec
jmp
mov
or
mov
notl
sbb
cmpsb
loope
dec
sbb
push
aaa
repz
xor
rorb
push
int3
insb
mov
mov
ja
mov
cmpsl
add
iret
stos
sbb
or
push
je
out
xor
push
push
outsl
imul
data16
scas
push
ds
int3
cmp
adc
scas
std
xor
pop
push
push
push
sarb
and
lcall
les
out
arpl
xor
mov
sbb
std
fldcw
adc
decl
sub
push
push
cmp
dec
in
repnz
mov
push
push
xchg
mov
inc
sub
push
adc
and
clc
call
iret
sub
popf
or
scas
mov
movsb
mov
xchg
xchg
fcmovnu
xor
xor
dec
lret
sub
int3
scas
push
dec
jmp
or
test
pop
in
inc
aas
in
mov
rorl
dec
lods
fsubrs
pop
scas
add
aam
inc
pop
xor
sbb
fs
fdivs
mov
je
push
loopne
cmp
addl
popf
xor
orb
daa
test
pushf
xchg
lds
dec
call
and
cli
mov
xchg
ret
pop
movsb
dec
ffreep
add
aad
sbb
lods
and
cmpsb
push
mov
aaa
cmpsl
stos
out
mul
outsb
cmp
sbb
test
xchg
fwait
mov
push
dec
pop
dec
rcrl
sub
add
jp
mov
dec
mov
cmp
ljmp
addb
test
iret
xchg
dec
rorb
ret
movsb
cmp
nop
cmp
mov
mov
mov
push
cs
roll
lds
jge
mov
ret
adc
adc
ds
push
rcrb
les
sbb
enter
pop
sahf
int
out
or
mov
sub
and
popf
xor
jmp
mov
inc
and
push
addl
pop
ja
lds
pop
fs
out
xchg
shl
cmp
sti
sbb
je
mov
int3
mov
push
ds
outsb
sbb
mov
imul
push
enter
jo
stos
mov
repnz
in
sub
insl
jp
enter
test
xchg
jbe
cs
pushf
je
fs
mov
cmc
shl
sbb
in
mov
lahf
inc
pop
ret
adc
jns
aam
jmp
imul
sub
stos
mov
inc
loop
push
jp
aas
sub
jmp
mov
aaa
dec
xchg
fldt
xchg
xor
nop
lret
mov
adc
xor
xor
out
fs
andl
in
push
jbe
sub
sub
push
or
add
gs
ficomps
data16
leave
out
mov
hlt
mov
sbb
inc
cs
xchg
rclb
imul
daa
and
leave
mov
cmp
mov
sbb
fists
adc
ret
mov
sbb
dec
fdivrl
sub
hlt
mov
xor
lahf
lods
adc
pusha
and
pop
std
insb
int
pop
out
lods
jg
das
lahf
ret
arpl
sbb
jecxz
enter
jnp
movsb
jp
push
loop
lea
loope
jp
je
mov
sub
adc
or
mov
mov
jo
adc
xchg
mov
push
add
adc
in
jae
or
ds
movsb
movsb
ret
xor
xor
inc
inc
int3
ret
mov
imul
xchg
andb
ret
push
aaa
or
pop
dec
fwait
imul
scas
and
mov
pop
or
or
aam
sarl
push
loopne
xorps
inc
stc
roll
data16
daa
xorl
aas
ss
dec
sets
cmpsb
aas
inc
lds
and
mov
jo
js
jae
mov
cs
cmp
lods
or
pop
cmp
mov
push
pop
sub
stc
sbb
notl
dec
ss
idivl
cmp
push
mov
add
dec
pop
xor
gs
enter
add
mov
sub
and
and
pop
mov
cltd
xchg
mull
jp
xchg
testl
cmp
sbb
in
mov
jmp
je
je
mov
xor
and
mov
roll
xchg
add
je
xchg
cmpsl
xchg
cltd
cmpl
nop
xor
pop
aas
jo
test
je
cmp
lcall
mov
ret
pop
sbb
or
sub
jmp
jp
jge
jns
or
cs
test
jno
xchg
divl
fxch
xor
negb
add
adc
inc
aaa
cmp
pop
lock
sar
inc
cmp
add
xor
jle
pop
dec
out
add
movsl
or
mov
add
call
insb
mov
fwait
nop
mov
cmp
inc
mov
sbb
sahf
lods
out
rcl
in
adc
add
mov
jmp
pop
jnp
push
jge
pop
insl
icebp
push
push
insl
jae
aam
sbb
push
dec
xor
jle
iret
gs
jg
sub
mov
scas
lahf
push
inc
fdiv
imul
mov
stos
sti
jo
mov
mov
popa
leave
xchg
dec
test
outsl
fsubrs
loop
sbb
xchg
lea
and
xchg
inc
insb
in
in
xchg
rcrb
dec
cwtl
push
xor
cmpsl
push
fdivrl
lods
xor
out
fmuls
dec
jle
push
pop
mov
inc
or
xchg
xor
mov
enter
cs
hlt
dec
arpl
mov
scas
mov
xchg
cmp
aam
adc
sbb
das
mov
sti
out
push
dec
test
xor
cs
sub
in
xorl
jbe
mov
and
xchg
xchg
mov
fstpt
inc
popf
pop
mov
or
sbb
pop
not
cmc
out
hlt
xor
popa
mov
lret
mov
adc
orl
xor
push
icebp
mov
sti
int
or
mov
pop
mov
loopne
ljmp
inc
shlb
sarl
xchg
or
pop
roll
add
jns
movsl
cmp
sub
sarb
shl
add
cmp
addr16
dec
add
ja
jbe
dec
les
rorl
je
pop
stc
cmpl
daa
sbb
repz
in
imul
push
sbb
xor
sbb
hlt
repz
je
mov
mov
cmp
stc
adc
gs
add
dec
inc
mov
in
stos
clc
adc
les
add
aas
nop
jmp
xchg
jb
mov
lods
push
dec
mov
dec
adc
mov
bound
cmp
cld
push
jnp
repz
add
add
sub
scas
dec
jo
jge
push
xor
stc
scas
je
daa
mov
scas
jnp
imul
xchg
mov
dec
and
pop
es
add
xor
imul
pop
cmp
pop
mov
cmp
fiaddl
pop
mov
add
outsb
aam
xor
gs
xchg
adc
and
mov
jmp
pop
insb
gs
dec
mov
push
gs
js
aaa
pusha
sub
movsl
add
push
hlt
and
stos
popf
jg
imul
sbbl
popf
pop
icebp
push
adc
sbb
jbe
int
enter
icebp
xor
and
adc
cmpsb
imul
mov
test
pop
out
xlat
push
jb
ja
xor
inc
or
jno
ds
js
sub
mov
fs
les
xchg
mov
cltd
mov
aam
aam
cmp
fsubrs
shlb
loopne
and
jmp
in
fcoml
lret
xlat
pop
push
pop
jno
cmp
add
and
cltd
movsb
sub
fcmovu
cmp
fdivrl
push
fs
data16
aam
lock
loopne
xchg
mov
jle
rorl
cmpsb
shlb
mov
mov
mov
xchg
xor
mov
mov
mov
mov
in
inc
pusha
pop
cmp
cmp
in
test
mov
or
add
jae
dec
pop
aam
mov
rclb
aaa
jmp
mov
lods
aad
rclb
icebp
cltd
xchg
mov
ja
add
repnz
push
mov
bswap
push
pop
xchg
fwait
dec
adc
dec
jno
pop
pop
xchg
dec
mov
cltd
sub
std
sti
push
cmp
mov
xchg
or
jbe
add
dec
xchg
adc
hlt
xchg
mov
ja
pop
enter
jecxz
pop
xor
push
enter
lods
xchg
xlat
xchg
fs
rolb
bound
adc
jbe
rorb
test
inc
cltd
mov
bound
in
add
stos
jo
dec
cli
fldcw
loopne
test
or
xchg
add
aad
xchg
jno
mov
jp
fxch
mov
ret
mov
lds
or
push
rcr
mov
sbb
xor
in
int
jmp
movsl
inc
xor
push
ds
imul
jmp
popf
ljmp
xchg
inc
push
insl
daa
xor
xchg
sub
push
movsl
mov
adc
lods
or
pop
mov
fmulp
cmp
ja
sub
lea
mov
inc
or
cwtl
fidivs
adc
dec
dec
push
ds
adc
mov
cmp
cmp
sub
xchg
int3
shlb
sti
cmp
fcmove
mov
jne
adc
push
inc
push
mov
jp
xchg
dec
mov
xor
rorb
xor
sbb
sub
test
mov
aas
jae
xor
aad
inc
push
in
push
cli
inc
mov
mov
frstor
fisttps
or
pop
popa
stos
pop
mov
inc
jns
sbb
add
jbe
xchg
add
out
xchg
xor
push
add
stos
lods
or
add
add
or
aas
xor
leave
jb
adc
aam
ss
cmpl
fadds
jge
cmp
jmp
jbe
push
push
mov
stos
jb
jo
inc
clc
movsb
jge
rol
xchg
loope
or
cli
jmp
outsl
rol
mov
xchg
jne
mov
sbb
or
or
sbb
enter
repz
pusha
movsl
inc
or
aas
ss
dec
ja
lcall
movsl
cmp
jge
mov
lock
lret
mov
cmc
movsb
adc
xlat
add
mov
cs
pop
or
les
popf
pop
inc
dec
xchg
arpl
pop
insb
push
pop
cmc
mov
sbb
pusha
mov
loopne
mov
in
inc
jb
pop
mov
insl
xor
add
clc
daa
inc
dec
cld
mov
mov
cs
ds
sbb
pop
jbe
or
ret
movsb
bound
xchg
jge
jno
push
popa
movsb
test
in
out
dec
mov
push
push
push
and
dec
imul
mov
inc
sub
bound
xchg
lahf
aas
sub
push
scas
popf
lds
std
add
fadds
add
push
dec
pop
xchg
js
mov
outsb
leave
add
xchg
add
scas
xchg
test
aad
pop
mov
pop
push
and
out
mov
or
fcom
addr16
bound
pop
pushf
lret
repnz
add
inc
fstpt
cvttps2pi
add
jl
or
jns
dec
leave
fidivs
hlt
jl
jae
idivb
nop
lock
mov
stos
fsubs
jo
ljmp
push
mov
sbb
in
jecxz
and
cmp
xor
lcall
movsl
inc
jmp
or
dec
sbb
mov
jecxz
scas
icebp
repnz
addr16
and
lret
fildll
mov
fisubrl
cmp
cmpsw
cmp
xor
and
adc
clc
inc
pop
adc
lock
out
fdivrs
lock
cwtl
repz
mov
popf
push
mov
inc
mov
into
mov
sub
push
push
add
data16
test
xor
mov
pusha
push
pop
dec
add
and
data16
xchg
cmp
sti
sub
adc
jo
xchg
stos
pop
add
xchg
adc
mov
cmpb
or
sub
mov
mov
add
mov
call
mov
mov
lret
lret
lcall
shlb
pop
dec
jnp
cld
jl
dec
in
ss
push
pop
xchg
sbb
mov
adc
aad
sbb
mov
pop
aad
aam
pop
mov
fcmovnu
lock
fdivl
pushf
or
bound
aaa
jg
or
jmp
push
divb
popf
stos
nop
std
push
aad
int
loop
lock
add
push
and
mov
cwtl
or
pcmpgtb
cmp
cmp
add
add
call
sub
cmp
xor
inc
sahf
jae
movsb
arpl
scas
pop
mov
xor
pushf
jmp
dec
sub
lds
shlb
xor
cmc
and
adc
int
mov
xchg
push
sbb
mov
movsl
push
in
mov
cli
mov
not
or
mov
repnz
jp
data16
sbb
mov
insl
cli
subl
cmp
decl
in
jo
hlt
dec
pop
das
hlt
lret
add
xchg
add
or
mov
adc
jne
mulb
pop
jle
pusha
adc
aam
jbe
mov
cmpsl
pop
cmp
nop
sub
movsl
std
jl
popa
in
stos
outsb
dec
stos
cwtl
fsubs
in
dec
jg
lock
push
sti
pop
enter
jne
sub
inc
pushf
mov
pop
cmp
push
jnp
sub
push
xor
xchg
sahf
mov
pop
mull
cmc
pop
push
sti
int
negl
xorl
icebp
adc
adc
lcall
cld
jl
mov
xor
adc
out
in
in
cld
fwait
cmpsb
loop
jmp
icebp
fs
test
rorl
inc
push
test
jae
orl
fimuls
out
mov
sbb
mov
cmp
pop
rol
fisttpll
push
jb
inc
sarb
cld
pop
sahf
dec
pop
scas
push
aad
jl
mov
jg
mov
and
mov
pop
jo
and
fisubrs
and
imul
shrb
int
mov
push
mov
pop
sbb
push
mov
mov
cmc
movb
sub
popa
insb
cld
cmp
mov
aas
cs
mov
ss
mov
outsl
cmp
jecxz
int
pop
icebp
loope
gs
pop
xchg
test
ljmp
mov
xlat
dec
and
jae
adc
mov
fsubrs
push
jmp
shll
das
ret
lods
call
or
enter
pop
popa
and
cmpsb
ret
test
pop
adc
ds
mov
mov
rcrl
cmp
xchg
ret
cmpsb
push
cld
inc
push
mov
dec
dec
movsl
cmp
push
pop
inc
popf
aas
std
adc
bnd
mov
popa
out
jmp
or
subl
movsl
push
pop
xor
aam
pop
xor
xchg
in
hlt
aad
mov
std
pop
pop
lods
test
jnp
orb
xchg
ret
jno
inc
inc
test
cld
scas
pushf
dec
xlat
adc
cld
sbb
mov
xchg
sub
cwtl
mov
xor
pop
stc
call
mov
mov
out
adc
sub
imul
sub
mov
and
dec
repz
fldt
cmp
into
add
xchg
add
cmp
icebp
bound
xor
pop
nop
fldl
fmul
scas
sarl
adc
ljmp
shll
pop
add
xor
mov
cmp
clc
lret
jmp
fisubl
sbb
hlt
dec
int3
cld
mov
cmc
clc
cltd
cmp
dec
out
inc
data16
xchg
ja
std
movsb
pop
hlt
fildll
push
fwait
sbb
incl
test
in
mov
cltd
leave
push
mov
fwait
dec
xor
adc
mov
xchg
cmp
adc
add
aad
and
pop
nop
inc
ds
mov
pop
arpl
nop
pop
and
daa
imul
xlat
cld
arpl
cmp
ja
jnp
in
sti
test
int
imul
ja
jmp
adc
jl
or
or
movsl
cld
sahf
test
repz
dec
test
mov
fdivs
jne
xchg
push
shlb
popf
out
mov
stos
mov
and
in
dec
repz
dec
push
je
adc
adc
into
int
std
cmp
pop
mov
lods
xor
xchg
out
or
dec
and
inc
dec
pop
mov
jge
adc
fstps
jmp
cmp
movhps
fistpll
mov
adc
mov
pop
mov
sbb
xor
jge
rcrb
pop
push
add
jbe
cmpsb
xor
aas
pusha
cmp
lds
out
rclb
out
test
cmp
lock
mov
mov
mov
cwtl
clc
mov
add
sahf
add
js
cmpsb
mov
or
popf
pop
les
mov
mov
and
cmp
cmc
fiaddl
sbb
and
cmp
cld
dec
mov
mov
fwait
inc
leave
popa
and
cmp
iret
pop
fildll
xor
dec
or
insb
jp
or
xor
clc
iret
bound
test
inc
fwait
notl
dec
fmulp
repnz
sbb
lock
cs
lss
je
sahf
push
push
cmpsb
jb
mov
outsb
fisubrl
aad
or
sub
adc
pushf
pop
fnsave
nop
dec
pop
and
aam
insb
ficompl
mov
in
jno
add
adcl
pop
fsubrs
add
lcall
jnp
pop
pop
mov
aaa
mov
add
add
xchg
add
cmp
daa
add
test
push
sbb
fisubrl
fwait
or
or
dec
lahf
push
inc
mov
dec
sbb
hlt
lods
sub
cltd
je
movsb
fildl
rcll
mov
xchg
int3
jnp
shlb
cltd
cmp
into
rep
imul
or
lcall
sub
rol
test
shl
in
mov
pop
mov
xchg
adc
adc
push
mov
sub
pop
mov
and
pusha
or
loopne
xor
lods
shrl
cmp
fsin
ret
shll
mov
sbb
jge
mov
mov
jne
pop
mov
jge
push
jo
push
inc
into
xchg
inc
jecxz
ss
out
add
mov
sbbl
pushf
and
jle
add
mov
mov
mov
pop
xchg
ficompl
pop
daa
sub
pop
outsl
push
jmp
pop
stos
iret
out
and
dec
cli
ret
xchg
inc
cld
adc
dec
add
shrb
add
pushf
iret
faddl
nop
in
inc
lds
lahf
or
cmp
aam
andb
dec
hlt
adc
jecxz
jecxz
andl
push
pop
jnp
aas
xor
mov
pop
movsb
jns
cmp
xor
lret
or
data16
pop
out
and
or
test
fs
addr16
dec
mov
js
iret
jnp
cmp
sub
adc
mov
mov
jo
dec
inc
inc
out
pop
inc
jb
rorl
ss
cltd
dec
repnz
fiadds
bound
aaa
or
shlb
testb
add
lods
aas
cmpb
pop
mov
cltd
cmp
sub
sub
and
insb
push
cmp
ss
pop
insl
mov
xor
cltd
fidivrs
test
sbbb
and
movsb
cmpsb
pusha
in
dec
leave
andl
add
xchg
cmpsb
stc
mov
mov
ret
or
movsl
lret
int
aam
fstpt
insb
scas
shrb
jecxz
or
xor
cmp
mov
dec
cmp
xor
add
rolb
dec
idivl
fstpl
mov
add
add
xchg
fs
sub
add
jno
inc
dec
and
mov
stc
fs
orl
fisttpll
inc
loopne
mov
sbb
xor
adc
aas
sar
scas
pop
scas
rcrl
fbstp
js
test
ret
xchg
xchg
and
jp
shlb
pop
fimuls
cltd
inc
push
out
rorl
repnz
pop
jl
sbb
daa
ja
sbbb
imul
xor
xchg
sub
adc
push
adc
sub
daa
cmp
cld
mov
into
loope
mov
sub
sub
jnp
lret
movsb
push
insb
arpl
and
out
decb
lret
xor
aad
jae
push
in
sub
dec
add
movsl
ds
xor
ss
rcl
mov
cmp
test
push
sbb
inc
aaa
push
jecxz
mov
repnz
inc
rclb
push
xchg
mov
movsb
lds
jb
add
int
cmpsl
mov
sqrtps
scas
data16
cmp
hlt
nop
cltd
lds
sbb
xor
outsl
test
push
rorb
insb
mov
or
sarl
inc
repz
push
pop
xchg
notl
fucomp
mov
xor
xchg
inc
cmp
push
pushf
push
fdivp
or
ss
sbb
dec
iret
nop
jb
pop
iret
adc
jle
xor
mov
sub
lret
pop
data16
enter
cmp
clc
dec
mov
add
inc
shrl
inc
std
and
es
sbb
out
fsubrs
aam
or
repnz
jnp
pop
ret
jmp
push
out
jl
mov
jo
repz
mov
jbe
rolb
jl
call
sbb
mov
daa
outsb
lcall
ja
jecxz
push
shll
adcl
fwait
adc
mov
pusha
fsubrp
mov
test
mov
mov
xor
scas
ret
fsubl
or
int3
test
les
jb
or
negl
xor
out
or
mov
jp
aaa
imul
dec
pushf
fcomps
pop
call
push
addr16
or
mov
push
frstor
adc
popf
add
mov
call
mov
push
shrb
or
add
xchg
add
gs
cmp
clc
xor
sbb
nop
je
testl
sub
dec
xadd
cmp
ret
sbb
leave
mov
mov
in
cmpsl
push
xchg
dec
mov
pop
and
or
dec
adc
adc
jae
sbb
arpl
and
jmp
xchg
out
mov
sti
test
inc
scas
mov
lahf
mov
adcl
inc
sbb
xor
lcall
jg
mov
add
and
dec
cmpsl
stos
xchg
test
or
stos
sub
dec
aaa
js
inc
pop
cmpsb
mov
fcmovnb
cwtl
or
fcompl
sbb
add
imul
cmpsl
sbb
in
adc
cli
xchg
lcall
dec
mov
in
mov
fildll
pop
pop
aaa
jnp
mov
add
jle
push
stc
or
add
xor
addl
dec
sbb
movsl
pop
int
ja
cld
lahf
ficoml
lea
or
call
fmul
into
dec
and
cld
mov
and
movsb
repz
rcll
pop
out
roll
shrb
xchg
push
lock
or
mov
nop
sub
push
out
test
mov
xchg
add
jmp
adc
mov
jae
leave
xor
adc
xorb
push
insl
sarb
cli
lea
add
pop
push
mov
in
cmp
inc
popf
pop
sub
dec
shr
subl
andl
cmp
andl
in
into
jge
inc
fdivrl
pop
inc
dec
js
cld
jns
push
pop
xchg
gs
andb
outsb
dec
push
and
push
jmp
sub
push
xor
cli
xor
jnp
inc
repnz
dec
enter
xor
in
aad
out
mov
xchg
call
fwait
iret
dec
and
mull
dec
pop
mov
xor
lods
push
mov
adc
dec
xchg
pop
imul
cmp
xchg
aad
dec
imul
jnp
das
push
mull
pop
sub
lcall
cld
mov
out
dec
xor
mov
mov
add
ficompl
mov
fadds
add
in
std
pop
out
orl
movsb
mov
lods
jl
xor
push
dec
loop
mov
cwtl
mov
out
xor
call
or
mov
and
fsts
lret
data16
in
repnz
jge
cmp
in
pop
push
lods
arpl
inc
xchg
or
add
mov
push
cmp
cltd
push
sbb
or
lcall
pop
ret
pop
fisubrl
fcomps
jg
jo
test
pop
or
pop
xor
ret
jns
js
clc
enter
fimull
popf
cmpsb
dec
cmc
cli
and
xchg
insl
push
jge
mov
pop
out
push
xchg
xchg
or
stc
in
xor
adc
pop
rorb
ja
fwait
out
subb
sub
xchg
fstps
dec
in
loopew
xor
nop
les
shrl
add
aad
jae
pop
mov
sub
js
arpl
jg
or
push
insl
test
add
jno
lds
aam
je
loop
loopne
mov
cmpxchg
in
popf
cmp
out
test
les
jp
xchg
jns
mov
inc
and
popa
repnz
pop
adcb
pushf
jae
fmull
mov
dec
scas
cmp
aaa
lea
bnd
scas
mov
jb
ljmp
movb
lods
mov
mov
fstps
pop
clc
out
es
or
sti
push
push
pusha
push
dec
les
xchg
mov
mov
mov
fld
lods
cmp
loop
dec
repnz
mov
ret
enter
fucom
in
stc
mov
icebp
je
outsb
sbb
jl
and
mov
jbe
stos
dec
cli
andb
in
xchg
mov
or
or
inc
sub
jo
lods
xlat
stc
cs
dec
mov
ret
mov
stc
and
shll
dec
pop
repz
xchg
notb
sahf
test
lahf
test
jg
mov
dec
out
fldenv
fwait
loop
jl
or
inc
pusha
shl
addb
fisubl
inc
push
pop
test
ja
aaa
mov
cld
jp
movsb
jle
pop
xchg
mov
scas
adc
sbb
inc
mov
insb
or
push
aaa
add
inc
stos
pop
sbb
cli
inc
cli
outsb
ljmp
sbb
add
xchg
add
cmovnp
aaa
lret
mov
jmp
sbb
push
jp
loop
push
les
or
ljmp
negb
cmp
dec
dec
mov
xor
cmp
stos
cmpsb
ret
xchg
in
ds
mov
lods
outsl
dec
sub
and
rol
add
call
mov
and
frstor
jle
sub
cmp
dec
in
jno
xor
in
jge
ror
xchg
add
mov
in
pop
pop
out
push
fwait
add
push
xchg
fsub
push
outsb
repz
xor
imul
cmp
mov
mov
inc
and
mov
mov
shl
ret
enter
icebp
sahf
mov
test
test
mov
repnz
jb
sti
jnp
int
cmp
push
sbb
repnz
push
sahf
jo
lcall
das
cmc
out
mov
pop
sub
mov
cwtl
mov
push
jne
ljmp
cmp
jbe
stc
xor
je
ljmp
out
cmp
push
bound
and
add
and
and
lahf
scas
cmpsb
xor
sub
mov
mov
notb
inc
jg
mov
inc
sahf
fidivl
std
sub
xchg
jnp
outsb
adc
imul
jp
call
pusha
das
movsb
das
js
jns
sub
stos
std
stc
jecxz
inc
jmp
loopne
xchg
idivb
outsb
es
icebp
outsl
jns
loope
sub
or
lock
lret
or
or
mov
fimuls
mov
out
imul
jnp
repz
jb
pop
jl
mov
xchg
stos
mov
inc
fidivs
mov
add
dec
mov
mov
dec
inc
fs
sub
inc
shll
test
xor
outsl
sbb
aad
ja
lahf
add
imul
cmc
lods
xchg
pop
jns
mov
inc
mov
icebp
in
xor
and
aam
or
push
pop
pop
hlt
pop
in
in
mov
sub
outsb
fstpl
ret
sub
cmpsb
pop
cmp
mov
aaa
add
mov
xchg
add
roll
mov
das
nop
push
jl
jo
or
and
mov
lahf
lds
mov
xlat
push
xlat
ja
out
ss
mov
sahf
fldl
add
and
pop
cmp
and
rcll
out
mov
iret
call
iret
incl
loopne
inc
or
bound
sub
mov
mov
or
cwtl
xchg
mov
xor
repnz
sbb
lcall
pop
mov
pop
les
ja
fnstsw
adc
shlb
push
sbb
outsb
test
jp
aam
adc
sarl
nop
adc
aam
pusha
pop
mov
sub
add
insb
jg
pushf
cmp
sbbl
dec
adc
pop
icebp
pop
inc
pop
sub
lods
cmp
in
roll
sub
xchg
pop
or
idivb
sub
xchg
mov
pusha
bound
fdivrl
movsb
pop
test
sbb
je
add
jle
push
in
dec
mov
add
shl
arpl
sbb
cmpsb
push
jo
lea
mov
dec
icebp
xchg
loope
jae
lock
mov
adc
nop
hlt
in
mov
add
push
fs
test
xor
stos
mov
jg
loopne
jnp
cmp
jle
icebp
stos
out
cmp
pop
fldt
mov
mov
and
and
jbe
sub
pop
jo
jnp
xor
jmp
test
dec
call
xchg
scas
dec
fsubrs
mov
aas
pusha
push
sbb
arpl
notl
sub
les
mov
movsl
pop
adc
mov
xchg
sbb
daa
inc
add
jbe
push
insb
shl
pop
xchg
cmpl
mov
loopne
aas
sub
ja
daa
popf
sub
mov
adc
iret
xchg
imull
sub
nop
jg
or
test
repz
jae
mov
popa
dec
testb
cmpl
sub
inc
mov
pop
adc
sub
inc
lea
dec
pop
pop
inc
sbb
iret
mov
frstor
mov
stos
cmpsl
subb
jns
cs
mov
sbb
test
sti
insl
loopne
call
xor
pop
push
aaa
mov
stos
mov
lcall
fst
sbb
loope
or
inc
add
push
lea
in
sbb
add
cli
rcll
pushl
jle
insl
and
add
xchg
add
push
aaa
mov
adc
push
pop
test
xor
jg
jno
mov
dec
push
cwtl
lods
adc
push
imul
test
push
xchg
sbb
dec
sti
jl
mov
xorl
shrb
nop
imul
and
sbb
sbbb
push
and
and
adc
mov
jne
add
push
pushf
sub
mov
push
inc
or
das
data16
pop
outsl
faddl
jge
mov
mov
lcall
into
cmp
dec
jbe
loop
mov
jb
cmc
add
push
push
xchg
es
icebp
in
fdivp
cld
cmp
inc
roll
aam
ljmp
lds
sub
call
in
pushf
jnp
pusha
sahf
sub
sbb
arpl
push
pop
nop
dec
out
and
pop
or
sar
outsl
xor
jno
stc
popa
aas
out
es
xchg
pop
ja
mov
jl
jne
adc
sbb
mov
pushf
stc
popa
insl
scas
adc
add
inc
adc
push
mov
stos
dec
dec
ret
adc
nop
aad
ljmp
arpl
adc
lret
push
std
xor
mov
sbb
imul
adc
js
inc
js
ret
std
aam
adc
or
cmp
push
gs
cmp
xchg
fildl
adc
sbb
mov
sbbl
dec
mov
sarb
loop
push
loop
in
adc
mov
ja,pt
out
or
aad
out
or
mov
adc
inc
xchg
pop
pop
add
ss
cmp
xchg
lcall
lds
outsl
mov
push
repnz
mov
popf
pushl
loopne
je
into
sti
repnz
lods
loope
xor
sbb
pusha
rol
rolb
fistl
repnz
rolb
daa
pop
jne
dec
inc
push
dec
loope
fwait
notb
lock
xchg
xchg
in
inc
jbe
leave
push
out
cmp
scas
cwtl
in
int
shrl
inc
push
or
pop
add
aam
int3
out
mov
mov
cmpl
push
mov
out
mov
sbb
mov
mov
xor
imul
cmp
aaa
inc
scas
push
rcrb
sub
popf
push
mov
lods
push
cmp
add
xchg
add
test
jbe
divl
daa
add
lret
xchg
sbb
xor
jae
xchg
hlt
dec
jmp
push
outsl
xchg
cmpsb
enter
xchg
or
push
mov
xor
pop
mov
adc
adc
adc
xchg
xor
lret
out
mov
imul
jno
test
out
xor
lret
add
xchg
add
test
popf
jge
xlat
pop
adc
dec
xchg
and
sub
leave
xchg
ret
inc
lea
pusha
clc
sbb
in
stc
inc
jnp
cmp
fucompp
sbb
fistps
push
out
ljmp
xchg
lods
jo
or
cmp
nop
aad
push
rcrb
jns
add
and
dec
dec
arpl
pop
fucomi
scas
popa
xchg
jl
dec
jecxz
lcall
sbb
jg
mov
push
mov
dec
jecxz
cmp
mov
sbb
js
addl
mov
loop
xchg
aas
ds
xor
and
mov
mov
inc
or
or
in
cmpl
enter
pop
sub
mov
subl
xchg
adc
loop
sbb
lds
pushf
xor
imul
xchg
sbb
add
sbb
jb
jne
push
or
mov
sub
add
and
sahf
inc
xchg
mov
add
in
adc
arpl
mov
adc
push
push
push
dec
stc
mov
push
adc
jo
sti
xor
jnp
inc
ret
or
mov
add
incl
sahf
popa
sarb
lret
mov
cmpsl
dec
test
sub
cmp
lods
mov
data16
mov
mov
imul
or
xchg
sbb
outsb
cmc
pusha
push
xor
nop
xchg
into
xor
jg
inc
cmp
add
push
push
and
movups
stc
xchg
push
cli
mov
into
int3
stc
jb
or
jno
je
jne
push
test
inc
xor
cmp
and
imul
mov
mov
mov
in
sub
mov
adc
jno
into
or
and
aad
rol
sbb
push
fnstsw
xorl
pop
inc
insl
or
shrb
pop
add
push
push
jnp
fisubs
push
add
in
add
imul
lahf
ret
adcb
pop
lods
out
sbb
test
push
ljmp
int3
in
sbb
lcall
xor
out
jg
pop
sbb
add
dec
enter
fcmovnu
pop
daa
mov
adc
mov
dec
dec
dec
mov
or
test
jg
xor
jbe
cwtl
dec
cmp
xchg
ds
fstps
repz
cmp
xchg
dec
mov
mov
ret
loopne
cmp
test
mov
xor
cld
leave
sbb
mov
mov
stos
xchg
aaa
lcall
push
ljmp
lock
pushf
fimull
inc
or
movsl
mov
cmp
fcmovu
lcall
popa
repz
js
mov
and
dec
xchg
sub
sub
test
pop
jge
stos
sarl
inc
das
mov
lcall
adc
push
inc
or
lods
sbb
xchg
add
jmp
jp
rcrb
dec
pop
call
es
pusha
pushf
std
inc
lret
stc
or
andb
mov
fistps
repnz
mov
push
rcrl
inc
sub
scas
jl
xor
in
xlat
hlt
mov
aad
mov
adc
mov
dec
jo
insb
and
jecxz
jae
repnz
mov
mov
dec
out
iret
sbb
pop
fistpll
push
and
sbb
or
pop
sbb
or
cmp
popa
and
mov
jbe
stc
push
into
not
jge
xchg
pop
sbb
push
jecxz
jb
mov
cmp
xlat
mov
jb
mov
fildll
and
sub
cli
xor
add
pop
sbb
insl
add
or
push
dec
mov
cmp
ds
sbb
pop
shll
scas
xchg
mov
jne
mov
or
imul
or
test
in
clc
xchg
jo
jns
cmp
push
push
das
add
mov
mov
xor
mov
unpcklps
lods
mov
arpl
push
push
cmpsb
sbbb
inc
lds
aaa
or
daa
jns
out
into
mov
add
cltd
enter
mov
push
outsb
xchg
and
xorb
add
push
das
enter
mov
sti
push
orl
mulb
or
lcall
adc
push
sbb
sbb
xchg
mov
popa
pushf
clc
mov
xchg
lahf
mov
pop
and
sub
jle
add
je
and
mov
xchg
fmull
adc
out
cmpsb
mov
ja
adc
dec
cmp
adc
cmpsb
xor
fwait
negb
into
ds
push
aad
test
pop
cwtl
imul
mov
out
mov
mov
dec
pusha
and
jge
mov
mov
sti
mov
dec
insb
xchg
aad
dec
mov
xor
and
test
cmp
pop
inc
repnz
sbb
fwait
push
dec
xchg
fbld
lret
shrb
ss
sbb
jle
ret
sub
xchg
jl
outsb
hlt
inc
jge
push
sbbl
sbb
dec
mov
aam
fnstenv
xchg
fisubl
mov
sub
es
mov
hlt
mov
gs
scas
pop
iret
ret
bound
test
push
mov
aam
mov
pop
clc
or
jbe
xchg
adc
xor
inc
sub
mov
mov
incl
mov
adc
or
mov
das
jb
sbb
jno
mov
mov
fsubrl
or
inc
xchg
out
jl
xchg
jl
or
sub
lret
stos
adc
jg
out
cltd
pop
and
outsb
or
push
mov
sub
jbe
sub
push
ljmp
add
in
gs
sbb
sub
push
mov
sbb
jle
cmp
ftst
sbb
lahf
pop
mov
dec
pop
or
pop
push
ror
int
mov
bnd
dec
xchg
dec
pushf
mov
xor
push
es
mov
xlat
or
xor
or
mov
mov
stc
mov
mov
test
arpl
mov
jbe
mov
cltd
stos
push
adc
andb
xor
add
test
lcall
fadds
test
mov
int3
arpl
mov
jl
adcl
adcb
inc
xor
add
sbb
jge
int3
outsb
xchg
int
dec
and
add
xchg
add
mov
ljmp
pop
inc
je
outsb
inc
jecxz
test
inc
jae
cwtl
mov
pop
jo
imul
icebp
mov
xchg
scas
jno
imul
bound
dec
or
repnz
and
sbb
das
fcom
pop
pop
mov
mov
lock
cli
into
inc
repnz
out
mov
test
in
and
cmc
jmp
inc
push
pop
lahf
mov
stos
jp
mov
mov
xor
and
xor
xor
jge
mov
iret
mov
hlt
test
es
push
incl
out
out
mov
adc
ja
pop
mov
test
mov
mov
pop
inc
dec
xchg
pop
test
insb
fidivrs
daa
sbb
scas
inc
sbb
jns
in
loope
sub
dec
inc
pop
lds
ds
int
xor
icebp
incl
and
and
fstpl
push
cmp
inc
scas
enter
ret
push
mov
and
xchg
cmp
jecxz
aam
adc
test
xchg
sahf
sahf
stos
hlt
dec
xchg
jmp
adcl
fsub
movsl
lret
stos
ret
or
jb
rcll
div
jae
rcrb
popa
jg
ficoms
cli
xchg
xchg
aam
inc
aad
jl
pusha
js
insl
jnp
sbb
into
and
mov
adc
clc
cs
out
lahf
push
and
in
xchg
and
into
pop
mov
in
push
and
sub
xchg
data16
das
xchg
mov
xor
std
out
cld
in
jmp
jg
mov
dec
sbb
xorb
adc
push
mov
jae
jecxz
xor
into
lcall
mov
xor
xor
inc
shlb
xchg
lock
out
rcl
adc
test
sarl
ljmp
sub
push
pop
jl
fadds
es
stos
mov
or
add
and
out
fwait
xor
xchg
xchg
fs
fwait
test
push
sbb
jne
jne
or
adc
sbb
mov
sub
inc
nop
xchg
xchg
cli
ds
lret
jb
or
cmc
dec
or
inc
sbb
xchg
adc
shll
dec
mov
stos
mov
pushf
sub
sbb
lret
sub
das
pusha
sbb
add
fs
cwtl
cli
gs
sbb
int3
rcll
add
inc
fcmovnb
fstpl
sub
mov
add
sbb
mov
cld
pop
xchg
ss
fwait
pusha
jge
cmp
sbb
jo
xor
ss
jl
dec
fsubr
push
clc
fsubrs
push
outsl
stos
or
cmpsl
js
mov
push
or
adc
push
repnz
bnd
mov
sbb
or
or
dec
xchg
or
xchg
mov
divl
test
jl
add
inc
inc
lret
mov
push
pop
mov
adc
pop
into
jne
dec
cmp
in
popa
and
fdivrs
out
xchg
cmp
int3
sub
or
fldcw
xor
xchg
cmp
ljmpw
jnp
push
daa
loope
lret
out
push
cmp
mov
add
sahf
aam
insb
pop
mov
mov
out
sbb
mov
pop
jg
out
xchg
testb
js
sahf
xchg
int3
dec
movsl
mov
sbb
fcoms
outsb
or
jmp
mov
cmpb
sbb
pop
mov
test
pop
pushf
cmp
jae
popa
lods
clc
inc
or
xor
xchg
enter
popf
fs
ljmp
popf
fucomi
xor
and
jg
push
lods
sub
jge
mov
out
xor
sbb
mov
pop
mov
sti
loop
lret
xchg
mov
nop
dec
push
mov
cmp
dec
sbb
cmp
lret
cs
loop
cmc
pop
inc
fiadds
mov
mov
mov
jg
push
vhaddps
loope
out
push
sbb
push
fwait
arpl
rolb
and
dec
sbb
sarl
xchg
mov
mov
and
inc
sub
js
cmp
mov
test
setae
lret
jae
mov
loop
sub
je
enter
cmp
fstpt
mov
push
popf
stos
ds
mov
clc
ljmp
pop
fadds
jno
dec
cmp
insl
popf
inc
pop
test
fiaddl
aam
mov
dec
icebp
jle
ss
mov
mov
mov
enter
icebp
xor
push
jnp
or
mov
jmp
xor
or
add
mov
rolb
nop
xchg
fwait
dec
cmp
outsl
orl
mov
sbb
adc
fwait
add
sbb
pushf
cli
mov
scas
aad
sbb
andnps
add
xchg
add
lea
pop
imul
daa
inc
jne
orb
daa
jg
fidivl
or
adc
push
jecxz
ret
insl
ret
test
mov
mov
sbb
cmp
adc
xorb
sahf
pop
xlat
inc
and
lods
mov
xor
in
add
or
xchg
add
lret
cld
sbb
adc
lea
repz
mov
leave
gs
fidivrl
dec
mulb
xor
push
inc
cli
fidivs
pop
pop
mov
pop
unpckhps
nop
lahf
jns
dec
mov
icebp
add
xor
out
ja
cmp
inc
ds
jle
pop
cltd
mov
mov
test
sarl
icebp
sahf
fnsave
sub
hlt
mov
fistps
sub
lcall
fstpl
xor
sbb
out
movsl
bound
jb
negl
in
test
loopne
jo
mov
push
test
stos
bound
lahf
mov
ficoml
and
add
sub
sbb
sarb
jbe,pt
daa
hlt
dec
cmpsb
inc
sbbl
data16
and
sbb
cs
neg
jns
repnz
mov
gs
push
jo
popf
sub
xor
fmul
xor
repz
out
sub
adc
out
cmp
xlat
mov
jge
je
adc
icebp
cmp
rolb
and
jb
dec
rclb
jecxz
clc
movsb
sub
inc
insb
mov
andb
jnp
pop
icebp
rolb
ds
add
push
scas
sub
sub
ds
jns
into
in
dec
testl
leave
ja
pop
xor
and
mov
insb
jle
mov
push
and
sbb
popf
jnp
lahf
popf
imul
inc
cwtl
popf
andl
movsb
fsubrl
popa
dec
pop
jge
ss
dec
inc
cmp
or
in
cmp
fsubrs
lret
xor
les
fstpl
inc
jle
add
movsl
ret
pushf
mov
mov
js
shl
push
push
push
mov
xchg
mov
xchg
xchg
cmp
inc
add
fldenv
mov
inc
and
fisubl
mov
imul
xchg
add
je
cmp
xor
cli
push
data16
xor
sar
mov
mov
push
lret
sbb
fwait
jnp
mov
adc
outsb
aaa
mov
push
insl
imul
jle
sub
adc
mov
popa
lods
fidivl
inc
jno
xor
add
repz
dec
jb
add
jno
xchg
sub
add
jl
cmp
and
or
pop
clc
nop
mov
inc
adc
cli
test
jmp
xchg
push
cmc
jne
and
adc
lods
dec
adc
fdivr
pusha
push
cmpb
pop
cmpsb
push
sbb
mov
shlb
fs
mov
pop
mov
mov
mov
movsb
jnp
aam
dec
jnp
jb
dec
mov
add
aaa
pop
out
push
xor
arpl
ds
dec
mov
push
ja
stos
leave
test
mov
dec
test
dec
sbb
or
jnp
icebp
roll
adc
xor
lods
pushf
clc
and
sub
jmp
sub
jecxz
loope
out
xchg
fcompl
movsb
fmul
or
lret
mov
test
cmp
ds
jae
aam
int
sub
pop
stos
stos
mov
or
push
mov
out
jb
fistpl
pop
ret
mov
popf
das
mov
clc
addr16
pop
fcmovu
xchg
sahf
dec
cmp
adc
gs
popa
int3
sbb
pop
sbb
shrl
add
stos
aas
cmp
test
push
hlt
mov
std
aas
shll
movl
add
inc
inc
jnp
mov
mov
cli
ss
lret
pop
rcl
push
lock
jmp
cmp
insl
dec
outsb
outsl
mov
pop
xchg
and
outsb
in
sbb
into
sub
xor
bound
mov
mov
sbb
out
lods
repz
xor
xchg
cmp
cmpsl
cmp
jecxz
mov
bound
push
aam
push
outsb
jmp
cmc
push
mov
add
adc
adc
sbb
sbb
jmp
lods
push
dec
push
cltd
repz
inc
out
adc
dec
orl
xchg
ds
cmpsl
mov
stos
es
aas
iret
cmc
sti
pushf
loop,pt
lret
lock
hlt
add
xchg
add
xor
pop
div
je
jmp
sahf
lock
mov
push
movsl
insl
mov
cmp
loop
mov
inc
stos
mov
fistl
pop
or
pop
cmp
in
dec
inc
not
sbb
xorl
es
cmpsb
add
aaa
test
sbbb
sub
faddl
and
push
aaa
sarb
cmc
cld
sbb
jns
nop
das
push
out
stos
daa
leave
or
iret
div
fldenv
mov
std
push
lods
imul
or
add
xor
fists
mov
dec
mov
es
loope
outsb
mov
pop
out
into
stos
in
xor
test
fcomps
cwtl
mov
mov
inc
sbb
or
inc
add
or
xor
push
sub
push
mov
out
pop
imul
inc
adc
inc
mov
mov
imul
jmp
add
pop
daa
cli
mov
aas
push
push
jae
dec
leave
shlb
fwait
add
dec
sbbb
fisubrl
sti
and
jge
rorb
femms
and
js
cmp
cmp
out
push
test
xchg
push
push
repnz
sub
sbbl
cmc
in
jecxz
inc
jne
ret
pinsrw
mov
stos
ds
sub
stos
mov
stos
pop
xchg
leave
lds
icebp
jg
dec
ja
mov
addr16
adc
xchg
pop
xchg
daa
rcl
inc
movsl
jbe
fistpl
lock
aad
or
jbe
mov
cld
sbb
ss
arpl
movsb
mov
mov
push
cs
xchg
push
mov
fisubl
push
and
das
mov
in
scas
into
in
out
adc
icebp
lret
and
dec
lock
push
cmpsb
dec
mov
dec
push
dec
or
xchg
xchg
scas
push
aas
cltd
sbb
xor
lds
incl
test
jae
in
sub
hlt
mov
jne
rorl
jns
cmpsb
int3
ret
sbb
in
sahf
ret
xchg
jo
sub
mov
add
mov
lea
clc
xor
push
into
icebp
jge
sbb
add
cmp
stc
int
xor
jmp
inc
or
testb
xchg
add
fmuls
mov
aaa
stc
jmp
int3
inc
mov
mov
pop
mov
pop
mov
lret
aaa
dec
pop
sub
push
mov
xchg
inc
lock
mov
add
mov
movsb
sbb
nop
das
iret
xor
cmp
cmp
or
fdivl
mov
popf
scas
xor
outsb
iret
imul
dec
lock
insl
sbb
popf
xor
jecxz
popf
or
stos
out
xchg
and
fcoms
adc
or
and
jo
sub
nop
cwtl
jns,pt
bound
mov
xor
push
push
inc
aaa
or
data16
movsl
jae
sarl
add
ret
sub
fs
pop
call
in
ljmp
inc
sbb
rol
jg
jge
jg
int
ret
shrb
dec
gs
scas
xchg
out
xchg
dec
push
shll
mov
out
pop
push
dec
pop
and
mov
loope
mov
clc
sub
mov
inc
lea
out
js
cltd
imulb
jp
mov
stc
shrl
xlat
rcrb
stos
push
fdivrs
imul
mov
dec
xchg
mov
ja
cmp
or
inc
sub
sub
or
mov
and
jmp
sub
lahf
jne
xchg
fucomip
and
and
adc
scas
ja
fldt
ret
std
dec
leave
sub
inc
shlb
sub
mov
mov
es
dec
ret
cmp
jge
lods
test
rclb
rcl
jmp
les
scas
dec
pop
xchg
mov
xor
imul
sub
pusha
clc
jbe
jns
push
pop
lods
cmp
sub
adc
outsb
adc
cmp
sub
sbb
jbe
cs
xor
inc
fsubs
jno
mov
cmp
movsb
mov
dec
adc
ds
sub
mov
leave
sbb
fwait
imul
push
mov
test
sub
mov
test
push
fcmovnu
ss
pop
jg
and
add
clc
test
xor
and
sub
adc
mov
repz
test
cmp
mov
bound
add
or
add
outsl
xchg
adcb
push
push
.byte
