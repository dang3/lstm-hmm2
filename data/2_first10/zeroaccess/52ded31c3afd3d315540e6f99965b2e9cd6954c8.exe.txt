push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
or
mov
mov
mov
sbb
mov
mov
orl
push
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
push
jmp
enter
fldenv
add
mov
insb
mov
addb
jl
aam
ret
rol
in
lret
fmul
cli
icebp
fmul
aam
shl
rcl
xchg
mov
loopne
cli
jmp
leave
xor
icebp
xor
neg
aad
int
fnclex
out
repz
ljmp
out
ret
clc
fxch
in
leave
icebp
hlt
dec
cmp
rolb
repnz
in
fildl
shl
sub
shl
xlat
stc
aas
adc
out
out
test
mov
iret
cld
fdivp
jecxz
hlt
jecxz
aaa
ret
fcmovu
neg
in
iret
out
lock
in
lock
in
aad
jmp
sti
call
aam
int
int3
out
ds
fmulp
sti
out
fmuls
hlt
icebp
rol
repnz
aad
xor
lret
sarl
cld
hlt
cmp
ret
loopne
out
sti
xchg
call
int
fld
enter
cmp
loope
ds
decb
nop
in
fisttpll
in
div
int
std
repnz
out
lock
enter
fstl
in
iret
sar
stc
neg
loop
hlt
in
cmp
sti
adc
in
out
std
mov
xchg
out
sti
aam
fcmovnbe
aaa
std
fsub
sar
not
ffree
loop
orl
addl
xor
cmp
aam
enter
test
loop
test
hlt
aam
fcmovnbe
in
out
cmc
shr
test
rol
test
aad
sarl
adc
loop
cmc
fnstcw
orb
test
shlb
cmp
fmul
clc
dec
loop
test
xchg
jecxz
lea
ret
xchg
out
xlat
shll
iret
aaa
ss
jmp
aad
sti
incl
xchg
xlat
out
std
xchg
lret
in
into
into
in
cs
xlat
call
clc
cmc
xlat
mov
jmp
lret
xchg
ljmp
ds
ret
in
bnd
xlat
lock
out
aam
leave
cli
test
xchg
test
out
xor
jmp
xor
xor
iret
fcomp
in
call
idiv
iret
in
cld
in
call
jmp
sti
rcr
neg
std
cmp
cld
mov
cmpb
call
rclb
leave
fcmovnb
fdiv
fcomip
loope
aad
addl
clc
xchg
loopne
test
mov
jmp
cmp
in
ret
in
into
test
loopne
sar
ljmp
cli
lock
shr
cmp
iret
das
imul
xlat
std
sarl
cmp
loopne
rolb
movl
div
xor
not
rcr
icebp
loope
cmp
and
rol
enter
out
xchg
xchg
divb
rcl
lret
lock
hlt
sti
lret
out
aam
inc
mov
fxch
sti
and
xchg
xchg
xor
xor
jmp
fdivrs
loop
cmp
jmp
into
jmp
mov
mul
sub
cmp
call
lret
cmc
clc
fstpt
jmp
testl
jmp
sti
shlb
xlat
out
sti
loopne
ret
fprem1
cli
fiadds
call
ffreep
out
ljmp
aaa
leave
int
ror
sti
cmp
cld
in
in
out
ljmp
ljmp
cmp
xor
cmp
roll
cmp
fstp
mov
xchg
fildll
repnz
in
lret
hlt
cmp
rol
ret
loop
cmc
in
test
xchg
test
mov
shl
divl
out
lock
xchg
orl
call
adc
jecxz
loop
lret
aaa
lret
int
loope
aad
jecxz
xchg
leave
fsub
xchg
lock
repnz
iret
test
lock
lret
xlat
fidivrl
into
cli
xchg
enter
mov
repz
cmp
call
enter
cmp
out
rol
fcomp
in
loopne
mov
iret
xor
out
xor
fneni(8087
loopne
iret
test
clc
in
call
out
cs
mov
out
cmp
ret
fcomip
fcmovb
xchg
int
loop
mov
cmc
fxch
call
push
pop
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
enter
lret
xor
inc
adc
push
addb
jl
sarl
hlt
xlat
cmp
call
test
xchg
int3
aam
jmp
aaa
stc
rolb
xchg
xlat
jmp
out
xor
cmp
xor
in
idiv
rcl
int3
sar
loop
xchg
lea
jecxz
xor
xor
aaa
xlat
cmp
fnstenv
ffree
incl
lds
int3
mov
shr
jecxz
aam
sar
xor
dec
fcmovu
sarl
ret
std
xor
test
xchg
xlat
xor
shl
cmp
hlt
hlt
testb
stc
out
lret
ljmp
repnz
into
ss
fld
int3
cmp
vpaddusb
testl
call
in
shl
in
out
ss
fdivp
loop
div
fmul
test
clc
xchg
mov
out
shr
xlat
cmp
cmp
idiv
rol
les
stc
cmp
les
jecxz
in
xlat
cmp
repz
cmc
fst
icebp
loope
fadds
lea
out
jecxz
xor
lret
in
in
out
aad
cmp
loop
frndint
cli
enter
fmul
int
adcb
ret
in
stc
leave
out
fdivrp
fsubp
xor
fisttps
int
lock
loop
fsubp
cmp
sarl
repz
hlt
addb
int
nop
loope
xor
xor
clc
into
fsubr
std
xor
stc
jecxz
hlt
shl
out
aam
mov
leave
stc
loopne
lret
or
jmp
neg
cmp
icebp
xor
ljmp
cmp
clc
vmovq
in
cld
out
rcl
sub
in
lret
cmc
jmp
jecxz
shl
ret
cld
out
leave
loopne
dec
xchg
leave
nop
jmp
xor
cmp
shll
cmp
icebp
test
lret
vpmacssdd
jmp
sub
ret
into
ljmp
hlt
test
ffreep
rol
ror
fcomp
addb
icebp
shr
fcmovnbe
fdivs
cld
divb
aaa
sar
cmp
or
ret
leave
out
leave
mov
aaa
loop
xor
in
cmp
out
ds
in
xchg
fdivrp
aam
test
in
xchg
xchg
jmp
fcomp
in
fdivr
fcom
aad
aam
sti
sar
jecxz
jmp
mov
mov
mov
rol
aam
repz
enter
repz
cmp
jecxz
fsubr
sti
repz
cmc
in
ret
xor
xlat
shll
call
out
xchg
test
in
repz
lret
ljmp
aam
aam
in
in
out
fcom
repz
loope
aas
xor
into
cmp
fmul
fmulp
lret
aas
cmc
iret
sarl
decl
fmulp
addb
in
out
in
lret
ret
ds
aam
xlat
call
and
out
jmp
out
xor
repnz
idivl
cmp
loope
fldl
mov
addb
loopne
int3
repnz
cmp
int
loop
in
out
mov
test
sti
test
in
loope
cmc
xor
xor
fcmove
cmc
cmp
repz
cld
xchg
roll
in
repz
lock
iret
call
lock
loope
rcr
stc
incb
hlt
jmp
add
loope
shll
out
xlat
repz
sbb
loope
sub
loop
in
out
jmp
ljmp
in
in
rcl
jmp
sbb
fucomp
std
in
leave
mov
mov
in
rcl
ds
out
ror
out
rol
adc
rcl
mov
xor
mov
repnz
jecxz
hlt
rol
fcmove
cld
in
ds
fcmovu
int3
into
aad
xchg
call
fucom
mov
mov
loop
clc
lret
cmp
cmc
lret
jecxz
aam
cli
add
clc
mov
lock
int
rcl
xor
xor
cmp
int
aas
iret
stc
aas
roll
fsqrt
sti
test
xchg
jmp
in
lret
icebp
shl
cmp
mov
mov
inc
add
add
add
add
je
cmpl
jne
pushl
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
adc
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
mov
lea
mov
mov
sub
and
mov
jmp
lret
aad
fcmovu
adc
mov
int3
mov
pop
jl
addb
jl
std
stc
flds
aam
test
out
lret
rorl
shl
aad
out
cld
sub
xlat
cmp
cld
loopne
fiaddl
xchg
rorb
in
stc
sub
int3
aad
in
int3
sar
sbb
jecxz
lret
lret
out
mov
test
ret
into
vpsllq
cld
cmp
in
sti
std
idiv
cld
sti
jmp
xchg
lret
nop
call
leave
repnz
clc
lds
ljmp
xchg
std
lret
movb
jmp
out
rcl
out
out
fidivs
loopne
lock
cli
jecxz
sti
fcmovnbe
out
loope
in
int
fmull
lock
int3
lret
in
int3
out
out
sti
cmp
cmp
rorb
sti
lret
test
xor
lret
into
shll
jmp
int3
sti
not
repz
fsubr
iret
jecxz
ljmp
out
xor
cli
not
enter
not
and
test
hlt
aas
lret
and
test
loope
ds
xlat
cmp
jmp
xlat
hlt
cmc
out
out
cmp
sar
hlt
lret
loope
addb
into
repz
test
cli
lock
fldl
mov
jecxz
shrb
in
ljmp
ljmp
rcr
movb
xchg
aad
fcmovnbe
cmp
fxtract
cmp
rcr
rcr
hlt
call
cld
roll
xlat
iret
in
lock
sti
shr
ret
ret
aaa
rcl
rol
ftst
jecxz
out
int
call
ljmp
xor
cli
vpaddq
aam
loopne
fucomp
iret
ror
loop
cld
cmc
das
int
out
lret
std
xor
xlat
ljmp
fucomi
leave
mov
test
mov
jmp
aam
icebp
fst
out
ret
aad
hlt
cld
call
lret
in
mov
iret
jecxz
fnstsw
ss
shl
in
cli
iret
sbb
enter
clc
int3
test
in
fstl
sar
ljmp
jecxz
call
hlt
ljmp
mov
xchg
aad
in
idiv
fdivrs
iret
rcl
lret
ss
xor
add
aad
xchg
xchg
mov
lds
cmp
iret
lret
cmp
hlt
lock
aam
loope
loope
iret
xchg
in
jecxz
sub
loope
fcmovnbe
lret
out
into
cmp
cmp
ret
xlat
jecxz
in
iret
jecxz
xchg
cli
jmp
sub
lret
jmp
std
in
jecxz
repz
ljmp
xor
in
cmp
xlat
lret
shr
rcr
rcr
shl
cmp
fcmovnu
aam
aam
out
cld
out
rolb
ror
lds
icebp
div
std
rcl
rcl
mov
and
in
xchg
lret
filds
in
cmp
call
cmp
shl
addl
sti
out
test
mov
int
aad
fxch
fdiv
xor
loop
fimull
movl
not
ljmp
fsubp
aam
call
out
in
fabs
leave
mov
add
ss
das
cli
int
aam
shl
ret
rcl
xchg
loope
rorl
fcomip
leave
cmc
lock
lock
int
hlt
fcmove
sarb
fchs
aam
out
fiaddl
addl
in
in
in
shl
imul
stc
repnz
xchg
fsub
in
mov
ffree
test
cli
clc
int3
lret
cld
clc
ret
fsubp
fiadds
mov
and
ret
imul
leave
out
call
sar
lock
call
jmp
fsub
test
ret
sti
lret
xor
lock
loopne
in
repnz
iret
mov
out
loop
lret
test
iret
jmp
clc
sti
leave
fnstcw
lret
rcl
test
std
test
sti
add
mov
rcr
int3
jmp
iret
lock
cmc
lret
aam
int
rol
jecxz
in
test
sub
fcmovnu
loopne
icebp
incb
and
mov
orl
jmp
rol
aas
ror
daa
jae
lea
pop
mov
jl
addb
jl
ror
out
les
xchg
in
in
into
lret
cmp
loopne
fcmovb
sti
clc
cld
stc
incl
jmp
mov
repnz
out
aad
cmc
fnstsw
fdiv
loope
cmp
repz
mov
sti
fmul
mov
lret
sub
cmp
enter
sar
cmp
sbb
stc
lret
rorl
in
ljmp
int
in
shl
test
out
neg
icebp
mov
xchg
enter
xor
std
enter
cmp
rcr
in
mov
jmp
mov
das
xor
ret
aad
ror
fucomi
cmp
and
les
loopne
mov
test
std
xchg
into
loope
call
repz
std
cmp
lret
xlat
lret
out
aam
cmp
fildl
loope
decb
int
ss
sar
fcomip
or
ds
int
in
or
lock
aam
xor
std
ret
ret
cld
sti
in
fiadds
lock
vpsubusb
fcomp
lds
mov
cmp
mov
sub
cld
aas
dec
lock
repnz
jmp
movl
sar
fcmovnu
hlt
cmc
idiv
stc
out
lret
fidivrl
not
test
xchg
iret
into
mov
rol
iret
cld
push
clc
fcom
fildl
cli
loope
fadds
in
ds
out
call
cli
jecxz
in
add
ret
rorb
in
fimuls
cmc
ss
in
cli
cmp
sti
fildl
stc
add
fsubp
lret
sti
std
ficoms
repnz
iret
aaa
rcr
aad
loop
ret
jecxz
rorl
lret
xchg
cli
mov
loop
aaa
div
ror
lret
call
faddl
mov
icebp
mov
jmp
xor
rcr
repnz
fscale
fcmovnb
div
aam
ret
aam
loopne
cld
aad
sub
iret
fsub
lret
lret
fdivr
dec
cmc
sar
cmc
xchg
out
out
enter
out
cmp
iret
out
repz
cmp
mov
fsubrp
clc
stc
fld
sub
icebp
test
loopne
jmp
fdivr
enter
aas
cmp
aad
repnz
fnstsw
xchg
jmp
ror
in
aad
cmc
lret
xlat
out
shl
aam
test
cld
xchg
dec
out
repz
hlt
into
icebp
stc
xlat
sti
ljmp
fdivp
in
sbb
test
ret
clc
cli
adcb
out
clc
cmp
repnz
into
cmp
rcl
aam
jmp
fucomip
icebp
out
xlat
icebp
loop
iret
lock
cmp
leave
int3
lret
in
jecxz
shl
call
loopne
fsubrp
push
cs
aam
cmp
cmp
out
aas
fnstsw
cli
cli
fucomp
faddp
enter
out
sub
loopne
cs
idiv
iret
iret
leave
aas
fneni(8087
fucomp
loopne
repz
in
cli
fsubr
iret
enter
aam
repnz
out
in
int
aad
hlt
cmp
rol
hlt
fxtract
aam
jmp
sub
mov
hlt
rol
repz
xor
fcom
xor
repz
test
test
sbb
in
mov
mov
call
xor
in
ljmp
sar
clc
loopne
aad
rcr
ret
addl
shr
hlt
xor
xor
shr
cmp
aas
neg
ret
mul
incl
std
in
shr
in
xlat
shl
stc
ljmp
aad
stc
mov
fcmovnb
enter
lock
ljmp
fdivl
aad
cmp
sbb
fmuls
das
aaa
cmp
xor
shr
fxch
sarb
std
cmp
in
hlt
mov
lret
addb
out
ret
cld
repz
aas
aas
fucomp
fildl
stc
testb
out
xor
fcmovu
jmp
icebp
shl
std
into
sar
repnz
fildl
sbb
mov
add
add
mov
movl
lea
jmp
ror
rcl
fcmovnu
ror
and
xor
adc
jl
addb
jl
int3
leave
xchg
out
cmc
out
xor
sub
sub
in
std
in
test
roll
test
out
into
repz
lret
xlat
cmp
lock
not
test
cmp
out
roll
cld
lret
stc
nop
decl
jecxz
iret
shl
rcl
repz
cmp
lock
fst
out
jmp
sub
in
hlt
repz
in
xor
leave
out
sar
loope
std
xlat
ds
sub
iret
clc
mov
jmp
stc
xor
out
cmp
ds
sub
idiv
clc
out
mov
push
fsubrp
rorl
int
leave
imul
leave
cmp
aas
stc
cld
add
and
xchg
addb
test
ljmp
ss
test
sarl
ret
jecxz
out
jmp
lret
int
lret
sub
cmp
aad
ror
loope
sarb
aad
fdiv
and
fmuls
lret
mov
int3
in
ss
xor
in
lock
ret
stc
xlat
xor
enter
lret
fimull
stc
cld
ffreep
out
cmc
std
aam
cmc
loope
movb
orb
xor
sti
sub
cmc
fcmovbe
fcmovnb
loopne
jecxz
repnz
iret
fdivrp
mov
rcl
into
xor
rcr
enter
repz
cli
fidivrl
shl
aas
aas
idivb
repz
ljmp
mov
call
aad
fcmovb
fdivrs
cli
fmul
xlat
in
leave
mov
test
iret
cmc
jmp
int
leave
out
cli
in
rcl
std
enter
stc
decl
int3
idiv
clc
in
enter
out
cmp
aas
sar
out
leave
repz
ret
add
xchg
xor
xlat
loop
cmp
lock
rolb
cld
sub
call
lret
ror
idiv
div
iret
out
shl
hlt
rol
repnz
add
jmp
faddl
vpmulhuw
imul
sti
rcl
ds
cmp
fnstsw
adc
aam
out
ror
mov
mov
ror
repnz
iret
out
incb
cmp
test
mov
cmc
rcl
cmp
sti
xor
flds
sti
cld
lret
not
ss
int
fcomi
lret
loop
imul
into
sbb
xchg
test
fmul
mov
das
jmp
in
in
cld
cmp
std
int3
clc
int3
fdivrl
fildl
loop
iret
les
div
cmp
jmp
call
cli
rol
out
call
incb
jmp
iret
icebp
shrl
stc
call
shl
std
jmp
in
cmp
sti
xchg
mov
aas
shr
loop
int3
test
in
fucomp
loopne
xchg
ret
cli
out
loope
out
fucomip
ret
into
into
mov
aad
enter
xlat
shl
jecxz
sti
call
loop
enter
out
into
div
ss
loope
into
lock
neg
jmp
enter
loope
icebp
aaa
shrb
aaa
rol
jmp
hlt
in
dec
xchg
cmp
in
in
mov
cmp
nop
rcl
out
aam
hlt
fcmovnu
icebp
cmpl
out
xor
int
call
xor
into
vpaddsb
test
in
sub
dec
jmp
and
ror
ljmp
in
int
out
aam
in
xchg
loope
call
call
out
into
repz
shl
test
fdivp
xchg
out
sbb
and
in
leave
int3
sti
out
out
cmp
sar
shlb
into
icebp
out
aam
fisttpll
mov
in
in
clc
enter
std
icebp
cmpb
cmp
mov
in
adcl
out
aam
sub
aam
cmp
lret
jecxz
and
mov
mov
loopne
call
out
xor
leave
into
in
shlb
sti
enter
in
out
icebp
loope
inc
loopne
inc
in
mov
jmp
aam
into
lret
rcr
fstp
les
test
lcall
jl
or
ss
cld
clc
loope
rol
loop
xor
cld
sub
orb
ret
jmp
in
xor
cld
cmp
icebp
shl
cmc
clc
std
cmp
mov
mov
addl
leave
out
xor
aam
cmp
int
in
loop
aam
out
loope
iret
cli
loope
mov
les
fidivrl
int3
xor
ret
neg
fdivrp
call
loopne
shl
fmul
out
int
cmc
sarl
loope
loope
iret
hlt
rorl
loopne
loop
mov
xor
xor
repz
lret
ljmp
rcr
stc
addl
loopne
les
loopne
int3
xor
xor
fsubrp
cmp
icebp
int
stc
fstp
rol
mov
cmp
in
out
int
icebp
fidivl
std
hlt
aaa
fcomi
out
cli
test
out
rolb
xchg
in
out
icebp
filds
cmp
int3
lock
ret
aas
in
loopne
xchg
int3
cmp
fmuls
xor
ljmp
sbb
aas
loopne
cli
mov
test
in
jecxz
and
sarb
icebp
aaa
icebp
int
imul
or
sarb
roll
fsubr
test
xchg
mov
xor
into
ror
aad
aaa
out
shr
repz
loopne
in
xrelease
in
in
in
icebp
not
repz
stc
ror
xlat
fdivp
ds
fistpll
jecxz
in
lret
std
mov
in
in
das
aaa
out
out
int
into
cmp
cld
loop
xlat
fdivp
xchg
in
cli
cld
rcr
mov
repnz
aad
int3
clc
clc
leave
clc
fucomip
sti
lret
aad
fcomp
iret
cmp
fldl
cli
ficoml
shl
enter
cmc
xor
lock
inc
addb
fildl
xchg
xchg
out
leave
vpsrlq
clc
fcom
in
fsubrp
cmp
imul
ret
fdivr
div
mov
ds
icebp
enter
into
cmp
int
sub
cmc
enter
fsubrp
loopne
jecxz
out
shl
lret
clc
icebp
out
xlat
std
out
int
cld
fcmovnu
loop
neg
fucomp
test
mov
in
icebp
ret
jmp
stc
aaa
rcl
cmp
fxch
lret
cld
testb
mov
loopne
test
repz
fcmovnbe
lret
out
cmp
rcl
rcr
xchg
clc
stc
in
shl
clc
into
adcl
imul
ds
loope
into
loop
out
lock
fisttps
ljmp
sti
in
cli
lock
loop
repnz
cmp
rcl
fmulp
fiadds
ljmp
xor
aaa
fcmove
call
iret
std
shl
cli
repnz
neg
in
repz
out
cld
cmc
out
test
xlat
aas
std
pushl
repnz
repz
call
sti
loopne
loope
shl
ljmp
xlat
fcomp
aam
hlt
ret
ret
ljmp
mov
mov
in
xlat
iret
repz
in
fcomi
fld1
sarb
iret
out
jecxz
leave
fmuls
sbb
iret
out
imul
cmc
lret
out
cmp
cmp
std
stc
xchg
leave
in
xchg
fisttpl
stc
shl
int3
lock
call
cli
cld
out
xchg
test
leave
nop
in
xchg
mov
jmp
in
stc
xor
cli
rcr
out
mov
clc
fcomp
iret
in
lea
lock
aad
shl
test
sti
shl
lret
lret
xlat
stc
loope
jmp
call
ljmp
ss
ds
int3
in
into
xchg
mov
fcmovu
clc
mov
out
lock
out
in
iret
repz
out
lock
rcl
aam
xlat
fcomip
movb
icebp
test
xor
loopne
xor
in
clc
lock
icebp
cmp
in
fld
call
out
enter
icebp
hlt
cmc
loop
in
enter
fdivl
int3
ds
fadd
jmp
fcomi
fimuls
out
call
xor
sub
aaa
repnz
aad
sub
fcom
jmp
repz
xor
add
mov
mov
mov
mov
mov
jmp
ret
rcl
rcl
aad
shrl
cs
adc
sbb
add
repnz
loop
cmc
int3
xchg
ret
fdivp
into
loopne
shl
dec
jecxz
loop
fcom
cmc
sarb
loope
cld
int3
ret
frndint
in
rcl
leave
lret
mov
repz
repnz
xor
jmp
aam
test
test
ret
in
ljmp
adc
fucom
xlat
cli
hlt
lret
inc
in
in
clc
jecxz
call
mov
ds
repz
fucomp
stc
lret
hlt
xor
ret
repz
ljmp
xor
out
repnz
in
in
fidivl
hlt
and
std
enter
cli
jmp
mov
out
out
cs
fcomp
cmp
stc
stc
out
fcmovb
xchg
std
int3
std
mov
jmp
std
das
xor
add
inc
rolb
enter
into
xchg
lock
sub
shr
xor
in
cmc
cmp
repnz
loop
lock
fld
call
mov
cli
ljmp
loop
xor
std
std
xor
flds
rcr
cmp
sub
ljmp
hlt
in
shl
jmp
add
cld
rcr
lret
int3
test
int3
decl
lret
idiv
cmp
test
shl
addb
test
xor
ror
iret
aam
sar
repz
in
fistpll
fcmovu
fcoms
jmp
icebp
in
fincstp
fcmovnbe
iret
sar
aad
jmp
fstp
lret
and
lea
ror
out
int3
adc
ffreep
mov
int3
xchg
into
xor
in
out
out
cli
cmc
cli
sub
shr
cmp
jecxz
cmp
jmp
hlt
jmp
int
cmp
enter
shl
out
idiv
in
fcmovnu
ffreep
lock
cmp
into
xor
sti
jmp
in
ret
testl
loop
in
mov
lret
ret
aam
sti
sti
cmp
jecxz
loopne
aam
movl
cld
out
stc
in
jecxz
call
int
jecxz
stc
in
repz
rolb
sub
shr
xor
cmp
out
repz
jmp
cmp
fildl
in
fcmove
in
lret
loope
xchg
repz
enter
fsubr
enter
neg
fucomp
fdivrl
mov
call
out
sar
lock
out
leave
cmp
fsub
xchg
aad
leave
jmp
loop
leave
fsubr
add
shl
icebp
xlat
cmp
cmp
cmp
test
rcr
fisttpl
loopne
out
mov
out
mov
shl
out
lock
out
clc
fldz
faddl
clc
cmc
loop
loop
std
mov
lock
repz
aaa
call
int
test
cld
ret
stc
fildl
adcb
fdiv
ss
lret
std
rcl
test
hlt
in
fildl
in
loopne
int3
xchg
xlat
iret
out
stc
aad
xor
icebp
cmp
loop
vshufps
ret
mov
into
mov
fstp
cs
fldlg2
icebp
cli
cmp
and
repz
fmuls
enter
mov
hlt
enter
call
cli
in
cli
in
xchg
shl
jmp
clc
out
mov
incl
xor
lret
ljmp
rcl
addb
cli
call
call
iret
ss
test
dec
jmp
fxch
jmp
xor
xchg
int3
loop
stc
xor
addl
ret
lret
in
int3
addb
int3
xor
int
into
cmp
stc
xchg
xchg
in
xchg
call
jecxz
out
rol
sti
into
or
cli
cld
out
or
fists
shl
xor
cld
ss
std
fldl
call
jecxz
xchg
loopne
ror
xlat
ret
rcl
cmp
in
mov
jmp
sarb
enter
fidivl
mov
loopne
cmpsb
sbb
jl
rcl
faddp
icebp
in
ret
loope
neg
call
divl
stc
cs
int
xor
shl
les
sar
leave
cli
enter
out
repz
out
leave
shl
lock
stc
cmp
stc
aas
std
loope
cli
idiv
test
mov
lret
xor
cmp
ss
cmp
loope
enter
clc
out
out
out
fcmovbe
test
int3
shr
aam
sub
in
fiaddl
imul
sub
cld
in
rol
ret
call
out
out
out
testb
rcr
out
sbb
fldl
xor
icebp
loop
neg
fcmovne
fcmovnbe
sti
test
not
xchg
in
loop
out
orl
xor
cmp
stc
repz
cld
shr
xlat
fsubp
int3
test
xor
jmp
cmp
aas
rcr
cmc
in
xor
ret
mov
in
ffree
icebp
out
int3
nop
xchg
xchg
xor
in
fnstenv
leave
fsubr
aad
in
xor
fsubr
in
fiaddl
out
icebp
out
mov
std
xchg
out
loope
aaa
jmp
sti
rcr
clc
shr
cld
fadd
mov
into
in
lea
in
xlat
cli
ss
cld
int3
cmc
out
cmc
in
hlt
call
fcmovu
loope
out
out
ljmp
cmp
in
aam
fcomi
hlt
loopne
mov
loop
fiadds
enter
in
fxch
xor
icebp
sar
cmc
xlat
imul
cmp
aad
fdivrs
mov
std
xchg
cmc
xor
in
fucomi
int3
cmp
faddl
out
test
decl
icebp
out
div
int3
sar
sti
ds
xlat
ljmp
jecxz
test
cli
leave
in
xchg
div
int3
in
shll
lock
neg
lock
cld
fucom
repz
in
in
in
shr
call
cmp
test
sub
cmp
ds
out
jecxz
int3
mov
mov
int3
test
ret
ljmp
enter
loopne
roll
mov
filds
lret
xor
sar
clc
repnz
cmp
stc
cld
faddp
out
in
test
loop
xchg
out
fsubp
call
shr
fsub
int
ret
aad
test
in
fmulp
mov
lret
xchg
xchg
rol
xor
iret
icebp
in
jmp
in
out
sar
ret
sti
ljmp
rorb
fld
stc
ret
xor
cmp
fiaddl
vmovq
fcmovnu
jmp
iret
loope
in
cld
cmc
les
in
ret
lret
aam
aas
fxch
xor
into
jecxz
ffreep
xlat
loopne
in
in
in
shl
out
cs
clc
ss
call
xor
mov
stc
cmp
icebp
mov
test
decl
lret
ljmp
icebp
ret
call
jmp
mov
jmp
xor
aaa
iret
sti
ds
loop
shl
shl
testl
xchg
lret
out
stc
leave
iret
out
int
ror
test
call
out
decl
lds
call
jmp
xlat
ret
cld
hlt
rol
clc
loopne
mov
mov
int
into
mov
icebp
out
out
into
aam
int3
cld
int
ss
rcl
and
test
call
lret
in
fxch
xlat
repnz
sti
loopne
in
test
lds
in
mov
leave
aaa
lret
icebp
icebp
out
cmp
stc
ljmp
aad
mov
into
jmp
xchg
jecxz
fdiv
into
out
ss
aas
ror
lock
in
cmc
addl
xchg
int3
sub
enter
cli
ss
in
hlt
sti
in
xchg
icebp
cli
sti
int3
fisttpll
repnz
mov
out
xor
jmp
out
repz
clc
aad
aad
cld
jmp
mov
lret
out
sar
ljmp
repnz
xlat
shl
test
in
call
in
in
out
aam
iret
sar
shlb
mov
add
mov
mov
mov
xor
add
cmp
jmp
iret
leave
rcl
fstp
leave
repz
nop
insb
mov
jl
add
xchg
out
adc
loopne
and
mov
int
lds
lock
cmp
in
xlat
std
leave
dec
mov
aam
icebp
fldl2e
icebp
repz
xor
jmp
vcvtpd2dqx
call
loop
cld
lock
lock
out
call
ror
cld
std
out
inc
not
loopne
cmp
in
jmp
ss
pushl
in
cmp
loopne
into
idiv
cmp
fisttps
in
out
stc
sub
lret
out
stc
cmp
out
ret
fincstp
xchg
ljmp
mov
xlat
into
shll
repnz
fnstsw
or
add
jmp
hlt
idiv
mov
xchg
loop
into
sub
shl
cmp
out
out
into
rcl
lock
add
stc
add
mov
mov
bnd
ljmp
jecxz
into
fdiv
out
rolb
jmp
ret
jmp
leave
in
hlt
in
out
fcmovnu
xor
cmc
fildl
fiadds
test
jmp
sti
ror
std
xchg
das
ljmp
xlat
shl
iret
frndint
aam
ret
rcl
fxch
xlat
xchg
in
out
xchg
loop
mov
xor
cmp
xlat
aam
addl
call
lock
adc
test
fscale
ds
rol
rcr
in
mov
cli
popl
iret
out
fsub
rcl
sti
cmp
roll
fildl
jecxz
filds
xor
jmp
push
clc
sar
fdecstp
test
leave
repz
out
cld
mov
jmp
out
in
loop
cmp
aas
clc
call
test
cld
cld
dec
sbb
jecxz
xor
fcom
clc
div
in
aad
aad
cmp
fildl
std
sbb
cmc
in
in
lock
jmp
in
lret
cmc
in
adc
neg
mov
fmul
std
aad
jmp
out
clc
fdivr
aam
cmp
loope
cmp
call
icebp
sub
ss
cli
ljmp
repz
clc
sub
cmp
add
xor
shl
shl
fistpll
clc
std
ret
call
into
ljmp
clc
cmp
cmp
cmp
out
aam
sarl
in
iret
enter
xor
das
ss
aam
out
sti
in
cmp
hlt
test
cli
repz
filds
out
sub
shl
shll
xor
aad
xlat
fdivp
cmp
loope
fdivr
shl
out
mov
jmp
mov
jmp
loopne,pt
lock
icebp
pushl
lock
rcr
cld
hlt
loope,pt
test
xchg
fcmovb
out
loope
enter
out
stc
leave
out
sarb
sar
sar
cld
rol
out
stc
out
or
xchg
iret
xor
loop
cmp
out
iret
hlt
shl
out
movl
mov
sbb
in
xlat
hlt
aaa
idiv
aam
faddl
stc
cmpb
call
out
cld
xchg
in
xchg
int
xor
xlat
lret
aam
aas
clc
rolb
les
fmuls
sar
lock
shl
xor
neg
cmc
cmp
shl
cld
lret
mov
xchg
int
int3
out
fnstsw
hlt
cmc
loop
div
fcmovnbe
lret
std
mov
ljmp
clc
aad
sarl
idiv
cmp
cmp
testl
rcl
jmp
fprem1
aaa
std
jecxz
cmp
cmp
in
out
mov
lock
lret
ljmp
icebp
xor
fcmovnu
repz
in
hlt
call
neg
jecxz
xchg
addl
ljmp
iret
out
loopne
test
clc
fiaddl
loop
adc
in
sub
repnz
xlat
icebp
sti
cmp
fprem1
cmp
addl
fcmovne
jmp
loop
shr
lock
ss
ror
fxch
enter
rol
test
clc
faddl
add
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
jmp
int
lret
xlat
int
es
jl
addb
jl
call
sti
lret
loop
loope
xor
std
ljmp
test
repz
xlat
enter
xchg
xchg
xchg
repz
fadd
jmp
hlt
cmp
xor
adc
test
clc
hlt
les
fsubr
xchg
mov
lret
in
dec
fucomip
faddl
fucomip
fisttpl
cmc
shl
repnz
lock
out
cmc
cmp
clc
lock
fnstsw
jmp
in
ljmp
in
test
in
fcmove
ss
roll
repnz
hlt
jmp
sti
ljmp
xor
cmp
loop
xor
cld
in
cmpl
in
cmp
leave
call
nop
out
into
shl
out
test
lock
loop
stc
clc
sbb
enter
shl
fchs
enter
xlat
ljmp
std
in
cmp
enter
shr
repnz
test
out
sti
cli
std
fdiv
fcos
test
leave
clc
xchg
mov
call
jecxz
in
aaa
cmp
cmp
xlat
fdiv
sti
ret
sti
sarb
cmp
mov
in
call
fdivp
fcmovne
enter
stc
cld
ds
filds
test
iret
enter
adcb
cmp
cmp
aad
repz
sub
cld
jmp
mov
jmp
fimull
out
fcmovb
in
sti
dec
cmc
cmp
aaa
sar
ret
fsqrt
ret
xor
ljmp
sti
aaa
out
hlt
ljmp
inc
cmp
loopne
nop
lret
mov
in
lock
fcmovnu
lret
fsubr
repnz
lock
mov
fadd
loopne
out
cs
shl
jmp
cmp
aam
into
loope
cld
clc
addl
ficoms
ret
leave
into
lock
ss
idiv
repnz
sub
mov
enter
xchg
out
jmp
jmp
ret
in
iret
test
fadd
loope
int3
in
ljmp
into
lret
leave
int
ljmp
xchg
lret
sub
testb
fsub
xor
shl
sti
clc
cmp
in
cmp
loope
roll
enter
rclb
xor
cmp
aam
imul
ffree
addb
std
mov
mov
into
out
fucomi
aaa
xor
enter
roll
cld
loop
in
sti
lock
call
int3
cli
out
repnz
fcomip
loopne
push
jmp
jecxz
xchg
in
xor
ljmp
cmc
aam
add
out
jmp
lock
into
xchg
jmp
repz
xor
in
repz
jecxz
cmp
enter
popl
loop
int3
xor
cmc
out
imul
cld
filds
xrelease
mov
xchg
shl
xor
xor
in
cld
sub
addb
mov
mov
std
into
loop
mov
test
out
xlat
repnz
xor
cmpl
ret
test
mov
jmp
enter
repz
aas
cmp
aad
call
fucomip
in
fsubrp
in
out
xlat
repz
stc
fsubr
xlat
cmc
sar
fst
rol
cmc
lret
rorl
mov
shl
icebp
xor
out
fbstp
iret
cmp
ret
rolb
enter
loopne
cmc
call
out
xor
shl
xor
shlb
int
fnstsw
test
movb
in
mov
lret
lock
shl
hlt
sar
mov
repnz
xchg
mov
int3
faddp
ret
xor
lock
out
aad
hlt
ret
stc
iret
not
ret
lock
test
into
cmc
xchg
shl
mov
sub
out
aam
cmp
decl
in
out
fsub
faddp
aaa
test
fidivrl
aas
std
into
roll
xlat
loopne
int3
mov
jmp
into
les
rcr
fxch
enter
mov
inc
cmp
jl
addb
jl
loope
mov
int
div
xor
cmp
into
loopne
testl
hlt
fucomi
out
ror
out
out
cmc
xor
enter
cmp
fcom
sar
into
cli
test
or
clc
leave
orl
div
icebp
xor
ljmp
jmp
fdivr
clc
jmp
xchg
xchg
jmp
repz
ret
jmp
cld
into
shl
lock
and
rcr
enter
std
loope
int
test
divl
out
ret
cmp
jmp
int
cmc
fdivr
rol
stc
sar
mov
jecxz
out
xchg
loope
add
icebp
ss
icebp
jecxz
iret
repz
mov
loope
ds
in
into
shl
xlat
rol
shr
icebp
clc
leave
fnstenv
sti
loop
xlat
test
sar
flds
xchg
out
filds
sar
bnd
ljmp
flds
fmulp
xchg
out
out
int
into
ret
std
clc
jmp
mov
cmp
in
fsub
rcr
loope
xlat
cli
loop
call
aaa
stc
stc
repnz
repnz
repz
cli
cmpl
sub
clc
lea
loop
out
xor
out
aam
fnstcw
aad
sar
xor
sbb
mov
xlat
lret
icebp
fimuls
fsubr
fnstsw
cmp
aas
leave
test
cmc
cmc
loop
in
loop
les
aaa
xor
sti
jmp
xlat
loopne
fistpll
div
cmc
repnz
idiv
cmp
lret
out
lret
out
repnz
rol
das
rcl
cmp
in
cmp
loopne
out
aad
cli
xbegin
xchg
mov
into
icebp
xor
xor
cli
cli
int
ds
aad
cli
fcos
filds
iret
lret
lret
iret
into
lock
cld
cmp
fdivl
in
ret
and
stc
out
mov
mov
fiadds
hlt
out
out
cli
clc
test
into
test
enter
sub
xor
rcr
sar
ljmp
into
movl
loope
mov
ss
fnstenv
cmp
xor
cmp
xor
ret
aad
icebp
mov
jmp
lea
jecxz
aaa
ljmp
ror
decl
call
mov
jmp
xor
xor
aas
cli
neg
loop
cli
aam
leave
out
decl
xlat
loope
cs
aaa
iret
lret
icebp
ds
int
loope
stc
out
test
int
mov
mov
enter
clc
cmp
leave
fucomp
inc
shl
cmp
aas
repz
call
in
iret
xchg
mul
rcl
sar
fnop
sarb
test
rorl
in
out
jmp
aam
lret
mul
cld
ss
int3
cmpl
orb
repnz
das
shl
iret
neg
fsubr
cmc
leave
aas
adc
sti
fiadds
orl
and
in
icebp
xor
lret
ljmp
xchg
fcmovnb
leave
fsub
loopne
sbb
mov
fisubrs
lock
cmc
shl
idiv
cli
stc
lock
ds
leave
jmp
popl
in
in
out
xor
fst
xlat
fucomp
out
fsub
loopne
lock
stc
xchg
cld
fiaddl
mov
repz
xor
shlb
xor
fimull
out
xchg
mov
test
iret
xor
out
xor
fprem1
in
cmp
shl
cld
mov
iret
mov
fsubr
rol
loope
xor
fiadds
xchg
les
out
out
aaa
hlt
stc
ret
jmp
enter
out
cmc
jecxz
rol
xlat
cli
in
cli
mov
xchg
xor
icebp
jmp
repz
icebp
std
cmp
shl
test
fimull
xor
int3
in
std
into
faddl
fnclex
div
fcomi
cmp
in
xchg
clc
out
out
lock
cmp
fld
jecxz
out
std
cmp
cmp
cmc
into
enter
mov
xor
jmp
enter
vpsubusb
sub
xor
sahf
mov
add
cmp
jmp
aad
call
repnz
in
loopne
ljmp
test
in
aam
enter
fsubr
cmp
lds
fiaddl
testl
out
ljmp
rcl
cmp
cmp
repz
iret
clc
sti
mov
test
loop
ret
in
in
jmp
iret
inc
out
fdivr
sbb
in
fisttpll
xchg
shl
sub
aaa
xor
cmp
repz
cld
cmp
repnz
faddp
out
orl
incl
repz
in
jmp
hlt
dec
rcr
rcl
rorb
lds
mov
shl
sti
fstp
aam
ret
icebp
fstp
loop
test
in
fsub
out
mov
lea
repz
loopne
xor
shl
test
cld
out
cli
lret
loope
sbb
aad
cmp
idiv
aad
aas
sti
ret
in
add
cld
mov
loopne
out
lret
ret
rol
cmp
fcomp
shl
sar
incb
in
jmp
xor
cmp
xor
loope
jecxz
loopne
roll
cld
leave
lret
mov
xchg
fdivp
imull
repz
std
in
lock
xor
out
cmp
test
fnclex
mov
in
jmp
out
sti
in
out
ds
enter
xor
call
clc
cmp
aam
not
leave
mov
int
mov
leave
fsub
iret
fcmovb
faddp
cmp
out
fld
or
int
mov
into
out
out
enter
repz
xor
out
out
fucom
lret
hlt
in
lret
sti
xchg
in
in
xlat
leave
jmp
icebp
cmp
mul
loopne
shl
test
fadd
fsubp
xchg
ror
xchg
repnz
cmp
std
repz
out
ret
hlt
fsub
jmp
std
int
loop
out
xor
ljmp
cmp
sti
loopne
shl
jmp
out
int
out
out
loope
sub
sarb
iret
repz
adc
sti
repnz
ret
out
fsubr
sar
cmc
int3
in
lock
rcl
xor
shr
icebp
sarb
fsubp
rorb
mov
xchg
decb
hlt
ljmp
hlt
aas
stc
xlat
faddl
clc
mov
fcmovu
leave
mov
in
mov
loope
in
hlt
fcmovne
in
icebp
icebp
fmulp
out
aam
cmp
cmp
out
stc
test
fldl
repz
loope
icebp
shl
repz
cmc
fsubrp
shl
out
std
rcr
fadd
clc
xchg
out
out
out
loopne
mov
repnz
call
xor
xor
xlat
fsubp
in
jecxz
hlt
repnz
fadd
mov
loop
adc
xlat
stc
sti
cmc
clc
aam
cmpb
in
call
stc
ret
std
leave
fiaddl
sub
aaa
in
into
cmp
ss
call
aad
sub
enter
ds
repz
sti
fcmovnb
cmc
rcl
hlt
sti
loop
hlt
out
sarb
fldl2e
testl
repz
loop
call
sarb
out
fadd
out
repz
call
addl
shlb
ret
in
loop
in
lret
repz
xchg
fdivrp
jecxz
mov
cli
out
test
out
jecxz
lret
fnstenv
lret
leave
fcmovbe
aas
icebp
fcos
into
into
and
fdivrp
xor
cmp
mov
loop
lret
fxtract
clc
rcr
cli
cmc
cld
repnz
rol
imul
aad
mov
mov
mov
fsubp
out
sti
ret
std
lret
into
cmp
shl
aad
roll
jmp
lret
jmp
out
imul
xor
repz
aad
shl
cmp
aad
test
jmp
jecxz
fimull
enter
cli
lret
jmp
cmp
aad
rolb
fcmovne
in
out
mov
jmp
int3
cs
rcr
shl
cmpb
out
ljmp
or
cs
iret
fucomp
repnz
fsubr
ret
hlt
clc
sti
cld
test
clc
loope
fxch
nop
mov
shl
into
in
shll
mov
sub
add
mov
mov
mov
movzwl
add
mov
jmp
iret
int3
ror
fcmovu
frstor
movsl
je
inc
push
inc
mov
xor
add
xor
hlt
std
in
fnstsw
icebp
fucom
fadds
loopne
lock
loopne
in
xlat
shl
clc
fidivl
shll
aad
neg
test
fprem
rcl
in
lret
mov
out
shl
repnz
fcmove
enter
lret
loope
add
xchg
iret
mov
out
jmp
shl
fdivr
aas
std
ret
neg
aas
test
test
fcmovnbe
xchg
out
jecxz
ret
xor
in
cld
sar
xlat
cmp
clc
xchg
int
in
into
aad
in
shlb
repnz
shl
aaa
aas
cli
out
cmp
rcr
xchg
rcr
loopne
std
enter
lret
xchg
jmp
imul
cld
icebp
int3
test
hlt
stc
fstp
aad
out
mov
loope
leave
ficoml
ss
repz
fmul
sti
call
adc
sti
sti
clc
rol
in
adc
jmp
fadd
jmp
cmp
addl
shr
leave
out
xchg
xchg
repnz
lock
leave
lock
lret
stc
ret
loop
cmp
mov
std
incb
aad
loop
out
lret
ljmp
fcom
std
aas
and
sti
xchg
xchg
in
out
in
sti
out
cmp
clc
int
aas
into
lret
xlat
cld
shl
leave
lds
std
out
shr
lret
aad
fldln2
icebp
fiaddl
fld1
cmc
fimull
mov
mov
leave
lret
test
aaa
fistpll
rcr
aam
repz
sbb
call
out
jmp
lret
in
mul
iret
xor
xor
cmp
sti
aas
cmp
out
out
push
loopne
lret
int3
out
les
fcomi
rcr
fsubrp
std
stc
loop,pt
incb
lds
out
in
mov
sub
sub
iret
fcmovbe
icebp
std
lock
cmp
rol
mov
stc
call
imul
rol
test
lret
cmp
in
lock
mov
decb
loope,pn
out
cmp
lock
jecxz
loop
test
aas
xchg
leave
lea
fsubrp
iret
xor
adc
sub
fcmovu
loopne
jmp
lret
std
xchg
in
in
jecxz
in
fdivrs
cli
lock
div
icebp
test
sti
test
out
testl
aad
xor
cmp
aaa
cmp
out
lret
loope
shr
cld
ljmp
in
aam
out
call
out
leave
cmp
jecxz
hlt
filds
out
in
in
incb
ss
out
repnz
sti
incb
int
addb
shr
sub
call
repz
hlt
mul
xlat
fld
cmp
clc
loop
sti
iret
fisttpl
fsub
ret
imul
sti
rcr
fcom
div
ret
out
jmp
fisttpll
rcl
aaa
in
hlt
xor
sti
ds
clc
jmp
out
nop
filds
in
xor
fprem1
out
std
ror
stc
adc
imul
loopne
out
out
xchg
mov
hlt
into
ss
mov
jmp
fcmovbe
fcomp
fcmovnu
loope
leave
lea
ror
cld
shl
xlat
cmp
aad
aas
call
out
fcmovu
jmp
enter
xchg
jecxz
out
rorb
jmp
shlb
hlt
int
loopne
cld
repnz
aas
cmp
mov
mov
in
out
out
in
f2xm1
std
rolb
cmc
loope
flds
orb
jmp
aam
out
stc
ss
sti
repz
sarb
out
out
fstp
fdiv
in
lock
aaa
cmc
aaa
ljmp
loop
out
clc
fst
ret
fcomp
test
enter
lock
clc
jmp
xlat
fcomip
int3
cmc
aam
out
fdecstp
fcmovnu
fiaddl
icebp
adcb
ror
xor
lret
hlt
out
jecxz
cmp
std
cmp
sub
or
mov
out
xchg
aas
ljmp
jmp
fisttps
or
sahf
add
add
iret
leave
ret
int
xor
iret
rclb
imul
jl
add
fnstsw
in
ljmp
into
jmp
repnz
stc
int
stc
xor
repz
rcl
in
repnz
aas
hlt
ljmp
std
cli
cld
out
fildll
ss
leave
in
jmp
fdivrl
fcmovnu
aas
stc
out
clc
repnz
ljmp
mov
in
sti
repnz
out
in
fsub
into
mov
test
sub
stc
into
nop
jmp
out
mov
fdiv
xor
icebp
in
into
stc
aas
imul
ds
call
call
xchg
and
ror
enter
cli
hlt
faddl
call
fldl
rclb
aad
shll
iret
call
stc
cld
fsubp
not
ret
out
jecxz
out
out
mov
icebp
ror
jmp
int3
fcomi
cmp
addb
neg
xchg
leave
out
int
fcmovnbe
lret
in
into
sti
cmp
faddp
cmp
ret
incb
jecxz
aam
sti
ror
in
fst
shl
clc
sar
hlt
cmc
out
in
addl
adc
enter
cld
aad
cli
sub
test
fsubrp
mov
in
lret
repnz
enter
aad
lret
int
lret
int3
cmp
adc
out
les
out
hlt
cld
aas
lock
lock
repz
lock
cli
jecxz
aas
mul
in
imul
mov
lret
in
ljmp
out
cmp
fcmovu
hlt
aas
std
ljmp
xlat
std
loopne
into
jmp
xor
int3
in
vmovq
loope
into
loope
clc
cli
clc
clc
in
testl
sub
lock
fucomi
iret
aam
cld
or
shl
mov
mov
sub
out
iret
shr
in
repz
stc
fiaddl
xchg
out
addb
in
fucomp
sub
int3
sub
shl
fistpll
ret
addb
enter
out
out
cmp
xor
out
sti
out
aam
fdivr
aas
shl
aam
incl
test
and
ror
xor
iret
shl
sarb
into
fcomip
cli
out
int3
aas
aad
test
std
sar
loop
int
std
out
cmp
fldt
in
out
aas
shl
ret
in
icebp
aad
mov
lret
out
xchg
xchg
jecxz
xchg
aad
int3
repnz
mov
out
jmp
test
out
call
filds
sub
in
aad
into
repnz
call
sti
hlt
ds
lret
in
xchg
inc
xchg
iret
fadd
out
xor
hlt
std
fcmovbe
ror
rcl
cld
repnz
fsub
out
into
icebp
adc
rol
leave
fprem
aad
jmp
cmp
lock
jmp
int
rcr
into
jmp
call
xlat
jmp
rol
out
sti
xlat
sti
out
lds
loope
ffreep
mov
ret
int
repnz
lret
xlat
xor
jmp
adc
clc
mov
popl
out
int3
xor
fucomp
clc
std
jmp
ffree
aam
shl
stc
jecxz
cld
xchg
in
xchg
nop
and
clc
fnstenv
sti
icebp
sti
hlt
lret
hlt
neg
loopne
cld
mov
test
fucomi
mov
jecxz
jmp
divl
out
lret
lock
sarl
imul
cmpb
sbb
in
out
jmp
mov
loop
test
int3
xor
lock
iret
fcomp
jmp
lock
and
stc
mov
loope
fsubp
xchg
repz
out
ret
leave
fcmovnu
hlt
in
in
cmc
clc
aas
stc
out
aad
xchg
ljmp
rcl
ret
fcomp
out
in
jmp
int
icebp
stc
vpsrld
imul
fiadds
divb
ljmp
enter
std
cmp
test
mov
xchg
fsubr
rcr
ljmp
fcmovu
xor
cmp
cmc
ret
loop
sti
loopne
adc
loop
cli
jecxz
into
into
loop
xor
int3
iret
clc
cmp
aas
fcomip
lock
out
hlt
in
mov
int3
std
iret
xchg
mov
out
xlat
leave
int
repnz
int3
aas
ds
out
rorb
add
sahf
add
add
ror
int3
iret
rol
shll
or
push
sarb
jl
call
loopne
sbb
in
xchg
out
shl
xor
int
in
cmp
lock
lds
and
test
mov
jmp
xor
xor
repz
in
xchg
cli
test
cld
int3
lea
ret
lret
enter
shl
loope
loopne
clc
xlat
loopne
test
jmp
sub
out
out
fyl2x
fcomp
stc
ljmp
rolb
fiaddl
mov
sti
xor
cli
icebp
fcmovne
fmul
shr
clc
in
in
leave
out
fcmovbe
xchg
test
ficoms
ror
jmp
out
fucomp
shl
ret
sar
jmp
dec
rorb
cs
lock
fadds
ds
fcomp
les
xchg
test
shll
shlb
xor
jmp
xlat
cmp
loope
in
fucom
sub
iret
repz
call
cs
hlt
lret
fcmovnbe
fyl2x
xor
repz
xchg
xchg
add
xchg
jmp
call
idiv
fsubr
xor
in
jmp
jmp
in
mov
aam
in
out
ljmp
in
lock
rcr
fsubr
hlt
in
dec
into
xor
iret
into
iret
icebp
sarb
shl
ljmp
cli
leave
aas
loope
int3
call
call
aam
xor
sub
cmc
in
cmp
fdivr
cmp
iret
cmpb
ret
out
xlat
loope
decl
das
in
ror
xor
int3
and
clc
incl
out
jmp
hlt
in
push
lret
aad
in
out
shl
xlat
rcr
in
lock
fsubr
xor
lock
xor
fmul
aad
fadd
div
std
cmc
in
enter
loope
jmp
out
repnz
imulb
leave
jmp
xor
cli
les
ljmp
sub
out
xor
int3
std
add
addb
out
lret
cli
repnz
cli
aaa
out
jmp
out
aad
fstpt
repnz
fdivr
call
lret
fcmovne
repz
jmp
loop
icebp
hlt
xlat
call
fnstsw
xor
push
in
rcl
fiaddl
enter
clc
frndint
into
lret
xor
std
out
repnz
loop
std
dec
xchg
ljmp
leave
jmp
leave
cmp
fucomp
clc
sarl
loop
call
lret
addb
into
rcl
xor
in
hlt
shr
aam
adc
rol
test
out
les
aaa
aad
into
xor
sar
ds
sti
test
shl
lret
fstp
mov
in
ljmp
jmp
call
lret
sarl
testl
xchg
repnz
ljmp
lock
roll
addb
iret
int3
test
loope
repnz
hlt
lret
xor
leave
clc
fucom
sub
addl
test
mov
hlt
out
call
icebp
aad
fsubr
cmp
rol
xchg
testl
shl
clc
out
fstpt
aaa
fmul
cmp
shl
rol
ret
stc
in
cli
enter
iret
loope
ljmp
aas
fidivl
addb
idiv
repnz
cld
std
int
repnz
in
rcl
dec
jmp
std
cmp
cmpb
out
rolb
loop
loop
xchg
in
lret
int
int3
sarl
iret
std
out
ror
xlat
iret
shl
icebp
xchg
enter
loop
lret
xchg
repnz
das
into
mul
aam
in
out
fmul
shr
dec
ss
into
mul
out
int3
int
shl
xchg
adcb
iret
not
cmp
stc
rcr
aad
out
xlat
jecxz
addl
mov
mov
in
fcmovne
ss
and
into
xchg
test
repz
lret
call
out
vmovq
cmp
xor
xor
ret
repz
mov
into
sub
mov
movzwl
cmp
jmp
lret
rcr
int
orb
add
pop
sahf
push
sarl
jl
in
icebp
into
out
xor
vpsubsw
xor
cmp
int3
out
xor
loope
hlt
ljmp
jmp
jmp
shr
xor
fcos
aas
std
test
loope
cmc
shl
loopne
fcoml
std
out
xor
cmc
sti
std
lret
aaa
fxch
into
cmp
cmpb
cmp
enter
ret
out
not
leave
in
shr
fcmovnbe
xor
fmul
ds
sti
hlt
fucomp
and
ret
ror
leave
fimull
lock
xlat
int
repz
fcmovnbe
ret
repz
icebp
addl
ret
in
xor
sarb
shr
aas
repnz
fxch
mov
flds
test
shl
xor
stc
cli
std
in
repnz
into
loopne
shlb
xchg
add
test
mov
xchg
in
cs
iret
out
sub
std
iret
div
into
cmp
aas
fcomip
out
aam
xlat
jmp
loopne
mov
hlt
cmp
lret
ss
aas
fidivrs
loope
std
ffree
fdivr
or
repnz
call
idiv
idiv
aad
hlt
cld
cmp
fcmovb
mov
lret
int3
xchg
ret
xor
das
aam
cmp
cmp
fcmove
ss
in
stc
lock
in
fisttps
std
orb
stc
out
aam
cmp
fiadds
std
loope
ljmp
mov
out
stc
xor
cmc
iret
cli
in
in
cli
hlt
cmp
ret
out
ds
mov
fdecstp
int3
out
lret
fucomip
std
rcl
sub
aaa
cmp
cmp
cmpl
rcl
cld
loop
loopne
xchg
ljmp
xor
aad
enter
lock
cld
rolb
fisttpl
aad
jmp
in
not
repnz
xlat
cmp
ret
and
enter
cmp
mov
jmp
ret
shrl
lret
fmul
cmp
cmp
cmc
cmp
enter
cld
or
icebp
stc
aam
fsubr
jmp
iret
aad
loope
jmp
test
in
and
repnz
out
sub
enter
xor
repz
sti
into
iret
aam
testl
cmc
repnz
ljmp
in
fnstenv
int3
fnstsw
hlt
icebp
mul
mov
ffreep
out
loope
faddl
xlat
in
enter
xor
mul
out
shl
sti
in
loope
out
shl
fsub
xor
out
xor
lock
cmp
int
rcl
aam
loopne
fimuls
nop
in
icebp
repnz
ror
in
xor
jmp
or
repnz
jmp
cmp
ret
std
xorl
in
clc
jmp
std
cmp
repz
sti
jmp
ret
into
or
hlt
mov
xor
xor
ret
cmp
lock
clc
xor
bnd
xchg
int
icebp
xchg
xchg
test
cld
enter
fildl
cmp
in
icebp
std
call
xor
repz
out
aas
cmp
cli
fsub
cmc
std
add
fucom
adcl
ret
jmp
ds
int3
test
sar
jecxz
test
leave
loope
test
cld
repnz
hlt
leave
loopne
xor
aam
aam
cmp
cmp
call
in
out
loope
in
ds
icebp
fsub
lret
pushl
neg
iret
out
stc
aam
jmp
cli
jmp
ror
in
jmp
das
int
std
aad
cmp
neg
cmc
into
cld
clc
repnz
jecxz
out
shr
int3
fdivp
xchg
rcr
ljmp
icebp
clc
in
in
ret
sti
vcmppd
out
loopne
cli
fisttpll
in
xlat
cmp
xor
lock
repnz
int
aas
loope
call
jmp
idivb
xchg
xchg
mov
lret
xlat
aaa
fadd
in
in
int3
shl
call
out
out
hlt
mov
fsqrt
sub
loopne
icebp
enter
in
jmp
cmp
ret
repz
out
fmull
loopne
jmp
shl
aaa
xor
cli
out
iret
idiv
loopne
in
mov
xchg
test
into
jecxz
inc
adc
mov
cld
jg
xor
sub
jmp
rcl
rcr
fcmovbe
xlat
ja
inc
mov
fadd
jl
addb
jl
rcl
loop
aam
cmp
out
fneni(8087
sbb
into
rol
sarl
addl
xlat
icebp
into
sti
xor
out
cmp
addl
loope
rol
std
lret
mov
cld
mov
leave
lock
loop
cmp
call
fadd
sbb
in
test
ljmp
in
jmp
ljmp
cmp
lock
and
ret
enter
or
in
iret
lock
imul
iret
jmp
jmp
shl
cmp
jecxz
out
in
xor
loop
repz
mov
xor
fnstenv
shl
cld
cli
sti
neg
rolb
xchg
iret
loop
enter
xchg
ret
lret
cmp
rcl
sti
ret
fdivrp
fcmovbe
out
testl
rcl
clc
xor
into
lock
faddl
sar
or
xchg
lret
out
xchg
xor
sti
repnz
hlt
cmp
out
div
aas
lock
xor
test
loope
mov
int
xor
lret
cli
aad
call
fcmovnbe
jmp
cld
leave
int3
lret
out
int3
addb
lret
fxch
test
xlat
xor
xchg
jmp
orl
repnz
fdiv
idiv
xor
aas
repnz
jmp
ret
out
shl
ret
cli
fdivr
std
fadd
rolb
xchg
jecxz
call
loopne
mov
sarb
jmp
out
fadds
iret
in
leave
lret
out
addb
lock
icebp
loopne
test
fldpi
ror
in
fcomip
sbb
lret
repnz
rcl
cmp
xlat
aad
addb
cmc
clc
lock
fucomip
adc
cmp
cmc
call
lret
ss
icebp
out
lock
cmc
test
rolb
clc
xor
aad
test
ds
out
fadds
in
ljmp
xlat
in
leave
lret
shl
xor
in
stc
sti
leave
jmp
lret
out
lock
fcomi
leave
aaa
jmp
repz
repz
ret
aad
stc
faddp
ret
clc
mov
out
sti
ss
hlt
jmp
shl
aaa
loope
xlat
test
loop
shl
repz
out
cs
cmp
xor
repnz
ds
fst
jmp
test
cli
ljmp
xlat
stc
xor
jmp
int
sar
int
jecxz
out
ret
lret
ljmp
in
repnz
ss
neg
cmp
cmp
xacquire
clc
out
in
sti
in
xchg
iret
sub
cmc
out
call
fnop
inc
ret
sar
testl
xchg
lret
loop
lock
into
in
fdivrs
cli
out
cmp
stc
int
fdecstp
shr
clc
loopne
iret
mov
ficoms
shl
ror
aam
enter
sar
fmull
or
fnsetpm(287
mov
loop
in
das
out
in
rcr
ss
fdivp
cmp
fxch
fsub
lret
mov
sarb
shr
aad
rcr
in
idiv
clc
xlat
mov
add
shr
jmp
out
shr
cmp
cmp
repnz
stc
aam
mul
out
mov
out
lock
aaa
cmc
icebp
aaa
aaa
repnz
fiaddl
icebp
test
lret
sti
jmp
lret
enter
lds
repz
aaa
jecxz
mov
mov
enter
test
out
fst
shl
out
repz
cld
out
cmp
fimuls
xchg
ljmp
call
fscale
clc
hlt
repz
iret
lock
ret
jmp
or
in
mul
leave
xor
aad
iret
aad
fstp
shl
loop
fstp
fucom
jmp
icebp
out
xchg
in
ret
out
fsub
idiv
repnz
repnz
roll
in
lds
rorb
jecxz
jmp
sub
mov
jmp
jmp
rcl
rol
fstp
aad
cmp
addb
jl
aaa
xor
hlt
xor
ret
rorb
cld
test
sub
xor
in
icebp
ljmp
aad
div
flds
fcomip
sti
jmp
into
fmul
ss
fnstenv
into
ret
fdiv
ret
std
sti
mov
sbb
xchg
jmp
stc
in
xor
out
std
sti
lock
rcr
addb
sbb
add
lret
loop
xchg
out
lret
aad
cmp
repnz
call
test
out
jmp
xor
iret
in
cmp
in
rcl
repnz
loope
clc
xchg
loop
test
cli
cld
leave
mov
add
cmp
ror
lock
ljmp
clc
loopne
hlt
mov
or
cld
cld
hlt
xor
das
call
cmp
cmp
cmp
ret
jmp
mov
fmul
xor
int3
leave
ss
icebp
cmp
cli
incb
sar
ljmp
repnz
shr
fucomip
fdivr
cmp
in
aas
repz
fidivs
repnz
clc
fcmovbe
jecxz
clc
ljmp
stc
aad
cld
idivl
lret
shr
sar
fxch
jmp
test
and
fxch
aad
out
in
int
sar
cmp
xlat
test
or
mov
xchg
sub
in
repnz
fidivrl
in
repnz
xchg
in
mov
mov
in
shl
lret
in
lret
enter
idiv
xlat
int
lock
fdiv
aad
sbb
test
mov
in
into
lret
xor
int
ss
fdivr
xchg
les
leave
mov
sti
out
mov
xchg
in
loope
int3
out
out
out
fsubrp
std
jecxz
fsubrp
icebp
fcomp
stc
stc
cld
cld
iret
in
jecxz
lock
idivb
int
xor
repnz
loop
in
loop
icebp
mov
xor
in
clc
aad
fcomp
fdivrs
test
cmp
fnclex
stc
leave
clc
mov
mov
hlt
imul
sub
in
lret
cld
sar
loopne
int3
fsub
shr
fsubr
into
ret
out
icebp
ret
leave
enter
ror
rcl
hlt
fcom
cld
addb
jmp
loope
jmp
fxch
xlat
jmp
ss
icebp
cli
aam
lock
stc
out
loopne
loope
out
faddp
call
cmc
sbb
fcmovnbe
ret
shl
dec
mov
fcmovnb
int3
filds
xor
cmp
repz
lret
sar
lock
iret
fnstcw
adc
in
int3
enter
out
cmc
bnd
jmp
aam
lret
inc
out
call
in
call
hlt
ljmp
cmp
cmp
in
and
mov
orl
rcll
xor
fcmove
out
and
rcl
loop
test
fildl
xor
xlat
imul
das
fcmovb
xlat
clc
cmp
fcomip
loopne
in
fnstsw
int
addb
rol
clc
repnz
in
cmp
sti
cmp
fucom
rol
call
fcomip
std
out
in
roll
fxam
cmc
aad
cmp
cmp
leave
stc
vpminsw
in
call
ret
aaa
into
cmp
neg
repnz
sub
rcr
into
rolb
shl
cmp
cld
test
loopne
and
clc
clc
in
enter
repnz
xchg
shrl
in
out
clc
das
fcmovu
into
sti
lret
add
fcomip
xlat
sub
test
iret
ljmp
sub
fldcw
out
out
shl
in
shl
repnz
orl
xchg
shr
icebp
call
iret
cmp
rcl
test
xchg
mov
ljmp
jecxz
fsub
call
cmp
aas
clc
shl
xor
testl
out
clc
lret
lock
into
fadd
stc
shl
test
fiaddl
mov
xor
cmp
ss
sar
aaa
ss
lea
mov
jmp
mov
lret
fnstenv
xchg
adc
call
add
int
cmp
faddp
add
in
cld
xchg
lret
call
xlat
in
sarb
clc
cmp
shl
mov
enter
fucomi
mov
mov
test
ds
ret
xor
out
in
jmp
shl
cli
aad
call
stc
jecxz
fmul
xchg
loopne
cmc
hlt
jmp
call
int3
xlat
out
loop
xlat
leave
ret
mov
clc
ljmp
lret
out
jecxz
cmp
leave
aas
call
cmp
lret
ljmp
in
xchg
fcmove
fcomi
clc
shr
int
cmp
out
xor
mov
xchg
filds
out
into
lret
lret
lret
repnz
lds
jmp
hlt
enter
int3
mov
loop
in
stc
xor
in
iret
rcl
leave
iret
aas
int3
shl
rol
cli
xchg
cli
cld
testl
xor
repz
aad
jecxz,pt
cld
fyl2x
jecxz
aam
leave
ljmp
mov
ret
aam
fnstcw
sti
cmp
rol
int3
out
cld
ret
mov
sub
out
enter
loope
cmc
in
shl
shl
xlat
loope
clc
out
call
fdivp
sub
xlat
leave
stc
sti
into
imul
lock
jecxz
in
mov
xchg
mov
ret
mov
jmp
ss
out
jecxz
out
int3
out
fdivp
int3
repnz
mov
int3
mul
fucom
into
jecxz
ret
shr
xchg
xlat
stc
or
jmp
out
xor
lret
sub
test
roll
loop
ret
mov
loopne
ret
fsubr
aam
cmp
int
aas
fdiv
xchg
mov
loopne
fst
loopne
cld
and
not
out
neg
hlt
jmp
sarl
inc
loop
clc
lock
les
ss
fucomi
cmp
jmp
fnstcw
test
fcomp
aad
aam
std
fucomi
nop
icebp
out
std
jmp
out
lock
cmc
xor
aad
fcomp
aad
idiv
in
fcmovnb
out
mov
mov
cs
jmp
out
frndint
loope
loop
jmp
xbegin
xchg
mov
add
cmp
aad
ljmp
sub
out
mov
jecxz
int
xor
icebp
vpextrw
leave
stc
sti
cmp
addl
lock
lock
icebp
clc
out
fdivs
into
lock
shl
ret
cli
test
jecxz
std
idiv
fucomp
int
out
repz
lret
cmc
in
cmp
xor
fldln2
sbb
sti
in
repnz
or
repz
ret
cmp
sub
roll
aas
int3
idiv
sti
cld
test
cs
div
repnz
cli
jmp
icebp
rol
cli
out
std
ret
test
jecxz
cmp
sti
jmp
jecxz
out
hlt
xor
fdiv
xor
ljmp
rolb
in
icebp
xchg
jecxz
loopne
in
fcmovnbe
in
in
not
cld
ds
test
cmc
adc
cmp
stc
lock
in
mov
xor
call
shl
stc
in
div
shl
hlt
clc
mov
loop
ror
enter
xlat
lret
fmul
shlb
std
hlt
sti
mov
idiv
incl
xchg
aam
rcl
clc
sti
xor
cmc
out
cld
stc
aad
shl
vcmpss
jecxz
or
out
xchg
lock
out
neg
int3
fstpt
in
fdivrp
mov
xchg
aam
fsubr
out
in
mov
xchg
loopne
call
rcr
cmp
stc
cmp
cmp
mov
std
mov
mov
mov
ds
int
repz
fdivp
fiaddl
rorl
sub
mov
out
out
clc
test
int
out
rcr
aam
test
xchg
out
loope
cld
nop
enter
fsubp
cmp
repz
xor
cli
xor
xchg
ret
jmp
lret
xor
lret
clc
icebp
aam
xor
aad
aas
adc
cmp
je
mov
jmp
ror
lret
int
loopne
and
outsb
sarl
add
fcomip
ret
cmc
cli
mov
mov
sub
xor
shl
fucom
loope
stc
aam
jecxz
rcl
add
fucomip
frndint
int3
std
xor
cmc
in
out
xor
shr
xor
int
fcmovbe
rol
faddp
in
mov
icebp
clc
lock
out
ljmp
int
adc
aam
rorb
fucomp
into
mov
icebp
aas
lock
aam
out
lret
in
cmp
cmpl
test
fst
leave
test
nop
in
mov
in
jmp
cmp
jmp
sti
rcr
sti
out
int3
test
out
shr
ljmp
test
loope
fadd
addb
mov
cmp
xor
fcmovbe
repz
fcomip
std
call
test
xchg
out
test
xchg
mov
in
aaa
int3
int3
ror
les
stc
leave
xlat
repnz
fdivrp
sbb
test
testb
ror
aam
call
ljmp
div
ffree
cmp
cld
jecxz
lret
fstp
mov
xor
lock
cmp
xor
std
sar
sarl
fdivrp
mov
enter
mov
xchg
ret
faddp
out
xor
repnz
sar
clc
fcmovnbe
aam
aas
jecxz
cld
out
mov
out
fsub
jmp
ret
in
xor
in
shr
xlat
faddp
test
jmp
ds
in
rcr
test
mov
out
cmp
ljmp
loopne
into
hlt
sar
fadd
fcmovnb
out
leave
decb
divl
sub
out
aad
aad
sarl
cld
aas
aas
hlt
cmp
mov
jmp
into
call
shr
aaa
aad
cli
call
stc
testl
in
faddl
ljmp
cld
cmp
jecxz
shll
call
ffree
out
fisttpll
cld
xchg
sub
repz
aas
aad
int
roll
sti
shl
stc
std
mov
cmc
icebp
jecxz
ret
xor
xor
shr
rol
adc
and
ret
int3
icebp
int
mov
loop
xor
aam
enter
ds
icebp
mov
loopne
ret
loop
int3
jecxz
in
rcl
iret
cmc
xor
shl
xlat
sbb
ds
adc
in
fmul
jecxz
int
xor
loop
cmp
into
aad
loopne
sti
idiv
loopne
ds
fdiv
icebp
fucomip
test
sar
imul
xor
aad
cmp
ret
hlt
repz
enter
cli
enter
rolb
jmp
stc
out
dec
sti
aad
aad
loop
cmp
or
orb
loopne
into
int
lock
aas
loopne
cmp
ret
shr
cmp
mov
mov
xchg
out
in
lret
in
fdivrl
cmp
loopne
fstp
fsub
stc
xchg
fmul
out
mov
shl
jmp
aad
hlt
ljmp
cmp
rol
shl
jecxz
loopne
enter
enter
shl
shl
rcl
cli
int
fsubr
repnz
stc
test
sti
aas
add
lock
into
sub
ret
int
in
ljmp
hlt
fdivp
hlt
test
fst
xchg
rclb
in
out
idiv
cmp
sti
cmp
cli
stc
testb
test
mov
shlb
out
cmp
cli
sti
int3
sar
xor
imul
fsubr
addb
hlt
shll
ss
iret
in
hlt
aaa
enter
aad
clc
std
fcom
and
lret
testb
xchg
jmp
ljmp
call
cmp
cli
fadd
in
enter
int
mov
mov
jmp
jmp
xor
out
fsubr
enter
cmp
cld
out
loope
clc
hlt
loope
in
mov
faddl
iret
fldl2e
iret
xlat
xlat
hlt
int
neg
repnz
loope
jmp
xchg
ljmp
sti
std
jmp
in
lret
loope
aas
hlt
loopne
cli
test
out
loop
in
xor
call
cmp
cmp
lock
test
aas
hlt
lret
movl
jmp
jmp
ret
lret
enter
dec
pusha
jae
nop
hlt
jl
addb
jl
xchg
sub
repnz
int
enter
xor
xlat
fidivrl
aas
shl
sar
rcr
int
mov
jmp
adc
shr
shl
cli
iret
into
icebp
cmp
jmp
aas
xchg
int3
loopne
std
xchg
xchg
xor
shl
leave
ret
iret
xor
loope
adc
mul
fdivr
cli
repz
cmc
dec
aad
sti
lret
test
into
jmp
stc
stc
out
xlat
call
jmp
lock
pop
into
aam
shll
aam
repz
std
shl
rorl
std
nop
cld
sbb
das
icebp
jecxz
aad
into
loope
cmp
clc
mul
cmp
sti
fdivr
jmp
jmp
ljmp
lret
ror
int
fldl2e
repnz
ret
add
test
fcomp
jmp
lds
repnz
stc
std
clc
ss
aas
cmp
fcomip
aas
lock
mov
out
iret
test
lock
cmp
in
clc
shl
cmp
rcr
inc
mov
ljmp
in
ss
repnz
test
aad
fisttpl
xchg
roll
loop
cmp
cmp
clc
jecxz
fdivrp
xlat
repz
xor
mov
std
fadd
div
xor
xor
aaa
xor
lret
ret
loop
fimuls
lock
subb
cmp
fucomp
stc
int3
int
aas
rol
xlat
aas
clc
not
sti
xchg
repnz
leave
loope
sub
clc
inc
clc
cmp
aas
fsub
aad
xlat
xchg
fldl
cs
shrb
xor
repz
not
testb
jecxz
out
std
loopne,pn
ss
int
lret
std
shl
fdivr
fadd
fiaddl
adcl
rol
sub
into
aad
into
stc
aad
out
cmc
iret
faddl
fcomp
test
call
fimull
cmp
divb
fcmovne
ss
lret
lret
xchg
call
fmul
out
icebp
and
lock
xor
aas
aam
rcl
add
xchg
jmp
cld
leave
in
aam
lret
in
clc
cld
shr
shr
xor
xlat
icebp
loop
clc
aam
fdivr
fdivr
int
nop
xchg
fcomip
ljmp
ds
idiv
in
test
fdivp
out
clc
lret
loopne
mov
icebp
vpsubsb
xor
repnz
shr
sbb
shr
shr
fcmove
testb
out
faddp
jmp
cli
ss
aas
aad
clc
test
addl
fcom
mov
mov
sub
sti
ljmp
rcl
int3
shr
out
out
shl
fucomip
aad
out
mov
mov
nop
hlt
shr
xor
out
xor
in
lret
lock
test
rcl
fisttpll
mov
cmp
fbstp
divl
idivb
sarb
jmp
call
cld
repz
loop
fsub
out
jmp
mov
aam
clc
ret
aaa
lock
iret
icebp
aad
icebp
in
std
xlat
ret
into
fdivr
jecxz
in
fsub
out
into
fcomip
xchg
lret
hlt
cli
enter
cli
leave
fstp
cmc
neg
cmp
fucomp
fcmovu
mov
fisttps
ljmp
cmp
iret
cmp
neg
movl
int
cmc
int3
in
call
out
rcr
ss
clc
aam
jmp
mov
fildl
in
lock
cmp
clc
ds
rcr
repnz
mov
iret
call
out
loop
not
std
in
ljmp
shl
orl
lret
xor
out
ss
int
icebp
enter
stc
repz
fcomip
fucom
fnsetpm(287
loope
flds
xor
vpor
xor
fdivrp
std
cmp
enter
leave
jmp
std
in
mov
in
out
out
out
in
xor
cli
fcmovbe
loope
rcr
cld
call
fdivrp
test
fucomp
in
ljmp
vpaddb
std
fdivs
aam
fcmovbe
rolb
in
test
add
add
rcl
aad
lret
enter
daa
xor
jl
add
loope
int3
repnz
in
aad
enter
iret
cli
fmul
into
shl
adc
jecxz
mov
std
int
out
into
in
lret
icebp
stc
ds
xchg
sar
enter
icebp
icebp
nop
mov
add
ljmp
shl
roll
rcr
ret
int3
jecxz
sti
mov
ss
clc
rcl
aad
call
fadd
inc
jecxz
inc
decl
test
aad
idivb
div
cmp
cmp
out
jmp
xchg
jmp
call
std
std
cli
hlt
cmp
in
lock
aas
xchg
ret
out
xchg
lret
test
not
ret
fmul
shl
leave
lret
cld
clc
repnz
les
jmp
cld
adcb
cmp
cli
enter
loopne,pt
std
loopne
loop
cld
clc
xor
mov
call
into
rol
repz
fcmove
test
sar
neg
clc
in
in
loope
adc
xor
cmp
lret
cmp
aad
aad
mov
test
in
sti
in
loopne
les
icebp
enter
fcom
in
xorb
rcl
cld
fcmovne
clc
xlat
lret
call
xchg
aaa
das
xor
out
rcr
in
stc
aad
fcomip
xlat
jmp
stc
sub
in
int3
jmp
xor
loopne
shr
aad
int
inc
fdiv
fiadds
sti
call
in
fcoml
xor
into
cli
cld
sar
clc
cmp
loopne
std
mov
mov
repz
lock
out
into
in
lret
fnsave
out
shl
icebp
ljmp
neg
fmuls
mov
out
lock
icebp
fildl
stc
cmp
fisttps
aam
cmc
stc
int
out
jmp
aas
shr
ds
div
sbb
aam
loopne
repz
out
sub
ret
das
cmp
cld
cmp
out
cli
cmp
shr
movb
test
out
mov
loop
shl
jmp
repnz
fldln2
cmp
xchg
cli
ror
fsubr
ljmp
into
hlt
int
iret
cmp
repz
leave
cld
aas
ret
cmp
mul
in
jmp
jmp
shlb
xlat
das
cmc
out
in
shl
sbb
xchg
stc
sti
in
repz
int3
out
cld
aaa
loop
xor
ret
cmc
icebp
cmp
icebp
clc
stc
mov
mov
cli
mov
ljmp
out
fcmovu
cmp
fdiv
jmp
loope
mov
in
xchg
icebp
loope
in
in
sub
ret
leave
ljmp
cmc
xlat
shl
in
test
call
enter
cs
iret
aad
call
int
in
stc
lret
mov
jmp
mov
repz
shl
out
fucomp
fincstp
in
idiv
pushl
cli
aad
aam
ljmp
cli
fsub
cmc
xor
xlat
iret
sub
fidivrl
cli
std
in
cmc
in
into
cli
out
hlt
rcl
lret
loope
div
enter
xor
cmp
into
rol
xor
aas
mov
into
call
iret
aad
iret
sti
cmp
aad
xlat
repz
in
loop
pause
jmp
xor
std
int
rcl
repz
jecxz
jmp
mov
xchg
sub
repnz
cmc
sar
cli
shr
ljmp
add
jecxz
in
call
stc
shl
jmp
cld
std
cmp
and
out
cli
xchg
in
nop
loop
int
int3
fdivrs
jmp
cmc
fmul
int3
sub
in
decl
notb
jecxz
xor
in
jmp
ljmp
cmp
sti
rcr
cld
enter
mov
int3
loop
aam
icebp
aam
iret
call
cmpl
call
or
rorb
lret
std
fidivrl
in
fnstcw
sti
incb
in
in
xlat
leave
clc
out
fst
rorl
xor
movb
jmp
rol
rcr
jbe
es
jl
addb
jl
cmp
in
repz
loop
int
test
out
loopne
sti
fildl
xor
int3
repz
into
rcr
clc
adc
leave
mov
movb
mov
shl
out
cmp
repnz
in
icebp
fdivp
mov
xlat
cld
clc
fsubrp
rolb
out
xor
aaa
xor
out
bnd
add
jmp
in
leave
stc
mov
jecxz
in
fnstenv
adc
hlt
fnop
fst
adc
out
out
mov
fucomp
out
shl
sar
clc
in
aam
cmp
cmp
ror
test
aam
shl
rolb
enter
fistpll
cld
cmp
repz
xchg
sti
xchg
icebp
into
xor
xlat
xlat
cmp
xor
ror
int3
in
xorb
fiaddl
decb
xor
idivl
cld
icebp
cmp
test
in
fcomp
neg
enter
nop
fstp
ljmp
xor
hlt
aaa
ror
repz
loopne
jmp
call
adcl
rcr
cmc
int
cmp
idivb
in
addl
mov
repz
fcmove
in
ret
in
cmc
iret
sti
enter
repz
out
out
mov
int3
in
sub
enter
sti
repz
out
rcl
fsub
rol
fld1
jmp
mov
jecxz
in
hlt
fdiv
jmp
test
test
jecxz
xchg
incl
ret
sti
lret
loope
int
rolb
les
leave
test
aam
ret
in
lret
cmp
lock
loope
into
cmpl
fstp
fmulp
mov
rcll
xor
in
cmp
call
hlt
out
in
rorb
int
mov
jmp
aam
lret
fmul
in
aaa
cmpl
rol
out
loop
enter
fdivr
and
mov
mov
leave
xor
mov
fincstp
int
fcmovnu
int
in
rorl
adc
fimuls
int
ror
repnz
loope
cmp
cmp
not
lock
ror
lds
icebp
rcl
vpsllw
loopne,pt
out
lock
cmp
add
frstpm(287
out
shl
leave
xlat
in
cmp
dec
cld
rol
out
shl
rcr
ret
fninit
mov
in
shl
into
lret
out
call
icebp
sarl
aaa
cmp
lret
fcmovu
mov
into
lock
xor
int3
repnz
repz
fyl2x
sti
sti
fdivr
aas
stc
mov
loopne
in
call
in
xorl
xor
int3
repnz
aas
lret
stc
fmul
into
aam
fsub
fmul
xabort
fucomip
cmc
fstl
sub
sarl
xlat
fistpll
cmp
addl
xchg
adc
iret
ret
cmc
in
out
iret
rcl
lret
cmp
rolb
fsubrp
int
lea
not
divl
hlt
div
xlat
sar
loop
lds
test
and
in
adc
sub
std
test
fnstenv
ret
int
lret
stc
call
int
jecxz
rcr
test
cli
mov
xchg
int
repnz
iret
in
shr
loopne
sti
std
iret
cli
cmc
cmp
ret
rolb
shl
std
leave
in
iret
int
out
ljmp
xor
out
cmp
stc
fstpt
iret
clc
lock
or
out
addl
xor
xor
idiv
cli
loopne
fcmovnbe
aas
ret
jecxz
stc
repnz
test
mov
xlat
lock
ljmp
hlt
out
icebp
loop
aam
in
jmp
enter
mov
mov
out
cmp
cmp
aaa
stc
stc
icebp
sub
mul
fdivrp
fisttpll
lret
icebp
test
fsubr
int
ss
adc
cmc
icebp
cmc
rcr
jecxz
cld
lret
iret
out
iret
repz
xchg
jmp
jmp
cmp
in
std
fld
fucomp
ret
inc
jecxz
xchg
orb
mov
icebp
shl
jmp
lock
cmp
je
mov
mov
mov
mov
lea
add
jmp
mov
fcmovnu
jnp
clc
mov
add
sbb
in
jl
add
int
ftst
std
cmc
loop
loope
and
test
lret
mov
loop
sub
cmp
addl
dec
call
jmp
cs
in
out
into
aam
std
cmp
shl
leave
test
sti
ret
loop
aad
repz
xor
lds
imul
call
test
loop
repz
in
mov
in
in
icebp
leave
shl
xor
out
int3
lret
cmp
fcom
out
shl
sti
mov
loopne
xchg
sub
ret
out
rol
cmp
iret
idivb
icebp
roll
loope
lds
mov
in
rolb
xor
cmp
cmp
fistpll
rcr
repz
test
jmp
leave
ljmp
aam
fmul
repnz
xchg
lret
out
cli
jmp
into
loopne
ss
in
cmp
xlat
rcl
loopne
sti
fdiv
cmc
mov
fmulp
int
loop
out
repnz
in
jmp
fcomi
out
cmp
rcr
les
ret
ret
lret
iret
hlt
xchg
xor
lret
xlat
idiv
ss
aam
ror
aad
test
loop
repz
fldl
cmp
out
jmp
cmp
loope
lds
in
cmp
test
mov
call
into
aas
dec
stc
aas
testb
call
in
xchg
mov
sar
cmp
out
call
out
rcr
mov
cli
ljmp
shr
xor
sti
into
out
clc
cmp
div
rol
aad
out
loopne
addl
std
loopne
fdivp
rcl
aam
cmp
ffree
int
cmpb
div
loope
repz
ret
out
in
xchg
enter
shl
aaa
int3
lock
xor
incl
rolb
loope
fcmovnbe
jecxz
xor
ror
clc
lock
ret
incl
addb
out
leave
xor
idivb
xor
fdivrl
fildl
loopne
cli
xchg
xchg
lock
int
bnd
out
in
neg
int3
clc
cmp
xchg
xchg
mov
loope
cmc
call
fcmovb
hlt
aaa
rcr
int3
cld
addb
sti
cld
in
xchg
lret
loop
mov
out
sub
aaa
std
xor
clc
test
mov
rol
out
jmp
iret
cmc
test
cmc
stc
aad
xor
cli
aad
aas
cmp
cmp
in
in
stc
in
movb
into
xlat
loop
out
in
into
fnstcw
stc
fmul
cld
test
div
ljmp
enter
faddp
in
int3
jmp
cld
std
aam
xor
lock
in
lock
loope
repz
rol
lret
out
fcmovu
leave
cmc
iret
sti
fdivp
cmp
in
in
orl
shl
call
icebp
aam
out
loope
addl
clc
lret
ret
fisttpll
ljmp
fsubr
cld
aam
ljmp
out
leave
stc
xacquire
fmul
lret
cld
mov
out
xor
call
into
cmp
int3
in
std
out
out
xlat
out
fisttpll
cmc
int
cmp
icebp
ljmp
fdivrp
repnz
in
sti
test
lret
loop
jmp
icebp
int3
fstpt
jmp
lock
stc
into
sar
xlat
ljmp
xchg
adc
aaa
test
out
rcl
cmp
in
ds
cli
leave
fcomp
sti
mov
lret
jmp
fsubp
iret
in
cmp
call
out
aam
loopne
in
out
flds
mov
int3
leave
repz
cmp
inc
iret
cmp
icebp
cli
in
addb
loopne
ror
iret
lds
fcomi
hlt
fld
aad
loope
hlt
out
vpsrlq
shl
test
mov
icebp
hlt
into
jecxz
into
out
xor
faddp
iret
loopne
sbb
repz
faddp
mov
shl
clc
lock
mov
xor
aam
neg
out
cmp
mov
jmp
int
xlat
int3
int
cmc
or
divb
loopne
mov
jl
addb
jl
ret
repz
fsubr
or
test
imul
cmp
repnz
leave
shl
lock
cmp
call
faddl
mov
repz
sti
out
cmp
xor
in
fabs
test
call
test
mov
loope
cld
ljmp
fcomip
aad
lock
icebp
repnz
aam
sti
loope
jecxz
clc
xchg
xchg
fucomp
repz
lock
int3
cmp
repz
rcr
out
repnz
dec
incb
shll
cmp
fcmovnbe
jmp
sarb
shr
sarl
fcmovnbe
faddp
test
mov
into
dec
out
aaa
ljmp
repnz
sarl
int3
test
rolb
in
addl
iret
in
iret
jmp
repnz
cmp
in
mov
sub
repnz
cs
stc
lock
fcmove
call
xlat
sti
incb
fmuls
leave
shl
repnz
in
cmp
rolb
call
mov
out
in
repz
cld
cmp
lret
add
in
xlat
lret
fcmovnu
test
loope
xchg
loope
hlt
cmp
ret
fidivrs
cmc
loopne
aas
fcmovbe
stc
rol
rcl
cmc
faddl
nop
not
aad
out
ds
repz
frndint
enter
mov
ret
iret
cli
xor
into
sarl
cmp
clc
loope
fcomp
ret
loopne
rorl
loop
out
ror
stc
lret
fcmovbe
cld
stc
xor
fldlg2
std
shl
repz
cmp
lret
jmp
shrb
out
in
shll
into
fucomip
cmp
ss
cmc
vpsrlq
aad
aam
mov
fcmovne
enter
stc
in
xor
jmp
xlat
cmp
jecxz
loopne
out
xacquire
leave
or
cmc
iret
call
in
hlt
xor
cmp
in
fdivrl
loopne
lock
fxch
ljmp
test
leave
call
shr
int3
hlt
cmc
cld
int
ret
ret
or
and
addb
cmc
in
fucomi
in
leave
ss
and
sar
testl
out
xlat
ror
in
cmc
repnz
cli
cmp
fcomi
repnz
sbb
xchg
mov
xor
das
rcr
int
icebp
test
test
rcr
test
ret
xchg
sub
nop
fmul
cs
icebp
std
aam
rcr
loope
shl
jmp
fsincos
and
out
in
sbb
mov
out
aad
int3
shl
lret
flds
repnz
div
in
mov
xchg
lret
xchg
shl
hlt
cmp
cmc
xor
in
jecxz
cmc
in
rol
repz
xchg
fmulp
out
mov
call
lock
sarl
xlat
cmp
loope
fmul
or
into
call
int
out
in
ret
icebp
fmul
shll
faddp
test
test
mov
ror
loop
test
das
loop
out
aam
iret
cmp
fst
jecxz
in
lock
clc
ljmp
lret
in
cmp
repz
fcomip
int3
fcmovu
div
xlat
test
fmull
in
loopne
leave
clc
ret
std
cli
leave
into
cmp
rolb
imul
sub
xchg
leave
sbb
out
iret
in
lret
xor
lret
cmp
jmp
imul
rol
mov
movb
hlt
aad
jecxz
cmp
leave
aaa
stc
cld
xor
cli
lock
fcmovbe
add
in
cli
sti
loop
test
xor
xor
cli
icebp
int
fcmovbe
xor
std
cli
xlat
jmp
into
add
out
hlt
loope
jmp
lock
cld
stc
into
stc
lret
jecxz
int3
rorb
mov
sti
lds
call
stc
cmp
div
sar
filds
aam
aas
in
mov
test
shll
out
not
cmc
aas
lret
roll
sar
ds
int
xchg
out
loope
lret
ss
aaa
enter
cmp
int
xor
fdivr
xlat
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
jmp
leave
aam
fld
fpatan
cwtl
jp
mov
out
jl
addb
jl
mov
out
mov
shl
in
fscale
repz
lret
ret
fcmovnb
ret
jecxz
loopne
repz
clc
lea
repnz
loope
imul
xor
les
in
icebp
sti
hlt
loop
shl
fsubr
mov
into
in
out
in
loopne
rcl
int
xor
cmp
enter
sbb
aam
fmul
leave
stc
fld
nop
into
repnz
aam
lock
out
sarb
rcr
clc
cmp
stc
rol
call
stc
cmp
in
fucomi
xchg
mov
loop
fcmovne
shl
imul
add
cmp
fiadds
out
out
xchg
sub
leave
repnz
xor
cmc
out
aas
rcr
loope
filds
test
repnz
int3
ret
int3
jmp
rcl
aam
std
sarl
mov
lret
icebp
ljmp
test
enter
cmpl
rol
add
test
int3
ficoms
out
in
fstp
hlt
lret
jmp
in
ds
fcmovbe
stc
int
in
loop
add
hlt
out
out
cmp
fstpt
sar
sti
jmp
loope
sti
out
call
enter
ljmp
sti
idiv
lock
neg
mov
mov
mov
test
cs
repz
xor
out
aad
iret
xlat
rcl
out
mov
fsubrp
mov
adcb
sar
cmp
int3
clc
cmpl
rcl
sbb
cli
xchg
xchg
jmp
in
xchg
nop
in
ljmp
cmp
fldl
hlt
fildl
int3
dec
lret
in
iret
lock
leave
xor
aad
into
rcr
shlb
shl
rolb
and
in
or
ss
cli
cmc
icebp
shl
addb
loope
test
dec
cmp
mov
call
loope
jmp
xor
cmp
fdiv
cli
adc
cmp
fdivr
lock
call
ljmp
leave
cmc
out
xor
xchg
aad
in
dec
xchg
mov
lret
jecxz
sarb
cmp
shr
in
sar
fiaddl
rolb
fcmovne
test
hlt
xor
stc
cmp
addb
stc
loope
adcb
leave
out
rcr
rcr
cli
cmc
enter
rcl
fdivp
idiv
fadds
mov
mov
xlat
into
cmp
xor
loope
rcl
out
xchg
filds
clc
and
mov
mov
shll
sti
xor
in
in
rcl
in
stc
ret
cmp
rol
sbb
jmp
xchg
xlat
aaa
int
aad
aaa
fcmovne
lret
fidivrl
xor
cmc
fdiv
addl
xchg
nop
out
in
lock
fdivs
divb
repz
leave
loope
fnstsw
icebp
clc
std
xlat
in
jmp
leave
xchg
mov
in
in
in
lret
fcmovne
cld
std
cmp
fdivr
cld
aad
cli
test
lea
test
cmp
in
call
fdivp
not
clc
loope
mov
cli
fldl2t
sbb
loop
jecxz
sarb
ljmp
out
shl
fldl
test
std
fcmove
jmp
ror
loop
repz
out
repnz
cmp
idiv
lds
out
cmp
mul
ror
in
cmp
shl
ss
cld
cli
rolb
test
in
into
mov
jecxz
mov
xor
cli
loope
into
fidivrs
in
incl
cli
test
in
in
fsubrp
shl
in
not
ss
icebp
aam
sbb
lea
mov
icebp
aad
xor
aaa
hlt
repz
sarl
loope
xor
aad
sar
loope
fucomip
out
mov
xchg
sub
xchg
das
in
ret
sub
xor
aaa
idiv
into
fldz
out
hlt
cmp
ret
loope
filds
shl
fdivp
in
int
call
rcl
rcl
test
fucom
cmc
hlt
in
mov
xor
shr
ljmp
hlt
or
sbb
cmc
ljmp
jmp
ror
int
fcmove
mov
push
mov
sbb
cwtl
repz
addb
jl
int3
fimuls
shll
fdiv
aad
aas
rolb
repnz
les
loopne
xchg
sub
int3
cmp
fdivp
jmp
ret
ret
ret
fsubr
loope
stc
xchg
orl
ljmp
int
fcmovnbe
cmp
in
cmc
fcmovnb
loope
xchg
in
icebp
mov
xor
aas
cmp
mov
loop
xor
int3
out
xchg
jmp
ss
ret
xor
repz
and
xchg
sti
out
mov
int
lret
repnz
divb
lock
fnsave
out
fcmovbe
aas
clc
cmp
cld
std
ljmp
loope
xchg
xor
hlt
xor
xlat
rcl
repz
lret
hlt
in
repz
filds
orb
nop
in
fsubrp
xor
xor
icebp
cmp
cli
shl
and
fcmovnu
add
aad
loopne
loope
rorl
call
leave
int3
addl
repnz
in
iret
loopne
fcmovne
out
aas
lret
in
std
rcl
hlt
ljmp
xchg
xchg
lea
repz
fdiv
icebp
std
cmp
cld
sarb
test
ret
xlat
test
in
lret
xor
into
iret
in
out
in
aas
xlat
fdiv
hlt
ffree
fcom
sub
repnz
xor
lock
sti
incl
in
xlat
aam
in
nop
mov
mov
ftst
cmp
xlat
test
call
in
jmp
xchg
mov
or
repnz
aaa
fdivr
test
out
cmc
fadd
imul
xor
in
repz
test
fnstenv
out
ds
icebp
div
iret
test
ret
ljmp
decb
into
fcmovb
clc
cli
idiv
call
ds
rolb
jecxz
test
enter
in
jmp
repz
lret
testb
loope
mov
and
jmp
sub
xor
repnz
cmc
fmul
int
test
cmp
mov
call
shl
ljmp
push
clc
rcr
into
shl
aad
jecxz
jmp
sbb
cmc
ljmp
xlat
sti
iret
out
fnstsw
inc
ds
mov
xchg
out
repz
jecxz
in
jmp
in
in
fcomip
cmp
testb
or
jmp
adc
sub
xor
in
fdiv
iret
xor
iret
cmp
test
call
loope
in
fmul
shr
mov
enter
into
in
lret
lock
jmp
cmp
ffreep
fyl2x
fdivrp
rol
loope
jmp
test
loop
cmp
repnz
into
call
aam
xchg
fdiv
ror
call
leave
cld
cmp
leave
lret
out
lret
rcr
cmc
xchg
lret
fsubp
lret
out
icebp
call
stc
fucomp
into
shl
fdivp
fst
fsub
lret
loopne
int
lret
into
fcmovnb
out
cld
cmp
clc
int3
repz
stc
filds
fmulp
xor
rcll
jmp
std
fidivl
jecxz
cmp
rcr
xlat
in
aam
out
mov
orb
iret
sti
in
fdivp
ljmp
testl
mov
xor
leave
sar
lret
lret
fcmovbe
lock
lret
fadds
lret
fstl
div
shr
hlt
ljmp
out
shl
fcmovne
std
decl
leave
int
shr
imul
cs
aaa
cmp
clc
test
out
test
call
fimuls
cmc
out
rcl
repz
lret
cli
lock
repz
jmp
mov
frstpm(287
fcmove
test
loop
in
cmp
aad
cmp
cmp
jmp
fst
cld
imul
cmp
and
fiaddl
ret
xor
rcl
and
stc
cmp
ljmp
fcmovnu
jmp
xorb
cmp
je
mov
jmp
xlat
ror
ror
xlat
fisttpl
lock
pop
cs
addb
jl
jecxz
out
fst
lret
out
int3
out
rcl
loop
jmp
loopne
in
into
rcl
mov
aaa
xor
stc
xabort
fcmovne
sti
hlt
rorb
xlat
clc
loope
ret
fucomip
ljmp
enter
ljmp
enter
cli
mov
into
cld
popl
in
lret
out
lret
repz
rcl
hlt
out
clc
faddl
repz
lret
repz
idiv
cmp
aad
in
repnz
incl
mov
out
out
in
aam
cmc
lret
aam
int3
ds
aam
clc
fisttpll
xchg
xor
xor
iret
out
cmp
sbb
stc
aad
fidivrs
loop
ret
int
rclb
xor
shlb
in
cmp
clc
cmp
mov
mov
faddl
int3
aaa
ror
div
icebp
lret
add
jmp
mov
cli
out
std
loopne
xchg
lock
shll
fsin
aam
cmp
cmp
mov
ljmp
xchg
fdiv
sarl
lret
cmc
leave
fnstsw
hlt
cmp
int3
test
ret
clc
fnstsw
in
in
jecxz
test
cmc
xor
in
repz
aam
cmp
out
xacquire
fsubr
out
test
fdivr
sub
in
xlat
cmp
lret
ds
rcl
aas
test
xchg
out
call
out
jecxz
xlat
ljmp
ds
fisttpl
and
loopne
fisttpll
out
clc
aam
rcl
shl
ljmp
std
repnz
call
mov
into
in
in
xor
int
loopne
cmp
testl
in
leave
xchg
mov
jmp
loope
sti
leave
rcl
in
sti
sarl
cmc
fcomp
les
into
out
repz
aad
repz
into
fmul
jmp
std
inc
lock
stc
int
in
mov
aad
iret
aad
out
imul
cmp
in
test
lret
in
mov
call
icebp
lret
cmc
neg
out
jmp
cmp
cmp
or
adcl
out
rcr
out
cmp
sarb
not
ret
ret
mov
repz
xor
cmp
out
in
fcmovnbe
iret
cld
in
fst
stc
out
out
mov
jmp
call
repz
iret
out
int
iret
enter
hlt
addb
xlat
jmp
clc
ficoms
xor
xor
cmc
cmp
int3
std
stc
sbb
repnz
jmp
mov
int
fcomip
repnz
fdivs
cmp
aas
aam
hlt
aad
enter
or
cs
cmp
out
ror
int
rcr
adc
fidivrl
repz
in
in
stc
loopne
rcr
in
shlb
call
cmp
cmp
shl
bnd
test
fmul
movb
lock
shr
jmp
hlt
repz
icebp
std
out
xlat
fmull
ljmp
jmp
fst
lret
cmp
mov
mov
add
lret
in
out
jmp
cmp
cmp
enter
int3
roll
xchg
sti
mov
imul
not
ss
out
mul
sbb
cmp
loopne
cmp
leave
test
stc
jecxz
lock
fiadds
div
ret
repnz
cmp
cmp
vpavgb
jmp
xchg
mov
ret
loopne
in
int3
ror
fdivrp
fsub
cld
aas
loop
loopne
xchg
sti
iret
jmp
xor
leave
repz
lock
enter
loope
std
aas
aad
test
mov
fadds
repz
fcom
out
cld
push
cmp
loope
hlt
jecxz
fmull
test
rolb
leave
enter
aas
ljmp
repnz
leave
sti
ds
les
icebp
jmp
leave
icebp
clc
aad
call
or
add
add
leave
iret
xlat
rcr
flds
cwtl
pop
dec
cmpsl
ret
movsb
cli
jl
addb
jl
icebp
jmp
rcr
stc
fiadds
fimull
aam
in
cmc
lret
clc
out
std
jmp
xor
in
movl
or
icebp
xor
xor
in
cmp
cmp
cmp
ret
loopne
test
fsub
mov
stc
cmc
iret
cmp
in
call
fdiv
rcr
mov
in
jmp
xchg
out
aaa
out
in
clc
aad
std
enter
cmp
out
ds
hlt
dec
les
in
shlb
into
icebp
cmc
repnz
cmc
cmp
enter
idivl
aad
lock
lret
mov
div
sub
rcl
clc
cli
lock
leave
fucomip
cmp
jecxz
xchg
lret
mov
std
fcmovnb
incl
out
out
xor
xor
lret
stc
into
ret
ds
in
jmp
in
xchg
mov
out
repz
out
int
out
jmp
filds
call
mov
sti
out
orb
cmp
fcom
call
mov
mov
les
mov
shr
aam
xor
in
cmc
cmp
in
cld
aam
aam
leave
lret
jmp
jmp
repnz
sti
cmc
fmul
jmp
add
ljmp
int
ror
shl
cli
out
clc
shr
ss
fadd
fadd
stc
sar
test
lret
cld
out
in
xor
out
sti
clc
idivb
int
fcmovu
ret
mov
fcmovbe
mov
into
in
std
mov
cs
aam
hlt
lock
out
incl
aad
clc
mov
cli
sbb
xor
lret
cmp
hlt
cmc
div
xchg
fistpll
clc
fdiv
mov
xchg
std
loop
in
jmp
fnsave
ljmp
loopne
test
ret
fimuls
lret
ljmp
fdivrp
cmp
lret
fldl
fildl
lock
lds
xor
fdivs
aad
not
stc
cli
fistpll
fadds
xlat
lret
rol
nop
aad
call
cmp
out
aad
iret
repnz
inc
fincstp
fcomip
mov
in
xor
sti
cmc
in
xlat
aaa
fnstcw
cmp
fiadds
mov
lret
iret
int3
std
jmp
lock
sarl
into
sar
cmp
sti
fcmovne
out
ret
repnz
cld
fcmove
test
iret
call
ror
jmp
xor
sub
out
jmp
int
out
sti
mov
out
sbb
xor
out
std
jmp
cmp
cmp
jecxz
int
out
ljmp
shll
cmp
adc
fnstsw
ds
sti
jmp
sbb
lock
enter
cmp
repz
out
fsubrp
rcl
testl
in
int
orb
xor
ss
cmp
cmp
cli
rcl
jmp
testl
enter
xor
cmp
xor
cmp
aad
rcr
addl
in
xchg
xchg
rcl
shlb
shrb
lret
enter
sbb
in
fstp
ljmp
ljmp
out
jmp
stc
in
cmc
int3
rcr
cmpb
cmp
fnclex
orl
in
repz
call
xor
cld
hlt
icebp
fcompp
int3
rcl
into
loope
mov
xlat
fcmovne
fdivr
faddl
xor
iret
cmp
stc
adc
loope
jecxz
fsubr
sbb
call
xor
int
lret
std
ret
int
sti
sti
push
loopne
test
into
int3
xchg
cmc
ror
shl
sarb
out
fxch
iret
hlt
std
cmp
mov
jmp
xchg
ljmp
enter
icebp
cmp
jmp
rcr
fiaddl
out
out
int3
int
icebp
cli
loope
xlat
iret
in
cli
aam
ds
test
adc
clc
faddl
out
call
stc
repnz
out
sar
fcmove
fcmovu
mov
jmp
leave
int
int
int
mov
aam
cmp
inc
sub
jl
in
vpsrlq
xlat
mov
xchg
out
xor
frstpm(287
fstp
cli
ss
sti
cmc
cli
xchg
addb
loope
jmp
std
fisttps
shl
cli
cmp
fstp
iret
aam
loope
fcmovnb
jmp
flds
mov
mov
ret
shll
icebp
aam
in
fdivrl
fld
cld
iret
roll
fscale
lret
out
fsub
stc
rcl
jmp
rcr
sub
aas
fistpll
shl
cld
cli
lret
ljmp
jmp
xor
stc
rcr
loope
sti
int
out
xlat
fidivrs
faddl
clc
test
mov
sub
not
jmp
clc
aas
aas
ret
repz
out
loopne
jecxz
mov
mov
in
incl
xor
lret
sti
cmp
into
cmp
xlat
dec
std
call
mov
shl
in
in
idiv
stc
ss
aam
out
sar
out
fmulp
out
or
xchg
iret
lock
sub
cmp
std
cmp
in
add
sti
push
loope
out
int
loope
loopne
sub
ljmp
clc
cmp
cmp
hlt
cld
stc
test
jmp
in
out
loopne
repnz
icebp
shr
cmp
repz
inc
loopne
frndint
out
mov
mov
lret
sar
iret
shl
out
sub
fildl
ret
mov
mov
cld
mov
shll
lret
int
xor
idiv
test
lock
ret
xchg
jmp
lret
mov
xchg
shr
xor
shll
fcomi
cmp
rolb
in
cld
jmp
fldln2
neg
sub
ljmp
stc
into
aas
fyl2x
clc
loopne
in
test
xchg
in
fxam
lock
cmp
ss
std
idivb
lock
cmp
orb
fmul
lock
jecxz
repz
idivl
jecxz
std
cmc
sti
loope
mov
cld
out
mov
xchg
enter
out
fcomip
enter
in
neg
jmp
jmp
lock
xchg
aad
loopne
sti
loop
fcmovnu
cmp
call
repz
std
sar
test
jmp
sar
test
repnz
iret
rcl
cmp
stc
shr
fucom
out
stc
fldl
test
rorl
xor
xor
call
repnz
filds
test
xchg
loope
jmp
in
xor
cmc
in
repnz
stc
cmp
fiaddl
mov
out
fsub
fsubr
jmp
lret
aam
divb
in
out
rorb
icebp
xchg
rorb
cs
mul
cmp
int
cmc
shl
xor
mov
enter
icebp
in
xchg
icebp
test
cs
in
fucom
fnstenv
and
repz
loopne,pt
jecxz
cli
into
out
loope
xchg
xor
in
ret
xor
fcmovb
fstp
cmp
test
jmp
int
int
lock
iret
enter
das
aam
repnz
rcl
incl
incl
enter
xor
into
in
jmp
cmp
hlt
cmp
fdivr
sti
or
cli
xchg
jmp
ss
std
repnz
stc
loopne
fdivr
int3
ret
cmp
aam
jmp
out
fst
iret
mov
aaa
into
shl
out
shl
loope
icebp
xlat
int
in
repnz
les
cmp
sub
icebp
ljmp
loope
fcomp
aam
xlat
jmp
orb
xchg
mov
ds
jmp
test
cmp
sbb
mov
jecxz
lret
mov
call
mov
ds
iret
in
cmc
cmp
cmp
cmp
sarl
jmp
in
leave
faddp
jecxz
icebp
rorl
fcomp
ljmp
add
xchg
fildl
loope
int3
test
out
ss
out
das
imul
sbb
fcomip
rcr
frndint
in
fsub
std
fucom
fcmovne
out
lret
iret
ror
xor
rcl
cmp
aad
mov
jmp
aad
leave
lret
fstp
aad
mov
sbb
jl
add
ror
call
ficoms
loop
loop
call
cmp
lock
div
mul
out
fsubr
xchg
ljmp
xor
out
shl
hlt
test
jmp
out
dec
iret
leave
out
add
ret
out
int
icebp
shlb
out
ljmp
sar
cli
enter
orb
ret
lock
neg
in
sar
int3
adc
int3
fldl
sar
sti
int3
test
faddl
sar
xlat
shr
fmulp
cmp
repz
cmc
repz
lock
xchg
mov
sti
std
mov
repnz
shl
sub
out
xor
cmpl
loop
clc
incl
xchg
cmc
imull
xor
push
int
rcr
sbb
xchg
cli
in
sub
jmp
in
int
into
out
xor
sarb
xor
loop
out
ffree
loope
mov
out
in
xchg
shlb
iret
fdiv
out
iret
enter
cmc
xchg
fnclex
test
cld
std
mov
or
xor
sti
cli
leave
aad
into
xor
repnz
jecxz
test
mov
int
clc
in
test
nop
fadd
jmp
sar
repz
aad
sti
aam
in
shl
mov
mov
jmp
or
sub
fucomi
int
in
cmp
cli
out
addl
iret
dec
jmp
xor
icebp
jecxz
int3
repz
cld
xchg
mov
out
out
shl
mov
sub
sti
iret
lret
cli
test
ret
loopne
icebp
into
and
std
xchg
mov
test
enter
cmp
cmc
rcr
jecxz
sti
int3
clc
test
push
in
out
sti
xchg
mov
aad
fdiv
cmp
xor
lret
fadds
fcos
aas
call
out
repnz
ljmp
rcl
repnz
cmc
repnz
hlt
rol
rol
shl
hlt
cld
cli
addl
out
call
cmp
loop
aam
iret
repz
sti
leave
jecxz
std
int
fsubrp
out
mov
ret
xlat
cmp
icebp
cmp
fsub
fstp
repz
mov
jmp
in
out
loope
aad
call
out
out
cmc
ffreep
out
aad
ret
jmp
cld
call
iret
shl
ljmp
sarb
sub
ffreep
lret
mov
fucom
xchg
in
shl
stc
shlb
std
in
cmp
cmp
fisttps
std
rol
in
hlt
out
xor
shll
lret
into
cmc
loopne
out
cld
mov
cli
clc
in
mov
repz
in
leave
shrb
cmp
fcmovbe
call
aam
test
test
leave
cld
xlat
icebp
int
out
mov
lret
stc
sarl
call
in
dec
cld
loope
ss
testl
test
loop
xor
shl
sti
icebp
repz
cmp
iret
rol
in
cld
cld
roll
fimull
out
jecxz,pn
hlt
cmp
cmp
xor
out
fcmovnu
mov
fdivr
icebp
out
hlt
test
in
ret
lock
aad
cmp
sar
in
inc
sub
in
std
int
enter
in
out
ret
ss
push
cmp
in
cmp
out
clc
add
lret
loopne
ror
xchg
div
fmul
int
int
cmp
cld
ds
xlat
fdivrp
fiadds
in
xchg
lret
hlt
jmp
call
jmp
ljmp
call
int3
fcmovnu
into
xchg
cmc
out
lock
fucomp
leave
fistpll
ljmp
test
ffreep
into
jecxz
nop
loope
in
aam
xor
cmc
ds
in
shl
ret
out
ret
jecxz
loope
out
lret
das
xlat
jmp
in
cmp
jmp
loope
addl
neg
leave
test
aas
shl
out
aam
cld
cld
lock
cmc
fucom
sar
leave
mov
stc
fmulp
lea
test
sarb
jmp
stc
cmpl
enter
sti
out
mov
mov
mov
add
xor
cmp
je
mov
mov
jmp
rol
lds
aad
aad
lcall
inc
mov
add
out
int3
sar
lock
int
out
cmp
shl
test
cmp
lock
lea
hlt
xor
shrl
call
cmp
out
ljmp
lea
clc
repz
out
sti
xor
xor
roll
mov
in
clc
into
out
adcl
rcr
cmpb
sti
fmul
fiadds
sti
fucomp
loopne
jmp
leave
das
in
xor
cmp
rol
in
lds
leave
test
icebp
mov
out
out
jmp
int3
cmp
shl
aas
cmp
in
fcomp
repnz
loop
repz
clc
out
int3
lret
aad
loopne
cli
lds
aam
test
iret
xchg
sub
into
rcr
xor
clc
ds
ljmp
shl
loopne
cld
iret
stc
adcb
cli
cli
fbstp
clc
hlt
cmp
iret
add
ret
stc
sub
out
fisttpl
fxch
stc
ljmp
jecxz
ret
repz
filds
leave
xchg
iret
xchg
xchg
xor
rol
iret
rcr
loope
fcom
repz
repnz
mul
iret
mov
sub
jmp
fucomi
in
fdiv
out
rolb
lock
aad
lea
repnz
das
fsub
xlat
rcl
sarb
int3
lret
lret
repz
ret
sar
ljmp
rcr
shl
jecxz
aad
int3
into
fdiv
out
shl
xlat
ret
std
sub
mov
std
in
xchg
aam
in
ss
xor
call
hlt
adc
repnz
out
loop
lret
ror
lret
ljmp
stc
into
ds
inc
fdivp
roll
fisttps
xchg
in
in
stc
enter
cmp
cmp
inc
sti
leave
in
iret
xor
std
xchg
stc
xor
aaa
sti
fcmove
cmp
cmp
fcmovne
test
into
in
xchg
sub
mov
xchg
or
in
cmc
rcl
repnz
in
xor
aas
repz
xlat
ds
notrack
clc
lret
fisttpll
repz
mov
ss
lret
lret
ror
sar
cmp
fxch
test
cli
adc
or
test
in
shll
stc
xor
int3
fstpt
stc
cmp
ror
out
sti
aam
out
lret
in
mov
icebp
loopne
xor
out
sti
clc
std
cmp
loope
test
cmp
clc
mov
roll
shr
ret
cmp
clc
roll
out
lds
mov
std
rol
nop
fucomip
ror
in
cld
out
shl
in
fucomi
shl
fsin
xor
enter
cld
xchg
out
int3
in
lret
ss
stc
aam
enter
repnz
ds
out
cld
hlt
lock
idiv
sub
fnstsw
ds
mov
shl
xlat
test
enter
lret
sar
rcl
call
repnz
iret
fldz
xor
mov
enter
dec
fmuls
loop
shl
lret
f2xm1
xlat
fucom
out
std
shr
aam
rorl
fldl
leave
jmp
jmp
repnz
aam
test
aad
lret
imul
mov
loope
lret
ss
cmp
cmp
xor
into
clc
cmp
test
pop
ljmp
jmp
xor
cld
hlt
fiaddl
jmp
icebp
mov
shr
xor
ret
repz
out
inc
xor
in
rorb
loop
call
lret
lock
aad
xor
loope
ret
cli
lock
sti
neg
mov
adc
rol
out
cmp
out
cmp
cmp
ret
out
cmp
lret
loopne
repz
cmc
jecxz
lret
in
xor
lret
repz
mul
stc
mov
mov
loopne
mov
fsubrp
xor
out
sti
out
iret
shr
cmp
clc
xlat
sbb
rcl
loop
lds
sub
xor
add
jmp
xlat
aad
rcr
fstp
subl
jl
addb
jl
call
cmp
jecxz
test
test
stc
fildl
jmp
shl
rol
fdivs
cmp
enter
aad
shl
test
jecxz
jmp
adcl
sti
fcomp
jmp
cmp
rcr
fcmovb
enter
aaa
jecxz
cs
in
stc
sar
shl
hlt
mul
xchg
xchg
int
mov
nop
ror
rcl
xor
cmp
lret
int3
cmc
int3
cmp
xchg
shr
clc
cld
jecxz
mov
jmp
in
xor
in
cld
in
icebp
cld
aas
fildl
out
out
jmp
fcmovu
cli
xor
xor
xor
int
call
ljmp
mov
mov
test
out
loopne
call
repnz
std
call
rol
cmp
xchg
and
nop
sar
ljmp
in
xor
sarl
lock
aam
out
test
jmp
adcl
xor
fucomi
ror
iret
in
rcr
rolb
call
ljmp
int3
call
out
rcr
out
stc
loop
jmp
xchg
xchg
aam
ret
lret
fmul
out
cld
into
addl
fdivr
loopne
addb
iret
ss
clc
stc
ljmp
fdivr
ds
vpaddsw
std
orb
xor
leave
ljmp
enter
into
repz
test
adc
movb
fists
in
cmp
out
clc
fdecstp
lock
cld
loopne
jmp
jmp
mov
ds
stc
neg
int
aaa
cmp
jmp
test
or
int
loope
leave
into
in
xchg
int
ljmp
lret
loope
clc
cmp
repz
out
cli
iret
iret
nop
loop
mov
out
out
call
cld
cmp
iret
ret
xchg
rol
fadd
fimuls
xchg
fnsetpm(287
iret
call
sti
int3
rcr
repnz
fcmovne
std
sti
nop
mov
test
mov
shl
xor
aad
hlt
jecxz
sti
rol
xor
in
fcmove
in
in
aad
icebp
out
jecxz
cli
call
lret
in
out
shl
std
repnz
std
loop
int3
rcll
xor
sti
in
sti
out
loop
rol
neg
rcl
mov
incb
jmp
jecxz
mov
imul
aaa
cmp
cmp
in
int3
aad
repz
mov
inc
sub
loope
xor
xor
jmp
xlat
cmp
loopne
cmc
cld
fadds
xchg
mov
xor
ljmp
into
lock
aad
fadds
iret
loopne
in
xchg
jecxz
das
xlat
not
not
xor
cmp
add
sbb
cmp
jecxz
decl
xor
repz
ss
ljmp
xchg
fdiv
ljmp
mov
xor
repz
xor
cmp
divb
cmp
testl
in
cmc
xor
out
xlat
cmp
lock
cmc
ds
repnz
movl
out
xchg
out
xchg
xor
sub
icebp
jmp
rol
adc
out
cmp
fdecstp
fsub
cld
mov
mov
loopne
mov
loopne
call
cli
cmp
loopne
add
test
xchg
iret
orb
mul
xor
sub
out
aad
ljmp
ljmp
ror
faddp
sti
int3
repz
out
leave
bnd
jecxz
iret
cmp
fsin
jmp
fndisi(8087
leave
leave
icebp
rcr
call
ret
in
int
ljmp
stc
enter
out
out
int3
call
lock
lock
dec
cmp
in
in
into
jmp
jecxz
and
jecxz
adc
in
xor
out
lret
xlat
std
loop
frndint
ret
clc
in
int
ljmp
icebp
aam
jmp
mov
jmp
jmp
ds
leave
fstp
ret
lds
ret
jl
add
ror
xlat
fsqrt
xlat
hlt
rol
fcmovnbe
loope
jmp
loopne
fucom
loopne
sbb
int
loop
lret
ror
out
lret
ds
rcr
int3
fldl
movb
out
mov
aad
aaa
aad
repnz
adc
aad
repz
jmp
lret
jmp
int3
std
mov
hlt
cmc
in
into
lret
shll
cmp
lret
out
fcmovnbe
cmp
out
xlat
jmp
int3
into
icebp
in
out
cld
rcl
out
fcmovnu
rcl
enter
sarb
std
ds
in
in
orl
lock
out
lret
jmp
out
lock
fidivrl
loope
cmp
jecxz
or
shll
aam
call
cmc
loope
clc
iret
incl
std
jmp
test
mov
lret
loope
div
sar
cmp
div
shl
fxch
loop
cli
std
ljmp
xchg
xchg
lret
jecxz
rcl
imul
out
shr
in
rcr
fdivrp
repz
out
add
iret
xchg
in
mov
in
in
aam
out
out
cli
iret
lret
ds
xlat
out
shl
rorb
loope
ljmp
rcr
ret
ror
aad
aam
cmp
out
repz
faddl
or
fdivp
out
mov
lret
fnsetpm(287
xor
sar
lret
cmp
iret
xchg
cld
lret
movl
cmp
ror
in
cmp
sti
out
loope
in
int
out
jmp
lock
xor
in
loope
std
call
out
int
out
test
xchg
hlt
in
aam
repnz
sar
xlat
hlt
aam
out
test
ffree
idiv
fmulp
lret
in
xor
in
sti
rcl
cmp
out
repz
sbb
fxam
lret
jecxz
cmp
jmp
into
hlt
ss
jecxz
mov
mov
mov
enter
mov
lock
das
repnz
les
ss
int
out
faddp
lds
fsts
xor
shl
int3
test
ljmp
xchg
jecxz
int3
xchg
call
xor
aam
fucomp
xor
out
mul
cmp
jmp
into
loope
nop
or
aam
jmp
loopne
cmc
ds
sar
jecxz
fdivrp
call
shr
hlt
loopne
call
xor
and
ret
stc
xlat
and
out
std
ret
xor
loop
xlat
sti
out
std
sar
xlat
loop
aas
out
loopne
aam
fcoms
mul
loope
aam
idivb
std
ljmp
sub
rolb
out
jmp
int
fdiv
ror
iret
out
ljmp
shl
fsub
mov
mov
jecxz
in
rol
xor
das
cld
fidivrl
sti
std
cld
in
ret
into
std
xlat
ret
cmp
xchg
lret
adc
ss
out
fstp
int
rcr
hlt
rol
rcr
mul
out
iret
mov
xchg
int
ficoms
out
aaa
jmp
ljmp
roll
loopne
xchg
or
out
leave
cmp
aaa
ljmp
cli
jmp
ljmp
icebp
loope
nop
leave
xor
xor
lock
jmp
fdivp
div
fcmovnu
aas
aas
ret
ds
jmp
fcmovu
mov
iret
test
out
iret
loop
ljmp
fidivrs
cli
icebp
cli
out
clc
fcmovnu
loop
mov
fucomip
out
out
faddp
ret
out
clc
call
mul
into
fst
cli
jmp
fsubrp
test
ret
les
in
cmp
jmp
fistpll
cmc
testb
fstp
enter
xor
in
repnz
shr
clc
or
fcmovnb
cli
filds
test
iret
xchg
loope
mov
in
lock
cmp
in
hlt
sarl
in
jecxz
rolb
fcomip
out
mov
xor
repz
ds
fld
iret
sarb
cld
fcmovnu
std
out
in
nop
aad
xor
idivb
clc
xorl
jmp
jmp
ror
int3
fcmovne
inc
clc
adc
nop
sbb
and
jl
addb
jl
in
cmp
stc
roll
in
repz
lret
jecxz,pt
clc
jmp
xor
ret
repnz
out
ds
fdivr
fdivr
jecxz
mov
lock
mov
divb
cmc
into
cmp
iret
cmp
loopne
cmp
std
fcomip
xlat
mov
test
out
out
fsubr
aam
out
cmp
rolb
hlt
sti
jecxz
mov
out
fcmovnu
out
cmp
iret
in
cs
int
icebp
cmp
rcl
test
sti
int
ftst
fsubr
cmc
repnz
mov
xchg
test
not
cmp
call
repz
jecxz
shl
test
enter
in
dec
in
jecxz
int3
stc
loop
call
leave
dec
repnz
xchg
hlt
in
lret
test
leave
rcl
xor
idivl
aad
ljmp
aad
mov
movb
loop
jmp
fstp
test
aad
fcmovnb
cli
ljmp
out
icebp
xchg
fiadds
cmp
repnz
cmp
fiadds
aad
int3
lret
loope
out
jmp
cmp
hlt
into
sti
ljmp
ret
repz
in
xchg
mov
mov
rcl
clc
fcom
repz
idiv
stc
lock
les
call
hlt
out
aaa
xor
rcr
shl
ret
fdivp
fdivr
stc
lret
fimull
sub
leave
enter
ljmp
iret
loope
fdivrl
ret
out
inc
fcmovne
xchg
mov
icebp
cs
xor
out
in
lret
sti
fldl
ffreep
ljmp
loope
mov
shl
sar
iret
cmp
ds
cli
test
fdiv
mov
enter
int3
lock
hlt
ret
hlt
rcr
cmp
stc
in
cmc
fcomi
fucomp
clc
mov
call
cld
in
cmc
sub
int3
fcomi
in
filds
jecxz
test
call
sti
stc
fcomip
out
fst
xor
hlt
cmc
out
int
not
jmp
cld
fdivrs
in
call
fists
enter
xlat
cld
out
fdivp
out
sbb
rcr
test
xchg
sti
xchg
clc
mov
lea
leave
loopne
int
fcom
aam
div
shl
xor
idiv
xlat
aam
and
call
call
cmp
out
lret
aas
aas
cmp
loop
sar
lret
fcmove
int3
jecxz
int3
xchg
iret
loop
sub
int3
leave
icebp
shr
fdivrl
out
loope
fincstp
add
mov
hlt
xchg
orb
shl
lock
shl
cmp
out
lret
mul
sub
mov
fnstsw
rcl
in
vpand
aad
std
fucom
bnd
repz
movb
int3
hlt
in
int
idiv
cmp
aad
jmp
adc
test
aad
out
xchg
jmp
loopne
cmp
ret
xabort
aad
int3
loopne
repz
mov
mov
loop
xchg
out
loopne
loop
repnz
xlat
lret
std
cmp
xchg
jmp
ds
rorb
out
call
rcl
cmp
clc
sti
hlt
jmp
aam
leave
loop
iret
mov
aam
out
lret
in
lock
idiv
cmp
sar
in
jmp
out
enter
ljmp
xor
fnop
cmp
loope
aam
loopne
jmp
rol
sti
mov
out
nop
cmc
aaa
iret
rcl
out
stc
ljmp
jmp
test
lds
stc
jmp
out
test
rcr
neg
in
fldl
cld
fadds
stc
out
and
shl
loop
xor
stc
shr
enter
clc
iret
lret
sbb
hlt
out
fcmove
loopne
in
fsub
loopne
lret
out
mul
jecxz
xor
aam
inc
sti
cmc
test
fsub
xchg
sti
jecxz
rcr
mov
xlat
xlat
loop
ret
sti
cmp
lret
fnstsw
repz
roll
jmp
xor
in
aaa
clc
lock
icebp
cmc
cmp
inc
clc
mov
mov
mov
mov
mov
pushl
call
mov
cmp
jmp
lret
leave
aas
lret
int
pop
push
icebp
stos
inc
xor
lcall
call
les
repnz
icebp
loopne
rcl
ljmp
fdecstp
sar
jmp
mov
out
lret
loopne
in
xlat
enter
mov
out
sar
out
incl
cld
clc
test
test
cmp
xor
enter
icebp
icebp
sti
loope
out
int3
jecxz
cmc
fst
mov
leave
addb
nop
xor
jecxz
jmp
fucomp
cmpb
jecxz,pt
or
in
shl
xchg
rcll
hlt
ret
not
jmp
test
repz
cld
loope
loopne
loopne
xchg
repnz
jecxz
jmp
out
out
ss
lock
test
rcl
test
xchg
lret
cmp
jecxz
in
lret
aaa
sarl
cmp
std
in
out
cmp
filds
out
into
icebp
out
das
ljmp
lret
fadd
rcr
cmp
shl
cli
sub
cld
loop
icebp
in
enter
xor
fxch
ret
int
rcr
fucom
jmp
ljmp
out
out
mov
aaa
out
rcr
repz
in
fdiv
repz
in
cli
test
into
shrb
in
aaa
ljmp
xlat
xor
rcr
xlat
testl
ret
fucomi
stc
cs
cmc
fmul
fmulp
icebp
test
les
mov
rorl
jmp
repnz
rcl
out
iret
fistpll
loope
orb
cli
out
out
xchg
lock
lret
int3
in
in
testl
repnz
rolb
jmp
mov
lds
cmp
iret
lock
lock
icebp
xchg
out
mov
std
loop
out
jecxz
aad
xor
ror
cmp
sti
cmp
sti
cmc
in
aad
fsub
in
fnstcw
mov
fsts
ds
out
fld
fdivl
std
icebp
ljmp
repz
cmc
fldl2t
in
lret
iret
cld
loope
out
ror
out
call
cmp
fsubp
fcmovbe
fstpt
loop
fdivr
shl
aam
fsqrt
fiaddl
sub
imulb
cmp
ss
int3
sub
cmp
icebp
out
and
ljmp
loopne
ss
leave
out
cmc
repz
int3
int
cmp
stc
fmuls
enter
aad
stc
sub
out
xor
cmp
hlt
idiv
filds
fxam
int3
mov
jmp
sub
aam
std
xor
cli
sti
iret
xor
jmp
ret
fsubrp
shrb
iret
xor
aad
sti
ss
testb
mul
and
sti
clc
out
cli
cli
xchg
fucomp
pushl
in
hlt
lock
ror
sar
filds
fchs
mov
ljmp
cmc
filds
out
in
cmp
fstp
iret
cmp
int
fcmovb
fdiv
jmp
mov
sub
loopne
in
xor
aam
sti
xor
repnz
cmp
std
add
fsubp
lret
test
out
ss
shlb
fcmovnu
iret
cmc
cmc
sar
int3
ret
jecxz
call
out
sbb
hlt
repz
out
das
int
cld
fcmovb
iret
jecxz
sbb
clc
repz
xchg
subb
neg
repz
lret
shl
flds
xlat
std
test
nop
jmp
xor
jmp
out
aad
test
fmull
loopne
loop
fcoml
cmp
aad
div
repz
jecxz
fucomip
sar
loopne
leave
or
cmc
repnz
in
cmp
cmc
aad
fildl
xlat
in
loope
mov
repnz
xchg
out
shr
xor
xor
cmp
out
jmp
cld
sarb
mov
out
in
sub
sub
out
xor
cmp
sarb
stc
aaa
sar
stc
stc
loope
mov
jmp
out
hlt
shl
xor
icebp
ljmp
loop
test
sbb
hlt
ret
fistl
in
shr
jmp
aad
stc
xlat
aas
rolb
test
jl
decl
jmp
iret
iret
ror
ror
xlat
fnop
and
xor
int
arpl
jl
add
sbb
add
fcmove
fcomi
repz
fcmovbe
in
test
cli
cli
loopne
xchg
jmp
ljmp
lret
cmp
std
ss
out
lret
and
aas
mov
repnz
out
ljmp
cmc
repnz
aaa
jecxz
das
aam
int3
xor
out
xrelease
enter
clc
mov
hlt
jmp
in
bnd
out
in
jmp
std
and
lds
std
cmc
ljmp
les
aad
xor
out
fcom
out
shl
rcl
filds
jmp
mov
xor
into
ror
fldt
sarb
in
aad
in
sar
loop
cmp
cli
mov
int
test
nop
lret
ljmp
cmpl
jecxz
rcl
cmp
out
mov
repnz
idiv
shl
in
cmp
ds
fidivrs
sbb
ds
mov
sti
or
ss
jmp
lret
repnz
in
in
fimull
loopne
jmp
ret
int
jmp
cmc
out
iret
iret
clc
stc
leave
fxch
sub
jmp
icebp
ret
cmc
fmul
int
cmp
and
push
inc
call
fsubp
out
mov
call
aaa
test
icebp
call
shl
test
loope
xchg
test
out
int3
orl
imul
fsubrp
sarl
rcr
rorb
fcmove
xchg
orl
xor
fcmovbe
cmp
cmp
cmp
fdivrp
call
das
cs
sarb
cli
stc
aad
int3
fcmovne
fadds
test
mov
fldpi
xchg
icebp
fdivp
cmc
xor
cmc
sti
cmc
cmp
out
call
cmp
repnz
leave
fildl
nop
lock
test
in
std
out
repz
clc
testb
stc
stc
sub
fldl
int
repnz
cmp
lret
cmp
cli
adc
hlt
xlat
fnstcw
xchg
fsubp
ljmp
leave
enter
stc
lret
cmc
lock
loop
repz
fisttps
cld
aam
xor
xor
call
out
lock
xchg
inc
shl
cmc
cli
out
in
int
test
mov
out
repnz
sti
rcr
in
lret
clc
sarl
sarb
in
fcmovne
int
lret
xchg
ds
not
ljmp
hlt
rcr
les
roll
xlat
enter
ljmp
hlt
sti
loope
cld
xchg
fmul
fucomi
ljmp
xchg
xchg
xor
iret
rcr
shr
lret
call
icebp
add
shr
ret
les
iret
ljmp
fcomi
cmp
out
ljmp
mov
in
xchg
out
test
int3
stc
out
xor
test
loop
jmp
in
icebp
icebp
fstp
fsub
shl
xor
loop
sarl
cs
stc
loopne
or
in
aam
std
lret
xchg
int
and
xchg
out
rol
sar
sti
std
in
aad
cld
cmp
ret
sti
test
movl
xchg
into
xor
ljmp
into
out
shr
adc
stc
in
xchg
lret
out
orl
into
call
lds
call
jecxz
out
in
loope
iret
out
jecxz
clc
cmp
xor
xlat
in
fst
idivb
xlat
fdivrp
fucomip
fdivr
test
jmp
test
int
lret
ss
out
lock
loope
loop
repnz
clc
fmul
fabs
lds
out
call
call
cli
rcr
loopne
enter
in
int3
in
out
rorb
in
sti
in
aaa
ljmp
rcl
idiv
hlt
fiadds
mov
sar
shr
in
call
loope
clc
sarl
aam
repz
jecxz
in
cli
mov
decl
div
xor
enter
rol
cmp
icebp
shl
in
loopne
ljmp
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
mov
jmp
xlat
enter
fcmovbe
cmp
rolb
fisubl
jl
fisttps
loop
xor
sti
lret
fcomp
cmp
loope
rcr
stc
cli
loop
fucomip
in
in
mov
call
lret
ds
ljmp
std
in
sti
clc
into
xor
shl
shl
shrb
ljmp
fcmovu
out
hlt
xchg
rorb
fdivrp
out
out
xchg
hlt
ss
lret
shr
neg
jecxz
out
out
mul
testb
sti
rol
out
int3
hlt
into
out
fcmovne
clc
fscale
not
stc
xlat
fcmovnbe
out
jecxz
call
jmp
repz
lret
ret
aas
aad
mov
in
incl
nop
xchg
lret
cmp
lret
fdivr
ror
xor
ret
repz
ljmp
sub
call
lret
stc
stc
out
repnz
out
lock
in
test
mov
enter
loopne
fadd
ss
lret
cmp
xlat
ffreep
xchg
roll
in
loopne
test
mov
das
jmp
clc
fcmovu
icebp
cmp
cmp
aas
rorb
cld
and
ror
cmp
lret
out
hlt
cmp
ret
ret
call
loope
fiadds
out
in
rcl
out
xor
cmp
rcl
ror
out
add
in
mov
xchg
decl
icebp
in
loopne,pn
clc
in
aam
int
in
rcr
aad
test
ret
test
xchg
adc
lret
cmp
int
in
icebp
fcmovnu
iret
cmp
out
clc
mov
out
test
shl
shl
int3
enter
xor
icebp
repnz
vpsubq
clc
cli
in
mov
in
lock
repnz
xor
lret
fmulp
repnz
into
fidivrs
cmp
xchg
fsubp
test
sbb
call
cmp
cmp
cmp
std
test
clc
xchg
jmp
leave
ror
xchg
xchg
lock
idiv
cmp
fcmovnbe
rcr
not
loop
leave
mov
mov
cld
xchg
in
out
out
iret
cmc
fincstp
in
rcl
rcr
enter
fsubr
fucom
xlat
std
xchg
loop
call
fldl
cmp
in
shl
stc
cld
sti
loope
into
sbb
out
in
sti
int
loopne
repnz
les
lret
out
shl
sti
fdivrp
aaa
fldl
sub
leave
sti
xchg
lret
repnz
out
out
in
xor
rol
cld
aas
repz
in
mov
out
lret
jmp
cmp
iret
out
cmp
fstpt
movl
xchg
jmp
xor
repz
into
stc
stc
lock
fstp
cmc
in
aas
testl
out
clc
lock
aam
icebp
into
repz
lds
lret
jecxz
roll
xor
repnz
shl
out
icebp
out
cmp
les
lret
out
test
ret
repz
cmp
xor
fiadds
mov
filds
or
std
repnz
in
cmp
cmp
cli
cmc
jecxz
xlat
sti
xlat
faddl
out
xchg
ljmp
into
rolb
repz
not
cli
mov
in
in
mov
xchg
leave
aam
hlt
jecxz
cmp
in
cmp
in
adc
out
mov
cli
xlat
lret
mov
cs
jmp
std
in
lret
aad
fstp
in
xlat
fiadds
les
aam
sub
fmul
aaa
rcr
std
in
cli
cmp
rcl
in
test
lea
ret
shr
leave
aam
xor
fnstenv
fsin
cmp
add
out
shl
or
stc
repz
loop
imul
iret
int
cmp
lret
repnz
rcr
out
dec
mov
adcl
cmp
cmp
ror
add
cmp
icebp
enter
and
xchg
jb
add
add
or
mov
sub
mov
sbbl
push
inc
jmp
aas
lret
lret
xchg
das
shlb
add
jecxz
fisttps
cs
in
hlt
incl
loop
std
ffree
testb
lock
out
in
ret
iret
lret
fxch
hlt
lret
ljmp
mov
iret
into
repz
test
xor
lret
jmp
in
ds
loop
cmp
iret
rol
xor
test
test
clc
iret
jecxz
jmp
out
sti
out
jmp
fmul
faddl
cld
fsubp
ljmp
ljmp
idiv
cs
lret
sar
fcomi
adc
sti
mov
mov
loope
xchg
mov
test
xor
cs
shl
xor
into
fdivrp
not
cld
shl
ret
repnz
lret
lret
test
cli
xor
fcomi
adc
in
int
xchg
loope
jmp
fldl
lret
xchg
out
xor
fcom
hlt
call
fdivrp
jecxz
out
ret
xchg
jecxz
fucom
shl
loope
icebp
stc
sub
int
call
cmp
cmp
test
ret
call
nop
rcl
mov
xor
int
in
fcmovnbe
sar
iret
adc
cmp
adc
fadd
decb
into
aaa
clc
aaa
out
stc
cld
fsub
int
into
hlt
fcmovnbe
ffree
fsub
sti
std
lret
fmulp
out
nop
xchg
hlt
lds
out
aaa
jmp
fdivrp
loop
shl
addl
cli
cmp
sti
xor
fdivr
int
shr
jecxz
xchg
test
iret
xchg
repnz
subl
cmp
jmp
sbb
in
mov
rolb
in
lret
std
cld
xor
xor
adc
iret
in
xlat
test
out
in
orl
mov
ret
rcl
call
int3
iret
cmp
test
out
sti
jmp
loope
fmulp
iret
ror
lds
in
out
in
jmp
fnsave
std
call
test
test
lock
loopne
out
std
iret
repz
cmc
int3
cs
xor
cmp
jmp
ss
ret
icebp
test
lea
xchg
aaa
lret
xor
ror
fcomi
shl
idivb
cmc
ffreep
clc
in
int3
mov
shl
xchg
ljmp
out
jmp
neg
repz
cld
rorb
cli
nop
lock
and
cmc
lock
stc
ljmp
cmp
icebp
loopne
jmp
mul
in
call
lret
shl
rcl
cmpl
out
repnz
test
out
mov
lret
mov
in
das
ss
sub
xlat
out
jecxz
fxch
out
and
add
xchg
enter
in
sti
aaa
int
clc
fmul
lret
std
roll
loop
int3
loop
xchg
loope
ret
in
sti
repz
fidivrl
repz
testl
das
repnz
sti
fucomp
stc
ljmp
ret
jecxz
loopne
incb
out
cmc
loop
rcl
in
icebp
out
ss
icebp
iret
out
fcmovne
out
clc
div
loopne
clc
xor
jecxz
test
mov
int
out
fcom
call
div
loopne
fucomi
adc
repz
neg
clc
test
in
ret
ljmp
out
std
test
test
mov
iret
out
cld
std
or
fbstp
xor
stc
ret
rcr
fdivrl
fiaddl
icebp
lock
idiv
mov
incl
xor
aaa
ret
cmp
call
test
enter
std
popl
aam
mov
clc
cmp
test
neg
enter
stc
ljmp
loopne
shl
lret
iret
loop
cli
aas
cmp
out
hlt
lock
test
out
cld
ret
out
loope
lock
shl
jecxz
fnstcw
filds
aas
out
xchg
mov
popl
ljmp
iret
cmp
xor
ljmp
into
in
mul
std
cmc
mov
subl
xor
jmp
ret
lret
ror
lret
sub
sahf
in
fcmovnu
push
xchg
adc
jl
idiv
stc
dec
loope
rcl
xor
in
clc
aad
int3
int3
int
ret
shr
shl
fucomp
fsubr
std
lret
lret
rorl
xor
fldcw
clc
fdivp
loopne
out
cld
hlt
xlat
ror
std
fsubr
leave
mov
test
shlb
int
cli
sub
xchg
out
jecxz
sar
lea
lret
cmp
clc
icebp
sar
fdivp
fsubp
fcmovnbe
loopne
in
xlat
filds
fucomip
ret
jmp
fdivl
not
hlt
call
xchg
fdivr
cld
mov
lret
in
aas
xor
in
int
out
int
enter
rolb
cld
cmp
jecxz
jmp
loop
rol
out
cmp
aaa
xlat
fcmovbe
jmp
aas
loop
jecxz
flds
in
mov
lret
int3
iret
into
sarl
int
xor
iret
cmp
aas
lock
fptan
loope
lea
imul
int3
fmuls
xor
fnstsw
testb
stc
sbb
addb
loop
loop
iret
cli
icebp
repz
loop
loope
or
addb
xor
xor
icebp
enter
aas
fnstcw
adc
ljmp
int3
xchg
shrl
aad
ret
jmp
stc
fnsave
adc
aas
mov
fstp
xchg
fisttpll
stc
leave
rol
rcl
aaa
lock
fmull
or
incl
xor
xor
aad
fstp
loopne
xor
idiv
out
rcr
xchg
loopne
fimuls
icebp
out
lret
imul
clc
fcmovnb
fcom
iret
repz
out
jmp
addb
fsubrp
shr
out
xlat
xor
xor
repnz
jmp
repz
shl
sar
ret
lret
in
mov
fnstenv
cli
jmp
cmp
rcr
fsubp
aam
hlt
int
mov
test
out
in
fcmovne
into
fildl
in
loop
mov
mov
test
icebp
loope
ljmp
xor
rcl
fsubr
xlat
cmp
clc
loop
testb
loope
xchg
lock
in
out
in
cmc
rcr
fiadds
rol
addb
sti
call
jmp
out
sti
cli
out
int
cmc
loope
test
std
xchg
int3
call
xchg
sub
cmp
fbstp
in
sti
jmp
in
cmc
repz
enter
ftst
dec
cld
jmp
cmp
xor
out
stc
xlat
xor
icebp
neg
cmc
out
repz
neg
out
ljmp
aas
ret
fnsetpm(287
iret
std
hlt
cmp
ret
sti
out
ds
fdiv
add
aam
loopne
xchg
ficoms
int3
fnop
jmp
call
lock
fld
cmc
xchg
mov
mov
shlb
leave
xor
aas
in
sti
fistpll
xchg
xchg
cmc
sti
clc
xchg
decb
loope
das
fcmovnb
aaa
shr
xor
xor
cmp
ret
vpextrw
test
faddl
ljmp
out
ror
repnz
ds
cld
rol
test
in
rcll
shrb
int
dec
cmp
roll
orl
hlt
xor
ret
cmp
lret
cmc
sarl
faddp
ret
in
dec
div
lret
cld
repz
xor
ret
xor
cmp
jmp
cmp
stc
fidivrs
repnz
xchg
in
nop
loopne
in
ret
in
jmp
aaa
out
in
xor
into
in
shr
shl
fdivr
mov
lret
aad
aaa
shl
leave
fcmovnbe
repz
aam
shl
hlt
in
sti
xor
mov
mov
shl
ljmp
in
in
loop
lock
fmul
sti
incb
in
in
lds
out
cmp
aaa
cmpl
je
jmp
iret
aad
aad
aad
aad
mov
sbb
test
flds
jl
out
ret
sti
mov
or
jecxz
xchg
iret
loope
imul
call
xlat
clc
stc
repz
jmp
clc
shl
lret
cmp
enter
in
lret
loopne
lret
jmp
in
int3
enter
fmulp
aas
out
int3
out
loope
fistpll
std
mov
loopne
in
xchg
call
cmp
adc
jecxz
fcomip
jmp
mul
ffree
fdivp
out
aam
repnz
out
das
cli
cmp
shl
repz
ds
in
pop
fmul
repz
lock
idiv
jmp
xlat
cmp
filds
xlat
loope
int3
test
leave
mov
out
test
lret
cli
leave
into
ljmp
fnstsw
iret
loope
ret
out
loope
lock
fldl
into
f2xm1
aam
lock
stc
int3
shl
loopne
fcmovb
testb
out
repz
mov
fidivl
shr
xlat
cmp
sub
roll
fsubr
enter
std
jmp
call
cmp
leave
ljmp
rcr
loopne
lret
loop
jmp
or
not
xor
int3
lret
jmp
cmc
test
xchg
in
mov
int3
leave
fisttps
xlat
cmc
sub
call
xor
aad
aas
int3
call
loope
jmp
xchg
vpmulhw
sti
rcl
out
fdivr
icebp
repz
in
sar
enter
mov
cli
dec
mov
loop
aaa
hlt
lock
jecxz
icebp
idiv
faddl
fdivr
in
jecxz
xchg
cli
or
aam
int3
cmp
clc
div
lret
cld
aas
cmp
fucomi
in
lret
test
rcr
out
rcr
in
in
lret
rcl
fistpll
ret
call
imul
out
sti
lock
xor
stc
cs
fcmovb
xlat
rcr
cmp
mov
test
iret
jecxz
in
mov
ds
fsub
jmp
lock
loopne
fstp
repnz
fldl
ljmp
mov
ror
xor
aad
lock
lret
test
jmp
cli
incl
rorb
sti
int
fidivrl
iret
loop
ffreep
add
test
icebp
enter
jmp
xor
les
loope
icebp
fdivr
fst
repnz
in
int
iret
int
leave
xor
fxch
sti
out
sar
cmp
shl
test
mul
xchg
movl
xchg
mov
call
and
int3
and
cmpl
ljmp
in
sarb
in
jecxz
aam
neg
cmp
ret
roll
lret
rcr
ljmp
shl
sub
fstp
xor
idiv
aad
sti
fimull
lret
repz
repnz
lret
fnstenv
in
aam
iret
jecxz
loopne
and
lret
hlt
loope
call
sub
jecxz
int
into
cld
repnz
sbb
inc
ret
testb
int3
fildl
shl
icebp
jmp
xor
cli
out
cmp
cmp
stc
cmp
xlat
loope
fadd
fsin
testb
xchg
sub
cmp
loopne
lock
fsub
loopne
call
loopne
adc
loopne
rcr
leave
sarb
idiv
out
out
cmp
rcl
lret
int3
leave
cld
sti
mov
cld
aad
shr
fdivrl
ss
fstp
into
ret
fcmovnbe
cmc
fucom
ret
xchg
rol
loop
xlat
xor
cli
fidivrl
call
loopne
xlat
in
jecxz
icebp
loop
xorb
repnz
fcmovbe
les
xlat
cld
out
rol
incb
mov
cs
in
lret
xor
in
loopne
test
jmp
in
fdivr
jmp
in
test
cmc
shl
in
xor
into
cmp
int
repnz
roll
or
loopne
xchg
xor
xor
xor
xlat
jmp
mov
mov
sub
subl
xor
movl
cmp
movl
jne
xor
jmp
ds
ret
ds
jmp
inc
inc
mov
jl
add
fneni(8087
xlat
rcr
stc
idiv
cli
mov
into
lds
in
in
cmp
in
mov
test
lret
lret
mov
fimuls
sar
lock
fdiv
ljmp
repnz
orl
mov
lret
xlat
fdiv
mul
cmp
ljmp
jmp
in
mov
icebp
mov
ljmp
icebp
neg
stc
rcl
aas
jecxz
loope
mov
lock
ljmp
lret
out
xor
fidivrl
cld
cmpb
sar
cld
cld
cmc
fcmovnu
jmp
in
rcr
int
in
int3
aaa
in
jmp
sti
rcl
cmp
shl
sti
mov
into
xchg
leave
in
xor
cmc
out
hlt
pushl
out
ror
repnz
cld
leave
leave
ret
in
loope
out
jmp
ljmp
aad
addb
rol
xor
mov
rorl
out
in
xor
fcmovu
lret
cmp
loopne
test
stc
jecxz
into
xchg
cli
mov
loopne
leave
rol
cmp
out
sbb
lret
fdivrp
cld
jmp
shl
xchg
in
jmp
out
in
idivb
int3
into
adc
cld
std
lds
icebp
mov
out
cs
out
not
sti
cmp
adc
loopne
rol
fcmovnu
in
fsubrp
sub
sti
jmp
into
idiv
fst
fdiv
fadd
sbb
repnz
test
fdiv
in
icebp
out
out
cmp
loopne
cld
test
addl
std
shl
shl
xor
leave
sti
out
rcl
cli
adc
icebp
fucomp
aas
loopne
ret
fimull
rol
test
ljmp
fcomi
call
rcr
ret
rol
fucomip
int
ret
xchg
xchg
out
out
xor
call
leave
xlat
cmp
std
sar
ret
aas
cmp
jecxz
loopne
fdivp
in
adcb
loop
int3
int
out
in
jmp
rcr
repnz
shl
mov
orb
lret
cmp
fxch
int
int
cmp
incl
ds
lret
cli
lds
shlb
lret
cmp
lret
in
ror
cmp
fcmovbe
in
fstp
add
xchg
in
fsubp
ret
jmp
cmp
out
fnstsw
in
int3
in
repz
test
lret
hlt
in
loop
cmp
call
rcl
jmp
loopne
mov
mov
xchg
lret
call
ror
cmp
ret
clc
test
sti
jmp
lret
in
icebp
out
xchg
jecxz
aad
ret
cmp
out
fcomip
jecxz
idiv
repnz
xchg
call
vpmacsww
sar
stc
into
repnz
loop
loopne,pt
aam
ffreep
fisttps
orl
lock
ror
loop
lock
xor
clc
add
lock
in
fsub
fcmovu
aaa
jmp
loopne
ss
cmc
mov
inc
in
dec
call
loop
xor
aaa
xor
xor
in
rcr
icebp
lret
xorb
fcomp
flds
fmull
fmul
jecxz
out
stc
out
cmp
aas
ror
test
rcr
ds
jecxz
xchg
out
xchg
in
sub
xor
imul
loope
shl
jecxz
loopne
xchg
int
xor
nop
mul
stc
shrl
cmp
fucomi
aaa
cmp
std
mov
test
in
loopne
fiadds
fucomip
enter
aaa
stc
out
cld
fiaddl
aam
movl
aad
shl
cmp
stc
shll
stc
ret
fcmovne
loopne
mov
sub
rol
div
div
leave
std
clc
into
jecxz
aad
sar
cmpb
sti
repz
icebp
jecxz
ds
fmul
mov
add
jmp
mov
andl
xor
jmp
ds
rcr
fcmovbe
rcl
aad
sbb
pop
test
jl
flds
jl
fxch
in
loope
cmp
roll
cli
xchg
and
fmul
sub
fxch
lret
in
in
out
out
ffreep
clc
int
fxch
test
fcomip
in
aaa
mul
xor
cmp
xor
cmp
test
or
fimuls
xor
in
out
in
in
cli
jmp
lock
xor
ds
repnz
cld
les
jecxz
fisttpll
shlb
rcr
std
rol
in
shr
shl
loop
lret
adcl
aad
lret
sti
cli
jmp
sti
adc
in
in
sti
leave
out
loope
int3
icebp
xchg
int3
lock
in
cmp
xor
ljmp
int3
repz
jmp
mov
icebp
out
out
jmp
out
cmp
cmp
sbb
aam
hlt
aas
int3
test
into
shr
xor
stc
hlt
leave
leave
cmp
xlat
loopne
std
lock
sar
mov
leave
loopne
test
lock
jmp
jmp
aaa
iret
cmp
aam
fadd
rcr
ret
out
or
cmp
ret
jmp
lret
cmp
sar
in
test
call
ljmp
mov
ror
xor
in
fcmovb
incl
cli
cmp
ret
enter
out
repz
lret
hlt
shr
aam
not
test
in
ds
test
cli
leave
faddl
int3
imulb
out
leave
cmp
div
cmp
cli
cmp
hlt
in
int
jmp
loopne
shl
hlt
enter
clc
xor
cli
fnstsw
repnz
std
sbb
frstpm(287
mov
cld
xchg
out
shr
out
lret
sub
into
cmp
neg
hlt
std
fadd
fcomp
cld
out
cmp
int
int
xchg
fsub
int
out
cli
sub
xlat
cmp
ror
sbb
mov
decb
out
loop
repz
xor
ss
ljmp
stc
xchg
in
aas
cli
int
stc
ljmp
sar
aaa
fnstsw
out
sarl
lret
hlt
cmc
out
ds
shl
test
repz
loope
cmc
xor
or
add
jecxz
std
in
lret
test
aaa
mov
fstpt
cmp
cli
into
out
adc
cmp
mov
jmp
xchg
mov
into
loop
loop
icebp
in
ss
in
fnstcw
shl
imul
call
test
xchg
int
mov
icebp
loop
out
stc
lock
repnz
repnz
addb
jmp
ljmp
out
fldl
out
xor
cmc
lret
std
test
cmp
rcl
aam
stc
call
loope
cmc
divl
in
out
fcmovu
cmp
cmp
les
mov
test
jmp
jmp
lret
fucomi
rcl
lock
fpatan
mov
sti
testl
xor
test
iret
cmp
fiaddl
fadd
rcl
jmp
sub
mul
fdivrs
hlt
in
sti
fsubp
lret
xchg
cmc
mov
cld
fdiv
cmp
test
call
rol
hlt
lock
out
int
fmul
incb
jmp
loope
in
in
out
loop
jmp
aad
rol
int3
aad
aad
fneni(8087
ljmp
sarb
clc
flds
imull
jecxz
out
ss
into
cld
loop
ret
idivl
stc
repnz
cld
mov
out
movb
lock
ret
clc
out
into
sar
xor
fcomip
cld
in
hlt
test
vpavgb
test
fists
ret
xor
sub
out
in
iret
repnz
testb
cld
fucom
clc
sti
sti
orb
fmul
rcl
rcl
out
xlat
loop
icebp
in
call
jmp
lret
lret
jmp
jecxz
cmp
lret
cmc
aas
ds
in
lret
std
cmp
xchg
stc
out
enter
add
mov
mov
xorl
jmp
ds
aam
aam
aad
inc
dec
push
pop
pop
push
dec
xchg
cld
mov
jl
loopne
stc
lock
icebp
xor
cmp
into
shl
fiadds
iret
int
iret
loope
xchg
hlt
iret
xor
aaa
cli
ror
out
leave
cmp
cmp
test
cld
lock
fdivr
int3
jmp
cmp
into
shlb
int
loope
cmp
xchg
jmp
orb
jmp
loope
enter
cmp
rolb
out
aam
fildl
shl
iret
xor
jecxz
cld
aaa
out
movb
hlt
sub
lret
out
cli
in
call
mov
sub
lret
int3
in
fcom
shl
out
fcmovu
shl
cmp
into
xchg
shr
cmp
xor
out
lret
cmp
stc
cmp
loopne
repz
lret
lret
jecxz
nop
xchg
aad
xor
fdivs
aaa
cld
jecxz
sarl
hlt
xchg
cld
in
lds
rolb
xlat
hlt
in
hlt
cmc
in
not
icebp
hlt
sbb
repz
fcmove
cli
fdivr
into
stc
icebp
xchg
out
repz
fxch
in
in
rcr
hlt
repnz
ds
leave
call
out
icebp
repz
jecxz
out
shl
fcmovne
ss
xlat
fcmovnu
out
loop
leave
mov
xor
jmp
iret
into
mul
jmp
repnz
icebp
int
repnz
adc
in
loopne
stc
mov
fsubrp
ret
lret
stc
aad
fbstp
ret
cmp
fsubp
ds
in
in
xchg
icebp
jmp
jmp
shl
ffree
aas
xabort
aam
xchg
mov
out
xchg
out
in
call
stc
cmp
cmp
ffreep
icebp
idiv
loop
aam
jmp
mov
ret
xor
aam
out
icebp
in
idivl
out
fsubp
into
aam
cld
hlt
mov
call
xchg
ror
jmp
ror
aam
out
repz
xor
in
loope
ret
ljmp
leave
call
ss
in
cmp
int
fcomp
test
jmp
fmuls
loop
rcl
into
xabort
stc
into
into
out
jecxz
clc
fcompp
test
test
std
out
in
iret
cmc
lret
aam
lock
cld
stc
imul
fucomp
xor
stc
in
rcl
leave
mov
mov
imul
lret
xor
into
xor
out
cmp
icebp
aad
xlat
aad
lock
enter
addl
in
enter
out
enter
aam
movb
std
fsubr
shr
cmc
orl
cmp
cmp
repnz
loope
jecxz
not
jmp
xchg
test
out
xor
mul
ffree
loopne
addb
iret
fcmovnbe
out
enter
idivl
fcmovbe
int3
repz
shl
out
iret
clc
fiadds
fsub
out
imul
loopne
shr
jmp
out
xor
aas
repz
mov
jecxz
fcomp
faddl
ror
xor
xor
cmp
into
jecxz
fdiv
in
icebp
in
test
out
out
out
aad
shlb
xor
fcomp
out
fsubp
leave
in
into
out
loope
xchg
mov
call
sub
mov
cmp
cmp
cs
xlat
ljmp
icebp
ret
fsub
cmp
out
lret
out
sub
leave
int
fcmovnbe
fucomip
cmc
adc
fstpt
clc
cmp
in
loop
test
int
out
shlb
shll
shr
cmc
aam
in
lret
aam
shl
vpaddusw
loope
lret
jecxz
call
in
ret
stc
clc
cmc
cmp
aad
filds
addb
out
jecxz
loop
ss
out
ror
icebp
fdivrs
fdivrl
rcr
loope
out
mov
out
out
aam
stc
ret
shr
cmp
xor
sbb
int3
cmp
idiv
int3
enter
call
jecxz
lock
icebp
std
call
loop
fdiv
out
jmp
testl
fs
add
movl
jmp
mov
xor
or
sub
add
jmp
ret
aad
fstp
int
ja
imul
pop
inc
jl
flds
jl
roll
sub
out
xor
out
jmp
repnz
jmp
mov
xchg
mov
lea
repz
lret
call
repz
lock
xchg
xlat
cmc
hlt
in
lret
fmulp
test
fimuls
call
aaa
cmpl
cld
lock
mov
rcl
xchg
mov
jmp
cmc
ret
stc
sti
div
incl
xchg
leave
xchg
call
stc
aaa
cmc
shl
neg
shl
loopne
fdivp
rol
leave
ret
lret
clc
in
fsubp
icebp
in
repz
fdivrl
xor
repnz
vpinsrw
in
out
xchg
mul
xlat
div
fcmovbe
sti
call
test
std
xlat
mov
out
call
cmc
loope
aaa
test
int
cmp
sar
adc
test
rorl
rcr
out
mov
xor
xor
repz
incl
cmp
cmp
repz
cli
int3
out
lock
xor
iret
jmp
ljmp
rol
loop
lret
loope
fdivr
enter
hlt
mov
jmp
out
aad
lret
xlat
testl
xchg
fmuls
lret
aad
xor
das
lret
fcomip
cld
out
cli
cmp
testl
cmc
ds
shl
jmp
aaa
int
clc
rcr
std
out
shl
out
rcl
fucom
in
cli
ljmp
mov
repnz
lret
iret
shl
cmp
in
fcomip
mov
idiv
xchg
cmc
jecxz
call
rcr
test
aam
repz
repz
mov
sti
call
mov
call
in
repz
xlat
cli
stc
out
mov
loope
mov
adcb
iret
stc
cmp
aam
iret
cmc
stc
out
cmpl
ljmp
int
test
fdivrs
ljmp
or
ret
ffreep
enter
cld
fcmove
xchg
xchg
lret
jecxz
int3
out
cld
std
fucomi
aam
iret
clc
in
sar
div
jecxz
mov
test
hlt
xlat
jmp
iret
int3
ljmp
cli
xlat
test
ljmp
rol
xor
incl
xchg
xor
sti
sti
ds
addb
xlat
shr
lret
idivb
fildl
repnz
mov
test
rcr
mov
xchg
fsubp
sub
shr
in
fdiv
clc
enter
loop
out
cld
sbb
aad
mov
out
in
ljmp
fcmovnbe
out
in
fucomp
adc
rcl
rol
roll
ror
lret
int
in
aaa
sti
aam
enter
cli
into
cld
in
cmp
xchg
rclb
hlt
mov
leave
fcomip
fst
cmc
fdivrp
cmp
aam
aas
jmp
in
xchg
in
loopne
loope
cld
ret
out
fdiv
xor
sti
jmp
enter
out
clc
sti
fcomi
movl
in
icebp
repnz
ljmp
call
repz
rolb
in
decb
hlt
lret
lret
int3
fst
cmp
aad
cmp
neg
out
cli
ret
ret
jmp
in
sarl
aaa
fcmovnu
stc
cli
into
div
sarl
lret
call
in
mov
aad
stc
rcr
sti
ss
repz
rcr
xlat
cmp
jecxz
aad
ret
out
into
mov
xchg
das
das
aad
in
iret
ljmp
out
out
rcr
out
fidivrl
sti
out
adcl
in
out
sarl
enter
in
loope
shl
std
stc
loope
idivl
loopne
icebp
and
mov
test
out
out
xor
out
aas
icebp
loop
cmp
out
ror
addl
int
sub
sar
fdivr
int
repz
cli
cmpb
test
fcmovu
aam
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
pushl
call
jmp
mov
mov
jmp
iret
ror
fstp
xlat
ret
dec
or
inc
jl
flds
jl
aad
in
enter
std
xchg
int
xor
cli
shl
lock
aad
sar
ret
repnz
sti
ret
lret
in
xchg
add
jecxz
clc
sub
cld
int
lret
into
cli
adc
loop
mov
dec
loopne
xor
xlat
enter
ss
call
cli
in
rcl
loope
fiadds
mov
cmc
out
ret
xor
cmp
repnz
fcmove
out
into
repz
cli
in
sti
lret
neg
ljmp
repz
cmp
cmp
enter
jmp
cmp
ljmp
mov
hlt
lock
cld
jmp
fst
xor
std
repz
in
shl
enter
jecxz
cli
cld
repnz
jmp
loopne
ret
sti
neg
jecxz
lock
out
out
aam
out
loop
iret
in
out
out
loop
out
xlat
rcl
rcl
ret
jecxz
in
int3
int
in
xchg
shl
ror
xor
aam
repnz
in
xlat
loop
flds
std
ljmp
shrl
int3
repnz
ljmp
std
les
mov
std
in
stc
leave
leave
loop
icebp
fmul
iret
hlt
lock
std
fdivr
aam
rcr
sarb
repz
cmp
clc
enter
out
xchg
cmp
cmp
lret
jmp
rcl
fcom
test
mov
sub
cld
out
xchg
lret
lock
out
out
ss
into
cmp
hlt
shl
repnz
imul
orl
les
aam
aam
fcom
xlat
ljmp
test
sti
cmp
fucomi
in
xchg
out
out
shrb
aaa
in
lret
ror
cmp
ljmp
sar
in
cld
sti
in
decb
in
cmp
icebp
cmp
sub
call
in
cli
in
cli
mov
int
stc
in
in
repz
std
fdivrl
fcomi
repnz
incb
out
xor
repnz
iret
stc
clc
roll
mov
cmc
in
xor
aad
fnsetpm(287
xlat
fdivrl
cmp
lock
in
mov
icebp
xchg
loopne
divl
sub
jecxz
shl
ljmp
aas
ss
clc
repz
mov
repnz
fisubrs
clc
cmp
aad
cmp
idiv
roll
repnz
in
addb
or
loop
lret
ss
cmp
hlt
sti
sti
sti
iret
add
enter
test
faddl
icebp
ror
fxch
ss
icebp
repnz
sar
and
mov
cli
in
ljmp
iret
cmp
fucomi
xorb
clc
sar
loope
fiaddl
lret
icebp
into
mov
aaa
cmp
out
cmp
sbb
faddl
cld
out
xlat
std
out
nop
fucomp
lock
shll
shll
rcr
cmp
aam
fcom
and
rol
repnz
loop
mov
ss
into
lock
repnz
test
idiv
jmp
and
aad
lret
loopne
enter
int3
sar
roll
fcomip
repnz
ljmp
call
vpsllq
out
dec
icebp
lock
fcomip
mov
imul
fcmovb
lret
addl
cmp
cld
out
aaa
xor
ror
int3
jecxz
mov
out
popl
out
fcmovnbe
repz
jmp
ss
fsubp
loopne
loopne
hlt
in
adc
testl
xor
shl
cmp
enter
repz
cli
fcmovbe
lock
jecxz
cld
std
out
mov
loopne
xor
rol
xor
idivb
fcom
rcr
hlt
hlt
sti
fisttpl
lret
loopne
stc
cmp
cmp
sar
sti
fcmovbe
cmp
rorb
loope
test
fcmovne
cld
loope
cmp
mov
jmp
lret
aam
fstp
fisubrl
push
int3
hlt
flds
out
flds
jl
ret
xlat
mov
movb
xchg
shl
div
test
out
in
enter
sar
clc
addb
fisttps
rcl
enter
rol
cmp
repz
lret
hlt
mov
jmp
call
cmp
aaa
sti
lret
out
dec
fucomi
ftst
shl
xor
out
enter
aad
out
cs
xor
idiv
not
in
add
rcr
fdivr
xchg
fdivrp
in
loope
rorl
lret
fstp
ret
aaa
sub
sar
lret
mov
clc
iret
fsubp
jecxz
adcb
call
cmp
rcl
int
neg
test
mov
sub
fldl
iret
sarb
test
fdivr
loope
sti
icebp
in
testl
loopne
xchg
adc
out
sub
in
in
call
fucom
cmc
test
test
fiadds
lret
loope
jmp
aam
xlat
aad
ljmp
out
xchg
lock
rcl
test
in
jmp
xchg
lret
call
in
aaa
ss
xlat
xlat
jmp
rcl
out
fcom
fsubp
aam
jmp
iret
ljmp
xlat
iret
in
icebp
aam
std
ret
in
fistpll
fdivrp
test
xchg
repz
icebp
iret
sti
out
shl
cmp
rol
loope
loope
fld
jecxz
lret
stc
and
out
rorb
clc
repz
iret
jmp
lock
stc
push
ret
loope
mov
fldl
test
cmpl
cmp
call
clc
cmp
stc
fiaddl
cld
xchg
shl
xor
aam
in
fcmovu
fdivrp
fdivrp
cmc
rcl
fcmovb
ret
xchg
in
fldl2e
lret
leave
xchg
xchg
rolb
cmc
lret
das
int3
icebp
int
cli
fstp
idiv
ret
cld
fsubrp
popl
xchg
in
cs
cmc
xor
out
hlt
ss
int
cmp
loop
cli
ljmp
and
jmp
in
out
lock
xor
jmp
lock
cmpl
mov
into
out
mov
std
xchg
fld
jmp
fnstsw
int3
aas
ds
sarb
not
leave
test
ror
enter
in
fadd
test
repnz
fcmove
test
fstp
sti
lret
mov
in
jmp
jmp
in
test
jmp
test
call
aaa
leave
ret
cmp
cmp
cld
call
loopne
ret
and
int
in
mov
cmc
cmc
aam
cmp
sti
fnsave
cmp
cmp
clc
loop
in
cmc
std
rcl
ret
jmp
out
mov
enter
jmp
sarb
hlt
cmc
fcmovu
shl
hlt
leave
sti
in
into
enter
imulb
int
stc
ror
cmp
shr
enter
aad
ds
addb
mov
orb
not
out
in
cli
xor
cld
lret
xchg
cmc
testb
mov
shl
shlb
cli
fpatan
jmp
xlat
lret
in
add
cld
loopne
sub
xchg
iret
adc
loope
jecxz
out
aaa
fdivp
hlt
xor
fdiv
sti
jecxz
xchg
mov
int
cld
divl
rcr
lret
cmp
cmp
fsubr
loopne
out
rcr
ret
xlat
test
cld
push
adc
lock
stc
jmp
cli
cli
rcl
rol
loope
fadd
std
mov
cmc
call
iret
jecxz
nop
xlat
icebp
out
cli
fxam
lret
xor
not
jmp
fld
ret
hlt
shl
enter
jmp
ss
cmc
icebp
out
sbb
fsubp
rcr
in
ljmp
test
shr
fsubp
repz
clc
rcr
hlt
cli
rcr
fucom
out
shl
aad
in
int3
fdiv
loop
jmp
cld
in
jmp
aam
aaa
fmul
out
fnstcw
ret
not
leave
xchg
xchg
nop
std
ljmp
cmp
leave
std
mov
add
pop
pop
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
iret
into
ret
ror
aad
addb
insb
ficoms
push
add
cmc
out
fnstcw
hlt
cmp
ljmp
mov
iret
xorb
in
xor
in
std
enter
sbb
hlt
sbb
inc
lret
xor
jecxz
sub
ss
aam
fcmovne
fildl
addb
mov
cld
xchg
lock
into
jmp
fst
std
cmp
in
repnz
xchg
adcl
ss
ret
sarl
shr
iret
rcr
loopne
fldl
cld
or
jmp
shr
lock
cmp
fldz
out
cmc
cld
in
stc
ret
lret
mov
call
out
in
out
jmp
cld
aam
into
stc
aas
ffreep
sub
fsub
xor
lret
in
out
leave
shll
out
in
iret
cmp
jmp
jecxz
rolb
fisttps
fmull
cli
repnz
fucomip
fmulp
sti
jecxz
movl
mov
xchg
cmc
xor
divb
hlt
xor
std
icebp
in
in
in
rcl
test
jmp
roll
jecxz
cli
sarb
cli
cli
out
addb
sti
cli
out
out
test
rorl
xlat
icebp
hlt
fldpi
xor
neg
cld
incl
loopne
std
test
leave
incl
ss
rol
cmp
cmp
stc
fsub
loop
cmp
in
enter
out
lret
test
icebp
shl
cmc
xlat
int3
cmp
std
ror
fdivr
repnz
enter
test
ljmp
not
cli
repz
jmp
enter
rcl
aad
cmc
in
xchg
neg
call
loop
out
jmp
repnz
sarl
int
out
ret
fdivr
in
in
out
fmul
nop
lret
lret
repz
xor
fcomp
aam
into
and
out
fidivrl
xchg
loope
ror
fldl
lret
aam
out
imul
call
fadd
into
shl
mul
ret
int
cld
decb
ret
icebp
ret
in
out
ljmp
idiv
aad
cli
out
xlat
iret
nop
leave
test
out
shll
cmp
cmp
lock
cmc
jmp
xlat
les
test
cmc
aaa
stc
ss
in
sarb
cmp
mul
cli
cmp
loopne
mov
xchg
inc
lock
xor
xor
xor
in
lret
loopne
loop
sar
jmp
fcomi
call
das
cmp
jmp
xor
cmp
into
lret
push
roll
fiaddl
fdiv
xchg
lret
loop
neg
shl
icebp
std
or
fcomp
xchg
xchg
in
fildl
cmc
cld
cmc
xor
lock
sti
aad
repnz
cmp
ret
cli
faddp
repz
mov
int3
fucomi
in
xchg
xchg
aad
fsubp
loopne
xlat
fnstcw
out
ds
repz
fdivr
add
or
cld
ljmp
out
shlb
dec
fcomi
cmp
lret
into
std
call
cmc
xor
xlat
hlt
ret
enter
idiv
into
rcl
sti
rcl
std
fdivrp
stc
ljmp
fld
cmp
addb
repz
ret
xchg
nop
loope
in
jmp
enter
iret
sar
xlat
cmp
loop
rol
jmp
fldl2e
loopne
in
addb
rcl
xor
fnclex
in
orb
in
call
mov
cmc
out
int3
hlt
leave
cmp
stc
aaa
ss
roll
enter
jmp
mov
in
iret
out
repnz
cmp
stc
in
into
sbb
cld
in
leave
stc
xchg
in
filds
into
out
sar
xor
rcr
rcr
xchg
aad
fiaddl
or
call
iret
aam
xor
xor
loopne
fsubr
rol
ret
testl
inc
add
add
add
or
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
push
pushl
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
add
mov
orl
xor
sub
mov
xorl
add
movzwl
movl
mov
movl
movb
sbbl
lea
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
mov
xor
incl
sub
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
jmp
ret
rcl
rol
aad
nop
push
pop
addb
ss
jl
lret
jl
cli
lock
in
xor
aaa
sar
aas
shll
loop
xchg
ret
ljmp
mov
sar
enter
lret
cmp
and
sbb
std
enter
xchg
loope
xor
fcomp
in
cli
aaa
fucomip
ljmp
in
fxam
or
loope
iret
mov
clc
in
in
clc
std
sti
ror
in
int3
out
shl
ret
mul
fnclex
ret
in
rclb
clc
out
iret
ss
cmp
jmp
ss
jecxz
fdiv
mov
jmp
jecxz
icebp
xor
iret
repnz
cmp
sar
cld
hlt
rol
aad
fimuls
int
mov
cld
xchg
in
in
sub
cmp
shr
in
stc
in
aad
test
clc
clc
cld
lds
icebp
sub
ss
xor
cli
icebp
rcl
cld
in
fadd
cmp
testl
xchg
loope
stc
xor
fcmovnu
out
sti
xlat
vpmaddwd
icebp
vpaddusw
fucomip
in
call
stc
aam
out
in
cmp
sar
or
cmc
call
jmp
repz
ds
shl
xor
xor
aad
out
xchg
out
xchg
call
shl
hlt
aad
iret
fxch
enter
cld
aas
ftst
rol
ror
frstpm(287
fsub
stc
lock
enter
lret
in
stc
test
cld
ret
neg
or
clc
fcoml
out
shr
int3
sar
out
ljmp
out
int
loop
iret
xchg
addl
fldcw
fst
fcmovbe
aas
ds
stc
hlt
loopne
test
aad
mov
fdivrl
out
shr
out
leave
xor
aas
ss
int3
out
fldl
mov
shl
xlat
sti
in
aad
fxch
fldl
rorb
notl
int3
out
shl
bnd
repz
ss
fdivs
into
cmp
xchg
fcmovne
mov
shr
in
rcl
in
lock
call
int
fsub
fildl
clc
test
loope
shr
sar
xor
into
icebp
in
fstp
test
cmpl
jmp
fdiv
call
std
popl
cld
ss
cmc
sti
std
clc
fmul
repz
fldl
xchg
lret
ret
hlt
out
cmp
test
int
cmp
cld
aaa
loope
jecxz
jmp
xlat
call
adcb
jmp
int
jmp
xlat
cmp
mov
fmulp
sub
ljmp
rcl
shl
stc
fadd
incl
flds
mov
lock
jmp
aad
call
test
fnstsw
jecxz
faddl
decb
sub
call
cld
loopne
ret
out
in
std
mov
out
enter
out
xor
mov
cmc
xor
sbb
repnz
rol
cld
leave
loope
fldz
jmp
aam
cs
ljmp
fcmovb
test
ret
fst
fnstsw
fisttpl
repnz
jecxz
out
xor
cli
clc
lret
loop
fcomip
out
xchg
roll
fucomip
xor
stc
std
iret
cli
neg
test
shl
or
cli
icebp
fdiv
cmc
xor
enter
shl
cld
call
loop
out
shl
aad
out
decb
test
jmp
jmp
idivb
test
repz
shl
les
in
in
cld
into
sub
in
aaa
fcmovnb
into
iret
aad
loope
hlt
int3
ror
test
in
fisttpll
xchg
iret
iret
jecxz
lds
xor
cli
in
cmp
cmp
idivl
aad
hlt
test
xchg
ret
addl
aam
test
lock
dec
or
push
xor
mov
add
jmp
jmp
aad
shlb
loope
mov
pop
jl
lret
jl
ss
ret
cmp
aad
fucomi
int3
loopne
jmp
lds
jecxz
out
xor
lock
cmpb
out
shl
aam
jecxz
lret
out
ret
jmp
lret
loopne
aam
aam
test
ffree
cmp
xchg
jmp
aam
loop
clc
ljmp
cmc
ds
repnz
mul
loop
cli
in
or
out
jecxz
mov
shl
not
xor
std
bnd
in
rolb
mov
cld
jecxz
xchg
bnd
ror
iret
lret
sar
iret
repnz
rolb
jecxz
lret
repnz
sub
xor
fcmove
fcomi
int
lret
and
ret
fsub
mul
out
call
sub
divl
ret
xor
in
shr
faddl
rol
in
leave
and
out
xchg
mov
in
ljmp
in
xlat
out
fcmovnb
hlt
call
ljmp
jecxz
xor
repnz
cmc
cmc
call
cld
in
int3
cli
stc
test
addb
lret
in
call
cs
in
fsubr
in
repnz
cmp
cld
sti
lock
in
xchg
in
mov
mov
out
fidivs
ljmp
cld
xor
loop
fadd
fld
fiaddl
ljmp
div
xor
fsubr
loope
sti
aas
int3
fucom
in
aad
ret
in
icebp
test
sub
fld
int
aad
cmp
ljmp
repnz
mov
in
icebp
iret
sti
jmp
ss
fcmovu
leave
cld
shl
ror
add
stc
ljmp
test
jmp
jmp
xlat
cld
out
out
shl
repnz
sbb
in
or
xchg
in
jmp
stc
shl
repz
fsubr
loope
jecxz
ret
fst
loope
cli
leave
mov
in
mov
aad
cmp
call
fstp
cmp
std
cli
leave
xchg
in
fcmovu
icebp
cmc
xchg
shl
int
xor
ss
xlat
xchg
ret
lret
orb
test
loope
aad
lret
std
fincstp
shl
aad
int3
rolb
jmp
cli
xchg
loopne
mov
in
out
lret
xor
loope
xlat
adc
out
roll
mov
xchg
xchg
rcl
loop
repnz
cli
shl
cmp
ror
aaa
int3
clc
xchg
test
mov
fmuls
in
stc
cmc
ret
lret
fucomp
jmp
test
repz
shr
repz
in
fdivrs
cmc
out
iret
fdivrs
loope
div
cmc
ret
aad
in
jecxz
lret
cli
out
xchg
iret
cmc
rcr
cmp
xor
out
jmp
hlt
sti
loop
xchg
mov
mov
fucomp
lock
iret
int3
fmulp
cmp
fstp
out
rorl
out
icebp
loop
lds
in
cmc
aad
lret
out
leave
rcl
fdivrp
jecxz
aad
loop
fcoms
cmc
xor
xor
enter
ljmp
in
aad
sub
in
shll
out
cmp
jmp
aaa
aam
cli
sti
iret
or
std
ljmp
mov
in
lret
hlt
in
lock
fnstsw
in
rol
sbb
testl
ror
int3
jmp
repz
icebp
ret
aaa
fnstcw
xchg
loopne
mov
shl
shl
loope
repz
cli
fnsave
rcl
aas
aad
ret
vpandn
stc
loopne
out
out
xchg
in
in
lret
xor
fcom
cld
iret
shll
dec
adc
fadds
out
in
in
xchg
out
jecxz
call
call
ds
ljmp
shl
testb
loope
xchg
jecxz
rcl
xor
ljmp
hlt
in
lock
mov
mov
jmp
rol
aad
aad
fcmovne
scas
push
mov
loope
jnp
push
pop
jl
lret
jl
filds
repz
lret
call
cmp
hlt
hlt
test
in
mul
sub
mov
into
vpminub
cld
xor
shl
sar
stc
icebp
repnz
ljmp
roll
aaa
clc
repnz
inc
cmp
xchg
jecxz
shl
cld
jecxz
enter
xlat
neg
cmc
std
lret
jecxz
test
shl
lret
idiv
jmp
lret
fnstsw
clc
ss
clc
lret
out
xlat
sti
cmp
sar
bnd
aam
cmp
jecxz
out
ss
in
cmp
jmp
repz
icebp
repnz
sub
jmp
mov
or
jmp
iret
cmp
cmp
sarl
rcr
sbb
shl
rcr
xchg
repnz
jmp
cmc
fidivl
fst
fistpll
ffreep
out
test
neg
call
xchg
cli
in
in
mov
shll
hlt
ret
ror
aas
cmp
cmp
loope
rcr
add
fmuls
ror
out
xor
lret
aad
fscale
cmp
lds
fdivrs
loop
in
xlat
xchg
xchg
fiaddl
das
enter
fstp
aam
ror
cli
stc
repnz
test
int3
fisttpll
cld
sub
ss
loop
into
clc
cmp
cmp
sarb
aad
loope
mov
test
fucom
out
cmc
ljmp
cld
cmp
hlt
ds
out
rcr
mov
lret
jecxz
out
int
hlt
int
xor
imul
xor
cmp
testb
flds
fcmovne
enter
loope
loop
fxch
stc
jmp
clc
div
lret
out
fcmovb
loopne
loopne
shl
test
mov
testb
ds
rol
in
repnz
fsqrt
in
repz
out
loop
in
shl
repnz
lret
in
jmp
std
fcoml
ret
clc
leave
lret
out
test
int3
fcmovu
repnz
fisttpl
fmulp
cmp
ljmp
into
push
hlt
icebp
repnz
fidivrl
aam
mov
mov
lret
shl
cmp
fmul
fcmovnbe
in
into
cmp
xchg
xchg
call
icebp
hlt
loopne
jmp
enter
fnstenv
call
iret
fcmove
jmp
fxch
orl
div
sub
sti
repz
int3
incl
xlat
std
testl
mov
das
ret
rol
cld
cmp
ljmp
loopne
mov
fmul
sti
roll
repnz
repz
in
cmp
fdivp
test
test
fmul
repz
mov
lds
rol
call
xor
or
mov
ljmp
jmp
xor
leave
cmp
loope
sarb
fnop
add
out
fmul
aam
mov
mov
lret
int3
lds
stc
shlb
xor
test
lret
jmp
shl
testl
and
mov
cld
in
in
aaa
aaa
leave
icebp
cmp
cmp
enter
cmp
jmp
inc
fucomip
nop
test
call
ret
shr
sarb
idiv
lock
jmp
int
out
filds
xabort
lret
aam
cmp
stc
iret
cmc
rol
fprem
clc
cld
int3
out
fadds
jecxz
lock
std
in
into
jmp
ds
stc
ret
out
xchg
cli
xchg
repnz
repz
cmc
cmp
ljmp
fdiv
orl
loope
jecxz
vpmullw
fdivrs
lret
cmp
ret
int
cld
aas
out
repnz
call
sbb
loopne
jmp
cmc
fxch
out
in
jmp
cmp
cmp
aam
aam
sti
neg
loope
and
lock
test
out
call
xor
enter
and
ljmp
inc
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
jmp
aad
xor
push
push
sahf
and
jl
add
enter
cmp
aas
shl
out
in
neg
std
sar
jmp
mov
leave
mov
sub
hlt
aaa
in
iret
cld
fnop
fcomp
repz
orl
fiadds
hlt
ss
cmp
icebp
fcom
cmp
imul
leave
cli
xchg
int3
lret
test
aaa
sti
out
clc
lret
lret
clc
in
out
fdiv
in
jecxz
iret
cli
repz
mov
lret
ljmp
aam
loopne
icebp
out
sti
fsub
sar
aam
loopne
stc
lret
mov
fdivl
iret
ss
lret
out
call
into
repz
fcmovb
fmulp
in
fmul
stc
sti
nop
cli
fnstsw
mov
enter
hlt
xor
aas
cmp
shr
fadds
in
jmp
cli
repnz
cmc
stc
test
jmp
adc
out
fadd
in
int
clc
jecxz
int3
call
xor
in
repnz
out
sbb
cmp
in
repnz
xchg
cli
in
jecxz
mov
xchg
int
lock
jecxz
sar
into
clc
lret
neg
rolb
out
stc
in
int3
iret
into
aaa
leave
repnz
fmul
stc
fsubr
fsubr
ret
aad
ds
ljmp
rclb
xor
aaa
lock
aas
cmp
int3
shl
cli
fadd
fcmovne
in
in
lret
out
fsubp
out
lret
enter
jmp
ds
stc
rcr
leave
sar
xlat
adc
into
xchg
xchg
add
rcl
in
in
lret
fnstsw
hlt
ret
mov
jecxz
rclb
enter
jmp
cld
rolb
mov
fisttpl
xchg
loope
ror
ss
lret
std
fcomi
fistpll
xor
fucomi
leave
loopne
fucom
clc
fisttpll
int3
jecxz
int3
in
sti
xlat
cmp
cli
cli
xor
test
stc
mov
fmuls
cld
fidivs
out
fldt
rcl
repz
neg
fcmovnu
fcmovb
call
add
lock
out
xchg
loope
not
into
xor
in
shl
shl
fdivr
cmp
repz
loope
jecxz
out
mov
icebp
loopne
aam
xor
aad
leave
lret
int3
cli
xor
add
mov
incb
jmp
or
out
xor
leave
into
icebp
cld
cmp
aad
clc
repnz
xchg
neg
leave
jmp
cli
fsubr
ljmp
enter
test
int3
aad
xlat
in
out
ret
iret
incl
mov
lock
fnstenv
call
fidivrs
hlt
roll
rol
lds
repnz
xchg
ret
cmc
xor
in
ror
fcmovnu
std
out
cmp
std
repnz
in
lret
ljmp
int
hlt
jmp
out
sub
loope
lret
xor
int3
stc
aas
clc
aam
fucompp
sbb
xchg
test
repnz
ror
out
fstp
clc
lock
xor
jmp
loope
leave
lret
xchg
xchg
shl
xor
aaa
call
lret
loop
stc
fpatan
mov
lret
inc
iret
fmull
out
sub
rcl
out
ljmp
ret
fisttpll
test
cmp
in
hlt
leave
out
in
rcl
out
ss
repz
in
cmc
ss
cmp
xlat
stc
clc
lret
int
mov
lret
ljmp
xlat
cmp
stc
xor
lock
stc
cmp
fprem
fmuls
lea
shr
leave
test
icebp
out
lock
lret
iret
int
mov
repz
ret
icebp
clc
int3
out
stc
ror
xor
cli
cld
test
loope
into
xchg
out
sar
in
xor
in
fndisi(8087
loope
cmp
fdivr
fcomp
test
loopne
iret
mov
test
in
in
jmp
mul
cmp
jecxz
rcr
loopne
clc
std
enter
mov
ljmp
xor
aaa
lock
in
sti
cmp
cld
fdivrs
iret
loop
xor
mov
add
jmp
ret
int
lret
sub
xor
fs
lret
jl
fcomp
loope
clc
fsubr
out
fimuls
clc
ret
out
int3
in
cmp
loop
cmp
out
lock
in
rorl
xor
jecxz
lret
jmp
int
neg
rcr
aas
shl
loop
mov
jecxz
call
int
sarl
into
lret
ss
clc
or
fcomp
sti
jmp
sub
enter
nop
repz
hlt
repz
fldpi
neg
call
cmp
in
out
in
cli
cli
fcmove
repnz
into
jmp
sti
fstpt
test
icebp
addb
sub
xchg
ss
repnz
rcr
aas
out
cmp
hlt
xor
loopne
testl
jmp
leave
cs
aaa
repnz
in
repnz
sti
test
iret
lret
loopne
shrb
fmul
loope
enter
cli
shl
addb
leave
loop
call
jmp
in
cmp
aas
xor
sbb
jecxz
lret
in
or
sub
sub
xor
cli
fsubrp
aad
ret
idiv
idiv
xchg
into
ror
in
jmp
icebp
jmp
leave
shl
fistpll
fcomp
ds
out
out
jmp
into
nop
xor
ror
aad
call
shl
cli
neg
repnz
loopne
clc
out
xchg
fsubp
leave
fsub
jecxz
stc
in
cld
jmp
loope
aas
mov
cli
ret
aam
jmp
xchg
aad
ret
ret
repz
ror
out
inc
ss
cmc
std
aam
test
mov
fdivr
loope
fidivs
xor
aaa
loope
call
faddl
int
loopne
in
mov
ljmp
cmp
cmp
shl
into
cmp
out
test
cld
fsubrp
out
lret
not
enter
fcomip
int3
jecxz
std
into
jecxz
out
icebp
std
lret
lret
mov
in
out
fcmovbe
nop
sub
ljmp
int3
fcmovb
int3
stc
fnstsw
cld
ret
and
fldl2t
ljmp
shl
out
xlat
sarb
cmp
aas
rol
sbb
fneni(8087
filds
mov
rcl
ljmp
rolb
cld
int
lret
mov
lock
shl
lret
cmc
std
xor
out
repnz
cmp
fildl
mul
iret
out
std
mov
in
xchg
xchg
shlb
into
int
jmp
in
ljmp
loop
fdivr
xchg
lret
icebp
mov
in
shl
hlt
hlt
jmp
cmp
xor
rcl
out
loopne
test
aam
aad
adc
ljmp
shll
sub
fmul
shr
sar
cmp
leave
jmp
fildl
dec
xchg
out
leave
lret
jmp
cmp
int3
repnz
cmp
xrelease
sub
fcmove
inc
rol
stc
fprem1
cmp
jmp
stc
enter
int3
xchg
shl
leave
in
loop
lea
loop
iret
xor
sti
sti
in
hlt
in
iret
in
in
cmp
test
mov
addl
xor
cmp
aam
ror
aas
out
frstpm(287
sti
repnz
aam
mov
mov
shll
leave
lret
aas
fcomip
cmc
fdiv
sti
ljmp
rol
out
shlb
repnz
into
stc
leave
in
call
fildl
test
lret
addb
rcl
repz
repnz
in
ljmp
out
test
out
out
jmp
iret
xchg
xor
in
cmp
repz
cmp
into
loopne
std
cmp
loope
in
mov
mov
ss
les
iret
iret
fucomp
cmp
cmc
in
in
roll
xchg
repz
aam
int
call
repnz
push
clc
fidivrs
cmp
ret
stc
repnz
mov
loope
lret
rolb
mov
mov
jmp
ds
int
int
int
mov
xor
shrl
mov
add
cs
loop
lret
in
jecxz
cmp
fdivrp
cli
ds
loope
std
std
loopne
out
out
call
int3
imul
adc
ret
roll
fprem
clc
iret
mov
aas
div
xor
lock
cmp
fmul
aas
cmp
stc
filds
out
orl
int3
repz
in
in
aaa
in
sti
adc
rol
clc
addb
xchg
xor
fxch
cmp
fmulp
sti
in
cmp
icebp
in
out
fadd
idiv
mov
sar
fildll
in
cmp
cmc
cli
int3
xor
out
in
vpsraw
xchg
int
out
loop
and
cld
out
aad
cmp
hlt
int3
xor
int3
loope
cmc
rol
jecxz
repnz
jmp
faddl
icebp
clc
in
out
fcmovne
jecxz
ds
std
fcmovb
mov
call
in
in
cld
lea
xor
in
shr
lret
fnstcw
ljmp
hlt
xchg
mov
nop
adc
fmul
sub
ss
xlat
cli
ljmp
shl
stc
in
repnz
mov
out
enter
int
sub
in
out
call
cmp
rolb
sti
cli
ljmp
mov
cs
cmp
jmp
iret
sarl
std
filds
fcmovnb
out
xchg
cmp
rclb
xor
cld
cld
fcomi
stc
repz
cmc
hlt
jmp
loope
mov
jmp
out
fcmove
cmp
rcr
aas
cmp
shr
loop
fld
fildl
clc
or
call
aam
leave
shlb
ror
ret
cmp
leave
stc
sbb
mov
int3
icebp
shll
loope
sarb
cmp
int3
ror
sar
fcmovnb
ds
call
fld
adcb
xor
inc
aad
cld
cli
shl
cmc
dec
cld
iret
call
iret
shrb
jmp
sti
cmp
cld
in
std
out
xchg
in
and
in
lock
in
leave
sti
xor
cmp
stc
ds
shl
iret
mov
fsin
clc
sbb
fcmovu
lret
sub
xor
cmp
out
ret
fdivp
loope
cli
ffree
in
adcb
int
aad
hlt
iret
shl
sbb
cli
stc
roll
xchg
sub
mov
aas
div
shll
ds
out
cmp
aad
testb
out
leave
in
repnz
out
cmp
xlat
fstpt
fcom
in
repnz
sti
out
hlt
xchg
leave
addl
out
cmp
rcl
xlat
repz
in
clc
jecxz
jmp
std
out
in
xchg
loopne
xchg
test
ret
ret
inc
inc
mov
int
mov
into
out
xor
ljmp
std
lret
test
repnz
clc
xchg
rcll
jecxz
loop
xor
cmp
cmp
clc
iret
clc
ret
call
fdivr
test
int
ror
shr
out
into
cmp
sti
cld
neg
in
out
testb
lret
test
int
out
call
out
cmp
cld
clc
aam
in
std
out
ret
in
hlt
clc
mov
rorl
ss
push
clc
stc
and
aas
out
rorl
in
jecxz
popl
shl
cmp
ss
ljmp
xchg
mov
call
jecxz
xchg
shr
aaa
jmp
in
ss
in
cmp
xlat
lock
xlat
hlt
std
xchg
neg
ret
lret
sti
out
fcomip
loop
sti
shl
test
clc
fst
in
faddl
cld
int
fstp
call
shr
ljmp
sti
cmc
loopne
out
fildl
filds
lea
fcom
out
lret
cmc
lock
repnz
out
movzwl
xor
add
mov
jmp
rcl
ret
fst
xlat
inc
dec
push
lods
mov
pop
or
jl
add
fadd
adc
in
neg
int
lock
out
rcr
lock
repnz
in
cmp
xorl
fcmovbe
clc
aad
fdiv
cmc
mov
mov
fstp
in
in
fld1
lds
fsincos
ror
cmp
cmp
loope
flds
in
out
call
xor
std
out
aaa
fucomip
jmp
imul
jmp
div
and
xchg
mov
out
out
std
mov
sub
in
out
jmp
sarl
enter
fadd
loope
rcr
lret
cld
leave
lock
xor
fnstcw
xor
hlt
repz
sti
sub
jecxz
repz
xchg
in
test
hlt
loopne
ret
cmp
icebp
sti
sti
int3
shl
xlat
lock
in
aas
loop
adcb
repnz
aam
out
stc
int
ds
div
aas
orl
fldl
fcmovne
fidivl
in
hlt
cmc
cld
fstp
idiv
icebp
leave
cld
xchg
out
iret
in
out
test
fmulp
das
das
iret
into
ror
repz
incb
fsub
mov
loop
cli
lret
xchg
sub
xor
jmp
loope
int
roll
mov
mov
xchg
loopne
shr
aad
rol
icebp
lds
ljmp
cmp
out
loop
xlat
ret
add
clc
in
jmp
stc
call
icebp
fdiv
dec
std
out
stc
shl
fmul
ljmp
shl
jmp
clc
repz
incl
fneni(8087
add
sbb
xchg
ror
rol
sub
cmp
lret
repz
ds
add
loopne
lret
jmp
xchg
int
int
lret
sub
int3
in
lret
cmc
xlat
cli
icebp
test
ds
les
in
loop
loop
sub
aaa
int3
cli
out
cmp
rol
sti
neg
fstpt
clc
clc
out
int3
mov
neg
cmp
ljmp
aad
out
int3
mov
nop
out
loopne
leave
xor
out
repz
rolb
fsin
roll
icebp
dec
jecxz
nop
out
lock
lret
rcr
int
in
cmp
sarl
sar
repnz
fcompp
cli
call
fsubr
rorb
out
shlb
repz
sti
test
clc
loope
orb
ret
jmp
xor
jecxz
ljmp
repz
fadd
stc
fisttpll
jmp
lret
hlt
fcom
ret
lret
fadd
aad
out
stc
fiaddl
fiadds
xchg
jmp
stc
cmp
aad
in
mov
mov
roll
jmp
ss
idiv
std
sti
ret
test
idiv
out
jmp
nop
aas
into
xor
ret
int
in
aaa
shr
std
cmp
sti
loopne
jecxz
lret
lret
ficoml
repz
cmp
test
rol
in
aam
ret
test
test
fcmovnbe
loopne
iret
icebp
into
int3
sub
fcmovnu
std
repz
aaa
loopne
shl
inc
rcr
ret
shl
sti
in
cli
vpaddb
int
shr
ret
std
cmc
call
ret
out
cld
loopne
mov
sub
shl
jmp
std
jmp
leave
into
cmp
cmp
aas
mov
hlt
fiaddl
mov
leave
repnz
repnz
std
ds
out
fcomip
fcomip
icebp
aad
mov
loope
xchg
test
cs
cmc
into
fptan
fidivrl
push
sar
aas
leave
loopne
sti
hlt
out
adc
xor
hlt
mov
lret
loop
cld
mov
mov
addb
icebp
sub
out
call
jmp
addb
fucomi
in
or
loope
hlt
test
xor
int3
in
lock
iret
cmp
fcmovu
test
xchg
jmp
cmp
jmp
aad
enter
fsts
pop
sbb
fdivs
jl
add
cld
jmp
clc
repz
out
in
cmp
in
jecxz
fiaddl
and
neg
clc
in
hlt
rol
xor
fsubr
out
int3
rcr
shl
aam
cli
ret
fsubr
int
fisttps
loop
xor
cld
repnz
aam
fsubrp
repz
fdivr
xor
out
fsubr
int
addl
in
clc
in
aam
aad
aam
repz
lret
stc
std
test
fucomip
out
adcl
fldlg2
xlat
in
cmp
aad
cmp
cmc
mov
mov
nop
faddp
fiadds
loop
out
stc
hlt
icebp
lock
sti
aad
fsubp
cmp
and
rorl
loop
in
in
fidivl
cmp
std
jmp
cmp
incb
adc
ret
leave
and
in
xor
into
ret
int
fidivs
fildl
mov
inc
out
mov
in
test
xorl
out
cmc
aaa
shl
ljmp
decb
int3
cmp
sub
rcl
ret
xor
out
call
out
loop
ret
sbb
fld
loopne
lret
out
adc
cmc
jmp
cmc
div
lret
xor
cld
cmp
cmc
fldl2e
not
mov
test
in
xor
lock
cmp
sti
leave
int
neg
in
icebp
fnstsw
cmp
aas
hlt
xlat
sar
lret
repz
xor
icebp
out
loope
cmp
in
push
into
in
shr
loop
in
int
enter
aad
ljmp
std
cmp
shl
lret
in
lock
mov
xchg
out
shlb
repz
sti
rcr
cld
fcmovu
out
sub
clc
idiv
mov
out
loopne
cmc
enter
xor
fxch
fyl2x
out
fsub
fcmovu
vpminsw
int
mov
shr
aaa
ljmp
std
loopne
ret
test
repz
ror
lret
hlt
in
xor
fdivl
ror
ret
repnz
cmp
leave
iret
cld
out
into
icebp
jmp
jmp
repnz
aaa
ljmp
hlt
loopne
xchg
iret
fcoml
cs
xor
rcl
loope
lock
cli
shr
sbb
out
ffree
loope
mov
cli
lea
leave
aaa
lds
cmp
cmp
test
add
loopne
mov
int3
iret
cld
int3
xchg
test
aam
in
xor
cld
div
call
fstp
shl
call
clc
int3
jmp
mov
loopne
fdivp
fsubr
lret
icebp
ds
cmp
repz
test
mul
cli
xlat
cmc
mul
movl
in
out
clc
call
ret
fdivrs
aas
rol
call
leave
ret
int
int3
enter
in
lret
std
out
rcl
aas
in
fcomi
rorb
xchg
loop
sti
loopne
shl
aaa
fdivp
lret
lock
into
aad
aaa
in
aad
cld
sar
adc
fsubrp
aam
in
clc
ret
cli
loope
xor
repnz
leave
cmp
lret
aam
addl
fucom
fadd
mov
loope
adc
add
lret
cld
cmp
mul
aas
iret
icebp
icebp
call
out
jmp
into
repnz
in
clc
in
into
hlt
fcom
ljmp
clc
stc
loop
std
loop
leave
les
and
aaa
shl
xor
hlt
jmp
into
std
sti
filds
loope
out
into
shl
xlat
out
sti
fnstsw
icebp
shl
fcmovbe
cmp
sarb
jmp
xchg
icebp
xchg
icebp
call
imul
fincstp
cmc
fcom
repz
shl
cmp
xchg
rol
les
test
in
out
ret
cmp
cld
sti
ljmp
out
loope
xlat
ret
jecxz
loop
fcmovne
loopne
xor
repz
aad
in
fcom
jmp
into
shl
filds
loopne
fcmovu
mov
xlat
into
jecxz
sti
hlt
int
cmp
jmp
lret
xlat
aas
fst
fcmovne
mov
imul
lret
jl
sti
clc
lret
in
cmc
fcomi
neg
mov
icebp
out
out
addb
xor
fucomip
loope
neg
roll
jmp
xchg
int
cs
enter
sarl
cmc
sub
xor
loope
filds
and
int3
xchg
jecxz
jecxz
rcr
lret
fucomi
call
out
std
clc
stc
xlat
loopne
sub
vpsubb
in
iret
out
ljmp
fxtract
out
in
out
cmp
xlat
leave
lret
iret
mov
lret
cmc
sti
iret
stc
fstpt
rol
stc
inc
rolb
out
into
jecxz
jmp
out
into
aam
stc
xlat
shl
hlt
in
xacquire
hlt
addl
jmp
out
cmp
std
rcr
cmp
xorb
cli
filds
fdivp
mov
fxtract
out
shr
out
clc
in
repz
add
dec
fdivr
adcb
rcl
xor
in
out
cmp
shl
cmp
cmp
sti
cli
std
mov
out
fucomi
in
jmp
mul
xor
cmp
sarb
ret
shl
icebp
cmp
decl
decb
mov
xor
xlat
ret
fucomip
iret
loope
aas
cmp
rcr
xlat
lret
cld
jmp
mov
xor
repz
lret
repz
out
lock
std
into
repz
sti
ljmp
mov
repnz
call
int3
iret
repnz
icebp
into
clc
ret
xlat
fsub
xchg
xchg
icebp
fimuls
ret
repnz
lret
lret
cmp
cmp
incb
std
pop
nop
in
out
cld
repnz
ss
repz
iret
cmp
ljmp
fprem
ds
fdivr
stc
int3
xchg
loopne
lock
cmp
jmp
cmc
out
into
not
fcmovnb
stc
std
aam
aam
loop
mov
out
icebp
lret
filds
int
cmp
call
stc
test
hlt
ljmp
repnz
ds
jmp
enter
into
std
rcr
out
icebp
repz
leave
mov
loope
rol
in
cmp
std
hlt
fsubr
adc
neg
stc
orb
loop
mov
out
call
clc
xor
into
icebp
cmp
aas
hlt
in
ret
xchg
mov
loopne
shrb
rol
lret
sar
cmp
cmp
fdivr
in
loope
mov
xor
loopne
icebp
hlt
sti
xor
enter
lock
fstp
aam
jecxz
out
into
xchg
lock
fmull
xor
xor
sar
cld
ret
ret
in
fisttpl
mov
in
xlat
cmp
aad
jmp
xlat
roll
faddp
int3
jecxz
in
shl
lret
sarl
test
into
repz
ret
ds
repnz
jmp
xchg
ljmp
mov
out
in
xor
cmp
aas
aaa
cmp
shr
ret
jecxz
jecxz
leave
testb
in
call
rol
int
cmp
sar
ds
ret
jecxz
lea
ror
cmp
cs
fstp
fmulp
cmp
int3
out
aad
mov
inc
test
test
mov
repnz
ret
repnz
fcmovbe
repz
aam
adc
mov
in
cli
cld
fcomp
fucomp
aad
repnz
out
clc
fadd
in
sar
cmpl
into
loop
cli
rorb
call
into
loope
in
aam
cmp
xlat
loope
out
in
add
lret
loopne
out
mov
out
out
xor
ljmp
into
fdivr
cmp
cld
div
sub
fdivp
loopne
xchg
int
xchg
cs
jecxz
std
out
jmp
add
into
fdiv
sti
fsubp
fcomi
std
loop
cli
sti
in
repz
lret
icebp
aaa
cli
cmc
fdiv
fmulp
lret
in
test
movb
inc
in
lcall
jmp
int
into
fcmove
fst
aam
lods
push
psraw
xor
jl
add
fisttpl
shl
xor
shl
sti
repz
fimull
out
ds
fsqrt
cmp
div
aaa
stc
fucomp
fucom
fiaddl
sti
sti
idiv
fisttpll
sub
out
out
ret
ljmp
test
out
cmc
loopne
lret
cli
into
mov
xchg
ret
xor
lock
ror
aaa
aad
test
fisttps
mov
jmp
ror
aam
iret
aas
cmc
ret
fsub
cli
test
ret
mov
les
sbb
call
aaa
ljmp
xlat
xchg
xchg
ret
mov
mov
fiadds
loop
cmp
int
aad
out
cmp
fcom
xchg
faddl
orl
xor
out
jmp
roll
enter
leave
sub
xlat
loope
stc
lock
in
aaa
cmp
int
cli
cmp
in
cmp
cmp
jecxz
int
jmp
ret
cmp
ret
xor
cmp
jmp
fcmovnb
xlat
sti
xchg
lret
fcomp
in
orb
cld
sub
enter
enter
call
xchg
cli
mov
xchg
stc
iret
sti
roll
int3
ret
int3
hlt
cmc
fdivrl
loope
hlt
aas
jecxz
ret
adc
cli
lds
jmp
fcom
fsubrp
stc
sti
jmp
ret
fdivp
cmc
jmp
mov
xchg
enter
jmp
xlat
int
cmc
test
call
fadds
xchg
icebp
jmp
jmp
jmp
jecxz
shl
aad
fcmovb
loop
cld
into
xchg
test
sar
out
fcmovbe
aad
idivl
int3
out
cmp
imul
mov
leave
out
loopne
test
ret
fyl2xp1
aam
sti
loope
cmp
loope
fsubp
lock
lret
cmp
mov
xchg
jecxz
mov
iret
repnz
stc
int
stc
loope
cmp
sbb
std
mov
mov
int
sub
loopne
enter
cmp
ss
fnstsw
jecxz
jecxz
in
test
fsub
out
mov
aam
into
ss
out
ljmp
faddl
ret
stc
clc
enter
cld
ljmp
lret
cmp
xlat
cmp
cmp
orl
loope
repz
shlb
aam
xor
lret
clc
fdiv
in
ret
hlt
out
mul
addb
int
xlat
rcr
ss
imul
repnz
cmp
mov
mov
frndint
icebp
rorb
leave
leave
icebp
aam
rcr
sarb
enter
out
into
incl
ret
repnz
out
jmp
fmul
cmp
cmc
cmc
cmp
jmp
int
jmp
loopne
out
out
fcomip
out
lret
in
loopne
cld
xchg
fcmovb
cld
std
out
mov
mov
out
lret
xor
not
fdivl
ljmp
xchg
stc
cmc
ljmp
in
sub
ss
fsub
hlt
sarl
loopne
jecxz
ret
fadds
or
shl
aaa
jmp
xor
cmp
cmp
lock
aad
lds
jecxz
iret
fstp
roll
repz
aam
ss
fdiv
ret
cmp
incb
loope
loope
decb
int3
ljmp
roll
shl
vcmpps
xchg
fucom
int
call
fscale
fdivl
fldl
fidivrs
clc
out
int
in
test
ret
ss
cmp
std
not
roll
in
in
loop
hlt
jmp
jmp
ds
lret
cmp
not
ret
into
nop
cmp
loop
mul
jmp
clc
mov
xor
add
mov
mov
xor
add
mov
mov
jmp
sarl
rcr
ret
fucomp
cmpsl
push
mov
ret
jl
add
in
enter
cmp
cmp
roll
jmp
fisttpl
repnz
xor
xor
stc
in
jmp
cli
cmp
lret
mov
loop
xchg
test
lret
mov
out
cmp
fstp
fistpll
sar
loop,pt
cld
repz
in
xchg
jecxz
sub
rol
jmp
iret
int3
icebp
loop
repz
cmp
loop
and
in
out
int3
xchg
add
out
lret
repz
call
cmp
cld
rol
sti
loopne
in
test
icebp
cmc
aam
call
not
out
rol
out
xchg
xlat
mov
xchg
xchg
iret
ljmp
lret
into
out
std
cli
into
in
lret
in
addl
jecxz
sti
cli
rorb
xor
fmul
in
xlat
shr
loop
shl
in
xchg
xlat
xchg
lret
loopne
fcmovu
enter
shr
xlat
lret
out
lret
shr
fiaddl
xchg
ret
lret
cli
in
ljmp
aaa
int3
lret
sub
ds
rcr
in
leave
sbb
jmp
test
lret
sub
clc
xor
out
in
sar
cmp
sti
aad
out
out
fsubp
loopne
ffreep
xlat
sub
in
lock
jecxz
icebp
loopne
int
fnstsw
int3
cmpl
shr
out
xchg
call
das
ds
repz
iret
cld
aaa
shr
sarb
jecxz
fdivr
cld
loope
cli
decb
out
xor
cli
aam
cld
lock
cmp
cmc
into
cld
aam
in
jecxz
stc
leave
lret
mov
mov
ror
not
loop
lret
int3
stc
cmp
add
les
out
out
nop
in
hlt
aaa
das
sub
out
sarb
aam
jmp
loopne
xchg
faddp
in
call
ffree
mov
call
xor
lret
cmc
rcr
icebp
stc
and
addl
mov
repnz
int3
in
sar
out
ljmp
ret
clc
ret
ret
movl
xor
iret
in
aam
leave
aad
out
aam
rol
mov
mov
xchg
jecxz
mov
rcr
das
out
shl
cmp
xor
loop
in
hlt
aad
hlt
hlt
in
loope
in
loopne
out
int3
xor
out
fucomi
rolb
sti
std
aas
out
fsubr
ret
stc
shr
std
filds
xlat
div
repnz
lret
sar
fcomp
shl
roll
loopne
incl
shl
rcl
in
clc
out
idivl
cmp
idiv
std
cli
testl
jmp
xor
fmul
in
neg
fst
div
rcl
repz
aad
fcomip
add
out
or
aam
loop
sub
int
xlat
cmp
cmp
faddl
adcb
vcvtpd2dqy
xor
fcmovnu
aas
lds
in
ret
loope
fsub
jmp
jmp
sub
cmc
icebp
out
cmp
dec
ljmp
fucom
addb
ret
iret
mov
icebp
stc
xor
lret
sti
shl
incl
fcmovb
call
iret
lret
call
ftst
int3
xor
rolb
shl
addb
add
fimuls
jmp
shr
sti
stc
aas
fcmovbe
roll
leave
std
lret
mov
fadd
orl
out
iret
lock
leave
sar
aam
fdivp
test
leave
stc
out
lret
out
ret
xchg
xor
xor
lock
loope
cld
roll
shl
cmp
fstp
ret
add
in
int
cld
fdivr
fisttps
out
call
fstpt
stc
in
xor
out
call
jmp
shl
fmulp
rcl
shl
clc
xlat
enter
rcr
cmp
mov
jmp
ror
ds
ret
or
and
and
add
in
xchg
fcomi
icebp
addl
ss
out
aam
aam
int3
roll
leave
xchg
jmp
rol
xor
cmc
enter
ror
ds
icebp
sarb
shl
repnz
mov
jmp
ss
shl
xor
rcl
aam
sar
orl
mov
ror
xor
leave
clc
jmp
int
cmp
aad
xlat
aas
loop
jmp
jmp
hlt
icebp
lret
icebp
xor
rcr
aam
jecxz
out
loope
fmul
out
lret
ds
ret
ljmp
loop
in
call
in
in
nop
iret
lret
xlat
xor
aad
rcr
cmp
out
rcr
in
rcl
fiadds
mul
fcomp
xor
iret
cmc
das
jmp
in
leave
icebp
out
aas
cmp
test
iret
jecxz
lret
lret
test
out
jecxz
ret
fdivrs
bnd
cmp
out
stc
aam
fabs
fmull
sti
in
shr
repnz
aaa
fldpi
in
aad
repnz
fucomip
jmp
xchg
jmp
lret
std
in
div
testb
std
cmc
ljmp
jmp
test
xor
out
jmp
stc
repz
cld
test
repz
testb
jecxz
jmp
ret
icebp
jmp
jmp
aam
mov
fmul
loopne
rorb
enter
neg
fucomip
call
out
in
rcr
repnz
loop
mov
xchg
fmulp
enter
clc
out
into
repz
fucomi
fcmovbe
loop
lock
in
dec
mov
mov
icebp
loop
in
das
enter
div
repnz
enter
loop
cmp
test
loope
idiv
stc
loope
cld
call
ss
int3
div
call
loopne
xlat
into
lock
fxam
mov
leave
out
cli
shl
xchg
aam
xor
cmp
repz
fpatan
fucomip
loopne
ljmp
jmp
in
das
jmp
cmc
idiv
call
fldlg2
sarb
aas
mov
jmp
jecxz
in
nop
xchg
cld
xchg
repz
out
aam
cmp
int
xor
test
fldl2t
test
int3
lock
in
test
fidivrl
idivl
lock
jmp
lret
xlat
lret
sti
jecxz
in
repz
aaa
sti
enter
in
fistpll
ret
rol
shr
fisttpl
xchg
in
ljmp
shl
lret
div
xlat
into
ljmp
xchg
xchg
orb
xchg
int
ds
iret
xor
shr
aam
aad
aam
out
test
aad
mov
icebp
cld
mov
in
faddp
lock
sub
aam
cmp
xchg
xchg
enter
std
clc
iret
in
xchg
into
fdivp
ljmp
lret
cld
stc
shl
fstp
out
loop
hlt
cld
cld
in
lret
in
jecxz
xchg
in
mov
xor
xor
cmc
cmp
repnz
fcmovnbe
testb
mov
in
fisttps
rcr
aam
int
ss
fmul
fiaddl
xor
in
stc
and
ljmp
int3
in
repz
fucomi
addb
not
in
faddp
mov
repnz
icebp
cli
into
jmp
shr
aam
out
test
ror
fisttpl
in
div
div
ret
xor
repnz
fcmovnb
repnz
jecxz
out
jmp
ds
cmp
ljmp
out
aas
std
jmp
out
fdivr
clc
cmp
ljmp
xor
int3
clc
call
repz
cmc
aam
aad
movb
out
xor
in
int3
leave
std
stc
into
cli
enter
aas
fcom
cmp
fucomip
test
aam
lret
call
ret
cmp
je
mov
mov
mov
jmp
lret
aam
fcomp
aad
andb
or
aaa
pop
push
jg
lret
jl
sti
fcmovu
repz
xlat
cmp
ret
xor
in
jmp
out
fmulp
cmc
rcl
lret
repz
sti
cli
ljmp
repnz
out
ds
ror
out
jecxz
shl
aad
jecxz
aam
lret
loopne
call
jmp
shl
ret
sarl
cld
fdivrs
fdivr
sar
jecxz
test
fmulp
cmp
clc
repnz
cmp
lock
test
mov
stc
stc
int3
ljmp
cmc
cmp
cmp
shr
aam
out
cmp
leave
lock
jecxz
lret
fcmovnu
hlt
neg
jmp
rol
lock
fdivs
lock
repz
sti
stc
out
ror
orb
ljmp
cmp
cmc
aam
cli
repz
int
lock
std
call
in
enter
in
in
lret
vpsadbw
xor
aad
cmp
cli
sbb
cld
test
loope
in
sub
out
divb
xor
fdivr
cmp
hlt
test
call
or
mov
loope
loop
aas
in
aam
xlat
out
out
icebp
aas
sar
aad
xchg
leave
cmp
sti
addl
ret
jmp
jmp
cmc
lds
fucom
lret
call
loope
in
repnz
xor
iret
iret
xor
sti
test
rol
ret
mov
lret
lret
jecxz
into
jmp
fucomi
sub
out
cmp
fidivrl
in
sarb
filds
stc
iret
xchg
in
jmp
shlb
xor
shr
in
jmp
fstp
stc
rolb
leave
lret
test
in
rol
repz
lock
xor
rolb
sti
fsub
xlat
les
popl
shl
fcomp
jmp
call
cmp
fadd
out
sti
fiaddl
cld
out
ret
sub
icebp
sti
ret
cmp
ss
sar
fstpt
xchg
cli
idiv
lock
xlat
sub
xor
xor
fxch
fldl
out
enter
sbb
std
adcb
in
cmp
icebp
sti
aas
repz
into
push
rorb
popl
jecxz
ds
aad
jmp
int
iret
fucomip
sarl
addb
mov
aad
enter
repz
fadd
ffreep
int3
idivl
std
fcomi
mov
cli
mov
in
xchg
ret
cli
lret
fcom
ss
sar
jecxz
in
fldl2e
mov
mov
repz
lret
repz
stc
cmp
in
ds
fnstsw
fcomp
idiv
enter
mov
in
loope
mul
xor
xlat
out
jmp
cld
fcmovu
repnz
mov
xchg
adcb
shr
fcom
fcos
int3
fdecstp
rcr
shr
cld
ljmp
cmp
icebp
leave
clc
out
call
cmp
roll
or
in
out
in
xchg
cmc
nop
out
sub
cmc
xlat
fcmovnb
cmp
fdiv
in
int
aad
repz
xchg
cmp
loope
ficoml
sbb
jmp
fyl2x
fcmovnu
jmp
lock
add
mov
or
cli
std
test
mov
test
lret
ss
cli
xor
out
fucomip
test
clc
loopne
jmp
ret
out
jmp
int3
xor
leave
clc
loope
cmp
orb
sub
mov
loopne,pn
repnz
fucomp
cmp
fcmovnu
fld
cmp
test
aas
mov
out
loopne
mov
out
int
aaa
cmp
cmp
ds
fsub
test
xchg
out
fsubrl
sti
in
int3
ljmp
cmp
loope
rol
std
out
mov
xchg
out
iret
aaa
out
cmp
into
ljmp
cmp
jmp
mov
fcmovnb
in
mov
int
sub
jg
lret
jl
fld
sti
loopne
fcmovnu
fmulp
cld
mov
into
cmc
sub
imul
out
lret
into
loope
cmp
aaa
rolb
loopne
hlt
cld
fmull
jmp
lock
leave
rcr
aam
cmc
idivb
test
aad
fcom
xchg
xchg
fsubrp
in
lock
cmc
in
stc
icebp
cmc
into
fcmovu
aas
hlt
aaa
int3
rcl
ret
loopne
clc
mov
aad
xor
ljmp
ljmp
hlt
fcomp
xlat
cmc
mov
loop
out
in
xchg
test
loopne
repz
ss
in
ret
xor
fcomip
jmp
in
out
mov
shl
dec
out
out
out
cmp
std
idiv
xor
aad
fcom
out
ror
fdecstp
int3
fsubp
into
cld
mov
divb
shl
cmp
div
out
not
shl
cmc
fimull
fadds
out
in
repz
repnz
fcmovbe
hlt
rcl
cli
sti
cli
std
xchg
rol
repz
mov
rorl
shll
aaa
out
xlat
leave
in
jecxz
or
enter
pop
cli
ret
ljmp
das
xor
aam
out
ss
xor
xchg
rorb
cli
into
icebp
out
jmp
fstpt
in
enter
repnz
repnz
sar
fdivp
loop
test
lret
shr
out
int
shrl
xor
test
aam
cmp
test
aad
jecxz
sub
clc
in
std
fists
jmp
fdiv
hlt
in
fucomip
idiv
rcl
fiaddl
aad
loopne
rcr
decl
cmc
jmp
repz
hlt
aad
out
fcmovnb
loope
ret
test
in
in
xlat
repz
repnz
lret
fsub
cmp
les
ret
stc
into
xchg
shll
iret
out
clc
cli
in
fiaddl
icebp
call
fsubp
loopne
loope
call
cmp
call
sti
loopne
loop
out
and
cld
xlat
testl
jecxz
jecxz
xor
das
fbstp
ss
fcomp
ret
loopne
in
lret
in
enter
in
in
das
ret
enter
in
rcl
repz
neg
ret
test
xchg
xchg
in
repnz
cmp
aaa
sar
cmp
out
cmp
filds
jmp
out
shr
not
fsubr
lret
das
out
fildl
lock
fcomp
ds
vpsubusw
lret
fldl
jmp
cmp
fstpt
test
sti
sar
enter
ljmp
add
icebp
aam
int3
shl
fistpll
inc
repz
rcr
adc
cmc
int3
jecxz
orb
xor
cmc
vpaddq
in
clc
cmc
ret
aas
in
lock
icebp
std
mov
jecxz
mov
out
jecxz
test
fidivs
into
aaa
repnz
cmp
xlat
aaa
icebp
sbb
repz
jmp
in
test
into
std
shl
jmp
leave
xor
leave
aas
sub
repnz
test
test
out
in
repnz
clc
hlt
stc
cli
int
cmp
shr
rol
fadd
fcomp
enter
mov
lret
rclb
ljmp
test
incl
fisttps
fsub
in
into
iret
int
cmp
cmp
loope
cmc
cld
cmp
out
xchg
test
out
xor
in
pushl
call
rol
fcomp
adc
sar
and
fxch
popl
jecxz
aam
fdiv
ljmp
lret
ss
jmp
hlt
mov
in
repnz
jmp
out
aaa
fcmovnb
out
out
aad
ds
sti
stc
cmp
loopne
cli
sub
cld
loope
shl
cmp
cli
out
ljmp
xchg
neg
filds
repnz
shrb
xor
xor
ss
fcmovu
cli
fmul
int3
ret
aam
loope
std
cli
or
out
mov
jne
mov
mov
movsbl
xor
jmp
rcl
rcr
int
add
fdivrp
adc
lret
jl
nop
iret
in
xor
clc
jmp
sti
stc
icebp
lock
cmc
rolb
sbb
mov
call
xor
std
div
sbb
icebp
clc
xchg
ficoms
repnz
cs
xor
sti
xor
cmp
sti
aam
xchg
idiv
out
in
std
jmp
aad
rcl
leave
out
rcr
lret
icebp
fdivrp
int
cmc
icebp
repnz
jecxz
std
in
call
sub
lret
in
aam
cld
out
ror
or
rol
ljmp
jecxz
call
loopne
enter
fidivs
jecxz
fdivr
int3
xchg
sti
cmp
filds
xchg
sub
idiv
aam
xor
rcl
sub
vshufps
jmp
xchg
cld
test
int
repz
sar
leave
out
cli
rcl
ds
aas
rcr
cmp
icebp
cld
in
xchg
iret
shl
repnz
xor
cli
fcom
roll
aam
mov
xchg
into
aad
div
ss
clc
enter
neg
loopne
inc
in
std
mov
jmp
iret
xlat
loope
enter
into
idiv
div
cli
jecxz
out
out
sar
xchg
addb
xor
idivl
clc
ret
icebp
neg
aad
shl
jecxz
cli
fimuls
in
repnz
aas
ror
idivl
cmp
in
hlt
loop
cli
aam
fiadds
out
rol
imul
leave
ror
jmp
fbstp
out
lock
fninit
leave
enter
out
out
in
shl
clc
sti
sti
cld
fnstcw
rcl
cmp
icebp
out
repz
std
aad
fsin
clc
loope
out
xchg
jmp
leave
in
enter
cmp
faddp
mov
aad
test
shl
in
leave
ret
jmp
jmp
aad
rcl
loop
mov
xlat
test
icebp
repz
int3
call
loop
jmp
jmp
fidivrs
hlt
out
loop
leave
cli
lret
loopne
in
xchg
xchg
into
out
out
out
call
clc
std
leave
rcl
stc
fldlg2
xchg
mov
lds
ret
iret
jmp
xor
iret
ret
int
xor
ret
sti
rol
std
lret
stc
xlat
std
ljmp
ffreep
jmp
jecxz
fcmovnbe
repz
sti
shl
shr
in
jmp
test
std
fucom
repz
repz
ret
int
stc
loop
ljmp
in
fdivl
into
lock
sti
lret
ljmp
xor
call
out
sar
cld
sarl
out
ret
fldpi
testb
lret
in
xor
jecxz
shlb
cmp
cmp
ret
fneni(8087
out
out
les
mov
test
in
ljmp
xor
fstp
cli
cmp
fnstsw
neg
aas
cmp
enter
xchg
cld
loopne
in
lret
ljmp
aam
in
idiv
and
stc
jmp
in
call
mov
iret
lock
cmp
repnz
loop
sar
xlat
mov
into
aad
lock
hlt
rcr
xor
into
idivl
sub
out
mov
out
out
xlat
cmp
jmp
rcr
sti
idivb
out
loop
rcl
out
test
xchg
cld
jmp
out
shl
shl
sarl
cmp
sarb
mov
addb
mov
xchg
ror
icebp
ret
out
hlt
int
repnz
call
into
xchg
int
iret
lock
in
ds
ret
rcl
xor
jmp
rcl
loop
cmp
fcomip
std
ffreep
iret
int3
out
lret
xlat
fld
fcom
in
test
lret
fcmovbe
cmc
cli
rcr
cmp
icebp
in
ffreep
ds
cld
in
loop
out
aas
cs
cmp
int3
clc
lret
sti
xor
rcl
test
and
mul
test
mov
mov
xchg
jmp
into
fidivrs
jmp
add
cmp
je
movl
jmp
rcl
rcl
roll
fildl
fisttpl
jg
lret
jl
shr
sti
aam
call
test
iret
cld
jmp
mul
clc
out
int
icebp
aam
loop
in
in
fldl
out
cli
rcl
cs
aaa
int
leave
cmp
jmp
out
aas
lock
adc
xchg
ror
std
icebp
mov
enter
lret
aam
ret
hlt
shlb
out
jecxz
fcomp
rcr
clc
loope
mov
int3
cmp
cmp
cld
neg
hlt
loop
fdivrp
rol
loopne
loop
sti
leave
out
mov
fcmove
repz
jmp
dec
in
fsub
loope
aad
mov
fldln2
leave
in
mov
xor
loop
lds
cld
fsubp
stc
hlt
lret
aam
inc
stc
mov
out
out
loop
hlt
shl
aad
ret
aam
lock
shl
aam
inc
std
cli
decb
repz
out
xor
jmp
cld
cmp
cmp
test
call
fisttps
sub
int
cmp
fcmovu
lock
cli
loop
loopne
xchg
dec
mov
fcmovne
icebp
jmp
sarb
fsub
hlt
ffree
jmp
neg
mov
addl
fcmovu
in
hlt
divl
rcl
loop
cli
aad
aad
add
enter
popl
out
les
jmp
lock
test
hlt
fstp
mov
mov
call
lret
mov
in
shl
ror
xor
iret
fdiv
cmp
cld
repnz
test
jecxz
fdivr
ljmp
clc
xor
lock
clc
loope
rcl
loopne
loope
xchg
jecxz
fstp
xor
loope
hlt
cmc
in
roll
filds
lret
out
mov
lock
xlat
fstpt
repnz
ljmp
adc
fmul
in
xchg
rol
out
loop
std
cli
cld
rol
ret
ljmp
fcmovne
addl
cmp
repnz
cld
repz
ds
jecxz
mov
lret
int3
test
xchg
ret
cmc
shl
out
int3
iret
lock
rol
fadds
or
repnz
out
enter
icebp
int3
rcr
rcr
test
mov
fmuls
lret
fucom
and
cmp
call
rol
ss
neg
loop
call
into
cli
lret
hlt
repnz
shl
call
push
xchg
mov
clc
test
int3
vshufps
sub
into
cmp
cmp
cli
out
cmp
ds
leave
hlt
div
stc
lret
mov
out
jecxz
test
aam
cmp
lret
enter
rol
aad
repnz
call
loope
jmp
faddp
in
jmp
int
repnz
in
flds
test
fdivr
adc
in
or
into
addl
lret
cmc
ljmp
test
in
addl
das
out
sarb
clc
aam
addb
sti
loope
rcr
nop
in
loope
xor
xor
aam
ljmp
addl
lock
std
cld
mov
aaa
in
lret
ss
ljmp
lock
fadds
mov
enter
in
ljmp
ss
aas
sbb
ds
ret
ret
sub
addl
ljmp
sarb
loope
ljmp
fdivrp
xlat
in
in
addl
xor
cmc
xor
rcl
cmp
fcmovne
xchg
in
mov
cld
dec
shl
repz
shr
cmp
into
sar
leave
fisttpll
sti
lds
xor
lock
ss
xlat
into
out
repz
shl
jecxz
mov
lea
jmp
lret
ret
int
jle
shr
cmpb
jg
lret
jl
xchg
lock
nop
shr
hlt
lock
cld
call
shl
push
rol
mov
mov
xor
stc
in
std
ror
hlt
xor
ffreep
mov
cli
ljmp
xchg
nop
loopne
iret
cmp
jmp
cmp
neg
fld
xchg
jmp
mov
fsubr
xchg
ljmp
shl
ss
repz
aas
into
repnz
xrelease
clc
jecxz
in
in
enter
idivl
div
cli
int
sar
jmp
stc
jmp
sti
mov
out
out
repz
call
repnz
int
lret
icebp
rcr
fcmovnu
mov
fmuls
int3
in
lock
loop
into
lret
into
fdivr
cmp
cmp
loop
repz
cli
ret
fdivr
leave
sti
fstp
mov
xor
clc
xor
cmp
std
or
aam
icebp
rcr
jmp
cli
mov
call
shl
ljmp
into
roll
mov
cmc
jmp
stc
aaa
rcl
rcl
fnsave
rcl
fcmovnbe
xlat
mov
cli
loop
shl
fpatan
into
ror
ljmp
cmp
repnz
in
jmp
rorb
in
call
shr
int
xor
clc
fdiv
fxch
test
xchg
mov
lret
hlt
xlat
out
in
enter
out
aad
aad
repz
lock
ds
mul
xchg
mov
loop
call
rcr
shl
xor
rcr
fprem
in
cmc
lock
sar
cmp
and
lret
fsubp
int3
fmulp
icebp
out
int
fdivr
fstpt
cmp
stc
fcmovnu
vpextrw
testb
test
lock
cmp
cli
loope
aas
int
std
aad
rcr
xchg
mov
std
out
xchg
int
xor
sti
fidivs
sar
in
neg
rcr
fldl
mov
test
aam
ljmp
out
xor
sti
in
rol
ret
out
fsubr
filds
call
leave
out
sub
cmp
sti
cmp
cmc
shl
cld
addb
xlat
out
mov
jmp
repnz
rcl
out
roll
clc
jecxz
fcomp
sub
cli
into
test
loopne
out
leave
out
leave
in
iret
cmp
aaa
aas
xor
sar
cmp
clc
xlat
xchg
xchg
test
in
lret
nop
lret
not
imul
out
imul
iret
idiv
out
lret
int3
not
aam
clc
xchg
jmp
into
out
jmp
xor
shll
in
iret
xor
lret
sbb
out
not
jmp
jmp
jecxz
out
in
lret
jecxz
int
aam
out
jmp
repnz
aam
mul
fcmovb
shl
cmp
call
int3
xor
lret
sti
lock
cmc
cld
fdivp
xlat
cli
fsub
lret
in
test
xchg
shr
in
jmp
int
stc
xor
cs
fstp
jmp
fmul
ret
aad
sti
jmp
aam
cld
int3
enter
mov
mov
das
loop
in
out
aad
ds
hlt
in
xor
incb
int3
sub
jmp
aas
fxch
aas
loopne
loope
and
in
lret
out
jmp
in
hlt
jmp
sti
stc
loope
adc
fsub
in
loope
stc
out
mov
out
test
in
xlat
shl
shl
out
xor
test
shl
ret
in
into
and
dec
imul
repnz
int3
cmp
faddp
call
cli
faddp
out
in
call
shr
xchg
mul
in
repnz
icebp
cli
ds
in
in
std
cli
mov
sub
xchg
mov
ror
jmp
enter
ljmp
mov
repnz
clc
loope
jecxz
mov
lock
bnd
xlat
jmp
aaa
int
hlt
cli
cld
out
cmc
mov
in
mov
ret
in
test
enter
lret
mov
mov
addl
mov
jmp
rol
into
ret
rcl
aad
pop
repz
xchg
jecxz
dec
in
jg
lret
jl
fmulp
aam
ret
rol
sbb
in
jmp
xchg
hlt
sub
loopne
clc
xlat
cs
cmp
rolb
out
loope
out
int
mov
repz
jmp
aam
in
cmp
cld
into
cmp
hlt
sarl
out
ds
jecxz
sub
cld
iret
out
leave
loopne
sub
cli
jmp
cs
jmp
in
loop
test
test
loop
xchg
loopne
sub
out
fdiv
lret
cmp
cmp
sarl
and
movb
repnz
icebp
int3
lret
rcr
lret
in
out
repz
sti
lret
int3
decl
leave
in
iret
jmp
aaa
testl
in
dec
mov
ror
xor
ljmp
lock
fsubp
xchg
in
sbb
mov
fdivr
jmp
fxam
aam
int
into
stc
jecxz
sar
jecxz
loopne
cld
out
lret
lret
lock
xor
cmp
rcr
cmc
cmp
aam
rol
push
cmp
ljmp
iret
repz
loopne
in
jecxz
fldlg2
fmul
icebp
faddl
repnz
fcmovb
mov
lock
mov
lret
repz
into
not
ret
fcomp
fcmovnbe
mov
loope
loope
cmc
rol
xor
out
int
divl
not
in
div
cmp
frndint
clc
std
test
jmp
xor
int3
fiaddl
cld
in
xlat
jmp
cli
loopne
jmp
jmp
leave
in
xor
into
out
fptan
rcl
test
out
in
rol
in
ljmp
shrb
out
out
mov
lock
rcl
cli
cmc
test
in
cli
in
loope,pt
aam
vcvtpd2dq
clc
cld
sub
cmc
cmp
leave
out
jecxz
sar
lea
into
ret
ljmp
ljmp
mov
fstp
cld
out
ljmp
xor
aad
clc
cmp
icebp
rcl
repz
fcmove
xchg
test
xor
lret
out
fdivr
aam
aam
sbb
call
jmp
fiadds
loope
ljmp
call
into
repz
loop
out
aas
out
xor
nop
shlb
in
test
xlat
stc
sar
aaa
jmp
fdivrl
jecxz
test
int3
in
cld
rcr
xchg
xchg
xor
shlb
ss
std
std
fldl2e
out
out
std
inc
addl
repnz
cli
xor
jmp
sar
loopne
fdiv
idiv
addl
sti
addb
ljmp
sar
fucomi
fdivp
and
fadd
out
lock
ror
xor
lock
int3
hlt
fadd
in
xlat
out
cmp
imul
in
addb
cmc
jmp
out
in
idivb
xor
cld
in
xor
iret
adc
xchg
lock
xchg
int3
in
call
ljmp
xor
fcmovbe
hlt
inc
jmp
cld
xchg
cld
sub
out
lret
into
repnz
sarb
in
sbb
in
ret
fdivr
out
into
jmp
cmp
out
leave
std
clc
sarb
loop
into
cmp
xchg
fldl2t
call
fdiv
sbb
loopne
ss
xor
cmp
fdivs
idivb
rcl
ffree
ret
out
out
test
mov
xchg
lret
mov
in
aad
ss
aaa
std
jmp
mov
cmpb
iret
nop
fdivp
into
shr
xor
div
ljmp
testb
fcom
mov
out
in
lret
call
jecxz
ret
jmp
jmp
iret
test
clc
in
fsub
clc
call
shl
jmp
out
ret
lret
lock
lret
testb
rorb
lea
mov
jmp
into
int3
ret
ds
jge
jae
out
sahf
fiadds
and
lret
jl
hlt
fsub
or
mov
out
leave
sub
not
std
in
xlat
cmpl
loope
into
aam
aad
loope
xchg
div
das
loopne
cmc
into
out
in
in
ljmp
vpsrad
xchg
int
in
test
stc
rcr
hlt
adc
cmp
cmp
loop
fucomp
out
sub
loopne
in
cmp
ljmp
test
xor
fildl
loopne
xchg
jecxz
ss
sti
out
aam
cmp
lock
addb
test
repz
shll
lock
cmp
shl
int
fdivrp
decb
std
out
sti
sub
out
ret
xlat
fcmovbe
cs
leave
int3
sarl
xor
div
rcl
shl
ret
jecxz
fmul
out
repz
sti
iret
aad
iret
lret
cmp
std
ret
xlat
fcmovnu
fstp
ror
in
int3
in
xchg
leave
loope
fnstenv
call
ror
stc
div
fnstcw
rcr
fxch
loopne
aam
enter
test
leave
in
xor
enter
sti
loop
loop
mov
sti
int3
loopne
decl
ret
divb
lret
out
aam
hlt
test
loopne
cmp
rcl
mov
xchg
cld
xchg
enter
iret
xor
call
aaa
fdivrl
ljmp
ret
leave
ljmp
mov
out
ret
cmp
shl
call
cld
in
stc
xor
xchg
cli
loope
in
cli
jmp
jecxz
aaa
icebp
xor
idiv
cmp
int
aad
aam
out
sarb
int3
in
roll
lret
xlat
fldlg2
cmp
repz
loope
loope
in
incl
in
aam
in
repz
cmp
adc
aas
leave
fdivr
or
test
ljmp
xor
cmc
cmp
clc
loopne
hlt
jmp
sti
idiv
mov
int
fucom
test
in
in
imull
xor
rcr
cmp
repnz
loopne
in
hlt
idiv
ret
out
shl
loope
jmp
loope
call
sti
cmp
aam
fsubr
cli
out
adc
in
fdiv
mov
xchg
xchg
int
call
fidivrl
in
out
in
in
aad
cmp
mov
rorb
int3
fsubrp
loop
sub
ljmp
fdivp
rcl
loopne
fcomp
test
xor
out
mul
loopne
mov
and
in
xor
idiv
xlat
fsub
xchg
sti
inc
test
lret
enter
jmp
stc
enter
call
xor
aam
ret
sar
cld
out
int3
filds
lds
shr
xor
idivb
iret
clc
mov
enter
out
out
jecxz
fsubr
shr
jecxz
div
rcr
in
jmp
clc
jecxz
not
les
ficoml
test
in
jmp
repnz
fiaddl
mov
test
std
int
loope
cmc
fcmove
fcmovne
enter
fucomi
sbb
call
clc
in
nop
ljmp
xor
call
xor
out
clc
test
loope
repz
sbb
enter
fstp
lret
loop
aas
int
shl
out
cmc
cmp
hlt
repnz
mov
ret
fisttpl
shrl
shl
aaa
loop
fxch
leave
jmp
idivb
ds
neg
cld
fadds
out
sti
xchg
loope
shrl
aad
int3
cmp
lret
ret
shl
repnz
adc
in
fadd
movb
xor
ljmp
leave
aam
std
cmp
shl
loope
std
lret
int3
xchg
out
adc
int
cld
jmp
lret
icebp
test
jecxz
into
loopne
lds
call
out
repz
icebp
in
icebp
in
out
cmp
cmc
icebp
rol
addb
xlat
in
out
loop
iret
int
repz
xor
inc
or
aam
decl
add
add
rol
ds
fcmove
fisubrl
out
jmp
lret
jl
xor
cmp
aas
repz
xor
cmp
not
loope
cld
ret
mov
das
ljmp
sti
fdiv
fyl2xp1
fnstsw
fneni(8087
cmp
test
jmp
xchg
call
cmc
cli
cmp
int3
sti
hlt
adc
xlat
xchg
in
mov
sbb
icebp
in
ljmp
idiv
shr
rcr
cli
in
in
cmp
cld
clc
dec
xor
in
in
cmp
in
cmpl
test
ret
int3
mov
call
out
loope
sub
out
clc
cmc
fcomip
loop
stc
cli
mov
aam
fdivrp
fucomi
icebp
loopne
hlt
lret
xor
leave
cmp
enter
aas
xlat
fst
rorl
lret
mov
std
out
loope
xlat
leave
icebp
jecxz
ss
sbb
fsin
idivl
aad
flds
ljmp
xor
rcr
cli
xlat
sti
lock
add
fabs
mov
loope
ljmp
fsubr
aaa
in
in
lock
ds
hlt
fldl
cld
in
nop
ljmp
lret
fcomp
iret
in
jmp
ror
in
out
enter
dec
in
rorl
cs
aaa
sar
in
cmp
aas
in
cmp
xchg
cmc
test
jmp
xchg
loope
out
xor
xlat
xor
lret
xor
out
in
repz
aad
repz
out
out
orl
ret
leave
ret
call
loope
in
cld
test
enter
call
iret
jmp
out
cmc
fsubrs
ss
in
loopne
test
lret
shl
ret
leave
ss
aad
sti
ljmp
xlat
ds
dec
call
addb
repz
jmp
xlat
sarl
jecxz
lret
roll
and
xchg
out
repz
lock
cmp
enter
jmp
aam
loope
repz
cld
xlat
fmuls
cld
cmc
xor
fadd
clc
cmp
xor
rcr
test
stc
repz
rorl
loopne
ljmp
lret
out
int3
stc
cmc
ds
stc
repnz
cli
clc
ret
fcoml
in
clc
xor
repz
aas
in
ds
rol
rolb
aam
out
int3
out
test
xchg
mov
int3
jmp
sub
rol
aas
loopne
loopne
fdivrp
flds
leave
call
icebp
aad
sarl
jecxz
cmp
hlt
rcl
shl
test
fucomp
in
in
lret
loopne
fmull
fbstp
xor
in
fcmovb
fdivp
cld
fldln2
ds
div
test
ret
out
mov
in
call
jmp
lock
int3
int3
rcl
idiv
cmp
hlt
loope
lret
or
aaa
out
stc
aaa
cmp
test
call
in
jmp
std
out
leave
out
sti
in
out
fprem
xor
rcr
sti
fnstsw
f2xm1
div
cld
icebp
xlat
std
jecxz
orb
lret
out
ss
ror
fmul
flds
loope
cld
testl
int
xchg
jmp
jecxz
cli
sar
clc
fcomp
cmp
cmc
out
aaa
shl
in
mov
call
icebp
in
mov
das
lock
xor
aad
out
cld
aad
sar
fiaddl
clc
xchg
neg
or
leave
xchg
decb
xor
lock
cld
dec
ds
cmc
mov
mul
or
xchg
jmp
out
shl
ret
idiv
cli
cli
shl
into
in
cli
fdivr
loopne
in
cld
call
mov
jecxz
out
repz
fidivl
repnz
in
fucomp
fadds
jecxz
xchg
loop
fsub
in
cmp
clc
aad
jmp
aad
fadds
fmuls
ficoms
out
cld
int
clc
cli
cmp
ror
fpatan
shll
jmp
sarl
lret
rcr
fsubr
push
sub
jb
into
sub
lret
jl
sar
not
leave
fimuls
xchg
sub
int3
cmc
repz
fabs
not
out
div
test
jmp
in
mov
rol
fxch
clc
out
cmc
leave
fadds
not
jmp
fucom
shr
jecxz
xchg
ljmp
lock
sti
cmc
fnsetpm(287
xchg
fldl
fsubrp
iret
int
ss
fdivl
out
sti
cld
fsub
test
rcr
xchg
test
mov
out
fiadds
loop
das
jmp
cmp
roll
repz
cld
ljmp
sti
icebp
out
jmp
icebp
lock
fxtract
in
out
cmp
ror
and
enter
mov
jmp
rcl
leave
out
icebp
hlt
mov
lret
cmp
sti
movl
in
int
int
enter
aad
aad
lret
cli
into
xlat
out
into
les
test
fisttpl
xor
cmp
int3
leave
aaa
call
lock
loope
repnz
call
mov
fiaddl
out
xor
loop
fnstenv
xor
shl
fsub
sarl
loope
lret
cmc
test
fisttps
fisttpll
repnz
clc
jmp
fdivr
ds
call
int3
out
cmp
loopne
ror
in
lock
aaa
jmp
lret
rcr
aas
cld
fadd
xchg
out
loopne
xchg
xchg
loope
cs
in
repnz
in
jmp
iret
loopne
leave
call
xchg
jmp
mov
fnstenv
cmp
std
fdivrp
aam
aad
neg
rcl
fucomip
stc
fisttpl
sti
filds
ror
cmp
cmp
fcom
sarl
aas
aam
rol
ret
les
out
enter
repz
jmp
fdivr
loope
loopne
jecxz
xlat
orl
icebp
mov
jmp
les
call
in
shl
in
enter
stc
inc
xchg
jecxz
shl
div
in
iret
cld
ss
in
cmp
out
shl
fincstp
cli
test
loopne
xchg
mov
or
xor
out
aad
cmp
int
jmp
iret
in
shl
leave
fldl2t
jecxz
iret
xor
out
cli
xor
aas
sti
jecxz
addb
xchg
mov
out
lret
iret
int
jmp
in
xor
in
iret
xor
call
hlt
out
jecxz
std
addl
out
lock
jecxz
jmp
aas
fcmovnbe
inc
lock
mov
loop
xchg
test
mov
cmp
aaa
out
int3
roll
inc
call
mov
out
ret
in
clc
cmp
shl
loopne
stc
test
enter
fiadds
leave
lret
ljmp
in
rcl
fcmovnb
enter
aam
repz
loop
xor
dec
int3
sti
rol
rolb
neg
out
filds
ret
enter
aad
xlat
jmp
clc
iret
cld
testb
jmp
lret
out
or
ljmp
xlat
out
int
add
icebp
sar
testb
fdivp
out
dec
in
div
lret
out
fdiv
rcr
and
fincstp
ljmp
lea
ret
xor
stc
jmp
clc
fchs
aas
ds
aas
jmp
jmp
mov
shl
rol
cmp
iret
imulb
xlat
jmp
cmp
into
cld
ret
mov
loop
leave
xchg
fsub
lea
leave
rcr
rcr
cmp
cmp
hlt
call
movl
sub
xor
std
cmp
clc
aaa
fmul
rcr
repz
jecxz
shl
enter
sbb
xchg
roll
aaa
sti
cmp
sti
cmp
fildl
jecxz
push
fiadds
mov
mov
jmp
fcmovnbe
int
loope
insl
lahf
fucomp
inc
push
pushf
das
jg
lret
jl
leave
xor
icebp
xor
testb
in
aam
idiv
cld
test
loop
jmp
shl
iret
in
iret
cld
cmp
xor
fsub
int
fninit
sti
jmp
orl
cmp
int3
cmp
rol
loop
fdiv
clc
in
loope
mov
loopne
out
int3
ror
jmp
into
jmp
inc
test
ret
stc
fstp
faddl
std
out
test
xor
cmp
int3
sti
int3
clc
sbb
testl
adc
mov
enter
int
rolb
test
cmp
in
mov
or
int3
fxch
shll
out
repnz
rcl
and
fcmovnu
imul
mov
test
jmp
leave
out
in
sar
les
aad
int
fdivp
xlat
out
xchg
mov
mov
ljmp
in
in
cld
out
fucomi
std
cmp
sarb
out
roll
in
shr
in
int3
out
hlt
loope
xor
stc
fcmove
cld
cmp
or
in
jmp
jmp
rcll
enter
xor
cmp
int3
into
cmp
int3
out
div
std
aam
fucomp
jmp
std
loopne
xlat
shl
aaa
icebp
les
in
cmp
in
clc
stc
ljmp
aad
loop
repz
cli
out
aaa
aam
cld
hlt
addb
mov
in
fcoml
hlt
aaa
sar
cmp
fmulp
iret
in
aas
aam
cmp
stc
in
lret
orb
sub
lret
cmc
cmp
xor
aaa
loopne
repz
cmp
testl
loopne
xchg
xor
loop
out
ljmp
idiv
sti
add
adc
lret
mov
int
out
lret
leave
ror
sar
out
not
enter
jecxz
cmp
fucomp
dec
loop
mov
loop
leave
fcom
out
repz
out
aad
fyl2xp1
std
faddp
orb
sti
mov
icebp
shl
icebp
call
ror
iret
icebp
fcmovbe
fcomi
clc
aad
sub
loop
iret
in
loope
ret
cmc
into
out
fcomip
cld
fucomip
adc
test
jmp
mov
fmul
int
int
loop
hlt
xor
std
fldl2e
aam
icebp
cmp
aas
in
cmc
enter
clc
call
in
in
xlat
cs
repz
sti
test
idiv
rcr
repnz
enter
leave
and
or
enter
imul
out
fstp
ret
clc
fcom
mul
cld
sub
fadd
repz
nop
sub
in
shll
xor
iret
stc
xor
iret
aas
faddp
std
loop
xlat
in
mov
iret
iret
loope
lock
out
hlt
ljmp
cmp
cmp
in
in
test
out
cld
sti
filds
xor
clc
xor
into
stc
int
ss
repz
xlat
xabort
fcmovnu
loope
rolb
hlt
lock
repnz
lret
cmp
iret
and
sti
cli
orb
loopne
mov
ljmp
out
out
sar
loop
sti
rol
and
mov
in
rcr
addl
cmp
xor
aad
sbb
loopne
loope
fprem
aas
cld
lret
lret
rcr
loop
stc
stc
clc
lret
call
loope
rcr
xlat
xlat
fsubrp
neg
xchg
xchg
imul
lret
lock
aas
in
in
int
aam
aam
test
loopne
cld
iret
icebp
int
mov
loop
shl
fcmovnbe
aam
in
adc
fcmovu
lock
in
xchg
cs
int
in
in
aam
cmc
sti
fstpt
into
test
stc
jmp
out
in
loope
filds
fsub
shl
int3
cmp
call
lds
lock
cmc
fcomip
mov
mov
repnz
test
lret
xor
ss
repz
in
lock
add
jmp
iret
iret
sarb
aad
aad
pop
sbb
js
punpckhdq
jg
lret
jl
test
sbb
fucomip
loopne
fsub
in
jecxz
lret
neg
in
cmp
not
std
ds
jmp
test
mov
lret
cli
call
xor
shl
fsub
repz
aad
cld
int3
cli
incl
int3
lock
sti
ljmp
cld
sar
test
aad
xchg
test
cmp
and
into
out
lret
enter
jecxz
int
shl
xlat
addl
xchg
repz
fucomi
cmp
out
aam
int3
ffree
cmc
fcos
fnstsw
mov
shl
cmp
fidivl
fstp
int
stc
ror
sar
xchg
loop
cmp
out
lock
in
in
enter
out
fld
fcmovbe
cmp
shl
clc
cli
call
movl
aaa
stc
out
icebp
into
cmp
xlat
aam
aas
ds
cmp
ret
mov
in
in
enter
in
ret
call
jmp
cli
aam
and
ljmp
mov
ss
xor
fcomp
fdivs
xlat
loop
xlat
int3
test
in
enter
filds
jmp
xor
ror
fsubr
sti
iret
fidivrs
out
jmp
incl
repnz
jmp
aaa
lock
loop
aad
shr
enter
fimuls
in
xchg
leave
les
lret
in
cmp
fdivr
in
stc
cmc
cmp
loopne
ret
in
mov
cld
xchg
cmc
shll
cmp
int
lret
fcom
test
aam
in
jecxz
int
faddp
xchg
fmul
shr
xor
jecxz
xor
cmp
iret
cli
shr
iret
into
imul
int
lret
icebp
in
lea
ljmp
call
shr
call
xchg
in
call
xlat
sub
div
std
adc
cmc
loop
addl
neg
fmul
mov
fcomip
loop
stc
idiv
stc
xor
jmp
loopne
ljmp
in
cmc
lret
xlat
loopne
cli
std
xchg
repz
cmc
xlat
aam
ss
cld
aaa
enter
cmc
out
clc
aam
loop
xchg
in
mov
shr
and
shrl
xor
xor
aam
xlat
ret
out
test
sub
loop
mov
fsincos
in
ss
out
loopne
cli
in
fdivr
repz
fsub
loopne
jmp
iret
aam
rcr
das
fdiv
aad
aam
xlat
ret
ret
rol
fdivrs
cli
mov
ljmp
out
shr
ror
rcl
ss
clc
fcomp
ds
cmp
in
les
mov
adcl
call
icebp
idivl
aam
decl
loopne
std
xchg
jmp
leave
divl
enter
jmp
stc
ret
out
addb
fsubrp
lock
loopne
in
repnz
out
sti
lret
ss
div
shl
shr
fcmovu
loop
mov
ret
shl
ljmp
jmp
cmp
xlat
fxam
repnz
fsub
jmp
xor
xor
shr
cmp
enter
loope
out
test
aam
aam
out
loopne
fcmovnu
out
out
cmc
leave
in
in
cmp
icebp
lock
ret
sarl
xchg
fsub
loope
xchg
cmc
incb
jmp
icebp
sar
roll
bnd
jmp
cmp
test
xor
cmp
rcl
div
cmp
enter
sbb
mov
lret
aad
out
fdiv
xor
cld
hlt
xor
out
test
cmp
fiaddl
mov
lret
in
into
clc
sti
shlb
ljmp
std
vcmpsd
std
lds
int
orb
out
divl
sti
iret
hlt
fcomi
fucomip
fcmovu
in
incl
jmp
stc
stc
fstp
mov
pop
leave
ret
push
mov
jmp
rol
rol
fstp
dec
lahf
push
dec
and
ss
add
mov
repz
repz
sarl
bnd
cmp
into
in
icebp
in
in
filds
std
std
in
nop
jmp
leave
fstpt
fxch
in
test
ret
mov
idiv
mov
mov
lret
in
jmp
fdiv
xor
in
aam
fstp
loop
xchg
jmp
enter
fists
ret
in
sar
cmp
jmp
shl
out
call
aam
mov
mov
adcb
xlat
stc
call
out
bnd
cmc
sub
into
shl
cmc
in
mov
leave
cli
out
lock
loop
ds
ljmp
cmp
repnz
cld
cmp
cmc
cli
aas
in
in
into
mov
mov
out
rcl
cmc
ljmp
fsubp
test
filds
cli
int
xchg
mov
faddp
bnd
fyl2xp1
sti
fcomip
test
cmp
std
std
out
nop
jmp
ret
sarl
cmp
fidivs
into
in
in
xlat
test
xlat
idiv
cld
mov
lock
iret
out
hlt
xlat
jmp
repnz
ds
jmp
fsub
lret
ljmp
out
in
sti
cmp
loope
into
stc
clc
testl
sub
fcoml
aam
idivb
into
rcl
fstpt
int3
lock
fucom
faddp
lret
clc
clc
in
mov
not
int
bnd
roll
fcmovb
aad
mov
in
repz
shlb
ljmp
hlt
cli
cmp
xchg
sti
mul
cld
mov
jmp
loope
out
jmp
aas
in
repz
xor
in
enter
test
lret
lea
shlb
loopne
cmp
jmp
fildl
hlt
aad
jmp
enter
leave
orl
xor
int
lock
shl
ret
test
out
sti
into
out
int3
loop
lret
ljmp
fsub
jmp
repz
xlat
repz
loopne
faddl
jmp
out
shl
test
hlt
rcr
out
enter
loope
lret
shr
sub
ljmp
sub
inc
cli
sti
sar
les
test
ds
xor
shl
fprem
lret
cmp
sbb
in
mov
out
lock
test
shl
ljmp
ss
rcl
loopne
hlt
mov
std
fld
fmul
int
out
addl
fcmovbe
in
cli
cmp
iret
out
cld
cmp
mov
leave
fdivrp
test
mov
ss
int3
fcmovne
int
shl
shl
loop
jmp
fsin
fcmovnu
mov
in
ljmp
jmp
stc
loop
cmp
test
loope
in
lret
repz
hlt
enter
cmp
iret
lock
cmc
clc
addb
xchg
jecxz
xchg
mov
out
xlat
hlt
aaa
cmp
adc
fmull
stc
call
rcr
rcl
clc
repz
sarl
enter
lock
stc
mov
shl
icebp
lret
repz
out
int3
sti
out
cmp
shl
jmp
clc
enter
fimuls
iret
xor
int3
fidivl
cmp
loopne
fdivrl
repnz
lock
jmp
xor
jmp
xor
sti
lret
cmc
fdecstp
shlb
idiv
in
rcr
std
in
leave
lret
out
in
lret
aad
divl
sar
sarl
aam
clc
clc
repz
jmp
fcmovbe
test
cmp
fmul
cmp
cmp
icebp
rcl
jecxz
rcl
stc
ret
rcl
in
int3
in
xchg
jecxz
loopne
shl
rcr
xor
cmp
cmpb
into
testb
loopne
std
into
fldl
ret
xor
shr
int3
ds
out
jmp
mov
loopne
fsubr
mov
shrl
ret
iret
jmp
idivl
addb
in
out
div
out
ljmp
std
shl
rcl
in
fldl
jecxz
in
loope
call
shl
leave
sti
cmp
aaa
hlt
aad
lock
aaa
idivl
std
hlt
fdivr
stc
orl
mov
loope
icebp
ret
shr
ror
fnstcw
fucomi
cli
jecxz
out
fildl
mov
movb
out
push
xor
push
movl
jmp
into
rol
aad
rcl
jmp
inc
lods
into
and
jl
cmc
cmp
call
jecxz
jecxz
in
mov
fimull
out
int3
sar
lret
enter
in
cmp
idivl
cmp
cmc
in
test
shl
rol
iret
into
cld
jmp
sti
loop
hlt
sarb
fucom
repz
fucomi
mov
mov
cmc
fnstenv
cmp
std
xor
cmc
cmp
loope
ror
xlat
ret
call
fndisi(8087
iret
xchg
lret
xchg
test
ret
xor
aam
shll
aam
int3
clc
xor
fldl
addb
mov
hlt
sar
fdiv
cmp
hlt
lret
out
ror
repnz
rcr
ds
nop
lock
jmp
xor
stc
lock
clc
mul
repz
stc
test
loope
loopne
in
fadd
orb
icebp
call
int
ds
lret
fcmovb
stc
ret
fcmovb
sar
cli
fucom
in
hlt
jmp
jmp
lret
xor
lret
std
lock
jmp
mov
lret
cld
mov
repnz
shr
loop
cmc
out
cmp
sti
int
sti
test
aam
in
lret
in
mov
icebp
lret
iret
idivl
out
cmp
rcl
test
xchg
test
orl
out
clc
cmp
out
cli
repz
aas
filds
mov
sti
fsubr
orb
cmp
into
sti
out
into
in
cmp
fldl
xchg
lret
cs
out
div
fcmove
clc
cli
shr
fdivr
stc
fsub
rcr
mov
jecxz
call
rcr
shr
enter
ljmp
ret
decb
shr
call
vpaddq
ror
out
aaa
rol
into
rcr
sti
idiv
fsub
clc
testb
lret
mov
out
out
xor
cld
out
aas
ror
aam
cld
rcl
lock
stc
fsubp
out
test
vphaddubq
xor
xlat
in
aad
shr
xor
aam
idivl
lret
out
ret
cld
shl
lds
in
clc
int3
in
into
icebp
stc
addb
fucomi
out
sti
iret
hlt
out
shll
leave
loopne
hlt
stc
aas
fcmovbe
cmp
fincstp
cmc
test
fldl
xlat
lret
mov
loopne
xor
neg
int3
stc
xor
in
test
lock
icebp
out
fabs
iret
fdivr
mov
lret
mul
sub
aaa
iret
in
lret
int
out
ss
clc
jmp
cmp
test
and
call
ror
into
in
cld
int
into
lret
clc
sar
cmc
out
test
ffreep
lret
loop
leave
out
in
int
rcl
jmp
ror
ljmp
adc
mov
mov
out
dec
xor
repz
cmp
cmp
or
cmp
fdivr
xchg
test
test
call
ret
fstpt
lock
xchg
call
leave
ret
clc
out
fcoml
divb
imul
leave
xor
std
ds
ret
ljmp
aad
aad
xor
jecxz
aad
lret
fsincos
fmul
aam
out
repnz
aam
leave
testb
mov
xor
cli
out
hlt
call
fcomi
jecxz
mul
cld
in
lea
iret
in
aad
sti
cmc
fnstenv
jmp
lock
loop
rcr
faddp
rcl
stc
sbb
orb
call
aaa
cmp
cld
div
into
test
stc
cli
loopne
xchg
in
repz
das
shl
cli
ss
loopne
cmp
out
cld
test
out
std
dec
mov
call
xor
out
jmp
add
add
ljmp
leave
loopne
repz
cs
rcl
ljmp
flds
out
out
in
int
loope
iret
xchg
addl
into
hlt
in
leave
lock
clc
cmc
div
aas
clc
call
in
sub
xchg
out
out
repz
jmp
xor
adc
rcr
fdivr
mov
xchg
xchg
lock
icebp
fists
shl
cli
icebp
lret
loope
aam
out
out
xlat
rcl
shl
std
lret
in
ljmp
jecxz
into
cmp
cmp
hlt
rcr
loope
lret
ds
loop
fimull
in
jmp
out
hlt
lock
repz
testb
or
fimuls
int
stc
std
cmp
rcl
movl
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
sbb
jmp
rol
enter
aad
add
xchg
push
hlt
mov
push
sarb
add
cld
push
int3
sti
cld
faddl
stc
call
iret
roll
cli
jmp
enter
jecxz
rcr
jmp
lret
cmc
mul
out
out
shl
jmp
out
out
lret
fmulp
sti
idiv
xor
rcr
rcr
mov
sbb
clc
test
cld
mov
stc
into
xlat
icebp
repz
int3
ss
aam
ret
test
adc
mov
mov
jmp
cmp
cld
shr
int
in
out
cmp
hlt
mov
in
lock
loope
int3
ret
in
ljmp
cmp
repz
and
fscale
inc
out
jecxz
addl
div
cli
cmp
testb
stc
std
lret
xchg
cld
lret
xor
cs
jmp
vpandn
rcr
fdivrl
hlt
stc
lret
into
enter
cmp
ds
xlat
cmp
fucom
fucomi
repz
rolb
enter
fsubr
in
icebp
out
jecxz
xor
repz
xor
cli
fiaddl
cld
std
mov
leave
ljmp
in
hlt
into
icebp
std
lret
shr
sar
repz
fdivr
aas
sti
or
mov
enter
lock
hlt
fcmovbe
aad
std
ds
rcl
add
call
mov
loopne
icebp
sub
out
cld
int3
cmp
ret
rolb
jmp
ficoml
stc
xor
fucomp
lock
int3
fcmovbe
rcl
fdivr
les
fsubp
mov
icebp
jmp
ss
in
cld
sti
stc
fdivrs
int
fucomi
std
jmp
decl
iret
jmp
sub
aam
repz
cld
sbb
cli
lock
stc
jmp
int
fucom
in
rol
xlat
repnz
cmp
in
into
fxch
rcr
cmp
stc
jecxz
clc
out
out
lret
fucom
out
ljmp
repnz
ds
loope
aas
rcr
fcom
sti
in
xlat
dec
fmul
mov
fucomp
jmp
aad
ret
aad
idiv
std
fnstcw
dec
icebp
std
cmp
int
out
jmp
xchg
repz
repz
icebp
lret
into
neg
fprem1
fptan
cmp
mov
call
adc
lea
cli
into
cli
filds
loope
clc
cld
mul
inc
out
loop
xchg
xchg
jmp
jecxz
out
out
xor
repz
fcmovu
fiadds
cli
jmp
enter
in
sub
out
rol
cmp
cmp
cmp
aad
addl
ret
in
faddl
loop
aam
ror
out
out
cmp
xchg
flds
test
cmp
lret
clc
fcomi
imul
iret
fnstsw
cmc
xlat
aad
in
clc
in
addb
jecxz
aad
cmc
out
leave
jmp
in
ljmp
ret
out
lret
loopne
in
dec
out
out
sub
ret
int
ljmp
xchg
mov
add
out
lret
mul
lock
lret
cld
hlt
cmp
repz
clc
ljmp
icebp
mov
repnz
sar
jmp
std
cli
in
jecxz
loopne
xchg
out
mov
incl
cmp
fcmovnu
out
ds
jecxz
fnop
mul
div
sbb
in
adc
jecxz
xchg
xor
int3
xor
jmp
cs
ds
int
loope
sbb
ds
jmp
jmp
in
loop
loope
ret
idivl
cmp
in
push
xlat
fistpll
out
rolb
mov
call
out
shl
aaa
lret
out
xor
cmp
shl
mov
out
enter
in
ficoml
out
in
ror
jmp
jmp
fucom
aad
std
test
ret
test
loop
xchg
divl
cmc
jmp
ret
leave
clc
cli
int3
icebp
and
out
in
int3
lret
test
out
shrl
cs
xor
out
std
cli
jmp
icebp
neg
roll
cld
nop
into
cmc
xchg
leave
aaa
lock
into
out
in
jmp
hlt
cmp
out
aad
loop
clc
aad
test
in
icebp
mov
rorl
neg
in
lret
xlat
aam
repnz
in
icebp
aas
les
cli
mov
icebp
in
loop
aaa
cli
int3
cmp
into
ljmp
xchg
repz
fdivrp
repnz
out
aaa
out
call
push
fcomip
bnd
clc
movzbl
and
mov
mov
adc
xor
or
jmp
int3
ror
fnop
xchg
sti
add
pop
xor
les
add
cmc
sti
or
mov
in
jmp
in
in
sub
aaa
repnz
shl
inc
jecxz
sti
enter
loop
in
mul
jmp
call
clc
loopne
shl
xchg
loop
cli
cli
sub
sub
xlat
lock
dec
rol
std
loope
ds
mov
enter
in
jmp
sub
rol
iret
leave
enter
ds
ss
cli
loope
loope
repz
sub
aam
repnz
lret
fidivrl
jmp
aam
cld
out
inc
fcomip
test
jmp
fmulp
xor
cmp
jmp
leave
jmp
iret
roll
test
ds
cld
std
xlat
loop
fcoms
jmp
cmp
cmp
repnz
ss
loope
cld
clc
out
ljmp
jecxz
iret
icebp
into
loop
ss
fidivrl
sar
idiv
fbstp
ret
div
addb
loope
shrl
shlb
jmp
out
sarb
stc
test
out
ljmp
in
xor
xor
idiv
int
cmp
call
sti
movl
rcr
in
xor
in
stc
cld
fdivrl
jecxz
ret
adc
std
loop
std
out
ficoms
ror
in
shr
ror
rol
stc
in
jecxz
out
div
fadds
jecxz
out
das
loop
repnz
xor
xlat
icebp
repz
add
jecxz
test
rcl
repnz
loope
shll
fsubr
clc
in
in
cmc
cmp
hlt
xlat
mov
leave
loope
popl
lret
cmp
std
into
int3
shl
shl
in
loope
in
int
mov
out
shl
and
rcl
aam
into
xor
faddl
xor
cmc
mov
xchg
xchg
into
out
iret
in
jecxz
jmp
xor
ret
cmp
into
clc
in
loopne
sub
out
xchg
call
shrb
ret
xor
cld
aad
out
icebp
loopne
in
rol
cmp
loop
out
loopne
ljmp
cmp
in
call
cmc
icebp
addb
mov
faddl
int3
jecxz
cli
jmp
call
addl
loop
loopne
fucomi
popl
lds
call
cmp
rol
in
loopne
lret
mov
sti
shr
xchg
xor
shr
shr
in
int
imul
out
cli
rcl
std
fsubrp
cld
fcmovne
clc
sbb
jmp
call
ljmp
out
loop
stc
call
lret
mov
les
out
out
cmp
cmc
int3
cmp
cmp
std
decl
in
int
out
in
repnz
ret
ror
fcmovnbe
enter
fnstcw
jecxz
call
incl
in
cmp
aaa
clc
enter
out
lock
into
jmp
fmul
neg
cld
out
test
jecxz
jmp
jecxz
ret
fdecstp
dec
std
aam
fidivrl
std
lock
rcl
mov
stc
out
cli
dec
mov
lock
lret
repnz
cmp
aam
ret
in
repnz
mov
sub
out
out
enter
cmp
sti
sub
stc
loope
ljmp
in
ljmp
xor
lret
int
out
cmp
les
clc
test
rcr
fmulp
nop
int
ret
xor
cli
xlat
shr
stc
clc
iret
iret
std
aad
clc
fcomip
in
flds
xchg
nop
cs
stc
shr
lret
cmp
repnz
cmp
out
mov
out
out
shl
in
fsubrp
int3
jmp
cmc
fsqrt
cmp
cmp
stc
mov
jmp
in
fsin
icebp
in
sti
ret
cmp
rcr
in
fcmovne
iret
mov
xchg
in
mov
lret
clc
aaa
into
icebp
fcom
fcmovnbe
fldl
ret
cmp
in
fyl2x
sti
nop
ljmp
jmp
out
repz
sarb
aas
loop
dec
lret
lret
fstl
out
cmp
xor
xor
cmc
rol
int
in
fiaddl
cli
lret
ret
out
mov
lock
out
sti
cs
cmc
aad
cmp
out
in
jmp
xlat
mov
repz
sub
icebp
not
xlat
std
push
jecxz
hlt
repnz
cmc
aas
adc
bnd
xlat
ror
fcmovu
fcmovne
sbb
mov
jl
add
iret
fsin
ljmp
cs
in
lret
xor
ret
not
shl
cld
hlt
leave
loopne
fmul
mov
int
out
xor
out
clc
cmp
fdivr
repz
sti
ret
cmc
and
leave
jmp
lock
xor
xlat
cmp
aas
loopne
fneni(8087
jecxz
aad
clc
fst
int3
fscale
int3
ljmp
mov
out
jmp
stc
repnz
sar
aam
aam
in
mov
jmp
jmp
leave
sti
shlb
in
cmc
ss
fnstcw
cmp
fadds
rcr
loopne
ljmp
jmp
rcl
ljmp
sub
loop
rcr
leave
mov
ljmp
test
xor
in
in
cmc
icebp
fcomi
repnz
xlat
xlat
ffreep
sti
xchg
ffree
in
cld
sti
lret
ror
ror
jmp
xor
fucomi
cld
ss
and
hlt
xor
fcmovne
loopne
lret
shl
cld
mov
out
xlat
out
xor
xor
rcl
fmul
stc
out
cmc
out
stc
ret
cmc
lret
xchg
repz
adcb
jecxz
out
cmp
sti
sti
aad
loop
xchg
out
lret
in
jecxz
out
fmulp
out
xor
icebp
cmp
rcl
xor
xlat
aad
loop
in
in
enter
call
into
rcl
cmp
cmp
ds
cmp
idiv
cmc
add
jmp
test
clc
fmul
out
test
aad
div
cld
out
ljmp
ljmp
ret
idiv
in
aam
aam
hlt
iret
clc
in
loopne
loop
loopne
fcmovnu
ror
repz
into
sub
out
cmp
lret
fadd
cmp
xchg
fcmovne
fdivr
jmp
xchg
ret
in
icebp
in
aas
cmp
ret
test
mov
cld
xchg
mov
repz
mov
ljmp
cld
filds
ljmp
ss
fsubr
xor
aas
aad
in
add
xchg
fmul
fcoml
aad
leave
xlat
aam
lret
fmulp
shl
test
rcr
out
repnz
loopne
xchg
lret
shr
in
iret
int3
jmp
in
lock
int3
loopne
ret
cld
fdivr
stc
out
xchg
icebp
inc
loopne
ret
jmp
cmp
icebp
iret
rcl
cmp
ret
in
test
ficoms
mov
lret
hlt
in
sti
icebp
in
cmp
xlat
in
test
lock
out
xor
clc
iret
xor
shr
lret
cmp
ret
out
out
xchg
std
cmc
lret
aam
int3
sub
out
leave
aam
lock
hlt
ret
fcomip
ret
out
call
in
in
loope
aad
in
stc
cmp
clc
sti
cli
idiv
ror
rcr
test
lock
fmulp
ffree
rcr
loopne
shll
xor
fst
aam
enter
fdiv
cld
cmp
fdiv
ret
lret
xchg
loopne
filds
iret
divl
fsubrp
fdivrp
fstpt
test
repnz
jmp
repz
out
int3
repnz
into
icebp
cmp
cmp
ret
ds
stc
jecxz
dec
call
icebp
cld
loopne
cs
repz
fcmovnb
aad
mul
cmp
cmp
sub
in
in
jecxz
ret
call
fdivr
jmp
fcmovnbe
adc
stc
mov
jmp
loope
sub
sti
lret
cmp
aad
xlat
fdivr
sar
fcompp
sbb
div
hlt
xlat
addl
shl
fldl2e
aad
ror
stc
stc
icebp
fcompp
cmp
in
repnz
decl
in
out
shll
jmp
xor
into
testb
fadds
jecxz
xchg
addl
fldl2e
ljmp
out
les
in
in
jmp
in
loopne
lret
stc
sti
xor
out
int
neg
int3
test
enter
out
std
mov
repnz
icebp
das
repnz
cmc
enter
std
cmp
ret
rolb
test
stc
jmp
in
not
icebp
ret
clc
repnz
push
loopne
not
rcr
mov
repz
in
faddl
aas
jmp
in
aam
fcomip
hlt
fcmovb
icebp
lret
rolb
stc
xlat
clc
std
into
xchg
mov
loop
aaa
ret
ljmp
sti
idiv
fcmovbe
in
in
aam
xchg
call
cld
out
mov
jmp
leave
ds
fstp
fnstsw
aaa
dec
jmp
mov
add
sub
ret
cmc
rcl
out
cmp
testl
into
fsubp
fcoml
in
jmp
call
addb
ret
mov
out
jmp
repz
std
int
leave
jecxz
std
repnz
fdivr
ds
test
xchg
in
in
out
cmp
cld
repnz
loopne
decl
jecxz
ror
shl
out
out
aam
sti
ror
jecxz
cmp
les
xchg
aam
test
out
mov
neg
rol
leave
xor
shr
hlt
cmc
stc
lock
fcmovne
aas
clc
repz
fmuls
in
out
icebp
jmp
jecxz
cmc
test
repz
shl
in
ret
orb
cmc
mov
xlat
cmp
clc
ljmp
test
addl
jmp
repnz
shl
xor
ss
inc
repz
fcmovu
faddl
call
test
xor
xlat
out
fdiv
sti
int
std
loopne
test
rorb
iret
mov
xchg
sub
ret
in
cmp
shl
testl
ljmp
in
out
cmp
cmp
aas
cmp
xchg
or
test
ss
ret
icebp
xor
into
in
call
rcr
stc
in
not
cmp
xchg
cli
fucomip
inc
cmc
loopne
loop
aam
std
lret
lock
sar
cli
icebp
fcmovnb
xchg
ret
mov
cli
out
out
leave
out
in
fldln2
aaa
cmp
sti
cmp
sar
fsubp
rolb
jecxz
into
iret
mov
xor
cmc
leave
repz
fcos
fadd
sti
clc
out
lock
aam
jmp
loope
xchg
out
fucomp
aad
in
fld
rcr
cmp
out
jmp
fucomip
fisttpl
aad
xor
lret
cmp
roll
cmp
out
lret
mov
neg
jmp
fucomi
rcr
clc
test
xchg
cmc
enter
addb
mov
jecxz
iret
ret
iret
rcl
cmp
loope
adc
fstp
roll
out
divb
xlat
sub
in
int3
cmp
not
aam
shl
loopne
loope
popl
cmc
ss
ret
aad
sar
in
enter
loopne
jecxz
ror
ljmp
iret
call
repz
fdiv
sti
loope
hlt
fiaddl
fsub
mov
fxch
mov
rcl
into
sarl
shll
iret
rcl
fxch
cmp
xor
div
xchg
ret
ljmp
jecxz
neg
into
into
out
cmp
iret
repz
cmp
fnstsw
fmuls
cld
int
xor
jmp
jmp
in
sbb
in
in
sub
testb
icebp
cs
xor
sti
xor
int3
roll
loope
hlt
xchg
ret
xchg
in
nop
rol
xor
cmp
cmp
ret
fcmovb
hlt
test
xchg
call
bnd
xor
sub
repz
fiaddl
xchg
aas
or
leave
lock
xchg
stc
les
call
int3
fucom
cmp
incb
cmc
cli
loopne,pt
lea
loopne
rcl
mul
leave
cmp
icebp
fistpll
fld
aas
out
xchg
div
mov
loopne
std
int3
xchg
fucomp
test
rcl
ljmp
icebp
xlat
jmp
stc
aas
ds
call
mov
fldl
jmp
cmc
ljmp
repnz
sbb
enter
loopne
cld
test
hlt
mov
test
hlt
int3
ds
sarb
int3
rcr
cmp
loop
ror
xchg
shl
and
iret
ljmp
int
sti
xor
rol
std
mov
test
icebp
out
shl
shr
fldln2
int3
xor
hlt
jmp
ffree
cmp
and
jecxz
leave
int3
cld
loopne
jmp
aam
cmp
int
ss
cmpb
fiadds
test
mov
mov
xor
into
cs
aaa
out
fnstenv
cli
jmp
cmp
aad
aas
mov
mov
xchg
leave
ret
aad
int3
fdivs
lret
sti
hlt
aad
loopne
clc
hlt
cld
jmp
in
mov
hlt
jmp
cli
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
jmp
iret
ret
fstp
insb
sub
repz
mov
or
add
jmp
cmp
std
repnz
fiaddl
loopne
in
call
loope
jecxz
icebp
jecxz,pn
f2xm1
into
in
jmp
cli
aam
aad
jmp
int
lds
ljmp
int
out
cmp
faddl
cmp
shl
loope
sub
out
aas
jmp
aad
out
cmp
stc
neg
cmc
shl
fdivrp
addl
or
xor
lret
rcl
jmp
sti
fiadds
sub
stc
fprem
ret
jecxz
shl
in
idiv
into
enter
std
loopne
rcl
shr
ret
std
aad
mov
out
lea
loopne
fcom
cmc
cmp
imul
call
sar
in
std
mov
out
and
lret
lock
ss
xlat
jmp
cmp
sbb
loope
cmp
call
fsubr
in
out
out
xchg
jmp
enter
shl
in
cmp
out
sarl
icebp
call
into
fcomi
loop
mov
xor
shr
out
jmp
fcmovbe
shl
idiv
ret
or
mov
sub
std
xchg
jmp
call
stc
int
not
cmp
add
shl
adc
in
cli
lock
repz
shrb
fmul
lret
iret
repz
repnz
mov
sbb
int3
fcmovnbe
jecxz
out
xor
aaa
ss
repnz
aas
rcl
faddl
lret
lret
jmp
loopne
sub
jmp
stc
icebp
out
lret
jmp
vpmaxub
cmp
out
lret
decl
xor
std
shl
rcr
icebp
cmp
ds
rolb
ret
add
in
loop
int3
cmp
sub
sti
aad
jmp
fldz
iret
orb
fptan
in
out
imul
jecxz
cmpl
and
loop
jmp
jmp
xor
enter
jmp
cmp
loope
icebp
les
out
jecxz
xchg
test
xor
ss
cmp
sbb
rolb
leave
clc
leave
out
xchg
nop
out
ljmp
iret
not
and
cmp
repnz
fsubr
enter
fcomip
xor
xor
imul
xor
rcr
fcmovbe
shl
out
in
stc
sti
mov
lret
jecxz
dec
incb
ror
enter
cmp
sar
jmp
sbb
cld
movl
in
jmp
ret
in
ljmp
xlat
jmp
call
int3
mov
aas
aaa
xor
aaa
out
ljmp
adc
ds
out
idiv
lock
xchg
int3
imul
call
cli
shl
aad
loopne
filds
mov
xor
loope
shll
xlat
icebp
sar
out
rcr
ret
les
mov
jmp
int
in
ror
in
int3
cmp
out
out
cli
enter
cmp
mov
lret
loop
xchg
repz
cmp
repz
aas
loope
cmc
testl
jmp
in
enter
int
out
int
into
out
cmp
into
imul
test
loopne
int
cli
loop
loopne
lret
loopne
lret
icebp
cmp
xor
cli
xlat
repnz
cmc
les
or
into
out
aam
shl
lret
fsub
roll
test
filds
out
filds
clc
xor
jmp
icebp
int
out
shr
mov
fcmovb
jecxz
enter
ljmp
cmp
leave
enter
cmc
cli
sbb
xlat
call
out
jmp
test
aam
rol
hlt
xor
cmp
out
sti
add
loop
clc
jecxz
fcmovu
repz
xchg
sub
cmp
into
stc
enter
lret
addl
in
icebp
xchg
mov
lock
hlt
xor
xor
cs
out
call
out
cmp
stc
aam
fucomip
jecxz
fucompp
in
jecxz
repz
out
cmp
int3
enter
lret
cld
cld
sti
fcmovb
sbb
filds
in
xor
lret
ss
out
clc
std
aam
stc
ret
test
lret
fneni(8087
jecxz
out
out
xor
out
aad
cmp
idivb
ljmp
clc
aam
ds
icebp
ljmp
xor
lret
shl
fidivrs
fsubr
icebp
mov
mov
mov
mov
mov
xor
xor
add
add
jmp
rol
int3
fcmovnu
fcmovb
and
ja
cld
iret
mov
mov
jg
add
loopne
aam
fcmovnb
fildl
in
cld
xchg
jmp
call
xor
hlt
xlat
cld
incl
clc
fisttpll
shr
hlt
shll
repz
cli
adc
fcmovne
out
rcl
fxtract
loopne
cli
fdiv
cli
xor
loop
xor
leave
leave
in
int
aaa
cmp
adc
rcr
enter
fcmovnu
leave
test
xchg
jmp
hlt
xor
xlat
xor
ror
loope
test
ds
mov
xchg
xchg
xor
out
fidivl
jmp
icebp
icebp
cmp
fdivr
xor
out
ret
xchg
mov
in
popl
imul
cli
xor
cmp
in
ds
sti
xchg
imul
std
iret
icebp
test
xchg
mov
ret
repz
ljmp
fildl
mov
icebp
stc
loop
shl
fsubp
aaa
enter
in
lret
cld
repnz
add
std
call
mov
xor
cmp
int
sarb
shl
xrelease
xchg
cld
xchg
mov
call
repnz
lret
fnstenv
std
fst
lret
in
xlat
out
test
int
in
fisubrs
in
icebp
xor
ror
cmp
aad
test
vpavgb
cli
xchg
leave
orb
xor
cmp
cmp
int3
neg
clc
rcl
adc
loopne
leave
mov
xchg
mov
mov
in
ljmp
shr
cli
aad
hlt
jecxz
fadds
cmp
mov
loope
into
loop
ret
cs
hlt
stc
jmp
repz
sar
loop
iret
loope
and
fisttpl
xchg
xchg
div
xor
idivl
fidivrl
jmp
fcmovnu
fucom
into
repnz
leave
mov
incb
aad
not
ljmp
out
lret
sar
clc
repz
testl
std
mov
in
out
sarl
int
shr
lret
cmp
int
ret
vpandn
xchg
mov
out
cmp
loop
xor
int3
leave
rcr
ds
int
in
fadd
xlat
repnz
out
fmulp
fsub
into
mov
fbstp
lret
aam
lret
xor
cmp
aas
rcl
rolb
repnz
std
ljmp
in
lret
hlt
repz
cmc
icebp
shr
iret
cli
jmp
in
mov
call
adc
cmp
leave
enter
fdivs
ss
cmp
hlt
loopne
int
rol
in
out
out
xchg
sub
shr
enter
sti
ror
ret
shr
adc
in
jmp
shr
sub
stc
in
int
iret
fdivrp
fld1
loop
in
lret
mov
aaa
jmp
fcmovnb
shl
iret
cli
aas
fmulp
addb
rcr
mov
mov
loop
ljmp
loope
ss
cld
stc
rcr
out
into
in
loope
cmc
cmpb
in
ret
int3
lret
jmp
clc
aas
cmp
into
cmp
mul
stc
fcmove
loop
cld
icebp
hlt
aam
shll
fcmovnb
cmp
hlt
stc
pushl
out
ds
fdiv
loope
test
call
shl
xchg
div
hlt
rcl
in
lret
leave
in
clc
rcr
std
stc
fistpll
enter
out
faddl
xchg
out
ljmp
aaa
cmc
repnz
shr
repz
fld
in
clc
out
int3
jmp
xor
ljmp
cmp
cmc
repz
hlt
fdivp
enter
leave
addl
int3
cmc
lret
frndint
xor
hlt
in
stc
adc
mov
std
mov
mov
ret
div
cmp
cmp
call
clc
aam
loop
jmp
loop
xchg
call
in
lock
enter
lret
jecxz
in
shl
cmc
rolb
fld
sti
repnz
shr
xor
cmc
leave
xor
ss
loope
loop
rcr
fucomi
clc
out
cld
loope
int
call
lret
sti
rcr
dec
repnz
repz
shl
std
cld
nop
mov
xchg
xchg
adc
repnz
xor
cmc
cmp
loop
add
xchg
fisttpll
cli
shl
xchg
nop
loopne
jecxz
fdivs
lds
sarb
stc
hlt
cli
icebp
repnz
fsubr
ljmp
ljmp
sti
aam
fnstenv
cmp
sub
cmp
hlt
in
out
mov
xchg
xor
not
leave
cmp
repnz
rol
xchg
clc
xchg
scas
mov
cmp
jmp
iret
aad
ret
fst
dec
cwtl
mov
xchg
lock
add
inc
ds
leave
xchg
int
lret
rorl
int
cmp
sarl
icebp
lret
int3
fstp
fsubp
test
jecxz
xor
mov
test
out
xchg
fdivp
fdiv
ret
cs
jmp
std
out
lock
fucomp
xchg
aam
out
in
out
cmp
std
adc
fcomp
ret
mov
in
lret
in
leave
out
cmp
xor
loopne
ljmp
mov
fucom
fmul
mov
sub
shr
ret
movb
cmc
ds
int3
loop
xchg
cld
enter
xor
fucomi
jmp
jecxz
aas
and
leave
out
mov
clc
std
xchg
int
shll
iret
stc
xor
sar
addb
aam
in
loop
mov
out
icebp
xor
shr
shlb
in
repnz
cmp
into
into
rolb
iret
call
int
in
stc
jecxz
into
aad
repnz
repnz
cli
std
mov
mov
clc
out
sarb
int3
call
incl
fcmovnu
xchg
call
mov
int3
in
sarl
int3
int3
aad
cmp
clc
jmp
fdivr
incb
in
stc
mov
rorl
out
lock
cmc
fnstcw
out
out
jecxz
iret
out
out
fimull
mov
fisttpl
jecxz
fsubr
les
shr
cmp
cmp
lock
repz
enter
out
mov
jmp
xor
aaa
fldl2t
sarb
neg
stc
jecxz
lds
idiv
or
fdivrp
aam
out
sub
in
in
int3
fidivrs
loopne
sti
ljmp
xchg
into
imul
out
int
cmp
sar
or
cmp
sti
mov
lret
int3
ror
aad
aaa
enter
ss
out
sti
addl
cld
fldl
fcomip
repz
leave
int3
into
cmp
rcl
int
int3
into
in
hlt
mov
addb
xor
shl
fcomi
jmp
loope
xchg
ds
loope
std
loope
leave
loope
into
rorl
aam
int3
xor
hlt
loopne
std
cld
loop
cld
fdivrp
repnz
fdivr
cli
fucomp
jmp
xor
aam
fcos
cli
out
neg
loope
into
ds
in
enter
test
std
enter
xor
loope
repz
cs
fcmovnu
clc
int3
sar
lock
jecxz
rorb
lret
loop
cld
loope
sarl
shlb
int
shl
repnz
rcr
loop
leave
enter
fsub
iret
icebp
sub
pushl
fdivrs
fucomip
cmp
rcr
mov
fld1
test
call
rorl
lock
lock
in
clc
cmp
push
into
cmp
lret
lret
mov
shl
loopne
loop
aad
xor
leave
aas
aam
shl
imul
aam
clc
rol
les
lret
stc
enter
repnz
cmp
aad
cmp
sub
fscale
into
rorb
out
cmp
imul
xor
shl
cld
aas
fcomp
cld
aam
jmp
shrb
sarb
fsubr
shlb
jmp
lock
hlt
repz
loop
xchg
test
xor
iret
rcr
call
in
aam
ret
fcomp
fchs
int3
icebp
sar
aam
xor
xor
in
fucomi
cmp
fucomi
mov
rcr
shl
fimull
xchg
fdivp
jmp
out
hlt
clc
cmp
rolb
enter
xchg
mov
shlb
ljmp
enter
fiadds
loopne
loop
jmp
test
rcl
std
lret
into
cmp
cmp
iret
mov
fscale
cli
cli
sti
out
fsubrl
das
das
icebp
xor
stc
repnz
test
out
cmc
stc
ljmp
cld
xor
loop
fxch
in
ljmp
aad
fsubr
lds
xchg
xchg
sub
out
aam
lret
repnz
repnz
fadds
cli
test
or
shl
ror
ror
ss
rcr
stc
ss
iret
icebp
test
cli
clc
call
mov
fcmove
mov
shr
clc
hlt
in
fsubr
sti
aad
hlt
cmp
call
fst
clc
lret
mov
enter
mov
jmp
iret
int
ret
fstp
sbb
fstps
jg
add
ficoml
out
xor
jmp
stc
xlat
fcom
rcl
cli
aam
int
fcmovne
cld
ljmp
xlat
fcmovnb
cli
jmp
cmc
in
flds
jmp
xchg
stc
aaa
xor
lret
cmpl
into
clc
flds
in
stc
mov
repz
ss
fidivrs
fxch
cmc
loopne
ret
hlt
adc
xchg
xor
fnstsw
cmp
aad
les
ret
sti
mov
rorb
imul
lret
cmp
fsubrl
leave
idiv
aam
cmp
fcomi
cmc
sar
call
adc
hlt
into
leave
lret
xor
repz
in
fcom
cmp
in
sti
cli
ds
cmp
incl
cmc
out
sti
clc
cmp
aad
cld
cmp
fstp
ret
cmc
add
xlat
jmp
in
xor
enter
iret
cmp
shl
test
out
jmp
loop
loopne
mov
out
mov
cld
out
stc
aad
sub
call
fsubp
cmp
loop
cld
mov
int3
fmul
rorl
jmp
sti
in
xor
cli
int
repz
fucomp
loope
xchg
mov
in
jecxz
leave
hlt
xor
std
cmp
clc
rolb
std
int
sub
fucomip
into
aaa
int3
ror
in
rcl
icebp
idivb
fcomi
fadd
idivl
stc
xlat
hlt
in
mov
lret
sti
jmp
int3
loop
ss
fcomp
fsubr
stc
cmp
shl
jecxz
fimull
int3
fisttpll
loop
jecxz
xor
cmp
aam
lock
shl
mov
fcmovnbe
ljmp
xor
xor
aam
cmp
shll
into
lock
lock
fiadds
loopne
leave
rolb
out
out
stc
call
jmp
aas
fiaddl
mov
fsubp
aam
fmul
lock
mov
xor
into
fcom
out
sti
icebp
cmp
fdivr
in
fst
cmp
mov
fucomp
loopne
sub
in
jmp
cmp
cld
in
jmp
ljmp
mov
sbb
iret
lret
into
icebp
jmp
call
int
dec
lock
int3
ds
fildl
jmp
fsubrp
jecxz
test
in
loopne
jmp
cmp
std
fnstsw
into
xor
cmp
les
cld
filds
int3
mov
xlat
jecxz
xor
xor
out
xlat
rcr
hlt
jecxz
clc
test
test
fcmovnb
fucomip
cli
lret
sub
stc
xor
sti
xor
out
ret
aad
aad
rcr
orb
repnz
rol
repnz
fnstenv
shlb
loope
fdiv
out
out
mov
lret
int
lock
cli
repnz
xor
repz
lock
xlat
xlat
sbb
xchg
loopne
iret
sarb
fcom
fmul
icebp
loopne,pt
fadd
clc
cmp
jecxz
loopne
aas
clc
mov
cmc
xchg
into
test
int3
cmpl
sbb
test
in
leave
xchg
fcomip
int
xlat
fidivs
fsubr
xlat
fidivrs
fiaddl
cmc
out
jmp
jmp
repz
repz
xor
imul
rcl
not
clc
iret
call
out
call
mov
in
jecxz
fnstsw
repnz
aaa
fnstcw
aad
jmp
into
lret
ss
in
xor
cld
lea
std
mov
out
rcr
sti
fxch
cmp
fstpt
test
aas
ret
test
fmull
in
lret
enter
into
hlt
hlt
cmp
cmp
cmp
shl
rcr
repz
jecxz
out
lock
shl
out
iret
in
shl
cmp
enter
fldl
flds
mov
cli
ljmp
ss
rcr
ss
shl
cmc
out
mov
cli
out
std
fiaddl
sti
iret
aad
icebp
std
jmp
ret
cli
mov
loope
jmp
xabort
jmp
lret
call
clc
xor
aad
fld
cld
loop
in
in
mov
iret
jecxz
divb
loop
xor
into
sarb
rol
test
jecxz
int
mov
jmp
mov
call
xor
stc
jmp
stc
icebp
icebp
std
iret
in
out
fildll
in
aad
in
cmp
xor
in
lock
mov
fdivr
mov
lret
shl
bnd
xor
add
jmp
rol
sarl
rcl
mov
sti
popf
clc
ds
jl
aaa
fsubr
ret
stc
cmp
fstpt
xchg
rcr
ffree
enter
filds
in
int3
int3
aad
lret
cmp
cmp
rol
addb
enter
fcmovu
mov
call
call
stc
fidivrl
neg
icebp
jmp
shl
int
out
cmp
cmp
sarl
cld
cmp
clc
clc
stc
fiaddl
sub
stc
repnz
rcr
cmpl
sarl
shr
fcomip
call
out
out
in
ret
cli
jmp
cmp
repz
flds
fucomp
add
iret
ljmp
shr
xor
fcmovne
out
loopne
repnz
repz
in
fxch
fmul
mov
shrl
shl
std
repnz
aas
loopne
cmp
in
enter
mov
in
hlt
mov
shl
in
fsubr
imul
lret
cli
idivl
shl
test
test
xchg
out
xchg
loopne
lock
div
ljmp
clc
out
inc
jmp
stc
lea
not
div
leave
int
cmp
fucomip
jmp
addb
jecxz
cld
and
in
int
rcl
lret
divl
repz
fdivs
fcmovu
hlt
int3
sti
in
leave
sar
lea
leave
icebp
xor
lock
jmp
xor
cmp
cmp
in
addb
mov
jmp
aas
stc
ret
fadd
ljmp
rcl
fcmovbe
cmp
enter
mov
mov
in
out
lret
hlt
loop
cmp
lock
loopne
faddl
loopne
in
in
fdivp
rcl
stc
into
cmp
std
lret
cmp
ds
fdivp
fstp
ret
out
out
repz
cld
mov
loop
shlb
call
xor
ror
jmp
cmc
iret
in
xor
loop
lock
test
rcl
shl
call
in
std
cld
int
cli
iret
fidivs
cmp
in
cmp
ret
loope
leave
mov
int3
lret
test
out
in
shl
xor
icebp
fdivs
mov
icebp
enter
repnz
aam
aad
stc
mov
out
into
jecxz
mov
out
ror
cmp
xlat
ljmp
fiadds
cli
sti
cmc
cmp
fmul
mov
shr
xchg
shl
icebp
xlat
cmp
stc
fmulp
cmp
shr
test
cmp
std
cld
ljmp
in
shl
imul
into
fdiv
out
std
std
div
loop
lock
rolb
std
fucom
leave
in
jmp
icebp
out
out
enter
movb
ret
call
ds
out
sar
jmp
lret
xor
lret
cmc
aam
fcmovnu
clc
ret
lret
loope
fiaddl
iret
call
sarl
in
jecxz
jecxz
fidivrl
loop
out
mov
mov
into
icebp
shrl
out
cmp
rol
jmp
into
ds
cld
shl
fmul
leave
loop
mov
in
cld
jmp
ljmp
cmpl
mov
jmp
fcomip
or
jmp
out
cmc
cli
xlat
neg
adc
cmp
jmp
stc
mov
loope
shl
in
hlt
sub
int3
sti
cmp
cmp
cmc
add
mov
in
repz
icebp
iret
hlt
lret
repnz
lock
shl
std
stc
in
out
test
orl
in
testb
cmp
ror
or
jmp
xchg
shrb
repz
xor
lds
cmp
cmp
cmp
xlat
aam
aad
enter
fsub
in
loopne
loope
adc
out
ss
hlt
fnstsw
test
ret
mov
int
in
into
in
lret
lret
xlat
out
int
aam
repz
icebp
fadd
hlt
call
xchg
mul
out
out
jmp
rcl
roll
fsubr
hlt
ljmp
fdivr
loop
rcl
lret
aam
mul
call
aas
loope
fxtract
shl
fmull
icebp
cli
lret
in
xchg
in
repz
xor
jmp
aas
sub
clc
ds
rcr
sti
addl
mov
ss
lock
out
repnz
out
loop
or
sub
enter
test
xlat
ret
xlat
lret
sti
clc
call
incl
add
aad
aad
push
roll
jl
add
aas
repz
in
repz
bnd
mov
dec
in
xchg
out
iret
fcmovnu
ljmp
xlat
ret
lret
fmul
fiadds
jecxz
clc
cmc
rcr
lret
shr
cmp
xchg
xchg
int
xchg
imull
out
xor
sti
fxch
fcmovnbe
out
cli
sti
shl
out
loop
jmp
lret
out
aaa
fcmovnb
out
not
int3
aad
aas
fadd
rcl
loopne
and
fmul
nop
in
int
vpaddq
sti
sti
repnz
clc
ror
ffreep
shr
sar
xlat
sar
leave
out
fmul
icebp
loopne
int3
sub
aam
clc
enter
repz
jecxz
add
sti
xlat
cli
cld
lret
lret
std
ljmp
sarl
cmp
xor
cmp
cmp
in
fsubp
xchg
hlt
lock
ljmp
iret
rol
out
rcr
test
out
rorl
cs
jmp
out
aaa
sar
aad
hlt
mov
leave
idivl
jmp
xchg
sbb
loopne
xor
out
in
stc
sarb
shl
iret
stc
loop
in
sbb
xchg
cmc
test
icebp
fdivr
aas
leave
rcr
cmp
clc
shl
orb
out
in
cmc
call
lret
aad
loopne
int3
rol
mov
fstp
icebp
out
sti
ljmp
cmp
out
xor
aas
clc
fistpll
and
lock
icebp
stc
icebp
loope
ds
xlat
cmp
neg
cmp
repz
out
int3
fldl
xchg
div
stc
fucom
call
int3
into
in
fidivl
xlat
cmp
iret
ljmp
mov
loop
out
fucompp
ljmp
cmp
fcmovnb
cmp
lock
loope
jmp
std
out
mov
out
mov
jecxz
cs
leave
ljmp
out
repz
fcmove
stc
lret
out
ljmp
xor
repnz
hlt
xlat
cmp
cmp
cmp
lret
add
testl
cmc
sarb
jmp
icebp
cmp
cld
hlt
xor
fiadds
in
xchg
ss
jecxz
aaa
out
fucomp
cmpl
int3
loop
out
inc
fcmovnb
out
std
mov
loopne
xchg
jecxz
sub
xor
cmp
cmc
repz
jmp
neg
loopne
jmp
test
fiadds
in
repz
stc
shr
cmp
aas
loopne
xor
ret
test
xchg
sar
lea
sti
xor
repnz
shl
xlat
jecxz
fcmovu
cli
sti
ljmp
loopne
cmc
ss
aaa
ss
shl
cmp
fadd
rcl
test
ret
int
lret
fcmovnbe
jecxz
ljmp
enter
fcmovu
cmp
cmc
hlt
movl
jmp
xor
fucomi
clc
cmp
cmp
fcmovbe
cli
rol
idivl
std
enter
out
int3
in
rorb
ds
repz
fcmovbe
xlat
imul
cmc
cmp
inc
aam
call
test
xchg
test
shr
repnz
fldz
rcl
repz
ret
loope
sti
cmp
shr
ljmp
mov
rolb
ret
in
ret
leave
mov
sub
in
int
xor
sarl
cmp
clc
hlt
lock
stc
ds
loop
xchg
xchg
aam
int3
xor
ror
xor
cmp
lret
roll
fucom
neg
dec
out
xchg
sub
xor
hlt
fmul
cmc
cli
xlat
repz
call
jmp
xchg
xchg
icebp
ret
out
cmc
cmp
rcl
lret
ror
aam
repz
aad
out
in
mov
fidivs
ror
into
loop
std
cld
jmp
fld
rolb
in
fmul
xchg
ror
rorl
repz
cmp
fucompp
icebp
shl
aam
faddp
out
loop
jecxz
jmp
int3
enter
in
iret
std
into
shr
cld
ljmp
and
call
int
icebp
call
xor
xlat
shl
hlt
cmp
sarl
fcom
fdiv
jecxz
loope
xchg
xchg
out
xor
out
in
clc
hlt
fcmovnbe
adc
and
fdivr
clc
mov
ljmp
call
iret
fcos
ret
test
imul
add
mov
mov
pop
leave
ret
push
mov
push
not
push
movl
mov
mov
mov
mov
mov
movl
cmp
movl
jmp
int3
aam
xlat
fst
fldl
mov
pop
insl
int
repz
std
add
shl
cli
ffree
loopne
in
ret
lret
std
repnz
xor
ss
xor
iret
out
repz
fdivrl
clc
aas
fstp
loop
fsub
int
leave
iret
dec
loopne
mov
aam
ret
repz
aaa
std
cli
idivl
int3
call
cli
call
fucompp
hlt
in
cld
std
loopne
loopne
xchg
leave
repnz
in
ror
sti
ljmp
sti
ret
roll
icebp
loope
out
mov
aaa
hlt
stc
lret
out
ss
cmp
not
in
hlt
mov
loopne
mov
loope
test
lret
sub
int3
cmc
in
mul
out
cmp
stc
loope
in
sub
leave
cmc
ret
in
fcmovne
jecxz
aad
sub
repnz
cs
enter
cmp
xlat
loopne
cmc
xchg
fsub
mov
out
int3
sub
das
cmc
stc
sub
repnz
aam
xlat
xlat
shr
aam
fucomi
loop
fimuls
jecxz
in
ljmp
enter
test
rolb
sub
push
in
mov
int3
clc
jmp
xor
sarb
cmp
not
rol
jmp
xchg
in
lea
ds
clc
das
cs
into
icebp
lret
mul
xlat
repnz
ljmp
loopne
enter
cmp
lret
into
ret
test
cli
cmp
aad
fsincos
in
ficoml
out
enter
shl
int
sar
test
fdivrl
les
enter
int
xor
icebp
fdiv
roll
jmp
incb
sub
loopne
xor
ljmp
addl
and
ljmp
int3
aam
neg
cmp
fsubp
sti
call
in
mov
leave
fxch
fnstenv
sti
cmp
cmp
div
stc
ss
ret
stc
flds
fsub
cld
lret
enter
out
cmc
int
lret
fdivrs
cmp
sarl
cmp
into
xchg
movl
in
loopne
int3
ror
loopne
sub
leave
out
into
enter
aad
aas
ret
mov
stc
std
sub
xchg
shr
in
xor
out
shl
in
ss
cmc
faddl
in
out
loopne
sub
ljmp
fidivrs
repnz
out
rcl
addb
iret
test
nop
loopne
loope
out
aad
sti
ds
sar
test
xchg
mov
fiadds
inc
test
in
sar
in
lret
cmp
div
loopne
call
ljmp
iret
cmp
cmp
clc
sarl
loopne
mov
cli
nop
int3
cli
loope
sub
cmc
xlat
hlt
lock
out
xor
rolb
cmp
sti
incb
stc
jmp
hlt
cmc
loopne
les
hlt
int3
sti
cmp
in
loop
hlt
cmp
cli
xchg
fdivrp
mov
shr
in
leave
stc
out
lock
rcr
leave
call
idivb
fneni(8087
cli
in
mov
fninit
loope
out
iret
repz
repz
aas
shl
fsub
test
jecxz
ror
mov
addb
lret
out
xor
xor
loope
test
mov
rol
in
lret
fsubr
fmulp
ss
ret
repz
ret
cli
addb
shrl
in
fcom
lret
jmp
ds
fdivp
hlt
stc
clc
aad
xrelease
in
icebp
cmc
cmc
lock
in
jmp
ror
loope
aas
jecxz
rcl
fmul
std
in
mov
iret
xchg
in
xlat
hlt
xor
jmp
jmp
shl
loope
cli
test
lret
movb
xor
loop
xor
into
ds
or
aam
in
mov
xchg
in
fsub
shr
ljmp
icebp
cmp
out
sarl
fsubrp
testl
icebp
fdivr
icebp
addb
cmp
cld
aam
iret
ret
cld
enter
out
loop
in
into
fisttps
call
iret
cmp
repnz
orl
add
inc
clc
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
add
mov
movzwl
not
jmp
rcl
ror
fstp
fldenv
xchg
push
jmp
idivl
std
add
out
shl
aam
sti
jmp
roll
ds
out
hlt
call
repnz
cmp
fsin
addb
out
iret
xchg
jecxz
icebp
into
lock
fidivs
xor
ret
in
aas
sbb
fcmovbe
xchg
in
mov
loop
mov
ljmp
out
out
sbb
rcr
fcomp
ds
loope
jecxz
repz
out
xor
repz
cmc
in
aas
into
ret
rol
cmp
out
iret
and
mov
shl
in
into
cmp
cli
cmp
cmc
cmp
leave
hlt
xchg
std
mov
test
in
leave
jmp
call
cli
cmp
in
fdivr
std
out
xchg
out
loopne
repz
enter
lret
cmp
xlat
loop
sar
inc
xchg
out
xchg
out
shl
sub
int3
fnstcw
dec
cld
fcmovu
ret
aas
in
stc
aad
add
ljmp
cld
test
mov
stc
shrb
jecxz
fldlg2
stc
sti
cld
lret
fsubr
in
mov
flds
xchg
jecxz
xor
lret
loopne
repnz
cli
mul
xchg
add
loope
loop
out
out
xor
cmp
in
cmp
aad
fcmovu
loope
sarl
sub
xor
ret
orb
lret
shl
shr
dec
testl
stc
fisttps
int
iret
jmp
aaa
jmp
rcl
cmp
cmc
fadd
cmp
loop
fyl2x
mov
rorl
xor
lret
jmp
int3
cmc
jecxz
cld
icebp
shl
fmuls
in
popl
xor
shl
rcr
stc
int3
aas
ds
jecxz
test
idiv
ds
loope
fstp
mov
aam
in
sar
cmp
sti
ror
sar
cmp
shl
test
xchg
fcomp
mov
loop
int3
ljmp
fcmovnbe
test
faddp
repnz
icebp
leave
in
mov
fcomp
xchg
mov
les
clc
in
out
fbstp
repz
test
aam
cmc
out
les
xchg
enter
jmp
leave
fcmovnbe
out
in
out
in
ds
rcr
ljmp
out
mov
aad
fnstenv
div
repnz
sarb
xchg
loop
loope
cld
xchg
in
hlt
sub
in
cs
out
lret
xor
repz
cld
aad
mul
sti
addl
hlt
in
out
cmp
leave
lret
out
repz
stc
mul
cld
testl
in
cmc
out
mul
cmp
xor
xor
hlt
cmp
aad
loope
jecxz
loopne
mov
leave
sti
into
out
int
xor
xor
xor
lock
iret
fdivrs
rcr
cli
cmp
ret
iret
mov
xchg
in
nop
mov
into
iret
shr
sti
sar
int3
fdivp
roll
cld
sub
fildl
out
repnz
xlat
iret
cmp
jecxz
fcomip
repz
roll
nop
int
loop
in
rol
loop
cmp
sti
ror
aad
ds
xlat
test
mov
rorl
sub
into
iret
shl
xor
jmp
sti
repz
idiv
out
int3
out
ficoms
xor
out
lret
divl
fdivr
lock
repnz
test
jmp
loop
lret
in
out
iret
xor
shl
int
cmc
icebp
in
ror
call
shl
repz
fsubp
jmp
jmp
xor
fmul
leave
in
cmp
loope
ret
in
lret
int3
mov
xchg
xor
in
cmc
int3
clc
xor
sub
fcom
in
mov
in
enter
loop
leave
jmp
sti
aas
ss
int3
idivb
lds
in
fucom
loopne
jmp
hlt
aam
fmul
fadd
cli
shl
les
in
out
loop
nop
fisttpll
in
enter
int
aam
iret
cmc
cmp
sar
loopne
fiadds
int
jecxz
das
iret
xor
leave
int3
icebp
cmp
and
mov
mov
jmp
jmp
enter
fstp
fstp
adc
rclb
jl
add
aas
shl
sbb
lret
out
mov
cld
xchg
int3
push
cmc
fdivrs
aad
sti
fldl2e
fsubrp
fistpll
xlat
sar
shl
fcomp
in
jmp
call
in
in
in
cld
fdiv
xor
enter
xlat
xor
in
orl
xchg
in
mul
lret
out
sar
fdivp
hlt
icebp
fildl
out
jmp
jecxz
shl
mov
into
out
jmp
aas
fdiv
cmc
std
xlat
fldl
orb
iret
mov
in
xlat
rcl
out
ss
xor
shl
fldl
fldpi
fmul
iret
jecxz
sub
out
xor
hlt
cmp
aas
shr
fst
ret
call
fildl
adcb
cs
lret
in
into
lock
aas
shl
ffreep
sar
xchg
jmp
xchg
loopne
call
into
icebp
cmp
int
xlat
aad
incl
fstp
sbb
aam
ss
jmp
out
ss
fadds
lock
fsubr
jecxz
icebp
std
out
out
mov
xlat
shl
leave
xor
xlat
fdivr
jmp
into
hlt
rol
call
test
int3
xor
ret
cs
xor
idiv
cmc
fcom
cmp
cmc
ret
test
int
out
xchg
aam
test
xor
leave
cmp
fsubrp
jecxz
ds
loope
ret
inc
leave
fsub
mov
adcb
cmp
cli
cmp
sti
shl
fidivrl
loop
fiaddl
fndisi(8087
loopne
decl
ljmp
shl
repz
xor
rcr
aas
clc
out
bnd
leave
or
iret
aam
xor
stc
iret
xor
repz
cmc
xlat
repnz
out
test
enter
enter
in
jmp
aad
iret
cmp
in
rcl
loop
jecxz
jecxz
orl
jmp
call
rol
iret
fbstp
test
rcl
fcmovnbe
mov
into
mov
iret
fucomp
in
lret
stc
sti
xor
ljmp
vpmovmskb
jmp
xchg
ljmp
xor
repnz
jmp
icebp
test
rol
jmp
test
cli
hlt
pop
repnz
hlt
cmp
in
hlt
xlat
sarb
shl
out
cli
xlat
aam
in
jecxz
mov
xchg
lock
leave
lret
lret
fmul
std
clc
out
loope
hlt
mov
xor
xchg
fimull
hlt
sub
enter
aas
repnz
ds
std
jecxz
leave
add
addb
in
call
xor
aas
fcmovnu
fxch
repnz
test
rcl
clc
stc
or
int
xchg
xor
cmp
xor
xor
iret
int3
loop
add
xchg
lret
iret
mov
int
out
xlat
leave
jecxz
xor
int3
divl
cmpb
sarb
repz
xchg
int
xor
in
ror
ljmp
cmp
aas
ss
loop
jecxz
repnz
std
rcr
enter
clc
call
ljmp
repnz
jmp
fucom
out
adc
fadd
out
orl
loope
ret
fcomi
stc
aam
jmp
cli
shl
lock
in
ds
iret
ljmp
ljmp
repnz
cmp
std
aam
neg
fmull
lret
fmull
iret
vpand
shl
fcmovnu
loope
div
std
loop
test
loopne
fisttps
out
fxch
lock
shr
cmc
aam
fsubr
test
fucom
in
mov
int3
nop
icebp
icebp
repz
xor
sar
cmpb
shl
in
mov
nop
out
ljmp
incl
std
cmp
idiv
mov
out
fcmovu
and
rcl
loop
in
fstp
xor
sti
stc
in
cmc
in
rcr
and
clc
lret
int3
icebp
cmc
neg
xor
fucomi
cld
fcmovnbe
cld
out
repz
add
xchg
shll
aaa
cmp
in
fstp
fucomp
xor
sahf
adc
jmp
aad
rcr
fstp
sbb
xchg
rorl
jl
sub
div
out
cli
int
jecxz
dec
xor
clc
aam
div
ror
cmp
out
rcl
not
stc
into
neg
ffree
ret
movb
ret
hlt
fcmovne
fmul
fxch
in
cli
inc
fdiv
fld
mov
sti
std
mov
vcomiss
aad
ror
idivb
fxch
int
in
jecxz
fimuls
leave
jecxz
jmp
iret
ret
icebp
cmp
aaa
aad
fcmovne
lret
imul
in
stc
loopne
idiv
enter
enter
fildll
leave
leave
enter
xlat
fucomi
cmp
testl
nop
in
nop
out
rol
out
imulb
lret
cmp
int
out
rol
testl
lea
ljmp
lock
sar
sti
cmp
mov
fsub
mov
xchg
xor
cmp
in
or
cmp
cmp
in
test
rol
call
repnz
cmp
xlat
in
lock
lock
fsubp
jmp
enter
jmp
xchg
test
lock
cmp
out
cmp
cmc
mov
hlt
call
adcl
ljmp
stc
lock
rol
xchg
xchg
addb
icebp
fimuls
out
xor
out
out
cld
aas
ds
test
fdivp
fadds
xchg
out
shll
jmp
lret
in
int3
in
jmp
aad
stc
jmp
jecxz
mov
int
hlt
repnz
ss
jmp
loope
cmp
ret
cli
div
rolb
clc
adcb
into
lret
fmul
call
repz
out
aad
stc
stc
fcmove
loop
shl
out
stc
xlat
loop
xor
out
xlat
aas
lock
into
in
aam
test
out
cld
xlat
mov
fcoms
in
ljmp
repnz
flds
xchg
xlat
jmp
xchg
out
icebp
in
ljmp
cli
lret
cli
shr
int
not
test
jecxz
stc
in
sti
test
aam
xor
out
ss
cli
aad
sar
std
and
xlat
decl
test
in
xor
rcl
shr
jmp
sti
clc
repz
aam
std
addb
int
xlat
iret
into
int
fst
cmp
aas
aad
aam
test
cmp
enter
int3
repz
aas
in
repz
enter
dec
cmc
icebp
loop,pt
repnz
call
mov
xchg
shl
shl
sub
xor
shlb
fiaddl
cmp
enter
loop
out
int
out
loop
in
cmc
sti
call
lret
cld
in
in
loop
loope
xchg
orl
call
rcl
idiv
out
fcomi
clc
rol
cli
div
cld
lret
ficoms
jecxz
jecxz
call
adc
cmp
stc
test
xabort
in
int
orb
shl
aam
cmc
lock
std
fneni(8087
cmc
test
neg
rol
cmc
ret
out
fdivr
xchg
not
not
xor
xlat
imul
iret
adc
out
fidivrs
fucomp
jmp
hlt
lret
call
xor
aad
fcmovb
aaa
stc
fcmovnbe
iret
shl
leave
ret
xchg
enter
loope
xchg
xor
ret
ret
xor
enter
repnz
xlat
fsub
call
jmp
nop
adc
jecxz
int3
jecxz
ljmp
clc
clc
test
loope
stc
in
out
int3
in
loop
loop
repz
lock
idiv
std
fdivr
or
loope
leave
stc
mov
icebp
jmp
aad
hlt
fcmovu
cld
iret
aaa
rol
test
jmp
fldl
cmp
iret
repz
shr
jmp
cmp
clc
rorb
in
int
in
sti
in
lock
into
out
out
imul
loop
in
in
sub
jmp
mov
repz
clc
jmp
loope
mov
pushl
call
test
je
leave
ret
push
mov
sub
adcl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
aad
xlat
int3
ret
sahf
inc
fisubs
or
jl
loopne
rcl
jecxz
mov
stc
mov
loope
loope
and
icebp
xor
repz
icebp
cli
jmp
cmp
sbb
hlt
cld
lds
lock
neg
xor
shlb
sti
cmp
out
aas
sar
sar
idiv
ret
out
mov
fxam
and
shlb
fcmovbe
clc
out
lret
cmp
aad
addb
out
in
out
iret
xchg
xor
mov
fidivrs
fnstsw
cmp
addl
jecxz
test
xchg
rcll
into
stc
in
icebp
enter
int3
fadd
fcmovb
repnz
rcl
out
in
out
into
int3
int
int3
shl
int3
xor
enter
fcomip
in
fmulp
jecxz
hlt
and
les
xchg
int
xor
xlat
aad
in
ror
jmp
stc
stc
test
out
or
fadd
aad
test
stc
or
mov
jecxz
ss
sub
aas
xchg
ret
sar
stc
mov
jecxz
in
jmp
iret
lock
in
fprem
shr
rcl
cmp
iret
fndisi(8087
repz
in
out
out
cli
call
stc
shlb
repz
repnz
aam
fiaddl
xchg
xchg
aam
leave
int3
xor
lock
adc
out
in
rcr
out
jmp
out
hlt
out
int3
cmp
loop
cmp
ffreep
loopne
in
and
xchg
out
lock
fldcw
hlt
in
int3
lret
lret
testl
inc
out
fmull
faddp
aam
out
lock
sar
cmp
icebp
add
lock
fadds
fimuls
mov
mul
jmp
jmp
int
repnz
ds
std
mov
cli
std
mov
or
jecxz
xor
shrl
out
aam
sarl
cmp
repz
neg
in
sti
cmp
jecxz
cld
faddp
xchg
jecxz
loopne
jmp
xlat
loopne
repz
sti
lret
fcomi
ds
int
cmpb
stc
test
mov
repz
ret
xor
jmp
fld
in
xlat
cmc
enter
mov
repnz
mov
ret
rcl
idiv
hlt
loope
shl
loope
aas
lock
repz
ret
enter
adc
ror
sub
leave
fst
fldz
int3
or
loopne
movl
mov
call
jmp
cmc
in
ds
jecxz
out
std
ds
mov
clc
mov
lret
jmp
iret
leave
int
aad
ret
xor
loope
std
mov
test
out
loop
xor
shr
hlt
out
cld
std
aas
cld
ret
repnz
sti
shl
repnz
test
jmp
xlat
in
neg
aaa
std
stc
sti
imul
cmp
cmp
enter
rorb
iret
in
lock
cmp
aaa
shl
aaa
call
ffreep
repz
fmulp
cli
adcb
cmp
cmp
int
lock
ret
fxam
cld
repz
ret
fmulp
rol
test
mov
fdiv
xlat
repnz
cmp
cli
rcl
ret
filds
in
cld
fldlg2
nop
jmp
int3
out
rol
cs
leave
test
xlat
aad
incb
ret
fcmovnu
les
xchg
icebp
leave
call
xor
xor
lret
cli
test
cmp
sar
mov
mov
cmp
ljmp
xor
leave
int3
int
sarb
sar
filds
cld
fsubp
enter
shr
out
sarl
int3
cmp
cmp
xchg
out
in
fdivr
mov
mov
enter
into
icebp
idivb
test
xchg
idiv
mov
cli
rcr
shr
sub
ljmp
xlat
jmp
loopne
lock
aad
xlat
aam
in
nop
and
lret
int3
fcmovnb
ret
int3
out
iret
cmp
out
cld
test
fcmovu
cmp
enter
cmc
cmp
ljmp
adc
fcmovnu
sar
sti
test
call
xchg
ret
shl
iret
icebp
ret
int
ds
ljmp
fcomip
mov
xchg
sar
xor
xor
out
shl
xlat
repnz
cli
fdivr
loope
repnz
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
lea
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
jmp
ror
fcmovb
rcr
fs
lods
aaa
dec
push
mov
jg
cmpsb
add
stc
mov
in
mov
shl
lock
into
in
clc
aad
fiadds
in
and
mov
in
in
aaa
ret
in
out
in
xor
aad
aam
shr
xlat
loope,pt
test
leave
ljmp
rcr
xchg
xlat
in
hlt
ljmp
addl
filds
mov
std
int
in
jecxz
hlt
lret
ljmp
xchg
xchg
rcr
test
xlat
fsubr
jecxz
int3
out
call
sub
in
stc
cld
xor
in
int
in
jmp
cli
xchg
fimuls
int3
cli
filds
xlat
cmc
in
ss
rcr
aas
stc
cli
loope
rolb
in
call
out
fcom
sti
fucomp
fcomi
cmp
stc
frstpm(287
test
cmp
ret
jmp
call
into
loope
xor
ljmp
jecxz
roll
mov
iret
loope
hlt
ror
in
xlat
cmp
lret
out
int3
ret
rol
rcr
aas
out
fld
out
test
lock
in
ss
out
ror
cmp
clc
cmp
cli
test
mov
loopne
loopne
jmp
rcr
aad
repz
out
test
flds
in
shr
into
xor
in
shlb
cmc
cmp
xorl
fldl
testl
mov
out
sub
cmp
iret
clc
into
cmp
rcl
repnz
cmp
aas
repz
cmc
or
fyl2x
mov
jmp
clc
rcl
aad
ror
cmp
repnz
loopne
call
xchg
shl
iret
ror
rcl
cmp
rcl
f2xm1
in
out
incb
xchg
icebp
ret
rolb
out
xor
xor
cmp
rcl
std
cld
in
mov
ljmp
rol
cmp
cmc
aaa
int
shl
test
out
loopne
cld
enter
out
out
sti
xchg
repnz
xor
aaa
lret
iret
in
lret
aas
ret
cmp
roll
sti
ror
jmp
call
xlat
in
cmc
stc
iret
repnz
loopne
ret
lock
test
orl
enter
shl
sar
shl
loopne
loope
stc
loop
shl
into
icebp
mov
pop
iret
xor
call
div
test
icebp
mov
out
hlt
or
shl
ret
hlt
stc
lock
dec
xor
cld
cld
jecxz
stc
mov
rcr
in
shr
xlat
in
icebp
in
cmp
faddp
shl
cli
mov
fmul
xchg
iret
das
xlat
hlt
into
iret
ss
in
repnz
sti
aam
faddp
fsincos
clc
sbb
loopne
lret
in
mov
out
sub
aaa
out
cmc
call
out
out
div
repz
stc
mov
test
in
jecxz
loop
vpsubb
xor
cli
shr
cmc
lret
std
hlt
ret
jecxz
cmc
lret
imul
into
lret
test
lret
xlat
lock
shr
fistpll
imul
loop
xchg
loopne
call
mov
out
xlat
jmp
in
repz
adc
cld
rol
fneni(8087
loope
jmp
ljmp
jmp
jmp
cmp
jmp
ret
ss
xor
xchg
loope
sub
jmp
mov
std
cmp
aad
std
cli
ds
xchg
fneni(8087
clc
mov
sti
fdivrp
loopne
aaa
hlt
shlb
cld
ror
int3
in
ds
cmc
ds
lret
enter
cld
lock
xor
iret
repnz
clc
cmp
div
fsubr
jecxz
repnz
lock
stc
loop
addl
into
repz
lret
out
repz
call
cmp
rcr
orb
fucomip
aad
xor
jmp
rcr
imul
shr
sarl
out
addb
fcomi
loope
in
repz
in
das
in
aam
out
fsubr
cmp
out
ror
in
aad
ret
roll
jmp
jmp
mov
iret
rol
stc
repz
jmp
xor
cmp
lret
sarl
cmc
repz
mov
xchg
xor
into
out
ror
fidivrs
fiaddl
xchg
jecxz
cld
test
fstl
xchg
mov
mov
movzbl
xor
push
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
orl
jmp
rol
into
into
fnstcw
mov
jl
add
xor
xor
out
sbb
in
xor
cli
jmp
mov
in
fsincos
in
loope
fsubp
cs
xor
fstpt
enter
in
into
iret
cli
inc
cmp
call
in
mov
lret
cmc
shr
clc
out
into
loopne
ds
in
fadd
aam
stc
fsub
fadd
orb
in
repz
out
aam
fldl
rol
aad
in
out
call
icebp
xor
in
into
in
lock
cmp
loop
fcmovnu
loop
hlt
test
fimuls
iret
into
xor
ljmp
sarl
int3
fstpt
mov
into
xchg
and
fistpll
in
cs
int3
cmp
int3
xor
fidivrs
ffree
cli
xchg
leave
jmp
fdivrp
iret
lret
xchg
addl
loop
bnd
clc
lock
fcomp
lock
xlat
xchg
fsub
mov
xchg
mov
xor
rol
jecxz
cs
fldl2t
cld
aad
clc
in
fstp
fstp
fisttpl
faddl
lret
shlb
cli
fstp
repz
icebp
fstp
cli
lret
ljmp
or
cmc
in
enter
das
cmp
cmp
and
fcom
mov
jecxz
rcl
ficoms
in
jecxz
cmp
fxch
sar
int3
fstp
shl
repnz
fcmovnu
fsub
stc
out
sub
leave
shlb
ret
in
repz
fdivrl
ror
out
loop
out
bnd
cli
int
fsubp
out
xchg
hlt
clc
out
ss
cmc
in
aad
in
or
rorl
icebp
loop
enter
repz
out
into
lds
int3
fdiv
sarl
loope
rcr
sti
aad
fldpi
aad
fdivrp
idiv
std
test
xchg
aam
fprem1
aam
icebp
out
ror
flds
fdivr
ret
cmpb
mov
iret
xchg
xchg
fmul
into
rcl
int
sarl
aaa
lret
incb
test
mov
stc
xchg
enter
in
loope
xor
rol
fstp
fyl2xp1
int
test
idiv
lock
and
in
mov
cs
fsubr
int3
repz
rcl
xor
rcl
shl
repnz
in
xchg
out
xchg
xchg
in
ret
jecxz
sti
std
in
clc
ljmp
clc
ret
sar
fiaddl
leave
jmp
les
xor
stc
rcl
adc
into
xor
xor
cli
mov
call
repz
cmc
fnstcw
into
in
div
int3
cmp
fdivrl
out
mov
xchg
mov
out
enter
ret
repz
sub
mul
in
faddl
out
std
in
xchg
aas
in
out
cli
xor
cmp
loope
sti
sti
loopne
fdivrp
out
repnz
in
fisttps
ror
xor
sti
leave
stc
sarl
not
fsubr
loopne
cmp
sbb
repz
jmp
call
jmp
in
cs
xor
aam
fcmovbe
cld
in
ds
out
xchg
loope
out
mov
cld
into
repnz
ret
repz
out
icebp
out
jecxz
cmp
repz
fnsetpm(287
fsubr
rcl
repz
out
repnz
fyl2x
int
ret
into
aaa
sti
cmp
mov
in
call
cmp
hlt
out
aad
iret
sti
repz
std
cmc
std
sar
fninit
fucom
xchg
in
mov
mov
hlt
loop
enter
aam
neg
stc
cmp
ret
call
cld
in
rolb
into
hlt
lret
cmc
lret
fdivrl
sub
les
stc
cli
rcr
xchg
in
aam
hlt
in
call
clc
lret
int
idiv
and
fstp
addb
bnd
cmp
ljmp
rolb
sbb
lock
into
shl
aad
in
jmp
sbb
aad
repz
fisttps
int3
cld
mov
ljmp
fmul
int
repnz
std
int3
dec
sar
test
sub
int3
fucomi
in
xchg
lock
xor
fsubrp
cmc
int
out
and
div
stc
jmp
nop
mov
jmp
call
fadd
aaa
ss
xlat
lret
rol
cmp
shr
xchg
enter
cmp
jecxz
lret
xor
lea
mov
mov
xor
push
sbbl
push
mov
xorl
jmp
ror
rol
aad
ror
fstpt
jno
frstor
xchg
jg
cmpsb
add
push
fdivr
rol
fst
sti
repnz
mov
roll
stc
sti
out
lock
cld
cmpb
add
test
loopne
loope
fucomip
hlt
xchg
int
lock
rol
int
aas
leave
in
shr
lock
mov
clc
mov
std
test
jmp
xlat
enter
lret
out
rcl
and
fcmove
loop
mov
nop
out
xchg
ror
iret
cmc
aad
into
jmp
sar
out
cmc
fabs
cmp
loope
lea
repnz
int
rcr
clc
lock
fdivp
lock
cli
fcomp
inc
out
nop
lea
shr
call
hlt
xor
in
jecxz
stc
hlt
loopne
ret
fildl
hlt
cmpb
int
aam
repnz
clc
cmp
call
fcmovnu
xchg
idiv
call
mov
in
enter
icebp
xor
xor
cmp
aam
cmp
aam
clc
fchs
test
mov
out
in
cmp
fdivl
lret
icebp
add
in
cli
std
ret
lret
in
xchg
in
cli
out
loop
loopne
repz
lds
enter
not
adc
mov
mov
sti
mov
aam
xor
loop
hlt
sti
cmp
shl
rcl
faddl
out
fimull
lret
xchg
enter
in
cmp
hlt
fcomip
cli
fcmove
ror
cld
fabs
leave
std
ret
add
jmp
adc
mov
jmp
int
int
cmp
loopne
aad
fsubp
sti
rol
repnz
fcmovu
int
lret
mov
xchg
lret
lock
lret
xor
int
rcl
aas
jecxz
test
sar
ror
fmul
jecxz
mov
loopne
aad
ljmp
enter
cmp
ret
iret
sar
call
fsubrp
test
loopne
fdivl
ret
xlat
shrb
cmp
std
cmp
roll
fisttpll
das
repnz
xor
lock
repz
jmp
fucomp
xor
cld
les
iret
lock
out
cmp
lock
hlt
aas
sbb
sar
jecxz
mov
orb
lret
in
aam
xor
shl
fiadds
mov
jmp
mov
fstp
ljmp
lock
sarl
inc
test
shl
test
mov
repz
out
out
call
std
stc
rol
fcmovb
faddp
stc
adc
jmp
iret
loopne
in
lock
das
xor
imul
enter
xor
cmp
in
leave
rcl
test
jmp
int3
fmulp
ljmp
cmp
sar
fidivrl
jecxz
std
sti
lret
decl
std
iret
vpxor
divl
shl
cmp
loope
lock
test
test
aam
out
clc
dec
jmp
hlt
xorb
shll
aad
cmp
aaa
sbb
stc
fdivr
xchg
ret
ljmp
into
jmp
fcmovbe
fadd
clc
sar
fdiv
not
jmp
xchg
loope
out
in
roll
in
aam
int3
in
lret
cmp
sar
leave
mov
xlat
mov
int3
ljmp
sarl
jecxz
int
clc
aaa
in
xlat
stc
loope
test
out
addl
jmp
out
aad
jmp
aaa
dec
std
cmpb
test
decb
xlat
xor
aad
in
cmp
in
clc
ljmp
rcl
lea
mov
enter
sti
xlat
repz
int
aas
int3
addl
jmp
in
out
loope
cmc
test
cmc
std
aaa
out
loope
jecxz
cmp
test
fimull
repnz
cld
in
out
ret
ss
call
cmp
lock
ret
in
xlat
orl
into
cmc
cs
aaa
xor
hlt
repnz
cmc
jecxz
ror
rcr
fadds
sti
in
cli
lock
shl
cli
int
cmp
repnz
repnz
loopne
enter
enter
out
shlb
icebp
lds
aam
cmp
rol
ret
fdivr
aas
jmp
call
fdivl
les
leave
iret
iret
call
repz
int
testl
pop
clc
mov
xor
mov
jmp
leave
mov
lret
mov
add
mov
xchg
jg
cmpsb
add
rcr
mov
pop
adcb
enter
call
lock
out
lock
leave
fstp
in
fsubrp
filds
shlb
shrb
iret
sub
test
in
int3
fucom
out
jmp
xor
into
into
jmp
std
int3
jmp
fsubr
jecxz
test
int
jmp
loope
enter
loop
sti
out
fnstenv
ss
sbb
ljmp
popl
call
into
out
jmp
shr
stc
cmp
fimuls
out
repz
rcl
int3
ss
leave
loope
aad
loopne
repnz
in
aam
stc
lret
int
fucom
int3
xchg
rcl
in
ror
out
enter
into
test
out
loope
mov
xchg
les
sti
out
lret
loope
int3
fnstcw
icebp
idivb
cmp
shl
int3
xchg
sti
mov
loop
xlat
clc
xor
shl
in
aad
jmp
xlat
icebp
mov
xor
idivl
divb
fsubr
int3
xor
aam
rolb
faddp
in
rolb
int
sarl
jmp
test
in
lret
jmp
in
sti
in
jmp
repnz
icebp
lock
jmp
int
xlat
sbb
xchg
fstp
mov
leave
lret
out
ljmp
out
xor
out
xlat
jmp
iret
cmp
cld
in
aam
fld
lret
into
leave
fsub
xchg
xor
in
in
rcr
iret
ror
cmc
cld
out
or
sti
out
xchg
repnz
rcr
lret
cmp
ljmp
in
out
mov
call
fucom
call
out
loopne
ss
das
aad
fcmovnb
sbb
cli
xchg
out
xchg
out
jmp
iret
icebp
shl
ss
not
cmc
rcl
addl
mov
in
adcl
ss
shl
lret
faddp
shl
cld
int3
xlat
shl
fsubp
loop
fdivr
jecxz
jecxz
test
ss
int3
call
xlat
ror
icebp
fiaddl
jmp
fcomp
in
fstp
out
mov
adc
leave
out
cli
lret
sti
std
ds
aas
xlat
in
xlat
xchg
shr
in
adc
out
fst
jecxz
xlat
jmp
aaa
ss
rcr
cmp
f2xm1
xor
inc
out
sti
rolb
ror
cmc
idiv
cmc
repnz
repz
into
sti
repnz
out
rcl
rorb
in
idiv
int3
xlat
hlt
icebp
fnsave
sub
cmc
sti
repnz
cli
fdivrp
xchg
int
ret
out
fxch
das
rcr
cmp
aas
stc
movl
loope
test
shl
repnz
out
call
ret
cmp
rcr
cmp
in
stc
int3
lret
mov
xchg
not
repnz
cmc
ret
clc
fyl2xp1
sar
iret
sbb
mov
cmp
mov
sub
xlat
out
aaa
aaa
fcmove
cmc
fxtract
into
icebp
fld
sar
aam
les
roll
out
xor
rol
cld
repnz
cmp
ljmp
cmp
out
xchg
rclb
out
jmp
aaa
lret
enter
lds
into
fcmovb
loopne
in
loope
cld
fists
xor
in
shl
cmp
cmp
fstp
fldpi
xor
jecxz
mov
repnz
lds
cmp
out
iret
xlat
cli
cmp
aam
shl
out
out
repnz
ds
fmul
out
out
xor
shll
xor
sti
fst
rcr
xlat
adc
aam
hlt
stc
test
or
repz
std
hlt
int3
cmc
cmc
lret
shr
sarl
ret
sti
lret
sti
call
xchg
aam
stc
leave
xor
cli
iret
lret
ret
hlt
aam
xchg
fxtract
mov
mov
loop
repz
icebp
xlat
out
xlat
aam
cmp
test
fcmovu
lret
idiv
clc
fimuls
cld
enter
sti
int3
shll
clc
out
rcl
ret
ret
out
ret
jmp
in
fsub
std
int3
lret
lret
ror
sub
fst
jmp
ljmp
in
test
out
mov
int3
lret
xor
jmp
aad
rcl
fst
leave
pop
push
jg
ficompl
jl
test
fstpt
xor
icebp
lret
sar
shr
sar
repz
repnz
or
stc
fucomi
xchg
loope
out
xor
fmul
fmul
leave
xor
aaa
cmp
icebp
ffree
out
std
add
hlt
in
in
sub
mov
repnz
call
leave
fincstp
dec
ds
out
fsub
lock
sbb
mov
ljmp
iret
mul
xor
call
lock
out
fcmovnu
leave
out
out
mov
int3
sbb
repnz
int
ljmp
lock
ds
ds
test
fucomp
in
sti
ret
out
xchg
lock
loopne
out
cld
ss
int3
sti
loop
out
vpandn
lock
jecxz
enter
enter
in
in
leave
jecxz
call
aam
ljmp
mov
fildl
sub
lock
cmp
test
lock
cmp
out
ret
aad
xlat
test
loopne
int
xor
in
sarl
cmp
lret
call
push
out
aad
out
xchg
mov
int
iret
repz
out
ljmp
ret
fdivp
roll
sar
call
aam
rcl
into
fucomi
iret
jmp
rcl
loop
xchg
mov
hlt
test
rolb
shr
clc
out
fsubrp
jecxz
shl
aas
shl
aad
sti
ret
lret
sti
xchg
xchg
nop
fsubp
in
sub
in
out
lock
leave
loopne
flds
out
xchg
loop
out
loope
in
ficoms
hlt
lock
lret
xor
fcmovu
cmp
clc
testb
decb
shr
cmp
cmp
out
iret
cmp
ret
testl
int
cmc
hlt
iret
rol
aad
xlat
fucomp
cmp
out
clc
out
cmp
cmp
add
neg
out
iret
in
jecxz
shlb
fadd
fld
fnsave
rolb
and
jmp
fdivp
lret
loop
in
int3
call
xor
lret
sti
out
icebp
loope
cld
loopne
loop
fcmovu
call
out
xchg
fsubr
xchg
fpatan
fmul
cld
fst
clc
aam
out
sarl
rorb
enter
iret
call
das
repnz
mul
xor
int
cmc
shr
out
rcr
rorb
imul
icebp
int3
out
out
bnd
sar
in
std
dec
repz
fmul
cli
fmulp
fucomp
in
fcmovbe
out
mov
ds
xor
hlt
iret
lret
loopne
loope
shl
ret
out
repz
xchg
fdivp
ss
cmc
sti
fsubr
aam
cli
aas
cmp
repz
loop
cmc
in
sti
xchg
call
sar
lret
std
aam
xlat
aad
cli
lds
cmp
loopne
ret
fldl
hlt
shl
into
lret
stc
xor
int
rcr
in
shl
fstpt
and
mov
xchg
aad
ret
in
fcmovnu
in
in
fdivrl
fsub
testb
out
mov
xlat
jecxz
lock
enter
fcom
hlt
adc
sar
fcomp
out
sti
out
in
mov
jmp
aam
lret
jmp
cmp
aam
aad
out
jecxz
sti
enter
fildl
xor
icebp
divl
icebp
out
loope
cmpb
dec
jmp
in
fucom
out
xor
shl
std
sti
xlat
cmp
repnz
int3
cli
out
cli
jmp
jmp
repz
jecxz
hlt
xor
repz
in
call
int
out
rcr
test
ror
call
jmp
cld
call
cmp
fcos
fdiv
mov
into
loop
xchg
or
aam
ljmp
fincstp
fucomip
out
rcl
filds
leave
jmp
mov
out
not
ret
fld
cmp
fdivrp
neg
jecxz
cmc
shl
div
rol
xchg
xchg
jecxz
xchg
das
stc
loop
ljmp
loopne
div
ret
xor
lret
xabort
cmp
in
aad
xor
xor
in
in
jmp
dec
ljmp
lds
mov
lret
leave
orl
enter
iret
cmp
loopne
enter
out
loopne
loop
xchg
and
jmp
leave
xor
add
add
jmp
leave
sarl
rcl
int
mov
dec
lods
push
add
jg
cmpsb
add
call
inc
fadd
xor
ljmp
out
in
jmp
rcl
fstpt
loopne
rcr
test
decb
mov
int3
out
clc
out
aaa
cmc
cmp
out
test
test
fcmovb
sti
cld
cmp
jmp
xor
divb
fcmovbe
int
aas
into
fdecstp
int
cmp
in
cmp
clc
mov
lret
jmp
rcr
out
xor
loopne
lock
ds
stc
rcr
fadds
lret
mov
fmul
xchg
addl
cmp
aas
ds
in
loope
shr
test
dec
shl
xchg
cmp
int3
enter
lock
jmp
ret
icebp
in
loop
fst
aad
test
hlt
call
cmc
in
sub
iret
out
call
into
mul
cmp
fcmovbe
testb
lea
ss
imul
sar
icebp
imul
jecxz
out
shl
rcl
aam
sti
ret
in
leave
bnd
icebp
fxch
out
lock
in
iret
imul
loopne
cli
incl
fcmove
ret
lret
enter
lret
in
loope
xlat
int3
jmp
in
ljmp
fnsetpm(287
in
cmc
test
enter
int3
mov
lret
lock
iret
hlt
cs
into
enter
loope
std
sar
icebp
shl
int
mov
into
hlt
lret
iret
out
cld
fidivrl
fldl
cmp
xchg
leave
orb
call
cmp
jmp
into
stc
leave
cmp
jmp
shl
fptan
sti
ret
ror
in
out
lret
repz
shl
ret
in
jmp
xlat
and
ffreep
xchg
fsubrp
mov
int3
sti
in
xchg
jmp
jmp
aad
enter
xor
cli
cmp
or
jmp
ljmp
sub
hlt
ss
out
sti
ljmp
shr
sar
call
int3
int3
mov
loopne
sub
leave
in
in
cmp
hlt
aam
fistpll
idivb
cli
fcmovnb
ret
test
xchg
cs
xor
loop
cli
cmp
fucomip
not
rcr
hlt
idivb
jecxz
lret
int
lret
xchg
repz
in
ret
ss
sarb
aas
aas
sti
loopne
aas
in
ret
std
testl
int3
vshufps
ss
out
cmp
sbb
ret
rcl
enter
ljmp
aas
out
in
sar
cmc
cmp
aaa
cmp
ds
icebp
aam
faddl
int
enter
shl
call
in
sub
xlat
leave
std
aaa
rcl
xlat
cmc
xlat
jecxz
repz
in
jmp
in
fmuls
sar
jecxz
rol
out
int3
fyl2xp1
rcr
loope
aas
hlt
leave
fdivrp
hlt
loop
int
fldl2t
test
incl
loop
out
cmp
std
fst
loopne
in
fdiv
leave
test
fstp
loop
mov
out
out
out
sub
out
int3
in
icebp
in
sar
sar
lock
loope
fucom
jmp
test
call
jmp
shll
icebp
repnz
addb
stc
cld
not
loop
les
xchg
out
fxch
jmp
cmp
cli
int3
in
clc
clc
out
xchg
in
mov
fisttpl
out
les
hlt
jmp
cmp
in
fucom
cli
sar
aad
in
out
in
iret
repz
test
ljmp
rcl
ret
addl
std
call
fxch
xlat
sar
out
ds
loop
roll
mov
test
mov
in
cmc
out
fdivp
clc
rorl
leave
in
fsubr
shr
iret
xchg
int
lock
hlt
cmp
leave
out
jecxz
cmp
out
fmul
fimull
nop
lock
jmp
xor
cmpb
xlat
loop
aad
fmul
sbb
xchg
repnz
in
aam
shl
sti
ror
ds
mov
fldl
shl
das
sarb
repnz
lret
loope
cld
rol
ss
loope
incl
icebp
fcomp
call
ljmp
ljmp
out
sti
ret
enter
std
fcmovnu
xchg
rorl
sti
out
out
stc
faddl
aam
div
mov
movl
cmp
jmp
mov
leave
ret
int
leave
lret
and
scas
movsl
jg
cmpsb
add
in
std
fsubp
int3
jecxz
xchg
xor
in
into
out
cmp
loopne
cmp
fxch
test
out
cld
cmc
neg
mov
loopne
xor
xor
out
std
sar
test
ret
fadd
jmp
in
ror
mov
shlb
iret
xor
lret
cmp
out
ljmp
xlat
fucomip
fsubr
xchg
addb
clc
in
iret
aad
fxch
in
rcr
cmp
stc
fdiv
fucomi
cld
int
lret
lret
ljmp
cs
in
cld
cld
ljmp
icebp
mov
fucom
int
cli
lret
enter
stc
aam
clc
fucom
cld
int3
jmp
cmp
sar
clc
fimull
add
addb
ret
cmc
shr
xor
enter
cmp
ss
xchg
fcmove
fmul
cli
in
xchg
sub
jmp
xor
xlat
rcr
ret
loop
test
stc
lea
jmp
int3
loopne
shr
icebp
int
xor
xor
out
aas
cmp
repz
mov
mov
filds
sti
fdivr
ss
icebp
sarb
sarl
addb
jmp
ror
aam
ret
jmp
enter
aam
call
neg
ret
aad
loopne
fsubr
call
out
rcl
cmp
test
int
out
vpmullw
enter
faddp
fcomp
jmp
int3
loop
cmc
xor
cmp
sar
sbb
xchg
cmp
in
loope
out
nop
test
jecxz
cmp
ss
sti
fdivrl
in
and
loope
repz
stc
in
enter
mov
loopne
in
int
lret
xor
in
in
fcomi
xor
lret
test
lock
xor
out
icebp
xchg
ret
xor
loopne
icebp
shl
ljmp
out
aad
out
loopne
jecxz
fstl
loopne
rcl
fmul
ror
ss
hlt
aad
out
aad
faddl
and
int3
in
hlt
aaa
aam
in
aad
xor
fucomp
hlt
cmp
ret
fucomi
aad
loope
mov
fsubp
test
loope
lret
xor
bnd
xor
hlt
icebp
fst
ljmp
xchg
shl
cli
orl
ret
rol
fidivl
lret
sbb
not
fdiv
cmp
fucomi
leave
xchg
xchg
mov
loopne
in
lock
out
in
out
into
into
cmc
cli
in
neg
add
fprem1
ljmp
into
jmp
clc
cli
aam
aaa
sarb
repz
lret
ret
rol
ljmp
enter
jmp
jmp
aaa
aad
jmp
lret
cmp
fsub
call
nop
sar
fmulp
aaa
icebp
in
stc
in
hlt
cmp
call
int3
shl
fistpll
aam
mov
fdiv
clc
clc
or
cmc
mov
rcl
xlat
ror
leave
rcr
stc
sar
sti
fcom
loopne
out
out
cli
fucomp
loopne
nop
aad
into
jmp
fucomip
not
loopne
fdivp
clc
rcl
mul
in
jecxz
repz
ret
ljmp
fst
loop
fldl
mov
int
fld1
jmp
int
repnz
shr
in
aad
loope
cld
cmp
ds
xchg
loope
into
sub
ret
xor
hlt
jmp
lock
ret
sbb
xor
mov
orb
xlat
lret
fcom
hlt
cmp
in
fsubr
rcr
std
call
leave
orb
lock
xor
icebp
test
cmc
fstpt
loopne
fildl
fcomp
mov
ljmp
aam
sti
out
repz
leave
sar
cmp
aad
xlat
xor
in
mov
leave
lock
xlat
shl
shr
aaa
stc
sti
fdivr
xor
out
sbb
sti
xchg
xchg
xchg
mov
out
xor
rcr
lret
xlat
stc
int
out
xor
fadd
in
leave
jecxz
addl
shlb
aad
lock
or
cmpb
test
out
aam
in
in
lret
int
loop
shlb
lret
divl
iret
iret
loope
repz
in
and
nop
out
rcr
loope
idiv
leave
ss
push
icebp
xor
ffreep
test
aam
call
test
push
add
movl
jmp
sarl
rcl
rcl
rol
ret
bound
add
inc
fsubrs
jl
fucomip
mov
out
cli
int
rcl
fmul
cli
repz
cmc
shl
fiaddl
clc
mov
cmc
out
ljmp
and
cld
in
ds
xchg
rolb
in
cs
cmc
jmp
cmp
fmul
out
icebp
ds
enter
mov
fimuls
shl
shl
cmc
cmp
repnz
out
cli
xchg
in
sub
xlat
in
rcl
xor
sarb
cmc
fstpt
fcmovnu
idiv
xchg
int3
xchg
loope
repz
shl
xor
leave
fcmovu
cmp
cmp
icebp
ret
fmul
jmp
enter
mov
in
xor
xor
ror
xor
ret
sub
fdivr
out
cmc
decb
les
xor
xlat
sti
fsubr
fsub
neg
fstp
jmp
ljmp
xchg
lret
loop
xor
xor
lret
cmp
repnz
aad
aad
movb
loope
call
aad
cmp
enter
cli
out
roll
in
decb
sub
enter
cmp
inc
cmp
out
rcr
mov
into
jmp
int
xor
xor
iret
into
cli
ds
cli
iret
ret
cmp
int
decl
out
int
aam
aad
out
out
ljmp
cmp
aad
jmp
out
xchg
out
aad
aaa
loope
xor
cmc
stc
int3
loope
idivl
rorb
jmp
in
lock
repz
cli
iret
cmc
into
stc
out
cld
sar
fcmovb
testl
in
loop
idivb
iret
cmp
ffreep
lret
repz
ret
test
rol
cmp
out
and
jmp
ret
out
fsubr
idivb
rcl
aam
cmp
neg
test
in
sti
sub
stc
hlt
aad
repnz
cmp
iret
sub
cli
out
fcomp
enter
xchg
loope
into
in
xor
enter
call
in
ljmp
fmul
cld
loope
fimull
sbb
out
xor
cmp
jmp
cld
in
ret
test
orb
loope
iret
lret
sub
call
xor
xor
loop
rcl
ret
orb
loop
loopne
sub
sar
into
aad
rcr
iret
xlat
icebp
add
jmp
out
sti
dec
adc
mov
fnstenv
xor
shlb
rcr
in
addl
in
loopne
icebp
cs
aaa
in
leave
loope
loop
ret
ret
sar
cli
and
nop
mov
nop
addl
aaa
ss
sar
test
mov
in
in
lret
mov
xchg
ret
cmp
cmp
std
cmp
xlat
loopne
loop
aad
rcr
testl
in
lds
ljmp
or
sti
test
std
test
incb
nop
lret
xchg
std
jecxz
xor
lock
in
movb
fcmovbe
xlat
in
stc
in
xchg
fldl
xchg
leave
shl
xor
div
ljmp
jecxz
cmp
clc
in
cli
loop
loop
lret
loope
xchg
xlat
das
ret
repnz
sti
out
cmp
hlt
inc
fadd
flds
rolb
jmp
xor
aam
aad
loop
hlt
aam
call
call
shr
jecxz
lock
rcr
lret
stc
std
repz
test
xlat
jecxz
orb
addl
lock
jmp
out
loopne
fadd
fcmovnbe
lock
int
repz
cmc
icebp
xor
cmp
cli
aaa
cmp
hlt
cmp
sti
orb
fcmove
in
enter
fucomip
shll
xor
cld
int3
lock
xlat
call
aad
cli
test
cmc
int3
call
out
in
sub
loopne
xor
xlat
cmp
shl
ret
rorl
loop
cli
int
lock
leave
xor
xor
rcl
aas
in
in
std
cmc
not
lock
clc
lret
jmp
ror
hlt
clc
xor
lea
mov
mov
jmp
sarl
aad
aad
aad
sbb
or
jge
movsb
pop
add
jl
jmp
lret
leave
aas
sarb
ret
sub
not
dec
nop
jecxz
ljmp
xor
into
repnz
loopne
hlt
ffree
in
loope
in
in
sti
and
fists
xlat
sarl
aaa
test
call
and
cli
ror
fprem
leave
leave
out
lret
cs
divl
loop
sti
xor
cld
cmp
ret
icebp
hlt
into
and
hlt
sbb
into
clc
mov
out
lock
rol
aaa
sarb
xlat
cld
cmp
lock
out
test
loopne
mov
iret
cld
mov
xchg
in
ljmp
cli
fidivrs
shr
rol
cld
hlt
fcmove
fmulp
rcr
in
mov
in
out
out
std
out
out
cld
aas
cmc
cmp
jmp
ds
mov
mov
ljmp
hlt
out
fdivr
cmc
lock
shl
out
neg
cli
test
incb
loop
xor
out
out
cmp
lret
loop
cmc
and
mov
iret
xchg
shr
cs
shl
cmc
fidivs
ss
repnz
stc
fst
in
idiv
jecxz
int
or
ret
iret
leave
xlat
lret
aad
cmp
ret
ret
cld
lds
call
fld
cli
ror
idiv
int
xor
faddp
aad
orb
shr
jmp
mov
aaa
clc
xor
into
aad
cmp
aas
fcomip
jmp
fmuls
loopne
lea
out
xor
fdivrl
cli
fmul
fadd
std
or
in
fsubr
sti
loope
shr
xchg
iret
loope
in
iret
ss
cmp
fdivrs
into
in
loopne
cli
lret
addb
jecxz
stc
in
enter
fdiv
cmp
cld
out
xor
ret
cli
cld
test
filds
iret
cmc
leave
xor
jmp
in
lret
shl
lock
xlat
test
jecxz
cli
xchg
out
in
divl
jecxz
into
in
sti
xlat
in
cmp
loopne
shl
loopne
lock
test
jecxz
out
ljmp
ss
cmp
loope
hlt
in
std
jmp
mov
test
jmp
in
cmp
fcmovbe
clc
repnz
jmp
frndint
out
jmp
fcom
iret
shr
cmp
fdivr
cmc
lret
xlat
sarb
enter
lret
jmp
in
shl
cmp
cli
call
fdiv
imul
cmc
lock
cmp
out
nop
sub
out
ret
stc
clc
xor
lret
xor
cmp
leave
mov
ret
test
in
ret
jmp
loope
lret
cmp
lret
cmp
xlat
cmp
in
aam
mov
in
stc
lret
test
aas
in
ror
cmp
jmp
out
cmp
aaa
rcr
test
movl
fsub
shr
rcr
ret
lret
xlat
cmp
rcr
test
stc
clc
enter
mov
cli
test
repnz
in
in
int3
shlb
fcmovnu
aaa
lock
std
lock
call
xchg
fsubr
xor
rcl
fdivr
call
repz
rcr
aam
in
int
test
repz
test
out
in
shr
out
jmp
shl
add
out
hlt
shl
fcmovbe
fsub
jmp
nop
decl
in
leave
in
neg
cmc
cmp
rol
ret
fdivrl
ret
lret
sub
loop
repz
std
mov
fmulp
ret
xor
ljmp
cli
fadd
test
rorb
mov
lret
out
ss
sub
fstpt
filds
out
jmp
xchg
icebp
rol
loopne
sti
out
cmp
cmp
cmpl
aam
out
mov
out
xchg
test
call
out
out
shl
cmp
in
test
fadd
aas
ret
fisttpll
out
loopne
test
ffreep
int3
aam
aam
xlat
fadd
cli
sbb
cmpl
test
lock
xor
hlt
mov
cmp
fdivr
rolb
mov
xchg
loopne
int
out
shl
out
ror
sarb
iret
clc
fadd
rcr
out
out
in
jmp
in
fldl
in
loopne
cli
in
mul
lret
int3
loopne
mov
imul
jmp
ret
fcmovnu
aad
inc
pop
inc
pop
mov
jg
cmpsb
add
in
aad
testb
cld
int3
lret
loopne
enter
shl
cmc
sti
clc
loopne
stc
testl
fsubrp
in
loop
shr
aaa
cs
idivb
test
jecxz
fcmovnbe
aam
ret
fcmovb
out
lret
mov
call
stc
aaa
int
out
cli
aas
icebp
icebp
in
and
sar
idiv
sbb
in
mov
test
hlt
repz
out
xor
ljmp
sar
sar
out
mov
sar
jmp
xorb
fcmovnu
aaa
into
ss
loop
cld
rcr
rcr
jmp
jmp
xbegin
out
xor
aaa
icebp
ror
not
lock
lock
cmp
jmp
fsubp
in
std
cld
fiaddl
int3
out
in
into
rcr
cmp
test
std
ret
stc
jmp
lds
out
iret
cmc
in
ret
out
clc
jmp
stc
ss
shl
out
shl
shl
les
out
mov
mov
ret
sarb
lret
cld
in
cmp
test
aas
cli
int
in
icebp
nop
loope
jmp
out
xor
xor
enter
ret
stc
lock
dec
in
ljmp
fsubp
leave
lret
ss
loop,pt
out
std
mov
add
in
ljmp
xor
jmp
cli
ljmp
std
cld
mov
test
loop
repz
xor
fst
loope
aaa
int3
aad
call
mov
fcmovnu
out
jmp
loope
jecxz
int
cmp
rcr
hlt
imul
clc
hlt
into
cmp
clc
ret
loopne
ljmp
xchg
loope
xlat
sti
out
xor
cmp
cmp
iret
xlat
out
rolb
in
clc
mov
cld
shr
lock
into
lock
sar
test
xchg
mov
shl
nop
jmp
fcmove
int3
cmp
lret
cmp
cmp
repz
aam
decb
ror
iret
hlt
fprem
xor
aad
fdivs
hlt
stc
fsubr
in
aaa
sti
lock
ror
lret
cld
orl
in
ss
leave
xlat
into
ss
cmp
fsincos
test
shl
xlat
idiv
out
int
sti
fcmovnu
repz
out
sub
xor
cmp
out
cmp
rcl
jecxz
sar
in
aad
call
lea
mov
loop
cs
xor
ljmp
cmp
fdivrl
jmp
stc
cmp
enter
ror
hlt
loop
fdivrs
cmp
call
icebp
stc
repnz
hlt
xchg
jecxz
xchg
mov
int3
cli
aam
cmp
cmp
ret
std
hlt
mov
loop
iret
xchg
cld
in
fdivp
icebp
repz
fcmovnbe
cmc
in
cmp
cli
clc
std
sub
test
loopne
cli
mov
repz
xor
in
fidivrl
lock
loopne
sbb
ret
fmuls
shl
iret
jecxz
ss
xor
neg
call
clc
xchg
hlt
loope
fmul
test
in
out
out
lock
xor
xlat
fnstcw
sarl
cmp
cmp
testb
lret
in
or
in
aad
out
stc
ror
cmp
icebp
repz
rcll
out
mov
repnz
int
mul
test
ffree
fxch
jmp
in
mov
out
xor
out
out
cmp
cmp
xor
ds
aam
ret
pop
fimuls
mov
xor
cmp
cli
repz
lret
loope
aam
mov
cmc
aam
mov
out
out
out
lock
icebp
out
clc
fucomp
fdivrs
test
hlt
ret
imul
lds
mov
in
int
xchg
hlt
lret
lret
iret
into
jmp
not
xlat
cmp
fstp
mov
loopne
ret
cli
loop
orb
into
xor
aaa
ror
out
ror
stc
cmp
clc
jecxz
hlt
fsub
sti
cli
testl
in
xor
fcom
in
shr
sbb
fst
fmul
mov
testl
loopne
ror
cli
out
loope
ror
sarl
cmp
rorb
in
into
fdivr
lock
repz
stc
fsincos
call
incl
fcomp
clc
xlat
out
mov
mov
cmp
je
mov
orl
mov
xor
jmp
xlat
int
ret
ljmp
jg
cmpsb
add
repz
aad
aaa
ljmp
shl
rcl
loopne
add
neg
fiadds
in
lret
hlt
fmulp
aad
in
in
hlt
jmp
cmc
shl
fiadds
loope
cld
call
xor
repnz
aaa
enter
shr
cli
cld
repnz
add
mov
xchg
int3
mov
ror
sub
fdivp
into
cmp
sti
cmc
out
cmp
fsub
faddl
lock
xlat
cmp
repnz
out
cmp
in
fchs
in
out
fnstsw
cmp
loope
cld
repz
shlb
in
leave
cmp
out
cmp
vpsubsw
testb
sti
mov
mov
ror
in
loop
cmp
div
aam
in
stc
in
shl
xchg
mov
cld
out
cmp
fdivp
xchg
not
int3
fcmovu
ror
fcmovnu
fpatan
fcmovnb
rcr
out
orl
ror
lds
aaa
repz
roll
std
out
and
ljmp
cmp
idivl
shl
fdivp
aad
xlat
orl
hlt
hlt
int
xor
aam
jecxz
fld
ret
leave
and
ljmp
jecxz
in
jmp
push
std
aaa
aam
cmc
sarl
in
mov
int3
mov
call
jecxz
xlat
cmp
aad
cld
cld
cmp
clc
sub
in
mov
into
leave
icebp
ljmp
sti
out
idivl
clc
mov
fdiv
incb
mov
jmp
jecxz
xor
in
jmp
cmp
jmp
int3
out
rcl
out
loopne
jmp
lret
fsubrp
rcl
xor
sub
sub
into
cmc
cmp
cmp
stc
out
xchg
cli
loop
stc
fiadds
xor
in
into
repnz
hlt
in
call
test
clc
repnz
lret
fadd
cld
cli
rcr
out
rol
ljmp
aam
ljmp
xchg
repnz
xchg
ret
in
jmp
out
mul
stc
fcmovnu
leave
repz
rcl
repnz
rolb
test
shl
in
shl
sti
fcmovbe
cli
leave
in
fldl
stc
ret
rolb
incl
loopne
into
ljmp
in
filds
movl
call
sti
lret
xor
rcr
clc
int
fidivrs
mul
test
out
out
out
or
out
xor
leave
xor
sar
hlt
jmp
mov
fsubp
aaa
xor
clc
int
aad
xlat
icebp
dec
aas
jmp
call
int
xchg
jmp
enter
int
loopne
ljmp
jmp
fnclex
into
mov
clc
int3
iret
iret
in
repnz
ljmp
out
lret
out
mov
loop
out
fmull
sub
divb
out
idivl
cmp
repnz
loope
addl
addb
repnz
ror
cmp
stc
call
std
test
fsubr
lret
xor
in
call
cmp
in
neg
idiv
in
jecxz
fcmovu
enter
out
iret
cmc
call
sar
in
aas
loopne
not
test
loop
ljmp
mov
faddp
ss
repz
int
enter
xlat
rol
std
cmp
loop
inc
ljmp
rol
aaa
repnz
stc
cld
add
ds
sar
orb
push
xor
hlt
cs
int
shl
fdivrp
cmp
cli
adc
out
addl
xor
xlat
cs
rcl
fdivrl
fcmovu
fstpt
xlat
repnz
fdivr
xchg
test
in
cli
out
std
aad
xor
cmp
icebp
mul
idiv
aad
hlt
fsubp
hlt
in
mov
fiadds
out
lret
ret
iret
xor
cld
aad
shl
lock
loope
out
fcmovne
in
out
mov
in
lock
repz
in
jmp
fnstsw
test
cli
test
mov
fsubr
test
test
xchg
ret
jmp
rolb
jmp
rol
int
fst
fcmovne
xor
sub
mov
jl
repz
call
cmp
call
or
dec
jmp
xor
jmp
icebp
int3
aaa
enter
cmp
xor
fadd
std
sti
cli
out
int
cld
in
out
xchg
xor
ret
into
in
rcl
cli
call
shl
cmp
fldl
std
nop
lret
cli
xchg
mov
mul
in
cmp
stc
lret
out
sbb
icebp
test
sti
jecxz
sti
loopne
mov
out
in
rcl
aad
cmp
hlt
cli
stc
repnz
xlat
int
rol
out
rorb
aaa
iret
xor
lock
sarb
xor
repz
addl
call
xor
xlat
into
fnstcw
xlat
aam
loope
cld
hlt
ds
inc
frstpm(287
jmp
test
mov
lret
xor
aam
cmp
xlat
repz
aad
cmp
stc
in
pop
lret
icebp
lock
lock
out
adc
ret
cmp
xchg
loopne
addb
jmp
cmc
ror
jecxz
fdiv
not
repnz
loopne
icebp
movb
in
loopne
hlt
in
xor
clc
xor
jmp
xor
neg
call
and
in
stc
pop
test
out
xor
aaa
aam
aad
jmp
sar
fcomip
lds
in
xchg
repnz
nop
in
out
hlt
sti
fstpt
fcmovnbe
imul
repnz
fadd
fadd
loopne
clc
fucomi
in
fld
out
incl
lret
clc
cmp
repnz
in
roll
fdivp
inc
sub
addl
repnz
icebp
fst
in
in
repz
flds
fisttpl
cmc
shl
aad
into
shl
out
fdivr
jecxz
iret
out
xor
sti
out
jmp
out
fdivr
std
loopne
sarl
ss
out
shl
stc
xchg
and
xchg
mov
fcmovnu
std
or
leave
loop
lret
call
into
fcomi
jmp
loop
std
lea
cld
fbstp
shll
cli
repz
lret
xor
cmp
adc
std
repnz
aad
popl
ljmp
iret
xlat
jmp
sarb
sbb
test
in
cmp
aad
jmp
call
cmc
in
cmp
out
cmc
cld
call
rol
test
aad
aam
stc
jmp
call
hlt
xlat
fxch
aad
aam
loope
cmp
call
test
loop
leave
call
jmp
ljmp
fcomp
or
xlat
ret
inc
xor
mov
loop
loopne
test
jmp
clc
jmp
out
xor
call
cmp
test
clc
leave
mov
out
mul
das
aad
out
int3
stc
cmp
aam
shl
ret
loopne
loope
les
int
aas
call
jmp
clc
mul
cmp
in
testl
mov
shl
clc
xor
jmp
iret
rcl
out
ret
out
xchg
fnsetpm(287
clc
in
cld
call
icebp
out
cmp
in
ljmp
int3
cli
out
rorb
lret
fsubrp
call
xlat
out
in
loop
jmp
int3
clc
cmp
sbb
jecxz
enter
cld
jecxz
aas
leave
sub
ret
rcl
fidivs
out
icebp
lock
out
mov
mov
sub
loop
loope
shll
cmc
iret
hlt
ljmp
fiaddl
cli
enter
into
in
out
jmp
out
aam
icebp
cmp
fldl
aad
fsubp
jmp
nop
into
in
shlb
clc
vpminsw
jmp
iret
lret
lret
sti
out
std
ret
loope
cld
lea
clc
das
cmp
int3
repnz
fptan
cmp
test
in
enter
sar
mov
cs
iret
lret
ss
in
into
ljmp
sti
stc
lret
ljmp
std
loop
inc
int
repz
std
out
int3
adc
fpatan
rorb
lock
fsubr
xor
cmp
lock
xor
jmp
cmp
in
test
vpsubsw
fcmovu
repz
xchg
out
shr
loop
icebp
aaa
fstpt
shll
sti
pop
jmp
lret
ret
fstpl
fidivrl
in
jno
stos
inc
jg
cmpsb
add
test
ret
cmp
cli
std
jecxz
mov
ror
icebp
xlat
test
addb
mov
fimuls
loop
std
repz
sub
xor
lret
repz
sar
in
loope
call
fimull
aam
fcompp
xor
leave
xor
out
cli
icebp
sti
cmp
out
fcom
leave
cli
cld
mov
mov
orb
std
call
cmp
sti
aad
out
cli
jmp
lock
not
in
out
ror
repnz
jmp
std
in
mov
incl
in
mov
lret
repz
cmpl
rcr
testb
lret
jmp
jecxz
in
enter
lock
repnz
rcl
std
loop
in
fstp
pause
in
lret
sub
enter
int
aad
hlt
cmc
loop
hlt
out
leave
lret
loop
lea
aam
lock
enter
ljmp
xlat
sar
int
call
icebp
lret
out
repnz
aad
rcl
iret
loopne
into
out
cmp
cmp
ffreep
std
loop
mov
loop
out
rcl
cmp
lock
xlat
stc
cmp
lret
into
fistl
rcr
imulb
cmp
jmp
in
loop
test
enter
test
mov
iret
shl
sub
sar
in
stc
call
add
aam
aad
repz
testl
xor
das
sti
xor
cmp
out
stc
sti
in
lea
out
cmc
lea
divb
fdiv
cmc
out
xlat
fcmovnu
div
repnz
xchg
mov
call
aam
jmp
repz
int
ror
fsubr
addb
out
xchg
std
jmp
add
ss
xlat
stc
out
int3
xlat
in
std
cmp
ret
in
loope
loope
mov
dec
sub
mov
icebp
std
aaa
sti
out
cmc
shl
xlat
hlt
sti
shl
cmp
int3
shr
in
jecxz
push
ss
cmp
fsqrt
cmp
ret
shr
lret
decl
adc
repnz
repz
iret
push
int
icebp
ret
out
jmp
fxch
in
out
jecxz
lret
xor
enter
cmp
sar
ds
clc
cmc
out
ret
mov
clc
mov
test
shl
lret
cli
ds
sar
repz
in
test
hlt
int3
in
mov
in
mov
jecxz
stc
leave
jecxz
xor
out
lret
std
icebp
aad
cmp
cmc
aam
mov
into
sti
fmuls
jmp
cmp
ss
mul
out
loope
dec
enter
xchg
rol
int
hlt
ljmp
out
cli
fcmovne
iret
hlt
sarl
mov
test
enter
mov
loope
in
ret
sub
repnz
mov
cmp
xchg
in
iret
in
in
rcl
fmul
sarl
icebp
xor
cld
xchg
in
xchg
ret
aad
in
repnz
aad
les
ljmp
loopne
ret
cli
lock
ror
into
icebp
aaa
cld
test
loop
fucomp
fisttps
xchg
xchg
iret
out
ret
cmp
out
call
ds
cld
shr
cld
cld
xchg
jmp
xchg
cmc
lret
ror
hlt
leave
in
jmp
shl
fdiv
cmc
fsub
std
in
ljmp
mul
out
aad
int3
shl
cmp
out
ss
loop
jmp
mov
mov
xor
aaa
fucomp
int3
out
in
hlt
not
cmp
cmp
repnz
orl
xorb
rcr
clc
cmp
cmp
hlt
adc
cmc
cli
mov
leave
loop
hlt
call
repnz
int
out
aaa
cmp
shl
hlt
fnstcw
jmp
xor
int3
sti
fidivrl
loope
repnz
loopne
std
sub
in
call
xor
out
rcl
fcmovnu
out
fucom
test
in
loope
cld
in
repnz
icebp
mov
hlt
xlat
aaa
xor
stc
out
out
call
inc
ret
sbb
ljmp
mov
jmp
aam
fcmovnu
mulb
mov
jl
add
out
lds
idiv
sub
ss
sti
fadds
mov
ljmp
xor
xor
fxam
fcomi
ljmp
out
xchg
ret
test
xchg
les
cmp
out
repz
aam
lock
cmp
cld
ftst
fdivrp
int
clc
ljmp
ljmp
icebp
loopne
into
int
cmp
mov
fadds
out
les
aam
out
in
leave
jmp
in
out
cmp
mov
enter
icebp
fsub
mov
rcl
out
cmp
idiv
stc
aad
stc
mov
aad
int
jmp
in
out
xchg
xchg
in
out
sbb
ds
test
in
mov
xlat
sub
jmp
fidivrs
cli
testl
out
aam
lret
lea
cs
fmul
in
fmul
hlt
cmp
repnz
fincstp
lds
fdivp
das
iret
rcr
leave
sti
out
cmp
out
ror
aam
clc
ret
neg
hlt
leave
jmp
cmp
out
out
sub
jmp
fxch
loopne
cmp
cmc
into
jecxz
loope
in
mov
xchg
fmul
out
test
loope
ljmp
into
cli
int
repnz
repnz
fdivr
in
out
rcr
addb
jmp
cmp
int3
fdivr
sarl
in
out
cld
loope
in
stc
int
or
cmp
xbegin
cmp
xchg
xchg
stc
xchg
xchg
cld
xchg
sti
aam
fcomi
xor
aam
ljmp
ljmp
xchg
xor
lret
aaa
repnz
add
jmp
loopne
incb
loopne
idivb
cmp
int
fld
rol
xchg
clc
mov
rcr
xor
icebp
jmp
aam
sti
std
ss
in
cmpl
ret
int
mov
jecxz
mov
rcr
shl
hlt
fnstsw
loopne
cli
xlat
cld
in
out
addl
lret
jmp
std
xor
jmp
ss
testl
loope
in
das
xor
repnz
aad
call
jmp
xchg
jmp
out
lock
xor
fcom
cld
cld
cli
lret
cmp
repz
fcmovu
in
idiv
fiadds
test
lock
into
sub
cmp
call
cmp
lock
cld
lret
fildl
clc
int3
mov
bnd
aaa
cmc
fucomi
jmp
fstpt
rcr
sub
xchg
loop,pn
xor
out
test
sti
ret
aas
out
les
xchg
int3
loopne
out
xor
xor
hlt
into
cmp
shl
cmp
imul
lret
decl
rcl
xor
cli
out
stc
jecxz
aam
cli
leave
test
mul
out
out
lret
xchg
mov
xor
jmp
clc
loope
ds
xlat
xchg
jecxz
ljmp
jmp
in
repz
jmp
ljmp
add
sbb
cli
xchg
std
ficoms
jmp
cmp
in
ret
rolb
mov
ret
in
popl
xor
xor
lock
sar
aam
testb
std
mov
loope
aaa
cmp
iret
out
fprem
cmp
fucom
xchg
mov
out
xchg
out
test
les
lock
out
aad
icebp
aad
xlat
les
fcos
mov
jmp
loope
icebp
shl
cmc
cmp
lret
rcl
out
repz
clc
test
ror
hlt
repz
ret
stc
cmp
int3
aas
repz
lock
rcr
std
out
cli
cmp
fmulp
xchg
cli
hlt
in
rcl
ss
out
in
fxch
enter
jmp
std
and
ret
ret
incl
in
shl
aaa
fldcw
cmp
call
testb
lret
jmp
enter
xchg
roll
call
mov
add
mov
jmp
int
aas
ror
rcr
fcmove
mov
js
xchg
pop
xchg
jg
cmpsb
add
xor
cmp
ds
fimull
int3
mov
jecxz
test
lock
out
jmp
cs
ffreep
ds
repz
cld
fstp
mov
fcmovb
ret
jecxz
jmp
shr
enter
ljmp
cmpb
jmp
hlt
lret
lret
iret
mov
stc
aad
shl
jmp
repz
shl
and
in
testl
xor
repnz
out
out
jmp
shl
loop
loope
repnz
repz
fsqrt
leave
addl
xor
sarb
dec
cmp
neg
cmp
mov
jmp
out
fmulp
int
lea
lock
aaa
shl
cld
std
in
imul
repz
xlat
hlt
shl
std
xchg
loope
lock
iret
div
icebp
fsubp
std
jecxz
cmpl
xchg
loopne
fldl
out
ljmp
in
jmp
jmp
lock
clc
test
fsub
fldl
in
lock
out
xor
lret
fmul
icebp
or
cmp
fmul
std
leave
xlat
fmuls
nop
lock
into
clc
xlat
out
xor
cmp
cmp
call
out
fmulp
loop
xor
xor
cli
ret
shlb
cmp
cmc
into
cmp
out
ffree
hlt
fucomp
nop
lret
call
das
xor
cmp
repz
cmp
addb
sarb
xchg
icebp
mov
ljmp
aad
in
iret
rcr
fdivrl
xlat
cli
xor
jmp
cli
enter
loopne
divb
into
repnz
fstp
in
fnsave
clc
clc
test
mov
fsub
mov
test
lock
out
fcom
fnstenv
lret
sti
cmpb
mov
jmp
out
in
jmp
out
enter
aam
cmp
fcomi
lock
out
cld
stc
in
ret
call
iret
aam
das
repz
ss
cmp
imul
cmp
aad
std
in
xchg
sub
lret
nop
int
mul
repz
imul
shr
cmp
into
jecxz
xor
loope
add
std
loope
in
sub
out
sar
in
sar
cmp
cli
hlt
aas
shl
cld
enter
sbb
xchg
lret
ss
fdivs
lret
xor
icebp
idivb
loop
ret
xlat
orl
out
cmp
jmp
not
test
loopne
div
cld
fidivrs
addl
iret
out
shr
cld
rcl
fcmovu
stc
hlt
repz
sti
in
jecxz
aam
fdivr
mov
out
loopne
repz
xlat
xor
xor
in
lock
sbb
lds
stc
icebp
loopne
mov
mov
fcom
cmp
fdivp
fdivrp
repnz
addb
leave
clc
mov
fcoml
divb
divb
sti
clc
hlt
cmp
xor
sti
ds
in
int
out
int
xchg
sub
out
call
ljmp
leave
cmp
ljmp
sub
out
xor
fdivr
stc
out
cmc
adc
stc
in
loop
out
incb
jecxz
repnz
aam
enter
icebp
aad
clc
sarl
ds
loope
mov
xor
xor
jmp
ljmp
rcr
clc
sti
fdiv
shl
loopne
out
jmp
xchg
ror
mov
out
fnstenv
cmc
aaa
cmp
cli
aad
call
aam
mov
loope
xchg
call
xchg
cmc
test
out
loopne
in
jmp
rcr
xlat
out
cmp
roll
repnz
enter
call
enter
ss
int3
stc
cmp
div
movl
xchg
in
mov
stc
stc
shl
enter
cmc
icebp
jecxz
mov
ror
loope
flds
mov
lret
cmp
into
cmp
sar
fst
add
test
lret
mov
out
ss
lret
xor
out
cmp
xor
rol
test
ret
loopne
loopne
and
cli
out
enter
xor
out
iret
std
mul
sar
adc
xlat
add
cli
out
lea
sarl
cmp
in
andl
jmp
mov
jmp
iret
aad
aad
adc
lea
push
mov
jg
cmpsb
add
xor
shl
sar
jmp
frndint
mov
leave
int
in
loopne
repz
out
xor
repz
jmp
ret
fiaddl
stc
hlt
in
movb
repz
into
out
int3
shl
into
hlt
iret
icebp
fsubp
shl
fsubr
rcr
cmc
xchg
aad
les
enter
fsub
jmp
xlat
fdiv
fsubp
ret
fucom
test
xchg
aam
lea
rol
cs
shll
lock
jecxz
test
iret
xor
aam
xlat
jmp
in
ficoms
cli
das
cld
xor
flds
out
loopne
rcr
ret
cli
nop
xchg
in
in
ss
cmp
jmp
xlat
jecxz
hlt
rcr
fucomp
loope
idiv
fsubr
xchg
mov
loopne
repnz
into
lock
fcos
out
int3
icebp
add
repz
fdivrp
mov
mov
call
xor
xor
cmp
xor
ds
not
test
fiaddl
mov
test
xor
test
into
ljmp
incl
in
mov
fsub
out
enter
xor
xor
fdivr
test
fcmovne
bnd
idiv
out
test
cmc
into
das
aam
out
ss
sti
lret
shr
cli
enter
mov
in
out
repnz
rcl
xor
ljmp
loope
fdivp
std
addl
mov
xchg
jmp
jmp
into
int3
sar
call
in
ljmp
jmp
mov
cmc
aad
loope
out
test
in
out
cmc
cmp
iret
clc
out
cmc
adc
in
ljmp
jmp
ror
xor
aaa
cmp
out
hlt
ds
fisttpl
in
fmulp
roll
out
leave
repnz
clc
iret
in
cmp
rol
in
call
fsub
mov
jmp
in
lock
into
aad
dec
sub
sti
shr
rcr
repnz
aas
stc
fcomp
or
mov
add
cs
repz
cld
out
std
aas
loope
std
stc
into
aam
fildl
sub
mov
xchg
nop
loop
fsubr
lds
xor
test
rol
lock
cld
in
int
leave
ljmp
jmp
in
out
hlt
fsub
repnz
repnz
loop
fisttpll
mov
in
leave
out
repz
enter
cmp
lock
repz
rcl
jecxz
f2xm1
les
jmp
out
int3
cli
ljmp
aaa
fnstenv
rcr
cmc
lret
out
shl
xlat
aad
mov
fsub
std
xchg
lret
xchg
xor
xor
xor
fdiv
cmp
ret
sarb
test
jmp
out
xchg
test
jecxz
icebp
xor
loope
neg
stc
test
sar
loop
mov
enter
mov
ftst
orb
out
sti
rcr
lret
sar
xlat
clc
aam
repnz
call
shrl
jecxz
cmc
ss
cmp
lock
ds
cli
loope
out
in
xchg
in
xchg
jmp
fnstenv
aad
idivb
in
in
mov
mov
int3
rcll
aam
jmp
aaa
iret
repnz
shl
mul
loope
out
lret
fdivr
sti
enter
cld
shr
not
aam
cld
out
lret
ret
rcr
loopne
dec
mov
addl
std
iret
sub
xor
jmp
shll
sarl
repz
int
ffreep
sti
sbb
cli
jmp
mov
test
sarl
ror
fcomip
aam
flds
loop
lds
loop
lock
int3
ret
call
iret
rcr
int
cmp
rcl
std
leave
cmp
fcomp
loopne
cld
hlt
and
xor
shlb
fstp
fnstcw
rcl
sti
leave
mov
lea
cmp
lock
into
lock
cmp
fucomi
lret
cli
jecxz
leave
ljmp
out
out
int3
cmc
rcl
cmp
out
cli
repnz
cld
hlt
cmc
test
clc
cli
sbb
call
sub
cld
xor
into
repnz
ss
loope
div
incb
orl
in
xor
xor
xor
xor
aas
loopne
xor
lock
add
add
int
int
mov
adc
cmpsb
add
incb
cmc
sub
lret
xor
fsubr
sti
rcl
out
not
aas
repz
cmc
ret
fsub
mov
xor
in
out
cmc
aaa
leave
xor
in
cmp
ljmp
out
enter
xor
xor
enter
xlat
lock
ret
ljmp
fiadds
shl
xlat
cmp
cmp
call
sbb
into
enter
aaa
out
fnstenv
repnz
cmp
fcomi
out
repnz
fists
lret
aad
rcl
ljmp
xor
idiv
xchg
aad
in
mov
das
in
sub
in
fcmovb
into
out
fxch
into
loop
mov
sarb
int3
loopne
cmp
mov
aad
icebp
fadd
cli
fdivs
fcomi
repz
test
xchg
cli
rcr
test
ljmp
int3
sub
leave
aaa
xor
aad
in
filds
rcl
cmp
lret
into
jecxz
lret
ds
in
ljmp
std
aas
int3
idivb
testl
out
out
jmp
call
lock
div
cmp
lret
stc
stc
repz
shl
orb
mov
hlt
cli
loop
cmp
cmpl
cmp
sti
xchg
xabort
loope
icebp
xchg
jecxz
shll
xor
std
sbb
cli
ret
xchg
fildl
xlat
cmc
sarb
in
fcom
fidivrs
vpsubw
xchg
loope
xchg
rclb
repz
stc
aam
fstp
cmc
fincstp
loope
xlat
loope
mov
div
jmp
lret
ret
lret
sti
ljmp
stc
repnz
aas
fcomip
ffree
in
mov
decl
in
out
sub
into
shl
enter
aas
fstp
shl
fcmovnu
out
mov
repnz
lea
xchg
xchg
out
xor
loop
int3
stc
stc
clc
fdivrp
int3
cli
movl
jecxz
cli
in
mov
leave
fcom
repz
clc
cmp
aaa
lock
test
addb
out
lock
iret
mul
shl
aam
into
cmp
sbb
aam
xchg
rolb
iret
lock
mov
xor
ss
in
call
fnstcw
mov
int
in
xchg
cmp
std
cmp
sar
xlat
fcmove
hlt
cmp
cld
loop
in
iret
fcmove
in
and
ret
int3
call
cmc
ds
filds
out
test
addl
ljmp
icebp
fldln2
out
xlat
leave
test
fisttpl
rcl
xor
rcl
rol
std
fsubr
rcl
stc
cmp
shr
decl
rcll
out
in
in
into
jecxz
ds
iret
in
loop
movl
xchg
loopne
call
repnz
cli
sarb
roll
in
in
in
std
sub
loopne
shr
out
leave
shll
shr
leave
out
cmp
loopne
cmp
xchg
sti
leave
in
sbb
xchg
out
loopne
cmp
enter
cmp
shl
loopne
mov
enter
fiadds
adc
leave
out
aad
jmp
ds
aas
fcomip
cmc
sbb
out
nop
xchg
loope
jmp
sti
jmp
loopne
aas
ds
inc
out
sbb
repz
nop
int3
ret
sub
xlat
and
cmc
cld
lock
loopne
leave
jmp
out
jmp
repnz
cld
cld
xor
xor
out
loop
ret
stc
loop
repz
out
into
enter
ljmp
cmp
call
flds
xchg
loop
sub
xlat
ljmp
icebp
hlt
repz
ds
into
aas
ret
stc
leave
clc
sti
jmp
xor
rcl
jmp
ljmp
fcmovbe
shl
jmp
loopne
xchg
repnz
rorl
out
clc
jmp
cli
int3
fucom
test
ret
out
std
enter
loop
int3
cmc
xor
ret
cs
clc
je
mov
jmp
int
aad
fstp
ffree
push
jl
push
jl
jg
cmpsb
add
xlat
ret
icebp
into
clc
leave
stc
fcmovne
sti
test
sti
xlat
test
mov
fucomi
xchg
fucomip
stc
in
out
leave
cmp
cmp
fcomi
neg
repz
cli
test
mov
fistl
faddp
in
aad
lret
out
cmp
xor
cmp
cmp
ret
loopne
mov
loopne
ljmp
ds
cmp
fnstcw
std
rcl
jecxz
rol
xlat
xlat
out
into
xchg
cmc
loopne
ror
aaa
lret
shr
out
testl
in
xchg
std
loop
rolb
fdiv
out
fcmove
xlat
std
cmc
loopne
or
rcl
hlt
sti
in
test
out
xchg
or
out
das
aad
loope
and
aad
sti
ds
cmc
aas
int
loopne
cld
in
xchg
int
jecxz
in
icebp
fnsave
xor
into
hlt
not
xchg
ret
fiaddl
mov
xchg
rcl
out
jmp
fcmovb
cmp
adc
cmc
out
mov
into
iret
jmp
shr
icebp
in
cld
xor
lret
cmc
sarb
out
cmc
out
in
mov
incl
xor
call
cmp
mul
cmp
enter
int3
in
mov
loop
lock
xor
fadd
hlt
xchg
testl
sub
shr
sarl
clc
ror
test
repnz
fcmovnu
cld
xchg
call
shl
aam
shr
rcr
fadds
adc
shl
fildl
xor
out
in
fnop
into
cli
ror
cli
cmc
out
in
in
shl
fisttps
nop
jmp
test
ljmp
lock
mov
fisttpl
lret
out
ss
rcr
rcl
ret
hlt
leave
jecxz
or
mov
mov
test
out
fcomp
addl
mov
sub
sti
test
jmp
add
hlt
shl
cmp
fsubr
cld
cmp
ds
leave
mov
mov
in
enter
loopne
mov
aad
iret
in
out
cmp
loop
cmp
loope
call
jecxz
jecxz
rcl
icebp
ret
lock
icebp
aam
out
out
stc
clc
mov
ljmp
enter
repz
aaa
xor
stc
test
sti
out
mov
mov
ljmp
rcl
aam
fcmovbe
cli
out
jecxz
sub
cmp
clc
aaa
fnstcw
dec
or
aam
cld
rcl
loopne
loop
in
out
sub
ljmp
xor
std
stc
movl
jmp
in
leave
jmp
inc
ror
iret
repnz
into
loopne
cmp
in
sti
stc
sbb
les
fadd
out
aam
xor
cmp
fldl
addl
loope
jmp
shll
cmp
clc
lock
lret
std
ror
cmp
lret
hlt
addb
enter
jmp
jmp
fstp
stc
ror
neg
loopne
out
dec
call
loope
in
fsub
fdiv
fdivrl
cmc
xor
shl
rcl
aam
sbb
xlat
leave
int3
jmp
shl
xchg
hlt
iret
cli
iret
aad
fucomi
sar
xor
loopne
jecxz
enter
and
lret
icebp
repnz
ffree
shl
cmc
loopne
ljmp
out
jmp
mov
mul
xchg
repz
aaa
cmp
xor
rol
mul
les
mov
fmul
int3
lret
lret
lret
int3
vpsubusw
aaa
jmp
shr
loope
shl
lock
in
in
mov
lock
clc
cmp
jecxz
idiv
aam
mov
ljmp
sub
lret
out
fbstp
cmp
xorl
mov
fiaddl
fmulp
in
fdiv
aad
into
cmc
icebp
call
out
adc
jmp
enter
subl
cmp
es
mov
mov
mov
mov
xor
jmp
aam
ror
rcl
fld
sub
je
cmpsb
pop
jg
cmpsb
add
fstp
ret
fidivrl
in
lds
mov
into
inc
cld
int
loopne
cmc
iret
shr
fdivrp
stc
aam
aaa
test
roll
fdivr
cli
enter
in
ss
cmp
jmp
clc
jecxz
ret
faddp
fadd
xchg
cld
iret
lock
xchg
in
fcomip
aaa
out
fldl2e
cld
leave
fidivrl
cmp
sub
clc
cli
repnz
cmc
rol
in
xlat
fldl
xor
cmp
out
ffree
xor
jmp
and
xor
jecxz
mov
lret
repz
in
cmp
into
iret
imul
ds
cmp
cmp
sti
jmp
call
dec
repz
ror
cmp
ss
out
div
lret
cld
jmp
ljmp
jmp
or
ror
ret
aam
cld
mul
std
iret
fcomip
cmc
clc
xlat
loope
clc
out
lret
out
int3
lret
in
shr
cmp
aad
cmp
out
ret
clc
mov
out
loop
out
sub
out
test
addb
mov
cmp
sti
iret
loope
enter
sub
call
lret
clc
aad
rcl
mov
out
call
int
in
xchg
hlt
xor
rcl
hlt
sti
ss
cmp
in
cld
shl
enter
lret
roll
ret
out
fsqrt
aam
cmp
loope
cmp
stc
shl
test
imul
sbb
sti
xchg
hlt
loop
clc
shl
jmp
out
cmp
jecxz
aad
cmc
jecxz
mov
out
jmp
sub
not
clc
fsub
xor
in
ss
cld
in
xlat
cmp
out
vshufps
loope
xor
sti
push
lock
roll
aad
std
cld
ljmp
int3
xor
sarl
in
cld
std
hlt
adc
loopne
fdecstp
in
jmp
shl
fucomip
sub
cmc
leave
ljmp
sar
shl
xchg
and
cld
sub
out
out
in
aad
iret
ror
aaa
icebp
xor
stc
int3
loopne
jecxz
adc
ret
fucomip
mov
out
in
jecxz
xchg
mov
iret
shl
in
aaa
cld
int
jecxz
into
in
cli
loopne
neg
enter
int3
test
jmp
aaa
jecxz
out
icebp
lret
loopne
inc
jecxz
fstp
test
out
lret
movl
shr
in
sar
fdivrp
sti
lock
lock
lock
in
cld
lret
mov
xchg
call
aad
loop
stc
fucomi
stc
iret
fadd
filds
out
imul
xchg
into
cld
iret
repz
in
iret
shll
cmp
cli
sti
cmp
iret
rcr
sub
jmp
test
out
xor
ret
sarl
cmp
fst
out
aam
repz
in
clc
mov
loopne
loope
in
ret
xor
ss
stc
clc
in
xlat
stc
out
sar
testb
mov
mov
jmp
or
ret
ret
jmp
jmp
mov
out
xlat
sub
cmp
out
sti
ds
fdivr
fnstsw
mov
loopne
jecxz
out
aaa
aad
aaa
int
cmp
cmp
or
loope
cld
loop
lock
mov
xchg
aad
ljmp
fidivrl
xor
faddl
test
cli
dec
decb
div
enter
int3
fadd
sarl
into
fiadds
orl
loopne
ss
xor
in
int3
stc
cli
fdivrp
ds
std
and
out
int3
ljmp
clc
out
imul
cmp
xor
fcmovnbe
rcr
cli
fcmovb
sbb
repz
rcr
stc
cmp
sarl
cmc
xlat
in
hlt
in
xchg
out
rorb
div
shl
out
int
cmp
cmp
ljmp
in
leave
in
xor
jmp
aaa
xlat
shr
fcmove
in
rolb
out
stc
std
clc
int3
fdivr
out
loope
leave
cmc
lock
iret
rcr
hlt
repnz
repz
jecxz
cmp
in
ret
incb
out
cld
jmp
out
rol
repz
iret
rol
ret
sub
sti
xlat
mov
add
cmp
je
mov
xor
add
mov
mov
jmp
enter
int
insb
push
push
mov
jg
cmpsb
add
fdivr
mov
or
enter
in
xlat
lock
jmp
lock
div
and
fstpt
enter
jmp
int
xchg
test
jmp
shl
clc
fsubrp
shr
ror
neg
in
aad
filds
std
mov
in
cmp
ss
leave
in
std
cmp
fucom
test
in
sar
mov
repnz
imull
shlb
iret
shl
rcr
fsubp
jmp
clc
jmp
ret
jmp
xor
in
lret
ror
lret
push
test
fmulp
icebp
in
fdivrp
neg
fsincos
loopne
mov
idiv
lds
cmp
aas
aas
fnstsw
in
in
roll
aas
xlat
mov
sti
in
test
int
rcl
ss
cmp
cld
xor
loope
lret
repnz
fisttpl
mov
ror
int
out
lret
call
imul
filds
fcmovnb
fcom
lret
in
lea
call
cmp
jmp
cmp
out
fsub
rol
mov
test
stc
std
xchg
fdivp
test
in
fadd
in
repz
icebp
loop
aad
std
clc
loop
ror
xchg
out
xchg
sub
in
rcl
in
fst
cmp
cmp
fcmovbe
ret
lret
mov
jecxz
divb
stc
cmp
cli
sub
aas
rol
sti
out
cli
stc
sti
jmp
out
out
inc
out
fcmovnbe
leave
xor
in
cmp
stc
call
sar
jecxz
xchg
sarl
sub
loop
cli
fdivl
call
cmp
std
shl
xchg
lret
nop
lock
int
lock
xor
cmp
jmp
xor
sub
shl
ds
out
leave
lock
xchg
aaa
clc
jmp
int3
cmp
cld
loopne
in
sub
repnz
int3
clc
fiaddl
xor
shl
repnz
jmp
rolb
fsubp
lret
int
sub
xor
ret
out
not
sti
cmpb
fstp
fcomp
shl
leave
mov
in
mov
in
rcl
ret
xor
int3
fucomip
fdivr
shl
sti
aad
xlat
lds
clc
lret
in
cld
test
out
out
ret
shr
cmp
dec
std
out
mov
or
clc
loope
xchg
xor
stc
and
fptan
loopne
clc
jmp
icebp
repnz
test
call
int3
shr
mul
repz
xchg
sti
stc
les
decl
out
lret
repz
fcomp
filds
repnz
stc
hlt
mov
fcmove
out
out
mov
xchg
out
les
aaa
in
shr
int
ret
sti
cli
xlat
hlt
cmp
jmp
stc
loopne
xorb
ror
lret
xor
adc
in
cli
stc
ljmp
jmp
vpsubusb
out
fcmovnu
jmp
sar
in
repnz
xchg
cld
test
lds
lret
sar
cmp
loope
xlat
std
or
stc
out
cld
fnstsw
xor
jmp
iret
lock
cmp
repz
cmpl
repnz
cmp
iret
out
nop
decl
lret
sti
repz
aam
cmp
out
fmuls
incb
ljmp
idivl
dec
rcr
out
clc
rol
ret
fsubr
loop
enter
loope
shl
jecxz
in
cmp
cmp
cmp
lds
fdivr
cmc
and
aam
shl
jmp
ffreep
divb
out
cmp
in
lret
test
clc
shl
lret
shll
hlt
fmul
cmp
out
fnstcw
ret
shl
out
std
loop
mov
fdivrp
stc
xchg
lret
call
xlat
enter
cmp
cmp
loopne
iret
hlt
icebp
sbb
mov
test
in
out
out
out
cs
in
lret
ljmp
clc
sarb
in
call
fsubr
lock
ljmp
enter
out
cmp
ds
aad
rcl
mov
shr
stc
cld
loop
in
fucomp
jmp
into
rcr
imul
fnstsw
inc
rcl
addl
out
mov
mov
jmp
rcl
rcr
fcmovb
mov
fstpl
jmp
fs
cmpsb
add
in
out
repz
xor
clc
cmp
shl
mul
vpmullw
fcmovne
test
sub
mov
lret
enter
ss
cmp
loopne
mov
out
cli
fcmovb
int
jecxz
mov
in
das
jecxz
aaa
out
shr
sar
in
in
xchg
adc
int
into
mov
in
jecxz
icebp
cmp
xor
out
fiadds
sti
stc
cmp
mov
xchg
enter
out
jecxz
aad
shl
in
fld1
xlat
shl
shl
aam
lock
fiadds
into
in
xchg
lret
call
std
sti
cld
in
faddp
cmp
mov
clc
out
cld
fcmovne
cmp
in
jecxz
call
out
cs
ss
cmp
testl
cli
mov
cmc
sub
xor
cmp
jmp
shl
rol
into
loope
repz
in
mov
loope
stc
xor
test
cmc
imul
aas
test
jmp
loope
xchg
out
into
lret
rorb
loop
in
lock
repz
in
cld
int
mul
xchg
incl
out
mov
call
lret
out
int3
iret
sti
xor
shl
xchg
mul
mov
out
in
mov
out
in
aam
loope
rol
cmp
sar
enter
filds
test
out
mov
jmp
shr
stc
xor
repnz
icebp
call
ret
xor
loopne
sbb
ret
mov
fmull
in
fldl2t
icebp
sarl
fldl2t
jmp
out
repz
xor
out
cld
enter
cmp
in
aaa
rolb
cmc
in
jecxz
rcll
xor
in
sti
shll
xor
and
xor
mov
std
in
enter
cmc
loop
clc
int3
iret
hlt
icebp
out
cmp
fdivrs
addl
in
fyl2xp1
fcmovne
jmp
in
repz
ffree
in
cmp
out
cld
ret
hlt
ret
sub
addb
icebp
fsubr
lock
hlt
sar
stc
fcmovnb
xlat
xchg
ret
xlat
and
shr
in
xchg
mov
not
iret
lret
sti
in
cmp
iret
cmp
loopne
stc
fdivr
add
int3
addb
icebp
call
not
enter
frstpm(287
aas
neg
rcl
ret
test
fadd
jmp
ljmp
sar
enter
shl
icebp
cld
test
test
mov
lds
test
adcb
cmp
cmc
aas
cld
idiv
int3
fxtract
shl
fadd
mov
loope
test
iret
rcl
lock
sar
fsubr
not
iret
into
rcr
ret
fsubrp
rorb
sti
out
fmul
xchg
call
xor
idiv
xor
call
in
clc
lret
sti
nop
int3
fmul
aaa
aaa
icebp
xor
hlt
aam
fadd
into
loop
idiv
in
mov
out
and
out
lret
ss
sarl
xor
out
jecxz
cmp
in
out
aas
shl
int3
sub
aad
lret
loopne
fcmovbe
in
aad
lock
lret
in
aam
cmc
call
repz
sti
neg
rol
into
cmc
loop
test
fcmove
fcmovnb
cld
test
addb
ret
cmp
enter
loop
fmulp
icebp
in
incl
mov
jmp
iret
cmc
out
rol
rol
lret
xor
ljmp
std
adc
fdiv
rolb
lock
into
out
call
sar
fcmovbe
std
adc
pop
fndisi(8087
or
xchg
jmp
cmpl
ret
lock
repnz
and
std
faddl
xor
jmp
aaa
ljmp
in
lock
rcl
rolb
call
xor
out
cmp
lret
hlt
aam
ljmp
fdecstp
out
ret
enter
mov
int3
mov
xchg
aad
jmp
cmp
sar
aad
and
rorl
icebp
repnz
in
stc
xor
test
cmp
out
stc
cmc
rcr
icebp
les
xchg
loope
lret
test
out
int
ss
clc
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
ds
leave
fstp
ror
cmp
mov
imul
add
jmp
test
xor
hlt
loop
fimull
out
decl
iret
lock
iret
cmp
cmp
xor
cmp
xchg
xlat
les
aad
ds
xor
in
hlt
cmp
cli
xor
fnstsw
xlat
rcr
incb
out
icebp
in
hlt
int
icebp
cmc
into
not
fucompp
ljmp
lock
jmp
clc
in
xchg
int
ljmp
lret
in
ret
rolb
test
sub
std
int
in
sub
xor
int
in
cmp
idiv
ret
into
repnz
xor
ret
std
ljmp
repnz
aas
sarb
int
xlat
stc
lock
rol
lret
cld
enter
xor
loopne
lock
shr
cmp
repz
out
cmp
jmp
leave
loope
out
int
out
xor
cmp
cli
in
std
cmp
aas
sar
test
ds
sbb
fdivp
mul
das
fld
jmp
ljmp
clc
idiv
out
test
sbb
aam
fldcw
aaa
out
cmc
aas
shr
fcomip
into
rol
clc
test
sub
fsubrp
into
jmp
aaa
in
xor
in
repz
sar
int
ror
roll
mov
out
mov
jecxz
cmc
ljmp
lret
out
loop
cld
aam
call
in
in
int
out
lret
hlt
cmp
repz
out
sbb
hlt
div
lds
loope
loope
icebp
jmp
fnstcw
shl
out
fcmovb
stc
ret
jmp
xchg
int
test
lock
jecxz
jmp
out
fcomip
cmp
clc
rolb
std
loopne
or
into
ljmp
into
out
out
cmp
xlat
call
ret
call
xchg
lock
call
fst
fdivr
aam
sub
test
xchg
loope
aam
fstp
fstp
cld
test
call
std
out
fsubp
rcr
and
sbb
repz
rolb
enter
cmp
out
cmp
ljmp
sbb
mov
fdivrp
ljmp
loopne
sub
fdivrs
rol
aad
fidivrs
lret
fsubr
xlat
cli
icebp
fadd
shl
loope
int
out
icebp
decl
in
ror
aad
in
ljmp
jmp
add
ljmp
repnz
ss
rcl
cmp
neg
stc
add
out
fdiv
mov
shr
out
cld
ret
out
in
repz
cmc
out
call
and
leave
fnstsw
cli
testl
out
jecxz
stc
repnz
fucomip
aaa
incb
in
int3
and
rorb
fcom
in
aad
fdiv
cmp
idiv
aas
shl
shl
neg
test
test
repnz
out
in
shl
in
out
into
ror
leave
ss
test
into
mul
jmp
test
cld
lea
in
call
out
cmp
shl
fcmovb
test
imul
clc
fcomp
lret
icebp
in
lret
ret
in
fcmovnb
xor
lret
aas
cmp
in
ret
mov
icebp
lret
in
fucomp
lret
xor
div
aad
ss
fsubr
aas
and
enter
fsubr
fdivrp
jecxz
call
fidivrl
cmp
fdivr
sbb
cmp
cmc
out
nop
vmaskmovdqu
ret
ret
in
cli
aad
ljmp
repz
clc
lea
xor
jmp
hlt
stc
fidivl
or
rolb
in
flds
xchg
iret
not
imul
xor
cld
in
cmp
int3
fcmovu
sarl
out
neg
fsts
cmc
xor
jmp
ret
into
cmp
in
rol
rorb
incb
repnz
repnz
in
repnz
jmp
fdivs
cld
sarl
ret
aas
or
xlat
call
repz
lret
jecxz
ret
not
leave
loope
int
int3
in
fadds
xchg
mov
out
repnz
loopne
clc
div
int
ljmp
loop
jmp
int
ret
fcmovu
add
dec
cli
and
into
outsb
jg
cmpsb
add
loop
jmp
iret
xchg
int3
bnd
cli
ss
cmp
int3
cmp
fcomp
jmp
ljmp
rol
out
rcr
in
aam
aad
xlat
ret
sar
test
ror
in
stc
xchg
std
loop
int3
int
ljmp
jecxz
into
loopne
std
in
decb
lea
xchg
cmc
not
out
xor
idivb
cmp
loopne
in
fcmove
mov
test
icebp
ljmp
in
out
repz
ret
std
into
jecxz
std
jmp
notl
fdivp
ds
fdivs
enter
in
iret
call
ds
int3
iret
loop
aam
lret
int3
sar
out
cli
clc
out
fcmovnu
cmp
fimuls
int
jecxz
jecxz
aad
cli
repnz
out
int3
clc
hlt
aam
jmp
adc
in
jmp
testb
xchg
out
xlat
fcmove
lret
sar
fstp
shr
lock
cmc
aad
ret
test
jmp
shl
popl
xlat
into
idiv
shl
cmp
out
cli
fst
fdivr
xchg
int
in
sbb
lock
mul
ret
lock
shl
xlat
fcomip
fld
fdivp
testb
fdivp
int3
xor
cmc
shl
fbstp
stc
fstp
shl
cmp
mov
int3
ljmp
fdivs
clc
int3
cmp
int
aas
ss
addl
fmulp
ljmp
div
xlat
cmc
call
xor
add
sti
lret
or
jmp
or
xor
cmp
cmp
shr
into
cmc
cmp
hlt
icebp
cmp
test
test
lret
in
out
lret
lret
fmul
cmp
ds
fcmovb
fadd
test
stc
into
ret
mov
sarl
idivb
ljmp
jecxz
iret
shl
shl
sub
jmp
shlb
shll
fcmove
icebp
lock
lret
lret
filds
mov
fadds
out
nop
aaa
jmp
xor
into
lock
cmp
cmp
out
xor
stc
jecxz
in
sbb
in
loope
test
in
fscale
icebp
rcl
int
fdivr
ret
fucomi
ljmp
xor
cmc
icebp
xlat
in
xor
std
repnz
add
stc
in
in
lret
lock
icebp
rol
fmul
aas
idiv
out
cmp
lock
xlat
ds
in
std
popl
mov
loop
fld
out
aam
sarl
repnz
vcmpsd
test
mov
ret
out
aad
cld
cmp
in
xor
std
lock
stc
les
mov
shl
out
divl
out
cli
repz
shr
into
cmp
not
test
jmp
sub
xlat
clc
mov
iret
int
xor
into
jmp
repz
into
out
shl
mov
repz
mov
in
xchg
in
xor
test
aaa
cmp
adc
adc
hlt
faddl
cli
xchg
aam
std
aad
leave
loope
iret
cli
in
lock
and
mov
leave
not
jmp
jmp
in
repz
into
ror
cmp
out
jmp
fsubrp
iret
ljmp
out
loope
lock
ret
shl
ret
rolb
mov
fimuls
lock
stc
int
fnop
std
icebp
and
cld
loope
iret
mov
std
shr
int3
nop
ds
call
cmp
lret
cld
cmp
out
hlt
hlt
test
xlat
mov
jmp
in
lret
aam
lret
loop
leave
xlat
repnz
fadds
stc
rcl
sub
lret
repnz
shrb
fucomp
xor
xor
int
lock
in
xlat
clc
jmp
test
cli
mov
lock
loop
out
leave
fdivr
xlat
hlt
out
rcl
aas
loopne
test
mov
lea
repz
cmp
rcl
icebp
cmp
hlt
aad
loope
jmp
sub
into
out
icebp
mul
lret
fcmovbe
cmp
ret
fisttpll
les
scas
xlat
sub
mov
jmp
mov
mov
xor
cmp
jmp
aas
enter
xlat
fcmovnu
mov
pop
insb
repz
jl
add
fmull
xor
aam
loope
fcmovnu
add
rolb
mov
int3
out
test
lret
in
in
idiv
cmp
xor
repnz
repz
cli
int3
into
in
shl
into
jmp
rcl
call
enter
and
fimuls
xchg
sti
lret
out
hlt
xor
aam
shr
shr
int
sar
sarb
fstpt
rol
testl
nop
leave
int3
repnz
xor
int3
iret
fnstcw
sbb
vcvtdq2pd
jmp
ret
repz
out
xor
call
in
stc
cli
cmc
xlat
shl
sti
aas
fadds
test
lret
xlat
xor
in
aad
repnz
out
addb
fsubp
cld
icebp
ficoms
xor
aaa
iret
xlat
cmp
in
sarl
stc
aam
shl
fnstcw
faddl
test
test
loopne
mov
sub
in
cmc
std
repnz
stc
stc
std
sarl
cmp
ret
out
std
faddp
ljmp
cmp
in
ret
fnstcw
ds
out
fcmovbe
cld
sarl
ret
std
ljmp
in
xchg
shl
loopne
fidivrl
jmp
ds
int
in
test
sarl
fmul
rol
clc
and
movl
icebp
cmp
shr
cmp
icebp
rol
xlat
repnz
loop
fisttps
cli
lock
not
jmp
add
mov
out
or
lret
mov
xor
jmp
clc
aam
cs
cmp
in
clc
cmp
aam
jecxz
not
fucomi
cli
enter
out
lret
sti
in
xor
test
cld
call
mov
jmp
cmc
jecxz
cmp
xor
repz
fcmovbe
fcmovb
div
cmc
xchg
jmp
fcomp
leave
xchg
icebp
iret
iret
mov
out
std
mul
cmp
addl
in
mov
shl
ror
xor
stc
in
in
cmp
not
test
in
sti
not
call
popl
aam
ljmp
jmp
lock
call
lock
fdiv
loope
fmul
nop
incl
ss
das
aaa
idivb
shl
shl
out
cmp
out
enter
filds
lret
xor
enter
cmpb
shl
fisttpl
and
in
out
hlt
into
shr
icebp
ret
shr
neg
rcl
hlt
lock
cmp
sar
fcmovu
incb
test
loope
rcl
into
into
in
xor
out
cmp
sti
roll
out
xchg
iret
loope
lret
fcom
out
rcl
cld
in
out
sti
in
xchg
cld
in
repz
cs
int
roll
cmp
push
sti
int
enter
in
adc
xor
loope
enter
into
sarb
sub
int
ffreep
test
in
fcmovne
shl
in
loope
jmp
fsubr
cmp
fidivrs
std
aam
in
test
xchg
loopne
ljmp
xor
sub
fldl
in
out
loope
cld
sub
xlat
out
cmp
clc
loope
ffreep
cli
cld
test
sti
out
mov
repz
cmp
out
cmpb
addb
fldl
out
call
das
icebp
int3
ret
ror
lock
lock
loopne
rcl
repz
fxch
rolb
lock
bnd
fucomi
fdivp
lock
adc
jecxz
out
enter
in
into
xlat
ret
test
cmc
lret
test
shr
ljmp
icebp
iret
vucomiss
mov
lret
aaa
neg
test
rcl
aas
out
test
int
call
out
fcom
fdivrl
std
sti
fidivrs
fstp
fdivrs
roll
fcmovnbe
rcll
lret
in
jmp
enter
stc
fsub
loopne
rcr
cli
cmp
in
out
xchg
repz
in
shr
stc
loope
cmc
fidivrs
test
out
ds
loop
xchg
in
jmp
in
in
in
je
mov
addl
jmp
jmp
vpsrlq
rcl
aad
xchg
mov
in
das
lods
mov
add
cli
stc
cmc
sbb
test
loope
imul
movb
xchg
shl
cmc
loopne
stc
cmc
cmp
cmc
aam
fcmovne
not
sar
enter
stc
test
or
int3
loopne
out
not
repnz
lock
lock
shr
xchg
xchg
fiaddl
loopne
decb
neg
call
rcl
test
cld
test
ret
sub
out
out
and
cmp
fnstenv
inc
int
or
loop
call
cld
popl
in
shl
rcl
repz
clc
sti
cld
lret
int
adc
xchg
out
test
fstp
xchg
lock
aad
out
xor
cmp
sarl
fdivp
fdivr
addb
ljmp
xor
vpminub
shr
icebp
fxch
xor
xlat
div
cld
imul
fcmovnu
shl
out
iret
test
mul
clc
repz
mul
fdiv
neg
std
lret
cld
enter
enter
test
out
ror
out
shl
jecxz
rol
xlat
aas
cmc
cld
fldl
mov
rolb
ds
shl
xor
icebp
idivl
out
ss
and
test
ret
lret
das
div
xor
cmp
shr
xlat
aaa
iret
loopne
test
lret
mov
xchg
ret
aad
rcl
ss
cld
test
lock
cmp
loope
xchg
icebp
loope
adc
clc
cmp
cmp
cmp
test
in
test
int
in
int
xor
xor
clc
jmp
fdiv
jmp
shl
rolb
fdivr
in
in
sar
icebp
xchg
leave
in
clc
into
aam
sarl
rcl
cli
sar
aad
mov
test
test
lock
aad
jmp
cmp
stc
testl
in
test
repz
lret
call
aad
loop
aas
repnz
aam
test
sub
mov
loope
leave
xor
cmp
repnz
out
std
fnstsw
loop
out
xchg
out
jmp
shr
shl
sub
lock
jmp
cmp
int
vpaddb
fsub
lret
lret
fisttpl
lret
idiv
hlt
ffreep
fdivr
hlt
into
fidivrl
iret
shl
aad
test
iret
nop
mov
dec
cs
shl
jmp
out
iret
add
std
int3
or
shl
loopne
aaa
ret
iret
das
shr
sar
out
out
loopne
test
cmc
xlat
xlat
repnz
out
int3
rclb
cmp
in
hlt
fxch
sti
cmp
rcl
test
xlat
out
int3
test
int
lret
in
ljmp
jmp
shl
clc
faddl
neg
flds
enter
jmp
cmp
in
fsubr
fnsave
xor
std
shl
loope
loope
jecxz
cli
enter
rorl
in
sti
int3
fdivl
cmpl
xchg
cmc
xor
out
fmuls
shl
jmp
enter
cmp
repz
fdivrp
in
iret
mov
mov
mov
xor
rcl
jmp
adc
cmp
dec
in
lea
mov
sub
mov
jmp
aas
ss
aas
out
in
in
rcr
les
fildl
aas
in
out
xor
cli
aam
aas
repnz
jecxz
neg
loop
jecxz
fucomip
out
test
hlt
out
lret
icebp
into
aaa
div
cmp
loop
call
fldpi
sti
jecxz
addl
iret
jmp
ss
jecxz
jecxz
shl
std
jecxz
test
in
xchg
loope
leave
aam
shr
out
stc
sti
cmp
cmp
rol
stc
out
in
cli
in
out
into
shr
lret
repz
cmp
in
out
std
fdivr
stc
xchg
out
in
lret
stc
cmp
sar
ds
fbstp
loope
ret
std
cmc
xchg
loop
in
fdiv
jmp
int3
jecxz
cli
xor
sarb
sti
aad
out
xlat
loop
cli
neg
std
in
in
xchg
repz
call
out
hlt
sar
in
shl
mov
cmp
je
mov
jmp
push
mov
sub
incl
mov
push
or
push
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
rol
sarb
aas
rcl
mov
sbb
stos
int3
jl
jl
add
loope
cld
mov
test
mov
fxch
jmp
sarl
cld
repz
fldl
in
fcomip
icebp
xor
sub
in
fcomi
ljmp
cmp
sub
stc
loop
out
lock
xor
in
enter
repnz
cmp
cmp
aam
fcmovnbe
cmp
cld
orl
ljmp
stc
testl
loope
ftst
fdivr
xchg
in
lret
int
out
in
int3
in
out
enter
rol
xlat
ret
stc
cli
testb
mov
test
add
xor
ljmp
sar
jecxz
cmp
out
rcr
mov
test
repnz
hlt
xlat
out
ljmp
into
ror
cmp
cld
fdivr
out
sti
fucom
cmp
loopne
mov
sub
sub
repnz
int3
loopne
stc
add
in
icebp
shr
xchg
xchg
loopne
loopne
xor
imul
lock
out
loop
xor
lds
out
out
out
shl
jmp
aad
fistpll
xor
fiadds
fsubr
sbb
test
loop
in
repnz
aam
out
test
enter
in
xchg
rcl
jecxz
out
int3
clc
fmul
out
cmp
cmp
call
iret
in
int3
cli
mov
jmp
out
cli
out
not
int
call
fdivrp
cld
out
loop
adc
xchg
mov
in
xor
jecxz
aaa
xor
lock
ljmp
cmp
shl
clc
std
mov
fcmovbe
int
repz
clc
lock
fmul
jmp
xor
flds
in
addl
lret
xor
imul
leave
cmp
aas
aas
cmp
hlt
ret
shr
mov
leave
in
loopne
out
fcomip
in
xor
in
int3
fsubr
int
lock
xor
filds
hlt
enter
mov
cld
xchg
xor
shl
ljmp
fcmovbe
loopne
aas
aam
clc
loop
and
in
sti
mov
xor
xor
int
lret
out
fsubr
ror
call
fsubr
hlt
in
lret
in
repnz
int
ds
cmp
fisttpll
mov
loop
xlat
call
not
roll
std
cmp
fsubrp
fcmove
mov
int3
leave
aam
fcmovnb
clc
cmpb
out
out
stc
lock
out
enter
int
nop
xor
lret
iret
jmp
lock
rcr
aas
sar
ret
mov
leave
mov
neg
loopne
call
shr
out
ret
fstpt
in
in
xbegin
fcmove
icebp
test
ljmp
clc
in
cmp
rolb
aad
in
mov
in
loope
cs
aaa
xlat
loop
lret
cli
in
xor
aas
xchg
fcomi
ret
sti
test
loopne
lret
ss
cmp
jmp
fadd
loope
ret
cmp
fsub
xchg
int
xchg
int
xor
aaa
in
fmul
shl
cmpl
xchg
in
fsub
sub
mov
int
repnz
ljmp
sti
cmp
cli
mov
div
xabort
std
fsubr
int3
cmc
mov
out
sar
aaa
faddl
idiv
lds
enter
icebp
orl
leave
cmp
ds
lret
fdivrp
sti
ret
add
out
nop
mov
cld
test
enter
shl
in
cmp
idiv
aam
sbb
cmp
fsub
enter
mov
shr
xor
xor
lock
loope
aam
shl
mov
lret
into
xchg
and
enter
fucomi
cmp
cmp
enter
cli
shl
aam
test
xchg
and
xchg
repnz
out
cs
repnz
int3
aad
shl
repnz
repz
fadds
icebp
repnz
sub
loop
enter
loope
fcomip
and
shl
lret
loop
and
and
leave
out
into
sti
hlt
out
dec
repz
lock
ds
repnz
in
in
cmp
in
out
lret
in
xor
std
idivb
cmp
xlat
test
cli
out
fnstsw
fmul
mov
aam
cli
xchg
or
nop
xor
int
jmp
lret
lock
repnz
ret
ret
mov
xchg
in
call
int
int3
rcl
repz
xor
lock
mov
orl
add
sbbl
push
neg
jmp
int
aad
ffree
fstp
stos
push
push
ror
lds
jl
add
shl
clc
roll
repz
rolb
fdivrs
aaa
aaa
out
out
cmp
rcr
incb
vpsrlw
loopne
xor
in
aas
repz
xlat
shr
leave
inc
decl
iret
xor
ljmp
lock
loope
int
fdivr
ret
std
fcmovnb
std
fcmovu
out
jmp
mov
repnz
cmc
lret
fdivrl
ds
ret
in
mov
out
fcom
in
jmp
aas
into
sar
jecxz
sarl
repnz
fimuls
out
lret
leave
ljmp
int
hlt
or
repz
std
in
int3
fisttps
lea
ds
clc
repnz
cli
int
iret
icebp
out
xor
sar
sti
test
fsub
test
cli
int
in
jmp
out
xorb
sti
ds
std
cld
jmp
xchg
in
int3
mov
call
out
in
not
cmp
cli
cmc
ret
rol
xor
ds
stc
ret
out
lock
fisttpl
ror
lret
xor
int
cmp
cmp
cmpb
in
loope
std
call
das
shl
ljmp
xor
aad
in
mov
in
in
and
ret
fcmovnu
jmp
std
int3
fdivp
cmp
ret
jecxz
aas
mov
movl
mov
aad
aad
repz
fdivr
out
shr
std
fyl2x
not
lret
shl
mov
lock
xlat
aam
idivb
sar
in
rcl
shl
loope
fadds
in
hlt
int
repnz
cmp
aam
cmp
idiv
stc
mov
mov
mov
mov
clc
cmc
rcl
lret
lret
hlt
fdivp
fneni(8087
out
fadd
sti
loop
fcmovnu
test
and
shll
cmp
std
sarl
cmp
shl
cmp
fdiv
lret
in
out
loope
loop
rcl
repnz
imul
call
in
out
out
orb
jecxz
loop
in
fimull
aam
into
into
lret
lock
sar
ds
loop
mov
jmp
in
jmp
fiadds
leave
sti
lock
int
cmp
cmp
rcr
clc
mov
fsub
int
cld
mov
lret
not
aad
cmp
lret
rolb
shr
mov
lock
xor
rcl
ljmp
out
jmp
decb
xchg
int
ret
int
lret
xor
cmp
hlt
fdivrp
rcl
std
enter
mov
icebp
div
cmp
iret
lock
cmpl
aad
aas
sti
rol
inc
fstp
xchg
cld
repz
loop
sub
lret
repz
ds
into
in
fdivp
stc
aad
xlat
cld
int3
jmp
sti
repz
xchg
jmp
xor
into
into
sarb
rol
lock
loop
lret
loopne
xchg
xor
clc
rol
lock
leave
cmc
fidivrl
shl
iret
cmp
jecxz
out
loope
mov
xlat
xor
xor
lret
ror
lret
xor
ret
ret
cmp
out
mov
rorl
not
xor
hlt
shr
ds
cmp
loopne
test
fucomip
rcr
cmc
ret
mov
into
in
in
ror
sub
sti
aam
lock
cmp
cmp
in
mov
fisttpll
xchg
loop
aad
icebp
aaa
lret
cld
test
jmp
hlt
out
vpmulhw
call
xchg
in
call
fcmovu
fcmovbe
stc
jecxz
aam
in
loop
aam
mov
filds
nop
test
in
shl
aam
sub
aaa
in
aas
stc
ss
cli
adc
test
clc
jmp
repz
in
cmc
xor
das
xor
cmc
rcr
aad
sbb
fsubrp
cli
filds
shr
mul
xor
leave
cmp
idivl
iret
cmp
ret
test
xlat
mov
xchg
test
ret
aaa
iret
ret
idiv
ljmp
rcl
mov
jmp
in
icebp
xchg
enter
cmp
fsub
cmc
inc
rcr
roll
shl
test
in
in
in
repz
ljmp
jmp
cmc
in
not
aam
cmp
aad
sti
les
loop
loop
lret
out
lds
cmp
cmc
ds
cmp
ljmp
and
lock
shl
xor
icebp
stc
cmp
rorl
mov
inc
add
scas
arpl
push
fs
add
incb
add
inc
add
inc
hlt
out
pushf
clc
sbbl
jmp
rcl
int3
fstp
arpl
test
js
push
jle
jge
jl
jecxz
in
xchg
mov
fsubrp
lret
in
lock
or
in
jmp
sarb
sarb
cmp
test
sar
mov
xchg
xchg
rcl
std
icebp
std
aam
cmc
loopne
div
in
std
cld
rol
ret
leave
int3
stc
iret
lock
cld
int
in
out
jmp
fcomp
out
ror
call
icebp
flds
mov
out
xchg
loop
out
lret
cmc
int
sti
icebp
xor
icebp
iret
loop
std
xchg
out
cli
enter
in
xchg
cmp
in
test
lock
enter
leave
cmp
int
in
incl
test
out
int
xchg
xchg
ljmp
std
cmp
icebp
ffreep
in
ds
xchg
aam
mov
mov
std
repz
cmp
rcl
rcr
cmp
loopne
iret
fcom
sub
loop
in
xchg
ficoml
ret
cmc
xlat
ljmp
in
std
roll
aam
jmp
mov
faddl
xor
out
cmp
clc
sarl
loope
cli
hlt
xchg
lds
imul
mov
loopne
filds
imul
das
cmp
lock
addb
fmul
fsubr
ljmp
xor
in
clc
cmc
in
rcl
lret
in
cmp
lret
testl
cmp
xchg
mov
enter
out
cmc
cld
sti
cld
shl
ret
out
out
rorb
loope
loop
lds
aam
out
cmp
out
idivl
ret
and
cld
enter
out
jmp
xor
xor
jmp
enter
adc
cmp
shl
vpsraw
fucom
nop
cmp
xchg
lock
lock
shl
std
sti
out
clc
into
cld
cmp
test
faddl
jmp
xor
cmp
cmc
fiadds
test
test
fsubrp
addl
loopne
in
ljmp
cmp
fabs
jmp
std
push
mov
sar
xor
fmul
out
jmp
cmc
clc
hlt
fadd
int
cmp
fsubp
std
jmp
addb
std
mov
loop
lret
lret
call
lret
rol
rol
jecxz
shl
div
int3
sti
jmp
mov
icebp
cli
sarb
sbb
sub
ret
mov
mov
aam
lret
out
mov
xchg
call
iret
xor
xor
xlat
sarb
test
cmp
cmp
fsub
fldl
jmp
out
call
cmp
rcl
repz
xchg
sti
cmp
ljmp
in
out
sub
cmp
shl
aam
stc
hlt
repz
fildl
leave
call
rcr
out
int3
into
shll
icebp
shl
lret
aam
testl
cli
lea
or
xor
fsubr
xor
sarb
repz
shr
sbb
flds
loopne
out
cld
loopne
out
in
cmp
jmp
xlat
loope
cmp
fstp
mov
cmp
xchg
repz
xor
cmp
in
aas
sar
lock
repnz
out
jmp
rcl
int
cmp
cli
cmp
idivb
fucom
loope
xchg
std
in
lret
fucomip
icebp
call
xlat
out
xor
aas
ljmp
test
clc
loope
clc
cli
xchg
repz
xchg
jmp
xor
fsubrp
imul
std
fdiv
cmp
mov
fstp
jecxz
sub
repnz
loop
int
out
ss
shr
cmp
hlt
cli
std
fmuls
lock
mov
out
idiv
cmp
clc
icebp
jecxz
shl
test
orb
ret
cs
lock
enter
cmp
cmp
cmp
xlat
call
ljmp
shrl
into
fcom
aad
int
cmp
int3
xchg
repnz
int3
loop
mov
in
nop
cld
xor
xor
aaa
sti
lret
hlt
rol
aas
fdiv
imul
fiadds
mov
aad
shr
repz
sarb
out
cmp
shl
out
cmp
movl
in
into
in
out
ljmp
leave
out
out
cmp
rcr
rol
ret
loopne
stc
in
div
loope
test
enter
sar
lret
cmp
into
iret
fcmovnbe
shl
repz
jmp
xchg
cld
mov
sub
lret
cmp
ljmp
aam
rcr
roll
xor
cmp
lret
lret
lock
xchg
fs
add
push
dec
add
movl
jmp
xlat
enter
enter
xchg
rol
mov
jle
jge
jl
mul
in
loop
testb
jmp
xor
xor
shr
out
cmc
in
clc
add
std
lret
in
faddl
in
loopne
fstpt
cmp
cmp
out
in
rcl
cmc
sar
mov
ret
loop
mov
fucomip
call
int3
imul
rcl
icebp
jmp
out
shl
xchg
and
mov
rcl
ss
int3
aam
aad
sarb
rcl
adc
cmp
ljmp
repz
fnsetpm(287
aad
fsubr
sar
sarl
jecxz
out
loopne
imul
cli
int
cmc
in
lock
xor
sub
cmc
cmp
xor
neg
in
fucompp
ficoms
rol
jecxz
jmp
fsub
lock
cmp
out
ds
fcomip
cmp
in
jmp
lret
nop
mov
ljmp
aas
int3
cld
rcr
rolb
jmp
fmul
xchg
enter
aam
shr
cmp
repnz
addl
out
mov
aas
out
in
sarb
std
lret
fistpll
xlat
in
loope
cli
aas
jmp
test
mov
sub
int
xor
in
std
rcl
jmp
rol
loopne
out
cld
sub
cld
iret
jmp
fcomip
jmp
repnz
enter
aad
xlat
shl
std
shl
cli
leave
leave
ror
in
leave
out
ljmp
xor
in
cmc
in
xor
ljmp
fiaddl
fprem1
cld
fcomp
call
call
loop
jmp
in
fadd
add
cld
cmp
in
call
fcmovnu
call
mov
xor
jecxz
out
fstpt
repz
fidivrs
cmp
jmp
cmc
int
std
test
in
loope
call
iret
cmp
not
lock
fcmovnbe
out
jecxz
loopne
call
decb
ret
cld
aam
fld1
sub
xchg
incb
int
xor
int
aam
in
rcr
lret
shlb
out
ds
flds
in
mov
das
jmp
stc
cmp
cmp
fistpll
loope
xor
fiaddl
fmulp
ljmp
leave
fld
repz
jmp
rcl
loop
fucom
loope
cli
icebp
in
mov
out
clc
icebp
stc
lock
shl
shl
repz
loopne
fdiv
mul
fxch
in
std
out
xchg
lock
cmc
icebp
out
fucompp
enter
out
int3
filds
mov
test
test
int
das
call
sarl
cmp
clc
aad
cmp
test
or
xor
out
xor
call
idivb
fucom
test
jecxz
les
cld
xchg
loop
xor
idiv
repz
int3
jmp
stc
cmp
shl
or
decl
xchg
mov
aad
in
hlt
xlat
sti
aad
out
sti
sub
ror
orb
out
fucomp
xor
icebp
repz
repnz
cmp
not
sti
not
rcl
fsub
repnz
xchg
out
in
repz
div
xor
iret
repnz
out
stc
loopne
lock
icebp
jecxz
sti
ljmp
cld
lret
ss
cs
xor
repz
fistpll
ror
incb
leave
or
in
xchg
out
shr
xor
stc
testl
xchg
mov
fsub
mov
xor
cli
loopne
out
aas
stc
clc
iret
mov
lret
push
fmuls
mov
ror
call
sar
cmp
xlat
ljmp
xlat
std
ljmp
xchg
xchg
mov
xor
cmp
cmp
rol
sarb
rolb
xchg
in
rol
aas
in
in
xor
aam
cmc
leave
icebp
sbb
cmp
shl
fcmovu
fucom
out
test
ret
jecxz
test
out
out
jmp
xor
in
test
ror
hlt
cld
les
out
jmp
lea
ret
call
div
stc
rcr
faddp
out
cmc
out
fxch
leave
mov
xor
cmp
cmp
cmp
neg
sub
std
out
notb
cmc
ret
in
aam
xor
cmp
shl
loop
adc
fcmovbe
fld
shl
loop
lock
xorb
cmp
fcmovne
repz
aad
in
aad
fadd
stc
enter
in
in
int
lock
out
xor
lret
lock
aam
aas
movl
jne
mov
movl
mov
movl
mov
mov
movl
jmp
aad
leave
fcmovne
fcmovbe
test
incl
jle
jge
jl
icebp
rolb
xchg
into
filds
shl
les
hlt
repnz
loope
ds
aas
stc
clc
cli
out
sar
fimull
test
aad
xor
shl
fsubr
iret
xor
std
aas
rcr
loope
aam
fucomip
ret
lock
ljmp
cmc
call
iret
iret
cmp
fiaddl
xchg
and
clc
lret
fildl
aad
out
lret
rcr
rcr
repz
fadd
loop
repnz
fmul
ljmp
sar
neg
stc
cli
ljmp
xchg
add
rol
hlt
leave
incl
not
les
aad
fdivs
jmp
icebp
int
fadd
in
ret
xchg
mov
mov
in
xlat
out
repz
out
imulb
icebp
clc
call
loop
fxam
in
mov
int
sub
in
mov
lock
out
fidivl
in
std
iret
idivl
in
jecxz
stc
neg
decb
loop
sbb
test
ret
loop,pn
lret
in
in
lock
ds
sbb
ret
les
icebp
nop
into
call
cmp
fidivl
iret
into
ret
hlt
out
add
lea
les
icebp
ljmp
aas
cmc
ss
cld
loope
cmp
cld
lock
imul
enter
leave
cmp
aaa
repz
icebp
cmc
test
rol
in
flds
cmp
out
jmp
fprem
sub
cs
xor
fiadds
out
cli
fildl
nop
loope
nop
mov
xor
aam
rcr
aad
cmp
aas
in
ret
fcmovne
mov
jecxz
in
in
in
aam
loopne
xor
hlt
iret
jmp
out
xchg
loope
mov
stc
xchg
rcl
in
cmc
xor
idivl
jecxz
mov
std
cli
std
mov
in
xchg
loop
sub
mov
repz
aaa
cmp
rcr
icebp
fcomp
aad
aam
test
mov
shr
std
jecxz
loop
fdiv
hlt
cmc
jmp
std
rcr
sar
in
fsub
stc
fucomp
sti
jmp
mov
jmp
divb
fadds
fucomip
fsubr
out
fists
xor
int
int3
xor
enter
xlat
loop
sar
cld
call
loopne
iret
loope
xchg
call
rcl
cmp
fdivp
cmp
sti
loopne
filds
ljmp
xor
clc
rcr
fucomip
rcl
stc
xor
mov
leave
enter
loopne
out
in
out
ret
xor
neg
jmp
not
aas
rcl
fcmovu
int
xchg
jmp
fimull
xor
in
fdiv
cli
lock
loopne
lds
std
leave
rol
sbb
in
or
xchg
imul
ror
repz
cmp
xlat
lret
rcl
clc
shl
repz
lds
in
fnstsw
in
jmp
shr
out
xlat
lret
shr
out
in
fcmovnbe
cld
test
addb
ljmp
cs
fucomi
clc
cmc
lret
cmc
sti
cmp
not
mov
call
out
cmp
cmc
xor
fcomp
lock
jecxz
flds
out
jecxz
enter
cs
repnz
cmp
sbb
adc
repnz
std
in
loopne
bnd
ljmp
fst
loopne
into
dec
lret
addb
hlt
sub
aam
fsqrt
lret
fcos
cmp
aam
cmc
icebp
cli
loopne
loop
fninit
inc
in
out
out
icebp
aad
xor
stc
jmp
lret
in
cmp
rol
into
aad
mul
enter
xchg
xchg
fisttps
imul
stc
cmp
int
xlat
int
ret
in
mov
jmp
out
jecxz
aad
jecxz
into
xor
xor
jmp
xor
sti
cmp
clc
lret
fdivrp
int
in
call
loopne
int3
ret
fcomi
xlat
test
cmp
std
and
fadds
int3
iret
cmc
imul
in
fcmove
std
cmp
jmp
filds
shl
clc
mov
sti
enter
sti
shl
loopne
xor
vcvttss2si
enter
in
shl
addb
jmp
shl
in
out
iret
idiv
sar
std
repnz
cld
sbb
cmp
in
cmp
xor
jmp
stc
aad
xlat
xlat
rcr
test
shl
cli
in
ljmp
lock
xor
lds
ss
in
in
cmp
fisttpl
jmp
movl
cmp
jne
or
andl
or
mov
subl
jmp
int3
ds
rcl
iret
or
popl
jge
jl
clc
in
out
aad
fstp
fcomp
loopne
out
mov
mov
jmp
lret
cld
fcmovu
fdivr
cld
rol
rolb
mov
mov
icebp
call
ret
xor
rcr
cmp
test
into
fcomi
fcmovne
addl
xchg
in
lock
repz
shr
sar
jecxz
hlt
in
out
hlt
test
rorl
out
nop
into
xchg
sub
cmp
jmp
loope
iret
neg
fsubp
test
sti
std
fstl
jmp
out
out
std
clc
ljmp
fdiv
mov
loopne
fcmovnu
repnz
fcmove
repnz
into
clc
cld
fcomi
hlt
ds
std
xlat
fst
ret
loopne
roll
call
shl
int3
sti
cmp
cli
rolb
in
jmp
out
sub
lret
cmp
repz
xchg
adc
icebp
addb
divl
repz
jmp
fcom
out
in
cmc
fcmovu
cld
out
into
in
out
in
icebp
xor
fcmovnbe
cmp
repz
repnz
ds
aam
int3
in
in
add
jecxz
aaa
call
in
aam
xor
lds
clc
repz
out
sarb
iret
in
ror
xlat
hlt
idivl
ret
aam
mov
out
jmp
xchg
enter
sub
hlt
fcmovbe
fnstcw
int3
cld
repnz
aam
shl
repz
in
test
orl
jmp
flds
into
roll
orb
out
int
xor
xor
in
lret
cld
aam
sarb
jecxz
mov
or
icebp
dec
out
and
xor
in
out
int
iret
iret
clc
fcom
cli
lea
std
loopne
int
fcomi
lock
int3
ror
shl
aam
into
movb
mov
mov
out
xor
xor
cmp
aad
cmp
in
loope
jecxz
fndisi(8087
aam
fimuls
sar
icebp
int3
stc
int3
sub
xor
into
enter
jmp
sti
shl
sar
sar
in
loopne
orb
out
out
enter
cli
rcr
aad
repz
std
rolb
mov
loop
sbb
xlat
int3
shl
out
out
rolb
cld
cli
mov
in
shr
out
in
jmp
xor
cmp
ss
idiv
fdivr
sar
ret
ret
orb
xor
nop
xor
call
iret
icebp
repnz
cmp
idivl
jmp
jmp
int3
adc
sub
int3
xor
in
out
iret
leave
not
fsub
sti
ror
mov
test
lock
loope
in
into
ror
stc
sarb
roll
loopne
fucomi
mov
fdivr
out
loop
hlt
repnz
shl
lret
cmc
loope
clc
int
in
aas
into
jmp
mov
mov
mov
jmp
fstpt
int
cmp
aad
loop
cmp
leave
aam
clc
loope
iret
or
ljmp
in
aad
fidivrl
jmp
fucomi
in
fmul
loope
nop
into
mov
jmp
enter
aas
fcmovnu
jmp
fcom
ret
fnstcw
addb
repnz
aam
neg
out
int3
cmp
out
ljmp
addl
repz
ljmp
call
int
fsubr
xchg
xchg
xchg
out
in
shll
not
repnz
lret
loopne
fst
stc
rolb
int
int3
repnz
repz
xor
test
cld
cmp
loopne
sbb
idiv
enter
loopne
loopne
xor
fxch
shr
cmp
adc
xor
cld
xlat
cli
xchg
std
mov
fdivp
rcll
out
fcom
cmp
xor
loop
test
out
fsubp
test
iret
shlb
xlat
aad
fidivrl
out
int3
fmul
into
in
rcr
filds
loop
test
out
sub
iret
loopne
out
repnz
aaa
aaa
idivl
rolb
ret
jmp
movl
ljmp
fsubrp
cld
adc
cld
leave
test
test
jmp
cmc
iret
jmp
fcmovbe
int3
lret
aas
ds
int3
shl
cmp
jmp
sub
lock
incb
jmp
in
fucomip
xlat
sub
sbbl
push
xor
mov
incl
add
orl
push
call
movl
incl
cmpl
jb
movl
jmp
cmp
movl
jmp
ror
int
lret
xchg
or
cwtl
js
jp
sbb
jge
jl
cmp
ret
clc
ret
out
stc
addl
jecxz
in
out
xchg
fcomip
xor
les
in
jmp
fsubp
lock
cli
jecxz
std
cmp
adc
xor
fnstsw
in
aad
cmp
aam
cmc
sar
lret
xchg
in
mov
ret
jecxz
ljmp
in
cmp
ds
xchg
mov
mov
xchg
orb
shl
test
fsub
fsubrp
clc
test
out
std
mov
ret
in
lret
xor
repz
rol
ret
xchg
in
leave
lret
in
fucomp
in
xchg
test
jmp
fcmovnu
out
cmc
rcl
add
fnclex
ret
stc
mov
xchg
leave
aaa
sti
neg
sarb
rcr
cli
cmp
mul
cmp
test
enter
int
rorl
call
fucomi
fcmovne
idivb
fst
cmc
loop
fcmovu
sar
call
in
int
xor
clc
test
ds
or
xchg
loopne
mov
fisttpll
int
icebp
lret
cli
cmpl
ds
lock
lret
mov
or
int
rcl
out
xor
shl
loopne
in
into
test
test
mov
xchg
mov
mov
fdivp
shll
vcvtpd2dqy
leave
jmp
xlat
test
jecxz
ffreep
sti
sbb
leave
out
rorl
rcl
xlat
icebp
leave
fdivrp
fld
shl
decb
fxch
ror
loope
out
xor
xor
xor
shl
fdivl
sarb
clc
fcmovnu
out
lock
decb
nop
into
iret
loopne
mov
out
ss
sti
fdiv
fnsave
ljmp
fsub
out
in
test
loopne
out
out
xchg
repnz
xor
repz
das
not
shl
call
rol
rcl
mov
dec
lret
out
rorl
out
iret
in
in
cmp
aas
xlat
int
fiadds
mov
jecxz
fdiv
fucomip
loope
loop
xor
jmp
ljmp
test
ss
ds
aad
cld
icebp
cld
mov
nop
jecxz
ret
xor
aad
cmc
cli
aad
int
int3
cli
sarl
sar
sbb
jecxz
call
xor
clc
fstp
lret
cld
sarb
cmp
idiv
orl
int3
fmulp
iret
aad
int3
loope
xor
std
xor
xlat
cmp
hlt
repz
test
out
xlat
fisttps
int
xor
fldl2t
xor
jmp
test
lock
mov
in
cmc
lret
shr
jmp
out
fprem
enter
ds
or
xchg
jecxz
stc
in
xchg
mov
leave
cld
cmp
in
sarl
idiv
xlat
vmovq
shr
loop
mov
call
in
rcl
fcmovne
cmp
cmp
xlat
inc
loop
filds
xchg
test
shl
lret
sti
stc
cmp
cld
fsubr
aam
out
and
mov
cmc
jecxz
mov
lret
aad
jmp
loop
adc
stc
and
in
ljmp
into
repz
jmp
out
iret
not
xlat
icebp
loop
xor
jecxz
fsubr
mov
clc
ret
mov
jecxz
jmp
lock
icebp
repz
lds
clc
in
xchg
lret
cmc
add
divb
jmp
out
push
out
out
sarb
cld
out
fnstcw
int
fsin
lret
loop
xor
icebp
repz
fcmovne
test
in
cmp
out
out
popl
call
out
lock
cmp
out
orl
xchg
cmp
jmp
aad
xor
jecxz
idiv
cmp
int3
out
cmp
rcl
enter
out
sub
dec
repnz
jmp
icebp
cmp
fnstcw
cli
xlat
cli
int3
aam
fcmovnu
cmp
xor
call
test
aas
out
rcl
aas
aam
sar
loop
fcmovnb
out
icebp
into
lret
mov
ljmp
jmp
out
into
aad
std
addb
ret
loopne
xchg
out
loope
repnz
out
clc
loop
ss
out
cmp
out
in
jmp
xchg
in
addb
xchg
test
imulb
shlb
aaa
fcmovbe
fsubrp
cmc
std
aam
aam
movb
lds
jmp
ss
cmp
ss
test
mov
fsubr
iret
adcl
int
clc
out
jne
xor
or
adc
movl
orl
mov
sbbl
mov
xorl
jmp
rcl
lret
rcl
cmp
mov
dec
and
jge
jl
int3
out
cmp
or
lock
ljmp
xor
ror
shlb
lret
fcmovu
shll
aam
idivl
std
out
out
nop
std
mov
stc
out
xor
sti
test
fld
aam
cmp
fsubr
or
lret
rol
xor
lret
neg
stc
fcomip
add
sar
xlat
mov
leave
fcmovb
ret
fucomp
mov
in
repnz
ret
call
int3
rcl
xlat
in
filds
test
int
in
in
in
ss
fmul
cmpl
out
roll
loopne
in
xor
out
shll
in
int
ljmp
shl
xchg
ret
lds
decb
lret
ljmp
aam
sti
jmp
fsub
icebp
leave
lret
loopne
xchg
aad
hlt
out
out
out
cmp
aad
adc
call
mov
mov
das
sub
xlat
ror
in
iret
fldl
fidivrs
fcmovne
shr
out
out
out
leave
jecxz
jmp
repz
call
lock
addl
cld
fisttps
xchg
out
out
fldln2
cmp
aaa
ds
jmp
aam
fucomp
sbb
flds
int
out
fsubr
in
out
xor
hlt
cld
flds
call
out
mov
in
xor
in
imul
aaa
repnz
addl
mov
adcl
ret
xor
sub
in
out
clc
fidivrl
into
xlat
fcom
ret
cmc
fisttpl
in
loopne
cld
fdivl
call
ss
aas
icebp
clc
shr
sti
cmp
out
in
mov
xchg
loope
in
ss
xor
das
in
ljmp
testb
enter
xchg
loopne
mov
icebp
clc
in
aaa
fst
aas
sbb
repnz
dec
stc
xlat
out
flds
shll
fincstp
cmp
rcr
out
cmp
loope
stc
adc
fcmovne
mov
shr
nop
xor
in
in
call
out
shl
fsin
jmp
orb
icebp
imul
lret
ffree
cmp
aas
cmp
fdivp
into
test
shl
jmp
and
enter
leave
repnz
fcom
aas
xor
fistpll
aam
fucom
repnz
out
xlat
std
out
xchg
in
lea
sti
lock
cmp
fldz
fnstsw
push
in
std
mov
jmp
out
jmp
xlat
out
out
fsubr
sub
leave
xchg
fld
test
and
nop
into
xchg
into
aaa
jecxz
in
into
in
fdivrp
lret
sbb
sarb
mul
sar
cld
std
xchg
fucomip
das
shl
clc
fcmove
repz
repz
int
std
fidivrs
xlat
std
cmc
fdivr
fmuls
ror
in
in
cmc
xor
ror
cmp
rol
fstpt
fucomp
hlt
jmp
ds
decl
aam
shl
into
xor
cli
shl
in
cmp
ds
jecxz
mul
fildl
cmc
mov
shll
out
iret
xlat
aam
aad
clc
int
aam
sbb
addl
cmc
add
xor
jmp
jmp
aam
fcmovnu
fsub
cmp
lock
out
call
out
jmp
aam
div
cli
into
cmc
in
cli
jecxz
fptan
loopne
clc
leave
incb
jmp
int3
xlat
lock
enter
cmp
aam
jmp
xchg
rol
ret
fcmovne
call
ret
lret
shr
cmp
call
cmp
fcomi
fld
aad
ret
leave
stc
cld
ficoms
sub
fstpt
cs
cmp
icebp
ljmp
rol
fsubrp
add
loop
repz
in
int
icebp
ret
lret
jmp
ds
xor
shl
jmp
addb
jmp
das
rcl
leave
ljmp
test
clc
std
call
pop
addl
out
shr
out
jmp
icebp
aaa
sub
rcr
roll
ds
out
out
and
lret
lret
out
lock
ljmp
not
fmulp
fxam
lock
out
lock
aad
xor
clc
int3
stc
lret
out
adc
jecxz
lret
xlat
add
in
repz
jmp
lret
out
ror
test
lock
fcmovbe
repz
int
loope
ds
lock
fdivr
mov
incl
jmp
int
iret
rcl
fsts
fs
cwtl
rclb
and
jl
add
dec
cld
rcl
les
cli
stc
call
in
vpsubq
cmp
sti
out
ror
jmp
in
rcl
add
idiv
icebp
and
jmp
aaa
aam
xor
xbegin
int3
jecxz
shl
xlat
cli
std
hlt
ljmp
mov
into
aaa
lret
in
iret
in
lock
cmp
fsubp
out
ljmp
fldl
int
jmp
fcmovnbe
aad
cmp
in
xchg
mov
in
shl
out
iret
loop
cmp
in
icebp
loopne
shl
inc
xchg
enter
in
xchg
shl
aaa
aaa
in
xlat
cmp
leave
fcmovnbe
cmc
idivb
test
in
clc
cld
in
lds
enter
icebp
xor
cli
ret
fsubr
repz
lock
cmp
fdivr
aad
stc
lret
in
lret
enter
sub
out
lret
xor
cmc
cmp
lret
rcr
shl
ret
aam
sti
fldpi
cli
mov
lret
mov
faddp
rcr
jmp
aas
loopne
cmp
out
fadd
addb
out
sti
xchg
icebp
adc
out
int
rcl
call
in
loop
cld
roll
out
loopne
orb
lret
iret
int
sti
cmp
cmp
aas
imul
in
loopne
out
jmp
xchg
xchg
ljmp
cmp
cmp
loopne
clc
test
std
testb
iret
leave
xchg
repnz
cli
xor
cs
enter
neg
repz
fcmovu
jmp
fiaddl
shr
les
clc
icebp
lock
xlat
fucom
cmp
icebp
loope
xor
roll
shl
xchg
jmp
cmp
cmp
rcl
in
fxch
cli
int
lret
test
shl
aaa
aaa
in
aad
out
stc
cmp
repnz
rolb
fmuls
cmc
aad
loop
clc
cs
cmp
cmp
cmc
cmp
xlat
loopne
fadds
lret
divl
xor
repnz
into
cmp
int
les
loope
fiadds
fimuls
out
xor
cmc
out
lock
fdivr
fsub
jmp
mov
aam
mov
sbb
mov
sub
imul
int
lock
idivl
aaa
cmp
fsubp
ret
loopne
loop
xchg
lock
xor
rol
std
fld1
stc
std
aas
loope
cmp
dec
xchg
mov
das
int
aaa
out
aad
icebp
fcmove
shl
call
repnz
cld
jmp
xchg
loope
repnz
loopne
jmp
jmp
sti
int3
cld
in
sti
hlt
in
aam
cmp
cmp
enter
out
loopne
repz
ret
in
sarb
aam
aam
loopne
sbb
adc
fstp
test
sar
xor
aad
das
in
int
clc
aam
div
imul
adc
leave
xchg
mov
stc
fisttpl
ror
xor
lret
fdivr
sbb
ret
ret
xlat
not
ret
cli
clc
xchg
in
and
xor
int
cli
iret
xor
cmpb
aam
test
icebp
shl
out
xchg
out
aas
in
out
xor
out
sarb
xor
jecxz
ds
jecxz
out
ret
out
fmulp
lret
loope
jmp
lret
out
ror
lret
in
clc
rcl
clc
rcl
rcl
in
frndint
rcr
ljmp
iret
in
imul
repnz
out
loopne
cmp
ret
test
call
cli
fmull
ret
repz
xor
fsub
loop
stc
testl
into
roll
idivb
std
fnstcw
cmp
fnstsw
not
fadd
loop
mov
and
int3
in
test
jmp
sarl
out
aad
out
sti
xchg
loopne
cli
loop
repz
out
int
in
loope
xlat
stc
xor
mul
flds
jmp
lock
xor
into
fcmovne
cs
lock
lret
cmp
fcmovnb
xlat
cmc
lret
out
add
repz
loope
out
loop
xor
int
jmp
cmpl
cli
mov
test
lret
incl
fcmovnbe
hlt
std
xlat
icebp
iret
clc
ret
cli
shl
enter
xchg
enter
in
int
jmp
cmc
aaa
clc
jmp
aaa
sti
out
out
jecxz
std
fstpt
test
jmp
clc
mov
fdivr
shl
test
das
lret
iret
das
les
shl
cmp
in
repz
jmp
mov
xchg
orb
ss
inc
test
inc
hlt
jmp
ds
aad
aad
aad
movb
lds
jle
jge
jl
cmc
fucomip
out
cmp
std
cmp
aas
std
fcmove
xchg
loopne
repnz
fidivs
repz
test
enter
shl
rcl
repnz
ret
ljmp
addl
fidivrs
icebp
idiv
test
in
ret
out
lret
mov
fcomip
in
repnz
cli
sub
shlb
lret
out
cmp
adc
int
xchg
xchg
jmp
lret
ljmp
enter
rol
std
and
and
loop
in
lret
inc
hlt
xor
jmp
cmc
test
cmp
ds
into
fdivp
cld
cli
add
int
int
out
fsub
in
icebp
into
iret
aad
lock
shr
cmp
repz
repnz
roll
icebp
std
call
imull
imul
cmc
out
xor
aas
into
aas
loop
cld
fsub
fnsetpm(287
cld
std
jmp
xor
icebp
hlt
shr
idivb
cmp
into
in
add
call
jmp
loopne
repz
repz
shlb
shl
fsqrt
adc
xchg
rol
clc
test
mov
mov
ret
loope
leave
jmp
aad
in
cmp
xor
xor
mov
jecxz
out
loop
int
cs
aam
cmpb
loop
repnz
fmul
in
ljmp
clc
xor
call
clc
adc
out
loope
flds
out
cs
sarl
in
stc
hlt
fstpt
out
repnz
rcr
fsub
jmp
xchg
out
lock
iret
cmc
out
fdivr
xor
ss
les
neg
xor
loope
test
stc
lock
clc
cmc
out
fxch
stc
jecxz
neg
in
loopne
rcr
mov
call
ret
jmp
out
out
fdivrp
cmp
ret
mov
sti
mov
ljmp
cmp
xor
sbb
testl
out
fsub
mov
loopne
lret
loop
out
jmp
into
repnz
cmc
std
out
ds
nop
cli
xchg
mov
fcomip
ret
neg
out
cmp
lret
aam
clc
jmp
jecxz
imul
mov
loopne
out
neg
rcl
aam
sarl
aad
ret
fnstcw
xchg
addl
mov
lret
xlat
rcl
out
into
aaa
icebp
xlat
loopne
shl
rol
repnz
sti
fldl
xor
lret
cmp
fmulp
rcr
fstpt
icebp
and
int3
mov
fdivrp
rcll
jecxz
std
lret
sti
rcr
sti
or
hlt
xchg
test
mov
clc
mov
xchg
jmp
fdivp
ds
aam
xor
div
lock
int
rcr
fdivrs
cld
out
jmp
call
out
cld
fcomip
ror
loope
into
loop
xor
call
out
test
hlt
jmp
jmp
fstl
sarl
std
shr
cmp
filds
repnz
jmp
clc
out
cli
loop
in
repz
leave
xor
aaa
cmp
out
and
jmp
lea
sub
lret
ret
repz
idiv
in
cmc
int3
into
in
fcmove
xlat
lock
aam
loopne
test
jmp
rol
leave
std
aad
out
call
cld
fidivrs
orb
jecxz
leave
out
loopne
out
out
stc
into
div
into
sarl
lret
ljmp
rol
ret
stc
mov
lret
jecxz
aad
cmc
clc
icebp
in
lock
into
addl
fucomi
lock
lret
xchg
loope
repnz
filds
out
rolb
clc
les
mov
loop
imul
shr
cli
int
stc
cmp
sti
mov
mov
mov
in
int3
sub
lock
rol
cmp
loopne
shlb
cmp
in
fcomip
in
roll
das
xor
shr
xlat
jmp
loope
test
loopne
ret
add
lea
xor
hlt
aas
repnz
repz
repnz
cmp
fiaddl
ret
test
idivb
ret
aad
aam
enter
xor
add
cli
jmp
fxch
xchg
fstl
out
div
out
xlat
rol
loopne
icebp
std
jecxz
fstp
out
in
repz
repnz
les
out
aaa
in
shr
std
loop
faddl
stc
mov
fcmovne
out
xchg
mov
sti
in
icebp
xor
jmp
rcl
aad
aad
rolb
push
lods
mov
jge
jl
fstpt
cmp
jmp
shl
ret
in
shl
orb
mov
mov
lock
fcmovne
cmp
cmc
aas
xor
iret
jmp
jmp
mov
jmp
out
xchg
mov
xor
cs
int
stc
aaa
xlat
testl
std
xchg
clc
jecxz
loopne
xchg
mov
ljmp
neg
shl
fldlg2
fsubrp
out
ret
test
in
mov
divl
sarb
int
sarl
idivb
ret
loopne
loope
sbb
ljmp
cmp
or
fldl
cmp
pop
mov
icebp
lret
jmp
leave
call
in
aad
call
loopne
loop
lret
loope
shl
in
loop
div
lret
xor
iret
int3
out
hlt
repnz
lock
out
mov
ret
rorb
shr
aam
enter
icebp
jmp
fnclex
ljmp
fdivr
mov
imul
cli
ret
fsub
hlt
fidivs
shrl
out
fst
repnz
in
aam
lock
fildl
mov
enter
cmp
aam
fcomp
inc
cmc
fst
xlat
addl
fsub
sub
repz
int3
out
aaa
stc
cmp
hlt
cmp
fucomip
cmp
loop
hlt
mov
xchg
in
cld
loope
call
enter
repz
lds
xor
stc
repnz
fmuls
mov
int3
in
aad
cli
sar
adc
rcr
xchg
iret
in
lock
xchg
sub
div
rcl
stc
lret
cmp
fimull
test
loopne
int
shl
shlb
aam
cmc
idiv
push
fcompp
cmc
stc
loop
out
mov
fdivr
leave
clc
out
in
shr
das
ret
cmc
cmc
fnstsw
cli
fcmovb
icebp
sar
jmp
fsubp
stc
out
mov
xchg
repnz
in
xor
int
cmp
fucomp
rcr
out
shr
jmp
mov
iret
in
iret
cli
lret
in
rcl
hlt
ret
xor
cld
roll
jmp
in
xor
xlat
std
cmp
iret
in
icebp
iret
aam
xlat
aad
xchg
fcomp
lret
lock
in
faddp
rcr
in
shr
shl
ror
cmc
aam
out
imul
in
lret
stc
fldl
int
int3
in
xor
sti
lock
jmp
ret
out
rcr
test
out
mov
test
not
das
lret
ret
icebp
int3
cmp
cli
rol
icebp
xlat
rol
cmp
into
lret
int
in
jecxz
cs
int3
xor
sti
repnz
fcmovbe
fdecstp
faddl
cld
in
in
shrl
shl
enter
fxch
cmp
in
int3
cmp
xchg
lret
jmp
mov
in
mov
leave
fadd
into
repz
loope
lock
shl
test
cli
orl
lret
enter
ret
fildl
sar
aam
jmp
lret
sub
jecxz
xor
fiadds
adc
fsincos
fsqrt
xchg
sar
out
out
mov
into
in
cmc
ret
xor
lock
cmp
cmp
fld
fdivp
fmul
testl
jmp
enter
shl
xlat
cmp
faddl
ror
xchg
std
xchg
loope
xor
ror
jmp
rcr
clc
lock
loope
fst
std
mov
leave
xlat
inc
fucom
call
xor
clc
xor
out
cmpb
and
fsubr
loope
fsub
jmp
icebp
cmp
iret
fsubr
div
rolb
sbb
cmp
in
lret
repz
leave
cmc
aam
out
jecxz
hlt
fmul
iret
adc
std
call
call
cld
out
imul
sub
in
aad
fdiv
ljmp
rcl
fisttps
lret
xchg
roll
rcr
aaa
sar
clc
fcmovb
clc
in
out
cmp
mov
icebp
mov
in
lock
hlt
cs
lret
into
std
sarb
sar
out
cmp
movl
sub
aam
fcomip
aaa
ljmp
lock
into
xchg
fisttps
loop
xlat
aam
repnz
lret
aam
ret
add
loope
enter
repnz
xorl
aaa
xor
sub
out
ljmp
rcl
ds
std
clc
out
ret
ljmp
loop
lret
add
mov
lea
mov
mov
xor
add
mov
lea
jmp
into
aad
int3
fcmovnu
aad
add
sub
ret
xor
jl
ret
cmp
aad
out
fidivrs
jecxz
jecxz
loopne
test
sti
rcr
in
rcll
repz
das
xor
fstpt
cmp
iret
loope
shl
xchg
ret
mov
into
incb
call
xor
icebp
rcl
int3
out
leave
hlt
test
xchg
fcmove
mov
mul
fadd
repnz
ss
cmp
cmp
loopne
loop
cmp
fadd
lea
repnz
jecxz
shll
xlat
xor
lock
jmp
faddp
xchg
xchg
enter
call
loopne
fdivs
leave
cmp
lret
out
loope
sub
aam
lds
not
fimull
leave
fcmovbe
loope
das
in
xor
ljmp
cli
repnz
cmp
hlt
test
testb
fisttpll
aam
fcom
iret
out
cmp
fisttpll
testb
loop
cld
xor
shl
cs
fstp
cmc
cmp
xchg
fucom
addb
repz
enter
sub
iret
xor
shl
int
cmp
loopne
ds
loope
sti
mov
aaa
sub
lret
out
leave
cmp
or
jecxz
repz
ljmp
lret
out
aam
iret
aas
vpand
mov
fprem
mov
mov
iret
xchg
out
xor
aas
enter
adc
test
fcomp
out
nop
ror
rcl
jecxz
cmp
hlt
xor
aaa
call
filds
mov
test
loopne
fdivrs
jmp
xlat
xor
cld
repz
ljmp
loope
in
stc
loope
std
xchg
in
fisttpll
out
out
ss
repnz
in
std
fadd
test
lret
xchg
roll
enter
in
lock
stc
enter
in
fidivrs
flds
in
lock
test
xchg
shll
icebp
cmp
iret
clc
out
iret
int
rcr
iret
clc
repz
adc
loop
lret
out
jmp
xor
idiv
fyl2x
enter
cmp
stc
xchg
int
out
mov
test
xchg
into
lds
lock
in
in
into
fistpll
cmp
xchg
rolb
mov
xor
ret
fdivl
int
incl
ret
std
shl
mov
test
out
in
decl
int3
int
lret
jmp
loop
xor
loope
mov
adc
loop
or
jecxz
aad
clc
in
iret
repnz
icebp
addl
sar
lret
jecxz
xchg
test
icebp
stc
in
fcmovu
aad
cmp
test
add
cld
loop
test
shl
in
inc
in
out
out
into
clc
aad
out
rol
fneni(8087
repz
rol
loope
vfrczpd
in
lret
hlt
out
cmp
out
sti
sar
inc
in
fsub
hlt
ljmp
test
out
hlt
cmp
leave
xor
cli
call
cmpb
xlat
hlt
cmp
testb
call
in
repz
ljmp
fnstsw
xchg
stc
fdiv
mov
faddl
in
loop
jmp
mul
int3
out
int3
cmc
ror
loop
ss
in
in
movb
in
jecxz
loop
cmp
ljmp
in
aas
rol
cld
loop
jmp
icebp
mov
hlt
ret
xor
clc
clc
std
icebp
jmp
cld
out
cli
mov
aad
int3
rolb
repnz
ret
clc
div
out
cmp
cmc
adc
hlt
std
neg
xchg
int3
sar
nop
fcomip
xor
xlat
int3
in
jmp
fnop
fcomi
loope
out
orb
in
loop
icebp
jmp
imul
fdivrp
int
lret
cmp
icebp
cmp
ret
cld
int3
loope
cld
jmp
xchg
xor
iret
repz
fcmovnbe
aam
repnz
adc
mov
jmp
ffree
ret
fsub
out
mov
xor
aad
shlb
rcl
cmp
cld
ss
shl
hlt
loope
rolb
mov
nop
mov
rcl
cmp
cmp
ds
vpmaddwd
loope
into
and
ret
into
jecxz
xor
cmp
test
iret
aas
cmp
out
repnz
rcr
test
cld
call
iret
ret
in
lret
fcomp
ss
cld
cmp
xchg
xlat
mov
xchg
aad
mul
out
aad
call
stc
lock
cld
cmp
out
in
call
xor
xor
jmp
ror
ror
rcr
frstor
pop
sub
lret
sarb
jl
add
xor
ss
std
imul
icebp
cmp
cli
stc
enter
mov
repnz
jmp
jmp
cmp
add
cli
in
sar
repnz
out
out
lret
in
mov
mov
out
fxam
ret
enter
ljmp
loope
sti
cld
test
int
and
lds
ss
jmp
cmp
cli
cmc
sti
fcomip
sar
mov
repz
lret
sti
icebp
aas
sti
into
fld
out
test
loop
call
out
out
out
aam
cmp
iret
ds
aam
fdivr
out
filds
adc
xor
lret
icebp
aaa
out
cmp
aad
loop
rcl
fistpll
loope
enter
adc
int
lret
lock
divl
loopne
ret
sti
cli
leave
ljmp
mov
rcl
icebp
enter
in
shl
repz
in
xor
mov
call
lret
imul
leave
fcomi
fsubrs
aaa
loopne
fdiv
flds
out
cmp
or
in
ror
sub
aaa
xor
ljmp
std
std
xlat
test
decl
nop
lret
shr
aaa
rcl
out
cmp
repz
idivl
cmp
inc
out
aad
test
fmulp
aaa
vpsubsw
cmp
xor
cmp
xchg
fidivrl
cli
fisttps
loopne
repz
rol
out
lret
cld
cmp
xlat
ds
loopne
aam
jmp
out
lret
std
cld
mov
incb
jmp
cli
cld
cmp
rolb
xlat
mov
fmuls
shll
aam
aas
out
call
fsub
out
hlt
and
fadd
testb
lret
shl
cmp
stc
stc
in
in
out
ljmp
adc
in
fcomp
lock
jmp
clc
shlb
fcomi
in
iret
inc
fidivrs
testl
hlt
shr
sar
ljmp
cmp
cmp
mov
clc
in
fdiv
test
loope
jmp
xor
cmp
fcmovnbe
sti
cli
lock
ret
addl
mov
mov
das
in
ljmp
iret
stc
in
fdiv
clc
sti
cmpl
mov
icebp
fildl
cs
sub
int3
imul
hlt
cld
bnd
cmp
enter
fiadds
jmp
in
xor
xor
neg
cmp
int3
cmp
addl
int3
mov
cli
rolb
aam
jmp
sar
idiv
or
mov
lret
mov
xchg
xchg
icebp
enter
sti
lret
fdivrs
in
jmp
sti
cmp
rolb
stc
orb
repnz
cs
in
out
xor
ljmp
cmp
xor
ljmp
fiadds
aam
into
lret
rcl
iret
lret
cli
mul
addl
mov
fstl
xlat
cmp
aad
call
rcl
aad
loopne
mov
xlat
xchg
int
xchg
call
int
fsubr
aad
clc
fst
rol
test
stc
sub
in
loopne
xor
xor
xor
cmc
icebp
jmp
and
ret
fimull
sti
lock
shl
ret
aaa
imul
jmp
cmc
rcr
cmp
cmp
leave
out
fisttpl
loop
jecxz
repz
lret
int3
cld
out
rcl
rolb
enter
xchg
in
stc
stc
clc
cli
in
cli
sti
cmp
ljmp
rcl
ret
test
call
leave
enter
ror
fdivr
cmp
out
fnstsw
jecxz
shl
repnz
hlt
cmp
fdivrp
loop
and
int
in
lret
int
hlt
call
jmp
cmp
mov
test
rcl
aaa
in
iret
cmp
fdivr
cmp
jmp
mov
int3
icebp
xchg
mov
in
xor
iret
into
out
fiadds
repnz
lret
mov
cld
jmp
in
shl
xor
push
int3
call
out
ret
cmp
stc
loopne
stc
cld
mov
fdivrp
loope
cmp
iret
ror
stc
shl
sti
cli
lret
out
loopne
fistpll
repz
ret
test
mov
fstp
int
cmp
iret
xor
out
neg
clc
aaa
leave
addb
les
repnz
mov
sti
out
icebp
jmp
ret
push
jmp
lret
ds
lret
rol
loop
lret
cmpsl
inc
sarl
jl
add
xor
fnstsw
fstpt
fimull
in
xchg
xor
fcmovu
int
fnstsw
ljmp
fcomi
enter
fildl
lret
repnz
clc
iret
out
int
fld
aad
stc
sti
int
sti
addb
out
iret
aad
cld
cmc
aam
lret
ljmp
hlt
test
ljmp
filds
neg
lret
loop
fiadds
in
out
out
sbb
xor
out
div
call
adc
ret
hlt
sbb
in
fsubr
ret
fsubr
call
lds
std
in
xlat
icebp
test
test
lea
in
int3
div
test
cmp
fnsave
cli
cmc
roll
jmp
test
xor
repnz
xor
fsubrp
lret
cmp
fidivrl
xlat
lds
mov
in
loope
call
loope
cmp
repz
fadd
jecxz
aam
mov
xor
ror
cli
cmp
fstpt
idiv
xlat
aam
loopne
rolb
sti
int
xchg
xlat
xor
in
int3
xor
cmp
cmpl
leave
in
jecxz
in
stc
int3
loope
xchg
rol
in
out
cmp
aam
cmp
in
fiadds
mov
loop
sti
lret
xchg
cs
iret
cmp
repnz
jmp
xlat
shl
aad
hlt
clc
cli
loope
test
out
xchg
hlt
in
stc
sti
test
ss
mul
xlat
mov
fdiv
cli
cmp
mov
leave
icebp
mov
aam
ss
ror
std
xor
fcmovbe
ss
in
test
test
cmp
jmp
test
or
xor
xlat
shl
imul
idivb
aam
test
sarl
ds
in
neg
clc
fmuls
lret
loop
ss
int3
cmp
test
sbb
test
out
or
in
repz
lret
iret
xlat
roll
xchg
mov
std
fsubrp
fldl
cmp
cmp
sti
cmpb
cld
cmp
repnz
enter
out
into
mov
shl
leave
ret
xor
hlt
aam
enter
loopne
cmp
cmp
loope
xlat
test
lock
mov
iret
rcr
hlt
in
sti
into
fcmovnu
ljmp
rcl
repnz
xlat
fisttpll
jmp
clc
leave
into
xor
int3
out
adc
xchg
cld
jmp
xlat
fmul
mov
fstp
hlt
shr
iret
int3
fcmovnu
sub
hlt
stc
lock
or
xor
shl
hlt
mov
mov
int
repz
in
cli
cmp
lret
call
aad
loope
xchg
call
mov
fmulp
xor
test
cli
out
adc
repz
aas
fst
stc
fldlg2
lret
stc
fcmovnu
in
jecxz
lret
in
cmp
cmp
loope
ds
mov
rol
imull
shl
jmp
mul
cmp
aad
clc
cli
loop
fucom
ret
xchg
fsubrp
xor
ret
leave
shl
loope
adc
cli
fstpt
mov
adc
leave
xchg
in
jecxz
cld
xchg
into
cmp
out
ss
in
rcr
ret
ffree
xor
shr
out
xchg
xor
call
repnz
not
out
fiaddl
ret
xchg
and
mov
out
xor
loope
repnz
clc
rol
rolb
stc
cld
lret
into
fucomip
repz
xor
repnz
ljmp
ljmp
call
sub
ret
icebp
xor
cmp
clc
out
cmp
ret
fmull
iret
lock
out
fadd
xor
ss
leave
enter
loope
out
in
fdivrp
jmp
cmc
jmp
loopne
iret
in
sarb
shl
leave
xor
aas
loope
roll
out
ljmp
aad
out
test
into
leave
fdivr
lret
not
fucomip
ds
test
out
int
orl
xor
idivb
shl
jmp
loopne
lock
incb
call
xor
fxch
cmp
jecxz,pt
std
loopne
and
mov
out
in
in
aam
clc
fld
xlat
iret
sti
lock
fcomip
icebp
xchg
fstp
lret
test
fldln2
jecxz
mov
loop
js
inc
add
sub
jmp
rcl
mov
neg
repnz
jl
add
ds
jge
jl
leave
fcmovnbe
xlat
jmp
fdiv
into
jecxz
shl
sbb
jecxz
fmuls
aam
lds
cmp
out
hlt
cmp
out
cld
jecxz
ret
aam
icebp
adc
neg
std
jecxz
and
into
jmp
cmp
fcom
in
rcl
cmp
icebp
repz
jecxz
fucom
add
lea
xchg
mov
out
lock
out
leave
rcr
int3
loopne
cmpl
jmp
test
repnz
out
jmp
fcomi
fchs
rol
icebp
cld
fdiv
xlat
rolb
loope
jmp
jmp
aad
hlt
int3
hlt
in
aas
repnz
fnstcw
aam
in
mov
leave
clc
in
mov
hlt
into
ror
xor
shl
out
fdivp
ds
idiv
idiv
dec
std
testb
fmull
stc
fld
fcmovnu
enter
test
shr
jmp
les
icebp
repnz
cs
into
aam
cmp
call
cmp
fdiv
ret
cli
enter
jmp
into
leave
lret
cli
xchg
rcl
shl
jmp
leave
loope
fdivr
repz
mov
rcr
test
icebp
fildl
out
lock
jmp
shr
icebp
iret
stc
fdivrs
jecxz
loope
out
loop
out
shl
xor
out
repnz
std
ljmp
in
aad
sar
and
cld
into
xchg
xchg
shlb
in
ror
std
fidivrs
hlt
iret
out
aam
in
fcmovnb
mov
out
shl
ss
lock
cmp
jmp
fildl
enter
in
std
or
fprem1
xor
shl
neg
div
fstp
mul
fucomi
icebp
leave
cmp
in
jmp
in
out
mov
mov
shr
cs
repnz
sarb
into
fdivr
out
testl
loope
out
not
repnz
ss
out
in
dec
std
iret
faddl
jecxz
fsts
lret
sub
out
xor
out
ror
out
cmp
xor
aam
sbb
test
sub
out
fldl2e
xlat
out
jecxz
out
sti
cld
rcl
aad
fsubrp
leave
xchg
loop
fsubr
aad
jecxz
int3
aaa
cmp
out
fdivr
cli
into
loopne
into
cli
div
cli
cli
sbb
mov
ret
int
ror
shr
loope
hlt
xorb
cmp
stc
aam
mov
sti
mov
std
repz
cmc
out
xor
cmp
fidivl
cli
ret
ret
sti
lock
les
fcmovne
loopne
mov
call
ss
clc
xor
shll
jecxz
sbb
repz
ljmp
icebp
lret
out
into
icebp
shl
hlt
divl
lret
cmp
hlt
addl
fucomip
leave
std
ror
xchg
ror
in
int3
int
neg
xor
int3
sarb
rol
aas
std
shl
rolb
xchg
shl
aaa
into
ss
xor
cmp
cli
rcr
int3
cli
repnz
aad
flds
decl
fcom
out
out
ss
fsubp
cli
mul
ror
test
std
xchg
ret
aaa
lock
cmp
cmp
into
cli
loopne
repz
loope
jmp
xchg
das
jecxz
aaa
cmp
cmp
sub
loopne
loopne
and
xchg
jmp
ljmp
loope
ds
hlt
iret
clc
shr
add
mov
call
icebp
in
loop
shl
into
call
aad
xor
incb
nop
mov
cs
icebp
xlat
fxch
fcmovne
fstp
fdiv
push
loop
faddl
in
jmp
out
loopne
xor
fnsetpm(287
in
into
idiv
test
mov
out
shr
fldl
rcl
clc
xlat
lock
shl
loope
aam
stc
addl
xlat
test
aad
out
xor
out
into
lock
jecxz
call
xchg
icebp
call
ror
icebp
cmc
ret
das
cs
aaa
out
cmp
loope
ss
shl
xchg
leave
or
fists
ret
fcom
std
sar
repz
int3
in
in
test
aam
lret
in
fisttpll
stc
into
xor
shl
ss
sarb
in
ret
test
out
xchg
ljmp
lock
ss
ljmp
sar
cli
jmp
cld
in
mov
iret
repz
in
ret
std
test
cld
and
fcmovbe
xchg
sti
sti
ds
in
loope
test
loop
aad
xor
scas
test
add
xchg
add
jmp
int
mov
cmp
xchg
push
or
aas
leave
jle
jge
jl
fxtract
out
ljmp
iret
sti
in
out
ret
adc
leave
mov
enter
out
xor
jmp
std
bnd
rcl
fadds
loopne
ljmp
shl
shl
out
in
fucomi
cmp
repz
sti
test
rcl
test
into
xchg
mov
xchg
into
int
out
test
out
clc
clc
lret
rcr
sar
rol
loope
sti
enter
in
in
loopne
loopne
lret
std
not
aad
fucom
cmp
ds
mov
ljmp
fcomip
shrb
jecxz
lret
hlt
cli
push
into
cmp
test
filds
cli
shl
ret
shl
lret
out
rol
cmp
sti
rorb
xchg
xchg
sub
ds
repz
lret
iret
into
aas
clc
shr
test
fcmovb
incl
in
addl
lret
jmp
sar
fidivrl
icebp
ds
ffreep
loop
fsub
call
xor
fcomp
fcmovu
ljmp
or
rorl
mov
nop
xchg
in
das
into
in
std
lock
fcmovnbe
ror
fdiv
vpaddw
test
mov
mov
test
mov
jmp
aad
int3
xlat
enter
cmc
aas
inc
sti
sbb
cmc
fldl
mov
nop
or
shll
into
loop
das
icebp
sarl
in
ds
cmp
fcmovnu
lret
hlt
xlat
loop
nop
fcmovu
std
jmp
icebp
repnz
ror
iret
repnz
call
mul
cld
test
out
mov
int3
sti
jmp
into
xor
sti
fcmovnu
std
xor
fmul
shl
sbb
or
std
stc
cld
and
loopne
hlt
shl
lret
out
shl
xor
rol
repnz
lds
lds
repnz
lock
leave
cmp
cmp
repz
aas
cmp
cli
in
ljmp
hlt
les
fdivs
xor
in
cmp
in
fnstcw
out
xchg
or
nop
push
icebp
out
xchg
in
leave
ror
iret
clc
cmp
fcmovnb
icebp
out
repnz
sti
cmp
cld
icebp
xor
loope
cld
enter
lret
fcmovne
cmp
cmp
xlat
neg
lock
sub
fiadds
shl
jmp
cmp
rol
int
xlat
cmp
out
les
fadd
ljmp
fucomi
iret
ss
rcl
mul
adc
and
int3
fsubr
sti
ljmp
fxtract
cmc
cmp
lret
cmp
repz
stc
fyl2xp1
std
repz
cmc
hlt
in
mov
lret
test
xchg
ret
loop
out
hlt
xlat
repnz
shl
aam
ret
fucomp
out
fsub
inc
vpaddw
out
loopne
test
int
lock
out
lret
repnz
icebp
lock
addl
leave
adcl
out
lret
aaa
fdiv
lock
jmp
in
in
cmp
std
testb
shr
jecxz
xor
ror
xor
lock
out
fadd
test
jecxz
orl
ror
loope
cs
in
xor
loope
cmp
ret
cmp
out
mov
sti
fisttps
int3
in
iret
sti
fdivrs
fcmovbe
sti
test
rol
fsubrp
ljmp
call
aaa
out
out
sar
fcmovbe
xor
mov
cld
fildl
nop
test
les
jmp
in
ss
stc
repnz
cmc
aam
cmpb
in
fcoml
ret
ljmp
xor
jmp
sbb
sbb
aad
aam
loope
xchg
mov
xchg
jmp
jmp
sar
out
ljmp
ret
repnz
cmp
fstp
sti
call
aad
ret
out
shlb
xor
out
rcl
ljmp
faddl
call
xchg
in
enter
fmul
das
stc
aaa
cmp
clc
cmc
xor
loop
rcr
testl
fprem
sti
repz
repz
jmp
iret
loope
add
sti
repz
ds
call
out
shl
call
xor
leave
aam
aad
sar
cld
movb
lret
jmp
xor
sar
in
ret
jmp
aad
clc
jmp
sti
int
out
fdiv
xor
sar
cli
hlt
repz
into
cmp
clc
out
sti
in
enter
xchg
loope
jecxz
jecxz
xor
ss
fdecstp
lret
fdiv
xchg
mov
out
enter
rolb
add
test
add
mov
xor
add
mov
mov
mov
jmp
rol
leave
rcr
fstp
lds
mov
cwtl
cmp
jle
jge
jl
enter
xor
in
aam
rcr
into
mul
aad
stc
neg
fsub
xbegin
lea
ss
aam
cld
aad
xlat
ds
aam
jmp
clc
mov
xchg
xor
repz
cmp
lock
cmc
repz
cli
ljmp
jmp
loop
jmp
out
jecxz
fsubp
sar
mov
fimuls
call
xor
call
cmp
lret
xor
cli
out
repnz
mov
xchg
sub
xchg
xor
jecxz
stc
ss
not
iret
rol
ret
lea
into
mov
call
loopne
stc
in
cmp
cmp
repnz
cmc
loop
jmp
mov
fimull
ljmp
jmp
in
jmp
shl
neg
cmp
mov
mov
cmc
ret
in
fcom
out
jmp
xlat
incl
aam
loop
hlt
inc
hlt
cs
jmp
fdiv
jmp
cmp
cmp
cmp
jecxz
mov
xchg
jecxz
xchg
into
hlt
in
ret
div
cmp
not
not
ret
out
rcl
aad
fcmovbe
mov
ljmp
das
cmp
stc
icebp
ds
cmc
cmp
fdivrs
cld
aam
add
mov
xor
call
std
sar
int
ror
jecxz
cmp
rcr
ljmp
mov
xor
xor
lret
out
repnz
cmp
rcl
loop
xor
neg
enter
mov
xor
out
into
xor
fcom
rcr
jecxz
addl
sar
enter
iret
in
fucomip
xor
ror
out
fucomp
clc
icebp
fdivr
clc
sarl
fmul
test
xchg
sar
xchg
decb
stc
in
lret
cmp
aad
lock
mul
adcb
aad
ss
not
xor
fmul
leave
sar
cld
cmc
cmpb
leave
cmp
cmp
fcmovu
int
rcl
cmc
in
in
lock
fabs
fsubrp
cmp
cmp
fimuls
adcb
cs
into
in
cmc
lock
sar
into
sti
xlat
lock
ds
ljmp
mov
fisubrs
div
lret
out
repz
cmc
cld
loope
into
xor
jmp
fcomip
fnstsw
lret
nop
iret
sbb
call
lock
cmp
bnd
shl
in
in
cmc
ljmp
iret
xchg
loopne
int
call
xlat
hlt
repz
in
jmp
aad
shlb
fdiv
aad
jecxz
call
icebp
aas
xchg
addl
cmc
repnz
lret
clc
repz
repnz
aas
jecxz
std
jmp
enter
xchg
lret
ljmp
jmp
xor
ljmp
clc
rol
cmc
mov
decl
iret
into
xor
int3
out
jecxz
iret
xlat
aas
leave
sar
sarb
cmc
loop
addb
nop
cmc
xchg
clc
xor
repz
loope
and
fucomp
jmp
fmul
jmp
rcr
out
test
in
aad
aam
test
iret
jecxz
cmp
sub
int
sar
mov
iret
xor
xor
sar
fxch
or
roll
cli
lret
shr
in
xchg
sarb
lret
sar
into
clc
fdivr
ret
cmp
fcmovnu
xor
fneni(8087
jmp
fcomip
enter
cld
into
call
inc
xor
in
aam
loopne
in
clc
fsubrp
mov
jmp
ljmp
into
shl
cld
out
and
std
ljmp
xchg
repz
out
into
xor
loop
fsubr
call
cmp
out
in
incb
fstl
aam
iret
hlt
ret
out
lret
fmul
shr
xlat
cmp
fadd
movl
xchg
call
shr
cli
out
cld
icebp
xor
fdivp
sar
testb
xchg
orb
rcr
cli
aad
stc
iret
cmc
rol
fxtract
out
sar
loop
fcomip
mov
fucomip
aaa
int3
cmp
leave
fld
cmp
flds
fxch
xlat
jmp
call
aad
out
loop
shl
xlat
into
jmp
out
cmc
rolb
loope
std
test
in
mov
rol
ret
aaa
fdivr
aam
jmp
cld
sti
cmp
stc
lret
testb
mov
mov
mov
push
pop
sub
add
jmp
ds
rcr
fst
xlat
xchg
icebp
mov
jge
cmpsl
cmp
add
xor
ror
hlt
icebp
cmp
rcl
cmp
fcmovnb
aam
testl
cld
addb
out
stc
cmp
iret
cmc
xor
neg
fnstcw
call
ljmp
fsubr
lret
rol
int
xlat
cmp
shr
cmc
cmp
mov
fisttps
icebp
xchg
icebp
nop
out
out
sti
shll
lret
rcl
lret
clc
out
fcmovb
xlat
test
int3
fisttps
sub
hlt
repz
cmc
fmul
aas
adc
test
ljmp
xchg
dec
jmp
cmc
in
iret
jmp
aam
cmc
faddl
mov
rolb
vpsubd
leave
shll
fcmovu
iret
fistpll
ret
sbb
std
mov
loope
mov
ror
div
cmp
enter
hlt
in
in
xor
roll
int3
faddp
in
call
aas
rcl
sarb
aas
icebp
in
in
sbb
shl
int
xchg
not
das
ror
sti
imul
stc
cmp
icebp
rcl
aam
inc
rolb
out
mov
out
divl
lret
iret
in
cld
fstpt
icebp
add
out
iret
out
jmp
loope
cs
in
sti
shl
aam
repnz
cmp
call
loopne
fdivrp
cld
xchg
shl
xor
cmp
int3
stc
int3
jmp
sar
cmp
and
in
in
out
enter
out
leave
lret
stc
in
enter
lret
fdivrp
int
fcomi
rcr
fildl
mov
jecxz
ljmp
enter
loope
adc
cli
ss
mov
test
int
and
aad
ss
lret
lock
cmp
fcomip
lock
ljmp
sti
icebp
loop
ljmp
ss
lock
aad
cld
cmp
mov
in
cli
faddp
out
xchg
into
repz
ret
xor
lret
ljmp
jecxz
out
neg
rcl
loop
mov
fmul
int3
mov
call
clc
out
aad
out
cmp
jmp
xor
test
and
enter
int
out
loop
xor
loop
cmc
not
cli
clc
cmc
sarl
cli
hlt
jmp
int3
add
cs
fst
std
fnstsw
std
clc
lock
cli
aam
cld
aad
incb
cmc
xchg
xchg
ret
xor
jecxz
in
xor
loope
hlt
ror
ror
rcl
call
ret
fmulp
lret
jmp
jecxz
ss
cmp
clc
into
fsin
idiv
repnz
jmp
and
mov
out
jmp
shll
in
xor
mul
fsubr
xor
div
filds
shl
cld
out
divl
shr
cli
idiv
std
aaa
sar
repnz
sbb
ljmp
and
ss
out
clc
int3
enter
repnz
add
cmc
cmp
loope
ror
loop
hlt
das
out
clc
xor
fcmove
ss
shl
cmp
fmul
xlat
loopne
sar
jmp
ds
ss
cmp
hlt
shl
filds
in
fcmovu
stc
fdecstp
ret
call
out
aaa
cli
cmp
shl
loope
lock
stc
xchg
mov
in
mov
fiadds
fsub
enter
cmp
aas
aad
xor
filds
int3
out
shr
shl
sub
ss
iret
icebp
repz
roll
fmul
mov
jecxz
mov
repz
rol
ret
enter
aad
int
in
test
xlat
fcmovu
loop
fcmove
repnz
icebp
in
enter
divb
shl
shr
cli
stc
sti
cmc
aad
mov
dec
stc
icebp
loopne
int
ror
lret
fdivs
fildl
int
idiv
enter
call
mov
out
xor
in
into
in
xor
iret
rcl
out
ret
ds
loopne
xchg
cmp
cli
in
int
enter
div
cmc
clc
fidivrs
aad
cmp
ffree
out
hlt
xchg
ds
lret
cli
fucomp
orl
enter
rcl
rcr
into
fst
aas
call
mov
fxch
ljmp
xor
leave
aad
ss
out
shl
icebp
fiaddl
mov
fprem
in
push
xchg
shlb
sti
cld
fnstcw
fcmovnu
ror
add
cld
jmp
jmp
cmp
adc
aaa
ret
icebp
out
xor
aam
xchg
in
ljmp
mov
mov
xor
lea
cmp
jne
jmp
int
ds
int
lock
adc
jle
jge
jl
adcb
xor
fsubr
lock
roll
aam
out
iret
test
call
hlt
lock
cld
clc
cmp
shl
ror
aam
jmp
test
mov
sub
in
das
shr
in
in
fdivrs
leave
cmp
icebp
jecxz
loop
sbb
or
in
test
repnz
lret
sti
ds
filds
lock
les
sub
repz
cmp
xor
into
loopne
loop
fsqrt
fsincos
adcb
in
rcl
lret
fxch
sti
ljmp
std
xlat
fcomp
dec
shr
in
xor
aad
cmc
aaa
call
cmp
flds
loop
clc
xchg
std
xchg
cmc
iret
sub
shl
ljmp
fst
addl
jmp
fisttps
cmp
stc
shll
leave
fucomp
loope
sbb
fdivr
shr
mov
mov
fdivr
ljmp
rcl
cli
ljmp
sti
and
enter
fcmove
sti
out
out
out
vcomiss
idivb
div
fsubr
call
clc
ret
mov
in
orb
call
jmp
xor
flds
jecxz
out
xchg
iret
in
int
out
in
in
fstpt
into
xor
ss
aad
and
fisttpl
fmul
lock
xor
repnz
xor
xor
sar
xor
ret
fcmovne
out
int3
mov
loope
out
int
std
sti
in
sar
jmp
xlat
fchs
fndisi(8087
fisttps
call
cmp
repnz
aad
sarb
sar
rcr
ret
clc
test
in
ljmp
div
idivb
fdivr
xchg
loop
xchg
loope
icebp
vpsubsb
loop
rcl
cmp
lret
divl
adc
into
ret
idiv
test
lea
fucomp
xchg
rol
lock
cmc
out
shl
loope
aam
ret
add
cld
test
xchg
in
vpsllw
cmp
jmp
adc
repz
idiv
leave
sbb
leave
mov
xchg
repnz
aam
ss
xor
fdiv
xor
cmpl
shr
std
dec
mov
mov
rcl
shl
shr
cmp
fldz
fmulp
hlt
rolb
out
out
cld
sti
int
aad
xor
clc
in
fdivr
neg
shr
in
rcr
ret
rolb
repz
in
iret
xor
xor
cmp
out
aas
fdivrp
xor
fldl
fdivr
fisttpll
out
int
int
xlat
xor
xor
cmp
cli
adc
in
in
and
mul
fsub
out
sub
out
cs
fptan
shl
call
lock
movl
cld
iret
cli
mov
call
ljmp
jecxz
cmp
cmp
mov
xchg
lock
fsubp
jmp
call
cmc
neg
cmp
xor
in
jmp
mov
fdivp
into
not
mov
into
sti
out
cmp
out
out
leave
rcr
fabs
rorb
loopne
loop
cmc
fcmovnbe
int3
cmp
stc
xchg
fprem1
mov
xchg
out
cld
lock
shl
lock
das
ljmp
icebp
std
movb
mov
divl
sub
aad
fsqrt
ss
repnz
sti
leave
out
std
test
loope
out
fnsave
cmp
int3
fnstcw
cli
into
in
cld
ret
hlt
std
fadds
mov
xchg
xor
loop
lret
cmp
std
test
iret
aam
mov
leave
add
fisttpl
mov
out
aad
rcr
shr
leave
ror
xlat
into
clc
aas
flds
shrl
cmc
rcl
ret
fidivrs
aad
fstp
fabs
call
out
int
jmp
mov
icebp
ss
ret
int3
stc
call
shl
sti
aad
ret
fucomp
lret
lret
into
out
xor
loop
cmp
shl
hlt
out
fcomi
cmp
ret
aam
stc
call
pop
iret
fiaddl
ret
call
cmp
idiv
std
mov
loop
cli
in
sti
cld
mov
imul
shlb
cmp
jmp
repnz
shl
lret
fsubp
xchg
mov
pop
xor
jmp
int
enter
int
lds
and
fnstsw
jge
jl
loope
xchg
xor
call
lock
rcl
fsubr
sar
sar
in
in
cli
fcmovne
shr
xchg
fisttps
out
aad
aaa
repnz
repz
cmp
in
into
fiadds
in
jmp
mov
out
jmp
repz
icebp
leave
shl
std
fsubr
fdivrs
xlat
addl
loope
in
test
icebp
jmp
sti
aas
fstpt
out
in
out
mov
test
ret
inc
xchg
test
lret
das
into
in
fnstsw
clc
xlat
ljmp
cld
sbb
fildl
fmulp
iret
mov
in
shl
sar
clc
out
clc
xor
hlt
xor
test
test
in
ret
out
int
jecxz
mov
loope
jmp
jecxz
fdivr
cmp
shl
aaa
jmp
out
hlt
rol
sbb
imul
in
jmp
sub
repz
out
iret
fdivrs
cli
roll
fcmovb
fsub
fimuls
lock
rcl
fxch
enter
into
ljmp
jecxz
ret
in
fnsetpm(287
repnz
ror
xlat
out
out
int
out
aad
fcmovnbe
clc
aad
test
rolb
lret
int
sub
nop
std
call
iret
xlat
ss
cmp
ss
cmp
fidivrl
cmp
call
nop
loope
iret
repnz
shlb
hlt
xor
xor
lret
sti
in
addl
call
test
xchg
xchg
lret
in
xor
lret
jmp
fldlg2
test
aam
addl
ljmp
aad
int
aaa
cmp
cmp
fdivrl
adc
sub
mov
test
xor
lock
xor
aaa
leave
loope
stc
ds
stc
ret
cmpl
stc
std
stc
clc
out
loopne
cli
cmc
add
iret
shr
repnz
jmp
fdiv
roll
ljmp
out
sarb
sub
not
call
loop
aam
sti
in
sub
out
into
jmp
mov
aad
ror
ss
stc
out
not
fsubp
cmc
aad
rolb
test
out
fdivr
int
vpaddsb
repnz
xor
cmp
roll
mov
fucomp
int3
mov
xor
xor
xor
ds
lock
fimull
and
out
not
aad
out
shr
cmp
cmp
cmp
leave
xchg
leave
loopne
orl
int
leave
neg
lret
iret
aas
lock
xlat
testl
call
in
out
xor
stc
fdivrs
fcmovu
out
test
fimull
iret
sti
fcomi
iret
xchg
loop
lret
stc
hlt
aad
int3
fdivrs
out
aas
fptan
mov
fiaddl
in
int
call
in
sti
fnstenv
cmp
cmp
shl
and
fdivp
fimull
sub
push
loop
loope
lret
stc
iret
cmp
ljmp
ljmp
in
test
clc
fimull
into
repz
fprem
jmp
cmp
call
test
add
loopne
ljmp
xchg
fisttps
div
in
int3
enter
sar
std
loope
into
loope
call
fsubrp
xchg
out
shl
in
xor
fcmovnu
cli
aas
in
div
cmp
icebp
in
neg
out
mov
jmp
fucomip
leave
test
jmp
aad
fld
xor
loope
and
clc
aas
imul
fcmovu
xchg
fcmovbe
xchg
int
ljmp
ds
ds
xor
enter
loopne
mov
repz
cmc
lret
std
not
rcl
sti
fildl
jmp
mov
aad
aam
in
aaa
divl
cmp
in
out
xlat
ret
xchg
fadds
sub
lock
xlat
enter
int3
enter
icebp
addb
call
call
aad
cli
in
cmp
lret
rcr
cmc
cmp
stc
hlt
leave
aad
in
leave
les
xchg
sub
vshufpd
in
aam
shl
sar
test
mov
xchg
cld
mov
in
in
in
ret
cmp
cmp
fcmovb
out
hlt
out
test
mov
int
loop
call
ss
lret
cmp
icebp
sti
rcr
aam
out
sbb
cld
in
jmp
ficoms
fst
sti
cmp
icebp
std
jecxz
inc
or
jecxz
repz
in
out
lock
fnstenv
out
cmp
clc
testb
testl
add
lret
ror
aad
fistl
loop
jge
jge
jl
jmp
rol
ljmp
cmp
icebp
into
roll
ds
rorb
sub
xor
shrl
repnz
ds
hlt
aad
clc
aas
ds
flds
dec
jmp
lret
xor
fidivl
iret
lock
cmp
add
in
call
xchg
hlt
icebp
sub
clc
loop
lock
shr
cmp
aam
xor
fiadds
jmp
repz
loop
in
ror
int3
xlat
mul
shr
lds
in
out
into
out
int
loopne
xor
leave
out
ss
aad
sar
into
roll
sub
test
xorl
cmp
lret
fadd
icebp
cmp
and
in
fists
out
in
ds
imul
cmc
aaa
fistpll
fsubp
fcmovu
filds
stc
jmp
hlt
shl
ret
cmp
cmp
repnz
cmp
rcl
sti
aad
dec
xlat
jmp
test
xlat
out
lock
leave
cmc
cmp
shr
loop
aam
test
loop
loopne
out
dec
lret
shll
shl
jmp
cmpl
in
jmp
loope
xchg
fsubr
sti
xchg
hlt
in
repz
fcmovbe
icebp
out
fsub
shl
loop
in
xchg
aam
fcmovnu
mov
inc
mov
in
rcl
cli
das
in
repz
cmp
std
ret
call
idiv
out
sti
xchg
loopne
dec
xor
out
lret
in
fstp
roll
cmp
stc
ret
jmp
out
test
decl
sti
xor
lret
jmp
aam
clc
rcl
fadd
jecxz
loopne
in
leave
in
fimuls
mov
in
xor
cmp
aas
loope
repz
test
aam
frndint
cmp
in
enter
bnd
out
xor
ss
ljmp
lret
in
loope
in
filds
hlt
out
jmp
xchg
out
rol
shl
fdivrs
fucomi
enter
and
loopne
mov
mov
out
loope
hlt
aad
loope
loop
aaa
out
cmp
iret
xlat
cld
inc
mov
cld
test
aam
mov
fisttpll
cmc
stc
jmp
xor
cmc
xchg
out
mov
call
test
out
fmul
imulb
xor
enter
aad
sar
xlat
fcomip
jecxz
aas
out
jmp
repnz
iret
ss
lret
ss
sar
loop
jmp
iret
loopne
xchg
in
in
jecxz
aaa
ljmp
aad
xor
not
sar
add
loop
out
loope
adc
xlat
jmp
sar
into
aam
cmp
fsubp
stc
repnz
test
mov
jmp
test
aas
stc
repnz
leave
iret
fcmovne
out
cmpl
cmp
lret
hlt
lret
fldl
shr
les
fcom
iret
cmp
ret
aad
cli
lret
xlat
mov
fldl
out
xor
aad
xor
cmpl
aam
ror
aas
and
fst
repz
out
loop
iret
in
into
xlat
loope
loope
cmp
ret
aad
call
fsubrp
mov
icebp
jecxz
leave
les
repnz
jmp
sti
loope
cmp
fcos
adc
cli
fcomp
sti
cld
xor
cmc
clc
shl
fldpi
out
roll
out
sarl
fnstsw
mov
jmp
in
loop
faddp
in
cmp
aam
loope
roll
cli
addb
xchg
ror
xorb
enter
sti
imul
cli
fsubrp
cld
ret
adc
rolb
fmul
fsubp
mov
cmc
sti
out
ljmp
lret
loopne
rcl
std
test
aas
loopne
int
mov
lock
xlat
ds
not
mov
fsubr
in
mov
jmp
out
in
xor
sti
cmp
fdivr
sti
repnz
out
ret
xlat
ret
cmp
out
test
repnz
ljmp
shll
xor
cld
out
inc
test
enter
jecxz
call
fsubr
cmc
xor
fcmovu
fucom
faddl
orl
addl
fdiv
neg
loope
out
sti
test
faddl
int
std
mov
repnz
cmp
stc
xor
cmp
shl
std
cli
ret
testb
xchg
out
lret
test
in
cmp
shl
fucomi
cld
int3
mov
ret
push
mov
jmp
int3
ret
ds
fst
decl
xor
xchg
out
jl
add
jmp
ljmp
iret
imul
idivb
icebp
fadd
cmp
cli
sar
xlat
jmp
in
in
xchg
filds
jecxz
lret
iret
sti
cmp
cld
ret
flds
dec
icebp
cli
mov
fdiv
xor
ljmp
enter
cmc
hlt
and
leave
stc
test
les
loop
xor
aad
xor
cmp
aad
fcmovnb
aad
xchg
add
int
orb
aas
rcl
fcmove
iret
cmp
call
std
addl
enter
out
into
int
rcl
les
cmp
enter
lock
fdivrl
test
loopne
in
xchg
addb
shl
xor
hlt
hlt
fcmove
enter
stc
ret
ret
test
cmp
lret
push
jmp
loop
shl
jmp
aad
fdivr
cmp
repnz
test
cmc
lret
leave
aam
in
out
int3
sti
in
cs
aad
cld
push
cld
repz
rol
shl
shl
out
ljmp
std
subb
call
fidivrl
fcomi
ret
hlt
out
stc
fadd
mov
test
in
out
jmp
aad
cmc
fiaddl
aas
out
cld
xlat
cld
int3
in
mov
out
lock
ret
xor
ss
ret
fisttpll
stc
loopne
int
xchg
shlb
fsubr
fnstenv
int
testl
fucomi
loop
iret
and
out
xor
sar
leave
in
shr
not
faddl
xlat
fadds
enter
xor
repz
shlb
lock
jmp
or
repnz
loop
fcmovnb
jecxz
cli
xchg
sbb
shrl
in
sti
cs
hlt
jmp
sarl
test
out
fmulp
mov
incl
aad
out
stc
fucomip
out
jmp
int
test
rol
mul
test
loop
out
xchg
mov
shl
divl
mul
in
hlt
in
lock
fdiv
fcom
repnz
cld
out
loop
mov
mov
mov
icebp
jmp
loop
sti
call
cld
fcomip
jecxz
sbb
out
and
xchg
aad
das
shl
loopne
std
fcom
fdiv
sub
out
aaa
ss
mov
test
mov
shr
jmp
lock
xor
add
into
stc
fcomp
mov
out
out
out
cld
int
mov
cmc
lret
int
fcmovnu
rcl
vpsubw
lret
int3
out
jecxz
loop
jmp
lret
loopne
xor
stc
in
lock
std
cmpl
addb
lret
int
mov
in
int3
in
fldt
out
sti
int
cmp
hlt
sar
loop
fadds
fcmovu
shr
in
out
enter
enter
cmp
repnz
jmp
in
in
and
push
hlt
repz
enter
int
loope
into
rorb
neg
decl
jmp
out
cli
in
cld
leave
cmp
sti
ljmp
call
mov
lret
lock
leave
leave
in
xor
fdivs
ds
sti
cmp
sar
jmp
leave
mov
into
cld
fisttpl
icebp
test
fmulp
hlt
cmp
loopne
ret
out
add
enter
loopne
aad
xor
lock
xor
fidivrl
clc
shl
jecxz
rolb
mov
out
jecxz
mov
shr
stc
fnstenv
cmp
fsubr
out
out
fcomp
cmp
lret
xchg
imul
test
lds
das
loopne
int
fldl2t
sti
in
xlat
fildl
testl
idiv
ljmp
in
sti
hlt
cmp
in
repnz
xchg
aad
out
jmp
mov
out
xchg
call
fcmove
aad
cmc
sarl
sbb
lret
mov
repnz
repnz
ss
lock
ss
cmp
jecxz
stc
enter
mov
out
lret
shl
in
iret
aam
fnstsw
cmp
cli
rol
ret
in
mov
mov
ljmp
cmp
repz
aam
out
add
sub
sbb
in
shr
cmp
out
repz
aam
call
jecxz
rcl
mov
mov
or
out
fxch
shr
out
cmp
out
call
xlat
ret
mov
loop
in
in
inc
xor
xor
and
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
mov
mov
mov
jmp
rcl
leave
leave
fst
fimull
mov
mov
ljmp
decl
out
mov
icebp
jmp
cmp
icebp
icebp
cli
cli
cld
fnstcw
out
lret
in
rclb
in
icebp
iret
into
cmp
aad
in
add
iret
fucom
xchg
mov
jmp
fcmove
fadds
out
fucom
ret
sbb
leave
sub
clc
shr
mov
leave
aad
in
aaa
sti
push
incl
loopne
ret
jmp
iret
test
int
int
rol
out
cmp
enter
cmp
rcl
cmc
sar
ret
mov
roll
loopne
in
imul
fnsave
fprem1
cmp
fiaddl
fiadds
cld
cld
jmp
xchg
xchg
xchg
aam
icebp
out
in
enter
sti
enter
int
hlt
ds
repz
xchg
out
lock
cli
shll
aas
xlat
sar
fcomi
cli
imul
fimull
cli
shl
cmc
xchg
in
int
aad
in
fsubr
cmp
int3
shl
icebp
fimull
decl
int3
xchg
loop
ret
xor
jmp
fdivp
repnz
in
shl
in
adcb
xor
aad
idiv
lret
loope
test
jecxz
fsub
in
loopne
out
jmp
mov
not
cmp
cli
jmp
shr
ss
loopne
in
rol
sbb
decl
in
not
ljmp
in
aad
std
test
fcmovu
in
fmulp
fimull
shr
loopne
repnz
in
in
out
jecxz
idivl
cld
cmp
call
lret
in
iret
lret
into
xor
sti
out
iret
repz
dec
xlat
ds
shl
lock
mov
fimull
rcl
in
int3
call
fdivrs
loopne
in
shl
rol
fstp
loope
mov
xlat
fadd
lret
lock
ljmp
sar
jecxz
test
int
into
std
nop
fucomip
out
cmc
enter
cld
ror
addl
in
sti
in
test
out
sub
shl
aad
icebp
ljmp
in
stc
in
int
fiaddl
out
in
int
out
cmp
shl
hlt
cmp
mov
jmp
ret
icebp
std
jmp
das
int
ljmp
out
repz
fst
hlt
call
out
cli
repnz
xchg
int
mov
clc
iret
jmp
iret
shl
repnz
out
jecxz
xchg
dec
mov
mov
xor
out
lret
cmp
iret
jecxz
aam
int
les
xchg
rcr
loop
xor
fdecstp
jecxz
icebp
stc
shl
xlat
lret
mov
lret
lret
loope
iret
hlt
enter
int
test
out
loope
mov
aad
in
fcmovb
cld
fsubr
fmul
out
xor
int
repnz
cld
shl
repz
ffree
cmc
rcr
out
out
fucomip
xchg
jmp
repz
lret
aaa
loopne
std
in
rcr
lds
std
jmp
test
sub
clc
ror
cmp
cs
xor
cmp
call
in
cli
lret
ret
enter
mov
loop
loop
in
ljmp
loop
shl
aad
enter
fldl2t
xchg
lock
ror
ffreep
jmp
into
sub
iret
test
xchg
rcr
stc
addb
out
int
in
imull
aad
cmp
cmp
repnz
ljmp
hlt
orb
into
in
in
xor
cli
lock
sub
jecxz,pt
aad
repnz
mov
in
cld
lea
xor
ret
repz
out
sarl
out
flds
lds
loope
cli
loop
xchg
cli
jmp
ljmp
leave
xor
cli
lock
lock
or
call
loop
icebp
repnz
jmp
jecxz
mov
ljmp
mov
enter
mov
sub
cmc
jmp
out
loope
xor
fiaddl
sbb
mov
nop
into
std
out
rcl
jmp
fucomp
ljmp
cmc
iret
fcmovbe
loop
loope
cld
xchg
cli
in
shr
ret
xor
repnz
xor
xor
stc
aas
cli
test
fsubp
clc
fcmovbe
fxch
fdivr
mov
ljmp
cmp
ss
int3
cmp
ret
fdiv
fcmovnbe
movl
subl
jmp
lret
ffree
fst
in
notl
fincstp
imul
pop
add
sbb
in
nop
loop
mov
in
in
div
ljmp
cmp
in
cmp
mov
loope
or
sub
in
ss
int
rcr
ds
jmp
leave
cmp
std
mov
leave
sti
loope
cmc
call
sarb
enter
int3
cmp
loope
not
out
sti
adc
cmc
xchg
iret
shl
shll
out
xor
not
cmp
rolb
mov
loopne
fcmove
cmp
xor
leave
sti
in
cmp
lret
lret
aad
in
call
or
lret
mov
sub
enter
icebp
loope
in
sti
ds
fcomi
cmp
xlat
call
jmp
ret
int3
neg
lret
fcomip
fidivrs
mov
stc
or
loop
mov
cld
xchg
enter
sti
cli
in
call
rcl
incb
clc
addl
ror
cmp
lock
cmp
ss
out
int3
lock
fsqrt
fsubr
mov
test
mov
jmp
cmc
ds
xor
in
call
loopne
fcmovu
roll
hlt
loop
jmp
test
lret
enter
cli
sti
cld
shl
jecxz
idiv
in
and
stc
std
stc
in
jecxz
xchg
iret
ds
ret
aam
iret
aam
jmp
addl
into
nop
repnz
out
out
xor
xor
lret
hlt
ss
icebp
push
cmp
call
in
fcmovne
xchg
loop
xor
hlt
ss
mov
xlat
enter
call
roll
out
test
icebp
repz
shl
cmc
cs
xor
cmp
stc
cmp
loope
repz
sub
int3
xchg
or
int3
rcr
xor
iret
repz
ljmp
out
xor
lock
iret
lret
iret
out
icebp
cmp
repnz
adc
test
jmp
jmp
test
aam
loopne
xor
cmp
out
shl
call
in
jmp
iret
test
ror
nop
aaa
xor
idivl
in
rcr
xor
icebp
div
fsubr
and
mov
mov
cli
mov
cmp
xor
xor
into
and
jecxz
fdivp
loopne
cld
xchg
cli
mov
das
jmp
sar
fidivrl
ss
leave
call
rcr
testb
in
enter
out
loopne
hlt
shll
in
cs
fidivrs
ljmp
mul
lret
int
int3
leave
out
test
int3
xlat
sti
leave
clc
enter
ljmp
cmp
jecxz
stc
fucomp
fmull
rcl
clc
xlat
fucom
in
int3
out
repz
xchg
call
in
icebp
int3
divl
out
fdiv
neg
repnz
rcr
neg
jmp
mov
cmp
out
xchg
mov
xor
cs
out
sti
cmp
xor
clc
shl
mov
lret
mov
in
in
xor
cmp
aas
cmp
in
rol
aam
xlat
xlat
testl
int
in
loop
out
aas
fsubr
aas
loopne
iret
int3
cmp
hlt
loop
orb
not
out
int
cmp
lret
xor
fcomi
cmc
mov
call
mov
ljmp
enter
ret
in
ds
aam
xlat
xlat
into
fadds
xlat
rcl
cs
ss
leave
aas
repz
lret
fldl
fimull
test
xchg
hlt
call
cld
cmp
idivb
fcmovnu
aad
rcl
aam
stc
jecxz
in
out
iret
fsub
call
bnd
neg
icebp
ss
cmp
std
cli
dec
not
ret
mov
hlt
les
test
int3
int3
cmc
sub
div
neg
or
out
cmp
roll
std
out
fst
das
out
shr
cmp
jmp
repnz
aad
incb
mov
stc
repz
jmp
ss
loope
cmp
std
xlat
aad
cmp
std
clc
loop
out
fmul
ljmp
enter
lock
fiadds
xlat
ds
ds
call
into
test
test
shr
ljmp
sti
idiv
out
and
fsub
sti
cli
shl
mov
leave
aaa
out
jmp
cmp
stc
cmp
clc
les
test
sub
sbb
cmc
add
add
ret
int3
ror
aad
lahf
mov
xor
dec
cmc
jle
pop
add
ljmp
call
ds
out
sub
cs
into
stc
jecxz
fldz
rol
fcmovb
hlt
rol
xchg
and
mov
out
aad
rol
idiv
std
ror
ljmp
stc
xchg
ds
out
sti
out
call
test
in
leave
call
cld
in
aas
xlat
rolb
rorl
sub
ficoms
in
fst
icebp
ljmp
fadds
lret
lret
ljmp
loopne
in
shr
cmp
sar
lock
xor
fadd
shr
hlt
jmp
lock
xchg
in
loope
shr
icebp
fsubr
fstp
loope
int3
jecxz
xchg
repz
in
mov
xchg
rcl
xor
out
lret
lock
jmp
repz
loop
clc
in
cmp
orb
int
aad
xor
lock
cli
iret
stc
fstpt
aam
hlt
loope
mov
in
mov
out
int
jmp
aad
repz
clc
in
idiv
ret
fmuls
test
jmp
ret
lret
lret
in
rcl
std
fiadds
hlt
test
loopne
cld
decl
das
stc
shll
not
aaa
cmp
ss
shr
jecxz
test
test
in
fsubrp
mov
jecxz
xor
xor
aad
lock
cmp
ds
bnd
xchg
jmp
decl
lret
aad
cmp
cmp
fistpll
aas
test
sarb
shl
enter
out
xchg
mov
aad
lret
std
icebp
cmp
div
rcr
ror
jmp
into
loop
idiv
out
call
out
lea
ljmp
iret
fdivr
cmp
rcl
call
std
out
xchg
shl
xor
ret
shl
xor
fcomp
iret
fdiv
aas
cld
ffreep
cli
loop
int3
fsub
out
test
lock
int3
cmc
fprem1
enter
ret
sbb
mov
fsubr
mov
clc
std
out
lret
test
xlat
fucomi
ds
xlat
aam
fprem
loop
out
clc
fucomp
jmp
aad
cs
in
fst
lock
cmp
loop
aad
xor
loopne
fstl
shl
jmp
stc
cli
rcr
imul
aas
test
leave
in
ljmp
int
repnz
rol
cmp
aaa
shl
cld
stc
and
xor
sbb
stc
xchg
test
test
jmp
sub
int
cli
lret
icebp
in
imul
filds
fcmovnu
add
icebp
loopne
shll
aad
repz
xor
xor
out
repnz
loope
fadds
int
leave
aam
into
shl
int3
fdivrl
ljmp
mov
and
out
in
nop
jmp
loopne
xor
repz
out
in
lock
lret
cmp
jecxz
leave
mov
fdiv
cld
out
loop
xor
cmc
rcr
std
xor
int3
jecxz
xchg
fdiv
test
lret
ret
ljmp
jmp
out
out
shl
cld
sti
fmulp
rcr
cmp
iret
out
cli
fsubp
les
loopne
repz
test
ljmp
aas
fpatan
out
mov
enter
repnz
out
aaa
fcmovb
rol
cmc
fcmovbe
cmp
sar
cmp
icebp
test
out
xchg
adc
sar
jmp
xor
into
cmp
sub
lock
aad
rcl
sub
fcomp
loopne
in
and
out
hlt
jmp
div
xor
out
xor
cmpl
add
ret
sti
in
stc
loopne
shl
test
rol
out
cmp
ss
test
stc
stc
mul
out
mov
loop
lock
ds
call
idivl
cmp
roll
mov
iret
out
out
repnz
in
cmp
cld
icebp
enter
cmc
loopne
icebp
xlat
aam
ds
cmp
out
out
mov
enter
jmp
leave
jmp
fchs
ffree
fcmovnbe
in
fdivrp
enter
in
mov
into
aam
ror
ret
xor
in
into
in
cmp
aas
aad
sar
fdivr
out
in
shr
loopne
lret
fcomi
not
cmp
iret
fcomi
fsub
sar
fistpll
out
mov
in
mov
flds
repz
out
int3
ret
out
jmp
out
faddl
fadd
ret
xor
mov
jecxz
in
out
fidivs
cmp
ds
fmuls
fs
add
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
leave
lret
aad
int
cmpsl
mov
ss
lods
clc
jle
pop
add
shl
cmp
sbb
jmp
fdiv
icebp
in
lret
call
aad
rolb
xchg
lret
xchg
call
out
nop
sub
lock
icebp
iret
cmc
cli
shr
jmp
rcl
repnz
ret
jmp
fsubr
mov
adcl
jmp
ss
cli
loopne
out
test
std
rorb
mov
cmp
lret
aad
ret
iret
lret
std
idiv
cmp
test
cld
out
cmc
movb
loope
stc
hlt
xor
clc
cli
fdivrs
repz
filds
ljmp
in
out
ret
into
shr
in
xlat
aad
out
ds
lock
call
icebp
int3
out
int3
into
in
ss
cli
aas
out
cmpb
sub
mov
div
ret
loopne
loop
xor
jmp
repz
aam
jmp
fdivr
orl
jmp
test
shl
cmc
fmulp
rcl
cmp
ss
div
stc
xlat
stc
out
in
add
int3
fucomp
jecxz
cld
add
xor
in
sub
out
repnz
lret
ret
fadd
std
fmul
adc
mov
in
xchg
orl
fnstcw
jecxz
xor
stc
addl
loopne
cld
lock
sub
loop
fdiv
fcmove
cmp
fnstsw
repnz
test
call
mov
aad
shl
jecxz
clc
ss
sti
xor
fcmovbe
sar
sti
mov
clc
out
test
in
lock
lret
out
fcmovne
fstp
fistpll
sbb
in
div
in
mov
fstl
out
mov
fstp
repz
in
in
test
xchg
xchg
iret
loopne
iret
sar
jmp
repnz
out
sar
cmp
loop
icebp
mov
in
iret
test
int
clc
repnz
sti
jecxz
xlat
ret
call
out
test
out
test
shl
repz
repnz
f2xm1
fcomi
aam
iret
sti
aad
xchg
xlat
lea
out
nop
icebp
bnd
fidivrs
lock
not
fmuls
sti
fiadds
sub
fldl2e
ret
int
cmpl
out
xlat
cli
xchg
repnz
out
sub
fidivrl
jecxz
loope
div
cmc
cmc
cmc
addl
loopne
sarb
in
std
cmc
cmc
cmp
aas
into
aam
aaa
hlt
out
cmp
hlt
int
lret
out
lret
jmp
int
xlat
out
fucomp
iret
enter
fsub
loop
and
in
or
lock
jmp
in
xor
ds
sti
shl
loope
cmp
xchg
lret
in
mov
in
xchg
xchg
ds
out
lret
hlt
fcmovb
out
aad
fsub
xchg
ret
fsubp
mov
loope
shl
div
fcomi
loope
cli
ror
xchg
cmp
in
in
out
mov
in
shr
lds
fidivrs
rcr
stc
fldl
loopne
mov
fsubrp
loop
icebp
out
xor
fucompp
ss
div
shl
not
mov
ret
ret
in
loopne
subl
ds
aad
lret
cmpl
mov
ror
incb
iret
sar
out
fdivr
clc
lret
shl
shl
in
mov
jmp
cmc
rorb
xor
cld
cmp
int3
aad
mul
in
loope
dec
ds
repz
xor
xor
repnz
hlt
cmp
jmp
sar
cmp
enter
xchg
enter
sti
rcr
out
loopne
sar
rorl
into
lock
mov
jecxz
cmp
xlat
out
cmpb
mov
stc
testb
test
dec
cld
ss
lret
out
aas
out
aam
imul
iret
mov
lock
cmc
iret
lret
repz
lret
fcmove
cmp
ljmp
repz
xlat
fsub
mov
out
int3
repnz
in
fadd
ds
icebp
std
shl
or
std
ljmp
rol
xlat
fsubr
lock
in
aam
cmp
mov
decl
test
rol
std
out
cmc
cmp
iret
xor
jmp
aas
ror
aas
aad
iret
rol
adcb
std
push
xchg
mov
jle
pop
add
out
fdivrp
clc
cmc
loope
fstp
int3
out
mov
mov
aad
into
rol
fcmovnbe
iret
hlt
icebp
stc
cmp
fdecstp
lret
fadd
mul
hlt
ljmp
lret
jecxz
out
xor
fxtract
enter
iret
hlt
int3
test
jecxz
jmp
fsubr
mov
xchg
loop
ret
lock
repz
loopne
roll
cli
jmp
cmp
shl
xor
fldz
les
aad
cmp
imul
sti
ds
clc
icebp
std
fcmovne
ret
fucomi
call
out
out
into
leave
in
in
iret
lret
rol
mul
xchg
repnz
orl
and
out
fcomi
cli
lret
roll
fildl
fdiv
lret
xor
in
out
ljmp
mul
lock
rcl
loop
orl
xor
cs
in
cmp
stc
stc
cmc
fadd
repz
sti
fdivp
rorl
ror
lret
std
int3
sar
cmp
repz
repz
loop
loope
mov
mov
xchg
fimuls
fsubr
out
cmc
stc
lret
faddl
xchg
jmp
loop
int3
roll
les
lret
repz
neg
fdivrs
sti
jmp
cmp
mov
call
cmp
lret
ss
repz
aad
xlat
loop
repnz
fisttpll
icebp
xchg
int3
out
in
cli
iret
lret
in
rcl
lock
and
mov
call
in
shl
iret
out
cmp
fcmovbe
cli
out
in
incb
std
repz
jecxz
ret
ljmp
aas
aam
sti
in
loopne
clc
in
loope
xchg
idiv
cmp
ror
aad
int3
aaa
out
xor
idivb
cmp
test
loopne
jmp
jmp
addb
shl
enter
fmul
sar
jmp
sarb
ss
ret
sar
fstp
enter
iret
test
loope
call
shl
int
div
inc
clc
test
and
lock
aam
repz
call
fidivrs
fldl
fsub
dec
les
loopne
int3
jmp
jecxz
int
out
hlt
sti
repnz
cmp
loop
out
loopne
mov
rorb
shl
xlat
cli
cli
sti
neg
idiv
ret
sti
std
in
fsubrp
mov
icebp
lea
sar
idiv
fbstp
out
rcl
addb
xlat
clc
std
leave
cmp
out
call
lret
stc
xor
fcom
lret
aam
stc
std
fisttps
int
xchg
call
xor
shl
addl
loopne
jmp
int3
jmp
or
and
aad
xor
jmp
fdiv
int
jecxz
call
xlat
fimuls
rolb
lret
in
cli
ljmp
test
in
fucomp
int
in
std
incb
aam
xor
fdivrp
ds
fldl
jmp
aas
jmp
xchg
rorb
cs
leave
xor
xor
int
in
idivl
icebp
cmc
loop
xor
fsubrp
loope
in
mov
xor
std
into
loope,pt
std
fucomp
dec
in
out
decl
loope
mov
jmp
in
icebp
fsubr
int
fcmovnbe
clc
imul
in
fstpt
mov
xchg
out
lret
lret
mov
dec
nop
in
jmp
xor
aam
xor
jmp
fcmovu
stc
jmp
cld
xchg
xchg
xchg
lock
icebp
xlat
aad
call
aas
loopne
xchg
xchg
in
fndisi(8087
stc
xchg
mov
xor
shl
int3
aam
enter
aad
iret
in
cmp
stc
loopne
out
in
in
hlt
mov
lret
cmc
out
ljmp
rcl
in
ds
cmp
fsubr
ror
lret
xchg
int
in
in
test
fdiv
aas
rolb
cli
not
fisttpll
dec
out
int3
int
leave
cmc
in
iret
xor
cli
into
cmp
aam
addl
aam
jmp
lret
cld
fdivp
jmp
out
ljmp
stc
cmc
in
test
cmc
cmc
mov
xchg
fisttps
rcl
leave
cmc
stc
fcmovnu
aam
sti
out
repnz
orl
cld
in
mov
xor
mov
add
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
sbb
mov
subl
mov
add
xor
mov
mov
sbb
add
mov
xorl
jmp
enter
fstp
fstpl
sub
xchg
std
in
out
jle
pop
add
fiadds
vpsubusw
cmp
rorl
leave
xor
jmp
idiv
std
jecxz
int
cmp
cmc
stc
loope
imul
cli
out
nop
loopne
decl
shlb
fcmovbe
shll
ret
adc
addb
jecxz
xor
jmp
ljmp
test
ret
repnz
in
loop
and
rorb
stc
iret
enter
enter
cli
int
repnz
jecxz
mov
jecxz
int3
lret
call
ror
divb
xor
cmp
cmp
aad
sarl
test
in
std
std
fisttpll
aad
in
mul
fdiv
lret
in
repnz
repnz
lret
mov
sub
out
xchg
in
shr
int
cmp
iret
add
in
cmp
ffreep
jmp
iret
xchg
icebp
xor
icebp
iret
cld
lock
xor
std
jmp
xchg
loopne
fdivp
fists
xlat
aam
clc
neg
loopne
aam
fcmovnbe
hlt
out
and
xlat
jecxz
clc
lret
mov
xchg
cmc
out
iret
xor
aad
cmp
ror
mul
xchg
xchg
mov
in
ror
std
fimull
xor
xor
hlt
icebp
rcr
aaa
repz
mov
sti
into
mov
cmp
aam
cli
iret
std
fsubr
adc
into
fadd
fdivr
xabort
rol
out
test
jecxz
iret
in
xor
lret
xor
shr
incl
mov
ret
out
test
jmp
rcl
call
fmulp
out
int
aaa
hlt
cmp
mov
cmp
aam
jecxz
in
xlat
out
cmp
ror
jmp
aad
decl
jmp
inc
loope
shr
loop
bnd
lds
in
into
fucomi
out
int3
int
cld
loop
xor
mov
jecxz
fmull
lock
loope
lret
shl
rcr
rcl
test
clc
in
xchg
shl
xchg
mov
ror
xor
in
shl
stc
lret
in
roll
out
loop
enter
out
iret
iret
xor
rcr
cmp
cmp
mul
loop
clc
jmp
loop
ljmp
repz
shll
lret
int
rol
iret
jmp
fsubrp
iret
repnz
hlt
aad
enter
in
fisttpll
rcl
jmp
fcomp
rcl
shr
rcl
div
std
loop
decb
xor
in
xor
idivb
leave
out
icebp
into
in
in
stc
movl
sbb
in
lock
ret
sub
out
xor
int3
shl
fadd
std
in
ftst
mov
mov
ret
ret
jmp
cmp
ds
repz
cmp
in
addb
in
repz
inc
ret
in
lret
ljmp
fadds
jmp
xlat
cld
fisttpl
xor
divl
jmp
ss
xor
in
mov
jmp
fldl
sub
in
int3
int
aas
cli
cmp
sti
out
fldl2e
jecxz
ljmp
in
xor
cmp
leave
xor
ss
repnz
int
faddl
enter
fmull
iret
enter
ror
lret
cmp
out
out
in
rcr
mov
loopne
decb
std
out
into
aam
aaa
cmp
ss
fdivp
out
std
fsubrp
stc
adc
rol
aam
jmp
fucom
out
jmp
int
loope
ret
sarb
cmp
jecxz
fidivrl
roll
mov
orb
leave
xlat
mul
fsubr
aaa
lret
in
cmp
xchg
not
repz
into
cld
leave
ror
in
cmc
ret
shrl
neg
stc
sub
in
xchg
aad
fcmovne
xchg
repz
shl
icebp
out
cmc
lret
cmp
xor
out
not
jecxz
fisttps
jecxz
mov
into
call
rcl
loopne
lock
test
out
out
fisttps
out
ret
lock
xlat
fldz
cmp
lret
int3
lret
xchg
stc
fcmovb
faddl
fmull
in
icebp
icebp
loop
stc
lret
rcl
in
fucomip
repz
stc
call
sub
mov
in
xor
out
repz
lock
cmp
aam
cld
rorb
mov
nop
xor
repnz
ffree
inc
cld
movl
test
test
test
add
add
rcl
lret
aad
fstp
sub
cld
ljmp
jl
add
clc
aam
fsub
aad
sarl
loop
xchg
lret
mov
shrb
fnstenv
hlt
repz
icebp
xor
loop
jmp
jmp
xchg
int
in
xchg
loope
shl
in
aad
xor
sar
cmp
aam
sti
sbb
xchg
addb
repz
div
xlat
std
aad
into
cmp
not
fcmovnbe
enter
fcmovb
loop
lock
mov
iret
clc
int3
xor
in
lock
aas
shl
in
lret
mov
out
xchg
enter
xor
frndint
cmp
shl
in
loope
shr
testl
adc
in
xor
cmc
fldz
sti
aaa
clc
int3
out
filds
shl
shl
fsubr
loopne
int
xchg
jmp
jecxz
shlb
jmp
int3
in
xchg
shr
ds
mov
ds
mov
mov
test
fldln2
enter
hlt
in
lock
cmc
and
fisttps
nop
aam
out
int
xor
call
faddl
loope
loopne
testl
xor
jmp
leave
xor
fmulp
loopne
jecxz
out
loopne
enter
out
into
ljmp
ljmp
int
repnz
fstpt
repz
mov
fiaddl
ljmp
lret
cld
jmp
stc
rolb
test
in
xacquire
sti
ss
jmp
in
into
cld
cmp
addb
icebp
fmul
out
roll
div
lock
cmp
imul
fcmovu
jmp
xlat
fcoml
icebp
ljmp
in
aaa
cli
not
std
cmp
cmp
aam
sarl
cmc
jmp
cld
sti
lret
out
lock
out
not
enter
enter
cli
cmp
cmc
loopne
rcl
loop
leave
fcmovne
loop
jmp
cli
xchg
xchg
hlt
hlt
ljmp
fcmove
jmp
xlat
icebp
shl
mov
jecxz
jmp
jmp
out
out
xor
cmp
out
sti
rcl
test
int
sub
rcr
call
cli
cmc
cmp
sbb
icebp
repnz
aam
jecxz
dec
call
rol
aaa
int
cmp
call
jecxz
in
test
cmp
sti
ljmp
lret
add
cmp
push
aas
ss
repnz
iret
aas
jecxz
aas
loope
lret
mov
out
cmc
loop
loop
les
int3
ds
in
sti
xlat
sbb
call
stc
test
into
cs
loop
xor
in
xor
sar
fidivs
in
in
std
in
mov
fdivr
in
call
mov
fsubr
out
in
xor
fst
out
iret
mov
stc
addl
xchg
lret
icebp
enter
jmp
aas
leave
cmp
fdivr
cld
stc
sti
cli
ds
in
out
jmp
fsubrp
xchg
shll
ror
jmp
ds
cmp
ret
adc
test
cld
loop
clc
clc
in
ficoml
fsubr
xor
jmp
aas
ss
sar
xchg
fsubp
cmp
rcr
loop
fldl
call
fst
fsubp
fdiv
icebp
fsub
loop
test
test
test
lea
xor
jecxz
lock
in
enter
iret
in
ret
stc
mul
out
lret
fst
in
ljmp
cmp
aad
xlat
in
rol
ret
std
in
clc
std
hlt
ror
lret
xchg
jmp
icebp
mov
xor
hlt
int3
sar
not
fsubrp
cmp
aas
leave
cmc
lds
incl
icebp
repnz
jmp
shl
fdivr
adc
test
ljmp
das
loopne
ss
cmp
jecxz
loope
ret
rolb
sbb
clc
jmp
enter
rcr
call
repz
fcmovnu
ffree
fisttps
decb
lock
xor
into
cli
out
call
in
in
repnz
out
call
loopne
into
lret
loopne
clc
cld
shl
ljmp
test
std
sti
fiaddl
int
loopne
out
in
ror
jmp
in
cmp
out
or
ds
xor
rolb
in
cmc
jmp
icebp
loope
cmp
in
cmp
in
addb
lret
in
loope
adcl
and
inc
fs
add
cmp
add
test
add
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
xor
movl
movl
xor
jmp
into
aad
lret
rcr
mov
pop
and
jl
add
out
ror
out
xor
cmp
fdivp
sti
cmp
fadd
aad
fiadds
into
out
rcl
jecxz
repz
xor
int
in
xor
cmc
xchg
cmp
xor
xchg
leave
out
out
shll
fpatan
leave
leave
cld
push
repnz
std
in
cmc
in
xlat
jmp
fsubp
out
xchg
into
not
lret
in
in
fsubr
lock
loopne
ret
testl
out
out
loop
sub
ret
xlat
repz
sti
loopne
into
loop
ret
fmull
loop
orb
ret
in
std
ljmp
fadd
in
shl
test
test
loopne
into
out
out
jmp
repnz
repnz
fst
leave
fcomp
jmp
fiadds
flds
or
sub
out
xor
cmp
fcmove
hlt
lret
rcr
test
orl
out
xor
cmc
int3
sub
int
lock
cld
fdiv
xor
test
cli
test
out
mov
loopne
fld
ljmp
fildl
test
fldln2
idiv
sti
clc
and
jmp
icebp
cmp
cmp
cmp
cmp
sti
test
int
loop
sti
mov
xchg
test
lds
out
cmp
int
sarl
cli
cli
loop
rolb
fnsetpm(287
dec
fmul
shl
ret
in
enter
cmc
neg
cmpb
mov
enter
in
int
in
in
xlat
vpaddusw
cmp
std
sarl
lret
roll
loop
in
out
iret
filds
lock
out
test
shr
rol
loop
enter
and
leave
mov
fdiv
fdivrp
xor
stc
cmc
test
cmp
test
fcomip
clc
cmc
out
ret
fsubp
mov
in
loop
repz
int
lret
iret
shl
fadd
in
loopne
cli
cli
in
out
out
xor
out
jmp
aas
iret
loop
in
sarb
jmp
ret
iret
mov
mov
ret
jmp
shlb
enter
repz
cli
in
testb
aam
in
jmp
xor
xor
iret
out
and
nop
icebp
cld
lock
loope
in
xor
loop
fdivr
or
sti
lock
jmp
sub
out
mov
fldl
int3
vpsubq
incb
jecxz
roll
jmp
xchg
shll
xor
fnsave
enter
add
or
jmp
out
rcr
sarb
cmp
iret
cmp
into
lret
int3
clc
hlt
fnstsw
aas
fisttpl
mov
rol
repnz
mul
xor
fnstsw
aas
test
loope
jecxz
fmuls
lret
xchg
xchg
imul
out
cli
aad
fsubr
cld
push
repnz
cmp
ds
fneni(8087
into
lret
mov
in
cmp
ss
dec
fdivrp
fcom
and
out
call
xchg
leave
repnz
aam
in
stc
ror
enter
xlat
cli
cmp
lock
xchg
push
mov
mov
mov
in
ror
ss
aaa
jmp
lock
ljmp
xlat
test
fsubp
cli
dec
test
xor
imul
cli
shl
rcr
out
std
std
cmp
icebp
loop
ffreep
xchg
xchg
repz
jecxz
out
jmp
fmul
hlt
loope
ret
in
adcb
into
out
cmp
ss
cmp
sti
stc
xor
loope
loopne
jecxz
ftst
cmp
loop,pt
sub
in
push
fsub
repnz
out
repz
in
loope
aas
clc
loop
cli
call
lock
xchg
leave
in
xor
cmc
aam
sar
loope
cmp
ftst
sar
jmp
jecxz
iret
faddl
fdivp
out
cmc
std
int3
lret
enter
int
shl
sti
test
cmc
and
shl
xchg
mov
shl
lret
fidivrl
fcomi
fadd
shl
test
cld
stc
fsubp
mov
lret
xchg
jmp
test
out
xor
hlt
cmp
jmp
imul
cmp
fiadds
idiv
fucomi
leave
test
repz
xor
lret
cmp
out
hlt
in
in
imul
loopne
sti
aad
cld
iret
repnz
sub
ss
hlt
ror
std
adc
call
repnz
or
iret
enter
repnz
push
fs
add
cmc
add
add
rol
xlat
vpaddusw
xchg
jb
push
cmovl
jl
jle
pop
add
out
out
loop
in
aaa
cmp
adc
les
mov
out
lret
leave
jmp
xor
iret
in
hlt
xor
sti
ffree
fadds
testl
ss
sti
lret
call
aad
shl
cmc
rol
mov
sbb
out
xchg
rcl
aad
shl
in
shll
cmp
std
iret
lret
repnz
test
out
xchg
or
hlt
jmp
in
fsubr
loopne
sub
out
neg
rcr
faddp
cmp
fiaddl
xor
enter
aaa
leave
clc
jmp
sar
cmp
cld
cmc
and
loope
cld
lret
nop
and
shrb
xor
rcr
loope
int3
xlat
in
lock
loop
fchs
fisttpl
out
xchg
aad
sti
cli
int
loope
lret
ds
in
ret
sar
orb
out
shr
out
out
out
xor
aad
clc
fsubrp
cld
bnd
in
loopne
in
mov
xlat
aam
std
xor
hlt
fst
cmp
mov
loop
dec
in
into
xchg
lret
icebp
out
cmc
icebp
lret
stc
aaa
aas
shl
loop
repz
std
call
in
ror
mov
xor
call
cmp
iret
jmp
cmp
fdivr
fadds
int
ljmp
lret
cmp
cmp
cmc
jecxz
xor
call
xchg
out
cld
shr
rol
lret
out
push
shr
ffree
iret
std
out
cmp
imul
mov
cmp
int3
in
aad
enter
or
sub
jecxz
cmpb
fadd
leave
clc
std
lret
out
hlt
jmp
xor
aam
cli
repz
aas
repnz
ds
shl
sti
stc
mov
enter
mov
loope
jecxz
jmp
enter
fdivp
icebp
sti
repnz
into
xlat
and
jecxz
xchg
jmp
aaa
fdivp
fsubr
fidivl
out
rcr
in
int3
faddp
fiadds
icebp
xchg
enter
int
cmp
leave
neg
xlat
aam
shr
fptan
hlt
fcmovnu
fdiv
fimuls
in
repnz
leave
cmc
cli
std
repz
in
cmp
cmp
mov
out
shl
icebp
xchg
xchg
test
ret
repnz
cmp
ret
loopne
icebp
fsub
lds
lock
loope
cmc
int3
hlt
rcl
cmp
cmp
int
cmp
icebp
rcl
mov
adc
xchg
out
lock
xor
xor
xor
aas
ret
loop
out
enter
testb
shll
out
lret
enter
and
mul
clc
xchg
cmc
test
lret
rolb
jecxz
enter
loope
and
in
ret
in
ret
fiaddl
repnz
enter
lret
out
fmul
xlat
cmp
clc
out
jmp
xchg
mov
fmulp
sar
in
sub
fmul
xor
call
fnstcw
in
ret
rcl
int
add
adc
mov
jmp
das
hlt
xor
dec
roll
loopne
fcmovnb
and
ljmp
xor
xor
xor
lret
std
addl
repz
aad
stc
loope
cld
out
les
in
int3
call
sti
loop
cmp
xchg
addl
shl
shl
idivl
into
ljmp
f2xm1
hlt
leave
repnz
loop
jmp
out
mov
ret
ror
iret
lret
imul
into
lret
in
out
out
hlt
hlt
incb
fstp
rcr
popl
into
das
int
out
leave
lret
fnstsw
enter
roll
fadds
test
fucomip
mov
cmp
aaa
cli
ljmp
repz
fcmovnb
clc
xlat
clc
mov
xlat
shl
cs
int
loope
cli
fcmovne
cmp
f2xm1
aam
aad
cmc
ljmp
std
repz
rcr
cli
int
cmp
xlat
sar
hlt
std
sar
hlt
cli
xchg
cli
in
repz
imull
repnz
repz
aas
out
aas
cli
in
fprem1
loop
out
loopne
lea
enter
stc
cmc
hlt
xor
or
lock
incb
xlat
loopne
fstl
sar
int
ljmp
testl
xchg
rolb
add
add
add
or
cmp
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
jmp
iret
ror
aas
aad
iret
shlb
lods
jmp
sbb
xchg
jle
pop
add
xchg
sbb
sub
lret
leave
stc
fnstcw
adc
fld
inc
fdivr
sbb
lret
jmp
shr
fadd
out
sti
fadds
repnz
cmp
fsubp
xchg
lea
lock
shll
imul
cmp
sar
cmp
test
xchg
jmp
jmp
test
xor
shl
hlt
cld
loop
xlat
sbb
mov
cld
xchg
std
mov
loop
ret
repz
sbb
into
in
fiaddl
test
out
jmp
lock
aam
repz
ret
xchg
out
ret
cld
addb
nop
call
loop
out
iret
clc
cld
loope
sti
stc
fcomip
loopne
fcmovbe
lea
shrl
xor
cmp
cli
loope
aad
aam
clc
test
repz
fnstenv
aad
aam
loope
loop
test
neg
jecxz
test
sub
dec
xor
ror
ret
cmp
dec
sbb
test
icebp
xchg
mov
jmp
xor
cli
enter
ds
aam
stc
cld
add
sti
mov
in
icebp
xchg
loope
xchg
sub
lret
ror
div
cmp
fidivl
cmpl
out
xbegin
xchg
iret
shl
int3
out
rcr
lock
aad
aad
loopne
cmp
call
jecxz
in
loop
jecxz
inc
ds
cmp
lret
xor
rol
fdivr
jmp
les
std
mov
xor
in
hlt
int3
cmp
aas
cmpl
fcmovb
fadds
stc
nop
lret
sub
jmp
rcl
div
std
out
loope
inc
cmp
fcmovnu
shr
fstp
xlat
out
ret
xchg
jecxz
in
icebp
ret
jmp
jmp
enter
int3
cmp
stc
into
fcomi
sti
les
cld
call
sar
cmp
in
std
aam
or
test
fcmovb
addl
xor
ret
xor
cmp
cmpl
mov
fdiv
aam
test
call
xor
cmp
enter
out
ljmp
neg
in
leave
addl
aad
div
loop
jmp
int3
lock
hlt
xlat
aad
or
loope
shr
rcll
into
xlat
out
ds
std
rolb
ret
out
divl
enter
fcomip
cmp
shl
loope
stc
in
lret
lea
lea
out
ror
out
cmp
sarb
std
loope
cmc
lret
jmp
loop
into
fdivp
in
xor
xor
out
sti
jmp
fsubp
rcr
mov
call
lret
into
mov
in
out
stc
fiaddl
in
std
out
rcr
loopne
xchg
xchg
lret
lret
out
fdivs
repz
jecxz
loope
ds
in
cld
call
in
lret
out
lret
lock
fidivs
int3
and
rolb
jmp
iret
jmp
xchg
into
neg
ret
cmp
cmp
rcl
ret
lret
fidivrl
xchg
iret
ret
iret
in
ds
stc
clc
int
cmp
cmp
enter
adc
std
mov
ljmp
aaa
loope
int3
out
cmp
shl
out
fildl
xor
cli
lret
icebp
fiadds
ds
xlat
fld
out
fidivrl
div
std
loop
adc
fiaddl
jmp
int
hlt
lock
into
stc
cmp
icebp
fdivr
std
aam
fstp
xlat
mul
loope
mov
mov
out
faddl
in
sti
xor
clc
int3
icebp
fnstsw
leave
test
int3
loop
addb
int
xor
inc
cmp
in
leave
cmp
in
aas
fneni(8087
out
mov
ficoml
sub
shl
ss
fdiv
rol
icebp
icebp
adc
std
hlt
ret
out
in
in
sar
lock
stc
fldt
ljmp
inc
inc
out
add
and
fmulp
out
into
in
xor
ret
in
lret
loope
icebp
cld
loope
into
out
ret
ret
mov
out
jmp
mov
lret
lock
lock
cli
out
rcl
adc
std
in
sti
stc
cmp
mov
xchg
fs
add
fs
add
rol
add
inc
jl
add
cli
je
push
movl
jmp
and
jmp
enter
fcmovnbe
int
pushw
jle
add
lcall
loop
out
xchg
test
xor
lret
in
lret
int
fucom
repz
loopne
imul
aad
in
call
enter
fdivl
stc
das
cmc
in
aaa
lret
aad
sti
in
xlat
cmc
aas
idiv
cmp
xchg
hlt
shl
in
out
fdiv
fdivr
fcomip
fsubr
lret
aam
ljmp
xchg
mov
jmp
in
repnz
aam
xor
int3
out
clc
out
cmp
neg
cmp
and
rol
clc
hlt
mov
in
fdivr
mov
sar
xor
dec
jmp
aas
fidivrs
mov
cmp
icebp
fucom
icebp
loopne
mov
iret
xor
shr
lret
iret
into
cmp
sti
adc
mov
jmp
in
fldl
aaa
xor
ss
into
not
idivl
int3
fildl
mov
cli
loop
jecxz
iret
addb
shr
in
out
fcmove
sarb
idiv
adc
in
ret
in
out
enter
mov
xor
out
rcl
pushl
lret
fmulp
test
sarl
orb
fisubrs
leave
ret
stc
aam
test
stc
ret
test
loope
cmc
lret
les
leave
jmp
out
cmp
repnz
not
cmp
in
sar
testl
lock
ljmp
cmp
dec
std
mov
fisttpl
out
hlt
shl
iret
xor
sar
loopne
fprem
fsub
cmp
ret
out
cmp
mov
out
decl
out
sti
iret
out
repnz
cmp
adc
hlt
loopne
mov
hlt
sbb
into
mov
add
in
cli
ror
in
out
loopne
fnstcw
rcl
sbb
in
mov
out
cmp
out
aam
aaa
lret
cmp
cmp
leave
fcmovnb
popl
rcl
clc
fyl2xp1
in
leave
aaa
xor
int
test
cmp
loopne
mov
and
nop
lock
in
xor
ss
neg
clc
xchg
lea
in
fiaddl
fldl2e
aad
cmp
idivl
cmc
fcomp
test
ds
clc
test
cmp
xchg
sti
stc
std
rcr
enter
adc
sti
fsubp
enter
mov
call
in
ror
fstp
jmp
cmp
into
mov
ret
fsubr
cmp
loope
test
aam
stc
cmp
hlt
cmp
aad
icebp
call
sbb
xchg
xor
shl
icebp
ss
xor
out
imul
cli
out
loopne
hlt
cli
stc
test
ljmp
sub
sub
repz
clc
in
loope
ljmp
mov
out
cli
in
test
into
std
icebp
in
jmp
rcl
fdivl
fmul
cmp
fnstsw
jmp
mov
testb
xchg
les
repnz
std
in
cmp
repnz
ftst
std
orl
int3
out
lock
in
aad
into
fucomp
clc
call
xchg
stc
xchg
cmp
rclb
sub
int
enter
xlat
leave
ss
cmc
and
loope
clc
ljmp
fmul
loop
xlat
fxch
repnz
lret
icebp
shl
fsubr
shl
in
lret
xchg
sub
aaa
aaa
cmp
int3
xor
rcl
rcr
lock
mov
or
mov
jmp
lock
leave
idiv
cmp
fsubr
fcomi
sar
cmp
mul
mov
in
fdivl
cmc
mul
fcmovnbe
out
ljmp
clc
fadd
rcl
xchg
movl
out
xor
lret
out
repnz
xor
aas
loope
call
loop
in
int3
ds
int
shl
cli
fcmovbe
cli
icebp
fmulp
inc
test
std
xlat
out
flds
shll
fld
sti
jmp
leave
out
aad
hlt
lret
in
cmp
fcmovnu
loop
in
in
call
test
ror
xor
repnz
sti
clc
cmp
jecxz
rcr
repnz
mov
out
jecxz
cmc
clc
sub
xlat
fistpll
lock
loopne
shr
fcomip
out
loopne
int
out
xchg
jmp
ret
aam
int3
cs
out
ss
shl
bnd
and
xlat
mov
cli
fsubrp
test
xor
shr
fcom
xlat
fcomip
lret
lock
cmp
ret
cld
test
pop
fs
add
push
fs
add
add
jmp
leave
aam
xlat
in
fsubrl
aad
mov
jl
cld
in
jmp
fucomi
in
xchg
ret
out
int3
in
cmc
hlt
adc
cmp
cmp
cli
adc
pop
xchg
rcr
ljmp
out
jmp
iret
icebp
int3
icebp
fcmovnbe
stc
lret
clc
fcmovnbe
stc
fucomi
test
out
mov
out
jmp
fnsave
aam
ljmp
fdivrp
icebp
fcmovnb
clc
out
icebp
mov
in
out
ss
cld
into
rcr
cmp
aad
clc
jmp
jecxz
mov
cli
test
repnz
shr
xor
cmp
ret
cld
repnz
fsubrp
lret
lret
into
fst
loopne
ds
sub
int3
out
ds
test
sub
test
lea
fimull
int3
fcmovu
into
std
jmp
int3
into
icebp
loop
cmp
xor
fsubrp
lds
rcl
fldcw
cld
iret
cld
cli
call
cmc
shl
loope
in
out
enter
cmp
divb
repnz
xor
sub
fndisi(8087
rol
in
ret
in
jmp
aaa
vaddsubps
fdivs
loopne
fadds
cld
aad
jmp
cld
fcmovu
shl
fcomip
iret
test
out
xor
fidivrs
lret
jecxz
add
cli
lret
mov
in
ljmp
shl
xor
int
test
enter
shl
xor
ret
mov
in
shl
enter
stc
test
lock
push
fdivrl
rcl
loopne
enter
out
xor
rcl
jmp
fidivs
fcomip
cld
xlat
ret
cmp
vpminsw
jmp
ror
mul
in
xor
xlat
out
jecxz
xlat
sti
sti
mov
idivb
std
jecxz
into
or
out
out
in
fdivp
loopne
cmpb
aam
aad
fistl
enter
clc
sarl
aas
ds
in
sti
cld
std
loop
test
movl
shr
into
rol
xor
cli
ds
fucom
rcl
out
flds
jmp
xchg
imull
stc
lret
hlt
out
stc
fnstsw
in
test
test
int
mov
mov
mov
lret
jmp
fstpt
repz
shr
iret
cld
vpaddusw
in
ffreep
in
xchg
mov
ret
jmp
repnz
in
aas
aad
fucomp
rorl
ffreep
loop
mov
iret
xor
ror
out
cmp
cli
iret
std
fildl
fmuls
ljmp
lret
cmp
std
into
flds
test
movl
lock
call
repnz
cmp
xlat
jmp
fninit
aam
fcmovu
icebp
int
lock
mov
fldl2e
cmp
fidivrl
into
in
int3
cmp
cld
loope
out
in
in
roll
lock
mul
xlat
xor
lock
rcl
jecxz
stc
les
in
clc
mov
loop
loopne
ret
enter
cmp
cmp
aam
in
fdivr
not
loope
xor
adc
cmp
in
out
in
xor
stc
cmp
icebp
rcl
loop
std
fdivrs
mov
out
xor
fnstenv
hlt
out
fcom
int
xorb
iret
icebp
push
decl
rcr
int3
fmull
int3
xlat
iret
lock
jecxz
aas
aas
in
and
jmp
mov
std
cld
xchg
int3
cmp
rcr
iret
fsubp
stc
sbb
cmp
out
mov
out
xor
jecxz
cmp
aaa
fmulp
cmp
in
mov
int3
in
cli
fiaddl
shl
xor
shl
ror
iret
rcl
ret
jecxz
fcmovbe
fisttps
out
call
lock
std
xor
cld
sti
rol
rcr
push
stc
sbb
shl
shr
fidivl
aam
jmp
lock
xchg
test
mul
jmp
call
lock
ror
out
lret
stc
sti
in
rcr
cmp
repz
loopne
jmp
out
ficoml
ret
iret
repz
cmp
xor
cmp
loopne
out
lret
out
mov
lret
out
into
out
cmp
cli
in
aas
rcr
cld
fsubr
shl
std
call
or
call
jecxz
loope
jmp
xor
fcomi
fnstsw
ds
rcr
test
sahf
fs
add
add
add
aam
rcl
aam
insb
bound
movsb
jle
pop
add
ret
jmp
int3
ret
nop
xchg
das
int3
lret
stc
ds
jmp
shl
sti
repz
leave
decl
out
out
xchg
out
cmc
lock
ror
int
xlat
aam
fdivp
aaa
cmp
adc
stc
mov
shr
xor
lret
aam
out
ret
xor
sti
cld
cmp
sub
cli
mov
int3
cld
in
jmp
out
rorb
repnz
cmp
cmp
jecxz
loop
rcr
in
mov
ret
lret
jmp
shl
iret
idivb
into
in
cli
loopne
in
int
rol
clc
cld
cmp
jmp
nop
enter
ss
lret
in
rcl
lret
std
cmp
rcr
decl
nop
lret
mov
mov
xor
in
ret
cmp
lret
cmp
test
jmp
out
out
rorl
cmc
idivb
xlat
icebp
out
fbstp
fchs
sbb
jecxz
aas
vpslld
int
lock
hlt
cmc
out
test
enter
rcr
testl
ljmp
xlat
in
imul
xor
cld
int
cmp
int3
repnz
in
rcl
ljmp
imul
shlb
leave
cmp
cmpb
addb
enter
loop
in
in
ret
cli
aad
cs
stc
repnz
cmp
cli
in
in
shr
shr
out
imul
loop
lock
repz
icebp
into
aad
loop
clc
cli
call
loopne
hlt
out
xor
clc
imul
out
sar
cmp
aam
loopne
cld
mov
sbb
mov
mov
fcmove
sti
ljmp
rcl
shl
fcmovb
test
leave
mov
cmp
in
in
fdivr
std
rol
cmp
and
idiv
std
call
lret
iret
test
stc
sub
in
sub
ss
fistpll
iret
ret
rolb
jecxz
loope
lret
fcoml
lret
das
fmul
shl
fcmove
shl
fcom
leave
xchg
decl
out
mov
sub
out
xor
repnz
enter
xlat
lock
out
cmp
into
mov
shl
in
out
lret
call
cmp
loop
cmp
sti
add
cld
icebp
mov
aad
fmul
cld
idiv
not
ret
test
cld
loop
ret
fmuls
in
out
mov
shll
aad
ljmp
clc
out
rolb
cli
leave
out
xchg
roll
repnz
lret
ror
leave
test
sub
ljmp
call
in
fcom
call
sti
cmp
shl
sub
xchg
lea
incb
enter
ror
repnz
aad
fldl
ds
xchg
into
mov
mov
ficoms
ss
xlat
cmp
cmp
in
ror
loop
test
xor
in
in
test
out
xor
aaa
cmp
int3
into
cmp
rol
roll
or
ljmp
lret
lret
cmp
call
xor
mul
clc
rcr
stc
ljmp
xchg
lock
loop
aad
sar
lret
shr
repnz
clc
sar
stc
out
fadds
lret
hlt
shr
imulb
aas
out
jmp
cmp
neg
xchg
and
std
sti
vpcomq
fmul
out
xlat
xor
shl
std
cmc
ret
aad
in
neg
mov
rcl
repnz
call
icebp
jmp
cmp
rcr
aas
filds
hlt
ret
fcmove
mov
in
icebp
loop
loope
loope
aad
std
int3
push
xor
fcmovb
shl
ds
aas
lret
in
in
enter
in
faddp
das
sti
cli
hlt
cld
std
cmp
clc
stc
fistpll
ds
ljmp
xchg
hlt
fucomip
call
cli
out
fmulp
cmp
loope
roll
test
mov
divl
call
stc
std
fcmovnbe
fidivrs
int3
sti
out
ret
lock
fsubrp
test
jmp
cli
mov
shl
in
repz
lret
iret
cmp
call
rcr
cmp
out
fimull
lret
sti
repz
out
aam
lock
iret
iret
imul
loope
lret
aad
int3
cmp
jmp
loope
ljmp
xchg
int
xchg
loope
rcr
iret
fprem
ds
in
cmp
rolb
rol
add
cmc
imul
add
rol
ret
ret
ret
fwait
cmp
iret
stos
jle
pop
add
aad
faddl
clc
cli
lret
decb
xor
ss
lock
call
out
sub
loope
xlat
xor
lock
xor
repz
sarl
out
out
cmc
roll
ljmp
das
shl
cmp
fld
in
in
in
in
into
fildl
out
fdivr
pop
icebp
and
decl
int3
out
in
enter
shl
ffree
rol
addb
in
loopne
mov
loop
xor
clc
leave
lock
cmpl
roll
cmp
test
int3
out
test
cmp
std
out
out
sub
rcr
fildl
fcmovnu
fdivp
lret
in
xor
repz
call
sti
into
in
imul
in
loopne
shr
xchg
aaa
mov
cli
cmp
shl
sarb
hlt
push
flds
out
hlt
in
lret
icebp
ss
dec
shr
xor
cmp
mov
mul
out
jmp
out
rol
xchg
loop
xor
out
int3
in
fnstenv
in
lret
neg
cmp
clc
stc
fadd
sti
mov
mov
sar
divb
xor
clc
aad
cld
int3
fcmovu
cmp
ds
fmull
iret
mov
jmp
aaa
repnz
repnz
rol
jmp
mov
stc
incl
xor
fsqrt
int
idivl
in
aam
cld
cmp
jecxz
jmp
lret
into
fldln2
mov
int
div
aad
test
xor
lret
lock
flds
lret
xchg
out
into
ljmp
out
in
enter
in
xlat
cmp
aad
mov
jmp
hlt
test
icebp
call
lret
rol
out
xor
out
adc
rcr
sar
mov
mov
out
lock
filds
sti
aaa
xor
repz
xorl
rorl
mov
sbb
out
divl
into
repnz
cli
stc
fcomi
test
rcr
shl
sti
sti
xchg
test
mov
repnz
lret
shr
jmp
fmul
cmp
fadds
incl
in
call
call
jmp
lock
cmp
xlat
hlt
jmp
ds
fildl
xchg
shl
ret
icebp
cmp
int
call
xlat
xabort
fildl
sti
lret
shl
leave
loopne
iret
cli
in
rcr
out
fcmovbe
div
test
stc
test
call
mov
aam
cs
in
repnz
sar
loop
lock
out
sbb
fcomip
mov
rcl
mov
leave
out
cmp
xor
jmp
cmp
in
icebp
out
lret
jmp
cli
movl
aad
fcmovnbe
in
repz
xchg
loopne
popl
shl
out
loope
loop
cld
ss
call
xchg
sti
stc
fcom
les
jmp
lret
jecxz
fmul
icebp
xor
cmc
aas
repnz
ret
loopne
out
repz
xchg
jecxz
ret
cmp
aad
cmp
incb
clc
div
stc
idiv
sti
fsubrp
lret
loopne
in
aad
aaa
xor
xor
loopne
cmp
mov
xchg
out
filds
ret
aam
stc
aaa
cmp
out
xlat
lock
in
mov
clc
cmc
lret
loope
in
cmp
aaa
ss
in
cmc
ret
xor
ds
hlt
cld
ss
sub
loop
in
aam
movb
jecxz
out
in
enter
out
int3
aad
fcomip
cmp
fdiv
ret
aas
mov
jmp
out
int3
clc
in
in
call
and
rcr
std
aad
jecxz
cld
mov
test
in
sti
into
in
dec
std
xlat
loopne
in
loop
mov
out
int3
jecxz
lea
in
jmp
out
call
xlat
addl
out
cmp
lret
xchg
int3
jmp
int3
hlt
repz
sti
call
fdivrp
loop
hlt
ss
mov
fimull
mov
out
hlt
repz
out
int
out
xor
in
repnz
call
repnz
clc
aam
stc
clc
xbegin
test
call
xor
cmp
std
roll
orb
call
call
cmp
fistpll
cli
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
orl
jmp
into
ds
rcl
aad
arpl
dec
in
scas
jle
testb
jl
cmp
out
loopne
mov
mov
repnz
xchg
lret
les
cmp
lds
lock
enter
loope
cmp
jmp
loop
test
cld
icebp
sub
fcomip
loope
cld
rcr
rcl
enter
int
loopne
fucom
fsubr
loope
not
out
in
xor
clc
cld
imul
adc
in
cmc
xchg
lds
repnz
repnz
out
out
fyl2xp1
enter
hlt
fcmovu
addl
test
enter
mov
into
xor
out
int
out
test
sub
and
addb
sub
lock
ss
enter
rol
fdivp
vmovq
jmp
lock
or
out
aaa
shl
clc
leave
cld
clc
loope
fdiv
cmp
into
aas
rorl
loop
loop
movb
xor
int3
hlt
out
cs
lock
repz
cmp
cmc
xchg
aas
xlat
or
in
in
ror
aad
repnz
ror
icebp
not
sti
cmp
cmp
aas
test
add
lret
lock
jmp
loopne
ret
fidivrl
xor
hlt
loopne
icebp
ret
rcr
cmc
cmp
test
std
std
fists
in
stc
cmp
jmp
cld
neg
cmp
in
test
mov
jmp
call
icebp
lret
repnz
adc
aas
sbb
idiv
neg
mov
nop
loopne
jmp
loop
fdivr
int
lret
ss
in
icebp
fstpt
mov
out
fisttpll
in
ljmp
out
cmp
cmp
shr
loop
fmull
jmp
test
call
in
sar
into
sarb
cmc
aad
in
fcmovnu
repz
cld
mov
clc
test
test
jecxz
cmc
lock
stc
lret
repz
imul
icebp
fnstcw
xlat
clc
out
leave
les
fsub
xor
jecxz
neg
hlt
fidivrs
idiv
loop
testb
jmp
cmc
out
into
aad
idivb
xlat
xor
cmc
cmc
fucomi
test
loop
mov
leave
loope
fst
out
mov
shl
clc
aaa
loop
out
iret
lret
sar
cli
fadd
xlat
fildl
sti
leave
lock
out
cmc
shl
call
cmp
xlat
sbb
aad
out
repnz
rol
cmc
jmp
std
in
mov
xor
int
repnz
cli
shr
test
test
sti
loopne
testb
mov
cld
int
in
shr
hlt
lret
cmp
cmp
cmp
fsub
jecxz
in
rolb
in
cmp
shlb
icebp
cmc
cli
div
aas
shl
fstp
ljmp
mov
xchg
xor
divl
aam
lret
int
cmp
in
hlt
xlat
xchg
aas
jmp
int3
jmp
icebp
clc
mov
rcl
sti
sarb
cmp
in
jmp
std
faddl
lret
rcl
jmp
shr
aam
cmp
out
fnstsw
loopne
aad
shl
repz
xlat
xchg
loopne
xchg
xchg
lret
leave
icebp
cli
cmp
repnz
shl
out
leave
hlt
test
std
call
stc
xor
xor
shr
neg
cmp
in
aam
call
and
rol
lds
std
out
cmp
cmp
fptan
lds
in
out
out
mov
cmp
ljmp
repnz
loopne
fcmovnu
out
cli
out
fsub
lock
aad
xor
repz
repnz
fcmovu
and
icebp
hlt
cld
ffree
fsqrt
iret
loopne
out
cmc
cmc
jmp
enter
cmc
xlat
hlt
cmc
hlt
cmp
sbb
aad
ljmp
cmc
jecxz
in
imul
out
fnstsw
clc
sarb
jecxz
lock
testl
fmul
call
repnz
clc
lret
stc
repz
shl
rcl
mul
ret
or
out
nop
std
rclb
lock
icebp
jecxz
repz
ljmp
in
rorl
call
cld
sbb
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
imul
mov
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
push
andl
push
subl
push
xorl
xor
lea
xor
movl
or
andl
xor
add
adcl
push
orl
lea
subl
push
push
xorl
lea
movl
inc
subl
xor
negl
xor
call
movl
movl
mov
mov
jmp
adcl
xor
movl
xor
sbb
xor
addl
xor
movl
incl
mov
mov
cmp
jb
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jb
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
andl
movl
sub
lea
mov
sbb
mov
mov
and
lea
neg
mov
xor
or
sub
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
movzwl
sub
mov
mov
mov
add
mov
add
xor
mov
add
not
mov
mov
mov
cmp
mov
movl
mov
movl
je
sub
mov
xor
add
adcl
imul
mov
movl
jmp
sbbl
xor
movl
add
mov
xor
mov
mov
sub
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
add
mov
xorl
mov
xor
mov
orl
xor
movl
add
movl
cmp
movl
jne
push
pushl
andl
pushl
andl
call
mov
mov
mov
xorl
mov
mov
mov
mov
movl
movl
andl
mov
and
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
mov
xorl
xor
sbbl
add
movl
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
xorl
xor
sub
lea
mov
mov
xor
orl
lea
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
and
mov
movl
mov
movl
or
mov
mov
xor
addl
add
cmp
movl
je
xor
mov
xor
addl
add
add
mov
mov
mov
sub
and
mov
xor
and
mov
orl
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
xor
add
adc
add
mov
movl
cmp
ja
mov
and
mov
movzwl
sub
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
push
push
call
mov
dec
mov
jmp
orl
imul
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
xor
add
and
mov
xor
adc
add
add
mov
mov
mov
mov
mov
mov
sub
or
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
push
mov
call
pushl
pushl
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
push
movl
mov
movl
mov
mov
push
not
mov
movzbl
mov
cmp
movl
je
mov
mov
xor
addl
add
cmp
je
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
xor
add
push
mov
adc
pushl
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
push
movl
mov
mov
sbbl
add
andl
xor
movl
cmp
jne
and
mov
mov
movl
add
mov
mov
mov
movl
xor
and
push
xor
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movzbl
adc
mov
xor
mov
addl
xor
subl
add
movl
mov
mov
movl
movl
mov
movl
push
mov
movl
mov
cmp
movl
je
orl
mov
addl
xor
adcl
xor
xorl
lea
negl
xor
movl
cmp
movl
jne
jmp
add
mov
xor
addl
add
andl
mov
movl
mov
xor
and
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
adc
movl
dec
movl
mov
push
mov
adc
xor
mov
add
mov
xor
or
mov
add
mov
push
push
adcl
test
movl
je
mov
mov
mov
sbb
mov
mov
imul
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
sbbl
mov
add
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbbl
mov
xchg
sub
xor
orl
mov
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
sub
mov
xor
sub
xor
add
mov
movl
mov
movl
je
andl
mov
xorl
xor
andl
add
cmp
jne
adcl
pushl
call
subl
mov
movzwl
add
mov
mov
mov
or
mov
sbbl
mov
xor
andl
add
cmp
je
pushl
pushl
orl
call
movl
mov
mov
add
mov
xorl
xor
add
movl
cmp
movl
je
orl
mov
mov
mov
sbb
mov
mov
notl
add
movzwl
sbb
mov
sub
mov
subl
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
orl
mov
mov
subl
add
adc
xor
mov
sub
mov
xor
add
mov
sub
mov
add
xorl
lea
mov
xorl
push
pushl
subl
pushl
orl
call
mov
xor
add
sub
mov
mov
notl
xor
decl
add
movl
cmp
movl
jne
inc
mov
movl
inc
movl
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
