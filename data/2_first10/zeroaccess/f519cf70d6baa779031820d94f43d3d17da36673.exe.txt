push
mov
sub
push
add
push
adc
push
adc
xor
sbb
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
push
mov
pop
push
call
push
andl
push
push
push
push
xorl
push
sbbl
call
push
addl
push
push
push
sbbl
push
push
push
incl
call
addl
dec
movl
jne
push
sbbl
push
push
andl
call
test
je
mov
adc
imul
mov
mov
movl
mov
movl
cmp
jne
addl
movl
pushl
subl
pushl
andl
pushl
xorl
call
mov
mov
or
mov
xor
mov
mov
sub
movl
lea
xor
mov
lea
mov
addl
mov
mov
adc
mov
mov
add
mov
mov
xor
mov
xor
mov
adcl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
xor
add
mov
xor
mov
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
mov
or
mov
xor
add
or
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
or
adc
mov
xor
xor
mov
sbb
mov
xor
mov
mov
mov
sub
mov
orl
mov
movl
add
mov
xor
add
mov
add
mov
andl
mov
adcl
xor
xor
sbbl
add
movzbl
and
mov
xor
lea
cmp
ja
or
mov
mov
xor
mov
sbbl
xor
andl
lea
subl
push
sbb
mov
xorl
xor
lea
orl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
mov
andl
pushl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jb
xor
lea
mov
mov
decl
xor
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
movzbl
sub
mov
mov
xorl
xor
lea
mov
cmp
movl
jbe
add
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
mov
xor
mov
sub
andl
xor
mov
not
mov
movl
cmp
movl
jne
addl
lea
andl
mov
lea
addl
mov
mov
xorl
test
movl
je
adc
mov
mov
mov
sub
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
sub
cltd
mov
mov
mov
or
add
mov
adc
andl
subl
xor
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
mov
dec
mov
jmp
not
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
negl
add
mov
mov
movl
adcl
xor
addl
mov
mov
xor
movl
mov
cmp
movl
jne
mov
mov
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
negl
mov
movl
mov
andl
xor
add
movl
adc
andl
xor
addl
xor
movl
cmp
movl
jne
cmp
jne
mov
addl
mov
andl
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
addl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
xorl
add
movl
jmp
movl
mov
movl
cmp
je
mov
mov
orl
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
movl
mov
mov
mov
adcl
pushl
addl
mov
pushl
addl
add
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
mov
mov
orl
pushl
call
mov
mov
movl
mov
movl
jmp
adc
mov
sub
mov
andl
xor
subl
add
cmp
jne
add
mov
movzwl
sbb
mov
adcl
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
andl
push
xor
movl
add
xorl
push
xorl
push
andl
pushl
adcl
pushl
sbbl
call
add
mov
mov
sub
mov
or
mov
sub
mov
adc
mov
xor
mov
sub
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
incl
mov
mov
mov
mov
mov
mov
mov
sbb
movl
mov
xor
decl
add
mov
sbb
mov
mov
or
mov
mov
and
mov
mov
push
sbb
pop
orl
sub
add
xorl
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
mov
lea
lea
xor
cmp
jne
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
mov
movl
movl
movl
movl
mov
mov
mov
andl
mov
movl
mov
mov
xor
mov
orl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
xor
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
inc
ret
push
mov
push
movl
movl
mov
addl
mov
add
xor
cmp
movl
jne
add
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
xorl
push
adcl
push
addl
push
push
andl
lea
push
push
adcl
call
push
call
sub
movl
xorl
movl
mov
mov
xor
mov
xorl
add
mov
sbb
mov
test
je
mov
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
add
movzbl
and
xchg
sbb
mov
movl
sub
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
add
mov
sub
mov
sub
xor
add
mov
sub
mov
mov
xor
xor
add
add
mov
movzbl
sbb
mov
mov
adc
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
or
mov
orl
sub
addl
lea
xor
andl
xor
movl
cmp
movl
je
sub
mov
xorl
xor
adcl
add
cmp
jne
orl
pushl
call
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
inc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
add
cmp
movl
je
adcl
pushl
addl
pushl
negl
call
mov
xor
mov
add
mov
subl
xor
subl
add
cmp
je
or
mov
mov
adc
mov
mov
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
jmp
or
xchg
xchg
pushf
cmp
or
jl
jl
pop
jl
adc
and
imul
xor
fsubp
push
dec
imul
bound
iret
pop
dec
and
dec
jg
jb
jg
movsb
cmp
ljmp
cld
push
jg
in
cmp
mov
mov
mulps
fldl
lock
sub
dec
push
sub
mov
test
jmp
lret
sbb
jp
arpl
lcall
xor
cmpb
jae
fsubrl
push
jecxz
mov
mov
out
push
dec
push
and
cmp
lods
dec
int3
cmpsl
xor
push
pop
std
push
pop
movsl
stc
push
cli
inc
add
loopne
cmp
roll
or
xchg
sub
loope
push
xorb
xor
jo
frstor
pop
sahf
jb
lods
and
mov
and
clc
aam
movsb
fisubl
mov
push
in
xchg
and
test
jl
inc
xchg
jmp
sub
cmp
int3
mov
or
adc
aas
lcall
xchg
cmpsb
jnp
pop
insb
cmp
movb
dec
mov
push
dec
mov
cli
fsts
dec
popf
dec
xor
shll
in
test
inc
lods
jg
pop
push
pushl
mov
lock
adc
cmp
adc
inc
mov
outsl
pop
int3
lret
or
xor
cli
rorb
cltd
xchg
pop
in
mov
push
or
outsb
add
mov
mov
data16
jae
mov
push
cmpsl
mov
imul
test
sub
xor
ljmp
les
std
cmp
push
sbb
dec
and
push
sarb
add
sahf
repz
mov
dec
mov
xchg
aaa
stos
aas
hlt
shll
cmp
in
repnz
out
daa
jns
adc
pop
mov
adc
popa
sub
push
xchg
pop
fs
lcall
jmp
push
or
dec
in
push
sub
and
mov
sti
mov
pop
push
jb
xchg
sub
je
dec
xchg
xchg
test
push
les
dec
cwtl
pop
add
sub
shrl
xchg
push
inc
enter
lahf
repnz
or
loop
push
clc
mov
sub
movd
bound
push
or
jg
dec
cmc
arpl
inc
fwait
mov
sbb
push
dec
pop
adc
loopne
scas
rcrb
pop
std
inc
movsb
mov
and
sub
push
xchg
aas
xor
or
rorl
mov
pop
das
xchg
jnp
and
cld
lods
cmp
ds
dec
lds
je
out
jp
jmp
andl
lret
icebp
pushw
in
mov
hlt
push
and
fistl
movsb
ss
ljmp
mov
out
dec
pop
jl
adc
arpl
push
jge
lods
adc
or
push
pop
pop
lret
xchg
stos
cmpsl
in
addr16
xor
mov
mov
jmp
lods
aad
xchg
fimull
jnp
or
mov
ss
mov
fwait
lods
pop
dec
loope
xchg
in
pop
adc
fcmovnbe
call
scas
xchg
les
mov
mov
pushf
loop
inc
jne
bswap
sub
and
or
in
xchg
sbb
adc
js
or
cwtl
fwait
xor
lahf
shlb
or
add
dec
out
push
adc
shlb
and
push
or
cmp
xchg
and
or
pop
movsb
jne
jae
dec
jno
add
repnz
adc
xchg
or
adc
ret
pop
mov
xchg
cmp
dec
pop
aam
jae
mov
add
sub
cmc
pop
mov
jae
cli
xchg
adc
push
cmpsl
pop
aaa
or
mov
clc
lcall
adc
stc
or
push
xchg
cmp
jg
sub
lahf
lahf
or
jmp
fld
xlat
fcomps
mov
or
repnz
pop
and
out
insb
cmp
xchg
mov
inc
xor
sbb
adc
shrb
xchg
mov
and
push
xor
sbb
cmp
jno
lret
cltd
xchg
cmpsb
and
mov
std
pop
std
loop
cmpsb
cwtl
imul
lret
mov
sbb
je
push
fisubl
xchg
bnd
mov
or
mov
lds
movsb
dec
xor
cwtl
bound
push
mov
cmpsl
pusha
xchg
xchg
fbld
ja
fcmovb
jb
mov
inc
outsl
sub
movsb
adc
pop
movsl
cmc
dec
add
insb
das
cld
jecxz
data16
push
xchg
mov
popf
and
fidivrs
dec
divb
mov
fimuls
jbe
popf
jmp
xchg
pop
jno
jns,pn
pushf
xchg
cwtl
mov
pop
inc
cmp
pop
mov
pop
xor
ret
mov
or
les
ljmp
lods
outsb
outsl
mov
sub
and
ljmp
inc
in
notl
mov
aas
lea
jecxz
fsubrl
and
pop
mov
je
stos
xor
inc
mov
mov
cmp
fists
ds
mov
repnz
push
push
cmpsl
out
xchg
stc
movsb
jne
add
sahf
sarb
cwtl
mov
sbb
push
mov
xor
xchg
cld
call
mov
or
xchg
clc
xlat
mov
stos
subb
ret
mov
sbb
jbe
int3
jae
mov
in
mov
sub
pop
jne
jb
pop
dec
pop
in
lea
clc
ret
and
aaa
adc
lcall
imul
aam
pop
cmp
xor
out
jno
xor
sbb
mov
cmp
mov
in
aas
pop
push
sahf
sbb
or
or
testl
movsl
inc
push
negb
jo
pop
inc
ss
addr16
jp
mov
jp
adc
dec
xchg
lret
inc
mov
test
jg
add
out
mov
add
neg
lret
repz
scas
test
fldl
repz
lea
test
inc
andl
in
in
cmpsb
stos
mov
std
push
inc
mov
fsubrs
xor
rcrl
xchg
sbb
ljmp
jne
pop
pop
lahf
imul
jl
or
add
insl
ret
outsb
inc
sti
mov
fs
loope
subl
mov
hlt
repnz
in
subl
sub
sbb
out
negl
bndstx
inc
mov
sub
out
push
mov
flds
mov
ficoms
mov
cwtl
push
sti
push
jns
jnp
xor
sub
int
push
mov
sarb
or
stos
xchg
rcll
loop
popa
andb
pop
lods
inc
rcrb
mov
inc
lds
push
test
in
xchg
dec
mov
xor
lret
mov
cltd
xchg
out
add
test
lret
rol
clc
cmpsl
setnp
fldt
push
inc
sub
cmpsl
mov
mov
dec
inc
idiv
jnp
sub
repnz
jg
out
or
jp
jl
and
mov
sbb
fcmovnbe
mov
xchg
xchg
and
stos
in
and
mov
xchg
jmp
data16
fcom
out
scas
xorb
call
push
inc
xchg
addr16
sti
and
inc
sbbl
cmp
add
adc
xchg
std
in
mov
adc
sti
lea
ret
out
repz
mov
imul
push
pop
mov
dec
in
dec
push
icebp
iret
mov
and
mov
cmpl
mov
fimull
jno
jg
aad
jbe
in
test
xor
adc
xor
cli
cli
xor
cmp
xor
leave
movl
outsl
in
fs
cltd
imul
in
mov
sti
push
or
adc
xchg
pop
fdivs
pop
sbb
pop
cmp
push
scas
jne
push
dec
incl
xor
out
adc
inc
ss
lock
das
or
inc
dec
lods
fwait
adc
faddl
sbb
cmp
jne
notl
enter
mov
or
cmp
push
add
adc
movl
mov
dec
sti
or
std
addl
loop
hlt
xchg
inc
sbb
lods
push
sti
xor
shrb
stc
mov
xor
mov
mov
mov
in
or
jne
cmpsb
js
mov
aam
add
out
insl
mov
push
aaa
lahf
je
repnz
adc
rcll
ss
lret
xchg
movsl
pop
sbb
add
jae
adc
jle
and
cmp
inc
or
push
fldt
mov
sbb
fs
mov
pop
into
pushf
xor
cld
xchg
mov
subb
addr16
inc
add
ljmp
fildll
out
xchg
orb
arpl
in
out
lods
popa
stc
dec
jmp
xor
lock
rclb
pop
out
pusha
cmpsl
mov
test
xchg
and
sub
sbb
out
addr16
scas
adc
into
das
bnd
push
outsb
and
outsb
out
int
sub
ret
mov
add
loope
mov
pop
sbb
leave
bound
fstl
push
ss
movsb
ja
xor
jl
jno
fs
and
loopne
lock
scas
adc
or
push
push
sbb
lret
xor
add
mov
out
pop
xlat
iret
jmp
mov
and
mov
subl
xchg
gs
xchg
scas
pop
xchg
sbb
sub
in
xchg
and
nop
mov
mov
jle
insb
cld
ret
or
push
push
int
adc
add
inc
fmull
and
xor
inc
sbb
idivl
mov
lods
popf
mov
mov
push
leave
aas
xchg
loop
out
adc
cmp
lret
test
outsb
imul
test
pushf
enter
adc
jecxz
aam
in
mov
out
movsb
mov
popf
cwtl
jmp
pop
pop
cmp
sarl
jle
into
jbe
loopne
add
push
bndldx
dec
arpl
xchg
sub
xor
mov
dec
pop
lret
or
push
and
xor
jmp
push
mov
pop
insl
inc
xchg
jo
fwait
pop
in
mov
lds
and
adc
and
mov
jl
jae
mov
or
sbb
arpl
mov
xchg
jne
outsl
cmp
icebp
mov
test
pop
test
enter
xchg
ficomps
insb
clc
mov
sub
sub
sub
xchg
mov
adc
cmp
mov
mov
or
xchg
outsl
xorb
xor
push
adc
sahf
push
int3
fisubs
repnz
fwait
les
push
lcall
cs
cmp
pop
sahf
mov
cwtl
sub
dec
and
mov
into
mov
jno
sbb
cwtl
and
and
jge
mov
fidivrs
xchg
mov
pushl
loop
jnp
mov
pushl
stos
and
shrb
xor
sbb
cmp
lods
push
lcall
adc
inc
jge
testl
sub
sub
mov
jge
imul
pop
push
xorl
std
ds
dec
push
lahf
sti
jae
movsl
rclb
mov
sub
lods
stos
mov
add
pop
iret
pop
fstpl
mov
std
cmp
inc
jle
push
adc
rclb
aad
stos
lds
adc
pop
or
pusha
xchg
jne
adc
push
push
loopne
inc
hlt
cmpsb
loopne
mov
cmc
test
mov
sub
outsb
hlt
dec
enter
lcall
sahf
test
mull
cmp
fiaddl
addl
ljmp
fs
jo
adc
xor
push
push
leave
nop
iret
mov
mov
addr16
add
aaa
or
pop
stos
es
xor
sub
int3
lcall
mov
sbb
mov
xor
inc
mov
sbb
add
push
rorl
inc
push
pop
popf
dec
jae
adc
xor
dec
mov
jmp
lahf
mov
incb
mov
rorl
mov
stos
out
lock
iret
pop
hlt
mov
gs
jnp
fisubl
sub
push
mov
or
popf
adc
insb
dec
push
enter
cmc
push
or
or
jecxz
fdivrp
or
jg
cmpsl
icebp
mov
add
or
flds
and
adc
divl
insb
repnz
sbb
push
jmp
dec
push
shrb
add
lds
fmull
dec
test
dec
add
push
add
test
sbb
enter
cltd
inc
ret
xchg
out
adc
pop
ss
sub
mov
mov
fcomps
popa
inc
push
xor
subb
pop
dec
scas
out
pop
into
jl
jecxz
fbstp
cmp
dec
jb
popa
dec
jbe
push
flds
lea
xchg
jns
push
ja
jl
dec
movzbl
movsl
js
daa
pushf
and
pop
dec
lahf
scas
push
nop
lcall
das
lods
hlt
test
mov
shrl
jmp
enter
mov
mov
jle
movsb
je
imul
dec
adc
testb
sbb
fistps
cmp
xchg
lcall
dec
or
pop
rcll
cmp
dec
mov
stc
adcl
mov
daa
push
or
push
sbbl
ret
and
ljmp
mov
jbe
pushw
jno
bound
mov
adc
in
mov
xchg
iret
scas
add
inc
frstor
push
ret
pusha
add
stc
and
jecxz
mov
scas
test
call
test
mov
fmul
sbb
mov
mov
stc
cmp
popf
test
shr
fs
cmp
dec
dec
jecxz
inc
jo
mov
xor
sub
add
shll
test
jmp
sub
into
sbb
dec
jae
dec
xchg
ret
mov
loopne
in
xlat
pop
dec
mov
popa
xor
and
add
out
and
and
add
cmp
outsl
fisubrs
clc
ss
incl
or
int3
and
cs
ficoml
enter
aad
cmp
in
mov
xor
das
mov
cmp
sub
sbb
mov
sbbb
push
addb
inc
dec
sub
cmp
mov
aam
jecxz
pop
es
iret
fs
in
adc
mov
cltd
xchg
mov
js
movl
lock
fwait
adc
inc
pusha
stc
aad
mov
cmp
ror
sahf
call
push
mov
mov
imul
sub
fucomip
into
clc
sahf
das
rol
std
mov
add
sbbl
dec
jns
dec
push
mov
jp
subb
dec
or
icebp
lret
inc
inc
bound
dec
or
icebp
push
js
jbe
sbb
jle
xchg
mov
sub
in
jl,pt
xor
adc
cli
adc
cli
imul
dec
or
and
mov
popf
mov
push
mov
sub
add
ja
push
hlt
push
testl
stos
jge
mov
add
lcall
cmp
sub
adc
aaa
insb
xor
mov
fcompl
inc
or
out
dec
imul
or
add
mov
jge
ds
mov
inc
imulb
xchg
xor
cmpsb
push
out
test
ja
or
sbb
xchg
fs
mov
jns
out
sub
dec
jmp
mov
aas
movl
fbstp
fcompl
or
push
push
loop
push
das
idiv
mov
xchg
int3
leave
or
push
outsl
in
or
out
bound
cld
adc
ss
adc
addr16
adc
enter
xor
pop
pop
int3
clc
hlt
addr16
or
or
mov
mov
xor
scas
cmpsb
int
cmp
lret
fsubrl
shll
ret
decb
lret
testb
inc
adc
and
jae
pop
mov
je
imul
stos
sub
jge
dec
in
add
xchg
sub
icebp
mov
fidivs
popf
iret
icebp
aas
xchg
les
fstpt
loop
test
insb
pop
lret
sar
xor
cmp
scas
int
iret
out
shrb
inc
out
cmp
sbb
out
roll
xchg
xchg
mov
out
and
dec
pop
stc
sbb
jae
dec
or
xor
fucomp
dec
jmp
les
inc
sub
mov
inc
push
mov
cld
and
out
repnz
mov
js
adc
add
cli
add
notb
jmp
xchg
mov
sub
pop
shlb
jmp
test
jns
sub
cli
push
into
jbe
scas
add
lock
jo
repnz
ds
lcall
sbb
int3
and
std
inc
dec
insl
outsb
test
fmuls
pop
push
sarb
ljmp
dec
push
mov
mov
adc
test
adc
inc
push
cli
call
mov
rol
icebp
sbb
xor
mov
aaa
into
ret
push
push
push
sbb
orb
jae
xor
mov
in
jge
xchg
jge
mov
fsubrp
cmpsl
into
and
pop
dec
add
and
dec
aas
cmc
and
int
xor
pop
insb
pop
inc
negb
xchg
decl
ret
cmp
inc
pusha
or
push
test
aad
aas
dec
jecxz
test
xor
cmpsl
sbb
jne
into
sub
aaa
ljmp
fmuls
ss
cmp
pop
push
pop
clc
fldenv
lds
lods
sbb
xchg
mov
sbb
jne
push
stos
mov
jno
stos
cmc
cmp
pop
pop
or
xchg
adc
andl
xchg
add
test
sub
xor
xor
mov
inc
dec
mov
xchg
jo
aaa
ljmp
push
mov
fs
sbb
dec
xor
in
call
pop
and
int
push
cmpl
inc
cmpsl
xchg
pop
aas
adc
mov
xchg
out
xlat
out
je
dec
sbb
mov
sbb
mov
jle
adc
or
pop
test
add
test
stc
mov
es
mov
icebp
jmp
insb
sahf
push
lods
sti
cmp
cwtl
dec
test
jae
jae
sahf
xor
movb
out
sbb
push
sbb
fs
push
cwtl
xlat
stc
mov
idivb
aad
in
mov
adc
add
in
push
shlb
pop
or
and
push
addr16
loop
push
fmul
cmpsb
jle
pop
jl
mov
inc
loopne
imul
scas
stc
call
pop
leave
mov
hlt
xchg
sahf
xchg
inc
ret
add
push
mov
adc
stos
pop
xchg
out
lock
insb
add
jecxz
hlt
nop
dec
add
jle
dec
adc
out
lret
push
sub
adc
pusha
repnz
test
lods
inc
insb
shrl
adc
push
and
push
inc
xchg
mov
movsb
fistl
fwait
sbb
mov
stc
loop
push
or
pop
nop
jecxz
sub
arpl
mov
pop
push
jle
mulb
push
arpl
insl
sub
mov
jnp
jl
inc
fs
stos
pop
testl
jg
cmp
xchg
sbb
jbe
sahf
inc
dec
lea
fldl
xor
push
sbb
xchg
fcmovnbe
jae
xchg
jnp
add
out
sahf
repz
adc
xchg
aas
jle
mulb
mov
inc
jmp
fldl
push
jb
or
push
adc
jecxz
adc
sbb
and
push
imul
or
imul
fwait
mov
cmp
shll
xchg
xor
clc
dec
decl
xchg
xor
jb
pusha
push
int3
sarb
mov
mov
push
mov
ficomps
push
adc
pushf
mov
cltd
pushf
and
mov
imul
rcrb
mov
push
mov
push
mov
xchg
pop
sub
sbb
mov
dec
push
mov
test
outsb
push
data16
jecxz
lret
mov
lods
dec
imul
test
arpl
lods
xorb
adc
or
fsubs
mov
jns
lock
push
jb
aam
shl
dec
sbb
mov
lret
call
push
sbbb
inc
outsl
cmpsl
pop
mov
xchg
mov
es
nop
jl
imul
xchg
test
aad
mov
add
std
daa
arpl
lods
inc
jns
cmpsb
xor
std
mov
jmp
rcrb
fwait
xchg
shl
mov
test
push
out
sti
mov
roll
mov
and
bound
adc
mov
pop
cmp
push
arpl
out
mov
mov
das
jecxz,pn
or
in
lcall
and
sub
xchg
adcb
jecxz
fiaddl
out
adc
adc
and
ret
pop
push
mov
add
mov
or
pushw
push
sub
cmpsb
xchg
jmp
es
lods
loop
inc
sbb
xchg
xchg
dec
jp
mov
cli
mov
jg
aaa
out
mov
or
jp
aas
fiaddl
sub
xor
sarb
mov
outsb
rol
in
bnd
lea
jbe
hlt
xchg
call
and
sbb
mov
lock
adc
mov
cltd
jo
push
imul
add
push
mov
iret
xchg
push
nop
lods
inc
jnp
push
sub
cmpsb
ffree
xchg
xor
lods
xchg
fiadds
fwait
mov
sbb
and
and
arpl
adc
fnsave
sbb
pop
xchg
mov
jne
lods
sbb
ficoml
test
fdivrs
inc
loopne
inc
roll
sub
ds
lods
stos
jno
popa
ds
mov
fbld
cmpsb
rorb
mov
sti
jge
ljmp
inc
sbb
mov
push
cmp
sbbl
xchg
jmp
lcall
orb
xchg
pop
enter
fisttpll
sub
push
push
dec
stos
inc
xchg
jno
in
shll
dec
dec
loopne
std
jo
lcall
cwtl
mov
push
fs
adcb
and
std
rolb
cmp
fwait
testb
or
adc
les
test
dec
mov
insb
ret
push
inc
xchg
xor
jecxz
xor
int
add
scas
cmpsb
pop
enter
mov
sar
stc
lret
cltd
out
cmp
call
repnz
mov
leave
pop
in
call
mov
sub
sysenter
sub
ds
pusha
imul
mov
or
pop
jp
push
pushl
and
pusha
popa
ss
sbb
test
sahf
mov
dec
pop
cmp
loope
cmp
sahf
clc
fimuls
pop
or
pop
inc
cli
je
fsubs
fnsave
xchg
lds
lcall
out
mov
sahf
push
and
push
cmpsb
cmpsb
adc
pop
jmp
into
cld
cld
insl
cmp
je
and
cmpsl
jno
push
push
jbe
lret
adc
test
xchg
aad
sbb
mov
insl
jmp
xlat
js
test
das
mov
and
xor
push
test
add
fidivrl
aas
orb
ja
mov
outsl
dec
add
sub
jns
pop
sub
stos
push
testl
imul
lcall
cmp
xor
and
pusha
cmp
adc
loopne
or
push
add
adc
lds
cmp
dec
test
stos
mov
out
ja
and
inc
push
data16
leave
outsl
aaa
ficoms
scas
in
int3
cmpsb
push
fs
and
jl
adc
test
push
xor
cmp
rorb
jp
mov
pushf
cmc
out
sti
fs
mov
push
leave
cmc
sub
push
mov
cld
push
mov
push
pop
mov
mov
cmpsb
push
mov
and
cmp
in
push
je
mov
fiadds
inc
lods
sub
and
cmp
out
xchg
inc
inc
push
pop
fld
sub
repnz
push
cli
ja
inc
loope
jmp
sbb
mov
mov
cmp
std
cmp
lret
cmpsl
sub
push
sbb
les
int
out
and
push
rcrl
rcrb
mov
xchg
lea
jp
jnp
out
cli
or
aam
adc
int3
int3
in
out
xor
rorb
cli
pop
mov
cltd
test
adc
mov
in
jge
push
jo
sub
jns
scas
daa
sbb
pop
fsts
push
jge
loope
jmp
cmpps
dec
mov
mov
dec
cltd
adc
outsl
mov
mov
out
adc
popf
sub
inc
mov
inc
or
jne
jge
push
sbb
inc
dec
pop
xchg
stos
aas
outsl
or
adcb
repnz
test
pop
daa
cmc
pop
pop
mov
xor
fistpl
shll
jbe
icebp
jno
lea
and
or
jg
pop
dec
mov
sbb
and
xchg
adc
xor
in
je
xlat
inc
adc
cmc
mov
aaa
push
pop
mov
int
mov
movsb
jl
sbb
push
dec
cltd
testl
and
loop
and
xchg
pusha
xor
adc
jp
jns
dec
push
inc
push
outsl
mov
xor
test
es
loop
je
movsl
sar
xor
inc
jl
nop
stc
sbb
sbbb
shrb
jmp
and
jns
shlb
iret
cs
and
lcall
shrb
mov
rcll
add
xor
mov
jb
sub
nop
jmp
or
pop
pop
int3
call
dec
out
in
dec
or
dec
and
jmp
push
mov
lret
lea
imul
mov
fnclex
and
or
out
roll
jle
inc
aas
jo
push
jne
aaa
imull
mov
jb
and
mov
xchg
test
lock
das
daa
add
andb
andb
movsb
shrd
ret
and
pop
cmp
xor
xchg
repz
push
cwtl
lods
incb
adc
rclb
pop
dec
jle
jmp
and
out
test
adc
icebp
sbb
add
imul
mov
insl
inc
fistl
jbe
icebp
cltd
cmpsl
mov
lahf
fwait
stc
aam
xchg
push
pop
mov
cmc
fstpl
sub
sbb
lcall
add
push
movsl
popf
sub
ja
das
andb
mov
pop
addr16
dec
cmp
sub
push
or
dec
mov
das
cmp
daa
shrb
movsb
push
mov
lahf
jmp
jo
mov
adc
jg
in
jmp
cmp
add
lds
popa
pop
pusha
xlat
repz
aad
and
cmc
inc
mov
ret
loop
adc
rorb
cmpsl
jle
das
inc
mov
xchg
movsb
pop
pop
das
jle
iret
inc
add
int3
stos
or
mov
xchg
add
stc
add
bnd
lret
daa
mov
pushf
stos
jge
fisubrl
cmp
push
adc
add
push
pop
pop
mov
jge
xchg
adc
xchg
lret
mov
push
xchg
dec
or
popf
es
fidivrl
pop
push
or
loope
dec
xlat
jl,pt
mov
jp
and
neg
lahf
or
repz
icebp
into
pop
jge
jle
repnz
out
inc
int
test
lods
sub
clc
test
adc
push
imul
sub
mov
mov
cmpsb
mov
popl
and
and
mov
sub
adc
or
mov
daa
arpl
jns
mov
mov
cmp
shlb
mov
daa
pop
mov
mov
mov
jg
push
dec
icebp
int
add
pop
fldt
and
add
jp
rcrb
ds
jns
xor
inc
fidivl
mov
daa
jae
popf
adc
push
test
jge
data16
scas
add
fildll
pop
inc
scas
xchg
adc
lods
repnz
and
push
xlat
gs
repnz
dec
int3
call
xor
mov
pop
call
and
inc
aas
mov
data16
xchg
pusha
mov
add
push
cmp
ret
daa
dec
sbb
in
iret
movsb
xor
in
push
pop
jle
dec
fs
inc
lods
push
rcrb
fists
push
sbb
xor
aad
cmove
insl
push
jnp
push
cmpsl
popf
push
pop
sbb
push
bound
fdivrl
push
dec
pop
addr16
andl
push
jb
test
and
das
fsub
fwait
sbb
xchg
pop
adc
scas
inc
insl
fstpl
clc
pop
loope
fdivs
rcr
fwait
sarb
aad
xor
push
rol
outsb
shr
mov
insl
cmp
push
adc
inc
ffreep
inc
inc
pop
and
andb
jle
xchg
dec
fucom
lahf
pop
cld
movsl
lret
adc
mov
xchg
sub
xchg
jl
dec
add
in
inc
jbe
mov
xor
fdivrs
push
dec
dec
shlb
movsb
mov
mov
sarb
mov
mov
mov
or
dec
loopne
xor
jo
bound
add
cmpsb
pop
aaa
push
and
call
jbe
into
inc
repz
cs
pop
push
cwtl
sub
xchg
push
in
mov
cmp
jb
test
stc
sbb
lds
add
sti
push
mov
mov
adc
enter
cmpsb
sub
sub
into
mov
sub
xor
test
loop
aad
insl
lods
dec
adc
jns
fyl2x
andb
int
adc
sub
rcrl
sub
outsl
mov
pop
rorb
xor
lods
fldcw
pusha
stc
cmpb
mov
sub
and
xchg
in
clc
jmp
ret
or
filds
ret
test
lahf
xchg
jnp
jbe
inc
cmp
in
and
sub
or
mov
xor
push
divb
or
sti
mov
mov
add
pop
lret
out
inc
ret
repnz
xchg
adc
xor
je
push
andl
popf
adc
ret
stos
mull
mov
pop
ja
outsb
and
sbb
mov
int
enter
fiadds
ss
or
stos
jne
std
xor
inc
jmp
arpl
sub
adc
push
inc
jbe
aaa
jbe
cmp
cmp
mov
jmp
mov
add
es
movsb
repz
sub
and
push
stos
sbb
ret
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
movl
xor
or
mov
and
lea
mov
push
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
lea
mov
or
mov
and
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
addl
mov
add
sbbl
push
xor
mov
mov
movzbl
sub
mov
mov
adc
xor
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
movl
cmp
movl
jne
push
jmp
mov
movzwl
mov
cmp
jne
mov
incl
xor
add
mov
adcl
mov
mov
xor
sbbl
add
imul
and
mov
andl
xor
add
cmp
movzbl
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
jmp
imul
stos
sbb
pop
ja
pop
jl
dec
pop
jl
fistps
loop
int
mov
pop
mov
mov
xor
xchg
mov
in
mov
arpl
or
sbb
push
cmp
pop
jecxz
or
mov
lret
es
lret
aas
mov
iret
sub
bound
jl
scas
movsl
pushf
pop
mov
mov
xor
shll
mov
jno
stc
int3
loope
sbb
or
pop
iret
mov
out
dec
aad
xchg
mov
xchg
stos
push
out
clc
sbb
jnp
outsl
jl
mov
fdivs
push
pop
xor
scas
sbb
xor
xor
push
call
outsl
or
insb
fnstcw
adc
and
mov
sub
packsswb
inc
movsl
int3
pop
push
fistl
pop
push
scas
cmp
nop
mov
insl
cmpsb
dec
cmp
or
add
out
jae
add
dec
sbb
insl
scas
add
adc
pop
rorl
sub
fidivrl
test
icebp
fsubl
pop
dec
scas
mov
pop
ss
sbb
insl
ret
mov
cmp
stos
sysret
enter
leave
add
into
out
fs
push
dec
add
pop
lods
mov
cli
inc
das
cmpsb
pushf
sbb
dec
in
arpl
outsl
fsub
dec
mov
jg
pop
ja
sti
inc
xchg
cli
shrl
lods
pop
xor
in
inc
lods
out
ret
lret
xchg
fildll
inc
imul
mov
add
dec
sbb
inc
xrelease
dec
adc
adc
ret
pop
push
sub
pop
xchg
mov
mov
pusha
cmp
imul
inc
out
adc
test
imul
sar
in
je
sahf
pop
fs
mov
test
je
xchg
mov
call
and
mov
mov
jo
xchg
loope
cmpl
lock
mov
fst
add
mov
xchg
stos
mov
setbe
sub
fnsave
and
mov
dec
push
push
pop
out
sbb
fimuls
jbe
xchg
subl
add
mov
push
stc
push
mov
xor
inc
call
ret
rclb
push
hlt
inc
repz
clc
sbb
insl
call
ret
shlb
mov
add
cmpl
fnstcw
cwtl
xor
inc
imul
sbb
push
jns
or
inc
mov
push
cmp
pop
add
add
and
cmpsl
xor
xchg
adc
in
call
cmp
test
lds
insb
push
add
push
add
adc
and
mov
push
call
jns
imul
scas
and
or
sub
lds
mov
pop
pop
das
jle
adc
cmp
xor
insb
mov
sbb
movsb
cmc
jns
lret
pop
adc
ret
adc
or
subl
outsb
inc
xor
jp
insb
fs
mov
aaa
jecxz
iret
cli
cltd
dec
cmp
loope
lock
shr
nop
dec
pop
repnz
shl
cmp
pop
and
xchg
mov
jne
cli
sbb
xchg
rclb
mov
call
jo
adc
in
xor
cltd
in
push
jnp
out
push
xor
mov
adc
je
mov
inc
pandn
pushf
arpl
add
sbb
mov
or
mov
push
jno
xchg
out
xchg
xchg
lret
and
iret
test
mov
lret
pop
push
mov
add
add
cmp
fldt
push
jb
call
mov
push
test
push
ja
push
pop
cmp
out
push
mov
and
jno
movsb
sub
mov
rcrb
in
scas
rcll
hlt
insl
stos
pop
and
movsl
ret
ret
xchg
mov
mov
cmpsb
ja
mov
inc
pop
xor
lret
mov
pop
movl
push
sub
mov
lcall
inc
call
lods
dec
jns
sbb
mov
sti
dec
inc
subl
and
sarb
dec
jne
inc
cmp
vunpcklps
fidivrl
aad
mov
stos
push
imul
lret
mov
ljmp
loope
sbb
mov
mov
data16
data16
das
adc
enter
dec
adc
xchg
aas
mov
mov
cmpsb
or
inc
data16
cmpsl
call
jo
dec
mov
add
je
add
xchg
icebp
dec
int
mov
pop
jne
or
cwtl
fldl
test
addb
jb
lods
cmp
sahf
mov
fisttpll
push
lods
add
push
daa
pushf
mov
and
xor
inc
sbb
push
xor
ficomps
imull
loopne
jae
sahf
movsl
or
mov
fisttpl
dec
mov
cmc
and
out
mov
imul
movsb
flds
rcrl
outsb
add
and
mov
rclb
andl
lret
jne
movsl
data16
fs
xchg
pusha
inc
xchg
xor
bound
cmp
mov
cmpsb
jmp
cmp
pop
or
sbb
sub
cltd
or
icebp
lods
into
adc
loop
outsl
cmp
sbb
mov
ss
xchg
add
dec
mov
test
pop
ljmp
hlt
sbb
inc
sbb
and
mov
pop
mov
add
jge
push
not
sbb
xor
xor
cli
pop
xor
nop
mov
jg
inc
sub
shll
ret
cs
insb
mov
jae
mov
or
in
cltd
cmp
adc
sbb
out
inc
pop
clc
or
stc
adc
out
out
mov
mov
inc
std
enter
js
sti
pushf
lahf
pop
sar
repnz
roll
xlat
inc
insl
adc
ficoms
sbb
push
xlat
push
out
subb
es
inc
push
xor
xchg
test
xor
and
icebp
leave
adc
in
dec
bnd
int
adc
fsts
jae
push
xchg
jnp
xchg
dec
cmp
andb
mov
pop
ds
sbb
jge
and
ret
or
rclb
cltd
or
sub
sub
scas
mov
scas
xchg
pop
stos
cltd
mov
outsl
jmp
adc
cmc
test
or
cwtl
adc
int
insb
jbe
adc
pop
push
mov
push
lds
scas
loop
lcall
jb
inc
incb
mov
movsl
bound
push
in
and
or
jb
xchg
xor
add
gs
stos
push
adc
stc
mov
adc
jle
mov
lahf
insb
scas
call
arpl
xchg
in
jae
dec
mov
dec
push
lods
pop
jae
shlb
push
mov
cmc
xor
or
xchg
rorl
cmpsl
cmp
ret
cmpsl
ljmp
dec
pushf
sbb
pop
hlt
daa
nop
xchg
testb
cmp
imul
adc
ret
xchg
and
insl
cmp
adc
sbb
aam
xchg
lock
rclb
ror
sbb
sbb
mov
test
lock
jae
movb
int3
inc
outsl
in
mov
pop
push
adc
popf
stos
lea
xchg
sbb
push
test
push
notb
das
fsubrs
add
lret
fildl
inc
xchg
fstpt
stc
addr16
push
out
movsb
mov
or
jp
add
push
iret
pop
imul
inc
scas
jne
leave
mov
movsl
cmc
stos
xor
jnp
or
mov
fsubs
xchg
test
clc
sbb
push
sub
add
adc
pop
leave
shlb
shlb
outsb
add
fsub
arpl
fiaddl
jns
lret
jbe
add
int3
push
adc
in
xchg
test
or
jecxz
les
clc
pop
aas
subl
pushf
inc
dec
sub
mov
xor
dec
xlat
int
jno
inc
fidivs
adc
jno
xor
loopne
insl
push
fadds
mov
idivb
pop
mov
imul
outsl
dec
inc
pop
jns
ss
stos
sti
mov
lret
dec
imul
aam
pop
pop
cmp
je
or
mov
idivb
inc
repnz
or
ja
fistl
dec
push
repnz
sub
mulb
add
jmp
adc
sbb
mov
ljmp
cmpsb
dec
lret
fdivs
mov
mov
outsb
stos
xchg
pop
fs
repnz
clc
daa
ljmp
lods
out
enter
sub
subb
lods
pushf
lock
or
pop
adc
psadbw
mov
movsb
iret
shrb
xchg
push
je
lods
mov
pop
in
fdivrs
fsubs
pop
xor
mov
jnp
int3
or
aas
sarb
xchg
xlat
and
or
cmp
shlb
js
lods
sbb
stos
push
mov
inc
aad
popl
inc
fucomp
mul
add
jne
aas
std
push
sbb
ret
or
and
add
fs
dec
xchg
mov
adc
sbb
xor
push
hlt
repnz
inc
cmpsl
cld
pop
pop
addr16
nop
imul
ret
push
pop
mov
mov
popl
les
xlat
rorl
push
es
pop
das
adc
jge
pop
jnp
and
push
cltd
and
ror
mov
inc
mov
sub
dec
cmp
mov
dec
ret
daa
popf
ja
add
pusha
out
xor
sbb
cmpsl
dec
adc
loop
or
and
mov
shrb
push
adc
pop
rorb
mulb
mov
jns
ljmp
add
inc
jmp
leave
fs
cmp
adc
xchg
movsb
lcall
ret
push
sbb
mov
sub
and
movsl
leave
mov
mov
jbe
sar
add
cld
dec
in
fisubl
stos
neg
cmp
xor
scas
dec
adc
int3
iret
es
mov
pop
fcoms
xor
mov
fcmovnu
in
cmp
or
es
out
push
sbb
insb
or
lret
repnz
lret
or
or
xchg
push
movsl
es
mov
std
adc
jno
shrb
aas
push
sbb
mov
jo
stos
xor
pop
xor
mov
cmpl
ss
test
fs
xchg
push
add
cwtl
jge
mov
int3
jo
je
mov
in
cmp
adc
stos
sahf
and
xchg
bound
repnz
xor
cmp
jle
sub
mov
and
xor
aaa
clc
loopne
mov
xchg
adc
push
sar
es
pushaw
push
cmpsb
out
mov
sti
jmp
aad
xlat
insb
inc
aad
ds
test
pop
jmp
jnp
js
xlat
jo
jns
test
xor
aam
mov
shrb
cmp
arpl
pop
stos
mov
mov
outsl
ljmp
cmp
add
push
test
adc
out
mov
movsl
mov
loopne
mov
xchg
mov
outsl
mov
repz
mov
pop
or
mov
ss
daa
fildll
daa
jmp
lods
inc
jge,pt
gs
ret
cmp
add
into
pop
aaa
and
inc
inc
push
push
pop
loope
jbe
hlt
jo
jne
leave
and
xchg
mov
lret
lret
mov
jno
or
dec
add
push
outsl
out
sbb
aam
insl
mov
pop
mov
ja
inc
xor
and
mov
mov
std
bound
repnz
mov
inc
add
lcall
movsb
xlat
pop
ss
pop
sahf
cmpsb
int3
divb
test
push
dec
add
adc
mov
sub
xchg
leave
add
sarb
or
popa
and
ja
push
lods
ss
cmp
sbb
mov
push
and
jp
fcomi
mov
mov
add
sub
pop
push
xor
lea
adc
add
loope
xlat
jnp
not
sub
pop
scas
call
scas
filds
cli
movsb
jp
test
insl
repnz
push
pop
loope
movsb
xchg
mov
aad
cmp
inc
sbb
movb
cltd
and
pop
push
icebp
mul
pushf
push
inc
bound
in
jns
jno
push
pop
inc
cmpsb
xchg
sarb
je
mov
daa
cwtl
outsb
inc
jle
movl
and
sub
test
xchg
mov
cmp
out
call
clc
dec
xchg
dec
sbb
fstenv
push
insb
jnp
push
icebp
aas
insl
pop
fwait
dec
cmp
int
js
jecxz
stos
mov
outsb
test
sub
mov
push
push
sbb
pop
pop
mov
dec
pop
movsb
mov
cmpsl
mov
lea
sbb
and
inc
adc
icebp
aam
loop
mov
push
pop
mov
sbb
mov
call
pop
mov
xor
test
test
int3
push
scas
iret
into
ret
movsl
dec
adc
aad
movsl
repnz
out
lret
js
push
sbb
cmp
ret
xchg
adc
sub
aam
jg
sbb
sub
insl
and
mov
fnsave
shrl
pop
imul
cmp
pop
xor
mov
pop
aad
adc
and
out
mov
fisttps
scas
add
cli
out
jecxz
lods
idivl
jg
in
out
pop
pushl
mov
mov
add
mov
add
into
xor
leave
pop
xchg
addl
lea
push
call
clc
sbb
pushf
sbb
mov
scas
sub
rol
lds
fnstenv
mov
push
push
mov
daa
mov
push
xchg
out
repz
nop
aad
mov
je
cmp
hlt
mov
mov
cltd
xchg
push
cmp
xor
mov
adc
inc
xchg
inc
push
pop
and
incl
gs
sbb
mov
and
adc
ljmp
add
js
push
mov
jo
bound
pop
mov
enter
push
out
push
pop
sbb
out
in
int3
add
add
cld
stc
xchg
sbb
xorl
sub
repz
jmp
in
jl
and
pop
jmp
push
and
ficoms
or
mov
cmpl
or
sarb
in
sbb
addl
in
pushf
jge
sbb
jbe
and
repz
push
cmp
cmp
aaa
dec
outsb
add
mov
hlt
es
sbb
xor
ss
push
jg
leave
and
mov
add
outsb
mov
test
jmp
loop
inc
shl
subb
inc
fs
push
sbb
mov
add
cmp
clc
xor
push
adc
push
mov
mov
cmp
aas
mov
aas
mov
hlt
sbb
fsub
and
adc
add
inc
stos
or
xor
jne
cmpsb
repz
sbb
push
fldt
push
popf
push
orl
jmp
dec
pop
push
sarl
sub
inc
sub
imulb
mov
push
icebp
sbb
fnstcw
jbe
xchg
loopne
scas
pop
jg
xor
in
xor
or
inc
mov
popa
fimull
cwtl
mov
popa
imul
hlt
les
testb
faddl
add
rcll
ljmp
mov
das
outsb
jns
scas
add
iret
jb
out
xlat
sub
insl
sahf
pop
shl
rorb
lods
sbb
les
xlat
ficomps
sub
xorl
pop
int3
and
and
ljmp
sbb
dec
rorl
sbb
filds
and
repz
or
aad
stc
jp
xor
inc
mov
jno
movsl
imul
push
lock
inc
stos
ss
aas
mov
sub
pop
js
jae
sub
jno
movsb
loop
movsb
push
mov
cld
jno
sub
cmp
and
je
add
out
mov
scas
dec
aaa
aaa
mov
rorb
dec
adc
ja
cmp
aaa
and
lret
jmp
scas
movsl
xchg
sahf
aam
jne
cmp
cmpsl
int3
push
mov
aam
and
rol
mov
dec
pop
das
mov
das
loopne
ret
or
mov
jns
sbb
ficoml
inc
outsb
test
sarl
jl
and
lcall
sub
shlb
add
jmp
mov
roll
sahf
aad
in
jno
fisubrs
lods
shrb
mov
adc
xchg
shlb
rcrl
insl
shrb
dec
movl
test
test
lds
les
shr
xor
in
mov
add
leave
xchg
jle
test
mov
aaa
cli
mov
int3
fstpt
inc
mov
lcall
cmpsl
outsb
push
adc
gs
jno
mov
leave
out
out
push
or
rolb
movb
jp
jge
loopne
das
mov
ret
cld
pop
sahf
mull
adc
mulb
cmp
cmp
adc
in
repz
mov
sub
int3
sub
pusha
pop
je
testb
jnp
jae
or
lahf
push
inc
and
jp
adc
orl
xchg
jp
pop
and
lods
in
aad
push
mov
push
stos
divb
movsb
jb
orb
iret
add
mov
add
xchg
mov
lds
out
lods
in
cwtl
out
call
decb
pop
xchg
cmpsb
and
lods
mov
adc
mov
scas
mov
or
daa
jnp
movsl
jne
xchg
cmp
mov
cmp
insb
and
xor
fsubrl
sarb
adc
xchg
notb
imull
cli
icebp
inc
pop
jle
addr16
in
mov
xor
sbb
xchg
mov
sahf
mov
mov
pushf
mov
mov
nop
sbb
sub
jl
cmp
inc
mov
ss
pusha
popf
inc
and
push
fninit
fwait
pop
or
fs
pop
mov
orl
popl
mov
nop
repz
js
jp
cmpsb
je
adc
arpl
out
shlb
in
push
push
stos
dec
mov
xchg
sti
lahf
jbe
jae
stos
push
popa
xchg
inc
ds
mov
mov
push
jo
lahf
sbb
cwtl
addr16
jns
and
in
and
je
adc
mov
pop
xchg
orl
test
mov
add
popa
sbb
ret
or
das
fmuls
shlb
sbbl
inc
js
mov
daa
ljmp
jp
mov
andb
out
mov
push
leave
lahf
pop
pop
js
test
push
aad
jp
lcall
addr16
xchg
mov
rorb
popa
mov
ror
mov
xor
xchg
push
mov
in
mov
insl
sbb
cmp
mov
sti
push
lahf
pop
and
loop
icebp
in
cwtl
or
xor
sbb
xor
aaa
mov
hlt
xchg
adc
or
push
dec
sub
or
mov
pop
frstor
or
jmp
cmp
pop
lcall
js
xchg
cmp
jle
jmp
addr16
lock
stos
xchg
pop
in
jno
or
jmp
loopne
cmpsl
mov
pop
clc
repz
out
adc
cmp
xchg
mov
pop
push
cld
fcomps
adc
push
inc
mov
sbb
mov
les
add
loop
add
cmp
js
sub
mov
mov
repz
sub
fwait
dec
xchg
js
adc
adc
into
cs
test
rcll
out
inc
mov
aam
loope
xchg
or
xchg
in
pop
and
mov
push
mov
inc
push
hlt
test
mov
cmp
jns
out
push
in
push
mov
jmp
jne
ds
daa
out
add
sti
mov
out
lret
loop
imul
mov
dec
mov
pop
imul
daa
add
sbb
popf
jns
lock
sub
popa
dec
and
sub
pop
pop
repnz
cmp
movsl
stc
movq
mov
cmpsl
int
shrb
popf
mov
lods
xor
ds
shlb
mov
test
sub
push
mov
xchg
bound
hlt
cmp
jp
add
push
sub
scas
stos
fwait
cmpsl
out
clc
fidivl
mov
mov
iret
dec
and
cmp
cmc
loope
jnp
mov
mov
mov
jl
addr16
sub
or
sub
in
gs
inc
jnp
jo
sbb
mov
mov
xor
sub
sub
mov
sti
clc
fadds
push
push
mov
stos
inc
clc
aad
cli
aad
and
sbb
sbb
outsb
inc
addl
sub
mov
dec
mov
mov
mov
push
stc
jae
jae
mov
dec
mov
cmpsb
sahf
sbb
aam
push
rcll
ficoml
clc
insb
or
mov
lock
xchg
lahf
leave
push
cmp
sbb
roll
outsl
test
dec
push
loope
push
mov
pop
xchg
jp
shlb
enter
xor
adc
cld
stos
sub
xchg
lods
add
cmp
test
lret
shr
pop
ds
xchg
xchg
sub
sahf
pop
lret
sub
rclb
pop
mov
mov
mov
xor
enter
orb
lds
mov
sub
aas
xorl
in
cli
cmp
test
sarl
sub
bound
mov
add
popa
sbb
mov
jmp
inc
mov
jns
insl
inc
sub
orl
cmp
lods
pop
mov
pop
xor
shlb
or
dec
pop
aam
mov
sub
push
stc
push
into
ds
stos
xchg
or
mov
push
imul
add
rcr
mov
dec
pusha
mov
out
daa
push
aad
je
adc
add
test
shrb
jp
mov
jo
mov
and
pop
mov
or
loope
inc
pop
xchg
jns
sbb
or
pop
aad
xchg
out
mov
jmp
out
mov
pop
fidivrs
and
ds
jg
dec
outsb
int3
sbb
aaa
dec
cmc
jbe
out
xchg
loop
lcall
fbstp
pop
jb
or
push
inc
iret
out
adc
repnz
sbb
insl
test
cld
imul
mov
out
inc
mov
outsl
mov
cmpsb
mov
insl
lea
and
aas
jg,pt
xor
adc
int
cld
adc
sbb
pusha
vmovaps
cmpsb
data16
add
jge
push
adcb
mov
xor
jbe
and
lock
sbb
jmp
dec
lcall
push
cwtl
nop
sbb
dec
faddl
aad
popa
and
and
sub
push
ffree
adc
scas
leave
out
rorb
add
push
aam
decl
add
out
jb
add
cmp
inc
addb
inc
mov
add
xchg
sub
xor
dec
push
push
imul
hlt
jne
dec
js
xchg
mov
mov
fdivl
dec
xor
sbb
or
add
push
pop
mov
push
stos
add
popa
hlt
hlt
mov
lock
pop
ret
xchg
pop
lods
test
mov
mov
xor
inc
fadds
in
jo
xlat
inc
push
pop
add
rcrl
push
imul
push
adc
sbb
hlt
add
jecxz
loopne
push
in
add
mov
in
out
and
pop
dec
pop
insb
jmp
sahf
inc
imulb
adc
add
mov
add
jbe
push
scas
push
lret
rol
loop
setae
xor
add
and
pop
push
out
and
pop
sub
inc
lret
push
into
mov
cld
test
add
js
mov
sub
ss
ficomps
inc
popf
cltd
bound
repz
mov
arpl
aam
jno
ret
das
pusha
pop
and
xchg
std
mov
push
sbb
jb
cli
lret
test
mov
push
stos
shll
popl
adc
cmp
frndint
insl
dec
push
xchg
rcrb
mov
xor
cwtl
jmp
ljmp
sbb
insb
js
and
pop
divb
cs
lock
jmp
inc
lds
and
insb
lret
and
inc
lret
test
jne
sub
mov
jmp
loop
cmp
or
pop
jge
mov
cmp
leave
add
in
sbb
cltd
mov
outsl
jmp
pop
js
or
mov
add
xor
add
mov
cmc
push
sub
cwtl
adc
hlt
sahf
add
data16
ret
pop
inc
add
xchg
jnp
add
pop
dec
lods
adc
cli
mov
lds
dec
mov
pop
bound
add
outsl
cwtl
add
lds
xchg
test
xchg
dec
cmpsb
test
stos
adcl
or
dec
ljmp
shrb
neg
aad
cld
into
mov
cmove
mov
imul
jns
imul
test
pop
loopne
mov
int3
push
jns
leave
xchg
add
out
and
outsb
xchg
in
dec
test
daa
adc
popa
popf
sbb
daa
out
push
out
popf
arpl
mov
mov
in
pop
push
fadds
sar
mulps
dec
adc
cs
adc
ss
jmp
addl
fbld
sti
clc
mov
sub
dec
jb
movb
stos
cmp
or
lock
jb
lret
psubusw
sarb
bound
sbb
mov
jno
mov
adc
adc
mov
mov
movsb
sarb
lds
popa
push
mov
mov
loop
in
das
cmp
and
or
or
add
and
ja
repnz
add
jbe
inc
dec
inc
jmp
mov
adc
insb
jb
sti
lcall
aas
inc
loope
loopne
jmp
std
lret
ljmp
movb
in
pop
andl
push
iret
int
gs
dec
xchg
or
cmpsb
dec
dec
push
dec
xchg
fcomi
sbb
shll
inc
sbb
dec
fsubl
push
pop
or
sbb
and
fnstcw
fnclex
mov
xchg
lds
fcompl
data16
lahf
mov
pusha
insl
mov
lret
aam
cltd
fucomip
mov
push
sub
pop
leave
test
data16
push
pusha
xor
lds
stc
adc
and
jmp
adc
int
sub
stos
rcll
pop
aam
cli
cmp
fildl
or
mov
loope
xchg
data16
push
ljmp
jecxz
cmp
fildll
subl
daa
leave
int3
orl
in
cmpsb
mov
mov
nop
mov
mov
jnp
xchg
movsl
pop
insb
sbb
psubusb
xor
mov
stos
push
movsb
pusha
sbb
mov
or
push
popf
cmp
pop
dec
xor
sub
rcrl
jecxz
dec
pop
sub
hlt
jmp
sbb
mov
dec
repz
mov
sbbl
jne
jae
dec
repnz
mov
outsl
aaa
adcb
mov
arpl
lea
icebp
lds
inc
sbb
ror
mov
iret
pop
dec
jl
sbbb
adc
fcmovne
sbb
mov
stos
mov
rcrb
xadd
icebp
xchg
lods
jne
cwtl
push
call
imul
jo
xor
xor
push
sahf
dec
or
sbbl
mov
js
push
jmp
daa
or
push
ja
arpl
pop
and
sbb
sub
nop
sub
xor
enter
pop
add
insb
punpckhdq
nop
loop
fs
or
movsl
ret
push
inc
mov
sub
mov
push
ss
cmp
push
adc
pushf
cli
negb
add
loopne
mov
sub
jne
pop
fnstenv
cmpsl
mov
jno
mov
pop
adc
fwait
leave
xchg
push
pop
pop
push
jl
sbb
mov
xchg
adc
into
dec
push
ret
cs
push
repz
add
mov
test
xchg
leave
mov
push
pop
push
mov
stos
jle
dec
nop
cli
fwait
lods
mov
outsb
mov
add
outsl
les
scas
sarl
mov
cmp
rcrl
cltd
dec
hlt
xchg
in
cld
or
and
rclb
and
mov
fxch
mov
or
in
sbb
addl
xor
into
cld
call
pop
mov
mov
call
lock
pop
cwtl
addr16
cs
jmp
data16
je
and
mov
cmp
and
out
lds
test
adc
fldl
daa
push
jne
push
bound
sbb
sahf
mov
lock
pop
fmul
and
jmp
jae
jl
fcmovnu
mov
lds
jle
and
hlt
bound
sub
ja
xlat
mov
mov
aad
fisubs
cmp
divb
hlt
mov
inc
das
push
aad
int3
out
xchg
xor
sub
addr16
ds
pusha
test
pop
iret
jmp
xchg
dec
jp
xchg
mov
push
push
sub
ss
movsb
push
push
sbb
sahf
dec
cwtl
pop
xchg
mov
lahf
in
into
inc
loopne
jbe
test
jg
lds
sbb
dec
mov
repz
or
sbb
in
or
cmp
cld
sbb
or
data16
or
mov
movsb
mov
imul
pop
mov
pop
sub
clc
out
loop
adc
dec
mov
data16
bound
pusha
jno
jge
jecxz
dec
adc
movsb
sbb
sbb
push
jle
std
ss
pop
imul
adc
fucomi
dec
imul
pushf
cvtpi2ps
pop
ja
lret
out
cltd
and
loope
into
mov
fimuls
mov
subb
add
sub
les
pop
pop
imul
jle
dec
test
clc
jns
cli
in
sub
sbb
inc
iret
je
js
mov
sarl
add
popa
cmp
sbb
or
mov
sahf
xchg
bound
add
xlat
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
andl
mov
mov
mov
xor
add
mov
movzwl
and
mov
mov
sbbl
xor
adc
push
sub
mov
movzwl
sbb
mov
negl
add
xorl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
push
call
jmp
and
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
push
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
mov
in
xor
mov
fwait
add
and
pop
jl
dec
aaa
enter
inc
xor
pusha
je
out
daa
add
jle
dec
add
xor
or
fsubrs
add
pusha
pop
sub
call
flds
out
and
add
add
sbb
test
lahf
int3
xchg
std
jne
mov
scas
cmc
and
enter
push
sbb
int
jno
fsubrs
xor
test
test
fwait
xchg
push
bound
in
fildll
cmp
mov
adc
test
add
xor
or
cmp
or
popa
mov
sbb
popa
sub
xor
mov
dec
xchg
rclb
sub
mov
add
jle
lahf
bound
mov
pop
stos
jmp
pop
pop
lret
gs
cld
testl
movsl
shl
push
mov
movsl
pop
xchg
pop
jg
and
lea
or
negl
cli
test
xchg
jbe
xor
inc
test
popl
push
add
cld
jb
test
ljmp
pop
divl
jns
add
mov
in
or
adc
cltd
push
mov
sub
jno
stos
test
icebp
ss
adc
xchg
lock
sub
js
mov
scas
movl
pop
inc
leave
aaa
add
cmpsb
jp
add
push
add
sub
dec
fwait
roll
cmp
sub
mov
stos
push
push
fwait
mov
or
add
mov
std
popf
pop
leave
lea
movsl
ret
or
sbb
mov
add
pop
or
jo
push
notb
aas
jmp
pusha
ljmp
cs
sbb
sarl
xchg
xchg
add
mov
stc
dec
push
bt
xor
mov
and
ja
addb
or
jbe
mov
dec
jle
pop
and
xor
pop
dec
add
sbb
push
sub
mov
or
cmpsl
pop
aad
add
loope
pop
push
pop
xchg
xchg
jmp
sbb
sbb
loope,pt
daa
mov
insb
popf
out
push
sub
rcrl
xchg
adcl
sbb
push
cs
push
dec
dec
cmpsl
inc
jns
cmp
das
mov
rcrb
mov
or
lock
pop
sub
psubd
pusha
rcr
and
jle
inc
scas
das
inc
inc
cwtl
ljmp
sbb
insb
jne
jbe
push
aad
jecxz
and
loopne
push
and
jae
shlb
mov
cmp
cmp
adc
hlt
add
or
fistpll
inc
or
addr16
push
mov
les
adc
sbb
push
es
xchg
cmpsl
fidivs
cmc
inc
pop
outsb
repz
shl
rclb
cs
ja
xchg
xchg
mov
fistl
lock
pop
dec
cmpsb
push
xchg
mov
jb
jo
adc
ror
out
adc
repnz
in
aad
cltd
outsb
std
adc
je
jb
and
mov
ret
jecxz
cmp
cmpsl
in
xlat
test
adc
stos
dec
scas
subb
sbb
fidivrl
dec
outsw
mov
or
movsb
sbb
inc
sbb
pop
xchg
in
arpl
hlt
mov
pop
adc
adc
xlat
sbb
inc
xchg
adcl
jbe
sahf
inc
push
imul
mov
jg
cmp
and
jb
in
out
idivb
jnp
call
pop
xor
in
ja
movsb
sbb
cmpsb
mov
sub
inc
mov
movsb
mulb
lret
aam
int3
inc
cmpsb
popw
cs
shrl
aaa
hlt
cmp
mov
nop
mov
pop
pop
lret
cmp
cmp
pop
mov
imul
dec
loop,pn
adc
mull
fbld
test
out
mov
lret
call
aas
outsb
int
aad
jmp
aad
adc
mov
pop
fs
jbe
sub
fmulp
adc
add
adc
inc
or
mov
rcrl
andb
testb
scas
mov
cmp
push
stos
addr16
aaa
cmp
pop
fists
cmpsb
jbe
idivb
movsl
out
arpl
and
jbe
push
shrb
mov
fisubl
call
jl
and
jae
fstpt
outsb
lds
and
add
pushf
mov
and
scas
mov
add
sub
add
outsl
mov
les
mov
inc
mov
adc
adc
xchg
push
es
test
repnz
andl
ss
aas
popf
dec
sub
in
pop
leave
lret
sti
pushf
imul
adc
sti
add
stos
add
inc
or
or
xchg
sub
aad
std
test
push
lret
icebp
rorb
jb
jo
push
call
insb
inc
fcmovnb
jns
jnp
iret
cli
cli
imul
adc
incl
mov
iret
adc
xor
ja
int
inc
aam
inc
or
sbb
jae
xchg
adc
jecxz
xor
es
mov
mulps
mov
out
sbb
add
test
and
leave
test
shlb
xchg
filds
mov
fcomps
lret
loop
xor
mov
fs
in
mov
dec
sbb
jo
xchg
inc
inc
jnp
mov
enter
cmp
lods
sbb
mov
sub
loopne
cmp
pop
and
xchg
sbb
out
lret
pop
inc
xchg
lahf
or
repnz
and
sub
hlt
jecxz
outsl
mov
cmpsb
iret
push
mov
mov
incb
push
or
mov
pop
jnp
insb
mov
loop
and
scas
loopne
in
jae
sub
jmp
daa
loope
add
sbb
lods
sub
scas
pop
imul
lcall
sarl
leave
sti
sbbl
fdivrs
jl
jle
cli
test
push
mov
nop
add
sbb
adc
cmp
xchg
outsl
ljmp
ljmp
cmpb
cld
test
cmpsl
push
pop
das
dec
xor
and
sbb
icebp
out
jmp
nop
daa
pop
cs
push
mov
xor
ds
mov
pop
lods
fidivrl
xchg
frstor
mov
pop
orl
aad
es
jle
or
mov
jg
out
pop
push
gs
stos
inc
jge
add
adc
fidivrs
and
fs
xchg
rol
add
ja
lcall
push
les
push
jne
lahf
rol
jg
push
cmp
popf
test
in
add
int3
adc
loopne
fwait
movsl
bound
push
lods
xor
and
xor
inc
cmc
loope
aaa
pop
int3
hlt
xchg
mov
scas
adc
scas
int
mov
pop
cmp
lret
lgs
mov
sti
fcmovb
iret
aad
mov
push
das
push
mov
call
or
repnz
scas
dec
mov
dec
es
jg
mov
push
sahf
iret
sbb
xor
pop
pop
push
add
fs
inc
addb
andb
dec
inc
gs
js
mov
dec
pop
movl
add
clc
mov
xor
dec
fisubs
dec
sub
sub
adc
xchg
stos
pop
dec
sub
out
fwait
inc
add
push
movsl
jb
out
and
jge
xchg
push
pop
push
adc
dec
out
bound
les
mov
fcomps
jg
stos
push
pop
jmp
sbb
mov
shl
loope
adc
mov
outsl
pushl
add
loopne
sub
push
bswap
xchg
ja
xchg
lahf
jns
add
jno
cmp
mov
lock
hlt
jge
jge
imulb
inc
xlat
clc
push
rcll
or
pop
mov
leave
push
nop
test
cmpb
jle
shl
or
jb
movsb
pop
ja
push
in
ss
add
sbb
push
pop
mov
jae
incb
inc
lahf
mov
xor
cmp
cmp
xor
jae
test
inc
xor
push
test
or
call
faddl
shlb
fcom
sbb
xchg
dec
adc
xchg
mov
inc
arpl
or
mov
jo
mov
xor
mov
jp
push
jno
pop
test
sub
fsubs
adc
pop
movsl
into
into
outsl
dec
scas
cli
leave
adc
std
psllq
mov
mov
lret
cmpsb
ds
in
jmp
pusha
loop
ret
rcrl
test
test
sbb
push
fadd
jne
jnp
jp
jb
cmc
xchg
add
xchg
inc
sub
pop
ret
pop
fists
mov
aaa
sti
movsb
enter
mov
scas
loope
nop
aad
aaa
jnp
push
mov
ds
push
fucomi
xchg
and
jo
movsb
adc
call
inc
jl
adc
or
xchg
add
mov
das
sbb
push
stc
push
nop
cmpsl
imul
out
and
in
or
mov
mov
or
mov
mov
in
inc
fstps
scas
pop
rclb
mov
jae
dec
xchg
sub
cmp
mov
cmp
fstl
sub
out
roll
inc
stos
std
add
dec
mov
mov
and
sbb
cmpsb
fdivrs
lods
cmpsb
insl
outsl
sbb
addr16
pop
dec
mov
xchg
js
std
xor
popl
pop
fnsave
lea
jmp
out
xor
push
add
push
pop
es
adc
xor
sarl
repz
jns
jmp
mov
and
or
lretw
daa
adc
imul
dec
pop
adc
xchg
mov
inc
push
adcb
in
mov
sbb
mov
jns
xlat
xchg
cld
call
xor
mov
cmp
in
jmp
jne
lock
add
movsb
mov
rcrb
pop
adc
push
hlt
jne
or
push
ljmp
lds
not
xor
stos
repnz
mov
sahf
cmp
adc
adc
lock
sahf
xlat
xchg
notb
inc
push
scas
inc
fsubl
lods
fldt
test
movsl
enter
das
add
in
dec
adc
lock
or
adc
popf
stc
xchg
mov
sub
mov
fdivs
push
xchg
movsb
data16
stos
sti
mov
mov
ds
sbb
repnz
sub
pop
movsl
repnz
ss
fstpl
sarb
mov
cs
dec
pusha
pop
out
std
or
ljmp
push
fwait
sarb
loope
push
mov
aam
mov
add
adc
stos
les
ret
cli
cmpsl
push
shll
into
and
pushf
ret
dec
call
subl
jmp
inc
movsb
out
fildl
shl
cmp
test
dec
orl
adc
and
cli
movb
jge
inc
pop
add
xchg
mov
push
icebp
cwtl
cmp
movb
cmc
mov
cmp
dec
test
push
mov
scas
and
or
jb
cmc
dec
incl
stos
in
mov
pushl
inc
fwait
xor
arpl
mov
lea
or
mov
std
lock
or
xor
sbb
xchg
or
adc
jl
jp
fstpl
outsb
sbb
outsl
push
sbb
pushf
fs
dec
and
jmp
push
fists
cld
or
ret
sub
shrl
insb
andl
sarl
pop
adc
cmp
lret
pop
test
popf
les
push
xor
push
out
xor
inc
jmp
popa
call
iret
push
dec
xor
xor
push
xchg
sub
mov
pop
out
notb
cwtl
ds
std
divb
push
imul
xchg
icebp
jmp
push
push
sbb
data16
dec
xchg
andb
movsl
mov
cmc
sahf
push
adc
sar
cli
scas
movsb
xor
lret
xlat
jae
or
mov
push
jl
rcrb
inc
inc
fdivrl
mov
repnz
imulb
call
icebp
sbb
movsl
push
into
cmp
pop
mov
rcr
fwait
icebp
cmp
push
ret
cmp
dec
xchg
mov
call
sbb
cmp
mov
xor
mov
inc
lahf
xchg
addr16
in
jnp,pn
adc
lods
sbb
fxch
sti
insb
scas
mov
test
enter
lods
fsubrs
shll
mov
or
inc
or
fsubrs
cld
sub
or
imul
mov
cmp
mov
fcomip
fidivl
inc
fwait
lcall
sbb
or
add
dec
in
sbb
rorl
mov
imul
adc
or
push
pop
dec
aas
jnp
push
nop
sbb
sub
cmp
cmp
and
inc
jmp
inc
xchg
aas
mov
and
out
sbb
xchg
push
push
cmp
out
gs
call
movsl
je,pt
xor
and
sub
js
adc
shrb
xchg
jnp
jle
xchg
jg
lret
cmc
pop
mov
dec
xlat
adc
outsb
enter
insl
inc
loope
and
mov
mov
daa
push
push
jo
jns
jb
in
xorl
dec
test
cmp
mov
push
lock
fimuls
shl
add
jbe
xchg
mov
mov
popf
jae
stc
out
sbb
pop
sti
ret
popf
cmc
jns
jg
imul
cmc
rclb
movsb
jo
xor
leave
pop
mov
push
mov
adcb
incl
mov
xor
rcl
imul
nop
sub
mov
jmp
rclb
sub
in
add
cmc
xchg
out
pop
loope
inc
mov
jne
and
loopne
pop
or
lret
push
pop
sbb
stos
mov
jl
flds
xchg
dec
xchg
xchg
sub
mov
mov
push
mov
movsl
pop
and
movsl
es
mov
mov
repz
cmp
loop
fmull
insb
or
clc
in
and
adc
and
pop
repz
push
xor
pop
push
add
sub
js
pushf
push
xor
ja
sub
loopne
in
xchg
iret
add
mov
mov
in
outsb
into
test
push
jns
inc
mov
addr16
repz
sbb
daa
int
sbb
cmp
sbb
and
mov
in
rcl
push
or
into
shlb
mov
pop
shll
sbb
lock
sbb
lds
dec
sub
out
pop
gs
jne
iret
pop
das
je
fs
mov
stos
div
aad
sub
jnp
movsl
sbb
insl
jno
ja
fidivl
jne
lea
or
sti
int3
and
sub
xor
int3
cmpsb
sub
lcall
repz
xor
xor
add
mov
ds
mov
mov
jp
adc
pop
popf
into
sbb
into
insb
mov
loopne
mov
stos
push
arpl
arpl
je
mov
cmp
adc
jb
sbb
push
mov
outsl
pusha
out
mulb
or
xchg
sbb
xchg
out
movsl
mov
jp
inc
nop
jbe
ret
mov
adc
cmp
test
imul
lods
cld
adc
inc
sbb
shll
orb
aad
sbbl
popa
xchg
jecxz
sub
cli
gs
stos
mov
push
push
shll
or
cld
ret
enter
xchg
insb
scas
push
jg
sbb
lds
sti
arpl
jne
es
add
sub
sbb
cmpsl
mov
fcoml
dec
test
mov
loop
jecxz
mov
inc
jns
shlb
mov
jbe
rcrb
xor
cwtl
jns
mov
and
cmp
lret
or
ficompl
mov
stos
imul
or
cwtl
jo
jnp
ror
leave
and
out
push
hlt
pop
jnp
xchg
ljmp
js
aad
mov
jnp
popf
aad
jl
pop
inc
cmp
add
out
fisttpll
push
xchg
lds
ret
and
push
jmp
pop
push
cli
mov
and
mov
test
push
jbe
inc
dec
popf
add
popf
push
sti
jns
in
mov
push
fdivr
mov
push
iret
cld
lret
sub
test
xchg
int3
sbb
sbb
sub
sub
shlb
sub
fs
inc
add
xor
mov
stos
clc
inc
and
sbb
push
sub
xchg
cltd
and
fwait
adc
inc
mov
clc
adc
jle
fildll
lods
dec
mov
aaa
loope
lcall
in
rorl
imul
fisubrl
aaa
stc
pop
xcrypt-ctr
dec
das
inc
mov
arpl
lea
mov
test
dec
shrb
out
std
sbb
outsb
leave
mov
inc
push
negb
sbb
mov
or
push
imul
pop
lock
lods
and
stc
sbb
cltd
mov
adc
stc
add
mov
fwait
and
xor
imul
mov
das
jns
loopne
aaa
xor
stos
and
aam
dec
testb
xlat
insb
shll
imul
scas
xchg
jns
pop
jle
pop
push
imul
push
push
cli
nop
push
or
mov
jns
sub
cmpb
jmp
jge
dec
mov
loope
loopne
comiss
cmp
jle
pop
lahf
fadds
or
pop
push
lods
or
push
mov
fisttpll
mov
xor
std
ret
cmp
icebp
je
bound
ficoms
insl
sub
push
add
mov
jmp
mov
mov
les
and
mov
dec
aam
call
inc
add
pop
adc
cs
lret
mov
sbb
jg
ficoms
addr16
add
ljmp
sbb
ss
add
cmpl
mov
jns
dec
test
add
enter
add
jno
dec
xor
punpckhbw
loop
out
cmp
pop
cmc
adc
and
lgs
out
imul
movsb
pop
mov
jl
mov
xchg
mov
out
cmpb
pop
push
xchg
dec
les
pop
outsb
push
mov
inc
pop
adc
mov
pop
mov
mov
xor
inc
sbb
sahf
loop
test
or
and
pop
inc
movsl
imul
int3
mov
js
xor
cmp
cmp
scas
cmp
negb
test
xor
mov
aaa
push
jb
js
sti
mov
pop
pop
xchg
cld
stc
xchg
jecxz
repnz
insl
je
fcompl
fmuls
xor
add
push
ret
rorb
into
push
jae
mov
das
stc
inc
iret
lret
cltd
inc
inc
dec
sbb
das
mov
je
mov
es
rolb
adc
inc
imul
inc
sub
push
sbb
xor
add
inc
mov
or
jg
clc
push
cmp
mov
lret
pop
push
mov
dec
lahf
add
fisttpll
aad
in
out
data16
xchg
test
stos
outsl
in
cmp
pop
aas
aam
imul
cmp
xchg
sub
fs
cmp
mov
push
cmp
xorl
xchg
cmc
push
push
mov
adc
jp
int3
pop
popf
repz
xchg
mov
add
addb
xor
mov
xor
mov
jmp
je
or
int
icebp
int3
mov
into
hlt
je
sahf
fmull
push
and
mov
or
daa
mov
jne
jb
imul
movsl
data16
push
adc
cmp
sahf
dec
mov
gs
jbe
loope
lds
pop
loopne
sub
inc
xchg
cmp
mov
mov
decb
adc
xor
dec
lahf
push
jmp
sub
xchg
sbb
lds
cltd
scas
sbb
add
cmpsl
sbb
leave
sub
cmpsl
leave
test
imul
lcall
inc
pushf
sbb
jbe
and
lods
pop
mov
dec
cs
in
cmp
xchg
cmovge
loopne
shl
int3
scas
rcl
adc
mov
in
lods
push
sub
jo
mov
repz
jg
mov
jmp
ds
lahf
sbb
ljmp
inc
push
int3
test
xchg
push
in
add
inc
fdivp
loope
xchg
iret
cmpsb
jecxz
xchg
in
test
pop
repnz
lods
jbe
repz
inc
xchg
jo
add
inc
jmp
sarb
fxch
clc
mov
inc
inc
add
adc
inc
mov
dec
mov
fisttpll
mov
into
sub
add
cli
test
sbb
inc
add
scas
dec
sbb
in
xchg
jbe
out
mov
jnp
shlb
cmp
push
add
shrb
inc
pop
add
mov
call
clc
pop
pop
icebp
ds
or
and
mov
pop
repnz
ljmp
xchg
push
clc
xor
pop
jl
cltd
rclb
loope
hlt
xor
and
xor
lcall
push
cmp
sub
and
jae
je
dec
jnp
testl
fwait
mov
mov
pushf
xchg
or
insb
aaa
pop
sahf
fs
dec
sub
mov
bound
popf
inc
mov
aas
jne
test
lea
dec
in
sub
mov
push
xchg
pop
dec
mov
test
pop
pop
jnp,pn
mov
adc
iret
rcrl
imul
inc
sub
push
cmpsb
imul
int3
inc
or
xchg
fcomps
adc
loop
sub
push
add
aam
lods
and
rcr
shl
shll
fsubl
out
sbb
clc
jle
dec
out
addb
mov
data16
mov
stos
rcr
out
adc
dec
out
inc
ja
or
jle
movsb
mov
xchg
pop
inc
cli
ret
mov
fnsave
loopne
arpl
jo
push
add
or
push
cmp
mov
mov
cmp
mov
sub
or
mov
scas
jl
into
cmp
lret
mov
imul
std
cmp
pop
test
icebp
insb
sub
lcall
jns
movsl
stos
fwait
sbb
jne
repz
out
das
adc
mov
cmpsl
inc
adc
cs
cmp
scas
sahf
aam
mov
sbb
lea
and
and
scas
mov
aad
imul
push
jmp
cld
add
xchg
enter
and
loopne
mov
pusha
push
push
dec
repnz
inc
imul
cmc
loope
iret
clc
inc
push
pushl
inc
loop
enter
out
mov
inc
popa
mov
fisubl
pop
jo
mov
shlb
cmp
pop
xorb
mov
sar
fwait
shrl
enter
icebp
xlat
mov
lods
in
lcall
jae
stos
sub
mov
dec
stos
jecxz
cltd
jge
aam
pop
sub
loopne
lock
jmp
repnz
sub
dec
jnp
or
ljmp
mov
jne
sub
andl
or
ss
xorb
mov
dec
jnp
es
cmpl
push
sbb
jb
mov
cld
mov
ss
pop
les
fwait
inc
cli
daa
fs
faddp
inc
lods
fsubr
cmpsl
xchg
and
mov
xlat
fcmovnb
mov
add
insl
es
sbb
ss
dec
add
push
stos
push
aam
std
mov
xchg
cmc
scas
xchg
xchg
mov
and
imul
out
outsl
or
xchg
lret
in
jecxz
sbb
scas
out
sbb
sti
ljmp
outsb
repnz
pusha
imul
add
dec
add
or
or
stos
mov
inc
pop
aaa
repnz
es
mov
jp,pn
aas
nop
sub
int3
jp
push
jbe
push
ret
mov
sub
cld
inc
int
call
cs
mov
sub
ret
in
jnp
insl
ja
aad
divb
cwtl
cmp
outsb
adc
push
movsl
add
psubusw
outsb
js
xorb
fcoml
push
mov
pusha
xchg
push
pop
popf
mov
in
aas
push
dec
mov
insl
repnz
mov
dec
out
or
std
sbb
aam
inc
loope
push
jbe
push
cs
gs
enter
into
mov
push
mov
imul
push
or
cmp
jle
xchg
nop
cmp
xchg
inc
dec
sub
testl
and
mov
in
xor
sbb
int3
out
xor
mov
jns
adc
fisttpl
movsl
cli
daa
xor
mov
movsl
inc
aas
xchg
cmpsb
pop
sbb
lahf
cmpsb
xchg
rclb
pushf
lds
add
gs
add
cmc
push
out
lea
sti
fs
or
leave
insb
out
push
mov
mov
jp
sti
dec
test
mov
add
in
jge
bswap
sbb
mov
xlat
push
sbb
ljmp
dec
cmp
dec
rolb
push
stos
movsb
aam
cmp
lcall
adc
push
mov
inc
shr
pusha
and
or
fldl
mov
fisubs
push
shrb
aas
frstor
cmpsl
dec
sbb
idiv
cltd
xchg
test
loopne,pn
cmp
lret
in
cmpsb
arpl
ret
push
adc
shlb
aaa
mov
das
rorb
inc
cwtl
dec
jecxz
int3
loop
fisubl
xchg
repnz
mov
xor
mov
in
mov
shl
cmpsl
shlb
xlat
push
sub
loope
mov
cwtl
inc
lahf
pop
or
test
sub
jg
push
enter
push
cmp
lret
pop
in
es
pop
faddl
daa
xlat
jnp
nop
cmp
rcll
adc
fldenv
insb
adc
or
aaa
mov
mov
insb
fwait
imul
dec
arpl
dec
outsl
adc
mov
ficoms
jl
push
aas
xor
push
mov
push
fmulp
cmp
shl
cwtl
ret
jmp
inc
mov
pop
jno
cmp
leave
call
sub
in
leave
and
push
push
mov
std
mov
les
jecxz
lods
call
and
xor
in
sub
dec
mov
cs
fcompl
cmp
mov
out
dec
mov
mov
mov
cmpsb
xchg
pop
jge
sarl
jne
clc
push
ficompl
jl
xchg
lcall
mov
push
cmp
sub
cs
mov
andl
ds
lea
sbb
mov
jno
mov
daa
aas
xorb
aaa
out
fcmovu
sub
dec
jb
mov
fucomip
sub
xchg
jbe
nop
pop
add
mov
insl
xorl
jne
jg
push
adc
faddl
fdiv
sbb
outsb
movsb
add
xchg
fs
rorl
jnp
lea
es
add
push
orb
fwait
xlat
push
sub
scas
lods
fdivs
or
xchg
movsl
outsb
push
leave
push
add
or
mov
ret
jg
iret
mulb
in
pop
movsb
pop
lods
sbb
xchg
pop
push
sub
and
arpl
cmpsl
add
add
adc
xlat
fistpl
pop
subb
mov
mov
xor
paddsw
inc
dec
lods
mov
lret
add
addr16
sub
dec
add
push
jecxz
xor
iret
scas
loope
inc
ljmp
and
pop
cmp
ja
xchg
in
mov
int
cwtl
or
xchg
jp
push
repz
imulb
movsl
shll
ja
add
dec
dec
pop
xchg
sub
fwait
mov
mov
xor
xor
mov
mov
fisttpll
shrl
imul
ja
fisttpll
dec
dec
icebp
jns
je
lock
mov
sub
xor
adc
movsb
pop
ret
adc
mov
cltd
data16
jl
in
xor
pushf
push
adc
jno
jmp
cli
push
and
dec
mov
popa
mov
lcall
repz
js
fwait
jg
dec
lret
insl
mov
pop
jmp
mov
in
mov
push
aas
xchg
cltd
sub
push
jne
add
out
js
jl
in
xor
cmp
xor
cmp
pop
popa
mov
lret
ja
sbb
ss
sub
cmp
push
and
or
mov
pop
arpl
dec
or
mov
and
jp
sub
sbb
sahf
sub
aaa
push
scas
imul
push
je
dec
daa
push
jle
out
int
cmp
out
lds
in
push
lock
adc
mov
int
xchg
rolb
cli
push
ljmp
cld
shlb
movlps
dec
fs
in
imul
loop
cmp
loope
jmp
enter
cmc
or
call
insb
jle
and
add
pop
mov
sti
inc
fwait
movsb
xchg
into
push
out
ret
adc
xor
mov
filds
imul
sti
jcxz
sbbl
js
mov
into
xor
in
mov
les
dec
jne
dec
mov
jge
dec
fists
jg
xor
sub
mov
repnz
push
insb
mov
mov
arpl
xchg
mov
cmp
cwtl
je
ficompl
xor
jbe
jno
or
mov
pop
ds
inc
arpl
aaa
imulb
pop
cmpsl
sbb
and
in
or
mov
mov
mov
jns
jno
and
jecxz
cmpsb
test
lahf
addb
or
xor
dec
lods
adc
dec
xor
mov
jns
sbb
dec
pop
pop
mov
fcomip
xchg
scas
icebp
cld
fs
cmp
and
sbb
cs
jp
or
ss
inc
ficoml
es
pop
or
inc
mov
cld
int
popa
loopne
mov
test
jnp
cmp
pop
add
inc
jo
sbb
sbb
adc
dec
jnp
pop
push
test
test
pop
jmp
push
ret
or
mov
add
stos
cmp
imul
pop
adc
in
insl
mov
pop
in
mov
data16
test
sub
test
push
mov
rorl
sahf
mov
mov
ss
outsl
cld
mov
dec
adc
mov
pusha
inc
sti
ret
in
shll
mov
mov
sbb
iret
cmpsb
cwtl
xchg
dec
rol
mov
sub
in
lcall
je
pop
outsb
and
mov
pop
pop
and
and
sti
sbb
push
mov
orl
aad
add
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
sbb
mov
xor
xor
sub
mov
add
movl
or
mov
push
mov
add
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
mov
negl
push
mov
adcl
add
cmp
movl
je
mov
mov
xor
xor
adcl
add
add
adc
negl
xor
mov
push
movzbl
adc
xor
xor
mov
and
mov
add
movl
adc
addl
xor
movl
xor
movl
cmp
movl
jne
movl
cmp
je
jmp
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
sbbl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
notl
mov
adcl
add
movzwl
mov
mov
sbb
movb
add
lea
xor
mov
addl
mov
mov
orl
xor
andl
sub
andl
mov
movl
or
push
jmp
and
add
stc
sub
icebp
daa
push
jl
pop
pop
jl
push
xchg
addr16
dec
inc
xor
add
test
mov
push
lea
flds
and
ljmp
dec
mov
jmp
sti
adcb
sbb
xor
xchg
push
fisttps
xor
dec
outsb
stos
cmp
pop
dec
push
push
jp
and
cmpxchg
adc
fs
push
and
adcb
adc
fnstcw
inc
sahf
xor
cmovne
inc
mov
adc
scas
shll
sbb
lea
jae
divb
push
sub
imul
push
arpl
cmp
push
std
xlat
jecxz
fwait
cmc
cltd
sub
mov
test
dec
mov
loop
push
das
sbb
push
pop
pop
sbb
dec
int3
sub
pop
fwait
pop
pusha
stos
xchg
mov
and
mov
fmull
jl
cld
jae
ret
and
xchg
jae
fsubrl
xchg
in
inc
jo
imul
mov
pop
aam
mov
lcall
in
fisttps
sbb
add
push
cmp
and
mov
stos
and
push
xor
xchg
pop
sbb
cmpl
subb
loop,pt
xor
add
cmp
popa
pop
pop
jp
pop
and
daa
imul
dec
dec
mov
sbb
dec
aas
mov
mov
mov
xchg
cmp
idivl
leave
cmp
js
xchg
jp
or
test
xor
jmp
rorl
sbb
stos
xor
cld
ds
xorb
cmpsl
std
jle
mov
jp
pop
or
lret
adc
rorl
adc
ljmp
xor
sub
sbb
ret
jmp
pop
mov
pop
push
rcrl
nop
loope
test
movsb
lock
sti
adc
lahf
jbe
and
arpl
test
mov
xor
shlb
stc
mov
add
push
inc
lahf
jg
adc
push
test
dec
ljmp
les
jle
loope
add
xchg
adc
xor
and
push
in
push
adc
sbbl
sub
jp
push
sub
stc
push
outsb
pop
jmp
inc
in
bound
jo
pop
push
dec
mov
mov
or
jbe
mov
sub
lcall
addr16
ljmp
gs
addl
sub
jb
jns
xchg
rclb
cmp
pop
adc
scas
dec
lods
rolb
pop
sub
loope
addr16
pop
fs
mov
pop
push
cli
push
xchg
cwtl
pop
aam
fwait
cmp
cld
push
cmpl
addr16
sbb
es
ja
push
xchg
or
xchg
popa
cmp
pop
sbb
leave
push
aas
pop
pushf
pop
iret
push
jmp
or
push
lret
and
out
or
jb
mov
and
daa
aad
xchg
lea
cs
push
sbb
test
imul
and
scas
cli
push
rcrb
bound
nop
pxor
stos
outsl
int3
sti
mov
push
stos
test
pop
jae
xchg
and
xchg
and
out
call
dec
dec
test
decl
into
pop
addr16
jno
push
ljmp
jle
xchg
add
jb
push
ficompl
stc
daa
jg
outsl
lods
scas
ds
sbb
ret
iret
adc
movsl
xor
mov
cmc
dec
sbb
mov
xchg
push
dec
sahf
sbb
loopne
xchg
or
loopne
sarb
test
test
imul
cwtl
lock
push
push
pop
sub
push
pusha
sahf
sbb
pop
or
mov
push
push
inc
mov
and
lcall
jmp
insb
ret
ret
dec
or
and
add
std
test
sahf
cli
or
adc
ljmp
mov
jecxz
loope
and
into
mov
shl
sub
sbb
xchg
orb
call
push
ljmp
push
popf
enter
push
mov
sub
sub
in
fwait
cwtl
mov
sub
pop
inc
andb
xchg
push
dec
xor
push
pop
dec
sub
in
leave
inc
in
jl
mov
sbbb
xchg
neg
or
push
cmp
jecxz
mov
hlt
sbb
and
fstpl
aad
xchg
scas
inc
addb
jbe
pop
mov
cmp
mov
repnz
in
mulb
dec
inc
adc
mov
loop
inc
mov
ja
add
icebp
fwait
pushf
int3
cmc
lock
xchg
mov
aas
enter
mov
xchg
into
jae
push
mov
cmp
jnp
cmp
loopne
dec
daa
cmpsl
decb
sub
ret
jmp
pop
fistpl
gs
shlb
ficoml
out
jle
xchg
xor
ljmp
das
sti
sub
movb
sub
cmp
loop
lcall
xchg
jmp
sbb
mov
mov
cltd
cmp
mov
and
aam
or
insb
dec
popa
into
adc
push
call
add
jne
std
mov
mov
fsts
jle
incb
inc
subl
add
inc
adc
and
push
sub
ret
lods
mov
and
dec
mov
arpl
gs
sbb
lods
adc
out
mov
outsl
cmc
loopne
push
mov
xlat
jg
push
cwtl
cmpsl
xor
out
xchg
lods
push
sub
mov
and
xchg
push
sarl
or
lcall
mov
inc
push
push
add
sbb
les
lds
test
or
in
or
cmp
pop
xchg
mov
ficoms
rcrl
rcll
movsb
std
iret
jns
jns
sbb
inc
daa
shlb
cs
sti
jmp
pop
dec
mov
sub
pop
pop
push
dec
jp
push
inc
or
adc
adc
inc
adc
add
mov
inc
pop
and
mov
or
mov
or
lea
mov
cmpsl
cmp
or
mov
sbb
in
dec
ja
or
outsl
push
mov
aam
idivb
fwait
call
mov
stos
insb
xchg
lea
mov
idivb
mov
in
dec
daa
imul
inc
pushf
je
repnz
pop
sub
in
ss
fists
in
sbb
mov
jmp
sbb
sbb
push
mov
push
in
into
popf
jns
jo
insb
les
cmp
mov
popf
loope
or
pop
mov
jne
lret
pop
aad
loope
das
dec
mov
dec
adc
scas
pop
add
inc
ret
sbb
mov
addr16
out
push
mov
mov
mov
orb
pop
hlt
cli
mov
in
out
int3
fwait
xor
adc
sbb
aaa
in
xchg
sahf
or
dec
xchg
enter
mov
fisttpll
xchg
push
lds
nop
mov
inc
lock
pop
xor
call
cmc
decb
into
inc
mov
jne
cmpsl
mov
push
in
fidivl
xlat
mov
ljmp
sbb
cmc
rorl
test
fistps
push
jo
lds
cmpsb
or
test
fwait
or
out
add
or
iret
pushf
cli
daa
adc
push
lret
sbb
iret
leave
into
xchg
incl
push
js
pop
inc
movsb
push
ret
cmp
scas
addl
mov
outsl
arpl
inc
xchg
jp
out
pop
mov
xchg
aad
cmp
inc
dec
int
dec
mov
js
pop
xchg
mov
ror
mov
xchg
or
cmp
rorl
push
jmp
inc
push
in
sub
lods
xor
popf
dec
in
lock
leave
das
mov
mov
xor
mov
xor
and
mov
sti
ret
jl
dec
jae
loop
and
fdivr
arpl
fbld
scas
mov
icebp
pop
mov
adc
adc
cwtl
sub
dec
inc
dec
mov
and
push
jns
jp
dec
rcl
mov
mov
fildll
stc
cmpsb
xchg
vhsubps
sbb
cmpsl
mov
mov
lret
data16
lock
cmp
nop
aas
lret
cmpb
push
adc
mov
and
out
fs
movsl
addps
mov
dec
repz
and
in
lock
dec
fsts
push
mov
mov
jl
ja
pop
inc
lahf
repnz
cmp
jae
gs
aas
enter
jae
loopne
mov
outsl
cld
xchg
xor
pop
dec
dec
sahf
mul
iret
daa
and
ss
repnz
adc
shrl
mov
call
in
and
and
or
outsl
and
xchg
xchg
insl
bound
ret
push
fwait
or
lods
inc
sbb
mov
sbb
mov
mov
xlat
xor
mov
sub
push
lcall
cli
lds
loop
xchg
and
mov
clc
nop
frstor
loopne
std
pop
arpl
fmull
xor
imul
repz
mov
mov
addr16
inc
shrl
shrl
dec
shlb
cmp
jbe
xor
out
jne
sbb
and
dec
std
xor
mov
inc
adc
imul
push
add
ljmp
pop
addb
in
fs
dec
xor
add
mov
jge
mov
insl
push
icebp
cmp
cmp
cltd
adcl
cld
jg
frstor
lea
dec
push
into
sbb
lods
push
adc
mov
push
jmp
sahf
cltd
xchg
pop
jb
dec
scas
in
stc
std
lods
jb
jle
xor
mov
jnp
mov
sbbb
jo
movsb
out
out
xor
mov
cmpsb
iret
js
icebp
push
stos
stos
mov
cmp
es
cmpsl
dec
pop
mov
or
movsl
in
mov
sti
lahf
call
mov
jae
sbb
or
gs
cltd
push
shrl
push
movsl
cmp
in
xchg
inc
mov
fbld
push
lods
loop
add
insl
mov
loope
sbbb
jp
jle
mov
adc
pusha
sub
xchg
jmp
inc
mov
mov
pop
int
ja
or
xor
fmul
xchg
pop
cli
push
lcall
out
cwtl
sti
dec
dec
jecxz
cli
ja
lods
orb
mov
cmpsb
mov
mov
mov
dec
ret
clc
hlt
pop
sti
call
push
jo
and
int3
and
xor
cmp
out
mov
adc
lea
ret
cld
jmp
in
outsl
sbb
cmp
sub
out
popa
adc
ret
pusha
mov
xor
iret
xchg
cs
ficoml
cld
cltd
arpl
and
or
hlt
out
lock
and
jl
jecxz
pushf
js
popf
cmp
movb
insl
add
mov
pop
dec
orl
mov
push
lret
push
je
test
in
aam
fbstp
dec
pushf
sub
xor
mov
pop
adc
sub
push
orb
xor
and
hlt
es
popa
inc
lret
jle
aaa
mov
mov
jne
insb
orl
out
adc
xor
shlb
dec
dec
or
fwait
jp
jg
out
ret
dec
push
rcrl
fnsave
adc
lds
jnp
jle
dec
push
cs
lret
or
push
stos
sbb
jecxz
lods
cmp
and
mov
and
or
xchg
mov
shll
adc
lods
in
clc
into
imul
outsl
leave
shlb
shll
cmc
jmp
shrl
filds
jb
mov
dec
cmp
lret
divl
pop
insb
mov
mov
cmc
jg
sti
jns
mov
movsb
jg
adc
test
jns
insb
or
rcll
jmp
fsubs
fcoms
pop
cltd
dec
xor
ret
ss
xchg
mov
adc
subb
sbb
xor
mov
xor
push
cmpl
adc
lcall
mov
mov
jo
mov
sahf
mov
dec
ret
adc
nop
inc
into
pop
out
in
sbb
xor
int
cmp
xor
jnp
jo
mov
ljmp
mov
fisttpl
sub
inc
dec
out
outsl
xchg
add
or
out
lods
mov
shlb
xchg
out
scas
dec
mov
mov
xor
cli
imul
popf
fldlg2
mov
and
lods
or
pop
imul
sub
test
push
jne
push
jbe
test
mov
bound
push
das
dec
mov
out
jge
imul
pop
imul
testb
enter
aam
sub
sub
sub
push
popa
jg
mov
xchg
dec
sub
lret
ljmp
jge
js
leave
mov
shr
fildl
jp
sti
decw
movl
pop
outsl
leave
dec
pop
inc
push
mov
xor
in
popf
add
dec
fucomip
and
dec
xchg
push
mov
out
pop
cmp
or
out
mov
sub
dec
addr16
test
inc
das
xchg
cmp
sahf
lds
dec
jb
in
loop
fwait
mov
lods
adc
push
out
cmp
test
aam
sahf
mov
stos
insb
loope
shlb
stos
repz
std
adc
jge
rcll
add
sub
jb
mov
sub
or
pop
jb
adc
insb
mov
repz
mov
jle
add
in
push
cwtl
inc
and
jns
dec
add
push
jb
mov
fs
xchg
xor
icebp
push
in
inc
pop
fmulp
pop
loope
or
adc
inc
mov
arpl
dec
idivl
add
imul
stos
cmp
mov
pop
into
loop
sbb
xlat
dec
stc
pop
push
inc
sub
dec
mov
sbb
rcll
sbb
or
jp
mov
fists
shlb
or
in
test
dec
imul
addb
hlt
xchg
push
adc
sub
xor
add
jp
notl
push
insl
imull
outsb
or
dec
sub
fisubl
pop
aas
insb
sbb
xchg
adc
sub
jae
adc
jb
add
je
and
rolb
jae
push
dec
push
loop
pushf
xchg
lcall
movsb
inc
repnz
push
jbe
repz
in
jbe
repnz
cmp
frstor
test
sub
ret
dec
xorl
das
pushf
jge
popl
ljmp
push
jge
pop
mov
inc
or
lea
mov
movsb
sub
outsl
rcrl
push
imul
mov
cmpsw
dec
pop
pop
daa
loopne
push
dec
pop
addb
sbb
mov
xchg
jb
je
in
aaa
lods
rcl
cmp
push
scas
scas
adc
xchg
xchg
push
pusha
sbb
mov
aas
mov
mov
adc
dec
and
lods
out
rcll
inc
fdivs
or
lock
cwtl
lcall
cli
pop
mov
cwtl
ja
dec
cwtl
jae
cs
xchg
cmp
adc
dec
fwait
repz
xchg
or
cmpsl
clc
pushf
xchg
inc
dec
pop
dec
repz
ret
pusha
mov
or
lret
cmp
xrelease
les
sti
mov
push
insl
sbb
lret
push
pop
inc
xchg
lret
lcall
adc
std
ret
xchg
mov
movsb
mov
movsb
nop
mov
pop
add
mov
or
orl
test
shrb
imul
es
dec
das
aaa
adcl
sbb
push
jp
iret
xchg
pop
ret
dec
je
push
scas
xor
sbbb
fistpll
das
lcall
sbb
icebp
sti
sbb
cmp
inc
ret
pop
xchg
and
movsb
jmp
popf
js
test
imul
add
push
cmp
xchg
sbb
dec
jb
lods
push
jns
fsubrs
sti
out
dec
xor
lcall
cld
test
lahf
mov
es
out
xor
mov
xor
shlb
mov
mov
sbb
mov
inc
mov
xchg
std
sub
inc
es
push
sub
cwtl
xor
adc
xchg
pop
add
mov
ss
inc
ds
test
or
jle
adcb
loope
andl
mov
xor
fcmovnb
subb
stos
mov
mov
inc
xchg
test
inc
xor
pop
testl
out
test
xchg
adc
push
jae
sahf
mov
ljmp
mov
mov
mov
mov
insl
xchg
ja
fwait
cmp
mov
loope
adc
mov
push
jno
jns
jmp
incb
hlt
jp
and
shlb
cwtl
sub
jp
ret
js
sub
mov
mov
je
fistpll
std
lcall
adc
rdtsc
pop
outsb
pop
fcomp
lcall
out
push
mov
mov
in
enter
jo
ja
lret
shld
imul
xor
cltd
test
loop
out
insb
cli
imul
insb
lret
pop
out
xor
adc
imulb
push
push
inc
out
cmp
xchg
inc
mov
out
jp
cltd
fimuls
dec
mov
out
jecxz
mov
xlat
dec
push
imul
sub
jno
out
cmp
or
rcll
int3
pop
jo
lods
pop
sbbb
notl
repz
cmpsl
push
es
xchg
and
sub
imul
push
fisttpll
lods
scas
jl
test
in
scas
xor
mov
addr16
aad
cmp
fdivp
fwait
mov
or
xor
cmp
movsl
not
cmc
out
lea
sbb
loop
mov
adc
test
inc
push
sub
fldl
mov
bnd
in
xor
adc
shl
mov
push
bnd
mov
scas
pop
pop
or
mov
sbb
add
dec
outsl
push
and
hlt
mov
xor
push
sbb
or
je
push
pushf
xchg
aam
in
cmp
loope
test
adc
inc
cld
cmp
jle
stos
jbe
repz
sub
mov
aaa
pop
data16
sti
hlt
jae
test
or
dec
cmp
adc
mov
loope
loop
jmp
fisubs
mov
sbb
dec
jle
mov
mov
push
mov
insl
ror
cltd
push
mov
xchg
jno
mov
cwtl
jne
push
ljmp
mov
mov
testb
xlat
jae
mov
sbb
push
jl
push
ds
daa
outsl
jp
test
stos
adc
imul
scas
xchg
decb
jno
jae
or
aad
and
cmp
cld
push
out
hlt
fldl
addr16
mov
out
iret
ja
enter
xorb
fidivrl
roll
ret
nop
in
movsl
mov
negb
pop
lret
inc
gs
pop
rorb
mov
aad
icebp
gs
arpl
cmp
lea
sahf
mov
andl
outsb
xchg
jle
mov
das
cmp
adc
jl
pop
ret
or
cmp
or
push
out
lods
cmp
mov
fwait
popa
adc
dec
xchg
pushf
in
ficompl
lds
pop
fwait
imul
and
xor
clc
mov
into
adc
ss
das
push
push
jae
call
lds
inc
jno
mov
xchg
jmp
in
xchg
push
xor
ss
lret
hlt
push
repz
fnstsw
or
insl
and
daa
xchg
adc
push
sub
push
pop
mov
jp
call
insb
fmulp
and
insb
cmp
mov
arpl
insl
cmp
cmp
adc
stos
cmovns
xor
mov
dec
or
pop
pop
and
in
sub
push
fldl
and
movsb
jne
std
arpl
xor
mov
mov
mov
cmc
nop
mov
or
cmp
movsl
in
sbb
lods
xchg
xchg
pop
pop
scas
cmp
push
inc
mov
push
and
or
xchg
ret
xchg
stc
scas
dec
xor
or
adc
fnstcw
jns
cmp
push
xchg
insl
out
push
inc
pop
pop
popf
es
xchg
jle
mov
inc
clc
jle
jo
fidivs
int3
xchg
pop
and
push
add
in
push
add
loope
adc
out
aad
nop
lret
es
subb
lods
das
or
nop
xor
dec
lds
cmp
fistpll
mov
insl
push
or
sahf
fisubl
add
jge
xchg
daa
rorl
fadds
push
icebp
fwait
mov
ds
sbb
cltd
sbb
xchg
or
add
into
push
lods
das
mov
mov
push
sbb
adc
lds
loop
or
rclb
mov
sbb
dec
pop
aaa
loop
cmp
cmp
popf
adc
jl
ljmp
inc
gs
mov
push
cmp
mov
pop
je
ret
lods
mov
and
adc
stc
adc
daa
jl
pop
cli
and
aaa
fwait
inc
cs
les
add
clc
cmp
imul
andl
push
xchg
xchg
add
iret
and
push
or
adc
add
test
inc
sti
sub
pop
xor
inc
rolb
pop
add
in
imul
es
hlt
in
inc
lock
xor
jno
fadds
pop
mov
inc
cmp
jne
mov
inc
dec
or
jl
loopne
sub
inc
jnp
cwtl
stos
mov
sbb
mov
outsb
loopne
xchg
hlt
xchg
mov
loope
and
test
lea
pusha
pop
inc
pushl
mov
and
loop
shll
push
aam
jae
inc
mov
bound
aas
and
push
icebp
and
icebp
xor
xchg
frstor
lea
stos
fs
and
cs
aad
inc
jle
rolb
push
outsb
push
stc
jb
loope
fildll
mov
mov
mov
cmp
pop
mov
cmp
add
out
sub
test
cmp
ljmp
mov
std
data16
or
lea
out
and
xchg
pop
pop
pop
subl
or
xchg
pop
mov
add
and
scas
repz
je
xchg
call
enter
pushl
lea
jmp
jo
fwait
cmpsl
mov
rcrb
lds
ret
test
mov
sbb
inc
aad
jl
fcoms
bound
or
cmp
test
mulb
movsb
into
mov
fwait
ret
ret
fucompp
mov
mov
shlb
insl
sub
call
xchg
das
test
stc
mov
cmpsl
mov
aam
dec
xor
aad
outsl
insb
jl
test
sub
out
daa
mov
es
rcll
mov
lret
iret
jecxz
and
cmpsb
inc
pop
jg
cmp
push
xchg
repz
iret
adc
pusha
stos
sbb
adcb
outsl
mov
fwait
sub
loop
lea
xor
jg
xor
or
dec
repnz
sbbb
pop
nop
subl
mov
lret
sti
pop
pop
and
and
inc
test
xor
mov
and
lock
outsb
out
mov
shll
aaa
jmp
nop
mov
xchg
mov
fisttps
push
dec
pop
outsb
sbb
pop
cmp
sbb
aad
xchg
cwtl
scas
cmp
jnp
push
inc
ficoml
aad
dec
cmp
andb
push
and
filds
and
add
pop
xor
pop
sbb
jl
addr16
xlat
dec
lret
enter
and
iret
das
inc
inc
xor
inc
ja
xor
push
add
jns
imul
add
out
or
mov
jecxz
rorb
test
xor
rcll
movsl
push
mov
out
fists
add
cwtl
inc
and
cmpsb
lcall
sbb
cmp
add
dec
push
inc
aad
sbb
or
ret
out
jne
pop
loop
fists
fcomp
mov
cmp
jge
in
loop
movl
push
or
stos
mov
jp
jne
das
adc
xor
inc
inc
loopne
xorb
fdivrs
jp
jle
imul
mov
sarl
jmp
jne
shlb
clc
xchg
add
popl
sub
into
out
insl
pop
fs
filds
and
xor
lea
xchg
and
sar
cmpsb
and
mov
js
xor
add
push
mov
dec
jmp
xorb
and
out
leave
xchg
aas
leave
mov
nop
imul
dec
inc
cmp
sub
ss
sub
addl
lcall
jmp
mov
sub
xchg
sub
sub
adc
std
dec
sbb
jle
cmp
ficompl
in
add
nop
es
mov
sub
mov
sahf
call
jns
pop
cli
add
mov
mov
jle
mov
int3
inc
xchg
xchg
into
or
inc
inc
les
cmp
pop
xchg
adc
cwtl
cmp
lret
push
rcr
fxam
ja
lret
mov
cmpsl
ret
adc
pop
jb
es
or
or
mov
jno
pop
or
fwait
sbb
insb
xchg
mov
push
or
mov
fcoml
add
out
adc
jne
in
scas
repnz
mov
or
cmp
adc
ret
and
xchg
jl
xchg
daa
inc
or
loop
push
mov
push
mov
mov
mov
mov
pop
lret
call
push
mov
aas
push
shl
jb
subb
pop
inc
add
mov
lahf
cmp
in
cmp
mov
xchg
cli
push
sbb
cmp
icebp
repnz
fidivrs
cvtps2pi
out
adc
xlat
push
ja
insb
repnz
ret
out
rclb
add
mov
push
int3
mulb
shll
vpperm
lret
xor
jl
fnstcw
push
or
std
jp
hlt
xchg
mov
and
into
ss
jb
inc
jne
jns
scas
xchg
pop
sub
sahf
pushf
imulb
jmp
add
sahf
sub
shl
addl
push
push
in
ja
push
pop
push
push
xlat
lahf
scas
and
lock
enter
fs
rclb
push
imul
xor
xchg
addb
xchg
mov
data16
in
js
iret
sarl
loope
pushf
mov
add
push
xchg
xchg
in
lods
repz
xchg
cltd
push
imul
lods
int
jge
gs
push
repnz
cmc
out
outsl
cltd
mov
xchg
jmp
les
or
orl
imul
lret
push
pushl
nop
int
cld
cli
iret
pop
or
test
push
imul
cmpsl
mov
cld
adc
sbb
repz
sti
sti
lret
inc
jns
push
xchg
cli
jno
dec
jmp
pop
or
mov
lods
adc
pop
hlt
dec
rorl
and
lahf
mov
sbb
js
xor
insl
and
sub
cwtl
mov
aas
push
mov
out
loope
fwait
mov
je
ja
sub
fldz
pop
push
shrl
clc
stos
push
inc
movl
lods
xchg
popl
push
mov
jp
scas
pop
das
jle
jmp
test
pop
cli
xchg
dec
std
movntps
movsb
mov
jae
cltd
in
ret
sbb
or
push
int3
ja
movsl
dec
jae
pushf
pop
adc
data16
nop
cmp
mov
mov
popa
pop
jbe
lcall
mov
leave
sahf
inc
jns
pop
ror
fbld
or
xor
mov
stc
jg
sub
into
ja
cld
xchg
push
ffree
imul
pushf
jnp
idiv
jl
inc
add
xor
adc
call
cmc
jne
nop
pop
cmp
in
das
xchg
repnz
mov
mov
cs
aam
xchg
test
xor
ss
pop
jl
fists
gs
xchg
adc
lds
xchg
dec
lret
adc
loop
fwait
cwtl
jns
test
mov
mov
mov
pop
insl
lds
push
mov
roll
sub
lahf
xchg
lret
cmpsl
out
cmp
lods
pop
push
arpl
mov
xchg
repz
test
addr16
imul
insl
sub
jle
test
cmp
enter
outsb
xor
aas
add
mov
push
std
stos
das
and
xor
stos
repnz
add
lahf
lret
nop
in
inc
pop
into
repnz
loop
pop
dec
pop
push
mov
jae
jo
sub
stos
gs
cwtl
cs
lret
pusha
mov
insl
mov
shlb
sti
ret
push
mov
cmc
inc
or
iret
loop
mov
nop
xchg
lds
mov
pop
iret
test
addr16
pop
mov
fisubl
fbld
ds
cmpsl
and
arpl
adcb
xchg
fs
xchg
pop
popa
arpl
push
inc
xlat
sbb
xchg
adc
es
arpl
fldt
aam
decb
lcall
iret
add
and
outsl
icebp
je
sbbb
mov
mov
xlat
mov
cmpsl
hlt
pop
addr16
sti
xchg
pushf
fsubrp
pop
bound
in
je
mov
add
js
mov
push
sarl
push
inc
cmp
xorb
notl
push
mov
fstl
push
addr16
arpl
ss
hlt
push
xor
imul
adc
jno
adc
mov
mov
cmpsw
arpl
pop
int
sbb
sbb
jp
ds
dec
or
mov
xor
push
inc
xchg
adc
push
adc
fistl
popf
inc
call
xchg
pop
and
adc
jl
push
adc
out
jecxz
push
aaa
push
loope
outsb
rol
sub
sbb
inc
sub
dec
sub
and
shrb
in
iret
cmc
lret
jae
xchg
cmp
mov
cmpb
fistpl
jne
addr16
cli
fnstsw
xchg
fdivs
add
mov
mov
xchg
dec
in
pusha
aam
mov
push
dec
imul
jecxz
arpl
inc
clc
mov
pushf
clc
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
pushl
call
mov
dec
mov
jmp
push
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
inc
xor
sub
mov
movl
push
xorl
add
jmp
mov
notl
mov
notl
inc
cmp
movl
jb
adc
mov
xor
add
jmp
andl
mov
and
mov
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xorl
mov
add
sbbl
movzwl
xorl
mov
negl
mov
orl
movzwl
xorl
xor
add
mov
mov
inc
mov
cmp
movl
jne
mov
movl
mov
decl
xor
add
andl
mov
dec
mov
xor
andl
add
movl
mov
not
movl
movl
movl
mov
mov
movl
mov
jmp
mov
add
mov
andl
xor
xor
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
movl
mov
lea
mov
mov
mov
lea
movzwl
sbb
mov
mov
andl
mov
add
mov
negl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
orl
mov
mov
add
mov
lea
add
mov
mov
orl
mov
lea
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
sbbl
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
jmp
sarb
jae
dec
bound
dec
mov
jl
pop
pop
jl
xorb
pop
inc
dec
jmp
sbb
inc
test
popf
fs
dec
aam
cld
rol
ret
negl
or
jmp
cmp
cwtl
scas
or
jb
hlt
pop
lret
and
adc
mov
bound
ret
add
icebp
loopne
shll
pop
jl
mov
fsts
mov
iret
mov
mov
clc
into
nop
notb
sbb
dec
shlb
cmp
or
jecxz
fdiv
or
pop
aam
xchg
imul
xchg
cmpsb
lds
mov
jg
xor
pusha
sahf
and
scas
adc
loop
cmp
mov
lahf
int3
pop
mov
mov
sbb
test
mov
mov
xchg
sbb
aas
inc
push
xor
inc
div
mov
in
sbb
cli
jno
sub
leave
sbb
mov
push
jmp
jae
mov
xchg
pop
cwtl
xchg
mov
pop
fsubs
xchg
jne
mov
or
mov
jae
insl
pop
mov
adc
dec
lock
outsl
aad
jl
add
scas
lds
cmpsb
aad
push
sub
or
jge
daa
aaa
andb
sbbl
xor
pop
xor
ja
xor
lcall
pop
loopne
or
stos
inc
ja
dec
enter
lcall
shlb
dec
adcl
nop
push
inc
enter
outsb
in
into
stos
insb
scas
pop
mov
mov
sub
shr
mov
pop
inc
shll
jg
fidivl
out
data16
decl
psubusw
call
sbb
pop
in
push
add
and
pop
mov
in
push
insl
mov
bound
sub
add
imul
ret
mov
xor
dec
add
jo
mov
out
jmp
and
xor
fldenv
js
push
lods
pop
cwtl
push
aad
jne
out
aam
xchg
jno
sbb
cltd
or
adc
loop
mov
pop
pop
int3
inc
into
mov
cmp
dec
mov
imul
jnp
xor
jge
mov
xchg
mov
jmp
dec
test
cltd
dec
fdivl
fistps
pop
xchg
dec
add
add
mov
push
in
or
ror
adc
movsb
pop
aad
ficomps
mov
inc
icebp
pop
imul
out
fst
jp
test
insb
out
add
xchg
rolb
mov
call
lods
or
es
shrl
negl
mov
sbb
xor
adc
pop
xor
mov
scas
sub
test
addr16
jge
add
icebp
push
test
push
sahf
sbb
pop
xchg
addr16
in
ss
aaa
mov
add
sbb
popf
lahf
fstp
sub
dec
je
shl
push
dec
push
jb
cmp
jecxz
cmpsl
mov
jns
andl
fcoml
mov
and
in
das
data16
fldenv
addr16
xor
int3
fisttps
popa
xchg
aam
das
pop
into
sub
arpl
in
inc
dec
push
rol
std
or
pop
xlat
and
rcll
jnp
ret
lahf
add
in
cmp
sti
scas
sub
mov
hlt
add
mov
gs
inc
and
cs
cld
mov
lds
mov
gs
xor
sbb
in
lods
push
pop
xchg
xchg
jno
mov
es
out
mov
in
and
add
scas
xor
cli
push
xchg
loop
mov
scas
test
mov
stc
scas
sbb
gs
hlt
sti
mov
push
push
mov
into
push
mov
jno
add
mov
cwtl
int
cmpsl
or
pop
sub
mov
scas
andl
test
push
xor
push
sub
sub
sbb
out
and
mov
xchg
sti
jo
cmp
sub
enter
xor
push
push
cmp
sbb
sub
pop
inc
and
fwait
cmpsl
push
insl
mov
cmp
xchg
add
sub
test
mov
adc
mov
or
mov
pop
add
mov
in
push
rolb
ss
pop
lret
ds
adc
cmc
mov
adc
pop
or
xchg
pop
xor
jo
movsb
ljmp
xor
pop
insl
cmp
sub
mov
mov
ds
push
cmp
scas
ja
sub
cmp
pop
sahf
out
xlat
dec
add
ret
mov
pop
push
daa
pop
add
xchg
cmpsb
and
jmp
icebp
aad
rcrb
int
out
and
les
std
clc
sub
sbb
sbb
stos
mov
xor
xlat
mull
push
add
arpl
mov
xlat
ds
loope
aas
test
in
inc
or
push
sbb
and
stos
xchg
in
xchg
aad
es
lods
jmp
xchg
push
enter
xchg
jge
add
xor
aaa
pop
js
iret
xchg
test
mov
sbb
outsb
pop
jnp
push
adc
adc
xor
mov
inc
xchg
repnz
pop
lock
inc
mov
push
daa
mov
sti
inc
or
pop
xor
sub
jge
loope
idivb
and
cmp
loope
xorb
or
mov
mov
incl
and
xchg
nop
jg
ljmp
aas
out
movsb
push
push
out
mov
jmp
xchg
lds
imul
mov
fdiv
icebp
stos
das
aaa
jl
mov
pop
mov
movsb
jbe
or
inc
sbb
xor
ljmp
push
vmread
push
rcr
xchg
mov
dec
xchg
leave
push
mov
mov
out
inc
inc
fists
cmpsl
loop
pop
in
push
push
mov
aas
dec
cmp
pop
and
test
xor
xchg
mov
aaa
add
pop
fisubl
mov
repz
lods
add
pop
adcb
xor
xor
rcl
outsb
rcll
xor
mov
das
sarb
push
ljmp
test
dec
stos
inc
mov
mov
test
xchg
rol
jo
iret
jae
and
xor
xor
mov
orl
movsb
sahf
clc
pop
cli
shl
add
rorb
or
imul
or
clc
cmp
icebp
inc
test
mov
call
fcmovb
lea
repnz
in
cs
iret
clc
out
add
inc
pushf
sahf
inc
outsl
in
xchg
pop
popa
sub
mov
cmp
lods
dec
pop
mov
inc
mov
movsb
jmp
out
cld
imul
dec
std
add
sbb
jl
ss
push
push
mov
adc
push
adc
roll
shll
jle
into
in
loopne
mov
xchg
xor
lea
out
pop
fcompl
inc
mov
xchg
add
sub
lahf
ja
ret
mov
jl
push
pop
jne
lret
xchg
pop
jl
rolb
popa
movsb
push
rcll
loopne
xchg
add
add
inc
adc
fadds
add
and
loop
mov
ss
loop
lret
popa
adc
jne
sub
into
inc
dec
jmp
fwait
iret
lret
cmp
int3
jbe
repz
insl
dec
push
mov
mov
call
cmpsb
add
daa
mov
xchg
and
jae
or
js
sbb
fiaddl
mov
fildll
ficoms
loope
js
lret
ds
mov
sbb
mov
or
xor
pop
jg
sbb
ds
sbb
call
fs
xchg
push
dec
or
shlb
jno
or
inc
jno
daa
leave
inc
aam
or
push
inc
push
lahf
test
xor
xchg
jg
sub
push
mov
xor
jns
mov
outsl
dec
cli
xor
es
inc
int3
xchg
pop
in
pushf
or
repz
dec
pop
ljmp
inc
lods
ficomps
push
xor
pop
or
sub
aad
cwtl
mov
pop
xor
xchg
clc
xor
mov
push
adc
push
push
push
xor
dec
insl
mov
push
mov
shlb
dec
insb
xchg
push
mov
push
push
inc
mov
jg
aas
out
xor
dec
sbb
mov
cmp
addl
test
inc
mov
push
push
clc
mov
rol
xor
outsb
aad
sbb
iret
xchg
and
in
mov
mov
xchg
imul
pop
roll
rorb
pusha
hlt
fnstenv
add
icebp
mov
cmp
cmc
pop
xchg
jmp
fists
and
fstps
dec
mov
daa
jo
hlt
add
nop
jecxz
jp
ror
add
push
push
cwtl
cmp
and
push
ffreep
sub
add
stos
push
daa
push
stos
cmc
cwtl
js
pop
cmpsb
xchg
xchg
mov
jns
insb
sti
push
sub
jno
sub
push
imul
adc
push
xor
hlt
gs
inc
cmpb
out
add
roll
cmc
and
mov
push
and
push
sbb
outsl
lds
pop
rorb
rclb
icebp
cmp
fstps
das
lea
jle
xor
push
pop
dec
shrl
pop
enter
scas
addr16
clc
jo
sbb
insl
xor
and
cmp
lock
sbb
stos
inc
push
in
outsl
lret
inc
js
stos
xchg
jae
test
cmp
nop
or
add
mov
cli
jg
push
jecxz
push
in
pop
jnp
xchg
loope
shll
inc
jl
test
in
push
addl
sub
cmp
lahf
add
fsts
ret
hlt
mov
div
out
mov
adcb
xlat
or
xchg
add
dec
inc
mov
loope
push
insl
mov
sub
and
push
mov
dec
popf
fwait
mov
pushf
test
movsb
xchg
xor
flds
add
cmc
fsubrp
iret
cmc
sub
gs
clc
or
pop
fcom
or
mov
sub
scas
cmp
nop
push
enter
mov
add
dec
xchg
lods
cltd
dec
jmp
stc
mov
jg
pop
jb
addr16
cmp
pop
jl
idivl
add
out
rolb
and
push
arpl
fstps
aam
fisubl
lcall
dec
inc
xlat
push
sub
in
sbbl
scas
das
ljmp
mul
add
shrl
repnz
ret
mov
jo
ficomps
insb
xlat
mov
pop
pop
out
shr
cmp
mov
lock
cmp
push
movsb
adc
in
cwtl
inc
sti
push
mov
mov
or
mov
sub
loopne
mov
fwait
popa
out
out
lods
rclw
mov
jbe
dec
pop
and
lsl
fwait
aas
mov
fbld
pushw
jecxz
mov
adc
mov
inc
sbb
cmp
push
stc
pop
lret
xchg
or
je
mov
mov
stos
enter
push
cld
call
or
inc
jp
icebp
scas
jb
int3
dec
adc
int
jecxz
xor
mov
pushf
fcmovbe
jae
call
adc
addr16
push
push
cs
add
mov
inc
mov
push
sbb
jne
lret
test
xchg
leave
in
das
scas
inc
aas
outsl
cmp
dec
rorb
mov
fistl
jg
movsl
out
push
jecxz
fcomp
ds
cmp
pop
xor
test
shlb
sub
sub
xchg
orb
popf
js
movsl
jo
dec
push
mov
je
mov
jmp
xchg
and
sbbl
ljmp
mov
aam
inc
call
mov
jo
push
jmp
daa
add
xchg
je
add
lret
sbb
sbb
pop
sar
dec
cmpsl
pop
cmp
loop
mov
enter
or
lret
sbb
mov
mov
jmp
mov
aaa
in
repnz
pop
das
fisubrl
aaa
std
popf
xlat
and
inc
and
cwtl
cmp
aaa
jo
les
out
or
loop
pushf
mov
cmp
jmp
out
push
hlt
cmp
pop
outsl
and
shlb
jge
shll
add
sbb
pop
mov
or
insb
jl
jne
xchg
dec
rcrb
push
sarb
subb
jmp
add
dec
stos
movsl
pop
div
in
ja
ret
je
rorl
das
lret
pop
cwtl
xor
mov
cmpsb
xor
lock
adc
cld
cmp
imul
xor
sarb
daa
cli
and
lcall
mov
data16
or
je
sub
loope
ja
bound
pop
int3
aad
push
sub
push
enter
or
ret
ss
sti
lods
jne
mov
loope
push
push
data16
cmp
ret
mov
inc
or
cmp
je
push
jns
cmpsl
xlat
nop
ss
pusha
cmp
je
in
shl
cld
popf
std
idivl
es
xor
lret
insb
mov
fimuls
fs
sub
pop
or
icebp
repz
lods
ret
shll
cmp
out
or
jmp
faddl
js
or
lahf
call
das
mov
sbb
pusha
movsb
adc
xchg
xchg
ja
pop
xor
sbb
xorl
sahf
into
inc
push
outsl
push
test
lock
stos
push
pushf
mov
lds
cmp
dec
adc
push
sub
clc
pop
jp
mov
scas
repnz
sbb
sub
dec
sti
cli
inc
inc
adc
push
ret
xchg
lahf
adc
dec
and
mov
outsl
mov
sub
mov
js
xchg
add
pop
fsts
add
xchg
sub
aas
imul
xchg
rorl
inc
mov
xor
incl
test
xchg
loop
pop
lret
push
jmp
clc
cmp
test
and
xor
iret
sub
out
mov
cmp
cltd
lock
sub
inc
popa
push
lock
jo
movsl
sub
data16
aam
adc
dec
xlat
leave
jns
xor
mov
lcall
das
into
dec
push
cli
xor
cmp
addr16
daa
ja
jle
sbb
push
cmp
ss
loopne
xchg
lahf
lcall
js
mov
pop
aam
xor
test
cmp
je
inc
pusha
sbb
fdivl
mov
cmc
dec
test
shlb
dec
test
enter
pop
cwtl
shl
mov
sbb
mov
lods
jnp
repz
push
nop
outsl
jno
jecxz
loope
out
and
sahf
repz
aam
push
clc
sub
jmp
test
push
mov
push
mov
ret
test
sub
dec
xchg
bound
pop
push
cmp
sub
fdivr
jnp
pop
push
ljmp
cmc
add
dec
out
mov
fs
mov
mov
fstl
icebp
ja
jl
push
hlt
dec
or
aad
pop
and
push
outsl
and
imul
xor
xorl
aam
ds
adc
test
stos
mov
xchg
add
jbe
out
fistpl
push
dec
f2xm1
shl
out
out
sub
push
sub
dec
jno
movsl
in
sbb
xchg
lret
imul
mov
cmp
and
addb
xchg
cmp
gs
repnz
lods
xorb
insb
mov
cmp
xlat
insb
ss
add
pop
sbbb
imul
dec
pop
shrl
btr
insb
jge
and
adc
pop
add
jg
loop
xchg
insl
lret
push
cltd
in
add
push
fcoml
je
mov
mov
adc
int3
repz
stos
in
pop
lods
out
stos
push
or
icebp
push
jg
es
xchg
sbb
pop
movsl
fdivp
push
mov
push
pop
sub
les
jge
pop
sub
popf
testl
cmp
mov
add
dec
pop
cwtl
in
mov
scas
cmpsb
mov
adc
stos
ffreep
mov
or
xor
xor
int
data16
mul
push
pop
push
dec
jge
push
ds
ret
xor
add
int
add
jnp
pusha
add
lahf
loop
push
push
mov
xor
test
push
push
mov
std
pop
and
cmp
cmp
xor
jmp
jge
shlb
movsb
mov
lods
or
pop
inc
adc
xlat
mov
movsl
xchg
xor
iret
push
icebp
arpl
push
or
push
adc
dec
pusha
and
adc
cmc
test
sub
or
push
add
sbb
xchg
push
lods
ja
repz
pop
out
mov
dec
xchg
sub
std
push
jb
sbb
std
out
cmp
sbb
adc
into
int
xor
mov
loopne
les
loopne
loop
in
hlt
mov
xorl
test
add
das
push
xor
push
xor
int3
sbb
mov
std
pop
cs
add
sti
inc
xchg
lock
cld
das
dec
aaa
jae
sub
jle
sbb
ljmp
int
test
fnstsw
adc
add
pop
es
push
push
mov
push
les
gs
out
mov
pop
and
xchg
mov
stos
inc
and
mov
add
xchg
nop
lds
test
adc
lds
jge
std
jge
mov
stc
sub
scas
push
mov
mov
jmp
nop
fisttpl
sbb
mov
gs
outsl
loopne
aam
lods
xchg
xor
cmp
outsb
adc
lret
outsl
pop
lock
xchg
lret
stos
cmp
test
in
stos
sbb
adc
jb
fisttps
sbb
jne
adcl
insl
pop
mov
push
ss
dec
xor
cs
xor
inc
xor
out
xchg
enter
sbb
int3
repz
std
and
sti
sbb
rolb
in
or
outsb
dec
jg
stos
ss
sahf
cmc
pop
mov
mov
inc
add
es
inc
arpl
cmpsb
jg
sbb
pop
dec
aad
xchg
sbb
jecxz
and
push
xor
nop
mull
lods
sbb
xor
jg
xor
pop
outsb
imul
dec
inc
adc
shlb
std
adc
xor
mov
sbb
push
movsb
arpl
cli
cmpsl
shrb
jle
push
lret
mov
cmpsl
xor
add
std
cmp
push
lret
sahf
sti
lds
mov
jl
lret
cld
repnz
xchg
fiaddl
test
outsb
bound
and
sbb
mov
mov
enter
add
outsl
add
cmp
lds
out
cwtl
loopne
push
push
cmp
ja
inc
xchg
testb
push
mov
dec
fnsave
js
or
in
pop
mov
add
mov
jmp
fwait
mov
mov
jge
cmpsl
cwtl
nop
in
and
lcall
fcomp
sub
insl
xlat
dec
ds
ror
inc
xchg
push
or
es
incl
push
or
in
xchg
pushf
cli
pop
sbb
pop
stc
jnp
orl
je
shlb
xchg
in
nop
addr16
inc
cmpsl
mov
dec
cmp
mov
xchg
push
push
out
sahf
lods
aas
lcall
sbb
shrb
push
pushl
xchg
aam
jecxz
xor
les
mov
lcall
adc
xchg
add
adc
imul
test
movsl
and
lods
adc
dec
jg
test
and
mov
movsl
shlb
and
xor
cs
xor
popa
jg
mov
mov
in
bound
out
xchg
fistpll
jp
dec
jns
iret
add
cmp
pop
mov
inc
sahf
int
pop
push
add
call
mov
outsb
mov
or
cmp
xor
add
mov
fwait
dec
lret
xorl
xor
jne
outsb
ljmp
lcall
out
leave
pop
imul
mov
daa
data16
or
insb
pop
xorb
cmp
lock
and
cmpsl
loopne
xor
mov
push
xor
addr16
add
or
mov
dec
dec
mov
dec
dec
and
and
sub
mov
lods
pop
jo
lock
scas
sarl
daa
iret
mov
push
and
adc
dec
test
jae
rol
mov
or
mov
sahf
mov
movsl
cs
mov
bound
or
notb
sbb
lcall
inc
cmp
test
mov
iret
mov
stos
add
push
insb
fnstenv
clc
and
mov
mov
lcall
push
movsl
outsl
fdivrl
repz
insl
pop
sbb
or
ja
test
aas
pop
repnz
push
or
mov
cwtl
adc
xor
pop
xor
in
icebp
es
mov
mov
out
mov
mov
lods
sti
insb
cmp
jp
sbb
rclb
ficomps
sar
pusha
push
push
les
lods
repz
jne
lods
pop
insb
popf
mov
out
inc
fldcw
xor
pop
cmpsb
fstpl
call
and
mov
bound
cmp
test
mov
jb
mov
daa
or
xor
mov
adc
lret
dec
mov
adc
shll
divl
inc
and
cld
roll
push
adc
dec
mov
mov
cmp
mov
dec
je
aad
add
push
jle
dec
adc
jnp
dec
sub
adc
negb
xchg
or
cltd
push
cmpsl
les
mov
cmp
and
mov
insb
int3
cld
sti
add
enter
xor
cmp
mov
fwait
mov
je
out
jb
out
mov
dec
add
imull
mov
imul
add
pop
les
mov
test
xor
mov
dec
mov
negl
pop
mov
xor
cmp
and
subb
add
pop
lret
inc
xorl
sbb
adc
cmp
pop
push
stos
test
adc
push
jb
es
lock
loopne
icebp
sti
aad
cld
jle
jns
sbb
fisubrl
mov
cmp
pop
lcall
stos
push
outsl
jae
icebp
mov
test
addr16
shrb
pop
adc
push
bound
pop
popa
popa
scas
into
scas
rcll
imul
sub
mov
fs
mov
xor
add
repz
lock
sar
test
push
pop
test
dec
es
fisttpl
aaa
cltd
dec
ljmp
mov
dec
aad
hlt
inc
call
dec
add
jp
cmp
in
push
pop
mov
movl
or
push
mov
nop
cli
xchg
shr
cmp
jg
insl
dec
mov
lds
sub
sahf
add
sub
dec
pop
jl
push
jo
iret
std
int
add
sbb
mov
xchg
movsl
or
mov
cmp
sub
cli
dec
ss
dec
push
cmp
jbe
jo
add
fwait
jbe
lea
ja
xor
je
push
push
pop
sbb
xor
mov
and
lcall
mov
add
inc
outsb
xchg
push
inc
xlat
dec
jmp
cmpsb
inc
xchg
jmp
xchg
andl
pop
repnz
pushf
xor
mov
ss
sub
ds
pop
cmpsb
xchg
stos
mov
mov
icebp
pusha
xchg
inc
lret
outsl
in
sub
pop
ret
imul
push
lods
stos
rcrl
ss
jno
bound
xchg
jge
imul
test
push
imul
mov
mov
js
push
outsb
iret
int3
push
cmp
jnp
jno
mov
push
jbe
andl
in
mov
and
push
mov
pop
ss
jecxz
mov
sub
mov
jg
cmp
and
and
shrl
gs
sub
jecxz
mov
jge
dec
lods
inc
mov
cmc
imul
insb
dec
out
cltd
sarb
jae
in
sbb
lret
xorb
add
loopne
or
in
pushf
inc
lea
jno
dec
xchg
ds
mov
cs
aaa
cmp
data16
pushf
sub
dec
repz
dec
test
inc
fstp
pop
add
loopne
iret
jb
ret
dec
enter
adc
fldcw
enter
sbb
xchg
xor
jecxz
and
sbb
mov
mov
sbb
lahf
les
and
imul
inc
aam
xlat
sbb
sbb
shl
mov
repz
ss
pop
xor
push
insb
std
int3
cmp
lcall
xor
adc
fistl
test
test
jmp
cli
outsb
ljmp
xchg
adc
pavgw
inc
xchg
inc
cmp
cwtl
and
mov
arpl
rcrl
stos
lea
cmpsl
mov
test
ss
mov
fisubs
sbb
ret
sbb
push
shr
test
imul
jg
dec
inc
push
pop
cmp
cwtl
lock
inc
jno
pop
push
pop
call
sub
cmp
aad
insl
add
push
inc
and
dec
enter
pop
inc
int
test
inc
addr16
mov
lahf
mov
outsb
lcall
pusha
push
sub
cmp
dec
push
and
ljmp
aad
mull
lret
mov
and
fdivrs
in
mov
sub
pop
push
jp
pop
xchg
sbb
xor
stos
lods
jmp
jg
ljmp
sub
push
mov
dec
sbb
ret
mov
mov
xchg
inc
loope
cmp
xchg
sub
mov
pop
cmc
in
mov
fistpll
lods
das
xor
aaa
cltd
or
jmp
loop
movsb
insl
pop
jnp
pop
sbb
pop
hlt
mov
sbb
jge
cld
mov
popf
mov
ds
int
mov
arpl
fidivrs
dec
xchg
push
cmp
sbb
sub
push
bound
mov
or
push
fwait
insb
pusha
sti
cmpsb
insb
pop
mov
inc
stos
inc
leave
pushf
xchg
sub
out
push
dec
and
mov
or
and
mov
sub
xchg
addl
insl
sub
imul
stos
jmp
xor
jo
arpl
rorb
push
push
sub
dec
xor
sbb
cmp
jg
fucomi
jmp
loopne
std
stos
imul
mov
mov
xor
pop
push
fnstenv
fmuls
mov
jmp
jg
inc
and
imul
rcrl
notl
shl
push
jb
sar
lcall
pop
jle
mov
sub
arpl
loopne
out
stos
dec
leave
ret
jmp
mov
popf
pop
xor
jns,pn
cs
pop
add
rclb
pop
sbb
mov
nop
cwtl
pop
sbb
jo
and
ret
out
inc
adc
cli
test
ror
dec
sar
xor
cwtl
cmpl
fwait
xor
popl
mov
ljmp
insl
ja
out
fdivs
scas
xor
dec
pop
int3
jne
test
icebp
mov
push
cmc
xchg
fcompl
movsl
pop
mov
enter
shlw
je
cmp
clc
pop
or
fs
jbe
icebp
sub
push
ret
data16
out
or
in
mulb
jmp
pop
je
inc
jle
les
bound
in
hlt
popf
inc
sub
sbb
outsb
push
sub
aam
clc
out
call
mov
inc
sahf
out
std
xchg
pop
not
mov
adc
push
jne
push
or
sti
andb
or
out
mov
xor
dec
xor
xorl
jl
inc
pop
pop
mov
xchg
fcomps
pusha
jg
shll
nop
mov
notl
push
fidivrs
xchg
popf
cmp
inc
jmp
or
daa
mov
hlt
pop
in
fisttpl
dec
dec
mov
adc
fwait
pop
jmp
cmp
cmp
in
pop
je
jg
iret
mov
ds
stos
test
ret
mov
or
cmp
fsubl
add
rcrl
jle
outsb
ret
pushfw
add
test
imul
pop
jecxz
sbb
ss
mov
add
xor
xor
incb
neg
mov
mov
sbb
loope
push
pop
dec
loope
lret
cmp
push
popf
push
jmp
xchg
out
push
pop
and
push
sbb
jo
insb
mov
adc
dec
mov
add
popf
les
outsl
inc
xor
jne
bound
dec
push
pop
push
xchg
add
cwtl
sub
xor
jne
cmp
pop
pop
jno
pop
sub
cmp
decb
cmp
mov
arpl
pop
and
das
scas
adc
mov
adc
adc
and
mov
pop
ret
cltd
cmp
jecxz
fsubl
xchg
std
repz
pop
enter
adc
jp
xchg
lods
pushf
jb
out
cmp
ss
popf
lret
int3
loop
ret
lret
xlat
adc
addr16
insl
push
mov
dec
pop
sub
xchg
pop
arpl
mov
add
xor
and
sub
mov
negl
imul
insb
cwtl
in
ret
aas
icebp
fsubrp
dec
arpl
in
push
ljmp
shll
and
in
mov
xorb
cli
or
cwtl
rolb
and
ss
xor
insb
xor
jo
mov
outsl
or
mov
push
stc
into
pop
xor
jle
push
mov
xor
jmp
shll
cmc
fistps
fdivr
sbb
xor
and
int
or
fwait
mov
scas
push
out
mov
cwtd
movsb
dec
pop
pop
cmp
fdiv
or
cltd
stos
pop
sbb
lea
imull
in
addr16
pop
out
lcall
sub
push
cld
xor
test
mov
xchg
adc
loop
addr16
sbb
dec
shl
mov
mov
fucomip
add
ffreep
inc
push
imul
int3
cmp
stos
mov
lods
adc
shll
pop
fisubs
stos
movd
lret
xchg
das
jae
pop
dec
insl
in
movsb
das
jnp
mov
xlat
bound
sbb
idiv
adc
dec
or
sti
adc
movsl
data16
push
ret
or
xor
popf
lods
movsl
jmp
adc
mov
ds
clc
push
sub
pop
xor
jbe
test
rcrb
bound
div
lods
sub
sbb
sbb
and
push
mov
adc
mov
movsb
lcall
jg
and
mov
mov
sbbl
in
in
sub
imul
adc
pop
add
inc
in
add
sbb
xor
loopne
xor
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
mov
cmp
mov
pop
int
jl
pop
jl
popf
or
lds
sahf
sub
mov
cmp
shll
xchg
aad
fsubl
xchg
mov
shlb
mov
std
mov
and
loop
loop
jecxz
and
add
xor
add
lods
scas
int
jge
mov
fs
hlt
sub
jg
jns
sahf
and
pop
sub
xchg
mov
sbbl
inc
push
das
mov
cmp
out
pop
mov
xchg
pop
mov
push
js
mov
imul
pushf
sbb
negl
loopne
add
cmp
pop
scas
adc
out
pop
out
lea
push
push
in
mov
stos
or
pop
xor
xlat
in
dec
rclb
mov
mov
mov
xchg
push
out
inc
push
jecxz
inc
out
scas
leave
nop
adc
jg
mov
cwtl
inc
jno
mov
out
cmp
out
dec
cwtl
xor
cmpsb
adc
or
mov
mov
lcall
adc
mov
popa
ljmp
aam
adc
add
jp
mov
in
cmp
lea
push
add
xorb
dec
or
add
mov
mov
stc
xchg
imul
pushf
jnp
jb
cmp
mov
add
int
inc
addr16
mov
es
jge
scas
dec
pop
pop
xchg
and
mov
and
jb
subl
daa
mov
loopne
push
subl
pop
repnz
jge
cmp
adc
dec
cmp
add
push
lcall
gs
dec
sbb
lret
xlat
add
icebp
pusha
sahf
scas
sub
fdivl
in
cli
pop
in
mov
movsl
loop
stc
inc
inc
fs
jl
iret
lret
shll
cmp
sub
rcrb
inc
into
cli
gs
push
mov
sub
pop
pop
push
dec
lock
adc
ret
push
xchg
jge
inc
mov
into
xchg
inc
xchg
add
rcll
jmp
cmp
push
jb
fwait
lods
jge
jl
mov
cmpsw
aas
mov
lds
fidivrs
mov
and
sub
or
sbb
jle
jno
sbb
testl
bound
ljmp
xor
mov
add
pop
outsl
in
and
adc
cs
std
adc
sub
pop
shlb
dec
dec
push
scas
cmpl
jge
int
ret
pop
repz
ljmp
les
pop
fisttpl
insb
roll
rorb
popf
in
bnd
xchg
xor
outsb
mov
cld
mov
leave
inc
lret
pop
fsubs
loop
mov
repnz
xchg
and
mov
adc
movl
ret
ret
imul
outsb
ja
mov
pop
adc
negl
repnz
shlb
xchg
or
adc
cs
sbb
adc
adc
mov
sub
push
dec
leave
sti
push
mov
ficoml
push
hlt
arpl
shll
jnp
sub
jns
mull
out
add
cmp
adc
fs
lcall
lahf
sub
loop
icebp
jb
roll
cld
jl
xchg
das
popf
imul
dec
pop
ret
fnstcw
in
inc
xor
cmp
out
push
inc
inc
push
or
loopne
mov
push
pop
mov
out
fisubrl
aam
push
jns
dec
cli
ljmp
xor
bound
push
and
mov
jb
aaa
xchg
xor
fst
les
sub
sbb
jl
in
fpatan
add
cmp
rorl
shrl
adc
ds
stos
or
xchg
lods
push
push
jno
sbb
pushf
imul
aam
pop
psubsw
jne
pusha
push
popa
insl
adc
inc
fadds
movsl
xchg
xor
jle
fists
leave
jl
cltd
fdivrp
dec
xchg
push
push
fsubs
or
shlb
mov
stos
push
push
xor
push
cmp
pop
arpl
ret
hlt
in
push
sbb
roll
arpl
fldl
jmp
loope
shlb
cmpsb
test
pop
sti
pop
pop
jnp
fdivl
dec
test
jnp
inc
sub
or
jo
xchg
mov
fs
pusha
pusha
jl
insl
add
sbb
mov
add
and
loop
pop
dec
pop
outsb
push
mov
jne
stos
ror
push
push
mov
xor
inc
pop
fiadds
and
inc
test
xor
mov
sti
dec
lods
pusha
mov
gs
jns
cli
lret
push
das
sbb
pop
sbb
lret
cmp
loope
ret
addr16
xchg
rorl
dec
jp
test
in
in
fstps
mov
das
repnz
xchg
sub
bound
inc
mov
cmp
icebp
inc
mov
in
sub
xor
dec
dec
cmpb
je
testb
sub
cmp
pop
movsl
inc
add
in
mov
xchg
pop
mov
ret
das
pop
les
or
xchg
rclb
jo
loop
leave
adc
pop
daa
sarb
pop
mov
not
ljmp
stos
jne
push
pop
dec
ljmp
clc
pop
mov
cwtl
mov
cwtl
aad
int
scas
lods
shll
sub
int3
ficompl
cli
fdivr
in
pop
add
jns
flds
push
lods
lods
mov
lret
cwtl
and
in
jb
ljmp
mov
ds
fwait
or
test
add
outsb
and
outsl
fdivl
imul
imul
lret
push
shr
inc
or
shll
xchg
mov
fstl
mov
cmp
inc
or
cld
add
and
cmp
adcl
leave
mov
pop
xor
lret
ret
les
jo
adcl
mov
lret
mov
inc
xchg
inc
imul
cmpsl
xchg
xchg
cmp
scas
test
popf
adc
pop
jns
and
cltd
sbb
mov
aad
jbe
dec
sub
inc
imul
shrl
outsb
sub
add
sti
mul
xchg
scas
and
add
adc
adc
push
into
push
ds
xchg
in
rcrl
repnz
sbb
mov
std
pop
ds
clc
mov
inc
and
shll
and
and
rcr
push
add
sbb
inc
sub
arpl
lcall
mov
push
in
sbb
dec
adc
movsb
mov
cwtl
mov
xor
add
aam
inc
push
pop
xor
adc
mov
xorb
mov
dec
or
jnp
js
in
mov
push
stos
gs
arpl
push
dec
xchg
in
lahf
dec
sbb
jae
cmp
rolb
or
sub
pusha
pop
dec
dec
cmpb
divl
lcall
xor
shll
adc
mov
ror
lcall
xchg
int3
sbb
cwtl
push
rorb
adc
jge
xchg
xor
and
mov
push
in
ja
mov
dec
inc
mov
imul
pop
inc
and
insl
jno
adc
stos
js
xor
pop
cmp
pmaxsw
ljmp
out
aaa
mov
push
cmp
mov
stos
arpl
mov
clc
xchg
jge
sbbl
xchg
and
das
imul
mov
cmp
in
xchg
sub
or
sti
es
cmp
das
ja
psubusb
call
shrb
add
clc
aaa
decb
fs
xlat
pop
jge
jne
pushf
cli
test
fildl
or
sub
mov
movsl
mov
or
or
or
push
add
sub
and
ss
xor
sub
test
dec
fs
aam
pusha
daa
in
test
dec
sub
jmp
mov
sbb
cmp
xor
dec
fisubrl
or
xchg
jl
inc
inc
fs
xchg
frstor
cmp
inc
pop
cmp
std
push
xlat
bound
pop
or
adc
push
into
jl
mov
hlt
fcmove
jb
push
add
sbb
in
insl
gs
cmp
fmull
out
and
jle
dec
jp
add
jp
sbb
in
setle
pop
mov
mov
es
stc
test
mov
sub
je
sub
mov
push
mov
nop
cmp
or
cmpsl
push
xor
out
dec
mov
fidivrs
aad
push
in
es
mov
jmp
sub
pop
imul
cmp
xor
sbb
shl
inc
ror
pop
je
sbb
sbb
cmc
cmp
pushf
dec
frstor
mov
pushf
lds
xor
mov
rorl
xchg
loop
dec
jne
cmpsb
cmp
adc
cmp
pop
sarb
sub
rorl
sbb
cli
dec
jae
sub
inc
popw
pop
pop
and
add
outsl
jb
jecxz,pn
and
int
test
mov
xor
stc
ret
imul
adc
xor
inc
lret
dec
repnz
lods
popf
fbstp
push
and
scas
fs
les
sub
jl
or
pop
cmp
cwtl
push
fs
pop
xchg
pop
add
fcomps
pop
push
popf
cmp
xchg
pop
out
sbb
test
fsubrl
xlat
mov
lods
repnz
mov
xchg
cmp
adc
jae
mov
mov
or
jmp
flds
pusha
ljmp
sub
or
stc
ficomps
aas
call
sbb
xlat
mov
add
movsl
mov
lcall
jb
imul
cmp
movsb
rcrl
rorb
mov
movsb
imull
sbb
movsb
aam
or
fidivl
movsl
mov
xorl
sbb
jg
mov
in
push
and
pop
repnz
aam
mov
int
pop
xor
cli
pop
jno
scas
lock
xchg
mov
in
xor
sub
fstpl
inc
insl
into
jb
leave
inc
or
cli
push
dec
mov
aaa
rorl
stos
cmp
subl
jns
add
mov
hlt
jns
sub
pusha
fldt
mov
leave
jne
jae
subl
adc
cmp
sbb
clc
mov
stc
clc
and
jnp
int3
out
aam
shll
call
test
negb
js
cmp
cmp
dec
cmp
push
jnp
fsubl
xchg
push
aaa
incl
push
es
or
sub
mov
xchg
fsubs
pop
sub
in
in
popa
mov
fiadds
fcomps
adc
ficompl
xchg
popa
cwtl
inc
into
xor
icebp
push
jl
sub
mov
pop
add
pop
mov
inc
cmp
clc
aas
lods
mov
mov
mov
xchg
fsubs
mov
scas
mov
rcrb
or
xchg
push
test
mov
inc
inc
nop
divb
pop
push
push
js
mov
in
js
mov
inc
xchg
mov
cmpsb
dec
fdivs
adc
mov
push
cli
pop
or
inc
xchg
xchg
xchg
pop
and
cld
rol
rcrb
mov
add
les
push
push
pop
orb
rolb
xchg
dec
mov
leave
xchg
ja
mov
into
aad
xor
jbe
inc
push
pop
lods
xchg
inc
sub
daa
fstpt
cmovg
fnstenv
push
stc
xchg
mov
mov
lods
je
mov
and
mov
inc
adc
or
pop
popa
jae
cmp
xchg
push
bound
mov
ds
movsl
or
inc
push
testb
xchg
addr16
and
jbe
out
xor
shll
or
mov
es
inc
add
clc
popa
int3
cmpsb
inc
stos
add
jae
aad
lds
outsb
sti
aas
and
cmp
mov
inc
and
xor
push
adc
pop
push
jecxz
sbb
mov
dec
nopl
dec
ret
pop
pop
lahf
fcompl
jne
mov
pop
out
xchg
aas
sub
add
sbb
outsl
xchg
cltd
jle
adc
or
inc
mov
loope
leave
jne
add
push
dec
push
ficompl
inc
mov
cli
push
orb
nop
addr16
stc
packuswb
out
add
push
mov
add
jne
dec
cmp
inc
push
imul
xor
or
in
fisubl
mov
loop
out
mov
cmp
adc
rorl
les
mov
xor
andl
mov
pop
jo
scas
loop
adc
test
jl
test
movsl
fisubrs
subb
loope
xchg
fucomi
inc
sub
insl
loop
pop
out
leave
mov
or
jb
xchg
or
test
rclb
adc
pop
add
roll
dec
stc
jbe
imul
ljmp
jmp
lds
sahf
rolb
cmp
movsl
mov
ret
sbb
xchg
xor
aam
push
shrb
fidivrs
cmp
cld
xor
and
adc
nop
push
outsb
leave
mov
clc
jmp
outsb
iret
cmp
mov
xor
xor
js
adc
xchg
aad
jmp
sbb
add
fucom
lea
daa
dec
mov
and
pushf
ljmp
pop
jecxz
pop
cmpsb
outsb
gs
push
fs
cwtl
fistpll
mov
andb
repz
repnz
pushf
adc
leave
xchg
mov
jne
push
cwtl
jmp
movsb
add
jb
stos
lods
mov
jns
popf
inc
xchg
sti
and
std
cmp
stos
imul
test
lahf
sub
jae
leave
add
mov
icebp
cmpsb
xor
or
adc
push
mov
ds
fcoml
inc
ljmp
jnp
jo
incb
xlat
fxch
cmpsb
pop
imul
out
cmp
cmp
dec
or
scas
ret
inc
aad
push
or
lcall
pop
cmp
popf
arpl
test
push
ss
add
inc
push
push
jne
jl
cmp
jl
sub
in
fcomip
jge
fimuls
sbb
push
rcrl
adc
inc
out
jne
enter
fmulp
pop
fstpt
push
push
mov
loope
stos
shl
outsb
xchg
jmp
lcall
xchg
ja
lcall
xchg
pop
add
pop
pop
cli
mov
xchg
pop
or
sbb
js
jmp
stos
sub
pop
xchg
pop
gs
sbb
sub
sbb
push
adc
jns
adc
pop
inc
lret
mov
repnz
loopne
ret
or
xor
subb
cli
sub
lods
adc
fcmovnu
mov
bound
mov
push
aam
scas
loope
mov
in
lcall
fiaddl
sub
jae
test
pop
mov
dec
pop
jno
test
sbb
movsl
ret
lds
xchg
pop
loopne
jmp
inc
pop
repnz
test
jnp
lret
js
jge
jge
xchg
mov
adc
inc
in
or
rclb
fistps
mov
cld
sub
enter
push
sti
xor
dec
sub
cmc
scas
sbb
pop
test
xor
xchg
pop
aad
mov
xchg
xor
and
push
sarl
jnp
loopne
add
mov
adc
subl
mov
mov
iret
xchg
leave
cmp
mov
stc
pop
xchg
insb
enter
push
popf
dec
stc
arpl
and
sti
pop
mov
pop
cmp
cmp
out
stos
pop
in
jl
lods
les
pop
daa
push
shlb
mov
sti
into
dec
push
dec
dec
cwtd
lods
loope
jbe
das
fldl
pop
jmp
mov
dec
xchg
and
jge
mov
dec
dec
mov
xor
repnz
push
outsb
xchg
xchg
add
imul
xor
scas
cld
mov
and
mov
stc
xchg
jp
fadds
out
cmc
sub
push
cmp
mov
daa
out
data16
mov
mov
negl
sub
icebp
aad
xchg
ds
inc
mov
lods
out
or
jecxz
and
insb
add
popf
push
in
push
jnp
loope
in
pop
mov
in
jle
fstpt
mov
ds
insl
or
pop
pop
mov
pop
fsubrs
dec
pop
sarb
insl
sub
cld
fcmovnb
dec
sub
aas
mov
mov
sub
xchg
imul
jns
push
cld
jbe
sti
push
pop
dec
ljmp
hlt
jnp
scas
dec
mov
and
sub
jp
das
mov
dec
orl
out
loope
jno
dec
pop
cmc
mov
ficoms
out
xor
sbbl
push
es
mov
jnp
adc
lock
or
adc
push
outsl
xchg
aaa
xchg
cli
popf
mov
movsb
out
pusha
hlt
jg
inc
fistpl
rclb
outsb
jmp
mov
pop
fdivs
rcrb
sub
mov
ja
cmc
inc
jne
sbb
enter
inc
dec
xor
notl
ret
xor
pop
or
jae
out
aam
lret
xchg
pop
jmp
enter
mov
inc
das
repnz
inc
outsb
and
popf
pop
pop
sbb
push
inc
xchg
pushf
out
push
cs
in
ret
sarb
out
adc
sbb
sbb
and
xor
adcb
ds
mov
es
stc
ja
int
mov
add
sub
pop
mov
or
push
mov
dec
in
lea
mov
add
mov
dec
mov
mov
push
xlat
dec
aad
add
pop
icebp
jle
cmpsb
inc
lea
pusha
pop
xchg
push
lret
dec
push
and
sbb
clc
fsubs
and
xchg
xchg
sub
dec
cmc
mov
mov
punpckldq
mov
sbb
push
jp
mov
loop
mov
test
repz
sbb
adc
or
jnp
mov
inc
pushf
out
xor
push
jmp
jae
jns
lret
xchg
bound
mov
aam
and
mov
adc
cmp
outsb
xor
mov
imul
jb
xor
jp
insl
inc
fidivl
push
mov
sub
stos
pop
jecxz
cmpsb
in
icebp
lock
mov
negb
and
add
mov
sub
loop
lods
insl
fnsave
in
aam
inc
inc
fwait
dec
rcrl
mov
mov
rcl
add
sahf
shlb
or
pop
in
push
shrb
scas
mov
sti
movsb
push
and
adc
sbb
daa
pop
jnp
ds
push
xor
fnstsw
fmull
mov
mov
sub
inc
int
test
aad
out
into
call
out
fnstcw
xor
lods
xor
xor
sub
fstpt
mov
dec
adc
adc
mov
test
inc
mov
pop
xor
lret
adc
pop
and
cmp
test
or
daa
loop
stos
and
sbb
incl
inc
rclb
icebp
xor
in
push
dec
cli
fiaddl
xchg
stc
jbe
out
mov
ret
in
xchg
add
roll
lret
lret
xlat
jo
xchg
xor
sub
loop
xor
jo
rolb
mov
sahf
hlt
push
stos
stc
mov
xor
xchg
push
stos
push
scas
clc
ja
mov
jno
adc
jno
test
jle
mov
pop
movsb
lods
clc
je
push
leave
pop
arpl
inc
or
sbb
aas
adc
mov
les
lret
mov
ja
jnp
les
test
int3
dec
int3
adc
mov
adc
inc
xor
inc
dec
mov
jmp
test
push
loop
cmp
cld
dec
mov
lfs
add
or
sub
and
and
push
xlat
test
mov
nop
xor
adc
movsl
ficoml
icebp
jmp
adcb
pop
sub
aas
xor
cmpsb
jb
mov
dec
andl
imul
and
jle
jecxz
sub
out
pop
and
mov
out
push
lods
popf
mov
inc
call
clc
pop
outsb
sahf
pop
xchg
stos
ss
clc
nop
repnz
and
mov
mov
xor
mov
ficomps
inc
xchg
jge
out
mov
cmp
lret
mov
add
and
add
or
xlat
mov
enter
fs
jne
cs
sub
cmp
out
fdivrl
jb
jo
mov
push
out
mov
mov
dec
cld
adcb
shlb
ja
jle
push
mov
sbbl
dec
jne
sti
add
adc
jmp
and
int3
jle
mov
cmp
lret
sbb
and
push
scas
vpmulhw
xorb
and
mov
mov
dec
xchg
movsl
push
imul
adc
or
scas
in
mov
inc
mov
mov
cli
pusha
aaa
je
or
push
shr
mov
jmp
cmp
and
outsb
jecxz
loope
jmp
mov
enter
clc
xchg
mov
and
inc
cmp
pop
pop
mov
mov
xchg
outsb
push
cmpsb
imul
xchg
mov
jo
pop
lcall
cltd
jae
mov
out
or
mov
push
dec
pop
out
mov
ds
mov
lock
fcom
sbb
xor
pop
mov
shrl
imulb
inc
ljmp
pop
jl
insb
mov
lods
sbb
scas
mov
mov
rcl
sbb
mov
or
fcmovbe
sbb
popf
aaa
mov
jecxz
das
jbe
orb
and
push
scas
call
mov
iret
popa
imul
das
xchg
outsb
cmp
inc
icebp
vsqrtss
fimuls
jb
jo
in
xchg
lahf
cld
cmp
add
in
cmpsl
leave
int
les
shr
lahf
out
ss
ret
cmpsl
lret
xchg
pop
int3
sti
sub
enter
call
fs
int
xchg
sbb
ret
scas
cmpsb
stc
scas
fnsave
dec
sarb
leavew
sub
aad
adc
insb
sbb
sub
add
inc
testl
subl
fld
and
sbbb
or
ds
push
cmc
mov
mov
hlt
push
sbb
pusha
push
nop
sbb
pop
stc
jb
mov
adc
dec
movsl
push
xor
or
mov
aaa
or
cmp
shl
xchg
mul
shrb
sarb
ja
jb
pusha
lods
jge
jnp
popa
mov
and
repz
xor
rcll
mov
add
jne
lods
mov
mov
movsl
xor
aam
mov
jle
jge
out
and
insl
inc
xchg
fidivs
sub
adc
insl
xchg
jle
xorb
or
pushf
stc
and
adc
in
mov
jge
inc
xchg
add
lods
das
ret
and
fisttpll
inc
data16
out
ja
enter
push
mov
push
pop
mov
sbb
cli
clc
add
inc
ds
rolb
inc
and
dec
dec
or
inc
sti
cmc
mov
add
pop
bound
loopne
inc
jle
lcall
lret
iret
int
fists
or
adc
call
fdivrs
daa
bound
adc
jo
ja
pusha
loop
inc
xlat
xchg
int
add
inc
inc
out
popa
mov
xor
jo
xchg
cli
mov
out
sbb
ljmp
ror
dec
push
lcall
dec
pop
xchg
outsl
jmp
jle
sbb
cmp
xlat
dec
sbb
push
ret
roll
popf
stc
xchg
and
mov
mov
adc
lcall
dec
negl
loop
les
dec
mov
inc
cmc
sub
mov
rclb
cmpsl
pop
pop
imul
ficoml
insl
ror
cmp
scas
pop
loope
test
fsub
mov
imull
dec
sarb
dec
insl
push
pusha
jmp
push
mov
outsl
add
imul
jmp
into
decb
add
or
inc
xchg
aad
jl
inc
and
or
lods
inc
xchg
push
dec
das
gs
bound
out
pop
jbe
je
rcl
shl
aaa
aaa
js
and
popf
clc
sahf
iret
mov
xchg
push
int
jl
rolb
std
push
jo
mov
lahf
addr16
sbb
jmp
test
xchg
mov
mov
adc
cmp
ret
stos
push
fnsave
push
nop
sti
outsb
cltd
aaa
clc
shrb
pop
mov
sbb
push
loope
insb
icebp
ret
cwtl
sub
add
jl
and
or
mov
jne
nop
popf
jg
in
shl
push
add
icebp
dec
jl
pop
ret
dec
mov
mov
out
dec
test
cmp
jg
loope
mov
cmc
push
or
pop
xchg
mov
sbb
jmp
mov
push
cmp
add
push
and
add
lods
popa
ljmp
repnz
fidivl
cs
sti
cmp
inc
inc
add
fwait
adc
xchg
out
ficoms
inc
nop
ja
loopne
out
pop
test
in
sub
or
or
inc
cmp
popa
push
mov
sahf
test
icebp
fmuls
mov
mov
jbe
mov
cltd
scas
mov
repz
dec
movsb
pop
and
jne
pusha
jb
test
adc
inc
jae
or
xor
loopne
cmp
jne
xor
gs
xchg
xor
sbb
push
scas
fstps
test
push
gs
fs
mov
scas
jmp
int3
add
or
fstps
jle
push
xchg
mov
test
fisttpl
xchg
pop
dec
movsl
xchg
xor
mov
jae,pt
leave
sbb
cld
pop
mov
mov
xor
xor
or
adc
cli
cmp
out
idivb
mov
call
addl
add
pop
add
inc
cmp
jno
xor
cmp
outsl
stos
add
std
cmp
aad
out
cmp
or
xor
cltd
dec
push
inc
or
push
cmp
or
movw
je
js
imul
ljmp
mov
add
imul
fisubs
js
push
sbb
xchg
mov
sbb
mov
loope
je
inc
inc
sar
or
lods
lods
mov
mov
xchg
fwait
enter
xchg
pushf
sub
imul
sub
jecxz
mov
push
push
sbb
jo
push
and
add
shll
pop
jecxz
pop
imul
loopne
mov
subb
cli
sub
inc
inc
jle
xchg
xor
push
fildl
rorl
psubsb
jnp
test
sub
sbb
sbbb
sarl
fmuls
adc
rcl
add
add
cmp
adc
rolb
add
sarb
xor
mov
mov
sub
sbb
jmp
adc
dec
inc
xchg
push
mov
adc
into
les
lret
add
imul
pop
adc
fists
mov
iret
iret
mov
out
clc
andl
mov
pusha
add
jns
scas
imul
push
dec
bnd
pop
leave
pop
mov
pop
call
cmp
or
sub
add
rcrb
ds
cmp
mov
xchg
insl
outsb
jo
dec
jnp
mov
imul
bound
fs
arpl
or
cmp
push
insl
mov
ss
fxch
inc
fs
xchg
mov
mov
cld
xor
jns
mov
or
xor
jbe
mov
lds
jle
mov
push
pop
popa
push
mov
inc
out
dec
jmp
int
mov
mov
imul
stos
movsb
sahf
jns
addr16
xchg
xor
std
in
movsb
jbe
pushf
mov
or
push
sbb
add
int
or
cmp
scas
mov
push
or
flds
insl
mov
in
cltd
cmc
stc
scas
imul
mov
dec
adc
fsubs
cs
xchg
lods
mov
stos
pop
fiaddl
dec
inc
push
lds
scas
nop
int3
inc
or
jmp
jne
dec
ficoms
jl
xor
cmp
jge
lds
and
jne
pop
or
in
or
adc
sarl
das
sub
iret
add
pause
loop
push
mov
push
test
mov
pop
sub
or
mov
lea
fisubs
pop
daa
addb
hlt
push
push
aaa
sbb
fstl
pop
adc
test
and
insb
int
inc
push
cltd
bound
out
ss
xchg
testb
test
jmp
mov
loope
xchg
inc
sbb
cmc
xlat
mov
cltd
pop
adc
lods
insl
aaa
add
push
insb
mov
insl
pushf
pushf
xchg
add
xchg
add
push
and
dec
push
pop
sub
lock
cmp
js
dec
imulb
idiv
push
lret
inc
add
and
xchg
jb
and
sub
shl
sbb
mov
mov
loope
fsubs
push
push
add
leave
cmp
cltd
add
iret
sbb
push
movsl
sbbl
cmp
dec
mov
je
mov
fistps
jmp
ret
mov
push
push
push
addb
in
shll
pop
mov
pop
popf
adc
xchg
cmp
daa
fildll
sbb
rolb
stc
xchg
mov
jnp
jns
pusha
aaa
in
ret
adc
or
push
leave
jmp
mov
jl
xor
call
and
pop
sbb
cmp
inc
dec
and
or
cmp
shl
mov
outsb
test
ljmp
xor
or
push
dec
psubsw
sbb
ljmp
adc
jecxz
jp
shlb
pop
imul
xchg
inc
and
push
adc
aas
daa
xchg
sahf
subl
cmp
rcr
xor
popa
add
inc
outsb
inc
div
icebp
ret
xchg
xor
sbb
fs
lods
aad
lahf
test
aad
iret
jge
test
push
add
lea
jmp
pop
mov
jns
inc
movsb
jmp
mov
insb
sub
mov
xchg
das
lret
clc
inc
xor
lds
insl
out
push
inc
leave
adc
aad
pop
inc
ljmp
mov
jecxz
out
orl
mov
mov
je
das
pop
ja
clc
and
inc
fisubl
pop
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
jmp
insb
jns
sbb
mov
push
xchg
pop
call
pop
jl
shrb
jae
jns
xchg
mov
cmp
icebp
mov
jl
mov
xchg
jnp
aaa
fstpl
fwait
aad
fs
jmp
and
inc
mov
data16
scas
arpl
out
rcrl
push
out
cmc
mov
fdivrp
aaa
outsb
jbe
pop
xor
imul
cmp
je
arpl
push
jbe
cmp
sbb
sbb
int3
fcomps
xor
andl
cmpsb
jo
mov
inc
pop
dec
imul
mov
hlt
cltd
cld
lea
aaa
in
ss
lahf
and
jg
xchg
lcall
inc
jecxz
scas
and
adc
mov
cmp
testl
shlb
or
adc
pop
xchg
ds
dec
test
sbb
mov
or
xchg
cmp
lahf
ds
xor
mov
sahf
arpl
adc
icebp
push
or
mov
jbe
fwait
mov
ss
cmp
mov
rcl
pop
bound
aad
pop
imull
adc
js
inc
jp
inc
outsl
sub
test
push
lods
ret
lcall
aad
mov
pop
out
fcmovnb
shll
lods
and
jno
ja
or
mov
mov
lock
mov
in
xlat
push
xchg
inc
aam
cmpsl
mov
int
adc
or
test
jge
push
jbe
aad
int
sub
loop
jecxz
daa
sbb
je
sti
sbb
shll
mov
scas
addr16
dec
and
and
sti
xlat
xchg
push
adc
ds
push
repnz
push
test
test
xor
cwtl
cmp
or
pop
iret
icebp
ds
add
fdivrs
sbb
add
add
gs
lcall
inc
andl
add
and
xor
xor
or
fisttps
mov
pop
sub
push
push
ja
ret
iret
sti
stc
mov
pusha
or
enter
outsb
das
in
ss
in
mov
in
jbe
test
push
push
in
xlat
outsl
enter
mov
ret
add
jl
in
or
sbb
mov
or
shll
cmpsl
rcrb
addr16
dec
xor
xchg
pop
sbb
sub
xchg
cmpsl
mov
adc
dec
and
lods
inc
lods
jmp
add
push
jge
cmp
xchg
mov
cmpsb
out
imul
sub
xchg
ds
sti
popf
dec
bound
cmp
ds
and
xchg
push
mov
gs
int3
mov
sbb
iret
dec
cmpsl
xor
popa
sarl
cmp
xor
xor
scas
ret
mov
lcall
xchg
mov
pop
call
sar
mov
stos
loop
add
es
mov
add
and
xor
aam
call
cmpsl
test
arpl
pop
outsb
xchg
sbb
and
pop
inc
sub
inc
aad
mov
int
imul
push
aas
div
into
pop
rolb
xchg
test
pop
daa
pop
jb
insl
orl
std
inc
mov
into
lcall
pop
bound
mov
xor
loopne
imul
inc
mov
adc
ja
sahf
lea
iret
mov
pop
pusha
popf
mov
jns
sti
pop
lods
pop
sets
jns
lret
xlat
imul
gs
cs
popf
cmp
jle
ss
pop
insb
add
mov
pop
sbb
adc
js
aam
dec
dec
ja
xchg
mov
test
loope
add
push
push
mov
mov
pop
or
mov
int3
movsb
mov
xor
out
xor
nop
adc
clc
sbb
pop
jnp
pop
out
cmp
or
xchg
push
idiv
mov
gs
mov
xchg
adc
push
xor
mov
jnp
cltd
repz
mov
scas
je
inc
xor
lock
loopne
xchg
jl
scas
dec
lds
fldcw
mov
shll
insl
mov
sub
shll
inc
xor
sbb
sbbl
filds
jns
jno
adc
pop
adc
mov
push
push
scas
mov
into
cltd
and
dec
shlb
jp
lret
cmp
mov
in
inc
xchg
popf
push
roll
xor
inc
shlb
ja
andl
mov
push
push
push
mov
ret
pop
sbb
test
sub
dec
ja
out
jmp
inc
in
call
data16
pop
xchg
inc
int
push
jge
testb
pusha
mov
mov
test
or
cs
add
in
cmp
in
sahf
jnp
mov
test
mov
add
xlat
jns
into
dec
scas
cmp
nop
dec
sbb
jo
cwtl
inc
mov
js
loop
bound
cmp
shrb
imul
push
pop
popf
push
pop
and
and
clc
pusha
cmpb
adc
pusha
and
dec
xchg
push
sub
daa
outsl
jb
movsl
dec
jae
adc
fildl
add
mov
fucom
push
xchg
adc
test
cmpsb
cmpsb
push
pop
in
dec
fs
mov
rolb
adc
and
mov
xchg
xor
call
out
push
std
pop
dec
add
iret
lods
mul
mov
cmpsb
push
aam
fildll
mov
jae
cld
fidivrl
enter
adc
rclb
icebp
pop
dec
sub
cld
jmp
jecxz
jecxz
and
adc
pop
inc
in
pop
mov
iret
mov
incb
xchg
in
loop
pop
mov
arpl
push
sub
jle
ljmp
sbb
ljmp
arpl
insl
sbb
jecxz
cltd
push
mov
sbb
fstpt
jb
jmp
inc
test
lahf
pop
cmpsb
push
mov
xchg
inc
or
fdivp
adc
lods
mull
call
imul
ret
fdivrp
cmp
loope
sub
mov
or
out
lret
xchg
rolb
xor
or
int3
je
mov
inc
xchg
sub
push
pop
cmpsl
imul
scas
addb
inc
sub
cmp
leave
pop
mov
incl
aas
test
xor
mov
ror
mov
daa
idivl
pop
mov
inc
jns
xor
faddl
dec
cmp
sub
lods
jae
pop
pop
out
in
stos
sbb
jae
cmp
adc
jns
jmp
in
push
orb
test
inc
and
fnsave
imul
jnp
int
rcll
mov
jnp
sbb
push
or
subb
mov
movsl
mov
pushf
testl
ret
adc
ljmp
push
pushl
cmpsl
popw
scas
pop
fstps
dec
ror
mov
jg
repz
lret
loop,pt
push
mov
sub
sarl
outsb
adc
test
out
les
insl
aas
sub
inc
movb
jae
ret
addl
lea
xor
jnp
cli
xchg
dec
and
pop
shll
cwtl
jl
ljmp
lahf
xchg
int
outsb
test
xchg
dec
subb
pop
fcoms
push
xchg
mov
lods
roll
dec
leave
cmpsb
xor
ficompl
gs
xor
xchg
sbb
or
sub
lds
test
int
sbb
test
ja
sbb
pop
pop
cmc
shr
xchg
insb
das
push
sti
xchg
push
cld
mov
push
mov
cltd
mov
and
cmp
mov
or
js
push
and
daa
scas
mov
ja
mov
push
inc
scas
jmp
xchg
dec
push
add
cmp
test
add
fcoms
mov
mov
mov
ljmp
xchg
sub
movsb
cmp
jecxz
mov
rorb
out
push
xor
and
ja
xchg
gs
inc
es
inc
cli
fsubr
in
inc
sub
es
mov
iret
mov
and
xchg
add
push
js
lahf
lds
push
push
imul
or
stc
mov
shll
or
data16
stos
repz
fsts
imul
push
lds
mov
iret
jle
mov
or
bound
sub
or
add
sub
addr16
xor
cli
adc
dec
add
inc
test
nop
push
mov
je
xchg
out
add
dec
xor
lods
xchg
add
or
sub
push
movntq
out
mov
lock
aam
adc
mov
or
pop
inc
daa
hlt
orb
bound
mov
pop
sbbl
jne
cmp
mov
imul
xchg
push
or
gs
movsl
sbb
movsb
mov
popa
imul
mov
pop
daa
ljmp
xor
adc
xor
cmp
and
inc
inc
and
das
lcall
sbb
push
out
out
adc
cld
xchg
jp
out
adc
js
cmp
mov
and
test
loope
fisubs
out
xlat
xlat
mov
add
lods
jae
mov
add
xor
adc
add
test
lcall
xor
cmovle
repnz
jecxz
int3
enter
push
scas
sarb
lods
pop
lds
call
mov
fcoms
adc
or
push
mov
mov
push
inc
adc
push
stc
push
nop
adc
pusha
push
push
push
imul
jge
cmp
js
sub
test
cmp
aam
call
jp
push
mov
xchg
or
cs
jmp
es
jl
fsubrs
xchg
mov
mov
ret
xor
xchg
hlt
xor
adc
movsl
cli
repnz
aas
cmpsl
test
sar
jge
cmpsl
xchg
and
lcall
mov
imul
in
shl
in
mov
pop
lcall
ds
lods
dec
in
ljmp
daa
xlat
inc
insl
cmp
and
pop
mov
jp
inc
jmp
pop
test
xchg
filds
sbb
mov
xchg
sbb
mov
mov
ss
mov
push
jns
jo
push
test
cmpsb
inc
fwait
jb
pop
mov
inc
jo
int
xlat
sbb
mov
movsl
xchg
jne
xchg
sub
fcoms
idivl
cmc
icebp
outsl
cltd
push
xor
inc
dec
mov
lret
sub
lret
mov
or
inc
pop
jne
test
les
negl
leave
stc
daa
add
lret
mov
or
sarl
lret
xor
xchg
andb
jno
sarb
dec
shrl
xor
push
cli
cmp
mov
sub
decl
jbe
adc
rcl
lds
cli
fwait
mov
pop
sub
jnp
aas
inc
sub
mov
and
incl
dec
test
insl
mov
mov
mov
sub
mov
add
xor
inc
insb
aas
stos
das
adc
xor
repnz
pop
pop
cmp
test
adc
push
dec
aaa
fistpll
cs
add
fidivl
faddp
inc
pop
mov
jecxz
insb
nop
sbb
ds
mov
pop
ret
testb
mov
leave
cli
lods
scas
sub
jae
lds
das
xchg
sub
popa
nop
jno
xchg
mov
outsb
out
push
jb
inc
into
rcrl
es
and
xor
and
jg
ds
or
adc
movsl
jge
push
std
test
push
in
loope
dec
dec
and
pop
in
jno
movsb
pop
push
and
lock
sbb
loope
mov
jno
rorb
cmp
int
call
mov
es
cwtl
mov
or
add
mov
leave
lcall
jno
int
sub
push
inc
push
xor
xchg
cmpsb
cmovo
push
push
dec
or
fstl
jb
push
inc
sbb
jbe
jnp
jge
fstl
push
xlat
mov
mov
imul
pop
ret
orl
loopne
mov
pusha
dec
movsl
cmp
sbb
jmp
and
fidivl
xor
outsb
sub
out
push
and
ret
ret
in
mov
sbb
in
xchg
pop
or
scas
mov
push
or
adc
loopne
cld
out
cmp
cmp
cwtl
addb
adc
pop
leave
xchg
out
jns
sub
cltd
sbb
ret
nop
mov
jo
push
mov
sbb
pop
dec
ja
or
xchg
imul
hlt
xchg
enter
test
notl
gs
adc
inc
cmp
pushf
out
sub
sbb
imul
imul
mov
int3
inc
and
jns
gs
insl
add
test
neg
xchg
add
lds
pop
and
mov
out
fnstenv
sub
hlt
sbb
sbb
xor
lods
pop
cmc
arpl
push
sbb
clc
jmp
nop
mov
and
fistpl
or
sbb
bound
jae
fcmovnu
xor
sahf
outsl
cs
pop
inc
gs
inc
mov
loopne
sub
fs
int
lods
dec
aam
imul
cmp
fistl
stc
iret
orb
adc
ret
adc
inc
cmpsl
sbb
inc
sub
pushf
in
push
mov
rorl
or
lret
aad
inc
sti
mov
pop
pop
aaa
sub
xor
mov
dec
mov
int
lcall
sbb
dec
mov
push
fmull
cmp
nop
loop
fs
jle
xchg
jecxz
mov
xchg
sub
inc
sub
scas
xchg
sub
aas
sbb
or
fistpll
ja
xchg
lret
or
nop
mov
dec
fistpll
adc
dec
jle
aas
push
lock
fucomi
add
adc
mov
mov
push
js
jno
inc
xor
cld
out
jnp
xchg
data16
pop
arpl
cltd
aas
jo
pop
arpl
xchg
pop
adc
inc
pop
les
xlat
je
and
sbb
mov
jmp
or
in
movsl
or
dec
push
and
pop
jns
ljmp
sbb
scas
mov
jmp
hlt
xor
loop
shll
ret
mov
stos
lods
fsubrl
and
xor
in
cmp
push
aas
mov
stc
jp
and
xlat
popa
xor
dec
mov
dec
ljmp
adc
hlt
insb
lret
out
stos
pop
test
mov
test
pop
adc
adc
out
lock
xor
mov
pop
jmp
and
nop
sbb
cmp
ret
insl
inc
das
pop
dec
call
cld
movsl
pop
scas
xor
jmp
cmpsl
jmp
shlb
fimuls
adc
mov
scas
cld
leave
mov
mov
outsb
pop
in
xchg
jmp
dec
stos
dec
xlat
das
lret
ds
mov
or
push
rcrl
mov
stos
xchg
aaa
test
cwtl
cmc
ret
lret
mov
inc
movsl
shl
adc
add
into
fxch
popf
mov
ljmp
lods
mov
jp
xchg
or
cmp
movsl
xor
cmp
mov
inc
jb
inc
ficomps
mov
popf
pusha
mov
pop
dec
xchg
adc
scas
call
push
and
mov
dec
fs
push
pop
movsb
jb
outsb
adc
inc
sub
jnp
in
mov
leave
out
dec
pop
mov
mov
ss
fldl
pop
or
pusha
in
mov
xchg
pop
fwait
or
push
dec
cld
lea
loope
ret
enter
jbe
lods
insl
insl
fidivl
or
sub
cld
test
cmp
pop
or
pusha
push
mov
push
lret
mov
sub
ja
subb
and
cs
clc
xlat
adc
xchg
xchg
outsb
dec
push
jp
insb
ljmp
scas
inc
xor
icebp
loope
or
fnstenv
fcoms
pop
and
out
add
test
loopne
fists
sbb
dec
cli
iret
test
fsubrl
inc
jmp
xchg
popf
jle
jnp
jnp
push
mov
push
adc
xor
mov
imul
pop
js
in
sub
inc
into
icebp
cmpsl
dec
outsb
js
jb
push
inc
pop
lods
jg
in
add
mov
int
lret
addr16
mov
pand
and
iret
ds
or
jno
das
in
or
mov
stc
lock
or
jno
fcompl
inc
ljmp
cmp
fidivs
dec
jns
mov
adc
stc
mov
cmpsb
pop
push
aad
andb
dec
sahf
push
sub
pop
outsl
mov
push
popf
cmpsb
pop
icebp
cmpb
fs
fidivrs
fyl2xp1
add
jbe
sbb
jl
jne
mov
outsb
ljmp
pop
das
inc
pop
jge
div
mov
ja
popa
dec
fcom
xor
xchg
xchg
in
push
add
inc
out
mov
jl
dec
loop
arpl
sbb
sbb
cmp
mov
inc
jmp
adc
dec
pusha
or
addr16
test
sbb
dec
fs
pop
push
lods
inc
mov
xor
mov
or
test
mov
addb
arpl
xchg
fbstp
lock
stc
xchg
fwait
scas
jnp
movsb
outsl
fmuls
test
push
push
test
sub
xchg
aas
push
jp
jae
jbe
pop
xchg
inc
jbe
cmp
pop
aaa
mov
cli
fsts
and
cmpl
pop
ret
cld
idivl
push
lcall
dec
arpl
sub
xor
inc
iret
insl
inc
int3
ds
mov
xor
loop
in
cmpsl
push
pop
cltd
and
es
filds
mov
leave
test
dec
cmp
test
jmp
add
fistps
add
pop
fisubrs
pop
sti
inc
adcb
in
push
jb
xor
push
je
fsubs
dec
ja
xchg
mov
cmp
pop
inc
leavew
inc
pop
mov
add
push
xor
xchg
loope
and
lods
icebp
daa
dec
pop
push
cmp
or
and
cmp
cli
inc
sarl
mov
fstl
adc
xchg
xchg
imul
rcrl
loop
subl
dec
and
add
dec
icebp
outsb
in
push
push
push
inc
adc
mov
mov
or
enter
sahf
lods
adc
out
imul
xor
adc
fstps
sti
sub
push
sub
subl
popa
sti
sbb
loop
mov
sahf
pop
shrb
pop
aad
add
loopne
xchg
mov
jnp
mov
xor
lret
shrl
sbb
mov
out
cmp
fcompl
lds
das
fistpl
push
sub
pushw
cmp
pop
in
jmp
pop
and
fiadds
aaa
adcl
or
fdiv
daa
outsl
repz
arpl
inc
leave
push
sbb
mov
into
fistpl
adc
adc
cmp
pushw
or
xchg
out
mov
data16
daa
or
and
jo
lret
out
fbld
cmpsb
mov
pop
sub
cwtl
aam
sub
test
fistl
pop
lcall
in
add
test
stos
xchg
mov
popf
add
or
pusha
jecxz
xchg
in
jns
or
cmp
mov
xchg
mov
xchg
pop
out
pop
or
loope
jl
jl
ja
mov
leave
gs
xorl
push
ljmp
pop
movsb
add
adc
mov
int
test
cs
mov
xor
movsl
adc
mov
popf
sub
mov
pop
pop
imul
mov
mov
pop
leave
popa
inc
add
xchg
out
xchg
xchg
mov
mov
sbb
shlb
scas
sub
jl
xchg
xchg
or
add
insb
aam
shrl
xchg
sbb
and
mov
xor
sahf
pop
fidivrs
adc
xchg
ficoml
in
jno
shll
call
or
cwtl
imul
and
pusha
int3
inc
out
pop
mov
das
addr16
mov
xchg
aas
jecxz
lret
sub
insb
decl
out
add
es
cmp
pushf
add
mov
fmuls
sub
cmc
xorb
outsb
inc
push
jne
mov
sbb
lcall
xor
shl
xchg
mov
pop
movb
mov
adc
inc
test
pop
test
adc
dec
insl
pop
popf
pushf
je
jns
out
fdivl
scas
out
scas
fstps
xor
testb
inc
loope
stc
dec
cmp
mov
jae
inc
jne
xor
test
ret
std
inc
sbb
call
outsl
jbe
fdivl
jb
mov
jbe
mov
lahf
mov
in
sbb
arpl
ret
inc
jmp
and
aad
sarb
les
outsb
movsl
mov
pop
cld
dec
rolb
popl
pushf
mov
mov
sub
jae
hlt
jp
cs
mov
mov
cli
iret
mov
xor
in
sub
adc
inc
pop
imul
cltd
mov
rcl
fsubrp
lret
mov
test
mov
xor
jle
xchg
lods
jo
mov
dec
int3
mov
xchg
dec
cwtl
lret
imul
sahf
mov
sub
jge
fimull
or
or
ljmp
or
and
in
je
shrb
mov
lock
leave
sub
mov
xchg
fwait
mov
push
addr16
push
adc
jo
lods
xor
and
inc
bound
or
adc
sbb
fldl
es
mov
mov
jl
adc
sbb
pop
mov
inc
pop
xchg
push
dec
bound
aam
xchg
push
fildl
lret
gs
in
cmp
push
push
cwtl
pop
and
mov
rolb
and
clc
or
ds
push
icebp
ja
push
inc
mov
out
nop
sti
insl
or
or
add
call
imull
push
out
in
enter
jp
cmpl
cld
pusha
mov
mov
jns
dec
outsb
adc
pop
dec
subl
inc
dec
or
cs
jecxz
pop
mov
sti
dec
mov
pusha
dec
movsbl
or
sarl
loopne
int
xchg
popf
mov
pop
cmpsl
xchg
xlat
push
flds
pop
mov
rcrb
xchg
dec
fwait
std
dec
mov
sbb
mov
enter
sbb
inc
testb
jno
loopne
add
rorl
les
cmp
add
cmpb
push
dec
loop
pop
stc
test
push
mov
js
or
xchg
mov
xchg
loope
push
xor
insb
mov
fwait
pop
mov
imulb
ficompl
mov
cld
bound
mov
insl
pause
xchg
xchg
cmp
lods
mov
inc
push
cmp
icebp
lock
sbb
mov
mov
jge
jns
xor
cmpsl
and
mov
xchg
out
test
ret
aas
ftst
aad
mov
enter
sub
xchg
sbb
outsb
call
nop
adcl
pop
ljmp
mov
push
inc
add
aas
inc
cltd
sbb
sub
add
out
outsl
outsl
out
mov
sbb
vmread
popf
cmpsl
jne
xchg
and
fisubl
movsl
lret
stc
fistps
lret
push
inc
orl
call
fnstsw
fistl
stos
je
inc
fmull
xor
add
into
or
inc
dec
leave
adc
aad
push
aas
dec
mov
and
xchg
mov
xor
out
lods
ja,pn
mov
shl
xchg
mov
jno
scas
cmp
cmp
dec
xchg
push
aas
jmp
shll
aam
mov
mov
rcrb
test
push
inc
pusha
mov
mov
aam
pop
lret
sub
adc
sub
imul
push
popf
mov
sbb
xchg
negb
adc
in
gs
imul
and
dec
xor
xchg
cmp
js
add
mov
cmc
mov
push
xchg
cmp
mov
fst
xchg
out
pop
jmp
push
add
dec
iret
push
jge
fwait
sub
adc
mov
shrb
xor
and
inc
add
add
rcll
je
adcb
jmp
adc
adc
mov
inc
test
or
es
inc
out
test
shll
stos
lock
sti
inc
lret
push
push
push
lret
xor
mov
xlat
inc
sbb
jbe
mov
cli
std
xor
add
pushw
lods
mov
test
mov
xchg
mov
inc
xchg
push
jnp
and
sbb
pop
push
pop
add
xor
add
in
xchg
mov
push
retw
call
cmp
push
mov
mov
into
fildl
and
push
rcr
sbb
dec
dec
jno
arpl
repz
adc
or
stos
pop
scas
push
mov
mov
cmpsl
or
movsb
cmp
push
and
daa
pop
popf
jnp
add
flds
jne
and
shll
push
jecxz
sbb
fs
ret
inc
inc
dec
xor
aam
popa
mov
cmpsb
pop
mov
pop
push
or
or
inc
push
push
ss
inc
aaa
out
jae
pop
push
orl
xor
xchg
in
mov
xchg
mov
aam
pop
jne
icebp
neg
sbb
cmc
or
jnp,pt
dec
or
cli
dec
ficoms
and
ljmp
loopne
jae
jecxz
arpl
or
xchg
xchg
cli
jne
shr
and
push
sbb
ficoms
jns
test
xor
pop
and
or
xchg
data16
iret
mov
rcrl
fcoml
cmp
frstor
mov
pop
mul
leave
shrl
xor
sarb
addb
in
jmp
xchg
outsl
add
adc
ret
xchg
xor
push
in
jne
push
lods
roll
pop
cld
arpl
xchg
fdivs
fildl
ljmp
dec
cli
inc
lahf
and
push
jbe
lock
pop
lret
add
adc
test
pop
mov
dec
xor
sub
xor
mov
jp
in
cld
fldl
push
into
repz
pop
add
adc
push
inc
lret
loopne
fimuls
sbb
inc
jecxz
xor
push
lods
sbb
or
cmpb
pop
mulb
outsl
data16
arpl
fstpt
test
in
js
movsb
add
jle
pop
mov
lds
sbb
loope
loope
xor
adcl
imul
pop
jge,pt
push
or
sub
and
mov
scas
dec
fidivrs
mov
push
lret
xchg
add
mov
insb
inc
xor
jg
jns
xor
clc
fisubrs
inc
ljmp
outsb
int3
adc
mov
mov
mov
mov
mov
out
aad
in
cltd
jg
imull
pushf
mov
cwtl
dec
repz
mov
jle
add
loopne
mov
daa
mov
daa
sbb
mov
mov
and
mov
push
addr16
ljmp
pop
sbb
xchg
mov
add
cmp
xor
sub
mov
push
iret
xchg
in
mov
ret
iret
xor
in
pop
push
rcrb
xor
ljmp
xchg
cs
and
jnp
aas
push
pop
mov
insb
jg
mov
cmpsb
cli
xor
sarl
lods
pop
cmpsl
jmp
push
js
inc
in
addr16
push
cli
mov
dec
dec
fstl
jmp
lock
out
jnp
rclb
add
jne
push
cld
scas
ds
rclb
sbbl
les
lret
adc
mov
loopne
icebp
fcoml
outsl
mov
xchg
negl
jmp
inc
cmpsb
and
addl
sub
int3
cld
push
mov
and
sub
fistps
xchg
mov
ret
insl
lods
and
leave
cmp
aaa
push
cmp
sarb
sbb
pop
testb
iret
popf
jnp
decl
xchg
decl
int
sbb
rcl
inc
mov
rclb
and
cmp
pop
xor
xchg
jo
hlt
jp
stos
out
jb
outsb
std
movsl
adc
scas
lock
xor
jnp
cmp
sbb
loope
jmp
xlat
inc
adc
shrd
xor
iret
push
cmc
inc
repz
imul
test
rol
xorl
sub
mov
paddsb
inc
mov
outsb
cmp
cmp
subb
fisubl
push
dec
mov
jno
jae
add
sbbl
fwait
and
rorb
jbe
inc
inc
insl
mov
loop
pop
scas
loopne
mov
leave
in
outsl
insb
dec
aad
sarb
inc
add
mov
lahf
mov
add
sahf
bound
mov
inc
lock
movsl
cmp
xor
ficompl
jbe
jnp
push
sbb
cli
mov
addr16
adc
outsl
fadds
sub
call
pop
xor
lcall
lcall
xchg
xor
in
adc
pop
andl
adcl
fdivs
adc
in
in
addr16
xor
fwait
stos
stc
inc
or
ljmp
rcl
push
out
out
xchg
push
xor
jns
jecxz
cwtl
mov
inc
xchg
addb
aad
pop
push
rcrb
mov
iret
idiv
bound
ss
stos
mov
fnstcw
jg
adc
mov
cmp
mov
mov
paddb
dec
sbb
jl
stc
je
ss
mov
pop
cmp
jnp
pop
test
push
das
cmc
push
das
xchg
in
ds
out
lahf
or
lock
stc
jmp
mov
pop
add
jb
jb
into
jnp
std
gs
adc
add
mov
sti
cld
scas
xchg
mov
mov
cmova
mov
test
lret
lock
cli
stos
pushf
mov
xchg
out
jnp
fsub
ret
fcomip
insb
jge
add
icebp
lods
cwtl
lea
cmpl
das
pop
mov
mov
fs
cmpsb
cmp
sub
stc
scas
jne
jb
cmp
ja
mov
popa
fwait
or
xchg
pop
mov
jnp
loop
roll
sub
adc
imul
cmp
addl
lods
scas
sti
lcall
rcrb
movsb
test
repz
fstpl
pop
pop
popf
in
pop
popf
std
pop
icebp
lds
fisttpll
jge
mov
dec
stos
mov
cwtl
xorl
mov
adc
mov
xchg
and
lret
pop
xor
out
xor
ja
pop
mov
mov
xor
ret
pop
stos
jp
cmpsb
cmpsl
and
pop
ss
daa
xor
clc
xor
mov
add
mov
pop
pop
pop
leave
ret
jne
adc
std
push
adc
aas
adc
sbb
adc
sbb
add
push
adc
out
jg
add
dec
adc
mov
jns
add
inc
adc
sbb
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
add
add
add
add
add
add
inc
cmp
add
scas
inc
adc
inc
cmp
add
adc
push
adc
cmp
add
sbb
add
adc
idivb
inc
add
cmp
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
subb
cli
adc
sbb
adc
pop
inc
adc
sbb
adc
in
pop
adc
pop
sub
add
add
inc
add
add
inc
add
add
cmp
add
aaa
adc
cmpl
adc
push
dec
adc
mov
adc
lock
add
adc
outsb
or
add
add
add
push
push
inc
push
int3
mov
inc
test
jnp
xchg
stos
pop
add
add
inc
cmp
jae
popa
insb
insb
and
je
pop
push
outsb
fs
dec
push
pop
dec
popa
imul
outsl
insb
fs
dec
outsb
arpl
gs
dec
outsb
outsw
inc
jo
add
add
add
add
add
cmp
add
add
add
add
add
mov
cmp
add
mov
cmp
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
