push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
or
mov
mov
jmp
rcl
fmul
rcr
add
rcll
or
movsl
add
fld
fcom
enter
leave
cld
icebp
fmulp
fcomip
sar
rcl
mov
nop
fsub
nop
cld
jmp
leave
ss
xor
neg
aad
int
fnsetpm(287
lock
in
cli
sti
jmp
xchg
in
cli
fxch
out
leave
icebp
idiv
iret
ds
lock
repz
enter
out
fildl
ret
sub
shl
xlat
fdiv
stc
aas
adc
call
fmuls
repz
mul
ret
into
jmp
loopne
iret
lock
in
repnz
into
sub
sti
ljmp
int
into
out
rorb
fimull
div
aam
hlt
cmc
aad
ss
int3
rcl
rol
idivb
icebp
les
out
sti
xchg
ljmp
cmp
into
enter
rcl
xor
fxch
mov
ret
xchg
xchg
xchg
lret
fsub
into
out
cmp
jmp
cli
loop
call
mov
out
mov
in
int
in
aam
rcr
repz
hlt
fisttpl
xbegin
leave
mov
out
les
out
cmp
ret
icebp
rcr
cld
fcmovne
nop
jmp
ret
fnsetpm(287
ror
aaa
out
repnz
loope
sbb
testb
std
iret
cmc
aad
fcmovbe
std
iret
sarb
iret
out
out
div
out
jecxz
in
nop
xchg
cmp
ret
aaa
iret
cmp
test
sar
clc
repz
clc
out
jmp
aam
in
shl
fcmovbe
in
fsub
ss
sar
repnz
ljmp
iret
leave
xor
ds
sti
aaa
hlt
cmp
sar
shr
mov
in
test
in
xchg
xchg
out
into
stc
in
iret
test
lock
cmp
loopne
in
testl
orb
call
out
ljmp
movl
in
out
mov
icebp
in
in
cld
in
jmp
loope
cmp
cli
enter
cld
fsub
fmul
mov
cs
xlat
out
repz
loop
sar
in
dec
aad
mov
vshufps
ror
iret
fxtract
lret
inc
ljmp
mov
sti
lret
fcmovbe
mov
in
fucomp
lret
int
call
iret
repnz
aad
iret
loope
xchg
loope
repz
test
lret
int
leave
clc
enter
lret
ror
xor
enter
jecxz
test
loopne
add
sar
shlb
cmp
cmc
out
stc
in
cmp
std
shl
ljmp
fsubrp
nop
ror
int3
repz
xor
icebp
in
into
div
cld
cmp
testb
mov
mov
enter
lret
iret
sub
icebp
lock
aaa
fnstsw
fadd
xor
lock
repz
add
ret
ljmp
cmc
xor
fidivrs
aas
cmp
clc
stc
out
clc
mov
test
leave
in
mul
and
ret
icebp
enter
fcmovb
loopne
icebp
mov
and
xchg
clc
ljmp
rcr
fst
test
cmc
icebp
xchg
jmp
out
cld
lock
jmp
jmp
std
fcomp
ds
test
shl
test
loop
lret
orb
bnd
xor
repz
cmp
ret
xor
out
out
fadd
int
xchg
jecxz
in
sub
xlat
rcr
cmp
loope
stc
fdiv
out
ret
fcmovnu
mov
jmp
xchg
out
in
ljmp
and
fcmovbe
call
mov
mov
out
lea
xor
cmc
ss
ljmp
vcmpss
cmp
fmul
sti
loop
in
xchg
iret
iret
int3
enter
out
out
into
loopne
sar
rol
hlt
les
mov
lret
shl
xchg
not
divl
xor
in
neg
test
fistpll
loopne
iret
aas
fiadds
std
in
and
aaa
xor
cld
clc
fdivrs
in
repnz
cld
mov
ret
hlt
repz
int
xor
loop
div
mov
sbb
mov
mov
orl
push
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
push
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
adc
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
jmp
xlat
iret
into
fst
xor
mov
es
movsl
add
movsl
add
icebp
faddp
jmp
incl
ljmp
call
xor
int
jmp
iret
shl
neg
sti
sbb
test
roll
and
iret
jmp
cmp
and
icebp
rcl
out
sti
call
filds
xchg
in
jmp
cli
int3
xlat
lock
sar
out
ret
aam
cld
test
repnz
xchg
jecxz
sarb
fcmove
aaa
ds
adc
testl
iret
rcll
cmp
ljmp
idivl
icebp
cld
roll
in
fdivr
fsub
mov
rcr
shl
rcl
movl
test
out
lret
out
jecxz
leave
xchg
xchg
out
lret
in
repnz
fcom
sti
sti
shl
loop
roll
loope
lret
xchg
sti
fnstenv
divl
loopne
jmp
clc
repz
mov
cmc
xchg
cld
cli
test
xchg
out
jmp
cli
xor
fmul
rcr
call
loop
mov
repz
faddl
std
call
not
out
fcmovne
int
aas
shl
ret
fst
aad
cli
ret
cld
loop
loop
nop
and
cmp
rol
in
fld
call
xlat
loopne
xchg
incb
in
lret
enter
push
fdiv
test
sti
lret
movb
int3
fcomip
int3
xlat
ret
in
leave
xlat
loopne
shll
mov
rorl
out
in
int
repnz
aaa
out
fucomi
in
fcmove
cmp
loopne
icebp
loopne
std
shl
stc
jecxz
loopne
icebp
out
out
call
out
repz
repz
cmp
cmp
rol
faddl
ljmp
call
imul
jmp
cmp
ds
sar
xchg
fmulp
mov
in
loop
xchg
leave
xchg
in
lret
in
idiv
lret
loope
loop
xlat
div
out
xlat
in
sub
int3
orl
in
ljmp
aad
in
roll
idiv
lret
fdivrp
call
shl
rcl
xor
fdivp
out
ror
rol
hlt
test
inc
fmulp
xchg
in
xchg
iret
lret
xchg
clc
sarb
idiv
aaa
ss
clc
shl
fcmovnu
ret
add
lret
adcb
cld
xor
fucomi
ror
cmc
shr
mul
cld
fcmovu
aad
jmp
loopne
into
adc
in
imul
call
aam
ret
cli
or
lret
flds
cmc
mov
out
shr
lock
repnz
sti
fnstsw
cmp
stc
test
ffree
out
in
in
into
out
enter
in
cmp
sti
cld
lock
fcom
in
sti
testb
int
out
cmc
lret
ss
hlt
in
xor
faddl
cli
loope
rcr
in
loop
fmul
xchg
nop
test
call
neg
dec
fnstcw
ret
addb
aas
cld
lock
cli
jmp
stc
aas
cmp
int
test
ror
jmp
in
in
cli
nop
mov
mov
in
in
cmp
lock
in
ds
mov
test
lret
loop
mov
hlt
stc
jecxz
xor
fucomi
out
sti
test
movb
stc
cli
xchg
shl
sti
divl
fdiv
call
iret
sar
mov
ffreep
loop
lock
loope
hlt
ljmp
xor
cmp
flds
cli
loope
xor
out
shl
fsub
icebp
int3
shl
stc
div
cmp
in
cmp
in
sbb
xchg
stc
sar
cli
aad
loop
cli
in
xchg
icebp
xor
ret
leave
aad
cmc
ss
in
out
icebp
fsub
aad
loop
test
mov
sti
into
adcl
out
cld
ljmp
shl
ret
repz
orl
std
out
call
fucomp
fcmovbe
icebp
rol
add
ljmp
lret
in
leave
rol
xor
lock
aad
lock
ds
aam
jmp
jmp
addb
int3
ret
repnz
in
idivl
into
mov
jmp
fadd
leave
int
bound
inc
aad
fistpl
jle
add
loopne
clc
fcmovu
fisttpl
int
repz
fdivs
lret
cmp
add
ret
ret
mul
mov
out
orb
into
out
lret
cld
lock
adc
out
hlt
aam
repz
loopne
xchg
int3
int3
in
fcomp
lret
int3
leave
aam
repz
icebp
int
repz
sub
fldl
xchg
aam
mov
leave
fidivrl
call
test
std
idiv
mov
ljmp
call
leave
iret
rcr
repz
lret
ret
fyl2x
in
rcr
cmp
int3
xchg
addb
das
fucomi
iret
ror
ds
icebp
xlat
into
adc
mov
test
fisttpl
ljmp
int3
ljmp
clc
loope
out
test
xchg
sar
cld
rcl
xchg
out
enter
clc
shlb
cmp
fadds
cli
jmp
fdivrp
lret
out
incb
into
in
repz
cmp
cmc
call
aad
fisttpl
loop
hlt
sub
out
cmp
in
in
loope
cmp
fdivp
aam
fiaddl
mov
clc
out
call
shl
sti
test
cmp
jecxz
lret
enter
leave
fiaddl
int3
vpsubusb
std
leave
fucom
cld
loopne
std
test
jecxz
repz
int3
jmp
lds
stc
sti
ljmp
stc
test
out
imul
mov
push
in
jmp
call
std
aam
stc
hlt
ret
rorb
lret
in
mov
aad
loope
lret
mul
fst
out
cmp
stc
cmp
rol
shr
leave
addl
repz
xbegin
fcmovu
repz
idivb
ror
stc
cld
clc
call
test
dec
in
roll
cmp
int3
out
lock
iret
sarb
fmuls
int3
repnz
xor
aad
idiv
in
jecxz
fucompp
jmp
call
in
shr
out
out
fcomi
repnz
test
mov
test
ds
sub
lret
lret
xchg
xchg
aad
lock
neg
cmp
loopne
aam
lret
test
loope
fcmove
ljmp
cmc
ljmp
rcr
cli
shl
jecxz
ret
loop
sar
mov
cmc
in
enter
jmp
std
out
lock
std
icebp
cmc
stc
rol
in
lea
shl
xchg
leave
xor
rcl
cli
cmp
cmp
out
in
xlat
std
and
mov
mov
cmp
out
iret
aam
cmp
clc
in
loope
repz
sti
dec
int
in
int3
call
out
xlat
fmul
cmp
into
fcomp
cmc
out
loope
jmp
in
stc
out
sar
std
dec
jecxz
enter
fprem1
in
aad
stc
lock
hlt
decl
mov
jmp
xor
xor
faddp
clc
jecxz
enter
std
call
out
xchg
lock
cs
ds
sti
into
add
jmp
int3
call
loopne
in
ret
hlt
out
fcmovne
out
idivl
cmp
loopne
in
hlt
call
ljmp
xor
lds
out
out
fst
lock
std
xchg
lret
nop
xchg
enter
icebp
in
cmp
cmpl
enter
fimull
in
cld
mov
shl
int3
shr
fucomip
ljmp
xor
mov
call
xchg
iret
aaa
xor
in
fcmovbe
jmp
cmc
cmc
in
sar
cmp
ljmp
shl
lret
repz
xor
cmp
xorb
mov
orb
lret
cld
call
repz
call
int
xor
sar
aam
fsub
adc
in
into
xchg
aas
jmp
xor
xor
xbegin
int3
cmc
xlat
shl
xchg
mov
int3
mov
sar
lret
div
in
in
in
sti
ljmp
shl
fadd
lea
mov
mov
sub
and
mov
mov
and
mov
orl
xor
xor
add
mov
add
jmp
rcl
lret
fst
jmp
mov
movsl
add
std
neg
out
xchg
fmulp
xchg
mov
repnz
enter
lret
rolb
in
lds
cmc
mov
into
in
ljmp
or
aam
repnz
roll
out
test
aaa
fxch
ret
stc
dec
int3
std
shl
fdiv
xchg
fadds
test
jecxz
stc
call
cmp
fsubp
out
repnz
fildl
out
xchg
in
test
stc
lret
lret
cmc
xor
xlat
fidivrs
sbb
leave
fmuls
jmp
icebp
enter
jecxz
aam
ljmp
not
lock
mov
fisttpl
xor
neg
jmp
in
cli
fcmovbe
fcomip
fcomp
cmp
repnz
lret
test
repnz
sub
int3
xor
jmp
rcr
cmp
in
fpatan
ljmp
lock
xchg
shr
or
ss
cmp
stc
shl
rcr
loopne
icebp
rcl
xchg
lock
fprem1
rcl
lret
sarl
rcl
in
fmul
into
loop
loope
mov
fdivp
enter
icebp
rol
iret
cli
fcmovnbe
lds
int3
fdiv
shr
repnz
xlat
decl
in
xchg
call
in
xor
dec
in
stc
loop
ffreep
cmp
fcomi
lret
in
rorb
adc
cld
lret
in
loopne
fucomi
cmp
loop
xchg
test
test
test
into
mov
adcl
xor
std
xor
lret
cmp
fsub
stc
loopne
std
cld
mov
into
mov
rcl
call
add
aas
icebp
in
in
sti
loop
fisttps
icebp
into
clc
fcmovne
into
cmp
test
fucom
ret
call
rcl
leave
lret
cmc
dec
ret
xor
sarb
neg
cmp
loop
rcl
out
rcr
jecxz
jmp
xchg
div
rol
sti
in
xlat
repz
shr
ss
mov
mov
movl
xchg
xor
rcl
in
sti
int3
clc
int
cmpl
ret
mov
dec
lret
out
jecxz
das
out
hlt
aaa
repz
lret
test
into
loop
icebp
or
leave
jmp
std
xchg
mov
loopne
shr
rcr
xor
dec
loop
out
clc
jecxz
fdivp
xchg
mov
iret
add
out
xchg
mov
int3
ret
rcl
shll
in
fyl2x
jmp
call
ljmp
xor
in
bnd
aad
incb
fcmovnb
cld
iret
mov
repnz
xor
shr
test
fprem
mov
or
sub
nop
fstl
call
call
fcmovnu
fcmovnb
test
enter
std
les
in
xor
cmp
fsubr
lock
cld
aas
into
cli
ret
add
ljmp
loope
iret
mov
jmp
not
cmp
xlat
fsub
xlat
ret
addl
fadd
rorl
les
ror
xor
roll
out
cli
idiv
out
sbb
out
fsub
shl
loope
xor
out
cmp
leave
cmp
fdivp
repz
adc
std
std
sti
rolb
nop
xor
rcl
rcl
stc
int
fcomi
cmp
rolb
stc
int3
int
test
xchg
das
cmc
cmp
clc
shl
rcl
aam
clc
rol
std
xlat
into
les
ss
repnz
jmp
lret
cmp
in
fucom
in
fmull
out
cmp
icebp
cmp
out
clc
jmp
cmp
repnz
fsubp
ret
fadd
and
rolb
iret
sti
test
lret
cmp
hlt
lret
cmp
cmp
repz
loop
sar
pop
decl
shll
xor
test
shl
int3
fsub
loope
in
int
xchg
call
call
cld
cmp
in
out
lret
fdiv
aas
clc
cld
fcmovb
call
jmp
lret
in
loop
clc
sar
xor
aad
shl
shr
aad
inc
std
lds
mov
mov
jmp
int3
rcl
aad
int3
call
xor
lcall
jle
repnz
in
jmp
push
repnz
enter
fdivp
std
out
test
repnz
int3
jmp
cmp
loop
fidivrl
aad
call
clc
fstp
mov
in
aad
icebp
ljmp
out
and
rolb
enter
jmp
not
shl
in
repnz
enter
cmp
repz
xchg
xlat
enter
popl
sub
rcl
neg
out
rcr
cmp
cmp
clc
mov
in
loop
cmc
out
shl
ror
xor
cmp
call
mov
fchs
jmp
repz
int3
jmp
ds
loopne
cmp
call
ljmp
lret
xchg
repz
fidivl
call
xor
iret
xlat
shl
icebp
cmp
std
lret
cld
xchg
icebp
adc
iret
aad
in
cmc
out
mul
into
jmp
sti
test
fiadds
loop
out
shl
xlat
out
les
in
sar
idiv
xor
in
loop
std
inc
cld
lock
shl
into
xchg
loope
cmc
xor
ret
iret
xlat
in
int3
aad
in
hlt
repz
cli
and
jmp
mov
leave
clc
hlt
shl
icebp
div
xlat
stc
cmp
out
aam
test
aam
lret
mov
ljmp
ljmp
out
cmp
add
sbb
xlat
sti
jecxz
xchg
std
loop
xor
leave
rcl
iret
dec
in
ror
cli
aam
icebp
cmc
loope
les
addl
lret
repnz
jmp
cmc
fld
cmc
loop
out
int3
loop
out
in
loopne
loope
int
iret
ret
loop
sti
aad
fmul
out
cmp
shl
in
movl
fsubp
hlt
in
ljmp
cmp
in
cmp
leave
fucom
ljmp
xchg
divb
cmp
stc
out
std
cmpb
cli
fldl2t
test
out
lret
mov
iret
mov
shl
aad
lret
ss
shl
ret
test
fcmovb
enter
cmc
fimuls
call
stc
aam
stc
aaa
repz
int
not
test
sarb
cli
in
orl
aaa
jmp
aad
fucomp
sti
rcl
cld
cmp
fldl2t
in
in
fildl
mov
cmc
leave
rcr
out
not
into
fidivrs
in
shl
testl
into
jmp
into
int
frstpm(287
fcos
cmp
fsubr
aas
in
into
fdiv
leave
ljmp
loop
xchg
ljmp
in
int3
aad
int3
jmp
cld
cmc
mov
mov
int3
out
in
test
aad
in
xor
cmp
jmp
jecxz
clc
ret
jmp
fadds
iret
in
lret
xor
cmp
hlt
jecxz
in
or
in
in
loopne
xchg
xchg
int
int
jmp
push
out
shr
cmp
idivb
out
leave
or
int3
out
xchg
shl
out
xor
lret
in
stc
cld
repz
cmp
rcl
rcl
shr
idiv
in
mov
mov
lret
repnz
div
stc
ljmp
rcr
jecxz
xchg
mov
out
ljmp
int
into
lock
lret
imul
int
ds
hlt
stc
idiv
mov
sti
mov
test
cld
out
test
aam
fcomp
xor
repnz
hlt
lock
in
rolb
std
lock
loope
int
aam
cmp
fdivrl
fcompp
in
in
fdivr
ror
stc
cmc
in
out
in
repnz
cmc
repz
lret
lock
into
stc
fistpll
repnz
cmp
and
std
call
call
in
cld
cmc
sarb
aas
rcl
ret
std
sar
dec
orb
aam
ljmp
shr
loopne,pt
lock
mov
test
dec
in
lret
hlt
aam
xor
std
ljmp
ret
sti
fsub
in
in
leave
mov
clc
repnz
hlt
adcb
cli
fidivl
addl
cld
orl
int3
movl
jmp
int3
rcl
fstp
fldt
insl
xchg
movsl
add
xor
aam
jmp
cli
fcomip
stc
stc
out
mov
sti
jmp
in
jecxz
rcl
icebp
out
in
jmp
int3
cmp
jecxz
leave
enter
fld
mov
xchg
jecxz
out
cmp
aas
fistpll
ds
in
repz
shl
call
ret
repnz
in
icebp
out
ss
enter
shr
aam
cli
test
sbb
ficoml
rcl
shll
fprem
out
fiadds
hlt
call
fisttpl
ljmp
idivl
cmp
fnstcw
roll
fdiv
out
ds
cld
ljmp
leave
aam
aaa
ss
aas
shl
adc
iret
repz
ljmp
repz
lret
xor
divl
fcomp
lret
cmp
repnz
cmp
mov
mov
clc
out
xchg
addl
cmp
int
into
incb
cli
rorl
out
out
mov
xor
repnz
out
fcmove
sar
clc
shl
imul
cli
fdivp
test
out
std
jecxz
cmp
aas
aam
repnz
repnz
cmp
int3
fsubp
test
shr
jmp
into
iret
int
lret
ret
xor
clc
call
cmp
cmp
rcl
fadd
xlat
ret
lock
cld
mov
mov
clc
jecxz,pn
cmp
xlat
jmp
hlt
fsubr
xchg
jmp
fcom
loop
out
repz
mov
loopne
xlat
in
cld
std
sub
hlt
fcomi
fdivr
clc
shl
cmc
mov
ljmp
ror
out
cld
cmp
in
cmc
test
out
cmp
loopne
adcb
int
cmc
aad
int
sti
out
hlt
stc
leave
lds
fadd
test
loop
jmp
jmp
fiadds
add
idiv
out
addb
loop
ret
aad
xlat
lock
shr
ror
int3
lds
clc
enter
icebp
mov
shr
out
icebp
ret
cs
fdiv
out
fdivr
loopne
fdivrl
xchg
fcomp
jmp
mov
in
fdiv
enter
hlt
jmp
fistpll
cld
xchg
aas
mov
xlat
les
les
xor
in
xor
hlt
int3
loopne
out
sar
cmp
icebp
shr
in
sub
call
xchg
rorb
cmp
int
jmp
into
loopne
lock
in
sub
lret
out
mov
out
sti
mov
cmc
sub
shr
in
enter
stc
in
lret
fadd
xchg
ret
test
test
lds
sub
aas
xlat
cli
cmp
xacquire
decl
jmp
sub
bnd
repnz
or
rcr
xchg
ret
loopne
nop
fmul
rcr
mov
out
cmp
sub
idivl
fucom
fidivrl
stc
out
inc
cmp
addb
xor
int3
loop
jmp
lret
xchg
aam
xlat
loopne
enter
lret
int3
into
repz
xor
out
mov
icebp
into
out
cmp
stc
std
aam
fsub
xlat
mov
in
jmp
int
out
iret
jecxz
clc
ljmp
ss
clc
rol
loopne
movb
out
mov
orb
lock
iret
aam
fcmovbe
testl
mov
repz
cmp
fdiv
lret
hlt
loopne
loope
xlat
hlt
xchg
fcmovu
test
lret
out
test
xchg
lret
call
ss
rcr
int
cmpb
shl
rcr
loopne
std
stc
nop
stc
jecxz
mov
xchg
sub
rol
idiv
repnz
roll
aam
cld
fnclex
test
out
rorb
in
cli
cmp
cmp
lock
int
cmp
in
lret
cmc
imul
call
iret
xor
sar
out
shr
leave
ret
repz
lds
test
dec
into
dec
xchg
jmp
call
divl
sar
fdivp
cmp
in
xchg
in
xchg
in
xchg
jecxz
loope
aam
xor
lret
fbstp
mul
in
neg
aad
lret
aad
out
lret
lret
shl
out
enter
aaa
out
lea
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
jmp
iret
xlat
rcl
fcomp
iret
bound
aaa
mov
jle
movsl
add
cld
sti
aad
rcl
loope
aad
aam
popl
lea
lret
clc
repnz
loopne
cmp
sub
in
out
out
cld
fisttpl
int
into
jecxz
fxch
xlat
shl
sti
fst
loopne
out
aad
ffreep
roll
xchg
aam
repnz
das
in
shr
int
repnz
cld
in
fcomi
fcmovu
shl
in
jecxz
loopne
loope
shr
xor
xor
repnz
loope
cmp
sti
fcomi
call
mov
sti
xchg
xor
lret
aaa
cld
cld
xor
out
cli
mov
in
aas
in
test
out
mov
aam
in
cmp
hlt
aas
repnz
hlt
ret
out
out
out
cld
sti
push
cli
call
or
loop
out
test
in
xor
rol
int
sti
cli
ds
lret
incb
lret
idiv
shl
sub
cmp
out
lret
ds
fcmovnb
xchg
out
sar
jecxz
mov
stc
push
icebp
lret
divb
fcmove
addb
lret
fcmovbe
leave
loope
std
xchg
sub
stc
cmc
xor
lret
cmp
rolb
movl
xchg
std
into
out
iret
cmc
int
xor
out
leave
shr
cld
sarl
ds
loope
fcmovnu
in
out
ret
rolb
repnz
stc
in
xor
and
aam
fdivr
fcomip
jecxz
cld
mov
adc
in
aam
out
stc
test
leave
jmp
into
loopne
decl
sar
int
fsub
out
ret
fcmovbe
lret
repz
push
test
test
fld
jmp
fsubrp
mov
repnz
xor
clc
lock
sub
out
fnop
orb
xor
repnz
lret
icebp
cmp
cmc
aam
loop
xchg
out
loopne
mov
repz
iret
out
fcmovnbe
idiv
repz
loop
cmp
cld
leave
fxam
fdivr
adcl
cmc
cld
in
repnz
out
cmp
xlat
ret
leave
xchg
jmp
enter
out
idiv
into
cmp
cmp
clc
test
in
shr
shl
shlb
fcmovbe
shr
cmp
fsub
cmc
into
les
mov
lret
in
fucomp
cs
sub
cmp
jecxz
aaa
ds
mov
fadds
xchg
or
int3
fcmovne
lret
fcomip
cmp
and
xchg
sbb
leave
loopne
ficoms
in
idiv
out
xor
cld
fidivrl
cmc
loope
and
cmc
aad
fdivr
test
jmp
mov
xor
ret
lock
fnstsw
loopne
fxch
cmp
mov
xlat
fadd
loop
int3
fiadds
aaa
in
vpsubd
sbb
cmp
cli
xchg
aam
decl
rcr
mov
imul
out
imul
cli
dec
lret
out
aad
test
in
les
fildl
shr
jecxz
fcom
lret
into
cli
aad
rcr
in
mov
aas
repnz
mov
out
lea
call
lret
out
out
cmc
loop
jecxz
rcl
out
ret
in
jecxz
mov
aam
int3
ret
iret
aad
fcmovne
cmp
iret
fdivp
in
fcmove
sub
or
icebp
repnz
xchg
int3
test
fucomip
int
sarb
idivl
hlt
addb
cli
call
xchg
call
lock
aas
cli
in
ror
dec
incb
aam
mov
xor
fcmovne
divl
int3
in
loopne
loop
rcl
ret
movl
fcom
ljmp
xor
fadds
idiv
fyl2xp1
ret
xchg
aam
aam
cmp
cmc
mov
test
shl
neg
aad
fisttpl
loope
out
fsub
stc
out
in
fcmovnu
not
clc
test
cli
jecxz
aam
cmp
fxam
xchg
out
in
xchg
aad
hlt
lock
fsubr
cmp
sti
loopne
inc
rcl
call
mov
ljmp
fnstenv
in
enter
xor
cli
jecxz
movzwl
jmp
ret
aas
ret
aad
aad
mov
and
add
hlt
jecxz
neg
out
lret
xchg
in
shl
loope
das
aad
xor
rcl
fmul
repz
out
rolb
xor
xchg
mov
test
faddl
int
hlt
lret
rcr
ror
ret
out
in
repnz
hlt
mov
test
sti
cli
mov
int
lret
out
xor
sbb
fprem
lock
test
cli
fld
clc
icebp
ljmp
xor
fadd
into
sar
sti
lock
in
std
test
test
stc
int3
in
fsubr
mov
in
in
cmc
div
rcl
cmp
rcr
lock
lock
jmp
xchg
loope
xor
int3
loop
lock
fsubr
cmp
loope
repnz
rol
mov
filds
xor
cli
cmp
ds
loopne
cmp
cli
iret
loop
repz
orl
sti
repz
repz
stc
into
inc
xchg
test
repnz
aad
aam
repnz
sarb
out
test
repz
lret
mov
shl
cmc
aad
lret
out
out
fistpll
neg
fdivr
mov
loopne
jmp
sti
faddl
sub
fstpt
xor
fnstcw
clc
not
out
loopne
ret
enter
mov
loopne
in
into
loopne
xchg
iret
leave
xor
enter
cmp
test
aas
enter
xchg
int
loopne
lret
into
out
int3
aad
jecxz
cli
sti
fdivrs
test
and
int3
loope
out
rorl
loop
not
jecxz
neg
out
aam
int
test
lret
or
mov
loope
clc
lret
out
repz
rcr
fadds
test
sti
test
or
repz
enter
cmp
enter
cmp
int
xlat
loope
aam
out
ret
fcomp
loopne
icebp
hlt
xchg
ror
aam
call
aas
cmc
loope
out
into
std
inc
jmp
leave
out
jecxz
xchg
call
repz
hlt
fsubr
loopne
cmc
loopne
aam
hlt
movb
mov
in
cmp
int3
fdivr
in
clc
cmp
loope
xchg
repnz
out
loope
sti
xchg
mov
in
icebp
xlat
lock
enter
into
jmp
int
ret
out
cld
cmc
test
int
and
out
out
loopne
in
int3
jmp
xor
fadds
shl
out
int3
fcmovnu
decl
mov
lock
into
hlt
push
cmp
loope
out
hlt
repz
fsubr
out
mov
xchg
xor
out
into
fdivr
cmp
fdivrp
in
mul
and
adc
shl
ficoms
ffree
leave
cmp
rol
rol
icebp
in
cmp
lret
cld
div
shr
iret
int3
das
xlat
in
int3
cmp
out
out
mov
filds
in
loopne
loop
cmp
int
out
fdiv
sar
loopne
test
aaa
sar
rcr
out
call
ror
jmp
into
icebp
imul
fdivp
fcmovnbe
clc
sarl
rol
in
cmc
xlat
sbb
loop
fabs
fstl
jmp
cmc
rcl
sbb
xchg
shl
stc
cli
xlat
mov
and
test
das
icebp
out
in
std
aas
int
fxtract
idivl
aam
aam
orb
out
loopne
ror
rol
lret
out
jmp
not
or
test
lds
xchg
in
into
in
ljmp
cmc
enter
ret
fucom
jecxz
sub
out
int3
flds
in
xlat
out
fldln2
not
not
incl
rcr
sarl
in
repnz
mov
in
icebp
in
fcomp
jecxz
sarb
movl
and
ret
fsts
test
cmp
rcr
cli
mul
cld
cmp
in
test
mov
lret
test
sar
xor
shlb
aad
ljmp
repz
in
orb
repnz
jmp
in
int
cmc
incb
iret
addb
xchg
dec
cli
xchg
loopne
repz
in
int
fdivrl
fsincos
loopne
cli
neg
lock
ret
call
mov
rcr
fcmovnu
mov
aaa
jae
and
movsl
add
cld
out
loopne
in
xchg
xchg
das
jmp
cli
repz
shr
call
test
lock
call
enter
xchg
cmp
aam
call
adc
fiadds
lret
call
in
jecxz
jmp
xor
fcom
ljmp
shl
loope
clc
mov
out
in
out
out
cmc
out
sub
frndint
stc
in
cmp
loope
int3
cmp
roll
fsub
fimull
out
xor
out
into
cli
rcr
cmpb
fdiv
in
jmp
jmp
cs
hlt
cli
sti
jmp
rcl
shl
roll
filds
jmp
xor
ljmp
aad
not
fdivr
cmp
sti
loop
fcmovu
xlat
enter
nop
hlt
aam
out
ret
shl
in
aam
rcr
cli
loopne
cld
div
sti
loope
jmp
xchg
xor
shr
dec
fbstp
aad
addl
loopne
ljmp
int
iret
loopne
repnz
jmp
sti
ljmp
cli
ret
orb
mov
lret
cmp
out
loope
sti
test
fdivrs
fcmovb
clc
in
call
int3
xchg
mov
rcl
jmp
fadds
in
loopne
ret
mov
out
jecxz
xchg
mov
xor
clc
ds
int3
loope
sti
test
sar
out
ret
fsubr
fucomip
iret
lea
ret
int3
ret
sar
xor
icebp
ss
cmp
test
lock
call
hlt
jecxz
into
out
in
div
fld
cmp
rolb
enter
loopne
repz
aam
shl
cs
test
idivb
mul
mov
mov
roll
divl
out
xlat
int3
in
hlt
in
loope
int
shll
xor
call
xchg
fimuls
aad
sti
stc
int
sti
fdiv
flds
std
sub
hlt
aad
enter
xor
std
jecxz
hlt
aas
test
lret
jecxz
in
cmp
nop
repz
leave
cmp
xlat
aad
xlat
cmp
xor
ljmp
jmp
mov
call
out
xor
in
ss
aaa
out
loopne
cld
in
mov
fcmovnu
jmp
orb
xor
idivl
enter
ds
aad
jecxz
out
out
out
mov
xchg
in
iret
test
in
fcomi
in
fucomp
out
xlat
repz
hlt
fcmove
loopne
vcmpsd
xlat
mov
xchg
icebp
shl
out
out
shl
enter
lock
dec
ds
rcl
rol
leave
cmc
loope
lret
sti
roll
in
jmp
fistpll
cld
out
cmp
out
lret
mov
jecxz
repnz
in
xor
hlt
jmp
loopne
jecxz
cmc
rcr
loop
jmp
sti
faddl
rcl
les
ss
jmp
loopne
test
aam
test
out
out
and
add
divl
sar
ds
hlt
fxam
xlat
in
call
fcomi
sti
out
mov
ss
lret
rcr
iret
in
clc
filds
fmull
out
ffreep
xor
xor
clc
hlt
int
in
flds
stc
shl
les
in
hlt
sub
aad
aaa
int
cmc
shr
test
sarl
iret
cmp
stc
std
cmp
jmp
call
ret
hlt
xlat
cli
out
fcomp
int
out
sarb
idiv
testb
jmp
loop
xchg
in
cmp
xor
lock
cmp
repnz
ror
jmp
mov
shl
mov
lret
fstpt
int3
fucomip
cmp
fadds
cmp
into
ljmp
icebp
jecxz
ret
repz
xor
cli
cld
int3
ds
icebp
enter
std
vpsubd
sub
lret
in
in
fdivrl
cli
xlat
std
sar
icebp
in
fsubrp
jmp
jmp
shl
xor
xor
idiv
cli
loop
fcmovnb
add
int
shr
lret
out
out
dec
call
mov
aad
leave
aad
fcmovnu
sub
push
jle
movsl
add
xor
xlat
lret
iret
int3
clc
int3
in
std
ds
roll
in
jmp
fcoml
icebp
cmp
in
stc
jmp
lds
in
out
fucomp
test
fdivr
iret
out
vpsrld
xor
imul
fchs
xor
sbb
out
ffree
into
out
mov
in
jmp
ljmp
mov
orl
jmp
xor
jmp
aam
cmp
cmp
ret
fistpll
repz
div
in
fninit
sti
in
enter
fcmovnbe
fsubrp
loopne
repnz
in
fucomi
in
mov
xchg
xchg
int3
shl
in
into
in
fcmovnbe
rcl
ljmp
fisttpl
in
xchg
shl
xor
in
std
aas
fsubrp
jecxz
aas
fdivr
clc
test
loop
test
fcmove
fdiv
int
in
decb
icebp
xlat
out
clc
loopne
int3
fucomp
fdivrp
stc
cli
fsubp
jmp
mov
adc
xchg
int3
repz
out
std
out
xor
rcr
ret
out
cmp
out
clc
stc
jecxz
mov
shr
int3
mov
orb
ss
out
into
cld
sti
sti
sar
mov
test
in
popl
add
out
cmc
xor
int3
cmp
std
lds
ljmp
lret
xchg
xchg
loopne
loope
cmp
icebp
fcmovnbe
iret
or
repnz
testl
nop
jmp
aad
in
ss
not
out
fcmovnu
sarb
fucom
cli
std
xchg
mov
int3
lret
xchg
mov
out
sub
div
in
xor
clc
xor
cli
loope
icebp
aad
ljmp
iret
in
fsub
into
hlt
cmp
icebp
enter
leave
repnz
icebp
shl
repz
loopne
fucomi
sti
leave
xchg
jmp
lock
aaa
shl
out
cmp
out
cmp
icebp
cmpl
repz
roll
adcl
sub
aam
cli
loope
cmp
aam
out
cli
aam
adc
fucomip
out
repz
rol
into
shl
cmp
aaa
sti
sub
iret
clc
call
test
out
jecxz
loopne
xor
sti
cmp
aaa
xor
icebp
cmp
xlat
call
xlat
mov
repnz
into
call
xor
ss
sar
div
aad
repnz
cmp
in
sub
mov
xor
jmp
shr
shl
cmp
fstpt
xlat
repnz
rcr
jmp
enter
rolb
lock
cmp
sti
int
sti
push
mul
out
and
lret
loopne
leave
out
ljmp
in
out
cmp
sti
rcl
clc
out
les
shl
xlat
xlat
fiaddl
leave
rcl
ret
xor
out
loopne
loope
repnz
loop
neg
std
out
lds
out
xor
div
call
addl
int3
fisttpll
call
leave
vpor
in
fucomi
xlat
out
hlt
ret
clc
xor
hlt
out
xchg
in
call
enter
cmp
ffree
cmp
ljmp
lret
div
int
iret
fprem
int
sarb
out
aad
shl
fcmovu
testb
enter
xchg
jmp
shl
aam
aaa
fdivrl
aad
cli
jecxz
aad
ds
inc
loop
mov
xchg
xchg
repnz
cs
fstpt
aam
std
out
rol
cld
xrelease
int
xchg
enter
aam
jmp
fldln2
ror
or
ret
loop
jmp
fucomip
enter
test
xor
div
enter
sbb
icebp
clc
addl
jmp
repnz
fdivs
ror
out
roll
aas
aam
cmc
std
popl
jmp
lret
out
int
rcr
in
repz
ret
ret
ret
xchg
jmp
in
hlt
loopne
xor
int3
ljmp
loopne
sarl
cli
incl
aaa
hlt
or
cmp
aas
aad
jecxz
rorl
std
repnz
shl
xor
cmc
ret
lret
lret
mov
xor
add
cmp
jmp
vaddsubpd
rcr
pop
push
xchg
fildl
sub
jle
add
out
fmul
cmp
icebp
testb
mov
testb
aam
aam
das
shr
xor
out
rcl
fcmovnu
aam
repz
jmp
fcomp
cli
loope
int3
jmp
sub
imul
cmp
aam
in
hlt
loope
idivl
stc
sarl
jecxz
cli
jecxz
xchg
loope
lock
rcl
enter
mul
jmp
fcomp
shl
fcmove
out
cmp
ret
call
xchg
lea
hlt
icebp
xor
jmp
stc
fnstsw
aad
cmpl
out
stc
jecxz
addl
mul
loop
leave
sti
repnz
fidivrl
addl
jmp
mov
in
sub
idiv
fsubp
shr
int
iret
fistpll
sbb
mov
lret
dec
loopne
jecxz
out
fnstcw
sti
fdiv
fsub
and
fninit
loopne
lock
filds
jmp
in
fnstsw
lret
ret
fucom
cli
testl
mov
out
into
cld
out
aas
lret
loopne
incb
aam
fadd
sti
out
mov
in
out
or
shr
into
lret
int
into
int
lret
flds
aam
in
int3
fsubr
xchg
int3
jecxz
shl
fcom
shl
cld
sti
std
fcomip
fsubp
sti
fadd
rcr
mov
jmp
out
mov
xchg
aam
ror
lret
lock
jmp
fcmovu
rcl
out
xchg
in
int3
rolb
cmc
lock
ror
fscale
clc
adc
iret
not
loope
test
nop
into
mov
out
in
fucomi
into
int
out
shr
repz
fcmovb
fdivr
fadd
xlat
mov
call
stc
stc
cmp
fucomi
into
adc
in
ret
fucomp
lds
out
in
out
xor
into
iret
cld
fdivrs
rcr
loope
fcomip
cli
repz
xlat
cld
in
test
out
ror
xor
xor
iret
lret
cmp
fcom
shl
cmc
std
loopne
in
call
icebp
xchg
in
lret
vpsubd
fucomi
ljmp
cmp
rcl
int3
cld
test
and
xchg
shl
ss
jecxz
stc
stc
fucomi
fcom
lock
out
aam
rol
in
mov
rolb
in
xlat
repnz
hlt
fdivrl
ds
icebp
jecxz
mov
clc
lret
lea
aad
cmp
xlat
aam
clc
jmp
jecxz
jmp
ljmp
out
out
icebp
ss
cmp
xlat
cmp
hlt
in
test
hlt
enter
icebp
mov
icebp
not
rcl
sub
xor
fcomi
ljmp
decb
nop
cli
in
mov
jecxz
jecxz
fdiv
iret
faddl
aas
out
cli
xchg
fcmovnu
in
out
decl
ret
jmp
rcr
cmp
fsqrt
fcom
fcmovb
sbb
fisttpl
iret
xchg
xchg
icebp
out
sub
cmc
lret
into
rol
loope
aam
ds
in
mov
out
cmc
lock
cld
cmp
fisttpll
loop
sti
mov
lock
xor
aaa
lock
stc
sti
out
ffree
aas
rol
jecxz
clc
mov
fdivp
in
aam
ret
out
lds
aad
test
stc
in
loope
xlat
rcr
mov
rcll
icebp
xor
cmp
out
shl
out
idiv
clc
call
in
mov
in
cmc
hlt
into
fsubr
rol
cmp
out
inc
stc
test
mov
enter
mov
add
leave
sti
ficoms
loop
xor
out
cmp
iret
testl
in
jecxz
adc
sub
int3
leave
ss
fxtract
xchg
xor
call
fcomp
mov
ss
cmp
xor
in
std
cli
int
shl
out
fiaddl
cmc
clc
lret
jecxz
lret
iret
xor
aaa
iret
stc
lock
ss
lock
loop
loopne
mov
mov
out
xchg
xor
xor
in
in
fnstcw
lret
cmp
sbb
mov
fcompp
cmp
add
xor
in
hlt
fst
icebp
lock
jne
mov
jmp
rcl
fcom
fcom
fstp
outsb
push
mov
add
add
jle
add
int3
shl
dec
cli
fsubr
out
cld
orb
les
cmp
std
loopne
aam
in
loopne
repz
xchg
les
mov
out
hlt
enter
xor
jmp
sarb
lret
out
addb
out
out
icebp
rcr
roll
clc
sarl
sub
sarl
ret
enter
xchg
lret
std
out
test
xor
ljmp
loop
cmp
jecxz
mov
fadd
fadd
mov
cmc
jecxz
fcmovnbe
xor
cmp
fdivrs
shl
sti
test
repz
int3
enter
fcoml
into
not
cmp
hlt
cmp
in
adc
cmp
neg
call
repnz
sbb
not
stc
out
leave
aam
idiv
sti
cmp
int
incb
mov
movb
subl
cmp
ds
clc
lret
xlat
loop
cld
loop
fucomip
hlt
in
fld
clc
cli
fdivs
jmp
in
out
cld
loope
fnstsw
out
xchg
test
in
int
in
enter
aam
cmp
clc
repz
fsubp
loopne
testl
das
ret
jmp
ljmp
clc
cli
incb
out
fisttpl
ret
in
lock
xor
ds
cli
cmc
les
neg
mov
enter
xchg
xchg
ret
fadd
clc
in
hlt
int3
rcl
cld
rcl
fcom
addb
mov
ljmp
shl
shlb
enter
iret
lret
cmc
aaa
cmp
iret
and
mov
adc
xchg
fcmovne
out
mov
xor
xlat
cmp
das
cmp
div
cmc
fiadds
jecxz
int3
fiadds
loope
aam
ret
in
cmp
lret
aas
ds
cmc
aas
loopne
test
xchg
lret
test
int3
xor
cmc
cs
enter
aad
out
aas
fistpll
ret
aam
idiv
cli
into
testb
lret
fstpt
std
out
aas
cmpl
sti
ret
fimuls
into
iret
fisttpll
out
int
in
in
ss
cmp
out
in
and
icebp
hlt
out
xlat
stc
cli
sub
out
out
cmp
sar
les
in
sti
sti
out
loopne
ss
in
ljmp
aad
inc
shl
mov
in
cld
lock
mov
mov
cmp
idivl
lock
and
ret
test
out
cmp
repnz
orl
cmp
out
or
iret
fcom
rcr
cmp
nop
enter
xchg
fucom
out
iret
aaa
ss
std
cmp
cmpl
mov
in
lret
shl
ljmp
repz
fstpt
cmp
mov
in
aad
orl
xchg
aaa
xor
aad
xor
sarb
not
std
sar
aad
out
testl
xchg
int
xor
iret
out
fdivrs
in
cld
incl
idiv
enter
out
shl
lret
out
xor
cli
aam
cmc
loope
test
cmc
rcl
xchg
loope
sub
mov
loopne
loope
jmp
int
aam
lret
in
iret
lret
test
shl
addb
lds
test
out
ss
cmp
test
add
xacquire
ljmp
out
rcl
enter
out
jmp
or
repz
ljmp
shr
int
mov
shlb
jmp
out
rcr
icebp
icebp
test
cli
loope
leave
std
out
cld
xor
xchg
mov
cmc
ret
out
sar
int3
leave
loope
ret
fstp
cld
test
fcmovnu
aam
test
fucom
ljmp
ljmp
in
aas
jmp
int
in
out
ljmp
mov
in
xchg
in
ss
hlt
cli
out
cmp
dec
int3
test
cmp
loop
out
sub
fcmovu
aam
xchg
ret
vpsadbw
out
ror
fdiv
stc
into
shl
xchg
in
or
xchg
fsubrp
hlt
repnz
ljmp
cmp
rol
fpatan
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
mov
mov
jmp
ret
fstp
ret
frstor
mov
or
jl
xor
jle
mov
addb
clc
aam
aaa
int
icebp
into
add
aam
in
fmul
ljmp
out
jmp
vpsllq
in
test
fadd
fstpt
cld
out
xchg
cld
fldl
idivl
in
in
lret
out
roll
cmc
out
idiv
clc
les
in
std
mov
aam
clc
fneni(8087
aad
shr
out
in
addl
lea
das
stc
xor
out
fistpll
cmp
test
in
jecxz
int3
mov
lret
in
lea
cld
enter
cmp
rcr
clc
mov
in
in
cld
test
repnz
out
in
in
cmp
cmp
cld
shl
loope
enter
shl
jmp
jmp
cmp
jmp
cmp
test
jecxz
test
cld
test
ror
xlat
call
aad
push
ret
test
cmc
cli
rol
icebp
ljmp
icebp
std
push
shr
jecxz
mov
clc
fstpt
jecxz
in
in
xchg
in
ret
fnstcw
aaa
int
int3
ds
out
incb
and
lret
into
adcb
les
enter
aas
xlat
jmp
ret
repnz
mov
loopne
clc
cli
out
sti
repz
jecxz
fnstcw
jmp
aas
lds
bnd
std
in
in
in
int3
mov
xor
in
lret
out
ss
aam
cmp
repnz
xchg
idiv
jmp
shl
aam
rol
int3
mul
xor
int3
sar
sub
add
xchg
adcl
in
jmp
aaa
out
leave
out
shl
in
sar
repnz
clc
std
mov
xchg
incb
lock
int3
in
ss
xlat
fbstp
cmp
jecxz
loop
jmp
out
out
enter
out
xor
shr
repz
ret
idiv
not
fld
test
vpmaxsw
stc
fstp
repz
mov
jmp
out
fdivr
test
int
mov
out
xchg
sar
xchg
xchg
std
aad
div
jmp
aaa
hlt
fsubr
cld
cmp
rcr
or
loopne
fimull
xor
sub
repz
sti
aaa
int
loope
xor
roll
fistl
rcl
call
ss
fucomip
cmp
out
std
loope
rol
hlt
mov
out
into
call
shl
shll
out
leave
ds
cld
out
clc
aad
jmp
cld
lea
xchg
ljmp
aaa
out
ljmp
sar
loopne
in
cli
fmuls
in
shr
aam
shll
jmp
hlt
hlt
out
jmp
icebp
lret
div
loop
ljmp
mov
ror
out
loope
lret
cmp
lret
out
cmc
lds
xlat
ret
out
shr
mov
mov
jmp
out
inc
clc
lock
jmp
out
jmp
xchg
nop
mov
loope
icebp
xor
ljmp
cmp
and
lock
loope
xchg
int
lret
sub
stc
neg
fstp
fcmovbe
ds
fdiv
enter
out
xchg
mov
out
aam
xor
shl
fmulp
cmp
out
adc
aad
test
xor
mov
xor
cmc
aaa
in
fcomi
xor
aas
out
and
repnz
out
fucomi
call
out
in
shl
lds
leave
in
aad
fidivrs
aam
std
jecxz
cmc
loope
loopne
in
into
loope
out
xor
cmp
cmp
les
cmc
xor
cli
fistl
fucomip
ret
cli
in
aam
jmp
sar
leave
call
mov
mov
lret
rcl
jmp
cmp
fcomp
sbb
stc
iret
std
stc
in
fscale
test
repnz
loop
xor
int3
sti
imul
xlat
fsincos
cmp
xlat
cld
shr
aad
xchg
loope
in
cld
call
int3
xor
cli
xor
ljmp
call
lret
int3
fcoms
int
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
jmp
aam
fistl
std
scas
stc
cmp
movsl
add
xchg
out
lock
leave
aad
int
fcomi
leave
shl
cli
shl
fld
fdiv
decl
loope
fisttps
cli
xor
out
cmp
in
cmpb
xchg
xchg
orl
add
in
sarl
das
call
ds
call
clc
roll
std
leave
out
fmulp
loopne
cmp
iret
aaa
enter
add
fcomi
add
cli
int3
sbb
cld
in
aad
xor
into
lds
or
clc
leave
mov
cli
jmp
icebp
fmulp
int
xlat
xlat
sub
in
loop
sti
jecxz
jecxz
mov
jmp
test
fcmovnu
adc
in
in
cmp
idiv
cmpb
out
out
fstp
test
loop
lret
test
xor
fucomi
lret
fst
shl
ffreep
jecxz
rol
in
repz
out
sbb
out
aaa
cmc
stc
enter
lret
cmpb
shl
cmp
fcmovnu
aam
out
lds
out
mov
ss
in
xor
cmc
leave
in
rcr
les
xlat
rcr
ret
cld
mov
in
ficoms
fdivs
xor
into
int
loope
int
fst
iret
out
sar
test
int3
cli
mov
shl
test
cmc
cmp
ffreep
clc
fcomi
mov
lret
frstpm(287
jecxz
fimuls
cmp
in
std
icebp
idivl
cli
hlt
rcr
aam
fcmovb
in
addb
mov
test
lock
mov
rcl
lock
fdivrp
fdivr
cmpb
xchg
sub
mov
fcoml
repnz
fidivl
sti
aad
out
icebp
in
test
test
in
mov
test
cmp
cmp
out
out
xlat
aas
aaa
loopne
repz
test
mov
xor
out
iret
fmul
fxtract
fnsave
sti
repnz
mov
shl
testb
addb
xlat
clc
into
cmp
xor
cmp
loopne
clc
aam
imul
faddp
cli
stc
into
test
shl
in
ss
into
cmp
out
aam
cmp
fmul
fiaddl
adcl
repz
icebp
loopne
test
call
stc
mov
repz
out
loope
int
aaa
cmp
in
fcomi
repz
clc
shl
roll
test
cld
rcl
jmp
cmp
shl
std
fnstsw
inc
jmp
jmp
cli
in
adcl
neg
xor
out
out
aad
lock
fidivrs
sti
hlt
cmc
in
lock
in
out
repnz
ret
ret
in
xlat
out
iret
cld
ljmp
hlt
fstp
sub
lock
cld
in
mov
nop
cmc
loop
aam
lock
std
call
sbb
sar
rcr
faddl
cli
rcll
ret
cmp
aas
ds
roll
cmp
in
int3
in
test
loop
fdivp
call
sub
lret
cmp
sarl
repnz
cld
test
out
sti
enter
aam
jecxz
mul
aaa
iret
ss
in
icebp
xlat
cld
clc
out
leave
aam
out
out
xor
out
addl
hlt
and
xchg
cmp
out
mov
mov
rol
enter
xor
cmp
cmp
neg
clc
test
addb
xchg
div
iret
cmp
in
fmulp
aas
into
fcmovnb
mul
repnz
incb
aaa
xor
cmp
cmp
jecxz
repnz
ljmp
iret
lret
cld
aaa
in
sar
ds
addb
fsubp
xchg
in
out
out
repz
leave
call
xor
fsub
repz
fcmovnbe
ret
xchg
test
out
cmc
loop,pn
in
fcomi
in
cmp
loope
jmp
sar
out
shl
mov
lds
repz
xor
lret
fchs
fldl
fcom
jmp
fiadds
std
in
iret
test
xor
fmul
into
fdivrp
xlat
aaa
cmp
shl
mov
fadd
int
ret
xchg
test
in
roll
shr
add
add
fcom
fstp
je
xchg
or
and
jle
movsl
add
ljmp
cmp
out
cmp
jmp
cli
neg
sub
ljmp
repnz
in
not
cld
loopne
cmp
clc
enter
jmp
cmp
test
ficoms
xor
lret
in
repnz
loope
shl
ret
in
test
ljmp
loope
xor
lret
ss
aad
in
stc
loope
flds
lret
xchg
fisttpl
ror
ror
in
ret
icebp
idivb
fucomp
cmp
push
xlat
jecxz
test
loop
idivb
idivb
ret
iret
std
jecxz
cmp
jmp
lret
stc
in
sar
hlt
xchg
hlt
iret
clc
in
not
stc
enter
add
loope
cmc
loopne
fmulp
sbb
sub
loopne
fdivr
jecxz
shlb
xorb
clc
fnstsw
fdivrp
fcmovb
leave
loopne
xchg
into
aaa
sti
ljmp
fcmovnu
fcomi
stc
jmp
mov
out
roll
lret
xor
leave
sti
lret
loope
cld
incl
xchg
lret
movl
repz
xlat
enter
cmp
iret
repz
test
aam
cli
lret
aad
mov
cmp
jmp
out
cmpb
loop
xlat
aad
repz
loopne
repz
out
adcb
aaa
cmp
iret
out
fidivrl
out
fcmovbe
sti
loop
mov
out
mov
in
into
aad
repz
stc
iret
cmp
ss
out
cmp
rol
rcl
not
aad
int
lock
iret
jecxz
fnstenv
sar
ss
icebp
cmp
ret
in
jmp
adcb
fcmovnu
cmp
jmp
cmp
addl
cmp
fisttpll
nop
int3
aad
repz
cmp
shr
xlat
sar
into
clc
sar
leave
test
int
xchg
int
shl
in
cmc
cmp
iret
hlt
xorl
xor
icebp
stc
xchg
in
testb
out
xchg
imul
aad
jmp
jmp
lret
stc
fdivp
rcl
aam
in
test
ret
leave
in
notb
ss
out
lock
stc
shl
cmp
in
ret
int3
in
stc
nop
mov
and
in
ret
fstpt
lret
int3
repz
aas
out
fadds
out
fcmovnbe
int
jmp
loope
sarl
out
cmp
xor
ljmp
icebp
clc
leave
cmc
sbb
xchg
jecxz
sti
fsubp
hlt
clc
ss
iret
lock
fmul
xlat
jecxz
cmp
aas
faddp
leave
in
sub
orl
lret
icebp
loop
cmp
rorb
leave
sub
int
cld
test
loop
ljmp
ss
aaa
out
xchg
rolb
decl
jmp
into
in
cmp
sarl
cmc
ret
xlat
clc
aam
mov
mov
jmp
mov
in
lret
lret
out
fdivl
call
ds
or
addb
xor
enter
stc
cli
jmp
cmp
test
mov
test
out
iret
jmp
enter
xor
aad
repz
adc
aas
ds
repnz
lret
cld
sub
in
aam
lret
hlt
repnz
test
jmp
lock
rcl
ds
fadds
out
xchg
sub
div
fucomi
call
hlt
int
fst
loopne
xchg
and
out
jecxz
sbb
ret
imul
jmp
fcomip
aam
out
aam
rcl
mul
out
lock
mov
aaa
sarb
repnz
not
fnstcw
loop
xlat
std
clc
fcmovb
repz
fdivrp
and
repnz
repz
repnz
test
hlt
loopne
out
xchg
mov
cli
mov
ffree
jmp
int
jecxz
jecxz
stc
ljmp
addl
iret
out
cli
xchg
shl
divb
repz
cmc
jecxz
ss
lds
rclb
sub
aaa
leave
cmc
fidivrs
clc
lock
lock
enter
cld
clc
repz
shl
in
out
aam
xor
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
jmp
int
rol
fst
lcall
incb
jle
movsl
add
into
std
repz
out
clc
cld
in
in
in
xchg
call
test
iret
repz
ror
jmp
rolb
addb
mov
in
sarb
out
iret
cmp
test
xlat
xlat
aam
xchg
std
jmp
mov
xor
cmp
aad
loopne
adc
shl
stc
stc
loope
dec
lock
repnz
int3
int3
sar
out
cli
cmp
lock
into
shl
call
fmul
int3
mov
rcl
aaa
shl
int3
fcmovne
cmp
cmp
rcr
fucom
idiv
mov
int3
fadd
in
orb
sub
lret
lock
cmp
shl
fdivrs
in
rorl
sub
mov
in
sub
loope
into
cmp
cmc
stc
lret
loop
aad
xchg
clc
sti
testb
mov
in
xchg
fsubrp
cmc
clc
stc
in
call
aad
fcmovnbe
icebp
xlat
rolb
icebp
filds
icebp
stc
out
call
ss
shr
test
ffreep
repnz
out
cmp
clc
enter
nop
nop
out
sub
stc
enter
lret
loope
roll
ljmp
orb
ret
aad
aam
int
aas
cmp
jecxz
sti
lret
int3
jmp
jecxz
mov
lock
fprem1
repnz
fucom
int3
aad
loopne
shl
cmp
enter
loope
int3
int3
jmp
ret
shl
xor
fucomp
neg
in
fucom
aam
std
neg
rol
fiadds
fucom
aam
ret
out
clc
into
xor
xor
lock
shl
lds
out
mov
xchg
imul
xor
xor
cmp
iret
hlt
aad
fcomip
cli
cli
mov
out
mov
loope
shl
clc
lret
jmp
xor
fdivp
int3
cmc
filds
loop
int
mov
rcr
jecxz
repnz
hlt
clc
in
out
jmp
adc
clc
iret
std
ret
sti
aad
in
test
sar
aam
call
iret
into
ss
test
cmp
loope
test
int
out
xchg
sub
into
in
call
lret
ret
cmp
repz
sub
in
lret
out
test
loopne
loope
sti
xor
ljmp
cmp
xlat
test
fildl
and
aam
out
cmc
cmp
out
call
ret
jecxz
mov
fstp
cmp
addl
enter
loopne
std
sti
stc
cli
ffreep
mov
xchg
into
mov
mov
lret
mov
loope
leave
fdivr
cmc
rcr
cmp
fcmove
cmp
cli
in
ljmp
mov
cli
std
loopne
jecxz
shl
shl
ret
cmp
fchs
mov
or
sar
xchg
test
hlt
cmp
clc
fdivp
cmp
out
call
mov
or
not
divb
divl
jmp
loope
stc
loope
cmp
xchg
loope
call
int3
ljmp
aam
cmp
xor
aas
hlt
addl
cli
into
test
out
lret
xor
enter
fcmove
rcl
hlt
out
aad
mul
in
leave
fst
fcmovne
xchg
int3
in
in
xor
in
ljmp
fdivrl
in
add
std
mov
iret
int3
out
mov
into
icebp
repnz
sub
int
cmp
cmp
roll
sub
cld
jmp
xlat
out
in
lret
jmp
leave
aas
cmp
int3
aad
loope
repnz
mul
in
stc
out
xchg
out
xchg
rcl
into
out
in
out
lret
repnz
lret
cmc
fsubr
testl
fmul
les
jecxz
cmp
repz
fxch
cmp
rcr
shl
fadd
addb
cmc
loopne
out
repnz
jmp
cmp
lret
testb
and
xchg
shr
fmul
jmp
ror
jmp
repnz
jmp
int3
lret
fsubp
xchg
icebp
out
ss
in
call
lock
in
loop
fstp
aam
test
testl
lret
test
fsub
das
xlat
int
fcom
int3
inc
xor
sub
sub
mov
jmp
jmp
leave
ret
int
int
mov
push
xchg
out
enter
add
fdivr
cmp
mov
sbb
int3
loopne
faddl
stc
cld
xor
aaa
shl
aad
addl
in
lret
cli
fcmovne
test
into
in
ss
lret
fstp
fistpll
xlat
fmulp
out
shl
in
sti
jecxz
fstp
sti
int3
aam
xchg
in
xor
ss
in
div
rcr
testl
aas
stc
mov
shr
loop
jmp
jmp
out
clc
std
xor
cmp
sti
xlat
sbb
jmp
call
lret
cmp
fistpll
cmp
ds
addl
xchg
ljmp
push
loopne
cmp
in
hlt
jecxz
add
mov
lret
cmp
ss
rcl
into
hlt
stc
in
icebp
repnz
fdivr
loop
hlt
test
lock
enter
rcr
clc
aas
out
rcr
fcmovnbe
rcr
xlat
jmp
in
cld
repz
xor
in
aam
int
jmp
aam
sar
rcl
xlat
cli
jmp
ljmp
fadd
icebp
out
aas
fmulp
cmpl
aas
cld
mov
lret
std
loopne
lret
lock
ret
shrb
cs
out
aam
fsubr
sar
fdivp
std
ljmp
lea
aaa
out
call
or
clc
fnclex
fprem1
out
in
in
int3
sti
out
in
repz
int
repz
shl
icebp
cli
roll
fdiv
in
in
xchg
lock
icebp
shl
enter
shl
xlat
lock
adc
fcmovbe
div
jmp
stc
fmuls
in
int3
nop
vpsllq
sub
jmp
rol
cld
test
mov
lret
cli
xchg
in
shrb
clc
loop
cmp
cmp
shr
cmp
cli
xor
rcl
not
test
test
lret
fmull
cmp
in
lock
cld
jmp
sti
loopne
iret
hlt
cli
cli
jmp
mov
in
test
in
aaa
shl
out
cmp
loope
testl
test
or
loope
cs
ss
in
cmp
int3
fsubr
add
fadds
ljmp
xchg
aad
cmp
xlat
xor
stc
call
aad
cli
ret
cmc
cmc
in
jmp
fdivr
mov
xor
fnstcw
xor
fcmovb
fnstcw
rolb
xor
ffree
nop
xor
xchg
repz
clc
sti
cld
iret
addb
repz
fdivr
fsub
sar
sti
test
int3
in
xor
sub
addb
leave
leave
xchg
sar
aad
jmp
out
xlat
cmp
cmp
repnz
ds
jmp
ljmp
into
xor
jecxz
fdivs
int
hlt
adc
std
int
out
shl
cld
mov
mov
in
test
jmp
in
shlb
cli
int3
imul
leave
shr
in
cli
out
xlat
aas
add
add
call
xchg
in
rcl
jmp
sar
loopne
cmp
in
ffree
loopne
loopne
sti
cld
loopne
in
out
xchg
jmp
enter
ds
fdivp
test
loope,pt
in
aad
ljmp
mov
aas
ret
lret
ror
cmp
icebp
sti
jmp
ds
repz
and
add
jecxz
orb
shll
cmp
cmp
out
repz
enter
into
out
xchg
leave
in
mov
rcl
ret
jmp
in
stc
ret
cmc
repz
testb
out
lret
std
xor
ret
fmul
into
sar
and
aam
ret
ds
jmp
ljmp
xor
aam
cmp
cld
lret
fnstsw
iret
cmpb
std
lret
test
in
in
in
cmp
out
hlt
ljmp
rcl
lock
mov
fsubr
int
jmp
xchg
in
rcl
cmc
aam
int
out
cmp
aam
ret
xlat
out
xchg
mov
cmc
sti
fstpt
fmul
sti
lret
cmp
dec
out
aad
call
mov
ljmp
sarb
xor
iret
icebp
loopne
fsub
hlt
call
xor
jmp
aam
mov
xor
adc
add
out
in
out
decb
aam
jecxz
aaa
jmp
fcomi
out
sar
int
nop
lret
loop
shl
xor
xor
lds
xor
clc
ret
cmp
out
fsubp
mov
lock
in
shr
xor
out
cmp
imul
test
filds
add
fcomip
mov
loopne
xor
iret
fdiv
idivb
int3
icebp
aaa
sbb
leave
cld
call
nop
adcb
lret
fld
cmp
stc
xor
ror
into
in
sbb
cld
jmp
sti
fldl
lock
in
ss
icebp
jmp
repnz
fildl
in
mov
rolb
int
leave
fcomp
fbstp
loop
aad
push
xlat
lret
clc
cmp
jmp
cmc
xor
out
jmp
cmp
shl
stc
cli
aas
repz
addl
in
out
icebp
out
lock
aam
lock
out
into
fdiv
in
mov
enter
iret
xchg
in
repnz
shr
fld1
lret
cmp
repnz
les
out
xchg
aam
fnstcw
rcr
rcr
aam
mov
flds
ret
hlt
in
stc
cmp
fyl2xp1
ret
fprem1
mov
loopne
sub
nop
rorl
call
jmp
loop
ret
fiadds
decl
iret
loop
xlat
cli
jmp
enter
neg
sarl
fistpll
xlat
add
fdivr
cli
ljmp
int
cmp
hlt
xor
leave
sarl
fdiv
shr
loop
loopne
fmul
loop
sti
jmp
shl
rcl
xor
lock
clc
sar
in
les
mov
or
sub
enter
repnz
fxch
sti
xor
xlat
mov
cmc
in
fstp
in
fstl
xor
leave
xor
loope
ret
filds
enter
fdiv
int
or
rol
int3
hlt
xlat
sar
loopne
aam
cmp
shl
mov
test
xchg
nop
int
jecxz
lret
int
clc
adc
icebp
jecxz
jmp
jecxz
lret
mov
fisttps
loop
lret
xor
aad
cli
cmp
loopne
int
fsub
into
enter
mov
int
divb
lret
icebp
ljmp
in
out
mov
out
addl
cmp
leave
xor
shl
out
sti
aad
in
stc
loopne
xchg
fmulp
mov
xchg
mov
ftst
jmp
rcl
aaa
clc
cmc
in
ret
cld
xlat
jecxz
jmp
out
sub
out
out
repnz
int
enter
rol
ror
out
fdiv
xchg
jecxz
dec
out
xor
ss
into
lret
jecxz
sub
aad
cmc
jecxz
or
std
xchg
ret
xor
in
fdivrl
cmpb
mov
lds
hlt
repnz
shlb
sub
lock
cs
aad
aaa
loopne
cld
in
faddl
in
into
mov
repz
in
iret
sar
lret
xlat
rcl
icebp
cmp
ret
test
int
mov
int3
clc
stc
into
out
rcr
aad
aam
in
xlat
roll
std
aam
enter
fsub
shl
rclb
xor
stc
jmp
sbb
mov
fisttpl
hlt
icebp
xor
iret
aam
cmc
div
sar
cmp
iret
int3
loope
fadd
loop
loop
faddp
int3
sti
out
jecxz
in
sub
rcr
ss
ljmp
movb
out
in
in
iret
into
aam
xor
ljmp
lock
cmp
cmp
loop
ljmp
xchg
in
ret
jecxz
aaa
xor
sarb
sti
cmp
sti
out
int
icebp
sub
xchg
out
out
aaa
lock
hlt
shl
xlat
rolb
jecxz
fimuls
xor
cld
cs
repz
fcmove
stc
repnz
mov
addl
mov
xor
mov
mov
cmp
je
jmp
xlat
rol
xlat
enter
push
xchg
sbb
movsl
add
std
rol
shlb
shr
das
fcomip
cmp
frndint
rolb
ret
jmp
std
fsub
loop
repz
xchg
mul
ret
lret
iret
fstpt
cmp
rcl
fcmovb
jecxz
test
jmp
ljmp
ljmp
iret
in
fiadds
jmp
mov
xorl
stc
icebp
cmp
hlt
fdivp
aam
out
std
shl
loope
mov
adcb
shrl
ror
lret
xor
in
rcr
fnstsw
aas
test
jmp
fcoml
cmp
xor
cli
cmc
into
repz
fcomi
xlat
sti
call
fiaddl
out
lock
not
test
stc
ljmp
fadd
aas
aad
fdivr
int
mov
lret
in
fcom
aam
aam
in
out
aas
iret
cmp
ret
aad
cmp
fiadds
sbb
sub
repz
hlt
fcomp
ljmp
ret
in
lret
mov
in
orb
div
lret
out
xor
clc
aas
out
ret
in
out
clc
leave
loop
mov
decb
rolb
div
idivb
lock
stc
cmp
out
repz
cmc
jmp
xchg
loopne
lea
fstpt
ss
cld
fcmovnbe
iret
aad
xlat
rolb
int3
out
xor
cld
cmc
call
hlt
in
clc
lock
ror
fcmovu
hlt
lock
cmc
jmp
fadd
int
out
xchg
int3
jmp
out
sar
lret
aam
cmpb
stc
loopne
repz
jmp
xchg
lret
mov
ss
xor
ljmp
ds
icebp
imul
jmp
icebp
in
cld
xchg
cld
fst
enter
stc
imul
cmp
rolb
xchg
loop
mov
test
out
sti
into
lret
loop
iret
lret
lret
aam
fdivl
idiv
shll
and
ljmp
nop
xchg
test
xchg
lret
jecxz
ror
enter
loope
incb
lock
clc
stc
cmp
stc
iret
loopne
lret
imulb
into
loope
cmp
cld
shr
rcl
clc
rolb
into
fimuls
in
xor
icebp
neg
sti
jmp
iret
clc
fdiv
xchg
in
mov
xchg
out
fcomip
call
lret
cli
lret
test
aaa
hlt
loop
cld
xlat
enter
iret
int
out
xchg
shl
aaa
cld
in
cmp
jmp
ffree
xor
addb
mov
leave
repz
addb
lret
fucompp
fnstcw
hlt
test
repnz
cmp
mov
mov
addb
jecxz
call
enter
fstp
stc
aas
loop
jmp
sar
out
in
loope
ror
enter
ljmp
sbb
mov
lret
jmp
mov
cmp
in
int3
cmp
aam
rolb
loope
fmul
jmp
cld
mov
mov
aam
in
xlat
cmp
shr
rcr
lret
neg
cmp
fisttps
ljmp
icebp
xor
rcl
icebp
enter
cmp
aad
sbb
mov
int
std
lret
fdiv
jmp
iret
in
fdivr
cmp
shlb
xlat
rcr
les
loopne
call
f2xm1
sarb
ss
enter
repz
call
int3
leave
lret
out
xchg
fisttpll
fcom
fcmovnu
aaa
lock
fadds
mov
out
loop
lock
sub
std
fstpt
sti
fldlg2
jmp
aad
repz
cmp
nop
call
ljmp
into
out
jmp
ror
xorb
ffreep
sti
lret
mov
iret
mov
in
in
xchg
mov
clc
ret
xlat
aam
lret
roll
loopne
mov
lock
xchg
out
fstl
jmp
fcmove
filds
ret
fdiv
cld
std
std
int3
nop
int3
mov
in
loop
test
shr
loopne
cld
add
out
lds
int
int3
out
shlb
xor
fdivrp
int3
sarb
xchg
faddl
imul
out
call
out
imul
clc
jmp
inc
clc
jmp
into
ror
fxch
fst
cmc
mov
mov
jecxz
jle
movsl
add
xor
fnstcw
test
stc
shl
les
lret
nop
or
xor
cmp
cmc
cmp
repnz
std
mov
out
jmp
repnz
out
jmp
cmp
icebp
clc
shl
ret
loop
in
xchg
mov
icebp
aad
out
cld
icebp
loop
sar
cmp
cmp
rorb
xchg
loope
imul
jecxz
out
lret
idiv
into
fmul
stc
sti
div
jmp
test
fmul
into
out
fildl
clc
div
xor
std
loopne
sarb
into
add
neg
out
fsub
out
jmp
xor
stc
repz
cmp
cmp
repnz
loop
mul
repz
lret
stc
fsubp
out
jecxz
shr
mov
loop
in
int
fdivr
fidivrs
sbb
jecxz
fldl
aad
fsub
incb
lock
stc
sarl
out
aad
jmp
loopne
loopne
aas
fcmovbe
test
std
sti
jmp
fisttps
jmp
shl
std
shl
sti
roll
fsubr
jecxz
xchg
loope
int
xor
stc
fneni(8087
roll
aam
ds
repnz
fucom
stc
test
test
in
xor
ret
ljmp
xchg
lock
aad
test
mov
fcmovnu
mov
xor
cli
imul
out
out
cmp
shl
fldl2t
add
out
in
in
int3
fstl
repnz
cmc
xor
leave
loopne
fmul
xor
loop
xchg
mov
lret
in
out
lock
xor
out
cmp
lret
cmp
test
out
clc
loope
test
rcr
loop
xor
leave
out
icebp
clc
stc
lret
shr
aas
and
out
in
les
adcb
cmp
icebp
int3
fmul
int
neg
test
mov
out
shl
addl
call
test
repnz
xchg
loope
fmull
out
imul
ror
leave
in
ss
lock
aas
icebp
loopne
jmp
cld
mov
xchg
out
cld
aam
rol
out
out
repnz
stc
leave
add
fdivrp
std
loop
sti
decl
out
rcl
loopne
iret
int3
shll
shl
cmp
jmp
aad
in
repz
loop
flds
fsubp
xchg
int3
int
jecxz
neg
out
clc
enter
int
rcl
hlt
aad
test
icebp
rorb
enter
cli
rcl
out
rcl
out
jecxz
in
loop
hlt
decb
icebp
filds
xlat
jmp
sti
jmp
cmp
out
loopne
cmc
ror
ret
mul
int
leave
cld
decb
xor
xor
not
int3
out
jecxz
in
iret
fildl
test
mov
jmp
fdivr
enter
xor
cmc
cmp
adc
xlat
cld
leave
cld
leave
cmp
faddl
jmp
cld
out
cmp
rolb
in
cli
loopne
test
lea
adc
loope
cmp
xor
rcr
xlat
std
in
std
fmul
in
lock
test
leave
int3
in
iret
repnz
aad
out
cmp
rcl
out
in
cmp
and
cmp
int3
xchg
mov
ljmp
xor
repnz
repz
fcom
addl
lock
rorl
cmp
out
sti
out
aas
loop
in
rcl
repz
fsub
std
fdivr
in
ror
nop
loope
ljmp
clc
std
cmp
xor
fstp
xor
out
cli
sbb
adc
ret
cmp
cmp
rcr
enter
int3
call
rol
lock
call
shl
xchg
idiv
in
fdivrp
adcb
std
loopne
enter
xor
aad
into
iret
hlt
aam
iret
test
loop
fsub
sti
stc
mov
icebp
ljmp
out
rcl
aas
jmp
rcr
fadd
test
int3
in
iret
int3
lret
lock
cmc
ret
ljmp
fcomip
out
aam
repz
mov
int
addb
test
icebp
repnz
das
lret
int
movl
jmp
mov
jmp
ret
rol
rcl
rcl
sar
and
adc
cmp
jle
add
fcomip
repz
fiaddl
orb
not
xor
cmp
cmp
or
rcl
aad
mov
out
out
loop
adc
aad
lds
rcl
hlt
call
repz
stc
enter
cmc
call
int3
mov
mov
sub
ret
in
in
hlt
std
sti
out
sarb
incl
repnz
test
sar
int
jecxz
jmp
fsubrp
enter
sti
cmp
ljmp
in
shr
fucomip
lock
ljmp
fcomp
cmp
aam
ret
call
rorl
xchg
xor
xor
fxch
repz
hlt
lret
fsub
mov
out
lret
shl
faddl
ror
aaa
xor
shll
repnz
jecxz
test
ror
test
lds
aaa
enter
loopne
loopne
mul
fcom
cli
cmc
fcmovne
mov
out
out
fld1
aaa
aad
cmp
xor
in
test
rol
fiadds
orl
icebp
cmp
in
fdivp
roll
shl
call
incl
lea
aad
div
xor
out
out
lret
ffree
loop
cmp
mov
cmp
rcr
ss
cmp
cmc
aad
loope
in
in
aas
fcmovb
test
jecxz
fsubp
lret
xchg
in
fnstsw
test
cmp
rol
cmc
cmp
aaa
cmp
cmp
rcr
cld
out
testb
enter
xchg
repz
out
out
in
sti
rcr
hlt
loope
fidivrs
fcomip
adc
fmul
mov
lret
vshufps
lret
icebp
divl
cli
cld
call
loope
stc
cmp
cli
jmp
xlat
flds
fsubp
das
lock
aaa
in
lret
sarl
fdivp
clc
lds
enter
lock
rclb
repnz
iret
in
fcmovu
shl
hlt
test
clc
enter
loope
jmp
xchg
jmp
out
rcr
ror
fdivr
fnstsw
aas
lds
mov
lret
loopne
call
loopne
leave
repz
lret
int3
cmc
cli
clc
ffree
sub
addb
orb
in
repz
int
shlb
stc
lock
cmc
in
repnz
repz
rolb
xchg
ljmp
hlt
sarl
and
iret
xchg
cli
aad
in
fmulp
clc
std
popl
enter
out
in
out
aas
in
in
iret
ss
mul
in
in
ftst
in
fiadds
les
jecxz
clc
hlt
shr
xlat
cmp
ds
in
incl
in
jecxz
in
xchg
xchg
jmp
fmul
fmul
fmul
icebp
icebp
mul
ret
out
jmp
jmp
xchg
mov
out
in
lret
cmp
xor
aad
sar
int
shl
loopne
flds
in
ljmp
in
into
rcr
test
repnz
les
movl
stc
in
cmp
enter
fsub
loop
sar
idiv
xchg
out
int
jmp
aam
ljmp
fdiv
les
sbb
int3
int
addl
not
sarb
fsubrp
xlat
lock
jmp
jmp
jmp
out
rorl
aad
shlb
xlat
cmc
out
sarl
cmp
repnz
cmp
cli
into
cli
xchg
jecxz
sti
lock
aam
jmp
or
std
fcmovb
fdivr
lret
fisttpl
into
out
icebp
leave
leave
leave
clc
out
div
ds
xlat
icebp
shl
cmp
loopne
decl
int
xor
fmul
aad
int
int3
hlt
std
fldl
xchg
jecxz
fsub
in
xchg
adcb
shlb
idiv
xlat
aad
cmc
cmp
add
vpand
in
out
fsubp
out
mov
in
aad
lret
ljmp
icebp
adc
leave
lea
hlt
fsubrp
pushl
xlat
cmp
xlat
cmp
out
aas
xlat
jmp
fucomip
out
xor
loop
int3
hlt
cli
in
lock
aad
incl
mov
xor
add
cmp
jmp
rcl
rcl
fstp
rcr
cld
cmp
jmp
pop
add
mov
jle
movsl
add
jmp
clc
enter
xchg
mov
out
cli
out
fcomp
jmp
ljmp
fsub
mov
loope
jmp
nop
call
fdivrs
into
sti
cmp
int
out
cmp
fdivr
shl
lret
or
std
out
jecxz
aam
loop
ret
sub
xlat
cmp
aas
cmp
lret
idiv
aam
ret
mov
jmp
fdivr
addb
out
cld
lret
testb
and
cli
mov
cmp
mov
rcl
in
enter
sti
in
fldl
shl
jmp
icebp
xchg
xchg
xchg
ljmp
int
out
fucomi
icebp
aam
std
enter
xchg
lret
fmulp
mov
lock
shll
fdivs
lock
shl
cli
out
mul
cli
mov
xchg
cli
aad
xor
int3
loopne
lock
fisttps
test
std
int3
out
call
out
cmp
cmp
shl
in
stc
in
in
mov
aam
ljmp
iret
ror
out
call
fdivr
shl
out
rcr
test
jmp
addb
xlat
jecxz
loop
cmp
aam
in
ror
fucom
hlt
shl
mov
lret
mov
aaa
sub
icebp
cmp
enter
repz
jecxz
inc
cld
cmp
std
int3
orb
jmp
lret
out
repz
lock
jmp
lock
repnz
xchg
fdiv
out
test
fiadds
loop
shl
imul
fxch
fxch
ljmp
out
sbb
jecxz
out
xlat
xchg
out
int3
int3
out
jmp
lds
repz
idiv
loop
cmp
xor
cli
loopne
call
std
shl
xchg
repz
divl
ljmp
mul
aas
rol
ret
out
aad
out
in
decb
ret
shl
out
enter
sbb
rcl
in
jmp
ljmp
in
xchg
enter
fcmovnb
stc
in
shr
int3
in
icebp
out
cmp
and
decb
mov
lock
in
int
cmc
cld
fdivrs
ss
std
hlt
lret
cmc
fimuls
filds
cmp
out
in
jmp
sar
jmp
jmp
xchg
rorb
sarb
out
roll
cmp
clc
std
fsub
ljmp
call
sub
ror
cmp
xlat
loope
stc
fdivr
in
testl
int3
in
in
shr
in
sub
loopne
ror
loopne
aad
incl
out
loopne
nop
out
leave
out
mov
xor
in
out
xor
repz
int
lock
test
fsubrp
clc
fmuls
mov
mov
call
out
xor
das
fucomip
lret
sti
aas
shr
inc
fstp
not
cli
mov
mov
out
in
fmul
adc
sti
cmp
repz
sar
xlat
mov
xchg
aaa
cmp
lock
leave
int3
idiv
xlat
flds
mov
inc
int3
mul
xchg
repz
fldlg2
sti
jmp
ret
shl
call
decl
in
test
test
test
ljmp
addb
out
enter
bnd
lret
into
fdiv
repnz
in
fnstcw
std
loope
icebp
jecxz
jmp
fucomp
xor
out
loop
xlat
std
cmp
test
lret
std
in
jecxz
xchg
rcr
int3
xchg
xor
stc
mov
neg
jmp
in
fmulp
out
movl
fdivrp
sub
int
sar
addb
cmp
and
int3
addb
int3
iret
ret
shl
ljmp
fidivrs
ret
cmp
enter
loope
out
add
out
std
lret
loopne
aaa
lret
out
lret
repz
div
cmc
into
test
out
sar
enter
ffree
cli
enter
xchg
aam
cs
les
aaa
repz
cmp
sar
div
ds
shl
fstp
jmp
out
mov
xor
sti
dec
cmp
aas
xlat
repnz
int3
in
lret
out
je
mov
mov
jmp
int3
enter
lret
int
stos
test
mov
in
jle
add
out
rorb
ror
xor
xlat
cmp
lock
aad
fldl
or
jmp
fdiv
cmp
fcmovbe
stc
sti
shl
repnz
stc
enter
sti
leave
xchg
repz
icebp
in
aam
int
flds
sti
ret
cld
mov
mov
test
icebp
loopne
out
jmp
lret
iret
cmp
lock
fiadds
cli
xchg
loope
in
aaa
repnz
sub
repz
cli
lock
out
mov
out
stc
test
out
sarl
xor
cmp
fucomip
sti
int3
loope
rcl
fiaddl
loopne
test
aad
mul
aad
leave
cmp
cmc
cmc
loope
fdivrp
out
jecxz
roll
in
fiaddl
loop
leave
xlat
xor
idiv
adc
aas
std
cld
push
sar
cli
rol
mov
faddl
adcl
call
in
std
ret
xchg
hlt
mov
cli
mov
mov
int3
xor
out
lret
enter
cld
cli
xlat
fmulp
cmp
ljmp
icebp
cmp
repz
test
out
shr
xor
aas
aad
ljmp
mov
fldl2e
cmp
ffree
repnz
test
fcmovnu
std
in
decb
repnz
icebp
xchg
out
icebp
aam
out
frstpm(287
jmp
cld
std
sti
cld
stc
xlat
fidivrs
cmc
fucom
leave
xchg
xor
stc
into
ror
ror
iret
hlt
sar
in
loop
call
clc
decl
test
repnz
cld
shl
ljmp
out
and
fimuls
decl
jecxz
hlt
ljmp
out
loopne
clc
cli
iret
mov
out
shr
fdivrp
lret
rcl
jmp
cmp
rcl
in
les
in
jmp
fsts
call
cmp
ror
stc
cld
rcl
ds
icebp
mov
out
sar
nop
out
out
mov
enter
sar
lret
iret
lret
inc
repnz
rcr
xchg
leave
leave
sti
mov
out
cld
jmp
xor
cmc
into
aaa
enter
loope
loopne
icebp
repnz
hlt
test
cmc
cli
mov
loope
int
enter
fstp
cmp
loop
fcmove
and
test
test
nop
jmp
das
fxch
out
leave
loope
ds
hlt
in
ret
mov
mov
nop
adcb
cmp
ror
aaa
fcmove
jmp
out
enter
xor
out
shl
sti
cmp
sub
aam
call
xor
idivb
sarb
fucomi
into
fmul
filds
icebp
ret
fnsave
rcl
iret
aam
loop
rcr
sbb
out
mov
out
test
int3
or
enter
out
out
repz
sti
sub
adcl
in
into
out
cld
faddp
rcl
aad
jmp
int3
fimuls
xchg
int
xor
rcl
shl
in
cmp
rol
hlt
in
test
test
into
cld
xchg
icebp
xchg
int3
stc
out
jmp
std
in
loope
shr
cmp
in
filds
nop
aam
xor
lock
lret
fnstcw
xor
icebp
aam
flds
imul
enter
ljmp
ljmp
cld
fistpll
rcr
aas
xchg
mov
ret
and
repz
into
loop
iret
sti
icebp
sar
div
cli
xlat
imul
jecxz
in
lret
in
fnstsw
jmp
rcl
ljmp
xor
jmp
sti
ds
iret
call
flds
hlt
in
in
in
in
in
aaa
std
std
cli
lret
in
cmp
test
imul
sti
flds
shll
rol
jmp
sar
aas
stc
ds
loopne
call
in
enter
int3
xchg
jecxz
enter
fst
cmc
ljmp
std
rcr
xlat
testb
lock
stc
in
cld
fdivs
in
rcr
fcmovu
in
out
idiv
mov
fucomi
mov
mov
lea
add
mov
mov
mov
jmp
int
rcl
fcmovu
int
xchg
daa
ljmp
jmp
jle
int3
in
leave
xor
stc
ror
xlat
roll
aad
idiv
in
mov
in
xor
repnz
push
cmc
cmp
lock
and
icebp
mov
sub
mov
shl
xorb
aaa
mov
aam
iret
leave
clc
repz
clc
rol
orl
jmp
leave
jmp
out
xchg
shlb
lds
jmp
in
hlt
aas
not
repnz
and
in
mov
fistl
jecxz
call
hlt
fcmovbe
icebp
jmp
repz
in
cld
mov
jmp
adc
iret
mov
aam
cli
aad
into
into
iret
hlt
ss
iret
loop
lock
out
xchg
orb
mov
enter
shl
cmp
ret
idiv
icebp
cmp
xchg
stc
fucomip
sti
cmp
jmp
xbegin
lret
in
hlt
fldl2t
ljmp
and
xchg
divl
out
int3
cmp
cmp
jecxz,pt
cmc
sti
rolb
test
loope
int
ss
cmp
fistpll
aas
fcmovnbe
rcr
loopne
add
cmp
jmp
xlat
out
test
out
xor
ljmp
shll
cmp
roll
stc
out
shr
cmc
mov
aam
cmp
ss
sarb
icebp
rcl
stc
ds
not
xchg
lret
call
call
das
repz
iret
sarb
aad
cmpb
jecxz
enter
ds
xlat
addb
das
lret
jmp
das
faddl
xor
xchg
clc
enter
loop
sar
jmp
cmp
fdivrl
aad
repnz
clc
or
loopne
fists
cs
enter
icebp
jmp
test
addb
test
xchg
faddp
sar
xchg
out
int3
ss
shl
repnz
aad
cld
rcr
lret
lds
fcoml
in
enter
leave
icebp
repnz
rolb
lds
out
and
in
mul
cmp
fsubr
cmp
fld
clc
in
out
int
mov
out
aad
lds
fdivrl
repnz
fst
ror
cmp
into
lock
fcomp
ret
hlt
in
fscale
sti
mov
rol
sar
lret
leave
xlat
sar
aad
icebp
fsubr
repz
fiadds
loopne
xchg
out
repz
ss
call
call
aas
cmp
test
into
hlt
sub
jmp
into
hlt
in
int3
int
loop
in
cmp
jecxz
add
mov
fnstsw
sti
popl
stc
clc
sub
shr
repz
fcomi
sti
iret
out
fisttps
mov
test
aaa
not
fcomp
clc
idivb
xor
aad
aaa
icebp
addl
xchg
shl
repz
repnz
out
shr
xlat
clc
out
sar
aam
cmp
not
cld
mul
jmp
les
out
fistl
out
sti
idiv
fdivr
div
rcr
out
icebp
testb
out
mov
jmp
addl
icebp
xor
rol
div
test
fadds
ret
lret
jmp
test
aam
aam
sar
rcl
stc
cli
filds
call
lret
in
iret
call
jmp
jmp
clc
stc
fcomp
inc
shl
addl
mov
loop
xchg
lock
repnz
sarl
xlat
jmp
ds
icebp
incb
cli
sbb
in
into
cmp
out
lret
jecxz
in
imul
iret
int3
repz
hlt
fsubrp
testb
test
xor
stc
int3
jmp
xor
ret
not
mov
loop
mov
iret
aad
shll
cmp
in
ljmp
xlat
aad
ljmp
xor
cmp
in
cmp
repnz
aas
pushl
hlt
lds
xlat
jmp
sub
aad
iret
loope
jecxz
aam
fidivrl
roll
loop
clc
xchg
test
ffreep
mov
iret
lock
lret
clc
jmp
ljmp
in
fldl2t
les
mov
lret
in
mov
mov
xor
add
mov
jmp
mov
fst
fxch
jg
lods
loop
pop
in
jle
movsl
add
repnz
frstpm(287
in
shl
fdivr
cli
cld
out
lret
enter
rcl
int
clc
ret
ret
std
fadd
sti
leave
fildl
out
out
aad
sti
xor
out
cld
loope
cld
cld
hlt
loope
repnz
cmp
xchg
repnz
int3
faddp
repz
xor
out
cld
fcmovnbe
lret
int3
fsub
adc
test
jecxz
jmp
testb
loop
hlt
call
cld
sti
aas
shl
ret
aam
lock
lret
shl
test
rclb
ss
rolb
roll
aad
in
les
fsubrp
test
jmp
fucomip
sar
repz
cld
loop
xchg
cli
iret
cli
xchg
adc
hlt
ss
in
xor
jmp
iret
loop
xchg
testb
ljmp
xchg
not
ret
iret
fdivs
fsubp
idiv
out
fxam
lret
ret
cld
fstl
repnz
in
stc
int3
repz
pushl
rcr
faddl
ljmp
call
rcr
cld
std
xor
adc
sti
sti
loopne
fadds
aaa
hlt
icebp
int3
enter
out
cmp
addb
xchg
test
sti
shl
dec
enter
cmp
ret
ret
xlat
testl
xchg
aas
repnz
lret
sti
fdivrs
rcr
fnstsw
test
int3
mov
in
test
rcll
sti
aam
fcmovbe
cmp
cli
in
into
sti
cli
cmp
mov
clc
xchg
fisttpl
aaa
out
fincstp
cli
lock
clc
jmp
mul
cld
in
imul
not
int
std
lret
mov
enter
cli
jmp
fstpt
jecxz
sar
loopne
ror
aas
int3
fcmovnu
out
in
out
leave
ret
cs
ss
fcom
push
loope
out
and
mov
call
xor
cli
repnz
xor
clc
cld
rol
div
lock
adc
or
dec
int
xchg
jmp
in
vucomiss
fnstcw
cli
shl
aad
xlat
ret
test
leave
clc
lret
lea
ret
xor
sti
int3
fistpll
repnz
jmp
ret
sbb
incl
stc
in
loop
out
xchg
fnstsw
ss
sarl
repz
clc
hlt
jmp
push
test
cmp
orb
repz
xor
xor
int
sarl
cmp
cmc
xlat
enter
std
call
nop
mov
lock
repz
clc
cmp
fcmovbe
neg
aad
loope
in
fsub
mov
ror
lret
jmp
into
cmp
xor
cmp
rcl
sar
mov
testl
and
out
cmp
ror
in
cmp
cmp
repnz
test
test
loopne
icebp
rol
addl
sub
std
clc
call
aam
test
mov
cmc
adc
mov
ljmp
jmp
cld
fadds
clc
out
cmc
fdivrp
neg
jmp
sub
out
sarl
xlat
loope
ror
int
idiv
fcomi
cmp
sarb
loopne
addb
fucomp
rorb
out
xor
in
int
enter
ss
fcmovbe
cli
loope
fimull
loope
jmp
rcl
into
sub
idivb
shr
fdiv
jmp
rcr
cmp
adc
leave
clc
xchg
out
call
testb
xor
cli
jecxz
loope
clc
cli
fimull
call
sub
lret
ljmp
aas
loop
ds
loope
call
xchg
iret
xchg
repz
int
in
xor
ss
aaa
ffree
enter
cld
lea
jecxz
mov
fsubr
out
xor
in
ds
fiaddl
fdiv
test
fmull
ljmp
aam
aam
or
inc
sbb
mov
loope
fdivr
sub
aaa
iret
lock
jmp
aam
shl
aas
leave
jmp
filds
xorb
repz
hlt
sarb
ror
shl
lock
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
jmp
rol
lret
aad
mov
pop
int
jle
movsl
add
in
aam
addb
enter
int
shl
cmc
divl
icebp
aam
cld
rcr
loopne
mov
cli
neg
out
test
mov
shr
xor
sar
int
aad
addl
in
loopne
ljmp
out
repnz
hlt
dec
into
fmulp
cmp
rol
roll
out
lock
jmp
aam
loope
lret
xor
fistpll
rol
out
jmp
xchg
vphadddq
out
enter
cmp
out
leave
in
cmc
in
ret
rcl
test
enter
out
jmp
clc
fcmovbe
xor
fdivr
les
shl
cmc
mov
sti
cmc
mov
xor
jecxz
sti
xor
aaa
in
fdivrs
loopne
ret
addl
addb
hlt
lret
sti
cmp
iret
cld
out
addl
mov
shl
test
aad
sar
aam
std
clc
int3
fistpll
loope
ds
loope
out
into
cli
loopne
and
lock
aam
fcomi
aaa
icebp
fistpll
std
in
shl
rcl
std
fsubp
clc
fsub
mov
test
lea
aam
sti
fdivrl
call
call
aam
fdiv
call
out
out
in
xchg
cli
out
out
out
int
out
in
loop
fcom
lock
in
mov
ljmp
xor
cmc
fidivrs
filds
stc
incb
lret
lret
shl
fistl
iret
cmp
leave
into
in
shl
and
xchg
orl
out
mul
out
xor
cs
fmulp
lret
hlt
mov
ljmp
fyl2x
filds
shlb
cmp
shr
cmc
repz
cmp
call
mov
decl
loope
sar
int3
xlat
iret
lock
aad
adc
icebp
test
mov
mov
in
xchg
and
xor
out
ljmp
faddp
enter
loopne
mov
lret
jecxz
enter
xor
iret
aam
sti
stc
shl
cld
repz
lret
jmp
and
rcr
int
aam
sub
repz
in
fcmovne
int3
jmp
out
sti
fdivrp
or
out
or
out
int
cmp
test
fnstcw
bnd
mov
cli
jmp
loopne
out
out
sti
in
ds
orl
nop
decb
sub
cmp
aad
imul
loopne
call
cld
clc
ret
ljmp
jmp
hlt
enter
enter
call
fcomp
loope
orb
xchg
std
filds
leave
lock
hlt
leave
shl
out
test
cmp
not
lret
in
mov
aam
leave
leave
stc
cld
lds
cmp
sar
jmp
orb
cld
in
adc
icebp
in
shr
cmp
shl
test
icebp
cmc
out
ret
fsubp
lret
jmp
lea
aam
fcmovu
jmp
cmp
sti
rcr
loope
xlat
loopne
clc
sbb
lock
call
xlat
in
lret
int
cld
loopne
adc
fiadds
lret
xchg
hlt
jecxz
xor
out
hlt
cmp
cmp
cmc
fcmovnb
call
adcb
aaa
fcmovne
icebp
cmp
shl
xor
cmp
sti
rcr
lret
fildl
jmp
into
ljmp
iret
leave
rcr
jecxz
ffree
orb
in
out
repnz
lock
lret
jmp
cmp
iret
xlat
sbb
test
loopne
leave
sbb
iret
loope
loope
xor
jmp
imul
repz
in
in
icebp
cmp
in
out
in
int3
lock
cld
xchg
mov
mov
in
in
sti
lock
cmp
cmp
lock
fyl2xp1
call
enter
lea
lret
cmp
cmp
sti
iret
test
in
loope
std
fucom
out
in
mov
repz
clc
out
int3
aad
cmp
stc
cmp
in
shl
cmp
mov
mov
mov
jmp
aam
int
aad
fldt
sbb
je
jle
movsl
add
and
ljmp
jecxz
xor
jmp
repnz
int
rcl
xlat
fldl
test
call
sar
cmc
std
clc
cld
rcl
jecxz
sbb
hlt
ret
jmp
addb
into
sub
cmp
cmp
cld
out
int
ss
test
jecxz
lret
in
cmp
xorl
ror
sarb
out
not
std
shl
fcomip
fdivr
loopne
test
out
testl
aaa
loop
fucom
hlt
aaa
sti
test
sar
out
push
in
fndisi(8087
fdivrp
std
xchg
int3
in
aam
ror
aaa
stc
shl
ss
or
repnz
fildl
fucomip
adcl
ret
in
ss
fsubr
sar
clc
xchg
hlt
orb
shr
out
ror
xchg
shr
fstp
ljmp
sti
out
lds
nop
call
shl
sar
cmp
out
fnstcw
in
hlt
test
mov
ljmp
in
into
sub
enter
cmp
cmp
int3
sarl
xchg
mov
cld
int
in
lock
mov
out
aad
jecxz
in
call
roll
ffree
fimull
int
into
xchg
in
xchg
fucomip
in
hlt
fdivrs
lret
ss
in
xlat
into
fcmovnu
out
cld
out
fildl
repnz
notb
ljmp
sbb
vpaddd
stc
fucomp
aam
jmp
xor
jmp
cmp
cmp
call
ret
mov
mov
shr
jmp
repz
ret
xor
hlt
mov
decl
lret
xchg
mov
int
leave
shl
call
ret
xchg
icebp
test
fcompp
cli
stc
out
ljmp
in
in
xor
xor
ss
cmp
test
mov
mov
jmp
aam
test
cmc
ret
ljmp
cmp
inc
call
nop
out
in
xchg
fucompp
out
fldl2t
jmp
fdivr
ret
lret
call
loopne
rolb
not
lock
cmp
fdivr
f2xm1
test
in
aas
jecxz
fucomi
sti
jmp
int
in
int3
aam
xorl
lock
lock
leave
fstpt
cmp
cmp
mov
fcmovnu
jmp
xor
iret
lds
call
leave
aam
fidivrs
repz
inc
loopne
lret
les
out
loope
loop
fsub
out
ss
aam
rcr
into
out
std
loop
cmc
idiv
ret
loopne
in
std
loope
roll
lock
jmp
cmp
iret
cmp
std
aam
cli
lret
or
iret
xchg
jmp
icebp
hlt
xor
sti
jmp
adc
loopne
repnz
repnz
std
test
loop
in
loopne
ret
enter
call
test
out
shr
iret
lea
sti
neg
jmp
rcr
loop
cmc
jmp
sub
xchg
cmc
sar
clc
sub
repnz
shl
addb
mov
out
mov
ret
ret
fucomi
cmp
aaa
rcl
roll
repz
jecxz
call
xchg
out
xor
cmc
into
cmp
cmp
mul
repnz
cli
in
out
test
lret
into
nop
in
leave
ljmp
in
fcmovnbe
lret
lret
cmp
div
in
test
lret
xlat
cld
fmulp
out
leave
repz
aaa
xor
ror
lock
fucomip
loop
test
and
loope
lock
into
in
not
xor
in
into
cmp
not
out
call
in
loop
xchg
out
fst
mov
not
lret
cli
into
repz
loopne
bnd
clc
xchg
clc
out
test
fucompp
loop
aad
call
neg
dec
rcl
add
icebp
call
mov
in
decl
hlt
lret
cld
cmp
cli
cmp
fldpi
ftst
sti
vpinsrw
stc
in
jecxz
lret
int
into
xor
das
xor
fcom
loopne
aad
loopne
fiaddl
out
test
out
mov
add
jmp
aam
iret
int3
fst
outsl
fmull
je
jmp
movsl
add
mov
xor
xlat
repz
cmp
aad
loope,pt
lock
dec
jmp
les
repz
std
fmulp
loopne
xor
fadd
cmp
fdivr
xlat
lret
loope
cmp
sarl
fmull
fcom
icebp
fcmovbe
jmp
cld
out
call
cmc
hlt
loope
rorl
jmp
int3
in
lret
xor
xlat
lret
stc
jmp
cmc
ret
addl
aas
in
xchg
lret
in
loopne
in
hlt
jecxz
cli
jmp
aad
and
jmp
int3
mov
xchg
lock
out
shl
loope
cmp
in
in
leave
mov
into
loopne
jmp
ret
cmp
int
int
loopne
jmp
shr
fmull
jecxz
fists
xchg
repz
sti
stc
out
sti
clc
lret
aad
loopne
xlat
adc
fucom
test
loope
call
popl
cmc
repnz
hlt
hlt
vpsllq
in
in
test
test
in
xor
jmp
shr
stc
rcr
mov
cld
ljmp
ror
in
out
out
shl
xlat
lret
ret
aad
loopne
fnstsw
lret
ljmp
xchg
int
iret
leave
in
xor
int3
cmp
cld
fucom
loop
addb
or
ret
out
sti
leave
in
out
aas
clc
loope
sbb
ret
leave
enter
xchg
in
ret
jmp
cmp
stc
int
int
ffree
lock
jmp
int
into
in
xchg
repz
fxam
jmp
leave
clc
shr
cmp
decb
sti
jmp
fisttpl
aad
aaa
clc
fcomi
cld
rolb
in
in
jecxz
stc
loop
nop
mov
jecxz
out
sar
xor
iret
xor
out
fsubp
iret
jecxz
enter
in
lock
xchg
call
xor
int3
ss
cmp
cmp
fdivr
icebp
add
std
into
roll
xor
enter
shl
push
mov
cmc
fildl
xchg
mov
mov
xor
ret
repnz
fdivr
shl
aam
roll
int
sub
faddl
lock
rcl
xor
ss
loope
int
in
stc
sti
enter
out
lock
xchg
mov
xchg
call
jmp
fxch
cli
loope
lret
sbb
stc
add
hlt
aad
in
ljmp
iret
repnz
fstp
ds
iret
shl
jmp
fistl
xchg
ss
shr
not
std
fstp
clc
cld
out
shl
sti
shl
rol
std
ljmp
mov
mul
cmp
fcomp
int
int3
loopne
repz
xor
clc
loop
cli
std
shl
mov
repz
jecxz
int
lret
int
in
test
cli
rcl
cmp
in
leave
std
out
in
iret
shl
lds
sar
in
xor
clc
aaa
into
ror
ffreep
repnz
cmc
loop
loope
jmp
test
xor
fsub
int
into
ljmp
std
repz
xlat
loope
jmp
loopne
rclb
in
icebp
xor
enter
fadds
ffreep
jmp
xchg
mov
in
icebp
in
repz
jmp
and
repnz
xchg
shl
shr
jecxz
cmp
clc
not
lret
fnstcw
fnstsw
std
faddl
mov
xlat
fdivr
xchg
loope
mov
loopne
lret
leave
out
leave
ss
loope
rol
xlat
ret
fcmovbe
ret
jmp
leave
fucomip
in
lret
rcr
test
call
rol
aam
aad
lock
iret
rolb
aas
call
mov
out
enter
cld
aaa
cmp
int3
and
icebp
push
cmc
fisttps
jecxz
xchg
cmc
jmp
hlt
ds
into
sti
ds
fcomip
aas
test
ljmp
xchg
out
repz
ljmp
xor
fdivr
idiv
loop,pt
aam
ljmp
iret
mov
sub
in
icebp
aam
jmp
sar
in
cmc
xlat
xor
jecxz
int3
mov
fdivrp
out
jmp
test
aam
xor
cmp
jmp
ret
xlat
int
fstp
cltd
sbb
stos
ret
jle
add
xor
in
in
ss
addl
in
xlat
ljmp
ljmp
ljmp
loop
out
mov
enter
out
xor
xor
xor
std
out
shr
std
in
shl
int3
mov
std
loope
xor
ss
aad
test
ror
repnz
cmp
stc
mov
jmp
fst
mov
jecxz
cmc
ror
xor
out
shll
sar
test
fdivr
hlt
stc
fsubr
leave
into
lret
out
nop
out
out
clc
repnz
idiv
fcmovnu
cmp
ret
in
test
cli
test
fucomi
xchg
aam
into
leave
into
cld
call
std
lock
inc
rorb
shl
nop
cld
int3
out
lret
icebp
jmp
sarb
in
icebp
ret
idiv
add
pop
in
jmp
aad
cmp
ss
cmp
add
out
fiaddl
fimull
xchg
aas
aaa
xor
out
cmp
in
or
mul
clc
rol
mov
mov
lret
leave
repnz
fcomip
hlt
lock
leave
leave
ljmp
shl
aam
in
mov
in
fsubrp
xchg
loope
loope
jmp
lret
ror
ret
ret
clc
ffree
cld
fdivr
fcmovnu
lret
decl
in
clc
shlb
lock
int
xlat
lret
lock
call
mov
mov
jmp
xor
ss
in
add
ret
iret
xlat
rol
call
stc
out
or
fcomi
shll
jmp
loope
jecxz
fmul
out
repnz
out
xchg
xlat
fiadds
test
sbb
in
fdivp
in
in
icebp
icebp
aaa
shll
hlt
clc
dec
xor
loop
sti
jmp
test
aam
int
icebp
fld
lret
aam
lret
fidivrs
out
std
icebp
xchg
shl
icebp
ret
xchg
cld
in
inc
call
icebp
aam
call
loopne
stc
sar
rcl
cmc
mov
mov
in
lock
hlt
lret
std
fcmovu
aad
loope
cmp
lret
clc
int3
test
xor
xor
in
hlt
rcl
cmp
cmp
and
fadds
fxch
nop
in
shr
nop
vcomiss
jmp
stc
shl
fld
fcomp
out
mov
mov
cs
stc
in
cli
cli
aam
sti
in
fcmovu
test
fildl
out
test
cld
call
test
repnz
div
inc
orl
out
ljmp
fadd
jecxz
xlat
aam
cmp
incb
fdivr
fcmovnu
hlt
cmc
mov
jmp
in
repnz
xchg
jecxz,pn
lret
in
call
cmc
cmc
loopne
fildl
jmp
mov
icebp
cli
iret
call
ss
cmp
cmp
shl
push
clc
ffreep
ret
mov
inc
xchg
lock
out
in
in
into
ss
aas
cmc
idiv
ds
std
cld
neg
int
rcr
push
iret
out
ror
fdiv
fptan
in
loop
clc
lock
imul
test
lret
cld
out
xchg
int3
fmul
aam
sar
xlat
cld
int3
into
cmp
leave
aad
jecxz
in
jecxz
in
aas
sub
aaa
shl
rcr
lret
cmp
cmp
in
fucomi
clc
mov
test
rcl
hlt
fldpi
lock
iret
repz
shl
ret
sarb
test
fadds
xchg
ror
stc
jmp
jmp
cmc
clc
ret
cmc
out
mov
incb
iret
xchg
cmp
aam
repz
cmc
lock
cmc
iret
xor
mov
out
fxch
sbb
out
out
cmc
ss
jecxz
aam
lock
xor
loopne
fcmovnu
loope
cli
aad
fmuls
lret
lock
repz
xor
sar
int3
stc
icebp
loopne
rolb
in
cmc
decb
cmc
repnz
out
xor
leave
not
cmp
ret
in
aam
ror
loop
loop
jecxz
fdivr
xchg
out
jmp
aaa
clc
je
mov
mov
xor
add
jmp
rol
xlat
int
arpl
mov
test
mov
movsl
add
rolb
aad
mov
aas
fmull
in
in
xor
ret
cmc
jmp
out
ret
not
ret
imul
jecxz
mov
in
test
xor
sub
cmp
loop
clc
loope
loopne
hlt
xchg
fcomip
xchg
sub
jmp
fscale
loope
idiv
into
testl
fcmovne
enter
into
cmc
aam
lret
cmc
shll
fstp
cli
sarl
fstpt
xlat
inc
cli
addl
sub
shll
jmp
fmul
and
aad
std
call
repz
out
loope
sti
ljmp
out
into
cmp
cmp
cmp
test
mov
ret
fxch
fiadds
repnz
enter
xor
shl
shr
cmp
cmp
shr
enter
rolb
iret
iret
repnz
ror
lret
cmp
lock
fcmovnbe
rol
ret
enter
out
in
std
shlb
int
enter
call
cmp
ror
filds
jecxz
fxch
loopne
in
mov
repz
jecxz
sti
cmp
fcom
loop
out
ds
popl
xor
out
hlt
xor
out
lret
cld
xlat
incl
mov
mov
xlat
cmc
in
loope
in
cmc
mov
ljmp
cmp
cmp
std
cmp
test
std
aad
in
out
icebp
std
out
mov
into
lret
enter
call
icebp
adc
in
and
int3
fmuls
out
enter
out
in
call
in
sar
shl
aad
jmp
and
out
mov
lock
jmp
xlat
hlt
aam
xor
addl
cld
cld
out
loopne
rol
jecxz
fmulp
shl
sarb
icebp
sarl
loopne
out
ljmp
sub
imull
xor
loop
jmp
fadds
call
jmp
icebp
out
aam
leave
rol
in
cmp
fcmove
cmc
add
aad
out
shl
test
lret
iret
fucomi
out
repnz
jecxz
hlt
fprem
out
int3
fmul
adc
les
jmp
nop
out
fninit
in
icebp
int
test
cmp
leave
xor
filds
icebp
aad
adc
fsubr
test
ljmp
jmp
fucomi
int3
ds
ret
fucom
add
jecxz
or
jecxz
rolb
jmp
cld
int3
ss
clc
aaa
cmc
filds
mov
incb
aad
shr
neg
fucomp
ror
shr
fnstsw
aas
rorl
out
call
ss
out
clc
jmp
repz
xlat
jecxz
shl
mov
lock
jecxz
out
cmc
lock
in
aaa
call
cli
ds
iret
fcmovu
jecxz
decl
test
mov
xor
xlat
leave
repnz
call
jecxz
xlat
ret
neg
ffree
in
leave
loope
cli
in
xchg
xchg
nop
loop
out
into
xor
int
fcomi
cmp
addl
in
in
fcomi
xchg
cs
cmc
cld
aad
out
aaa
hlt
in
cmp
repnz
aad
int
into
mov
loope
out
shr
cmp
repz
adc
mov
loopne
lret
out
mov
ror
xlat
xor
enter
out
std
repnz
cmc
sar
loope
addl
mov
int
int
cli
ljmp
fdivrs
stc
stc
icebp
cmc
fucom
fcmovnbe
in
int3
leave
sub
xchg
jmp
xor
sti
mov
sti
loop
add
sub
out
in
add
fdivp
xchg
lret
xlat
cmc
hlt
rcr
aas
fcmovnbe
test
idiv
mov
loope
sub
call
leave
lock
shl
icebp
aas
ds
aad
in
mov
loop
test
out
into
aam
fdiv
fcmovnb
cmc
repz
cmp
out
xchg
mov
int
stc
jmp
icebp
fucomp
in
int
fcmove
in
aam
mul
lock
xchg
in
enter
out
loop
mov
loope
into
ss
ror
in
cld
flds
lods
or
add
add
add
mov
mov
mov
mov
mov
mov
jmp
lret
ffree
fcmovu
sbb
jb
push
mov
lret
jle
movsl
add
enter
fisttpl
loop
xchg
aam
int3
out
fmul
shl
fcmovbe
div
cmp
rol
sarl
loop
xchg
neg
in
out
hlt
ljmp
lock
out
clc
xor
rcr
out
jmp
lret
leave
test
int
fsubrs
xor
stc
jmp
icebp
cmp
in
rcr
xlat
dec
or
stc
ret
call
shl
out
neg
std
out
sarb
lret
in
cld
fldl
ds
mov
mov
mul
mov
jmp
leave
cmp
lret
test
fsubr
in
lret
sbb
xchg
out
das
xor
sar
out
fdivp
fdivrp
repnz
ret
rol
in
out
fcmove
out
lret
fadd
loop
jmp
cmp
out
ds
out
sti
ds
fsubrp
in
test
orl
enter
cmp
in
cmp
jecxz
cmc
cli
leave
movb
shlb
jmp
clc
cmp
leave
cmp
cld
jmp
in
fildl
clc
ret
cli
xor
std
ss
stc
repz
xor
repnz
aas
test
mov
lea
mov
out
hlt
lock
out
repnz
shl
sti
int3
cld
in
sti
icebp
out
into
inc
mov
neg
out
clc
fcmovu
xchg
mov
adc
fcomi
cmp
not
xor
mov
std
lret
out
in
out
in
adcb
cmp
sub
test
decb
cld
fstl
xor
shr
cmp
ror
rcr
ss
filds
mov
lock
fstl
hlt
fst
stc
test
xchg
orl
in
hlt
aaa
out
out
cmp
iret
sti
lret
idiv
jecxz
aas
in
aad
clc
add
lret
loope
nop
ljmp
fprem1
stc
jmp
cmp
faddp
out
stc
add
lret
loopne
out
iret
in
fmulp
xchg
div
lret
int3
out
fdivr
dec
std
lds
rolb
mov
mov
out
jmp
cld
sar
shl
lret
clc
xchg
sti
std
loope
xchg
fucomip
int
fisttpll
ljmp
xor
cmc
fadd
faddl
jmp
mov
mov
test
xor
cmp
enter
fnstcw
ret
mov
out
cld
in
int3
lret
fistl
call
fxch
sarl
loop
rcl
test
nop
call
clc
int3
xor
xor
stc
out
cmp
cli
repnz
fucom
xlat
test
xchg
shr
mov
ror
call
clc
ljmp
mov
fcomp
sar
xchg
xchg
iret
out
icebp
sar
aaa
test
clc
shl
cld
fucompp
in
in
out
mov
out
aam
fnstenv
cs
cmp
lret
fcomip
sti
cmpl
test
cld
loopne
in
mov
out
cmc
cmc
ret
xor
cmp
ror
call
not
call
lret
lret
enter
lock
in
xor
ljmp
ds
lock
aas
adc
and
test
loopne
lret
in
in
shl
xor
and
test
xchg
sbb
xchg
xchg
fiadds
cmp
cmp
sti
aaa
jmp
cmp
loope
icebp
cmp
call
jmp
sti
aam
xor
iret
shr
cmp
xor
sarb
shl
fst
rcr
lret
out
nop
aam
xchg
ret
ror
icebp
aas
add
ds
repnz
rcl
mov
call
fstp
test
clc
lock
iret
leave
fdivs
cli
int
ret
iret
inc
aad
aad
sbb
xchg
xchg
in
clc
ret
aam
aaa
lret
aad
loope
test
in
mov
cli
into
lea
stc
loop
lret
ljmp
int
sti
testb
lock
orb
fdivr
aaa
xor
ss
aam
sbb
cld
orb
rorl
not
clc
lret
ror
jmp
or
xor
xchg
fstp
orb
clc
jmp
int
into
fst
das
inc
aam
mov
mov
movsl
add
mov
lret
icebp
fcom
cmp
clc
ss
ds
loope
ss
test
mov
ss
lock
fnstsw
repz
in
in
aam
and
xchg
xchg
icebp
mov
xchg
inc
lret
ss
xlat
xor
jmp
cmp
shl
orl
into
fmulp
xchg
xchg
ss
fcomp
fdivrl
std
cmp
out
loope
in
roll
loope
cmp
into
div
xor
std
ss
ds
flds
int3
fiaddl
loope
mov
sub
xor
stc
cmp
cmc
aad
cmp
out
roll
or
into
xchg
aad
xor
in
cmp
aaa
fildl
sar
in
clc
mov
test
orb
in
in
sti
imulb
out
out
icebp
lret
jecxz
into
repz
in
call
and
repnz
sti
out
aam
fnstsw
repz
jecxz
idiv
mov
out
rol
in
call
cmp
lret
ret
les
mov
fldl
int
leave
ret
cmp
aad
rol
repnz
cli
jmp
out
cld
ret
leave
rorl
jecxz
out
leave
repnz
cld
lret
ffreep
cmc
jmp
mov
popl
jmp
xlat
les
xor
shl
fcmovnbe
lock
cmp
cmp
int
lock
lret
xchg
out
xor
aam
iret
std
ljmp
cld
faddp
in
in
xchg
test
ss
ljmp
fcomip
aam
adc
lds
ljmp
rol
jmp
int
cmp
stc
sar
fdivp
loopne
loop
int3
xchg
out
jecxz
enter
xor
cli
repnz
int3
lret
ret
clc
sar
shl
or
loopne
out
int
xchg
in
xchg
jecxz
imul
jmp
aas
fidivrs
neg
out
in
jmp
jecxz
in
addb
lock
out
cmp
lret
cld
cmp
lds
loop
iret
mov
test
mov
repz
iret
cmp
repz
xlat
lock
lret
jmp
mov
jmp
int
std
xor
jmp
cld
aas
fdivp
add
mul
nop
jmp
out
in
aam
lret
out
xlat
aam
shll
lret
and
loopne
fsubp
jecxz
cmp
mov
out
int3
xchg
repnz
int3
not
stc
cmp
ffree
cld
cmp
aaa
into
aas
in
shl
jecxz
faddp
rolb
in
into
xlat
xor
shr
std
out
hlt
mov
decl
loope
mul
ret
int
shl
out
rcr
into
sti
std
into
shl
loop
call
call
iret
faddl
enter
stc
fld1
into
shl
xlat
icebp
rcl
cli
mov
fsubr
rorb
ljmp
out
stc
repnz
repnz
aas
fptan
std
hlt
loopne
stc
add
out
cld
lret
xlat
iret
xor
xlat
sarl
fmulp
int
out
jecxz
xchg
movl
xor
sti
xor
repz
addb
in
fmul
in
fdiv
leave
nop
lock
jecxz
fdiv
int3
fnstcw
aam
neg
icebp
cld
std
aas
xchg
xchg
mov
lret
nop
shlb
lret
repnz
cmp
fistpll
repz
xor
fstp
loop
out
int3
adc
ficoms
into
lret
ror
roll
in
jmp
enter
adcl
icebp
jmp
lret
fnstsw
sar
xor
in
lret
fdivrp
stc
orl
into
fxch
cli
fst
test
decb
stc
cmc
out
imul
mov
out
lock
xor
stc
fdiv
fcmovu
jmp
lret
loope
out
out
cmc
out
call
xor
cmp
leave
fdivrp
ds
xlat
ds
repnz
enter
out
loope
mov
in
loopne
into
icebp
in
iret
ss
lock
lret
neg
into
shl
sti
clc
aad
mov
or
mov
jmp
call
mov
cmp
je
mov
mov
pop
jmp
into
lret
fcmovne
into
fistpl
adcl
pop
xchg
jle
movsl
add
aaa
in
leave
lret
cmp
out
iret
xor
jecxz
xrelease
jmp
in
lds
out
cli
xor
xor
iret
rcr
sbb
xchg
testl
loope
xor
lock
cmp
cmp
loopne
cmp
out
loopne
aad
add
test
xchg
in
xor
lock
fdivr
cmp
in
cmp
cmp
aad
jmp
out
mov
xchg
xchg
into
jmp
rcr
xor
xor
jmp
aad
test
and
jecxz
aam
aad
mov
orl
ss
int
cmp
aam
cld
repnz
ds
aam
lret
jecxz
mov
lret
int
clc
not
out
repnz
cmc
repz
icebp
cmp
loope
out
aam
lea
out
and
fld
out
cmp
fincstp
cmp
aam
repnz
fdivr
clc
fcmovnu
add
in
test
xchg
mov
enter
hlt
fcom
in
aad
rcl
fdivr
fcmovb
out
loope
rcr
mov
rol
xor
aam
divl
repnz
clc
vpsubq
enter
lret
out
icebp
roll
in
call
jmp
aam
sti
repz
xlat
rcr
sub
jmp
popl
in
ss
xor
fucom
div
stc
cmc
out
test
in
dec
call
hlt
jmp
xor
repnz
aaa
bnd
cmp
aad
cli
in
sti
iret
out
fcmove
adcl
cmp
fcomi
cmp
sti
rcr
mov
loop
out
enter
call
aam
stc
cld
icebp
out
stc
fcmovne
jmp
dec
ret
int3
in
in
fildl
xor
cmp
std
int
cmp
fsubp
fnstcw
cmc
hlt
rcl
fisttpll
adc
int
jecxz
out
int
cmp
icebp
cmp
test
lock
fcmovb
hlt
test
int3
fldl
loopne
hlt
test
hlt
fcomp
jmp
sti
fadds
mov
orl
mov
ljmp
out
out
iret
imul
shl
ror
ret
call
sub
out
xchg
aam
in
ss
in
sti
div
aam
fcmovbe
repnz
mov
int3
and
lret
lock
iret
ds
cmc
int
aad
incb
cmp
hlt
xchg
xchg
xor
out
cmp
in
jmp
fcmovnb
int
cli
or
ret
lret
lock
jmp
cmp
int3
ss
not
add
or
xlat
ljmp
in
sub
shr
hlt
cmp
fdivr
loope
aad
into
fcmovu
xchg
jmp
into
test
ror
sub
xor
xor
aad
rol
and
cld
test
enter
fdivp
icebp
xlat
xor
ret
das
lock
loopne
cmp
xchg
movl
lret
int3
les
rcr
xlat
cmpb
addl
in
mov
in
out
xchg
lret
int3
rcl
neg
test
hlt
in
ret
mov
or
mov
lea
rorl
fidivrl
test
lret
sbb
xlat
iret
repz
movl
call
rcl
fcmovnu
fdivr
roll
clc
xchg
jmp
in
xchg
mov
xor
xor
loope
cmp
mov
ret
filds
xchg
in
icebp
repz
jmp
dec
in
aas
xchg
std
in
stc
jmp
int
lock
in
aaa
enter
sti
jmp
adc
jmp
ret
jmp
stc
iret
loope
loope
rcl
rcr
xor
cmp
into
sarl
cld
repz
lock
jmp
clc
fucomp
cmp
fmul
in
lock
lock
int
fdivrp
fmulp
lock
cmc
ret
or
fiadds
test
xor
in
enter
out
xor
xor
loop
mov
sar
repnz
hlt
in
jmp
cmc
enter
into
out
fcomip
std
lret
std
out
int3
iret
in
enter
xchg
shl
das
fstpt
ss
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
aad
into
aad
fst
int
loopne
mov
test
jle
cmp
sarl
aas
les
aad
fprem
test
call
out
rcr
out
cmp
cld
aad
cli
aaa
shl
jmp
loop
mov
fiaddl
mov
aaa
int
fdiv
jmp
loope
cmc
ret
out
sti
aad
xchg
mov
fmull
int
test
int
ljmp
loop
test
sarb
idivl
rorb
int3
int3
sub
rcl
call
iret
clc
cmp
mov
ret
std
lock
repz
loop,pn
cmp
aaa
xlat
add
loopne
aad
cmp
jmp
in
hlt
div
aam
out
xor
cmp
test
test
xlat
fucomp
jmp
cli
cmp
xor
sti
cmp
xlat
aam
std
sbb
aad
fcmovnu
mov
addl
xor
aad
xor
lret
in
test
xchg
ret
sub
loopne
rorb
icebp
int3
fcmovnbe
lret
rcr
int
in
fstpt
xchg
movb
in
in
test
hlt
iret
sti
aaa
cmpl
xchg
cmp
out
sub
jecxz
xchg
fdivr
call
int
lock
int3
loope,pt
cmp
loopne
orl
int
cld
xor
iret
xor
out
loope
lret
jmp
ljmp
ret
in
stc
fmulp
fcom
xchg
idiv
in
loopne
rcr
out
addl
lret
fidivl
leave
sti
ljmp
xchg
ljmp
vpmacsswd
fdiv
cmp
enter
rol
fadd
loopne
enter
shr
stc
int3
int3
xchg
leave
into
ljmp
shl
fsub
repnz
clc
addl
mov
aam
cmc
cmp
hlt
cmp
repnz
test
repz
xchg
jmp
shl
test
into
sub
cmp
std
xor
loop
lock
cmp
jmp
loop
out
int
xchg
xor
shl
cli
sti
sar
cmp
stc
aam
in
aam
clc
fcmovu
test
incb
ror
jmp
enter
iret
int3
enter
lret
rcr
aam
xor
mov
call
iret
xor
shl
jmp
testl
repnz
jecxz
int3
int
mov
jecxz
hlt
fscale
out
enter
ret
stc
loopne
loope
fcomp
out
mov
mov
test
int3
int3
ror
cmp
rcl
cmp
enter
jmp
lret
out
rol
rol
hlt
lret
cmp
sti
xorb
mov
jmp
fnsetpm(287
in
loop
call
cmc
xlat
bnd
in
int
aad
cmp
testb
mov
xchg
loopne
loopne
dec
loop
out
into
cmp
out
cld
cmp
int
dec
ret
ret
aas
out
faddp
mov
lock
fst
aam
aad
clc
cmc
out
mov
addl
fmul
nop
test
roll
hlt
fcmovne
out
in
faddp
not
frstpm(287
fcmovnb
stc
loope
std
lret
xchg
mov
xchg
xchg
lds
xor
cmp
sar
jmp
mov
adc
ret
lret
out
repnz
cli
xor
sti
loope
sbb
xchg
repnz
ljmp
jmp
mov
hlt
cli
cld
cmc
xlat
fcomip
test
out
mov
lret
enter
mov
imul
cmc
in
repz
fchs
loope
aam
repnz
aad
mov
ret
idiv
into
out
xchg
xor
sarb
shl
shr
int
xlat
ret
fcomi
cli
std
mov
in
out
ljmp
cld
icebp
aam
iret
hlt
ds
sti
xchg
jmp
in
jmp
jmp
cmc
enter
xor
cld
fcomip
test
fdivp
xchg
jmp
cli
jecxz
std
cld
int3
enter
xor
aad
out
sti
dec
repnz
shl
in
ror
flds
jecxz
hlt
mov
mov
and
mov
mov
sub
xorl
mov
sbbl
push
mov
xor
movl
cmp
movl
je
sbb
jmp
rcl
rcl
rcl
aad
xchg
stos
gs
stc
and
pushf
jle
xchg
add
xchg
rol
xor
cli
xlat
xlat
in
loop
hlt
icebp
rcl
aad
decl
shr
mov
jmp
repnz
sti
fsub
bnd
call
fcmovu
call
rorl
in
call
cmp
std
rcl
xlat
repz
in
loop
std
test
mov
cmc
hlt
ret
stc
cmp
lret
ror
fdivr
icebp
in
ss
fadd
xchg
movl
in
xchg
out
shr
lret
fucomi
std
lock
shr
into
aaa
sub
neg
cmp
loope
jmp
divl
test
fsubr
aas
jmp
add
fsubr
sti
fcmovu
fdivr
mov
roll
ljmp
xlat
in
loope
xacquire
into
mov
fsubr
xchg
lock
shl
out
shl
out
in
jmp
add
jecxz
cmp
fcmovne
in
out
fdivs
out
lock
ljmp
aam
clc
fdivr
out
jmp
loopne
iret
icebp
cmc
sub
leave
xor
int3
repnz
loope
in
sar
in
in
lock
test
out
shr
cmc
stc
hlt
aam
sti
aaa
loop
out
cmp
mov
loope
out
leave
int3
in
loope
xor
sti
ror
cmp
ror
fcomi
repnz
jmp
repz
in
fcmovnu
in
leave
cmc
aad
hlt
cmp
iret
test
cli
enter
xchg
fsub
mov
loop
in
in
into
aaa
not
aad
repnz
cmp
aad
aad
enter
test
fsub
into
jmp
cmp
aad
incb
rol
cmp
popl
ljmp
shr
idivb
roll
fstp
xchg
test
movl
loop
xor
cmp
dec
mov
out
clc
incl
out
mov
cmp
sti
fdiv
shlb
lret
fnstsw
test
out
test
out
mov
not
int3
repnz
cmp
aam
into
rol
loope
out
ret
aas
addb
out
rcl
aaa
xor
not
cmp
cmp
out
out
cld
ds
sbb
test
jmp
fists
enter
test
lock
out
ret
fsubr
and
in
or
repz
xlat
sub
out
cmc
iret
rcl
int3
in
rcl
rcl
cli
inc
jecxz
in
mov
mov
mov
fcmovne
idiv
cmp
cmp
fadd
sti
cmp
jmp
std
in
jmp
cmp
xor
fsub
in
cmp
lds
div
mov
cmc
hlt
ror
aam
xor
cmp
sti
filds
stc
ljmp
pop
fld
out
aad
int3
lret
hlt
in
repnz
iret
cli
mov
out
lret
xchg
in
shrl
ror
shr
cmp
xlat
fsub
in
in
sbb
mov
in
xchg
call
jecxz
repz
sub
fcmovne
loope
fcmove
into
loop
mov
cld
mov
loopne
loopne
fsubr
cmc
in
sub
lret
roll
sti
jmp
call
shl
mov
adcb
cmp
ror
int3
cmpb
cld
out
mov
hlt
aad
adc
into
out
mov
xor
cmp
fcmovbe
aad
shl
clc
aad
test
loopne
in
lds
out
enter
hlt
int3
fucomp
jmp
fstp
out
icebp
aas
cmc
hlt
in
fiaddl
repz
xor
hlt
iret
shl
shr
sbb
rcl
sarl
adc
in
dec
fadds
int
ss
jmp
lret
aas
faddp
xlat
in
repz
clc
jmp
sbb
mov
mov
out
xor
lret
ret
frstpm(287
cmp
in
sti
int3
shl
in
icebp
xchg
adcl
aam
cmp
lret
test
rcl
inc
cli
mov
loop
mov
enter
rol
divb
aam
std
lret
loope
rolb
jmp
mov
sbbl
mov
andl
sub
addl
xor
movl
cmp
jne
adc
mov
sbbl
jmp
enter
int
int
repz
mov
jle
xchg
add
mov
call
sti
xor
incb
jecxz
hlt
aam
cld
mov
rcl
shl
call
loop
out
out
in
cmc
icebp
aad
cmp
int3
loop
fprem
rorb
leave
stc
in
lret
clc
enter
xlat
cmc
cld
cmp
cli
cld
cmc
ret
xlat
in
add
jmp
incb
shl
xor
ljmp
cli
neg
fsub
orb
xchg
in
in
jmp
lock
sar
in
clc
test
enter
and
test
test
loope
sub
out
cmp
cmp
fdiv
loopne
out
aam
repnz
lret
in
fcos
cld
mov
ror
out
repnz
leave
cmp
xor
hlt
ror
rcr
out
fsub
test
lret
lea
rol
into
aad
icebp
xor
cli
lock
in
loop
cld
fcmovu
mov
int
test
shr
in
sar
test
clc
fiaddl
ror
jmp
mov
ret
cld
fpatan
xor
cld
sarl
sarl
out
repz
rol
out
aam
leave
aad
out
out
icebp
fadd
addl
sti
mov
incl
enter
fidivrl
enter
rcl
test
shl
sarb
ffreep
std
loope
out
roll
stc
sub
xor
ds
cli
clc
shr
lret
mov
xor
cld
jmp
rclb
xlat
in
idiv
cli
out
fdivp
cmp
ret
loope,pt
mov
lret
fisttpl
in
dec
les
sti
test
out
in
loope
aam
rol
ds
testl
iret
cmp
xor
ss
stc
fnstcw
fdivrs
jmp
enter
in
in
in
iret
shr
xor
jmp
loop
iret
cli
sar
mov
test
fsub
fimull
in
icebp
clc
repnz
out
xlat
xlat
ljmp
fsub
xlat
repnz
cmp
incl
repz
repnz
icebp
hlt
iret
cmp
or
test
fldl2t
mov
test
popl
cli
shl
lds
aaa
aad
out
cmp
incb
fiaddl
mov
iret
aad
sar
jmp
lret
ljmp
iret
rol
icebp
mov
iret
call
hlt
jmp
stc
shlb
shl
fst
hlt
icebp
div
cmc
sti
stc
in
cmp
icebp
or
imul
out
ss
std
cli
rcr
fstpt
incb
nop
jmp
mov
out
std
in
iret
cli
mov
test
adc
lock
aad
fcmovu
out
ljmp
stc
loopne
mov
filds
rcr
rcll
jmp
cmp
cld
repnz
fstp
out
ret
int
mov
lret
out
enter
fdivrp
ffreep
ret
rol
stc
ror
jmp
xchg
in
aam
loope
fsqrt
div
iret
cli
or
loop
mov
mov
loop
fstl
call
loopne
stc
fildl
incb
leave
lret
lret
int
in
ror
xor
cmp
stc
cld
cli
les
ljmp
fcomp
out
out
aad
repz
aam
into
fnstsw
jecxz
enter
xchg
mov
out
fdivs
icebp
stc
cmc
test
hlt
aas
loope
aam
ret
mov
call
or
jmp
in
test
in
cli
std
shl
out
aas
cld
repnz
fxam
loopne
mov
jmp
sub
fdiv
ds
shlb
mov
mov
jecxz
mov
jecxz
lock
xor
cmp
jmp
clc
aad
fsubp
leave
repnz
into
adcl
out
into
cmp
aas
xlat
call
std
in
fisttps
xchg
lock
xor
cmp
loopne
cmp
in
filds
add
jmp
mov
xorl
xor
add
adcl
mov
sbb
mov
andl
xor
subl
jmp
rol
aad
aad
aad
leave
mov
das
int
jle
xchg
add
into
cmc
enter
jecxz
ror
ljmp
icebp
enter
xor
fst
in
ljmp
ror
fsincos
rorb
xchg
xor
int
sbb
shl
ss
in
lret
jecxz
cli
call
aad
cmc
sar
sti
addb
sti
aad
stc
shl
fsub
into
xchg
in
cld
loopne
into
aas
ljmp
sar
rcl
rol
mul
mov
jecxz
loop
cmp
fcomi
mov
cmp
clc
iret
ljmp
in
lock
call
int3
in
nop
xchg
into
icebp
into
iret
leave
xor
ljmp
test
fcmovnu
ret
sti
std
xchg
mov
adcl
fcom
out
aas
sarb
incb
in
addl
xor
das
lret
int3
xor
aaa
iret
in
out
out
cmc
repz
cmp
fsubr
xchg
sbb
mov
jmp
out
fsubr
repnz
sti
ljmp
fld
shl
fadd
xchg
mov
fxch
xchg
aad
xor
shl
enter
repnz
stc
into
fcmove
iret
out
cmp
sti
loope
mov
cli
enter
and
out
ss
fdivrp
enter
hlt
hlt
iret
loop
fsub
out
mov
jmp
aad
div
stc
hlt
ljmp
addb
fsubp
in
call
loop
repz
hlt
fsub
cmp
shl
fistpll
adc
icebp
call
sbb
aad
int3
mov
out
xchg
aaa
bnd
sarl
cli
sti
cmc
out
sti
cmp
call
test
std
in
out
shl
rol
sti
test
loope
repnz
cmp
aam
jmp
jmp
xchg
ss
repnz
loopne,pt
xlat
shl
fdivp
fscale
loope
test
xchg
xchg
hlt
iret
hlt
lock
into
icebp
cmc
iret
leave
hlt
sti
repnz
iret
cli
cmp
loope
incl
in
out
hlt
mov
aad
cmp
in
cli
in
fld1
shl
ret
aas
out
cli
and
std
shr
repz
out
icebp
test
aad
cmp
fdivrl
cmc
ret
in
loope
stc
clc
jecxz
popl
int3
les
divl
cmpb
xlat
sbb
mov
jmp
xchg
loopne
sub
repnz
in
ljmp
ret
shl
jecxz
testl
enter
lock
cld
fcom
enter
ret
repnz
aam
in
out
int
in
jmp
cmc
jecxz
stc
cmp
fdivl
cmpb
xlat
ljmp
fimuls
icebp
repz
int
rcr
aad
idiv
cmp
repnz
cld
testl
sub
cmp
out
lret
cmp
fdiv
aas
roll
int3
out
in
out
int3
hlt
cmp
ror
sarl
out
std
loopne
cmp
in
shl
xlat
sti
clc
test
sub
mov
cmp
cmp
in
in
into
rol
xor
out
ds
sub
mov
in
stc
xor
out
cmp
fdiv
in
aad
enter
out
loop
jmp
repnz
icebp
jecxz
out
in
in
out
repnz
repnz
shr
cmc
in
mov
into
ljmp
xchg
ljmp
xor
sti
cmp
into
cld
fiaddl
mov
fcmovu
and
mov
adc
xor
out
in
fcmovne
sarb
cmp
mov
loopne
leave
enter
icebp
xchg
rorl
cmp
repnz
fxch
aaa
ljmp
leave
aad
in
sti
jmp
stc
in
pop
iret
xchg
into
int
jmp
int3
xor
shl
addl
lock
rorb
leave
div
fnstcw
out
cli
rcr
mov
fdivrp
repz
cs
fcmovnu
cmpb
sarl
aas
xchg
fucomi
in
cli
jmp
test
jmp
bnd
int3
lret
cld
out
ret
test
loope
xlat
xchg
leave
out
add
lock
rol
xor
int3
aad
ret
sub
jmp
and
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
mov
xor
mov
jmp
into
int
fstp
aam
or
and
gs
jle
fdiv
hlt
out
ret
in
out
xor
enter
rcll
fdivl
aam
cmp
rcl
out
sti
jmp
filds
shl
not
call
imul
into
aad
rcr
cld
cld
aad
mov
stc
fmull
aam
ret
rcl
mul
jmp
lret
xor
std
out
aam
in
icebp
ficoml
in
in
enter
fcmovnu
out
shl
rol
stc
repz
ljmp
mov
xchg
loopne
les
cmp
lret
cmp
leave
into
loopne
fadd
sar
aas
les
and
in
mov
xor
call
repnz
aam
cld
not
test
in
int
jmp
loope
das
in
into
stc
out
int3
ror
cmp
rcr
in
xchg
xchg
xor
std
xchg
fdiv
int3
in
out
jmp
cld
cmc
jecxz
rcl
repnz
hlt
loopne
iret
in
shl
mov
xor
xor
in
shl
enter
fprem1
cmp
enter
xlat
ljmp
shr
rol
int
sti
sbb
loopne
cli
iret
jecxz
hlt
add
sti
loopne
jecxz
xchg
xchg
aad
aam
cmp
int
xlat
fucomip
repnz
in
lock
cmp
call
leave
shl
sub
xor
cmc
cmp
ret
xchg
fsub
sub
test
mov
in
xchg
icebp
in
lock
enter
lret
rol
rol
fiadds
xlat
call
rol
mov
ret
lret
xlat
in
in
shl
loope
stc
aad
sbb
lret
mov
fcomi
in
ror
sub
lret
cli
into
aad
in
ds
std
cmp
test
in
mov
test
aam
xor
fnstenv
shl
repz
cmp
jmp
test
cld
aad
cli
fdivrp
jmp
xchg
xchg
xchg
lret
in
not
shll
sar
cmp
aad
out
incl
mov
stc
in
mov
loopne
aaa
xor
in
stc
cmp
aas
lret
fsubrp
xlat
shl
call
mov
loopne
int
shl
orb
cli
fxch
ss
repz
repnz
hlt
loop
ljmp
ret
fsub
cmc
out
fsincos
repz
std
out
iret
cmc
mov
fdivp
fisttps
jmp
enter
repz
in
sarb
lock
std
cld
sbb
enter
in
cld
int3
mov
jecxz
rcl
leave
leave
ror
hlt
shr
aad
aam
sar
ds
orb
out
jecxz
xchg
ret
cmp
out
ret
xor
cmp
fcomi
iret
adc
mul
ret
cld
loopne
out
in
int3
xchg
call
aad
ror
test
sarb
loop
out
ds
mov
jecxz
jecxz
xchg
xchg
iret
std
out
cs
int3
aad
out
cmp
cmp
xor
loop
into
cmp
roll
xchg
in
mov
aam
lret
repnz
cld
in
aad
xchg
ret
fcompp
jmp
in
icebp
jmp
xlat
aaa
enter
fmulp
call
int
rol
ret
cmc
cld
cmc
addl
shl
neg
into
in
in
xor
loope
test
not
enter
stc
mov
hlt
jmp
aad
out
lock
rcl
cmp
into
out
fdivp
test
leave
out
leave
cld
stc
out
mov
xor
sarl
hlt
in
in
or
fstpt
fcmovnu
mul
ljmp
fisttpll
fildll
enter
xlat
aad
cmc
aas
fdiv
in
in
fmul
test
fcmove
adc
lds
int3
fidivrs
addl
jecxz
jmp
mov
test
xor
xlat
aaa
in
icebp
xor
cmp
sbb
sti
jecxz
test
int
mov
hlt
aad
iret
cmc
aaa
sti
lock
div
rol
idivb
vpsubw
in
ret
xchg
rcr
out
sub
ss
in
cmp
cmpl
loope
out
mov
int
popl
test
ret
int
hlt
mul
rcl
test
call
imul
in
int3
in
test
icebp
mov
and
jmp
leave
rol
ret
int
cwtl
stos
cltd
fs
scas
jle
xchg
add
call
enter
in
cmc
aam
repnz
xlat
in
test
mov
cli
jmp
orb
into
fsubr
shr
call
cmc
loopne
cmc
imul
cli
out
mov
fcmovne
lret
aad
int3
out
sti
fstpt
sar
out
in
sarl
mov
mov
std
lret
mov
icebp
mul
shll
int
in
sar
out
fcmovnbe
rol
iret
ret
xor
jecxz
out
mov
icebp
fsubr
jmp
les
mov
loope
in
in
ret
out
int
bnd
lret
repz
out
ret
jmp
loop
fdiv
loope
pushl
cli
iret
out
ds
int
fabs
fsub
enter
and
fcmovnb
xchg
or
aaa
hlt
idiv
out
xor
icebp
loop
cmc
cmp
in
fchs
mov
shr
out
into
repz
jmp
ss
sar
in
sti
loopne
xlat
sub
out
call
aam
fdivr
hlt
cmp
aad
rcl
rcr
out
lock
faddl
mov
lret
test
loop
loop
in
int3
ror
lret
cmp
fcmovu
fdivr
test
xchg
in
loop
mov
loope
fcmovu
fdivr
aaa
fdivr
cld
hlt
lock
cmc
fisttpll
std
into
icebp
xchg
out
cmc
call
cmp
xlat
cmp
fcmovu
sarl
fstp
ret
mov
test
mov
clc
mov
int3
into
enter
jmp
roll
jecxz
stc
rolb
xchg
in
sbb
rcl
cmp
repnz
jmp
sti
ret
jecxz
xchg
out
fsubr
ljmp
adcb
hlt
xor
shl
iret
flds
cmc
jmp
out
sti
mov
repnz
fcomip
imul
iret
cmp
cmp
sarl
in
and
rcr
ljmp
cld
in
rol
imul
repz
fcmovnbe
std
aad
cmpb
cld
int3
xlat
jmp
jmp
in
out
das
fcmovnbe
cmp
ss
in
shr
ret
push
roll
addb
aad
ror
xor
ljmp
repz
ds
rolb
cli
lock
in
aas
in
ror
xor
repnz
in
repnz
ret
or
repnz
out
xchg
cld
nop
iret
icebp
out
xchg
ss
in
ret
cs
cmp
shl
jecxz,pt
sub
fadd
loop
out
in
repz
fnstsw
iret
ss
sub
sarb
imul
loope
loopne
cmp
clc
int
mov
out
mul
sti
lret
test
leave
call
fmulp
aas
aaa
adc
loop
loop
fists
mov
mov
jmp
ljmp
test
std
jmp
jecxz
loop
xchg
mov
xchg
out
aad
aad
cmp
out
div
out
std
int3
xchg
fdivrp
in
hlt
int3
test
mov
nop
xlat
ret
iret
ljmp
sti
fdiv
stc
loop
in
clc
aad
jmp
stc
mov
cmc
dec
xor
iret
xor
fstpt
aaa
neg
cmp
cmp
stc
lock
and
nop
mov
xlat
lock
jmp
stc
shr
test
fisttpll
ljmp
enter
shr
repnz
cmp
sti
aas
faddp
cmp
sbb
loop
xchg
loope
sti
clc
cmp
int
idivb
ret
fmul
lret
in
in
mov
xchg
into
xchg
xor
xor
shl
xlat
or
lret
int
ret
mov
loope
std
mov
in
out
and
fcmove
ljmp
sar
sbb
in
lock
loope
xchg
in
in
hlt
cli
idivl
repz
xlat
cli
aam
cmp
std
stc
mov
ljmp
fldl
cld
cld
cmp
fsubr
cmp
rcr
testb
iret
loopne
ljmp
cli
lock
cmp
sti
cmc
faddp
mov
loopne
ret
enter
xchg
repz
lret
out
stc
rcr
fcomp
rcl
roll
sbb
pop
ret
push
mov
sub
adc
jmp
rol
lret
iret
fcmovnbe
fcmovb
addr16
push
and
jle
add
mov
icebp
in
call
out
ror
fstpt
sar
rcr
rcr
ror
repnz
fiaddl
stc
mov
roll
out
repz
stc
into
int
ds
in
in
add
in
mov
test
in
jmp
fmul
in
ret
lds
orb
add
jmp
xchg
das
fdivr
cli
cld
int3
shr
cmp
in
ret
in
movl
fistl
shr
aad
in
repz
cli
enter
in
aam
test
std
loop
in
fildl
lret
lret
xor
xor
add
xor
xchg
loopne
sti
out
in
mov
xchg
mov
cld
xor
aaa
lock
out
fmuls
out
out
fucomp
icebp
iret
das
iret
not
rol
shl
fadd
test
test
rcr
sbb
mov
lock
lock
out
jecxz
ret
in
cli
sub
cmc
fstp
xchg
ret
cld
lret
out
fiaddl
jecxz
in
aaa
cmp
icebp
lret
std
std
cli
inc
xchg
loopne
fcmove
ljmp
xorl
stc
repnz
lret
icebp
ljmp
movl
xchg
out
xchg
loopne
shl
rcl
cmc
int
repz
clc
fst
test
test
fldl
fists
xchg
out
enter
jmp
ror
ljmp
repnz
enter
mov
xchg
xchg
shl
xchg
mov
ret
loop
hlt
ss
sar
and
icebp
cli
out
fucomip
in
mov
aam
das
jmp
fcom
cli
cmp
cmpl
cld
jmp
shl
lret
fmuls
out
repz
jmp
jmp
clc
lret
std
rcr
fdivr
aas
icebp
sub
addb
lock
loope
imul
cmp
cmc
shlb
loope
ffreep
roll
jmp
iret
xchg
out
shl
fsub
xor
sar
sti
repz
jecxz
xlat
jmp
xchg
in
roll
fcom
enter
rcl
pushl
ror
mul
aam
rcr
leave
mov
icebp
xchg
aaa
leave
fdivr
sarl
hlt
aaa
lock
ret
loopne
mov
mov
out
rcl
xor
into
hlt
out
repz
aam
into
cmp
test
cld
adc
out
fsubr
fld
clc
repz
lock
xchg
in
les
lret
icebp
cmc
idivl
in
fdivr
xchg
jmp
nop
mov
enter
out
fmul
hlt
ret
fdivrs
aad
in
fimuls
call
out
into
fstpt
aad
repnz
int
jmp
out
or
sar
in
ss
xlat
int
cld
shl
shl
fucomp
xlat
enter
out
into
icebp
loop
lea
mul
out
out
aad
fprem1
in
ret
shr
addl
ljmp
aad
into
xor
xlat
xor
rcl
fsub
ds
ljmp
icebp
fmul
out
loope
fdivs
lret
fdivr
cli
repz
test
aad
in
lret
mov
fdivs
fdivr
jmp
loop
add
and
enter
jmp
into
stc
icebp
xor
cmp
repz
les
mov
test
int
iret
cmp
aam
test
jmp
jecxz
test
nop
repz
into
clc
fsub
in
into
leave
out
aaa
lret
cmp
or
cmpb
mov
in
incl
shr
sti
xlat
stc
idivb
add
test
call
sti
out
fsubp
out
aad
in
cmp
clc
shr
test
call
or
add
add
add
inc
mov
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
xor
adc
mov
add
mov
sbb
mov
jmp
int
lret
int
and
push
mov
jle
add
jmp
loop
int3
out
xchg
hlt
iret
repz
ljmp
xlat
xchg
roll
iret
addl
ret
sti
cmp
out
idiv
loop
out
out
shl
jmp
call
repnz
mul
rcr
jmp
std
jmp
fcmovb
in
fucomi
xchg
std
icebp
fdivp
cmc
out
shl
repz
shlb
cmp
std
in
loopne
cld
loope
into
loop
in
rorb
call
cmp
int3
loop
hlt
rol
test
leave
loop
in
fsubp
stc
mov
in
repz
xor
in
or
lock
std
test
xlat
test
jecxz
out
loope
add
shr
out
cli
lret
sbb
repnz
ret
ljmp
cmc
not
xor
int3
fnstcw
into
int
aam
cmp
fnstsw
rcr
and
fimuls
xchg
jecxz
mov
lock
cmp
out
aam
aad
std
cmp
sbb
cmp
mov
repnz
fmull
mul
leave
aad
fdivrp
ret
aas
test
icebp
sti
hlt
aam
neg
mov
lret
xor
nop
in
int
in
in
fcmovne
sbb
std
sbb
into
jmp
loope
jmp
rcr
jmp
ret
fmuls
lret
enter
xchg
in
rcl
ror
xor
stc
shll
iret
in
aas
leave
test
fldl
orl
in
fdivrs
cld
neg
in
icebp
mov
leave
mov
sti
test
fsubr
test
int3
faddl
shll
in
out
repnz
xor
iret
idivb
into
cmp
aas
int3
loope
jmp
int3
iret
mov
out
cmp
aas
lret
in
sti
xlat
cld
xchg
fdivr
lret
lock
repnz
cmp
jmp
icebp
not
std
jecxz
cmc
mov
leave
mov
sbb
ljmp
fcmove
cli
cld
dec
lock
lock
shl
neg
int
decl
loopne
xor
lock
repnz
adc
out
call
out
stc
xchg
fucomip
loopne
repz
lock
cmp
fucomip
aam
clc
lock
orl
iret
int3
xchg
ret
enter
aam
in
aad
xlat
cmp
clc
repz
cmc
jmp
in
enter
xchg
test
cmp
xor
in
ljmp
loope
stc
aam
mov
fadds
iret
xchg
repz
cmc
loope
std
int3
loope
bnd
loop
loope
into
fmul
loop
loopne
fimuls
lock
in
add
rcr
fcomp
mov
ljmp
nop
in
mov
lock
out
cmc
cmp
idivl
hlt
fsub
cmp
leave
dec
add
test
xor
les
cmp
fcmovu
fcomip
loopne
xlat
cmp
fdiv
fdivr
mov
lock
in
xchg
repnz
fidivrs
loopne
repnz
std
fsubr
aas
enter
jecxz
fmulp
leave
jecxz
sbb
xlat
int
ret
aaa
in
cmp
std
sar
cld
fsqrt
add
mov
into
nop
repnz
aaa
out
cmp
cli
fcmovnu
fsub
ds
fadd
xlat
cmp
fucomp
in
testl
repz
call
in
in
hlt
into
cld
fmuls
fsub
ljmp
cmc
int
jmp
fmulp
idiv
rcr
into
loop
iret
ds
inc
in
decl
orl
iret
sarb
stc
cld
jmp
clc
sti
sar
cld
loopne
test
std
ljmp
xchg
aaa
sub
cmp
fsub
out
sar
rcr
cmc
jmp
decb
shr
enter
ljmp
test
incb
loope
loope
movzwl
xor
mov
xor
xor
mov
sub
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
ret
ror
rcr
fnsave
xchg
sti
mov
mov
jle
mov
mov
icebp
not
hlt
int3
cld
cmp
jmp
aad
fldl2t
test
ret
testl
xlat
clc
fdiv
das
out
cmp
cmp
repz
filds
call
idiv
aad
lret
call
cmp
cmp
incb
in
sti
loope
test
cli
test
ljmp
lret
imul
jmp
cmp
in
addl
lock
into
mov
out
cmp
in
stc
fdivrl
loop
fcomip
lock
ljmp
lret
lock
sar
fdiv
xor
inc
hlt
fnstsw
out
call
addb
xor
enter
ss
fidivrs
cmc
repz
test
jmp
shr
call
das
iret
into
fcmovbe
in
loopne
xlat
cmp
ret
stc
inc
idiv
in
les
out
int3
xchg
leave
cmp
mov
iret
cmp
clc
cmc
not
in
mul
out
xchg
lret
lret
in
in
aad
enter
into
cld
ss
cmp
rcr
cmc
std
hlt
fcmovnb
xchg
test
out
ror
int
lret
xor
cli
fcom
lret
fdiv
add
sub
xchg
out
mov
xchg
clc
xor
aad
xor
int
jmp
clc
cld
out
icebp
add
sbb
incl
repnz
ljmp
loope
repnz
fdivrs
mov
ljmp
xorb
repz
cmp
xor
stc
rcr
sbb
test
jecxz
cli
out
int
int
loopne
rorl
aaa
fnstcw
sub
shl
cld
rcr
mov
clc
idiv
fiaddl
lret
mov
xor
out
sar
fld
repz
not
lret
std
lds
xor
out
aaa
aad
in
aam
int
cmp
rcr
sar
sbb
jmp
aas
cmc
lock
cmc
cmp
icebp
aad
aas
cmp
repnz
loope
out
pop
lret
jmp
hlt
jecxz
hlt
ljmp
in
cli
push
in
mov
in
mov
nop
out
xor
nop
test
repnz
stc
fidivrs
sar
int3
xchg
aam
aad
dec
mov
leave
and
int3
int3
loopne
not
clc
xor
jmp
lret
int3
cmp
loopne
flds
loop
xchg
hlt
repz
cmp
ljmp
int3
loope
sarb
repnz
enter
mov
in
call
shr
cmc
jmp
int3
cmp
int
and
hlt
leave
mov
fcmovnu
mov
jmp
jmp
enter
stc
cmp
ds
shl
aas
repz
fadd
or
clc
or
roll
loope
cmp
repz
aam
hlt
addl
in
loop
rcll
clc
icebp
aad
iret
xlat
aad
xlat
in
xchg
aad
idiv
test
test
enter
loope
in
fcmovu
std
loop
fst
clc
faddl
xchg
xor
xor
cmc
out
cmp
lret
ret
std
out
and
aas
mov
aam
lock
in
test
xor
sar
icebp
call
leave
mov
in
decl
xor
into
hlt
cmc
cmp
cmp
xlat
in
ret
shl
rcr
jecxz
xchg
out
repnz
cld
out
out
cld
leave
cld
ret
icebp
iret
aas
sti
xchg
out
fcomp
jecxz
leave
test
xor
lret
xlat
lret
stc
lock
mov
xchg
fimuls
lret
out
lret
fucomip
idivl
ret
sti
cmp
out
xlat
fst
loopne
fidivrs
test
in
loop
in
sti
xchg
mov
not
in
rcl
fldl2e
xor
in
cmp
cmp
test
out
shl
mov
jmp
xlat
rcl
fxch
fxch
jp
cmpsl
ljmp
jle
add
mov
out
jmp
iret
loop
in
int
cmp
jmp
ds
in
test
cli
cmp
movl
out
fcmovnbe
ss
xor
stc
stc
xlat
hlt
out
fmulp
xchg
lock
int3
fsubr
filds
fucom
jecxz
fcmovnb
hlt
out
out
cld
loop
in
out
shlb
mul
repnz
aad
cmp
cmp
in
aas
decb
idiv
iret
sti
nop
mov
icebp
lds
cli
cmc
out
xor
fcomip
aaa
out
adc
jecxz
aad
xlat
test
out
int
xchg
test
in
lret
iret
in
out
out
loopne,pt
neg
fcomip
xchg
xchg
in
lret
lock
fbstp
loopne
cli
ret
aaa
xor
cmp
stc
fbstp
jmp
loope
xlat
rol
xchg
test
mov
call
aad
hlt
aad
icebp
out
in
ret
test
mov
xchg
mov
xor
repnz
aaa
fidivrl
aaa
jmp
rolb
cmc
loopne
test
xor
cmp
cmc
cmp
fdivr
rcr
iret
incl
loop
test
mov
xchg
fcomip
xchg
lea
in
icebp
xlat
clc
in
test
jecxz
fdivrp
xchg
mov
iret
cli
xor
aaa
loope
loope
repnz
test
cld
loop
incb
lock
std
xorb
call
aaa
icebp
clc
fucom
aam
sbb
fldl2t
enter
inc
cld
icebp
fcmovnu
int
cmc
rol
rcr
das
cmp
cld
loope
repnz
enter
fisttpll
iret
repnz
xor
jmp
xor
rcl
incb
fildl
test
imul
iret
hlt
rol
cli
cli
lock
repz
jecxz
jmp
leave
in
pause
xor
out
into
in
cli
fdivrl
cmp
cmp
and
clc
icebp
mov
in
xchg
shll
idiv
cmc
xlat
std
cmp
ds
in
adc
xchg
int
mov
out
xor
rcr
jmp
int3
lret
cmp
loop
lock
div
lock
loopne
mov
stc
incb
test
jmp
fxch
idivl
aad
and
shl
int3
ljmp
jmp
jecxz
hlt
xor
cld
int3
aad
incb
fisttpl
in
addl
loop
fidivrl
call
out
cmc
ds
iret
inc
leave
test
fildl
repnz
lret
in
cmp
cld
flds
add
fimuls
in
ret
cmp
ljmp
xchg
in
mov
ret
fcomp
in
xchg
shl
shlb
shlb
jmp
std
dec
cmp
jecxz
cld
or
leave
in
ljmp
lret
in
aas
idivb
ds
in
mov
loop
in
lret
xchg
jmp
xchg
lock
cld
aaa
int3
fcom
fdivp
loop
rcl
loope
fcomi
sbb
call
xchg
lret
into
ror
iret
xor
leave
idivb
into
shl
loop
and
lret
out
stc
in
fisttpll
lret
ljmp
cmp
test
addl
into
imul
repnz
int
cmp
lret
cmc
cmp
ret
div
loop
out
fdivrp
sti
adcl
int3
not
cli
cmp
add
fimull
xchg
in
cmp
cmp
enter
incb
cld
mov
jmp
mov
and
iret
xor
cld
shr
idivb
shl
fdivp
sarl
testl
xor
xor
not
push
shl
loop
neg
leave
int3
fdivp
fimull
cld
bound
adc
add
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xor
add
mov
add
mov
mov
xor
subl
jmp
sarb
into
rcl
ror
add
jmp
cwtl
movsl
mov
jle
add
lock
iret
aad
enter
out
xlat
lock
sti
loop
test
jmp
fisttps
xchg
xchg
aam
sub
jmp
xor
cmp
fsub
lret
stc
in
ljmp
repnz
xlat
cmp
cli
call
lock
lock
not
loope
out
xchg
iret
xchg
rolb
ljmp
stc
stc
jmp
xlat
loop
xchg
dec
stc
leave
popl
test
leave
aad
in
ds
ror
icebp
xor
addb
mov
in
push
xchg
lret
aaa
xlat
in
out
fdivr
out
ss
loopne
loope
jmp
addb
cmc
out
call
xor
loop
out
shl
ret
fld
mov
out
repz
shl
shl
fsin
leave
int
into
jmp
loop
test
neg
xchg
xchg
xchg
hlt
out
enter
cld
call
cmp
iret
cld
cmp
mul
loopne
fimull
fst
shr
xor
cmp
aaa
clc
out
std
ljmp
idiv
fdivp
aam
stc
enter
xchg
mov
xor
cld
aad
jmp
fdivr
into
loope
cmp
fcmovu
aad
jecxz
out
adc
xchg
aad
ss
sarl
xor
aad
add
sbb
xchg
call
cmp
lret
fdiv
sub
lock
in
lret
in
test
call
cmp
shr
jecxz
icebp
cli
test
xbegin
mov
out
in
aam
jmp
adc
out
in
cli
jmp
in
int3
loopne
sar
rol
in
shlb
cmp
xor
mov
into
out
out
jmp
test
xor
lret
shr
into
cld
in
ret
ffree
ror
lea
xchg
in
shl
lret
xor
ss
leave
filds
xlat
sar
xchg
fiadds
jecxz
filds
in
leave
jecxz
clc
stc
icebp
fstpt
incb
leave
dec
in
jecxz
mov
nop
jecxz
aam
in
aad
out
aaa
mul
int
rcl
not
stc
test
loope
test
aam
rol
xlat
xor
cmp
jmp
cmp
iret
sbb
fistpll
loopne
call
in
cmc
push
int3
fprem
out
cmp
ret
ret
les
aam
fldl
xchg
out
std
shl
loop
lret
cmp
leave
lock
cmc
ret
cli
sti
jmp
in
out
icebp
xchg
jmp
ljmp
test
call
lret
loope
test
fcoml
out
icebp
leave
lock
fmul
cmp
int3
jecxz
out
test
jecxz
out
nop
int3
shr
out
out
xorl
xor
cmp
ljmp
lock
stc
in
in
jecxz
sub
jmp
neg
ljmp
xchg
orb
mov
clc
repnz
cmp
into
in
fsubp
les
in
sti
mov
mov
ret
in
cmc
cmp
stc
addl
mov
loopne
shl
fdivs
xor
cmp
jmp
out
repz
lock
sbb
cmc
ljmp
sub
int3
int
cld
loope
aad
out
out
rcr
mov
aam
rcr
cld
out
aam
aam
not
ror
divb
ljmp
not
aad
xchg
in
sbb
xlat
cli
mov
orl
cmp
cmp
test
fucomip
mov
enter
out
fcomi
cmp
icebp
stc
into
in
repz
incb
enter
sub
orl
mov
xor
movl
inc
movl
mov
sbb
jmp
iret
fcmovnb
stc
inc
sti
mov
fimull
jle
add
out
rol
out
in
out
call
in
into
int
repz
loop
call
in
in
in
in
fsub
icebp
test
cmc
xor
aaa
out
cmp
aam
ret
les
fscale
loop
in
ljmp
shlb
cmpl
fiadds
test
orb
lret
out
jmp
std
aad
int3
xor
mov
cmc
jmp
test
fcmovne
lock
xchg
cmc
int
repnz
sub
stc
neg
cmp
rcl
cmp
enter
lret
enter
in
lock
stc
ss
in
cli
cmp
not
ret
aad
fld
into
fmuls
and
call
out
test
idiv
aad
ljmp
into
aam
in
das
hlt
sarl
cmp
fnstsw
loop
in
aam
mov
in
incl
xchg
cs
in
aaa
leave
hlt
loopne
aaa
repz
fnstcw
sti
sar
mov
leave
mov
in
nop
bnd
shl
out
xor
cmp
fcmovnu
test
clc
in
addl
xor
out
fsubr
fidivrl
fdivrp
std
cmp
loope
repz
cmc
loope
std
jmp
call
divl
xor
sti
shll
enter
out
aaa
ret
lock
cmc
std
frstpm(287
stc
and
leave
in
mov
int3
xor
xlat
out
aaa
into
loope
dec
jmp
aam
div
fdivr
call
filds
out
iret
call
enter
int
shl
icebp
fcom
cld
clc
or
in
ljmp
ret
sti
cmp
out
clc
int3
out
cld
repz
xlat
cmp
shl
add
lret
sti
int3
aam
loop
enter
jmp
icebp
rcr
addl
lret
out
fucom
rcr
shl
imul
in
in
repz
int
in
fnstsw
in
cmp
les
out
leave
mov
test
in
sub
jmp
clc
aas
cmp
add
cld
enter
lret
into
mov
into
repz
xor
stc
cmp
int
iret
out
and
xchg
out
stc
nop
fdiv
fucom
rcl
aam
sti
enter
repz
cmp
into
loopne
loopne
shl
cld
cld
fcmovu
xchg
in
enter
xor
xor
clc
aas
repnz
shr
cld
mov
test
in
out
out
fmulp
xchg
aam
das
repnz
cmp
aam
or
lock
neg
xchg
xlat
ljmp
lds
out
lret
xlat
fnstsw
cmp
in
loopne
in
clc
hlt
filds
fucom
orb
rcl
rcr
xor
call
in
fcmovnu
rcl
fucomip
fcmovne
jmp
out
incb
ss
lock
call
cmp
ret
shl
in
and
mov
fmul
test
loop
shll
into
in
stc
sarl
leave
repnz
in
mov
int
ret
xchg
int3
out
loop
fucomi
cli
cmp
repnz
cmp
fidivl
sbb
xlat
xor
clc
clc
fstl
clc
aam
cmp
fucomi
cmp
ror
ds
iret
xlat
stc
xor
sti
in
loop
jmp
lret
test
cld
xor
sbb
loope
ret
rcr
leave
mov
jmp
dec
filds
into
aam
xlat
cmp
cld
aam
fcmovb
loop
ffree
enter
test
jmp
xchg
shr
out
lds
jmp
cmp
loopne
mov
fisttps
lret
fisttpl
in
jmp
aam
icebp
fmul
ret
shl
mov
cli
and
into
aaa
cmp
fptan
out
fninit
loop
in
xor
clc
fcmovne
int
lret
sub
in
enter
clc
call
shr
lret
rcl
shl
xabort
enter
orb
clc
mov
orl
push
xor
mov
add
jmp
mov
mov
inc
cmp
jmp
aad
aas
ret
fcmovne
aad
mov
xlat
fistps
add
into
notb
leave
repnz
cmp
into
xorb
out
shl
cmp
enter
lret
shr
sti
sar
xchg
in
in
out
cmp
cmp
in
stc
hlt
cmp
mov
cld
jmp
mov
xor
fldl2t
stc
std
fst
hlt
loope
std
stc
ret
jecxz
fdivp
div
mov
icebp
xchg
adc
enter
sar
out
jmp
cli
incb
rcl
mov
testl
rcl
fsub
enter
fdivrp
hlt
int
idiv
xlat
clc
loope
sti
aad
call
rcl
lea
stc
int
xor
lret
clc
clc
aad
adc
out
xlat
fld
mov
out
int3
out
ffreep
in
into
fcoml
std
sar
ds
fdivrl
adc
aam
fmul
mov
mov
shl
test
idivb
rcl
aas
aas
and
out
hlt
shr
jecxz
out
lret
aam
clc
cmp
out
xlat
aas
int
ret
cld
fyl2xp1
leave
enter
ret
fiadds
jmp
cmp
cmp
ljmp
cli
fdivrp
lret
movb
lret
loope
jmp
out
call
lret
cmp
int
fucom
cmc
fcmovbe
fdecstp
sub
mov
cld
lock
rcll
int3
xor
icebp
std
in
ret
in
out
mov
repnz
iret
fcmovnu
repnz
out
cs
out
icebp
in
sti
fucomip
int
aam
cld
test
loopne
out
xchg
loope
out
out
xlat
leave
jmp
cmp
jmp
fsubr
rol
inc
decb
out
into
cli
fsub
ljmp
clc
jmp
out
in
aas
repnz
push
flds
testb
repnz
rcr
idivl
adc
test
stc
repz
ret
out
in
mov
ffreep
in
ret
cmp
cmp
incl
lock
add
xchg
fistl
xchg
xor
in
out
cld
into
loopne
cmp
out
and
cld
mov
mov
ret
out
loop
xchg
iret
sar
repnz
test
leave
out
loope
loop
fcmovu
fcom
mov
fdivr
std
loop
lret
mov
jmp
enter
aaa
cmp
aam
test
xchg
idiv
fdiv
ret
xor
not
aam
jecxz
aam
cmp
ds
repnz
cmp
fcmovbe
aad
in
xlat
in
jmp
xchg
call
lret
ret
out
enter
icebp
icebp
rcl
loop
cmc
cmp
in
in
jecxz
aam
xor
rol
in
ror
hlt
adc
sar
hlt
rcl
les
cmp
hlt
lret
cld
jmp
repz
cmp
loopne
in
roll
test
clc
fxch
mov
repz
int
fistpll
std
stc
loopne
hlt
xlat
out
addl
in
mov
out
int3
jmp
out
call
mov
addb
xchg
out
in
f2xm1
fdivrl
loopne
faddl
ret
fcomp
fadds
mov
rcr
std
sar
test
xchg
loopne
into
in
ljmp
int3
fadd
fstpt
test
cmp
in
fnop
nop
sar
pop
int
jecxz
not
cmp
out
stc
ror
std
call
xor
lret
faddl
ss
xor
fstpt
aad
aas
into
shl
fdivrs
cld
jecxz
sti
testb
out
xor
xlat
lret
divb
aaa
cli
hlt
clc
and
fprem
out
cmc
stc
rcl
xchg
loope
out
enter
xchg
ret
int
hlt
imul
cmp
enter
aam
div
fxch
fldpi
mov
leave
fimuls
loope
rcl
xlat
jmp
jmp
not
lret
cmp
loop
loopne
sub
lret
cmp
loope
int3
jb
jmp
rcl
xlat
fcmovnu
shl
cwtl
clc
xchg
js
addb
push
jle
aas
add
shl
sub
leave
aam
out
int
aam
icebp
loopne
jecxz
in
cmc
adc
in
cmp
call
repz
out
leave
hlt
aam
stc
cli
sti
addl
iret
lock
fcmovnbe
cld
aam
repz
lock
ffree
aad
xchg
call
lret
in
ret
in
icebp
std
call
loope
cmp
mov
fsubrp
loope
mov
cld
clc
int3
xor
lock
and
mov
filds
shl
xor
sbb
std
add
rolb
call
in
in
imul
out
clc
in
ds
cld
loop
iret
xchg
clc
and
test
lock
xchg
adcl
xlat
in
out
fcmovbe
in
cmp
stc
neg
mov
flds
loop
out
iret
aad
out
int3
xlat
ret
shl
iret
in
call
fsubrp
in
shl
mov
xor
jecxz
enter
loopne
cmp
hlt
ret
test
fldl2t
fst
add
xchg
loope
cmp
in
hlt
ss
loop
mul
idivl
mov
mov
rcl
ljmp
aad
std
ljmp
cli
aad
loopne
mov
jmp
lret
repz
test
std
hlt
cld
fdivr
loop
mov
jmp
test
leave
in
call
stc
in
rcr
stc
in
xlat
fdivrp
fiadds
mov
stc
fiaddl
aaa
cmc
cli
aaa
in
aad
ror
icebp
out
aad
fcmovnu
ret
jmp
xchg
out
xor
fdivs
cmp
rcl
iret
rcr
filds
int3
fldl
in
call
xor
out
aad
out
out
ds
testb
leave
addb
rcl
repnz
sar
aam
lret
stc
loopne
sar
lock
test
decb
lret
loop
out
lock
cli
icebp
repz
cld
std
in
out
ror
jmp
cmp
leave
incl
shl
out
fprem
fsubrp
sti
shl
ret
les
xchg
shl
xchg
jmp
aad
jmp
out
leave
xor
shl
aas
enter
leave
sti
cld
fsubp
xchg
xchg
xchg
out
in
sub
cli
int3
fidivl
div
ljmp
ret
mov
test
lock
jmp
imul
leave
cld
sti
lock
in
aas
out
addl
sti
repz
xchg
cmc
aas
out
cld
shll
in
ds
clc
cli
fadd
mov
out
repnz
adcb
rcr
sti
call
fiadds
aam
lret
fxch
cli
addb
lret
call
xor
jmp
hlt
cmpl
roll
jecxz
out
sti
out
xchg
out
xchg
in
xor
aad
xor
xor
cmc
cmp
loope
rcl
xchg
sti
add
fsubr
jmp
loop
lock
xor
out
call
cmp
cld
icebp
iret
mov
xchg
std
loopne
rclb
out
in
out
cmp
fdiv
roll
ret
rcl
fsub
int
fldl
int3
fmulp
jmp
in
ds
or
test
mov
mov
cli
in
lret
into
lret
leave
lock
cmp
ret
testl
ljmp
xlat
fidivrl
call
out
fcmovnbe
sti
lock
loope
fildl
fsubr
cld
xchg
into
xchg
mov
in
xlat
jmp
repz
into
ds
fdivr
iret
fucomi
fdivr
sarb
idiv
fincstp
test
std
loop
sub
aad
xlat
ror
repz
cmp
xchg
cli
fmuls
int
call
inc
hlt
jmp
ret
ror
ret
rcl
je
repz
sbb
add
repz
xor
jmp
int
clc
cmp
lret
sbb
lock
shl
ret
out
xlat
jecxz
in
rolb
ss
aam
call
addb
test
lock
mov
ret
das
lret
fucom
int
loop
lock
fsubp
aam
ret
orb
jmp
clc
cli
lret
repnz
std
xor
in
addl
adc
fdivs
rcl
cmp
ds
test
xchg
mov
rcl
into
loop
aad
ds
ljmp
fptan
std
out
jmp
call
loope
enter
idivb
fdiv
int
icebp
cmp
test
ljmp
ljmp
divb
sar
iret
fnstsw
fcos
fistpll
clc
repz
fucomip
fimull
out
sub
out
dec
ljmp
cmp
in
fsubr
lret
xchg
incl
xor
enter
fcmovne
dec
sbb
test
in
cmp
int3
in
cld
int3
in
fcom
aaa
loop
jmp
fchs
ljmp
aam
loope
in
jmp
icebp
fsub
rolb
out
iret
out
call
and
cmp
mov
fmuls
call
cli
lret
cmp
in
lret
repz
test
repnz
xlat
sub
test
in
sub
divb
cmp
loopne
repz
idivl
iret
fdivr
rorb
jmp
in
mov
stc
sarb
int3
icebp
lret
cld
in
std
cld
fistl
xchg
sub
xor
sar
sbb
into
aas
aam
shl
test
out
jmp
out
aaa
fdiv
cld
hlt
cmp
into
sub
aam
xchg
fmulp
fdivrp
loopne
in
mov
lret
repnz
cmp
xor
fiaddl
mov
sub
fadds
in
lret
int
in
ss
ds
std
out
iret
loopne
mov
inc
iret
mov
and
loope
aam
out
xor
clc
jmp
iret
in
aas
ret
call
leave
filds
call
das
cmp
xor
iret
lret
test
neg
ret
enter
in
lret
int
sub
sti
cmp
call
clc
lret
rcr
cmpb
ljmp
fcmove
xchg
aam
cmp
into
ror
push
icebp
and
xlat
mov
leave
int3
loopne
mov
repz
mov
aam
jmp
cmp
loopne
sarl
in
sti
aas
fsub
rolb
stc
enter
lock
ss
int3
xor
dec
cmpl
div
out
fucomi
fisttps
jmp
out
cld
ss
call
xchg
mov
std
addb
out
loopne
jecxz
xor
jmp
out
test
ret
loop
jmp
into
loope
call
xor
fcom
aaa
icebp
cmp
stc
mov
testb
rorb
leave
sti
shll
cmp
repnz
icebp
cmp
lea
hlt
lock
xor
fcomi
jmp
rcl
test
addl
in
out
addb
enter
jmp
loope
aas
int3
stc
cli
fnop
fadd
fndisi(8087
aad
out
fiaddl
xchg
rcl
repz
cmp
shl
leave
shl
xor
xchg
xlat
sti
fisttps
dec
loopne
repnz
xor
fcmovne
cld
out
cmp
icebp
repz
out
sbb
lds
mov
xchg
enter
lret
lret
aam
xor
testb
rol
sti
fstp
call
mov
pop
add
add
iret
vpaddusw
fstp
pop
mov
outsl
test
cmpsb
ret
jle
aas
add
xlat
in
lds
call
into
repnz
in
repz
mov
les
mov
fsubr
xchg
mov
cld
rcl
repnz
xlat
roll
in
fisttps
leave
loopne
fsubr
fst
sti
repnz
xlat
not
iret
cmp
loope
popl
jmp
lds
shl
xor
call
repnz
fcmovnu
testb
xchg
xchg
in
cmp
sti
cmp
or
neg
rcr
aam
lret
call
test
loopne
lds
xor
fcmovnu
rcr
cli
aaa
fdivr
xorb
lock
loopne
stc
test
ret
ss
mul
div
lret
rolb
call
mov
fsub
rolb
xor
xor
out
int
xor
cmp
jmp
fdivr
mov
shlb
loopne
sti
xor
rcl
in
cmp
cmc
loop
repz
cmp
fstp
rolb
mul
rcl
out
leave
lret
jmp
ss
in
neg
fdiv
test
mov
test
jecxz
xor
imul
cs
jmp
int
ds
in
leave
xlat
leave
shl
in
addb
idivb
lret
shr
cmc
cmp
aas
decl
mov
mov
loope
xchg
cs
repnz
jmp
aam
cmp
lret
hlt
repz
xlat
mov
faddl
lret
out
or
imul
shl
lret
rcr
lret
hlt
repz
rol
fildl
in
loopne
xchg
xchg
rcr
hlt
cmp
icebp
stc
sar
testl
mov
loop
lret
into
out
in
iret
lret
aam
xlat
test
aam
into
ret
repz
sti
in
xchg
enter
test
aaa
idiv
cli
call
add
rcl
test
not
stc
in
lock
int3
out
xchg
in
lret
jecxz
fcmovu
iret
enter
in
rolb
out
xchg
jmp
mov
xor
sub
in
xor
ljmp
repz
test
nop
int3
fmul
fst
into
into
fcmovbe
jecxz
cli
in
fidivl
sti
sarl
add
fimuls
lock
cmc
xlat
enter
icebp
fiaddl
jecxz
mov
lock
in
icebp
xor
test
cli
rcl
rcl
incl
xchg
fdivr
jmp
xchg
leave
int3
ljmp
xor
int3
call
shl
out
ret
loopne
cmc
test
orl
xchg
into
enter
fmul
lret
jecxz
shl
cld
std
fcmovbe
stc
mov
and
out
mov
xor
rcr
cmp
xor
ds
fidivrs
stc
rcl
jecxz
incl
int3
lock
icebp
jmp
cmp
cmp
test
repz
icebp
in
jmp
stc
std
xchg
in
mov
rcl
out
lds
xor
cli
fyl2x
cli
sti
repnz
xchg
xchg
cli
testb
aam
in
int
sti
std
out
adc
cmp
fdivr
repz
decl
loopne
adc
jmp
aaa
repnz
fdiv
loop
les
call
in
int
xor
icebp
sti
xor
xor
out
fmul
in
in
out
ret
cmp
rol
enter
enter
xchg
mov
in
test
lret
imul
icebp
icebp
loope
ffree
std
jmp
out
sub
std
cmc
repz
les
xor
aam
xor
sar
cmc
fiadds
loopne
ljmp
jmp
icebp
int3
sti
std
aaa
sti
jmp
in
sti
aad
std
cli
out
call
dec
adc
xchg
xchg
loopne
jmp
cmp
jmp
cli
ret
leave
ret
enter
fcmovu
lock
pop
add
add
aad
int
push
xlat
outsb
rolb
rcr
pop
jle
aas
add
test
cmp
repnz
clc
ror
sub
out
nop
loopne
fucom
lock
iret
xlat
xlat
fnstenv
clc
cmp
cli
aas
loope
cmp
clc
in
orl
test
xor
cmp
cmp
in
cmp
loope
test
xchg
roll
enter
rclb
loop
xor
int3
xor
ds
lret
loop
test
mov
in
out
in
xor
out
cmp
xlat
lock
out
jecxz
fisttpl
nop
sub
out
call
lock
shr
cli
test
loopne
cli
clc
lret
test
fists
sub
idivb
les
aam
cmc
cli
int
jecxz
int
out
xchg
leave
out
loop
shr
iret
repz
cld
cmp
fildl
ret
testb
mov
jmp
loopne
loope
leave
lock
cmp
cmp
std
rol
movl
xchg
loop
loope
repz
out
enter
loopne
int3
lret
sbb
fcmovu
mov
xchg
in
loopne
aas
clc
xlat
not
clc
cmp
lock
and
lock
std
cld
test
test
into
in
mov
shl
sarb
aam
out
shl
not
cmp
les
in
fucomip
hlt
out
rcl
jmp
xor
iret
in
loopne
jmp
call
in
out
hlt
div
hlt
xor
stc
icebp
ffree
repnz
into
rcl
out
repz
out
out
cmp
xchg
lock
adc
enter
lret
iret
mov
in
hlt
out
int3
ss
int
shl
xor
sti
cli
mov
in
xchg
xchg
idiv
das
xlat
jmp
lock
incb
mov
jmp
cli
call
leave
repnz
repnz
sti
shr
loop
cld
loopne
in
neg
test
out
out
icebp
std
loopne
xchg
out
loopne
fdivrs
repz
call
shl
hlt
call
fcmovnu
test
int3
out
loop
in
loop
cli
aad
hlt
jmp
cmp
jecxz
std
fimull
ret
cld
into
lock
call
lret
xor
loopne
aad
enter
hlt
mov
std
ret
lea
shll
in
fldl2e
cli
cmp
icebp
mul
sar
cmp
cld
call
out
test
das
aaa
divl
ds
in
out
out
loopne
mov
clc
int
mov
shl
xchg
xor
xor
ss
push
ret
out
ffree
fiaddl
loopne
loop
sar
xchg
ss
aaa
int
aam
aad
fcmovu
std
hlt
stc
iret
cmc
xlat
rcl
ret
clc
jmp
in
in
in
ret
in
lret
shl
xlat
sub
ljmp
leave
loopne
xchg
int3
cmc
std
into
rcl
iret
xor
ror
adc
leave
test
lds
lock
loopne
shl
lret
int3
cmp
sub
aad
rcl
out
mov
mov
fpatan
int
mov
fucomi
cmp
xlat
aas
xor
sti
ss
and
and
xchg
mov
into
icebp
jecxz
rcr
loopne
mul
cld
in
fsubr
lret
jmp
fidivrl
mov
call
sub
lret
lret
xchg
jecxz
icebp
sub
aam
lret
int3
std
rol
fucom
aad
fdecstp
fisttpll
mov
cs
fmul
neg
leave
jmp
lock
sarb
flds
loop
leave
mov
icebp
in
jmp
ss
into
testb
sub
stc
loop
xchg
in
aaa
xor
stc
fucomp
cmc
cmp
cmp
ljmp
cmp
int
rorb
test
add
push
push
mov
jmp
rcl
rol
rol
rcl
mov
mov
cwtl
pusha
popa
jle
aas
add
repz
neg
int
repz
fcomp
cmp
cmp
fstp
mov
jmp
in
in
iret
iret
cmp
aas
icebp
clc
sar
movb
pop
out
xchg
repz
xor
cmp
lret
add
clc
loopne
std
sbb
into
test
mov
rclb
in
aam
lret
sar
lock
leave
fcomp
cld
sti
fistl
aam
xor
cmp
cmpb
in
rol
test
stc
mov
in
repnz
repnz
aam
repnz
jmp
clc
fdivr
shl
cld
xlat
and
mov
lret
loopne
jmp
test
xor
in
jmp
cmp
in
fadds
sbb
jecxz
out
call
sub
imul
ds
std
idiv
fdivr
aad
call
roll
loop
jmp
shr
xchg
lret
jmp
fdivl
aas
aaa
sti
fsubrp
filds
ret
cli
std
in
xchg
div
xor
sarb
cmp
bnd
cmp
fcomi
loop
mov
loope
mov
xchg
test
mov
ss
xor
aas
call
aaa
xchg
test
addb
iret
fisttpl
loopne
ror
fsub
std
out
cmp
hlt
out
cmp
stc
mov
sub
call
std
xlat
cli
cli
in
rorl
sti
out
jmp
loopne
cmc
lret
call
xlat
jmp
hlt
faddl
mov
mov
hlt
lds
cli
xor
cld
repz
cmc
divl
ret
fcomi
sar
xlat
lret
lea
loopne
ret
in
stc
lret
fndisi(8087
cmp
ss
loop
shr
loop
jmp
fucomip
jmp
out
shl
into
out
fdivr
mul
ljmp
cmp
leave
ffree
sbb
lds
shl
int
into
cmp
lock
cld
and
jmp
jmp
xlat
icebp
cmp
cld
in
fdiv
fnstenv
aad
fucom
jecxz
clc
std
rcl
lea
mov
xor
call
dec
repnz
rcr
out
fcomip
jecxz
sub
into
into
test
sar
leave
cld
sub
fyl2x
xchg
ljmp
fucomp
xchg
out
xor
repnz
iret
aad
adc
fstp
call
std
test
ret
cmp
shl
cmp
rol
sti
cmp
loope
mov
xchg
into
idiv
ss
in
ror
sti
neg
repnz
out
loopne
enter
fsubr
rolb
iret
jmp
fdivr
lret
hlt
cmp
out
incb
in
test
into
lea
repnz
in
int3
cmp
fcmovbe
fcomp
mul
out
lret
ljmp
out
adc
hlt
hlt
into
cmc
hlt
ljmp
stc
jmp
cmp
jmp
mov
mov
fucom
xchg
enter
fcmovb
fstp
cmp
std
cmc
fldl
hlt
std
or
mov
jmp
repz
ret
in
hlt
idiv
aad
xorl
loopne
hlt
ljmp
mov
aam
jmp
aad
jmp
cmp
rcl
jmp
mov
xchg
sub
jmp
out
idiv
rcr
xlat
shr
cmp
loopne
add
loopne
mov
mov
adcl
xor
jmp
in
shr
hlt
sti
faddl
clc
addb
call
in
neg
incb
repnz
repz
test
addb
enter
leave
repz
cmp
jecxz
icebp
adc
jecxz
out
cld
mov
xchg
test
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
jmp
into
mov
fmul
iret
fucomp
sub
inc
mov
fldl
aas
add
les
in
aad
addl
hlt
fsubp
fiaddl
into
mul
cmp
cmc
jmp
sti
lock
xlat
cmc
cmc
jmp
out
ljmp
lds
repz
into
lret
ljmp
sar
imul
ljmp
xchg
mov
xchg
cmc
lret
aad
roll
out
out
jmp
enter
out
xchg
sarb
shlb
shlb
jecxz
cmp
xor
mov
in
iret
loop
mov
xchg
call
xor
cmp
out
loope
in
stc
roll
movb
test
out
lret
xchg
xor
stc
int
cmc
ljmp
lock
jmp
movb
jecxz
out
xchg
cs
ss
fst
rcr
iret
lret
xlat
fcmovb
loopne
int3
test
mov
fcomi
jmp
mov
int3
rcl
shrl
ljmp
fucomi
repz
xor
loopne
fxch
lret
repz
cmc
loope
aad
aad
hlt
clc
cmp
icebp
out
repz
repnz
in
xlat
xchg
shrb
xor
int3
cld
cmp
cmc
ror
out
enter
lret
loopne
adcl
ss
loopne
xor
ret
cmp
fucomip
leave
cld
fstl
fdivs
in
std
rcl
cmp
loope
ret
std
repz
jmp
nop
loop
in
out
shl
into
int3
div
repnz
shl
div
ljmp
mul
ret
fstp
mul
fmul
ret
rclb
repnz
fdecstp
int3
cmp
aad
std
shl
aas
shl
fdecstp
cli
stc
test
enter
mov
out
lock
icebp
int
jmp
lret
fcmovbe
int
cmp
xchg
xlat
aam
stc
loopne
xchg
jmp
xor
cmp
in
cmc
cld
hlt
in
lret
loop
loope
hlt
aas
aam
stc
loopne
mov
int
xor
out
iret
out
in
aad
ror
fdivrs
call
mov
lret
in
repnz
mov
jecxz
ror
in
cli
in
std
lret
or
jmp
jecxz
test
sub
repnz
loop
cmp
in
enter
cmc
test
aas
imul
enter
xchg
fadds
repz
ss
fnstenv
jmp
in
loopne
sarl
out
xchg
cmp
stc
loop
ljmp
fidivl
fiaddl
lock
cli
in
mov
std
sti
xchg
loopne
xchg
cmp
lret
lock
sti
jmp
clc
fld
cmp
jmp
hlt
ds
and
sar
or
xchg
mov
out
fstpt
shll
iret
xor
jecxz
out
cld
sbb
in
rorb
jecxz,pn
cmp
out
cmp
int
flds
mov
faddl
mov
loopne
out
xlat
cmp
cmp
cmp
out
fmull
mov
into
into
int3
mul
xor
sti
into
hlt
rcl
adc
stc
shl
fucom
mov
test
xchg
sub
stc
out
repz
shll
add
ret
cli
out
jmp
and
icebp
stc
std
out
mov
rol
out
rcl
dec
lret
int3
fdivrs
cmp
in
rclb
into
lret
enter
int3
icebp
rolb
fstp
xchg
cli
sbb
in
orb
cmp
jmp
out
ffreep
adc
fildl
fisttpl
into
iret
aam
test
jmp
sti
addb
xchg
vpaddw
shr
out
in
shl
repz
cmp
in
aam
out
repz
hlt
cmp
sti
fucomi
shl
and
rcl
fcmovnbe
iret
ljmp
inc
fcmovu
testb
xchg
rcl
das
mov
mov
mov
inc
cmp
jne
pop
jmp
ret
xlat
rcl
lret
xchg
mov
cmp
jle
aas
add
fcom
cmp
sti
lock
sub
in
stc
mul
ljmp
aad
jmp
into
sti
clc
push
rcl
sbb
fimuls
rclb
jmp
aam
aam
cli
ror
fcomip
stc
stc
fucom
out
or
lret
int3
loop
out
repnz
shl
lock
int3
jmp
not
test
xchg
jmp
leave
mov
mov
jmp
out
stc
cmp
in
aam
addb
cld
roll
cld
xchg
int3
test
xlat
cmp
shlb
repnz
jmp
repz
cli
out
clc
in
xchg
fsubp
out
ror
jmp
jmp
jmp
rcr
lret
int3
int
les
fsubp
rcr
int3
lret
iret
test
shl
lock
ror
les
fmul
shll
jmp
xlat
cmp
fsub
repnz
int
mov
hlt
lds
xor
ds
cmc
ret
icebp
mov
ror
xchg
subb
iret
lret
cmc
leave
lock
fcom
cli
loop
hlt
cmc
mul
lret
call
xchg
into
in
cmc
out
aaa
fucom
int3
loope
test
fmulp
jmp
clc
addl
out
shr
shr
movl
cmc
hlt
add
addb
ror
in
xor
leave
xor
fstpt
roll
cld
ret
clc
loop
fucomi
sub
ror
into
jmp
out
jecxz
icebp
in
cli
xor
lock
in
test
cli
cmp
sti
cld
add
inc
int3
icebp
in
icebp
jmp
hlt
in
repnz
cmp
out
cmp
stc
out
flds
loopne
loop
mov
call
cmp
xlat
repz
repnz
leave
jmp
in
jmp
enter
cmp
loope
repnz
test
cld
out
call
stc
into
jmp
cmp
clc
sti
lret
sarb
cmp
test
jmp
enter
hlt
out
in
jecxz
lret
cmp
jmp
in
hlt
aad
int
aam
hlt
repz
orb
repnz
jecxz
enter
in
cmp
aad
out
aas
loope
rcr
xlat
sti
and
mov
std
rcl
xor
stc
repnz
xor
cli
loopne
shl
idivl
jecxz
clc
xlat
nop
mov
xchg
icebp
jmp
into
aam
repz
hlt
stc
clc
idiv
jecxz
int3
and
roll
xor
lret
lock
in
repnz
hlt
ret
incl
fiaddl
loope
aad
hlt
fnstenv
ds
mov
in
ret
loope
int3
call
nop
not
in
in
fdivrs
enter
fdivrp
loope
loop
ds
fincstp
loope
ftst
fmul
mov
in
call
shr
fst
fdivr
out
fdivr
in
jmp
out
lret
lret
shr
out
in
jmp
shl
rcr
shr
cmc
icebp
adc
shl
in
filds
ljmp
in
aam
jmp
cmpl
out
int3
fadd
xchg
loopne
loop
out
cmp
hlt
aaa
shr
ret
ret
cmc
rol
xchg
in
enter
in
mov
xor
into
lret
repnz
sar
fdivr
fdivp
mul
jmp
xchg
fmulp
call
xchg
ret
out
fcomi
idiv
int
ss
xor
addl
lret
rol
xchg
rclb
not
xor
aad
std
aas
cmp
aas
clc
clc
mov
out
xchg
mov
iret
loope
iret
sar
int
rcr
out
faddl
clc
in
div
aam
incl
fucomip
shl
out
cmc
out
cmp
icebp
cmp
imul
cmp
hlt
filds
int3
cmp
sti
adcl
inc
clc
jmp
aam
fadd
fstp
pusha
shl
into
scas
and
aas
add
xor
cmp
fldl2t
in
repz
cmp
mov
decb
mov
repz
rcl
out
fdivp
in
roll
imul
fcmovne
nop
lret
lock
out
or
ret
clc
cmc
shl
sti
incb
frstpm(287
fcmovnb
cmc
sti
mov
sar
mov
leave
xor
fcmovb
out
out
fxch
roll
shl
xlat
loope
mov
fmul
ljmp
test
xor
ds
icebp
fcompp
in
rcl
repz
loope
mov
aas
lret
in
jmp
aad
roll
icebp
repz
ljmp
mov
xchg
lock
shl
xor
icebp
cmc
cmp
in
aam
loopne
loop
in
xlat
loopne
out
or
mov
cmp
ljmp
repnz
test
sbb
test
aam
int
xor
cld
xor
shl
int3
hlt
repnz
enter
aad
mov
fimuls
xor
jmp
stc
xor
fldz
fcmovu
cld
aam
rol
in
jmp
xchg
aam
fdivr
shl
sti
ljmp
rol
iret
cmp
xchg
cli
fsubr
enter
out
not
in
aad
fnstenv
stc
enter
sti
test
aad
loop
cmc
std
mul
xlat
fmull
fmulp
shl
repz
cmp
cmc
aaa
lret
out
in
rol
shl
mov
ret
test
jmp
mov
xor
fxch
divb
aas
aas
cmp
int
enter
jmp
in
icebp
jmp
fadd
icebp
aad
jmp
cld
cmp
jecxz
cli
clc
or
xchg
sub
call
lret
xor
call
stc
loope
ds
sti
std
rcl
std
hlt
jmp
sti
sub
jmp
cmp
shl
out
adc
test
enter
mov
out
leave
jmp
cld
repz
loope
rcl
test
mov
fimuls
cmp
out
into
repnz
cld
cmp
sti
fdivr
mov
mov
loope
cld
loop
xchg
shr
xchg
ret
lret
in
fcmovbe
sar
aaa
shl
fadd
mul
mov
sti
cmc
aad
mov
lock
icebp
cmc
mov
hlt
out
icebp
jmp
fcmovne
stc
in
out
loop
loop
sti
mov
hlt
lret
xchg
iret
lret
in
in
into
repz
aas
ror
cli
ds
cmp
enter
xchg
shl
mov
das
fcmovnbe
hlt
enter
out
loop
cmp
repz
mov
xor
ror
call
aas
loopne
into
inc
ret
fiaddl
loop
sar
jmp
leave
ljmp
aaa
jmp
shl
hlt
call
in
sti
mov
xlat
cmp
ror
ror
adc
aas
ret
xchg
repz
xchg
mov
out
call
std
std
xor
out
iret
in
fiadds
out
enter
cld
jecxz
decb
jecxz
lret
xor
jmp
sti
hlt
cmp
cmc
std
jmp
orb
in
repz
into
in
fdivrl
int
sbb
sti
cmc
into
fsubp
test
jmp
int
jmp
fsubr
and
ljmp
ljmp
jecxz
cmp
fsubr
mov
mov
xchg
ret
leave
jecxz
clc
out
cmp
sti
ds
aas
ret
addl
test
into
rol
cmc
cmc
xor
in
aad
xlat
ror
repnz
rcr
call
xchg
icebp
test
xchg
loopne
lret
clc
lret
cmp
aas
sarl
clc
testb
loope
out
in
enter
fucomp
aaa
loop
ret
leave
xor
into
jmp
int3
out
icebp
repnz
lret
shl
int
filds
jmp
iret
mov
xor
jmp
fcomp
fistps
je
insl
incl
fs
jle
add
jmp
into
icebp
sti
aaa
fistpll
rorl
enter
icebp
call
icebp
in
stc
in
iret
in
lock
loope
incb
cli
int3
jmp
decl
cs
jmp
lret
repnz
fstp
aad
faddl
loopne
fcmovb
repnz
addb
fdivrl
fnstcw
flds
cmp
ret
mov
xchg
test
out
into
cmp
idiv
cli
leave
lock
testl
fsub
fcmove
lret
lret
jmp
mov
fxch
hlt
out
fxch
loopne
cld
test
rol
fsub
jmp
sti
shl
orl
fidivrl
leave
repnz
aas
repnz
icebp
cmp
lret
movl
in
ret
aaa
in
out
jmp
ret
iret
ret
xchg
fildl
stc
std
repnz
or
stc
int3
out
bnd
repnz
test
int3
idiv
and
hlt
call
fcmovbe
cs
cmp
lret
aaa
out
in
rolb
lret
in
fucompp
in
mov
rolb
in
out
lret
icebp
hlt
cmp
xchg
fstp
fucomi
ljmp
inc
xlat
vpmovmskb
clc
leave
xor
loope
out
iret
cli
ror
clc
aad
in
call
mov
leave
lock
cmc
not
fdivp
jecxz
clc
movb
jmp
mov
in
sti
out
loop
in
cli
mov
lock
cmpl
ret
aas
std
loope
cld
lock
xor
shl
cmp
jmp
icebp
ds
repnz
xlat
in
test
in
shl
out
repz
cmc
cmc
int3
int
fnstsw
cmp
fstp
mov
lds
lock
in
cmp
int
cmc
adc
into
icebp
and
mul
lret
lret
out
fiadds
lock
cmp
ror
in
in
test
add
loope
std
into
mov
in
icebp
xchg
call
in
fdiv
iret
lret
fsub
lock
icebp
ret
fcmovne
lds
jmp
iret
cli
leave
ljmp
cmp
call
fisttpll
std
cmc
in
jmp
rcr
call
loopne
in
lock
xor
cld
in
test
out
int3
lret
xchg
loope
in
aam
ss
into
out
in
repnz
rcr
incl
mov
fmuls
xchg
adc
call
cmp
rol
out
enter
popl
fdivr
cmp
lret
adc
hlt
ffreep
loop
rcl
test
lret
xchg
xchg
mov
xor
aas
sti
out
jecxz
cmp
fabs
stc
cmp
cli
sar
rorl
xor
int
rcr
out
std
out
idiv
ret
fucom
decl
lock
int
repz
sub
int3
fistpll
lds
and
fcoml
xlat
shl
xor
fmul
stc
stc
aaa
out
sar
sti
lds
int
xlat
call
roll
int
into
test
lock
mov
lret
leave
cld
fldl
shrb
ret
shll
cli
iret
clc
rcl
xor
into
lds
decb
mov
mul
xor
cmc
cmp
call
aaa
ffree
in
cld
jmp
out
shrb
hlt
xlat
out
cmc
aaa
stc
cld
xor
hlt
faddl
fcmovne
cmp
mov
out
lret
cli
int
aam
call
hlt
in
fucomi
jecxz
jmp
enter
xchg
xor
lret
fmulp
fmul
fnstsw
in
cmpl
std
fst
mov
xchg
repnz
in
xchg
int3
call
movl
inc
clc
jmp
iret
aas
aas
ror
rcl
ret
pushf
mov
adcl
jle
aas
add
call
std
fcmovbe
ret
idivb
clc
cli
fst
std
stc
clc
xchg
mov
rolb
loop
leave
int
not
rcl
xor
sbb
loope
fcmovnu
stc
out
fisttpl
fiadds
jecxz
shll
repz
cmp
aad
fprem1
and
enter
xchg
iret
icebp
loop
lret
shl
aad
shl
ds
cmp
loopne
sti
in
loop
fldl
out
call
fnsetpm(287
vcvttpd2dq
aas
rcr
aam
rolb
int
ljmp
xlat
aad
int3
iret
cmp
test
iret
not
stc
loop
mul
icebp
out
xchg
test
out
aaa
into
fsubrp
icebp
cli
test
cmp
mov
mov
out
shl
out
loop
ret
jmp
in
cmp
out
lock
shr
test
loope
cld
shl
into
xchg
cmp
sarl
fld
div
fcmovu
shl
shr
in
clc
in
test
int3
lret
out
icebp
lret
ss
fsubr
lock
test
test
in
loopne
loope
in
loop
jecxz
aad
ljmp
sarb
aas
fsubp
cmp
in
ret
loopne
fsubp
out
xchg
loopne
xchg
mov
xor
in
cmc
cmp
fidivl
neg
aam
loope
xchg
cli
mov
fcmove
loopne
out
leave
xlat
enter
aad
hlt
loope
cmp
cld
cmc
sar
fcmovnu
cli
xchg
mov
out
adc
ljmp
jmp
cmp
loopne
ret
xchg
test
sar
iret
out
aam
fdiv
enter
hlt
ljmp
xchg
xor
repnz
clc
in
dec
rcl
cmc
test
out
out
test
stc
xlat
lret
test
xor
out
hlt
xor
cmc
idivb
fld
lock
sti
leave
faddl
xchg
aam
rol
shll
xor
repnz
fucomp
aad
icebp
in
repnz
test
xchg
add
rcr
hlt
cmp
in
lret
lock
icebp
out
shl
aad
cmp
cli
icebp
shr
mov
shl
xor
xor
cmp
fistpll
xlat
cmc
repnz
in
in
jmp
std
ret
call
sub
idiv
xor
call
sbb
aad
les
lret
loopne
std
repz
aam
stc
int3
repz
jmp
out
ror
test
test
ret
std
sar
cmp
leave
int
fsubp
test
in
fcmovnu
test
cmp
adc
sbb
testl
jecxz
rcl
in
out
not
fnstenv
loop
shl
leave
fimull
iret
xchg
fucomip
stc
out
std
jmp
hlt
rcr
hlt
fcmovb
shr
xchg
in
into
in
call
jmp
jmp
jmp
fst
out
loope
rolb
icebp
fucomp
nop
loop
int3
sar
xor
shl
cld
idiv
rcl
xor
std
out
rcl
fnstenv
call
into
fsubrp
sub
jmp
test
xor
fdiv
out
aad
stc
xor
rcl
loope
rol
hlt
div
test
fisttpl
mov
rol
xor
cmp
xlat
in
out
out
test
leave
repz
les
int
out
ret
sub
iret
cmp
jmp
int
stc
fxch
orb
fdivp
cld
fcmove
sub
test
xor
xor
cmp
clc
xorb
loop
mov
sub
cli
fcmovu
out
xchg
xor
into
icebp
leave
clc
xlat
sti
rcl
aam
flds
mov
clc
fucomi
fisttps
aam
lock
cmp
roll
aam
xlat
testb
out
divl
cs
out
shr
add
add
rol
aad
pop
pop
movsb
or
mov
out
jle
aas
add
cmp
fidivrs
sar
shl
testl
lock
lret
xor
aaa
out
aaa
rol
aad
into
ljmp
stc
ret
xlat
mov
jmp
lret
lret
mov
in
call
cmp
cmp
std
test
out
jecxz
xchg
fdivr
loope
xchg
call
rol
ljmp
xchg
fcmovnu
loopne
std
xchg
clc
std
loop
in
hlt
xorb
enter
test
fsubp
fcomip
cmp
stc
test
sti
nop
in
and
out
enter
call
ds
fsub
fsub
stc
aam
fucompp
std
call
ffreep
enter
int3
cld
cli
int3
cmp
lock
ret
incb
aad
test
sar
int
std
mov
xlat
cmp
cmp
in
fptan
ds
std
test
xor
int3
repnz
aaa
out
icebp
jecxz
loopne
rolb
in
jmp
sub
loope
lret
lret
std
sti
aas
jmp
test
stc
stc
fcmovnb
cli
fucom
loop
mov
adcb
leave
icebp
ror
aam
aad
addb
aam
idiv
int
out
and
nop
fbstp
div
cli
fidivrl
lret
test
fcomp
sar
in
xchg
sar
int3
in
mov
ret
int
int
cmp
cmc
call
jecxz
testl
lret
std
mov
xor
cli
int
enter
hlt
fcom
fadd
aam
cmp
lock
jmp
jmp
clc
xlat
sti
rcl
aam
int3
jmp
ds
fucom
loope
loope
hlt
test
nop
out
xchg
lret
lret
sub
loope
out
cmp
test
out
shl
loope
test
lock
fbstp
ret
cmc
hlt
icebp
shr
loopne
shl
xor
aam
sbb
loop
int3
mov
ljmp
hlt
cmp
aad
cmc
cmp
jmp
aad
les
cmp
fsub
enter
not
out
xor
ret
iret
aaa
out
in
sbb
lret
out
xchg
fildl
repnz
in
aaa
int
int
hlt
clc
ds
in
aas
stc
cmp
fld
fsub
cld
test
in
shl
ss
iret
fcmovnbe
lret
cmc
leave
clc
xlat
clc
test
shl
in
fldl
fisttpl
leave
fcmovbe
xlat
jmp
jmp
out
loope
cmp
fildl
rcr
loopne
lock
int
xor
xlat
sti
mov
cli
mov
sub
out
stc
xor
cli
leave
int
cli
out
cli
cmp
cmp
loope
fildl
lret
addl
cmc
in
ljmp
loope
mov
loop
jmp
int3
fisttpl
fsubrs
sub
leave
in
fmul
push
incl
sti
testb
out
iret
jmp
jmp
xor
fst
rcl
imul
xchg
mov
clc
jmp
int3
xchg
rol
icebp
out
fdivs
lret
sti
cmp
div
sar
jmp
out
iret
xchg
orl
xor
int
addb
faddp
test
shl
test
int3
loopne
xchg
rcr
test
xor
in
fcmovne
call
fdivr
out
rcl
stc
neg
ret
test
repnz
out
adcb
out
call
cmp
std
enter
incl
shl
int3
rcl
aaa
out
out
lret
iret
ljmp
xlat
fucomp
xchg
cmc
dec
int3
mov
in
xchg
nop
in
div
icebp
out
leave
call
int
int
shr
test
mov
sar
icebp
out
out
leave
int3
xor
icebp
lret
int
repnz
idiv
sbb
loopne
lret
mov
xchg
in
cs
int3
call
add
mov
mov
mov
jmp
ret
into
sarl
rol
rcl
ja
data16
rcll
xor
aas
add
ror
cmp
fnstcw
out
aam
jmp
leave
lds
mov
shll
leave
hlt
cld
int3
cmp
in
std
sar
neg
fimuls
cmc
icebp
ljmp
cmp
ljmp
neg
repz
addl
xchg
xor
div
fnstenv
int3
xor
loop
not
aas
lock
aad
stc
cli
sti
sbb
repnz
fnstenv
ljmp
jecxz
rcl
fadd
fistpll
fimuls
decl
xor
aam
stc
in
xor
loopne
mul
mov
clc
std
add
in
mov
das
repz
enter
into
fiadds
shl
out
fsubr
mov
leave
fucomp
lock
icebp
cmp
call
aad
xlat
in
fcmovnu
ds
enter
cli
rcr
mov
repz
in
sarb
icebp
sar
in
aad
fstpt
in
loope
ljmp
sub
loope
shrl
repnz
fsubrp
fcomi
cmp
fadd
in
xchg
std
mov
loop
out
fiadds
cmc
leave
call
int
xor
cmp
cmc
mov
aad
aad
in
mov
sti
lret
out
mov
in
cmc
ret
cld
xor
xlat
test
repz
cmp
aad
aas
out
iret
out
xchg
out
fisttpll
out
test
out
icebp
out
in
stc
hlt
decb
out
iret
lock
loopne
xor
sub
stc
fcmovu
cmp
test
out
incb
aad
loop
sbb
out
ficoms
hlt
ret
aam
enter
div
div
cli
aad
test
fucomp
ds
xlat
fldl
aad
out
lock
jmp
cmp
and
mov
lret
mov
jecxz
into
fsubr
std
jecxz
test
aas
rcl
mov
fxch
lea
out
int3
xor
ss
enter
int3
clc
shl
sar
repz
adc
inc
xor
inc
ret
shl
lock
cmc
cmp
cmp
testb
addl
mul
lret
cmp
repz
jmp
repnz
jmp
mov
mov
std
iret
in
fucomip
in
hlt
rcr
xlat
in
sti
cld
sar
fcomp
sarb
ret
shl
test
out
decl
mov
shl
xor
cld
shl
std
jmp
loop
fnclex
cmc
stc
cld
sbb
int3
mov
ljmp
call
ds
xlat
cmp
aas
out
into
ret
jmp
mov
in
mov
mov
shr
jecxz
jmp
cmp
idiv
flds
xlat
orl
addb
shr
rcr
fdivrp
repnz
rcl
orl
loop
in
das
jecxz
ss
cmp
test
fadd
neg
mov
loop
in
in
nop
in
int3
hlt
divl
loop
std
in
out
ds
aam
loop
jmp
out
orl
fcmovb
fstp
lret
shll
fdiv
cmp
loope
rcr
test
in
jmp
mov
aam
shlb
aaa
leave
fidivrs
rcr
cli
ret
imul
fucom
sti
in
loope
int
icebp
loopne
fptan
clc
lock
idiv
neg
rcl
call
loopne
in
in
out
lret
xor
repz
cmp
aas
cmp
hlt
fcmovbe
decl
ljmp
lret
xor
aas
clc
hlt
lock
jmp
std
out
sbb
jmp
cmp
lret
cmp
add
jmp
out
or
int
into
xor
fdiv
cmp
loop
ret
std
clc
clc
flds
out
lret
lock
out
jmp
hlt
fld
out
mov
cmp
je
mov
mov
jmp
leave
aad
movsb
inc
jb
lea
fs
add
out
fidivrs
shl
testb
lret
icebp
adcl
imul
xor
xlat
cmp
loope
rolb
loope
mov
jmp
aaa
xor
fdiv
cmp
cmp
sar
cmc
fcmovnb
cli
sar
in
xchg
lret
call
call
fsub
out
jmp
filds
cld
in
ljmp
rorb
ret
cmp
xlat
fistpll
cmp
cmp
and
idiv
fidivrl
flds
shl
mov
int3
in
lock
fmulp
sub
fdiv
call
stc
ljmp
xlat
stc
jecxz
icebp
iret
cmp
cmp
rolb
test
into
shl
loopne
int
fdivrs
xor
sub
cmp
sar
mov
in
sti
mov
dec
imul
sub
fdiv
out
xlat
in
iret
shr
clc
shl
rol
fimuls
mov
fst
xor
clc
xlat
bnd
repz
aam
ret
in
std
fsubr
out
fdiv
aam
xor
lret
sti
cmp
rcr
rol
into
rolb
mov
mov
test
cmc
out
cmp
out
cmp
sar
aas
fmulp
test
out
stc
lret
stc
xchg
cmc
mov
hlt
lret
cli
in
out
xor
sti
std
loope
rcr
cmp
stc
movl
ljmp
aam
into
in
cli
ds
aad
jmp
out
out
shl
aad
mov
sub
loop
shr
xchg
xlat
out
rol
xor
xor
sarl
std
enter
stc
iret
ljmp
loop
enter
fcomp
cmp
fldz
neg
loop
clc
fcmovb
mov
mov
ljmp
repz
not
jmp
out
aam
add
sti
enter
jmp
rcr
cmp
fcmovu
loope
aas
in
in
lock
lock
rolb
cli
std
fucomp
aad
ljmp
jecxz
aam
ljmp
sub
lock
repz
xor
aam
cmp
cmp
cmp
fisttpl
xchg
in
out
in
sarb
cmc
rcl
sar
cli
shl
ljmp
repnz
hlt
ss
xor
jmp
fucomip
test
xlat
stc
clc
fnstsw
cli
shr
int3
ffreep
out
lea
lock
iret
in
clc
cmp
cmp
sub
cmc
stc
roll
cli
xchg
loope
repnz
cmp
lret
bnd
ljmp
roll
fstp
orb
into
xor
ds
in
jecxz
loop
loop
aam
out
and
repnz
ror
loop
out
std
lret
out
xlat
cmp
in
loop
neg
cli
mov
out
xchg
test
mov
lock
shr
clc
repnz
fsub
fchs
leave
loope
cli
xchg
mov
in
into
ljmp
ds
sarb
out
jecxz
fucomi
fadd
movl
shll
call
lock
cli
add
stc
repnz
shr
fdiv
movb
aam
xchg
repz
stc
not
fnstcw
repnz
addb
add
ljmp
jmp
fmul
std
in
in
call
orl
sub
cmp
fdiv
xor
cmp
ret
jecxz
hlt
in
mov
call
mov
lock
sti
enter
out
int
stc
fnstsw
shl
cld
leave
mov
enter
repnz
jmp
aad
shr
out
int
iret
rcl
sarb
icebp
in
jecxz
stc
out
xor
test
into
aad
clc
rol
cmc
cmp
xor
or
add
test
sub
add
add
add
into
aam
aad
fst
stc
hlt
stos
xchg
fstpt
jg
aas
add
in
jecxz
clc
mov
lret
test
mov
repz
iret
call
repnz
ljmp
into
cmp
rcr
test
movl
into
cmp
lret
int3
and
xchg
out
lret
aam
int3
cmp
div
out
out
aaa
cmp
xlat
aad
adc
cli
sarl
loop
xlat
xchg
mov
in
xchg
in
rcl
in
iret
iret
fsubr
cmp
cmp
fidivrs
repz
xlat
stc
fsubr
std
adcb
out
int
lret
sarb
icebp
neg
aaa
loop
xchg
loope
cmc
std
loope
fcoml
ss
ret
xor
fmulp
cli
cld
cmp
fisttpll
test
loop
ljmp
std
repnz
sub
stc
loope
sti
jmp
fcomi
xchg
and
cs
cmp
jmp
aas
call
fcompp
ftst
flds
mov
out
in
aad
xor
cmc
cld
repnz
rcl
rcr
fldl
out
shl
mov
fnstenv
enter
xor
ret
cmp
xlat
not
leave
enter
leave
fstp
call
das
lret
cmp
neg
clc
lret
into
loopne
hlt
fisttpl
dec
in
mov
xor
hlt
idiv
cmp
xor
xor
loop
cld
test
mov
jmp
ret
aad
cli
cmp
adc
in
repz
aad
jecxz
cli
and
mov
icebp
out
aam
clc
cmp
in
aam
repz
mov
clc
lret
cld
xchg
xchg
out
lret
out
rcr
lock
cmp
and
faddl
xchg
xchg
loop
lret
ror
cs
repnz
addb
sub
or
out
out
lret
mov
not
xor
xor
call
roll
repnz
cld
sub
into
std
ror
loopne
imul
in
in
icebp
call
in
movl
and
loop
xchg
rol
jmp
aad
repnz
test
std
shl
rol
jmp
leave
fadds
mov
loop
jmp
in
int
ror
cmp
cld
icebp
xlat
cli
stc
xlat
mov
stc
int3
mov
xchg
jmp
aad
ljmp
fadds
leave
fildl
mov
xor
lret
repnz
iret
lret
repnz
stc
aam
fcmovb
std
xor
loope
mov
test
cld
mov
int
in
hlt
ror
xlat
lock
div
fadds
jmp
mov
repz
mov
xor
xor
fmul
aad
clc
fnstcw
stc
cmp
sar
xchg
cld
out
out
fcmovnu
nop
call
aam
xlat
cmc
leave
adc
fsubp
shl
mov
aad
out
out
repnz
hlt
out
enter
cld
aad
ljmp
std
testb
test
ljmp
lret
cmp
lret
sarb
xchg
jecxz
xchg
mov
in
call
call
cmp
fadd
into
cld
lret
in
addb
flds
std
int
out
loopne
in
test
xlat
into
cli
out
jecxz
clc
in
aam
shl
fadds
xchg
hlt
in
aad
jecxz
xor
ljmp
fcmovnbe
out
fcmovu
mov
leave
cli
in
int
into
mov
out
loope
shlb
lock
sarl
cmpl
orl
fcom
ror
xor
xor
imul
in
jecxz
rcl
div
sbb
mov
mov
enter
fcmovne
hlt
hlt
push
xor
in
test
enter
out
out
repz
divb
repnz
cmp
call
push
or
mov
add
aam
aad
fstp
movsb
ficomps
ljmp
jle
clc
int
aas
fcmove
mov
loop
orl
xlat
ror
xor
aaa
std
jmp
xchg
jecxz
call
fstp
loop
in
aam
icebp
xlat
loopne
cmp
addb
incl
out
xchg
in
ljmp
cmp
cmp
cmp
fld
rcr
cld
vpaddd
xor
call
int3
aaa
cmp
xlat
into
aas
jecxz
loope
fdivr
ljmp
orb
stc
cmc
les
cld
fsubrp
lret
xlat
in
rolb
xchg
std
int3
lock
fsqrt
mov
iret
call
out
stc
push
cmp
or
in
loop
and
lret
xchg
repnz
in
fcmove
cmp
fincstp
repnz
clc
lock
cmp
icebp
shl
and
loopne
enter
sarb
leave
cmp
roll
out
flds
out
iret
in
rorb
hlt
out
fst
sti
iret
into
sar
idivl
fucom
xlat
not
loope
xlat
fisttpl
xchg
iret
repz
lret
sti
jmp
fabs
loop
cmpb
in
shl
lret
out
jmp
aam
aam
out
das
jecxz
sarb
hlt
cmp
sbb
add
out
mov
out
sti
jmp
xchg
out
in
ret
lock
lret
std
ljmp
xor
jecxz
xchg
orl
divb
fcmove
ss
out
ds
ret
icebp
les
ffree
mov
fisttpl
xchg
in
cmp
in
xlat
loopne
clc
loope
rol
in
out
lds
icebp
icebp
in
shl
ljmp
in
fcmovnb
ljmp
stc
cmp
orl
fdivl
ljmp
jecxz
test
test
out
in
ror
jmp
in
enter
shl
cld
std
fcmove
stc
xchg
fmuls
orl
ljmp
out
aad
fmull
sbb
lret
ljmp
fcmovnu
xlat
cmp
inc
aam
aad
enter
mov
mov
loop
sub
sub
xlat
push
xor
lock
loop
out
cli
std
and
call
dec
loopne
mov
out
aad
out
div
xlat
repnz
xlat
ffreep
rcr
incl
fmulp
std
or
popl
cmp
enter
cmp
lret
ret
xchg
fsubrp
int
cli
ljmp
int
cli
sti
aaa
shr
stc
cmp
fsubr
fcmovnbe
clc
in
lock
mov
loopne
mov
out
mov
sub
loop
xor
cli
fnsave
aas
in
ret
in
cli
fisttps
lock
das
out
int3
int
enter
aad
fstpt
loopne
cmp
mov
enter
aam
aam
stc
out
repnz
fcom
ss
cld
icebp
ror
sbb
lds
xor
mov
orl
fiadds
fmulp
in
test
aad
fisttpll
rorb
cli
cmp
into
cmp
jmp
fdivrs
xchg
cli
ret
test
loopne
loope
sti
rcr
xchg
shrl
aad
aaa
out
rol
div
in
lret
idivb
cmc
cli
fcomip
in
fcmovu
leave
fsubp
icebp
out
into
mov
test
ljmp
cmp
cmp
repnz
jmp
cld
in
nop
in
ror
in
cli
xor
ljmp
loopne
add
stc
out
std
testl
out
in
not
rol
cmp
aam
hlt
jecxz
loop
loop
fcomip
mov
jecxz
or
icebp
int
out
in
in
out
lock
cmc
xor
aas
in
faddp
aam
jecxz
mov
ljmp
loop
repnz
xor
in
aas
std
sar
xor
jmp
ret
lret
enter
int
cltd
movsb
imul
aam
ret
adc
aas
add
ror
and
in
loopne
fucom
fisttpl
jecxz
out
in
out
not
iret
aas
cmp
loope
cmp
div
enter
lret
lock
in
nop
repz
jecxz
jmp
out
cmp
aad
shl
loopne
in
fdiv
cmc
loopne,pt
in
repnz
int
in
jmp
xor
cld
fdecstp
cmp
cli
ret
addl
loop
mov
shl
in
aam
in
leave
xor
shl
fcmovbe
mul
add
mov
fucomip
cmp
call
leave
test
int
int3
cmp
cmp
shr
aas
sti
hlt
cmp
in
cli
cmp
loop
out
ror
out
nop
loopne
int
out
xor
xlat
int3
cmp
hlt
cmp
in
loopne
fsubr
shr
clc
int
out
xchg
out
repnz
fldpi
lock
jecxz
fnclex
out
std
loopne
hlt
sti
fildl
icebp
xchg
xchg
shl
loop
div
sti
lret
jmp
xlat
into
loop
idiv
sar
imul
leave
out
repz
or
aaa
hlt
xor
xor
sti
cmp
rolb
xlat
mov
rcl
int3
lret
clc
fadd
cmp
dec
lock
jmp
idivb
hlt
repz
enter
mov
fucomip
rol
loope
idiv
xor
int
clc
sti
fprem
shl
shr
fdivrp
jecxz
lret
out
and
shr
shll
aam
lock
ss
cmp
cmc
into
loope
ffree
add
xchg
out
xlat
ret
mov
out
cmc
shlb
repz
out
icebp
ror
rcr
xchg
ret
mov
sti
mov
ficoms
repz
not
hlt
cmp
cli
div
ds
test
ret
mov
xchg
in
nop
cmc
ror
in
cmp
aad
std
repz
xlat
clc
loop
mov
loop
out
out
enter
std
lret
in
repnz
loopne
test
or
fdivp
shr
xor
cmc
int3
in
cld
out
ds
out
xor
in
cld
fchs
clc
loop
out
loopne
incb
fsubr
jmp
stc
lock
cmp
and
aam
test
hlt
int
in
out
and
rcl
out
xor
int3
fcmovnu
cmp
ljmp
push
sbb
test
jmp
rcl
in
iret
icebp
aad
imul
hlt
cmp
jmp
orl
sar
ljmp
into
sti
cmc
hlt
shr
in
in
stc
jmp
out
lea
repnz
out
xor
cmc
xor
xor
out
jmp
in
ljmp
aad
in
aam
in
cmp
ds
fsubp
rcl
cmc
jmp
cld
cli
int
jmp
cmc
cmp
rcr
clc
cmp
out
cmc
sti
ret
test
aas
jmp
xchg
lret
out
std
cmc
aad
roll
fadd
movb
mov
ret
in
std
xlat
jecxz
sar
fdiv
xrelease
nop
lret
icebp
xchg
das
clc
lock
into
cmp
lock
sti
loope
in
cli
aam
mov
jmp
lock
cmp
fcmovne
repz
shl
sti
aaa
clc
fidivrl
mov
std
cld
jmp
mov
jmp
repz
call
icebp
testb
stc
cmp
and
xchg
sub
hlt
jmp
int
aam
cmp
ror
rcl
iret
adc
loop
aas
lret
iret
int3
xchg
icebp
loope
in
in
xor
cmp
flds
fcmovu
jecxz
cmp
orl
in
out
in
out
out
std
xor
hlt
sarl
testb
test
frstpm(287
in
jmp
out
repz
clc
clc
xor
aad
xlat
shr
fldlg2
adc
out
cli
and
mov
leave
fists
xchg
rcr
xor
aaa
aad
into
hlt
iret
icebp
shl
addl
jmp
iret
ror
fcmovnu
out
mov
insb
adc
jle
add
xlat
mul
loopne
fxtract
vpmaxsw
test
fisttpll
xlat
call
shr
fcmovnu
lock
neg
clc
mov
xchg
icebp
std
cld
addb
lock
std
aas
shl
loopne
lds
cmc
cld
rol
jecxz
jmp
lret
hlt
repnz
in
lret
icebp
repnz
neg
call
jmp
imul
addb
shrl
iret
repnz
shl
aad
out
loope
cmp
ret
addl
mov
xor
fcmovbe
iret
loope
int3
xlat
out
out
fldpi
mov
ljmp
call
aam
leave
leave
into
int
ds
fadd
out
fsub
in
std
aam
shl
ss
iret
cld
sar
fnop
lret
hlt
rcl
ss
rolb
stc
in
out
mov
xchg
into
call
call
std
fcmovnbe
aad
stc
rol
cli
mov
ds
fmulp
nop
cli
test
xor
fdivr
cmp
in
fsub
fldl2t
mov
rcr
int
iret
enter
int3
cld
jmp
rcr
cmp
in
rcr
icebp
lock
fucomi
cmc
cli
mov
jecxz
in
or
out
out
neg
xlat
leave
xor
faddp
loope
xor
out
loope
test
xchg
icebp
mov
lock
in
fidivrl
cmp
aad
cmp
fsub
fxtract
fdivr
and
int3
jecxz
int
hlt
fmul
repnz
in
fdivr
lock
sti
loope
rol
addb
jmp
xchg
iret
shrb
xor
aad
cli
shr
cmp
in
xchg
out
jmp
rclb
push
aaa
cli
jmp
fdivrl
ds
aas
ret
icebp
jmp
lds
lret
std
int
lds
xor
iret
shr
clc
movl
in
in
lret
out
fisttps
in
lock
fdivr
cld
rcr
fcomi
ret
lea
icebp
int3
out
std
jmp
icebp
repz
fsubr
cmp
mov
fcmovnu
test
orl
out
in
aam
cmp
aad
fnsetpm(287
mov
orb
xor
clc
fnsave
cld
aas
aaa
int3
cmp
faddp
jmp
out
loop
mov
repz
not
sti
aam
sti
ret
ffreep
rol
out
decl
rolb
out
in
xlat
int3
jmp
ror
icebp
xlat
aad
iret
std
icebp
rolb
loop
in
int
fidivs
hlt
repnz
vpsubsb
std
cmp
clc
aas
sti
repz
hlt
in
in
in
std
into
int
xchg
aam
stc
out
call
into
int
ret
sti
div
leave
xlat
test
fcmovnbe
test
mov
xchg
jmp
aad
iret
int3
hlt
lret
cmc
icebp
fldl
rcr
out
rorl
enter
loope
xchg
xorl
cmp
stc
xor
shl
cmp
fcmovu
hlt
aad
faddl
in
xchg
ljmp
clc
fsubr
std
sarl
xor
loop
aam
out
fsubr
cli
mov
xchg
xlat
jecxz
sarl
aam
out
leave
fcomi
cli
xchg
aas
ret
out
leave
in
hlt
test
enter
sarb
xlat
neg
xor
loope
in
clc
cmp
enter
icebp
mov
mov
int
enter
stc
xlat
xor
fiadds
xchg
jmp
fldl
out
shl
out
lds
filds
xlat
repz
fucompp
xchg
in
ljmp
aad
pushl
sti
in
int
test
xor
ljmp
hlt
xchg
xchg
repz
lret
cli
cmp
repnz
cmp
iret
xchg
shl
cli
out
jmp
mov
shl
in
hlt
stc
in
xor
ljmp
cmp
je
movl
jmp
int3
into
fmul
fsubrl
in
jecxz
sbb
movsl
adc
add
rol
test
stc
mov
into
loopne
lock
call
out
cmp
fmul
aam
icebp
cmp
out
int
decl
div
repz
call
into
cld
repnz
aad
call
test
jmp
loopne
mov
rcr
sti
cmp
sbb
test
fxch
call
xchg
icebp
xor
icebp
aad
int
bnd
shl
testl
leave
in
lret
xlat
out
cmp
jecxz
cmp
fidivrs
sar
out
into
sar
rol
out
xchg
repz
in
xchg
test
ss
repz
xor
aad
ret
test
into
mov
jecxz
divb
ror
fprem1
fdivrl
fdivrp
out
cli
sti
aam
call
loop
out
into
test
mov
out
jmp
std
fst
repnz
out
cmp
ljmp
loopne
clc
repnz
into
repz
ret
cld
fucom
jmp
fimull
xchg
loopne
jmp
xor
shr
fsubrp
jmp
cld
aas
ds
mov
hlt
ret
mov
orl
rcl
in
xor
in
loop
fstpt
mov
loop
orb
and
xor
int3
iret
enter
ds
lret
fabs
rcr
fdivp
in
loopne
mov
iret
test
xchg
in
into
aam
lock
cmp
aad
rcl
stc
out
rolb
stc
rcr
xchg
lret
out
xor
ret
repnz
std
iret
incl
icebp
call
mov
in
adcb
shl
in
rol
fucom
loope
fldl
add
mov
mov
jecxz
enter
lock
ljmp
icebp
xlat
loopne
roll
ret
xchg
out
mov
iret
jmp
int
xor
ljmp
ret
test
cmp
movb
roll
aaa
fidivl
shr
stc
ljmp
loope
icebp
cmpb
fildl
nop
out
mov
out
xor
loope
cmp
fstpt
fsubr
lock
jecxz
shr
std
repz
movb
jecxz
shl
into
call
div
test
cld
ret
test
loopne
leave
and
out
aam
xor
clc
sbb
xchg
loopne
ljmp
xchg
lock
loope
shl
rcl
lock
aas
repz
mov
int
fucomi
test
sub
rcl
rol
cmp
ret
call
sti
cld
fdiv
lret
jecxz
adc
in
iret
in
enter
idiv
jmp
out
stc
std
jmp
xchg
out
xchg
shll
fst
in
out
in
xchg
xchg
mov
aad
leave
fldpi
cld
cmp
aam
in
shl
cmc
cmp
lret
test
int3
jmp
jmp
into
cli
ret
fst
aad
test
test
mov
adcl
ss
call
rcr
ret
add
test
mov
in
xor
loop
xor
out
cld
out
lret
into
in
repz
rorl
call
in
ljmp
ljmp
cmp
out
mov
stc
xchg
out
into
mov
out
cmp
jmp
in
sti
std
lret
aas
cmp
call
loope
out
lock
orb
lret
in
ror
sti
cld
in
test
cmp
hlt
fcmovu
iret
mov
fdiv
fmulp
xchg
ss
cmc
enter
xlat
std
fsub
into
aam
clc
fst
or
std
enter
int3
bnd
xlat
into
in
aaa
repz
rorl
add
ret
ror
aam
mov
sti
nop
out
sbb
jle
rolb
rolb
in
call
out
fidivrl
int3
add
cld
cmc
in
cli
ljmp
loop
in
aam
cmp
cld
aas
rcl
stc
xchg
call
mov
test
shr
call
cmp
jecxz
xchg
clc
jecxz
out
stc
cld
out
repz
iret
xor
xor
idivb
fxch
fucomp
fstp
fcom
icebp
mov
loope
testb
not
int3
shlb
xor
lret
jmp
lock
xlat
mov
std
std
jecxz
int
int
decl
repz
in
bnd
int3
aad
fstp
ffree
ret
orb
into
xor
loop
loop
fsqrt
rcr
stc
in
not
fcmovnb
sar
cmp
cmc
aam
inc
faddl
in
out
xor
ljmp
fidivrl
ds
shl
stc
into
out
ljmp
loop
fcom
out
ds
clc
in
aam
addl
shl
xchg
rorb
cmp
lret
into
loope
in
roll
cli
out
nop
jecxz
loop
loope
ljmp
shl
test
rcl
aas
mul
faddl
ljmp
div
hlt
xor
xor
sbb
cmp
stc
leave
fucomi
in
cmc
ljmp
out
hlt
int3
aad
cmp
cli
jmp
xor
shr
div
cmp
xchg
cld
fisttpll
xchg
sub
in
jmp
in
cmp
cmp
jmp
mov
aam
mov
das
in
xlat
not
icebp
xor
in
out
cmp
aas
rorl
fsub
out
in
test
xor
out
shr
cmp
fucom
xlat
std
hlt
enter
mov
in
std
shl
call
jmp
aad
cmc
cmp
icebp
cmc
ret
leave
fmul
jmp
cli
nop
add
rcl
xor
aam
cmp
std
icebp
loope
aam
sbb
lret
loopne
call
aaa
mov
sti
hlt
iret
in
clc
les
adc
jmp
in
ror
cmc
test
xor
ljmp
jmp
clc
in
xchg
cmc
aam
cld
int
int3
shl
loope
int
rcl
iret
clc
cmp
xlat
xlat
test
ret
adc
fxch
fdivp
rcr
loope
xlat
xlat
hlt
div
out
rcr
jmp
fdivp
cld
mov
ror
call
in
rorb
lds
ror
lock
xlat
icebp
sti
clc
leave
lret
call
ljmp
shll
clc
cmp
int
std
aam
ret
les
sti
cld
out
loope
in
in
out
icebp
xchg
into
out
leave
out
ss
lret
jecxz
xor
xor
in
xor
addl
loop
xlat
leave
jmp
cli
fucom
imul
rcl
aad
test
ret
loop
test
fbstp
cli
out
cmc
int
into
icebp
sar
fdivr
shl
fsubr
xor
nop
jecxz
in
repz
ljmp
cmp
cld
int3
repnz
in
fst
stc
cmp
jmp
hlt
iret
repnz
divb
out
hlt
hlt
in
stc
or
int
fidivrl
in
fmulp
mov
out
ficoms
into
enter
in
enter
sbb
iret
int3
repnz
loopne
stc
loope
sub
jecxz
rcl
jecxz
out
neg
ss
icebp
fcmovbe
ds
aas
aas
roll
mov
shl
or
loope
cmc
rcl
aaa
in
int3
call
cmp
in
orb
mov
loop
out
fdiv
incl
loopne
iret
ret
lret
test
mov
xorl
aad
ror
aad
icebp
sar
and
inc
in
mov
jmp
xlat
lret
aad
aad
int
jle
and
scas
and
aas
add
jmp
in
nop
int3
in
out
lock
loope
les
rcr
std
neg
sar
repz
loopne
in
call
cmc
mov
fdivr
loop
shl
in
xor
cmc
fidivrs
shll
aam
lock
rol
cli
mov
xchg
mov
mov
cmc
xor
in
aam
ds
test
call
clc
fnstsw
sbb
loop
cmp
stc
aaa
cld
xor
ror
test
cmp
repnz
aam
sar
shl
iret
shl
repnz
sti
fcmovbe
hlt
lret
cli
xor
cmc
in
stc
jmp
out
mov
fucomip
xchg
shl
ss
sbb
stc
inc
incb
rcr
out
test
jmp
cld
out
cld
fdivrl
shl
hlt
xlat
cli
jecxz
xor
cmc
fxch
mov
imul
iret
in
repz
ss
xor
cmp
fcompp
out
cmp
std
lret
fstp
shl
xchg
les
in
int
repz
cmp
clc
loop
roll
fsubr
hlt
loop
mov
lret
cmp
icebp
lret
int
loop
out
loope
inc
mov
in
call
mov
ror
fucomi
aad
imul
lock
in
loop
stc
loope
orb
out
shl
shl
leave
xor
idiv
cmp
cmp
icebp
test
jmp
repz
fsubp
loopne
in
lret
lret
in
sar
lret
fcomip
idiv
shl
faddl
lock
xchg
in
out
clc
cmp
cli
icebp
jmp
stc
loopne
sar
clc
fcmovnbe
out
xlat
mov
push
call
cs
std
loope
cmc
iret
icebp
and
loopne
fisttpll
fst
cmp
xor
cmp
fsubr
add
jecxz
lock
fldl
loop
aad
fcmovbe
fldl2t
jmp
aas
std
clc
add
fsub
mov
test
out
nop
mov
aad
out
hlt
aad
out
mul
shl
cli
les
in
out
into
std
shl
shrb
hlt
test
xor
icebp
fcmovnbe
out
shl
shr
std
or
repz
xchg
ret
cs
ss
enter
incl
out
jmp
mov
sbb
loope
lock
jmp
cld
repnz
aas
xlat
clc
int3
iret
aam
and
mov
loop
mov
sub
aad
enter
cmp
out
out
cmc
ret
repz
stc
fmull
std
or
fucomip
xor
test
stc
imul
stc
fldlg2
fcmovbe
sti
cmp
mov
lret
lret
mov
cmc
shl
xor
lock
jmp
cmp
fst
testl
mov
xchg
enter
xor
jmp
not
shl
ffreep
sub
in
sti
int3
stc
xchg
mov
aam
ss
aad
int3
aad
xlat
clc
aam
aad
shl
aad
in
jecxz
test
out
loop
cmp
cmp
das
hlt
fstp
shr
int
fsub
hlt
icebp
mov
xchg
in
std
test
orl
enter
cmc
out
sarb
out
cld
hlt
rcl
ret
or
mov
jmp
in
int
out
cmp
hlt
fnsave
jecxz
xchg
leave
in
test
out
in
xchg
sub
leave
test
xor
in
call
test
shl
mov
xlat
sbb
ljmp
lret
sub
shll
aas
incl
clc
mov
orl
in
shll
lock
clc
fdivr
jecxz
stc
enter
cli
out
shl
in
repnz
ljmp
int3
repz
in
loopne
int
cmp
loop
imul
in
xchg
or
xchg
ret
xor
shll
fdivrp
iret
aas
sar
fprem
jecxz
add
inc
lock
xor
lea
mov
jmp
lret
rcr
aad
fsubr
xor
aaa
jo
jg
aas
add
repz
out
mov
rolb
loope
in
xor
enter
xor
test
in
mov
cld
leave
xchg
ret
cmc
iret
xor
call
cmp
shl
in
lret
call
repnz
lock
lret
repz
cmp
aaa
cmp
ret
out
iret
xlat
fdivr
cmc
out
mov
out
mov
fsubr
jmp
cli
stc
testb
test
loopne
xchg
in
cmc
ror
out
cld
stc
fidivrl
fdivp
cmp
stc
fadd
repz
test
jmp
sub
shll
aam
ror
cld
neg
cmp
clc
idivb
cli
loop
cld
lret
in
call
iret
int3
int
repz
cli
int3
fdivr
rcl
repnz
filds
out
orl
mul
aaa
mul
out
clc
repz
ss
into
fnstenv
lock
out
ds
sub
mov
in
out
cld
leave
cli
std
in
cmp
cmp
test
in
lds
int3
xchg
out
cmp
cmp
aas
shl
addb
in
cld
fucomip
fdivrp
mov
icebp
loop
repz
aam
cmp
lret
cmp
ljmp
in
std
std
icebp
icebp
aaa
xor
jmp
ds
into
int
fst
repnz
aad
loop
fildl
jmp
in
divb
aaa
cmp
fucomp
ss
ds
xchg
jecxz
flds
loop
int3
clc
icebp
clc
aaa
enter
rcl
repz
fdiv
loopne
ret
idiv
fsubrp
repz
test
out
xor
call
xlat
sar
ds
clc
mov
sti
leave
jecxz
fst
xchg
call
in
cld
loopne
lock
aaa
rcr
in
testl
std
ljmp
shr
cmc
ljmp
aad
aad
loope
mov
leave
adc
in
xor
ss
in
in
repz
repz
ljmp
iret
in
fucomp
sub
jmp
cmp
cmc
lret
loope
int3
xlat
test
ret
loope
test
lret
in
in
mov
xchg
cmc
ror
call
in
addb
cmp
call
lret
cli
lret
std
test
enter
out
ss
ss
fdivp
jmp
repnz
sbb
xchg
fisttps
jmp
test
xchg
lock
cmc
enter
cli
aad
ljmp
repz
cld
clc
fmul
nop
fsubrp
shl
in
popl
cmp
sarl
iret
loope
lock
sbb
fdivr
or
jmp
fmul
int
int
faddp
icebp
fmul
loope
fiadds
out
mov
popl
mov
sub
shl
cmc
fdivs
rcr
loope
sarl
fiaddl
cli
cli
fucomp
fabs
xchg
in
int
fidivrl
aas
cld
fcmovnbe
faddp
sbb
or
jmp
int3
cli
out
iret
adcl
rcl
xlat
icebp
cmp
sar
xlat
hlt
fsincos
faddl
in
in
shr
lret
cli
xlat
xlat
cmp
sarl
fiaddl
jmp
in
in
lock
cld
xchg
lock
cmp
icebp
icebp
sti
lock
out
repz
fcmovnu
iret
loopne
mov
aam
imul
sarb
xlat
out
repz
xor
xchg
repnz
int
xchg
in
sub
sti
in
aaa
ss
jmp
test
fpatan
loop
cld
inc
mov
lret
mov
lret
enter
div
shl
cmp
aas
xor
loop
in
enter
into
into
rol
iret
in
icebp
jmp
jmp
std
ljmp
fld
fcmovnbe
dec
in
out
fxch
out
ljmp
fadd
sar
out
cmpb
fcomip
icebp
sar
inc
or
jmp
jmp
ret
iret
enter
int
xchg
cmpsb
push
ja
mov
jg
aas
add
out
stc
fisttpll
xchg
shrb
jmp
fcmove
cmc
test
aad
addb
cmc
and
incl
in
int
xor
fnstenv
hlt
roll
xor
xchg
sbb
div
out
sarl
lock
aam
repz
lock
jmp
into
sbb
xchg
out
repnz
div
cld
xor
ds
ret
loope
xor
dec
lret
out
movl
leave
fld
cmp
ss
cmc
cmp
frndint
in
in
aas
loop
cli
lock
int
shr
ss
frndint
cli
call
aam
aad
fcmovnu
ret
fldl
lea
div
cmc
divb
fstpt
xor
fildl
testl
jmp
cmp
int
fyl2x
repz
cmp
mov
or
in
sub
out
cmp
int3
out
shl
cli
xlat
icebp
fstpt
iret
aad
xlat
testl
xchg
in
in
xor
ret
clc
into
xlat
sti
cli
out
in
cmp
idivb
cmp
sub
fiaddl
fsincos
into
jecxz
loop
neg
leave
out
ljmp
cli
out
mov
stc
test
loopne
iret
push
in
call
lret
push
fcomi
sarb
loopne
idiv
shl
mov
fcomp
ljmp
shr
jecxz
cli
leave
roll
loope
std
in
out
int3
ljmp
ds
aam
fndisi(8087
mov
mov
clc
ret
xchg
jmp
in
xchg
into
xor
shl
cmp
cli
fdivr
out
call
fisttpl
lret
faddl
stc
std
int
shl
cmp
rcl
filds
cld
leave
in
xchg
icebp
out
adc
ret
enter
jmp
leave
jmp
cmp
rcl
cmc
cmp
ljmp
int3
lock
fptan
hlt
stc
cmp
fcomp
in
fstp
aam
out
and
lret
or
lock
imulb
cs
fmul
out
iret
fiadds
fcom
hlt
or
out
sbb
ror
xchg
out
out
sub
call
cld
aam
out
cmc
test
fsubrp
fcmovnu
cli
call
jmp
xlat
repz
test
or
fcmovne
jecxz
out
rolb
int
icebp
rcr
xchg
ret
divl
hlt
aam
xor
xlat
lret
fdivr
ret
ds
test
fcmovnb
fstp
testl
div
aaa
shl
jmp
in
cld
xlat
into
cmp
icebp
mov
int
fsin
mov
xlat
das
xor
div
sti
jmp
hlt
cmp
repz
hlt
aam
enter
testl
test
hlt
rcr
cmp
loopne
fyl2x
shl
xchg
testb
hlt
in
hlt
das
fmul
ds
fdivr
mov
fnstsw
cmc
mov
in
mov
fmulp
xchg
jmp
repz
ds
sar
int
shl
addl
repnz
aam
mov
cmp
jmp
loope
fidivrl
fildl
xchg
fdiv
xchg
jecxz
repnz
int
xor
shlb
sti
fldl
add
fisttpl
enter
into
shll
idivb
fcmovnu
sti
neg
test
mov
shr
mov
in
dec
xchg
fmull
cmc
lret
xor
enter
fsubp
fistpll
sti
loope
aas
adc
int
loopne
stc
cmc
fnstenv
cmp
fnstsw
lock
sti
icebp
aam
repz
lret
testl
divl
repz
out
cld
cmp
lock
shl
sti
fdivr
test
mov
jecxz
out
in
std
icebp
jecxz
ror
xor
push
fcmovb
rol
ret
adc
mov
xor
mov
jmp
lret
fst
int
test
cmp
bnd
aas
add
leave
enter
fnclex
into
mov
xchg
lock
lret
shr
stc
jmp
rcr
jecxz
lret
mov
mov
in
in
fmul
fcmovne
rol
shl
repz
lret
into
loope
in
ficoms
cmp
int3
out
lret
stc
not
cld
clc
xlat
loope
cmp
fisttpl
call
divb
sti
call
out
test
fcomp
leave
stc
jmp
sti
fsub
xchg
into
xchg
test
idiv
cli
hlt
sar
fmul
ss
out
aad
out
sbb
lds
loope
sarb
test
repz
out
leave
cli
in
std
out
addl
lret
into
fbstp
sbb
stc
test
xchg
xlat
in
ret
loop
int3
fdivrp
repnz
fdiv
divl
cmp
ret
mov
xchg
out
in
repnz
cmp
jmp
into
cmc
std
xlat
mov
mov
hlt
loopne
in
xchg
fcomi
fmull
clc
fcmove
sti
aam
icebp
icebp
in
shr
sbb
icebp
stc
lret
lret
jecxz
jecxz
xchg
out
xor
jmp
loope
ret
repnz
repz
add
and
ret
lret
in
xchg
aad
aam
fidivl
lock
cmp
ds
mov
call
std
lock
lret
enter
cmp
cmp
jmp
ffree
fucom
xchg
fsub
in
lret
out
xor
aaa
xor
icebp
xlat
ljmp
test
incb
call
in
orl
jmp
fucom
ret
fcomi
shl
mov
jecxz
out
fcmovbe
in
xchg
lea
xor
fcomi
hlt
aaa
fcos
fcmovnbe
shl
aad
fcmovnu
in
fldl
aam
loop
repz
sub
cmp
cmp
jecxz
test
sti
sbb
lret
mov
in
decl
loop
cld
aam
jmp
ds
repz
call
mov
test
out
cmp
aad
xor
cmp
aam
xlat
xchg
xlat
out
addl
ret
divb
fld
xor
loop
cli
out
fsubp
xchg
cli
mov
cmc
mov
ljmp
fcmovne
aaa
std
std
loopne
repnz
aam
cli
cmc
xchg
sub
out
in
in
aad
out
lock
cli
ss
xlat
repnz
cli
cmc
xlat
out
ret
loope
sti
sti
flds
rolb
fincstp
fdivr
fcmove
int
dec
sti
in
cmp
ds
mov
in
call
xlat
ss
ret
fxch
cmp
rcl
fdivr
div
fiadds
lock
cld
in
xchg
jmp
xlat
icebp
ret
jmp
out
xlat
loop
and
shl
cld
mov
fsub
int3
repz
sub
divb
ror
int3
ljmp
ret
loope
enter
out
movl
loope
ss
xor
aas
shl
in
hlt
cmp
fiadds
into
lea
out
int
xor
fcmovnbe
rcr
repz
into
jmp
rcr
sarl
fadd
loopne
into
lret
xchg
ror
repnz
xlat
loop
aaa
xor
fcmovu
shl
aam
aad
shl
decl
in
mov
lret
out
fcmovne
ljmp
mul
loop
adc
hlt
lret
movb
loope
out
xor
clc
cmp
in
cmp
ret
and
leave
jmp
incb
in
loopne
aaa
in
fxch
cld
stc
leave
idiv
and
sub
cmp
jecxz
cmp
jmp
loope
fucomi
mov
icebp
fprem
xor
in
adc
rcl
stc
fdivr
sbb
mov
xchg
mov
into
clc
repz
ljmp
std
cmp
out
out
add
mov
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
push
adc
jmp
xlat
ffree
xor
pop
out
fwait
aaa
mov
jg
scas
add
mov
int
xchg
xchg
loopne
mov
loop
jmp
lret
fcom
out
rol
stc
incl
int3
loopne
ret
sarb
clc
aad
cmp
ds
shr
roll
jecxz
leave
ljmp
ljmp
iret
fcomi
enter
fcomi
test
in
ret
cld
fcmovnb
or
into
loop
adc
jmp
enter
ds
cld
fsubr
adc
jmp
xchg
fstp
ror
xor
in
xlat
stc
cmp
shl
shl
lock
loopne
leave
out
xchg
lea
ss
div
fcomi
in
clc
cmc
sbb
incb
mov
std
lret
lret
xchg
in
das
in
cmc
xor
sti
aas
ror
repz
addb
les
out
std
mov
xor
stc
xor
cmc
hlt
bnd
cli
add
in
fstp
addb
int3
cmc
xor
lret
lock
aaa
cmp
std
ret
hlt
fst
call
mov
nop
jecxz
lock
jecxz
int
test
lret
cmpb
xor
aad
fsubrp
in
fadd
jmp
ljmp
xlat
das
cmp
in
rcr
fdivr
icebp
into
cmp
jecxz
out
in
leave
out
in
leave
icebp
test
loope
out
in
xor
cmp
jmp
lock
aam
mov
cmp
hlt
loop
fcmove
in
stc
enter
test
test
loopne
xlat
out
fsubr
cli
sti
rorb
lock
cmc
aad
loopne
sar
testb
aam
xlat
bnd
jmp
xor
xor
sti
int3
out
cld
rcl
in
test
fsubr
repz
xlat
enter
in
std
testl
ljmp
cli
repnz
and
sar
clc
ljmp
aam
out
sbb
lds
sbb
xchg
hlt
lock
xor
in
clc
ror
cmp
ret
repnz
lock
lret
vpaddusb
lret
into
repnz
into
cmp
ds
std
test
clc
repnz
movb
shl
xlat
lret
clc
sti
neg
cmp
cmp
clc
shl
xlat
loop
flds
ror
xchg
fdivp
lret
rol
jecxz
ss
repnz
int
out
hlt
cmp
std
fcomp
stc
mov
mov
repnz
stc
ror
aad
ljmp
fcmovnbe
aad
div
stc
ffreep
out
fmull
and
ss
lret
jmp
cmp
shl
int
bnd
sti
jecxz
jecxz
leave
lret
mov
xor
ret
out
fsubr
into
cmp
incl
aas
sar
movb
fneni(8087
addl
idiv
fsubr
repz
loope,pt
fsubp
ret
incb
ror
and
jecxz
sti
ljmp
icebp
fdivr
in
cmp
lea
out
ljmp
leave
das
jmp
stc
ss
jecxz
loop
filds
stc
addl
xchg
leave
ret
aaa
cs
enter
in
int
int
xchg
jmp
in
clc
lret
iret
test
iret
lea
in
repz
xor
sbb
mov
rol
stc
jecxz
in
nop
mov
lock
loop
in
loop
in
fsubrp
icebp
cmp
test
loopne
sar
ljmp
fucom
icebp
shl
int
in
cmp
fdiv
fsubrp
aad
roll
in
cli
ret
out
jmp
call
stc
sarb
aad
loopne
enter
in
call
xchg
cmp
xlat
shl
repz
ds
ds
ret
in
mov
test
mov
cmp
cld
rolb
loop
mov
test
loope
jmp
test
icebp
loopne
out
iret
repz
sti
xor
repnz
cld
in
out
and
in
rorl
into
sti
enter
fsqrt
sti
cld
dec
repz
jecxz
and
addb
rol
out
xlat
fsqrt
fcmovbe
repz
jmp
jecxz
loope
stc
xchg
mov
xchg
int3
icebp
xor
jmp
inc
clc
and
mov
leave
add
add
rol
rol
or
push
aaa
ret
sahf
pushf
push
in
jg
scas
add
ss
fmul
cmp
faddl
lea
test
dec
test
enter
cmp
hlt
fdiv
hlt
ds
sti
xor
out
std
xchg
mov
xchg
call
fdivrl
out
iret
xor
loope
cli
xchg
loope
sbb
ljmp
into
xor
shl
cmp
aas
repz
mov
mov
call
jmp
in
xor
mov
div
rcr
sar
rcr
aad
lret
decb
xchg
das
repnz
in
repnz
roll
rcr
test
not
out
fcmovnu
sub
in
shl
int3
fsub
sub
cli
ror
aam
incl
jecxz
jecxz
sub
out
nop
orl
leave
aaa
fidivrl
jmp
in
loopne
int3
in
cmc
clc
out
mov
call
int3
mov
mov
sarl
cmp
lock
ret
loop
loopne
and
leave
iret
mov
out
hlt
mov
mul
out
lret
ljmp
fucom
mov
clc
out
int
out
int3
mov
into
cmc
in
ret
div
iret
lret
fstpt
cmp
sbb
out
xlat
fcmovnu
faddl
addl
iret
jecxz
ror
cmp
xlat
cmp
sti
fsubp
ret
ret
stc
int3
loopne
out
iret
jmp
call
leave
sarl
cmp
cmp
xchg
jmp
filds
call
lock
stc
out
leave
ror
call
loop
out
adc
call
rorl
mov
aad
into
into
cmp
shr
enter
loope
adc
testl
aad
loopne
jecxz
jecxz
in
aaa
std
into
cmp
ret
clc
iret
jecxz
fdivp
mov
loop
loop
out
std
mov
in
xor
out
std
cmp
rolb
jecxz
loop
test
jmp
out
filds
sub
in
repz
idiv
hlt
aas
cld
hlt
std
ljmp
leave
int
out
into
ror
xor
jmp
fidivrl
leave
cld
adc
repnz
icebp
sar
lds
int3
fxch
push
int
out
aaa
xlat
xor
lret
lock
out
icebp
fucomip
stc
cli
loop
out
rol
lret
or
and
mov
mov
repnz
xor
leave
in
repz
cmp
idivb
aam
sar
jmp
out
xchg
out
out
imull
out
hlt
out
hlt
fptan
enter
int3
shl
rol
test
cld
call
clc
ret
nop
xchg
int3
in
xor
fcmovu
loopne
flds
icebp
loope
test
jecxz
cld
in
ljmp
rcl
int3
ljmp
ret
aad
icebp
loopne
mov
xlat
ret
idiv
out
xchg
rcl
icebp
mov
icebp
in
lret
jmp
cmp
loop
cmp
in
neg
fadds
std
jmp
cld
out
xor
xor
cmc
ljmp
sti
and
aas
ror
in
out
and
in
mov
fcoml
shl
in
fcmovu
aad
cmp
xchg
mov
jmp
xchg
xchg
xchg
leave
xor
lret
cmp
ljmp
xlat
jecxz
cmp
lret
mov
jecxz
addb
xor
fcmovbe
rcl
ret
icebp
repz
int
test
mov
repnz
cmc
aaa
fdivr
sarl
cmp
out
push
int
push
adc
out
in
sar
or
out
cmp
out
repnz
aas
ljmp
aam
in
int3
call
out
xchg
hlt
stc
aaa
cmc
cli
iret
vpsubq
into
cmpl
fadd
aad
inc
enter
fistl
out
mul
in
jmp
xlat
loopne
lds
flds
or
lret
xchg
shlb
out
cmp
int
out
in
incl
in
out
std
out
test
icebp
lea
fdiv
aaa
loopne
out
jecxz
ret
cli
rcl
shl
sti
mov
mov
fsubrp
loop
mov
lret
ljmp
fcmovnbe
stc
iret
aas
xlat
test
mov
out
test
fdivr
mov
out
shr
ret
sub
fcmovbe
ss
sarl
fnsave
sar
cmp
clc
cld
loop
ds
movl
iret
jecxz
cmp
into
jmp
in
inc
call
aad
movl
jmp
enter
fxch
shll
or
stc
xchg
ficoms
add
test
icebp
out
fmulp
jmp
aaa
jmp
fidivrs
ror
filds
jmp
or
enter
call
lret
xor
dec
not
cmp
rolb
clc
lret
mov
loope
cmc
mov
rol
sub
loopne
int
in
cli
loope
mov
fdivr
fistl
iret
in
out
jmp
clc
xor
cli
sti
ffreep
hlt
aad
xchg
lret
addl
rcr
cmp
xor
fadds
icebp
call
filds
filds
ror
loop
lret
cld
shr
xor
repz
jecxz
jecxz
out
enter
xor
loope
out
in
lock
shl
ljmp
nop
ljmp
rcr
div
lret
loopne
xchg
sbb
fsts
fdivp
xor
aad
cli
clc
fxch
sti
cmp
cmp
sti
faddl
leave
enter
jmp
mov
shl
xor
cmp
cmp
cmp
rcl
xlat
cmp
mov
loope
lock
out
aam
mov
in
repz
hlt
int3
rcl
repnz
std
cld
lds
movl
leave
xlat
xor
out
jmp
aad
aad
fsubp
ret
call
fstp
fucomi
xchg
mov
jmp
das
cli
aaa
cmp
fdivr
lock
stc
out
leave
fsubrp
fmuls
fisttps
das
clc
stc
lock
fxtract
cmp
aam
clc
repnz
cli
decl
sbb
cmc
call
in
lock
fildl
leave
leave
loope
mov
test
lock
xlat
iret
std
loopne
cmp
loop
ret
sar
out
jmp
in
mov
lea
shl
leave
xor
ss
cmc
ffree
in
ror
rolb
ljmp
call
out
aad
fcmovu
ss
out
loop
jmp
cmp
jecxz
out
sti
xchg
cld
fucom
loopne
xor
jmp
xor
out
hlt
leave
repz
int
fucomip
aad
mov
fabs
std
leave
mov
aaa
clc
out
lock
leave
xor
hlt
cmp
xor
jmp
loopne
jecxz
lock
aam
lret
lock
jmp
iret
loopne
rcr
test
in
sti
ds
out
xchg
enter
in
aam
lret
cmp
jmp
shl
ret
rcr
lds
xchg
int3
into
rcll
repnz
cmp
in
cmp
call
std
loopne
call
test
aad
out
hlt
xor
xor
jmp
faddl
and
iret
call
mov
in
cmp
fmul
in
out
sbb
aad
imul
and
xchg
rcl
xchg
iret
shll
stc
fcmove
out
cld
cmp
cld
jecxz
rcr
cmp
jmp
mov
loopne
ret
fucomi
mov
shr
hlt
in
fxch
aam
into
cmp
xlat
test
cld
loopne
cmp
cmp
aam
leave
out
xchg
xchg
leave
cmc
fdiv
xor
int
stc
fmul
lock
and
jmp
cmp
out
cld
in
xorb
xor
cmp
ljmp
fmul
testl
mov
xor
ds
stc
lock
fninit
aad
lret
rclb
xor
shl
icebp
cmp
xor
loope
sar
clc
shl
out
cld
test
into
xchg
fsubp
call
icebp
out
neg
aas
shl
xchg
in
std
mov
orb
repz
into
div
fmul
ljmp
fistpll
aaa
test
ffreep
lret
jecxz
fmul
repnz
call
cmc
int
ss
sar
out
rcl
test
fcmovnu
imul
out
loop
rcl
lret
in
aam
out
aad
fildl
loope
lret
mov
roll
xlat
divl
rcr
ds
filds
fcomip
hlt
mov
mov
call
faddl
in
hlt
repz
aam
aad
loope
cld
ds
cmp
loopne
fiadds
in
not
ret
into
int
aad
mov
push
xor
add
mov
sub
xor
mov
sub
jmp
sarl
aam
aam
fcmovne
inc
cwtl
sbb
inc
sarb
add
loopne
std
cmp
fldl
fxch
int3
int3
mov
mov
jecxz
jecxz
loopne
ror
aad
fcomip
fcmovnu
repnz
test
cmp
lret
aam
fldlg2
ret
decl
xor
aam
cmp
rcl
cmp
test
repz
mov
orl
leave
icebp
xor
xlat
cli
xor
aad
rcl
sti
fcom
fsub
ret
fdivr
ret
mov
jmp
shl
xor
stc
xor
cld
hlt
cmp
filds
xchg
test
sub
test
in
cmc
aas
shrb
cld
cmp
lock
vpavgw
fcmovb
fdivp
fsub
nop
cli
fisttpll
vpsubsb
div
cmp
icebp
int3
cmp
stc
icebp
ds
mov
test
in
shl
in
test
rol
ss
xor
ds
lock
iret
flds
lret
out
fnsetpm(287
ficoms
repnz
lock
rol
aas
ret
out
fsubr
fmul
jmp
fimuls
aam
lret
repnz
iret
mov
cmp
out
imul
lock
enter
push
out
fdivrs
into
cmp
jecxz
in
leave
mov
mov
cld
iret
lret
xchg
fbstp
xabort
fdivrs
jmp
into
mul
cli
fiadds
in
mov
shr
fisttps
fnsave
xor
ds
xor
shl
xchg
xlat
decb
rcr
in
aam
sub
test
aad
lret
ret
fcmovu
aas
cld
hlt
shl
faddl
enter
test
lock
call
aas
lret
int
rol
bnd
leave
mov
fcomi
out
rcl
orl
test
shl
call
cmpl
mov
loop
rorl
cmpl
ljmp
jecxz
fcmovnbe
iret
rol
aam
or
loop
mov
repz
std
lock
sbb
sbb
aad
cld
std
int3
mov
hlt
mov
xor
dec
in
leave
fmulp
lock
addb
and
and
jmp
shl
repnz
rcr
cmp
lock
stc
loope,pt
clc
std
test
fucomi
in
shr
mov
lock
aaa
repz
xlat
xor
sti
jmp
fldl
filds
in
div
cmp
jmp
cmp
sti
sbb
out
cld
fucom
cld
cmp
icebp
aad
fcmovnbe
out
jmp
fsubrp
out
movb
enter
jmp
int
xchg
cs
aaa
call
out
fiadds
fcomip
leave
clc
enter
and
test
shl
shr
cli
out
xor
sti
int3
loope
cmc
fscale
ret
loope
lock
rorl
ss
clc
in
sar
in
ljmp
shl
fisttps
in
in
hlt
shll
fsub
fdivr
jmp
cmp
xlat
sti
ret
xchg
rcr
xor
ljmp
repz
out
icebp
in
ror
dec
sti
div
out
sar
mov
out
lret
xchg
xchg
xchg
call
into
out
jmp
xor
ss
sti
xlat
std
cld
mov
enter
out
in
jmp
das
lock
aad
ror
cld
aas
sar
ret
in
aad
rcr
mov
hlt
call
rorl
lret
in
cmp
cmp
fdiv
ffreep
fidivrl
icebp
cld
out
cmc
ret
loop
push
cmp
and
icebp
cs
imul
int
jmp
sarl
cli
loope
repz
lret
shl
icebp
cli
xor
aas
cmp
int3
loope
fcmovnbe
test
repz
std
imul
xor
ror
cli
xor
cmp
cld
jecxz
out
std
rolb
mov
in
ror
shr
aad
cmp
aad
jmp
int3
vpslld
sbb
out
int
lret
into
out
mov
lret
repnz
cmp
aad
fidivrs
ret
xchg
fisttpl
mov
les
clc
sub
jecxz
out
out
ljmp
rol
fcmovne
mov
add
int3
xchg
xchg
test
not
xor
lret
clc
out
repz
sar
in
cmc
in
in
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xor
xor
xor
or
jmp
int
fcmove
fstp
adc
js
lods
xchg
gs
test
jle
fmull
xchg
out
shl
cmc
sarb
cmp
cmp
cmp
icebp
loopne
sti
into
ljmp
out
fcom
icebp
fdivr
in
leave
lret
xor
cli
fldl
loop
iret
incb
out
cld
in
cmp
rol
std
test
orl
cmc
sub
sarb
rcr
cmp
cmp
std
out
stc
out
sub
jmp
lock
out
cmp
cmp
out
icebp
cmp
aam
shl
hlt
lock
xchg
mov
stc
cmp
incb
xor
lret
idiv
faddl
out
ret
mov
stc
ret
in
lea
mov
lock
cmp
fst
repz
sar
cld
aad
xlat
xchg
xchg
std
mov
icebp
xor
fidivrs
ds
shl
loope
loopne
fadd
fsubr
mov
clc
fsubr
mov
in
fiadds
icebp
call
sbb
fsub
incb
mov
cld
test
call
loopne
out
xor
lock
cmp
aam
int
xchg
jmp
xchg
fdivp
mov
filds
call
int
hlt
xlat
iret
jecxz
iret
lds
filds
or
icebp
ror
fnstcw
hlt
xor
fcmovnu
in
ret
out
xchg
in
xlat
icebp
hlt
xlat
fcmovu
das
aaa
cmpb
idiv
in
cli
aam
loopne
incb
ret
loop
mov
int
lret
hlt
xlat
repnz
icebp
icebp
ror
cmc
xlat
aas
fmuls
fsubr
iret
loope
out
lock
into
cmp
les
cld
and
out
ret
hlt
ljmp
lret
out
mov
shr
leave
into
out
lock
sti
jmp
in
out
mov
fcomp
lret
lret
repnz
repz
lret
rcr
cmp
std
cmp
cld
in
incl
shr
xchg
hlt
cs
imul
rcr
lret
fdiv
repnz
shl
fcomip
xchg
repz
addb
addl
in
fdiv
lret
out
mov
cli
loopne
xchg
ljmp
int
xlat
in
cli
ss
ss
clc
rcl
faddp
or
repnz
stc
fcmovu
int
ljmp
in
in
cmp
not
lret
loopne
iret
xlat
aad
rcl
cli
fildl
cli
hlt
lret
out
call
idivl
fnstenv
sarl
fucomip
fincstp
test
jmp
call
enter
fcom
cmp
repz
fmul
xchg
xlat
hlt
fadd
lret
out
cli
addb
ret
loope
in
idiv
lret
clc
xor
repnz
aam
out
cmc
test
out
clc
jmp
fadds
out
shl
enter
in
fsubr
xor
test
repz
test
mov
xchg
aam
repz
lret
fnstsw
shr
repz
stc
mov
orl
out
sti
int3
in
iret
in
lds
stc
fdivr
aam
test
out
nop
addl
enter
out
repz
sti
into
xor
xor
xlat
fdivr
inc
mov
lret
adcb
repnz
cmp
ffreep
stc
cmp
cli
test
mov
out
jmp
repz
out
fcom
in
enter
out
test
test
xchg
cli
jecxz
out
fmull
aad
xlat
in
fcmovne
lock
int
cmc
ds
test
cld
std
ljmp
mov
hlt
in
leave
in
int
test
out
xlat
icebp
sarl
ret
fsubp
leave
iret
in
xor
xorb
fcomp
fsubr
fcmovne
out
lret
cmc
in
ds
cli
out
stc
fiadds
or
in
xchg
lds
sarb
std
stc
add
cmc
out
mov
test
loop
out
sar
xchg
lea
shl
leave
lret
jmp
stc
repnz
ffreep
clc
std
in
mov
lret
hlt
xchg
icebp
xor
xor
xor
std
shl
xor
les
in
sar
enter
leave
xchg
pushl
out
out
cmp
sarl
rolb
cmc
sar
loope
jecxz
loopne
dec
addb
stc
sarb
xor
ss
add
subl
add
addl
imul
jmp
into
aam
enter
fsubl
dec
pop
cmpsb
xchg
ja
sub
jg
scas
add
repnz
test
ret
std
in
loop
out
out
xchg
cli
ror
lret
cmp
xor
rol
cmp
cmp
xchg
push
std
inc
xchg
mov
rclb
rcl
cmp
cmp
cli
leave
aam
neg
shl
mov
icebp
filds
lds
rcr
jmp
in
repz
cmc
cmp
fmull
xchg
mov
ror
loopne
test
sti
lds
leave
stc
shr
cmc
xlat
ds
test
xlat
ljmp
add
xor
xor
imul
cli
loopne
icebp
aad
fisttps
mov
call
enter
ljmp
std
shr
call
fucomi
in
jecxz
aas
in
jmp
icebp
shll
sarl
shl
clc
shr
jecxz
cld
jmp
in
call
repnz
out
repz
cld
clc
cmc
iret
cmp
in
loope
aad
test
xchg
loope
test
iret
ss
cmp
fmul
out
repnz
rcr
lds
testl
loop
test
fadd
sti
stc
shl
loopne
out
aas
fmul
std
lret
out
enter
lret
hlt
fistpll
leave
loope
aaa
std
fistpll
rol
aam
fmul
fdivr
fld
addb
std
xchg
mov
sub
cmp
jmp
sti
aas
cld
out
repnz
cmp
xchg
test
lea
shl
ss
aaa
aad
loope
loope
fsub
out
sub
movb
orl
leave
std
repz
cmp
ret
fisttps
jecxz
loope
in
call
aaa
fsubr
cli
into
fnstsw
cli
ret
sti
idivb
fdivp
lret
mov
shr
xor
icebp
leave
out
xor
out
clc
mov
out
stc
loop
in
xchg
sub
ret
in
int3
fstp
repz
clc
cmp
adc
cli
shl
in
test
xchg
jmp
cmp
fyl2x
int
shr
icebp
cmp
rcr
sub
call
mov
in
xchg
xor
in
sti
aad
std
leave
ror
std
sub
fsubrp
nop
and
xlat
aam
sar
leave
shl
int3
xorl
mov
test
sti
iret
jecxz
int3
xchg
adcl
cmp
fcmove
rolb
cld
lock
aas
cmp
enter
mov
ljmp
ret
in
int
xlat
sti
jmp
sar
xlat
add
fcom
test
orb
int
ret
fdiv
lock
iret
int
and
aad
fisttps
call
loopne
ljmp
jmp
repz
neg
cmp
mov
loopne
iret
in
loope
into
imul
iret
out
fcomip
fdivr
iret
test
shl
test
mov
in
loop
mov
nop
fidivs
neg
div
in
ljmp
aad
call
mov
out
rcr
repz
call
repz
cmp
vpsubusb
icebp
leave
lret
mov
xchg
xchg
xchg
xor
div
icebp
out
cli
ror
ror
sti
ffree
sarb
fsubrp
aam
jecxz
std
fcomip
xchg
xchg
jmp
loope
ljmp
loop
filds
in
jmp
xchg
in
rcl
aaa
xlat
xor
jecxz
fucomi
sti
enter
shl
test
loopne
shl
loope
int3
xchg
loop
int3
fdivr
cli
into
cli
cmp
lock
repz
in
dec
or
in
mov
fbstp
shlb
cmp
fidivs
test
aaa
lock
rcl
loop
cld
ljmp
mov
sar
repz
aaa
lock
in
jmp
ret
fsubr
leave
loope
aam
in
jmp
xchg
xchg
out
xor
aaa
out
call
fcmovnb
shl
inc
mov
out
jmp
nop
sti
xchg
loopne
loop
xor
icebp
in
cmp
cmp
sbb
ret
aas
fcmovb
mov
lock
cmp
sarl
icebp
aaa
cmp
sti
ds
std
fmul
in
clc
mov
cmc
mov
jecxz
jmp
ljmp
ljmp
rcl
aam
ljmp
leave
mov
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
jmp
int3
rol
xlat
fstp
fst
mov
aam
pop
into
jg
scas
add
rcll
into
shlb
xlat
fidivrl
fdecstp
fcomp
loope
xlat
out
repnz
lret
icebp
int
fistl
into
test
xor
cmp
call
cmp
neg
xchg
jmp
int
xor
int3
cmp
dec
std
sar
xlat
rcr
fadds
dec
jmp
test
stc
clc
int
vaddsubpd
hlt
cmp
rcr
out
enter
enter
fisttpll
repz
hlt
ss
in
aaa
not
ret
loop
fdivr
xor
in
movl
std
cmp
sub
loop
test
fst
test
lret
jmp
xor
out
cmp
cmp
enter
into
cld
roll
frstpm(287
enter
xchg
ljmp
lock
shll
fstpt
and
lds
jmp
bnd
clc
in
iret
shl
repnz
in
test
rol
rcr
in
adcb
jmp
ss
sarl
ret
aas
out
call
fsubrp
test
xchg
xor
hlt
in
cld
fxch
lret
cmp
roll
cmc
ret
mov
popl
dec
cmc
sti
fmul
cmp
stc
ds
out
std
cld
inc
testl
sar
lret
call
cmp
aad
sti
std
cli
call
leave
sbb
cmp
icebp
call
call
neg
in
loop
xchg
in
imul
in
jecxz
rolb
cld
repnz
int
into
fsubr
into
mov
jmp
lret
enter
rolb
in
rol
xor
fmulp
fsubr
jmp
cmc
out
idiv
fcmovbe
cmp
rolb
out
sti
xor
fnstcw
clc
fcmovnb
idiv
stc
out
test
call
mov
cmp
rcl
rcl
out
enter
int3
out
loope
rcr
mov
jmp
jecxz
shl
aaa
lock
not
fcomip
loope,pt
add
test
fildl
sti
jmp
std
rcll
in
idiv
ds
icebp
addb
test
mov
mov
icebp
xchg
repnz
int3
leave
xor
in
into
cmp
fdivr
lret
call
or
testb
cmp
cli
cmp
lock
jecxz
test
mov
out
addl
int
mov
lret
out
shlb
cmp
out
clc
fucom
sti
xchg
cli
fsubr
std
fdivrp
int3
leave
jecxz
mov
das
lock
out
xor
fdivrl
std
cld
cmp
in
sti
fsubrp
mov
in
out
jmp
cmc
fdiv
loope
in
in
icebp
loope
cmp
in
ret
sub
xlat
leave
cmp
lock
sti
lock
fcom
in
lock
in
in
out
fcomp
int3
mov
icebp
mov
xor
icebp
ret
rol
jmp
lock
fcom
mov
in
stc
lret
in
ror
lret
fcmovb
xor
sti
clc
aas
loopne
cli
jecxz
neg
cmc
jmp
jmp
test
lock
in
lret
loopne
cli
out
fdecstp
aas
iret
fcmovb
and
xchg
nop
xchg
xor
aad
in
clc
cmp
xorb
aas
cmp
cmc
cmp
aas
ret
neg
std
and
and
ror
ss
lock
rol
call
xlat
fscale
fucomi
leave
jecxz
fsubp
xchg
clc
rcr
cmc
repz
cmp
cmp
fcomi
fstpt
std
stc
jmp
lret
xchg
ljmp
hlt
rcr
lret
cmp
ret
std
fcomip
mov
int
in
hlt
xchg
jecxz
xor
fcmovnbe
xor
idiv
neg
into
out
enter
xchg
test
decl
aas
call
jmp
aas
stc
clc
rcl
aam
xchg
sbb
ljmp
out
out
rcl
ss
out
cmp
xchg
aas
call
mov
test
in
sub
jmp
rcl
xor
ljmp
fcmovbe
inc
shr
in
xchg
in
xor
xor
aam
fsubrp
cld
jmp
leave
add
add
fadd
fcom
fld
pop
into
shll
mov
jg
scas
add
fildl
test
in
addb
in
int
not
fmulp
in
in
xor
rcr
les
xchg
xchg
fiadds
xor
clc
into
sar
std
cmp
roll
out
in
ret
fisttpll
repnz
std
cmp
loopne
loope
ret
ds
ds
mov
ret
jecxz
roll
into
lds
aaa
cmp
lret
cmp
imul
xchg
sbb
ffreep
lret
mov
iret
repnz
xor
rol
lds
fucomi
icebp
into
in
roll
cmp
xchg
loope
and
jecxz
fnstcw
int3
int
aaa
cmp
fxch
div
out
fdiv
imul
and
mov
das
xor
fdiv
jmp
add
xchg
in
leave
sub
call
aad
xlat
out
sarl
lret
repnz
fadd
test
clc
xchg
jmp
mov
jmp
icebp
int
out
xabort
lret
int
into
loopne
in
mov
repz
fiaddl
in
repnz
aaa
xor
int3
aam
xlat
ds
ds
sti
rcr
jmp
loopne
xchg
cld
lret
jmp
int3
loop
aam
in
jmp
repz
cli
cmc
cli
test
filds
aam
leave
not
iret
rcr
out
xlat
cld
in
cmp
cmp
ret
out
decl
test
in
repz
fistpll
fxch
xlat
jecxz
xchg
clc
lret
rcl
fsubrp
xchg
repnz
xor
aas
iret
idivl
ds
fdivrp
rcl
fsubp
jmp
in
xchg
int
out
rcl
sub
sarb
aam
test
in
rolb
fcmovu
into
aad
fdiv
xor
std
sar
cld
mul
cmp
in
or
out
in
call
les
xlat
fdiv
in
aam
aas
xlat
rolb
add
shlb
lret
fdivrs
lret
jmp
stc
in
ss
loopne
rcr
in
vmaskmovdqu
leave
testl
jmp
faddp
dec
into
lret
dec
ds
mov
rol
xor
stc
lock
shl
cmp
shr
fidivl
loope
sti
idivl
mov
fmul
mov
test
cmp
divb
fcmovnb
clc
les
test
decb
leave
xchg
repnz
out
xor
stc
hlt
in
out
fcmovbe
sti
lret
xlat
test
lock
loope
test
out
lock
leave
loope
in
xchg
test
rol
cmp
out
cmp
loopne
xchg
fld
jecxz
jmp
xchg
in
in
icebp
xchg
int
int3
das
in
ss
rcr
xor
loope
sti
rcr
aas
lock
addl
repz
call
cmc
stc
clc
fcom
out
fdecstp
out
adc
jmp
enter
int3
jmp
int3
xchg
int
repnz
stc
lret
neg
addb
ljmp
mov
addb
xor
aam
cli
fsubr
cli
sub
aam
fildl
in
mov
xchg
into
loop
test
repz
int3
ret
cmp
mov
cli
fmulp
in
jmp
lret
orl
fidivl
fcom
xlat
icebp
rcl
int
clc
out
stc
add
fcoms
xchg
out
ljmp
xlat
int
sbb
icebp
shl
incb
cld
mov
in
loopne
rcl
into
fcmovnu
fsubr
in
lret
out
ror
aad
cld
xchg
xlat
loop
test
std
ror
shl
cmc
bnd
xor
out
shr
stc
ror
ds
test
enter
in
in
mov
fcmovne
fmulp
dec
xor
xor
xor
lock
or
aas
repnz
in
test
fcmovne
in
mov
in
in
int
jmp
clc
repz
add
stc
cmp
out
div
xor
out
cmp
aam
fdivrs
aam
clc
into
lds
std
lret
mov
aad
iret
shll
iret
repz
jmp
int
test
lock
shl
xlat
loope
out
in
nop
call
xor
ljmp
aaa
aas
rol
loop
add
in
stc
jmp
xor
jmp
aas
sarl
fcmovnbe
fcmovb
loope
add
outsb
xchg
xchg
add
fdivrs
scas
add
xchg
xchg
into
enter
out
xor
and
rcr
stc
shl
jecxz
ljmp
jecxz
jmp
stc
enter
fidivrl
fdivrs
in
out
mov
out
xchg
mov
aam
xor
xlat
std
jmp
cmp
cli
sti
jmp
loop
fmul
dec
repz
ret
hlt
iret
call
int
in
iret
hlt
aad
fdiv
out
lock
nop
jmp
int
in
fdivrs
inc
cmp
cmp
not
xchg
mov
fmulp
jmp
leave
xor
xlat
cmp
jmp
cmp
repz
fcmovu
out
call
cmp
jmp
nop
out
test
shlb
cmp
shl
aas
iret
in
fdiv
jecxz
shl
mov
hlt
ljmp
in
cmp
int3
cmp
jmp
sti
mov
fucomp
shl
test
in
rcr
out
shr
aad
fst
sarb
jmp
mov
jecxz
enter
cmp
xlat
aad
cmp
test
loope
out
int
int
icebp
xchg
out
mov
test
shl
clc
xor
hlt
fucomp
ds
rcr
rol
mov
enter
faddl
ljmp
cmp
xlat
sbb
mov
jmp
neg
lock
in
sub
cld
call
loop
ret
fdivrp
clc
shl
loopne
sti
iret
sub
xchg
incl
cmc
cmp
xor
ljmp
clc
mov
xchg
in
in
mov
mov
in
cld
fdivr
repz
aad
test
rorl
loopne
movb
lock
loope
in
repz
cmp
loope
std
out
lock
mov
shl
stc
cli
adcl
rol
out
enter
fdiv
lret
fdivrl
roll
xchg
mov
nop
rcll
aam
enter
lret
in
fdiv
ds
call
xchg
jmp
ljmp
cmp
call
loope
lock
mov
nop
fmull
iret
in
lock
out
repz
sar
test
shl
ret
loop
idiv
iret
loop
hlt
jmp
cmc
divb
cmpb
ret
cmp
enter
leave
fcomip
nop
loope
xchg
hlt
mov
aaa
ret
aam
out
cmp
aaa
int
test
out
icebp
cld
in
int
and
xchg
into
repnz
cmp
hlt
cmp
aaa
loop
iret
ret
add
in
loopne
in
int3
mov
iret
in
out
sub
idiv
in
in
aam
rcl
clc
aam
enter
fdivp
xchg
hlt
incl
test
leave
jecxz
sar
ds
aam
fcomip
test
fcomip
fists
clc
sub
jmp
aaa
ror
xor
lock
fidivrs
icebp
les
in
cmp
out
xchg
test
lds
shl
flds
loope
int
lret
incl
int
ror
cs
neg
shl
loope
aad
not
jmp
jmp
xchg
xchg
xchg
rcl
jmp
cli
ss
fsub
fcmovnbe
lret
xchg
fstp
ljmp
ljmp
out
ljmp
ljmp
cmp
hlt
cmp
into
loope
lret
addb
xlat
jmp
aas
xlat
out
fucomp
ret
loop
cmp
out
ror
jmp
jmp
xor
out
aad
cmp
jmp
cmp
lret
f2xm1
in
test
rorb
repnz
sub
cmp
loopne
in
cmp
add
in
mov
jecxz
in
loope
jmp
repnz
enter
stc
ret
sar
fxch
test
sub
sbb
xchg
cmc
rol
xor
hlt
fstpt
shr
fstp
xor
aas
jmp
leave
stc
fcoml
fsubr
lret
xor
int
cmc
mov
addb
lret
icebp
mov
xchg
ret
loopne
cmc
aad
lret
out
hlt
call
cmp
cli
sti
call
cld
in
loope
mov
in
lret
leave
ss
xlat
aad
test
roll
imul
jmp
into
aas
ror
rcl
sarl
xchg
lods
mov
insb
fdivrl
scas
add
sbb
sar
ljmp
leave
hlt
icebp
hlt
idiv
cli
aaa
lret
fdivrl
lret
cmp
test
rcr
sti
call
loope
into
ret
fnsetpm(287
in
into
loop
shr
repz
int
clc
fildl
stc
mov
fucomi
in
lret
repz
jmp
mov
xlat
div
aam
das
jmp
cmp
cmp
add
shr
in
call
in
lret
in
call
jmp
fdivr
fcomi
cmp
roll
in
out
push
sub
rol
xlat
lock
cmp
repnz
xor
ret
int3
cld
mov
xor
in
ljmp
cli
aaa
fdivrs
adc
test
rcl
jecxz
leave
mov
xchg
out
aaa
int3
shl
lret
cli
xor
cmp
cli
cmpl
leave
in
cli
int3
dec
out
and
icebp
in
out
fcomp
cmc
xor
hlt
xorb
mov
ljmp
ljmp
cli
cmp
in
into
cmp
cmp
ret
int3
xlat
in
xchg
imul
cmp
leave
cmp
iret
enter
int
lock
rol
fstp
loopne
fadds
out
out
clc
fdiv
shr
aas
fidivrl
in
div
aad
mov
out
mov
icebp
mov
icebp
repnz
test
sti
fdivrs
aas
test
fadd
xchg
clc
mov
int3
into
into
jmp
out
xor
call
int
sar
cmc
shr
mov
xchg
in
int3
ljmp
neg
aad
in
cmp
aad
movb
out
xlat
mov
inc
icebp
out
cmc
loope
in
out
xor
filds
rcr
rol
ljmp
leave
enter
jecxz
clc
neg
shr
repnz
int
xor
out
into
loop
hlt
test
cmp
mov
in
test
cmp
std
shr
xor
rol
fadd
xlat
aam
loop
loop
filds
fsubrp
xor
out
in
leave
cld
stc
shl
rcl
cmp
loopne
fdivr
mov
icebp
jmp
faddl
in
xor
shr
in
out
cli
cmc
into
iret
cmpl
flds
stc
fsubrp
mov
inc
out
in
fdivr
cmp
add
sbb
sub
lock
lret
int
loope
cli
rolb
mov
addl
xor
les
std
out
aaa
iret
fmul
cmp
and
test
xlat
stc
icebp
faddl
in
in
fcmove
int
leave
out
jmp
out
into
sbb
repz
mov
fnclex
in
icebp
jecxz
ljmp
repz
cmp
fcmovnbe
ss
xchg
mov
mov
in
stc
enter
aaa
loope
ret
aam
fcmove
mov
aad
mul
enter
ror
ret
icebp
jmp
clc
cmp
loop
xor
loop
ljmp
lret
jmp
xchg
jmp
xor
xor
in
sar
fdivrs
cli
cmp
cmp
test
jecxz
fcmovb
lret
fxch
call
mov
lock
call
cmp
mov
call
jmp
loop
xchg
adc
lret
cmp
aad
test
ret
testb
out
fcomip
lock
shl
ret
cmc
loope
iret
out
icebp
enter
fsubr
rcl
test
mul
cmp
test
nop
mov
out
xor
iret
cmp
out
aam
or
stc
jecxz
xlat
clc
orl
mov
lret
sti
cld
lret
loope
cmc
rcl
jecxz
test
test
in
in
lock
out
loope
xor
aad
hlt
lock
int3
std
fprem
hlt
fiaddl
in
in
mov
in
into
fadd
iret
icebp
sub
aad
lret
idiv
aad
out
fstp
xlat
test
stc
lret
in
xchg
in
out
in
out
hlt
iret
aam
std
add
out
mov
sbb
lret
xchg
xchg
xor
aam
ljmp
cli
iret
fsubp
ret
cmc
cld
fld
mov
fiadds
fsubp
out
jecxz
cld
hlt
xor
out
int
shl
out
cmc
addl
mov
jmp
rcl
aad
aad
shll
jmp
dec
popf
loope
jle
add
xchg
enter
test
int3
hlt
out
std
out
loope
std
xlat
in
nop
repnz
lret
lock
pushl
shll
cli
int
cmc
cld
aas
repz
cld
faddp
test
loopne
mov
clc
loop
leave
mov
lret
in
xor
in
cmp
sar
into
cld
aam
lds
iret
out
repz
int
out
aaa
lret
cld
shl
cld
iret
add
mov
lret
sbb
shrb
fucomi
clc
std
sti
cmc
into
aas
roll
loope
and
int3
out
sub
cli
xor
fnstcw
fcomi
std
in
xlat
sti
test
mov
or
shl
cmc
hlt
aam
stc
clc
fdivrl
out
sub
aaa
test
sti
stc
ds
std
and
repnz
not
lret
out
int
fxch
rol
ret
sbb
lret
in
mov
xchg
enter
cmp
cld
in
xor
repz
int3
iret
add
fstp
loope
in
in
mov
xchg
enter
sarb
lret
cmp
fadds
xchg
neg
test
out
lock
loopne
shr
cmc
icebp
aaa
ljmp
clc
clc
fcmovb
out
test
sti
mov
sub
fiadds
out
cmp
cmp
out
int
shl
cmc
ljmp
in
mov
ljmp
fincstp
shl
cmp
sti
cld
into
int
clc
out
jecxz
test
loop
mov
xchg
rorb
rcl
shl
cmc
call
fnstsw
icebp
fadds
fdivr
xchg
in
mov
xor
ret
cmp
cmp
cmp
rol
cmp
loop
fdivrp
movb
les
xor
out
fnstcw
jecxz
test
idiv
mov
in
out
out
leave
xor
xor
cmp
testl
mov
in
cs
lret
cli
jmp
fscale
cmp
lock
enter
int3
xchg
loop
in
aam
out
sub
fdivrl
xor
xor
in
xlat
ret
out
fdivr
in
mov
lock
in
xor
cmp
aam
in
cmp
stc
rol
fisttpll
loope
int
ret
int3
icebp
in
enter
ror
fadd
sti
loop
sti
cmc
stc
stc
stc
mov
in
xchg
test
fdivr
in
lock
into
or
ret
ffreep
jecxz
hlt
mov
filds
rcl
iret
lret
shl
not
out
lret
sar
cmp
fnsetpm(287
faddp
cmp
adc
iret
and
mov
loope
mul
xor
hlt
test
call
out
ret
cld
cli
jmp
fisttps
test
in
ret
out
rcl
orl
in
icebp
test
xchg
repz
sub
xor
enter
cmp
cmc
les
repz
test
icebp
out
in
cmpb
call
leave
fcomi
loop
sbb
xchg
sti
out
lret
cmp
out
in
adc
xlat
ret
stc
call
xorb
jecxz
lock
mul
xor
loopne
addb
loope
in
cmp
call
out
rcl
rcr
std
fdivr
fsubr
loope
loopne
xchg
out
iret
loop
int
repz
call
ret
ds
ffree
lret
int
cld
xchg
addl
lret
xor
cmp
stc
inc
loopne
icebp
cmc
lret
jecxz
std
rcl
call
repnz
lret
shl
lock
stc
fmul
hlt
cmc
jmp
int3
stc
rcr
lock
mov
loope
ljmp
cmp
cli
cmp
ret
mov
mov
xchg
nop
aaa
fsubrs
cmc
jmp
in
repnz
lock
addb
in
loope
sti
lock
rcl
fcmovnbe
iret
fldz
cmp
rcr
mov
fnstcw
stc
cld
leave
in
xchg
call
rcl
loope
neg
jmp
aad
xchg
sar
test
test
bnd
out
cs
leave
aad
stc
icebp
fistpll
cmc
mov
mov
cli
jmp
jmp
ffreep
aaa
lret
lret
cmp
into
loopne
test
loope
lock
je
xor
add
mov
imul
add
jmp
int3
rol
aad
aad
fpatan
int3
and
shr
aam
into
out
jle
add
aas
shl
test
jmp
mov
roll
jmp
div
idiv
fcmovne
xor
iret
testb
mov
cld
ljmp
shr
lds
lret
repnz
sar
sub
hlt
icebp
mov
out
lret
out
out
loop
out
repnz
ret
fcom
out
cmp
cmp
cmp
rcr
loop
loope
ds
leave
loope
in
test
loop
ret
fcmovne
cmp
std
cmp
clc
icebp
aad
shl
repnz
stc
ffree
and
fcoml
int
ret
ljmp
fidivrs
loop
loope
roll
jmp
jmp
iret
int
in
fcmovbe
ljmp
fndisi(8087
xlat
mov
in
sti
test
xor
int3
xor
in
rcl
jmp
cmp
xchg
decb
adc
bnd
lret
sti
xlat
lret
cmc
aam
ds
and
sti
mul
fsub
lea
cmc
sub
cmc
cld
shl
fcmovnu
sar
shl
cmp
fildl
mov
repz
icebp
in
lret
cld
idiv
lret
iret
lock
std
cmc
xlat
incb
in
call
ror
in
repnz
cmp
imul
rcr
loop
ret
xlat
test
repz
fcomip
in
loop
aad
aad
iret
lret
out
repz
not
xlat
fcmovnb
loop
loop
icebp
fists
lret
ljmp
loop
cmp
repz
cmpl
test
xchg
lret
fcmovu
icebp
ss
call
cmp
rolb
leave
in
jmp
nop
lock
aam
fdiv
sub
not
call
xlat
shll
shl
jmp
jmp
xchg
xchg
aad
hlt
in
xlat
aad
ds
aam
out
shl
ds
in
jmp
lock
out
iret
fincstp
into
xor
loopne
cld
sar
test
aad
fiadds
incl
out
rcl
jmp
fcomp
aad
xor
cmp
into
cmpb
enter
loopne
into
mov
out
adcb
fcomp
sar
xlat
fcomip
out
neg
cmc
out
xchg
repz
fsubr
out
or
addl
call
stc
aad
out
inc
test
out
ret
jecxz
jmp
fimuls
repz
xor
into
out
jmp
cli
in
aad
cld
loope
lea
in
ret
jecxz
int3
call
ds
lret
ds
or
cli
in
sti
into
std
jmp
call
enter
in
cmc
fdecstp
lock
aas
sarb
cmp
repz
loopne
jmp
lret
mov
in
jmp
lret
cmp
out
loopne
sar
repnz
fincstp
jmp
leave
jecxz
into
into
mov
call
enter
cmc
stc
into
loope
adc
fdiv
fstp
fildl
loopne
xchg
in
fbstp
out
xor
aaa
sti
fst
icebp
ljmp
hlt
jmp
in
fucomi
iret
in
xchg
stc
int3
lret
stc
cmc
divl
rcr
ret
loop
ret
sti
in
dec
and
hlt
out
ret
iret
not
xor
cli
fnstcw
fadds
in
test
fucomp
fsubr
loopne
xchg
rcl
ljmp
leave
leave
cmp
sti
fildl
mul
cli
mul
std
out
leave
xchg
rorb
aam
lock
lret
incl
loop
jecxz
jecxz
fdivrp
faddl
stc
xor
fld
std
in
out
roll
out
iret
enter
ret
lock
out
fcomip
cmc
int
out
in
fdivrs
inc
sar
shr
in
ljmp
decb
cmc
xlat
lret
call
out
out
mov
in
xchg
cld
lret
mov
ljmp
xor
iret
fcomip
aam
xlat
icebp
enter
in
nop
jecxz
xchg
test
aam
out
divl
jmp
sti
icebp
int
sar
aad
fildl
cli
fsubrp
dec
mov
lds
in
cmp
jmp
and
cmc
sarb
aad
stc
in
inc
fldl
ror
ss
stc
cmc
imul
fsubrp
call
cmp
cmp
rol
clc
mov
faddl
rorb
or
leave
ret
push
mov
push
push
mov
mov
mov
jmp
into
rol
fcomp
fcomps
fs
jle
add
lret
repz
repz
loopne
ds
aam
in
and
addl
lock
xor
ds
cmp
xlat
rorl
cld
fiadds
aaa
xor
xabort
cld
cmp
sarb
adc
in
test
ljmp
cmp
clc
icebp
xor
loopne
cmp
cmp
fcom
fsubr
enter
in
shr
lock
cmc
imul
fucomp
iret
cmp
cli
loopne
test
out
cli
xchg
mov
out
stc
clc
fcmovbe
repnz
clc
out
fcmovne
add
icebp
out
fcmovu
fisttps
mov
out
shlb
jmp
aas
loop
les
aam
out
add
rolb
rcl
loop
xor
sarl
leave
leave
repz
fsub
sti
repnz
cmc
neg
leave
int
xchg
xchg
jmp
mov
xor
lret
cmp
ds
ret
in
xchg
stc
sti
in
loope
fsub
mov
cli
iret
decl
aad
jmp
lret
imul
lret
in
fcmove
cld
test
into
jmp
into
std
sarb
in
into
clc
repz
cmc
fisttps
mov
hlt
cmp
cmc
cli
loop
aad
fldl
fisttpl
out
nop
adcl
cmpb
loopne
cmp
jecxz
aam
in
in
inc
xchg
fldl
int3
repnz
cmp
aas
fcomip
cmp
sti
rol
fdivp
jmp
fsub
mov
lret
in
xchg
ljmp
clc
in
rcl
fidivrl
int
loope,pt
mov
fcoml
in
ror
ror
iret
sti
xlat
jmp
sarl
fucomp
iret
div
fimuls
std
loop
popl
stc
repz
repz
std
cmp
push
ret
fildl
ds
mov
hlt
mov
iret
rol
out
cmp
sub
faddl
loop
call
int3
out
cld
lret
loope
cmc
out
cmp
shlb
call
icebp
clc
hlt
les
out
into
mov
rorb
lret
cmp
repnz
cli
cmp
fpatan
ret
stc
ljmp
lock
jmp
xor
f2xm1
cmp
icebp
test
clc
aad
repnz
adc
xchg
iret
or
repnz
cli
call
cmp
hlt
mov
xchg
mov
mov
mov
vpmaxsw
ljmp
fdivp
addb
sti
out
into
nop
fisttps
fdivr
ror
idiv
lret
lret
cmp
fsub
loope
aad
fcmovu
call
jecxz
sub
enter
lret
out
int
lock
mov
int
out
jmp
jmp
shl
shr
fsubp
out
sbb
ret
test
orl
jmp
cmp
fiadds
cli
out
xchg
cld
in
shl
ret
in
rcr
fdiv
fldl
call
xlat
int
jecxz
out
repz
shrl
jecxz
ret
lret
cmp
shl
std
sbb
jmp
adcl
int
cmp
repz
mov
repz
mov
fimuls
cmp
fsubr
cmp
aas
jmp
cmp
ret
rol
rol
in
cld
cld
test
stc
mov
xchg
repz
lret
fnstenv
std
test
fdivr
shl
fcmovnb
enter
fcmovnu
fisttpl
jecxz
ret
stc
aam
ss
faddp
testb
cmp
add
add
icebp
add
add
and
add
ror
rcr
fstp
aam
cmp
lods
ret
add
or
jg
or
jle
or
into
aam
idivb
jmp
loope
int
cmp
iret
out
aaa
call
rcl
aad
into
testb
xlat
enter
lds
int3
jmp
cmp
jecxz
loope
loopne
cld
decb
std
cmp
ljmp
cmc
in
xlat
cmp
roll
std
addl
in
xor
cld
stc
ds
ds
jmp
aam
aad
roll
fldl
not
out
xor
ss
in
or
ret
fsub
out
movl
repz
xor
leave
fdivp
fcomi
std
cmp
xchg
lds
in
lret
xchg
mov
lds
jmp
neg
fadd
testl
in
out
sub
in
aad
cmp
aam
fincstp
iret
in
sti
in
shl
out
movl
mov
rcl
out
stc
cli
clc
fdivp
neg
xor
clc
sti
hlt
jmp
movl
out
cmc
cmp
out
loope
fldl
mov
aad
in
iret
xchg
loope
call
int
rcr
lret
stc
cmc
roll
aam
add
iret
in
in
addb
int3
in
cmp
rcr
cld
loop
les
call
out
jecxz
out
jmp
jecxz
repnz
int
cmp
idiv
ret
fdiv
repz
fcmovu
aad
stc
xchg
fsubrp
ljmp
out
std
int3
rcl
stc
cmp
cmp
aad
loope
xchg
incl
cmc
enter
sti
fidivrs
cld
loopne
cli
cmp
jmp
fimuls
shr
sarb
cld
call
cmp
fldl
loopne
dec
xchg
mov
aas
aam
shr
out
cmp
cmp
fucomp
rcr
out
clc
mov
xabort
lea
mov
ret
call
lret
fcomp
cmp
shr
loopne
call
lret
xor
out
lds
out
std
std
in
fadds
repz
in
mov
mov
fucomi
sbb
xor
into
ret
in
aad
jmp
addl
leave
nop
sar
and
mov
divl
lock
loopne
fadds
ret
int3
out
in
icebp
call
ror
clc
in
cmc
out
cmp
sti
icebp
repz
hlt
loop
test
ffreep
stc
xchg
push
xor
shl
enter
enter
xlat
cli
out
cmp
test
in
xchg
enter
jecxz
xchg
nop
out
fld
xor
lock
hlt
loopne
in
ret
fldl
fscale
fsub
mov
cli
stc
cmp
cmp
in
and
ljmp
xchg
xchg
aam
into
std
xor
repz
push
out
rcr
ret
repz
fmulp
lret
lock
xchg
out
test
cmp
loope
jecxz
fdiv
repnz
jmp
fildl
ljmp
aad
cmp
cld
sar
ljmp
hlt
out
fcmovu
clc
cli
std
out
fcmovnu
xchg
test
repz
imul
xor
lock
test
out
aam
in
hlt
stc
in
test
iret
loopne
out
idiv
xor
out
leave
cmp
loope
out
cld
rcl
loop
ljmp
test
jmp
aam
add
loop
cmc
cmp
rcr
neg
sar
filds
enter
fmulp
fsub
jmp
lock
loope
cli
jmp
fldl
test
xlat
aam
test
std
cmp
movl
jne
subl
mov
add
mov
xorl
xor
add
jmp
sarl
ret
ffree
in
jns
pusha
inc
out
adc
add
cli
test
ljmp
xor
call
in
hlt
into
sti
aad
cmc
cld
out
div
int
idiv
mov
leave
mov
ret
in
shl
lock
in
cmp
not
test
hlt
clc
stc
jecxz
jmp
xchg
loop
out
jmp
aaa
out
aam
faddl
loop
dec
out
cli
fucomi
xchg
shr
not
in
cmc
in
int
in
xor
xlat
int3
cmp
rcl
cli
in
jecxz
xchg
test
sub
into
xchg
lret
xor
iret
cmc
lock
fst
and
xchg
test
lret
in
xor
incl
xor
in
fadd
fdiv
cmc
lock
test
repz
xlat
std
test
lret
xchg
mov
repnz
ror
fyl2x
repz
lret
ss
hlt
rol
ds
out
sub
fiadds
shrl
xor
out
aas
fdivrl
icebp
xchg
loope
dec
mov
loope
aam
jmp
aaa
fst
lock
repz
xor
fdivr
rcr
mov
xchg
out
jmp
shl
fidivrl
jmp
clc
jmp
iret
stc
hlt
test
fninit
clc
hlt
frstpm(287
fsub
in
in
jmp
xchg
jmp
shlb
ljmp
ret
xchg
in
fstp
sub
mov
sub
jecxz
ss
cmp
test
cmpl
testb
loopne
fucomp
in
std
adcb
in
lret
ds
shl
shl
ret
out
fisttpl
std
fdivp
shrb
cmp
int
cli
xlat
std
cmp
addl
into
cli
xchg
xchg
iret
movl
cmp
sti
adc
adc
out
lret
in
jecxz
in
mov
shr
jmp
enter
fcmovb
cmc
test
clc
cmc
std
int3
in
enter
repz
iret
out
cs
cmc
aam
iret
stc
clc
cmp
cmc
cmp
repnz
mov
fdivr
in
fcmovu
decb
shlb
into
jmp
loopne
aas
notrack
ret
fadd
fadds
rcr
aam
sub
out
ss
fnstcw
fcmovu
out
addb
fsubr
aas
stc
int3
mov
sti
mov
out
aam
repnz
in
cmp
loope
cmc
not
fcomi
loopne,pt
cmp
loop
mov
xor
and
into
lret
hlt
repnz
fadds
fsubr
mov
and
clc
jecxz
int3
fdivr
sti
fnstcw
divb
aas
cmc
cmp
leave
out
std
call
xchg
jmp
leave
idiv
xor
in
into
in
ljmp
fcmovnbe
out
jecxz
lret
cmp
out
repnz
test
out
hlt
cld
cmc
cmp
shl
repz
clc
fimuls
ret
xor
xchg
out
repz
imul
call
fcomi
std
cmc
loopne
rcr
loope
orb
lock
sar
into
out
ss
ror
aas
fadd
jecxz
loope
call
mov
jecxz
call
cmp
out
lret
fucomp
iret
cld
repz
xchg
into
xchg
test
aad
aam
std
fnstsw
not
sub
out
vpsadbw
and
stc
adcb
int3
rcl
xor
imul
leave
sti
int3
repnz
test
jecxz
mov
cmc
xlat
loope
lock
iret
loope
into
shr
lock
fcmove
aaa
fcmovu
clc
cmp
sar
call
fld
icebp
into
leave
out
rcll
shl
neg
cld
iret
icebp
cmp
fucomip
repz
jecxz
mul
hlt
cmc
stc
clc
in
ljmp
xor
ror
fld
aam
aaa
enter
cmp
test
mov
xchg
orl
and
clc
bound
add
adc
jmp
rcl
aad
rcrl
orl
add
cmp
cli
cli
fnstcw
rcr
filds
out
lret
cld
loop
addl
fcmove
lock
out
int
aas
cli
xlat
fdiv
hlt
aas
cmp
int3
in
add
orb
icebp
xor
aam
cmp
aam
xchg
mul
call
loop
mov
shr
xor
iret
lret
aaa
neg
and
clc
decl
in
mov
rorb
in
idiv
divl
iret
lret
xlat
mul
fimull
mov
loope
shl
xchg
mov
aam
jmp
stc
repz
clc
rcl
cli
cld
rcr
jecxz
lret
in
test
ljmp
idiv
fistpll
int3
aad
and
idiv
mov
mov
ljmp
aad
sti
shr
shl
into
xor
hlt
lret
fdivr
jecxz
fcomip
mov
in
ret
div
out
aaa
loope,pt
fsub
ds
stc
call
cli
fadd
faddp
nop
std
fcmovnbe
icebp
repz
stc
in
xor
rcr
xlat
fildl
ret
leave
test
xchg
test
out
lret
cmp
fndisi(8087
xlat
shl
neg
fucom
cld
sti
out
orl
xchg
ret
rol
out
aam
xor
ret
cmc
fdivr
ljmp
call
in
xor
leave
icebp
lret
cmp
cld
in
cli
xor
jmp
or
not
test
out
xchg
cld
jecxz
shr
aaa
in
jmp
std
cmp
cmp
jecxz
xchg
fdivr
cmc
leave
fucomip
mov
in
ss
repz
lock
aam
rol
loopne
std
cld
cld
loop
fisttps
in
ljmp
xor
cmp
div
repz
fdiv
hlt
testl
aam
fxch
test
das
aad
clc
filds
call
add
int3
fimuls
xchg
clc
out
in
cmc
out
aad
stc
in
addb
fimuls
jmp
into
xchg
loopne
int
xor
xor
cmp
roll
sub
xchg
sub
ss
out
int
iret
int3
in
sar
xrelease
and
ror
call
lret
lock
ror
in
repnz
loopne
rcr
aas
mov
and
sub
in
mov
repnz
out
cmp
out
loope
ds
lock
orb
iret
repnz
xchg
int
imul
ss
int
sarb
or
mul
out
mov
mov
out
call
xchg
xlat
clc
repz
int
cmp
jmp
lock
sti
loopne
mov
in
lea
mov
lock
idiv
ljmp
lock
fptan
call
jmp
into
mov
enter
shl
sbb
xlat
loop
shl
ret
call
lret
std
and
xchg
into
leave
out
loope
adc
lock
cmc
cmp
ds
std
jecxz
hlt
stc
cmc
cmp
cmc
out
test
loopne
repnz
call
aad
cmp
repz
in
int
rcl
fcmovu
test
ljmp
fcomip
xchg
xchg
call
icebp
out
out
cmc
fnstcw
repz
cmp
repz
loop
clc
enter
in
in
jmp
into
out
int
rcl
iret
sti
in
clc
xlat
aam
lret
out
in
test
xchg
lret
xchg
icebp
xlat
xor
aad
xor
filds
stc
cli
mov
test
divb
cli
fdivrs
loopne
shl
adc
xchg
repz
fneni(8087
out
out
sar
out
mov
aas
call
cld
cmp
lock
int3
mov
movzwl
sbbl
not
movl
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
subl
jmp
leave
xlat
rcr
mov
cwtl
push
add
or
sti
jg
roll
jle
fdivr
neg
rcr
sar
fsub
mov
out
leave
icebp
jmp
xor
aam
fdivr
fiaddl
aas
loop
loopne
mov
in
out
xchg
test
shl
xor
cli
cmp
fcmovnu
aad
int
fildl
test
orb
hlt
rolb
cli
ss
into
aam
out
iret
fadd
in
icebp
mov
testl
repz
in
idivb
std
repz
xor
aad
sbb
repz
lret
std
mov
out
xchg
lret
out
in
call
xor
enter
fcmovnu
enter
rcr
in
repnz
out
into
fyl2xp1
sar
stc
clc
fldlg2
cmp
shl
stc
incl
leave
in
xchg
cmp
call
rcr
rcl
shlb
sub
in
cmp
roll
in
fildl
divb
icebp
fcomp
fnclex
cmpl
add
int
mov
hlt
or
lret
xor
test
cmp
loop
ret
test
stc
out
xchg
shr
in
fmuls
mov
jecxz
xor
loopne
fsubr
ret
sti
jmp
ret
stc
and
in
loop
out
iret
out
jecxz
xor
loop
div
cmc
cmp
cmpl
std
test
std
hlt
test
rcll
shl
in
lret
sti
loopne
cmp
sar
test
mov
jmp
in
call
iret
repz
xor
cs
lret
sub
not
fcmovb
cmp
jmp
nop
loope
std
aam
rcr
cs
hlt
hlt
enter
repnz
lock
aam
in
fmul
xchg
lock
icebp
out
das
iret
into
in
out
std
fstpt
aas
fmul
testb
jmp
jecxz
out
sub
out
xor
in
shl
jmp
xchg
and
cmp
adc
xchg
clc
shlb
iret
shr
xor
icebp
fcmovu
in
xchg
loop
orl
call
cli
fldl2e
rcl
std
aam
xor
rcr
incb
int
shl
push
int
in
in
xor
aaa
hlt
iret
cmp
cmc
hlt
jecxz
mov
fmul
lret
in
loope
cmc
hlt
loopne
shl
xlat
lret
fcmovbe
aad
cld
cmp
xor
aad
fsub
icebp
in
jmp
xor
fdivs
sarl
div
in
aas
iret
iret
in
fdivrp
ljmp
in
xchg
sub
int
call
cmp
xor
lret
mul
sti
cmp
roll
iret
fldl2e
cli
jecxz
mov
sub
out
neg
call
fincstp
in
ret
cmc
stc
orl
xor
clc
in
cmp
out
xor
cmp
idivb
cli
jecxz
mov
xchg
jmp
lret
jecxz
clc
cmp
test
out
cli
std
rcr
out
in
fcos
fcmovu
lret
call
nop
xchg
shl
int
xor
ret
cli
ss
cmp
int
rcl
lock
ret
sar
mov
enter
sub
xchg
call
lock
sar
aam
lock
adc
in
fdivr
fisttpll
in
loop
fidivrl
int
cmp
inc
sti
in
fidivrs
xchg
jmp
out
fmul
jecxz
in
lret
repnz
into
aam
int
imul
in
cld
sbb
shl
jecxz
mov
orl
hlt
jecxz
xor
lret
in
cmp
aaa
fcmove
leave
cmp
test
lock
fdecstp
iret
shl
loope
loop
mov
leave
aaa
out
div
cmp
out
iret
icebp
mul
shr
rolb
xchg
test
xchg
icebp
lock
repz
cli
cmp
aaa
fcomi
fnstcw
xor
aam
roll
std
int3
in
xor
xlat
aam
sti
shll
aam
into
lret
xlat
out
iret
rcl
jmp
lret
test
shl
jmp
neg
xor
rcr
ret
lock
testl
mov
clc
daa
test
test
add
sbb
jmp
mov
fstp
enter
imul
pop
cmp
roll
jle
sub
cmp
xor
lock
flds
in
sti
jmp
or
lret
loope
xor
cli
out
out
fdivp
out
loop
jecxz
cmp
in
shl
ljmp
nop
enter
call
leave
rcl
fdiv
xchg
ror
jmp
and
into
idiv
cs
xor
out
jmp
fmul
rol
shl
sbb
out
addb
int3
ror
aaa
ror
xor
cld
cmp
shl
loope
xchg
jmp
nop
icebp
fbstp
repnz
fcmovbe
fsubrp
loopne
out
hlt
rol
repz
and
int3
out
jmp
repz
xchg
ret
aam
jmp
repnz
loop
fcomip
out
fcomip
test
test
int
nop
xchg
icebp
mov
shl
call
cmp
stc
cld
in
mov
hlt
enter
mov
rol
icebp
in
int
int3
int
call
imul
adc
out
lock
stc
jmp
fcmovne
icebp
loop
sar
ljmp
in
out
cmp
not
lock
aam
in
lret
test
iret
out
xor
xchg
sub
xor
repnz
fstp
leave
repz
cmp
int
hlt
out
in
jmp
sub
mov
xor
lret
fiadds
fcmovu
adc
cld
loope
fucomi
in
icebp
in
out
jecxz
fmul
enter
ds
cmp
ret
out
nop
lock
fsubrp
loopne
in
hlt
in
test
lret
aad
filds
rol
fadd
clc
test
ljmp
int3
neg
aad
xor
cmc
shll
shl
shl
mov
les
in
rcl
in
out
ljmp
sarl
addb
lret
mov
leave
out
bnd
lret
int
cmp
fptan
loop
shl
jecxz
repnz
sbb
leave
out
loop
lret
aam
xor
int
xor
cmp
jecxz
out
cmp
fldl2e
rcl
mov
lret
in
int
jecxz
test
ror
xor
cmp
fdivrl
loopne,pt
xor
mul
hlt
cmc
in
mov
int
in
sar
loope
in
cmc
call
div
rcl
cld
fldl
lret
enter
stc
xor
das
loope
fmul
in
aaa
fst
xor
or
cmc
in
addb
loop
jecxz
clc
rcl
shll
cmp
test
cmc
clc
addb
out
lret
leave
xchg
xor
ret
iret
lock
cmp
iret
in
xchg
loope
aam
jecxz
mul
xchg
shl
loopne
shl
sti
call
out
lock
xlat
int
sar
cli
jmp
stc
ljmp
shr
xchg
das
jecxz
call
enter
fiaddl
aad
sbb
stc
mov
out
loop
aam
loope
lret
cmp
imul
in
out
loopne
aas
adc
in
in
mov
stc
in
xchg
rcll
aaa
lock
shr
sar
sar
aam
cmp
ret
movl
mov
loopne
enter
fcmove
fucomi
xlat
in
cmc
inc
rolb
incb
and
ljmp
xlat
cmp
aaa
cli
clc
mov
lret
lret
out
sti
mov
iret
enter
aad
roll
cmc
rorl
int
mov
into
lock
fidivl
hlt
rcr
fidivrl
repz
loope
fmuls
mov
sub
jmp
hlt
cmp
in
aas
fcmovnbe
or
in
int
into
enter
xlat
out
aad
hlt
cmp
fdivr
std
les
fdivrp
rcl
lds
call
lret
out
sarl
fdivrl
fdivp
call
into
hlt
test
leave
jecxz
lea
aam
in
xlat
lock
in
fmul
hlt
clc
repz
into
loope
xrelease
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
inc
jmp
lret
aas
fst
fcmove
fidivrs
mov
push
cmpl
add
rol
fcmovu
filds
jmp
fmul
rcr
out
cmp
in
lret
test
imul
cld
cmc
fsincos
lret
loop
sti
mov
out
out
fdivp
clc
ss
idivl
stc
out
leave
cmp
adc
in
out
xlat
stc
lock
leave
call
xor
into
repnz
clc
cli
loopne
ffree
test
loop
ret
out
lock
jmp
int3
xchg
sub
aaa
cmp
ds
repnz
loope
mov
jecxz
mov
fdivrp
loop
xchg
rol
xchg
clc
test
shr
int
xorb
cli
or
xlat
mov
mov
jecxz
out
loope
fst
imulb
shl
shlb
clc
imul
fmul
out
addb
cmp
mov
mov
loopne
xor
sarl
cmp
ss
and
lock
enter
std
into
sub
ss
out
aam
int
sti
clc
sarl
enter
mov
adcl
jecxz
not
rcr
into
in
or
fyl2x
incl
ret
decl
out
cmp
cmp
lock
test
icebp
not
rolb
ret
repz
test
int3
jecxz
div
out
cmp
cmp
hlt
in
repnz
rcl
jecxz
in
out
fsubrp
ficoml
aaa
mov
clc
loopne
not
out
vpand
fucomp
in
sti
sti
lea
rcr
repz
icebp
aaa
cmc
int3
clc
cmp
aam
in
iret
jecxz
xchg
test
hlt
jmp
std
sbb
call
aad
cmp
cli
not
fucomip
icebp
xchg
cld
aam
fucom
int3
in
xor
out
fdiv
inc
shr
rcl
out
jmp
cmp
cmp
loopne
jmp
out
loopne
ror
shr
fmulp
int3
repnz
lret
call
cmp
addl
lret
lret
iret
ret
out
repnz
iret
cli
shl
int3
cmp
out
fmull
xchg
cs
shl
cs
sar
loopne
fadd
aam
clc
aas
mov
adcb
icebp
cli
not
rcl
jmp
aam
xchg
loope
jmp
cld
test
cld
in
jecxz
xor
sub
aad
jmp
cmp
xchg
std
ds
roll
xchg
lret
std
xor
fcom
hlt
jmp
rol
out
not
jmp
jmp
test
rorl
int
int3
enter
cmp
jmp
test
orb
out
cmp
lret
aam
cli
int3
lock
icebp
cmp
ret
jmp
fadd
fdivr
xchg
rcl
ret
xor
icebp
xlat
not
leave
fnstcw
out
cmpb
sarb
out
clc
in
dec
lret
cld
xchg
loope
fdiv
xor
rcl
ljmp
out
adc
cmp
out
lret
in
hlt
in
lret
ss
clc
test
stc
aad
ljmp
xchg
jecxz
in
xor
ljmp
cmp
iret
into
iret
aam
cli
ljmp
in
lret
into
jecxz
into
out
cli
std
in
repz
aad
xlat
call
call
xor
out
fcmove
cmp
fcomip
cmp
ds
fsub
out
loopne
sti
out
in
incb
repnz
out
cmp
fsub
rol
cmp
xchg
lret
ljmp
and
repnz
rcl
loopne
sarb
in
int
hlt
sub
fucomp
cmp
cmp
shl
into
cli
cld
movb
fisttps
in
xor
aam
aad
cli
lock
repz
cmc
mov
jmp
fsub
int
mov
fimull
stc
out
leave
out
lret
in
sarl
and
out
cld
in
ror
out
sub
xor
inc
fadd
add
orl
add
imul
aam
aas
ret
lret
fst
fnstenv
lods
pop
inc
dec
pop
xlat
and
jg
roll
jle
aaa
xor
lret
loope
cli
ret
aam
enter
std
icebp
std
xchg
int
int
shl
jmp
xor
into
lret
into
sarb
int3
int3
repnz
aad
fstp
mov
xchg
loope
out
ror
in
aad
cmp
xor
fiaddl
loop
jmp
fimuls
xchg
adc
int
int3
fst
repz
hlt
aam
shl
jmp
out
loop
call
fdivs
ror
in
dec
fcmovbe
out
cmp
roll
cmp
fcmovb
shl
out
sti
ljmp
fcmovbe
cmp
loopne
in
repnz
cld
div
enter
xchg
test
test
in
aad
int3
aad
cmp
fldl
fcom
in
xlat
enter
loop
int3
xchg
sub
ljmp
int3
fchs
iret
sbb
jmp
ret
ljmp
int3
icebp
xchg
lret
jmp
lret
out
aam
fnstcw
rcl
shl
clc
in
mov
cli
clc
jmp
lret
lret
mov
xlat
xor
cmp
repz
xor
ljmp
mov
loope
cmc
repnz
shll
cli
cmc
ret
fistpll
std
lret
stc
lret
nop
rclb
idivb
leave
ds
cmc
cmp
jecxz
enter
les
icebp
test
xchg
rol
clc
hlt
cmc
repnz
lock
add
fxam
add
fxch
cli
or
clc
shl
ret
das
imul
aaa
out
aas
repz
stc
hlt
test
xor
loop
in
out
xchg
hlt
xchg
iret
sub
les
ss
cmp
std
cmp
aas
iret
stc
sar
loop
xchg
and
nop
sub
jecxz
repnz
cmc
out
cmp
out
fcomp
out
int3
cli
in
nop
in
sti
loope
aam
call
xor
loopne
rcl
cmp
xlat
out
fimull
in
ljmp
into
ret
cli
icebp
lret
xor
loop
aas
ffreep
or
stc
out
mov
int3
not
loope
int3
xlat
into
int
lret
lret
aam
fcomip
call
fstp
mov
lret
in
cmc
int3
sub
int
out
jmp
in
fcmovnb
roll
cli
int
decb
cmc
in
enter
stc
loopne
aad
fdivr
fadds
jmp
stc
int3
incb
out
cmp
fsubr
lret
fcomip
stc
fstp
adc
xlat
fdiv
mov
in
call
out
xlat
cmc
std
sarb
rolb
jecxz
clc
cli
fcmovnb
leave
fiadds
notb
jmp
std
sbb
fstp
cli
clc
cli
aad
cmp
std
lock
lret
mov
int3
ljmp
clc
icebp
out
fcomi
incb
jecxz
lret
rcll
mov
int3
int
jmp
int
sti
rcl
roll
iret
stc
mov
xchg
div
loop
clc
hlt
fcmovbe
sbb
in
sti
ret
ljmp
loope
rorb
fdivr
leave
sar
cmp
sarb
loopne
cld
jecxz
std
xlat
fsubrp
orl
in
fdivrs
sti
cmp
hlt
rcl
xlat
mov
add
orl
xchg
lock
loope
cmp
xor
ret
xlat
rcl
repz
sbb
mov
ss
stc
int3
fxch
call
std
ffree
cli
call
fildl
mov
cmp
hlt
not
loopne
into
loope
cld
hlt
aam
cmp
test
sar
into
mov
repnz
cmp
test
cli
fadds
repz
fsubrp
into
enter
aad
shrl
xor
sar
repnz
int3
in
out
mov
ljmp
into
out
jmp
shr
leave
enter
jmp
vpsrad
mov
stc
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
neg
mov
sbbl
push
and
lea
andl
mov
neg
jmp
rcl
xlat
fcom
push
outsl
dec
fistps
mov
roll
jle
ljmp
shr
ljmp
neg
fcom
in
fcmovnb
rcl
testl
xor
aaa
hlt
ror
hlt
stc
ror
stc
jecxz
fisttps
lret
in
xchg
test
ror
icebp
shl
xor
clc
xor
fincstp
shl
aas
xchg
mul
aad
loope
in
sti
jmp
mov
cli
out
lret
sarl
or
rcl
out
cld
aam
out
sti
dec
jecxz
addb
aad
in
sarl
int
push
loopne
shl
cmc
fneni(8087
mov
test
stc
loop
xor
int3
ror
xor
ret
into
out
fcmovu
cli
shl
into
sti
test
fadds
fildl
adc
into
enter
xor
lret
fdivrl
jmp
enter
mov
leave
xor
int
aaa
testb
call
lret
test
repnz
xor
jecxz
int3
jmp
out
xorb
cli
cmc
sti
fdivp
ret
lea
hlt
mov
xor
lret
dec
loope
test
sti
jmp
repz
in
cmp
int
loope
cmc
xchg
cmp
xor
hlt
aam
rolb
addl
mov
test
mov
test
iret
in
rcl
out
repnz
fmulp
sar
test
sti
shl
mov
in
in
lret
cli
mov
mov
std
fstp
repz
fincstp
loopne
rcl
icebp
addl
nop
xchg
in
loopne
in
jmp
sub
sti
inc
vshufps
int
rcr
xor
jmp
sti
aas
icebp
cmp
add
loopne
out
cli
test
xchg
xchg
xchg
shl
xor
hlt
div
in
fdivrl
ret
aam
cmp
test
jmp
addl
iret
aam
int3
in
sub
fadd
jmp
mov
xchg
mov
xor
jecxz
iret
hlt
cmp
shl
in
ret
les
loope
movl
ret
out
aam
leave
lret
ret
fucomip
rcl
fincstp
fst
out
fcomip
cld
out
loopne
sub
divl
lock
std
jecxz
stc
shl
xchg
cli
ljmp
fstl
xlat
ljmp
aam
sbb
loop
jmp
out
test
xor
into
repz
into
ss
icebp
ret
sbb
repz
fdivrp
jmp
jmp
mov
int3
shl
lret
fcom
aam
aam
loop
xchg
int3
loop
sti
shl
cld
nop
xchg
icebp
sub
xlat
hlt
fdiv
cld
cmp
iret
ret
ds
cld
icebp
out
cmc
out
in
fiaddl
xchg
cmc
hlt
stc
aad
cmp
cmp
repnz
icebp
in
addb
in
cld
out
xchg
addl
sar
cmp
and
rol
mov
out
call
xchg
mov
test
aad
fcmovbe
cmp
xor
out
loop
enter
mov
test
ljmp
icebp
jmp
leave
cmp
in
out
call
cmp
mov
fsubr
out
in
leave
cli
ds
aas
ror
sti
cmp
clc
ljmp
out
and
out
rol
out
aad
ror
enter
loop
out
cmp
loopne
ret
hlt
jmp
clc
rcl
out
sub
clc
cmp
out
cmp
in
fsubr
loopne
ds
loop
lds
mov
xorb
hlt
sti
cmp
fsubrp
jmp
hlt
fiadds
loope
ret
out
mov
jmp
fisttpl
xor
ror
lret
cmp
repnz
ret
rorb
ret
xchg
lret
loopne
not
call
iret
xor
jecxz
cmp
testb
out
out
loopne
stc
int3
aad
divb
mov
push
jmp
aam
enter
aad
cmp
and
nop
jg
roll
jle
loope
icebp
lock
fst
mov
out
lea
cmc
fxtract
ljmp
test
sbb
rcr
addl
jmp
iret
fcmovnu
out
imul
fdivp
rcl
cmpb
aam
add
enter
in
or
in
idiv
leave
in
cmp
rcl
shl
iret
call
mov
lret
mov
adc
cmp
aam
cmp
sar
sarl
rcr
out
out
ret
fcmove
mov
mov
cmp
div
cmc
lock
cmp
ret
into
repnz
cld
or
mov
test
xchg
iret
jmp
fcmovb
fsqrt
hlt
leave
rcr
shl
and
in
aad
lret
addb
int3
cs
leave
jmp
cmp
xor
cld
aam
mov
out
fucomip
fsubrp
in
call
sub
rol
ljmp
jmp
cmc
ds
leave
ret
call
out
dec
fisttps
xor
into
clc
fdivr
out
in
cld
cmp
loopne
rol
cmp
aam
out
mov
call
cs
aam
push
cmpb
loope
shl
loope
fdivr
ljmp
mov
jecxz
loop
aam
jmp
xor
std
std
hlt
iret
repz
flds
mov
xchg
repz
int
loop
aam
lds
out
fidivrs
sti
icebp
fcmovu
rol
cld
mov
out
mov
jecxz
test
out
xchg
ret
call
icebp
fdivp
cmp
icebp
in
shl
out
jecxz
out
fdivr
shl
addl
repnz
in
ror
icebp
lock
fyl2xp1
repnz
ljmp
fiaddl
divb
cmc
cmp
fucomp
fdivr
fmul
fsub
xlat
repz
shl
out
lds
lds
stc
enter
repz
fyl2x
cmp
add
xlat
test
enter
vpaddw
jmp
ss
clc
fidivrl
cmp
les
int
jecxz
and
fidivl
cmp
stc
int
in
cli
add
mov
into
out
repnz
fadd
in
rol
ss
int3
cli
hlt
in
sar
mov
addb
enter
imull
sar
lock
lock
in
in
fsub
xlat
xlat
mov
jmp
ljmp
cs
out
ljmp
loop
out
std
cld
les
out
stc
stc
fcomi
xchg
in
aam
aam
jecxz
iret
xor
cmp
stc
rorb
decb
lret
fmul
ss
enter
ss
inc
test
out
loopne
xchg
out
jecxz
cmc
in
idiv
aad
in
ret
iret
icebp
cmp
lret
lret
mov
shl
xor
fcmovnbe
xlat
icebp
lret
fidivrs
cmc
int3
cmp
xchg
jmp
xchg
std
into
enter
out
enter
repnz
fucomi
std
xlat
test
out
out
loope
cmp
in
lock
xor
aam
xor
lret
rcl
neg
cmp
loopne
out
mov
fucom
or
out
test
stc
ror
repnz
aam
rcl
xlat
stc
shl
cmc
not
nop
xchg
fsubrp
shr
ret
repnz
shr
std
loopne
ds
cmp
xchg
test
nop
int
sub
out
out
cmc
icebp
cmp
fcomip
int
fst
out
orb
xchg
in
xchg
test
ljmp
std
aaa
lret
cmp
cmp
cmp
and
or
jmp
lret
xor
int
aaa
loopne
xor
cld
aam
mov
xchg
frstpm(287
ror
xchg
nop
leave
aaa
xor
aam
fucomp
aam
int
rol
lds
ljmp
mov
aad
leave
leave
out
cld
cmc
sub
sar
icebp
cmc
neg
clc
enter
out
loop
push
mov
mov
mov
movl
mov
xor
jmp
rcl
enter
fcmovne
fdivl
xchg
jg
roll
jle
aad
out
cmp
cli
shr
xlat
loopne
fldl
fmuls
aad
ljmp
iret
icebp
ret
into
out
jmp
jmp
cmp
ljmp
hlt
mov
nop
out
loope
aad
in
in
iret
stc
out
cli
fcmove
fucom
into
aam
ffree
cld
out
aad
fucomi
iret
jmp
cmc
out
int
lock
sti
cmp
in
cmpl
cli
shr
fcmovbe
fimull
nop
aam
into
rol
cmp
cld
addb
faddp
cli
sti
cli
out
sbb
test
lret
into
loope
cmp
in
out
xlat
cli
mov
int3
fsubp
out
enter
out
xor
fmul
ss
into
out
into
sar
cmp
clc
mov
test
fcomip
incl
out
out
ss
cmc
in
xor
shl
repnz
call
testb
clc
out
fmul
jmp
std
xchg
stc
out
lock
out
sar
xor
rcl
shl
not
faddl
loop
enter
std
xchg
jmp
fdivr
out
fmul
cmpb
inc
test
ret
jmp
into
std
mov
shrl
out
shll
div
in
aas
fcom
rolb
sbb
fistl
int
leave
call
lock
fadd
out
fcmovbe
cld
ljmp
call
cmc
clc
jecxz
ror
aaa
out
jmp
in
cmp
enter
in
out
rcr
cld
test
hlt
lds
cli
out
call
adc
fsub
mov
xlat
stc
std
mov
shl
nop
loop
cmp
fdiv
aaa
imul
sarb
fnstcw
rolb
in
xchg
rorl
ret
aad
call
aad
hlt
aam
ror
xchg
out
jmp
xlat
jmp
out
fimuls
leave
cmp
ljmp
lock
aas
out
rcl
in
enter
xchg
cmp
fmul
cmp
testl
cmc
decl
fsubrp
mov
jecxz
xor
sub
clc
in
fcmovnu
ret
aam
leave
jmp
fdiv
call
icebp
cmp
icebp
clc
fdivrl
idiv
ret
cmp
rcr
ret
fisttps
incb
rol
std
fcmove
clc
loopne
adc
add
fimuls
jecxz
mov
mov
iret
aam
lret
xor
ds
fiaddl
out
loope
test
xchg
mul
ret
int
cli
out
enter
test
sar
stc
aas
rorb
mov
lock
cmp
fcmovne
shl
cli
lock
test
vpmaxub
test
xchg
lret
fcomi
xchg
repz
rcl
cmp
ss
sarl
clc
test
cli
imul
ret
jmp
or
aam
rcl
into
ror
fsin
out
jmp
in
div
leave
fmulp
in
call
xchg
jmp
cmp
ret
xor
jmp
repnz
sti
aad
test
mov
test
aad
cli
stc
xor
xor
out
add
rcl
fiaddl
jecxz
rorb
call
ljmp
aad
in
sti
std
loopne
ror
ds
xchg
int
out
leave
fisubrl
ljmp
aas
sbb
aam
jmp
sti
mov
xchg
ret
in
xlat
ss
jmp
in
aad
leave
mov
out
in
in
lret
shl
clc
aad
pushl
cmp
fadds
mov
jmp
mov
xor
ss
ret
xor
icebp
aaa
clc
iret
cmp
jmp
mov
jmp
aad
iret
ret
into
imul
out
hlt
clc
loope
fsubr
shl
cmc
jecxz
lret
ljmp
cmc
rol
in
aad
xor
fcmovbe
ljmp
sarl
movzwl
adc
mov
xor
mov
or
mov
xorl
xor
adcl
jmp
int
rcl
int
stos
fimuls
test
cltd
jg
roll
jle
test
ljmp
in
loop
aad
cmp
cmp
lock
test
in
orb
shl
xor
xor
testb
incl
fsubr
fcomp
sti
xchg
cld
mov
ret
jecxz
in
xor
test
fsubr
jecxz
stc
adcb
icebp
rol
jecxz
loop
iret
icebp
aam
cmp
out
repz
test
sbb
and
push
out
rol
aad
icebp
hlt
cs
jmp
fiaddl
adc
xchg
int3
test
icebp
rol
cmp
cmp
cmp
iret
iret
lret
shlb
in
fdivr
loop
ljmp
lock
div
fsub
iret
ljmp
out
cmp
ret
enter
in
mov
in
mov
cmc
xor
sub
out
in
rcr
test
shl
int
lret
xchg
out
repnz
fucomip
aaa
iret
lock
in
shr
imul
ds
repnz
cmc
aad
mov
loopne
jecxz
out
icebp
repnz
lret
jecxz
aam
shl
xchg
cmp
int
rcl
lock
fnstcw
stc
in
aaa
cmp
stc
sar
clc
repz
iret
mov
xchg
lret
xlat
in
cld
call
bnd
sar
loope
fcmovnb
incl
jmp
test
test
iret
ds
xor
loop
fsubrp
jecxz
iret
loop
out
in
out
xor
sti
ds
std
aam
loop
test
mov
clc
fcmovnu
lret
ror
loopne
loop
in
in
in
std
iret
lret
aam
stc
sti
cmp
cmc
in
std
fucom
in
shl
fucomip
iret
das
icebp
fnstcw
cmp
neg
lret
fcmovbe
xor
incb
mov
xchg
xchg
loope
cli
ljmp
out
sti
and
iret
loop
shl
test
rorl
in
lret
hlt
call
lret
shl
fdivr
ret
sar
ret
jmp
std
or
mov
call
ds
loopne
int3
aad
shl
xchg
in
in
test
xchg
out
repnz
dec
incl
fdivr
loopne
incl
lock
imul
in
cld
ds
iret
mul
aad
cmp
shl
aad
sar
sti
test
test
jmp
xlat
push
in
sti
cli
ds
fcomip
call
out
decb
xchg
rol
clc
hlt
xlat
cmp
cmp
jmp
stc
xlat
loopne
flds
repnz
in
adc
int
lock
cli
cmp
xlat
loop
icebp
xchg
cld
lret
stc
fiaddl
neg
out
aad
lret
iret
aam
repnz
cld
hlt
std
fadd
in
testb
out
out
cmp
aam
cmp
xor
aas
jecxz
cmp
aad
loopne
in
cmc
test
ljmp
leave
loop
into
fincstp
lock
ss
testl
leave
jmp
xchg
nop
hlt
fsub
cli
test
std
shl
loopne
cmp
test
ds
enter
adc
lret
xor
cmp
shr
lret
shl
sub
loopne
loopne
mov
icebp
leave
lea
ljmp
loopne
cmp
fcmovu
std
fadd
xchg
mov
div
in
mov
in
fsubp
xchg
mov
jmp
cmp
fcomp
int3
lret
loope
xchg
aas
sti
mov
jmp
dec
in
test
cld
stc
cmp
aad
out
neg
test
xlat
test
nop
int
shl
xor
ljmp
int
fcmovu
xchg
mul
fld1
sbb
addb
int
xor
leave
in
cmp
cmc
neg
cmp
mov
mov
test
jecxz
std
out
loop
xor
call
jmp
enter
fmul
fnstcw
mov
jg
roll
jle
fcmovnb
sar
enter
repz
test
repnz
in
in
or
out
in
lret
les
in
iret
stc
fcomp
out
aas
out
cmp
repz
out
test
test
lock
into
xor
ljmp
cld
fsubp
rcl
out
in
and
mov
stc
xchg
std
mov
aam
sti
xor
shl
into
fistpll
cmc
rcl
into
cmp
lret
in
sbb
sbb
xor
shl
repnz
fmul
ljmp
loop
shl
cli
aam
aad
leave
in
stc
enter
mov
aad
xor
in
lock
cmp
cmc
add
ljmp
loop
cmc
mov
out
xlat
aam
hlt
xor
sbb
sar
xchg
addb
cli
iret
call
mov
adc
cmp
icebp
aaa
in
fldl
ffreep
in
mov
enter
in
xor
sti
int3
ror
in
int
xchg
out
in
leave
ljmp
lock
iret
mov
ds
std
cmp
loop
mov
jecxz
xchg
sti
test
xchg
xchg
aaa
rol
xor
out
loope
cmp
out
roll
out
out
in
in
incb
iret
ret
xor
fdivrl
rcl
cmp
hlt
xlat
xchg
in
in
clc
xchg
and
lock
call
ljmp
ret
fdiv
neg
aam
mov
jmp
xchg
xchg
orl
in
fnstcw
shl
aad
in
repnz
mov
int3
in
mov
out
iret
call
call
adc
cmp
rol
cmc
in
into
xlat
in
mov
lret
test
jecxz
cmp
jmp
stc
in
fcmovne
cmp
in
mul
cld
out
fsub
cmp
fdivp
hlt
mov
loope
call
into
cmp
cmp
cmp
fcomi
aad
les
addl
loop
lret
fsubrs
fmul
cmp
aad
stc
xchg
ret
aas
clc
in
fmul
xchg
icebp
std
enter
into
xor
iret
fldl
aam
fcompp
loop
std
xchg
addb
rol
loopne
aam
fnsave
rcl
in
fidivrl
loopne
mov
or
xchg
call
ret
int
ror
fcmovnbe
into
test
aaa
rolb
in
orl
rcl
ret
das
loop
ss
out
shr
lret
imul
lock
sar
idiv
into
in
out
cld
cmc
popl
out
jmp
cmp
clc
sar
and
std
jecxz
int3
out
decb
clc
xlat
rcr
aad
ljmp
loopne
cmp
aad
clc
mov
loope
fldl
cli
call
aam
cmc
cmp
fadds
lock
jmp
les
int
ljmp
inc
repnz
faddp
ret
jecxz
fpatan
into
addb
cmp
out
sar
in
out
sar
in
mov
int3
orl
test
cmp
fdiv
fdivr
out
ror
rol
aam
push
fadds
repnz
out
sarl
clc
stc
in
ds
fld
aam
repz
in
enter
icebp
jmp
xchg
iret
clc
cmp
xor
xor
cmp
ljmp
aam
lret
ljmp
mov
mov
icebp
int3
neg
repnz
div
xlat
fsubr
sbb
out
and
loopne
ljmp
ret
idivb
ror
aaa
cmp
ret
xor
out
jecxz
fld
dec
lea
call
rcl
aad
rcl
jmp
ret
repz
cli
clc
loope
xchg
jecxz
rorl
aaa
xor
call
xor
jmp
in
cld
icebp
hlt
idiv
rorb
out
das
loop
out
cmp
cmc
mul
cmp
cli
repz
jmp
fiaddl
movb
shrb
add
imul
enter
fst
ffree
and
dec
jo
adc
jg
roll
jle
in
ret
filds
int
xlat
xor
iret
out
jmp
rolb
jmp
int3
fcmove
lret
xchg
shlb
shr
xor
repz
idivl
icebp
xlat
ret
aam
xlat
and
fadd
out
cli
out
xor
xchg
in
nop
loope
cli
into
cmp
aam
shl
loopne
lock
sti
fdecstp
test
jecxz
push
jmp
std
fsubp
enter
iret
out
jmp
clc
test
stc
ret
loope
fmul
out
adcb
xchg
out
iret
lock
xor
ror
test
loopne
orl
fisttpll
cli
out
lret
shr
clc
cmp
repz
loopne
in
fisttpll
xchg
in
out
repnz
out
bnd
fcmovnbe
stc
jmp
int
jecxz
lock
aas
xor
aaa
shl
out
xlat
cmp
repnz
icebp
rol
std
test
cmp
in
in
jmp
jecxz
shl
stc
fsubr
jmp
rcr
sti
cmp
loopne
idiv
cld
les
mov
ret
repnz
ljmp
repnz
repz
stc
ljmp
int
xor
shlb
stc
fdivrp
in
int3
adc
shl
rcr
mov
shl
out
enter
stc
int3
enter
hlt
add
aam
sbb
ljmp
lret
mov
clc
cld
clc
sti
shl
cmp
ds
cmp
xchg
int
test
shr
in
nop
or
cmp
into
hlt
lock
hlt
into
loopne
idiv
stc
xlat
loop
fists
enter
into
in
out
neg
loop
fcmovnbe
jecxz
add
fimuls
xchg
repnz
shl
hlt
cmp
iret
out
std
fcmovnb
hlt
xchg
xor
std
test
test
iret
ror
enter
fcmovnbe
aas
loop
repz
loop
jecxz
lret
out
iret
xchg
cld
xchg
cmc
in
das
xor
imul
repz
sbb
out
fcmovb
xchg
fsubp
sbb
xchg
out
ror
mov
ss
icebp
cli
repz
icebp
fucomp
not
cmp
rol
in
call
adcb
icebp
in
xor
cmp
rcl
cmp
jecxz
out
rcr
xchg
hlt
cli
std
cld
idiv
cli
decl
loope
fcmovne
int
std
enter
cmp
out
xlat
xchg
loopne
xchg
xor
aaa
xor
fcomp
cli
aad
fcomp
cmp
fdiv
and
out
out
jecxz
jecxz
iret
test
aas
dec
aad
fst
xlat
adc
fmulp
test
out
rolb
mov
out
repz
enter
testb
cmc
icebp
jmp
fsub
incl
sub
leave
in
cmc
fidivrs
fcom
cmp
decb
loop
repnz
cmp
sti
enter
cmp
repz
loope
in
std
les
in
subl
out
stc
aam
int3
xlat
idiv
repnz
std
fcompp
mov
sti
flds
repz
icebp
xchg
shrl
leave
not
clc
cmp
fcmovbe
cmp
out
int
repnz
test
ret
cmp
jecxz
iret
test
cmc
lock
inc
in
fcmovnu
iret
xor
incl
in
out
iret
sub
into
in
xor
idiv
aam
out
hlt
add
mov
jmp
mov
xchg
sub
in
stc
sti
loopne
rolb
out
leave
aam
in
mov
in
int
repnz
cli
cmp
repz
jmp
loop
test
jmp
in
enter
sti
cmp
shl
call
test
repz
out
call
in
call
sarb
div
xchg
in
sub
int3
call
das
fcomi
repz
into
aam
stc
add
addl
div
not
mov
movl
cmp
movl
jmp
rol
mov
xchg
push
add
ss
add
add
hlt
std
xchg
aam
imul
cld
out
mov
hlt
out
xchg
vcvttpd2dq
fcmovne
fcomi
int3
enter
cmp
stc
jecxz
leave
aam
fcmovne
mov
iret
cmc
ljmp
cmp
loop,pt
cmp
in
mov
out
std
loop
in
in
jecxz
sub
jmp
sar
cmp
in
cmp
cld
fldpi
call
incb
in
hlt
ret
cmp
ss
aad
sarb
aam
loope
cld
mov
in
aad
sbb
into
in
fdiv
loope
out
clc
out
repz
ds
std
shl
in
stc
rcl
out
out
sti
test
in
pop
leave
cli
int3
out
cmp
into
clc
rcl
adc
fadds
mov
nop
mov
rcl
mov
xor
iret
xor
cmp
lock
adc
rcl
jmp
mov
addb
xlat
aaa
out
clc
repnz
ret
cli
iret
ret
adc
ds
mov
loope
int3
aam
enter
cmp
stc
out
cld
shl
shl
aad
cmp
out
incl
das
enter
cmp
jmp
test
cli
into
cmp
in
out
icebp
int3
ficoml
jmp
repz
cmp
fprem
cmc
cmp
fdivr
adc
sar
xchg
xor
call
lret
fcomp
stc
sub
shr
lret
loopne
sti
loopne
int
hlt
xor
leave
rcr
in
in
sti
cmp
out
bnd
std
sar
mov
loop
orl
cld
xor
lret
in
into
shl
test
leave
std
int3
lock
lret
sub
xor
cli
xor
xor
into
cmp
neg
rcr
ror
filds
cld
mov
test
int3
repnz
rcr
xlat
iret
sar
sar
iret
not
test
ret
xchg
loopne
loopne
int3
fstl
out
aam
into
cld
ds
sti
cmp
add
ljmp
xchg
lret
in
repnz
in
out
lret
iret
cli
repz
out
loopne
cmc
mov
loop
into
out
out
jmp
clc
sub
lret
xor
loopne
cmp
idiv
vpsubusb
std
in
mov
in
aad
ss
cmp
out
aam
loop
cmp
fcmovnb
xor
mov
in
into
loopne
cmc
loope
clc
lock
out
out
repz
ljmp
aad
std
out
addl
out
aam
into
imul
iret
cmp
out
rcr
repnz
in
ret
aas
in
mov
icebp
call
in
hlt
xor
ljmp
test
mov
in
shl
cmc
in
rcl
sub
out
lret
int3
aam
repz
sar
lock
fisttpll
fiadds
clc
repz
aam
cli
aam
aas
loop
fnop
imul
xor
fsub
mov
sub
loop
imul
ljmp
div
roll
mov
addb
in
xor
loope
jecxz
std
stc
jmp
repnz
filds
loopne
out
cld
sti
mov
cmc
in
jecxz
not
ljmp
shl
iret
and
cld
loopne
ret
int
aad
divl
fdivs
ljmp
ffree
sarb
stc
orl
ror
enter
in
fucomi
lock
ljmp
mov
shl
testb
mov
mov
rol
jmp
in
int3
fnstsw
movl
mov
nop
test
lret
cmp
xlat
int
ljmp
in
faddl
movl
repz
not
icebp
cmp
icebp
out
cld
fimull
mov
xchg
fldl
rol
fcmovb
std
int
inc
icebp
ds
in
rol
fdivr
test
test
cmp
add
mov
test
inc
add
adc
movl
add
jmp
aas
aam
int3
aad
lret
fstl
dec
out
stos
jg
roll
jle
shr
ljmp
ds
icebp
jecxz
into
cld
lock
leave
rorl
mov
repz
mov
shl
in
cmc
ljmp
xchg
std
roll
in
lret
in
xchg
in
lret
out
leave
repnz
ret
aad
ret
test
fdiv
lret
sti
fiadds
xor
ljmp
stc
in
ret
out
in
icebp
icebp
repnz
int
sti
flds
xor
lret
out
aaa
cmp
ret
aas
xlat
xbegin
imul
stc
lret
mov
jecxz
enter
xor
ds
shr
test
aad
fsub
mov
xchg
out
shl
loope
xor
aam
cmp
lret
repnz
out
fiaddl
jecxz
rorb
fsubrp
int3
int3
int
shl
hlt
rcr
idiv
repnz
rcr
test
sti
xchg
out
in
iret
incb
sti
out
xlat
cmp
hlt
cmp
shl
cli
orb
stc
mov
test
shlb
rcr
cmp
idivl
out
stc
fcomp
fcmove
xchg
xchg
std
loop
into
out
loope
out
repnz
cmp
leave
lret
fdivrl
or
clc
call
int3
into
sub
rorb
fcom
fdiv
in
jmp
or
stc
cmp
call
jecxz
into
out
rcll
shr
shl
cmc
in
in
hlt
sarb
test
ds
rol
clc
fadds
fdiv
mov
int3
ss
ror
in
xor
cmp
cmp
or
out
fcomip
xchg
out
shl
xor
aad
lret
jmp
stc
int
cmc
xchg
imul
mov
loopne
xor
sub
xor
fdiv
repnz
aas
clc
out
sbb
stc
repz
test
mov
in
nop
into
out
in
icebp
aam
in
in
in
cmp
shl
cmp
xlat
add
jmp
xchg
rol
ret
hlt
hlt
out
call
aas
cmp
ret
sbb
test
xor
into
lock
fmulp
fcmovnu
jmp
xchg
fsubr
inc
in
in
loope
in
roll
cs
hlt
jecxz
shl
xlat
fdivr
repz
clc
cmp
sti
rol
ret
call
fsubp
fninit
orl
aaa
idiv
jmp
in
aas
repz
xchg
hlt
sti
loopne
std
jmp
icebp
xchg
int
xchg
test
out
cli
hlt
rcl
cmp
cmp
aam
div
leave
lock
enter
into
leave
in
std
fcomp
rcr
shl
repnz
shl
test
mov
fimull
ret
loope
out
xor
adc
cmc
fdiv
icebp
filds
loopne
in
jmp
xchg
loope
aam
ss
out
cmp
in
rol
neg
out
clc
movb
out
in
lock
ljmp
lret
clc
cmp
cmpb
adc
mov
out
test
in
ror
xchg
cmc
in
jmp
shl
cmpb
clc
addl
std
leave
xchg
xchg
loopne
fsub
loop
repnz
aam
adc
aad
idiv
test
call
jmp
in
loopne
fcmovnu
aaa
mul
jmp
rcr
cli
shl
jmp
fiaddl
xchg
ror
enter
clc
repz
fcomip
shr
jecxz
xchg
aas
lret
mov
call
int
ds
int3
loop
loope
test
loopne
in
testb
jmp
into
out
cmp
cmp
ss
sti
out
stc
shl
jmp
lret
mov
mov
int
cmp
out
neg
fyl2xp1
cli
loope
adc
and
int
out
clc
in
iret
in
fldl
ret
not
cmp
aas
repnz
std
rcl
jmp
mov
loopne
jmp
fistl
out
sub
xor
loope
not
testb
and
add
add
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
dec
mov
mov
mov
imul
jmp
lret
ror
fstp
fnstsw
out
jo
pop
cmpsl
xchg
scas
jg
roll
jle
fadds
in
fnstsw
jecxz
testb
xor
rolb
xchg
mov
rcr
cld
ljmp
xchg
cmp
cld
cmp
fucomp
cmp
std
int
xlat
sub
out
jecxz
loop
jmp
fsubr
out
cli
fidivl
cmp
out
aad
lock
idiv
int3
fdivr
sti
int
leave
in
call
ret
xor
call
cld
ret
les
jecxz
fsub
mov
loope
cmp
out
std
sti
out
hlt
fstpt
ds
in
stc
clc
clc
fcomp
fildl
jecxz
mov
jmp
cld
ss
loopne
fidivrl
sti
ret
ret
fcom
aam
loope
test
iret
xchg
mov
xor
call
out
fmul
cmp
icebp
repnz
test
cld
loop
mov
loope
ret
test
aam
jmp
repnz
aaa
icebp
lret
cli
cmp
int3
icebp
repnz
or
mov
std
nop
xchg
out
in
xlat
into
aaa
cmp
aas
into
sti
jecxz
fstp
cmp
xchg
out
fcom
int
sub
mov
ror
out
icebp
jmp
div
loop
jecxz
xlat
aas
jecxz
jmp
out
mov
in
aad
cmp
repz
cmp
loop
aad
cmp
cld
out
orb
hlt
xor
in
cli
lret
jmp
cmp
in
aas
xchg
hlt
ljmp
std
nop
lret
xor
out
aam
test
fsubr
cmp
loopne
lock
aas
fcmovnu
test
mov
fmull
xor
fdivrl
ror
idiv
fincstp
fsqrt
test
jmp
nop
nop
mov
icebp
clc
jmp
aaa
repnz
xor
loopne,pt
ret
cmc
idiv
mov
enter
ror
loopne
not
cmp
ror
cmp
xor
cmp
neg
fildl
out
aad
test
sub
clc
out
xor
test
cmp
stc
test
mov
mov
cmc
xor
jecxz
cmp
cmp
out
out
rcl
stc
cmp
fsubr
cld
sti
jmp
loope
hlt
xchg
jmp
xor
cld
cmp
out
xor
std
loopne
clc
xlat
sti
in
sar
into
jecxz
out
shlb
xor
hlt
call
hlt
ss
std
addb
in
jecxz
roll
cmp
hlt
int3
iret
fistpll
iret
shl
sarl
call
ret
loope
lret
xchg
in
xor
loope
repnz
stc
enter
fcomi
loope
cld
lock
in
int3
sbb
mov
and
xor
jmp
fidivrl
shl
fidivrs
mov
out
in
into
shl
rcr
xchg
in
ljmp
cli
sarl
icebp
test
ljmp
test
fsubp
test
std
cmc
xor
lret
sbb
jecxz
enter
lret
int3
iret
fsubr
mov
ljmp
lret
jmp
cmp
into
xlat
mov
xlat
fcmovne
std
sbb
adcb
in
call
cmpb
imul
cmp
xchg
xchg
shr
xchg
test
cmp
hlt
aad
fsub
roll
fadd
leave
orl
repnz
int3
cli
in
shll
cmc
ds
xlat
cli
enter
std
int3
out
clc
mov
nop
rorb
int3
jmp
ds
aas
test
loopne
stc
call
in
mov
std
shl
jecxz
clc
in
shl
testb
div
mov
clc
fld
orb
enter
xor
enter
loop
ffree
aad
add
clc
sti
loopne
mov
mov
loope
ljmp
in
stc
clc
in
in
and
or
repz
loop
fstp
in
cli
out
int
lock
jecxz
lret
cmp
icebp
in
jecxz
flds
out
in
lea
ret
mov
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
jmp
rcl
rcr
fst
xlat
xchg
sbb
or
jle
add
xlat
cmp
cli
iret
shl
ds
xor
mov
out
cld
mov
mov
lea
jmp
sarl
cmp
jmp
call
rorl
xor
mul
lret
enter
cmp
out
repnz
fstp
stc
test
fcmovne
in
fsubrp
lock
divl
clc
repnz
shr
repz
ret
mov
ret
cli
xlat
mov
xlat
mov
int
in
in
aas
fidivl
jmp
loope
repnz
shl
enter
testl
in
loope
in
in
xlat
in
loopne
aad
iret
test
icebp
xchg
call
cli
in
out
fisttpll
xor
ret
lock
cmp
fcmovne
fdivp
ret
cmpb
test
in
and
int
lock
repz
sub
hlt
aaa
enter
iret
fistpll
aas
aad
sarl
rol
fdivr
mov
ror
out
jecxz
xor
int
jmp
loope
cmp
idiv
loopne
rol
hlt
mov
fisttpl
repnz
ljmp
xlat
out
enter
in
shl
into
cmp
stc
ljmp
lret
mov
test
stc
ret
cmpb
jmp
test
in
out
repz
cmc
jmp
test
loopne
iret
cmp
loopne
rorb
mov
aad
lock
in
cli
sarl
lock
xlat
xchg
repz
cli
aad
jmp
mov
std
fucomp
test
loop
fcmove
icebp
cli
out
clc
aam
sbb
clc
rol
ljmp
sub
hlt
shl
test
xor
aaa
jmp
sti
icebp
cmp
enter
call
int3
shl
in
shr
ss
aaa
lret
into
loopne
out
loop
cmp
cli
cmp
clc
lret
mov
fucomi
lret
shl
fcmove
cmp
xor
sti
sarb
push
lds
les
xabort
lret
mov
shll
sti
out
out
out
cmp
cmp
shl
fdivrp
or
xlat
sti
cli
vpaddw
in
jmp
shl
dec
aam
test
rorb
lret
rorb
in
xor
int3
iret
leave
call
repz
ret
out
orl
in
mov
idiv
cmp
xor
out
imul
fsubp
clc
repnz
movb
out
ljmp
out
divb
cmp
fdivp
xlat
sti
mov
ljmp
or
loope
loopne
cli
xor
rcr
cmpb
hlt
repz
loop
fmuls
ffree
hlt
ror
shlb
lret
xor
fldl
jecxz
hlt
xchg
jmp
xlat
hlt
cmp
hlt
aad
rcl
in
std
ds
xlat
jmp
jmp
mov
mul
cmp
divb
out
cmp
xor
adc
shl
fcmovb
int
in
xchg
rcr
xchg
call
cmp
in
cmp
ftst
hlt
mov
leave
mov
repnz
iret
sbb
xor
cmc
lret
xlat
ds
loop
test
ret
repz
lea
fucom
mov
lock
cmp
cld
aad
addb
in
mov
lret
sti
mov
mov
mul
aaa
repnz
cmp
shr
int3
int
ret
fcmovbe
cld
xlat
jmp
out
out
out
aad
iret
lret
xor
aad
div
cmc
jmp
out
loopne
hlt
cld
cld
fsub
or
fucomp
cmc
jecxz
clc
shl
xlat
cs
cli
divl
repnz
repnz
test
enter
xchg
fcomi
clc
xchg
lret
xchg
mov
out
fdivs
into
fcmovnu
rolb
xchg
in
mov
int
xchg
ljmp
jmp
cmp
loop
cld
shr
jecxz
sub
nop
aam
xlat
les
out
iret
cmc
fld
enter
in
in
shr
ret
xchg
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
jmp
rcl
mov
aad
sti
adc
mov
jg
roll
jle
xlat
sti
nop
jecxz
xchg
repnz
xor
xor
test
std
iret
cmp
mov
hlt
in
cli
xlat
test
loope
xchg
xchg
call
out
neg
jmp
fildl
jecxz
in
cli
int3
cmp
xchg
xor
cmc
lret
icebp
stc
int3
cli
shl
int3
aaa
rcl
jecxz
sub
out
notl
mov
fcom
cli
sar
icebp
fsubr
cmp
loop
sti
lock
shl
test
out
fucompp
aam
int3
cs
ret
test
cli
ss
cmp
fld
std
xlat
lea
mov
idiv
in
xlat
jmp
cmp
loope
shll
shl
out
std
fimull
call
call
divl
out
aaa
test
xchg
shl
mov
add
ljmp
ror
out
sti
shl
loope
icebp
call
out
jmp
mov
out
in
fidivs
ret
divb
fnsave
loop
fcomp
shl
cld
test
test
out
test
repnz
enter
shr
lock
std
hlt
int
fchs
mov
in
fimuls
mov
fcmovbe
ljmp
fnstsw
cli
mov
test
popl
int3
jmp
clc
xlat
aam
sar
loopne
test
std
aas
out
ret
nop
std
lret
out
sub
xor
in
into
lret
int
xlat
aad
stc
jecxz
iret
xchg
out
stc
int
out
jmp
test
divb
cmp
xor
cmp
dec
cld
sti
adc
xlat
or
enter
not
jmp
rol
out
aam
aas
xlat
icebp
jmp
std
loope
in
in
in
sti
cli
mov
in
sar
clc
shll
cmp
aad
cmp
lock
cmp
faddl
fadds
mov
cs
lret
icebp
aad
leave
fsub
xor
aam
out
out
ljmp
xchg
loopne
div
out
fdivl
stc
stc
rol
in
clc
sub
jmp
jmp
lock
aad
shl
repnz
cmp
repnz
int
cmc
sti
rcr
enter
test
out
shl
lea
hlt
fmul
out
in
xlat
cmc
ljmp
bnd
loopne
icebp
mov
xchg
ljmp
in
fnstcw
roll
xchg
sar
out
ds
mov
xchg
repnz
xchg
not
sarb
rcr
in
fst
incl
xchg
fcom
xchg
mov
in
test
jecxz
imul
hlt
cmp
aaa
or
lret
icebp
sti
addl
jecxz
fisttpll
out
xlat
xlat
lret
cli
ds
cmp
repnz
adc
shr
mov
xlat
leave
incb
call
cmp
cmc
ss
ljmp
faddp
loope
in
in
ficoms
rcl
xor
repz
in
ss
in
ds
lock
jecxz
mov
in
loope
loope
fsubr
iret
xchg
xor
ror
int
in
loopne
xlat
xor
in
test
hlt
cmp
mov
jmp
in
jmp
rol
loopne
roll
fildl
nop
enter
lea
fnstenv
cmp
out
fidivrl
repz
aas
repz
aam
cmc
aas
out
cli
xchg
iret
call
test
cmp
lret
stc
clc
aas
xchg
xor
fsub
leave
call
shl
call
loop
fadd
and
cmc
test
xchg
add
loope
fucomp
repz
xor
fsubr
ror
cli
sar
cld
jmp
test
nop
sti
sub
hlt
das
aad
cmp
ss
aad
loope,pt
shr
clc
clc
rol
int3
leave
jmp
loopne
xchg
int
mov
ror
jmp
ss
repz
icebp
cmp
testl
fucom
iret
clc
xlat
lret
xor
repz
xor
mov
add
cmp
jmp
rol
lret
fstp
aad
dec
jns
pop
stos
leave
sbb
mov
jle
rcr
shl
fcom
cli
incb
out
les
das
cli
cmp
aam
hlt
in
cmp
fmulp
incl
cmc
mov
into
ret
mov
jmp
jmp
cmp
icebp
cmp
out
enter
mov
mov
call
shl
xlat
repnz
int
in
fildl
jmp
fisttpll
aad
lret
rol
sar
xor
cld
in
shr
rcl
imul
sar
mov
loop
in
rcr
rol
aam
ret
in
fidivrs
aas
cmp
into
clc
aam
aad
in
cmp
mov
in
fstp
loope
in
iret
into
fdivrl
jmp
in
std
rcr
loop
cld
xor
testl
iret
fcmovb
fdiv
aaa
aam
repz
aam
loopne
shl
rcr
clc
fmull
lret
lock
int3
fsub
leave
xor
in
iret
aam
fmul
div
cmp
aam
aad
ljmp
mul
into
out
sti
jecxz
shl
cmp
test
jecxz
and
test
orl
sti
cmp
loopne
lock
std
fucomi
iret
icebp
cmc
xchg
loopne
xchg
mov
leave
shl
adcb
int3
aaa
cmc
fdivr
aaa
rcr
in
cmpb
rol
div
mul
sbb
mov
rorb
out
in
leave
call
cmp
loopne
xchg
mov
mov
in
call
jmp
in
repz
cmp
cmp
lock
loopne
ds
mov
mov
and
nop
in
loope
jecxz
repz
cmc
flds
enter
in
in
int3
mov
in
xor
fdivl
rol
xor
sbb
lock
sti
fucomp
int3
jmp
iret
xchg
mov
out
shr
rcr
aas
jmp
sbb
hlt
cmp
cli
fsubp
fdivr
mov
lret
lock
shrb
xor
int
aam
std
sti
test
test
aam
leave
test
rolb
les
stc
jmp
xor
cmp
cli
test
cmp
xor
into
xchg
jmp
out
clc
das
fcomi
xor
out
lret
cmp
out
lret
xchg
fldpi
enter
repnz
clc
into
aad
frstpm(287
int3
fsub
sti
std
std
out
test
out
lret
fisttpl
fsubrp
xchg
das
enter
xlat
iret
divl
out
rcr
flds
vpmaddwd
lock
mov
mov
mov
repz
aad
fstpt
rol
aam
loop
idivl
loope
rcl
orb
loope
xlat
test
xor
fcmovu
inc
xor
ret
vpandn
enter
shr
in
aam
test
ret
cmp
cmc
test
filds
fcomi
jecxz
icebp
call
cmp
out
ds
in
ds
incl
in
ljmp
nop
lock
cld
cld
call
int
loope
shl
adc
icebp
shl
out
loope
addb
aad
aad
enter
jmp
cmp
shl
fiadds
in
enter
hlt
ficoms
repz
in
icebp
aas
xlat
jecxz
in
rcr
fmull
and
call
movl
iret
out
into
cmpb
addb
in
out
addl
in
int3
icebp
xor
icebp
icebp
cmp
cmp
fcomi
hlt
idiv
ret
les
sti
roll
sub
out
stc
aaa
rcl
cmp
sti
addb
in
test
jecxz
popl
cmc
jmp
jecxz
fldz
call
call
xor
ret
stc
xchg
sti
aad
mov
in
addl
xor
sti
shl
cld
cmc
fld
in
test
mov
lret
filds
neg
out
lret
div
fidivrs
cmpl
orb
out
xchg
test
sbb
add
add
jmp
iret
aad
aad
aad
aad
push
push
mov
fildl
jle
add
shl
call
dec
loope
bnd
cmc
test
xchg
lds
icebp
std
call
cmp
shl
int3
repz
loop
addb
ljmp
loopne
lock
aaa
lock
fsubp
cmp
hlt
test
int3
cld
fcmove
shr
xchg
int3
clc
les
jmp
int3
cmp
loop
addl
fisttpll
int3
rcl
xor
aaa
cld
cmp
cli
aas
shr
sarl
ret
clc
sti
loope
or
fiadds
cmp
sti
xor
xlat
fsubr
sarl
out
cld
test
fildl
out
fimull
into
test
lock
cli
fcom
aad
loopne
test
fcomp
call
int
xchg
xchg
shl
loopne
xor
fdiv
fcomi
loop
aas
fdiv
xchg
xlat
ret
leave
jecxz
fmulp
cli
rcl
mov
in
sarl
fmul
iret
fcmovne
loop
fcmovne
int
fcmovb
fst
call
faddl
mov
out
aad
cld
cmp
clc
fdivr
loopne
mov
lret
jmp
ljmp
lret
cmp
shr
not
cli
shl
shr
sarl
enter
int
mov
in
xchg
das
out
stc
repnz
icebp
cmp
int
in
icebp
fadd
enter
loopne
shl
int3
icebp
loop
xabort
fsubr
int
fcmovnbe
rcl
loop
xor
clc
test
in
cmc
mul
clc
push
fcmovbe
std
xchg
out
call
hlt
lock
aad
fcmovu
decb
loope
mov
iret
iret
xchg
ljmp
out
out
out
call
cmp
iret
cmc
cmp
ds
enter
int
test
divl
cld
lret
cli
ss
loope
aad
lds
in
lret
xor
ret
shl
repz
iret
div
repz
aad
fdivr
not
ret
std
out
jecxz
mov
fldl
xor
lock
in
fcomi
std
lret
aam
fmul
imul
aad
ljmp
jecxz
leave
mov
xchg
loopne
int
cmp
into
ljmp
repz
ret
test
fisttps
rcr
xchg
inc
sub
ss
out
fcomi
repz
clc
aaa
out
std
out
orb
loopne
shl
out
call
fucomp
aaa
shl
xlat
loopne
into
cmc
repz
shl
loop
loop
rolb
ror
in
out
in
std
lock
cmp
neg
fildl
mov
loopne
test
enter
call
lock
divb
out
fucomi
int3
fcomi
icebp
out
xlat
std
mul
clc
clc
int3
int3
mov
loop
into
iret
leave
xor
divl
fptan
fidivrl
loop
rcl
adc
ret
cld
ret
vaesdec
clc
lea
loop
les
xor
loope
add
dec
sub
in
jmp
clc
rcl
aad
rcl
aad
loop
idiv
enter
cld
in
add
xlat
call
sar
fcmovnb
not
std
std
shr
leave
rorb
xchg
shlb
stc
in
sarb
sarl
ds
incb
cld
cli
fdivp
call
icebp
div
fdivr
call
leave
cmp
cli
loopne
xchg
std
leave
loop
xlat
mov
test
lret
in
xor
sti
shl
cmc
sbb
addl
in
fildl
in
hlt
ret
icebp
out
cmp
fprem1
fsub
movl
xchg
into
into
sub
iret
shr
lret
div
out
clc
iret
addl
cli
fsubrp
int
icebp
rcl
in
into
lret
fst
ss
fnstcw
std
fld
out
call
std
int
jmp
jmp
into
ljmp
loop
mov
sbb
mov
mov
aad
aas
hlt
xor
idivl
icebp
xor
fucom
iret
repnz
mov
mov
xor
add
jmp
ror
rcl
mov
pop
jb
inc
jg
roll
jle
aad
repnz
fsubr
int3
jmp
xchg
jecxz
xorl
in
call
rcl
test
cli
in
ret
out
ljmp
aas
shll
cmp
fcmovne
int3
sbb
or
cmp
cli
fcoml
mov
aam
in
jmp
call
cmp
cmc
xor
hlt
addl
ljmp
int
xor
ljmp
sub
repz
enter
sbb
cmc
fsubr
cmp
loopne
sar
rcr
add
lds
fucom
test
out
out
xchg
lock
shr
sbb
ror
loop
fadds
icebp
in
addb
lock
aad
cmp
fldl
aad
clc
enter
in
out
or
iret
xor
call
leave
aaa
fsub
fdiv
into
out
repnz
loope
mov
enter
cmc
int3
shlb
fcomp
hlt
iret
fcom
imul
ret
ss
xchg
icebp
ffreep
mul
jmp
int
call
ret
in
xor
aaa
iret
fcom
aad
hlt
shl
sti
loop
cli
enter
out
jecxz
adc
lea
leave
cli
idivl
stc
cli
idivb
int
in
loope
repnz
in
ljmp
lret
sub
iret
cmc
clc
icebp
fpatan
jmp
into
cmc
shl
icebp
repz
fadd
fmul
in
rcr
cld
into
dec
fdivr
xor
sti
into
xlat
call
iret
sar
jecxz
fcmovnu
in
loop
mov
lret
orl
test
int
jmp
aad
fiaddl
mov
or
xor
sar
sti
cmp
out
hlt
fndisi(8087
int
test
out
jmp
fsubrp
cli
icebp
test
shl
int3
lock
lret
flds
rolb
call
xchg
mov
lock
rol
shl
div
rcr
loopne
fdiv
cmc
adc
call
mov
icebp
int3
into
out
xchg
clc
xor
aad
iret
int
ds
sar
clc
std
in
out
fsub
sub
jmp
lock
aaa
xbegin
into
repnz
cmp
lds
cld
adcl
fisubrl
out
jmp
stc
cli
repnz
out
inc
vshufps
jmp
xchg
mov
jmp
fldl2e
loopne
fdivrp
iret
into
jecxz
leave
jmp
jecxz
mov
std
fcmove
cld
loope
cmc
int3
lret
iret
ljmp
int
test
fdiv
int
cli
sar
loop
cld
in
cs
out
out
jmp
sarl
in
sar
ret
div
leave
decl
shl
xchg
int
int3
call
cli
sti
lock
fnstenv
cmp
fcmovnbe
neg
int
iret
hlt
xchg
lock
int
das
aaa
call
int
fcom
call
xlat
jmp
enter
jmp
aam
int3
icebp
xor
cmp
cli
fimuls
fabs
in
orb
ret
cmp
cmp
jmp
faddl
rcr
in
mov
ret
lret
loopne
aad
rol
cmp
rcl
xor
loopne
cmc
cmp
cli
fsubp
incb
into
fiaddl
xor
repz
cmc
ljmp
rolb
call
hlt
icebp
int3
int
aam
ss
in
lret
call
rcr
repz
fst
cli
incl
xchg
out
in
cmc
cld
fstpt
ljmp
in
out
lret
mov
out
out
rol
out
cs
aaa
xor
lret
shl
clc
in
test
repnz
fld
loop
loopne
in
aam
jmp
out
std
in
neg
aaa
loope
into
fcmove
out
mov
call
in
loop
xchg
test
cmc
imul
cmp
cmp
fdivrp
fcmovbe
jmp
test
in
in
cli
cld
mov
xchg
jmp
call
xlat
mov
xor
lea
add
jmp
rcl
aam
sarb
xchg
sbb
sbb
cwtl
add
jle
add
stc
sarl
fdiv
rcr
lock
loopne
xlat
loop
adc
sbb
xchg
fdivp
cmc
enter
shll
cld
test
stc
cmp
adc
xlat
ret
mov
xchg
xor
out
out
cmp
rcl
ljmp
loope
fdivr
std
in
or
in
lock
std
cmp
shl
ffree
icebp
repz
or
aam
neg
out
fsubr
iret
mov
out
test
icebp
das
test
fucomi
ljmp
loopne,pt
out
fcmovu
or
into
xchg
mov
ljmp
enter
icebp
fcmovbe
hlt
out
call
mov
in
shr
lock
repnz
loope
iret
lret
leave
fdiv
fnstsw
fadd
fcomp
repnz
repz
int
xchg
test
cmc
mov
mov
ljmp
cmp
icebp
std
rcr
xlat
mov
lea
in
shl
aad
std
neg
loopne
jmp
in
cmc
idivb
in
int
xchg
out
into
repnz
lret
aad
aaa
ljmp
cmpl
mov
repz
int3
fcmovnbe
xchg
ficoml
ret
shl
fnstenv
rcl
shr
aam
loope
xlat
fiaddl
in
leave
cmp
out
lret
ret
into
lret
cmp
enter
clc
cmc
fld
repnz
cli
jecxz
call
les
fldcw
repz
rcl
out
rolb
lret
nop
sti
fsubr
into
out
orl
cld
cmpl
orb
test
in
lret
xchg
ljmp
cmc
hlt
int
inc
ds
mov
idivl
fdiv
fcomi
fisttpll
leave
ljmp
cld
sar
fcmovb
fcmovnb
faddp
adc
clc
test
ret
out
enter
leave
in
ffree
xlat
lock
lret
in
iret
nop
add
into
aam
aad
cmp
aad
fprem
mov
stc
clc
fstp
iret
xchg
xor
enter
fldz
loop
aam
not
icebp
loope
adc
aad
test
xchg
xchg
lret
out
sti
ss
and
int3
cmp
xchg
clc
xlat
test
or
jmp
mul
ret
stc
in
jmp
cmp
out
loop
call
clc
mov
movb
ljmp
fcomp
cmc
rcr
cli
into
into
cmp
fnsetpm(287
in
test
out
lea
out
shrb
cmc
jmp
sar
ljmp
cmp
cmpb
fcmovnbe
mov
fmulp
xchg
filds
aad
test
cmp
aam
cmc
xchg
fsubr
lret
loope
xchg
xor
aaa
call
enter
xor
enter
inc
fmul
jecxz
xchg
shl
dec
cmp
lock
cmp
clc
cli
fdiv
repnz
aam
fimull
in
lock
in
aam
in
lds
rcr
in
aam
int3
repz
in
stc
rcl
shl
cld
ds
out
jecxz
xchg
sub
out
sti
call
fmulp
faddl
xchg
loopne,pt
cld
xor
ljmp
xor
out
repnz
in
icebp
int
out
cmp
in
jmp
call
ljmp
out
cld
hlt
out
adc
cmc
fcomp
lret
in
jmp
mov
leave
sarl
xor
cli
ljmp
icebp
repnz
leave
out
xchg
lock
repnz
int
out
xor
loop
out
div
clc
sti
cld
aas
xlat
ds
cmp
std
hlt
fdivrp
hlt
out
sub
xchg
ljmp
jmp
lock
testl
mov
mov
ljmp
out
fdivl
cmp
jecxz
in
test
in
in
decb
int
iret
hlt
int3
fsubr
int
aad
cmp
test
out
loopne,pt
cld
addb
clc
mov
jmp
rcl
int
int
fstl
dec
push
aam
jg
roll
jle
mov
jmp
lock
int3
ljmp
ss
jmp
sar
into
repnz
sub
ljmp
xchg
xchg
int3
neg
shr
fcomi
cmp
aas
addl
stc
out
popl
hlt
ret
out
cld
cmp
int
loope
shl
leave
call
mov
ljmp
aam
fcmovu
lret
icebp
into
incb
out
lret
jmp
shrb
cmp
test
test
rcl
int
fcmovbe
ljmp
nop
cld
lret
sub
shrb
int
lret
idivl
clc
int
lret
aas
aam
out
cmp
fprem
mov
sti
add
xchg
adcl
lock
idivl
aad
ret
test
sti
test
in
into
in
lret
addb
iret
out
fidivrs
sti
lret
not
cli
aas
in
xchg
mov
ret
mov
sar
in
out
test
rol
clc
iret
fst
into
int
jmp
loope
fcmovnb
xlat
loope
out
int
jmp
rcl
aam
shr
test
ret
sar
aas
movb
test
addl
repz
fldln2
cmp
mul
out
out
in
mov
loope
ret
int3
jecxz
adc
ss
repz
aas
fdivrp
neg
repnz
call
xchg
or
ljmp
loopne
loopne
test
shl
cmp
sub
rcll
in
cmp
jmp
jmp
iret
rcr
faddl
jmp
addb
xor
jmp
lret
cld
std
fnstsw
fyl2xp1
sti
notl
out
in
fucomi
cmp
out
not
lock
test
fnstsw
test
fcomi
call
ret
sub
aad
ljmp
loopne
cmc
cld
mov
aad
fdiv
xchg
lret
mov
xchg
repnz
int3
fst
enter
in
repnz
cmp
cli
mov
in
orb
test
enter
jecxz
out
xlat
rcl
out
out
int
sti
lret
loopne
xchg
stc
in
in
cli
ror
clc
repz
rcl
aas
mov
in
out
dec
int3
xchg
mul
cmp
aad
fcomi
fcmovbe
in
fadds
mov
icebp
in
in
shlb
aad
aam
stc
cmp
xlat
clc
mov
mov
jmp
faddl
in
ret
out
lret
rcr
fnstcw
fcomip
shl
mov
out
fsin
in
test
shr
adcb
xor
aam
ror
aaa
in
loopne
sti
fcomp
repnz
std
cli
xchg
mov
clc
out
in
enter
into
xlat
repnz
fadd
sarb
in
loope
lock
fimull
iret
cmc
sti
cmp
rcl
fdivrs
cli
loopne
test
jecxz
mov
xlat
clc
sub
addb
aad
icebp
aaa
cmp
out
fstpt
cmp
clc
cli
and
stc
test
in
test
test
out
out
fucomp
fnstcw
std
fldl
xlat
mov
mov
in
out
sub
aad
in
xor
cmp
and
lock
aas
rol
fstp
decl
mul
aaa
xor
aad
out
jmp
sti
adc
loope
clc
ret
in
lret
leave
xor
out
lock
cmp
rcr
ret
mov
jmp
test
lret
out
out
aam
cli
lock
cmp
and
cmc
enter
ds
xchg
lea
jecxz
cmp
sar
iret
stc
cmp
fldl
enter
lret
lret
in
jecxz
xor
sarl
aad
loopne
cmp
fsincos
cld
orb
loop
aam
rcr
jecxz
ds
xlat
jmp
lret
ret
enter
fcmovnu
dec
lcall
cmpsl
push
jg
roll
jle
fcmove
repnz
call
movb
sbb
jmp
xlat
xlat
stc
jmp
ret
out
fsub
shl
jecxz
test
out
mov
fxtract
cmp
jmp
cmc
cmp
not
aam
into
cmp
test
leave
jmp
in
fiaddl
pushl
jmp
xor
cmp
in
iret
fdivp
out
shl
cmc
test
std
fmulp
lock
rcl
jmp
repz
out
out
hlt
fincstp
cld
cld
cmc
adc
fildl
xchg
sub
xor
fsubr
rcl
clc
cmc
in
stc
out
ret
ljmp
into
loopne
shll
cmc
in
cmc
int3
sar
aas
enter
in
in
shl
vpsubusb
aad
enter
repz
xor
cmp
fldpi
clc
fdiv
fsubp
and
leave
jmp
stc
int3
jmp
div
not
ss
cli
out
in
ror
aad
incl
mov
shl
test
mov
lock
fsin
cmp
cmp
fcmovnu
xor
sti
mov
xchg
nop
mul
rol
aam
in
neg
enter
stc
fnclex
cmp
aam
xor
out
decl
ror
aaa
loop
sti
lret
neg
aaa
ror
in
fst
repnz
out
mov
loop
lret
xchg
cld
lea
xor
out
repz
fidivrl
roll
fimuls
icebp
mov
std
add
ljmp
int
out
rcr
hlt
xchg
ljmp
loopne
mov
in
cmp
in
enter
cmp
out
test
test
in
fildl
shr
mov
mov
xor
cmp
xchg
loope
cld
inc
sti
cli
mov
jmp
jecxz
aad
frstpm(287
cmp
out
fcmovu
shl
out
loope
repnz
sub
mov
lret
fldl
cli
aaa
cmc
icebp
test
into
xlat
cli
loope
repz
fcmove
aas
and
lea
out
repnz
cmp
cmp
xor
int3
ffreep
aam
clc
enter
in
out
jecxz
nop
std
in
fadd
lret
int
iret
aam
ret
loop
rol
mov
fnsetpm(287
mov
mov
adc
ljmp
ljmp
sarb
neg
std
ret
faddl
ret
cmp
fcmovnu
lret
cld
clc
test
aam
in
call
fisttps
jmp
lret
out
loopne
rcl
stc
repnz
rcr
loope
int3
cld
loop
mov
in
ret
ss
ret
aam
shl
mov
jecxz,pt
lret
mov
rolb
cmp
cli
fsubr
lret
int
icebp
rcl
rol
test
lret
xchg
std
ljmp
shl
test
ror
cmp
xchg
sbb
lds
loope
nop
mov
ljmp
cmp
clc
ljmp
fcmovbe
sbb
jmp
xchg
aaa
xor
out
repnz
loopne
ret
and
out
in
xchg
loope
call
call
into
ret
shl
test
std
ljmp
mov
int
lock
call
cmpl
out
ret
aas
out
out
out
ljmp
iret
loope
fxch
std
int3
shl
ss
out
lock
clc
rol
mov
sti
dec
mov
lret
rcl
hlt
shr
aad
cmp
cli
sub
ret
out
int3
jmp
xchg
xchg
mov
loopne
imulb
into
repz
in
aad
hlt
rcl
fcmovb
ret
test
loope
xorl
imul
clc
sti
idivl
into
cmc
cmc
bnd
xchg
jecxz
lret
mov
test
xchg
mul
cmp
ljmp
out
xor
shl
leave
mov
fcos
xchg
sub
jmp
lret
mov
fildl
adc
jp
jg
roll
jle
roll
lds
shl
icebp
neg
add
fsubp
loope,pt
loop
leave
int
out
fcmovu
loop
cmc
icebp
loop
loop
mov
fdivp
loope
sti
cmp
fdiv
roll
in
fsubrp
in
fsubrp
into
hlt
cmc
ret
cmc
lret
dec
in
rcl
aad
fucomip
testl
repz
cli
lock
out
cld
ljmp
ds
cli
fdivp
clc
ljmp
test
ret
in
lret
in
aad
cmp
shl
sarb
jecxz
lds
out
out
call
in
int
aam
rcl
int3
fdivp
cmc
cld
sbb
fxam
xchg
sub
xchg
out
into
loop
icebp
out
in
xor
cmp
lret
aad
cmp
aas
repnz
fucomi
sti
dec
fiaddl
int
xor
call
shl
rol
stc
enter
in
fmulp
in
cmp
imull
lds
vpmaxsw
ror
loop
into
ret
iret
testl
mov
fstp
xchg
repz
xlat
rcr
fmul
jmp
into
cmp
call
lock
lret
into
int
jmp
ss
aaa
cmp
shr
in
movb
int
xchg
test
sarb
xor
cmp
ss
sub
sbb
out
fsubr
hlt
mov
xchg
xchg
in
fdiv
call
iret
ds
sti
aas
mov
xchg
jecxz
int3
in
div
clc
sti
call
ds
fsub
add
xchg
fiaddl
int
ss
xlat
out
ss
leave
cmp
cmp
out
test
cmc
xor
std
cld
loope
iret
sub
iret
lret
call
out
repnz
stc
out
lds
repnz
sub
cld
aad
shl
loope
jmp
leave
leave
fsub
ret
mov
enter
ss
lret
lock
rcr
mov
jmp
sub
xchg
ffree
into
xor
in
lret
das
into
enter
addb
aad
test
jmp
fstp
in
std
in
cmc
loope
jmp
fidivrl
inc
cmp
in
repz
jmp
fdiv
fninit
call
out
xor
lock
sti
fdivp
std
loopne
ror
fnclex
fldl
cmc
loope
in
hlt
fisttps
fdiv
xor
repnz
cld
loop
iret
in
std
ret
mov
sar
lock
decb
int3
sub
rcl
fcmovne
shl
in
in
stc
aam
lds
incl
lret
xlat
call
fincstp
cmp
test
fincstp
ljmp
sub
rcl
ror
stc
aaa
cld
fnstsw
ds
fildl
roll
mov
out
cmc
loopne
stc
call
int3
sti
loopne
lret
cli
xlat
ret
cli
icebp
mov
fdivrp
cld
fucomp
repnz
mov
aaa
xor
cmc
fcom
clc
iret
idiv
xor
xchg
sti
ret
mul
out
fxch
in
test
repz
loop
out
int
int3
stc
call
jmp
rolb
in
jecxz
xchg
lock
call
sti
fcmovu
aam
stc
mul
aam
sar
lock
idiv
fmull
jecxz
fcmovb
out
sarl
xor
fadd
clc
shl
in
leave
xbegin
out
mov
cmc
enter
clc
int3
imul
cmp
in
loopne
mov
int3
fcmovb
out
mov
fmull
loopne
out
call
icebp
test
add
mov
cli
loope
fsub
call
clc
jmp
fdivs
lock
iret
loopne
loope
int3
loop
shl
cmp
loopne
mov
hlt
jmp
xchg
loope
mov
cmp
fucomi
test
repz
fcmovb
int3
lret
int3
in
std
mov
repz
lret
std
out
aad
lret
addl
mov
mov
jmp
int3
int
fstp
fstp
mov
in
cmp
int
jg
roll
jle
aam
aas
fstp
ret
stc
fstp
out
in
jecxz
xchg
ror
aad
cmp
fsin
cmpl
stc
mov
out
mov
les
ret
out
cmp
aam
lret
ds
adc
out
cli
fdivr
mov
out
or
ljmp
in
iret
in
cmp
ds
in
ds
addl
in
ljmp
fcmovbe
and
fsubr
shl
mov
shl
out
out
in
out
jmp
in
div
cld
hlt
in
fmul
mov
in
rclb
aaa
cmc
in
not
ss
cld
cli
call
iret
std
les
cld
popl
adcb
in
cmp
addb
orl
mov
loope
dec
xor
repnz
cmp
sar
aaa
cli
fdecstp
cmp
xor
cld
mov
aad
sti
int3
fldl2t
filds
xor
sar
cmp
loopne
cmp
in
sti
out
fstp
cli
ficoms
in
int
fistpll
clc
aad
cmpl
add
mul
mov
fsubr
xchg
mov
ss
loopne
cmp
loope
in
cmp
lret
mov
not
aaa
sub
ljmp
faddp
testb
nop
addb
xor
clc
fcmovb
fsub
jmp
sar
in
addl
fisttps
mov
into
xlat
lock
lret
lock
clc
sar
cld
cmp
fcmovnb
call
jmp
nop
out
iret
jecxz
into
into
cmp
out
sub
fdiv
test
jmp
int
hlt
int
int
clc
clc
in
xor
sar
cmp
cmp
loop
lock
cmc
cmc
aam
orl
cmp
leave
loope
shl
repnz
fcmovu
addl
out
mov
fdiv
jmp
jmp
rcr
and
fiaddl
jmp
sti
cmp
jecxz
rol
jmp
lds
dec
dec
lock
icebp
out
cmp
cmp
test
adc
out
repz
test
int
cli
lret
addl
mul
cmp
hlt
lret
shl
fucomip
ffreep
out
repnz
fcomi
cli
mov
xchg
jecxz
xor
cmc
out
out
cmc
into
fcomip
out
repnz
div
cmc
fisttps
fsubrp
nop
hlt
loopne
aam
fnsave
lock
fyl2xp1
std
lock
cmp
fildl
cmp
loop
adc
stc
out
lret
int3
sti
loop
sar
fdiv
hlt
incl
sub
shl
xor
xor
fxch
cmp
out
std
test
xchg
loope
aam
loopne
out
lock
lret
aam
clc
lds
test
int3
int
int
aas
repz
test
lret
ss
xor
in
in
cmp
cld
loope
xlat
aad
incl
clc
shl
mov
jmp
into
icebp
in
aaa
xor
cmc
fdiv
lock
clc
mov
loope
out
jecxz
jmp
in
in
leave
sti
shr
cmp
rcr
loop
loop
call
lea
mov
das
icebp
jecxz
fcom
ljmp
ds
in
jecxz
out
ljmp
xchg
jmp
out
cmp
in
aam
faddp
aad
ret
xchg
iret
out
cld
test
nop
rcl
cmp
hlt
cmp
aam
sub
fldl
int
jmp
aaa
lret
vpmuludq
lock
xchg
cli
sti
rol
fildl
mov
ss
cmp
cli
int
hlt
shlb
shl
xlat
dec
out
cld
loop
int3
sub
cmc
int3
xor
xor
cmp
je
mov
jmp
leave
rcl
ret
ffree
arpl
lea
mov
add
iret
ss
xor
sarl
aam
repnz
loopne
imul
mov
fmul
cld
test
divb
ret
call
into
std
clc
int
cli
xlat
and
ljmp
out
int3
loop
jmp
aad
std
std
xor
neg
out
xchg
repz
cld
cld
cmc
decb
out
in
int
std
cli
cld
iret
loopne
cmc
out
in
in
in
xchg
jmp
int
xor
rcl
lock
std
cmp
loopne
cmp
rcr
fpatan
jmp
cmc
cli
lret
frndint
cld
xchg
fistl
div
aad
fsubr
int
repz
roll
sti
ret
in
test
enter
rcl
cmp
cmp
cmp
lock
clc
repz
in
call
shl
int3
xchg
iret
out
fcmovne
in
lock
xor
cli
filds
xlat
ljmp
loopne
out
xchg
aam
xor
out
ror
shl
loopne
ret
aam
loope
int
sti
mov
fucom
xchg
adc
lock
hlt
rcl
cmp
incl
mov
mov
lea
test
enter
xlat
clc
ss
into
shr
cli
fdivrl
std
call
stc
into
out
mov
enter
aam
std
lret
jmp
icebp
rcl
roll
fadd
loop
fimull
out
cli
xor
fyl2x
xor
cmc
clc
cmp
out
loope
cld
mov
enter
leave
mov
out
xchg
out
in
int3
sarb
imul
aam
sti
in
cmp
in
std
fiaddl
xchg
in
ror
in
in
xor
aaa
ljmp
rolb
ret
mov
xchg
leave
sar
fucomi
aad
out
fnstcw
int
in
stc
ss
stc
testl
mov
testl
in
lret
out
cmp
xor
aas
xor
aam
sbb
std
mov
mov
aad
aaa
xlat
shl
jmp
aam
enter
clc
test
inc
out
mov
out
mov
xchg
xor
ror
cs
fdivr
cmp
rol
leave
mov
sti
aas
out
xchg
or
sti
aaa
aaa
enter
into
aas
not
aaa
test
sarl
lds
std
nop
mov
out
xlat
jmp
cld
icebp
lock
stc
cmc
in
cli
incl
xchg
addb
mul
out
cmp
loopne
cmp
lret
clc
cld
jmp
mov
fsub
in
ljmp
cmp
cmc
shl
stc
cmp
and
xlat
in
lret
xchg
lret
xchg
push
iret
into
cmpb
cli
fcomi
in
loopne
cli
neg
in
loop
out
test
sub
in
icebp
in
jmp
xor
loop
ret
test
enter
xchg
loopne
mov
out
out
leave
sar
in
aas
std
rcl
shl
cld
cli
ret
test
in
icebp
xchg
idiv
out
neg
sti
shr
ret
loope
clc
cld
addl
repz
lock
rol
rcl
test
shr
hlt
add
test
add
enter
out
enter
repz
xor
fstp
loopne
cmp
jecxz
cmc
cli
repz
in
lret
int3
rcr
lret
xor
xlat
repnz
into
aad
std
cli
aam
jecxz
mov
sbb
call
lock
cmp
cmp
clc
cli
test
sarl
addb
xor
int3
rcr
adc
out
cmp
jmp
into
ljmp
xlat
in
int3
call
fistpll
hlt
jecxz
decb
lret
jmp
xchg
out
xor
in
cmc
repnz
testl
cld
enter
sti
out
xchg
iret
xchg
ret
lret
clc
cmp
clc
idiv
mul
aam
mov
pop
jmp
mov
jmp
into
rcl
rol
fcomp
lahf
mov
push
jae
jg
roll
jle
out
fldl
in
rcl
out
lret
out
into
jmp
aaa
aad
ret
aam
iret
mov
ret
enter
in
jecxz
int3
loop
icebp
sar
xor
enter
xlat
bnd
aam
shl
xor
ret
hlt
dec
test
loope
mov
loop
out
cmp
xor
sti
std
cmp
loope
fld
call
jecxz
enter
and
repz
in
xor
aaa
rcr
loope
sti
fprem
fcomp
fcom
inc
ds
call
fcmovnbe
mov
loopne
out
icebp
fcomi
cmp
cmp
repz
cmp
stc
shl
addb
fyl2xp1
leave
lret
xchg
das
aad
out
leave
out
cld
aad
int
idiv
xchg
in
sti
jmp
in
enter
lock
out
divl
lock
cmc
into
in
cli
repz
cld
test
in
out
nop
ror
xor
out
clc
cmc
aam
repnz
lret
addb
xchg
jmp
lret
icebp
std
int
hlt
incl
jmp
lds
in
loope
icebp
fadd
ror
not
ss
int
jmp
div
ret
leave
hlt
adc
hlt
xchg
xor
repz
das
cmp
fdivr
fdivrp
test
stc
sti
xlat
test
loope
xchg
rclb
aam
ret
in
rcl
icebp
std
clc
clc
loope
out
lret
orb
aam
mov
in
loop
ret
fcomp
out
out
icebp
cmp
in
out
shl
jecxz
addb
nop
icebp
loopne
in
out
lret
cmp
cli
clc
cli
aad
fildl
iret
jmp
into
rcr
xor
rcr
in
ljmp
in
mov
mov
in
clc
call
iret
call
imul
aam
call
fidivrl
out
ret
inc
out
ret
into
mov
std
fiaddl
into
xlat
cmc
lds
cli
ss
repnz
filds
out
clc
cld
fcomi
int3
std
sti
lea
xor
hlt
cmc
std
out
hlt
sti
lret
in
fcmove
aam
in
stc
jecxz
in
mov
mov
int
xlat
iret
fcomi
ss
icebp
iret
shl
cli
out
iret
rcl
fldl
shr
xchg
cld
xchg
in
das
sub
fdivl
stc
fxtract
aas
repz
ret
shl
clc
roll
mov
iret
xor
cld
jmp
call
int
fldl
mov
jmp
loope
lock
leave
cmp
sub
addb
orl
call
jmp
cmp
aam
rolb
jmp
std
mov
loop
aad
shr
cmp
sub
fstp
ffreep
ret
ret
in
repz
sti
loope
out
int3
repz
in
icebp
mov
iret
cmp
int
idiv
in
test
aaa
add
testb
loopne
out
mov
ss
cmc
out
lret
leave
cmp
jecxz
aam
cli
cmp
in
ret
in
repz
xor
out
xor
lds
cld
ret
in
or
aad
hlt
aad
sbb
adcl
out
cld
sti
repz
rcr
jmp
addl
loopne
lock
in
sti
xlat
cli
not
ljmp
xor
sti
call
call
jmp
rcl
shl
xor
xor
out
clc
fdivr
movb
int3
loope
std
shr
aam
cmp
ret
fcom
leave
cld
clc
cmc
shl
cmpb
addl
ficoms
ss
idivl
cmc
cmp
in
test
test
xlat
lret
in
lret
mov
xchg
clc
aad
fisubrl
aas
cmp
lds
mov
ljmp
stc
cmp
xor
out
fmul
loop
in
sar
stc
loope
mul
fsubrp
in
lock
iret
xchg
loope
in
shl
lret
fxtract
cmp
je
mov
jmp
push
mov
sub
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
jmp
into
aas
rol
rcl
aam
pop
xchg
and
or
nop
jg
addr16
push
add
out
in
loopne
into
int
loope
aad
add
out
in
cmp
mov
jmp
enter
idivb
ret
xchg
jmp
leave
lret
lock
lret
out
in
cmp
cld
aad
hlt
test
xchg
loop
test
out
xchg
mov
out
sti
xor
fcmovnbe
cmp
f2xm1
call
mov
call
lret
int
out
hlt
xor
cmp
test
out
ret
out
xchg
and
in
call
repz
call
cmp
clc
loop
sar
sti
in
mov
lret
into
xchg
and
leave
out
enter
neg
cmc
rcl
adc
jmp
int
jecxz
mov
xor
cs
rcl
cmp
xchg
jmp
fisttpl
rolb
jecxz
aam
lret
fmulp
int
into
out
test
out
test
lret
jmp
int3
out
jecxz
out
xor
sti
out
fst
in
out
cmp
shr
loope
loopne
mov
lock
sub
aad
cld
xor
xchg
fcom
mov
out
in
repz
out
into
fincstp
cmc
sar
ss
jecxz
lock
loope
cld
and
fdivrp
shr
xchg
call
out
rcl
hlt
clc
xor
ds
loope
cli
call
mov
int
loopne
mov
leave
jmp
out
idivb
fst
testl
loopne
sar
test
iret
in
rcl
hlt
cmp
loop
icebp
cmc
jecxz
ret
fcmove
mov
fiaddl
add
cmc
enter
cmp
call
ds
aam
rolb
loopne
icebp
ljmp
stc
cli
int3
stc
in
dec
fidivrl
aas
loope
ret
call
mov
addl
call
cmp
loope
jecxz
repnz
cmc
mov
idiv
lret
rorb
loope
xor
cli
in
jmp
jmp
clc
ds
test
and
mov
and
sub
in
int
int
in
cmpb
fyl2x
stc
test
xchg
enter
decl
lret
lret
in
cmp
xlat
cmp
jmp
xchg
out
shr
cmp
lret
fidivrs
cld
in
cmp
xchg
mov
sar
std
in
repz
aad
clc
out
cmc
into
cmp
out
out
into
repz
fdiv
cmc
test
fucomp
jecxz
loop
cmc
into
cmp
lret
cs
cmpb
lock
fsubr
cmp
stc
fcmovnb
fisttps
imul
jmp
fld
idiv
out
cld
jmp
mov
jecxz
cmc
ret
in
aam
cmp
cmp
fiaddl
in
xchg
aam
in
cmp
jmp
xchg
loopne
xor
icebp
cmc
cmp
cmp
cli
fdiv
jecxz
sar
mov
in
shl
test
xor
cmp
sti
out
iret
fld
mov
in
lret
mov
xchg
aam
icebp
xor
fcmove
in
fdivrs
fscale
cmp
test
sub
out
fdivrp
std
jecxz
xchg
into
ret
lock
lret
int
repz
in
sar
cld
sti
ret
mov
lret
lret
fisttps
test
call
jmp
cmp
in
jecxz
sti
cli
ds
fnclex
in
cld
movl
shl
aam
xor
cmc
fcomip
fstp
out
xlat
jmp
idiv
in
rclb
divl
ds
call
clc
sar
fcmove
mov
enter
fmul
in
out
fisttps
rcr
call
in
test
cmc
test
decb
and
rcl
xchg
mul
out
sub
in
imul
repz
cmc
ffree
jecxz
fmull
fcmovne
loopne
push
shl
rcl
lret
inc
fsubr
jecxz
xor
stc
mov
xchg
xchg
out
xchg
test
xor
into
xor
xlat
icebp
cmp
lret
cmp
mov
in
enter
in
fsubp
rcr
enter
stc
lret
aad
cmp
test
ffreep
ds
int3
test
xor
fnop
test
cmp
fucomip
out
sti
jmp
test
adcl
add
inc
add
add
add
add
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sub
sub
mov
or
jmp
ret
fmul
fstp
xchg
aaa
pop
adc
lahf
rcrb
jle
add
shr
clc
jmp
fstp
cmp
cmp
shl
cld
enter
int3
xchg
ljmp
out
xor
xor
cli
aas
in
xlat
dec
loopne
std
loopne
lret
in
loop
xor
icebp
sarb
cli
into
icebp
ffreep
cld
xchg
out
jecxz
rorl
enter
sti
repz
cmp
cmc
faddl
mov
in
xchg
loop
jmp
aaa
cmp
out
hlt
ljmp
iret
test
out
out
mov
test
enter
int3
cmp
fiadds
iret
rcr
aad
xchg
icebp
xchg
cld
test
mov
sub
xor
int3
in
cld
into
leave
ror
shl
fucomip
stc
mov
fsubr
and
mov
call
sbb
xchg
out
sti
mov
out
fyl2x
mov
out
in
icebp
lret
out
cmp
mul
rol
in
aas
cmp
stc
hlt
inc
loope
jmp
in
icebp
ljmp
lock
iret
lret
ret
loopne
mov
fstp
fldl2e
out
xchg
iret
loope
int
shr
xor
fnstcw
int
int3
cmp
ss
shr
in
call
loopne
fucomp
mov
int3
out
leave
lret
ds
cmp
cmp
xchg
imul
cli
lret
jecxz
out
mov
xchg
shl
repz
iret
leave
fcomi
cmp
cli
dec
cmp
icebp
jmp
fcmovne
fldl
xchg
mov
int
into
cmp
lret
cmp
xor
cmp
icebp
adc
cmp
fucomi
in
loop
mov
ss
out
cli
not
hlt
repz
ror
out
hlt
jecxz
lret
cld
out
xchg
out
enter
cmp
sti
in
aad
jecxz,pt
testl
std
stc
lock
cli
fcomp
shll
aad
in
clc
ret
test
fdivr
std
in
or
into
xlat
aad
fsub
fdivp
stc
cli
rcr
loope
call
lret
sbb
out
jmp
aaa
fdivs
lret
fcomi
ds
cmp
rcl
icebp
std
mov
sub
xchg
xchg
incb
call
fdivr
ds
ss
in
shl
call
repz
mov
ss
jmp
cmp
shr
fcomi
repz
aad
ret
stc
call
std
out
lret
lret
cmp
jmp
test
in
std
rcl
ds
lret
lea
out
shll
not
cmp
aas
enter
into
out
fdiv
adc
loopne
loope
xchg
mov
fsubr
das
fmul
enter
test
xlat
add
xlat
inc
fadd
std
int
jmp
xchg
hlt
jmp
int3
fmul
into
jmp
iret
aam
in
ljmp
mov
int3
out
div
not
cmp
fcomi
aam
loopne
movl
in
nop
out
leave
into
fldlg2
aaa
idivl
xor
std
fst
fcmovnb
addl
in
sti
lret
mov
shl
in
not
fmul
cld
aad
std
int3
rol
sar
cmp
mov
jecxz
out
sub
xor
cmp
imul
xor
ror
int
shr
xor
xlat
std
in
std
loop
xchg
cld
out
cmc
cs
aaa
cmpb
lock
xchg
mov
cmc
fildl
fldl
out
lret
fidivrs
std
lock
cmp
clc
rcl
cmp
in
xlat
mov
test
mov
cmp
iret
fdivr
shr
jmp
test
loop
aad
ret
fsub
mov
mov
orl
int3
jmp
test
rcr
cmp
sbb
cmp
int3
mov
cld
aam
repz
cli
cmc
cmc
fidivl
stc
cmp
in
icebp
into
in
rolb
int3
jmp
loopne
mov
call
repnz
int
iret
cld
aam
repnz
mov
incb
xchg
clc
icebp
xor
aaa
aam
lret
cmp
iret
cmp
cmp
fldl
jecxz
cli
in
xchg
xchg
out
shll
cli
out
int
cmp
shl
cmc
out
in
cmp
sbb
mul
out
lock
xchg
shlb
jecxz
rol
in
fstp
div
lret
in
cmp
fcmovnbe
add
loope
and
aam
ss
jmp
out
sar
inc
jmp
sarb
sarl
repz
mov
or
mov
mov
adcl
add
xorl
jmp
ror
lret
int
int
bound
or
jg
push
add
std
ds
call
mov
cli
shll
xor
fildl
cmc
out
cli
jecxz
xchg
int3
xchg
int
xchg
cmc
enter
lret
xlat
xor
cmp
sarl
ss
fsubp
sar
call
cmc
orb
xchg
in
in
repnz
int3
cmp
sti
cmp
stc
cmp
ret
fimuls
out
int
xchg
shrl
xor
fldl2e
int
rcr
loopne
flds
ret
nop
iret
repnz
xchg
rorl
lret
clc
cmpb
in
rorb
out
mov
sti
xchg
int
out
xor
xor
cmp
ds
rcr
out
fldl
fsubr
in
xchg
icebp
call
xor
int3
aas
fdivrl
ds
xlat
rcr
test
loopne
in
lret
jmp
xchg
test
aaa
neg
cld
into
ljmp
sbb
test
aad
cld
ljmp
xlat
aaa
into
aad
in
idivb
xor
aad
in
jecxz
fiadds
fsubrp
fmul
std
fists
shll
aam
loopne
iret
loop
out
test
fcompp
test
in
mov
idiv
loope
xchg
ljmp
sarl
divb
shr
std
fdivrl
clc
vcvttpd2dq
fdivr
sti
jmp
icebp
in
xchg
lock
out
cmp
sub
jecxz
loop
fucomi
jecxz
out
call
repz
cli
jmp
xor
cmp
into
lock
repz
xchg
cli
fdiv
jmp
in
jecxz
in
xor
leave
int
xor
fsubr
loope
aaa
fdivrp
repnz
loop
enter
out
idiv
stc
stc
shl
out
repnz
aaa
iret
rol
and
out
leave
out
int
lret
fucom
rorb
sub
jmp
fsubrp
aas
clc
lret
loop
div
cli
mov
jmp
fcmovu
leave
sar
xchg
lret
xlat
stc
imul
cmp
aad
ds
mov
fisttpll
shl
xchg
clc
rcl
out
xlat
out
jmp
ret
repnz
aas
hlt
ljmp
sti
cld
iret
xchg
ret
call
cmp
lret
sti
out
rorl
cmpl
shl
mov
xlat
fadd
lret
aaa
addb
xchg
repz
int
in
into
loope
jecxz
cmc
out
not
out
cmp
ss
rcl
sti
int3
out
rol
mov
out
ljmp
int
in
repz
idivl
int3
repz
icebp
xlat
jecxz
in
inc
jmp
fucom
xchg
fimuls
stc
xor
in
fdivrs
lret
rcr
cmp
ret
in
mov
decl
nop
cmc
xchg
icebp
sub
rcl
mov
fcmovnu
loop
fsubp
test
cmp
jmp
mov
sub
out
jmp
rcl
in
cmp
ds
int
loop
aam
aam
clc
in
int
popl
int3
repnz
into
ss
into
cmp
repnz
sar
ret
ret
cmp
sti
out
jmp
jmp
out
fsubr
jmp
cmp
stc
dec
loop
lret
in
dec
out
xor
enter
cmp
out
xor
std
rcl
ret
stc
icebp
sbb
orl
test
aam
into
lret
in
jmp
rcl
fcmovb
rol
ret
jmp
in
test
out
mov
hlt
xor
repz
shr
lock
xor
test
int
out
call
shll
xor
sar
fdivr
xor
rcl
repz
leave
test
call
loopne
rclb
xor
leave
in
cmp
ret
std
clc
clc
xacquire
xchg
std
in
nop
ror
sub
fcomp
cmp
jmp
sbb
hlt
mov
enter
loop
xchg
lret
mov
in
xor
clc
cmp
filds
fcmovb
fcomi
leave
aad
jmp
shl
lea
das
jecxz
lret
repz
stc
fst
shl
roll
in
loope
into
rolb
cmp
out
cmp
shr
lock
aad
clc
jmp
std
incl
xor
out
cmp
hlt
cmp
rcr
out
hlt
rcr
fcomip
cmp
leave
jmp
lret
test
in
cmc
test
std
lret
jmp
loop
out
sar
stc
out
aas
jmp
out
sub
sar
xchg
int3
in
aad
aaa
clc
cld
loopne
movzwl
sub
mov
mov
add
mov
xor
negl
movl
adcl
jmp
ror
int3
mov
cmp
jne
jle
add
cmp
test
out
loop
enter
loope
lret
std
nop
fiadds
shl
rcr
jmp
lock
ret
fprem
test
loopne
out
in
jmp
int
aad
xlat
cmp
loop
neg
mov
fmull
xchg
fsubp
ss
in
clc
stc
xlat
out
lock
ret
fsqrt
fpatan
jecxz
jecxz
std
xchg
lock
lret
iret
fnstsw
ror
rcl
in
cmp
fdivr
in
mov
out
in
sub
aad
cmp
cmc
sti
xor
clc
roll
sti
in
lret
jecxz
iret
out
rol
shrl
fcmovnu
iret
fdiv
sbb
addl
rolb
in
xlat
shl
cmp
rcl
adc
cld
cmc
in
aas
in
adc
out
jmp
cli
fstpt
xor
xlat
into
div
out
ret
xor
iret
jmp
loopne
fsub
stc
icebp
in
hlt
ljmp
in
cmp
cld
in
int
movl
xor
into
stc
int3
leave
jecxz
rcr
out
rcl
lds
jecxz
stc
shr
int3
mov
out
leave
xor
test
std
out
out
iret
fcmovbe
cmp
fsubrp
lret
decl
in
ljmp
ds
shl
ljmp
in
cli
xor
mov
lds
shl
stc
icebp
jmp
ds
cli
ret
fnclex
ret
loopne
in
ror
shr
int3
call
jmp
fdivrs
loopne
fdivrl
jmp
loopne
jmp
fisttps
iret
cmc
enter
aas
out
loope
cmp
incb
ljmp
xchg
in
rol
fcomi
divl
aas
flds
aam
jecxz
into
std
repnz
into
std
test
jmp
out
lret
out
div
aam
fcom
xchg
mov
in
loopne
call
hlt
xor
lret
repnz
sarl
cmp
cmp
div
xchg
clc
std
repnz
hlt
xor
in
cmp
jecxz
repz
in
in
xchg
int3
icebp
mul
ret
aaa
cmp
cmpb
cmp
ret
shr
mov
fsub
cld
mov
jecxz
and
jecxz
inc
out
cmp
icebp
loop
out
ds
test
test
incb
jmp
aas
call
shll
clc
cmp
ffreep
cmp
call
jmp
test
stc
fcomi
jmp
repz
out
call
out
lret
fcomip
xchg
sar
xchg
aam
aaa
aam
fcmove
cmp
in
clc
fcmove
xchg
hlt
mov
fadds
fisttpll
in
int
clc
cmp
in
into
lret
cld
loop
loope
jmp
in
fiadds
out
ret
rcl
cmp
rcr
sti
fiaddl
cmp
ds
into
fcos
sar
nop
test
jmp
hlt
jmp
int3
ds
loope
fnstcw
leave
clc
jecxz
rol
shr
jecxz
orl
aam
call
cmp
int
sti
xlat
mov
loope
sub
xchg
pushl
leave
in
xor
cmc
ss
cmp
shr
filds
in
leave
mov
clc
lock
call
lret
jecxz
cmp
fnstsw
into
sar
repz
test
fsubp
enter
int
stc
fcmovbe
cld
test
rcl
xor
repnz
xor
xor
xor
not
xchg
leave
mov
leave
shr
xchg
repnz
enter
cmp
icebp
lock
mov
fimuls
loopne
repnz
aad
out
xor
out
leave
ss
ds
std
in
sti
jmp
out
lret
jmp
das
cmp
fdiv
aam
cld
stc
repnz
cld
fsubr
in
aas
fidivrl
loopne
ljmp
nop
rcr
in
loopne
ret
ror
in
cmp
cmp
orl
int
ljmp
rcr
cmp
cmp
fcmovbe
cmp
cmp
and
lret
mov
loopne
sti
cmc
call
cmp
cmp
cld
out
loope
rol
call
cli
lock
loopne
lret
xor
ret
xor
enter
idivb
fprem1
jecxz,pt
out
in
in
fsub
fld
in
shl
in
movl
sbbl
add
movl
jmp
cmp
movl
jne
jmp
aam
aam
ds
adc
call
push
add
lret
xor
jmp
int3
stc
cmc
jmp
ror
icebp
lock
out
and
rorl
in
rol
idivb
cmp
fsubp
loope
fcomi
iret
repnz
fucom
jmp
ss
aad
cmp
shl
hlt
aas
xor
loopne
leave
fdivr
fchs
jmp
leave
in
fsub
loope
xor
lret
aam
cmp
or
ffree
sti
xlat
mov
xchg
ret
in
jmp
fucomip
int
xchg
imul
test
fnstsw
out
loope,pt
std
fdivr
xchg
hlt
jecxz
in
fcmovne
mov
shl
cmp
xchg
int3
vpsubd
cs
ljmp
rcr
clc
cmp
neg
test
leave
and
xor
cmc
call
cmp
hlt
idivb
imul
cld
aad
mov
fcomi
mov
lret
nop
xchg
into
enter
shl
cmp
fcmovu
idivl
ret
aas
fcmovbe
fdivrp
fimull
leave
rcl
out
aam
hlt
sar
cli
lret
xlat
ret
aam
ds
in
call
mov
adc
aam
fnstcw
jmp
xor
hlt
int
repz
loope
ret
jmp
mov
xchg
xchg
xlat
xor
into
cmp
cli
rcl
clc
and
cmpl
in
fisttpll
cmp
into
ss
fyl2x
testb
roll
inc
out
nop
lock
fnstcw
xor
cmp
fcomip
iret
stc
fstpt
into
test
xchg
cli
jmp
hlt
fdivrp
out
mov
in
ror
shl
les
sar
neg
icebp
sbb
clc
aad
xchg
fsubr
mov
or
ret
fcom
cmp
fadd
lret
aas
ret
fnstcw
test
aad
cli
decl
xchg
divb
out
fucomi
aam
in
in
flds
idiv
xchg
mov
and
imul
fsub
out
jmp
in
repz
loop
iret
mov
mov
xchg
loop
jmp
stc
cmp
xor
rorl
jmp
test
lock
xor
out
fdivs
out
cmp
cmc
cmp
les
lret
mul
mov
xor
aad
jecxz
imul
sti
ljmp
fcmovbe
div
test
mov
rcr
jmp
out
or
xor
cmp
fcom
in
cmp
loop
aas
test
loopne
stc
roll
test
mov
jmp
fscale
jmp
shl
loope
cmc
fcmovu
int3
cld
out
mov
int
fisttps
cmp
aad
cmp
icebp
rol
std
stc
loop
fiadds
loopne
out
shr
enter
loope
lret
out
addl
inc
lds
jecxz
lret
xor
repz
jmp
in
ds
fimuls
mov
lock
mov
aam
repnz
lret
out
cmp
icebp
ljmp
clc
mov
and
lret
lock
jecxz
ror
out
lret
int
cmp
cmc
flds
xchg
fabs
fsubr
int
nop
std
in
mov
mov
xchg
ret
ror
aam
fmul
hlt
leave
fyl2x
sti
hlt
cmpb
sti
orl
loope
cmc
out
xor
ljmp
rol
rol
clc
out
shl
in
mov
sub
out
lret
sar
sarl
loope
jecxz
fistl
sub
xor
out
cmp
iret
iret
enter
fcmovbe
ret
rcr
jecxz
sti
xlat
fcomp
fstp
cmp
test
xchg
repnz
aad
clc
ds
repnz
cmp
int3
stc
jmp
nop
jmp
in
icebp
out
lret
aas
int
cmp
iret
rol
movb
out
xchg
lret
div
das
ljmp
repnz
iret
into
cli
fdivr
shl
sbb
in
ljmp
out
lds
idivl
cmc
jmp
repz
aas
neg
cli
cli
int
faddl
mov
cs
sar
stc
cli
aam
cmp
xlat
fcmovnu
mov
mov
fucom
test
int3
and
in
fcom
int
xor
cmc
shlb
shl
stc
cmp
xor
adcb
out
mul
cli
iret
shl
aas
shr
clc
out
std
repz
test
out
fists
and
repnz
cs
ss
lret
lock
ror
addb
sub
mov
movl
mov
mov
mov
mov
jmp
int3
ret
int
mov
pusha
das
cmp
jg
jle
add
lret
fmulp
mov
xorb
hlt
hlt
stc
icebp
jmp
fldl
inc
clc
mov
cli
xchg
ljmp
xor
sarl
into
repnz
iret
int
cmc
shr
mov
out
int3
lret
repnz
xchg
mov
in
enter
call
sar
cmp
cmp
sar
jecxz
std
in
mov
out
lret
les
out
cmp
stc
cmc
cmp
loopne
shl
in
cmp
int3
lock
int
xchg
rol
ror
xor
call
cmp
in
xlat
fdiv
clc
xlat
cmc
xlat
test
xchg
aad
cmp
fpatan
cmp
ljmp
cmp
fcmovbe
sti
aad
idiv
int
mov
mov
lret
sti
sti
call
cmp
std
fdivr
aad
fimull
cmp
xchg
test
xchg
xchg
iret
in
out
jmp
hlt
std
loopne
icebp
in
div
test
std
les
xchg
jecxz
nop
lret
sar
aaa
iret
cmp
out
into
sbb
cmp
aad
cmc
sti
mov
sti
shr
leave
shr
jmp
int3
cmp
ss
jmp
shl
ret
aas
in
fcmovnbe
sti
mov
lret
sub
mov
lock
lret
sti
fucomip
fdivrl
sbb
std
push
ror
clc
ret
int3
mul
in
jmp
aam
cmp
into
iret
icebp
cli
fmulp
icebp
in
fdivr
enter
mov
xor
icebp
aad
lock
iret
repz
idivl
aam
in
int3
ret
in
ljmp
mov
in
mov
int3
xchg
into
cs
in
icebp
out
cmp
sti
std
xchg
sub
cli
lock
in
xor
in
repz
call
cmp
std
fadds
xchg
xchg
out
repz
in
out
ljmp
out
into
sarb
ret
testb
jmp
xchg
rol
rcl
call
sti
rcr
mul
rol
les
filds
lock
in
out
das
lock
cmp
std
jmp
cmp
xor
rcl
out
mov
fmull
nop
int
clc
call
loop
clc
in
sbb
rcr
fcmovne
in
xchg
decb
hlt
repz
stc
fcomip
xlat
cld
cmp
aad
call
lret
xchg
stc
mov
loop
in
shr
repnz
cmp
fstp
cmp
clc
xchg
and
fcmovne
loope
mov
in
int3
fdivrs
enter
aaa
out
addl
int3
stc
out
jecxz
mov
leave
test
aam
ror
in
rcl
in
aad
xlat
out
in
icebp
int3
leave
fcomip
xchg
shl
aad
ljmp
in
clc
not
out
mul
test
in
in
loopne
shr
int
cld
repnz
into
test
in
aam
aam
clc
clc
adc
iret
out
in
rcr
in
movl
shr
aam
mov
in
shl
ss
out
lret
leave
into
jmp
aam
sarb
neg
in
fsub
call
cmc
out
cmp
leave
enter
icebp
out
aad
shl
ret
xor
sbb
in
sarl
cmp
std
in
ds
loopne
mul
xchg
in
cmp
xchg
xchg
ret
xor
in
fcmovnu
xlat
aaa
loop
not
clc
out
std
xchg
loopne
iret
rcr
shl
into
lret
call
cmp
iret
icebp
aam
hlt
loop
stc
test
stc
test
movl
icebp
out
shr
hlt
cmp
mov
fsub
add
cmp
int
xchg
jecxz
shl
call
fcmovu
aas
test
rcl
loope
cld
cmc
add
nop
shr
repnz
loope
fdivr
cmc
neg
enter
shr
xchg
faddl
lret
sub
int
hlt
out
xor
xor
cmp
ror
sar
vpsubsb
int3
fdiv
in
int3
int3
sbb
out
xor
imul
jmp
cmc
shl
test
in
aas
mov
out
test
ljmp
lock
fdiv
jmp
testl
enter
fcoml
repz
loope
into
out
ljmp
rorl
leave
mov
mov
sti
in
loopne
in
cli
in
aaa
cmp
fstpt
cmp
fisttps
dec
add
cmp
jmp
aad
aad
aad
aad
push
push
scas
xchg
jg
inc
lret
jle
add
idiv
jecxz
lret
cmc
cli
orl
mov
sub
fdivs
in
iret
divb
fsub
xchg
ds
out
in
sbb
jmp
jmp
cld
xlat
cmp
aaa
sbb
cmp
ljmp
ficoms
hlt
xor
icebp
stc
std
out
cli
ret
idiv
testb
xchg
jecxz
iret
in
rcl
clc
clc
xor
shl
in
sarb
push
loope
jmp
mov
call
cmp
cmp
out
rcr
in
leave
test
loope
lea
int
xor
iret
out
fistpll
aam
loopne
hlt
movl
sar
in
out
in
repnz
in
int
call
aas
rcr
jmp
cli
mov
std
sbb
xchg
cmc
cld
cmp
leave
cmp
aas
incb
test
lea
sub
cmp
lret
sar
in
add
aaa
cmc
rcl
cld
mov
cld
icebp
fisttps
aad
cmp
das
in
ljmp
out
neg
cld
in
sti
mov
mov
mov
fld
ss
cmp
loopne
rorb
loope
mov
xor
mov
ss
in
xor
filds
ret
mov
xchg
cmc
mul
ret
icebp
cmp
shlb
jmp
iret
fdivr
fcmovu
sbb
mov
aas
enter
enter
adc
ljmp
std
xor
sar
idiv
shr
neg
lret
clc
fstp
in
jmp
leave
shl
cmp
sti
aam
aam
and
ret
repnz
fscale
in
shr
lock
call
ret
fst
repnz
aam
shl
sub
xlat
loopne
aas
call
xchg
nop
mov
repz
clc
not
xor
cmp
neg
mov
loop
sti
jecxz
mov
aam
or
iret
cmc
aad
shl
loope
fdivrs
cmp
fadds
stc
sub
int
jmp
aas
aaa
std
int3
cmp
aas
out
xlat
enter
ret
in
out
fadd
sti
fucom
test
xchg
jecxz
out
clc
hlt
repz
clc
sbb
xor
mov
xchg
orl
enter
das
fcomip
rolb
ds
out
fcmovu
clc
sti
test
xchg
in
hlt
out
iret
aad
in
rcr
shr
cmp
cmp
loop
stc
out
ret
jmp
out
in
xchg
mov
mov
in
aam
test
cmp
loop
shl
std
loop
fucom
cmp
xor
xor
sub
stc
into
iret
out
fdivp
ds
sbb
loop
flds
out
xlat
int
in
in
call
rol
aam
xchg
sub
fcmovne
xchg
xchg
lock
leave
call
lock
cmp
shl
fcomp
mov
int3
lret
repnz
out
ret
xor
std
loopne
fcmovbe
test
ds
xchg
xchg
repz
xor
cli
out
std
shl
cmp
rcr
xlat
cmc
sub
ret
call
out
cli
in
aaa
idivl
std
aad
roll
addb
lock
loope
out
fsubr
xor
rcr
stc
sar
aam
loopne
fdiv
in
fcmovnu
out
clc
faddl
rcl
out
sarl
cmp
rol
jmp
out
fucomi
fcmovb
loope
enter
int3
ficoml
shl
ret
cmp
lret
cmp
sti
shr
mul
fstp
jmp
cli
call
out
ret
aaa
idiv
icebp
lock
adc
loope
imul
out
out
stc
call
out
cmc
in
cmp
cli
cli
leave
aam
loope
cli
call
mov
int
int
int3
hlt
xchg
xor
repnz
sarb
icebp
ljmp
cmp
mov
xlat
enter
in
shll
call
in
lret
adc
xchg
loop
fcmovu
test
call
fsub
call
lret
fsub
sti
fcmovne
in
in
ljmp
ljmp
stc
jmp
xor
in
adc
loope
fadd
loopne
loopne
decb
xor
sbb
add
inc
clc
jmp
aas
into
lret
leave
aam
dec
jo
push
or
jle
add
shr
lret
aas
cmp
rcl
inc
clc
xlat
in
cli
stc
in
rclb
xor
fcmovnu
jmp
cli
cld
cmp
cmc
mov
cld
cld
into
mov
repz
iret
enter
cmp
loope
aas
in
cmp
not
jmp
mov
fsubrp
fcomip
xchg
enter
int3
jmp
aad
sarl
aad
jmp
test
call
xchg
shr
out
sti
lret
cmp
into
cmpb
sar
cmc
cli
jmp
xchg
in
loope
int
shl
fucomip
cmp
and
fld
inc
xlat
jmp
leave
loopne
cld
ljmp
lret
xor
jmp
lock
rol
rcl
cld
enter
in
xchg
rcr
in
rcl
mov
cli
fxch
ror
fcmovnbe
rcr
aam
ret
sub
fmuls
lret
orl
in
xor
in
icebp
ss
faddp
fdiv
aad
out
call
fdivr
loope
mov
das
rcl
in
fxch
clc
in
aad
sti
stc
fcmovu
test
aam
mov
sti
in
out
test
icebp
not
cmp
rcr
aaa
cmp
repnz
xchg
stc
lea
int3
in
out
clc
hlt
cmp
ljmp
int3
cld
out
test
cmc
faddp
std
enter
in
in
loop
clc
xor
xor
cmp
out
out
out
xor
int
int
xlat
ds
loope
fnclex
in
iret
shl
lock
cmp
ljmp
aad
fadd
fsqrt
loope
enter
int
loopne
enter
iret
in
out
jmp
cmp
lock
cmp
idiv
in
xchg
cmp
shl
xor
cmp
fcmove
rcr
into
shl
loop
xchg
cmp
jecxz
in
fists
loop
ret
ror
cld
out
cmp
jecxz
and
stc
fldl
ljmp
aaa
enter
stc
enter
repz
clc
lds
push
xchg
test
in
aam
jmp
rcl
sar
filds
fadd
call
mov
int3
aam
lock
repz
xchg
xlat
enter
test
movb
lock
vpsllw
leave
sarl
int3
cmp
std
rcl
jecxz
fiaddl
in
int3
repnz
fstpt
fdivs
fidivrs
into
clc
ds
fucom
fcmovnbe
mov
stc
mov
icebp
repnz
shr
xor
jmp
aas
cmp
fld
xlat
ret
aam
mov
xchg
mov
cs
in
clc
iret
imul
aad
cmp
sbb
in
int3
enter
out
rcr
out
test
aas
shl
iret
add
test
mov
std
jecxz
in
xor
in
stc
les
in
out
in
fdiv
in
div
and
in
out
in
orl
sti
repnz
aad
loopne
cmp
fnstsw
cli
loopne
test
shr
loop
stc
enter
sti
cmp
cld
in
repz
fsubp
mov
cld
xchg
test
out
lret
ror
icebp
call
xor
ret
jecxz
xor
fdivr
cld
mov
neg
in
repz
xor
cmp
jmp
xchg
flds
cli
out
cld
std
jecxz
shll
iret
loop
xlat
aam
cmp
loope
stc
ss
cmp
hlt
fildl
nop
fxch
lret
shr
shl
xor
fsubr
cmp
fmul
in
xchg
and
sub
out
mov
iret
jmp
xor
jmp
and
int
cld
fiadds
idiv
loop
faddl
cmc
out
fcom
aam
sti
enter
cmp
rcl
xlat
loopne
loope
mov
int
lock
enter
clc
into
jmp
test
xor
shl
clc
test
mov
out
clc
ljmp
lret
cli
ds
iret
fisttpl
out
loop
mov
xchg
xchg
xor
div
cmp
into
cmp
mul
rcr
test
repz
stc
cli
out
xchg
lock
icebp
idivb
loop
in
ror
fdivrl
xlat
rcl
ret
repnz
xchg
out
jmp
mov
out
ljmp
ds
not
aam
iret
repz
aam
mov
sub
push
mov
jmp
int3
ret
int3
int3
sahf
pushf
gs
es
jbe
add
add
in
orb
ret
lret
sub
shl
aam
cmc
loop
mov
in
rcr
mov
shl
ret
out
cmp
shlb
ffree
in
fldl
icebp
loope
loop
nop
hlt
shl
out
jmp
stc
cmc
shl
addl
int3
neg
xchg
into
in
shl
xor
cmp
sti
iret
fstpt
cmp
cld
fimull
nop
in
adc
lret
ret
cld
out
cmp
fdivrs
iret
hlt
fiaddl
xchg
out
orb
aam
repnz
lret
adc
rol
mov
mov
fadd
fsub
icebp
mov
out
int
clc
xor
cmp
sarl
loopne
cmc
leave
cli
test
flds
shr
int
int3
xor
sti
sarl
ret
out
fst
call
adcl
nop
test
ss
int3
cmp
repnz
cmp
lock
sub
in
adcb
out
sub
ret
cli
leave
xlat
fcmovbe
ljmp
decl
mov
stc
jmp
test
ljmp
icebp
cli
ds
iret
icebp
fucom
test
xchg
aad
xchg
std
loopne
rcl
rcr
out
xor
into
leave
repnz
sar
sti
cmc
ret
stc
hlt
int3
sti
out
lock
addl
stc
cmp
ds
loop
ret
in
jecxz
idiv
fmull
ljmp
hlt
xlat
aam
aad
cmp
loope
cmp
xchg
int
mov
test
std
cmc
mov
in
in
shlb
lret
shr
jmp
vpmaddwd
ret
jecxz
out
out
mov
addl
jmp
hlt
jmp
sti
loop
rcr
call
fcmovu
iret
iret
xchg
aam
int3
out
lret
sti
aam
cmp
cmp
test
fcomi
test
jecxz
loope
orb
aam
lret
std
shl
jmp
ret
ret
loopne
test
std
lret
mov
jmp
xor
jmp
loopne
cmc
decl
aas
jecxz
ret
leave
test
test
repz
lret
out
rcl
cli
xor
cmp
ds
lock
mov
fcmove
out
cld
testb
in
cmp
aaa
cmp
out
addb
cli
fadd
fcomip
into
fucomp
int
sar
xor
shl
cmp
aas
fchs
repnz
addl
xchg
jecxz
in
xchg
das
out
in
aam
cmp
fcom
clc
loop
jecxz
icebp
out
loop
decl
mov
repnz
repz
into
cmp
not
test
rcr
mov
cli
incl
xlat
rcl
clc
fstpt
enter
cmp
cmc
repnz
mov
nop
icebp
xchg
mov
xchg
out
hlt
in
jecxz
fdivr
repz
xor
int
repz
xchg
out
in
repnz
clc
aam
out
rcl
in
out
stc
lock
ljmp
lret
orb
std
xor
out
shr
fsub
clc
test
rcr
aam
xbegin
out
aam
shll
lret
xor
xlat
sti
cmp
cmc
cli
cmpl
stc
loopne
in
int3
ss
clc
fcomp
xor
fdiv
stc
rorl
in
call
repz
out
lock
das
enter
lret
ret
fadd
cld
test
fdivr
jmp
loop
xor
shl
aaa
icebp
sar
cld
sbb
ljmp
fisttpll
jmp
xlat
repz
ss
cmp
repnz
in
out
fdivr
cli
mov
leave
xchg
lret
xchg
jmp
out
cmp
int3
xor
fcmovu
idivb
fcmovne
jecxz
or
hlt
loopne
xchg
int
sarb
call
rcl
repnz
stc
out
orl
ror
rol
cmp
ror
cmp
cld
std
loope
fcmovnu
stc
enter
sti
lea
cmc
aam
ljmp
std
cmp
std
fcmovnu
in
fcmovnbe
in
jmp
adc
mov
fnsave
lret
sar
fadds
xlat
clc
neg
or
int3
fists
lock
std
lret
cmp
ljmp
jmp
lret
into
fst
fstp
bound
cmpsl
dec
adc
jle
add
cli
ret
idiv
cld
in
into
nop
mov
test
loop
ret
cld
out
in
out
jecxz
lock
aam
incl
out
jmp
clc
das
in
lock
out
cmp
cmc
shr
xlat
stc
mov
xchg
lret
mov
out
xor
ljmp
test
test
in
mov
loopne
xchg
int3
ljmp
aaa
rcr
lock
cmp
sbb
xchg
fsubrp
mov
fsubr
adcb
enter
into
jmp
loope
ret
mov
stc
test
or
cli
enter
fdivp
repz
into
les
out
clc
clc
icebp
repnz
shl
imul
out
cmp
clc
ss
ss
or
out
xchg
out
mov
ror
into
ftst
shrl
xor
sbb
ret
int3
mov
mov
out
xchg
cld
jmp
xor
cmc
xor
ss
cli
cli
test
rol
mov
loopne
leave
leave
in
jmp
mov
xor
lret
fstpt
fnstsw
cmc
iret
sub
leave
out
faddp
test
test
loope
in
rcr
int
call
test
incb
out
lret
inc
ret
int3
xor
fidivl
lret
aad
test
sub
lret
imul
iret
ret
ljmp
aaa
int
aad
std
cli
cmc
xlat
aam
out
stc
mov
ljmp
int
aad
xor
xor
cmc
xlat
leave
loopne
icebp
loopne
xlat
add
cmc
clc
lea
hlt
int
xor
jmp
iret
fdivrs
cmp
in
xchg
aam
call
in
icebp
lock
fimuls
aaa
in
iret
cld
call
xor
cmc
leave
out
out
jecxz
out
jmp
mov
xchg
jecxz
into
cmp
ds
fcmovnb
cli
fdivp
loope
orb
xor
hlt
cmp
shl
iret
xor
hlt
fidivrs
faddl
nop
lret
xchg
sub
lret
xor
repz
cmc
cmp
lock
repnz
fdiv
sbb
xchg
mov
enter
repnz
xlat
cmp
loopne
cmp
mul
inc
enter
loop
aam
mov
jmp
shr
into
jmp
sti
rcr
fcom
shl
cli
mov
mov
xlat
cmp
lret
repz
sti
cmc
fmul
cli
shl
aas
mov
fmul
orb
xchg
out
xor
out
sti
lock
ds
repnz
cli
std
jmp
cmp
clc
mov
mov
mov
in
xchg
test
xor
repnz
aam
sti
cmp
idiv
rcl
cmp
fsubr
in
fildl
mov
xlat
in
in
cli
ror
aaa
ror
into
rcr
fcmovnb
aas
and
sti
xchg
jmp
xchg
in
out
repz
xor
cmp
aaa
lret
ror
and
hlt
roll
test
mov
xlat
cli
stc
cmp
cld
ljmp
cmp
ffree
iret
lret
cmc
xchg
in
xor
test
enter
loope
rcr
in
cli
fucomp
fstp
adcb
jmp
imul
repz
fcom
cmp
in
adc
leave
vshufpd
flds
adc
jmp
stc
loopne
fxch
repnz
out
fsubr
test
in
sti
xchg
out
xchg
cmp
out
ret
cld
idiv
aad
int3
cmc
ds
rol
shr
in
xchg
sub
aad
ret
cmp
in
icebp
int3
aad
cmp
in
lock
neg
out
mov
fimull
test
cmc
enter
loop
out
sarb
fdivr
cmc
lret
int
repnz
sbb
in
into
out
mov
xchg
lret
test
das
lret
ret
in
fcmovbe
std
cli
cmp
aad
fdivr
enter
out
xchg
fcomip
aam
in
loopne
xor
fcmovbe
xor
cld
xlat
test
jecxz
stc
fsubrp
stc
loop
call
fildll
out
div
xlat
aam
cmp
xlat
ret
aaa
test
test
ret
mov
in
fmuls
out
ss
call
fucomip
shl
rcr
idiv
addb
into
sar
out
hlt
jmp
ljmp
std
ss
shr
into
sar
test
dec
fsubp
mov
fucomp
shl
xor
lds
out
add
add
aam
rcl
aad
inc
xor
xchg
outsl
inc
and
add
out
cmp
xlat
fstpt
cmp
repz
call
test
int
lret
test
lock
xchg
ret
aam
cli
call
fadds
fdivrs
mov
fisttpl
aaa
int
neg
stc
sar
loopne
std
in
aad
xchg
cli
mov
int
in
adc
loope
aad
fcmove
in
cmpl
into
out
movb
fcmovnu
in
adc
int
not
int3
test
cmp
aad
loopne
in
shl
enter
int3
jmp
int
lret
xor
enter
out
ret
shr
cmp
or
leave
lock
mov
xchg
out
lock
out
xlat
jmp
lock
loopne
roll
xchg
cld
decl
das
aad
lret
cmc
xlat
call
not
out
mov
test
fdiv
rcl
shl
jmp
xor
shr
fcmovnbe
inc
fcomip
cmc
addl
orb
fildll
xor
fmul
ljmp
sarl
mov
fisttpl
ljmp
lock
fidivrl
dec
cmp
aam
aas
stc
xlat
shl
cmc
decl
cli
jmp
in
or
icebp
xlat
iret
cmp
fsubrp
rcr
roll
fcomip
incb
in
jmp
mov
in
xor
lock
out
cli
cmc
leave
loopne
mul
sar
sub
xlat
stc
int3
cli
call
rolb
aam
repnz
out
cmc
sarl
aas
cli
repnz
xchg
in
ret
addl
rolb
fmul
out
std
lret
aas
test
stc
jmp
out
mov
mov
iret
xchg
divl
cmc
rcl
icebp
fmulp
enter
cld
loope
mul
call
addl
ljmp
sarl
and
in
ret
fldl
int3
ljmp
not
in
icebp
cli
fcmovu
cmp
cmp
jecxz
cmp
fdivr
cli
int3
mov
fadds
shl
lret
clc
ret
into
out
cmp
sbb
aad
hlt
jecxz
out
lret
xchg
repnz
in
xor
cmp
in
aam
cmp
icebp
ret
call
vpsrad
in
loop
sti
into
sub
leave
sub
in
aam
rol
cmp
repz
sti
cmp
in
cmpl
lret
xchg
mov
test
leave
out
hlt
cmp
lock
cmp
push
fcmove
rorl
leave
loope
ljmp
repz
in
cmp
cli
out
jmp
ljmp
iret
loop
sub
hlt
xor
jmp
in
stc
cmc
neg
cli
cld
out
jmp
orl
loop
rcr
in
loopne
out
int3
faddp
mov
idiv
leave
call
iret
fsubr
lock
std
neg
leave
hlt
loope
into
int
cmp
in
int3
out
in
fsqrt
fnclex
rorb
shll
lret
stc
stc
test
int
rol
loop
test
fildl
iret
clc
loop
xor
out
xor
repz
into
ffree
aam
jmp
test
out
repnz
loop
test
out
int3
cmp
xor
leave
aam
fcmovu
ret
aas
cld
sbb
orl
lret
out
cmc
repnz
sarl
loopne
fsub
test
hlt
testb
enter
out
lret
adc
fdivr
in
test
cmp
clc
fucomi
sti
out
mov
add
orb
xor
int3
ljmp
xchg
repnz
leave
out
out
out
mov
in
fdivr
test
cmp
lret
aad
cli
xlat
repz
jecxz
cld
div
lret
loop
clc
loope
fmulp
out
xchg
nop
jecxz
clc
hlt
fcmove
leave
int
std
int
sti
int
cli
aam
repnz
mov
enter
fisttps
xor
in
ret
xor
lock
lret
frndint
cld
repz
mov
cld
mov
fucom
xchg
ror
clc
cmp
cmc
ljmp
idiv
icebp
out
mov
ljmp
repz
in
cmp
ret
int
ljmp
rcr
repnz
ret
loop
orl
shrl
shl
fcmove
fdivrp
cmp
cmp
cli
clc
leave
clc
lds
jecxz
ror
iret
leave
fldl2t
fcmovne
shl
jecxz
fdiv
rolb
mov
add
inc
or
out
add
add
aad
fisttpll
sub
nop
mov
jle
add
dec
lock
mov
ret
into
stc
ljmp
cli
cld
jecxz
xchg
add
shr
icebp
in
mov
iret
xor
rcr
hlt
shl
aas
sbb
fdiv
mov
jmp
xchg
icebp
orl
fxch
fucomi
shl
sti
rol
cmp
lock
decl
fildl
jecxz
shl
cmp
repz
out
fcom
lret
test
fstp
out
int3
sub
sub
cmp
out
icebp
cli
xor
aad
neg
hlt
cmp
shl
mov
in
int
out
out
les
icebp
ds
in
shl
mov
dec
fdivrp
fcomip
int3
shl
xbegin
aam
in
out
into
icebp
sarb
int3
jmp
xchg
std
jmp
xor
icebp
ret
into
cmp
ds
in
xor
les
sti
jecxz
leave
or
out
enter
repnz
test
int
fdiv
lret
fstp
and
ror
fmul
mov
xchg
call
aam
repnz
stc
ds
rcl
cli
repnz
leave
stc
xchg
lret
rorl
aam
cmp
icebp
cld
ds
rcr
ljmp
cld
decb
lret
lret
in
icebp
int3
ror
cmp
aam
cmp
int3
ds
call
fdivrp
enter
loopne
fcomip
in
rcl
xor
in
xor
hlt
fdivrp
cmp
in
sar
orl
int3
and
mov
fdivs
cli
clc
fsubr
fxch
cld
sti
ret
sar
stc
lds
into
int3
shl
lock
int3
xor
leave
push
lret
imul
hlt
rol
cmc
test
clc
jmp
cld
out
rcl
repz
ret
jmp
enter
int3
into
aam
out
in
rcl
out
mov
int3
repz
jmp
out
int
cli
cmc
rcl
jmp
idivl
test
mov
mov
orl
icebp
xor
test
ljmp
fadd
rol
loopne
enter
fisttpll
ret
xor
jmp
and
rol
out
mov
lret
ret
mov
jmp
ret
in
sar
hlt
fcomip
aam
in
enter
orl
xchg
in
xor
in
les
stc
sar
int3
cld
iret
roll
lret
hlt
aas
mov
out
xchg
faddl
vpsubq
jmp
cmp
cmp
clc
and
cmc
ffreep
xchg
lret
in
iret
aaa
ljmp
sbb
fdivp
std
loope
repnz
loop
loopne
lock
lret
test
aam
jmp
stc
fsubp
fcmovb
imul
neg
call
xchg
cmc
rcr
in
sarl
xor
clc
fcmovu
fcmovb
fcmovnb
jmp
cmpl
lock
int3
clc
neg
fmul
in
fmul
lret
or
xlat
cmc
cmp
fdiv
fisttps
int3
fcoml
iret
xlat
cmp
call
repnz
repnz
leave
sbb
fsub
int3
enter
xchg
idivb
icebp
aad
cld
iret
stc
sbb
div
jmp
cli
loope
ljmp
fldl
cmc
xor
call
repz
aam
in
sti
clc
mov
jmp
xchg
in
cli
stc
xor
in
clc
cmp
stc
jecxz
ljmp
in
mov
call
cmp
xlat
loopne
repnz
ds
clc
sbb
in
sti
orl
mov
in
lock
idiv
cli
in
adc
lds
orb
sub
in
in
iret
call
xlat
aad
or
lret
fucomp
adc
xchg
xchg
out
ss
clc
cmp
out
hlt
out
rcr
aas
loop
cld
add
test
int
loopne
in
in
in
rol
call
inc
fsincos
adc
mov
loope
addb
xor
fcmovnu
int3
rol
std
lock
idivb
out
sub
clc
out
clc
sti
in
lea
icebp
aam
in
int3
fucom
sti
cmp
jmp
fcom
cmp
aam
aad
fisttpll
in
xor
into
xor
idiv
cmp
cmc
out
clc
test
in
ds
out
addb
fcmovne
jecxz
hlt
leave
test
int
fsubr
rcl
jge
push
jb
jmp
cmp
jne
jmp
iret
lret
rcr
aad
int
jge
ja
push
add
add
xchg
sar
sti
mov
rclb
aad
lret
icebp
jmp
idiv
push
cmc
shl
fidivrl
rol
sbb
lock
iret
in
xor
cld
cmp
ljmp
lret
mul
mov
mov
push
into
shlb
cmc
xor
hlt
cmp
call
out
repnz
repnz
ret
decb
xchg
xchg
repnz
in
aad
cmp
cmp
rol
int3
addb
ret
lock
mov
mov
jecxz
fld
xor
repz
fstpt
loop
div
and
dec
icebp
repnz
mov
out
div
xor
ss
cli
loope
rol
cld
mov
test
nop
lret
mov
xchg
nop
in
in
aam
push
addb
hlt
ret
jmp
xchg
loopne
loopne
fbstp
call
aad
fcmovnbe
neg
cli
xor
rcr
jmp
in
sbb
loopne
lock
call
fnstenv
icebp
into
in
in
cmp
jecxz
cld
mov
loope
addl
shll
xor
out
out
cmp
cmp
int
loope
sar
jmp
out
lock
lret
xor
aas
lock
out
fnsave
jecxz
loopne
rcr
in
test
out
out
test
int3
stc
xlat
dec
enter
test
iret
loop
repz
mov
out
addl
enter
fdivp
aad
test
xchg
adc
lret
lret
jecxz
loopne
repnz
mov
call
aam
aas
ljmp
mul
in
lret
xchg
loop
shl
out
cmp
cmp
sbb
clc
sti
fsubp
mov
out
ljmp
xlat
mul
in
iret
clc
xor
xor
cmp
shl
dec
mov
test
cli
in
fcmovne
icebp
nop
xor
out
lds
rol
out
ljmp
cld
mov
xchg
fucom
enter
sbb
addb
cmp
cmp
push
int
loop
fmull
out
in
repnz
fst
adc
xor
xlat
call
sti
idiv
test
fiaddl
stc
leave
test
xchg
lret
xchg
xchg
xor
shl
out
fcmovbe
ds
lock
icebp
test
jecxz
fstp
orl
xor
cmc
jmp
xlat
clc
idivl
std
ss
cmc
not
fucomip
fdivr
sti
enter
mov
hlt
xor
fxch
jmp
cmc
aaa
loop
xorb
clc
in
ror
int
nop
sti
enter
xchg
sub
jmp
cld
fcmovnu
shl
in
aam
call
loop
xchg
std
into
repnz
rcl
lret
aad
fdivr
clc
and
repnz
loope
std
test
sub
xor
cmp
cmp
in
in
out
ds
aad
loope
xlat
clc
mov
ljmp
shrl
int
out
pushl
fsub
icebp
fistpll
shl
rorl
loope
in
jmp
out
rcl
xor
cli
xor
rcl
xlat
lret
in
lret
cmp
fcom
cli
jmp
fildl
out
loopne
mov
loop
jmp
div
clc
clc
icebp
fsubp
loopne
out
hlt
leave
out
lret
cld
in
ficoml
rcl
rcl
icebp
idiv
int3
ds
fsub
mov
fdivr
test
nop
mov
lret
int
xchg
out
fmul
xor
xor
aaa
ss
cmp
cmp
lret
mov
mov
iret
loop
fsubr
cmp
sti
cmp
std
mov
int3
in
lds
jmp
jmp
cmp
sti
cmp
add
xchg
aad
into
xchg
xchg
iret
std
jecxz
repnz
shr
int3
in
cmp
aas
in
cmp
jecxz
test
enter
int
jecxz
out
int
fsubp
fcomip
hlt
sti
xlat
aad
ljmp
cld
loope
mov
out
clc
mov
in
das
aam
out
aaa
stc
ds
into
fistpll
cmp
hlt
cli
aam
call
ds
loope
out
lret
jecxz
out
out
xor
fmul
xor
repz
fnstcw
xlat
in
mov
xlat
mov
xchg
loope
enter
mov
les
xlat
in
cmp
sti
rcl
loopne
test
out
out
call
mov
leave
jmp
ror
out
xor
into
in
hlt
in
aad
rol
cmp
xchg
std
dec
into
test
lret
aaa
out
out
inc
mov
mov
mov
jmp
enter
int
int3
lret
xlat
ja
lea
add
add
fdivp
repnz
loope
shl
rcl
loop
or
mov
lea
xchg
iret
aas
cmp
ss
int
sti
sar
lret
fcomi
jecxz
out
fadd
test
fisttpll
ss
xlat
imul
out
xor
div
ds
ret
adc
cmp
in
xchg
loopne
lret
jmp
lret
loopne
std
cmp
fsub
repnz
out
lret
mov
das
fld
xor
fdivl
icebp
sar
and
shl
fucomip
stc
in
jecxz
faddl
xchg
ret
loop
idiv
in
fmul
xor
xchg
fsubp
test
repnz
shll
cmp
out
out
aad
rcl
rcr
fadds
fadd
std
mov
into
ljmp
repnz
das
hlt
aas
aad
ret
out
jecxz
xchg
fmul
mov
jecxz
nop
icebp
mov
lret
fsub
rol
out
xlat
lock
rolb
fucomp
inc
in
fucomi
lret
xchg
aad
call
repnz
jmp
in
fcomi
fxtract
in
out
addb
ss
cmp
ds
and
roll
lret
decb
fcomip
aas
ror
xor
call
sar
into
sbb
loopne
cli
loop
out
mov
fcmovnbe
into
shl
ss
in
aam
stc
ror
rcr
in
aam
sti
repnz
ljmp
xor
clc
out
lret
lock
hlt
add
mov
aam
jecxz
leave
lret
fiadds
repnz
cld
cld
idiv
sti
xlat
cmp
out
sbb
testb
int
out
icebp
mov
jecxz
enter
repz
shr
repnz
rol
repz
ret
addl
rorl
stc
shl
repnz
fdivrp
repnz
lds
into
jmp
out
out
sti
std
neg
in
rcr
shr
addl
std
mov
xchg
lret
xchg
cs
fsubr
ror
aad
repz
ret
ret
repnz
enter
fdivrp
fucomip
repnz
fsubp
ror
xor
int3
fdivp
lock
ror
clc
in
shl
rcl
out
int
sub
lret
shl
in
lret
rcl
aaa
lret
rcl
cmc
idiv
aas
xlat
out
aas
mov
int
loopne
xchg
xchg
loopne
jecxz
jmp
div
out
int
icebp
sti
rcr
loope
loopne
loop
leave
int3
and
xchg
std
xchg
xor
in
cld
fxch
cli
int3
rcr
ret
std
cli
imul
in
frndint
ds
fucomp
call
xor
stc
iret
repnz
faddl
sbb
mov
aam
imul
ret
leave
ss
out
call
jecxz
call
test
xchg
into
in
loope
xor
sar
xor
jmp
xlat
or
sar
ret
cld
iret
test
xchg
jmp
into
aam
rcr
ss
jecxz
xchg
in
std
int
out
popl
shr
cld
in
aam
lret
jecxz
rol
loopne
adc
idivb
fcmove
icebp
into
xchg
adc
in
xor
aaa
fidivrs
repnz
sti
hlt
out
std
ljmp
xchg
frstpm(287
cmp
test
inc
in
fdiv
in
loop
fcoml
test
xor
fsubr
out
f2xm1
cld
rcr
repnz
out
jmp
enter
in
repz
clc
lock
fstpt
sar
cli
stc
fdiv
cmp
aas
mul
jmp
lret
xchg
fsubr
in
mov
xor
shrb
std
cld
repnz
in
mov
sti
call
lret
int3
jmp
shr
div
in
cli
cmp
aad
add
fcmove
ret
mov
mov
jecxz
or
repz
fidivrs
out
cmc
loopne
hlt
xor
fcmovu
mov
lret
mov
xchg
call
mul
int3
lret
fnstcw
hlt
icebp
iret
mul
cld
test
sti
or
test
into
test
xor
stc
in
cmp
icebp
aad
in
rol
mov
hlt
fcmovu
call
lret
jmp
not
fcom
sar
std
in
iret
ret
loopne
mov
xchg
xlat
stc
enter
mov
xor
imul
out
ljmp
sbb
in
add
jmp
inc
clc
mov
mov
xor
add
mov
lea
jmp
rol
lret
ffree
aam
mov
mov
imul
sub
jle
add
out
iret
and
mul
cmp
cmp
iret
loope
ret
test
fld
xchg
mov
std
out
loope
ljmp
lret
lret
int
sti
jecxz
loope
jecxz
cmc
jmp
loope
repz
xorl
xlat
call
jmp
in
xlat
shl
neg
ljmp
call
int3
rcr
leave
int
ljmp
shl
and
and
cmc
sub
nop
std
fcmovbe
hlt
std
icebp
cmc
in
lret
xlat
aam
aas
repz
fsub
leave
call
and
repz
iret
subl
out
fcomi
flds
xchg
mov
mov
xchg
out
out
clc
idivl
cli
filds
repnz
aam
out
or
mov
out
xor
imul
in
aad
leave
in
loopne
in
hlt
xchg
add
out
loopne
out
in
div
sarb
cmc
out
icebp
out
lret
cmp
aas
in
icebp
in
xlat
repnz
clc
out
addl
stc
int
sarb
repz
ds
xlat
leave
faddl
fsubrp
or
test
call
cmp
out
cld
loopne
fidivrs
adc
and
fmuls
lret
xchg
in
ret
iret
clc
mov
iret
xor
out
rcl
mov
loope
jecxz
iret
shl
in
aad
neg
repz
aas
shr
fmuls
ljmp
lock
fcmovne
ljmp
fadd
std
in
fcmovnb
incl
fsubrp
in
in
enter
fadd
xlat
aaa
fnstcw
aas
fstp
fcmovu
fcmovnu
stc
mov
xchg
mov
xchg
xchg
repz
ss
call
cmc
icebp
in
std
stc
jecxz
mov
and
in
fdivr
into
std
repnz
fadd
stc
cmc
int3
lock
sarb
test
icebp
loop
fdiv
addb
repnz
lret
xor
ss
out
fmul
iret
stc
sbb
clc
call
fsub
cli
cmp
sarl
cmp
std
aam
aaa
fchs
cmp
xor
idiv
cli
test
in
lret
xchg
ljmp
aad
neg
and
neg
rcr
cmp
mov
fmull
ret
rol
shr
sar
repnz
loopne
in
cmp
filds
fsubr
cmp
cmc
int3
iret
out
stc
xlat
int
icebp
cmp
fcomip
cmp
ret
fisttps
int
shl
int
aaa
out
iret
jmp
jmp
sbb
out
cmc
loope
xlat
jmp
jmp
xchg
aad
int3
into
aad
rol
rcr
lret
hlt
jecxz
mov
clc
fucomi
mov
xor
xchg
mov
ror
out
das
out
rcr
fdiv
ds
cli
xor
xchg
fucom
dec
out
loopne
xchg
icebp
out
out
aad
test
sbb
iret
stc
mul
movl
subl
sar
fucomip
cmp
cmp
out
ljmp
xchg
out
xchg
lret
imul
out
std
xor
lret
xlat
movl
out
lret
loopne
jmp
xlat
aam
sti
std
repnz
aad
lds
movb
mov
loop
jecxz
shr
int
xlat
sti
repz
xlat
clc
std
icebp
repz
enter
fdivrp
fcmovnb
loop
out
jmp
vcvttpd2dq
cmc
repnz
icebp
jmp
test
out
aad
ljmp
fsts
int3
xor
ss
enter
jmp
cld
fstp
jmp
mov
addl
mov
ror
in
aam
aad
rcr
in
out
rcl
rol
out
mov
and
int
mov
mov
fadd
leave
ljmp
cmp
hlt
movb
fisttpll
repnz
stc
out
fcmovbe
lret
cmc
out
out
xor
ds
clc
idivl
clc
test
fisttpll
jecxz
aaa
fcmovbe
lock
imul
fsubr
test
rcl
in
fsub
iret
leave
cmp
lock
addb
sbb
loope
fcmovu
ljmp
fcom
ret
stc
jmp
in
rcr
fdivr
test
out
loop
xchg
lock
xor
out
out
cmp
sti
shr
out
decb
mov
add
add
int
xlat
hlt
xchg
push
das
add
add
fmulp
out
xchg
loop
call
leave
iret
divl
aad
aaa
fucom
clc
sar
fptan
xchg
jecxz
and
lock
out
hlt
hlt
ss
shr
cmc
lock
xor
sti
cmc
sar
xlat
mul
mov
xchg
jmp
fsubrs
aaa
cmp
ror
shr
flds
fisttpl
call
repz
xlat
loop
sar
cmp
ret
jecxz
out
stc
loope
jecxz
leave
cmp
std
xchg
int
xchg
icebp
xor
out
iret
xor
cmp
repz
lock
cmc
aas
addb
test
stc
iret
out
repnz
call
cli
in
aaa
add
in
fdiv
and
fiadds
xchg
add
out
cmp
std
ds
out
mov
jmp
std
leave
lret
xchg
icebp
in
int3
loope
fucomi
ss
cli
lock
ret
repnz
in
repz
dec
in
loop
mov
mov
aam
cld
in
rcl
fadd
in
aaa
hlt
fst
add
in
out
in
adcb
repnz
in
neg
fdivrp
xchg
test
mov
cli
std
out
sti
mov
cld
lret
out
out
leave
aam
iret
clc
cmp
in
xorl
inc
loopne
fsub
mov
std
cmc
ljmp
cmp
sti
iret
cld
out
std
cli
fucom
jecxz
call
roll
fcomi
cmp
xlat
mul
cmp
lds
or
out
int3
icebp
nop
xchg
xchg
aaa
hlt
repz
lock
jecxz
hlt
fcmovnu
in
loope
cld
std
lret
in
mov
icebp
leave
fsubrp
xchg
in
lret
in
fdivrs
jmp
lret
xor
sar
in
fnstsw
lret
out
cmc
icebp
xor
fdivl
aas
fdivrl
fcmovnu
int
cld
mov
xchg
hlt
loopne
lret
sar
lret
clc
cmp
cmp
mov
aam
ljmp
std
loop
xchg
out
cmp
iret
aam
xor
loope
imul
lock
in
out
in
fmull
shr
fdivr
test
aad
test
repz
lret
std
mul
loope
int
in
in
ror
fcomp
not
repz
lret
out
test
fidivrs
out
ror
loopne
int
in
loop
ret
ljmp
ss
in
xor
xchg
call
enter
fdiv
addl
in
jmp
cld
fadd
incb
xlat
in
out
out
test
out
in
lret
shl
rcr
call
fstp
std
clc
testb
cmc
cmpb
jmp
sti
lock
addb
ss
out
cmc
fcmove
repz
jecxz
sti
xchg
testb
adcb
stc
jmp
ret
cmp
sti
repz
fsubrp
rcl
out
rol
fdivp
loopne
vpor
enter
enter
shl
rcl
sti
lret
sarl
cmc
in
fildl
loop
jmp
jecxz
lock
loope
iret
ljmp
cmc
xlat
cmp
hlt
aad
fdiv
add
jmp
lret
std
fildl
xor
std
divb
cli
into
int
aam
or
jecxz
xchg
mov
fisttpll
xor
cmp
aaa
lret
leave
std
imul
fstpt
rorl
in
cmc
xchg
xchg
test
shl
sti
iret
cli
cmp
rcr
into
fadd
out
fisttpll
rorb
call
xor
in
fsubr
lret
into
aam
mov
out
stc
in
mov
loope
call
in
in
idivb
out
iret
int3
cmp
hlt
sti
cmp
jmp
ljmp
jmp
in
into
enter
xor
std
jecxz
fimull
addl
cli
sti
call
idivb
in
add
repnz
icebp
lret
int
xchg
aam
repnz
cmp
aad
shr
sub
testl
xchg
std
xchg
mov
leave
mul
in
xor
fnstsw
fnsave
fdivrl
in
rcl
cmp
lret
clc
loop
nop
xchg
xchg
imul
repz
cmp
sbb
ret
rorl
decb
xor
aaa
jmp
stc
int3
shr
cmp
fdivrp
fxch
fcomp
mov
mov
in
ljmp
ret
ljmp
mov
add
aas
int
int
ret
leave
pop
cs
cmpsb
xor
jle
add
clc
fnstcw
in
aas
xor
mov
cld
ljmp
repnz
mov
xlat
cmc
cmc
int
icebp
out
xor
xor
aad
shl
fcmovnu
mov
sbb
dec
int3
xor
shr
fsubrp
hlt
in
les
call
and
xchg
orb
jmp
aad
loop
sar
ret
aam
test
incb
call
repz
xor
lret
in
xchg
repz
jecxz
in
rcr
in
shr
repz
lret
cmp
repnz
sti
cli
xlat
sti
rolb
jmp
jmp
aam
shr
xlat
fdecstp
jmp
sti
fmulp
in
cmc
sar
fsub
leave
or
xchg
call
jmp
icebp
hlt
call
rolb
ljmp
loope
in
decb
stc
xlat
cmp
out
fistpll
jecxz
ror
cli
test
mov
test
out
addl
out
out
shr
cmp
lock
repz
enter
mov
xchg
fcomip
xor
int
iret
lret
xlat
xor
cmp
fcmovu
rcl
xlat
xlat
leave
cli
lret
mov
xchg
xchg
mov
jecxz
rcl
call
iret
loope
in
testl
ljmp
mov
xlat
out
lret
lock
jmp
shl
fnstsw
lock
ret
out
clc
shl
ds
incb
jmp
fucomip
in
ljmp
fnstsw
loopne
shl
fucomp
ljmp
fcomip
mov
sub
in
sti
in
fdiv
fiadds
test
xchg
repnz
jmp
iret
ror
into
das
fstp
cmp
cli
jecxz
in
repz
mov
les
jecxz
xlat
xlat
iret
jmp
xor
adc
call
nop
out
hlt
cld
out
xor
das
lret
jmp
clc
ds
in
call
lret
clc
cli
fisttps
clc
loop
fnstenv
cmp
cmp
std
jecxz
in
repz
cld
call
int3
out
jmp
test
rol
clc
repz
jmp
test
les
cli
jmp
das
leave
in
jecxz
sti
into
loopne
call
loopne
mov
mov
fiaddl
jmp
int
fadd
iret
fucomi
fprem
out
fadds
sarl
fidivrs
mov
lock
xchg
call
in
fnstsw
sti
fstp
shlb
in
cmc
loopne
loop
fiaddl
ror
xor
ret
lret
clc
sti
loopne
cli
icebp
shl
rol
test
loopne
adc
in
ret
out
xor
cmp
add
rolb
in
mov
ljmp
xor
cmp
faddp
les
ret
fsub
sti
fnstsw
ror
mov
inc
out
lret
fcomi
lret
int
cmp
aaa
rcl
jecxz
jmp
out
jmp
into
out
in
rol
lret
std
sarl
fcmovb
faddl
in
iret
xchg
lock
in
loop
shl
aam
xlat
iret
rol
ret
aad
inc
xlat
test
jecxz
nop
jecxz
out
sub
fsubr
in
shr
fdivp
in
clc
hlt
adc
std
stc
fcmovb
fsubr
xchg
ljmp
test
fdivp
fcomi
cld
jmp
loop
cld
mov
in
repnz
ror
cld
xor
sar
in
loopne
icebp
sti
mov
int3
test
jmp
ljmp
in
hlt
hlt
ljmp
std
out
bnd
int
nop
xor
int3
shr
xchg
leave
cmp
cmp
cmp
cli
fdivr
faddp
xlat
mov
mov
cld
fiadds
ret
iret
enter
out
int3
ds
cli
cli
fldl2t
fdivp
aam
in
cld
xchg
mov
icebp
aaa
out
xor
int
cmp
cmpl
movl
call
aas
lret
icebp
shl
iret
out
call
fscale
cmp
enter
enter
repz
fdivr
ret
das
fcompp
aam
lret
aam
test
test
jmp
incb
into
idivb
repz
int
loopne
jecxz
shr
loope
orl
lea
push
mov
jmp
aam
ror
fcomp
aam
aas
idivb
cmp
push
add
out
mov
sub
out
leave
enter
into
jmp
hlt
loop
stc
cld
xchg
xlat
loope
ljmp
add
in
cmp
sti
jmp
fcmove
xorl
cmp
fchs
in
jmp
in
in
mov
aam
loope
test
ss
rcl
fcomi
ffreep
xchg
in
std
sti
mul
test
mov
int3
lret
ror
fcmovb
lock
ss
cmp
lock
jecxz
fadd
leave
mov
loopne
nop
aam
mov
out
shrb
cmp
cmc
int
flds
sti
fdivrs
into
out
lea
in
xor
repz
xor
fdivrs
test
lock
repnz
fnstsw
movb
xor
repz
in
icebp
aaa
sar
fldln2
les
loop
in
out
out
shl
mov
out
lock
clc
int3
out
clc
ss
ds
cmp
aad
test
cld
jmp
xchg
xlat
xlat
xor
aam
cld
xor
cld
sarl
fdivrp
in
in
clc
sti
fdivrp
iret
int
int3
sub
in
out
xor
out
repz
fcmovb
in
call
mov
int
roll
hlt
iret
cmp
sar
ret
in
sti
and
clc
xlat
cli
fchs
rcll
enter
jmp
cmp
ret
ds
jmp
sti
and
ljmp
fstpt
hlt
icebp
iret
mul
mov
aad
xchg
clc
dec
xchg
fst
repz
imull
aad
aaa
addb
loope
aad
mov
xchg
in
cld
xchg
aad
fdiv
fcmovbe
jmp
iret
out
cli
iret
repnz
in
imul
jmp
rcl
jecxz
xchg
cmc
in
in
shl
fxch
fnstsw
int
cli
repz
xlat
leave
fisttps
addl
cmp
fcomi
out
divl
in
int3
incb
lret
cmp
rorb
jmp
jmp
jmp
lock
lock
aad
enter
out
out
std
jmp
sti
in
hlt
xor
lret
aaa
ss
jmp
iret
cmp
les
mov
mov
in
addl
repz
iret
cmc
cmp
std
in
fldl
into
mov
mov
xchg
lret
aad
icebp
icebp
clc
clc
xor
cmp
shl
out
xchg
mov
int3
loope
into
lret
fisttps
lret
enter
in
faddl
fcmovnb
shl
cmc
jmp
xchg
nop
xchg
nop
xchg
xchg
out
xor
in
cmp
cmp
sar
mul
fcom
test
hlt
jmp
loope
inc
mov
iret
aaa
jecxz
cmc
iret
out
enter
loop
sar
shl
cli
in
in
xchg
sar
popl
in
xor
call
ss
rcl
cmp
lds
loop
shlb
sar
cmp
xor
rolb
idiv
in
leave
test
test
iret
jmp
xor
sub
test
xchg
loop
fdivr
aad
lret
out
loop
out
out
xor
out
fstpt
clc
fcomip
aad
icebp
in
out
cmp
xchg
and
fiadds
xor
aam
fsubr
fcom
aad
in
std
xlat
ret
div
rolb
clc
mov
test
lock
call
int
in
cld
hlt
test
roll
clc
test
leave
lret
leave
int
ljmp
lret
lret
loope
out
clc
stc
ret
test
orl
xchg
fucomp
jecxz
rcr
iret
fidivrl
ret
loope
repz
idiv
sar
incl
xchg
add
repnz
in
xor
fcomip
cmc
xlat
ds
ffree
stc
fcmovu
out
icebp
lock
shl
in
lret
clc
lret
aaa
sti
hlt
ds
sbb
loopne
xlat
vpsubsw
loopne
fdivr
lret
xchg
nop
out
cmc
in
rcr
shl
aaa
out
repz
aad
into
in
in
loope
xchg
shr
out
lret
out
lret
movl
icebp
cmp
lret
cmp
xchg
fdivrl
mov
lret
sub
xchg
idiv
fsub
xor
lret
cld
repnz
fcomp
hlt
fnstsw
out
test
lret
adcb
jmp
cld
cmp
std
repz
test
test
flds
int
jmp
ret
sarb
enter
shr
jecxz
shl
out
loope
shlb
movb
push
mov
push
jmp
ret
rcl
aam
ret
sarl
movsb
jae
sarb
add
add
xchg
test
jecxz
out
in
ljmp
sti
xlat
cmp
sbb
hlt
leave
sti
stc
xchg
cli
repnz
enter
out
out
sarb
lret
cld
rol
in
cmc
sti
cmp
out
xchg
sub
cmp
jmp
cmp
roll
loope
call
ffreep
adc
xor
in
in
cmp
repz
cmp
jecxz
rol
loop
in
stc
xchg
fildl
test
fptan
fcomi
ds
fadd
out
cmp
stc
out
lret
out
addl
not
fcom
out
in
out
ds
iret
ret
ret
sti
in
call
in
cld
shr
xor
xlat
cmc
sti
sar
jmp
not
hlt
xlat
test
in
or
loopne
loop
orb
shr
aam
out
stc
clc
jmp
test
cmp
idiv
test
out
loope
mov
in
cmp
iret
xor
fdivrp
in
out
cmc
test
loope
sti
out
in
into
ljmp
aad
repnz
out
in
fld
sti
into
int
xchg
incb
ljmp
aad
icebp
xor
out
repnz
aaa
out
shr
fidivrs
into
lock
mov
xchg
xchg
into
mov
sub
leave
out
fidivrs
ss
fidivrs
hlt
sar
fyl2xp1
hlt
loop
loop
in
sti
orb
into
lret
call
lret
aad
cmp
and
mov
loopne
dec
mov
out
loope
out
ljmp
jmp
hlt
jecxz
in
loope
ljmp
xchg
enter
cmp
fcmove
std
aam
cmp
repnz
fmul
mov
aam
sti
fsubrp
lock
out
into
cmp
ljmp
cmc
test
movb
loope
cmp
sbb
xor
cmp
ljmp
ljmp
shl
aam
xchg
or
in
std
and
out
ror
xlat
ljmp
cmp
xchg
mov
clc
aam
in
loope
mov
shr
in
sar
lock
ljmp
cmp
and
jmp
std
xchg
popl
xlat
lock
aad
aas
ret
loope
in
and
xchg
repnz
roll
int
fcmovbe
fsubrp
fsubp
aam
shl
sti
mov
leave
iret
faddl
lret
cmp
cli
xlat
les
sar
ljmp
jmp
test
icebp
shlb
loopne
mul
in
cli
ret
cmp
aad
mov
icebp
mov
in
divl
fcmovne
shr
clc
repnz
into
std
ret
cld
rcr
sti
fdivrp
in
fxch
lock
iret
cmc
out
ret
stc
ror
neg
fld
in
idiv
faddp
mov
mov
add
jmp
in
sti
clc
shll
faddl
out
xchg
fsub
in
lds
out
rcl
icebp
jmp
aas
repnz
fdivr
cld
loop
fyl2xp1
repnz
mov
xchg
in
lock
fcmovnb
lret
not
call
inc
mul
loopne
loop
std
cmc
out
in
in
xchg
mov
out
rol
in
enter
xor
cli
loope
sti
ret
in
fucom
jmp
lret
jmp
decl
not
iret
xor
lret
jmp
into
aad
icebp
mul
fscale
loop
out
fsub
fisttpll
shl
aaa
fcmovbe
lret
mul
sti
out
aad
ffreep
ret
xchg
fmulp
fxch
and
aam
xchg
ss
icebp
xor
cli
aam
adc
mov
lret
lret
out
xchg
xchg
jmp
jmp
ss
cmc
fdivr
rcl
hlt
cmp
int3
loop
in
loopne
xchg
mov
in
ror
fcmovne
icebp
out
cmp
stc
int3
rol
lock
leave
ret
inc
xchg
shl
in
out
int3
int3
imul
xor
ds
and
sub
xchg
mov
xor
shr
out
ret
fiadds
int3
xchg
int
repz
aaa
lret
enter
jmp
lock
int3
and
roll
in
loopne
loopne
xchg
icebp
cmc
lds
icebp
cmc
cmp
ds
out
fdivr
cmp
lds
ror
leave
loopne
xchg
ret
xor
aam
cmp
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
jmp
sarb
ret
enter
fldl
jge
lods
mov
add
add
shr
lret
test
in
out
sbb
jmp
mov
into
jecxz
xchg
out
rcr
aam
icebp
aam
cmp
cmc
int3
lret
xchg
jmp
in
xchg
sar
sub
int
test
add
call
into
int
aam
hlt
shl
xor
rcr
fmul
loopne
ret
cld
test
xchg
xchg
enter
mov
in
int
fdivrl
into
cmp
rol
cmp
add
mov
mov
xchg
iret
mov
out
ljmp
fdivrs
cld
loop
loop
out
mov
iret
icebp
ret
lock
ss
into
icebp
fdivr
into
xlat
fnstsw
ret
and
in
mov
shr
in
out
ret
lock
lret
call
repz
roll
out
cld
enter
repz
out
icebp
ss
repz
ljmp
loope
out
idiv
dec
loope
adcb
cmp
cmp
aad
repnz
stc
add
jmp
sti
stc
hlt
out
fsub
lock
loopne
mov
in
cmp
cmp
jmp
push
div
cmpl
in
mov
into
in
xchg
dec
fldz
fnstcw
jmp
cmp
cld
fidivrs
shll
rolb
fstp
out
repnz
ret
xor
rcr
clc
aad
cmp
in
test
fildl
xchg
fcom
stc
repz
cmc
iret
sbb
fprem
or
call
fmul
lock
in
ss
in
rolb
test
clc
out
jmp
in
out
xchg
cmp
sti
int3
lret
out
out
cmp
stc
sar
cmp
aad
hlt
in
decb
mov
aad
lds
jmp
cmc
enter
stc
in
out
jmp
mov
fisttpl
xchg
repz
repnz
cmp
cmp
icebp
out
icebp
std
lret
add
out
xchg
fnop
mov
push
xor
int3
fnsave
ljmp
loop
addb
out
int3
repnz
jecxz
rcr
ljmp
fistpll
shl
test
leave
aas
fdivr
loopne
out
iret
xchg
jmp
out
loop
cmp
fdivrl
test
rcr
sbb
enter
ljmp
in
loopne
aaa
stc
out
out
in
cmp
clc
std
fucomp
loop
les
loope
fsqrt
jmp
loope
cmc
xor
int
ss
clc
cli
test
stc
cmp
xchg
fninit
out
ficoms
ret
fdivrp
sar
jmp
cld
clc
out
addb
mov
out
mov
das
fcmove
xlat
out
fdivr
int
ds
xchg
cli
or
fsubr
shl
xchg
fdivrp
mov
lret
sti
lret
cli
shl
fnstsw
in
cmp
inc
in
fmulp
cli
fisttpl
clc
ss
cmp
leave
push
lret
fcmovne
cli
sti
rorb
out
lret
clc
ljmp
xor
out
xlat
sti
in
cmp
in
repz
aad
jmp
in
into
call
in
leave
xor
jmp
into
sti
in
repz
div
cli
orl
xor
iret
call
iret
int3
stc
fneni(8087
cld
fsub
filds
out
popl
in
div
hlt
repnz
leave
sar
fdiv
cmp
xchg
fsub
out
leave
nop
test
test
mov
xlat
xor
enter
cmp
out
hlt
cmp
cld
aas
loope
stc
neg
out
loope
orb
rcr
enter
jmp
loopne
cmp
lret
in
out
faddp
in
rolb
div
cli
aas
cmp
in
icebp
mov
loop
in
sti
mov
lret
in
xchg
out
ret
cmp
int3
cmc
repz
repz
hlt
fisttps
sub
jmp
out
in
mov
cmc
stc
fmul
loope
aaa
out
sti
mov
mov
sti
call
rcll
xor
cli
not
jmp
sti
cmp
sti
in
fldl
xchg
addb
stc
xor
xlat
test
aad
rol
not
jmp
mov
fndisi(8087
sub
in
cmp
not
std
in
leave
in
fpatan
div
fcmovnbe
jmp
fsubr
lret
lret
mov
cld
mov
push
pop
sub
add
mov
jmp
ror
fmul
fcomp
fcmovnb
aad
jp
arpl
bnd
add
add
xor
vmovq
lock
jmp
cmp
in
adc
test
ret
int3
xchg
add
loopne
std
xchg
ljmp
cmp
lret
aam
xchg
cmp
in
jmp
int
fiaddl
ret
out
fstpt
repnz
out
stc
stc
in
iret
cmp
cmp
cli
sbb
stc
int3
xchg
rolb
cli
int
int3
fdivrs
cld
cmp
in
cmc
cmp
shl
fimull
mov
into
mov
shr
out
int3
repz
ds
leave
repz
fdivr
out
and
adc
mov
mov
int3
std
cld
divl
in
int
out
cmp
cmp
and
sar
aad
repnz
out
test
stc
jecxz
addb
cmp
int3
xor
out
rcr
rcr
ror
mov
loopne
test
mov
std
mov
neg
cli
ffreep
repnz
clc
rol
orl
int3
dec
shl
rcl
neg
cli
int3
iret
iret
in
lret
lock
jmp
ret
mov
out
out
out
mov
loopne
int3
fptan
int
hlt
out
ret
ljmp
jmp
xorl
in
int3
shl
int3
cmp
call
cmp
hlt
std
out
rcr
jecxz
jmp
xor
xor
in
lret
jmp
in
cmp
addb
fiadds
lea
repnz
int
cli
inc
in
inc
xlat
xchg
popl
icebp
out
loope
aad
sti
fstpt
cmp
xlat
and
cmc
leave
leave
in
faddl
sti
rcl
xor
out
in
jmp
xor
fsubp
hlt
call
ret
jmp
fcomi
xchg
int3
xor
call
fdiv
lret
ffreep
cmc
shl
aam
out
les
xchg
out
xor
sti
repz
loop
in
cmp
fsubr
xlat
lock
leave
test
cmpl
jmp
fcmovne
xlat
fcmovnbe
cmp
rcl
loope
xor
lret
mov
enter
call
mov
sub
jecxz
vaddsubpd
aas
iret
fcomi
in
clc
fld
adc
jmp
repz
iret
xor
out
in
sarl
cmp
cmp
ds
cld
fcmove
call
enter
in
rol
out
les
cmc
ret
out
fildl
and
into
xchg
repz
into
cld
cmp
xor
out
rolb
nop
loope
rolb
xor
rcr
ds
stc
loopne
sar
jecxz
std
jmp
enter
mov
enter
jmp
icebp
cmp
leave
repnz
fucomip
jecxz
cmp
mov
xor
in
nop
sub
nop
aam
loopne
ret
xor
int
loope
jmp
into
lock
div
out
test
iret
cli
xchg
jmp
lock
repz
out
enter
leave
ds
sbb
and
ret
cli
cld
xchg
out
stc
fldl2t
sarl
push
clc
sarb
call
sbb
fucomp
jmp
xchg
repz
sti
sarb
jecxz
cmp
out
std
rcr
mov
out
repz
lock
sar
stc
fdivrs
loope
cmp
clc
jmp
leave
leave
leave
lret
cmc
in
clc
call
cmp
imul
aam
rcl
loop
mov
mov
call
rolb
div
cmp
cli
in
ljmp
idiv
cmp
or
orb
loope
leave
cs
jmp
lret
sti
shr
stc
idiv
in
filds
out
sbb
rol
xor
lret
clc
aam
cmp
jecxz
hlt
fcmovnu
faddp
mov
lret
in
jmp
lret
out
ret
not
sarl
idiv
out
loopne
int
addl
fmuls
mov
fldz
lock
idivl
and
jmp
out
ffreep
mov
test
cmp
cmp
cmp
dec
stc
ret
stc
mov
out
test
sub
in
repz
ss
fsubp
cmp
cmp
in
cmp
roll
test
cld
test
fucomp
aad
jmp
hlt
cli
shlb
leave
hlt
rol
rcl
fcmovnu
loope
stc
jmp
sti
out
into
fucomi
xchg
jmp
ljmp
fucomip
in
int
xor
clc
rorl
inc
or
lea
cmp
jne
jmp
int3
int
fstp
cmp
pop
pushf
jg
test
push
int3
add
add
enter
addl
cli
stc
ror
shr
cmp
test
fld
adc
mov
xchg
sbb
cmp
xor
in
int3
lret
in
aad
xchg
loop
int
mov
mov
mov
hlt
xor
shl
sarb
dec
ret
test
mov
loop
test
lds
idiv
sarl
rol
not
out
lds
out
or
hlt
decl
loop
cmc
out
lret
aad
lock
xchg
call
loop
std
jecxz
lret
shl
aam
cmp
repnz
cmp
fstp
fcomp
out
in
mov
int3
rolb
out
call
call
ret
cmp
addb
loop
frstpm(287
jecxz
mov
loop
int3
cld
shr
lret
aaa
int3
aam
ffree
stc
cmp
fsubr
fmuls
mov
cmp
lock
xor
in
cmp
test
jmp
icebp
int
loopne
out
ss
lret
repz
sarl
iret
add
test
in
jecxz
sbb
out
cmp
fsubp
ljmp
enter
ljmp
jmp
in
clc
xor
fnstcw
fsub
xlat
fadd
clc
test
xlat
into
lret
out
repnz
sub
ror
hlt
das
call
add
in
cli
enter
cli
ret
lea
enter
cli
cmp
rol
stc
aas
repz
xlat
lret
xchg
stc
out
fsub
in
call
in
fsub
cmp
sar
les
test
xchg
leave
rcll
aad
enter
lock
std
clc
loopne
fiadds
xor
addl
mov
in
rcr
enter
fcmovnbe
ljmp
out
aam
cmp
call
cmc
lock
out
stc
in
cmp
loope
fxch
rcl
fiaddl
add
out
lock
xchg
hlt
loope
lret
cmp
cmp
enter
in
cmp
les
mov
lret
int
repnz
mul
sub
icebp
leave
xor
iret
call
ret
leave
inc
loope
out
loop
xchg
jmp
idiv
jmp
ss
cmp
test
mov
fprem1
int3
into
inc
int3
xchg
jecxz
xchg
das
stc
shl
xor
out
fdivl
sti
lock
into
loopne
sar
lret
add
loop
in
loope
aam
int
sarb
int3
fdiv
lret
leave
flds
aad
test
std
enter
in
into
mov
fmul
lret
push
inc
std
test
loope
test
ljmp
loopne
xchg
xchg
sar
out
in
ss
xor
int3
xor
shl
aas
faddp
sti
fcmovbe
cli
ds
ljmp
test
call
stc
idivl
cmp
stc
loopne
lret
or
out
jmp
int
cmp
fxam
ljmp
idiv
ret
fsub
addl
out
cmc
cmp
xor
ds
in
xchg
sbb
cld
std
rcll
enter
cli
sar
cld
ljmp
xchg
dec
sti
out
or
xchg
xor
enter
in
xor
fcomip
cmc
icebp
fadds
loope
ljmp
imulb
ljmp
test
sarl
xlat
and
loope
fsubrp
stc
and
in
shr
ljmp
cmp
fstp
addl
xchg
lret
out
loop
xchg
int
cmp
jmp
int
jmp
rcr
std
lock
std
enter
mov
int
lret
ljmp
xor
aam
icebp
ljmp
movl
fisttpll
das
repz
lds
jmp
xor
cmp
hlt
fcomip
mov
out
lock
cli
sti
into
fucomp
out
test
aam
cmc
ds
int
repz
aas
jecxz
ljmp
icebp
clc
rcr
xchg
inc
xchg
enter
lock
mov
icebp
test
in
out
xlat
fdivrl
ss
idivb
cmc
aad
ds
decb
mov
cmp
enter
loope
ljmp
add
add
xlat
rcl
rcr
lret
push
cmp
aad
ret
pop
stos
stos
roll
jle
add
cmc
cmp
loopne
test
shl
incl
test
loop
cmp
clc
in
sti
ret
xlat
in
out
into
in
cld
xchg
jmp
in
shl
xor
aam
rolb
stc
mov
mov
aad
int
int3
aam
cmp
lret
ljmp
ret
faddp
mov
mov
shl
cli
sti
std
aaa
inc
hlt
sti
int
repz
in
sti
out
int
mov
xchg
in
aad
ss
cli
ljmp
int
aas
repz
ret
loopne
in
xchg
mov
loop
cmc
xor
out
dec
jmp
hlt
cmp
loopne
enter
in
lret
addb
out
sub
repz
int3
clc
fcompp
loope
jmp
sti
jecxz
lret
repnz
xor
ret
out
fidivrl
shl
loope
xlat
aam
stc
out
int3
notb
int
in
cmp
in
divl
out
ds
aad
xor
hlt
lret
mov
mov
mov
iret
out
shll
mov
into
out
ljmp
iret
stc
cmc
xchg
mov
nop
out
jecxz
ret
div
in
cli
icebp
clc
imul
shr
cmp
repz
fistpll
iret
nop
lret
in
rolb
in
std
in
xor
xlat
sar
repnz
icebp
repz
rol
int3
test
shl
xchg
xor
in
enter
cld
loopne
xor
ss
add
sbb
icebp
in
std
ljmp
xor
icebp
fdivr
fidivrs
rol
repnz
rol
jmp
test
int3
mov
cmc
shl
rcl
cmp
hlt
rol
repz
lds
fnstcw
xchg
clc
in
mov
mov
mov
das
int3
fsubr
repz
cmp
hlt
mov
out
decb
into
out
mov
aam
cmp
iret
cmp
lock
lock
neg
out
fimull
out
shl
stc
into
out
ljmp
jmp
fdiv
clc
fld
xchg
shl
loope
fmul
ljmp
aaa
ds
int3
aam
loopne
cld
jmp
in
out
mov
xchg
mov
stc
shl
int3
fcmovu
cld
lret
imul
aad
movl
xchg
and
aas
xor
jmp
add
fdiv
out
fcmovbe
std
jmp
std
int
in
lock
in
icebp
repnz
xor
cmp
fldl
aam
testb
orl
sbb
iret
cmc
icebp
xlat
ror
cmp
ret
fucom
out
and
std
into
sar
icebp
lock
divl
cmp
fucomp
std
adc
loope
ret
vpminub
nop
in
fsubrp
icebp
mov
fadd
jmp
cld
call
cmp
and
loop
fsub
loop
enter
mov
rcl
in
fldl2e
cmp
cmp
fstp
idivl
aam
loop
orb
adcl
out
std
leave
fcmovnbe
fcomip
xor
xor
leave
lret
out
xchg
into
ret
out
icebp
cli
repnz
repz
out
add
int3
mov
mov
out
loope
lret
fnstcw
out
fmul
loopne
iret
in
test
ror
mov
leave
repz
sti
in
cmp
cmc
fdiv
out
clc
cld
cmp
orl
clc
xor
jmp
cs
ds
std
xlat
test
cmp
ljmp
mov
jmp
call
xor
shll
sar
loopne
test
fprem1
clc
loopne
fsub
testb
xchg
cmc
out
clc
in
xlat
fidivrl
jmp
int3
cmp
sti
enter
mov
xchg
cmc
fsubrp
xor
aad
ljmp
shl
ror
ds
mov
shl
icebp
fbstp
shl
fsub
enter
cmp
fidivrs
testb
ljmp
call
sub
imul
call
aas
in
sarl
roll
rorl
xchg
aas
xor
in
int3
shlb
repnz
aam
cmc
lock
fninit
in
enter
shl
pause
rcll
jmp
cli
incl
cmc
out
xchg
xchg
test
int
jecxz
out
xor
xor
pop
add
pop
leave
ret
push
mov
jmp
into
lret
rcr
xor
mov
aas
adc
jle
add
xor
repnz
in
fabs
aad
aaa
cmc
loop
loopne
div
stc
out
out
ljmp
cmp
xor
shl
cmp
ret
ds
stc
fsub
stc
fdivr
xlat
rolb
into
out
in
sar
out
aad
sarl
ds
lock
lret
filds
lret
out
xor
rcr
xor
repnz
leave
rcr
fcomip
clc
idivl
xchg
test
fadds
lret
jmp
jmp
shr
cmp
shl
loopne
xor
jecxz
cld
rcl
or
in
std
nop
enter
shl
in
in
icebp
cmp
shl
adc
sar
rcr
aam
test
xor
out
nop
aad
loopne
shl
int
ds
out
iret
fucom
aad
out
shl
stc
cmc
shr
stc
jmp
orb
ljmp
loope
test
loop
out
ret
neg
fcomp
xchg
int3
repnz
cmc
fucomip
ss
fldl2e
lock
xlat
ret
std
xor
fdivrp
ljmp
test
in
rolb
aam
in
cmp
cmp
testb
and
std
cld
mov
mov
hlt
loope
loope
imulb
cmp
shl
not
out
push
leave
incb
out
jecxz
lock
ror
xor
enter
fdivr
loop
adc
fdivr
mov
movl
out
loopne
stc
xor
xor
in
rolb
fcomp
hlt
jmp
xchg
dec
mov
cmp
ror
aam
lret
ljmp
fiaddl
out
call
xchg
out
icebp
loop
fcmove
into
cmp
jmp
cmp
ret
lret
fstp
xchg
in
leave
lret
lret
mov
enter
std
out
cld
cmp
aaa
cmp
and
jecxz
in
jmp
rcr
lret
int
stc
jmp
fdivr
cmp
ds
call
in
test
iret
sar
dec
lret
xchg
xor
call
out
jmp
cmp
shl
aas
neg
in
ret
fisttpl
repnz
icebp
lret
cmc
fcmovbe
repz
ds
cmp
fld
loopne
xchg
fscale
mov
lret
das
out
stc
shl
cmp
jmp
cmp
sti
fiaddl
loopne
mov
mov
fmulp
call
aaa
in
fmulp
hlt
icebp
into
std
cmc
out
fucomi
aas
cli
xbegin
mov
cmc
hlt
aad
in
out
int
xlat
std
iret
fldl
xchg
jecxz
mov
jmp
out
cmc
jecxz
aad
into
aaa
int3
in
divl
sarl
cmp
leave
in
out
xchg
jecxz
sbb
xchg
ss
aaa
shlb
fnstcw
int3
clc
fnclex
ret
sarl
shl
jecxz
mov
leave
dec
adcb
enter
in
lret
cld
cmc
neg
test
ficoms
out
cmp
out
in
clc
xor
test
repnz
cmc
lret
in
mov
loop
repz
std
in
cmc
lret
int3
addb
enter
fimull
mov
cmc
int
divl
repz
fnop
in
mul
repnz
fincstp
std
out
lds
jecxz
test
xchg
xchg
and
in
cmp
int3
aas
lret
ror
out
fdivr
xor
test
fdivrp
in
cmp
std
out
fnsave
cmp
cmp
sbb
rol
testb
lret
test
cmp
in
int3
cmp
mov
xchg
mov
ffree
loope
xchg
mov
shl
loop
shl
icebp
call
xlat
in
cmc
hlt
addb
fucomi
iret
leave
mov
mov
repnz
clc
out
cmp
leave
call
sar
sub
addl
mov
in
loop
cmc
cmp
aam
shl
fildl
test
int
orl
call
cld
cmp
fdivp
mov
in
ror
shl
int3
xor
sti
ror
int
aam
int3
fyl2x
faddp
xchg
lret
sub
mov
mov
int
sti
cmp
cmp
int
loopne
shl
fiadds
sti
mov
repnz
call
int
roll
js
add
inc
or
inc
lock
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
sub
mov
sub
movl
adcl
jmp
mov
fcmovne
jnp
xchg
jb
cmp
push
sub
add
in
loop
cmc
cli
loopne
ljmp
fisubrs
rcr
out
rcl
cld
xor
fld
aam
mov
jmp
test
mov
xor
fucompp
xlat
lock
repnz
repz
cmp
test
test
fcmovnu
mov
ljmp
neg
lret
cmc
flds
fcmove
into
push
leave
int
jmp
aas
aam
xor
aam
repz
lock
xlat
loopne
stc
stc
addb
enter
hlt
cli
sarl
xor
repnz
fdivrs
sti
loopne
out
hlt
in
addb
in
out
mul
in
lret
stc
ljmp
out
roll
int
int
out
repz
out
ret
aaa
leave
fcmovne
rcl
iret
rcr
int
cld
fistpll
orb
jmp
in
rol
ffree
cmp
fcmovnu
aas
shl
fst
ds
mov
xchg
aad
out
loopne
out
out
out
out
cmp
sarb
xchg
clc
aad
sti
leave
fstl
ror
in
xor
jmp
loopne
aad
lock
shl
clc
ds
lock
rcl
int3
cmp
sti
jmp
xlat
repnz
shl
lret
fiaddl
repz
xor
std
jmp
cmp
cmp
sbb
sar
fdivr
cmp
out
xchg
fucomp
int
icebp
imul
neg
ss
sbb
test
cmp
mov
fsub
test
iret
loope
ret
in
sti
fcomip
icebp
adc
cmc
ret
in
in
loopne
xlat
hlt
shl
in
clc
icebp
jmp
int
adc
out
mul
stc
jmp
loop
jmp
xor
stc
xor
repnz
ror
cmp
fstp
and
cld
dec
lret
loopne
repnz
xor
ret
cmc
sub
repnz
iret
jecxz
int
in
fcmovu
fmulp
fldl2t
adcb
lret
in
neg
std
aam
repnz
hlt
rolb
stc
leave
shr
lret
sti
nop
xchg
div
jmp
jmp
std
fmul
hlt
hlt
int
ds
test
test
sti
mov
in
into
jmp
xchg
aad
xor
xor
cmp
jmp
icebp
repnz
out
ljmp
loope
hlt
cmc
repnz
rol
lock
cmp
in
ds
leave
sbb
xlat
fucom
rol
ret
int
loop
in
cmp
ljmp
repz
int
sar
repnz
test
fucomip
ljmp
cmc
mov
repnz
out
ss
repnz
shl
ror
fldl
repnz
int3
adcl
ljmp
hlt
orl
icebp
loopne
loope
out
cs
vpsrlq
cmp
jmp
out
ret
rol
adc
repz
and
fnstenv
vpmaddwd
cmp
clc
into
shr
cld
ret
div
repnz
ret
clc
call
lock
fbstp
lret
sti
leave
std
loop
xor
shl
jmp
in
fmull
out
fstpt
enter
out
ds
loopne
test
fdiv
aam
lret
sub
in
out
loope
jmp
jmp
rcl
les
mov
fisttpll
mov
mov
in
lock
xor
int3
xor
int
xlat
cli
lock
fcmovnbe
sti
test
neg
fadds
cmc
std
iret
aam
in
fsubr
aaa
lock
in
int
rcl
out
xchg
call
enter
int
shrb
in
mul
sar
cli
in
fnstsw
fmulp
stc
aaa
cmc
stc
lret
test
xchg
nop
xchg
or
jecxz
fscale
int3
repz
stc
loop
div
fcomip
rorl
div
xor
cmp
repnz
fchs
fcmovu
out
rol
mov
test
in
call
cmp
ret
loope
aas
fiadds
xchg
sub
vpaddusw
lock
loop,pt
sti
sub
enter
jmp
loopne
iret
test
subl
icebp
lock
ss
test
call
leave
into
inc
inc
loopne
test
or
adc
mov
mov
jmp
lret
ror
rcr
lret
fistl
scas
xor
stos
add
xchg
jecxz
xchg
aad
cli
sarb
out
aam
cmp
loop
repnz
clc
fsubp
test
or
ljmp
ret
repz
out
call
sar
in
aas
call
mov
vpaddw
out
mov
repz
stc
jecxz
cld
std
cmp
loope
int
cli
rcl
mov
call
roll
aad
int3
lock
rcl
aam
icebp
hlt
rcl
xlat
loop
fadds
in
aam
iret
iret
out
xlat
div
fdiv
stc
test
hlt
fcmovnb
aam
in
test
mov
int3
test
xchg
out
out
sub
lret
ljmp
rcr
lock
cmc
fcomip
rorb
mov
mov
enter
aam
cld
cmp
repz
fcomi
cld
rcr
jecxz
in
mov
ror
iret
iret
nop
mov
cmp
fnsave
cmp
ds
addb
sbb
loope
in
aad
lock
rcl
out
and
repnz
aad
and
out
xchg
test
loop
xlat
sti
xor
neg
cli
call
xlat
fnsetpm(287
repz
aam
fucomp
mov
loopne
out
xor
lret
shl
cld
jecxz
cmp
in
movl
xchg
loopne
xor
repnz
loopne
roll
hlt
mov
enter
in
ljmp
idivl
lret
cmp
jecxz
clc
cld
mov
xchg
loopne
out
aam
loop
aam
cmc
ror
shr
std
ds
addl
xor
nop
xchg
jecxz
ret
hlt
std
shr
in
testb
fiaddl
int3
in
in
rorl
aad
hlt
cli
repnz
aam
cmc
aad
stc
fucomip
addb
mov
mov
rol
cmc
repz
std
rcr
ljmp
loop
fadd
stc
cld
leave
in
mov
in
jecxz
divb
xor
neg
cs
ljmp
stc
call
jmp
enter
nop
jecxz
sar
cmp
sti
out
sarb
cmpb
in
clc
test
lret
fcmovbe
xchg
xchg
das
iret
in
xor
xor
sti
int3
jmp
loope
shl
in
lret
in
mov
xlat
lock
fcmovb
cmc
sar
int
fildl
xlat
jecxz
in
std
xchg
mov
hlt
aad
hlt
in
out
test
aad
clc
cmc
clc
cmp
ret
out
xchg
call
fnstsw
into
ror
cld
sti
neg
fcmovb
fsubr
fdivr
enter
fadd
adcl
cmp
stc
stc
cmp
rcr
shl
mul
mov
mov
cs
lret
shr
ss
icebp
in
in
fucompp
fcomip
xchg
lret
jecxz
iret
ljmp
stc
fcom
sub
out
clc
rcl
repnz
clc
fxch
mov
in
hlt
xchg
hlt
das
loope
leave
aad
xlat
hlt
int
cmp
int3
aad
cli
fcmovu
out
mov
mov
out
in
mov
imul
int
iret
enter
cmp
loope
fidivrl
std
leave
cli
idiv
in
jmp
jmp
ljmp
cmp
out
xlat
fcom
call
in
iret
adc
repz
ret
sti
sti
repz
cmp
out
in
test
int3
jmp
addl
out
int
stc
hlt
out
jmp
xor
or
xchg
int3
cmc
call
sti
in
nop
int
ret
lock
out
cmp
rcl
jmp
test
sti
std
cmc
in
into
lret
sar
enter
xor
pushl
sar
ret
dec
xchg
rol
jecxz
mov
incl
rorb
rcr
rcr
cmp
rcl
int
cmp
std
hlt
repz
mov
mov
in
fcmovbe
fcmovne
lret
stc
lret
fcmovnbe
rorb
loop
shl
lret
aad
shlb
jecxz
out
out
sti
repz
rcl
sar
test
xchg
leave
sti
in
orb
in
xlat
fcmovb
xor
les
icebp
out
loope
lret
fiaddl
hlt
sub
rol
sarb
lds
add
enter
int
fnstenv
ljmp
stos
add
shl
aam
stc
out
cld
xor
ret
lret
jecxz
fisttps
enter
div
cmp
hlt
iret
ss
out
in
leave
mov
shr
mov
xlat
fcmovnbe
repz
cmp
into
mul
aam
shr
fiaddl
call
xlat
in
xor
xor
fdiv
loopne
cmp
ret
aad
fcomi
in
xchg
xchg
mov
out
cmp
std
addb
std
fcmovb
leave
cld
orl
rcl
jmp
ds
std
fucomp
ret
in
hlt
test
mov
icebp
xchg
mov
xor
out
ror
cmp
sti
out
in
cli
test
fstp
std
lret
xchg
lock
clc
cmp
xor
fdivrp
lock
and
in
decb
xchg
out
in
in
ljmp
call
fstp
neg
call
lret
mov
faddp
mov
decl
xor
int
aam
clc
cmp
fiaddl
testl
cmc
jmp
lret
out
leave
ss
lock
call
sbb
lds
aam
mov
not
addb
in
int
clc
cmp
xor
out
repz
and
jmp
sti
loope
cmc
aam
int3
iret
stc
iret
clc
in
in
out
loopne
cmp
out
std
mul
leave
xor
xchg
test
repnz
jecxz
fdivr
fcmovbe
jmp
xchg
mov
lret
loop
test
out
in
fcmove
repnz
aad
sar
sar
out
into
testb
addl
out
stc
in
fcos
stc
aas
fcmovnb
cmp
icebp
ffreep
std
orl
in
lock
in
in
aam
in
sub
icebp
xchg
in
xchg
add
adcl
icebp
std
ss
shr
std
faddp
xchg
enter
jecxz
xor
fcmovb
cmp
std
aaa
lret
int
cmp
xchg
mov
nop
xchg
in
jmp
xor
iret
shl
hlt
out
rcl
xlat
ds
xchg
fcom
test
ljmp
jecxz
cli
cli
iret
out
not
cld
cmp
ret
enter
popl
xchg
das
repnz
int3
cmp
into
call
iret
aad
ret
loop
repz
loope
jmp
mov
int3
shlb
lret
cmp
cli
shr
repz
icebp
out
in
loopne
mov
mov
rorl
in
int3
fmulp
aad
cld
sti
cmp
xor
testl
xchg
incl
xor
das
cmp
out
neg
cmc
test
mov
sub
lock
xor
lret
and
iret
cmp
testb
inc
out
clc
iret
fucomp
fists
cmc
cmp
aad
cmp
adc
shl
in
aad
mov
or
icebp
addb
in
lret
leave
cmp
fidivrl
test
mov
in
xchg
jmp
ret
jecxz
shlb
fcmovu
ljmp
shl
shl
clc
stc
fsubr
call
test
cmc
mov
sub
in
fsubr
fcmovu
cli
sub
ret
loopne
shr
int
loopne
test
xor
cmp
xor
icebp
jmp
cmc
cmp
out
faddl
jmp
cli
in
fninit
loope
lock
stc
ret
ljmp
clc
clc
filds
fsubp
cmc
out
enter
out
xchg
in
xlat
enter
sti
jecxz
roll
aam
mov
sti
int3
fsubrp
shl
hlt
int3
sub
aaa
fdivs
fsubr
cmp
xchg
call
leave
addb
mov
in
icebp
icebp
aam
idivl
call
ss
sarb
in
sti
fimull
out
cmp
in
hlt
repz
ss
test
sarb
loopne
sar
aas
fmull
into
out
int3
xchg
mov
aam
call
in
cmp
std
repnz
mov
faddp
cmc
clc
stc
clc
shl
rorb
stc
mul
repz
lret
fcmovbe
aam
fstp
icebp
loop
fnstsw
sbb
jmp
ret
fmul
fcom
fdiv
jne
mov
jmp
jle
in
mov
shl
cmp
xor
aad
hlt
clc
sti
sti
loop
aaa
hlt
cmp
movl
cld
cmc
fxtract
std
jmp
sbb
fcmovu
call
xchg
shl
aad
cs
sub
iret
lret
rcl
ret
xchg
test
out
fcmovnb
test
mov
mov
divl
in
fcmovu
ljmp
fdivp
repz
and
xlat
cmc
clc
into
iret
out
icebp
les
out
hlt
out
enter
neg
int3
repnz
mov
fildl
mov
test
cmp
aas
xlat
out
rcr
loopne
adc
rcr
aad
in
cli
sar
hlt
shl
shl
xor
call
cmp
jecxz
out
cmc
out
testb
jmp
addl
jecxz
clc
cmp
int3
cmp
idiv
icebp
addb
filds
xchg
hlt
mov
lret
icebp
out
xor
aaa
iret
jecxz
in
call
jmp
lock
nop
call
xor
clc
sti
std
jmp
cmp
xchg
lret
in
loope
int3
in
loop
xor
out
enter
stc
aaa
loope
imul
or
loopne
enter
fimull
cld
std
int3
enter
fldln2
int3
cmp
repnz
xor
out
cmpl
call
fsubr
out
lret
leave
out
rorb
les
out
ds
iret
repnz
cmp
xlat
cld
int
out
fimuls
idivl
int
cli
leave
ror
neg
shr
call
filds
int3
fcom
fcmovnbe
int
call
out
into
shr
fnsetpm(287
call
fmulp
in
jmp
loope
in
std
lret
loope
repnz
clc
icebp
aad
fcom
mov
out
mov
xor
out
out
cli
jmp
lret
in
rcr
ret
jmp
xlat
fcmovu
enter
call
cli
lret
call
int
fndisi(8087
cld
jecxz
jecxz
mov
lret
jecxz
xchg
out
xchg
fdivs
out
sti
lret
int
ror
clc
jecxz
neg
cli
fildl
shl
rorl
repnz
cmp
cmp
lock
stc
cli
fdiv
fsub
clc
mov
loope
ret
loope
fnstcw
jmp
ror
leave
aaa
addb
fdivr
in
testb
mov
fsubrp
in
int3
call
in
fcmovnu
cmp
rcl
aas
cmp
hlt
mul
sti
loopne
addl
iret
cmp
in
out
rcr
out
cmp
rcr
cmp
fucom
repnz
hlt
nop
out
lret
shl
icebp
out
int3
cmp
rolb
cmp
stc
loop
fmul
fcmovu
shl
test
xor
clc
fdivr
bnd
xlat
sti
ret
adc
aam
mov
int
adc
iret
shr
lret
in
cmp
call
in
int
std
sbb
mov
ljmp
ret
shlb
lret
repnz
loopne
jecxz
iret
xlat
cld
cld
fucomi
in
mov
stc
repz
out
stc
leave
aaa
ljmp
sarl
fsubrp
in
stc
and
jmp
out
aas
jmp
in
ljmp
cli
icebp
clc
loope
aam
jmp
inc
fsubrp
xchg
jmp
test
stc
ljmp
iret
cmp
enter
addb
int3
hlt
out
cli
in
cmc
clc
fcmovnu
sti
test
in
fsubr
lea
xchg
repz
int3
out
fpatan
iret
fcmovnu
ljmp
aad
clc
fimuls
mov
icebp
in
ljmp
mul
int3
icebp
xlat
idivb
and
cld
jmp
enter
enter
loope
int
int3
aad
std
cmp
rolb
loope
fcompp
enter
fisttps
ret
shl
rcr
rcl
fstpt
rcl
mul
fnstsw
ret
fsub
mov
iret
in
in
icebp
xor
bnd
aas
adc
flds
test
lret
mov
call
jmp
in
lret
leave
aam
cmp
cmp
fsubr
shl
aam
hlt
mov
clc
ljmp
std
fucomp
ss
out
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sub
jmp
aas
rcl
aad
fstp
loop
pop
mov
popa
in
add
add
sar
icebp
std
shll
fdivrs
stc
cmp
out
jmp
test
bnd
cmp
ret
sar
ss
ljmp
std
in
jmp
rcl
out
mov
out
ret
int
cli
aam
or
mul
cmc
call
cld
into
xchg
in
out
lock
aam
in
repz
into
lock
iret
stc
rcr
and
jmp
mov
in
xchg
imulb
ljmp
fdiv
lock
fdivr
vpmaddwd
hlt
in
out
fcmovne
repnz
xchg
mov
in
icebp
cmc
ss
fmul
sti
loope
iret
xor
cmp
lds
icebp
call
in
out
call
ljmp
in
xchg
loope
in
std
std
lock
loope
in
icebp
aam
in
cmp
std
loopne
in
cmp
cmc
repz
mov
cli
in
xchg
std
mov
jmp
loope
leave
shll
clc
in
in
call
out
rol
in
lret
jecxz
fisttpll
shl
lock
cmp
cmp
loope
icebp
aas
loope
faddl
clc
in
nop
leave
lds
xor
cmp
stc
out
shll
std
cmp
push
out
out
lea
xchg
ljmp
ss
enter
idivb
xlat
fxch
jmp
xchg
cli
out
push
lret
stc
enter
fcmovne
rcr
loopne
test
clc
fsub
lds
shl
jecxz
ror
in
loope
cld
lret
sar
fdivr
cmp
rcl
in
lret
in
loopne
loop
jmp
xchg
aad
not
leave
xor
faddp
std
rcl
out
ret
xlat
out
in
cmp
nop
out
test
out
int
repnz
int
fucomi
out
ret
idiv
aam
enter
into
loope
mov
lret
int
xor
cmp
in
repz
fdivrl
div
not
loope
stc
fsub
jecxz
leave
in
call
enter
lock
sarb
sbb
fdivrp
int
stc
fisttpl
ret
xor
jmp
out
stc
aas
hlt
cmp
fcmovbe
out
repz
les
out
xor
xor
fdiv
loope
shl
loope
sti
int3
leave
sti
int3
loop
out
xchg
fcomp
aas
rolb
aad
jmp
fadds
xchg
aam
xor
int3
hlt
fcom
repnz
fcmovu
aad
sar
loope
loop
out
out
shl
xchg
shr
xlat
lret
int
cmp
fdivp
ds
sti
aas
cmc
loope
aad
out
stc
jmp
loopne
fxch
rol
jmp
xor
in
in
repz
testb
int
lret
stc
out
hlt
loope
in
xor
fidivl
out
cmp
int
cmp
loop
test
out
mov
nop
loopne
xchg
shr
clc
ret
not
cli
clc
icebp
xor
loope
clc
cld
aad
loop
loop
cli
loope
fildl
xor
in
ret
rol
shr
sbb
rolb
mov
lret
xchg
in
jecxz
out
jmp
hlt
loopne
fcomip
cmp
in
std
rcr
xlat
xchg
testb
rorl
xor
cld
aam
repz
in
jecxz
rolb
mov
fcmovnbe
xchg
in
aaa
out
lret
ror
sti
repz
iret
test
ror
lret
int
lock
xchg
fsub
xchg
shlb
cmc
icebp
shr
repz
fstp
out
fdiv
aam
mul
hlt
rol
enter
in
mul
not
sar
stc
xlat
fdivrp
stc
lret
iret
aas
stc
xlat
enter
fadds
lret
xchg
ljmp
cmp
fadd
ret
mov
not
jmp
call
loopne
in
out
xor
out
cmp
cmp
shl
ds
std
dec
lock
rcr
lret
jecxz
sarl
cmp
xor
xlat
int3
aad
cmp
vpsubb
fdivp
cld
in
test
out
mov
shr
loope
shl
out
std
enter
lret
sbb
in
loopne
out
fcmovne
in
into
jmp
repnz
cmc
hlt
cmp
aam
incl
shl
testb
jmp
in
ffreep
in
hlt
enter
cmp
mov
sbbl
jmp
leave
aad
xlat
fcmovnu
ret
pop
lock
pusha
out
leave
mov
stos
add
loope
repz
out
cmc
out
mov
icebp
lea
out
hlt
aad
leave
xlat
fdivrs
repz
repz
lret
std
xlat
dec
in
ret
jmp
int
in
sti
lret
cmc
cmp
cmp
fdiv
fmuls
mov
hlt
out
xor
cmc
in
jmp
jmp
cmp
shr
in
and
stc
nop
jecxz
out
iret
xlat
fsub
std
cmp
cli
dec
hlt
rcr
aas
ret
xchg
leave
cli
int3
out
in
xchg
bnd
in
shr
enter
cmp
xlat
lds
lret
test
enter
out
orl
out
std
iret
repz
int3
out
ret
mov
stc
mov
leave
cli
xchg
lock
xor
iret
fcmovne
aaa
hlt
int3
iret
clc
rcr
cmc
test
cli
mov
and
dec
mov
divl
ljmp
cmc
and
in
loope
into
sti
in
cli
enter
add
div
cmp
fnsave
ss
in
sarb
sar
fdivr
fmulp
mov
fmul
jecxz
mov
not
cmp
cmc
jmp
int
stc
lock
icebp
cld
in
shr
aam
in
xchg
out
int
out
shl
sub
fidivl
out
ds
cmp
rol
cmp
sub
or
xchg
adc
nop
xor
ret
clc
mul
fmul
lock
aam
fnstcw
cli
call
stc
int3
in
cli
rorb
cs
lock
shr
cmp
in
repz
ljmp
sub
sti
int3
std
out
loope
idivl
fxch
fxch
call
sbb
std
or
jmp
nop
rorl
jmp
repz
testb
stc
lret
mov
loope
enter
dec
sti
cmp
idivb
cld
sbb
jecxz
int
lds
rcr
ljmp
fcmovnbe
ret
neg
lret
out
fsubr
fucomip
nop
lret
xchg
divb
shll
shr
lret
aaa
in
shl
stc
mov
fadd
mov
fimuls
in
jmp
xor
add
sbb
test
mov
mov
xchg
aaa
repz
out
in
ljmp
xchg
cli
int
lock
faddl
ss
cmp
in
ljmp
addb
leave
out
into
sbb
into
xchg
xchg
ljmp
sar
ss
in
ds
out
repnz
mov
test
lea
xlat
imul
shr
sti
stc
out
icebp
int
cmp
orl
shr
div
shl
aam
stc
cld
int3
fnstenv
aam
rcr
in
mov
mov
cmp
cmp
std
cmp
fstpt
int3
ror
testb
loop
xchg
filds
out
cmc
sarb
leave
sarl
cmp
fcmovu
in
xchg
and
lock
enter
cmp
cmp
xlat
aad
and
jmp
leave
fisttpll
xor
div
cmp
div
sti
rolb
fsubrp
in
nop
xchg
xchg
call
repz
int
hlt
cli
fdivr
lock
clc
sti
loop
mov
and
test
mov
clc
iret
int3
sti
hlt
jmp
in
aaa
shl
fnstenv
div
into
fidivrl
test
jmp
mov
lock
out
xchg
xor
jecxz
leave
leave
bnd
idiv
cli
aas
cmc
clc
sti
icebp
cli
loopne
filds
xchg
shll
cld
xor
std
cmp
clc
iret
cli
cmp
cmc
fisttps
ror
in
out
xor
repz
shr
ror
fcmove
cli
into
fildl
out
std
std
loope
enter
fdivrl
das
rcl
leave
repz
int
repz
test
xlat
in
fiadds
in
out
shr
leave
cmp
fcomp
std
lret
sti
in
rcr
test
fcmove
in
in
lock
xor
in
cmp
repz
sarb
sar
fadd
clc
xacquire
out
icebp
loope
xor
aad
in
fistpll
lret
lret
fidivrl
in
cmp
cmp
add
xor
add
addl
mov
mov
sub
movl
mov
xor
mov
jmp
ror
ret
int
movsb
inc
push
xchg
and
stos
add
mov
int
repnz
out
fdivrl
in
imul
add
in
in
cmp
jecxz
xchg
out
incl
ret
fucomp
out
sarl
repnz
loopne
leave
sti
lret
out
xchg
in
jmp
rcl
leave
ljmp
addb
mov
loopne
loope
ljmp
icebp
jecxz
cmp
aad
iret
cmc
repnz
ret
rcl
repz
ljmp
xchg
out
xchg
dec
xlat
repz
cmp
cli
ret
rol
aam
mov
in
jmp
std
cmc
loope
icebp
iret
loop
xor
xor
aaa
sarb
not
jmp
nop
jmp
xchg
cs
int
clc
call
fcomip
cmp
sar
mov
aam
mov
xor
out
fdivrs
call
fnsave
icebp
mov
nop
call
in
shl
call
leave
lret
repz
testb
cld
xchg
int3
iret
out
xchg
not
call
leave
aaa
fdiv
fadds
sti
jmp
out
out
sub
in
int3
iret
xor
rcl
sti
shr
loopne
lret
sti
or
ds
cmc
addl
fucom
xor
ror
aam
lock
fnsave
in
aam
repz
mov
test
mov
fsubr
clc
xchg
sti
xchg
in
mov
lret
aad
jmp
hlt
jmp
cmp
adc
fcomp
into
faddl
shl
sub
cmp
cld
cmp
hlt
lret
imul
lock
fstp
lret
call
loopne
cld
xchg
jecxz
repnz
cmp
cld
repnz
clc
out
jecxz
fcos
mov
mov
fabs
in
int3
out
nop
incl
xor
in
out
lret
aaa
cmp
iret
loopne
loope
stc
jmp
loope
into
rorl
enter
cmp
cmp
fidivrs
mov
out
cld
fcmovu
xchg
int
call
jmp
das
call
sti
loope
rcr
aas
icebp
jmp
sti
loopne
xchg
iret
sub
in
lret
fsubrl
int
stc
out
adc
icebp
std
fcmovnu
mov
fcmovnu
out
cli
out
in
std
xchg
out
ror
in
int
cmp
cmp
stc
out
out
fcomi
testl
mov
shll
rcl
xor
jmp
rcl
xchg
sar
mov
fisttpll
xchg
jmp
loope
aad
ror
div
repz
idivb
test
call
hlt
test
xchg
int
ljmp
out
aam
jmp
out
cmp
stc
test
fucomp
out
mov
xchg
aaa
xor
cmp
lock
ljmp
test
enter
int
jmp
f2xm1
cmp
leave
cmp
cmp
out
cld
in
in
cmp
in
loopne
aam
int3
icebp
stc
call
fdivp
jmp
sbb
mov
lret
stc
leave
sub
neg
sub
fstp
into
dec
cmp
fdiv
out
in
aam
loop
xchg
rolb
xor
jmp
std
ds
cmp
cli
adc
ret
cmp
cmp
mov
cld
mov
int3
iret
cs
loope
out
cld
sti
std
cmp
sti
ret
test
test
enter
mov
ljmp
out
iret
enter
sar
fidivrl
fmul
mov
test
fmull
call
jmp
jmp
fdiv
loopne
out
repz
sti
xchg
cmc
cmc
cs
call
lock
ds
rcl
cmc
out
fldl
jmp
loope
call
call
in
cmp
loopne
hlt
jecxz
mul
sar
loopne
jecxz
cld
int
jmp
mov
xor
das
xor
call
in
loopne
cmp
mov
fdiv
out
and
das
loop
ret
call
hlt
ds
sar
loopne,pt
jmp
std
addb
leave
jecxz
aaa
out
cmp
aam
in
jmp
into
in
cld
faddl
into
fsub
test
out
into
in
icebp
stc
aad
cmp
repz
loop
std
fdivrp
std
mov
xor
lret
fcmovnbe
sub
inc
fsubs
test
add
int3
rcl
ret
fldl
int3
addr16
add
fdiv
out
in
xchg
jecxz
repz
in
loopne
into
sti
xchg
orl
stc
repnz
xor
fld1
aas
stc
shr
jecxz
ds
lret
leave
mov
fisttpl
repnz
int3
cmc
clc
xlat
loope
int3
sbb
aas
jmp
cmp
iret
rcl
test
ret
in
int3
cmp
into
loopne
xchg
loop
std
mov
ljmp
jmp
shr
enter
xlat
cmp
fcomip
lock
loop
aas
or
loope
xlat
clc
mov
imul
aaa
repnz
xor
div
shl
sar
hlt
rcl
loope
in
repz
shll
cs
fsubp
out
cmp
fdiv
xchg
cmpl
enter
fmull
test
lock
dec
in
roll
test
aad
mov
orl
ret
aam
aad
cmp
repnz
enter
nop
dec
test
ror
jmp
xor
inc
int
cli
loopne
cld
fcomi
incl
icebp
sti
xchg
sub
jmp
iret
stc
incl
rcr
int
lret
xor
ret
out
out
in
cmp
rol
idiv
icebp
out
call
out
stc
test
mov
loope
xlat
cmp
std
stc
stc
jmp
aad
std
aas
icebp
aad
loopne
into
loopne
xchg
mov
iret
into
fcmovbe
fcmovnb
repz
iret
fdivp
clc
rcl
ret
hlt
dec
fsubp
jecxz
test
repnz
not
sti
cld
fdivs
fstpt
cmp
sti
not
clc
sar
shl
cmp
fiadds
leave
mov
shlb
cli
shl
out
jmp
loope
in
rcr
fsincos
xlat
in
les
lock
clc
hlt
lret
ds
cmp
test
test
out
repnz
cmp
cmp
in
clc
test
in
or
int
loopne
nop
or
jmp
stc
sar
in
fucomip
ss
cld
cli
fdivr
fcmovbe
ret
xchg
stc
out
clc
mov
in
fcom
xor
in
into
hlt
clc
cmp
loop
sti
mov
aad
loop
push
in
loope
lret
stc
fnstcw
into
hlt
or
rcl
xlat
aad
out
xor
jecxz
rol
repz
repz
repnz
cmp
aam
fucomip
out
out
jmp
fcmovb
test
lock
ljmp
enter
aaa
idivb
aad
jmp
fmull
test
fdiv
cmp
fcomp
repnz
std
clc
not
ds
fsubp
mov
clc
loopne
in
sar
repz
ljmp
loope
repnz
lret
call
fiaddl
hlt
in
lock
cli
jmp
cli
loop
in
sti
jecxz
enter
loopne
loope
nop
in
sub
sub
int3
cmp
out
jmp
loop
adc
addb
fxch
out
jecxz
repnz
aam
in
fldz
cmp
shl
iret
cmp
shr
hlt
fld
stc
ljmp
xor
sub
xor
in
sti
lock
fucom
stc
aam
repnz
test
mov
clc
out
out
int
cmp
int3
fsubr
roll
mov
not
sti
xchg
repz
test
jmp
repz
cmp
cmp
loope
test
xchg
lock
lret
and
lret
xchg
aam
clc
repz
hlt
std
hlt
dec
hlt
lock
repz
clc
lret
aas
test
xor
out
call
sar
iret
in
stc
shl
in
cld
int3
enter
loopne
aad
clc
out
shl
div
cmc
aaa
lock
inc
ret
neg
call
into
orb
xchg
shll
sti
std
out
stc
fiaddl
loop
mov
out
lret
clc
cmp
xchg
ljmp
out
enter
cmpl
testl
jmp
in
hlt
loope
out
in
neg
hlt
xor
vcvtdq2pd
in
lock
lea
xor
sti
cli
aas
fsubp
sarb
les
out
icebp
cmp
inc
aam
test
shlb
jmp
fadd
aam
fst
fcoms
sbb
jg
xor
jle
add
fucomip
enter
xchg
call
fdiv
iret
lret
clc
cmc
int
sarl
in
std
call
vpaddd
out
aaa
jmp
in
cmp
xor
enter
fscale
fst
mul
cld
incl
rcr
xor
call
icebp
shl
int
rcl
ret
jmp
jecxz
fisttpll
xchg
clc
hlt
fcmovnb
iret
enter
int
into
fdivr
xchg
hlt
out
mov
test
xchg
fidivs
cmp
out
aaa
xor
cmc
ret
out
jecxz
ror
jmp
fsub
lret
mov
mov
repz
idiv
int
int
cmp
cmp
jmp
jmp
mov
in
stc
cmp
sti
lret
cmc
rcr
add
enter
out
xchg
loopne
xchg
iret
shl
ss
lret
loopne
out
out
xor
sbb
cmp
mov
in
std
in
out
xor
neg
ljmp
ret
stc
roll
in
out
sti
fucomip
jecxz
out
ret
xor
clc
rcr
xlat
out
repz
ret
xor
loope
fmul
into
in
in
loopne
xchg
xchg
aad
cmc
xor
aad
xor
cmp
adc
rcr
fucomp
mov
sar
std
fiaddl
xchg
out
div
xor
fucomi
aaa
ds
clc
aas
jecxz
aas
in
call
loopne
int3
fimuls
xor
call
jmp
cli
cmp
out
loop
ljmp
mov
out
out
in
int3
jmp
into
cmp
cmp
cmp
cmc
ret
jmp
fcmovu
into
fiaddl
in
sub
cmp
sar
std
cmp
loope
std
stc
and
addl
faddp
stc
jecxz
leave
xor
leave
ljmp
addb
out
clc
clc
jmp
leave
mov
repz
jmp
cmp
aam
fsubr
faddl
stc
jecxz
in
in
jecxz
ret
ror
lock
fdivrp
cmc
fdivr
cmp
fcmovnbe
mov
mov
int3
iret
iret
rorb
sti
out
fcmovu
fcmovnu
ds
idivl
lock
fcmovb
sti
loopne
lret
shl
lock
fdivs
call
loope
in
repz
lock
mov
in
test
ret
sti
int3
rcr
aam
aam
xor
iret
repz
fsub
cli
loopne
jecxz
fimull
xchg
mov
repz
xor
fcmovne
cmp
loop
sub
in
loop
iret
xchg
nop
rclb
ret
lock
int3
cmp
fcmovnbe
clc
addl
mov
lock
fimuls
cmc
aaa
jmp
cmp
ss
rol
fucomip
aam
lret
enter
popl
div
xor
fmul
fistpll
lock
icebp
sbb
inc
aam
call
jecxz
int
int
enter
out
repz
fprem
call
int
int3
decb
fadd
ljmp
leave
cld
iret
and
mov
sti
icebp
hlt
mov
iret
sarb
out
int
cmp
fistpll
cmp
iret
in
test
ror
fcomp
xchg
in
incb
cmp
cmp
aam
test
iret
cmp
icebp
shl
jmp
in
icebp
xchg
jmp
rol
repnz
std
out
cmc
div
cmp
out
aad
mov
ljmp
out
jmp
loope
xor
in
enter
fsqrt
aad
int
iret
rol
repnz
leave
fdivp
std
int3
out
mov
in
xor
int
call
divl
test
mov
cmp
out
incb
loope
aam
sar
int3
cmp
int3
or
fdivrp
and
fcmove
testb
lret
int
div
call
out
loope
cmp
loopne
jecxz
fcmovnb
mov
repz
jecxz
iret
cmc
in
fdivr
cli
loopne
filds
adc
imul
in
lret
call
lret
xor
out
xlat
not
rcl
cmp
sti
repz
cld
in
inc
mov
in
jmp
ljmp
repz
mov
stc
in
cld
int
xor
jmp
cmp
movl
sbb
movl
mov
adc
xor
mov
subl
add
jmp
int
int
leave
push
hlt
cltd
loope
jae
pop
ret
jle
add
sti
sti
ss
aad
dec
into
iret
cli
cmc
test
stc
sti
leave
mov
xchg
in
mov
jecxz
hlt
hlt
fsubr
int
cmp
loop
loopne
ds
call
or
rcll
fdivs
rcr
cmc
into
xor
sti
cmpb
icebp
repnz
xchg
call
mov
cmp
xor
stc
out
fsub
xlat
fpatan
loope
aad
mov
fisttps
ror
cmp
into
sti
sti
cmp
fadd
faddl
lret
xchg
in
lret
in
or
cs
into
in
divl
fxch
aas
loopne
in
les
aas
mul
or
mov
jecxz
shr
xor
ror
lret
rcl
lret
not
and
out
ffreep
jecxz
std
mov
icebp
out
hlt
call
cmp
addl
fsub
int3
fsubr
mov
mul
cmp
in
leave
aas
cli
in
incl
loop
and
iret
test
xchg
xor
clc
xor
cmp
repnz
ror
shr
sbb
lret
test
out
clc
cld
fiadds
xor
iret
xor
xor
sar
in
stc
adc
fmul
enter
lret
repz
aam
shl
divb
cmp
repnz
in
add
icebp
cmpl
xchg
cli
rcl
loop
loop
xor
hlt
int
loope
cmc
cli
loopne
fdivrp
fucomp
imul
out
ret
lret
repz
rcl
ror
out
std
repz
out
add
xchg
jecxz,pt
out
fxam
loopne
iret
nop
ss
in
sti
hlt
fstpt
leave
shr
imul
cmp
loopne
orb
call
xor
int3
lret
leave
fnstenv
shl
cmp
mov
and
fstl
shr
loopne
shl
cmc
lock
in
roll
mov
repz
lock
int
fnstsw
int
cmp
in
fsubp
jecxz
sbb
or
addl
int
cmp
iret
cmp
sar
icebp
mov
stc
sbb
in
lock
cld
fdivp
fdiv
icebp
fcmovnbe
repz
in
fcmovnbe
in
test
test
out
mov
cmp
out
loope
sar
lret
cld
hlt
out
int3
in
jmp
stc
ret
repz
mov
in
mov
lock
fnstsw
repnz
ss
in
ret
test
jmp
mov
in
call
repnz
repz
ds
jmp
test
out
call
cli
ficoml
enter
repnz
xor
aas
sbb
clc
imul
hlt
xlat
addl
icebp
out
ret
bnd
stc
stc
shl
cmp
addb
int
fdiv
lret
icebp
cmp
iret
xor
vpsrld
shl
cmp
ret
repnz
mov
int
out
enter
in
xor
lock
aad
loope
xchg
sti
leave
int3
into
roll
repz
clc
cld
aas
cmp
cmp
sarb
xlat
cmc
in
jecxz
cmp
decb
cli
in
xor
into
cmp
lock
roll
addl
sti
out
mov
iret
xor
int
jmp
lock
cmp
iret
shl
shr
into
lock
aad
out
hlt
xor
into
std
and
rol
test
xchg
in
mov
shl
in
das
cmp
test
test
orb
xchg
mov
shrl
out
hlt
ror
ljmp
std
shl
shl
fldpi
cli
fcmovu
stc
out
sbb
mov
sub
into
cmp
cld
idivb
cmp
ret
aas
xchg
rorb
out
cld
in
mov
mov
hlt
int
shr
cmp
adc
in
not
rol
xchg
leave
ret
cld
hlt
loopne
sub
cmp
leave
dec
in
repz
aad
test
repnz
fmull
lret
nop
in
popl
aaa
lret
out
aam
aam
cmp
out
roll
faddl
rorl
enter
stc
cli
ss
in
or
ret
in
cmp
movl
je
movl
push
movl
jmp
jmp
int
ret
rol
fcmovnu
jecxz,pn
adcl
jle
rol
add
in
out
repz
loope
jmp
fdiv
loopne
mul
test
out
loop
in
adc
mov
ret
cmp
cli
repnz
cmp
shl
std
roll
call
out
test
aas
fadd
lock
fxch
in
shl
out
out
cmp
inc
aad
ret
fprem
cld
mov
mov
into
out
sar
das
xor
enter
icebp
rcr
clc
ret
sar
mov
stc
ret
mov
mov
mov
sub
loop
aam
in
cld
out
stc
repnz
stc
cmp
loop
lret
xchg
orb
in
ljmp
cmc
fnstenv
not
jecxz
shl
testb
test
xor
enter
stc
cld
out
in
xor
hlt
mov
in
out
xchg
jmp
clc
shr
cmp
cmp
cmp
int
out
fucom
fisttpl
out
lea
int
call
sti
iret
jecxz
xchg
xrelease
icebp
xchg
xchg
xchg
test
sarl
in
in
in
jmp
lock
fadd
cmc
loope
fmul
mov
jmp
shl
les
cmp
clc
fmulp
cmp
cli
stc
rol
fimuls
or
in
mov
fmulp
mov
fabs
aaa
fdivr
cli
fcmovne
cmp
loop
repnz
fadd
fdivr
out
loop
mov
mov
enter
not
call
in
lock
cmp
aas
cli
out
fcomp
xchg
lea
out
cs
shr
cmp
sbb
sarb
fst
mov
and
loopne
in
fucomi
xchg
imul
out
lret
sar
int
cmc
hlt
icebp
in
out
lock
shl
leave
orl
out
xchg
test
not
xor
xor
ds
stc
hlt
fdivr
jmp
out
loopne
jmp
fcom
ret
xlat
out
xor
int
fistpll
or
mov
aam
jmp
sti
lret
ds
cmp
ret
not
addb
ftst
fcmovu
mov
lret
lret
rcl
ffree
fistpll
ret
fucomp
call
xchg
ljmp
int
cmp
sar
enter
les
in
lret
in
out
xor
fidivrl
leave
ss
cmp
ret
test
aam
rolb
cli
lret
icebp
hlt
in
aad
loope
cmp
aad
aam
int3
rol
icebp
ds
rcr
out
mov
int
call
aam
loope
shr
lret
in
int
loopne
cmpl
in
stc
xchg
mov
jmp
loop
fmul
sti
lock
idivl
loope
test
mov
out
out
lret
stc
int3
mov
xor
call
repz
test
cmp
int3
sti
in
mov
mov
aaa
call
xor
cld
out
fcomi
cmp
in
addb
loopne
out
xor
std
icebp
out
idiv
aaa
cmp
clc
neg
fadds
test
xchg
in
cld
loope
enter
aas
sar
into
ret
fcmovb
add
out
cli
xchg
jmp
in
ret
jmp
in
int
cmp
repnz
sti
into
jecxz
faddl
sub
mov
test
int
cmp
fsubr
sar
repz
rcr
fldl2t
lds
mov
imul
rcl
sub
in
clc
xor
fildl
mov
fsub
out
out
in
in
out
in
sti
out
cmp
ret
test
ret
decl
in
mov
fpatan
lock
xor
icebp
out
fdivrp
xlat
xchg
test
rcl
mov
ss
shl
les
cmp
into
fsub
hlt
loope
hlt
cmp
test
hlt
test
and
int3
lret
leave
leave
loop
dec
aaa
shl
out
fnsave
adc
stc
std
clc
sbb
test
int
leave
orb
clc
cmp
fnstsw
cmp
sarb
icebp
loopne
and
mov
out
out
in
into
repnz
das
aaa
xor
in
aad
stc
fcmovnu
ret
mov
loope
loop
rcr
lret
rol
mov
addl
mov
subl
sub
jmp
int
ret
aam
fstp
fstl
fmull
inc
jl
pushf
mov
jle
add
xchg
out
loop
aaa
lret
in
repz
ffree
fdiv
in
aad
in
addl
leave
fists
out
aaa
fmul
int
aaa
repz
in
loope
aas
loope
icebp
xchg
flds
out
hlt
lea
jmp
in
lock
roll
cmp
addb
loope
rcl
repnz
not
iret
sar
aad
cmp
not
or
fmul
fadds
int
int
cli
stc
lret
icebp
sar
test
jecxz
leave
xchg
xchg
int
orl
fdiv
jmp
iret
ret
repnz
fcmovnbe
xlat
jmp
shl
out
xchg
leave
fdivrs
xor
shlb
cmp
int
aam
in
lock
stc
jecxz
loopne
sti
out
adcl
enter
cmc
imul
idiv
loope
out
roll
mov
fcomi
nop
adc
shl
xor
jmp
cmc
cmp
mov
sbb
leave
fcmovne
and
fsubrs
xor
call
aaa
clc
fcmovnb
imul
fucomp
sti
repz
enter
and
adc
out
icebp
cmp
cli
lret
cmc
call
cmp
loope
sub
out
test
rolb
ret
call
cmc
cld
jecxz
fiaddl
cli
mov
fxam
lea
shr
xor
leave
in
cmp
in
cmp
sbb
std
ljmp
xchg
xor
in
repz
cmp
shl
repnz
sar
xlat
cmp
fsubr
fcmovu
ret
call
xchg
xchg
mov
xor
aaa
stc
call
sbb
rcr
repnz
out
jmp
repz
addl
fcmovbe
xor
fucom
out
std
rcl
loope
mov
in
jmp
into
into
sti
incb
icebp
xor
mov
ret
std
sti
call
out
out
ss
shll
lock
xlat
cmp
repnz
cld
out
cmp
test
nop
out
fcomip
lret
xor
aaa
test
sar
fmul
hlt
iret
rol
shl
cmp
jmp
mov
ljmp
aad
into
lock
jmp
cld
fsubrp
call
in
aas
lret
xor
sti
cmp
sti
cmp
sbb
add
sti
out
jecxz
fisttpl
ror
enter
ror
hlt
fnstsw
sti
loopne
adc
in
mov
jmp
mov
cmc
out
xor
std
cmp
sarl
jecxz
jecxz
lock
aad
in
std
les
xchg
iret
aam
out
xlat
icebp
xor
jmp
xor
test
fsubr
jecxz
test
call
in
sub
test
repnz
cli
clc
test
or
in
jecxz
ror
int
shlb
out
cli
iret
cmp
aam
shl
sti
clc
mov
test
out
roll
not
into
repnz
cmp
int3
aam
test
les
int
lret
loop
cs
aad
iret
divb
lock
xlat
fnclex
cmc
cmc
stc
aam
fldl
mov
jmp
xchg
sub
in
xlat
aaa
call
ds
fidivrs
sti
xlat
test
loop
cli
sti
fucomi
clc
in
addb
cmp
int3
iret
into
aaa
xor
lock
loop
cmc
shr
hlt
hlt
sbb
out
iret
shr
aaa
xor
xor
shr
int3
div
loope
roll
hlt
div
call
int3
into
shll
hlt
in
int
int
cld
idivb
lock
out
test
in
in
les
mov
mov
repz
xor
jmp
out
in
jmp
std
clc
cmp
rcl
call
in
adcl
ljmp
aad
adc
call
out
in
sbb
ss
aam
stc
int3
jmp
fcmovbe
in
fdivrl
cmc
std
mov
lret
std
shl
cld
rol
out
xor
xor
aad
fmul
shl
cli
rcr
test
in
in
orl
xchg
enter
repnz
aam
cli
fcomi
fdivs
jecxz
orb
xchg
jecxz
fdivp
iret
icebp
cmp
repnz
shl
out
mov
xor
adcl
add
movl
cmp
movl
jb
xor
mov
mov
xorl
xor
or
xor
add
jmp
rcl
rcl
dec
mov
testb
add
add
xlat
sarb
rol
out
out
filds
mov
xchg
sub
int3
shr
call
or
les
std
in
out
test
icebp
xor
shlb
cmp
xlat
call
xlat
incb
ret
fsubr
out
out
in
xchg
out
ret
into
lret
cld
sar
out
idiv
in
cmc
fdivr
neg
std
vmaskmovdqu
neg
repnz
test
xchg
ljmp
clc
call
iret
iret
out
cmc
ret
loopne
mov
loope
mov
loopne
in
lret
out
fsubp
dec
fsubp
shl
xchg
ds
jmp
mov
jmp
mov
ss
iret
sarl
fdiv
xor
repnz
add
mov
mov
out
xchg
xchg
idiv
divl
std
iret
dec
loop
sub
clc
shl
cli
fdivr
faddl
in
lea
vucomisd
iret
into
loopne
cld
int3
sbb
out
cld
mov
jmp
int3
jmp
aad
fdivl
jecxz
fadd
shl
mov
lock
test
lret
loope
out
out
jmp
cmp
shl
fst
cli
loope
ret
out
fucomip
mov
std
mov
stc
cmp
std
loopne
adc
test
in
mov
int3
std
out
sti
dec
jmp
ljmp
repz
sbb
hlt
fsub
fldl2t
test
stc
mov
int
aam
shrl
sub
std
cmp
cmc
fsubr
sarl
sti
aaa
fnsetpm(287
repz
sub
loopne
loope
aas
fsubr
ret
jmp
rcl
clc
xlat
sti
xor
push
test
jecxz
leave
stc
ljmp
rcl
jmp
idiv
into
jmp
idiv
repnz
test
xlat
jmp
flds
leave
shr
mul
fidivrl
leave
repz
cmc
idivl
clc
call
test
test
aad
out
xor
xor
sarl
aaa
ss
repnz
out
repnz
in
in
loopne
mov
in
fbstp
iret
fcmovnbe
out
sti
xor
cmp
fiaddl
cmc
add
xchg
orb
call
icebp
sti
icebp
shl
fldl
cmc
in
or
xchg
lock
hlt
mov
into
out
lret
cld
clc
rol
rol
in
ret
popl
loope
adc
xor
repnz
out
loope
aad
loop
lock
std
les
iret
repz
sub
xlat
fcmovu
int3
cmp
ds
cmc
cli
ret
div
jecxz
rol
aad
mov
hlt
repz
fdiv
in
vpaddsw
addb
rol
cli
stc
out
fildl
xchg
xchg
mov
icebp
lret
mul
out
xor
lret
cmpb
enter
loopne
mov
jmp
lock
hlt
in
xor
shl
call
test
rcr
in
xlat
into
dec
loope
ljmp
fld
std
fsubr
cmp
repz
sti
stc
cmp
loopne
jmp
fmul
mov
nop
adc
lock
enter
xor
sti
fdivs
cmp
call
mov
add
rolb
jecxz
out
jecxz
out
lock
out
clc
into
out
repnz
call
and
mov
popl
xor
cmp
in
call
cmc
ds
aad
loope
mov
rorb
int
jmp
cmp
rcr
les
ret
in
lret
enter
shl
imull
enter
out
in
cmp
xlat
rolb
mov
ret
repz
lret
xchg
aaa
xor
leave
out
ljmp
and
sar
repnz
aad
in
leave
lea
clc
xor
fcmovnu
cmc
idiv
fsubp
in
adc
mov
loop
fiaddl
fdiv
ret
cmp
ret
out
stc
cld
call
in
out
out
loopne
icebp
xor
icebp
xlat
cmp
rcl
fdecstp
aam
sar
cmp
roll
fiaddl
mov
loopne
shll
idiv
sar
sarb
sar
aam
in
jecxz
into
lret
xchg
iret
mov
enter
in
lock
std
aam
shl
std
cmp
stc
test
enter
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
adc
mov
jmp
ror
rcr
ror
js
cmp
popa
pushf
cmpsl
jbe
add
add
mov
xchg
xor
cmp
int3
fstp
std
inc
loope
and
fmulp
in
filds
rcl
ljmp
cmp
xor
cmc
fsubr
enter
ljmp
neg
ret
repz
test
fldln2
fcmovb
loope
testl
into
int3
in
enter
call
neg
fsub
les
mov
mov
stc
into
icebp
xchg
xchg
in
shr
stc
out
cmp
xor
clc
leave
fxtract
fucomp
fcmovu
jmp
mov
test
call
out
cs
icebp
in
stc
iret
cli
cmp
lret
cld
neg
fildl
xchg
loope
loop
repnz
in
lock
aad
cmp
lock
aas
shl
jecxz
cld
aam
mov
cld
test
test
lret
jmp
repnz
out
cmc
fstp
sti
cli
test
out
loope
stc
cld
call
cmc
cs
shl
xor
cmp
sti
shl
clc
cld
out
fmul
loope
nop
fimull
in
ret
out
int
out
std
loop
hlt
ss
out
ror
loop
icebp
shl
mov
fimuls
cmc
cmc
cmc
ss
sti
xlat
test
mov
xchg
and
leave
call
in
cli
out
std
fdiv
hlt
aam
loop
lock
out
lds
mov
aam
fucomi
lret
lock
repnz
fsubp
in
iret
cli
enter
nop
clc
stc
shlb
xor
cmc
iret
in
aam
fcomi
into
mov
ror
mov
xchg
mov
out
xor
repz
shl
in
cli
aam
stc
lret
testb
mov
sub
cmc
enter
fsubrp
xor
aad
into
sti
not
and
orb
jmp
mov
ljmp
clc
sti
fnstcw
fidivl
in
cld
xchg
jecxz
mov
inc
jmp
repz
cmp
sbb
aas
cmp
cmp
rol
loopne
xchg
std
fiadds
leave
cmp
div
lret
clc
faddl
fadds
jmp
aam
in
out
ret
not
fcos
in
iret
hlt
rol
in
lds
in
call
hlt
fnstcw
out
into
cmp
loope
cli
in
out
iret
clc
cmp
lds
fsub
out
add
ljmp
cmp
int
into
in
loopne
enter
or
adc
lock
leave
lret
enter
cld
neg
aad
test
in
loop
cmc
int3
into
in
jmp
hlt
xor
cmp
hlt
int
cli
sar
aam
xor
not
nop
repz
into
out
aas
repnz
out
enter
jmp
icebp
icebp
rolb
sbb
lea
lret
cld
lock
icebp
lds
cli
xor
int
shl
in
cmp
int3
aas
xlat
in
fisttpll
rol
sar
out
cmp
int
repnz
cld
adc
fadds
fdivp
xchg
repz
cmp
cmp
not
lret
div
lret
cmp
fyl2xp1
sarl
adc
fdivr
fucom
in
xchg
enter
fucomi
sar
clc
xlat
sar
sar
mov
out
mov
lret
jmp
out
icebp
icebp
jmp
cli
cmp
xor
aad
cmc
xchg
inc
loopne
cld
std
cmp
jmp
cmp
aam
cmp
out
rol
shl
and
test
mov
fimuls
mov
sub
out
idiv
out
cmp
idiv
jecxz
and
test
lret
in
test
shr
rcl
ljmp
cmp
xlat
idiv
shl
lock
shl
cld
xchg
fdiv
into
int3
out
int
out
xor
shll
hlt
dec
lret
sti
lock
sarl
xchg
testl
jmp
rcr
icebp
sar
test
aam
cli
stc
leave
lret
in
cli
jmp
shl
ss
rcl
cmc
xor
cmp
idivb
add
fldl2e
loope
out
mov
ror
into
xchg
aam
divl
std
not
fcomi
test
fcomp
test
loopne
mov
icebp
cmc
loope
cmc
hlt
hlt
cmc
imul
and
mov
sub
mov
addl
sub
movl
cmp
movl
ja
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
xor
or
sbb
mov
movl
xor
sbbl
add
movl
jmp
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
aad
iret
lret
fstp
push
shrl
mov
add
xor
fdivrl
fcmovnu
loope
ret
mov
cli
in
les
icebp
jmp
lret
ljmp
cmp
cmc
imul
out
call
int
std
in
and
enter
xor
shl
xchg
mov
mov
lret
test
in
xchg
repz
jmp
ljmp
cld
ds
loopne
hlt
testb
icebp
int
out
mov
into
leave
xlat
ss
xor
fnstcw
fiadds
test
in
ljmp
icebp
enter
sti
in
loop
stc
leave
orb
xchg
icebp
out
out
cli
cld
into
int3
repz
fyl2xp1
jecxz
in
xlat
ret
sti
mov
xchg
clc
iret
fcmove
fdiv
shr
fildl
loopne
cmp
fdivr
ljmp
lret
fdivp
aam
ss
out
lock
aaa
hlt
fnstcw
xlat
test
fdivr
icebp
fsqrt
lret
mov
test
xchg
jmp
cmp
fstpt
out
cld
ds
test
sti
enter
in
mov
addb
repz
jmp
lret
stc
neg
dec
ret
aam
loop
fldln2
nop
out
loope
xor
sub
test
cmc
leave
aam
cmp
aaa
cli
in
sub
aas
cli
addl
faddl
loopne
loop
test
int3
mov
nop
jmp
icebp
xor
call
cli
into
in
cmc
xlat
ret
fcmovbe
in
into
test
iret
nop
icebp
lret
in
xor
lock
cmc
xchg
test
in
iret
call
jmp
cmp
lret
in
int3
rcr
int
sti
fcmovnu
push
mov
xchg
in
out
loope
leave
ss
leave
jmp
rolb
out
test
test
aam
out
ror
xor
int3
hlt
cmp
ror
clc
mov
aas
mov
jmp
int
repz
int3
shll
in
sarb
sarb
icebp
aam
fucomi
loop
shr
lret
test
fcmovnb
mov
loope
in
fnsetpm(287
in
cmp
cmp
loope
into
ret
cmp
lret
in
fsubp
std
iret
test
call
enter
cli
sti
cmp
test
test
out
out
dec
lret
iret
int3
ret
cs
test
cmp
shl
rcl
ret
jmp
lret
test
test
cmc
into
loop
aaa
xor
test
push
xchg
ret
lret
jmp
test
in
fdivs
int
jmp
test
iret
icebp
call
std
lret
cmp
adc
lret
sti
iret
imul
fdivr
icebp
cli
jmp
lock
loope
repz
clc
xchg
xchg
xor
call
jmp
sar
test
ret
adc
enter
jmp
loopne
xor
rol
std
fcmovnu
int3
xlat
ds
test
loope
jmp
loop
xchg
icebp
aaa
in
out
iret
cmp
repnz
ds
cmp
out
jmp
icebp
lret
jmp
rcl
int3
hlt
idiv
iret
fdiv
loop
in
cmp
incl
int
in
xchg
in
nop
std
ljmp
sarb
ret
into
out
cmp
icebp
fidivrs
aam
sti
into
lret
test
enter
ljmp
test
shr
fiadds
rorb
shl
xor
repnz
repz
fsub
mov
neg
fucomi
into
fdivp
in
loopne
ret
aaa
cmp
into
idiv
f2xm1
cld
repnz
fsubrp
jmp
cmp
out
mov
xchg
rcl
idivl
xlat
fcmovb
fldl
rol
or
xlat
and
sub
nop
int3
rorl
lock
fidivrs
rol
call
test
int3
fstl
neg
xlat
fnsave
in
cli
ds
loopne
sbb
int3
mov
cmp
clc
xor
div
int
aam
aad
imul
out
roll
int3
aaa
aam
aaa
lret
ss
repnz
icebp
shll
rolb
add
add
add
add
sbb
cmpl
jne
push
push
push
call
cmpl
jb
xor
xor
add
orl
add
imul
mov
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
sub
jmp
rcl
lret
fcmovnbe
lods
pop
mov
xchg
shlb
jle
hlt
mov
fcom
cli
lret
out
orb
hlt
cli
sti
out
cmp
in
icebp
fdivr
in
cmc
cld
sub
and
mov
lock
in
test
shll
icebp
shl
lret
ds
int
in
fld
ljmp
and
out
int
divl
aad
fdiv
lret
xor
ds
sti
shl
ret
std
mov
mov
xchg
xchg
shr
loop
sub
aam
into
fnsave
sarb
ds
sti
div
std
in
xchg
ljmp
out
loop
ss
in
aaa
jmp
cmp
shr
out
rol
int
sti
test
out
cld
mov
out
ret
xor
in
jmp
leave
loopne
icebp
loop
neg
cld
fdiv
lret
out
out
and
imul
ret
xor
xor
ljmp
rcl
mov
cli
xchg
lds
cli
xor
repz
rcr
into
cmp
hlt
stc
call
incb
rcll
call
repnz
rcr
idiv
cmp
fmull
vpaddsw
xchg
fcomip
enter
cmp
neg
fdivp
aas
idivl
rcr
repnz
aam
ds
loope
iret
lret
repnz
ljmp
out
rcr
aas
cmc
stc
sub
cld
fsubrp
test
rorb
xlat
clc
aaa
ljmp
test
sti
aas
ror
fmull
into
jmp
xchg
nop
lock
in
stc
repnz
clc
repnz
cld
in
out
in
xlat
fucomp
movl
ljmp
cmp
rcr
cmp
aam
enter
mov
xchg
jmp
jecxz
in
sti
out
fsub
aaa
cmp
shl
cmp
xchg
test
mov
ret
jecxz
shl
aaa
shl
lret
clc
hlt
out
test
addb
out
clc
in
lret
icebp
std
ds
fcmovb
fidivs
stc
cmp
leave
in
sub
xchg
repnz
lock
jmp
fistpll
hlt
roll
stc
test
cld
iret
fdivr
jmp
iret
loop
idiv
rcl
cld
ljmp
test
repz
shl
aad
in
loop
cli
nop
loop
out
test
out
enter
aad
iret
cmp
into
loop
cmc
ret
enter
testb
mov
in
leave
lret
cmc
cli
into
cli
xor
loope
aad
add
aam
clc
loopne
out
add
shl
xor
out
leave
aas
std
sbb
cli
ret
in
jmp
loop
xchg
iret
jmp
hlt
hlt
fcmovne
sarb
ds
inc
xabort
std
fsubr
mov
mov
leave
fcom
ss
fsincos
xlat
repz
cmp
out
loopne
sar
decb
rolb
xor
fnop
icebp
sarl
cmp
loope
icebp
hlt
idiv
mov
mov
rolb
rcl
cmp
xlat
ljmp
std
ret
into
and
mov
cli
mov
repz
xchg
ss
cmp
aam
int3
cmp
in
call
int3
out
fcmovnu
loope
jmp
hlt
div
out
shl
hlt
cmp
cmp
not
fdivp
ret
imul
filds
xchg
mov
jecxz
jecxz
sarl
cmp
xor
std
ret
fstp
cmp
addl
xor
repz
int3
in
cld
jmp
cmp
aas
loopne
jecxz
repz
out
into
shr
addl
aam
fxch
into
in
test
call
fimull
shr
sub
clc
out
in
out
hlt
std
std
idivb
sbb
shl
hlt
fisttpl
or
hlt
ljmp
jmp
hlt
sarl
out
hlt
hlt
incb
mov
int
out
orb
int3
jmp
ror
repz
mov
mov
enter
fucomp
jmp
xchg
repnz
leave
fdivr
in
test
fndisi(8087
fdivrs
out
into
nop
clc
mov
out
in
fst
clc
cmp
fcomi
cld
loop
fdivr
fninit
std
mov
in
cmp
in
int
out
int
lret
leave
repz
addl
loope
loope
jmp
out
out
fucompp
lds
add
aam
rcr
fstp
fnstsw
fmull
lods
sbb
jle
add
mov
out
in
cmp
jmp
cmp
cmp
sbb
in
std
idiv
int
fisttpll
in
xor
rol
aam
fnstsw
fcmovbe
loope
test
int3
xchg
jmp
in
cmp
int3
out
neg
ljmp
ljmp
test
std
in
xchg
call
fld
div
cmp
ror
rcl
testb
out
out
in
loopne
in
xor
lock
out
ret
xchg
std
xchg
lret
mov
in
mov
ss
call
int3
in
sti
repnz
and
cmc
xchg
mov
call
neg
aas
cmp
fdivr
sti
and
icebp
enter
in
mov
mov
jecxz
mov
aaa
xor
shl
enter
filds
xlat
loopne
aad
std
mul
int
fildl
vmovq
cmc
xor
sbb
xorl
mov
jmp
clc
in
int
cmp
jmp
in
sti
fsub
fstp
jmp
call
in
jecxz
out
in
int
ljmp
sti
std
iret
mov
mov
nop
rorb
in
out
ror
fcomi
imul
adc
out
cmp
cli
out
clc
fneni(8087
call
das
fsubr
fcmovne
icebp
in
lret
lret
hlt
aam
cmp
aam
fiaddl
mov
jecxz
jmp
lds
int3
in
iret
fnstcw
aad
aad
inc
call
in
lret
mov
enter
xchg
cmc
imul
xor
cli
fst
in
leave
fnstsw
xor
ftst
call
std
int3
test
xor
jmp
fcomi
int
repnz
std
ret
cmp
test
loopne
test
in
call
mov
lret
fcom
imul
sarb
incb
int3
sti
repnz
loop
ret
jmp
fadd
enter
cmp
idiv
fdivrp
cld
ljmp
xchg
fcmovnbe
aad
ret
out
xor
in
clc
lret
in
cmc
iret
int
imul
jmp
std
xlat
in
leave
cli
mov
xchg
icebp
hlt
aam
int
sarl
shl
jecxz
cld
loopne
addl
test
test
int
xor
jmp
shr
fidivrl
sti
hlt
add
and
add
out
std
mov
xor
rcl
leave
ss
test
inc
cld
std
fisttpll
fdivr
addl
call
in
in
and
cmp
call
fucomi
icebp
test
repz
in
hlt
ss
out
aad
out
ret
aam
rcl
test
xchg
in
mov
iret
cmc
xor
cmp
lret
inc
cmp
loop
loopne
mov
nop
in
mov
lea
in
xor
xlat
fmul
xlat
lock
cmc
repz
fsubrp
in
mov
loope
std
mov
xor
sub
xlat
xor
cmc
fucomip
into
std
xor
add
shl
xchg
in
in
cmp
cmp
fldlg2
shl
repnz
neg
adc
sar
in
xchg
mov
jmp
int
xchg
sub
cli
ljmp
out
faddp
test
in
loopne
cmp
jmp
mov
in
out
lret
fldcw
lock
sti
stc
jmp
repnz
in
test
aad
test
xchg
iret
rorb
fcmovbe
call
cmp
roll
fmull
repnz
aad
cmc
lret
lock
rol
idivl
int3
adc
fchs
mov
stc
aad
jmp
xchg
jmp
icebp
test
loope
sti
in
enter
cld
loop
rolb
out
call
mov
mov
enter
cmp
sar
divl
sti
addb
clc
jmp
lds
xchg
jmp
lret
imul
rcr
neg
jecxz
ds
ret
addb
sti
fisttpll
repz
aaa
enter
in
aas
cmc
ret
xchg
in
or
in
fcomip
xchg
repnz
clc
in
enter
iret
stc
repnz
loop
mov
ret
jmp
xchg
jecxz
icebp
jmp
ljmp
fsubr
xor
xlat
ja
mov
jmp
jmp
ror
aam
aad
aam
sbb
stos
stos
add
add
cmp
flds
fsubrp
sti
imul
mov
mov
ljmp
lret
lret
cmp
aad
std
in
call
ljmp
ljmp
sar
fst
cmp
and
stc
out
cld
dec
out
in
addl
shl
fsubrp
cmc
cmp
ret
in
incl
out
fisttpll
loop
call
shl
rcr
shl
cmp
stc
ret
in
cli
jmp
xchg
neg
aam
int
xlat
iret
repz
or
in
leave
fsubrp
leave
orl
xor
xor
clc
cmc
out
std
test
fsub
stc
enter
mov
cli
mov
nop
mov
icebp
lock
in
out
aas
cmp
std
ret
sbb
sarb
jmp
jmp
repz
jmp
fsubr
cmp
roll
repz
mov
jmp
cli
lea
rol
aam
cmp
int
rcl
roll
cmc
enter
out
sar
hlt
mov
rol
in
cmp
repz
xlat
cmp
leave
cmp
out
mov
jecxz
fldl
hlt
imul
into
out
sar
lock
loope
rolb
stc
int3
sbb
decl
xor
fcmovnbe
icebp
aad
lock
cli
repnz
fistpll
stc
repnz
call
shrb
loope
les
cmp
clc
cli
icebp
xor
lret
mov
hlt
repz
xchg
lock
out
repnz
in
cmp
stc
loope
repz
sub
ret
decl
fimuls
out
out
shlb
cmp
fdivr
aam
test
filds
xchg
jecxz
jecxz
fxch
fdivr
aad
jmp
out
test
hlt
cli
sar
fstp
sti
lea
in
out
stc
in
cmp
out
out
cmp
add
aad
mov
mov
in
leave
xchg
addb
out
into
enter
fcmovbe
sti
fdivrs
fsub
fucomip
out
mov
xchg
popl
lret
lret
enter
addb
fcomp
xlat
stc
lret
jecxz
test
in
sarl
lock
add
test
ljmp
in
loop
out
aaa
clc
hlt
cld
lock
ret
aad
loop
cmc
loopne
add
mov
loop
loop
fucomip
xor
xor
das
clc
out
in
ror
shl
xchg
inc
fldl2e
ret
out
sti
clc
repz
shr
clc
into
test
in
imul
decl
aad
ror
out
out
icebp
fdiv
in
int3
in
aam
cli
fistpll
loop
ljmp
jecxz
out
xor
lret
fsub
repz
xchg
jecxz
fdiv
fucomi
stc
int3
in
in
loop
shr
cli
test
out
ds
sti
fcomi
fdivrl
in
lret
adcl
int3
xor
xor
hlt
sti
rcr
cld
clc
cmpb
enter
clc
cli
loopne
rclb
xor
call
in
sub
cmpl
rol
sbb
sti
fsubr
aam
test
stc
jecxz
sub
int
ljmp
xchg
xchg
addb
in
lock
in
loope
xlat
lock
aad
cmp
lret
fdiv
loope
fsub
jecxz
in
lret
lret
cmp
aaa
ffree
leave
sti
repnz
out
mov
loope
ljmp
sub
jmp
cmp
cld
jmp
xlat
out
leave
std
lds
jmp
iret
out
ror
iret
rcr
xlat
int3
aaa
hlt
in
std
test
out
jecxz
mov
clc
test
out
mul
out
shl
repz
icebp
lock
iret
rolb
ljmp
xor
shll
icebp
icebp
int3
lret
xor
rolb
lret
movl
imul
lock
ss
aad
shl
fld
in
in
out
xchg
incl
cmc
fidivs
ffreep
lret
cli
icebp
add
out
mov
out
sti
loopne
push
rorb
xor
add
add
imul
jmp
rol
aam
aad
aad
xchg
mov
dec
xor
inc
xlat
scas
add
add
cmp
icebp
or
aaa
jecxz
jmp
ror
cmp
loop
int
xlat
incl
mov
sar
rolb
icebp
aaa
in
stc
int
in
cmp
loop
aam
in
lret
fadds
int
out
shl
xor
cmp
in
iret
fdivrs
xchg
xchg
test
fld
icebp
stc
sarl
loope
repz
xlat
aam
out
fcompp
jmp
icebp
lret
std
xchg
or
into
not
shl
neg
jmp
std
jecxz
aas
fdivrp
addb
test
int
xchg
int3
aaa
leave
fstp
shr
fadd
fmul
test
in
mov
cld
fcomip
call
xor
int
cmp
std
cmp
sti
fdiv
fpatan
ret
fstp
sti
test
in
loope
mov
stc
call
xor
cmp
xlat
cmp
in
clc
fidivrl
orl
aaa
in
in
in
aam
shl
int3
xlat
shl
mov
jmp
mov
sti
jecxz
lock
ret
cmp
out
fnstsw
int3
in
cmp
xor
not
leave
in
ljmp
jmp
jmp
xor
roll
in
loop
loopne
ljmp
hlt
in
mul
out
cmp
ss
int
out
adc
fprem
clc
cli
lret
in
popl
out
iret
fcmovb
xor
ror
rol
cmpl
fdivr
enter
loopne
xchg
hlt
loope
shl
out
lret
xlat
out
repnz
ds
repz
aam
or
in
int3
fst
iret
nop
hlt
lret
xor
fsubr
enter
lock
cmc
cli
cld
ror
loopne
loopne
repnz
mov
iret
rol
ss
aaa
bnd
fstp
cmp
shl
filds
test
cld
loop
icebp
xchg
aas
cli
xor
lock
cmp
shl
aas
test
mov
fildl
into
xchg
aas
sarl
fcomp
fdivs
cmp
int
repz
ds
ret
ret
in
loop
fstp
fisttps
idiv
cmc
out
cmp
hlt
lret
sar
or
clc
xchg
hlt
enter
cld
iret
hlt
lock
shr
jmp
incl
in
aad
loop
mov
les
jmp
repz
std
test
xchg
out
in
nop
ret
int
loopne
ret
jmp
stc
test
cmp
out
cli
shl
lret
out
call
in
in
cmp
xor
out
repz
mov
xchg
in
aam
loop
shr
icebp
lds
sbb
cmp
xor
clc
addb
in
mov
and
enter
iret
repz
cmc
int
and
iret
aad
mov
fisttpl
test
out
cmp
cmp
ffreep
cld
call
les
call
into
xchg
not
icebp
cmp
cmp
aaa
cld
ds
repz
in
lds
lds
fcomip
out
std
jmp
fdiv
cmp
shr
aad
loope
fildl
jmp
mov
cmp
in
std
cmp
iret
jecxz
ret
loope
xlat
mov
lea
into
lock
in
in
jmp
xor
jecxz
in
incb
in
xchg
leave
lret
xor
int
cmp
push
cmp
out
cmp
push
cmc
mov
mov
in
mov
lret
not
aaa
sti
lret
aaa
fldpi
repz
add
mov
jmp
ljmp
repz
aad
loope
int
lock
cli
inc
aaa
lds
mov
loop
cmc
loope
lret
loopne
mov
std
in
repz
xor
stc
ljmp
sub
addb
mov
call
xor
cmp
fdiv
test
fdivrl
and
aam
jmp
in
in
lret
out
int
lret
fsubrs
shr
in
imul
iret
out
fcos
loop
ror
neg
std
mov
call
test
int
jmp
into
xor
int3
in
out
loopne
in
fisttps
xchg
iret
xlat
mov
mov
jmp
rcl
ret
fucomp
insb
fstps
xchg
adc
xor
add
jg
jle
fdivrp
cld
loop
cmp
ret
orb
iret
out
cmc
lock
jmp
cmp
ret
lock
loopne
fcmovu
orb
hlt
aad
fcom
cmp
sarl
sar
xchg
into
loopne
ljmp
shr
enter
in
aam
rcr
loopne
jmp
call
loope
ror
addl
aas
stc
stc
std
fcmovbe
shl
addb
mov
ret
out
out
out
loop
ret
jmp
aad
ds
flds
sti
enter
ret
mov
in
fisttps
loopne
rol
repz
lret
in
xlat
addl
jmp
in
lret
test
shl
sti
fsincos
into
not
incb
iret
cmp
jecxz
adcl
lret
leave
xor
shl
sar
sar
stc
xlat
jmp
mov
ffree
shl
lret
lret
clc
cmp
out
mov
jecxz
cmp
cld
ljmp
jmp
hlt
stc
aas
xor
ret
mul
fsubp
cld
out
int
lea
xor
filds
fistpll
fimull
xchg
add
add
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
sbbl
push
push
adcl
push
xor
addl
lea
addl
xor
or
sbbl
xor
andl
add
push
lea
xorl
push
movl
push
xorl
lea
inc
xorl
xor
addl
xor
adcl
call
movl
movl
mov
mov
movl
jmp
movl
xor
sub
xor
xor
xor
xor
mov
add
xor
movl
incl
mov
mov
cmp
movl
jb
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
movl
adc
movl
mov
mov
sub
xor
lea
mov
lea
xorl
mov
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
sbb
add
not
mov
mov
mov
mov
cmp
mov
mov
movl
je
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
or
dec
mov
jmp
mov
xor
xorl
add
adcl
imul
mov
jmp
sbb
xor
xorl
add
xor
mov
movzbl
or
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
or
add
sbbl
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
xor
addl
add
movl
cmp
movl
jne
adcl
push
pushl
addl
pushl
call
mov
mov
sbbl
mov
incl
mov
mov
adc
mov
mov
mov
mov
adc
mov
mov
dec
movl
adc
mov
neg
movl
mov
orl
xor
add
jmp
mov
orl
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
lea
sub
mov
mov
and
xor
movzbl
and
lea
or
mov
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
and
movl
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
or
dec
mov
jmp
adcl
movl
mov
mov
xor
mov
xor
add
movl
cmp
je
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
inc
xor
add
sub
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
orl
xor
or
mov
sub
xorl
add
mov
mov
cmp
ja
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
push
mov
call
pushl
pushl
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
mov
movl
push
mov
mov
mov
push
mov
mov
mov
cmp
je
adc
mov
mov
andl
xor
sbbl
add
movl
cmp
je
mov
xor
inc
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
sbb
push
adc
pushl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
push
movl
mov
subl
mov
add
xor
cmp
jne
mov
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
xorl
mov
mov
adcl
xor
add
movl
mov
movl
movl
not
movl
movl
mov
movl
push
movl
mov
cmp
je
mov
adcl
xor
incl
xor
lea
sbbl
xor
movl
cmp
movl
jne
jmp
add
sub
mov
xor
add
mov
xor
mov
adcl
xor
movzwl
add
xor
mov
sub
mov
adc
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
neg
movl
mov
push
or
mov
mov
sub
xor
mov
xorl
add
orl
mov
and
mov
subl
push
push
adcl
test
movl
je
mov
movzbl
or
mov
mov
andl
mov
mov
sub
mov
imul
mov
subl
add
dec
mov
not
mov
xchg
inc
sub
subl
xor
mov
movzwl
and
mov
negl
mov
mov
sbb
mov
subl
xor
sub
xor
addl
add
mov
movl
mov
je
and
mov
xorl
xor
andl
add
movl
cmp
movl
jne
pushl
adcl
call
sbb
mov
mov
mov
sub
and
mov
mov
mov
sub
mov
mov
andl
xor
orl
add
cmp
je
pushl
incl
pushl
orl
call
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
dec
mov
incl
xor
orl
add
movl
cmp
movl
je
sub
mov
xorl
mov
mov
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
andl
add
mov
mov
subl
mov
add
movzwl
or
mov
mov
mov
add
mov
movzwl
or
mov
mov
addl
add
xor
mov
sbb
mov
mov
addl
add
lea
andl
mov
push
orl
pushl
pushl
call
mov
subl
mov
sbbl
xor
movl
add
movl
cmp
jne
mov
inc
cmp
movl
jb
movl
jmp
mov
xor
xorl
add
movl
jmp
subl
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
