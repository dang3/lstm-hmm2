push
mov
jmp
cwtl
jb
inc
pop
pop
cltd
lret
inc
scas
push
rolb
jle
jle
jno
jle
xor
xor
ja
or
lock
cmp
int3
adc
sbb
mov
or
rorl
out
mov
or
dec
sbb
loopne
add
mov
xor
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
loope
pop
sub
jae
lret
lcall
mov
loop
cmp
sub
or
sbb
outsl
insl
je
cmp
jns
popl
shll
movb
sahf
mov
daa
sbb
addr16
in
test
shl
das
scas
and
mov
repz
enter
test
cld
cmp
inc
lahf
fdiv
je
or
lret
out
pop
jno
add
nop
pop
scas
bound
or
mov
enter
pusha
dec
nop
test
ficomps
test
inc
mov
sub
stc
fucom
test
out
cs
test
pushf
in
sub
sti
cli
cmpsb
mov
xor
dec
call
add
mov
sbb
adc
add
aam
stos
roll
mov
jmp
imul
fmul
sub
aam
push
pop
jp
gs
xor
jno
xor
sarb
cld
cmp
jns
jbe
leave
mov
into
mov
mov
add
jg
sbb
cld
mov
push
in
cmpsl
sbb
cld
pop
daa
mov
pop
adc
sub
inc
lcall
ljmp
test
pop
mov
mov
jl
jmp
sub
cmc
dec
xchg
pushl
adc
mov
mov
sbb
ja
shll
xchg
aaa
dec
daa
fsubs
shll
jbe
pop
xchg
mov
push
data16
mov
movsb
or
sub
loop
mov
push
scas
aas
jbe
jecxz
lret
pop
sub
fists
shrb
daa
outsl
push
push
jecxz
mov
aad
test
sahf
push
push
xchg
jne
daa
adc
pop
cmp
movsl
mov
popf
pop
popf
frstor
iret
dec
cli
pop
jmp
add
adc
fimull
imul
mov
push
mov
or
push
jbe
nop
dec
inc
out
movsb
inc
icebp
int3
outsb
and
or
fsubs
pop
outsl
lret
jmp
or
sbb
cmp
or
jmp
pop
lock
jmp
or
cmp
mov
sbb
addl
cmp
cmp
push
pop
sub
addr16
jns
jmp
arpl
clc
pop
aam
stc
cmpl
xor
iret
mov
push
jle
orl
xchg
clc
imul
gs
fdivl
sbb
test
jmp
out
test
clc
mov
mov
jo
das
sahf
pushf
int3
fwait
rcrl
cmp
ret
inc
popa
jae
add
push
mov
xor
inc
mov
loop
sahf
and
mov
jg
aas
inc
xor
pop
cmp
imul
and
xchg
sub
jns
inc
pop
cld
andl
scas
addl
movl
sbb
movl
sub
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sub
lea
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
and
mov
jmp
sub
ljmp
in
pusha
xorb
xorb
ja
xor
dec
add
jb
adc
xchg
cmp
out
cld
inc
sub
mov
cmpsb
int3
imul
adc
dec
js
in
xchg
negb
or
cwtl
out
aaa
jb
xor
leave
cmp
pop
addr16
aaa
daa
loopne
push
lret
fidivrl
cmp
inc
pop
insb
mov
jb
jp
fistps
xor
stos
dec
nop
mov
cmc
pusha
add
pop
dec
mov
cmp
or
xchg
add
jl
in
imul
and
incl
inc
data16
leave
sub
and
xchg
pop
sti
out
sub
fstpt
repz
popa
fadd
pop
sbb
and
xor
cmp
dec
and
sub
pop
aad
repnz
xchg
jo
mov
dec
push
cmpsb
stos
loopne
ret
insb
jns
push
nop
arpl
loopne
or
and
push
mov
rorb
mov
mov
addr16
pop
inc
stos
sti
icebp
and
push
sahf
dec
fidivrl
sub
adc
xchg
cmp
lret
movsb
loopne
sbb
lret
rcrl
jns
clc
or
jo
cmp
cltd
decl
add
mov
pop
shl
xor
cmp
or
notb
push
scas
pop
adc
aad
jnp
clc
sbb
jmp
xchg
adc
or
imull
adc
pop
inc
xor
mov
frstor
dec
aas
ja
push
popa
fistps
push
sub
inc
movsb
daa
push
fmul
cmp
hlt
adc
test
popa
xor
lea
xchg
imul
mov
cs
push
popa
dec
sbb
orl
adc
inc
cs
push
xchg
fisttpl
shlb
scas
mov
sbbb
jg
jmp
leave
into
adc
jle
lcall
mov
outsb
stc
icebp
out
push
mov
in
add
ljmp
rolb
push
xor
mov
mov
lret
xor
repz
adc
push
push
rcrb
lret
ficompl
bound
sbb
pusha
pop
xchg
jns
rcr
int3
mov
mov
adc
jnp
scas
test
dec
or
dec
lret
xchg
rorb
aad
lret
mov
adc
hlt
mov
lcall
mul
inc
sbb
jl
push
add
fsubs
call
xchg
pop
sbb
repnz
test
sbb
pop
mov
or
fcoms
and
fiaddl
cwtl
add
in
hlt
xchg
notb
outsb
imul
mov
xchg
inc
divb
add
sub
std
push
shrl
adc
add
dec
hlt
inc
out
insb
xchg
cmp
repz
adc
or
push
mov
xchg
roll
pop
in
sbb
hlt
mov
movsb
iret
jo
xchg
jg
mov
movsl
sti
inc
mov
bound
cmp
push
hlt
ljmp
xchg
pop
mov
lods
or
out
aam
hlt
jb
xor
adc
mov
jp
icebp
mov
negl
push
lea
xor
mov
mov
xor
push
sbb
push
adc
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
addl
mov
or
mov
mov
xor
mov
sbbl
xor
xor
xorl
add
add
sbbl
jmp
ret
imul
mov
aas
cltd
pop
push
jne
jle
jno
jle
pop
cmp
and
xchg
pop
mov
cmp
std
sbb
lcall
enter
test
clc
mov
imul
orb
lahf
pop
pop
push
test
xchg
pop
jns
stos
mov
xchg
sbb
nop
loop
mov
dec
xor
sub
dec
inc
mov
mov
inc
sub
std
fwait
adc
jmp
sub
dec
jl
xor
pushf
or
or
push
out
loop
inc
insb
push
aad
sbb
mov
xchg
xcrypt-ofb
cmpsl
imul
xchg
push
mov
mov
add
std
sbb
push
ss
jo
test
push
push
pop
pop
or
jbe
leave
dec
xchg
push
sub
test
jecxz
ss
inc
popf
push
je
gs
fmuls
or
out
fwait
cld
jo
add
std
orl
mov
int
fists
std
push
fisttps
jb
xchg
dec
test
mov
int3
sbb
inc
add
pop
push
dec
in
jecxz
mov
test
js
pop
fldcw
lcall
xchg
dec
in
aaa
sub
push
jl
adc
test
adc
cmpsl
roll
iret
mov
add
fldenv
mov
push
add
loop
or
sbb
ficomps
mov
jle
inc
rorb
lock
push
loopne
mov
data16
inc
into
mov
sub
dec
cltd
cmp
cmp
xchg
into
inc
add
sti
xchg
xchg
lret
cmpb
pop
push
xor
into
out
lahf
lret
or
mov
nop
push
jecxz
pop
sbb
cld
rol
orl
inc
adcl
or
xchg
mov
cwtl
push
stos
mov
xchg
jl
sbb
inc
test
adc
sbb
cmovge
insl
jg
add
mov
xlat
stos
aaa
aaa
pop
adc
adc
sahf
push
pop
and
sub
add
lods
loopne
loop
out
jo
xchg
repnz
cli
into
push
call
mov
and
pop
xor
popf
pop
add
popa
jbe
xchg
pop
cmp
dec
ja
mov
mov
pop
mov
int3
mov
pop
xchg
jecxz
add
icebp
xor
aas
mov
xchg
sub
inc
mov
in
jbe
push
out
push
mov
or
sub
movsb
andb
das
fwait
add
hlt
lds
mov
cs
jg
xchg
adc
pop
test
enter
mov
cltd
shll
sbbb
mov
jg
pop
sbb
aas
mov
mov
mov
fistpl
jp
adcb
dec
cmp
jnp
xor
jg
es
sub
adc
pop
negl
add
sub
xchg
ret
xchg
cmc
jb
inc
scas
cmp
idivb
aad
adc
jp
bound
dec
inc
stc
sub
sub
sub
dec
std
in
outsb
or
ja
and
and
je
hlt
push
and
nop
std
mov
loopne
ljmp
arpl
push
sbb
adc
mov
movsl
in
mov
pop
aas
div
movl
jmp
pop
nop
jl
jge
and
jns
lea
mov
jno
jle
ds
ss
add
fstps
lods
shrb
push
pop
cmp
and
lods
testb
iret
stos
mov
fisubrl
cmp
jne
lret
xchg
mov
enter
push
outsl
mov
fstpl
imul
inc
lcall
xor
cmp
std
xor
div
mov
jae
adc
shrb
insl
test
inc
xor
scas
pushf
xchg
fs
mov
jle
outsb
out
xor
mov
es
inc
or
adc
rorl
xchg
shlb
aaa
xor
scas
push
fwait
sbb
push
sub
scas
xchg
daa
bound
mov
add
ja
jmp
push
sbbl
inc
loopne
sub
roll
cmpb
mov
sahf
cmpsl
push
lret
sbb
les
add
mov
inc
inc
mov
mov
cltd
aas
hlt
sbb
mov
movsb
jb
rcrb
mov
and
mov
ror
xor
les
cli
xchg
cmp
push
dec
cmp
loopne
sub
stos
jnp
mov
icebp
inc
shll
mov
or
mov
popf
rcl
je
out
adc
jl
pop
fcompl
ljmp
xchg
jnp
sti
out
out
cmp
lret
mov
jge
mov
jb
lret
fld
into
pop
addl
push
mov
pop
mov
sbb
lahf
lods
mov
push
outsl
xlat
or
std
fnstcw
xchg
push
add
and
bound
add
aam
out
ret
adc
sbb
repnz
test
out
fwait
outsl
xor
sahf
loop
fldcw
mov
stc
rorl
ds
fdivrl
mov
rclb
mov
fcmovnb
popf
loope
test
xor
or
test
outsl
jb
es
xchg
divb
pop
jle
sbb
and
xlat
xchg
in
xchg
jle
lret
arpl
aam
xor
inc
pop
insl
mov
cmp
jp
ja
out
and
push
add
sub
in
dec
imul
subl
lock
pop
xchg
jl
and
call
inc
std
adc
sbb
adc
xor
mov
jns
xchg
cwtl
sub
sub
mov
sbb
gs
push
mov
jp
adc
xchg
push
enter
ficoml
mov
std
dec
scas
adc
fwait
out
scas
mov
into
xchg
jge
mov
xchg
into
clc
cmpsl
xlat
js
fldcw
pop
aas
adc
cmpsb
call
or
cmc
repnz
add
fwait
jbe
adc
or
insb
mov
loop
xor
pop
addl
xor
sub
sbb
ret
movsb
push
imul
sbb
daa
rolb
jnp
addr16
das
adcl
cmp
lahf
std
ret
add
mov
in
sub
cmp
mov
aaa
xchg
xchg
sahf
sbb
lcall
mov
stos
push
call
sbb
mov
leave
cmpsb
pop
les
pop
or
negl
lea
ljmp
jbe
out
adc
mov
outsb
cmpsb
and
or
dec
push
ret
push
loopne
inc
aam
dec
add
movl
cmp
movl
je
movl
sub
lea
mov
sub
mov
not
jmp
inc
test
xchg
mov
rorb
into
or
jle
jno
jle
outsl
loope
scas
shlb
hlt
leave
cli
cmp
cmpsl
inc
xor
jmp
stc
xorl
in
add
pusha
test
addl
jl
dec
mov
push
xchg
cwtl
add
adc
les
fistps
sbb
fucomp
add
movsb
sub
adc
call
mov
imul
xor
sbb
or
iret
mov
or
add
ret
daa
push
daa
mov
inc
shll
mov
fdivl
out
mov
mov
test
lods
fwait
test
mov
rolb
je
mov
dec
nop
cwtl
cltd
idiv
inc
aas
and
lock
push
xchg
loopne
jns
mov
sbb
xchg
mov
sub
test
push
aam
ja
mov
mov
sub
jg
xor
daa
dec
xor
lods
shrb
ljmp
xchg
jnp
stos
jnp
fcompl
xchg
pop
cmp
xor
add
inc
roll
lahf
lock
or
movsl
in
push
mov
add
and
jmp
xchg
or
sub
mov
jnp
aam
mov
fisubrl
jo
mov
inc
mov
cmp
clc
or
lock
fbld
sub
push
add
sbb
lret
mov
roll
cli
jae
in
out
mov
add
mov
pop
loopne
sti
add
push
fprem1
fdivrl
inc
add
mov
pop
or
test
jl
and
pop
bound
push
sahf
adc
mov
dec
sub
fwait
movsl
negb
inc
push
js
sbb
pop
lret
rcrb
add
hlt
iret
and
xchg
je
outsl
icebp
fdivs
lods
inc
lods
sahf
popf
je
adc
jg
lret
fs
mov
xorl
loop
test
push
stc
mov
add
addr16
mov
dec
test
dec
sarb
push
in
pop
nop
pop
jmp
sbb
pop
xchg
jmp
repz
es
sbb
shrl
push
push
shr
addr16
testl
aam
jno
inc
popa
ja
enter
pop
mov
popf
rcll
movsb
lahf
outsl
mov
cmp
insb
and
or
ds
cmp
das
and
shlb
std
adc
inc
mov
pushf
sbb
or
jo
xor
sub
das
add
insl
xor
into
inc
inc
inc
iret
xchg
lret
xchg
cld
dec
push
daa
pop
std
mov
dec
psubd
es
cmp
jo
rcrb
or
cwtl
clc
mov
arpl
call
outsl
int3
push
je
ds
repnz
adc
inc
in
and
shll
adc
jo
cmpsl
mov
enter
movsl
dec
pushf
cmpsb
and
out
pusha
mov
gs
pop
loop
aam
stos
out
fistpll
xchg
imul
jno
fwait
jno
hlt
pop
or
stc
xor
and
and
test
dec
repz
pop
sbb
sbb
pop
jmp
mov
and
xchg
jle
push
adc
adc
aaa
fsubrl
aas
div
mov
add
out
test
movb
add
add
push
inc
add
add
mov
cmp
movl
je
and
mov
jmp
inc
xchg
ljmp
dec
xchg
daa
adc
or
jle
xorb
dec
pusha
scas
xor
pop
or
jmpw
notb
jb
mov
sub
dec
sub
leave
cli
imul
and
push
rcll
adc
scas
cld
addr16
ret
xchg
dec
mov
add
test
stos
sub
adc
mov
mov
pushf
movsl
cmc
inc
scas
lods
repz
movsb
sbb
bound
inc
sarb
jbe
hlt
jg
and
les
or
dec
inc
push
and
dec
outsb
adc
sbb
mov
mov
cmp
in
cmp
fstpl
cmpl
ret
jge
ret
mov
pop
popa
jns
test
or
mov
dec
test
notb
xor
or
mov
dec
cmp
xchg
daa
cmpsl
mov
in
lods
lods
or
cmp
jb
mov
lahf
sub
repz
aas
arpl
sbb
mov
lahf
jmp
jb
pushf
fidivrs
jmp
mov
aam
push
sub
sub
lea
cli
xchg
xor
arpl
xor
dec
pop
lahf
pushf
lds
mov
pop
js
outsl
sbb
xchg
lods
push
dec
mov
mov
data16
cmp
dec
rorb
scas
idivb
and
pop
rcl
push
cmp
insb
rcrl
xchg
adc
inc
hlt
mov
dec
aam
stos
sti
sub
test
fmull
xor
xchg
leave
pop
idivb
pop
sbb
xchg
aad
js
push
xchg
pop
mov
mov
fisttps
inc
xor
shlb
lret
lods
sbb
repnz
pop
dec
or
cmp
mov
fistps
pop
pop
or
dec
fcmovb
add
divl
imul
scas
dec
fstl
stc
fcompl
outsb
adc
es
jnp
and
dec
dec
mov
inc
jno
pop
icebp
jge
lret
sub
xchg
xchg
imul
int
out
dec
cmc
xor
addb
sbb
outsl
outsb
insl
mulb
in
scas
push
out
in
jecxz
or
inc
fbld
push
dec
pop
cs
outsb
mov
mov
mov
and
and
jno
jns
add
insl
push
sub
cmc
fcompl
popa
in
xchg
sbb
xor
call
inc
mov
out
pop
xor
mov
jmp
lea
jo
andl
sub
inc
leave
clc
jp
jae
jmp
add
and
daa
les
jecxz
mov
sbb
add
push
sbb
mov
std
lods
shlb
xchg
or
in
enter
push
jae
int
cmp
add
clc
adc
sahf
idivl
stos
mov
pop
add
daa
push
icebp
movsl
jp
xchg
jbe
or
and
movsl
popf
test
in
cmp
jnp
outsl
pop
and
fadd
pop
fsubrl
mov
sbb
cmp
nop
xchg
inc
jb
adc
or
stos
add
aam
add
insl
mov
test
fidivrl
jmp
add
cli
in
jns
rorb
push
es
mulb
mov
fldt
sbb
loopne
pop
stos
adc
sbb
imul
xor
aas
arpl
jbe
orl
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
jmp
clc
inc
adc
xchg
jge
pop
movsl
pop
dec
push
xor
mov
add
xorb
inc
xorl
lods
dec
hlt
insb
shlb
test
jbe
push
xor
aaa
repnz
mov
in
stos
add
insb
in
les
mov
xchg
or
jmp
or
sbb
add
arpl
icebp
jecxz
xlat
iret
fs
add
ljmp
xchg
dec
outsb
push
adc
adc
es
outsl
jbe
jg
aad
test
add
sbb
testb
fisttpl
mov
repz
inc
aaa
iret
mov
pop
clc
push
test
mov
mov
pop
jmp
popf
cmp
pop
out
pop
insl
push
je
pop
sub
mov
lret
and
repnz
and
test
and
pushf
daa
cltd
sbb
lcall
push
xor
push
inc
mov
mov
lahf
xor
pause
sbb
shlb
xchg
or
lods
in
xor
aad
sub
leave
mov
jp
pop
inc
out
dec
mov
js
negb
in
into
outsb
adc
xchg
xorl
dec
add
or
popa
scas
test
clc
mov
shll
sbb
mov
and
push
push
lods
adc
sbb
inc
jns
popa
out
inc
jle
or
dec
and
mov
test
or
push
mov
dec
inc
and
out
divl
sub
add
hlt
sbb
clc
insb
jnp
push
test
or
jmp
lods
push
pusha
xchg
aad
pop
xchg
and
jae
sub
in
sbb
movsl
jns
xchg
fnstcw
sahf
jecxz
enter
shll
cmp
adc
insl
pop
fcom
sub
popa
arpl
out
and
jns
jne
pop
mov
add
pop
iret
mov
ficomps
dec
push
in
je
sbb
mov
xchg
iret
mov
jno
mov
add
cmpsl
frstor
jmp
stc
xor
loopne
ror
jbe
aad
jbe
push
lret
and
mov
rclb
pop
xchg
ds
jecxz
push
pop
cvtps2pi
out
sahf
test
mov
stos
add
mov
xorl
and
pop
das
jge
aaa
stos
cmc
rolb
stos
gs
arpl
dec
sbb
xor
call
xor
hlt
stos
mov
data16
xchg
insb
and
pop
test
xchg
int3
and
rorl
cmpsl
xor
pusha
in
adc
cmp
xchg
dec
aas
stos
sbb
out
cmp
dec
jmp
dec
mov
xchg
or
cs
mov
add
sub
shrl
xchg
pop
jbe
adc
fcmove
xchg
pop
notl
lods
dec
push
and
ljmp
loope
push
mov
add
jb
out
leave
dec
in
xor
mov
hlt
sbb
mov
cmp
or
add
mov
fmuls
insl
inc
fstp
cs
fwait
jns
lahf
nop
mov
sub
roll
loop
bound
sub
push
pop
ret
mov
pop
clc
push
repnz
jmp
sbb
test
add
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
jmp
adc
repnz
mov
test
inc
movb
jle
jno
jle
insl
push
cmpsl
enter
lods
or
out
les
stos
dec
lods
cwtl
xor
mov
jb
pop
jo
in
lahf
mov
adc
mov
xor
push
jg
scas
cwtl
pop
movb
bound
cwtl
cmpsl
push
jg
push
sbbl
sub
push
inc
stos
pop
xlat
push
shl
fmull
dec
xchg
cmp
add
fisttpl
mov
add
lock
lods
mov
es
fmull
mov
jl
gs
sbb
shl
mov
sub
cmp
sbb
add
lahf
jo
pusha
add
dec
adc
mov
pop
jb
rcll
insb
pushf
fcomip
add
xchg
sbb
pushf
test
fcomp
or
imul
decb
test
lods
inc
data16
jle
mov
ds
fsubl
int3
fucom
jo
adc
les
popf
popa
fmull
dec
inc
lds
or
cli
loopne
sti
add
cwtl
dec
pusha
lret
icebp
jge
xchg
jb
xor
mov
sbb
dec
arpl
data16
pop
arpl
push
mov
aaa
or
lret
test
sbb
xchg
mov
push
jae
pop
ret
shll
or
in
les
sub
std
push
rcll
inc
inc
popa
scas
out
cld
addl
test
mov
gs
cmp
and
shll
push
jnp
mov
add
mov
and
mov
shrb
pop
sbb
adc
sbbl
cmp
jecxz
cmp
out
outsl
cmpsl
push
sub
int3
and
shrl
insl
mov
insb
int
pop
and
repnz
mov
pop
jo
out
aad
jno
sub
mov
inc
sub
stc
fbstp
mov
xchg
daa
call
jo
js
mov
stos
cmpsl
push
pop
jno
out
stos
sbb
and
mov
imul
cmp
scas
lcall
jae
push
add
popa
sbb
add
mov
dec
xchg
int
pop
jne
loope
pusha
xlat
jo
mov
adc
mov
std
sub
jecxz
fidivl
pop
leave
mov
in
repz
xor
push
pop
aad
inc
shll
push
outsl
gs
pop
fwait
shr
jns
inc
cmpsl
push
add
mov
pop
orb
mov
fmull
xor
and
mov
xchg
jp
push
cmpsb
adc
pop
cmp
xlat
addr16
clc
xor
pop
pop
mov
or
jb
push
sahf
adc
rcl
mov
insl
ljmp
in
mov
push
mov
jmp
cmp
lods
jge
fldl
lret
sbb
int3
adc
add
inc
push
push
mov
aam
loopne
mov
and
ljmp
xchg
rclb
push
inc
iret
and
iret
mov
or
sarl
lahf
test
pop
popf
loop
jo
arpl
jns
fs
mov
ja
pop
add
loope
jb
inc
mov
cs
sbb
add
xor
aaa
fsubl
out
imul
mov
inc
cld
jmp
jl
sub
jge
jge
inc
sbb
fisttpl
scas
xchg
sahf
sbb
xorb
dec
mov
scas
cmp
or
loope
pop
addb
and
pushf
aam
roll
mov
jb
mov
mov
inc
xchg
rcrl
ret
inc
imulb
sahf
iret
shlb
lret
sbb
mov
pushf
xor
fwait
repz
mov
fldt
jmp
movsl
iret
idivb
mov
subl
lret
xchg
popa
cwtl
pop
call
cs
pop
int3
scas
jle
pop
stos
mov
icebp
call
mov
sub
cmp
push
int3
cmp
jo
scas
lahf
xchg
adc
jo
xchg
cld
sti
mov
xchg
push
xchg
sti
cld
pop
xchg
jno
xchg
push
jnp
jne
inc
test
addr16
push
and
xor
rcrl
adc
inc
push
mov
sub
bound
mov
xchg
bound
bound
lea
aad
xchg
mov
mov
xchg
popa
sahf
fmul
add
pusha
outsl
in
nop
mov
cmp
jnp
or
addr16
pop
mov
push
sbb
int
test
es
mov
push
shll
fisttpll
add
ljmp
faddl
xchg
mov
pop
das
ficoms
in
mov
dec
testl
and
and
shll
mov
jg
repz
out
ds
imull
daa
hlt
sbb
shrb
adc
jmp
inc
jge
or
pop
cmp
lcall
add
add
ss
cmp
std
icebp
sahf
into
aam
pushf
test
lds
jbe
sub
lahf
xchg
cmp
dec
pop
push
lods
mov
mov
jl
test
imul
mov
mov
xchg
mov
cmp
jl
add
inc
lods
ret
sub
xlat
subl
mov
fs
gs
int3
cs
mov
push
cli
mov
xchg
xchg
cmp
iret
scas
adc
pop
pop
xor
adc
aas
enter
sbb
sbb
push
iret
xor
mov
ljmp
fnstenv
test
dec
sbb
cmp
or
add
xchg
adc
sub
mov
scas
or
sbb
push
pop
adc
icebp
inc
cmc
sub
pop
cmp
inc
xchg
or
sub
jne
xchg
fnstenv
stc
test
dec
dec
addr16
lds
mov
push
cwtl
cmp
and
movsl
je
push
cld
fstpt
in
dec
and
xchg
cwtl
call
sbb
int3
add
inc
int
pop
cwtl
aaa
push
repnz
fists
fwait
imul
jmp
sbb
cmp
sti
adc
leave
jp
shl
lcall
pusha
gs
imul
shlb
jne
jne
xor
or
popa
push
outsb
xchg
daa
xor
out
psubw
inc
push
mov
jge
inc
clc
jmp
adc
sbb
ror
cmpsb
sub
and
and
mov
push
aad
sarl
xor
and
jnp
lds
testb
pusha
jp
or
bound
xor
xor
push
add
popa
orl
aas
mov
xor
jmp
nop
cltd
fstl
xlat
push
mov
stc
ret
daa
inc
and
jle
xorb
mov
out
lds
clc
sarb
cmp
cmpsb
push
into
stos
in
xor
xor
data16
das
in
loopne
ds
outsb
mov
sub
push
jge
rol
dec
inc
mov
inc
div
mov
imul
clc
fmull
popa
dec
xchg
cmp
jbe
sub
mov
daa
mov
or
or
jno
jp
push
mov
mov
push
or
subl
sbb
push
and
xchg
les
fsubr
mov
jg
shrl
aas
mov
scas
jecxz
dec
xor
add
in
sbb
sub
test
xchg
adc
mov
xor
std
mov
mov
and
je
pop
dec
jmp
scas
xor
pusha
imul
jae
fadd
gs
fmul
or
and
ret
sub
pop
mov
xchg
push
or
insl
js
testl
push
add
inc
cli
test
or
fcmovnb
add
dec
cs
fstps
rorb
test
push
iret
mov
pop
push
cmpl
cmp
push
push
or
nop
mov
and
pusha
xchg
pop
repnz
push
pop
enter
nop
push
adc
adc
scas
cmp
xor
iret
and
inc
and
jns
leave
shlb
push
sub
mov
add
xchg
pop
jecxz
daa
mov
in
arpl
mov
mov
jg
pop
jle
mov
cmp
push
lods
cmp
bound
int
xchg
ret
add
or
or
jo
sbb
mov
inc
dec
adc
nop
pop
and
lret
xor
fisttpll
fwait
cmp
mov
enter
xchg
jae
push
sbb
bound
fs
and
daa
pop
sub
add
sub
push
sbb
out
int
repz
mov
out
sbb
sarb
orl
sub
in
stos
dec
stos
scas
jmp
push
fsubs
push
lcall
add
sbb
lock
dec
out
mov
cmp
mov
push
xchg
xchg
mov
scas
sub
rorb
rcr
xor
mov
shl
mov
shlb
and
xor
cmpsl
and
lock
testb
add
sti
arpl
outsl
inc
lods
insb
add
int3
or
sbb
psllw
leave
jg
cmpsl
jecxz
verw
sub
lods
sbb
je
fistps
and
cmp
xchg
and
or
adc
push
js
in
xor
data16
xchg
inc
aas
jns
popa
int
fwait
cmp
inc
inc
adc
cmp
inc
fwait
push
arpl
sub
xor
fnsave
inc
outsb
lods
push
pop
push
xor
adc
push
test
push
test
in
out
aad
push
mov
jno
dec
bound
push
mov
mov
leave
dec
in
jo
adc
xchg
xorl
lret
add
sahf
lods
fcompl
xchg
sbb
ss
les
xor
dec
inc
sti
adc
jle
mov
pop
mov
push
cmp
add
ret
pop
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
push
mov
andl
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
mov
xor
mov
or
add
adc
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adcl
xor
xor
add
mov
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
adc
movl
or
movl
movl
xor
movl
mov
xor
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
mov
sub
or
mov
sub
mov
xorl
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
xor
xorl
add
movl
cmp
movl
jb
addl
mov
add
mov
xor
add
and
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbbl
xor
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbbl
add
sbbl
imul
xor
mov
add
mov
sub
movl
cmp
movl
ja
mov
xor
orl
add
jmp
mov
mov
xor
xor
mov
adc
add
add
imul
mov
sbb
mov
or
mov
sub
cmp
ja
jmp
ljmp
insl
imul
int3
mov
jle
mov
jle
ds
sub
pop
imul
sti
jo
cmpsb
dec
mov
push
test
cli
xchg
mov
sub
push
into
movsl
mov
sbb
cmp
jecxz
push
jb
push
mov
add
or
xor
imul
xchg
leave
ret
gs
loope
cmp
dec
mov
push
pop
cmc
insl
jle
addb
sub
lds
and
repnz
shr
cmc
inc
add
sub
sbb
mov
in
inc
negb
gs
outsl
test
sarb
mov
fnsetpm(287
fldenv
mov
xchg
inc
call
adc
sbb
cmc
sbb
xor
xor
clc
fiaddl
test
in
imul
xchg
es
cwtl
dec
mov
imul
aad
and
push
ja
pop
pusha
mov
mov
cmp
pusha
xchg
pushf
push
sbb
push
roll
and
jb
ret
push
mov
aad
mov
lret
cmp
sub
add
pop
sub
pop
outsb
shr
push
je
jge
in
or
sti
cmp
stc
jnp
test
iret
lcall
subb
cltd
sbb
ret
xchg
add
add
inc
cmp
xorl
rol
dec
sbb
pushf
xchg
outsb
bound
xor
popf
lret
stos
jmp
xor
pop
add
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
rorb
push
mov
push
stos
mov
bound
ret
adc
mov
jle
inc
sbb
adc
sub
ja
xlat
aam
push
dec
pusha
inc
cmc
dec
add
sbb
and
loopne
in
fstpl
pop
mov
cwtl
pop
add
popa
inc
dec
jbe
xor
in
int3
test
jns
pusha
stc
popa
sub
pop
mov
adc
dec
popf
loope
andb
push
jecxz
in
add
btc
or
leave
or
jb
loop
andb
jmp
addr16
decl
sti
loopne
push
xlat
cmp
or
cmp
xlat
add
daa
xor
adc
mov
in
xchg
and
jp
sti
mov
push
dec
daa
daa
scas
pop
jbe
daa
xlat
and
rol
add
stos
shl
es
popa
sarb
cs
ds
aad
jge
cmp
test
xlat
jns
rol
lods
sub
stos
mov
push
ficomps
es
nop
adc
add
sbb
out
shrb
ret
dec
aad
dec
sbb
js
xchg
sbb
pushf
inc
rorb
jae
and
mov
shrb
mov
rolb
int3
lcall
pop
mov
out
xor
mov
orb
jae
ja
ljmp
rol
and
daa
xchg
aam
and
inc
cmpsl
roll
jnp
in
int
or
stc
cltd
or
jecxz
add
cmp
les
add
int3
mov
jmp
fs
popf
insl
pop
gs
xchg
popl
push
adc
jle
jg
jle
ret
in
mov
stos
fwait
jle
imul
xchg
pop
rorb
leave
xchg
mov
pop
mov
repz
pop
mov
mov
nop
ds
dec
push
daa
pop
fwait
jns
push
or
cs
lods
cmp
aas
xor
inc
jmp
push
repz
dec
jbe
addr16
sbb
pop
sbb
xor
addb
mov
bound
popf
mov
mov
and
cmc
loopne
mov
call
scas
push
cmp
xchg
pusha
add
rcll
and
xchg
fwait
dec
jge
push
xor
rorb
sti
mov
out
out
sti
out
push
sbb
lret
jge
loopne
mov
jle
and
inc
sahf
lods
hlt
dec
sub
ss
xchg
sub
jg
in
mov
std
testb
push
imul
lcall
pusha
add
and
stos
into
cmp
aaa
andb
pop
test
sub
sub
dec
inc
mov
cld
push
xor
jae
movsl
sbb
fistps
xchg
jae
dec
sub
mov
cltd
sbb
vmovaps
lea
out
pop
lret
push
sbb
pusha
jle
xchg
fldl
idivb
mov
popf
cmp
pop
push
sbb
imul
mov
stos
pop
push
pop
pop
mov
pop
je
sbb
rcrl
clc
jmp
xchg
push
int3
jns
imul
in
testb
in
push
jle
mov
jle
xchg
adc
xchg
pop
cwtl
mov
popf
adc
fisubrl
mov
cmp
es
divl
fsubrl
sti
inc
sarl
rorb
idiv
or
cld
cmc
pop
scas
addr16
mov
jo
aad
test
fildll
jnp
pop
or
inc
lcall
and
push
cli
add
pop
xor
xor
loop
dec
je
xor
or
test
dec
movsl
jecxz
pop
push
push
push
ret
ror
fcoms
pop
call
popf
cbtw
lods
xor
test
jmp
jo
fldenv
push
cmp
push
stos
jl
lret
xchg
lods
mov
sti
mov
mov
xlat
jl
push
lcall
inc
mov
adc
loopne
xor
lahf
jno
adc
jns
cmpsb
test
call
cld
push
dec
add
mov
sti
aad
dec
push
jge
popa
lahf
cwtl
push
pusha
jo
push
dec
lahf
pop
push
mov
jg
stos
pop
ljmp
sub
call
outsl
insl
lods
cmp
gs
and
test
jbe
inc
mov
push
inc
stc
or
push
cmp
cmpsl
outsb
js
aam
scas
sub
sub
ljmp
movsb
stos
iret
xchg
fcmovbe
push
test
sbb
stc
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
hlt
mov
add
pop
mov
cmpb
jle
jg
jle
inc
icebp
sahf
lods
insb
sub
popa
cmp
mov
andl
inc
ss
stos
jno
into
lods
adc
mov
lods
inc
pop
fistpll
push
rorb
gs
mov
pop
movsl
loopne
sti
mov
push
or
shlb
in
inc
pop
adc
rolb
sub
mov
xchg
out
pop
sub
push
ret
pusha
in
adc
inc
insl
sub
push
pusha
jae
jne
mov
mov
sub
xchg
mov
imul
cmc
scas
cmc
ret
cmp
cmp
mov
xchg
les
shll
movsb
insb
into
sbb
sbb
xor
dec
aad
inc
mov
loop
aaa
xchg
inc
jae
push
insb
imul
add
mov
mov
shrb
adc
sub
sub
mov
aad
sti
ljmp
mov
sub
jmp
ret
into
sti
dec
call
imul
sbb
movsb
dec
scas
mov
rolb
repz
insl
push
aam
fists
jp
aaa
fstpt
xor
jmp
push
adc
xchg
jo
sbb
out
xor
negb
mov
pop
push
xchg
sub
or
or
mov
jge
mov
cmpsl
xor
add
aad
cmp
out
call
daa
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
dec
push
dec
push
cmpsl
xor
sahf
push
imull
jle
mov
jle
or
pop
push
push
lock
sbb
push
add
ja
xchg
inc
in
out
sub
rolb
push
test
and
ss
push
xchg
add
xchg
fiadds
imul
movups
dec
mov
sub
in
sbb
call
pop
call
dec
in
sahf
cli
js
or
jg
add
mov
shll
hlt
fiadds
mov
gs
or
lock
mov
hlt
lcall
and
inc
mov
add
adc
lret
xor
inc
scas
in
and
imul
bound
push
fcoms
lods
ss
xchg
cmpb
inc
jno
test
cmpsl
dec
ret
cmc
push
nop
ret
sbb
pop
fdivrs
sub
das
dec
hlt
lret
lods
in
cmp
sbb
leave
mov
daa
mov
arpl
mov
push
mov
pop
test
sbb
pop
and
les
and
cmp
je
dec
fisubrl
fidivl
ljmp
push
pop
rorl
sub
sbb
pop
fstl
xor
arpl
push
or
sub
jmp
das
inc
sub
sbb
repz
enter
pop
lods
jle
add
add
cltd
xchg
mov
sbb
pop
xor
add
mov
mov
mov
mov
jmp
andb
addw
out
sub
mov
jle
adc
xchg
xchg
or
pop
pop
xchg
pop
pop
loopne
sub
cmp
cli
sahf
lcall
lret
lret
jnp
push
adc
fidivs
pushf
xlat
fdivrl
xor
es
int3
adc
dec
divb
aad
sbb
test
aam
xor
add
add
call
adc
jp
cmp
clc
lahf
cmc
in
cmc
aad
cmp
mov
pop
div
xchg
xchg
sbb
dec
and
mov
outsb
popf
fisttpl
fidivrs
orb
fistl
dec
cmp
mov
pop
sbb
stos
scas
xor
cmp
cwtl
and
ds
jle
mov
shlb
cmp
mov
pop
lods
loop
and
mov
jbe
fldl
jle
mov
cmp
test
inc
push
mov
dec
icebp
adcl
mov
cli
cwtl
push
sub
inc
sbb
lea
andl
lret
jl
jno
in
push
dec
fwait
mov
out
scas
mov
xor
mov
jl
ljmp
popa
sub
mov
add
pop
push
aaa
test
ljmp
leave
cmovbe
ds
mov
aad
sub
inc
inc
lcall
push
sbb
clc
hlt
push
repnz
add
jmp
test
xor
push
mov
xor
mov
xchg
sub
jle
jg
jle
outsb
hlt
fstpt
cmp
fucomp
std
xor
mov
insb
sub
push
push
sub
insb
sub
popf
or
mov
fs
stos
xchg
stc
lds
ficompl
or
pop
pop
stc
insb
mov
push
mov
push
xor
push
sbb
in
xchg
aaa
push
pop
loop
dec
jecxz
push
mov
xchg
xlat
mov
popf
mov
pop
lds
aad
test
mov
ljmp
std
jbe
inc
and
sbb
inc
mov
fwait
and
into
sbb
jge
mov
mov
pop
jge
mov
push
leave
mov
subb
inc
nop
fldt
pop
arpl
je
add
in
dec
pusha
and
mov
xor
popf
jae
jmp
mov
into
gs
cld
sbb
movsb
xor
adc
shll
jle
scas
ds
and
js
jecxz
inc
cmp
enter
mov
mov
and
push
hlt
xorb
or
fisttpll
pop
cmovae
xchg
hlt
mov
xor
insl
mov
add
or
mov
in
cld
inc
in
cltd
pop
mov
ljmp
jo
xor
test
jo
or
test
jo
cmpsb
push
xchg
cmc
xchg
sbb
push
push
in
rcrb
jg
outsl
sbb
enter
int3
mov
movsb
addl
push
adc
ss
xor
push
es
fs
push
in
mov
mov
mov
mov
mov
xor
add
jmp
in
push
adc
movsl
aas
push
repz
jle
jg
jle
inc
and
insb
hlt
or
lods
xor
xchg
aad
xchg
inc
add
push
fcoms
push
addr16
xor
jb
sub
std
sub
loop
cmpsl
jae
mov
sbbl
pop
dec
add
mov
test
cmc
ret
dec
roll
add
xchg
je
iret
imul
cmp
shrl
pop
xor
fcmovnu
cmp
js
or
lods
mov
mov
push
incb
lret
or
jle
push
or
into
push
dec
sbb
jle
inc
push
cmp
in
insl
fimull
lret
add
out
jl
xlat
mov
mov
push
xor
jno
add
andb
insl
xor
mov
fldt
push
rclb
test
mov
test
dec
pop
and
mov
lds
mov
push
fdivs
jecxz
ja
push
std
mov
ret
test
arpl
std
lret
inc
je
inc
push
scas
inc
and
sarb
lret
dec
inc
cmp
jb
pop
or
mulb
aam
shrb
mov
stos
xor
jae
mov
fnstcw
pop
sub
push
mov
fimull
popa
repnz
rcrl
and
scas
mov
shrl
test
into
enter
sub
mov
mov
aad
test
sbb
jmp
or
adc
inc
jmp
stos
loop
push
xor
push
pop
in
xchg
pop
popf
jb
add
call
in
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
jmp
testl
xchg
and
add
popa
mov
jg
jle
sahf
sbb
adc
ss
rol
addr16
jmp
mov
flds
lock
mov
and
inc
test
int3
cmpsl
hlt
cmp
xchg
jbe
xchg
add
mov
adc
ret
jl
js
sub
in
xor
adc
adc
popa
movsl
mov
xchg
mov
gs
pop
je
stos
xor
fbstp
jns
push
cmc
and
ljmp
adc
push
mov
mov
ds
sbb
or
movl
mov
xchg
dec
outsb
mov
dec
pop
cmp
xor
add
cmpsl
fwait
aaa
data16
adc
iret
xchg
decb
repz
inc
jl
push
js
inc
adc
xor
sbb
mov
aaa
and
and
xchg
and
xchg
loope
sub
pushf
icebp
enter
add
hlt
ja
and
ds
cmp
cmp
mov
xlat
rclb
into
ja
mov
add
cld
nop
push
mov
jecxz
loop
xchg
jns
cmp
sti
out
popa
jg
sub
lret
imul
mov
mov
pop
std
clc
mov
fdivs
mov
jbe
or
add
xchg
in
xor
lret
repz
mov
rcr
mov
mov
add
loope
faddl
stc
imul
jmp
mov
jns
dec
mov
je
dec
enter
mov
jle
pop
call
stos
mov
or
lret
cs
int
cmp
rol
lds
movsb
xor
dec
out
xchg
pop
loop
fld
popf
cmp
and
cmpsb
mov
mov
mov
clc
insb
push
inc
cltd
nop
mov
stos
in
fwait
cmpsl
lret
adc
std
xor
and
push
jl
in
aam
sub
mov
setb
ljmp
jae
daa
lcall
jecxz
jecxz
mov
inc
push
mov
test
add
fnstsw
pop
mov
lret
shlb
xor
xlat
pusha
clc
shll
pop
inc
pop
pop
fdivrs
lock
out
or
fmuls
gs
int
rolb
pop
loop
clc
jge
inc
cmp
rclb
push
or
sti
rcll
cwtl
xor
push
xchg
stc
adc
pop
xchg
sub
cs
js
daa
test
xchg
inc
rorl
aaa
mov
and
xor
ds
js
sbb
addr16
dec
pop
mov
shl
dec
push
lcall
lds
popf
mov
leave
dec
clc
aad
lret
adc
mov
inc
bound
insb
mov
xor
cld
jl
mov
push
stos
ljmp
test
outsl
cltd
dec
or
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
jmp
pop
mov
sbb
or
mov
and
mov
jle
ds
movsl
loope
or
or
cli
push
lret
dec
js
adc
jnp
aas
out
jbe
fbld
in
xor
cwtl
lods
inc
add
push
mov
lahf
test
scas
aam
scas
xor
inc
mov
dec
push
sahf
std
jbe
sub
xchg
mov
clc
cmp
push
lods
cmp
rclb
fwait
mov
das
jmp
rolb
insb
jg
out
mov
xchg
ja
movsl
ret
dec
mov
pop
cmp
sbb
push
or
sbb
or
insb
ret
cmp
pop
rcl
fnstsw
and
imul
js
xchg
subb
mov
jnp
mov
pushf
js
call
jbe
add
mov
clc
lret
mov
movsl
pcmpgtw
aas
dec
js
cld
lods
shr
mov
mov
aas
ret
adcb
sub
movsb
shrl
ss
mov
scas
dec
or
adc
jno
dec
shll
xorb
aaa
sahf
insb
inc
jl
sbb
movl
dec
stos
addr16
mov
ja
push
sub
add
aaa
mov
sbb
jbe
adc
sahf
fmulp
mov
lahf
add
rol
sbb
scas
outsl
imul
jmp
mov
stc
leave
add
ds
scas
fwait
mov
and
lret
sub
aaa
push
loope
sbb
xchg
jmp
xchg
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
or
push
or
mov
sbb
mov
movzbl
add
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
mov
xor
mov
push
mov
add
jmp
sub
in
cmpsl
insl
ret
mov
inc
shlb
jle
jno
jle
sub
aas
dec
popf
jne
mov
sub
popl
lret
fwait
cmpsl
rcll
cwtl
pop
cmpsb
ja
sub
pop
aad
enter
push
inc
jno
push
test
pop
inc
push
cmp
mov
in
add
mov
shrb
dec
dec
inc
ss
push
mov
cmpsl
inc
and
or
shll
mov
jbe
stc
shlb
add
fnstcw
cmp
pop
push
pop
and
fs
dec
push
bound
fistps
mov
xor
mov
xchg
ds
subb
xor
dec
test
enter
jnp
punpcklwd
pop
jne
jbe
insl
xchg
shl
lahf
pop
aam
add
xchg
aam
dec
mov
pushf
lret
cli
inc
jne
lcall
stc
pop
jmp
out
cmp
addb
bound
pop
mov
mov
or
cmp
sbb
and
push
test
lret
mov
lret
ds
imul
inc
xchg
dec
test
lock
pushf
fs
repz
mov
outsb
in
pop
xchg
test
mov
and
frstor
lea
xor
pop
scas
or
mov
daa
sbb
lods
nop
test
js
rcll
cmp
cmpl
or
or
xor
xchg
movsl
cwtl
lcall
arpl
jmp
das
jne
add
jns
in
cmp
sbb
flds
les
rcrb
mov
xchg
mov
cmp
xor
decb
dec
dec
mov
insl
hlt
sbb
pop
sub
movsb
xchg
mov
or
push
fldcw
pusha
cmp
xchg
mov
je
outsl
cli
inc
xchg
test
mov
mov
test
lahf
jmp
icebp
js
std
dec
scas
and
clc
out
jne
pop
sub
dec
fnstcw
fstpt
push
lretw
and
sub
sub
xor
or
cmp
outsb
add
aad
rcr
and
jb
out
jmp
cmpsb
sbb
dec
cmp
pop
ret
sarl
les
push
xchg
jg
push
sbb
pop
push
and
jl
cs
call
cmp
popf
push
movsb
cltd
aas
dec
pop
dec
push
in
bound
and
mov
daa
loop
pop
int3
cmp
pop
xchg
jp
ja
xchg
push
sbb
add
pusha
mov
stos
inc
sti
fsubs
out
jl
les
rcrb
cltd
cmp
mov
push
mov
or
dec
adc
daa
or
mov
addr16
adc
push
test
xlat
and
mov
daa
and
rclb
push
adc
dec
fwait
mov
cmpsb
aaa
pop
in
bound
mov
pop
fsubrl
lods
and
jne
mov
add
sub
jmp
aam
mov
cmp
outsl
add
xchg
popf
adc
rcrb
test
pop
mov
add
jbe
subl
add
cmp
idivl
sub
aad
mov
mov
pop
jb
cmc
dec
mov
xchg
sbb
fwait
dec
stos
lcall
insb
push
outsb
cmc
cltd
stos
insl
lea
sub
mov
pop
int3
push
subl
sbb
repnz
cmp
cmp
je
mov
mov
xor
mov
jmp
cmpsb
loop
fmuls
jge
xor
sbb
cmp
mov
mov
inc
es
insb
mov
cmpb
into
int
dec
mov
cmp
xchg
lods
gs
push
xchg
int3
mov
repnz
mov
inc
push
sbb
cmp
mov
addr16
aad
icebp
xchg
jge
xor
add
or
repnz
xchg
cmpxchg
sbb
aam
out
addr16
sbb
jmp
inc
push
dec
push
or
mov
movsb
mulb
push
imul
mov
xor
out
mov
subb
add
xchg
js
das
call
rclb
repz
int3
iret
out
and
icebp
stos
or
xor
dec
leave
jae
mov
inc
icebp
mov
bound
sbb
mov
call
sub
push
xor
push
cmp
xchg
sbb
push
mov
mov
add
mov
jg
xor
xchg
cmc
shrb
cld
test
and
out
lods
mov
mov
sbb
pop
mov
das
cmpsb
pop
pop
scas
xchg
push
or
out
mov
jns
arpl
fistl
pop
jne
jo
shl
aas
sbb
push
daa
insb
arpl
movsl
sub
xchg
fistps
push
call
in
adc
xor
cli
and
jmp
lcall
jmp
inc
cwtl
lea
imul
popa
fcom
out
pop
imul
outsb
jl
out
int
mov
inc
adc
ret
fistl
iret
inc
dec
mov
pop
int
pop
repnz
aas
out
add
movb
or
adc
in
add
pop
clc
cs
in
sub
test
fcoms
sbb
sbb
sub
es
add
getsec
xor
pop
iret
pop
testl
mov
pop
leave
cmp
mov
outsb
lea
jne
and
cmc
and
nop
and
sahf
and
adc
xchg
sub
mov
mov
jecxz
clc
stos
xor
adc
ret
push
mov
iret
js
das
ds
jno
iret
in
test
xchg
dec
imul
jae
adc
jae
popa
mov
pop
std
xchg
ss
push
scas
add
loope
xchg
stc
xchg
pop
push
roll
xchg
xchg
jp
lea
shlb
jecxz
decl
pop
cmp
cmp
sbb
and
cmp
mov
lods
sub
repz
jbe
aam
sbb
xchg
push
mov
out
push
pop
pop
rorb
call
dec
push
push
xchg
lea
sub
inc
stos
jmp
out
xchg
xchg
cmpsl
test
fsubs
out
bound
int3
inc
push
filds
aas
scas
aam
pop
lock
rorl
xor
adc
dec
enter
cmp
adc
xchg
and
xchg
adc
je
data16
mov
dec
mov
mov
add
adc
fidivl
sbb
pop
movsb
out
inc
xchg
int3
fidivrl
fwait
xchg
jle
push
shr
int3
push
and
int3
jecxz
sub
mov
push
xchg
daa
jne
xor
cmp
sahf
arpl
sbb
testb
leave
jp
xchg
clc
cmp
out
icebp
mov
lods
aad
or
out
out
sub
clc
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
jmp
testl
arpl
xchg
nop
pop
push
cmp
mov
insl
lcall
push
test
stc
in
dec
cltd
adc
cmp
mov
and
arpl
or
inc
repz
test
mov
or
pop
arpl
lret
jo
inc
dec
mov
rcr
lahf
push
mov
xchg
pop
pop
adc
jmp
mov
mov
lock
jmp
dec
and
shlb
xor
mov
enter
pop
push
shll
add
data16
loop
sub
add
scas
scas
and
sub
js
mov
jle
cmp
sub
les
repz
sub
bound
sub
dec
cmp
arpl
sbb
sbb
cli
das
cmp
jo
add
mov
nop
pop
push
dec
cmc
movsl
std
mov
mov
pop
iret
adc
sbb
jge
mov
sti
pushf
insb
mov
mov
dec
in
insb
int3
lods
xchg
ret
inc
fldl
lock
and
dec
ret
adc
std
cmp
or
mov
push
lret
adc
cmpsl
fs
enter
push
jo
stos
sahf
je
mov
jg
inc
lahf
test
push
cmp
mov
xchg
stos
adc
jmp
cli
call
dec
and
cmpsb
cmp
fstpl
adc
dec
inc
add
sub
pusha
gs
add
mov
arpl
mov
mov
cmp
dec
cmc
outsl
fbstp
enter
and
or
sbb
out
jl
mov
mov
in
and
lahf
inc
push
sti
addl
mov
mov
fwait
test
imul
sub
rorb
pop
cmpsl
jne
mov
cmc
mov
mov
mov
mov
pushf
jne
pop
andb
in
addl
lds
jmp
dec
cmp
in
mov
or
mov
push
js
mov
cs
pushl
iret
icebp
adc
aam
movsb
popf
sub
jno
dec
add
mov
add
iret
pop
jns
cltd
pop
dec
lock
dec
sti
fwait
hlt
sahf
and
je
in
leave
cwtl
mov
xchg
mov
lahf
lcall
je
lods
sub
add
rolb
mov
mov
mov
int
int
test
pop
mov
out
scas
je
sarb
sbb
iret
loop
xor
icebp
inc
mov
repz
aaa
fistpll
jl
cmc
ficomps
push
pop
adc
add
call
xor
repz
leave
add
daa
add
mov
jmp
pop
push
mov
or
xor
idivb
mov
or
add
lret
jmp
pop
or
push
repnz
test
dec
jmp
mov
xchg
mov
xor
mov
test
insl
mov
and
test
fcoml
pusha
cmp
ret
mov
inc
pop
push
and
mov
inc
or
movsb
imulb
jmp
lret
mov
ret
push
imul
rclb
repz
test
iret
dec
mov
jb
addr16
inc
es
out
mov
out
cmpsb
addl
leave
push
or
into
pop
mov
dec
mov
jle
sub
icebp
fbstp
push
push
popf
or
clc
dec
push
xor
mov
or
scas
cli
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
fdiv
es
jge
jge
jae
dec
pusha
lods
aaa
mov
lahf
aas
jle
mov
inc
lods
sub
inc
xor
stc
push
push
sti
sub
je
div
outsl
mov
adc
in
rcrl
das
adc
ds
sub
dec
sarl
cmp
xor
lea
imul
gs
xchg
jmp
cmpsl
mov
push
mov
pop
push
clc
aaa
dec
dec
lahf
in
xor
call
aaa
ljmp
inc
stos
fsubrs
inc
cld
lcall
inc
lods
jmp
sub
stc
ljmp
adc
xlat
xchg
lods
rorl
dec
cmovns
push
pop
scas
and
and
fwait
pop
sti
ljmp
fwait
pop
inc
pop
xchg
mov
xchg
xchg
test
idivl
neg
cld
pop
cmp
aad
orl
jge
scas
iret
aas
xlat
sarb
fwait
push
add
es
adc
cltd
stos
cltd
jno
aas
stos
or
test
mov
push
pop
add
mov
daa
mov
rcrb
cmovo
push
sbb
inc
or
leave
dec
push
and
inc
mov
jb
push
or
inc
enter
inc
shlb
adcl
into
mov
subb
xor
push
fstps
jno
adc
cs
mov
fst
jo
insl
cli
nop
inc
stos
data16
xor
dec
and
sti
mov
mov
pop
stos
or
add
xor
fisubrl
xchg
cmp
loope
enter
pop
jnp
pop
rcpps
repz
xchg
jnp
popa
fcomps
push
sbb
jbe
jno
add
fisttps
loope
and
jle
jp
mov
adc
inc
rorb
inc
jno
pop
ret
and
rclb
cmpsb
std
ljmp
std
dec
lea
test
inc
into
push
lock
shll
pop
inc
test
loopne
js
scas
call
xor
pop
pop
mov
mov
cs
or
aas
out
jmp
pop
mov
push
inc
nop
dec
jae
jp
pop
pop
sub
pop
sub
lock
iret
pusha
ret
pop
or
fdivr
pop
adc
xchg
jmp
xor
std
divb
xor
in
mov
jmp
xchg
push
movsl
inc
and
nop
cmc
lea
jb
pop
jle
or
lds
pop
ds
cmp
cld
mov
add
xor
mov
fwait
xor
std
jle
scas
fwait
jle
adc
test
flds
and
dec
sub
dec
aad
pushf
mov
cmp
loopne
cmc
cmp
xor
jbe
mov
lahf
add
sarl
cmp
adc
pop
adc
movsb
mov
movsl
add
mov
ds
sahf
jecxz
pop
cwtl
jge
out
fs
arpl
mov
bound
je
js
enter
scas
add
in
push
ds
dec
cmpsl
lahf
inc
lahf
je
popa
and
jmp
pop
push
hlt
lcall
cmp
and
dec
dec
jmp
inc
stc
aam
adc
push
or
fldenv
or
nop
or
mov
mov
fs
mov
and
or
xor
repz
inc
insl
mov
ds
xor
sbb
out
push
and
mov
cltd
sahf
cld
mov
pop
aad
cmp
sbb
rolb
rorb
adc
les
push
lcall
xor
leave
ret
push
mov
mov
add
mov
xor
sub
incl
mov
push
sbbl
mov
xor
movl
cmp
movl
je
mov
decl
jmp
fcmovnb
dec
filds
jnp
cmp
fidivs
jle
jmp
jle
aad
dec
push
adc
cmp
and
mov
loope
out
lods
jno
cwtl
and
fadds
inc
inc
imul
xor
stos
mov
lahf
call
je
lahf
fdivrs
lock
pop
adc
pop
shlb
pop
or
lret
add
sahf
mov
jle
push
push
adcl
out
or
in
push
ficoml
mov
out
mov
pop
and
sti
div
and
add
xor
loope
mov
cmp
push
orb
add
loope
roll
cmpb
dec
jae
push
jne
xchg
mov
sbb
repz
mov
shrb
add
cwtl
je
sti
gs
bound
rolb
or
lods
repz
decb
lock
scas
mov
xchg
dec
and
out
add
push
sbb
clc
push
pop
std
or
or
outsl
lcall
push
add
dec
popf
or
pushl
push
repz
push
jo
cmp
jnp
outsl
repz
mov
insb
inc
outsl
xor
mov
jl
inc
sbb
cmpsb
ljmp
repz
jp
subl
shlb
hlt
shr
mov
shll
mov
or
cmpsl
mov
stos
stos
fcompl
pop
ljmp
add
bound
cwtl
les
mov
pusha
or
ret
mov
ret
mov
sarb
idivl
or
pop
enter
pop
sub
cmp
pop
xchg
xchg
ret
push
ja
pop
ds
inc
rclb
sahf
mov
arpl
push
cmpl
iret
lahf
and
add
mov
gs
outsl
dec
scas
xor
ds
mov
push
ja
bound
ss
fsubrl
loop,pt
mov
cmpsb
cs
xchg
cmp
nop
jg
push
jle
sub
ret
je
jno
scas
addr16
dec
mov
fs
and
sub
or
dec
movsl
out
inc
outsl
inc
or
out
pop
mov
in
lds
inc
fildl
xor
dec
and
or
scas
xor
xchg
mov
shl
je
xor
mov
rolb
fsubl
fnsave
movsb
orb
cmpb
vpcmpgtd
shrb
test
push
movsl
sbb
in
std
jge
lods
adc
daa
aaa
test
loop
movsl
mov
sub
outsl
out
push
mov
sub
pop
cmp
aas
xchg
push
dec
cmp
mov
adc
shll
pop
cs
xchg
mov
dec
cmc
and
lret
mov
xchg
mov
pop
arpl
mov
dec
jbe
out
sbb
lret
inc
pop
lcall
cmpsl
jo
push
popa
cmp
xchg
sbbl
mov
xchg
inc
stos
fwait
push
jbe
bsf
mov
lods
add
push
xor
hlt
dec
jl
sub
fstl
repz
mov
movsb
out
inc
add
push
inc
add
ret
movl
cmp
movl
jne
add
mov
add
movl
jmp
mov
xorl
xor
add
movl
jmp
xchg
fcmove
pop
fstpl
dec
fbstp
jle
jmp
jle
in
adc
xchg
add
cltd
cmp
dec
fistl
pop
lret
inc
cli
sbb
adc
xor
leave
pop
sbb
scas
mov
leave
xchg
into
push
lods
and
out
paddq
shr
adc
sbbb
arpl
aaa
leave
lods
outsl
jb
icebp
mov
lahf
and
fsub
or
mov
push
jecxz
dec
mov
pop
std
cmpsb
xor
stos
lock
rcl
inc
mov
cmp
dec
cwtl
add
add
inc
decl
sub
lcall
std
outsl
pop
and
sbb
cmp
fwait
or
adc
or
out
hlt
shll
mov
sub
es
into
testl
stos
loope
inc
xlat
out
imul
and
ds
leave
pushf
pavgw
xor
fs
jge
subb
jne
sbbb
xchg
mov
fnstcw
jecxz
push
mov
and
lret
mov
adc
stos
jo
mov
pop
adc
roll
out
out
cs
jg
sbb
push
dec
push
or
inc
sbb
jg
fs
and
dec
xlat
xchg
add
imul
lret
inc
push
test
incb
loope
imul
imul
ljmp
push
cmpsb
aam
loopne
ror
mov
mull
and
sbb
roll
into
xorb
popa
stos
imul
fldt
sarb
mov
sti
mov
sbb
in
adc
push
sarl
stos
ret
or
mov
test
pop
sub
dec
inc
or
scas
adc
int
stos
das
push
arpl
and
and
imul
jmp
shrl
popf
dec
dec
jbe
cmpsb
mov
inc
ljmp
inc
scas
test
or
mov
rclb
jmp
or
pop
outsb
jno
adc
adc
aam
and
fisubl
xor
dec
imul
hlt
inc
cld
mov
sbb
jb
add
pop
aaa
std
or
mov
mov
mov
enter
imul
cmpsl
sarl
cmp
jnp
inc
or
push
and
pop
mov
insl
add
aad
inc
sub
call
cwtl
cbtw
lods
inc
xchg
add
test
cld
test
mov
aad
push
and
mulb
mov
jno
cmp
fdivrl
cmc
mov
mov
cmp
mov
movsb
jbe
adc
mov
popf
mov
popf
xchg
loop
mov
aam
mov
ljmp
jecxz
jg
movsb
mov
pop
push
movsl
fisubrs
adc
shr
mov
jge
roll
xorb
fmuls
lods
xchg
jecxz
sbb
push
push
mov
dec
idivl
mov
hlt
adc
popa
add
lret
andl
lcall
imul
jmp
pusha
mov
out
stc
push
lret
sarl
and
inc
add
jmp
repz
inc
or
pop
inc
and
sub
js
push
fwait
cmp
jle
jmp
jle
lret
nop
pushf
xorb
sub
ss
xchg
out
cmpl
jns
mov
stc
popf
pop
movnti
outsb
mov
jae
sub
mov
rclb
out
cmp
lods
mov
add
inc
pop
shrb
loope
mov
and
cwtl
push
push
dec
jns
aaa
outsl
fcmove
xor
fsubp
fs
jne
dec
ja
cmp
adc
lret
or
je
cmp
push
sbb
mov
out
sbb
mov
xor
add
mulb
add
jnp,pn
sahf
cmp
and
pop
enter
ret
pop
add
push
outsb
out
adc
mov
outsb
push
xor
test
loopne
xchg
mov
or
pusha
dec
fisubrs
es
lret
lahf
fistl
mov
fldenv
pop
mov
jge
push
insb
test
repnz
es
arpl
cmc
jp
pop
mov
popa
stos
roll
push
jecxz
xchg
add
adc
xchg
icebp
mov
adc
je
jmp
faddp
bnd
xchg
fisubs
or
push
loope
lods
cmpsl
movsb
pop
paddq
dec
or
cmp
sub
cmp
fidivrl
aam
push
add
push
lret
or
mov
aam
xor
fwait
mov
add
orl
pop
push
shlb
mov
les
mov
add
aam
jmp
mov
cmp
lret
scas
push
cmp
addr16
xchg
push
mov
ss
fdivrp
mov
xor
data16
pop
lods
lock
and
xchg
mov
push
ljmp
mov
xchg
cmc
lahf
inc
movsl
insb
pop
gs
jns
test
sbbl
lods
sbb
or
test
repnz
jo
push
das
jb
mov
sbbb
jnp
sbb
daa
sbb
pop
hlt
ss
sbb
jbe
or
es
mov
mov
xchg
mov
xor
mov
cmpsl
leave
scas
jmp
mov
fldl
pop
int3
jmp
loope
test
adc
std
popf
test
into
push
aas
push
outsl
sahf
pop
mov
or
or
sbb
enter
incb
movsl
jns
jecxz
dec
push
in
or
shlb
jl
clc
sub
and
roll
and
in
push
sub
test
inc
xchg
das
fisttps
fwait
or
xor
xor
iret
mov
in
jbe
andb
or
dec
dec
insl
data16
stos
mov
push
pop
sahf
sbbl
mov
jo
xor
mov
loope
sub
aas
pop
mov
cmp
in
fdivs
xchg
lods
mov
lret
push
rcrb
std
add
and
jne
push
sub
and
repz
cmc
scas
ss
imul
leave
mov
xchg
jmp
xor
imulb
pop
sarb
cltd
and
lds
mov
stos
fcoml
xor
ret
and
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
sbb
mov
xorl
add
addl
movzwl
mov
xor
movb
lea
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
sub
negl
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
movl
add
movl
jmp
rclb
cmpsb
js
pop
mov
xchg
int
jle
jg
jle
mov
adc
mov
lret
loop
push
stos
push
sub
js
adcb
idivl
test
sub
decb
cmp
mov
sbb
rep
hlt
xlat
pop
mov
jmp
sbb
lods
cmp
outsb
adc
or
in
cmpsb
fwait
mov
xlat
in
mov
hlt
add
adc
and
popf
and
mov
mov
fcmovnu
mov
add
mov
inc
or
pop
jp
jmp
popa
ja
jne
lock
push
mov
pop
outsb
aas
sbb
sbb
xchg
aad
mov
or
iret
sub
lock
jne
inc
pushf
cmp
stos
push
jmp
stos
push
lret
inc
pop
sub
outsb
mov
cmp
lea
inc
and
stos
sub
sub
fistpll
inc
cli
pop
xchg
jae
mov
loope
mov
fldl
jo
mov
in
test
xchg
inc
and
repz
pop
xor
adc
mov
and
out
adc
out
scas
jg
cmpb
sub
and
decb
aaa
inc
mov
loop
inc
clc
and
mov
push
mov
sub
xor
mov
subl
add
jmp
mov
mov
movl
inc
jmp
mov
jbe
pushf
pop
dec
fsubs
pop
mov
or
jle
sarb
jle
aam
dec
mov
out
into
pop
mov
mov
subl
repnz
lods
sub
sub
cs
mov
and
xchg
in
pusha
lds
dec
imul
mov
pop
push
push
mov
in
xchg
pop
aad
jne
sub
std
inc
daa
mov
and
aas
lods
in
loop
push
adc
ljmp
dec
lret
sbb
dec
inc
mov
jne
inc
adc
or
notl
test
es
mov
add
push
push
xor
jl
fcoml
and
push
mov
imul
adc
lock
out
fisttpl
leave
in
rcll
sub
xor
cld
cmp
out
and
dec
stos
jne
or
xchg
pushf
push
push
outsl
popa
xchg
imul
sarl
pop
inc
gs
push
loop
loop
cmp
ljmp
pushf
into
xchg
and
xchg
loopne
dec
xchg
lock
iret
cmp
sub
inc
lock
lods
subl
shll
loope
lahf
adc
mov
mov
addr16
mov
add
mov
stc
add
jmp
clc
inc
jb
mov
mov
xor
add
cmp
je
push
push
jmp
insb
lds
cmpb
xchg
mov
sarb
jg
jle
xchg
xchg
int
push
in
mov
mov
loopne
sti
and
fisttps
mov
into
subl
jp,pn
mov
sbb
mov
and
dec
cwtl
lahf
jl
mov
inc
cmpb
sbb
mov
lock
sbb
push
lods
or
mov
xchg
negl
lcall
lea
jge
mov
mov
mov
movsb
outsb
cmpsb
inc
mov
pop
sub
xlat
aam
andl
xlat
ret
or
mov
ja
sub
out
mov
sub
loop
adc
popf
pop
shr
insl
push
jle
mull
subb
cmp
pop
adc
loopne,pt
pop
lret
pop
add
mov
mov
clc
jnp
rcrl
jno
dec
in
popa
cmp
dec
mov
adc
shrb
or
jmp
shll
mov
cmp
pop
and
adc
clc
mov
sub
jo
pop
lahf
stc
jmp
mov
xor
dec
hlt
leave
adc
push
or
stos
push
lcall
jo
add
lret
andl
fmull
jmp
mov
addl
cmp
cmp
jae
aas
xchg
mov
jo
mov
fcomp
daa
mov
jmp
jae
cmp
cli
vpaddw
incl
xor
jle
sarb
jle
jno
push
adc
das
in
mov
mov
popa
pop
sbb
out
xchg
ret
out
add
xchg
mov
add
cmp
push
sub
pop
jo
negb
xchg
cmp
sbb
pop
xor
es
cmp
add
mov
popa
insl
loop
ret
cltd
add
xor
and
fs
divb
push
call
mov
lock
sbb
fnsave
cmpl
pusha
mov
adcl
repnz
sbb
add
cmpsl
ljmp
xchg
aam
push
jge
push
movsb
and
mov
daa
loopne
xlat
jae
push
test
jmp
inc
lods
dec
scas
push
fwait
loop
imul
cmp
hlt
loope
xchg
out
or
cmp
nop
cmpsb
loopne
pop
push
out
jmp
je
fnsave
sub
out
call
int3
out
in
dec
scas
jno
fcoml
repz
in
and
dec
cmp
imul
cld
xchg
cmp
sub
roll
insb
lock
lock
jle
xchg
icebp
sbb
pop
pop
ds
testb
jg
jle
pop
mov
out
mov
pop
cld
rcll
xchg
ss
add
xor
mov
add
jmp
push
fsubs
pop
xchg
push
or
test
ret
jle
sarb
jle
sub
inc
fbstp
mov
xchg
fdivrs
cmp
in
pop
arpl
and
jecxz
lret
sub
adc
jl
xor
inc
cmp
repz
mov
sub
mov
shrb
into
adc
aaa
inc
pop
xchg
inc
add
test
int3
jge
adc
or
xor
sti
rol
sbb
fdivrs
mov
add
es
aam
pop
dec
out
adc
enter
hlt
call
dec
inc
call
test
sbb
out
movsl
jp
sbb
and
lret
mul
mov
mov
sbb
test
jl
sbb
loopne
in
scas
xor
inc
push
jno
add
loopne
inc
fstpt
iret
dec
inc
dec
aaa
data16
jge
out
cs
iret
or
lcall
xlat
pushf
sub
lods
xchg
inc
mov
popa
shrb
dec
add
cli
daa
pop
sub
mov
cmpsl
ja
adc
iret
xor
mov
fwait
mov
mov
lds
xor
imul
lret
sbb
or
xchg
xlat
hlt
stc
mov
inc
imul
dec
cmp
and
sbb
cmp
repnz
mov
divb
mov
mov
jmp
xchg
sbb
cmp
inc
push
cwtl
pop
test
in
cltd
les
sarb
jle
fldcw
mov
sub
imul
xor
and
cmp
xor
cmp
and
adc
mov
stos
xor
push
mov
ret
lahf
mov
jmp
xchg
imul
scas
imul
cmp
pushf
lcall
jmp
in
xor
pop
bound
inc
dec
inc
pop
inc
clc
push
aas
fstpl
sbb
inc
add
testb
inc
pop
add
cmp
pushf
sbb
hlt
incl
lods
xlat
jbe
loop
push
xor
into
lods
push
ja
add
je
fwait
cmpsl
mov
out
lods
repz
idivl
bound
mov
aam
sbb
add
ljmp
push
shl
sbb
dec
sahf
sahf
xchg
push
mov
cmp
cld
xchg
mov
outsb
icebp
dec
push
call
inc
mov
es
inc
loopne
jae
push
test
subb
popa
insl
mov
cli
icebp
or
xchg
jns
sub
loopne
adc
insl
jo
cmp
insb
scas
leave
lds
jno
lods
loope
push
jg
ds
fisttpl
insl
jnp
dec
addl
mov
or
insl
aam
les
push
in
dec
insl
lods
add
xchg
shll
fmull
adc
data16
nop
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
jmp
fistpll
aas
or
or
jmp
jle
dec
int
sbb
lds
sarb
jle
jmp
outsl
loope
push
pop
cmc
sub
pop
pusha
push
movsl
out
pop
adc
adc
cmpl
mov
into
mov
dec
std
popl
pop
cmpsl
cwtl
dec
mov
add
cmp
mov
mov
pushf
fdivr
imul
lds
dec
mulb
js
sub
lahf
inc
jmp
stos
adc
mov
xor
mov
incb
mov
sbb
push
data16
shl
inc
mov
popf
dec
mov
xchg
mov
ds
addr16
pop
jne
add
inc
adc
aad
cmp
mov
or
jno
push
imul
and
jo
mov
outsl
pop
scas
stos
jo
hlt
cli
call
xchg
mov
sti
clc
sahf
movsb
pop
sbb
pop
sub
out
xchg
mov
jno
inc
int
or
cld
xchg
sbb
mov
dec
sbb
inc
xchg
dec
sub
loope
das
fwait
inc
jbe
movb
lds
push
xchg
enter
pop
aaa
add
movsb
lahf
fs
test
add
jmp
sub
jno
pop
out
bound
inc
pop
pop
and
sbb
mov
sub
sahf
incb
inc
adc
clc
mov
xor
add
mov
mov
xor
add
jmp
mov
rorl
dec
rorl
xchg
mov
rol
jle
sarb
jle
adc
bound
pop
lret
scas
mov
pop
nop
and
cwtl
jl
inc
jp
cmp
xchg
adc
adc
pusha
clc
cmp
ljmp
and
jb
inc
popf
mov
sbb
cmp
cmp
in
test
xor
lods
test
fincstp
test
shll
dec
test
lods
adc
xchg
xor
mov
pop
sub
or
arpl
out
shll
js
sub
stc
test
pop
dec
and
mov
pop
fnstsw
out
mov
inc
jl
pop
push
mov
unpcklps
mov
cmpsl
xor
push
jb
bound
fisttps
and
test
hlt
je
inc
sbb
lods
jmp
push
adc
cmpb
test
adcb
mov
in
fdivrs
ret
in
data16
arpl
in
rcrl
jo
insb
jns
daa
xchg
jecxz
dec
leave
addl
cmp
push
mov
test
movsb
rclb
inc
fdiv
inc
pop
lds
imul
fucomi
push
add
push
xchg
lods
inc
fdiv
mov
lods
sti
inc
add
jge
test
out
inc
add
mov
out
xchg
jmp
fidivrs
xor
or
push
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
jmp
xchg
mov
or
mov
mov
jle
jg
jle
jae
pop
pop
dec
jle
xorl
pop
sbb
push
rorb
dec
aas
mov
das
shlb
movsl
xchg
inc
mov
int3
ds
dec
mov
xchg
cvtps2pd
xor
test
test
cmp
jge
outsb
xchg
add
xlat
je
mov
cmp
xchg
addr16
shll
mov
imul
fstps
lahf
lea
out
cmpsb
cmp
sbb
mov
push
mov
in
popf
cmc
aad
mov
mov
and
cmc
pop
mov
daa
out
adc
cmp
xor
sbb
and
fsubrs
cmpsl
jmp
icebp
sub
insb
test
pop
loop
hlt
in
icebp
icebp
inc
shll
and
push
xor
sbb
mov
mov
cmp
in
cwtl
xchg
fndisi(8087
or
inc
inc
nop
push
pop
inc
sbb
movsl
push
cmc
int
fnstenv
cmp
push
push
push
push
mov
test
test
jmp
dec
mov
mov
lock
mov
cmc
out
out
add
mov
jge
int3
cmp
fstpt
cli
sbb
sahf
dec
dec
shrb
aam
push
sbb
mov
stos
xor
inc
push
out
or
stc
mov
mov
cmp
inc
in
addl
jmp
test
cmp
jge
xor
imul
sarb
jle
dec
jnp
popa
mov
push
dec
mov
adcb
cmpsl
movsl
jae
data16
jne
lea
lock
pop
dec
add
xchg
sub
andb
adc
fldcw
cmp
jbe
inc
xor
lea
aas
in
loope
test
mov
aam
ljmp
inc
pop
testl
inc
ljmp
jbe
ljmp
xor
mov
jmp
call
push
fwait
iret
sti
sub
nop
stc
sahf
and
xor
pop
xor
pusha
jae
in
jae
pop
ljmp
out
divb
or
cmc
xor
xor
sbb
lds
cmp
cltd
sbb
jle
or
lret
pop
in
gs
clc
mov
sbb
insl
movsb
jns
int
fiadds
dec
xor
push
cltd
fidivs
stos
cmp
adc
sbbb
sahf
xorl
pop
shll
inc
add
fsts
loop
xor
mov
mov
notl
mov
repz
push
loop
sub
xorl
insb
sub
mov
xlat
mov
adc
jns
mov
sarb
jnp
push
js
mov
leave
mov
mov
xor
jmp
dec
sbb
fstpl
inc
inc
jmp
mov
sarb
jle
test
int
mov
out
adc
in
jmp
sti
fwait
sbb
mov
inc
xlat
fs
stos
cltd
dec
bound
daa
cmp
mov
cmpsb
and
clc
lcall
mov
mov
scas
andl
xchg
pop
out
push
mov
js
cmpsb
test
sub
sti
xor
loope
mov
call
cld
xor
bound
cmc
in
mov
mov
or
andl
test
add
lcall
jmp
push
cmp
jb
sbb
popf
jno
clc
hlt
jns
out
add
jp
cmpsl
inc
mov
hlt
and
insb
out
in
hlt
cwtl
repnz
bound
aas
in
sub
sub
sbb
mov
dec
jbe
shrl
mov
dec
xor
sarl
adc
mov
xchg
cwtl
lods
dec
cli
adc
xchg
decl
and
loope
sub
add
inc
jo
push
lods
fcoms
sbb
adc
loopne
lods
pop
ror
loop
negb
cli
ret
lock
fwait
and
ds
test
mov
rorb
add
test
popf
jb
add
or
adc
decl
mov
add
mov
pop
leave
ret
push
mov
push
movl
neg
mov
movzwl
adc
mov
mov
subl
xor
add
adcl
mov
mov
adc
xor
or
push
movzbl
or
mov
adcl
mov
add
mov
xor
mov
mov
mov
or
mov
dec
mov
sbbl
mov
mov
adc
mov
orl
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
pushl
push
call
cmpl
jb
mov
xor
add
pop
leave
ret
push
mov
mov
jmp
cs
orl
aaa
xor
jle
jo
jle
scas
jno
pop
mov
dec
mov
sbb
mov
add
sbb
je
cli
mov
pusha
adc
mov
jbe
addr16
loope
aad
clc
paddq
in
insb
enter
int
loop
negl
add
cmp
mov
inc
aas
push
and
popa
aas
pusha
xchg
xor
dec
mov
adc
fs
mov
pop
lcall
stos
mov
inc
and
shrb
sbb
lock
jmp
dec
or
dec
mov
push
cld
lock
xchg
mov
mov
xchg
out
aad
add
jmp
aam
inc
xchg
popf
lret
dec
jl
in
cmpsl
pop
loope
jmp
and
mov
imul
mov
push
test
in
ficomps
cmp
and
test
cmp
aaa
test
push
inc
sbb
dec
pop
aaa
pop
dec
push
jo
scas
shll
and
jmp
fwait
cmc
mov
mov
sbb
gs
push
jecxz
sbb
stos
cmc
imul
mov
inc
inc
push
cmp
dec
jae
jb
icebp
jbe
xor
fsts
inc
gs
mov
pop
fdivs
push
xchg
dec
lcall
mov
int
or
add
dec
or
dec
sub
stos
call
jle
or
ret
jmp
lahf
shlb
bound
mov
int
push
xor
mov
sarb
loope
pop
scas
inc
stos
mov
iret
lret
aam
cmpsb
add
out
fdivp
add
dec
gs
add
int
ret
fwait
xchg
dec
cs
lcall
push
pushf
inc
cmp
pop
es
sbb
fildll
aaa
cmp
aaa
sub
xorb
pop
stc
adc
repz
inc
mov
jg
mov
dec
pop
imul
movsl
and
mov
and
addps
adc
cmp
mov
stos
push
xor
xor
loopw
mov
jo
dec
je
inc
xchg
mov
fsubrp
and
mov
clc
or
stos
nop
idivb
loop
int
scas
insb
out
jnp
mov
sub
enter
or
mov
out
cmp
jns
stos
xchg
fs
mov
das
sti
xor
and
xor
jne
incl
inc
jle
mov
inc
fsubrs
push
sbb
addr16
mov
sarb
div
mov
and
jmp
out
xchg
imul
bound
ret
inc
fistpll
push
jo
jle
xor
pop
adc
iret
and
mov
lds
xchg
dec
xchg
dec
xchg
pop
loope
sti
add
mov
call
pusha
js
arpl
rcrl
push
jecxz
cs
xchg
ret
add
mov
cmp
cs
movsl
or
fadds
pop
nop
mov
mov
cld
dec
sbb
loope
cmc
cwtl
ja
sti
repnz
xchg
enter
arpl
jbe
test
out
scas
dec
das
adc
ss
adc
out
aam
test
sbb
sub
scas
lds
lcall
nopl
rorl
dec
iret
nop
push
cmp
adc
test
or
mov
push
in
inc
mov
sbbb
push
insb
mov
pop
pop
mov
divl
add
in
insb
nop
adc
sbbl
and
jecxz
mov
lahf
sub
call
fwait
or
adc
add
lods
arpl
add
jle
das
xlat
push
mov
jmp
xchg
ja
push
pushf
cli
xchg
xor
icebp
sbb
xor
cmp
push
jns
push
mov
jb
jno
popf
aas
jmp
adc
pop
pop
outsl
sti
cmp
icebp
and
sbb
frstor
ficomps
cmp
cld
dec
adc
bound
rol
adc
fidivrl
lock
cmpsl
imul
pop
jp
xchg
and
xor
orb
pop
adc
cmp
repz
xchg
dec
push
sbb
push
jb
std
pop
fstp
mov
jl
js
mov
jns
mov
xor
loop
xor
jge
das
xchg
lods
pop
cmp
cld
push
shll
ficomps
or
and
repnz
adc
cs
and
mov
mov
mov
xor
dec
mov
mov
push
lea
jp
sar
sub
sub
sbb
inc
mov
dec
movsb
lcall
xchg
out
mov
out
fdivs
or
or
shll
sub
sub
cmp
jge
push
push
mov
xorl
adc
daa
repnz
dec
jp
push
sahf
shll
jno
inc
shl
pushf
test
xor
sub
lock
sub
call
pop
sub
mov
xchg
add
repz
fwait
shll
sti
insb
push
lds
stos
cmp
inc
ret
lea
outsl
jbe
mov
push
sub
jge
dec
jmp
push
push
orl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
adcl
movl
mov
sbb
mov
xorl
mov
xor
jmp
jno
test
gs
or
movsb
outsl
pop
leave
cld
mov
jg
jle
sarb
jmp
js
outsb
mov
pop
sbb
imul
addl
pop
sahf
sbb
fidivl
pushf
lret
into
fiaddl
das
divl
xchg
push
push
xchg
ficompl
dec
dec
lock
rcr
adc
inc
mov
rorb
sti
in
lock
cwtl
enter
mov
fdivs
mov
adc
mov
lods
cmp
xchg
pop
xor
cmp
inc
xchg
loope
scas
fistpll
add
push
fbld
outsb
mov
inc
jle
jle
inc
clc
sbb
pushf
mov
inc
jbe
loopne
add
mov
shrw
inc
mov
mov
or
jne
stos
fisubl
push
and
into
icebp
lock
pop
sahf
or
pushf
jl
mov
or
fisttpll
pop
ss
mull
in
dec
mov
lea
mov
imul
lret
jmp
cwtl
testl
cmp
xchg
loop
mov
xor
dec
jo
cmp
sbb
sub
jl
cwtl
repz
stos
in
je
or
sub
sub
pop
or
cmp
sub
aad
and
jle
lds
popa
sti
sahf
add
dec
jo
pop
std
xor
or
bound
outsb
mov
pop
mov
and
xchg
pushf
or
mov
ffreep
sub
jg
sti
jle
das
jnp
jnp
adc
fs
cwtl
icebp
fcompl
mov
stos
push
enter
cmpb
add
imul
dec
stc
mov
mov
mov
inc
push
mov
xchg
xchg
nop
add
mov
mov
mov
sub
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
jmp
test
pushf
dec
pushf
inc
pop
cwtl
mov
aaa
add
addr16
jle
inc
jg
jle
jmp
xchg
outsb
pcmpeqd
insb
rclb
movsb
and
stos
or
mov
pop
lods
jmp
je
jo
push
sbbb
lret
movsb
fmull
sbb
or
fs
mov
dec
or
adc
mov
out
pop
outsb
and
mov
add
sbb
lock
jle
cmpsb
and
in
adc
add
and
mov
jae
lock
lahf
jbe
fldl
jg
mov
pop
push
mov
dec
xchg
popf
dec
and
dec
and
inc
mov
push
pop
inc
outsb
xchg
icebp
jnp
pop
pop
push
cmp
cmp
adcb
rcrl
sub
ret
and
jae
add
add
jnp
call
gs
push
into
mov
jge
sarb
lods
call
cwtl
or
testb
js
push
lret
fucom
jae
add
mov
out
imul
sub
leave
fimuls
mov
sbb
sub
in
sahf
dec
mov
loope
std
sub
mov
xor
lea
rcll
andl
and
xchg
mov
mov
mov
mov
pcmpeqw
sbb
fistl
inc
stc
adc
mov
mov
data16
pop
fistpl
test
jp
jo
jp
testl
dec
call
jmp
rcl
outsl
add
push
cld
cmp
dec
inc
daa
das
fcompl
sub
push
mov
ret
mov
fs
xor
fs
into
add
mov
std
push
cmp
push
xor
add
leave
ret
push
mov
sub
push
sbbl
push
push
xorl
push
sbbl
call
sbbl
test
je
orl
xor
jmp
orl
push
call
sbbl
test
movl
je
push
push
adcl
call
jmp
subl
call
cltd
cmp
movl
jne
cmp
movl
jne
subl
push
call
jmp
negl
push
adcl
call
test
jne
andl
xor
xor
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
and
mov
movzbl
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
lea
mov
add
lea
inc
mov
inc
mov
mov
orl
mov
add
mov
xor
xor
adc
mov
xor
xor
mov
add
mov
mov
mov
cmp
mov
movl
je
mov
xor
adcl
add
imul
movl
mov
jmp
xor
adc
add
mov
mov
mov
sub
or
mov
xor
add
mov
subl
mov
add
mov
negl
xor
decl
add
movl
cmp
jne
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
add
mov
orl
mov
mov
not
mov
xor
add
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
and
add
mov
lea
and
mov
mov
adc
mov
mov
sbbl
mov
sbbl
xor
add
movzwl
and
mov
addl
mov
or
lea
mov
sub
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
xor
xor
dec
mov
jmp
movzbl
or
mov
xor
xor
add
mov
mov
sbbl
movl
mov
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
pushl
pushl
pushl
push
pushl
push
push
push
call
xor
xor
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
movzwl
add
xor
movl
mov
mov
add
mov
xor
xor
sub
mov
orl
xor
movl
add
movl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
xor
or
dec
mov
jmp
mov
xor
adcl
add
movl
cmp
jne
xor
add
sub
mov
xor
mov
incl
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
xor
xor
mov
andl
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
not
mov
mov
subl
mov
andl
movzwl
add
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adc
mov
subl
mov
xor
add
xor
mov
mov
xor
sbbl
add
andl
xor
subl
sub
orl
mov
subl
movzwl
sub
movl
cmp
movl
mov
movzwl
movl
jg
xor
sub
adcl
sub
mov
jmp
notl
xor
lea
mov
mov
mov
not
mov
movl
cmp
movl
je
movl
mov
movl
movl
movl
jmp
mov
cmp
jne
mov
mov
movl
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
movl
cmp
movl
jne
addl
mov
sbb
mov
xor
xor
mov
add
mov
movzwl
subl
not
sbbl
and
mov
movl
mov
jmp
andl
xorl
mov
notl
pushl
adcl
call
xorl
test
movl
je
jmp
movzwl
mov
cmp
jne
movl
mov
movl
movl
movl
jmp
movl
mov
movl
cmp
jne
sbb
mov
andl
mov
movl
xor
xorl
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
mov
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
andl
mov
sub
push
mov
add
push
call
incl
cmpl
jb
mov
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
mov
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
and
movl
mov
orl
mov
adcl
add
sbbl
xor
movl
cmp
movl
jne
xorl
jmp
lods
inc
movsl
es
lods
inc
pop
push
cmpsb
mov
rcl
jle
fbstp
jle
je
cmp
lods
xor
cwtl
lods
in
cmp
fdivl
shlb
outsl
or
mov
or
adc
push
mov
fbstp
xlat
lret
push
sbb
push
jb
jecxz
fisubrs
mov
stos
lret
repnz
js
cld
sub
idivl
sbb
inc
insl
xor
daa
lods
das
or
adc
test
push
stos
daa
push
ja
xor
lcall
xchg
push
mov
testb
in
sbb
out
cmp
adc
negb
loope
and
out
test
or
int
scas
sbb
push
mov
xor
bound
stos
mov
xchg
sub
ret
arpl
stc
cltd
je
out
dec
mov
js
or
aam
cmpsb
fldt
dec
fildl
pop
mov
cmpsb
add
jl
fwait
into
cmc
ljmp
add
mov
cs
jmp
dec
jl
iret
sbb
ss
sub
jb
loope
mov
clc
movsl
and
inc
jp
cmp
xor
js
push
push
fwait
mov
pop
push
xor
jb
iret
fdivrs
xchg
loop
xor
jmp
fsubl
mov
fnstenv
and
sbb
stc
dec
jl
xchg
das
std
in
xor
nop
jg
or
ficoml
idiv
sbb
arpl
jbe
mov
mov
mov
cs
out
repz
pop
mov
fsubrs
xchg
or
rclb
rcr
xorb
imul
les
push
daa
repnz
sbb
or
bound
mov
movsl
scas
cmp
jb
test
clc
cltd
push
mov
xor
pushf
loope
mov
add
imul
lret
dec
add
add
push
mov
xor
and
dec
push
push
mov
jb
jg
xor
in
in
rcr
sub
and
in
fistps
pop
jb
dec
xchg
push
aad
push
adc
push
pop
add
cltd
mov
ret
dec
lahf
test
push
int
ds
lods
cld
dec
mov
cmc
fsubs
add
pop
add
add
add
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
add
and
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
jmp
mov
pop
outsb
adc
jnp
xor
mov
jle
jo
jle
cltd
or
je
xchg
arpl
mov
xchg
sbb
mov
in
jl
es
loop
inc
xchg
mov
pop
mov
outsl
push
mov
pushf
add
and
loopne
jmp
xor
adc
sub
test
adc
or
mov
lods
jne
aad
dec
insl
push
xchg
add
pop
sbb
jle
dec
cmpsl
xor
call
jns
add
loop
pop
popf
jp
shr
imul
aaa
fnstenv
adcb
hlt
jo
push
pop
cwtl
movsl
fadd
mov
cmp
cmp
cwtl
call
stc
jle
jne
leave
mov
mov
dec
mov
movsl
mov
adc
add
sbb
shlb
cs
shll
mov
fbld
and
arpl
xor
pop
xorl
insb
push
dec
inc
pop
sbb
lock
sub
push
popf
aaa
inc
fcoms
pop
repz
pusha
mov
sub
adc
sahf
adc
add
je
adc
lret
cmp
orl
pop
pop
cmp
xor
sti
in
pop
mov
int
popf
pop
jae
enter
aas
push
aas
mov
decl
lret
fsubrs
mov
sub
and
add
cmpsl
adcl
or
int
sbb
xor
pop
dec
push
std
pop
xchg
outsb
dec
add
and
out
and
js
cld
push
push
loope
mov
or
divl
sub
repz
mov
test
fisttps
jne
mov
xor
repnz
popf
addr16
int3
sbb
mov
pop
rol
add
adc
pop
push
clc
cli
jmp
scas
sbb
pop
iret
cld
adc
or
mov
or
enter
pop
fsubrs
push
aam
and
movsb
cmp
mov
pop
or
scas
inc
pop
fldl
hlt
je
cmpsl
dec
push
xchg
popf
xor
xchg
popf
push
cmp
cmp
mov
sub
test
pusha
xor
xor
arpl
into
mov
pop
aaa
sub
lods
xchg
mov
or
popf
jb
add
ret
push
mov
push
inc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
xor
movl
sbb
jmp
imul
jge
dec
jb
jmp
stc
xor
adc
jg
jle
mov
mov
jle
jb
sub
adc
aam
pop
dec
or
mov
lahf
mov
or
push
popa
lds
and
pusha
inc
jle
inc
or
pop
icebp
rol
dec
mov
movsb
ja
mov
and
mov
push
ljmp
into
lock
xchg
sub
ljmp
inc
jnp
stos
insl
adc
bound
pop
cmc
mov
int
mov
and
push
mov
ljmp
dec
out
push
pop
mov
fistpl
pop
popa
ds
adc
adc
mov
jae
or
sbb
xchg
or
push
mov
sub
sub
ja
dec
ftst
pop
cmp
mov
mov
sbb
sub
out
mov
outsb
push
movsb
jne
sbb
ficompl
adc
or
or
dec
mov
add
das
ret
out
xchg
and
cs
std
cmp
push
mov
fcmovu
adc
cwtl
aas
daa
xchg
lods
scas
sbb
jg
stc
addr16
xchg
sbb
imul
sub
push
cld
adc
rorb
dec
xor
out
sub
inc
add
fcoml
xchg
inc
lds
and
sahf
out
pop
cmp
ret
imulb
and
stos
lea
lret
hlt
inc
and
inc
jg
inc
xor
push
mov
xor
leave
jnp
out
xor
nop
add
mov
xchg
rcrb
outsb
rorb
lea
jl
test
int3
xchg
fwait
std
pop
cmp
jno
jp
jb
jnp
adc
gs
jmp
stos
jbe
push
dec
sub
xor
mov
ss
add
adc
hlt
push
ret
lahf
js
fstl
xor
mov
push
or
mov
add
mov
xor
xorl
xor
dec
mov
add
addl
add
imul
mov
movl
cmp
movl
jne
mov
mov
jmp
fisubrl
cld
mov
adc
shrb
cmp
pop
jg
jle
add
mov
in
cmc
loop
enter
mov
addr16
cmpsl
jb
jp
sub
push
mov
jmp
push
cmp
pop
lds
mov
add
divb
push
sti
sahf
arpl
leave
lret
jne
fstps
xchg
or
xor
popf
loopne
dec
lods
push
cli
enter
ret
push
sti
es
xlat
jb
jne
sub
xor
xchg
xchg
mov
inc
push
scas
push
add
lds
inc
repz
inc
fs
push
lret
adc
test
mov
fnstcw
mov
jge
in
fcomps
cmpsl
adc
andl
ret
gs
ret
jo
mov
in
xchg
add
inc
sbb
fnstenv
push
or
es
xchg
dec
dec
fidivrl
es
push
int
mov
push
xchg
dec
push
xor
cs
xlat
ljmp
loopne
sub
movsl
push
xor
jo
xchg
enter
or
addl
mov
in
mov
fstpl
aam
jg
mov
cmp
sbb
xor
dec
out
scas
adcb
movsl
inc
fmuls
sub
or
in
fdivl
iret
mov
inc
repnz
push
lcall
insl
and
data16
lods
pop
js
ret
sub
jno
jne
scas
repnz
cmpl
jge
ret
mov
xchg
xor
xor
inc
jne
push
psrad
icebp
xor
mov
pop
or
popf
adc
xor
cmpl
lret
popa
mov
adc
mov
push
int
ret
add
jmp
pop
icebp
lds
fs
xchg
imul
jecxz
out
jle
pop
jg
jle
out
lcall
adcl
movl
pop
je
in
add
jp
pop
mov
stos
sahf
push
cmp
inc
ljmp
jo
lock
and
dec
mov
repz
aam
push
or
fildll
sub
add
lahf
inc
mov
inc
or
push
movl
shrb
mov
mov
stc
adc
jne
xchg
xor
rcrl
movsb
aaa
lock
sub
fwait
or
clc
arpl
or
pop
cmc
movsl
cld
notb
imul
xor
xor
inc
xchg
ret
jmp
sub
fldl
xor
cltd
dec
cmp
xchg
in
mov
mov
stc
xchg
add
push
jne
or
sub
ret
or
dec
cmp
movl
jbe
imul
adc
lahf
insl
imul
shll
xchg
xchg
rorb
xchg
dec
adc
insl
ret
shrl
cmpsb
push
push
sti
jecxz
pop
dec
push
scas
mov
mov
push
loope
jp
jmp
sub
andb
aas
xorb
movsl
or
sbb
jl
or
push
push
out
push
mov
dec
inc
jmp
aaa
int3
adc
or
and
cmp
outsl
hlt
sbb
adc
xor
mov
mov
mov
bound
sbb
jp
adc
jne
mov
sbb
enter
icebp
test
jno
adc
mov
lcall
dec
pop
pushf
cmp
mull
or
sbb
and
adc
jmp
mov
mov
mov
mov
mov
jmp
aad
outsl
mov
std
jge
outsl
stos
lock
dec
aas
mov
jg
jle
mov
scas
mov
dec
call
scas
jmp
cmp
mov
jno
mov
lret
pop
fidivl
in
inc
xchg
lret
mov
jo
test
cli
je
sub
sub
jo
cli
inc
gs
add
adc
add
cmp
dec
enter
scas
jp
cmp
and
loop
cmpl
sbb
adc
xlat
lahf
inc
dec
ret
pop
xlat
jmp
dec
jb
dec
fucompp
das
jnp
pop
add
lret
dec
stos
inc
repz
ljmp
adc
cmc
je
and
jns
cmp
jmp
pop
nop
jg
jae
xchg
mov
sbb
mov
lcall
ds
pop
leave
jmp
inc
std
imul
push
cmp
stos
pop
cmpsl
xchg
xchg
fisttps
loope
imul
enter
mov
or
sub
scas
in
popa
or
pop
xor
out
imul
loopne
nop
xor
pop
adc
cmpsb
or
outsb
lcall
cltd
mull
fsubrl
jb
xchg
or
lcall
repz
out
dec
call
out
lods
out
pop
cmp
mov
ja
fs
out
jb
je
leave
les
jnp
xchg
adc
mov
cmp
mov
icebp
jle
lcall
xor
mov
cmpsb
mov
cmpsb
loop
inc
and
cwtl
pop
and
nop
fnsave
jl
xor
insb
inc
in
or
mov
daa
inc
mov
pop
dec
add
or
mov
jns
jl
iret
je
ret
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
jmp
faddl
insl
jns
pop
xchg
xor
loop
jle
jg
jle
mov
imul
push
mov
dec
mov
jl
mov
mov
xchg
sbb
in
mov
push
movsb
fnstsw
jbe
xchg
cli
sub
sbb
jg
jg
int
lret
xchg
fldln2
inc
out
pop
xchg
int3
cmp
cmp
jo
cltd
pop
pop
inc
adc
arpl
xor
out
add
shlb
testl
daa
lods
or
clc
iret
jb
pop
test
in
add
pop
mov
jne
cmp
in
aad
xor
sbb
repnz
mov
repnz
adc
jae
mov
add
mov
push
sbb
adc
inc
imul
and
data16
sub
cmp
dec
jno
and
xchg
lret
cmpsb
sarl
fidivl
stos
cmp
decl
cmc
into
scas
inc
mov
out
jge
lret
ret
rol
lea
pop
mov
aad
sub
sbb
sub
sbb
xchg
cmp
mov
enter
sub
mov
push
aam
jl
into
jne
shl
sbb
inc
cltd
jmp
jl
fdivrl
sbb
push
lret
out
sarb
add
fcompl
fisubl
daa
xlat
adc
jg
dec
jne
push
scas
push
mov
inc
das
xchg
xor
out
cs
addb
dec
fistpll
mov
bound
cmp
test
inc
in
aam
loop
jns
jge
cmp
mov
xchg
add
fcomi
incl
pop
pushf
ja
es
jl
lret
lahf
sub
addr16
sub
arpl
fistpll
in
repz
and
push
adc
aas
pop
leave
ret
push
mov
sub
mov
mov
sub
imul
jmp
adc
inc
and
scas
jge
insb
add
in
jle
jg
jle
cmp
aam
imul
jge
cltd
jmp
push
xor
pop
jl
sub
stos
add
pop
ljmp
rcrl
addr16
add
add
push
imul
in
pop
mov
xchg
pop
xchg
fs
push
jb
adc
fcomps
mov
mov
mov
mov
loope
jge
jae
or
xchg
fdivrp
outsl
fiadds
frstpm(287
aad
and
rol
push
xchg
sub
add
sub
jecxz
mov
mov
xchg
dec
push
mov
adc
push
cmp
cmp
fdivl
push
xor
cltd
cld
les
xadd
jg
jmp
outsl
sahf
lret
xlat
cmp
mov
lret
mov
pop
lock
pop
mov
mov
insl
insb
or
mov
jne
js
fimuls
in
sub
fsts
adc
nop
mov
or
and
pop
pop
imul
push
popf
std
lds
ret
addr16
mov
and
push
scas
cmp
inc
andb
xor
inc
cld
xor
add
adc
add
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
or
mov
push
add
mov
mov
sbb
xor
mov
sub
mov
xorl
add
xorl
mov
mov
xorl
push
subl
push
andl
test
movl
je
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
movzbl
xor
imul
or
mov
xor
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
dec
mov
xchg
sub
xor
jmp
mov
add
aad
jl
mov
xchg
scas
mov
jg
jle
out
les
inc
jecxz
mov
cld
mov
jbe
cmpsl
int3
imul
xchg
cltd
jae
jno
mov
fs
mov
cli
jnp
jp
jno
out
mov
xchg
inc
icebp
shlb
popf
call
xor
shlb
rclb
outsl
lret
insl
push
ret
ljmp
jb
push
pop
xchg
lret
push
mov
jae
sbb
ss
ret
std
imul
xor
loopne
rcrl
adc
je
dec
loop
lods
jo
ljmp
xor
mov
sub
add
mov
cmp
imul
popa
sub
push
bound
aad
imul
pop
adc
mov
and
cmpsl
inc
mov
ja
inc
xor
movsl
cmpb
jmp
cmp
cmp
pminsw
or
cmp
push
jne
push
push
fisubrs
scas
sub
adc
insb
loope
gs
out
lret
xor
cli
mov
pop
out
jne
sub
movsb
sbb
push
xor
jb
fstpl
or
sbb
mov
and
mov
or
jmp
gs
xor
pop
xchg
lods
mov
in
jge
jle
aas
jg
jle
cmc
scas
sbb
ret
aaa
and
loop
xchg
bound
mov
int
lret
dec
lahf
sahf
and
inc
push
dec
mov
xchg
cmpsl
sti
mov
loopne
pushf
mov
jmp
xchg
jo
scas
test
inc
repnz
int3
outsb
jmp
mov
lret
xor
pop
pop
adc
or
jne
jb
js
ss
into
pushf
xchg
or
add
mov
xor
lods
add
or
loopne
push
sub
aam
xchg
and
sub
fcompl
cmc
aad
in
movsb
mov
cmpsb
cmpl
cmp
and
cmp
dec
loopne
inc
faddp
shr
mov
incl
xchg
dec
mov
movsb
push
mov
mov
into
mov
mov
cs
or
mov
lock
test
enter
jle
fldt
movb
inc
or
xchg
jns
cmp
xchg
push
push
xchg
insb
clc
aas
in
fbstp
push
push
xchg
cs
adc
push
push
stos
add
repnz
push
cltd
sub
jmp
or
mov
sbb
mov
xor
mov
negl
xor
sbbl
xor
add
mov
mov
mov
je
xor
mov
xor
xorl
jmp
mov
inc
aam
push
mov
sbbb
jle
jg
jle
in
aad
cli
mov
mov
lidtl
imul
xchg
imul
gs
bound
lods
adc
fwait
imul
push
adc
jge
jmp
push
mov
stc
adc
imul
jle
stos
push
pop
pop
leave
sub
scas
je
adc
loopne
mov
cmp
push
xor
add
pop
fisubl
das
iret
mov
int3
pop
lcall
in
add
adc
adc
xchg
in
ss
fcmovne
dec
or
pusha
cmc
daa
push
ljmp
imul
push
jne
push
mov
dec
and
push
testl
into
aad
sbb
repnz
pop
dec
push
test
enter
negl
jl
xchg
and
dec
test
cld
pop
dec
stc
pushw
outsl
and
add
cwtl
sar
lds
xor
jge
or
fimuls
call
mov
insl
insl
stos
cmp
popf
inc
mov
mov
mov
fadds
leave
int
ret
movl
cmp
movl
jne
orl
pushl
call
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jb
mov
xor
mov
addl
xor
jmp
jns
mov
pop
insl
jns
lods
iret
loopne
aam
popa
insl
stc
jle
aas
jg
jle
lds
sbb
mov
in
sti
je
cmp
push
incl
add
jae
mov
xor
test
stc
jecxz
jo
push
mov
and
push
adc
orl
mov
cld
or
cmp
shrb
push
and
mov
daa
in
insl
int
ret
pop
dec
mov
adc
xchg
xchg
cs
add
dec
sub
fisubs
andb
stos
xchg
add
pusha
sbb
into
notl
dec
sbb
dec
push
dec
or
add
xchg
sbb
or
stos
mov
imul
gs
xchg
adc
xor
fwait
addr16
fisttpll
stc
enter
mov
cmpsb
add
fildll
notb
pop
inc
out
stos
dec
jmp
sub
cld
jecxz
adc
scas
jg
mov
pop
mov
mov
xchg
push
jmp
out
addb
loope
dec
mov
inc
dec
mov
jecxz
xor
jnp
pop
push
and
cmp
or
mov
cld
rcr
mov
adc
fsubr
rorb
sbb
enter
push
inc
add
aaa
add
je
sbbl
pushl
andl
pushl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xorl
mov
add
mov
xor
orl
add
cmp
movl
je
add
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
sub
mov
jmp
fldl
xor
cmp
xchg
xchg
jg
jle
loopne
int3
shrl
pop
ds
or
lret
ds
mov
inc
sbb
mov
push
les
adc
imul
rcr
cs
rcll
dec
dec
lock
sbb
add
adc
mov
push
push
mov
fstpl
cmp
mov
xor
scas
mov
das
loop
push
pop
sub
int
scas
pop
int3
mov
pusha
and
mov
mov
hlt
mov
sti
fcompl
aaa
lock
shll
push
xor
inc
mov
xor
dec
add
jmp
or
ret
mov
addr16
pop
mulb
and
xor
xor
out
sub
mov
repnz
sub
stc
clc
jo
icebp
repz
push
add
lods
xor
test
jo
cs
jp
cmp
xor
and
fdivrp
mov
ret
mov
xlat
mov
int
cld
pop
pop
xchg
movl
hlt
mov
nop
mov
mov
sbbl
jmp
fmull
cld
popf
mov
scas
rclb
jle
aas
jg
jle
aam
cli
sub
shll
xchg
jmp
repnz
add
sbb
aam
js
daa
push
test
mov
push
jns
imul
sbb
and
inc
jo
orl
and
and
insl
stos
sub
repnz
push
xchg
dec
push
imul
inc
loopne
leave
call
push
subl
mov
mov
and
sbb
and
mov
daa
xchg
mov
xor
gs
scas
out
and
pop
ja
outsb
in
loop
pushl
pop
aad
add
sbb
sub
shlb
insb
or
mov
mov
lret
jmp
xor
lds
popa
mov
mov
ret
cwtl
xchg
xor
out
mov
jge
ret
pop
inc
or
push
cltd
movsl
fcmovbe
imul
jp
js
inc
or
sahf
repz
mov
or
repnz
cld
movsl
or
pop
repz
jbe
fiadds
mov
mov
mov
cmovs
hlt
data16
outsl
ret
icebp
cmp
ds
pop
fdivs
into
add
mov
or
mov
mov
mov
orl
mov
add
mov
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
call
cmpl
jb
mov
mov
add
xor
jmp
xchg
leave
popa
jge
jge
fldenv
test
xlat
mov
aas
jg
jle
arpl
mov
xor
jmp
add
jecxz
mov
pop
lock
cmc
adc
sti
push
arpl
orb
xchg
mov
stc
sbb
jecxz
xor
cmp
imul
fs
adc
orb
std
test
out
mov
xor
sbb
pusha
mov
xor
rorl
dec
call
int3
jne
jns
into
push
mov
xor
jge
xchg
jns
loopne
adc
dec
out
and
push
loop
and
and
cs
clc
inc
pop
mov
aam
mov
pop
in
cmp
jecxz
clc
or
pop
cmp
cmp
stc
imul
sbb
outsl
jp
cmp
xchg
nop
jle
js
push
mov
jbe
repz
sub
sarb
mov
push
roll
hlt
cmp
sub
adc
out
xchg
repnz
jle
fs
mov
shll
adc
mov
sub
ficompl
int
lods
sub
add
dec
dec
jnp
jmp
mov
mov
mov
add
jmp
lea
pop
imul
jle
aas
jg
jle
xchg
or
out
insb
xchg
imul
daa
stos
jns
aas
ss
jmp
lds
mov
stc
shll
js
inc
sub
out
push
adc
enter
sub
pop
sub
bound
push
repnz
repnz
js
aam
lds
std
mov
shl
lods
jnp
std
mov
call
jo
stc
lock
xlat
pop
cltd
je
adcl
ja
jne
or
mov
pusha
pop
xchg
jae
jp
into
mov
jo
pop
push
jne
push
jns
insl
arpl
or
sbb
sbb
pop
xchg
ret
sub
cmovns
push
adcl
icebp
or
lods
bound
out
shlb
shlb
xchg
outsl
xchg
adc
roll
ja
xchg
pop
mov
push
add
addr16
pop
and
mov
jne
jg
cmpsl
bound
and
popf
mov
popa
out
mov
bound
jle
adc
mov
in
sbb
sbb
scas
push
mov
or
gs
js
xchg
cmpsb
add
mov
and
pop
addr16
mov
lea
jmp
and
and
sti
pop
mov
ret
jle
aas
jg
jle
jge
movsl
rcrb
fsub
or
sub
fldenv
push
cmp
les
push
fstl
jo
out
cmc
inc
jne
loop
les
hlt
jp
das
loopne
push
pop
sub
mov
push
movq
cli
lcall
pusha
lret
adc
dec
jge
sarl
orb
je
adc
adc
jmp
cmp
popa
cld
fldl
push
movsl
cmp
adc
sbb
mov
loop
fisttpll
and
mov
adc
xor
aaa
je
inc
cmp
mov
mul
add
adc
inc
lock
out
test
xchg
aaa
popf
xchg
stc
adc
and
mov
pusha
lods
inc
inc
mov
jno
pop
jns
add
xorl
lret
sub
mov
mov
sbb
inc
test
pop
cmpsl
sub
into
daa
jmp
mov
stos
jbe
mov
fbstp
dec
in
jle
pop
push
adc
lods
lods
jno
fs
pop
xor
jno
mov
jp
adc
test
or
inc
push
mov
mov
pop
mov
or
pusha
cmp
ds
fisubrs
lds
dec
rclb
jne
pushl
call
mov
jmp
push
sahf
sbb
fdivrl
or
cmp
jne
jle
aas
jg
jle
sbb
xchg
mov
lds
sub
fs
sahf
cltd
ljmp
jecxz
dec
dec
cmc
add
xchg
jecxz
xchg
enter
inc
popf
imul
in
add
jle
mov
mov
out
bound
ficomps
addl
adc
jae
in
and
and
push
pop
and
jae
lret
xor
int3
jnp
push
lea
daa
out
sub
pop
xchg
pop
mov
fnstsw
adc
mov
mov
cmc
mov
arpl
jae
fildl
push
lock
sbbl
loopne
data16
push
stc
pop
lahf
call
lcall
pop
sub
ljmp
xor
cmp
pop
insb
xchg
or
mov
mov
fcmovbe
push
hlt
inc
dec
in
and
cmp
dec
popf
std
hlt
in
mov
xlat
mov
pop
dec
mov
popf
add
cmpsb
out
jge
add
sbb
jl
out
data16
sahf
jns
inc
cli
sbb
mov
inc
push
dec
addr16
xchg
loop
dec
push
fidivrs
mov
out
and
mov
repnz
dec
clc
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
pop
mov
jl
xchg
movsb
sti
pushf
divb
bnd
aas
jg
jle
lcall
adc
or
sbb
fidivl
aaa
pop
dec
mov
xor
mov
mov
lret
ret
mov
test
clc
ds
pusha
xor
cmc
and
mov
mov
sahf
loop
cmpsb
mov
jge,pn
fistl
iret
std
add
ds
ret
add
sti
pop
into
nop
inc
mov
test
jne
inc
pop
clc
mov
loopne
jmp
xchg
pushf
inc
sar
jl
bound
addb
movsl
cld
mov
fidivs
dec
adc
jne
dec
xchg
rorb
rcll
stos
test
mov
cwtl
mov
bound
icebp
push
pop
lret
adc
insb
dec
rcll
inc
mov
sub
shrl
sub
lds
icebp
cld
cltd
push
lock
fcom
lcall
jl
mov
std
adc
pop
testl
sti
dec
test
xor
mov
jmp
int3
pusha
cs
adc
icebp
imul
jno
cmc
pop
je
or
xchg
fdivrs
adc
dec
insl
decl
push
mov
add
mov
mov
test
je
mov
push
pop
push
jmp
stos
xchg
fwait
adc
hlt
lcall
jle
aas
jg
jle
aas
pop
xchg
icebp
popa
addl
clc
sbb
test
lret
lods
insb
add
sub
repnz
clc
pushf
jb
fistps
mov
sub
xchg
adc
or
sbb
pop
test
xchg
stos
sarb
fstpl
les
out
std
sbb
add
js
scas
pop
jnp
push
gs
loope
addr16
sti
ljmp
push
rcrb
arpl
sbb
bound
stos
push
mov
jmp
and
mov
mov
test
dec
adc
xor
scas
sub
repz
in
mov
sti
push
pop
in
xorl
jae
sbb
pop
adc
mov
fwait
testb
dec
sbb
arpl
enter
outsl
push
sahf
lods
pop
cli
outsb
mov
mov
add
dec
mov
pop
push
mov
test
pop
sarb
es
lods
enter
xchg
and
arpl
or
test
imul
sbb
and
mov
mov
bound
gs
adc
add
add
xchg
inc
sbb
lods
lret
movsl
sub
cmp
jle
aas
jg
jle
fucomip
or
sbb
arpl
fists
into
arpl
mov
pop
fdivp
dec
cmpsl
pop
popf
pop
cmp
jmp
xor
shll
dec
sbb
jp
add
and
xchg
adc
pop
pop
cmp
inc
ss
mov
lret
sarl
insl
hlt
inc
test
cmc
mov
stos
pop
test
mov
shlb
aad
cmp
or
mov
pop
cmp
stc
pop
in
sahf
clc
jge
out
dec
sub
sub
adc
les
xor
dec
pop
xchg
inc
scas
push
cmp
cwtl
and
ret
mov
or
fdivrp
daa
jns
enter
pushf
adc
mov
fwait
repz
cmp
or
pop
sti
orl
pop
popf
xor
aad
jno
cmp
xor
mov
out
int3
inc
testl
adc
bound
cmpsl
lret
push
mov
cmp
adc
stos
adc
or
inc
into
imul
jecxz
and
fldenv
cli
mov
rol
scas
adc
and
mov
or
sub
xchg
dec
mov
imul
sub
mov
jmp
jp
rcr
std
jnp
mov
jl
repnz
inc
or
jle
aas
jg
jle
leave
jecxz
lods
jg
xor
outsb
xchg
mov
test
in
mov
mov
test
cmc
cmp
adc
mov
adc
jns
lods
inc
fcoml
jg
sahf
sbb
cld
inc
loope
mov
mov
insl
jle
cmpsl
pop
negl
ficoml
push
inc
mov
in
lods
mov
or
out
sub
cli
or
daa
test
cmp
jno
mov
inc
and
test
es
aaa
xchg
mov
inc
add
in
cwtl
call
lret
fwait
push
scas
inc
sbb
ja
or
mov
pop
dec
aas
incl
adc
jl
cld
fisubl
jmp
and
fs
adc
mov
sub
push
dec
mov
jecxz
xor
sbb
xor
cmp
mov
cs
and
inc
cwtl
mov
insl
push
mov
sbb
inc
jle
xchg
mov
xor
leave
add
popa
scas
lcall
mov
icebp
mov
imul
mov
inc
inc
cwtl
arpl
rolb
pop
jno
inc
mov
mov
inc
dec
sahf
out
push
pop
imul
into
mov
mov
jmp
test
test
jge
cmp
adc
jo
idivl
aas
jg
jle
imul
aad
in
call
jg
inc
or
addr16
fldt
pop
mov
dec
test
repz
in
jge
rcll
punpcklwd
sub
sub
dec
jg
mov
pop
adc
into
xor
mov
lods
mov
add
clc
loop
movl
hlt
sti
inc
ss
out
xchg
loope
cmp
fldenv
and
inc
stos
adc
mov
sub
lret
push
ret
pushfw
adc
jge
mov
cmpsl
and
xchg
sti
inc
mov
fnstsw
icebp
hlt
add
iret
pop
aam
cmpsb
pop
out
incb
sti
pop
pop
mov
icebp
jnp
ljmp
inc
lret
repz
mov
aaa
or
ds
jbe
es
xchg
mov
loope
test
daa
std
jns
jnp
mov
int3
popf
sbbl
jne
outsb
jne
jbe
mov
jmp
pop
ljmp
fwait
jnp
xor
icebp
aas
iret
lea
aas
clc
fdivl
out
adc
inc
adc
aad
pop
sub
push
inc
xor
lods
or
xchg
xor
mov
add
jmp
mov
or
lods
jge
out
mov
xlat
mov
mov
aas
jg
jle
cmp
lcall
mov
push
in
or
add
add
out
ret
mov
mov
jnp
lods
sti
or
into
decl
data16
jle
daa
es
lahf
inc
shll
icebp
into
out
jmp
mov
jb
pop
push
rol
push
pop
sub
fimull
divb
ficompl
push
cld
iret
dec
mov
jns
xor
fisttps
mov
mov
sub
pusha
xchg
mov
in
jl
pop
arpl
enter
lret
and
mov
adc
fsubr
movsl
adc
mov
or
pop
jbe
sti
jmp
mov
call
ss
and
pop
mov
out
add
push
imul
add
scas
add
jmp
int
leave
ret
es
push
fldcw
rol
pop
repz
faddp
push
lea
outsl
or
jle
mov
sbb
mov
mov
xchg
sub
aaa
pushf
jg
jl
leave
mov
jecxz
inc
sbb
in
clc
jp
xor
sub
mov
lds
sbb
loope
sbb
hlt
mov
mov
xor
add
mov
imul
mov
jmp
inc
sbb
gs
jae
jp
pop
es
mov
aas
jg
jle
inc
jo
popf
push
cmpl
mov
pop
adcb
xchg
stos
test
xor
inc
adc
aaa
popf
xor
dec
scas
lock
jecxz
and
cmp
adc
fldt
push
mov
fisubl
pushf
mov
lea
insb
sbb
jae
mov
mov
dec
inc
daa
adc
jp
xor
std
add
popa
adc
jp
and
inc
fnclex
sbb
fnstenv
pop
add
cli
cmp
push
or
cwtl
cmc
popfw
cs
fs
inc
mov
shl
cli
ss
gs
mov
sti
rcll
inc
mov
jp
xchg
sbb
jns
aaa
hlt
movsb
pushf
loop
inc
in
push
mov
mov
cmpsl
sub
mov
sbb
xchg
data16
sahf
mov
sarb
imul
mov
loope
nop
out
data16
imul
test
and
or
push
sub
mov
cmp
cwtl
mov
mov
cmpb
icebp
cli
jns
or
out
ljmp
jae
fcoml
data16
mov
or
xor
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
jmp
jno
cmp
jge
in
pop
xor
xorb
scas
or
jg
jle
std
mov
xor
mov
add
cmp
mov
imul
xor
sbb
sbb
inc
scas
sub
das
fnstcw
in
inc
sarl
ret
dec
je
jnp
or
mov
sahf
adc
iret
sbb
fwait
sbb
xchg
cwtl
add
jle
fnstsw
fsub
adc
data16
pop
mov
jb
adc
ds
dec
dec
push
rcll
jnp
shld
movsl
dec
movsb
mov
add
inc
test
mov
out
jae
lock
sbb
fcompl
aam
push
test
and
mov
lcall
mov
in
xor
xor
xchg
sub
dec
jne
stos
jecxz
xor
cmp
or
xchg
orb
jnp
mov
std
mov
fcoml
rorb
rolb
push
mov
mov
sti
lea
scas
add
sub
stos
push
cmp
mov
adc
and
mov
aad
mov
ds
jecxz
outsl
cmpsl
cmp
icebp
shrb
sub
clc
inc
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
cs
jecxz
jnp
aad
lock
mov
jle
aas
jg
jle
jnp
adc
gs
inc
iret
roll
add
jb
jmp
mov
inc
fst
cli
popa
dec
push
xor
out
xor
jmp
repnz
and
ss
fidivrs
nop
pop
sbb
rcrb
push
jne
mov
cltd
pop
push
int3
xchg
cmp
sbb
sub
mov
adc
subl
inc
pop
movsb
out
push
popa
xchg
cmp
into
in
mov
je
popa
aas
cli
out
xor
cli
mov
scas
mov
mov
out
push
enter
stos
enter
mov
sub
and
cmp
xchg
xor
jne
les
xor
std
sbb
scas
or
dec
mov
cmp
imul
xchg
in
fsubrl
orl
push
int
imul
push
dec
mov
insb
imul
sbb
fnstsw
mov
addr16
push
iret
mov
mov
les
mov
jecxz
stos
adc
fidivrs
pusha
and
xor
cmp
sbb
mov
jae
loope
scas
stos
cmp
iret
jge
arpl
push
sub
movzbl
cmp
pop
adc
lods
cmpsb
sbb
sbb
add
imul
jmp
into
jb
pop
inc
pop
fisttpll
cmp
or
jg
jle
test
out
dec
sahf
mov
mov
push
loop
dec
test
insb
inc
inc
push
dec
call
insl
dec
or
sbb
add
xor
xor
lds
sbb
mov
loopne
aad
icebp
push
mov
movsb
pop
popf
stos
push
jg
pop
push
mov
roll
jg
inc
leave
push
mov
mov
sti
aaa
out
test
popa
out
cmp
movsl
mov
dec
sub
jne
dec
out
push
or
push
pop
out
sub
jg
jo
jecxz
ficoml
cmp
fisubrs
xchg
xor
imul
cli
fstpt
sub
lods
stos
or
jge
mov
pause
push
pshufw
lea
mov
aad
outsl
lret
inc
repnz
das
xacquire
lret
jo
adc
sub
dec
test
arpl
xor
test
xlat
or
ljmp
push
stc
out
mov
addl
cmp
test
in
bound
icebp
push
xchg
ds
xchg
cmpsb
cli
push
mov
movsl
std
mov
sub
dec
fimuls
mov
jmp
out
cmp
jp
sti
inc
aaa
mov
jmp
jle
jg
jle
add
adc
lock
in
push
mov
dec
push
aad
push
or
push
fwait
insl
and
aaa
adc
dec
mov
inc
and
outsb
bound
leave
xor
inc
int3
push
lods
push
add
das
pop
movsb
lcall
pop
in
inc
outsl
loopne
test
aas
int3
adc
push
inc
stos
movsl
add
push
ja
xchg
jne
mov
and
dec
xor
popa
in
out
add
roll
sub
shlb
stos
aam
stos
cli
inc
push
mov
pop
lods
leave
cmpsb
fwait
gs
add
jne
js
adc
lret
aas
dec
fucomi
pop
cwtl
fistl
add
sahf
sub
repz
dec
dec
inc
and
jo
sub
int3
es
sub
xchg
cmp
mov
pushw
cmpsb
mov
out
in
jge
andb
or
xchg
push
sub
cltd
jp
and
push
arpl
xchg
cmp
push
aas
lcall
jo
popf
mov
movsl
push
cltd
in
adc
popf
pop
inc
cs
dec
jge
sahf
mov
sbbl
cmp
add
in
stc
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
jmp
xchg
pop
mov
cmp
gs
aas
jg
jle
jne
push
adc
adc
stos
test
dec
and
jns
leave
lods
test
testl
cmpb
iret
mov
xor
lret
sbb
and
dec
dec
mov
mov
mov
aad
cli
fwait
push
pop
lahf
fcomi
testl
mov
bnd
mov
scas
mov
mov
fxch
rcll
jmp
es
mov
pop
in
lret
stc
ret
jle
mov
push
jecxz
mov
jl
xor
push
or
fwait
push
sub
scas
dec
pushf
push
stos
lock
xor
jns
mov
shlb
or
jo
outsl
adc
xlat
and
xor
nop
pop
arpl
adc
aam
mov
mov
cmp
pop
scas
aad
adc
push
pop
addr16
mov
daa
loop
sti
dec
cltd
fistl
icebp
xchg
push
jb
pop
xchg
shl
xor
leave
lea
push
lods
pop
pop
xchg
in
xchg
loop
sbb
fistps
push
inc
daa
pop
lods
std
fwait
aas
mov
pop
les
cli
jmp
xchg
aaa
fwait
adc
xchg
add
je
call
xor
jmp
mulb
jne
lds
mov
aad
aas
ret
jle
jg
jle
xchg
pop
mov
aad
out
cmc
aas
pushl
fstpt
aam
add
cmp
ret
sarl
mov
nop
dec
sub
inc
mov
sbb
and
jle
int3
test
out
mov
inc
jno
cld
das
aad
mov
push
mov
jmp
jle
jmp
stos
outsb
push
fcoml
inc
fwait
repz
addr16
inc
mov
adc
inc
xorl
pushf
imul
pop
inc
mov
jae
out
push
sbb
xchg
cmpsb
insb
push
jo
idiv
in
mov
xlat
repnz
and
adc
je
iret
mov
push
rcl
jbe
dec
pop
inc
inc
jl
mov
sbb
sbb
xlat
bound
fsubrs
fistps
add
js
mov
dec
out
xchg
imul
xor
pop
repnz
mov
idivl
adcl
in
xchg
sub
int3
pop
cli
add
lahf
or
lret
repnz
fwait
jne
push
stos
sbb
xchg
sbb
lock
fwait
ja
fs
jo
js
or
inc
jmp
jae
aas
mov
cmp
push
push
push
addl
jle
inc
cwtl
sbb
push
dec
test
dec
dec
loopne
pop
inc
arpl
xchg
dec
cli
mov
cld
stc
js
jnp
mov
fistl
out
or
cld
cmp
test
nop
sub
movsb
and
xchg
les
fldl
mov
fbld
pop
lret
fisubs
int
shr
xor
addr16
stos
and
adc
xchg
rcr
pop
mov
into
popf
inc
and
cmpsl
mov
adc
cli
jecxz
or
jecxz
jns
inc
xor
mov
push
out
inc
lods
icebp
jmp
sub
mov
sbb
rcrl
inc
stc
das
xchg
test
mov
jo
jns
outsw
jle
das
mov
pop
mov
pop
mov
mov
lret
mov
xchg
jno
sbb
add
pop
mov
inc
je
jae
je
insl
loop
dec
into
mov
and
cmp
push
test
sti
in
mov
pop
xor
out
jge
push
jg
cli
xlat
cmpsb
push
adc
aas
les
or
sub
into
cmp
add
test
in
xchg
fnstsw
scas
test
xchg
les
in
clc
in
xchg
xchg
cmp
je
jmp
xchg
mov
mov
jmp
aad
inc
cmpl
jg
jle
fisubrl
js
push
dec
ret
pop
fs
bound
sub
hlt
inc
test
mov
into
int3
into
shr
xchg
dec
imul
mov
lods
mov
mov
lods
scas
xor
jg
pop
jge
pop
sub
in
jg
and
in
jne
lock
sbb
incb
ret
xchg
fstpl
sub
imul
add
or
cmp
pop
add
mull
sub
mov
fldt
icebp
scas
es
jns
xor
test
cltd
sub
js
rorb
jmp
xor
mov
xchg
sub
subb
test
push
pop
pushf
pop
sub
push
out
or
ret
xor
push
mov
adc
mov
cmp
int3
add
or
push
add
mov
and
jecxz
sbb
lret
jge
pushf
outsl
sbb
cmc
lahf
bound
and
clc
outsl
bound
insb
mov
dec
icebp
int
fsubs
pusha
push
outsb
mov
pop
add
cltd
or
test
jmp
in
fs
xchg
sbb
out
pusha
jne
dec
imul
xchg
jmp
dec
adc
jns
rclb
shlb
test
aas
jg
jle
and
lahf
repnz
lcall
and
fiaddl
xor
stc
in
lds
imul
fadds
dec
dec
mov
jg
xor
hlt
bound
imul
stos
fnstcw
jbe
or
pop
test
dec
jge
popa
inc
mov
push
mov
xchg
shl
add
ss
dec
add
jae
sbb
lea
in
jg
jb
lods
rcl
aad
push
adc
outsb
aad
and
inc
inc
mov
xchg
mov
and
sub
xor
stc
mov
xlat
mull
sbbl
push
jecxz
add
or
lea
es
xor
cld
sbbb
xor
mov
sub
cmp
jno
iret
outsb
mov
push
pop
lea
push
int
sub
dec
and
push
stos
push
cmp
pop
or
jmp
jae
or
jb
jmp
les
adc
push
pop
dec
xor
jns,pt
xchg
jge
lds
jp
bound
insb
push
pop
push
pop
inc
xchg
jmp
ss
or
mov
jmp
movb
jle
and
sub
outsb
jne
jnp
sbb
sub
inc
jg
bound
out
insb
push
arpl
fbld
pop
std
add
jmp
inc
xchg
jb
test
cs
cltd
scas
je
add
test
dec
dec
jmp
pop
xor
mov
lods
sbb
test
pop
jle
mov
jp
testb
or
mov
test
dec
aam
jmp
mov
es
ja
inc
sub
sahf
or
lret
dec
int
shlb
dec
bound
out
xor
inc
fildl
xchg
add
or
inc
into
nop
popf
sbb
jb
mov
aad
jmp
sbb
jns
aaa
add
cmpsl
aam
pop
cmp
or
and
ss
dec
lret
lods
test
dec
sbb
push
mov
and
pop
mov
mov
imul
jl
ja
dec
xchg
in
stos
inc
lret
in
jecxz
sub
xor
rcrb
mov
in
xchg
inc
xor
imul
lds
stos
xor
in
ja
jmp
push
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
jmp
mov
pop
pop
in
pop
shl
sub
in
xchg
jle
ret
mov
divb
pop
dec
mov
sbb
sbb
or
cs
jp
dec
xor
stc
loop
mov
sbb
inc
cld
sub
mov
and
jg
inc
jle
lods
aad
imul
enter
adc
mov
stos
into
push
xchg
add
pop
cli
repz
clc
cwtl
push
add
in
adc
push
mov
repz
stos
push
bnd
je
fneni(8087
lea
iret
xchg
xor
jecxz
fidivrl
lds
push
pushf
pop
jg
add
in
sbb
mov
lcall
push
leave
fcom
test
jb
cmp
pop
iret
lahf
cmpsb
fmull
cmp
add
nop
bnd
xchg
xor
pop
pop
or
push
mov
pop
pop
scas
mov
push
xor
xchg
push
ljmp
cmc
mov
sub
test
enter
cmc
inc
sub
xor
adc
push
loope
bound
incb
jbe
inc
test
subb
add
xchg
cmovno
jnp
dec
jae
sbb
xchg
and
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
loopne
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
repnz
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
add
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
loope
jne
mov
cld
incl
mov
mov
add
call
int3
mov
add
add
xor
mov
cld
jle
push
add
add
inc
inc
mov
decl
add
inc
lret
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
pusha
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
popf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
or
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
adc
adcb
or
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
mov
test
cmp
pushf
inc
mov
popf
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
popf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
popf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
popf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
arpl
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
arpl
inc
add
dec
arpl
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
pushf
orb
xor
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
popf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
clc
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
popf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
add
sub
aad
inc
add
add
xlat
insb
inc
inc
and
dec
add
inc
fnstcw
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
les
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
or
movsl
fiadds
jae
or
loope
inc
xor
pop
inc
shr
inc
and
inc
add
add
out
clc
inc
ret
inc
mov
leave
sub
add
add
sbb
stc
test
lea
mov
dec
int3
mov
movb
dec
ljmp
or
jge
shl
xor
add
rdpmc
sbb
mov
in
cmovne
jecxz
inc
mov
sbb
mov
add
loopne
inc
dec
and
inc
mov
leave
movl
inc
add
inc
xlat
sbb
xor
dec
mov
mov
fadd
inc
rcl
inc
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
mov
cld
mov
mov
pop
sar
cmp
jne
mov
loopne
pushf
jae
add
add
add
jmp
mov
pop
add
add
decl
mov
mov
data16
mov
add
add
data16
ljmp
pop
jle
inc
sbbb
test
jmp
push
jne
lea
movl
sar
mov
loopne
rol
ljmp
push
inc
inc
mov
cwtl
movl
add
add
call
incl
xor
jne
mov
ret
out
mov
push
xor
mov
mov
mov
lcall
and
push
mov
decl
mov
jp
mov
mov
jl
decl
mov
push
decl
orb
xor
call
test
mov
into
xchg
loop
xchg
lods
ret
in
inc
dec
in
xor
add
mov
mov
incl
jno
data16
add
mov
fmull
aam
call
push
mov
xor
add
subl
mov
add
pushl
push
lea
mov
sar
orl
fs
add
add
adc
add
test
inc
incl
dec
mov
mov
push
xor
push
inc
xorl
mov
push
inc
adcw
movl
clc
push
inc
data16
push
pushf
data16
dec
in
test
xor
in
add
decl
mov
lea
push
push
test
inc
inc
mov
push
shlb
test
cs
incl
data16
test
incl
incl
mov
lcall
leavew
xchg
inc
pushl
call
lea
mov
enter
mov
xor
sbb
sbb
dec
mov
mov
movl
mov
mov
sar
sub
mov
add
inc
mov
or
addb
xor
pushf
js
add
mov
inc
xor
lcall
cmp
movl
lcall
dec
inc
mov
mov
mov
nop
ret
add
jne
test
jne
decl
call
sbb
stos
mov
mov
inc
cmp
push
cwtl
inc
add
lcall
test
mov
adcb
add
add
movl
mov
inc
add
cmp
incl
inc
push
xor
add
mov
and
incl
lea
pushf
or
jmp
decl
mov
loopne
movl
sbb
out
mov
push
push
test
mov
cwtl
inc
add
movl
add
add
pushl
or
rorb
cld
sbb
inc
mov
movsb
add
push
movb
jmp
mov
clc
mov
incl
mov
cmp
push
add
xor
add
mov
mov
mov
hlt
movsb
add
add
mov
dec
inc
mov
add
add
add
mov
mov
push
decl
decl
xor
add
push
xchg
inc
incl
jnp
mov
pusha
add
test
decl
ret
add
mov
cli
incl
test
add
or
cmp
add
sub
mov
mov
add
inc
dec
mov
add
mov
inc
push
push
mov
mov
adcl
add
push
add
push
test
decl
mov
sbb
incl
movl
add
add
mov
push
push
test
decl
inc
push
xor
and
call
test
incl
decl
inc
decl
arpl
int
xor
mov
cwtl
pushf
add
mov
mov
incl
adc
addb
adc
push
inc
add
mov
mov
push
adc
mov
mov
addl
incl
inc
cmpsl
mov
add
mov
cmp
movsb
mov
sbb
addb
hlt
add
mov
hlt
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
sub
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
cld
or
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
popf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
popf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pusha
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setge
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
clc
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
inc
adc
inc
inc
push
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
lret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
shlb
add
add
and
fs
inc
test
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
inc
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
inc
popf
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
popf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
pushf
idivl
cmp
je
push
loopne
dec
mov
int
mov
movlhps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
inc
icebp
add
add
mov
mov
enter
pop
jne
mov
pushf
mov
sub
cmp
jne
xor
in
xor
movl
clc
add
ret
decl
ss
dec
push
jle
popa
data16
into
arpl
add
mov
push
cld
add
inc
pushf
add
into
ret
pop
push
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
pushf
clc
mov
test
cmp
fs
or
push
mov
push
push
lret
xor
pushf
mov
mov
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
dec
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
push
add
add
add
lret
lock
inc
lret
xor
pushf
jge
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
mov
in
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
mov
adc
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
popf
push
xor
inc
cmp
or
inc
test
xor
in
hlt
push
push
push
push
mov
popf
popf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
popf
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
push
inc
add
pushfw
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
jne
mov
mov
movl
clc
dec
push
ss
pop
aad
xlat
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
clc
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
popf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
dec
inc
mov
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
aad
xlat
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
mov
sbb
nop
mov
addl
mov
jne
mov
pushf
push
mov
xor
add
lret
add
rorl
mov
mov
mov
fimuls
mov
xor
mov
or
dec
add
or
out
loopne
jmp
lret
xor
je
mov
mov
sbb
mov
fmuls
mov
mov
mov
sbb
sbb
add
movl
leave
mov
push
mov
add
mov
or
mov
or
inc
add
in
add
mov
adc
xor
adc
inc
popf
mov
push
add
cmp
pushf
mov
dec
fwait
dec
jmp
or
sbb
or
dec
lret
dec
rcl
lret
inc
or
sar
lahf
inc
mov
inc
or
iret
add
mov
adc
inc
add
add
dec
mov
mov
ret
inc
add
push
or
test
test
clc
pushf
inc
mov
lock
inc
mov
test
mov
mov
sbb
scas
dec
mov
xor
jb
add
add
add
mov
or
mov
adc
inc
mov
or
inc
inc
cmp
hlt
inc
jne
mov
inc
bound
clc
push
inc
inc
cmp
cmp
dec
mov
push
idivl
or
inc
inc
add
push
loopne
mov
or
xbegin
mov
or
mov
hlt
inc
inc
mov
xor
add
adc
inc
clc
xor
add
or
dec
test
clc
jb
mov
clc
pushf
inc
mov
xor
shr
add
hlt
mov
push
xor
test
clc
mov
mov
clc
mov
xor
mov
hlt
shlb
clc
fmull
mov
in
icebp
dec
decl
loopne
test
clc
dec
inc
mov
in
dec
push
xor
push
mov
push
mov
clc
cmp
inc
test
add
add
jne
lea
cmc
adc
inc
inc
xor
jb
add
inc
rorl
xor
mov
adc
mov
ret
push
push
lea
cli
add
or
mov
xor
mov
add
jne
lea
lods
psubsb
cmc
lret
inc
xor
add
inc
inc
mov
xor
test
clc
dec
inc
xor
setl
lret
int3
rorl
add
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
loopne
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
or
add
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
call
xor
mov
in
rorl
iret
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
in
or
mov
xor
inc
or
iret
add
cmp
jge
mov
in
add
mov
mov
clc
test
std
iret
decl
xor
mov
in
enter
inc
mov
or
jmp
push
decl
xor
push
jne
mov
in
add
dec
test
dec
add
cmp
or
mov
dec
push
lea
xchg
mov
call
inc
mov
or
mov
iret
movsb
mov
push
xor
cmp
jne
lea
lods
dec
call
cmp
cmp
decl
add
fadds
mov
lock
inc
test
xor
add
sbb
xor
rdpmc
testl
or
mov
rolb
iret
cmp
cmp
xor
decl
mov
add
mov
jmp
orl
pop
inc
pop
mov
loopne
mov
push
rorl
push
add
inc
push
popf
dec
xor
add
adc
adcb
add
or
fadds
call
cmp
dec
mov
ret
mov
adc
add
add
mov
movsb
push
inc
add
adc
xor
add
add
mov
incl
mov
push
inc
decl
call
mov
mov
xor
lea
adc
add
dec
xorb
add
pcmpeqw
mov
pop
push
leave
or
xor
in
adcl
xor
push
dec
in
or
inc
inc
mov
push
and
mov
jb
add
inc
mov
or
jl
sbb
dec
xorb
add
xor
mov
add
dec
dec
adc
push
sbb
inc
push
decl
mov
or
mov
test
jge
xor
pushf
or
push
or
inc
or
jb
call
mov
mov
adc
and
lea
or
ret
je
sbb
mov
mov
je
pop
and
push
and
and
incb
and
pop
adc
in
ret
mov
pushf
incb
jge
mov
cmp
adc
push
decl
adc
mov
into
scas
mov
das
inc
jne
and
and
lea
jb
xor
adc
xor
jne
sbb
.byte
inc
pop
pop
