push
mov
jmp
cwtl
jb
inc
pop
pop
cltd
lret
inc
scas
xchg
jecxz
jle,pn
jle
xorb
into
xor
xor
ja
or
rorl
cmp
int3
adc
sbb
mov
or
rorl
out
mov
or
dec
sbb
loopne
add
mov
xor
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
loope
pop
sub
jae
lret
lcall
mov
loop
cmp
sub
or
sbb
outsl
insl
je
cmp
jns
popl
shll
movb
sahf
mov
daa
sbb
addr16
in
test
sarl
lret
push
jno
out
sbb
dec
jns
push
cmpsl
leave
sub
lret
mov
daa
mov
add
cwtl
es
outsl
pop
cmpsl
cwtl
repz
jne
flds
icebp
push
pop
cld
ss
out
aaa
je
rorl
mov
mov
in
jl
pop
in
lcall
insl
mov
stos
daa
push
dec
insb
movsb
out
gs
mov
and
push
mov
sub
jl
pop
xchg
outsb
mov
sar
adcb
jbe
inc
push
dec
mov
jmp
xchg
lahf
in
inc
pop
shrl
aam
sbb
dec
jbe
movsb
pinsrw
sahf
fs
pushf
cli
sbbl
test
inc
ret
push
cmp
mov
jecxz
fisttps
sarl
nop
js
cli
repnz
cmp
push
outsl
sbb
sbb
mov
and
fldenv
lods
rcr
sub
cmpsb
rcll
in
aaa
imul
jne
push
cld
ja
jge
addr16
push
repz
aad
leave
test
inc
dec
sub
nop
mov
cmc
movsl
cwtl
rcrl
out
enter
cmp
pop
test
xor
ret
dec
or
ret
test
rolb
xor
pop
jp
push
test
xor
jp
push
test
fwait
inc
in
pusha
ficoml
imul
fwait
xchg
jo
pop
push
addr16
xchg
mov
pop
cld
movsb
sbb
insb
sub
cmp
lock
shrb
cmp
mov
rclb
imul
out
inc
cli
frstor
cmp
jns
repnz
dec
jno
cmpsb
mov
sub
nop
ljmp
and
cmp
in
xchg
push
int
test
pop
pop
bound
push
sbb
or
ret
fstl
adc
cs
clc
pop
xorl
jmp
lods
adcb
ficompl
incb
adc
xchg
mov
rcl
and
loop
movsb
jo
pop
mov
inc
dec
push
roll
movsb
pop
add
call
inc
movsb
mov
daa
lcall
mov
adc
jl
pop
or
dec
mov
fwait
pop
mov
sub
mov
repz
push
mov
jl
inc
testl
shrl
sub
add
into
mov
mov
mov
loop
testl
imul
adc
das
cmp
or
adc
ficoms
ss
in
gs
call
mov
mov
call
jecxz
in
sub
inc
clc
xor
push
push
inc
add
inc
in
xor
enter
add
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sub
lea
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
and
mov
jmp
sub
ljmp
cmp
pop
xorb
xorb
mov
cmp
sarl
cmp
loopne
dec
adc
fs
sub
daa
scas
mov
sbbl
arpl
rcrb
stos
aam
mov
cmp
pop
fs
repz
jge
sub
cmp
push
jo
fildl
add
sbb
scas
aaa
fs
inc
mov
mov
test
cmp
lret
mov
dec
mov
jns
cmc
cld
cmp
pop
add
xchg
push
in
sahf
mov
mov
sub
mov
movsl
xor
jns
inc
sub
xor
sahf
call
jne
pop
pop
mov
xchg
loop
mov
aam
or
pushf
mov
std
popa
or
mov
adc
jle
sbb
push
sub
mov
lea
add
jg
adc
dec
es
xchg
push
push
sbb
add
push
movl
cld
cmp
stc
jns
loopne
cld
les
js
add
xchg
pop
xchg
mov
adc
movsl
leave
cmovo
cmp
push
jge
in
out
punpckhbw
out
jns
lock
push
push
inc
sbb
mov
out
insb
mov
dec
in
push
jle
mov
orb
inc
push
fwait
and
leave
repz
aad
pop
imul
movsb
in
pop
stos
and
inc
push
push
xchg
inc
sahf
push
rcl
adc
jmp
dec
jno
rolb
cmp
dec
clc
lcall
jne
insl
rcl
mov
adc
fwait
xlat
pop
aas
std
out
lcall
push
ret
in
cmp
jo
andb
mov
mov
jae
sbb
and
mov
add
cltd
aaa
push
jl
movsb
in
cmp
idivl
mov
mov
nop
xchg
fidivrs
cmpsl
sbb
pushf
iret
mov
std
jb
call
stc
jnp
jl
add
xchg
cmpsl
shrl
xchg
insl
inc
adc
dec
mov
push
xchg
fs
jo
inc
jg
xchg
test
js
xchg
inc
add
loopne
popf
lea
scas
cmpsb
mov
stos
rolb
fsubl
sbb
mov
inc
fs
hlt
loope
out
popa
cmp
inc
xor
pop
data16
push
xlat
jnp
aam
xor
and
add
xchg
mov
popf
fisubl
in
sbb
add
dec
addr16
ds
lods
mov
pop
push
sti
ja
loopne
xor
jl
adc
outsb
jb
clc
lret
jg
pushf
cli
shll
dec
mov
dec
jbe
inc
mov
icebp
lahf
mov
inc
and
out
cmc
sbb
cmp
data16
sub
jbe
mov
scas
cmp
pop
lret
xor
nop
sub
push
jmp
or
fimuls
iret
fimuls
or
or
mov
add
xchg
enter
in
lods
add
and
pushf
out
mov
sbb
shll
scas
and
push
xchg
cltd
inc
test
dec
mov
or
sub
in
lret
leave
xor
shll
jb
test
adc
pop
insb
push
push
dec
popf
push
mov
mov
movsl
xorb
mov
negl
push
lea
xor
mov
mov
xor
push
sbb
push
adc
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
addl
mov
or
mov
mov
xor
mov
sbbl
xor
xor
xorl
add
add
sbbl
jmp
ret
imul
mov
cs
cmpsb
in
jne
jle
jno
jle
inc
mov
adc
jl
sub
mov
call
stc
push
mulb
dec
in
ljmp
jbe
dec
mov
cmp
mov
and
hlt
cmp
int
xor
xchg
add
shr
adc
les
loop
in
pushf
cmp
adc
and
out
test
test
dec
fstpt
and
adc
jg
xchg
xor
dec
clc
add
adc
stos
lock
mov
bound
insl
pop
sub
dec
jle
fildll
or
int3
scas
xchg
xor
sub
mov
les
std
popf
cmpsl
cmc
sbb
push
test
push
das
js
cmp
stos
test
jns
pop
push
add
or
aas
xchg
leave
mov
mov
daa
test
sub
or
adc
mov
movsb
shrl
ja
sub
sbb
mov
mov
adc
sbb
faddl
xor
pop
mov
cwtl
enter
sbb
or
fldenv
jmp
mov
pop
ror
adc
nop
ds
pop
adc
cmp
mov
adc
adc
mov
mov
pusha
mov
out
cmp
adc
stos
pop
fsubrl
out
sub
ljmp
add
mov
repnz
xchg
mov
pop
lret
imul
test
loopne
mov
rolb
in
sbb
outsb
and
jae
mov
gs
mov
dec
fs
inc
xor
repnz
in
sbb
mov
jo
imul
pop
outsb
mov
movsl
xchg
jnp
negb
arpl
cmp
sub
test
test
cmp
xchg
int
xchg
mov
or
pop
and
dec
push
cmp
xchg
outsb
stos
sbb
xadd
sbb
jb
stos
push
pop
or
lcall
lea
mov
mov
popa
fistpl
xlat
popa
pop
rcrb
mov
add
xor
ret
cli
addb
push
out
add
mov
jnp
orb
and
cmc
fstps
xchg
jae
in
and
jle
sub
push
int3
push
push
or
jns
sbb
in
inc
dec
and
xor
push
mov
icebp
ss
xor
push
fdivrp
inc
ljmp
mov
imul
ljmp
ss
adc
push
lahf
xchg
xchg
xor
cmp
push
push
aas
pop
inc
mov
sbb
leave
and
xchg
mov
jle
push
jp
not
sub
lcall
pop
pop
in
dec
in
aam
xor
popf
sub
jae
push
int
lcall
dec
aas
add
xchg
cmp
je
ja
push
hlt
outsl
mov
out
sub
inc
jmp
shll
sub
add
hlt
ret
push
pop
cmpb
push
adc
mov
jge
es
mov
pop
into
stos
pop
pop
cmp
sbb
push
pop
xchg
in
cmp
jns
dec
mov
pop
out
int
sbb
adc
push
lods
subb
fidivrs
xchg
sbb
mov
insb
xchg
mov
rol
daa
lcall
xrelease
jmp
pop
nop
jl
jge
and
jns
popf
push
inc
mov
jno
jle
push
jns
or
mov
pop
ret
jge
ja
xchg
add
dec
dec
sbb
rcrb
push
mov
cmp
je
loope
outsl
mov
dec
mov
add
mov
imul
jbe
cli
shll
jo
popf
sub
push
arpl
or
add
ss
adc
sbbb
jnp
adc
insl
inc
dec
adc
testl
adc
add
or
mov
aad
push
aam
rol
out
int3
test
mov
or
outsl
shlb
js
push
hlt
xchg
cmp
jp
dec
adc
push
and
aam
mov
fwait
or
dec
pop
cltd
lea
es
js
aad
sbb
or
or
mov
popf
sub
arpl
dec
mov
insl
xor
sbb
data16
adc
pop
xor
arpl
gs
cmp
mov
daa
mov
push
mov
add
cmpsl
mov
add
lcall
and
out
in
mov
pop
jl
sub
ljmp
in
jno
aas
sub
push
enter
jmp
mov
jp
jnp
and
mov
add
and
pop
jge
jno
and
gs
inc
add
lahf
mov
and
mov
push
jp
or
add
fcompl
addr16
adc
and
dec
inc
les
addr16
ja
fsubr
cltd
jae
icebp
insb
test
fimull
in
cmp
jecxz
cld
or
cmp
outsl
int3
jge
mov
test
push
adc
stos
cmp
push
out
test
push
cmp
aas
bound
xorl
mov
push
pop
outsb
pop
and
push
jnp
xchg
adc
test
js
jns
or
aas
icebp
jle
push
pop
int3
scas
daa
bound
inc
pushl
outsb
mov
sbb
xor
insl
movsl
and
dec
mov
bound
mov
push
mov
repz
fmuls
sub
lahf
push
aad
mov
xor
cmpsb
xchg
ret
jmp
jl
sti
mov
lret
push
int
call
ret
scas
data16
mov
xchg
test
push
xchg
mov
sbb
push
aam
fdivs
sbb
ljmp
out
push
push
ljmp
dec
stos
fs
pop
stc
repz
dec
mov
adc
adc
shlb
sbb
cld
mov
mov
gs
insl
dec
jge
idivl
adc
pop
sub
mov
sbb
sbb
lds
add
mov
and
mov
mov
mov
jno
jmp
insb
jbe
stos
lods
fisubrs
and
sbb
leave
push
fcoms
or
jnp
jle
lret
pop
push
sbb
ficoml
jge
aam
xor
addr16
repz
lcall
lock
mov
shlb
jg
adc
stos
and
sbb
jge
cmpsb
mov
movl
movl
cmp
movl
je
movl
sub
lea
mov
sub
mov
not
jmp
inc
test
xchg
mov
rorb
into
or
jle
jno
jle
and
andl
fbld
add
xor
cmpl
int3
add
push
call
adc
ja
xchg
pushf
shlb
loope
xchg
cmp
pop
das
pop
std
mov
lahf
pushf
js
out
jo
imul
xor
mov
mov
mov
mov
lods
ljmp
insl
xchg
jae
jg
insb
cs
pop
mov
push
push
and
test
sbb
xchg
push
fwait
lds
adc
hlt
sahf
aas
push
out
mov
mov
icebp
or
ds
pushf
push
jbe
push
ret
aam
xlat
mov
loopne
dec
mov
sbb
ret
sub
dec
jl
push
sbb
xchg
enter
sbb
or
stc
mov
xchg
mov
adcb
lcall
out
gs
push
xor
pop
pop
push
call
jae
out
sub
adc
cld
dec
in
sub
push
lret
add
testb
es
and
jne
mov
call
movsb
addr16
pop
adc
test
add
shl
outsb
test
cmp
cmp
pop
cmpsl
mov
lret
test
jp
dec
lods
lret
pop
mov
sub
fbld
lahf
icebp
int
adc
or
or
cmp
mov
lock
jb
xchg
jae
lods
ss
test
push
in
cmp
jmp
cwtl
fildl
ljmp
aas
lock
sbbb
or
gs
xor
mov
push
out
push
sub
inc
and
xor
xchg
mov
jmp
aaa
and
js
scas
jae
ljmp
test
iret
stc
fcmovnb
push
loopne
cld
dec
cmpsl
movsb
cmp
mov
xchg
push
cwtl
pop
cmpsb
out
sbb
js
xchg
rol
pop
xchg
popf
add
aas
int3
sti
xor
xchg
or
pop
les
add
int
loopne
ret
or
push
std
ss
loopne
cwtl
xchg
or
pushf
addr16
stc
sub
ds
ret
clc
aas
insl
ret
andb
add
mov
jge
lret
js
fildl
add
out
cmpsl
test
imul
test
sbb
sets
es
add
push
iret
sbb
xchg
dec
mov
or
xor
xor
rclb
or
icebp
pop
cli
cmp
pop
jge
inc
xor
arpl
dec
out
das
push
add
mov
fdivr
aam
sti
and
jecxz
ds
movsl
inc
jae
insl
jp
lods
lock
sahf
pop
mov
xchg
jl
xchg
add
pop
jae
inc
or
mov
js
pop
push
testb
add
or
aad
fisubl
xchg
into
pop
sub
mov
adc
sti
gs
sub
dec
lret
mov
imul
icebp
outsl
popf
mov
sub
loop
add
mov
and
aad
imul
ljmp
push
sub
or
cmp
loopne
jns
jbe
ret
scas
cmpsl
pop
pop
mov
cmpsl
cmpsl
mov
mov
aad
adc
out
test
movb
add
add
push
inc
add
add
mov
cmp
movl
je
and
mov
jmp
inc
xchg
ljmp
dec
xchg
push
movd
jno
jle
rcr
fwait
xchg
imul
mov
jle
adc
addl
addr16
jp
test
nop
mov
jno
fistpl
lods
aad
hlt
push
jb
dec
push
adc
pop
xchg
subl
and
out
or
xchg
fs
xorl
jne
mov
xor
push
cmpsl
jo
cmc
bound
jge
sub
sbb
cmpb
shl
imull
test
int
add
ficompl
and
cmp
push
mov
clc
addr16
popa
stc
cmp
lret
push
cmpsl
xor
jo
outsb
push
or
dec
dec
adc
aam
add
pusha
jmp
cmp
mov
sub
adcb
lahf
dec
xchg
notb
add
xor
lds
or
push
jge
or
inc
scas
push
lods
push
pop
fistpl
enter
dec
cmp
loope
dec
mov
fistpl
fsubl
cmp
mov
xor
scas
lcall
jge
jl
into
scas
xchg
sbb
je
loope
push
mov
jg
popf
aaa
test
push
add
xchg
and
loopne
mov
loopne
loop
and
or
stos
xchg
in
sub
cmc
push
mov
jecxz
add
mov
lahf
xor
pop
sub
inc
ret
mov
mov
xor
lods
adc
sub
mov
stc
mov
jne
push
or
push
out
xchg
in
sti
cmp
push
xchg
jb
pop
popa
sub
sbb
sbb
jp
sub
fstps
push
sub
xlat
cmpb
jg
aad
xor
shll
sub
pusha
out
adc
scas
xchg
lds
stc
mov
test
ret
imul
test
inc
xor
repnz
aad
arpl
lret
scas
sbb
les
pushl
xchg
lea
repz
ds
jg
mov
and
call
mov
inc
fcom
dec
jno
cmp
cmp
or
mov
push
xor
gs
subl
or
popf
push
scas
pushf
fisubl
push
jb
clc
mov
add
lods
nop
xchg
and
gs
inc
push
fisttpll
cmp
xchg
push
add
push
push
movsl
lods
inc
imul
rcrl
fsqrt
out
jo
clc
dec
mov
and
fcoms
mov
out
cli
push
or
adc
push
cmp
hlt
sub
daa
ljmp
jns
or
hlt
inc
ds
dec
dec
jbe
xlat
xchg
scas
mov
imul
add
ja
mov
mov
nop
je
fstl
adc
cmp
orb
ja
push
into
mov
mov
jmp
push
sbb
push
inc
pop
adc
adc
movb
lahf
add
fbstp
pushf
mov
test
add
inc
dec
and
xchg
jno
cmp
fisubl
jle
cmp
std
pop
pop
aam
mov
imull
jp
pop
or
ljmp
roll
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
jmp
clc
inc
adc
xchg
jge
pop
movsl
pop
dec
push
mov
sub
out
jle
xorb
out
data16
adc
pop
fistl
nop
mov
adc
cwtl
push
clc
cs
pop
push
cmc
mov
fs
adc
mov
inc
lea
cwtl
cli
sbb
jne
cltd
and
insl
pop
shll
negl
popa
mov
xchg
frstor
dec
das
sub
out
mov
js
enter
add
out
pop
cmc
rcrb
fst
ja
mov
dec
jp
jo
fcom
ficompl
rclb
push
int3
ss
mov
or
or
mov
dec
inc
loopne
pop
imul
ljmp
inc
imul
std
cli
data16
cld
pop
frstor
popa
cmp
xchg
push
stc
xchg
mov
dec
xchg
push
add
scas
jne
fnstcw
dec
or
pop
jp
or
xchg
pop
mov
loopne
adc
mov
mov
mov
mov
xor
mov
js
aad
mov
clc
clc
dec
cs
adc
sbb
add
pop
inc
cltd
test
lret
repnz
fwait
clc
push
add
icebp
jmp
dec
add
fmull
xchg
das
cmp
add
fidivl
leave
js
mov
cmpsb
aaa
sbb
xchg
cli
push
iret
lret
je
lea
adc
push
repnz
mov
or
jecxz
pop
dec
xchg
sub
decl
sbb
mov
pop
inc
lods
popa
loopne
lods
outsb
mov
movsl
mov
data16
mov
in
fsts
xor
movsb
mov
mov
pcmpgtd
sub
xor
cmpsl
push
enter
cmc
ss
mov
inc
jecxz
or
fldl
cmp
sti
and
push
and
xchg
inc
and
out
mov
push
aas
adc
or
call
jle
sbb
cs
add
inc
cmc
mov
inc
outsl
jb
add
cs
mov
ret
mov
jp
outsb
sti
add
lret
sti
adc
xlat
fidivl
mov
jbe
pop
adc
xlat
lahf
outsb
xor
xor
cmp
jnp
rcll
repz
jl
shl
pop
push
shlb
dec
xchg
mov
jle
fisttpl
xchg
rolb
cwtl
outsb
ror
jnp
lea
xor
push
subb
adc
mov
dec
pop
sbb
imull
or
sbb
xor
sti
jge
out
push
fwait
outsb
stc
iret
testl
xchg
cmpsb
in
xchg
mov
les
movsl
xor
push
add
dec
sub
push
lock
scas
negl
jg
inc
cltd
inc
repz
sahf
ret
cli
cmpsl
pop
inc
or
aam
inc
shr
pop
jno
fs
int3
inc
xchg
scas
std
es
xor
rol
jbe
push
sbb
pop
aam
mov
inc
stc
push
dec
data16
adc
rcrb
aas
pushf
clc
scas
and
mov
xchg
pop
pop
sub
mov
pop
icebp
gs
push
jnp
test
pcmpgtb
push
pop
sbbl
pusha
sub
sbb
adc
cmc
pop
insb
negb
pop
hlt
icebp
xchg
lock
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
jmp
adc
repnz
mov
test
inc
in
icebp
or
or
jle
xorb
or
push
and
add
mov
mov
cmp
mov
cs
adc
out
sahf
sub
insl
lods
and
mov
and
jo
xchg
add
inc
push
idivl
popa
insb
push
lods
ja
xchg
scas
jo
popf
cs
inc
inc
test
add
mov
leave
adc
iret
dec
sahf
lahf
mov
cmp
pushf
data16
sbb
es
cmp
cs
adc
dec
scas
push
cmp
insb
cmc
and
xlat
rolb
and
xchg
or
push
filds
testb
shr
ret
repz
nop
adc
and
and
dec
scas
or
hlt
cmp
sub
in
jp
aaa
rcl
cmp
sub
mov
adcb
in
xchg
dec
mov
sbb
jns
aad
xor
push
das
enter
aam
jmp
xchg
imul
mov
xor
sbb
imul
jp
loope
push
fisttps
xchg
lea
or
int3
ss
fcompl
out
les
aad
fbld
jb
div
ljmp
stos
fists
imul
or
sbb
cmp
or
daa
popf
mov
fcomps
or
insb
ljmp
jecxz
cmpsl
pop
pushl
or
inc
pop
sbb
cmp
add
dec
mov
pop
add
inc
xlat
inc
cmpsl
sti
adc
in
scas
lds
loopne
movsb
mov
lret
das
ret
cmp
jl
jmp
dec
pushf
and
inc
ret
fs
and
stos
xchg
cmp
inc
mov
xor
cli
xor
mov
dec
call
fstpl
xor
mov
or
jne
faddl
out
je
movsb
rorl
lret
jno
adc
sub
sub
push
sahf
xchg
js
mov
cli
jmp
xor
js
imul
movsb
xchg
pushf
ret
lods
fstpl
mov
fimull
or
cmc
out
adc
roll
ljmp
inc
xchg
push
test
sbb
sti
jo
lcall
test
mov
mov
jge
pop
pop
pop
jbe
hlt
les
into
dec
call
or
mov
xchg
mulb
cmp
sarl
and
lret
int
sbb
pop
jp
jecxz
adc
cmp
sahf
or
xchg
pop
pushf
push
fsubrp
fiaddl
sti
lods
xchg
xor
ret
push
or
fs
mulb
sub
pop
clc
dec
jns,pn
push
jne
inc
push
jnp
in
test
add
test
mov
adc
or
dec
jbe
cmc
jb
xor
dec
call
addr16
jle
orb
adc
shll
data16
pushf
into
mov
jbe
jne
hlt
cmp
mov
jno
ljmp
aas
sub
jo
jae
inc
ds
loop
mov
or
dec
ja
aaa
xchg
add
enter
testl
sub
pop
xor
inc
cld
jmp
jl
sub
jge
jge
inc
sbb
fistpl
sbb
xorb
mov
mov
push
mov
nop
sbb
andl
pop
addr16
mov
sub
les
sub
into
das
out
dec
or
movsl
push
lea
aam
insb
clc
dec
lods
shrl
push
xchg
dec
scas
ret
fisttps
loope
mov
insb
jge
push
xor
sub
aaa
dec
sub
filds
inc
or
outsl
sub
dec
stos
orl
mov
es
loope
mov
mov
into
inc
xor
mov
std
inc
mov
lret
pop
jg
je
push
jae
out
sub
adc
cld
xlat
add
dec
aas
push
jg
xchg
test
enter
push
lahf
scas
call
push
sub
inc
mov
and
mov
mov
dec
xor
in
scas
sbb
or
mov
sbbb
xchg
lcall
and
pop
mov
in
imul
maxps
jl
jmp
std
or
jmp
fnsave
sar
andb
xlat
mov
popa
cli
push
imul
jnp
call
pop
in
mov
push
pop
jb
adc
aam
pop
push
outsl
pop
pop
inc
mov
test
incl
add
xchg
xchg
daa
dec
mov
mov
stos
push
ret
testl
int3
sub
inc
jnp
mov
cmpsb
adcb
mov
sbb
jo
mov
hlt
aad
sbb
enter
sub
fwait
subl
mov
cmpsl
xchg
inc
xchg
pop
icebp
inc
out
mov
or
add
cmpsb
aas
dec
aad
sti
push
ds
data16
mov
xor
inc
shlb
xor
imul
std
jle
sbb
cmp
dec
xor
sub
cmp
sub
ss
loope
or
sbb
insl
mov
xor
adcl
fwait
insb
iret
inc
mov
pop
mov
jo
cmp
stos
mov
pop
data16
sub
inc
es
jb
adc
pop
out
xor
jp
leave
sub
mov
dec
cmpsl
mov
jae
lods
xor
icebp
stos
imul
lods
mov
mov
idiv
dec
mov
sbb
adc
xchg
sbb
or
xchg
out
adc
xchg
mov
scas
push
cmp
testl
mov
cmpl
pop
shlb
fs
jno
adc
ljmp
adc
das
loop
daa
or
sbb
fistl
outsl
cltd
xor
sbbb
or
sbb
icebp
xor
adc
dec
sti
push
pop
mov
ss
ss
gs
adc
js
rcrl
in
inc
loope
ss
xchg
sbb
fcoml
in
mov
and
movsb
sub
ja
dec
fimull
dec
repnz
xchg
ja
es
mov
push
test
push
mov
fs
sub
pop
sbb
cld
insl
add
sahf
inc
jno
mov
ret
popa
mov
flds
insb
mov
ja
pop
movsl
je
xlat
fisttps
bound
fwait
int
push
dec
mov
mov
mov
xor
jmp
nop
cltd
fstl
xlat
push
mov
mov
push
jle
xorb
mov
fsubrl
mov
lods
mov
outsl
sbb
mov
stos
inc
fsts
dec
cmc
in
sahf
dec
dec
add
mov
jp
mov
add
sti
push
dec
mov
inc
lret
xchg
jnp
push
mov
insb
das
imul
push
dec
xchg
mov
cmpsl
and
adc
ljmp
push
cmp
mov
std
add
arpl
pop
aad
push
and
jg
fists
lahf
and
dec
push
mov
lahf
ret
mov
mov
inc
pushf
movsb
and
sbb
sub
mov
mov
sub
sbb
shlb
lds
sub
jnp
xor
adc
jp
xchg
inc
inc
or
mov
pop
cmp
leave
hlt
dec
or
es
iret
hlt
mov
pop
push
or
jecxz
int3
repnz
sub
fs
and
push
jmp
dec
xchg
cmc
cli
adc
add
xchg
ffree
add
adc
cmp
ret
arpl
cmp
xchg
adc
adc
mul
ret
add
sub
cli
fxch
mov
in
stos
andb
lahf
stos
repz
mov
dec
repz
pop
sbb
shufps
mov
loope
ret
fidivs
loopne
xchg
inc
adc
out
inc
mov
add
cltd
sbb
add
icebp
scas
mov
mov
and
adc
pop
stc
outsl
mov
cmp
mov
stos
or
movsb
dec
sti
lret
pop
mov
mov
sub
dec
xor
mov
mul
adc
inc
out
xchg
stc
int3
jp
jl
and
inc
fimuls
fstps
adc
ss
sbb
mov
jns
cmp
push
inc
and
mov
aaa
cli
push
subl
sub
or
push
and
xor
mov
fstps
int3
aam
or
sub
and
mov
fs
popa
mov
xor
push
lret
inc
sahf
cmp
mov
pop
and
dec
inc
sub
mov
in
adcl
das
jne
push
addb
jne,pt
push
add
and
xlat
push
mov
popf
add
imul
cld
pop
js
leave
jecxz
pop
movsl
outsl
xchg
and
outsb
je
jne
pop
roll
and
ret
sbb
jmp
mov
mov
call
mov
push
xchg
scas
in
int3
imul
ficompl
xchg
push
mov
cmc
and
pop
shlw
fld
jno
icebp
or
mov
jo
inc
fwait
sub
aad
sub
ljmp
stc
fiaddl
dec
cmp
sub
sbb
dec
inc
aad
ljmp
inc
mov
sbb
adc
stos
leave
push
sub
ffree
xor
mov
jns
push
inc
cmc
lcall
xchg
add
xorb
xchg
int3
push
mov
das
sbb
ficoml
mov
mov
add
pop
rcll
jecxz
in
cmpsb
out
mov
ss
push
pushf
mov
dec
cmpsl
fdiv
add
mov
cmp
add
ret
pop
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
push
mov
andl
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
mov
xor
mov
or
add
adc
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adcl
xor
xor
add
mov
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
adc
movl
or
movl
movl
xor
movl
mov
xor
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
mov
sub
or
mov
sub
mov
xorl
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
xor
xorl
add
movl
cmp
movl
jb
addl
mov
add
mov
xor
add
and
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbbl
xor
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbbl
add
sbbl
imul
xor
mov
add
mov
sub
movl
cmp
movl
ja
mov
xor
orl
add
jmp
mov
mov
xor
xor
mov
adc
add
add
imul
mov
sbb
mov
or
mov
sub
cmp
ja
jmp
ljmp
insl
imul
xorb
jle
pop
xchg
cmpsl
leave
icebp
mov
rcl
outsl
fmuls
pop
aaa
aam
xchg
xchg
loope
mov
cmp
sbb
pop
sti
aaa
popa
test
aam
or
cmp
leave
andl
adc
jbe
ret
push
les
dec
sub
rcll
or
inc
leave
test
popf
outsb
lods
shlb
dec
sbb
arpl
test
movsb
cmc
addr16
shll
shll
ss
pop
dec
push
xlat
sbb
dec
jl
shr
or
or
push
and
dec
or
add
fwait
inc
push
mov
out
mulb
pop
outsl
iret
xchg
add
nop
je
pop
mov
sub
push
jl
aas
mov
or
xchg
mov
movsb
fbld
popf
xor
pop
pop
jne
lock
push
mov
ret
mov
jmp
cli
cltd
mov
lret
icebp
scas
jbe
mov
loope
pop
push
cwtl
sbb
or
jle
lahf
dec
inc
adc
out
add
xor
cmp
in
jnp
push
mov
rclb
lds
mov
out
add
ficomps
sbb
sbb
inc
push
jne
sub
loopne
xchg
aad
mov
push
mov
shl
push
enter
dec
es
rorl
ljmp
jmp
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
rorb
push
mov
push
stos
mov
cmp
mov
jle
mov
mov
xor
or
xor
push
loopne
outsl
cmp
lcall
out
xor
dec
xor
mov
out
pop
fisubrl
lcall
cmpsl
jnp
sub
fs
sub
enter
and
test
cmp
pusha
sbb
fbstp
subb
mov
sahf
mov
imull
out
dec
scas
aaa
sub
mov
mov
jns
imul
mov
mov
cmp
outsb
mov
mov
inc
pop
push
or
sub
mov
mov
xor
enter
and
dec
icebp
sub
dec
jg
sbb
in
icebp
push
add
leave
dec
mov
jmp
pop
repnz
jle
mov
dec
jo
call
add
push
scas
and
in
adc
cmp
xor
in
out
xorl
imul
adc
lcall
rcll
popf
sub
dec
cld
fbld
push
or
mov
mov
dec
add
imul
lahf
push
xlat
jmp
cmp
push
xchg
push
test
sar
orl
sti
add
jae
push
mov
rcll
add
dec
into
sbb
xor
mov
jmp
mov
mov
jmp
fs
popf
insl
pop
gs
xchg
popl
push
adc
jle
jg
jle
jne
or
mov
aam
add
xchg
add
and
push
xor
lds
cmp
cmpl
pushf
mov
lcall
or
movsb
in
inc
clc
fwait
shll
jmp
push
push
sub
sbb
rorl
xchg
adc
loop
xchg
ret
lea
inc
sub
shrb
cmp
int
imul
mov
pop
mov
xchg
imul
or
bound
push
add
into
lods
mov
push
push
daa
sbb
rcl
cmp
cmpsl
outsl
fsubl
fistpll
mov
cli
fcmovbe
fimuls
std
push
jg
aaa
and
dec
adc
dec
sub
cltd
mov
cmpsb
test
adc
mov
je
iret
lds
int
out
sub
pop
popf
out
ret
pusha
jbe
dec
cli
insb
pop
and
imul
mov
mov
stos
pop
mov
mov
push
push
mov
test
inc
add
or
into
popa
dec
shrl
movsl
sahf
xchg
push
in
dec
sbb
jmp
mov
xchg
ss
pop
stos
fmuls
stc
in
mov
push
mov
aad
or
xor
mov
mov
imul
daa
jmp
repnz
or
ficoms
repnz
mov
jo
cmpsb
nop
gs
mov
movb
xor
shlb
clc
jmp
xchg
push
int3
jns
imul
loopne
mov
jle
jg
jle
js
jnp
shlb
push
outsl
push
icebp
mov
rclb
sbb
pop
inc
add
leave
pop
xor
aaa
inc
adc
fnstsw
lock
cld
pushf
mov
sbb
lcall
mov
sbb
mov
daa
pop
xlat
call
and
lret
dec
leave
ss
iret
scas
neg
dec
push
jg
outsb
ja
push
mov
pop
mov
sbb
cld
push
push
mov
lds
xorb
inc
test
int
sub
imul
cmc
pushf
or
add
cmp
xadd
lds
dec
pop
cmp
rcl
jo
mov
cs
test
adc
in
jb
sbb
int
stc
push
in
int
or
sbb
sahf
mov
mov
ret
pop
jns
dec
in
sub
push
xor
sbb
jb
aas
xor
daa
lret
aad
jp
lds
push
push
rep
pusha
test
cmp
ja
jl
sahf
mov
dec
loop
in
jnp
inc
decl
cmp
adc
sub
push
cmc
push
jmp
pop
xor
mov
inc
insl
mov
aad
test
lahf
and
mov
imul
cwtl
pop
sub
mov
scas
je
lcall
mov
xchg
xor
mov
aaa
cmp
push
sbb
push
add
fdivl
sub
push
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
hlt
mov
add
pop
mov
call
mov
jle
adc
jns
push
pop
adc
pop
insl
xchg
dec
ss
ja
push
or
mov
cmp
push
add
dec
cs
pop
mov
push
mov
and
insl
clc
jns
sub
xchg
repz
cmc
aas
sbb
jbe
jns
lret
and
ss
cwtl
jns
shlb
or
sub
cmp
and
jle
jo
xor
fs
not
sub
arpl
lret
push
dec
adc
pop
imul
cmpsl
xor
mov
icebp
popa
sub
call
out
test
push
cmpsb
in
jmp
pop
add
push
inc
fldenv
sub
add
loopne
mov
lret
push
jl
push
and
push
loopne
mov
xor
sbb
sub
adc
data16
enter
pop
decl
push
bound
xor
push
sub
rorb
jle
push
test
push
mov
sbb
in
jae
loope
mov
add
lods
call
mov
mov
adc
ret
mov
lds
std
subl
mov
pusha
es
jbe
jp
add
popf
repnz
sbbl
push
jo
push
arpl
outsb
dec
push
imul
adc
adc
lret
int3
incb
enter
add
loopne
adc
xor
daa
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
dec
push
dec
push
cmpsl
xor
cwtl
mov
mov
jle
lds
ljmp
sti
mov
jnp
fldcw
push
xchg
lods
cmp
pusha
push
stos
xchg
pop
jne
loopne
or
mov
cmp
sbb
ds
push
jo
in
xchg
cwtl
gs
repz
scas
lock
sbb
pop
mov
pop
dec
into
dec
lahf
les
stos
stos
cltd
es
mov
lea
jg
pop
sahf
int
or
aam
ret
ds
enter
idivb
xchg
xchg
and
adc
lret
das
mov
fidivl
cmpsb
xchg
xchg
sub
cmpsb
pop
jmp
pusha
mov
xor
cmp
out
in
or
dec
push
jmp
scas
test
mov
xchg
sbb
pop
mov
aas
cmc
pop
scas
mov
outsl
adc
leave
aaa
dec
cmpsb
mov
in
xchg
sbb
xchg
sti
arpl
popf
jns
test
and
cmp
xor
rorl
int
cld
and
mov
push
inc
sbb
mov
dec
push
fmull
xor
adc
fcomps
loope
push
dec
das
xor
repz
cmp
popa
scas
pop
pop
bound
negb
xchg
aam
mov
icebp
leave
mov
je
xchg
adc
iret
adc
add
incb
cli
leave
cmp
jl
cmp
jecxz
mov
bound
inc
fsubrs
pop
pop
fcomps
xor
add
mov
mov
mov
mov
jmp
andb
addw
or
mov
jle
or
xchg
lahf
xlat
push
pop
mov
aam
pop
jae
mov
sbb
jns
mov
test
iret
iret
mov
add
pop
leave
dec
adc
fs
or
jno
outsl
inc
testb
cmpsb
mov
sbb
in
push
repz
jle
and
sahf
dec
fcomps
fadds
push
sub
cmc
or
lret
push
data16
movsb
jno
movsl
icebp
xor
sbb
leave
pop
in
xlat
cmc
cs
cmp
sarl
enter
cmc
adc
sbb
into
adc
out
dec
lea
mov
mov
mov
sbb
push
mov
pop
xor
jmp
leave
dec
ljmp
xchg
jnp
mov
and
mov
aas
std
jecxz
pop
sub
les
jne
jbe
xchg
bound
aad
and
inc
loopne
stc
es
jne
test
ds
mov
mov
xchg
frstor
loope
push
movsb
cltd
stos
loopne
rcrl
rcl
adc
sarb
loopne
leave
addl
rcrl
add
pop
pop
mov
sbb
jns
pop
int3
outsl
imul
dec
fldenv
pop
je
ret
filds
xlat
and
push
or
fcoml
sbb
es
and
lods
mov
popa
call
mov
xor
add
jmp
test
xor
push
mov
xor
iret
xlat
xchg
sub
jle
jg
jle
aad
or
cli
mov
shl
enter
js
or
mov
das
sbb
mov
mov
xchg
and
nop
out
jg
sbb
mov
scas
aam
push
nop
xchg
pop
mov
mov
popf
lods
cmpsb
adc
les
insl
clc
mov
xchg
inc
out
adc
aaa
cmp
ds
inc
add
push
jp
or
fidivl
aad
test
decb
sahf
js
mov
std
ret
gs
shl
das
sbb
sub
sub
jge
mov
shrb
push
mov
repnz
lret
je
add
pop
mov
mov
jbe
jmp
rcl
inc
je
cmp
xor
jo
mov
inc
cmpsb
clc
movsb
int3
ss
ret
or
insl
xor
movsl
jne
cmp
sub
mov
cmp
lcall
and
add
mov
movsl
mov
cmc
cmp
push
outsb
call
mov
es
mov
add
mov
out
outsb
jle
jmp
push
insb
and
xchg
push
outsl
dec
int
pop
mov
fsubrs
mov
adc
push
cs
adc
jecxz
cmp
lods
out
inc
pop
js
jnp
fcoms
pop
aam
push
xchg
or
xor
or
or
lods
testl
xor
in
frstor
dec
cmp
hlt
arpl
and
xchg
cmp
push
or
hlt
xor
add
jmp
in
push
adc
movsl
aas
push
daa
push
out
pusha
cs
mov
jle
sub
mov
mov
bound
stos
leave
mov
and
int
pop
pushf
xchg
sbb
stos
je
push
into
mov
imul
inc
jbe
shrb
adc
clts
xchg
xchg
movsl
pushf
cmp
les
lahf
mov
mov
imul
leave
addr16
mov
adc
dec
pop
inc
dec
pushl
pop
pop
cmp
xlat
andl
jp
in
lret
insb
dec
and
aam
sub
out
sbb
ss
fabs
ja
inc
dec
cmp
lock
xchg
enter
cmpsb
cmp
lods
icebp
mov
and
add
adc
fmul
add
fsts
lret
mov
xchg
and
xchg
imul
fndisi(8087
sub
xorl
call
and
fwait
mov
das
ret
pushf
sbb
xor
pop
jl
int
inc
pop
mov
adc
jp
jae
pusha
repz
mov
adc
es
mov
push
push
inc
xor
sub
inc
jle
ret
adc
lahf
jg
imul
mov
cli
rcrb
xlat
cltd
dec
into
sbb
ds
cwtl
repnz
out
and
inc
push
mov
out
out
fnstsw
into
fldl
mov
lock
xorb
mov
scas
and
insl
mov
ss
mov
add
inc
shr
dec
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
jmp
testl
xchg
and
filds
jg
jle
subb
and
fimuls
call
lcall
and
ds
rolb
xchg
cmc
pushf
test
je
sub
mov
in
movsl
pop
sub
in
push
popf
sbb
aaa
loope
dec
pop
xchg
inc
lahf
cs
push
mov
and
pop
xor
mov
adc
aaa
xchg
mov
push
nop
and
dec
outsb
cmc
push
jns
ds
in
test
and
jb
dec
and
jp
imull
jp
xchg
fisubs
movsb
cs
mov
xor
cltd
pop
push
pop
push
mov
jo
sbbb
push
dec
xchg
lock
in
nop
xor
std
aam
jnp,pn
sahf
in
inc
jb
in
fimull
sub
adc
xor
ja
pop
sub
lds
add
mov
popa
rol
add
sbb
inc
mov
xchg
pop
dec
mov
std
setnp
jge
mov
insl
and
adc
inc
push
movsb
inc
insb
adc
lds
sbb
xchg
push
cltd
cmp
jb
push
mov
cmp
sub
inc
sbb
movsb
lahf
roll
and
jmp
ljmp
mov
or
cmp
push
jle
sub
or
add
sbb
add
imul
jmp
mov
jns
dec
mov
fwait
jmp
jle
jg
jle
adc
js
and
sbb
cld
fwait
dec
pmuludq
bound
arpl
inc
pop
outsb
xchg
ret
insl
pop
mov
jecxz
push
jl
cmp
iret
das
insb
lret
dec
sahf
out
jp
sahf
mov
mov
setb
and
push
xchg
lret
insb
push
out
nop
pop
push
lods
mov
mov
ja
in
mov
pop
cmpsl
pop
or
jp
ja
and
inc
mov
arpl
xchg
ss
testl
lock
cmp
fwait
xlat
xchg
add
in
sbb
jge
psubw
mov
cmp
mov
or
roll
int3
adc
cmp
test
push
push
popf
test
aaa
sbb
sub
fisubrl
imul
xchg
rcl
lret
mov
imul
fmuls
jp
sar
imul
jg
outsl
imul
out
push
cmc
and
outsb
sbb
add
int
imul
mov
inc
rclb
pop
stos
jp
mov
fistpll
lea
jp
inc
in
xchg
cltd
sub
dec
lcall
adc
ret
enter
loope
mov
jno
es
movsl
adc
out
mov
and
ficomps
fimuls
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
jmp
pop
mov
sbb
or
ror
lods
mov
mov
jle
mov
mov
dec
inc
inc
mov
jg
mov
inc
xor
imul
insb
push
or
cmp
pop
lods
inc
in
cmpsl
test
and
test
push
jle
or
mov
repz
sub
mov
xchg
clc
fsubs
roll
xchg
xor
cs
es
mov
adc
mov
sub
or
dec
fnclex
jg
lret
and
loope
sahf
push
push
add
or
inc
dec
loop
push
shrb
imull
ror
and
fidivs
push
shrb
fstl
lahf
sub
jae
aam
ds
jno
cwtl
cltd
lods
inc
add
push
push
ljmp
popa
lds
xchg
jb
pop
cmpsl
mov
adcl
gs
cmp
pop
test
in
mov
sbb
int3
pushf
dec
movl
pushf
aam
or
pop
fimuls
xchg
xchg
or
jg
iret
inc
adc
lods
mov
sub
sub
cltd
pop
pop
xchg
stos
scas
addr16
sub
xchg
out
orb
fcmovb
nop
dec
dec
repnz
add
jno
jge
mov
adc
lahf
roll
mov
sar
nop
sub
popaw
pop
jecxz
les
nop
mov
pop
push
pop
jo
scas
arpl
bound
data16
jbe
jb
xchg
and
inc
sbb
out
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
or
push
or
mov
sbb
mov
movzbl
add
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
mov
xor
mov
push
mov
add
jmp
sub
in
cmpsl
insl
ret
mov
mov
and
jle
jno
jle
daa
nop
xchg
dec
mov
mov
jle
movsl
inc
push
lods
and
push
pop
xor
sub
xchg
inc
fdivs
add
je
lods
sub
test
imul
sti
movl
dec
mov
inc
mov
mov
jl
xchg
mov
mov
and
idiv
jmp
cmp
pop
push
push
pushf
xchg
lea
shl
popa
push
mov
mov
cmp
js
arpl
daa
clc
pop
pop
shlb
loope
andl
cmp
sbb
xchg
mov
cs
pop
imul
and
dec
icebp
cmpsb
mov
cmp
cld
xchg
push
divl
push
pop
lods
mov
cmp
decl
dec
dec
cmp
adc
insb
pushf
cltd
push
add
jnp
mov
jae
sbb
fnsave
outsb
out
push
adc
loop
lods
bound
sub
mov
dec
jge
es
sub
xchg
mul
sub
and
sub
test
sbb
mov
adc
cmpsb
cmp
sti
jmp
movsl
int
inc
dec
push
jmp
repz
mov
cmpsb
sbb
adc
repz
lds
push
sbb
dec
adc
mov
lahf
mov
mulb
cmp
lret
inc
stos
push
xor
dec
add
xlat
ss
imul
fst
ljmp
enter
das
shlb
fcomps
xchg
pop
adc
or
lcall
out
loopne
jnp
mov
orb
pusha
fsubrs
sbb
and
sub
out
aad
xor
jnp
xchg
cs
cwtl
icebp
rcll
pop
pop
jno
push
out
aaa
cld
push
outsb
loope
gs
lds
mov
and
mov
cmpsb
push
test
ret
enter
sti
xchg
les
dec
lods
lds
inc
jg
dec
jns
jge
mov
adc
ja
dec
xor
cltd
mov
fidivl
notl
shlb
dec
hlt
mov
sub
mov
paddq
ss
add
pmulhw
ret
or
bound
lods
adc
in
mov
lock
fdivrp
push
jae
outsl
dec
jno
xchg
dec
jb
cwtl
mov
mov
and
pop
adc
mov
xchg
scas
in
mov
push
popa
and
xor
push
lods
pop
or
mov
mov
fwait
repz
adc
lea
cmp
inc
xor
or
bound
pop
push
gs
sti
rcll
popa
pop
lods
sbb
cmp
push
mov
imul
movsb
sbb
test
in
lock
sbb
aad
mov
xlat
mov
test
addr16
dec
insl
sbb
outsl
add
test
in
ja
pop
jp
movsl
popf
cs
push
inc
sti
adc
cmp
test
mov
or
mov
addl
pop
sbb
jl
or
push
inc
xor
cmp
fistpl
sbb
push
stc
int3
jge
fs
mov
cmp
in
ret
cs
out
aas
insl
sbb
subl
js
clc
push
shrb
sbb
cli
je
mov
mov
xor
mov
jmp
cmpsb
loop
fmuls
jge
xor
add
cmp
mov
inc
ds
lock
divb
imul
or
add
leave
lock
and
cmp
pop
sub
iret
sar
and
sbb
leave
lret
stc
and
adc
mov
pop
or
arpl
arpl
cmpsb
mov
into
out
add
cmpsb
adc
and
mov
jbe
cli
dec
adc
inc
push
lea
xchg
xor
mov
jb
movsl
insb
mov
inc
push
mov
dec
mov
loope
jle
ss
pop
xchg
push
xchg
fistpl
jne
xchg
ret
mov
cli
jae
mov
add
push
dec
shl
test
in
std
test
cmp
insl
push
adc
sbb
sarb
movsb
mov
pop
popa
rolb
jnp
in
lret
sbb
sahf
mov
cmp
lock
in
stos
jo
mov
rcrb
lea
imul
xchg
or
les
hlt
cmp
mov
cwtl
add
push
or
cmc
inc
and
inc
sbb
xchg
jge
mov
add
scas
imul
fistpl
jb
push
xchg
lret
xor
data16
push
test
inc
test
movb
mov
repnz
and
or
or
pop
xchg
shrb
stc
mov
bound
jge
xchg
jns
les
jmp
adc
or
and
icebp
mov
push
xorb
xchg
push
in
lea
and
cwtl
leave
pop
pop
and
adc
fdivrs
lret
dec
das
inc
push
ljmp
stos
add
cmp
loop
or
in
or
iret
daa
xchg
dec
push
sbb
fstp
dec
sahf
cmp
and
inc
in
push
addl
push
iret
jns
jns
pop
sahf
inc
fists
pmaxub
lds
adc
out
or
mov
inc
sub
jge
mov
xor
mov
jge
and
xchg
push
adc
inc
cmp
ret
mov
mov
adc
enter
push
mov
mov
out
decb
inc
jecxz
cli
imul
sub
xor
icebp
cs
xchg
cmp
adc
sub
daa
push
arpl
aas
jp
dec
les
xchg
mov
addl
add
push
cltd
adc
iret
rcrb
bndldx
mov
sbb
sbb
mov
or
stc
loop
and
sub
xchg
movsb
es
fistl
daa
inc
out
pop
xchg
or
jns
ljmp
lahf
mov
inc
pop
pusha
mov
push
mov
stc
lds
dec
pop
scas
adc
popa
mov
mov
pop
jne
lret
adc
xlat
mov
sub
mov
ja
leave
sbb
lock
cld
inc
sbb
imul
push
lret
sbb
shrl
popf
ret
jbe
adc
ja
pop
mov
mov
fistl
and
sub
jns
mov
xchg
mov
xchg
sub
cmc
lret
in
repnz
mov
mov
mov
ret
clc
in
push
sti
cmc
add
sbb
push
xor
lcall
xchg
xor
int
repz
ljmp
repz
out
js
mov
jle
in
xor
inc
cmpsb
jg
add
mov
jge
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
jmp
testl
arpl
fwait
adc
push
cmp
mov
mov
outsl
ds
inc
popa
cltd
stc
es
ljmp
leave
sub
mov
incl
push
mov
mov
out
stc
ret
fidivs
sbb
fdivs
sti
adc
xchg
xor
sub
out
adc
fs
push
xor
out
pop
mov
fcmovnb
mov
cmp
lock
rcll
dec
and
mov
and
divb
vmovq
test
sub
sub
lret
pop
outsb
sub
push
pop
test
fcoms
jo
test
inc
adc
cld
dec
jo
mov
sbb
adc
data16
xor
sahf
out
sti
ja
into
and
jle
ret
mov
test
add
ss
fcmovb
pop
xchg
popl
dec
xchg
ds
sub
out
arpl
and
cmp
add
test
icebp
mov
mov
and
loop
jecxz
daa
fldln2
add
loope
jae
and
mov
aad
shll
push
repnz
mov
aas
add
jo
jno
mov
jnp
and
gs
pop
pop
repnz
mov
or
lea
mov
aas
lcall
push
dec
xor
push
fistpl
sbb
popa
jl
fistpll
xor
orl
sub
jmp
dec
push
xchg
mov
call
push
mov
and
mov
aaa
add
std
loop
movsl
push
loop
pop
xor
mov
insb
lods
mov
jno
push
mov
adc
fldenv
mov
add
pop
insb
mov
mov
movsl
fs
jp
cs
inc
jb
push
shrb
ss
push
push
cmp
push
mov
sub
shll
lods
jbe
jge
jo
mov
and
lods
or
adc
xorl
ret
lret
ja
cmpb
into
lahf
loope
arpl
scas
xor
jmp
jae
dec
aaa
xlat
outsl
cmp
mov
std
jnp
ret
mov
mov
mov
fsts
arpl
cld
xchg
cmpsl
add
xchg
mov
ror
or
pop
aad
mov
sbb
orb
or
arpl
inc
outsb
cmp
or
mov
push
push
loopne
aad
jge
adc
insb
fadds
and
xlat
stos
into
fidivl
cmp
dec
jge
pushf
adc
in
pop
lahf
inc
inc
dec
lret
adcl
into
xchg
lret
repnz
pop
test
xchg
xchg
cltd
mov
adc
xchg
mov
xor
or
in
mov
sbb
push
sbb
icebp
in
jns
ret
shll
cmpsl
xor
jmp
and
jae
sbb
aaa
shlb
aam
jb
stos
cmp
adc
xor
lods
mov
cli
mov
lock
xor
push
lock
sub
xor
add
test
rcl
loop
div
cmp
cmpsl
out
pop
jo
sub
add
inc
push
add
dec
xlat
mov
lahf
push
or
mov
ds
sbb
jg
leave
and
rcll
pop
xor
stos
loopne
pop
adc
aam
icebp
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
fdiv
es
jge
jge
jae
dec
pusha
inc
movsb
sahf
fistpl
jno
jle
dec
fs
das
insl
bound
lock
jne
add
fiadds
aad
push
push
pop
adc
ljmp
mov
idivl
pop
jbe
inc
outsl
test
xchg
mov
inc
push
and
push
pop
sbb
fidivs
mov
cmpsl
loopne
clc
inc
ds
cwtl
xor
outsl
inc
inc
stc
inc
repz
outsl
outsl
jno
fadds
std
ljmp
jno
dec
cmp
sti
jnp
loope
movsb
popf
in
sarb
dec
int3
inc
std
push
daa
mov
and
daa
and
xor
xor
int
xchg
mov
pop
add
pop
mov
fsubrs
jecxz
mov
gs
ret
es
mov
mov
sbb
dec
adc
add
fisttpll
stos
jp
push
inc
push
loop
and
mov
xchg
orl
dec
sub
adc
xchg
xchg
int3
jp
push
add
adc
lea
pusha
lret
dec
mov
or
inc
ds
xchg
stc
mov
jo
add
or
setno
and
add
sbb
xchg
jae
jmp
mov
arpl
inc
inc
repnz
pop
imul
xor
dec
inc
scas
cmc
fs
popa
pop
mov
test
pop
shl
lods
sub
jae
cmp
jp
fistpll
int
imul
adc
int
lahf
add
stos
inc
movsb
test
repnz
add
jp
mov
jp
dec
xchg
stos
sub
ds
out
cmc
inc
add
mov
scas
push
cltd
mov
add
sub
es
into
mov
jg
addr16
xor
mov
cs
pop
repnz
pop
les
and
pop
ss
xchg
inc
add
cmp
xchg
aas
rorb
out
add
scas
cmp
ret
mov
push
aam
add
mov
das
xor
mov
nop
mov
cmpsl
sub
push
cs
mov
adc
xchg
and
xlat
xchg
mov
xchg
les
sub
shlb
outsl
fisttpll
mov
inc
fimuls
popf
and
sub
xorl
cs
push
mov
jne
mov
mov
call
xchg
xlat
cmp
nop
leave
fmuls
notb
rclb
popa
mov
push
enter
cmp
dec
insb
icebp
fistl
outsb
push
or
jo
emms
xlat
ljmp
movsb
sub
je
das
mov
pop
add
iret
push
mov
pop
mov
rclb
daa
mov
sub
mov
test
sub
add
push
push
xchg
push
cli
add
xchg
adc
push
mov
lcall
inc
pop
lock
xchg
mov
and
scas
jns
adc
call
cmpsl
mov
ljmp
and
jb
sub
insl
repnz
call
leave
push
inc
call
xlat
aam
cmpsb
xor
jle
pop
dec
dec
dec
sahf
ss
sbbl
xlat
jae
cmp
cmc
cmpsb
scas
adc
leave
imul
sub
mov
and
fmuls
xchg
idiv
lcall
xor
leave
ret
push
mov
mov
add
mov
xor
sub
incl
mov
push
sbbl
mov
xor
movl
cmp
movl
je
mov
decl
jmp
fcmovnb
dec
filds
jnp
cmp
fidivs
jle
jmp
jle
inc
je
pop
adc
jae
jae
lret
xor
mov
mov
cmp
push
adc
xchg
out
cwtl
out
in
pop
mov
cwtl
or
sub
cmp
or
adc
mov
sub
pop
test
jge
out
jo
pop
inc
mov
dec
xor
mov
cmpl
incl
test
and
dec
pop
or
dec
cld
adc
sub
sbb
mov
push
jmp
dec
adc
lea
inc
xor
mov
lea
and
cmpsl
jle
sbb
sbb
cld
mov
pop
out
jge
ds
les
mov
mov
sub
arpl
mov
jb
popf
movsl
shl
xlat
or
jg
push
dec
aam
lcall
xor
test
and
dec
adc
in
add
sti
sub
mov
adc
xchg
pop
adc
ret
aas
jbe
repnz
sbb
xchg
call
inc
mov
jo
rorb
addl
inc
mov
or
rcr
adc
pop
sbb
fsubp
orb
ss
sbb
lcall
fidivrl
inc
mov
fildll
xlat
idivb
adc
andl
inc
outsl
fildll
call
mov
jno
testl
mov
or
call
push
jp
inc
and
inc
inc
subb
adc
jmp
mov
in
xchg
lock
dec
sub
xchg
fldl
js
aam
ds
mov
jmp
mov
les
gs
hlt
cmp
dec
mov
pop
loop
push
test
repz
xchg
shll
sbb
jecxz
in
push
inc
scas
in
mov
loop
add
add
mov
ss
mov
sbb
lea
daa
push
dec
dec
or
fadds
dec
mov
push
ja
xor
sub
std
into
dec
xchg
in
xor
rcr
js
mov
ss
psubq
movlps
je
clc
push
test
cmpb
icebp
cmp
and
inc
ret
mov
nop
aaa
adc
cld
jmp
and
push
xchg
mov
jmp
movsb
repz
xchg
movsb
or
dec
popf
repnz
insl
cmp
cmpsb
xor
dec
mov
pop
xchg
jl
jle
stos
mov
xor
and
push
or
xor
cmpsl
push
ljmp
jp
mov
sbb
and
sub
ret
cltd
cltd
gs
mov
popf
cli
pop
dec
xchg
mov
xor
pop
mov
push
pop
nop
xlat
add
jbe
sub
fstpl
outsb
add
popf
jge
loopne
fs
ja
shlb
mov
mov
popa
insb
dec
lret
pop
lock
cmp
fnsave
scas
aad
cmpsl
mov
jg
notb
or
std
jno
jne
sbbl
sub
xor
movl
cmp
movl
jne
add
mov
add
movl
jmp
mov
xorl
xor
add
movl
jmp
xchg
fcmove
pop
fstpl
dec
pop
mov
jle
jno
jle
adc
jl
aam
pop
adc
sbb
jg
fistps
inc
inc
jno
push
sbb
loop
pop
test
dec
jo
mov
cmpsb
push
fcmovne
and
cmp
inc
push
jns
lahf
rcr
sbb
mov
dec
aas
fbld
pop
int3
ret
inc
hlt
xor
pop
int3
out
sbb
arpl
lahf
adc
xlat
dec
jg
orl
and
xchg
xorb
add
jmp
hlt
cli
push
jg
push
outsb
int3
scas
test
loope
cwtl
cmp
int3
aad
or
or
data16
add
mov
sbb
mov
int
push
shrb
insb
ss
mov
fwait
loop
sti
cld
shl
pop
add
data16
hlt
inc
outsb
je
scas
loopne
inc
sar
addr16
or
adc
mov
or
xor
outsb
rcll
scas
outsl
pushf
rcrb
insb
subb
dec
scas
rcrb
dec
in
cmp
decl
mov
and
lret
ret
cmp
outsb
mov
cmp
jns
cmp
push
mov
fisubs
dec
mov
movsl
xchg
xchg
out
stc
mov
or
mov
imul
inc
push
push
adc
js
mov
cmp
in
sbb
mov
jbe
or
pop
sub
outsb
arpl
add
jle
popf
cmp
xor
aas
sub
adc
fists
and
or
pop
xor
adc
push
inc
lahf
jecxz
fsubrs
pop
shll
cli
lret
arpl
xor
mov
mov
es
or
jb
in
in
jno
cld
jae
jnp
daa
in
xchg
mov
mov
inc
gs
lea
sub
or
cmp
mov
cmp
xchg
push
shlb
mov
xor
mov
test
leave
fidivrs
xor
mov
leave
sbb
rorb
js
adc
cmp
cmp
out
inc
pop
mov
xchg
jae
bound
inc
jg
xlat
pop
into
ljmp
imul
outsl
dec
mov
mov
pop
outsl
in
xchg
push
adc
mov
fwait
daa
orb
mov
loopne
and
fnstenv
outsb
cmpsl
jns
fiaddl
cmp
repz
adc
adc
mov
dec
test
inc
and
ds
xchg
cmpsb
fisubrl
cmc
pop
out
pop
mov
mov
sbb
or
pushf
outsb
sub
je
cmp
in
repz
pushf
or
push
imul
mov
lea
in
mov
rol
in
addl
mov
rcrb
sub
call
cmpsl
push
aas
icebp
loopne
out
lock
lret
xchg
mov
movsb
add
push
jae
int
cltd
sti
mov
popa
pop
mov
or
sarl
rcl
mov
push
push
fmul
pop
xchg
jecxz
int3
jl
repz
mov
popl
sbbb
bound
out
popa
add
jb
aad
fwait
pop
mov
inc
sbb
scas
addr16
xor
hlt
jmp
cmpsb
mov
cmpsb
loope
mov
mov
xor
jmp
repz
inc
or
pop
inc
and
sub
mov
lret
jmp
jle
lret
inc
cmp
jb
add
lahf
fs
add
lret
inc
jg
xchg
inc
lret
es
mov
or
aas
shl
mov
xor
mov
outsb
push
into
shll
cmp
mov
clc
mull
scas
inc
jns
inc
test
sub
mov
cmpsb
or
rcrb
jp
mov
jbe
repz
mov
sub
imul
add
xor
sahf
outsb
xor
into
and
push
add
mov
add
insb
hlt
sbb
jmp
imul
mov
inc
ficomps
rolb
stos
jb
adc
inc
in
sub
lea
outsb
mov
mov
xor
in
std
mov
sbb
sbb
popa
jno
mov
stos
push
fwait
sbb
adc
data16
gs
cmp
cld
pop
movb
loopne
cmp
insb
adc
cli
mov
adc
lock
push
icebp
rcrb
sub
imul
icebp
xchg
fwait
sbb
ljmpw
shl
adc
imul
test
cmpb
rcr
lahf
push
jmp
cwtl
outsl
xchg
jne
adc
and
popa
loop
pop
insb
mov
pop
pop
pop
dec
and
jae
cmp
stos
pusha
faddl
push
cmp
add
pop
jae
imul
sub
ja
jb
jae
das
jb
shll
mov
ds
jmp
rclb
fmul
icebp
push
adc
cmp
add
lret
adc
cmpl
push
ss
int
jo
stos
push
gs
mov
sbb
xchg
sub
mov
mov
subl
mov
dec
inc
jmp
xchg
out
add
repz
add
dec
adcl
push
pop
outsb
xor
xor
or
movsb
loop
jbe
lret
xor
dec
add
fcmovnu
cmpsb
mov
repnz
leave
or
lock
mov
dec
leave
xchg
sbb
sbb
lret
push
loop
add
scas
testl
ficompl
fs
push
adc
clc
fiadds
test
decb
xor
sub
je
and
pop
test
dec
and
inc
mov
or
std
push
pop
in
sub
fdiv
push
popf
arpl
cmp
mov
sbb
lods
cld
add
in
in
iret
cs
enter
in
xchg
mov
jns
and
test
and
clc
in
cmp
inc
ljmp
bound
xchg
in
xchg
rcll
imul
adc
sbb
lret
scas
rol
adc
daa
mov
imul
sub
push
fcoml
sti
cmp
sahf
dec
inc
mov
scas
out
mov
add
test
repnz
jmp
das
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
sbb
mov
xorl
add
addl
movzwl
mov
xor
movb
lea
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
sub
negl
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
movl
add
movl
jmp
rclb
cmpsb
js
pop
mov
xchg
int
jle
jg
jle
mov
sub
sbb
ss
mov
in
xchg
and
xchg
mov
call
mov
push
mov
add
test
xchg
push
cwtl
call
add
gs
jg
xchg
insl
pop
mov
xchg
test
popf
jp
push
dec
xchg
xchg
int
lods
push
jb
push
test
leave
mov
cmp
icebp
jne
mov
lods
mov
out
mov
mov
sbb
scas
lds
mov
stc
xchg
push
xlat
mov
lcall
and
lret
lock
lahf
adcb
sub
or
add
call
dec
xor
mov
xchg
mov
and
ret
inc
jge
and
push
test
mov
ret
pusha
loopne
mov
dec
xchg
int3
clc
push
dec
aaa
sbb
push
sub
int
aad
cltd
mov
adcb
mov
inc
test
ss
push
in
sub
mov
imul
incl
lods
sub
adc
sub
test
adc
lcall
cmp
add
add
scas
inc
enter
mov
and
mov
push
mov
sub
xor
mov
subl
add
jmp
mov
mov
movl
inc
jmp
mov
jbe
pushf
pop
dec
fsubs
addr16
jecxz
iret
jle
sarb
jle
mov
sub
lcall
push
aaa
pop
sub
lods
pop
rcll
out
lahf
or
jbe
fisttps
out
adc
inc
popa
imul
adc
and
std
iret
pop
inc
bound
lds
cmpsl
dec
jge
cmp
fidivs
lret
lds
cmp
out
pop
adc
out
mov
add
jecxz
inc
ficoms
cwtl
arpl
push
sbb
repnz
scas
sub
cld
inc
cmpb
push
in
stos
xor
stc
xchg
push
push
call
jecxz
nop
std
fs
cmc
stos
loope
cwtl
cli
icebp
inc
xor
or
mov
cltd
cmpsl
ret
mov
push
test
mov
jg
or
jecxz
add
inc
inc
or
ret
mov
repz
mov
add
arpl
mov
fisubs
push
push
add
ss
sarb
mov
lret
dec
inc
test
sbb
pop
cmp
mov
xchg
or
add
jp
push
inc
dec
dec
scas
lods
daa
dec
push
dec
push
mov
cmpsb
movsl
push
xchg
adc
mov
clc
cmp
outsl
and
mov
dec
ficomps
xchg
mov
dec
dec
mov
cmp
cmp
jb
mov
mov
xor
add
cmp
je
push
push
jmp
insb
lds
cmpb
xchg
clc
out
jnp
in
sarb
jg
jle
fucomip
ret
push
mov
sub
dec
push
imul
push
rorl
cmp
pop
lcall
jmp
cmp
pusha
push
mov
fstp
call
inc
mov
jnp
mov
and
shlb
pop
mov
dec
pop
xlat
fdivrl
cmp
mov
test
push
add
dec
adc
into
pop
add
pusha
jae
hlt
cmc
in
out
push
into
dec
dec
loopne
imul
ss
les
push
pop
inc
mov
inc
dec
ror
cmp
les
and
iret
push
pop
jp
sub
mov
rcll
and
inc
sub
movsl
test
clc
push
adc
mov
popa
jg
and
push
mul
call
inc
fwait
and
and
mov
jg
das
cmc
push
pop
xor
mov
mov
pop
pop
push
jle
lret
sub
mov
fisttps
mov
inc
xchg
mov
mov
add
push
push
pop
and
lret
fcmovbe
mov
out
das
push
out
int3
sar
or
stos
or
pop
mov
sbb
sub
push
cld
sarl
inc
popf
in
jmp
jmp
mov
jmp
jae
cmp
cli
vpaddw
incl
pushf
sub
inc
sarl
jg
jle
leave
mov
lret
mov
imul
push
outsb
aam
and
mov
jno
loop
fs
jno
mov
cmp
cwtl
shll
sar
jle
popf
aaa
lea
sub
orb
mov
push
repnz
imul
inc
clc
xchg
xor
fwait
test
lcall
or
xchg
mov
inc
dec
jne
inc
dec
aam
xchg
mov
sahf
or
xor
xchg
cs
push
adcl
jmp
arpl
ss
fstps
push
push
cmp
pop
cwtl
adc
ljmp
mov
adcb
mov
pop
scas
dec
push
ja
inc
sub
mov
loopne
jg
int3
imull
fiadds
sbb
testl
or
sub
mov
sub
nop
enter
push
fs
scas
pushf
cwtl
inc
lods
mov
ss
xor
loop
popa
pushf
lds
mov
xchg
xchg
fninit
call
in
ret
push
push
addb
or
adc
cmp
dec
test
test
inc
xchg
ds
addr16
in
pushf
inc
push
and
inc
mov
add
inc
xchg
add
add
jmp
push
fsubs
pop
xchg
push
icebp
fsubr
jbe
ret
jle
sarb
jle
adc
stos
lret
xor
movsl
cmpsb
jmp
or
xchg
mov
mov
and
mov
push
bound
mov
inc
push
jp
mov
mov
or
daa
push
sub
pop
xor
orb
dec
jns
cmovg
fnsetpm(287
mov
into
and
or
xchg
mov
es
xchg
sbb
sub
push
stos
jno
and
stos
xchg
rcrb
outsl
lret
clc
xchg
mov
xor
pop
cmp
or
pop
pop
aas
subb
inc
jae
inc
xchg
pop
cld
repz
pusha
into
insb
dec
push
or
clc
cmpsl
stc
jnp
fistl
aam
mov
adc
iret
adc
popf
mov
aad
cmp
jns
test
push
and
loope
mov
mov
push
arpl
fistps
mov
cs
push
test
add
nopl
xchg
xchg
mov
cld
push
and
cltd
add
pop
outsb
test
inc
jecxz
push
inc
jbe
add
pop
rorl
lods
flds
fistps
and
inc
dec
jne
jne
notb
popa
sbb
leave
adc
call
fldt
out
mov
ljmp
js
repnz
mov
mov
jmp
xchg
sbb
cmp
inc
push
cwtl
pop
cmpsl
arpl
push
les
sarb
jle
jmp
stc
icebp
push
daa
add
and
loopne
or
pop
or
repnz
out
mov
adc
jae
mov
imul
cmp
jno
popf
outsb
jbe
call
mov
sbb
dec
jns
cmp
ret
jo
jmp
dec
mov
xchg
lcall
adc
sbb
int
fnstcw
jne
popf
jnp
mov
mov
not
add
arpl
pop
xor
stos
loope
pop
loop
pop
stos
test
add
inc
in
sub
add
ret
jne
push
xchg
pop
dec
push
aas
jb
loop
das
mov
dec
mov
std
js
mov
mov
and
add
add
mov
add
in
lods
mov
mov
inc
cmp
pusha
mov
fwait
add
dec
adc
pop
add
xchg
aam
inc
lods
cmp
pushf
push
in
inc
aas
leave
cmpsb
sbb
cwtl
mov
gs
cmp
scas
inc
add
mov
test
jbe
sti
xchg
cmpsb
xor
jnp
dec
arpl
je
jns
mov
icebp
in
lods
data16
fstpl
xchg
jo
loope
out
sahf
imul
lahf
or
cmp
ja
inc
or
mov
nop
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
jmp
fistpll
aas
or
or
jmp
jle
dec
aas
popa
cmc
or
sarb
jle
fmul
int
sahf
pop
jle
push
cmp
sbb
es
adc
add
mov
mov
add
push
rcll
loop
jmp
pop
xchg
mov
out
jb
add
ret
or
mov
addl
out
jnp
xor
mov
sbb
push
sbb
adc
pushf
xor
cmp
cld
pop
inc
xor
cwtl
fwait
push
mov
or
adc
dec
mov
dec
mov
loopne
pop
icebp
sub
lock
shl
add
or
iret
leave
inc
pop
adc
mov
cmpsl
sar
push
leave
ss
mov
in
push
es
or
pop
lds
jne
mov
cs
popf
stos
leave
dec
push
sub
inc
fldt
ljmp
out
pop
arpl
in
inc
jmp
or
idivl
mov
aas
xor
mov
popa
sub
in
repz
mov
jae
xlat
in
adc
mov
sub
cli
adc
repz
rol
pop
nop
stos
fs
fcomps
inc
fidivs
test
loopne
sbb
sub
mov
add
pop
mov
sbb
cmp
xchg
call
cmp
adc
roll
mov
mov
xor
add
jmp
mov
rorl
dec
rorl
sbb
mov
jle
sarb
jle
fcmovnu
push
nop
enter
stos
xchg
mov
call
pop
mov
push
fstps
xchg
fstpt
scas
mov
sub
push
xchg
mov
aas
movsl
pop
mov
mov
pop
xchg
rcr
add
push
test
push
aaa
dec
test
xchg
rol
jmp
pop
inc
rol
es
sbb
add
and
mov
dec
push
mov
iret
adc
test
pop
sti
pop
fcompl
pop
xor
jl
mov
mov
xor
adc
dec
std
repnz
aam
xor
sbbb
xlat
mov
cmp
stos
fistl
aas
inc
popf
aam
cs
mov
lock
sbb
lret
dec
loop
in
jae
pop
movsb
out
lds
add
daa
dec
pop
loope
imul
add
loop
adc
in
dec
xchg
pop
iret
scas
inc
inc
sbb
loope
jge
popf
xor
xchg
mov
mov
jle
fstpl
xchg
and
out
pop
fsubp
stos
sahf
repnz
enter
mov
and
enter
xchg
mov
mov
clc
mov
dec
mov
in
add
out
inc
sub
jns
adc
imul
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
jmp
xchg
mov
or
mov
mov
jp
fdivrs
sarb
jle
push
mov
cld
sub
fs
pop
mov
fsts
jo
clc
cmp
out
dec
dec
add
insb
dec
int
mov
and
icebp
decl
in
test
jmp
push
popa
or
mov
popa
jg
cwtl
sbb
pusha
daa
sub
mov
stc
lcall
inc
popf
sti
mov
add
int
repnz
cwtl
and
mov
ljmp
pop
jae
lret
jge
push
push
lahf
push
hlt
int3
testl
imul
cmp
inc
and
movsb
dec
add
data16
cmpb
push
xchg
data16
sub
xor
pop
data16
inc
xor
xchg
addb
or
push
push
xchg
shlb
adc
addl
rorb
dec
loopne
mov
arpl
faddl
mov
loopne
ljmp
das
mov
aam
sub
dec
lret
pop
sbb
sub
out
pop
add
pushf
dec
sbb
scas
out
call
imul
das
mov
arpl
sti
shlb
arpl
mov
add
jp
dec
add
push
movsb
adcl
xchg
scas
mov
and
cltd
jmp
in
mov
addl
jmp
test
cmp
jge
xor
imul
sarb
jle
add
mov
sub
ljmp
movsb
testl
xchg
fs
adc
inc
jmp
sbb
inc
pusha
inc
xor
aad
out
popa
fistps
fildl
fisubs
xchg
into
jae
add
sbb
or
add
xchg
adc
cwtl
daa
stos
mov
mov
push
jle
insl
es
or
mov
xchg
mov
cld
xlat
cwtl
mov
flds
jecxz
mov
imul
mov
mov
repnz
dec
popf
jle
dec
sbb
inc
mov
lds
ret
jge
cmp
pop
clc
dec
loopne
out
cmp
aas
scas
test
push
decb
lods
mov
and
leave
sub
bound
out
adc
es
inc
div
pop
dec
daa
shlb
jbe
mov
daa
cmc
stos
pushf
add
scas
push
data16
roll
aas
scas
and
insb
xchg
push
inc
pushf
or
push
jp
or
mov
outsb
int
pop
push
scas
nop
mov
xor
arpl
sub
mov
adc
or
je
mov
cwtl
pop
mov
sbb
and
add
rol
test
xchg
dec
lret
inc
lock
xor
jmp
dec
sbb
fstpl
inc
inc
jmp
cmp
jg
jle
or
pop
inc
stos
cmpsl
or
xchg
jns
lret
sti
aas
and
xchg
jnp
push
cli
clc
rcr
mov
call
movsb
sbb
ja,pt
mov
subb
aam
jp
and
jle
mov
cmp
daa
xchg
add
jge
sbb
cmp
hlt
cmp
pop
adc
aad
cs
arpl
push
ret
cmp
sbb
and
lods
js
mov
mov
jbe
inc
out
aas
cli
outsb
push
mov
push
jecxz
dec
sbb
and
mov
repz
adc
mov
jb
cmp
mov
mov
addb
aad
push
dec
loopne
xlat
scas
cmp
jg
ljmp
cld
lcall
and
adc
iret
mov
stos
xlat
ja
adc
pop
sub
mov
sub
lods
sbb
mov
fdivrs
test
outsl
repz
push
inc
addr16
and
push
sub
aas
scas
dec
int
or
push
add
stos
sub
movsl
lcall
dec
xor
or
pusha
mov
xorl
xor
jg
stc
std
push
pop
cmp
mov
pushf
fcos
cmpsl
and
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
neg
mov
movzwl
adc
mov
mov
subl
xor
add
adcl
mov
mov
adc
xor
or
push
movzbl
or
mov
adcl
mov
add
mov
xor
mov
mov
mov
or
mov
dec
mov
sbbl
mov
mov
adc
mov
orl
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
pushl
push
call
cmpl
jb
mov
xor
add
pop
leave
ret
push
mov
mov
jmp
cs
orl
add
lock
push
jo
jle
nop
shl
je
push
pop
jae
cmp
mov
push
inc
mov
xchg
jp
movsl
jnp
mov
loop
lahf
mov
test
inc
sub
cmp
dec
imul
sahf
lods
adc
or
pushf
xchg
or
cwtl
mov
adcb
mov
aaa
or
or
jne
shr
dec
ret
jmp
cmp
lret
mov
call
jle
jg
jb
mov
daa
leave
inc
shll
sbb
test
std
or
pop
inc
or
ret
arpl
addb
sti
in
jns
rorb
push
ret
psllw
stc
push
das
shl
adc
aad
push
mov
sti
cmpsb
adc
fstpt
adc
jecxz
pop
adc
movsl
jne
push
enter
mov
inc
sub
sti
mov
les
push
jg
ret
cmpsb
rcrb
pop
lock
cmp
inc
lcall
xchg
xchg
jb
mov
push
icebp
aad
or
je
jb
scas
test
icebp
rcrl
out
inc
andl
cmpsb
outsb
dec
outsl
mov
std
lahf
adc
cwtl
ficoms
sub
popa
loope
xchg
cmp
jbe
jle
stos
adc
mov
stc
ficoml
cmp
jmp
imul
pusha
pop
sbb
mov
lret
mov
sbb
scas
adc
popa
enter
jb
pushf
scas
xchg
and
repz
test
xor
std
enter
pushf
stos
mov
sub
jl
stc
cli
stc
dec
mov
dec
mov
add
fadds
jns
aad
cmpxchg
lahf
test
iret
push
xchg
xchg
push
icebp
xor
test
out
nop
sbb
xchg
cmp
mov
sub
adcb
push
adc
mov
lea
imul
test
bound
stos
cwtl
pop
adc
sub
jge
pop
jg
ret
pop
adc
mov
aam
mov
mov
xchg
adc
shll
repz
or
lock
and
lea
cmp
inc
in
xor
ja
sub
push
push
jp
sbb
repz
flds
mov
mov
sub
es
xchg
sbb
loopne
mov
insb
mov
imull
adc
sub
stos
jne
dec
xrelease
sbb
mov
jmp
adc
movsb
ja
cltd
fwait
dec
ljmp
nop
movsl
jl
xor
mov
div
mov
and
jmp
out
xchg
imul
bound
fistpll
push
jo
jle
gs
inc
clc
mov
and
mov
faddl
orl
mov
lret
lret
pop
pop
outsb
movsl
dec
stos
in
out
add
mov
sbb
and
dec
mov
roll
xchg
jg
aad
sbb
inc
add
dec
pop
test
aad
sbb
mov
flds
mov
mov
iret
pop
pop
pop
fisttps
data16
adc
pushl
lods
sbb
sbb
sbb
and
stos
popf
push
adcl
xchg
mov
add
out
mov
ja
sbb
fsubs
test
shl
test
jmp
push
enter
add
lea
cwtl
pop
xor
xchg
popf
aas
xor
pop
xchg
cmovae
mov
jg
cmpb
test
mov
movsb
test
mov
into
lock
push
push
jecxz
pusha
stos
pushf
lahf
in
inc
or
jecxz
fldt
mov
mov
xor
rolb
xchg
add
dec
dec
mov
and
popa
data16
xor
xor
dec
jb
ja
xchg
orl
mov
fstp
fidivl
dec
test
addr16
sbbb
lods
outsb
popf
outsb
xchg
dec
push
and
stos
mulb
add
and
push
cwtl
aam
inc
cmp
aas
mov
je
or
mov
adc
fsts
sbb
mov
xor
ja
or
inc
dec
adc
stos
stc
mov
mov
lock
lcall
mov
mov
fmulp
aad
add
add
in
add
pop
mov
fwait
xor
jge
jge
out
enter
clc
and
or
sahf
sbb
mov
test
sub
mov
jmp
mov
mov
fucomp
pop
add
add
test
add
cmp
stos
outsl
sub
in
jmp
sub
insb
sbb
in
sub
cmp
mov
lahf
fmuls
je
or
or
dec
imul
int3
out
jbe
arpl
fwait
sub
pop
std
push
popa
mov
call
ljmp
insb
sbb
push
out
mov
nop
aad
xorl
xor
out
pop
jnp
dec
and
mov
pop
fimuls
mov
sahf
jmp
int
xor
rcll
ljmp
push
inc
cld
scas
lea
ja
stc
sub
push
inc
rcl
pop
arpl
sbb
pop
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
adcl
movl
mov
sbb
mov
xorl
mov
xor
jmp
jno
test
gs
or
movsb
outsl
or
push
insl
movsl
sarb
inc
jg
jle
movsb
push
rolb
test
das
jns
adc
dec
pop
dec
ss
pushf
cmp
xor
adc
xlat
icebp
cld
push
sbbb
loop
adcl
mov
pop
or
int3
sub
xor
lods
mov
in
out
mov
xchg
leave
es
sti
adc
add
xchg
or
sub
in
sbb
adc
mov
sbb
in
repnz
or
and
dec
popf
adc
dec
mov
inc
es
rol
jo
mov
jge
sbb
out
stc
sub
adc
xchg
cmp
andl
and
pop
push
fiadds
loopne
dec
mov
cmpsl
ljmp
mov
mov
das
ljmp
adc
loope
inc
daa
inc
std
or
repz
cld
scas
push
sahf
test
fstpt
push
testb
add
cmp
xchg
or
pop
cmc
popa
pop
shlb
jge
and
outsb
cmpsl
out
clc
cwtl
jns
lcall
pop
xchg
sbb
mov
pop
lahf
repz
leave
jle
or
push
push
jb
lods
push
jecxz
xchg
jns
lds
popa
or
cld
sbb
inc
xchg
cli
jnp
incl
xchg
scas
sbb
notl
cmp
repz
dec
dec
add
push
xchg
jno
imul
loop
sbb
aaa
mov
mov
push
in
in
fwait
jmp
js
in
mov
xor
fcoms
mov
es
jb
add
and
out
and
xchg
lock
mov
xchg
inc
cmp
add
mov
mov
mov
sub
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
jmp
test
pushf
dec
pushf
inc
pop
cwtl
mov
aaa
and
jle
inc
jg
jle
cmpsl
out
mov
es
movsb
pop
bound
jmp
fistps
cmpsl
popa
insl
inc
fsubrl
pop
lods
std
adc
xor
lods
lcall
mov
in
xchg
cmpsb
popa
or
mov
sbb
adc
mov
daa
mov
adc
xor
sarb
xor
cmp
mov
dec
ret
mov
cmp
xlat
ret
data16
popf
ljmp
mov
cli
insl
push
lds
je
mov
xchg
rclb
lods
xchg
jne
mov
dec
pop
inc
adc
popa
jo
in
lea
test
aad
or
xor
inc
shll
inc
mov
pushf
jg
into
adc
xor
flds
sbb
and
scas
dec
out
repnz
xchg
test
push
sbb
repz
xlat
ret
xor
xchg
push
push
jecxz
add
clc
mov
fnstenv
jge
xor
negb
dec
pop
jg
dec
lea
nop
push
mov
bound
xchg
and
push
cltd
xor
sarl
jg
sahf
out
pusha
xchg
cmc
mov
mov
inc
mov
mov
mov
xor
andl
mov
mov
or
pop
out
or
fldenv
inc
jecxz
cli
lret
xchg
lret
and
mov
cmc
fwait
mov
add
adc
aad
lock
filds
les
repz
loope
insb
dec
cld
mov
out
jo
sbb
push
addr16
xchg
and
xchg
jno
dec
lods
rorb
sub
pop
outsb
push
pop
pop
sub
fiaddl
mov
sub
roll
ret
push
mov
sub
push
sbbl
push
push
xorl
push
sbbl
call
sbbl
test
je
orl
xor
jmp
orl
push
call
sbbl
test
movl
je
push
push
adcl
call
jmp
subl
call
cltd
cmp
movl
jne
cmp
movl
jne
subl
push
call
jmp
negl
push
adcl
call
test
jne
andl
xor
xor
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
and
mov
movzbl
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
lea
mov
add
lea
inc
mov
inc
mov
mov
orl
mov
add
mov
xor
xor
adc
mov
xor
xor
mov
add
mov
mov
mov
cmp
mov
movl
je
mov
xor
adcl
add
imul
movl
mov
jmp
xor
adc
add
mov
mov
mov
sub
or
mov
xor
add
mov
subl
mov
add
mov
negl
xor
decl
add
movl
cmp
jne
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
add
mov
orl
mov
mov
not
mov
xor
add
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
and
add
mov
lea
and
mov
mov
adc
mov
mov
sbbl
mov
sbbl
xor
add
movzwl
and
mov
addl
mov
or
lea
mov
sub
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
xor
xor
dec
mov
jmp
movzbl
or
mov
xor
xor
add
mov
mov
sbbl
movl
mov
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
pushl
pushl
pushl
push
pushl
push
push
push
call
xor
xor
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
movzwl
add
xor
movl
mov
mov
add
mov
xor
xor
sub
mov
orl
xor
movl
add
movl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
xor
or
dec
mov
jmp
mov
xor
adcl
add
movl
cmp
jne
xor
add
sub
mov
xor
mov
incl
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
xor
xor
mov
andl
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
not
mov
mov
subl
mov
andl
movzwl
add
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adc
mov
subl
mov
xor
add
xor
mov
mov
xor
sbbl
add
andl
xor
subl
sub
orl
mov
subl
movzwl
sub
movl
cmp
movl
mov
movzwl
movl
jg
xor
sub
adcl
sub
mov
jmp
notl
xor
lea
mov
mov
mov
not
mov
movl
cmp
movl
je
movl
mov
movl
movl
movl
jmp
mov
cmp
jne
mov
mov
movl
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
movl
cmp
movl
jne
addl
mov
sbb
mov
xor
xor
mov
add
mov
movzwl
subl
not
sbbl
and
mov
movl
mov
jmp
andl
xorl
mov
notl
pushl
adcl
call
xorl
test
movl
je
jmp
movzwl
mov
cmp
jne
movl
mov
movl
movl
movl
jmp
movl
mov
movl
cmp
jne
sbb
mov
andl
mov
movl
xor
xorl
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
mov
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
andl
mov
sub
push
mov
add
push
call
incl
cmpl
jb
mov
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
mov
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
and
movl
mov
orl
mov
adcl
add
sbbl
xor
movl
cmp
movl
jne
xorl
jmp
lods
inc
movsl
es
lods
inc
pop
push
cmpsb
mov
rcl
jle
fbstp
jle
cmp
or
jle
add
lea
icebp
cmp
repz
pop
loope
dec
sbb
cmp
nop
cmp
xchg
test
mov
sahf
pop
xchg
sub
rcl
jnp
mov
add
mov
sbb
enter
dec
mov
mov
adc
aad
aad
js
nop
scas
pop
jbe
dec
xor
jo
add
xor
mov
push
inc
in
stc
add
repz
popa
dec
mov
push
jmp
sahf
add
loope
pop
adc
pop
in
in
lret
xlat
sbb
and
lret
aaa
cli
aad
aad
cmpsl
dec
mov
arpl
adc
movsb
add
movsl
in
mov
and
pop
push
add
or
jnp
insl
pop
mov
imul
test
cmpsb
or
cmp
jp
xchg
mov
aad
test
jmp
cmp
cmp
outsb
icebp
xor
fstps
push
pop
loope
push
and
inc
xchg
add
xor
repnz
mov
stos
jbe
xchg
popf
sub
pop
test
and
add
xchg
fdivrl
inc
xor
mov
xor
mov
push
mov
loope
xchg
rcr
cwtl
push
sbb
setle
lret
subl
push
cmp
orb
scas
lods
mov
inc
mov
ret
add
push
sbb
pop
jmp
scas
mov
shl
iret
es
in
add
daa
nop
dec
mov
sbb
icebp
cmp
fiadds
rcl
sahf
loop
rclb
xchg
aas
cmp
popa
mov
pushf
sub
sbb
loopne
hlt
sbb
mov
mov
jne
mov
outsl
push
pop
mov
push
cli
roll
lcall
int3
push
call
outsb
in
test
test
movsl
movsb
cmp
push
mov
gs
adc
mov
dec
and
aas
negl
jns
dec
pop
sarl
or
in
mov
push
or
xchg
adc
add
pop
add
add
add
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
add
and
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
jmp
mov
pop
outsb
adc
jnp
xor
call
call
jle
mov
and
push
sbb
insb
mov
jno
mov
and
and
lea
lods
shl
jnp
sbb
pop
lcall
pushf
imul
pushf
jo
jp
pop
notb
mov
ret
fs
out
xchg
sbb
out
push
jp
jbe
sbb
insl
scas
aaa
mov
xchg
jbe
stc
push
cli
xchg
xor
clc
add
les
in
dec
out
lods
test
fs
add
dec
pop
and
adc
mov
jge
outsl
imul
imul
sarl
repnz
dec
sub
ret
xlat
es
mov
movhps
push
and
push
pop
mov
test
xchg
add
jp
inc
dec
sbb
loop
pop
pop
jns
test
mov
es
dec
movsb
aad
push
xor
inc
lods
adc
arpl
push
sbb
pop
in
or
cmc
fdivs
adc
add
out
cwtl
cs
or
mov
out
imul
fmul
inc
dec
insl
xchg
fs
leave
into
push
mov
xchg
mov
inc
lret
pop
xor
loop
out
mov
xchg
mov
test
dec
rcrl
cmpsl
inc
dec
inc
jnp
xchg
fdivrl
mov
xor
mov
add
dec
mov
ret
pushf
mov
clc
xor
inc
mov
lds
push
mov
adc
icebp
cmp
movsl
fwait
pop
or
jno
and
dec
fldenv
test
testb
sub
lret
mov
xchg
adc
inc
pop
cmpsl
aas
sub
push
add
popa
jnp
push
in
adc
add
int
mov
jp
insl
into
push
add
in
pop
lret
scas
mul
sbb
cli
mov
fnstenv
out
je
mov
in
or
push
and
and
cmpl
rclb
xor
mov
jbe
and
pop
aas
imul
mov
scas
adc
sub
adc
push
inc
cmp
lahf
sub
rcrl
cmp
pop
push
movsb
inc
call
mov
xor
xchg
repz
sub
fmuls
add
dec
adc
mov
add
ret
push
mov
push
inc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
xor
movl
sbb
jmp
imul
jge
dec
jb
jmp
repnz
adc
jg
jle
lock
jne
pop
xorb
out
cld
dec
movsb
ret
aaa
repnz
into
stos
sub
ja
outsl
push
xchg
sub
rcrb
mov
sbb
pop
mov
mov
or
sahf
sub
xchg
pop
cltd
sahf
mov
sbb
inc
test
aam
push
pop
push
pusha
dec
aad
stc
lock
rclb
cmc
add
pop
jecxz
or
aaa
sbb
and
xor
xor
dec
shrl
gs
insl
mov
xor
add
and
add
or
push
shrl
xchg
mov
pop
jbe
mov
xchg
adc
leave
pop
sbb
pop
push
cwtl
fidivs
shll
fists
out
ss
push
adc
out
ret
sbb
jecxz
lock
jge
mov
icebp
xchg
repz
sbb
xor
cmp
pop
enter
test
ret
cmpsb
xchg
icebp
and
and
sub
push
out
out
fdivs
fldl
mov
inc
xor
idivl
pop
aad
xchg
adc
imul
out
xorb
mov
jbe
sub
and
mov
lcall
sahf
pop
mov
xchg
push
cli
js
imull
inc
jbe
mov
jbe
subb
pop
dec
jge
incb
rcr
test
add
mov
adc
dec
in
bound
inc
push
sbb
and
ret
push
in
shlb
icebp
popf
test
shll
insb
in
fidivrs
xor
sbb
adc
icebp
add
test
jle
rclb
sbb
pop
jne
cwtl
cli
sbb
sbb
lcall
and
daa
movl
or
mov
push
or
mov
add
mov
xor
xorl
xor
dec
mov
add
addl
add
imul
mov
movl
cmp
movl
jne
mov
mov
jmp
fisubrl
cld
mov
adc
pop
xchg
mov
jae
jle
pop
jg
jle
test
push
push
sahf
cs
cmpsb
shlb
repnz
call
lea
sbb
jmp
mov
andl
fcmovbe
sbb
mov
in
addr16
sub
and
mov
pushf
mov
mov
lock
jle
dec
test
and
divl
bound
and
lock
jle
out
hlt
xchg
stos
add
fldl
leave
loop
scas
bound
fsubrl
lods
fstps
cmp
ja
or
inc
dec
dec
lea
notl
sub
aad
cmp
push
xor
jns
out
sub
aaa
pop
roll
sbb
lock
das
mov
jecxz
sub
xor
and
mov
sti
sub
mov
mov
pop
fdivp
jo
push
xchg
dec
or
popa
out
push
fwait
idivl
nop
lock
inc
dec
ret
lret
push
adc
push
in
xchg
xlat
fldl
dec
sti
mov
xor
inc
jno
es
cmp
test
pop
call
push
inc
stos
fwait
push
xchg
les
mov
lahf
sarb
ret
stc
aam
mov
mov
js
cmp
lock
sub
ja
push
cltd
jnp
rcll
repz
ljmp
hlt
sarb
sbbb
mov
push
cltd
pop
sbb
pop
adc
loop
fidivrl
push
xor
mov
jnp
jbe
xchg
lcall
jne
cmp
cmp
hlt
sub
sbb
push
dec
lods
repnz
inc
pushf
xchg
sbb
data16
lods
cmp
pop
sbb
je
fs
sub
rcll
fstpt
and
and
loop
jbe
ret
add
jmp
pop
icebp
lds
fs
xchg
imul
lret
push
out
jle
pop
jg
jle
sbb
js
leave
mov
adc
out
or
test
pusha
jmp
push
loop
test
xchg
mov
pop
leave
mov
fsubs
out
bound
insb
jecxz
xchg
pop
outsl
mov
aad
ja
subl
cmpsb
push
shr
pop
adc
jo
cmp
gs
add
push
pop
push
cld
dec
movsb
test
sub
int
shl
repnz
sbb
fldl
add
daa
pushf
pop
sub
pop
js
xorl
testb
outsl
mov
out
dec
xchg
sub
and
aam
jp
das
xchg
lret
jge
call
les
mov
sub
sti
das
js
add
xchg
cs
out
mov
jg
mov
fs
add
rcr
dec
test
daa
out
adc
incl
fwait
mov
fstpt
out
mov
pop
sub
mov
ds
ficoms
daa
ret
add
out
inc
push
xchg
test
dec
pop
xor
lahf
cmpb
fcompl
cmp
mov
fs
push
je
das
rcll
andl
cmp
push
rorl
xchg
lea
repnz
scas
std
test
mov
ljmp
call
and
inc
outsb
in
loop
mov
iret
xor
mov
rdtsc
pushf
inc
icebp
hlt
mov
mov
leave
mov
and
into
adc
and
mov
pop
adc
jl
mov
sub
and
call
lea
out
int3
sbb
test
jl
fstl
push
sbb
push
lret
dec
iret
rcll
push
filds
imul
sbb
movl
imul
jmp
mov
mov
mov
mov
mov
jmp
aad
outsl
mov
std
jge
outsl
stos
lock
loopne
jle
jg
jle
add
push
andb
mov
stos
in
cmc
lret
test
add
xor
mov
or
pop
adc
outsb
cld
shlb
pop
push
push
or
or
add
inc
mov
mov
xchg
or
cld
movsb
or
mov
test
mov
shll
push
bound
or
fbld
arpl
imul
iret
adc
fcompl
movsb
jecxz
negb
xchg
int
pop
push
insl
repz
das
or
xchg
das
into
mov
cmp
adc
lret
sub
mov
les
add
add
outsl
inc
fwait
xor
aam
cmp
popa
xor
adc
int3
cmp
sahf
jne
mov
mov
dec
imul
lcall
sub
push
xor
stos
test
xchg
inc
ja
lock
mov
int
push
loop
insl
loope
fsub
cmpsb
ja
ret
addr16
xor
xchg
mov
rdmsr
hlt
sbb
test
scas
fcmovnu
or
pop
push
mov
push
cmc
je
in
add
cltd
push
mov
ret
jp
call
mov
aas
adc
xor
repz
mov
das
add
sti
jg
jo
mov
test
xor
mov
pop
mov
mov
lea
adc
addl
pop
cmp
movsl
inc
adc
insl
xor
sbb
xchg
daa
push
hlt
or
mov
cmc
sbb
movsl
into
fcoms
sahf
scas
pop
pop
test
sub
lods
lahf
xchg
lods
sub
adc
imul
in
adc
enter
leave
ss
mov
sbb
cmp
fiadds
nop
andl
repnz
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
jmp
faddl
insl
jns
pop
xchg
xor
loop
jle
jg
jle
out
iret
cmp
ja
movsl
int
clc
sbb
ds
sbb
daa
xor
ss
xchg
loopne
sub
fldenv
arpl
lods
and
sti
mov
out
mov
lret
es
jne
pop
inc
inc
lds
rcrb
fmul
dec
in
push
gs
mov
fwait
dec
pop
and
cmpsl
mov
inc
xor
pop
push
lock
js
stc
into
es
es
pop
jae
scas
test
popa
out
push
mov
add
push
clc
cmc
out
inc
sti
pop
push
xor
iret
push
inc
repz
mov
pop
lods
xchg
pop
mov
leave
stc
mov
xchg
andl
xchg
iret
dec
ret
push
fisubs
inc
pop
imul
mov
pop
lret
lret
xor
jecxz
jp
sbb
sbb
mov
shl
and
stc
arpl
jae
pop
ss
push
aaa
sub
sub
inc
test
mov
pusha
dec
sbb
outsl
movsl
into
clc
mov
outsb
jge
cmp
jl
rol
lret
jns
xchg
enter
mov
jo
xor
add
mov
stc
push
je
cmpsl
arpl
cmp
repnz
push
cmpsl
mov
sub
fidivrl
daa
int3
push
xchg
jp
push
xor
ds
adc
pop
push
inc
rcrb
daa
push
push
decb
and
mov
ljmp
repz
pop
pushf
mov
or
pop
inc
in
ret
lods
adcb
popf
scas
lret
push
fcom
lcallw
xchg
jne
dec
data16
rorl
fsubl
insb
push
push
ficomps
adc
leave
or
into
loope
pop
fstl
sti
cmp
add
ret
push
mov
sub
mov
mov
sub
imul
jmp
adc
inc
and
scas
cmp
popa
add
in
jle
jg
jle
arpl
mov
pop
nop
xchg
loope
add
mov
dec
test
rcrb
sbb
ss
cmp
fists
sbb
in
arpl
adc
cmpsl
xchg
and
data16
repnz
imul
inc
imul
sub
adc
dec
rclb
or
test
sub
push
mov
add
xchg
fisubrl
in
stos
fsts
cmp
fldl
fstps
push
in
movsb
aaa
sbb
mov
mov
in
mov
dec
jmp
xchg
rorl
pop
jle
mov
add
and
out
sub
cld
push
push
add
aaa
jmp
xor
pop
das
mov
cli
push
dec
and
shlb
pop
xlat
mov
push
fwait
jns
and
aam
dec
imul
and
mov
pop
hlt
outsl
ljmp
ss
es
addl
popf
out
lret
sub
xchg
dec
scas
jge
enter
adc
and
mov
sub
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
or
mov
push
add
mov
mov
sbb
xor
mov
sub
mov
xorl
add
xorl
mov
mov
xorl
push
subl
push
andl
test
movl
je
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
movzbl
xor
imul
or
mov
xor
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
dec
mov
xchg
sub
xor
jmp
mov
add
aad
jl
mov
jle
mov
jg
jle
loopne
mov
addr16
mov
outsb
adc
int3
shll
aad
fbstp
pop
insl
and
test
add
std
test
sbb
add
xor
xor
or
cmpsl
jle
pop
sti
lcall
jno
xchg
push
cmpsb
push
inc
ja
popaw
jmp
or
push
testb
push
mov
pop
xchg
test
insb
in
jns
imul
sbb
push
jecxz
test
popa
loop
xlat
in
adc
cmp
dec
mov
loop
push
cmpsb
sbb
test
mov
sbbl
cmp
out
adc
cltd
mov
adc
hlt
loop
pop
push
or
js
xlat
jns
gs
les
xchg
outsl
in
mov
sbb
dec
push
test
test
mov
ds
mov
out
jae
cld
pop
push
cmpsl
aam
adc
clc
sub
add
test
lods
data16
sbb
es
rol
mov
loopne
pop
xchg
add
sbb
popf
cmp
inc
sbb
add
cmp
arpl
jne
and
mov
or
jmp
gs
xor
pop
xchg
lods
mov
bound
jle
aas
jg
jle
aam
scas
push
test
push
jns
clc
sub
lahf
xor
jo
rcl
out
push
fcomp
leave
xchg
inc
out
js
dec
pushaw
lahf
sub
sbb
mov
sbb
or
cmc
push
dec
in
pop
sarb
js
sbb
add
aam
out
mov
subl
fcmovnb
mov
mov
cmp
xchg
cmp
test
mov
xchg
dec
and
cmp
sbb
sti
mov
lahf
adc
adc
repz
jge
jnp
sub
ljmp
add
je
or
xor
ret
jp
jecxz
push
in
arpl
outsl
xchg
ret
shll
hlt
cld
and
sbb
add
adc
shll
inc
mov
mul
std
in
rorl
xchg
mov
mov
out
mov
insl
adc
fdivrl
jae
mov
int
or
adc
das
call
dec
xor
lcall
mov
out
in
les
sbb
movb
add
push
push
inc
add
push
push
inc
add
enter
push
inc
add
incl
lret
mov
mov
mov
je
xor
mov
xor
xorl
jmp
mov
inc
aam
push
mov
add
push
jl
clc
jle
aas
jg
jle
jae
fyl2x
insb
nop
cmp
mov
incb
inc
aas
jecxz
sti
fistps
in
sub
sbb
push
aad
rorb
mov
inc
repnz
jns
fistpll
xchg
psllw
push
jl
int3
lret
xchg
rcrb
add
jecxz
xchg
inc
mov
inc
inc
shll
cmc
adcb
mov
mov
and
je
mov
cwtl
dec
call
dec
les
xor
push
lcall
fsubrp
cmp
test
inc
repz
or
sbb
out
les
inc
andl
lock
mov
inc
test
daa
and
lcall
dec
loop
les
ret
popa
adc
std
das
sub
xchg
imul
arpl
repz
leave
sbb
loopne
aam
jbe
jp
int3
lods
imul
jns
insb
xchg
pop
pop
jne
adc
popf
fsubl
dec
push
adc
add
xchg
cmc
scas
es
es
xor
aaa
or
in
mov
lods
or
in
inc
mov
or
scas
inc
pushf
hlt
pop
push
into
add
negl
add
movl
cmp
movl
jne
orl
pushl
call
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jb
mov
xor
mov
addl
xor
jmp
jns
mov
pop
insl
jns
lods
iret
loopne
add
push
stc
jle
aas
jg
jle
xlat
js
and
scas
sbb
iret
pop
imulb
in
cmp
pushf
xchg
mov
addr16
jnp
push
in
sub
jecxz
arpl
lods
addr16
cltd
subb
sub
mov
pushf
mov
fs
loope
popa
out
mov
fwait
cmpsb
pop
mov
popa
dec
out
pop
hlt
loop
loope
int3
iret
mov
dec
stos
ret
addb
mov
insb
mov
inc
lret
adc
add
fdivs
mov
adc
mov
loope
aad
call
aad
mov
mov
leave
sub
xchg
pop
inc
mov
adc
push
xor
enter
sbb
sbb
mov
or
and
aam
jge
cmp
cmp
xchg
mov
mov
shlb
loop
xchg
sub
mov
jbe
sbb
adc
sub
pop
iret
push
mov
mov
mov
in
cmpsb
js
iret
movsb
and
shrb
push
pushf
sub
add
or
add
cmp
movl
je
sbbl
pushl
andl
pushl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xorl
mov
add
mov
xor
orl
add
cmp
movl
je
add
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
sub
mov
jmp
fldl
xor
cmp
pop
cmove
cli
jle
aas
jg
jle
pop
jp
sti
jns
in
aam
scas
pop
into
add
addr16
repz
out
mov
pop
lods
push
insb
xor
call
daa
jne
sbb
adc
dec
ljmp
std
pop
je
cltd
cmpsb
gs
dec
and
insl
icebp
insb
dec
xor
xchg
ljmp
mov
sbb
cmc
jl
pop
popf
push
mov
pop
mov
repnz
aaa
or
sub
cs
mov
xor
out
in
add
mov
push
scas
push
stos
inc
aad
dec
and
aad
xor
imul
dec
push
fwait
push
mov
xor
shlb
ss
push
add
pop
mov
jae
test
daa
out
xchg
testb
stc
mov
xor
fistpl
inc
aaa
and
xor
xor
leave
adc
outsb
lods
jge
aaa
mov
iret
and
dec
negb
cld
addr16
vpmullw
mov
aaa
mov
and
enter
repz
shll
icebp
arpl
sbb
xchg
pusha
xor
mov
mov
sbbl
jmp
fmull
cld
popf
mov
scas
fimull
movsl
std
jno
jle
aas
jg
jle
inc
stos
mov
add
push
push
adc
xchg
pop
xchg
pop
cld
jae
mov
call
out
mov
dec
addr16
ja
inc
fdivl
dec
bnd
cs
fcomip
and
and
and
fidivrs
lea
lds
and
lret
xor
pop
xor
cmpsl
jbe
gs
fdivrs
pop
pop
test
mov
insb
mov
and
fsubrl
cwtl
lds
pop
xchg
pop
ss
loop
jne
mov
ror
fnsave
add
mov
imulb
out
cwtl
arpl
mov
xchg
pop
dec
lahf
lret
or
xorb
adc
stos
cmp
jmp
xor
mov
dec
orb
das
jno
adc
mov
push
lcall
pop
sub
xor
sub
sub
call
push
cwtl
and
cmp
pop
test
dec
jl
cmp
sub
clc
jmp
test
lock
sbb
mov
add
mov
or
mov
mov
mov
orl
mov
add
mov
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
call
cmpl
jb
mov
mov
add
xor
jmp
xchg
leave
popa
jge
jge
fldenv
test
jns
imul
std
jle
aas
jg
jle
jge
xor
mov
cmp
mov
and
sbb
outsl
push
adc
xor
push
dec
xchg
fdecstp
lahf
mov
mov
push
or
sub
loop
lods
adc
sbb
mov
mov
stos
dec
mov
call
das
mov
shrl
decb
xor
push
ss
andb
inc
adc
fstl
inc
mov
imul
loopne
cltd
cmpsb
ficompl
ds
mov
addl
lods
xor
ss
inc
shll
cmp
and
push
push
add
shll
aad
jb
inc
mov
and
lret
cmc
cld
test
fwait
push
cmp
out
mov
pop
iret
mov
rorl
in
out
decl
pop
ret
add
sub
mov
pop
jbe
pop
xchg
pop
add
push
add
pop
je
je
cmpsb
fsubrs
adc
cmp
movsl
fs
dec
popa
repz
jb
and
out
jmp
aad
dec
push
pop
punpcklwd
shll
cmp
jl
mov
fucom
jle
and
fmull
pop
mov
mov
mov
add
jmp
lea
pop
imul
jle
aas
jg
jle
cs
jbe
arpl
and
cmp
inc
push
pop
xor
jae
enter
sub
xchg
loope
stos
pusha
stos
mov
dec
mov
jmp
sti
push
xor
sbb
loope
sbb
add
push
loope
rorb
das
popf
repz
in
or
inc
or
loop
cld
adc
adc
mov
inc
sahf
jecxz
inc
jbe
fnsave
push
and
les
add
xchg
jns
pop
shll
sub
adc
ja
push
mov
cli
push
xor
dec
pop
clc
and
dec
sbb
jg
pop
xchg
dec
imul
or
daa
into
push
cltd
fldcw
cmpsl
shll
push
jg
dec
jns
ficompl
fwait
rorl
das
sub
pop
inc
scas
test
fs
insl
popa
arpl
push
lods
pop
test
xchg
lds
dec
add
ljmp
data16
adc
shll
mov
cmp
pusha
sbb
in
jns
mov
fstl
cmp
sbb
out
sub
pop
imul
dec
fdiv
mov
mov
pop
add
add
stos
ja
popf
stos
and
sti
pop
jge
lret
mov
jle
aas
jg
jle
insb
sub
xchg
dec
and
inc
loope
in
cld
or
movsb
subb
inc
mov
sub
andb
pushf
jg
test
pushf
jl
leave
pop
mov
fldcw
or
aam
shlb
jns
sbb
cmp
inc
cs
stos
sub
xor
pop
mov
iret
movsb
cmp
jl
cltd
mov
or
jg
std
mov
cmp
test
lcall
test
cmp
cwtl
lock
repnz
imul
loop
xchg
push
gs
xchg
jmp
push
fmull
lcall
pop
nop
mov
adc
aam
jge
jbe
xor
bnd
xchg
cmp
jp
sbb
gs
sti
jne
adc
fwait
call
int
orl
jnp
sub
daa
gs
jl
mov
jo
dec
add
adc
addr16
cmp
add
addr16
in
mov
pushw
ror
scas
dec
pand
sub
movsl
mov
mov
lcall
les
mov
push
pushl
pushl
call
mov
jmp
push
sahf
sbb
fdivrl
or
cmp
jne
jle
aas
jg
jle
scas
aas
cmpsl
jae
push
je
outsl
addb
imull
mov
sub
nop
aaa
mov
arpl
rcll
mov
dec
mov
sti
push
push
in
sub
stc
fsts
xcrypt-ctr
cmpsl
sahf
xchg
loopne
or
dec
inc
pop
nop
cmp
imul
int3
fisubs
shlb
faddl
mov
push
push
inc
add
mov
dec
aas
mov
and
lret
andb
xor
jno
lret
jb
ret
xchg
push
fs
call
adcb
mov
and
mov
inc
sbb
jno
mov
xchg
in
hlt
adc
fidivl
jmp
movb
push
jmp
imul
dec
rcll
mov
sub
add
sbb
sti
xchg
or
std
or
sbb
dec
test
outsl
and
fistl
shlb
loopne
mov
mov
push
and
mov
in
dec
sub
cld
es
addb
movsb
sarl
jg
fwait
jo
mov
dec
imul
add
test
sub
pop
mov
dec
std
dec
iret
sbb
leave
loope
adcl
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
pop
mov
jl
xchg
movsb
sti
xlat
pop
in
ss
aas
jg
jle
std
jo
xor
jnp
dec
or
rolb
xchg
cmp
and
inc
aam
arpl
xchg
push
call
xchg
stos
sub
adc
ja
mov
loop
insl
notl
into
js
ljmp
repnz
std
lds
fs
jo
cmp
mov
fstpl
inc
push
repnz
push
mov
pop
loop
jne
mov
adc
fidivrl
test
jbe
fistps
push
mov
subb
clc
sub
mov
cli
mov
lahf
lods
cld
dec
hlt
jae
xor
xchg
imulb
movl
mov
andl
pop
sahf
ror
ficoml
sub
incl
lahf
pop
arpl
jne
fistps
sti
insl
addb
sbb
adc
mov
popa
repz
pop
jne
mov
arpl
jo
subl
daa
hlt
dec
jge
lods
xlat
jle
lahf
data16
rorb
pop
call
stos
push
subl
inc
dec
popf
jno
mov
and
fdivl
inc
or
inc
or
in
rorb
jbe
add
mov
push
pop
push
jmp
stos
xchg
fwait
adc
hlt
lcall
jle
aas
jg
jle
xchg
push
dec
fdiv
cmp
shll
xchg
pusha
mov
sub
pop
cmpl
movsb
xor
loope
pop
or
enter
cmp
dec
outsb
push
ret
cld
dec
test
lds
in
jbe
imul
sti
xlat
gs
insb
cmp
jmp
cmp
in
pop
xchg
dec
out
adc
and
push
jo
sbb
scas
daa
cmpsb
arpl
xchg
sbb
mov
mov
in
mov
das
lcall
and
xor
inc
fisubrl
in
mov
or
lahf
xorl
push
mov
mov
jmp
jmp
loope
xorl
nop
push
sbb
mov
ljmp
loopne
adc
addb
test
add
xor
pop
orl
mov
mov
fisttps
ss
test
cmp
push
push
pop
jle
pop
scas
stc
push
iret
jne
push
inc
leave
aas
sub
fwait
cmp
sbb
std
pop
stos
rcll
add
and
lods
lret
movsl
sub
sbb
aas
jg
jle
sbb
add
adc
mov
shlb
push
cmpl
mov
icebp
sbb
aam
push
lea
imulb
or
daa
lret
mov
xorb
or
mov
adc
dec
jno
loopne
push
sbb
fwait
add
popa
loop
xchg
imul
icebp
cmp
mov
add
mov
sahf
cmp
pop
xorl
xchg
jo
adc
jb
inc
int
int
in
and
daa
int3
orb
pop
mov
adcb
pop
rol
mov
fwait
cmp
xchg
cwtl
xor
mov
cmpsb
daa
mov
in
std
dec
and
push
js
ret
lds
das
aas
xchg
clc
mov
push
lds
push
inc
or
xchg
push
add
pop
inc
loopne
in
jae
gs
jno
adc
sbb
sub
dec
cwtl
data16
jp
std
insl
pop
jp
push
cmc
jns
pop
sbb
icebp
fildll
les
inc
lcall
clc
popa
pusha
mov
inc
push
jp
mov
test
xchg
sub
xchg
dec
mov
imul
sub
mov
jmp
jp
rcr
std
jnp
mov
jl
xor
jle
aas
jg
jle
adc
leave
and
jmp
in
gs
jae
sub
pop
pusha
test
inc
and
xchg
imul
inc
sbb
imul
and
xor
cmp
pop
int
iret
in
push
insb
lret
add
cmp
les
dec
shll
in
dec
push
mov
imul
aad
mov
ja
test
test
adc
and
pop
pop
pop
call
ds
cmpsl
imul
movsl
inc
push
push
sub
jecxz
sbb
stc
sbb
sar
push
inc
test
fsts
inc
scas
inc
andl
fsub
pop
sti
pop
pop
pop
mov
mov
loopne
inc
out
mov
ljmp
in
mov
loopne
std
mov
mov
xchg
movsb
pop
lret
cmp
movsl
in
fdecstp
cmpsl
push
lret
test
mov
frstpm(287
inc
orl
aad
and
and
cmp
inc
xor
mov
pop
xchg
nop
negl
in
mov
jno
rorb
jno
push
jo
inc
cld
mov
jmp
test
test
jge
cmp
jno
add
idivl
aas
jg
jle
movsl
sub
jle
xor
push
ficompl
repz
cld
push
jg
mov
fmulp
aaa
dec
mov
es
cld
loop
jnp
push
aas
inc
adc
dec
push
shll
jno
dec
inc
int3
cli
dec
cmc
push
jae
mov
out
xchg
lcall
daa
push
pop
ret
jg
mov
jns
xchg
dec
add
std
xor
mov
js
addr16
les
daa
mov
dec
mov
into
ret
xor
mov
outsb
mov
push
sub
roll
loopne
sahf
mov
mov
mov
and
lahf
xor
loopne
xor
das
out
push
cltd
inc
mov
xchg
mov
sbb
out
mov
xchg
insl
test
mov
fidivrs
outsb
aad
inc
xchg
sarb
xchg
movl
outsb
jge
sub
in
push
bound
stos
lret
mov
ljmp
pop
out
repz
dec
push
mov
pop
and
inc
popa
sub
mov
testb
xorl
and
icebp
std
orb
add
or
icebp
xchg
push
sahf
xor
mov
add
jmp
mov
or
lods
jge
out
mov
xorl
jle
aas
jg
jle
dec
xor
mov
adc
cltd
negb
mov
push
and
lret
cmp
aad
lret
mov
pop
pop
lock
mov
sub
push
lods
leave
pop
mov
rcrb
push
data16
in
fiadds
mov
sbb
xor
mov
orb
fcomi
and
loope
and
divb
jl
adc
xor
or
shlb
push
jl
cmp
sbb
fcmovnb
sbb
jno
stos
xchg
or
xchg
cmpsl
jnp
stos
notb
sbb
jge
shll
adc
aad
push
dec
ret
sub
icebp
mov
mov
adc
sbb
push
cmp
add
lret
push
scas
jg
mov
mov
xchg
adc
jge
out
mov
or
xchg
add
out
cli
sub
aas
addr16
mov
sti
mov
jne
sbbl
repnz
inc
pushf
incl
stos
push
test
mov
add
mov
adcl
push
jl
test
mov
mov
xor
add
mov
imul
mov
jmp
inc
sbb
gs
jae
sti
std
sbb
jle
jg
jle
int3
mov
mov
shrb
jbe
dec
leave
mov
in
pop
sbb
mov
and
or
dec
jg
dec
push
sub
in
stos
mov
and
mov
cmp
insb
jle
out
adc
ret
dec
lds
pop
roll
mov
lods
dec
fucomi
and
fldcw
ljmp
push
lock
stc
dec
sbbb
mov
stc
adc
loopne
lret
add
scas
lds
sub
mov
adc
stos
pop
sti
outsl
jbe
xchg
jecxz
pop
dec
push
and
mov
jl
jmp
fsubrs
xlat
insb
xor
mov
jno
std
sub
js
negl
cld
shll
jnp
jae
ljmp
pop
mov
dec
sub
insl
imul
inc
push
inc
add
add
lret
mov
lock
jbe
pop
aaa
pop
xor
xor
fldl
and
mov
adc
ror
enter
aaa
sbb
sti
cmpsl
or
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
jmp
jno
cmp
jge
in
pop
xor
cmpb
imul
jle
sub
fwait
push
sbb
xchg
xchg
mov
adc
cmova
in
sub
inc
imul
xor
jae
movsl
out
cmp
mov
mov
pushf
icebp
stc
dec
adc
fdivr
test
scas
movsb
insl
loop
arpl
sarl
xchg
sti
cmpsl
xor
xor
test
ja
pop
push
xchg
and
arpl
pop
jl
cmp
push
sbb
add
leave
xsha256
cmpsb
adc
cmp
xor
nop
add
ret
test
lret
add
mov
lret
mov
jecxz
ret
push
lahf
aad
mov
push
call
mov
xor
and
mov
jnp
mov
dec
add
mov
push
push
popf
mov
jno
inc
add
enter
xchg
std
mov
push
lahf
pop
es
pop
mov
loopne
call
rcrb
pop
jo
arpl
mov
sbb
cmc
cmp
mov
dec
in
push
cmp
ficoms
frstor
ss
xchg
icebp
js
ss
mov
push
xchg
jle
cld
and
test
popf
jb
add
fmull
call
rorl
add
call
add
adc
jecxz
jnp
aad
lock
sti
outsb
into
mov
aas
jg
jle
popf
push
push
adc
xor
push
aaa
fcoml
and
cmp
jb
shlb
cmp
data16
leave
testb
or
mov
jo
int3
es
jmp
repz
fmuls
stc
sub
insb
out
xchg
jg
sbb
adc
fs
mov
movsl
cwtl
xor
mov
data16
clc
adc
or
mov
outsb
inc
mov
sbb
test
sub
loop
lds
push
pushf
hlt
inc
lahf
dec
or
or
mov
hlt
insb
loopne
sti
cmpsl
repz
fstps
xchg
test
les
inc
pop
out
movsl
insb
add
dec
and
mov
aam
repnz
repnz
test
xor
les
push
add
aas
loope
ljmp
mov
mov
xchg
loope
push
jne
or
mov
bound
dec
adc
pop
inc
gs
je
faddp
es
add
arpl
sar
iret
pop
inc
add
mov
push
sub
mov
adc
roll
imul
jmp
into
jb
pop
inc
pop
fisttpll
fisttpl
xchg
lea
aas
jg
jle
fs
movsb
orl
sbb
sub
daa
jg
je
movsb
out
push
scas
dec
repz
mov
push
shrb
ljmp
inc
xchg
mov
imul
addr16
fsts
stos
jl
bound
xchg
xchg
loopne
jne
sub
push
sub
stos
jne
sub
push
arpl
mov
or
lahf
cmp
mov
aaa
push
ret
clc
jg
pop
xchg
mov
inc
cmpsl
xchg
push
les
inc
sbb
fistpll
test
stos
imul
or
insl
imul
outsl
or
xchg
xchg
cltd
add
cmpsl
into
pop
adc
mov
jmp
test
shl
adc
pop
lahf
movb
xchg
jmp
stos
cli
ss
adc
cltd
leave
mov
pop
inc
adc
icebp
push
and
xlat
hlt
inc
xchg
xchg
mov
enter
out
adc
movsb
int3
insl
mov
test
mov
paddq
out
push
xor
icebp
ret
hlt
movsl
mov
cmpsb
movsb
xchg
sub
int
xchg
jo
mov
jmp
out
cmp
jp
sti
inc
aaa
mov
mov
jle
jg
jle
or
jmp
fisubl
shlb
or
mov
mov
xor
adc
or
sbb
gs
jno
aam
in
add
nop
mov
gs
sub
push
icebp
jecxz
pushf
loopne
lret
push
mov
daa
insb
xor
add
mov
pop
jmp
xchg
cwtl
jo
fldl2e
aaa
lods
or
xchg
negb
mov
cs
xchg
daa
mov
inc
adc
jns
and
cmp
mov
hlt
lods
int3
cmp
jbe
addr16
mov
lods
mov
xor
inc
inc
sub
and
nop
pushf
movsl
outsb
push
mov
addr16
mov
rorb
push
addb
add
in
jns
andl
in
cmc
lods
xorb
scas
fs
adc
mov
into
repnz
shlb
fwait
loopne
mov
nop
repz
or
jmp
mov
loopne
mov
or
aas
and
out
fistpll
sbb
sub
sub
outsb
out
outsb
aam
adc
data16
cltd
mov
push
in
test
push
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
jmp
xchg
pop
mov
cmp
cmp
jle
jg
jle
dec
out
aas
sbb
int3
lcall
jle
cs
ficompl
mov
push
subl
xchg
pop
imul
lahf
fcoms
pop
adc
into
add
jp
push
out
bnd
imul
jbe
aad
mov
cmp
and
rcl
mov
clc
hlt
mov
sarl
iret
enter
call
int
dec
push
push
leave
out
push
jp
push
loopne
jle
sub
inc
mov
js
or
xor
nop
push
cs
pop
adc
jae
xchg
push
adc
lods
js
adcl
jg
push
pop
push
pop
cmp
fwait
adc
adc
fnsave
pop
subl
inc
test
lcall
nop
inc
ret
jb
addb
push
in
movsb
lret
mov
cmpsl
mov
outsb
popf
cmpsl
add
jl
shll
enter
cmp
inc
mov
lock
add
icebp
repnz
rclb
cli
add
pop
mov
inc
mov
imul
sub
or
ds
fisttps
mov
leave
cmpl
jmp
mulb
jne
lds
mov
es
mov
aas
jg
jle
adc
xchg
or
xor
ret
jno
in
add
sti
pushf
lahf
sbb
lcall
mov
ret
jnp
cmpsl
mov
dec
adc
jae
add
xor
and
lret
mov
push
xlat
in
in
sub
dec
mov
and
inc
pop
inc
js
cmp
push
rcrl
pop
jecxz
test
add
mov
mov
push
das
dec
sbb
xchg
inc
mov
enter
xchg
iret
js
mov
lods
fwait
cmp
lods
cltd
scas
cld
scas
mov
movsb
stc
sbb
cmpsb
cmp
fs
adc
or
cmpsl
dec
das
in
xchg
cmc
xchg
add
xlat
cmp
add
mov
lods
jl
into
cmp
ljmp
das
xchg
lahf
mov
mov
push
les
sbb
dec
jecxz
es
cmp
out
mov
psrlq
stos
loop
pusha
fwait
sbb
sti
test
rcr
sbb
adc
cmp
and
mov
stos
push
js
repz
sub
ficoms
mov
xchg
sbb
add
add
aas
mov
cmp
xchg
xor
jle
jg
jle
fldcw
jb
in
std
ret
jmp
or
shlb
cmp
rdmsr
lods
dec
in
stos
dec
xchg
arpl
push
ret
rcr
cs
push
les
test
fldt
xchg
push
xchg
addr16
xchg
add
add
push
add
enter
sti
popa
ja
fistps
mov
cmp
or
jmp
mov
and
inc
jmp
shrb
fstps
xor
cwtl
stc
dec
pop
lret
sbb
and
add
mov
add
pop
inc
ja
clc
inc
leave
out
add
jae
dec
aas
cld
push
adc
mov
loop
jbe
push
ucomiss
in
dec
or
into
mov
push
sbb
push
ja
adc
mov
push
mov
lods
dec
rcrb
enter
add
and
mov
xlat
mov
push
mov
fists
mov
popf
lahf
das
mov
sbb
sbb
push
ja
or
stos
push
cmp
std
mov
pop
test
sub
lods
bound
and
push
andb
pop
cmp
je
jmp
xchg
mov
mov
mov
jle
aas
jg
jle
cmp
mov
into
imul
push
pop
jns
cmpsb
lea
fstpt
cli
mov
sub
pusha
jnp
push
js
fstpt
and
aam
shl
mov
or
mov
dec
aaa
jno
mov
xlat
xchg
lcall
and
int3
mov
push
test
xor
nop
xchg
nop
mov
out
push
rolb
sub
mov
and
pusha
aam
push
and
pop
pop
div
icebp
mov
dec
std
enter
inc
nop
stc
lods
add
test
cld
inc
xchg
rcl
mul
mov
push
pop
ret
pop
mov
adc
jae
inc
mul
jl
pop
jae
enter
or
push
sub
arpl
add
repnz
ficomps
lds
loop
ret
push
and
ja
rcrl
inc
mov
sub
adc
xchg
clc
sbb
mov
aam
cwtl
inc
out
out
aas
inc
push
lods
push
mov
pop
mov
pop
imul
mov
lcall
xchg
mov
negb
test
pop
out
push
mov
ss
inc
js
add
lret
pop
add
add
sti
lret
jns
rclb
lahf
and
jg
jle
scas
ja
sbbl
fwait
aad
fimull
push
push
pop
and
sub
push
imul
dec
notb
das
mov
cmp
test
inc
aad
rcll
push
cmp
pop
xor
xor
in
shll
pop
mov
out
enter
sbb
cli
or
int3
xchg
ljmp
shrb
cmc
imul
pop
xchg
add
aaa
stos
push
jge
lcall
fcomps
and
sbb
filds
loope
inc
pop
rorl
jb
push
cltd
xor
maskmovq
testl
mov
cmpsl
stos
dec
jo
cld
pop
sbb
pop
and
fidivs
xchg
adc
in
xor
outsl
test
sub
and
dec
repnz
push
stc
and
popf
mov
xlat
dec
mov
push
mov
in
in
mov
je
xor
aaa
scas
push
pop
pusha
mov
and
ljmp
ja
fs
out
dec
sub
in
cmpsb
gs
lea
mov
lods
pop
xchg
addb
nop
mov
mov
add
push
pusha
cmp
test
push
pop
push
pop
inc
xchg
jmp
ss
or
mov
jmp
or
xchg
aas
jg
jle
jno
jne
and
mov
mov
push
lret
push
and
stos
imulb
mov
loopne
xchg
sub
or
insb
jmp
cmp
cli
pop
jge
rolb
cwtl
pop
outsl
lods
push
cmp
iret
push
pop
or
inc
cmc
fidivs
inc
pop
shrl
mov
ret
adc
fcmovne
lcall
pop
mov
cmc
cmp
cli
or
stos
mov
push
pop
mov
mov
das
lods
mov
aas
jo
push
pop
cmp
hlt
daa
das
push
aaa
in
in
jl
inc
jns
inc
rcll
jg
cmp
es
out
arpl
inc
pop
fcmovb
stc
test
xorb
ja
pop
xchg
stos
push
sub
inc
xchg
out
mov
pop
cmp
dec
test
mov
xor
push
pop
cltd
ficoms
movsb
fxch
arpl
mulb
pusha
loop
loop
mov
ret
sbb
cmc
aad
fdivp
sbb
push
outsb
xchg
xlat
mov
cmp
mov
cmpsb
add
inc
pop
imul
push
aam
jl
jmp
dec
jns
rorb
push
cmpsl
out
inc
sbb
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
jmp
mov
pop
pop
in
pop
rcll
xchg
aas
jg
jle
data16
fisttpll
xor
imul
test
dec
or
xorl
sahf
jp
out
cli
sbb
sub
mov
ficoml
or
inc
rcrl
outsl
mov
jae
mov
pop
add
push
out
das
xchg
cmp
xor
cmp
shrb
sub
adc
dec
in
mov
aas
fidivrs
ds
jo
test
cmp
lcall
pusha
lock
loopne
cmp
mov
pop
movsl
xor
lea
sbb
pushf
xchg
andl
mov
lods
xor
and
mov
sub
pop
add
rcrb
arpl
pop
cmpsb
jne
out
or
or
mov
adc
out
mov
cltd
movsb
jg
push
stos
cmpsb
sub
fdivrl
jmp
or
cmp
sub
int3
add
lods
rol
in
inc
pop
vmread
xchg
cmp
and
outsl
pusha
es
dec
in
insb
mov
hlt
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
loopne
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
repnz
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
add
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
loope
jne
mov
cld
incl
mov
mov
add
call
int3
mov
add
add
xor
mov
cld
jle
push
add
add
inc
inc
mov
decl
add
inc
lret
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
pusha
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
popf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
or
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
adc
adcb
or
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
mov
test
cmp
pushf
inc
mov
popf
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
popf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
popf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
popf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
arpl
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
arpl
inc
add
dec
arpl
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
pushf
orb
xor
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
popf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
clc
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
popf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
add
sub
aad
inc
add
add
xlat
insb
inc
inc
and
dec
add
inc
fnstcw
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
les
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
or
movsl
fiadds
jae
or
loope
inc
xor
pop
inc
shr
inc
and
inc
add
add
out
clc
inc
ret
inc
mov
leave
sub
add
add
sbb
stc
test
lea
mov
dec
int3
mov
movb
dec
ljmp
or
jge
shl
xor
add
rdpmc
sbb
mov
in
cmovne
jecxz
inc
mov
sbb
mov
add
loopne
inc
dec
and
inc
mov
leave
movl
inc
add
inc
xlat
sbb
xor
dec
mov
mov
fadd
inc
rcl
inc
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
mov
cld
mov
mov
pop
sar
cmp
jne
mov
loopne
pushf
jae
add
add
add
jmp
mov
pop
add
add
decl
mov
mov
data16
mov
add
add
data16
ljmp
pop
jle
inc
sbbb
test
jmp
push
jne
lea
movl
sar
mov
loopne
rol
ljmp
push
inc
inc
mov
cwtl
movl
add
add
call
incl
xor
jne
mov
ret
out
mov
push
xor
mov
mov
mov
lcall
and
push
mov
decl
mov
jp
mov
mov
jl
decl
mov
push
decl
orb
xor
call
test
mov
into
xchg
loop
xchg
lods
ret
in
inc
dec
in
xor
add
mov
mov
incl
jno
data16
add
mov
fmull
aam
call
push
mov
xor
add
subl
mov
add
pushl
push
lea
mov
sar
orl
fs
add
add
adc
add
test
inc
incl
dec
mov
mov
push
xor
push
inc
xorl
mov
push
inc
adcw
movl
clc
push
inc
data16
push
pushf
data16
dec
in
test
xor
in
add
decl
mov
lea
push
push
test
inc
inc
mov
push
shlb
test
cs
incl
data16
test
incl
incl
mov
lcall
leavew
xchg
inc
pushl
call
lea
mov
enter
mov
xor
sbb
sbb
dec
mov
mov
movl
mov
mov
sar
sub
mov
add
inc
mov
or
addb
xor
pushf
js
add
mov
inc
xor
lcall
cmp
movl
lcall
dec
inc
mov
mov
mov
nop
ret
add
jne
test
jne
decl
call
sbb
stos
mov
mov
inc
cmp
push
cwtl
inc
add
lcall
test
mov
adcb
add
add
movl
mov
inc
add
cmp
incl
inc
push
xor
add
mov
and
incl
lea
pushf
or
jmp
decl
mov
loopne
movl
sbb
out
mov
push
push
test
mov
cwtl
inc
add
movl
add
add
pushl
or
rorb
cld
sbb
inc
mov
movsb
add
push
movb
jmp
mov
clc
mov
incl
mov
cmp
push
add
xor
add
mov
mov
mov
hlt
movsb
add
add
mov
dec
inc
mov
add
add
add
mov
mov
push
decl
decl
xor
add
push
xchg
inc
incl
jnp
mov
pusha
add
test
decl
ret
add
mov
cli
incl
test
add
or
cmp
add
sub
mov
mov
add
inc
dec
mov
add
mov
inc
push
push
mov
mov
adcl
add
push
add
push
test
decl
mov
sbb
incl
movl
add
add
mov
push
push
test
decl
inc
push
xor
and
call
test
incl
decl
inc
decl
arpl
int
xor
mov
cwtl
pushf
add
mov
mov
incl
adc
addb
adc
push
inc
add
mov
mov
push
adc
mov
mov
addl
incl
inc
cmpsl
mov
add
mov
cmp
movsb
mov
sbb
addb
hlt
add
mov
hlt
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
sub
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
cld
or
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
popf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
popf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pusha
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setge
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
clc
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
inc
adc
inc
inc
push
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
lret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
shlb
add
add
and
fs
inc
test
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
inc
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
inc
popf
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
popf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
pushf
idivl
cmp
je
push
loopne
dec
mov
int
mov
movlhps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
inc
icebp
add
add
mov
mov
enter
pop
jne
mov
pushf
mov
sub
cmp
jne
xor
in
xor
movl
clc
add
ret
decl
ss
dec
push
jle
popa
data16
into
arpl
add
mov
push
cld
add
inc
pushf
add
into
ret
pop
push
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
pushf
clc
mov
test
cmp
fs
or
push
mov
push
push
lret
xor
pushf
mov
mov
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
dec
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
push
add
add
add
lret
lock
inc
lret
xor
pushf
jge
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
mov
in
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
mov
adc
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
popf
push
xor
inc
cmp
or
inc
test
xor
in
hlt
push
push
push
push
mov
popf
popf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
popf
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
push
inc
add
pushfw
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
jne
mov
mov
movl
clc
dec
push
ss
pop
aad
xlat
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
clc
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
popf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
dec
inc
mov
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
aad
xlat
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
mov
sbb
nop
mov
addl
mov
jne
mov
pushf
push
mov
xor
add
lret
add
rorl
mov
mov
mov
fimuls
mov
xor
mov
or
dec
add
or
out
loopne
jmp
lret
xor
je
mov
mov
sbb
mov
fmuls
mov
mov
mov
sbb
sbb
add
movl
leave
mov
push
mov
add
mov
or
mov
or
inc
add
in
add
mov
adc
xor
adc
inc
popf
mov
push
add
cmp
pushf
mov
dec
fwait
dec
jmp
or
sbb
or
dec
lret
dec
rcl
lret
inc
or
sar
lahf
inc
mov
inc
or
iret
add
mov
adc
inc
add
add
dec
mov
mov
ret
inc
add
push
or
test
test
clc
pushf
inc
mov
lock
inc
mov
test
mov
mov
sbb
scas
dec
mov
xor
jb
add
add
add
mov
or
mov
adc
inc
mov
or
inc
inc
cmp
hlt
inc
jne
mov
inc
bound
clc
push
inc
inc
cmp
cmp
dec
mov
push
idivl
or
inc
inc
add
push
loopne
mov
or
xbegin
mov
or
mov
hlt
inc
inc
mov
xor
add
adc
inc
clc
xor
add
or
dec
test
clc
jb
mov
clc
pushf
inc
mov
xor
shr
add
hlt
mov
push
xor
test
clc
mov
mov
clc
mov
xor
mov
hlt
shlb
clc
fmull
mov
in
icebp
dec
decl
loopne
test
clc
dec
inc
mov
in
dec
push
xor
push
mov
push
mov
clc
cmp
inc
test
add
add
jne
lea
cmc
adc
inc
inc
xor
jb
add
inc
rorl
xor
mov
adc
mov
ret
push
push
lea
cli
add
or
mov
xor
mov
add
jne
lea
lods
psubsb
cmc
lret
inc
xor
add
inc
inc
mov
xor
test
clc
dec
inc
xor
setl
lret
int3
rorl
add
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
loopne
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
or
add
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
call
xor
mov
in
rorl
iret
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
in
or
mov
xor
inc
or
iret
add
cmp
jge
mov
in
add
mov
mov
clc
test
std
iret
decl
xor
mov
in
enter
inc
mov
or
jmp
push
decl
xor
push
jne
mov
in
add
dec
test
dec
add
cmp
or
mov
dec
push
lea
xchg
mov
call
inc
mov
or
mov
iret
movsb
mov
push
xor
cmp
jne
lea
lods
dec
call
cmp
cmp
decl
add
fadds
mov
lock
inc
test
xor
add
sbb
xor
rdpmc
testl
or
mov
rolb
iret
cmp
cmp
xor
decl
mov
add
mov
jmp
orl
pop
inc
pop
mov
loopne
mov
push
rorl
push
add
inc
push
popf
dec
xor
add
adc
adcb
add
or
fadds
call
cmp
dec
mov
ret
mov
adc
add
add
mov
movsb
push
inc
add
adc
xor
add
add
mov
incl
mov
push
inc
decl
call
mov
mov
xor
lea
adc
add
dec
xorb
add
pcmpeqw
mov
pop
push
leave
or
xor
in
adcl
xor
push
dec
in
or
inc
inc
mov
push
and
mov
jb
add
inc
mov
or
jl
sbb
dec
xorb
add
xor
mov
add
dec
dec
adc
push
sbb
inc
push
decl
mov
or
mov
test
jge
xor
pushf
or
push
or
inc
or
jb
call
mov
mov
adc
and
lea
or
ret
je
sbb
mov
mov
je
pop
and
push
and
and
incb
and
pop
adc
in
ret
mov
pushf
incb
jge
mov
cmp
adc
push
decl
adc
mov
into
scas
mov
das
inc
jne
and
and
lea
jb
xor
adc
xor
jne
sbb
.byte
inc
pop
pop
