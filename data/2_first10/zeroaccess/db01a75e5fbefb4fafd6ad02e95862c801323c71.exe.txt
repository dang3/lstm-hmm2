push
mov
sub
push
orl
push
xor
addl
inc
adcl
push
decl
push
notl
call
test
je
lea
push
adcl
call
movl
jmp
orl
push
orl
mov
subl
push
addl
push
subl
call
test
je
subl
lea
subl
push
sbbl
call
movl
jmp
push
mov
or
mov
mov
addl
push
orl
push
adcl
push
call
andl
test
jne
sbbl
push
movl
push
call
incl
test
movl
jne
subl
push
addl
push
call
andl
test
movl
jne
orl
push
push
sbbl
call
xorl
test
movl
jne
movl
push
push
push
adcl
call
test
movl
je
lea
subl
push
adcl
call
movl
jmp
subl
push
push
andl
push
orl
call
test
movl
je
xorl
push
xorl
push
andl
call
test
movl
jne
movl
push
push
call
test
jne
push
push
call
orl
test
movl
jne
addl
push
push
push
xorl
call
subl
test
movl
jne
push
andl
push
orl
push
subl
call
xorl
test
movl
jne
orl
push
push
call
test
jne
movl
push
push
andl
call
test
movl
jne
push
push
call
test
jne
orl
push
sbbl
push
andl
push
addl
call
movl
test
movl
jne
orl
push
addl
push
adcl
push
call
test
movl
jne
addl
push
push
movl
call
sbbl
test
jne
adcl
push
sbbl
push
orl
call
xorl
test
movl
jne
push
push
addl
call
test
jne
push
push
orl
push
call
test
movl
jne
orl
push
subl
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
movl
call
xorl
test
movl
jne
push
adcl
push
orl
call
addl
test
movl
jne
subl
push
sbbl
push
adcl
call
movl
test
movl
jne
adcl
push
push
push
call
adcl
test
jne
sbbl
push
orl
push
movl
push
addl
call
adcl
test
movl
jne
addl
push
push
call
test
jne
push
subl
push
xorl
call
subl
test
movl
jne
adcl
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
push
call
test
movl
jne
sbbl
push
push
negl
push
sbbl
call
xor
jmp
mov
mov
sub
xor
movl
mov
mov
mov
neg
mov
mov
sub
mov
movl
xor
add
xor
add
sub
and
lea
andl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
add
lea
mov
mov
mov
sub
imul
mov
movzbl
and
mov
mov
mov
xor
mov
mov
and
mov
or
xor
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
add
movl
mov
movl
mov
movl
cmp
jne
mov
sub
mov
mov
mov
adc
mov
xor
xor
sbbl
add
or
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
xor
add
add
mov
mov
andl
mov
orl
mov
sbb
mov
sbb
mov
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
and
mov
mov
sub
mov
mov
mov
decl
movl
mov
adc
mov
addl
xor
add
movl
jmp
and
mov
mov
sbbl
xor
orl
lea
orl
push
mov
movl
xor
adcl
lea
orl
push
sbb
mov
pushl
andl
call
mov
or
mov
neg
xor
movzbl
add
lea
mov
sbbl
mov
sbbl
xor
xorl
xor
add
mov
xor
lea
movl
mov
cmp
jbe
mov
adc
mov
mov
mov
or
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
adcl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
neg
mov
sub
xor
mov
mov
movl
cmp
jne
lea
mov
lea
orl
mov
xor
mov
test
movl
je
mov
mov
sbb
mov
or
mov
xor
mov
subl
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
cltd
inc
mov
mov
adc
mov
mov
and
add
movl
adc
andl
orl
xor
mov
adc
mov
sbb
mov
mov
add
xor
add
mov
mov
adcl
xor
mov
or
mov
xorl
xor
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
je
mov
andl
mov
addl
mov
xor
adcl
add
movl
adc
andl
xor
andl
xor
movl
cmp
movl
jne
cmp
jne
mov
add
mov
andl
mov
adcl
xor
sub
mov
sbbl
mov
mov
addl
add
jmp
mov
movl
cmp
je
movzbl
sub
mov
mov
add
mov
xorl
xor
subl
add
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
adc
mov
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
notl
pushl
mov
orl
pushl
orl
add
sub
mov
mov
sbbl
pushl
xorl
call
mov
mov
mov
mov
movl
jmp
addl
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
sbbl
inc
ret
push
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movzbl
add
mov
notl
push
and
mov
movzbl
sbb
xor
xor
mov
push
or
mov
negl
add
movl
cmp
je
mov
orl
mov
andl
xor
xor
add
orl
add
adc
xor
mov
mov
mov
xor
push
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
or
mov
adc
movsbl
and
mov
andl
sub
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
pushl
push
push
pushl
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
xor
xor
xor
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
not
push
movl
mov
addl
push
mov
xorl
xor
sbbl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
add
adcl
mov
movzbl
xor
mov
mov
test
jmp
lret
int
outsl
cmp
jae
adc
jl
jl
xor
jl
adc
and
popa
pusha
mov
insb
insl
xor
fdivrp
push
arpl
stos
jp
push
iret
pop
dec
cmp
dec
jg
mov
jmp
cld
imul
xor
mov
andl
push
mov
fldl
or
and
inc
push
and
mov
sub
mov
jbe
ret
sbb
jb
jnp
xchg
pop
cmpl
cwtl
je,pt
add
sub
push
sti
iret
mov
or
out
push
dec
push
cmp
xor
lods
inc
int3
cmpsl
dec
fiaddl
push
std
push
push
movsl
icebp
bound
enter
outsl
fildll
mov
mov
rorb
mov
cmp
les
jmp
sbb
sbb
dec
add
sbb
mov
add
shll
adc
dec
ja
lret
adc
rorb
dec
aas
mov
adc
test
cs
xor
and
push
jb
cmp
and
fisubrs
sub
es
test
cli
or
jp
in
mov
cmp
incl
mov
ret
mov
sub
lea
jmp
pusha
push
xchg
and
xorb
mov
popa
sub
or
imul
popf
jl
sarb
int3
daa
leave
out
mov
mov
mov
pusha
stc
dec
and
daa
add
cmp
or
cld
inc
dec
aas
cmp
sbb
filds
repnz
dec
sbb
pop
and
dec
mov
mov
xchg
dec
insb
cs
fwait
subb
xchg
fisubrl
imul
and
cmpl
mov
aad
pop
pop
xlat
pop
dec
ds
xchg
cs
aas
insl
and
push
push
sahf
aas
jecxz
lods
sbb
sub
adc
jb
mov
push
mov
scas
shll
scas
xor
pop
add
sub
fmuls
cmpsb
jae
pop
aam
jge
pusha
inc
mov
outsl
add
pop
cmp
pop
imul
rcl
nop
push
subl
scas
xchg
icebp
faddl
nop
sbb
and
mov
cli
fwait
mov
pop
and
mov
fidivrs
mov
pop
lods
mov
mov
jge
add
add
xor
pushf
cmp
pop
movsb
mov
aad
test
push
xrelease
movsl
mov
sub
sub
cltd
leave
faddl
mov
push
fs
aam
ss
jp
push
hlt
enter
mov
xchg
sbb
or
add
hlt
add
xchg
leave
push
push
or
mov
pop
xchg
jecxz
rcrb
inc
lock
inc
lds
pop
xchg
call
fisttps
sub
fsubs
cmp
mov
xor
aad
sub
test
xor
mov
push
adc
in
push
rol
testb
dec
xchg
pop
add
pop
and
pusha
imul
fbld
lret
mov
inc
cmp
cwtl
mov
ss
pop
imul
lea
pop
jbe
iret
fucomip
out
mov
sti
xor
push
jno
pop
cmp
xchg
inc
les
cltd
outsl
mov
mov
fldpi
ret
popa
nop
jne
test
leave
in
call
inc
dec
aad
mov
insb
pop
push
fwait
in
inc
jnp
cmp
mov
lret
mov
sbb
cmp
mov
fcmovnbe
mov
imul
lret
mov
outsb
or
add
or
mov
fiadds
sbb
lret
xor
out
cmpsl
lods
xor
clc
mov
movaps
fs
sub
push
in
jmp
fldcw
pop
rclb
or
dec
sahf
lods
shlb
or
out
out
mov
gs
bound
push
in
out
lock
mov
rol
mov
xor
int3
daa
dec
enter
and
xlat
push
add
mov
iret
pop
lret
movsb
fwait
and
xor
push
pop
insb
test
push
cmp
test
gs
inc
cmpsb
and
jg
mov
into
sub
shlb
xlat
sbb
pop
or
sub
bound
xchg
fwait
mov
adc
fsubp
mov
insb
cs
xchg
xchg
mov
rclb
dec
mov
decl
jne
jne
iret
call
jmp
pop
test
jmp
aaa
ret
pop
lcall
repnz
roll
push
ss
mov
sub
lret
push
mov
aad
add
mulb
out
jmp
mov
clc
lods
mov
nop
mull
je
add
mov
and
mov
cmp
and
pushf
pop
xor
aam
jno
test
hlt
aas
pop
sbb
jmp
cmpsb
mov
mov
jo
out
push
std
cwtl
repz
rcll
xor
vcomiss
lods
mov
lods
imul
test
enter
xchg
mov
imul
cmp
cld
xchg
outsl
xchg
adc
xchg
xchg
aas
adc
lahf
mov
adc
cmp
mov
movsb
mov
cmp
inc
jl
mov
popf
push
jb
push
loopne
sbb
fs
inc
sbb
sub
and
ds
int3
test
ljmp
les
mov
push
shl
push
in
pop
add
repz
nop
imul
jl
testb
testl
sbb
rorl
pop
mov
adc
in
xchg
cmc
nop
daa
int3
push
dec
cli
or
popa
loop
mov
mov
paddusb
mov
or
add
inc
cltd
pop
lcall
add
orl
daa
fs
and
mov
and
addr16
das
push
push
sub
mov
arpl
pop
aas
daa
pop
or
daa
xor
fcoms
ss
sbb
xchg
cmp
mov
lock
das
js
out
cmp
mov
xchg
mov
movsb
fidivs
push
stc
adc
or
ds
aas
mov
in
loop
fucomip
xchg
jnp
jb
fsub
decb
ss
adc
pushf
mov
int
mov
rolb
insb
inc
cmpsb
andb
ret
mov
mov
cmp
mov
subb
cltd
inc
xchg
pop
andb
sub
ret
inc
inc
icebp
mov
out
sbbb
stos
and
adc
mov
cs
cmc
ss
nop
stc
into
loop
mov
sub
jmp
es
enter
cmpsl
cmp
lods
addr16
test
push
dec
mov
ss
out
add
mov
sub
insb
jae
xchg
or
lcall
jae
xchg
mov
and
and
pop
fmuls
add
mov
das
push
mov
rorb
adc
mov
mov
push
xchg
lods
mov
cmp
cmp
sahf
jg
jge
dec
sbb
adc
mov
dec
xchg
jmp
pop
int
inc
add
repnz
inc
adc
add
stc
mov
pusha
les
scas
les
jne
iret
les
out
sub
shlb
sahf
ss
xor
xchg
jle
pop
call
nop
ret
and
jns
push
inc
xchg
aaa
mov
fucompp
and
xor
sub
fidivrs
enter
jl
imul
outsl
movsl
aas
mov
mov
movb
clc
pop
jl
cld
aas
push
inc
imul
mov
loope
and
aam
add
mov
jge
dec
or
dec
ja
imul
or
loopne
add
xchg
les
pop
pusha
ja
jae
dec
push
fbstp
xchg
xchg
pop
cmp
cmp
mov
mov
mov
das
cltd
lods
and
mov
les
adc
test
mov
or
aaa
imulb
jp
sti
fcom
stc
popf
dec
mov
iret
idiv
insl
movsb
add
jne
out
stc
inc
adc
xchg
lahf
sub
adc
sub
nop
shlb
ljmp
dec
mov
in
outsb
roll
stos
dec
cmpsb
inc
and
jge
jnp
sbb
ret
rcll
or
lret
popa
es
movsb
int3
push
scas
rclb
das
add
test
push
pop
ret
or
pop
mov
loope
mov
xchg
jo
clc
test
mov
cmpl
push
mov
sbb
mov
or
jae
data16
cmp
push
or
mov
add
stos
bound
xchg
orb
xchg
and
push
xor
push
lds
loop
iret
popf
xchg
lea
pop
sub
mull
xchg
lcall
sub
sahf
or
or
ffreep
xor
inc
xchg
lock
aam
addr16
mov
pop
sbb
sbb
sarb
lret
inc
jle
nop
sub
inc
shl
or
cli
mov
and
stos
jb
insb
adc
mov
adc
or
mov
div
data16
lret
jle
or
adc
lcall
dec
inc
sub
sub
mov
sub
in
arpl
mov
and
negl
jge
and
pop
scas
or
adc
repz
loop
xor
iret
add
fsubrs
jmp
lock
inc
leave
out
aaa
pop
in
xor
dec
push
cs
call
fcompl
iret
mov
push
ds
mov
das
loopne
mov
lcall
div
sub
add
rolb
into
mov
or
dec
xchg
xchg
jo
push
mov
push
loopne
pop
adc
loop
imul
inc
insl
pop
shrb
mov
ret
arpl
sub
testl
subl
mov
add
ss
js
outsl
pop
fcoms
scas
loope
jb
dec
movsl
dec
push
jmp
push
stos
mov
addl
sarb
rcrl
pop
mov
mov
lds
je
fs
into
test
mov
push
sub
jne,pt
enter
or
push
xor
xor
fdivl
add
ljmp
popf
adc
push
sbb
adc
xchg
xchg
cmp
lret
loopne
adc
fsubp
jb
mov
and
or
mov
push
in
mov
and
xor
inc
ret
jp
hlt
push
push
pop
jnp
pushf
lret
sub
and
mov
hlt
shll
sub
sub
ljmp
test
sbb
and
pop
push
push
lcall
mov
dec
les
xor
fildll
in
out
stos
or
das
adc
inc
into
sub
andl
push
inc
sub
movsb
rol
fists
cld
xlat
cmp
iret
xchg
and
cld
fcoms
adc
inc
insl
lds
aad
xchg
and
jo
das
pop
sbb
sti
push
jecxz
mov
or
in
sarl
add
push
les
cli
push
or
and
scas
ret
lods
push
add
sbb
xchg
dec
outsl
loopne
insb
test
mov
ljmp
es
aam
mov
mov
sbb
popf
imul
aad
fs
lea
inc
fistpll
xor
adc
mov
lret
mov
jmp
es
sub
inc
popa
ficoms
test
cmp
dec
pop
cli
mov
adc
out
inc
or
mov
cmp
pop
call
shrl
and
mov
jmp
jno
outsb
jnp
ja
jp
out
loopnew
push
movsb
xchg
jo
jae
aaa
push
mov
arpl
push
enter
xchg
mov
divl
stos
pop
push
xor
push
pop
adc
fldenv
push
aam
inc
adc
imul
xchg
pop
mov
fistpl
xor
test
xchg
cld
push
jl
xor
and
cmpsl
dec
adc
or
dec
xor
jae
sbb
xchg
repnz
popa
cmp
pop
mov
fdivr
dec
pop
jge
lret
dec
repz
push
das
movsb
fsubl
flds
jo
push
jp
mov
les
dec
in
or
out
fists
out
inc
loope
cs
xlat
decb
hlt
lret
lods
outsb
outsl
dec
shll
push
lcall
out
adc
nop
cmp
in
push
xchg
test
out
sbb
loope
jo
push
pop
xchg
sub
mov
and
push
jns
sbb
jl
insl
cmp
aad
scas
sbb
xor
mov
pop
push
ja
push
popf
cmp
and
mov
push
clc
fisttps
stos
pushf
ljmp
fsubrs
cwtl
std
add
sbb
push
ffree
out
scas
fpatan
push
mov
push
mov
cmpsl
cmc
jp
adc
push
aad
mov
lretw
ror
xor
test
in
mov
sahf
out
cmp
push
push
adc
push
jmp
repnz
pop
bound
inc
sarb
push
es
push
dec
sub
loop
loopne
roll
clc
cmpsb
mov
pop
mov
mov
je
icebp
push
xor
adc
pop
arpl
push
push
int
stos
daa
movntq
out
jbe
scas
xchg
lret
fwait
mov
push
add
and
ss
adc
dec
sti
orl
mov
push
cli
lea
hlt
notb
and
push
and
std
mov
mov
pop
popa
int
and
mov
ss
data16
iret
decb
into
cmpsb
cmc
cmp
cwtl
lret
inc
xchg
mov
nop
push
out
add
sbb
inc
in
outsb
mov
rorb
test
lret
ds
sub
lods
jge
movsbl
push
aad
inc
rcr
xor
mov
push
rclb
adc
aam
jmp
lods
loope
cmpsl
and
pop
pushf
mov
inc
mov
mov
fs
push
data16
aam
shrb
fldenv
sbb
lock
cli
push
mov
test
jbe
repnz
mov
ja
adc
lea
scas
or
pushf
jmp
lock
enter
aam
popa
popa
ret
fisttpll
jecxz
xchg
sub
iret
mov
aam
pop
outsl
mov
dec
sub
mov
inc
dec
mov
adc
test
call
xchg
shll
sub
loope
mov
adcl
jbe
xchg
xchg
pop
mov
jns
cs
loop
int3
dec
insb
das
xchg
mov
in
dec
jl
enter
cmp
jge
dec
sbb
sub
push
sbb
enter
lods
mov
cmp
cmp
into
ret
call
aaa
scas
jp
data16
xchg
lret
aaa
lods
and
popf
and
add
xchg
or
or
cmp
shll
jb
hlt
jecxz
popa
cmp
mov
mov
cmpl
lds
fwait
mov
lods
mov
jmp
xchg
mov
test
dec
icebp
lcall
popa
mov
hlt
aaa
insb
pusha
vcvtpd2psx
dec
mov
and
mov
push
std
push
or
outsb
pop
fisubrs
jae
xor
and
and
cli
inc
pusha
mov
cmpsb
add
loopne
test
das
lea
insl
fists
jae
outsl
fcompl
std
dec
into
push
pop
orl
sub
and
mov
ret
cmp
addl
leave
ja
sbb
sbb
mov
ss
out
outsl
cwtl
mov
lods
mov
sub
sub
and
and
std
dec
bound
xchg
repz
pop
cmp
or
js
inc
stos
stc
mov
jo
ja
xchg
add
cmp
stos
out
sbb
jne
ficompl
mov
add
xor
out
push
imul
pop
imul
pop
push
cwtl
out
daa
xchg
sbb
cmp
xchg
or
push
mov
cltd
fildl
ss
xchg
das
inc
adc
fs
fwait
cwtl
pop
sbb
add
sub
out
ljmp
scas
mov
mov
ds
lret
leave
add
lret
push
stos
pop
std
jno
pop
sub
adc
pop
cmpsb
push
mov
adc
stc
inc
fcmovb
sbb
push
xor
mov
test
movsl
mov
sbb
out
push
cmp
je
cwtl
sbb
pop
or
jb
cmp
shll
loope
jno
insl
push
xchg
divl
sbb
sbb
xor
ljmp
push
push
mov
sub
adc
inc
pop
imul
pushf
push
data16
push
out
or
aaa
movsb
add
sub
jge
cmp
mov
rclb
and
xchg
sbb
dec
push
popf
fwait
or
adc
mov
mov
push
popa
sbb
lods
jbe
cmp
cmpsb
test
aad
leave
jne
and
sbb
pop
or
and
cli
mov
js
push
imul
inc
and
mov
addr16
add
pop
into
jne
notl
aad
fucomp
lods
pop
xlat
inc
push
repz
mov
pop
and
loope
jg
xchg
frstor
test
adc
ret
dec
mov
fldenv
das
pop
in
xlat
insb
andl
jmp
addr16
adc
sub
adc
mov
mov
ds
dec
dec
xor
fnstsw
cmc
xor
or
rcrb
cmp
mov
sti
imul
aad
stos
out
or
repz
sbb
jo
mov
popa
out
lret
sub
ficoms
imul
jg
fsts
mov
rcrb
jg
mov
add
arpl
mov
sub
sti
inc
adc
gs
shll
cmp
arpl
or
mov
jo
fcompl
pop
andl
mov
es
pop
rcrb
sbb
mov
xlat
adc
ja
outsb
or
enter
lret
xchg
hlt
ret
push
xchg
xor
sahf
adc
rcll
lcall
addr16
xor
sub
cmp
stos
sbb
in
mov
fmulp
mov
outsl
outsb
xor
jno
inc
lock
outsb
daa
iret
into
jno
inc
cwtl
push
mov
cmpsl
mov
xchg
push
stc
addr16
jno
push
subl
add
mov
xor
sarb
adc
xchg
ljmp
fdivrs
mov
lods
xchg
hlt
aam
cmc
daa
out
cmp
stos
cmp
adc
test
insb
push
mov
data16
mov
in
lcall
mov
lds
cs
pusha
lret
lods
and
sub
push
lock
fdivrp
push
add
decl
jne
popa
mov
add
push
push
ljmp
sub
xor
setns
adc
cld
test
ffree
or
mov
add
pop
pop
push
pop
sarl
push
push
push
jmp
arpl
in
cmp
inc
pop
pop
inc
inc
xlat
or
mov
xchg
mov
mov
xor
loop
icebp
pop
inc
movsb
lea
clc
in
adcb
lret
loope
aas
xchg
mov
lret
out
sbb
sub
cmp
inc
mov
jb
and
or
sub
call
aad
adc
jp
iret
fisubrl
insb
jae
inc
mov
sub
mov
pusha
xchg
add
ljmp
cmpl
pop
mov
fisubl
jo
scas
sub
movsl
repz
jmp
addr16
sub
dec
ljmp
pop
sbb
imul
out
push
cmp
fistps
pop
lods
sub
rol
dec
gs
sbb
les
fdivl
mov
xor
mull
shrb
shll
aad
scas
incl
jno
repnz
shl
test
mov
xchg
lea
je
pop
fildll
mov
add
fimuls
icebp
imul
cmp
enter
xlat
arpl
rcrb
faddl
filds
mov
jno
imul
loope
lret
and
aad
add
in
sarb
cli
and
adc
and
pusha
mov
pushf
jl
lcall
and
sbb
and
adc
dec
mov
xor
inc
or
shrb
jae
sti
push
xchg
jne
clc
movsl
lcall
fsubrl
push
jmp
jg
in
lods
test
in
fcompl
das
and
lds
jno
cmp
lds
ret
inc
gs
cmpsl
sbb
xchg
mov
mov
mov
or
push
sahf
inc
or
jp
mov
loopne
jle
mov
popa
mov
mov
sbb
mov
push
sub
orl
orl
jmp
scas
in
pop
lock
loop
orb
int3
push
dec
inc
int3
add
fdivrs
push
call
xor
xor
jecxz
lret
xor
shl
jnp
mov
je
fisttpl
and
daa
inc
movsb
daa
add
inc
pop
pop
pop
mov
outsb
or
fildl
inc
inc
pop
js
lods
stos
repnz
pop
fildl
pop
push
jnp
ret
jbe
xor
cltd
fwait
xor
cmpsl
push
les
sub
pop
cmp
mov
jbe
mov
into
adcl
decb
loop
mov
mov
fwait
xchg
and
inc
cmp
hlt
std
mov
imul
out
mov
inc
or
rcll
or
jp
lea
sbb
adc
cmpsl
xchg
js
xchg
cmp
sub
cltd
aam
or
outsb
cmp
jo
fiaddl
push
and
aad
insl
add
pop
xor
xor
mov
jp
sarl
insb
clc
pop
and
aam
mov
mov
mov
jle
decl
int
sub
outsb
jno
xor
mov
pop
jl
push
mov
mulb
adc
rorb
popa
xchg
lock
pop
imul
outsb
enter
cmpsl
adc
jb
mov
mov
mov
push
push
enter
push
push
mov
cmp
mov
cmp
popw
and
xor
pop
mov
push
aam
mov
cmp
jne
rcr
mov
xchg
stc
icebp
out
mov
mov
scas
push
pop
dec
nop
and
or
push
xchg
xlat
hlt
adc
jns
jb
lock
in
sbb
ss
xor
jno
mov
dec
test
push
movsl
andb
bnd
push
xchg
dec
xchg
adc
enter
aaa
mov
add
cld
fwait
pop
out
test
push
clc
outsl
cmp
xchg
and
lahf
xchg
out
or
daa
add
arpl
mov
mov
xlat
jmp
fwait
lret
subl
push
jle
je
aas
dec
bound
xchg
mov
pop
sbb
mov
jnp
les
lods
adc
movsb
test
xchg
dec
sti
push
jle
loop
ficomps
movsb
mov
or
mov
xor
jge
subl
mov
add
xchg
sbb
les
mov
orl
jno
aad
cmp
pop
movsb
and
inc
jl
push
fidivs
adc
mov
inc
xor
dec
scas
aad
inc
pop
cmpsl
push
xor
sbb
jp
dec
cmc
mov
inc
xor
sbb
jns
jecxz
adc
shr
int
push
inc
sub
sahf
inc
sub
jmp
or
cmc
sbb
xor
jb
dec
add
mov
insl
add
filds
test
mov
test
mov
mov
inc
ret
push
add
jmp
repnz
push
add
push
xor
adc
movsl
fildl
mov
in
pop
icebp
mov
lret
scas
xchg
aaa
xchg
xor
cmc
lea
cmp
leave
pop
mov
cmp
dec
sub
mov
shll
gs
cs
adc
cmp
sub
adc
mov
and
cld
scas
lds
fstpl
mov
inc
jle
js
lock
add
test
fmuls
fisubs
push
pusha
cmp
xchg
hlt
in
xchg
xor
inc
mov
sbb
stc
mov
push
fistpl
adc
mov
mov
test
imul
ret
xchg
jp
mov
push
push
dec
imul
sbb
xchg
adcl
jp
cmp
jg
pop
stos
in
daa
cmc
outsb
adc
aad
adc
and
dec
fiadds
sub
mov
jns
les
stos
ljmp
or
rcrl
cmp
mov
or
cmp
mov
mov
mov
outsb
add
adcb
mov
dec
fcoml
lock
ret
mov
cmpsb
loop
xchg
dec
add
mov
test
aam
ficompl
cmp
mov
in
push
jnp
jo,pt
movsl
lds
or
insl
lcall
popf
insb
cwtl
push
test
xchg
rcr
lsl
fs
cmp
sarl
or
sbb
jb
push
mov
shll
outsl
shrl
arpl
xchg
and
scas
fnsave
out
cld
stos
hlt
cmpsl
xor
test
adcb
aaa
inc
push
sbb
mov
popa
mov
dec
daa
cmc
jo
loop
dec
flds
sub
pusha
mov
push
mov
jp
test
mov
sub
cmpsb
lretw
sbb
xor
adc
push
fnstcw
xchg
ficoms
jnp
pop
cs
cmp
dec
xchg
or
gs
pop
xor
outsl
sub
sbb
jecxz
mov
sbb
ljmp
pop
call
mov
xchg
mov
adc
out
cmp
and
jmp
add
and
mov
les
mov
fisttpl
mov
test
testb
popf
es
lcall
xchg
sti
push
int
sbb
loop
lods
test
mov
movsb
jae
xlat
mov
cmp
insb
sub
xchg
mov
sbb
cmp
sti
call
inc
mov
aas
and
mov
cmpsl
inc
jbe
mov
insl
push
jg
sbb
and
push
int3
mov
enter
lret
inc
js
stos
push
adcl
dec
in
hlt
popf
in
rorl
inc
jp
cmc
jecxz
push
cmpsl
popa
or
push
stos
mov
mov
test
inc
outsb
in
int
cmpsb
cld
inc
and
inc
push
fscale
insl
insb
cmpsl
out
sbb
mov
fisubs
mov
and
fisttps
push
and
push
int3
out
outsl
and
xchg
pop
lds
jae
pushf
lods
sbb
popf
out
cmp
std
xchg
mov
jmp
adc
add
and
sub
xor
or
push
push
inc
addr16
pop
out
ja
shlb
mov
xor
sbb
aas
loop
sti
fildll
gs
rcll
push
mov
lcall
jnp
mov
jo
fists
enter
in
xchg
out
xchg
sbb
cmp
sbb
bound
stos
jmp
mov
ss
sarl
and
xchg
mov
cmp
data16
inc
pusha
push
jp
mov
cmpsl
add
pop
movsb
inc
stc
lcall
mov
jo
std
cmpb
movl
and
test
mov
or
push
xor
jg
jae
push
mov
jp
js
adcl
and
xlat
je
or
shrb
fs
ret
iret
out
and
mov
jae
jne
sbb
sbb
stos
dec
arpl
push
cmp
push
inc
xchg
imul
xchg
in
inc
sub
int3
sub
bound
std
jl
in
sar
lods
lret
cld
add
mov
add
out
or
jl
push
cli
push
mov
mov
xchg
cli
xchg
ds
jmp
repnz
mov
sub
cmpsb
jbe
js
pop
mov
ja
and
in
pop
fs
out
push
mov
push
icebp
in
add
outsl
mov
loope
xchg
sbb
pop
mov
orl
repnz
stos
mov
divb
sbb
pop
cmpb
sub
ret
int
lea
xlat
sub
dec
add
cmp
xor
faddp
pop
mov
xor
call
mov
hlt
adc
mov
ljmp
mov
lods
nop
jecxz
mov
jl
test
sub
stc
mov
inc
sarb
call
rcl
in
or
sbb
cli
pop
fisubrl
jle
out
cwtl
mull
jnp
pop
sub
fcmovnu
fsts
rcr
mov
outsb
cmp
sub
cmp
adc
jl
fcompl
outsb
mov
and
jb
xchg
fdivs
gs
fldl
enter
stos
jbe
enter
pusha
daa
aaa
pop
shlb
in
add
sarl
sub
test
xor
pop
inc
jns
dec
or
inc
inc
stos
push
adc
jbe
mov
pop
jle
loope
add
fwait
pop
adc
pushf
mulb
mov
stos
stos
shl
fcomip
cmc
roll
jo
js
icebp
mov
add
xor
or
scas
daa
leave
jmp
push
or
jmp
mov
sub
inc
inc
repz
pop
mov
adc
inc
push
dec
xor
xchg
nop
or
jb
cmp
hlt
stos
sbb
test
arpl
xor
or
sbb
jnp
mov
push
inc
cmpsl
loop
add
mov
push
cld
mov
add
push
xor
idivb
xchg
jb
dec
ja
push
xchg
push
ljmp
pusha
bnd
cltd
pop
out
xchg
fnstcw
scas
sahf
sub
mov
repnz
sti
cmpsb
and
add
fadd
mov
jmp
pop
mov
call
push
mov
add
cmp
jmp
call
scas
aam
mov
mov
std
cs
loop
mov
fwait
push
pop
cltd
cmp
mov
xchg
std
sub
test
pushf
xor
out
cmp
lock
inc
cmp
jbe
or
std
push
or
ja
sahf
stc
lea
xlat
enter
jae
xor
jo
jae
adc
pop
sbb
ret
repnz
loope
pop
push
jle
movsb
xor
sbb
cld
cld
divb
sub
lcall
lcall
js
mov
sbb
test
add
add
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
mov
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
add
mov
mov
mov
mov
sub
or
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
and
mov
sbb
xor
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
andl
mov
sub
lea
andl
xor
subl
xor
cmp
movl
je
mov
addl
xor
add
movl
cmp
movl
jne
orl
pushl
sbbl
call
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xor
add
cmp
je
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
push
sub
push
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
dec
mov
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
mov
adc
movl
add
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
and
sub
adc
mov
xorl
sbb
mov
mov
or
sub
mov
orl
add
mov
xor
xor
mov
sub
imul
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
sub
and
movl
subl
lea
mov
movzwl
sbb
push
mov
mov
and
mov
sbbl
lea
addl
mov
neg
mov
sbb
mov
mov
sbbl
xor
andl
add
mov
adc
mov
adc
mov
mov
xorl
add
push
and
mov
movzwl
sub
mov
xorl
jmp
mov
mov
jno
push
cmpsl
xor
pop
jl
dec
pop
jl
lret
mov
adc
push
jno
cmp
mov
mov
push
sbb
pop
xlat
add
cmp
and
dec
ror
dec
push
cmp
mov
outsl
hlt
mov
insb
hlt
mov
aam
lcall
mov
pop
out
movsb
mov
mov
adc
push
in
and
sub
out
add
movl
daa
test
dec
and
lds
es
jb
jo
outsb
movsb
xchg
dec
out
hlt
loope
push
push
push
gs
or
adc
add
xchg
push
push
cwtl
pop
and
stos
pop
xchg
sub
ljmp
mov
push
adc
aaa
lret
jge
cmovae
pop
jae
arpl
bound
lea
ficompl
adc
sub
cmp
mov
sbb
jnp
outsl
and
outsl
jne
push
ss
add
cmc
cld
icebp
daa
push
mov
scas
dec
cmc
call
mov
dec
into
insl
xor
fldenv
fsubrl
jmp
mov
mov
pusha
mov
mov
in
and
pop
imul
jo
or
push
mov
push
icebp
aad
push
mov
imul
pop
pop
jmp
sarl
jmp
ljmp
lahf
add
lea
mov
imul
mov
cltd
sbb
sbb
ror
mov
mov
or
xchg
loopne
lahf
insl
adc
rorl
roll
loope
jb
hlt
int3
lock
mov
xor
and
xor
mov
addr16
jl
mov
mov
int
and
mov
nop
mov
pusha
dec
cmp
mov
ret
jb
in
jns
sub
push
sbb
mov
loope
cld
cmp
mov
push
ljmp
dec
mov
push
ja
loop
xor
jns
push
xor
dec
ret
aam
dec
xchg
lcall
mov
mov
xlat
add
cmpsb
inc
fwait
dec
inc
ljmp
inc
xchg
adc
mov
mov
cmpsb
int
jmp
cmp
sub
in
add
lock
mov
test
lret
inc
ficoml
cmp
jmp
dec
dec
in
roll
adc
pushf
cmp
insl
mov
mull
xor
in
into
dec
xchg
fxch
ret
inc
outsb
cmp
cmp
aas
mov
cld
push
mov
lahf
push
lret
imul
daa
jmp
ja
inc
fsubs
cmc
xchg
cld
and
leave
xor
jecxz
inc
in
push
push
sub
push
jge
inc
test
xchg
pop
popf
jmp
jmp
lret
sub
cwtl
stos
mov
int3
imul
test
jae
nop
jl
or
mov
ds
jecxz
sbb
push
xor
add
mov
mov
adc
fsubrl
repnz
mov
push
mov
clc
push
ficompl
add
or
lds
adcb
lret
sbb
mov
fistl
pop
or
xchg
jno
icebp
pushl
mov
enter
neg
xchg
out
dec
xchg
xchg
sub
rorb
cmp
or
push
push
sub
or
and
rclb
out
cld
or
mov
mov
cmp
or
lods
xor
xor
iret
das
sub
loope
cld
xchg
arpl
inc
fucomip
inc
mov
sahf
cmp
dec
js
in
ds
jno
adc
inc
inc
adc
out
sbb
add
ret
jno
adc
iret
xchg
lock
adc
push
dec
cwtl
mov
mov
fbld
mov
leave
cmp
scas
mov
data16
mov
ret
cmp
sbb
fidivl
dec
mov
cmpsb
xchg
jmp
lahf
inc
push
repz
dec
in
mov
mov
arpl
mov
sbb
notl
push
mov
xor
bound
out
cmp
fdivl
loope
add
ljmp
or
dec
scas
inc
add
aas
arpl
add
pop
fwait
sahf
lcall
push
mov
lock
sahf
cmp
rorb
adc
mov
int3
daa
adc
jno
mov
icebp
outsl
push
xchg
add
pop
scas
aam
jo
ss
out
and
insb
arpl
mov
in
scas
fs
push
and
out
in
rorl
jo
inc
sbb
fnsetpm(287
shl
test
in
sub
les
mov
scas
jns
and
jno
ds
repz
cld
mov
test
fimull
push
sub
push
cmp
dec
pop
pop
repnz
sbb
nop
sbbb
pop
out
mov
and
into
jmp
mov
inc
xchg
sbb
ret
cmp
aad
pop
xchg
lahf
ljmp
out
mov
hlt
js
in
pop
jae
push
ret
sbb
aad
mov
jno
faddp
in
jecxz
adc
push
popa
add
inc
rorl
jmp
out
rcl
gs
jb
mov
sti
mov
movsl
test
adc
aaa
int
sbb
mov
data16
out
push
or
xor
stc
icebp
xchg
out
xchg
xchg
dec
dec
mov
lods
test
ror
push
push
leave
inc
imul
cmp
xorb
dec
pusha
jle
pop
push
xchg
loope
sahf
gs
out
data16
mov
fcomps
xchg
push
fcompl
loop
ret
inc
mov
addr16
test
jbe
rclb
filds
mov
int3
push
mov
pextrw
add
hlt
jecxz
leave
in
xchg
mov
cmovno
daa
test
gs
pop
push
stc
dec
mov
leave
in
neg
leave
cli
mov
repnz
inc
mov
cwtl
mov
lret
mov
mov
mov
dec
dec
loopne
pop
dec
fsubr
or
in
cmp
mov
fldenv
xor
test
push
cmp
into
dec
into
and
inc
xor
fsubp
mov
leave
shrb
addr16
gs
stos
test
pusha
iret
cmpb
xchg
and
sbb
call
xchg
xor
and
mov
ds
push
mov
dec
xchg
rorb
add
or
mov
sarb
xor
jae
dec
inc
adc
add
rolb
dec
pop
cmpsl
frstor
jnp
or
add
mov
dec
addr16
out
ret
in
js
bound
add
dec
mov
movsl
jae
out
mov
jb
cmpsl
pop
xchg
rcll
lods
stos
js
pop
je
data16
repz
insb
xor
clc
mov
or
pop
andb
push
or
repnz
pop
inc
dec
xor
outsl
mov
xchg
adc
cmpsl
loopne
add
add
insb
mov
shlb
int3
inc
or
outsl
lods
jns
and
cwtl
popa
out
fnstenv
faddp
jle
call
adc
xor
push
lcall
outsb
jne
push
and
push
inc
dec
sarl
pop
lods
jo
mov
sti
nop
das
and
add
cwtl
cmc
in
popf
sub
movsb
ficoml
repz
dec
mov
xchg
dec
ss
ret
mov
ds
sub
inc
pushf
pushf
lret
sbb
les
in
xchg
inc
lahf
into
ret
adc
push
jno
jl
js
xchg
pushw
test
shrb
push
in
sub
push
push
cmpsb
ja
sub
ljmp
jge
xor
inc
push
jge
ret
js
idivb
lock
jecxz
mov
inc
pop
icebp
out
fdivr
movl
xchg
sbb
nop
adc
mov
cli
in
sub
cmpsl
mov
sbb
mov
sub
das
sub
jg
and
pop
inc
jnp
out
push
pop
or
pop
mov
inc
and
movsl
shll
fs
mov
aas
cwtl
int3
mov
sub
repnz
mov
dec
xchg
jb
pushl
dec
add
in
sub
pop
mov
sub
ljmp
pop
xchg
mov
shl
jl
push
out
push
mov
add
inc
mov
mov
sbbl
stos
outsl
mov
into
es
aas
dec
cs
sub
stc
mov
dec
push
add
cmp
iret
cmp
inc
pop
ret
loopne
test
ss
sbb
mov
jne
mov
stos
adc
xor
jb
xchg
adc
pop
test
rorl
inc
push
mov
pop
in
or
adc
sbb
lret
lea
mov
xor
imul
in
pop
and
push
jnp
outsb
adcl
jg
jne
or
test
inc
pop
dec
xlat
sub
in
xchg
jg
pop
adc
sbb
sbb
fisttpl
sub
and
sub
ret
dec
xchg
mov
xor
mov
jnp
bound
repnz
insl
and
push
dec
adc
sbb
pushf
push
push
aaa
jecxz
cld
fmull
xlat
cmpsl
ljmp
outsl
mov
fs
adc
mov
pop
ds
fistpll
je
mov
and
insl
mov
mov
xchg
ret
int3
lcall
mov
div
jge
cwtl
nop
mov
xor
mov
mov
ss
pushf
and
inc
cli
inc
cld
mov
and
call
scas
dec
xchg
dec
out
ljmp
call
jmp
dec
xrelease
mov
jbe
ds
js
nop
push
sub
sbbb
int
shrl
mov
xchg
push
mov
jae
gs
aas
push
mov
cwtl
cmp
inc
sub
cmp
stos
sub
push
xchg
sbb
adc
push
aas
stc
push
std
jge
cmpsb
popa
sub
mov
movsl
insl
int
repnz
or
add
addr16
and
sbb
lret
adc
ss
mov
outsb
lock
clc
mov
mov
sub
xchg
fsubrl
lcall
push
pop
pop
push
negl
mov
jae
repnz
push
pusha
xchg
pop
add
js
lods
int3
shrl
sbb
in
cmpsb
dec
push
popf
lret
aaa
pop
push
mov
clc
add
imul
push
stos
add
mov
or
rorb
sub
and
sarl
shr
testl
scas
sahf
popf
add
xchg
pop
mov
adc
jae
in
jle
icebp
cmp
push
push
jge
xor
aaa
les
enter
dec
cld
mov
leave
imulb
test
xchg
push
sub
in
mov
xchg
adc
add
fstl
inc
xor
popa
popf
test
push
jno
lock
jecxz
cli
cld
aaa
fcomps
inc
dec
shll
or
inc
mov
sub
pushf
shl
loopne
adc
pusha
cli
pop
sub
mov
test
dec
sbb
outsb
inc
rclb
mov
cmpb
test
cmp
mov
cmp
jmp
sub
enter
sub
jns
inc
fcoml
jb
push
pop
jl
sub
daa
jb
negb
adc
mov
mov
paddsw
push
or
cmpsb
sbb
hlt
mov
enter
add
fildll
neg
xchg
inc
mov
mov
jno
mov
xor
sbb
xor
jle
divb
call
and
dec
cmpsb
fs
ja
gs
and
and
sub
inc
and
cltd
xor
hlt
mov
mov
jbe
sbb
negl
inc
test
aam
or
subb
add
ja
test
mov
hlt
clc
fnstenv
sub
push
sbb
clc
out
loope
testb
add
or
popa
jbe
in
and
fwait
mov
and
addb
pusha
mov
sbb
xorb
cld
sarl
ret
ficoms
js
sahf
jnp
push
dec
enter
mov
and
fbstp
mov
mov
pop
cs
add
fidivrs
sbb
cmp
push
orl
pusha
ficompl
ljmp
xor
dec
jmp
jae
shll
popf
cli
fcompl
push
fadds
xor
loop
sub
repz
pushf
pop
sbb
jnp
push
cwtl
les
sub
push
in
xchg
ljmp
dec
fistps
jbe
mov
daa
mov
mov
rclb
or
jno
scas
sub
push
and
and
jl
inc
jle
push
or
cs
jne
mov
and
xchg
popa
mov
jmp
adc
inc
inc
icebp
push
movsl
fs
in
push
xchg
jg
sbb
mov
pop
adc
fs
in
je
inc
cmp
cmp
mov
les
mull
xchg
sub
xchg
pop
sarl
xlat
cli
hlt
fstps
arpl
out
test
loopne
test
fdivl
mov
jne
cltd
and
cmp
cwtl
in
ja
jmp
lea
cmpsb
es
sbbb
jne
cmp
inc
xor
xlat
es
negl
xor
push
jo
fcom
mov
out
rolb
xchg
xor
stos
mov
push
xchg
sbb
mov
jne
xorl
dec
xchg
xchg
or
xor
fisubs
mov
or
add
push
fadds
fistps
insb
das
not
mov
out
scas
sarl
mov
fs
out
rcll
fnsave
mov
xchg
repz
add
cld
aas
xchg
pop
push
pop
jg
imulb
dec
test
rorb
xor
xor
xchg
test
adc
ret
mov
sbb
dec
add
push
xorb
test
cmc
mulb
rclb
jl
xchg
and
add
in
gs
dec
push
sarl
lock
mov
enter
lret
outsl
xchg
cmp
adc
jge
and
jb
js
pop
mov
jl
cmp
das
ss
faddl
jle
mov
cmp
ljmp
das
xchg
mov
aam
pop
stos
cmp
fs
inc
adc
add
xlat
orl
add
es
dec
add
adc
in
xor
popa
ret
ret
inc
fstpl
popa
xor
movsl
cmc
jle
mov
sarb
stos
sbb
and
jno
loopnew
lret
push
cmp
jne
or
xor
mov
mov
or
bound
jg
ja
cmpsb
jno
test
mov
or
mov
pop
mov
mov
fcoml
orl
cmp
ss
sbb
push
adcb
or
push
into
fiaddl
mov
mov
xor
push
jecxz
mov
xor
data16
shll
fldenv
out
ljmp
xor
adc
pop
lods
mov
xor
inc
mov
imul
insl
in
cmpsl
icebp
aas
dec
pop
pop
cli
jno
push
sbb
arpl
dec
sbb
adc
mov
xchg
add
lcall
mov
push
or
xchg
push
mov
daa
adc
lds
orl
call
pop
pop
pop
ljmp
pop
shll
jne
hlt
sub
incl
testb
lahf
cmp
fisubl
call
mov
insb
add
popa
pop
in
jp
out
out
cmp
push
movsl
jge
mov
xor
push
or
shl
sub
lds
and
sub
cli
lods
inc
sar
push
pop
xchg
adc
scas
mov
jns
hlt
incb
xor
and
xor
jae
bound
repz
mov
push
je
cs
outsb
push
loope
push
xor
cmpl
cmc
jp
lods
aam
icebp
adc
loope
mov
mov
call
insl
or
lds
and
sub
pop
iret
loope
test
cwtl
jae
fisttpl
lods
fst
xor
lds
lods
xchg
mov
fmull
aas
cli
cmp
hlt
add
test
das
cltd
mov
mov
cmp
push
data16
mov
or
jmp
insl
mov
fisubl
jecxz
adc
stc
pop
mov
sahf
lret
dec
scas
daa
pop
adc
js
test
add
popa
in
xchg
ds
xor
add
movsl
xchg
insl
pop
pop
sub
xchg
mov
movsb
jge
jns
xchg
or
mov
push
pushl
scas
pop
in
and
push
mov
sub
insb
sbb
cmc
mov
pop
or
lds
test
add
push
outsb
imul
mov
push
xor
xor
xchg
mov
je
xor
or
inc
push
lods
idivl
mov
lods
sahf
mov
stc
in
dec
xor
cmp
test
adc
out
movsl
loopne
mov
inc
testl
jp
pop
inc
add
stc
pusha
cmpsl
daa
and
pop
scas
push
pop
pop
cli
movl
addb
lret
xchg
mov
add
mov
ret
sub
pop
flds
pop
pop
mov
or
clc
sub
sub
std
or
aaa
and
lahf
push
leave
and
cmp
or
inc
sub
mov
mov
sub
inc
adc
iret
jmp
mov
push
hlt
in
stos
inc
mov
mov
aad
push
stc
mov
fsubrp
ss
jp
dec
lahf
or
push
sahf
cwtl
dec
jnp
mov
add
xor
aaa
int
pop
jno
adc
cmp
int3
xor
mov
mov
dec
jno
jge
imul
fcoms
fildll
push
and
popf
inc
cmp
xchg
xchg
ficoms
mov
pusha
repz
pop
lods
sbb
jp
mov
jmp
fdivrs
or
sub
pop
call
popa
std
xor
push
dec
lea
pop
aad
dec
xchg
ficoml
outsb
sbb
clc
xor
mov
stc
jg
nop
negl
inc
imul
mov
xor
lcall
jno
outsl
rcrl
add
sub
and
push
gs
icebp
mov
sub
ret
jp
sub
mov
aas
xchg
lcall
fimull
xor
jmp
or
jl
dec
jno
jo
or
pop
das
loop
aas
mov
ret
inc
jne
xchg
xchg
mov
cs
push
or
or
inc
push
sub
scas
push
mov
sbb
scas
inc
movsl
out
or
pop
push
clc
outsl
push
pusha
fbld
aad
pop
inc
test
cwtl
or
inc
popa
mov
cld
sub
sub
decb
push
out
xchg
sbb
pop
cmpsl
in
cs
add
and
fnstsw
fwait
add
mov
sbb
sub
in
push
or
xor
fldt
sbb
ret
lods
dec
imul
rorb
push
in
outsb
fwait
add
jp
dec
imul
push
ret
mov
popa
test
sarl
jae
ret
sbb
cmc
or
or
inc
cmp
sub
aad
and
pusha
adcl
mov
xor
dec
push
and
in
je
mov
jne
sbb
pop
es
mov
adc
sub
aaa
movsb
mov
xor
xlat
pop
pop
pop
lods
sbb
in
andl
lods
mov
hlt
movsb
and
ljmp
push
cli
bound
xor
fwait
sub
add
dec
jge
pop
push
xchg
jle
cmp
daa
ret
aas
adc
push
inc
push
aad
and
add
inc
enter
xlat
sub
mov
or
out
pusha
cmp
fstpl
push
inc
and
popf
pop
or
loopne
or
sti
ja
jg
in
mov
outsl
push
adc
xchg
cmc
test
and
ret
adc
push
icebp
push
test
sub
sbb
push
jp
aaa
dec
in
or
inc
popa
xchg
sbb
xor
inc
mov
aas
dec
ja
out
dec
js
add
sbb
push
add
xlat
fs
sbbb
mov
fcmovbe
jno
fs
jg
xor
mov
pop
pop
adc
push
loopne
shlb
pop
push
push
out
add
lds
imul
xchg
cmp
ja
mov
stos
iret
mov
sbb
jnp
jo
lret
xor
test
add
rcr
fwait
test
fcomip
loope
sub
or
addl
jp
or
xchg
add
data16
add
dec
push
jecxz
mov
sbb
outsl
aas
and
leave
xor
ja
jecxz
stos
imul
add
and
arpl
inc
daa
push
das
inc
inc
sub
dec
sti
lcall
lods
dec
and
jne
xchg
iret
lahf
add
pushl
ret
xor
pop
mov
inc
in
adc
pop
sbb
test
sub
xchg
push
and
pop
jno
pop
orb
ret
daa
jp
insl
das
push
and
das
mov
in
loopne
adc
nop
xchg
jecxz
adc
lret
cmp
repz
xchg
aas
mov
sti
xlat
sbb
outsl
js
inc
in
adc
xlat
dec
xchg
jnp
ljmp
in
sbb
cmpsl
xchg
mov
xor
sti
popl
mov
inc
lret
insb
lea
pop
stc
popa
or
rolb
fwait
sub
mov
dec
xchg
scas
add
mov
arpl
pop
jl
cmpb
jnp
dec
jbe
or
mov
push
mov
cli
xor
cmp
mov
bnd
out
push
and
ret
ja
sbb
sub
mov
mov
jae
lret
pop
mov
mov
cld
xchg
in
testl
mov
adc
adc
and
or
jns
mov
jp
daa
lods
cltd
ss
add
add
dec
jecxz
and
lcall
imul
jl
xchg
push
mov
lahf
or
pop
stos
std
int
rcl
adc
xor
enter
sub
popf
dec
dec
lcall
fists
ret
push
push
xchg
or
dec
vminps
insb
xor
add
scas
int3
repnz
lsl
inc
imulb
leave
lea
push
cmc
adc
movsl
cmp
inc
sbb
out
fldenv
imul
inc
js
pop
inc
pop
lock
fwait
xor
stos
pop
mov
imul
jne
mov
pop
xchg
imul
nop
jo
cmp
aaa
nop
mov
push
popa
pop
sbb
or
xor
or
xchg
lods
subb
iret
test
push
scas
lahf
dec
lret
dec
pushf
mov
aam
and
xchg
pop
cmovo
loope
adc
fwait
popf
pop
outsl
mov
mov
add
inc
cmpsl
sbb
repnz
fmuls
push
add
xchg
xor
dec
push
pushf
jne
sbb
sbb
mov
sbb
enter
xchg
pop
push
outsl
and
test
js
xor
mov
cmp
je
rorb
call
dec
pushf
lcall
xor
xchg
sbb
lahf
test
lahf
adc
adc
lcall
inc
push
sbb
mov
popf
daa
enter
daa
mov
bound
popl
out
cmp
int3
xchg
mov
lds
bound
jb
movb
mov
sub
mov
and
popa
scas
sti
jns
es
jmp
jg
and
push
fcoms
mov
lock
jns
test
pop
mov
jae
sbb
aas
adc
clc
int
lea
lds
movsb
add
into
or
cmp
arpl
sbb
sub
push
or
pop
shl
jle
lods
loopne
dec
jmp
pop
and
dec
xor
sub
and
fst
stos
mov
ljmp
dec
inc
outsl
push
mov
push
xlat
jge
mov
and
arpl
mov
cmpb
out
stos
stc
mov
movsl
in
ljmp
imul
je
or
and
mov
sarb
cmp
jecxz
imul
adc
dec
adc
dec
push
dec
xchg
mov
mov
es
jnp
dec
inc
xor
gs
dec
push
push
pop
xor
and
or
pop
sub
ja
xchg
push
loopne
stos
push
dec
sbb
fs
cmp
addr16
cmp
cmpsb
loope
das
jbe
std
stos
lods
push
dec
andb
lcall
mov
out
dec
cmpsl
xor
stos
inc
pop
mov
or
pop
in
inc
adc
aad
dec
into
push
adc
into
loopne
or
mov
pushf
mov
jp
outsb
enter
in
pop
out
dec
mov
mov
vfmsubpd
inc
pop
in
jns
xlat
daa
mov
pop
dec
nop
inc
inc
test
adc
jbe
std
xchg
inc
mov
mov
cmc
mov
cltd
scas
roll
test
dec
sub
jo
cltd
bound
mov
and
xchg
inc
stc
pusha
pop
adc
adc
push
xchg
mov
icebp
jl
and
in
mov
iret
push
in
jne
inc
das
sub
imul
scas
cmp
les
movsl
cmp
das
or
scas
into
mov
lcall
loop
or
ficoms
cmp
mov
pusha
push
jne
sub
mov
jg
dec
adc
sub
fstpt
imul
out
cmp
addr16
jp
movsl
movsb
lcall
popf
mov
xor
addb
daa
decb
and
pop
out
daa
lcall
mov
sbb
jnp
loopne
es
sbb
pusha
pop
push
arpl
iret
sarb
int
pop
repz
cltd
jle
sbb
and
mov
pop
pop
mov
stc
in
and
and
push
mov
dec
popf
inc
mov
push
sub
mov
and
cs
jnp
push
lahf
into
aaa
push
lcall
ds
inc
cmp
xchg
jae
js
lods
dec
xor
and
js
adc
shlb
push
aas
push
out
jae
pop
jecxz
add
cmp
nop
dec
loope
push
inc
jmp
sub
add
adcl
or
test
sbb
out
push
imul
inc
popa
jl
sahf
insb
mov
xchg
movsb
sbb
jle
mulb
int
and
scas
xorl
imul
or
mov
js
jp
les
pop
xor
jo
or
lcall
bnd
inc
daa
pop
movsb
cmc
imul
stos
jmp
and
add
outsl
sub
jg
mov
and
push
stc
js,pn
cmp
insb
loope
aas
push
inc
cmc
daa
adc
add
push
pop
pop
and
pushf
out
jae
inc
shr
movsl
jb
sub
movsl
xor
xor
sub
call
leave
mov
imul
jl
ret
jbe
mov
jbe
mov
into
lods
fisubrs
flds
mov
movsl
gs
outsl
out
xor
aaa
lock
add
outsb
inc
addb
inc
adc
xchg
adc
fwait
push
push
push
cmp
ret
jnp
clc
add
outsl
pop
lods
cmp
add
pop
rorb
fstpl
movsb
jae
arpl
dec
xor
or
call
push
loopne,pn
jmp
adc
in
xchg
push
adc
jne
mov
jnp
aam
sbb
dec
xor
pop
xchg
mov
cmp
int3
cld
fnstenv
loopne
push
sbb
inc
ja
in
sbb
hlt
out
lods
push
push
inc
outsb
mov
cs
lods
fstps
mov
jne
mov
lds
or
sbb
push
jmp
call
or
es
pop
xchg
std
scas
mov
inc
aaa
mov
scas
fists
jb
jbe
pop
xchg
sub
outsb
jle
pop
jecxz
inc
sbb
jnp
ret
popa
mov
push
ss
stc
aaa
cmpl
jns
cmc
enter
and
and
daa
push
pmovmskb
dec
xchg
jge
test
xchg
div
enter
push
jne
bnd
xor
mov
lahf
pop
test
scas
movb
daa
cmp
imul
push
insl
fldl
jp
movsb
in
push
pop
or
pusha
cmp
cli
jg
enter
stc
cmp
xor
jns
add
loop
sbb
add
bound
xor
pop
xor
cmp
cli
xchg
inc
sbb
and
loop
addr16
ret
stos
jmp
fwait
outsb
adc
adc
cmp
aad
inc
inc
aaa
dec
lret
out
inc
and
loop
cmc
push
jae
mov
mov
sbb
adc
sub
fisttpll
test
jecxz
imul
outsb
adcl
ret
fwait
js
lret
fsubrs
mov
sub
sub
lcall
dec
sub
pop
xchg
add
shll
push
dec
adcb
push
icebp
mov
nop
jp
pop
mov
fmul
push
xchg
dec
dec
mov
clc
pop
repnz
shl
add
fsubl
lods
pushf
setb
rcr
pushf
xchg
mov
je
xlat
nop/reserved
xor
xchg
out
push
clc
fcmove
std
mov
mov
add
pop
into
fcomip
shrl
imul
push
add
pop
pop
outsb
in
inc
cmp
mov
inc
std
sbb
pop
les
and
pop
pop
dec
loop
xor
scas
test
or
call
icebp
sbb
aaa
insl
pusha
icebp
or
pop
int
or
aam
int3
xchg
popa
adc
and
addr16
cmpsb
cmp
mov
push
xchg
xchg
fwait
loopne
and
xchg
loopne
stos
cmpsb
aad
out
fdivrp
adc
lret
subb
sbb
sub
js
and
js
jns
adc
adcb
test
outsb
into
pop
cs
push
movsb
ffree
xor
jle
cmp
and
sub
outsl
cltd
lret
push
clc
pop
xor
das
sub
pop
pop
and
pop
add
sub
incl
xchg
xor
ror
sbb
insb
out
xchg
jge
outsl
push
mov
lcall
jne
adc
mov
push
outsb
jp
sbb
icebp
and
loop
add
dec
and
add
mov
sbb
ja
cmp
pop
jl
push
cmc
int3
xor
xchg
mov
cli
sbb
sbb
sbb
sbb
roll
cmp
cltd
or
mov
minps
inc
sub
ljmp
adc
push
sbb
sub
outsl
add
fldenv
adc
add
sbb
xchg
xchg
addl
push
test
loope
xor
fucomp
outsl
pop
mov
sub
shll
add
sub
push
je
leave
adc
cmp
pop
stos
add
adc
mov
and
dec
and
call
lds
cmc
out
pusha
ss
fwait
sbb
or
cmp
insl
push
loopne
mov
push
in
adc
clc
in
sbb
jmp
mov
out
xchg
xor
lods
and
into
or
sbb
push
dec
cli
lods
sahf
jecxz
dec
das
in
je
push
sbb
mov
call
rcrb
jl
dec
cli
orb
insb
pop
sbb
pop
aam
push
adc
sbb
mov
lods
call
sbb
add
test
adc
xchg
cmp
sub
int
test
mov
ds
hlt
xor
dec
jmp
ret
das
jg
add
jb
je
xor
sahf
add
shlb
and
std
mov
outsl
mov
jecxz
xor
xchg
stos
test
jp,pt
lods
jmp
lcall
lcall
scas
sub
jp
mov
test
cmpsl
jl
sti
mov
jnp
mov
iret
sbb
fldt
xchg
cmpsb
fdivs
sub
inc
mov
movsb
sub
or
and
cmp
js
sbb
call
sbb
or
outsb
mov
ret
dec
popf
rclb
push
imul
push
jmp
mov
jle
cmpsl
fbstp
inc
aaa
cmpsb
fdiv
scas
mov
mov
xor
mov
inc
movsl
cs
aaa
mov
in
daa
mov
xlat
jle
add
imul
push
lea
push
push
flds
sub
les
cli
cmp
pop
jl
enter
cmpsb
pop
mov
fildll
inc
inc
ficomps
xor
mov
push
dec
sub
pop
inc
adc
push
into
shll
cmp
jge
mov
out
sbb
adc
jae
fdiv
inc
ret
add
or
dec
lret
je
lret
jl
pop
adc
jmp
cmp
jae
pusha
cs
not
inc
dec
push
fbld
imul
mov
popa
je
inc
mov
sub
pop
shll
jnp
daa
iret
das
popa
jge
add
jbe
lock
xlat
jge
das
ficoml
push
mov
mov
mov
sar
shl
cltd
gs
js
inc
push
add
lds
dec
fidivrs
cld
xchg
cmpsb
lahf
adc
fwait
ljmp
lds
cmp
pusha
mov
dec
es
rorl
cmp
mov
mov
popl
int
or
jne
inc
xchg
sbb
fldenv
movsb
int
in
js
pop
das
mov
jp
xchg
push
and
outsb
pop
fstl
dec
ret
sbb
negl
imul
js
fadds
and
cmp
xlat
add
sbb
mov
mov
xor
mov
sub
cwtl
sti
xor
fistl
fadds
sub
rorl
ret
faddp
mov
outsl
cwtl
and
jne
sarb
fsubs
pop
inc
lock
jbe
pop
lods
adc
pop
cmp
mov
add
rclb
pop
lds
cmp
lret
jnp
jmp
shll
mov
mov
pop
cmp
jno
fwait
out
clc
add
loope
add
add
push
mov
dec
repnz
pop
mov
adc
xor
hlt
xor
loope
xchg
lret
jmp
jmp
lret
push
mov
cmp
lods
test
dec
ret
and
in
dec
push
mov
dec
pop
pop
ret
pop
cmp
push
pushf
xor
mov
data16
lea
pop
push
xor
aaa
in
fsubl
or
cmp
testl
mov
leave
shrl
jo
inc
sub
outsb
filds
popa
lods
pop
popf
gs
aas
lret
pop
outsb
dec
add
add
inc
lods
sti
pop
xchg
movl
mov
adc
adc
fiaddl
push
insl
and
add
scas
sahf
ret
dec
ror
fldl
ret
test
push
xchg
negl
jae
aad
mov
outsb
mov
xchg
push
jle
dec
icebp
xor
or
notb
push
das
push
jmp
test
out
stc
xchg
aad
imul
cmp
inc
mov
cmp
leave
sahf
loopne
clc
insl
test
in
add
mov
mov
mov
jno
jae
and
cmp
xchg
pop
ret
das
xchg
inc
pop
arpl
pop
xor
lret
adc
mov
add
pop
cmp
stos
sbb
mov
sahf
imul
aam
test
ljmp
pop
jae
adc
pop
inc
pop
push
mov
inc
insl
sbb
shlb
dec
into
adc
shlb
aaa
adc
add
jnp
cmp
movsb
push
in
add
push
sbb
mov
sbb
dec
rcll
sub
bswap
insb
or
rolb
ja
or
sarb
inc
in
or
sbb
dec
mov
push
dec
ret
mov
icebp
push
cmpsb
shlb
sbb
adc
test
imulb
call
gs
and
and
in
push
int3
sar
jmp
mov
jmp
or
adc
and
jmp
jg
inc
leave
jl
sbb
out
test
leave
test
sbb
aam
cmp
adc
sub
mov
insl
push
mov
js
imul
jge
inc
fnstenv
cmpsb
or
mov
out
aas
and
push
mov
out
icebp
dec
adc
dec
cltd
and
shrb
dec
xchg
aad
mov
test
jecxz
out
xchg
inc
popf
ret
sti
ja
ljmp
xchg
and
sub
and
or
xor
loop
hlt
push
sbb
test
gs
mov
push
mov
cs
push
repz
imul
sub
insl
cmp
sbb
add
movsl
mul
rcll
addb
inc
lods
rorb
push
cs
xor
add
inc
inc
pop
xchg
push
mov
and
push
hlt
add
insl
mov
in
inc
lret
shlb
xchg
mov
dec
dec
ficomps
ljmp
lods
adcb
bound
lret
test
enter
fisttpll
es
dec
mov
std
jle
imul
dec
shlb
adc
mov
rorl
aad
daa
ljmp
cmp
or
rcrb
lods
test
dec
jo
and
rcrl
in
push
jl
jp
mov
dec
push
sbb
pop
outsb
cmp
mov
sbb
pop
inc
rcrl
fistl
jb
sub
lods
mov
jns
fld
in
jmp
mov
or
pop
pop
mov
mov
sbb
jae
fcomps
cmp
lds
and
pop
inc
add
test
addb
xchg
pop
repz
dec
imul
es
dec
cmp
jnp
iret
mov
addr16
pop
cmp
mov
and
sbbb
jmp
jmp
out
mov
xor
clc
adc
lahf
jns
negb
pop
adc
pushf
cmp
add
adc
add
outsb
cmc
dec
dec
stos
aam
inc
adcl
sbb
in
cmp
dec
movsl
adc
mov
push
in
mov
mov
mov
jle
mov
cmp
mov
push
faddl
ret
jecxz
or
xchg
stc
xor
adcb
pop
out
ret
inc
out
jmp
lret
xor
sub
je
add
fisttps
xor
add
dec
fadds
subl
test
sub
lahf
pusha
fcomps
negl
je
fcomps
fbld
popa
shrb
lods
daa
pop
rcrb
cmp
or
lahf
aas
or
cmp
scas
lock
pop
decl
into
daa
and
mov
arpl
inc
jg
mov
mov
andl
out
xor
jmp
cmp
jno
sbb
js
test
das
cmp
lret
fcmovb
in
xchg
int
mov
jp
mov
mov
or
xchg
or
bswap
cmpsl
aaa
scas
dec
pop
xchg
fldl
les
cli
mov
in
jnp
leave
cmp
xor
inc
mov
mov
lret
sub
mov
inc
cmp
xlat
inc
nop
lock
mov
dec
imul
mov
inc
fisttpl
mov
sbb
adc
mov
push
ficomps
and
shll
sbb
popf
lods
ja
adc
shll
jbe
xor
sbb
inc
push
std
loopne
fwait
push
xor
cmp
xor
mov
mov
iret
xor
lret
faddp
loope
inc
or
and
gs
out
das
xor
lods
push
sbb
or
push
push
dec
mov
pop
scas
jns
cmc
imul
mov
ret
xchg
sarb
inc
mov
ror
ljmp
lret
and
cmp
mov
lret
shll
jo
lret
sarb
dec
jl
out
test
and
jge
das
adc
pushf
cvttps2pi
out
add
push
lock
stos
or
lock
inc
test
pop
add
dec
jb
ret
push
rorl
lahf
dec
xchg
and
sahf
xchg
xchg
xor
ret
out
enter
in
sub
pop
fnstenv
insl
popa
aam
pusha
popa
dec
cmp
enter
loope
sbb
fbstp
or
pop
popa
movsb
jle
xor
scas
add
inc
and
sbb
mov
push
iret
sarl
or
or
test
xchg
sbb
mov
pop
cmp
ljmp
sbb
cmp
cmp
fwait
imul
sarl
sub
rclb
out
push
fs
sbb
mov
and
movsb
lret
sbb
jae
leave
pop
int3
xchg
in
xor
bound
test
gs
jbe
mov
test
sbb
pop
mov
xor
xlat
sub
dec
dec
cmpsb
pop
and
shlb
mov
aaa
rcll
xchg
movsw
pop
imul
xchg
push
mov
jp
test
hlt
xchg
pop
subb
loop
push
inc
jmp
mov
xchg
dec
mov
xchg
insl
xchg
xchg
push
push
repz
ljmp
sub
push
xchg
pop
xchg
jbe
inc
lret
inc
push
xchg
aaa
ja,pn
ficoms
fisubl
hlt
pop
in
cli
movsl
xor
lods
sbb
scas
xchg
hlt
pop
mov
outsl
fsubrs
sbb
mov
popa
dec
jbe
gs
jns
stos
jmp
push
negl
mov
cmp
ljmp
test
fnstcw
scas
je
and
ret
out
lds
mov
and
fcmovne
xor
mov
je
mov
sub
out
push
add
out
das
cmc
pop
lds
aaa
xor
adcb
or
fildl
inc
add
ja
push
push
ss
add
outsb
fmuls
mov
jmp
scas
imul
das
add
sub
cmp
pop
mov
es
pop
loopne
fcoml
xchg
es
mov
fwait
push
push
pop
add
cmp
mov
jg
pop
scas
mov
push
testl
in
nop
sbb
xchg
or
fs
xchg
outsb
dec
fmull
out
test
and
js
inc
inc
or
inc
test
mov
popf
int3
jle
xchg
stos
jp
push
int3
addr16
aad
add
pop
mov
out
test
mov
and
mov
pushf
popf
bound
lahf
pop
rcrl
aam
sbb
test
call
js
xchg
insl
insl
enter
mov
scas
jbe
shl
push
add
add
in
test
sbb
std
xor
fldenv
cs
pop
jae
xor
fs
cmp
lock
xor
inc
lock
addb
or
jnp
add
ret
mov
inc
or
mov
xchg
sahf
xchg
and
pushf
test
sahf
stc
movsb
bound
in
xor
and
pusha
nop
xor
mov
pop
jb
arpl
aam
xorl
sub
add
mov
dec
jge
or
xchg
jb
mov
mov
pop
inc
setl
mov
push
popf
stos
mov
or
out
lcall
mov
pop
push
loop
lea
in
hlt
das
mov
lea
lods
and
sti
push
fsubrl
loopne
int
imul
pop
mov
cmp
insl
push
lock
ja
cmp
mov
mov
enter
jno
clc
out
filds
pop
mov
int
sub
int3
push
mov
and
sbb
cltd
mov
lret
jg
jae
sub
add
pop
and
lods
lods
cltd
xchg
mov
cmp
mov
cmpsl
inc
fwait
add
dec
mov
lock
bound
cli
loopne
mov
leave
jmp
mov
inc
popa
popa
lods
mov
or
fmuls
xchg
push
mov
ljmp
cmp
inc
in
fistl
fsub
and
sbb
jle
shlb
shl
stc
arpl
xlat
iret
mov
mov
mov
out
jnp
int
cli
les
popa
jnp
fdivs
outsl
sbb
push
leave
jno
cmp
out
or
push
dec
faddp
dec
dec
sarb
lret
sub
sti
and
sub
imul
es
and
pushf
inc
decl
cmpsl
into
mov
icebp
or
fwait
push
and
repz
dec
fsubrl
lea
repz
jge
mov
xchg
lock
imul
xor
jle
jp
pusha
mov
and
push
mov
dec
ds
jg
stos
mov
into
clc
shlb
ja
add
inc
pushf
jae
call
enter
aas
pusha
addr16
addr16
xor
add
add
outsl
mov
pop
xor
sahf
cmpsb
loop
imul
inc
aam
lds
fadd
cltd
fdiv
push
mov
mov
and
pop
dec
pop
jmp
idivl
rcr
scas
push
inc
aas
fdiv
int3
mov
jne
jmp
sub
xor
push
das
shl
mov
pop
add
andb
mov
icebp
repnz
ja
sub
out
add
jns
sahf
repnz
or
pop
mov
sti
mov
je
cltd
cmp
pop
xchg
mov
adc
mov
lret
sbb
and
insb
xor
mov
lret
sub
cld
jne
lea
rol
fiadds
outsb
fmulp
loopne
fistps
push
mov
xchg
xor
mov
xor
mov
fwait
sbb
xchg
xorb
push
js
imul
movntps
ret
inc
dec
and
sub
mov
xor
mov
fimull
dec
xchg
mov
jl
push
pop
adc
sub
outsl
sub
sub
cmpsl
orl
outsb
iret
or
jno
mov
imul
jp
aas
lods
inc
scas
adc
fistps
and
mov
pusha
dec
mov
lahf
ficoml
jp
pop
add
sbb
pop
stos
mov
and
addr16
js
dec
enter
jne
fisubrs
inc
dec
scas
popa
adc
sbb
iret
jl
sub
outsb
outsl
push
mov
cli
pop
cmc
mov
roll
jbe
or
inc
decl
ja
outsl
jmp
jns
mov
and
dec
scas
xchg
pusha
into
mov
mov
jmp
mov
ret
divb
orb
mov
mov
fcmovu
mov
test
and
in
jge
rclb
and
fists
jbe
xchg
je
push
pop
dec
pop
test
push
mov
or
addr16
sub
mov
xor
and
pop
jl
dec
lret
xor
xor
rcll
lret
ficomps
and
shlb
xor
mov
rcll
xor
add
icebp
repnz
push
scas
adc
movsb
loopne
aaa
cmc
add
or
mov
in
test
popa
test
cmp
pop
imul
cmp
mov
push
sbb
jb
adc
mov
shl
out
xchg
adc
stc
push
movsl
test
test
push
sti
jg
iret
jne
jno
add
outsl
inc
and
cmpsb
or
sub
rcrb
movsb
xchg
je
outsb
movsb
std
rcrl
cli
xor
sti
xlat
aad
mov
inc
repnz
lods
je
xchg
fidivrs
faddl
xchg
lock
iret
ds
pop
popa
push
push
xor
cmc
jb
cld
jae
fwait
xchg
dec
jo
cmp
sbb
adc
cwtl
or
sub
fs
push
jl
je
xor
lods
dec
shlb
jne
repnz
adc
add
rorb
xor
test
rorb
sbb
push
nop
adc
push
pop
inc
push
pushf
sbb
push
xor
adc
test
cwtl
xor
xchg
xor
mov
das
lahf
dec
loopne
scas
scas
int3
lcall
leave
jge
sbb
xlat
bound
icebp
sub
test
sahf
test
ret
and
frstor
shlb
stos
sub
cmp
ret
or
call
push
mov
jnp
mov
ret
sti
cmp
loopne
pop
cmp
add
clc
imul
xor
xchg
outsl
mov
jmp
mov
aas
adcb
sub
cltd
cmp
cmovg
test
jle
dec
out
xchg
mov
subb
into
dec
inc
aaa
adc
sbb
xchg
repnz
mov
jp
xor
jbe
pop
lds
jb
add
out
or
imul
test
arpl
xlat
fildll
icebp
rorl
rcr
dec
notl
testl
sub
out
mov
lods
pop
sub
sarb
inc
fdivl
push
sub
repnz
mov
lods
ficomps
sbb
lret
or
nop
out
pop
mov
loope
add
jae
stos
sub
test
adc
mov
pop
jo
les
xchg
xchg
jbe
aad
jno
jecxz
repnz
ret
sbb
push
dec
adc
cs
jns
scas
andb
in
mov
int3
dec
sbb
push
push
add
cmp
xlat
jge
jge
push
addr16
and
stc
xor
jp
xchg
bound
xor
mulb
dec
or
jmp
daa
aaa
in
push
test
and
imull
pushf
cmc
insl
imul
and
mov
dec
xchg
sub
push
popf
pop
addb
adc
clc
sbb
into
test
push
out
fcmovu
sub
add
cmpsb
in
jle
dec
rorb
mov
in
xor
rcll
fwait
inc
mov
cmp
push
rcrl
cwtl
push
mov
dec
loope
push
lret
dec
loopne
jo
dec
sbb
jo
inc
jo
lds
lret
fimuls
divb
xchg
adc
or
mov
popa
fistps
lret
ret
fildll
stos
ffreep
stos
xchg
mov
mov
ret
push
mov
pop
fimull
jg
xchg
popa
shrl
popf
cwtl
push
mov
adc
xchg
pop
xor
insb
jne
lea
xchg
inc
fisubrs
and
xchg
clc
hlt
xor
xchg
std
mov
cmpsb
mov
cs
mov
push
and
stos
mov
in
lret
rcll
mov
cmp
nop
cwtl
mulb
xchg
testb
push
mov
inc
pop
repz
notb
roll
and
orl
imul
mov
cmp
inc
inc
in
popa
push
shl
popa
dec
pop
insb
xchg
jg
fnsave
rorl
enter
aas
cmpsb
inc
pop
sub
test
jb
lret
repnz
sub
popa
lods
jbe
imul
mov
es
insb
rcll
jb
adc
xchg
fisttpl
jns
xchg
mov
test
stos
xchg
sub
pop
xchg
sbb
mov
sub
xor
fwait
dec
mov
mov
cmpsl
cmp
clc
pop
in
jmp
push
inc
int3
call
cmp
mov
dec
into
rorb
fidivrl
lods
inc
adcl
in
or
pop
cld
xchg
mov
arpl
lods
rcrb
pop
orl
out
iret
movsb
lea
aad
mov
into
pushf
pop
adc
pop
inc
cmp
dec
int
mov
stos
dec
xor
sub
pop
movsb
lahf
mov
pop
sbb
jae
pop
repnz
pop
movsl
out
sub
dec
cmp
aam
cmp
mov
add
cmp
std
inc
int
hlt
push
and
jne
leave
out
cmp
std
gs
pop
sarb
cmp
mov
push
bound
idiv
cmp
xlat
arpl
lret
adc
sub
pop
xlat
fcmovnb
iret
jo
nop
lahf
jo
or
aaa
leave
mov
jg
mov
jle
or
sbb
xchg
cmp
jp
decl
mov
rcrl
add
dec
cmpsb
push
dec
add
push
jno
aam
aaa
mov
lret
dec
xchg
sbb
addr16
in
sbb
out
and
or
mov
cmp
push
es
xor
pop
push
and
rorl
fs
sub
mov
popa
add
mov
pop
pusha
xchg
imul
arpl
mov
into
fldcw
push
sahf
push
mov
cmp
mov
mov
pop
or
lcall
lea
mov
das
push
mov
mov
sub
leave
jmp
nop
sub
insb
mov
dec
pop
pop
and
adc
loopne
movsb
lods
jmp
sub
pop
into
jo
cmp
jno
jne
add
fsubl
dec
adc
notl
fadds
pushf
sbb
mov
cltd
cmpsl
nop
or
stos
int3
stos
dec
je
mov
push
pop
cmp
stos
pop
push
hlt
insb
mov
or
mov
ret
sbb
jae
jae
dec
xlat
xor
sti
jmp
sbb
jb
xchg
aam
fistl
mov
rcrb
cmp
add
mov
loope
divl
mov
cli
xor
inc
clc
cmpsl
lret
in
mov
sub
bound
imul
dec
push
cs
mov
mov
in
or
lds
imul
jnp
adc
popf
rorb
out
hlt
sub
or
mov
and
aaa
cld
push
faddl
or
stos
test
out
pop
mov
pusha
aam
push
pop
fisttpll
pop
mov
mov
loop
xchg
jle
scas
add
mov
int
cmpsl
jge
sbb
or
loopne
and
fisttpl
dec
lahf
lahf
fninit
push
js
inc
adc
into
jns
push
mov
mov
push
mov
push
div
adc
insl
xor
push
mov
pop
testb
and
lret
push
cli
jg
mov
loopne
sbb
push
xor
ljmp
imul
xlat
das
cli
dec
stos
lods
xchg
push
sbb
jge
pushaw
stc
es
cwtl
shr
in
pop
outsb
or
stos
pop
mov
pop
xchg
cmpsb
test
inc
push
xchg
aas
push
pop
jbe
enter
iret
jae
xchg
mov
bound
xchg
andb
mov
mov
mov
xorb
hlt
cmpsb
pop
stos
fldcw
addr16
test
pop
push
adc
push
inc
xchg
dec
enter
aas
rolb
and
mov
std
jns
add
fstpt
inc
pop
outsb
xchg
push
jb
cmc
inc
arpl
loope
ljmp
or
mov
outsb
mov
faddl
jle
mov
sub
cwtl
lods
jae
test
fiaddl
mov
push
mov
test
xchg
dec
push
loopne
es
scas
add
hlt
mov
sub
pop
test
cmp
jnp
jo
add
pop
pop
ret
dec
ret
es
test
add
jle
xor
cmpsb
sub
dec
jp
add
popl
dec
pop
stc
dec
mov
gs
jo
ss
sbb
scas
lahf
dec
add
repz
pop
dec
not
push
push
push
lds
cli
cmc
enter
sahf
rcrl
cmc
push
dec
push
fdivrs
pop
lock
scas
sbb
sbb
rcrl
insb
data16
xor
mov
leave
out
adc
ret
jnp
dec
jp
iret
in
loopne
out
sbb
inc
dec
scas
and
add
in
and
aas
xchg
pop
adc
add
pusha
ss
mov
jae
xor
pop
clc
sbb
sbbl
xor
mov
dec
mov
mov
jo
movsl
dec
inc
testl
fnstcw
ds
aas
or
rol
decb
pop
or
ja
mov
pop
mov
frstor
and
jo
movsl
push
repz
sub
cmp
add
add
mov
pop
loopne
lahf
lock
loop
fildll
jb
ret
inc
xchg
mov
mov
dec
add
stc
xor
sub
adc
scas
sub
fldcw
fwait
movsl
lods
jl
pusha
dec
xor
dec
pop
in
lret
pop
push
mov
mov
cmp
push
cmp
jmp
push
dec
fistl
adc
ret
pop
mov
sbb
ljmp
dec
dec
push
out
adc
xchg
repnz
mov
mov
add
sbb
pop
popf
mov
mov
mov
cmp
scas
mov
push
sbb
or
mov
out
leave
jmp
nop
mov
sub
adc
sbb
out
or
sub
andb
sbb
popf
repz
xchg
cmp
pop
push
out
bnd
mov
outsb
fs
fcoms
and
mov
movsl
or
fmulp
test
xor
sub
mov
lahf
sbb
or
lea
pusha
dec
sahf
mov
shl
bound
stos
inc
rorb
test
je
cmp
mov
in
repz
jnp
in
inc
mov
xor
mov
sub
lods
push
sbb
out
cmp
jno
subb
test
popa
xor
out
sahf
push
and
ret
enter
aas
insb
pop
add
push
lock
adc
stc
cmpsb
ljmp
hlt
or
mov
add
mov
sti
fdivrs
das
popa
and
pop
gs
xor
shll
push
sbb
in
mov
hlt
inc
shll
mov
sub
jg
adcl
cld
scas
insb
mov
cmp
in
mov
sub
adc
adc
xchg
mov
push
icebp
movlps
mov
sub
sub
and
loope
test
cmp
jl
mov
sbb
sar
popa
roll
jg
shl
or
daa
iret
into
pop
adc
aad
sub
or
test
push
ret
mov
jbe
add
in
imul
pop
aam
std
das
jb
out
cli
in
lret
fldcw
lret
dec
jns
dec
jp
dec
cmp
and
xchg
bnd
aad
push
out
and
stc
xchg
pop
jp
cld
mov
or
testl
std
ds
sub
dec
mov
out
pop
mov
xchg
addl
xchg
xchg
inc
test
sub
test
cmp
adc
into
pop
inc
loopne
int3
jb
jae
jle
jge
sub
add
jge
arpl
and
or
gs
es
push
cs
fdivrs
add
add
fsubrs
in
and
mov
xchg
hlt
rcrb
and
mov
xchg
rclb
push
imul
sti
dec
jge
sub
lea
aaa
mov
cmpsb
out
test
shlb
rolb
lcall
inc
mov
and
jnp
cmp
mov
dec
out
ret
mov
cltd
enter
lods
mov
jl
mov
and
arpl
xor
mov
mov
out
aad
or
into
cli
mov
aam
and
mov
cmpsb
mov
dec
mov
inc
xlat
push
mov
xchg
lcall
fstl
jg
dec
lock
jnp
adc
jae
pop
outsb
imul
test
dec
add
stos
movsl
rcl
push
jae
ljmp
ja
movl
xchg
push
cltd
xchg
hlt
andb
orl
lods
jp
lret
dec
sbb
cmc
imul
dec
insl
in
mov
gs
hlt
sbb
cltd
pop
es
lock
or
insb
mov
cmp
pop
sbb
call
data16
cwtl
sti
sbb
jne
out
loop
wbinvd
or
shrl
mov
mov
in
addl
cmpsl
adc
lahf
inc
mov
sbb
out
movsl
fs
xchg
push
xor
add
push
jne
lahf
push
mov
pop
pop
xchg
xor
stos
sub
jns
out
movsl
xchg
mov
les
dec
mov
iret
out
push
icebp
and
pop
jl
aaa
je
or
mov
mov
movsl
jns
add
xchg
or
cli
xchg
pop
insb
dec
xor
sub
sub
cmp
add
jnp
mov
pushf
sbb
pop
pop
popa
mov
dec
sahf
push
xorl
and
lods
mov
nop
popa
sub
mov
jp
mov
adcl
lcall
xchg
or
pop
loopne
adc
enter
clc
insb
daa
hlt
sub
or
loope
or
out
lods
and
test
cmp
pop
xor
fsubrs
mov
subb
pop
test
daa
lcall
and
scas
repnz
push
mov
outsl
mov
sbb
imul
jmp
sbbb
or
add
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
add
mov
movl
add
cmp
movl
je
mov
movl
jmp
mov
mov
cmp
movl
jne
movl
push
jmp
mov
mov
cmp
movl
jne
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
mov
or
xor
and
add
andl
xor
add
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
xor
or
mov
mov
mov
mov
xor
add
movl
imul
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
jmp
pusha
sub
repz
xchg
cli
adc
je
mulb
xchg
add
jl
and
adc
xor
movsb
je
je
addr16
push
dec
pushf
mov
ljmp
mov
jne
xchg
outsb
test
in
idiv
pop
sti
insb
in
fs
repnz
jmp
test
aas
pop
cmp
jp
decb
lods
add
mov
testl
inc
xor
scas
cmp
mov
and
xchg
ret
pop
adc
xchg
rcrl
das
xchg
push
ljmp
pop
xor
test
jmp
dec
mov
test
stos
scas
sbb
shl
testb
adc
stos
jns
jp
push
sbb
fs
xchg
sub
sub
or
test
addb
das
add
push
fs
inc
pushf
and
xchg
std
ret
jne
mov
fstl
pop
pop
xor
push
nop
jl
pop
push
fcmovbe
xor
xor
andb
mov
cmpl
xor
adc
hlt
sub
int3
or
mov
ret
xchg
iret
jnp
ja
in
pop
dec
repnz
out
imul
test
cmp
jl
imull
or
stc
mov
sbb
pop
loop
push
xchg
pop
or
cmp
and
dec
inc
fisttpl
xorb
cmp
rorb
and
lods
dec
test
in
jle
iret
sbb
lods
jne
push
cmp
dec
inc
imul
pop
jae
push
in
mov
mov
jnp
fsub
mov
lods
mov
je
push
outsb
pop
jns
mov
cmpsb
add
stos
ss
jo
les
dec
pop
pop
and
lret
jne
jbe
repnz
repnz
add
imul
xchg
sbb
mov
stos
xorb
and
dec
push
add
rorb
push
pop
push
sahf
fdivrl
xor
loopne,pn
je
daa
adc
imull
push
in
mov
je
xchg
inc
or
inc
push
leave
je
xchg
jmp
hlt
pop
xor
jge
cmpsb
bound
imul
jecxz
push
cs
adc
out
and
stos
imul
jns
add
sarb
push
hlt
fwait
rcrl
es
loopne
adc
pop
das
in
loope
cmp
sbb
add
hlt
fbstp
in
jno
call
jmp
xchg
or
aam
mov
fdiv
jg
loope
mov
mov
add
gs
mov
jnp
repz
cli
into
jmp
test
inc
jnp
clc
aam
ljmp
sbb
es
stos
icebp
mov
sbb
imul
inc
fwait
inc
and
std
jb
int
xchg
inc
bound
push
dec
adc
stos
inc
or
out
dec
out
mov
mov
aam
pop
push
pop
scas
or
mov
jb
mov
xlat
inc
mov
leave
lret
sub
pop
imul
subb
jnp
xor
and
mov
or
jne
jmp
sbb
push
sub
sarl
in
leave
repz
xchg
movsl
cwtl
sysret
xchg
sub
addl
mov
add
sub
negb
hlt
push
andb
fs
popf
sbb
dec
push
adc
mov
push
jbe
repz
xchg
rcr
out
in
jae
out
jge
xor
das
fistpl
dec
mov
jb
cmc
mov
notb
outsl
sub
data16
mov
add
clc
insl
mov
jg
pop
sub
mov
dec
and
adc
add
cwtl
cmp
pop
scas
jns
pop
push
imul
push
cltd
fnstenv
dec
lds
cs
jle
mov
inc
sub
mov
cmc
test
mov
inc
pop
loop
outsb
pop
scas
and
mov
sub
in
insb
adc
pop
or
stc
lcall
inc
shll
pop
daa
hlt
rolb
test
pop
xchg
pop
sub
xchg
push
iret
aad
rcrb
movsb
push
pop
add
icebp
or
out
cmp
cmp
push
pushf
insl
adc
lds
iret
lahf
push
pop
push
sarb
movsb
sbb
inc
mov
add
sbb
gs
inc
inc
cmc
xor
add
nop
xchg
xor
add
ja
cwtl
sbb
sub
mov
out
sahf
push
popa
jle
adc
jne
bound
into
or
cwtl
mull
test
mov
test
aas
pushf
mov
pop
push
push
imulb
mov
dec
sub
outsb
cmp
scas
sub
jp
mov
mov
xor
jnp
out
insb
sub
mov
lcall
adc
nop
std
cmp
mov
mov
pop
push
ss
inc
clc
dec
push
loopne
iret
xchg
mov
fistl
dec
hlt
push
mov
mov
sub
push
jo
test
lret
adc
dec
sbb
movsl
mov
and
shr
mov
frstor
push
jb
test
sub
loop
inc
adc
lcall
je,pt
or
mov
mov
ret
mov
or
data16
clc
add
stos
lahf
xchg
pop
dec
sbb
popa
int3
call
scas
push
fidivs
mov
jnp
jg
sbb
xchg
xlat
shlb
cmpsl
ds
inc
in
je
das
or
add
inc
dec
lahf
iret
gs
push
movsl
movsl
fwait
cmp
insl
mov
jns
and
xor
add
rorl
mov
sub
push
in
das
das
cmc
add
mov
xor
in
cmp
sub
xchg
icebp
xlat
add
ret
mov
in
rol
xchg
mov
mov
pop
jecxz
das
mov
dec
jo
push
es
push
push
and
jns
imul
jbe
inc
and
ds
sbb
pop
outsb
add
ds
sbb
mov
sbb
cmp
pop
cs
imull
icebp
cmp
fs
cmp
out
aam
xchg
xlat
in
and
ficomps
sar
movl
imul
std
adc
pop
dec
mov
push
xchg
and
in
js
stc
mov
xchg
xor
cltd
xlat
loop
mov
jle
ret
shrl
inc
outsl
cmp
sbb
pusha
add
pop
inc
divb
xchg
mov
push
mov
sub
jecxz
std
icebp
das
sub
push
jae
nop
leave
add
test
adc
mov
xlat
dec
in
lds
or
cmp
pop
add
and
out
xorl
out
adc
mov
pop
fidivrl
sbb
sti
pusha
jnp
int
pop
stc
sti
lds
out
dec
mov
jae
xor
dec
mov
shl
mov
out
sbb
push
stos
rolb
ret
int3
nop
out
xchg
mov
push
cwtl
mov
shr
outsb
or
ljmp
or
iret
inc
dec
dec
mov
fistpl
insl
fiaddl
jae
scas
loope
jecxz
mov
xchg
push
test
das
pop
or
jge
pop
dec
hlt
or
jmp
sarl
and
sbbb
aas
iret
imull
cli
mov
push
sbb
ret
pop
xor
jg
rcrb
lods
cmp
mov
repnz
mov
std
mov
cmpsb
mov
cmp
jne
dec
sub
inc
out
lods
pusha
fildl
pop
lret
xor
dec
cli
or
sbb
push
push
mov
cwtl
push
in
jge
test
ret
and
mov
mov
stos
mov
xor
stos
test
sub
fs
mov
cli
or
addr16
push
into
adc
jmp
sbb
lea
inc
popa
pop
dec
mov
cmpsl
inc
push
add
or
and
imul
dec
xchg
xlat
mov
stos
outsb
mov
outsb
fs
sbb
cmpsl
mov
xor
or
in
in
jg
test
in
sbb
out
mov
push
arpl
mov
xchg
jne
test
mov
cmc
insb
arpl
add
mov
insb
pop
add
adcl
mov
inc
jg
sbb
daa
shll
popf
adc
sbb
sarb
jmp
adc
in
or
out
or
andl
imul
xchg
int
shll
test
test
test
out
push
mov
lret
mov
sbb
dec
add
bound
mov
or
pusha
or
cmpl
cld
repz
rcrb
les
sub
mov
ss
shll
xchg
stc
xor
stc
lahf
aaa
insb
test
call
ret
mov
jne
and
jg
mov
inc
movsb
dec
mov
pop
inc
dec
dec
pop
cmovo
test
sbb
xor
push
daa
inc
pop
jno
push
cmpsl
xchg
or
pusha
push
inc
ret
ljmp
sahf
jmp
xor
mov
cmpsb
mov
dec
repz
sbb
sbb
lcall
xchg
arpl
sti
imul
ja
pop
mov
aam
lahf
fistl
test
pop
mov
adc
shrb
call
shrb
dec
dec
cmp
adc
insb
aas
fcmovnbe
mov
ret
and
sbb
cmp
bound
xor
push
jns
dec
lds
nop
xchg
or
cmpsl
add
and
cmpsl
movsb
pop
dec
dec
mov
push
adc
dec
inc
mov
insl
mov
int
fisttpll
mov
mov
xor
xchg
jmp
int
xchg
jne
pop
mov
xor
iret
aad
or
testl
mov
mov
jb
xor
out
jne
pop
cmp
arpl
jmp
aaa
das
jae
loop
sbb
dec
jle
je
ret
mov
push
sbbl
aad
clc
adc
push
scas
in
xlat
scas
cwtl
pushf
pop
xor
mov
rorl
mov
stos
std
in
push
sbb
scas
dec
insb
loopne
loopne
cmp
popa
lock
fidivs
mov
push
fstpl
and
push
sub
fmull
dec
cs
jl
add
insb
mov
movsb
cltd
mov
lods
inc
mov
int
inc
dec
jb,pn
popa
dec
scas
hlt
push
roll
inc
outsb
sub
int3
movsl
mov
mov
push
in
push
cld
inc
mov
push
out
std
push
aaa
sbb
push
jne
and
lret
sbb
cwtl
or
pop
dec
adc
popf
icebp
push
call
jle
mov
inc
xor
xor
fisttpl
gs
push
test
outsb
push
outsl
pop
rcrb
pop
inc
xor
and
outsb
jecxz
ret
test
rorl
paddd
xchg
sar
adc
dec
push
add
into
mov
cmpsl
dec
es
sbb
mov
stc
inc
pop
sub
xchg
mov
test
add
dec
imul
sti
imull
lret
inc
stos
mov
cs
mov
xor
repz
push
push
cmpsl
cmp
or
negl
out
push
bound
pop
call
push
movhps
mulb
pusha
cltd
and
repz
cmpsl
lcall
cmpsb
test
push
pop
mov
daa
pop
stos
and
out
rcrl
push
sub
imulb
cwtl
je
mov
xchg
push
push
xor
test
cmp
jecxz
jge
insb
pop
or
arpl
rcl
mov
pusha
mov
cld
pushf
in
cmp
sbb
mov
mov
aad
jge
je
insb
pop
cmp
mov
dec
or
push
lds
sub
stc
mov
fst
ljmp
and
inc
pop
scas
cmp
xchg
sbb
cmp
inc
int
scas
mov
shlb
leave
mov
pop
sub
jp
xchg
push
push
jno
in
jb
xchg
xchg
aam
out
jge
test
sbb
lret
mov
push
addr16
cmp
jge
adc
icebp
push
dec
pop
xor
stos
scas
xchg
fisttpll
xor
std
repnz
test
push
std
or
sbb
mov
and
add
xchg
lea
adc
mov
xor
inc
mov
test
call
cmp
and
pusha
sbb
or
adc
pop
movsl
pop
cmpsl
mov
fcompl
sar
dec
xchg
ljmp
xor
xor
ret
dec
jg
lock
fldcw
pusha
pop
and
incb
les
es
test
movsb
outsl
xchg
xchg
repnz
inc
test
cwtl
loop
insl
out
sbb
cmp
jns
lods
fmuls
mov
xlat
pop
test
dec
xor
fnstenv
fdivs
sbb
fldcw
or
cs
xchg
stc
xlat
or
xchg
xchg
inc
xchg
in
addr16
cmp
out
adc
outsl
pushf
adc
pop
cmpsl
mov
es
pop
cmp
mov
jge
addl
mov
out
inc
mov
xchg
insl
jp
ss
mov
add
sbb
pop
adc
jl
loope
movsl
sub
or
dec
test
dec
jl
mov
push
inc
rcrl
pop
jbe
sbb
popf
aad
jmp
jge
mov
ret
mov
adc
cmc
mov
lods
pop
push
push
fstl
sub
out
hlt
inc
add
stos
es
or
xchg
push
or
mov
negb
imul
adc
int
or
mov
inc
and
jle
mov
inc
sbb
cltd
xorl
inc
xor
es
jle
jns
popa
mov
mov
cwtl
out
loope
xor
sahf
int3
ds
push
sub
add
dec
or
lret
repz
arpl
das
fcmovnu
dec
and
aam
and
mov
add
pop
sub
push
adc
dec
push
iret
pop
daa
or
cmc
scas
aas
jne
lea
cmpsb
and
rorl
incb
push
dec
lods
fiaddl
push
and
je
jmp
pop
cmpsb
mov
mov
enter
or
repnz
sub
jns
pop
addr16
mov
xor
or
adcw
or
js
sub
ja
xchg
addr16
mov
shrb
mov
jecxz
outsl
sti
or
xor
mov
add
andb
fiadds
inc
mov
xor
sub
xor
push
xchg
arpl
sahf
add
enter
adc
push
or
ds
add
pushl
inc
outsb
add
loop
fbld
movsb
pop
dec
sar
push
gs
jecxz
cmpsb
ja
and
and
cwtl
or
decb
mov
movsb
dec
mov
fcmovbe
or
dec
adc
adc
push
ds
rcll
xor
stos
in
sar
jbe
ja
push
or
aad
push
mov
movsl
mov
sahf
popa
sbb
mov
hlt
and
sub
xlat
jecxz
xchg
pop
std
xchg
and
cmpsl
mov
ret
inc
push
aas
sub
sti
pusha
add
pop
stos
jg
test
add
sub
icebp
jb
xchg
pop
jge
and
stos
mov
push
inc
adc
xor
bound
aam
adc
mov
outsb
inc
in
or
xchg
xchg
xor
sbb
push
mov
mov
subb
jecxz
cmp
icebp
inc
fidivrl
sub
cmp
mov
into
pop
mov
test
push
in
jecxz
imul
pop
int
cwtl
jmp
js
sbb
cmpb
add
mov
sub
xchg
rolb
sbb
cwtl
mov
or
addl
or
int
pop
xor
stos
enter
adc
ljmp
shld
aam
push
xchg
test
int
cmp
mov
push
push
push
push
adc
inc
jecxz
pop
mov
sar
or
mov
fsubs
xor
or
subl
fstl
and
mov
out
mov
jbe
inc
cmp
fs
lea
push
dec
xchg
je
push
pop
cwtl
inc
sti
push
adc
nop
mov
mov
sbb
in
pop
mov
xor
sbb
mov
lcall
and
sub
es
lcall
dec
mov
gs
dec
outsb
adc
adc
inc
fsubrs
sbb
aam
mov
lahf
mov
adc
leave
push
loopne
sbb
sbb
data16
pop
ret
add
mov
jb
mov
mov
push
sbb
sbb
out
mov
mov
subl
sbbl
sahf
adc
xchg
xchg
aad
push
les
enter
aad
push
xor
mov
add
movl
xor
pop
cmp
enter
inc
mov
adc
xchg
outsb
adc
iret
lds
dec
cli
stos
jno
sbb
xor
sub
fnsave
xchg
cmp
push
fdivl
and
bound
dec
fldcw
inc
test
leave
mov
xchg
fwait
aad
je
adc
xor
sbbb
mov
je
mov
pusha
stc
jno
test
mov
xchg
in
or
xchg
scas
push
fwait
xchg
jp
pushf
ffree
adc
jmp
jmp
test
imul
mov
mov
arpl
or
cmp
xchg
push
outsl
mov
xchg
jo
add
ds
ret
cmpsl
test
ljmp
mov
les
mov
push
mov
std
popa
adc
jmp
dec
dec
xchg
dec
mov
or
inc
pop
arpl
in
cmp
jb
cmp
insb
add
stos
subb
adc
sub
je
cs
dec
shlb
mov
dec
imul
roll
dec
sub
outsb
testl
sarl
cmpsb
ret
cli
mov
jns
dec
fcmovb
jns
mov
lahf
das
hlt
xchg
clc
jae
adc
sbb
sub
mov
out
mov
mov
mov
movsl
jp
and
jne
in
push
mov
and
lds
sub
push
mov
jne
cmp
movsb
push
in
js
or
and
lret
xchg
inc
adc
mov
xor
imul
es
and
dec
mov
mov
test
cld
inc
sub
mov
xchg
fstpl
xor
sbb
mov
adc
mov
cmp
sti
rep
mov
ficoms
mov
std
mov
adc
cmpsl
cwtl
or
jle
mov
pop
cmp
xchg
add
cltd
adc
out
or
pop
jnp
jecxz
pop
and
mov
and
clc
inc
add
fwait
cli
jge
in
int
jge
sbb
in
push
pop
push
sbb
faddl
test
inc
mov
aas
push
ret
push
pusha
nop
jmp
mov
rcll
lock
std
loop
mov
mov
enter
add
fsubrs
imul
jg
dec
xor
add
pop
fdivs
push
jg
cld
ja
fimull
stos
xor
inc
pusha
push
stc
fndisi(8087
in
sub
inc
outsl
test
mov
loop
sbb
inc
repz
sub
daa
test
jnp
out
adc
xchg
add
add
leave
call
filds
icebp
or
shlb
cmpsb
jmp
inc
lret
xchg
fisubl
stos
mov
cmc
cmpsl
mov
add
sarl
push
je
gs
jg
lahf
ljmp
push
cld
std
jmp
adc
insb
scas
es
iret
fcmovnbe
stc
jg
mov
andl
gs
push
sbb
fstps
mov
outsb
mov
addl
lods
jmp
loope
xchg
pavgb
call
push
sbb
or
mov
lahf
cli
mov
iret
ret
dec
pop
in
imul
ss
cli
mov
cld
or
aas
subl
filds
jb
lea
cmp
xor
movsb
xor
fwait
mov
dec
cmp
mov
pop
adc
xchg
add
aaa
ret
cmc
sub
data16
loop
sbb
fwait
or
out
and
popa
fwait
test
jge
lahf
test
or
or
inc
enter
int3
xlat
xchg
mov
and
or
cmp
pop
pop
inc
mov
cmpsl
sar
mov
dec
jne
push
mov
sahf
push
cmp
cmp
pop
lds
sbb
shrl
scas
dec
pop
push
xchg
inc
jge
repz
jg
mov
fadds
outsb
fwait
nop
aaa
jl
and
iret
lret
xchg
cli
fldpi
cmp
shll
rorb
aaa
inc
xchg
out
stos
gs
push
addl
gs
mov
jp
mov
nop
cwtl
mov
sbb
push
push
cwtl
pop
les
bound
xchg
push
divb
aad
jae
ret
pop
dec
test
jno
adc
push
roll
pop
fnsave
xor
xor
daa
scas
fiaddl
mov
fwait
es
je
mov
js
je,pt
xchg
jne
mov
dec
xchg
insb
xchg
cmp
sbb
dec
adc
shlb
js
ficompl
xchg
inc
xor
mov
lcall
enter
mov
lock
xchg
push
cs
aam
ret
pushf
movsb
jmp
sub
push
loope
insb
das
or
into
pusha
push
pop
pop
pop
jmp
stos
push
push
pop
xor
jmp
pop
repnz
sbb
fdivrs
lea
inc
fsin
add
dec
cli
pop
ret
xor
xor
test
inc
sub
jno
test
loope
mov
lods
mov
pop
int
cmp
jp
ja
into
dec
push
pop
pop
popf
inc
mov
test
int
js
jbe
loopne
xor
ficoml
iret
add
xchg
or
cmp
loop
jb
dec
mov
adc
ror
sub
cmp
fwait
cmp
movsl
mov
mov
sub
cmpsl
and
ret
fsubl
adc
add
lahf
or
push
sbb
fwait
sbb
or
xor
inc
adc
cmp
jmp
sbb
xchg
outsl
inc
cs
push
ljmp
cmpsb
xchg
in
dec
lds
cmp
leave
push
lea
neg
cltd
jmp
outsl
pop
mov
cld
mov
sub
leave
lea
xor
int3
cld
lea
dec
xchg
fidivrs
cltd
test
ljmp
push
lock
sbb
je
dec
aaa
mov
push
or
sarl
mov
mov
sbbl
lcall
clc
jb
or
sub
xchg
push
repnz
cmp
sub
test
add
mov
sbb
sub
pop
test
cmp
mov
push
mov
and
mov
and
xor
iret
cmpsb
adc
inc
loop
pop
xor
dec
les
pusha
popf
push
out
in
pop
jecxz
mov
mov
add
mov
add
hlt
aad
add
in
aad
xchg
mov
mov
jge
mov
lea
fnstenv
gs
stos
fsubr
ret
scas
pop
add
xchg
mov
and
movsl
mov
pusha
or
adc
fmull
xchg
add
mov
insb
mov
sbb
sbb
and
arpl
int
dec
bound
and
mov
push
jg
cmpsb
xchg
arpl
push
pushf
leave
dec
add
mov
jns
fistps
scas
xor
das
pop
sbb
cmpsl
sbb
sbb
pop
push
add
push
int3
rcrb
mov
ret
call
shr
pop
imulb
insb
sub
adc
inc
cltd
lcall
scas
loope
mov
xor
push
sti
xorb
xchg
pop
rcr
cmp
mov
lret
push
push
lock
cli
add
and
or
rcll
outsl
leave
xor
call
push
lahf
xor
and
or
xchg
dec
adc
fnstcw
clc
int
fwait
in
out
mov
rclb
scas
xchg
int3
pop
xchg
inc
aaa
sti
lods
mov
insb
mov
xor
out
push
in
popa
add
dec
loope
mov
and
fcoml
dec
insb
ret
cmc
xor
dec
jle
test
cmp
and
test
cli
fs
cmpsl
dec
mov
fdivrp
xchg
sub
les
sub
inc
pop
inc
ljmp
sbb
fcomps
scas
mov
addr16
out
inc
mov
mov
xor
and
pop
shlb
sbb
jb
popf
inc
inc
shlb
imul
cmc
xor
mov
or
jne
ficomps
mov
int
jb
inc
add
ljmp
js
mov
dec
mov
int3
out
test
or
rorb
sbb
lcall
mov
inc
add
push
mov
cmp
push
sbb
or
adc
push
mov
sub
jns
sysret
sbb
push
mov
aaa
or
cmp
sub
and
cmpsl
pop
pop
sti
ljmp
dec
xor
fincstp
xor
movsl
or
xor
faddl
sti
pop
fmull
add
and
cmp
dec
in
popf
test
arpl
mov
fiadds
loope
popa
mov
lods
mov
daa
and
cli
and
aaa
or
das
icebp
dec
notb
pop
jne
js
cli
mov
bound
sbb
mov
ljmp
fnstcw
xor
xor
enter
dec
mov
loopne
sbb
in
ficompl
and
inc
jg
pop
in
xor
sarl
bound
hlt
xlat
push
push
sub
mov
mov
push
sbb
cmp
add
cmpsb
dec
ret
nop
aam
es
or
mov
xor
rclb
cli
in
sub
or
xchg
adc
lcall
sub
or
sub
fsubs
sbb
mov
push
or
mov
mov
inc
movsl
xchg
movsb
int3
gs
call
mov
mov
daa
addr16
jno
mov
lds
iret
cmp
xchg
pop
lods
scas
mov
outsl
mov
inc
jecxz
pop
std
add
fwait
aam
jle
movsl
pop
push
popa
pop
shr
stc
pop
outsl
cmpb
cs
cmpsb
inc
mov
out
int3
and
enter
fdivp
push
push
sbb
xchg
mov
cwtl
rclb
xor
in
inc
outsb
cli
cli
lds
stos
adc
sbb
xchg
jge
test
std
stos
mov
jno
push
mov
dec
cli
roll
call
int3
xchg
fdivl
ljmp
aam
loope
leave
shr
cmp
mov
out
mov
cmp
add
pop
dec
pop
popf
aas
cmp
and
in
inc
mov
or
pop
push
jno
movsl
or
and
xchg
xor
sbbl
outsb
push
and
imul
loope
push
mov
push
pop
mov
adc
sbb
push
inc
out
sarb
je
cs
or
adc
push
fdivrs
cmp
mov
or
cmpsb
xor
push
test
xchg
mov
cmp
cmpsb
out
call
out
cmp
adc
mov
or
enter
clc
cmc
and
or
cmp
lcall
dec
test
dec
fisubrl
mov
mov
lret
fcoml
dec
pop
pop
cs
adc
cs
insl
gs
arpl
fisttpll
xchg
les
in
fsubp
cmpsb
imul
and
aas
insl
pop
roll
jns
xlat
daa
int
jg
pop
or
fxch
add
inc
fcomi
sti
ss
out
stos
jne
ror
pop
fwait
push
push
pop
mov
daa
jl
fisttps
dec
pushl
fildl
xchg
jb
enter
loopne
dec
mov
mov
enter
pop
jne
aam
push
adc
jp
mov
add
out
jne
testb
scas
jne
data16
xor
jb
jns
jno
add
mov
xor
frstor
ds
mov
lods
sbb
adc
xchg
mov
add
dec
dec
add
scas
xor
aaa
popa
testb
xchg
xor
jle
call
mov
aaa
dec
mov
outsl
jae
adc
adc
inc
adc
pop
adc
daa
aam
push
rcl
jbe
add
add
out
cmp
std
xor
or
push
loopne
adc
hlt
sti
push
fsubl
jns
push
cmp
mov
mov
mov
pushf
xchg
pop
adc
dec
arpl
mov
mov
push
xor
roll
popa
push
mov
jno
lcall
xchg
and
or
jb
pop
cmp
ret
movsb
adc
lcall
inc
popf
jb
mov
imul
lods
movb
push
sub
hlt
mov
mov
jb
xor
mov
adc
jns
jo
cld
xor
sbb
push
jns
pop
mov
mov
adc
sub
cld
pop
popa
mov
jb
hlt
adc
aaa
mov
cmpl
jb
pusha
jg
mov
pop
je
mov
dec
sub
cmpsb
xchg
nop
out
outsl
dec
stos
out
cmc
rcl
imul
enter
and
and
adc
xchg
or
cmpsl
or
push
fwait
sbb
lret
dec
xchg
pusha
cmp
imul
or
cld
sbb
mov
icebp
cmpsl
rol
mov
je
cmp
pop
cwtl
es
jg
mov
lahf
jmp
fstpl
fucomi
mov
mov
rorl
push
cmp
movsb
in
mov
pop
pop
insl
gs
ljmp
mov
or
mov
cld
pop
cmp
stc
inc
lahf
mov
div
push
jne
pop
inc
xchg
xor
pop
rorl
adc
pop
pop
bound
loop
test
sub
cs
pop
push
lods
dec
shrl
jbe
movsb
out
mov
jno
icebp
sub
sub
fcompl
xor
lret
pushf
popa
jo
pop
loopne
stos
std
das
add
stos
push
dec
adc
sub
xchg
ret
adc
int
inc
fidivl
scas
sub
stos
in
loop
sbb
repz
mov
jae
lock
sbb
inc
pushf
fiadds
ret
mov
add
out
ret
test
lock
jmp
fimuls
xor
stos
jns
ficoms
jmp
lret
rcr
nop
iret
mov
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
jmp
dec
sub
pusha
repz
or
test
mov
jl
pop
jl
call
jae
and
dec
lret
pop
xchg
lret
sub
add
xchg
push
ja
or
add
jl
insb
cmp
ljmp
mov
int
mov
cmp
fwait
jmp
push
pop
stc
push
xor
stc
and
fcmovu
cmpsb
cld
jae
je
adc
xor
lds
push
pop
mov
outsl
fwait
dec
mov
mov
popf
cmp
popa
repnz
sbb
loop
les
iret
cmp
popf
es
adcl
fcmovnbe
lock
test
inc
cmp
push
mov
inc
call
jae
les
jae
out
pop
pushf
out
adc
xchg
sbbl
sahf
sbb
iret
out
mov
push
dec
add
mov
inc
push
shl
inc
pop
push
fidivl
or
fbstp
jge
xchg
sub
adc
jp
xchg
mov
movsl
mov
lret
shrb
push
mov
dec
sub
mov
lock
hlt
test
lods
insb
nop
pop
cmp
in
cmp
push
scas
pop
or
push
or
xchg
push
je
call
inc
jl
dec
in
lret
mov
cmp
jg
xchg
inc
xchg
fcoms
xchg
add
in
sbb
sub
adc
dec
push
aam
xorb
enter
stos
es
insb
pop
imul
sarb
mov
inc
out
sub
inc
scas
adc
dec
pushf
pop
inc
rorl
push
jp
cmp
int
or
mov
mov
gs
cmp
in
inc
clc
add
push
lock
inc
add
repnz
cmp
loope
mov
mov
out
push
sub
dec
pop
mov
sbb
stos
push
mov
push
not
ss
mov
mov
mov
aad
pusha
mov
xor
fwait
pop
pop
fs
shll
cmp
je
sahf
fistpll
xchg
jg
nop
fwait
leave
and
adc
mov
xor
call
pop
or
jo
bound
jbe
cs
or
ja
orl
mov
pop
and
or
cmp
sti
sub
jne
add
stos
dec
roll
scas
jle
mov
pop
mov
pop
out
xor
mov
xchg
inc
std
xchg
and
outsb
repnz
jno
jmp
imul
dec
sarl
inc
and
dec
test
jp
pushw
adc
ds
ja
sahf
dec
push
sbb
fdivs
xchg
bound
fcoms
nop
push
inc
fisttpl
or
mov
cld
push
dec
das
push
inc
push
addb
das
cmp
in
jne
iret
into
xor
loop
and
dec
rclb
sub
lret
pop
fs
or
aad
imul
mov
les
aaa
lock
aaa
xchg
inc
and
and
je
mov
fidivs
and
inc
mov
int
lods
es
mov
into
lret
inc
jmp
idivb
sbb
sub
xchg
pop
pop
fsubrs
jb
lret
jl
cmpsb
or
lret
jb
outsb
cmp
push
pop
insb
lcall
push
xchg
ficoms
xchg
mov
lock
jmp
cmovne
dec
enter
std
and
pusha
cmp
jo
adc
inc
aas
je
sbb
and
adc
jg
cmp
je
mov
xchg
pop
xchg
movsb
ret
add
fwait
or
push
faddl
xchg
aaa
add
xor
jle
sub
insb
mov
jp
into
mov
sbb
imul
gs
lret
stos
push
xchg
lret
arpl
outsl
mov
xchg
add
jecxz
inc
cmp
pop
pop
faddl
xor
insb
mov
push
test
ret
rcll
sbb
sbb
mov
fs
ja
jle
rol
dec
mov
nop
jl
adc
pushf
mov
repnz
daa
inc
dec
addr16
insl
push
into
cwtl
add
dec
adc
ja
jg
xchg
cld
push
mov
adc
lods
jno
sbb
jae
jg
dec
xchg
or
xor
dec
aaa
cmc
inc
add
cmpsb
push
adcl
mov
scas
imul
shr
inc
mov
mov
push
cmp
sar
lock
addr16
icebp
jae
imul
popf
or
cli
in
call
outsl
sbb
xor
fcom
inc
pop
or
fs
ljmp
movsl
les
mov
popf
and
push
mov
sbb
inc
aad
into
sub
faddp
ja
out
adc
push
aad
mov
push
mov
ret
loop
push
fstps
leave
inc
enter
test
sub
mov
push
mov
mov
xchg
mov
int3
xchg
dec
out
nop
in
dec
ret
pushl
add
jo
mov
je
lods
and
loopne
sbb
dec
sub
xchg
push
shl
xor
mov
push
icebp
push
jnp
enter
push
dec
not
and
mov
test
mov
shll
decb
out
negb
mov
rcll
lret
ss
jecxz
in
lret
stc
inc
pop
sbbl
outsl
sarb
into
cltd
cs
orb
jmp
inc
jecxz
lods
mov
loopne
cmc
das
dec
push
jecxz
mov
xor
leave
fucom
push
adc
cltd
nop
das
push
pop
dec
sbb
jge
cmp
fdivrl
dec
lret
nop
jnp
cmp
lcall
std
pop
pushf
jle
pop
movl
addb
cmp
push
outsl
adc
jg
sub
cmpsl
scas
ret
mov
stos
mov
je
lahf
and
dec
pop
cmc
jbe
jnp
cli
arpl
or
dec
mov
mov
sbb
lcall
xor
inc
add
xor
sbb
in
mov
ret
aam
imulb
testb
jmp
mov
mov
pop
or
jge
shl
mov
or
push
jne
jnp
fsubr
mov
das
leave
popa
in
push
mov
outsb
cwtl
xchg
stos
fiadds
pop
das
outsl
jp
jns
leave
push
in
fists
mov
inc
inc
mov
int
fmull
imul
fistpll
scas
aas
hlt
scas
jge
mov
hlt
pop
adc
aam
iret
dec
mov
or
inc
insb
lods
sub
sbb
lret
mov
ret
jbe
xchg
adc
adc
test
stc
jns
dec
and
cli
lahf
leave
nop
popf
xchg
cmc
enter
lcall
xor
ret
mov
add
fstpl
cmp
imul
test
dec
inc
push
sti
adc
cwtl
cmpsb
jge
lock
lock
mov
aad
cmpsl
or
xor
xchg
xchg
xor
in
arpl
adc
xchg
jg
ret
inc
aam
imul
adc
mov
adc
popf
bound
insb
xor
and
dec
cmp
mov
inc
pop
adc
shlb
sbb
xor
mov
xchg
dec
loop
pop
pop
rolb
lods
dec
test
jno
cmp
es
pop
mov
in
inc
iret
sbb
sti
pop
aas
dec
inc
mov
jne
add
lods
and
or
pop
das
jne
aam
std
add
sbb
iret
dec
ljmp
ss
cmpsb
not
jno
push
iret
lds
mov
fiadds
ss
ss
inc
jg
mov
jge
nop
adc
and
test
sti
stos
jo
add
in
jns
iret
or
insl
mov
or
outsl
cltd
ret
cmp
sbb
out
jbe
and
sbb
xchg
faddl
or
xchg
sbb
mov
cwtl
enter
jno
jmp
cmpsl
mov
xchg
js
bound
loope
pop
packssdw
out
xor
cmp
scas
fwait
lea
mov
push
loope
dec
inc
loope
cs
mov
add
push
aas
loop
inc
nop
and
sub
add
rcrl
mov
in
sbb
cmpsl
and
sub
bound
xor
ds
inc
ret
lret
xchg
lahf
xchg
sbb
dec
push
mov
and
mov
dec
aad
fdivs
scas
and
inc
and
test
sahf
push
push
push
ret
aad
xor
cmc
mov
mov
popa
add
data16
cmc
jecxz
cwtl
mov
int
dec
sub
xchg
xor
cmpsb
push
pushf
lds
jnp
cmp
gs
rorl
std
pusha
data16
daa
nop
inc
call
iret
inc
lcall
pushf
dec
neg
xlat
out
xor
outsb
bound
icebp
test
mov
shlb
mov
cmpsb
icebp
repz
sti
push
enter
push
add
mov
stos
push
dec
fndisi(8087
mov
inc
sub
out
mov
inc
cmp
test
inc
into
cli
shll
mov
dec
mov
sbb
xchg
fcomip
pop
and
vmovups
test
pop
sbb
cld
xor
mov
daa
or
test
dec
or
mov
in
inc
pop
sub
aaa
push
clc
pop
movsl
cmp
addb
out
or
adc
aam
add
fnstenv
test
push
int3
cmp
xor
add
out
push
rcr
ljmp
aaa
sbb
xchg
imul
shrl
pop
scas
mov
out
test
push
inc
sarl
mov
mov
jl
lods
jns
into
jno
mov
aas
jae
cmp
fcmovnb
push
pop
jo
sbb
stos
idivb
lds
vandps
and
ljmp
mov
mov
out
cmp
nop
jo
cld
cmp
add
lds
ror
orb
dec
sub
pop
cmp
mov
repnz
into
and
push
cmp
sub
testl
arpl
sub
mov
jl
rol
pop
call
or
sbb
sub
adc
scas
and
popf
xchg
loopne
ja
adc
insb
lret
les
adc
jp
fcmovu
adc
push
inc
mov
fwait
mov
xlat
lret
repz
push
and
jne
pop
mov
lods
adcl
dec
outsl
daa
inc
cmp
lods
fsubs
sub
icebp
mov
hlt
je
cmp
test
or
sbb
sub
cmp
push
pop
mov
xorb
scas
dec
repz
sub
xchg
mov
fnsave
fiadds
ds
add
pop
cmp
jle
sub
outsb
jns
dec
movb
xchg
je
mov
imul
pop
cmp
adc
ficoms
and
mov
mov
mov
and
xor
enter
inc
aas
js
or
testl
sub
mov
sbb
mov
push
test
int
mov
adc
or
rorb
es
nop
push
mov
sbb
dec
sub
outsb
xchg
lret
shll
push
gs
into
les
xchg
pop
mov
cmp
xor
push
jmp
mov
sbb
add
sbb
or
add
ret
jns
jle
push
dec
stos
mov
mov
push
jl
push
movzwl
mov
movsb
in
adc
cmp
sub
xor
insb
sar
out
enter
stc
mov
test
push
push
jmp
enter
repz
adc
loop
jg
jae
jb
cmp
scas
xchg
mov
out
enter
xchg
dec
mov
mov
push
mov
nop
xlat
pop
adc
xor
dec
pop
scas
xlat
out
cmp
jo
mov
div
inc
outsb
fmul
ds
cmp
sbb
inc
cmc
in
and
dec
lds
push
das
into
inc
cltd
sbb
sub
mov
incl
xorl
jno
loope
mov
inc
xchg
sti
mov
fwait
adc
enter
adc
loope
fbld
mov
imul
jmp
lretw
mov
sarl
pop
mov
sarl
sub
push
out
pushf
pop
pusha
cmc
push
xchg
inc
inc
je
cmp
loopne
jo
scas
sti
xchg
sub
mov
mov
inc
cmpsl
jp
cmpsl
xor
addb
jge
dec
sbb
mulb
into
cld
jnp
mov
mov
in
imul
aas
push
push
cmp
aad
out
inc
lds
add
mov
pop
js
je
and
jp
inc
int
ficoms
push
fsubrp
pusha
inc
jmp
lahf
mov
jno
lods
les
mov
leave
and
sbb
hlt
xor
add
shrl
lret
lds
gs
inc
cmp
aad
dec
popa
je
testb
sub
sub
cmp
outsb
in
adc
cmp
xor
in
dec
daa
or
mov
cmp
loop,pt
scas
sub
cmp
mov
loop
pop
lock
fcompl
lcall
adc
inc
sbb
das
mov
or
js
mov
mov
addb
jo
ret
add
test
pop
mov
leave
icebp
or
insl
lahf
outsb
xchg
shrl
fwait
outsl
mov
push
lahf
pop
into
add
jbe
adc
and
nop
jb
inc
push
or
out
sub
pop
mov
sbb
or
adc
push
jno
mov
mov
inc
push
jnp
dec
hlt
sbb
jl
and
xchg
std
cs
mov
nop
cld
pop
call
xor
or
or
or
push
iret
lds
jle
lcall
xchg
or
sbb
out
add
int3
loop
or
mov
and
cmc
fistps
mov
faddl
int3
mov
sub
mov
or
mov
rcr
push
mov
das
adcb
or
or
ljmp
pop
lods
xor
push
inc
mov
mov
cmp
xchg
loopne
ffreep
add
rorl
jl
xor
pop
xor
cmpsb
pop
mov
sub
sub
lret
pop
cmpsb
aas
call
cmp
movsb
mov
push
inc
dec
cmp
cld
aaa
sbb
sub
movl
mov
add
fnsave
adc
ja
push
add
ss
jns
pop
shrb
es
fldl
lcall
and
mov
xor
scas
pop
orl
aad
lcall
jle
xchg
xchg
enter
cwtl
shr
sbb
jecxz
xlat
sahf
sbb
cli
xchg
cmc
js
sahf
pushf
and
out
mov
mov
outsb
leave
sub
inc
fmull
es
les
dec
icebp
mov
loopne
call
repz
adc
jo
mov
enter
sub
cld
and
mov
cmp
xor
imull
or
push
mov
cli
jmp
cmp
xchg
dec
jb
aaa
adc
sbb
shll
pop
repnz
test
adc
rcll
jmp
adc
pop
xor
xor
jecxz
inc
loopne
lret
dec
mov
fsts
cmp
push
cwtl
pushf
ds
stos
mov
or
mov
insb
fs
aaa
inc
mov
sbb
fwait
andl
sub
sbb
sub
call
push
pop
or
sbb
lcall
aam
ja
filds
fcomip
jae
sbb
loopne
add
cwtl
pusha
xchg
sbb
mov
pop
pop
cld
inc
pop
lds
xchg
pop
daa
jbe
xchg
daa
mov
cmpsb
ds
ja
je
stos
leave
scas
push
cmpsl
adc
mov
adcb
in
repnz
fldl
sub
pop
and
arpl
outsl
rorl
rclb
dec
leave
sar
enter
sub
and
inc
cmc
int
insb
cmp
aad
lods
scas
add
dec
inc
pop
mov
movsl
out
inc
dec
loopne
jp
add
xlat
mul
mov
jecxz
loopne
mov
jae
push
loope
adc
and
sub
shll
and
sti
add
jge
dec
add
dec
aam
mov
rcrb
inc
leave
jp,pn
mov
jbe
lods
pop
cmp
fs
cld
ds
ret
lods
fcomp
xchg
jl
mov
movsb
mov
sbb
cld
mov
aad
xchg
xchg
test
push
mov
and
pop
rcll
jae
or
ficoml
sub
and
cmp
roll
icebp
mov
hlt
fdivr
mov
jne
cmp
repnz
pop
sti
xchg
or
lret
push
pushf
mov
test
mul
xchg
sub
cmp
xor
xchg
loopne
out
mov
mov
mov
and
mov
out
lahf
in
add
inc
mov
push
cli
pop
dec
negb
mov
lock
pop
mov
insb
jb
push
sbb
test
popa
leave
rcl
mov
scas
adcb
dec
jge
fwait
xchg
loopne
sbb
jg
ret
pushf
xchg
add
or
bound
mov
jbe
pop
push
pop
mov
bound
les
mov
daa
js
punpckhwd
iret
in
or
dec
fs
outsb
mov
dec
pop
test
test
or
pop
jmp
xchg
or
or
stc
repz
pop
jne
mov
filds
mov
sbb
jmp
pop
sbb
inc
cmpsl
sbbb
fstl
outsl
and
fmull
dec
push
and
stos
lret
stc
loop
mov
push
sbb
sub
ljmp
daa
sahf
aam
mov
fcoms
add
mov
ret
pop
jmp
xlat
std
xor
mov
or
out
cmp
add
push
in
scas
sbbb
inc
sub
leave
dec
mov
lret
out
xchg
gs
lock
pop
mov
out
mov
jge
jno
xchg
loopne
pop
xchg
cmp
dec
mov
push
lea
into
pop
adc
pop
addb
outsb
enter
stos
insb
and
jge
mov
sarl
and
cwtl
lds
mov
and
outsb
es
loop
cmp
sbb
jae
jns
dec
outsb
out
adc
ja
cli
dec
mov
popa
mov
inc
fsubl
mov
or
ret
inc
push
xchg
jmp
jns
das
xchg
lea
nop
cmp
imul
inc
gs
rorb
cmpsl
pop
mov
sbb
lcall
dec
ds
lods
out
lods
adc
mov
and
lret
add
jl
rcrl
jl
jnp
pop
sarb
cwtl
out
jne
mov
jg
or
jae
shl
ficomps
mov
outsb
out
jns
mov
or
push
mov
mov
and
mov
fldt
loopne
pusha
mov
outsb
mov
xchg
insb
mov
inc
or
inc
jl
out
mov
das
push
fwait
out
popa
mov
mov
inc
ret
leave
cmp
add
mov
lods
pop
jae
mov
xchg
shll
dec
sahf
mov
pushf
test
inc
in
jne
and
mov
cmc
inc
movsl
mov
push
mov
ja
mov
adc
mov
xchg
into
or
add
dec
into
sub
dec
daa
sub
pusha
inc
cmpsl
xor
mov
push
inc
and
fimuls
fsubp
jnp
and
lcall
lret
xchg
call
pop
adc
xchg
and
stos
rcrb
jge
imul
insl
outsl
jg
jg
jp
adc
out
dec
aad
or
xor
inc
popf
and
sbb
mov
aad
push
xchg
xor
or
mov
jmp
push
lret
movsb
ljmp
mov
movb
in
mov
mov
sbb
push
aas
imul
jmp
shll
dec
test
dec
popl
push
mov
sub
dec
test
cwtl
cmc
dec
jo
mov
jbe
mov
mov
xchg
lods
jns
inc
sub
cmp
mov
adc
and
xchg
jge
sbb
scas
je
push
ss
ret
mov
sahf
xor
push
cs
and
outsb
aaa
ror
imul
mov
add
dec
ret
mov
js
mov
daa
ds
sub
sub
fisttpll
mov
mov
adc
cli
das
lods
scas
ljmp
lods
dec
ret
sub
jmp
hlt
add
jno
sub
xchg
and
hlt
js
dec
push
inc
mov
dec
ror
loop
mov
cs
adc
stc
xor
pop
lds
xor
es
je
xchg
or
xorb
dec
adc
add
xlat
and
dec
rcll
lock
aaa
or
test
mov
shlb
mov
or
rorl
sbb
add
daa
mov
rcrb
inc
jecxz
lock
jbe
aas
pop
inc
mov
fwait
mov
mov
rorl
xchg
mov
aam
mov
mov
ret
xchg
sti
mull
stos
mov
jmp
test
inc
xor
jmp
cmp
jle
jno
fdecstp
push
lcall
es
push
xchg
and
ret
insl
add
pop
adc
push
mov
pop
ljmpw
mov
mov
add
mov
imul
in
xchg
outsb
pop
jns
movsl
xor
xlat
xlat
out
movsl
or
and
repnz
dec
and
pop
mov
std
shl
and
repnz
pop
xor
jge
loope
add
adcl
enter
scas
adc
xlat
xchg
test
inc
fmuls
stos
mov
push
push
inc
cmp
sub
clc
hlt
jbe
and
jns
xchg
xchg
fiadds
and
xor
jnp
mov
mov
inc
je
sub
mov
scas
push
add
mov
or
scas
test
pop
cmpsl
out
xor
push
repz
xchg
les
mov
pop
fcoml
or
mov
xchg
sbb
push
pop
pushf
inc
or
dec
negb
fs
pop
adc
mov
mov
insl
push
dec
xchg
jge
stos
dec
das
leave
mov
dec
lcall
xor
arpl
leave
sbb
das
dec
cmp
mov
push
out
pusha
nop
repz
xchg
mov
dec
in
add
or
dec
cmpsl
add
shlb
push
dec
jo
mov
je
push
je
je
dec
lret
lret
cmpsb
push
push
gs
add
or
jb
out
push
sub
jle
aaa
jg
jge
aad
lret
bound
adc
sti
push
push
nop
sub
and
pop
and
sub
sbb
and
movsl
cli
mov
add
cmp
lret
lods
cwtl
movsl
insb
jl
testb
jge
mov
pop
mov
jmp
repz
lods
add
aaa
cli
xchg
jg
and
je
xchg
jne
xor
ljmp
js
adc
sbb
pop
push
stc
push
jns
lds
dec
sahf
mov
scas
bound
mov
jl
mov
gs
mov
cmpsb
and
cltd
adc
scas
cli
push
push
and
mov
stos
repnz
dec
jle
sbb
cli
mov
subl
add
jo
mov
imul
pusha
add
adc
loope
xchg
and
pop
and
push
mov
sbb
sbb
test
lcall
sub
jbe
imull
scas
pushf
sbb
dec
nop
mov
mov
jbe
test
imulb
pop
test
lock
xor
lds
pop
adc
jp
or
mov
mov
addr16
lods
lea
jl
adc
or
pop
lret
cmp
shl
sbb
jne
pop
dec
mov
int3
pusha
push
adc
mov
lock
jecxz
ja
cmp
lods
jg
mov
push
mov
shlb
mov
cmp
test
sub
lcall
sbb
insb
push
jge
add
pushf
outsl
jnp
insl
xchg
stc
stos
test
inc
jmp
je
xor
insl
lcall
push
roll
mov
xor
or
sbb
mov
pop
dec
pop
jo
adc
or
inc
xchg
xchg
jb
das
pusha
dec
pop
mov
adc
mov
std
test
shrb
and
and
xchg
add
call
fisubrs
inc
sti
aam
add
andb
and
fisttpl
mov
mov
sub
xchg
mov
les
movsl
ja
mov
ret
jp
dec
mov
dec
inc
xchg
lea
mov
cli
out
sub
jo
imul
outsb
rcrb
gs
adc
inc
sub
push
addr16
xchg
sahf
out
mov
decl
sbb
xor
mov
into
fiadds
add
push
add
lds
sbb
aas
sbb
xor
jbe
dec
mov
mov
enter
push
pop
push
mov
and
stos
or
inc
loop
jo
push
dec
outsl
arpl
mov
jge
sarb
and
cld
adc
stos
insb
scas
dec
and
sub
cmp
jo
sub
push
mov
jnp
subb
adc
insb
jl
test
add
mov
fcompl
dec
cltd
xchg
pop
add
mov
or
adc
pop
xchg
cmp
mov
icebp
jl
lcall
test
pusha
insb
and
pop
psubsw
cmp
dec
aas
test
mov
pusha
enter
mov
adc
cmp
or
ss
fs
inc
cs
dec
jae
popa
xchg
fisttpll
in
mov
loope
pop
and
adc
or
and
cmp
cltd
cltd
fs
jle
in
mov
mov
inc
pop
sbb
adcl
lcall
dec
and
ja
mov
aaa
loop
push
xor
shrl
or
mov
mov
repnz
and
pop
adc
fs
lret
pop
jne
mov
inc
imul
jmp
jmp
inc
dec
inc
movsl
sbb
ss
xchg
xor
bound
mov
lods
sbb
inc
repz
mov
jecxz
pop
out
and
cmp
dec
mov
sub
aaa
add
sub
pop
in
stc
inc
icebp
mov
cmp
daa
stos
imul
divb
pop
addr16
and
pop
xchg
cmpsb
inc
inc
lds
pushf
xor
inc
inc
call
and
stos
xor
cs
inc
iret
push
mov
mov
repnz
and
cmp
mov
pop
jmp
dec
adc
stos
sub
in
lock
or
pop
inc
jb
mov
fcoms
test
je
fsub
mov
in
fsubl
mov
push
or
dec
inc
adc
mov
neg
fwait
push
xchg
fnsave
sub
imul
fdivl
xlat
jecxz
ret
fsubs
push
or
fidivrs
jb
test
ret
dec
cmpsb
mov
shlb
adc
rcll
aad
mov
inc
insl
hlt
incl
xchg
out
mov
leave
popa
dec
cmp
sbb
sbb
xchg
loope
es
shll
hlt
loop
push
fcomps
mov
sbb
sub
js
add
xor
pop
mov
inc
hlt
sar
mov
or
iret
add
push
jbe
outsl
xchg
test
xor
ja
pop
jp
cmp
cli
jg
jb
ja
in
sbb
push
inc
cmc
mov
call
mov
jne
jle
pusha
mov
test
push
fwait
popa
shll
mov
jge
pop
popf
pop
pop
hlt
xor
lods
dec
mov
push
add
icebp
adc
mov
add
pop
push
xchg
int
std
push
push
pop
pop
cmp
xor
push
cmp
std
pop
mov
dec
jne
not
and
or
mov
xor
mov
cltd
dec
mov
repnz
stc
xchg
push
mov
lods
sarl
fstps
roll
test
out
ret
cmp
push
cwtl
cmp
add
das
jo
aad
fstpt
out
push
mov
jge
pop
pop
sub
jl
xor
mov
add
pushf
add
iret
insl
xor
shrl
test
pusha
andb
jne
stc
rorl
dec
cmp
and
xor
scas
std
iret
outsl
aad
lods
lods
xchg
mov
sar
inc
jae
mov
jmp
mov
pop
pop
mov
decl
popf
push
arpl
cmp
sub
xor
add
imul
mov
aaa
das
inc
stos
stos
jbe
xor
loopne
lret
test
aaa
or
les
add
adc
les
call
adc
xchg
jmp
xor
stos
push
jge
xor
mov
movsl
sysenter
mov
push
sti
outsl
into
mov
fs
and
scas
adc
xor
in
scas
roll
jno
es
jnp
mov
out
mov
push
out
es
inc
mov
mov
mov
int
mov
divl
xlat
inc
mov
adc
fsubrs
loop
out
xchg
push
dec
outsl
inc
mov
push
lret
lock
jl
pop
dec
push
pop
xor
sbb
imul
pop
ficomps
lock
fucomip
pushf
lahf
in
cmpb
jmp
lcall
jne
lods
pop
and
and
push
scas
loopne
dec
dec
ss
jg
jmp
stc
sub
cld
xchg
fwait
mov
xor
xchg
jbe
idivl
in
scas
inc
xor
or
mov
xor
mov
cmp
cmp
dec
scas
push
popa
lea
cs
push
sbb
clc
mov
repnz
cld
cmpsb
cmp
xchg
test
je
sbb
push
or
insb
and
mov
movsl
add
aaa
mov
xchg
adc
cmp
dec
push
lds
sub
adc
ret
ret
pusha
shl
xchg
adc
xor
rcr
mov
pop
in
and
push
sbb
arpl
loopne
mov
or
and
ljmp
testl
fnsave
sub
loopne
ret
sarl
rcl
repz
js
mov
fistpll
jle
jb
sub
cmpsb
rcrl
mov
loop
xor
mov
test
xchg
sbb
inc
xor
sti
mov
jno
shl
sahf
mov
aas
mov
push
or
xchg
inc
sub
add
lods
mov
enter
out
xor
sub
pop
jb
popf
xor
idivl
xor
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
pushl
pushl
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
push
mov
xor
mov
movl
mov
mov
sub
add
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
jmp
xor
jg
mov
pop
ja
inc
mov
int3
jl
inc
pop
jl
outsl
testl
push
lods
mov
out
sub
pusha
out
inc
adc
dec
jbe
jle
mov
jmp
push
xchg
ret
mov
cmp
loop
sti
dec
pop
call
insb
inc
mov
es
and
call
mov
lock
cmc
mov
sub
sti
xchg
fcoms
mov
or
pushf
xchg
pushl
inc
sbb
in
add
xchg
cmp
movaps
add
xchg
stc
sbb
scas
daa
add
aas
loopne
xor
cmpsb
pop
mov
roll
jnp
push
mov
mov
mov
and
dec
bound
sbb
sti
mov
shl
scas
xor
outsl
and
dec
push
pusha
inc
dec
push
mov
dec
cld
fs
inc
fwait
sahf
jne
scas
cld
pop
cmp
popa
pushl
fistl
or
push
adc
jl
aam
push
pop
dec
jmp
sub
jge
pop
cmpsl
sub
into
popa
xchg
fcomip
dec
xchg
jbe
scas
insb
pop
scas
sub
pop
pop
gs
jno
pushf
sub
test
aas
mov
dec
int3
out
or
in
mov
aas
xor
idivb
test
adc
dec
lea
mov
jne
test
stos
js
xchg
mov
dec
push
xor
out
add
add
sbb
das
push
addr16
add
mov
mov
scas
pop
insl
sbb
sub
jbe
les
jmp
punpcklwd
xchg
iret
and
xlat
mov
cmp
outsl
fidivrl
pop
jnp
cmp
cld
cmpsl
xor
out
jns
inc
gs
fucomp
stos
mov
sub
shl
jbe
pop
sbb
cmp
xchg
ljmp
add
sub
out
jne
sbbb
mov
xor
icebp
pop
mov
sub
ret
lds
xchg
aaa
ss
cmp
pop
lahf
lods
test
jl
sbb
cmp
inc
insl
jg
and
ficoml
stc
cmp
mov
testl
scas
popa
mov
mov
ja
sbb
dec
dec
xor
or
roll
fsub
addr16
sub
dec
shl
ljmp
lret
in
cmp
inc
sbb
lock
std
and
jno
mov
sbb
add
cld
dec
mov
movnti
add
cmc
pop
into
xor
xchg
jns
out
inc
pop
jle
arpl
push
shll
pop
enter
inc
sbb
hlt
lahf
addr16
mov
mov
inc
fldl
aam
sbb
and
int
fs
adc
outsl
aam
data16
scas
jnp
rorb
push
stos
dec
orl
in
sub
addr16
xchg
notl
jle
fs
cmpb
cmp
push
and
sbb
mov
fisubrs
call
sub
and
notl
or
pop
pop
emms
in
int3
mov
mov
lods
mov
fldl
jno
test
xor
clc
mov
addl
fistps
fdivrl
imul
pop
or
mov
and
lahf
cld
mov
xchg
inc
dec
cmpsl
inc
movsb
jecxz
pop
ds
xchg
rcrb
jb
push
movsb
mov
aas
sbb
nop
cli
sahf
sub
data16
xor
mov
movsb
lods
insb
inc
mov
mov
stos
outsl
fldcw
push
push
xor
inc
cs
mov
movsb
pop
cmp
dec
sub
iret
mov
clc
pop
cmp
andb
iret
xor
xor
inc
adc
cmpsb
sbb
int
adc
in
xchg
xchg
leave
pop
imul
xor
bound
mov
shrl
dec
rcrl
fwait
test
xor
pop
faddl
in
add
mull
and
dec
loope
aam
jno
dec
push
les
pop
addr16
xchg
in
mov
mov
xlat
ret
insb
mull
cltd
and
imul
das
lods
push
sti
in
divb
repz
xchg
adc
lds
mov
aad
push
repz
lea
adc
xchg
sub
rcpps
push
cmp
incb
ror
inc
in
dec
adc
or
sbb
inc
in
fdivs
gs
add
hlt
and
sub
je
cmpl
pop
out
cmp
fldcw
add
les
das
mov
faddl
pop
push
sarb
mov
inc
mov
jne
rcrb
mov
outsl
sbb
lds
inc
in
pop
jbe
xchg
mov
lldt
rclb
ja
pop
in
sbb
add
lods
push
jmp
push
sub
mov
push
imul
andb
mov
adc
std
sbb
jecxz
pop
jae
push
mov
mov
mov
addl
fimull
mov
outsb
cmp
mov
and
sbb
pop
push
pusha
inc
in
xchg
es
fadds
lock
jno
mov
fmuls
push
inc
push
lods
insl
aas
shrl
mov
loop
pop
ja
nop
inc
xor
jmp
cld
pop
sarl
and
xchg
data16
int
xlat
std
aaa
dec
inc
inc
dec
sbb
popf
dec
adc
fidivrs
or
mov
inc
popa
sub
mov
nop
mov
into
xchg
cmpsl
cli
imul
add
jne
aaa
and
stc
aaa
xchg
popf
cs
out
push
lock
pop
arpl
xchg
nop
repnz
xlat
jl
lock
mov
jns
ret
dec
aam
mov
cmp
popa
cmp
repnz
aam
dec
adc
jae
pop
add
lods
fwait
insb
in
aam
adc
pop
pop
outsb
fidivs
or
jns
fsts
and
mov
pusha
mov
pop
out
in
xchg
pop
jmp
add
mov
fwait
and
xchg
adcb
fdivs
mov
xchg
ret
xchg
jmp
dec
test
ds
pop
inc
mov
sbb
fildl
seta
inc
cltd
ljmp
clc
xor
inc
ljmp
out
push
cmc
inc
inc
mov
or
pop
sbb
lret
out
shll
out
imul
or
cmp
xchg
test
js
inc
sti
and
add
jo
mov
pop
sub
cmp
mov
fstpt
dec
sbb
pop
xor
xor
add
push
mov
sbb
in
mov
dec
enter
gs
and
lds
fiadds
and
xor
cmc
mov
aad
and
aam
clc
xchg
mov
pusha
mov
push
and
jg
ja
call
mov
sub
dec
into
sub
pop
cltd
or
mov
shrb
adc
mov
and
jb
jg
loopne
bound
mov
arpl
repz
mov
jecxz
mov
cs
iret
mov
mov
push
push
aam
mov
and
pop
aam
lret
cmc
ret
sbb
inc
es
leave
jno
sub
cltd
mov
mov
xor
adc
lcall
push
inc
jmp
mov
mov
and
mov
in
pop
jae
mov
mov
mov
jge
cmpl
inc
in
cmp
arpl
test
adc
push
sub
loopne
scas
jp
ret
mov
mov
dec
cmp
andb
adc
int3
sbb
xorl
inc
int
pusha
mov
fst
inc
in
pop
data16
sti
adcl
ja
fists
inc
shlb
adc
sbb
loopne
ror
test
pop
push
shll
imul
nop
inc
pop
mov
jae
cmp
lret
add
and
jecxz
hlt
push
outsb
mov
fcoml
pushf
sub
movsl
mov
or
xchg
test
movsl
push
scas
insb
test
inc
xchg
shlb
push
aaa
jle
cwtl
mov
in
adcl
lahf
sub
fdivrl
add
push
mov
mov
push
loop
jne
xchg
leave
daa
das
add
dec
sbb
add
fisubrl
lods
out
test
push
or
js
cmp
push
push
mov
scas
xor
into
xchg
aaa
sbb
ja
pop
in
das
sbb
fsubrl
adc
or
mov
aas
in
and
xchg
xchg
frstor
out
es
jne
loope
ljmp
dec
xchg
mov
int3
fs
cmp
rolb
mov
push
repz
jnp
loop
cmp
das
or
xor
enter
pop
jo
iret
pusha
and
mov
xlat
xchg
sarb
insl
pop
rcrb
adc
aas
push
inc
push
loope
adc
out
push
jne
pushf
dec
pop
xchg
sub
pop
sbb
mov
or
scas
lds
outsb
aas
push
test
xchg
sub
mov
popa
aad
jge
jo
xchg
adc
rcrl
jne
cmpsl
jno
sbb
sti
mov
scas
shrb
sbb
in
sbb
popf
inc
xor
cmc
add
push
int3
mov
cli
pop
dec
data16
or
jnp
jnp
mov
in
outsl
jb
add
cli
push
nop
jl
cmp
inc
fcompl
scas
xchg
adc
int
fsubr
push
mov
adc
in
in
cmp
in
je
fisttpll
popf
das
push
jns
lret
xor
push
xor
jp
xchg
mov
outsl
aam
popa
outsl
outsb
bound
add
out
movzbl
ret
jecxz
test
mov
push
cmc
adc
push
xorl
dec
jp
aaa
jl
cmp
dec
test
adc
iret
aaa
and
sub
std
cld
pop
mov
in
outsb
mov
dec
ficompl
jne
inc
jmp
pop
add
dec
adc
and
test
shlb
adc
dec
xchg
inc
out
dec
or
push
jge
and
iret
jecxz
test
cmp
in
pusha
stos
flds
inc
std
arpl
dec
xchg
incl
pop
xchg
add
mov
sub
into
pop
cmp
outsl
js
enter
les
orb
sarl
xor
shlb
subl
mov
mov
ret
push
movsl
arpl
mov
pop
mov
das
or
aam
xchg
xchg
fcmovnb
inc
mov
dec
and
mov
and
push
jo
je
mov
lods
adc
stos
jmp
dec
sub
xor
sbb
ror
cmc
les
push
stos
ja
js
nop
sub
or
or
push
fistps
cmp
lcall
and
cmpsl
adc
pusha
fiaddl
lods
jp
jne
cmp
int
xor
jg
imul
cmp
jno
outsl
bound
jmp
movsl
mov
push
mov
fwait
iret
in
xlat
stos
push
scas
in
jmp
sbb
into
cltd
sahf
daa
in
test
cmpsb
pop
pop
dec
push
aaa
jae
push
cmpsl
inc
jne
movsb
pop
fwait
cmp
and
mov
or
ljmp
loop
adc
inc
jne
leave
sbb
push
sub
mov
hlt
mov
xchg
sub
add
cli
jmp
leave
cli
lds
rcl
insb
jle
xor
xchg
and
mov
test
adc
test
mov
ret
jp
add
xchg
enter
push
and
adc
push
mov
adc
push
ss
lret
xor
insb
inc
daa
out
jge
clc
shlb
push
pushf
pop
jo
cmp
mov
mov
lret
sahf
int3
lret
adc
jne
push
lcall
and
movsl
imul
clc
push
add
adc
push
jecxz
inc
lods
pop
imull
xchg
mov
add
pop
popa
in
out
test
pop
ss
orb
mov
mov
push
mov
sbb
mov
imull
push
jno
dec
ret
mov
dec
daa
outsl
aam
in
std
pop
xor
push
in
popa
aad
or
popf
xlat
mov
leave
divb
stos
in
dec
sbb
jo
dec
adc
movsb
jmp
divb
sahf
dec
scas
jmp
pop
jecxz
push
mov
mov
push
in
dec
gs
shll
mov
fucom
jb
sbb
orb
test
and
out
inc
rcr
iret
insl
out
lods
popl
sbbl
xlat
and
lcall
or
cwtl
dec
fbstp
dec
jno
out
mov
je
sub
rcrb
xchg
andb
fdivs
cmp
cmc
or
ret
dec
cmc
jle
insb
icebp
inc
xor
mov
fstpl
movsb
dec
sbb
leave
sbb
int
daa
mov
ss
popa
pusha
xchg
shrl
xchg
mov
lea
cmpsb
jnp
sbb
and
mov
sub
and
xchg
in
test
push
xor
mov
lock
cmc
pop
imul
pop
aaa
mov
sbb
push
mov
dec
and
aam
jne,pn
and
div
into
push
adc
jno
cmp
aaa
test
sbb
addb
out
push
scas
int
in
scas
cwtl
cmp
loop
aas
jle
sub
in
sbb
add
pusha
inc
sbb
inc
mov
ret
inc
mov
jns
mov
sbb
cli
adc
icebp
mov
mov
lock
notl
add
insb
ss
rcr
fs
dec
iret
int
int3
xor
and
lds
stos
jae
inc
loop
mov
je
push
and
pop
mov
rolb
pop
jmp
fistpll
push
xlat
mov
lea
lcall
and
out
xchg
xor
push
popf
lahf
inc
push
push
push
das
inc
shll
int3
inc
test
adc
les
pop
or
push
lcall
clc
mov
xchg
mov
js
fiadds
jl
jle
iret
add
or
xchg
cmpsl
push
and
dec
leave
mov
mov
push
jb
inc
push
jle
or
adc
call
test
sub
int
in
cld
dec
sbb
std
cltd
jge
jge
into
cwtl
inc
in
fcoms
sub
inc
iret
jne
scas
push
test
sub
lahf
imul
push
and
mov
xchg
gs
push
cmp
and
movsl
loop
mov
inc
jno
test
xchg
in
jg
lods
jae
and
jmp
jmp
fldl
cmp
in
aaa
divb
mov
push
or
in
ss
mov
inc
add
outsl
movsb
jb
mov
stos
or
mov
imul
dec
cwtl
loop
mov
stc
std
imul
pop
int
dec
loopne
pop
adc
cmp
andb
shll
xchg
adc
or
dec
jp
adc
mov
iret
adc
insb
inc
repnz
flds
adc
xor
fnstsw
adc
push
scas
push
jns
push
orl
jns
sbb
adc
addr16
pop
lahf
out
jg
and
rcr
mov
xor
sub
mov
rol
mov
and
subb
dec
fxch
xchg
cmc
test
add
lcall
add
xlat
cmp
or
mov
add
movsb
test
popf
gs
xlat
out
jnp
adc
fmull
notb
dec
test
pop
lods
push
jbe
pop
inc
and
sbb
cmp
jg
push
jb
test
sbb
inc
xchg
mov
in
jp
loopne
jae
dec
xor
mov
xchg
cwtl
cli
xor
mov
mov
pop
sub
lock
xor
je
test
leave
and
pushf
cmp
mov
ficoml
test
in
push
sub
sub
cmp
in
andb
xchg
clc
scas
mov
xor
sbbl
cli
lret
dec
test
sbb
pop
push
sub
push
sbb
cmpsl
and
inc
add
push
jge
incl
clc
js
xchg
jecxz
js
xchg
hlt
in
pop
xor
pop
fwait
nop
cvtps2pd
add
arpl
stos
mov
lods
push
enter
pop
bound
inc
push
imul
shl
fs
lret
xchg
pop
cmp
dec
sub
or
push
jecxz
push
lahf
jle
jmp
and
cmpsb
orl
je
inc
push
sbb
xchg
xchg
mov
push
sbb
mov
xchg
rclb
popl
cld
jg
subl
rcrb
fidivs
cmp
push
mov
sbb
bts
xchg
mov
popa
cwtl
and
fldt
cmp
mov
in
dec
mov
loop
repz
cltd
xchg
fwait
aam
leave
leave
lret
xor
lea
pop
xchg
popf
stos
clc
pop
mov
inc
adc
push
jp
daa
dec
ds
mov
int3
lret
jns
xor
int
popa
jno
lods
cmpl
out
inc
mov
push
loop
adc
enter
push
mov
push
movnti
iret
or
xchg
push
int3
jno
fisubs
cwtl
imul
fdivrl
daa
in
add
stos
xor
push
inc
sub
aaa
add
xlat
push
rcll
push
inc
adc
in
es
out
jb
mov
leave
xor
pop
xor
int
xchg
pop
int
sbb
or
add
insb
insb
mov
pop
jmp
xor
and
adcb
sbb
cld
push
xor
pop
sub
cwtl
add
dec
sub
sbb
stc
inc
xchg
mov
clc
arpl
dec
ljmp
scas
mov
outsl
pushl
loop
mov
movsb
test
sub
pusha
das
enter
xor
aaa
jl
or
xor
jno
std
dec
jne
jo
test
adc
ds
out
idivl
das
sbb
mov
mov
push
add
ja
mov
stc
lock
stos
jb
aaa
outsl
jnp
cld
add
dec
jp
cmp
imul
cmp
mov
mov
jge
fsubrs
ja
in
shl
or
add
jp
adc
push
xlat
gs
xor
sbb
sbb
inc
xlat
mov
cmp
dec
aas
lock
sbb
xor
aas
sar
callw
divb
mov
int
popf
sub
mov
icebp
clc
dec
xor
mov
insb
sbb
push
push
shrb
testl
mov
push
inc
dec
xchg
les
aas
mov
fldt
pop
sub
and
stos
insl
sub
fs
movsl
mov
ret
imul
bound
add
aad
dec
lret
sti
jne
adc
pop
add
in
or
insb
jo
aam
ret
adc
xchg
dec
pop
and
sti
jae
repnz
icebp
xor
mov
mov
enter
mov
clc
repnz
mov
pop
popf
jmp
push
and
les
jmp
std
nop
dec
dec
mov
push
aaa
test
fnstsw
and
inc
int3
test
daa
in
fildll
es
pop
testb
cld
adc
stos
ror
pop
idivb
sbb
test
or
jno
inc
mov
adc
mov
sub
iret
mov
lods
cwtl
mov
jp
les
xor
add
icebp
in
insb
loope
bound
rclb
add
scas
mov
icebp
mov
pop
jg
mov
or
rolb
ret
xor
lds
sub
or
sub
jmp
inc
out
cmp
js
cmp
test
insl
push
cmp
lds
mov
sar
int3
lret
xchg
push
jge
sbb
add
aad
add
ds
in
pop
xchg
addr16
adc
mov
sbb
into
xchg
lock
inc
stos
mov
pop
loope
mov
aaa
es
fisubl
sub
xor
bound
lea
iret
stos
imul
xchg
xchg
and
inc
cmp
push
js
sub
sub
add
in
cld
test
ljmp
out
in
lea
push
fisubl
or
call
push
pushf
les
in
push
lods
inc
aam
test
repz
mov
xchg
ret
jbe
les
pop
popa
mov
sub
lea
loope
mov
fdivr
adc
push
pop
out
adc
mov
jg
lods
dec
cmpsb
jne
and
push
aas
imul
push
and
repnz
movsl
inc
mov
jne
fwait
pop
stc
fs
stos
xchg
push
in
mov
mov
inc
popf
xor
xor
jmp
dec
shl
and
inc
inc
lcall
mov
in
das
shlb
xchg
xor
xor
xchg
xchg
mov
or
mov
imul
jle
mov
ret
cwtl
and
test
mov
loopne
jl
cmpsb
jmp
pop
xor
dec
aaa
xchg
call
iret
test
inc
or
gs
ss
rol
dec
or
xchg
jns
xchg
inc
mov
cld
sub
pop
fdivrp
fstpt
lret
push
jno
stos
add
pop
cmp
cmpsb
jnp
fidivl
stos
test
and
aad
ret
outsb
xor
icebp
cmpsl
neg
scas
xchg
adc
cs
mov
xchg
cmp
out
sub
pushf
pop
adc
ljmp
sti
dec
icebp
sub
out
sub
or
in
dec
xchg
mov
xchg
cwtl
into
cmpsl
push
arpl
cmp
jcxz
xchg
gs
call
push
add
shrl
sub
xor
sub
ja
adc
clc
mov
xlat
fmul
dec
shl
mov
std
gs
sbb
sub
repz
out
cmp
add
cmp
popf
into
test
adc
fiadds
sub
clc
jle
add
add
inc
adcl
sahf
sub
test
ffree
fsubs
or
xchg
subb
fsubrl
jmp
dec
out
mov
test
andl
dec
pop
cld
inc
lods
hlt
push
xor
inc
adc
pop
je
inc
xchg
cmc
jne
loop
loopne
dec
lahf
fwait
pop
mov
mov
aad
imul
inc
sub
addb
dec
mov
xchg
add
adc
loope
aam
cwtl
lret
repnz
mov
push
push
add
stos
sub
sbb
mov
sub
stos
jmp
aam
pop
sahf
xchg
cmp
mov
test
repz
dec
and
lahf
and
xchg
pop
mov
push
inc
push
jmp
das
sarl
ljmp
push
fneni(8087
mov
clc
xor
mov
add
mov
xor
and
mov
in
movsb
cld
iret
or
sub
mov
mov
push
std
inc
adc
sbbb
mov
sub
jb
inc
jecxz
xchg
sub
adc
xchg
cmp
repz
mov
and
xor
pop
add
aas
adc
inc
daa
lea
insl
andb
inc
sub
jno
push
dec
mov
leave
push
push
negl
sbbb
or
in
stos
jmp
jo
sbb
sbb
movsb
pop
lock
cmpsb
ret
mov
jp
jge
dec
sbb
jle
xor
xlat
mov
scas
mov
pushf
ja
in
xchg
mov
adc
call
int
add
jg
iret
inc
sarl
pop
xor
fadds
jo
pop
lock
push
int3
push
enter
out
cmp
mov
mov
out
es
sbb
cmc
mov
sti
arpl
adc
adc
pop
stos
and
icebp
aas
lods
and
cmpsl
aad
in
enter
lods
add
dec
lods
ret
mov
add
pop
cwtl
pop
sub
xchg
mov
iret
sbb
mov
fiaddl
rorb
xchg
add
adc
lock
aas
jg
fcompl
fsub
push
sub
and
jb
adc
out
mov
lahf
sub
insl
loop
or
sahf
mov
add
lret
outsl
notl
cmp
int3
mov
inc
jbe
push
xor
push
lcall
cwtl
jge
fisttpl
mov
sarb
stos
movsb
inc
inc
push
dec
sub
cmp
js
xor
inc
jl
leave
xor
call
jmp
inc
stos
leave
cli
jnp
sbb
xchg
fwait
sbb
shrb
push
fwait
imul
mov
xchg
xchg
or
pop
mov
and
stos
mov
imul
jns
dec
in
mov
mull
sub
push
lahf
sbb
pop
mov
pop
or
mov
in
xchg
and
daa
sti
pushfw
pop
gs
xor
push
xchg
out
movsb
es
cmp
mov
repnz
outsl
fwait
adc
ret
in
cmp
cmpsb
and
les
push
cmpsb
dec
xchg
xchg
popf
mull
xor
dec
mov
rcrb
mov
mov
push
cmpsb
and
mov
stos
lds
mov
aaa
aaa
add
mov
scas
out
lret
lret
sbb
xchg
call
out
scas
in
jbe
clc
add
scas
in
push
out
mov
push
and
mov
push
mov
loopne
inc
ljmp
in
sbb
bound
movsl
inc
jle
or
cmpsb
sbb
xchg
lahf
ret
shll
aaa
inc
sub
cli
jg
pop
jae
outsb
out
into
sahf
mov
sbb
and
js
xchg
ficomps
or
aaa
cltd
pop
mov
push
dec
mov
or
pop
in
int3
sub
notb
pop
orb
int3
lret
pusha
out
imul
testl
movsw
or
mov
xchg
adc
mov
orl
cwtl
rolb
pop
cmpsb
sub
rolb
or
push
lods
cmp
and
pop
and
mov
inc
stc
cwtl
mov
sbb
hlt
mov
sahf
jge
mov
pop
xchg
sti
lret
outsb
inc
call
outsl
filds
inc
insl
rcl
xchg
inc
inc
push
pop
push
pop
or
imul
testb
push
mov
jnp
repnz
pcmpgtd
out
and
cmpsl
sbb
sub
mov
imul
mov
out
aaa
inc
jbe
xchg
mov
xchg
dec
xlat
addr16
repz
hlt
dec
mov
cmc
in
jno
imul
dec
mov
inc
jne
xchg
fs
divl
dec
inc
and
lea
lcall
sbb
push
mov
jnp
ljmp
add
cwtl
insl
xor
imul
mov
fnsave
fs
xchg
fwait
mov
cmp
sbb
pop
negl
add
sbb
loope
enter
mov
fsub
testl
pop
xchg
addr16
aam
mov
in
inc
pop
sbb
sub
pop
mov
jge
cmp
mov
mov
popa
push
icebp
fnstenv
mov
fnsave
movsl
in
orb
dec
loope
or
es
jge
pop
inc
js
pushf
loop
adc
out
and
cmp
dec
in
outsl
cmp
sub
ds
pushf
test
xchg
add
mov
lods
mov
lods
inc
imul
jo
inc
push
cmp
hlt
adc
cmp
push
mov
dec
out
add
ret
fimull
mov
sub
ja
xchg
aas
push
dec
repz
sub
push
push
push
and
js
sti
and
test
cmp
inc
repnz
cmp
out
stos
movl
hlt
daa
das
xor
test
mov
jb
aas
xchg
inc
mov
nop
jo
and
sub
jmp
push
outsb
push
ret
cmp
xor
push
int
xchg
ds
outsl
push
adc
lcall
outsl
jns
adc
mov
xchg
sbb
sbb
inc
inc
out
jl
cmp
enter
pop
cmp
pop
push
fs
icebp
mov
lret
dec
or
ffreep
cmpsl
jl
aad
xchg
lret
push
jbe
in
out
mov
mov
mov
and
in
adc
or
lds
jp
js
adc
hlt
sub
and
pop
loopne
cmp
mov
ljmp
loopne
inc
dec
push
aam
popa
enter
and
dec
mov
int
mov
mov
movsb
lret
test
ljmp
add
xchg
jbe
mov
cmp
cld
adc
adc
and
adc
push
push
jbe
xor
adc
xor
repz
push
inc
dec
xchg
test
mov
sub
cwtl
mov
inc
xchg
pop
into
leave
arpl
jmp
filds
cmp
inc
scas
nop
mov
push
xor
sbb
lcall
mov
mov
push
outsl
cmp
outsb
jecxz
imul
stos
mov
adc
imul
xchg
sbb
mov
adc
or
stos
sbb
pop
stos
movsb
adc
pop
lds
call
sub
movb
adc
and
cmp
cmp
mov
out
stc
xchg
stos
jecxz
popf
pushf
not
test
jge
leave
cld
call
xchg
out
jb
mov
add
stos
push
bound
pop
out
cwtl
ljmp
cmp
pop
xlat
jl
pop
aaa
in
pop
mov
iret
push
cmp
adc
int
xor
dec
fs
sub
mov
mov
xor
mov
leave
fsub
mov
dec
std
aas
mov
push
adc
mov
iret
out
and
or
fisttpl
dec
lock
in
enter
jecxz
push
fnstsw
mov
scas
lods
fnstsw
sbb
adc
lcall
mov
testb
addb
movb
xor
adc
jo
xchg
xor
iret
pusha
sub
add
loopne
movsb
push
jae
cmc
sbb
push
into
jl
lock
neg
dec
leave
mov
pop
adc
cmp
xchg
adc
inc
js
sub
in
dec
cwtl
dec
jmp
popf
je
add
push
push
imul
mov
mov
cmpsb
sbb
cmp
xlat
decl
dec
push
jnp
pop
inc
xchg
movsb
add
inc
sub
push
cmpsl
cmp
ds
cmpsb
push
mov
leave
push
inc
out
pop
cs
popf
mov
xchg
and
sub
xor
fs
fsubr
jne
jnp
adc
xor
fdiv
mov
insb
jae
sub
lds
lret
test
pop
jnp
pop
cmpsb
test
or
pop
pop
test
jae
fpatan
inc
and
in
push
inc
std
xor
cwtl
scas
pop
sarl
push
jge
cmp
dec
mov
sub
pusha
push
andl
ja
std
push
inc
nop
pop
jbe
adc
jne
xor
lods
in
sti
leave
jl
cld
pop
cli
dec
js
cltd
sahf
rcll
add
mov
push
mov
pop
mov
or
xor
adcl
mov
orl
add
or
movzwl
mov
xor
movb
lea
and
mov
mov
mov
xorl
xor
sub
addl
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
decl
push
mov
mov
mov
sub
xor
inc
mov
addl
push
orl
add
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
movl
jb
mov
xor
add
jmp
sub
mov
add
mov
xor
sub
mov
xorl
add
movzwl
mov
mov
sbbl
movzwl
xor
adcl
add
mov
movl
mov
inc
mov
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
or
mov
neg
xor
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
xor
sbbl
add
mov
movl
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
xor
mov
sub
or
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
xor
movzbl
sub
mov
add
movl
mov
mov
mov
je
orl
mov
mov
andl
xor
jmp
test
jno
cmc
jo
mov
scas
jl
inc
pop
jl
jne
imul
jp
orl
or
lret
push
mov
push
repz
mov
xchg
push
mov
fisttps
pop
push
or
and
sarb
sbb
jnp
push
pop
and
lods
jbe
mov
adc
ficoms
scas
mov
outsb
in
cmp
pop
dec
cvtpi2ps
into
mov
addl
sbb
jbe
sub
insl
push
mov
add
test
scas
int3
mov
xor
xor
fwait
imull
push
jns
pop
mov
mov
fildll
clc
adc
xchg
xchg
push
push
mov
add
daa
push
rclb
scas
out
add
lods
jbe
xchg
loopne
fildll
xchg
jp
outsl
dec
cli
and
or
rcl
or
std
mov
jae
mov
cmp
bound
test
mov
rorl
xchg
lahf
jmp
sbb
sub
ret
sbb
popf
into
dec
in
shl
jecxz
popa
cmp
js
mov
cmp
dec
cmp
cmc
mov
pop
jecxz
push
mov
push
mov
hlt
lahf
mov
test
movntps
es
orb
test
pop
adc
imul
sub
or
fdivl
jns
inc
pop
fwait
aad
popf
fstpt
cmp
cmpb
sbb
lods
adc
cmp
jne
or
dec
mov
addl
stos
jmp
sti
mov
shlb
cmp
push
ljmp
in
in
xor
les
outsl
into
hlt
les
mov
lcall
hlt
out
sub
cmp
in
mov
jbe
push
lock
insl
fnsave
push
lock
ret
insb
js
sbb
pop
daa
outsl
xor
leave
lret
movsl
aad
xchg
scas
jecxz
dec
pop
mov
lods
rcrb
loope
js
xor
push
and
in
add
test
adcl
sbb
stos
cmp
lret
lds
inc
cmp
lds
cmpsl
repnz
es
leave
pop
inc
pop
andl
xchg
icebp
dec
lods
insl
std
jecxz
dec
xor
mov
push
mov
mov
sbb
cmp
insb
shll
xchg
lods
test
pushf
sbb
xchg
negl
pop
fistpll
sahf
je
xor
jle
jb
stos
cwtl
subl
popf
loop
addr16
dec
dec
inc
fistps
jo
pop
in
xbegin
into
sahf
inc
xchg
lea
add
cli
lahf
cmp
jae
pop
add
fwait
dec
jle
jns
xchg
call
movb
rcrb
xchg
xlat
daa
jg
mov
sbb
bound
sbb
mov
cmp
jl
in
imul
std
jmp
push
nop
pop
adc
sarl
jg
test
lods
stc
fldenv
ds
fists
loope
add
lods
je
lods
adc
stos
ds
pop
out
pop
xor
mov
jbe
inc
xor
addl
adc
push
push
ss
xchg
sub
pop
xor
jle,pn
sbb
aas
and
and
cmp
pusha
out
and
inc
add
mov
fldl
jle
pushf
std
jno
sub
push
loope
cmp
aaa
lcall
push
cmp
inc
test
pop
add
lret
push
dec
push
push
mov
les
lods
or
inc
ret
cmp
or
out
out
orl
mov
adc
cmp
in
sbb
cmp
sahf
adc
pop
mov
sub
lods
sub
iret
pop
stos
nop
loop
cld
stc
fisttpll
mov
mov
js
movsl
mov
icebp
jge
jae
call
imul
and
imul
ret
insl
dec
xchg
jl
int
test
sbb
pop
sbb
push
pusha
add
aam
adc
movsb
cmp
or
scas
aad
enter
pop
in
add
leave
ljmp
jbe
enter
mov
push
sub
xchg
in
xor
scas
push
cmpsb
unpckhps
dec
mov
lods
out
pusha
push
pop
xchg
sub
out
int3
test
add
jg
repnz
daa
jg
mov
inc
jnp
add
push
sub
pusha
outsl
mov
pop
lods
push
mov
cld
push
icebp
xchg
test
add
nop
push
stc
rolb
and
leave
cs
mov
in
loop
sti
jmp
sbb
mov
fstl
jns
call
sub
je
xchg
test
les
sub
inc
mov
cmp
fldl
call
cmp
cmp
dec
insb
in
adc
lods
mov
loopne
ret
stc
mov
movsb
ljmp
inc
jae
lcall
mov
outsb
mov
mov
loopne
sbb
add
sarl
fdivrl
es
popf
fdivl
cmc
lods
lods
out
cmp
xor
enter
repnz
pop
pop
jg
inc
imul
pop
mov
xlat
xchg
rorl
js
mov
push
loop
sbb
bound
push
out
loope
xchg
jecxz
enter
xor
sahf
jecxz
xor
cmp
and
inc
fadds
pusha
test
addr16
inc
mov
in
adcb
outsb
popf
aad
shl
cltd
mov
or
cmpsl
push
sbb
or
jp
shlb
add
push
push
aaa
lods
call
ds
mov
mov
push
jecxz
imul
inc
hlt
enter
add
loop
int
xor
mov
push
not
cmp
mov
adcl
cli
loope
mov
and
sub
sbb
push
xchg
sbb
push
inc
hlt
pop
cwtl
sbb
sub
call
out
in
push
push
mov
hlt
push
idivl
cmp
fwait
out
rcrb
pop
test
or
inc
popa
in
mov
add
add
push
hlt
mov
sub
into
inc
sub
ja
push
shll
sbb
push
pop
jl
jp
adc
outsb
inc
dec
add
push
stos
adc
aaa
movsl
jb
fdivr
xor
fwait
imul
mov
adc
xlat
add
aaa
es
cmp
sbbb
pop
cmp
mov
lods
movsb
ljmp
out
dec
popf
add
shlb
sbb
div
mov
mov
xchg
insb
in
cld
lds
nop
repnz
push
and
sub
iret
mov
scas
outsl
add
in
add
or
pop
repnz
aam
mov
int
push
outsb
dec
dec
mov
push
nop
or
fimull
push
sahf
les
and
inc
xchg
jnp
orl
scas
inc
pop
xor
push
cltd
cmc
pop
inc
js
xchg
bound
out
inc
jo
out
push
outsl
test
mov
call
incl
sar
fnstenv
imul
push
push
inc
lcall
pop
xchg
pop
pop
addb
and
out
push
mov
cmp
divb
jp
mul
mov
push
fsts
inc
pop
movsl
pusha
out
fucomi
lods
pop
sbb
fisttpll
add
xchg
jo
lods
shrl
pop
pusha
test
xchg
push
xor
push
jne
movsb
stc
or
daa
mov
xchg
and
add
xchg
imul
inc
aas
enter
xor
daa
sarb
or
sbb
xchg
mov
lea
pop
and
mov
mov
xchg
xorb
mov
mov
mov
loope
aas
add
push
in
call
dec
fisttpl
cltd
mov
mov
push
ds
jae
je
out
sbb
cwtl
cltd
scas
dec
jmp
push
out
mov
mov
pop
add
xchg
and
inc
outsb
pushf
inc
push
ror
inc
inc
divb
ret
testb
xlat
jl
push
dec
mov
int
mov
mov
imul
mov
insb
orl
in
fisubrs
lret
cmp
fiaddl
neg
stc
and
jecxz
or
scas
dec
aam
jb
cmp
fsubl
dec
sub
jne
xor
adc
ss
pop
xchg
cmp
jbe
jno
inc
ret
xchg
mov
adc
fbld
in
pop
lock
mov
mov
adc
dec
mov
shll
sub
lods
jp
outsb
pusha
es
or
movsl
lds
add
cmpb
call
sbb
push
in
inc
xchg
push
and
and
xchg
pop
xlat
push
cli
aam
mov
adc
jecxz
loop
ret
fdivp
outsb
cmc
jg
fiaddl
mov
sbb
push
cmp
into
xor
std
in
sub
or
das
pusha
pop
mov
clc
stos
and
push
sub
cs
lcall
repnz
insl
dec
ds
sbb
shll
fcomi
fdivrs
sub
push
dec
pusha
adc
out
lcall
cmc
jmp
pop
mov
push
leave
mov
pop
jb
out
sub
jecxz
repz
sbb
xorl
dec
mov
insl
scas
stc
pop
sarb
add
test
push
xor
add
aam
aaa
pop
sub
leave
mov
fcmovne
out
jno
cld
jno
push
pop
arpl
jmp
sbb
stos
pop
popf
xchg
mov
fistpll
or
dec
xchg
add
leave
push
sub
fwait
dec
test
call
jns
cmp
lock
mov
adc
dec
sbb
lahf
fwait
cli
ss
loop
mov
nop
mov
orb
and
or
or
mov
push
popa
xor
xlat
lret
jbe
mov
cmp
cmpsb
sbb
dec
test
and
stos
fwait
mov
jmp
pop
decb
pushf
popf
xchg
sub
sub
lods
pop
jb
test
adc
jae
inc
sub
cmc
adc
loope
pushl
repz
push
outsb
push
and
aad
stos
inc
sub
shlb
js
push
push
ret
adc
push
xor
test
inc
dec
mov
mov
ret
lcall
and
stos
jno
dec
loope
mov
insl
daa
and
jp
xchg
insl
das
mov
les
or
adc
cmp
mov
in
xchg
pop
lods
fdivl
fidivrs
cltd
fsubl
mov
inc
push
test
andb
cmp
loop
sahf
mov
dec
mov
pop
jae
std
pusha
out
aad
outsl
outsb
or
adc
aam
pusha
inc
ljmp
add
sbb
xor
sbb
movsb
sbb
nop
jmp
jg
test
xchg
scas
or
xlat
sti
popf
bound
daa
int3
xchg
push
test
jecxz
pusha
aaa
fwait
dec
loope
push
cmp
push
sub
mov
int3
xchg
adc
sub
jg
dec
or
bound
and
test
mov
push
movsl
and
icebp
leave
ljmp
mov
xor
les
pop
call
stc
pushf
shrb
cmp
repz
and
or
mov
sbb
in
pop
cmpsl
dec
icebp
fistpl
nop
mov
aad
sbb
fldenv
xor
xchg
xchg
pusha
stos
bound
push
xlat
cmpsb
xchg
jno
xchg
or
sub
inc
aam
ret
dec
mov
testl
push
jp
xchg
jo
jecxz
lods
lods
out
addr16
sbb
fstpl
rolb
cmp
mov
mov
and
clc
mov
les
js
out
xor
outsl
xchg
movsl
fidivrs
lock
incl
aad
push
sub
pop
stos
adc
les
lds
xchg
adc
and
sbb
outsb
cwtl
out
outsl
gs
cmp
ret
lret
sub
mov
ficoml
daa
cmp
jge
aas
sbb
xchg
out
push
dec
mov
push
and
lahf
outsl
movsl
mov
push
arpl
cmp
outsb
hlt
loope
xchg
icebp
mov
push
jp
imul
sbb
loope
loopne
dec
jmp
and
jne
and
aad
push
lea
scas
sbb
cmp
add
jb
test
nop
xchg
out
xchg
mov
negb
test
in
adc
xchg
dec
xchg
in
cltd
pop
loop
je
aaa
jns
enter
test
int3
inc
lcall
cwtl
xor
enter
push
mov
mov
add
add
cmp
pop
pop
std
cli
or
into
jno
mov
cmpsb
mov
cltd
sbb
xchg
popa
jb
push
fldcw
fadd
ret
addr16
xor
fnsave
in
or
mov
data16
lock
int3
out
sarb
mov
jns
iret
pop
xor
cltd
adc
sub
xchg
test
sarb
sahf
gs
icebp
ret
aam
int3
inc
cmpsl
or
cmp
insb
jmp
push
xchg
in
pop
in
es
popa
pop
test
loopne
lock
cmp
and
or
mov
jns
pop
jbe
mov
cmp
stc
jmp
xor
pop
fsub
xchg
and
das
mov
lahf
test
decb
push
sbb
jl
sub
add
data16
jl
lcall
int
std
int
mov
add
add
lea
jmp
and
and
jmp
inc
xor
inc
jg
mov
push
cltd
cmp
aad
dec
or
dec
insb
jecxz
mov
push
in
aam
mov
push
shlb
or
rclb
das
ret
icebp
cmpsb
das
add
pop
pop
sub
pop
push
ljmp
loopne
aaa
adc
pushf
sub
or
sahf
hlt
sub
dec
daa
cs
jnp
add
sbb
mov
or
out
xchg
mov
dec
inc
gs
push
pop
mov
sbb
mov
push
dec
pop
sbb
inc
in
fnstcw
mov
mov
aam
imul
aad
add
loope
das
adc
iret
inc
push
out
pushf
adc
add
lock
or
push
imul
inc
test
pop
jae
push
pop
cltd
call
faddl
popf
pusha
cmc
stos
dec
push
lods
push
pop
sbb
out
sbb
jg
xchg
hlt
xlat
rcrb
test
pop
movsl
mov
int
addr16
fcompl
mov
xor
xor
mov
mov
adc
mov
int
neg
add
bound
and
pop
in
jmp
outsl
dec
mov
arpl
mov
in
lds
sbb
xchg
xchg
sub
out
mov
or
inc
inc
movsl
jo
jo
mov
arpl
mov
gs
xor
mov
push
jg
imul
xchg
mov
es
pop
das
mov
adc
ja
add
jae
test
xchg
and
aas
fs
add
js
add
hlt
push
popa
jp
and
lods
js
and
adc
cmp
sub
cmpsl
int3
xor
mov
dec
mov
xchg
mov
cmc
stos
xchg
loopne
addr16
out
repnz
add
add
divl
push
sbb
add
rorb
cmc
inc
int3
or
add
lods
ret
sarl
xor
add
sbb
xor
adc
push
das
sbb
xchg
shlb
sbb
lahf
xchg
sub
stc
orb
push
adc
test
ffree
lea
mov
push
inc
rorl
sti
add
xor
cli
shlb
std
insl
xchg
xchg
or
mov
es
or
stos
nop
fwait
aam
jmp
jbe
adc
repnz
loope
or
inc
gs
call
push
aaa
dec
xor
lods
aaa
out
movsl
xor
mov
sarb
xchg
add
lahf
fwait
addr16
mov
fcmovu
rcll
dec
cmc
sahf
push
push
jnp
ljmp
loope
push
fildll
cmpl
repz
sub
dec
xchg
sbb
ficomps
pushf
gs
lahf
and
test
aam
jo,pn
push
dec
popf
outsl
push
div
xor
adc
shr
ja
and
jle
mov
jle
mov
and
int
bound
imul
scas
inc
daa
pop
dec
aam
lock
xchg
mov
test
out
cmc
in
fidivrs
test
mov
dec
pop
push
xlat
clc
dec
loope
lahf
cmp
fnsave
pop
mov
push
fisttpll
mov
and
stos
cmpsl
adc
xchg
cwtl
lds
popa
orb
cmc
cwtl
es
or
sub
push
hlt
mov
lret
sbb
add
cmpsb
xor
cmc
loop
cmpsb
shr
xchg
bswap
shlb
or
out
cmp
adc
pop
icebp
fcompl
inc
cmp
jl
dec
mov
pop
outsl
adc
popf
jg,pt
mov
jg
adc
xor
das
push
data16
aaa
dec
shlb
jle
or
popa
call
loop
dec
scas
jo
enter
shlb
incl
dec
insb
loopne
sub
mov
sub
or
or
cmc
or
ja
and
sub
loop
bound
cmp
stc
push
insb
scas
out
rcrb
sub
push
daa
movsb
dec
add
notl
cmp
jno
and
data16
test
stos
insl
cmp
rorb
adc
adc
jge
call
in
orl
mov
dec
js
mov
push
mov
in
mov
or
in
insb
mov
lods
sbb
mov
or
out
int3
fnstenv
mov
push
and
sbb
das
loopne
fwait
in
int3
lock
cmp
divl
dec
jecxz
push
mov
aad
and
test
jb
push
push
stos
test
cli
loope
mov
xchg
pop
mov
andb
jge
cld
add
rcrl
lea
pop
cs
or
or
movsl
mov
mov
mov
mov
ret
inc
icebp
aam
cs
xchg
xchg
mov
pop
das
arpl
movsb
jae
inc
jo
or
clc
jle,pn
scas
leave
fldl
aas
out
fs
shrb
cwtl
dec
popf
xchg
jae
jge
in
lret
sbb
movsb
jmp
mov
cmp
adc
jg
inc
add
loope
shll
fmul
leave
test
push
stos
cli
mov
in
jle
mov
ret
lret
or
sbb
insl
mov
jmp
popa
arpl
mov
in
pushf
fists
push
lahf
mov
mov
inc
sbb
ret
jg
clc
int3
in
shlb
xor
xchg
xchg
bound
iret
imul
cmc
dec
stos
ret
dec
inc
test
sub
fnstsw
mov
ss
idivl
adc
jp
into
lods
dec
pop
in
jnp
xor
dec
push
outsb
sti
ss
add
adc
in
pushf
push
test
mov
pushf
xchg
das
mov
dec
mov
aaa
xlat
mov
ret
lahf
cmp
dec
or
fs
dec
cmp
loope
jb
out
mov
fdivs
out
clc
mov
xor
mov
adc
xchg
int3
bound
inc
add
or
sar
mov
inc
cmp
int
dec
pop
xlat
mov
scas
or
popl
ret
mov
cld
xor
dec
or
pop
or
mov
mov
daa
sbb
popl
cwtl
mov
pop
inc
dec
in
xlat
or
sub
xorl
mov
sub
add
popf
insb
arpl
ret
lds
adc
insb
scas
fcomps
inc
jp
add
or
xchg
adc
std
fwait
cld
test
mov
in
mov
scas
outsl
addl
mov
sar
pop
inc
aaa
pop
push
inc
jecxz
sbb
enter
sub
cmpl
outsl
ss
mov
pop
imul
or
arpl
imul
scas
cmpsl
insb
or
lret
cmpsb
daa
mov
lds
leave
imul
inc
jge
ret
mov
xorb
test
add
pop
dec
sahf
mov
sti
push
fcompl
xor
and
imul
mov
fmulp
adc
gs
pusha
mov
sbb
mov
lret
cltd
popf
xor
sub
mov
inc
push
data16
jno
mov
sub
inc
cmpsl
pop
or
jne
add
jnp
jns
pop
dec
mov
fisubrl
mov
cmp
sub
or
divb
mov
movsl
ret
cmp
lock
mov
ret
aad
inc
cmp
inc
add
dec
int
cwtl
data16
xchg
fidivl
ret
addr16
inc
sub
movsl
fs
pop
push
aad
mov
gs
xchg
frstor
xor
sub
sbb
ss
mov
mov
fistps
pop
inc
lret
fcoml
pushf
int3
fcmovb
ror
aas
lret
xchg
movsl
icebp
jno
in
mov
notl
test
mov
xor
fwait
out
dec
aad
inc
cwtl
xchg
dec
lahf
cwtl
les
insb
pop
sub
jns
push
mov
pop
bound
loope
jmp
mov
lahf
mov
mov
cli
cltd
imul
push
scas
xchg
sub
adc
loopne
or
and
cltd
mov
fldenv
jg
mov
add
lods
push
mov
mov
push
fstpl
sti
inc
mov
icebp
mov
push
ja
dec
pop
call
outsb
mov
xchg
pop
outsl
outsb
enter
inc
mov
jle
inc
pop
stos
les
test
rcl
pop
dec
xchg
outsl
ss
sub
cmc
inc
xchg
rcll
pusha
sarb
add
scas
pop
nop
aaa
sub
pop
mov
stos
add
cmp
mov
add
pop
arpl
add
mov
fdivrl
xchg
mov
iret
jl
out
jnp
or
xor
xor
jle
mov
ds
int3
xor
push
popa
mov
gs
std
adc
shll
loope
es
push
xor
jb
arpl
inc
jecxz
sbb
sti
jno
paddusw
je
add
jp
gs
mov
pop
mov
inc
fbstp
aaa
fnsave
repnz
js
inc
pop
pop
imul
push
mov
mull
adc
sub
fsubr
jp
jnp
adc
add
ljmp
xor
pop
sahf
loope
lock
loope
adc
pusha
sub
adc
jg
cltd
sbb
jne
js
sbb
xor
push
mov
pop
inc
divb
lcall
inc
jmp
dec
adc
ds
mov
jmp
sub
daa
jmp
xor
je
xor
or
ss
push
scas
and
inc
xor
call
js
and
loope
call
in
loopne
dec
jp
mov
movsb
div
loop
les
addr16
imul
jl
xor
pusha
fwait
or
out
mov
or
fidivs
movsb
add
sbb
scas
out
stos
iret
sbb
or
add
or
xorb
shll
cmpsb
cld
cs
and
mov
push
in
divb
adc
jno
sub
rol
sbb
add
jp
sti
lods
sub
and
outsl
or
mov
pop
add
jbe
fcoms
push
fldcw
dec
mov
sub
movsb
cmpsb
mov
popa
pop
cmp
mov
imul
or
jnp
pop
imul
inc
cmp
daa
movsb
popa
xor
incb
adc
lods
imul
leave
pushf
test
pop
inc
jmp
jl
nop
imul
in
negb
sub
lea
enter
mov
jno
aam
into
lock
pop
cli
ret
aam
adc
repnz
rolb
mov
and
add
mov
lret
imul
dec
or
adc
test
je
call
jmp
jb
sbb
inc
in
mov
jb
jle
pushf
cmp
test
add
inc
push
cld
push
sar
push
mov
mov
orl
mov
ss
popa
dec
cli
and
loopne
das
push
andl
add
aam
dec
pop
cmp
sub
and
cmp
sub
iret
mov
stos
repz
adc
mov
movsl
xor
pop
shrl
dec
clc
xchg
jns
call
or
inc
das
inc
push
dec
ds
cmp
push
sbb
ja
adc
repz
mov
shr
or
rorl
cmp
test
mov
mov
adc
cwtl
and
xor
mov
loop
popl
sub
repnz
cmpsb
in
push
mov
in
xchg
into
adc
filds
fs
xchg
pushf
je
icebp
cmp
mov
ret
xor
loop
and
mov
loopne
mov
ljmp
faddl
push
xor
add
aas
ljmp
cli
int3
je
arpl
test
scas
nop
mov
mov
in
ret
lods
mov
xchg
leave
addr16
mov
xchg
fsubs
sub
fwait
mov
jo
and
cmp
mov
jmp
push
inc
xor
shrb
adc
addb
loope
cld
jg
gs
and
pop
cmp
jo
fcmovnu
ret
fs
in
aaa
cli
sahf
sub
mov
and
neg
inc
mov
mov
scas
and
testl
xchg
out
jno
dec
mov
xor
daa
inc
aam
mov
les
push
add
mov
ret
and
scas
sbb
sbb
mov
pop
and
xchg
sbb
mov
add
dec
sbb
xchg
les
outsb
outsb
bound
lea
ss
into
jp
push
add
movb
jecxz
test
or
in
aas
out
nop
mov
scas
mov
outsb
imul
sbb
int3
jl
push
arpl
fucomi
inc
mov
scas
pop
arpl
pop
lret
outsb
and
stc
fucomip
adc
cmp
sub
popa
xlat
fs
dec
aaa
jmp
lds
mov
adc
out
sub
pop
clc
inc
jp
dec
push
xchg
arpl
dec
or
movsb
mov
xchg
and
mov
in
stos
push
push
arpl
sub
orl
subb
aad
movsl
shll
or
fcmovnbe
mov
lods
fmull
lret
daa
inc
aad
xchg
aas
ja
bound
xchg
xor
jne
dec
aam
call
shrl
lea
movsb
mov
adc
repnz
js
movsb
nop
loope
lcall
adc
enter
div
push
jle
xor
inc
imul
add
mov
mov
popl
jmp
cmp
dec
cmpsb
add
pusha
fwait
fwait
cmp
pushf
xchg
sbb
mov
xor
test
mov
jmp
das
into
ja
arpl
sbb
and
mov
movzbl
sbb
insl
cmp
inc
sbb
xor
push
inc
xor
inc
aad
pop
xor
inc
cli
sbb
or
popa
push
stos
adc
jmp
mov
xor
test
push
je
aas
push
pop
pop
arpl
test
fdivl
adc
mov
mov
sbb
and
push
in
test
jnp
nop
mov
call
and
and
scas
cltd
jl
iret
jnp
pminsw
lret
xchg
out
stos
addb
sub
leave
sbb
adc
sub
add
daa
push
gs
mov
je
jp
sub
imul
push
push
rol
xor
jae
adc
jg
jg
sarl
jmp
push
or
or
test
fwait
arpl
xor
dec
js
test
gs
lret
movsb
leave
jae
sub
mov
mov
xchg
addr16
sub
pop
test
int
outsb
and
ds
movsl
popf
pop
cmpsl
lock
cltd
xor
adc
lahf
add
mov
cmp
cs
out
sti
jbe
imul
jo
sbb
ss
ret
test
add
jb
mov
clc
fsubrp
sub
lret
xor
mov
push
cmp
sti
sub
push
sub
in
jl
imul
or
cmp
test
xor
push
mov
push
ss
ljmp
add
jg
pop
aam
loope
mov
xchg
xorb
into
or
mov
popf
test
gs
cmp
sub
jo
in
or
shll
subl
inc
std
icebp
or
cmc
dec
cmp
dec
add
das
jns
sub
mov
pop
aaa
xor
mov
outsl
lahf
cmpsl
nop
clc
cmp
and
mov
sbb
cmp
pushf
fwait
imulb
ss
stos
push
sbb
jmp
movsb
xorb
pop
inc
out
outsb
aad
sti
dec
repnz
test
mov
push
aas
pop
cmp
popa
out
add
aas
fld1
or
ss
data16
cwtl
ljmp
jge,pn
ret
adc
lods
inc
loopne
lock
shl
stos
ss
sub
dec
dec
xchg
jno
popa
lea
xchg
insl
daa
mov
jge
xor
inc
mov
aaa
and
jae
imul
inc
push
leave
ss
sbb
pusha
cmpb
enter
mov
dec
out
adc
sbb
mov
in
or
adc
mov
cmp
pop
je
sti
aam
cmp
fimull
inc
inc
mov
mov
xchg
and
mov
int
lods
iret
pop
ljmp
sub
xor
push
adc
rcr
mov
aam
pop
pop
mov
push
jg
incl
stos
test
nop
push
jb
mov
fisttps
sahf
mov
and
ss
mov
xor
aaa
mov
and
lods
ss
jge
jae
mov
fsubs
push
mov
in
shr
je
enter
inc
or
dec
sti
and
hlt
in
lcall
adc
lret
mov
jnp
and
lret
jnp
mov
and
pop
out
jno
out
jae
adc
adc
arpl
movl
adc
xor
lods
je
cmc
adc
loop
shlb
in
les
movsl
repnz
addb
stos
push
test
pop
mov
push
fs
pop
je
gs
loop
out
mov
daa
popa
stos
es
mov
add
add
sub
sub
adcl
xor
addl
mov
or
mov
mov
subl
add
imul
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
movl
add
or
addl
mov
mov
mov
andl
add
xorl
xor
mov
add
mov
adc
mov
orl
add
orl
and
xor
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
mov
dec
mov
jmp
add
mov
sbb
mov
lea
mov
inc
mov
movzbl
sbb
mov
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
addl
mov
xorl
xor
movl
add
movl
jne
movl
jmp
xor
add
sbb
mov
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
or
sub
xor
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
jmp
xchg
mov
aad
mov
mov
xor
ja
push
imul
jl
inc
pop
jl
and
test
ror
insb
dec
pop
xor
cltd
or
mov
push
xchg
nop
add
das
aad
pusha
xlat
and
fs
inc
loop
fcomps
or
iret
mov
push
jne
push
xchg
out
mov
ljmp
psubd
inc
lds
jne
leave
sbb
adcl
movsl
dec
in
lret
gs
scas
aas
roll
xchg
rcrb
ds
add
mov
mov
cmpsb
jl
fwait
sbb
mov
pop
aad
push
jo
dec
daa
inc
mov
out
push
mov
mov
pop
jge
pop
sub
and
shll
mov
cmp
outsb
cmpsb
cli
ja
inc
ret
imul
insb
inc
fidivl
sbb
cmp
insl
fisttpll
sahf
push
inc
mov
rclb
in
xchg
pop
xchg
insl
imul
pop
hlt
rcr
test
inc
push
data16
xor
mov
lds
push
lock
ja
push
loopne
lea
call
xchg
cs
pop
jb
push
sbb
imul
fsts
mov
aam
pop
cmp
fisttpll
mov
mov
test
and
negl
adc
mull
push
sub
aaa
ret
push
insl
out
addr16
xchg
xchg
arpl
sub
dec
subb
mov
add
pop
or
lret
mov
fnstcw
mov
mov
dec
cwtl
sub
je
repnz
xor
fdiv
push
add
pop
aaa
push
jmp
cld
int
cmp
cmp
xlat
sbbb
or
sub
aaa
xor
mov
mov
jns
loope
rcll
les
pusha
dec
mov
fistl
push
pop
fidivl
mov
cltd
imul
das
inc
loop
out
subb
mov
movsb
cmp
xor
data16
popf
xchg
in
jne
fdivr
inc
mov
loope
sbb
adc
mull
in
xchg
loopne
mov
push
cmp
int3
test
cmp
cmp
mov
cmp
xor
stc
leave
pop
sub
pop
std
pop
push
sbb
jb
sbb
sarl
push
popa
sbb
in
and
sub
jmp
pop
push
cmp
push
sahf
mov
pop
mov
pushf
inc
lds
int
mov
ljmp
imul
push
fdiv
mov
pop
into
sub
fstpt
out
adc
xchg
sbb
pusha
test
push
scas
inc
pusha
jge
cltd
push
pop
xchg
lcall
push
outsb
mov
call
out
sub
aad
lods
fstl
es
lock
mov
mov
fwait
xchg
rcll
scas
fmull
dec
pxor
xchg
sub
cli
mov
rcll
cmc
ljmp
aam
jge
pop
iret
ficoml
jno
pop
xlat
jg
nop
ja
mov
dec
push
ljmp
rol
jmp
cmp
dec
outsb
xor
add
mov
fnstcw
xor
loopne
aad
xchg
fsubs
outsb
lods
iret
jp
xchg
mov
pop
cmp
xchg
mov
xor
mov
mov
adcb
das
out
cli
inc
je
adc
mov
repz
or
sti
xchg
mov
std
mov
cld
insb
and
lods
add
xor
mov
mov
xchg
in
pop
ljmp
lods
add
inc
aad
rcl
cmp
inc
push
xchg
int
adc
cmp
mov
add
mov
sub
jecxz
mov
add
dec
xchg
pop
mov
repnz
push
sbb
sbbb
adc
xor
pop
stos
sub
loopne
ljmp
jmp
or
pop
cmp
shll
imul
adc
sbb
sub
xor
xchg
push
sbb
lods
xchg
add
pusha
adc
jae
pop
stos
pop
andl
cmpsl
xor
add
hlt
cmp
mov
inc
andl
out
aas
sti
pop
push
adc
add
lret
xor
ja
push
mov
xchg
data16
outsb
pop
add
sub
xchg
or
addr16
mov
fwait
insb
xchg
mov
leave
add
mov
xchg
icebp
push
iret
add
jae
adc
pop
push
xor
or
push
mov
outsb
cmp
xchg
xchg
mov
mov
orb
sub
out
xchg
jbe
aad
clc
nop
dec
int
jne
lock
test
jl
in
mov
xchg
xchg
shll
add
ficoml
sub
adc
sub
ret
mov
outsl
in
fstl
adc
shll
jae
js
es
or
jns
add
stc
test
lret
jmp
dec
xchg
dec
cs
lret
addl
sbb
inc
int3
or
jmp
cmp
leave
dec
rorb
notb
dec
or
insb
add
cld
not
push
int
pop
dec
jmp
dec
inc
jns
mov
ret
cmp
bound
icebp
lods
iret
and
outsb
pop
adc
push
xchg
icebp
fldt
into
mov
xchg
lds
mul
inc
adc
mov
add
sti
fwait
and
jb
pop
movzbl
jle
pop
xor
je
and
and
xchg
mov
xchg
shrb
xchg
repz
leave
loopne
pop
mov
jle
jmp
cmp
outsb
adc
ds
jno
je
test
leave
fsubrl
lcall
pop
mov
nop
sbb
sub
push
into
and
loope
or
jp
cs
icebp
add
loope
and
jmp
arpl
or
repnz
scas
in
ljmp
add
lods
cli
mov
mov
std
or
push
and
daa
sub
clc
les
mov
mov
add
mov
cmpsb
das
in
push
add
insb
jne
cli
dec
and
jl
insl
sbb
cmc
jno
sub
add
in
gs
push
jecxz
ds
out
and
fnsave
mov
jnp
push
pop
pop
add
or
cmc
xchg
addr16
popf
cltd
push
adc
mov
les
lea
xchg
aaa
cmpsl
sub
sbb
xchg
std
jae
push
filds
jecxz
ja
out
push
dec
lock
out
jns
push
loopne
aad
jl
or
push
pop
test
lods
and
push
dec
fs
add
mov
fisttps
or
mov
sbb
cmp
mov
clc
outsb
pop
leave
and
in
xchg
cmp
nop
sub
lret
cli
adc
pop
or
push
sbb
mov
inc
pushl
rorl
sti
pop
cmp
shll
dec
jmp
jae
ljmp
xchg
hlt
sbb
rcll
sub
mov
jg
sbb
dec
shll
mov
cmp
push
insb
mov
in
xor
ficoms
fiaddl
jns
call
pop
push
inc
data16
sub
leave
mov
inc
insl
jp
scas
out
push
in
inc
mov
push
cld
sub
lods
ja
sub
cwtl
lds
pusha
inc
jbe
aad
gs
mov
je
fldenv
in
inc
or
lds
dec
stos
mov
sbb
mov
push
bound
add
jae
cs
popf
xchg
imul
fidivrs
push
push
push
arpl
xchg
jp
push
jmp
mov
lock
push
push
sbb
mov
mov
shlb
mov
cltd
cmc
jp
mov
pushf
shrl
and
jae
cmpsl
jae
inc
hlt
dec
cmp
test
in
out
pop
or
pop
idiv
sub
push
inc
insl
lock
push
and
scas
insl
xchg
inc
test
fs
push
ret
arpl
xchg
out
pusha
cltd
shrl
push
ja
fisubrl
xor
push
imul
in
jecxz
and
cmc
and
dec
mov
fbld
stos
imul
xor
push
fdivrs
dec
in
adc
inc
adc
aam
xchg
adc
cmp
les
or
fstps
dec
ret
in
cmpsb
pop
lock
imul
lds
popa
fcoms
xchg
add
xlat
push
mov
mov
mov
imul
xor
mov
in
repnz
mov
outsl
scas
xchg
shrl
xor
int3
mov
cmp
cmp
mov
pop
inc
repnz
push
fimull
icebp
push
sub
aas
add
jge
cmp
cmc
mov
mov
xchg
pushf
dec
dec
shrl
adc
jle
mov
repz
imul
pop
jns
xor
sub
adcl
add
in
cwtl
xchg
dec
mov
ror
push
ret
add
ret
hlt
adc
mov
dec
dec
rorl
sbb
mov
es
inc
add
pop
js
into
lds
cwtl
inc
inc
imul
or
ss
cmp
jbe
xchg
push
xor
xchg
ffreep
in
and
std
aas
xchg
cmp
sbb
push
mov
fcoms
and
mov
mov
mov
repz
mov
push
sti
xchg
mov
es
push
push
cmp
xchg
cld
mov
dec
inc
adc
fucomp
inc
and
ss
in
pop
jmp
sub
inc
push
push
gs
cmp
xchg
jns
mov
dec
jg
aas
mov
rorb
mov
outsl
clc
std
mov
fwait
push
inc
test
insb
xchg
lock
addb
push
insl
andb
xor
movsl
or
dec
sub
inc
mov
sub
shlb
dec
fstpl
loopne
js
dec
int
mov
xor
mov
cmpsl
test
filds
js
gs
jo
rorb
mov
xchg
cmp
mov
cli
lods
add
loope
jo
loope
mov
jbe
mov
in
lods
int
je
mov
repz
jno
sbb
mov
mov
push
dec
mov
lea
sub
jns
pop
stos
push
movsb
nop
push
leave
aam
movsb
test
movsb
addr16
icebp
push
adc
xchg
lock
jo
fstps
xchg
adc
jle
xor
repz
xchg
fs
test
and
xor
pop
jmp
and
sub
in
jo
push
add
in
iret
jbe
xorb
pop
test
frstor
shlb
imul
mov
mov
ljmp
and
insl
or
ret
movsb
cli
ficoms
out
pusha
xchg
subb
scas
into
xchg
andl
fmull
jge
pop
stc
mov
or
add
andb
pushf
mov
sbb
iret
mov
xchg
jp
add
mov
sbb
in
sub
loope
orl
inc
and
lods
push
aaa
decl
sti
jecxz
std
ss
and
add
rcrl
es
lret
test
push
cmp
mov
pop
cmpsl
repnz
adc
push
jbe
aas
sub
mov
cs
fistl
aas
shll
mov
mov
sbb
rcrb
mov
dec
cmpsb
and
cwtl
pop
cmc
insb
ss
stos
and
ljmp
sbb
scas
aas
cmp
sub
xor
mov
cmp
flds
add
ljmp
mov
cmc
aam
lcall
xor
inc
jl
aas
pop
insb
movsb
push
jne
fcoms
data16
add
mov
cmp
je
jo
cld
push
int3
dec
loope
pop
and
push
pop
xchg
cmp
ss
aas
cmpsb
negb
mov
data16
add
rorl
adc
loop
fwait
push
xor
test
mov
pop
xchg
sub
test
xchg
jg
imul
out
jno
in
popa
insl
lds
cltd
cli
loope
insb
outsb
adc
adc
bound
out
jae
cmp
xchg
fisttps
ds
cltd
loopne
mov
mov
xchg
rolb
xchg
int
mov
testb
pop
jae
or
ret
mov
adc
mov
mov
ljmp
pop
inc
popf
stos
shll
int
je
fisubrl
mov
movsb
jae
mov
and
mov
add
test
cli
lock
add
insl
scas
test
cltd
lea
iret
ja
jbe
and
adc
mov
inc
adcl
pop
inc
into
cltd
pop
icebp
imul
mov
fiaddl
insb
push
fwait
vpsrld
cmc
call
mov
popa
out
clc
adc
std
stos
mov
stos
mov
adc
pop
iret
mov
sbbl
jno
scas
mov
xlat
sub
mov
mov
jbe
push
adc
xchg
ljmp
dec
mov
fldcw
loope
and
hlt
imul
mov
mov
roll
mov
rorl
lods
inc
mov
dec
or
mov
pop
imul
mov
push
pop
or
sub
dec
cmp
mov
xor
xor
pop
jecxz
pop
test
enter
sarl
into
xchg
pop
in
mov
mov
sub
add
pop
xchg
inc
and
jl
add
shll
out
xchg
jae
lea
pop
das
dec
outsb
lret
aaa
aam
clc
mov
insl
push
iret
scas
inc
or
loopne
movsl
xchg
mov
dec
add
add
divb
xchg
rorb
pop
roll
sub
jmp
xchg
mov
in
arpl
jnp
inc
push
push
out
ds
cmp
addl
imul
enter
pop
cmpsb
fisubl
cmpsl
sub
inc
and
and
repnz
data16
xchg
rcr
enter
jne
mov
sbb
push
dec
mov
add
insb
lret
mov
cli
xor
testb
dec
lea
push
sarl
pop
test
sub
movsl
repnz
mov
mov
dec
jg
sbb
push
pusha
and
and
ja
idiv
sub
lahf
cltd
repnz
push
mov
add
jle
ss
shll
loop
mov
ljmp
xchg
sub
sbb
pop
daa
push
push
jno
mov
test
cmpsl
rclb
mov
enter
arpl
sarb
dec
and
mov
sbb
fstpt
and
ficompl
xor
das
add
ds
mov
hlt
fs
shl
adc
sbb
mov
leave
sti
insb
jmp
add
inc
pop
shlb
mov
adc
roll
fwait
dec
jge
jecxz
imul
pop
mov
lret
fld1
call
insb
mov
jecxz
je
adc
loopne
ret
or
push
lods
mov
mov
je
xor
pop
int3
or
jnp
push
in
ret
sbb
ja
add
add
scas
je
int3
aam
data16
aad
and
les
dec
cmpsb
sahf
enter
stos
lahf
push
pop
fisttpll
lahf
mov
daa
fisubrs
cmp
in
sbb
cmpsl
enter
data16
jl
arpl
test
xchg
sbb
inc
mov
add
lret
cmpsb
inc
iret
sti
shlb
test
xor
out
stos
push
test
cmc
inc
pop
mov
imulb
jecxz
ss
movsl
pusha
cld
out
xlat
and
sub
in
mov
inc
dec
imul
jne
jnp
aas
jno
dec
mov
or
adc
fisubrl
and
jge
lret
movsb
mov
dec
add
inc
xchg
fimull
mov
repz
mov
cmp
jge
popa
and
inc
push
sub
fsubr
push
mov
xchg
sbb
shrb
dec
sub
shl
cmp
movsb
jge
mov
push
mov
cmpsl
xor
sbb
or
jb
pop
fnsave
mov
mov
hlt
pop
sub
pop
repz
sub
in
lea
push
mov
mov
lret
addr16
rorl
fsubs
out
enter
dec
jb
daa
stc
out
lds
call
xchg
push
jmp
pop
inc
cmp
jg
jmp
jne
pop
imul
jl
cmp
cwtl
addr16
or
xchg
aaa
sti
ret
jne
insb
xor
adc
rorb
dec
adc
fwait
lods
sub
cs
and
test
vcvtpd2psx
xor
pop
movsb
mov
subb
push
or
xchg
stos
addr16
inc
inc
add
mov
sub
or
aad
std
je
cmp
mov
lock
mov
lahf
test
es
mov
xor
ljmp
dec
jae
adc
and
aam
das
leave
and
gs
icebp
loope
test
insb
outsb
in
fldl2t
add
xor
jb
dec
shrl
ds
inc
adc
mov
and
xlat
dec
loopne
mov
es
pop
sbb
sub
sub
xor
lret
xor
adc
push
jp
xchg
scas
ret
jmp
movsb
int3
cmp
adcb
loope
aad
addl
std
sub
js
lock
mov
and
mov
jle
mov
dec
aas
sub
adc
inc
mov
jne
or
and
add
jno
push
cltd
inc
pop
pop
insl
test
mov
xchg
add
aas
inc
xchg
add
sub
stos
idiv
adc
sbb
sub
in
repz
aad
movsl
aad
icebp
sub
add
je
je
jmp
xchg
adc
push
clc
test
mov
push
insb
stos
sub
jecxz
lret
mov
push
imul
cwtl
filds
xor
cmp
cmp
lcall
jnp
or
lret
xor
and
push
lods
jb
loope
and
xchg
or
lea
fistpl
cld
lea
es
pop
sbb
mov
dec
test
hlt
pop
jmp
ss
cmp
sti
add
mov
cmp
aad
cmp
jmp
cwtl
sbb
cmp
cltd
mov
xor
xor
fcoms
sarb
test
lret
jle
sub
arpl
inc
loope
jnp
popf
sub
mov
fwait
jbe
insl
divl
mov
xchg
push
inc
pop
int
add
xor
loopne
imul
and
xchg
add
adc
or
xchg
mov
mov
push
std
pop
sarl
repnz
movsl
adc
into
jne
mov
jle
divb
mov
bound
je
dec
imull
mov
ret
cli
daa
cmp
jbe
sahf
and
cltd
out
loopne
neg
and
push
data16
push
out
addb
or
or
and
mov
inc
aas
pcmpgtd
mov
repz
repnz
out
int3
repz
inc
icebp
jno
cmp
xor
xor
repz
dec
arpl
push
mov
lcall
xor
push
adc
daa
xchg
fsts
test
dec
lea
or
and
lcall
xor
jmp
and
movsb
aas
jg
sbb
xchg
fisubl
mov
dec
pop
int3
std
stos
mov
push
dec
popf
movsb
fwait
pop
inc
mov
inc
jo
and
loopne
fsub
jge
iret
ljmp
incl
out
xor
pusha
jge
dec
fildl
leave
add
mov
adc
into
sti
bound
enter
mov
xor
shrb
push
pop
test
mov
push
lds
out
sbb
xlat
loop
int
xchg
jo
jne
xor
pop
out
pop
mov
stos
xor
inc
cmpsl
repnz
test
jnp
or
mov
lret
inc
or
jae
inc
mov
les
sbb
orb
imul
pop
pop
jmp
arpl
mov
divb
adc
sub
cmpsl
add
out
jg
and
jb
adc
in
mov
lds
xchg
fnstenv
and
mov
inc
fsubrl
xlat
mov
xlat
mov
jl
lds
clc
loope
cmp
sti
sub
xor
inc
pop
dec
inc
xor
lret
mov
jle
rcll
cmp
int3
xorb
jns
fmul
fdivrl
movb
pop
or
sar
push
loopne
xchg
arpl
or
jl
fwait
je
insl
push
pusha
sbb
outsl
popa
out
dec
add
scas
subb
lret
mov
clc
xor
lcall
and
mov
int
pop
insl
adc
bswap
mov
arpl
cltd
xchg
lea
scas
push
push
sub
jb
int3
jbe
ja
xchg
decb
ss
cwtl
jnp
sbb
faddl
div
cli
cmpsb
push
sub
sbb
arpl
mov
dec
daa
sbb
or
and
dec
mov
mov
hlt
movsb
sahf
daa
dec
movsl
in
cltd
pop
shl
add
jmp
pop
cld
add
and
test
cmp
cmp
push
jge
popa
sub
scas
rcr
push
pop
or
fwait
dec
cmpsb
inc
stos
xchg
mov
dec
out
jecxz
xorl
cltd
imul
ljmp
mov
andl
shrl
movsb
pop
adc
inc
pop
mov
int3
add
int3
or
mov
insb
cli
xchg
lcall
int
into
das
loopne
push
iret
add
inc
int
mov
cmp
lret
cmc
out
jp
aad
sti
mov
scas
inc
gs
jae
ljmp
stos
ss
aam
add
enter
fld
test
inc
dec
arpl
add
fs
mov
in
sbb
lods
dec
mov
fldcw
les
jg
les
sahf
push
xchg
xlat
pop
sub
shll
loopne
in
cli
outsl
pop
jno
xor
jl
xlat
cld
ss
mov
mov
mov
mov
ljmp
ret
cmp
std
fisttpl
or
cmp
mov
push
mov
rcll
xor
and
shrl
xor
and
pop
mov
outsl
push
clc
es
ljmp
mov
push
jne
xchg
pop
call
shrb
fcoml
mov
ds
loope
pop
mov
push
ss
pushf
hlt
or
sub
push
fmull
insb
addb
lahf
in
and
mov
or
cmc
jecxz
loopne
pushf
pop
aaa
mov
lods
loopne
data16
icebp
popf
cmpsb
mov
or
pop
jno
lahf
push
dec
inc
and
or
mov
jae
daa
test
and
out
icebp
leave
inc
xchg
je
mov
out
lret
ja
icebp
nop
jle,pn
jne
adc
mov
movsl
xor
lret
mov
sbb
test
rolb
pop
or
inc
loope
push
pop
xchg
call
pop
inc
and
icebp
out
push
cmp
mov
out
mov
mul
jecxz
and
out
xlat
out
pmulhw
xchg
cmp
or
idiv
jg
rcrl
in
xor
mov
and
scas
test
sbb
mov
je
dec
or
lods
mov
jle
ret
das
int3
insb
push
iret
mov
or
mov
adc
xor
imul
mov
fistpl
je
pop
push
adc
lea
rcrl
lret
add
jns
pop
push
aam
mov
adc
push
jnp
adc
mov
pop
faddp
int3
or
fidivl
fdivl
aas
cmp
in
jecxz
mov
add
cmp
aaa
cwtl
scas
cmc
addr16
xor
push
mov
mov
clc
in
or
pop
aam
das
fiaddl
aas
mov
mov
add
sbb
sbb
mov
scas
imul
cli
dec
mov
pusha
loope
call
lods
xchg
lods
and
xchg
ss
pop
cwtl
sub
in
mov
cmp
das
or
fldlg2
arpl
adc
pusha
add
in
mov
or
push
pop
mov
xor
xlat
ss
sub
adc
cmp
mov
fwait
sbb
jae
sbb
jge
cmpsl
fsubl
test
cltd
cmp
and
adc
les
dec
iret
jbe
mov
and
push
idivl
inc
stos
je
jo
out
or
dec
dec
mov
shl
out
lcall
out
gs
inc
in
mov
inc
adcb
ret
xchg
sub
mov
icebp
inc
mov
fldcw
adc
insl
ljmp
cmp
cmp
dec
rcll
mov
arpl
xorl
pop
test
inc
jae
cmp
cmp
arpl
sub
xlat
shlb
push
sbb
fildll
mov
enter
push
cltd
dec
je
jne
xor
fdiv
and
mov
fsubs
xor
jp
xchg
out
dec
lahf
sbb
jmp
mov
popf
cmp
loopne
cld
xchg
push
adc
into
or
cmc
inc
pop
lock
subb
aad
enter
pop
sub
scas
fwait
jp
push
cmpsb
mov
pop
jae
mov
mov
push
insl
dec
std
sbbb
and
flds
cmpsb
std
das
dec
mov
adc
repz
xchg
and
test
out
jae
or
rclb
rol
popf
scas
pop
stos
pop
mov
ss
dec
fimull
dec
aaa
pop
pop
sbb
and
xchg
add
or
pop
loop
add
ljmp
fwait
sbb
sub
adc
add
rorl
adc
xor
mov
push
pop
push
scas
shll
test
popa
ret
aaa
mov
or
gs
jb
cmp
fldenv
stos
jg
dec
xchg
xchg
aad
mov
mov
bound
and
scas
aam
bndldx
jmp
pop
dec
stc
cltd
or
repz
jno
or
pop
arpl
test
mov
repz
cld
sbb
cld
pushf
push
leave
cmp
jp
jnp
and
fwait
push
sbb
xchg
cmp
pop
adc
mov
and
dec
rorl
lods
push
divb
adc
call
ror
inc
cmp
sbb
inc
sbb
pop
xchg
es
jp
lret
data16
cmp
sbb
sub
xor
test
cmc
lahf
scas
dec
sbb
mov
jae
sbb
push
cmp
and
shrb
mov
mov
jle
test
cmp
jp
andb
enter
push
inc
aaa
adc
fsubl
pop
leave
pop
xor
dec
lods
icebp
inc
and
dec
push
lods
enter
ss
repz
or
or
je
nop
in
sub
cmp
sub
sbb
xchg
out
pusha
ja
int3
enter
pop
into
jg
pop
dec
das
sbb
into
fucom
sub
push
iret
add
adc
daa
loop
xor
test
cmpsb
out
cmp
addl
xchg
enter
dec
adc
push
nop
fnstenv
mov
pop
push
adc
nop
mov
push
insb
out
mov
je
repnz
dec
loopne
and
inc
nop
je
out
pop
push
add
and
sub
push
cmpsl
jecxz
jmp
loope
xchg
bound
in
sub
inc
roll
js
cmc
scas
push
xlat
cmp
sbb
in
sbb
in
jmp
insl
push
fcmovb
sub
insl
leave
cmp
imul
and
jb
or
or
movsb
mov
inc
adc
dec
pop
push
cmc
mov
adc
xchg
test
jl
xor
pop
in
int3
jle
and
ret
jns
and
or
cltd
lock
mov
ljmp
rcrl
enter
std
push
xchg
pop
pop
lea
fimuls
xchg
je
pop
sub
enter
decb
adc
loope
pop
xchg
jl
xchg
push
adc
dec
hlt
dec
sub
and
sub
push
mov
in
xchg
xor
stos
push
add
cmpb
sbb
jo
push
cmp
dec
jmp
add
and
clc
pop
lds
mov
pop
pop
movsl
push
imul
pop
jae
inc
cmp
jge
cld
fcoml
data16
cmp
sub
fstl
or
stc
fnstsw
fmul
repz
std
fidivs
jno
dec
ficompl
lock
jae
inc
adc
or
xor
jp
aad
jecxz
aam
scas
stos
in
pushf
inc
mov
rol
inc
fnstsw
jg
mov
mov
jae
lods
sbb
pop
sbbb
cmpsl
jg
push
pushf
jae
aas
test
jmp
mov
and
rcl
adc
push
cs
scas
mulb
sub
insb
ffree
and
mov
mov
sti
popf
aam
add
xor
mov
das
push
daa
push
lcall
lret
dec
mov
inc
sbb
sub
pop
iret
dec
xchg
sti
fsts
xchg
add
xor
mov
add
loopne
rol
dec
movb
push
dec
inc
insl
push
jbe
xchg
enter
sti
pop
daa
je
mov
pop
mov
call
fsubrp
push
dec
jne
movsb
sub
or
sbb
adc
xchg
enter
cld
xchg
clc
mov
sbb
dec
rcr
les
cmp
arpl
mov
fisubl
pop
sub
jae
in
rolb
jle
add
lds
pop
xor
int3
lret
iret
mov
iret
aam
sub
or
adc
fwait
rcr
sahf
inc
sbb
imul
mov
jmp
rcrl
hlt
lahf
shl
inc
out
stos
dec
jno
mov
cmp
jp
test
je
pop
lcall
dec
inc
movsl
test
jo
sti
push
or
ret
xchg
mov
out
pop
mov
popa
cmp
aas
jle
cld
ja
inc
push
out
xchg
popf
movb
pushf
rcrl
cmp
scas
pop
jns
pop
jnp
xor
out
sbb
pop
jne
ds
mov
pusha
test
jecxz
int
add
ss
jl
cmp
mov
jo
pushf
ss
push
lea
jl
out
orb
and
cmpsb
push
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jmp
inc
mov
ss
test
and
clc
push
jge
inc
pop
jl
gs
cmp
arpl
inc
fldenv
shl
pop
lods
ficomps
nop
dec
jo
pop
lds
enter
aas
inc
es
mov
xor
inc
and
mov
and
push
cmc
and
push
mov
iret
aaa
dec
jl
test
mov
adc
dec
pushf
imul
add
cvtpi2ps
cwtl
stc
sti
mov
nop
cs
push
cmpsb
repz
push
negb
je
jbe
push
xor
jmp
pop
xchg
les
xor
add
lods
ds
dec
jp
jg
int3
adc
inc
xchg
add
mov
fstp
jne
and
jo
inc
and
imul
jecxz
fs
pop
sbb
cli
loope
mov
push
or
test
ret
pop
pop
pop
mov
sbb
gs
mov
push
dec
popa
enter
push
jl
and
inc
lret
shlb
cmp
xchg
add
mov
pop
iret
sub
int3
sbb
pop
mov
mov
mov
int3
or
repz
shrb
cmpl
outsb
inc
pop
and
std
adc
addr16
jns
sub
rcrl
cs
cmp
fildl
out
js
push
push
cmpsl
fdivrs
out
push
arpl
popf
icebp
lds
mov
iret
and
xor
inc
sub
mov
push
pop
sub
imul
sahf
mov
in
test
dec
jge
or
lods
bound
pop
push
and
push
and
pop
mov
in
out
dec
in
ss
adc
lods
jle
stos
and
push
xor
fiaddl
push
push
idivb
lods
and
adc
xor
inc
hlt
mov
lds
push
in
add
push
lret
test
repnz
or
mov
fsts
push
push
pop
xorps
aad
notb
fs
pop
movsb
pop
mov
push
mov
lahf
sti
ss
xchg
and
outsl
stos
sub
mov
jns
adc
cmp
sbb
jecxz
je
subl
push
mov
into
aad
outsb
cld
fmuls
jl
inc
mov
push
xor
sub
outsb
ja
int3
adc
repz
in
and
mov
jmp
pop
mov
ret
fdivrl
xor
and
sbb
sahf
xchg
pop
negl
sbb
jno
cli
dec
out
stos
and
sbb
addr16
cmp
enter
ds
push
push
xchg
in
in
add
jg
or
sub
sahf
hlt
js
push
add
pushf
movsl
aas
push
adc
ret
das
pop
adc
mov
ss
inc
fldpi
adc
push
mov
mov
jmp
incb
jae
dec
in
xor
sbb
mov
inc
and
adc
data16
jae
xorl
fdivp
pop
outsb
in
ret
std
cs
dec
insl
outsl
sub
sub
xor
ljmp
mov
stos
mov
jge
mov
lea
pop
andb
xor
jl
div
fimull
inc
adcl
adc
jns
stc
mov
sbb
scas
aad
cmp
or
push
push
sbb
add
pop
jl
dec
std
sahf
mov
and
iret
out
sbb
repnz
test
jecxz
gs
and
adc
dec
mov
mov
jge
lret
cmpsl
sahf
push
adc
mov
nop
lret
mov
jle
rcll
sub
pop
and
push
icebp
ror
fsubrs
test
addr16
push
cmpl
push
sbb
jmp
ret
sub
pushf
and
clc
and
in
sub
loopne
clc
adc
aaa
imul
or
push
push
push
sbb
into
and
add
cwtl
inc
lret
mov
cmp
adc
xor
pop
xchg
xor
dec
push
mov
mov
js
dec
fst
push
add
or
fs
jle
jg
aas
fistps
inc
mov
pop
sbb
mov
shrl
in
mov
xchg
mov
inc
xor
push
or
mov
in
jns
sub
sub
jp
lahf
jge
dec
bound
idivb
pop
outsb
xchg
lock
jno
fnsave
ret
push
fldenv
mov
xchg
mov
sub
mov
push
push
fsubs
jp
loope
out
insl
dec
add
mov
mov
leave
push
jae
mov
movsl
push
in
clc
imul
push
pop
xor
or
into
pop
add
xchg
loopne
ja
jg
lods
lahf
pop
cmp
imulb
in
jno
sbb
sbb
repnz
mov
jecxz
pop
shrl
mov
sbb
fwait
jo
mov
cmc
and
xchg
jb
push
and
cmc
popf
icebp
xchg
fistpl
push
fcoml
pop
mov
insb
and
mov
mov
in
inc
pop
jl
xor
xchg
inc
out
add
stos
push
cmp
aas
arpl
xchg
xchg
or
rcrb
jl
xchg
push
adc
clc
pop
pusha
loope
pushf
test
repnz
les
add
out
arpl
jno
pop
les
fcomps
sbb
jne
nop
into
add
xchg
pop
mov
cli
push
xchg
xor
in
xor
add
mov
gs
lods
mov
arpl
les
lds
lahf
adc
cli
test
loope
cmp
adc
hlt
fistps
addl
fcompl
push
cwtl
fisttpll
loop
adc
jg
aam
dec
ficoms
cmp
outsl
pop
cmp
hlt
or
nop
push
adc
fcomps
aam
testl
insl
sbb
mov
inc
xorl
lods
in
jns
mov
xor
in
stos
add
imul
or
subl
or
dec
add
jge
ja
cmp
dec
scas
xchg
adc
clc
scas
es
and
jns
mov
xor
and
out
rcll
and
repnz
cwtl
xchg
fs
cmp
and
aad
arpl
pop
mov
js
jmp
add
pop
iret
push
imul
cmp
decl
je
mov
int3
push
in
popf
aam
push
dec
outsb
mov
hlt
inc
jle
add
push
jecxz
iret
xchg
test
and
mov
mov
sbb
stos
gs
mov
gs
jle
jp
push
mov
pop
movsl
jae
sub
imul
mov
adc
lcall
xor
jp
rcrl
push
sbb
sub
xchg
inc
cmp
cmc
arpl
lods
adc
xor
sub
cmp
pop
aad
mov
xchg
jae
loope
or
mov
lcall
xor
leave
mov
fcmove
sub
lods
xchg
mov
push
cwtl
adc
outsb
imul
fcmovne
mov
or
mov
in
inc
enter
xchg
sbb
inc
popa
xor
lea
inc
outsb
cli
out
lcall
or
inc
popl
dec
dec
lea
aas
mov
dec
int3
gs
and
in
fnstcw
lock
stos
cltd
jge
dec
jb
mov
mov
popf
dec
lock
jbe
shrb
pop
aad
push
mov
mov
cmp
push
test
leave
stos
test
arpl
xchg
fists
lea
pop
ds
incb
or
icebp
jp
or
pop
pop
fmull
jno
or
ja
xchg
push
call
push
adc
or
cmpsb
cltd
xchg
in
fwait
mov
push
jae
xor
cmp
mov
dec
mov
out
iret
outsl
aas
sbb
pop
cmp
loope
push
mov
cmpsl
mov
pop
cmp
inc
ret
insb
jg
sbb
xchg
iret
adc
dec
sub
xchg
popa
je
dec
lret
xchg
jecxz
jo
xor
xorb
cmpsl
rcr
pop
dec
push
push
push
and
enter
adc
dec
jle
pop
arpl
cmp
jbe
adc
xorl
inc
push
pusha
es
into
mov
repz
movsb
dec
fistl
pusha
or
mov
jbe
test
ret
out
xchg
jge
ret
lret
push
es
in
rorl
mov
cmp
push
into
jle
sbb
jne
or
hlt
out
call
sub
stos
sbb
lds
into
shrb
adc
insb
pop
push
ret
lea
fs
into
test
outsb
xchg
ret
jnp
or
push
fisubrl
pop
push
int
adc
dec
in
insl
ds
xor
lret
arpl
xchg
in
pop
lret
into
das
mov
es
dec
add
es
push
sti
inc
clc
fisttps
out
sbb
loopne
pop
sarb
adc
hlt
ja
mov
lds
push
pushf
out
pop
data16
repnz
data16
sub
fdivrs
inc
xor
sub
test
xchg
add
sti
cmp
ret
rcrl
dec
xor
ret
rorl
xor
mov
xor
sti
jmp
or
mov
and
aaa
hlt
bound
out
fwait
aas
jo
add
and
mov
imul
xor
sbb
jo
adc
push
addr16
out
daa
push
cmp
xor
pop
sub
inc
negb
pop
popl
ret
jae
push
movsb
pop
dec
push
loope
mov
arpl
mov
test
fcmovbe
jmp
insl
loop
pop
mov
xor
jg
mov
and
mov
roll
mov
out
aas
jmp
jo
sbb
mov
cwtl
loope
jne
ljmp
xor
in
fwait
repnz
sub
sbb
lock
lock
aam
loop
xchg
xchg
sub
pop
lret
loop
inc
push
push
pop
mov
inc
cmp
mov
inc
int3
or
out
pop
inc
sub
xor
insl
mov
js
inc
mov
or
adc
rorb
je
pop
subl
dec
ss
and
xor
sub
fld
push
leave
adc
jbe
sahf
cmp
push
inc
xchg
add
and
inc
rolb
gs
pop
and
mov
xchg
jb
push
mov
imul
call
push
out
je
push
xchg
mov
pop
mov
outsl
addr16
sbbl
scas
sub
mul
add
sub
pop
mov
pushf
dec
int3
cmp
sti
mov
int3
jbe
mov
ret
pop
in
inc
stos
repz
scas
inc
and
or
mov
test
sbb
movsl
test
ss
dec
dec
lret
push
xchg
xchg
jbe
test
cwtl
mov
stos
lods
jp
popf
adc
repz
sub
movl
call
stos
mov
addr16
loopne
pop
dec
mov
ficoml
xor
jne
mov
sub
dec
out
pop
dec
jp
and
sub
ret
jmp
adc
movsb
cmpsb
fadd
xor
jbe
and
sub
xchg
push
and
sahf
and
xchg
daa
inc
ret
ds
xchg
andb
xor
cmpsl
push
cmp
mov
add
add
push
fcompl
movl
dec
js
lahf
xor
xor
xor
jle
jle,pt
leave
or
jbe
mov
push
imul
sbb
cmp
dec
pusha
loop
mov
pop
inc
scas
jmp
insl
dec
mov
pop
and
mov
into
mov
aam
jnp
js
inc
push
ds
gs
das
sub
fistps
mov
jl
aam
stc
push
fwait
jmp
pop
nop
xor
jecxz
xchg
hlt
pop
sub
and
xor
jb
nop
and
cs
mov
cmp
inc
jno
in
sbb
jbe
sub
sbb
outsl
adc
inc
setl
cmp
ficompl
daa
orb
xor
cmp
mov
cmp
lcall
loop
outsl
sub
jae
fdivrs
arpl
outsb
addr16
arpl
and
lret
out
inc
jb
mov
cmp
ret
mov
in
test
pop
cli
mov
shrl
cmp
mov
mov
or
mov
out
sbb
pop
mov
lret
xor
aaa
xor
jne
stos
push
adc
lods
ja
adc
sarl
add
mov
push
xlat
shr
xor
call
jmp
inc
sbb
pusha
pop
dec
repz
out
pop
fsubrl
mov
sbb
ds
enter
push
test
lcall
add
stos
and
add
xor
movsb
test
xor
mov
std
ja
sbb
hlt
call
xchg
das
jnp
pop
into
shrb
dec
sbb
jmp
ss
bound
jno
mov
inc
shl
ljmp
pop
test
mov
or
and
or
loope
pop
sbb
mov
dec
test
xor
fwait
jae
pop
mov
adc
fcomps
loopne
arpl
xor
inc
imull
lods
std
mov
aad
pusha
adc
adc
pop
roll
and
shlb
sub
mov
and
xlat
mov
aad
xor
test
adc
dec
cmp
aad
loop
les
repz
mov
cmp
shll
xor
mov
jb
lcall
in
pop
int3
and
xor
stos
push
adc
fcmovnb
mov
loop
dec
add
ds
shlb
push
jbe
xchg
fnstcw
sbb
ret
cltd
mov
hlt
adc
xor
inc
sbb
dec
adc
sahf
pop
xor
push
xchg
loop
mov
or
push
mov
cs
scas
sub
sbb
insb
popa
mov
xor
fisttps
dec
aas
mov
or
loopne
sbb
lret
add
cmp
pop
lahf
lret
add
rolb
dec
xor
mov
insl
cld
adc
aaa
frstor
xor
and
mov
push
subb
divb
test
inc
icebp
add
mov
lcall
testl
mov
hlt
ret
mov
mov
int
jmp
cld
rolb
gs
adc
xchg
inc
xchg
testl
stc
pop
mov
dec
ficompl
mov
clc
rol
mov
adc
test
dec
push
fists
add
xor
mov
sub
push
sbb
out
lret
sbb
sbb
jl
and
incb
andl
lock
mov
arpl
pop
xchg
pop
and
jno
sti
ret
in
or
cmp
pop
ret
sahf
test
shr
ds
push
jo
mov
rcrl
xor
ficoms
jns
push
jbe
add
test
mov
mov
test
popf
fildl
movsb
cmp
adc
test
gs
dec
mov
gs
mov
push
pop
or
adc
outsl
sti
movsb
adc
push
push
or
bound
fistl
iret
divb
ficoml
mov
daa
pop
les
inc
fiadds
jecxz
sub
or
or
sbb
mov
jg
adc
xchg
push
fildll
faddl
pop
mov
mov
jmp
adc
js
shlb
leave
es
adc
mov
scas
dec
sub
lods
dec
addr16
into
push
jne
lock
inc
push
lret
repnz
int3
pshufw
mov
push
arpl
push
and
xor
push
das
nop
nop
xor
cmpsl
mov
sub
je
jne
add
rcr
sahf
bound
pop
mov
dec
adcb
daa
push
fdivrl
mov
or
or
dec
mov
add
push
fcmovnb
adc
fildll
inc
or
mov
lret
enter
sbb
mov
dec
loop,pt
pushf
add
sti
aaa
and
fnstenv
imul
pop
cmpl
mov
dec
popf
orb
js
adc
mov
std
or
nop
adc
lods
add
add
inc
mov
xor
jl
data16
inc
sub
and
mov
sub
fsubrl
push
inc
mov
cwtl
lds
cmovno
insb
jp
jne
cmp
add
xor
xor
pop
and
jl
mov
es
or
push
push
cwtl
and
cmp
sbb
ss
aad
mov
decl
add
dec
xchg
ds
fidivrl
dec
sbb
push
xchg
mov
or
jle
stos
dec
mov
sub
jmp
mov
add
fdivl
push
mov
xchg
adc
xorb
ret
mov
mov
bound
inc
cmpsl
adc
sbb
mov
test
push
and
mov
xchg
and
xor
sub
xor
std
fs
arpl
mov
and
inc
rolb
out
cld
jmp
mov
inc
xchg
ds
xchg
pop
insb
pop
fcompl
pop
arpl
and
sbb
xchg
fdivr
push
mov
push
insl
mov
incl
cs
std
fcmovnb
ret
fisttpll
fildll
xchg
dec
push
shl
mov
cmpsb
dec
enter
shlb
or
jne
add
cmp
sub
mov
pop
bound
int3
adc
and
out
and
cmp
les
outsb
or
cmpl
mov
xor
adc
ds
ss
dec
push
stc
push
scas
into
cltd
and
pop
cmp
bound
out
pop
inc
es
jns
lahf
call
les
mov
inc
dec
test
cmp
or
shll
movsl
cld
adc
gs
cmp
pop
mov
cmp
push
test
mov
mov
cmp
les
shl
xchg
sar
xchg
xor
push
addb
shl
sub
inc
mov
push
popf
int3
dec
xchg
cmp
xchg
and
pop
pop
test
jbe
daa
cmpsl
arpl
ljmp
cmc
into
jecxz
jnp
sub
push
in
loope
cmpsb
push
pop
or
nop
or
push
stc
fsubrl
and
and
mov
sub
pop
inc
inc
sbb
lods
stos
xchg
notl
sub
cld
aam
cmpb
mov
push
jg
or
test
je
fbstp
fsubrp
or
mov
xchg
sub
push
push
fs
cmp
dec
cmp
mov
fsts
or
ficompl
mov
dec
in
loope
hlt
xchg
hlt
mov
int
mov
and
adc
js
leave
xchg
push
jge
ja
rcll
inc
xchg
push
push
imul
insb
outsl
cmc
adc
test
shrb
fwait
dec
inc
ret
ret
cmp
cmp
mov
in
pcmpgtd
orb
fdivrs
add
ror
cmp
inc
test
dec
dec
push
pop
decl
xchg
xlat
fprem
movb
lds
mov
std
cmp
mov
jno
and
add
push
pushl
sti
test
sbb
add
das
pop
stos
pushl
int3
jg
testl
lods
push
mov
movsl
and
aas
push
mov
or
sbb
test
jo
cmp
leave
or
popa
or
jmp
xchg
cmc
sahf
out
ret
arpl
or
sub
shlb
mov
dec
test
lret
pop
insl
pop
xchg
ljmp
fdivrs
les
out
dec
ds
cmp
cmpsb
stos
sbb
dec
pushf
cmpl
sub
mov
or
lret
repnz
jg
cmpsb
and
test
push
adc
mov
sbb
sub
mov
pop
lds
pop
ds
sbb
fnstcw
fdivp
or
ret
ja
cmp
in
sahf
cld
cmc
add
mov
shlb
push
flds
mov
sub
cs
adc
xor
div
jnp
xchg
movhps
popl
sub
aad
mov
mov
add
in
push
int
loope
int3
pop
xchg
es
inc
push
jns
cmpsl
cli
inc
mov
scas
mov
jp
test
test
xor
dec
fldt
dec
cwtl
or
dec
inc
sub
test
clc
lds
movsl
xor
aas
xor
mov
xlat
and
repnz
andl
pop
jno
push
test
pop
dec
mov
or
add
clc
dec
mov
arpl
ds
push
lahf
lahf
inc
fs
xor
push
xchg
lret
mov
jmp
xchg
ljmp
inc
jl
dec
jne
in
int3
push
dec
adc
mov
out
xor
pop
es
in
or
add
and
cmpsb
hlt
jbe
inc
out
insb
out
out
xor
arpl
insb
out
shl
in
inc
scas
push
aad
or
stos
mov
bound
pop
movsl
repz
mov
push
cmp
mov
ss
pop
cmp
loop
repz
ret
push
inc
repz
xchg
repz
clc
pop
jge
ret
xchg
xor
pop
out
cmp
mov
movsl
and
leave
xlat
sbb
mov
test
in
adc
inc
pop
lcall
leave
jecxz
stos
ret
sub
push
inc
outsl
clc
je
inc
and
addb
push
xchg
fadds
arpl
aas
pop
fisubl
lea
pop
ret
jae
scas
or
pop
push
lock
out
stos
mov
sti
cs
pop
and
shrl
nop
leave
add
xchg
mov
mov
push
adc
shrl
push
dec
jae
movsl
fildll
sub
cmp
lret
out
jno
outsl
inc
lret
sub
lret
cmp
ror
mov
jg
push
sub
sbb
push
add
mov
sarb
inc
add
sub
in
inc
ljmp
jns
add
test
insb
and
xchg
mov
mov
dec
add
mov
pusha
je
mov
cmp
fst
imul
shrl
add
bound
scas
test
mov
add
push
dec
fistpll
fs
cltd
push
mov
or
mov
push
cli
ror
sub
fidivs
cmpsb
lret
outsl
sub
jle
cmp
arpl
inc
aam
iret
aad
mov
ret
and
repnz
xor
xchg
lcall
xchg
mov
leave
cmp
pushf
sahf
xchg
mov
ss
test
pusha
sub
nop
aaa
in
xchg
pmulhuw
mov
mov
push
push
inc
mov
je
mov
fs
mov
fidivl
stc
lahf
repnz
adc
and
and
add
fbstp
lahf
sub
or
push
in
add
push
cmpsl
cmpsl
out
adc
cmp
lods
mov
shlb
nop
mov
push
pusha
shll
stos
repz
cmp
sahf
xchg
js
std
push
sbb
mov
sub
stos
into
dec
inc
es
lods
orl
mov
int3
dec
xchg
fiaddl
mov
and
mov
mov
push
xor
pusha
inc
add
mov
and
inc
inc
push
bound
dec
pop
xor
pop
in
sub
xchg
mov
cmp
and
push
rcrl
push
mov
je
cmpb
call
sub
lcall
jns
fildll
mov
xor
mov
mov
pushf
ficomps
xor
dec
cmp
cmp
xor
mov
clc
jne
pop
lret
xor
adc
popf
push
jns
or
cmpb
pushf
inc
cld
dec
cmc
mov
dec
mov
call
dec
dec
aam
in
popa
pop
repz
mov
lcall
leave
dec
inc
test
add
pop
jmp
jmp
dec
dec
arpl
inc
adc
sub
fisttps
and
xor
into
sub
mov
xor
fistpll
ljmp
lcall
sub
test
cmp
mov
mov
pop
fs
jp
cmpsb
sbb
xchg
cmp
jp
sbb
loope
xor
jo
cwtl
psrlw
mov
rolb
sbb
mov
jp
fs
out
dec
cltd
enter
call
fcoml
mov
enter
xorl
mov
rorb
xor
xchg
sbb
mov
xchg
jb
loope
dec
push
js
sbb
xchg
mov
mov
dec
sub
ret
out
mov
notl
sbb
pop
hlt
push
out
rcll
jo
push
ret
push
mov
mov
shrl
mov
cmpsb
test
mov
or
ljmp
inc
pop
cmpsl
mov
loop
xchg
or
cltd
out
or
outsl
adc
sub
stos
jmp
xor
int3
xor
xor
loop
mov
std
test
call
ret
sarb
pushl
ja
cmpl
pop
mov
dec
dec
sub
incb
dec
cmp
and
pusha
jb
rcll
jge
jns
outsb
data16
inc
in
mov
push
data16
and
sbbb
fwait
mov
sub
popa
cli
dec
pop
push
fnsave
shr
sub
addr16
mov
cmp
cs
dec
movaps
test
not
adc
rcrl
loop
cwtl
popa
jnp
mov
mov
push
incb
into
cltd
cld
cli
push
rclb
or
pop
leave
movsl
mov
push
push
mov
or
repz
inc
addb
add
inc
mov
xchg
or
push
rcll
clc
aam
mov
xor
loop
fsubr
int3
jecxz
inc
hlt
std
and
xchg
mov
iret
mov
or
in
sbb
mov
cmp
movsl
mov
adc
pop
mov
fidivs
adc
cltd
fidivrl
test
pop
push
add
xchg
mov
cld
add
pop
mov
rcll
sbb
ljmp
and
push
lahf
rcrl
aad
lock
adc
sub
dec
push
or
iret
insb
sahf
adc
jl
inc
xlat
jl
or
xchg
lret
pop
sub
fcmovnbe
filds
lds
mov
ds
ja
aam
mov
lret
mov
lods
mov
mov
dec
dec
cltd
test
and
pushf
xchg
cs
std
push
sbb
out
xor
in
push
push
cld
loope
adc
jae
movsl
mov
mov
idivl
cmp
xchg
add
shrb
js
jns
jns
iret
loop
push
inc
push
pop
repz
mov
jnp
mov
test
fmuls
imul
fists
cs
outsb
outsl
or
or
mov
sbb
outsb
mov
xor
mov
xor
dec
icebp
jae
cmpsl
add
lcall
mov
popf
imul
jg
int3
or
fisttpll
rcl
jle
mov
push
dec
cwtl
inc
cmpb
arpl
jbe
test
into
inc
ljmp
test
lock
jno
push
or
push
xor
insl
jge
xor
loopne
f2xm1
cs
xchg
ja
mov
and
dec
loope
add
repz
push
std
dec
mov
dec
cli
add
cmp
pop
push
shrl
xchg
dec
mov
xor
push
test
mov
push
or
sub
xchg
ljmp
je
cmpsl
sbb
sti
cld
mov
add
cmp
pop
hlt
mov
ficomps
bnd
jmp
out
fcomi
add
cmp
sub
std
cmp
mov
pusha
xchg
hlt
add
jecxz
movsl
mov
inc
and
pop
xor
adc
jmp
iret
xchg
loope
push
out
inc
insb
sti
add
stos
sub
mov
dec
dec
or
out
push
lcall
ror
push
pop
icebp
xchg
inc
popf
add
imul
push
jg
pop
mov
cltd
push
or
sub
psllw
sbb
js
inc
aas
sbb
or
repnz
cli
clc
mov
scas
sub
mov
push
pop
fnsave
lcall
jo
dec
lret
pop
pop
aas
mov
outsl
jo
sub
jns
jle
pop
bound
in
jns
stos
out
xor
subb
jbe
cmc
sub
mov
andb
ja
add
mov
mov
pop
mov
out
dec
lahf
inc
sbb
xlat
ds
and
jno
sub
daa
xchg
sub
fstps
lods
cld
imul
push
pushf
push
dec
mov
mov
outsb
data16
popf
inc
data16
mov
dec
into
jp
ret
dec
pop
inc
hlt
nop
lea
dec
dec
enter
and
xchg
aas
push
pop
mov
push
fadds
out
mov
cs
fmuls
cltd
push
jmp
and
sarl
adc
lea
test
insb
mov
dec
add
cmp
and
fsubrp
inc
loopne
mov
jae
das
out
pop
aad
jne
cmp
lcall
imul
mov
xchg
pop
int3
rclb
pop
imul
aam
add
fsubrl
nop
mov
inc
push
out
arpl
adc
mov
xchg
jg
insb
xchg
std
mov
insl
dec
scas
sub
rcll
dec
ficoms
repz
inc
cld
popf
mov
xor
out
cmpsl
int3
sub
jb
das
in
inc
ljmp
hlt
push
push
ja
xchg
cmp
jg
xor
dec
push
jmp
mov
inc
jp
or
fucomi
popf
aas
inc
or
jmp
negl
push
inc
imul
js
fmulp
xchg
mov
pushf
aam
mov
pop
ret
insl
lahf
mov
imul
xor
out
cwtl
nop
pop
dec
and
mov
xchg
out
popfw
test
es
ljmp
arpl
add
sbb
sub
icebp
mov
hlt
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
adc
lods
fnsave
lock
sbb
mov
xor
inc
pop
jl
sbb
mov
fidivl
push
movsb
mov
dec
mov
or
and
pop
inc
push
pop
movsl
or
pusha
adc
jmp
or
jl
std
fisttps
xor
xchg
aas
inc
iret
dec
add
inc
leave
pop
sbb
ss
daa
rcll
inc
aad
out
outsb
in
shll
or
aaa
in
and
xchg
and
mov
xor
int
push
xchg
or
inc
fadd
or
jecxz
xor
andb
movsb
aas
cmp
rcrb
outsb
test
into
xor
add
fldcw
aaa
pop
cmp
mov
daa
mov
and
push
je
and
fstpt
enter
rcll
xor
hlt
fbld
add
lock
in
inc
adcb
xor
pop
sub
roll
sbb
sahf
push
cmp
fidivrl
or
outsl
repnz
jb
insl
mov
jno
adc
lods
hlt
inc
aad
cld
push
addr16
ljmp
add
cmpsl
into
sbb
pop
ret
movsb
push
lods
jb
pop
jge
jp
jbe
data16
pop
push
pop
in
add
xor
mulb
popf
adcl
pusha
jg
aam
pop
adc
dec
cltd
and
xchg
cmp
loope
daa
in
sbbb
xor
adc
and
sub
ja
jmp
test
push
push
mov
mov
mov
sarb
xor
outsb
movb
push
sbb
out
repnz
imul
pop
aad
mov
pop
xchg
clc
push
pop
clc
cld
fs
imul
add
insb
lds
and
and
movsl
incl
jo
fcomps
adc
jne
out
out
push
sub
hlt
test
mov
dec
sti
cmpsl
mov
rdtsc
or
insb
push
cmp
xor
and
call
les
mov
pusha
and
loop
mov
pop
repnz
clc
mov
push
out
push
add
jecxz
loop
ror
mov
lds
mov
lods
inc
cmp
xchg
in
outsb
jmp
push
into
cmp
shll
cld
cmp
or
cmp
jb
in
sbb
jecxz
aam
sti
movsl
loop
adc
imul
pop
sbb
repnz
notl
std
in
push
jae
stos
movsl
add
pop
pop
jbe
and
adc
pop
pop
lret
testl
fwait
add
fisubs
lret
cmpb
xchg
inc
pop
shrb
cmp
rclb
dec
testl
mov
int
cmc
test
aad
mov
xchg
dec
popf
clc
and
pushf
adc
mov
dec
xchg
mov
or
scas
inc
pushf
or
insb
int3
mov
cwtl
cmp
ja
imulb
repnz
pushl
adc
lods
xor
xor
inc
mov
ljmp
negb
or
test
leave
cmpsl
ret
fsubl
add
jp
sbb
cmp
into
sbb
pop
addr16
sahf
cmp
cmpl
mov
adc
push
cmp
ret
data16
cld
mov
push
xchg
lahf
ja
jae
sarl
lahf
cmp
add
pop
roll
mov
mov
push
inc
lods
test
cmp
pop
push
adc
test
repnz
sub
bound
xlat
lret
push
cmp
adc
pop
xchg
push
enter
xor
stc
xchg
ret
mov
ss
popl
insb
jg
fstpt
xchg
rcrb
and
arpl
out
and
mov
pop
dec
cmpsb
dec
sbb
dec
sbb
sub
decb
jl,pt
dec
jbe
addr16
cwtl
dec
mov
cltd
inc
test
sub
xchg
cmp
test
pop
insb
out
jae
inc
cmp
and
pushf
xchg
fcomps
int
pop
mov
dec
insb
das
std
lock
xchg
notb
sub
ss
lea
aam
test
ret
lahf
pop
dec
aaa
pushf
int3
sub
stos
aaa
cmp
lods
or
js
in
gs
pop
cltd
adc
rolb
cltd
jo
sub
xor
mov
xlat
jb
fcompl
in
fs
sbbl
mov
pop
es
cltd
cmpb
sub
aas
stos
cmp
xchg
jo
lods
xchg
in
in
xlat
pop
nop
dec
jecxz
adcl
nop
roll
jbe
inc
push
push
xchg
insl
andb
loopne
into
stc
jecxz
enter
fldcw
or
jns
aam
xor
mov
dec
add
add
mov
cwtl
adc
mov
adc
inc
mov
lahf
cmpsl
imul
sub
lcall
mov
push
icebp
push
or
scas
mov
sbb
pusha
sar
movsb
cmp
loope
cmp
dec
es
int3
push
popf
mov
jmp
hlt
jmp
test
popa
adc
int
cmp
int
cmp
sub
sbb
dec
insl
lret
adc
call
push
sbb
out
mov
or
mov
push
aas
int3
rcll
adc
dec
pop
leave
and
sub
js
cmp
pop
xor
pop
jecxz
push
pop
mov
xchg
test
test
pop
sub
mov
inc
mulb
imul
inc
adc
pop
mov
sbb
mov
cmpb
or
ficomps
enter
into
ss
fucom
decb
push
repz
incb
lock
andl
xor
jge
mov
test
pop
out
mov
sbb
and
in
mov
cmp
jmp
fsub
push
pop
out
cld
jbe
xchg
jae
test
dec
cmp
jb
mov
mov
outsl
push
mov
dec
call
das
into
jo
and
sti
cwtl
cmp
movsb
mov
leave
imull
aad
cmp
lds
out
mov
cli
cmp
gs
cmp
sub
out
in
or
dec
and
adc
paddq
xchg
xchg
roll
mov
ja
arpl
ret
stc
push
jmp
pop
mov
cli
mov
movsb
inc
cld
add
push
xor
cmp
mov
lahf
add
jge
mov
std
push
andb
mov
out
in
jle
mov
jl
setno
mov
repnz
les
dec
or
aad
push
mov
movb
dec
xor
bnd
pop
fwait
pop
pop
aaa
add
lods
test
shll
xor
and
stos
mov
movsl
dec
pop
or
movsl
clc
divl
and
sbb
arpl
js
jae
sub
shll
mov
nop
mov
negl
loopne
sti
add
lcall
hlt
jno
aad
lods
sub
or
in
stc
mov
sub
adc
rcrb
pop
shr
pop
cmp
or
out
inc
imul
and
out
push
scas
mov
and
push
fdivl
fsubrp
mov
out
mov
lahf
out
cltd
mov
jp
pushf
fcomi
inc
imul
icebp
mov
mov
or
and
or
add
cmp
cmpsl
jmp
mov
mov
inc
roll
cli
mov
push
loop
mov
ficompl
movsb
fsubl
negl
fdivl
cs
cmp
je
mov
mov
lahf
xchg
push
aad
ficompl
outsb
dec
lahf
stc
xor
pop
out
outsl
adc
fadds
orl
cli
mov
scas
adc
inc
fldt
fucomp
mov
dec
fldcw
mov
aas
xchg
mov
pop
cmp
decl
fiadds
popa
lods
rorl
jge
cmp
int3
lods
mov
out
sub
lret
push
cmpb
mov
add
xchg
sbb
leave
sbb
cmpsl
jo
sahf
sahf
imul
jbe
push
and
ja
loopne
sub
mov
in
jnp
shlb
adc
lret
out
xchg
int3
or
sbb
lret
inc
sbb
pop
pop
jp
dec
cli
xorl
loopne
mov
cmp
fidivrs
add
es
pop
lret
pop
mov
dec
dec
jg
mov
mov
or
iret
inc
dec
and
lock
outsb
pop
fcompl
push
call
fcmovnu
xlat
inc
lea
fmuls
push
add
xchg
lret
cmp
xor
pop
jecxz
xacquire
push
xor
cwtl
push
cmp
xchg
push
mov
push
dec
es
jge
inc
mov
mov
push
pop
pusha
mov
lea
js
jns
fdivrs
push
cmp
mov
jo
shrl
sub
or
pop
mov
xchg
addl
pop
les
mov
mov
mov
jnp
sub
iret
push
xlat
pop
push
xchg
jb
test
inc
rcl
sarb
adc
pop
jg
jl
pop
jmp
push
mov
sub
ljmp
inc
mov
add
loopne
inc
pop
pmulhuw
add
arpl
mov
and
cmp
jge
sbb
es
ljmp
bound
jmp
sub
lock
shr
mov
mov
mov
adc
pop
mov
data16
add
mov
xchg
mov
sub
add
mov
lods
incb
je
loopne
call
inc
arpl
addr16
ret
fs
mov
mov
push
hlt
and
aaa
hlt
rclb
mov
stos
lock
push
push
aas
or
sbb
ss
xor
mov
add
mov
aad
sbb
lret
loope
shll
and
push
inc
scas
outsb
push
mov
inc
stc
add
mov
jno
mov
int3
sti
in
movsb
pusha
cwtl
pop
sub
lahf
pop
dec
shl
add
dec
adc
bound
dec
fdivl
jge
pop
push
adc
xor
dec
enter
rorl
lods
xorb
xor
jno
lods
test
mov
cmpsl
xor
je
int
or
jg
jmp
jne
adc
sbb
movsb
testb
int
jno
aaa
lahf
lock
fucom
pop
rolb
arpl
jnp
push
std
pop
dec
in
je
stos
popa
shl
out
push
mov
out
push
and
xlat
jo
pop
lds
std
repnz
mov
roll
pop
push
mov
jmp
mov
out
or
jo
das
jecxz
dec
sahf
xor
lea
mov
or
adc
rcll
ret
pop
jge
xor
ret
das
xchg
repnz
or
out
popf
mov
pop
and
xchg
cmp
fsubrs
movsl
jmp
and
insb
sbb
cmpsb
lea
decl
testb
mov
nop
sbb
gs
mov
unpcklps
pop
popf
mov
test
sbb
roll
call
outsb
das
xchg
ljmp
data16
mov
movsb
ret
jb
pop
xchg
cmp
fwait
jbe
pop
fwait
mov
movsb
lds
mov
bound
fdivs
jge
cmp
push
cli
loopne
mov
mov
sub
push
dec
rcrl
and
es
mov
mov
ret
cmp
arpl
and
icebp
add
mov
add
xor
fcomps
loop
and
adc
repz
aam
cs
inc
push
xor
push
in
push
inc
stc
rdmsr
jecxz
mov
test
lcall
cltd
repz
daa
sbb
fdivrs
push
xor
mov
test
jmp
insb
addr16
adc
scas
sub
jne
shrb
mov
mov
jge
and
test
repnz
and
cmp
xchg
sbb
adc
xor
cmp
aad
adc
insl
jbe
cmp
shlb
in
rorb
clc
aad
cmc
push
jb
std
out
aaa
jmp
imul
jb
unpckhps
push
adc
pop
lret
push
pop
jmp
mov
ljmp
cmpsl
fsubrp
mov
jo
inc
into
in
pop
lds
jge
sub
sub
adc
or
pop
movntps
cwtl
add
mov
movsl
repz
loope
test
lcall
pushf
mov
ds
adc
mov
pop
jecxz
mov
sub
es
gs
push
jmp
xor
xor
cmpsl
xchg
cwtl
je
push
lds
jns
and
int
lock
ss
mov
dec
or
xlat
sbb
call
mov
stc
dec
xlat
pop
insb
dec
mov
cwtl
or
enter
popf
icebp
dec
xchg
mov
cmp
mov
mov
test
cmp
cmp
shrl
sub
fildl
mov
xor
out
mov
jecxz
push
cmp
out
sbb
mov
mov
or
inc
pop
fcomip
ffreep
or
lcall
or
jecxz
fldt
fwait
sarl
xor
rorb
fsubp
dec
hlt
sub
inc
pop
incb
fdivs
cli
or
movl
sub
add
loope
pop
xchg
imul
dec
cld
jmp
in
rcll
and
inc
fcoml
inc
fwait
test
pushf
sub
loopne
pop
adc
mov
cmp
andl
xchg
pop
xchg
outsl
and
add
dec
repz
test
push
jnp
cs
mov
adc
mov
loop
dec
popa
iret
mov
mov
pop
scas
cli
fwait
insb
fsub
arpl
dec
pop
les
xchg
pop
into
addb
cmpsb
jo
test
mov
xchg
into
sbb
jbe
mov
inc
call
cmpsl
add
xchg
stos
pop
ret
and
call
push
sub
insl
pop
je
inc
inc
les
xorb
xor
mov
jns
sti
repnz
pop
jle
js
gs
push
and
jle
jge
test
mov
mov
ficoms
repz
loop
adc
mov
dec
mov
test
mov
inc
in
and
ljmp
orl
jg
mov
inc
sti
sar
fsubp
xor
sub
inc
aad
mov
cmpl
add
mov
pop
negb
loope
dec
push
cmp
pop
stc
out
into
bound
shl
lds
popa
stos
outsl
cmp
mov
dec
xor
bound
rorl
push
cs
cmc
pop
test
outsl
mov
test
adc
xchg
cmc
dec
add
fwait
insb
jg
mov
mov
jbe
ljmp
cltd
jl
std
mov
test
enter
jns
sarl
inc
adc
lahf
test
cmp
stos
sub
pop
or
lods
cmp
push
sub
scas
push
pop
or
pushf
adc
sub
or
mov
jle
mov
cmp
arpl
out
bound
adc
insl
dec
jnp
lds
pop
adc
jp
cmovs
int
fs
andb
stc
sbb
out
mov
or
aaa
mov
call
jp
mov
lret
ret
in
dec
adc
cmpsl
movsl
mov
aaa
cmp
enter
xor
cld
cwtl
lods
dec
or
mov
adc
push
push
jbe
jne
fmuls
lcall
xor
ss
out
sbb
test
out
sbb
shrl
into
aaa
fs
sbb
sar
das
cmpsl
shlb
mov
dec
daa
inc
xor
mov
lret
mov
push
test
xor
xchg
pop
lock
rorl
mov
jge
js
or
fsubr
in
push
aam
push
test
aam
cli
push
push
jge
ret
push
sbb
jb
adc
push
fcoml
xchg
mov
dec
push
shlb
add
xor
mov
sub
and
xchg
ljmp
push
nop
add
dec
insl
cmp
mov
aaa
push
fs
mov
jl
idivl
fs
cmp
or
repz
data16
test
dec
gs
jae
mov
xchg
pushf
js
pop
mov
adc
or
nop
xabort
inc
movsb
dec
rorl
mov
in
in
dec
in
aas
lods
es
push
sub
sub
sbb
push
inc
mov
roll
xor
pop
arpl
jns
mov
mov
lods
add
inc
movsl
push
test
and
inc
add
mov
ret
hlt
jge
inc
xor
mov
in
out
jnp
clc
push
cld
fs
xchg
iret
xchg
inc
mov
sub
jg
cli
pop
dec
test
and
xchg
mov
inc
dec
neg
ret
xlat
push
xor
dec
xlat
inc
pop
call
ret
add
lods
les
in
and
clc
repz
push
add
into
mov
lods
sub
push
mov
cmp
mov
out
jg
sub
pop
inc
aas
xchg
loop
mov
add
scas
pop
mov
push
data16
xor
cld
pop
scas
bound
rcrb
fcompl
cmp
add
jge
mov
dec
testl
cmp
iret
icebp
idiv
lock
cmp
fisttps
push
cmp
add
inc
hlt
sti
jle
mov
jnp
dec
je
mov
mov
dec
or
mov
inc
mov
aas
mov
leave
andl
dec
push
imul
sub
test
sbb
cmp
dec
lea
push
cmp
xor
pop
shrl
ljmp
pushf
or
pushf
call
cld
sub
iret
outsl
in
dec
pop
les
add
call
sbb
dec
pop
adc
fcmove
xchg
outsl
jge
adc
cmp
dec
cltd
xor
push
or
mov
xchg
inc
js
xchg
test
out
mov
rdpmc
stc
mov
sbb
jb
dec
pop
in
xlat
cmc
inc
or
cmp
pushf
lret
push
cli
in
cwtl
pusha
dec
sbb
aad
repz
lods
xchg
cmpsb
xor
cmc
loope
ret
ret
and
cld
pushf
jne
shlb
push
cmp
xlat
dec
mov
push
sar
fwait
jle
cmpsb
loopne
cs
fabs
and
cld
xchg
js
mov
gs
add
inc
jle
ror
inc
fstl
or
jns
pop
insl
inc
pop
mov
pop
sub
jno
fimuls
lret
cmpl
scas
jl
mov
push
pop
loope
adc
imul
call
cltd
mov
cmpb
shlb
popa
stos
out
adc
repz
fldt
cmpsl
cmpb
icebp
ret
and
cmc
mov
or
ja
dec
cmp
loop
orb
inc
mov
and
rcrb
rcll
adc
out
insb
cmp
outsl
test
jmp
insb
sub
inc
add
cmp
sarb
push
mov
sub
rclb
dec
movsl
gs
add
mov
xchg
sbb
push
rcll
ljmp
shlb
mov
std
outsb
repnz
cmc
insb
movsb
push
or
xchg
mov
aas
pushf
jle
out
roll
hlt
fsubrp
lds
lcall
xor
repnz
mov
insl
pushf
push
add
cwtl
adc
dec
sub
push
push
xor
dec
out
seta
dec
addl
adc
mov
mov
sahf
repz
jl
dec
fcmovnbe
and
lods
pop
popa
inc
subb
xchg
push
mov
out
mov
movsl
pop
mov
js
decb
sub
pop
imul
mov
je
rorl
inc
add
shlb
mov
cs
pop
add
js
je
mov
mov
rol
loop
call
pop
and
popf
xchg
mov
mov
mov
cld
xor
in
flds
sub
lahf
xchg
pop
stos
dec
xor
mov
loope
rolb
mov
imul
xor
leave
fldl
daa
aas
enter
add
movsl
inc
ret
mov
clc
add
inc
test
xor
shrl
adc
mov
mov
jecxz
mov
mov
xchg
es
cltd
leave
mov
mov
inc
outsb
lock
sar
jge
mov
and
je
call
cld
pushf
scas
fwait
ljmp
sbb
imul
lcall
add
cmp
adcl
dec
sti
out
cld
sti
pop
mov
mov
jge
ljmp
test
xchg
lret
out
inc
repnz
and
shlb
or
cmp
shll
xor
shlb
and
arpl
lock
ret
push
fstpl
adc
rorl
call
xchg
mov
adcl
in
push
fs
jb
dec
test
sbb
xor
push
call
xor
movsb
pusha
sti
pop
out
fidivs
shr
cmp
rorb
iret
cmp
push
sbb
flds
sbb
dec
lds
dec
imul
loop
aad
sbb
pop
test
inc
or
jae
pop
sub
rolb
mov
xchg
jns
mov
xchg
call
stc
loope
push
jge
popa
pop
repz
pop
xchg
in
shrb
mov
stos
dec
ret
adc
js
lock
enter
loope
into
popa
and
test
imul
jecxz
call
cmpsl
loop
shr
inc
xlat
fwait
xchg
pop
and
test
inc
ficomps
fldcw
sub
dec
aas
pusha
sub
ret
out
dec
cmp
roll
pushf
and
or
sub
xor
out
pop
or
xor
ss
mull
jns
pop
dec
data16
dec
jb
call
or
ja
sub
sub
add
sbb
out
push
das
pop
push
mov
push
adc
mov
jns
cmp
mov
ljmp
mov
dec
mov
inc
test
adc
jbe
inc
mov
hlt
push
enter
mov
lret
shlb
push
movsl
mov
out
stos
outsl
push
adc
mov
ret
xchg
aam
cmp
popl
jae
mov
push
inc
sbb
outsl
je
mov
jmp
adc
dec
jmp
out
rol
lahf
aas
dec
mov
xchg
sahf
in
repnz
loopw
mov
push
sbb
mov
std
mov
push
aam
and
data16
fwait
push
mov
pop
jnp
jp
pop
push
les
mov
ret
mov
pop
xchg
je
sbbb
fcomip
ja
push
xor
fwait
movsl
fbstp
mov
clc
es
into
stos
pop
push
outsl
clc
or
mov
mov
jp
sbb
in
icebp
test
lcall
dec
cmp
or
xor
cmpsl
outsb
sbb
rorb
xchg
or
insl
sub
jg
jmp
dec
dec
inc
adc
mov
jnp
sbb
add
leave
fs
sbb
jo
test
sbb
pop
repnz
sub
test
pushf
dec
adc
sbb
fiaddl
aam
cmpsl
cmc
mov
popa
lods
and
mov
push
and
imul
lret
jmp
jmp
push
dec
aas
int
cmpsl
test
rcl
addr16
test
fwait
jno
sti
sub
out
mov
push
sub
hlt
test
data16
pop
adc
enter
enter
add
imul
scas
stos
mov
lahf
sub
mov
ss
push
pusha
cmp
pop
jb
dec
test
loop
push
stc
jp
adc
shrl
enter
push
xchg
mov
or
sarb
xchg
or
out
sub
fwait
gs
rclb
jp
jle
pop
add
int3
sbb
or
outsl
das
ljmp
and
mov
mov
idiv
push
mov
call
stc
jmp
je
hlt
sub
fisubrl
aam
aam
sbb
push
mov
sahf
jo
sbbl
mov
jg
idivb
hlt
fdivl
mov
test
lea
aaa
pop
cmpsb
mov
jle
loope
adc
out
add
mov
pop
mov
inc
pusha
popl
xor
and
mov
push
inc
inc
aas
insb
rolb
mov
push
insl
and
push
dec
sbb
rclb
int
push
add
cmpb
addb
shrb
xchg
adc
arpl
mov
jne
into
es
jne
fistl
cltd
test
insb
pusha
cmp
das
cmp
outsl
push
mov
inc
aaa
sbb
cmp
pop
push
jb
lea
mov
push
xor
jge
cmpsb
cmp
test
iret
enter
adc
jb
xlat
stos
fnsave
push
loopne
stos
inc
or
xor
mov
int
xchg
pop
shl
stc
insl
divb
test
rcr
pop
imul
xchg
ror
lock
mov
sub
sub
and
or
push
add
or
repnz
popf
outsl
jbe
mov
xchg
movsb
int3
repz
push
imul
jmp
outsb
dec
ds
pop
stc
dec
mov
aaa
jbe
insb
xor
sbb
jl
aas
cmp
jecxz
int3
xlat
imul
inc
icebp
push
icebp
imul
jmp
add
fstps
mov
mov
fidivs
cmpsb
push
xchg
ljmp
push
dec
and
adc
mov
stos
jge
repnz
xchg
mov
cmp
jecxz
lcall
jge
sub
sbb
stos
daa
loope
adc
jp
cmp
sub
cmp
sahf
in
mov
inc
das
loope
or
dec
xor
xor
popf
ds
mov
loop
imul
sarb
inc
xchg
fs
mov
push
xor
jnp
mov
pushf
mov
and
int3
mov
sbbb
add
in
jne
aam
jl
xchg
add
not
icebp
pop
rcrl
mov
jb
out
xchg
outsl
ret
lret
sub
dec
xor
sub
or
push
mov
test
in
and
pop
sub
aas
mov
stos
gs
pop
cmpl
arpl
call
xchg
mov
xlat
repnz
mov
dec
cmp
pop
or
mov
aas
mov
sarb
sub
xor
xchg
cmpsl
sar
sub
ret
sbb
loope
outsl
sbb
popf
pop
adc
inc
push
adc
mov
daa
mov
ljmp
or
mov
ljmp
insl
jmp
cli
cmp
ret
or
outsb
mov
sbb
hlt
out
cmp
test
outsl
or
popa
insl
sub
test
xor
pop
movsl
and
jbe
jns
xchg
add
push
faddp
sub
incb
jbe
hlt
jbe
popa
dec
ja
xchg
xchg
in
ret
movsl
bound
xor
repz
inc
loope
or
popa
icebp
ud0
lea
adc
push
mov
add
rorb
sub
mov
cwtl
sar
inc
dec
mov
insl
add
ja
inc
xchg
cltd
add
enter
or
shll
test
mov
add
mov
sub
mov
and
jle
or
jmp
sbb
aas
push
dec
and
pop
test
leave
scas
jno
push
arpl
cltd
orb
jnp
roll
jno
xchg
dec
shr
jb
rolb
xchg
rcl
pop
lds
lea
sahf
int3
mov
outsl
inc
sub
popf
mov
mov
je
shlb
pop
sbb
or
adc
gs
jle
xor
mov
fisubrs
scas
arpl
dec
jb
js
adc
fcmovnb
mov
cwtl
mov
sbb
mov
lea
lods
loopne
mov
stos
mov
insl
dec
outsb
jp
imul
mov
sub
aam
push
xor
aas
movsb
mov
mov
sbbb
xor
adc
stos
add
fsts
cmpsb
ss
pop
out
jle
xor
enter
push
jmp
jne
pop
mov
and
xchg
mov
push
lds
mov
movsb
call
dec
je
adc
popf
cmp
stos
push
jbe
and
add
fnstcw
push
jbe
fldcw
scas
xchg
leave
loopne
pushf
pop
push
push
lods
push
ficomps
mov
fildl
mull
sahf
adc
add
outsb
in
stos
or
je
lods
jb
and
mov
clc
out
mov
leave
add
sbb
mov
pushf
inc
enter
mov
ds
mov
ret
xchg
mov
int3
ljmp
ss
arpl
cwtl
sarl
cmovge
enter
mov
or
mov
dec
add
call
dec
aaa
and
or
adc
push
inc
imul
pop
jle
fucomi
scas
sub
lcall
xlat
call
aam
out
jmp
ds
es
sub
cli
dec
test
enter
rorl
fisttpll
mov
bound
inc
push
xchg
cmpsl
int
mov
inc
push
fs
inc
imul
push
mov
dec
aad
add
dec
xor
ret
sbb
push
jbe
pop
pop
imul
mov
or
cmp
xchg
test
ret
add
clc
leave
sbb
jae
ret
pop
sub
test
cmpb
test
mov
jnp
cmpsl
adc
jo
and
stos
sub
add
push
xchg
mov
test
popf
sbb
and
push
mov
pushl
add
jnp
xchg
and
call
imul
xor
aas
and
mov
push
push
mov
xchg
imul
into
ja
adc
push
movsb
push
nop
xor
inc
jb
int
jb
or
in
aam
notb
xor
js
sbb
sub
pop
stos
or
add
jb
xlat
adc
add
jmp
lcall
mov
fwait
dec
out
gs
imul
cmp
add
aaa
xchg
sub
sub
leave
loope
mov
cs
xor
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
lret
lock
mov
cmp
lds
pop
jl
insl
sbb
fstl
xor
pop
jmp
in
sub
mov
lret
test
dec
fst
push
sub
mov
lods
xor
notl
push
lds
pushf
xor
lock
out
mov
jmp
lock
inc
stos
push
or
xor
fsubs
test
int
call
cmp
fs
add
outsl
push
leave
insb
sbb
outsb
aas
sbb
in
rol
add
add
ret
pop
jnp
das
pushf
jl
clc
bound
inc
jns
icebp
stc
and
mov
mov
and
push
jbe
mov
lret
mov
xor
arpl
cmpsb
dec
push
jecxz
cmpsb
pusha
xchg
and
cmp
push
mov
insl
mov
lret
mov
out
sub
mov
clc
xchg
xchg
fbld
stos
inc
fstp
stos
leave
mov
outsb
mov
lret
sub
popa
sbb
xchg
test
lret
push
xchg
cmp
fcomps
mov
movsl
repz
xor
divl
in
xchg
mov
pop
mov
adc
outsl
or
jo
and
sub
jle
push
mov
popa
fisubl
stos
loop
push
xor
mov
dec
test
adc
les
jnp
jbe
stos
lods
xchg
pop
psubusb
es
lods
shl
inc
pop
pop
hlt
loop
jle
lods
cmp
ds
pushf
xlat
pop
divb
out
xchg
sub
xor
jns
xchg
push
and
and
mov
shll
add
lea
mov
ficompl
jns
call
movsb
int3
push
push
adc
pop
mov
mov
gs
rcrb
push
xor
mov
js
cmpsb
lock
add
cmp
sub
pop
and
lcall
fdivs
lret
mov
jl
ret
xchg
sti
loop
adcb
sub
sti
mov
pop
jno
dec
or
mov
xor
pop
and
insb
repz
popa
adc
pop
add
mov
or
push
loop
mov
cmpsb
sub
out
dec
add
test
std
mov
add
test
push
lods
or
mov
fstpl
push
mov
test
orb
mov
sub
pop
mov
test
cmp
clc
mov
outsb
mov
or
movsb
and
push
jg
pop
ret
inc
repz
mov
lea
cmc
repz
xorb
aaa
push
ss
scas
mov
nop
push
push
adc
jae
cmovbe
push
mov
das
lea
mov
jns
fs
sbb
adc
mov
mov
mov
pop
jo
push
lds
fwait
push
mov
xor
mov
mov
arpl
int
push
pop
pop
push
popa
mov
jno
loopne
loope
mov
jecxz
xchg
cs
cli
je
xor
ret
lret
inc
aad
mov
lahf
cmp
xchg
in
and
dec
mov
testl
cmc
imul
mov
xchg
mov
cs
shl
in
inc
rorb
fsubrs
fcompl
push
xor
aam
hlt
mov
shll
out
cld
pop
xchg
pop
inc
hlt
inc
outsb
popf
or
rcrb
loop
push
nop
es
cld
sarb
inc
jp
mov
pop
and
loope
loopne
fnstsw
dec
cmp
gs
inc
pop
pop
mov
mov
daa
shll
popa
xchg
xchg
xchg
fisttpl
nop
sub
cmp
lahf
xchg
jns
or
and
rorl
repnz
cltd
sbb
inc
xor
cwtl
xchg
xor
sarl
movsl
adc
ror
lahf
lods
repnz
es
adc
fildll
sahf
fdivl
ret
fcompl
lds
repnz
lret
shrl
cmp
cmpsb
gs
sub
loop
jp
sub
leave
sub
mov
pop
mov
lds
cmpsl
push
sub
or
movsl
aaa
dec
push
insb
add
cli
cmp
mov
insb
ljmp
dec
dec
sbb
mov
leave
adc
push
cld
out
and
jae
daa
and
push
in
xor
int3
push
lea
inc
cwtl
pop
or
stos
mov
adc
cs
mov
xlat
iret
jb
jbe
pop
pop
jge
xchg
sbb
mov
xor
les
mov
faddl
adc
shl
sub
sbb
bound
js
pop
pop
push
clc
sti
outsb
or
insb
fcompl
push
popf
pop
das
adc
sti
sub
pop
mov
nop
pop
cmpsl
adc
out
sub
loopne
inc
or
adc
repz
scas
sbb
jns
mov
ljmp
cmp
dec
xor
adc
cmp
repz
or
pop
cmpsl
fiaddl
add
lods
addr16
add
pushf
ds
sahf
sti
xchg
adc
pop
in
gs
or
cmp
loopne
push
jge
sbb
cmp
shl
push
pop
jmp
nop
add
cmp
mov
sub
dec
nop
leave
divb
lret
xchg
scas
xchg
jl
pop
sub
cwtl
daa
in
lret
mov
outsl
pop
or
cmpl
xor
sbb
sub
sbb
das
fsubl
xchg
jbe
or
push
int
adcl
fsubr
scas
mov
pop
mov
mov
push
pop
iret
inc
dec
aad
fldenv
ja
or
push
dec
out
idiv
cmpsb
pop
pusha
repnz
adc
cmp
repnz
ljmp
dec
dec
pushf
mov
sub
adc
cmc
loope
movaps
mov
jge
cmp
scas
add
xchg
mov
ffreep
mov
rol
sub
inc
xchg
cmpsb
cltd
mov
and
cmp
dec
gs
pusha
aas
xchg
push
lods
jne
fpatan
or
pop
fstpt
cmp
jae
pop
pop
cltd
inc
or
xor
data16
fucomp
sbb
xchg
lret
cmp
fdivrp
cli
push
sub
cmpsl
sbb
and
setae
push
mov
pop
or
adc
inc
or
sub
enter
fwait
push
cmp
pop
and
sbb
test
pop
mov
push
push
sti
out
or
mov
dec
dec
cmp
aaa
mov
and
into
adc
test
mov
add
ss
out
cmpsb
mov
test
ds
dec
icebp
xchg
push
xchg
hlt
outsl
add
fbstp
dec
sbb
imul
push
ret
push
stos
push
inc
sar
jnp
int
or
sbb
in
cmp
aam
call
or
fdivrs
loope
sub
in
mov
push
mov
push
mov
rclb
lret
and
ljmp
push
adcl
cld
inc
pushf
jnp
orl
inc
cs
pop
push
pushf
cmp
jge
mov
negl
mov
movb
iret
test
and
cmp
dec
sbb
ss
xlat
cmc
movsl
mov
mov
push
ds
out
adc
add
scas
cmp
pusha
mov
mov
int
cmpsl
addr16
push
nop
sbb
stos
adcb
fmulp
mov
test
out
pop
or
lods
mov
xchg
bound
jno
jo
or
lock
rol
addr16
popa
imul
and
sahf
jne
mov
add
mov
scas
test
bound
scas
shrb
iret
pop
mov
aaa
jo
in
sbb
mov
pop
aad
mov
orb
pusha
mov
cmpsl
subl
out
das
inc
adc
add
jns
pop
mov
xor
sub
add
dec
push
mov
sarl
pop
test
sbbb
aas
in
int
cmp
loope
repz
andl
or
and
lea
jle
pop
lods
lods
les
jnp
out
aaa
popa
jo
jmp
mov
scas
mov
sub
inc
mov
and
inc
out
pop
call
stos
mov
loop
jp
dec
push
aaa
jnp
aad
pop
setp
mov
mov
adc
cmpsl
movsl
mov
or
xor
pop
cmc
mov
cmp
push
cmp
sarb
mov
add
add
int3
push
sahf
xlat
dec
loop
pushf
dec
xchg
or
adc
or
out
dec
dec
or
sub
sub
xchg
jge
test
jns
lods
mov
aas
adc
mov
add
xchg
inc
dec
xlat
mov
notb
pop
mov
sub
popa
and
adc
test
mov
pop
fwait
in
lds
cmpsl
jg
test
hlt
js
mov
sub
cmpsb
and
mov
push
in
aam
jg
in
inc
pushf
pop
pop
aas
xchg
out
sub
lahf
xor
xchg
and
lret
rcl
in
fwait
pop
rcrl
repz
clc
pop
push
cwtl
xor
jecxz
jmp
clc
mov
jne
sbb
cmp
cltd
pop
leave
sbb
add
into
fdivr
sbb
popa
rcr
ja
inc
push
push
and
test
or
lret
adc
pop
xchg
mov
cmpsl
out
mov
loopne
inc
xchg
ds
stos
push
or
es
je
stos
test
faddl
push
cmc
pop
and
mov
push
jo
mov
cmp
adc
mov
mov
adc
xor
xchg
jg
imul
xlat
mov
int3
in
fwait
adc
imul
rcrb
hlt
arpl
fisttpll
sbb
xor
mov
lret
lds
pop
cwtl
inc
xor
inc
test
andb
sbb
ljmp
mov
mov
adc
push
cmpsb
push
sub
add
sub
jp
stos
cltd
jp
loope
mov
pop
cld
cltd
jbe
loop
adc
push
ficoml
mov
adc
mov
addr16
jnp
cmpsb
in
mov
add
xchg
jnp
scas
inc
add
pop
cmp
loop
hlt
imul
cmp
lret
mov
jb
clc
sub
jge
inc
mov
push
pcmpgtw
pop
insb
adc
inc
es
and
and
add
cmp
xor
movsl
iret
push
sub
pop
push
leave
inc
not
shl
leave
cmpsl
and
arpl
mov
fidivl
push
jg
inc
out
lock
fsts
ja
lret
or
inc
scas
lea
jne
outsb
fiadds
mov
mov
cmp
lods
lret
adc
cwtl
add
arpl
push
mov
call
jmp
nop
dec
jge
mov
scas
add
bound
or
pop
arpl
mov
loope
imul
popf
xorl
mov
mov
mov
int3
fwait
cmp
inc
ljmp
in
xchg
lcall
xchg
dec
jb
loope
aaa
dec
mov
mov
cwtl
jno
enter
les
pushf
xor
or
out
pop
jb
call
popf
adc
aaa
push
ja
add
xchg
in
mov
dec
xchg
jmp
xor
mov
mov
adc
test
dec
fsubp
stos
xchg
ss
arpl
push
mov
lods
popa
xchg
pop
in
sub
les
adc
in
fisttpl
testb
jnp
repz
pop
pushf
mov
dec
in
test
inc
xchg
sub
pop
popf
and
lds
shlb
jle
lock
pop
push
push
xchg
scas
mov
out
loopne
jle
push
mov
add
fmull
in
es
js
push
lea
or
cmp
xchg
mov
dec
call
mov
outsb
repz
cli
in
test
mov
push
lods
leave
repnz
mov
and
dec
idivb
je
and
mov
test
cwtl
lahf
inc
clc
rcll
ret
js
xor
outsl
fdivrp
stc
ja
fwait
mov
out
imul
orl
mov
push
jecxz
aaa
orl
in
inc
xor
push
rcrl
jae
in
or
out
or
push
into
inc
je
push
repz
dec
jl
fsubl
dec
dec
sti
push
imull
faddl
lds
sub
sbb
mov
jmp
pusha
push
adc
jmp
lcall
fsubs
imul
fisubl
adc
scas
hlt
addl
inc
stos
movsl
dec
pushf
or
mov
cli
adc
and
inc
mov
sub
mov
mov
inc
bound
mov
nop
icebp
test
xor
call
adc
sub
xchg
shl
xchg
into
fldcw
in
imul
inc
cli
aad
xor
pop
sbb
add
or
mov
dec
std
xchg
jnp
and
cmp
jne,pn
inc
repnz
loopne
pop
repnz
sbbb
sahf
cmp
ja
test
and
mov
loope
jnp
sbb
xchg
jmp
add
mov
lret
out
aad
mov
std
mov
jo
pop
in
or
popf
std
mov
jg
adc
sub
lds
sbb
mov
lcall
iret
out
jle
outsl
and
in
addr16
lods
pop
fprem1
addr16
mov
mov
sahf
adcl
adc
mov
xlat
or
xchg
fnstsw
jnp
mov
cs
test
add
mov
and
xor
out
mov
pop
flds
aas
sub
cmp
push
sub
sti
sahf
es
dec
pushf
jae
xlat
inc
sub
xor
popa
pop
out
cmp
dec
mov
sub
mov
icebp
in
inc
sarl
pop
in
stos
sbb
lock
dec
xchg
xchg
dec
and
xor
inc
hlt
rcrl
sbb
cmpsl
fcom
ret
iret
mov
jmp
leave
xchg
xlat
out
pop
cwtl
iret
je
test
cli
or
xchg
btc
hlt
sub
nop
sbb
inc
add
inc
push
clc
out
inc
enter
xchg
xlat
mov
inc
push
sub
ss
mov
addr16
dec
xor
fdivrl
popa
icebp
or
inc
xchg
sub
dec
data16
xor
leave
jnp
out
mov
pop
and
mov
pop
scas
jp
cwtl
fwait
push
pop
add
loope
dec
iretw
pop
sti
das
xlat
div
add
iret
outsb
xchg
jge
mov
std
das
xchg
inc
loope
xchg
xchg
imul
cmp
xor
or
pop
dec
gs
jae
out
dec
inc
dec
pop
out
cmpsb
jae
cmp
call
push
xchg
push
xor
push
sbb
xchg
dec
push
fbstp
add
rep
xchg
vpshad
mov
lock
not
fisubl
notb
cmp
or
enter
ss
mov
inc
arpl
mov
mov
rclb
daa
test
lds
jp
test
out
pop
sbb
inc
push
std
js
gs
jl
inc
dec
and
repnz
mov
sub
int3
outsl
mov
inc
adc
xor
pop
or
into
xor
lcall
out
aaa
and
enter
push
cmp
icebp
dec
pop
pop
outsb
bound
xchg
in
hlt
pop
jo
inc
cmc
std
mov
xor
xor
xchg
loop
daa
push
loop
ja
add
pop
aas
pop
aas
mov
sarl
imul
ret
or
cmp
sbb
mov
outsl
mov
sahf
xchg
fimuls
cld
and
lods
push
mov
jo
pop
les
fbstp
cwtl
jnp
and
fucomi
jae
mov
mov
out
call
pop
sub
sbb
xchg
aad
add
les
loop
ficoms
push
insb
lcall
insl
test
inc
cmpsl
lret
lretw
dec
cld
mov
dec
and
sbb
mov
insl
mov
in
movsb
das
inc
jecxz
jmp
mov
pushf
push
or
inc
sub
mov
imul
lea
or
mov
xchg
xchg
test
mov
cmp
icebp
push
pop
xchg
in
sbb
call
aam
mov
sub
aaa
les
push
jl
sar
loopne
pop
push
fwait
sbb
mov
or
or
lds
mov
add
mov
cltd
xchg
and
cmp
stos
pusha
jnp
and
lea
aam
sub
and
xor
iret
fdivr
xchg
inc
lods
sub
mov
ds
pushf
cmp
shl
loop
mov
and
adc
stc
push
add
std
pop
push
jo
dec
addr16
aad
shrb
cmpsl
add
inc
cmp
pop
clc
shll
fmull
xchg
or
cwtl
lods
insl
cmp
push
sti
inc
addb
mov
sbb
inc
iret
jp
push
xchg
jo
pop
mul
icebp
jmp
mov
fbld
nop
int
dec
mov
enter
mov
fucom
pop
inc
add
xor
loop
outsb
sub
iret
cs
cmp
sbb
inc
xlat
aam
jne
sub
sbbl
sbb
xor
pop
int
sbb
inc
pop
bnd
roll
jmp
das
rcll
push
or
mov
and
fwait
and
mov
cld
jbe
stc
mov
cli
mov
dec
lret
out
ror
or
adc
xchg
cmpsb
cmp
xchg
dec
mov
mov
pop
adc
cmp
xchg
mov
sarl
cmp
inc
cmp
icebp
push
xchg
fnstenv
pop
les
imul
pop
cwtl
cwtl
jmp
add
pop
jns
fidivl
sub
hlt
ljmp
mov
ss
or
rcrb
out
xchg
push
ret
fwait
fs
jp
pop
sbb
in
cmp
rolb
popa
sbb
repnz
aas
movsb
sub
aas
sbb
int
add
bound
adc
in
dec
sbb
cli
jne
test
xchg
mov
imul
int3
adc
jle
mov
mov
loop
je
insl
insl
xor
loope
pop
pushf
daa
pop
add
xchg
lcall
jnp
xchg
jg
enter
pop
aaa
frstor
pushl
xor
mov
inc
scas
or
aas
jae
jmp
cmp
enter
icebp
shll
xchg
sub
mov
in
stc
jb
cmc
or
mov
inc
add
cmp
fcomp
xchg
incb
mov
fcoml
lret
mov
jo
fidivl
xchg
in
fcmovne
cmpsb
cmpsl
adc
jl
mov
pop
mov
jg
xor
ljmp
test
jl
xor
flds
fimull
dec
xor
inc
jb
int3
call
mov
and
mov
xchg
test
in
xor
bound
and
mov
aaa
or
stos
ds
push
jnp
out
xchg
fldl
mov
in
divb
test
imul
xor
jmp
pop
mov
xor
fldl
das
mov
dec
out
mov
push
test
push
xchg
mov
ljmp
xor
sar
pop
mov
xlat
mov
mov
mov
mov
inc
pop
fidivrs
sbb
or
sub
jmp
pop
daa
or
mov
push
pop
inc
shll
js
and
and
mov
xor
and
cmp
lret
jo
repnz
lds
and
es
mov
jne
test
fucomi
xlat
in
jg
push
xchg
sub
mov
cmp
ret
cmpsl
rcrl
mov
inc
imulb
sbb
or
mov
mov
and
adc
inc
das
ret
ds
mov
lahf
push
jo
out
inc
cld
aad
in
std
pusha
ret
xor
arpl
xchg
in
aam
xor
or
inc
outsb
in
mov
push
mov
jmp
lods
in
js
sbb
pop
shll
fmull
lds
sub
test
jl
xor
das
inc
test
and
inc
scas
jns
cmp
jbe
and
fldcw
mov
aam
hlt
fstps
repnz
fs
std
push
push
cmp
dec
and
into
push
cmp
xchg
pusha
mov
in
test
push
and
or
pop
shrb
mov
or
cld
fstps
aaa
movsl
js
mov
out
mov
loope
loopne
clc
mov
test
ret
shll
in
fwait
xor
sub
movsl
or
mov
jbe
push
call
adc
xchg
scas
sbb
inc
inc
mov
cld
les
adc
ljmp
xchg
push
jmp
insb
xor
aaa
inc
repz
int
jp
popa
xor
cmpsb
jg
cmp
imul
int3
dec
mov
adc
jno
std
out
sub
shlb
cmp
add
push
pop
mov
xor
xchg
lcall
pop
jb
push
pop
fists
fistl
mov
ds
int
mov
cmc
xchg
cmp
push
lods
jns
mov
outsb
sbb
xchg
jnp
out
mov
cmc
inc
loop
aad
into
xchg
mov
jge
dec
mov
xchg
ljmp
stos
int3
movsl
roll
movsl
pusha
dec
cmp
scas
push
fists
fimull
dec
dec
out
cmpsl
mov
jo
sti
fbstp
insb
out
pop
jle
lea
pop
or
inc
push
sub
enter
shlb
pop
xchg
je
jle
add
sbb
adc
mov
ret
mov
cwtl
stos
ret
ret
repnz
xchg
sbb
fidivs
std
shl
scas
jle
insb
and
push
push
cmpsl
aad
push
mov
mov
sub
loope
mov
flds
cmp
inc
and
dec
pop
pop
frstor
mov
mov
ss
iret
xchg
adc
or
scas
lahf
adcl
int3
mov
or
mov
mov
ds
fwait
adc
or
out
test
jbe
inc
sbb
outsl
lods
mov
push
or
dec
stos
int3
pop
das
or
jl
xlat
gs
lods
inc
mov
dec
dec
push
push
mov
aas
mov
inc
or
insl
mov
stos
std
jmp
mov
sbb
arpl
jp
mov
dec
test
aam
pop
sub
addr16
test
mov
fdivl
sbb
inc
stos
inc
adc
inc
je
or
sub
gs
sbb
ss
clc
sub
in
mov
xchg
insl
or
lret
jb
imul
mov
ficomps
mov
outsl
push
ds
xchg
das
or
push
pop
mov
push
lahf
sarb
mov
sub
test
add
xor
shlb
ljmp
sbb
mov
cs
xchg
jnp
andl
add
and
xchg
shlb
bound
sbb
test
loopne
mov
jg
mov
cmpsb
ja
mov
fistps
call
sbb
or
lcall
xchg
lods
movsb
iret
shrb
pop
pop
xchg
std
add
dec
in
and
fnstsw
aaa
nop
mov
xor
mov
pop
cmp
adc
sub
iret
adc
sbb
and
fbstp
sub
mov
pop
sub
mov
mov
push
mov
mov
or
out
clc
or
sub
ret
test
in
jp
clc
lock
xchg
popf
xchg
jbe
xor
in
insb
mov
repnz
xor
sub
stos
jl
hlt
lea
push
addr16
loop
das
int
sub
scas
orl
in
xchg
pop
int3
mov
jle
imul
and
lcall
inc
pop
lds
aad
shll
fwait
and
push
and
cmp
sbb
iret
mov
sbb
xlat
jp
mov
lret
leave
pushf
or
cmp
xor
add
pop
or
inc
ret
xchg
add
mov
scas
cmp
jbe
fisttpl
fcompl
and
ds
call
inc
mov
loop
insl
imul
test
pop
cmp
fwait
add
outsb
push
outsl
dec
mov
mov
in
gs
push
fstpt
in
scas
popf
jae
jno
lret
push
ljmp
mov
add
int
jnp
stos
inc
andb
dec
cmc
out
pop
push
xchg
fs
cli
insl
cmp
sbb
out
adc
xor
filds
sbb
adc
add
and
pop
cs
les
mov
rol
stc
xchg
inc
inc
repnz
pop
sub
test
lods
jmp
mov
test
jns
add
push
fwait
and
in
push
xor
sbb
add
sub
jo
hlt
sarb
cmp
sti
adc
adc
adc
dec
or
push
jae
xor
loopne
scas
sub
out
jp
mov
scas
cs
es
in
mov
pop
sbb
addr16
inc
or
push
insb
lods
shl
mov
sarb
mov
dec
cmpsl
loope
out
push
pop
sarl
add
hlt
and
insl
jl
and
mov
jmp
add
and
aaa
out
sub
or
sbb
and
cli
cmpsb
pop
inc
repz
pop
mov
stos
repnz
in
add
insb
adc
popf
insb
int3
mov
dec
push
test
pop
pop
push
and
lret
es
cld
inc
xchg
cmp
cld
push
jbe
adc
sub
lods
lret
push
out
es
inc
sbb
lret
sub
and
lds
and
mov
shrb
add
int
mov
test
ficomps
test
lods
add
dec
lds
cwtl
xor
push
cmp
sub
mov
cmpsl
jge
fs
outsb
inc
fidivl
xchg
adc
ret
ja
cmpsb
push
pusha
imul
dec
ret
fsts
cmpsl
push
rclb
shlb
sbb
pop
fsubl
pop
pop
mov
int
ret
push
push
test
jnp
mov
shlb
jb
push
xor
test
xchg
fstp
imul
pop
push
nop
inc
in
jp
sub
sub
rclb
popf
xor
adc
pop
or
sub
xchg
fcomi
lret
outsb
fcompl
and
out
imul
pop
push
lahf
cmp
dec
xchg
pop
shll
fstps
lcall
ffree
mov
inc
sbb
add
jns
jns
sahf
push
nop
ret
add
mov
pop
jg
ds
and
ss
mov
cltd
xchg
mov
int3
sbb
cs
jnp
inc
fisubrs
add
pop
adc
mov
xchg
push
and
pop
cmpsb
mov
push
in
mov
pop
nop
adc
xchg
cltd
push
lret
fldl
hlt
scas
movsb
xor
aam
negb
mov
mov
push
call
add
ret
mov
pop
pop
add
test
ds
nop
andb
xchg
add
subl
test
loopne
xorb
sub
pusha
pop
mov
lock
cmpsb
iret
lods
or
pop
test
dec
mov
mov
hlt
mov
dec
mov
in
movsl
lea
cmp
sbb
repz
addr16
stos
and
sbb
loop
jne
push
clc
popa
pop
es
out
jnp
jb
mov
dec
outsb
add
sbb
jo
fidivrl
cmp
adc
lock
dec
pop
aaa
cmp
push
mov
xlat
outsl
aam
insb
sub
inc
scas
fmuls
cmc
add
es
push
xchg
out
ss
imul
dec
and
sahf
shlb
dec
jns
xorb
jle
popf
sahf
subl
push
sub
mov
enter
mov
and
lret
jns
addr16
mov
pop
les
scas
in
and
insb
jo
and
sbb
mov
jecxz
adc
and
mov
or
insl
sbb
aaa
cmp
mov
ljmp
inc
jmp
push
dec
sbb
push
inc
nop
mov
lods
adc
cmpsl
dec
mov
sbb
xchg
jle
add
mov
or
leave
add
stc
ret
pop
fsubs
jbe
cmp
je
fists
mov
sub
push
sahf
xchg
sub
in
pop
js
cmp
jle
pop
call
ljmp
andl
aam
lret
sbb
pop
popa
adc
mov
lahf
dec
ljmp
fistps
aaa
aaa
loop
inc
dec
push
shl
jb
mov
call
test
push
in
mov
dec
mov
cli
sbbl
adc
mov
dec
popf
jl
push
xchg
repz
inc
dec
outsb
call
mov
mov
repnz
outsb
push
jns
int3
sub
fbld
lret
xchg
xchg
adc
jbe
out
inc
lahf
test
enter
cmp
push
and
mov
pop
push
and
mov
inc
sbb
adc
adc
mov
mov
cld
mov
in
int
rclb
sbb
jbe
push
mov
mov
js
jl
add
pop
add
mov
dec
mov
ret
fwait
aas
loope
push
sbb
stos
imull
cli
mov
or
flds
lsl
and
mov
add
jae
adc
mov
jp
xchg
mov
in
adc
xor
loopne
adc
mov
lods
fsub
jmp
mov
lock
ret
xor
inc
ror
push
pushf
cmc
push
idivb
mov
movsb
stos
push
nop
aas
pop
adc
aam
insb
cmp
insl
clc
mov
daa
sub
cld
ds
gs
pop
inc
insl
push
xchg
enter
mov
jp
push
dec
cmp
xchg
popa
lret
call
sbb
jns
les
bound
lahf
negl
movsb
cmp
loop
adc
leave
inc
cld
add
xchg
inc
or
test
mov
sbb
add
add
loop
test
rcrl
adc
jl
mov
test
xor
dec
push
or
xchg
mov
gs
push
cmp
out
xor
xor
dec
mov
jnp
stos
hlt
sbbl
mov
scas
sbb
push
cmc
jge
cli
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
rcr
xor
add
add
add
add
into
add
inc
ret
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
and
les
in
dec
lahf
inc
not
fwait
js
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
push
mov
xchg
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movl
mov
mov
xor
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
add
data16
jbe
lret
add
sti
add
add
fiadds
xor
fdivl
add
sti
lcall
lods
xchg
pusha
sti
xchg
into
jge
push
or
and
outsb
je
cli
in
dec
add
lahf
sub
shr
jl
push
mov
mov
pop
push
ljmp
sbb
jecxz
popa
mov
out
lods
gs
mov
cwtl
incb
pop
xor
xlat
mov
loope
mov
xchg
loope
ret
sub
sub
xchg
rorl
sar
sbb
pusha
pop
insl
pop
not
cs
xchg
outsl
lods
inc
push
adc
xchg
or
sti
or
mov
je,pn
pusha
das
lds
imul
add
pop
mov
cmp
cltd
jae
pop
mov
mov
loop
in
out
andl
dec
sti
mov
loop
nop
inc
cwtl
lock
rcrb
iret
notl
jl
int
add
xor
xlat
lods
and
decb
fs
clc
mov
pop
ret
push
xchg
or
mov
stos
and
testb
outsl
jp
sti
seto
test
fidivs
pop
arpl
lock
push
mov
rcrb
notb
push
mov
or
push
xchg
jne
sbbb
icebp
jge
dec
mov
das
sub
jg
fwait
pushf
pushf
aad
mov
das
add
inc
cs
pop
std
out
xor
inc
jmp
enter
fwait
cli
dec
ss
or
stos
rorb
xchg
lea
dec
cld
push
pop
outsl
fs
std
je
fimull
les
lds
push
fwait
xchg
cmpsl
jb
mov
cmp
repnz
push
push
push
shrl
add
idiv
jg
mulb
push
add
add
clc
into
loop
dec
into
stos
and
or
ljmp
out
jae
or
cmpsl
jbe
movsl
push
adc
or
add
in
pop
xchg
ret
sub
movsb
pop
xor
xor
ror
push
lcall
pop
xor
int
xor
pop
in
mov
inc
jecxz
mov
mov
and
clc
sub
pop
sahf
pop
cmc
pop
idivl
and
mov
loope
mov
jl
and
adc
inc
mov
imul
sub
dec
and
cmp
mov
in
push
mov
xchg
bound
inc
inc
bound
mov
inc
dec
inc
jge
pop
cmp
mov
or
mov
dec
scas
stos
das
mov
push
je
inc
push
stos
sbb
push
xchg
adcl
jno
ja
inc
les
xchg
push
pop
arpl
popa
into
mov
push
lret
cmc
push
add
mov
mov
popa
sbb
mov
mov
sbb
lds
filds
mov
sub
push
clc
mov
push
cmpsl
mov
xor
xchg
ret
pop
jle
dec
je
dec
lahf
cmpsb
pop
mov
loope
leave
mov
xchg
mov
and
movsb
adc
stc
xchg
cmp
dec
into
mov
xor
jbe,pt
jmp
or
out
stc
loop
and
pslld
into
icebp
push
push
push
jae,pn
jo
lcall
fidivl
je
dec
inc
and
insl
dec
xor
jo
sub
iret
adc
aad
ss
mov
ss
mov
stos
arpl
in
or
aas
add
sbb
pop
std
jg
rolb
xchg
add
add
add
inc
sbb
cmp
add
adc
lret
add
dec
jne
icebp
aaa
add
dec
jg
pop
push
lahf
xchg
adc
or
adc
test
mov
push
mov
push
into
jnp
lcall
popl
fsub
out
jle
stos
enter
ja
or
pop
repz
std
pop
pop
jno
movsb
iret
cmpsb
lea
rol
inc
xor
mov
loop
jge
stos
and
les
fcomps
pop
loop
insb
jnp
fprem1
xchg
in
sub
mov
xchg
arpl
out
and
movsl
adc
dec
mov
mov
jmp
pop
jb
sub
test
int
popa
pop
lods
cmp
dec
or
mov
or
push
xor
or
push
adc
mov
mov
pusha
mov
aam
outsb
mov
mov
icebp
data16
push
mov
ss
mov
clc
pop
cmp
add
xchg
sarl
inc
adc
jmp
ds
push
xchg
mov
std
outsb
int
pop
jmp
adc
and
outsb
insb
sub
fwait
testl
fmull
pop
push
imul
mov
jno
jle
inc
sub
and
ret
sti
mov
mov
iret
xchg
aad
or
sbb
mov
mov
in
add
icebp
mov
lcall
push
loopne
xchg
push
xchg
in
or
dec
pmaddwd
jb
cli
and
les
or
out
jbe
jne
mov
adc
pop
outsb
mov
jecxz
fisubl
mov
out
stos
cmp
push
pop
cs
les
mov
imul
push
mov
push
add
mov
int
mov
mov
add
sti
add
add
jmp
pop
xchg
ljmp
aad
xor
dec
add
iret
jnp
mov
or
or
in
js
cld
bound
in
mov
lock
mov
insl
std
jno
std
jge
shll
movl
push
in
stc
jo
insl
dec
mov
sub
pushf
inc
push
push
push
in
fiaddl
dec
gs
loopne
es
imul
xchg
sub
imull
jo
add
pusha
iret
mov
jmp
dec
shll
cli
std
xlat
mov
lock
pop
adc
stos
dec
cmp
movsb
adc
pop
and
popa
add
adc
pushf
and
and
push
inc
or
repz
inc
mov
mov
inc
or
adc
fimull
int3
jmp
aad
lock
and
mov
xchg
inc
mov
dec
mov
adc
push
push
sbb
mov
vcvtsd2ss
lret
pop
jno
cmc
and
inc
xor
lret
aaa
ret
adc
sbb
cmp
mov
jmp
dec
roll
dec
jmp
mov
cmp
cwtl
cmp
aad
mov
xchg
popf
jbe
stc
inc
push
cmp
and
ficompl
cld
out
add
aaa
daa
adc
pop
insl
jmp
or
cld
mov
mov
imul
out
ret
add
into
mov
cmpl
negb
inc
cmc
dec
mov
daa
xor
mov
scas
sbb
int3
inc
popa
lahf
addl
out
inc
mov
pop
iret
mov
cmpsl
xor
in
stos
xlat
jg
push
sbb
xor
sbb
frstor
dec
add
hlt
mov
std
jl
xor
jg
or
das
hlt
mov
add
add
add
clc
mov
into
cwtl
sub
jbe,pn
sbb
mov
fcoms
dec
push
dec
inc
inc
fdivrs
push
out
jne
ljmp
xchg
pop
hlt
inc
mulb
les
bound
pop
and
adc
outsb
xchg
jge
sub
imul
je
pop
mov
arpl
push
rol
mov
mov
jb
pop
cmpsl
sbb
out
pop
fs
jbe
jmp
cmp
in
jl
or
int3
inc
mov
in
mov
aaa
outsl
outsl
pop
outsl
push
les
mov
stos
insl
adc
mov
arpl
dec
add
aad
inc
jae
dec
mov
std
cmpsl
inc
in
cmp
add
ss
daa
nop
jmp
insb
xor
test
fbstp
test
xchg
insb
xchg
nop
fs
jbe
mov
xchg
divb
add
test
mov
mov
into
dec
loopne
mov
mov
cmc
stc
es
cmpsb
xchg
lahf
les
jp
add
push
icebp
and
sahf
mov
mov
popa
mov
cmp
pop
lret
call
mov
daa
lods
and
orl
fisubl
nop
sbb
mov
and
loope
addr16
call
roll
xor
push
xchg
pop
sbb
jmp
fucomip
adc
adc
mov
sbb
imul
lods
inc
inc
pop
and
xor
in
jecxz
imul
lahf
rorb
out
mov
int
push
pushf
mov
push
insb
jae,pt
push
push
ret
sub
daa
repnz
lds
flds
pop
mov
mov
mov
mov
add
add
add
cs
data16
cltd
orb
add
sbb
rcrb
scas
fwait
mov
mov
pushf
stos
orb
cmp
leave
pop
aad
imul
leave
adc
arpl
sub
scas
dec
and
bound
jmp
out
je
xlat
pusha
mov
cwtl
jb
clc
loopne
imul
movsl
mov
add
dec
adc
sarl
pop
push
jecxz
mov
popa
push
or
sbb
fstl
adcl
fadds
pop
push
push
cmp
cmp
xlat
insl
adc
mov
dec
sub
mov
xor
lret
imul
stos
push
mov
push
cmp
mov
push
aaa
je
xor
sahf
xchg
mov
hlt
push
out
jmp
test
fstpt
outsb
cld
ljmp
inc
add
or
scas
mov
cmpsb
rorl
mov
pop
loopne
loopne
mov
xor
xor
fdivl
inc
mov
sti
pmulhuw
pop
pop
mov
push
cmc
movsb
icebp
and
ficoml
xor
ret
add
fs
aaa
adc
inc
lret
rol
xchg
adc
lds
add
dec
test
jmp
jb
rcll
adc
loope
jae
xchg
or
push
xor
sub
sahf
rcl
or
sbb
sbb
pop
pop
inc
sahf
push
ret
mov
cmp
in
out
xor
jne
mov
add
fnstsw
test
mov
int
sub
cmc
dec
and
int3
pusha
lods
test
movsb
rclb
or
scas
sub
popa
xchg
out
xor
cmp
pop
imulb
jns
adc
cmc
and
cmpsl
sbb
jg
pop
fstps
ljmp
add
adc
jmp
orl
mov
jmp
test
int3
xor
bound
shrb
push
loop
adc
popa
jp
aaa
cld
add
mov
imul
xor
and
ret
add
cmpsb
stos
lcall
filds
inc
sub
pushf
dec
pop
xor
dec
arpl
out
movsl
cmc
movsb
in
xchg
sub
dec
sbbb
push
push
fcomps
dec
sbb
push
xor
cmp
mov
stc
inc
sub
pop
mov
jo
mov
loope
jb
pop
xor
xchg
mov
jnp
shrl
call
inc
push
mov
push
pop
fwait
adc
ret
popa
mov
lods
std
leave
fdiv
mov
outsb
mov
ja
mov
ret
adc
push
shrb
cmp
bound
inc
gs
mov
movsl
xchg
mov
sub
cli
mov
pushf
jbe
xchg
push
in
adc
adc
mov
leave
movsl
add
insl
sub
mov
xchg
mov
pop
dec
je
push
xchg
or
test
inc
xor
imul
and
jl
mov
cwtl
ds
fwait
je
jo
mov
add
push
inc
in
dec
jp
iret
cmp
lods
mov
pop
test
adc
jb
adc
pop
push
dec
pusha
mov
das
insl
fwait
xchg
sbb
cmpsl
add
dec
cltd
pop
xor
mov
jge
xchg
in
dec
and
lds
pop
and
pop
xor
xchg
repnz
mov
in
and
out
lret
icebp
cmp
test
int
cmp
mov
andb
jo
xor
add
inc
jns
mov
test
cld
mov
fisttps
or
pop
or
in
adc
clc
pop
mov
add
cmc
fistpll
movsb
fidivl
jp
push
leave
in
add
sti
add
add
sub
nop
sub
mov
mov
push
cltd
dec
in
popf
mov
push
hlt
push
ret
push
mov
mov
stc
aad
xchg
sahf
pop
xchg
jge
jle
adc
and
mov
fnstcw
mov
in
mov
loope
pop
gs
cli
out
sbb
int3
call
jne
rolb
xchg
ljmp
arpl
mov
pusha
push
outsl
mov
insb
ret
jl
adc
sub
dec
aam
xchg
jg
sub
pop
sbb
cmp
mov
jns
stos
mov
addr16
jo
fcmovnu
mov
in
inc
mov
data16
push
fiaddl
in
imul
ffree
sub
cmp
sbb
repz
shl
jbe
ja
sub
ret
sti
mull
mov
test
stos
xchg
aam
mov
test
in
mov
sti
adc
lea
pop
imul
adc
pop
xchg
dec
push
sub
xor
push
jbe
rcrl
jae
or
mov
ss
lock
inc
pop
sub
adc
or
pop
adcl
jmp
xor
lods
leave
and
or
xchg
cld
std
xchg
imul
mov
push
lea
scas
pop
call
mov
sub
sub
lcall
enter
leave
rcr
inc
jmp
push
inc
cmp
divl
dec
sub
inc
jge
pop
mov
leave
lahf
push
xor
in
mov
jae
mov
xor
shll
pusha
and
in
movsl
insb
xor
and
outsb
out
imul
frstor
dec
lcall
sbbl
mov
and
movsb
lea
sub
div
mul
imul
add
sti
add
add
aad
insl
lods
and
enter
in
fwait
lret
test
nop
outsb
jbe
sub
fdivrp
pop
jae
lret
addl
mov
addl
mov
add
aaa
sub
testb
call
push
cmp
popf
and
fwait
mov
jmp
mov
decl
out
cmpsl
icebp
mov
rcrl
cld
movsl
jmp
idivb
xchg
push
subl
sahf
xchg
loopne
outsl
pop
dec
pop
sbb
cld
je
sbb
stc
xor
dec
out
repnz
add
inc
push
fdivs
cld
movsl
dec
outsb
xchg
sub
cmc
cmpsb
jb
je
and
bound
dec
sbb
outsl
jl
inc
mov
cmc
xchg
cmpsl
xor
jno
or
push
cmp
inc
xor
bound
maxps
dec
sbb
enter
push
inc
repz
xchg
and
popf
les
test
imul
mov
dec
mov
les
stos
aad
sub
in
pop
xor
sub
xchg
subb
repnz
ds
shrl
mov
and
add
mov
jb
lret
test
lods
insl
cmp
or
and
nop
mov
call
les
pushaw
mov
test
inc
cwtl
fcmovnb
stos
lds
mov
mov
sub
mov
mov
popa
add
shll
jecxz
scas
loop
mov
sahf
fsub
pop
sbb
add
je
fdivrl
xorl
jge,pn
ljmp
js
shl
add
popf
xchg
pop
xor
fdivrl
pop
mov
pop
xchg
jb
sub
jne
ss
mov
cli
mov
xor
arpl
xchg
mov
cmp
popl
mov
push
inc
jo
xchg
add
sti
add
add
loopne
orb
or
push
inc
push
jb
adc
ldmxcsr
clc
mov
out
es
sarl
leave
xor
xchg
or
test
in
xchg
dec
mov
or
jnp
fwait
cmp
mov
fsubl
sub
lea
sbb
testw
out
fbld
mov
xchg
ret
ja
les
lods
pop
or
or
jge
pop
repz
xor
xchg
adc
les
mov
lahf
pop
lcall
fmuls
adc
divb
xchg
push
sub
dec
shll
xchg
into
in
pushf
add
sub
cmp
or
push
fdivr
mov
add
fcoml
std
adc
std
jne
iret
sbb
cmp
push
push
jno
mov
cmpsb
mov
aaa
pop
das
hlt
or
in
mov
sub
cmpsb
insl
sub
jge
sub
dec
sbb
cmp
mov
push
push
push
scas
pop
repz
dec
fdivr
mov
xor
test
mov
movsb
lret
enter
pop
pop
bound
divb
mov
push
jmp
mov
sbb
ja
inc
jecxz
add
ss
xlat
aaa
mov
in
xchg
sub
mov
and
outsl
mov
and
rorb
bound
xchg
pop
inc
fnstenv
cli
aaa
inc
jno
dec
lahf
xchg
jb
sahf
enter
xchg
jbe
hlt
clc
in
xor
lods
in
mov
add
mov
icebp
mov
pop
sub
cmp
jg
mov
pop
xchg
adcb
adc
jp
xor
xchg
sub
ljmp
lea
sub
mov
fldenv
cmp
sbbl
xchg
rorb
rolb
dec
xchg
ficoml
add
xchg
std
jg
mov
xor
xchg
add
sti
add
add
pop
xchg
int
jmp
xor
ret
lods
cmpl
cltd
loope
dec
mov
loope
dec
xchg
xlat
pop
outsb
decb
mov
repz
adc
popa
cli
cwtl
adc
mov
xchg
out
dec
out
mov
pop
rcrl
xchg
xchg
push
ret
shlb
fisttpl
jb
cmp
jne
add
cmp
pop
adc
sahf
xchg
push
outsb
mov
das
out
in
mov
das
in
addr16
call
mov
adc
subb
pop
xor
mov
sbb
ljmp
xlat
and
cmpsb
mov
mov
in
jne
negb
rcpps
lods
pop
jecxz
lret
add
pop
ret
pop
test
bound
sub
outsb
cmp
or
adc
mov
and
adc
cwtl
jmp
cmp
faddl
jb
add
loope
sbb
jae
lods
nop
pop
cmpsb
xchg
out
pop
and
jmp
cmc
jge
add
cmpsb
push
add
cltd
int
add
add
adc
negl
push
xchg
sahf
add
scas
pop
push
dec
mov
xchg
ja
cld
or
popf
mov
xor
pop
lods
cli
add
ret
cmp
incb
adc
pop
in
dec
call
or
movsl
pop
pop
jbe
sub
xchg
stos
cwtl
push
xor
mov
mov
ljmp
xchg
lret
cmp
mov
dec
nop
mov
jp
xorl
push
sub
xchg
in
test
in
imul
ja
lods
nop
mov
mov
lret
push
in
jp
xchg
je
mov
popf
es
cmpsl
imul
xor
test
push
mov
lretw
clc
inc
test
add
dec
and
mov
idiv
iret
rorl
lcall
add
add
add
data16
mov
aam
xchg
mov
loopne
cmp
ret
mov
push
lcall
mov
push
xchg
or
pop
xor
sub
loopne
dec
out
sub
lahf
mov
dec
or
repnz
cs
pop
shl
pushf
out
mov
adc
rcrl
stos
rol
lea
add
pop
shlb
popf
pop
loopne
xchg
jns
testb
mov
dec
nop
lret
repnz
or
jns
inc
enter
sub
filds
cld
sarb
jmp
mov
repz
dec
sub
dec
and
adc
aam
fldenv
sub
jle
and
int3
repz
sub
add
outsb
popf
js
mov
addl
popa
adcl
lods
fcoms
jnp
jl
mov
sbb
push
xchg
and
mov
popa
xchg
xchg
sbb
rclb
jae
xchg
addr16
outsl
lret
inc
fdivs
add
rcrb
dec
neg
ret
addr16
xchg
inc
pop
sub
push
push
xor
push
pop
lcall
mov
jbe
jl
dec
scas
xchg
pop
inc
ficomps
add
aaa
push
mov
int3
pop
mov
inc
es
gs
stc
pop
movsl
in
pop
js
or
xor
mov
sbb
mov
pop
stos
dec
aad
lock
mov
daa
nop
mov
sbb
bound
push
mov
xor
js
push
xor
adc
out
adc
sbb
movaps
fildll
xchg
push
and
pop
inc
lods
lahf
push
dec
xor
aad
je
inc
xor
mov
inc
pop
adc
jle
add
ret
mov
ja
or
lret
int3
lcall
aam
mov
out
push
inc
dec
fdivr
mov
push
stc
repz
aad
movsl
enter
mov
popf
movsl
add
es
addr16
cmp
inc
push
xor
fsubrs
lods
sub
lret
fists
enter
jbe
push
das
imul
rcr
std
adc
std
call
cwtl
fbstp
cmp
cmp
movsl
cmp
jmp
int3
movb
jp
aaa
mov
xchg
add
mov
insb
pop
jbe
push
jo
loopne
sti
imul
jne
sub
push
dec
adc
xor
in
pop
pushf
out
js
xchg
je
adc
pop
xor
adc
push
ror
leave
cmc
shlb
sbb
inc
sub
jbe
and
mov
push
jecxz
test
std
std
and
adc
or
mov
push
fisubrl
push
push
aam
xchg
stos
fiadds
dec
lock
cmp
dec
movsl
out
fnstenv
jns
add
cwtl
inc
cmp
inc
into
or
sahf
std
mov
fsubl
loop
ret
adc
jmp
outsl
hlt
jae
icebp
movsl
dec
xor
loopne
leave
inc
pop
andl
sahf
jl
in
icebp
push
pusha
dec
loop
shll
dec
in
lret
mov
xor
mov
in
push
adc
xchg
mov
push
push
je
lods
push
cs
outsl
dec
pop
rolb
or
aaa
cmp
push
or
push
icebp
xchg
add
sub
out
jmp
xor
addr16
or
lret
ja
pop
xchg
cmpsl
imul
into
in
xchg
mov
dec
cltd
pop
cmp
xor
or
int3
dec
mov
daa
push
clc
cmp
cmp
or
adc
and
jp
mov
pop
mov
push
push
jle
xlat
lret
push
testl
pushf
add
sti
add
add
adc
mov
cwtl
mov
add
mov
jle
or
neg
jle
leave
push
out
fmull
dec
dec
ror
jne
test
rclb
mov
cwtl
fnstcw
jg
aas
fcompl
and
inc
cmp
xchg
inc
and
cmpsb
fs
fmuls
std
cmp
jne
mov
jae
fiaddl
push
ja
lea
pop
or
sub
xchg
arpl
ficompl
sub
cmp
and
inc
rol
imul
sbb
mov
mov
sbb
or
add
jae
fs
xor
cld
mov
mov
loope
mov
jle
fmuls
shll
outsl
stos
imul
mov
mov
and
sub
add
sub
ja
jne
adc
add
lods
cld
inc
cmp
imul
add
push
pop
sahf
mov
xchg
pop
lea
pop
pop
mov
sbb
xchg
push
mov
push
mov
cmp
sbb
mov
dec
jnp
movb
in
std
xchg
insl
in
js
cli
xchg
xchg
mov
clc
in
loopne
dec
shrb
or
in
pushf
lret
pop
or
int3
pop
dec
mov
outsb
mov
mov
iret
je
mov
lea
shl
jg
mov
int
in
je
cmp
push
mov
fwait
push
inc
cmc
add
enter
mov
movsl
mov
inc
stc
mov
mov
lock
adc
bound
sub
lea
jmp
pop
shl
test
sub
pop
mov
xor
test
lds
nop
push
mov
jle
sbb
jb
or
int3
int
inc
add
push
or
pop
out
repz
fucomp
mov
add
ret
add
add
add
push
or
cltd
sbb
inc
sub
notb
mov
xchg
mov
jno
push
mov
repnz
out
and
cmpsl
inc
push
cmp
add
pop
mov
lea
iret
test
or
pop
fistpl
lods
push
pushf
lock
scas
rcrl
sub
xchg
cld
adc
pop
mov
cmp
pop
push
push
inc
inc
inc
pop
jg
pusha
lods
sbb
jg
call
adc
ja
push
mov
push
adc
xchg
int
inc
push
pusha
xchg
or
push
pop
out
daa
jo
insl
jno
sbb
push
sarb
dec
xor
adc
bnd
sbb
or
jbe
fwait
loopne
add
movsl
xor
mov
icebp
jl
add
daa
or
sbb
xchg
cmp
ds
lods
jmp
ret
popf
iret
int
aas
scas
mov
mov
push
add
aaa
or
outsb
pop
fimull
adc
mov
pop
cs
adc
xchg
or
scas
repz
dec
mov
jo
or
stos
popa
rclb
mov
cld
cmp
adc
mov
sahf
out
nop
lock
inc
cli
ss
fcomps
inc
in
ds
xor
push
adc
mov
inc
out
push
jns
push
pop
stos
nop
test
jns
sbb
repz
push
fistpl
dec
xor
out
or
pop
sub
mov
sub
popa
adc
xchg
test
loopne,pn
mov
mov
xor
xor
jne
and
jbe
sub
scas
cld
cmpsl
inc
cmp
fisubs
lea
pop
ficomps
fsubs
cmp
inc
mov
pushf
mov
inc
mov
cmp
cmp
inc
in
sbb
lea
std
add
xchg
insl
mov
out
nop
sbb
in
mov
add
add
add
shl
arpl
xchg
pop
jb
xor
jo
jne
push
movsb
mov
dec
xchg
xchg
cmp
imul
push
fistpll
repnz
xlat
push
xchg
add
daa
cld
sbb
or
or
inc
popa
adc
push
pop
xchg
jp
xchg
imul
rcl
andl
ja
pop
jle
jbe
insb
iret
int
int
dec
or
sbb
enter
shll
shll
adc
and
pushw
rcrb
jns
lahf
inc
add
imulb
insb
lcall
adc
outsb
push
ds
cmpsl
xchg
pop
aad
or
adc
add
sar
fistps
sub
je
jl
mov
or
test
xor
push
enter
lret
int3
push
pop
call
xlat
mov
inc
mov
add
js
mov
sub
enter
mov
fstpt
lret
ss
jmp
inc
mov
das
mov
loopne
fldl
stc
or
cli
mov
or
dec
hlt
repnz
sbb
and
mov
or
icebp
add
inc
cmp
push
xor
leave
test
and
aaa
adc
jbe
aad
cmp
test
cmp
in
or
call
adc
and
cmp
mov
movsb
add
sub
sahf
or
ret
xchg
or
xlat
outsb
sbb
sbb
test
lods
mov
imul
shll
and
cltd
cmpsl
mov
sarl
lcall
popa
das
inc
loop
cmp
ja
outsb
or
out
sub
gs
out
cwtl
je
push
dec
jnp
jbe
sub
data16
dec
out
ja
idiv
pop
out
cmp
negb
sti
add
add
mov
adc
inc
iret
aad
push
xchg
or
pop
mov
jnp
mov
jnp
cmpsb
into
inc
ret
cmpsl
dec
in
int
dec
inc
fmuls
ficoms
xchg
mov
int3
mulb
scas
mull
sbb
sbb
xor
arpl
xchg
sarl
cltd
jnp
icebp
jbe
pushf
pushf
sub
or
clc
jnp
mov
leave
mov
jecxz
int
sub
pop
subl
jl
iret
mov
sbb
cmp
adc
cmp
cmp
sbb
xchg
shlb
into
push
and
add
push
mov
adc
sbb
mov
mov
mov
dec
in
data16
mov
add
andl
push
inc
flds
and
je
clc
cmpsb
outsl
cmp
mov
pop
jbe
int
adc
ds
xor
xchg
sub
inc
in
cltd
sub
imul
or
lcall
dec
stos
ja
cmp
adcb
lret
imull
out
shll
add
dec
in
mov
jo
idivb
ss
and
xor
mov
push
adc
lret
ds
icebp
aad
pop
mov
out
inc
fistl
xor
and
lods
xchg
and
dec
ljmp
lods
mov
inc
fwait
jge
mov
inc
jae
xchg
fsubr
pop
xor
jo
ljmp
repnz
pop
out
sbb
popa
xor
jbe
stc
test
imul
push
je
test
data16
hlt
stos
aaa
push
addl
fnstcw
cmp
jmp
adc
fsubl
cmpsl
jge
enter
jns
push
test
dec
and
jmp
adc
nop
nop
rorb
jge
js
mov
scas
xor
cmp
add
sti
mov
inc
cmp
arpl
sti
add
add
jmp
pop
ja
inc
pop
fldt
adc
insl
mov
mov
xor
push
mov
adc
lcall
insb
pop
jbe
mov
push
cli
inc
cmpsl
pop
inc
jge
pop
mov
xor
mov
sahf
jb
and
lret
mov
mov
call
and
push
outsb
std
lods
add
sub
andl
adc
push
or
js
bnd
js
mov
xchg
out
call
adcb
js
in
sti
sbb
mov
icebp
add
jb
xchg
das
inc
fwait
sbb
repz
add
je
mov
fistpll
pop
xlat
aas
mov
or
sub
cmp
sahf
stc
cmp
sbb
aam
pusha
jl
jb
es
pop
mov
rolb
add
andl
mov
add
cmc
loope
dec
enter
or
sbb
or
movsl
sub
or
lods
fidivs
mov
cmp
mov
out
push
jg
sub
enter
xor
cmpb
aam
dec
dec
cld
dec
lret
jmp
push
xlat
mov
jbe
and
inc
fsubr
and
lods
add
fdivr
mov
in
ret
add
mov
mov
adc
fs
jge
mov
sub
ja
cmp
xor
xor
orb
jmp
movsl
loop
adc
push
cli
incl
cmpsl
loop
inc
in
insb
push
xor
sbb
loop
aaa
sub
jle
je
rolb
and
sub
jle
sahf
or
xchg
loop
imul
mov
dec
xor
or
jns
adc
add
xor
sahf
xor
sub
fisubrl
gs
cmpsb
add
sti
add
add
loop
cmp
rol
jge
lahf
jecxz
cmc
aad
decl
mov
jns
adc
adc
xor
dec
das
addr16
mov
add
aas
inc
roll
xorb
sbb
push
xor
pusha
and
or
pop
mov
das
not
cmpsl
jge
xchg
les
push
aaa
adc
mov
lods
scas
pop
es
cltd
sbb
pop
xchg
imul
pop
ja
jmp
cmc
pop
mov
movsb
sbb
dec
mov
fs
jl
cmpsl
push
push
mov
movsl
test
subb
out
rclb
js
cmp
gs
mov
fcmovbe
pop
push
mov
dec
mov
in
mov
and
test
std
adc
es
xor
pop
lds
add
loopne
fidivrs
jge
dec
xlat
adc
mov
mov
xorl
test
stc
jae
add
xchg
in
inc
shll
lret
sbb
shl
out
sbb
xchg
dec
and
push
iret
xor
sbb
pop
and
sbbl
or
jecxz
push
loop
jns
out
jmp
add
das
push
cltd
inc
iret
stc
call
pop
sub
stos
lds
jl
add
jecxz
jne
inc
inc
push
inc
and
insb
pop
in
mov
xor
out
lds
loop
inc
push
imul
pop
fildll
jecxz
addr16
dec
scas
test
arpl
test
testl
add
sub
cwtl
ss
mov
insb
test
stos
test
add
pusha
or
mov
sub
stos
adc
add
nop
inc
push
movsl
mov
mov
cld
push
cltd
arpl
daa
or
insb
dec
cli
or
xor
je
add
std
in
mov
mov
std
cmp
mov
test
add
add
enter
add
cltd
aad
lcall
loopne
fs
sbb
stc
push
jno
rorl
dec
fsts
rorl
pop
sub
enter
clc
cmpsb
or
xchg
sbb
aaa
jb
mov
lret
mov
adcb
movsl
jecxz
icebp
je
sub
push
push
jecxz
sub
and
in
fstp
bound
or
out
lcall
dec
jns
dec
xchg
div
jl
in
push
inc
gs
andl
sbb
cmp
mov
in
jle
inc
lret
icebp
mov
jge
dec
pop
cmp
cs
jl
fcoml
mov
cmpsl
icebp
cli
pop
or
leave
mov
xor
jo
add
movntq
mov
cs
xchg
aas
fstpl
jno
stc
sub
mov
push
fs
push
inc
jnp
scas
sub
lea
xchg
rcl
jne
pushl
dec
dec
mov
hlt
adc
ljmp
das
mov
dec
nop
std
out
cmp
mov
ljmp
fnstcw
xchg
aaa
add
stos
push
mov
test
xor
sbb
xchg
xchg
fs
stos
sub
sub
daa
xchg
sub
sub
cmp
mov
call
das
mov
cwtl
cmp
in
fs
xor
fsubs
movl
out
and
xchg
jno
scas
pop
in
pop
mov
jecxz
daa
fcomps
xchg
jbe
jnp
mov
pop
shl
jb
mov
mov
jmp
xor
inc
dec
test
sbb
call
dec
ljmp
jmp
inc
cmc
pop
fistps
lock
loopne
leave
adc
repnz
testb
inc
pop
mov
sahf
movsb
stos
add
sti
add
add
std
mov
inc
jmp
insb
dec
xorl
out
test
lods
push
cmp
std
sti
mov
shlb
imul
rorl
sub
pop
push
mov
xchg
mov
mov
mov
pop
cmp
cmpsw
out
sub
xorl
movsb
imul
mov
inc
mov
inc
pop
and
in
jecxz
and
lret
aad
pop
xor
adc
sub
xchg
xor
jg
testb
lods
popf
cmp
cli
inc
add
movsl
lods
or
sub
pop
mov
hlt
cmp
and
cmp
lods
xchg
cmpsl
add
jae
out
daa
mov
mov
ficompl
std
jp
rolb
or
test
jbe
add
mov
xchg
movsb
repnz
mov
lds
jb
mov
shlb
mov
mov
lret
mov
mov
stos
lods
jbe
push
in
dec
gs
cltd
mov
inc
out
clc
in
and
int3
mull
mov
mov
xor
adc
xchg
iret
mov
scas
xor
sub
push
ffree
mov
cmp
push
adc
ret
nop
push
icebp
mov
sahf
stc
sbb
iret
mov
fdivs
pop
out
dec
sbb
jge
sbb
push
xchg
ss
sahf
sarb
das
gs
insl
fldt
inc
or
sbb
icebp
xchg
sbb
jb
fnstsw
repz
hlt
pop
add
movsl
shlb
leave
dec
cs
cmp
adc
mov
inc
pop
cs
sar
repz
imull
add
sahf
lock
js
add
mov
idiv
cmp
xchg
lcall
add
add
popa
data16
gs
mov
scas
jnp
cmp
add
add
mov
mov
stos
fwait
enter
xor
ret
xlat
lds
movl
in
xchg
movsl
into
pusha
add
jle
and
cmovg
insl
out
sbb
mov
insl
fwait
ss
adc
aas
mov
lahf
shlb
xchg
dec
and
cmp
outsb
in
xchg
sti
nop
adc
inc
push
nop
mov
sbb
das
fstps
jg
inc
stc
mov
and
cmp
jge
xor
dec
jle
mov
aas
in
pop
jge
into
aaa
loopne
xor
ret
and
das
ljmp
sub
mov
insl
mov
sbb
xlat
and
imull
xchg
dec
push
cmp
imul
sbb
lods
inc
mov
aam
ret
repnz
sub
repz
xchg
mov
xchg
add
pop
ja
fimuls
mov
and
std
int
xor
fwait
repnz
cld
scas
sub
mov
sub
movsb
faddl
insb
enter
add
mov
icebp
mov
push
mov
test
nop
xchg
push
lods
jp
dec
movsb
adc
lret
jmp
dec
lods
mov
out
insb
leave
std
push
or
cld
dec
in
mov
xchg
daa
and
or
add
cwtl
pop
mov
sub
ficompl
loope
push
stos
int
dec
mov
cmp
and
movsl
and
or
mov
mov
std
cltd
frstpm(287
pop
mov
mov
jne
repz
imul
pusha
push
xor
adc
jo
adc
pop
pop
adc
mov
dec
cmp
lret
mov
adc
jg
mov
fnsave
jo
pop
cwtl
ficoml
push
mov
jb
jnp
pop
inc
add
cmp
cli
cmp
adc
les
add
sti
add
add
adcb
jge
addr16
js
repnz
cld
sub
cmpsl
adc
enter
incl
adc
jge
mov
mov
inc
dec
insb
xchg
and
xchg
mov
test
mov
std
xchg
aas
mov
daa
push
rcrb
out
insl
inc
outsb
mov
cmp
mov
cmp
cld
cmp
mov
out
xor
stc
je
cmpsl
jge
data16
inc
pop
mov
shlb
and
aad
movsl
inc
dec
rcrb
push
filds
jae
ret
jno
pusha
and
fcmovne
and
sbbl
inc
ret
mov
adc
jl
adc
cltd
and
cld
fs
and
arpl
ret
inc
push
mov
dec
adc
mov
mov
pop
stc
ret
popf
and
xor
lcall
mov
inc
repnz
push
sbbl
mov
enter
clc
aaa
jmp
xorl
out
pop
xchg
jle
js
movsl
hlt
xchg
into
loop
dec
add
aaa
xchg
xchg
cmp
cltd
push
jnp
rcll
scas
into
dec
inc
sbb
jb
idivb
or
and
out
out
jo
pop
shrl
mov
cli
cmp
pop
adc
setb
fwait
daa
std
push
repz
imul
dec
in
xchg
out
dec
popa
xchg
das
push
mov
or
std
sub
xor
xchg
dec
add
push
jecxz
lods
fsts
sub
je
xchg
mov
fldl2t
push
in
loope
jle
xor
jbe
inc
dec
mov
lea
scas
addr16
jecxz
int3
lea
fidivs
sti
popf
add
add
and
push
push
cmp
xor
mov
add
add
add
popa
add
sahf
cmp
jle
xchg
rcrb
xor
imul
loopne
fcomps
imul
xor
fiaddl
inc
jge
addb
into
cltd
pusha
ret
adc
jle
aad
xor
mov
ret
adc
mov
jae
push
shrb
cwtl
fsubr
movsb
push
sbb
fwait
pop
shlb
nop
xchg
in
lea
movsb
bnd
push
and
inc
loope
xor
pop
aad
jb
inc
jns
lahf
jle
icebp
sahf
or
hlt
gs
aas
xor
in
bound
xchg
pop
add
inc
js
lods
shrl
es
dec
sarl
out
in
jl
sub
jecxz
pusha
jb
inc
jge
mov
icebp
sbb
fnstcw
out
jne
mov
fdivs
cld
call
enter
mov
sbb
push
pop
call
cmp
movsl
mov
jmp
cmp
xlat
mov
and
cmc
jmp
pop
push
int3
movsl
xchg
repnz
out
sub
mov
xchg
xchg
push
aam
push
mov
in
xchg
imul
in
xor
js
nop
sti
xor
arpl
mov
pop
and
or
sbb
dec
icebp
sbb
mov
daa
and
gs
aam
lods
jmp
dec
mov
mov
insl
inc
mov
fmuls
xchg
out
aaa
inc
sti
std
adc
or
cld
sub
adc
sbb
jl
inc
xchg
cmc
or
popa
mov
xchg
fucomip
andl
cld
enter
scas
jp
mov
fnstenv
mov
inc
outsb
jae
dec
aad
idivl
add
or
pop
lret
dec
push
js
cld
or
push
or
jae
popf
inc
outsb
mov
cmp
mov
add
cmp
mov
in
outsb
fs
or
cmp
nop
mov
add
add
add
push
mov
in
sti
jae
into
push
enter
lea
out
push
add
in
jno
mov
pop
nop
rcr
pop
cltd
lret
outsb
mov
in
int3
rcrb
sarl
push
testb
enter
hlt
in
lret
dec
mov
into
mov
adc
xor
inc
inc
in
or
xor
aas
inc
mov
aam
mov
pop
xor
push
push
sub
jne
or
fisubrl
sahf
xor
stc
fidivs
clc
sbb
jb
jae
jmp
mov
pop
lods
or
xor
popf
movsl
cmp
stc
mov
jo
or
icebp
fsubp
fwait
imul
mov
sub
out
loopne
sahf
jnp
pop
mov
cmc
and
mov
les
push
test
xchg
in
jno
imul
pop
or
pop
clc
dec
loop
add
jb
sbb
or
inc
jns
test
insl
dec
fnop
cli
inc
stos
cld
mov
loope
cmpl
sbb
mov
cmpsb
adc
xor
cs
call
sub
hlt
and
push
jp
adc
jnp
mov
js
mov
int3
mov
inc
dec
cli
xor
dec
fs
mov
dec
ds
fcmovbe
push
mov
cmp
ss
mov
repnz
js
out
imul
or
mov
and
jne
arpl
test
cltd
xlat
shlb
fdivrl
mov
push
out
sbbb
lcall
pushf
mov
add
jle
out
jbe
lock
sub
sbbl
movsl
out
les
and
out
mov
push
pop
andb
add
add
inc
mov
jb
jns
dec
mov
add
dec
out
out
pop
loopne
inc
add
out
stc
pop
ficoms
les
push
test
lods
in
leave
clc
jae
iret
hlt
in
aas
xchg
xchg
out
dec
jb
sti
push
cs
pop
ja
add
dec
dec
ret
imul
and
cltd
jns
mov
push
cmp
js
incl
xchg
ret
add
pop
sub
mov
dec
mov
and
aam
mov
add
in
and
aas
sub
mov
xchg
test
add
andb
xchg
xor
push
mov
aad
cmp
cmp
pop
scas
outsb
mov
ds
push
mov
int
in
push
nop
push
xor
aas
add
aaa
mov
jge
std
dec
sbb
xor
sbb
pop
ja
sub
mov
in
push
dec
jnp
push
inc
gs
mov
aaa
jecxz
out
lret
mov
rcrb
aam
pop
add
add
fcompl
adc
adc
in
test
pop
sarl
add
orb
pop
pop
bound
in
sub
test
loop
int3
dec
leave
int
in
out
jl
jnp
and
mov
int
pop
daa
repnz
and
out
mov
aam
imul
in
mov
test
rolb
mov
outsb
dec
scas
mov
cmpsb
cmpsb
lret
xlat
inc
xlat
xacquire
fistpll
aam
xchg
call
in
ss
movsb
fmuls
push
je
test
xchg
hlt
and
xchg
jb
push
popf
cld
enter
hlt
pop
and
jg
stc
imul
push
cmpsb
mov
mov
pushf
int3
insl
jg
and
addr16
in
jns
xchg
mov
mov
xchg
add
mov
cmp
mov
loop
xchg
add
add
xchg
add
inc
sub
cmp
cli
in
lahf
das
jle
fidivl
sbb
scas
dec
pop
adc
mov
pop
dec
sbb
add
cvtdq2ps
in
lock
mov
dec
and
cmp
insl
dec
sbb
mov
sbb
daa
sbb
sub
xor
mov
jge
xchg
iret
ss
cmp
repnz
dec
mov
xchg
sub
sahf
fucomip
adc
stos
ja
movsl
xor
mov
subl
push
mov
out
sub
js
movsl
aad
xchg
iret
adc
mov
mov
mov
and
js
cmp
lods
cltd
push
adc
outsl
mov
iret
mov
out
ljmp
inc
or
jmp
das
test
rol
out
xchg
pop
pop
dec
jns
mov
fstl
push
dec
sti
mov
dec
jmp
ljmp
push
sbb
mov
les
mov
mov
and
cs
ljmp
idivl
cwtl
jl
cmpsl
mov
sbb
pop
jo
mov
xchg
pop
mov
clc
lock
popa
xchg
xchg
out
shl
idiv
popa
sarl
repz
sahf
movsb
lods
or
jns
roll
jmp
sahf
mov
jne
fnstcw
cld
push
in
sub
xchg
pop
mov
xor
lock
mov
push
jo
out
fs
push
lea
dec
fistps
pop
scas
in
mov
sbb
fnstcw
xchg
fsubrl
mov
add
pop
jo
pop
mov
imul
sbb
xchg
cs
push
mov
js
add
push
rorl
in
xor
add
add
sbb
out
idivl
test
popl
add
add
add
mov
outsb
xor
sbb
push
subb
or
and
pop
cmp
sub
dec
dec
xor
mov
daa
jmp
sub
enter
fidivl
pop
jp
sub
inc
add
fwait
in
sbb
adc
dec
cmp
dec
in
fimuls
mov
flds
mov
hlt
lods
push
je
ljmp
addr16
mov
add
jle
push
pop
xor
sbb
pusha
hlt
in
stos
mov
inc
dec
les
cmp
cs
and
stos
cmpsl
mov
mov
mov
aam
daa
cmp
lods
popa
movsl
lods
jnp
dec
cwtl
add
popa
mov
lods
insb
gs
inc
lcall
loope
out
xchg
dec
testb
cmpsl
dec
fsub
aam
xchg
sub
loopne
pop
xchg
insb
pop
fdivrs
add
test
fwait
leave
sbb
and
and
mov
aam
cmpb
fnsetpm(287
ret
or
pop
out
mov
addr16
jmp
dec
test
aam
iret
jecxz
scas
outsl
sub
iret
mov
andl
dec
fmul
lods
xchg
push
fadds
pusha
xor
lds
aaa
mov
jns
mov
lahf
push
mov
cmc
push
jmp
pop
sahf
mov
pop
xlat
dec
mov
fwait
and
jmp
out
leave
and
pop
out
negl
test
dec
xor
sbb
inc
or
xlat
pop
addr16
sti
xor
xor
pop
js
mov
push
adc
mov
adc
sbb
test
int
and
xor
xchg
sbb
cmpsl
jae
in
fimuls
dec
cmp
repnz
test
repz
mov
push
xchg
frstor
mov
lds
adc
sahf
lret
push
pop
push
cmp
aam
lret
sbb
gs
fcompp
out
fs
popf
outsb
push
scas
cmp
jl
add
sti
add
add
fstl
shr
mov
sub
cmp
pop
cmp
sarl
mov
dec
aad
add
jg
je
push
int3
ret
mov
or
mov
mov
arpl
fisttpl
stos
mov
icebp
out
jl
xchg
into
mov
test
nop
rclb
cwtl
test
sub
mov
add
out
mov
int
jne
test
lret
push
cmp
jb
cmpb
incb
test
cmc
add
fs
testl
or
inc
addr16
jge
adc
pushf
imul
push
push
xchg
das
jnp
pop
dec
push
mov
xchg
pusha
jl
mov
adc
and
int3
arpl
jns
addb
adcb
cmp
idivb
pop
mov
cli
cmpsb
rcrl
enter
cmp
repnz
xor
mov
test
push
push
jmp
jmp
jno
push
pop
mov
adc
push
push
or
ror
push
xchg
add
jnp
cwtl
push
outsb
push
mov
nop
jnp
icebp
push
cmpsl
sbb
cmp
mov
adc
pop
and
and
push
sbb
or
rcll
inc
inc
or
mov
ja
fisttpll
push
pop
sub
push
je
popf
aaa
mov
cwtl
ret
je
dec
in
fisubs
mov
or
cmp
fdivrs
jle
call
jp
mov
in
pusha
pop
dec
int
xor
sbb
push
mov
out
sbb
daa
cmp
leave
cmp
mov
xlat
mov
cmp
fmuls
leave
jns
jmp
xor
mov
jae
mov
adc
lea
ljmp
fs
loopne
push
outsl
cmp
cmp
adcb
adc
arpl
sti
adc
jl
dec
dec
lods
cwtl
dec
aad
mov
add
ds
decl
insl
jl
and
mov
enter
dec
imul
sub
add
lret
jnp
mov
aas
clc
lock
fsubs
test
xor
jge
pop
or
cmp
mov
das
sbb
push
imul
fmull
stos
cmp
xchg
adc
sub
fs
fildll
jecxz
push
loop
dec
scas
inc
repz
mov
sti
test
xchg
or
sbb
lahf
test
cmp
jno
push
adc
scas
jecxz
and
pop
in
jle
test
push
das
mov
jge
push
add
mov
mov
lea
pop
shll
sub
mov
cmp
pop
out
test
dec
and
ret
js
cwtl
xor
sahf
outsb
push
cmp
xor
test
mov
popf
sbb
and
mov
or
loopne
inc
aad
clc
xchg
adc
dec
lds
gs
dec
jne
lods
notb
jl
xor
sub
sbb
sahf
xlat
mov
inc
out
je
addr16
cmpsl
leave
adc
jl
lret
jge
repnz
pop
sbb
lret
push
jo
in
and
adc
pop
jmp
jl
jo
lcall
pop
or
aaa
test
mov
pushf
mov
insb
mov
je
adc
je
adc
jae
je
mov
insl
jnp
in
ret
pop
mov
pop
mov
adc
or
dec
roll
push
insb
aas
fs
pop
mov
cmp
pusha
movsl
testb
or
push
mov
mov
mov
xor
push
xchg
cwtl
addl
insb
lcall
mov
fstl
pop
cmp
add
and
xor
sub
aam
mov
add
pop
rcrb
xchg
mov
outsb
sti
adc
in
xchg
sbb
jbe
mov
add
sub
jle
inc
shrl
je
and
sub
adc
push
jno
mov
aad
mov
jnp
rorb
iret
lcall
push
push
xor
push
aam
sbb
push
xchg
int
sub
adc
mov
and
not
inc
popa
sub
test
mov
test
imul
jmp
and
sahf
xchg
fidivl
mull
push
xchg
in
test
inc
inc
in
mov
and
leave
push
mov
loop
mov
mov
in
or
fs
rcrl
sbb
iret
andb
lods
lret
jp
dec
adc
loope
inc
xor
sub
sar
xchg
xchg
je
cmpsb
xor
lret
lods
gs
mov
sub
out
stos
mov
hlt
jle
js
push
fsubl
in
mov
pop
inc
sub
mov
and
mov
and
jno
fisttps
flds
mov
sub
xor
push
icebp
test
mov
or
dec
mov
out
and
dec
scas
add
popf
cmpb
data16
cmp
and
jb
jp
mov
cwtl
xor
fisttpl
pop
push
xchg
int
jne
push
inc
adcl
cmpsl
xor
int
jle
dec
test
popa
and
lahf
pop
in
or
pop
lods
inc
mov
les
sbb
pop
and
sub
mov
push
cld
push
pop
mov
or
bound
push
push
lods
lret
sub
dec
pop
mov
sahf
mov
sub
mov
aad
out
neg
pop
fmulp
add
push
jecxz
jg
data16
sbb
mov
add
sti
add
add
push
mov
nop
jg
inc
sti
jmp
sbb
and
inc
iret
sbb
cmp
mov
fwait
push
bound
cwtl
cmp
sar
sbb
pushf
add
xchg
cmpsl
test
xchg
lret
mov
inc
cli
rolb
push
mov
mov
pop
push
or
rorl
inc
xor
movsl
aas
cld
xchg
lea
in
outsb
and
mov
jecxz
xlat
push
cmp
aaa
xchg
push
mov
xor
imul
push
popl
inc
fidivl
mov
or
pop
dec
adcb
in
mov
cmpsl
dec
sbb
lock
test
inc
icebp
das
mov
outsb
mov
pop
test
jo
lcall
imul
fistl
cmp
outsb
xchg
bound
adc
sbb
outsl
in
jno
sub
lahf
jp
sbb
sub
jns
nop
imul
fwait
mov
mov
cltd
out
packsswb
jg
lea
sbb
add
test
cmc
dec
in
lods
stos
outsb
mov
xchg
pusha
loope
mov
iret
mov
fildll
jnp
add
mov
sub
out
loop
mov
push
dec
jno
in
mov
repz
sbb
fmul
fisubrs
in
mov
jmp
ds
bnd
pop
jne
fists
ret
mov
push
cmp
pushf
mov
lret
dec
xchg
pop
add
sbb
cmp
pop
ja
out
out
stc
adc
out
daa
aaa
xchg
sbb
arpl
or
or
dec
insl
jns
fmul
insl
test
rorl
popl
push
xor
dec
jge
mov
icebp
or
cwtl
call
imul
repnz
dec
mov
lods
ja
mov
jnp
xchg
add
adc
lds
inc
push
pusha
jbe
out
test
stos
mov
ret
sti
add
add
es
pushf
push
jb
pop
jne
loopne
mov
dec
loop
out
loopne
mov
pop
push
sub
mov
adc
dec
lds
mov
dec
aas
mov
push
add
loopne
inc
xchg
pop
daa
mov
pusha
mov
rolb
dec
pushf
orb
daa
inc
sbb
add
js
push
ljmp
loope
jg
in
xor
aas
xchg
shrb
mov
scas
fabs
clc
adc
jno
in
sbb
push
jl
mulb
in
pop
dec
lret
fiaddl
adc
movsl
daa
jp
jecxz
sub
je
pop
pusha
vphsubdq
ret
mov
lcall
add
xlat
int
sub
lods
lahf
movsb
push
mov
iret
push
xor
in
out
dec
js
loop
and
imull
enter
sbb
cmc
push
lret
mov
mov
push
and
jecxz
jmp
test
push
ljmp
imul
sbb
jp
inc
sahf
enter
dec
daa
lds
fs
cmp
sub
sbb
cmpl
rorl
in
xor
xor
mov
out
dec
xchg
or
pop
pusha
pop
push
sahf
leave
fdivl
call
pop
mov
fdiv
jge
addr16
shrb
inc
divl
add
mov
scas
ja
cli
loope
mov
jp
cmovb
or
stos
xor
cltd
push
push
push
cwtl
mov
adc
fdivrs
mov
ret
lock
int3
adc
xor
or
mov
push
push
fwait
push
loopne
inc
pop
repz
xlat
adc
mov
repnz
cltd
mov
adc
jmp
out
sbb
lahf
cs
ret
outsb
cmp
add
pop
lcall
addr16
aam
and
les
add
add
add
ja
sbb
push
or
das
lock
mov
int3
jbe
add
shrl
adc
mov
lahf
jle
xor
mov
mov
sub
dec
in
ljmp
nop
xchg
push
scas
aad
cmp
sub
fcomps
loop
loope
jbe
mov
adc
ds
mov
loopne
push
ja
add
pop
aaa
das
cmp
scas
xchg
std
addl
outsb
int3
fwait
imul
cmp
das
sbb
add
adc
adc
inc
lea
lock
std
pop
mov
mov
or
into
loop
loope
adc
jge
aam
inc
mov
imul
push
lret
mov
mov
sahf
inc
incl
xlat
sbb
dec
jo
add
nop
lods
loope
mov
xlat
dec
pop
clc
fstps
xor
jbe
ja
std
cli
imul
jmp
jb
jmp
sub
pop
jle
movsl
lret
xor
ret
roll
scas
mov
mov
inc
cmp
fistl
inc
jg
and
pop
icebp
push
dec
adc
cs
lock
cs
pop
xchg
sub
fwait
leave
sub
fwait
movsw
mov
lret
pop
adc
es
adc
sarb
xor
push
xor
cli
cmp
repnz
inc
dec
mov
popa
push
jne
jl
stos
scas
hlt
lcall
addr16
jge
rorb
cli
mov
mov
mov
mov
or
mov
lock
jno
popl
das
pop
scas
xchg
sub
jp
mov
mov
loopne
cs
dec
pop
xor
cmpsl
mov
add
outsl
daa
insl
push
addb
lods
lret
sbb
sti
add
add
andl
out
iret
es
in
test
jae
fst
or
sub
push
mov
rclb
xor
jl
push
popf
mov
ljmp
aad
sti
mov
xor
movsb
out
out
cli
pop
push
xchg
test
cmp
jb
enter
fldl
lea
aaa
push
xchg
add
push
mov
pop
and
stc
into
inc
das
jecxz
and
mov
aad
rorl
cmp
in
negb
and
pop
js
sahf
push
jb
jne
andb
das
in
and
out
incb
push
out
fildll
outsb
push
xor
push
out
xchg
cs
and
xor
jp
or
cs
cli
mov
xor
loope
xor
fsubs
movsl
in
add
add
scas
cmpsl
cmp
pop
outsb
push
xchg
and
enter
mov
push
in
jecxz
pop
and
dec
aaa
sub
inc
flds
cwtl
insb
aam
fldt
mov
daa
mov
jns
jae
fcompl
xchg
fistps
mov
push
in
or
inc
xchg
or
sbb
imul
sbb
test
fwait
pop
pop
inc
pop
inc
adc
cmp
sub
mov
xchg
pop
fcoms
cld
adc
daa
xlat
or
ret
jmp
pop
insl
pushf
clc
fisubs
add
int3
dec
shrl
int
popa
outsl
out
shrl
xchg
pop
test
cmpsl
out
xor
ret
xor
dec
ss
test
sbb
mov
int
leave
ss
mov
out
cli
jns
inc
xor
sub
fidivrs
psrld
fyl2xp1
inc
cmc
inc
xorl
jg
inc
dec
cmp
inc
sbb
xlat
jl
push
aam
je
xchg
cmp
ljmp
inc
lea
and
mov
out
leave
enter
fildll
add
add
add
dec
push
mov
cmp
mov
imul
fs
ror
sti
out
out
lods
loop
lods
ljmp
jp
outsb
adc
pop
lds
nop
pop
inc
test
out
movsb
icebp
cli
aad
int3
and
cld
mov
scas
xchg
bound
stos
or
dec
jb
push
nop
xchg
or
je
repz
pop
outsb
dec
pop
cmp
testb
mov
or
xchg
push
sbb
repz
jbe
mov
int
mov
aad
loop
pop
xchg
fsubrl
fistl
cld
cmpsb
popa
mov
lods
mov
adcb
xor
addr16
jl
jmp
and
jno
mov
push
data16
jno
les
hlt
sbb
nop
mov
loopne
add
jg
pop
out
sub
and
mov
mov
jg
int
enter
mov
push
sub
negb
outsl
in
inc
adc
xchg
insl
jae
pmullw
cli
mov
add
and
push
push
ja
sub
dec
push
adc
dec
int
test
out
mov
push
pop
in
stos
pop
sti
mov
lds
cmp
test
insb
sarl
lcall
jecxz,pt
insl
fcomp
loop
iret
mov
out
mov
pop
xchg
test
push
adc
adc
in
pop
push
lea
jb
vaddsubps
movsl
add
or
sarl
lcall
ja
aaa
mov
pop
mov
clc
mov
sub
sbb
cmpsl
sbb
mov
add
sub
mov
xchg
push
icebp
xchg
adc
inc
loopne
sub
xor
dec
jmp
out
ret
add
mov
ffree
cmpsl
test
dec
daa
sub
cmp
hlt
push
fistl
xor
daa
mov
ror
pop
pop
stos
xchg
mov
add
cmp
mov
imul
push
lret
sti
add
add
pop
ret
push
popf
push
call
sub
cli
mov
and
lock
gs
repnz
fwait
adc
mov
cwtl
push
enter
mov
js
mov
adc
fimull
cwtl
fstpt
out
jge
add
mov
add
or
in
dec
iret
adc
fdivrs
es
pop
insb
sbbb
or
in
pop
jo
scas
sbb
out
sbb
movsb
addr16
or
push
ret
jmp
in
subb
cmc
in
lcall
mov
push
jns
pop
icebp
mov
sti
enter
or
pop
out
mulb
push
sbb
test
push
std
sbb
aas
jbe
add
push
sub
xchg
lret
adc
outsb
lods
clc
subl
cli
fst
adc
push
int3
test
fidivs
movsl
xchg
push
rcrb
movsl
imul
xchg
leave
mov
xor
sub
pop
fstps
xor
adcb
stos
and
pop
xchg
jg
sbb
jl
xchg
mov
out
dec
push
adc
mov
jmp
cmp
mov
loop
mov
das
out
dec
imul
pop
mov
lea
adc
dec
mov
jle
xchg
cmpsl
int3
xor
in
int3
pop
sbb
bound
xchg
push
aam
out
jne
rcrb
rcll
mov
stc
jo
clc
push
add
rolb
inc
jg
mov
or
roll
rorb
dec
data16
call
in
test
cmp
insb
or
dec
lods
addr16
xor
iret
lea
adc
push
addr16
scas
push
adc
inc
je
xchg
and
xor
inc
pop
fs
and
outsb
xor
add
sbb
jge
aam
dec
stos
mov
add
sti
add
add
jns
and
pop
lret
shll
nop
and
aam
jp
jns
mov
add
xchg
stc
loop
loop
push
sbb
push
sub
cmpsl
arpl
dec
or
inc
or
int3
xchg
das
mov
fcompl
jnp
sbb
stos
pop
repz
jg
shll
rorl
aad
push
gs
xchg
mov
outsb
insb
jge
fwait
aas
sbb
sbb
push
cmp
cmp
xor
dec
jge
insb
push
xchg
or
dec
shr
xchg
mov
pop
popa
mov
hlt
fs
mov
add
inc
push
jns
je
sub
aam
cmpsl
adc
and
insl
cwtl
gs
xor
xchg
call
add
cmp
mov
mov
cmp
or
jge
adc
test
xchg
movsl
in
mov
scas
or
jl
imul
call
into
adc
inc
into
inc
mov
sbb
dec
sub
je
fmul
mov
insl
lods
cs
xor
adc
dec
sub
mov
mov
cmp
push
inc
adc
jg
pop
lock
outsl
stos
fstps
ret
add
push
test
gs
icebp
andl
push
xor
das
cvttps2pi
xchg
daa
jmp
add
jo
xorl
dec
mov
in
orl
mov
pusha
pop
seto
clc
mov
and
xor
pop
sub
dec
add
push
dec
scas
int3
call
adc
mov
dec
test
movsb
test
data16
jge
fwait
mov
insl
mov
ja
inc
adc
sbb
insl
jbe
shll
fisubl
dec
or
and
inc
or
xlat
test
xor
ja
dec
jmp
mov
mov
nop
mov
into
add
sti
add
add
or
sahf
in
xor
and
cmp
mov
jb
lock
pop
ljmp
mov
fstl
aas
aas
cmp
jp
mov
out
pop
in
mov
faddl
lea
cmp
and
ret
xchg
dec
gs
les
fwait
test
cmp
lahf
xchg
std
sub
push
stc
cmp
loopne
lods
xchg
xor
jle
xor
aaa
rorl
popa
in
jb
sub
and
stos
iret
lds
xchg
lods
inc
cmp
or
xchg
outsl
jne
ret
mov
mov
mov
lret
mov
dec
dec
pop
loopne
cmp
ss
es
adc
xchg
mov
dec
add
push
jo
push
out
inc
hlt
and
and
jae
mov
js
and
dec
xor
addb
xlat
test
fdivrl
lcall
cli
into
and
sub
aas
jbe
inc
dec
fbld
pop
jg
rol
je
push
sub
jbe
mov
in
push
and
inc
shrd
inc
scas
pminub
outsb
sub
or
jo
add
cmp
imul
or
pop
imul
mov
jns
outsl
mov
inc
fimull
mov
cmp
es
push
sti
dec
dec
mov
cli
xchg
xchg
mov
lods
out
pop
ja
cli
scas
mov
daa
cltd
push
cmp
or
sub
or
or
sti
jecxz
pop
ja
sub
test
push
fsts
aaa
out
into
in
test
sbb
std
or
sbbb
outsl
popf
das
cmp
sub
jge
data16
push
rcll
mov
repnz
lret
add
mov
in
dec
cmp
add
cmc
filds
add
sti
add
add
popf
xchg
ja
sub
fwait
rcr
bound
and
push
or
xor
mov
arpl
cmc
sbb
jge
mov
sahf
push
push
sarb
mov
test
data16
rorb
insb
and
jmp
outsl
cmp
jo
std
mov
andl
cmpsl
or
pop
or
xchg
xchg
pop
fldt
repz
aaa
fcomps
fld
shll
xor
sub
and
outsb
lods
and
not
xor
int3
orb
cmp
call
xchg
into
call
hlt
bound
mov
mov
cmp
fcompl
mov
cltd
and
jp
call
mov
stos
roll
pop
xlat
xchg
inc
sbb
test
adc
fwait
pop
sahf
xor
lahf
mov
jno
aas
fsubrp
scas
in
pop
fisubrs
inc
mov
aad
not
test
or
jge
stos
js
nop
iret
sti
fstp
xchg
mov
and
adc
cmp
ror
mov
inc
xchg
or
mov
outsl
jmp
stc
inc
lods
test
outsb
mov
jno
cs
out
stos
adc
and
sub
jb
lret
or
jne
lods
testl
popa
push
imul
clc
insl
push
in
stc
cmp
adc
sbb
ret
out
jns
icebp
push
insb
icebp
mov
fsubp
jg
cmp
stos
add
call
aaa
decl
shrb
fucomip
push
hlt
jnp
pop
mov
or
in
dec
mov
dec
push
push
inc
movsl
jae
call
stos
jo
dec
cli
fldcw
imul
add
add
add
push
vpunpckhdq
and
adc
loop
cs
mov
outsl
pop
jp
mov
xor
dec
cmp
inc
cwtl
imull
pop
aaa
insb
xor
cmp
pop
mov
sbb
jmp
xchg
and
cmp
or
mov
sbb
int
test
mov
pushf
sbb
fimuls
mov
and
xor
fldl
sbb
dec
sarb
sub
dec
sbb
xchg
fsubl
sti
in
sbb
js
push
and
icebp
shlb
or
leave
or
xchg
sub
sti
pop
sub
sub
cmp
mov
repnz
xor
pop
cmpsl
adcl
test
jno
lds
mov
xor
push
outsb
mov
fwait
loop
loop
push
movsb
js
mov
clc
xor
jge
ret
push
or
dec
fs
sub
in
ljmp
lds
incb
mov
dec
cli
lods
aad
call
scas
cld
test
xchg
pop
call
ljmp
arpl
jb
fiaddl
insl
push
jae
sub
stc
jnp
mov
and
mov
mov
xchg
xor
pop
lret
mov
push
add
insb
cmpsb
pop
gs
sahf
popa
dec
push
sbb
mov
imul
mov
inc
sbb
push
roll
repz
cld
and
jecxz
fistl
xor
stos
scas
mov
dec
mov
vpunpcklqdq
or
cmpsb
scas
mov
xor
in
dec
into
in
jbe
lods
cmp
fdivrl
cmpsl
cld
dec
ljmp
mov
call
add
xchg
test
or
add
push
dec
pop
xchg
arpl
add
sti
add
add
add
xchg
call
iret
and
jp
mov
sub
jmp
cmp
xor
arpl
sub
xlat
into
cmp
arpl
in
out
mov
test
test
mov
test
xchg
ja
jns
fidivl
push
jno
add
pusha
mov
aam
push
lods
inc
rol
jge
xchg
or
into
dec
dec
dec
call
repnz
xchg
or
xchg
and
pop
mov
outsl
push
mov
popf
repnz
push
mov
fistpl
add
mov
sahf
xchg
mov
test
pop
cmp
stos
mov
movsl
lock
aas
out
lods
mov
movsb
and
pop
gs
jle
fbstp
cmp
outsb
pop
imul
mov
cli
jae
xor
imul
call
mov
lock
movsb
pop
mov
dec
and
xchg
icebp
ficompl
push
bound
xor
pop
xor
ss
in
cmp
add
fs
rcrl
pop
push
or
push
push
mov
cmp
mov
loopne
stc
and
iret
fsub
xor
jmp
fwait
sbb
hlt
cmp
subb
stc
movsb
movsb
adc
mov
movsl
mov
pop
jmp
mov
movsl
out
adc
cmp
sbb
orb
arpl
imul
mov
cld
out
cltd
dec
mov
add
cmovl
pusha
add
mov
xchg
adc
mov
push
dec
lcall
or
push
addr16
push
out
popaw
sbb
push
mull
hlt
cmp
int
xchg
sub
xchg
push
leave
push
js
out
jbe
jo
push
cwtl
push
and
cld
sbb
aas
sub
add
xchg
jl
cld
decl
or
sub
add
sti
add
add
xchg
movsb
leave
push
gs
loope
push
push
push
sub
mov
call
leave
js
rolb
roll
bound
rcrl
jo
ljmp
xor
sahf
mov
jg
js
sbb
icebp
daa
repz
or
adc
xlat
add
je
imul
btr
aad
pop
pop
mov
fisubl
xor
cmc
pop
les
xchg
insb
push
mov
aas
imul
lods
and
cmc
mov
push
out
xchg
addr16
jno
pop
loope
xchg
pop
xchg
loop
lods
mov
inc
leave
outsl
add
xchg
mov
add
outsb
pop
pushf
movsl
push
sub
and
loope
daa
dec
mov
pop
mov
mov
stc
jge
adcb
sbb
repnz
sahf
fwait
mov
aaa
arpl
loopne
decl
movsb
das
dec
add
iret
adc
push
xchg
xor
push
jp
sub
loop
mov
es
xchg
in
clc
sbb
xlat
insb
test
ror
add
pop
mov
adc
gs
int
push
lcall
nop
sub
mov
xchg
push
les
sbb
test
clc
jmp
dec
les
push
cmp
in
mov
xchg
imul
scas
movsl
push
sbb
stos
push
cmpsl
imul
lods
lds
adc
sub
and
cwtl
fwait
pop
lret
xchg
sbb
leave
inc
adcl
add
adc
cltd
out
mov
aad
insl
scas
loopne
dec
cmp
mov
fimuls
pop
loope
mov
hlt
arpl
cmpb
push
add
nop
lret
clc
jne
addb
sub
lods
int3
imul
cld
imul
add
and
dec
repz
fldt
cmp
jno
xor
add
sti
add
add
in
pop
rcrb
inc
sub
jmp
mov
cs
or
mov
daa
mov
mov
cli
popf
repnz
sub
ret
jmp
push
mov
ljmp
popf
mov
mov
jmp
mov
gs
stc
pop
test
fsubrl
xlat
xchg
ss
daa
popa
dec
out
jecxz,pn
data16
cmp
repnz
sub
in
sub
mov
sbb
sbb
pop
in
jp
stc
js
ret
pop
inc
dec
addb
bound
push
adc
out
sub
test
xor
outsl
pop
js
lock
add
lcall
push
in
fwait
and
jmp
stos
mov
adc
xchg
mov
je
jb
fsubl
dec
push
pop
lods
pop
push
dec
pop
and
sbb
les
fsts
pop
rol
jmp
sahf
jbe
add
sbb
fdivrl
test
lea
sarb
and
jbe
ds
mov
jmp
std
jmp
push
adc
ret
mov
xchg
adc
sub
jge
pop
into
insb
decl
mov
enter
int
xchg
push
mov
ss
ja
ds
dec
divb
imul
jl
ja
popf
inc
lds
ljmp
pop
ret
outsb
enter
shll
sub
push
call
pop
pop
lods
jbe
sbb
lahf
xor
test
mov
out
pop
dec
push
push
test
cltd
lea
out
js
add
fwait
cmp
jns
jmp
mov
adc
sbb
or
jle
loope
lea
mov
fwait
mov
inc
mov
push
cmp
aaa
push
sub
sbbl
push
outsb
movsb
fldenv
or
push
add
lcall
rcl
sub
add
sti
add
add
sbb
repz
mov
adc
dec
push
push
ja
mov
jo
jle
inc
xor
or
test
inc
movsl
je
pop
stos
pop
sub
jno
and
xor
ja
pop
and
mov
movsb
xchg
fnstsw
mov
cmp
or
mov
je
inc
scas
shl
inc
aaa
xchg
loope
sub
gs
iret
jns
jne
sub
es
aam
xlat
ss
jo
or
imul
mov
pop
sub
jg
inc
pop
rorb
mov
aam
xor
nop
and
call
cltd
sti
push
lods
or
mov
popa
xorl
xchg
mov
xchg
sub
cmp
lods
lds
leave
mov
cmpsl
inc
mov
xchg
pop
xor
pusha
popfw
cmovno
jbe
arpl
cltd
mov
add
rorl
cmpsl
xor
xor
add
xchg
cmpsb
icebp
push
sub
inc
sti
ret
gs
rorl
inc
sub
mov
rsm
mov
and
movsl
adc
icebp
pop
mov
fistpl
adc
mov
or
clc
inc
dec
out
or
sbb
rclb
bound
fcmovne
add
lods
jmp
es
sbb
cmp
add
push
adc
in
jne
loope
aaa
movsl
pop
cmp
xor
adc
push
arpl
mov
add
mov
xchg
push
mov
aaa
enter
gs
jp
dec
dec
in
cli
imul
jne
mov
push
mov
aaa
xor
int
jae
clc
dec
pop
cmp
scas
cmpsl
xor
rorl
cmp
xchg
xchg
add
jp
popf
jecxz
add
addb
add
add
idivl
jg
xchg
add
daa
faddl
add
add
add
repnz
lods
mov
scas
sbb
lds
mov
push
or
mov
jmp
pop
sbb
pop
dec
lret
repnz
add
cmp
jg
repnz
mov
adc
pop
pop
stos
fsubrs
ja
inc
jne
adc
leave
loope
add
ljmp
xchg
or
jb
imul
xchg
sub
pop
fistpl
mov
movsb
adc
mov
push
fcomip
xlat
or
aas
dec
fnstenv
xchg
add
sbb
scas
pop
cmpsb
push
push
arpl
mov
jg
aam
cmc
bound
mov
cmc
andb
inc
and
into
jmp
loope
dec
scas
xor
push
add
hlt
cwtl
lea
jg
pop
inc
adc
fdivrp
out
insb
imul
mov
add
adc
fstl
jb
into
jnp
pushf
pop
push
xor
lods
push
push
lea
in
dec
shlb
jmp
and
xor
fisubrl
mov
mov
fsubs
jge
push
xchg
mov
mov
bound
leave
inc
push
xchg
jns
or
push
add
clc
mov
inc
mov
pop
lret
pop
sub
clc
and
mov
cmp
scas
xchg
lods
cli
add
ljmp
rol
shl
icebp
or
imul
pop
jno
fs
fwait
out
cmpsl
dec
inc
inc
or
sahf
rcrl
iret
pop
fldt
mov
or
sbbb
or
mov
jno
loop
mov
outsb
cld
fwait
incb
jo
fstl
aaa
int3
loopne
or
ljmp
mov
inc
xchg
xor
das
andb
adc
jne
push
add
mov
call
mov
adc
into
ja
fiadds
add
add
add
cltd
cmc
mov
xchg
stc
adc
addb
jb
mov
stos
inc
pop
mov
sub
out
cld
pop
adc
pop
dec
out
mov
fidivs
shrl
push
imul
mov
rclb
gs
repz
pop
xchg
cmp
xchg
add
xchg
lret
lret
pop
jne
nop
and
pop
rorb
jbe
inc
test
mov
imul
repnz
out
lcall
cmp
xor
es
sbb
push
repnz
adc
dec
iret
les
add
or
call
pop
push
in
xor
out
gs
lret
out
mov
xchg
sbb
dec
in
mov
stos
pop
ror
idivl
mov
push
push
clc
mov
jg
or
cmp
xchg
dec
mov
jl
and
push
inc
ret
mov
cltd
cmpsb
xchg
js
xor
jns
js
add
cwtl
mov
add
xchg
lcall
clc
inc
and
mov
jle
lret
imul
jl
lock
or
mov
push
nop
xor
jne
pop
push
popf
fdivl
movsl
and
imul
cli
and
adc
out
mov
xor
ljmp
adc
pop
mov
out
adc
jb
add
inc
jmp
aad
cmc
push
cld
mov
xchg
fistpll
adc
icebp
mov
daa
shrb
cli
cltd
push
sub
jnp
adc
jnp
xchg
pop
push
adc
int
ss
dec
sahf
pop
mov
cmc
dec
and
inc
in
rcl
mov
das
ret
inc
subb
xor
or
sbb
xor
movsb
fcomp
cmp
mov
inc
js
xor
inc
mov
popf
aas
in
mov
inc
xchg
push
xor
add
mov
fcompl
or
lahf
jge
xlat
sbb
add
add
jg
sub
movsb
mov
push
loope
outsl
add
adc
out
push
pusha
int
push
ljmp
inc
sub
push
cmp
popa
icebp
or
jg
lods
xchg
mov
cmp
fs
cli
popf
jae,pt
jmp
and
push
dec
sub
adc
leave
jo
push
cmp
xor
dec
xor
or
cmpsb
pop
dec
outsb
cld
subb
and
pop
xchg
jge
or
mov
jge
or
adc
out
imul
sub
into
mov
mov
mov
dec
fisttps
icebp
fdivrl
cltd
xchg
push
push
pop
mov
out
mov
xchg
pop
or
in
adc
cmpsb
mov
loop
pusha
stc
lret
lods
push
pop
ss
ss
or
das
add
add
ss
or
clc
push
dec
push
cmp
push
mov
lods
rcr
sbb
jge
push
out
mov
nop
mov
mov
stc
pusha
aad
js
xchg
daa
int3
sbb
inc
arpl
add
cmp
inc
stos
popf
int3
cmp
hlt
inc
mov
shlb
sbb
mov
cwtl
mov
pop
push
or
rcll
xor
mov
xor
imul
dec
ds
scas
ret
jb
popa
cld
sti
lret
push
dec
xor
add
mov
cmpb
dec
rcrb
loopne
xchg
lock
mov
cmp
or
or
xchg
mov
ja
in
stos
xchg
test
jle
bound
jae
fidivl
pop
stos
add
test
adc
pushf
xchg
push
insb
xchg
push
mov
cli
mov
mov
out
inc
loope
xor
or
cmp
xor
bound
shrb
movsl
inc
sub
fdivp
add
inc
stos
pop
sbb
cli
inc
cli
mov
aaa
mov
add
add
add
push
xchg
mov
ss
mov
test
je
movsb
adc
mov
test
test
fwait
sub
lret
fistpl
fldenv
xor
addr16
ja
mov
sbb
xor
jno
into
mov
aas
imul
dec
pop
repz
push
rolb
mov
mov
push
lea
push
fisttpl
jecxz
mov
or
push
imul
popl
mov
mov
xor
jae
out
addr16
inc
lret
cmc
pushf
js
popf
xchg
add
scas
push
loop
pop
sti
dec
push
mov
mov
in
push
dec
decb
or
pop
pushf
mov
in
pop
jno
ffree
adc
pop
pop
jmp
sti
dec
addb
repz
test
pop
mov
inc
imul
testl
add
add
lret
add
xor
pop
mov
movsb
mov
movsl
cmp
push
pop
popf
mov
jp
lret
xor
or
arpl
mov
lds
call
cs
mov
jb
and
xchg
xor
xor
dec
int
xlat
rol
mov
rorb
mov
sbb
sbb
inc
sub
dec
fs
dec
pop
or
xchg
shrl
ret
mov
mov
faddl
arpl
jecxz
aaa
faddl
mov
sub
cmpxchg
int3
push
mov
andl
ljmp
and
adc
fnstsw
or
pop
or
sbb
lock
movsl
hlt
sbb
add
pop
repnz
hlt
pop
or
xor
in
push
stos
inc
lock
mov
jl
test
mov
xlat
push
xlat
ja
out
push
lahf
and
add
sti
add
add
xchg
insb
sbb
xor
xor
fisubrs
mov
mov
cs
imul
jge
js
mov
push
mov
mov
mov
xchg
inc
jne
js
pop
cld
js
xchg
add
add
inc
scas
loop
xor
cmpsb
loop
jo
mov
xchg
xchg
popa
hlt
adc
in
cltd
sahf
xchg
movsl
mov
mov
push
xchg
jae
nop
mov
lret
and
xor
scas
mov
inc
add
pop
repz
dec
into
sahf
imul
push
call
push
jp
push
cmp
cmc
addr16
in
hlt
stos
int
mov
lahf
outsl
mov
mov
pop
jmp
jle
push
cli
add
lret
jecxz
xchg
stos
insb
pop
push
dec
push
or
popf
outsb
pop
addr16
jge
push
push
hlt
hlt
mov
fs
popf
xchg
mov
sub
pop
movsl
dec
mov
inc
cmpsb
push
and
push
imul
and
sub
out
mov
pushf
jge
in
std
shlb
cmp
mov
inc
ret
and
inc
add
int
mov
pop
and
imul
test
sub
add
adc
add
enter
arpl
mov
push
cli
aam
xchg
push
mov
mov
ret
mov
jl
cmp
sbb
xorl
xlat
pop
xor
mov
add
shll
xchg
fcomps
xchg
or
jns
jecxz
mov
or
notl
out
in
adc
test
dec
push
subb
jae
fbstp
dec
dec
xor
add
mov
add
rcll
jmp
aaa
cmp
push
out
add
add
add
pop
insl
inc
add
jnp
pop
jb
lds
fpatan
pop
xchg
inc
mov
int
and
repnz
push
jg
daa
push
in
arpl
pop
sbb
fs
jae
or
ljmp
adc
imul
cbtw
inc
ret
mov
mov
pop
or
jne
xchg
push
xor
mov
insl
mov
xchg
cmp
jbe
pop
in
push
popf
push
dec
inc
mov
and
arpl
ret
sub
mov
cwtl
sub
adcb
jns
sti
sbb
jb
ds
pusha
and
es
movsb
sub
cwtl
sbb
fadds
dec
and
in
lcall
stc
lret
scas
xor
lock
int3
cld
mov
in
in
mov
cmp
jmp
fimuls
xlat
negl
outsb
push
mov
jmp
notl
add
xchg
mov
sbb
jle
pop
outsb
adcb
inc
call
sub
lds
and
fwait
jle
call
inc
fistpl
pop
mov
and
out
mov
and
lds
inc
mov
in
or
xor
jp
adc
lds
shrl
aad
aaa
sub
inc
fcompl
arpl
pop
popf
mov
push
pop
loopne
lret
sbb
mov
aaa
lock
insb
cmc
aas
rcrl
mov
shlb
push
xor
ss
test
sbb
mov
test
mov
push
test
jl
xor
xor
xchg
mov
add
mov
rolb
inc
jno
cltd
xor
jge
cmp
cwtl
xchg
xor
mul
push
xor
lods
sub
mov
sbb
lock
adc
arpl
movsb
roll
iret
negb
mov
pushf
sbb
or
add
sti
add
add
negb
fistpll
bound
mov
sahf
mov
js
loopne
dec
dec
out
lds
les
je
aam
xor
xchg
xchg
adc
and
add
pop
add
icebp
dec
xchg
and
aas
cmp
jl
push
xchg
inc
loop
push
pop
pop
cmc
lods
xor
pop
ljmp
push
jg
in
pop
in
adc
aaa
pushf
das
push
test
repz
xchg
sub
aaa
and
rol
add
shrl
rcl
faddl
ljmp
xchg
inc
rcrb
fildl
jae
push
rorb
fmull
inc
cmpsb
cmp
les
aad
pop
or
flds
pop
imul
xchg
jns
xor
fimull
mov
dec
inc
pop
inc
ret
push
out
pop
aam
mov
out
mov
call
pop
xchg
jl
cmc
dec
inc
scas
clc
sub
cwtl
jmp
xchg
dec
imul
push
mov
jmp
dec
push
cmp
neg
sub
loopne
mov
dec
or
add
cld
and
mov
sbb
aaa
pop
or
and
jecxz
or
int3
inc
pop
fnstsw
xchg
movsb
es
fisubl
iret
rolb
mov
mov
sbb
subl
subb
ffreep
mov
mov
adc
and
hlt
in
imul
mov
cld
ljmp
insl
jns
inc
mov
repnz
dec
decl
and
jl
mov
add
xchg
das
mov
icebp
mov
inc
insl
or
add
adc
rorb
addl
or
and
daa
cmp
push
incl
jle
daa
ja
scas
dec
outsb
lret
bound
mov
add
push
push
jnp
outsl
jno
dec
ja
push
add
add
add
mov
inc
mov
cltd
jecxz
mov
sahf
xor
dec
mov
flds
stos
addr16
and
shrl
std
sbb
mov
and
cmc
push
mov
popa
jle
fisubrl
inc
xor
push
lcall
sahf
aad
and
xor
xchg
push
mov
pop
ljmp
mov
stos
in
sbb
mov
fcoml
push
shlb
xlat
repz
pop
lods
xor
rcr
mov
xchg
test
mov
mov
or
pop
mov
pushf
mov
out
js
push
push
leave
repnz
sahf
push
jmp
mov
fcom
sbb
push
iret
inc
cltd
and
mov
and
add
insl
adc
loope
shrl
fldt
movb
inc
imul
insb
mov
fimuls
mov
out
pop
cmp
xchg
mov
shll
adc
movsb
scas
hlt
xor
ljmp
pushf
mov
sub
fs
xchg
call
lcallw
mov
and
pop
adc
cmpb
cmpb
mov
lods
lods
int
arpl
out
sti
adc
aam
sbb
cmp
xchg
cmp
mov
ja
inc
sub
jns
sub
int3
sub
dec
outsl
or
inc
pop
pop
gs
push
fdivl
cs
or
fnstenv
dec
sub
jb
stos
jae
xchg
cmp
fs
inc
jge
int3
xchg
add
mov
push
mov
cmp
jb
lods
push
out
mov
lahf
je
jb
out
pusha
xchg
sti
mov
add
cltd
enter
mov
stc
popf
pop
and
mov
jmp
add
add
add
pop
scas
jne
out
add
outsl
mov
pop
es
aaa
and
es
cld
push
stos
mov
ja
je
es
das
rcrl
and
sub
ljmp
in
popf
dec
push
cs
out
scas
dec
jb
sub
pop
or
pop
and
sub
push
adc
cmp
in
ja
jbe
xor
mov
push
gs
adc
repz
push
fbstp
sbbb
jbe
adc
push
sub
or
dec
ror
mov
inc
cmp
mov
cwtl
out
out
ljmp
ret
repz
xor
xchg
shlb
adc
in
imul
arpl
data16
jp
inc
mov
cmc
ja
pop
ljmp
pusha
in
push
es
or
inc
dec
cmpsb
inc
fcom
fsubl
mov
xchg
pushf
add
inc
dec
test
lret
nop
rcrl
stc
and
mov
pop
dec
in
lods
sbb
xchg
repnz
out
in
cmc
mov
fstl
sbb
push
gs
inc
cmp
call
dec
jp
pop
cld
push
jg
or
inc
xchg
jle
mov
int3
sarl
jecxz
xchg
test
gs
lock
xchg
hlt
outsl
rclb
loop
push
sbb
add
cltd
jp
insl
ss
add
sbb
cmc
ucomiss
js
push
or
roll
jle
add
jnp
xchg
mov
int3
push
adc
fnstenv
data16
mov
add
cmc
fsubr
bound
cld
jbe
inc
pop
shl
push
insl
cmc
sub
inc
lahf
pop
out
jg
xchg
push
pusha
adc
xor
mov
lahf
int
add
sbb
jge
and
dec
pop
into
outsl
aaa
cli
in
add
sti
add
add
jmp
out
scas
xlat
pop
dec
sub
mov
int3
iret
and
mov
pop
pushf
dec
jno
dec
inc
mov
push
xchg
cmp
xor
xchg
mov
lret
sbb
rorb
and
jmp
sub
lcall
daa
lods
scas
icebp
dec
cmpsb
rcll
jmp
dec
adc
testb
push
fwait
mov
imul
push
mov
mov
adc
jecxz
adc
push
punpcklwd
adc
inc
test
mov
shr
popa
jle
push
notl
jb
and
add
mov
in
jae
sbb
mov
jnp
ds
lds
andb
fwait
in
sahf
push
and
in
rorb
hlt
out
and
out
fmull
sub
xchg
adcl
push
inc
setp
inc
mov
hlt
movb
inc
mov
rcrl
sbb
adc
dec
mov
xchg
stos
movsb
add
lods
inc
pop
mov
test
add
adc
xor
xor
fcmove
out
mov
mov
in
jne
popf
and
or
fwait
out
imul
mov
pop
add
push
and
das
xor
cmp
js
cli
mulb
scas
ljmp
cmc
pop
shll
fadds
cs
lret
jne
stos
and
pop
bound
dec
push
cmc
fisttps
add
outsb
push
xchg
cli
inc
inc
hlt
call
jmp
addr16
xor
idivl
cmp
test
int3
pop
loopne
ret
mov
pop
pop
imul
jg
mov
rep
cmpsb
jge
fisubl
sub
and
popf
and
xor
add
roll
pop
arpl
jl
cmc
out
add
sti
add
add
xor
adc
mov
adc
lcall
push
push
icebp
dec
pop
fnsave
icebp
add
fbld
mov
sub
dec
aaa
lcall
into
sub
mov
mov
mov
adc
sub
add
outsl
aad
leave
stos
inc
jb
pusha
sbb
xchg
push
dec
stos
dec
push
jne
bound
les
aas
hlt
pop
push
aad
gs
es
test
enter
fsubrl
icebp
ds
and
fmul
mov
cmp
std
mov
fcmove
fs
sahf
fcmovnu
scas
mov
mov
mov
push
aaa
or
nop
push
sbb
sub
add
and
sar
es
cmp
das
ss
outsb
pop
test
sbb
pop
cwtl
movb
jbe
mov
jp
ret
or
repnz
leave
xchg
push
cs
insl
jno
xor
sahf
bound
jno
and
sub
and
and
popa
incl
fidivl
xchg
into
mov
cmp
mov
xor
push
or
hlt
repnz
lods
mov
xlat
dec
or
test
cld
shl
mov
sub
cmpsb
push
movsb
addb
mov
popf
mov
adc
adc
int3
or
jecxz
mov
jecxz
inc
nop
xor
jp
call
aam
stos
cmpsl
adcb
gs
xor
pusha
in
adc
xor
jecxz
das
pop
icebp
or
push
push
xlat
xchg
push
dec
cmpsl
pop
cmp
push
pop
lods
and
popf
xchg
pop
xchg
xlat
or
cmpsl
fs
insl
inc
mov
popa
push
dec
mov
bound
lea
and
add
inc
sub
jno
or
ja
daa
call
sbb
stc
lock
add
daa
pushf
cli
mov
xchg
out
cltd
pop
dec
inc
js
icebp
add
sti
add
add
movsl
arpl
xor
mov
int
xchg
std
enter
scas
call
mov
out
lods
mov
out
repnz
push
push
in
lods
mov
mov
cmp
xor
or
xlat
add
testb
daa
lret
xchg
into
or
lret
les
sbb
or
cmp
adc
mov
sbb
mov
and
in
fildll
data16
popa
hlt
xor
out
xchg
xor
xchg
sbb
jge
in
fadd
hlt
xchg
subl
mov
jmp
sub
mov
pop
add
pop
aam
sysret
movsl
xchg
lcall
cmc
scas
pop
or
nop
fstps
fimull
in
inc
add
xlat
test
loop
stc
dec
inc
in
loop
cmp
out
fbld
test
dec
jle
shrb
repz
add
gs
xchg
pop
fisttpl
push
inc
insb
adc
fs
jnp
dec
cmpsl
xchg
out
sbb
es
xor
aaa
fsubrl
test
sbb
push
sub
xchg
add
dec
xor
jo
inc
icebp
inc
push
cld
cmp
pop
lock
daa
xor
mov
hlt
jmp
popf
or
push
pop
xor
mov
cmc
mov
sub
std
pop
fdivr
dec
dec
dec
pop
hlt
cmpl
mov
adc
xchg
jmp
ja
icebp
in
cmpsb
adc
addl
pop
lcall
imul
rcrl
sbb
and
xchg
mov
jp
and
adc
lret
aaa
jno
in
scas
cmc
dec
es
mov
xchg
xchg
mov
push
pop
ds
pop
enter
ja
dec
jns
mov
imul
test
add
and
xchg
lret
add
add
fisubl
and
lock
cwtl
jmp
add
sti
add
add
pop
cmp
xor
hlt
inc
jo
jns
dec
test
fmull
fsubl
add
in
jne
jb
mov
adc
in
dec
sub
pop
outsl
aaa
sub
ja
ficompl
and
mov
mov
outsl
or
jge
test
pop
in
sbb
adc
and
lcall
out
add
inc
push
imul
enter
xor
pop
imul
xor
outsl
push
mov
push
cmpb
sub
xchg
mov
add
cmpsl
shll
aas
dec
mov
bound
les
out
and
pop
add
mov
dec
push
aad
adc
fcmovu
sbbb
cmp
pop
mov
push
cmp
or
jbe
push
push
xlat
xchg
insl
pop
repnz
xchg
adc
mov
push
fs
out
iret
inc
in
xchg
pop
pop
pop
jle
add
call
xchg
hlt
ret
mov
pop
lods
jecxz
sbb
dec
pop
xchg
fmull
fisubl
mov
es
push
and
sbb
sbb
out
test
outsl
sbb
inc
ljmp
and
stc
ficoms
fcos
jecxz
xor
je
iret
sub
sbb
xchg
push
add
jge
ds
pop
cmp
outsl
mov
and
sub
sbb
addb
dec
xor
sbb
cmp
xor
ja
mov
mov
out
add
call
scas
popa
sbb
xchg
iret
shll
mov
push
lret
jnp
scas
push
pop
jb,pt
ljmp
jmp
out
mov
add
add
iret
cmc
sti
pushf
and
push
andb
add
add
add
loopne
jp
test
inc
mov
or
and
jmp
jmp
rorb
outsb
push
pop
add
repnz
jb
roll
pop
jecxz
push
pop
movsl
pop
in
lea
cmp
push
subl
iret
or
jecxz
clc
dec
jnp
daa
lods
je
call
lahf
mov
lret
xchg
jo
cli
stos
in
push
popf
dec
mov
mov
lea
fs
rorb
arpl
push
inc
scas
adc
call
pop
jnp
mov
pop
mov
sbb
cwtl
iret
imull
dec
fildl
lahf
js
jg
bswap
call
mov
shl
aaa
enter
mov
test
lret
js
addr16
xchg
jmp
adc
cmp
stos
cmp
jp
std
push
jb
cli
push
fcmovnbe
dec
mov
xchg
mov
push
mov
dec
out
jo
add
push
xchg
jp
sarl
sarb
ljmp
jnp
jp
sub
arpl
dec
cmp
shll
jo
push
flds
xchg
adc
mov
push
gs
cmp
jnp
test
xchg
fdivrs
test
in
jp
into
adc
mov
dec
sbb
and
imul
cmp
enter
mov
adc
lods
push
jae
loopne
inc
lea
loopne
mov
sbb
aas
popf
pop
std
ljmp
fadds
orb
ret
mov
push
cwtl
aam
insl
mov
test
cs
lds
iret
xor
xlat
rclb
and
fisubrl
mov
xchg
rorl
pushf
cmp
xor
cmp
adc
dec
mov
fs
cmp
imul
dec
inc
adc
push
or
mov
xchg
xor
pop
and
cmp
add
cmp
stc
jl
stc
jne
jp
lock
add
sti
add
add
lock
jmp
fidivl
jmp
pop
jno
mov
aad
dec
push
daa
je
addr16
sbb
mov
add
imul
add
std
daa
dec
movl
add
arpl
jg
mov
push
pop
inc
ret
rclb
dec
ret
jbe,pt
test
in
scas
js
add
movsl
sub
add
mov
sbb
and
xor
mov
dec
enter
mov
sub
mov
xchg
icebp
fdivp
test
dec
sbb
lret
pop
xlat
sbb
ja
inc
adcl
push
xchg
add
xchg
sahf
xor
test
in
and
xchg
xor
or
push
add
sbb
ja
fisubs
ficomps
lret
lods
jnp
dec
js
jnp
les
lcall
in
xchg
xchg
leave
xor
cmp
cwtl
rol
mov
jle
insb
mov
bnd
notb
push
popa
mov
jl
lock
and
or
out
clc
inc
rorb
push
inc
mov
jnp
mov
imul
and
xchg
add
cmp
dec
dec
jne
ret
and
adc
xor
out
int3
popf
push
shlb
arpl
xchg
and
testb
repz
jbe
arpl
sbb
xor
jp
push
and
sbb
mov
mov
xchg
stos
xchg
dec
xchg
out
sub
pusha
and
daa
jge
sbb
cmp
arpl
ja
ja
pop
enter
push
jle
push
shlb
fs
jns
pop
dec
call
jne
mov
or
outsb
stc
mov
jp
mov
xchg
xchg
and
shl
inc
push
add
cmp
test
fdivr
add
sbb
add
addr16
and
pop
xor
in
pop
adc
dec
dec
pushf
xchg
push
andb
