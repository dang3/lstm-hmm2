push
mov
sub
mov
movzbl
mov
mov
movl
movl
cmp
movl
jne
or
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
push
pushl
pushl
call
xor
or
dec
mov
jmp
add
push
xor
or
adc
mov
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movzwl
not
and
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
push
mov
movzwl
mov
mov
mov
movl
movl
mov
jmp
sbbb
cltd
js
mov
test
jo
jo
jo
jo
rcl
aad
ror
rol
pop
push
add
add
xor
ret
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
int
xchg
and
das
ficoms
pop
jmp
push
pop
sbb
int3
fsubrl
outsb
sbb
inc
xchg
test
cmp
ret
pushf
or
adc
rcll
jl
in
add
pop
cmovp
fsin
dec
jmp
loope
cmp
divb
sub
mov
jno
pushf
mov
pop
aaa
xchg
pop
popf
movb
iret
push
test
inc
mov
mov
mov
adc
insl
jmp
xchg
sbb
lea
aam
leave
and
sbb
sahf
jge
nop
enter
daa
sbb
push
mov
pop
test
std
outsl
dec
mov
dec
sti
imulb
inc
test
ficompl
cmp
sub
lret
adc
mov
jp
inc
addr16
push
sub
inc
roll
jbe
xchg
pushf
leave
or
xchg
popf
sub
jns
xchg
xchg
iret
pop
ljmp
push
test
cmc
pop
fwait
xchg
sub
add
into
mov
xor
xchg
adc
pop
repz
push
pop
out
xchg
imul
fsts
loopne
ss
movsb
mov
push
sbb
jecxz
lods
sub
cs
sub
jno
gs
mov
repz
cmp
xchg
fwait
sub
cld
jmp
clc
icebp
mov
icebp
ficompl
fbstp
jo
jo
jo
fdivs
cmp
xor
dec
mov
fmull
das
xchg
popf
sbb
and
lret
out
lods
or
lods
dec
push
lock
lds
cmp
push
dec
mov
out
jns
adc
in
stc
aas
pop
scas
inc
enter
lods
push
dec
les
or
inc
sub
les
mov
or
iret
out
out
mov
sbb
inc
ret
jb
int
mov
notl
xlat
mov
mov
push
mov
sbb
lock
fists
sub
inc
push
mov
rol
adc
mov
ficompl
rclb
cs
pop
sub
inc
push
jg
add
iret
add
out
jns
lods
aas
lret
adc
mov
les
in
rorl
hlt
js
icebp
mov
jecxz
jae
pop
stc
add
pop
insb
push
test
mov
insb
mov
push
notb
clc
dec
insb
inc
sbb
xchg
jns
mov
sub
es
fldcw
mov
imul
dec
jg
mov
sub
jbe
sub
jle
scas
vxorps
sti
mov
and
xchg
sbb
ljmp
mov
mov
mov
sti
cwtl
call
ret
movsb
fwait
add
sbb
cmpsb
push
subb
mov
std
lods
into
addr16
lods
lds
hlt
popf
sbb
inc
pop
xchg
pop
jg
out
pop
xor
push
pop
cmp
push
mov
out
sub
orl
pop
mov
test
in
add
int3
pop
sbb
and
mov
rol
fdivl
shlb
inc
xchg
push
push
sub
fdivrs
pushf
cwtl
mov
rorb
fmuls
call
add
lods
dec
lods
imul
loope
cli
dec
jo
jo
jo
jo
cmp
sbb
cli
frstor
mov
adc
addb
adcb
add
stos
fstpl
test
xchg
ss
inc
ret
and
pop
fnstcw
shlb
clc
mov
lea
pop
leave
mov
sbb
sbbl
sub
lods
pop
ret
cmpsl
pushf
xor
movsb
sub
xlat
loopne
xor
pop
mov
stc
movsb
enter
or
push
dec
adc
lods
lahf
sti
cli
insb
and
pop
or
ss
pop
dec
aam
mov
inc
inc
push
arpl
jno
les
lock
movsl
shr
test
ret
mov
repnz
adc
xchg
leave
idivl
and
mov
out
adc
dec
pop
xor
push
jae
and
push
or
lret
mov
dec
nop
mov
outsb
fucomp
bound
cmp
adc
jl
dec
and
push
inc
push
fisttps
popa
lea
pop
adc
divl
inc
jb
push
sarb
jnp
stos
lods
push
loopne
cld
das
pusha
sub
cmp
pop
xor
sbb
out
xchg
popf
mov
dec
repz
popa
sbb
out
adc
test
xor
repz
inc
aad
addr16
or
xor
mov
sbb
jae
das
pop
xchg
inc
sub
hlt
loopne
mov
enter
lret
cmpsl
mov
jns
sbb
xor
cmpsl
inc
cmp
mov
fnstcw
sahf
mov
out
sbb
arpl
scas
repz
xor
hlt
pop
cmc
inc
jecxz
loop
loopne
mov
mov
jecxz
pop
push
and
or
sub
pop
loope
test
cmp
xchg
mov
mov
insl
cltd
xchg
rcrl
lods
jae
mov
enter
sti
popf
mov
inc
in
inc
in
add
inc
in
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
jmp
int3
sub
push
mov
in
cmp
jo
jo
jo
jo
mov
insb
imul
xchg
mov
scas
inc
enter
lret
out
hlt
sbb
in
out
out
jecxz
test
adc
in
adc
in
pop
ljmp
xchg
jns
push
jl
mov
ljmp
std
test
mov
rorb
pop
push
in
rorb
inc
adc
ret
push
gs
or
scas
iret
jle
mov
xor
sbb
mov
fs
mov
inc
into
adc
insb
adc
cmp
push
mov
jno
dec
lods
ret
movsb
push
mov
and
bound
mov
fnstenv
loopne
outsl
test
lea
inc
cmc
push
loopne
aaa
pushl
push
jl
jle
aas
into
shr
jl
mov
pop
fcmovnu
xchg
ja
cmp
push
int3
sbb
cwtl
and
sub
leave
push
dec
or
jbe
inc
pop
in
push
mov
xchg
or
in
inc
in
add
popa
push
mov
xor
mov
xor
mov
sbb
in
xchg
sub
push
mov
adc
cmc
cmp
outsl
jecxz
dec
popf
add
mov
shrl
les
cmp
sbb
inc
xor
fneni(8087
into
enter
xchg
insl
lea
mov
push
es
pop
ljmp
cmp
outsb
push
fsubrl
jmp
mov
fisttpll
loop
jbe
mov
fsubrl
mov
xchg
pop
mov
dec
cmpsb
mov
int
inc
push
sub
ds
test
jp
mov
mov
jecxz
mov
pusha
mov
sbb
sub
mov
xor
outsb
inc
scas
jp
fs
movsb
mov
lods
mov
sbb
inc
lock
imul
mov
mov
cmp
je
mov
orl
jmp
mov
jmp
popa
ja
add
xorl
adc
mov
push
cmc
mov
js
jo
jle
jo
dec
cmp
repz
std
aad
shlb
out
xchg
cmpsl
lods
aas
xchg
repnz
pop
test
imul
fwait
imul
imul
mov
mov
es
xor
adc
mov
mov
mov
lods
jp
and
dec
and
push
mov
xchg
push
push
fwait
das
mov
inc
xor
jmp
jne
test
ljmp
insl
lcallw
xor
xor
movsb
inc
gs
test
sti
push
lea
andb
or
cli
mov
and
movsb
push
and
std
pop
scas
rorl
inc
pop
push
fs
dec
stc
shlb
fadd
sub
ds
movsl
ret
sarl
sbb
mov
lods
fxch
push
pop
int3
fwait
shlb
mov
cmp
dec
inc
repnz
xor
mov
push
mov
adc
add
jo
into
pop
jnp
mov
mov
inc
fdivr
lret
loop
adc
lret
out
xchg
outsl
mov
jnp
jmp
pop
int
mov
fs
out
dec
imul
loope
inc
loop
mov
imul
outsb
aaa
aas
rclb
stc
mov
mov
dec
daa
sub
mov
sbb
imul
subb
jle
out
and
jb
dec
fwait
out
fistpl
jne
cs
and
sbb
mov
lret
pop
incb
xor
int3
sub
sub
jmp
cmp
movb
fs
stc
or
addr16
outsl
gs
sub
push
cltd
mov
loop
int
cmp
mov
sub
and
inc
mov
lods
test
ret
inc
call
insb
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
jmp
cld
test
jb
stos
inc
inc
cmp
dec
pop
jo
jo
jo
jo
add
adc
subb
repnz
adc
jl
push
add
pop
fisttpl
inc
lret
test
sti
mov
mov
cmpsl
pop
outsl
fldl
das
adc
xor
sub
lcall
add
push
stc
addr16
decb
xor
dec
or
lods
pop
push
test
pop
push
mov
jnp
or
cs
stc
mov
arpl
mov
shl
stos
sbb
iret
negl
mov
in
lea
sbb
and
push
movsb
jbe
daa
or
or
inc
sub
cmpb
rolb
std
mov
ljmp
mov
mov
add
int
aad
stos
iret
inc
cmpl
test
xor
popf
lea
push
pop
shrb
mov
ja
jle
xchg
add
mov
xchg
adc
addr16
sbb
inc
sbb
dec
adc
les
mov
push
je
fidivs
xchg
push
std
mov
out
cmpsb
xchg
adc
push
and
add
or
sbbl
xchg
adc
stos
mov
dec
xor
test
cmp
sub
jmp
cltd
xchg
stos
add
scas
stc
cmp
inc
inc
mov
mov
sbb
adc
push
hlt
pop
push
xchg
in
outsl
push
rclb
inc
xchg
cmp
cmpsl
jle
lods
jb
mov
cmp
jne
lock
shll
adc
and
push
mov
dec
incb
loopne
jns
sti
sub
sti
negb
and
pop
fistps
outsb
adc
inc
mov
inc
test
sbb
or
aad
xor
sbb
test
add
pop
adc
jnp
push
inc
dec
out
int3
ret
mov
push
fmuls
cmp
jmp
ret
gs
cmpsl
insb
cmpb
jo
jo
jo
add
pop
int3
fcmovnb
mov
push
and
mov
mov
out
in
dec
xor
les
push
cmpb
ss
imul
stos
fidivrl
mov
inc
mov
stos
inc
popf
je
push
lcall
pop
sub
pop
jnp
mov
adc
push
adc
aaa
pop
mov
mov
in
sbb
les
inc
les
in
movsl
ds
stos
push
out
pop
and
pop
fwait
dec
shll
and
aaa
mov
jp
cmp
in
adc
add
outsl
out
fdivrl
pop
movsl
aam
shr
xchg
cld
sahf
adc
adc
jl
stos
cmc
repz
jne
movswl
push
inc
lods
fisubs
cmp
xchg
and
mov
movsl
mov
sbb
mov
jge
subl
xor
sbb
lds
add
hlt
shl
popf
push
lock
mov
fcmovb
lcall
mov
test
xor
jg
sub
std
push
push
dec
in
cmp
inc
dec
das
jl
iret
iret
sbb
outsb
xchg
repz
add
test
ss
aaa
add
cmp
adc
cli
je
ja
add
mov
loope
mov
mull
adc
rcr
xor
adc
idivl
cmpsl
nop
adc
pop
jno
xchg
xchg
cwtl
cltd
ss
shrb
pop
jo
sub
nop
sub
rcrl
fucomip
mov
mov
sub
sbb
xchg
push
ljmp
test
sub
pop
adc
gs
add
sbbb
out
aaa
call
inc
push
fldt
ret
add
and
je
mov
xor
add
mov
mov
jmp
jp
sbb
cltd
ja
jno
sbb
sub
add
jo
jo
inc
mov
movsb
stos
repz
xchg
sbb
jbe
mov
pop
sub
jp
outsb
pusha
push
push
inc
or
cmp
xchg
ljmp
pop
into
add
jo
push
insl
jmp
dec
jmp
lods
fildl
adc
adc
xor
push
mov
loop
push
dec
or
fidivs
out
sbb
out
test
cs
iret
out
push
cmp
sbb
ljmp
xor
push
xchg
fucomi
lea
pop
in
push
jg
fisubrl
ss
test
and
xchg
xchg
shrb
mov
mov
dec
pop
loopne
xacquire
cld
mov
mov
jp
popa
jl
pop
shll
das
ss
push
loopne
lock
pushf
add
push
out
subl
les
sub
sub
cmp
xor
test
dec
bnd
sbb
mov
or
daa
rcr
in
lods
jecxz
mov
and
test
or
or
sbb
pusha
mov
cmp
inc
sub
jle
popa
icebp
inc
inc
lods
adc
arpl
xor
push
jo
aad
sbb
fstpt
pop
mov
stc
sub
test
mov
or
ret
fldt
aaa
ds
cmpsl
pop
ret
sbbb
nop
mov
pop
inc
mov
or
push
jb
cmp
xor
mov
shrb
adc
pop
or
movsb
pop
cmp
stos
aam
adc
test
fmul
popf
mov
sbb
and
jg
cmp
push
dec
into
leave
lock
mov
cltd
push
dec
dec
jmp
out
leave
or
icebp
mov
inc
push
popa
daa
daa
jge
xchg
mov
lret
mov
into
sbb
pop
fists
push
enter
add
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
jmp
and
jae
xor
sahf
jo
jo
jo
jo
std
xor
jnp
fwait
test
call
mov
mov
addl
ss
xchg
frstor
pop
mov
mov
xchg
push
adc
pop
dec
xor
aad
mov
jle
jb
mov
cmp
fisttpll
dec
jg
std
pop
adc
sbb
mov
xchg
jne
mov
inc
cmpsl
mov
fdivp
inc
hlt
jbe
pop
jg
push
incb
jno
and
mov
mov
ljmp
sub
jle
jmp
add
and
inc
jmp
dec
cld
cmp
out
movsl
jl
dec
jmp
outsb
je
pop
sub
add
mov
and
stos
sub
jmp
sub
scas
add
xchg
xchg
cmp
jne
cld
pusha
pop
das
popa
jle
jle
and
push
test
adc
xchg
xchg
mov
scas
popf
mov
rorb
cmp
xor
pushf
xlat
test
add
add
aam
xchg
ficoml
aad
in
loope
sub
push
mov
mov
rcr
jb
pop
addr16
divl
mov
cmpsb
xor
push
bound
or
rclb
mov
mov
test
mov
add
adc
je
stos
clc
lcall
scas
cld
push
clc
incl
mov
jp
rcrb
xchg
cld
out
jbe
or
int
divl
leave
pop
stos
loopne
inc
sbb
sarb
mov
stc
sbb
aam
push
int3
outsb
popf
lods
pop
fst
mov
mov
popa
cmpsb
data16
cmpsl
push
imul
loope
stc
cmpsl
dec
cli
adc
dec
sti
xor
lods
jecxz
cmp
pop
mov
inc
pop
sbb
or
pop
loope
jl
ja
loopne
xchg
jbe
inc
hlt
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
jmp
cs
add
popa
push
in
jno
imul
jo
jo
jo
jo
push
jle
jl
inc
cmp
pop
pop
cwtl
pop
or
inc
mov
sarl
je
std
fists
scas
or
mov
sub
push
sbbb
adcl
mov
xchg
inc
repz
shlb
xlat
add
aas
xchg
adc
clc
bnd
outsl
or
push
cld
add
scas
popf
fwait
sarb
cwtl
sub
out
pop
inc
mov
jmp
jns
mov
push
sub
shll
outsb
mov
cmpsl
or
push
lods
adc
sbb
adc
and
jmp
jl
push
into
dec
inc
inc
xor
loope
and
loop
subb
jg
dec
je
movsb
push
in
into
inc
aam
push
xchg
test
daa
fcomp
cmpsb
imul
dec
and
pop
lods
add
xor
cmp
ds
int
in
xchg
push
dec
mov
pusha
dec
das
leave
jae
add
adc
jg
in
sub
inc
iret
insb
sub
jb
jle
lret
dec
fsubs
add
out
enter
sbb
out
aaa
adc
daa
jb
loope
movsl
enter
popa
mov
fmul
cmc
daa
rcrl
mov
mov
sbb
add
leave
xor
iret
mov
icebp
and
scas
and
test
push
lahf
sub
push
test
push
out
inc
les
xchg
and
cwtl
push
in
lods
addr16
arpl
push
adc
cli
mov
in
icebp
xchg
mov
push
cmp
pusha
pop
fnstcw
out
data16
rorb
pop
out
jmp
mov
out
loope
daa
jno
sahf
bound
cli
sub
dec
push
out
shr
jmp
sbb
fcmovnu
faddl
andb
dec
jmp
ret
inc
in
dec
roll
ret
sub
sti
enter
cmpsb
cmp
or
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
push
movzwl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
mov
mov
xor
push
mov
or
xor
sbb
mov
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
jmp
imul
cmp
jae
jl
dec
mov
jo
jo
mov
push
mov
xlat
mov
test
sbb
cltd
movsl
cltd
adc
lahf
pop
jnp
jg
add
imul
mov
dec
mov
inc
xchg
fwait
xor
inc
xlat
add
cmc
mov
insb
in
inc
pop
push
and
add
js
in
and
jge
pop
or
push
adc
imull
ljmp
sub
adc
lea
shrl
js
cmp
fwait
int
mov
ret
arpl
loop
int3
stos
add
mov
push
xchg
fcoms
test
add
lahf
jp
xor
push
inc
jb
iret
inc
xchg
ret
push
mov
popl
jb
adc
in
sbb
addr16
cmc
fsub
xor
inc
jb
jns
inc
and
mov
fdivrl
sub
aad
xchg
iretw
repnz
imul
out
inc
dec
mov
mov
cli
sub
add
cmp
call
movsl
loope
fcoms
pop
call
inc
in
sub
dec
popa
out
ret
push
insl
add
and
fnstsw
sub
lds
nop
inc
push
icebp
add
cmp
loope
gs
pop
sub
test
inc
xchg
sbb
dec
clc
inc
sbbl
rorb
cmp
cmp
jecxz
lret
pop
outsb
mov
pop
lahf
pop
sbb
popa
or
jmp
xor
lret
outsb
xlat
cmp
fiaddl
lret
sub
xchg
and
in
daa
mov
ret
xorb
dec
mov
cs
cmp
lds
jge
loope
call
scas
lret
loopne
imul
sub
es
push
insl
cltd
enterw
mov
loopne
jmp
cltd
inc
sub
stos
movsl
push
stc
adc
mov
stc
gs
in
xor
jg
dec
add
test
lods
out
mov
outsb
push
data16
add
pop
xlat
mov
dec
hlt
stos
jo
xchg
test
shll
pop
mov
cmpsb
int
push
imul
push
nop
sub
orb
stos
cmpsb
pop
inc
jae
imul
das
sub
andb
mov
or
fidivrs
mov
fucomip
inc
push
mov
sub
mov
push
cmc
aad
lcall
mov
divl
push
jle
repnz
sbbl
add
cmp
ja
push
jmp
jmp
mov
ja
push
aas
xchg
out
jle
movlps
jle
jo
push
test
push
xchg
cmp
mov
mulb
fldt
sub
outsl
adc
je
jns
div
lcall
mov
lods
movsl
add
push
mov
mov
pushf
sub
push
jb
mov
popf
inc
daa
mov
test
sub
addb
popf
outsb
cmpsb
jmp
adc
mov
mov
and
addb
xor
aaa
xchg
cmp
push
pusha
sti
loope
ds
fs
imul
push
inc
cmp
jp
sub
int3
sub
jmp
push
xor
out
cmp
pop
mov
leave
mov
dec
cwtl
and
jecxz
adc
mov
test
push
or
shl
enter
inc
jnp
pop
jae
fadds
mov
or
or
cmp
jnp
sub
sbb
add
icebp
cmpl
int3
adc
mov
sub
scas
fdivrl
jge
jne
and
pop
pop
scas
dec
cmp
dec
fcmovnb
mov
mov
loopne
mov
push
mov
jns
adc
mov
aas
psrlq
fisubrs
push
stos
jle,pn
mov
fldl
sbb
lods
xchg
add
adc
imul
push
sti
jns
cmc
inc
sub
imul
out
jp
push
cmp
scas
das
jmp
push
sub
sbbb
xor
fwait
mov
fistpll
pcmpeqb
lds
sahf
push
inc
or
gs
cli
lret
mov
mov
arpl
xor
lret
mov
std
jo
jp
pop
xchg
js
add
imul
pop
mov
xchg
adc
jecxz
ret
das
out
xchg
adc
or
lret
js
push
jnp
inc
loopne
pop
jnp
imulb
loop
jno
pop
aad
out
shr
cmc
out
dec
add
or
ljmp
cmp
fisubrs
push
mov
outsl
cmovb
mov
dec
arpl
ret
scas
pushf
test
xor
sub
std
sub
sub
iret
mov
push
sbb
je
cmp
cmp
push
aaa
in
aaa
shl
sbb
push
jmp
sbb
ret
mov
popf
xchg
adc
jne
sub
mov
adc
sub
jae
push
xchg
roll
push
lret
jge
sahf
imul
pushw
adc
notl
lods
fldl
xor
mov
mov
xor
add
jmp
fistl
loope
lds
add
out
and
pop
jo
mov
outsb
xor
repz
jae
and
adc
pushf
pop
push
test
jno
push
int
outsb
pop
mov
insb
jl
es
mov
or
adc
sarb
clc
mov
inc
aad
jl
cmp
adc
inc
add
jmp
fmull
push
jo
inc
insl
ficompl
sbb
rcr
call
imul
out
add
aaa
push
inc
sub
xor
sarl
hlt
xchg
jb
push
sub
out
dec
lret
pusha
xchg
out
mov
loopne
out
push
leave
inc
insb
sub
orb
jb
jg
notl
push
loope
fisubs
mov
les
mov
js
les
outsb
sbb
arpl
lahf
push
lods
sbb
fisubl
jo
out
xor
sbbb
sbb
movb
and
xchg
jp
jmp
sub
jb
jmp
mov
pop
push
outsb
dec
cmp
bound
mov
gs
sub
divb
push
imul
xlat
ficomps
sahf
int
jo
jmp
or
mul
cmp
add
sbb
ret
inc
or
es
iret
scas
push
adc
aaa
adc
stc
add
xchg
bound
into
jge
in
lahf
push
inc
ret
pop
add
rcll
push
jmp
xor
sbbl
jg
sub
loop
mov
push
dec
test
mov
xor
jp,pt
negl
dec
and
mov
popf
xabort
push
pop
ljmp
stos
push
adc
push
sbb
and
jne
push
fidivs
int3
out
jecxz
pop
fs
cmpsl
int
sub
xor
into
fdivrl
cmp
nop
push
rclb
es
pop
int
cmp
jae
cwtl
adc
fisubl
mov
cld
hlt
dec
jmp
jne
out
push
ret
scas
das
aad
or
insl
sar
xchg
adcl
adc
cmpsb
sti
adc
bound
push
cmc
pop
jns
lds
sub
push
adc
mov
jge
mov
mov
add
xchg
cmp
adc
loope
or
pop
mov
cli
ret
idivl
movsl
push
int3
in
sbb
adc
mov
fisubrl
sarl
iret
lret
cwtl
out
sub
outsl
fimull
mov
mov
mov
std
mov
mov
and
adc
sar
mov
cmp
je
add
xor
imul
mov
xor
add
jmp
jecxz
fcoms
out
icebp
icebp
pop
xchg
aaa
aas
fwait
sbb
cmp
jo
jle
jo
out
mov
rolb
rcll
fs
in
jns
cmp
into
lcall
cwtl
and
inc
xchg
mov
fadds
mov
mov
sub
jg
dec
mov
lret
fistl
jle
in
dec
scas
enter
test
clc
sbb
mov
repz
nop
xlat
sti
stc
and
sahf
es
rcrb
sti
inc
aas
jp
xor
and
pop
in
shlb
mov
and
ja
jecxz
cs
mov
xor
mov
xor
gs
cmpsb
nop
xchg
xchg
fdivr
push
aam
fldcw
xorb
mov
add
jo
clc
sbb
mov
pop
jne
xchg
fs
call
mov
mov
nop
fsubrl
stc
fwait
test
mov
add
mov
sbb
sarl
xchg
sub
or
bound
das
push
lret
push
clc
and
sbb
aad
cs
xor
inc
inc
xchg
mov
rolb
adc
mov
sbb
cmpsw
mov
test
inc
or
cmpsl
enter
call
add
sti
loopne
cmp
push
lcall
stos
incl
push
data16
es
mov
mov
xchg
adc
jb
pop
cmp
stos
cmpsb
sti
mov
or
add
cmp
lret
out
ds
movb
inc
adc
xor
dec
inc
pop
das
push
lds
hlt
std
or
lock
cmp
xor
xor
orl
daa
lock
and
sbb
fisttpll
cmpsl
cmpsb
in
and
xchg
inc
xor
mov
in
mov
mov
ret
sub
aad
push
and
shrl
or
scas
and
push
test
push
jge
scas
xor
sbbl
push
cmpsl
add
popf
inc
adcb
xor
mov
leave
into
xor
aam
clc
adc
test
aas
pop
inc
hlt
lods
sbb
adc
aas
or
je
sub
test
stc
out
int
sbb
pop
inc
xchg
fnsave
push
jnp
dec
stc
popf
pop
shrb
fs
adc
pop
lods
xchg
cwtl
mov
cmp
jmp
ds
arpl
out
xchg
dec
mov
add
aaa
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
adc
mov
addl
mov
adcl
xor
adc
mov
andl
add
movl
movzwl
mov
orl
movb
not
lea
mov
or
jmp
out
out
jno
in
or
and
adc
cmp
ret
dec
xorb
jge
jecxz
shlb
or
push
jp
mov
jmp
push
movsb
xchg
add
pop
xchg
repnz
shrl
and
or
adc
cmp
pop
xchg
dec
push
or
cmp
dec
insl
jae
push
or
and
sbb
int
nop
mov
mov
rol
ret
nop
js
cli
push
sti
sub
lret
pop
push
mov
push
loopne
xor
xchg
or
icebp
std
loopne
mov
hlt
int
repnz
lock
jns
sbb
adc
xchg
push
mov
pop
mov
inc
and
movsl
je
test
outsb
nop
lret
or
mov
mov
dec
insb
adc
gs
shll
mov
jl
pop
ret
cwtl
sub
iret
je
push
int3
loopne
stc
push
repnz
rcll
xchg
imul
cmp
xor
jmp
aaa
xchg
cmp
sti
sub
pushf
mov
push
es
popf
cmp
out
dec
push
sub
aad
mov
mov
jae
or
sbb
cltd
xor
fsubs
and
cltd
loopne
or
xchg
jle
cmpsl
add
pop
and
or
pop
das
lahf
loop
aam
cmp
dec
in
repnz
andb
xchg
into
pop
xchg
dec
jecxz
cld
stos
mov
sbb
in
fimuls
aaa
jg
add
ljmp
inc
scas
out
cmp
cmp
or
mov
push
sbb
stos
mov
mov
push
sbb
mov
inc
push
add
psubsw
sbb
addr16
add
sbbl
sbb
ret
or
push
clc
inc
mov
aaa
or
fimull
popf
imul
incb
je
push
mov
fists
data16
mov
data16
loopne
fwait
mov
lock
out
mov
mov
fisubrs
mov
gs
xchg
ss
mov
inc
fsubrl
ret
outsl
mov
dec
out
icebp
jnp
add
xor
adc
mov
sbb
jb
adc
inc
test
adc
sub
fsub
out
test
adc
pushf
mov
idivl
inc
aaa
pop
lods
xchg
push
mov
xor
inc
jp
stos
add
xchg
pop
add
pop
adc
inc
inc
mov
repz
push
lret
nop
inc
je
outsb
mov
ret
mov
das
in
inc
push
cmp
sbb
sub
jmp
mov
add
xchg
mov
js
dec
imul
dec
mov
enter
push
adc
movsl
mov
xlat
mov
sbb
cld
cld
sub
jl,pt
xor
pop
out
pusha
jne
add
mov
mov
bound
or
adc
mov
subl
xor
sub
andl
mov
negl
movl
jmp
fists
cltd
mov
addr16
push
and
or
push
jo
cmp
lret
insb
sarl
xor
scas
cmpsl
mov
xor
call
shll
sbb
adc
inc
pop
std
jno
cmpsl
xor
push
mov
cwtl
sbb
sub
jns
loope
sbb
xchg
in
imul
jns
ljmp
ret
push
push
push
cmp
fst
mov
cld
dec
repnz
aam
cmc
sbb
loopne
mov
dec
dec
or
in
pop
inc
mov
xchg
stos
into
test
mov
jae
cmp
addr16
push
pop
xor
dec
jecxz
enter
or
pop
icebp
stos
jo
dec
inc
sbb
dec
es
stc
test
add
push
dec
mov
cmp
repz
das
inc
outsl
xor
push
sti
test
mov
xchg
fcoms
popf
in
call
ret
xor
dec
fldenv
shl
pop
in
lret
and
sbb
jl
ljmp
andl
mov
dec
cmpsb
inc
mov
mov
call
outsl
out
inc
enter
lds
push
gs
jnp
pop
insb
shrl
cmp
movsl
jnp
push
ss
xchg
lods
imul
xchg
cmpsb
xor
das
test
or
fmulp
aam
cltd
jmp
mov
sub
shlb
arpl
mov
dec
or
nop
rolb
adc
sub
lcall
sbbl
mov
enter
imul
test
ss
and
xor
sub
stos
pop
adc
mov
aaa
test
inc
ss
and
jo,pt
out
rcll
add
xchg
filds
pop
xor
scas
dec
lret
in
cmc
leave
rcl
dec
jae
jecxz
lret
push
fs
sub
inc
or
dec
cltd
mov
and
aam
inc
push
inc
xor
push
addr16
lea
loopne
add
mov
insl
xchg
dec
push
fstpt
pop
adcl
push
sar
fstpl
jb
mov
xlat
cmc
sub
fisubrl
arpl
movl
jle
sub
dec
jmp
aas
mov
mov
call
push
movsl
cmpsl
sbb
stc
into
xchg
aad
mov
dec
pop
adc
stos
stc
clc
in
insb
mov
fdivrl
xor
push
xchg
adc
sbb
and
cmpsb
andb
sti
repz
add
fcomip
repz
arpl
lods
leave
shl
ret
enter
add
roll
and
cmp
jb
jge
dec
xchg
adc
test
mov
jmp
xorl
mov
outsl
imul
lds
pusha
dec
push
popa
cmpsb
ljmp
stc
add
sub
xchg
mov
mov
fadd
es
xor
outsl
lret
popa
popf
into
mov
dec
hlt
in
xchg
outsl
cmc
data16
jp
filds
sbb
xor
ja
xchg
xor
mov
fs
popa
push
sub
cmpb
imul
clc
mov
mov
push
xor
mov
adc
mov
add
movl
jmp
mov
movl
mov
movl
jmp
jge
lret
in
icebp
ss
in
sbbb
jo
jge
jo
test
pop
arpl
xchg
inc
lcall
iret
adc
loope
pop
lea
sbb
rol
adc
daa
icebp
jge
sub
dec
inc
jecxz
mov
cli
clc
aad
mov
outsb
ss
pop
addr16
orb
jnp
mov
fcomp
lea
cmp
fildl
lods
cs
xchg
insl
cmp
addr16
mov
mov
iret
scas
pop
cwtl
mov
js
push
insl
xor
imul
popa
sqrtps
pusha
fstl
jecxz
xchg
mov
inc
inc
pop
mov
dec
gs
mov
jmp
outsb
lcall
xlat
xor
jbe
sub
and
std
pop
xor
adc
addr16
mov
iret
adc
mov
xchg
iret
and
bnd
mov
clc
rcrl
xchg
or
cld
ret
lods
sbb
mov
clc
jns
dec
stos
idivl
mov
jae
or
or
sub
jecxz
fld
iret
pop
aam
loop
pop
fistpll
mov
negl
out
or
subl
popa
xchg
push
or
lock
in
inc
adc
arpl
in
fldenv
pusha
adc
arpl
push
divl
mov
pop
dec
sbb
orl
lods
or
ret
jne
mov
xlat
xor
add
mov
ds
or
sti
aad
add
mov
aad
dec
cmp
repz
mov
popa
jo
xchg
and
leave
sarl
cmpsl
sbb
int3
xchg
lret
sub
mov
xor
pop
cld
pop
es
mov
dec
dec
sub
setle
push
sub
xor
mov
pop
jb
mov
ss
mov
jb
xchg
ja
add
loopne
or
rcrl
xchg
int
fcmovne
xchg
movsb
sub
outsl
repz
movsb
sbb
imul
pop
pop
jno
neg
loop
outsb
push
call
and
movsl
mov
adc
or
cmp
inc
fldenv
push
add
pop
sub
cwtl
idiv
sbb
call
and
sbb
inc
push
lea
sbb
ret
test
mov
rorb
or
cmp
lret
add
stc
jl
mov
ljmp
mov
aas
adc
push
add
jmp
lods
pop
push
xchg
inc
and
popf
mov
adc
cmp
and
movsl
out
rcrb
loopne
lods
mov
bound
push
push
aam
xor
aaa
and
sub
xor
xchg
or
mov
notl
xchg
fst
jl
sbb
jp
pop
fucom
sub
test
mov
popf
jg,pn
adc
pushf
push
jo
jnp
pop
movl
jmp
cmc
sbb
lods
xor
shl
mov
rcr
outsb
loope
aas
xor
pop
xor
fiadds
movl
jmp
leave
daa
rclb
repnz
jecxz
cmpsb
dec
syscall
rorl
jo
jge
jo
fucom
push
add
cmc
pop
out
outsl
and
ljmp
aaa
push
inc
ret
or
sbb
sbb
ljmp
pushf
xchg
xchg
ficompl
add
lds
mov
mov
xchg
sbb
inc
xor
insl
or
sbb
dec
push
rcl
std
outsb
inc
movsb
sti
adc
push
hlt
mov
aaa
call
sbb
pop
mov
cli
xor
inc
cmpsb
cmpsl
jne
mov
loopne
scas
sub
mov
push
cld
pop
dec
in
jo
mov
int3
xchg
ret
test
sub
pop
mov
les
xor
scas
cmp
and
ret
fsub
xchg
ds
dec
hlt
push
xor
aad
cmp
mov
adc
or
lret
jp
iret
fs
jne
add
and
imul
sbb
outsb
iret
out
outsb
mov
xor
test
iret
push
push
cld
or
jg
adc
jl
pop
scas
mov
jne
in
daa
rolb
cltd
lret
add
pop
es
scas
iret
mov
mov
fs
rcr
jnp
sbb
push
mov
ljmp
sbb
pop
xor
pop
mov
daa
test
in
sbb
dec
cmp
and
stos
mov
pop
cwtl
js
push
sbb
movsb
and
pop
mov
lock
std
jb
sub
imul
push
jne
lahf
inc
cld
lahf
jbe
dec
ret
push
xor
dec
sub
jnp
xchg
sub
lds
mov
xchg
cmp
and
daa
cmp
xor
adc
pop
subl
in
test
dec
es
mov
clc
fistl
add
or
sbbl
test
xor
mov
mov
inc
sub
loope
and
pop
js
inc
or
sub
outsl
dec
sub
ds
dec
rcr
hlt
and
sub
sub
mov
sbb
nop
and
push
imul
aas
mov
cmpsb
sub
shrb
or
cmp
mov
mov
cmpsb
pop
das
push
mov
test
mov
cmpsb
std
sub
adc
mov
stc
ljmp
xlat
mov
and
dec
cmpb
mov
push
fbstp
iret
test
sub
jmp
sub
mov
jg
sahf
cmovp
push
lea
dec
stos
imul
add
add
mov
or
cmp
push
mov
nop
nop
cmp
les
inc
scas
jge
cmp
jmp
stc
and
psllw
lcall
push
cwtl
mov
fnstsw
scas
shlb
lcall
lret
mov
aas
adc
sub
cltd
ficomps
clc
ret
xorb
xor
andb
fsubrs
mov
in
ret
gs
dec
mov
jns
xchg
bound
ja
pop
xchg
dec
pop
out
xchg
dec
sti
inc
add
adcb
jmp
adc
mov
jmp
push
jge
add
jb
inc
sbb
movsl
enter
and
jo
jge
jo
fcompl
pop
sbb
into
addl
cmp
stos
inc
imul
orl
cmp
cld
jecxz
rcl
jne
push
pop
loopne
scas
xchg
or
add
dec
push
lret
mov
hlt
in
ret
sbbl
icebp
movsb
dec
mov
or
dec
push
adc
fisubrs
into
imull
sahf
xchg
inc
rcrb
lahf
seto
aam
fsub
adc
xchg
pop
je
test
call
leave
test
adc
jnp
pop
mov
mov
or
outsl
pop
push
add
xor
clc
fistpll
mov
xchg
popf
sti
cmovnp
xor
mov
add
dec
mov
inc
jle
mov
icebp
add
xor
mov
mov
inc
xchg
mov
fstpt
pop
cmp
jae
sbb
sub
jge
jg
ret
mov
popf
pop
loopne
or
les
xchg
je
decb
lret
iret
and
cmp
aam
cmp
into
and
popa
insb
ds
imul
push
mov
fidivl
loope
cmp
enter
cli
repz
xor
out
add
rcll
imul
and
faddl
popf
div
sbb
aam
in
pop
mov
mov
repz
cmpsb
mov
daa
push
sbb
jg,pt
shlb
mov
xchg
xchg
lret
mov
push
imul
xor
mov
gs
jp
or
loop
xchg
in
adc
lods
stc
pusha
push
fld
mov
push
cmp
lods
rcl
pusha
push
push
or
jns
repnz
dec
push
push
xchg
or
pop
cmp
lock
cmp
pop
and
mov
dec
cmp
or
push
mov
sbbl
mov
xor
push
test
xor
aaa
and
shl
xchg
sti
mov
js
cmpsb
xchg
mov
pop
les
adc
pop
cmp
cmp
popf
cmp
in
bound
sbb
pop
dec
push
jle
mov
orb
xchg
xor
fwait
stos
add
out
mov
lds
shlb
jl
cmpl
leave
sti
call
push
lods
pop
cmp
pop
xchg
push
stos
lretw
ds
ret
les
adc
loop
ret
adcb
test
fwait
sbb
jg
mov
in
inc
push
adc
lret
flds
jne
cmp
and
dec
jo
stos
out
mov
inc
inc
inc
data16
arpl
stc
or
mov
jmp
jns
cmp
and
push
aam
cmp
jp
testl
into
addb
pop
inc
mov
xor
add
cmp
movl
je
add
push
adc
push
mov
mov
andl
xor
mov
add
addl
movzwl
andl
mov
sbbl
mov
addl
movzwl
sbbl
xor
addl
jmp
fdivl
dec
rsqrtps
icebp
inc
sub
jno
xchg
sahf
leave
and
cmp
lcall
sub
neg
or
ljmp
ror
push
popa
pop
ret
shlb
xor
test
add
dec
sub
pop
cmp
cmp
out
sbbl
movsl
xchg
xchg
call
sub
dec
roll
hlt
dec
shlb
test
xor
bound
jne
loopne
and
cmp
sub
jbe
shrb
pop
mov
test
pop
and
or
and
cmpsb
inc
daa
add
subl
xchg
addb
shlb
nop
dec
cmp
push
popf
fstpt
xchg
cmpsl
popf
dec
dec
cmpsb
xor
and
dec
xchg
dec
arpl
adcb
jp
test
pop
or
dec
mov
push
icebp
loop
hlt
lea
iret
mov
stos
mov
cmp
pop
dec
ljmp
add
or
int3
lret
popf
ret
sbb
add
cmpl
cmp
loope
xor
cmc
fdivl
cwtl
mov
aam
in
jg
mov
and
xor
cmpsb
out
xchg
lock
push
imul
test
das
gs
aaa
sti
cmp
stc
add
add
pushf
les
sysexit
movsb
test
jmp
clc
iret
negl
push
xchg
push
aas
mov
sbb
insl
subl
je
fisubs
in
int3
std
in
std
andl
dec
fnstenv
leave
rcr
mov
ss
nop
sub
push
ss
insl
lahf
clc
jge
fistps
out
mov
jmp
mov
pushf
jle
int3
int3
jmp
inc
fwait
lret
popa
mov
add
ficompl
jne
daa
jp
push
jbe
dec
iret
cmpsb
ret
or
pop
xor
xor
mov
inc
xor
lods
lds
stc
push
inc
iret
shrl
adc
scas
and
push
imul
xchg
pop
int
es
lahf
popa
xor
aam
mov
jne
push
gs
loop
jno
js
fistpll
ficoml
lahf
or
lds
fstpt
jg
imul
repz
push
movsl
das
push
cmc
test
cwtl
mov
int
fwait
cmpsl
enter
dec
std
mov
cmp
inc
sub
xchg
dec
pop
out
sbb
add
xor
mov
test
xchg
sub
out
jnp
xchg
andb
repnz
mulb
pop
cmp
mov
das
scas
adc
fxch
cmp
add
pop
sbb
sbb
icebp
mov
in
out
testb
mov
cmpsl
or
mov
sub
insl
or
loope
enter
dec
lods
push
jmp
push
arpl
inc
inc
push
ret
sbbb
fwait
inc
repz
inc
data16
jo
scas
push
popf
aaa
pop
adc
jb
inc
testl
xchg
xor
ret
cli
fsub
gs
xor
cmc
mov
sbb
lods
roll
orb
add
pop
push
add
mov
movl
mov
jmp
or
daa
arpl
fisttpll
lock
xchg
jo,pn
cmp
mov
loope
pop
sub
push
and
pcmpgtb
push
insb
test
insl
pushf
push
rolb
scas
mov
adc
mov
daa
pushf
mov
popa
scas
sbb
mov
mov
push
pop
mov
ja
lret
pop
iret
push
cwtl
adc
inc
out
clc
in
xchg
or
and
or
pop
or
repz
loop
push
icebp
cmpsl
sub
mov
xor
ljmp
jae
and
adc
xchg
call
pop
sbb
out
add
pushf
adc
mov
notl
mov
or
rcl
shll
fnstenv
inc
mov
inc
stos
jns
xchg
jl
mov
jno
add
dec
lahf
mov
out
mov
shrl
inc
and
ss
xor
adcl
ja
sub
call
cmp
out
lret
imul
xor
mov
pusha
mov
pop
or
add
aad
data16
add
pusha
mov
lahf
mov
mov
dec
imul
inc
jmp
fwait
xlat
hlt
jp
sbb
mov
aam
fldt
push
cmp
in
inc
sbb
jb
es
mov
outsl
test
jbe
orb
movsl
push
sbb
push
adc
push
ret
fisttpl
mov
mov
roll
xchg
or
cmovb
push
bnd
and
add
sub
rclb
xchg
inc
or
mov
leave
inc
inc
inc
mov
rcrl
in
lcall
cld
psubd
dec
shlb
sar
jns
pop
and
std
dec
push
sbb
pop
cmp
add
jmp
mov
pop
jg
insb
out
jb
or
xor
mov
add
or
cmc
lock
xlat
movsl
and
mov
cmp
call
fst
jle
or
insb
mov
pop
cmpsl
daa
rcrb
les
add
jo
lcall
jp
push
jmp
in
inc
pop
int3
mov
imul
adc
mov
out
adc
ret
dec
gs
or
xor
sub
inc
daa
mov
ds
xor
lds
ret
lcall
sub
adc
add
sub
mov
cmpsl
cmpsl
dec
outsb
add
jo
mov
pop
add
xor
gs
insl
push
jo
jb
push
push
dec
or
mov
or
loope
or
xchg
xlat
adc
and
xor
repz
jp
mov
pavgw
cld
div
addr16
jg
inc
rolb
add
test
pop
pusha
sub
ret
dec
inc
pop
xchg
movsl
mov
mov
orl
aaa
xor
aas
insl
ret
and
cmpsb
decl
rorb
test
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
jmp
xchg
roll
icebp
lods
add
rcll
les
jo
cmp
iret
inc
jmp
nop
cmc
push
mov
jmp
inc
pusha
mov
xchg
pushl
inc
push
adc
add
xor
filds
mov
mov
mov
push
aam
xchg
je
add
int3
pop
xchg
ljmp
pushf
mov
mov
lods
jae
mov
ja
insb
cmp
mov
push
fsubl
sub
cmc
loopne
hlt
jmp
lahf
mov
adc
sub
and
sbb
test
inc
pop
loop
mov
mov
fdivr
out
jle
lods
jp
mov
cmp
pop
leave
into
inc
cmp
not
sub
sub
inc
enter
cmpsb
cwtl
mov
dec
lods
mov
testb
movsb
inc
out
popa
adc
pop
add
pop
daa
rcl
rcll
stc
pop
repnz
rorl
xor
cwtl
jne
out
hlt
pop
jecxz
push
inc
sbb
push
sbb
jo
in
inc
pop
mov
pop
push
and
lcall
inc
xchg
popa
jmp
icebp
mov
pop
outsl
test
pop
pop
popa
jns
push
mov
out
sbb
mov
clc
cmp
rcll
lret
cs
cmp
and
nop
mov
pop
outsl
add
xchg
pop
repz
or
jno
inc
shlb
or
out
in
mull
adc
mov
les
div
and
xchg
icebp
in
xchg
xchg
popa
arpl
lret
ret
popf
sub
call
sub
xchg
loope
push
dec
daa
inc
mov
pop
leave
mov
and
cld
clc
loope
inc
fstps
outsl
xorb
call
bound
xchg
jns
lods
sbb
dec
adc
jmp
pop
icebp
in
mov
lret
lock
jno
aam
dec
fldt
mov
xchg
sbb
into
lock
loopne
repnz
dec
imull
decl
pop
cmc
sub
xchg
out
out
push
mov
jp
mov
adc
adc
xor
dec
fnstenv
cmp
or
push
xchg
pop
mov
cs
dec
into
or
lods
push
fcoml
iret
or
lods
add
add
jbe
cmp
and
push
rolb
inc
jp
js
cmp
xor
bswap
clc
sbb
pop
mov
and
popa
pusha
mov
sbb
addr16
pop
jne
les
jae
mov
test
add
jne
test
or
sub
pop
bound
mov
push
repnz
nop
loopne
out
or
fistpll
mov
fistpl
mov
mov
jl
addl
out
or
jmp
push
in
fcmovb
je
push
push
jp
adc
sub
push
nop
sub
cmpl
leave
ret
push
mov
push
mov
mov
sbb
jmp
pop
scas
sbb
push
pop
mov
frstor
jo
stos
jle
jo
lea
rcrl
mov
sub
cmp
scas
inc
inc
lret
xor
push
in
dec
cmp
jo
nop
pop
cli
mov
je
push
ss
outsl
mov
dec
dec
test
aad
bound
lcall
cmpsl
test
rdtsc
pop
std
fwait
inc
jmp
pusha
inc
sub
lods
inc
scas
inc
pop
dec
lods
daa
sbb
adc
xchg
mov
iret
sbb
push
roll
dec
sti
pop
outsb
fiadds
movsb
xchg
ss
inc
int3
pop
ret
sub
dec
add
sbb
movsb
jno
addr16
dec
cltd
sti
adc
or
dec
dec
pop
and
subb
dec
mov
hlt
push
pop
mov
frstor
dec
mov
outsb
aam
repnz
imull
or
and
or
push
xor
pop
cmp
xor
mov
nop
xchg
in
das
aam
xchg
xor
test
pop
mov
hlt
sbb
ja
push
dec
mov
mov
sbb
mov
ja
lock
push
xor
dec
or
cmp
sub
aaa
les
movsl
andl
jle
jg
in
or
push
push
adc
enter
fstpt
dec
pop
sub
xor
push
xor
jmp
or
hlt
imull
xchg
in
adc
pusha
inc
cmpsb
cmp
pop
fiaddl
mov
es
scas
push
dec
jb
mov
dec
sub
xchg
dec
xor
fs
mov
leave
fstp
mov
lods
sub
ret
pop
and
call
lods
mov
sub
and
push
fwait
ja
iret
in
popa
and
and
inc
lods
mov
callw
inc
mov
jo
icebp
sub
xor
pop
xchg
xchg
es
mov
cltd
mov
inc
and
clc
lods
mov
push
aaa
stos
push
pop
adc
shr
out
shlb
fstps
add
scas
icebp
sub
mov
inc
xorb
dec
movsb
sub
rcll
cwtl
pop
sub
mov
aas
lret
clc
mov
leave
sub
stos
lahf
inc
jb
aaa
loop
sbb
push
adc
jle
jp
test
xorb
dec
adc
addr16
mov
sbb
mov
xor
stos
les
sbb
lea
mov
pusha
cs
mov
or
dec
dec
adc
movzwl
and
mov
jmp
ja
and
dec
xchg
mov
dec
xor
jo
pop
push
push
call
jo
fbld
sub
das
adc
fdivr
inc
mov
out
lods
das
inc
in
shlb
ds
jnp
insl
xchg
lcall
cltd
not
out
dec
sbb
xchg
inc
cmp
xchg
sub
fisttps
xlat
mov
mov
jo
insb
inc
cmp
scas
daa
xchg
lret
inc
mov
lea
mov
es
sahf
pop
push
loop
jl
into
push
and
jae
imul
fdivs
add
js
clc
adc
xor
pop
or
movl
pusha
mov
ret
pop
xchg
and
xchg
xchg
add
insl
or
jne
xchg
loopne
mov
out
js
data16
add
dec
add
mov
scas
cwtl
mov
mov
shl
mov
sbb
xchg
sub
jae
int
mov
clc
outsb
cld
cld
into
jmp
xlat
testl
mov
jo
inc
pop
jns
cmp
icebp
divb
sbb
mov
push
pop
call
repz
repz
xor
adc
fcmovnbe
inc
add
clc
imull
xor
data16
ss
mov
in
pop
fistl
arpl
inc
fsubr
cmp
adc
cs
cld
mov
std
or
fldl
adc
enter
push
push
shrb
test
icebp
cmc
mov
sti
sbb
faddl
sub
sti
int3
addr16
movsb
mov
dec
frstor
adc
movsb
and
aad
addr16
add
xchg
scas
dec
loopne
xor
cmc
fisubs
dec
mov
add
push
xchg
sbb
xor
adc
pop
inc
xchg
lret
in
ljmp
jns
gs
es
ss
or
mov
lock
test
jmp
or
inc
ss
adc
frstor
call
into
mov
ss
xlat
imul
pusha
add
call
rol
add
inc
pushf
and
mov
mov
lds
pop
loop
je
adc
mov
cmp
adc
xor
dec
sub
pop
repnz
jg
arpl
test
test
out
loop
or
pop
push
pop
sub
movsb
jge
ret
shrb
xchg
and
xchg
and
xorl
jle
and
lods
pop
popa
outsl
out
in
ret
sti
and
inc
sbb
dec
mov
inc
clc
xor
jnp
add
movl
and
mov
sbb
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
call
xor
xor
dec
mov
jmp
mov
add
xor
and
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
jmp
xchg
imul
lea
jle
jo
xor
add
mov
mov
adc
rcll
fsincos
scas
shrb
mov
notl
scas
pop
bound
pop
inc
arpl
mov
into
stc
cmp
loope
inc
iret
xchg
mov
mov
leave
daa
xor
movsb
add
clc
push
je
fdivp
fs
pop
xchg
mov
notl
mov
in
lock
jg
test
jae
aas
in
jp
in
sbb
loope
pop
lahf
sbb
dec
test
pop
jae
scas
inc
ret
pop
and
shr
adc
cs
data16
add
xor
not
repz
in
mov
and
pop
mov
rcr
pop
mov
jmp
addr16
loop
push
adc
inc
jg
stos
jmp
inc
xchg
cmpsl
pop
mov
repz
sbb
lods
fbld
pop
loope
xchg
cmpsl
loopne,pn
test
std
mov
sub
mov
pop
jb
in
out
ds
adc
xchg
pop
pop
xlat
movsl
pop
cli
incb
cmp
arpl
jb
cli
adc
pop
mov
outsb
call
scas
mov
int3
jg
mov
cmp
test
movsb
gs
fcoms
loop
out
popa
pop
jmp
sub
clc
bound
pop
imul
adcb
cli
pop
sahf
and
test
jle
cwtl
mov
lods
inc
or
mov
push
inc
in
mov
cmp
sub
adc
and
test
or
das
testb
into
xor
jo
pushf
fcompl
pop
jp
pop
and
or
cld
push
xor
pop
bound
inc
xor
jecxz
shlb
aad
pop
cmp
mov
movsb
call
jnp
test
lds
out
test
jae
jle
cmpsl
cmpsb
fmul
loope
jp
sub
outsl
xchg
outsb
push
xlat
dec
jp
jo
push
lret
je
push
push
push
xchg
mov
jmp
repz
pop
push
pop
sbb
add
ret
dec
popf
sub
sahf
scas
xor
shlb
fcomp
movsb
maskmovq
notl
push
movb
iret
fs
test
bswap
mov
pop
push
add
outsl
inc
dec
jmp
jae
cmpsl
jae
mov
pop
and
shlb
cltd
ficoml
std
aas
and
mov
xchg
imul
push
adc
aas
mov
sub
aad
xchg
mull
adc
mov
jbe
jae
xchg
outsb
enter
pop
inc
fsubl
sub
mov
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
addl
movl
mov
mov
adcl
mov
xorl
xor
jmp
fidivl
jle
jne
jb
sub
test
inc
ds
jo
cmpsl
jg
jo
imul
inc
ss
jae
ljmp
mov
mov
jbe
push
jp
lods
add
jbe
mov
mov
or
stos
jbe
das
out
mov
daa
mov
sub
mov
xchg
jne
inc
sarb
cmp
or
orl
pop
aam
mov
call
sbb
pop
xlat
es
icebp
jl
jae
xchg
jbe
push
and
mov
adc
pop
xchg
inc
popf
or
adc
mov
repnz
test
cmpsl
xchg
mov
mov
bound
insl
clc
in
push
enter
dec
rcrl
xchg
iret
mov
push
sub
push
lods
adc
mov
pop
inc
push
in
lret
repz
add
neg
sub
push
ss
jmp
inc
mov
fwait
out
push
push
jl
int3
test
xchg
sub
repz
ja
into
cmp
mov
ja
out
mov
xor
sbb
inc
out
inc
call
scas
outsl
push
sarl
hlt
out
cmp
dec
sbb
movsl
iret
rol
subb
int3
pusha
and
push
fs
xchg
xchg
mov
mov
sbb
mov
inc
pop
pop
arpl
pop
xchg
jno
cli
int3
push
mov
xchg
decl
sub
into
pusha
cmp
sub
mov
mov
push
hlt
lds
and
or
jbe
and
push
ja
loope
dec
push
lcall
dec
inc
jno
push
push
add
add
or
add
xor
push
sbb
mov
or
mov
sbbl
add
adcl
mov
sbb
mov
adcl
mov
subl
mov
or
jmp
out
hlt
arpl
popa
xchg
insl
hlt
pop
xor
mov
cmpsl
jg
jo
pop
addr16
mov
cpuid
jno
out
xor
push
sbb
mov
data16
div
push
imul
sbbl
push
xor
das
sbb
arpl
in
cli
or
sub
inc
insb
fucom
adcb
fidivs
test
lahf
pop
xorl
or
and
mov
dec
jmp
test
adc
push
mov
cmp
mov
or
add
xlat
add
inc
hlt
pop
sub
lcall
cmp
and
lahf
sbbb
xchg
and
xchg
mov
mov
out
js
dec
add
jbe
pop
insb
sbb
sbb
push
shl
aas
imul
cmp
mov
out
dec
out
mov
nop
int3
mov
xchg
dec
nop
adc
sub
in
pop
fidivs
mov
pop
popa
sbb
xor
push
stc
daa
inc
mov
jb
lahf
ds
mov
enter
rcrb
mov
cmp
sbb
xchg
orb
inc
or
imul
out
cmp
jmp
andb
jmp
enter
cmpb
aas
enter
cmpsb
lock
jne
mov
popa
mov
push
sub
cmpb
mov
pop
push
lret
or
out
mov
pop
fucom
mov
rcrl
or
fmuls
jmp
rcl
push
mov
aaa
or
mov
fs
mov
mov
subl
mov
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
xor
add
jmp
jge
gs
gs
sti
ret
pusha
jo
mov
cmp
jo
jg
jo
in
inc
lods
add
mul
jne
mov
ljmp
and
imul
sbb
sbb
dec
pop
in
xor
xchg
xchg
sti
imul
xor
mov
fisttpl
and
imul
mov
mov
loope
ret
dec
add
mov
push
in
jo
dec
pop
daa
and
inc
or
lcall
fxch
xchg
in
mov
pop
aas
dec
mov
xchg
pop
jnp
push
cmpsl
dec
mov
sub
imul
dec
ljmp
inc
je
cmp
sbb
sti
mov
add
hlt
sub
pop
into
push
adc
dec
out
mov
test
sbb
mov
xlat
mov
adc
xchg
inc
popf
push
lea
repnz
mov
and
jns
sbb
arpl
dec
mov
icebp
xchg
enter
insl
pushf
subb
sub
dec
dec
out
pop
mov
pop
fstl
or
ss
xchg
aaa
mov
sub
stos
jns
mov
arpl
push
push
pop
mov
push
lds
mov
repnz
mov
aam
adc
call
or
cmp
js
cltd
pop
pop
pop
mov
pop
cmp
jmp
mov
int
xlat
in
in
loopne
testl
hlt
sbb
xchg
lcall
pop
xchg
call
push
loopne
adc
enter
mov
std
cmpsl
lahf
lret
xlat
sbb
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
adc
movl
mov
sbb
mov
mov
xor
add
mov
sub
mov
sub
mov
andl
mov
mov
jmp
mov
jg
inc
rorl
jae
pop
dec
sbb
cmp
loop
jo
test
rorb
sbb
pop
jp
mov
add
cmp
push
lock
sbb
in
out
aas
rcr
inc
pushf
sbb
push
test
sub
pushl
add
insb
mov
mov
xchg
out
cmpsl
mov
lods
sub
mov
sbb
push
lock
iret
mov
adc
hlt
pop
clc
mov
push
push
imul
mov
lret
scas
add
or
es
cli
sub
inc
test
ret
test
dec
rep
je
das
gs
xor
mov
test
sbb
iret
pop
adc
sbb
sub
jae
stos
int3
pop
fcompl
aad
idivl
jnp
fstpl
cmp
jne
mov
ja
daa
js
call
xor
mov
push
push
jns
and
ds
cmp
into
pop
sbb
add
mov
and
cwtl
sbb
insl
xchg
cmpsb
psrlw
pop
notb
data16
dec
cmpl
jmp
outsb
jmp
jae
imul
add
fdivrl
mov
xchg
sarl
pop
into
xor
test
xchg
xor
ret
fnstcw
or
push
jns
push
ja
jmp
fistl
push
mov
mov
adc
jl
cmp
mov
loope
push
in
jle
pusha
ss
pop
mov
dec
ds
pop
cwtl
or
push
pushf
pusha
cs
xor
lods
cmc
mov
xchg
iret
push
fs
out
sub
shll
pop
mov
sbb
add
mov
insl
xchg
sbb
cmp
shrb
add
mov
mov
jmp
cmp
lock
insb
push
sbb
xchg
xchg
pop
fdivrp
add
mov
outsl
mov
ret
sbb
fbstp
pushf
push
push
push
mov
xchg
cmc
sub
bound
rcl
sbb
xchg
sub
aam
out
fildl
jbe
mov
das
test
insl
imul
jg
sbb
or
sub
cmp
adc
mov
mov
adcl
mov
mov
orl
mov
subl
mov
andl
mov
mov
test
mov
jne
mov
jmp
sub
test
pushf
pop
sbb
jo
jle
jo
sbb
mov
sub
into
fldcw
adc
cmp
add
dec
push
loope
jl
mov
inc
sub
bound
jmp
xchg
js
int
dec
sub
xchg
sub
jb
fstps
insb
sub
pop
sti
lea
popa
add
nop
js
stos
mov
inc
sbb
mov
sbb
add
pusha
push
js
out
fsubrl
add
sbb
out
push
movsb
inc
jge
negb
push
bswap
pop
sub
and
je
add
or
sbbb
dec
stos
mov
popa
mov
sub
aam
cmp
stos
inc
repz
pop
shll
jns
xor
or
fidivs
adc
outsl
outsl
or
mov
fdivr
push
lock
jmp
cs
add
je
and
or
call
inc
mov
inc
sbb
ds
adc
sbb
xchg
mov
pusha
sarl
imul
inc
push
mov
repnz
push
ja
dec
cltd
or
jl
mov
push
outsl
mov
roll
cld
loope
fsubrl
push
inc
cli
test
imul
out
and
insb
ret
xchg
cltd
push
sbb
inc
loop
mov
sarl
push
jb
je
jecxz
jno
outsb
scas
inc
hlt
mov
add
dec
mov
lret
out
mov
lcall
inc
xchg
jno
int
dec
daa
faddl
pop
jecxz
sbb
scas
js
mov
ljmp
popf
push
mov
lret
mov
scas
push
clc
mov
out
xchg
inc
dec
std
ret
dec
cmpsb
jns
mov
xchg
bound
cs
adc
sbb
sbb
mov
add
adc
jecxz
xor
cmpsl
repz
popa
test
cmpsl
scas
dec
pshufw
out
ficompl
fcmovbe
mov
sbb
iret
dec
mov
outsb
sub
sbb
movsl
xor
dec
ja
es
or
mov
mov
xor
leave
data16
and
enter
addr16
sbb
lock
sub
xor
add
leave
ret
push
mov
sub
mov
mov
mov
subl
mov
xorl
movl
incl
movl
subl
mov
push
push
push
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
add
xorl
mov
movl
jmp
inc
jae
pop
sub
jae
and
mov
adc
xor
lds
and
jo
xor
nop
ds
pop
push
stos
sub
into
int3
jno
outsb
enter
inc
out
cmp
sub
cmp
jmp
adc
mov
aam
out
bound
test
cli
or
lods
cmp
inc
or
mov
adc
jecxz
xor
cmpsl
and
in
fdivl
es
sub
adc
pop
dec
testb
mov
jmp
xor
mov
sti
mov
inc
das
enter
jecxz
test
lea
fimuls
rclb
outsl
cli
push
sahf
cwtl
add
dec
mov
jno
addr16
repz
mov
dec
mov
jmp
push
jb
mov
cmp
mov
sub
outsl
sbb
fistps
fs
hlt
push
dec
inc
test
mov
push
add
outsb
mov
inc
cs
xor
mov
jns
inc
adc
push
and
adc
xchg
sarb
out
popa
jl
ja
and
rcl
mov
xchg
jno
and
mov
shrb
cmp
sbb
mov
or
mov
xor
adc
ret
xchg
push
xor
add
outsl
dec
inc
xchg
and
ljmp
stos
dec
aas
or
mov
addr16
push
jnp
sub
push
out
movsb
pop
mov
cmp
cmpsb
inc
xchg
jne
data16
clc
insl
pop
add
mov
andb
xor
cmp
or
mov
push
test
clc
adc
jp
lahf
dec
testl
sub
mov
or
xor
xchg
imul
and
stc
jbe
jl
rorb
stos
cmp
mov
xchg
pop
cmp
cmpsb
mov
sti
imul
pop
subb
mov
lcall
stos
je
int
adc
das
mov
int
mov
push
shrb
loope
inc
test
cmp
mov
insb
es
mov
pop
cmp
stos
sbb
cmp
xchg
outsl
cmp
fimull
xchg
xchg
pop
sub
mov
or
std
push
ficomps
sbbb
int3
rorl
jp
sub
popf
jl
inc
stos
clc
sub
pop
adc
bswap
inc
stos
add
dec
pop
les
jno
sbb
cmp
push
ret
push
cmpsl
adc
aas
push
insl
fcomps
sahf
fistpll
jns
jns
xchg
xlat
push
cmpsl
adc
ds
mov
mov
jne
rorb
shrb
rcl
stc
dec
ficompl
pop
inc
mov
dec
lcall
xchg
mov
popa
test
ss
xchg
fisubrl
cmp
clc
js
dec
mov
insl
shrb
mov
xchg
in
insl
frstor
test
lea
les
fadd
inc
int3
xor
repnz
inc
add
inc
aam
test
test
add
dec
add
add
mov
lahf
popa
sti
arpl
ret
and
jo
icebp
pusha
in
cmp
add
clc
sbb
or
push
sub
ljmp
dec
mov
outsl
lods
in
movsl
xchg
mov
adc
and
mov
or
repz
outsb
mov
xorb
ss
sub
hlt
cmpsl
sub
shll
push
out
movsl
mov
aas
xchg
push
mov
repnz
icebp
clc
mov
scas
test
sub
sub
insb
sarl
or
mov
mov
lret
cli
mov
and
rolb
mov
jmp
mov
push
dec
sub
in
mov
pop
mov
sub
ds
fldl
cmp
outsl
sub
adc
mov
hlt
mov
push
into
insb
add
jle
leave
lcall
cmp
and
ss
inc
xchg
jae
fwait
es
cwtl
mov
adc
iret
hlt
out
gs
pop
mov
pop
movsl
jmp
dec
cmc
das
mov
outsl
fcmovnbe
mov
and
mov
cmpsl
jns
aaa
xor
ljmp
xor
arpl
pop
mov
jmp
push
movhps
dec
cmpsl
ljmp
outsl
cmp
es
jge
or
pop
pop
jl
xchg
inc
mov
sbb
xchg
dec
leave
loop
inc
cli
loopne
add
xchg
ljmp
push
frstor
mov
adc
inc
mov
dec
pop
cmp
fldl
jp
sbb
jp
fsubs
fbstp
pop
push
jp
mov
movsl
out
cwtl
and
into
xor
sbb
sbb
inc
lahf
leave
jae
mov
xchg
ret
mov
iret
js
stc
fnstenv
les
push
ficoml
aad
pop
sub
cwtl
xchg
cld
cltd
cli
and
sub
xchg
sahf
sub
mov
xchg
inc
inc
stos
xchg
adc
std
je
pop
add
sub
lret
pop
out
pop
stos
test
xchg
pop
pop
mov
mov
mov
mov
jge
subl
insl
and
ja
adc
and
insl
orb
sub
xor
mov
outsb
push
push
testl
ss
divb
or
sbb
jp
mov
imul
imulb
sbb
push
shl
ror
out
xchg
mov
push
out
je
pop
and
or
loop
in
in
arpl
cmp
xchg
push
sub
jge
cmp
jmp
adc
test
sub
or
add
sbb
cs
mov
jmp
lods
mov
paddd
sub
cmc
mov
pavgw
add
jle
push
das
push
cwtl
arpl
icebp
iret
pop
testb
xlat
jecxz
lahf
dec
mov
and
fadds
inc
push
ret
add
adc
xchg
dec
jnp
lds
loopne
sub
iret
mov
addl
xor
addl
add
xorl
mov
movl
movb
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
add
orl
mov
adc
jmp
or
rcl
cmp
pop
jns
popa
scas
sbb
int3
test
jo
mov
push
inc
and
fcmovb
and
mov
cwtl
insl
adc
pop
iret
nop
cltd
adc
jmp
hlt
loop
and
adc
jecxz
push
jp
xchg
in
jno
add
inc
push
dec
mov
test
fimull
mov
subb
je
and
and
push
pop
mov
xor
bound
sub
and
adc
pop
add
cmpsl
jle
adc
mov
jge
sti
push
mov
div
dec
ds
fwait
pop
adc
jae
jp
bnd
arpl
jecxz
push
lds
adc
push
lods
inc
push
hlt
ljmp
or
jmp
sarb
neg
int3
imul
verr
mov
dec
sub
daa
add
faddl
add
test
test
hlt
idivb
xchg
iret
pop
mov
xchg
add
pop
inc
repnz
sbb
sbb
ret
push
aaa
cwtl
orb
mov
sbbl
jne
xchg
adc
xchg
add
sbb
push
pop
inc
addr16
daa
inc
mov
es
and
mov
cltd
add
nop
icebp
or
lret
fs
add
movsb
inc
js
jmp
push
mov
in
fs
jae
repnz
mov
cmpsl
testb
sub
arpl
mov
pop
or
and
xchg
fwait
push
cld
jo
movsb
bound
pop
iret
mov
sub
cmp
adc
mov
das
test
inc
roll
inc
les
cmp
out
xchg
aas
pop
cmp
lds
call
rcrb
inc
cmpl
jns
cmpsl
cmp
jl
les
add
lods
pop
jno
mov
iret
fnstenv
xlat
daa
inc
xor
xor
push
daa
pop
lret
in
sahf
mov
scas
push
cli
push
mov
dec
ss
std
rcrb
pop
fimuls
mov
ret
insb
lcall
movsl
mov
lock
enter
in
ja
pop
cmc
jge
pop
and
sbb
xchg
xchg
jmp
pop
in
daa
rcr
and
mov
cmp
or
inc
dec
ds
mov
mov
int
inc
imul
into
add
cmp
arpl
push
popa
js
and
loop
popa
lret
push
ja
fwait
sahf
dec
jmp
lret
lahf
aad
xor
inc
hlt
repz
xchg
dec
and
xchg
xchg
or
xor
mov
fstpl
pusha
xchg
sub
test
psraw
test
cld
movsl
cmp
movl
mov
pop
mov
jecxz
enter
sarl
repz
cli
aas
mov
adc
std
mov
std
cwtl
mov
xor
add
adcl
push
inc
mov
sbbl
xor
add
push
mov
orl
xor
addl
add
xorl
push
lea
push
addl
pushl
adcl
pushl
call
adcl
test
je
lea
sbbl
push
mov
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
mov
int3
jo
and
jo
in
out
loop
mov
lret
mov
jb
add
call
leave
cmpsb
pusha
repz
daa
mov
cmc
dec
mov
rorb
cli
inc
mov
scas
xchg
das
movlps
sub
xor
mov
sete
add
push
jo
pop
push
push
inc
mov
jp
pop
pop
dec
les
in
pop
mov
mov
stc
xchg
fisttpl
cltd
nop
ret
mov
sub
shll
push
add
add
mov
push
and
mov
fdivl
dec
pusha
sbb
or
imul
add
inc
sub
push
or
mov
mov
pop
ret
push
dec
xchg
data16
inc
xchg
imul
in
jb
cmpsl
add
pop
cwtl
dec
fbld
and
push
push
cmc
jp
leave
jno
mov
or
add
cli
pushf
mov
in
rorb
inc
mov
mov
cld
mov
repnz
lock
rorl
dec
aam
sbb
or
out
enter
pop
jns
jno
xchg
jae
pop
gs
lea
or
jns
fxam
testb
leave
dec
xor
mov
jo
inc
mov
lock
mov
jo
iret
add
cmp
fistpl
push
jge
movsl
cli
into
popf
lds
jle
sub
push
xchg
add
movsb
into
jae
movsl
test
enter
push
xchg
mov
push
stos
and
repnz
cmp
test
cmp
loopne
mov
jo
insb
cmp
push
sbb
lea
pop
and
aaa
xor
cmpsl
pop
mov
dec
inc
pop
cmp
cltd
add
daa
adc
jle
sar
into
repnz
dec
cs
shll
div
push
and
lret
sbb
imul
fsubrs
inc
rclb
xchg
cs
test
jae
fistpll
xchg
pop
adc
mov
jns
or
jp
in
lcall
and
push
cmp
shl
jno
ss
adc
daa
fisubl
sahf
js
test
movsb
mov
ja
mov
pushf
js
in
insb
ret
pop
xor
and
insl
pop
mov
shlb
lcall
icebp
mov
fldt
adc
jnp
xchg
xchg
mov
fnstsw
cmp
mov
or
sbb
into
pop
add
rcrl
dec
lret
bound
dec
in
out
aaa
aad
add
jb
arpl
cmp
fsub
and
jmp
jae
stos
sbbl
add
push
cmp
lahf
int
test
cmpb
cmp
in
out
fcmovne
jmp
sub
filds
sti
dec
adc
jmp
arpl
lds
sub
aas
and
jle
add
ljmp
ds
add
push
mov
add
push
mov
mov
pushl
jmp
sahf
das
or
mov
mov
pop
mov
imul
mov
and
jo
iret
pop
int
cmpb
pop
pop
out
and
pop
cmp
xchg
fsubs
fs
pop
je
in
pop
mov
xchg
and
fdivrs
test
inc
mov
push
cmp
mov
mov
cmp
cwtl
dec
insl
sbb
and
hlt
cmpl
testl
int3
xchg
add
pop
pop
clc
outsl
xacquire
mull
enter
insl
mov
insl
pop
andl
mov
sbb
not
adc
mov
and
pop
cmp
push
sub
add
dec
xchg
pusha
leave
pop
sbb
adc
add
pop
into
push
dec
pop
inc
mov
jl
cld
inc
loopne
add
or
iret
inc
into
add
jno
out
xchg
sub
repnz
std
scas
dec
and
xor
outsb
out
lahf
jnp
sbb
icebp
mov
dec
jo
xchg
cmp
lahf
and
fwait
sbb
inc
andl
addr16
ficoms
mov
pop
pop
push
out
call
mov
mov
fcmovbe
mov
inc
aaa
mov
jecxz
dec
int3
cld
hlt
sub
loope
dec
incb
fisttps
sbb
imul
nop
cltd
mov
xchg
pop
adc
bound
call
outsb
sub
nop
ret
inc
mov
fbstp
sti
or
loopne
push
mov
and
sub
push
inc
mov
lds
xchg
add
in
test
jp
pop
lock
nop
cmpsb
loopne
mov
lds
mov
adc
fwait
mov
ficoms
mov
std
cwtl
mov
jne
movsl
jp
clc
ja
mov
popf
cmp
jl
insb
xchg
jb
cmp
jne
clc
mov
push
xchg
dec
jecxz,pt
aaa
shlb
sti
xor
addr16
sarl
leave
mov
cmp
fwait
or
clc
mov
outsl
cmp
pusha
je
leave
fldenv
movl
pop
rclb
outsl
push
cmp
add
and
loopne
outsl
sub
push
xor
xchg
clc
mov
dec
repz
jg
xorl
and
jmp
sbb
clc
je
xchg
dec
sub
fsubs
cli
adc
subl
mov
mov
ja
pop
push
jl
leave
into
cltd
stos
mov
les
data16
jmp
cwtl
xor
xchg
rorb
inc
test
outsl
out
lods
adc
xchg
scas
jl
or
cmp
std
ds
popf
in
outsw
pusha
shr
adc
aaa
pmuludq
addr16
pop
cli
mov
xor
into
xrelease
mov
mov
pop
arpl
inc
mov
out
xchg
scas
mov
scas
jne
add
jno
loope
fists
lods
cmp
sub
mov
push
pop
jge
or
fimuls
xor
add
mov
cmpl
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
xchg
cmp
aad
jo
jge
jo
xchg
lret
aas
aam
pop
fnsave
xchg
dec
pop
mov
lcall
insl
xchg
data16
jmp
sub
sbb
cmp
fisttpl
sub
sbb
call
push
hlt
or
and
xchg
pop
xlat
dec
ja
into
std
and
push
rorl
add
dec
pop
sbb
scas
addb
mov
lods
mov
dec
jp
sti
push
lahf
or
in
jbe
loop
or
popa
fmull
pop
inc
scas
lds
cmp
test
pop
xor
call
pop
push
mov
pop
jns
xor
cwtl
hlt
mov
mov
fs
push
pop
push
xor
mov
filds
push
fadds
mov
pop
mov
rorb
jge
loopne
call
js
push
das
das
in
sbb
sbb
mov
loope
lds
mov
dec
jo
jnp
dec
adc
jo
push
sub
xchg
pop
or
insl
popa
push
in
fisubl
leave
stc
jbe
jmp
mov
insb
test
cmpsl
inc
inc
shll
sub
mov
loopne
inc
cmc
sti
outsl
out
pop
jg
imul
test
je
ja
add
and
sarl
mov
hlt
jne
sbb
xor
lock
jbe
mov
fcomi
ds
push
movsl
inc
cmpsb
dec
mov
fmull
fistpll
fldcw
lea
fldl
xor
pop
sbb
pusha
and
cmp
in
leave
adc
dec
push
out
int
imul
cmpsb
mov
mov
cmpsl
sar
ljmp
cmp
lods
mov
cwtl
cmp
cs
xchg
xchg
je
lret
insl
mov
pop
ds
loope
lahf
xchg
data16
scas
movups
jae
mov
xor
xorl
push
and
cmp
cld
loope
mov
icebp
sub
cmp
push
pop
popf
xor
stc
xlat
loop
mov
pop
jle
push
jae
jae
jecxz
shlb
sub
movsl
mov
mov
sub
mov
pop
ret
xchg
push
push
push
mov
inc
in
js
pushf
pop
jns
popa
gs
sbb
cltd
cmpsl
mov
fistpl
rorl
mov
mov
lods
test
rcrl
leave
cmpsl
popf
ret
push
iret
dec
push
fsts
smsw
add
xor
push
push
call
sbbl
bound
mov
shlb
add
std
xchg
mov
les
xlat
jecxz
cmp
xor
jmp
in
mov
sub
je
fimull
push
fnstsw
mov
aam
imul
jle
sbb
dec
out
lds
add
mov
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
jmp
ja
mov
mov
call
shlb
and
jo
std
sub
fstpt
push
rcrl
pop
test
pop
imull
ss
xchg
aas
sbb
xchg
cmpsb
adc
push
data16
ret
daa
fdivs
out
or
and
in
dec
in
xchg
lods
and
cmp
and
imul
cmpsl
faddp
ljmp
xor
scas
es
into
xchg
repnz
push
cli
outsb
pop
and
push
mov
shlb
jge
cmpsl
pop
jo
insb
jbe
jmp
mov
jno
lods
scas
sbbl
add
fld
shr
inc
xchg
icebp
rorl
stc
sbbb
push
xchg
mov
in
fwait
sub
test
jns
icebp
or
cld
loope
cld
xchg
cli
aam
dec
and
mov
sbb
cmp
adc
sahf
cmc
push
cli
dec
jno
and
pop
and
insl
aam
out
in
inc
ret
jg
fs
hlt
insb
push
push
or
loope
inc
xorl
xchg
cmp
push
mov
into
aas
data16
stc
in
in
and
dec
jae
imul
sub
fwait
inc
adc
ja
lahf
shrb
lock
loopne
xor
sub
movsb
xchg
popa
mov
and
sub
push
adc
and
pusha
or
inc
pop
dec
pushl
mov
enter
and
inc
cmp
sub
loopne
xchg
inc
push
in
in
sbb
xor
test
in
stc
dec
hlt
testl
sti
add
sub
mov
out
test
push
dec
je
cld
add
push
into
xchg
push
mov
loop
std
cs
jmp
jnp
cmp
ds
pop
sbbb
into
mov
jns
pop
pop
movsl
push
ret
sub
cmp
xor
or
stc
shl
shrb
lock
inc
sahf
ds
pop
cs
jp
mov
sub
add
mov
mov
inc
xor
fwait
cmp
push
cmp
inc
or
jnp
and
cmpsl
dec
adc
test
out
rcl
in
mov
pcmpeqd
xchg
dec
jae
xchg
leave
and
orl
or
dec
aam
js
popa
jno
pop
mov
cli
ret
mov
sbb
xchg
or
int
adc
sub
shrl
jne
push
insl
imull
imul
loope
scas
cwtl
fisubrs
and
mov
pop
rclb
faddp
dec
lret
in
or
divl
stos
inc
dec
js
divb
mov
adc
inc
stos
xchg
adc
rcl
cld
ret
sbb
dec
scas
mov
popf
adc
jnp
and
mov
and
cmp
les
and
cmp
outsb
dec
insb
push
cwtl
scas
mov
imul
rcrl
insb
jle
pop
in
rolb
lret
call
mov
jb
testl
xchg
adc
mov
sbb
outsb
frstor
pop
popf
mov
dec
pop
pop
mov
imul
stos
test
dec
xchg
es
stc
push
lods
xor
xchg
pop
pop
cmp
dec
add
add
fisttpl
jp
xchg
mov
out
jo
and
jo
jp
and
push
jnp
cwtl
bound
out
cli
lds
sub
in
loope
inc
jbe
jnp
addr16
mov
dec
inc
or
inc
sub
cmpb
inc
addr16
pop
dec
mov
js
ss
xor
sbb
in
ds
imul
cmp
dec
dec
in
mov
int
faddl
push
je
mov
fsubrl
pop
aad
jge
iret
jg
loopne
mov
mov
pop
mov
imul
mov
loop
fstpl
pop
sti
aas
out
imulb
into
or
xchg
fs
jl
jne
out
pop
mov
push
jge
dec
jp
sbb
xchg
push
shl
sub
mov
mov
jb
movsb
jle
and
int3
cmpsl
cmpsl
outsb
xor
aaa
mov
mov
inc
int3
fstpt
fdivrs
fnstcw
xor
andb
dec
and
add
xor
lret
lea
testb
scas
pop
xchg
inc
ret
mov
hlt
imul
clc
cwtl
arpl
pop
pop
mov
xchg
add
je
nop
aaa
xchg
sahf
push
xchg
adc
xor
loopne
push
out
mov
adc
xchg
out
pop
call
test
sub
mov
ss
xor
jae
repnz
or
inc
xchg
xor
xor
ret
cmp
push
cwtl
xor
mov
insl
sbb
dec
dec
or
out
pop
in
jo
jge
scas
lods
mov
mov
cmp
movsl
or
mov
xor
sub
mov
repz
mov
pop
scas
push
gs
imul
jbe
in
decl
aas
daa
and
es
adc
popa
or
sahf
sbb
adc
loop
mov
and
mov
dec
movsl
push
jb
movsl
idiv
addr16
or
push
inc
jns
test
ficoms
push
and
jnp
jge
sub
xor
sub
pusha
pop
adc
fadds
push
sti
mov
push
in
mov
jae
dec
int
leave
jo
stos
push
pop
rorb
add
je
mov
inc
jns
popa
mov
mov
dec
mov
cmpsb
mov
add
adc
dec
loope
add
rcr
ljmp
popf
loop
xor
mov
xor
pop
into
mov
xor
imul
sub
xor
mov
add
ja
in
incb
xchg
sub
xchg
out
mulb
push
mov
lret
xchg
loop
outsb
subb
push
or
mov
pop
pop
mov
jp
sub
ds
js
mov
sub
lcall
push
lret
in
shlb
cltd
sbb
push
sarb
iret
add
or
lret
pop
cmp
clc
incb
inc
push
jmp
mov
fwait
xchg
fwait
jae
roll
add
xchg
fdivl
and
jo
fs
jmp
fdivs
pop
in
andl
inc
iret
cld
in
mov
in
fnstcw
out
call
cld
insl
xor
pop
ss
push
add
cmc
divl
sbb
sub
sub
mov
fldenv
push
xorl
lret
jl
push
xor
sub
mov
adc
lock
pop
cmp
push
pop
sbb
sub
ficompl
jbe
lods
imul
ja
sbb
fidivl
adc
insb
imul
jmp
jo
sahf
nop
mov
push
daa
loope
xchg
xchg
add
sbb
es
xchg
or
das
repnz
stc
pop
xor
xor
dec
out
addr16
push
jp
pop
out
shlb
sbb
out
push
xor
rol
mov
scas
repnz
xor
mov
xor
and
jg
cmp
adc
popa
loope
jmp
fld
cmpsb
fidivrl
jo
xchg
pop
lahf
and
push
fwait
push
stos
cmp
mov
cmp
cld
mov
les
loope
and
scas
mov
mov
xchg
add
pop
push
mov
movsb
das
inc
xor
cmc
adc
cmpsl
aam
out
inc
pop
lods
aam
pop
pusha
into
test
aas
orl
movsb
xor
mov
sbb
scas
xchg
nop
div
call
mov
add
icebp
push
jns
jb
xchg
lret
xchg
outsb
or
push
cmp
sub
movsb
loop
lds
dec
push
dec
insl
fs
cmp
xchg
sbb
movlps
dec
dec
inc
neg
jae
dec
in
cmp
adc
mov
dec
and
ss
fstps
gs
inc
or
aas
xchg
notb
mov
nop
jmp
cmp
inc
pop
in
xchg
je
insl
cmpsl
dec
push
lcall
xor
out
xchg
fcmovnbe
mov
mov
or
test
push
xor
ja
adc
filds
out
pop
sub
and
pop
inc
repz
mov
lahf
dec
inc
lods
sbb
scas
fisubrs
in
cmp
push
pop
je
mov
dec
dec
rcrb
lret
cmp
mov
xlat
add
in
enter
push
push
fnstsw
xor
mov
jae
imul
rcrl
out
das
lea
pmaxub
fucom
cmp
movsb
shll
pop
loop
test
icebp
xor
mov
push
mov
mov
icebp
push
mov
fimuls
shrb
push
mov
dec
mov
ja
nop
xchg
call
icebp
xchg
js
xchg
push
pop
pushf
add
dec
rcrb
add
movsb
repz
int
sbb
mov
xchg
decb
pushl
mov
mov
pushl
lea
jmp
mov
push
mov
bound
ja
mov
fnstenv
and
jo
xor
or
sbb
lds
inc
rcrl
xchg
leave
adc
shlb
repnz
xchg
dec
in
imul
loope
sbb
xchg
ljmp
push
aaa
mov
lock
jne
pop
pop
and
stos
cmc
xchg
lods
or
inc
andb
repnz
lods
pop
ja
xchg
mov
insl
pop
jae
jno
cmc
ljmp
or
and
pop
int3
mov
dec
ds
sbb
ffreep
fwait
mov
addr16
xor
mov
imul
jle
gs
pop
pop
mov
loope
sub
dec
or
jecxz
jns
jle
data16
imull
xchg
push
jle
xor
mov
push
fidivs
cmp
test
push
sti
sahf
leave
pop
into
inc
xchg
jns
lock
jns
mov
jge
das
movsb
movl
mov
shll
pop
push
fsubs
sub
popf
lcall
add
fidivrl
jno
outsl
push
sub
inc
jmp
arpl
ret
inc
jp
fmull
repnz
mov
leave
dec
mov
pop
cmp
mov
pop
adc
and
js
sahf
mov
sub
das
xchg
cmp
jl
push
cmp
hlt
cmp
push
movsb
cli
push
sub
push
mov
hlt
in
aaa
lods
std
pop
push
ret
jmp
es
sarl
ja
jno
xchg
fcoml
push
push
gs
adc
pop
dec
shll
and
inc
out
xor
jmp
inc
mov
inc
ret
out
xlat
xor
sahf
adc
icebp
pop
fs
dec
jmp
clc
mov
dec
fs
aas
mov
icebp
into
loop
pop
push
repnz
inc
mov
jns
jmp
lock
and
rclb
shll
mov
mov
add
je
popf
xor
lret
jmp
stc
dec
mov
outsb
sbb
mov
jle
add
rclb
ljmp
adc
jg
fldt
lret
pop
in
es
data16
mov
xchg
daa
fbld
int3
cmc
pop
in
es
popf
shll
int3
inc
in
rorl
lret
pop
lcall
arpl
mov
int3
lcall
mov
sub
addr16
sahf
loop
mov
repz
insb
stc
pop
mov
test
fidivrs
iret
jecxz
xchg
push
jmp
add
xchg
loopne
cltd
mov
mov
dec
mov
hlt
add
enter
outsl
gs
std
pop
mov
ffree
sub
and
sbb
aas
push
fadds
sarl
jno
sbb
int
jns
mov
xor
xor
add
dec
add
add
out
out
xor
call
cli
ja
jo
and
jo
mov
addr16
push
pop
push
mov
out
insl
stc
lea
rep
jbe
xor
push
jne
mov
xchg
out
inc
dec
roll
push
loope
data16
sub
icebp
cmpb
and
scas
add
mov
mov
xchg
fcompl
sti
test
dec
sbb
scas
gs
inc
lods
repz
loop
push
pop
adc
dec
test
cmpsl
adc
jne
mov
sbb
pushf
and
ficoml
stos
xchg
push
addr16
icebp
das
inc
je
pop
xchg
stos
and
gs
stos
push
jbe
test
xchg
adc
ds
add
xlat
inc
push
int3
sbb
push
mov
repnz
inc
cmpsb
pop
sti
adc
dec
cmp
ja
enter
in
xor
or
shl
jle
call
sbb
jns
mov
sub
push
push
xchg
loop
lcall
sub
cltd
lock
mov
aam
jno
pop
dec
and
nop
mov
aas
adc
repz
arpl
cli
jp
popf
mov
mov
popa
adc
ficoml
dec
dec
fiaddl
adc
enter
and
dec
xor
insl
jae
jbe
and
cmp
mov
fisttps
arpl
repnz
hlt
xor
ds
fcompl
cmpsl
jl
push
rcrb
imul
movsl
hlt
gs
hlt
inc
add
mov
ror
pushf
mov
sbb
lahf
scas
mov
jae
adc
mov
stos
jg
mov
insl
movsb
cmp
jmp
jnp
cmp
mov
in
subb
xor
add
pop
aad
stos
cs
jp
mov
mov
pop
jns
adc
fs
or
dec
imul
mov
out
movsl
out
xchg
ss
test
imul
into
adc
pop
inc
loope
push
pop
shlb
sbb
std
push
imul
test
add
pop
dec
pop
pop
insl
xor
cwtl
xchg
or
cld
sahf
mov
sti
and
cwtl
ss
jecxz
rcr
dec
out
fcomps
ja
push
add
xor
outsb
ja
add
xchg
addr16
inc
fwait
xor
jae
stos
mov
inc
pop
push
pop
dec
aam
push
cmpsb
cmp
ljmp
ljmp
incb
repnz
jmp
stos
fildl
pop
cwtl
or
mov
pop
dec
cmp
xchg
andl
push
loop
sbb
dec
xchg
loopne
dec
hlt
pushf
cmp
adc
inc
sbb
imul
inc
aaa
in
mov
fwait
lret
cmp
mov
ret
inc
stc
clc
dec
inc
ror
push
dec
cltd
push
mov
add
movsl
fnsave
add
int
test
or
test
shrb
push
pop
xor
jne
mov
pop
ds
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
jmp
cmpsb
jnp
or
lahf
jo
add
jo
and
jo
jmp
ljmp
aaa
divl
icebp
cmp
and
sub
jns
loopne
pop
inc
jmp
scas
int
mov
and
mov
testb
mov
push
stc
enter
mov
adc
dec
add
adc
dec
push
add
fnstenv
jge
xor
xchg
xchg
inc
and
xchg
cmc
cmp
mov
push
adc
mov
loopne
jl
sbb
movsb
sub
jnp
xchg
inc
ficomps
sub
ret
iret
das
dec
mov
ja
jb
inc
test
mov
jle
test
out
sbb
aad
into
dec
insb
cmp
dec
ss
out
mov
clc
scas
jl
jle
sub
out
and
inc
ret
mov
push
inc
jmp
xchg
xchg
xchg
loope
push
xchg
xchg
pop
inc
into
out
cltd
fcomps
jns
dec
cmp
jae
cmpsb
cs
mov
push
lock
inc
mull
jecxz
test
fsubrl
pop
sbb
inc
jecxz
add
movsl
adc
add
cmp
add
filds
outsl
pop
popf
lcall
pop
jge
xchg
cltd
jb
cmp
bound
rolb
fstpt
push
sub
lcall
aas
adc
and
std
xchg
scas
mov
das
aas
mov
sbb
pop
push
inc
ja
mov
push
dec
and
inc
fimuls
stos
sub
stos
pusha
lcall
add
adc
or
inc
mov
lods
sbb
mov
and
xchg
roll
addr16
ljmp
fistpll
pop
fwait
mov
pop
jb
jmp
adc
add
dec
dec
push
aam
dec
dec
sub
fistpl
cmp
das
imull
mov
aaa
jecxz
add
loope
popa
leave
jl
shll
add
mov
lret
arpl
pop
aaa
call
js
cmp
iret
xchg
mov
out
fnstcw
bound
fdivr
inc
fucomp
xor
xor
sub
hlt
clc
fistl
sbb
test
mov
mov
scas
cmp
sbb
jge
inc
inc
fidivl
xchg
and
insl
ljmp
shl
addr16
add
cli
aaa
hlt
adc
fwait
out
out
dec
xchg
imulb
mov
sub
cmp
nop
pop
lock
aam
in
fldenv
cltd
xchg
and
pop
push
popa
bound
fistl
lret
cmpsl
pop
sub
data16
int3
lret
ret
mull
addr16
je
rorl
jb
mov
lods
adc
and
adc
ds
pop
sub
fmuls
xchg
fcomip
sub
mov
inc
and
fs
mov
das
pop
ficoml
or
insl
test
sub
push
mov
insl
sub
repz
mov
enter
push
jle
cmp
je
jbe
cmpsb
pop
xor
movsl
mov
call
mov
mov
jmp
out
mov
ja
add
xchg
push
xlat
out
jo
and
jo
idivb
dec
mov
fucomp
pop
and
clc
xchg
test
dec
xor
mov
pop
mov
xlat
mov
fidivs
scas
jle
mov
mov
mov
jo
xorl
sahf
fcmovnbe
mov
test
iret
pop
sbb
arpl
sub
and
adc
in
mov
push
lret
mov
cwtl
pop
test
mov
xchg
push
mov
dec
outsl
inc
or
jno
mov
push
fnstcw
xchg
jbe
adc
mov
insw
cmc
jmp
push
mov
sub
pop
xlat
adc
das
dec
xchg
pop
fsubrp
adc
mov
stos
mov
dec
lret
mov
inc
or
in
aas
popf
xchg
aas
jns
in
lret
push
or
ss
mov
gs
test
cmc
xchg
pusha
dec
dec
pop
jge
dec
pop
sbb
push
push
sub
fisttpl
fsubl
shrl
cmpsl
push
fs
jge
popf
mov
test
outsl
push
pop
stos
pop
or
fadds
cmp
cwtl
pusha
xor
ja
mov
inc
or
imul
cwtl
or
add
leave
fistl
sub
cs
mov
inc
stc
sub
or
push
push
cmc
sbb
dec
or
ss
cmc
mov
out
xor
xlat
mov
pop
sarl
jno
mov
cld
or
in
adc
xchg
outsb
sahf
icebp
mov
inc
loope
mov
cmp
movsl
loop
int3
sbbb
scas
jae
xor
add
pop
sarl
fistl
mov
jl
popa
lods
scas
imul
ret
mov
dec
jnp
or
dec
inc
cmp
daa
mov
cmc
cmp
pushf
mov
in
out
in
fs
popf
outsb
lods
imul
in
and
daa
adc
mov
sbb
push
stos
cmc
loop
lods
inc
or
xor
sub
pop
pop
pop
iret
aas
daa
movsb
mov
push
add
jno
mov
xlat
cmp
or
ficoml
loop
jg
push
pop
push
iret
fstl
jb
pop
push
cmpsl
inc
test
sbb
push
cmp
or
mov
cmc
mov
xor
sbb
test
push
sub
push
mov
ljmp
sub
insb
aas
sub
pop
loop
xchg
push
or
sub
xchg
mov
aad
and
in
add
xchg
iret
jmp
pushf
pop
outsb
sahf
lret
iret
inc
inc
aaa
jg
in
je
je
mov
cmp
mov
jge
pushf
loop
sub
mov
xor
movsb
fwait
stc
push
jle
adc
add
rep
xorb
imul
stos
sbb
or
inc
adc
pop
mov
adc
xchg
jl
sub
out
lret
or
pop
leave
ret
push
mov
sub
push
subl
mov
sbb
mov
mov
mov
sub
imul
mov
movl
neg
movl
mov
mov
or
mov
add
mov
adcl
mov
xor
xor
mov
sbb
mov
jmp
arpl
cmc
xchg
cmc
arpl
pop
das
testl
jo
lahf
jge
jo
pop
gs
inc
sub
ret
mov
incb
fldcw
mov
inc
insl
testb
inc
mov
push
repnz
mov
mov
loope
pop
push
inc
xor
int
pop
lahf
orl
and
or
insb
inc
ds
lret
sbb
sub
xchg
push
cmp
adc
jl
pop
push
push
inc
mov
jne
xor
jg
cmp
mov
jl
jbe
aad
je
push
inc
mov
push
pop
pop
mov
xchg
pop
rolb
jmp
orb
stos
daa
aad
or
std
jo
pusha
xchg
sahf
push
cmp
sub
sub
data16
fucomi
mov
xchg
pusha
xor
out
rcrl
mov
rcrb
or
xchg
pavgw
pushf
nop
xor
sbb
mov
leave
inc
mov
pop
sub
push
mov
jp
insl
jge
test
sub
mov
jne
jmp
aas
mov
enter
fimuls
ljmp
test
mov
mov
sti
mov
xor
hlt
imul
out
incb
pop
add
fisttps
outsl
jmp
xor
jbe
dec
scas
lock
mov
lret
sub
sahf
loop
fimuls
jg
ds
sbb
xor
scas
xchg
std
cmp
jmp
add
or
push
int
sub
fidivrs
and
insb
and
jmp
push
mov
aas
inc
mov
inc
mov
hlt
mov
adc
inc
imul
popf
pop
mov
or
mov
jb
jp
inc
sbb
je
mov
push
sbb
sub
out
not
dec
outsl
cld
lret
dec
jmp
and
dec
cwtl
das
out
sbb
insb
loop
int
jl
movb
and
inc
shll
jge
leave
cld
call
add
jnp
xchg
popa
addr16
push
dec
leave
inc
shll
nop
mov
jbe
shlb
movsl
out
inc
out
out
or
cmp
or
js
jno
add
dec
aam
movsl
cmp
mov
icebp
bound
jo
mov
out
into
xor
inc
out
xchg
mov
aam
mov
arpl
leave
mov
outsl
and
sti
les
pop
and
inc
jmp
test
push
sti
cmpsb
mov
cmp
sbb
pop
jge
hlt
icebp
inc
dec
inc
cltd
movb
adc
and
bound
subb
fsub
push
cmp
mov
movsb
enter
and
jns
jns
mov
cs
xor
pop
movsl
ds
test
daa
push
fbstp
rcrl
mov
and
push
test
aad
xchg
xchg
mov
lcall
test
push
int
cmp
dec
dec
inc
xorl
sti
pop
pop
lret
inc
aad
iret
xlat
adc
lods
or
push
mov
ficompl
fisubrs
fdivl
or
jns
or
mov
rcrb
or
mov
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
adcl
jmp
xlat
mov
mull
mov
shrb
or
call
jo
pushf
dec
jns
push
fstps
sbb
in
mov
mov
bound
fwait
mov
cmp
or
xor
movsb
mov
imul
adc
or
and
xor
cs
imul
xchg
enter
int
mov
pushf
mov
dec
xchg
dec
mov
mov
subl
sub
sub
xchg
mov
xchg
xchg
rcll
push
data16
out
mov
cmp
mov
inc
insl
jmp
mov
mov
incb
jge
jns
or
pop
pop
arpl
insl
sbb
pop
xchg
mov
daa
add
sbb
enter
or
pusha
fildl
adc
int3
or
shll
in
test
sbb
cmp
movsl
pop
andl
jecxz
jl
inc
mov
or
in
dec
shlb
and
lret
sahf
mov
mov
cld
jg
adc
adc
ja
push
add
inc
outsl
xchg
mov
repnz
loopne
lcall
jns
adc
cmp
push
pop
xchg
and
dec
and
sub
cmp
stos
ljmp
inc
stos
cmpsl
xor
leave
xor
ja
push
mov
mov
cmp
aad
push
lods
mov
xchg
les
add
push
mov
hlt
xchg
out
dec
aaa
and
outsl
in
gs
push
addl
lret
and
fidivrl
adc
pop
pop
mov
ja
testb
dec
dec
test
fiaddl
scas
and
cmc
jl
cs
dec
insl
jle
adc
xor
scas
dec
mov
ret
xchg
dec
lock
outsl
in
mov
jns
xchg
arpl
xor
mov
orb
dec
sub
hlt
cld
pop
inc
mov
add
inc
je
nop
cmpsl
add
scas
push
test
test
lds
lods
and
push
ret
pop
push
add
xchg
int
jg
mov
mov
pop
xchg
inc
xlat
shr
test
adc
xchg
mov
push
and
sti
out
xor
aad
xor
cmp
or
cmp
mov
sub
mov
jge
xchg
and
cmp
mov
mov
div
push
mov
add
hlt
ljmp
push
outsl
jle
stc
sahf
xor
movsl
popa
sub
sub
inc
loopne
aaa
jb
mov
adc
jge
loop
fstpl
movsb
leave
enter
out
stos
movsl
and
jnp
cs
push
sub
pxor
arpl
jo
pop
mov
loopne
daa
mov
adc
jl
jp
and
test
hlt
mov
push
or
lret
lock
stos
stos
inc
imul
pop
pop
jmp
push
mulb
inc
es
mov
imul
inc
push
lock
cmc
aad
loope
or
in
jns
or
push
dec
mov
mov
mov
nop
add
add
mov
ja
sahf
outsl
enter
ja
xor
cmc
leave
fisttps
sahf
mov
lods
mov
mov
xchg
stos
aas
bound
in
fsubrl
sbb
mov
inc
loope
inc
and
loop
inc
cld
roll
fdivs
test
aam
test
inc
add
add
add
sldt
add
rorb
adc
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
add
movl
andl
jmp
into
iret
cmpsb
cmp
sbb
adc
cmc
jo
lahf
jge
jo
cs
and
add
stos
sbb
lds
lock
add
and
nop
and
scas
xchg
scas
fmull
imul
mov
cli
stos
push
in
jbe
loope
push
ss
jecxz,pn
sahf
cmp
cs
out
cmp
lock
popf
insb
out
inc
sub
bound
xor
inc
mov
es
and
inc
sti
inc
ljmp
in
dec
out
xor
aas
js
popf
mov
cwtl
in
test
loopne
adc
fdivrl
iret
add
test
add
aaa
sub
nop
cmp
or
pusha
les
lods
dec
mov
xchg
nop
stc
testb
in
aas
loope
cmpsl
repz
mov
and
arpl
lea
cwtl
popa
bnd
or
push
out
xchg
ja
jno
dec
test
or
stc
stos
loop
xorl
xor
lahf
fs
gs
jmp
cmc
adc
pop
imul
xchg
mov
popf
orb
xchg
lds
inc
filds
push
ja
sub
mov
jle
scas
std
jnp
jns
inc
mov
cmpsb
cmp
idivb
mov
sbb
mov
sti
jmp
popf
inc
add
pop
sbb
jne
mov
aam
movsb
xchg
cmc
dec
call
push
or
adc
and
or
push
stos
mov
xchg
fstpt
clc
in
add
outsb
and
bound
and
cld
adc
scas
add
ja
cs
popa
mov
or
dec
fstl
pop
xor
fdivrs
outsb
es
fistps
push
sbb
dec
xchg
pop
cld
cmpsb
iret
xor
or
inc
lds
xor
inc
filds
cwtl
adc
imul
stos
adc
mov
mov
rcll
jne
outsl
fwait
and
dec
dec
out
inc
fistl
inc
mov
in
js
dec
push
pop
mov
sarl
add
mov
xor
lahf
arpl
adc
inc
subl
sbb
sub
mov
shll
shlb
cmp
fidivs
fcomp
lret
push
dec
dec
cmp
adc
je
inc
cmp
push
es
jns
xchg
sbb
jnp
and
mov
daa
into
nop
das
jl
in
pop
cmpsb
xor
xchg
in
push
insl
mov
pop
push
in
gs
jbe
fcom
lea
int
xor
jnp
adc
xchg
in
enter
shll
adc
lods
mov
je
gs
in
mov
mov
xor
dec
rorb
dec
fsubp
add
dec
lcall
out
cld
imul
sbb
sub
mov
scas
fwait
mov
push
sub
pop
pop
outsb
jp
pop
xlat
sub
pop
stos
icebp
inc
repnz
icebp
out
xor
int
call
jle
outsb
push
inc
lods
mov
out
push
test
and
enter
cmp
mov
cmp
inc
les
nop
or
das
or
inc
dec
je
int
xor
out
xchg
cli
ret
loope
in
jnp
and
push
or
inc
addr16
or
jnp
aam
adc
icebp
jae
sub
mov
movl
movl
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
movl
adc
mov
xor
sub
mov
add
movl
cmp
movl
je
movl
push
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
sub
mov
add
mov
jmp
addr16
xchg
jno
ja
dec
in
std
or
out
icebp
jo
lahf
jge
jo
and
dec
and
rcl
ljmp
jmp
adc
sub
aam
outsl
xchg
stos
fstps
mov
and
imulb
mov
push
testb
ret
leave
and
lock
jo
push
cmp
popa
adc
sti
mov
xchg
push
je
mov
mov
xchg
fsubrl
adc
push
pushf
inc
pop
loopne
iret
insl
repz
fmul
sbb
jg
shl
and
imul
sbb
lahf
inc
daa
in
xchg
push
rolb
add
adc
add
pusha
xor
sti
aad
rolb
hlt
mov
test
shl
add
mov
stos
fsubrs
into
xchg
test
fimull
mov
adc
push
mov
insb
and
icebp
loop
fscale
aad
mov
xor
sahf
pop
xor
sarl
cmpsl
sti
icebp
mov
mov
sbb
jp
insb
mov
out
xchg
pop
scas
mov
sub
jge
xchg
pushf
sub
faddp
enter
dec
loop
fst
cwtl
xor
aad
es
jnp
gs
js
ja
push
insb
xchg
dec
lret
movsl
sub
ja
dec
add
xor
mov
rclb
push
push
or
enter
shrb
xchg
add
jecxz
mov
stc
mov
cmp
mov
outsl
xchg
pop
data16
dec
jl
ret
ret
rcrb
int
xor
cltd
dec
leave
xor
leave
fsubr
ljmp
cwtl
in
clc
popa
and
iret
cmp
cmp
mov
mov
js
js
pop
pop
push
add
movsb
adc
aas
bound
sbb
sbb
pop
push
andl
ljmp
out
sbb
mov
xor
pop
out
cmpsl
mov
call
ss
pop
lds
jge
sub
imul
jl
dec
sarb
and
xor
mov
out
inc
fsubs
jnp
dec
mov
xorl
pop
clc
pop
sub
repz
and
cmp
mov
sbb
inc
mov
lods
push
sub
xchg
push
lods
leave
aaa
rclb
and
xor
orb
push
fwait
cs
popf
and
pop
xchg
scas
ja
testl
inc
cli
mov
scas
adc
pop
xchg
popa
fsubs
cmp
push
adc
ret
fwait
pop
sbb
push
dec
inc
in
push
dec
sub
fnstcw
xor
mov
xlat
and
daa
int
xor
push
stos
pop
push
pop
mov
fcompl
stc
cmp
dec
push
mov
push
mov
rcrb
jmp
and
sub
jg
mov
mulb
push
cmp
cli
xor
adc
dec
and
mov
add
out
sbb
push
pop
jno
fwait
dec
ds
rcrb
push
fidivrl
stos
aaa
movsb
cmpb
adc
out
scas
bnd
inc
push
loope
xchg
dec
ds
faddl
cmp
int3
aam
enter
adc
mov
xlat
inc
repz
les
xor
xorl
add
movl
cmp
movl
jb
mov
sbb
mov
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
add
sbb
add
imul
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
xor
mov
mov
jae
jg
ja
lahf
push
int
std
jo
lahf
jge
jo
insl
in
outsb
lea
cltd
leave
jnp
cmp
std
ds
jp
fstps
sahf
lds
push
and
push
xchg
sbbl
inc
sbb
rcr
testb
cmpsb
ja
adc
jmp
sbb
jne
cmp
xchg
fs
mov
lcall
mov
jbe
adc
call
or
xlat
test
gs
inc
jg
scas
mov
stos
lret
aad
arpl
pop
lret
mov
fwait
data16
lret
cmp
scas
jno
arpl
test
je
fmull
xchg
push
aad
or
sbb
stc
icebp
adc
xchg
sub
daa
xor
mov
adc
ljmp
pusha
loop
sahf
stos
sub
xchg
cli
cmp
es
push
lods
cmp
or
js
movsl
leave
dec
aam
or
outsl
push
jo
es
into
test
lahf
int3
in
in
lcall
inc
ret
repnz
sbb
pop
dec
sub
jnp
pop
pop
sbb
mov
add
mov
nop
out
test
insl
mov
arpl
pop
out
or
ret
roll
pop
mov
movsb
out
mov
repnz
in
fistl
dec
pop
jecxz
jl
jp
cli
sub
pop
stos
add
je
sub
and
loopne
aad
ja
andb
cmpsb
add
sbb
mov
jae
sar
repnz
stc
jp
pop
cld
mov
fisttpll
pushf
mov
lcall
stos
add
fwait
mov
bound
cld
loopne
sub
mov
dec
ret
push
cmc
aad
sar
adcl
cmp
cwtl
and
cwtl
xchg
or
push
int3
inc
mov
xchg
add
lret
mov
cltd
sub
test
mov
js
test
push
sar
xor
shll
jg,pn
loop
imul
mov
or
into
addb
loope
xlat
dec
xor
mov
lret
or
mov
call
clc
insb
hlt
pop
and
pop
sbb
loopne
jb
push
cmp
push
mov
sbb
jp
icebp
out
notl
ja
sti
and
and
xor
aas
std
in
movsl
sub
jecxz
or
ret
mov
fldcw
mov
pop
xchg
mov
lea
push
mov
lock
mov
sub
sbb
subl
jnp
outsb
fisttpl
jno
into
add
sbb
cld
fsubrl
ret
mov
xor
jno
repnz
mov
mov
cmp
and
loopne
rcrl
je
outsb
jnp
out
inc
divb
int3
fdivrp
jmp
loop
ret
dec
aam
jno
out
mov
adc
cmpsb
jl
add
loope
vmovddup
xchg
fisubl
pushf
shll
dec
out
out
mov
es
sub
cmc
jl
xchg
int
add
inc
outsl
xor
or
mov
push
rcr
mov
inc
add
mov
jno
js
lds
dec
cmp
push
outsb
adc
xchg
cmp
mov
pop
clc
cs
ss
push
movsb
cltd
jge
rorb
popa
dec
jnp
ficoml
lea
shr
mov
jne
sub
lret
fs
lahf
mov
jge
jo
push
hlt
xor
mov
sub
pop
mov
jbe
dec
and
imul
or
push
xchg
adc
adc
xor
mov
in
sub
pusha
add
test
jp
sbb
mov
into
dec
mov
imul
imulb
jp
jne
mov
push
sub
cmpl
int3
push
mov
popa
dec
mov
xor
push
fld
jl
leave
sbb
lahf
mov
lods
mov
les
pop
and
and
inc
in
push
pushf
pop
rcrl
jge
mov
push
leave
cmp
daa
pop
cmp
fldt
pop
push
lea
icebp
movsb
stos
cmp
clc
mov
in
cmpsb
mov
cltd
test
insb
ljmp
repz
test
inc
dec
dec
mov
adc
lret
and
add
imul
push
sbb
push
push
loope
cld
out
jbe
cmp
push
jecxz
stos
cmpsb
ret
mov
xor
xor
adcl
shrl
in
push
aas
or
pop
lret
ja
jno
cmp
lcall
inc
jne
aad
push
xchg
test
inc
cli
lea
push
push
add
sub
push
movsb
int
cmp
adc
sahf
pop
popa
mov
aad
data16
sub
push
push
or
pushf
sub
fdivrl
sahf
jmp
and
add
cmp
fcmovne
pop
ret
imul
lds
fidivrs
cltd
mov
dec
jae
pusha
popa
mov
mul
inc
inc
divl
orl
sub
xor
shr
sub
add
cmpsl
movsl
stos
and
into
cld
and
stos
sarl
jmp
cmc
sub
imul
imul
push
jnp
shlb
sub
jecxz
fnstsw
repz
ret
mov
mov
mov
add
iret
shr
enter
xchg
pushf
jl
dec
enter
lahf
mov
lods
call
repz
xor
subb
lods
cmp
repnz
lret
or
loope
out
test
cmp
loop
ficoms
dec
mov
andl
mov
sbb
lret
cld
sbbl
mov
xor
lahf
sub
push
sbb
push
xchg
xor
dec
ret
cwtl
in
push
popa
fisubl
lds
jae
pusha
fstl
xchg
lods
push
sub
xlat
push
cmpsl
push
sub
sub
or
int
push
repnz
xor
cmp
subb
shl
adc
and
or
arpl
call
mov
cmpb
mov
xchg
loopne
adc
push
std
insl
adc
lcall
sub
cli
jb
pop
jmp
aad
js
xchg
xor
pop
rorb
xchg
push
int
imul
inc
in
popf
fwait
jbe
sbb
dec
aaa
dec
cmc
mulb
cltd
mov
ror
and
push
xlat
push
bound
mov
ss
gs
enter
sti
xchg
xchg
dec
adc
imull
aaa
jmp
cmc
adc
push
inc
cmp
nop
inc
imul
mov
mov
scas
xlat
mov
mov
sub
cmp
ja
mov
jmp
mov
jmp
cmp
mov
loope
loop
pop
shlb
roll
jo
cmp
and
xchg
sub
das
icebp
or
cmp
cs
and
bound
repz
jmp
jecxz
in
stos
stos
adc
sbb
scas
dec
cwtl
sub
adc
xor
pop
inc
fcom
rolb
mov
icebp
jo
jp
ret
insb
mov
jmp
negl
cmp
jecxz
or
push
pop
add
leave
adc
push
mov
aam
add
popf
in
xor
mov
aam
fnstcw
xor
xchg
push
xchg
aas
jne
nop
shll
or
adc
jp
shlb
inc
mov
or
in
lret
dec
pop
scas
lds
and
cwtl
ret
jp
imul
fisubrl
add
pop
sub
xchg
lret
je
inc
xchg
pop
adc
push
xor
sbb
cmp
out
adc
out
mov
pop
or
push
lcall
stos
jo
cmp
aaa
fwait
push
xchg
fs
cmp
mov
cld
out
pop
sub
mov
enter
mov
inc
xchg
std
jae
cld
in
call
fwait
out
into
dec
dec
lods
loopne
mov
mov
pushf
clc
lcall
outsl
mov
push
aas
pop
cld
cmpl
adc
es
jne
cld
loope
adc
push
cmp
mov
cmp
mov
lret
push
test
enter
mov
je
ret
cmp
jl
push
sarl
mov
jnp
pop
and
daa
repz
shlb
push
arpl
jb
mov
push
adc
xchg
pop
dec
pop
sahf
std
push
add
fsubp
xor
xchg
xchg
mov
mov
push
sbb
push
enter
icebp
loop
push
leave
stos
fldcw
xchg
shll
or
and
scas
loope
pop
mov
mov
data16
mov
cmp
and
mov
repz
insl
cmp
rcrb
pop
jle
jo
das
sub
pop
pusha
imul
add
mov
out
push
repz
or
shrb
or
jl
cmp
xor
jle
iret
add
jae
push
adc
pop
fcompp
pop
sarl
sub
loopne
push
movsb
adc
mov
rcr
aam
stos
aaa
inc
dec
stc
inc
cli
pop
push
xor
fwait
mov
pop
not
aad
aas
loopne
or
ljmp
mov
push
jbe
scas
inc
xchg
arpl
mov
push
movsb
je
lahf
push
jp
stc
loopne
mov
stos
sbb
outsb
add
inc
in
sbbl
and
jl
sti
iret
xor
dec
add
rcl
lods
scas
sub
mov
pop
fcomps
xlat
ljmp
iret
pop
jmp
imul
out
outsb
jl
lods
mov
cmp
and
add
in
lret
xchg
repnz
aam
sbb
dec
cmp
xchg
lahf
jge
clc
mov
mov
mov
adc
lods
ret
inc
stos
sub
push
movsl
pop
test
fwait
ljmp
push
sub
sub
pop
mov
pop
add
xchg
adc
mov
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
xchg
fcomi
push
jb
mov
shlb
adc
pusha
xorl
jge
jo
lea
pop
sub
aam
hlt
dec
add
leave
or
fdivl
sbb
xorb
mov
insl
in
lods
pop
dec
pop
cmp
inc
mov
jle
mov
cmp
ljmp
sbb
jp
pop
xor
and
xchg
cmpsb
xchg
adc
inc
jmp
stos
inc
call
or
aas
in
push
ds
dec
mov
push
fcomps
clc
pop
add
xor
xlat
cli
push
jl
adc
or
and
mov
adc
adc
clc
insb
les
jle
in
sbb
mov
fdivl
imul
ret
xchg
fistpl
in
enter
cmp
dec
cmp
mov
fidivl
daa
movsl
mov
lods
and
aas
push
pop
rcr
hlt
xor
pop
leave
xlat
adc
cltd
hlt
jo
outsl
mov
xchg
xchg
cmp
pushf
mov
push
jle
and
out
xchg
repz
jnp
scas
loop
repnz
aas
in
push
or
icebp
stos
or
push
dec
cmp
pop
lock
add
and
cmp
xchg
fld
aam
adc
sbb
popl
test
ja
dec
jns
loop
std
pop
aaa
jecxz
loopne
stc
cmpsb
push
xchg
test
or
xchg
lock
or
cmp
jge
clc
dec
inc
imul
lahf
add
nop
mull
rclb
sahf
jmp
fs
jmp
stos
or
jl
mov
xchg
mov
jle
mov
mov
add
out
es
insb
push
and
mov
decb
arpl
mov
inc
pop
sub
jno
dec
nop
addr16
xchg
cmp
lods
je
sub
lret
cmp
cli
sub
hlt
test
inc
sbb
xchg
test
push
mov
cmp
xor
movsl
negb
jae
jne
adc
cmp
jge
mov
bound
popa
cli
js
sbb
test
pop
mov
mov
ljmp
fs
inc
and
jo
mov
add
lods
cmc
adc
cld
add
and
stos
insl
dec
clc
out
test
or
and
xor
ja
sub
mov
mov
xchg
aas
mov
xchg
add
xchg
xor
cmc
loope
int
loopne
sub
es
cld
mov
pop
call
in
in
aaa
lret
or
push
or
mov
outsl
cmp
test
adc
jne
out
lret
cli
test
mov
push
stos
fwait
adc
add
stos
push
jne
out
sbb
sbb
outsl
jo
lods
ja
test
xchg
in
inc
das
dec
lea
pop
cmp
lret
sti
mov
sbb
push
outsb
push
push
and
ja
stos
mov
outsb
push
dec
cld
roll
cmp
sahf
add
cmpsl
ret
or
scas
sahf
scas
mov
add
dec
call
popa
lods
cmp
popf
xor
adc
call
add
test
popa
or
mov
scas
push
pop
arpl
add
jb
dec
add
pop
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
xchg
dec
inc
inc
inc
push
xchg
dec
fdivs
adc
mov
jo
lahf
jge
jo
pop
lods
out
lea
out
dec
jnp
and
repz
or
ljmp
fwait
iret
insl
xchg
sahf
in
jae
mov
pop
out
cmp
icebp
xlat
jb
cmc
push
sub
aad
lea
movsb
sahf
std
jg
cmp
mov
inc
dec
mov
out
dec
hlt
mov
sub
cmpsb
push
data16
push
fists
fst
in
and
gs
icebp
xchg
cwtl
xor
adc
jg
pop
punpckldq
xchg
inc
adc
in
jb
mov
jb
cmpsb
out
sti
push
aaa
xor
cmpsl
mov
xor
rol
in
hlt
mov
xlat
fcmovbe
mov
insl
pop
in
out
je
sub
test
fcmove
mov
cwtl
cwtl
pop
xchg
sahf
iret
xor
out
testl
add
cmpsl
pop
movswl
cli
or
mov
inc
jle
push
movsb
add
test
xchg
out
and
pop
addl
stos
leave
mov
test
xchg
data16
sbb
outsb
and
fwait
aam
idiv
add
sub
xchg
sbb
mov
jg
cmp
sbb
mov
jns
xor
push
pop
xchg
rol
push
popa
fmuls
sbb
jl
push
inc
xchg
xor
repnz
cs
out
fidivrs
jle
shrb
aad
clc
bound
xchg
iret
add
mov
fnsave
insb
add
mov
inc
xor
mov
sub
sbb
lock
and
dec
dec
add
lods
push
cmp
sub
jnp
ret
mov
repnz
xchg
int3
push
jmp
push
imul
mov
cmp
out
cmp
addr16
and
addr16
cmp
dec
jo
stc
xchg
and
fs
rcrl
sbb
jg
jbe
add
out
dec
mov
scas
lods
sbb
divb
popf
pop
nop
sbb
xchg
insl
or
mov
test
and
push
daa
in
cmp
clc
jno
and
xor
mov
cmp
add
mov
sub
push
std
xor
orb
loopne
add
mov
ss
andl
dec
xlat
gs
mov
arpl
stos
insl
xchg
clc
mov
shll
test
loop
and
loopne
mov
ja
push
in
push
loop
std
dec
and
xchg
dec
mov
mov
test
inc
fs
stos
adc
mov
jb
loop
fwait
pop
bound
pop
or
or
divb
pop
jo
test
loopne
mov
sub
in
sbb
popa
lods
pushf
ljmp
or
push
pop
lcall
cmp
mov
stos
push
cmpsl
mov
das
int3
xchg
lea
dec
ds
inc
lods
hlt
push
sbb
pushf
jae
xchg
dec
mov
sbb
add
inc
mov
aad
inc
aad
sbb
ljmp
push
cmp
jne
out
aaa
icebp
sahf
ror
lods
out
fld
xlat
scas
pop
addb
adc
and
push
and
pop
in
ja
push
mov
lret
inc
cmp
xor
push
jb
inc
test
jne
popa
cmc
jae
les
cmp
leave
push
jge
mov
popf
vpaddusb
push
les
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
lcall
out
mov
inc
aad
mov
lahf
jge
jo
cs
cmpsb
ljmp
scas
call
lret
add
cli
and
popl
jno
dec
lret
shrb
sub
pop
adc
and
ror
push
fcomps
jg
lret
out
dec
and
ljmp
pushf
mov
hlt
mov
jbe
lea
out
ja
push
push
jp
push
mov
inc
add
test
xchg
push
orl
lods
dec
mov
sti
test
cmc
loop
jnp
push
or
sbb
inc
leave
cmpb
mov
cltd
sbb
fisttpll
fldenv
push
in
aam
xlat
jns
jne
aaa
xor
movsl
ljmp
ret
inc
fnsave
or
movsl
mov
lahf
pop
sbb
xchg
lea
and
das
testl
mov
xor
popa
jae
inc
insw
push
clc
iret
repnz
ret
popf
loope
adc
outsl
sub
mov
out
mov
add
add
ds
inc
sbb
clc
and
pop
jmp
jl
outsl
cmpsb
adc
mov
out
mov
lock
subb
mov
shlb
xchg
inc
jmp
cmp
pop
icebp
cli
int3
cltd
or
sbb
mov
hlt
imul
inc
enter
xor
pop
je
dec
ja
add
add
adc
mov
aaa
xchg
jge
outsl
or
jo
xchg
rorb
adc
fcoms
jbe
lret
popa
pop
jp
popa
xor
mov
out
adc
inc
jle
jp
jl
cmp
lods
or
dec
sbb
lret
pusha
in
sahf
lods
mov
push
sbb
je
pushf
repnz
cmp
cs
sti
faddl
dec
out
xchg
mov
pusha
repz
add
rcrl
add
ret
xchg
popf
out
push
ds
pop
and
sbb
das
inc
add
insl
xor
add
out
ds
out
sbb
pushf
ds
mov
lret
pop
dec
xchg
adc
int
xor
ljmp
mov
xchg
rcrb
jecxz
jo
lods
into
addr16
sub
shl
imul
test
fisubrl
or
jle
aaa
sbb
cmp
dec
mov
stc
jne
in
dec
das
sbb
and
out
es
js
mov
aaa
xchg
pusha
test
in
push
ret
xlat
popf
xchg
iret
xor
shl
and
jns
and
xchg
lret
mov
icebp
add
lahf
addr16
cmc
mov
in
cltd
sub
data16
lock
lret
arpl
imul
cmp
adc
pop
jl
dec
hlt
xor
mov
sub
into
pop
pop
fsub
negl
xor
ljmp
and
cld
or
push
es
ss
daa
arpl
inc
dec
jmp
mov
repz
pop
add
rorl
xchg
xchg
cmp
pop
xor
test
movsb
sub
arpl
imul
ficoms
xor
scas
adc
push
xlat
cmc
arpl
mov
jp
add
jle
lock
pop
sti
aas
jecxz
das
or
jmp
sti
push
mov
inc
xchg
jge
cli
cmova
pop
inc
stos
adc
inc
arpl
shlb
jle
sub
nop
xchg
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xchg
dec
push
adc
push
xchg
dec
lock
pop
dec
inc
icebp
mov
mov
lahf
jge
jo
loopne
ss
pushf
fsubs
jecxz
jg
xor
xor
pop
mov
sbb
push
push
scas
test
sub
and
adc
imul
fisubrl
loop
adcb
and
push
outsl
pop
add
int
push
add
out
add
and
loope
inc
bound
pop
scas
loope
outsb
pop
jg
mov
mov
push
inc
adc
shll
pushf
repz
sbb
adc
adc
pop
movsl
or
bsr
mov
dec
rorb
faddl
jb
jne
aaa
push
jnp
jbe
xchg
lods
int
iret
xchg
insl
pop
stos
andb
jle
test
dec
sbbb
cmp
nop
fmull
divl
int
popf
cmpsl
inc
ret
divl
loop
popf
outsw
xchg
xchg
mov
dec
lret
or
ds
int3
adc
in
inc
cs
mov
adc
pop
xor
test
loopne
mov
cmpsb
hlt
dec
inc
mov
fwait
data16
mov
inc
mov
pushf
addr16
test
add
andb
or
xor
pop
mov
adc
test
jecxz
xchg
icebp
inc
sbb
popf
dec
cmp
aaa
mov
or
pop
sbb
cwtl
xchg
out
mov
inc
int
cmp
inc
rorb
rcrl
adc
fstl
imul
xchg
icebp
fwait
jle
int
pmaddwd
gs
rcrb
mov
loopne
movsb
mov
xchg
aam
xorb
mov
bound
sbb
push
cmp
sbb
mov
arpl
jo
inc
sbb
icebp
fwait
daa
adc
jmp
cmp
enter
movlhps
mov
xchg
js
rcl
incb
call
arpl
sbb
pusha
fwait
xchg
inc
xor
adc
das
shll
insb
movsl
jae
sbb
cmp
cmp
cmp
popf
pop
bound
in
or
push
push
andb
push
xlat
fs
push
xor
cmp
mov
pushf
imul
adc
dec
mov
jne
sbb
xchg
cmp
lahf
fidivrs
inc
jbe
pop
jg
pop
and
cltd
jo
movsb
cli
std
push
or
test
fcmove
jb
loopne
mov
push
cs
lea
and
out
xchg
add
add
shr
clc
sub
into
test
xorb
lods
add
push
xchg
mov
loopew
in
xor
jge
xchg
or
inc
xor
enter
int
jl
cmp
pop
lret
test
cwtl
push
push
mulb
pop
pushf
movsb
stc
repz
push
inc
xor
addr16
aam
fdivrl
fnsave
xor
mov
jnp
or
out
jge
mov
pop
es
std
mov
jl
addr16
xchg
addr16
lock
sahf
outsb
fisubrl
scas
xchg
xchg
jns
dec
push
sbb
push
jecxz
xchg
sbb
lods
ret
into
xchg
xor
xorl
fs
xchg
mov
xor
xchg
jl
andb
orb
out
or
add
out
xchg
sbb
xchg
aas
xor
add
jg
cmp
xor
add
mov
mov
mov
mov
xor
jmp
sbb
pop
pop
pop
pop
sbb
adc
int3
push
outsb
test
xchg
jo
lahf
jge
jo
frstor
fimull
xor
push
ret
pop
pusha
pop
dec
ret
and
aad
and
xchg
call
les
loope
ja
aaa
arpl
ljmp
jp
xchg
dec
cmpsl
mov
rolb
mov
stc
cmp
add
jmp
mov
pop
inc
ja
pusha
daa
dec
movsb
xor
cmp
adc
daa
cmp
fstpt
imul
jge
xor
cwtl
js
in
sbb
fdivrl
pop
lea
xchg
and
int
add
jle
cwtl
push
out
ret
jg
mov
inc
adc
pushl
xor
aas
aaa
jl
xor
xor
rcl
aam
out
out
inc
out
inc
mov
jb
and
lcall
stc
xchg
pop
imul
outsb
mov
sub
cmpsb
lret
jge
jp
std
mov
cmp
lea
pop
push
out
loop
cmp
ret
in
pop
mov
mov
add
popf
xchg
lods
ss
mov
stos
and
mov
dec
xchg
pusha
sti
or
loopne
jne
dec
xchg
sar
mov
inc
lret
mov
movsl
stos
je
sbb
loope
sub
sarb
int3
cmpsl
jp
xchg
ja
jecxz
jb
or
pop
mov
lods
xor
pushf
rcrl
push
jge
xchg
xchg
test
sbb
mov
adc
int3
and
push
jo
xchg
rcrl
stos
aaa
js
sbb
or
movsl
mov
popl
stc
out
push
dec
and
negl
loop,pt
lea
or
mov
mov
lea
jns
adc
pop
lock
dec
addr16
pop
dec
xchg
testb
movsb
call
loopne
xlat
mov
cltd
fs
push
cmpb
loopne
jmp
test
inc
mov
lods
cmp
xchg
cmp
push
jl
pushf
scas
daa
testl
and
jmp
mov
aam
add
inc
add
cmpsl
and
orb
out
cld
adc
cli
rcl
repnz
mov
adc
jmp
sub
mov
dec
insl
mov
in
loope
mov
fldcw
mov
push
pop
add
test
push
scas
aaa
xor
mov
cmpl
dec
inc
jmp
mov
stc
lcall
stos
cmp
mul
mov
dec
stos
mov
mov
push
cmp
lahf
out
mov
in
icebp
push
mov
out
adc
push
pushf
mov
test
lret
js,pt
mov
dec
cmpsl
xchg
jns
arpl
add
cmp
xchg
pusha
mov
ljmp
mov
sbb
adcb
dec
shr
orl
in
imul
sub
xchg
fs
shll
sub
les
mov
sbb
movsl
or
shll
dec
jmp
jb
xchg
out
and
sub
inc
je
cli
or
jmp
xchg
add
push
xchg
std
jno
loopne
push
sub
dec
mov
ljmp
sbb
arpl
insb
bound
daa
je
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jmp
mov
popa
jbe
xchg
sbbl
or
jo
push
sbb
shll
xor
icebp
cmpsl
adcb
sahf
mov
arpl
enter
dec
imul
mov
adc
xchg
daa
int
insb
and
loop
sub
adc
lret
mov
adc
sbb
test
mov
jl
cwtl
enter
mov
dec
add
fldt
jae
jmp
or
ficompl
adcb
xchg
icebp
pop
mov
xor
jb
inc
dec
xor
push
mov
mov
roll
sub
mov
pop
or
push
mov
pop
mov
in
push
out
add
xchg
cmpsl
jge
pushf
aam
xchg
enter
sbb
push
mov
and
addr16
jne
jg
lods
orl
mov
popa
and
pop
repnz
cmp
lock
fistpl
sarb
inc
or
stc
imul
mov
daa
in
lret
hlt
sub
pushf
les
stos
in
mov
and
mov
xchg
movsb
out
jns
or
out
add
dec
push
inc
and
jecxz
dec
inc
push
xor
test
and
in
icebp
mov
push
xor
gs
je
aam
add
icebp
xorb
dec
and
pop
cmp
push
jmp
addl
outsb
fs
lcall
inc
add
mov
dec
ljmp
mov
or
mov
cwtl
xchg
and
cmpsl
or
into
push
fs
adc
faddl
and
psubq
aam
fidivrs
dec
push
inc
mov
ljmp
jo
adc
mov
mov
jo
push
in
out
sub
sub
outsb
leave
ret
sti
xor
sbb
int3
out
out
pop
adc
pushf
and
shl
xor
fcmove
cwtl
pop
cltd
stos
lods
jbe
ja
fnstsw
out
test
mov
je
push
inc
jns
mov
clc
mov
push
movsl
and
push
sbb
and
fstl
fbstp
cmp
or
sub
outsl
jb
loop
fisttps
in
movsb
nop
bound
dec
fwait
mov
pop
sti
data16
nop
and
mov
fldcw
jle
lret
or
dec
dec
xor
fcompl
xlat
test
rcrl
cwtl
sub
xchg
rol
int3
pop
lock
or
stc
pop
cmpsl
mov
popa
rclb
adc
jb
inc
jle
or
mov
stc
lcall
pop
imul
cmp
sbb
inc
and
mov
mov
pop
hlt
xor
sub
test
pop
adc
xchg
mov
aad
xlat
add
bnd
aam
cmp
sbb
jp
mov
add
mov
int
aas
out
jl
cld
xchg
fs
enter
pop
inc
ja
sti
stc
ret
popf
push
repnz
cmp
push
mov
and
outsb
and
push
or
pop
xchg
insl
jge
dec
push
adc
popf
push
lret
mov
add
dec
imul
mov
adc
jne
adc
nop
mov
ljmp
enter
ljmp
lods
mov
inc
js
sahf
adc
cli
jecxz
bound
inc
cmp
imull
lods
dec
xor
mov
xchg
decl
fdivl
rolb
rorl
scas
xlat
mov
xor
add
jmp
xor
out
icebp
xor
cmp
lods
les
popf
jo
lahf
jge
jo
jge
or
mov
mov
xchg
mov
jecxz
fldt
lcall
aaa
mov
aaa
fs
and
jno,pt
jecxz
or
jns
cmpsl
pop
cmp
lea
push
lret
shr
rorb
mov
dec
pop
mov
lock
roll
sbb
stos
shl
push
int3
push
mov
jns
or
jg
adc
lcall
cmp
mov
int3
int
iretw
xchg
sub
or
je
popf
lret
push
push
xor
jbe
fdivr
cmp
decl
add
lea
push
lods
pop
dec
jnp
or
decl
sub
add
repnz
int3
leave
dec
add
adc
mov
cltd
mov
ja
sbb
dec
mov
mov
stos
push
daa
mov
ljmp
jo
xchg
pop
mov
lds
subl
cwtl
pop
ret
jo
and
inc
mov
std
dec
dec
inc
shlb
push
lret
xchg
push
xchg
mov
add
insl
insl
rcr
out
dec
add
or
and
sbb
sbb
aaa
xchg
test
lods
lock
loope
push
roll
repz
push
out
mov
cmp
sti
icebp
cmp
xor
mov
cld
ds
fimuls
xchg
push
fmull
pop
mov
into
push
inc
xchg
dec
daa
inc
int3
inc
shlb
mulb
and
ja
mov
jge
ror
cwtl
out
scas
xor
dec
test
xor
xchg
testb
int3
std
sub
push
mov
stos
lds
dec
movsb
jnp
scas
jae
add
out
out
or
pusha
loope
cld
hlt
jae
sbb
inc
hlt
scas
arpl
sbbl
stos
ficomps
addr16
ret
ret
dec
mov
repnz
test
push
mov
aad
pop
mov
or
push
jbe
loopne
cli
jns
in
cmp
push
inc
push
mov
sbb
mov
inc
aas
sar
dec
lods
adc
push
insl
mov
addb
xlat
lcall
adc
cmpsb
dec
sbb
pop
jge
adc
fwait
int3
dec
mov
cli
or
dec
pop
sti
orb
xor
shlb
lds
stos
jne
fisttpll
xchg
jge
mov
out
pop
and
push
int
cmc
mov
mov
arpl
and
adc
fcomp
mov
ja
fnstcw
or
aam
repz
and
sbb
out
and
mov
test
orl
inc
pop
jecxz,pt
mov
jp
xchg
adc
test
ds
test
in
xor
ds
out
fistpll
mov
push
cwtl
aas
dec
mov
jmp
push
addb
ds
das
aam
ret
fistl
lret
pusha
inc
dec
push
mov
fwait
sbb
xchg
pop
ljmp
jne
incl
negl
mov
push
sub
or
dec
movsl
pop
push
ret
iret
xchg
lahf
clc
cmp
call
mov
cwtl
inc
sbb
push
cmc
mov
ljmp
cmp
sbb
pop
mov
cltd
vpsrlw
shlb
clc
adc
mov
cmp
and
popa
inc
andb
and
cmp
clc
mov
xor
mov
sub
jmp
out
inc
push
jno
ljmp
insb
fucomip
leave
cltd
jo
lahf
jge
jo
and
or
push
cmpsl
test
mov
lea
add
xor
xchg
loope
data16
or
push
push
xchg
test
into
in
add
xchg
xor
ds
fbld
out
pop
int
and
jg
lcall
pop
xor
push
repz
lods
outsl
adc
les
movsb
pop
mov
rol
mov
jle
jo
insb
fwait
loop
push
adc
push
mov
adc
addr16
pop
ficoms
push
inc
loope
pop
pop
jle
aad
test
cmp
push
inc
cmp
les
test
mov
jg
jmp
imul
mov
out
pop
xor
jg
jns
pop
mov
xchg
or
cli
mov
cltd
mov
push
inc
sbb
push
gs
lahf
fistpl
pop
cmp
or
fwait
out
lcall
imull
test
sub
ss
jno
popf
or
pop
push
jae
xor
or
cmp
push
mov
cltd
cltd
cmc
ficompl
or
dec
dec
out
jno
daa
push
mov
pop
mov
lea
and
pop
rcl
push
add
push
aaa
add
push
pop
subb
inc
scas
xchg
inc
dec
mov
jmp
xor
fistpl
gs
push
mov
or
mov
jb
daa
fiaddl
dec
orl
jns
mov
dec
iret
cmp
repz
std
jne
inc
pop
fmull
push
mov
inc
stos
jo
jge
repz
fwait
push
jb
pop
mov
ss
sbb
mov
push
shl
ret
in
fwait
ror
es
cwtl
das
loope
je
fists
jg
or
xor
push
mov
mov
cmp
pop
ds
lcall
xor
fstps
xor
adc
mov
push
outsl
sub
scas
xor
dec
and
xchg
and
dec
in
and
add
lcall
popa
aas
jecxz
push
add
xor
ds
movsb
cmp
mov
gs
adc
daa
or
cmp
scas
das
mov
test
cs
fdiv
ficomps
sbb
push
mov
sub
jne
mov
sbb
in
insb
mov
inc
sub
repnz
add
adc
lahf
pop
in
popa
lret
pop
push
mov
cmpl
mov
or
in
in
push
mov
out
es
pop
pop
ret
push
xor
mov
inc
cmpb
inc
loop
stos
inc
sub
sub
stc
adc
mov
pop
ja
loopne
dec
sbb
mov
inc
cwtl
mov
sub
jno
ret
pushf
movsb
sbb
test
scas
xchg
xor
jge
rclb
xchg
nop
add
push
fdivrl
movsl
int
insb
cwtl
cmpsl
push
and
jl
or
dec
inc
mov
jg
aaa
sarb
aad
inc
pop
stc
pop
push
adc
and
stos
xchg
sub
pop
call
push
sbb
mov
adc
arpl
ret
mov
scas
sub
out
xchg
cmp
mov
out
or
add
add
sti
add
mov
incb
cmp
or
inc
xor
fisubl
cmp
push
popa
insb
mov
cmp
insb
lcall
icebp
inc
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
orl
push
sbbl
call
andl
test
jne
xor
movl
jmp
adcl
push
call
sbbl
test
movl
je
call
cltd
movl
cmp
jne
movl
cmp
jne
push
push
adcl
push
push
push
push
push
xorl
push
orl
call
movl
jmp
push
call
test
je
sbbl
push
andl
call
movl
jmp
push
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
movl
lea
adc
mov
adcl
lea
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
or
mov
or
mov
mov
push
mov
subl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
jmp
mov
add
mov
mov
mov
movl
cmp
mov
movl
je
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
xor
andl
add
imul
mov
movl
jmp
sbb
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
or
xor
sub
add
mov
mov
mov
xor
add
movl
cmp
jne
subl
pushl
andl
pushl
adcl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
adc
mov
mov
xorl
push
push
mov
xor
not
push
mov
add
sbb
jmp
sub
gs
mov
fstps
ret
cmpsb
jo
ret
jg
jo
movsb
and
loopne
enter
jl
lahf
mov
lahf
clc
jo
cmpsb
negb
scas
xchg
ja
push
mov
test
jne
jns
pop
dec
das
and
cwtl
rcl
out
data16
fs
inc
test
addb
mov
add
gs
repnz
push
imul
push
insb
cwtl
out
add
lds
inc
push
mov
ss
xchg
jmp
scas
adc
push
mov
faddl
pop
jp
xchg
jae
insl
dec
pop
inc
xchg
in
cmp
sub
xor
adc
out
sub
es
push
mov
daa
push
mov
call
push
sub
ficoml
mov
pusha
aam
or
or
and
jge
fldcw
mov
push
mov
ja
push
std
adc
sbb
jno
bound
es
jmp
ja
jg
fidivrl
mov
int3
jecxz
addr16
in
loop
mov
fmull
jns
mov
out
mov
dec
in
insb
mov
jae
out
push
jae
js
int3
sub
decb
jp
and
cmc
lock
call
mov
mov
cld
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
imul
mov
sub
mov
and
mov
sbb
xor
add
mov
jmp
icebp
ja
pop
inc
scas
icebp
jno
push
inc
movsl
push
pop
fnsave
cmp
jo
hlt
or
jge
or
mov
push
cmp
call
pop
rcrb
in
jge
inc
ja
mov
mov
xchg
sarb
jmp
mov
das
inc
cmc
mov
addr16
repnz
adc
lock
pop
push
insl
aas
leave
mov
pop
xchg
or
jb
add
xor
fsubs
clc
and
dec
cmpsl
popa
push
sub
xchg
cmp
mov
std
lret
jne
out
cmpsb
or
inc
push
imul
das
add
mov
loopne
pop
inc
out
jne
jge
outsb
mov
out
je
fisttpll
rorb
pop
lods
or
lock
cwtl
sub
jmp
insb
jbe
dec
sbb
sub
cmpsb
xchg
test
sub
jno
ja
test
in
dec
incl
cmp
cltd
jmp
push
or
lds
pop
mov
push
dec
cmp
push
xchg
xchg
xchg
jo
push
mov
je
sub
pop
xchg
daa
imulb
or
dec
cli
ffreep
mov
xchg
add
repnz
jge
out
aaa
pop
ret
loop
fs
cltd
push
lea
imul
orl
sub
xor
inc
call
and
lea
mov
jmp
rorl
sbb
mov
mov
jo
lahf
ror
push
push
mov
stos
pop
mov
hlt
add
loopne
dec
adc
mov
repnz
cmp
in
es
cltd
jno
notl
jg
out
mov
lret
mov
shrl
mov
dec
mov
or
out
inc
not
ret
push
outsl
push
sub
xchg
idivl
cmp
pop
lahf
ss
add
jb
insl
push
cmp
and
std
mov
pushf
lock
movsl
jns
mov
nop
in
or
xchg
jbe
loop
ljmp
mov
mov
sub
bound
and
leave
mov
dec
addb
pop
or
mov
jnp
pop
mov
scas
imul
push
mov
leave
fisubl
loop
je
and
orl
stos
and
cmp
lcall
les
push
aam
fdivrp
jmp
int
fwait
mov
repz
loop
mov
mov
outsb
xchg
aad
jle
insl
adc
sbb
leave
add
adc
pop
mov
je
pop
sbb
out
scas
cmp
cmc
xor
adc
push
fwait
ss
movsl
jp
out
into
fidivs
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
neg
mov
add
xor
add
sub
mov
mov
adc
mov
mov
adcl
jmp
cmp
in
fcomi
jecxz
icebp
xor
iret
cmpsb
inc
lock
jo
jg
jo
mov
push
jno
test
call
or
cli
dec
adc
push
xchg
push
xorb
imul
mov
sub
arpl
cwtl
xchg
in
pop
das
mov
fdivrp
push
stc
adc
jecxz
add
xchg
aad
dec
ds
jle
mov
daa
xchg
mov
daa
js
push
push
xchg
in
hlt
popa
lock
je
sub
lods
out
lods
leave
in
jl
jmp
push
rcrl
sub
in
mov
pop
mov
repz
add
data16
dec
xchg
rorl
test
jbe
dec
mov
xor
fwait
add
fldcw
dec
rcl
jl
lea
adc
imul
cli
das
add
in
xor
dec
test
mov
push
sarb
bound
and
sub
loop
loop
adc
sbb
jb
les
rcrb
cmpsl
ret
jge
daa
cmp
or
in
mov
scas
add
pop
sbb
inc
sbb
ljmp
neg
mov
outsb
xor
jne
or
jne
or
jb
pop
aas
mov
pop
and
loope
sub
cmpsl
out
pop
push
mov
test
pop
mov
jp
push
ficoml
xchg
jge
or
mov
adcl
mov
xorl
movzwl
add
neg
movl
sbb
mov
mov
sbb
mov
xorl
xor
andl
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movzbl
adc
mov
xorl
mov
andl
xor
notl
add
movl
cmp
movl
jmp
fistpl
shlb
sbbb
fisubl
jo
ret
jg
jo
adc
adc
pop
push
jmp
add
sahf
inc
cmp
arpl
lcall
fsubl
jns
mov
mov
fucomi
cs
mov
and
xor
mov
loopne
push
sub
fmull
jge
cmpsl
aas
pop
scas
jns
js
aad
dec
pop
sbbl
add
dec
pop
push
push
xor
insb
push
cli
cmp
out
jns
push
xchg
pop
inc
cmp
lret
arpl
arpl
jb
icebp
loopne
inc
outsb
inc
push
mov
fnsave
mov
dec
inc
push
and
jle
xlat
testl
lcall
in
cmp
push
mov
and
inc
sbb
inc
adc
imul
sbb
xor
inc
sahf
push
shrl
xor
mov
subb
jae
pop
dec
xchg
aaa
inc
cmpsb
int3
fwait
mov
and
movsl
push
ljmp
popf
jge
cmpsl
pop
push
notl
pop
in
mov
and
push
je
int
dec
test
jae
mov
outsb
sub
imul
jmp
movsl
adcb
std
gs
jae
mov
inc
sbb
test
lret
or
add
gs
inc
add
movb
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
jmp
or
shrb
mov
inc
pop
mov
call
jo
ret
jg
jo
inc
mov
insb
and
jae
in
sub
cmp
out
movsb
je
sbb
sbbb
andb
jne
mov
shll
jb
outsb
push
shrb
xchg
pushf
or
iret
adc
mov
push
rolb
sbb
mov
mov
pop
das
mov
leave
cld
mov
lea
movsb
std
pushf
fdiv
cmpsb
movq
insb
pop
mov
and
aad
adc
scas
or
dec
aas
xor
mov
mov
shrb
xor
fs
stos
xor
lock
sub
push
leave
lods
es
test
lahf
jb
mov
mov
xor
add
fcmovnb
adcb
rorl
push
pop
mov
or
dec
push
push
xchg
add
mov
sub
stos
cmpsb
stc
xor
bound
out
testb
adc
adc
lahf
insb
js
mov
cmpsl
and
xchg
loop
shl
cmpsl
es
ds
fsubrs
outsb
mov
out
push
adc
jnp
dec
push
repz
inc
mov
aam
lock
out
loopne
dec
jecxz
pop
jae
sarb
jl
subl
in
movzwl
jmp
movntps
push
rep
mov
push
jle
mull
mov
jg
jo
mov
out
add
aam
outsl
adcb
inc
pop
rcrb
hlt
and
and
cmpsb
mov
mov
mov
lret
rol
pop
pusha
lods
adc
cmp
and
fmulp
push
mov
xor
out
and
push
sub
addr16
out
pushf
mov
sbb
adc
dec
mov
mov
pop
loop
push
imul
mov
decb
and
loope
jns
loope
xor
outsl
call
adc
sbb
xorb
push
cmp
in
mov
sub
adcb
mov
ja
sub
lods
sub
mov
inc
cmpsl
or
dec
push
jge
and
imul
pop
pop
sbb
xor
cmpb
push
popa
ljmp
aad
out
dec
notl
mov
mov
mov
pop
mov
pushf
lahf
cmp
add
dec
cmp
movsl
pushf
mov
jns
jbe
getsec
push
xor
mov
mov
cmpsl
adc
mov
push
pop
insb
cwtl
outsb
lcall
pop
or
jg
xor
sub
sub
mov
jmp
jmp
int3
push
icebp
xchg
icebp
je
in
pop
mov
xchg
or
jg
jo
cli
ficoms
repnz
cmp
subb
and
lret
and
fistpll
pop
es
fimull
push
or
aaa
lcall
and
fldenv
or
inc
loope
pop
jmp
dec
xchg
xchg
add
enter
inc
popa
mov
dec
jae
mov
push
mov
xchg
mov
addr16
lahf
push
lret
outsb
push
movsb
xor
jp
fistpll
adc
jns
pop
stc
cmp
sbb
and
jl
push
push
pop
pop
ds
cmp
mov
jns
fcoml
lret
cmp
cmp
mov
push
out
lods
test
mov
xchg
pop
fstpt
adc
iret
jg
popf
rcrl
xor
in
bound
xlat
aas
movsl
mov
pop
rcrb
mov
loope
xor
popf
loopne
mov
pusha
lret
dec
mov
cmpsl
push
xchg
push
mov
les
and
inc
mov
add
inc
js
in
shrl
pushf
sbb
sub
jge
and
pop
aad
mov
stc
or
sub
ffree
into
lods
out
jns
mov
sti
and
lea
mov
mov
cmp
jmp
mov
enter
lea
leave
inc
inc
notb
jo
ret
jg
jo
add
inc
fnstenv
jmp
out
pop
nop
cmpsb
push
sub
roll
les
leave
lcall
cmpsl
lret
test
mov
pop
int3
and
out
clc
and
xor
out
aas
enter
jmp
cmp
sbb
mov
cwtl
cmp
ljmp
mov
xor
test
scas
ds
test
loopne
push
in
leave
repnz
out
imul
jb
jbe
adc
adcl
push
xor
add
cmpsl
mov
pop
jbe
ds
dec
push
sahf
repnz
fists
and
lods
insl
xchg
xor
lds
jbe
test
cmp
loope
pop
fistpl
xor
outsb
pop
inc
div
sub
mov
test
xor
cmp
jnp
sub
mov
push
jmp
dec
scas
ja
jecxz
loopne
xchg
shll
add
fimull
into
cmp
push
cmp
bound
in
fwait
push
jo
push
xchg
push
adc
mov
incl
adc
pop
xchg
sbb
mov
adc
jb
aam
fdivs
add
mov
jmp
lods
ret
jno
insl
popa
fdivrs
xchg
test
stos
jo
ret
jg
jo
pop
xchg
inc
add
cwtl
inc
xor
out
call
in
push
rcl
in
lods
enter
outsb
jp
loopne
jecxz
mov
pusha
push
addr16
lret
stos
loope
or
lods
and
xchg
adc
out
fiaddl
andl
stos
xchg
mov
inc
imul
adcl
adc
sbb
aas
mov
shr
xchg
jge
insl
faddl
mov
lcall
fnstenv
xchg
xchg
scas
mov
xchg
xor
ss
and
inc
xorb
cmpsb
cmp
push
or
xchg
into
pop
ss
fstps
iret
js
iret
sbb
add
sub
mov
out
cmpl
dec
sub
clc
jns
outsl
stos
jno
mov
inc
push
dec
pop
aam
mulb
dec
jge
mov
std
mov
arpl
mov
dec
mov
xchg
jb
xchg
mov
insb
add
sbb
push
imul
dec
and
and
aam
addr16
pop
push
mov
stos
cltd
add
jo
mov
sub
es
int3
mov
sub
xor
nop
and
add
in
add
mov
mov
xor
add
cmp
je
mov
jmp
dec
int3
cmp
mov
add
shlb
test
jo
or
xchg
sub
icebp
fstpt
icebp
adc
enter
fnsave
aam
mov
std
jge
jnp
aam
ss
xor
sub
mov
gs
xlat
add
pop
nop
mov
sub
sub
out
cmc
and
dec
imul
out
inc
push
mov
pop
incl
jae
test
mov
rcll
movsl
adc
in
repz
sbb
scas
andl
scas
scas
fidivs
testl
adcl
ss
lods
movb
test
xchg
push
sbb
pop
ficoml
push
stos
mov
mov
pop
jle
sti
les
mov
das
add
aam
imul
cltd
mov
xchg
jne
stos
inc
cmp
jo
pop
js
sub
subl
or
les
mov
pop
aam
ficompl
inc
add
xor
mov
imul
mov
push
int
mov
xchg
mov
inc
mov
scas
shll
mov
call
jg
jnp
add
add
ror
icebp
imul
stc
js
stos
cmp
jo
xor
test
mov
outsl
aaa
aas
inc
cmp
jge
inc
ficompl
sub
push
and
das
pushf
push
xchg
jnp
mov
sbb
inc
cli
push
jns
outsl
mov
mov
sti
inc
call
xchg
movsb
shrb
push
pop
ja
mov
lock
hlt
pop
adc
imul
ja
or
xchg
xchg
xor
or
outsb
lods
js
inc
dec
je
add
ljmp
std
sbb
insb
inc
icebp
dec
dec
out
xchg
ret
lds
pop
call
icebp
rcrb
mov
imul
push
and
xchg
filds
mov
lods
or
dec
scas
call
cli
xlat
icebp
stos
xor
in
dec
stc
aaa
scas
pop
push
xchg
fdivrl
ret
stc
ja
movsb
push
jns
sub
mov
jne
jmp
cld
dec
out
repz
jp
cli
shlb
gs
in
test
xchg
iret
js
lock
scas
fbld
sarb
xlat
lds
mov
mov
dec
ja
cmp
call
int
fisttpll
rcrl
shl
out
xchg
dec
inc
mov
repz
add
int
add
add
rorl
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
jmp
pop
out
dec
mov
mov
testb
dec
dec
and
jo
ret
jg
jo
gs
sbb
ds
pop
xor
mov
dec
xchg
lret
mov
enter
loope
mov
bound
dec
je,pn
into
testl
mov
jno
nop
push
xchg
stos
sbb
or
jmp
scas
mov
testl
orl
or
or
xor
aaa
repnz
mov
mov
sub
or
clc
xchg
mov
aad
push
pop
iret
xor
xchg
cmc
jb
xchg
lds
adc
pushf
in
dec
insl
xor
faddl
add
lcall
inc
pop
xlat
mov
insb
mov
or
stos
clc
popf
or
xorl
mov
fucomp
jb
and
aas
cld
xchg
sub
cmc
aas
xchg
mov
jae
iret
cwtl
jle
dec
out
add
cmp
aam
mov
xchg
xor
inc
cmpsb
inc
loopne
push
bound
or
stos
mov
push
add
push
adc
call
gs
mov
mov
cmpsb
movsb
push
outsl
shr
cmp
xor
inc
clc
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
ds
adc
dec
xor
dec
popa
pop
mov
jo
jge
jo
cld
cmp
or
ljmp
push
imul
add
push
or
inc
gs
inc
popf
jb
sbb
insb
test
js
loop
sti
gs
mov
sub
or
jne
std
popa
xchg
xchg
pop
mov
imulb
mov
jnp
bound
pop
in
xor
loopne
xorl
jge
pminsw
lods
and
add
add
std
inc
stos
jno
xchg
jnp
aaa
mov
inc
ss
mov
sub
pop
nop
and
scas
xlat
push
and
inc
mov
int
fdivr
add
repnz
jno
int
jl
aam
add
mov
mov
add
mov
jnp
int
or
aaa
push
xchg
or
mov
aam
loop
in
sub
and
rclb
out
movsl
xchg
ljmp
ret
test
imul
add
adc
test
mov
jecxz
dec
les
cmp
mov
out
pop
mov
es
mov
or
pusha
popa
gs
inc
mov
and
add
lret
rclb
loope
cltd
popf
loopne
mov
mov
adc
ret
fldcw
scas
pop
inc
mov
inc
inc
lret
push
sub
iret
bound
testl
pop
jno
add
xor
and
les
aad
cmp
shlb
xor
and
jmp
ljmp
int3
mov
js
aad
addl
cmp
ja
lret
add
outsl
mov
arpl
adc
cmp
sub
div
push
adc
jb
and
stos
int
into
test
push
add
fildl
mov
ret
mov
outsb
stos
addb
mov
jp
cli
scas
sub
arpl
sbb
fstps
insb
jp
ror
adc
sub
lret
loopne
idivb
popf
xchg
jo
filds
rclb
fdivs
jmp
xchg
jno
sub
out
jecxz
in
out
and
jg
shr
in
ljmp
inc
lret
lret
lods
fists
pop
jle
icebp
push
mov
repz
mov
and
fisubl
adc
mov
ljmp
push
or
mov
movsb
stc
cmp
arpl
fmul
dec
xor
sub
jnp
xchg
cld
xchg
sub
jg
sub
cli
add
mov
rorl
or
xor
outsl
cwtl
dec
jnp
xchg
sbb
outsb
pop
mov
mov
sub
push
mov
or
xchg
outsl
dec
xchg
ljmp
xchg
push
nop
inc
xlat
inc
cltd
push
dec
imul
icebp
fistpll
stc
and
xlat
pop
xchg
jecxz
movsb
mov
xchg
movsb
add
or
dec
sbb
lea
in
dec
lcall
repnz
rol
shll
or
sub
jge
stos
and
pop
fistl
jo
cli
jmp
pop
out
cld
mov
adc
xchg
ja
mov
stc
lods
sbb
fcomi
dec
sub
mov
in
push
iret
mulb
sti
or
es
dec
outsl
push
sub
mov
fmull
push
negl
jmp
mov
cli
xor
testb
imul
jo
jge
jo
daa
jnp
jne
movsl
push
rclb
cmp
jmp
ss
jne
sub
lcall
jl
movsb
nop
pusha
cmc
adc
stc
fcmovnb
push
popa
push
dec
cmp
negl
lods
adc
fmuls
push
xor
pop
push
add
cwtl
push
lret
lret
push
mov
addb
adc
or
inc
nop
sbb
mov
in
fsubl
xlat
imul
dec
test
inc
std
adc
pop
es
cmpl
ret
push
fdivrl
push
sbb
lahf
xchg
and
xlat
xlat
cmpsb
int
mov
pop
insl
fimuls
imul
scas
cvtps2pd
aad
movsl
cmp
dec
adc
std
mov
jge
in
sarb
mov
mov
dec
fisubs
stos
and
lea
or
sub
sub
xchg
adc
mulb
imul
pop
dec
repz
xchg
icebp
cmp
icebp
inc
inc
jg
pop
jl
fwait
mov
ficoms
fmul
insl
lret
aas
loopne
sub
xor
xchg
je
bswap
xchg
testb
fistpll
sbb
push
divb
mov
lds
cmc
adc
insl
shlb
xchg
pop
hlt
or
dec
ja
lahf
cmp
jg
aaa
adc
and
xor
aas
dec
sub
mov
das
mov
pop
jns
pop
sbb
pop
xlat
add
daa
jne
leave
or
ljmp
and
sub
or
mov
fisttpl
in
add
leave
xchg
in
cli
inc
das
xchg
stos
hlt
aam
ljmp
push
cli
push
add
cld
pop
mov
shl
test
add
xor
mov
add
xchg
push
stos
push
push
xor
jo
int3
repz
dec
movsb
mov
je
repnz
adc
shl
pop
lret
push
pop
lret
in
outsl
inc
jp
xor
push
jne
adc
add
mov
sahf
mov
hlt
mov
out
dec
jno
pushf
insl
mov
icebp
test
insl
xchg
ret
icebp
insb
xor
enter
addb
adc
test
rcrb
aam
in
or
cmpsb
les
jl
inc
pop
pop
das
stos
xor
mov
and
add
sbb
lea
mov
cmpsb
out
pop
enter
sub
pop
pushf
cmp
int3
frstor
pop
iret
imul
outsb
and
fldt
lahf
cmp
repnz
cmp
addl
mov
inc
push
gs
in
pop
out
and
xor
inc
adc
pushf
decl
test
test
dec
clc
dec
add
mov
test
dec
inc
or
jb
jmp
inc
fptan
mov
iret
ljmp
cmp
jge
cmpsb
pop
cwtl
rol
push
arpl
cld
xchg
sub
mov
lcall
test
shrb
push
outsl
dec
or
pop
or
ficompl
ja
xor
das
jge
push
call
dec
roll
test
pop
and
shrl
lods
dec
test
outsl
inc
fiaddl
add
pop
loope
jo
pop
dec
and
iret
xchg
pop
mov
pop
pop
sbb
jb
push
dec
cmp
mov
or
stos
add
call
test
add
add
cmp
add
add
xorl
xor
movl
cmp
jne
mov
mov
and
mov
mov
movl
add
mov
jmp
fcmovnbe
aam
repz
push
jae
push
into
fwait
in
xor
jge
jo
push
popa
sti
mov
xchg
adc
mov
scas
in
mov
stos
stos
cltd
dec
mov
jnp
fiadds
add
mov
pop
pop
flds
jae
out
dec
mov
cmp
inc
mov
adc
aaa
cltd
out
std
xchg
int3
les
jg
push
xlat
popa
fwait
add
mov
cli
je
movsb
loope
js
and
test
xor
sti
out
adc
add
jne
and
jae
es
pop
push
cld
mov
loop
jecxz
add
stos
stc
out
fcom
mov
mov
repz
shrb
or
add
gs
adc
xor
sub
xchg
shl
hlt
mov
xchg
in
enter
mov
fucomp
ret
cli
pop
call
inc
mov
test
xchg
adc
cmp
dec
repnz
clc
cwtl
sub
xchg
lret
fstpt
or
lods
sub
lea
mov
scas
push
jb
pop
cmp
adc
clc
int
add
clc
cmpb
lods
pop
xchg
fcmovnbe
dec
icebp
cmp
dec
cmpsl
aas
push
pusha
or
inc
mov
jmp
in
fbld
fisttps
adc
push
mov
xchg
lods
loope
fmull
push
xor
ds
addr16
outsl
mov
aad
icebp
xchg
repnz
insb
stos
mov
fisubs
lds
popw
fstps
insb
inc
xor
ret
lods
dec
inc
imul
sarb
xor
push
ret
repnz
cmp
lods
pop
mov
scas
sar
scas
loope
sti
gs
mov
into
mov
xchg
lds
dec
mov
popf
outsb
fadds
mov
cmpsb
int
xor
movsb
out
push
xchg
rcll
push
mov
pop
xchg
cmpsb
inc
mov
rorb
sbb
int3
xchg
adc
cmpsb
shlb
push
add
mov
sub
pop
xlat
dec
cltd
push
sbb
xchg
sub
mov
scas
insb
bound
out
std
lods
pop
cs
lcall
shl
inc
out
cmp
daa
test
sahf
or
cs
movsb
dec
hlt
pop
and
sbb
bound
outsb
ja
lock
sbbb
aaa
imul
arpl
push
cwtl
mov
xchg
push
jp
dec
ret
hlt
sarb
pop
test
sub
jbe
pop
fcmovnu
xchg
pop
sbb
or
mov
mov
cmpsl
cmc
sbb
stos
mov
rol
test
sbb
jne
or
or
enter
ljmp
mov
dec
jg
icebp
test
dec
enter
push
xchg
rcr
and
mov
dec
push
sub
iret
sbb
pusha
xchg
mov
jo
sbb
ret
das
dec
sbb
out
add
icebp
adc
icebp
mov
fsub
outsb
pop
inc
push
push
sbb
mov
dec
or
xor
enter
fs
push
pop
pop
sbb
jae
fldl2t
jp
ds
mov
xchg
mov
addr16
test
push
or
adc
inc
mov
lea
shrb
out
push
mov
into
fs
xor
jmp
insl
or
rclb
pop
mov
add
mov
mov
add
mov
xor
sub
push
sbb
jmp
lods
das
mov
mov
lcall
pop
mov
jo
daa
jno
adc
test
and
test
daa
pop
add
out
es
mov
mov
mov
mov
loope
aam
mov
out
cwtl
or
movsb
push
or
dec
mov
mov
mov
stc
in
mov
lock
nop
iret
jbe
shl
mov
nop
inc
shll
push
mov
lcall
cmpsl
jecxz
jp
push
daa
in
sub
xlat
mov
pop
adc
cmp
pop
neg
and
and
pop
push
imull
dec
dec
xchg
icebp
pop
loop
clc
push
stos
jne
inc
insl
sbb
push
cs
ljmp
into
sub
xchg
out
ret
and
fs
and
pop
jl
cmp
cmp
loopne
clc
add
xchg
or
dec
fldcw
add
jo
mov
lock
cmp
mov
loopne
popa
cmpsl
loopne
pop
mov
or
idiv
cwtl
cli
fcoml
mov
pop
jp
dec
mov
push
jmp
jg
add
add
int
and
fcom
sbb
int
mov
inc
add
mov
adc
enter
mov
and
ja
into
fs
popf
sbb
aas
sbb
mov
mov
mov
stos
xchg
or
jbe
and
sti
in
daa
inc
push
sbbl
inc
push
jbe
popa
sub
dec
push
aad
cli
shr
pop
or
jle
inc
push
push
mov
arpl
rcrl
sbb
cmp
lret
mov
and
dec
dec
enter
pop
shrb
mov
mov
inc
aad
mov
stos
movb
xor
fisttpl
out
adc
in
subb
rcrb
xchg
in
repnz
mov
scas
sahf
jle
add
pop
push
pop
pop
rorl
inc
fwait
pop
push
inc
addps
int3
cwtl
aad
dec
loope
jecxz
and
mov
adc
add
fs
mov
push
pop
cli
or
or
mov
mov
pop
xchg
aas
lret
xor
cmp
rcrb
add
sahf
or
fwait
icebp
loope
jmp
xchg
pop
or
adc
jp
mov
cmpb
repnz
ret
sarb
sbb
pop
fdivrl
jno
adc
jle
lret
iret
cwtl
xor
add
mov
sbb
aam
inc
scas
dec
in
lods
fwait
ret
ret
add
mov
sub
pop
leave
fldcw
xchg
pop
mov
shr
push
pop
jno
jnp
and
mov
jae
lods
aam
jle
push
stos
insb
lahf
shll
push
pop
mov
push
inc
pop
data16
jmp
pop
or
dec
xor
daa
sub
mov
loopne
aad
cmp
movsl
xchg
inc
sub
jmp
xchg
test
cmp
xchg
push
push
aad
out
lcall
mov
or
sahf
jb
inc
ljmp
cmp
jns
push
pop
sbb
jo
jecxz
xlat
fldt
mov
mov
and
adc
cmp
sub
jecxz
mov
and
stos
adc
int
movsb
pop
rcrb
out
sbbl
mov
fildl
cmpsb
cmovo
xchg
sbb
mov
lods
mov
sbb
mov
add
jmp
outsl
mov
or
imul
movsb
shll
sub
jge
jo
inc
inc
push
jmp
push
add
or
ret
icebp
xor
fwait
mov
mov
or
xchg
pop
loop
sub
dec
idivb
cmp
jle
data16
jge
arpl
sbb
jp
xor
cmp
imul
inc
lods
xor
jne
ja
inc
cli
or
gs
fwait
jns
push
orl
dec
dec
outsl
add
pusha
cmp
dec
and
pop
dec
test
mov
jge
sbb
fs
dec
daa
dec
pop
adc
mov
loop
stos
fists
adc
add
addb
clc
and
add
sbb
sub
ss
fiadds
mov
hlt
pop
mov
cmp
scas
and
bound
fwait
je
inc
pushf
scas
adc
push
out
out
fsubrs
adc
in
mov
mov
out
pop
cmp
outsb
jecxz
insl
and
test
mov
cmp
ret
mov
mov
aad
cwtl
pusha
stc
mov
add
clc
hlt
mov
mov
lds
or
daa
cmp
sbb
push
mov
aas
cltd
xorb
push
pop
push
cmp
das
insb
or
push
pusha
xor
repnz
mov
lea
xor
or
aas
cmp
jns
xor
dec
insl
inc
cwtl
insl
dec
mov
jg
mulb
ds
test
pop
xchg
imul
jb
jl
xchg
xor
mov
or
lock
dec
inc
in
or
xor
adc
iret
call
xor
cli
sysenter
cmp
pop
movsl
pop
shl
jmp
mov
mov
or
cmpsl
stc
xor
hlt
xchg
push
lret
pusha
lods
mov
xor
or
repnz
mov
inc
cmpsl
cwtl
aas
push
fcomi
ret
out
dec
setae
fisttps
jl
jp
outsb
push
add
bound
out
lock
test
call
out
stos
xor
ja
and
inc
dec
mov
dec
xchg
test
sub
dec
rorb
cmp
sbb
inc
and
jnp
push
sbb
imul
stos
jg
rcll
inc
xor
clc
lock
lods
inc
mov
xchg
out
orl
lods
jno
mov
movsl
dec
pop
jae
mov
jge
addr16
in
mov
dec
enter
push
xor
or
aaa
inc
incl
push
xor
pop
pop
aam
and
inc
in
imul
push
lahf
mov
mov
mov
adc
mov
mov
jbe
daa
jno
xchg
xchg
fmull
sbb
mov
mov
push
pop
dec
std
cmp
add
fdivrp
push
enter
sahf
push
test
pusha
mov
es
movb
push
movsb
fbld
push
mov
mov
mov
jne
push
mov
popa
loopne
pop
in
pop
adc
mov
enter
jmp
icebp
scas
out
jno
mov
scas
fcomp
pop
push
rclb
fsubrl
xchg
jecxz
out
clc
adc
and
fnstenv
cmp
in
in
sbb
jbe
and
sub
leave
rcl
add
mov
ret
jg
mov
inc
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
jmp
outsl
mov
jae
dec
cmpsl
repz
mov
jo
jge
jo
cld
outsb
ret
dec
lea
loop
stos
xchg
jg
pop
mov
push
sbb
lcall
int3
movsl
in
popa
sar
test
adc
mov
add
push
mov
aam
mov
sub
sub
push
cmp
lret
icebp
xor
aad
push
sub
or
xor
mov
add
cmpsl
pop
imul
mov
fbstp
in
xchg
fiadds
scas
push
fisubs
or
add
sub
loopne
xor
push
mov
out
scas
aam
into
adc
pop
xchg
int3
inc
pop
addl
sub
adc
and
xchg
mov
fs
jbe
add
push
sbb
xchg
push
repnz
sahf
xchg
cmp
sub
in
enter
dec
fcomip
jg
cmpl
push
pop
imul
and
push
cli
xor
fisubrl
xchg
ljmp
cmp
or
out
vpxor
clc
pop
dec
inc
fiaddl
pop
xlat
mov
sub
pop
fnstenv
xchg
ret
mov
jecxz
movsb
xchg
sub
jmp
nop
add
call
movsl
jo
mov
iret
enter
addb
xchg
xchg
cmp
movsb
add
pop
test
movsl
or
lret
fsts
fidivs
xlat
stos
mov
xchg
mov
mov
cltd
idivl
jae
jns
mov
ret
adc
and
out
insl
add
lret
push
pusha
adc
cmp
cmp
ret
je
sub
stos
add
mov
inc
dec
cwtl
jns
decb
fnstenv
mov
rolb
leave
adc
insb
push
cli
mov
enter
iret
lock
sahf
adc
addr16
cwtl
cwtl
mov
ret
fldenv
mov
xor
mov
jnp
dec
mov
imul
stos
movsl
sub
mov
jmp
loope
ror
mov
adc
iret
mov
mov
fildll
js
bound
into
xchg
xorb
xchg
xchg
fldcw
scas
loopne
sub
sub
es
jbe
push
in
outsb
cmpb
mov
data16
in
mov
arpl
mov
addl
push
popf
mov
pop
std
xchg
push
daa
ds
loopne
test
mov
or
sub
or
push
sarb
mov
adc
mov
cs
cmp
pop
inc
push
aaa
mov
addr16
popa
out
notl
fwait
push
jp
pop
xor
adcb
std
adc
sub
test
imul
sbb
xor
add
popf
out
adc
adc
jb
test
xchg
dec
or
pop
cs
out
lock
pusha
repnz
mov
inc
sbb
or
fsubrl
jle
pop
xorl
pop
push
orl
dec
push
mov
adc
test
sbb
stos
dec
lods
cltd
lods
xchg
aas
mov
repnz
lea
movsb
repnz
leave
int3
jmp
cmp
js
and
pusha
and
mov
xor
adc
adc
stos
into
push
in
dec
pop
or
add
mov
pop
in
pop
scas
push
cmp
out
rcll
subl
in
in
dec
adc
outsl
push
jg
mov
mov
sub
adc
mov
push
mov
xor
movl
jmp
xchg
shll
push
paddsw
es
jo
pop
jge
jo
mov
mov
add
rclb
daa
jecxz
popf
jmp
pop
pusha
mov
cmc
push
cld
push
daa
mov
gs
xlat
pop
leave
mov
rolb
mov
ds
mov
add
xchg
ljmp
add
test
sub
jae
dec
pop
add
ds
mov
insl
aad
cmp
lods
inc
add
aam
test
cmp
cmp
xchg
shl
mov
sub
ss
sbb
loope
scas
or
mov
pop
or
fisubl
out
in
and
sub
cmpsl
gs
mov
xor
int3
jle
push
fdivr
sbb
jmp
cwtl
test
popf
aas
sahf
loope
adc
jge
jmp
daa
inc
movsb
cmc
hlt
mov
xchg
add
jmp
and
dec
mov
sbb
js
jbe
fldcw
push
les
lods
fistl
in
subb
push
sub
test
sahf
lock
fiaddl
int
lret
lds
fwait
js
sbb
mov
adc
xchg
lcall
push
and
sti
rol
add
sbb
dec
sbbl
and
shr
push
int
mov
or
xchg
inc
in
inc
js
lods
add
jae
mov
push
clc
jnp
sarb
xchg
insb
test
bound
mov
pop
mov
imul
loop
aad
dec
adc
sbb
jle
xor
test
mov
pop
and
push
es
pushf
shrb
mov
dec
ja
dec
inc
adc
xor
fldcw
popa
mov
ret
sarb
pusha
sub
popa
add
hlt
enter
or
mov
les
mov
and
and
xchg
dec
shll
data16
bound
cmpsb
add
je
and
push
sbb
jnp
stos
mov
mov
dec
add
data16
movsb
dec
xorl
cltd
ljmp
inc
and
mov
in
adcl
pop
and
mov
js
test
insl
lea
dec
es
xor
sbb
push
pop
xchg
xor
lahf
sbb
neg
xchg
je
pop
shll
daa
adc
add
cmpl
pop
push
cmp
sti
repnz
andl
jl
mull
loop
repz
outsl
push
in
pop
rcl
mov
cmp
and
jb
in
insl
pop
aaa
decl
xchg
and
xor
shlb
gs
sub
mov
lock
arpl
test
cmc
or
enter
push
dec
sbb
cmc
lea
jno
push
pop
mov
mov
popf
cmpsb
test
push
push
or
leave
aaa
mov
stos
adcl
jno
ret
inc
mov
mov
mov
sub
sbbb
stos
frstor
popf
adc
int3
dec
fld
aas
adc
ficoms
jno
aad
cmpsl
push
out
add
or
mov
mov
pop
jo
or
flds
jb
lahf
jle
out
sbb
push
cmp
inc
stos
call
push
adc
inc
test
pop
jno
xlat
jg
out
mov
push
mov
sbb
inc
icebp
pop
push
mov
lods
mov
jb
xor
sti
cmp
movl
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
and
leave
adc
adc
call
xchg
cmp
or
pop
jge
jo
mov
pushf
or
sbb
out
ret
mov
call
hlt
dec
adc
lahf
push
jl
lret
jle
or
mov
ficoms
xchg
test
mov
sbb
mov
fdivrs
aaa
mov
mov
loop
xor
pop
into
cld
xor
pop
lahf
mov
or
cli
push
add
pop
ficoml
xchg
pop
loope
mov
aas
and
mov
sti
cmpsl
jne
dec
lcall
aas
mov
jno
testb
xchg
sbb
add
jmp
mov
mov
int3
scas
sub
loop
push
aad
jae
aas
or
dec
iret
and
icebp
jp
add
mov
jecxz
pop
inc
daa
fincstp
add
and
xor
pop
xor
test
loopne
or
and
lahf
mov
inc
test
mov
jnp
daa
inc
fstl
adc
das
popf
mov
les
stos
test
sub
and
cmpsb
cs
clc
mov
and
push
aad
jne
shll
popa
or
cmc
pop
fwait
outsb
jg
sub
pop
mov
lods
lret
mov
movsl
xchg
xchg
repnz
fs
lock
jae
fsubrs
mov
pop
xor
imul
aam
jecxz
add
fdivrl
pop
testl
push
ljmp
mov
inc
pop
add
or
sbbl
mov
mov
pop
cmp
jl
psraw
jnp
lcall
and
lret
ja
popa
mov
mov
outsb
push
fimuls
jle
pop
addr16
je
rcr
repnz
fcomps
mov
pop
icebp
outsl
lock
sbb
or
xchg
sub
jle
pop
pop
cmp
push
fidivs
dec
out
pop
xor
xchg
test
mov
xorb
jae
dec
jno
stos
push
popf
mov
lret
or
push
sub
jg
mov
adc
imull
sbb
pop
xchg
lods
test
test
shlb
xchg
pop
inc
jnp
push
add
testb
rol
popa
popa
cmpsb
dec
and
mov
imul
jbe
hlt
inc
jno
cmp
or
jp
xchg
and
mov
or
insb
mov
pop
xchg
stos
out
xor
sub
pushf
dec
jecxz
lcall
lret
and
xchg
aam
or
mov
testl
dec
les
test
insb
cwtl
lahf
dec
lret
pushf
add
mov
fwait
sbb
mov
mov
xor
loopne
mov
mov
in
adcl
cmp
in
nop
pop
xchg
cld
or
std
xor
jbe
xor
sub
test
cwtl
jb
xor
mov
stos
adc
dec
iret
mov
xor
cld
leave
xor
push
in
mov
stc
nop
xchg
ret
mov
movsl
andb
fwait
push
xor
test
scas
repz
ss
gs
mov
jmp
inc
daa
lock
into
sub
xor
adc
push
mov
adc
sahf
pushf
popf
adc
sbb
mov
jmp
roll
adc
pop
cmp
cmpb
das
xor
inc
mov
xchg
and
add
loope
jae
int3
mov
cmp
addr16
pop
xor
pop
lahf
mov
fisubs
fidivrs
fldt
jge
pop
jno
jns
cltd
lcall
cmpsb
pop
inc
stos
adc
mov
sub
addl
xor
movl
cmp
movl
jne
jmp
js
stos
loopne
jae
cmc
pop
sub
cmp
push
jo
pop
jge
jo
out
mov
or
xchg
in
movsb
cmp
shrb
push
es
mov
lcall
clc
push
in
jge,pn
call
mov
cmp
xor
dec
or
and
sub
bound
or
and
mov
bound
pop
sub
jo
inc
cs
daa
pusha
fcoms
rcr
sub
pop
sbb
iret
cmpsl
int
adc
insb
test
jnp
inc
and
xor
xor
push
cmc
and
fsts
pop
mov
cmp
rcrb
mov
sbb
add
and
daa
fldcw
nop
lahf
push
push
jbe
jo
imul
ljmp
fisttpll
jns
icebp
adc
cltd
pop
xlat
in
inc
lods
lea
mov
jg
ret
jne
and
xchg
add
push
add
cmp
pop
mov
insb
rcll
add
sbb
pop
cmp
movsl
cs
push
jae
mov
sbb
hlt
scas
hlt
icebp
push
popa
rol
pop
push
xchg
mov
test
insl
lods
adc
int
adc
pusha
pushf
dec
aaa
and
out
sbb
decl
add
add
dec
test
sub
jle
std
shlb
push
imul
sub
push
ret
loope
fcmovb
cmp
pop
idiv
inc
xchg
je,pn
add
loope
jne
jmp
cmpsl
jbe
ss
and
cmp
pusha
pop
pop
ret
dec
jnp
movntq
out
push
lret
mov
std
push
pop
ficompl
jecxz
test
imul
jmp
out
hlt
inc
sbb
mov
inc
shlb
dec
dec
outsl
mov
xor
gs
mov
pop
adcb
in
lea
ljmp
and
push
lods
jmp
mov
lret
orb
lcall
lret
push
cmpsl
sbb
sub
scas
pop
jmp
jnp
cld
mov
cmpsl
lea
add
js
roll
fbstp
pop
dec
repnz
pop
xchg
or
fimull
lcall
or
jb
add
xor
and
mov
xor
mov
mov
ret
fldl
cld
dec
jmp
lods
scas
bnd
cmp
sbb
sbb
xchg
mov
adc
test
mov
pop
loopne
dec
int3
pop
mov
dec
add
sbb
pop
pop
icebp
mov
lods
xchg
rolb
test
ds
scas
aam
stos
dec
jae
jno
push
cmp
mov
pop
push
loopne
dec
mov
ret
mov
pop
test
push
mov
leave
mov
dec
sbb
mov
imul
cmpsb
mov
mov
sub
add
std
jecxz
movsb
cmp
les
push
loopne
or
stos
xchg
mov
pop
loope
fdiv
lds
stos
pop
in
mov
fisttpl
push
lcall
adc
dec
inc
mov
movsb
sarb
ja
aaa
mov
lea
dec
mov
nop
push
mov
popa
xchg
pushf
imul
push
cmpsl
push
add
inc
mov
pop
lahf
add
push
enter
es
stos
xchg
lahf
push
sub
movsl
push
mov
pop
mov
pop
mov
cmp
jecxz
add
ficoms
pop
imul
cli
xor
push
fwait
mov
mov
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
jmp
mov
cwtl
test
jb
jb
xchg
adc
jle
push
jo
pop
jge
jo
mov
adc
lret
repz
jmp
popa
outsl
ljmp
arpl
xchg
xchg
mov
icebp
dec
jecxz
sub
adc
lods
add
xor
adc
iret
pushf
in
shlb
ss
jg
hlt
repz
push
add
xchg
push
pop
aad
or
mov
lret
lret
sbb
in
and
ljmp
jl
rcl
mov
or
ret
xchg
jg
add
mov
ds
addr16
aam
sbb
add
aad
les
fldl
pop
shlb
cmp
sub
std
mov
dec
movsb
icebp
test
sbb
sub
imul
inc
leave
es
jp
lcall
mov
es
and
sbb
xor
aaa
xchg
dec
and
jne
in
jmp
and
imull
mov
or
add
fmull
or
xor
je
cmp
mov
xchg
loopne
mov
pop
sub
xchg
pop
mov
inc
jae
lds
mov
pop
sub
stos
jno
std
daa
mov
sahf
adc
pop
mov
into
cmp
ret
or
ljmp
sti
pop
popf
std
gs
jle
dec
mov
mov
es
insl
outsl
inc
mov
cmp
in
hlt
enter
cmp
xchg
sti
cmp
pop
test
insb
aam
lcall
aad
adc
inc
ret
add
push
andb
test
mov
cmp
jle
mov
fdivp
xorl
or
mov
sbb
insl
stos
push
xor
enter
lods
fs
mov
sub
lds
xor
inc
xor
dec
lcall
scas
inc
cltd
clc
in
mov
repz
leave
xchg
das
aas
divb
cmpsb
mov
data16
mov
bound
pop
add
or
sarb
or
push
xchg
sti
xchg
test
int3
mov
fcomip
dec
and
into
or
sub
adc
sub
adc
xchg
movsb
and
fwait
mov
fs
adc
mov
stc
sbb
mov
test
lods
out
call
sbb
add
mov
xchg
mov
loopne
xor
test
inc
mov
aas
out
stos
dec
out
ss
pop
test
sub
mov
addr16
inc
int
mov
out
push
jp
adc
sbb
pop
lret
xlat
pop
fisubrs
lcall
xchg
jmp
rorb
out
add
and
aam
jno
inc
fnstsw
test
xchg
cmp
add
add
inc
push
xlat
clc
es
ja
push
pop
stos
and
iret
xchg
std
cmp
loopne
xchg
sub
cmpsb
mov
dec
popa
movsb
mov
pop
mov
push
movsl
add
jp
mov
jbe
ror
adc
lods
mov
xchg
and
outsb
mov
inc
stos
and
imul
shl
mov
adc
xchg
sbb
sub
imul
test
fisubrl
adc
subb
jbe
lods
sub
js
xchg
pop
fildl
xchg
adc
out
mov
or
add
sahf
xchg
jge
adc
jo
push
cmp
cmp
insb
cwtl
jo
push
jae
andb
loop
pop
test
xor
bound
mov
mov
mov
add
pop
pop
ret
push
mov
sub
and
movl
mov
adc
movl
sbbl
mov
subl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
xor
sub
mov
sbbl
jmp
mov
mov
pop
dec
xor
sbb
jbe
inc
pop
jo
mov
dec
lret
test
push
test
add
popa
das
xor
pop
mov
mov
fistps
inc
sub
mov
loopne
jns
cmpsl
repz
push
add
das
mov
mov
mov
les
add
mov
push
xchg
dec
pop
movsb
fimull
adc
test
mov
mov
dec
cmpsb
lahf
push
and
dec
xlat
mov
cwtl
icebp
inc
xchg
out
sbb
and
mov
fdiv
add
in
ret
fimuls
ret
out
xchg
jl
pop
dec
leave
jle
mov
aad
jg
enter
jmp
xor
pop
iret
jg
jno
xchg
push
xlat
inc
mov
iret
repz
pop
jle
or
push
pop
fidivrs
cmpsb
push
shl
insl
mov
xor
xchg
mov
adc
mov
mov
and
js
mov
push
outsb
ret
adc
lods
sbb
push
loopne
mov
pop
sub
push
mov
xor
sub
add
in
push
sti
or
pushf
mov
testb
mov
leave
push
adc
or
mul
sbb
enter
dec
jb
xor
shll
cld
dec
lret
sub
cltd
jmp
inc
ss
and
shl
and
insb
xor
jl
pop
push
mov
loop
and
push
mov
movsb
mov
cmp
dec
aas
and
mov
testb
xchg
in
xor
and
push
out
pop
jb
add
call
popa
mov
movsl
sbb
scas
insl
es
icebp
dec
and
das
sbb
lahf
mov
jnp
jge
xor
mov
imul
nop
movsb
push
adc
or
and
xor
insb
repz
inc
stos
lea
jae
std
daa
aam
mov
cmp
push
out
out
movsb
gs
xlat
sbbl
repnz
jp
sub
iret
xor
lret
mov
push
inc
sbb
dec
mov
imul
jmp
ja
mov
xor
push
out
popf
mov
pop
mov
cmp
aas
flds
push
cmp
cmp
cmp
outsb
add
cmc
xor
pop
test
adc
or
xchg
aam
fs
and
pop
jo
outsb
leave
xor
add
gs
mov
mov
ret
testl
xchg
sbb
adc
loopne
in
inc
test
les
add
subl
jmp
hlt
xor
fwait
repz
inc
xchg
aaa
xchg
jno
pop
pop
jo
mov
pop
sbb
add
cltd
es
mov
ret
add
lahf
mov
decl
sub
sbb
orb
mov
fnsave
xchg
fwait
cs
mov
orl
mov
pushf
xchg
cmp
lret
add
pop
xchg
stos
xchg
and
add
xlat
orl
aaa
cltd
mov
pop
and
rclb
xor
xor
cmp
dec
adc
sub
out
mov
or
xchg
inc
outsl
fidivrl
lea
add
sbb
sbb
mov
xchg
mov
jae
jnp
adc
push
sub
dec
lea
lds
cwtl
push
inc
jae
sbb
sahf
icebp
and
pop
dec
sti
jge
insb
mov
inc
arpl
mov
push
xchg
pop
stc
lds
mov
cli
cmp
std
cmpsb
cltd
or
addr16
lahf
xor
inc
out
test
subl
je
sbb
je
imul
stos
out
in
hlt
out
ret
inc
stos
arpl
push
xlat
lock
out
add
and
push
dec
jecxz
das
add
pop
aad
movl
mov
sbb
pop
mov
mov
dec
in
xchg
push
xlat
push
ret
mov
stc
add
cmp
mov
arpl
out
cmp
enter
inc
loopne
test
insl
push
fwait
in
out
sbb
sahf
inc
dec
mov
adcb
cld
adc
or
movsb
in
outsl
ret
adc
xchg
and
mov
jae
notl
daa
cmpsl
mov
mov
mov
sbb
jns
xor
shll
lcall
and
cmpsb
push
loop
push
adcb
push
push
fbld
mov
sub
insl
add
roll
push
sub
fisubs
dec
xchg
lret
sub
sbb
push
imul
add
mov
leave
sub
outsl
pop
fists
iret
dec
cmp
inc
cmp
lods
movsl
pop
aaa
cmpsl
bound
mov
xor
or
pusha
inc
mov
out
sub
out
and
sbb
xchg
mov
pop
stos
call
in
jp
scas
mov
jge
pop
sti
dec
fisubl
pop
jne
adc
bound
jle
jno
jo
pop
jo
cmpsb
outsb
scas
jae
inc
xor
xor
dec
dec
imul
pushf
frstor
mov
inc
es
data16
mov
xchg
sbbb
idiv
inc
add
add
add
sldt
add
leave
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
push
xorl
push
test
jmp
mov
mov
jne
jne
sub
aam
enter
mov
sub
mov
andb
lods
addb
popl
jnp
push
es
loopne
add
arpl
and
mov
cmp
scas
adc
bound
inc
inc
popf
test
jae
ret
cld
dec
xor
mov
mov
sbb
mov
mov
ds
nop
and
jnp
jmp
cmp
jecxz
fsubrl
ret
jl
sbbb
or
lret
mov
bound
cmp
push
in
push
dec
shlb
mov
je
dec
into
add
scas
mov
sub
pop
enter
outsl
mov
sbb
outsb
outsb
ja
dec
and
mov
inc
cld
or
or
test
gs
sbb
and
dec
out
jne
mov
jl
scas
in
cmp
push
mov
lret
jb
sbb
in
ret
add
scas
inc
scas
adc
mov
and
or
dec
sarl
add
pop
insb
push
shl
cmp
jmp
pop
xor
xchg
iret
std
or
push
cmpsb
add
into
push
jmp
aam
imul
movsl
cmp
iret
leave
outsl
mov
or
xor
xor
fldenv
into
and
mov
js
jmp
clc
rorl
pusha
stc
xchg
xchg
sarl
mov
or
mov
and
jp
cmpsb
das
inc
nop
or
lret
push
sbb
pop
mov
inc
xchg
cmpsb
imul
xchg
adc
adc
in
sbb
imulb
ljmp
inc
or
div
call
jge
test
insb
test
mov
push
fdivr
inc
imull
jb
outsl
push
dec
push
into
sarb
xchg
rcrl
ss
or
es
mov
sbb
dec
dec
pop
pop
adc
xchg
lret
loop
fsts
xlat
xor
and
jge
mov
mov
xor
aam
fimull
fbld
add
outsl
cmp
dec
xchg
xor
test
shlb
loopne
loope
inc
insb
dec
jg
xor
insb
xchg
aas
cmp
in
pop
jno
pop
xor
ss
pop
shll
lds
gs
adc
jns
add
inc
pop
xchg
pop
mov
repz
mov
push
iret
add
fadd
loope
or
push
xchg
jnp
mov
and
and
sub
shrb
push
sub
je
xchg
test
hlt
mov
loopne
dec
sub
test
add
add
mov
or
testb
std
inc
add
add
add
add
je
cmpl
jne
push
push
push
push
pushl
push
push
call
mov
dec
mov
jmp
and
imul
mov
add
add
mov
sub
mov
jmp
lret
sbb
inc
loopne
push
mov
rorb
ja
pushf
stos
fcoml
data16
mov
fcoms
lret
or
jne
mov
mov
cmp
or
and
sub
xlat
push
imul
stos
dec
push
push
xor
xor
push
push
adc
sti
ds
sbb
sbb
sub
fldt
push
cmpsl
mov
loopne
push
bound
ljmp
jl
cld
aam
ret
scas
mov
jbe
pop
xorb
sub
pop
fdivr
jns
push
fwait
mov
sub
fst
inc
mov
jp
mov
nop
cli
arpl
add
clc
sbb
pop
call
fmull
jo
lea
outsb
mov
stc
dec
sub
adc
clc
inc
xchg
int
or
and
cmp
or
scas
push
inc
popf
pop
or
hlt
jge
lods
adc
pop
sbb
and
fimuls
xchg
mov
rorb
mov
stos
incb
mov
sub
aam
mov
dec
movsl
jl
mov
fwait
jae
lock
mov
push
xchg
sub
mov
bound
sub
adc
loopne
push
push
and
pop
and
rclb
sbb
jl
cmp
mov
dec
sahf
inc
ja
test
cmpsb
and
lret
and
ret
lods
in
mov
in
xchg
mov
push
leave
sbbl
inc
aas
mov
rclb
adc
xchg
stc
mov
or
jg
dec
stos
xchg
and
aaa
xchg
cmp
dec
icebp
lds
mov
mov
loop
loopne
push
adc
and
int
stos
out
stos
lret
stos
sti
int
mov
out
pop
sbb
in
sub
mov
mov
popf
adc
pop
stc
xchg
cmp
mov
sbb
xor
cmpsb
scas
lods
dec
outsl
or
add
jmp
mov
decl
xchg
mov
push
fdiv
clc
adc
fstpl
xchg
or
or
push
addl
cmp
shll
or
inc
loopne
fwait
lds
and
scas
lret
testb
cmp
loope
ss
out
mov
sub
fiadds
or
jnp
fdivs
in
mov
mov
fs
movsl
popa
cmp
cli
out
sub
orl
in
xchg
or
pop
mov
adc
fnstenv
xchg
icebp
enter
addr16
lcall
jecxz
xchg
pop
jg
mov
sub
jno
mov
xchg
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
sub
xor
jmp
call
jno
popa
push
xchg
arpl
pop
pop
fs
mov
and
das
or
outsl
loopne
adc
in
aas
cwtl
outsl
cmpsl
push
stos
fwait
push
sub
test
inc
cmp
ss
int
and
xor
nop
dec
push
rolb
fcoms
lret
jo
stc
mov
ljmp
pop
xor
mov
pop
mov
jno
add
lahf
push
aad
out
push
loopne
push
or
cmp
jp
dec
dec
pop
jns
sbb
ja
adc
add
bswap
pop
rcl
fs
fs
ja
ret
arpl
add
sahf
pop
movsb
daa
or
cmp
lods
jb
pop
and
cltd
push
icebp
and
movl
xchg
xchg
mov
sbb
repz
lret
or
xchg
js
rclb
cwtl
pop
test
and
push
mov
rolb
stc
jge
addr16
xchg
adc
and
stos
cmovnp
mov
mov
mov
mov
mov
push
or
jne
mov
jbe
xor
inc
xchg
pop
mov
sarl
pop
xchg
fiadds
and
pop
jp
lahf
lret
incl
call
mov
xorl
outsl
xor
push
decb
cmc
adc
loopne
into
sub
test
sbb
cmp
out
dec
mov
lods
cmp
inc
xchg
shll
cmp
jge
jl
inc
inc
or
stos
pop
mov
pop
les
adc
xchg
or
lds
mov
mov
pop
js
add
mov
dec
ss
inc
jl
pop
dec
out
sbb
movsl
push
cmp
mov
jmp
fistps
xchg
mov
adc
fimuls
jl
cmc
nop
xor
cmp
pushf
jae
je
in
inc
stos
xchg
loope
fcoms
lea
jo
xlat
inc
cmpsl
shl
xchg
and
outsb
pushl
cmp
push
and
xor
popa
fs
mov
cmp
jno
nop
xor
inc
sahf
push
push
flds
divb
mov
mov
out
mov
loopne
stos
mov
fmul
or
add
xchg
jb
sbb
mov
pop
cmp
ret
fiadds
xchg
decl
out
orl
roll
ljmp
jnp
adc
daa
adc
shrb
or
ret
or
jecxz
push
jg
inc
push
sub
push
aad
jge
jns
testb
rcrl
loop
test
jbe
es
jne
mov
mov
adc
mov
xor
mov
xor
adc
xor
jmp
push
popa
jne
add
cmp
outsb
les
jo
jle
jo
pop
push
mov
push
xor
dec
push
jae
or
sub
out
cmp
or
push
push
out
test
rcrl
leave
mov
dec
push
cmp
lahf
pop
stos
out
cmc
inc
inc
mov
sbb
inc
repz
add
push
inc
dec
shll
pop
xor
mov
pop
sbb
xor
mov
movsb
outsl
lret
mov
jecxz
add
mov
lret
shlb
cwtl
lods
pop
dec
cmp
adc
mov
mov
xchg
pop
fists
mov
push
mov
add
and
dec
fnstenv
mov
cs
sbb
ret
mov
jo
loop
aam
sub
insl
mov
sub
mov
xchg
fisttpl
xchg
xchg
int
dec
or
loope
int
ficompl
nop
test
pop
add
rcl
xchg
jmp
and
int3
stc
xchg
repz
dec
adc
add
test
shll
mov
subl
jp
inc
add
cmp
rol
out
push
push
push
or
jno
les
jne
cmc
daa
pop
jbe
lahf
les
outsb
into
aad
mov
jnp
cld
loopne
sub
adc
arpl
gs
push
je
pop
hlt
xor
daa
fnstenv
fisubs
sahf
repnz
int
sbb
ds
xor
fs
andb
push
mov
xchg
test
loop
xor
fstpt
repnz
rorb
jp
inc
loope
movsb
fstl
jae
xchg
popf
stos
push
scas
mov
xchg
mov
fs
rolb
adc
aad
mov
or
push
loop
mov
in
add
cltd
jno
and
and
in
leave
cld
ljmp
jp
cmp
outsl
push
xor
cmc
popl
out
dec
ret
cmp
ljmp
stos
dec
cmp
xchg
fstps
adc
cmp
inc
push
fistps
inc
jp
pop
enter
mov
rcl
lds
mov
adc
fcom
sbb
and
add
call
add
test
sub
push
scas
sub
xor
incl
clc
out
test
call
cli
rol
test
repz
sarl
dec
popf
pop
movb
cmc
repz
mov
push
or
cmpsb
jnp
add
jg
sub
mov
divl
and
mov
stos
scas
aas
cmovo
ds
and
add
loopne
test
pop
add
notl
mov
xor
xorl
add
jmp
inc
mov
jp
adcb
mov
fs
outsb
jo
mov
mov
rcr
fdivp
push
mov
out
cld
adc
repnz
adc
cmpl
push
adc
cmp
sub
adc
push
or
or
lods
jo
sbbl
xor
pop
outsl
lret
or
pushf
fnstcw
dec
imul
xchg
int3
push
pop
cmp
pop
ja
es
push
cmp
mov
fsubl
lock
fidivs
stc
add
mov
inc
shlb
aaa
in
pop
rcll
ret
xchg
jns
scas
call
dec
test
pop
mov
xchg
out
insb
mov
push
scas
mov
mov
stos
stos
xor
int
pop
hlt
jbe
dec
das
icebp
mov
pop
jmp
popa
sbb
int3
cmp
push
sbb
xor
mov
push
cmpsb
mov
jns
icebp
dec
pop
push
test
or
loope
or
mov
pop
xchg
sub
je
mov
xchg
in
inc
cmp
je
xor
fbld
loopne
dec
les
pop
hlt
mov
out
sbb
add
dec
inc
adc
nop
das
dec
jg
out
out
out
add
movsl
mov
insb
lods
cmp
jbe
add
mov
movsl
xchg
push
shrl
jb
and
or
shll
shrl
push
push
mov
dec
out
cmp
in
es
lea
cltd
aad
ret
add
mov
lds
int
cwtl
pop
imull
xchg
mov
cmp
xor
fs
xor
rcr
into
ret
hlt
jg
mov
dec
pop
scas
dec
fbld
out
mov
addr16
mov
inc
sarb
cmpsb
and
lahf
lcall
stc
lret
xor
push
arpl
push
xor
xor
lods
div
rolb
nop
mov
add
xor
dec
shll
jns
dec
sub
mov
mov
cmp
loop
loopne
push
mov
roll
jne
push
dec
out
mov
sahf
test
imulb
jo
dec
pop
testl
push
mov
push
sub
lret
xchg
fsubs
mov
sub
sbb
rcll
and
arpl
insb
jmp
jl
loope
cltd
nop
mov
inc
mov
mov
clc
rolb
push
loopne
sub
sub
mov
pop
cmp
fs
sub
jno
nop
call
mov
mov
scas
lret
mov
push
fldenv
movsl
mov
or
mov
cmp
jne
pushl
jmp
and
lods
shrb
in
sub
jo
mov
cld
int
push
lcall
dec
hlt
cmp
or
gs
lods
cld
pop
push
push
insb
cmpsb
mov
pop
lahf
sub
inc
adc
es
stos
ljmp
pop
fsubrs
popf
fisubrs
stos
mov
xchg
jns
pusha
or
or
sahf
mov
shrb
dec
xchg
mov
popa
jl
or
addr16
loopne
lods
fistpll
pop
inc
popf
mov
fistpll
imul
mov
shlb
sbb
sub
lret
scas
dec
ret
adc
test
or
pop
inc
mov
movl
pop
sub
pop
mov
scas
lea
fwait
js
push
test
inc
std
lcall
or
hlt
sbb
adc
icebp
or
adc
out
insl
xlat
test
mov
sub
mov
mov
stos
daa
push
rol
leave
xchg
dec
push
inc
and
sbb
iret
lret
pop
call
dec
cs
jne
push
cld
aaa
xchg
fcmove
jg
or
adc
std
dec
lea
jb
sub
push
and
outsl
or
mov
push
test
dec
push
cmp
push
ret
ja
mov
fsts
sub
outsl
and
sub
mov
lret
sub
clc
jne
stos
mov
dec
fmull
mov
push
repnz
push
dec
fistps
inc
iret
mov
test
loop
outsl
fimull
fbld
inc
in
mov
aad
push
mov
cld
cmc
pop
out
sub
mov
lods
adc
ret
lock
dec
mov
push
jns
mov
xchg
sub
cwtl
clc
push
sub
jns
imulb
jns
xchg
mov
insb
jmp
sub
bnd
add
fstpt
inc
aad
mov
cmp
outsb
subl
iret
adc
push
jns
ss
loope
psadbw
fdivrs
leave
mov
mov
dec
mov
dec
out
dec
int3
lret
leave
in
xchg
xchg
pop
into
pop
ljmp
dec
mov
push
test
gs
sbb
gs
mov
pop
pop
lcall
mov
jnp
lcall
push
xchg
bound
mov
iret
insb
xor
imul
xchg
lahf
dec
ret
xor
push
out
out
mov
or
loope
iret
into
xlat
aaa
int
lahf
fmull
loope
cmp
and
cmc
fdivs
sub
cli
dec
icebp
add
sbb
sub
mov
fnstsw
jne
mov
lea
rorl
jmp
pop
insl
and
xor
insl
jp
or
push
push
jo
mov
push
jp
xchg
insl
cmpsl
mov
inc
push
ss
jo
loop
mov
imul
fs
pcmpeqw
xchg
popa
arpl
mov
ja
mov
push
xchg
test
fdivrs
bound
mov
outsl
or
decb
loopne
jle
ss
jo
aad
mov
movsl
rolb
jmp
rorl
lock
and
hlt
call
mov
out
ss
jb
movsl
and
ja
jp
mov
jp
fists
push
loope
xor
inc
pop
nop
mov
test
dec
dec
cmp
test
cld
inc
repz
test
divb
xchg
in
push
lahf
inc
xchg
push
push
mov
movsb
out
call
mov
push
jge
xchg
xchg
cmp
sbb
cltd
jl
lret
inc
jp
sti
adc
cmc
es
mov
pop
mov
call
jne
xlat
sub
pop
sbb
js
xor
mov
jne
xchg
push
repz
add
fimull
and
sbb
push
and
dec
cld
movsl
repnz
xor
fidivrl
fcoms
lahf
fisubs
or
xbegin
jbe
push
in
clc
sbb
and
cltd
jg
pop
adc
and
dec
mov
cmp
movsl
nop
xor
inc
pop
adcl
mov
ljmp
out
mov
inc
leave
push
xor
xlat
mov
push
inc
xor
ljmp
adc
ljmp
add
xchg
xchg
mov
popa
and
lret
and
or
fmull
outsb
imul
out
cwtl
xor
out
sahf
sbb
sti
jle
ret
outsb
out
pop
aad
adc
bound
pushf
xlat
mov
js
xor
inc
push
dec
or
rclb
rcrl
movsb
pop
xchg
cwtl
lock
loope
and
or
mov
sub
call
jae
adc
addb
and
mov
push
sub
mulb
sub
in
dec
dec
arpl
mov
cmp
lret
cmpsb
dec
lcall
xor
call
cs
push
fildll
cmp
int3
or
adcb
adc
outsl
cmp
pusha
lock
sbb
jae
cwtl
cmpsb
in
mov
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
cmp
movl
je
pushl
decl
pushl
xorl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
or
mov
adcl
xor
decl
add
movl
cmp
je
not
mov
mov
mov
xorl
jmp
lods
mov
loopne
outsb
push
repz
scas
sbb
and
mov
je
int3
std
adc
or
pop
mov
add
cltd
pop
and
data16
out
nop
xor
nop
in
sub
mov
pop
addr16
mov
hlt
pusha
adcl
mov
or
jg
lcall
mov
out
shll
mov
inc
scas
cmpsb
xor
cltd
jbe
int3
or
adc
sbb
int
jnp
xchg
mov
xorb
sub
adc
aad
das
sbb
sbb
fldt
pop
ficoml
adc
add
mov
hlt
rorb
add
nop
rorb
sbb
filds
repnz
pop
pop
std
fsubrs
jge
test
mov
cmp
data16
imul
sbb
in
out
mov
dec
jmp
roll
in
leave
push
cmp
inc
xor
jnp
outsb
sub
push
stos
addb
push
mov
in
dec
ss
nop
push
cld
inc
mov
pop
orl
stos
lcall
cs
lea
or
clc
out
loope
and
dec
sbb
ficomps
and
leave
pop
setge
pop
sub
and
mov
pop
lods
xor
jno
std
ljmp
in
sar
add
cs
xchg
stc
int
jbe
es
xor
scas
sub
mov
cmpsb
mov
dec
or
mov
mov
xlat
and
shll
lret
pop
ja
or
mov
loope
cld
jo
xor
add
adc
sbb
ja
sub
mov
mov
xor
dec
pusha
repz
test
sbb
pop
test
and
cmc
dec
or
push
xchg
aad
out
mov
rclb
push
mov
cmp
jo
andl
or
jmp
push
push
aad
fidivrs
shr
jge
addr16
mov
sub
lahf
inc
xchg
cmp
sub
add
in
xchg
cmp
or
pop
pop
lods
aaa
pop
into
ret
ret
xchg
lahf
loopne
test
js
das
add
push
ljmp
insl
xor
mov
or
orl
push
mov
or
dec
push
stos
pushf
call
or
push
bnd
or
push
int
pop
in
bound
pop
sub
mov
xchg
repnz
and
lret
rcrb
adc
in
ret
pop
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
orl
add
mov
or
mov
mov
sbb
mov
addl
add
add
mov
mov
mov
add
neg
xor
and
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
add
lea
mov
push
jmp
add
xor
inc
cld
xchg
loop
jbe
lret
jo
mov
rclb
sbb
shlb
pusha
add
enter
lcall
pop
xchg
out
pop
and
cs
out
mov
jmp
imul
cmp
push
jne
dec
xor
mov
arpl
ret
mov
push
sti
stos
and
sbb
inc
pop
and
mov
es
xor
call
fldl
sahf
mov
inc
out
adc
pop
dec
rcll
sub
xchg
stos
push
ja
out
insl
sti
fstpl
mov
lea
push
imul
sub
lcall
lcall
lret
ss
shll
outsb
mov
inc
in
movb
ficoms
mov
out
lret
cmp
sti
fistps
add
sub
jns
fnsave
int
fcmovne
mov
xorb
into
push
std
push
das
shlb
insl
mov
sub
jbe
lds
mov
imul
mov
icebp
xor
lret
jbe
fisttps
scas
mov
out
mov
into
movsb
ss
pop
hlt
call
lods
dec
sbb
ja
inc
lahf
rorl
and
xchg
mov
and
and
jno
dec
aad
stc
test
xor
loope
xor
aaa
mov
mov
ds
dec
stc
sbb
sarl
mov
cmp
ja
add
adc
sub
lods
repnz
call
xchg
sbb
bound
call
dec
test
mov
mov
mov
push
adc
inc
mov
sub
jmp
addb
jecxz
repz
xchg
cli
fsts
imul
mov
mov
repz
les
das
cmpsl
mov
scas
xchg
inc
fdivrl
call
push
in
add
movsb
and
and
xor
xchg
cmpsl
sub
testb
jecxz
aad
mov
mov
add
add
popa
push
sar
repz
test
insl
pop
push
lods
xor
pusha
mov
call
repz
and
mov
jle
xchg
daa
mov
dec
addl
push
pop
test
xchg
or
out
push
jl
jl
popa
cwtl
fwait
hlt
jae
in
in
add
jmp
add
dec
int
mov
leave
pop
or
jne
call
mov
jmp
ret
sbb
sub
jno
pop
or
inc
pop
leave
jo
jo
jle
jo
mov
pop
cmp
mov
mov
or
stos
lret
sbb
addr16
xchg
sub
inc
dec
and
cli
or
mov
int
push
pop
fwait
pop
cmp
pop
lret
xchg
cmp
inc
and
mov
push
pop
sahf
fwait
fwait
sahf
fiaddl
mov
test
mov
inc
lea
dec
sub
adc
rol
mov
rcl
inc
aas
movsl
jecxz
stos
pop
push
shll
xor
and
lods
mov
outsl
and
add
sub
aaa
rcll
das
data16
add
popa
xor
mov
sbb
dec
pop
mov
or
pop
aad
dec
insl
nop
test
clc
in
rcll
fdivrs
push
fists
lret
rcrl
in
add
xor
cld
clts
mov
jle
imul
mov
pop
push
mov
sub
loopne
rcll
fcoms
jb
pop
call
pop
sbb
movsb
jb
int3
loopne
mov
icebp
outsl
dec
repnz
test
or
xor
dec
mov
arpl
jae
push
lods
in
push
test
adc
cmp
jge
in
pop
sbb
fcompl
outsl
loope
dec
imul
sub
pop
aas
pop
icebp
sbb
sbb
icebp
adc
pop
jb
jno
sahf
rorl
lods
inc
adc
in
sub
imul
fcomi
loop
outsl
lea
jno
mov
repnz
push
push
aad
nop
fisubrs
out
pop
xchg
mov
jecxz
jmp
mov
aad
mov
ds
jmp
xchg
mov
rcrb
arpl
cmp
ret
ljmp
rol
fsubs
mov
loop
xchg
dec
pop
adc
lea
pop
xchg
jno
push
mov
rcrl
ss
data16
push
icebp
push
xchg
aas
sbb
out
loope
loopne
inc
pop
movsl
test
dec
fsubl
mov
pop
loop
push
mov
xchg
in
pushf
pop
lahf
stos
aam
adc
shlb
and
mov
pop
lahf
lea
ss
lods
test
bnd
std
call
sub
adc
pop
jmp
and
pusha
stos
mov
cmp
fnstcw
inc
test
jno
inc
sbb
mov
addr16
add
xor
std
popa
scas
gs
outsl
mov
fists
xor
jmp
add
mov
jb
jge
jge
xor
jg
mov
xor
push
inc
mov
mov
sub
lds
mov
test
lock
jns
sub
jle
dec
rclb
test
sbb
dec
movsl
add
pop
push
dec
mov
popf
add
iret
in
or
pop
cs
pop
sub
pop
into
mov
daa
and
addl
inc
movsb
xor
sbb
jecxz
xor
or
movsl
rorb
ljmp
inc
lods
repnz
fs
aaa
xchg
shrb
xor
sahf
nop
imul
pop
mov
fildll
xor
leave
jge
mov
jmp
jae
push
push
mov
xchg
out
lea
fiadds
js
mov
cs
dec
jp
pop
mov
jge
ljmp
xchg
cmc
incl
adc
dec
aaa
jl
dec
in
hlt
xchg
xchg
iret
xchg
sub
jo
and
xchg
inc
popf
aaa
das
shr
dec
sbbb
and
xor
cmp
ljmp
popa
and
rcrl
imul
scas
insl
cltd
mov
ja
mov
pusha
fwait
std
push
fucomip
cmpsl
push
and
lcall
loope
ficompl
mov
xlat
inc
js
iret
fdivl
xor
je
pop
xlat
xor
and
test
mov
mov
jb
sub
fbld
mov
sbb
push
cmp
sbb
cmp
pop
lds
mov
sub
jp
popf
ss
outsl
daa
orl
scas
dec
sbb
xor
ss
aas
data16
shll
cltd
cs
shr
pop
gs
mov
aaa
test
pop
fsubr
ret
shl
movsl
jo
vpcmpeqw
lods
iret
and
ret
push
stos
je
add
ret
and
jae
lock
popa
xchg
xor
out
cmc
push
shrl
testl
mov
cli
and
lahf
cmp
scas
lret
mov
cmpsl
jno
int
movsl
push
cmp
gs
mov
push
push
mov
je
in
gs
push
inc
xchg
xor
jp
rorl
sbb
in
popl
xchg
sti
pop
push
lcall
pop
cmp
xor
dec
dec
sub
xor
leave
ret
mov
mov
jns
jl
repz
cmp
inc
scas
sbb
push
int
dec
dec
sbb
jg
adc
stos
ret
es
aam
cmc
aaa
xor
add
or
es
sbb
jnp
sbbl
inc
adc
fmulp
test
and
cmp
mov
jge
fbld
adc
ret
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
icebp
sbb
imul
outsl
stc
orb
pop
jnp
jo
jle
jo
cwtl
repnz
in
inc
cmp
dec
dec
gs
xor
lods
fldcw
les
sub
hlt
xlat
push
adc
or
mov
stc
arpl
cmp
add
and
xlat
dec
test
push
push
ja
loop
adcb
lea
popf
pushl
mov
pop
pop
and
lcall
xchg
test
cmpsb
mov
xchg
sbb
stos
mov
icebp
add
in
xchg
push
sub
dec
pusha
subb
pushf
sbb
call
test
mov
cli
out
out
and
mov
lcall
cmp
mov
lret
mov
mov
xor
fisttps
jecxz
icebp
insl
inc
push
insl
enter
gs
pusha
aam
cmpsb
push
leave
sahf
xchg
loop
xchg
fnstenv
mov
pop
mov
sub
mov
scas
jle
add
sub
sub
pop
ja
jnp
lods
imull
inc
push
sub
cli
pop
pusha
xchg
shrb
lea
mov
sahf
pop
out
int
pop
nop
sub
sbb
lea
ss
xchg
add
fistps
mov
shl
or
dec
mov
xchg
nop
les
movsl
aaa
and
push
cmp
cltd
sbb
ja
mov
ja
inc
jnp
sbb
fnsave
cmpl
jo
sub
cli
cmp
cmp
js
daa
sbb
add
dec
dec
fnstcw
in
je
add
add
jno
out
mov
data16
dec
iret
lods
push
push
inc
leave
fimull
nop
in
in
repz
fdivp
sbb
jmp
test
insl
sbb
jmp
mov
push
sets
pop
mov
fwait
cmp
xor
adcl
in
popa
int3
jb
pop
push
mov
ret
es
mov
xchg
pushl
sbb
xchg
mov
cmc
xchg
shl
jmp
sbb
int
xchg
mov
call
insb
repnz
push
add
fcmovnbe
aaa
cs
ja
push
pop
rcl
pushl
xchg
inc
jo
test
lret
mov
and
stc
cltd
movb
add
arpl
inc
and
or
mov
dec
ss
mov
fwait
cmc
sbb
inc
pop
xor
ror
and
xchg
jl
in
and
mov
jnp
mov
or
dec
pop
jecxz
lds
pop
cmp
add
sub
jl
and
loope
int
lds
add
sub
xchg
dec
mov
imul
jmp
aas
fidivrl
sbb
bound
sub
cmpsl
in
movsb
js
jo
jle
jo
test
outsl
dec
stc
fistpl
xor
adc
sub
pop
mov
jo
into
sti
jmp
hlt
test
xchg
adc
mul
stos
pop
aaa
add
movsb
xchg
pop
mov
lahf
cmp
ljmp
test
pop
adc
sub
popa
inc
roll
lods
imul
fucomp
jmp
ret
aaa
lcall
es
loop
sbb
daa
arpl
fistl
lds
push
sbb
or
jmp
push
dec
and
push
imul
es
movsb
lods
dec
cmc
fisubl
adc
xor
and
and
pop
aam
xchg
mov
repz
out
cwtl
fstp
sub
mov
xchg
pop
lods
pop
mov
sub
les
enter
enter
or
mov
mov
jmp
and
pop
push
fldl
xor
in
jp
addb
insl
cld
sarb
cwtl
negb
outsb
stos
movsb
pop
scas
push
fdivl
mov
push
xchg
push
jns
roll
ret
adc
pop
or
ljmp
aad
push
mov
xchg
insb
or
lcall
pop
mov
xchg
pop
cmp
sti
jecxz
loopne
pop
lea
mov
nop
cmc
dec
fwait
push
cltd
push
ja
imul
in
pop
push
stc
outsb
iret
aaa
xchg
fnstsw
clc
enter
in
std
mov
bnd
or
mov
pop
jge
enter
jg
dec
xchg
adc
out
sahf
loop,pt
hlt
push
mov
inc
notl
push
movsb
sbb
cs
lods
push
adc
xor
ret
std
jge
mov
adc
sbb
clc
fsts
mov
add
jg
shlb
lds
xchg
mov
lods
stc
pop
pop
dec
aaa
jae
inc
popf
into
cld
lahf
loopne
ss
int3
xor
add
and
lds
mov
lcallw
sbb
adc
sbb
add
rcl
sbb
mov
pop
and
dec
push
mov
mov
push
lahf
cmp
sub
adc
pop
jmp
pop
popf
dec
push
test
jp
fstps
stc
sbbb
xchg
push
lods
push
xor
dec
push
sti
mov
push
add
subl
mov
pop
cmp
push
fs
fmull
or
xor
mov
jmp
mov
jne
pop
push
loop
inc
in
add
jo
sub
pop
add
cwtl
push
movsb
mov
inc
adc
xchg
pop
cld
mov
push
test
xchg
shll
pop
aam
dec
adc
xchg
mov
mov
mov
mov
pop
adc
pop
dec
mov
int3
lock
insb
dec
fnsave
mov
js
pop
subl
jge
aas
ja
cmpsb
add
movsb
push
lods
rcll
adc
fsubp
insl
ja
xchg
outsl
mov
int
jecxz
mov
fisttpll
or
inc
pusha
jl
and
movsb
pop
scas
mov
or
lret
je
cli
aad
cmp
js
fwait
dec
std
xor
in
addr16
fisttpl
popa
add
mov
enter
sbb
mov
jge
cli
imul
in
les
pop
jbe
js
pop
fsincos
test
xor
cmpsl
ror
ret
sub
decb
aaa
mov
lods
or
shrb
adc
mov
es
aad
lret
sub
inc
fildl
cmp
insl
or
pop
or
outsb
stc
or
in
insl
mov
push
inc
mov
push
nop
hlt
ja
leave
outsb
fldenv
add
outsb
fisubrs
lcall
lds
or
and
or
in
mov
outsb
das
sbb
jp
fsts
mov
mov
jb
shrb
aad
js
clc
inc
int3
in
and
cmp
ljmp
cmp
xchg
lret
div
addr16
jle
xchg
fs
or
inc
dec
repz
cld
repz
pop
xor
mov
movsb
push
adc
movsl
aam
incb
jb
movsb
lret
inc
push
in
loope
cld
push
incl
or
pop
loopne
into
sbb
lds
negl
xchg
mov
dec
repz
mov
ja
cmp
jbe
xchg
in
popa
add
cmpl
es
pop
sub
lea
lds
mov
pop
popf
adc
out
iret
xchg
sub
fwait
mov
or
sub
mov
jl
andl
jl
xchg
shlb
fnsave
cli
add
jae
xor
mov
dec
bound
cltd
mov
sub
pop
xorb
in
and
movsl
mov
lock
test
data16
inc
xlat
dec
inc
cwtl
shrb
xchg
adc
je
push
sbb
mov
aas
sti
or
pop
mov
pop
xchg
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
sub
sub
xchg
push
mov
jne
out
add
mov
sbbl
jecxz
lds
out
or
jb
rorb
movsl
pop
mov
dec
into
dec
add
sarb
sub
pop
and
add
dec
jnp
in
mov
rclb
fisttpll
pusha
jbe
pop
jge
or
out
sbb
jb
xorb
fwait
jecxz
dec
adcb
sbb
cwtl
je
mov
xchg
xor
lret
imul
ds
cmpsl
xlat
pop
in
bound
inc
jae
mov
push
les
aaa
cltd
insl
mov
leave
sub
in
mull
cmp
push
inc
push
out
and
or
mov
inc
mov
movsl
in
fidivl
mov
rolb
sub
dec
mov
notl
mov
shlb
cmp
xchg
cmp
test
es
inc
aaa
xor
iret
inc
cs
call
lahf
pushf
adc
mov
cmp
ljmp
jmp
pop
mov
shufps
jns
mull
xor
testb
cwtl
fwait
adc
jecxz
adc
jae
cmp
add
sub
icebp
dec
pushf
add
sub
mov
push
gs
xor
movsl
loopne
sbb
sbb
lea
pop
out
xchg
movsb
pop
scas
cli
mov
stc
sub
mov
add
or
xor
stc
lcall
adc
push
lcall
movsb
lret
mov
jno
fsubrl
xor
je
aas
les
pop
cmpl
mov
inc
or
inc
cmp
cmp
adc
je
repnz
push
clc
dec
sbb
es
int3
lsl
cmpsb
dec
sub
popf
lret
aad
xchg
les
shl
out
dec
clc
or
ja
hlt
sahf
cmpsb
popa
pop
hlt
es
aam
pop
sbb
push
cs
pop
sbb
fwait
rclb
or
repnz
xchg
mov
sub
and
lods
jp
scas
dec
sub
shll
pop
push
imull
jo
sub
adc
shl
dec
adc
decb
xor
add
iret
repnz
add
test
out
sbb
lcall
mov
inc
mov
dec
mov
aad
scas
in
out
mov
mov
ret
les
xor
lods
mov
and
adc
test
aaa
jge
add
mov
add
div
mov
jmp
adc
inc
rolb
xchg
int
rcll
test
or
jg
jg
mov
inc
add
inc
pop
cmp
repz
push
sbb
xchg
cmp
aad
mov
cmpb
xchg
xchg
push
or
int3
sub
pop
pop
sbb
pop
mov
dec
lret
push
cmp
xlat
mov
hlt
sub
and
jg
push
pop
sub
loope
fadds
aaa
pop
lahf
enter
rorl
push
in
sahf
movsl
jp
clc
jl
ret
cmp
sub
popa
popf
and
int
ret
addr16
repnz
aaa
push
push
out
mov
pop
rcll
loopne
inc
sahf
fisubrs
cltd
sub
sbb
shr
insb
test
ret
push
ss
out
mov
mov
stos
dec
scas
sbb
aas
out
lret
mov
movsl
in
inc
and
push
cmp
movsl
fdiv
rcl
pop
mov
push
jmp
pop
or
scas
push
mov
icebp
xor
ret
jg
test
pop
mov
sub
daa
sbb
lods
adc
fsubrs
ja
cmpsb
ret
frstor
loop
xchg
jge
and
xor
add
xchg
pusha
fs
sbb
xchg
xchg
insl
push
outsl
or
cld
cmp
jnp
aam
mov
sbbl
or
push
rep
add
in
dec
out
mov
cmpsb
mov
xchg
hlt
rorb
sub
jle
xlat
dec
sbb
or
in
mov
mov
cmp
xchg
leave
jl
fcmovbe
es
and
pop
fisttpl
jp
fidivrl
cmp
push
sbb
arpl
movsb
ljmp
mov
lret
into
jge
xor
cltd
test
test
add
mov
rcrb
sub
dec
out
enter
sarl
mov
jo
negl
mov
mov
stc
pop
mov
inc
fwait
inc
hlt
mov
in
xor
add
shlb
test
jo
mov
scas
inc
imul
mov
mov
imul
cmpsb
imul
jbe
or
or
inc
in
inc
jb
ffreep
pop
fsubr
jmp
and
les
and
fldl
and
cmp
movsl
fimull
mov
fwait
mov
lret
mov
add
imul
mov
insl
or
jmp
int
andb
scas
imul
or
pop
push
add
outsl
daa
cs
icebp
enter
and
outsb
shr
cmp
in
jge
filds
xor
lea
jmp
sub
mov
popa
pop
xchg
aas
dec
pop
mov
mov
jle
jo
jle
push
fs
push
inc
aas
xlat
test
shlb
mov
pop
pusha
xchg
cltd
in
mov
dec
out
or
jp
mov
mov
dec
in
hlt
push
lock
jecxz
cmpsl
out
std
repnz
jmp
call
outsb
div
sbb
push
lret
mov
sub
pop
pandn
stos
cmc
sahf
adc
repnz
and
mov
pop
push
and
mov
pop
ljmp
lea
loop
cltd
cmp
out
call
push
mov
stos
lahf
or
push
and
pusha
and
push
xchg
loope
lcall
fs
pop
scas
subl
cmp
mov
fisubl
dec
insl
icebp
push
push
js
add
sub
or
inc
mov
xor
fwait
scas
mov
ss
inc
add
arpl
jno
out
dec
pop
fwait
xor
imul
shrb
push
push
js
das
stos
clc
cmp
popa
mov
xchg
sbb
lods
rcrb
mov
mov
cwtl
testb
adc
sub
dec
push
jae
xchg
push
push
fistps
test
pusha
and
xor
lret
add
push
ljmp
xchg
dec
push
leave
loopne
movsb
pop
xor
scas
push
mov
pop
jmp
mov
mov
xchg
inc
insl
push
and
idivb
xor
std
fidivl
in
addb
nop
adcb
jge
pop
jle
inc
xchg
and
lcall
xchg
pushf
sti
ja
ficoml
call
pop
in
outsb
pop
nop
addl
sahf
lahf
in
mov
xchg
sub
mov
pop
cmp
in
cld
jbe
insb
adc
pop
je
subl
jno
xor
cmp
sbb
fnstenv
sub
or
xchg
incb
adc
nop
aas
hlt
repz
or
adc
or
pop
push
aam
frstor
lret
sub
pop
loop
lret
pop
fs
jl
ds
xor
jae
dec
pop
and
mov
push
lret
push
cwtl
xor
repnz
popa
lea
mov
add
adc
aad
popf
arpl
ss
mov
pop
jle
jns
xchg
ror
fcoms
sbb
adc
lds
mov
mov
in
pusha
repnz
add
mov
mov
mov
mov
jmp
dec
fistpll
arpl
pop
jp
ret
and
jle
jo
inc
jns
mov
sub
xor
aas
and
jo
and
mov
lret
or
inc
sti
mov
push
push
xor
fsubl
je
pushl
add
mov
loop
int3
fwait
and
pop
push
test
push
fmuls
pop
sbb
cmp
inc
insl
mov
call
pop
jbe
pop
sbb
push
out
push
jp
adc
jne
cmp
push
add
pop
arpl
sti
jo
sub
out
mov
jbe
jle
cmp
jecxz
xor
pop
ficoms
hlt
mov
dec
imul
sub
in
push
nop
adc
mov
stc
jo
dec
aam
inc
xor
xor
test
xor
inc
stc
test
jns
pop
hlt
dec
cmp
adc
xchg
in
add
push
xor
pusha
lcall
sbb
sbbl
add
inc
mov
sub
inc
sub
xchg
cmp
and
mov
push
in
popf
push
mov
xchg
lret
out
and
add
mov
push
pop
push
int
adc
int3
and
stc
mov
xchg
xor
loop
jae
les
xor
jbe
dec
pop
sub
adc
shrb
mov
cmp
insb
mov
cltd
cmp
or
lret
xchg
and
stos
add
shl
enter
push
push
lods
int3
lods
xor
andl
and
cmp
pop
fs
lock
aas
mov
xorl
sub
daa
test
sarl
push
sub
push
mov
in
das
pop
int3
mov
mov
cmpsl
lock
fwait
xlat
pop
pop
dec
movsl
jns
inc
call
jae
das
cmc
scas
or
or
test
movsl
xchg
add
cs
shufps
int3
pop
mov
dec
loop
mov
pushf
pop
push
add
bound
dec
outsl
es
test
outsl
mov
sbbl
loope
mov
in
fcomip
xchg
mov
pop
pop
add
or
mov
les
or
mov
add
pop
sub
jbe
mov
pop
ljmp
test
fisubl
or
aam
int
cwtl
jle
andb
lock
push
jge
std
cmpsb
fmull
inc
repz
mov
insl
and
ljmp
inc
mov
sbb
add
pop
insb
cmp
flds
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
jmp
adc
iret
cmpsl
aad
jae
jl
jge,pn
inc
ret
mov
mov
test
mov
xchg
lahf
push
xchg
mov
aam
insb
push
mov
call
lahf
cmp
dec
and
repnz
push
add
push
xor
mov
mov
lds
jp
and
std
fdivrl
insl
push
lret
popa
imul
negb
movntq
hlt
jmp
push
lcall
mov
and
lods
jl
cmc
ja
jp
fcoml
cli
dec
sub
stc
dec
into
in
xor
dec
sbb
jp
leave
cld
rorl
pop
sbbl
jecxz
js
das
mov
add
jecxz
dec
int
insl
call
adc
xchg
sbb
mov
sti
lcall
sbb
into
jmp
jmp
not
test
xchg
stos
ret
cli
int
ret
loop
sub
mov
mov
pop
shrb
jge
es
jnp
mov
cmpsb
and
je
call
sub
cmpsl
jbe
pop
cld
lods
int3
repz
sub
fwait
repz
sub
sti
xchg
js
xchg
bswap
mov
xor
out
sub
mov
pop
or
test
mov
and
fnsave
lret
hlt
pop
mov
flds
cs
jbe
ljmp
clc
cltd
pslld
jbe
adc
std
mov
xchg
dec
xchg
mov
ret
iret
int3
jmp
push
and
test
loopne
sahf
imul
sub
mov
mov
mov
cltd
jae
cld
or
mov
ljmp
add
ret
or
ret
xor
nop
push
pusha
hlt
sub
leave
fsubrp
xor
dec
aas
sahf
aaa
mov
add
jmp
fistpll
or
sar
bound
cmc
int
pop
lods
aam
addl
adc
sub
mov
aas
pop
inc
xchg
sub
in
jmp
and
je
arpl
inc
adc
and
outsl
and
aam
xchg
orb
xchg
into
sub
adcb
jnp
sub
repnz
adc
inc
sti
xchg
jne
shl
lods
ja
inc
ficompl
and
sub
cmp
pop
pusha
test
mov
mov
push
sub
sbb
fcmove
pusha
inc
lret
stos
cltd
xchg
mov
adc
mov
mov
lock
iret
arpl
fistps
and
scas
dec
add
repz
data16
mov
lea
out
inc
xlat
iret
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
jmp
or
shll
jno
jmp
lds
test
adc
jo
jle
jo
sub
outsl
push
ds
adc
aad
adc
sub
cltd
xchg
subb
xor
dec
or
or
repnz
dec
jbe
cwtl
aad
pop
pushf
stos
iret
sub
fldl
mov
pop
aam
movd
and
push
outsb
ljmp
pop
addr16
or
sbb
mov
push
or
dec
jle
add
mov
repz
adc
mov
je
cmpsb
je
stos
inc
popf
andl
jmp
popa
pandn
sub
add
popf
inc
and
mov
push
dec
scas
pop
lods
push
in
xor
sbb
push
iret
mov
mov
jecxz
adcb
cmp
ja
sbb
mov
inc
or
out
xchg
loope
add
cmp
idivb
sub
xor
jno
mov
into
imul
jne
ja
int3
mov
lcall
mov
push
adc
aad
enter
fs
cmp
push
mov
dec
insl
push
or
cmp
pop
rcl
pop
imul
pop
xchg
das
or
mov
pop
stos
xchg
mov
dec
les
push
rol
xchg
adc
call
inc
cmp
mov
clc
jae
lods
aam
jl
xlat
add
pop
jl
nop
push
sbb
iret
xor
xchg
push
push
pop
sbb
dec
aad
das
mov
sub
xchg
or
add
cmp
testb
inc
inc
mov
xrelease
call
push
or
test
cmp
mov
lret
test
std
roll
lahf
sub
xor
stos
sarl
mov
and
push
cmp
mov
jge
movsl
iret
repnz
push
push
push
icebp
lea
mov
mov
movsl
out
mov
sub
pushf
mov
mov
jno
push
testb
fistpll
sbb
mov
ds
fisttpl
gs
sahf
outsb
inc
decl
jmp
imul
scas
cmp
jne
incb
xchg
jo
cmp
loope
jae
or
popa
push
insl
dec
shlb
out
pop
sub
ds
outsl
iret
idivl
scas
nop
xor
sbb
adc
jbe
or
sahf
movb
cmp
gs
test
cmp
lods
mov
xchg
mov
push
dec
in
fsubrl
out
add
adc
clc
sti
sub
xlat
push
test
xchg
mov
lahf
rcll
pop
inc
xchg
sub
jmp
cmc
icebp
lret
mov
test
jnp
jbe
pop
adc
mov
pop
hlt
xor
jb
scas
clc
or
cmp
xor
xor
mov
scas
outsb
mov
je
inc
fcoml
cld
int
push
subl
mov
or
sub
dec
sub
in
sub
or
mov
mov
in
fwait
pop
mov
mul
xchg
adc
and
pop
xlat
adc
js
rorl
fld
xor
int
adc
iret
xor
dec
lock
xlat
nop
pop
dec
cmc
cmp
dec
cmp
sbb
xor
jae
dec
into
test
adc
in
lock
mov
and
sbb
inc
jno
lahf
cmpsl
loop
sbbb
out
cli
pop
icebp
cltd
dec
data16
inc
mov
shlb
jle
push
push
aad
pop
mov
sub
les
xlat
cli
mov
inc
pop
pop
add
pushf
inc
mov
add
sbb
outsb
jns
mov
or
xor
daa
jae
cmp
data16
pop
cmp
sub
scas
in
scas
push
cmpsl
inc
pop
in
jl
data16
xchg
in
xchg
js
xchg
cli
jle
mov
adc
fwait
ljmp
mov
outsb
sbb
adc
scas
xchg
mov
cs
ret
mov
mov
shll
movsb
cmpsl
push
shll
loope
push
loop
lahf
mov
pop
rcrl
iret
mov
mov
mov
ljmp
adcb
stc
cld
hlt
dec
push
push
arpl
mov
cmp
scas
jb
cmp
lahf
mov
pop
ja
and
inc
mov
fdivr
push
cmc
pop
push
jp
popa
dec
int3
sahf
and
pop
in
mov
push
push
sub
rolb
jbe
jmp
insb
jae
loope
push
xor
insb
jns
mov
xor
imul
jb
fwait
mov
mov
aam
in
pop
rdpmc
push
inc
les
xchg
jb
insb
dec
addb
xor
push
rclb
or
dec
jo
xlat
mov
ss
in
and
ss
mov
cmp
shlb
sbb
sbb
xchg
loopne
push
insb
mov
cmpsb
xlat
or
cmpsb
test
jmp
push
lret
scas
insb
cmp
in
cmp
jecxz
mov
mov
xchg
dec
jb
cmpsl
test
jnp
pop
cltd
or
and
mov
repnz
pushl
dec
push
std
pop
push
dec
decl
dec
adc
in
pop
mov
dec
push
jmp
xor
cltd
lcall
xor
xchg
jmp
cmc
std
fs
jno
mov
xor
pop
xor
jle
jo
add
loop
imull
and
or
adc
or
lcall
pusha
fwait
test
adc
pop
mov
jge
fldln2
add
fucomip
adc
xchg
pop
mov
outsb
cmp
mov
or
add
inc
sub
aas
out
pusha
fistl
mov
xor
add
jge
xor
or
xor
cmp
inc
rolb
rcrl
lods
mov
fcomp
cmc
sbb
cs
pop
test
push
gs
sarl
stos
pop
test
into
push
sbb
fwait
loopne
push
xor
cmp
leave
cli
das
out
push
mov
loop
add
fstpt
rcrb
jae
stc
dec
xchg
xor
movsl
xor
mov
xor
adc
inc
jb
adc
pop
jbe
inc
test
jmp
sbb
jo
dec
mov
cs
jle
pop
pop
call
jp
xchg
jge
insl
daa
loopne
inc
inc
jb
xchg
or
pop
pop
add
ja
xor
lret
sbb
orl
inc
jb
pop
sbb
icebp
rclb
sarb
xchg
xchg
push
xchg
int
jp
test
cmp
lds
cwtl
push
sub
in
and
imul
push
xor
out
rcll
mov
sub
jb
cmp
jg
mov
shll
mov
je
jl
or
test
nop
ljmp
inc
pop
jno
sub
ja
sahf
push
clc
enter
cmpsl
movb
or
or
jle
or
xchg
push
dec
dec
and
pop
mov
aas
mov
jne
sbb
sbb
popf
and
push
mov
lds
les
testl
lcall
xchg
or
push
dec
outsb
dec
jno
in
inc
roll
ficompl
lods
or
call
pop
clc
imulb
lods
push
push
loop
push
aad
out
lods
pop
xchg
sub
mov
out
jne
cmpl
inc
insl
dec
repz
inc
addr16
int3
jmp
inc
movsb
mov
addr16
es
sbb
inc
cld
pop
lods
adc
jecxz
push
jae
push
xlat
xchg
fsts
push
cmpsl
arpl
mov
pop
in
or
mov
mov
addr16
jge
jae
in
add
mov
xlat
and
sbb
mov
inc
pop
filds
inc
in
filds
add
outsb
ds
loopne
outsb
outsb
mov
es
loop
out
sbb
jo
jle
jo
dec
jmp
xchg
xchg
xor
scas
pop
and
and
push
insb
push
cwtl
ja
push
sti
mov
and
loop
les
push
mov
divl
push
ret
fwait
adc
arpl
push
xor
xor
pushf
or
mov
cmp
dec
ss
adc
outsl
adc
pop
lock
jmp
not
frstor
mov
jp
repz
dec
pop
mov
out
sub
divb
and
pop
push
vmovapd
push
pop
add
push
cmpl
mov
jmp
iret
shll
daa
cmpsb
loope
in
aas
xor
es
icebp
out
clc
negl
jb
xchg
dec
shr
popf
inc
je
fstps
mov
inc
sub
push
pop
xchg
stos
fidivs
leave
sub
loope
add
nop
pushf
jp
push
jb
adc
mov
nop
adc
adc
mov
int3
scas
cs
das
sbb
dec
dec
mov
mov
inc
mov
icebp
push
mov
nop
lahf
rclb
imul
pop
lods
cs
enter
add
jle
push
add
pop
ljmp
xchg
xor
ljmp
xchg
push
mov
sub
mov
adc
add
mov
jae
pop
sub
mov
mov
inc
sarb
mov
mov
repz
mov
adc
sti
mov
hlt
push
mov
out
push
adc
mov
out
mov
das
cmp
and
dec
inc
loopne
push
insb
adc
dec
jno
mov
or
mov
jmp
fidivrs
sub
pop
xchg
out
xor
sbb
lods
jg
and
insl
scas
out
xor
jb
cltd
mov
stc
mov
js
push
push
imul
movsb
cmp
mov
rolb
mov
test
nop
int3
push
lods
lret
insb
in
jp
push
jbe
lahf
ror
fildl
cmp
xor
sub
or
and
stos
es
pop
fst
mov
mov
icebp
xor
fwait
and
out
jmp
push
mov
sbb
and
in
mov
mov
cs
add
push
or
add
fwait
lret
mov
push
cs
cmp
int
out
xor
xchg
aam
xchg
push
loopne
adc
pop
hlt
mov
fadd
inc
pop
bound
jbe
aad
ret
int3
mov
sub
xor
jne
out
aas
imul
add
xchg
push
xor
mov
jmp
cmp
push
add
data16
and
mov
sbb
mov
cli
loop
add
sti
mov
xor
pop
pop
adcl
fidivl
fistps
scas
ja
xchg
jg
xor
pop
push
fisubs
int3
jne
inc
push
cmp
lock
push
pop
or
dec
or
pop
das
fiadds
lods
jnp
xor
fxch
stos
shl
jo
inc
ret
jl
ja
sbb
mov
in
mov
and
iret
jno
push
cwtl
cmpsl
sbb
sub
sub
shl
arpl
in
leave
repz
and
lret
add
scas
xchg
popa
mov
mov
aad
mov
popf
dec
out
xor
test
mov
pop
xchg
scas
insb
pop
push
cmp
aam
test
xchg
inc
jns
test
cmpsl
gs
inc
jecxz
mov
fst
lods
test
xlat
aas
xchg
add
inc
inc
jp
test
or
jmp
push
lock
lock
jge
repz
mov
xor
idiv
jo
inc
mov
push
sbb
les
bound
pushf
int3
icebp
mov
popa
imul
jge
jl
outsb
mov
notl
aas
lds
mov
shlb
push
mov
push
xor
shlb
scas
popf
jno
out
cmpsb
lds
sbb
cmp
mov
outsl
push
cmc
push
adc
fsubrl
cld
add
imul
aas
mov
scas
stos
xor
scas
stos
jb
out
jmp
jns
push
aam
bound
jbe
sarl
ss
int3
enter
or
sbb
mov
inc
or
js
push
std
or
into
shl
popf
pop
inc
stc
mov
mov
sbb
xchg
push
lcall
or
or
jl
xor
sbb
adc
jp
jecxz
sbb
into
pop
jno
popa
jo
into
iret
add
sbb
mov
xchg
testl
mov
scas
or
enter
out
sahf
sbb
push
nop
add
enter
sbb
push
aad
ss
test
jmp
rcl
sti
cli
or
mov
push
lods
push
mov
xchg
pop
pop
in
rorb
and
and
mov
pop
ljmp
push
into
filds
mov
sub
push
ret
add
dec
clc
jno
sbb
jl
fcoms
int3
pop
inc
stos
jg
dec
or
xchg
dec
mov
aad
lds
pop
scas
inc
cld
pop
cmpsb
dec
inc
add
dec
jmp
fsubp
stos
mov
insb
leave
pop
sub
dec
mov
jg
mov
and
outsb
mov
adc
fimuls
lret
cmpsb
int
lret
cmp
push
cmpsl
push
icebp
sbbl
or
mov
jb
clc
lods
xor
jae
add
jne
dec
sahf
mov
xchg
jge
xor
mov
and
aas
mov
fmul
xorb
jmp
push
push
jecxz
lea
mov
sub
inc
push
dec
in
mov
xor
icebp
sbb
or
mov
or
and
test
cmpsl
dec
ds
repz
xlat
fsubrl
inc
mov
or
sub
rcr
mov
lahf
jo
or
aas
and
xchg
fsts
lret
lea
les
repnz
in
jns
cmp
jle
mov
adc
lret
mov
test
push
jae
add
xor
cmpl
cltd
mov
movsb
cmp
sub
mov
iret
ret
out
into
lods
adcl
fmuls
insb
std
add
push
movsb
mov
push
out
adc
fdivrs
dec
leave
xor
sbb
stos
jmp
retw
cmc
jno
lods
les
pop
in
mov
imul
adc
stc
loop
sbb
jb
lods
and
outsb
clc
fidivs
inc
pop
push
nop
in
test
subb
loope
mov
cwtl
jp
push
push
out
add
out
int3
cltd
and
out
testl
add
daa
push
aaa
mov
shlb
lret
mov
add
dec
sub
je
cmp
lcall
lea
xchg
cmpl
xor
pop
inc
fdivs
in
iret
les
add
in
pop
sti
add
mov
fldt
adc
pusha
push
cli
std
push
adc
jnp
imul
pop
mov
scas
imul
xchg
inc
cmpb
and
mov
xchg
xchg
inc
adc
add
in
loopne
and
dec
xchg
cli
jb
ja
adcb
sbb
inc
add
adc
dec
hlt
adc
imul
push
sbb
dec
add
dec
loop
xchg
cli
aaa
fstps
ret
and
dec
jl
mov
movsl
loope
cmp
push
mov
cld
mov
lods
or
push
jae
insb
xchg
xor
dec
dec
test
pop
xor
pop
fisubl
in
mov
and
lds
fistpl
pop
hlt
pop
mov
pop
jmp
cld
pop
cmpsl
addr16
gs
mov
mov
jg
mov
fiaddl
jbe
cld
xchg
mov
add
and
or
pushf
dec
arpl
lea
fwait
nop
sbb
adc
and
sub
pushf
test
pop
filds
dec
and
lcall
cmp
test
mov
cld
add
addr16
adc
mov
push
ret
call
push
sbb
out
dec
stos
insb
fldcw
fstpt
clc
cs
out
popf
or
mov
ljmp
or
push
insl
rol
pop
and
orb
push
insl
xchg
loop
push
sahf
movsl
xchg
cmpsb
sbb
aam
hlt
outsl
adc
daa
mov
add
sahf
lds
mov
scas
sbb
mov
dec
mov
movsl
pop
mov
dec
mov
pop
repnz
mov
add
and
jnp
arpl
gs
push
inc
pop
fcoms
xchg
stos
aaa
xchg
add
add
sbb
ror
push
cmp
adc
xchg
in
pushf
or
jle,pt
dec
adc
movsl
fs
push
out
add
rcll
jno
leave
fcoms
fmul
xor
mov
mov
mov
push
push
lods
call
mov
or
stos
mov
dec
inc
xor
sbb
push
fstpl
test
xor
out
adc
xchg
add
ds
hlt
comiss
outsb
sub
mov
mov
push
andb
ret
dec
xlat
leave
inc
pushl
xchg
add
loop
cli
adc
add
mov
mov
mov
xchg
push
mov
jo
iret
ja
pop
dec
jnp
jbe
int
inc
outsb
cmp
mov
xchg
sub
mov
pop
pusha
mov
xor
insb
xchg
iret
shlb
cwtl
jnp
dec
xor
mov
outsb
fdivrl
adc
dec
aas
sbb
orl
xorl
jg
cli
je
and
bnd
fisubrs
fcomps
adc
push
inc
mov
push
aas
mov
insb
cmp
in
into
aam
or
cmp
inc
xchg
add
xchg
dec
and
add
jns
adc
cli
mov
dec
and
dec
sti
in
pusha
add
cmp
mov
mov
inc
rorb
rolb
inc
and
add
and
into
scas
pushf
add
inc
jo
or
in
inc
mov
mov
fwait
inc
imul
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
