push
mov
sub
sbb
mov
push
mov
adc
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
call
jmp
mov
movl
cmpl
je
cmpl
ja
jmp
pushl
push
push
push
call
mov
dec
mov
jmp
xor
sbbl
mov
andl
add
mov
sbb
mov
mov
movl
cmpl
je
cmpl
jb
jmp
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
xor
or
mov
sbb
mov
sub
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
push
push
push
call
jmp
mov
sub
movl
movl
mov
dec
xor
xorl
add
addl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jle
jmp
call
jmp
mov
mov
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
push
pushl
call
mov
dec
mov
jmp
mov
sub
mov
push
xor
xor
xor
pop
orl
sub
addl
add
movzbl
xor
movl
mov
movl
addl
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
pushl
call
jmp
mov
xorl
mov
mov
sbbl
xor
add
mov
orl
lea
mov
mov
incl
xor
sbbl
add
orl
mov
subl
lea
push
neg
mov
subl
xor
add
push
mov
push
movl
pushl
call
xor
add
and
mov
mov
mov
mov
mov
sub
sub
movl
mov
mov
xorl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movzwl
sbb
movl
mov
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
sub
not
mov
movl
movl
mov
mov
movl
mov
movl
cmp
movl
je
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
xor
xor
orl
lea
xor
mov
xor
div
sub
mov
mov
sbbl
xor
xor
sub
cmp
movl
jne
add
mov
add
mov
mov
xorl
mov
addl
xor
xor
add
xorl
add
mov
cmp
jae
lea
movl
cmpl
je
cmpl
jg
jmp
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
xor
add
movl
lea
movl
mov
not
mov
movl
cmp
movl
jbe
addl
addl
movl
jmp
addl
addl
sub
mov
xorl
xor
decl
inc
sbbl
incl
addl
add
cmp
movl
jb
notl
mov
xor
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
jmp
and
daa
lea
repz
jp
jp
pop
jp
and
daa
cmp
jno
jne
sbb
push
inc
rcr
std
insb
push
imul
jl
gs
pop
dec
cmp
cli
xchg
xchg
jg
mov
sub
jbe
cli
arpl
jmp
xchg
and
mov
rolb
imul
ss
or
imul
pop
adc
addb
add
jae
movsb
pop
mov
add
fisubrl
bound
iret
mov
xchg
insl
lock
bound
add
test
fcoml
data16
bound
add
sbb
jb
jo
ret
pop
add
push
movsl
in
jge
scas
push
mov
add
sub
ja
adc
es
jb
lock
xor
movsl
fcoml
add
cmpsl
cmp
inc
ljmp
mov
mov
sarb
mov
inc
stc
pop
sarb
out
orb
scas
sbb
or
mov
jno
pop
push
xchg
fidivs
paddd
das
adc
mov
les
je
or
jg
sub
xlat
movsl
xchg
jp
movl
lret
jo
mov
or
insl
test
or
mov
bound
cmpl
mov
lds
xchg
gs
push
lret
ljmp
cmp
pop
cmp
mov
mov
jp
iret
aas
jmp
imul
rcl
push
repz
outsl
sti
cmp
add
in
xchg
aad
sbbb
fcoml
pop
lahf
ret
adc
cwtl
out
popa
int
cmp
jne
mov
ret
push
push
js
daa
xor
mov
sbb
jo
push
xchg
in
push
testb
call
sub
jl
cltd
fs
loopne
icebp
js
pop
lods
and
loope
mov
mov
fiaddl
popa
test
push
mov
or
sbb
adc
mov
outsl
add
sub
imul
and
roll
inc
hlt
ficomps
int3
in
pop
mov
pushf
lock
fistl
int3
pushf
push
js
and
push
ficoms
push
sbb
mov
int
pop
movsb
pop
cs
xchg
ds
in
mov
xchg
mov
jae
pop
cmpsb
lods
jo
sub
test
mov
rorl
add
xlat
in
jns
dec
je
lods
dec
push
sbb
sbb
sahf
mov
mov
shlb
adc
add
stos
sti
incb
sbb
xchg
push
adc
hlt
adc
ret
adc
push
sub
outsb
xchg
or
cmp
arpl
hlt
jge
dec
xchg
pop
xorl
test
pop
arpl
xchg
scas
sub
and
in
lods
test
cmpsb
nop
fdivrs
mov
dec
lahf
cmp
test
and
aad
inc
jmp
inc
out
pushf
adc
xor
mov
mov
inc
imul
bound
inc
scas
add
popf
lret
pusha
daa
aas
adc
popf
call
push
sub
xchg
pop
incb
std
adc
je
xchg
test
fdivl
add
jne
xchg
mov
or
push
call
sub
popa
fisubrl
sbb
dec
jl
sbb
lock
inc
jp
shl
fcoms
dec
push
sub
sub
pop
adc
stos
adc
mov
aam
insl
cmp
mov
adc
imul
xchg
loope
pop
sbb
cs
jmp
inc
xlat
arpl
shlb
xchg
mov
xcrypt-ctr
cmpsl
fwait
pop
bound
dec
lock
inc
xchg
sti
sbb
mov
scas
test
sbb
cmp
push
cwtl
call
enter
lods
mov
dec
rolb
adc
sub
ja
mov
popf
mov
jb
out
add
inc
and
mov
icebp
xchg
lds
dec
cmp
adc
and
cmp
int3
out
and
enter
aaa
xchg
je
sbb
outsb
add
sub
cld
inc
jp
push
data16
mov
daa
aaa
mov
cwtl
jae
xchg
aas
mov
test
mov
aaa
notl
aad
mov
scas
xchg
pop
adc
mov
cmpb
das
pusha
cli
xor
pop
int3
sub
es
pop
jecxz
es
leave
cmp
jae
lcall
ret
pop
and
inc
lds
jnp
push
out
test
in
cli
push
push
mov
jns
cld
hlt
mov
cmp
testl
push
loopne
mov
jp
or
push
daa
jle
mov
xchg
mov
xchg
daa
adcb
push
clc
outsl
outsb
jle
hlt
sbb
or
pop
pop
mov
inc
in
or
fadds
arpl
mov
rclb
dec
out
scas
or
loope
jmp
adc
jle
jne
mov
cld
add
or
xchg
in
pop
pop
cmp
fidivrs
and
stos
jle
call
inc
insl
test
repnz
rorl
aaa
push
mov
in
je
mov
lock
push
jle
testb
jg
mov
ss
data16
jp
roll
stos
cmp
adc
cmc
sub
daa
in
cmp
and
dec
xor
aaa
jmp
push
jg
jae
scas
rolb
mov
repz
fildll
daa
sub
test
movsb
addl
ljmp
dec
movsb
jg
rcll
add
movsb
and
ret
idivl
clc
lock
cmp
iret
mov
cmp
outsl
fucomp
call
push
ficoml
mov
push
in
scas
jl
loop
outsb
xchg
cwtl
out
fwait
cmp
push
je
arpl
out
movsb
stos
push
fiaddl
clc
imul
cli
push
sub
push
rolb
jne
enter
fldcw
repz
mov
nop
fcomi
call
cld
mov
mov
and
sbb
and
stc
test
fiadds
mov
adc
das
mov
and
push
adc
int3
dec
mov
inc
aam
pop
pop
jno
std
lahf
das
inc
sub
pop
inc
stc
push
daa
jecxz
js
stc
fcmovu
push
push
call
in
js
push
lds
xchg
xor
arpl
push
imul
mov
push
push
xor
add
inc
sbb
sub
adcb
outsb
xlat
sub
rcr
sub
jg
cld
add
popf
out
cmpsb
lds
add
sub
mov
iret
scas
in
cmp
dec
test
faddl
aad
xchg
fmuls
gs
push
es
sarl
pop
outsb
sub
movsb
xor
outsl
mov
add
out
flds
insl
mov
push
dec
lods
js
mov
cwtl
adc
rclb
push
mov
lahf
sbb
rorb
push
sub
push
lods
or
inc
fcoml
scas
hlt
dec
in
dec
jp
mov
pop
xlat
test
int
das
fnstsw
jo
das
into
inc
xor
or
sbb
sahf
sub
cld
sbb
pop
cli
pop
and
or
and
xchg
test
popf
data16
jmp
add
pop
lahf
push
push
aas
adc
jl
mov
push
mov
rorl
rorb
add
xor
lret
std
push
loopne
outsl
jno
mov
repnz
add
sub
mov
test
xchg
pushf
adc
scas
out
jp
adc
mov
jl
insl
mov
fsubr
inc
rcll
ss
test
push
dec
push
shrl
loopne
sub
mov
stos
cmp
dec
jo
pop
push
pop
ror
imul
insl
cmpsb
iret
mov
pop
loope,pn
dec
lahf
push
loope
fildl
inc
adc
xorl
xchg
ret
fs
leave
adc
fs
aas
sub
ljmp
xchg
sbb
cs
jecxz,pt
xor
xchg
jns
push
rcrb
add
push
aas
test
scas
mov
sti
mov
aaa
mov
repz
sub
dec
cli
repz
cmp
fcomi
ss
loopne
pop
dec
and
stos
mov
in
das
cmp
in
leave
and
cvtps2pd
cmp
sub
xor
enter
ljmp
dec
cld
lods
loope
iret
in
ja
push
stos
out
and
adc
in
inc
out
mov
push
lret
loop
and
mov
in
push
nop
xchg
sub
jp
mov
rorb
idiv
and
mov
jecxz
lds
or
mov
push
mov
rcr
mov
mov
out
les
repz
fcompl
pop
sbbb
fs
sbb
mov
sbb
cmpsl
out
imul
pushf
xchg
jmp
out
xchg
add
xchg
dec
mov
inc
adc
pop
cmp
add
arpl
or
push
aam
in
jp
or
daa
dec
test
adc
aaa
cltd
int3
fildl
inc
push
cs
sub
fsubrl
into
paddusw
cld
jecxz
pop
movsl
adc
arpl
jmp
je
out
in
orl
loope
scas
mov
mov
xchg
cltd
dec
mov
pop
push
mov
jmp
in
sahf
cmc
shll
cmpsb
and
loop
push
pop
or
or
add
lods
lcall
cli
pop
leave
jl
data16
sti
movsl
inc
mov
xchg
test
jl
xchg
mov
pusha
xchg
bound
addr16
lds
xor
fcoml
xor
mov
and
inc
movsl
fs
sbb
mov
mov
test
andl
cwtl
cmpl
in
test
and
cli
inc
fsubl
enter
es
and
adc
ss
cs
mov
sbb
mov
jge
push
ja
sub
inc
nop
stos
sub
call
pop
lret
je
inc
int
jg
mov
sbb
sbb
sbb
sbb
inc
inc
and
das
es
daa
int3
js
or
mov
xor
jge
adc
fs
pop
add
aaa
mov
sbb
cmp
jmp
es
xchg
xor
into
outsb
aaa
push
pop
xor
inc
xchg
lret
mov
sub
sahf
and
daa
jge
xor
scas
adc
cmp
jg
std
in
das
cmpsb
addr16
push
or
in
mov
inc
dec
xchg
inc
stos
ds
adc
lcall
jnp
daa
loope
shrb
out
sub
pop
pop
out
gs
data16
add
gs
push
nop
aas
jns
add
in
cli
icebp
add
repnz
or
xchg
sub
and
in
fstpt
out
mov
les
adc
sbb
jbe
fwait
movups
outsb
cltd
out
lret
and
lahf
xchg
sub
adc
dec
jle
movb
arpl
push
mov
cmp
or
outsb
psraw
mov
cmp
pop
hlt
test
pop
xchg
test
sub
pop
mov
jle
pop
mov
mov
xchg
jo
aaa
inc
mov
sbb
out
neg
cmpsb
aas
and
popa
push
cmpsb
cs
stos
outsb
mov
jmp
cltd
xor
adc
mov
loope
xor
jns
xchg
jne
addr16
pop
repnz
call
cltd
inc
hlt
mov
xlat
icebp
cmp
pushf
cmp
hlt
pop
or
lcall
push
pop
inc
and
cmp
xchg
cmp
or
addr16
lret
mov
gs
lds
hlt
lret
mov
mov
push
or
jb
addr16
sbb
mov
mov
loop
fcmovnu
mov
push
repnz
adc
inc
in
jne
ficoml
imul
scas
inc
repz
inc
xor
push
push
jne
sbb
pushf
mov
cs
je
in
cmc
cmp
into
sahf
sbb
cs
clc
mov
cmpsl
inc
xor
loope
jb
sub
add
lcall
dec
xchg
cmc
mov
lea
inc
jae
std
jno
sub
in
insl
or
jg
fdiv
xchg
jmp
aas
adc
sbb
iret
ret
stos
out
jnp
sub
mov
je
pop
mov
out
hlt
int
mov
pop
xchg
inc
push
addr16
in
mov
lods
push
sub
and
lds
scas
sbb
xor
add
xor
mov
leave
and
lock
jmp
xchg
cmp
xor
and
push
add
mov
push
addr16
xchg
aas
lea
repz
mov
pop
xor
es
aam
push
out
mov
adc
jne
jbe
inc
int
adc
int3
mov
cmpsl
aad
or
aas
inc
nop
push
sub
movsb
stc
sti
inc
cmc
jecxz
mov
fwait
sti
jb
sqrtps
pushf
jmp
cld
pop
aam
loop
and
cmpsb
cs
je
fcompl
jo
shrb
mov
add
pushf
or
sub
adc
imul
std
fsubs
incl
mov
aaa
xlat
jle
test
adc
pcmpeqw
test
or
mov
pop
fisubs
cwtl
aas
pop
push
scas
fdivrs
sbb
dec
mov
pop
sub
dec
xchg
mov
add
adc
pop
bound
imul
sahf
roll
jb
pop
call
mov
xchg
adc
loope
sbb
lret
mov
pop
sub
mov
push
mov
inc
arpl
adc
jbe
inc
rorl
and
mov
mov
pop
jge
shlb
xor
pushf
movsb
lods
adc
cmp
push
les
inc
xchg
sbb
jnp
dec
push
mov
outsb
stos
into
push
cmp
mov
mov
mov
pmaxub
sub
out
mov
sti
js
add
inc
jne
test
out
pop
int3
aam
or
pop
rcll
sbb
ret
stos
cltd
sahf
imul
out
sarb
out
xchg
stos
cmp
push
sub
and
jl
insl
cmp
or
cmp
xor
stc
leave
xlat
int
xor
daa
mov
insb
fwait
xor
xchg
addr16
mov
push
pop
and
push
aas
and
or
shll
lods
xchg
pop
cmp
pop
jns
daa
insb
or
stc
fdivrl
lods
lea
out
and
lods
xchg
ss
cwtl
movsb
push
cmpsb
mov
lea
sub
mov
hlt
fnsave
xlat
sbb
sahf
add
cli
aas
bound
imul
daa
js
sub
and
sub
and
mov
stos
adc
jmp
mov
xchg
xchg
push
cmp
cmpsb
mov
xor
iret
and
dec
aaa
push
xchg
hlt
ds
push
inc
or
ficoms
mov
jo
adc
cmp
cmpl
jno
ss
fnstcw
popa
lret
add
fs
mov
out
jge
lods
push
cmp
sub
xchg
rclb
xor
clc
scas
push
mov
mulb
aad
add
lds
imul
lea
pop
sbbb
push
sbb
push
mov
inc
in
xchg
arpl
fdivr
test
xchg
sbb
pusha
into
in
je
pop
test
out
xchg
xchg
clc
jae
sbb
data16
push
mov
xchg
inc
mov
popf
jmp
notl
in
je
cld
in
in
mov
and
adc
pop
cmp
divb
clc
sub
out
imul
sbb
aaa
fistpll
cmp
pushf
outsl
pop
bound
int3
xlat
adc
insl
cmp
cld
mov
stc
push
icebp
or
test
mov
push
push
sub
fcmovu
lock
out
push
jge
adcl
test
loopne
push
roll
jae
push
into
enter
ja
push
or
jb
dec
jno
or
scas
mov
dec
scas
adc
pop
xor
push
mov
mov
jae
mov
inc
adc
scas
test
xchg
xchg
or
mov
xorl
mov
lcall
mov
aam
inc
cld
xor
xchg
fistl
push
outsb
int
push
push
push
fsubp
cmp
out
cld
push
adc
dec
scas
jno
dec
inc
xor
fsubrp
dec
pop
sbb
out
aaa
cmpl
pop
add
div
jb
je
sbb
inc
and
pop
pop
inc
xchg
xor
lods
pop
mov
add
mov
mov
xorl
in
dec
pop
jp
imul
pop
jbe
xor
mov
aam
xchg
les
sub
gs
fs
out
inc
ds
push
mov
jo
out
sub
xor
cmp
data16
not
xchg
sbb
push
movsl
add
jp
shlb
dec
cld
add
sbb
mov
push
push
mov
dec
mov
push
sbb
add
nop
insb
sti
mov
inc
pusha
out
inc
jno
lret
push
xor
hlt
sti
test
mov
mov
hlt
rol
push
adc
mov
add
cmpsl
pop
dec
lret
or
xor
cmp
mov
adc
adc
add
sub
lret
pop
and
imul
mov
and
push
cli
xor
fwait
inc
sub
pusha
icebp
ret
dec
insl
sub
addl
sub
cli
pop
ja
sarl
dec
inc
mov
fisttps
sub
fst
outsb
mov
test
lret
mov
mov
lds
cmp
int
jbe
xor
call
jne
dec
pop
cmp
popa
mov
aam
xor
mov
les
jg
mov
dec
ss
shrl
jb
pop
lcall
lods
inc
mov
pop
sub
adc
mov
loopne
je
jno
sub
cwtl
mov
jmp
lret
adc
xchg
mov
sub
jp
xchg
cmc
and
jne
rorb
andb
push
and
lods
rorl
jp
inc
enter
fisubrs
jne
sub
cmp
xchg
out
cmp
adc
sub
mov
mov
xorb
cmc
adc
jg
lods
ja
pop
addr16
fsubr
bound
out
in
data16
dec
in
mov
testl
dec
push
dec
adc
mov
or
jecxz
sbb
mov
pop
pop
jmp
pop
pop
mov
jae
popl
pop
aaa
fimull
mov
xchg
daa
push
stos
dec
add
sbb
jge
push
push
mov
inc
xchg
mov
aaa
adc
pop
and
xchg
int3
mov
test
stos
clc
sbb
lahf
arpl
cwtl
adc
sub
push
repz
popf
pop
mov
mov
push
inc
and
repz
dec
mov
push
mov
push
movsb
xor
sub
xor
pusha
enter
inc
jg
ds
add
cmp
lods
or
js
and
jae
inc
ljmp
imul
sub
xor
push
addb
or
jmp
xchg
inc
fistl
push
test
js
stc
pop
fsubs
lahf
cmp
xor
movsl
popf
jp
les
sbb
daa
cmp
add
jo
jno
lods
push
movsl
add
stc
dec
mov
fsubrs
mov
out
jns
pop
les
and
sbb
bound
mov
mov
in
lcall
imul
adc
lret
fidivs
inc
or
mov
ror
imulb
dec
jae
ljmp
paddusw
xchg
repnz
lcall
ret
or
jo
ret
mov
push
mov
mov
inc
imul
push
push
je
rcll
fldl
repz
loopne
and
pop
pop
incb
adc
jno
ljmp
orl
ret
popa
mov
push
iret
or
dec
rorl
and
int3
xchg
pop
sub
and
sbb
adc
sbb
sbb
es
pop
push
mov
and
nop
sbb
addl
lret
loopne
dec
jns
cli
or
test
ss
sti
mov
adc
jb
nop
stos
iret
or
xchg
ret
push
inc
xchg
lds
add
or
xor
pop
sub
test
jg
pushf
loopne
mov
push
lahf
pop
adc
mov
jbe
ja
xchg
adc
pop
cld
mov
roll
cmp
test
mov
pop
gs
nop
movsb
jmp
pop
sbb
hlt
lods
mov
mov
cli
push
inc
mov
jecxz
fcmovnb
jnp
lods
xor
aaa
outsb
dec
jp
inc
fisttps
in
add
fldcw
sbb
es
mov
pop
or
cmp
pop
sbb
push
sub
out
mov
andb
or
cs
cltd
dec
sub
sbb
cmp
movsb
loop
fnstenv
lds
xchg
repnz
enter
mov
adc
push
xor
sub
xlat
addr16
mov
xchg
xor
std
inc
insl
pop
xor
mov
and
out
push
mov
lret
leave
mov
lods
sbb
dec
adc
xchg
pusha
mull
mov
mov
in
adc
js
pusha
jbe
dec
pop
mov
mov
sbb
loopne
in
jne
je,pt
or
xchg
dec
test
movsb
stc
das
sbb
test
xorb
jae
das
mov
icebp
jbe
hlt
xchg
adc
sarl
or
and
mov
cmp
ret
xchg
and
daa
inc
sub
pop
orl
stos
xchg
test
icebp
inc
sub
stos
scas
scas
out
sub
loope
inc
inc
push
out
and
outsb
rol
lahf
inc
push
jg
ss
mov
and
fsubl
cmpsb
es
cmpb
lret
shll
cli
lea
lret
aam
jne
aam
sbb
nop
imul
fcomi
pop
cmp
jne
mov
sti
push
mov
cmp
aas
rclb
out
adc
dec
dec
call
pop
leave
les
mov
sbbb
or
std
xchg
mov
adc
fisubrs
cmp
call
sub
adc
xor
jno
das
pushf
lods
lock
jnp
inc
add
adc
add
bound
push
mov
std
ljmp
loop
scas
insl
adc
add
xorl
and
outsb
sahf
lods
adc
cld
enter
fildll
ja
pop
lret
dec
and
sti
jbe
scas
mov
iret
out
add
sub
jle
std
scas
xchg
cld
xor
adc
adc
jne
push
test
mov
lret
pop
adc
fdivp
cwtl
jg
push
or
mov
xor
cmp
cmp
pop
jo
inc
xorl
roll
cmpsl
lcall
out
loope
pop
mov
negl
xlat
sub
pop
push
stos
xchg
mov
ret
shrb
es
xor
mov
lcall
ja
repnz
mov
lea
jo
addr16
push
enter
jge
lcall
push
sti
mov
xor
popa
add
push
mov
sahf
test
push
lcall
cmp
mov
add
jns
sub
push
cltd
dec
scas
xor
cmc
or
cld
xlat
xchg
sti
inc
xchg
shrb
int3
mov
cli
test
xlat
xchg
aas
sarb
ljmp
xchg
shlb
mov
lds
xor
jmp
push
sub
inc
or
jbe
sub
jb
sbb
ds
divb
add
daa
sbb
xor
inc
mov
mov
mov
out
inc
xchg
jle
pusha
lods
addr16
int
push
sbb
outsl
data16
inc
call
pop
push
push
push
pop
in
into
repz
inc
test
clc
xor
stc
fucomi
mov
adc
sub
outsl
je
push
dec
mov
stc
or
jo
arpl
push
insb
mov
jecxz
mull
sub
das
push
icebp
pop
push
inc
fucomip
loop
and
push
iret
jmp
pusha
xchg
vmwrite
sarb
gs
repz
adc
int
inc
aam
jb
mov
push
sub
mov
int3
inc
cltd
and
jae
mov
mov
pop
pop
lea
push
leave
sbb
std
fs
mov
popa
sahf
outsl
push
mov
test
and
ret
cmp
xor
roll
cmp
cmpsb
in
jnp
or
pop
pop
cs
shll
dec
mov
or
dec
rcll
cmc
les
cmpsl
je
push
repz
mov
xor
lock
clc
push
push
jge
jp
in
xchg
test
pop
int
or
pop
movb
cmpsl
xchg
mov
aaa
iret
sub
popf
xor
jmp
packsswb
sub
sub
pusha
lahf
out
sub
adc
sbb
orb
into
gs
out
adc
mov
fs
mov
leave
mov
into
mov
xchg
cmpsb
and
and
push
pop
clc
icebp
cmpb
push
imul
sbb
popa
int3
and
pushf
add
xor
leave
pop
test
jno
cmp
fmuls
out
mov
xchg
mov
xchg
cltd
cmp
lock
or
insb
jg
je
push
sub
addr16
jnp
mov
mov
shrl
cltd
mov
jmp
cmp
mov
sbb
rcll
nop
jbe
pop
mov
push
orb
repnz
mov
jl
jle
dec
mov
jge
in
and
adc
push
push
jl
outsb
outsl
pop
sbb
cmpsb
mov
outsl
dec
scas
aaa
ret
iret
outsb
push
push
or
pop
mov
or
pusha
xchg
push
test
jb
mov
push
filds
out
push
pushf
cmpsb
call
or
push
jecxz
adc
push
dec
xlat
stos
ds
sub
inc
mov
shrl
lahf
sbb
mov
pop
shrb
jno
vmread
xchg
cmp
pop
or
jmp
aas
and
addl
dec
bound
shll
mov
cmp
fmul
or
fists
and
or
mov
lcall
mov
jp
dec
mov
pop
or
fldl
inc
push
jno
mov
enter
mov
cltd
bound
xchg
daa
xor
mov
jns
in
fisttpll
cmp
sbb
jecxz
mov
ficompl
jle
mov
jge
fimull
lds
push
mov
push
shrb
cli
fsubl
lcall
sub
out
sub
outsb
push
pusha
pushf
adc
test
mov
mov
mov
loopne
adc
fisubrs
clc
data16
mov
out
lock
mov
lea
add
inc
bound
enter
gs
jg
out
xchg
mov
jecxz
mov
jno
sub
mov
in
xor
out
add
int3
pusha
dec
insl
lds
inc
test
sub
imul
mov
addl
pop
test
xchg
adc
pop
lea
xor
lods
ljmp
aaa
cmp
les
xor
js
jns
ds
xchg
mov
in
adc
add
xor
jae
add
mov
mov
add
pop
jno
pop
mov
xchg
dec
scas
adc
frstor
or
mov
lcall
pop
jp
popf
rcll
push
loope
popf
dec
sbb
dec
adc
xchg
call
mov
xchg
je
loopne
pushf
push
cmp
xchg
pop
jns
addr16
xor
xor
daa
in
shll
add
clc
jno
push
jge
jl
dec
out
sub
push
mov
js
int3
rcrl
xor
cmp
mov
inc
fistpl
lock
jbe
mov
pushf
imul
inc
es
pop
and
imul
outsl
loope
setle
add
push
sahf
add
icebp
dec
sahf
xchg
xchg
add
stc
sbb
arpl
inc
xor
loop
or
fsts
aam
fstpt
jmp
loopne
mov
jb
outsl
cli
outsl
fwait
xchg
pop
sub
insl
sbb
push
mov
mov
loopne
xchg
cmp
and
scas
cmp
pop
sub
outsb
push
add
jmp
movsb
xor
movsl
aas
push
mov
and
sbb
test
jmp
sub
fadds
mov
jmp
xchg
out
jbe
inc
in
enter
out
incb
mov
dec
shlb
push
fcmovb
stos
xchg
cli
pusha
mov
or
and
inc
and
in
out
outsl
jnp
negl
and
inc
pop
push
aam
rorb
in
jp
fildl
aaa
xchg
outsl
and
idivb
xchg
sub
in
movb
mov
enter
sahf
jmp
fcomip
xchg
stc
ja
hlt
pushf
adc
and
xor
lods
pop
fwait
push
mov
icebp
mov
pop
negl
push
lods
out
jge
les
shrb
pop
cltd
aaa
mov
mov
push
lea
insl
pop
adc
call
icebp
jno
xor
loop
dec
shlb
mov
mov
lods
stos
sbb
mov
js
into
adc
icebp
mov
add
jmp
into
out
fisubs
sti
daa
aad
into
dec
rolb
pop
or
pop
insb
sbb
xchg
dec
or
mov
jg
pop
pcmpgtw
loop
test
lret
in
add
push
or
pop
cld
xor
loop
or
mov
fucomi
cli
dec
mov
mov
sbbb
xchg
cmp
cld
xor
or
lahf
pop
fbstp
adc
roll
xor
cmp
int3
push
or
and
cs
sub
adc
out
gs
std
push
or
sti
mov
add
stos
cmp
push
jb
aam
out
ficoms
movsl
scas
test
movsl
popl
sbb
cld
outsb
inc
mov
out
and
repnz
in
insb
fsubrl
out
jle
rorl
jge
mov
aaa
lret
xor
mov
adc
clc
out
repz
sub
push
andb
xor
xchg
add
inc
fwait
lahf
push
cmpsl
dec
adc
andl
outsl
test
decb
rcrl
sahf
jecxz
movsl
xor
xor
mov
ja
jne
mov
and
sub
sbb
sbb
adc
sbb
imul
jle
jnp
lcall
sbb
dec
xchg
gs
and
xchg
out
sub
push
cmpsb
pop
adc
arpl
and
or
hlt
mov
add
inc
enter
fucom
faddp
call
mov
mov
in
sub
jmp
push
leave
incl
int
test
ret
xor
adc
fwait
inc
xchg
inc
mov
gs
test
push
ret
or
mov
fsubrl
dec
dec
scas
sbb
js
xchg
imul
push
out
mov
mov
pop
fs
xor
cltd
xor
mov
test
pop
mov
addr16
roll
xchg
xchg
test
and
leave
jo
rolb
pop
dec
rorb
scas
rorl
sbb
hlt
xor
add
jmp
scas
pushf
and
add
test
dec
in
cld
das
pop
jp
das
pop
jp
sub
mov
sub
push
push
fists
cmp
sub
icebp
popa
pop
sbb
xor
adc
mov
inc
pop
ffreep
pop
mov
push
fildl
loopne
or
push
cltd
or
arpl
mov
fdivs
add
adc
jo
or
sbb
adc
les
cli
jmp
pop
data16
xchg
inc
lahf
mov
push
mov
fisubs
mov
jne
jge
add
fidivrl
pop
adc
cmp
or
push
daa
pop
cmp
pop
mov
pop
dec
sub
jae
pop
fwait
jp
clc
pusha
cmp
push
jle
inc
mov
push
push
sar
mov
aas
out
inc
in
sbb
push
pop
jo
jne
arpl
ffreep
adc
test
cmpsb
paddsw
test
aad
cmp
mov
insb
ds
push
cmpsb
je
sbb
int
lret
xchg
clc
mov
sub
enter
mov
add
lcall
aad
and
pop
mov
xor
cmp
out
cmp
lea
and
cmpl
pop
inc
xor
inc
addl
mov
insb
lret
xor
aaa
mov
outsb
js
mov
fsts
inc
mov
cmpl
imul
and
push
dec
mov
jbe
ljmp
dec
mov
jle
jae
daa
dec
inc
jge
aad
jl
stos
scas
ds
out
dec
adc
shll
movsb
and
push
aam
sar
lcall
js
into
mov
push
shll
in
sti
incb
cmp
jbe
xchg
pop
ret
add
js
scas
xor
cmpsb
xor
sbb
aad
in
iret
xchg
test
and
pop
push
mov
hlt
push
pop
inc
sub
xchg
or
faddl
push
fimuls
lock
ljmp
or
arpl
or
jno
pop
xor
rcll
scas
cmp
aaa
out
cltd
enter
cmp
jl
pop
stos
shr
push
outsb
out
dec
in
ja
push
inc
push
xchg
imull
lods
adc
inc
in
stc
or
dec
mov
lcall
adc
and
aaa
pop
xchg
imul
jns
enter
jno
xchg
sbb
leave
xor
and
repz
dec
push
mov
inc
mov
push
jmp
adc
mov
cs
ljmp
repnz
mov
je
jb
pop
lret
jl
movsb
in
and
jo
xor
xchg
xchg
xchg
enter
jne
cmpb
jbe
cltd
xchg
cmp
scas
xor
scas
das
or
add
mov
jne
xchg
adcl
int
push
mov
mov
xchg
cld
xor
mov
shl
sbb
pop
fwait
sbb
fdecstp
jae
push
jmp
fs
sub
or
lods
gs
mov
fcmovb
loopne
xor
repnz
xchg
mov
jl
mov
scas
icebp
and
pusha
jp
dec
aam
fwait
test
push
fmulp
dec
lahf
and
scas
out
dec
pop
and
sbb
push
in
push
pop
popf
lret
loop
scas
add
fsubrs
xchg
cwtl
adc
les
xchg
dec
idiv
ja
addb
cmpsb
xchg
imul
test
jge
mov
fs
mov
xchg
lahf
jne
xchg
sbb
shrl
cmpsl
pushf
orb
outsb
cs
add
and
xchg
fistl
pop
lret
fistpll
loope
sub
pop
mov
push
adc
jl
shlb
push
sbb
sub
xchg
fbstp
mov
dec
loope
jmp
or
mov
mov
lods
lds
pop
loop
pop
mov
cld
xchg
dec
stos
jmp
int
jg
pop
andb
cmpsb
cltd
aam
cmp
pop
mov
adc
in
aad
xchg
ja
popa
popf
push
pusha
movsb
pop
inc
mov
fisubl
xchg
push
xor
adc
cmpb
sbb
mov
push
shlb
hlt
insb
jecxz
cmpsl
data16
hlt
test
ljmp
mov
add
mov
stc
rolb
inc
adc
das
push
jae
inc
and
bound
nop
cmp
cmp
and
addr16
idivl
enter
sahf
gs
int
cmp
outsl
testb
xor
js
adc
pop
das
jb
jp
cmp
das
adc
and
pop
out
add
outsl
xchg
inc
in
jmp
xchg
shrb
fxch
adc
data16
inc
movsb
mov
pop
mov
jo
jl
hlt
ret
lods
sbb
or
push
jge
jg
int
mov
daa
push
jbe
fbld
cmpsb
lret
inc
mov
dec
subl
sub
fsubs
jp
xor
lock
mov
cmpb
into
in
push
outsl
push
mov
jl
jno
mov
test
jmp
cmpsl
in
fwait
sbb
push
fdivl
loop
fwait
mov
cwtl
mov
shll
cmp
popf
outsl
add
jbe
ja
pop
iret
adc
and
gs
push
ds
mov
cld
add
int
cmc
int
in
pop
adc
jae
adc
xor
sub
dec
push
mov
stc
and
cmpsb
xor
mov
in
popa
inc
push
int
sub
sub
add
lret
lds
and
jnp
or
pop
jge
inc
and
jg
or
adc
inc
inc
jge
pop
inc
sahf
mov
das
mov
push
cmpsl
sub
push
fldt
in
out
mov
xchg
out
call
mov
jnp
add
les
mov
mov
cmp
in
cmp
dec
mov
lods
fimuls
mov
add
mov
test
mov
adcl
outsb
mov
outsb
xor
aaa
push
sub
lret
mov
mov
out
cmc
jmp
and
sahf
cli
push
jmp
xchg
sbb
outsl
in
sbb
dec
popf
cmp
push
repz
xchg
pop
xchg
addr16
inc
in
inc
test
outsb
inc
stc
pop
adc
mov
dec
xor
xchg
mov
mov
push
movsl
fucomp
dec
test
or
mov
cmc
ret
xor
arpl
es
rclb
lods
push
and
outsb
mov
mov
sbb
adc
mov
insb
adcb
scas
dec
das
push
sub
mov
push
in
ja
out
push
int
sbb
push
pop
stc
insl
sbb
outsl
cli
pop
out
dec
into
mov
sub
inc
pop
dec
test
dec
mov
fsubrs
shl
jl
shlb
cmp
fs
scas
xlat
ret
xor
movl
mov
inc
add
stos
loope
roll
sti
jbe
test
xchg
stc
pushf
adc
inc
stos
fisttpl
cli
fstl
mov
outsb
push
jecxz
inc
sbb
sub
in
icebp
lcall
jbe
or
repnz
popa
adc
xor
addb
mov
repz
test
cmp
mov
popa
xchg
rclb
cltd
mov
movsl
loope
sbb
cmp
mov
imul
ja
outsl
aam
cltd
sub
mov
xor
aam
and
jl
lahf
sub
xchg
mov
cmpsb
lahf
scas
lock
and
lret
in
addl
mov
jl
dec
in
fs
ljmp
mov
out
test
test
sub
cs
push
jo
movsb
mov
add
mov
or
mov
rclb
lahf
or
cmc
aad
jle
xchg
and
adcl
xlat
gs
leave
xchg
neg
dec
mov
iret
rorb
mov
imul
sbb
test
push
jne
aaa
jne
les
push
fcmovu
dec
in
mov
test
add
xchg
loope
pop
mov
and
adc
faddl
out
pop
mov
mov
sbb
fldl
sbb
cmpsb
iret
aad
jne
jecxz
cmp
movsl
xchg
insb
push
scas
imul
jge
add
sub
xchg
and
movsl
xor
shll
movsb
sbb
jmp
out
dec
mov
in
clc
xchg
ja
push
jecxz
fwait
fs
or
lahf
jb
xchg
into
pop
xchg
or
pop
jg
cmpsb
fcomi
inc
bound
bound
dec
cwtl
icebp
mov
jmp
dec
addr16
inc
ret
mov
stc
pop
and
dec
pushf
sub
dec
into
iret
add
mov
fdivrl
leave
fimuls
adc
mov
outsl
incb
and
icebp
jbe
sbb
pop
adc
mov
sti
jg
or
mov
mov
lock
or
bnd
jbe
pop
adc
into
es
or
cmp
adc
cmp
test
in
push
mov
int3
push
inc
popf
loop
arpl
pop
lret
lahf
sarl
cli
int
pop
jl
enter
cmp
stos
mov
aas
and
daa
jno
popa
push
or
gs
push
dec
inc
lret
adc
fdecstp
xlat
and
jge
pushf
or
lret
sub
sbbl
fidivl
push
sahf
sub
popa
lea
mov
lret
mov
xchg
xor
bound
outsb
lods
jb
xchg
fucomip
aam
xor
out
sbb
jbe
es
shll
aam
inc
push
pop
jmp
mov
mov
les
cmp
and
mov
cmp
pop
popf
imul
inc
shl
pushf
inc
sbb
shlb
inc
xchg
dec
fidivrl
jecxz
pop
mov
mov
mov
fucomi
pop
dec
jne
mov
jmp
jl
inc
add
xchg
shlb
mov
fsubrl
sbb
popl
pop
sub
mov
repnz
stos
mov
iret
les
test
xor
mov
outsb
xchg
fimuls
rorb
xor
std
push
sbb
jns,pt
sub
sbb
push
rorb
inc
stc
inc
ja
mov
inc
jae
cmp
int
repz
dec
jne
inc
push
ror
dec
stc
push
jmp
or
sub
push
subl
dec
adc
pop
bound
pop
inc
adc
pushf
fisubs
and
cltd
pop
imul
push
subb
cmc
cmp
call
jl
cmp
mov
scas
scas
je
aaa
or
jno
std
add
leave
and
mov
mov
lds
call
sti
loop
shll
or
cmp
add
pop
shll
push
add
leave
subl
push
jne
addr16
add
cld
or
repz
xchg
jne
ja
cli
cwtl
sbb
mov
iret
sub
dec
fcompl
mov
pop
or
add
shlb
stc
jnp
add
popa
mov
and
mov
push
stos
mov
rcrb
jnp
mov
aam
bound
mov
mov
adc
xchg
xlat
idivb
inc
popa
insb
inc
jge
xchg
sbb
ficoml
mov
xor
push
inc
add
ds
sub
movsb
cwtl
mov
test
mov
das
imul
in
data16
rcrl
cmpsl
leave
mov
sbb
and
sbbl
and
and
sub
fldcw
mov
das
jle
jo
mov
mov
dec
ds
xor
push
mov
push
xor
daa
repnz
inc
stc
cmc
mov
ret
ss
rcr
arpl
inc
pop
fstpl
outsl
and
dec
pop
xchg
push
movsb
jns
jbe
fwait
int3
or
adc
sub
and
fimuls
enter
adc
imul
pop
popa
mov
or
ja
mov
cmp
loope
lcall
jbe
mov
es
add
inc
xchg
xchg
mov
fsubrl
jnp
inc
imul
mov
aaa
xchg
daa
mov
jo
push
pusha
jo
pop
subl
adc
fcmovbe
mov
pusha
insl
outsl
xchg
fwait
jmp
push
testl
das
testl
jns
loopne
push
dec
les
cmc
ss
repnz
test
add
lods
push
dec
shlb
das
or
and
fsub
repz
or
fcmovu
ffreep
adc
addr16
in
fidivs
stc
mov
adc
xor
sbb
jecxz
and
fisubrl
push
data16
outsl
sub
decl
outsb
out
push
stc
dec
or
in
dec
xchg
jecxz
shll
pop
inc
aaa
movsb
nop
in
cli
cmpsb
inc
jae
cmp
cmp
sahf
fs
stos
push
aam
into
jo
mov
adc
sub
into
xchg
xchg
loope
lret
into
inc
stos
jmp
inc
out
adc
repnz
xor
xchg
enter
mov
std
aad
test
add
push
inc
pop
fs
adc
jae
sbb
lods
and
cmp
and
cmp
sub
test
jl
inc
pop
xor
stos
sub
inc
cld
push
pop
rorl
jb
mov
mov
popa
sbb
cmp
inc
jo
or
jl
xor
dec
adc
push
sbb
dec
femms
xor
pop
push
lods
or
or
daa
inc
sub
call
ret
mov
cmp
and
stc
mov
movsb
dec
xchg
lock
mov
push
sbb
outsl
sbb
icebp
dec
or
adc
pop
sbb
sahf
pop
mov
inc
fidivrs
aaa
pop
pop
call
lret
sbb
outsb
ss
insl
and
ss
arpl
sbb
je
xchg
mov
cmpsb
ret
push
popf
jnp
ret
jp
xor
lahf
lret
dec
and
orb
mov
stos
and
add
jp
cs
jecxz
fwait
push
imul
je
fwait
in
test
lea
xchg
out
in
adc
aam
out
fildll
push
movsb
dec
inc
dec
loop
mov
ret
jl
faddl
or
mov
jl
repz
lret
or
adc
je
loope
iret
lret
dec
out
pop
idivl
les
xchg
aam
jne
or
lcallw
add
cmpsb
dec
cmp
push
jno
sub
xchg
lods
mov
mov
sahf
mov
stos
fbld
cmpl
jecxz
cld
or
enter
fdivr
out
xlat
mov
cmp
mov
xchg
pop
lret
cmpsb
adc
pop
mov
mov
mov
ret
add
dec
iret
pop
inc
mov
pop
inc
and
jns
mov
mov
push
xchg
lcall
hlt
mov
addr16
and
mov
notl
or
fs
ds
dec
xor
cmp
lods
cs
daa
movsb
insb
cmp
jmp
sar
dec
jmp
push
push
dec
mul
std
mov
xor
push
fwait
push
push
xchg
adc
test
insb
push
xchg
jg
rcr
inc
lock
ds
addr16
arpl
cmc
jmp
mov
jge
mov
rolb
adc
repnz
int3
aam
inc
mov
push
ja
cmp
fbstp
adc
xchg
shlb
iret
loope
inc
mov
mov
jecxz
cmp
loopne
mov
add
and
dec
inc
jmp
loopne
test
mov
cmp
mov
lret
insb
add
lahf
dec
call
out
sub
xchg
std
testb
stc
xor
pop
jns
into
test
dec
mov
jle
test
cwtl
push
imul
push
ffree
push
cmpsl
push
or
outsl
mov
fisttpl
push
roll
test
out
scas
push
sub
inc
aaa
jae
mov
in
lret
inc
aad
sub
mov
push
xchg
mov
out
mov
and
repnz
test
icebp
mov
scas
dec
mov
pop
adc
mov
mov
cmpsb
into
sub
xchg
jecxz
outsb
orb
and
pusha
pop
popf
stos
scas
adc
adc
fidivrs
ret
adcb
sbb
sahf
ljmp
and
and
adc
xlat
mov
je
das
add
loop
daa
movsl
int3
push
out
jno
or
jecxz
pop
aaa
dec
sbb
sti
sub
sub
cmc
push
clc
data16
jnp
fdivs
paddsb
xchg
loop
fdivr
cmpsb
mov
aas
fstpt
dec
stos
and
push
and
inc
sti
in
arpl
cli
stos
pusha
xchg
dec
pop
std
inc
jae
daa
mov
shlb
push
or
add
mov
not
jmp
mov
and
push
in
cmpsb
mov
xchg
fimull
and
add
lea
pop
sub
mov
pop
mov
xchg
lea
or
sbb
sub
mov
mov
mov
xlat
mov
insl
xchg
insl
cwtl
jge
dec
popf
mov
push
outsb
jae
xchg
cmpsb
push
lea
fwait
mov
cmp
pop
jb
mov
mov
out
mov
js
dec
jnp
pop
fwait
mov
mov
stos
test
or
popf
push
out
pop
mov
mov
xor
cmpsb
and
jl
cmp
in
addb
aas
outsl
mov
cwtl
pop
fisubrs
stc
add
cs
fisttps
daa
dec
cmpl
pop
fs
mov
or
sub
aas
cld
jle
or
repnz
push
xchg
dec
inc
or
lcall
sbb
fistpl
push
jmp
mov
int3
jb
cmp
mov
mov
mov
stos
cmpsl
or
leave
push
sub
pcmpgtb
scas
jnp
xlat
mov
mov
cs
out
in
jo
mov
jp
pop
adc
lods
mov
mov
stc
cmp
and
cs
adc
imul
mov
in
fisttpl
lret
and
stos
jp
je
fwait
mov
pushf
lcall
cmp
ss
xlat
jmp
lock
std
mov
sarl
aam
out
and
sub
sbb
clc
xorb
aam
decl
repnz
jnp
fs
xlat
mov
sub
jmp
cli
jae
pop
das
xchg
out
enter
daa
mov
push
adc
sbb
sub
fcmove
pop
cmp
cmp
xchg
enter
mov
out
mov
nop
pop
sti
not
mov
xchg
xchg
sbb
dec
int
pop
adc
fisttpl
mov
ret
fisubl
xchg
daa
ret
inc
pop
xor
or
dec
adc
xlat
or
loopne
jge
insl
ret
lret
inc
mov
add
in
gs
dec
adc
mov
negb
imul
mov
pop
mov
pushf
inc
shlb
cli
inc
mov
stc
adc
jp
mov
addr16
dec
xchg
aad
in
cmpsl
shll
incl
cmp
or
mov
aaa
cmc
rolb
xchg
pushf
xchg
jmp
sub
pusha
mov
sti
sub
nop
addr16
aad
and
mov
sbb
scas
xchg
popf
pop
movq
pop
sbbl
adc
push
mov
add
ljmp
testb
bound
sub
push
fdivrl
xchg
pop
in
cmpsb
sub
lea
aad
xor
imul
ds
iret
lods
jmp
test
mov
dec
pop
outsl
fs
xchg
leave
lods
iret
and
ret
or
mov
add
sbb
xchg
test
mov
add
inc
push
icebp
cmp
rclb
add
adc
dec
adcb
insb
mov
dec
insl
pop
arpl
push
add
inc
jo
adc
inc
lods
incb
test
mov
adc
fiaddl
cmp
dec
ljmp
test
fs
repz
or
pop
call
cmp
rorl
mov
mov
and
fildl
xchg
pop
stos
sbb
or
lahf
mov
sub
jge
sar
xchg
mov
jns
sbb
push
pop
xchg
aam
enter
push
mov
add
rcll
pop
sub
jge
in
je
push
jg
es
sub
dec
mov
icebp
or
in
adc
in
xorb
add
jmp
push
xor
daa
sbb
push
dec
stos
push
xchg
jg
sbb
js
sub
pop
or
flds
inc
xor
sub
xchg
push
sbb
push
xor
daa
lret
xchg
out
dec
loop
out
xchg
pop
imul
xorb
adc
add
rol
dec
mov
mov
pop
icebp
sbb
hlt
sub
ja
pop
cmp
enter
fwait
push
push
imul
test
jge
dec
pop
dec
jmp
ljmp
loop
xor
mull
call
push
sbbb
outsl
aam
imul
inc
sub
repz
mov
inc
movsl
jl
insb
daa
ljmp
ds
xchg
sahf
sbb
popf
sub
loopne
les
xor
sbb
ds
lahf
shrl
push
ret
clc
mov
icebp
cmp
aam
sar
imul
ds
ss
js
sbb
shll
call
push
jnp
adc
hlt
xchg
jge
pop
cmpb
notb
pop
ss
sub
lret
push
lret
leave
testl
imul
clc
sub
push
push
icebp
jne
out
daa
push
icebp
lods
xchg
xlat
push
adc
loopne
add
xchg
jmp
xor
aas
hlt
mov
add
gs
bound
jl
dec
push
cmpb
jle
mov
mov
xchg
xor
cmpsb
jb
hlt
mov
push
and
push
repnz
into
pop
or
ja
mov
andl
push
pop
jg
xor
sarb
or
jb
inc
fwait
ss
aam
pop
ffree
jmp
out
jmp
iret
out
or
mov
ja
pop
repz
mov
insb
push
pop
std
inc
sbb
mov
xorb
sub
je
fisttpl
mul
mov
les
cmpsb
mov
int
cmp
cs
adcb
xor
repz
jge
movsb
cld
test
jecxz
push
imul
gs
xchg
lock
int3
xchg
int3
jmp
add
dec
xor
lret
mov
outsb
jg
psubusb
insl
mov
iret
in
sbb
enter
int3
xchg
mov
cmp
inc
outsb
inc
repnz
mov
outsl
push
mov
mov
cmp
repz
sub
cmc
mov
loopne
and
lods
add
imul
enter
loopne
and
pusha
sub
es
jae
cwtl
mov
cmp
dec
test
clc
negl
je
repz
sub
lea
fcoml
pop
jo
add
fstps
mov
and
mov
bound
popf
xchg
push
in
jnp
fsubs
cmpsb
adc
xor
arpl
cmpsb
jns
ljmp
sbb
dec
lds
jo
add
movb
and
cli
std
pop
shl
pop
lock
jmp
pop
inc
aad
call
push
add
mov
or
xchg
loop
xorl
dec
rcl
aaa
ret
add
xchg
dec
mov
jo
fsubrp
mov
adc
add
xchg
sub
inc
daa
int
push
sbb
je
mov
mov
loop
xchg
push
fwait
call
ret
imul
and
or
and
mov
int3
xchg
test
test
gs
adc
aaa
dec
or
int
mov
mov
mov
xchg
ret
xor
lret
or
pop
outsl
xchg
mov
bswap
jge
or
mov
push
xor
fidivrl
dec
lcall
or
rol
sub
cs
in
jno
add
sbb
addr16
add
iret
std
loopne
out
inc
inc
cmpsb
insb
xor
scas
jbe
adc
fwait
dec
add
insl
fmulp
xor
cmpsb
jb
jno
dec
lock
roll
fdivrs
shlb
sub
inc
inc
movsb
cmc
xchg
outsl
mov
fs
dec
or
test
push
fldenv
ds
out
and
add
leave
in
mov
js
out
sub
dec
mov
rol
xchg
rorl
add
mov
es
aad
or
in
push
clc
and
loopne
jle
adc
test
push
sbb
lret
cmpsb
ret
fstl
sub
xor
inc
inc
xchg
adc
dec
push
mov
pop
int
push
mov
mov
loope
xor
into
inc
push
lcall
les
jnp
out
adc
gs
popa
aad
mov
add
frstor
xor
mov
jmp
gs
lods
and
mov
pop
adc
dec
inc
int3
mov
pop
and
and
scas
pop
cmpsl
push
jno
iret
sbbb
nop
enter
or
shlb
cmp
icebp
mov
jae
jno
fisubs
xor
rcrl
adc
in
jnp
orl
sbb
and
xlat
mov
scas
xchg
pushf
sti
sub
mov
mov
mov
popa
sub
or
std
loopne
mov
and
dec
inc
repnz
test
js
popa
xor
dec
jns
in
mov
and
mov
lret
das
mov
xchg
fstl
inc
hlt
shl
lret
cmc
jbe
sub
gs
jecxz
jl
sbb
fbld
jnp
fsubrl
movsb
movsl
or
daa
jmp
fsubp
insl
addr16
mov
adc
out
cwtl
ret
fldl
push
inc
mov
jp
xor
mov
add
loopne
xchg
xchg
icebp
mov
shr
push
mov
aaa
leave
fs
inc
loope
push
jecxz
in
jmp
push
rcll
and
and
cli
rcll
cmc
mov
cmp
cs
push
xchg
adc
and
stos
dec
inc
and
js
inc
push
add
push
fisubs
inc
clc
add
jo
and
or
mov
xor
das
mov
paddd
mov
adc
scas
das
push
sub
cmc
repz
push
icebp
aaa
dec
cmp
dec
ljmp
lds
sbbb
pop
xchg
xchg
stos
sbb
sbb
xchg
cld
sub
fmull
push
flds
sub
repnz
jae
pop
jo
pop
mov
in
in
fistpl
push
cmp
fimuls
push
fcomi
mov
and
lds
data16
pop
out
into
fwait
insl
mov
cli
cli
leave
cmpl
jo
lret
dec
cwtl
pop
call
fwait
js
pop
cmpsl
pop
rclb
xchg
das
or
jl
cltd
loopne
loopne
inc
jp
pop
dec
mov
jo
sbb
rep
pusha
push
orb
jnp
jg
adc
sub
bound
mov
nop
mov
jge
or
push
adcl
sti
mov
jne
push
mov
sub
lods
cmp
inc
sbb
fbstp
call
imul
mov
xchg
cld
push
push
xor
mov
testl
lods
jb
xchg
inc
sbb
shll
sarl
loopne
lret
fbstp
xor
pop
jae
nop
lds
jns
out
jecxz
dec
das
std
fnstsw
dec
sbb
sub
push
sahf
and
fldenv
pop
add
inc
cmp
and
sbb
and
dec
pop
lcall
push
add
loopne
push
mov
popl
push
push
push
insl
ja
test
gs
pushf
test
in
adc
int3
jp
push
loope
adc
sbb
ret
jp
out
pop
xor
sub
adc
push
in
aaa
sub
pop
int3
mov
xlat
imul
lods
add
and
sahf
aaa
push
inc
or
push
stc
dec
push
pop
imul
pop
xchg
jnp
lret
andb
aam
pusha
enter
adcb
lea
nop
jne
ja
and
xchg
dec
jnp
cmpsb
pop
push
testl
pop
cmp
lds
jne
loopne
outsb
push
mov
scas
dec
mov
rcrb
cli
enter
jle
adc
in
xor
ror
mov
cmp
outsl
mov
and
inc
adc
in
nop
mov
cmp
cmpsb
cmpsb
scas
cwtl
fcmovu
jbe
push
fwait
mov
jmp
mov
enter
add
ror
popf
es
divl
fucomp
inc
dec
sub
push
jb
adc
popf
xchg
daa
paddb
icebp
int
faddl
and
nop
mov
fimuls
inc
add
outsl
cs
xchg
orl
sub
rclb
rclb
mov
jmp
dec
xchg
dec
imul
dec
frstor
cltd
mov
xchg
xchg
pop
pop
push
dec
out
ret
scas
adc
leave
test
and
popf
scas
push
cmp
push
push
sub
fildll
push
ret
loope
movsb
cltd
jecxz
stc
sbbb
xchg
xor
jno
cwtl
mov
mov
add
cmp
movsb
pop
pusha
fwait
pop
or
jbe
stc
ret
les
in
cmp
movb
pushf
testl
bound
gs
xchg
mov
mov
cmp
mov
movsb
dec
inc
lds
shll
add
subl
inc
fs
in
daa
stc
adc
cli
lret
out
cmpsl
dec
xchg
pop
out
lahf
cmp
repz
outsb
and
mov
clc
dec
xchg
cmpl
jmp
mov
adc
cmpb
aam
filds
fistpl
xchg
pushf
push
movsl
xor
cwtl
push
jno
decl
ljmp
lret
mov
stc
test
sbb
sti
xor
or
shll
inc
or
movsb
ret
add
push
or
popf
inc
fistpll
pop
xchg
pushf
cmp
dec
fsubs
pushf
jge
mov
gs
subb
xchg
out
push
scas
out
test
test
jbe
xchg
sub
mov
mov
lea
scas
ret
clc
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
jmp
daa
add
in
cmp
push
in
inc
jb
cmp
jp
pop
jp
aam
inc
subw
mov
in
mov
popa
cmp
inc
outsl
pusha
pop
adc
stc
mov
in
cmpsl
mov
cltd
jge
mov
inc
mov
xchg
popa
lods
pop
pop
sub
pop
pop
mov
pop
ja
xchg
lahf
jae
sub
jae
jp
xor
or
imul
xchg
mov
aas
mov
jns
and
seto
insb
and
icebp
mov
push
sub
xlat
xchg
and
in
mov
and
imul
movsl
aas
hlt
dec
int
mov
xchg
pop
adcb
jmp
mov
into
ss
dec
test
rcll
and
pop
sub
push
xor
std
inc
std
mov
jg
mov
pusha
pop
jp
sub
xchg
or
mov
or
movsl
xor
xchg
loope
insl
test
mov
sbb
jge
rcll
mov
rorl
xor
scas
cmp
xor
push
aas
xchg
jle
jbe
into
jecxz
cmp
xchg
push
jb
test
popa
jmp
push
in
mov
shrl
adc
cmp
inc
sub
inc
stos
loop
jnp
pop
mov
fsub
jmp
inc
jno
insl
pop
test
push
outsl
cmp
leave
jl
pop
clc
pop
nop
iret
mov
test
scas
pop
or
or
sub
inc
rcl
pop
imul
mov
ds
adc
mov
dec
stc
sub
pusha
lds
add
out
rclb
sahf
lock
and
or
xchg
enter
daa
sub
outsb
sub
or
xchg
add
ret
insb
adc
ret
fs
test
mov
inc
negb
jbe
fs
and
stos
outsb
ljmp
icebp
sbb
aaa
bound
int
in
or
and
hlt
jnp
dec
loopne
mov
cmpsb
mov
jmp
ret
mov
pop
jne
adc
je
cmpsb
pop
cs
or
scas
js
in
sti
stc
jae
into
xchg
mov
sub
nop
cwtl
test
outsl
adc
iret
cmc
xor
gs
cld
xor
cmpsl
sarl
and
dec
aam
faddl
icebp
fs
std
and
jp
mov
jge
jle
std
out
xor
decb
in
je
mov
push
mov
add
xchg
inc
mov
add
ja
aas
call
shr
je
or
cmovns
xchg
lret
add
rorl
pop
xchg
xor
and
cli
push
loop
leave
pop
mov
cmp
out
in
rorb
sahf
dec
cmp
das
push
int3
sub
je
daa
cmpsb
cltd
xchg
push
push
or
loopne
cmc
and
jns
in
pop
test
sub
loope
mov
lods
add
or
add
xor
invd
inc
in
ret
fnstcw
push
xchg
adc
loopne
ds
adc
dec
sbb
cmc
or
dec
jle
cs
or
or
hlt
das
jge
push
adc
jns
mov
xlat
lahf
mov
inc
dec
fisubrs
push
inc
pop
fstpt
jl
adc
sar
shll
insl
lahf
icebp
inc
sub
sbb
inc
xchg
leave
mov
cmp
enter
cmp
test
neg
cli
rep
test
out
mov
dec
jp
in
jo
adc
or
dec
pushl
sub
sub
mov
cmp
mov
into
dec
cs
in
movsb
rcrb
jge
pop
xor
ret
push
fdivrl
jle
mov
pop
mov
and
pop
xorl
add
in
cmp
cmp
lods
adc
adc
mov
sbb
or
bound
adc
sbb
and
cmp
pop
pop
ret
cli
push
and
xchg
pop
inc
inc
stos
sub
incl
mov
jo
add
and
xchg
lea
mov
sbb
jnp
push
jbe
xchg
in
jle
push
das
mov
xor
pop
cmpsb
insb
inc
push
xor
jp
xchg
repz
dec
dec
pop
rol
pop
stos
mov
mov
push
cmc
lock
imul
add
jns
gs
xchg
inc
movsl
sbb
out
add
jbe
mov
repnz
jle
test
mov
jp
popf
xchg
popw
jmp
rolb
xor
or
pxor
mov
adc
add
or
xchg
ljmp
mov
icebp
int
jmp
data16
and
ret
shll
dec
and
add
sub
pop
and
pop
adc
mov
xor
xchg
pop
cs
dec
mov
xchg
push
jecxz
shlb
idiv
nop
data16
out
fchs
pop
and
add
or
and
jl
dec
push
xor
jge
dec
xchg
shrl
into
fs
dec
xor
add
xchg
jecxz
rclb
jmp
faddp
rcrl
popl
mov
inc
sub
jmp
cli
loopne
out
mov
nop
popf
inc
int
gs
enter
mov
xor
cli
scas
das
adcl
xor
dec
xchg
movsl
mov
cli
imul
shrb
mov
or
mov
cs
and
repz
push
and
inc
mov
in
les
sbb
paddsb
adc
imul
xor
cmp
lret
xchg
cltd
scas
ret
jbe
fwait
int3
icebp
sbb
test
jp
lock
mov
jns
sub
decl
xchg
jmp
ss
and
outsb
and
sbb
xchg
dec
xor
fwait
test
test
in
arpl
mov
adc
ds
lcall
ss
out
jle
clc
cltd
pop
mov
xor
xorb
mov
and
lds
rorb
insb
cld
cmp
shl
ficomps
lods
cli
pop
adc
adc
repz
xlat
test
je
gs
xor
mov
mov
aad
test
call
ss
imul
roll
into
xchg
mov
cmpsl
sub
cmc
cld
call
push
lret
inc
lret
cs
cmp
out
dec
outsb
xor
stos
pop
fisttps
hlt
repnz
dec
in
fs
dec
in
nop
les
aaa
push
mov
popa
addr16
xchg
out
inc
sahf
stos
in
fcmovne
cltd
insb
jge
int
in
and
mov
iret
insb
ljmp
mov
lahf
mov
sub
outsl
lds
clc
sub
shl
les
cmc
cmp
or
shr
insl
mov
jnp
and
lods
dec
icebp
mov
dec
and
in
out
or
mov
sub
lcall
push
pop
mov
jmp
adc
dec
insb
or
push
add
push
inc
sub
mov
sbb
push
pop
in
sahf
lods
shr
dec
push
xchg
scas
js
pop
xchg
mov
mov
out
adc
in
stos
jb
pop
lahf
test
nop
scas
enter
repnz
movsl
daa
push
xor
mov
push
mov
es
aas
mov
std
dec
push
ds
mov
xor
xchg
cwtl
popf
mov
mov
imul
sub
xor
or
in
cli
jp
inc
adc
push
imul
push
jp
dec
jnp
das
mov
sbb
testb
mov
in
fiadds
mov
cmpsb
mov
js
cmpl
add
jbe
xchg
filds
adc
loop
mov
sbb
lods
lret
push
mov
xchg
mov
aaa
orl
test
rcl
leave
mov
push
cmp
fwait
pxor
cld
add
leave
sbb
inc
incb
inc
mov
mov
inc
es
repnz
pop
test
and
jbe
lsl
mov
loop
mov
add
jg
jns
jg
imul
scas
xor
and
push
repnz
lcall
daa
and
adc
sub
sub
leave
xlat
xchg
repz
fwait
das
in
or
xor
sub
push
dec
cmpsl
fs
inc
stos
bswap
mov
aas
pop
lret
lea
and
push
xlat
fstl
mov
and
xor
or
ret
sahf
enter
push
xorb
push
inc
xor
repz
decb
inc
sbb
sahf
adc
sbb
out
cmp
xchg
jno
pop
movsl
cld
je
fimuls
mov
enter
stc
cmp
lods
mov
leave
loope
sbb
je
jns
lea
call
jo
cmp
sbb
aas
or
shlb
hlt
and
jnp
add
mov
cmp
inc
aas
jg
gs
imul
jmp
lret
mov
or
in
jbe
jb
lea
sub
int
stos
xlat
inc
stos
mov
and
lret
sbb
inc
div
xor
es
xor
add
sub
cs
int
dec
std
xchg
add
icebp
inc
mov
sbb
adc
popl
inc
insb
lret
cmovb
dec
stc
lds
jp
mov
imul
outsb
iret
mov
or
shll
dec
clc
cmp
lods
popf
or
inc
and
jge
jecxz
jmp
mov
or
jo
lahf
sbb
out
push
inc
dec
inc
sbb
repz
loopne
mov
mov
dec
mov
movsb
inc
jp
dec
pop
ret
or
push
scas
fmull
pop
lahf
out
jno,pt
int3
lods
pop
loope
popf
xchg
icebp
cs
push
fildl
push
mov
jno
xor
cmp
xchg
inc
ja
adc
rorb
inc
repnz
in
aam
xchg
insb
ret
lock
inc
ret
push
xor
lcall
ss
popa
lods
mov
fisttpll
stos
popf
lea
push
jl
daa
inc
cltd
fdivrs
mov
cmc
sar
mov
sbb
int3
pop
lods
out
push
adcb
das
xchg
in
push
jns
lds
stos
pop
pop
loopne
sub
scas
cli
stos
pop
add
nop
cmpsl
push
push
add
mov
inc
push
lahf
nop
xchg
jae
mov
lret
fsubrl
and
mov
stos
inc
hlt
mov
ss
fbstp
sbb
insl
mov
jnp
jmp
mov
in
imul
aad
mov
rclb
pushf
and
cld
aad
mov
nop
adc
xchg
cmp
xor
fstps
mov
xchg
nop
jne
xchg
sbb
pop
mov
imul
xchg
stos
scas
mov
movsb
loope
adc
xor
jnp
xchg
mov
xor
xchg
sub
ss
or
cmpsl
sbbl
dec
push
out
in
fdivrp
push
push
push
or
pop
rcll
imul
mov
leave
nop
hlt
xchg
mov
adc
xor
push
cltd
mov
fwait
cmp
fiaddl
jmp
ljmp
js
mov
fwait
js
aam
xchg
or
bound
inc
pop
and
icebp
push
lods
adc
and
ret
fucom
int
dec
pop
xor
rol
lahf
or
sbb
cs
add
sub
movsb
jecxz
call
jae
or
shrl
mov
xchg
xlat
mov
push
jge
mov
in
in
fimuls
std
push
cmpl
ljmp
aam
ret
jecxz
push
jo
loopew
jnp
or
sbbb
pop
and
out
mov
sbb
jecxz
fs
cmpsl
xor
lret
stc
insb
insl
test
daa
repnz
fnstcw
sarl
xchg
lods
adc
push
stos
push
ljmp
stos
push
enter
xor
lretw
pop
cli
mov
adc
ljmp
sub
stos
push
sub
push
pop
das
lahf
sbb
cmp
mov
shl
in
es
mov
and
nop
add
mov
mov
sbb
adc
xchg
push
fmull
orb
xor
jae
insl
mov
cmpsl
push
pop
xchg
jp
bound
daa
and
mov
jl
xchg
dec
add
in
mov
or
sahf
add
fsubrl
popf
in
imul
xorl
push
sbb
push
cmp
mov
dec
push
dec
add
fisubrs
inc
add
pop
outsb
jge
add
xchg
mov
imul
mov
mov
fisubrl
fs
adc
jge
ja
test
adc
in
push
jbe
aaa
mov
cltd
mov
dec
jmp
test
pop
movsl
insb
sti
fwait
jg
lcall
lea
aam
adc
in
push
pushf
inc
mov
pandn
je
sub
dec
test
inc
dec
cli
cltd
and
mov
cmpsb
jmp
push
je
ja
cmp
add
and
je
jne
sbb
mov
cmpsb
xchg
cmp
int
sub
lahf
jo
adc
lock
add
aam
jnp
nop
popa
in
dec
imul
ret
rol
clc
hlt
jns
scas
push
mov
rcll
xchg
mov
pop
pop
inc
sub
xorb
or
jp
fdivs
das
mov
ret
dec
mov
xlat
ss
lods
inc
cs
jo
ds
push
mov
and
or
pop
je
mov
xchg
into
push
dec
cbtw
fs
faddp
ret
out
movsb
iret
mov
fnclex
dec
lock
dec
inc
rclb
sub
add
cmp
lods
aam
in
dec
addr16
aas
cmpsb
jno
mov
cmpb
push
inc
into
ds
inc
pusha
sbb
pop
pop
aad
push
dec
je
add
fnstsw
fbstp
les
mov
add
and
imulb
jns
movsb
ljmp
pushw
xchg
unpcklps
add
loopne
mov
inc
aas
stc
push
outsl
icebp
scas
xchg
mov
mov
adc
je
inc
in
push
ret
or
mov
jbe
pop
loope
loop
xchg
out
test
cmpsb
jbe
sbb
push
cmc
push
inc
les
push
pushl
lock
jne
mov
shrb
add
arpl
push
mov
adc
push
icebp
add
jnp
dec
ror
stc
in
cld
loope
popa
fcmovnbe
push
aaa
xchg
cmp
push
mov
fsub
pop
jns
movsb
ret
popa
mov
adc
outsl
cmpsb
dec
mov
jo
stc
int3
in
sub
inc
xorb
xchg
jmp
xor
orb
scas
or
inc
sub
dec
mov
add
call
lahf
xchg
xchg
cmc
lods
stc
mov
into
into
ljmp
xchg
jnp
shlb
je
stos
pop
mov
jp
pop
loope
pop
dec
sahf
push
xchg
xor
jbe
mov
nop
cmp
jae
sbb
cld
jno
fwait
int3
jge
addr16
mov
enter
xchg
popaw
dec
divl
mov
dec
adc
xor
in
cmp
sbb
mov
shll
imul
fists
mov
je
rorl
out
xchg
xor
out
test
out
push
pop
dec
and
bound
cs
stos
add
dec
sub
lods
xor
inc
hlt
xor
sub
inc
ds
pop
arpl
xchg
xor
stos
cmc
xor
xor
sahf
pop
inc
adc
add
inc
and
sub
pop
test
mov
dec
lcall
push
dec
xchg
adc
cwtl
and
outsl
ret
lock
sub
add
add
cmp
int3
movsl
pop
pop
jno
pop
pop
or
push
cwtl
mov
pusha
call
scas
fsubr
gs
js
push
xor
mov
cmp
ljmp
jne
lret
addr16
inc
jns
shlb
mov
and
and
out
sbb
pop
pop
sub
adc
cli
insl
mov
or
jp
xor
ds
cwtl
test
iret
cmc
push
ffreep
mov
mov
dec
fxam
mov
mov
lcall
orl
iret
xor
xchg
mov
mov
lcall
push
mov
inc
loopne
je
jmp
cltd
fistl
mov
leave
fs
insl
adcl
enter
gs
pop
out
adc
lea
jns
rolb
xor
test
push
sbb
out
sub
push
push
inc
icebp
es
or
adc
mov
ja
dec
movsl
gs
inc
test
mov
dec
or
mov
cmp
mov
xor
xor
mov
test
inc
push
dec
xor
aaa
cltd
sub
das
mov
cmp
mov
popf
add
test
cld
lahf
ss
rorl
dec
push
mov
das
movsl
xor
inc
mov
popf
cmp
xor
int3
adc
push
movb
add
push
dec
popa
or
dec
decb
jno
daa
bound
add
cmp
jbe
sahf
add
ss
lea
hlt
xlat
ds
push
mov
pop
push
pop
jle
es
ret
mov
loopne
cmp
jp
dec
in
push
xlat
cmpsb
imul
bound
sub
cltd
mov
dec
jbe
js
mov
rep
sbb
ror
rcrb
adc
sbb
pusha
lcall
mov
out
mov
and
fs
andb
das
in
xor
fcmovnbe
push
pushl
outsl
daa
je
aad
jbe
lds
test
sbb
into
adc
xor
popa
fmull
aad
cld
mov
bound
and
mov
inc
jmp
xlat
xor
cmpsl
mov
dec
cmpb
insl
mov
ja
jmp
pop
mov
inc
out
lds
shl
rcrl
js
or
repnz
xchg
push
es
scas
and
push
xchg
cltd
std
jg
popa
cltd
dec
mov
push
ret
sub
hlt
push
add
shll
iret
mov
ds
nop
sub
sub
ljmp
imul
and
jnp
push
fsubs
push
lret
inc
mov
lahf
push
dec
daa
fwait
xchg
sub
int3
push
jg
xor
lret
ds
sub
cmp
ds
scas
xlat
push
sbb
dec
stos
popa
pushl
pop
cld
fwait
pop
test
or
pop
mov
hlt
gs
into
popf
sub
jg
jae
repz
mov
inc
stos
or
loopne
sub
sbb
daa
mov
mov
mov
sarl
movsl
les
fmul
add
gs
push
and
jo
adc
jno
push
mov
xchg
into
xchg
aad
out
push
pop
xor
xchg
sbb
mov
stc
les
push
inc
push
inc
mov
pop
lret
int3
out
sub
jns
jmp
fcoms
xorl
fwait
add
mov
mov
mov
adc
and
aaa
sub
scas
pop
addr16
dec
jl
mov
icebp
dec
adc
add
push
ja
cmp
sbbl
mov
or
sti
notb
fs
xlat
gs
or
mov
insb
aad
mov
movsl
mov
or
xor
mov
jo
xchg
push
add
and
and
idivb
rorb
add
incl
jns
in
xor
addr16
or
std
mov
fisubs
arpl
xor
adc
loop
outsl
loop
xchg
xlat
xchg
xor
adc
outsl
cmp
setbe
jo
mov
add
lret
mov
mov
adc
ret
test
cmpl
jmp
jl
mov
sub
inc
mov
ret
repz
xchg
mov
and
cmpsl
and
rcr
sbb
aaa
clc
xchg
push
mov
pop
cmc
mov
mov
loopne
dec
dec
xor
jbe,pt
test
push
pop
jb
out
or
push
jo
je
sub
pop
push
shlb
xchg
mov
inc
sahf
lock
stos
pop
aad
fdivr
adc
cmpsl
jo
ja
fwait
adcb
clc
xchg
out
jmp
and
jne
xchg
jnp
cmc
mov
mov
xor
sub
pushf
sub
bound
push
and
adc
into
insl
movsl
das
test
fidivrl
push
or
fistpll
jmp
mov
sub
lods
jg
mov
insl
loope
push
jp
or
mov
negl
and
xchg
repz
mov
in
fwait
test
jnp
push
adc
das
jbe
fstps
popa
cli
push
and
push
jnp
scas
xchg
xchg
mov
push
dec
popf
sahf
gs
cmpsb
inc
push
dec
ss
adc
loope
inc
les
shlb
mov
je
rolb
loop
hlt
hlt
or
jge
cs
shlb
mov
and
xor
aaa
adc
sti
jb
cmp
insb
mov
mov
cmp
aas
adc
lock
movzbl
sub
sub
insb
pop
dec
sarb
sbb
test
loop
push
incb
inc
sahf
dec
inc
movsb
fcomps
je
mov
jecxz,pn
push
xlat
xlat
aam
mov
imul
adc
mov
orb
xor
imul
repz
mov
dec
std
xchg
ss
aas
lret
xchg
std
aaa
out
aaa
adc
faddl
add
pop
repz
sbb
jmp
out
stos
out
lods
cmp
inc
lds
cmc
aas
pop
add
sbb
inc
inc
mov
push
jno
pusha
sub
int
adcl
inc
jmp
or
xor
stos
pop
test
imul
push
jmp
adc
cs
mov
imulb
xchg
loopne
lea
icebp
pushf
enter
mov
fs
ss
test
push
fcompl
jge
cmp
in
mov
test
cmp
sbb
loop
outsb
jo
lcall
stc
xchg
add
pop
xor
inc
or
repnz
inc
pop
pusha
fdivrl
and
add
sub
xor
dec
popf
ljmp
sbb
push
mov
jge
sub
sahf
jmp
ret
outsb
out
mov
ficoml
in
out
cs
fwait
pop
and
cwtl
arpl
addr16
ret
inc
adc
pushl
les
mov
jno
mov
inc
nop
adc
add
rolb
and
ret
mov
pop
dec
rcrl
mov
jne
pop
push
fcomip
cmp
cmp
add
cmp
cmp
pusha
adc
sbb
out
pop
out
mov
out
jns
sti
sbb
xcrypt-ofb
cmpsl
stos
jne
fisttpl
jp
loopne
in
dec
cld
adc
xchg
cli
cmp
mov
xor
sbb
fdivrl
mov
cld
leave
xor
xchg
xchg
push
dec
fistl
out
and
loope
test
pushf
mov
mov
xor
cltd
test
dec
lods
aad
dec
jp
sbbb
daa
cmpsb
movsb
sub
jmp
add
inc
insb
sbb
aad
icebp
pop
mov
jno
inc
or
es
xor
adc
gs
xlat
xchg
ljmp
jns
xor
ffreep
ss
push
inc
cmp
xchg
insl
cld
adc
jmp
je
jle
push
data16
and
inc
cli
jmp
and
scas
inc
test
mov
or
popf
xchg
mov
movsl
and
cmp
das
gs
mov
adc
adc
addr16
je
push
xchg
push
cs
rcrl
mov
mov
loop
movsb
sbb
push
in
inc
inc
andb
lods
xchg
roll
jns
sub
inc
adc
pop
outsl
js
push
sbb
inc
mov
mov
xor
pop
or
cmp
imul
add
movsl
repnz
sbb
push
in
mov
test
and
sub
xchg
jmp
mov
xchg
fstl
aam
ret
xor
sbb
les
aaa
out
test
jns
mov
or
es
movsl
and
dec
stc
ss
sub
mov
sub
and
clc
mov
stos
jo
dec
lock
leave
mov
mov
inc
xor
jne
fisttpl
ja
push
jmp
aas
out
aad
push
sub
scas
les
xor
test
add
jmp
adc
out
mov
leave
cwtl
in
fnstenv
in
aam
imul
insb
mov
or
stos
xor
cmc
mov
frstor
jno
popf
loopne
or
cmc
test
hlt
out
aaa
ljmp
mov
dec
add
les
and
inc
dec
ss
aas
xchg
dec
xchg
pop
ja
push
fidivl
es
addl
mov
out
aas
push
aam
inc
xor
unpcklps
push
movb
cmc
test
in
adc
mov
push
loop
scas
imul
outsl
push
ljmp
inc
mov
push
getsec
cwtl
push
lds
sbb
fists
push
mov
add
pop
adc
inc
data16
jns
adcl
sbb
pop
dec
je
in
cmc
mov
jb
add
add
push
push
or
xchg
rcrb
xchg
fwait
dec
std
push
inc
lods
xchg
fstl
negl
ljmp
hlt
inc
xor
sbb
jae
rclb
add
imul
inc
hlt
jmp
stos
cld
sub
jge
add
jecxz
fidivl
cli
mov
inc
std
push
or
rorl
es
mov
insl
inc
xor
inc
adc
ret
orb
mov
and
or
pop
sbb
in
mov
xor
sub
push
add
mov
mov
insl
xchg
lods
cmp
scas
mov
or
xchg
cli
sub
xchg
lock
or
mov
and
addr16
add
shl
sahf
es
movb
rcll
mov
repz
mov
mov
or
mov
je
call
movsl
shlb
pop
jae
pop
inc
pop
pop
call
test
mov
jl
adc
outsb
ljmp
call
pop
xchg
loope
adc
cli
mov
push
mov
push
lahf
sbb
pop
sbb
aas
and
push
inc
and
xlat
inc
je
pop
cltd
cmpsl
idivb
enter
stc
daa
and
mov
addr16
loope
movsl
xor
mov
xchg
jmp
loop
adc
dec
pop
cmp
sbb
cmpsb
mov
rolb
in
xor
push
insl
outsb
xor
scas
arpl
cmp
lds
add
in
subb
push
ss
mov
jnp
adc
shll
dec
int
incb
xor
push
es
sbb
aas
mov
call
mov
mov
sbb
xor
aam
xor
sub
sub
adc
popa
int3
inc
cmp
sub
push
sub
icebp
dec
cmp
push
arpl
xchg
ficoms
adc
adcb
daa
xor
jmp
aas
pop
repz
xchg
sub
xorb
cmpsb
cmp
mov
sti
push
pop
mov
dec
hlt
sub
cs
xchg
enter
xor
jbe
push
sub
arpl
push
out
cmpsb
jae
push
sbb
cmpb
add
sub
jecxz
repz
add
mov
jg
lcall
inc
jmp
sbb
call
aas
mov
jo
pop
pop
repz
adc
std
data16
mov
jp
adc
jmp
int3
mov
roll
jae
aam
in
lea
test
pushf
sahf
mov
mov
and
addl
pop
cmp
adc
ret
push
mov
lret
fists
cwtl
mov
imul
xchg
jns
test
into
dec
jle
pop
mov
ret
decl
mov
cmp
cmp
mov
adc
ljmp
in
fimull
cmp
sti
lret
sbb
js
ffree
ja
insl
outsl
js
icebp
push
jmp
push
xchg
jle
add
and
mov
adc
mov
fisubl
mov
ret
les
mov
movl
jle
mov
jb
jle
or
clc
mov
sub
jge
push
or
push
xchg
cmp
fwait
lods
in
cmc
inc
out
loope
and
aad
mov
scas
enter
push
lods
sarb
mov
mov
in
sbb
push
insb
shl
fs
jp
add
mov
lret
sahf
lahf
or
nop
push
sbb
xlat
mov
fdivrs
in
jl
pop
repnz
jmp
loop
push
adcb
popa
xchg
push
dec
shll
push
cwtl
dec
sub
dec
fistl
stos
testb
cmp
mov
mov
nop
adc
mov
sarl
iret
pop
int
cli
mov
nop
adc
and
pop
and
outsl
rolb
mov
push
sbb
mov
les
loope
cmp
das
cs
push
adc
pusha
inc
pop
fisubrs
adc
mov
mov
cld
rcrb
sbb
mov
iret
es
and
jb
stos
pop
sahf
ds
pop
loopne
sti
lock
mov
cli
test
lea
mov
add
pusha
out
sub
out
and
je
push
push
cltd
add
lds
cmp
fdivrs
inc
dec
or
loop
dec
stc
pop
insl
xchg
shlb
mov
mov
add
fistpll
test
inc
xchg
mov
push
bound
push
inc
or
inc
aas
mov
xor
loopne
inc
stos
je
mov
lods
sub
mov
outsl
adc
jmp
cmp
cld
nop
out
adc
sbb
lods
aaa
fucomip
movsb
mov
adc
jo
inc
and
inc
outsl
filds
rcll
jae,pn
xchg
mov
jbe
adc
jmp
mov
repz
in
mov
or
push
out
insb
arpl
cmpsb
adc
sti
and
xadd
cmp
rorl
xor
add
pop
push
stc
outsl
and
in
cltd
add
cmp
adc
int3
or
test
std
movsl
test
pop
nop
cmc
sbb
pop
lcall
mov
mov
inc
or
and
rol
insb
aad
mov
pop
cmp
fildll
add
xchg
lret
pushf
add
jns
xchg
je
dec
das
pop
jns
ret
dec
fcompl
lea
mov
gs
aam
and
push
pop
lods
int
cmp
in
xor
movsl
dec
xor
jg
cld
aas
inc
push
lret
in
add
data16
ja
pop
dec
arpl
and
and
mov
pop
pop
je
or
push
mov
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
jmp
mov
in
jnp
mov
pop
dec
xor
hlt
adcl
jp
xor
lock
adc
aas
mov
xor
xchg
sbb
outsb
test
sti
pop
adc
mov
mov
xchg
iret
jge
fxch
cmp
inc
gs
or
jge
push
add
mov
lds
mov
imul
rolb
in
lea
outsb
jmp
popa
arpl
mov
pop
add
std
adc
xchg
sub
push
packssdw
int
jge
or
pop
mov
jp
and
pop
jnp
fnsetpm(287
fdivrs
pop
rclb
mov
pop
pop
fcomps
inc
sub
jge
je
jae
sub
daa
mov
or
pop
sbb
sub
pop
cli
fld
ljmp
rorl
lock
sbb
addr16
mov
into
daa
mov
mov
loopne
das
fcmovnu
xor
lods
dec
repnz
dec
push
push
daa
mov
into
jb
fs
mov
mov
mov
add
test
adc
jb
cmp
outsb
jbe
rorl
sbb
andl
add
mov
into
mov
data16
jae
jne
ficomps
out
mov
rorb
enter
pop
mov
jle
popa
popf
stos
data16
ja
clc
je
addl
mov
les
jp
mov
jnp
mov
pop
mov
push
mov
jecxz
and
add
xor
ljmp
jo
xchg
add
pop
wrmsr
fistpll
mov
push
test
dec
stos
testb
dec
sub
pop
dec
add
and
pop
adc
in
gs
daa
js
scas
jbe
mov
dec
push
and
xlat
dec
lret
adc
incb
int3
aam
jl
movsb
cmpl
popa
add
fadds
ss
mov
mov
mov
sub
out
adc
mov
mov
aad
xchg
adc
and
inc
rolb
sub
adc
mov
add
jmp
stos
das
stos
pushf
and
shr
mov
inc
pop
subb
adc
ret
pop
ja
repnz
ret
movsb
push
inc
loope
push
lock
repz
jle
sbb
and
lods
bound
stos
push
mov
add
in
into
shrl
sarl
nop
mov
outsb
cmpsl
push
test
mov
mov
pop
cmp
dec
push
iret
shlb
sbb
push
inc
stos
test
fbld
mov
enter
mov
lock
testl
jg
andb
add
xor
dec
in
popa
add
sub
adc
out
test
fwait
xor
jnp
int
jb
lock
mov
shl
stos
or
jg
scas
repnz
xchg
fcom
shr
in
xchg
inc
dec
shl
mov
push
adc
test
and
xor
inc
xchg
out
leave
sti
js
add
pop
sub
jb
or
out
inc
mov
sarl
ret
push
cmp
pusha
dec
inc
shlb
jl
sbb
leave
in
std
mov
mov
sub
push
bswap
push
xor
and
fnsave
ret
stos
push
or
aaa
sub
fstl
sbb
and
ss
cli
or
popa
mov
nop
mov
stc
lret
ljmp
mov
out
or
addr16
mov
jg
lods
pop
sbb
in
repz
arpl
lea
lea
pop
mov
lock
pop
clc
pop
shll
lea
push
loop
setl
inc
mov
lret
insb
adcl
jo
pop
das
adc
movsb
lahf
mov
jmp
hlt
xchg
jecxz
sti
xchg
nop
inc
pop
scas
cs
jo
orb
je
cmpsb
sub
jb
xor
mov
aam
lahf
cmpb
mov
aaa
popf
jne
add
jecxz
dec
mov
jae
aas
or
hlt
movl
popa
xchg
cmp
mov
xor
pop
not
xor
mov
sarb
dec
sbb
push
movsl
and
adc
jp
icebp
xchg
mov
mov
nop
add
push
ret
xor
mov
cli
pop
push
adc
xchg
push
pop
cltd
xchg
or
jnp
inc
and
loope
xchg
xchg
je
cmp
cmpsb
rcr
mov
fdivs
sub
pop
mov
lcall
xchg
fstpt
sbb
add
sbb
mov
pop
pop
or
ljmp
pop
ret
push
adc
push
xchg
insb
shll
inc
inc
jp
add
addl
mov
aam
test
mov
cmpsl
fwait
cmpsb
lods
aam
jb
or
push
xlat
xchg
repz
pop
imul
insl
cmp
ror
jle
into
stos
pop
or
in
sbb
adc
aas
test
xor
dec
jl
push
xchg
add
mov
lods
shrb
cld
mov
xor
mov
addr16
cmpb
in
xchg
fsubs
push
int3
fwait
inc
mov
mov
or
repz
jl
shlb
jo
push
jb
push
or
sub
insl
in
stc
add
pushf
stos
xor
jns
jg
mov
inc
popa
cmc
fdivs
inc
ds
sub
in
inc
sahf
cvtps2pd
push
outsl
pop
sub
stos
insl
adc
loopne
adc
decl
scas
bnd
xchg
xchg
rorl
pop
ret
rcl
pmaxsw
cmp
sub
sub
xor
std
xor
std
cmp
mov
push
rcrl
sbb
mov
stc
jbe
inc
pop
fldenv
in
mov
pushl
mov
repnz
sub
icebp
push
xor
scas
xchg
adc
jnp
stos
adc
dec
bound
cs
inc
mov
test
mov
push
call
add
mov
cli
push
xchg
mov
add
adc
aas
xor
or
stc
jge
shrl
lock
dec
sbb
cmp
pushf
inc
mov
scas
sub
out
movsl
repz
or
push
add
jl
sbbb
mov
sub
das
mov
into
into
mov
sub
ljmp
add
inc
int
movsb
lahf
cmp
je
xchg
stc
push
cltd
jo
pop
pop
loop
out
ret
xchg
fisttpll
loopne
xchg
add
lret
jnp
insl
imul
scas
pop
sub
inc
enter
in
push
enter
inc
and
cmpsl
pop
xchg
cwtl
loopne
sub
mov
iret
xchg
js
sahf
xor
cmp
shl
mov
jbe
movsb
in
mov
push
lahf
mov
test
lcall
jl
imul
and
push
scas
jae
push
jns
push
xchg
mov
pop
lds
pop
jle
dec
mov
mov
pop
stc
xor
pop
dec
fldcw
fwait
push
out
push
out
pop
inc
in
add
stc
pop
iret
inc
jmp
scas
dec
les
lret
xchg
call
mov
jl
jecxz
xchg
nop
cmp
sub
int3
out
shlb
push
out
into
ds
ficompl
test
lock
inc
add
ss
pusha
inc
in
data16
mov
es
add
icebp
cmp
cmpsb
lods
ljmp
cwtl
mov
sub
cli
icebp
mov
cld
adc
xor
ficomps
add
jo
std
xchg
insl
outsl
not
cmp
dec
shr
aaa
popa
jecxz
fildl
lds
aas
lcall
cmc
inc
mov
cltd
push
lcall
hlt
sbb
and
or
icebp
and
dec
movl
push
push
int3
sti
arpl
push
sub
aad
adc
stos
test
ret
and
jbe
pop
or
mov
cmp
sahf
xchg
gs
loopne
jmp
cld
fdivs
xchg
aas
pop
push
mov
mov
lea
sahf
in
xor
and
sbb
leave
lods
pop
hlt
aaa
ret
mov
add
stos
add
xchg
movsl
out
dec
inc
and
jb
iret
push
int
adc
aam
data16
fstl
lods
iret
or
aam
add
mov
inc
jmp
lcall
mov
gs
fs
pop
arpl
bound
xchg
sahf
sbb
cmp
test
aaa
cli
adc
andl
xlat
leave
mov
mov
stc
jmp
out
movb
arpl
incb
cli
jb
ds
sbb
mov
jmp
mov
mov
rclb
insb
xchg
ret
in
stc
adc
adc
mov
or
xor
dec
jle
jns
jle
and
mov
in
ds
sub
inc
xchg
mov
mov
push
fmulp
in
fsubl
jno
push
mov
jae
xchg
or
xor
outsl
fdivrs
mov
xor
push
hlt
pop
xchg
adc
dec
mov
mov
dec
aas
xchg
jno
rolb
out
lret
ss
jno
and
clc
sub
pop
xchg
scas
jmp
stos
add
jno
jae
mov
xorl
enter
and
das
pop
dec
int3
icebp
enter
or
inc
jmp
sbb
jmp
and
outsl
icebp
loope
pop
sub
mov
test
push
sti
dec
inc
jo
cld
jge
add
bound
adc
jmp
popa
pop
std
loop
xchg
pop
addr16
bnd
lds
inc
and
mov
cmp
xchg
hlt
roll
mov
lods
mov
and
add
ljmp
jbe
ret
pop
sbb
push
cmp
leave
sub
int3
jge
adcl
js
sahf
sbb
out
sbb
stc
fs
or
pop
jae
imul
fidivrs
cltd
mov
hlt
rorb
into
mov
cmp
push
add
ss
xchg
fisttpl
sbb
mov
pop
xchg
jge
xchg
xor
rcrb
xor
filds
or
cmp
cwtl
jb
or
jo
xchg
out
add
mov
ja
pop
sahf
imul
shlb
mov
or
sarl
mov
cld
push
add
lcall
mov
xchg
repz
xchg
xchg
jmp
fildl
das
jbe
pop
jo
mov
mov
fdivrl
adc
mov
cmp
jbe
fldenv
sbb
mov
sahf
mov
in
sub
lret
fwait
xchg
sub
in
pop
cli
adc
test
sub
sbb
cmp
movsl
loop
data16
xchg
mov
ret
jp
testl
mov
jl
repnz
add
push
push
mov
gs
xor
cld
imul
xor
and
pusha
fldl
cld
out
mov
sbb
fiaddl
mov
jp
aad
pop
inc
or
fcomip
popf
or
cmp
mov
imulb
xchg
js
fistl
loopne
in
rorb
inc
mov
cmp
jge
pop
sub
xor
std
popf
fcmovnbe
inc
adc
and
lods
sub
lret
mov
int
jle
or
pushf
xor
sbb
jo,pt
aas
inc
cmp
inc
pop
mov
jg
push
test
out
sbb
add
sbb
fldl
hlt
add
sub
pop
mov
xchg
lods
mov
insl
es
stos
mov
in
stos
sub
xchg
repnz
cmpsl
dec
test
mov
mov
movsb
fs
sbb
movsl
dec
add
pop
movsl
mov
pusha
roll
jne
mov
cmp
movsb
lock
jns
dec
xor
stos
mov
lods
cmp
nop
lods
fwait
xchg
xchg
mov
and
cmp
add
movnti
mov
or
inc
out
push
loop
ret
mov
xchg
jnp
jns
aam
test
shlb
bound
xchg
mov
je
in
pop
jbe
lods
and
jno
cmp
out
jbe
adc
mov
mov
mov
aas
cmp
and
ljmp
mov
popa
jnp
loopne
enter
pop
jge
fistpl
leave
pop
mov
enter
mov
inc
imul
shl
repnz
jns
push
push
cmp
jmp
scas
out
es
cmp
xor
inc
cmp
xlat
cmpsb
xchg
pop
add
test
xor
lds
ds
jb
shrb
jg
insl
jmp
xchg
sbb
pop
adc
pop
cmp
cmpsl
and
mov
fldcw
sbb
jge
iret
mov
shll
lret
pusha
shl
cmpsb
popa
push
push
cmp
fisttps
or
shr
std
cmp
pop
repz
fidivrl
fs
xchg
out
jnp
hlt
mov
jb
fs
mov
addr16
jg
mov
inc
xchg
test
rcrb
cmpsb
cmp
outsb
dec
mov
mov
cld
les
pushf
arpl
dec
mov
adc
xor
out
mov
xchg
std
and
cmpsl
in
dec
ljmp
sbb
into
cmp
xlat
sbb
or
int3
imul
subl
sbb
scas
cmp
int
addr16
add
outsb
es
outsb
out
jl
bound
out
in
add
subl
gs
daa
push
mov
movb
cmp
xor
sbb
scas
fsubr
inc
pusha
jmp
mov
out
push
adc
rcrb
or
call
mov
xchg
sub
lds
mov
leave
mov
or
sub
out
jno
or
or
loop
in
and
pmullw
bound
pop
lret
push
idiv
adc
mov
and
mov
cmp
fbstp
das
clc
icebp
and
lods
jle
arpl
fcoml
cwtl
and
dec
jg
std
inc
mov
in
and
mov
icebp
jmp
aas
inc
fs
pop
ja
aaa
mov
add
sti
mov
push
pop
push
aam
mov
lea
outsl
loopne
clc
cmp
mov
lahf
xor
or
in
ret
sbb
xchg
inc
mov
dec
clc
mov
hlt
lahf
add
pop
add
dec
sbb
mov
adc
pusha
push
fs
xchg
lds
mov
in
fs
xorb
dec
jecxz
pop
or
or
cmp
sbb
inc
sbb
push
ficompl
or
mov
pop
rolb
sbb
cmpsb
mov
adc
xchg
cmp
cmc
sbb
xor
pop
adc
or
fwait
dec
or
outsl
ffree
arpl
xchg
xor
xor
mov
das
mov
xchg
add
test
push
cmp
bound
xchg
cmc
dec
push
sbb
ret
xchg
and
lret
mov
dec
and
lds
aad
movsb
dec
mov
cmp
stc
ds
inc
pop
add
push
stos
into
xlat
aad
xor
inc
add
out
hlt
popf
into
xor
push
push
mov
std
lcall
jmp
jnp
loopne
or
cmpsl
push
jo
push
pop
adc
cld
psubusb
xorl
pop
in
sub
push
mov
pop
lret
xor
inc
adcb
and
sbb
jae
or
arpl
leave
or
sub
lods
push
cmpsl
leave
sbb
add
addr16
hlt
pop
dec
enter
xor
loopne
fwait
jmp
xchg
push
pop
jbe
dec
int3
sbb
out
test
adcb
inc
push
div
or
movsb
ss
pop
mov
mov
repz
ljmp
fidivrs
andb
and
out
dec
iret
jnp
cs
mov
jbe
cmc
mov
jmp
in
lds
push
adc
fldenv
fcmovu
shr
scas
cmpsb
sti
push
test
out
push
pop
fwait
mov
xchg
insb
lea
xor
sub
bound
jge
inc
fs
add
into
and
out
sub
andb
call
mov
hlt
ffreep
imul
test
add
outsb
iret
push
xchg
hlt
icebp
jno
and
aam
ret
lods
add
cmpsb
fs
adc
out
insb
xor
iret
out
jp
push
stos
filds
aas
dec
bound
out
std
stos
adc
push
std
push
and
mov
jae
imul
xchg
iret
movl
pop
adc
mov
aaa
xchg
scas
out
xchg
xlat
hlt
xchg
loop
mov
ss
pushf
imull
adc
loope
and
rcrl
ss
sbb
jae
imul
mov
aaa
insl
negb
in
inc
fnsave
fnstenv
sub
pop
mov
mov
jae
lret
rol
in
mov
pop
ss
pop
fnstenv
jns
shl
scas
addl
fsts
jo
pushf
std
daa
mov
mov
std
cmp
sbb
adc
sub
test
rclb
fisttpll
jmp
je
bound
ja
pop
out
int
pop
jle,pt
mov
or
lahf
dec
push
fwait
push
faddl
push
sub
cltd
fldl
mov
cmp
jmp
ret
sub
add
ficoms
xorl
lahf
jge
test
sbb
and
data16
mov
xor
push
movsl
rorb
fs
call
mov
cmp
push
ret
push
xchg
lret
inc
or
test
adc
adc
inc
jb
and
popf
or
div
mov
and
subl
cmp
pop
and
mov
test
adc
sub
or
dec
dec
sbb
or
std
stos
gs
jmp
jae
icebp
push
xchg
icebp
ja
fs
xor
dec
push
fwait
jae
fdivrs
xchg
imul
cmp
das
cltd
add
cmp
test
out
test
mov
push
fiaddl
fcmovbe
outsl
lret
dec
adc
cmp
out
enter
fdivs
add
test
pop
mov
aam
aas
imul
jb
pop
push
push
stos
test
jno
dec
and
leave
lret
add
int
jnp
mov
or
icebp
xchg
incb
lods
lahf
adc
rcll
stos
jl
es
leave
pop
scas
mov
jge
jno
xchg
out
add
loopne
sub
sub
dec
mov
int3
inc
pop
jae
lret
aaa
es
int3
cmp
mov
mov
sti
aas
dec
popf
mov
push
cmp
and
pop
cmpsl
imul
jg
jns
clc
ljmp
or
fdivrl
aad
fimuls
mov
pop
mov
or
and
iret
arpl
sub
test
xor
inc
ss
xchg
pop
mov
mov
sub
loope
testl
xor
bound
stos
and
bnd
pushf
sahf
aas
mov
mov
in
jns
adc
cmp
test
ja
scas
int3
imull
mov
and
imul
xchg
mov
dec
shrb
sti
notb
adc
idivb
mov
cmp
pushf
popf
lret
imul
iret
notl
mov
cmc
xchg
out
add
dec
lock
out
stc
adc
pop
mov
or
cwtl
pop
mov
gs
bswap
mov
scas
loop
movsl
fs
negb
fimull
inc
into
inc
out
inc
mov
pop
outsl
arpl
fiaddl
adc
arpl
and
jo
mov
xor
jge
cli
mov
mov
inc
mov
in
ss
adc
jne
call
mov
xor
mov
mov
jg
cs
popf
loop
hlt
sub
and
fildl
std
add
inc
pop
adc
mov
shl
jb
outsl
adc
test
xor
hlt
ja,pt
fnsave
push
and
cmp
or
pop
xor
jl
cmpsb
sar
stc
scas
leave
ds
subl
xlat
jbe
xor
lods
inc
das
scas
jge
dec
out
fcmove
das
imull
lret
mov
adcl
ja
push
mov
sub
rcr
add
mov
sub
stos
and
cmp
push
loope
pop
jmp
pop
mov
xchg
test
mov
jae
mov
sbb
cmp
call
movb
or
nop
dec
cmp
xchg
mov
xor
mov
test
inc
or
fildll
inc
outsl
lods
mov
mov
jle
xchg
mov
aas
loope
cmpsl
arpl
jne
xor
repnz
jle
mov
insb
mov
inc
jo
fidivrs
push
dec
pop
xor
xor
clc
jno
push
std
lods
adc
xor
xor
mov
lds
stos
jp
adc
add
rorl
int
shrl
adc
push
mov
mov
insb
out
test
mov
xchg
inc
out
mov
bound
shll
int
cmpb
clc
rorl
enter
insb
pop
fidivrl
sbb
add
xchg
ds
fstpl
sub
or
jae
sub
das
scas
add
add
or
pusha
imul
pop
lods
sbb
int
daa
jae
outsl
pop
js
push
xor
in
jl
imul
cli
mov
or
and
lods
pop
fbstp
inc
and
xor
out
test
movsb
xor
pop
lods
cmp
or
mov
aaa
fisubs
mov
test
cmp
inc
out
adc
cld
jl
sahf
push
into
mov
sub
mov
jp
ret
push
mov
inc
adc
ds
mov
stos
cmp
and
cmp
mov
out
add
jp
ds
sub
ret
movb
hlt
pop
movsl
pop
in
push
idiv
rcll
jnp
fdiv
testl
cmp
cmpsl
pop
pushf
xchg
cmc
mov
mov
jp
cmp
sarb
mov
lods
fistps
and
push
fldcw
leave
or
ljmp
fdivl
mov
xor
gs
or
mov
mov
les
adc
lds
adc
std
enter
outsl
jae
jne
xor
icebp
add
jo
inc
sbb
sub
jecxz
mov
xor
aad
adcb
lahf
frstor
xchg
mov
jge
insl
mov
xlat
ret
cld
sub
jns
incl
xchg
or
and
add
jbe
or
mov
jo
fcomps
pop
js
pop
stos
jb
negb
and
cmp
pop
mov
mov
jg
int
fisubrs
jge
or
push
sahf
push
xor
adc
xor
insl
mov
cld
fcos
popa
aad
mov
int
scas
jmp
cmp
jle
jo
xlat
push
add
push
or
add
and
push
jne
dec
loop
dec
mov
pop
adc
test
add
adc
mov
lret
inc
gs
add
cmp
cs
stos
je
int3
xchg
xchg
mov
jne
mov
subl
pop
jnp
xchg
ds
add
adc
pop
into
sub
jl
cmp
sub
in
ss
push
mov
iret
jecxz
jb
test
mov
rolb
pop
rolb
add
ret
inc
mov
jno
out
bound
or
pusha
push
inc
ret
insb
loope
pop
mov
lcall
mov
ret
inc
test
mov
testl
pop
mov
mov
cmp
mov
fidivl
lock
testb
aad
pop
inc
sub
lods
and
popa
pushf
idivb
pop
mov
in
int
lods
out
add
xchg
je
insl
push
jp
push
loopne
addb
lret
or
xchg
dec
mov
fsubrs
std
mov
inc
lahf
icebp
stc
xor
mov
jl
enter
lea
add
ljmp
int3
cmpsl
aam
das
repnz
or
mov
jno
mov
daa
mov
jmp
movsl
loope
sub
adc
push
mov
cmp
mov
mov
xor
push
pop
jmp
scas
mov
sarb
jl
loopne
daa
lock
mov
rcl
aad
lods
mov
hlt
ja
and
out
ja
imul
xchg
pop
test
mov
dec
mov
lahf
insl
push
enter
xlat
and
es
xor
cmp
rcrb
loopne
cld
clc
mov
add
fidivl
mov
jno
imul
xchg
dec
int
std
or
inc
lcall
jge
pop
mov
cld
daa
cmpsl
sub
fs
sbb
cmpsl
repnz
push
mov
adc
cwtl
lock
cmp
adc
mov
xchg
sti
lahf
popf
jae
mov
or
mov
add
push
sbb
mulps
aam
or
hlt
gs
loopne
sbb
cltd
dec
test
jns
sub
sub
stc
pop
jp
push
out
xor
xchg
outsl
lahf
test
fwait
jns
fwait
shl
sahf
loop
cmp
iret
pop
cmp
jnp
pop
push
jnp
inc
push
int3
xchg
push
inc
pop
push
mov
fnsave
jo
scas
jmp
js
mov
imul
sub
adc
scas
loop
test
xlat
mov
sbbb
call
rorb
xor
push
dec
xor
es
pop
rcrb
or
sub
gs
or
mov
adc
cmp
or
add
outsb
mov
lock
cltd
cmpsb
inc
testl
movl
add
push
icebp
xor
sarl
mov
cmc
int
int
mov
xchg
mov
jne
mov
inc
dec
xor
add
shll
and
fwait
xor
add
jns
lds
pushf
enter
fstl
je
scas
inc
and
xchg
pushf
int
adc
push
outsl
inc
insb
mov
adcb
xchg
popf
xchg
pop
mov
sub
xlat
imul
out
mov
dec
jge
test
pop
jmp
cmpsl
loop
push
mov
ror
cmp
sbb
push
in
test
hlt
mov
ficomps
add
sub
stc
int3
lret
fcompl
pop
mov
pop
push
fistps
sbb
ret
and
out
sub
fcomi
lret
pop
sbb
std
push
xor
xchg
cmp
cmp
mov
push
js
mov
das
gs
dec
scas
xor
outsb
mov
add
les
adc
xor
xor
cmc
and
sub
jmp
cli
lcall
mov
adc
add
adc
jno
inc
insb
jns
shll
cmp
sbb
sti
pop
dec
cltd
call
sub
imul
outsb
sub
call
sbb
dec
lods
or
jnp
adc
aad
sub
nop
and
je
mov
xchg
bound
gs
dec
or
adc
push
mov
cwtl
insl
in
movsb
mov
icebp
into
repz
test
les
mov
xor
xor
push
xor
orb
nop
mov
scas
jle
dec
adc
lcall
subl
data16
and
fadds
pop
das
jb
pop
sub
xchg
pop
lcall
mov
cmp
enter
mov
lds
fs
dec
xor
push
jns
lahf
mov
add
pop
cmp
pop
orl
aam
lock
adc
icebp
push
stos
xlat
adc
outsl
mov
pop
test
push
mov
jno
mov
dec
test
mov
lods
mov
cli
jmp
pop
mov
out
sub
push
jge
jb
push
fadd
pop
dec
popa
xchg
sub
fidivrs
lret
jae
out
push
enter
fistpll
inc
fwait
cltd
xor
cltd
sub
and
dec
ret
mov
adc
mov
cmp
sub
movsb
adc
dec
popl
pop
rorl
fbstp
or
mov
out
jmp
loope
repnz
pop
and
adc
push
xlat
xchg
jge
mov
aam
xchg
adc
and
sub
in
or
jae
lret
ret
xor
cmc
inc
mov
loopne
sbb
sbb
test
call
pop
add
mov
mov
jecxz
push
insb
sub
les
scas
jg
mov
popaw
jg
ret
jl
lods
psraw
insl
icebp
and
pop
sub
inc
xor
stos
test
and
cli
lcall
xchg
inc
xchg
adc
mov
pop
nop
jne
and
in
mov
arpl
test
pusha
cmp
mov
insl
std
inc
imul
push
ret
lea
imul
cmpsl
or
pusha
lods
jge
mov
test
pop
lret
push
push
das
pop
loop
sahf
ficoms
mov
daa
ret
mov
dec
xor
push
push
push
push
adc
popa
sahf
push
es
iret
push
dec
xchg
pop
xchg
mov
imul
pushf
dec
lock
cmpsb
cmp
mov
iret
andb
mov
push
repz
adc
shlb
mulps
jge
mov
dec
jmp
aas
xchg
cmp
leave
popf
mov
rorl
mov
jno
aaa
js
cmp
xchg
mov
movsb
shll
bound
dec
lods
jne
cmpsl
lret
aad
jg
inc
movsb
xchg
jnp
pop
push
pushl
xchg
adc
scas
ds
int
xor
fists
lret
jns
cmpsb
cmpl
shr
cmp
add
and
sub
ret
add
loope
or
mov
and
mov
imul
mov
pop
jno
mov
hlt
fnsave
add
jno
xorb
std
std
sahf
loope
xchg
or
popa
dec
lock
mov
inc
adc
xor
nop
push
mov
jns
mov
and
fimuls
ja
es
out
cmpsl
xor
adc
rcrl
je
xchg
pop
std
cmp
or
pop
loopne
ljmp
or
push
and
mov
pop
mov
cwtl
cmc
stc
xchg
sub
mov
sbb
addb
sahf
outsb
adc
lds
out
push
dec
ss
pop
jne
ds
popa
pop
sub
push
movsb
mov
cmp
xor
arpl
cs
test
lock
lcall
in
incl
out
mov
jecxz
cmp
sbbb
aas
addr16
cli
movsl
mov
push
add
lea
push
push
dec
mov
inc
jns
adc
and
mov
ljmp
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
movl
xor
xorl
inc
ret
push
mov
sub
movl
push
movl
add
mov
push
adcl
mov
xor
andl
push
mov
or
mov
add
subl
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
call
mov
dec
mov
jmp
mov
test
movl
je
movl
cmpl
je
cmpl
jb
jmp
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
xorl
mov
mov
decl
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
mov
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
xor
movzbl
adc
mov
add
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
subl
mov
xor
negl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
movl
cmpl
je
cmpl
jg
jmp
call
mov
dec
mov
jmp
mov
orl
sub
subl
lea
xor
xor
movl
cmp
je
orl
mov
xor
addl
add
cmp
movl
jne
xorl
pushl
notl
call
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sub
mov
xorl
xor
subl
add
movl
cmp
movl
je
subl
pushl
addl
pushl
call
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jl
jmp
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
mov
and
mov
orl
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
adcl
add
movzwl
movl
cmpl
je
cmpl
ja
jmp
pushl
call
mov
dec
mov
jmp
mov
jmp
inc
pop
cmp
and
dec
pop
fisubrs
inc
ss
jp
adc
jp
pop
stos
pop
test
inc
out
ss
mov
divb
mov
cmp
jo
mov
aaa
das
daa
leave
sub
adc
es
aad
rcl
loopne
mull
push
data16
out
dec
xchg
loop
pop
cmpsl
dec
mul
leave
dec
cltd
mov
and
arpl
fidivrs
sub
fnstcw
addr16
mov
cmp
dec
repz
inc
jp
shrb
cmpsl
sub
mov
sbb
or
mov
jbe
sub
neg
adc
sub
pop
clc
addb
jae
pop
icebp
jge
jg
sbb
xchg
fwait
call
sbb
je
dec
sub
lea
cld
stc
loopne
iret
out
aam
lret
test
pop
aad
push
mov
mov
add
jecxz
push
rorb
in
push
push
outsb
sbbb
movsb
call
mov
mov
out
ljmp
adc
iret
stos
sub
rorl
dec
out
cwtl
fcmovbe
mov
lret
cmc
fdivrl
fildll
and
outsl
mov
sbb
sub
mov
sbb
clc
mov
popf
cs
mov
or
mov
mov
je
push
add
lock
stos
cmp
outsb
jnp
outsl
out
mov
jle
add
movsl
in
jb
xchg
movsl
aad
or
arpl
test
loope
push
sub
loope
mov
mov
rcrl
mov
or
test
sub
outsb
daa
dec
sarl
xchg
push
dec
sti
addr16
or
cmpsl
es
xchg
sub
ss
sbb
into
imul
cld
jle
icebp
sti
sbb
loope
sbb
mov
rcll
cltd
ficompl
btc
outsl
push
sbb
pop
and
lock
mov
mov
into
jl
mov
inc
aam
lea
jp
loope
mull
cmc
lods
enter
jge
dec
sti
push
pop
pop
push
movsl
push
jp
push
pop
xor
pusha
out
or
insl
lahf
in
cmp
or
mov
fldcw
jmp
imul
test
dec
mov
mov
sbb
sbb
out
dec
cs
jl
dec
aaa
stc
push
sti
js
lahf
adc
lret
adc
and
xchg
sbb
ja
mov
imul
cmp
pop
xchg
cli
inc
pop
cmpb
call
sub
js
pslld
inc
xchg
cwtl
mov
aaa
adc
xor
ret
loope
fnstcw
push
mov
sub
arpl
xor
fwait
jg
adc
mov
adc
sbb
xor
push
pop
mov
pop
push
push
jecxz
or
rorb
js
mov
or
cmp
bnd
out
adc
jmp
add
jmp
test
and
push
jo
inc
movsb
sub
scas
sbb
sbb
add
mov
xchg
or
sub
cmp
inc
jmp
aaa
jmp
popl
jecxz
sbb
jnp
cmovl
shrb
lea
mov
jae
loopne
adc
outsl
inc
push
in
cmp
outsb
ss
pop
outsb
aam
push
aas
out
fisubs
js
lahf
adc
fbstp
adc
mov
ds
shr
movsl
cmp
sbb
rorb
push
and
cmp
rorl
pushf
xchg
or
popf
cmp
fwait
push
scas
push
stc
int
jb
test
mov
mov
inc
sbb
push
push
nop
add
cmp
mov
and
xchg
mov
mov
fs
mov
inc
dec
and
xchg
filds
lods
xor
lahf
scas
xchg
out
mov
jl
sub
jb
push
lods
sarb
cld
scas
mov
cmc
fnsave
jl
repnz
fisubrl
push
mov
cmpsl
jns
addr16
mov
hlt
out
jg
inc
mov
inc
cmp
daa
lods
mov
mov
repz
aaa
repnz
repnz
mov
or
popf
jb
sbb
sub
push
mov
not
fnstenv
inc
aaa
xchg
filds
mov
mov
mov
cmp
cwtl
or
mov
lret
pop
in
ljmp
iret
fwait
mov
gs
sbb
and
icebp
imulb
cmpsb
shl
call
mov
pusha
push
adc
xchg
inc
pushl
sbb
xchg
or
mov
jbe
fistl
adc
push
mov
pop
jbe
outsl
push
loop
add
repz
outsb
pop
pop
cmpsb
mov
daa
push
add
cmc
or
daa
pop
adc
out
xchg
fwait
xor
ret
push
sbb
outsb
and
push
and
into
sar
jo
ljmp
dec
xchg
inc
push
dec
outsl
test
es
mov
adc
xchg
movsb
adc
and
lock
rcl
dec
xchg
aas
orl
sti
xor
popf
rcl
mov
cmpsb
cmp
adc
outsl
mov
sti
inc
dec
cld
subps
push
mov
rorl
loopne
negl
dec
push
das
cmc
je
dec
or
mov
jae
cmp
xor
xchg
loope
inc
insl
inc
fistl
cmp
out
push
in
and
in
out
insl
aaa
push
sub
and
je
push
dec
movhps
movsl
xchg
cwtl
mov
imul
out
lea
cmp
ficompl
roll
nop
ss
push
sub
ret
rorl
out
xor
mov
cmp
ljmp
add
into
lahf
push
arpl
mov
out
scas
mov
xor
scas
pop
imul
add
push
adc
ss
fsubs
dec
pop
jecxz
sub
lret
fstps
in
repnz
jns
incb
lock
arpl
gs
data16
rcl
stc
fwait
xchg
and
push
mov
cmpsl
movsb
out
in
loopne
inc
movsl
xchg
enter
fstl
mov
movsb
push
xor
or
negl
imul
into
pop
sbb
mov
cmp
push
push
std
sbb
adc
scas
push
push
push
sbb
sbb
xchg
mov
xchg
jae
iret
imul
and
pop
fnstenv
xlat
imul
mov
dec
pop
sti
mov
aas
clc
lock
and
and
lds
ds
out
ret
jae
push
jo
and
pop
and
bswap
push
mov
add
push
or
int3
jo
mov
xchg
mov
out
mov
andb
fwait
push
shr
fcmovnbe
jno
cmc
mov
jno
and
fildl
mov
lret
out
lock
int3
adc
xchg
jmp
andb
out
inc
sub
pop
mov
insl
fistps
inc
iret
in
out
inc
add
pop
mov
xchg
adc
mov
jno
and
cmp
xor
push
mov
adc
mov
mov
mov
sbb
jns
pop
lea
js
aad
xchg
in
or
cmp
adc
jb
fidivrs
imul
nop
push
xor
stos
cmp
adc
sub
dec
mov
fists
sbb
outsl
sbb
jae
sub
add
or
repz
jp
sbb
and
addr16
ljmp
test
cmp
popf
repz
and
xchg
imul
xchg
into
repnz
daa
sub
or
fidivrs
out
cmp
outsl
subb
lretw
push
dec
cmp
xchg
mov
jl
fiadds
or
jmp
loopne
leave
shlb
fsubl
icebp
vdivss
repnz
andb
add
xor
xchg
cmp
roll
add
cmc
inc
icebp
sbb
xchg
add
adc
mov
jle
xor
jl
jle
call
and
push
dec
xchg
push
add
fst
enter
xchg
jnp
test
ja
push
adc
and
xchg
or
pusha
pop
fwait
in
arpl
cmp
ror
scas
xchg
dec
xchg
sub
pop
cmc
movl
aad
ds
and
popf
popf
and
xchg
sub
push
pop
int
and
fsubl
mov
or
out
push
sbb
cmp
out
movsl
jae
push
fcmovnu
icebp
mov
jno
mov
hlt
out
cmp
test
cmp
adc
jge
mov
cmpsl
insl
mov
lods
mov
add
es
mov
sti
xor
xchg
pop
pop
mov
push
inc
out
mov
jmp
push
xchg
mov
pop
sarl
jl
dec
mov
imul
imul
lock
or
addl
xor
or
jg
std
fisubs
enter
xor
sarl
jae
sub
dec
fistpll
addb
jbe
in
jnp
mov
ss
leave
addr16
adc
iret
es
pop
js
cmp
cli
push
into
lret
mov
push
or
test
fwait
push
pop
mov
mov
add
imul
or
sub
and
push
call
lret
in
filds
push
sbb
out
scas
repz
cli
ja
inc
mov
add
outsb
mov
cmpsl
cs
xlat
xchg
in
out
jnp
addl
sahf
mov
mov
outsb
sbb
cltd
idiv
ds
out
push
mov
in
jb
rorb
push
inc
sub
enter
rclb
pop
mul
push
shlb
pop
sub
lods
cli
mov
add
push
push
hlt
fldenv
or
data16
enter
xchg
dec
sub
push
add
mov
and
pop
add
and
imul
hlt
mov
and
xchg
je
in
fstl
das
push
mov
jecxz
mulb
fiaddl
or
sbb
mov
fdivrl
dec
testb
repz
jecxz
mov
in
xchg
push
sti
cmp
jle
cld
sti
repnz
subb
xchg
ret
outsl
aam
std
and
cli
jns
dec
mov
and
ds
cmp
jl
ret
pop
and
jecxz
mov
lret
and
test
fcoml
pop
or
mov
and
and
pop
lret
xor
sub
out
mov
aam
xchg
sbb
mov
and
jle
xchg
fidivrl
sub
shrb
inc
addb
sbb
push
aam
test
pop
push
daa
and
jg
leave
inc
sbb
pop
call
call
sbb
xchg
faddl
xor
daa
js
imul
insb
int
scas
mov
imul
cmpsb
push
out
mov
pop
cmp
cmp
jno
jge
add
adc
xlat
popf
pushf
cmpsl
nop
stos
pushf
add
mov
ret
push
out
je
repnz
int
mov
xchg
adc
pop
gs
push
andb
mov
jp
mov
imul
sbb
and
ds
jb
ja
in
pavgw
iret
movsl
dec
mov
movsl
out
pusha
jb
jp
mov
mov
adc
fnsave
mov
sbb
sbb
mov
mov
cmp
pop
inc
push
jmp
pop
sub
and
jecxz
in
xchg
adcl
gs
sub
xor
int3
pop
xor
jno
inc
loope
shll
mov
jecxz
push
movsl
je
test
xchg
dec
mov
mov
mov
dec
mov
lds
mov
or
mov
arpl
ret
imul
sbb
xchg
adcl
lea
push
pop
cmc
cmp
push
pusha
mov
xchg
movsl
aam
jg
das
jp
mov
jns
pop
test
adc
adc
test
adc
popa
inc
test
movsl
pop
mov
xorb
xlat
fisubrs
mov
js
nop
inc
movsb
ret
push
cmpsb
pop
jp
mov
out
mov
aam
pop
xor
inc
fwait
sbb
push
dec
jp
fwait
mov
lret
cmpsl
movsl
add
jns
in
xchg
xchg
clc
lcall
scas
aam
std
xchg
gs
jb
dec
cmp
mov
mov
andl
pop
pop
push
mov
sub
movsb
pop
lods
daa
adc
or
fisttps
cmp
std
ret
pop
jne
cmpsl
fidivs
push
loop
int3
xor
ret
jno
es
fs
xlat
lret
fnstenv
xchg
mov
loop
dec
inc
add
shr
negb
xor
paddsw
jle
adc
loopne
jge
das
jbe
fwait
cwtl
sbb
ljmp
sti
fisttpl
in
dec
add
and
xorb
jg
lret
pushl
in
push
mov
test
add
dec
jg
pop
mov
adcb
cmp
scas
scas
in
add
dec
out
inc
ljmp
mov
inc
dec
sbb
lcall
adcb
sbb
in
or
stos
mov
sub
fldl
cs
or
cld
mov
in
mov
lods
in
in
jge
add
xchg
inc
scas
mov
pop
rcrl
mov
pop
sub
cs
add
lret
loopne
gs
add
sub
outsl
popa
movsl
xor
push
mov
dec
stos
xorl
xchg
les
lcall
frndint
into
lcall
inc
sbb
jl
jne
mov
push
push
push
mov
push
rcl
icebp
stos
pop
addr16
xchg
lcall
cwtl
les
jb
inc
xlat
mov
jnp
xchg
push
and
inc
inc
inc
cmp
repz
dec
pop
xchg
imul
leave
popa
stc
pop
ja
or
inc
pop
std
out
cmp
shlb
sahf
adc
mov
and
nop
mov
mov
jno
es
sbb
cmp
popa
stc
test
push
jge
ja
push
jp
push
ljmp
mov
dec
inc
or
push
adc
mov
addb
mov
push
test
or
xor
jmp
or
adc
lds
inc
test
xor
dec
sbb
dec
or
bound
in
sbb
mov
subl
xorl
mov
loopne
mov
lret
idivb
lods
shlb
dec
xchg
stc
add
ljmp
popf
cltd
insl
mov
mov
imul
lock
xor
insl
fwait
mov
loop
and
add
xchg
inc
stos
xchg
fstp
dec
xor
divl
gs
fwait
movsb
xor
arpl
rcrl
adc
clc
popf
decb
inc
mov
movsl
add
push
push
and
inc
aam
das
jmp
lcall
inc
imul
movsb
test
pop
pop
cli
xor
xor
add
in
sub
add
sbb
or
subb
jle
xlat
mov
mov
cmp
jecxz
cmp
add
nop
mov
inc
jne
mov
adc
out
mov
cmp
sub
leave
push
jo
inc
or
pop
jno
cld
sub
ror
add
and
lcall
daa
cmp
iret
stos
mov
xlat
cli
cmpsb
pop
sub
mov
mov
jle
enter
lods
or
dec
fldt
mov
adc
hlt
das
mov
jecxz
add
xor
xchg
sbb
push
lock
xor
jbe
aad
mov
mov
add
sub
xchg
cmpsl
out
ja
scas
hlt
aas
stos
aam
in
lahf
push
fsubrp
cmpsl
movl
leave
repz
outsb
pop
xor
loope
jmp
mov
packuswb
imul
stc
stos
xor
push
dec
inc
enter
scas
push
int
and
lds
add
jecxz
adc
push
cmc
out
sub
arpl
rcrl
popa
cld
mov
out
mov
pop
lcall
lods
cmp
xchg
inc
nop
cwtl
or
mov
cmp
cli
xchg
repz
imul
mov
loopne
cmc
cmp
inc
rcll
jl
adc
cmp
xchg
push
int3
and
add
mov
lret
fiaddl
cmc
adc
shrb
insl
aas
in
iret
cs
roll
inc
inc
xlat
pop
push
nop
xchg
iret
xchg
xchg
ret
fiadds
into
xchg
adc
pop
dec
hlt
jns
dec
sbb
daa
mov
mov
inc
movsb
jb
mov
sub
aaa
aaa
adc
xlat
jmp
or
mov
inc
push
into
lds
jo
neg
mov
imul
adc
ret
push
movsb
and
cmp
pop
dec
hlt
repz
or
into
push
iret
mov
mov
sbb
andl
xor
jb
test
sub
test
mov
xchg
mov
call
ds
cmp
jb
mov
ds
in
adc
pop
clc
pop
jge
or
cmpsb
jae
shl
inc
shl
push
out
push
loop
sub
sbb
pusha
in
fsubrs
adc
iret
push
and
inc
add
fsubr
sub
ljmp
xor
sbb
cs
in
and
cld
enter
adc
push
in
shll
inc
push
mov
inc
mov
lock
mov
cli
fdivrl
shrb
push
and
mov
jge
int
out
adc
push
shll
js
lock
xchg
out
cmp
lret
jnp
adc
scas
or
inc
fwait
test
mov
repnz
stc
lret
jge
push
loop
jl
mov
mov
jmp
sbb
or
lret
add
inc
jb
fs
xchg
mov
shll
jae
adc
lds
push
out
lret
add
lock
pop
mov
addr16
jecxz
rorl
std
push
jbe
inc
mov
sbb
jl
sti
test
pop
insl
repz
and
adc
push
mov
lret
and
mov
out
push
xor
and
popa
mov
orb
cmpsb
xchg
mov
or
or
repz
sbb
inc
inc
sub
cs
in
mov
push
cmpsl
inc
int3
mov
cmpsb
mov
jnp
pop
pop
idiv
fnsave
dec
loop
cltd
dec
mov
in
mov
test
mov
dec
push
pop
out
sbb
mov
test
aam
mov
sub
adc
dec
shll
or
jmp
movsb
pop
js
nop
xchg
movb
inc
mov
sub
fisubs
mov
sarl
jecxz
sub
shrl
pushl
enter
in
rorb
fimull
fsubrp
push
test
push
inc
sub
mov
pop
sbb
scas
fs
mov
clc
clc
cmp
divl
mov
cltd
jnp
das
sbb
cltd
aaa
add
cmp
sbb
sbbb
imul
inc
sub
add
ss
add
mov
adc
mov
sub
pop
fistl
sub
clc
cmpsb
and
or
pop
divb
push
cwtl
bound
push
sub
lahf
adc
outsb
sub
mov
test
sub
scas
imull
fs
cmpb
sahf
or
mov
xor
pushw
jno
xor
jns
adc
mov
mov
movsb
loop
hlt
or
mov
rorb
sahf
lock
inc
enter
cli
jnp
in
push
imul
nop
js
xor
in
movsb
rcrl
push
fmuls
sub
jle
mov
pop
ror
out
mov
incl
inc
inc
mov
xchg
push
add
loop
pop
jne
icebp
push
mov
push
test
dec
mov
fwait
xchg
xor
inc
mov
gs
xor
cmp
xchg
icebp
daa
mov
lcall
xchg
and
cld
insb
clc
test
bound
pop
jl
test
push
jo
xchg
int3
shrl
in
loop
jae
lret
sbb
and
insl
movups
cld
add
div
iret
notl
sub
scas
or
push
inc
jg
xchg
pop
xorb
jae
dec
int3
adc
xor
jecxz
jne
mov
fcmove
mov
loop
ficompl
arpl
nop
push
ffree
data16
sarb
inc
mov
cmp
stc
fwait
add
push
mov
xor
mov
mov
jp
leave
dec
dec
ficoms
push
pop
mov
lods
call
jge
enter
sbb
out
mov
sti
pop
test
add
or
iret
mov
dec
out
add
mov
xor
add
andl
or
dec
mov
and
sub
pop
invd
sti
adc
inc
lcall
inc
xchg
and
jae
pop
push
mov
cmp
push
xchg
cmp
inc
push
jns
sub
sub
fistl
mov
aaa
dec
xor
leave
cmp
xchg
ds
jp
pop
pusha
mov
test
xor
mov
and
cmpsl
subl
addb
push
xchg
pop
xor
cmp
push
out
add
mov
pop
mov
push
fidivrs
bound
cmp
mov
mov
pop
stos
jg
xchg
push
and
xchg
cwtl
push
sbb
jmp
and
cmpsb
jae
ret
sub
jns
dec
xchg
push
inc
lods
test
add
insl
cmpsl
mov
jb
sarb
sub
rcl
popa
sahf
rcll
ja
and
hlt
pop
sahf
test
movsb
lods
xlat
orb
scas
cmovnp
es
pop
sub
cmp
add
xchg
sub
and
push
test
jecxz
jmp
clc
xor
nop
mov
inc
dec
test
sbb
out
fsubs
lods
jg
outsl
pop
push
les
sub
daa
xchg
sarb
mov
adc
sub
pop
dec
mov
dec
add
daa
scas
lahf
pushf
cltd
movsl
aas
jg
xor
pop
cmp
xchg
sbb
jae
loopne
mov
ja
mov
std
xchg
inc
mov
ds
xchg
pusha
mov
add
gs
cmpsb
je
aad
and
jnp
inc
inc
or
sahf
xchg
daa
cmp
lods
add
lret
inc
stos
mov
jp
xchg
addl
neg
mov
mov
adc
es
mov
and
adc
sbb
xchg
push
inc
loopne
add
icebp
sbb
mov
clc
idivb
push
outsl
lret
aad
mov
arpl
push
fsubrl
xchg
rcl
lds
pop
jno
xor
test
incl
xor
mov
addr16
sbb
sbb
push
in
test
pop
mov
dec
mov
cwtl
or
test
adc
dec
pop
adc
dec
lret
call
popf
jmp
stc
cld
add
ret
xor
add
push
adc
js
push
and
mov
iret
aaa
lcall
mov
into
adc
addr16
xchg
pusha
sub
sub
dec
pop
jae
push
mov
sub
stos
int
sbb
adc
push
imul
push
sbb
in
push
xchg
in
cmp
outsl
std
incb
lret
aam
mov
aas
lock
mov
mov
popf
cmp
cmp
pusha
movsl
std
xor
clc
sub
aam
jl
sahf
addr16
pop
push
push
add
rclb
je
enter
cld
jle
xchg
data16
xchg
std
jp
push
xorb
pop
pop
adc
fmulp
outsb
cli
inc
mov
xor
repz
mov
xchg
in
in
xchg
push
mov
repz
lods
mov
xchg
xchg
repz
or
in
aas
cmp
mov
nop
fists
jle
jnp
inc
jge
gs
inc
es
lods
or
sbb
inc
int
adc
lds
int
pop
jne
es
sub
iret
push
inc
push
inc
repz
add
inc
xchg
inc
test
cld
sbb
lret
pop
stos
nop
mov
mov
push
pusha
cmc
push
mov
sbb
mov
cmpb
xchg
stos
movsl
mov
adc
movsb
jbe
rorl
jno
or
add
outsl
inc
lds
out
fwait
in
ret
movsb
lret
or
or
push
xchg
or
sbbb
xchg
fistpll
pop
pop
inc
rorb
sbb
add
movsl
fwait
sub
mov
mov
sub
cmp
inc
dec
mov
add
aas
mov
in
dec
testl
and
mov
std
and
and
push
mov
pop
imul
pop
fidivl
push
xor
repz
jae
xor
jns
dec
inc
mov
bound
fwait
lret
punpcklwd
mov
push
push
mov
fs
mov
push
or
ljmp
rcrl
subl
shlb
adc
and
inc
dec
inc
fpatan
cmpsb
and
push
fisttps
add
sbb
sub
xlat
mov
out
pushf
jmp
fldt
call
fs
cld
pop
cld
popa
repz
test
movsl
sbb
test
or
subl
in
mov
xlat
inc
xchg
inc
push
add
adc
push
and
fidivrs
pop
xlat
outsb
inc
lock
jbe
pop
out
push
cmp
dec
xchg
pop
xlat
repz
addr16
lods
loop
pushf
sbb
popf
mov
and
shll
cmpsb
test
mov
sub
and
imul
xor
sbbl
data16
and
mov
pop
imul
mov
leave
jge
inc
push
lock
xchg
fidivs
xchg
cltd
xor
mov
mov
add
and
sahf
aas
js
cmpsb
push
in
sti
jecxz
insb
cmp
rcl
flds
test
jp
fs
fs
mov
cmp
aam
cmp
xchg
ret
sub
cmpsl
push
cs
pushf
stos
cld
cld
inc
repnz
cmp
xor
push
jge
xchg
add
jmp
aaa
inc
mov
fsubs
push
jle
xor
adc
push
pop
or
xchg
pop
mov
loope
or
pushf
jne
sub
into
mov
add
sahf
int
outsb
jae
mov
pop
leave
std
out
sub
inc
fdiv
fwait
dec
iret
dec
int
arpl
fcompl
sarb
dec
adcb
mov
call
or
call
aas
cmc
hlt
pop
jne
mov
sub
push
mov
lds
pop
xchg
mov
fisttps
xchg
popa
jo
inc
repz
lret
lahf
sub
inc
ljmp
inc
addr16
aaa
xchg
sbbl
sub
pop
push
sub
int
xchg
sub
adc
push
std
xchg
xor
cmc
fidivrs
data16
jbe
fcos
mov
in
popf
repnz
data16
shll
sahf
add
jle
hlt
lret
pop
je
fstl
int3
int3
sub
cmpsb
adc
jge
push
push
test
ds
inc
push
push
xor
imul
insl
mov
xchg
jo
push
ljmp
mov
push
pushf
adc
je
stos
imul
scas
xchg
cwtl
xor
leave
adc
ds
jae
outsb
std
mov
fmulp
sbb
dec
mov
enter
fdivs
dec
sti
into
push
popa
mov
fsubrl
cld
int
in
pusha
and
pop
cmp
push
fsubp
int3
mov
dec
jmp
sti
jne
roll
push
mov
stos
rcl
pop
cmp
push
scas
call
jecxz
mov
adc
rorb
sbb
dec
and
sbb
mov
test
xchg
test
lods
dec
jmp
cmpsl
or
or
or
clc
pop
mov
stos
scas
loopne
dec
call
dec
out
ret
and
jae
das
xchg
in
mov
mov
jle
push
mov
cmpsl
iret
push
inc
std
out
mov
das
sbb
std
sub
loop
dec
lods
loop
dec
lcall
adc
insl
mov
mov
scas
and
enter
mov
cmp
adc
movsb
mov
icebp
fdiv
or
out
repnz
outsl
jnp
jnp
adc
lods
dec
adc
mov
rcrb
mov
adc
imul
mov
mov
push
jns
fimull
aas
xchg
adc
clc
ja
or
add
ds
cmpsl
aas
xchg
jp
enter
scas
cmc
xchg
dec
repnz
mov
iret
mov
imul
jmp
dec
test
mov
jo
les
inc
cmpsl
mov
rcll
mov
adc
inc
fdiv
sub
sbb
lret
inc
in
loopne
inc
cmp
cmp
dec
sbb
fildl
scas
rcl
dec
in
repz
iret
fldenv
outsb
sbb
fimull
and
subb
rcr
mov
fsubp
mov
scas
les
sub
imul
xchg
fwait
mov
ret
cmc
dec
enter
xchg
jle
sarb
pop
shlb
mov
test
inc
adc
lahf
stos
mov
cmp
imul
inc
lock
mov
movsb
gs
mov
in
cmpsb
mov
scas
cli
data16
loop
mov
out
xchg
outsb
jl
add
and
insb
xchg
push
daa
lds
jecxz
adc
pop
pushf
mov
xor
in
sub
push
cli
xchg
mov
xor
lea
mov
leave
xor
cwtl
xchg
push
stos
addb
es
xchg
ret
in
and
dec
jmp
insb
les
test
dec
cld
rol
fdivl
idivl
sbb
js
pop
jle
fidivrs
xchg
mov
mov
stos
popa
imul
push
orl
or
pop
xchg
icebp
les
clc
dec
mov
mov
leave
push
pop
sub
xchg
aas
xlat
jbe
xlat
lock
in
repnz
sti
push
js
xchg
and
jns
adc
clc
pop
cmpsb
js
mov
jb
lea
test
pop
inc
dec
daa
pop
in
add
mov
pop
dec
and
popa
das
fisttpl
inc
aas
int
test
add
repnz
dec
and
add
jg
out
aas
sbb
in
fisttps
fwait
cli
aaa
push
addl
pop
out
in
jno
sbb
movb
adc
lea
adc
mov
mov
sbb
mov
xor
dec
addl
mov
dec
movl
push
mov
xor
xor
sub
sub
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
jmp
mov
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
call
jmp
mov
sub
xor
mov
push
sbbl
add
movl
jmp
mov
mov
inc
movl
cmp
jb
movl
cmpl
je
cmpl
jb
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
xor
adcl
add
movl
jmp
mov
xorl
mov
andl
xor
sbbl
mov
xorl
add
movzwl
sbbl
mov
xor
jmp
popa
sbbl
test
push
pop
iret
aam
ret
jp
adc
jp
ret
push
mov
mov
xchg
call
cmp
insb
sarl
insl
and
cmp
bnd
and
push
sbb
bsf
cmpsl
in
pop
stos
test
loop
inc
fwait
popf
es
or
cltd
or
or
not
mov
xlat
push
insl
lods
inc
mov
into
dec
xchg
pop
jae
dec
mov
cmpsb
xchg
adc
adc
movsb
xchg
cmp
adc
out
inc
push
push
aam
mov
jno
fdivr
add
inc
int
repnz
xor
or
jne
jmp
mov
int
insl
push
popa
insl
sub
sbb
xchg
loope
fwait
cmpsl
adc
addb
int3
icebp
cmpsl
inc
mov
xlat
mov
ljmp
scas
jnp
jno
push
xchg
mov
pop
mov
sub
fnstsw
mov
stos
and
imul
movsl
adc
rorb
sub
jg
out
scas
pop
stos
mov
sbb
idivl
xor
pop
push
into
cmp
or
mov
clc
pop
dec
adcb
fs
ror
xor
pop
mov
arpl
inc
inc
or
jbe
mov
push
push
dec
stos
call
test
add
mov
and
jp
adc
sub
pusha
movsb
cmp
mov
loope
xchg
std
mov
adcb
rorl
cmc
pusha
and
adc
pop
mov
sbb
pop
lods
aad
js
and
jle
popa
iret
push
ja
ljmp
cmp
mov
jnp
or
pop
jg
xlat
mov
sub
push
nop
jp
int
popf
imul
xor
push
dec
andb
push
js
in
adc
dec
push
fistps
mov
sub
mov
lret
jg
xor
mov
int
aad
fwait
and
daa
push
xor
inc
std
push
sub
icebp
mov
dec
xchg
in
xor
xchg
add
mov
lea
addr16
xchg
idivl
and
sbb
fcom
testl
mov
mov
push
daa
inc
add
adc
sub
into
dec
inc
xlat
jne
adc
mov
dec
test
sub
jg
and
and
insl
dec
add
sbb
or
jno
pop
lods
mov
imul
xorl
loop
loope
cs
and
shr
push
dec
inc
outsl
out
loop
dec
inc
push
push
push
pop
daa
adc
lock
push
sub
shll
out
hlt
add
pop
shl
and
scas
mov
push
pop
arpl
pop
mov
cmp
lods
fcomi
addr16
jg
push
cmp
repnz
xor
add
push
and
xchg
sbb
add
je
mov
lret
xor
sti
xor
or
in
ficoml
addr16
or
test
inc
hlt
imull
sbb
out
es
mov
cmp
popa
test
and
mov
or
stc
cmp
pushf
movsb
dec
or
stos
push
mov
pop
and
and
jge
orl
mov
mov
jo
push
add
mov
daa
adc
mov
repnz
int3
mov
fisubs
aas
sub
or
cli
adc
ja
inc
mov
or
mov
sub
mov
clc
mov
dec
push
std
ret
aas
cld
inc
out
mov
inc
in
fists
xlat
sub
in
icebp
and
arpl
push
stc
mov
and
addr16
adc
lds
test
and
xchg
divb
and
mov
pop
lahf
mov
mov
jmp
mov
fisubrl
aaa
mov
loop
fnstcw
mov
jl
mov
cltd
push
out
aas
xchg
inc
test
mov
jo
bound
mov
lret
ljmp
jo
or
xor
les
in
aaa
and
ljmp
repz
adc
mov
add
fsub
dec
ret
fcmovnb
jecxz
iret
xor
sbb
push
add
jg
add
xor
and
es
popa
fmul
sub
xlat
cmc
out
dec
fwait
mov
dec
sahf
xorb
xchg
call
jl
data16
js
ret
dec
xor
cwtl
ss
imul
jl
stos
in
and
jg
push
movsl
repnz
popf
xchg
sub
or
pushf
mov
adc
cmpl
xchg
or
mov
dec
std
out
dec
int3
aas
xor
mov
cmp
sbb
sub
out
add
jl
add
pop
push
ret
outsb
sbb
insl
loope
xchg
jl
jo
inc
cmp
aad
cmpsb
dec
stos
xor
mov
jns
xlat
out
lahf
mov
or
fsubr
sbb
stos
leave
nop
or
mov
repz
fwait
rcr
push
notb
lods
idivl
mov
pop
sbb
push
scas
rorb
stos
dec
imul
sti
jp
arpl
and
clc
push
arpl
push
dec
rcrl
xor
cwtl
push
cmp
push
loopne
mov
dec
or
cmp
out
lds
scas
dec
mov
call
add
loopne
repnz
mov
push
adc
sub
pop
lret
and
loope
xchg
push
jne
dec
icebp
cwtl
pop
mov
push
and
and
and
mov
addr16
sub
lea
add
popa
adc
cmp
nop
out
jne
sar
fisubs
ret
sbb
lcall
pop
add
int3
jle
inc
sub
jecxz
cld
je
ss
mov
sbb
cmp
fists
mov
data16
push
cld
mov
mov
les
add
out
xor
and
inc
sti
add
mov
nop
push
inc
stos
pop
xchg
mov
aad
xlat
mov
and
lcall
jmp
repnz
sub
out
lock
iret
sbb
inc
mov
loopne
jne
outsb
fidivrl
inc
enter
roll
sub
rcr
mov
imul
jmp
cmpsl
sub
mov
push
shll
scas
das
sarl
dec
repz
or
add
fstpl
xor
push
sub
mov
or
loop
push
cwtl
inc
push
fldl
in
pop
enter
shlb
stos
push
push
mov
es
shlb
popf
or
stc
pushf
mov
mov
daa
ret
adc
xchg
lds
mov
lret
sub
gs
shl
int
leave
call
sub
lock
and
adc
push
or
call
dec
sbb
inc
repnz
idivl
and
mul
shrb
fwait
mov
pop
jecxz
push
or
das
jo
mov
mov
mov
xchg
inc
jmp
adc
push
xor
jmp
mov
push
inc
call
adc
inc
mov
je
mov
add
andl
imul
mov
mov
ljmp
mov
cmp
mov
cmp
nop
pop
je
mov
test
loopne
sub
stos
adc
ror
roll
rorl
cld
inc
test
mov
adc
cli
icebp
stc
sbb
inc
aas
into
dec
adc
rolb
fidivrs
repz
add
sti
out
or
cmova
mov
cmp
ret
xchg
or
rcll
add
outsb
xor
xor
add
arpl
popa
loop
cli
std
ficomps
inc
jno
cmp
fnstenv
pop
in
sarl
cmp
notb
fdivrs
sbb
ss
cwtl
loope
inc
sbb
test
mov
mov
or
hlt
or
inc
and
jns
outsl
stos
lahf
adc
test
movsb
add
and
loopne
push
cmp
jmp
cmp
lahf
push
xor
cmc
pop
inc
loope
mov
arpl
push
xchg
adc
mov
lea
push
int
jl
pop
jp
loop
or
mov
pop
cmp
icebp
les
stos
stos
cmp
loop
jecxz
sub
dec
dec
push
and
xchg
out
mov
lock
js
bound
lcall
mov
and
mov
xchg
nop
fstpt
or
pop
cltd
push
mov
mov
js
jno
imull
push
add
push
cwtl
loopne
xor
cld
aam
dec
movsl
cmp
lahf
and
jb
aam
test
inc
addr16
rcll
and
jbe
aaa
cltd
out
leave
cmp
int3
and
jns
outsl
jmp
xchg
in
pop
cmp
repnz
add
inc
fsubs
add
loop
fdivl
or
xor
pop
rclb
hlt
daa
movsb
dec
add
lea
movsl
outsb
dec
icebp
mov
cmpsb
andps
or
push
fistps
or
inc
mov
scas
sbb
push
push
lock
push
lods
cmp
rcr
or
jp
stos
pusha
xchg
cmp
ds
andb
or
mov
cmp
sub
call
xchg
out
iret
dec
or
mov
sub
xlat
mov
mov
inc
mov
out
rolb
mov
dec
fistl
mov
adc
js
push
adc
push
test
xor
out
call
jbe
in
jge
jns
fdivs
adc
jae
pop
inc
stos
test
cmp
loop
sbb
add
and
mov
jg
mov
sbb
cld
or
outsb
mov
icebp
xchg
sti
push
popl
lods
sbbl
addl
cli
and
lcall
insl
jp
clc
dec
sub
mov
sbb
pusha
aas
dec
inc
and
lock
mov
repz
mov
mov
aas
lahf
xchg
mov
hlt
inc
sbb
ret
dec
in
mov
sarl
out
or
jle
js
orb
pop
fidivrs
test
fdiv
in
mov
xchg
inc
in
push
mov
jp
dec
xchg
and
xchg
fldt
cmp
xchg
cmp
stos
pop
xchg
push
inc
push
push
dec
sbb
pop
mov
jno
sti
adc
rcl
scas
xchg
js
pop
cmp
out
ret
or
cmp
leave
cmp
xchg
jl
ds
jb
shrb
aaa
dec
lret
in
mul
aad
jmp
aas
sar
cwtl
mov
jp
sti
rcrl
sbb
cmp
dec
or
fs
push
or
fldcw
mov
ret
push
cs
mov
gs
fstp
fwait
clc
sbb
je
inc
rcl
or
mov
adc
add
mov
sbb
hlt
into
push
fadds
insb
inc
into
ss
xor
xor
jecxz
cli
mov
or
mov
ja
or
inc
and
pop
aad
pop
das
push
mov
aaa
add
aaa
sub
xor
push
cmpsb
incl
pop
nop
lock
cmp
push
pop
add
xchg
jmp
insl
into
shrl
sbb
repnz
mov
inc
mov
insl
pop
xchg
aas
outsb
pop
aam
in
inc
cmc
mov
xchg
daa
xchg
gs
sbb
dec
aam
lcall
shl
pop
bound
shl
inc
sub
in
push
cwtl
loope
mov
xchg
xchg
das
aad
repnz
jns
dec
mov
add
jg
les
scas
test
or
jle
jle
std
icebp
int
faddl
sbb
or
push
pop
push
dec
call
xchg
cmp
icebp
mov
ficoml
xchg
test
pop
notb
cld
in
and
icebp
mov
insb
sub
pop
ljmp
add
imul
jmp
sbb
jns
lcall
lods
popf
mov
inc
je
cmpl
ss
mov
adc
scas
hlt
sub
imull
out
jo
pop
imul
xor
jl
jns
pop
add
pop
popf
sbb
push
mov
add
push
adc
lods
jg
mov
ret
vmwrite
leave
mov
int3
outsl
notl
cmpb
cmp
jmp
das
or
stos
insl
mov
jne
pusha
cmp
jae
sub
jecxz
sti
lock
pop
jl
adc
leave
inc
jp
pop
das
cmp
outsl
mov
push
push
mov
in
ja
xchg
lock
call
or
aaa
jbe
and
lret
mov
leave
or
pushf
and
and
sahf
cmp
add
jg
xchg
jg
cs
mov
dec
dec
inc
insl
pop
push
and
loope
lahf
les
jo
into
arpl
std
jbe
pop
pop
scas
mov
pop
mov
jl
and
add
ficomps
fidivrl
or
bswap
sahf
bound
inc
jb
cli
stc
cmp
add
xchg
cli
xchg
imul
xchg
cmc
dec
xchg
adc
int3
ret
cwtl
bswap
adc
dec
sbb
stc
fs
mov
jns
push
cmp
sub
push
push
jne
dec
fucomi
popf
xor
ret
cmpsl
xchg
mov
ja
mov
push
add
add
js
jl
mov
cmp
enter
add
les
mov
das
inc
sbb
mov
enter
dec
outsl
icebp
lods
xchg
out
loope
lock
aaa
lret
add
xchg
ljmp
push
mov
xchg
cltd
inc
scas
adc
sbb
fldcw
ss
sub
stos
fldl
mov
gs
repz
push
dec
sub
ss
cmpsl
inc
out
mov
mov
jecxz
pushf
jbe
imul
shll
pop
jecxz
mov
cmp
cmpl
add
lock
xor
push
dec
inc
mov
dec
insb
push
loop
fistl
fwait
cmp
sbb
or
std
adcb
push
push
fisubrl
rcll
je
adc
fimull
out
pop
inc
adc
test
mov
adc
xor
pop
lcall
sub
imul
std
xlat
cmp
jmp
xlat
jl
sbb
xor
es
testl
out
sub
mov
jbe
mov
test
mov
out
pop
shll
pop
lds
jp
mov
push
ficomps
xchg
jg
and
js
push
popa
cmp
jo
scas
loopne
push
pop
popf
fcom
dec
dec
les
mov
inc
stc
cmc
add
in
xchg
movsl
pop
call
fsubl
xchg
iret
cli
out
mov
into
pop
push
jp
leave
popf
imul
push
xchg
fs
imul
cltd
mov
dec
dec
xchg
loop
test
lahf
or
xchg
repz
mov
jno
pop
cmpsl
mov
dec
es
push
pop
fs
push
jge
or
cmpl
add
push
dec
shl
xor
mov
pop
jns
cli
sbb
and
js
gs
push
sahf
push
mov
pushf
sbb
xchg
cmp
into
xchg
addr16
pop
out
mov
xor
movsb
test
sbb
push
and
jnp
outsl
pop
cmp
inc
test
repz
js
sbb
hlt
jecxz
jg
mov
pop
mov
adc
mov
mov
stc
jae
bnd
test
out
xchg
xlat
scas
add
gs
stos
push
clc
loope
and
sub
pop
test
into
push
push
mov
push
into
jp
push
adc
push
mov
rol
jo
jmp
aam
jg
fisttpll
sbb
adc
sbb
push
out
jge
sahf
outsl
std
out
push
stos
adc
fcompl
cmpsl
xchg
sti
or
insl
push
lock
pop
add
jge
addr16
jb
sbb
lcall
les
mov
push
dec
cmp
sarl
stc
add
dec
jns
aaa
fdivs
fidivl
jle
mov
cltd
jle
xlat
fwait
cs
arpl
xor
mov
shlb
lret
add
dec
insl
jle
aad
ret
cmp
fstpl
jb
mull
dec
or
mov
iret
mov
pop
push
sbb
dec
imul
xlat
or
std
adc
int3
adc
dec
int
jno
mov
dec
pop
lret
icebp
push
mov
icebp
cmpsb
sub
or
jle
pop
les
aad
sbb
or
inc
fld
popf
pop
icebp
jns
push
xchg
in
fcos
add
aaa
push
lahf
call
cmc
cmpsb
loopne
push
push
jnp
fldenv
xlat
dec
inc
sahf
ficompl
xor
je
sub
mov
outsb
dec
inc
lds
roll
push
lret
cltd
test
fs
lahf
inc
sub
jp
inc
jb
pop
loop
cwtl
xchg
jb
in
dec
js
push
xchg
sarl
mov
jl
cld
and
insb
mov
dec
sub
cmp
outsb
xor
push
mov
lods
lds
stos
adc
lds
arpl
testb
hlt
push
add
xchg
rclb
mov
xor
and
sub
xchg
jnp
je
push
pop
sahf
and
mov
and
or
add
fs
push
and
sub
push
in
jge
pop
mov
pop
mov
cmp
jns
loopne
or
pop
fcoml
shlb
cmp
loop
cmp
dec
mov
imul
pop
jno
sbb
or
push
sub
cs
pop
cmpsl
inc
jmp
mul
mov
push
xchg
pop
sbb
lods
pop
jnp
loop
push
clc
xchg
out
popf
xchg
mov
xchg
mov
fstl
cmp
and
in
dec
in
cmpsl
pop
cmp
daa
pop
pop
dec
les
pushf
scas
ds
pop
ss
mov
and
fsubl
aas
das
dec
incb
xchg
dec
xor
push
andl
sbb
jnp
imul
imul
gs
in
mov
stos
shrb
dec
add
sti
pop
dec
cmpsb
push
enter
dec
add
insl
jle
jno
pop
sub
and
pop
pushf
adc
and
mov
pop
mov
ret
dec
dec
sahf
sbb
mov
push
out
imul
pop
stos
dec
mov
sub
je
in
cmp
sbb
in
push
daa
mov
idivl
mov
add
sbb
les
cmp
push
jle
add
sub
lret
out
pop
in
xor
jmp
xchg
sub
mov
and
ss
repnz
bound
push
pop
sbb
mov
sub
cmpsb
and
jge
inc
push
mov
sub
leave
jge
jp
pusha
xor
add
jp
hlt
invd
jns
inc
add
sub
jp
test
inc
rcll
dec
aam
push
jns
adc
dec
xor
out
shlb
iret
scas
dec
dec
fnstcw
push
cs
and
sbbl
push
js
inc
adc
pop
mov
stc
adc
bound
rol
xor
fidivrl
xchg
pop
orb
divb
rorb
sub
adc
les
xor
out
addb
ret
shlb
dec
orl
repz
leave
scas
xlat
fmuls
daa
cmp
jne
scas
mov
lods
jnp
enter
sub
mov
icebp
cmpsb
mov
mov
mov
xchg
add
inc
and
mul
inc
sub
adc
daa
das
enter
stos
in
into
mov
in
dec
push
mov
repz
and
xor
or
fdivs
mov
sbbb
mov
fistps
iret
pop
adc
xchg
repz
xchg
fistpl
notb
push
sub
push
pop
cmpsb
mov
dec
dec
les
incb
cmp
fsubs
xchg
imul
loopne
mov
fyl2x
dec
popa
jns
call
xchg
add
push
push
mov
aaa
scas
jecxz
mov
in
fildl
push
adc
movsb
add
mov
call
mov
arpl
xor
cmp
xchg
popa
pop
aas
jle
mov
pushl
and
push
mov
push
jle
ret
push
out
loope
sbb
xchg
mov
in
imul
dec
iret
or
repnz
int
stos
in
sahf
mov
push
cmpsl
les
xor
jno
icebp
icebp
rol
fcos
xchg
scas
xchg
adc
add
or
and
mov
popf
mov
or
mov
cmc
arpl
pusha
and
out
mov
je
mov
xorl
lret
bound
fcompl
mov
test
aad
mov
sbb
pop
pop
add
lahf
leave
clc
and
out
mov
cli
rol
mov
or
test
addb
sbb
push
mov
mov
cwtl
repnz
icebp
xor
jb
add
mov
cli
lcall
pusha
sub
inc
xor
sub
mov
sahf
fmul
cmc
insb
mov
pop
inc
xchg
and
pop
adcb
pop
adc
mov
lods
pop
or
jmp
test
inc
inc
xchg
call
insl
mov
cmpl
lods
sub
sub
ret
ljmp
jecxz
arpl
jmp
adc
pop
in
dec
and
lret
mov
sub
decb
jb
xor
jno
mov
mov
hlt
shrb
jb
adc
or
adc
mov
bound
mov
mov
flds
fistps
xchg
daa
pushf
mov
lock
rol
or
jg
dec
test
rol
mov
xlat
clc
lds
cmp
push
mov
insb
in
mov
sbb
push
adc
adc
mov
xor
xlat
push
lahf
mov
jnp
cli
xchg
inc
nop
stos
push
je
fsubl
jb
jle
clc
push
fsubp
or
push
mov
pop
fiaddl
aad
test
lret
or
dec
loopne
sbb
rclb
pop
inc
xor
push
or
push
xchg
pop
pop
mov
pop
das
add
lea
jge
pop
ret
push
jns
mov
ja
lea
mov
push
inc
mov
sub
xlat
cmp
jp
jno
dec
add
cmp
inc
pop
xlat
shl
lods
cmp
sub
push
and
imul
out
and
les
call
push
ret
popf
ljmp
dec
mov
pop
cld
cmp
pop
popf
pop
inc
jmp
adc
insb
push
xor
mov
mov
test
fiadds
mov
pop
inc
push
pop
push
clc
jle
xor
adc
inc
and
and
mov
repz
add
fidivrl
jecxz
xchg
es
mov
mov
mov
or
dec
sarl
push
add
les
movsb
sbb
mov
jnp
ret
jecxz
je
xchg
shlb
adc
xchg
into
mov
out
or
cwtl
outsb
mov
pop
push
mov
fisubl
mov
fwait
sub
mov
cmpb
mov
push
dec
repz
push
sbb
mov
add
inc
inc
cld
fdivrl
ret
sti
into
andl
movsb
sbb
scas
cmpsl
mov
cmp
hlt
jnp
push
in
les
jl
mov
xlat
push
into
shrl
inc
das
daa
js
out
and
inc
mov
jmp
inc
es
pop
orb
xchg
or
pop
fidivrs
inc
inc
mov
ljmp
fstps
popf
mov
mov
out
sub
fdivrs
icebp
inc
loopne,pt
ljmp
push
jbe
movsb
mov
out
push
outsl
add
lods
lods
xlat
repz
xor
aam
enter
cmpsl
cld
std
add
into
mov
mov
mov
sbb
mov
cld
shll
scas
inc
sti
mov
jbe
xchg
lock
mov
xchg
mov
xchg
mov
stc
dec
cmp
or
sahf
xchg
test
adc
jp
hlt
sti
test
xchg
jl
lret
push
je
mov
es
shll
cmpb
cs
ss
xor
lahf
pushf
shll
orb
lods
mov
pop
push
cmp
pop
into
aad
mov
data16
fstpt
repz
imul
mov
bswap
mov
pop
adc
push
adc
icebp
inc
and
rclb
call
dec
or
and
cltd
jno
push
add
jge
pushf
rolb
jne
iret
mov
cmp
inc
decl
xchg
add
iret
test
and
or
fwait
xchg
test
out
cmpsl
xor
shlb
testb
aam
ljmp
mov
inc
nop
adc
pop
dec
push
movsl
not
sbb
mov
mov
int3
ss
leave
xchg
mov
or
push
mov
sub
stos
int3
dec
jp
insl
dec
repnz
xchg
test
mov
nop
jno
mov
cs
sbb
rcr
jle
iret
mov
pop
mov
push
lds
jg
xchg
cmc
outsb
and
cmp
in
mov
mov
jg
ja
inc
cs
ljmp
gs
loopne
jae
fldenv
ja
aam
pop
aaa
mov
adc
inc
mov
out
into
xchg
add
out
xlat
push
sahf
add
push
pop
dec
pop
cs
into
test
push
ds
jl
mov
test
add
pop
or
push
pop
push
xor
add
dec
ret
pop
cmp
fs
add
jnp
mov
mul
sub
mov
mov
test
and
cmc
shrl
push
push
inc
ret
push
push
xor
pusha
cmp
or
fs
adc
popa
jbe
shll
mov
stos
cmp
fcompl
push
jecxz
mov
xchg
int
lret
pop
push
icebp
clc
pop
arpl
xchg
mov
ljmp
sbb
daa
lret
pop
in
arpl
sahf
ficoms
xor
std
pushf
inc
out
ljmp
movsl
jns
xor
popa
push
cli
xchg
jb
ss
and
ds
add
sbb
adc
ds
les
jbe
scas
scas
lcall
rcrl
dec
stc
mov
out
insl
dec
add
cmpsl
inc
mov
adc
xchg
sahf
cltd
testb
shrb
xchg
xor
pop
imulb
sahf
add
test
fisttpll
pop
push
inc
enter
fdivs
cmovae
mov
xchg
cmp
mov
pop
xchg
push
mov
xchg
rclb
leave
and
jns
data16
test
es
pusha
arpl
mov
xchg
and
cmp
jg
cmp
fidivrl
notl
std
outsb
int
imul
mov
jmp
or
addl
push
mov
out
and
sarl
aam
fldt
jmp
pop
mov
inc
xchg
aad
hlt
jge
add
pop
test
adc
outsl
hlt
push
cmp
popw
cmp
jmp
addr16
sbb
and
mov
notb
adc
push
pop
into
sbb
cmc
movb
cmp
dec
adc
lds
cmp
jo
rolb
xchg
xchg
cmp
stos
adc
pushf
out
mov
js
jae
and
xchg
fisubl
add
xchg
enter
push
repz
pop
mov
jbe
pop
shll
enter
iret
mov
bnd
in
and
mov
adcb
xor
scas
mov
popf
cmpsb
in
inc
mov
xlat
pop
lret
sbb
ficomps
ljmp
idivb
outsb
xchg
add
inc
adc
cs
mov
scas
rcrl
cmc
add
jmp
xchg
mov
cmp
outsb
push
adc
cltd
shrl
test
cmp
fadds
cwtl
jne
movsl
lret
mov
mov
ja
in
lret
pop
cs
popa
inc
fs
xor
daa
sbb
sub
and
dec
lods
and
pop
lods
sarl
sbb
nop
push
pop
push
sub
insl
rcl
xchg
shrl
dec
pushf
mov
mov
pop
push
push
mov
clc
int3
insl
add
sub
hlt
lods
fsubrs
inc
fbld
inc
push
mov
into
sti
xchg
movsl
push
push
cwtl
lods
pop
cli
repnz
xchg
imul
rcrl
push
mov
pop
shl
fimull
dec
fadd
out
add
insb
mov
arpl
call
dec
movsb
add
push
pop
js
jbe
mov
xor
mov
in
dec
jnp
dec
mov
jge
stos
fst
stos
cwtl
add
repz
dec
icebp
sti
mov
push
mov
xchg
sbb
xlat
in
aas
sti
mov
dec
enter
lea
sti
jns
sarb
dec
push
dec
push
add
add
sbb
ja
arpl
xor
jbe
or
mov
and
lods
enter
mov
or
mov
fsubrl
pop
mov
add
and
lods
lds
sub
inc
sbb
je
pop
sbb
push
dec
sub
std
fstps
jecxz
int
push
xchg
gs
jle
cmc
in
sub
or
pop
loop
xor
mov
in
test
fs
icebp
test
pop
adc
jle
bound
shrb
mov
xchg
dec
shll
js
dec
ret
sahf
add
push
mov
mov
jns
out
sbb
andl
fcom
sbb
cmp
or
mov
mov
lds
lret
inc
movsb
test
inc
fnclex
xor
fnstcw
popf
adc
mov
sbbb
jno
sub
add
jl
rcrl
fisttpl
into
xchg
lret
lods
adc
pop
xor
push
xor
pop
cld
popf
jmp
mov
pop
addr16
in
jge
inc
pop
subl
xlat
int
xor
rcrl
bnd
cld
xchg
insl
shll
sub
sub
ret
sub
lds
shl
aam
jae
test
jg
int3
cmp
rcrl
imul
fisttpll
leave
fnstenv
and
mov
call
jg
dec
in
fsubs
shll
jb
cmp
je
mov
rclb
jb
cwtl
or
push
push
jmp
std
insb
mov
and
inc
jno
negl
lds
xchg
sub
sahf
pop
out
cmp
ss
sahf
mov
fidivrs
push
dec
sahf
addb
xchg
jnp
mov
jge
cld
mov
mov
ja
xchg
cwtl
pop
lods
or
testl
imul
repnz
sub
dec
int
test
mov
movzwl
xorl
xor
subl
add
mov
mov
incl
mov
inc
mov
movl
cmp
jne
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
call
jmp
mov
or
xor
add
mov
adcl
mov
and
xor
add
mov
movl
mov
xor
mov
movl
and
movl
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
mov
sbb
mov
and
mov
adc
xor
xor
add
mov
mov
mov
movl
je
movzwl
or
mov
or
mov
adcl
xor
movl
xor
sub
neg
sub
adc
xor
xor
or
sub
mov
mov
and
mov
subl
add
subl
imul
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jb
jmp
call
mov
dec
mov
jmp
mov
xorl
mov
sbbl
add
or
movzwl
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jge
jmp
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
adcl
xor
andl
mov
andl
mov
mov
sbbl
add
and
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
call
jmp
mov
mov
notl
lea
add
mov
movl
mov
mov
sub
movl
cmpl
je
cmpl
jge
jmp
push
push
push
call
xor
or
dec
mov
jmp
add
mov
mov
adcl
xor
adcl
add
jne
movl
jmp
mov
adc
sub
xor
or
or
mov
xor
mov
mov
sbbl
mov
subl
xor
xor
movl
sub
andl
sub
xor
movl
mov
mov
mov
jmp
mov
mov
xorl
xor
adcl
xor
sbbl
sub
or
sub
andl
xor
xor
inc
mov
cmpl
jbe
jmp
pushl
pushl
push
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
andl
xor
or
inc
mov
cmpl
jbe
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
or
jns
mov
test
jae
repnz
jp
adc
jp
rolb
add
ret
fs
fisttpl
jnp
and
jnp
jecxz
pop
cmp
dec
pusha
xor
cmp
pop
mov
je
dec
fidivs
pop
push
jno
mov
lock
ljmp
jno
aad
adc
cli
loop
fwait
push
test
inc
in
and
sub
mov
dec
imul
lea
addl
and
jmp
in
lock
sbb
call
pop
js
imul
scas
lods
stos
insl
and
fdiv
jnp
mov
insl
aaa
sbb
jnp
dec
lods
aad
sar
icebp
pop
jp
cmp
clc
stc
push
push
xor
xchg
sub
xchg
test
mov
int3
aad
push
rorl
and
and
pop
ljmp
add
orl
js
cmp
mov
pop
mov
jmp
sahf
adc
and
cmpsl
shl
and
lea
push
lea
ja
adc
jns
movsb
pusha
call
and
push
data16
xchg
dec
loope
push
xor
sub
iret
pop
mov
test
cmp
das
sub
std
das
lcall
mov
inc
aam
cmp
outsl
pop
lds
test
daa
push
pusha
sbb
lcall
cmc
jb
pop
sbb
or
mov
cmpsl
cld
sbb
cwtl
pop
rcrb
pop
test
lahf
mov
push
fwait
pop
jne
push
jbe
mov
in
rcl
jg
push
jns
and
and
inc
cli
inc
mov
pushaw
cmpsl
lock
add
push
mov
push
movsb
popf
stc
push
aas
mov
fnstenv
arpl
jo
cmp
jmp
push
inc
addb
xor
cmp
or
pop
add
cltd
jl
sbb
cmp
or
pop
push
inc
and
add
loopne
jno
mov
or
and
mov
add
ljmp
pop
test
ss
sub
fmuls
or
dec
jmp
movsb
repnz
ret
sbb
in
dec
xchg
outsl
std
xlat
jmp
clc
lahf
add
vpunpcklqdq
mov
inc
inc
xor
and
cmpsl
test
mov
stc
add
cmp
add
pusha
pop
add
mov
shl
hlt
into
sbb
das
pop
and
jmpw
pop
mov
rolb
into
imul
imull
push
sub
inc
or
jne
push
ja
inc
sub
add
jno
arpl
imul
ja
push
add
mov
add
fcomps
mov
and
aad
negl
out
ja
sbb
sub
hlt
imul
ret
insl
into
popf
mov
test
mov
jb
in
mov
bound
and
jmp
mov
xor
cmp
hlt
ljmp
sbb
mov
jle
cmc
xchg
pop
and
xor
repz
and
cli
adc
add
push
inc
push
and
fwait
jns
lods
aam
sbb
fucom
rcll
shl
aad
test
repz
sub
cltd
loop
mov
adc
mov
cmp
rclb
in
dec
lret
xchg
les
roll
in
inc
mov
sbb
or
pop
adc
ja
jno
ficomps
jge
jmp
cltd
ret
mov
aam
imul
mov
add
data16
lea
mov
pusha
jae
sub
xlat
xchg
ret
sbbb
mov
adc
in
and
cmpsb
std
or
les
push
dec
dec
icebp
xlat
loop
std
popa
sbb
pop
adc
stos
push
movsl
push
ljmp
adc
div
xchg
xor
or
xchg
test
pop
mov
aad
mov
test
push
push
inc
xchg
sahf
sahf
xchg
push
gs
mov
jmp
aam
fsts
pushf
stc
push
mov
and
mov
mov
xchg
call
pop
icebp
sub
sbb
aad
sub
push
dec
push
jp
jbe
sub
fistps
jae
dec
cmp
inc
or
dec
hlt
mov
in
xchg
or
call
stos
sub
push
mov
push
fs
pop
inc
xor
fld
jae
add
dec
popa
jbe
into
adc
adc
stc
lret
or
and
mov
rorb
test
test
pop
ja
pop
pop
out
out
push
pop
dec
sub
inc
inc
in
sub
dec
test
xchg
dec
adc
or
jmp
mov
lahf
push
enter
push
les
loope
xorl
addl
sub
pop
movsb
in
dec
mov
mov
roll
dec
mov
nop
in
mov
lds
dec
test
lret
es
or
cld
or
rcr
ja
xchg
mov
mov
xor
ds
or
cld
inc
aas
xchg
mov
mov
fwait
adc
shr
mov
xchg
shr
push
loop,pt
imul
push
or
loope
idivb
sbb
imul
sbb
push
int3
mov
pop
fsubrl
or
les
lea
or
sub
cmc
cmpsl
mov
adc
or
push
inc
pusha
xor
fwait
mov
xchg
xchg
cmp
pop
jmp
xor
testl
inc
push
fnsave
in
jle
lods
xor
push
popa
sbb
fs
mov
mov
test
idivb
inc
push
cld
fs
push
dec
shrd
sarl
int3
out
adc
in
out
fs
xlat
out
sub
fucom
fistpl
and
fcoml
andl
scas
xchg
lret
popf
movsb
decl
movsb
pop
jnp
and
jl
stos
pop
add
sub
push
cltd
adc
lret
mov
sub
sub
loop
mov
leave
xchg
out
inc
imul
sbb
lcall
push
xchg
loop
mov
mov
dec
push
pop
popa
xlat
jne
sbb
push
xchg
sbb
imul
push
das
jns
jne
dec
push
lds
fdivs
pop
sbb
fstl
mov
lcall
iret
mov
lahf
test
mov
jbe
movsb
in
mov
cwtl
leave
pop
jo
sub
shll
out
xor
push
cmp
push
inc
jae
not
ljmp
mov
data16
mov
sar
sti
int
xor
loope
xor
push
cmc
push
hlt
dec
in
jae
clc
and
and
mov
pop
cmp
scas
les
hlt
std
xchg
cmp
dec
mov
lret
jmp
in
sbb
add
and
mov
push
movsb
fdivrs
pushf
mov
lret
add
mov
cmp
jo
push
cmp
sub
ja
scas
mov
mov
rolb
scas
sub
js
jbe
jg
popl
popa
push
or
cs
arpl
jge
stos
lods
push
pop
das
add
arpl
aas
fnstenv
adc
and
repz
pop
cli
inc
pop
jl
std
iret
push
rol
ret
cs
imul
mov
xor
jmp
adc
dec
pop
sahf
jo
pop
lods
mov
mov
add
adc
lret
es
sub
push
aad
into
fisttps
ljmp
mov
arpl
ret
into
dec
and
mov
pushl
fsts
mov
fstpl
sbb
sar
popa
cs
imul
test
mov
xor
scas
jp
sub
mov
mov
xor
mov
pop
adc
cmpsl
mov
popl
dec
cmp
insb
mov
add
xor
inc
sti
lahf
dec
xchg
test
cmp
jae
push
call
int
je
lods
dec
lock
and
jge
sbb
orb
adc
fsts
cmp
rol
push
movsl
jmp
rcrl
lret
cmpsl
repnz
cmpb
jg
adc
mov
test
mov
es
std
push
sbb
pop
in
pop
ret
lcall
jp
divl
mov
lock
push
mov
test
mov
pop
lcall
xchg
stos
mov
push
mov
sbb
sbb
sbb
push
cmp
sbb
aam
cwtl
xor
xchg
adc
in
add
in
mov
dec
inc
les
xlat
cmp
out
repz
jp
cwtl
xor
add
ljmp
ficoms
fmulp
mov
or
addr16
pushf
cmp
icebp
ja
test
add
add
dec
imul
int
dec
push
movsb
jge
jno
add
rcll
leave
insb
jg
fld
xchg
push
cmc
and
jl
cmp
cmc
and
pushf
or
lret
or
loopne
mov
loop
cmp
cmc
push
js
jnp
pop
insl
mov
or
icebp
or
fwait
dec
cld
fs
dec
popa
test
sub
lret
dec
mov
loopne
inc
dec
pop
out
xor
clc
push
jmp
jbe
fistl
fs
cmp
stc
xchg
das
fcmovne
sbb
sbb
sbb
fdivs
xchg
cmp
mov
adc
dec
dec
mov
stc
call
bound
int
dec
jb
int3
in
push
les
xchg
xor
pop
jmp
pushf
and
xchg
and
out
int3
xor
aad
ret
xor
mov
in
insb
sub
push
fsubr
shlb
insb
outsb
jne
mov
cmpsb
and
pop
aaa
adc
cs
js
adc
pusha
repnz
lcall
mov
shlb
test
add
gs
mov
test
jo
fwait
and
and
mov
adc
jl
in
popa
js
inc
jns
lahf
pop
insl
jle
push
inc
jg
out
mov
mov
insb
lods
sub
fs
and
mov
mov
sbbb
sbb
or
loopne
pop
gs
mov
push
pop
faddl
popf
addb
dec
mov
js
pop
cltd
add
dec
jl
in
cmpsb
add
outsl
xor
xor
aad
pushf
add
and
mov
sahf
mov
clc
rclb
sti
adc
cmp
jle
mov
mov
fstps
adc
sub
xchg
jbe,pt
outsb
imul
cmp
mov
xor
xchg
adc
lods
and
mov
pop
imulb
xchg
lret
insl
lock
sti
bt
mov
or
call
xchg
outsl
mov
sarb
pop
pop
popa
dec
ficoms
pop
cmp
push
adc
xchg
shl
mov
xchg
es
add
mov
aaa
sti
outsb
ja
dec
sub
xchg
mov
and
or
out
lock
out
rdmsr
in
mov
lods
shlb
setae
cltd
or
pop
stos
insb
pop
test
fiadds
hlt
jg
inc
stos
pusha
das
and
loop
xchg
repnz
int3
ret
andl
dec
xchg
xchg
sarl
sti
sub
cmp
addb
sar
nop
jb
cmp
cmc
lcall
push
pop
inc
arpl
inc
scas
inc
movsb
dec
lcall
mov
jae
mov
out
test
loope
cmp
jns
inc
xchg
sbb
insl
fwait
test
gs
out
imul
fwait
push
push
ret
xorl
sub
fcom
lret
mov
movsl
mov
lcall
stc
enter
inc
jmp
inc
pop
arpl
jne
mov
dec
lock
cs
mov
aad
jl
dec
dec
mov
xlat
in
sahf
icebp
xchg
xor
ret
out
and
icebp
adc
mov
push
lea
ljmp
cmp
and
lods
test
xchg
ljmp
fsubrs
pop
pop
repnz
mov
jne
fcompl
pop
sbb
xchg
add
lcall
lds
dec
inc
lcall
lea
in
dec
push
jecxz
jl
dec
ffreep
fldenv
push
or
insb
sbb
pop
dec
test
ror
dec
mov
or
fistps
mov
or
data16
mov
push
cmp
xor
mov
pusha
mov
jle
nop
mov
inc
ljmp
out
out
outsb
xor
pop
mov
movsb
xor
adc
jg
test
sti
inc
xchg
push
sahf
xchg
xchg
adcw
adc
push
addr16
or
cli
lods
cmp
fwait
int
jne
int3
lock
out
or
shll
je
or
outsl
fimull
jo
add
in
nop
mov
fwait
and
xor
dec
cld
lods
and
sbbl
test
sub
inc
lahf
leave
lods
adc
mov
sbb
adc
or
push
cmp
idivl
mov
out
dec
scas
adc
and
lea
jl
cltd
and
jmp
fists
adc
jb
jle
notl
push
jnp
div
mov
jb
imul
sub
rcr
aad
inc
scas
mov
push
out
filds
fwait
dec
inc
scas
loopne
lods
cmp
xchg
mov
adc
out
pop
rorl
out
pop
mulb
fidivrs
mov
pushf
sahf
xchg
pop
sahf
enter
xor
pop
daa
insb
dec
jmp
sbbl
sub
sbb
or
daa
sbb
cli
mov
xor
je
es
pop
mov
jo
mov
push
es
sarl
sbbb
sahf
popa
movsl
ljmp
loop
outsl
mov
ss
leave
jmp
jb
add
adc
aam
xor
and
mov
es
cltd
push
out
js
xor
cmpsl
leave
pop
shll
ret
push
inc
cmpsl
jae
and
pop
dec
out
sti
rcll
aad
mov
adc
pop
sbb
nop
sub
stos
dec
jne
iret
add
mov
add
mov
xor
inc
sub
xchg
pop
clc
aas
cmpsl
daa
jb
frstor
shlw
lods
xor
sub
sub
mov
fwait
icebp
in
cli
frstor
adc
cmc
iret
jmp
and
cli
pop
mov
imul
add
lret
or
inc
xchg
hlt
repnz
push
lea
mov
fstpt
mov
sub
mov
out
std
stos
jle
push
shlb
xchg
push
jecxz
xchg
jno
mov
ja
into
xor
les
sbb
into
mov
rorl
cmp
adc
loope
idivl
add
cmc
mov
adc
sbb
xchg
jmp
push
xchg
mov
adcb
cmp
ljmp
ret
push
call
std
sub
pop
lret
outsl
add
sbb
fs
xor
inc
test
cmpsb
mov
mull
notl
or
mov
push
pop
jae
imul
cli
and
adc
outsl
inc
repz
repnz
jb
test
cmpl
shlb
mov
xchg
cmc
shl
pop
insb
imul
adc
mov
icebp
dec
clc
jp
jl
iret
or
pusha
or
jb
lea
fistps
mov
xchg
out
adc
scas
push
mov
aas
or
lods
push
hlt
inc
jmp
mov
xlat
fcoml
sbb
lret
popfw
mov
inc
adc
pop
or
scas
lock
mov
jp
push
inc
addb
or
test
adc
push
out
jl
adc
pop
jnp
mov
lcall
jo
mov
stos
or
pop
inc
fstl
mov
sbb
stos
pop
mov
fmull
adc
sub
stos
mov
jmp
js
xchg
push
fcmove
or
notl
push
push
inc
xchg
pop
js
test
aaa
pop
mov
in
pop
ljmp
cmp
mov
ja
lds
scas
mov
jle
std
outsb
lret
addb
lret
mov
or
pushf
fsts
push
in
inc
jb
das
fmuls
dec
lock
fisttpll
mov
icebp
sbb
shrl
out
aad
sahf
out
mov
lret
stos
lret
repnz
jne
lcall
imul
js
ret
push
sbb
pusha
cli
in
and
jp
inc
sub
pop
push
add
mov
ret
fsin
scas
mov
pop
iret
xor
orl
dec
push
loopne
pop
and
imul
cmovg
and
dec
out
pop
jg
sbb
pusha
push
outsb
scas
mov
inc
lods
xlat
mov
and
aaa
sti
and
mov
and
ds
rcrl
jno
push
dec
icebp
and
sbb
lahf
mov
xchg
loope
xor
xchg
sub
inc
push
rol
and
insb
data16
or
gs
rclb
out
leave
or
das
cmp
in
xchg
push
xsaves
mov
leave
stc
pop
or
std
adc
jecxz
popa
jo
xchg
jo
daa
pop
fdivrs
jl
push
and
ja
xor
push
mov
sbb
ljmp
aaa
pop
cmp
stos
or
mov
sub
cld
cmc
xchg
xchg
nop
out
or
ret
loopne
or
or
or
lea
jne
mov
lcall
aad
cmpsb
mov
lret
inc
add
std
movl
outsb
mov
fiadds
jmp
add
fcomps
or
jnp
xchg
es
push
mov
lret
and
xor
psrlw
scas
loopne
and
jno
sbbl
jp
std
or
adc
enter
leave
icebp
xchg
fdivp
sbb
enter
jg
loopne
in
shll
sbb
jge
cli
out
mov
mov
mov
arpl
sbb
mov
xor
cmp
mov
inc
popf
leave
mov
push
repnz
xor
inc
xchg
xchg
sahf
ja
ret
inc
hlt
and
clc
insb
test
out
nop
dec
sbb
xchg
jne
sbb
and
arpl
dec
testb
clc
adc
mov
mov
cmp
ds
hlt
or
xor
das
fcomip
dec
orb
xchg
scas
xlat
inc
cld
xor
fwait
addl
ficomps
test
in
fidivrs
aam
mov
jbe
lock
cmp
jmp
mov
stos
test
xchg
popa
sub
xor
pop
stc
leave
int
xchg
xchg
movsl
inc
mov
insb
pop
cmp
in
enter
fwait
xchg
fldt
mov
sub
mov
push
jmp
or
hlt
pop
adc
mov
pop
push
mov
sub
sbb
and
sub
movsb
push
pop
adc
testb
xor
and
adc
or
daa
push
fimuls
fwait
mov
ret
jo
xchg
push
stc
js
mov
clts
in
sbb
push
adc
fst
lds
lock
sub
xor
pop
out
sbb
pop
mov
fstps
test
mov
rcr
jle
push
xchg
jp
orb
mov
aam
mov
sub
cli
fstl
adc
jnp
int3
pop
scas
cmp
arpl
jbe
jecxz
test
pop
jbe
mov
cli
push
jne
xchg
jne
call
sub
leave
cwtl
fisubrl
jbe
call
data16
push
xchg
xchg
cs
cmpsb
push
sbb
jae
dec
pop
jns
xor
cli
aam
test
pop
jo
sub
ds
mov
rclb
subl
in
out
cmc
in
push
hlt
out
xor
out
jle
adc
rcrb
mov
rorl
leave
and
cmp
icebp
jle
adc
int
movsl
pop
pop
into
dec
test
testb
cwtl
pop
jnp
xchg
sbbb
dec
or
loopne
xchg
lods
fistpll
andb
into
movl
xor
fstpl
jns
daa
jb
fists
adc
xchg
push
mov
pop
test
cs
mov
out
pop
dec
shlb
push
ja
repnz
sti
lret
lock
sbb
and
and
mul
push
jns
inc
jno
add
add
pop
in
adc
das
mov
jp
adc
sbb
add
mov
sbb
push
shlb
cli
aas
loopne
insb
out
test
lock
sbb
mov
repnz
cld
and
dec
xchg
das
and
mov
lcall
mov
sub
sbb
js
fisubl
lcall
xor
pop
adc
cli
xchg
aam
pop
jp
mov
fwait
daa
pushf
js
lea
mov
aad
out
dec
jo
add
or
mov
cmc
cltd
enter
out
cwtl
sub
add
int
mov
aas
pop
cwtl
adc
mov
pop
je
aad
frstor
enter
js
inc
mov
shr
and
jno
pushf
fnstcw
imul
negb
movsb
iret
xchg
jne
mov
daa
or
adc
loop
adc
push
dec
loop
sbbb
xchg
pop
pop
enter
adc
fisubs
les
xor
ja
mov
and
mov
aas
mov
xor
dec
ljmp
pusha
nop
sbb
and
or
cld
and
dec
or
xor
push
push
and
inc
cmp
test
mov
movb
insl
pop
fs
loope
ret
push
ret
sbb
fwait
cld
jnp
cmpsb
data16
push
out
fwait
jnp
xchg
mov
push
ljmp
jno
out
cmc
movsl
inc
popa
dec
inc
lret
mov
sbb
jge
out
push
push
xchg
cmc
cmp
std
ret
cmpsl
pop
das
gs
pop
mov
jnp
jecxz
dec
lahf
add
mov
mov
fiaddl
into
adc
inc
fdivrs
dec
jecxz
jno
insb
fnstcw
or
mov
jae
inc
repz
out
js
hlt
pop
lds
mov
add
adc
or
je
pop
int
jns
push
jnp
cmpl
aas
daa
outsl
and
andl
lds
mov
add
bound
jo
nop
cmc
pop
and
dec
inc
inc
fisubrs
xchg
fs
shlb
ja
jp
add
mov
mov
shl
mov
enter
push
jge
ljmp
test
shl
xchg
test
fmull
loop
pop
sub
dec
hlt
adc
repnz
js
dec
addr16
insb
movsb
mov
or
ficoml
mov
push
ljmp
test
out
xchg
je
sbb
push
adc
adc
mov
and
mov
push
in
scas
dec
mov
call
test
cmpb
sub
out
stc
dec
sbb
jne
fbstp
adc
in
test
movsl
stos
cmp
lcall
push
pop
or
iret
xor
outsb
jl
packuswb
xchg
sbb
or
and
mov
pop
mov
xchg
enter
subl
adc
movb
mov
push
inc
test
jge
test
negw
ljmp
mov
sub
mov
pop
push
sbb
or
int3
test
sti
loop
je
imul
mov
push
cmpsb
xor
call
mov
or
bound
pop
xlat
or
jl
push
repnz
out
cmp
outsb
jnp
roll
add
and
shll
add
sbb
js
mov
jo
clc
rol
inc
adc
push
jl
jae
mov
in
mov
or
sub
dec
mov
xchg
mov
jae
stc
movsl
loop
pop
ret
push
inc
stc
popa
outsl
and
dec
fists
test
sahf
push
enter
rcrb
popl
and
push
ret
pop
sub
lock
fmuls
push
popf
std
push
xlat
ljmp
test
and
inc
or
jmp
jge
lcall
adc
xchg
out
aaa
xor
shll
ret
cmp
sub
adc
inc
sbb
cmp
stos
adc
outsl
xchg
imul
xor
aaa
mov
aam
andb
lds
or
cli
mov
fiaddl
xchg
es
and
adc
push
int
clc
lret
jg
sahf
in
sbb
and
inc
xor
xchg
outsl
js
mov
xor
divl
adcl
mov
xor
mov
cmp
pop
xor
fsub
jae
and
je
jb
or
icebp
sbb
adc
jnp
cld
mov
add
xor
stc
cltd
sub
fdivrs
and
xor
sbb
aas
adc
idiv
xor
sahf
popa
or
loope
cmpl
and
xor
push
xchg
sub
mov
dec
lock
popf
test
and
jnp
xor
repz
adc
test
add
sarl
mov
cmp
je
add
and
push
and
add
push
nop
mov
inc
sarb
jns
ss
xchg
adc
push
cmp
cmp
inc
push
daa
aas
mov
or
cmpsb
lods
push
jno
inc
pusha
xor
sub
cmpsl
and
pop
test
mov
or
jecxz
test
cmpps
aam
jno
int3
cmp
mov
cmc
push
shr
insl
or
push
pop
mov
sub
xchg
adc
fidivrl
xchg
pop
loopne
lret
and
sarb
cmpsl
leave
cmp
inc
lahf
sbb
jne
mov
jns
push
fldl
jge
lahf
adc
cltd
ror
push
push
jns
sbb
sub
mov
adc
repnz
push
pop
iret
shl
aas
mov
add
jns
add
sub
lret
mov
or
cwtl
push
add
sub
pushf
shr
test
ret
add
int
ds
add
inc
add
mov
pushf
ret
clc
je
push
mov
xchg
ss
mov
push
cmp
testb
mov
push
cwtl
xchg
in
push
ja
or
mov
mov
pop
push
loopne
jmp
xor
adc
imul
lods
iret
mov
rcr
pop
and
sub
mov
les
mov
mov
or
cmc
cmp
loopne
xchg
iret
lea
sbb
add
pop
and
in
adc
jnp
add
stos
xor
jmp
int3
xor
lods
addr16
adc
aad
add
mov
push
dec
jns
or
mov
pop
cmp
cmp
lock
cmp
movsl
cld
adc
inc
pop
sub
push
call
bound
scas
addr16
addb
adc
mov
daa
adc
dec
push
push
xchg
loopne,pt
cmpl
roll
enter
repz
mov
sbb
rcr
int
push
push
jg
out
add
cmpl
aad
in
sarb
std
xor
popa
jae
outsl
stos
add
cmp
out
sub
sbb
add
int
movsl
insl
mov
add
lret
jecxz
jle
mov
daa
xchg
sbb
inc
pop
push
movsb
ja
push
cmp
les
iret
mov
xor
adc
mov
into
addr16
repnz
or
jg
xchg
popa
cmc
out
in
scas
xchg
pop
fs
jp
cld
pop
shrb
cwtl
fdivl
dec
loope
fisttpl
pop
in
sub
mov
inc
push
mov
mov
rcl
fdivrp
add
push
js
jp
lock
imul
mov
out
xor
outsl
sbb
mov
push
test
cmpsl
rcll
int
outsb
mov
or
and
pop
cmpsl
andl
loope
outsb
arpl
jno
mov
jle
repnz
push
lock
lods
hlt
iret
fstps
sub
dec
or
xchg
cmp
stos
xor
ret
mov
mov
cmp
mov
xchg
ffree
sub
sub
test
and
fdiv
nop
leave
repnz
les
movsb
mov
mov
push
and
dec
dec
cmp
addr16
int
cmpsb
lret
sub
and
dec
iret
inc
mulps
hlt
mov
fstpt
pop
and
pop
push
mov
fs
add
lcall
jno
jno
subl
inc
out
or
xchg
ljmp
sahf
call
in
mov
mov
cmp
mov
sti
dec
sarl
mov
cs
pop
loop
sub
mov
mov
jne
mov
mov
mov
cmc
loop
lock
bound
cltd
xchg
xchg
ds
lods
outsb
lea
dec
pop
mov
xchg
jg
movsl
sub
jo
enter
push
sub
push
jb
in
cmp
mov
in
call
das
enter
out
rclb
lds
dec
cmp
scas
cmpsl
sti
negb
arpl
xlat
daa
fidivrs
pop
enter
mov
push
outsb
sahf
jmp
popf
mov
mov
pop
es
fsts
cs
stos
sub
mov
jno
mov
ss
fld
pop
sub
in
jne
push
mov
aam
lcall
clc
push
or
add
fs
inc
pop
mov
inc
rorl
push
or
mov
xor
xor
outsb
dec
pop
insl
cwtl
mov
add
mov
push
xchg
sbb
clc
lock
icebp
loopne
mov
cmpb
add
cmp
mov
stos
sbb
inc
or
insl
adc
sar
movsb
mov
cs
arpl
jno,pn
inc
insb
test
ljmp
stc
imul
mov
loope
cmp
xor
mov
xor
popf
lods
dec
or
jecxz
scas
inc
gs
push
mov
aas
jo
mov
ret
jno
aaa
or
or
add
xchg
js
jge
out
mov
mov
pop
idivl
lcall
sub
dec
fistl
movsl
xchg
push
fcoml
mov
enter
pop
enter
mov
movsb
mov
and
or
test
ret
push
add
scas
rorl
or
pushf
clc
add
rorl
or
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
jmp
lods
xor
out
fwait
fwait
sub
fxch
incb
jp
xchg
bnd
lret
or
cli
out
jnp
insl
or
pop
xlat
loop
pop
lods
int
fsts
into
push
iret
in
mov
or
push
ljmp
cld
mov
or
and
ss
pop
xchg
mov
mov
jp
imul
xchg
xchg
or
gs
xor
loopne
frstor
fimuls
mov
test
pop
push
das
fcoms
push
jmp
sti
jp
nopl
cltd
andl
js
sbb
xor
cmpl
cld
std
sti
mov
loope
outsb
pop
hlt
lock
push
jp
sub
cmp
stos
mov
addr16
and
jge
sub
sbb
fistl
cltd
call
pop
or
push
lods
lcall
rcrl
repnz
or
fwait
cltd
jp
and
fistpll
jmp
loopne
push
mov
jns
popf
xchg
jns
sti
and
xor
rorb
mov
cmpsl
add
sbb
in
push
cs
data16
nop
jbe
call
popfw
aas
mov
js
sbb
mov
loop
or
mov
loope
or
lret
lock
pop
inc
adc
sub
out
mov
int3
imul
sbb
cmpb
arpl
es
xchg
outsb
fs
dec
jge
repnz
repz
aam
mov
dec
dec
or
imul
das
scas
fnstcw
loopne
stc
mov
xchg
ret
inc
mov
not
jbe
push
dec
inc
out
dec
subb
cmp
inc
out
mov
cmp
scas
es
loop
mov
loope
fisubrs
ret
sbb
inc
testl
jbe
jne
add
lods
mov
xor
push
mov
pop
xor
push
inc
pop
xor
lret
int3
dec
subl
imul
jg
test
ret
pushf
test
loop
lock
int3
sar
adc
or
ja
sarb
xchg
mov
lds
divb
aaa
mov
test
push
cmp
pop
int
jmp
mov
sub
movsb
push
push
imul
jns
sbb
cmpsl
push
punpckhwd
stc
jl
cmp
imul
or
add
pop
mov
sbb
pop
lcall
stc
ss
and
gs
push
jbe
jo
lods
iret
rep
subl
adc
inc
popf
call
enter
inc
sbb
push
int
jmp
mov
aam
xor
pop
mov
adc
dec
into
jbe
outsb
xchg
jecxz
pop
jge
push
inc
imul
hlt
aas
and
lods
mov
repz
xchg
sub
lods
fdivr
es
les
or
add
cs
rorl
movsl
addr16
pop
mov
or
push
add
xchg
rcrb
aam
leave
mov
movsl
and
hlt
fwait
add
rcrl
jmp
dec
dec
popf
aaa
scas
sbb
or
filds
push
inc
repnz
jp
mov
call
lds
rclb
mov
adc
sub
xchg
das
invlpg
sbb
sub
xchg
stos
es
push
dec
movb
xor
sti
mov
or
sarl
xchg
xor
xchg
or
lea
hlt
fbld
fldt
bound
fwait
lds
cld
push
mov
xor
pushf
xor
cltd
mov
push
mov
jns
hlt
fistpll
gs
cltd
hlt
adc
pop
cltd
jns
xor
dec
mov
sbb
dec
daa
pop
add
hlt
mov
or
and
lock
xor
xor
clc
xchg
ret
repz
je
outsb
mov
movsb
cmc
xlat
cmpsb
sbb
ret
pop
adc
inc
out
adc
scas
arpl
inc
dec
clc
je
loop
lods
sub
lcall
dec
mov
add
push
jbe
jns
ret
lcall
outsb
inc
lahf
cmpsb
pop
inc
push
aad
jecxz
adc
mov
loopne
rorb
gs
and
in
push
jno
mov
mul
mov
sbb
ds
add
movsl
aaa
adc
or
les
cmp
mov
cld
btcl
sahf
mov
mov
mov
rcl
je
mov
pop
xor
push
mov
and
sub
lret
aad
fisubl
nop
pop
adc
sbbb
xchg
sbbl
loopne
cmp
leave
adc
sub
mov
cmpsl
cmc
push
push
sbb
push
lret
lcall
ja
mov
mov
adc
mov
cmp
or
iret
add
add
ret
mov
repz
aad
inc
xchg
das
xlat
mov
inc
xor
ficomps
xchg
sub
cmp
lock
adc
out
mov
mov
mov
andl
pop
and
in
add
pop
mov
ret
mov
xchg
cmc
popa
jbe
into
and
int3
sbb
pop
cs
pop
inc
xchg
cltd
subps
pop
xor
adc
adc
scas
sbb
jns
shrb
xor
in
dec
bound
pop
mov
sub
popa
inc
jle
add
cmp
inc
loope
cs
dec
sti
bound
pop
xchg
xchg
cmpsl
cmpsb
adc
lahf
or
mov
push
subb
sub
xchg
xchg
pop
mov
pushf
mov
mov
js
dec
jl
aam
mov
mov
mov
sbb
insb
es
push
mov
enter
cmp
in
fs
and
incl
icebp
sbb
xchg
test
lcall
adc
nop
test
lret
mov
push
lret
cmp
jae
inc
inc
incl
lahf
aas
push
les
lret
add
push
enter
and
push
xchg
sbb
je
xlat
movsl
movsb
xchg
adc
call
adc
in
or
lock
add
iret
out
aam
mov
mov
push
inc
imul
imul
pop
fwait
xor
movsb
inc
lcall
in
push
rcrl
and
xor
fiadds
pop
mov
xchg
sarb
push
mov
mov
xlat
and
mov
loop
mov
push
repz
inc
insl
cld
and
mov
bound
cmp
push
or
scas
pushf
mov
jne
and
and
push
sub
fcomi
stos
mov
mov
or
add
mov
cmpsb
jmp
dec
xlat
fsubs
pop
icebp
out
cmpsl
mov
lock
fistpll
push
jl
ss
xor
test
lcall
idivl
arpl
bound
loope
mov
jecxz
cmpsl
pop
scas
in
insb
sbb
mov
dec
xabort
fisttps
inc
mov
nop
loop
push
and
stos
push
clc
dec
stc
je
xor
add
mov
aam
inc
cmpsb
xchg
xlat
push
sub
pop
icebp
add
and
sbb
test
fwait
orb
fisttpl
inc
mov
push
sub
xor
sahf
push
lods
ds
in
push
fldcw
cmp
stc
fwait
and
cmp
cltd
sbb
cwtl
icebp
inc
insl
test
nop
outsl
sbb
shrl
push
testl
and
shll
inc
sbb
and
stos
sahf
xchg
mov
lcall
xchg
pop
fsubs
in
pop
out
push
call
jmp
lcall
ja
pop
loop
xchg
push
or
call
sub
jecxz
mov
out
test
jbe
mov
insb
jno
dec
push
push
cmpsb
nop
stos
cltd
push
and
icebp
out
addb
sbb
pop
jl
pop
pop
dec
popf
aaa
test
mov
adc
arpl
leave
movsb
sti
mov
cmpsb
cwtl
mov
cmpsl
sub
jo
mull
and
jb
or
pop
pop
xor
in
push
or
dec
push
add
sub
xor
sti
addb
rcrl
jnp
js
mov
jo
repnz
or
std
int
popa
or
mov
jne
sahf
inc
add
xchg
cld
dec
dec
pop
mov
add
aas
jle
dec
cltd
outsl
add
divl
pop
pop
adc
pushf
mov
mov
out
xor
add
mov
jae
out
jmp
je
cmp
mov
push
packuswb
push
popa
out
sahf
incb
movsb
and
mov
mov
scas
jmp
mov
dec
push
ffreep
sbb
sub
cli
jmp
addr16
int
xchg
repnz
shl
das
push
pop
scas
sub
add
sarl
stos
xchg
lcall
adc
dec
daa
xor
insb
and
sbb
ret
jae
jecxz
xchg
out
xor
xchg
in
aam
pop
xor
pusha
lods
pushf
sbb
test
repz
popf
sub
out
sbb
push
sarb
mov
cmp
cmp
fs
jge
imul
cmp
iret
xor
imul
pop
dec
fwait
dec
or
sub
ficompl
sbb
inc
jns
faddp
sbb
lcall
inc
jne
adc
dec
clc
mov
ret
dec
stos
sahf
pop
and
lds
rcrl
addl
mov
fildll
out
mov
imul
xchg
pop
lahf
fildll
addr16
inc
add
and
leave
loope
out
fwait
ret
movsb
sahf
cmp
inc
jle
mov
mov
pop
mov
jo
sub
sbb
ds
inc
int
scas
push
xor
stc
jo
jne
mov
xchg
ds
jns
ds
add
sbb
xor
ljmp
or
mov
movsl
inc
pop
fnstsw
jg
add
hlt
cmp
ret
dec
stc
cs
call
loopne
test
sub
lcall
addr16
pop
inc
add
sbb
repz
test
das
rclb
adcl
inc
jle
out
push
insl
sub
cmc
xor
xchg
or
decb
mov
pop
stc
test
xchg
cmpsb
nop
mov
sub
scas
mov
popfw
stos
int3
pop
in
push
mov
flds
jecxz
test
cmp
inc
icebp
pushw
rcr
mov
enter
ret
cmpsl
lds
mov
xchg
loopne
jle
pop
jns
bound
and
insl
imul
inc
popf
push
dec
xor
out
mov
mov
pop
int3
jbe
nop
sub
jb
pop
and
ljmp
mov
mov
subl
addr16
mov
mov
nop
stc
lea
and
cmp
and
mov
fists
inc
mov
lcall
faddl
jp
enter
cmp
cmovg
dec
pusha
jb
jecxz
jp
jp
in
cmp
sub
inc
dec
addr16
sub
mov
push
jb
cmc
notb
orl
cltd
sbb
out
sbb
push
sti
sbb
adc
in
push
cmp
mov
push
mov
andb
sub
push
out
mov
call
insl
push
stc
or
clc
insl
and
jp
mov
push
push
mov
ret
jg
leave
in
fbld
mov
or
cmc
sub
ror
sbb
leave
sbb
jo
lcall
loope
repz
xchg
subb
inc
sbb
dec
popa
cmp
xchg
sub
mov
in
and
add
add
pop
ljmp
pusha
out
je
add
loope
pop
data16
daa
andl
mov
mov
daa
add
das
popa
sub
cmpsl
divb
adc
push
fnsave
dec
or
push
mov
mov
stos
xor
hlt
in
pop
into
xchg
jp
enter
js
pop
je
and
add
rorl
out
push
mov
mov
in
test
push
mov
add
pop
jne
mov
push
mov
xchg
xchg
imul
pop
cs
pop
scas
lock
pminsw
jge
sti
mov
adc
mov
jbe,pt
dec
or
data16
stos
addb
push
pop
rcr
mov
xor
dec
cli
sbb
shlb
mov
add
les
in
xchg
cmp
lods
mov
hlt
repnz
call
xor
xchg
adc
xchg
adc
mov
outsb
fdiv
out
test
xchg
mov
pop
mov
mov
cmp
pop
inc
shl
xchg
mov
or
mov
sub
enter
xchg
fistl
imul
xchg
in
adc
rolb
iret
add
xor
jmp
pop
in
roll
mov
es
cmp
push
sub
add
stos
push
or
inc
xor
lcall
sbb
inc
push
shrb
push
fdivrs
xor
fmuls
push
inc
fiaddl
addr16
stc
jle
cli
insl
sub
mov
mov
stc
sbbb
clc
cmp
add
mov
push
js
imul
fs
lret
stc
testb
cmp
ss
fs
lea
leave
push
sub
sarl
mov
fisttps
nop
and
jle
jb
push
out
inc
and
nop
mov
insl
imul
sbb
or
insl
xchg
inc
push
mov
jnp
add
xor
cwtl
enter
xchg
mov
or
pusha
fdivr
mov
adc
data16
inc
jmp
cwtl
xchg
sub
repz
pop
cwtl
adc
rep
fcos
inc
aad
adc
incb
test
cs
std
push
adc
dec
leave
adc
cmpsb
xor
dec
imul
adc
mov
pop
pop
mov
pop
scas
js
cwtl
pop
cld
mov
pop
jge
or
pop
push
stos
les
cli
xlat
xchg
pop
sahf
fwait
movsl
dec
dec
sbb
mov
and
jl
dec
aad
jl
mov
add
enter
dec
faddl
push
jnp
sbb
add
push
jecxz
mov
sub
jbe
mov
aas
jns
push
shr
cld
mov
ficoms
fs
movsl
nop
mov
cmp
pop
leave
aas
int3
inc
pop
mov
js
inc
popa
and
fistps
inc
xor
imul
mov
xchg
adc
js
dec
mov
jmp
xchg
sub
xor
pop
dec
std
push
xchg
lods
xor
jl
dec
cmp
popa
cld
mov
sbb
sbb
ja
push
pop
enter
lods
mov
xor
jge
sbb
out
pop
xor
sub
push
mov
mov
lods
lcall
subb
jno
out
push
pop
fwait
outsl
inc
stc
inc
jae
jb
push
fs
or
mov
aas
stc
inc
mov
stos
jmp
daa
dec
shlb
sti
add
je
mov
add
mov
xchg
std
ds
pop
inc
sub
iret
pop
ret
jno
mov
mov
xlat
lret
mov
xchg
stos
push
aam
mov
aam
scas
xchg
mov
outsl
fisubrl
iret
stos
dec
jbe
xor
outsb
mov
push
dec
ror
sub
inc
cmpsl
mov
push
and
mov
stos
movsb
lahf
add
das
sub
ret
lea
je
pusha
fsubl
test
jns
jg
popl
imulb
leave
or
movsl
in
add
repz
adc
jne
dec
lret
ja
push
addl
jecxz
inc
sbb
sbb
pop
shll
loopne
fstpl
test
js
addr16
mov
sub
push
hlt
sbb
xchg
xchg
xor
cmp
sbb
les
out
cmp
inc
ljmp
mov
jnp
fs
push
jno
mov
lods
mov
xchg
push
mov
andl
cli
mov
rclb
adc
loopne
inc
sub
lcall
je
hlt
push
imul
test
jne
cmp
outsb
fstps
sub
lahf
in
movsl
subl
push
fistps
shll
push
dec
mov
addr16
sub
pop
repz
gs
addb
cmpl
stos
idivb
mov
ljmp
fs
xor
mov
and
jg
dec
cmp
adc
lods
mov
or
pop
enter
test
shlb
aad
xchg
pop
sub
in
push
repnz
enter
rcrl
mov
clc
mov
movsb
lfs
push
pop
push
xchg
push
pop
inc
cwtl
repz
cs
jp
cmp
xor
outsb
fs
inc
inc
test
mov
pop
ret
in
orb
aas
mov
mov
notb
push
jae
jo
sub
pop
and
dec
outsl
push
pop
lods
fcmovu
fcomi
add
and
jecxz
mov
and
test
outsb
push
cmpsl
addr16
sbb
add
leave
lcall
loope
jp
jge
xchg
fs
mov
fsubr
lahf
psrlw
mov
or
fwait
pop
cld
enter
nop
cld
rsm
sahf
pop
inc
mov
loope
mov
xchg
pusha
or
out
mov
pop
jp
mov
out
imul
mov
filds
std
mov
mov
lods
sbb
cld
cmp
adc
cmc
jne
daa
mov
mov
aad
fcomi
negb
sub
and
and
xchg
jns
mov
adc
sbb
adc
fmul
rorb
dec
pop
push
pusha
mov
sbb
aas
jb
adc
imul
das
pop
sti
cmpsb
mov
sahf
mov
lods
adc
addps
insl
jae
pop
outsl
call
lods
pop
xchg
mov
and
or
ss
xor
lcall
call
adc
cld
sub
mov
jl
mov
stos
push
aas
int3
stc
cmp
fsts
sub
outsl
jecxz
mov
jle
int
sbb
pusha
jnp
in
mov
andb
or
in
sti
dec
jle
xchg
sbb
jno
add
jle
stc
call
mov
dec
mov
sbb
and
sub
out
cmp
ret
lds
sbb
cmp
jb
int
sbb
mov
add
cli
cmc
mov
push
dec
mov
sahf
fisttps
ret
aas
std
mov
in
add
add
test
dec
pop
repz
loope
push
ljmp
insl
jb
mov
push
lcall
adc
mov
adc
iret
jo
repz
ret
fs
dec
test
adc
add
in
mov
inc
mov
pop
sahf
mov
cmc
movsb
daa
divl
xorb
cmp
sub
mov
shll
add
xchg
jle
xchg
push
pop
add
push
add
cmpsb
sarb
add
pop
jae
xchg
push
out
fists
shlb
push
repnz
jmp
xchg
pusha
add
mov
or
mov
mov
inc
inc
dec
call
movsl
sub
inc
cmp
mov
push
dec
leave
jnp
lods
sbb
pop
lret
in
adc
lret
sti
xlat
mov
xlat
xor
sub
lea
pop
dec
push
sub
or
pop
xchg
jo
cmp
orl
hlt
imul
pop
push
xchg
in
mov
adc
add
mov
ja
ljmp
in
imul
add
mov
iret
into
pop
adc
sbbl
dec
neg
inc
push
pushl
in
xchg
cs
sbb
mov
daa
loop
push
adc
sbb
inc
mov
xchg
in
rorb
adc
xchg
sbb
imul
pop
fsubrs
push
loope
push
fistps
stos
sub
or
fptan
or
mov
outsl
cmp
das
xlat
fadds
rcrb
js
add
clc
mov
xor
sahf
dec
out
lret
sub
push
inc
cli
xchg
xor
push
add
dec
push
out
imul
cmp
inc
sbb
mov
mov
lahf
cmpsb
pop
les
mov
cmp
mov
sbb
mov
sub
sti
mov
test
mov
inc
jno
aaa
adc
inc
mov
mov
imul
negb
mov
xor
sub
sub
add
push
push
push
add
ret
push
lods
jbe
pop
or
cmp
inc
cmp
aaa
push
and
dec
lret
xor
rolb
push
dec
cltd
mov
test
lds
loopne
scas
int3
mov
mov
mov
jbe
xchg
pop
dec
addr16
sbb
inc
and
in
out
cmp
in
dec
jmp
popa
test
xchg
lcall
popa
cmp
enter
orl
jg
aam
aaa
and
xor
insl
ljmp
cltd
ljmp
cmpsl
mov
iret
cs
mov
sub
sbb
repz
scas
fiaddl
stos
or
insl
cs
into
dec
gs
cmp
mov
pop
scas
lods
mov
fwait
ret
sub
jae
xor
mov
leave
vsqrtpd
push
notb
mov
out
cmp
inc
lret
ficompl
push
rcr
and
jbe
repz
cwtl
adc
loopne
mov
jbe,pt
sub
adc
push
lds
jl
aad
sub
std
xorb
mov
lcall
jg
packsswb
cmpsl
mov
dec
bound
and
xchg
hlt
push
push
push
jnp
fucomi
push
xchg
int
mov
push
imull
mov
mov
mov
cmp
mov
imul
pop
push
mov
jb
xchg
in
push
iret
xor
xchg
lret
push
pop
ret
fstps
in
inc
insb
push
sahf
and
sub
into
push
loope
sbb
jnp
inc
dec
orl
or
xchg
inc
lret
jl
adc
sbb
aam
shrl
pop
inc
xchg
push
mov
imul
lods
mov
ds
mov
sbb
jmp
mov
xchg
lods
adc
lock
lock
sub
into
mov
js
pop
sbb
shll
xchg
hlt
paddw
mov
cmp
cli
pop
lahf
outsb
lahf
dec
stos
std
pop
jno
dec
fmul
xlat
push
jmp
lock
mov
push
out
cltd
pop
pop
sahf
or
imul
add
inc
sbb
sbb
push
and
xchg
enter
pop
fnsave
in
clc
sbb
ljmp
and
jl
jecxz
or
aas
xor
pop
idivl
lds
repnz
div
cli
sbb
lods
mov
pop
pusha
xlat
popa
sub
push
iret
dec
aas
dec
call
xchg
xchg
loope
sub
iret
xor
lds
jnp
ret
cltd
fimull
jl
adc
mov
sub
inc
pop
call
lcall
rorb
shlb
mov
inc
sahf
add
push
rorb
neg
mov
outsb
aas
push
sti
cmp
jb
lcall
add
jmp
ss
sub
add
xchg
adc
popf
aad
add
in
inc
dec
in
sar
mov
repz
or
mov
nop
push
cmp
add
cmp
pop
mov
insb
nop
loopne
shlb
sarl
adc
push
std
and
fs
fwait
xchg
add
push
popf
xlat
jmp
mov
lds
out
mov
pusha
pop
nop
call
pop
out
mov
jns
xor
imull
sarb
insl
pop
cmpsb
iret
mov
popf
dec
pop
ja
ret
cld
rcrl
addl
jne
mov
mov
mov
out
and
jg
stos
lcall
outsl
in
gs
enter
aam
lds
push
sbb
mov
add
or
cmp
movsb
js
adc
ja
shrb
push
shll
mov
stos
mov
sub
scas
and
push
aaa
jle
and
mov
jb
push
inc
push
jb
subl
inc
dec
bound
cwtl
test
add
lret
stos
inc
popf
out
scas
lret
cmp
dec
test
pop
mov
je
xor
mov
jge
shl
aam
or
add
jecxz
pop
sbb
xchg
sbb
push
push
jbe
mov
lds
xchg
push
cmp
or
pop
and
push
xlat
mov
jne
popa
mov
cli
fists
insb
inc
mov
sub
and
xchg
sub
jmp
insl
jne
adc
subb
shl
dec
out
es
movsl
mov
mov
in
inc
incb
xchg
gs
aaa
or
mov
cmp
mov
pop
mov
cmp
xchg
int3
js
fs
icebp
add
add
inc
mov
jmp
sahf
cmp
pop
inc
imul
push
out
shl
call
ljmp
cmc
inc
aas
and
or
cmp
cmpb
sub
mov
mulb
popa
lods
adc
xlat
cmpsl
cmpsl
out
iret
in
push
scas
cmp
dec
mov
aam
es
jecxz
stos
pop
ror
inc
mov
sbb
xchg
add
and
mov
xchg
mov
in
fwait
movsb
sub
mov
rcr
push
repnz
add
in
adc
mov
dec
inc
mov
outsb
adc
cmc
insb
lea
stos
lods
sbb
call
sti
mov
hlt
pushf
pop
jb
fnstcw
mov
sti
push
pop
push
mov
xchg
jns
push
cmp
aam
insl
pop
popf
cli
mov
adc
sbbl
rcll
push
mov
dec
pop
mov
jae
ret
dec
mov
clc
shr
rclb
adc
popa
clc
jmp
out
jmp
inc
sbb
loop
test
loopne
test
loope
cmp
imul
sub
add
jp
push
out
mov
std
mov
insl
jae
dec
mov
or
outsb
cmp
iret
inc
sub
sbb
mov
ss
rcrb
shl
ret
push
scas
in
inc
repz
xchg
in
andl
rcrl
push
das
lahf
stos
cmp
jo
mov
cs
dec
leave
out
dec
cmpsb
fstpl
sbb
xor
lods
mov
and
addb
ficoms
push
testl
push
add
fwait
hlt
in
aaa
testb
and
inc
lcall
lret
outsl
int
add
jg
roll
push
and
loopne
lret
and
rorb
in
stos
jns
mov
cwtl
pop
loop
scas
iret
xchg
adc
mov
push
xor
in
decl
mov
and
mov
push
in
mov
cmp
sbb
setge
inc
clc
aaa
ss
dec
mov
int
dec
xor
in
fcompl
cltd
movnti
stc
es
jge
daa
shll
inc
ret
ljmp
divb
sub
push
inc
cltd
cmp
jbe
sbb
lods
fdivs
or
jge
popf
into
dec
divl
rcrb
sbb
push
dec
jmp
addr16
jns
div
mov
int3
xlat
or
adc
mov
leave
pop
movsl
lods
imul
sub
rcl
std
lock
sbb
jg
movsl
enter
cmp
cs
lods
ljmp
leave
fists
std
xor
adc
movsb
icebp
or
lcall
js
and
or
and
cmp
cmp
lcall
mov
imul
test
gs
sarl
lahf
insb
addr16
cli
lds
add
cmpsb
lret
lea
shrb
jmp
outsb
testb
push
sub
pop
fcomi
ret
inc
popf
pusha
mov
inc
in
jo
cmc
xchg
stos
pusha
shrl
cs
mov
fidivs
push
add
or
jmp
pop
shl
outsb
test
imul
out
iret
stc
ret
test
jns
push
cltd
push
fwait
push
stos
xor
test
push
into
lock
hlt
and
subb
pop
out
xlat
aam
cmp
inc
or
mov
into
mov
test
or
aad
mov
mov
mov
xchg
bound
adc
fldl
or
dec
jns
es
or
popa
inc
fdivr
roll
jg
and
fsubrs
insb
shlb
ljmp
mov
insb
dec
jge
call
cmpsl
fistpll
cltd
negl
clc
mov
clc
sbb
sbb
jecxz
aas
push
jb
pushf
pop
xchg
testb
cltd
lret
mov
icebp
add
imul
ds
stos
bound
movsb
icebp
lods
jbe
pop
mov
inc
mov
xadd
xchg
and
shlb
push
mov
pop
pop
jae
push
orb
frstor
std
in
xchg
or
cmp
jae
les
imul
mov
or
xor
mov
fcompp
adc
fisttpll
xor
sbb
iret
mov
sbb
jecxz
mov
jo
ss
push
int
sbb
test
ficoml
aas
aaa
popf
cmpb
adcl
inc
shlb
dec
xor
add
nop
lea
arpl
movsl
repz
inc
subl
fs
int
sbb
pop
or
mov
dec
popl
dec
dec
push
aad
add
aas
sub
and
cmp
inc
pop
add
ror
mov
fsubrl
ljmp
push
xchg
test
std
pusha
cs
lods
js
xlat
dec
add
push
push
bnd
mov
sbb
out
out
xor
or
in
mov
adc
stos
js
pop
out
stc
jmp
jmp
xlat
mov
dec
and
fdivrl
sub
push
jl
xor
clc
cmpsb
cld
lcall
cltd
push
jo
cmp
mov
mov
inc
push
fstps
and
out
or
sbb
sahf
aad
jnp
test
or
push
mov
or
xor
sbb
cmp
mov
push
xor
lock
dec
adc
loopne
cld
pop
lea
mov
cmp
shll
pushf
mov
int
sbb
add
repnz
enter
mov
into
adc
add
and
xchg
loop
or
jl
xchg
xor
and
xchg
jno
push
sahf
mov
mov
pop
cs
dec
int
push
mov
sbb
jge
push
or
jecxz
pushf
or
iret
jne
push
sti
imul
jbe
sbb
jbe
jg
dec
add
mov
pop
sub
daa
aam
sbb
inc
aam
jle
dec
xchg
gs
in
cmp
cwtl
adc
mov
in
xor
ja
sub
push
mov
arpl
bnd
push
das
out
mov
sbb
dec
sbb
movsb
daa
divl
fstl
fiaddl
cs
scas
jg
nop
inc
fstl
leave
xchg
sahf
lea
dec
jb
xor
add
mov
je
jmp
cwtl
add
or
test
pusha
mov
popa
je
xchg
pusha
jns
adc
jp
add
nop
push
add
push
xchg
inc
clc
xor
cmp
mov
icebp
sti
ret
stos
xchg
xlat
pop
cwtl
dec
cmp
call
mov
iret
aam
pop
dec
or
xchg
lock
add
pop
mov
mov
fisubrl
sbb
mov
fcomps
pop
fs
std
clc
aam
jecxz
cmp
cwtl
pushf
mov
pop
push
mov
xchg
imul
imul
mov
pop
fwait
jmp
ja
and
push
lcall
push
push
gs
scas
inc
cmp
test
jg
inc
idiv
cmp
cltd
cli
push
xchg
andb
addb
push
push
adc
mov
mov
jecxz
dec
push
push
xor
jle
pushf
jae
je
andb
call
mov
les
adc
pop
xchg
pop
dec
es
loopne
test
mov
lods
popa
jmp
adc
fsubp
mov
pop
data16
xorb
nop
fdivs
bound
ljmp
movaps
lea
les
cmp
and
and
xorb
mov
inc
mov
popf
ret
cmp
js
xor
outsb
mov
orl
lods
mov
dec
inc
lret
aaa
mov
out
addr16
bound
jl
aad
sub
jle
ljmp
pop
nop
or
add
lea
loope
movsl
and
or
lret
push
lahf
xchg
mov
into
loopne
loope
sub
cld
ret
daa
xchg
stc
or
dec
cmp
push
sub
in
icebp
jb
push
jo
test
test
add
mov
adc
push
cld
addr16
jl
adc
pop
or
out
xor
lret
inc
mov
jp
sbb
push
and
push
xor
sahf
jle
sbb
in
cmp
add
sbb
hlt
outsl
push
jl
and
scas
mov
jle
div
test
push
stos
push
daa
dec
push
add
imull
pusha
js
je
std
in
sbb
mov
movsb
jge
daa
je
jb
adc
fidivrl
mov
mov
lods
dec
hlt
ds
mov
mov
mov
loopne
pop
pusha
jmp
jo,pn
sub
pop
shl
out
sub
enter
ljmp
mov
or
pop
call
sbb
js
imull
push
sub
push
xchg
cld
into
dec
ja
gs
les
jp
xor
enter
sub
ljmp
shlb
into
inc
cli
cli
push
lret
push
enter
sbb
ljmp
xor
push
pushf
adc
les
popa
adc
jge
pop
loop
pop
iret
mov
pop
push
orl
lahf
inc
pop
and
push
jmp
clc
cld
push
shlb
jno
push
xorl
pop
pop
add
sub
cli
xchg
std
popa
cmp
jns
xor
xor
push
add
push
mov
sub
dec
test
lea
int3
divb
enter
sbb
inc
dec
sub
add
stos
das
cmp
xchg
shr
ljmp
pop
jno
aam
orb
mov
pop
insb
popf
push
xor
jo
js
mov
cmp
mov
insb
or
stc
daa
out
pushf
dec
sarl
and
data16
ret
pusha
incb
xchg
das
and
adc
call
pop
mov
test
popf
mov
add
adc
lock
loopne
add
fs
xchg
js
jo
adc
lds
ret
cmp
in
lahf
jnp
jge
andb
inc
insl
or
or
and
and
cli
push
push
sbb
push
and
push
dec
cld
sbb
mov
js
sub
cld
xchg
pop
cli
cmp
sar
aaa
mov
scas
cmp
sbb
mov
xchg
mov
loope
mov
mov
imul
fwait
xchg
out
xor
dec
adc
cli
xlat
xor
lcall
pusha
dec
in
jp
add
jno
dec
sarl
pushf
xchg
adc
in
pop
sbb
adc
clc
cmp
dec
mov
xor
inc
aam
push
sub
sbb
pop
addr16
daa
push
cmpsb
push
inc
push
fisubrl
aam
lock
or
aad
jb
cltd
fadds
repz
sub
lock
dec
xorl
push
mov
decb
inc
lods
hlt
repz
cmp
push
loop
std
iret
mov
cmp
pop
mov
jns
adc
nop
xchg
sub
hlt
inc
int
mov
lods
out
test
mov
rcl
gs
andb
xor
adc
lods
xchg
and
xchg
sbb
xor
mov
icebp
xor
mov
and
mov
stos
out
stos
mov
and
call
int3
adc
sti
test
call
lds
push
ret
adc
pop
int3
jns
repnz
or
outsl
sub
sub
sbb
mov
fsubl
adc
jb
fwait
mov
cmp
add
mov
mov
rorb
out
stc
push
adc
inc
arpl
fsubrl
xchg
daa
add
adc
test
push
in
outsb
popa
sbb
pop
test
aam
fisttps
sti
pop
push
fisubrs
mov
adcl
jle
pop
fs
test
xlat
pop
loope
rcll
push
inc
out
loope
sub
int
pop
dec
push
sbb
mov
xchg
movl
pop
jmp
lret
lcall
pop
pop
sbb
jle
fcompl
movsb
inc
mov
aas
aas
insb
cwtl
inc
push
mov
icebp
inc
add
pop
roll
popf
push
lods
dec
or
pop
xor
mov
and
iret
in
add
dec
push
jo
repz
in
testb
fucom
repz
cmpsb
ret
ret
ss
cmp
cmpsl
cld
mov
popf
jle,pn
test
add
xor
jne
dec
sub
jle
sub
pop
push
push
mov
in
push
push
mov
stos
xchg
out
fcoml
std
cmp
mov
fstl
pop
pop
lods
imul
add
xor
bound
enter
lods
sub
and
lods
push
mov
pop
sbb
push
es
mov
fimuls
je
xchg
lret
push
pop
rcrb
popf
movhps
pop
jbe
or
jne
push
or
test
xchg
aaa
sub
add
xchg
adc
cmp
jno
mov
sarl
aas
les
in
fnstenv
push
pushf
imul
stc
data16
xor
std
mov
and
cmp
loopne
orl
cmp
cmp
jns
cmp
dec
mov
sub
or
xor
testb
mov
xlat
xchg
push
xchg
xchg
lcall
push
stos
jnp
out
inc
pushf
pusha
fcompl
pusha
inc
mov
fstpt
mov
rorl
cli
and
jecxz
aam
aas
xorl
decb
push
jns
orb
or
jl
stos
or
sbb
jne
ficoml
ret
pop
std
cmpsl
dec
mov
out
mov
sbb
movsb
push
mov
popa
dec
push
push
sbb
fnsave
mov
test
rcl
push
xor
push
xchg
push
fiaddl
and
sub
mov
nop
push
adc
mov
push
mov
call
and
ss
xor
fcmovnu
in
sbb
pop
gs
lock
xor
mov
ds
movsl
jbe
je
mov
jecxz
sub
jg
scas
cmpsl
ljmp
lcall
push
mov
gs
sbb
stc
cmp
push
addr16
push
adc
xor
push
cmp
adc
dec
adc
add
xorl
aad
cmpsl
sub
xchg
adc
aaa
sarl
ret
jge
out
push
hlt
mov
stos
push
pop
jge
mov
xchg
push
sbb
sub
cmp
cmc
jne
xchg
imul
adc
push
lahf
inc
mov
ret
mov
in
pop
int3
sub
cmp
out
cmc
fildll
fnstcw
mov
clc
mov
es
pop
mov
inc
pop
pop
das
cmp
cld
cltd
clc
xchg
or
movsb
sub
mov
inc
sbb
pop
mov
sbbb
add
xor
sbb
adc
pop
pop
je
push
and
cwtd
lock
sbb
pusha
cmc
mov
fwait
adc
jns
data16
repnz
push
xlat
insl
out
sahf
or
out
cmp
pusha
add
sti
sub
aad
mov
incb
jmp
and
out
movsl
mov
lahf
stc
sbbb
dec
sbb
pop
cmp
mov
lahf
and
xlat
fistpll
pop
pop
fwait
shr
adc
ret
mov
add
loop
jle
sbb
popf
outsl
stos
mov
in
test
dec
sub
cmpsb
outsl
push
add
loopne
loop
in
cmp
or
inc
pop
pop
add
and
cmc
aad
and
ret
xchg
jecxz
push
cmp
int
mov
fiadds
push
push
push
and
shll
mov
andb
int3
inc
push
jl
mov
xor
sti
rcll
fwait
pop
cmp
jecxz
lea
jmp
pusha
mov
or
addr16
push
and
cmp
aad
fwait
ljmp
add
loopne
pop
incl
push
je
push
int3
das
xchg
add
sub
and
cmc
outsb
loope
mov
testl
in
in
fldl
je
into
imul
jmp
push
mov
fbstp
sbb
add
lahf
dec
mov
rcll
push
mov
sub
cmp
test
add
xchg
test
lahf
inc
lods
sbb
mov
xchg
movsb
jnp
jns
add
fmull
sahf
les
in
nop
std
jle
mov
pop
into
push
test
lea
jo
out
cmp
mov
sbb
jnp
sub
adc
mov
sti
push
pop
mov
xchg
and
fs
adc
hlt
iret
inc
mov
add
cmp
out
dec
sbb
lret
loop
adc
out
jne
inc
mov
dec
add
mov
adc
mov
adc
xor
push
cmp
ss
add
jl
or
sbb
lret
scas
mov
jae
dec
outsb
das
test
xchg
and
jo
add
xchg
cmp
addr16
push
arpl
stos
cmp
int3
mov
pop
inc
test
lret
push
std
dec
aam
xor
xchg
inc
lcall
adc
xchg
in
push
cmc
push
mov
mov
bound
mov
jne
fisttpll
mov
aaa
mov
fstpl
int
shr
dec
shrb
jns
xor
xor
aaa
pop
ffreep
push
movsl
std
scas
mov
inc
cmp
jle
lcall
adc
repz
pop
xor
stos
and
xor
mov
loopne
mov
push
cltd
jl
mov
ljmp
sahf
pop
mov
imul
xchg
out
xchg
mov
mov
dec
push
and
inc
insl
push
cli
xchg
cli
sbb
mov
sub
test
jl
sahf
outsb
into
pop
inc
pop
adc
mov
jg
sti
xor
in
fnsave
rcrb
std
mov
mov
push
sahf
push
and
aaa
sbb
push
imull
jle
arpl
xchg
and
into
mov
xor
pop
pop
sub
add
addr16
mov
fldl
loope
les
aaa
jg
ss
jecxz
sub
sub
push
add
fsubr
daa
jmp
xchg
cmc
ret
insb
or
addr16
fisttpl
inc
imul
lods
sbb
mov
sub
sub
dec
sub
mov
cmp
rcrl
ret
cmp
jnp
aaa
data16
in
fidivrl
rolb
inc
popa
test
push
js
ja
bound
sbb
mov
adcl
fdivrs
adc
cld
data16
jl
repnz
add
out
outsb
test
xor
iret
bound
mov
or
gs
jecxz
clc
testl
out
int
pop
add
xchg
dec
xchg
out
imul
push
test
fnstsw
xor
inc
push
notb
sbb
pop
bound
add
fildll
flds
mov
fs
xor
repz
sbb
cwtl
xor
mov
cmp
into
mov
add
repz
andb
xor
dec
aas
mov
mov
jecxz
sub
xchg
jmp
lret
test
xor
nop
imul
pop
jno
mov
adc
or
fldenvs
pop
dec
and
call
cmc
cmp
popf
pop
sti
das
outsb
out
stos
xor
call
arpl
jg
cmpsb
ljmp
dec
lods
or
out
ss
jno
adc
dec
lea
movsb
cmp
rcl
xorl
jns
xchg
aaa
add
mov
ds
push
mov
into
mov
icebp
out
lock
xor
roll
ja
sub
into
mov
leave
or
ljmp
call
add
cmp
sub
hlt
mov
xor
test
sub
jb
mov
or
xchg
push
dec
or
shl
xchg
in
nop
adc
mov
push
add
dec
sti
and
test
mov
xchg
dec
inc
xchg
and
pop
inc
xchg
adc
icebp
scas
mov
sub
pushf
hlt
dec
daa
jecxz
rolb
sbb
sbb
xor
push
stos
dec
or
pusha
pop
lea
mov
fsub
push
mov
hlt
rorb
leave
xchg
mov
adc
sub
sbb
add
inc
sbb
add
xchg
push
push
insl
adc
add
mov
jmp
sahf
pushf
push
mov
dec
cmpsb
popf
sbb
aad
pop
pop
pop
jg
push
orb
sbb
jg
jne
pop
pusha
push
ds
nop
push
std
pop
mov
jl
scas
aas
push
mov
jmp
les
push
iret
and
js
fsubl
out
andl
dec
int
push
es
call
mov
mov
lret
fstps
mov
adc
mov
mov
subl
push
arpl
jge
dec
clc
sub
repz
sti
or
cmpsl
inc
mov
jns
aas
mov
lea
out
pop
inc
push
cs
jno
mov
jge
cmpsb
mov
ret
adc
daa
mov
inc
sbb
addb
add
inc
pop
aaa
mov
mov
aas
dec
pop
cmp
ljmp
cwtl
scas
mov
pushl
les
jno
les
jnp
xchg
pop
insb
lods
sbb
sbb
sbbl
dec
in
bound
insb
jg
gs
sbb
rol
mov
jo
cltd
jecxz
ss
pusha
inc
inc
addb
push
dec
mov
cmc
inc
sub
mov
ds
xchg
pop
or
mov
pop
mov
out
or
xor
add
inc
dec
shll
cs
add
add
lcall
xlat
sub
rcll
push
cmp
pop
leave
add
icebp
push
sbb
sub
pop
mov
inc
xchg
mov
negl
xlat
cld
sub
sti
frstor
aaa
testb
mov
add
cmp
mov
cmp
stc
jb
dec
mov
pop
rcl
mov
or
das
pusha
xchg
je
dec
fstpt
jecxz
arpl
xor
outsb
push
lock
jle
inc
sbb
add
dec
rorb
jl
divl
insb
mov
xor
xchg
cmpsl
inc
out
xchg
lods
fs
push
idivl
mov
push
inc
movsl
xchg
jecxz
xchg
stos
and
inc
ss
jb
icebp
push
cmc
and
mov
in
inc
inc
addr16
fs
jne
sbb
xchg
fbld
lret
sbb
out
cmp
hlt
pop
adc
std
sub
pop
into
scas
dec
loop
mov
pop
scas
add
jb
xor
fistl
pop
inc
out
lods
pushf
ss
push
mov
mov
divb
popf
dec
mov
into
or
pushf
sub
pop
sbb
dec
outsb
movsb
push
or
mov
adc
movsb
jge
pusha
insl
dec
sub
pusha
shrl
mov
scas
pop
popa
into
test
int3
into
or
mov
lods
jecxz
faddp
sbb
pop
adc
push
jg
inc
sbb
sbb
call
ljmp
fcom
stc
sahf
int
jmp
jecxz
andb
and
mov
push
jecxz
sbb
imulb
adc
cmpsl
mov
and
shrd
rorb
movsb
sbb
mov
aas
jg
flds
adc
stos
adc
int3
lea
xchg
adc
pop
cli
jne
add
pop
cmp
pop
sbb
mov
mov
add
add
mov
test
and
ficoml
sbb
cmpsl
loopne
cmp
cs
inc
ss
stos
push
jp,pt
sbb
pop
popf
aas
inc
xchg
xchg
jge
cli
sbb
pop
mov
test
inc
sub
scas
dec
dec
hlt
fs
jo
and
mov
test
aas
out
mov
xchg
jmp
fsubrp
adc
push
add
fbstp
mov
xchg
fdivs
icebp
fadds
ret
or
cmpsb
mov
or
lock
ret
pop
push
insb
xchg
cmpsl
push
adc
shrl
popf
push
cs
mov
rcl
neg
popa
pop
aas
popa
mov
int
xchg
fisttps
bound
icebp
pop
data16
add
ficompl
dec
aaa
dec
aam
fwait
xchg
inc
xchg
lret
sub
dec
and
mov
jecxz
or
push
imul
scas
rcrl
in
imul
popa
inc
jnp
or
sub
inc
mov
push
test
in
daa
jge
in
xchg
dec
mov
push
mov
inc
inc
js
negl
mov
jge
push
mov
xor
fsubl
sbb
cmp
mov
test
pop
je
enter
mov
xchg
and
adc
inc
pushw
push
adc
push
insl
fucomi
imul
inc
and
dec
sub
sub
icebp
and
pop
xchg
in
cwtl
xor
pop
pop
das
repz
subb
bound
outsb
add
fadds
icebp
sub
divb
test
sbb
imul
xchg
xchg
cmpsb
xor
inc
aaa
mov
test
inc
out
call
mov
push
stos
sub
and
add
lahf
mov
or
frndint
xchg
xor
sub
add
push
repnz
addr16
stc
jae
mov
pusha
sbb
mov
pusha
mov
sbb
aam
lds
cltd
xchg
insb
test
add
scas
out
xchg
push
mov
std
mov
leave
mov
aas
mov
mov
and
and
test
jb
aas
std
and
inc
imul
push
or
shrb
and
loopne
lods
mov
or
mov
gs
mov
ja
aad
gs
and
std
mov
cmpsb
jno
inc
dec
mov
in
out
pop
and
cltd
mov
mov
sub
mov
mov
outsl
pop
xlat
loop
cmpsl
push
xor
and
pushf
xor
cmp
add
mov
sbb
leave
outsb
dec
ja
inc
cltd
hlt
pop
es
enter
mov
mov
pop
pop
and
dec
sbb
popf
sbb
jae
and
test
xor
out
movsl
cmpsl
enter
es
outsl
mov
dec
out
mov
adc
repz
lods
inc
adc
sbb
or
ret
jge
and
scas
xor
cld
jo
and
sub
aas
sub
sbb
push
mov
pop
sti
ljmp
mov
jecxz
out
cld
xchg
out
inc
add
lahf
mov
sbb
aaa
popa
mov
movb
and
repz
mov
pop
cmp
jecxz
jl
cmp
sub
lret
adc
fsubl
jecxz
sub
gs
stos
dec
stos
popa
mov
outsl
add
inc
dec
lret
mov
and
jge
xchg
and
mov
fidivrl
push
std
cmpsb
aas
lahf
iret
mov
adc
sbb
aam
jno
rcrb
mov
push
cmpsb
mov
xchg
out
push
orl
xor
mov
or
test
lods
loopne
mov
jo
int
mov
data16
repnz
mov
shll
jae
aad
mov
pop
cmp
lret
lcall
fisttpll
dec
popf
clc
lret
dec
js
and
lds
nop
jecxz
out
mov
insb
fildl
xor
repz
and
sbb
cmc
mov
sarl
outsb
xor
mov
pusha
jns
imul
sbb
inc
jno
rcl
ds
or
sub
js
aam
fs
loopne
adc
je
inc
ds
mov
in
testl
mov
adc
push
movzbl
inc
test
sbb
rorl
shlb
rorl
fidivrl
mov
loop
mov
pop
push
outsb
xchg
mov
aam
xor
bound
enter
gs
push
mov
cmp
enter
int
inc
nop
gs
movsl
leave
cltd
das
jle
jb
mov
jbe
inc
fcompl
dec
cmp
pushf
mov
arpl
cli
outsl
outsl
mov
jle
sahf
cmpb
data16
cmpsl
pop
ss
arpl
ds
out
and
jecxz
shr
cmp
jbe
pushf
les
es
les
and
and
data16
adc
data16
icebp
mov
scas
insl
aas
fwait
xor
mov
and
ja
repnz
ret
pop
cld
adc
jge
cmp
mov
mov
xchg
nop
jbe
dec
push
cwtl
dec
rorl
out
outsb
adc
inc
pop
les
lret
inc
ljmp
mov
inc
mov
stos
pop
adc
xchg
pop
es
gs
add
data16
sub
stc
les
addl
hlt
outsb
or
pop
cwtl
call
or
fildll
mov
or
fld
movsl
enter
popa
sbb
arpl
xor
mov
lods
lret
sti
jg
dec
jnp
pavgw
sbb
lock
and
aam
addr16
cmc
sti
dec
lods
jmp
cwtl
jp
jg
lcall
adc
jb
jmp
and
je
inc
pop
je
or
xor
shlb
cmpsl
mov
and
pushf
xor
inc
scas
sbb
pop
or
loope
inc
sub
lret
leave
cmp
nop
repnz
pop
sub
jg
daa
pusha
and
ljmp
pop
ffreep
jns
lds
in
arpl
pushf
shr
pop
mov
xchg
es
and
xchg
int3
lock
in
mov
dec
cmp
insb
or
sub
in
sub
adc
mov
sub
repz
lcall
shlb
xor
xchg
mov
pop
push
es
notb
popl
push
dec
sbb
xor
out
ret
adc
mov
add
popa
loopne
ljmp
jle
mov
push
test
mov
outsl
mov
fsubs
adc
mov
sbb
jle
je
sub
test
sub
xor
dec
mov
jbe
aad
cli
jmp
mov
rcll
push
das
push
adc
sub
fcmovnu
imul
mov
xchg
or
xchg
out
or
js
hlt
xchg
movsl
dec
pop
gs
ficoml
int3
jne
jbe
and
mov
xchg
scas
push
jnp
add
es
sub
xchg
in
and
rcl
loop
frstpm(287
gs
loop
cld
jae
mov
push
jp
pop
movsb
dec
sbb
adc
lahf
call
shrl
test
pop
stc
or
addr16
dec
push
loop
jae
out
insl
cmp
and
addb
xchg
inc
pop
iret
stos
in
push
cmpsl
stc
aas
or
mov
mov
xchg
loopne
mov
arpl
push
rorl
out
stos
push
leave
daa
push
and
fs
je
ljmp
ret
mov
cmpb
add
pushf
mov
xchg
jp
push
hlt
mov
jmp
repz
sahf
inc
mov
xor
dec
push
hlt
adc
aaa
adc
out
cmp
fstpt
cwtl
jae
aaa
xor
test
inc
adc
mov
ficompl
cmp
int3
and
add
mov
lret
fs
loopne
in
jae
lcall
mov
xor
inc
mov
adc
pusha
nop
mov
jae
negb
gs
xchg
test
scas
sarl
xchg
mov
dec
push
insb
mov
addb
ljmp
into
or
stos
ss
idiv
cmp
gs
push
xchg
stos
shl
dec
cmp
cltd
sar
movd
lods
test
out
and
xchg
pop
daa
or
sub
add
mov
cld
mov
xchg
push
addb
enter
in
aad
andb
fisttps
sub
outsl
popf
cmp
xchg
jg
mov
ljmp
push
pop
test
pop
adc
mov
lcall
roll
ja
sub
add
push
sub
daa
push
lahf
in
repnz
push
xor
lods
pop
push
mov
xlat
lahf
insl
or
je
jns
enter
lds
fstps
aam
stos
sarl
adc
imul
adc
mov
clc
push
hlt
lret
adc
pop
repnz
push
push
stos
call
in
dec
movsl
push
out
adc
xor
sbb
lea
or
or
adc
mov
jmp
jg
pushl
daa
adc
rorl
adc
mov
pop
std
or
sub
insb
mov
fsts
jne
sub
sahf
and
movsl
xor
daa
fadd
pop
sbb
cmp
imul
mov
aas
psubusb
mov
mov
adc
sub
pop
ret
sub
test
repz
out
push
mov
popa
jl
out
imul
stc
and
xor
mov
jmp
nop
mov
mov
in
fiadds
mov
mov
dec
mov
dec
push
and
mov
inc
add
sub
clc
adc
daa
adc
pop
mov
and
outsb
aaa
sar
dec
pusha
mov
outsb
xchg
pop
int
mulb
faddl
mov
leave
in
data16
mov
cs
mov
popa
loope
push
add
fs
stc
cwtl
lds
jne
test
lea
inc
jge
movsb
dec
mov
psubw
das
adc
out
mov
jae
ja
jno
xchg
out
in
add
insb
cmpsl
xchg
dec
pop
popf
pop
inc
xchg
popa
ljmpw
mov
push
mov
push
inc
xchg
aas
js
mov
jmp
sbbb
out
shrb
iret
pop
loop
icebp
movsl
cmp
mov
pop
sbb
mov
push
vpsubd
push
xchg
xchg
lock
mov
jo
mov
xchg
int3
and
adc
aam
loop
jl
ret
jle
cmp
jle
ficoml
into
in
hlt
or
mov
jmp
mov
mov
cwtl
and
cmp
aas
jl
sbbl
rcr
inc
insb
shll
push
dec
outsl
iret
cwtl
sbb
dec
lret
mov
mov
sbb
sbb
loop
lods
stos
jns
and
add
jg
aad
sub
jae
int
sbb
mov
popa
xor
mov
iret
mov
inc
sbb
lock
or
jge
adc
out
sub
mov
aaa
mov
sbb
js
shrd
dec
shrb
mov
cmp
jno
cwtl
dec
pushf
iret
data16
pop
lcall
imul
fdivr
adcl
pop
jg
ret
xor
sbb
sarl
push
mov
mov
idivb
mov
and
ds
adc
cmp
aam
xchg
dec
push
in
out
add
imul
sub
aas
add
int3
fwait
hlt
inc
dec
sub
push
push
into
stc
cli
sahf
xchg
xchg
mov
loope
arpl
push
out
fwait
sub
inc
mov
pop
mov
lds
lret
je
jns
push
jo
xchg
lods
dec
bound
dec
mov
je
out
and
aam
pop
inc
sub
push
lahf
lret
js
aad
fadd
push
adc
add
jl
js
mov
roll
mov
scas
and
testb
pushf
bnd
sbb
jnp
dec
punpckldq
lea
adc
xchg
test
sbb
stc
lret
mov
mov
or
jbe
mov
loope
xor
xor
addr16
xchg
and
stos
and
je
js
jp
dec
mov
rcll
xor
jecxz
pop
shrl
mov
sub
lds
roll
stos
or
or
xor
out
fdivs
sbb
imulb
dec
sub
jecxz
aaa
lret
aas
add
je
into
movsl
mov
mov
pop
jp
popa
adc
aaa
cmp
pop
cmpsb
jae
fldt
push
ja
pop
xor
loopne
inc
shll
ja
jb
push
xchg
xchg
gs
lret
out
push
inc
in
add
daa
in
loopne
cld
negb
sub
inc
mov
and
or
fldenv
repz
lret
jecxz
dec
and
xchg
xlat
sub
cltd
mov
nop
pusha
pop
aaa
loop
adc
or
mov
sbb
inc
sub
xchg
jo
push
xlat
incl
daa
or
pop
sti
cmp
ljmp
or
out
adc
int3
xchg
andb
mov
jg
push
ret
and
jno
push
fcomps
enter
int3
sbb
jl
je
es
ret
sub
push
add
xlat
jo
ret
sub
outsb
hlt
cs
add
out
dec
jl
repz
test
popf
xor
jmp
and
sub
jp
bound
int3
clc
insl
jno
dec
out
test
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
fidivrs
call
xchg
ljmp
cs
jns
adc
jp
xor
fisttps
imul
aas
or
dec
pop
lods
stos
or
dec
in
pop
dec
add
push
cmp
xor
xchg
aam
xchg
mov
popa
ret
clc
xor
mov
fdivrs
ja
nop
xchg
into
sbb
mov
insl
or
cld
nop
dec
xor
cmp
push
dec
sub
cld
test
pop
fs
stos
insb
lahf
loopne
xchg
sub
stos
push
lahf
ljmp
xchg
push
fcompp
in
fcmove
cld
sbb
ja
pop
cwtl
stos
loop
fists
insl
jge
loope
mov
add
in
cmp
out
add
or
iret
sub
mov
pop
xchg
fldcw
xchg
jne
or
enter
out
pushf
inc
outsl
cmpsb
in
pop
call
mov
xchg
popa
push
mov
add
ret
jb
aaa
push
jg
dec
inc
jmp
aas
pop
jne
push
mov
into
subb
inc
insl
or
mov
xchg
mov
les
cmp
bound
pop
cmpsb
jmp
xlat
dec
cltd
xchg
push
lret
insb
sbb
pop
push
jns
xchg
jmp
loope
pop
bound
fisttpl
pushf
out
imul
jne
out
cmp
pushf
cmpsl
pusha
ja
inc
orl
frstor
ljmp
inc
sbb
push
icebp
and
mov
in
jae
decl
mov
cmp
jecxz
inc
inc
mov
inc
sti
jae
or
jmp
arpl
cmpsl
dec
cltd
nop
pop
aam
lock
mov
adc
sbb
jg
dec
adc
ds
push
test
bound
xchg
lret
and
in
adc
scas
andb
mov
xor
dec
dec
xor
add
aad
fadds
pop
loopne
add
sbb
pop
push
pop
cmp
movsb
std
xchg
pop
sbb
jge
or
add
in
test
push
imul
xor
rcrb
fnstenv
insl
xor
xchg
sbb
test
sbb
addb
sub
xchg
out
mov
add
jnp
outsb
mov
xchg
and
adc
aas
mov
js
cmp
sti
push
inc
icebp
arpl
xchg
ficompl
cmpb
sar
sbb
ss
ja
push
xor
test
jge
xchg
cmovne
inc
mov
andl
test
loope
dec
popa
jge
mov
out
add
pop
sahf
repnz
or
push
pop
sahf
xchg
add
adc
das
mov
lods
ds
or
lea
test
xchg
int3
push
notl
sub
mov
xchg
jno
cmc
sbb
call
adc
enter
xor
jnp
fs
lret
daa
mov
divb
cmp
dec
int
xor
scas
xchg
out
add
scas
int3
mov
bnd
sub
jmp
in
mov
mov
fstpt
dec
mov
hlt
shlb
push
adc
mov
mov
jmp
inc
pop
pop
cmp
ja
fnstsw
stc
and
jle
mov
jbe
popl
loop
mov
mov
sub
add
stos
dec
dec
pop
mov
pop
pop
push
cs
loop
add
pop
pop
lret
adc
jb
add
dec
mov
mov
sub
movsl
orl
hlt
fsub
xchg
pop
gs
aas
in
stos
in
lret
cmp
fbstp
insl
lret
inc
in
cld
mov
imul
xchg
pusha
bound
iret
arpl
lock
sti
or
out
test
xchg
inc
sub
mov
pop
lds
jp
jne
mov
ja
popf
mov
jl
jge
fidivrs
push
cwtl
cltd
sbb
loope
fcmovne
shl
ja
subb
stos
popa
daa
test
cmpsb
sbb
dec
jae
lea
les
outsl
lods
adc
xchg
jecxz
push
rorb
pop
popf
insb
es
push
movsb
push
xor
loopne
and
arpl
filds
or
xor
test
das
mov
cwtl
cli
sub
fisubs
cmp
inc
ss
pushl
mov
sub
ret
ds
xorb
rol
dec
adc
and
adc
or
jno
lret
fcmovnu
push
cmp
sub
sbb
into
and
sti
xor
or
cmp
mov
es
call
and
cli
scas
sarb
adc
fnstcw
sub
ret
cltd
call
and
outsb
cltd
mov
hlt
movsl
pushf
test
or
hlt
pop
add
call
shl
jecxz
sbb
mov
push
cmp
inc
mov
bound
mov
pop
pop
shr
push
inc
mov
setb
push
xor
xlat
or
inc
xchg
adc
rcrb
addr16
jle
jp
movl
frstor
jae
addr16
sbb
cmp
inc
jle
sbb
out
das
ja
sub
imul
loope
pop
mov
dec
push
cmpsb
pop
out
bnd
pusha
fistl
xlat
orl
adc
xor
inc
pop
leave
call
inc
jnp
push
je
in
adc
and
mov
xorb
outsb
loopne
rcrl
xchg
mov
scas
ret
or
sbb
popf
xor
orb
test
inc
pop
bound
jno
sub
fstp
mov
cmpsb
ror
mov
mov
jbe
cld
ss
sub
fildll
xor
cmc
push
repnz
sarb
or
sbb
cmpsl
test
je
add
mov
jmp
inc
push
add
and
xchg
jmp
xor
mov
cmp
pushf
icebp
outsl
test
xchg
ja
popf
xchg
sahf
fs
repz
cmp
sub
mov
and
add
sbb
jmp
pop
jle
arpl
das
dec
into
cs
scas
cmp
and
cmc
jl
mov
sub
notb
lods
inc
xor
es
jb
and
ljmp
ret
mov
mov
add
xor
scas
out
test
jbe
pop
cmp
idivb
sub
cmp
mov
jl
inc
scas
inc
push
and
cs
bound
cmp
dec
pop
or
cmp
xor
xchg
mov
xchg
push
cwtl
test
xchg
push
das
mov
jmp
gs
out
sbb
ljmp
imulb
sahf
fmull
add
mov
test
imul
mov
test
xchg
fists
test
lds
movsb
sbb
jg
cld
and
in
out
cmp
stos
outsl
ds
cmp
mov
adc
lock
push
dec
fisubrs
jo
mov
add
push
add
outsl
insl
dec
mov
mov
push
or
sbbl
mov
adc
push
add
int
hlt
bound
jecxz
add
dec
gs
pusha
fbstp
mov
mov
jns
add
cmp
inc
xor
outsb
sbb
jnp
adc
adc
pop
rorb
repz
test
dec
add
jnp
mov
xor
sahf
fidivs
jecxz
push
adc
das
mov
test
cli
loopne
dec
mov
mov
pop
pop
cmp
test
lods
sbb
subb
and
stc
mov
sbb
add
cmpsl
xchg
std
lds
xor
dec
js
cmp
int
fs
cwtl
jmp
mov
xchg
popf
call
mov
repnz
inc
in
fmulp
dec
mov
fidivs
popf
stc
inc
popf
push
inc
and
add
test
pushf
shlb
mov
jnp
jmp
repz
fnstsw
push
pop
flds
jmp
daa
adc
fcomps
push
les
sbb
test
ss
jnp
repnz
inc
jnp
jmp
jae
xor
insl
mov
sub
aaa
scas
outsl
hlt
push
mov
and
out
inc
pop
movsl
rol
enter
xchg
xchg
fsubr
lea
cld
jo
inc
loope
pop
pop
out
sbb
test
or
push
add
jecxz
add
push
jle
inc
gs
mov
or
inc
es
pop
addr16
outsb
ret
aad
cs
add
gs
aaa
sub
xor
shr
aaa
xchg
dec
es
gs
jae
push
ds
cwtl
mov
inc
pop
fwait
sub
mov
xor
mov
ds
lea
xor
out
adc
sarl
add
push
insl
cltd
call
xchg
mov
mov
frstor
mov
pop
enter
add
xchg
sbb
enter
std
cltd
push
std
mov
xchg
fdivrl
pop
or
adc
sbb
jl
add
ja
lods
push
nop
xchg
push
mov
adc
mov
hlt
in
test
add
fldl
xor
mov
daa
pop
add
jge
xchg
jno
or
stc
lock
scas
cmp
push
loopne
stos
lea
dec
sbb
cmpsb
negl
pop
inc
or
ret
lcall
and
leave
and
int3
ss
pushf
jmp
pop
push
iret
outsb
out
into
into
sbb
xchg
je
mov
movsb
repz
mov
push
jmp
push
mov
pushf
cmp
add
pop
push
lret
mov
jecxz
push
fcoml
add
inc
test
push
mov
sbb
cmp
xor
lahf
cmp
mov
lret
loopne
bound
fsubrs
or
fxch
dec
or
mov
push
sub
and
mov
jg
jmp
fdiv
movsb
aas
rcll
xor
dec
or
and
les
aad
push
js
dec
push
into
lds
cli
scas
ret
test
add
movb
enter
lea
mov
mov
or
add
aam
mov
loope
cmpsl
movsb
pushf
mov
sub
fildl
andb
mov
rol
add
push
and
push
inc
shl
inc
addr16
jnp
sbb
push
jne
mov
lds
mov
shr
cmpsl
aaa
and
push
js
into
dec
add
fs
lahf
push
push
lock
test
rol
pop
loop
push
int3
mov
dec
cmpsb
cmp
fwait
dec
mov
pop
jl
push
in
insl
aaa
hlt
hlt
insb
aad
pop
les
aaa
or
andb
xchg
ljmp
pop
mov
mov
pop
inc
jb
mov
push
cwtl
out
or
pop
sub
pop
mov
clc
sub
out
mov
mov
sub
gs
push
sub
sbb
mov
js
stos
add
jnp
sub
cmp
lahf
test
dec
pop
mov
repz
mov
fbstp
sub
fnsave
divb
lds
xchg
test
cwtl
icebp
icebp
std
fistps
xchg
sbb
paddusw
ja
cld
sub
pop
in
faddl
mov
js
cmp
and
adc
pop
mov
push
das
iret
jecxz
int
adc
fnstenv
addl
aaa
push
cmp
mov
daa
dec
out
je
xor
mov
adc
rcll
xor
ds
xchg
push
adc
ret
std
lret
cmc
add
adc
cs
fnstenv
cmpsb
nop
cmp
mov
adc
and
cmp
mov
dec
addr16
push
mov
and
scas
enter
rcrl
shlb
add
mov
call
dec
lcall
mov
adc
cmp
stos
cmp
scas
jmp
loopne
sub
adcb
loope
lret
xor
mov
iret
mov
scas
push
pop
das
adc
test
inc
mov
mov
push
in
ljmp
jne
push
adc
adc
inc
sbb
bound
push
sub
scas
mov
data16
sysenter
dec
pop
mov
pop
cmpsl
push
lods
push
jnp
test
lahf
xchg
mov
sbb
imul
daa
repnz
hlt
dec
addr16
clc
popa
cmp
xor
loop
lea
ljmp
and
push
push
pop
and
std
sti
add
in
xlat
cli
scas
cwtl
pop
scas
aas
xor
sub
orl
dec
mov
push
ret
jnp
adc
mov
xor
add
mov
int
je
cmp
xchg
jno
lea
sub
mov
cmp
mov
stos
adc
rcrl
fcom
pop
push
xchg
test
leave
jnp
xchg
mov
pop
and
leave
test
pop
jo
push
jle
sub
stos
and
or
inc
adc
pushf
push
cmp
movsb
ljmp
sbb
pop
mov
dec
jne
pop
sbb
jae
je
int
xchg
stc
cltd
add
lcall
fcmovne
inc
mov
int
outsb
cld
js
std
imull
sbb
out
inc
test
push
xor
scas
daa
mov
pushf
ds
lcall
adc
and
loope
xchg
into
cmp
sbb
mov
fsubrs
aam
pop
jne
cmp
inc
adc
and
dec
add
or
fstl
test
call
sbb
in
push
mov
dec
data16
mov
adc
ds
repz
mov
sti
jbe
jge
xchg
or
cltd
imul
inc
sbb
adc
sbb
mov
push
fistps
and
lret
mov
test
and
lret
sub
and
mov
call
xor
fsubrs
push
cmp
mov
push
mov
dec
jnp
inc
daa
jbe
sub
movsl
out
bswap
add
or
inc
pop
cli
xor
ds
in
movb
or
pop
out
or
into
addb
mov
dec
xchg
sub
adc
jmp
pop
sub
dec
jne
adc
push
push
cmp
imul
push
aas
test
aad
stos
gs
push
out
test
imul
out
mov
mov
xor
xchg
rcr
movsb
or
in
fmuls
in
rorb
adc
add
stos
sub
mov
or
insl
dec
mov
shll
testl
adc
mov
cmp
std
lret
mov
pop
test
adcl
daa
leave
dec
cmp
mov
adc
sub
aaa
push
aad
jp
lcall
sbb
lea
imul
and
scas
out
imul
cmp
xor
inc
xchg
jae
ljmp
add
xchg
jb
add
mov
mov
int
and
mov
mov
sbb
fidivl
scas
adc
jle
aaa
hlt
cmpsb
inc
popa
push
lahf
xchg
loopne
shrb
das
jle
call
add
dec
movsb
pop
dec
push
sbb
push
cmp
out
jne
inc
push
cld
stos
pop
xor
push
shll
scas
shlb
repnz
dec
pop
xchg
iret
sarl
inc
shll
sarb
ja
enter
mov
mov
sbb
adc
leave
jl
pop
jp
jge
inc
or
or
repz
ret
in
imul
xchg
sbb
push
mov
hlt
inc
call
fsin
pop
cmp
les
cld
loope
test
cmp
and
push
jp
popa
adc
cmp
push
les
and
push
pusha
test
jb
arpl
jb
mov
cs
mov
adc
lahf
lcall
push
fists
inc
push
orl
ds
out
mov
cmc
imul
or
jb
inc
adcl
cmp
ret
arpl
in
or
and
mov
fadds
inc
mov
fistpl
mov
lock
jb
push
push
lcall
in
push
push
fwait
jmp
inc
mov
add
stc
rcrb
xchg
mov
inc
imul
into
jp
push
push
push
scas
cmp
ss
xor
mov
mov
daa
lock
mov
dec
loope
inc
adc
lds
sbb
adc
inc
or
add
popa
into
cltd
imul
sbb
and
mov
rorl
pop
mov
rcrb
and
pop
pop
cli
sub
iret
iret
dec
aam
xor
mov
push
cmp
xor
rorl
dec
negl
sbb
mov
pop
fwait
or
dec
movl
add
adc
cli
xchg
xor
mov
in
sbb
into
pop
mov
repnz
fimull
jne
fimuls
jge
sbb
shrl
pop
xchg
test
adc
insl
jge
cltd
inc
and
xchg
lds
in
outsb
or
lea
mov
ret
mov
cs
sbb
mov
int3
inc
faddl
sbb
add
xchg
shll
sbb
das
js
mov
aam
incb
sbb
push
xor
pop
test
stos
aad
stos
daa
inc
pop
add
push
pop
outsl
and
mov
jae
inc
mov
push
xchg
test
push
ja
xor
negb
mov
ljmp
or
loopne
push
xchg
fnstenv
pop
jb
imul
sub
dec
fbld
xor
cmpsb
or
out
or
out
push
jne
in
orl
lea
imul
es
subb
call
mov
or
and
add
sbb
push
out
or
aaa
shrb
fnstenv
sbb
scas
out
out
sbb
movsl
jbe
das
or
cmpsb
in
push
lods
rcr
lcall
mov
mov
adc
xor
cltd
mov
repz
cmpsl
xor
pop
leave
add
nop
mov
repnz
enter
ja
andl
es
and
ret
imul
cwtl
inc
pop
push
inc
enter
add
xor
cmpsl
jne
mov
mov
mov
push
push
pop
out
fdivl
mov
and
ja
or
cmpsb
test
inc
iret
aad
daa
sbb
dec
in
jb
or
das
and
testb
and
push
mov
arpl
aas
loopne
lea
shlb
mov
leave
imul
and
or
out
fimull
fdivrs
pop
and
imul
jmp
pop
mov
mov
mov
es
dec
mov
or
and
cltd
pusha
stos
enter
push
ss
inc
cmc
divl
sbb
or
pop
mov
add
movsl
in
pop
pusha
movsb
jne
dec
aaa
mov
into
cli
jg
loopne
and
cmp
push
jnp
iret
insl
cwtl
xlat
shlb
and
mov
sbb
adc
mov
movsb
shr
inc
dec
adc
cwtl
ljmp
mov
cmc
push
pop
mov
lods
fidivs
adc
sbb
int
les
in
cmp
addb
sbb
movsl
dec
pushf
cmpsb
mov
sub
pop
cli
push
push
jl
dec
lea
mov
scas
dec
popa
bound
cmp
popa
and
dec
lods
mov
test
dec
test
adc
decl
lcall
cwtl
mov
dec
out
adcl
sbb
ss
xor
sbbb
push
mov
scas
dec
rcrl
adc
inc
sbb
sti
lret
js
sub
nop
fwait
inc
pop
sbb
pop
loopne
mov
cmp
pop
cmp
pusha
mov
je
sub
or
sarl
mov
mov
je
aaa
negl
call
insl
lret
push
push
rol
dec
sub
mov
jb
jnp
adc
subb
aaa
xlat
add
pop
das
fwait
push
adc
xor
dec
jle
adc
test
mov
jp
jo
mov
leave
xchg
add
ror
dec
pop
movsl
sub
dec
and
imul
test
jae
mov
push
stos
out
sub
pop
cmp
xchg
xor
jle
jge
mov
dec
xor
dec
push
cmp
pop
jge
shr
pop
sub
inc
je
xor
aas
push
pop
xchg
mov
push
subl
xchg
stc
popf
cld
xor
cmp
cmc
int3
test
push
jmp
adc
and
inc
fnsave
sub
aam
jg
jle
dec
add
inc
mov
adc
loop
mov
mov
cltd
movsl
sub
mov
pop
in
add
mov
adc
loopne
aam
test
out
add
pop
mov
or
cli
bound
cmp
adcl
cld
cmpsb
mov
aad
mov
outsl
call
fcmovb
shll
dec
loop
mov
hlt
cmp
ds
dec
call
lock
popa
or
xchg
and
push
lea
sbb
ss
push
xor
dec
mov
fdivrs
sti
xchg
out
sub
mov
loope
adc
mov
dec
jecxz
xor
arpl
shlb
rcl
inc
loop
pop
scas
clc
fstpl
shll
rorb
xor
cmp
fistps
pop
mov
mov
jle
rcrl
inc
out
pop
fisubl
aas
out
or
jle
fwait
sub
daa
xchg
push
add
mov
addr16
xor
repnz
sbb
cltd
out
test
orb
ljmp
popf
add
or
insb
lret
adc
les
mov
mov
adc
pop
mov
mulb
push
dec
mov
cmp
cltd
pop
sub
iret
incl
out
movsb
movsl
out
popa
test
hlt
sub
fs
mov
mov
dec
out
mov
inc
sbb
or
xor
subl
in
jge
cmp
outsl
outsl
int
mov
movb
mov
xchg
xor
mov
jmp
inc
jl
pop
cli
stos
inc
lea
in
daa
and
xchg
dec
outsl
xchg
dec
add
jmp
ror
push
cli
fcompl
sbb
xchg
xchg
push
dec
adc
xor
jmp
mov
in
ret
arpl
in
pop
nop
inc
ljmp
mov
cs
les
adc
jge
iret
out
test
push
pop
mov
add
insl
inc
dec
out
out
insb
mov
adcl
aam
movsl
and
adc
into
packssdw
jp
dec
mov
xchg
and
jae
and
pop
and
movsb
or
xor
sub
push
cld
aad
add
dec
leave
insb
ret
push
je
int
adc
xchg
bound
es
fdivr
sbb
mov
xor
push
mov
loop
shufps
mov
loopne
dec
mov
dec
sub
pop
shl
and
arpl
push
hlt
inc
cmp
lock
fisubrl
mov
lret
lods
xchg
loopne
mov
inc
out
cld
push
mov
imul
je
shlb
insb
ja
outsb
and
outsb
or
sub
mov
dec
or
insl
shr
inc
inc
xor
es
leave
jle
sbb
inc
cmpsl
bound
or
pusha
mul
je
inc
push
lcall
push
cs
push
inc
insl
loopne
mov
stos
xchg
inc
jne
into
jge
dec
mov
xor
ja
inc
stos
orb
dec
dec
jp
test
pop
push
lret
loop
or
shlb
mov
fiadds
daa
mov
pushf
cmp
dec
add
lahf
dec
into
sti
and
push
aad
jb
stos
imul
pop
mov
mov
push
push
insl
rcll
test
stos
xor
mov
xor
fcmovb
adc
add
push
dec
mov
lret
push
pop
and
inc
add
adc
pop
jp
out
das
ja
mov
mov
ss
ja
test
mov
sbb
repnz
xchg
bound
inc
xchg
into
pop
and
cmpsb
cmp
lds
mov
dec
inc
jno
push
cmc
mov
sub
out
adc
xchg
test
hlt
cltd
loope
mov
call
mov
arpl
arpl
test
das
xchg
std
xchg
adc
popf
or
or
sbb
pop
nop
xchg
xor
gs
mov
ficomps
data16
mov
fcomps
rorl
fwait
addr16
fisttps
shlb
daa
xor
out
xor
dec
ss
je
jp
pop
pop
nop
out
inc
shll
inc
pop
adc
ficompl
mov
scas
aad
loope
mov
or
out
fwait
adc
rol
pusha
test
mov
ds
mov
adc
das
inc
lret
sub
scas
popf
sahf
or
shrl
out
jns
cmp
in
lock
cmp
sbb
mov
out
jl
and
insl
lret
orb
cmpsb
cld
cmpsl
neg
push
mov
mov
cltd
xchg
lods
push
xchg
imul
popl
jge
dec
dec
cmp
movlps
in
jge
inc
cmp
gs
lcall
xchg
inc
pop
test
rep
std
inc
fstpl
xchg
push
xor
repnz
into
jno
adcb
out
cltd
aam
mov
jbe
imul
xchg
dec
or
pop
into
mov
push
pop
pop
stos
mov
dec
or
push
ds
mov
andb
call
inc
lods
inc
dec
xor
mov
sub
js
js
or
lods
fisubl
sbb
mov
aaa
fsubl
cld
fsts
pop
dec
jb
sbbb
addl
popf
test
sub
addr16
mov
vcomisd
cmp
popf
dec
jle
add
sbb
lea
pop
les
adcl
aad
lods
icebp
mov
cwtl
fldt
call
dec
hlt
inc
stos
pop
sub
arpl
mov
mov
enter
test
cmp
xor
sti
insb
push
mov
mov
xchg
mov
aam
jl
outsl
fbld
test
into
cwtl
into
sbb
or
add
inc
rcrl
inc
dec
aad
ja
push
scas
fs
loope
call
test
out
pusha
pop
inc
das
mul
mov
clc
bound
push
dec
pop
fcompl
xor
add
adc
ja
pop
mov
fnstenv
dec
sbb
fildl
lret
xlat
in
cwtl
repnz
or
cs
dec
dec
and
fadds
xor
call
repnz
nop
cmc
push
or
cmp
pop
mov
adc
sbb
cmpsl
xor
mov
inc
call
insl
fistpl
mov
not
mov
mov
leave
shl
rcr
les
jne
pop
repnz
xchg
xor
repnz
insl
sub
fldt
bound
addl
xlat
sub
aas
rcl
xchg
mov
add
xor
divb
clc
cli
dec
cmpsl
in
mov
cwtl
cmc
push
pusha
or
ret
cmp
jmp
stc
ret
inc
pop
lcall
jb
in
les
out
repnz
pop
xchg
in
xchg
push
icebp
jne
xchg
xchg
mov
lock
xorb
adc
inc
imull
sbb
insl
es
fstpl
cli
aad
pop
push
or
jecxz
rcr
cmp
lds
cmp
das
fs
add
or
dec
xchg
mov
pop
adc
inc
ss
xchg
mov
sub
mov
arpl
jle
andl
or
adcl
mov
pop
clc
push
fstpt
notb
jmp
jp
mov
sub
cmp
and
mov
into
pop
decl
adc
mov
mov
adcl
outsb
push
fwait
cmp
or
mov
pop
sub
mov
lret
sti
sbb
sbb
push
sbbl
mov
imul
jmp
ret
scas
sbb
adc
inc
fsts
aaa
test
jbe
ds
cmp
jp
push
jo
ljmp
pop
adc
and
sub
push
sbb
push
or
pushf
arpl
ret
sti
push
adc
cmp
cmp
mov
mov
mov
mov
cld
ret
or
adc
pop
in
xlat
neg
icebp
in
popf
dec
xor
sub
pusha
jmp
stos
or
lods
out
or
jae
xlat
xlat
aad
adc
js
or
push
es
stos
test
xor
ret
cmp
mov
push
into
mov
mov
sub
leave
xchg
jns
lret
jg
frstor
cmpsl
jle
rcrl
dec
and
mov
data16
push
xchg
pushl
adc
push
outsl
out
scas
sub
mov
sub
test
jge
push
cmp
jo
cmc
xlat
jnp
adcl
std
fistpll
xchg
sbb
enter
fiadds
scas
arpl
jp
xchg
gs
inc
fists
loope
rcl
addr16
adc
mov
js
mov
dec
xor
scas
bound
cmp
jo
outsb
ja
leave
jecxz
ret
jp
fucomp
jnp
mov
xchg
ret
add
jl
push
imul
lds
daa
dec
movsb
mov
mov
and
lcall
mov
scas
sar
test
mov
xor
push
jmp
rclb
mov
inc
into
fdivr
pop
mov
lret
xchg
adc
sub
repz
inc
pop
imul
dec
aas
xchg
cltd
rorl
in
ljmp
jmp
and
dec
aam
out
lcall
jnp
scas
outsb
inc
fs
xchg
cs
movsb
xchg
xchg
inc
mov
add
push
jne
test
rorl
insl
sbb
pop
rclb
adc
ss
xchg
push
sti
sahf
mov
es
fstpl
lods
lea
jnp
rcll
cmpb
cmp
mov
add
dec
sbb
mov
inc
push
hlt
pop
mov
xlat
mov
out
jo
mov
xor
inc
xchg
jg
xchg
mov
fsubs
repnz
xor
jl
adc
lret
fdivs
pop
sub
cmp
hlt
xor
outsl
xchg
lods
je
push
into
or
mov
xor
dec
sub
sahf
pop
xor
icebp
jl
rorl
in
sub
mov
pop
in
jo
imul
dec
mov
push
pop
adcb
movsb
pushfw
xchg
shlb
mov
sbbl
iret
push
ss
shll
inc
and
divl
hlt
sbb
int
movsl
mov
insb
pop
pop
pop
iret
and
int
hlt
add
mov
scas
xchg
ljmp
push
xchg
push
aam
or
ds
movsb
push
jbe
mov
mov
xchg
add
fbstp
dec
xchg
in
cmp
dec
add
nop
lahf
mov
pop
lock
inc
jl
popa
leave
pop
ja
dec
or
movsl
push
call
mov
mov
rorl
or
adc
cld
inc
add
or
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
jmp
stos
push
and
movsb
jnp
jge
xor
or
sbb
adc
jp
mov
xor
bound
shll
sbb
pop
jl
mov
daa
mov
in
jno
mov
fisttps
pop
xor
adc
push
emms
aaa
stos
xchg
xchg
xchg
mov
notb
adc
pop
add
or
jmp
out
leave
xchg
mov
insb
and
cmpsb
inc
rcll
add
gs
push
stc
push
pop
in
inc
int
push
popa
xor
cli
jae
inc
pop
jae
sarb
insl
int
cmpsb
dec
mov
xchg
dec
pop
lock
in
mov
jg
mov
loope
sbb
dec
push
sarl
pop
ret
sub
das
ja
icebp
repnz
icebp
sbb
hlt
ret
out
stos
imul
and
out
dec
loope
cmpsb
mov
jo
and
shrl
push
in
cmpsl
ret
cli
xor
mov
arpl
mov
or
das
leave
add
xor
popa
dec
jae
sub
or
adc
sub
jno
sub
int
sub
xchg
mov
imulb
and
movsl
out
dec
jo
push
sahf
fcmovu
stos
or
mov
std
dec
repnz
sub
out
sbb
movsl
adc
sarb
pop
mov
ljmp
out
icebp
fwait
mov
into
scas
stc
mov
es
out
mov
movsb
push
shr
lret
leave
cltd
and
dec
jno
popf
mov
inc
jecxz
insb
xor
loope
mov
cli
mov
and
mov
push
int3
cmp
into
jle
push
lods
int3
orl
testl
js
adc
daa
scas
dec
popf
leave
jns
insb
xchg
push
dec
jae
xor
push
xchg
test
mov
sub
sbb
sbb
jno
add
int
pop
dec
stos
or
xor
sub
lahf
adc
stos
int3
pop
jecxz
or
xchg
shrb
test
sti
jno
out
iret
xchg
jle
pop
pushl
push
cmp
mov
lret
test
pusha
out
call
xor
fimuls
fmuls
lret
stos
mov
sbb
roll
or
divb
shrl
mov
loopne
movsb
shll
cmpsl
xor
mov
rclb
xlat
cmp
jo
stos
ja
repnz
adc
pop
popa
inc
ljmp
shll
pop
mov
jns
add
xor
add
cmp
add
imul
clc
imul
lahf
movsl
cli
mov
push
cmpsb
rcrl
sub
sahf
pop
lret
inc
scas
mov
pop
jp
insl
into
inc
mov
xchg
add
inc
add
jb
xlat
aaa
or
mov
inc
xchg
ljmp
movsl
cwtl
sub
xchg
xchg
std
fsubs
jbe
leave
sub
mov
adc
mov
rep
jge
lock
out
push
adc
mov
push
mov
imul
fdivs
mov
xor
mov
push
insl
adc
pop
bound
pop
dec
jns
dec
push
pushl
mov
loop
adc
test
lret
xchg
and
pop
imul
test
xchg
subb
scas
pop
movsl
test
imul
loop
jge
mull
and
inc
adc
std
inc
fwait
jne
adc
pop
jge
or
mov
or
test
and
das
mov
jno
jb
dec
adc
insb
out
in
lret
imul
stos
int
popa
push
pop
jle
and
xor
adc
lahf
mov
or
mov
fndisi(8087
popl
fwait
ret
jg
into
xor
enter
pusha
test
add
xchg
jb
in
dec
inc
shll
inc
jmp
insl
dec
or
add
push
frstor
push
inc
fsts
sbb
gs
jmp
shlb
cmp
call
lret
aam
jecxz
push
add
cld
xlat
cmc
cmp
and
loopne
pop
test
nop
imul
jo
add
rcl
cltd
mov
fldpi
xchg
cmp
and
mov
hlt
cmp
adcl
in
out
incb
sarl
movsb
repnz
mov
jle
add
or
pop
fs
cli
jle
or
out
push
sbb
cmp
jno
mov
stos
lds
loope
call
jae
adc
push
xlat
mov
leave
or
sub
jne
imul
aam
mov
sub
mov
hlt
mov
push
dec
adc
lcall
fst
adc
push
rcrb
test
pop
mov
loopne
in
dec
mov
xchg
mov
test
mov
gs
fsubl
rsqrtps
fmulp
xor
sarb
enter
push
dec
stc
fcompl
popa
insl
imul
dec
ret
lea
inc
inc
stc
lret
js
dec
and
popa
push
ljmp
out
fmul
fdivl
pop
ret
and
dec
dec
mull
ficompl
xchg
xchg
jle
sbb
pop
jp
shlb
cli
inc
push
out
cltd
and
push
jmp
add
fisttpl
out
cmp
jnp
inc
inc
and
pop
push
stc
dec
sbb
pushf
mov
pop
push
leave
outsb
sbb
xor
or
into
xchg
jmp
mov
push
jecxz
pop
sub
pop
mov
ja
xchg
jne
xchg
lds
scas
pop
int3
or
pop
gs
movsl
jmp
hlt
js
aas
xchg
xlat
fwait
shll
sub
sub
dec
andl
andb
jg
loop
mov
adc
mov
negl
cmp
push
pop
lcall
pop
mov
xchg
sbb
pushf
xor
push
xchg
mov
ret
sbb
in
add
jb
xor
xchg
sbb
pop
jge
lds
jl
inc
repz
pop
inc
addr16
sbb
mov
mov
dec
sbb
jae
cmp
inc
jmp
push
cmp
loopne
or
and
xchg
pop
rcrb
lods
push
fisttps
and
push
repz
pop
dec
pop
fstpt
pop
push
sub
imul
in
sti
arpl
lock
dec
in
xchg
mov
pop
cs
pop
bound
std
and
inc
idivb
popa
jno
shr
push
jno
out
into
cmp
mov
mov
push
mov
sbbb
xchg
jmp
lea
ss
xor
push
mov
mov
lahf
or
or
jae
dec
in
sub
cmp
mov
mov
mov
mov
jno
notb
mov
shll
inc
push
cmp
pop
je
fisttpl
jl
and
enter
cs
movsl
cmc
pop
hlt
xchg
aaa
push
adcb
jae
clc
es
dec
test
leave
lret
pop
push
add
push
cmp
push
int3
rcr
push
mov
cli
sub
sub
jne
lods
sub
inc
push
ljmp
cmp
mov
or
fdivp
sbb
shll
xchg
add
dec
push
push
test
mov
ret
jmp
push
cmp
test
sbb
mov
jmp
lock
add
arpl
gs
addl
mov
rol
ljmp
dec
or
mov
xor
adcb
dec
test
jecxz
push
xchg
sahf
pop
js
dec
test
add
mov
outsl
mov
inc
or
pop
test
sub
mov
jge
cmp
call
into
adc
push
pop
cli
xchg
push
mov
inc
xor
push
inc
jmp
dec
ja
cltd
jg
pushf
adc
push
push
stos
dec
adcl
addr16
aam
incb
test
jbe
fsubrs
rclb
or
movsb
jge
addb
push
js
lahf
in
dec
inc
cmp
xor
call
pusha
and
jae
incl
divl
mov
xor
cmpl
in
mov
cmp
cltd
mov
add
or
pusha
jmp
jg
or
dec
aaa
jne
out
leave
sub
test
xchg
sub
mov
cmp
cmp
jmp
stos
ja
jo
dec
stos
incb
jne
or
xchg
in
movsl
outsb
call
flds
pop
popa
pop
or
or
jnp
mov
sub
gs
negb
lret
shll
pop
ret
fldcw
xor
cli
cmc
xor
test
orb
mov
adc
push
mov
pop
out
shlb
fwait
in
stos
insb
nop
cmp
xor
cmp
or
jbe
lods
push
outsl
loope
mov
jae
mov
repz
sub
shlb
sub
rolb
negb
adc
inc
jge
inc
cmp
sbb
lret
ror
cwtl
hlt
int
adc
push
orl
int
mov
sbb
sub
aam
sub
xchg
cli
inc
mov
hlt
mov
fcomip
pop
cmp
iret
call
fdivrs
dec
xor
jecxz
pop
xchg
push
lret
and
loop
pop
and
out
pop
or
imulb
insb
cmp
hlt
je
fs
cmp
add
iret
mov
ljmp
lds
jle
or
imul
push
insb
sub
jo
cmp
jecxz
xor
insb
push
add
imull
jnp
jl
test
xchg
xchg
in
pushf
mov
rcll
adc
sbb
mov
fdivl
push
rcrl
movsl
and
mov
mov
add
or
aam
movsl
cmc
push
pop
sti
testl
pusha
mov
sbb
aas
cmp
sbb
lcall
out
xor
push
cmp
pop
test
adc
imul
inc
pause
cmp
sarb
outsb
lcall
scas
pop
mov
sub
test
nop
aam
int3
and
dec
icebp
ljmp
lea
arpl
leave
fdivl
dec
cmp
xchg
loopne
insl
decl
cmpsb
adc
pop
jne
pop
sbbl
jae
cmc
jl
imul
add
push
fnstenv
or
out
fstp
pop
jnp
iret
stos
jp
and
push
jmp
push
mov
int3
cmp
xor
inc
cmp
inc
cmc
bound
dec
negl
stos
icebp
insl
or
aad
jae
inc
ret
xchg
pusha
pushf
mov
pop
cmp
insl
xchg
xchg
sub
jle
lcall
sti
insl
jnp
sbbb
rolb
inc
mov
std
testl
inc
addr16
and
addb
pop
inc
out
in
pusha
les
call
cmp
adc
xchg
aaa
jl
xlat
pushf
and
pop
xor
int3
mov
inc
xchg
xchg
ljmp
decb
sbb
movsl
dec
mov
mov
or
std
push
ret
cmpl
pop
pop
jbe
shlb
xchg
push
inc
and
movsl
push
mov
test
or
bnd
cmp
dec
lds
adc
jmp
sub
xorl
dec
in
paddsw
mov
mov
push
lahf
imul
or
fwait
scas
lret
and
addr16
add
repz
add
push
sub
and
jecxz
lret
pop
test
sub
clc
into
sar
inc
pushf
inc
test
mov
xor
movsb
int
mov
add
clc
sbb
xchg
push
sbb
jge
cmp
shr
ret
jbe
jne
cmpsl
or
xor
addr16
mov
lock
insl
mov
lret
lds
dec
push
adc
pop
out
jle
cwtl
xchg
push
xchg
or
mov
lret
or
add
jne
int3
cmpsb
mov
mov
mov
movsb
cmp
inc
xchg
and
sub
jle
stos
test
in
cld
inc
or
or
or
fcompl
xor
ret
ficompl
pop
loop
insb
mov
sub
inc
negb
stc
and
add
dec
ret
int3
scas
je
cs
fistl
scas
xchg
xchg
popf
dec
ljmp
add
push
pop
in
lret
in
pop
xor
push
repnz
sbb
aas
jecxz
popf
aam
test
mov
iret
leave
cmp
pusha
add
jg
mov
in
push
aad
mov
xor
pop
aaa
cmpsb
movsb
push
int
push
adc
out
inc
and
roll
xchg
mov
aas
xchg
xchg
rorl
cmp
imul
mov
xchg
dec
ljmp
jl
pop
xor
and
ret
data16
scas
lret
sbbb
jmp
jg
sub
inc
outsb
test
mov
fwait
arpl
dec
xchg
dec
iret
test
leave
and
in
rol
xchg
shl
xor
add
mov
mov
or
mov
rorb
jo
xchg
push
cmp
xchg
mov
cmp
pop
pop
aam
cmp
jo
xor
pop
icebp
cwtl
adc
pop
sub
dec
jns
adc
inc
sub
jp
sub
out
lods
sub
jp
loope
mov
jbe
sarb
fisubrs
sub
mov
inc
jecxz
les
sti
inc
movsb
sbb
jne
loope
and
jne
outsb
mov
jnp
mov
pop
mov
xor
lret
neg
mov
addl
dec
movsl
std
push
out
cmpsl
inc
adc
and
pop
in
stos
inc
outsb
cmp
cs
jnp
jnp
jbe
std
or
call
mov
into
sar
inc
mov
out
mov
pop
leave
hlt
inc
push
mov
aam
push
pop
dec
jg
movsb
loopne
xchg
das
dec
mov
cmp
or
cmp
fldenv
add
cmpsb
es
push
cmp
xor
fnstenv
inc
ljmp
cltd
movsb
test
and
cmp
lock
xor
jae
adc
sbb
ljmp
adc
jg
scas
inc
dec
test
in
pusha
clc
push
mov
aad
or
out
adc
sahf
or
mov
inc
insl
mov
sahf
sahf
repz
sbb
or
out
cwtl
pop
loope
mov
mov
cmp
jo
scas
mov
pop
jns
cli
cmpsb
das
sub
repnz
or
sbb
shrb
xlat
imul
and
or
das
jl
push
push
pop
sub
mov
cwtl
ret
jne
add
shll
subl
pop
mov
and
xchg
notl
test
arpl
fiaddl
nop
inc
mov
in
inc
fsubrl
mov
rcr
xchg
jnp
rclb
int3
or
cmpsl
out
ja
sti
and
adcl
leave
sbb
sar
mov
xor
pop
sbb
or
adc
test
lret
imull
sub
xor
dec
mov
push
cltd
fcoms
nop
cmpsl
fsubr
mov
cmp
movsb
pop
out
or
les
ss
or
and
nop
fsubr
cwtl
aad
xchg
or
fucomp
loop
mov
aaa
adc
xchg
mov
fdivrl
xchg
cli
pop
int3
mov
addr16
gs
shrb
mov
inc
mov
push
mov
out
xlat
fidivrs
xchg
push
cmp
cmpsb
inc
cld
jb
icebp
cmpsb
mov
or
fwait
stc
insl
xchg
mov
xchg
cli
xchg
pop
pop
and
mov
mov
sahf
ret
fcomps
inc
adc
outsl
aas
je
outsb
imul
out
mov
sub
outsb
cmp
lods
xor
and
add
imul
push
xor
in
in
iret
adc
adc
pop
xchg
insb
dec
cli
repnz
movb
in
je
hlt
dec
movsl
scas
jb
test
sti
mov
aam
dec
aad
push
mov
cld
mov
cmp
inc
jae
pop
cmc
push
notl
leave
mov
mov
mov
cmp
mov
sbb
rcl
pop
stos
insb
test
xchg
leave
scas
fnsave
pop
ret
xchg
mov
push
iret
jmp
call
mov
add
sbb
ljmp
pop
xor
stc
add
mov
pop
xchg
inc
data16
ret
ret
mov
negb
push
mov
push
add
or
leave
pop
dec
scas
dec
xchg
gs
int3
mov
mov
imul
sahf
adc
enter
lock
lock
jge
or
xchg
inc
sub
fs
sbb
mov
sbb
stos
mov
push
adc
xor
sahf
lar
push
sbb
pop
mov
in
mov
js
xor
pushf
cmp
icebp
imulb
es
add
or
daa
ret
out
xchg
xchg
sbb
adc
mov
aaa
fsubrl
xor
xchg
xlat
cltd
adc
lret
sbb
fistpll
sahf
xchg
jns
xchg
lahf
sbb
ficoml
mov
leave
in
jnp
jl
insb
sbb
jnp
push
jns
ds
mov
pop
pop
ret
sbb
pop
test
cmpsb
pop
lahf
cld
jb
fisttpl
pop
cmp
pop
jp
xor
rcll
adcl
cmp
hlt
xor
ljmp
fistpll
lahf
fisttpl
cmpsl
cmc
mov
mov
cmpsl
int
in
aaa
lock
mov
or
xor
rcl
push
or
testb
bound
xchg
aam
xchg
cmc
cld
sub
cmp
daa
mov
jmp
adc
xchg
jg
add
rcpps
sarb
adc
xchg
adc
mov
rcrb
sub
stos
movsb
push
xor
lds
lret
aaa
popa
cli
add
sti
dec
xchg
cmpsl
jl
repnz
mov
mov
mov
or
or
movsl
sub
xchg
push
into
aad
sub
pop
dec
add
jmp
cmc
fldcw
shrb
fcmovne
sqrtps
arpl
shrl
cmp
cwtl
movsb
mov
test
dec
call
mov
or
fmuls
hlt
repnz
data16
in
in
adc
insl
push
mov
jge
adc
jp
sub
scas
sub
fwait
jns
push
sti
mov
fbstp
mov
dec
test
pop
mov
pop
xor
mov
sbb
aam
cs
scas
stos
jae,pt
jl
or
mov
stc
frstpm(287
dec
jb
and
movsb
std
sbb
add
icebp
xor
ljmp
cs
lret
cmp
ja
mov
xchg
ds
push
in
mov
js
fisubs
stos
mov
ficomps
dec
sti
mov
rcl
push
fimull
flds
pusha
pop
stos
cmp
shrl
repnz
mov
imul
dec
sbb
xchg
push
insb
jge
sbb
ret
ret
mov
dec
in
dec
aam
stos
scas
jno
dec
imul
mov
add
lret
sub
xchg
adc
out
xchg
stos
pop
fdiv
sbb
test
clc
pop
addr16
call
loope
dec
and
stos
push
lods
aam
mov
daa
xlat
in
pop
pop
dec
pop
jmp
inc
push
mov
in
out
out
pop
jp
push
jl
mov
sarl
jo
sub
xchg
gs
inc
and
rcrl
insl
cwtl
mov
lock
mov
jl
scas
mov
addr16
lcall
pushf
lods
mov
filds
xor
fs
mov
mov
orb
pop
bound
fldcw
fmull
xor
pop
add
je
repz
and
mov
push
sub
inc
in
mov
dec
in
out
enter
pop
test
aaa
adcl
dec
mov
lds
cmp
inc
mov
pusha
mov
leave
out
sub
loop
inc
push
adc
lea
xchg
sbb
mov
in
push
mov
jge
inc
orl
lods
mov
pop
jo
cltd
shl
sahf
cmp
std
cmp
dec
or
mov
repnz
cltd
sub
push
adc
cmpsb
out
mov
loop
jb
stos
iret
push
xchg
jge
sbb
les
dec
sbb
mov
inc
push
test
rorl
stos
pop
test
loope
shl
cwtl
mov
test
mov
cmp
push
inc
into
shll
stos
fs
inc
sub
adc
pop
push
push
scas
pop
insl
jle
inc
out
xor
andb
adc
repz
cwtl
movsl
nop
std
lds
mov
not
repnz
mov
cmp
cmp
mov
rorb
lock
scas
xchg
mov
cmp
ja
jae
fsts
xor
mov
adc
jae
sbb
adc
adc
adc
jno
clc
in
aad
mov
les
xchg
add
je
ljmp
imul
std
imul
sbb
adc
and
int
aaa
push
mov
cmp
jg
xchg
adc
dec
cltd
dec
pop
jb
ss
jp
scas
or
and
or
cmpsb
hlt
aas
loopne
sub
inc
mov
and
insb
out
sbb
shll
gs
out
cs
jp
add
lock
aad
outsl
sti
pusha
xchg
jmp
sahf
jg
fwait
cld
jg
add
std
fs
jnp
dec
ret
addr16
repnz
aaa
rcll
adc
rorl
ret
fs
cmpsl
adc
jne
mov
push
and
imul
sub
sub
mov
or
ja
out
xor
sbbb
add
pushf
push
aam
mov
inc
repz
cmc
sbb
mov
jnp
lock
aaa
cs
mov
cli
pop
mov
xor
xchg
adc
push
sbb
push
pop
cmp
notb
test
add
cmp
jmp
jb
or
add
sahf
int3
mov
aas
xor
fmull
adc
in
xor
inc
in
xchg
shlb
lods
xchg
mov
gs
into
leave
dec
aaa
cld
callw
cwtl
imul
enter
test
hlt
dec
into
jl
icebp
mov
add
sub
sub
add
add
addr16
push
mov
mov
adc
sbb
scas
push
fdivl
insl
or
repnz
decl
std
and
pop
fdivrl
ljmp
pop
mov
jl
aaa
lock
andb
add
push
xorb
mov
popa
mov
clts
dec
add
jb
mov
push
out
xchg
loopne
aad
ljmp
xchg
push
sbb
fcmovbe
pop
jne
mov
lcall
test
inc
aaa
push
pop
or
dec
adc
pop
pop
xchg
nop
push
aad
in
into
push
pop
ficoms
sbb
movsl
lahf
adc
inc
push
cli
push
jne
es
fst
jmp
inc
das
aaa
adc
lods
pop
and
fcomp
dec
and
push
bound
mov
cmp
mov
jmp
sbb
mov
sub
mov
popf
xor
inc
sbb
dec
popa
repz
subb
lods
aam
mov
ljmp
or
rep
push
out
mov
addl
dec
cmp
imul
dec
add
lock
adc
data16
cs
xchg
out
cltd
addb
pusha
sub
inc
sub
mov
dec
call
sbb
into
push
fsubs
popa
xor
cld
aam
sub
inc
add
add
add
out
mov
std
pop
ss
cs
push
jle
out
mov
leave
pop
jb
int
bound
outsl
lcall
stc
stc
incl
in
pop
inc
mov
lret
sub
mov
sub
dec
fwait
pop
mov
xor
pusha
rcr
flds
rclb
clc
sub
adcb
pmulhuw
xchg
push
lock
stos
ljmp
sub
test
rcr
xchg
nop
arpl
fs
insb
cltd
xchg
xchg
pop
into
lods
icebp
mov
mov
clc
clc
cmp
inc
or
daa
pop
mov
andl
add
inc
imul
imul
sahf
hlt
push
and
insl
hlt
cmp
stos
in
push
sbb
js
dec
bound
in
aad
loop
rorl
ljmp
xchg
ja
mov
and
scas
aas
ljmp
xorb
fdivs
pop
jle
xchg
xchg
inc
lcall
push
add
cmp
and
cmp
cmp
int3
mov
call
test
subb
outsb
cmpsl
fs
ret
mov
push
inc
mov
push
pop
add
cmpsl
es
jecxz
movsl
sti
fcoms
cmpsl
sub
fs
mov
push
ss
xchg
lret
lock
in
push
divb
getsec
xchg
test
loop
arpl
stc
lods
ret
adc
jecxz
jle
fldln2
test
mov
inc
push
je
jb
lcall
mov
mov
sbb
pop
xor
pop
push
popf
repnz
adc
out
testb
add
mov
mov
test
loope
and
loop
push
mov
lret
inc
adc
lods
mov
mov
mov
or
dec
mov
cltd
xlat
fwait
imul
adcl
ss
mov
adc
xchg
stc
lahf
mov
mov
mov
pop
jnp
iret
jl
mov
push
scas
adc
ret
or
sbb
push
daa
and
pusha
out
pop
test
movsb
sarl
fidivrl
jmp
jecxz
sub
xchg
test
jecxz
decl
push
and
mov
lds
addr16
fisttpll
sub
sub
loope
imul
push
add
fmull
pop
mov
push
dec
ds
mov
iret
clc
or
sbb
pop
mov
je
add
sub
js
popa
push
int
push
call
pop
mov
aam
mov
into
imul
jl
icebp
or
insb
xor
mov
shll
dec
lea
jp
jle
jnp
cmp
or
xchg
xlat
push
mov
and
nop
aaa
push
jns
push
mov
adcl
in
cwtl
pop
fdecstp
sbb
xbegin
xchg
sub
arpl
mov
or
lea
aam
push
filds
cli
fcoms
pusha
or
out
fs
sbb
fmuls
aas
aam
movsl
inc
mov
rcrb
jo
lret
cmpsl
inc
imulb
push
cwtl
jne
int3
mov
dec
ret
daa
and
inc
cli
adc
lds
lods
xor
mov
mov
pop
push
xor
cmp
dec
insl
sub
jae
sbb
sbb
leave
or
sbb
pop
cmp
loopne
nop
ficompl
inc
shrl
sahf
or
mov
mov
dec
xchg
pop
and
dec
fs
mov
daa
outsb
mov
movsl
popa
out
pop
in
pusha
jno
jecxz
push
hlt
test
call
es
xchg
stc
imul
push
in
pop
inc
and
lock
sbb
les
pusha
mov
xor
push
les
mov
mov
loopne
mov
idivb
pushf
push
or
popf
cwtl
push
insb
sub
inc
call
add
dec
cmp
clc
mov
out
mov
sahf
lret
xor
cmp
push
iret
repnz
mov
dec
enter
sbb
push
push
mov
jp
mov
push
pop
clc
popa
inc
movsb
or
outsb
je
inc
out
sub
mov
sarl
pushf
stos
adcb
xchg
push
aas
sub
stos
or
jb
js
jg
push
hlt
es
add
push
data16
and
xchg
out
in
mov
add
xchg
mov
pop
ficoml
pop
pop
in
xchg
pop
push
sub
mov
ret
xchg
adc
adc
inc
adc
aad
into
cli
pushf
mov
test
or
pop
mov
dec
cld
inc
jge
xchg
jae
mov
test
jp
orb
adc
cmp
sbb
sbb
mov
push
xlat
int3
push
push
mov
mov
daa
and
inc
mov
pop
cmp
push
data16
test
pop
inc
dec
insl
into
les
xor
in
fnsave
cwtl
push
sbb
jp
sub
and
call
int
xor
mov
repnz
push
iret
cmpsl
or
fsubl
andb
das
or
jg
ret
adc
xor
add
not
int3
sub
cmp
mov
loopne
call
cmp
xchg
mov
push
std
les
adc
xchg
int
int
mov
scas
test
arpl
mov
sub
dec
mov
and
xchg
sub
bound
addr16
lret
cli
pop
insb
or
or
add
ret
adc
dec
add
push
xchg
jb
aaa
mov
shrb
pop
or
add
xchg
inc
test
scas
shr
movsb
fstps
mov
lods
add
push
jmp
jb
pop
add
aam
xor
jo
or
mov
mov
movsb
insb
into
mov
and
adc
or
mov
cwtl
lods
cmc
rcl
test
push
cmp
ret
faddl
movsb
dec
jl
je
cmp
and
xchg
stos
insb
push
inc
push
dec
lock
mov
shrb
sti
imul
aam
dec
imul
xchg
sub
jbe
mov
dec
pop
jbe
inc
clc
add
push
fisubrl
incb
sti
xchg
pop
gs
or
pop
movb
mov
cmp
jmp
in
rclb
divb
repz
popa
lods
lods
clc
xor
xor
inc
xchg
lcall
add
aas
xchg
pop
shrb
hlt
std
insb
loop
mov
or
or
xor
jp
adc
sub
sub
aad
or
imul
arpl
sub
mov
pop
mov
mov
xor
and
add
add
rol
pop
sti
sti
or
rcrb
cmpsb
push
or
std
mov
das
cmc
les
xchg
lock
test
push
jmp
lret
adc
adc
lret
cmp
push
add
adc
aaa
pop
jmp
test
adc
push
arpl
sbbl
pop
dec
adc
int
xor
jns
xchg
mov
stos
or
pusha
jo
imul
prefetcht2
jmp
aas
or
repz
jbe
in
arpl
out
loopne
clc
xchg
push
and
or
lret
push
add
ja
imul
sbbb
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
mov
cmp
sbb
test
jns
inc
pop
std
jns
adc
jp
cmpsl
mov
hlt
bound
mov
xorb
xor
ror
lret
addr16
xor
lahf
aam
std
cs
lahf
add
pop
inc
fwait
push
push
lods
or
mov
arpl
pop
push
jmp
or
push
mov
push
or
scas
stc
fsubrs
mov
mov
lret
pop
movsb
push
popa
mov
push
nop
inc
cmp
std
mov
xchg
mov
rcll
dec
dec
cmp
sarl
mov
pop
cmp
shrb
mov
imul
fwait
cmp
jbe
pusha
pop
cmp
out
lock
in
test
jle
sbb
or
xor
sub
arpl
dec
lods
insb
ss
pop
and
mov
nop
xchg
sub
and
imul
fldcw
outsb
sbb
pop
ds
cmpb
and
out
ss
xchg
mov
cmp
mov
in
decb
addr16
test
pop
ss
push
adc
movsb
or
in
std
mov
sarl
fists
or
add
out
sbb
mov
xor
fbld
je
xchg
dec
mov
cld
sub
cmc
dec
mov
mov
xor
pop
dec
mov
testb
and
adc
bound
ljmp
ljmp
test
mov
mov
xchg
xchg
mov
out
repnz
aas
mov
add
push
aad
sbb
rcrb
ljmp
sbb
mov
hlt
cmpsl
test
sbb
int3
mov
sub
loop
mov
and
movsb
mov
sbb
push
add
sub
insb
adc
loop
fcomps
lahf
sbb
jnp
pop
repnz
scas
push
sub
xchg
lret
cmp
push
push
pushf
lods
jle
push
out
cwtl
or
xor
xchg
and
arpl
orb
imul
sub
fs
xchg
inc
xchg
xor
inc
rcrl
xchg
cs
fs
mov
push
cmc
imul
stos
loop
stc
stos
add
xor
movsb
sbb
jno
gs
cmpsl
imul
lods
cli
mov
mov
xor
and
pop
out
add
pop
jecxz
or
inc
pop
cmc
sbb
dec
xlat
test
iret
leave
aad
lcall
jne
sub
add
pop
pop
in
ja
mov
xor
xchg
jecxz
pop
test
dec
pop
hlt
cld
push
fsubrl
dec
or
int3
fisttpll
mov
shll
adc
or
dec
mov
add
fyl2x
xchg
fildl
mov
test
push
pop
lods
jle
sbb
mov
aas
pushf
xchg
gs
dec
mov
aas
dec
sub
xadd
jl
sub
in
icebp
add
in
popf
xchg
sbb
outsl
mov
repz
inc
fistpll
mov
iret
dec
pop
mov
pop
popf
fsubrl
shlb
gs
aam
test
pop
ss
jmp
push
adc
mov
push
popl
or
es
push
jne
adc
add
sbb
imul
jg
icebp
test
push
cmpsb
xchg
mov
jns
add
push
sbb
scas
pop
pop
arpl
mov
in
flds
leave
shll
dec
pop
sub
mov
sti
sub
inc
push
dec
mov
int3
mov
mov
cli
ret
cmc
adc
and
mov
lret
sbb
pop
inc
push
inc
push
dec
add
mov
mov
adc
mov
insb
dec
lcall
jnp
push
cmpl
jl
adc
or
jg
in
dec
push
ror
jp
push
xor
testb
push
adc
lret
je
dec
mov
dec
mov
and
mov
adc
hlt
shr
push
xchg
outsl
jae
mov
popf
and
int3
sub
stos
xchg
and
aad
xchg
sbb
repz
dec
lret
push
dec
and
test
xor
hlt
inc
mov
pop
pop
ss
cltd
jge
negl
jge
add
ja
jo
ja
fwait
cmp
pop
in
imul
xor
leave
in
aas
ljmp
xor
add
aad
jo
inc
push
xchg
sbb
outsb
pop
adc
inc
inc
mov
gs
std
mov
int3
xlat
xchg
stc
ret
push
xchg
or
movsb
shrl
sahf
mov
cmpsl
mov
ds
call
lahf
fwait
adc
rol
nop
les
std
pop
daa
cmp
cs
out
cmp
push
imul
push
sbb
movsl
test
cmp
push
stos
pop
xchg
xor
mov
mov
nop
inc
cmp
fistl
daa
dec
jg
jg
mov
repz
fisubrs
mov
xchg
ds
inc
fwait
xlat
mov
xor
sbb
std
stos
test
stos
shrl
sub
inc
mov
pop
inc
adc
das
or
inc
insl
ror
push
inc
sbb
inc
mov
jmp
fstp
aam
addr16
add
aad
add
popf
nop
cmpsl
cmp
sbb
mov
push
xor
mov
push
out
push
jp
leave
and
xlat
call
ds
insb
adc
mov
stc
aam
mov
push
xor
cmp
daa
lahf
or
cmp
add
repz
push
subb
icebp
stos
shrl
test
xor
test
jmp
test
loope
addr16
pop
mov
lods
add
mov
stos
out
loopne
test
adc
lea
or
leave
push
mov
push
cmp
xorb
inc
mov
gs
fs
jecxz
jnp
jnp
inc
inc
adc
fistps
mov
cmp
and
sbb
mov
fwait
outsl
pushf
xchg
fcomi
lret
or
push
cld
adcb
sbb
aam
jnp
js
adc
add
rcrl
xchg
ret
pop
in
push
mov
test
jp
mov
mov
adc
adc
test
stos
xchg
mov
lret
in
mov
loop
adc
fidivs
movsl
lret
clc
adc
cmc
cltd
jg
jge
ret
xlat
cmp
adc
pop
pop
enter
std
inc
pop
in
add
sub
xor
mov
xor
cmovl
dec
and
std
das
popa
jb
cmp
test
or
push
sub
cs
mov
cmp
es
movsl
int3
fldcw
cmp
inc
xor
shll
xchg
ret
mov
inc
xor
mov
xlat
out
xchg
and
call
mov
pop
leave
shl
cmpsl
push
adc
hlt
test
add
ret
movsl
lea
imul
jo
adc
adc
push
mov
pop
cmp
dec
mov
outsl
or
adc
lret
js
dec
jns
mov
fnstsw
imul
fmul
dec
scas
pop
push
in
ficoml
shll
push
dec
inc
icebp
pop
cmp
jno
xor
xor
or
and
mov
fcoml
and
cmp
mov
pop
mov
jl
cmp
dec
push
addr16
orl
lods
popf
popf
orb
jo
and
push
xchg
jno
movsb
xlat
sub
nop
fsubrs
mov
mov
pop
xor
fmuls
aaa
div
push
popa
xchg
xchg
sbb
jmp
stc
sbb
movsb
cmpsl
xchg
adc
out
sub
shr
mov
test
pop
xchg
ret
or
jmp
inc
bound
inc
jns
rcrb
std
mov
es
mov
lods
fists
mov
mov
insl
push
cli
and
mov
cmpsl
push
add
xchg
stos
insb
in
test
push
jle
mov
jl
cmp
fs
cmpsb
mov
fmul
in
jle
scas
popa
and
pusha
mov
test
stc
jnp
jb
loopne
jle
pop
or
pushf
es
jecxz
mov
mov
imul
sbb
divl
inc
pop
out
xchg
hlt
inc
push
movsl
sub
popf
out
inc
mov
out
cmp
decb
daa
pop
popa
add
outsb
cwtl
int
outsb
pop
inc
fmul
cs
addl
push
lea
push
notl
cmp
sub
xor
push
push
shlb
rcrb
push
pop
or
adc
cmp
jmp
lods
pop
mov
jns
movb
cs
adc
cmp
andl
inc
lods
fcomps
push
cmp
inc
inc
push
int
sub
fstpl
lahf
xchg
xor
leave
inc
rclb
cmp
cmpsb
sbb
int3
sbb
aad
fwait
sti
into
sti
aas
adc
in
arpl
mov
movsb
out
sbb
fwait
xchg
or
fldcw
add
dec
xor
add
icebp
xchg
cmp
sub
cmpsb
outsl
and
movb
cmp
mov
addb
mov
sbbl
jl
mov
adcl
mov
jo
inc
sub
popa
mov
mov
inc
loopne
arpl
adc
lcallw
dec
xchg
cmp
and
or
xor
test
sti
iret
dec
or
gs
aas
stc
sbb
repz
dec
xchg
mov
lret
add
movzbl
roll
push
test
adc
bound
xlat
sti
push
xchg
xchg
mov
fdivs
addr16
rolb
ljmp
push
in
push
outsl
out
sti
push
rorb
push
fstl
and
mov
xchg
sub
jbe
imul
inc
outsl
mov
vmovupd
popa
pop
add
in
sti
mov
sub
pushf
inc
js
roll
ror
sub
aaa
dec
loopne
dec
cld
mov
xchg
shll
jo
shrl
jmp
sub
xchg
xor
mov
sub
pop
jns
pop
scas
jae
inc
imul
mov
int3
jp
addl
in
dec
les
push
jle
imul
xor
cmp
push
adc
lcall
push
mov
xchg
dec
in
sbb
mov
mov
ret
xchg
pop
pop
and
adc
push
or
dec
fmuls
lret
in
jge
add
push
loopne
sbb
jns
jle
xchg
push
daa
scas
repnz
scas
mov
cmp
ret
push
push
mov
mov
jae
xchg
mov
cmp
cmpsl
dec
add
out
or
xchg
xchg
in
outsb
jmp
add
pop
andl
sub
add
pop
push
or
sarl
incl
xor
std
les
lret
clc
mov
push
push
and
push
and
xchg
xchg
jne
fldcw
aad
xchg
inc
nop
daa
hlt
orb
mull
or
cmp
inc
stos
sbb
lds
mov
testl
ss
aad
fidivl
daa
clc
out
rorb
xor
jge
lods
std
sbb
shrl
shrl
or
loope
icebp
aam
cmp
adc
aaa
int
jecxz
stos
push
push
lcall
out
pop
dec
arpl
cmp
inc
popf
test
add
mov
call
dec
push
xor
je
xor
jbe
sbbl
mov
sub
push
dec
mov
test
mov
dec
inc
xchg
dec
call
and
xor
dec
popa
and
imul
sbb
rcrb
push
add
dec
nop
test
lahf
add
push
pop
jbe
cmp
mov
mov
lcall
add
clc
notb
adc
mov
into
sub
scas
mov
shl
divb
or
mov
sub
push
mov
test
pop
sbb
xchg
test
push
enter
or
mov
sub
or
jmp
add
sub
loopne
pusha
mov
mov
and
aad
lret
sub
lcall
pop
rol
cmc
out
xor
aas
jne
out
and
addb
mov
je
cmpsb
cld
insl
xor
pop
lods
pushf
stc
sbb
xor
sahf
scas
fistpl
psubsw
jl
enter
imul
lods
cmpsb
xor
ret
inc
mov
aaa
mov
jl
mov
sbb
mov
mov
mov
mov
inc
add
jns
dec
sbb
lcall
in
jp
scas
xchg
sti
lds
lods
push
push
repz
push
adc
and
outsb
test
mov
lret
stos
mov
arpl
or
push
fbld
xor
mov
stos
inc
pop
rorl
pop
xlat
out
inc
popf
lahf
pushl
fildl
cmpsb
mov
in
out
aam
out
or
mov
dec
aas
into
jns
nop
xchg
pop
pop
dec
iret
les
movsb
pmaddwd
aas
push
cmpsl
aad
aam
cmpsl
sbb
aam
es
cmp
dec
cmp
fidivs
mov
das
adcl
xor
mov
addr16
pop
leave
orl
mov
fwait
repnz
push
xor
cmp
hlt
data16
pop
aad
push
jmp
sbb
mov
push
pop
jle
xor
int3
inc
push
push
mov
mov
stos
push
mov
or
pusha
pop
xchg
stos
jae
orl
xor
add
mov
inc
iret
dec
leave
loope
jecxz
dec
jg
imul
outsb
loope
movsl
cs
jo
incb
fs
inc
jg
mov
les
pause
lret
cmpsb
xchg
dec
inc
cmpsb
lcall
and
test
cmp
js
sub
jle
cmp
fbstp
loope
aam
add
shl
in
and
or
fisubrl
repz
shlb
fistpl
mov
push
push
dec
stc
adc
jnp
testb
mov
adc
call
movsb
push
or
mov
call
jnp
je
rclb
dec
stc
mov
repz
cmp
cld
aas
roll
clc
xor
cmc
out
dec
fld
pop
push
dec
lods
xchg
dec
out
inc
dec
push
cmp
nop
push
imul
xchg
jl
test
adc
imul
push
lret
mov
sahf
pop
adc
popa
bound
lods
test
mov
test
inc
sbb
fstpl
and
cmp
or
mov
popf
lcall
cmpsl
xchg
push
mov
in
andnps
scas
in
inc
std
jno
and
xchg
xor
xor
xchg
outsl
or
fcomps
mov
mov
cs
divb
adc
lods
mov
pop
test
mov
mov
sbb
ljmp
push
stc
out
stos
push
jle
mov
push
xchg
or
nop
inc
jmp
int
lret
push
enter
pop
sbb
out
dec
in
push
repnz
aam
sbb
test
outsb
out
xor
hlt
mov
or
insl
aaa
cmp
lea
jb
loopne
pop
xchg
inc
test
adc
in
lock
sbb
push
in
es
push
inc
outsb
icebp
incl
sti
adc
cmpl
pop
mov
hlt
cwtl
or
clc
mov
jmp
gs
call
daa
and
cmpsl
pop
pop
out
fstps
fidivl
ljmp
enter
pop
decl
fnstsw
jg
xor
add
sbb
aam
int3
test
lahf
xchg
in
fldcw
push
nop
cmp
movsl
mov
pop
decl
imul
jle
enter
and
mov
add
pop
repz
xchg
movsl
dec
sahf
ret
movsb
int3
add
mov
sbb
stos
pop
out
out
pop
into
mov
into
pop
pop
mov
adc
loope
pop
es
xchg
cwtl
aaa
mov
pop
sub
ds
cmp
lock
push
xchg
jnp
jns
inc
cld
shlb
cli
lcall
or
insl
sub
sti
and
lret
jmp
add
out
adc
cmp
lods
loope
in
hlt
gs
lods
cmc
add
pop
xchg
es
pop
cmpsl
lret
shlb
lds
mov
inc
ja
out
loop
sub
in
and
btc
xor
cmp
es
lea
sbb
imul
stos
jle
jo
mov
add
stos
call
imul
or
push
add
fs
shlb
stos
pop
pop
cmp
jns
push
push
or
decl
xchg
cltd
out
sti
test
add
cltd
cmpsb
in
pop
out
daa
fildll
and
adc
or
push
sar
push
cli
mov
fwait
incb
add
rep
dec
sahf
sub
push
popf
mov
lahf
rorl
or
ja
mov
fcompl
cli
fistps
mov
adc
ret
and
sub
mov
shr
jecxz
push
or
mov
in
out
dec
sub
ret
fld
dec
xor
adc
dec
pop
push
push
sbb
push
xor
jb
loopne
jne
aam
xlat
sbb
js
adc
test
test
mov
xchg
test
or
jo
jl
test
push
inc
and
jmp
lods
shr
push
mov
mov
popa
cltd
mov
pushf
outsb
or
add
jne
das
push
mov
js
and
cli
push
movsl
hlt
push
pop
insb
std
push
inc
adc
xchg
or
inc
mov
xchg
lds
test
mov
sahf
in
ljmp
int3
add
jae
push
cli
pop
dec
jl
call
inc
arpl
pusha
push
xchg
outsl
aas
fstpl
add
push
xchg
clc
push
mov
push
xor
sti
pop
dec
push
push
mov
jg
sbb
daa
movsb
push
stos
scas
adc
and
xchg
mov
scas
mov
sbb
mov
scas
popa
aam
add
or
loop
xchg
outsl
add
scas
imul
pop
popa
or
lock
cmpsl
sahf
lds
pop
imul
into
sbb
pop
cmp
nop
repnz
and
shlb
jo
stos
aas
cltd
sti
ljmp
outsb
lds
push
lea
push
dec
inc
nop
movsb
test
shrb
test
xor
and
cwtl
nop
scas
loope
enter
adc
push
pop
jae
ret
mov
lods
sbb
inc
dec
inc
xchg
insb
mov
cmp
push
pusha
sub
xlat
loop
enter
xchg
insl
mov
mov
mov
scas
push
and
jnp
or
ficomps
mov
inc
outsl
gs
leave
xchg
sbb
sarl
pop
int3
xor
mov
pop
daa
cmp
mov
stos
daa
addb
push
pop
dec
add
iret
jl
fnstsw
aam
pusha
mov
lds
loopne
inc
cld
mov
mov
mov
cli
add
lods
lea
sbb
mov
fcomp
dec
jns
jecxz
mov
and
xor
sub
enter
pop
int
xor
dec
in
rclb
nop
lock
or
mov
mov
cmp
and
cs
jno
inc
jo
push
push
hlt
sbbl
jnp
or
in
imul
clc
xor
dec
pop
xor
fbstp
loopne
lods
cmp
cmpsb
stos
xor
mov
into
shrb
push
scas
out
sub
jnp
fsubs
pop
lock
lret
add
dec
or
xlat
pusha
inc
and
sbb
enter
and
dec
sahf
jne
andl
inc
ret
pop
cli
rcl
xchg
cmpb
lret
jb
aaa
scas
incb
jae
xor
or
pop
iret
insl
cwtl
sub
pop
xchg
add
mov
mov
push
fdivs
test
sti
pop
push
in
jl
fs
dec
nop
xor
bound
jmp
orb
imul
push
add
cmc
jmp
sub
in
ss
mov
mov
sbbl
pop
mov
mov
cmp
push
mov
xchg
jbe
lods
sub
ljmp
and
iret
dec
xchg
adc
mov
jbe
call
in
cwtl
pushf
push
fbstp
pop
cmp
jbe
add
and
dec
lock
and
clc
insl
leave
push
popf
cmpl
dec
sbb
mov
rorl
jae
add
jecxz
loope
xor
imul
popf
and
xchg
sbb
insl
mov
hlt
push
jmp
dec
and
cmp
lcall
out
popa
icebp
movsb
and
cmp
push
in
mov
inc
cmpsb
loop
repz
stc
cmp
mov
sbb
dec
lds
xor
dec
repnz
and
stc
orb
inc
inc
push
mov
push
outsb
fsubl
xlat
push
and
xor
push
or
shl
cmp
mov
push
xor
jge
xchg
in
fstpt
dec
seto
mov
lahf
pop
insb
xor
or
sub
mov
push
out
fwait
dec
xchg
scas
lcall
mov
iret
push
jbe
mov
inc
stos
js
pop
shlb
push
cs
mov
mov
daa
xor
gs
cmp
sub
xchg
in
or
pop
icebp
cmpsl
in
clc
mov
dec
xor
test
pop
mov
sbb
xchg
mov
repnz
popf
xor
cmc
xchg
pop
lret
mov
cltd
adc
lock
nop
inc
add
add
cltd
je
orl
roll
fdivrl
iret
fisubrs
ja
scas
arpl
and
idivl
ja
xor
mov
dec
in
lret
stos
lods
loop
gs
lea
js
sbb
mov
lea
aad
inc
ljmp
imul
pop
push
and
out
add
jns
sti
lret
push
xor
lea
aaa
lahf
adc
xchg
mov
mov
sub
push
mov
ds
cmp
lcall
add
shr
pop
inc
push
fistl
mov
or
mov
inc
cmpsl
sbb
dec
sbb
mov
out
jns
add
sub
inc
mov
lea
adc
lret
push
adc
or
adcl
sbb
jns
lcall
lock
and
sahf
inc
push
pushf
jo
ljmp
loop
sub
stc
xor
or
stos
mov
loopne
cld
decb
push
adcl
xchg
push
mov
in
inc
dec
mov
je
scas
add
sbb
push
fs
es
mov
pop
loopne
in
dec
add
pop
dec
les
jle
add
dec
adcb
push
shrl
cli
insl
clc
or
cmpsb
sbb
push
int
out
mov
nop
cld
add
sbb
aaa
xchg
push
sub
mov
dec
xchg
test
ds
sbbl
out
lret
and
cmp
cmpsb
xchg
push
fwait
lsl
mov
sub
dec
xchg
adcb
xlat
push
pop
mov
leave
mov
insw
loope
sbb
add
lcall
ret
cmp
jb
dec
push
jbe
lahf
aam
cmpsb
movsb
stc
mov
std
mov
mov
int
shll
jge
cmc
mov
jno
xor
les
mov
mov
sbb
add
mov
ss
outsl
or
sub
mov
xorb
imul
scas
jl
and
jecxz
jbe
xchg
pop
in
or
jb
je
mov
jnp
insl
stos
jle
rclb
in
aas
cld
scas
mov
movb
or
les
sub
out
movsl
inc
stos
jmp
and
jns
ret
sarl
mov
dec
mov
mov
les
rolb
xor
jp
push
xchg
push
adc
adc
mov
stos
push
ret
fcomps
mov
loope
jecxz
stos
ds
jmp
out
inc
imul
mov
inc
or
mov
out
lea
mov
sbb
data16
fcoml
adc
dec
dec
xchg
in
cld
mov
or
in
loop
sub
addr16
mov
bound
leave
xlat
int3
mov
inc
inc
add
cli
lea
and
cmp
push
arpl
pop
cmp
imul
in
mov
notl
push
cmp
les
adc
mov
sbb
test
testl
mov
push
aad
jg
pop
xchg
adc
dec
mov
nop
pop
mov
dec
pop
mov
inc
mov
sbb
mov
pushf
push
or
imul
dec
cmpsb
dec
sub
pop
xchg
pop
xor
cmp
sbb
je
data16
cmovl
pop
adc
stc
mov
jbe
nop
cmpsb
push
lcall
sbb
stos
mov
test
mov
or
cltd
lcall
jns
jnp
sub
andl
dec
xor
out
jo
sub
pop
std
int
out
bound
ljmp
adc
orl
xchg
fcomi
fdivrs
mov
test
hlt
cmp
pop
xchg
loope
shll
sti
push
mov
mov
pop
xchg
pop
lea
push
in
out
test
cwtl
lret
testl
js
cmp
ja
push
inc
rorb
and
jbe
iret
cltd
ret
xchg
lcall
xchg
jb
jno
mov
mov
ljmp
or
mov
cmp
lea
out
cmp
mov
rclb
cmp
sub
cld
scas
fdivrl
test
ja
sub
dec
and
cs
mov
jno
fdivr
cs
or
mov
and
push
adc
inc
movsb
imulb
addl
sub
and
loope
jns
inc
mov
or
cmpsl
inc
and
icebp
sbb
testl
mov
or
mov
insb
mov
mov
lock
cmc
inc
shlb
mov
add
mov
and
cmp
xor
insl
xor
pop
outsl
dec
sbb
and
outsb
stos
mov
ds
rclb
fucom
cmp
mov
cli
leave
jl
cmpsb
sub
or
xor
imul
test
adc
sbb
mov
in
movsl
in
ja
ja
lea
and
xchg
mov
andl
pause
xor
adc
gs
mov
popf
lcall
ja
ljmp
loope
jg
addr16
rcll
mov
inc
adc
cwtl
inc
inc
sbb
fistps
out
jge
pop
movsb
fidivrs
mov
ss
jae
ret
aas
add
push
divl
cmpsl
ss
and
and
push
lods
cmp
add
mov
int3
arpl
das
jl
lods
sub
cmpsl
and
jb
out
test
ds
leave
xor
inc
repz
sbb
xor
sbb
add
adc
imul
mov
cli
rclb
sub
mov
daa
fisttpll
aad
fadd
and
pop
inc
loopne
mov
stos
cli
nop
call
pop
cmp
push
cld
std
add
jle
jle
jnp
in
lcall
jl
mov
fdivl
ret
mov
xchg
add
and
es
les
test
test
mov
repnz
rolb
in
lret
movsb
mov
fbld
jp
adc
sub
jbe
mov
sbb
add
test
js
xchg
mov
or
lds
pop
lods
push
hlt
xor
scas
mov
fnsave
inc
inc
loope
push
sub
mov
mov
loop
ja
scas
xchg
ss
and
xor
or
and
psubusw
sbb
ja
xchg
ret
stc
sub
pop
push
cmc
hlt
lret
mov
sub
fwait
jle
scas
push
in
jl
aam
int3
ffree
shrl
lods
jmp
loopne
add
jno
aas
lock
cli
rcrb
inc
mov
push
sub
int3
adc
xchg
mov
movsl
lds
jecxz
rcll
pop
cld
xchg
vshufps
ror
and
stc
popa
xor
ret
mov
inc
and
lods
xor
loop
out
int3
js
rcl
fs
mov
ret
push
in
xchg
call
cmpsl
pop
subl
xor
shrl
pop
push
cltd
test
adc
lahf
decb
out
je
lcall
not
push
repz
adc
mov
push
xchg
inc
addr16
mov
jae
inc
loopne
cmp
or
dec
sbb
mov
repz
sti
sub
pushf
cwtl
dec
jb
and
pop
in
mov
pop
das
and
jmp
mov
fistpl
or
dec
xor
jl
xor
sahf
andl
jbe
mov
test
mov
pop
dec
xchg
xchg
mov
xchg
mov
movsl
mov
fwait
sub
pop
push
xorl
dec
and
mov
test
pop
imul
adc
push
lods
xchg
imul
hlt
daa
les
repnz
xor
xor
aad
loope
shlb
mov
add
sbb
dec
sub
push
mov
stos
pop
inc
cwtl
cmpsb
xchg
push
pusha
ss
mov
divb
pop
dec
fidivrl
sbb
hlt
sbb
ja
cmpsl
insb
inc
cmp
iret
call
in
jge
scas
sbb
xchg
imul
fisubrs
rorl
mov
stc
js
lock
sahf
and
jp
loop
and
in
lods
ds
shlb
dec
icebp
in
add
inc
stos
iret
xchg
out
adc
sbb
mov
jnp
dec
or
xor
add
in
jnp
jns
sarb
push
ret
xor
cmp
insl
sub
movsb
pminsw
jp
aam
cmp
xor
jnp
sbb
add
xor
dec
test
pop
hlt
repz
mov
and
and
xchg
sub
jg
and
adc
rcl
xchg
mov
clc
pop
out
out
sbb
mov
cmp
pop
mov
les
cli
xchg
mov
mov
xchg
rorb
and
xchg
jne
lret
jmp
xchg
repz
xchg
dec
sub
mov
or
inc
or
push
pop
mov
cmpsl
andl
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
add
push
movl
cmpl
je
cmpl
jle
jmp
push
pushl
push
push
call
mov
dec
mov
jmp
push
mov
sub
mov
and
mov
movzwl
adc
mov
mov
movl
and
movl
mov
subl
mov
and
sub
mov
sbbl
xorl
andl
xor
or
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jb
mov
mov
mov
mov
sbb
sub
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
pushl
call
jmp
mov
xor
orl
mov
xor
mov
sub
jmp
loope
loope
xchg
iret
addr16
add
not
jns
loope
jp
stos
cld
and
out
jns
pop
jmp
pop
sbb
fldl
std
push
pop
dec
mov
rcl
dec
inc
stos
pop
addb
mov
fisubrl
pop
ret
js
push
adc
pop
add
out
xchg
sbb
insl
fwait
cmp
pop
sub
inc
push
push
or
mov
sbb
sbb
jbe
pop
movsb
scas
fstp
xchg
xor
ljmp
xchg
adcl
stc
and
dec
mov
jle
sub
adc
stc
sub
loop
dec
cmp
into
pop
fstpl
jne
cs
mov
cli
sahf
dec
mov
push
out
pop
inc
push
filds
push
sbbl
push
loop
push
int
divb
pop
lods
shr
inc
std
sbb
cmpl
js
push
decl
jno
mov
shrb
sti
lds
inc
aam
fcmovne
jns
fdivl
pop
gs
icebp
push
dec
xchg
aam
shl
cltd
lahf
sbb
push
xchg
shll
mov
into
xchg
lahf
push
xchg
aam
mov
loopne
inc
add
push
mov
pop
ss
iret
push
popa
dec
testl
cli
add
pop
sub
or
js
jnp
add
fcmovnb
sbb
mov
mov
stos
mov
jge
fidivrl
pop
mov
mov
ror
lock
adc
bound
push
jne
adcl
ds
push
sub
pop
ja
mov
mov
enter
out
cmpl
leave
insl
push
or
lahf
or
outsl
dec
jnp,pn
test
loopne
jo
jecxz
mov
jmp
pop
gs
je
push
pop
xlat
daa
es
into
inc
push
loope
fisubs
fcomp
lea
lahf
xor
fidivrl
push
in
lahf
scas
fidivrs
fstps
test
mov
in
push
push
xor
sbb
dec
and
xor
cmp
rcll
popa
stos
shrl
xor
add
aaa
test
lock
cld
jns
lahf
cmovb
xor
dec
orb
repnz
in
pop
bound
mov
das
cli
mov
jmp
leave
mov
mov
stc
call
sub
adc
movsl
in
gs
incl
sbb
jl
lret
pushf
jl
cmp
std
mov
pop
cmp
push
repz
fimuls
mov
test
into
sbb
xchg
ljmp
test
insb
ret
push
pop
popf
addr16
daa
cmp
and
push
add
leave
and
daa
mov
out
stos
cmp
jecxz
pop
xor
in
mov
jno
mov
loope
sub
sub
aam
sbb
les
push
jg
leave
push
hlt
test
mov
pusha
data16
aad
lods
jno
adc
jmp
mov
adc
mov
mov
fisubrs
int3
icebp
movsl
inc
fmul
adc
test
pop
fwait
loope
mov
lret
fidivl
adc
stos
fidivs
daa
add
or
xchg
pop
mov
lret
idivl
mov
pop
adc
xchg
lea
dec
add
push
pop
pop
dec
sub
cmp
jb
jno
push
xchg
idivb
je
std
fdivrs
int
mov
mov
in
lret
aam
mov
dec
and
aaa
scas
xchg
jno
sahf
std
fcompl
xor
fistps
aam
push
push
imul
lock
fwait
jo
loop
in
imul
mov
loope
icebp
std
cmp
int3
sbb
adc
fsubrl
mov
cmp
nop
inc
jb
mov
jmp
or
mov
jne
cmp
adc
faddp
inc
dec
and
inc
in
dec
add
jae
or
jp
mull
lods
insb
add
mov
lret
std
jnp
add
fisttpl
andl
or
mov
cmpsl
xchg
push
mov
in
orb
add
mov
mov
fadds
mov
fistpll
xchg
into
xor
cmp
jo
cld
push
push
out
push
movsl
icebp
sti
cmp
andl
inc
repz
test
lcall
test
add
cmp
aaa
xchg
jno
int3
popa
and
cmp
mov
adcl
push
push
inc
popa
pop
xor
das
inc
dec
dec
ss
ja
loope
ds
dec
lods
adc
popf
movsb
scas
lock
aam
jg
jbe
ret
arpl
or
and
cmpsb
and
push
insb
loopne
data16
popf
mov
cmp
pop
push
addr16
movq
inc
popa
add
sti
push
lods
and
fistpl
cmp
xlat
pop
mov
fcoml
fimuls
sbb
pop
xor
mov
dec
adc
ror
out
push
xchg
jnp
loope
js
cmc
xchg
or
pop
pop
pop
xchg
les
mov
in
sbb
or
arpl
clc
clc
iret
sub
mov
loopne
test
add
ret
fwait
loope
cmpsl
pop
xchg
jp
cmp
sbb
inc
aam
and
call
leave
fcmovnbe
cmc
gs
push
cmpsl
ret
and
scas
jecxz
sub
or
imul
inc
lds
out
mov
add
adc
ret
mov
pop
mov
inc
divb
rorb
adc
addr16
jmp
xor
bound
inc
xchg
dec
ret
addr16
aas
iret
les
add
pop
bound
cwtl
mov
pop
fdivrs
clc
popf
inc
cwtl
fwait
daa
push
test
out
fmuls
fidivs
mov
stos
jne
adc
jae
mov
addl
das
adc
and
mov
cmpsb
add
in
mov
lods
imul
gs
mov
add
comiss
aaa
iret
adc
mov
arpl
inc
arpl
std
xchg
push
cmp
orl
xlat
and
sub
dec
popa
xchg
jbe
fmull
mov
mov
pusha
jnp
jno
lret
int
dec
add
ljmp
into
rorb
mov
and
sub
adc
and
fcmovne
push
scas
fildl
clc
mov
pop
add
add
push
jle
sbb
mov
pop
xchg
lcall
mov
repz
leave
shl
fnsave
xchg
divb
xchg
insb
daa
aas
es
icebp
and
aas
dec
or
jp
movsl
xchg
jbe
out
orl
sub
xchg
cs
dec
lahf
and
movsl
xchg
mov
mov
mov
mov
and
adc
fbstp
in
insl
cs
dec
test
mov
push
lea
push
ret
mov
push
lock
cmp
add
fsts
sbbb
shl
xor
cmp
cmpsl
in
lahf
in
icebp
out
push
xchg
and
dec
sub
repz
loop
icebp
cmpsb
test
push
mov
fst
ret
cmp
dec
push
ficompl
push
test
fcoml
cwtl
pop
ljmp
lret
lret
jnp
shll
in
inc
inc
xchg
outsl
mov
sahf
loope
icebp
mov
rcrl
fbstp
call
mov
xor
clc
jne
xchg
call
out
pop
pop
adc
pop
xor
inc
pop
clc
insb
bound
jo
xor
les
sbbl
push
cmpl
pop
ret
dec
cmpl
aam
ret
push
popa
adc
in
vunpcklpd
addb
mov
and
push
lahf
cmp
repz
sub
clc
lret
out
pop
sbb
rclb
jmp
push
jns
int
stos
add
inc
mov
shrl
and
or
pop
aaa
insl
pop
aad
push
mov
jg
in
jbe
imul
jb
cmp
fsts
adc
mov
enter
jnp
add
adc
icebp
cvtdq2ps
lods
mov
xor
in
loop
repnz
jge
xchg
std
jo
xor
popf
inc
mov
adc
push
jns
outsl
mov
jno
mulb
xchg
or
out
xchg
adc
mov
xchg
gs
stos
cmpsl
outsl
push
cmp
rcr
adc
push
inc
cmp
scas
mov
mov
sbb
and
fsubp
orb
inc
cltd
bnd
orl
xor
push
mov
xchg
cmc
pop
push
adc
cmp
and
iret
and
add
and
mov
inc
pop
xchg
out
jmp
cs
dec
pop
jecxz
shlb
fcmovu
mov
scas
jl
mov
sbb
in
mov
outsl
scas
test
sub
mov
pop
mov
push
mov
out
in
xchg
push
mov
cwtl
lods
xchg
push
push
test
pushf
lock
xchg
les
sub
mov
or
push
inc
xchg
mov
dec
pusha
push
jns
push
imul
ds
idivl
fdivrs
mov
idiv
leave
mov
ja
pop
notl
enter
aaa
mov
fdivl
xchg
lahf
push
jb
cs
adc
mov
lret
xor
movsl
sbb
mov
fmull
cmp
out
in
inc
test
mov
mov
bound
leave
aaa
adcb
jl
fidivrl
sahf
rcrb
icebp
fcoms
push
mov
mov
stos
and
jp
push
push
cwtl
xchg
ja
cmp
mov
adc
cmc
adc
lds
add
mov
push
fisubrs
inc
cmpsl
loope
jo
and
and
push
push
out
mov
cmp
repz
lret
and
jo
stos
xchg
cmp
xchg
aad
dec
cmpsb
fldenv
rcrl
lods
pop
insb
pusha
lretw
xchg
inc
lock
pop
nopl
or
aas
xor
sub
xchg
jae
sub
mov
pop
xchg
scas
mov
stc
js
sti
movsl
bound
jns
test
int
jne
xchg
out
ds
mov
sub
jp
adc
push
scas
and
dec
mov
adc
bound
loope
add
inc
sub
add
mov
jecxz
test
mov
mov
inc
sub
in
fdivrl
fisubs
data16
lahf
stc
rcl
adc
adc
or
int3
cmpsb
frstor
ret
lret
iret
mov
jp
les
mov
icebp
sub
nop
or
xor
cmp
add
and
adc
aas
pusha
inc
mov
inc
mov
cmp
popf
jl
lock
data16
fists
call
push
insb
imul
sbb
mov
insl
gs
enter
sti
lods
cmpsb
cmp
push
movsl
xchg
jb
out
sahf
xchg
cmp
outsl
dec
mov
daa
scas
cmpsb
pop
sub
jmp
add
sbb
push
adc
push
lods
mov
jbe
jnp
fsubrl
mov
adc
cwtl
cmpb
mov
jmp
add
pushf
pop
xchg
cmp
sbb
jo
fs
repz
inc
xchg
repz
and
cmp
out
lock
xchg
daa
loop
sbb
movsb
sbb
adc
call
test
mov
sub
dec
loop
mov
out
xor
dec
outsb
lea
pop
xchg
lret
and
movsl
fdiv
cmpsb
or
fisttps
mov
lahf
popa
mov
jge
out
frstor
mov
jno
fcoml
pop
aas
scas
push
jno
jl
shll
jecxz
into
jp
and
sub
imul
inc
outsb
imul
xchg
cmp
pusha
dec
enter
leave
sahf
push
enter
mov
xchg
jne
aam
test
mov
xchg
lahf
xlat
sub
dec
and
jae
imul
xchg
add
sahf
mov
inc
call
lock
loope
cli
pop
xor
ret
mov
lahf
add
cmpsb
hlt
dec
pop
in
push
stos
inc
popf
mov
or
push
adc
out
aaa
xchg
mov
mov
cmp
mov
cmc
lret
repnz
movsb
push
dec
mov
cmpsb
xchg
pop
dec
xchg
outsb
adc
sbbl
je
push
mov
inc
sbb
inc
sbb
ficomps
mov
fsts
cld
mov
pop
add
sarl
jg
push
push
lret
push
test
xchg
repnz
in
inc
dec
in
xchg
or
jb
je
jp
mov
xlat
mov
sbb
and
je
sub
in
loopne
jb,pn
cmpsb
lcall
push
xchg
jo
xchg
cmp
pop
inc
add
gs
andb
sbb
adc
daa
add
ds
cs
cmp
xlat
cmp
lcall
lret
fs
and
aad
inc
cmpsl
mov
jg
jno
jl
jno
ds
sub
cmp
adc
cmpsl
in
lcall
dec
sbb
roll
or
mov
mov
mov
leave
cmp
sbb
xchg
xchg
out
in
test
insl
repnz
mov
mul
sub
xchg
movsl
cwtl
pushf
rcrl
outsb
xchg
xchg
fwait
mov
mov
imul
dec
and
fcoml
mov
or
imul
add
imul
xor
fidivs
xlat
jg
aad
dec
or
dec
pop
sbb
stos
push
out
sbb
dec
imul
adc
mov
jp
add
popf
imul
dec
cmp
into
sub
test
sub
cltd
aas
ret
mov
dec
in
cmp
cmpsb
pop
jb
in
lods
div
sahf
dec
cltd
test
jl
data16
mov
leave
clc
sub
push
and
cltd
dec
movsl
clc
xor
xchg
gs
adc
xlat
mov
xor
pop
sbb
nop
push
sarl
leave
ja
fisubrl
inc
dec
insl
popf
mov
clc
iret
stc
cmp
repz
es
cli
sub
inc
mov
xchg
outsl
dec
jge
ret
and
jo
insl
or
div
ficoml
push
mov
incb
sub
lret
sub
xchg
cld
jo
push
xchg
xor
ret
mov
mov
je
pop
es
lods
addr16
jnp
or
mov
cld
ja
lods
imul
in
push
iret
xchg
push
push
pop
pop
sub
shlb
or
addb
jae
je
scas
pop
xchg
push
outsb
and
cmpsl
into
mov
and
mov
inc
jmp
jge
pop
jmp
xchg
jle
mov
loop
add
push
int3
xor
sub
loope
mov
sub
xor
flds
jbe
mov
aam
mov
mov
push
adc
mov
pop
ljmp
test
add
jmp
mov
out
sub
fs
xor
pop
movsb
out
lds
mov
dec
mov
icebp
loope
xor
lods
clc
ja
repnz
in
mov
or
not
ja
adc
cli
add
daa
sub
sub
sti
inc
and
push
xchg
mov
outsl
mov
push
push
mov
shlb
mov
cli
and
cwtl
movsl
cmp
mov
addr16
bsf
jp
cld
add
mov
jmp
js
aad
mov
pop
out
mov
mov
ds
sub
and
sub
push
sbb
mov
in
pop
mov
and
dec
cmp
push
test
jno
push
inc
dec
imul
test
loope
outsl
jae
jp
cmpsb
jp
mov
push
test
cltd
xor
test
mov
paddsw
jne
xchg
cmp
mov
dec
xlat
lfs
and
fsts
into
mov
push
pop
inc
xchg
sbb
pop
ljmp
xlat
add
lea
mov
or
sti
sub
push
fstl
in
pushf
jno
bound
add
mov
daa
div
xor
mov
push
and
stos
ljmp
orl
and
cmp
notb
in
push
mov
inc
outsb
sti
out
pushf
aam
cmpsb
je
adc
pop
sub
bound
xchg
xor
jae
dec
and
push
push
push
insb
mov
int
add
in
push
call
mov
pushf
loop
imul
cmp
xlat
xor
cmpsl
adc
mov
scas
rcrb
xchg
das
xchg
sub
cmp
aaa
mov
aam
shll
xchg
int
sub
pop
xor
cmc
jns
test
sbb
or
inc
dec
inc
scas
sub
std
lret
mov
add
push
insl
out
sub
adc
pop
mov
and
outsb
jne
nop
imul
jb
fwait
cmc
mov
ss
mov
xchg
or
pop
mov
data16
xorb
and
in
fdivrs
jge
push
xchg
mov
insl
rorb
xchg
sbb
das
out
add
loopne
jg
scas
sbb
adc
adc
lea
sarb
mov
push
ficoml
cli
loope
push
add
mov
fwait
pushw
addl
sbb
jnp
out
mov
sub
out
xlat
inc
cli
sarl
out
je
xchg
pop
xor
mov
cmp
xchg
and
rcrl
test
fwait
jno
out
inc
jae
dec
inc
ss
jmp
ss
lods
clc
mov
mov
loopne
sbb
int3
mov
xor
int3
xchg
in
ffree
testl
xchg
add
js
push
je
jo
aaa
mov
mov
rcr
ja
cwtl
pop
pop
in
pop
sub
lret
lods
xor
sahf
add
jecxz
mov
cmp
daa
int
data16
int
sbb
mulb
aad
fldl
loope
xchg
cmp
stos
jp
fxch
rclb
adc
mov
stos
sbb
fnstsw
gs
cmc
std
nop
add
iret
inc
aaa
inc
aas
inc
popf
inc
pusha
mov
jp
decb
pop
loop
hlt
je
cmp
xor
jmp
cld
inc
push
dec
pop
add
in
fdivl
mov
movsl
sub
fwait
shlb
mov
dec
jmp
lahf
jge
xor
orl
sub
jl
dec
repz
fimuls
inc
or
or
outsb
jae
dec
clc
inc
and
pop
sbb
inc
icebp
pop
fisubs
cmp
cli
dec
mov
scas
ljmp
jg
mov
nop
push
arpl
sbb
mov
adc
cs
pushl
je
mov
xor
ret
or
mov
aas
inc
mov
adc
or
jp
mov
mov
pop
in
xor
mov
mov
push
push
mov
or
sbb
ret
inc
lahf
ss
aam
adc
pop
jp
sub
and
fcompl
mov
les
int
cmp
add
jl
pushf
add
pop
cmp
sbb
or
push
pop
aaa
add
lods
data16
repz
jmp
cmp
sub
pop
jo
fidivrl
outsl
aad
imul
and
push
in
mov
xor
jle
aam
inc
pop
js
dec
cmp
test
jnp
ds
and
push
dec
insl
arpl
pmaddwd
push
jno
jb
sub
es
jecxz
pop
sub
xchg
into
mov
out
mov
and
stos
and
imul
repz
loop
add
test
stos
mov
or
ret
jo
outsb
dec
addr16
sahf
adc
insb
mov
loope
aad
std
add
cmpsb
ljmp
mov
sub
lret
cmovle
adc
out
cmc
cmp
dec
xor
push
ljmp
jne
push
and
clc
and
int3
mov
popf
sub
aaa
ret
push
inc
in
nop
inc
xchg
fmull
sub
dec
ret
pop
sbb
int
stc
pop
push
movsb
jo
mov
in
adc
dec
clc
cltd
cs
in
dec
adc
ret
outsl
inc
mov
push
ja
mov
incb
in
fstl
enter
xchg
jno
jae
xchg
shrb
xlat
ljmp
jge
clc
dec
push
and
sbb
push
jb
jle
adc
mov
jmp
pop
data16
mov
dec
xchg
iret
insb
leave
test
rcl
mov
fcomi
mov
pop
or
aam
pop
inc
xchg
pop
stos
call
mov
cld
jno
out
xchg
inc
push
test
adc
jne
nop
subb
xor
adc
mov
inc
xor
pop
test
xchg
imul
test
cmp
push
aad
in
jno
mov
jmp
xlat
aad
dec
push
push
rcr
jae
mov
fistpl
xor
shl
in
jne
and
or
jae
sub
lcall
fwait
mov
lcall
sbb
xor
push
rolb
adc
pop
std
mov
inc
pushf
popa
pop
ljmp
xor
add
imul
lea
addr16
mov
dec
ljmp
notb
adc
cmp
jnp
inc
cltd
xchg
repnz
insl
mov
mov
pop
pop
inc
sub
xor
jmp
fsubrs
xlat
cmovp
push
mov
cmp
xchg
add
xor
mov
cmp
pop
add
mov
dec
inc
mov
add
mov
movsb
and
or
push
popf
lea
xor
cmp
fimuls
test
int
add
push
cmc
fistpl
sub
mov
ds
adc
adc
pop
lods
fmuls
cmp
push
idivb
pushf
sarl
aam
inc
mov
sti
cmp
add
add
iret
outsb
push
je
pop
jns
and
mov
ret
mov
out
add
loope
sbb
mov
cmp
push
popa
mov
ja
orl
jno
sbb
adc
ss
scas
jns
dec
add
pop
je
cltd
sbbb
inc
scas
cmp
mov
inc
in
in
dec
jle
iret
pop
mov
cmp
scas
cmp
rcrl
into
shrb
xorl
gs
adc
mov
test
fwait
xor
jnp
aam
or
sbb
cmp
mov
shll
and
in
rcrb
push
mov
inc
mov
jnp
push
adc
cltd
cli
leave
and
xor
ret
dec
pop
push
lea
pop
es
in
jnp
shl
test
movsl
xchg
mov
ds
and
imul
mov
push
data16
jmp
cli
pop
popl
popf
lret
inc
mov
arpl
push
xchg
add
sbb
cltd
clc
mov
adc
mov
dec
test
ljmp
sub
mov
ds
cmpsb
dec
mov
cltd
mov
mov
cmp
shll
sbb
push
xchg
mov
sbb
aad
cld
pop
popa
adc
lods
maskmovq
imull
das
repnz
add
push
adc
dec
pop
ret
call
pop
jecxz
dec
mov
xor
push
jmp
sub
add
mov
inc
jbe
ja
sub
push
push
sbb
mov
jl
ljmp
pop
sbb
cmp
test
mov
mov
mov
and
xchg
cmp
jb
jecxz
ret
mov
insb
pop
mov
mov
xchg
or
mov
imulb
mov
imul
dec
sahf
shlb
into
adc
add
jg
out
dec
cmp
inc
sbb
lds
outsl
mov
enter
call
xchg
sub
adc
add
imul
in
movsb
and
in
fldl
mov
xchg
out
jecxz
dec
sti
movsl
lahf
pop
ja
roll
arpl
imulb
rorb
aas
shll
rcrb
lock
cmp
mov
or
pop
lea
aam
negl
cmp
jbe
jne,pn
sbb
repz
push
and
lea
mov
sbb
pop
cs
pushf
bound
int
push
dec
cmp
js
mov
add
outsl
push
add
clc
ds
xor
add
shrb
inc
ja
jg
stos
fiaddl
jmp
push
in
dec
out
fldenv
lret
add
mov
mov
xor
dec
inc
cmp
jecxz
add
and
mov
jge
pop
jmp
push
unpckhps
pusha
inc
std
incb
je
mov
das
scas
outsb
std
in
arpl
dec
add
imul
in
adc
xor
dec
test
mov
cmp
cmp
stos
stos
cmp
icebp
fstpl
repz
int
imul
pop
cmp
dec
sbb
dec
aam
sbb
mov
push
jg
imul
cmpsb
pop
call
inc
mov
xchg
repz
jmp
sub
in
jbe
mov
popf
xorl
mov
icebp
inc
aam
dec
or
push
sub
int
test
test
stos
call
ds
xor
pop
add
cmp
or
pusha
xor
mov
mov
popf
push
les
push
jne
ret
pop
sbb
adc
push
les
push
mov
cwtl
xor
pop
xor
dec
sub
jno
add
icebp
pop
or
cmpsb
jae
dec
jge
pop
mov
mov
les
and
inc
dec
dec
dec
repz
subl
cmp
mov
add
xor
push
shl
daa
in
jns
aam
pop
lret
repz
xor
dec
arpl
push
out
sub
popa
pop
sahf
sub
push
enter
fcoms
cltd
mov
pop
sub
pop
sub
stos
roll
cld
sub
cltd
or
mov
sub
imul
cwtl
xor
mov
or
xor
adc
fisubs
xor
imul
dec
cmp
xchg
jo
ss
pop
subl
das
inc
pop
and
push
xor
mov
push
pushl
cld
lret
push
sti
shll
punpckhwd
icebp
mov
ret
xchg
or
shl
sbb
test
jmp
push
test
mov
repnz
das
fdivrl
or
inc
jle
xchg
mov
outsl
rorl
pop
add
test
popf
xor
std
cwtl
push
and
rep
push
adc
std
sbb
mov
jecxz
and
adc
mov
push
push
push
rorl
test
lea
ret
ja
jae
cmp
rcrb
or
subb
aad
xchg
mov
movsb
outsb
insl
jae
or
cli
or
sahf
add
loop
incb
ss
sbb
lahf
mov
xchg
pop
mov
dec
ja
ret
pop
dec
mov
lock
out
rcrl
mov
dec
add
hlt
inc
cmp
or
jae
push
stos
jmp
xor
jge
xchg
or
addr16
cmpl
fcmovnbe
lods
ret
adc
stos
rcr
push
inc
jmp
xchg
aas
jmp
repnz
sbb
cld
sub
nop
inc
fs
lds
and
and
inc
fcompl
mov
dec
fstl
call
sbb
jge
pusha
cmp
xor
mov
mov
and
rolb
data16
fwait
ja
data16
and
lret
in
mov
in
aam
fs
lods
movsl
xsavec
data16
push
mov
push
mov
cmpsb
jne
ret
adc
dec
pop
or
addl
inc
aam
xor
xor
sub
inc
mov
scas
and
jne
or
outsl
pop
insb
or
fs
lods
das
jecxz
test
pop
jbe
sub
mov
mov
xchg
aam
ss
jb
inc
pop
push
loope
dec
xor
aas
fstl
and
outsb
rcr
mov
insb
fimull
inc
pop
pop
sub
in
call
jno
jmp
xchg
jp
and
into
pop
nop
xor
call
ret
cmp
xchg
fldl
mov
loop
xchg
cmp
dec
fldl
xlat
stos
cmp
aas
loopne
not
adc
fs
inc
jnp
imul
lds
lret
mov
xor
lods
add
push
or
xor
js
ret
bound
pusha
in
sub
test
or
mov
sarb
push
sub
inc
stos
les
xor
or
call
shll
in
adc
mov
pop
loop
jns
fisttpll
bnd
out
adc
push
mov
jno
cmp
jecxz
and
and
cmp
or
imul
cmp
pop
sub
mov
adc
decl
lods
cli
int3
lods
push
jmp
add
ljmp
add
dec
ffree
pop
insb
pop
insl
repnz
or
aad
mov
inc
jle
test
fwait
or
inc
fcoms
xchg
fstpl
mov
xor
test
mov
pop
inc
xchg
mov
mov
insb
lret
sub
sub
popa
loopne
outsl
cmpl
fs
xlat
xchg
sub
jg
sbb
xchg
call
fdivrp
test
push
or
scas
repz
pop
int3
out
scas
pusha
gs
push
mov
testb
add
scas
dec
dec
xchg
pop
mov
cmp
lds
xchg
sbb
push
mov
and
jbe
xor
js
or
xchg
mov
add
sub
lea
out
jns
pop
ret
fists
push
lret
inc
bound
incb
or
mov
jb
push
pop
ss
out
popa
test
xchg
into
jmp
adcb
insl
adc
out
xchg
cld
dec
ds
enter
lea
cli
mov
cmp
imul
mov
jnp
scas
dec
sar
push
inc
out
sbb
roll
lret
popa
sti
ret
mov
cmp
loop
sbb
mov
pop
inc
imulb
xor
gs
push
shll
add
nop
ret
mov
push
mov
nop
or
rclb
ljmp
mov
je
mov
adc
jl
sub
inc
in
sub
cmp
xchg
adc
lahf
in
mov
repnz
dec
in
lea
scas
mov
jmp
mov
sub
push
jae
lea
jo
jmp
addl
inc
pop
outsb
adc
faddl
mov
sbb
inc
sbb
add
add
insb
mov
pop
enter
daa
ret
imul
xor
out
push
popf
mov
lods
push
mov
sub
scas
test
push
in
pop
sti
gs
xchg
imul
dec
enter
cmpl
sbb
repz
push
call
or
pop
fdivrl
ret
adc
push
adc
ret
lret
adc
ja
stos
adc
mov
add
orl
decl
mov
mov
mov
xor
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
push
call
cmpl
jb
sub
mov
xor
orl
sub
mov
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
add
movl
lea
mov
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
call
jmp
mov
xor
or
and
mov
mov
sbb
mov
mov
addl
xor
sbbl
add
mov
movl
cmpl
je
cmpl
jge
jmp
call
mov
dec
mov
jmp
mov
mov
mov
movl
add
or
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
push
push
call
jmp
mov
xor
mov
mov
sub
xor
add
mov
add
movl
cmp
je
movl
mov
movl
jmp
mov
xor
andl
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
call
jmp
add
movzwl
sub
xor
mov
xorl
add
movl
push
mov
adc
mov
xor
xor
cmp
movl
jne
movl
cmp
movl
jne
push
movl
jmp
sbb
mov
xor
adcl
add
xor
decl
add
movl
adc
adcl
xor
xor
movl
cmp
movl
jne
movl
cmp
jne
and
mov
inc
xor
movzbl
and
add
subl
mov
xor
mov
mov
and
mov
orl
xor
xorl
add
addl
imul
mov
xor
add
movl
cmp
mov
movl
je
xor
mov
andl
add
mov
sbb
mov
orl
xor
andl
add
imul
movl
mov
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
notl
mov
jmp
and
les
imul
mov
jp
pop
jp
dec
inc
ja
pushf
fisubl
les
scas
popf
or
stc
cmp
mull
adc
mov
dec
push
mov
scas
ss
jne
into
mov
dec
push
push
lcall
jg
jnp
rcl
test
cltd
movl
test
add
sahf
cmp
pop
repz
mov
add
mov
push
mov
sar
fwait
lock
inc
xchg
pop
sub
jecxz
into
inc
xor
inc
fcompl
push
insb
pop
or
in
xchg
andl
lcall
pushf
mov
jmp
mov
xor
int
lcall
or
fstl
or
and
outsb
stc
or
test
fwait
push
scas
std
or
xor
in
ja
mov
jns
sbb
or
jmp
mov
cwtl
adc
cld
and
lock
lret
rcrl
aad
out
pushf
sub
loop
dec
mov
ja
fbstp
jbe,pt
rclb
mov
or
push
mov
ss
bound
pushf
loope
mov
pop
jns
mov
test
ficompl
or
nop
jb
cmp
ds
xchg
xchg
int
daa
cltd
mov
mov
adc
sahf
and
test
jns
jmp
cmp
sub
or
jns
cs
mov
sbb
insl
sub
je
push
push
push
sub
cmp
jne
sub
inc
mov
stos
cltd
outsl
aam
rorb
mov
push
mov
lock
movb
jne
rcrb
loopne
lcall
incb
add
stc
pop
jle
or
outsb
jmp
dec
inc
ret
adc
shr
int
xchg
inc
mov
int
fwait
jmp
xor
pop
mov
mov
push
xor
int3
ss
inc
mov
xchg
sub
xchg
cmp
in
shll
adc
lahf
xchg
dec
cmp
sbb
mov
inc
cmp
lods
xor
inc
rclb
lret
loope
repz
test
fadds
dec
js
xchg
mov
push
aas
xchg
outsl
mov
cltd
pop
dec
scas
insl
dec
xchg
insb
adc
xchg
push
add
mov
repz
adc
in
sbb
test
lcall
mov
jmp
inc
jb
inc
mov
scas
push
and
popa
lcall
or
jmp
fldl
lcall
je
stc
or
pop
fwait
dec
cltd
test
pusha
and
dec
int3
push
lea
lahf
leave
xor
xchg
dec
aad
sahf
xchg
push
cmc
xor
add
xchg
adc
sahf
jmp
jb
testl
fidivs
cmpsl
aas
pop
inc
sub
mov
jle
adc
mov
fdivrl
add
aaa
loope
jmp
js
xchg
jae
sub
fwait
jecxz
insb
sub
xchg
ja
pushf
in
xchg
sahf
ret
aaa
mov
sbbb
es
je
and
jmp
inc
add
lea
mov
dec
push
cmp
dec
jns
pop
mov
mov
test
aad
fsubp
sub
test
sti
fnstsw
push
jb
sbb
xchg
lods
cmp
inc
jle
jmp
dec
loopne
xor
dec
adc
xor
bound
icebp
jecxz
xchg
cmp
outsl
add
loop
mov
mov
movsl
pop
and
filds
mov
mov
aam
dec
adc
ret
bswap
jbe
xchg
stc
pop
out
and
pop
mov
aas
scas
push
sbb
out
dec
add
into
in
xchg
pop
fisttpl
ja
adc
rcll
cmp
mov
out
inc
cmpsl
sub
sub
sbb
aam
mov
jecxz
mov
dec
pop
ds
movsl
sub
dec
rorb
dec
mov
and
nop
test
push
inc
mov
or
push
mov
not
push
stc
pop
xor
popl
int
mov
xchg
push
mov
icebp
sbb
mov
es
jg
outsb
das
mov
jne
or
inc
cs
cltd
sti
pusha
in
mov
pop
fwait
sarl
das
mov
or
in
aam
push
cs
push
push
and
sti
cltd
or
lahf
aad
cmc
xchg
aad
icebp
lock
cld
lock
adc
stc
out
pop
dec
mov
lret
pop
or
add
mov
push
jno
push
or
outsb
mov
nop
repz
xchg
int
and
in
loop
adc
iret
fadd
shrl
int
mov
int3
rcrb
xor
loope
adc
cmp
sbb
and
ds
push
adc
sbb
mov
cmp
rcrl
aad
xor
jge
fwait
push
mov
add
adc
aad
fcomi
and
inc
mov
loope
pop
test
jbe
rolb
xchg
mov
inc
adc
fsubl
inc
addl
out
push
ret
xchg
jo
lea
cmpsb
int3
push
aaa
mov
cltd
cs
jno
pop
or
push
call
shlb
mov
ss
out
jmp
cmc
xchg
cmpsl
or
inc
les
fisubrs
mov
scas
hlt
aad
jo
inc
testl
popa
push
mov
push
das
aad
imul
sub
lcall
xor
jnp
adcb
xor
mov
jo
inc
repnz
lock
sub
std
push
adc
pop
sub
sbb
gs
or
test
and
test
icebp
dec
mov
mov
stc
add
pushf
mov
xor
adc
and
add
push
and
mov
repz
mov
push
push
cmpsl
enter
pop
jp
in
cltd
lock
dec
iret
adc
jo
popf
jp
or
or
add
loopne
dec
pop
cmpsl
dec
inc
int
ljmp
rorl
pop
dec
xchg
cwtl
test
icebp
xchg
insl
add
cld
cmp
lds
out
scas
inc
mov
inc
cmc
or
sbb
push
lahf
dec
or
mov
mov
xchg
mov
ljmp
xchg
mov
loopne
fidivl
sbb
sbb
push
arpl
lahf
pop
mov
fbstp
mov
movsl
test
stc
sub
adc
popa
ljmp
ror
test
or
scas
fisubrl
xchg
xor
loop
sub
fnsave
xor
ss
mov
mov
cld
hlt
or
jae
int3
fcmovu
adc
in
inc
xor
inc
popf
cmp
push
sbb
dec
cltd
adc
movl
and
cmp
inc
arpl
pushf
jmp
jb
and
push
test
push
mov
mov
lock
xor
roll
repz
xor
xchg
loope
pop
mov
ret
cltd
das
sbb
dec
mov
clc
and
sbb
mov
jg
loop
sti
pop
sub
xchg
and
mov
int
jns
pop
pop
push
data16
lea
mov
xor
mov
and
shrb
ret
or
push
pop
or
cmp
and
sub
or
shlb
scas
jmp
test
sbb
loop
sub
aam
push
ret
outsl
sbb
loopne
adc
dec
inc
sbb
lods
fbstp
js,pn
xor
and
xor
mov
arpl
stos
sti
ljmp
arpl
mov
nop
jo
jb
push
mov
jle
xchg
pop
mov
test
iret
loop
stc
or
aad
dec
mov
or
or
cmp
xchg
push
jo
hlt
adc
xlat
and
outsb
cld
adc
outsl
fistl
popa
cmpl
push
pop
aas
sbb
lds
inc
fidivl
lret
xor
xorl
fisttpl
data16
in
scas
shlb
ret
leave
jecxz
inc
into
pop
pop
loop
hlt
lcall
andl
popa
out
decl
xchg
add
adc
fisubs
push
mov
repz
push
sahf
or
push
jp
enter
xchg
cmc
and
call
orb
push
push
das
into
punpcklbw
xor
xchg
test
mov
in
das
push
ret
jl
lcall
sub
dec
cmp
xchg
mov
dec
mov
or
xor
adc
sar
lahf
call
loopne
call
pop
adc
outsb
push
fisttpll
jno
jg
sub
mov
push
cmc
jg
fwait
pop
dec
xor
mov
mov
jle
add
lret
cmp
push
lcall
inc
cmpsl
mov
add
subb
sub
jg
hlt
sbb
sahf
xor
fidivrl
sti
xor
out
jecxz
push
popf
ret
lea
dec
loop
adc
pop
sbb
imul
cltd
daa
jbe
notl
das
fwait
out
jg
add
bound
mov
aas
mov
mov
xlat
cmp
ret
or
xchg
lret
pop
int3
cmc
std
or
pop
sbb
mov
inc
leave
xor
scas
mov
pusha
cmp
nop
jmp
fnstsw
cmpsb
fsubrs
fdivl
mov
mov
and
mov
jmp
cmpsb
mov
inc
sti
out
repnz
adc
movsb
rorb
out
sbbl
jnp
clc
jecxz
push
adc
fildl
mov
xor
or
xor
push
sbb
inc
jno
sub
dec
in
ja
in
push
inc
jo
push
cmp
in
push
xchg
aas
scas
lods
pop
push
jmp
xorb
mov
xchg
inc
jmp
inc
jb
lcall
out
xor
inc
xor
mov
jmp
cmpsb
or
xor
ror
cmp
es
fdivl
pop
test
notb
insl
xchg
mov
cmp
iret
ret
arpl
ja
cwtl
sbb
mov
hlt
cs
loop
mov
xchg
data16
leave
iret
lods
xchg
adc
or
mov
add
mulb
std
roll
dec
sbbl
pop
testb
cmp
loop
sub
fucomip
out
test
cmc
out
test
and
loop
fwait
aam
or
add
outsl
lock
jp
add
jp
rclb
push
sub
ljmp
scas
pop
mov
aas
insl
xchg
out
dec
shrl
jne
addl
mov
mov
jp
jnp
movsl
clc
jecxz
ds
push
sahf
cmp
test
sbb
dec
loopew
mov
jnp
mov
jmp
ja
mov
mov
inc
stos
or
cmp
add
fidivrl
xchg
and
addr16
inc
loope
lret
out
cli
or
cmc
in
sub
aas
xlat
call
push
mov
push
aam
adc
xor
scas
orb
loopne
and
inc
and
mov
xor
ss
jo
in
cmp
out
and
cltd
dec
mov
aad
sbb
add
or
jge
into
pop
push
arpl
cmp
lret
xchg
rcrl
xchg
shlb
sbb
xchg
mov
inc
adc
add
dec
push
adcl
in
outsb
ljmp
outsb
sbb
lret
mov
sbb
mov
ret
sarb
fcomp
push
movsl
mov
lret
mov
mov
adc
jg
adc
imul
mov
mov
icebp
mov
popa
mov
xchg
inc
in
fstpt
jnp
mov
cmp
int3
les
jl
push
bound
adc
push
sti
addr16
sub
in
xchg
in
bound
mov
jnp
imul
loop
outsl
movsb
mov
jne
xchg
insb
and
sar
cs
jb
jg
nop
iret
adc
mov
sbb
xor
mov
mov
scas
repz
push
xchg
sahf
out
jl
loop
cmp
mov
mov
or
add
popf
fisubl
in
push
adc
adc
push
flds
xchg
sub
sti
int
stc
stos
sub
mov
loope
fildl
mov
divl
popf
cmpsl
fucomip
sub
mov
mov
push
xor
adc
jne
push
test
mov
mov
js
outsb
outsb
push
xchg
lock
add
inc
pop
jle
dec
dec
dec
stc
push
stc
int3
mov
sub
cmp
fs
pushf
sub
outsl
sub
inc
add
jmp
xor
xor
aad
inc
out
adc
inc
dec
sbb
and
adc
sub
jmp
or
jge
pop
ret
xlat
add
xor
lods
jmp
inc
movl
imul
hlt
jge
mov
scas
loopne
pop
mov
mov
lcall
mov
and
aad
mov
dec
xchg
push
jmp
add
mov
mov
inc
or
ret
cld
cmp
dec
xor
sub
xchg
jp
loopne
adc
pop
xchg
dec
xchg
enter
xchg
mov
lldt
dec
mov
jnp
xlat
scas
adc
rcl
add
je
jno
mov
insb
loope
lret
stc
mov
xchg
std
gs
call
movsl
cmpsl
aaa
mov
mov
iret
dec
cli
cwtl
dec
lods
ja
pop
jg
and
rolb
lea
jge
nop
andl
jmp
push
inc
daa
fwait
repz
jp
adc
mov
fs
xchg
lods
mov
jns
cltd
shl
test
sub
mov
fistps
ljmp
movsl
fcmovnb
inc
pop
adc
mov
mov
sub
adc
inc
inc
orl
stc
cwtl
in
xor
dec
repnz
mov
out
data16
ss
andl
lods
mov
loopne
sbb
jmp
test
lock
in
sbb
pop
in
aas
fst
xor
sub
fistps
shrl
mov
enter
mov
add
mov
mov
fisubrl
mov
jl
mov
mov
xor
mov
mov
fiaddl
xchg
movsl
dec
lock
inc
xchg
pop
stc
dec
push
lahf
rcll
pop
cld
mov
es
xchg
mov
icebp
pop
arpl
mov
xchg
fwait
out
mov
mov
push
adc
jmp
pusha
pop
and
cmc
test
scas
cltd
xchg
lcall
rclb
pop
cmpsl
pusha
in
test
fsubrl
xchg
iret
push
and
push
stos
call
nopl
sti
jge
add
xchg
cmpsl
xor
mov
ficompl
aaa
das
cmp
xchg
xchg
jmp
sub
imul
movaps
test
in
jecxz
dec
adc
dec
adc
lods
mov
shlb
gs
test
arpl
pusha
js
cmp
sub
cli
dec
xchg
adc
dec
sti
mov
ja
rorb
inc
lahf
pop
add
cld
push
dec
arpl
inc
loopne
test
pop
inc
sbb
add
mov
ljmp
push
mov
sub
push
sar
lods
stc
xor
fwait
mov
xchg
push
xor
dec
xchg
xor
xchg
jp
adcb
fistps
addr16
stc
mov
lods
jnp
ret
dec
pushf
enter
shll
dec
or
fiaddl
addl
cld
in
cmpsb
sbb
iret
test
out
inc
fs
push
dec
outsb
jmp
and
add
sub
scas
sti
out
xchg
cmp
fsts
push
ret
mov
inc
xchg
call
cli
pop
push
mov
scas
push
lret
adc
in
pop
add
aam
in
out
pushf
or
inc
movsl
sub
bound
lahf
movsb
xchg
push
mov
mov
mov
mov
or
jo
jge
aam
imul
enter
fmuls
mov
jle
movsl
std
enter
xchg
in
ljmp
lcall
jae
add
mov
pop
mov
int
mov
cmp
inc
pop
jae
adc
mov
sbb
out
fldenv
add
mov
aam
push
xchg
push
cmp
jmp
mov
sub
mov
sbb
outsl
cmp
ljmp
sbb
std
mov
lods
push
inc
pop
mov
push
xchg
test
in
data16
dec
mov
fisubl
jg
in
mov
sbb
pop
sbb
xchg
pop
mull
int
pop
imul
xchg
out
lret
mov
mov
xchg
imul
out
push
lods
ret
inc
ret
and
fistpll
sbb
dec
ljmp
in
mov
pop
dec
add
gs
pop
mov
loopne
xchg
mov
mov
subb
test
addb
xchg
jbe
cmpsl
sbb
mov
or
daa
jmp
mov
shll
or
xchg
int3
mov
jmp
clc
lods
mov
lcall
inc
pushfw
dec
les
sbb
jge
add
filds
cmp
and
daa
loop
psadbw
mov
ret
cmp
jg
or
cmp
mov
sbb
gs
into
int3
lock
xchg
cli
mov
cmpl
les
arpl
movsl
pop
sbb
lret
out
push
push
add
sti
stos
and
inc
push
aad
mov
or
mov
orl
cmp
and
push
add
pop
shrb
fcmovnb
push
imul
mov
cmp
push
push
add
mov
gs
dec
idivb
nop
mov
sbb
xor
fs
mov
push
adc
jmp
pop
popf
xchg
sub
loopne
sub
cmp
push
lods
fs
shll
sbb
pop
pushf
test
xlat
loopne
mov
adc
pop
push
pop
fldenv
rorl
sbb
sub
test
sub
sub
xor
outsl
inc
int3
rcrl
mov
sbb
test
jnp
cmpsl
xchg
popl
xchg
adc
xchg
out
inc
jne
shlb
inc
pusha
pop
cmp
stos
cli
xchg
outsl
sbb
std
icebp
adc
dec
adc
cmp
lret
adc
jo
fisubrs
ja
mov
and
mov
lea
aam
fwait
mov
mov
stc
mov
addb
int
push
mov
aad
enter
adcl
and
out
aad
lahf
das
insb
jecxz
ja
insb
out
movsl
jl
mov
jb
rclb
mov
or
test
mov
inc
or
test
enter
int3
and
call
jns
es
fmulp
mov
xchg
aas
xor
movsl
mov
mov
cld
scas
sbb
or
pop
adcl
repnz
or
xlat
xorb
js
or
lretw
mov
xchg
in
mov
mov
in
mov
clc
and
pushf
in
push
call
cmp
cli
mov
scas
adc
rep
sub
jbe
or
jo
sub
cld
call
jl
mov
sub
sti
lock
xor
mov
cmp
mov
in
mov
inc
dec
mov
call
cltd
stc
xchg
add
push
xor
pop
sub
xchg
out
push
xchg
shrl
repnz
pop
pushf
xchg
divl
aam
push
cmp
into
pop
in
roll
or
mov
xchg
xchg
sbb
in
dec
test
pushf
hlt
mov
repz
es
or
jg
inc
int
mov
std
outsl
outsb
pushf
and
idiv
or
inc
clc
fcmovbe
pop
mov
js
mov
mov
push
xor
out
inc
cmp
or
adc
addr16
stos
aas
push
mov
lahf
cmpsb
iret
rclb
and
rolb
add
pop
inc
push
pop
adc
cmp
or
fucomp
and
les
add
mov
push
mov
fstpl
push
stc
gs
jp
pushf
cltd
jne
mov
cmpsl
jle
push
jmp
adc
push
iret
add
and
imul
sti
pop
iret
rcl
outsb
pop
sbb
mov
mov
out
les
pop
jnp
xchg
sbb
fidivrs
fstpt
aaa
lret
int3
hlt
xchg
data16
int
lea
sub
dec
popf
mov
arpl
hlt
insl
and
call
das
xorb
and
jno
rcrb
subb
mov
pop
div
add
cmp
sbb
push
lods
mov
xchg
cli
mov
pop
enter
jbe
insl
push
pop
xor
jo
popf
loopne
arpl
mov
daa
xchg
pusha
dec
mov
ljmp
mov
jge
arpl
mov
lahf
inc
ret
or
sbb
pop
sbbl
push
jno
lea
movsl
inc
mov
sub
mov
adc
sbb
pop
in
add
and
aad
mov
or
fstp
dec
sub
loope
cmp
xor
test
testl
loope
cwtl
int
fildll
cli
push
addr16
xor
outsl
jnp
mov
add
dec
sbb
xor
inc
fs
cli
int
test
insb
int3
out
test
sub
fcmovb
sub
pop
cld
xor
cmp
jo
cmp
mov
cmp
sbb
int3
cmp
xor
xor
or
call
dec
mov
loopne
add
gs
fistps
in
mov
fs
pusha
and
mov
add
xchg
mov
fmulp
sbb
mov
movsb
xlat
daa
pop
xchg
aam
cmp
lcall
add
in
in
xchg
mov
ret
xor
inc
rorb
in
jnp
aas
rclw
fsubrl
lahf
lret
aaa
sub
cltd
enter
cs
xorl
xor
das
xor
push
mov
xlat
mov
subb
sarb
sub
mov
xchg
mov
add
divb
mov
dec
mov
xchg
in
popf
or
arpl
cmp
xchg
les
lret
xchg
sub
sbb
mov
jno
jbe
sbb
test
cmpsb
jne
ja
rorl
mov
es
imul
imul
jae
call
add
pop
fcoml
cmp
xor
mov
sahf
rcl
dec
add
movsl
dec
mov
imul
mov
lds
pusha
pcmpgtb
mov
cltd
imul
outsl
push
xor
in
sub
ficomps
mov
test
scas
std
ret
cmp
adc
inc
and
and
rcrl
fs
mov
dec
arpl
mov
push
mov
js
out
loopne
or
cltd
ret
adc
shrb
ss
pop
cmp
pop
jg
lock
iret
adc
xor
ret
adc
test
fidivrs
mov
shlb
dec
stos
repz
lds
dec
xor
or
imul
xor
fs
std
and
lods
out
mov
add
repz
outsb
dec
inc
pop
rcrb
add
dec
cmp
loopne
sub
push
fcompp
adc
mov
int3
jmp
test
sub
jno
inc
pusha
enter
mov
adc
mov
xchg
cmp
pop
sbb
cmpsl
mov
std
lds
and
les
xchg
jp
dec
mov
mov
push
mov
sbbl
dec
sub
mov
fdivrs
int3
sbb
xchg
mov
in
dec
sahf
rorb
es
data16
fldenv
inc
pop
cmp
aam
arpl
dec
cwtl
mov
daa
rorb
xchg
addr16
notb
dec
jnp
pop
add
mov
in
dec
pop
pop
sbbb
pusha
push
jmp
mov
fimuls
mov
mov
stos
mov
mov
jl
xor
inc
repnz
sub
sahf
add
aas
js
nop
clc
xlat
jp
ljmpw
jg
or
lcall
ret
sbbl
sbb
inc
mov
xchg
in
leave
push
mov
roll
xchg
jnp
addr16
or
shll
jl
adc
dec
cmp
ret
lcall
mov
xchg
cmc
fdivl
cmp
or
and
adc
es
int
pop
mov
mov
inc
jecxz
aam
ror
test
js
ret
insb
or
adc
adc
jae
cmp
test
leave
cmp
xor
shrb
xorb
lock
mov
jae
xchg
scas
inc
mov
xchg
push
push
pop
mov
out
fldl
call
dec
lods
cmc
push
push
gs
sbb
cmp
jg
lret
jge
shll
ret
subl
lea
rorl
orl
jg
cmpsl
sbb
loopne
cmp
gs
push
add
push
mov
sbbl
das
mov
leave
push
andl
xchg
jmp
cmp
popf
add
ret
push
call
loop
lea
cmp
and
mov
je
clc
push
add
xchg
js
mov
mov
testb
xchg
jg
lea
mov
push
sbb
mov
add
push
cmp
fdivl
inc
faddl
fisttps
ljmp
jnp
pop
mov
rorb
dec
mov
es
cmp
and
stc
shr
cmp
add
rcll
add
fisttpll
inc
jmp
filds
ljmp
fmull
iret
imulb
and
adc
xchg
hlt
movsl
andb
je
fisubl
stos
pop
adc
lret
rorb
sub
cmc
dec
xor
pop
enter
iret
jns
jnp
mov
mov
adc
xchg
cmp
adc
inc
ret
sahf
jl
scas
jnp
or
cmpsl
push
inc
cmp
divb
lret
ret
mov
cwtl
xor
movsb
pop
xor
and
sbb
std
pop
xchg
mov
mov
les
and
bound
ds
enter
add
into
ja
es
ds
inc
pop
push
loope
and
in
std
dec
repnz
lods
dec
and
out
mov
ljmp
ret
cmp
push
mov
dec
add
inc
js
insb
push
lret
imul
movsl
mov
jbe
fcomi
pop
roll
and
in
loopne
adc
push
cmp
adc
jg
jmp
dec
mov
sbb
cmp
add
in
pushf
push
mov
addr16
jge
mov
std
add
data16
cmp
das
repz
jg
fwait
sub
xor
out
ds
cli
inc
addr16
push
cli
aaa
repz
int3
enter
sbb
in
inc
sbb
cmpl
adc
pushf
dec
mov
ss
add
gs
jnp
ja
les
xor
xor
jp
imul
aaa
lea
jae
or
push
push
or
imull
in
xchg
inc
mov
mov
jge
jg
sbb
in
in
jb
pusha
jae
arpl
movsb
std
add
xchg
sahf
mov
stos
mov
jge
pop
adc
pop
rorl
fstl
sbb
add
sub
cmp
test
aad
jo
cli
test
lahf
clc
pop
jno
jno
mov
out
pop
loop
in
xor
jnp
fwait
icebp
adc
push
xchg
jne
mov
loope
aam
movsl
inc
adc
mov
fnstenv
popf
insb
cmpsl
lock
pop
mov
jno
imul
into
jmp
mov
jns
xor
xchg
rorb
dec
pop
mov
hlt
into
imul
bound
std
mov
add
cltd
dec
icebp
push
xchg
clc
ret
cmpsb
lcall
mov
es
enter
mov
cmp
mov
push
xchg
xor
imul
inc
in
xor
jmp
push
dec
out
pop
jge
xor
ret
roll
mov
inc
in
shrb
cmp
sti
imulb
mov
cmp
repz
inc
sub
fld
cwtl
jmp
pop
movsb
mov
or
inc
pop
fwait
push
in
in
or
fcmovne
into
lahf
or
pushf
xor
dec
scas
mov
fs
lea
in
cmpsl
cs
scas
lret
pop
gs
xchg
cmpsb
stos
hlt
pop
jle
sbb
gs
pop
mov
or
pop
lahf
jmp
inc
xor
mov
mov
rorb
aas
cmp
add
cmp
mov
jb
andl
lcall
imul
rolb
dec
in
fwait
enter
pop
sub
pop
inc
les
pop
push
adc
mov
cmp
rcr
xchg
out
and
add
fs
ja
pop
jns
sub
mov
addr16
fiadds
pop
in
xor
cltd
jnp
stc
mov
mov
lods
loop
pop
mov
repz
xchg
xchg
das
dec
in
testb
mov
mov
ret
aam
jp
out
inc
sub
shlb
add
shlb
lods
loopne
mov
inc
out
pop
adc
in
cld
test
out
sub
dec
repz
inc
movsb
mov
aam
popf
push
lret
ret
fidivrl
lds
stos
lahf
or
mov
mov
fiadds
sbbb
lret
jmp
daa
aaa
unpckhps
out
dec
hlt
push
xor
jmp
inc
mov
sub
pushf
inc
jnp
cli
push
mov
inc
inc
sub
scas
cmp
pop
pop
cmp
pop
xchg
xchg
mov
or
jne
movsl
mov
push
inc
loope
mov
ds
cltd
mov
add
lahf
sbb
mov
mov
jp
cwtl
xchg
xchg
mov
ret
and
adc
scas
mov
inc
mov
imull
push
cli
stos
inc
mov
pop
in
xchg
scas
fld
fsubp
mov
lods
fmuls
les
repnz
mov
jmp
push
lahf
ret
fmull
xchg
jb
stos
in
and
dec
jmp
cmpsl
sub
xchg
cmp
or
xchg
shll
push
sbb
test
jle
mov
pop
and
enter
movsl
sub
mov
outsb
sub
arpl
inc
dec
fldcw
mov
je
mov
pushw
xor
sbb
std
stc
push
lock
dec
shr
inc
add
in
cmp
inc
aas
repnz
pop
cmp
movsb
js
or
cwtl
scas
mov
mov
lock
shlb
cmp
arpl
sbb
aam
movsb
mov
adc
les
jo
cmp
rorb
in
jg
mov
cltd
dec
jmp
jmp
jmp
sub
out
test
push
xor
sarl
rorb
add
add
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
jmp
sbb
pop
rcll
jae
mov
subb
mov
xchg
jne
jp
lcall
xchg
add
rolb
jge
not
push
sub
dec
jge
jge
sbb
add
ret
fdivr
inc
pop
cmp
push
or
outsl
cmp
add
sarl
std
std
cli
and
jge
sbb
mov
jae
in
mov
inc
shrl
add
pushf
cltd
lds
in
lahf
repnz
inc
subb
pop
jnp
dec
std
push
jb
in
test
cltd
pop
mov
outsl
mov
and
sub
pop
mov
and
xorl
jno
stc
test
gs
inc
push
adcl
outsb
sub
mov
sbb
insl
cmpl
jbe
add
xchg
sub
cmp
outsl
int3
addb
out
inc
jno
xor
test
stos
push
xchg
jno
jbe
lock
xchg
mov
mov
aaa
and
xchg
in
ror
xchg
sbb
jle
add
xlat
sub
orl
or
jle
in
inc
adc
pop
sti
stos
cmp
add
cmp
popa
pop
push
inc
je
mov
xchg
lea
es
sub
sahf
inc
xchg
sti
dec
or
jbe
pop
xor
loop
icebp
xor
inc
shlb
inc
mov
add
xchg
pop
fistps
inc
and
sub
push
jecxz
rorl
stos
fcoml
add
jle
add
stos
enter
enter
lods
call
cli
push
enter
or
mov
adc
jo
lods
dec
xchg
ret
or
sub
clc
mov
popa
aaa
mov
aad
xchg
rcrl
adc
into
or
inc
fidivrl
pop
loop
shll
iret
push
cmp
mov
add
fucomi
into
push
popf
dec
add
ljmp
xor
pop
inc
xchg
ds
push
xchg
in
xchg
sbb
aas
ret
lcall
cmp
mov
popf
sbb
inc
gs
cmp
mov
in
mov
and
cmc
in
movsb
xchg
popf
cmp
or
fcoms
dec
aas
sahf
or
mov
add
and
pushf
mov
std
leave
int3
int
and
jge
insb
and
aas
push
mov
arpl
cmp
and
daa
and
pop
pop
xchg
adc
lahf
adc
sub
jbe
mov
and
sbb
push
jmp
pop
int
jne
movups
imul
jle
cmpsl
neg
movsl
iret
pop
shll
cmp
inc
rclb
loope
rcrl
jb
in
cmp
and
insl
sbb
into
fcmovbe
shll
enter
aam
imul
lods
aaa
shr
pop
leave
jnp
popf
pushf
or
popf
xchg
movsb
cwtl
stos
mov
mov
fucom
cwtl
dec
dec
int
dec
adc
aam
lret
test
inc
int
pop
add
shll
cs
insl
push
sti
imul
loopne
adc
dec
xlat
xchg
sahf
xadd
call
xlat
mov
or
sbb
adc
adc
mov
or
push
xor
lret
test
mov
adc
mov
xor
in
movsb
in
sub
dec
pop
mov
inc
adc
sbb
xchg
bound
inc
push
jge
or
inc
or
clc
repz
or
lock
push
mov
mov
repnz
mov
xor
aam
xchg
loope
repz
lock
and
jb
inc
xlat
divl
or
in
lahf
push
mov
xchg
sti
inc
imul
xchg
and
jmp
fdivs
mov
cmpsb
dec
andb
push
popf
ret
lahf
cmp
mov
lock
in
bound
mov
fs
or
jnp
in
cmpsl
xor
sbb
nop
dec
loopne
sub
push
jle
stos
sbb
add
add
das
or
cmp
pop
and
lds
xchg
aad
jae
mov
test
lock
push
ja
cmp
clc
sbb
xchg
ret
movsb
xchg
push
clc
jae
jb
jle
jmp
jg
add
mov
pop
or
lahf
testb
sub
pushf
pop
xchg
es
lret
ds
inc
data16
fistl
mov
inc
pusha
out
pop
movsb
in
xchg
insb
repnz
out
leave
mov
imul
out
mov
xor
pop
jmp
jno
call
jge
cmp
or
dec
int
pop
repz
sub
adc
out
out
sbb
cmpsb
fistpl
dec
sti
push
inc
outsl
hlt
xchg
add
sbb
movsb
icebp
xchg
imul
ficomps
and
or
jae
into
orb
cld
xchg
call
out
outsb
test
ficomps
popa
sub
rcll
roll
xlat
fwait
mov
jns
lcall
or
xchg
dec
rorl
add
rclb
ss
xorb
stc
mov
arpl
jb
cld
stc
mov
dec
movsb
mov
mov
dec
fisubs
dec
cmpl
dec
mov
icebp
ret
jno
dec
push
or
pop
adc
arpl
fnstenv
jns
mov
mov
jnp
stos
mov
adc
xchg
push
test
or
xor
stos
rcrb
daa
jno,pn
pushf
dec
pop
sti
sbb
jmp
ret
add
lcall
xor
jle
cmp
push
inc
xchg
lret
cmp
hlt
or
and
addb
stos
out
xor
xor
inc
inc
push
mov
sub
out
inc
fdivrs
sbb
xchg
loop
xchg
scas
push
shrl
and
test
mov
jg
repnz
filds
es
fists
inc
pushf
dec
or
and
sub
cmp
icebp
add
push
int
xchg
into
shll
je
sbb
jl
enter
mov
outsl
mov
adc
jp
ret
push
jmp
mov
add
popa
into
sub
sbb
push
mov
pushf
cs
ror
mov
fdivrl
lret
jnp
pop
enter
or
addr16
jne
xchg
push
ds
cwtl
cmpsl
xor
push
mov
stos
mov
dec
insb
imul
sub
scas
out
stc
flds
mov
dec
mov
out
push
push
lahf
push
int3
xlat
xor
adc
dec
and
pop
arpl
inc
and
mov
pop
xor
fldt
js
mov
cmp
pusha
aas
pop
cmp
dec
ficoml
in
push
xor
add
imulb
xchg
add
push
or
dec
hlt
insb
test
sbb
cmp
jbe
push
lods
push
mov
testb
push
mov
pop
mov
faddl
lret
jge
inc
std
aad
shrl
test
push
jmp
dec
xchg
repnz
cli
sbb
jg
pop
outsb
inc
insl
push
std
xchg
aas
mov
std
jae
mov
mov
dec
jne
in
test
js
jb
and
mov
fs
xor
xchg
je
repnz
fnsave
xor
int
addb
add
sbb
aas
lods
dec
push
push
xchg
mov
test
pushl
dec
stos
std
jo
xlat
push
lea
jbe,pt
mov
mov
lock
xor
cwtl
in
jecxz
cmpsb
cltd
ljmp
hlt
enter
dec
shll
sarb
or
rcrb
es
sti
jns
xchg
outsl
jmp
enter
mov
xor
mov
inc
stos
mov
adc
xchg
fs
test
int3
insb
pop
push
jae
jmp
pop
jns
dec
xor
pop
cmpb
das
daa
jge
add
mov
or
sub
das
fistps
jge
xchg
jno
xor
inc
loopne
xor
pop
mov
mov
mov
mov
rol
dec
movsl
push
lea
mov
test
mov
push
add
pop
stos
insl
sahf
sbb
jb
fucomp
das
push
cmp
in
and
sub
bound
int
gs
jl
ss
sbb
rclb
mov
in
fs
insl
dec
incl
jg
sbb
shl
jae
scas
push
ret
push
les
lea
push
jnp
stos
mov
cld
sub
push
negb
mov
rolb
jnp
cmp
add
lods
dec
sub
mov
mov
mov
inc
rclb
ret
testb
cmp
add
push
add
push
loopne
ss
cs
pop
xor
xchg
mov
add
pop
mov
imul
push
sahf
jno
je
out
mov
and
stc
sub
pop
ljmp
jmp
fsubrs
adc
adc
lock
inc
dec
pop
ret
lock
lret
adc
cmp
push
or
adc
scas
lret
adc
xor
add
stos
pop
adc
mov
xor
cltd
mov
mov
addb
cmpsb
mov
mov
inc
push
adc
shll
and
sahf
mov
xor
test
std
xor
aaa
mov
mov
hlt
test
cmp
dec
dec
fs
pop
bound
stos
mov
ficompl
ja
or
jo
jp
add
xchg
mov
lock
pop
add
dec
js
iret
dec
or
lar
inc
jecxz
aad
sbbl
mov
adc
outsl
cwtl
in
shl
or
mov
xchg
pop
fmul
call
add
mov
ss
mov
pop
aad
sti
lret
repnz
mov
insb
mov
sbb
jmp
lret
outsb
popf
faddl
xchg
mov
loopne
push
sbb
imul
jle
xchg
adc
pop
stos
sub
jnp
pop
or
movsb
gs
cs
sbb
outsl
mov
div
sbb
sbb
aaa
inc
jae
jo
cmp
mov
cmp
stos
push
cmp
adc
adcl
lods
mov
jns
dec
gs
cmp
mov
jbe
add
mov
popa
notb
xchg
add
cmp
icebp
and
outsl
sbb
mov
cli
fxch
xchg
faddl
and
jb
add
orb
mov
loop
dec
add
fs
dec
mov
push
ret
call
adc
or
lock
sbb
dec
mov
mov
add
and
pop
insb
jae
rep
es
push
xchg
fdivp
inc
mov
not
xchg
mov
mov
les
out
insl
je
pop
dec
mov
sub
jmp
cmp
cltd
xchg
jg
shl
into
add
jle
lcall
inc
mov
mov
outsl
outsl
loop
mov
leave
jmp
inc
push
ss
push
cmp
insb
adc
and
sahf
push
fistpl
addr16
mov
daa
dec
dec
adc
or
fimuls
je
cld
mov
push
in
fildl
and
insb
cltd
sub
js
decb
or
lret
out
jge
adc
and
mov
mov
lods
adc
pop
scas
pop
stos
loope
xchg
pop
cmp
enter
mov
out
loopne
pusha
or
sbb
and
pop
dec
repz
lods
and
dec
xchg
in
cmpl
xor
ss
adc
andl
hlt
cmpsl
pop
les
jne
and
sarl
aam
pop
popf
jge
or
mov
movl
push
imul
fcomps
jecxz
xchg
dec
sbb
adc
jae
pop
xor
jmp
loope
add
xor
sbb
int3
pop
mov
sbb
popa
pop
mov
xchg
ror
std
xchg
cmp
or
mov
inc
xor
mov
sub
add
xor
lock
pop
inc
sbb
fdivrs
bound
fs
mov
movsl
jp
mov
dec
bound
jne
popa
ss
js
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
addl
sub
push
push
movl
push
xor
push
notl
call
mov
addl
push
andl
mov
lea
subl
push
push
sbbl
push
adcl
push
adcl
call
shl
movl
cmp
je
xor
movl
jmp
orl
push
call
xorl
test
movl
jne
lea
xorl
push
push
sbbl
call
cmp
movl
jne
movl
pushl
addl
push
sbbl
call
mov
mov
sub
sub
mov
orl
movl
movl
movl
or
lea
mov
add
lea
mov
mov
sub
and
mov
andl
mov
xor
xor
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
mov
xor
xor
mov
or
mov
add
movl
mov
mov
mov
cmp
jne
sbb
mov
sub
mov
mov
adcl
xor
add
mov
xor
mov
subl
xor
add
mov
decl
mov
xorl
xor
sbbl
add
sbbl
mov
sub
mov
notl
mov
subl
mov
notl
mov
adcl
mov
mov
sbbl
mov
subl
mov
movl
sbbl
mov
movl
movl
mov
addl
xor
orl
add
jmp
decl
lea
adcl
push
xorl
push
push
push
subl
call
movl
shl
cmp
jne
decl
push
adcl
call
addl
test
jne
orl
lea
push
push
xorl
call
cmp
movl
jne
andl
mov
inc
mov
cmpl
jl
jmp
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
decl
xor
subl
lea
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
pushl
push
pushl
call
jmp
mov
addl
xor
adcl
lea
andl
push
mov
xor
mov
xorl
pushl
incl
call
add
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
jmp
xor
addl
lea
addl
mov
and
mov
xor
xor
add
mov
xor
movl
lea
movl
mov
push
movl
cmp
movl
jbe
mov
add
mov
mov
xor
xor
sbb
mov
mov
mov
or
mov
mov
adcl
sub
xor
orl
mov
subl
lea
andl
mov
lea
mov
lea
xorl
push
subl
push
push
subl
push
addl
call
shl
movl
cmp
movl
jne
push
call
xorl
test
jne
adcl
lea
push
push
call
cmp
jne
push
lea
push
subl
push
sbbl
push
push
addl
call
shl
movl
cmp
movl
jne
sbbl
push
call
test
jne
lea
adcl
push
push
andl
call
cmp
jne
addl
push
adcl
lea
adcl
push
subl
push
push
push
sbbl
call
shl
cmp
movl
jne
andl
push
negl
call
test
movl
jne
orl
lea
push
adcl
push
call
movl
cmp
movl
jne
xorl
push
lea
push
push
sbbl
push
push
call
movl
shl
cmp
jne
subl
push
adcl
call
test
jne
xorl
lea
addl
push
push
call
movl
cmp
jne
notl
push
movl
lea
push
push
push
push
addl
call
movl
shl
cmp
jne
subl
push
xorl
call
test
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
shl
movl
cmp
movl
jne
addl
push
orl
call
andl
test
movl
jne
xorl
lea
addl
push
orl
push
sbbl
call
cmp
movl
jne
push
lea
incl
push
push
push
subl
push
xorl
call
movl
shl
movl
cmp
movl
jne
push
andl
call
test
jne
lea
push
push
call
movl
cmp
movl
jne
orl
push
lea
push
push
push
addl
push
orl
call
shl
movl
cmp
movl
jne
xorl
push
orl
call
xorl
test
movl
jne
lea
incl
push
push
xorl
call
movl
cmp
jne
sbbl
push
lea
orl
push
subl
push
addl
push
push
sbbl
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
push
lea
push
push
movl
push
movl
movl
push
movl
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
andl
xor
add
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sbb
movl
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
call
mov
dec
mov
jmp
push
sub
mov
add
xor
neg
mov
adcl
push
mov
add
movl
cmp
movl
je
movl
cmpl
je
cmpl
jle
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
movsbl
mov
sub
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
sub
push
movl
mov
andl
mov
movl
adc
push
mov
neg
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
adcl
xor
mov
subl
add
add
imul
not
mov
movl
cmp
je
and
mov
mov
inc
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
mov
out
add
add
add
add
xor
add
inc
dec
add
inc
inc
add
add
add
push
push
inc
push
jg
test
inc
lcall
mov
add
add
pop
push
imul
inc
imul
inc
js
arpl
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
dec
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
fidivl
jp
stos
insl
lods
repnz
nop
cmc
test
out
mov
test
xchg
mov
jno
cmc
push
sbb
movsl
aaa
stos
lcall
mov
cwtl
rcrl
or
xchg
lcall
pop
mov
test
ss
test
mov
mov
adc
add
notb
scas
leave
test
or
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
dec
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
inc
xor
cmp
je
push
push
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
inc
xor
cmp
jne
mov
pop
pop
cmp
je
xor
xor
mov
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
dec
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
dec
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
